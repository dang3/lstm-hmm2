fcomp
decl
test
inc
add
mov
or
adc
sbb
jg
push
mov
mov
push
push
call
test
jne
pop
pop
ret
push
push
fwait
jmp
rcrl
mov
test
je
cmp
mov
and
jbe
lea
jae
sub
movzwl
je
add
fnstsw
pop
pop
xor
andb
fcomps
shlb
pop
lcall
mov
mov
add
or
dec
and
sti
enter
push
hlt
jl
pop
push
dec
lahf
xorb
sbb
les
insl
pop
push
push
push
xor
pop
fdivr
call
and
inc
add
shll
lea
inc
dec
sti
pop
cld
pop
nop
adc
incl
sbb
inc
push
mov
rcll
push
mov
je
push
push
push
mov
push
neg
mov
mov
inc
nop
jne
out
push
mov
pop
jg
mov
add
mov
inc
or
sti
jg
dec
push
xadd
dec
test
jg
add
mov
call
ret
pop
ret
testb
add
ljmp
jns
mov
mov
sahf
mov
les
int
mov
mov
xor
push
inc
and
fsub
subl
lea
xchg
fnstsw
pop
or
sbb
aaa
push
xor
fidivs
and
mov
sbb
push
and
out
jl
and
push
add
push
sbb
add
add
xchg
dec
cltd
adc
mov
push
xchg
dec
add
mov
fs
add
push
push
mov
imul
dec
add
and
rorl
mov
xor
and
sbb
push
loopne
shll
mov
adc
cmp
fst
mov
adc
xchg
mov
inc
push
or
mov
lret
lds
mov
leave
mov
fists
movsl
sbb
jle
xchg
add
push
push
push
das
orb
mov
cmp
adcb
push
cwtl
sbb
push
mov
sbb
outsl
mov
enter
sbb
push
sbb
pushf
xor
into
nop
pop
adc
mov
into
mov
dec
test
adc
je
adc
pop
cmpsb
jbe
lcall
add
ss
cs
push
push
push
sub
and
mov
dec
cmp
add
add
dec
adc
adc
shll
setnp
push
into
les
sub
fs
push
push
and
ljmp
pop
xor
push
inc
push
mov
lea
dec
mov
or
mov
pop
sahf
pop
fisttps
mov
xor
cmp
or
sbb
pusha
sbb
mov
inc
inc
ds
xor
divb
aas
mov
push
mov
and
mov
orb
pop
enter
mov
mov
stos
pop
out
cld
ss
lods
mov
pop
ret
xor
push
inc
push
dec
xchg
test
dec
push
sub
into
pop
push
sub
ret
and
push
ds
jl
and
les
inc
les
leave
jmp
cmp
ljmp
add
das
push
cmp
sub
mov
adc
sub
jl
mov
scas
insb
add
inc
ds
mov
and
add
inc
xchg
imul
xor
and
push
int
and
push
add
imull
push
mov
push
stos
cmp
or
test
ficomps
mov
das
dec
jne
loopne
push
dec
in
dec
inc
pop
jle
es
push
add
call
inc
mov
jecxz
incl
out
fstpl
mov
pushf
sti
loope
and
dec
add
aas
sub
out
roll
hlt
nop
test
jg
rorl
cmp
mov
mov
push
push
inc
ds
adc
inc
add
dec
push
add
xorl
cmovo
imul
or
inc
repnz
dec
or
inc
inc
and
loope
and
ret
cwtl
lret
test
ret
push
lea
push
mov
fistps
ds
xor
dec
add
push
jge
xorb
mov
jg
dec
or
test
push
adc
cmpl
sbb
pop
and
add
mov
popf
mov
pop
mov
jb
sub
insl
pop
pop
sbb
xchg
lret
and
pop
and
and
add
movb
xor
cmp
imul
lods
es
or
push
add
push
push
nop
cmp
mov
cmp
decb
shll
sub
mov
push
pusha
sub
leave
scas
mov
sete
test
test
inc
leave
sbb
orb
and
into
push
pop
mov
iret
xor
adc
pusha
insb
pop
test
xor
and
push
movsl
add
cmp
inc
push
cmc
inc
dec
or
pusha
vmovmskps
sub
push
nop
test
pop
das
inc
lock
jne
push
jle
dec
push
sub
je
adc
adc
mov
push
push
or
out
and
pop
xchg
adc
push
adc
test
cmp
pop
and
fwait
stos
and
mov
jbe
xchg
add
sub
je
inc
in
adc
sub
or
xor
cmpsb
jo
push
ljmp
movsb
test
push
ds
push
shl
add
cmpsl
loop
and
sbb
sbbl
sbb
std
cmpb
fists
cmp
xchg
pop
cmp
cs
cmp
sbb
mov
xchg
jns
jle
cmpl
scas
mov
mov
sbb
lea
rcrl
cmp
sbbl
mov
adc
mov
push
push
pop
push
adc
adc
adc
cltd
outsl
sbb
leave
mov
add
mov
out
sti
add
push
mov
data16
jecxz
shll
mov
inc
add
and
out
xor
push
sub
in
lahf
into
mov
xor
push
inc
jg
inc
mov
cmp
mov
cmpsl
sbb
push
push
js
rcrl
xchg
bound
xchg
add
mov
sbb
call
push
dec
mov
pushf
inc
rorb
sub
xlat
cmp
nop
mov
mov
rolb
test
xchg
or
pop
adc
adc
push
call
fcoml
push
push
movsb
imul
add
dec
xchg
push
mov
xchg
mov
mov
push
inc
mov
add
loop
adc
xchg
sbb
adc
lret
push
loope
cld
daa
add
adc
popf
cmpsl
jle
or
cltd
das
out
addl
mov
add
adc
jl
lahf
mov
outsl
jmp
inc
mov
xchg
xor
in
push
mov
adc
sub
ret
aaa
push
add
sbbl
lea
pop
pop
icebp
jns
sahf
je
jmp
adc
les
dec
popf
lret
push
lcall
mov
jo
push
mov
dec
lods
mov
xorl
dec
test
jg
test
xchg
jmp
cmc
lea
insb
mov
outsl
mov
xor
ljmp
mov
or
ret
jo
push
push
sarl
dec
cmp
push
stos
and
outsb
in
test
faddp
sbb
push
gs
ss
jb
aam
cmp
mov
add
lods
nop
cmpsl
pop
inc
add
ret
pop
inc
adc
jle
jne
mov
clc
les
dec
addr16
and
mov
sbb
push
jg
leave
fmuls
je
sub
cmp
je
or
pop
jmp
sub
sbb
subl
cwtl
fadds
inc
mov
mov
adc
out
mov
sbbl
shrb
outsb
lahf
push
loopne
cmp
sub
pop
add
sub
adc
push
les
call
xor
adc
ljmp
add
aad
cmp
jl
test
incl
push
push
inc
scas
cmp
push
js
jne
sbb
jbe
push
push
xor
or
sbb
push
mov
pop
loope
or
adc
xchg
dec
faddl
ret
enter
aaa
adc
or
icebp
push
jo
loope
rorb
loopne
inc
fbld
and
jne
stos
push
and
mov
and
int3
xchg
jle
lahf
divb
cli
into
sbb
jmp
ss
mov
lea
sti
ljmp
add
jne
sub
push
push
inc
sbb
in
cs
adcb
js
or
lahf
push
xchg
cmp
out
and
push
mov
outsl
ja
mov
jne
shlb
out
lea
mov
addr16
fbstp
iret
cmp
sbb
inc
movsb
add
jge
xor
xchg
decb
jl
repnz
push
loopne
push
stc
pop
insb
pop
pop
ret
mov
ss
adc
inc
cmovg
push
jl
rcrl
mov
cwtl
mov
ret
rol
pop
movsl
pop
jne
pop
or
dec
pop
pop
lahf
or
prefetchw
or
push
mov
xlat
sub
rcrb
fists
addb
orb
into
clc
out
pop
cld
or
mov
sub
test
jge
push
call
mov
or
mov
decl
add
jg
cmp
pop
mov
inc
clc
mov
lea
push
or
cmp
faddl
push
xchg
pop
jl
ds
das
jl
clc
ja
add
jmp
insb
fcoml
add
push
mov
fildl
cwtl
jl
inc
jo
jg
mov
stos
pop
fsubrs
movb
pop
pop
or
or
ret
mov
mov
testb
cmp
js
push
sub
pop
sub
add
jae
sub
in
inc
hlt
jnp
pop
mov
sbb
or
cmc
mov
xor
test
cmp
push
dec
mov
scas
push
clc
pusha
adc
aam
cmpsb
inc
mov
lock
sub
or
jge
pop
movsb
loop
sbb
push
and
fnstcw
sbb
loope
or
fcompl
data16
or
pop
mov
jne
push
aaa
sbb
ficoml
inc
clc
xor
adc
cmp
ja
adc
lea
push
push
dec
fsubs
hlt
jnp
mov
push
xor
push
cli
xchg
dec
pop
popa
pushf
adc
add
cwtl
mov
fsqrt
mov
es
mov
imul
shrb
loop
or
loopne
mov
rolb
push
or
in
sbb
push
or
scas
aam
inc
lcall
lea
adc
outsb
mov
fmull
popa
or
out
ja
or
add
nop
or
js
dec
movsb
ret
lcall
mov
push
mov
cwtl
push
inc
loop
js
jne
xchg
or
mov
add
outsl
popa
addb
es
std
inc
incl
sub
cmp
je
cmpl
lea
jl
mov
imul
push
push
jne
push
mov
mov
loope
add
rorb
cmpb
pop
or
push
fists
xchg
lea
daa
or
jg
repnz
xor
push
or
inc
or
push
xchg
in
test
lahf
loopne
fcoms
call
push
stc
imul
xchg
or
inc
inc
or
shlb
adc
push
fistl
hlt
dec
mov
pop
inc
mov
test
or
pushf
test
jne
pop
cld
and
push
push
ret
pop
cltd
add
mov
mov
pop
push
push
lea
sub
and
ret
mov
mov
shrb
add
stos
mov
cmpb
adc
jns
lods
divl
mov
clc
repnz
jge
fdiv
add
dec
adc
adc
cmpsb
clc
ret
lods
mov
lea
and
shrl
mov
out
fiaddl
es
mov
add
repnz
inc
add
loopne
fmull
mov
jbe
out
or
ret
pop
push
pop
cmp
add
shlb
jbe
mov
ret
and
and
jo
jne
dec
outsb
adc
push
push
decb
xor
stc
ret
mov
enter
add
rorl
add
inc
push
add
ret
push
mov
adc
push
xchg
mov
jmp
push
inc
fwait
daa
sub
std
orl
adc
cmp
lret
pop
cmpsl
or
or
sbb
rcrl
lret
pop
imul
fdiv
sbb
mov
aaa
cld
loope
cmp
and
cmp
rcrl
loopne
js
inc
lahf
mov
xchg
shlb
lock
pop
sbb
fnstsw
je
push
adc
push
mov
sbb
enter
push
cwtl
inc
push
add
test
or
and
popa
adc
insl
insl
sarl
je
pop
pop
out
xor
sub
jmp
mov
mov
roll
xor
std
repz
mov
pand
pop
pop
push
cmp
mov
fucom
fstp
push
push
pop
push
xor
or
lods
pushf
rcr
inc
sub
cld
mov
in
rorb
mov
sub
addps
into
xor
cmc
stos
sub
sar
jb
pop
cmp
nop
lahf
jnp
mov
test
pop
or
icebp
mov
js
ret
pusha
cmpsb
adc
cmp
les
cmp
cmp
insb
and
push
and
ja
test
repz
pusha
and
iret
mulb
add
add
fistpll
add
int3
mov
popf
or
imulb
sbb
mov
or
andl
jo
data16
pop
sti
incb
cmp
jne
xor
push
push
dec
pop
outsb
or
sbb
outsl
aaa
cmp
xlat
push
lea
add
ret
clc
cwtl
inc
pop
sahf
aad
inc
mov
and
gs
clc
and
or
or
rcll
sbb
xor
inc
icebp
push
push
sbb
inc
mov
ja
push
mov
loopne
jg
xchg
mov
mov
mov
push
sbb
inc
sbb
aas
and
dec
insb
jg
and
jb
xchg
in
pop
sbb
mov
sbb
add
cld
ret
lahf
or
push
jns
xchg
push
into
jb
or
push
iret
or
imul
rcr
ret
mov
hlt
je
mov
aam
cmp
mov
or
incl
and
je
or
scas
or
jne
lahf
aam
push
push
inc
mov
mov
ret
cmp
dec
sbb
cld
je
xchg
jl
jb
stos
push
adc
sub
in
cmp
adc
ret
cmpl
and
jle
pushl
dec
or
jmp
ret
pop
add
sbb
ret
inc
mov
add
cmp
fidivrs
mov
push
mov
jbe
inc
pop
and
mov
or
ja
je
mov
dec
sub
je
adc
pop
mov
mov
push
fs
dec
sbb
and
cmpl
imul
xchg
lock
testb
add
cmp
or
or
mov
dec
adc
pop
mov
daa
add
repnz
dec
mov
sbb
and
sbb
inc
jp
outsb
mov
aaa
rcrl
mov
jb
std
jnp
pop
push
mov
aas
je
jle
cmp
movzbl
add
sbb
and
mov
sub
jnp
jg
fbstp
rorb
jp
jl
push
lea
in
lret
call
mov
sbb
pushf
push
mov
cmpb
fsubrp
jecxz
mov
xor
scas
loopne
std
orb
adc
jg
pop
fnstcw
inc
sbb
xchg
fldz
movl
sahf
or
mov
mov
sbb
sub
enter
lods
xor
je
fdivl
mov
dec
sbb
in
test
sahf
out
pop
xor
shrb
int
fisttps
lahf
pop
pusha
adc
fwait
push
and
xor
pop
and
cwtl
or
jae
cmp
lock
ja
fwait
push
adc
and
sahf
in
sahf
in
or
adc
lret
hlt
clc
adc
add
cs
pusha
push
adc
or
adc
mov
scas
mov
xchg
ljmp
push
aad
outsb
dec
dec
mov
pop
push
lea
jmp
decl
add
push
lea
xchg
cmp
push
sbb
dec
sahf
dec
aam
les
and
pop
push
pop
sahf
cmp
sar
mov
enter
add
movl
pusha
pop
adc
sbb
sbb
je
cmc
cmpsl
stos
jge
mov
add
fiaddl
mov
xchg
mov
sti
dec
jg
add
sbbb
jle
lock
push
stos
sti
cmpsl
insl
push
jle
ficompl
add
pushf
and
clc
andl
test
xor
jmp
or
adc
cmpsl
push
outsb
sub
inc
mov
in
and
leave
mov
movsl
mov
push
stos
cmp
and
lret
imul
rolb
push
lock
mov
in
add
sbb
xchg
test
push
jno
mov
js
cmp
sbb
out
dec
xchg
jb
or
push
outsb
aam
sub
lock
add
push
insb
aas
icebp
xchg
shrb
dec
or
dec
and
mov
xchg
push
jg
lea
pop
dec
pop
add
rcpps
xchg
mov
push
push
inc
xchg
rcrl
je
lea
in
or
rolb
add
mov
sub
pop
ds
pushf
push
mov
jge
push
jle
sahf
pop
mov
sub
mov
inc
cs
push
mov
jne
mov
cli
adc
pop
sbb
test
adc
sub
xchg
aad
xor
ret
add
scas
push
push
lea
pop
insb
adc
mov
aas
mov
inc
mov
insb
push
dec
repz
adc
dec
mov
push
push
xor
hlt
inc
dec
adcb
je
sub
out
daa
loop
or
rcrl
shll
xor
and
mov
and
jmp
mov
add
sahf
inc
shrl
inc
add
mov
cmp
pop
ret
lahf
jno
xchg
daa
fmuls
lret
inc
jbe
fadd
sti
mov
jbe
cwtl
push
sbb
push
adc
push
xor
cmp
shr
dec
inc
or
ffree
xor
sub
push
push
mov
cmp
popf
xchg
adc
pop
loope
pop
xor
pushf
inc
neg
sbb
pop
pop
icebp
bound
push
add
cmp
sbb
orb
orl
push
addb
adc
scas
sbb
cwtl
push
cmpsl
popa
cmp
fnstsw
dec
jno
sub
test
add
jecxz
sub
mov
xchg
push
out
mov
scas
mov
jo
mov
fimuls
movsb
cmp
xor
and
jae
aas
pushf
loopne
inc
jecxz
or
push
adc
clc
cwtl
add
jmp
lret
xor
ret
pop
push
push
push
and
push
add
cwtl
aas
aam
jl
cs
jo
lret
push
mov
mov
xor
notl
pop
das
pushf
mov
or
push
pop
xlat
loop
pop
or
mov
loop
add
push
sub
das
pusha
jne
add
add
lahf
sbb
ret
das
jbe
call
lea
jmp
pop
sub
test
lcall
xchg
cwtl
jb
pop
cmpsl
mov
xor
sbb
jecxz
push
or
test
push
notl
popl
mov
hlt
test
adc
add
xchg
xchg
push
orb
adc
inc
push
flds
mov
sub
ret
call
das
lret
mov
xor
add
push
xchg
sub
mov
cmp
sub
incl
jne
push
mov
icebp
or
pop
pusha
and
push
pop
sub
stos
or
push
jb
sub
pop
push
fstpl
shufps
mov
fwait
imul
aad
dec
cmp
add
in
rorb
enter
loope
add
sbb
adc
jns
lods
and
or
cmp
negl
push
ljmp
shl
fisttps
movb
sub
push
loop
push
dec
sbb
dec
lahf
ss
ljmp
sub
push
push
mov
js
inc
inc
lahf
shrb
push
rclb
push
pusha
movsl
jne
adc
test
push
popa
insl
jge
push
push
nop
cmp
sub
push
push
lea
aam
fcoms
cld
scas
cmp
cmp
loope
ret
mov
push
jo
sub
push
xor
xchg
or
nop
jmp
fstpl
je
jno
xor
add
test
pusha
push
adc
andl
je
sub
orl
roll
adc
xor
rorl
js
popa
push
add
or
call
mov
add
cmpsl
push
push
push
and
jo
jns
sahf
daa
push
sbb
dec
jo
inc
add
push
xlat
ja
mov
mov
int
adc
sbbl
xor
movsl
sbb
imul
clc
paddusw
fmull
add
rcrb
mov
cmovbe
cltd
mov
es
nop
or
dec
rcll
adc
push
xchg
adc
adc
scas
add
add
mov
popa
mov
enter
push
ret
or
and
adc
or
jp
test
jp
inc
sub
daa
mov
or
pop
imul
xor
push
add
push
mov
add
xchg
inc
into
loopne
and
jp
loop
xchg
cmp
sbb
or
in
or
jne
in
es
add
mov
dec
cmp
cmpb
xchg
jno
adc
xchg
sub
adc
or
ret
imul
adc
push
xor
fildl
push
push
lds
xor
cmp
cld
cld
add
mov
je
mov
jge
call
lock
push
stos
loopne
or
or
sub
sub
push
pop
inc
test
add
cmp
fs
mov
push
push
and
xchg
add
xchg
mov
pop
iret
add
fdivl
outsb
lret
addb
mov
shll
dec
sbb
int3
fwait
push
mov
int3
dec
push
push
push
lods
xchg
push
lea
test
push
shl
jmp
js
test
imul
mov
into
subb
inc
push
sbb
add
push
loopne
cld
pusha
movsl
jno
loop
cltd
popa
dec
xor
or
out
movsl
add
enter
sbb
popa
mov
push
and
inc
or
les
and
xor
test
push
sahf
rolb
lahf
test
fadd
cltd
and
add
clc
or
insl
inc
mov
pop
adc
movsb
xor
add
data16
push
testl
add
rorl
adc
out
sar
mov
rol
ja
in
pop
add
mov
imul
push
lahf
clc
cmpsl
mov
jle
cmp
xchg
mov
jmp
ds
sub
mov
and
pop
dec
stc
add
cs
push
push
enter
scas
mov
sub
jo
pushf
cmp
je
cmpl
inc
aaa
int3
pop
cmp
cmp
jne
push
imul
adc
ret
xlat
dec
arpl
pop
jmp
das
pop
out
movd
sti
lea
or
push
jne
or
stos
outsl
sbb
cmp
ret
out
cmp
sti
addb
dec
add
mov
inc
mov
dec
add
rolb
xchg
sbb
inc
or
and
or
sarb
fldz
data16
push
ljmp
ret
sub
insl
cld
pop
movsl
sbb
push
adc
fstpt
mov
mov
cltd
idivl
push
aaa
mov
ds
and
lods
ja
sub
sbb
loope
scas
jmp
jbe
popf
mov
or
sbb
add
cmp
and
xor
sbb
xchg
sbb
and
sub
inc
mov
ljmp
mov
imul
jno
jae
dec
sub
mov
out
jg
jmp
js
mov
fwait
pop
add
adc
nopl
mov
add
mov
enter
mov
fdivrp
shll
mov
test
shr
inc
pushf
sbb
mov
mov
mov
ja
dec
jno
add
push
fcoms
jmp
add
pop
mov
rorb
out
fidivl
or
xor
mov
add
inc
fcomps
sub
cmp
movb
cwtl
js
push
jge
ret
cltd
push
cli
rclb
adc
mov
jbe
mov
cs
adc
and
cmp
ss
or
mov
call
je
sbb
xchg
js
sbb
mov
je
movsb
or
xchg
cmp
adc
and
subl
xor
sub
fistl
add
dec
adcl
movsl
jno
and
rorb
lods
add
and
push
pop
adc
adc
sbb
add
dec
and
invd
sbb
xchg
test
sub
inc
repnz
xor
mov
mov
xchg
sbb
and
loopne
incl
or
adc
scas
in
sbb
or
sbb
mov
and
sub
xchg
les
mov
push
lea
pop
clc
or
mov
jb
push
pop
or
dec
add
mov
or
pop
add
add
push
test
and
test
je
xor
mov
jne
out
xchg
push
and
lea
push
push
loope
xor
mov
jg
int
xchg
test
ds
mov
andb
dec
leave
in
mov
sahf
movsl
jo
dec
adc
mov
inc
adc
adc
push
push
popf
inc
in
leave
cmpsb
lods
inc
cmp
sub
inc
push
sbb
jmp
orl
shrl
pop
mov
jl
out
mov
lea
leave
adc
add
cmp
ficomps
lcall
pop
push
dec
mov
repnz
stc
mov
jle
mov
cltd
push
pop
lahf
cmp
and
je
cmp
movsl
mov
pop
ret
scas
inc
cs
lahf
or
or
sbb
dec
and
inc
imul
or
or
cli
add
push
clc
ffree
scas
push
sub
clc
setb
dec
push
mov
sub
cmp
movsbl
lds
and
add
mov
inc
js
lret
mov
data16
data16
pop
pop
xchg
push
hlt
inc
or
pop
movsl
jb
lock
push
add
inc
sub
push
push
aam
lea
push
adc
aad
push
movsl
push
mov
es
pop
pop
fninit
adc
mov
andb
jecxz
stos
mov
xor
sbb
aam
push
pop
cmp
push
out
inc
fwait
dec
inc
push
adc
and
fmuls
lcall
push
add
shlb
rclb
ss
push
cmpsb
jb
or
push
push
dec
and
add
pusha
pop
inc
fdivrl
in
sub
add
adc
jl
dec
dec
iret
test
add
add
cmp
mov
pop
cltd
lea
pop
or
pop
cmp
ja
movzbl
cwtl
into
in
push
lcall
sbb
imul
xchg
sarl
iret
jnp
ja
orl
adc
sub
add
add
fwait
xor
inc
nop
push
adc
jae
mov
xchg
add
mov
mov
and
or
sub
push
add
inc
sub
inc
in
xor
and
jmp
cltd
nop
dec
dec
pusha
jmp
das
sbb
and
sub
int3
inc
xor
sarb
xor
sub
shrl
and
jo
push
pop
nop
push
in
dec
jp
mov
push
imulb
sub
andl
mov
add
movsb
es
daa
ret
xchg
rolb
sub
cmc
push
shlb
add
sahf
add
int
movsl
adc
ds
pusha
dec
mov
jl
xchg
jne
popf
sarb
mov
sbb
jmp
mov
sbbb
mov
mov
push
or
dec
mov
sbb
je
stos
xchg
dec
push
push
jne
sub
sar
cmpsb
or
jo
mov
jmp
jmp
push
adc
pslld
pop
dec
push
pop
and
rclb
or
jbe
int
ljmp
dec
add
mov
xchg
shrb
sub
and
pusha
rcrl
push
ds
mov
call
inc
lahf
nop
and
leave
es
jo
ror
mov
mov
nop
mov
xor
mov
and
ljmp
push
and
pop
aam
push
mov
mov
mov
aas
repnz
andb
dec
inc
push
lahf
out
ds
sub
popf
or
push
or
adc
push
xor
insl
cli
sbb
cmp
cmp
dec
mov
es
push
aad
jp
leave
or
dec
dec
pop
jg
xchg
sub
jo
pop
inc
add
pop
nop
test
or
inc
pop
sbb
push
inc
sti
and
dec
add
test
ja
inc
mov
daa
adcb
data16
aam
adc
lret
push
push
das
sub
or
add
add
int3
cmp
jne
or
in
or
mov
push
mov
je
push
add
add
add
jns
scas
mov
fmuls
or
xor
add
xchg
scas
dec
adc
and
push
xchg
push
fisttpl
xchg
and
and
xor
add
jo
add
xchg
je
sbb
cmp
and
jb
mov
inc
push
add
jne
adc
mov
inc
js
dec
cs
lods
cltd
repz
pop
call
inc
add
mov
adc
jno
inc
sub
mov
add
or
add
push
mov
je
popf
mov
push
add
ret
mov
or
insb
in
je
test
mov
mov
inc
es
cmpsl
lcall
mov
test
push
add
push
cvtpi2ps
clc
sbb
icebp
add
leave
xchg
pop
das
data16
mov
pop
sub
stos
pop
pop
insl
mov
mov
repnz
pop
out
pushf
sbb
adc
and
ds
adc
push
mov
cs
sbb
pop
push
mov
cmpsb
and
jge
out
pop
pusha
xchg
sub
dec
mov
sub
insb
push
xchg
bound
cmp
dec
into
rorb
jo
mov
mov
add
ja
pop
loop
out
adc
cmpsl
rclb
adc
add
push
add
or
adc
insb
dec
mov
jp
sbb
insl
push
int3
ljmp
add
xchg
push
push
mov
imul
in
or
sub
movsb
cmp
mov
and
jb
add
add
or
xor
push
ret
sarl
hlt
insb
in
pop
add
adcb
add
adc
icebp
inc
mov
test
sbb
test
aad
jle
bound
fwait
iret
clc
adc
add
push
xor
sub
enter
push
xchg
ljmp
ret
int3
mov
xor
push
or
adc
mov
xor
adc
sbb
pop
jp
or
jge
jne
jo
or
push
lret
dec
push
push
pop
fdivrs
push
sbb
cmp
sahf
sbb
mov
adc
add
fldl
test
xor
adc
movsl
xlat
sbb
add
movsl
add
stc
mov
add
push
jae
cmp
push
push
xchg
pop
add
or
jne
das
push
test
ret
mov
mov
je
ret
mov
addl
insb
rclb
jne
add
popf
das
subb
push
dec
push
ds
out
add
fwait
cmp
sub
shrl
mov
push
pop
aam
test
cltd
lahf
popa
pop
imul
push
fmull
push
mov
stc
push
shlb
lahf
push
sbb
les
dec
pushf
sbb
ss
push
fwait
xor
rorb
xchg
push
jle
jae
cmp
adc
shlb
adc
sbb
mov
inc
mov
xor
addb
mov
add
mov
enter
jmp
sbb
pop
adc
and
xchg
mov
push
pop
sbb
faddl
and
dec
adc
pusha
icebp
xchg
jbe
cmp
push
add
idivl
enter
push
push
and
inc
mov
xlat
pop
or
rolb
jmp
sbbb
adc
test
addl
inc
stos
inc
or
mov
bound
dec
and
loope
gs
mov
xchg
cmp
dec
adc
jmp
and
and
and
orl
dec
and
mov
ds
nop
adc
daa
jmp
shlb
subl
dec
test
sbb
imul
xor
ljmp
xorb
push
mov
and
fists
push
sbb
pop
sub
cmp
xchg
add
fiadds
fstps
jmp
stos
jp
mov
fsts
in
push
outsl
dec
add
adc
fsubr
add
dec
pop
cli
test
dec
lock
add
test
dec
stos
or
dec
push
mov
nop
das
cmp
push
pop
rolb
pushf
bound
mov
sbb
xor
adc
enter
sbb
push
repnz
shrb
push
push
and
inc
cltd
sbbb
inc
add
push
adc
adc
sbb
lods
mov
repnz
cmp
cmp
fldcw
xor
add
or
shrl
fnsave
std
add
ds
inc
xor
push
cmpb
push
adc
and
test
cs
in
ljmp
test
pop
cmp
dec
fmuls
pop
add
ds
adc
subb
push
cmp
push
jl
sbb
push
jb
mov
or
subb
pop
and
aaa
push
rolb
ds
or
nop
test
add
pop
nop
pop
adc
pusha
cmp
sbb
push
test
sub
sbb
cld
clc
bnd
fidivl
pop
add
or
sub
mov
xor
xchg
je
mov
es
mov
lock
xor
loope
xor
fwait
xor
mov
pop
jmp
iret
inc
cmp
push
xor
mov
subb
test
insb
or
xchg
add
adc
insl
xor
sub
lcall
push
xor
adc
or
insl
dec
jge
aad
mov
push
or
or
dec
pop
add
movl
and
sahf
mov
stos
cmp
pusha
and
cltd
dec
sub
dec
cmp
es
imul
inc
lods
mov
adc
shrb
pop
inc
ficoml
add
pusha
pop
add
pop
cmpsl
jno
mov
jo
mov
add
pop
or
mov
lahf
xor
fdiv
add
test
cmp
adc
xor
mov
cmp
cmp
loopne
adc
push
lods
iret
mov
int3
xchg
inc
pop
mov
js
popa
gs
mov
iret
lea
mov
xchg
outsb
pop
rcr
call
add
hlt
dec
or
add
mov
stos
in
push
js
pop
outsb
inc
sub
pop
aad
mov
ss
mov
jp
pop
fsubrl
ss
iret
mov
xchg
and
xor
clc
movsb
sub
pop
xor
and
push
adc
mov
jmp
hlt
push
mov
in
movsb
sbb
adc
pushf
pop
fadd
fldl
enter
setno
inc
xchg
inc
mov
fsubl
mov
je
jmp
xor
clc
mov
add
pop
in
and
or
into
mov
int
mov
push
jp
loopne
js
out
sub
inc
dec
inc
cmp
into
xor
fld
stos
pop
fwait
insb
out
or
pop
call
out
shlb
mov
and
pusha
xchg
aam
pop
call
jecxz
js
sub
ljmp
cmp
sbb
sbb
or
rorb
sbb
test
jg
popf
or
push
rcrb
cli
jno
in
in
sub
in
movsl
xor
arpl
and
cmpsl
les
ret
add
into
and
mov
pop
pop
xchg
pop
mov
leave
loopne
add
push
test
je
jne
pop
shrb
or
or
cmp
push
rolb
dec
dec
push
mov
pop
or
es
sub
jo
mov
push
jl
push
mov
addb
hlt
dec
push
sbb
sub
mov
and
ret
adc
dec
add
loopne
jl
gs
or
les
sbb
xor
sub
fists
add
sub
add
std
inc
jo
fs
pop
xchg
imul
ds
or
es
mov
push
inc
jp
sti
jg
in
xor
mov
fwait
out
mov
push
push
push
mov
leave
out
jne
push
cmp
pushf
or
cs
cs
imull
inc
es
add
adc
aaa
dec
nop
cmpsb
cmp
dec
adc
sbb
cs
adcl
mov
adc
push
adc
in
inc
dec
pusha
and
enter
filds
push
or
es
jae
adc
sub
inc
inc
in
xor
or
pop
add
adc
and
test
insb
mov
adc
in
pop
jg
pop
repnz
nop
add
xlat
or
push
jns
test
jns
xor
jp
sub
add
push
adc
inc
dec
xor
add
inc
mov
ret
imul
mov
or
push
xchg
test
add
cmp
add
jmp
xchg
std
adc
xchg
or
es
dec
sbb
xchg
cmp
add
popa
adcb
sti
loop
push
sub
or
mov
insb
out
sbb
xorb
lahf
lock
xor
and
inc
fucompp
jmp
mov
cmp
in
lret
push
repz
cmpl
nop
sub
les
in
sbbb
and
and
adc
test
jns
pop
or
movsb
shll
mov
jl
test
clc
cmp
jno
mov
inc
xchg
into
mov
test
cmp
push
dec
stos
les
push
outsl
and
sbb
mov
cmp
das
pop
xor
push
cmp
adcl
add
pop
mov
orl
out
jnp
out
add
pop
mov
jp
int
adc
jmp
fst
jmp
add
add
cmp
jae
in
add
into
mov
dec
jae
or
cld
nop
loopne
outsl
mov
pop
or
xor
push
and
or
mov
push
sbb
std
gs
xchg
sbb
icebp
push
ds
dec
fs
add
push
sub
out
inc
sbb
fbstp
popa
sbb
cmp
dec
fs
mov
rclb
lret
lcall
je
inc
push
fldenv
sub
fnstenv
aam
xchg
xor
sub
add
addl
repnz
sub
out
pop
xchg
dec
jno
andb
insb
sbb
je
adc
iret
frstor
test
stos
mov
jg
push
and
inc
jp,pn
adc
mov
adc
ja
setne
xorb
jle
dec
clc
push
aas
and
or
jge
push
lock
adc
mov
or
fwait
dec
ljmp
out
inc
jle
jg
push
add
push
aaa
pop
je
sbb
pop
and
jl
fucomi
xchg
or
and
out
sub
jne
push
pushf
fs
aas
pop
jge
incl
mov
jmp
mov
lea
inc
test
jmp
sbb
xchg
js
shlb
add
jb
cmp
out
pop
and
push
sub
clc
sub
push
push
cmp
fadds
push
sub
mov
inc
fdivl
pop
aam
push
xor
adc
js
pop
lock
loop
or
inc
add
xchg
cmp
xlat
mov
push
lea
nop
add
int
jbe
add
cld
call
adc
test
jle
roll
mov
mov
sub
cmp
xor
and
dec
mov
push
add
aad
les
popa
sti
pop
jno
sbb
shlb
ret
cltd
lea
add
stos
in
add
and
pop
and
sbb
cmp
daa
movsb
dec
cmp
nop
stos
pop
pop
or
mov
fdivrl
and
ss
xor
inc
cmp
adc
sub
mov
pop
add
fimuls
arpl
jno
dec
and
lds
xchg
jbe
mov
mov
cmc
dec
sbb
jns
cwtl
subw
out
mov
out
cmp
mov
and
inc
in
sub
dec
jo
add
jae
jmp
dec
pop
js
push
adc
pop
je
push
dec
push
lock
jae
mov
xor
jo,pt
aam
cs
outsb
mov
xchg
xlat
jecxz,pn
push
mov
add
add
adc
clc
and
mov
cmpl
scas
push
add
push
and
push
dec
cmc
adc
pop
addb
ss
subb
add
inc
outsb
add
pusha
arpl
cltd
push
jae
sub
push
ficomps
push
mov
xchg
xchg
push
add
adc
pop
jg
popa
scas
push
test
inc
and
and
inc
pusha
pop
xchg
shll
ja
stos
sub
sbbb
es
loop
mov
jle
aas
js
cmp
mov
cld
lea
sub
clc
sub
dec
jo
sbb
adcl
in
jo
js
xlat
dec
sbb
aam
xor
xor
ret
mov
and
sub
aad
jecxz
add
cwtl
sub
test
sbb
sbb
push
cmpb
cmpb
adc
add
loopne
test
scas
ljmp
push
pop
or
fimuls
loope
or
aad
or
jmp
mov
sahf
or
jb
je
int
test
push
push
aad
add
aam
dec
sub
push
push
or
xor
aad
aas
add
mov
ds
pushf
xorl
inc
add
out
dec
mov
stos
loope
xor
test
adc
stc
sub
sbb
mov
inc
dec
imul
dec
xchg
mov
jecxz
jmp
sbb
subb
add
or
and
pop
inc
pop
sbb
insl
sbb
sbb
movsl
mov
pop
hlt
add
ret
je
inc
cmpsl
push
popa
sub
xchg
xlat
insb
loopne
push
aas
push
push
shrb
fsubrs
inc
loope
jmp
push
cmp
test
mov
out
out
rcrb
and
xchg
jmp
sbb
fwait
pop
aam
xor
push
push
mov
aam
cmp
adc
jo
sub
sub
leave
sub
and
and
jecxz
xchg
pop
roll
outsb
jmp
pop
add
mov
or
loop
clc
inc
add
jns
js
sete
mov
inc
mov
push
movsl
test
test
sbb
sbbl
add
dec
loope
xchg
pushf
mov
inc
rcll
or
jle
sub
in
and
aad
adc
ret
incl
inc
mov
inc
pop
push
add
clc
sub
sbb
outsl
filds
add
jg
pop
or
sub
inc
mov
sub
test
dec
jnp
lock
outsl
mov
sub
test
cmp
cmp
lea
ret
les
adc
mul
bound
push
push
or
dec
xor
fwait
out
and
ss
and
out
gs
lds
or
inc
jb
rorl
dec
inc
add
lahf
push
test
push
and
mov
adc
and
movsb
repz
lret
adc
hlt
rorl
nopl
mov
xchg
adcl
setge
pop
jmp
shrb
cmp
cmpsb
pop
sub
sub
test
add
sub
andps
lock
jle
jl
xchg
pop
subl
test
cmp
and
fcomps
inc
ret
sbb
and
xchg
and
loope
cmp
mov
cmp
cmp
lahf
and
or
pusha
sbb
cmpl
push
scas
test
shlb
sub
or
cmp
adc
scas
cmp
adc
inc
adc
mov
push
movsb
mov
push
dec
add
cmp
add
jle
stos
inc
scas
dec
sbb
or
shlb
dec
insl
loopne
leave
and
mov
cmpb
jmp
sbb
and
push
sbb
mov
push
cmp
pop
pcmpgtb
xor
adc
mov
call
dec
pop
cltd
or
cwtl
mov
pop
or
dec
adc
cmpsl
xor
inc
scas
inc
fs
mov
cmp
push
mov
stc
fiaddl
push
icebp
sbb
add
mov
dec
pop
push
push
mov
imul
lea
mov
inc
scas
adc
pop
repnz
inc
sahf
inc
orl
adc
push
pop
pop
inc
imul
xor
pop
inc
outsl
and
and
sbb
adcl
inc
testl
sbb
and
out
push
testb
ret
mov
jbe
clc
push
push
mov
lcall
mov
dec
mov
xor
mov
mov
out
movzwl
or
ret
xor
insb
sub
mov
sub
shr
loopne
loopne
pop
mov
shrb
pop
inc
rcll
out
mov
test
decb
jmp
xor
mov
ret
pushf
adc
add
add
inc
sub
mov
jg
pop
jp
cmp
xor
dec
xor
hlt
cmp
jne
sbb
inc
in
ret
mov
inc
jp
ja
sahf
or
stc
bnd
add
movsl
xor
lock
adc
inc
ror
aaa
mov
sti
cmp
add
movsb
rcll
and
test
adc
xchg
sub
mov
cwtl
sbb
jmp
cld
mov
sbb
outsb
add
or
lea
jge
push
push
and
movsb
push
imul
mov
fcompl
in
push
add
je
pop
lods
push
rclb
push
inc
sub
cmp
fidivs
lahf
sub
cltd
xor
pushl
mov
push
mov
stos
xchg
out
jl
mov
ret
cli
into
and
sbb
mov
jmp
leave
add
jl
or
lods
sub
ss
out
out
mov
xchg
sbb
lds
add
sbb
mov
xchg
or
pop
dec
int
jb
inc
sbb
adc
insb
rcr
aam
sar
lret
pop
inc
push
ja
xor
stos
test
hlt
je
cmpb
pop
mov
ja
lea
add
cmp
push
add
adc
mov
jae
add
testl
out
xorb
lret
add
cmp
push
loopne
ret
xchg
jl
pop
or
mov
dec
hlt
jge
add
sub
or
inc
ret
xchg
dec
sbb
lds
add
popf
aaa
pop
pop
jno
enter
subl
push
es
xchg
in
popa
adc
sahf
jl
add
loopne
mov
push
jg
push
add
push
out
mov
push
ret
enter
xchg
push
bound
cld
sub
lock
orl
dec
adc
add
enter
dec
dec
push
mov
jae
icebp
push
hlt
sub
push
test
ret
inc
push
xchg
lds
jle
push
stc
inc
sbb
sub
xor
loope
lods
push
jo
loope
sub
mov
dec
subl
push
adc
push
js
repz
xchg
sub
and
dec
dec
scas
ret
jg
push
push
cmp
dec
cs
mov
or
pop
outsl
lods
xor
cmp
inc
pusha
ds
mov
push
mov
adc
sbb
cmp
outsb
adc
adc
push
stos
dec
arpl
jle
and
out
scas
pop
mov
ret
aas
cmp
cwtl
addb
cwtl
or
adc
js
subl
push
jns
push
pushf
cltd
test
xchg
lahf
pop
insl
pusha
adc
roll
adc
sub
outsb
sbb
cmp
cmp
sbb
rep
popf
pop
dec
adc
jle
push
test
push
push
adc
and
call
inc
add
arpl
pop
adc
add
movsl
lcall
decl
ret
dec
adc
mov
mov
mov
and
adc
cmp
jle
add
add
movb
mov
lock
loop
sahf
mov
pop
push
push
data16
or
add
add
into
test
push
mov
mov
cwtl
shlb
dec
scas
jae
dec
push
cltd
or
adc
mov
push
fnstcw
mov
push
add
and
push
pop
test
rcr
dec
fsts
mov
push
dec
pop
mov
pop
hlt
sub
inc
addb
fsincos
push
jbe
or
mov
sbb
mov
pop
pop
ret
std
imul
sub
pop
pop
mov
xor
jl
add
ret
pop
sar
adc
or
clc
cmp
jbe
pop
pop
ds
jne
cmp
jbe
sub
jp
shrb
jmp
pop
ds
sub
jo
jle
aam
testb
mov
push
imulb
shr
or
je
shlb
mov
mov
add
jbe
mov
jb
addr16
rcll
push
insb
shll
mov
pop
add
add
mov
mov
in
out
insl
sbb
pop
ret
add
add
aas
mov
orb
pop
inc
or
sbbb
mov
pop
jl
movl
mov
nop
sbb
loope
xor
mov
movsl
pusha
mov
add
loop
add
or
add
insl
jecxz
push
in
pop
jl
or
xor
cs
pop
xchg
ret
shrb
add
dec
sub
sub
xor
push
andl
test
sub
adc
mov
das
cmp
stc
addl
and
xor
add
repnz
mov
pop
mov
out
xor
push
fwait
mov
or
jo
lods
add
inc
mov
lds
in
jp
push
lds
jmp
mov
roll
frstor
movsl
xchg
hlt
push
sub
sbb
mov
std
push
iret
sbb
mov
movsl
stos
addl
outsb
leave
shl
nopl
sub
push
jecxz
loopne
loop
push
or
cmpsb
inc
sbb
mov
jne
adc
inc
aad
mov
inc
add
das
ljmp
mov
push
xor
jmp
sub
jne
or
lock
push
fcoms
shlb
dec
mov
dec
sub
xchg
clc
daa
mov
sbb
daa
or
cmp
test
mov
cmp
add
jg
or
push
push
xchg
pop
shlb
push
dec
pusha
push
push
out
data16
sub
in
and
movsl
out
repnz
push
sbb
dec
int
jl
mov
push
adc
push
xchg
mov
cmp
cmc
push
xchg
subl
cmp
arpl
mov
lcall
adc
push
in
adc
bound
push
sub
test
incl
mov
icebp
sub
jns
xor
xor
push
sbb
in
or
in
push
sahf
xor
repz
lods
mov
cmp
bound
mov
add
push
xor
xchg
xor
test
and
fidivrl
cmp
cltd
es
push
mov
and
jne
into
add
jge
or
hlt
adc
lcall
rolb
push
test
les
cmp
sub
or
cwtl
iret
fldenv
in
and
gs
adc
sbb
loopne
cltd
sbb
inc
xor
add
inc
orb
xchg
faddl
add
sub
pop
es
pop
loopne
jne
cld
cmp
mov
xchg
adc
xor
mov
cmpb
and
in
ret
adc
pop
jo
loopne
and
cmpb
clc
cmp
inc
pop
ljmp
pop
pop
jecxz
mov
add
outsl
or
lahf
sub
jns
sub
cli
and
push
pop
stos
inc
sbb
sub
push
aad
movsb
mov
jno
stos
cs
popa
insl
or
repnz
or
push
mov
sti
or
jne
pop
jle
inc
shrb
jne
ret
lock
pop
aaa
in
sub
add
ret
sub
lret
add
lds
or
lock
pop
pop
adc
adc
inc
adc
mov
sbb
xor
and
pusha
mov
sub
aaa
xor
mov
mov
and
ret
cmpl
add
inc
test
push
shlb
and
or
jno
out
pop
rorl
stos
sbb
loope
lods
roll
aaa
stos
and
outsb
jmp
mov
pop
or
loope
adc
insb
in
jg
ret
pop
outsb
hlt
push
test
stos
jg
mov
add
enter
lock
push
xchg
mov
mov
insb
push
and
enter
and
add
sub
sbb
push
push
aam
maxps
cmp
add
rclb
xorb
dec
outsb
mov
xor
cmp
dec
insl
sub
or
js
popa
fisttps
adc
push
adc
or
or
insl
lret
add
jo,pn
mov
mov
mov
cmp
fdivrs
and
data16
dec
mov
out
cmp
popl
in
das
hlt
sub
cmp
inc
mov
sbb
mov
mov
and
stos
and
pusha
stos
jl
xchg
loopne
or
test
and
ds
cmpl
stos
cld
add
xor
sbb
pushf
pop
push
loope
insb
in
notl
jne
push
and
push
or
xor
adc
jne
adc
movsb
sbb
push
push
imul
pop
add
fwait
lea
popa
stos
inc
cmp
aaa
and
mov
insb
jle
xlat
insl
adc
movsl
sbb
ds
mov
aas
sub
mov
js
xchg
xchg
out
push
lea
imul
inc
lock
sbb
or
fcomip
and
cmp
mov
mov
sbb
or
sub
scas
or
pop
xor
idivb
loopne
push
test
inc
test
jns
sub
sbb
and
sub
jb
stos
adc
adc
aam
mov
push
adc
roll
roll
jl
adc
inc
es
cltd
cmp
lahf
mov
add
stos
movsb
pop
inc
fmull
adc
add
or
lcall
ljmp
or
pop
or
xchg
sahf
sbb
test
int
mov
je
lea
add
rcr
shll
pop
cmp
push
negb
jmp
pop
pop
sbb
adc
push
jg
push
add
sub
mov
sub
es
add
xor
push
pop
jo
mov
jl
mov
das
mov
mov
mov
sub
imul
add
sti
popa
or
in
mov
cmp
push
inc
mov
clc
sub
or
jge
aad
xor
lret
xor
or
or
push
lcall
mov
fists
pop
mov
bound
subb
sub
lea
add
jp
pop
push
push
push
push
gs
push
rorb
push
push
push
push
and
and
clc
sub
add
adc
decl
add
push
movb
mov
and
ljmp
sub
jb
lock
fisttpl
sbb
mov
sbb
out
call
mov
nop
orl
add
fisubs
and
push
enter
add
dec
jno
sub
in
adc
lahf
rcl
test
push
inc
push
push
push
movsb
sbb
lds
adc
pop
push
push
add
or
jno
jnp
dec
sub
fwait
out
enter
push
rorl
ret
lods
mov
fisubl
cmp
mov
out
cmp
xchg
xchg
push
adc
xor
jl
lea
ret
pop
sub
dec
xchg
hlt
shlb
movsl
std
fs
push
adc
adc
gs
mov
out
scas
sub
push
sub
push
add
inc
shl
push
enter
add
insl
pusha
daa
or
add
pusha
add
pop
movl
pop
dec
add
lock
xchg
ret
add
cmp
push
push
xlat
adc
in
or
push
inc
push
mov
addl
adc
lock
mov
xor
xchg
arpl
or
insl
movsl
dec
or
push
adc
xchg
lds
pop
fwait
hlt
add
inc
lds
sbb
push
shll
ja
mov
jge
ret
jae
inc
inc
jl
mov
pop
das
fadds
ret
insb
shrb
sbb
fs
sbb
sub
cld
mov
dec
add
shll
sarb
or
inc
sarl
cwtl
inc
push
xor
sbb
je
loope
cwtl
jp
loopne
push
rcr
sub
xlat
mov
or
mov
sbb
jo
or
push
rorl
rorb
fdivrs
push
sbb
pop
enter
push
pop
sub
add
inc
cld
xor
idivb
iret
repz
cmp
add
pusha
mov
enter
adc
fnsave
sub
rcr
inc
dec
jmp
xor
add
inc
adc
sub
xchg
pop
or
and
mov
or
rclb
ret
and
jg
addr16
call
or
call
add
jnp
mov
lock
push
decl
xor
push
les
mov
cmp
pop
push
xor
ret
xor
lods
sub
pop
pop
loop
ret
test
sbb
fimull
pop
pop
shrl
mov
dec
shll
adc
ffree
pop
sbb
push
inc
clc
daa
movsb
inc
scas
or
inc
clc
xor
push
aam
addb
movl
dec
lock
popl
add
clc
in
pop
add
sarb
mov
ret
sbbb
inc
in
cs
sbb
adc
cltd
xchg
xchg
add
push
into
inc
dec
lock
push
or
and
add
std
xor
mov
push
stos
or
pop
mov
pop
fnstenv
je
or
lock
or
jnp
jae
mov
xor
mov
fisttps
movl
sub
mov
mov
pop
mov
pushf
loopne
adc
cmp
and
inc
and
call
mov
jmp
movsl
stos
jl
and
xor
sub
and
js
test
inc
add
inc
imul
jge
movb
imul
mov
jbe
xor
sub
and
or
sub
adc
jns
lea
jne
push
push
enter
push
push
test
mov
mov
cmp
adc
dec
js
push
stos
xchg
paddusb
add
mov
adc
sbb
fidivs
je
mov
xchg
notl
out
movl
push
outsb
sbb
cmp
mov
mov
nop
iret
mov
clc
sbb
dec
adc
mov
push
popf
cli
int3
sbb
mov
loope
ret
mov
jg
push
bound
pop
push
or
pop
popa
xor
test
dec
mov
fwait
mov
add
or
and
mov
imul
cmp
popa
push
or
adc
test
push
pusha
int
pop
mov
outsb
add
out
faddp
sub
xor
xor
inc
cwtl
je
and
push
cmpsl
mov
int3
call
pop
pusha
mov
cmp
lock
movl
inc
inc
add
sbb
push
dec
add
hlt
in
pop
lea
cmpsb
pop
js
lds
lea
mov
pop
lea
push
movsl
insb
jg
inc
js
push
inc
inc
sub
cmp
scas
cwtl
sbb
cmp
push
inc
cmc
jge
inc
hlt
sbb
sbb
cmp
xor
xor
or
pop
ds
nop
xchg
pop
jbe
test
pop
jo
test
test
adc
add
cs
pop
and
mov
sub
dec
jl
push
cmp
lea
jo
sub
add
push
push
rclb
push
mov
mov
adc
test
push
push
mov
xor
lcall
mov
and
aas
inc
cmp
imul
loope
inc
push
dec
xchg
mov
pusha
dec
sarl
movsb
std
push
lcall
push
push
push
jl
mov
enter
std
jne
push
mov
fcoml
lret
sti
jns
inc
xchg
mov
and
xchg
sub
sub
sbb
into
sub
sub
fwait
add
dec
fisttpl
icebp
or
jo
inc
add
or
dec
mov
mov
xchg
fldl
mov
cmp
roll
fabs
jl
popa
mov
sbb
inc
mov
inc
jl
pusha
mov
jl
cli
movsl
shrl
bound
cmc
cmp
imul
push
push
mov
hlt
xchg
sbb
push
push
je
cmp
xchg
push
sti
add
mov
sbb
pop
jmp
add
test
or
jmp
ljmp
sahf
add
push
mov
push
add
push
xor
je
add
pop
mov
nop
out
dec
je
loope
hlt
and
push
sub
lds
adcb
push
pop
or
leave
inc
add
sub
imul
dec
rep
rcl
hlt
inc
aas
out
inc
push
movsl
ljmp
mov
enter
sbb
cmc
push
add
push
push
mov
outsb
jecxz
sbb
fs
out
in
adc
mov
pusha
push
cmp
push
in
cmc
sub
aam
or
pop
je
pop
sbb
push
inc
and
fcoml
rclb
ficompl
mov
ss
nop
in
sbbl
push
mov
shll
adc
and
or
xor
adc
shrl
push
xor
sub
push
sbb
popf
loopne
mov
sub
and
or
sub
or
xor
mov
push
or
fistps
mov
or
push
aaa
xchg
or
add
or
push
scas
daa
imul
je
sub
movsl
adc
iret
hlt
ret
adc
adcl
adc
mov
xor
loope
jecxz
out
and
push
dec
clc
add
mov
pop
ss
sub
add
adc
fcmovu
ljmp
mov
adc
in
stc
flds
mov
or
jns
push
jns
lret
dec
push
ja
aad
adc
cmc
lret
adc
rorl
movsb
loopne
lock
dec
mov
cltd
in
inc
sbb
xchg
mov
sub
inc
or
push
adc
push
xchg
push
mov
and
sbb
test
push
je
xchg
or
sbb
ss
pop
sub
jmp
mov
test
add
cmpsb
sbb
test
and
lret
inc
hlt
push
mov
sti
inc
adc
lcall
test
sarb
adc
push
push
jmp
faddp
cmp
dec
xchg
or
test
push
jmp
test
clc
sub
push
inc
cmp
cmp
inc
movsb
loop
fistl
push
ret
icebp
adc
dec
or
mov
negl
or
jg
xor
sub
adc
aaa
xor
mov
in
mov
xor
or
call
mov
bound
sub
mov
scas
iret
xor
add
stos
pop
mov
fwait
dec
inc
cld
sbb
inc
dec
adc
mov
jo
mov
sub
xor
lea
pop
lods
insb
jle
push
or
insb
icebp
push
sub
cmpsl
aaa
adcb
and
inc
sbb
push
xor
test
jnp
addl
push
xor
cmp
es
cmp
inc
and
psubb
or
popl
add
or
inc
sbbl
sbb
mov
xor
jo
sbb
cmp
add
push
and
sbb
jl
adc
jp
jmp
xor
jns
scas
ljmp
inc
add
push
push
add
in
nop
ds
pusha
shll
xchg
sub
mov
mov
fmull
jne
lds
add
push
fisubl
scas
xchg
xor
aas
push
popa
cmp
jne
cs
movsl
repnz
sbbl
push
mov
mov
xor
adc
testl
mov
inc
in
les
mov
jno
push
lcall
je
pop
das
jns
sub
cmpsl
jne
jl
cmp
mov
dec
mov
add
inc
les
enter
cmpl
mov
cwtl
dec
mov
pop
cmp
imul
xchg
cmp
jno
outsl
clc
stc
mov
jne
push
push
or
sub
rcll
inc
and
adc
int3
push
pop
bound
add
rclb
adc
inc
adc
lahf
jne
sub
sbb
add
cmpsb
mov
je
cmpl
xchg
adc
test
fnstcw
mov
movsl
and
test
cmp
addl
scas
lock
aaa
adc
mov
jns
pop
pop
push
ds
mov
xor
sub
mov
push
xor
rorb
sbb
and
iret
and
arpl
imul
dec
add
bswap
and
push
outsl
pop
xchg
rolb
popf
push
mov
sarl
push
mov
push
sbb
xchg
jl
pop
fiadds
xor
pusha
sbb
cmp
pop
or
repz
pusha
add
hlt
shlb
adc
push
scas
mov
mov
xor
cld
fnclex
add
push
rcr
and
sarl
adc
insl
hlt
aaa
sbb
cmp
ret
movsb
mov
xor
mov
int
imul
sub
lods
xor
add
cmp
sbb
cmp
fnstenv
fdivrs
test
leave
out
push
iret
or
xchg
push
nop
push
sub
fs
mov
xorb
clc
insb
jo
inc
sub
and
push
pusha
in
les
sub
cli
pop
or
push
or
je
add
push
inc
pop
push
aam
je
push
pop
fiadds
add
inc
xor
inc
andl
mov
lock
sbb
adc
pop
cmc
add
cmpsb
push
or
mov
sub
sbb
inc
aaa
jmp
push
lods
sbb
aas
adc
xor
pop
or
pop
inc
cwtl
push
or
pusha
ja
or
jge
xor
xor
pop
sub
js
cmp
ljmp
mov
mov
jecxz
jno
rcll
pop
xor
test
insb
addr16
sub
push
push
xlat
and
lret
ret
pop
add
scas
push
mov
pusha
dec
or
push
mov
or
scas
sbb
xchg
addl
cmp
mov
mov
jnp
sbb
mov
arpl
jbe
inc
push
or
jl
pop
adc
mov
ror
shl
syscall
shll
lret
inc
sub
das
or
mov
mov
arpl
mov
pop
dec
lods
or
push
dec
jns
xchg
cmpsl
push
sub
sub
out
das
mov
xchg
repnz
dec
adcb
push
shrb
cltd
push
sbb
dec
cltd
inc
js
mov
push
sahf
and
js
adc
and
cs
inc
dec
or
push
rorl
arpl
pop
and
adc
lods
mov
jecxz
cmpsl
sbbb
xor
mov
inc
mov
sub
loopne
test
mov
and
add
or
jnp
mov
xor
jbe
jo
and
pop
dec
dec
adc
add
in
imul
jl
mov
push
lea
sbb
lret
push
adc
xchg
sbbb
jge
and
inc
cli
xor
sarl
jb
mov
xlat
mov
fucomi
das
lea
mov
popa
jno
push
mov
insl
jb
call
cmp
das
loope
test
lock
je
mov
addl
into
xchg
inc
xor
enter
xchg
push
cmp
test
or
int
push
fldenv
xor
or
mov
sub
loop
test
or
mov
or
lds
xor
and
mov
jbe
pop
sub
test
popa
fadds
cmove
lcall
push
add
les
hlt
sub
scas
pop
adc
cli
push
push
pop
mov
add
pop
repnz
shrb
inc
push
aam
in
xor
cmpsl
inc
and
and
and
movsb
sbb
push
xor
xchg
das
hlt
adc
adc
and
jo
push
in
push
inc
shl
in
add
add
dec
and
mov
add
push
and
sub
adc
mov
stos
mov
popa
addb
imul
push
loop
lahf
daa
sbbl
pop
mov
rorb
dec
adc
cmpl
or
test
jmp
jmp
inc
sub
lret
pop
mov
scas
xchg
cltd
jne
idivl
pop
push
sub
jb
div
xor
repnz
aas
cmp
cmp
jno
sbb
inc
and
or
test
in
mov
gs
sbb
ret
pop
cmp
mov
imul
icebp
mov
out
insb
fstl
movzbl
push
mov
shr
adc
push
push
or
gs
rcll
push
sbbl
mov
rcll
add
xchg
loope
stc
pusha
mov
jne
lds
stos
outsl
inc
mov
push
and
cmp
sbb
jne
add
cltd
pusha
add
icebp
lcall
inc
fstl
pop
xchg
xchg
outsl
popa
pop
ds
xor
push
lahf
roll
dec
into
test
stos
push
adc
aaa
xor
dec
in
pop
sub
dec
mov
xlat
imul
and
add
add
push
adc
cli
out
push
sub
mov
mov
pop
popfw
rorb
adc
push
pop
mov
out
cmp
mov
ja
cmpl
add
push
jno
lahf
dec
mov
push
dec
pushf
divb
mov
push
adc
or
icebp
clc
mov
and
jne
push
cmp
xchg
mov
xor
xor
add
and
jmp
daa
aas
jae
ret
inc
inc
clc
cmp
sub
cmp
aas
or
xchg
pop
adc
je
xchg
clc
mov
mov
movl
xor
inc
es
mov
faddl
mov
cmpb
inc
pushf
addb
push
in
add
push
les
and
sbbl
dec
adc
cmp
and
mov
je
xor
inc
cmp
pop
in
push
sub
fs
pop
adc
loopne
pop
sbb
lahf
icebp
or
cwtl
aam
add
xchg
pop
fbld
mov
and
sarl
jle
mov
push
imul
js
dec
call
addr16
add
and
aad
mov
mov
jl
adc
sbb
push
mov
ljmp
pop
xchg
fiaddl
ret
jb
jno
daa
mov
imul
shll
mov
push
push
call
adc
je
or
lock
cmp
and
push
pushl
fcoml
repz
push
lea
push
inc
push
adc
xchg
aam
push
mov
test
jmp
inc
loop
adc
dec
pushf
mov
add
lods
nop
push
aas
adc
in
or
mov
cmp
xchg
popa
and
cmp
fidivl
out
hlt
mov
jge
mov
cld
inc
pop
mov
test
aaa
add
push
adc
imul
es
sub
ficoml
fdiv
inc
hlt
pop
inc
lret
and
test
and
add
inc
stos
mov
and
or
push
push
sbb
xchg
ret
sbb
je
mov
jl
adc
repnz
sub
add
push
addr16
out
cli
add
mov
gs
pop
mov
xchg
js
add
dec
hlt
lods
shrb
bound
jb
jg
lret
or
xor
xor
or
or
call
cmpsb
in
repnz
or
pop
and
sbb
mov
and
prefetchw
and
xor
pusha
test
jl
lea
inc
call
insb
daa
fsubs
pop
sbb
push
shr
push
pop
add
outsb
xor
push
negl
push
cmp
rep
mov
fstps
in
adc
fbstp
and
jmp
mov
inc
dec
jnp
movsl
movb
stos
hlt
mov
inc
or
in
sub
inc
or
inc
bnd
add
or
add
fisttpll
cmp
in
adc
xor
jg
sbb
mov
pop
scas
aas
mov
xchg
sub
pop
xor
push
lea
sub
andb
push
xor
pop
fdivs
out
sub
rorb
push
loope
lods
mov
rclb
repz
pushl
je
lock
pop
cmc
xchg
daa
out
int3
push
push
and
lods
adc
and
push
xchg
xor
push
xchg
or
lods
incb
xchg
add
push
mov
pop
mov
and
test
fcoms
movsl
in
fxch
mov
inc
mov
mov
push
push
arpl
sub
lods
lods
cmp
daa
push
sub
daa
and
add
cmp
shrb
adc
dec
cs
in
xor
push
xchg
push
dec
movsl
loopne
mov
push
movsl
xor
daa
push
xor
sub
xchg
cmpsl
sbb
adc
addl
mov
dec
sub
ss
ja
popa
push
cmc
push
jp
mov
push
roll
xor
leave
bound
lods
fldenv
sub
lahf
mov
dec
xchg
pop
lret
and
dec
xchg
push
adc
dec
cwtl
adc
xchg
je
adc
dec
call
imul
lods
repnz
iret
cmp
jne
subl
xorl
xchg
aaa
repnz
dec
or
ss
or
popa
inc
sbb
pop
xor
or
xor
mov
push
sub
and
je
dec
les
insb
dec
push
push
fcmovnb
lahf
lods
sbb
xor
mov
cld
cmp
pop
mov
mov
cmpl
adc
cmpl
xchg
lods
and
mov
adc
sahf
sub
adc
in
dec
je
movsb
sbb
sbb
or
mov
sub
xchg
ret
pop
imul
hlt
inc
mov
test
mov
pop
mov
dec
test
ret
pusha
pop
es
bound
hlt
xchg
pop
icebp
push
push
cld
into
out
cld
mov
jmp
cmpsl
fs
and
dec
xchg
sub
inc
insl
mov
mov
cmpsb
fnstenv
sbb
adc
das
adc
push
sub
repz
push
push
dec
mov
fdivs
sub
push
flds
leave
jmp
shrl
mov
add
and
pop
adc
mov
sbb
mov
mov
fistps
jmp
fwait
or
mov
xor
lret
scas
repnz
lret
in
cmp
stc
sbb
inc
lcall
push
add
inc
adc
and
shlb
jns
xchg
adc
adc
stos
fs
pop
sbb
shlb
lock
arpl
push
add
mov
pop
out
push
into
daa
pusha
add
and
fs
fbld
add
or
loopne
fs
cmp
dec
into
sbb
jno
xchg
sub
adc
xchg
out
rorb
xor
js
cmc
int3
cltd
cmp
inc
sbb
roll
popf
sbb
or
outsb
sbb
xchg
xchg
pop
cld
push
enter
push
dec
push
test
cmp
aaa
dec
loope
inc
imul
push
idiv
add
sbb
push
pop
inc
adc
or
pop
cmp
add
cltd
mov
jbe
testb
sarl
lods
xor
movsb
mov
jle
or
jbe
ja
inc
cmp
push
push
mov
xchg
testb
add
ss
sub
pop
xor
pop
ret
mov
mov
or
ss
push
loop
dec
inc
push
mov
mov
cmp
add
add
inc
popf
push
or
and
loope
mov
pop
add
cmp
stc
pop
push
dec
dec
and
sbb
sbb
cmp
push
add
lock
adc
ja
nop
inc
loopne
rcll
pop
inc
pop
mov
addb
push
push
in
leave
lret
inc
sbb
fstl
pop
in
sbb
and
and
and
inc
pop
lahf
adc
andl
or
push
adc
inc
adc
into
jnp
sbb
cmpb
sbb
test
sbb
fmuls
push
jmp
pop
pop
es
xor
and
lea
push
or
popf
ret
rolb
cmp
stos
ds
call
nop
pop
insl
and
dec
call
adc
andb
dec
or
popa
adc
adc
loope
fidivl
call
jbe
rcl
push
fcoms
xchg
and
xchg
cmp
pop
jl
and
jge
or
leave
xchg
inc
loopne
xor
push
and
bound
ret
lret
sbb
pushf
pushf
xor
aam
inc
test
or
ret
cmp
test
push
hlt
int
adc
jmp
inc
sbb
pop
mov
or
out
mov
jo
jbe
or
int3
imul
jp
jns
adc
or
jno
mov
gs
inc
add
inc
fldenv
sub
xor
adc
dec
pusha
inc
mov
lods
and
push
mov
and
and
sarb
inc
cltd
mov
lahf
test
loop
imul
in
scas
add
mov
sbb
push
mov
pop
mov
mov
or
jl
mov
testb
and
pop
scas
jno
mov
leave
adc
and
test
jns
sbb
nop
out
push
cmp
je
cwtl
adc
xchg
lret
add
test
and
into
mov
orb
loopne
inc
js
lods
repz
mov
pop
cmp
sbb
xchg
mov
adc
sahf
xor
cmp
jne
cmp
mov
cmpsb
divb
mov
add
add
lahf
push
cli
cmc
add
mov
xor
mov
test
insl
cld
addl
xor
push
push
popf
jo
rorl
test
movsl
mov
pop
xlat
inc
mov
addr16
dec
fisubrs
cmpsb
mov
cmp
mov
adc
push
sbb
inc
movsb
inc
xchg
shl
sbb
mov
and
mov
test
and
add
inc
insb
cmpsl
mov
hlt
jmp
jge
scas
sbb
add
icebp
fsubrl
xchg
sbb
mov
add
sub
pop
mov
sbb
imul
sbb
sbb
nop
xor
shl
lahf
and
lea
push
mov
ret
aad
loopne
push
push
adc
xor
inc
add
mov
push
orl
inc
jmp
sub
fidivl
push
push
inc
aaa
pop
hlt
das
idivl
scas
lcall
cli
push
push
mov
sub
lret
mov
pusha
divl
and
jne
mov
je
cmpsl
lock
xchg
or
inc
rcrb
mov
push
fnstcw
add
sub
xor
cmpsl
fwait
in
add
sbb
ret
test
dec
mov
adc
adc
xor
push
mov
sarb
dec
in
push
and
add
jl
mov
lcall
dec
js
push
xchg
fstps
repz
in
push
in
mov
push
je
in
jns
mov
pop
pop
inc
clc
fdivp
pop
or
ret
orl
add
push
enter
enter
adcl
cli
test
add
push
rclb
jl
rclb
sub
pop
and
sbb
mov
mov
addb
shl
cli
fildl
insl
add
rorb
adc
stos
hlt
loopne
mov
add
cwtl
jl
dec
xor
negb
sbb
and
fs
hlt
cmp
data16
lods
clc
loopne
and
sub
leave
leave
dec
sub
xor
and
mov
ja
ljmp
cltd
jl
adc
fnstsw
push
cli
mov
inc
test
dec
or
xor
pop
fbstp
ucomiss
hlt
adc
adc
rorb
outsb
roll
std
adc
add
inc
cmpsb
adc
xor
mov
stos
adc
push
cs
lea
fistl
mov
cmp
pushf
sub
je
ret
lcall
sbb
sub
cmp
cmp
or
push
pop
jb
pop
mov
mov
loopne
cmp
push
mov
sbb
jb
stos
and
pop
mov
cmp
lahf
push
add
cmp
jne
dec
or
sbb
add
cmp
sbb
pop
enter
inc
pop
popa
pop
jmp
xor
sbb
mov
sti
stos
add
ja
push
push
imul
adcl
call
hlt
sbb
fwait
ret
mov
push
xor
cmp
xchg
xor
cmp
jle
mov
lea
dec
pop
ss
pop
stos
imul
add
aad
ds
push
adcb
mov
sbb
dec
hlt
mov
sbb
jle
lock
inc
fwait
adc
push
movb
data16
test
in
fs
addr16
and
or
jne
sbb
stos
push
mov
xorb
pop
adc
inc
and
jb
or
cld
mov
mov
stc
or
ds
loopne
mov
jl
jl
add
inc
push
mov
xor
sub
inc
stos
sbb
adc
mov
dec
cmp
hlt
mov
xor
cs
xor
jo
lods
inc
inc
or
sub
adc
mov
add
jge
test
mov
push
dec
loope
ret
js,pt
es
push
pushw
adc
add
sahf
jb
push
sub
cmp
faddp
mov
cmp
sub
jo
xorl
or
jnp
sbb
adc
cmovno
adc
out
sahf
mov
mov
inc
pop
rcl
adc
pop
sbb
aas
icebp
jns
or
push
push
dec
or
mov
mov
push
pop
movsl
mov
clc
push
xchg
stc
push
jae
inc
subb
or
loopne
sub
lahf
or
mov
int
or
push
mov
adc
inc
sahf
or
and
or
xchg
rorb
jbe
pop
add
mov
daa
sbb
aam
xor
or
fldcw
push
adc
jo
sub
mov
cmpsl
adc
inc
mov
dec
xor
inc
push
cli
sub
inc
xorl
sub
imulb
mov
inc
hlt
adc
lds
and
int3
gs
mov
loopne
or
sub
outsl
xorb
jp
cmc
and
arpl
adc
inc
or
sbb
fldenv
dec
add
add
push
inc
ds
addl
adc
mov
inc
lcall
add
int3
loope
repz
mov
mull
add
and
in
insb
inc
inc
push
mov
add
xchg
cmp
add
rolb
aaa
adc
sbb
cmp
int3
pop
inc
int
or
test
inc
push
cmp
pop
lock
push
rclb
rolb
mov
test
iret
push
repnz
cmp
mov
pop
adc
sub
jmp
adc
test
xor
xor
xchg
mov
add
std
xor
aaa
dec
fdivrl
ss
dec
addr16
sbb
fisubrl
dec
fidivrs
movsb
sbb
sub
fwait
add
cmp
cmp
add
push
subb
add
adc
sbb
fs
jns
iret
sbb
adc
pop
adc
leave
jne
and
jbe
inc
push
and
stos
xchg
xor
jp
or
xor
add
add
add
sbb
add
add
and
and
xor
or
xchg
add
or
add
inc
sub
cmp
inc
nop
lret
or
push
push
dec
pcmpgtb
add
aam
push
mov
add
lea
or
adc
in
or
mov
sbb
nop
int3
rcl
ficomps
arpl
loopne
pop
add
dec
mov
fcmovbe
inc
ret
or
fsubl
dec
adc
ja
icebp
jbe
push
movl
cwtl
add
sbb
sahf
in
popa
or
pop
mov
mov
dec
and
inc
cmp
add
call
pop
sbb
pop
pop
pop
ret
or
push
in
sub
mov
sbb
rcrb
jno
inc
int3
jge
mov
lcall
lcall
stos
movsb
mov
mov
or
sbb
sub
rcl
sti
push
in
lea
setne
xchg
rorb
inc
or
int
or
or
or
int
rorb
xor
xor
or
pop
sub
or
int
and
and
add
add
int
rorb
or
or
sbb
and
or
dec
cli
aas
sub
sub
or
in
daa
stc
lahf
and
add
shlb
add
xchg
or
push
in
inc
or
push
dec
mov
pushl
mov
or
push
loopne
daa
add
push
or
jb
mov
push
sub
adc
imul
mov
sbb
test
fucomi
ret
das
ljmp
push
cmp
adc
movsl
ljmp
cmpl
aad
add
jne
cld
and
adc
lea
xchg
mov
adc
pushf
cmp
inc
sbb
sysexit
push
cmp
push
cmp
add
dec
cmp
sbb
cmc
bound
and
add
xlat
shlb
mov
adc
xor
cmp
cmpsl
add
xor
call
cmpsb
xchg
push
fimuls
inc
xorb
and
dec
and
bound
adc
and
add
cmp
loopne
sbb
sbb
adc
mov
loopne
cmp
gs
rclb
sub
mov
fsts
mov
lea
cmpsl
mov
sub
add
push
adcb
adc
pusha
add
sbb
sbb
push
mov
add
sbb
mov
push
add
movsb
cmpsl
in
adc
pop
bound
aam
cmp
jge
push
push
popf
pop
sbb
push
jb
fs
push
or
es
sbb
xchg
mov
add
and
xchg
xchg
test
jmp
pop
dec
cmp
mov
push
dec
push
push
mov
and
sub
push
mov
test
add
nop
in
stos
lods
or
or
dec
sahf
or
insb
mov
div
sbb
jo
dec
cmp
in
ret
add
push
in
sbb
adc
jo
mov
in
push
adc
mov
inc
and
mov
push
and
je
stc
lahf
push
cwtl
jle
sub
dec
les
mov
lahf
sub
inc
xchg
and
mov
add
sbb
or
insb
dec
and
pop
aam
add
sub
adc
or
add
shr
inc
iret
scas
aaa
orl
jo
mov
je
in
cld
dec
or
hlt
jne
pop
mov
nop
pop
dec
push
push
and
addb
rclb
sub
stc
mov
dec
repnz
add
ret
iret
ret
push
jne
pop
std
orb
jp
rol
sbb
dec
or
nop
mov
sub
mov
inc
or
push
movl
popa
scas
fucomp
fs
mov
cmp
movsl
orb
das
sbb
jne
sub
cmc
popa
sbb
outsb
inc
or
mov
fmull
mov
mov
add
and
jle
or
sbbl
and
cmpb
mov
sbb
fadds
mov
dec
in
xchg
fcoml
xchg
and
adcl
leave
pop
xor
jns
mov
js
cmp
push
mov
loopne
call
popf
loopne
push
push
mov
add
das
dec
in
push
adc
xchg
adc
inc
in
js
dec
pop
shll
or
in
shr
sbb
ret
mov
inc
add
sti
push
call
lea
add
or
or
int3
imul
int3
inc
sarb
mov
inc
loopne
movsb
mov
inc
add
mov
push
or
dec
es
test
roll
adc
pop
add
add
inc
iret
push
push
push
or
pop
or
add
mov
les
adc
or
add
push
cmpb
push
fiaddl
add
pop
cld
movb
jmp
bound
jne
lea
pop
mov
nop
sub
testl
cmp
mov
cmp
jbe
andl
and
pop
sub
push
enter
cmp
call
push
inc
jp
ret
inc
testb
or
xchg
pop
cld
adc
jg
sbb
jge
jae
push
and
sti
jmp
mov
mov
in
test
fdivrs
adc
nop
push
pop
or
not
push
pop
xchg
outsb
into
push
movsl
jo
add
test
rclb
or
lret
repnz
sbb
pop
xor
push
xor
sub
imul
adc
mov
cmp
add
xorl
pop
pushf
jo
cmp
lret
inc
lcall
cmpl
push
fs
sbbb
popf
mull
add
pop
mov
push
or
insb
push
xchg
mov
jmp
xor
cmp
dec
or
or
inc
mov
mov
in
and
sub
ljmp
mov
inc
cmp
add
jno
mov
dec
sub
sub
and
insb
sub
adc
ret
jno
orl
mov
or
xchg
dec
adc
pop
pop
inc
adc
pop
adc
les
jmp
shlb
mov
ficoms
insb
cmp
test
mov
frstor
xchg
sub
jp
les
ja
add
ficomps
mov
mov
xor
cmp
add
jo
imul
xor
leave
push
adc
pop
pushf
push
cld
jo
adc
rcll
inc
shlb
ss
insl
push
adc
iret
add
dec
push
mov
movsb
add
or
js
loopne
test
adc
cmp
popa
dec
cli
mov
pop
push
xchg
and
mov
negb
fistpl
jle
lods
push
jl
and
jno
inc
pop
cmp
aaa
sbb
cmp
xor
test
daa
adc
sbb
int
pop
sbbl
sbb
add
call
ljmp
cmp
pop
sarl
xchg
xor
pop
sbb
inc
or
nop
xchg
xchg
push
clc
push
fcmovnb
pop
or
sbb
daa
push
orb
mov
and
fisubrs
pop
sbb
sbb
dec
push
adc
jns
sbb
xchg
fstpl
inc
pop
push
movsb
repnz
pusha
jmp
es
xchg
lret
sbb
mov
pusha
enter
push
enter
dec
cmp
pusha
sti
add
mov
std
ds
inc
cmpsl
jno
push
fnstenv
stos
pushf
cmp
mov
add
jmp
push
push
pop
dec
aaa
xor
pop
lea
test
jo,pt
fldenv
orl
inc
loop
insb
push
add
dec
repz
insb
mov
and
cltd
jo
ss
cmp
and
or
mov
add
xor
sbb
adc
adc
push
sbb
dec
or
jecxz
fsubl
dec
adc
out
dec
pop
imul
pop
arpl
push
cs
loope
cwtl
test
dec
add
pop
imul
pop
or
dec
in
into
xor
cltd
sub
adc
mov
lahf
pop
movups
adc
sbb
testb
jge
push
clc
jl
mov
js
add
xchg
xchg
sbb
popf
test
in
adc
inc
jle
enter
loope
rorb
adc
or
js
dec
sub
xchg
inc
jmp
das
lea
mov
or
sbb
lods
es
lahf
and
add
push
push
or
pushf
and
sbb
pop
push
mov
mov
xchg
jno
mov
push
mov
cld
or
outsb
push
xchg
pop
dec
mov
xor
inc
lods
add
insl
or
orl
mov
cwtl
or
nop
inc
dec
sbb
push
nop
popa
scas
mov
js
je
or
adc
jns
ljmp
cmp
adc
xchg
xchg
cmpsl
pop
xor
sub
mov
xor
mov
cmpb
add
mov
mul
pop
add
or
add
or
test
sbb
adc
or
pop
dec
fidivrl
scas
push
adc
movsb
push
push
mov
fsubrl
cmp
adc
inc
adc
add
add
loopne
mov
adc
fadds
cmp
push
adc
sub
jno
mov
mov
dec
imul
cmp
pushf
clc
test
into
int
push
mov
push
stos
pusha
pop
sahf
jns
imul
pusha
in
sarb
je
nop
push
pop
je
popf
clc
mov
push
sub
lahf
ss
add
sbb
cmp
sub
nop
push
and
adc
mov
xchg
popf
popa
stos
mov
xchg
add
sbb
cmp
es
cld
adc
pop
mov
jno
cmpsl
push
push
pop
insb
jne
jp
enter
mulb
shll
incl
cltd
push
cmpsb
or
out
adc
mov
out
adc
pop
sub
sub
xor
iret
add
addl
and
outsl
or
lds
fcompl
add
push
adc
mov
pop
xchg
aad
pop
sbb
cmc
pop
or
add
andnps
outsb
lret
sbb
add
test
imul
inc
xor
sub
dec
push
andb
jo
and
inc
pusha
cmp
jns
and
lock
inc
and
lcall
and
sub
xor
dec
ss
inc
imul
inc
mov
sahf
addb
imul
addl
loop
cmp
shlb
sbb
je
or
mov
adc
jl
ret
dec
les
push
cli
xchg
je
cmp
loop
add
xlat
cli
and
aam
shll
nop
adc
mov
sub
push
lock
hlt
or
push
pop
cs
out
push
add
cmp
or
in
loopne
mov
add
mov
sub
jae
add
popf
add
adc
pusha
push
test
push
sub
adc
adc
adc
xorl
mov
jb
xchg
and
mov
mov
push
adc
xor
int
push
sub
xor
sub
pop
je
add
incb
mov
dec
pop
es
xchg
fisttps
nop
lahf
push
clc
repnz
addl
add
inc
push
push
push
inc
sbbl
add
inc
rolb
add
int
rcrb
nop
sbb
dec
and
jae
loopne
cs
sub
sbb
sub
sub
in
insb
fs
cmpl
inc
insb
add
nop
inc
inc
addl
sbb
jo
cli
int
add
nop
sbb
add
pop
and
or
jl
xor
xor
and
movb
nop
pop
cmp
pop
sbbl
xchg
sbb
jl
je
fs
sub
jl
cmp
dec
cs
adc
add
mov
sbb
mov
mov
adc
lods
lahf
dec
jle
mov
inc
rcll
jp
mov
mov
pop
jmp
inc
fs
xchg
cmp
les
xchg
add
add
lret
jl
daa
jp
les
in
enter
and
je
lds
adc
jbe
aas
push
and
dec
add
inc
add
add
sub
int
or
inc
pop
pushf
push
ds
mov
pop
cmp
xchg
nop
mulb
sub
je
rclb
pop
push
and
pop
sbb
aaa
sub
push
push
mov
xor
xchg
scas
imul
iret
adc
push
mov
pop
xchg
mov
mov
or
mov
insl
cmp
add
jle
enter
dec
pop
push
loope
mov
lret
inc
adc
and
adc
jg
mov
jmp
add
call
ror
xor
adc
add
leave
jne
loop
loop
fistpll
mov
fldcw
add
rolb
inc
pop
sbb
pop
rolb
das
or
sbb
ret
das
add
add
adc
sbb
das
add
ds
or
cmp
inc
xor
cli
xchg
mov
test
mov
mov
adc
and
jo
and
dec
mov
dec
test
subl
ret
sub
or
add
fs
cmp
and
sbb
addb
pop
and
adc
or
je
lods
xor
test
or
and
inc
push
mov
push
gs
or
or
jo
xor
ds
inc
lock
cwtl
and
push
inc
add
repz
imul
test
add
dec
or
mov
push
and
repz
les
cmpb
pop
cmp
or
mov
pop
adc
popa
cmp
std
sub
jl
push
ret
pushf
add
mov
pop
sarl
push
adc
popl
or
mov
adc
js
test
les
and
aas
jnp
adc
xor
notb
movsl
dec
mov
mov
fldt
sub
push
and
adc
jp
push
dec
cmp
push
push
mov
mov
mov
adc
imul
push
push
dec
cld
orb
cmpsb
into
cmp
xchg
inc
rep
ret
mov
inc
and
dec
pop
pop
mov
sub
subb
sbb
sbb
cli
adc
movzbl
mov
mov
hlt
and
xor
sub
add
arpl
pop
or
push
inc
inc
push
pop
push
inc
fs
lods
fs
or
jmp
jbe
enter
or
push
push
cmpsb
jbe
inc
fisttpl
and
cmc
adc
add
xchg
inc
and
loope
in
fnstcw
sbb
ss
loope
pand
sbb
mov
lock
mov
jecxz
sbb
sub
add
mov
push
pop
aas
inc
and
xor
cmp
mov
sub
add
fsubr
call
les
add
lret
lock
xor
inc
iret
inc
add
sbb
fwait
or
pop
aaa
mov
ret
push
xchg
push
pop
test
mov
je
fldl
inc
push
jecxz
daa
sub
lret
cmp
js
jl
je
adc
pop
loop
pop
push
ss
push
add
jne
shrd
add
adc
popf
stos
pmaxub
ss
cs
test
stos
daa
mov
icebp
sub
jb
xor
add
sbb
lcall
mov
imul
jmp
sub
cmp
jae
nop
les
sbb
and
lock
clc
push
inc
pusha
sbb
xorb
jg
rolb
push
and
movsb
xchg
adc
or
add
jge
lea
push
mov
ds
add
push
jne
outsl
add
and
dec
dec
addl
add
xor
adc
fs
call
pop
mov
jnp
adc
les
inc
jg
push
jnp
push
xchg
push
leave
nop
loope
mov
xchg
lods
stos
xchg
adc
sbb
inc
xor
adc
in
dec
rclb
and
test
sbb
in
add
dec
cwtl
dec
pushf
adc
sub
jne
cmp
adc
inc
inc
push
push
sbb
jb
sbb
pop
push
cmp
or
cmp
outsl
adc
and
mov
pop
mov
je
jne
sbb
sbb
mov
pusha
mov
pusha
jle
popf
inc
dec
or
mov
data16
in
fcmovne
js
or
cs
adc
bextr
jnp
sbb
cmp
jne
or
leave
and
mov
inc
sub
jb
mov
xchg
nop
mov
inc
and
movsb
mov
sbb
hlt
dec
cmc
inc
push
push
adc
mov
mov
mov
mov
mov
add
cmpsl
adc
lret
sub
hlt
cmp
test
sbb
adc
mov
and
les
adc
sbb
add
cmp
andb
aaa
mov
jne
mov
aas
ret
push
mov
mov
xchg
jp
ljmp
xchg
mov
push
arpl
mov
out
mov
add
mov
push
and
mov
and
or
mov
test
les
loope
xor
pop
pop
call
push
sub
insb
cld
daa
in
add
inc
push
inc
add
test
gs
cli
fildll
out
xchg
push
je
xchg
sub
jmp
mov
pop
cmp
in
fisttps
cmp
sbb
sub
inc
sbb
push
rcr
sub
dec
cmp
jae
dec
cmp
and
push
push
pop
aaa
lea
icebp
sub
imul
outsl
daa
adcl
xor
push
or
and
or
or
add
or
in
add
cmp
adc
pop
lcall
xchg
add
ret
gs
mov
add
out
shrb
pop
xchg
pop
cltd
sbb
addb
movl
mov
mov
cmp
pop
jnp
inc
dec
data16
inc
inc
sahf
xchg
inc
test
adc
cmpsb
xchg
or
add
and
lahf
pop
sub
xchg
ja
lods
mov
jb
mov
xchg
sub
and
pusha
inc
lea
ljmp
cmp
es
mov
add
and
push
mov
pop
mov
enter
pop
adc
xchg
jp
jle
cmp
int3
iret
jge
movzbl
pop
and
aad
sbb
imul
mov
push
sub
dec
pop
rcrl
xor
les
jb
ror
push
sub
pop
aaa
xlat
test
cmpsb
sub
data16
cmp
je
sub
push
test
add
dec
int
shll
or
push
mov
adc
sub
lods
aas
js
insl
xchg
xchg
xchg
subb
add
and
icebp
jge
and
or
adc
icebp
sbb
cmp
jle
push
enter
xor
in
xchg
adc
repnz
mov
cs
or
cltd
dec
adc
or
adc
aas
ret
pop
ja
mov
add
js
pop
sub
mov
jae
repnz
or
mov
pop
sbb
int
sahf
sti
pop
cmp
add
push
push
mov
xchg
jecxz
shl
and
rorl
stos
into
sub
pop
sub
mov
lds
adc
add
sub
sub
int3
xchg
push
in
inc
mov
and
aaa
add
sub
pop
sub
xor
adc
out
add
adc
fstpl
push
pop
shlb
dec
xchg
pop
cmp
or
mov
push
fdivs
sub
add
lahf
andb
dec
aas
incb
push
loopne
mov
mov
or
ja
clts
and
sbb
mov
add
push
sbb
push
pop
inc
inc
add
in
xchg
inc
push
sahf
mov
push
in
scas
xchg
fisttpl
pop
inc
dec
ljmp
or
dec
ljmp
fmull
or
dec
mov
or
or
inc
lods
ljmp
xchg
mov
je
or
pop
insb
mov
movsb
add
mov
movsb
or
int3
pop
sbb
xchg
dec
push
or
or
add
inc
and
add
mov
lcall
pop
jno
push
add
shrl
or
shll
gs
push
inc
adc
dec
dec
imul
inc
nop
sbb
dec
cmp
add
add
xchg
roll
xor
cmp
pop
mov
call
xor
jp
jne
or
nop
cmpsl
lea
pop
stos
es
shlb
push
fsubl
cmp
mov
xchg
rclb
and
or
lock
and
mov
cltd
jge
ret
fwait
push
scas
fwait
sub
outsb
fs
icebp
mov
mov
icebp
cmpb
jo
pop
mov
xor
jnp
mov
mov
dec
adc
jae
jnp
dec
sub
adc
lea
and
aad
push
fmuls
test
cmp
push
sbb
adc
sbb
or
lds
jle
mov
jbe
xchg
xchg
das
lret
pop
push
mov
or
pop
call
xchg
daa
mov
jg
stos
decl
xor
dec
xchg
push
jecxz
or
adcb
jae,pt
fildl
jle
xchg
cmp
inc
inc
xchg
pop
adc
add
test
xchg
pusha
cmp
inc
outsb
cmp
or
insb
lahf
push
loop
dec
movsl
icebp
jmp
fwait
add
cmp
aaa
jmp
lahf
push
push
sbb
cmpsl
push
pmulhw
pop
nop
push
jae
and
adc
cmpl
fldcw
gs
mov
popf
add
push
in
pop
stos
adc
lea
xchg
or
fimuls
jnp
dec
repz
dec
add
dec
push
lcall
inc
test
adc
jecxz
sbb
inc
cmp
rolb
xchg
inc
add
cmp
inc
cmp
push
cs
aam
lcall
push
pop
nop
js
clc
xchg
jl
and
push
pushl
pop
aam
test
push
out
mov
shrb
repnz
lods
aam
adc
popa
cmp
pop
je
int3
ret
adc
xchg
push
pop
orb
pop
cmpb
or
jbe
aas
adc
pop
shlb
pop
add
repnz
sbb
je
cmp
mov
in
inc
mov
mov
pushf
push
cmp
or
shrb
sub
je
cltd
dec
leave
mov
jne
out
xchg
dec
inc
lcall
hlt
push
xlat
push
add
jmp
inc
fs
or
jg
mov
int3
mov
dec
mov
push
mov
loope
push
pop
insb
cmpl
xor
sbb
pop
sub
sub
sub
mov
adc
call
cmpsb
push
rcrb
push
and
mov
and
sar
pop
gs
xor
jge
mov
or
cld
testl
stos
rol
sbb
jae
adc
jge
sbb
add
mov
ja
mov
mov
adc
push
mov
sub
cmp
or
sbb
xchg
push
pop
adc
dec
cld
cmp
jae
subl
insb
sbbl
jbe
add
dec
fs
sbb
pop
dec
cwtl
and
hlt
and
orl
daa
lahf
lret
stc
decl
pop
mov
inc
push
add
call
mov
and
push
inc
jg
popf
inc
jo
cmp
push
aaa
mov
scas
adc
cmovbe
fnstenv
adc
mov
mov
inc
sbb
pop
test
imul
add
and
jb
mov
mov
nop
imul
push
push
inc
into
push
sbb
shll
mov
mov
mov
xchg
imul
test
or
aam
or
repz
stos
push
je
and
or
jo
fcomps
add
pusha
iret
push
es
or
shll
shrl
pop
das
mov
sub
inc
leave
dec
and
roll
push
sbb
jo
sbb
sbb
mov
xchg
xchg
enter
add
lock
out
push
add
push
xor
test
inc
xor
cwtl
fstps
or
push
fmuls
lods
adc
xor
pop
cmp
jns
sbbl
jp
sbb
xchg
add
inc
repnz
ss
lods
adc
inc
sub
rcll
push
dec
push
nop
test
xlat
inc
hlt
test
xchg
or
mov
test
sub
mov
ret
or
int
sbb
dec
enter
pusha
adc
hlt
daa
xor
and
push
xor
and
ret
xor
and
dec
push
leave
push
and
out
push
dec
adc
movl
add
adc
sbb
and
inc
adc
and
testb
je
sbb
out
and
lock
imull
fsubrs
ja
sub
cmp
sbbb
cmp
push
dec
pop
dec
add
mov
shll
mov
pushf
or
daa
insl
push
push
scas
pop
and
stos
and
sbb
cmpl
mov
enter
xchg
cmp
mov
loop
aad
adcb
jecxz
mov
rcll
hlt
lods
enter
or
jmp
sbb
loope
clc
inc
cli
iret
sbb
push
add
aad
add
sbb
dec
push
dec
jge
sub
fcmovnb
int
subl
test
and
add
sub
je
add
popf
and
inc
pop
jne
int
xor
lret
dec
add
push
inc
dec
push
in
dec
push
test
push
sub
lahf
or
or
ds
or
add
imul
mov
out
xor
lret
dec
pop
shll
xor
iret
mov
and
push
inc
pop
and
lcall
mov
stos
adc
and
xor
mov
icebp
rcrl
xchg
data16
in
pop
pop
mov
push
cmp
sub
xchg
popa
mov
mov
fdivr
mov
push
mov
add
inc
push
pop
dec
mov
adc
add
jno
sbb
or
xchg
xchg
aaa
mov
adc
nop
mov
mov
lods
xor
cmp
es
mov
and
in
xor
push
test
xchg
pop
fsubrl
adc
sbb
iret
add
js
cli
push
sbb
fwait
dec
and
add
lahf
call
mov
popa
subb
pop
cmp
push
push
lea
adcl
or
jecxz,pn
sub
jecxz
loope
movsl
or
clc
or
pop
pusha
mov
xchg
leavew
fistpll
nop
stos
test
idivl
loop
push
mov
movsl
aad
lret
or
push
xchg
xlat
lods
push
push
inc
mov
add
push
loope
adc
adc
adc
add
mov
mov
pop
sbb
out
dec
data16
test
xchg
pusha
mov
fwait
sbb
rolb
or
mov
add
add
add
or
movaps
iret
or
xor
and
js
adc
pop
test
stos
inc
cmp
xor
scas
adc
xchg
rorb
data16
inc
je
fisubl
rolb
jbe
sti
nopl
sub
adc
outsb
push
les
pop
inc
dec
xchg
mov
pop
scas
sub
test
mov
inc
xchg
and
inc
mov
hlt
mov
dec
sbb
je
xchg
les
adcb
in
out
nop
stos
add
push
adc
pop
ret
mov
adcb
xchg
es
nop
jno
push
rol
rcll
adc
and
pop
push
and
xchg
add
sbb
das
inc
stos
rorb
add
cmp
adcb
and
add
push
and
or
adc
push
ds
push
inc
cmpsb
jecxz
lcall
sbb
push
int
lods
sub
hlt
jne
rcrb
cli
push
and
test
out
pusha
push
dec
mov
mov
or
es
ja
insl
mov
stos
nop
sbb
adc
adcb
cmp
repz
stc
or
cmp
pop
sub
push
mov
imul
adc
jl
and
andl
xorb
pop
xchg
popl
push
cmp
daa
daa
and
mov
inc
subb
add
push
andl
in
add
icebp
pop
insb
add
int3
lea
sub
test
and
int
cld
push
sub
nop
lret
and
inc
insb
cs
pop
pop
or
ja
mov
dec
pop
and
inc
je
aaa
daa
fcoml
test
es
scas
xchg
ja
and
and
test
fs
je
cmp
popa
add
jo
outsl
add
stos
lods
sbb
movsl
sub
xchg
stos
sarb
loopne
push
hlt
sbb
sub
or
sbb
mov
or
or
push
loope
adc
add
inc
loope
xchg
add
lea
out
sbb
push
sbb
fs
cmp
call
xchg
push
add
mov
mov
push
in
inc
dec
push
xchg
pop
aaa
pop
jne
or
lea
inc
jmp
arpl
add
addl
cltd
pop
icebp
addl
rcll
fs
pop
and
push
add
push
inc
pop
push
pop
push
add
add
mov
mov
pop
xor
dec
xorl
scas
cmpb
cmp
and
inc
lea
add
leave
push
mov
pop
jb
fdivl
or
cmpsb
inc
jl
jge
xor
pushf
inc
push
stc
pushf
and
out
aam
and
popl
push
xchg
insl
mov
incl
xor
mov
or
loope
in
aad
mov
push
and
lret
jecxz
xor
in
dec
imul
xor
adc
je
mov
dec
push
push
xor
inc
pop
mov
sub
pop
xor
addb
cmp
daa
pop
inc
or
and
sub
push
test
sbbl
stc
ret
adc
push
pop
cmp
rep
mov
xchg
xor
mov
push
hlt
push
push
jl
bound
mov
mov
xor
mov
dec
enter
test
xchg
lea
pop
popf
cmpsl
sbb
mov
fidivl
pop
or
mov
or
scas
xchg
out
or
sub
sub
or
sub
xchg
xor
mov
or
cmp
dec
adc
dec
sbb
and
adc
push
push
mov
push
push
mov
popa
cmc
dec
adc
in
cmpsb
mov
insl
sbb
mov
xchg
sub
adc
pusha
xchg
fwait
jne
mov
stc
or
std
xor
xchg
push
xchg
push
xchg
out
nop
jmp
push
push
xchg
add
jecxz
rcrb
fsubrs
sbb
jb
and
sbb
and
jb
test
sbbb
add
push
sbb
mov
lods
cmp
push
jae
pop
xor
dec
mov
and
and
mov
dec
andb
iret
add
xor
fsubrl
enter
and
test
add
dec
sub
sub
push
leave
mov
dec
es
aaa
subl
inc
fs
dec
andl
cmp
sbb
pop
test
and
adc
and
lea
mov
add
shlb
pusha
push
fsubrs
dec
or
jae
call
nop
mov
es
xor
dec
lods
add
pop
push
jl
jl
sub
add
mov
mov
in
xchg
decb
pusha
cmpsb
mov
lock
add
cwtl
js
or
jl
int3
xchg
into
lea
mov
push
loop
inc
dec
add
pop
push
add
adc
mov
dec
jb
jmp
nop
stos
movsb
hlt
sbb
sti
mov
dec
jb
add
push
sbb
inc
cltd
adc
cmpsb
cmp
sub
mov
test
cmc
dec
cmp
jo
add
push
add
mov
push
out
xor
inc
imul
push
mov
in
aas
sahf
outsb
push
addl
inc
sahf
xchg
inc
cld
inc
fadds
in
sbb
bound
inc
int
hlt
or
inc
xchg
out
fstl
adc
test
mov
inc
les
and
es
jmp
out
mov
dec
and
ret
jb
or
fisubrl
or
stos
addr16
out
mov
mov
push
rolb
cltd
and
fcomps
mov
es
aas
lods
scas
ficoml
cmp
dec
cmp
push
dec
xor
sbbb
and
xchg
and
xchg
mov
push
iret
inc
jge
and
and
inc
lea
pop
xor
push
cli
lock
xchg
mov
mov
into
add
mov
or
or
dec
mov
xchg
jg
mov
rcrl
test
into
and
call
pop
xor
add
or
mov
fs
dec
mov
or
add
insb
imull
je
push
pop
push
inc
jl
imul
pushf
jb
cltd
fcoms
or
enter
xor
sbb
lds
or
lea
adc
add
adc
mov
dec
jmp
mov
inc
push
sbb
xor
dec
sbb
inc
outsl
and
jecxz
or
sti
push
pop
xchg
jnp
mov
push
push
test
dec
aam
add
test
dec
lea
cwtl
pop
lock
xor
mov
and
les
cmp
push
or
dec
ret
xor
inc
lea
or
push
out
dec
lea
pop
and
lods
xchg
xor
add
and
fst
mov
mov
in
fdivl
movsb
dec
lret
dec
lods
and
xchg
cmpb
add
cmp
and
fs
push
push
lock
fsub
loopne
sub
adc
sub
pop
and
xor
daa
push
jb
and
add
inc
pop
pop
dec
pushf
xchg
dec
pop
push
call
dec
dec
or
testb
inc
iret
dec
sbb
or
stc
mov
mov
fldl
xchg
push
cmp
aaa
xlat
lods
push
dec
dec
dec
loope
cmp
push
lds
and
cmp
lock
popa
dec
loop
inc
sub
or
nop
outsb
loope
out
sbb
push
dec
and
sub
adc
jo
and
pop
sbb
mov
push
mov
xor
push
mov
push
gs
push
mov
xchg
rorb
push
sub
pop
sub
cmp
loop
and
nop
pop
push
cmp
bound
sub
ds
sub
punpckhbw
inc
add
mov
lock
mov
cmpsl
lea
cmc
scas
or
pushf
mov
fwait
mov
das
sub
lods
xchg
adc
orl
push
add
popf
jbe
rcll
pusha
mov
push
cltd
add
enter
test
push
lret
push
push
pop
add
dec
push
push
insb
ret
mov
sub
push
xchg
mov
je
or
add
cmp
enter
ja
imul
fs
and
jp
shlb
repz
jbe
int3
lods
cmc
inc
xor
pusha
cmp
in
jae
bound
or
sub
leave
jne
stos
mov
imul
jbe
mov
imul
dec
ss
dec
es
jo
adcb
push
ja
lea
xor
pop
xchg
sahf
mov
popa
in
push
and
and
push
push
cmp
rclb
xor
out
push
imul
dec
insb
push
das
js
push
loope
lods
adc
mov
fistl
daa
sbb
xor
xchg
push
push
and
push
adc
pop
andl
adc
adc
jbe
xchg
dec
adc
pop
adc
add
jl
adc
int
shlb
dec
cmp
or
int3
in
push
dec
jae
cmp
push
xor
cmp
push
adc
leave
jae
insb
shlb
cmp
adc
add
in
and
jne
shll
lods
and
pop
push
stos
inc
jge
pusha
mov
add
jb
push
mov
mov
int
and
adc
and
adc
push
lods
add
dec
or
jmp
fisubrl
push
push
push
cmp
jae
call
test
cli
push
shl
out
imul
fbstp
sbb
out
jle
insl
mov
popa
push
pop
inc
jne
mov
sbb
xacquire
sbb
js
cmpsb
jmp
pop
mov
testl
add
ret
xchg
cmp
pusha
pop
dec
mov
repnz
add
sahf
xlat
mov
cld
add
stos
pop
movsb
add
andb
jl
mov
or
push
jmp
push
adc
sbb
cmp
clc
and
xor
inc
jo
push
shrb
mov
movsb
jg
push
lea
scas
push
andl
out
or
ret
sbb
jmp
push
adc
push
push
sub
dec
jne
ljmp
stos
xchg
rcll
fists
or
mov
and
test
hlt
add
and
fbld
mov
pushf
xchg
pop
inc
inc
lock
pop
nop
push
imul
push
fcomps
inc
jo
add
or
sbb
cmpb
mov
daa
aam
sbb
fbld
or
cld
jb
sbb
pop
dec
dec
aaa
add
test
sbb
cmp
aaa
bound
adc
out
sub
les
insl
imul
mov
dec
fmull
pop
mov
push
add
jb
adc
in
sbb
into
and
push
push
mov
test
inc
inc
inc
and
and
pop
or
xor
mov
or
test
mov
sti
cltd
outsb
or
xchg
adc
cmp
sub
test
add
imul
sub
hlt
inc
outsl
jmp
test
push
fstpl
dec
jge
push
adc
ret
in
xor
mov
adc
lahf
add
nop
mov
rcrb
push
push
mov
popa
dec
or
test
adc
jbe
sub
arpl
scas
cltd
mov
out
movsb
inc
jb
imul
mov
push
pop
pop
fdivl
dec
mov
adc
push
add
mov
mov
push
or
adc
test
cmpsl
push
in
sub
push
fisttps
insb
push
mov
adc
add
push
setae
adc
aaa
test
les
aas
and
or
sbb
sahf
ret
jno
and
or
and
mov
je
xor
inc
mov
add
cmp
enter
or
cmp
jae
mov
xchg
loopne
lods
pushf
xchg
push
cmp
pusha
pop
je
inc
cmp
jl
and
cmp
mov
orb
pop
call
stc
or
loop
pusha
scas
inc
and
aaa
add
ja
test
push
mov
movsl
add
add
adc
mov
fimull
jg
mov
jp
cltd
or
adc
cmp
push
es
add
jg
push
push
lods
sti
insl
lock
jb
ja
xor
enter
jb
mov
mov
fmull
push
mov
outsl
mov
inc
movsb
jg
adc
dec
lret
sub
mov
pop
out
pop
dec
fcoml
cmp
shll
push
mov
and
jne
add
pop
and
adc
pop
ret
or
icebp
xchg
pop
mov
dec
out
fimull
shlb
mov
jmp
lret
loope
cmp
test
or
mov
xchg
mov
xor
add
xorb
pop
pop
push
aaa
lods
jns
pusha
flds
jo
add
insb
fstps
ss
mov
sub
mov
adc
pop
add
shrb
aaa
sub
or
and
adc
xor
and
or
or
sub
push
mov
push
add
or
mov
lods
cmp
xor
add
xlat
insl
mov
adc
and
push
in
cmp
mov
pusha
mov
cmp
fwait
icebp
nop
cmovbe
mov
sbb
mov
cmp
cmp
pop
mov
pop
lods
cmp
xlat
sub
cmp
stc
pop
push
insb
insb
mov
push
or
pop
add
jl
add
and
xchg
and
in
outsb
xchg
and
cmp
clc
loope
pop
shrb
shrl
lea
adc
jp
test
nop
lds
adc
mov
scas
fldln2
icebp
mov
sbb
dec
orb
ret
test
push
pushf
jbe
les
fs
je
xchg
hlt
sub
add
lock
jns
mov
cltd
dec
dec
push
mov
adc
mov
insl
add
mov
shlb
add
xor
jns
in
sbb
adc
aas
fisttpl
push
int3
mov
data16
in
inc
push
adc
inc
in
sub
pop
rclb
loop
les
cmp
cmpsb
adc
xlat
add
sbb
stos
and
xchg
add
sbb
data16
dec
test
xorl
lea
xor
gs
fdivl
xor
jg
mov
adcb
mov
cltd
test
jns
dec
adc
test
test
sbb
lcall
and
and
scas
leave
xor
mov
or
add
lods
mov
fmuls
in
inc
loopne
enter
dec
leave
add
mov
out
push
xor
add
mov
popa
adc
sub
mov
push
jbe
test
jne
push
mov
jge
ss
imul
pop
fildll
fdiv
mov
roll
cmp
je
mov
idiv
cmp
je
cmp
je
cmp
je
push
je
stos
dec
xchg
jmp
jnp
loopne,pn
jmp
das
rorl
adc
repnz
test
int
mov
and
leave
pop
mov
mov
inc
sbb
cmp
cli
fs
push
inc
pusha
adc
mov
xor
rol
inc
rclb
test
xor
xor
loopne
lea
rcrl
dec
test
ret
add
lds
push
adc
sub
aam
xor
sub
jl
rorb
dec
sub
dec
mov
pop
pop
lret
mov
in
mov
mov
pop
cmp
ljmp
adc
push
adc
out
test
mov
mov
push
push
jecxz
popa
xor
cmpsl
pop
pop
xchg
jo
cmp
mov
jl
cmp
jmp
sbb
aas
xor
xor
add
and
movsl
lock
jge
jmp
pop
test
pushf
icebp
dec
xchg
jne
inc
fcoml
lcall
loopne
xor
cmc
push
xchg
jns
sbb
jno
les
mov
gs
push
mov
lahf
pop
push
aaa
test
lret
jne
and
mov
xchg
imul
mov
mov
mov
dec
test
std
dec
movsb
mov
sub
inc
int3
push
fwait
pop
lcall
pop
mov
mov
lret
add
cmc
add
jecxz
enter
mov
sub
lock
das
stos
inc
outsl
es
sahf
xorb
aam
pop
pop
mov
les
xchg
dec
pop
sti
mov
rcll
lock
mov
inc
and
xchg
and
call
dec
loope
and
jo
rcll
jmp
jle
xchg
mov
and
addb
cmp
mov
and
adc
and
xor
imul
fsubl
pop
xorl
mov
inc
xchg
add
out
jo
sub
scas
mov
add
sbb
loop
cmpb
lods
sarb
or
arpl
fmull
sub
movsl
sahf
andl
popa
pop
cmp
or
rcl
in
pop
or
and
and
mov
flds
dec
xor
lds
inc
adc
imul
movsb
add
cmp
mov
rcrb
in
add
aam
pop
and
or
andl
or
call
and
push
pop
xor
mov
cmc
dec
push
ljmp
cltd
dec
lcall
inc
mov
aam
data16
int
fs
out
mov
add
push
jecxz
bnd
add
jae
push
xchg
pop
inc
jge
jge
dec
stc
mov
sar
jmp
fs
or
adc
out
push
push
out
cmp
imul
out
jbe
push
mov
add
and
lcall
fcom
inc
inc
jge
or
cmp
je
xchg
xchg
mov
addl
xchg
add
insb
and
and
push
shlb
out
mov
add
xchg
cmc
dec
les
std
inc
test
push
pop
mov
adc
out
nop
out
add
adc
jae
shrl
add
imul
dec
sbb
fcmovbe
lods
faddl
dec
mov
lds
sbb
mov
sbb
int
fisttps
push
or
cmp
je
and
cmp
cli
xor
ret
jne
xor
jl
dec
xchg
sti
rcll
lock
mov
test
pop
mov
roll
adc
add
test
mov
push
push
jae
dec
out
sbb
inc
xor
sub
cmc
inc
inc
dec
mov
mov
lock
adc
cmpsl
hlt
in
add
sbb
inc
mov
dec
stos
xor
xor
ror
rorl
xchg
rorl
cmp
test
mov
push
pop
adc
dec
add
insl
add
loopne
mov
mov
inc
mov
sub
inc
inc
call
cmp
mov
inc
inc
push
push
push
jmp
add
jae
and
ret
xor
sar
dec
std
test
xor
stos
push
sub
dec
and
or
and
and
ljmp
sub
add
lds
and
adc
in
push
sub
imull
sbb
andl
iret
mov
je
fadds
pusha
add
clc
mov
out
repz
cmp
mov
and
sbb
loope
dec
sbb
inc
add
add
dec
xor
shlb
and
sub
sub
ds
dec
add
sbb
sar
shrb
call
fcoms
stc
push
outsb
insb
xchg
lods
ret
insb
dec
and
sahf
push
jl
sub
addb
jge
mov
jmp
pop
or
movsl
jge
jne
cmp
mov
sbb
jne
daa
mov
sbb
dec
sarb
pop
inc
sub
xchg
inc
int3
lret
pop
push
mov
int
jg
nop
rclb
xchg
daa
jecxz
popf
movsl
mull
add
sub
sbb
int3
cmp
xchg
daa
lods
mov
punpckhwd
or
sbb
std
and
add
es
cwtl
or
pop
inc
out
mov
outsb
jmp
and
jle
loopne
bound
mov
cs
inc
xchg
dec
addr16
test
outsb
stos
xor
or
inc
stos
cmp
cmc
and
and
xchg
push
dec
incb
mov
mov
icebp
push
or
sbbb
inc
lret
arpl
mov
cmp
cmp
mov
pushf
mov
pushf
pop
adc
push
cmp
sbb
or
test
adc
es
jae
inc
mov
stc
bound
bnd
or
mov
mov
ret
push
push
push
xor
lea
test
cmpl
fbstp
mov
ss
icebp
push
push
push
lret
sti
sub
orb
mov
push
push
movsl
pop
cmp
add
movb
or
in
jae
sbb
and
jo
repz
test
and
inc
test
sub
shr
test
xchg
cmpsl
ja
int
or
lods
mov
sub
jmp
cmp
inc
add
inc
rorb
push
stos
test
push
push
jl
jecxz
xor
add
jb
jmp
outsl
jno
movb
adc
xor
mov
loopne
xor
adc
jae
add
shr
mov
and
add
or
pop
mov
xchg
dec
aam
mov
or
push
pop
addr16
and
lock
xchg
movb
cmp
stos
jb
cmp
add
mov
dec
push
adc
rorl
outsl
testl
dec
jo
and
jnp
sbb
loop
mov
mov
dec
add
outsb
dec
sub
push
sub
or
mov
sub
and
and
adc
jle
test
insb
adc
es
push
call
add
fsubp
mov
add
cmpsb
popa
sbb
or
aad
dec
adc
mov
xor
sbb
psadbw
inc
xchg
xchg
and
cltd
jne
pop
sub
das
or
pop
xor
test
lret
popa
xor
mov
and
pusha
lds
cmp
xor
movl
jne
test
insb
pusha
lock
push
das
imul
or
dec
inc
mov
cmpl
sbb
mov
mov
subl
add
orl
mov
aas
push
iret
cmp
jp
stos
dec
ss
rclb
mov
shrb
rcl
bound
arpl
xor
dec
cmp
divl
dec
adc
inc
and
add
or
lcall
cmp
mov
aas
dec
cmp
movl
mov
in
add
loopne
mov
popa
aas
or
xor
in
popl
mov
jmp
push
add
loop
cmp
and
mov
rcrb
pushf
mov
pusha
xorb
in
sbb
lret
xor
lea
or
or
add
xor
rcll
sbb
ret
lods
bound
dec
inc
push
sub
jle
pop
dec
mov
loope
cmp
xor
push
or
adc
cmp
mov
popa
adc
sar
sub
sar
and
cli
adc
into
jle
mov
add
cmp
and
sub
test
add
or
mov
sbb
add
shll
scas
or
test
lahf
xor
or
pop
lods
and
or
aaa
lret
jnp
ret
pop
outsl
or
es
in
mov
add
clc
sub
mov
loop
sbbb
xor
push
mov
add
jge
and
jmp
or
or
js
mov
or
sbb
jb
adc
pop
or
jp
and
mov
sbb
ret
dec
and
sahf
icebp
xor
inc
sbb
or
int
cmp
ret
sub
cmpsl
cmp
movsb
push
inc
stos
sub
clc
or
or
inc
add
add
adc
adc
xor
and
test
sub
sub
xor
icebp
mov
ja
adc
pop
scas
mov
lods
jecxz
cmpsb
sbbl
pop
add
sbb
add
mov
iret
fistps
mov
ljmp
push
add
sub
shll
mov
jmp
push
dec
movzwl
dec
pop
cmpl
push
push
cmp
movzbl
push
imull
push
inc
inc
mov
push
push
test
mov
add
or
add
add
sbb
add
and
jl
add
mov
mov
push
and
dec
in
add
sbb
sahf
dec
push
push
push
shll
cmp
lahf
jmp
push
and
xor
jg
jle
push
jne
inc
sub
mov
loopne
daa
sub
iret
test
xchg
pop
cmp
enter
mov
negl
xorl
js
adcb
push
mov
cmp
inc
mov
sbb
xchg
pop
add
or
sbb
movsl
dec
pop
xor
leave
lret
push
push
push
inc
stos
fs
jecxz
cmp
and
dec
sbb
stos
add
inc
pop
or
adc
subb
dec
lods
gs
mov
jecxz
mov
sub
loopne,pt
jmp
cs
sub
lds
and
pop
mov
sbb
inc
pop
mov
push
push
cld
xchg
cmp
push
xor
cmc
xor
add
xor
push
cltd
mov
out
rorl
sub
loop
les
xchg
mov
test
js
mov
push
ss
dec
movsb
xor
inc
cmp
and
cltd
sub
xor
or
cmp
in
xor
and
inc
pop
jnp
insl
or
enter
orl
cmp
inc
movb
mov
xchg
sbb
mov
push
imul
cmp
xor
push
dec
and
sbb
jnp
dec
and
sbb
cmp
aaa
pusha
jns
xor
and
and
into
cmp
js
repnz
iret
push
stos
or
mov
ret
in
dec
icebp
or
rorb
sub
sbb
mov
jge
call
adcb
pop
pushf
bound
fcoml
mov
sbb
mov
sahf
fwait
dec
push
add
mov
jge
add
imul
cmpsb
adc
xor
xor
pop
mov
or
add
xor
daa
mov
ror
ret
pushl
bound
lcall
jecxz
pop
add
push
mov
cmp
testl
mov
sbb
aad
inc
jo
into
inc
sbb
add
push
repnz
jns
out
pusha
xor
and
xor
xor
cwtl
adc
xor
cmp
out
xchg
push
dec
ret
xor
push
aaa
or
jnp
insl
add
in
dec
hlt
push
enter
pop
lea
cmp
inc
repz
cmpb
jne
dec
inc
or
cmp
xchg
int
scas
xor
pop
les
add
stos
push
aaa
cmpsb
pop
sbb
add
push
shlb
push
rorb
mov
inc
das
pushf
and
cmp
fimuls
and
pop
or
lahf
sub
mov
popa
xchg
cmp
jns
push
add
nop
pop
scas
iret
sbb
mov
popa
pop
pop
cmp
test
in
xor
xchg
dec
adc
outsl
clc
xor
decl
mov
mov
add
inc
sbb
xchg
pushf
and
dec
rcl
inc
stos
jo
inc
ss
loop,pn
js
in
push
je
or
push
xlat
jbe
pop
test
sbb
inc
inc
pop
andl
test
mov
xor
in
add
push
mov
inc
sbb
sub
std
add
out
push
dec
lods
insl
data16
adc
fnstcw
dec
ret
add
sbb
mov
mov
push
fs
sbbb
adc
mov
inc
es
pop
inc
mov
cmp
sub
push
lock
lahf
subb
push
cmpsb
pop
push
cmp
movsb
decl
pop
jne
jnp
dec
jecxz
cmpsb
iret
add
jl
notl
mov
nop
adc
repz
lret
pop
jg
pop
mov
iret
das
shrb
mov
aas
push
imul
lods
movsl
push
daa
nop
jmp
insb
sub
xchg
ret
cmp
sahf
sub
inc
mov
dec
sbb
pop
dec
push
fwait
js
fdivs
add
pusha
push
mov
push
add
dec
pusha
pop
and
divl
inc
add
sbb
add
cli
fs
or
cmp
in
movsb
mov
js
adcl
add
addr16
popa
jmp
pop
pop
sub
les
mov
dec
cmp
push
xorl
inc
scas
insb
fs
and
rcl
in
push
sbb
fs
icebp
xor
pop
mov
push
add
call
xor
js
dec
orl
jo
adc
popa
mov
cmp
push
push
xchg
add
push
sbb
or
es
lret
dec
cmp
pop
test
pop
mov
jb
ret
sub
inc
shrb
sub
cmp
xchg
or
push
imul
sub
sub
xor
rorb
lds
inc
sbb
mov
add
and
fcoml
in
cmp
jns
enter
test
cmp
push
dec
mov
xor
pop
jb
dec
adc
fisubrl
push
or
push
inc
jmp
fwait
add
in
cmp
xor
adc
xor
enter
push
adc
add
fdiv
push
mov
xor
xchg
pop
push
iret
and
inc
not
pop
bound
fbld
lcall
pop
push
adc
inc
fiadds
enter
push
push
xor
nop
dec
dec
push
inc
fwait
xor
fcomp
fistps
sub
imul
out
addr16
in
pusha
inc
sahf
or
push
xor
nop
mov
in
adc
xchg
lds
push
mov
subb
inc
and
js
test
ds
ja
stos
mov
int3
adc
lcall
inc
push
add
push
push
pop
xor
sbb
or
mov
aas
insl
sbb
scas
inc
shll
aad
mov
data16
jg
push
in
add
mov
add
lahf
inc
adc
aas
mov
or
shlb
or
xchg
jl
inc
insb
jo
mov
addl
in
sbb
test
sub
push
jg
dec
sbb
xor
push
sub
mov
inc
cli
cmp
sbb
adc
repnz
pop
or
incl
nop
out
inc
mov
in
jbe
inc
dec
mov
adc
xchg
adcb
inc
push
sub
inc
ds
jp
add
push
cmc
mov
push
inc
pop
adc
shll
sub
mov
orb
or
inc
push
stc
xor
inc
pusha
push
dec
or
adc
or
xor
loop
sbb
cs
sbb
movsb
push
inc
loope
sub
pop
sub
pop
aam
sbb
mov
pop
adc
add
add
add
std
mov
pop
cs
xchg
jl
test
lods
fwait
sbb
bound
and
int
and
mov
inc
and
dec
insl
loope
pop
push
arpl
test
int
shlb
out
dec
and
push
or
push
push
xor
mov
js
rcr
xor
jle
mov
or
cmp
fimuls
stc
test
add
aad
lret
jge
mov
cmp
xchg
add
jge
loop
push
sub
jl
jl
rorl
adc
in
lea
rcrb
fbld
adc
xchg
jne
shlb
mov
clc
xorb
add
add
fisubl
mov
movzbl
push
push
sub
push
repz
andb
pop
fcomps
aas
pop
aam
sub
push
push
int3
push
fcmovbe
cld
jb
add
into
sub
mov
add
loope
arpl
xchg
lea
push
out
pop
push
or
stos
mov
jne
call
sbb
mov
and
xor
mov
fcompl
add
ret
jl
roll
push
sbb
insb
sbb
push
mov
sub
sbb
loopne
jo
ret
div
out
pop
mov
mov
mov
fistl
or
out
or
rclb
mov
sub
inc
cwtl
add
test
negb
sbb
dec
fstl
sub
sbb
mov
xor
shrb
jns
dec
inc
les
push
adc
stos
jmp
mov
inc
sbbb
jmp
add
sub
push
jmp
enter
and
adc
jl
loop
cmpb
repnz
pop
ljmp
test
jno
mov
or
clc
sahf
into
add
ret
push
int
push
mov
int3
cmp
loopne
mov
stos
out
andb
mov
fbld
push
jb
inc
jge
sbb
add
sbb
push
adc
adc
mov
mov
nop
shll
enter
fidivl
push
jmp
mov
out
fsubl
xchg
sahf
cwtl
jne
jp
add
aad
or
mov
movsb
roll
cwtl
ret
stos
fldenv
loop
add
mov
add
in
pop
or
push
cmpsb
jne
js
xor
and
jae
add
mov
sbb
push
mov
loop
and
xchg
jno
pop
xchg
inc
loope
sbb
mov
lcall
push
call
mov
inc
je
sbb
xor
push
or
out
and
dec
mov
lcall
pop
rorb
lea
ret
insb
pop
inc
bound
jb
push
or
fmull
cmp
mov
add
in
push
pop
jp
movsb
or
fadds
mov
fldcw
movzwl
add
int
lcall
stos
pop
add
cwtl
hlt
inc
mov
mul
xchg
jbe
inc
inc
cmp
or
adc
mov
inc
jne
sub
jne
inc
and
adc
ljmp
add
push
mov
es
inc
loopne
push
mov
push
and
rol
loop
inc
or
mov
mov
int3
add
jnp
nop
jns
push
mov
shl
imul
fwait
std
pushf
adc
jno
sub
dec
sub
decb
test
ss
in
push
fcompl
cmp
into
das
dec
pop
jge
inc
sbb
or
out
xchg
cmc
rcl
out
or
add
fwait
mov
jg
das
or
push
add
jp
sbb
mov
test
push
mov
stos
repnz
pop
mov
lods
out
fildl
cmpsl
fdivr
push
mov
inc
adc
add
cmp
les
icebp
loop
rol
lret
iret
fdivr
fbstp
sub
fmuls
push
cmp
ljmp
pop
movl
add
sub
pop
cmp
clc
repz
lahf
movl
and
adc
cmpl
add
adc
ret
adc
fidivrl
push
add
ret
dec
inc
rorl
or
lret
cmp
pop
inc
repnz
popf
rorl
mov
jl
cmp
adc
std
dec
adc
mov
inc
jecxz
adc
and
cld
add
xor
insb
cli
cmp
bound
icebp
jge
mov
jmp
jp
xchg
sbb
call
mov
cmp
xchg
rorl
daa
sarl
lea
into
cmpsb
inc
push
add
sub
inc
addl
or
cmc
sub
daa
push
adc
data16
push
push
and
adc
aam
movsb
push
pop
or
jo
popa
shrl
ja
xor
pushf
pop
push
decl
mov
sub
cwtl
cld
and
ds
sub
test
loopne
pop
add
push
xchg
movsl
in
sub
dec
lds
cmpsl
xchg
int
ja
adc
xor
xor
mov
push
mov
cmp
push
ret
push
cmp
cmp
or
cld
lock
lods
push
ljmp
pop
xlat
jge
lods
pop
je
push
dec
mov
xor
or
sbbb
xlat
fisubrl
das
mov
cld
mov
add
inc
sbb
test
mov
cltd
decb
add
insb
cmp
jg
insb
das
or
adc
jmp
mov
pop
jmp
mov
es
adc
in
scas
and
cmpl
pop
mov
cwtl
popf
mov
mov
movsb
mov
ja
inc
aam
je
jmp
add
dec
in
lock
mov
popa
xor
jne
and
fwait
xchg
or
jg
xchg
mov
mov
lods
xor
jecxz
dec
sbb
dec
test
fcomi
lahf
arpl
cmpl
cmp
enter
sbb
ds
push
push
sbb
add
imul
or
mov
or
adc
mov
cmpsb
aas
pop
clc
push
push
call
jmp
cmpl
dec
call
adc
or
dec
jae
adc
popf
add
nop
push
or
xor
mov
clc
sbb
adc
xor
repnz
clc
ror
jge
pusha
mov
pop
punpckldq
xchg
lds
sarb
add
popa
inc
gs
add
loopne
clc
sub
inc
inc
push
adc
sti
shrl
daa
mov
ds
push
xor
jbe
sub
sbb
rclb
out
adc
sub
mov
sbb
push
jmp
pop
and
push
jb
push
push
jecxz
sbb
adc
or
jl
push
pop
js
clc
notl
mov
pusha
or
and
out
jo,pn
mov
add
mov
push
mov
and
push
into
jge
adc
and
enter
pop
incl
je
lcall
scas
shll
xlat
sub
popa
inc
mov
adc
push
push
add
jle
cs
add
aad
sub
cltd
dec
sahf
stos
pop
adcb
and
insb
imul
lea
hlt
xlat
pop
push
lret
pop
adc
adcb
loop
xorb
movl
cmp
repnz
add
call
call
out
loope
call
pop
xchg
xor
add
mov
rcrb
add
sub
das
mov
pusha
sbb
inc
and
and
mov
mov
dec
cmc
mov
push
loopne
repnz
and
popf
mov
das
push
in
data16
pop
in
scas
mov
in
cmp
mov
iret
jne
inc
lock
inc
xchg
add
ljmp
xor
sub
pusha
mov
push
sub
inc
sub
fdivrp
or
outsl
push
inc
in
inc
cmp
test
push
cmp
pop
pop
push
not
out
mov
add
push
push
icebp
cli
int3
adc
test
aam
cmp
mov
test
or
icebp
mov
and
add
or
xchg
lock
subl
sbb
xchg
and
sbbb
test
fdivrs
adc
push
mov
sub
jne
xchg
pop
and
orb
outsl
in
sbb
std
add
in
mov
pop
repnz
mov
jbe,pt
adc
addb
and
push
popa
lahf
pop
xchg
aad
mov
mov
sub
out
or
lret
xor
movb
mov
cwtl
ret
popf
mov
cmc
or
cmp
mov
push
push
pop
les
jle
ss
pop
ss
or
xchg
les
adc
lfs
sbb
lods
and
mov
inc
push
repz
loopne
push
mov
pop
nop
add
xorl
pushf
or
stos
nop
fxch
fnsave
sarb
push
ror
adc
pusha
inc
sub
cmp
cmp
dec
mov
into
jae
cmp
add
sub
push
lret
inc
lds
lret
nop
xor
mull
mov
incl
outsb
jo
lods
cmp
sub
add
or
stc
push
and
out
pop
mov
jge
mov
mov
inc
push
pushf
sub
dec
test
roll
add
push
pop
dec
jmp
cmp
pop
cs
ss
cmpsl
add
push
loopne
std
daa
inc
dec
test
xlat
movzwl
mov
mov
je
xor
pop
mul
xor
push
ja
addl
setb
jb
rcll
aad
adc
sahf
ja
cli
fdiv
push
add
xor
je
pop
scas
xchg
mov
jmp
adc
wrmsr
ret
sbb
in
pop
pop
cmpsb
push
dec
push
xor
lret
cmc
fsubl
cltd
xchg
adcl
rorb
call
or
lcall
jmp
push
jge
mov
xor
mov
or
mov
pop
scas
scas
rorl
sahf
ret
mov
mov
test
pop
push
push
stos
inc
xor
in
push
sbb
mov
cmp
loopne
adc
jbe
mov
push
jns
adcl
xor
in
cvtdq2ps
sbb
lea
aaa
mov
ficomps
push
mov
sbb
lret
mov
inc
push
dec
enter
add
dec
push
fimull
xor
dec
sub
les
push
push
imul
or
mov
call
push
nop
loopne
xchg
aaa
or
mov
mov
inc
rcrl
lret
mov
out
cmpb
mov
mov
sub
test
loopne
pop
cli
cmp
dec
shrl
loop
popa
das
adc
xor
jae
ficomps
je
lret
lock
and
or
lahf
arpl
icebp
push
jb
ret
jl
pop
je
inc
xchg
jl
js
push
dec
pop
inc
sbb
test
pop
addb
lock
nop
adc
adc
in
and
sbb
insb
rorl
push
push
ds
jl
xchg
dec
jo
mov
or
push
push
xor
xchg
add
or
sti
icebp
mov
arpl
fs
jne
or
in
hlt
or
add
push
aam
adc
rorl
push
outsb
fisubrl
orl
rolb
addr16
and
shll
in
ja
ja
and
scas
xchg
por
std
in
out
mov
mov
jno
aas
push
dec
xor
divl
mov
cli
lea
mov
push
mov
js
and
sbb
mov
or
cmp
push
cmp
fadd
bound
aam
push
pusha
push
enter
insl
aas
sar
xor
insl
jne
cs
add
push
sahf
das
iret
repz
arpl
push
idivb
je
inc
or
push
adc
dec
insb
jne
or
cmp
push
mov
mov
test
add
dec
mov
xchg
cmp
dec
push
inc
dec
jo
mov
pop
cmp
je
mov
mov
pushf
adc
test
test
pop
loop
int3
cmp
je
push
fidivs
push
or
push
je
sti
fcoml
cmp
je
push
mov
mov
aam
or
orps
cmp
sub
cmpsb
bsf
sbb
mov
xchg
or
jnp
mov
push
jb
iret
jo
jmp
push
push
sahf
xchg
shlb
je
stos
push
rcrb
push
outsl
and
pop
dec
loopne
sbb
sbb
push
ja
jge
sub
xor
xor
and
mov
jae
add
ret
mov
aad
mov
xor
or
incl
jne
adc
pusha
jg
fisttps
cmc
inc
mov
mov
dec
push
xor
fiaddl
push
push
push
mov
int3
dec
cs
dec
rolb
sub
clc
push
mov
add
or
movsb
cli
mov
mov
addr16
orb
mov
rolb
push
add
in
or
lods
xor
bound
inc
loop
jle
adcl
pop
xor
cmp
lcall
insb
jo
dec
inc
sbb
sub
rorb
fsubr
mov
idiv
outsb
inc
mov
push
mov
inc
int
dec
popf
int3
cmp
scas
xor
addr16
scas
sub
push
jle
dec
jnp
rcrb
xchg
pop
mov
xchg
int
adc
and
add
sbbl
pop
ret
xchg
cmp
insl
adc
jl
add
and
js
jo
add
and
and
xor
dec
jae
add
sub
xchg
test
cwtl
es
xor
add
push
cmp
jne
sbb
out
clc
adc
and
idivb
sub
mov
jne
mov
xor
pop
sahf
add
push
add
mov
dec
clc
inc
rorb
jecxz
testl
int3
inc
or
mov
add
sub
add
mov
cs
filds
jmp
cmp
leave
dec
data16
sbb
jnp
pusha
and
jne
sbb
jge
cwtl
ffreep
lret
or
lea
bound
cli
push
ja
enter
add
lds
inc
shrl
cmp
push
or
nop
icebp
daa
dec
mov
mov
xchg
or
lea
pop
push
pop
cs
cs
mov
rorb
and
shl
sbbl
adc
pusha
dec
adcl
rorl
and
rol
ljmp
shl
ret
mov
sbb
test
xchg
jnp
add
les
jne
lea
add
or
xchg
popf
push
push
aaa
mov
or
lret
notb
lret
and
inc
sbb
out
cmp
fnstcw
adc
cwtl
cmp
lods
pop
outsb
push
lcall
rcrb
repnz
out
add
std
dec
jb
iret
cmp
pop
push
minps
push
stc
fnstenv
add
imul
ja
sbb
fnop
add
sub
add
mov
js
in
jmp
sub
mov
sarb
inc
sbb
lock
loope
push
stc
je
icebp
jne
dec
pop
sub
xor
sbb
ss
ja
fwait
daa
sub
fcomps
add
pop
dec
sub
mov
int3
test
add
adc
pop
inc
or
adc
popf
inc
ds
push
and
insl
inc
xor
mov
jle
xchg
clc
rorl
mov
mov
mov
in
cmp
push
mov
inc
shl
xchg
jle
bound
movsb
pusha
jne
je
les
adc
push
jmp
sbb
push
push
and
mov
test
dec
adc
push
adc
mov
cmp
adc
pop
push
and
cltd
or
add
aas
add
add
icebp
sbb
jg
rolb
xor
es
push
push
mov
mov
lock
pusha
push
or
and
add
sbb
or
sbb
scas
jo
pushl
test
sbb
testb
xor
int3
lock
negl
push
sbb
inc
xorl
or
dec
add
lods
mov
nop
gs
or
pop
and
insb
insb
test
enter
sahf
jp
js
movsb
fdivrl
or
aaa
adc
les
xchg
ret
add
cmp
xchg
outsl
mov
je
lock
pop
cmp
je
mulb
or
cmp
push
cmp
in
lock
je
xor
mov
rclb
lock
push
sub
jl
mov
inc
pop
xchg
jmp
lea
xchg
call
inc
jno
leave
add
jns
subl
dec
lock
cs
lock
cmp
mov
cmp
add
push
inc
lock
ficoml
adc
loope
pushf
scas
fiadds
fcompl
push
mov
movsb
push
push
jbe
mov
into
add
push
mov
mov
mov
mov
sbb
pop
cs
repz
or
ficoms
loop
mov
cmp
jl
testb
or
add
je
mov
jb
cmp
test
or
sub
mov
push
cmp
add
add
adc
in
push
loopne
xor
ret
push
lds
repnz
jns
or
lods
hlt
insb
clc
push
push
add
or
addb
mov
cs
cmp
fnsave
dec
popa
insb
dec
or
cmp
imul
jl
sub
ret
cwtd
pop
xor
outsl
fistl
pushf
cwtl
fidivrs
mov
sub
xor
ja
mov
fwait
sbb
lret
sbb
add
js
data16
or
cwtl
dec
push
lea
push
pop
cwtl
push
adc
xchg
add
lea
fsub
add
lret
push
or
or
pop
pop
sbb
lods
add
xchg
jbe
data16
xchg
fcoms
cli
les
jl
movl
pop
xor
pop
add
mov
mov
push
mov
enter
adc
clc
sub
push
pop
arpl
and
pop
pop
xorl
inc
inc
lds
pop
mov
ja
stos
inc
std
movsb
pop
inc
mov
adc
xorb
cmp
je
push
inc
js
aad
jbe
or
xchg
sbb
xchg
sti
cmp
je
ss
ja
add
mov
push
sarb
mov
jl
jge
sbb
jg
adc
test
push
sub
mov
icebp
fcoms
mov
pop
lcall
pusha
sbb
outsl
inc
ljmp
mov
adc
and
addl
pop
xor
jbe
add
pop
push
pop
inc
dec
fistl
mov
jecxz
lock
or
inc
loopne
cmp
ds
int3
jp
add
or
lock
adc
aad
xor
lods
add
mov
imul
mov
inc
adc
fistl
push
jecxz
loope
mov
cmp
push
les
add
jmp
xor
aam
mov
jg
call
push
jmp
jbe
dec
sub
xchg
loopne
or
shrb
adc
cmp
fistpl
lock
adcl
mov
icebp
mov
xchg
mov
lcall
idivb
je
mov
movl
jbe
cmp
loopne
addb
push
out
jo
push
cli
rol
mov
cmpsl
mov
cltd
cli
leave
cmp
cmpsl
add
mov
mov
lods
nop
test
jb
mov
jecxz
das
inc
cmp
xchg
loopne
mov
ss
push
popf
pop
mov
call
ljmp
std
je
int
mov
cmp
jne
inc
repz
ret
daa
jae
pop
sahf
xchg
push
dec
push
xor
push
je
or
rcrb
jp
sub
or
adc
push
loopne
incb
repnz
push
in
shlb
dec
adc
out
dec
imul
dec
push
mov
lcall
add
mov
add
fbstp
xchg
ljmp
test
rcrb
fcompl
xor
icebp
sbb
sub
stos
sbb
andl
or
sbbb
stos
aaa
and
pop
push
addr16
add
push
adc
test
ds
call
push
lds
add
pushf
xchg
ret
insb
ret
pop
push
xchg
movb
push
loopne
xor
push
cmp
xorb
cmp
push
rclb
push
aad
pop
and
into
dec
movl
mov
dec
movsb
insb
test
cld
xchg
cs
das
add
xor
mov
stc
dec
mov
scas
push
inc
xchg
lods
shlb
mov
xchg
dec
xor
call
mov
ret
xor
imul
push
push
jo
bound
test
nop
push
mov
pop
cmp
xchg
jno
int3
or
ss
push
xor
push
or
sub
push
push
push
loope
pop
dec
xchg
fmull
dec
mov
insl
enter
lret
jle
shrb
push
and
ret
in
lods
xchg
fbld
in
inc
mov
les
shrb
imull
jmp
pop
xor
ficompl
rclb
es
and
cmp
jecxz
and
mov
movsb
adc
lock
cmpl
addl
cmp
je
xor
lea
in
sub
push
and
xorl
test
xor
dec
pusha
push
pop
inc
xchg
out
popl
dec
cmovo
add
push
or
stos
cmp
imul
outsb
jl
aas
pop
addr16
sbb
inc
jmp
pushl
xchg
push
pop
mov
lea
lods
xor
lods
daa
cmp
ss
sbb
outsb
and
rcll
mov
pop
or
xor
ret
jl
test
push
idivb
and
push
add
mov
jl
andl
outsb
inc
push
xor
cmp
jl
push
and
lahf
mov
cltd
push
add
loope
xor
pop
loopne
jecxz
gs
pop
lahf
mov
sahf
push
xchg
dec
fisubrl
popa
data16
mov
test
sbb
nop
hlt
xor
adc
pop
adc
loop
movsb
rcl
adc
add
subl
and
inc
mov
scas
cld
test
ret
adc
test
movsl
adc
cmp
das
inc
push
enter
cmp
sbb
xor
jl
or
push
or
pusha
sub
popf
lcall
mov
pop
adc
xlat
shr
pop
add
icebp
jno
jecxz
adc
pop
inc
push
inc
repnz
call
incb
and
je
push
xchg
pop
inc
pop
sahf
pop
jmp
and
pop
pop
pop
xchg
pop
dec
fnsave
mul
insb
cmc
or
push
xor
es
movb
sub
jbe
aas
sbb
dec
or
cmpb
or
jne
cmp
out
jg
or
inc
sbb
or
orl
ffree
mov
adc
mov
cmp
dec
jl
loope
xor
xchg
push
sbb
movzbl
mov
sub
sahf
mov
dec
loopne
or
pop
jmp
sub
mov
push
adc
inc
lret
lcall
sbb
stc
push
mov
add
and
mov
cltd
add
or
mov
leave
and
cmp
inc
cmp
arpl
popf
shll
pop
enter
add
or
mov
data16
add
loope
mov
mov
test
or
xor
scas
xchg
fucomi
test
lret
fists
sbb
cmp
lret
popa
or
shrl
fs
xor
pop
mov
add
push
push
movhps
push
movb
sbbb
mov
push
sbb
aaa
and
push
cmpsb
push
loope
data16
ja
daa
sbb
inc
mov
push
outsb
cld
nop
jmp
cmpl
call
ss
push
pushf
pushfw
inc
xlat
adc
lods
xor
test
rcl
push
fst
push
mov
mov
inc
aaa
mov
xchg
add
add
pop
frstor
dec
pop
add
jo
jmp
xor
dec
cmp
jle
push
sbbb
lods
mov
push
jne
cmp
dec
cwtl
imul
push
pop
jl
mov
cmp
adc
adc
call
jbe
mov
lea
jo
pop
pop
jp
out
enter
or
inc
aad
leave
pushf
mov
mov
icebp
and
push
pop
mov
xchg
in
in
or
cmp
jns
leave
aaa
inc
xor
inc
sbb
and
cmc
push
loopne
and
cmp
insl
add
je
push
xchg
je
mov
add
adc
push
jl
roll
daa
add
xchg
adc
xchg
adc
mov
xchg
or
inc
das
mov
rolb
jl
into
test
xchg
movsb
outsl
cmp
sahf
xchg
pop
cmp
jo
adc
or
sub
or
into
movsl
aam
scas
sub
push
xor
mov
cli
push
mov
cmc
mov
jge
sbb
cld
sbb
dec
cmpsl
mov
fsubl
dec
xor
adc
push
fidivl
sbb
mov
xor
pop
jae
xchg
xor
nop
jo
dec
add
or
cmp
rorl
adc
andl
sub
dec
push
push
adc
dec
lea
push
xor
lods
add
xchg
inc
xor
cmp
mov
hlt
lods
add
insb
orb
jo
lahf
dec
jge
adc
sbb
inc
sbb
mov
cmp
cmp
add
loope
push
jbe
jmp
mov
fmuls
and
mov
movsb
stc
mov
js
aad
push
mov
and
sbb
ret
push
pop
and
aas
jp
bound
aam
xchg
pop
call
ret
or
jne
xchg
inc
cli
push
cld
jle
or
clc
mov
dec
les
adc
movl
jbe
insb
shr
inc
add
jg
les
sbb
and
adc
mov
jp
sub
sbb
stos
pusha
insb
std
sarl
insl
mov
decb
adc
sub
popa
fcomp
out
add
adc
les
cld
jge
test
loopne
pop
lods
lock
cmpsl
bound
clc
inc
repnz
mov
arpl
push
adc
push
pop
adc
sub
shlb
xchg
jne
add
jns
ljmp
or
jge
out
das
ret
sbb
jle
push
push
mov
adc
int
adc
push
inc
xchg
inc
pop
push
inc
sbb
ret
or
cwtl
insb
mov
mov
rcrb
and
cmp
loope
bswap
addl
adc
sbb
int
out
scas
pop
pusha
in
fadds
xchg
dec
pop
cltd
insb
insb
daa
sbb
sbb
xor
mov
xor
ud0
mov
into
inc
add
movb
mov
imul
je
sbb
mov
fs
xor
xorb
adc
mov
and
loopne
sbb
mov
rcll
inc
push
aad
adc
jbe
jnp
mov
pop
mov
lea
mov
pop
mov
mov
inc
aaa
or
leave
jbe
mov
lea
xchg
pusha
push
aas
mov
or
push
sub
add
sahf
inc
push
xchg
push
js
mov
xchg
inc
pop
sub
adc
dec
out
xor
or
aas
lahf
nop
sbb
cmc
mov
jo
out
xchg
loope
cmp
inc
adc
push
inc
mov
ja
mov
or
faddl
mov
shl
dec
bound
enter
or
push
lods
push
mov
cmpsb
mov
fisttpl
and
add
stos
mov
pop
cs
push
adc
push
inc
push
dec
mov
popf
shlb
push
out
xchg
inc
js
push
push
pop
adc
sbb
push
adc
push
push
add
sub
and
hlt
push
or
add
fs
dec
sub
inc
or
cmpsb
adc
or
andb
popa
mov
mov
cmp
insb
mov
in
adc
or
dec
int
sub
lods
or
pop
mov
push
sbb
mov
mov
in
loopne
pop
notl
mov
or
cmpsb
in
addl
push
push
rorb
sahf
push
call
inc
test
adc
ljmp
or
xor
dec
ss
xchg
pop
and
push
push
inc
shll
sbb
xor
faddl
add
and
daa
xor
fldl
adc
sbb
nop
testl
mov
int3
out
pop
ret
sar
lahf
shl
inc
mov
testl
mov
pop
lcall
frstor
mov
push
inc
ret
mov
rorl
mov
and
andb
insl
jne
lea
imul
repnz
or
push
mov
mov
jae
push
push
xor
int3
xor
mov
sbbl
sub
pop
cltd
or
fmull
aas
add
dec
cmp
sbbl
js
lea
sbb
mov
aaa
dec
mov
mov
sbb
push
gs
icebp
aaa
popa
aas
push
push
testl
mov
test
add
mov
push
push
mov
push
rolb
insl
andl
adc
popf
mov
sti
ret
inc
and
dec
pop
lods
push
repnz
adc
mov
mov
in
jge
add
sbb
mov
aaa
adc
and
xchg
dec
add
int3
sti
sub
add
shll
lret
jo
clts
xrelease
cmp
sbb
adc
insl
fmul
dec
js
push
inc
testl
loopne
cmp
or
imul
xchg
jbe
lret
mov
pop
inc
push
push
flds
dec
push
out
or
lahf
pop
dec
inc
loopne
dec
leave
sbb
jbe
push
push
pminsw
mov
pop
in
movsl
rolb
mov
loopne
add
and
and
xor
ret
testb
cmp
add
pop
cmp
and
mov
pusha
data16
mov
andl
jg
add
sbb
dec
ja
je
outsl
outsb
mov
or
je
or
sub
xchg
lods
mov
scas
cmp
stos
mov
andb
test
push
or
xlat
and
push
lock
or
mov
jnp
and
repz
push
adc
rclb
adc
mov
adc
mov
lds
mov
dec
xor
pop
sub
mov
mov
inc
jmp
jb
push
jo
cmc
mov
es
test
lahf
clc
push
inc
mov
adc
dec
imul
adc
mov
ret
into
push
add
aas
pop
or
adc
adc
sub
shrb
add
and
mov
lea
push
movb
jl
stos
push
or
and
imull
mov
andl
push
je
push
adc
add
jo
xor
test
in
mov
xor
pop
daa
or
push
adc
sub
pop
sub
dec
push
pop
jno
bound
insb
ds
lds
xchg
mov
pop
insl
xchg
push
pop
mov
out
adc
xor
test
and
cmc
pop
and
mov
or
push
andl
popf
inc
cli
sbb
ljmp
pushf
dec
addl
cli
sub
sbb
adc
hlt
xchg
pop
sbb
xchg
dec
add
or
or
sti
je
enter
inc
bound
shlb
inc
cmpsl
faddp
fs
bound
aam
sbb
fs
ja
dec
in
fadd
ss
loope
and
data16
call
fildl
sub
xor
mov
jl
popa
cmp
scas
pushf
dec
roll
notl
fmull
xor
mov
orb
cmpsl
dec
pop
das
or
icebp
xchg
mov
les
and
xchg
fs
sbbl
sub
adc
sub
xor
leave
add
cmp
aam
cmp
cmpb
lock
repz
push
jns
push
call
push
fsubr
outsl
inc
pop
fdivrl
sarl
sbb
sbb
sub
dec
inc
push
ret
in
and
adc
fcoml
in
dec
dec
jae
pop
and
in
dec
shr
sbb
cmp
dec
jae
aam
dec
adc
cmp
cwtl
adc
adc
nop
dec
sub
and
cmp
adc
dec
pusha
mov
idivl
icebp
sahf
or
mov
and
adc
xchg
fisubl
lret
or
inc
jbe
xchg
inc
sub
loop
and
add
push
xlat
enter
mov
adc
or
add
imul
sbb
jmp
jle
sbb
mov
andl
aaa
shll
nop
xchg
hlt
ss
ja
push
mov
fdivrs
clc
xchg
push
fwait
test
mov
mov
inc
mov
push
push
xlat
lcall
shrl
clc
imul
inc
enter
negb
inc
push
jne
jle
lea
test
mov
movsl
loopne
dec
in
sbb
jmp
cmp
in
dec
sbb
xlat
hlt
data16
out
pop
movsb
adc
inc
or
push
jl
add
jo
ret
sub
xchg
subb
cmp
outsl
aaa
je
and
pop
sbb
sbbb
mov
xor
pop
xchg
mov
call
fcmove
lret
or
mov
add
adc
repz
sbb
sbb
cmp
lret
mov
clc
sub
ss
inc
lea
pop
push
or
push
jmp
add
aam
fsubs
ret
push
cltd
xor
push
pusha
xor
inc
pushf
adc
mov
jle
or
add
jg
data16
xor
xor
push
outsb
and
inc
shlb
add
sarb
sbb
hlt
call
pop
incl
push
dec
cld
inc
sub
notl
sbb
decl
movsl
pop
inc
inc
inc
inc
pop
add
ret
in
rclb
jl
dec
lahf
pop
xchg
andb
pop
jp
pop
cmp
movsb
mov
add
leave
jg
dec
mov
aas
or
sbb
lock
add
cmp
push
jecxz
mov
mov
jecxz
sahf
and
pop
dec
ret
dec
push
add
loopne
mov
into
fidivl
add
or
inc
lret
aaa
stos
sbb
push
xchg
sub
add
add
add
inc
or
int
in
lods
mov
loopne
mov
sahf
or
jae
mov
jo
call
push
inc
pop
sbb
das
cmpb
lea
inc
rcrb
or
fcompl
loopne
and
cmp
daa
pop
cmp
in
mov
add
cmp
or
test
mov
rol
repnz
lret
dec
or
or
sbb
sbb
mov
cs
rcrl
call
push
movsb
jns
or
jo
or
mov
loope
xor
js
je
push
int
dec
loop
dec
out
dec
or
fadds
outsb
sbb
push
sbb
or
sbb
nop
cmp
add
and
imul
out
into
ret
jecxz
dec
adc
add
cmpl
jo
add
sub
adc
pop
add
outsb
or
mov
mov
jnp
dec
adc
add
test
push
push
push
data16
pop
movb
sbb
test
push
adc
js
xchg
jle
sti
pop
imul
dec
ljmp
jne
add
scas
mov
sub
fdivl
sarl
adc
dec
mov
pop
pop
sbb
xor
dec
mov
push
push
sub
push
test
push
sub
loopne
push
mov
aaa
add
idivb
imul
sub
or
xor
loopne
jecxz
sbb
cmpsb
out
dec
adcl
icebp
sub
test
or
push
sub
mov
dec
call
pop
sbb
lret
es
dec
jmp
adc
je
push
mov
mov
or
cli
call
xchg
fdivrs
fsts
adc
and
add
jne
or
mov
les
imul
pop
mov
add
cmpsl
push
fcoms
rolb
sbb
and
add
and
test
fldcw
add
outsb
jg
pop
je
or
push
cmp
dec
pop
pop
mov
mov
daa
cs
and
sbb
or
cld
pop
or
arpl
mov
cmp
and
mov
inc
or
popf
adc
cmpsb
sarb
sbb
sub
mov
hlt
dec
adc
fildl
xchg
cmp
es
enter
xor
mov
negl
and
sbb
sbb
push
adc
and
testl
mov
push
sbb
adc
repz
popa
and
into
add
call
enter
scas
xchg
mov
mov
inc
mov
add
inc
popa
ficoms
int3
adc
xchg
pop
std
rcrb
sbb
cmp
lock
dec
or
or
pop
jno
push
dec
out
add
and
scas
pusha
add
fbstp
and
out
shll
sbb
add
lahf
sub
jb
add
push
add
repnz
xchg
addr16
and
sub
pop
sbb
cmp
and
push
jl
int3
add
call
sbb
incb
in
das
outsb
addr16
add
fcompl
xchg
loopne
cmp
mov
adc
and
xchg
xor
pop
sbb
or
push
push
cmp
in
xor
push
dec
mov
popa
cmp
and
push
or
movsb
repnz
add
or
push
sbb
mov
add
inc
fwait
lahf
xchg
add
or
pushf
adc
cmp
rcll
dec
add
pop
sbb
ja
loope
lods
xor
add
inc
repnz
dec
dec
sahf
xchg
addr16
adc
and
xchg
mov
in
jmp
push
rorb
push
push
inc
push
xor
jecxz
push
mov
int
mov
adc
and
inc
cwtl
int3
jae
dec
repz
adc
cmpsl
inc
out
jns
dec
icebp
cmp
rcll
cs
pop
or
ret
dec
in
push
pop
imul
push
push
in
sub
mov
hlt
and
push
enter
inc
sbb
addb
push
sbb
pop
cld
adc
or
pushl
sub
sub
insb
pop
loope
add
loope
mov
mov
xor
dec
js
stos
cld
mov
lahf
push
or
push
sbb
push
xor
push
hlt
vmovlps
stc
mov
sbb
out
push
xlat
push
movsb
cmp
mov
out
sbb
rolb
jecxz
orl
loopne
clc
dec
sarb
xorl
or
test
xchg
rorb
loopne
inc
xor
xor
out
loopne
shlb
in
push
in
scas
test
cmpsb
call
xor
cmp
idivb
mov
scas
add
orl
repnz
roll
dec
xor
lcall
jo
adc
push
loope
xorl
and
jne
repz
adc
jae
out
mov
lock
jne
pop
add
call
pop
outsb
sub
mov
or
push
mov
add
push
adc
and
push
pop
xchg
mov
sub
dec
xchg
lock
pusha
pop
sbb
sbb
int3
or
dec
dec
lods
mov
ja
mov
push
jl
or
roll
lock
mov
into
aam
and
cli
lea
xchg
test
sbb
popl
mov
jmp
add
adc
pushf
adc
imul
mov
mov
rcr
mov
jns
jne
dec
hlt
adc
add
push
sub
push
sarb
rcrb
test
mov
inc
xchg
pop
int3
mov
dec
cmp
or
in
pop
repnz
mov
and
add
push
jb
add
test
dec
jbe
ss
jbe
push
or
cmp
out
pushl
mov
push
mov
in
mov
jae
xchg
inc
mov
inc
mov
and
out
pop
cmp
jne
pop
in
push
mov
cmp
jge
cmp
cmp
pop
bound
adc
jmp
lock
test
lods
loop
inc
or
dec
adc
in
in
outsl
pop
mov
inc
hlt
loopne
jl
repnz
or
sahf
mov
outsl
inc
sub
enter
xchg
or
outsb
mov
sbb
sbb
sahf
pop
pop
hlt
aam
adc
pushf
decb
add
aad
pop
mov
data16
mov
push
dec
or
add
xor
cli
and
cltd
jle
subl
xchg
pop
or
out
xor
lcall
mov
or
cmpsl
and
push
jb
je
scas
sbb
push
mov
mov
sbb
or
imul
pop
nop
or
pop
sub
decl
bound
popf
dec
inc
inc
or
out
je
ja
sbb
jne
dec
repnz
imul
imul
adc
sub
sbb
add
sub
or
movsb
cwtl
lea
or
xor
lods
div
cmp
jns
add
mov
xorb
push
movsb
cmp
sbb
pop
mov
or
cmp
scas
cltd
out
add
mov
push
xor
mov
or
or
cmp
xorb
cmp
imul
jno
bound
xchg
aaa
test
cltd
sub
mov
mov
xchg
inc
mov
sbb
stc
mov
push
or
inc
stc
push
inc
dec
stos
or
dec
dec
stc
add
test
mov
call
jo
add
mov
cmp
push
sbb
push
pop
adc
jns
arpl
push
xchg
jp
leave
inc
loop
lds
jbe
jbe
mov
cmp
jbe
xchg
out
push
add
sub
in
pop
and
mov
iret
mov
xor
daa
call
enter
stos
mov
and
xchg
add
push
xor
out
and
inc
or
xor
out
adc
add
or
popa
outsl
push
push
mov
inc
push
cmp
jb
pusha
jmp
ret
cmp
repz
mov
sub
incl
rdmsr
or
cmp
add
ja
push
push
push
repz
addb
lret
mov
inc
or
mov
ret
add
ret
or
pop
addb
stos
mov
or
ficoms
mov
adc
sbb
adc
fdivs
andl
out
andl
outsb
fs
stc
test
ret
cpuid
add
or
fstpt
aas
jmp
popf
bound
inc
cs
add
addb
cmp
mov
push
jb
inc
outsb
or
lea
mov
push
adc
in
test
push
adc
xor
sbb
mov
movl
mov
shll
add
xor
and
inc
sub
adc
insb
insl
popf
sub
mov
cltd
inc
and
xor
dec
inc
adc
sbb
shlb
sysret
jnp
jmp
sahf
pop
ret
gs
inc
movsl
mov
test
dec
dec
pop
mov
sbb
fcmovb
sti
insb
or
pushf
push
and
or
add
sbb
add
push
and
addr16
cmp
scas
xor
sti
dec
pop
imul
or
fcoml
test
dec
pop
aam
bound
jb
hlt
or
lods
sub
cmp
push
imul
dec
sbb
pop
cwtl
dec
fdivr
pop
fmuls
cmpb
and
sub
adc
push
jl
and
push
sbb
mov
pop
mov
rep
mov
mov
or
dec
sarl
xorl
or
lea
pop
mov
pop
xchg
xorb
pop
xchg
or
xchg
sub
mov
push
dec
cmpsl
test
pop
rcr
mov
mov
xlat
jl
adc
adc
pop
pushl
sbb
ficompl
push
mov
inc
loope
sub
dec
xor
push
pop
js
jne
pushf
les
imul
cmp
ja
jno
cmp
mov
pusha
pop
and
sub
xchg
or
pop
add
push
xchg
clc
xchg
push
ret
xadd
or
add
adc
pop
or
push
adc
mov
je
mov
cmp
jo
stos
sbb
add
je
cmp
cmp
xchg
jmp
fistl
jl
push
clc
rcll
imul
ljmp
cld
or
sub
jge
dec
inc
jno
fdivl
xchg
jae
test
repz
and
jbe
sub
lea
fldl
mov
loope
pop
inc
inc
cmp
ljmp
and
aaa
mov
dec
pushf
scas
or
cmpsb
or
divb
icebp
sub
lret
sbbb
adc
test
mov
mov
xor
push
push
cld
cmp
pop
push
xor
push
sbb
inc
je
lods
jge
fbld
jne
add
popf
mov
add
push
adc
push
js
int3
jmp
sbb
mov
sbb
xorb
lret
and
mov
push
dec
in
push
sub
inc
push
pop
scas
sti
jl
test
mov
imul
pop
ret
inc
jg
inc
or
mov
mov
ret
mov
int
push
and
jge
and
fistl
jle
dec
add
jmp
enter
jmp
aas
int3
dec
out
fistpl
je
jnp
shll
push
xor
add
pop
dec
inc
loopnew
int
add
ja
mov
inc
sti
idivl
pop
push
push
pop
insb
or
mov
inc
or
cmp
mov
fmull
cltd
cs
cmpsl
sbb
movl
stc
dec
rol
enter
dec
pop
pop
lock
sbb
add
mull
movsb
sbb
dec
aad
out
add
mov
xchg
leave
add
decl
or
in
and
scas
or
fiaddl
pop
aaa
cmc
adc
fimuls
clc
and
test
ljmp
add
adc
jns
pop
addb
mov
cmp
sub
dec
jecxz
jnp
pop
or
mov
adc
add
xchg
mov
or
inc
mulb
jle
je
or
mov
inc
sbb
push
jno
cwtl
mov
dec
hlt
sbb
pop
xchg
cmp
loopne
inc
lea
or
dec
pop
cmp
test
and
jae
out
mov
call
mov
addr16
xchg
popa
je
or
je
cmp
cmc
ja
cmp
cmp
or
xchg
gs
jne,pn
cs
adc
cmp
and
add
sub
sub
imul
inc
mov
adc
fidivrs
xchg
pop
cmp
andb
push
pop
rep
jbe
push
aad
pop
sti
sti
rep
bound
xor
or
adc
sub
fisttpll
jmp
sub
jae
and
shlb
add
push
inc
mov
sbb
orl
sub
lahf
ret
adc
pop
push
push
push
xchg
xor
fiadds
jecxz
les
mov
repz
ja
rorb
data16
or
and
inc
sub
mov
adc
jp
mov
cli
xor
mov
pop
inc
jp
xor
mov
ljmp
inc
xchg
mov
mov
loop
fcomip
je
or
testl
stos
and
nop
adc
and
push
mov
add
add
mov
out
push
pushf
jo
mov
push
mov
mov
sub
pop
lahf
xchg
hlt
cmp
sete
cmp
ss
xor
xchg
pop
sarl
and
pop
mov
and
cld
sub
sub
lods
jcxz
xor
mov
repnz
inc
cs
mov
orb
pop
icebp
add
fwait
or
into
add
xchg
rcl
lret
add
jnp
mov
adc
push
int
sub
mov
push
dec
sbb
adc
mov
pop
push
bound
mov
faddl
lcall
push
and
pop
dec
cld
orb
mov
xchg
inc
rcll
pop
insl
cwtl
add
mov
loope
rol
adc
jno
incl
lret
push
jo
add
pop
ljmp
cmp
sbb
outsl
mov
arpl
and
add
enter
adc
ret
int3
bound
cwtl
ret
sub
push
sbb
xchg
push
mov
cmp
push
loopne
mov
or
lods
jo
add
rolb
push
mov
dec
js
or
int3
push
jno
xchg
ds
push
push
stos
cmpl
mov
jge
je
inc
adc
pop
out
push
or
testl
mov
mov
jl
orb
gs
push
and
outsb
and
icebp
subb
xchg
pop
gs
cld
sbb
mov
push
adc
xor
push
pusha
push
add
rorb
cld
jo
dec
mov
into
call
push
sbb
adc
push
mov
fs
pop
cmp
mov
sarb
inc
and
mov
xor
aas
cwtl
pop
mov
xlat
cmpl
shrb
es
and
mov
gs
mov
std
add
testb
movsb
dec
aad
xchg
jle
add
add
in
or
or
dec
pushf
fisttpll
xchg
ret
popa
insb
loope
test
push
adc
rorl
or
cmp
adcl
or
inc
or
clc
cmpsl
das
add
je
mov
subb
xor
out
adc
push
clc
add
cmp
jecxz
clc
jbe
or
add
push
or
shr
rol
dec
inc
dec
add
cwtl
pusha
in
adc
sbb
lret
jle
adcb
xchg
push
dec
sub
in
mov
inc
xchg
nop
mov
dec
pop
xor
pop
xor
xlat
test
jp
inc
in
in
and
ja
cmp
adc
mov
fdivp
push
mov
addr16
inc
dec
mov
pop
mov
in
add
cmp
stos
rcll
pop
mov
xlat
jl
pop
in
mov
iret
stos
or
and
lea
xchg
mov
notb
push
xlat
adc
testb
pop
adc
or
addl
inc
sub
sub
and
push
or
pop
push
dec
iret
pop
inc
add
xchg
cmp
mov
sbbb
adc
sub
pop
es
pop
cmpsl
clc
dec
mov
xor
mov
xor
and
push
inc
stos
cli
cmp
sbb
enter
arpl
pop
sbb
dec
add
jne
sub
outsb
sar
lea
jp
cmp
ret
inc
test
push
popf
sub
aas
cmp
jb
pushl
mov
sbb
xchg
pop
or
pop
jmp
xor
push
loop
jae
adc
add
and
in
and
sub
mov
pop
or
int3
and
movl
jp
cmp
push
and
xchg
push
push
int3
jp
dec
lock
pop
mov
dec
pop
dec
jl
out
push
pop
inc
ja
cs
test
fcoml
mov
loopne
into
lds
pop
push
jmp
pop
lock
pop
xor
jmp
cmpsb
addb
inc
sub
xchg
push
mov
xor
repz
or
inc
and
sub
xchg
cmp
xchg
inc
jne
sbb
outsl
cmp
scas
mov
inc
push
jo
jno
cli
pop
pop
jb
cmp
dec
popa
pmulhuw
mov
push
push
push
scas
adcl
sar
jb
hlt
adc
daa
or
sbb
in
sub
and
add
fwait
sbb
or
daa
pop
dec
mov
insl
xchg
mov
in
fnsetpm(287
arpl
jo
mov
ja
adc
or
mov
and
fcoml
aas
mov
cmp
ss
cmp
jmp
add
pop
leave
sub
daa
sbb
movl
xor
xchg
push
or
pushw
test
mov
or
lock
xor
xor
add
mov
pusha
cwtl
in
pop
and
adc
bound
xor
or
mov
add
mov
clc
sub
popf
mov
mov
sahf
nop
pusha
mov
ret
xchg
inc
and
pop
test
inc
add
sarb
and
add
and
jb
add
and
add
add
enter
jns
add
daa
adc
add
add
inc
in
cmp
sub
aas
xchg
or
mov
das
jmp
push
movsb
cmp
pop
push
cmp
inc
push
sub
xor
or
xor
cmp
push
cli
xor
mov
fstpt
daa
pop
jnp
cmp
or
push
dec
mov
fbld
adc
sbb
push
or
jge
out
push
adc
or
aas
adc
sbb
inc
adc
sbb
cmp
inc
pop
mov
movsb
cld
xchg
inc
rolb
or
jo
scas
ss
inc
adc
dec
sub
jnp
add
imul
jns
pop
ret
pop
adc
imul
push
adc
dec
pusha
cmp
adc
sbb
cmc
shlb
ja
ja
ja
mov
rcl
or
sbb
sarb
js
adc
sysexit
ja
add
clc
mov
mov
mov
ret
lock
pusha
mov
clc
imul
xor
push
shlb
pop
dec
test
push
and
inc
sbb
jmp
in
orl
adc
cs
lea
sub
push
cwtl
into
js
outsl
sbb
in
push
pop
adc
fdecstp
mov
jle
stos
mov
movaps
rol
xchg
inc
in
lock
jecxz
subb
pop
addr16
add
aaa
imul
addb
sub
int
xor
jmp
push
in
call
cld
call
pop
testl
out
je
gs
clc
repz
cmp
or
pop
ss
das
add
add
scas
pop
or
adc
jae
jne
sbb
daa
sbb
cmp
add
in
loop
adc
test
in
inc
call
sbb
je
les
push
dec
sub
ds
and
dec
pop
or
mov
ret
filds
push
cmpb
jae,pn
arpl
ret
outsb
mov
inc
inc
pop
add
arpl
jg
cmp
inc
or
leave
lds
and
add
add
xchg
shl
popa
je
lock
push
xchg
mov
sbb
pop
add
fildl
lock
fnstcw
jo
pop
mov
jo
push
cld
dec
cmp
fs
loopne
jg
insl
mov
insb
jle
push
jp
or
and
and
mov
and
stos
sbb
stos
sbb
push
inc
add
lret
add
nop
cmp
loopne
les
mov
or
lock
adc
jmp
adc
and
cmp
xchg
shlb
inc
push
push
dec
or
push
fistpll
test
cmp
andb
cwtl
push
mov
add
fistpll
repz
add
pop
or
ss
test
xor
or
push
or
aas
mov
or
adc
ljmp
or
dec
sub
or
adc
or
ds
fdivrl
movsl
vmread
les
add
mov
or
add
sub
push
inc
xchg
stc
data16
shlb
loopne
popa
cmpsb
je
mov
in
mov
gs
enter
hlt
inc
add
add
jmp
sub
inc
push
clc
xor
inc
and
cmp
jp
or
fstl
in
loopne
fdiv
pushf
movsb
pop
repnz
add
cld
push
or
xchg
ds
jge
jno
clc
gs
inc
imul
aaa
and
or
jp
outsl
aas
adc
sbb
stos
repz
lock
lock
mov
fmul
je
fdivr
popa
insl
xlat
repz
jg
or
push
mov
cmp
fsubrl
cmp
jle
cmp
push
jp
or
pop
inc
cmp
aas
js
xor
lods
mov
inc
pop
cmp
test
jge
mov
pop
and
stc
iret
sti
sbb
xor
je
cmp
je
adcl
pop
cmp
cmp
ret
lcall
adc
cs
adc
les
jg
add
pushf
pop
subb
add
icebp
fwait
xchg
les
mov
loopne
xor
push
mov
mov
lock
rcrb
enter
inc
push
cmp
dec
mov
jl
xor
push
mov
jg
or
jge
sub
aaa
lea
iret
cmp
jne
movl
cmpsb
inc
mov
and
and
gs
dec
sahf
mov
adc
ficoms
xchg
and
adc
add
cwtl
fiaddl
cld
lock
jge
lea
dec
mov
loop
lahf
mov
pop
js
out
push
jne
mov
xchg
adc
xor
mov
add
shll
mov
and
nop
cli
ja
push
mov
mov
inc
test
out
and
outsb
loop
mov
jle
mov
stc
fmull
mov
fistl
cmc
mov
popa
mov
fisttpl
xor
mov
pop
shrl
jl
call
sub
je
add
jle
xchg
mov
push
sbb
xchg
aad
leave
fcoms
add
cld
lea
mov
fidivrl
loopne
pop
inc
push
inc
test
icebp
call
push
jb
jge
imul
inc
fwait
mov
push
test
push
or
lcall
cmove
fdivs
sbb
in
sbb
push
mov
push
xor
ficompl
adc
or
push
pop
mov
pusha
fs
push
and
and
cmp
aad
pushf
push
mov
xchg
test
jge
inc
inc
mov
xor
and
insl
and
sbb
in
xchg
lahf
add
arpl
lcall
je
xor
or
jne
mov
mov
outsl
data16
out
xor
mov
insb
pop
push
jg
rcll
shlb
or
scas
loope
inc
mov
cmp
imul
aaa
pop
inc
cltd
sub
jbe
je
sub
out
push
sti
imul
loop
rclb
ret
subb
dec
inc
cmp
inc
push
jle
and
xor
rclb
or
sbb
push
imul
dec
aaa
mov
shrb
inc
inc
mov
push
and
loopne
mov
push
sbb
pop
cmp
cli
cld
dec
rolb
jnp
lock
ds
por
sub
mov
and
sbb
in
pop
xchg
jl
loopne
add
loope
mov
cmp
and
dec
jl
jl
pop
fucomi
jae
cmp
fsts
xlat
loopne
test
icebp
ss
mov
in
pushf
cwtl
or
xchg
push
loop
sbb
lret
jmp
fsubs
cmc
mov
pop
push
sbb
mov
inc
add
adc
adc
mov
sbb
cltd
adc
imul
fisttpl
mov
popa
fists
inc
repz
xor
mov
and
push
sbb
ja
in
xor
inc
pop
sbb
sub
repnz
ds
in
add
add
fstpt
mov
mov
test
je
or
and
daa
je
cmp
adc
jg
or
inc
push
add
enter
push
mov
push
rol
xchg
lods
inc
mov
into
mov
and
inc
mov
in
mov
jle
dec
add
and
jecxz
adc
sub
adcb
sbb
sub
movsb
or
push
inc
repnz
mov
and
mov
jae
pop
je
fwait
pop
mov
or
add
push
fs
inc
insl
inc
push
push
pop
pop
add
clc
add
sub
jg
xchg
or
popa
xor
loope
and
repz
push
mov
in
inc
imul
inc
pop
cltd
lea
imul
or
outsl
mov
jmp
pop
cmp
insb
jmp
or
cmp
xchg
adcl
ret
push
fdivrs
or
loopne
scas
and
or
cltd
dec
pusha
mov
push
pop
movb
add
or
jle
enter
decb
mov
add
push
or
push
push
pop
mov
mov
mov
mov
pop
cmp
pop
push
ret
sbb
sub
adc
sub
in
or
inc
push
hlt
jg
mov
sub
push
nop
push
adc
gs
xor
sbb
push
ret
orps
aam
loope
push
xor
mov
cmc
sbb
fildll
add
dec
sbb
sub
lea
shl
les
pusha
pop
push
cs
cmp
pushf
fcompl
mov
jg
mov
sub
mov
mov
or
cld
pop
pop
test
mov
dec
adc
shrl
subb
ficoms
add
mov
adc
dec
jns
jb
add
test
test
cs
push
mov
mov
add
or
sahf
mov
mov
push
outsl
aaa
cltd
sub
or
sbb
jae
dec
mov
jne
in
push
ja
inc
test
fisttpll
fndisi(8087
inc
mov
mov
lock
xchg
ret
mov
pop
and
ds
jmp
cmpb
jae
adc
mov
inc
negb
les
inc
xchg
fs
test
pop
mov
xor
outsb
lret
inc
mov
lods
add
loope
aam
and
xchg
mov
lea
call
push
sub
repnz
or
inc
mov
mov
cmc
xorb
xchg
push
push
adc
inc
dec
cmpl
shr
jmp
in
int3
lea
dec
jnp
add
iret
test
lea
test
jns
sbb
push
inc
sbb
loope
sub
mov
divb
pop
sbb
and
inc
add
push
sbb
int
bound
pop
jle
test
add
pusha
mov
loopne
sub
sub
sub
add
clc
lret
dec
xor
repz
subb
pop
pop
push
push
fstpl
dec
cld
mov
loop
inc
pop
data16
aaa
out
stc
insl
adc
adc
jne
push
divb
jns
sahf
lahf
or
jne
or
jne
or
xor
cld
jecxz
ljmp
out
add
pop
andl
loop
adc
dec
in
adc
add
shl
sub
sub
test
out
and
sti
add
lret
lea
fstl
jecxz
jle
aaa
jo
mov
movsl
movsl
lea
movsl
sbb
adc
sub
es
lea
cmpsb
stos
inc
cmp
lahf
rcr
sbb
fdivs
mov
das
jmp
jb
lea
add
fidivrs
pop
pop
cmp
imul
jge
test
cld
popa
jne
cmp
inc
in
ficomps
or
loop
or
fimuls
sti
movsl
mov
fisubl
push
push
and
jnp
pop
sbb
sub
lods
rolb
push
test
nop
adc
or
add
fmull
add
dec
popf
pop
cmpsb
test
fnstenv
jl
inc
add
dec
fsubl
jbe
pushf
sub
add
fcmovbe
sbb
call
add
mov
push
mov
pushf
add
cmpl
push
shlb
pop
cmp
jmp
enter
mov
mov
mov
fisubrl
xchg
xor
push
push
mov
jb
push
subl
popf
inc
jp
pop
repz
dec
push
push
pop
rol
jbe
jns
cmp
adc
inc
mov
add
jecxz
mov
push
push
js
or
dec
mov
pop
adc
outsb
adc
popa
inc
and
lods
pop
sbb
cltd
add
inc
daa
movsb
inc
sub
push
pop
js
mov
lretw
lods
push
pop
out
xor
adc
sahf
repnz
push
outsl
add
push
sbb
mov
xor
faddl
mov
pop
add
adc
enter
sbbb
jo
adc
adc
fldl
fs
or
rorb
sub
or
es
mov
dec
inc
or
ja
or
pop
inc
jo
sbb
enter
mov
cmovge
ss
call
and
add
pop
mov
rorb
dec
dec
int3
enter
dec
dec
dec
mov
xor
dec
lods
test
sbb
in
pop
scas
adc
aas
fwait
nop
iret
xor
punpcklbw
sub
movsb
mov
sub
ljmp
imul
shlb
mov
es
sbb
pop
ret
cs
pop
mov
mov
stos
cmpb
cmp
jle
or
ret
imul
fsubrl
mov
scas
aad
bound
adc
push
adc
jle
mov
mov
adc
sqrtps
add
add
cs
xchg
push
add
sbb
jbe
leave
jp
repnz
mov
cmp
jl
or
shrb
jmp
or
and
daa
pop
cmpsb
push
call
imul
gs
push
insl
pop
adc
pushf
add
add
rorb
ud2
sarl
scas
gs
ja
frstor
cmpsl
pop
test
mov
pusha
ret
mov
push
mov
mov
push
call
bnd
push
mov
push
or
dec
xor
jbe
les
test
mov
rorb
ret
cmp
mov
hlt
xor
sub
mov
mov
mov
adc
sbb
mov
sub
add
pop
jmp
mov
sub
aas
xor
jge
cmpsb
rcl
adc
mov
jns
movlps
and
xlat
movlps
jne
insl
add
cltd
xor
and
loopne
sbb
arpl
mov
mov
lds
call
or
adc
sub
push
dec
lock
adc
xlat
pusha
mov
lock
adc
or
inc
mov
pop
jle
pop
ret
dec
add
cmp
fldl
je
inc
inc
cmp
scas
pop
das
pushf
and
aad
or
pop
shlb
dec
jno
or
xor
mov
loopne
xor
adc
pop
push
into
inc
add
into
pushf
sbb
flds
daa
divl
adc
jl
scas
into
test
dec
add
lods
sti
daa
test
or
push
pop
xchg
fwait
ret
imul
push
iret
pop
hlt
mov
movsl
sub
or
ficoml
andb
pop
je
daa
loopne
roll
loopne
add
lea
adc
pop
ret
mov
pusha
ret
loope
jb
lea
popa
mov
mov
push
mov
das
cmp
or
or
xchg
cld
outsb
inc
lods
adc
lds
cmp
or
scas
push
add
sbb
dec
and
push
mov
in
sub
inc
or
jg
lods
add
jo
addb
jae
sbb
sbbb
sahf
or
sbb
mov
dec
adc
jb
jo
lock
mov
icebp
cmp
mov
ret
and
pop
js
cmc
pop
push
cmpsl
xchg
jle
jno
add
jecxz
mov
pop
mov
int3
push
or
pop
add
adc
and
pop
loop
sti
inc
out
dec
push
sbb
pop
xor
jl
inc
and
stos
sbb
stos
adcb
fimull
add
lahf
les
fmuls
sbbl
andb
mov
lahf
sbb
lret
cmp
sbb
lahf
enter
fiaddl
arpl
jecxz
add
inc
dec
mov
std
lahf
jne
mov
enter
and
push
mov
test
adc
push
ds
inc
xor
das
jne
mov
pop
dec
xchg
cmp
xorb
les
mov
add
lods
inc
stos
call
or
mov
mov
arpl
and
mov
mov
inc
push
mov
xchg
inc
test
clc
sub
push
test
leave
add
insb
xchg
pop
js
shrl
xor
iret
add
lcall
mov
ss
xchg
in
shlb
fwait
sub
sbb
pop
addr16
arpl
shrl
mov
js
cvtpi2ps
divb
fidivrl
fs
mov
pop
mov
add
pop
andb
or
inc
les
jl
adc
je
data16
push
roll
jl
jmp
aaa
sub
test
rdpmc
push
nop
dec
jp
adc
and
jecxz
mov
aaa
nop
jae
sahf
jo
xchg
call
jge
in
fdivs
push
ret
jp
xchg
imul
mov
sub
sub
fdivl
mov
dec
pushf
push
mov
lock
dec
or
mulb
sub
dec
and
sub
xchg
dec
push
jge
adc
rorl
mov
pop
adc
pusha
or
push
add
sub
shrb
add
or
cs
sbb
scas
and
sbb
mov
cwtl
fs
or
js
clc
fnsave
jo
xor
into
popa
jno
xchg
sub
ret
xor
mov
sbb
out
dec
pop
adc
xchg
aam
pop
sub
xchg
ret
lods
or
pop
pop
sub
lds
lret
adc
das
test
mov
lds
add
push
stc
cmp
cmpsb
outsl
rcrl
xchg
cmpsb
inc
pop
sub
mov
in
hlt
dec
cmpsl
xlat
andl
mov
loopne
dec
das
lods
xchg
mov
sbb
popa
subl
fldt
and
data16
dec
add
adc
mov
push
add
sbb
jne
popf
sub
jno
fimull
and
add
and
xor
push
pop
xchg
jo
aas
icebp
jne
inc
loop
adc
shrl
cld
scas
pop
mov
push
test
pop
js,pn
jp
fldenv
icebp
jp
dec
mov
dec
add
xchg
jmp
add
in
or
add
add
jne
loope
out
test
inc
inc
mov
add
or
push
sub
push
mov
ljmp
daa
insb
out
lock
pop
ret
movsb
jne
pop
icebp
idiv
xchg
outsb
clc
or
pushl
sbb
and
push
push
sti
icebp
add
leave
jo
nop
xchg
xchg
xor
xor
das
jae
xchg
lcall
add
push
mov
ss
bound
dec
add
cmp
movsl
adc
in
rcl
lret
mov
inc
in
cmp
mov
inc
xorb
add
popa
lods
add
xchg
push
fcmovnb
or
dec
push
fildl
pushf
push
mov
add
push
pushf
test
pop
xor
imul
sbb
jns
mov
lock
or
outsl
or
xor
inc
movsb
imul
cmp
or
and
mov
leave
xor
mov
addr16
outsl
dec
sahf
orl
hlt
mov
and
in
mov
cmc
pop
test
add
movsl
inc
cld
pushf
xor
cmp
adc
scas
sbb
dec
repnz
or
add
push
cmp
mov
ja
xchg
push
jae
pop
and
daa
pop
jp
and
pop
cmpsb
lock
inc
jne
mov
and
add
mov
unpcklps
push
or
imul
out
sbb
leave
or
rcrb
push
mov
sbb
adc
push
xchg
lret
and
cwtl
and
int3
negb
push
sub
mov
mov
sub
pushf
cmp
and
and
inc
mov
sbb
jg
rolb
jmp
xchg
clc
add
push
insl
and
rorb
pop
sub
sub
xor
sbb
insb
pop
sub
jns
xor
sbb
orb
lods
cmp
ret
fiadds
push
cld
fldl
push
fisubs
insl
test
pop
addr16
sbb
cwtl
inc
mov
out
mov
clc
cmpsb
je
xchg
or
mov
mov
add
imulb
inc
add
aam
test
dec
arpl
xchg
inc
addr16
or
push
pop
mov
stc
jl
add
nop
dec
mov
dec
add
les
inc
xor
or
and
icebp
adc
inc
cmc
cmpsb
cmp
loope
cmp
js
cmp
outsb
push
sbb
rcl
lea
push
daa
lods
adc
dec
sub
sub
jecxz
lret
rolb
out
loopne
inc
ss
sbb
fsubs
aaa
fs
rorl
pop
jmp
mov
xorb
ljmp
jne
xor
jnp
jo
pop
js
mov
mov
pop
sbb
push
or
pop
imul
add
loopne
js
push
xor
cwtl
lods
push
adcl
dec
sbb
fstps
sbb
mov
adc
and
push
xchg
push
clc
or
xchg
and
in
fcomps
and
sub
cli
pop
xor
pop
dec
mov
push
ret
cmp
xchg
push
mov
sub
rol
repz
int
mov
pop
jecxz
data16
flds
inc
divl
pop
jne
movsb
iret
push
inc
xchg
ja
fisubrl
or
mov
sti
mov
mov
out
mov
pop
mov
cld
cmpsl
hlt
call
sub
lret
inc
rclb
lods
mov
je
addl
pop
sbb
push
xchg
test
pop
gs
push
stos
pop
push
pop
sarb
loope
pop
pushl
movl
insb
ds
sbb
mov
jle
sub
test
and
push
ds
adc
sar
jbe
dec
or
or
pop
cmp
repnz
imul
das
outsb
add
or
xor
xchg
imul
adc
pop
push
out
xchg
repz
cmp
mov
add
push
test
pusha
jmp
mov
in
inc
and
push
les
jb
jmp
jge
movl
add
fildl
fmull
jo
sbb
es
cmp
cltd
or
cmp
lcall
test
decl
jmp
imul
movsbl
add
inc
mov
lock
inc
icebp
into
mov
push
push
mov
mov
cmp
je
cmp
shrb
or
xor
mov
add
push
jno
push
and
jne
mov
dec
jne
jmp
pop
jecxz
sub
les
add
and
ja
jno
pop
or
sub
sbb
xor
jmp
imul
jns
mov
sbb
jmp
mov
and
jo
inc
mov
into
ja
sub
das
mov
hlt
cltd
add
cwtl
incl
insl
or
mov
shl
or
stos
adc
xor
test
fwait
or
cmp
jbe
cmp
cli
int3
mov
or
cmc
in
jl
push
mov
ljmp
and
outsb
popa
call
cwtl
sar
cmpsb
pop
xchg
loopne
les
adc
nop
lret
adc
add
cmpsb
call
sub
sbb
addl
pop
stos
and
rcll
cs
sbb
sbb
insb
and
fsubrl
push
lret
nop
jge
lret
out
out
cmp
sbb
xchg
out
and
pop
fsub
pop
fsubrp
lret
cwtl
mov
dec
sbb
rclb
mov
and
test
insb
idivb
pusha
pop
add
and
lret
stos
xor
push
shlb
add
outsb
adc
lcall
je
dec
je
add
es
mov
in
or
inc
sbb
sahf
addr16
add
xor
sub
push
sbb
pop
sbb
push
rcrb
push
hlt
adc
fcmovnu
mov
loopne
xchg
push
jl
xor
adc
mov
icebp
fst
jns
or
dec
sub
mov
int3
adc
mov
outsb
js
or
push
xchg
les
stos
xor
in
mov
es
addr16
adc
or
or
ds
idivl
and
push
cld
pop
rorb
es
lret
xchg
popa
mov
mov
adc
fnstcw
pop
push
negb
mov
pop
push
push
shlb
adc
xchg
test
sub
xchg
pop
pop
jns
push
push
outsb
xchg
daa
fmul
cmpsl
sbb
xchg
pop
scas
mov
in
pop
into
or
outsb
sub
mov
jne
and
cmp
scas
or
ds
xor
xchg
insb
and
sub
push
into
gs
cmp
xorb
sbb
ret
xchg
and
cmp
push
mov
sub
and
mov
fsubs
cmpsl
and
push
leave
lret
push
adc
fwait
mov
in
and
xchg
cs
xor
imul
or
dec
fwait
sbb
pop
xchg
lahf
insb
inc
cmc
push
mov
jnp
xchg
nop
and
or
adc
mov
and
xor
and
add
xchg
aam
add
punpckhbw
adc
push
xchg
push
xor
pmullw
push
push
in
add
and
sub
adc
xor
imul
xor
inc
and
add
and
insb
adc
push
mov
mov
outsl
inc
sbb
movsl
xchg
and
imul
cli
push
or
out
ds
pusha
jno
out
sahf
adcb
iret
sarl
and
inc
push
repz
repz
xchg
test
repz
mov
push
sahf
out
lcall
jns
out
je
xchg
cmpsl
mov
fcmove
dec
int3
cli
xchg
test
xchg
or
or
arpl
and
xor
and
incb
add
sbb
mov
push
imul
enter
cmc
in
sbb
test
jns
and
lea
add
subb
push
adc
lcall
add
push
leave
in
mov
jo
repz
xchg
pop
jp
test
jo
popa
add
clc
rorb
bound
push
mov
sbb
fisttpl
rcll
sarb
push
ret
fcoms
es
push
iret
lahf
js
sub
rorl
stos
push
sbb
push
add
pop
and
adc
lret
push
addb
xchg
push
das
js
popa
mov
sub
fadds
add
in
iret
rcl
push
mov
sub
enter
int3
add
lahf
mov
mov
leave
lods
push
add
movsl
adc
add
xchg
push
xor
adcl
push
sub
or
popf
sub
jne
sbb
adc
xlat
enter
iret
popa
sbb
fbstp
mov
cwtl
cmp
jle
xor
icebp
add
sub
mov
call
jle
jo
cmp
push
or
lods
sub
loopne
loope
mov
in
push
push
fs
pop
mov
call
xchg
adc
xorl
add
adc
and
push
fwait
mov
lea
enter
or
mov
mov
or
add
push
push
dec
nop
sbb
out
inc
fwait
shlb
sub
mov
out
xchg
or
int3
add
add
xchg
adc
sbb
out
sbb
seto
out
or
push
inc
jns
pop
enter
xlat
dec
popa
push
mov
mov
test
mov
mov
mov
inc
cltd
inc
call
mov
insb
clc
sub
inc
sub
insb
mov
sbb
stc
pop
and
js
push
push
cmp
push
movsl
adc
mov
and
das
ret
cs
xor
xor
in
mov
push
mov
xchg
adc
ret
push
mov
hlt
mov
and
pusha
xor
sbb
mov
sbb
adc
push
sub
andb
movl
push
lock
xchg
add
jge
fisubs
xchg
out
fs
add
in
xchg
push
jns
jbe
pop
adc
dec
pop
sub
nop
arpl
rolb
add
arpl
ret
ret
add
add
cld
pusha
add
inc
sub
jl
xchg
push
pop
sub
xchg
pusha
and
sub
inc
or
outsb
adc
stc
lcall
test
fs
fsubl
es
imul
push
inc
mov
andl
in
xchg
adc
or
xor
push
and
test
mov
inc
addb
add
or
sbb
fldl
stos
add
adc
add
pop
add
add
pop
sbb
add
fdivrl
sbb
call
add
sbb
xchg
into
push
std
and
adc
aad
jae
jecxz
or
push
in
and
jae
xchg
dec
push
cmc
or
mov
add
push
add
repnz
or
insb
icebp
push
push
inc
mov
mov
cltd
lahf
sbb
fs
push
mov
arpl
nop
xchg
add
test
scas
insb
pop
fldl
push
nop
add
push
test
and
pop
adc
mov
cmp
fwait
sub
inc
shll
xchg
nop
xchg
js
adc
stos
and
adc
js
jbe
js
aad
addl
inc
add
mov
inc
sahf
and
inc
pusha
es
add
rcrl
or
add
pop
inc
or
add
add
dec
loopne
popa
inc
add
mov
push
lds
inc
and
sbb
incl
or
or
cmp
pop
mov
aaa
or
jecxz
sbb
sbb
cmpl
push
stos
dec
nop
in
xchg
aas
and
mov
xor
and
or
add
xchg
or
sbb
lret
add
sub
push
out
cwtl
outsl
inc
xor
bound
rolb
mov
push
pop
inc
fcompl
in
xor
inc
sub
cmp
inc
std
aam
pop
xchg
cli
push
cmp
mov
dec
jbe
mov
dec
andl
leave
dec
in
sub
push
in
dec
movsb
fcomp
lods
lret
mov
rcll
jmp
and
dec
imul
test
arpl
jge
dec
je
das
shrl
or
or
push
push
out
or
movl
add
add
xor
xor
loopne
cmp
sbb
add
add
push
pop
adc
pop
jge
gs
add
shlb
adc
add
bound
push
arpl
sahf
lock
sub
lods
out
or
add
imul
add
mov
inc
xchg
icebp
ja
mov
sbb
mov
sbb
sbb
xchg
xchg
movsl
loope
mov
aam
xor
hlt
cwtl
fbld
jae
inc
fstpt
fldl
jo
fcoml
les
popa
xorb
mov
add
push
or
adc
jne
jns
out
push
jp
add
movsl
subl
push
jl
aam
ret
mov
or
sub
cwtl
and
or
push
sbbb
and
and
inc
outsl
cmpb
lret
pop
push
rol
movsl
in
dec
int3
mov
pop
mov
sbb
pusha
add
xorb
sub
inc
add
xchg
lahf
xor
in
lret
dec
lock
add
push
in
lea
sbb
add
push
mov
dec
inc
inc
xor
xchg
movsl
xchg
adc
adc
mov
arpl
movsl
jo
call
add
es
add
push
jbe
adc
sbb
add
cwtl
mov
add
sub
push
push
xor
fcompl
subl
ret
mov
sbb
aam
adcb
icebp
push
dec
push
pop
dec
cwtl
push
sbbb
arpl
call
sub
lret
pop
call
adc
jmp
ds
jnp
pop
pop
addb
test
sbb
pop
popa
adc
mov
lcall
pop
push
mov
xor
sub
cmp
mov
jl
xor
jmp
sbbb
jl
or
sbb
popa
jp
adc
cld
jg
push
cmp
cmp
je
mov
mov
push
add
inc
jmp
movb
mov
hlt
mov
push
cltd
pop
idiv
xchg
pusha
xlat
push
out
lret
xor
pop
mov
or
rorl
loope
icebp
and
push
sub
outsl
mov
cmpsl
push
faddl
mov
insl
loope
mov
mov
adc
xor
jmp
orl
dec
or
lret
shr
dec
inc
push
lock
testl
xchg
into
inc
sahf
in
sbb
mov
mov
iret
cmp
mov
dec
mov
xchg
dec
faddl
cmp
daa
cmp
lods
dec
jg
stos
es
push
cmp
push
adcl
jo
imull
sbb
lahf
enter
pop
iret
mov
rorb
in
mov
dec
test
rolb
movsl
cmp
pop
mov
pop
adc
mov
or
adcb
inc
test
orl
mov
dec
push
xchg
push
dec
sub
or
rcrb
jl
lea
xor
test
sbb
xchg
and
mov
xchg
dec
repz
push
call
inc
mov
adc
push
xchg
jmp
adc
push
int
stos
rcrb
lods
adc
push
fsubrl
movb
dec
pop
inc
mov
sbbb
ficompl
insl
into
push
pop
adc
xlat
daa
movsb
adc
clc
cmp
jo
lock
mov
shll
push
jbe
push
mov
add
push
cmpsb
pop
pop
jns
cs
cmp
movsb
sbb
js
enter
sub
mov
sbb
pop
and
xorb
repnz
sbb
push
push
xchg
xor
lods
jle
mov
sbb
int3
in
adcl
test
push
jl
adc
repz
pop
dec
imul
dec
jae
cwtl
and
adc
sub
aam
cmp
imul
scas
or
and
movsl
lret
mov
test
xorl
and
adc
jno
dec
in
mov
insl
xchg
sbb
push
pop
jb
repnz
dec
jle
test
sub
jnp
ljmp
in
inc
lcall
cmp
fs
xchg
dec
cwtl
dec
nop
cmp
andb
jns
leave
adc
xchg
dec
jo
in
in
lods
shld
test
pusha
dec
int3
dec
in
push
dec
or
mov
lcall
mov
ja
bound
pop
add
lods
fmuls
sbb
sub
or
cmpsl
mov
xlat
adc
push
in
mov
xor
ucomiss
movsb
xor
cmpsl
iret
xor
loopne
test
sahf
push
inc
cltd
in
mov
fadds
push
push
and
mov
push
mov
xor
out
jno
or
push
movsb
fcompl
xor
sets
inc
movsb
fmull
mov
scas
fildl
add
mov
gs
shlb
fadds
imul
das
inc
arpl
inc
mov
nop
or
ds
pop
xlat
nop
and
dec
mov
les
jo
subl
push
enter
test
insl
call
xchg
test
xchg
xor
push
stos
movsb
mov
adc
cmp
or
popf
add
add
sbb
fdivs
cs
insl
out
inc
lcall
xchg
pop
xor
loopne
stc
or
push
mov
ret
addr16
xchg
xor
xchg
dec
test
cli
out
push
repz
mov
sbb
push
cmpxchg
sub
mov
mov
push
sub
mov
fmulp
rorb
inc
or
push
and
push
mov
movl
jae
xor
jg
dec
sahf
or
pusha
fs
add
xlat
inc
es
std
sbb
dec
dec
mov
jo
push
pop
mov
adc
shrb
fsub
jo
js
push
jecxz
xor
pushf
fstl
daa
xorb
mov
jmp
neg
nop
sahf
pop
jp
sub
ds
push
lock
mov
xor
nop
adc
dec
js
or
mov
push
and
xor
or
add
xchg
inc
dec
sbb
push
repz
sbb
pusha
adc
cltd
cmp
popf
outsl
adc
pushf
add
xchg
or
dec
and
test
mov
jp
hlt
es
filds
adc
out
jecxz
sbb
mov
psubsw
out
sub
hlt
xchg
insb
or
add
dec
les
subb
mov
sbb
sub
int3
cli
ljmp
mov
stc
and
in
or
dec
inc
outsb
incl
mov
push
lods
lcall
and
dec
pop
xchg
mov
out
push
or
or
ret
repnz
mov
call
cmpsb
mov
loop
fbstp
and
iret
mov
and
jmp
fcomps
lods
or
fsubs
xlat
or
cmp
push
push
push
mov
rcrl
movsbl
push
sbb
push
and
xor
cs
decl
aaa
fs
gs
jge
aaa
xor
mov
int3
loopne
imul
xor
push
mov
shlb
xor
push
push
movsb
or
loopne
and
jns
pop
incl
or
sar
jbe
xor
push
mov
js
xchg
imul
push
test
mov
adc
sbb
cltd
inc
pop
andb
loopne
dec
sub
or
or
inc
xchg
or
mov
addl
cmp
add
aad
addr16
mov
fidivl
cmp
fidivl
loopne
push
sbb
pusha
push
imul
xor
sbb
es
add
sbb
nopl
movsl
jae
ror
mov
mov
movb
xor
adc
xchg
aam
roll
xchg
push
xchg
ljmp
leave
xchg
cli
lcall
js
int3
adc
lods
push
lret
rolb
into
adc
inc
xor
aam
pop
shrl
jns
loopne
sub
sar
dec
add
fidivrl
xor
idivb
cmc
clc
into
or
pop
and
pop
cltd
adc
pushl
mov
sbb
sbb
ret
data16
xchg
call
jne
dec
fwait
push
fs
pop
pop
fcoms
pop
dec
xor
push
ljmp
push
xchg
fmulp
push
into
push
jo
iret
sbb
xor
and
fwait
xchg
sub
rcll
pop
mov
dec
jae
add
mov
clc
jbe
in
les
sub
jb
and
outsl
and
les
adc
or
mov
cmp
sbb
add
jmp
jbe,pt
je
pop
or
mov
inc
lahf
adc
pop
push
sbb
cvtps2pi
aam
add
or
xor
xchg
xchg
lock
leave
mov
xor
and
jle
push
cmpsb
daa
mov
jne
ja
sub
mov
pop
fbld
ja
cmp
cmp
stos
pop
sub
adc
lret
ja
jae
shrb
gs
in
cmp
push
cmp
xchg
sub
inc
cmp
xor
ljmp
in
es
sbb
pop
adc
pop
pop
rclb
sbb
sub
mov
dec
or
mov
insb
add
cmp
popa
sbb
stos
dec
and
xchg
xlat
adc
cmp
pop
push
adc
xchg
sti
push
fwait
add
jge
addb
out
pop
dec
std
enter
aaa
and
cli
adc
pop
sbb
add
sub
daa
dec
scas
xchg
ficoms
cmp
je
jl
cmp
and
ret
lret
push
mov
xchg
push
and
push
push
lods
jl
mov
sbb
arpl
dec
lret
sbb
lods
add
add
add
and
fmull
adc
pop
rcrl
xor
aas
or
jle
sub
fs
jne
or
sbb
shrb
int3
cmpsb
add
push
sbb
fldl
scas
jne
cltd
pushf
add
sti
mov
pop
repnz
in
loopne
addl
inc
rcrb
and
cmpsl
mov
call
cld
mov
add
dec
ja
xchg
mov
insl
and
loopne
push
lods
jne
mov
call
pop
cltd
or
out
sbb
cwtl
or
loope
cmp
xchg
jno
jle
xchg
inc
sbbl
and
dec
xchg
push
add
push
cmp
loop
or
sbb
mov
inc
inc
xor
sub
mov
in
and
add
xor
mov
test
icebp
scas
push
cltd
dec
push
push
push
jl
adc
js
push
jno
and
dec
testb
icebp
aam
fmull
inc
in
addr16
in
cmpb
add
push
jmp
iret
xchg
push
xchg
push
add
add
mov
add
stc
lock
xor
mov
sub
add
push
mov
push
dec
jae
popa
mov
or
push
aam
jl
mov
andb
shr
je
iret
dec
insl
loopne
push
or
jns
aam
ss
lock
inc
pusha
int
or
add
loopne
imul
sti
mov
in
sahf
test
xor
mov
stos
adcb
sbb
movsb
add
sub
es
cmp
pop
incl
xchg
daa
push
adcl
cmp
push
dec
push
lods
sub
fadd
arpl
adc
jg
popa
mov
or
pop
xchg
ds
ret
imul
sbb
adc
sub
movsb
ljmp
inc
or
andb
adc
and
cmp
add
jbe
shll
sbb
paddd
add
push
cltd
jb
or
and
or
loop
pop
push
and
or
xorb
aas
push
pop
fistpll
add
std
and
int3
or
and
cmp
add
inc
cmp
jb
dec
sbb
dec
jl
stos
push
dec
test
aam
sub
sub
jg
leave
jne
inc
cmp
jae
mov
inc
call
fcmovnb
pop
mov
add
jmp
clc
movsb
int3
pop
mov
and
imul
jne
inc
ja
mov
lock
mov
mov
roll
lret
xor
adc
jge
pop
clc
pop
pop
sbbl
xchg
lock
into
or
pop
cmp
je
fstps
popa
and
rcrb
pop
out
mov
loope
jb
es
les
out
pop
cmp
adc
jp
cmp
mov
outsb
aam
loopne
jecxz
ret
idiv
pusha
pop
push
push
pop
popa
push
ret
or
xor
sbb
cs
arpl
push
xor
sbb
jae
mov
xchg
nop
sbb
enter
sub
shrd
stos
aad
or
inc
stos
rcll
or
mull
call
pusha
or
sbb
aas
dec
addr16
jmp
popa
cmp
dec
cmp
in
lock
sbb
or
cmp
cmp
or
mov
push
shlb
adc
sub
jnp
pop
inc
jmp
into
fsub
pop
push
in
add
add
cmpsb
and
lcall
pop
andb
sub
adc
js
xchg
push
arpl
inc
jb
inc
loope
jae
mov
in
sahf
lods
addl
mov
aas
ret
xchg
pusha
or
adc
imul
xchg
xchg
adc
sbb
out
inc
movb
sub
adc
data16
lret
leave
add
cmp
push
stc
sbb
or
shll
aaa
rol
das
sub
test
inc
bound
lods
insl
sbb
andb
sbb
insb
and
stos
mov
add
xorl
jle
popa
pop
pop
and
lds
xchg
mov
nop
and
jg
and
sub
or
shrb
add
into
fimull
push
bound
pop
out
lret
iret
pop
pop
or
mov
loopne
push
or
aas
inc
jge
xchg
pusha
add
push
jmp
sub
iret
pop
lock
test
pop
clc
push
add
incl
insl
mov
push
addr16
scas
pusha
cmp
mov
ljmp
xor
inc
shlb
nop
shr
mov
movsb
mov
fidivrs
mov
out
sar
and
add
leave
lock
add
jb
and
mov
iret
push
popf
mov
push
pop
mov
pusha
adc
sub
mov
out
or
in
loop
add
push
jns
cmp
das
inc
mov
jns
and
dec
addr16
mov
jns
pop
or
and
mov
testb
addl
jno
pop
popa
mov
or
and
and
inc
enter
scas
lea
inc
dec
xor
push
out
and
or
out
or
pop
dec
into
and
or
xor
loop
dec
push
dec
cltd
inc
cs
add
cmp
mov
daa
nop
mov
cwtl
inc
std
mov
xor
mov
pushf
xor
dec
and
lret
jb
adc
les
movsb
jns
cmp
sbb
inc
xlat
adc
add
or
dec
jo
push
popa
add
mov
psrlw
mov
out
or
outsb
mov
xchg
add
sub
pop
jmp
fwait
jo
shl
punpckhbw
cs
push
jl
dec
es
shrl
pop
and
add
loope
sbb
adc
test
pushf
mov
shll
scas
fnstsw
push
inc
sbb
add
aad
xor
add
inc
fldt
test
push
pop
shrb
imul
fcmovbe
sub
shlb
roll
add
cmp
xor
pop
mov
push
js
mov
inc
inc
xor
jge
enter
push
mov
cmp
mov
ret
dec
mov
or
rcrl
mov
mov
push
pop
mov
and
bound
xchg
sbb
push
add
xor
add
popf
xchg
mov
popa
popa
pop
ljmp
adc
push
rolb
xor
mov
or
movsl
and
or
pusha
add
imull
mov
push
push
add
loopne
xchg
mov
and
outsl
cmp
mov
or
lret
dec
test
sub
xor
add
and
xor
mov
add
addr16
sub
movsl
imull
leave
or
dec
add
das
push
sbb
sub
add
fwait
daa
stc
cld
jecxz
push
scas
hlt
sbb
sbb
dec
push
stc
notb
jl
loope
fs
pop
lods
adc
popl
ds
mov
pop
mov
stos
pop
and
inc
repz
and
mov
add
je
push
orl
mov
stc
sbb
sbb
cmc
sub
mov
or
add
add
push
loopne
jne
fcomps
inc
lcall
addb
sbb
adc
scas
xor
fs
inc
jg
enter
inc
and
dec
imul
in
std
push
scas
cmpb
push
inc
les
mov
cmp
adc
sbb
inc
dec
pusha
adc
int
test
or
lcall
int
push
lock
loopne
sbb
jmp
fsubl
bound
or
push
jo
xchg
push
rol
movsl
mov
sbb
into
pop
push
sub
sbb
or
adc
test
cwtl
add
dec
shlb
dec
in
add
push
push
test
orl
dec
push
insb
or
sahf
sbb
addr16
sub
cs
add
jns
mov
or
xchg
testb
ljmp
add
call
xor
adc
jno
inc
adc
xor
repnz
inc
inc
leave
xchg
or
mov
pop
mov
leave
ret
movsb
das
sarb
sarl
xor
mov
push
push
and
insb
xrelease
add
je
mov
inc
or
ret
and
out
mov
incl
jmp
sbb
xor
push
inc
inc
fs
adc
jbe
test
inc
cmp
mov
pop
pop
push
xor
nopl
andb
popa
add
jl
or
dec
leave
or
pop
jo
rorl
ljmp
rcrb
or
ds
cmp
dec
pushw
int
jnp
dec
out
pop
push
mov
clc
cmp
shll
inc
xorb
imul
pop
or
dec
imul
and
jno,pt
mov
push
add
or
sbbl
insb
cmpsb
popa
lds
mov
data16
hlt
dec
adc
addl
testl
ja
ret
mov
loopne
xor
hlt
sub
push
rorb
movsb
add
stc
push
jle
sbb
add
sti
stos
icebp
or
xchg
movsb
loopne
pop
cmpl
xor
loope
cmp
push
lea
jmp
bound
cmp
sbb
jle
inc
cmp
jb
jmp
xchg
cmp
mov
dec
fdivs
xor
mov
jne
mov
mov
lds
inc
rcrb
adc
jne
mov
into
inc
xor
xor
mov
pusha
add
push
mov
sbb
push
and
lea
sub
ret
cmp
jo
and
sbbb
cmp
js
or
das
dec
test
mov
lret
es
add
inc
inc
daa
mov
and
or
js
mov
sbb
or
pop
sbb
or
pusha
fsub
pusha
mov
push
xchg
dec
add
popa
and
lea
sbb
mov
cli
dec
lret
inc
xor
push
push
xchg
dec
imul
adc
xchg
add
mov
call
xchg
or
ret
sub
mov
pop
jae
mov
pop
xor
and
movsb
jmp
sbb
or
add
mov
add
push
push
hlt
dec
sbb
lahf
and
in
add
and
dec
loopne
dec
in
mov
ficoms
mov
inc
mov
push
stc
shr
shlb
cmc
movsl
test
popf
js
rol
stos
xchg
in
jo
arpl
in
mov
mov
jge
lods
adc
push
inc
or
and
sub
dec
adc
jno
xor
lods
mov
lock
cmp
jb
rcll
and
ret
fisttpl
jbe
mov
push
xor
or
fcoml
mov
mov
test
or
hlt
cmpb
jge
jb
ret
les
mov
stos
popa
data16
inc
jmp
pop
mov
or
or
pop
cmp
in
test
ret
push
lock
inc
pop
insb
cmp
sub
add
inc
cs
sbb
test
aaa
mov
cmp
je
sbb
jae
inc
jmp
aam
add
mov
xchg
sub
adc
jae
add
xchg
add
or
xchg
xchg
push
or
dec
in
movsb
add
add
in
and
add
sbb
popf
mov
add
addl
mov
xor
data16
andl
push
imul
hlt
inc
pop
test
inc
sub
adc
inc
push
or
in
or
jnp
imul
shl
les
loopne
xchg
in
and
mov
adc
addb
in
sub
mov
mov
loope
cmpsb
nop
aad
fsts
or
xor
loope
into
inc
or
xchg
push
and
fnstcw
mov
and
push
push
and
enter
adc
and
popa
out
sahf
int
push
punpckldq
adc
mov
lods
pop
mov
sbb
ljmp
mov
lcall
and
ja
xchg
push
sbb
arpl
lods
or
dec
stc
and
lcall
dec
fnstsw
jl
pushl
mov
inc
cmc
es
movsl
shlb
and
cltd
out
pushf
sub
inc
loop
shlb
mov
inc
lock
xchg
add
push
push
inc
mulb
sub
or
pop
iret
pop
add
jge
mov
cmp
push
aaa
add
imul
sbb
sbb
inc
shlb
mov
adc
or
jecxz
jns
sub
mov
cmp
cmp
jge
test
adc
jl
and
lahf
xor
adc
cld
test
mov
add
adc
imul
mov
jo
jae
or
jecxz
lcall
pop
jmp
mov
jge
loopne
mov
movsl
inc
inc
push
push
lahf
insb
or
mov
out
push
or
in
xchg
dec
movsl
push
in
jmp
jmp
aaa
mov
out
loopne
jbe
shrl
push
sub
faddl
and
push
xchg
jnp
jb
lods
jp
imul
sbb
ret
and
push
add
cld
pop
js
mov
int3
test
cmp
pop
stos
xchg
mov
add
movb
fistpl
fbstp
or
xchg
adc
xchg
and
aas
mov
ret
push
lea
mov
dec
mov
add
in
imul
mov
or
mov
dec
mov
mov
rolb
mov
fisttpl
mov
jbe
dec
test
add
enter
iret
jbe
mov
mov
lea
mov
add
ja
scas
pusha
into
sbb
sarb
mov
xor
enter
cmp
idivb
mov
adc
inc
jb
mov
cwtl
fdivr
cmp
push
pop
fucomip
popa
mov
push
aad
cmpsl
push
incl
mov
mov
mov
or
push
sub
cld
push
or
sub
lret
shlb
jb
pop
mov
xchg
mov
or
mov
mov
sub
jbe
mov
stos
or
roll
jg
pop
rolb
mov
cmpsb
sbbl
pop
fimuls
sub
push
sbb
mov
xchg
shll
push
dec
push
xchg
mov
mov
push
inc
lret
popa
adc
push
rcrb
nop
adc
enter
sbb
cli
jge
push
fidivrl
and
xchg
fmull
adc
pop
mov
nop
fsubrs
jl
dec
rcrl
and
cmp
xchg
les
and
sub
cmpsl
add
lcall
add
or
push
xchg
mov
fstpt
adc
add
lods
pusha
mov
or
adc
xchg
pop
mov
lock
pop
rclb
rolb
dec
imulb
and
jl
lahf
adc
xor
or
push
addr16
cmpsl
mov
mov
push
xchg
mov
inc
jb
push
push
ret
imul
leave
sbb
loopne
lock
pop
adc
clc
mov
fstpt
adc
inc
cs
and
daa
mov
adc
xchg
lea
mov
mov
out
add
icebp
adc
cmp
fmuls
xchg
aam
ret
inc
push
data16
adc
loopne
sarb
dec
hlt
jne
mov
push
shrb
xchg
add
mov
dec
or
cmp
or
pop
add
mov
adc
out
add
in
shrl
inc
stc
xor
push
out
sbb
test
clc
in
dec
jae
push
rclb
test
pop
loope
or
loope
add
mov
sbb
daa
add
mov
pop
mull
push
xor
and
mov
sbb
jne
adc
sbb
rep
out
pop
imul
lds
rorb
mov
add
sub
push
cltd
sahf
jo
mov
movb
cmp
fwait
push
xchg
push
sbb
dec
inc
dec
jnp
adc
insb
add
push
aas
jg
pop
movsb
shlb
lock
cmc
push
xor
addr16
adc
xchg
jmp
ds
sbb
push
pop
or
xchg
jne
sahf
add
lahf
mov
lret
roll
mov
dec
jg
adc
shll
jmp
push
mov
or
sbb
pop
mov
adc
mov
inc
add
clc
and
and
mov
vunpcklps
adc
jmp
add
mov
adc
call
aas
dec
jns
ffreep
adcl
ss
daa
test
and
fadd
inc
pop
add
and
orb
jb
movlhps
inc
push
and
xchg
subl
pop
xor
dec
loope
nop
test
mov
add
add
dec
pushf
sbb
arpl
mov
aas
push
fcomps
rcrb
fsubl
pop
sbb
inc
test
push
mov
xchg
imul
sbb
fwait
cmp
sbb
jae
pop
mov
sub
ret
xchg
jnp
ja
popf
mov
mov
bound
ds
les
mov
mov
in
sbb
mov
lea
xchg
jmp
add
js
inc
or
insb
xchg
pusha
dec
sbb
xchg
js
push
inc
or
or
jo
sub
ljmp
add
sbb
es
sub
mov
adc
cmp
xlat
mov
mov
clc
mov
jle
add
clc
or
jmp
les
hlt
push
fmull
push
adc
repz
es
jnp
jmp
cmp
jne
loopne
adc
mov
hlt
cmp
notl
jge
push
and
mov
mov
pop
add
daa
push
shrb
cwtl
inc
test
pop
sub
sbb
imulb
pop
mov
sub
push
add
icebp
in
mov
pop
fwait
dec
ret
sub
pushf
les
push
cltd
in
insb
lock
push
push
adc
cmp
jg
inc
sarb
push
sbb
jp
imul
dec
push
scas
sarb
dec
push
jle
das
push
push
rorb
push
imul
add
or
xchg
shlb
fidivrl
ss
bound
add
lahf
nop
push
mov
add
mov
add
inc
test
shl
xor
or
andl
jmp
shr
and
out
movsb
hlt
adc
or
test
mov
call
lods
orb
mov
movsb
sub
jge
xchg
ja
mov
add
out
loope
add
je
push
orl
lock
xor
push
sbb
mov
sbb
sbb
fnstenv
mov
imul
clc
xor
fistpll
cwtl
push
push
jp
jns
xchg
inc
rclb
outsb
ret
aas
push
mov
push
jge
fisttps
ror
test
xchg
int3
mov
push
jge
lea
push
test
movsl
fstp
fisubs
lret
sub
in
sub
vmread
push
mov
inc
push
mov
js
std
fistl
xor
and
loope
push
cli
cmp
fmul
pop
dec
add
insb
push
cs
sbb
xor
cli
mov
pop
or
mov
inc
mov
inc
stos
cmp
jbe
insb
jl
cmp
mov
adc
fisubrs
in
shlb
or
push
xchg
xchg
jno
push
sahf
xchg
std
mov
lret
fisttpll
or
shrb
insl
shrl
mov
aam
movsl
or
insb
cmp
stc
push
ds
pop
adc
adc
in
add
jmp
cli
mov
jns
imul
out
push
cmpsl
mov
rcr
movb
push
loop
hlt
or
cmp
and
pop
dec
fldt
mov
mov
outsl
psubq
stc
sbb
add
add
cmp
xchg
push
jp
push
add
add
add
pop
cmpsl
loopne
mov
sti
rep
movsw
push
xchg
or
mov
xor
xor
mov
shr
mov
aas
rorb
inc
inc
cmp
jle
movb
pop
push
lea
cmpb
cwtl
shlb
in
push
loope
push
flds
sbb
mov
andb
fldenv
lock
jbe
push
mov
or
jb
and
in
fbstp
push
cld
je
push
push
xor
and
sbb
inc
ljmp
and
sub
xor
sub
and
movsl
cmpsl
roll
xor
jae
pop
pop
inc
jae
es
dec
mov
imul
cli
push
or
insl
into
pushl
or
push
push
jl
fs
cmp
xlat
sbb
sbb
mov
repnz
cmpsl
xor
out
xor
loopne
sub
push
clc
xor
inc
push
and
clc
mov
mov
dec
add
or
in
nop
inc
lcall
cld
test
mov
inc
and
pusha
or
sub
mov
dec
fisubl
fimull
orb
add
dec
dec
dec
add
mov
dec
or
jmp
or
jmp
or
jno
aaa
aaa
aaa
or
por
jmp
aaa
aaa
aaa
aaa
adc
pop
adc
push
adc
dec
adc
dec
aaa
aaa
aaa
aaa
adc
aas
pop
jmp
sbb
xor
sbb
xor
jmp
sbb
es
and
aaa
aaa
aaa
sbb
pop
pop
jmp
and
or
and
or
jmp
and
pop
fsubl
test
mov
lds
shl
or
int
xchg
xacquire
fpatan
cmp
ret
incl
int3
aam
repz
fsub
in
hlt
cld
add
out
lcall
jns
out
and
sub
ss
sahf
out
inc
inc
dec
dec
sahf
out
sahf
push
pop
pop
arpl
jns
out
jb
jl
xchg
fnstcw
sub
add
and
or
or
push
movups
test
call
adc
sbb
sbb
push
pop
and
and
aas
add
repz
lahf
or
sbb
aas
dec
pop
push
or
addl
imul
or
or
out
pop
ret
cmp
jle
mov
sub
jmp
in
pop
mov
js
xor
out
jae
sub
push
inc
xor
push
and
sbb
pop
movsb
xchg
rorl
add
dec
or
test
call
sub
xor
aaa
mov
mov
cmp
jbe
add
insl
jne
pop
notl
loope
xor
push
rolb
or
sti
push
or
inc
lcall
icebp
inc
mov
lds
sbb
inc
pop
mov
pop
pop
mov
movsl
loope
in
test
jno
cmp
test
add
mov
inc
sahf
pop
daa
add
mov
push
or
mov
aad
adc
ss
or
jge
mov
push
jbe
sbb
es
mov
push
ficompl
inc
dec
xchg
mov
sbb
adc
push
sub
push
cmp
fs
adc
add
push
jbe
and
mov
les
test
push
fildll
add
pop
add
inc
cmp
and
jl
js
flds
sub
subl
mov
fnstsw
mov
mov
add
cmp
or
add
mov
jmp
stos
pop
loop
pop
add
push
mov
inc
inc
imul
insl
mov
stc
shlb
cmp
mov
cmpsb
test
sub
fsubrp
adc
mov
loope
in
and
lahf
adc
mov
les
jg
xchg
call
sub
dec
ljmp
fdivrl
mov
stc
xlat
jne
enter
pop
sub
loopne
push
push
repnz
ss
mov
dec
ret
sbbl
mov
cmp
jne
hlt
or
sbb
and
add
or
xchg
jne
lock
xchg
pop
inc
ja
int
jmp
scas
add
sbb
mov
jne
imul
aas
inc
push
sbbb
lret
in
scas
roll
and
data16
loopne
sbb
in
lea
adc
mov
sub
add
cmp
and
or
lea
sbb
sbb
cld
js
pop
ret
push
mov
je
je
and
push
xchg
lock
imul
dec
cs
adcb
pop
inc
or
adc
cmp
mov
fidivrs
cmp
push
sub
or
dec
and
into
add
jecxz
or
push
or
adc
pop
dec
ljmp
pop
jnp
inc
bound
pop
int3
jnp
push
and
jnp
cmp
xor
jp
and
fiadds
pop
or
xchg
and
push
popl
fadds
dec
push
mov
shl
and
push
xchg
jno
faddp
push
add
or
mov
fcmovnb
nop
or
mov
pop
outsl
adc
cwtl
shlb
movsb
mov
mov
cmp
popa
sub
or
adc
icebp
in
lret
or
aaa
cmp
fwait
jle
sbb
aas
mov
xchg
insb
rcrl
aam
mov
mov
imul
rcll
scas
and
inc
add
mov
stos
cmpsl
sarb
push
adcl
fsubl
xor
sti
fs
in
loopne
imul
xor
push
cmc
and
mov
orb
repz
daa
lods
and
add
testl
add
lds
jbe
mul
push
add
sbb
xchg
push
cmpsl
push
movsl
ds
add
call
mov
pop
icebp
jne
outsb
in
mov
ret
lcall
gs
fnstenv
ret
int3
mov
les
dec
pop
push
repnz
popf
dec
add
inc
sub
or
fldt
repnz
decb
loop
je
push
je
push
nop
push
xchg
jmp
scas
lods
sbbb
inc
cmp
addb
mov
push
movsb
sub
sbb
sbb
inc
es
loopne
rclb
cltd
xchg
loopne
repnz
jb
testl
enter
repnz
or
testl
imull
and
lret
mov
cmpb
mov
lret
pop
les
mov
mov
cmpxchg
add
je
push
or
pop
push
push
mov
cmp
mov
movq
pop
mov
movsb
sub
dec
xor
data16
pushl
pop
lods
cli
xor
xchg
cmp
or
sbb
or
ss
add
orl
dec
jge
daa
cltd
faddl
or
call
xchg
movsb
loope
in
pop
dec
ficompl
das
add
mov
cmpsl
jnp
jle
cmp
add
in
in
sub
les
or
data16
jle
pop
mov
add
push
mov
pop
and
or
add
xor
das
xchg
fmull
adc
mov
xchg
sub
test
push
in
jmp
add
mov
test
jge
fisttpll
or
fiaddl
add
pop
pop
fldenv
in
add
dec
into
cmp
imul
adc
negb
sbb
add
fsubs
fimuls
and
dec
adcb
out
push
popl
push
sub
rcrl
xor
cmp
mov
push
pop
mov
je
addr16
dec
mov
jle
add
stos
sahf
in
push
pop
push
test
jmp
outsl
push
sbb
cmp
fadds
and
cmp
inc
add
xchg
and
add
loopne
inc
fadds
sbb
subl
xor
push
dec
fcomps
pop
jo
or
sbb
inc
and
pop
mov
mov
es
pop
jle
xchg
cmc
sbb
or
pop
jne
sbb
jmp
cmp
je
lcall
adc
fisubl
jnp
inc
call
pop
mov
xchg
movsl
aam
insl
or
push
add
leave
enter
in
or
bnd
push
iret
in
bound
sbb
inc
or
push
repnz
inc
out
or
adc
inc
cmp
push
add
imul
pop
fistl
push
cmp
addl
dec
push
int
cwtl
jl
dec
iret
fs
and
mov
xor
sbb
sub
and
fsub
mov
rcrl
and
pop
xor
xor
inc
xchg
jo
cmp
dec
js
push
aaa
sub
and
push
add
add
shrb
xor
insb
xchg
xchg
mov
xorl
mul
add
inc
mov
pusha
or
pop
mov
mull
and
fs
cmp
sbb
or
and
outsl
cmp
and
xor
mov
in
cs
enter
adc
pop
stos
lea
dec
test
jne
jmp
dec
or
movzbl
cmp
push
les
mov
addb
xor
shl
inc
add
push
cmp
cmp
outsb
sbb
cmp
inc
and
push
enter
push
inc
push
es
test
push
aas
pop
mov
pop
pusha
fs
pop
js
lret
shl
and
jns
enter
and
js
jg
out
frstor
pop
mov
pop
nop
xchg
cwtl
dec
aaa
dec
gs
mov
fs
adc
aam
mov
dec
gs
push
incl
mov
popf
inc
incl
jge
add
and
femms
mov
test
leave
in
mov
and
xchg
je
jl
and
das
shlb
mov
push
cmp
jl
sub
xor
add
inc
or
add
jp
fldl
lea
or
andl
daa
rorb
and
fistps
xor
lods
sub
cli
loopne
and
or
sti
fiadds
add
pop
jl
jmp
sub
push
lret
or
pop
xchg
sbb
fucomi
les
mov
cmp
je
or
ret
mov
and
and
insl
inc
fisttpl
adc
jmp
rcrl
adc
jo
mov
in
xor
rcll
xor
lahf
and
daa
cmp
sbb
js
roll
mov
sbb
inc
sub
jmp
fwait
push
enter
imul
sub
insl
leave
mov
xchg
push
ret
cmpsb
or
sub
rcl
push
fsubr
xchg
mov
hlt
push
pop
cmp
mov
add
cmp
jle
pop
jle
in
es
repnz
add
inc
fistpl
sbb
mov
adc
jp
adc
jle
mov
mov
add
mov
add
pop
sub
add
xchg
adc
mov
push
cmp
je
cmp
jne
push
inc
pop
inc
adc
shlb
and
sub
sbb
mov
mov
mov
test
call
push
push
clc
mov
in
push
dec
cmp
mov
or
mov
sbb
xchg
and
jae
pop
pop
std
and
bound
xor
ja
adc
lock
test
or
cmp
push
dec
call
jl
sbb
add
mov
push
push
jns
inc
dec
cwtl
clc
jmp
call
mov
xor
daa
add
add
fwait
push
push
jnp
les
add
sti
sbb
ss
sar
les
mov
sub
push
xchg
mov
adc
data16
fwait
jb
pop
addb
sub
sarl
jne
push
nop
icebp
addr16
adc
rolb
or
and
sub
mov
push
jo
fdivrs
dec
fs
inc
shl
and
add
in
and
xor
fisubrl
out
ss
push
push
imul
fstpt
jo
adc
xchg
call
add
lea
lods
daa
mov
shlb
adc
rorb
inc
fsubs
cmp
jne
inc
adc
xchg
rorl
test
xor
inc
int3
adc
xor
cmp
repnz
subb
and
inc
or
or
sub
imul
bound
ljmp
or
insl
pusha
mov
int
inc
or
sub
out
lds
adc
mov
testl
arpl
into
imul
pop
pop
pop
fstpl
sbb
lock
mov
push
outsl
sbb
repnz
add
mov
add
mov
sbbl
or
lods
mov
mov
nop
ret
inc
andl
aam
insb
notl
inc
bnd
pop
jo
scas
mov
sbb
xchg
int3
push
mov
in
xor
in
xchg
into
xchg
lea
adc
adc
xchg
lods
and
cmp
shrl
and
lcall
or
jge
fs
inc
jmp
imul
out
pop
cmpsl
cmp
inc
dec
jbe
mov
adc
mov
pop
dec
ja
adc
mov
push
push
inc
hlt
sub
push
cs
frstor
rol
adc
jmp
cmpsb
test
sub
clc
adc
iret
cmp
rorb
aam
jae
fisttpll
mov
clc
cmp
add
or
jmp
daa
cmp
xchg
jbe
add
mov
rclb
stos
xchg
jno
ss
imul
inc
sbb
jo
sbb
adc
fadds
cmp
test
ficompl
push
add
insl
and
add
jl
dec
int
ss
rol
mov
in
pop
push
inc
sbb
lods
or
mov
mov
xchg
aas
mov
xchg
icebp
cmpl
fimuls
mov
dec
adc
sti
mov
inc
ss
sbb
jo
dec
sbb
xchg
mov
sub
ret
jmp
inc
lea
repz
jg
inc
or
dec
sub
es
into
jne
mov
or
mov
add
jne
enter
xor
xchg
xor
sti
mov
pop
push
cmp
and
in
push
add
pop
je
lea
ds
in
fldcw
pop
jl
push
mov
scas
or
cltd
lahf
jl
push
add
push
nop
and
jbe
jo
inc
and
or
xor
or
jp
xchg
ds
test
out
sub
push
es
mov
dec
dec
push
out
mov
mov
aas
push
addb
xor
push
outsb
mov
xchg
imul
cltd
test
aas
push
fnsave
or
add
faddl
fstl
fldz
fcomp
fnstsw
clc
adc
sub
fnsave
pop
fsubr
pop
faddp
dec
pop
stos
pop
push
insb
pop
xchg
lods
popl
sbb
inc
addr16
fldcw
hlt
mov
push
or
jo
gs
sti
lock
dec
inc
inc
lock
repz
mov
jle
aam
adc
ljmp
push
inc
push
or
orl
sub
add
nop
mov
xor
in
inc
movb
sub
push
add
andb
inc
or
xchg
push
scas
xor
add
test
es
iret
es
cwtl
xor
data16
sbb
add
and
imul
add
aaa
hlt
dec
outsl
insl
pushf
fs
roll
stc
mov
int
mov
out
in
aas
in
sarl
fimuls
enter
xor
xor
cmp
loopne
loopne
movsb
repz
stos
lahf
loopne
sbb
das
mov
or
mov
adc
mov
cmp
call
pop
lcall
pop
and
xor
cmpb
jmp
test
sbb
adc
push
es
xor
jp
xor
xor
push
jge
movsb
add
or
pusha
ficoml
sub
lret
shl
cmp
dec
jl
ss
sbb
adc
push
mov
imul
jmp
push
mov
dec
or
movsb
mov
cwtl
jmp
fstpt
and
or
adc
xor
rolb
sbb
pusha
roll
jo
stc
rclb
popa
sbb
and
push
or
and
adc
sti
push
push
imul
sub
add
cs
add
lods
fdivrl
sbb
add
or
aaa
int
rcr
add
inc
xchg
or
stos
or
test
adc
pop
inc
repnz
cmpsb
cld
push
cmp
jb
push
and
mov
jb
adc
or
add
inc
pop
xchg
add
lock
xchg
push
adc
ret
dec
call
lods
clc
add
stos
addr16
push
pop
les
inc
mov
inc
inc
and
lods
and
pusha
lods
das
mov
cmp
dec
push
stos
test
or
rcrl
jo
mov
pop
nop
lcall
cmp
movsb
mov
idivl
add
inc
aad
jb
in
mov
dec
lock
loop
and
and
and
sub
or
mov
add
push
aam
inc
or
xchg
jge
movsl
push
add
fsts
sbbb
xor
insb
cld
xchg
or
test
es
sub
test
jge
cmp
jne
js
mov
or
cwtl
lods
adc
sub
out
movsb
mov
cmpsl
cmp
in
mov
pop
lock
jo
out
mov
mov
lahf
mov
loope
in
sbb
cmp
inc
and
aam
push
sub
cs
cs
xorl
je
xor
push
jmp
cmp
rolb
or
cmp
nop
es
rclb
fs
or
sbbb
mov
mov
rcl
add
and
fidivl
xchg
add
mov
or
in
addb
ror
repz
mov
jb
pop
test
xchg
mov
jnp
ja
and
pop
jbe
pop
push
push
dec
and
push
mov
xorb
push
dec
inc
add
push
addr16
dec
fldl
sub
jge
cmc
aam
sahf
adcl
dec
xchg
or
jmp
jnp
dec
sub
add
inc
lea
adc
test
sbb
mov
test
inc
rolb
push
xchg
mov
xor
cmpsl
xchg
adc
mov
adc
mov
pusha
popa
xor
mov
or
cmp
add
push
pop
insl
dec
pop
add
add
mov
or
or
or
dec
movsl
loope
test
pop
rorl
sti
je
and
push
es
les
sbb
repz
inc
mov
xor
rcrb
pop
cmp
bswap
push
xor
mov
dec
ljmp
or
xor
inc
mov
pop
mov
jnp
xchg
arpl
add
nop
rolb
fnstenv
out
or
lock
bound
pop
sete
push
pusha
cmc
add
cmp
insl
popa
dec
adc
add
xor
push
xchg
lods
das
lea
sbb
fisttpl
stos
jl
movsl
add
loop
in
movsl
push
mov
mov
in
outsb
pop
push
pusha
mov
enter
addr16
adc
aam
fsubrl
adcb
jp
movl
orl
add
je
aas
xchg
outsb
psrad
lds
dec
adc
call
add
pop
sub
daa
js
or
dec
mov
call
leave
in
aam
jb
or
je
or
adc
and
repnz
idivl
pop
inc
or
enter
cmp
iret
add
rcr
call
test
inc
ljmp
sub
mov
push
addb
sbb
aam
and
lret
cld
adc
rcrb
jbe
add
xchg
add
sub
and
push
int3
adc
push
dec
enter
adcb
add
in
cmpsb
pop
lock
jge
dec
sbb
mov
fs
push
xchg
xchg
xor
scas
pop
arpl
je
xor
push
shll
in
imul
xchg
sub
testb
sub
add
push
xchg
push
pop
inc
pushf
xchg
push
push
jo
imul
call
icebp
mov
dec
fld1
ret
filds
addb
js
push
out
fcoms
mov
adc
xor
push
out
dec
adc
sbb
mov
add
mov
and
push
push
sub
lea
inc
inc
xchg
fisttps
dec
inc
test
push
xor
inc
sub
pop
pusha
mov
movsb
add
loop
xor
fldenv
add
mov
adc
sub
push
adc
movsl
movsl
pusha
enter
adc
adc
bnd
or
sbb
dec
mov
inc
mulb
push
push
dec
add
push
pushf
jae
and
adc
pop
aad
push
or
push
lods
notb
lret
shlb
outsl
jmp
mov
mov
pushl
lods
sub
xchg
fs
mov
push
fiaddl
mov
sbb
jae
test
cmp
push
pop
push
movsl
gs
ds
sbb
rcll
add
in
dec
sub
sbb
into
xchg
subl
adc
or
and
gs
nop
fisttps
incb
or
ds
inc
push
sub
cmp
add
outsl
inc
out
bound
sbb
xor
dec
imul
cmpsl
dec
and
fcoms
cltd
sbb
jg
push
movsl
cmp
in
test
mov
fdivl
outsb
popf
bound
add
adc
idiv
daa
dec
push
pop
inc
lret
outsb
loopne
fsubs
and
je
outsb
adc
test
gs
mov
jl
bound
rcrb
call
or
shl
push
xor
add
pop
add
enter
jmp
fisubrs
add
add
add
pop
add
or
ret
imul
flds
cmpl
mov
mov
into
fisubrl
int3
mov
mov
mov
push
cwtl
shl
pushf
adc
inc
or
xor
nop
mov
xlat
in
xchg
test
mov
mov
adc
into
mov
or
xchg
mov
mov
jmp
insl
inc
or
xorb
sub
pop
jno
je
sbb
pusha
pop
nop
rclb
rol
call
rcl
xor
out
data16
push
add
pop
jp
insb
push
and
pop
lods
daa
pop
es
inc
jo
sti
imul
arpl
inc
shl
jo
jne
lock
clc
sahf
sbbb
add
adc
cltd
and
test
sub
scas
inc
push
adc
mov
out
jne
xchg
jmp
or
in
cmp
sub
bound
imul
loop
fstl
mov
sbb
mov
pop
push
out
adc
xchg
push
add
push
mov
insb
cmovp
incb
adc
dec
push
or
imul
pand
pop
or
int3
or
nop
sub
jmp
aam
and
jl
das
orb
lods
es
jge
pop
fstl
fmuls
or
inc
push
ret
and
mov
jle
fadds
mov
sub
add
movsl
jl
hlt
enter
sub
lea
testb
xchg
loopne
dec
dec
aam
and
jne
add
call
adc
push
dec
js
push
add
je
push
repnz
inc
movsl
add
loopne
push
je
es
inc
lea
inc
sbb
mov
stos
xchg
scas
imul
or
dec
sub
mov
cmp
or
or
sbb
cmpsl
cmp
je
fs
push
inc
in
and
mov
xlat
enter
and
sub
leave
sub
sbb
sbb
inc
push
add
add
fistpl
xchg
movsb
clc
shrl
mov
jl
je
out
mov
movzbl
sbb
sub
pop
adc
inc
lds
fsubr
stos
inc
loop
incb
scas
loopne
mov
mov
lods
pop
lods
in
or
sbb
das
cmp
or
cs
push
test
sub
lods
imul
pop
movsl
mov
lock
or
push
scas
shl
add
push
and
lret
pusha
xor
pop
rcll
push
mov
and
lea
sahf
pop
pop
mov
cmp
lret
cs
adc
or
xor
xchg
jo
mov
sub
enter
push
jo
mov
js
sub
repnz
xlat
jge
add
hlt
rorb
push
aaa
sub
or
cmp
out
sub
je
or
je
mov
scas
imul
jne
mov
icebp
ds
int
add
ss
jne
mov
clc
and
add
or
and
mov
inc
pop
lcall
or
jne
mov
adc
repnz
jge
in
mov
mov
dec
push
pop
mov
loop
push
add
lods
fcom
dec
clc
out
call
dec
rcrb
mov
xchg
mov
cmc
add
push
movsl
or
rclb
sub
inc
jmp
xor
mov
xor
sbb
xchg
shll
std
pop
les
movsb
aas
lea
cmpsl
cmp
int3
arpl
pop
sbb
xchg
lods
adc
iret
add
pop
pop
insb
push
rcrb
add
inc
xor
push
mov
push
movsb
push
xor
push
xchg
dec
sub
loopne
sbb
pushf
cmp
call
sub
mov
mov
jp
mov
ja
pop
leave
cwtl
dec
and
pop
pusha
jns
ficoml
test
fadd
iret
daa
adc
data16
and
mulb
and
call
pop
lahf
mov
aam
in
je
push
xchg
mov
test
pop
inc
lcall
jae
out
fidivl
mov
jge
test
or
add
adc
aaa
push
mov
test
hlt
push
clc
pop
mov
incl
mov
xor
movsl
dec
imul
sbb
or
or
fmuls
rolb
ret
push
or
shr
out
or
xchg
add
addr16
sbb
push
sahf
xchg
int3
pop
sbb
std
jg
adc
xor
fs
xchg
sbb
lret
aam
addr16
subb
enter
xor
jbe
ficoml
mov
dec
inc
mov
int3
add
and
mov
loopne
cld
jne
jb
cmp
and
push
adcb
movsb
push
xchg
adc
pop
mov
push
in
shl
jmp
push
sbb
xlat
sbb
or
test
lea
addl
sbb
mov
stc
cwtl
ljmp
pop
int3
and
cwtl
inc
and
push
add
or
cmp
in
xor
rclb
jg
push
mov
mov
xchg
shlb
cmp
loopne
xor
fstl
ficomps
in
inc
pop
cmc
loop
push
xor
lds
mov
lea
leave
out
mov
mov
xchg
jmp
cmpsb
sbb
shrl
push
or
subl
addb
or
scas
and
fsubrp
sarl
and
xchg
mov
in
mov
xor
jne
mov
aam
jne
add
ret
pop
out
pop
inc
mov
inc
sbbl
inc
test
xchg
scas
xor
shrl
jns
adc
movsb
jnp
pushf
push
stos
cs
adc
pop
or
rcll
add
jmp
xchg
mov
or
mov
ret
cmp
lcall
adc
sbb
mov
mul
cmp
sti
call
cmp
cwtl
sbb
or
xor
add
xchg
shl
push
shrb
movsb
pop
pushf
arpl
stos
add
inc
push
pop
pushf
fsubl
or
ret
and
jnp
nop
movb
wrmsr
and
cmp
mov
dec
fdivrl
jo
mov
pushf
mov
dec
int3
cmp
popf
pop
add
orl
and
sub
jno
push
mov
pop
add
cmpl
divl
scas
aaa
mov
pop
cmp
in
push
test
or
inc
and
test
fiadds
push
xchg
adc
ret
xchg
js
mov
or
fstl
cmp
out
xchg
icebp
pop
dec
ja
sete
in
lcall
pop
ret
xchg
or
sbb
xor
pop
mov
dec
push
inc
or
mov
adc
xor
in
sub
and
or
ss
or
mov
out
inc
dec
call
and
or
sar
mov
test
das
or
mov
push
push
lds
cltd
out
cmpsb
add
cld
inc
shufps
mov
inc
fucom
adcl
inc
push
repz
pop
add
rorl
push
mov
or
sub
pop
push
lea
jno
jns
cmpsl
mov
or
pushf
jbe
adc
xor
pop
mov
cmp
jge
call
mov
push
mov
sub
mov
inc
sarb
rcrb
out
pop
imul
arpl
sti
das
push
shll
inc
inc
jmp
inc
fs
test
xchg
xchg
sub
pop
aas
cmp
cli
icebp
add
adc
idivb
push
test
push
test
adc
pop
add
out
repnz
addr16
cmp
jne
mov
aam
scas
xchg
test
je
pop
cmp
test
in
push
loop
and
mov
aad
inc
add
jecxz
les
dec
add
push
in
out
mov
std
es
pushf
and
je
mov
pop
in
mov
ret
and
mov
xor
xchg
adc
cwtl
into
roll
fstp
xchg
mov
test
adcb
mov
push
cmpsb
xchg
fdivrs
jne
jb
xchg
jmp
mov
mov
cmpl
cmp
add
lcall
push
or
hlt
sbb
mov
pop
sbb
enter
mov
and
adc
add
test
dec
call
and
add
mov
push
shlb
pop
cmp
push
je
mov
inc
cmp
jl
shl
mov
mov
aam
idivb
dec
or
mov
mov
gs
jecxz
adc
clc
arpl
sbb
pop
mov
clc
adc
jle
xor
ss
push
sbb
mov
popf
jb
pusha
in
sbb
mov
adc
cmpb
gs
xor
arpl
sbb
cmp
xor
bound
popa
xor
mov
add
xchg
push
xchg
cmp
or
into
in
popa
mov
xchg
adc
stc
std
add
xchg
stos
nop
nop
sub
xor
test
dec
xchg
xchg
xchg
jne
nop
sbb
or
or
pop
mov
clc
mov
leave
dec
push
add
add
or
adc
cmp
cmp
mov
dec
leave
je
fisttpl
cltd
adc
inc
imul
in
mov
ficoms
cmp
lcall
gs
jmp
mov
xchg
and
mov
sbb
rorb
ss
inc
xor
mov
cmp
xchg
sbbl
pop
test
gs
jb
dec
pusha
dec
movsb
sub
cmp
and
dec
imulb
add
mov
push
add
or
mov
and
dec
mov
lea
inc
sbb
push
fsubrl
push
test
fcmovu
inc
cmp
pop
mov
xchg
mov
pushf
sbb
cmp
add
adc
mov
call
out
cmp
das
movsl
cmp
jl,pn
mov
loopne
push
or
fnsave
nop
ficompl
xor
mov
pop
je
out
fst
xor
shr
xor
mov
or
jb
push
jp
enter
not
mov
js
mov
xor
mov
add
or
add
jmp
add
mov
jg
fcmovne
repnz
xchg
lods
les
and
or
ret
mov
dec
and
jl
mov
inc
xor
scas
inc
daa
popa
loope
in
mov
push
inc
imulb
mov
ret
rorb
adc
xor
icebp
sbb
or
jecxz
ljmp
cli
push
push
mov
xchg
mov
dec
stos
xor
hlt
fcoml
inc
outsl
add
shlb
xchg
lock
lock
sub
xchg
jnp
fld
outsb
mov
jb
xor
sub
inc
push
cmp
out
pop
popa
jmp
add
rclb
sub
cld
xchg
pop
pop
nop
add
sub
test
pop
inc
adc
ss
sub
or
sbbl
inc
es
adc
aas
cwtl
jmp
insb
inc
add
loope
es
outsl
inc
push
cmp
xor
leave
in
mov
xorb
daa
repnz
sbb
popa
ret
pushf
ds
insb
pusha
mov
cmp
add
lea
cld
xchg
movsl
adc
pop
push
inc
pop
shlb
notl
mov
or
and
xchg
cmp
jge
sub
sbb
inc
ret
push
sbb
fisttpl
and
mov
outsb
sub
sbb
and
popf
add
shrb
add
inc
push
lods
inc
add
push
jecxz
sub
pop
add
loope
dec
das
out
jmp
and
push
push
repz
pop
jmp
sbb
or
add
cmp
mov
jns
xor
pop
out
cwtl
dec
xchg
add
cmp
jp
cmp
pusha
mov
xor
inc
mov
xor
testb
jae
xchg
orb
loop
test
or
cmp
fs
xor
or
sub
add
fidivs
scas
adc
sub
int3
mov
rolb
lods
ljmp
push
lahf
das
and
push
adc
and
inc
scas
dec
iret
push
jp
mov
add
cld
fistl
inc
add
or
dec
mov
int
ficoml
or
ja
or
sbb
fs
arpl
add
mov
mov
adc
arpl
sbb
pop
adc
mov
inc
in
cmp
and
or
and
xchg
and
pop
jmp
and
movsb
adc
dec
aad
mov
popa
test
lret
sub
push
push
clc
aad
adc
pop
jne
mov
add
scas
sub
mov
sbb
scas
imul
mov
and
adc
add
dec
enter
or
or
push
push
dec
xchg
sbb
sub
or
add
add
sub
xchg
data16
cli
push
dec
sub
push
xor
xor
rorb
cwtl
sbb
push
cwtl
enter
orl
leave
lret
add
lret
mov
dec
jl
inc
add
add
add
dec
push
cmp
add
pushf
add
or
sub
and
scas
add
sahf
and
pop
mov
push
ss
cmp
push
pop
lods
insl
cmp
ret
scas
adc
push
push
rorb
xchg
mov
mov
cmpb
movsl
int3
push
mov
lret
lods
cwtl
inc
sub
add
and
test
outsl
ljmp
push
gs
ret
and
adc
gs
nop
daa
test
pop
pop
mov
pushf
cltd
dec
xchg
lret
add
push
mov
adc
mov
dec
mov
push
test
mov
outsb
xchg
and
fnstenv
mov
inc
fsubrs
sub
ja
mov
mov
add
mov
mov
out
adc
mov
add
xchg
andb
int3
cld
jge
add
hlt
rolb
pop
and
add
pop
jne
dec
and
cltd
xchg
jge
push
and
lods
adc
cmp
imul
pshufw
mov
jbe
push
push
and
add
mov
xor
xor
cmp
aaa
movsb
mov
jae
sub
cmpb
mov
fstpl
mov
and
and
pop
in
insb
mov
mov
lods
int3
rclb
leave
jae
in
scas
into
and
loopne
jne
adc
push
outsb
add
push
push
test
add
es
pop
inc
jp
pop
adc
call
je
stc
call
jge
nop
loopne
pusha
cmp
mov
in
jg
das
mov
jg
sub
jns
insb
je
adc
cltd
mov
cmp
jne
push
xor
fmuls
dec
call
mov
lret
jmp
and
mov
pop
call
xor
and
cwtl
add
xor
and
aad
ja
shlb
mov
sbb
setne
arpl
sub
cmp
data16
add
cld
dec
addr16
sub
sbbl
push
daa
xchg
inc
fs
mov
xchg
insb
rcrl
mov
xchg
sbb
repz
xchg
imul
sub
adc
lock
or
pusha
mov
sub
mov
adc
outsl
xchg
push
lret
add
and
xchg
inc
repnz
cmp
call
das
and
sbb
aam
aad
roll
js
mov
mov
dec
je
in
sbb
or
and
mov
js
sbb
jb
pop
xchg
lahf
nop
xlat
xor
aam
dec
imul
xchg
sbb
push
push
stc
rorb
xor
arpl
add
pop
inc
dec
out
push
lret
jne
jno
add
push
mov
push
fstpl
xchg
ret
and
add
xor
call
mov
xor
inc
or
adc
adc
rorb
cltd
dec
int
movsl
sbb
frstor
lock
or
add
in
adc
pop
lds
les
or
ffreep
movsl
dec
imul
enter
add
and
in
jae
push
mov
sub
pop
push
mov
xor
fs
add
push
in
enter
icebp
sbb
lea
pop
pop
outsl
mov
jo
test
jmp
push
xchg
xchg
inc
rolb
push
aam
push
ret
dec
test
mov
push
mov
push
es
dec
aam
call
push
add
push
aad
inc
jp
das
xchg
sub
sub
inc
lea
push
sub
push
add
or
lods
aaa
mov
push
mov
and
xlat
xchg
dec
xchg
sbb
inc
sub
xchg
adc
mov
add
push
xchg
out
push
mov
xchg
cld
in
rol
xchg
faddl
mov
bound
scas
dec
dec
sub
mov
insb
push
add
xchg
push
int3
insl
or
adc
sbb
loopne
jne
cmp
cmpl
dec
mov
in
test
ret
outsl
cmp
sbb
dec
dec
clc
or
cmp
push
bound
and
and
subb
bound
loop
xchg
test
jb
aaa
xchg
or
adc
mov
in
mov
aam
adc
popa
movsl
add
dec
sbb
dec
push
in
cmp
dec
cmpsb
mov
adc
lock
xor
clc
dec
icebp
insb
pop
mov
inc
mov
inc
jmp
xchg
and
sub
push
or
test
inc
adc
fistpll
nop
jcxz
push
pop
add
cmp
add
scas
inc
jge
mov
cs
dec
insb
test
sub
push
outsl
sub
pop
mov
inc
inc
enter
push
arpl
aam
push
pop
inc
sub
fsubrs
add
xchg
data16
cmpsl
adc
enter
or
inc
pop
movsl
and
xchg
mov
fdivrl
loopne
sub
and
lods
xchg
mov
ret
xchg
add
pop
inc
mov
js
gs
cmpl
sub
push
cld
xor
xlat
inc
push
inc
xlat
pop
cmp
cli
addr16
imul
add
ret
mov
mov
ss
inc
das
mov
rol
inc
das
sahf
or
inc
sti
jecxz
pop
or
xor
js
sbb
cmp
adc
mov
jl
mov
jne
pop
or
pop
sbb
pop
dec
jge
pop
adc
mov
mov
dec
jb
lret
jno
push
ss
push
sbb
notl
dec
push
outsl
push
push
jo
push
and
aas
inc
pop
xor
popa
ss
aam
xor
dec
push
xor
pushl
adc
jnp
inc
mov
fadds
or
test
or
xchg
ljmp
jl
sti
or
in
addl
cld
pusha
and
or
rolb
push
push
mov
jb
rolb
inc
push
push
xchg
push
fs
mov
or
sbb
jo
xchg
and
lret
xchg
jae
jmp
inc
in
adc
push
mov
push
xor
sbb
inc
push
push
roll
jno
fldcw
and
adc
sub
pop
cmp
iret
cmp
cs
inc
add
adc
js
mov
shrb
das
push
push
xor
dec
cmp
pusha
or
or
dec
jns
sbb
nop
scas
enter
xchg
mov
cwtl
dec
sbb
jle
je
mov
mov
push
add
push
jecxz
sub
mov
pop
call
push
lods
sbb
jo
add
add
adc
jmp
mov
xor
push
xchg
lret
sar
dec
inc
add
jg
rolb
outsl
std
aam
jmp
mov
adc
fs
sbb
test
subb
adc
mov
movsb
fs
or
add
and
jne
rclb
xchg
pusha
int3
out
mov
cmp
sbb
or
into
jp
pop
rorb
lea
pop
out
inc
lock
sub
icebp
pop
aaa
and
mov
mov
repnz
pop
dec
mov
pop
dec
xor
jl
mov
in
xor
push
jecxz
xor
shrl
out
nop
push
jecxz
ja
sahf
inc
int
cmpsl
shlb
lock
mov
fwait
icebp
mov
xor
xor
mov
stc
outsl
push
cmc
ret
test
test
jmp
popf
cli
xchg
in
out
add
push
insl
jo
and
xorl
pop
mov
shl
leave
xor
mov
adc
movsb
dec
js
lock
mov
and
and
push
or
aas
sarl
cmp
or
push
inc
rorb
add
cmp
or
lds
jns
xchg
mov
in
xor
rclb
mov
pop
lods
push
and
aad
xchg
pop
or
je
lods
push
mov
in
xor
pop
rorb
inc
push
mov
ror
xor
shr
xor
es
insl
ljmp
or
or
icebp
add
add
add
push
xlat
push
loopne
xchg
fs
or
out
mov
or
and
xor
add
add
fstpl
inc
test
outsb
sub
jge
mov
add
push
xchg
repnz
repz
test
or
add
xor
and
and
fisubl
fiaddl
or
sub
cmp
mov
repnz
repnz
sub
lea
pop
push
or
xlat
sbb
sub
in
rcl
add
add
sub
adc
add
push
push
nop
in
rcl
call
call
dec
movsl
stc
data16
cli
mov
rol
xor
jae
rol
out
add
push
xor
xchg
cmpsb
jb
fsub
in
dec
shll
or
in
aam
sbb
in
lret
in
push
cmp
xchg
push
adc
les
pop
add
fadd
push
or
call
nop
cmpsb
test
call
in
loopne
cmp
int
add
pop
cmp
cmp
push
rcl
xor
sub
xor
or
int3
inc
int
or
add
in
push
xor
jne
and
and
mov
lahf
or
add
and
push
int3
lcall
adc
adc
add
es
pop
inc
inc
jo
ret
push
jo
sub
sbb
fidivrs
cmp
inc
xor
iret
push
loop
mov
pop
cld
shll
adc
fadds
pop
push
push
call
jo
idiv
lretw
push
clc
jp
push
and
add
add
cmp
lcall
cld
sbb
rcrb
lret
inc
or
insb
icebp
mov
xchg
jo
lods
push
clc
jo
cli
stos
xorb
inc
nop
pushf
aam
aaa
cmp
xor
rorb
inc
in
jb
xor
in
sbb
cltd
lods
mov
add
inc
jo
aaa
cli
xor
xor
fcom
aaa
rorb
add
mov
call
add
jne
add
push
xor
and
cltd
add
push
dec
xor
in
movsb
push
sub
lcall
dec
add
cmp
enter
and
add
pop
cmp
push
leave
and
pop
int
push
test
sub
push
xadd
or
movsb
sbb
xor
mov
and
sub
and
stc
enter
mov
or
stc
fcoms
adc
es
sbbl
cmp
lcall
icebp
jecxz
xor
stc
stc
mov
clc
inc
pusha
aam
pop
dec
mov
cmpsb
pop
or
dec
negb
dec
lcall
dec
adc
fcoml
aaa
insl
xchg
imul
and
add
adcb
and
icebp
mov
sarb
and
xchg
out
pop
add
sub
mov
inc
test
and
jle
loopne
jb
lock
std
test
xchg
add
sub
lea
pop
xor
xchg
mov
enter
sub
scas
cmp
and
aaa
mov
rorb
or
or
mov
adc
ja
pop
pop
adc
inc
jae
push
adc
sub
xorl
loopne
lea
mov
add
sub
sub
pop
sti
out
cs
mov
ret
dec
or
mov
dec
dec
lods
add
ficomps
loope
lock
inc
popa
jl
sub
mov
negl
adc
or
xor
fs
adc
fistpll
adc
jae
push
pop
fadds
or
or
mov
ljmp
outsl
mov
dec
pusha
outsl
pop
loopne
ror
mov
mul
mov
pop
mov
push
test
mov
test
pop
jno
movb
daa
mov
cmp
jb
cmp
ja
mov
imul
retw
loope
addr16
mov
add
dec
je
add
push
sbb
and
lahf
divb
add
pop
push
inc
adc
pop
lds
ret
push
xor
push
mov
cmc
aas
movsb
bound
xor
mov
cmp
je
or
clc
dec
add
push
fsubs
jne,pn
add
cmp
pop
sbb
out
mov
inc
push
push
incl
jmp
dec
mov
dec
xor
fwait
gs
lock
jl
je
pusha
add
adc
push
popa
divl
sbb
cli
dec
or
add
fistl
repz
cmp
fs
dec
inc
push
add
adc
inc
sbb
mov
and
pop
orl
out
insb
push
inc
clc
lahf
arpl
lock
cli
push
out
mov
lea
inc
je
mov
popf
dec
lock
and
clc
add
int
jnp
xorl
pop
push
inc
sti
sti
cmp
notb
adc
mov
add
in
push
loopne
lret
xchg
shlb
or
ja
pushf
push
inc
or
mov
xor
push
add
das
insb
xor
jl
cmpsb
fiaddl
xor
ss
orb
or
rcll
loop
jne
mov
icebp
push
addl
pop
fsubs
jb
add
aaa
jb
cmp
imul
add
jmp
cwtl
aas
rcll
and
and
dec
hlt
xor
add
adc
test
jne
in
and
inc
add
push
test
sub
dec
or
add
adc
jae
mov
jmp
dec
shlb
mov
nop
subb
sub
orb
or
or
push
add
xor
rcrb
cmp
jg
or
jge
and
jle
cld
outsl
outsb
outsb
es
sub
sub
and
pop
cmp
jl
movsl
aad
fistpl
adc
inc
test
mov
add
and
jbe
mov
outsb
lock
jne
or
je,pn
test
jne
je
outsb
and
sub
pop
add
sub
xchg
add
sti
adc
push
xchg
adc
sahf
popa
enter
push
loop
sbb
test
lock
inc
out
adc
dec
push
push
mov
inc
and
leave
xor
sbb
pop
mov
mov
jbe
or
or
mov
test
mov
es
and
xor
inc
loope
lahf
mov
jb
scas
dec
outsb
mov
jmp
adc
xor
inc
and
xor
rcr
push
ret
loope
and
mov
jle
shld
sbb
arpl
out
js
jb
test
sub
xchg
sub
push
jge
cmp
and
outsb
cmp
mov
add
inc
and
lea
sub
xor
mov
add
pop
jb
subl
pop
cmp
mov
adc
inc
iret
add
out
das
mov
or
xchg
sbb
pop
and
cwtl
xor
mov
ss
mov
incl
outsb
mov
pop
pusha
cmp
push
shrl
iret
push
inc
and
jae
cmp
dec
xor
aas
fcompl
andl
xchg
add
or
adc
movsb
lahf
fmuls
add
mov
cwtl
xchg
jp
mov
jbe
pop
mov
xor
add
cld
xchg
in
and
and
inc
and
ds
add
std
and
in
movb
mov
pop
aad
adc
dec
and
mov
inc
inc
mov
lds
scas
jl
add
cmp
jbe
cmp
stc
push
sbb
push
es
cmp
mov
sar
push
or
rorl
push
cmp
lock
popa
pusha
dec
popa
hlt
stc
add
add
jae
push
add
lret
inc
addr16
or
or
in
loopne
pop
in
orl
out
lcall
ret
or
sti
pusha
jb
cs
or
fwait
jecxz
adc
jbe
add
inc
fisttpl
mov
jp
adc
sbb
jno
popa
mov
mov
repnz
mov
jo
movsl
adcl
add
push
sub
in
stos
call
xor
jmp
xchg
xchg
ret
out
mov
lahf
jne
addl
xchg
nop
mov
in
xchg
xchg
push
lahf
pop
lret
xchg
jbe
das
or
jne
iret
leave
xchg
or
push
leave
mov
adc
or
and
cmp
or
xor
pusha
in
insb
pop
test
test
addr16
rcll
inc
popa
mov
ror
call
imul
cmp
inc
test
dec
mov
aam
fnstsw
imul
clc
sub
pop
arpl
mov
xor
or
mov
mov
cwtl
push
loopne
jne
loopne
fnstsw
rolb
in
and
and
and
and
push
jle
pusha
adc
push
cmpsl
pop
insb
gs
cmp
jnp
das
mov
sbb
fcoms
bound
pusha
imul
ss
dec
adc
test
dec
sarb
inc
cmpl
cmp
cmpsl
dec
mov
mov
push
lcall
movsb
das
xor
cmp
je
xor
fnstsw
mov
inc
inc
inc
xchg
adc
cmpl
and
aaa
sbb
rcrl
xchg
pop
adc
rcll
add
jle
addl
mov
jmp
xor
in
add
ljmp
xor
sbb
test
in
insl
mov
xchg
fs
insb
jne
jl
sub
mov
inc
pop
mov
out
inc
call
adc
sub
jo
inc
adc
clc
dec
or
loopne
cmp
jne
icebp
dec
mov
or
jne
push
loopne
pop
cmp
adc
push
sbb
adc
add
scas
dec
stos
dec
mov
push
jmp
test
movsb
push
adc
fucom
xchg
sub
xchg
or
je
jl
ja
loopne
cmpsb
add
and
jae
mov
add
rclb
dec
and
divl
enter
popa
cmp
popa
lahf
mov
push
fcoml
sbb
mov
in
adc
pop
je
pop
leave
mov
fs
and
aaa
mov
sub
dec
les
sbb
cmp
arpl
test
sets
jb
out
xchg
or
jg
sub
aas
xchg
lret
in
cmp
inc
mov
mov
mov
add
incb
mov
push
cmp
xor
fstps
ficoml
fdivr
xchg
sbb
jecxz
mov
rcll
imul
jb
ss
cmp
imul
cmp
shr
in
jbe
and
inc
and
dec
rol
mov
xchg
push
sub
xor
lret
xor
cmp
fdivl
cmp
fisttps
or
fmull
sbb
xchg
and
jns
out
jo
add
mov
mov
mov
or
data16
gs
dec
add
cwtl
push
sub
and
push
enter
sbb
cmp
sub
push
lea
stos
in
mov
ds
shrb
imul
or
ret
adc
push
popf
xor
xchg
mov
push
int3
adc
jmp
push
orl
push
shl
jbe
nop
inc
shrl
push
xchg
inc
add
xchg
mov
mov
fsubp
xlat
sahf
or
or
add
ret
mov
push
cmpl
fadd
inc
pop
sbb
xor
mov
pushl
adc
in
cmpsl
sbb
sub
jne
sbb
les
pop
inc
push
push
sub
adc
sahf
fdivr
sub
repnz
je
push
movzwl
ds
test
add
test
fwait
pop
mov
lods
pop
pop
or
jnp
jne
jne
or
adc
lret
xor
adc
and
and
pop
jbe
cli
loop
clc
dec
add
mov
test
xor
cmpsl
js
jo
push
fistps
shll
mov
cmp
in
loop
outsl
cmovle
push
les
cmp
xchg
inc
push
sbbl
sub
orb
inc
and
mov
inc
loop
pop
push
mov
dec
loope
inc
pop
lods
sbb
jo
pop
ja
mov
dec
and
ss
nop
std
push
sarb
adc
fstpl
sbb
mov
sub
loop
les
shll
test
sbb
push
add
ret
daa
lock
or
into
sub
or
bound
lret
out
jo
or
or
test
in
or
sub
ret
or
add
and
lahf
xchg
out
adcb
and
rorl
in
enter
pop
daa
push
adc
hlt
inc
addb
mov
xchg
rcr
add
adc
shlb
loopne
in
sbb
repnz
fucomp
mov
jne
imul
jge
cld
or
lock
sub
xor
push
sahf
scas
popa
adc
pop
or
aaa
js
in
scas
dec
hlt
idivb
dec
jo
aaa
jbe
push
and
mov
cmp
sbb
adc
or
nop
cmp
pop
stc
sbb
les
and
mov
mov
mov
or
add
mov
dec
xor
push
adc
lods
mov
rorb
add
push
xor
cmp
dec
push
shll
and
dec
fs
sbb
test
movl
dec
cmc
xchg
dec
sbb
mov
sbb
ja
cmpsb
popf
mov
adc
inc
add
dec
lea
andl
lahf
cmp
and
push
les
aam
inc
popa
and
mov
pop
pop
mov
call
sbb
aad
cmpl
pop
insb
repnz
push
pop
push
ret
or
or
add
push
outsl
lock
leave
adcl
pusha
pop
or
or
shrb
popa
nop
pop
add
mul
ret
and
adc
jnp
mov
xchg
inc
mov
and
adc
mov
ja
mov
mov
xchg
popa
inc
xchg
adc
mov
or
adc
xchg
jno
sti
jns
pop
rorb
pusha
ljmp
shll
xor
pop
dec
adc
dec
dec
fstps
cld
test
sbb
mov
rcrl
dec
add
or
sbb
rorl
push
and
xchg
ret
dec
adc
xchg
dec
daa
fistpl
les
lea
push
jae
xchg
pop
jg
push
sbb
cmc
data16
xorl
sbb
push
and
adc
mov
cmp
lods
je
mulps
or
fadds
outsb
and
pop
shlb
adc
test
sub
incl
pop
push
xlat
push
and
adc
mov
xchg
dec
fsubs
jl
loopne
add
jle
es
inc
mov
mov
mov
loope
add
pop
arpl
ja
insb
pusha
fbld
mov
hlt
add
or
adc
test
std
fcomps
pop
out
cmpl
loopne
pop
push
js
bound
mov
sub
ficomps
enter
popf
sub
sbb
xor
and
xor
sbb
js
cmp
jle
cwtl
gs
and
imul
repz
sub
ret
sub
shlb
nop
and
mov
lods
bnd
mov
decb
push
push
sahf
movsb
jo
push
dec
ljmp
mov
pop
xchg
addb
sbb
or
and
test
push
and
sub
jge
pop
out
ss
pop
inc
and
sbb
cmpsb
xchg
or
or
testb
mov
mov
mov
sbb
inc
lods
inc
insb
and
dec
pop
push
pop
aam
add
jae
ficompl
test
jmp
sbbl
lea
popf
push
inc
fcos
mov
push
adc
xchg
inc
or
jnp
fmuls
into
sub
lods
lods
cmpsb
mov
dec
std
sti
mov
cmp
xchg
pop
and
in
sarl
add
stos
fimuls
add
pop
push
xor
xor
push
cs
adc
or
into
sub
xchg
mov
push
out
or
sub
adc
sub
cmpsb
xor
test
adc
sub
jbe
push
push
pop
inc
push
jl
pop
push
jo
je
cmp
jbe
lds
mov
xchg
dec
xorl
ret
out
push
jnp
enter
push
push
jp
sbb
jo
cmp
insl
xor
and
iret
push
xor
push
negl
lret
mov
jnp
test
loope
bound
in
inc
pop
movsb
jmp
push
cmp
movsb
orl
ja
mov
mov
push
sti
push
pop
xchg
test
dec
or
sbbl
jne
mov
or
dec
add
push
add
fs
adc
push
push
lcall
push
cmp
imul
add
dec
or
sbb
mov
int
int3
scas
lcall
jg
dec
movsb
lahf
shlb
pop
mov
adc
push
push
mov
mov
test
stos
ja
jbe
repz
jp
sbb
inc
cmp
data16
push
jae
loope
arpl
xchg
sub
mov
jmp
fs
test
xchg
inc
xor
outsb
scas
mov
adc
add
inc
push
jno
dec
sbb
mov
sub
mov
mov
mov
lods
pop
rorb
cmp
arpl
or
imulb
pushf
pop
data16
jl
adc
jle
insb
adc
pop
fnstenv
bound
and
ja
push
adc
adc
or
mov
clc
nop
dec
mov
popa
or
pop
mov
pop
ret
dec
je
or
or
test
ljmp
scas
js
adc
or
sbb
or
adc
adc
sbb
and
loope
pop
rolb
rcr
sub
mov
sub
sarb
lret
jbe
sub
add
and
sahf
push
xor
lds
test
push
adc
inc
jbe
ljmp
or
jbe
rclb
lea
or
inc
push
dec
adc
mov
dec
sub
push
pop
jl
xchg
lret
and
mov
pop
mov
nop
xor
ret
dec
insl
es
mov
xor
pop
repnz
jle
inc
jp
pop
dec
push
inc
cmp
je
xor
mov
sarb
sub
test
mov
sub
loopnew
push
add
inc
sbb
xor
sub
lock
cmpsb
push
fistpll
cmp
je
or
aas
gs
sbb
popa
xor
or
ret
imul
add
add
adc
orl
cld
add
dec
lret
mov
mov
out
jmp
loop
xchg
push
ds
in
xor
mov
jne
or
add
pop
arpl
ffree
popf
insb
pusha
arpl
pushl
cmp
scas
icebp
inc
adc
pop
mov
fisttps
adc
enter
push
inc
inc
cs
mov
inc
in
nop
ret
adc
movsl
push
popa
cmp
push
sub
je
pop
imulb
inc
push
les
adc
sub
cmc
lret
je
cmp
js
dec
repz
inc
shll
in
push
sbb
push
dec
out
lea
adc
sub
cmp
push
add
adc
jno
lcall
stc
adc
pop
cmp
leave
dec
stos
stc
ja
pop
fmuls
and
jne
fmul
jb
jno
arpl
sbb
mov
ja
std
shll
jle
mov
orb
ret
push
loope
mov
pop
push
jmp
inc
cld
roll
cmp
mov
push
stos
dec
or
pop
jg
inc
lea
mov
add
cmpl
popl
jl
xchg
lea
sbb
adc
jno
pop
add
andl
or
aaa
push
loop
das
add
gs
or
inc
push
add
mov
xor
jl
inc
arpl
push
pop
add
mov
lcall
xor
push
add
jo
ret
sbb
or
xorl
rorb
adc
stc
mov
jp
sti
cmp
paddusw
lea
arpl
pop
lret
outsl
inc
and
push
inc
pusha
pop
scas
pop
mov
sbb
pop
cmp
jne
xor
lret
inc
movsl
sbb
and
inc
les
mov
cwtl
into
shll
push
pop
adc
or
stos
cmp
mov
sbb
lret
sub
insb
cwtl
call
pushf
adc
and
inc
and
imul
mov
sbb
and
jmp
add
push
sbb
mov
and
mov
jmp
cmp
das
push
or
fdivl
jne
pushf
rolb
sub
xor
add
jl
mov
sub
rclb
mov
jne
sbb
mov
mov
cmpsb
mov
sahf
mov
sbb
or
rorb
push
xchg
roll
sub
jmp
mov
sub
jecxz
pop
and
mov
clc
sar
jle
xor
loop
out
or
out
das
cmp
add
push
clc
fistl
push
mov
jbe
pop
pop
add
sub
push
shlb
gs
sbb
xorb
jmp
or
add
push
jbe
in
hlt
cmp
jge
mov
mov
inc
push
add
inc
jl
fcoms
or
inc
or
mov
stc
mov
sub
sbb
pop
and
adc
movsb
jmp
pusha
xchg
fiadds
push
adc
jb
mov
movsl
sbb
jne
pop
xchg
insb
or
or
aad
mov
mov
lods
jle
jge
mov
inc
mov
inc
xchg
push
pop
jmp
mov
push
roll
add
push
sbb
mov
cmp
in
testl
roll
add
sbb
push
jb
icebp
es
sbb
xchg
add
push
push
sbb
sbb
pop
push
push
aaa
loopne
jo
dec
inc
pop
pop
insb
pusha
lock
xchg
dec
aam
sbb
sub
jle
mov
rcrb
insl
adc
dec
pop
push
stc
or
inc
mov
and
and
and
jae
mov
nop
adc
inc
popl
dec
mov
or
mov
mov
sbb
addl
das
mov
sub
sbb
jle
mov
push
pusha
cmp
fdivp
mov
adc
mov
in
aam
add
mov
rcll
lea
les
mov
adc
mov
or
inc
cmp
ret
mov
rorl
stos
add
test
les
mov
fistpll
xchg
and
sbb
xlat
jge
test
inc
mov
jmp
aaa
lret
mov
lock
pop
cs
stos
in
pop
jecxz
fiaddl
adc
mov
xor
or
test
sbb
into
sbb
cmpsb
inc
mov
push
inc
shl
push
cs
lds
mov
wrmsr
push
test
push
pop
in
sbb
ret
jnp
pop
mov
mov
je
dec
ret
out
mov
xchg
mov
in
push
push
or
les
jne
inc
xor
mov
cltd
imul
pop
sub
fwait
fwait
aas
aaa
sbb
addr16
test
xor
cmp
cmp
dec
xchg
and
inc
and
or
ss
sub
sbb
rorb
data16
test
test
divl
add
xlat
lea
add
sbbl
fisubrs
push
aam
jnp
push
es
out
rorb
mov
jp
fxch
push
leave
nop
das
mov
or
imul
cs
sub
pop
mov
repz
jl
inc
shl
je
jl
ret
pop
sbb
xchg
iret
adc
xchg
sbb
or
push
mov
nop
cmp
push
add
or
xchg
jle
es
int3
or
aam
call
jmp
xor
push
add
inc
mov
or
ljmp
dec
and
or
or
repnz
pushf
inc
fcompl
push
adc
mov
xchg
aas
sbb
jle,pn
adc
rcrl
cmpsl
insl
inc
xor
loope
push
fimuls
sub
aam
mov
rcrl
inc
imul
inc
sub
xor
push
or
das
lods
dec
jp
lret
jo
add
lahf
imul
mov
dec
push
jb
mov
push
jl
mov
dec
cmp
sub
leave
das
das
or
lahf
sub
mov
stos
jl
jmp
adc
fadds
mov
cmp
jg
sbb
mov
push
into
or
in
push
clc
sbb
daa
or
addr16
inc
popa
insl
dec
lods
fimuls
sarb
jl
sub
loope
js
pop
mov
mov
mov
icebp
jno
lods
dec
lea
jmp
cmpl
and
xor
out
lret
push
and
mov
dec
cltd
add
push
lock
mov
xlat
inc
xor
pop
leave
sbb
sub
fimull
mov
inc
addr16
insl
ficoml
fs
pop
pop
lock
stos
adc
js
push
das
fidivl
jl
mov
push
cmp
in
adc
lcall
sub
in
fadd
enter
push
imul
mov
idivl
jo
inc
or
push
or
push
jle
adc
inc
add
int3
push
sub
out
push
pop
sub
lret
mov
push
jae
aaa
js
loope
pop
add
call
daa
call
xchg
bextr
mov
cmpsl
or
xor
add
insl
loopne
fcompl
mov
daa
ret
repnz
mov
dec
mov
sbb
out
sahf
dec
pop
mov
scas
mov
icebp
mov
xchg
mov
stos
movsl
or
push
inc
hlt
xor
inc
jmp
xchg
cwtl
dec
push
lea
loope
mov
jp
cmp
push
or
insb
call
pop
xor
bound
loopne
jle
js
cmp
je
mov
pop
jns
pushf
insb
dec
jmp
sub
orb
adc
inc
fcomp
mov
add
jbe
add
xor
push
or
stos
sub
shlb
dec
inc
test
in
cltd
cmp
sbb
xchg
nop
and
loopne
scas
shll
sbb
sbb
add
add
pop
cmpsl
leave
inc
enter
mov
das
cmp
mov
xchg
bound
jmp
and
push
jl
xor
adc
or
sbb
jg
fcoml
cmpsl
sbb
add
mov
add
sbb
push
outsb
pop
or
ret
cmp
clc
lea
pop
jne
cmp
cmp
pop
rorb
mov
and
push
cmp
mov
adc
test
in
mov
lret
or
idivb
or
jnp
scas
mov
jb
je
mov
andb
add
movsb
cmp
imul
fnstenv
in
insl
dec
dec
dec
clc
jne
mov
push
test
cmp
and
ficoms
jbe
lea
cmp
fcomi
test
stos
es
sbb
sub
mov
or
sub
hlt
jns
and
push
iret
or
add
xor
pop
mov
cwtl
push
jb
cmp
cmp
jae
insb
movsl
or
add
sbb
mov
hlt
jne
push
js
lret
inc
mov
loopne
pop
push
lock
jne
mov
out
jmp
stc
xchg
add
or
pop
sbb
or
lock
add
pushl
inc
movb
call
int
mov
sahf
sub
add
xchg
rorb
orb
mov
xor
cmp
xchg
mov
je
cmp
push
mov
mov
iret
jge,pn
cmp
or
lahf
add
mov
cmp
dec
add
mov
in
push
test
push
and
inc
adc
adc
sbb
add
jae
call
jne
jne
sbb
pop
xchg
xor
clc
inc
sub
adc
cmpl
jne
cmp
add
cmpsl
push
cmp
adc
in
popf
mov
icebp
push
shlb
and
push
dec
and
xor
lea
xchg
popf
fcomps
call
push
cmp
in
jo
sbb
in
fmuls
inc
jmp
das
addl
das
pop
hlt
jb
cmc
enter
and
push
and
mov
ficomps
mov
test
loopne
sbb
mov
es
mov
test
mov
mov
jmp
or
cmpb
jl
mov
pop
sub
inc
adc
leave
lret
pop
xor
cmp
xor
sti
jne
xchg
jns
cli
pop
push
cmp
cmp
xchg
test
lahf
push
cmp
mov
addr16
fidivs
gs
pop
fists
icebp
cmp
dec
cmp
js
loope
add
add
lret
xor
addr16
sub
cmp
je
jecxz
pushf
xor
js
pop
out
lret
mov
jecxz
aam
cmp
dec
and
mov
inc
in
test
jo
adc
mov
pop
mov
cmp
into
data16
and
push
inc
adc
lret
inc
mov
dec
pop
insb
insb
fnstenv
dec
cmp
icebp
pop
popa
inc
jb
test
sarl
cmpb
add
cmp
adc
js
pop
imul
xor
inc
mov
mov
js
xor
arpl
or
cs
lock
mov
fistpll
das
jbe
push
or
ja
rcrb
adc
dec
push
cmp
mov
mov
push
in
in
inc
dec
push
add
jns
xchg
pop
xchg
xchg
sbbl
push
es
mov
jne
js
sub
jge
add
jae
cmp
inc
roll
das
adc
cmp
mov
ret
cli
and
enter
and
subb
push
mov
or
jb
push
jae
incl
lock
cmp
pop
push
pop
hlt
mov
lret
out
out
xlat
cmp
shl
imul
dec
int
roll
je,pt
cs
or
icebp
rcrb
add
push
enter
dec
in
and
push
pop
xchg
mov
adc
mov
mov
cmp
add
mov
or
sub
inc
mov
xchg
adc
int3
push
stos
les
nop
and
loopne
sub
lret
pop
lcall
lcall
sbb
bound
test
lods
push
cmp
stos
or
mov
xchg
push
shr
push
cmp
add
xchg
addl
mov
add
mov
les
mov
mov
cli
insl
sub
jge
pop
jns
in
inc
cmp
and
and
or
ljmp
jns
jp
add
out
in
jl
cmp
test
mov
movsb
std
adc
fucom
add
enter
inc
je
aad
mov
or
sbb
jmp
add
pop
or
add
or
jbe
xor
jno
or
arpl
pusha
roll
icebp
jns
pop
jo
div
jne
sbb
jno
add
pushf
ja
lcall
adcl
pusha
adcb
ret
leave
inc
adc
notl
push
loopne
call
push
rol
test
jmp
pop
ret
popf
loopne
or
mov
scas
adc
jne
dec
fadd
js
mov
jl
roll
add
dec
das
xchg
adcb
and
push
mov
mov
jo
fiadds
int
xchg
and
cmp
and
rorl
sub
sarl
sbb
push
insb
loope
lods
test
adc
jle
xchg
pushl
jmp
mov
into
pop
sub
jg
in
push
push
push
lods
push
ret
shrb
ficomps
or
pop
dec
and
xchg
clc
gs
pop
cmp
subl
sbb
popf
mov
lret
push
dec
add
movsl
arpl
das
sub
and
dec
pop
lds
cmp
add
add
or
andl
push
test
insb
mov
sub
inc
je
dec
dec
flds
pop
pop
aas
lea
das
push
dec
icebp
ret
fisttps
push
inc
loopne
xor
cmp
js
lds
jmp
nop
rcll
jnp
rcrb
pop
xchg
add
repz
adc
ret
xor
inc
push
stos
ror
jo
lock
jmp
mov
sti
push
popa
and
enter
sbb
cwtl
push
sbb
lret
icebp
int
or
mov
scas
cs
ljmp
sbb
cltd
pusha
cmp
lret
add
pusha
xor
imul
sub
in
add
orl
pop
rorl
jecxz
xorb
mov
xchg
int3
iret
repz
or
cmp
sub
inc
es
cmpb
js
xchg
sbb
sub
mov
adc
lea
mov
shll
rolb
jb
call
adc
cld
pop
mov
rol
addl
inc
cmp
fistl
andb
mov
add
xor
cmp
lea
jl
pop
push
lea
in
jp
jecxz
mov
jecxz
xchg
pop
mov
jp
push
mov
sbb
ret
mov
rolb
cmpl
popa
adc
adc
dec
jae
ja
or
not
push
jp
pushaw
or
das
sbb
or
loopne
mov
add
jmp
push
mov
leave
or
or
and
push
and
xor
das
int
inc
jmp
jl
sub
xor
rcr
adc
js
rcrl
iret
out
jno
jo
insb
push
mov
rol
jae
cmp
or
js
outsb
cmc
ret
push
jae
lea
push
sub
xchg
and
shll
xor
adc
adc
ja
push
rorb
or
nop
aaa
pop
or
mov
imul
call
imul
sbb
xchg
mov
cmp
fnstenv
inc
jmp
insl
loop
jmp
sti
sub
shrb
lea
out
ret
mov
test
add
dec
ljmp
sub
clc
subl
movsl
in
and
sbb
fcoml
imul
pop
cmp
adcb
push
push
pop
xlat
shrb
sub
mov
add
add
xchg
xorb
cmp
pop
adc
ficomps
jecxz
inc
jmp
xchg
add
cmp
popa
aaa
stos
push
push
adc
insb
xchg
push
pop
fldcw
sub
out
cmp
subb
sub
aaa
adc
or
fcompl
or
and
fwait
arpl
repnz
rclb
or
add
add
popf
push
ss
mov
ret
test
rolb
je
mov
and
enter
push
cmpb
imul
lcall
cmp
inc
mov
mov
sub
inc
xchg
fidivl
push
adc
unpcklps
mov
push
dec
shrb
outsl
mov
fs
inc
or
add
test
push
bnd
push
and
xor
mov
mov
jmp
mov
adc
shlb
lea
lods
leave
mov
cmpb
out
aas
ret
sbb
testb
in
push
pop
ljmp
or
cmp
cwtl
add
xor
aam
mov
sbb
ret
fimull
push
jmp
popf
push
incb
out
cmpsb
imul
imul
addl
cmc
mov
lea
inc
mov
in
mov
xor
daa
push
movsl
jbe
push
ss
mov
nop
xchg
mov
cwtl
test
leave
xchg
test
dec
dec
or
je
mov
ret
pop
mov
mov
cmp
jp
xchg
jmp
adcl
jne
jbe
and
aad
add
sub
mov
dec
cs
or
inc
add
and
push
adc
mov
add
add
cmp
add
or
lock
movl
xchg
icebp
add
shll
inc
cld
cmp
inc
inc
mov
push
or
scas
pop
fsubr
adc
xchg
mov
vucomiss
jecxz
jb
inc
addl
dec
cld
pop
outsl
mov
mov
lcall
fldl
insl
jne
ret
dec
push
je
mov
inc
cmpl
or
sbb
adc
dec
fs
inc
shl
gs
xor
xor
pusha
add
cmp
mov
mov
add
inc
lea
inc
popa
cltd
adcl
push
add
cmp
je
call
xchg
pushf
pop
adc
cmpsb
or
xchg
fs
dec
push
enter
push
je,pt
xlat
mov
jmp
inc
add
adc
fisttpl
sbb
dec
jne
mov
xchg
or
in
outsl
add
adc
push
aad
sub
lahf
xchg
fstps
sbb
sbb
divb
push
adc
mov
cld
bound
pop
sbb
pop
sbb
cmpsb
int3
sub
mov
mov
or
adc
mov
pushf
ret
mov
xchg
out
cmpsb
add
or
sub
ljmp
ret
mov
adc
lea
mov
hlt
jmp
jno
jmp
and
js
jge
jo
js
cmp
insb
fcompl
cmp
inc
pop
mov
push
xchg
jo
pop
cltd
or
push
jo
data16
addr16
and
lds
jne
and
jne
cmp
arpl
xchg
pop
scas
std
adc
enter
mov
test
xchg
xor
dec
test
inc
fistpll
adc
pop
push
jge
and
mov
cmc
cmp
leave
outsb
push
lret
jmp
lea
pop
push
xchg
flds
mov
push
push
ss
push
in
add
jbe
movsl
or
add
xchg
iret
lods
inc
movsl
imul
test
push
push
sbb
lods
lods
or
sub
inc
adc
dec
add
adc
sbb
xor
adc
sbb
inc
andb
in
rorb
sarb
lahf
fmull
mov
daa
mov
ret
add
add
shll
or
jp
cld
pop
mov
fisttpll
mov
adc
mov
out
dec
sub
ss
sbb
cmp
idivl
mov
movb
mov
push
loopne
mov
pop
nop
sub
rcrb
in
add
inc
dec
mov
jne
push
push
ficoml
repz
jg
xchg
addl
mov
jg
adc
adc
xor
pop
xor
mov
repz
add
add
imul
std
push
xor
jge
loope
add
inc
jge
push
insb
push
mov
nop
jle
push
mov
pop
rolb
outsb
jmp
cmp
sub
fstpt
emms
or
or
outsb
adc
aaa
ret
push
xor
xor
nop
clc
cwtl
xor
lock
cmpsb
add
adc
mov
sub
mov
outsb
adc
out
or
jle
mov
insl
outsl
iret
xor
js
mov
das
scas
or
or
cmpsb
push
push
jl
mov
mov
shl
rclb
sub
mov
nop
shl
aaa
xor
inc
rclb
rolb
iret
cs
pop
inc
movsb
data16
inc
add
mov
int3
cmp
sti
pop
rorb
push
mov
inc
and
stos
mov
jp
ss
das
jne
movsb
and
cmp
pop
xor
fisttpll
pusha
inc
xor
mov
lock
adc
sub
subl
fcmovu
insb
pusha
push
in
ss
and
add
mov
fildll
out
mov
shr
shl
add
loope
shl
xor
mov
mov
dec
icebp
hlt
mov
es
push
loop
ret
out
lret
add
inc
je
inc
test
jge
jge
push
sub
decb
xchg
loopne
or
lea
add
inc
cmp
adc
into
es
mov
fisubrs
dec
push
je
mov
add
sub
or
jl
push
adc
or
xor
push
fs
jge
rorl
iret
subl
decb
inc
push
xorb
add
or
pop
lods
lret
loope
push
dec
sbb
enter
add
xchg
mov
sarb
push
xor
jo
movl
sub
pusha
add
sub
divl
insl
lds
add
pushf
sbb
ret
xor
les
and
jle
adc
sbb
inc
pushf
cmp
stos
xlat
lret
out
jo
xchg
ss
mov
push
pop
mov
sub
and
ljmp
or
inc
add
movups
inc
call
aad
test
test
xchg
xchg
imulb
imul
pop
orb
lret
in
and
xor
enter
inc
dec
inc
xchg
in
jns
add
dec
sbb
pop
enter
mov
xchg
xlat
add
ficoms
into
or
pusha
add
adc
inc
js
mov
popa
test
sarl
inc
mov
mov
dec
addl
mov
daa
add
popf
scas
aam
and
mov
add
xor
into
into
and
aaa
inc
adc
mov
ds
mov
cmpsb
lea
inc
aas
or
jg
sub
lods
call
or
mov
jmp
das
or
push
push
js
mov
jmp
das
out
sbb
mov
add
aas
add
loop
sbb
push
add
adc
mov
mov
sub
xchg
dec
test
cmp
aam
push
dec
push
xchg
pop
add
push
ret
mov
movsl
mov
jecxz
outsw
loop
out
pusha
cmp
jne
aam
inc
add
or
cmc
xor
lods
jle
outsl
add
addb
lds
mov
inc
add
cwtl
addb
dec
fimuls
or
cmp
and
sub
push
pushw
sbb
push
mov
or
mull
add
fildl
pop
ret
mov
mov
add
or
test
mov
rorb
nop
mov
and
or
sarl
push
in
xor
dec
arpl
push
push
jo
mov
lcall
stc
push
lea
pop
cmpsb
push
sub
insb
and
nop
roll
jp
scas
add
adc
mov
mov
xchg
add
pop
or
adc
shlb
sub
in
mov
int
mov
imul
mov
stos
xor
add
ret
into
xorb
pop
mov
cmp
push
lds
clc
enter
or
jmp
and
add
pop
inc
mov
mov
aam
adc
mov
gs
adc
lcall
inc
mov
lcall
clc
mov
js
lret
rcrb
cmp
pushf
push
inc
mov
xchg
mov
pop
sbb
push
mov
das
movsb
push
sahf
xor
jne
push
mov
mov
mov
shrb
jo
push
jl
push
lret
in
je
cltd
xor
push
das
sbb
sub
fldl
jle
aam
pop
icebp
cmpl
loope
daa
test
sti
pop
push
cmpsl
ret
fsts
pop
pop
mov
push
rolb
repnz
push
sbb
push
or
pushf
mov
mov
push
sbb
xor
imul
pop
adc
pop
push
rcrb
in
popa
in
push
lods
test
and
in
or
nop
add
add
dec
jns
cmpl
jne
sbb
jne
cmpsb
cmpsl
mov
push
cld
and
pusha
inc
pop
push
inc
sbb
and
sub
xchg
cmpsb
pop
mull
inc
sti
aas
jo
ret
xor
cmp
jle
jb
push
pop
cmp
dec
xor
mov
mov
inc
cmp
in
mov
and
pop
dec
jmp
pop
pop
mov
sbb
mov
add
jo
dec
inc
or
push
insl
add
pop
mov
test
cmp
xor
aaa
dec
ret
adc
and
sub
mov
adc
mov
or
mov
insb
xchg
mov
clc
or
xchg
mov
dec
jo
pusha
loopne
push
rorl
pop
jl
push
idivl
push
pusha
aas
or
aas
add
sub
inc
jo
jne
andl
jle
mov
out
jmp
dec
push
adc
shrb
lods
popa
xchg
pop
jne
mov
lods
aas
lock
cmp
or
sti
xchg
jns
add
add
add
pushf
and
push
cmp
ret
add
push
inc
vpmacssdd
je
push
xchg
sub
adc
testb
je
cmp
mov
or
jo
xchg
push
cmp
test
mov
add
push
lcall
adc
add
dec
jge
inc
mov
jne
pop
sub
data16
cwtl
push
mov
pop
cltd
push
xlat
andb
adc
fxsave
mov
cwtl
sbb
sti
push
pop
mov
push
add
sub
jbe
inc
loop
jae
dec
and
mov
xchg
mov
jmp
cli
sbb
cmc
ds
pushf
mov
mov
xchg
push
loopne
lahf
sbb
jne
jg
add
ret
add
addb
clc
loopne
sbb
mov
in
fsubs
adc
cmp
insl
inc
shll
jecxz
jo
and
rcl
add
pop
push
and
xchg
push
pop
lcall
lock
push
push
mov
add
ret
sbb
or
inc
mov
cmpsb
or
stos
sahf
cmpsb
dec
jno
fmull
and
notl
push
add
push
push
cmp
dec
xor
mov
cmpsb
sub
jp
imul
jl
je
mov
push
push
pop
dec
pushl
mov
sbb
add
jg
or
ds
or
testb
fdivrs
mov
cmp
sbb
cmpsl
loop
mov
roll
add
sbb
pop
leave
jmp
lea
push
inc
lock
dec
adc
add
loop,pn
push
sbb
bswap
lret
rolb
sub
mov
xchg
pop
pop
fnstenv
or
clc
push
or
dec
xor
call
jmp
push
dec
pop
pop
add
leave
test
mov
dec
inc
xor
sbb
push
cmp
das
jno
mov
std
cwtl
ss
mov
popa
inc
pusha
xor
jl
or
sbb
fisubrl
fs
in
incb
push
xor
push
jp
jne
cmp
jl
call
sub
dec
xchg
daa
add
adc
lods
push
insb
sbb
ret
add
xlat
lahf
jmp
adc
les
mov
cmpsb
and
xor
sbbb
mov
js
add
sbb
push
add
adc
ja
sbb
out
dec
push
faddl
mov
popl
sub
loope
inc
inc
xchg
sub
and
push
push
pop
das
lock
push
or
inc
push
mov
pop
cltd
push
and
push
add
push
pop
or
js
bound
push
pop
fwait
pop
popa
arpl
mov
inc
cmp
test
lods
cs
ret
pop
cmp
dec
outsb
xor
push
mov
fsubrl
or
pop
loopne
push
add
scas
jmp
dec
rorl
jl
inc
sub
cwtl
imul
and
cmp
aam
and
mov
dec
inc
ja
xchg
dec
push
cltd
cmp
mov
dec
and
pop
test
ja
or
or
mov
pusha
add
mov
push
adc
pop
rcrl
jo
xor
push
icebp
movsb
test
ja
outsl
mov
adc
cmp
push
adc
adc
sub
pop
sub
add
mov
cmp
insl
xorb
loopne
dec
xor
push
jg
fadd
lcall
aam
loopne
adc
mov
mov
repnz
xchg
movsl
or
mov
popa
fisttpl
sub
aad
adc
or
popf
fisubs
outsb
adc
adc
fstpt
sub
mov
cmpsl
and
lds
jl
jno
in
dec
int3
push
adc
outsl
addb
cmp
adc
push
pop
push
jbe
jns
push
ds
push
jne
test
add
xchg
ljmp
je
mov
test
inc
enter
movsb
mov
adc
jmp
stc
pop
repz
pop
add
dec
insl
cmp
nop
sbb
insb
bound
xor
pop
dec
pusha
and
adc
add
ficompl
xchg
cmp
in
scas
push
add
jmp
loope
push
hlt
jle
fisubrs
push
mov
ds
fwait
inc
clc
dec
push
ret
jnp
shlb
xchg
aaa
fbstp
testb
cmpsb
je
rcll
ja
pushf
jo
cld
pop
ds
add
or
jb
jge
sub
lea
add
ja
lds
dec
pushf
xor
clc
jae
mov
inc
bound
enter
mov
dec
jnp
lods
pmulhuw
adc
inc
je
jns
cltd
xor
repz
pop
mov
roll
es
dec
sub
scas
icebp
rol
ret
enter
loop
and
aad
sbb
sbbl
enter
pop
pop
ret
fisttpl
clc
pop
mov
and
lds
loopne
in
sbbb
cmp
inc
int
loope
rclb
or
hlt
xchg
xchg
fwait
icebp
rclb
loop
push
push
mov
jb
mov
jmp
shl
ss
je
mov
lods
scas
or
mov
mov
or
cld
mov
sbb
add
jg
ficoms
je
rolb
in
shll
pop
js
jg
mov
and
inc
cltd
sub
mov
movsb
jbe
bound
adc
xor
cmp
sbb
inc
inc
inc
jle
adcl
cmp
das
lock
sub
daa
shll
sub
push
adc
push
cmp
cmp
jo
inc
ret
push
mov
adc
cmpl
insb
pavgb
call
daa
push
push
cmp
push
push
push
mov
lret
roll
jb
rcrl
fptan
sub
push
jmp
jne
mov
int
es
push
das
jmp
or
sbb
dec
push
dec
adc
lock
sbb
mov
movsl
or
std
jns
inc
inc
or
pop
je
jmp
cmp
ret
ja
dec
sub
lds
jns
push
pushf
sub
sub
sbb
inc
add
pushw
lock
push
xchg
movsb
mov
jecxz
sbb
js
and
xor
icebp
jnp
add
lea
mov
push
add
sbb
imul
xor
pushf
es
push
mov
jno
cmp
dec
inc
pop
pop
and
mov
orl
sbb
addl
clc
lock
lock
dec
xchg
sti
and
test
js
in
mov
lret
add
push
dec
add
dec
push
push
or
btr
jnp
jmp
insb
or
cld
push
push
sbb
ss
jb
stos
push
pop
in
and
push
jge
es
push
push
test
pop
pop
or
adc
xor
inc
jmp
cmpsl
and
cltd
adc
les
adc
in
aam
xor
mov
sbb
cmp
rcrb
and
or
and
mov
xor
mov
shll
xchg
pop
ja
dec
add
push
add
inc
dec
adc
inc
xor
das
pop
arpl
dec
sbb
push
mov
stos
adc
adc
mov
scas
xchg
sbbb
push
movl
cmpl
out
mov
pop
mov
or
rcrb
mov
loopne
js
and
dec
call
sbb
jbe
or
sbb
jmp
jge
int3
add
inc
adc
add
or
scas
pop
dec
sub
sbbb
or
dec
ret
mov
and
ss
insb
clc
jg
dec
test
pusha
jmp
movq
movaps
push
pop
outsb
fcmovne
clc
jae
xor
jle
xor
cli
shlb
lret
je
mov
xor
mov
out
and
lret
or
jg
hlt
mov
inc
lock
jnp
mov
adcb
sub
clc
jnp
clc
aam
ret
or
add
adc
mov
outsb
rcrl
add
jbe
roll
add
out
mov
addps
int
add
dec
sahf
repnz
sbb
and
jmp
adc
sbb
data16
imul
dec
mov
imul
stos
test
adc
incl
adc
das
cltd
nop
dec
sbbb
push
es
call
mov
jnp
push
mov
dec
xchg
es
jmp
jl
cvtps2pd
inc
and
adc
ret
xlat
and
jo
adc
mov
adc
je
ljmp
test
push
outsl
es
pop
dec
mov
divb
movsl
dec
mov
pop
repnz
push
pop
test
jp
xchg
mov
inc
inc
sbb
push
and
push
mov
cmp
mov
movsl
push
and
rorl
dec
lods
add
xor
or
daa
push
add
loop
mov
aad
cltd
repnz
sbb
pop
mov
cmp
add
fcoml
cmpsl
lret
js
or
or
cmp
push
sbb
push
sbb
sti
dec
call
fwait
sbb
test
hlt
xor
aam
repnz
lock
orb
cmp
fcomi
add
mov
sub
in
stc
push
push
sbb
xchg
jmp
push
dec
lods
mov
xchg
xor
dec
adc
mov
aas
mov
fldl
pop
nop
push
lcall
mov
aad
out
or
adc
jne
inc
cmp
inc
xor
sbb
loopne
in
mov
adc
cltd
js
add
inc
stos
push
mov
cs
push
adc
pop
push
push
and
push
push
dec
xchg
add
xchg
dec
call
lods
roll
cmp
cmp
fwait
lods
in
jle
mov
arpl
repz
out
adc
push
add
push
jl
lcall
add
or
adc
out
mov
mov
add
repnz
push
mov
sahf
mov
sbbl
in
cmp
imul
cmp
sub
jl
hlt
push
xor
add
enter
adc
sarl
sub
add
ret
hlt
mov
shl
shlb
dec
leave
sbb
icebp
shll
mov
pop
cmp
mov
mov
daa
shl
shl
data16
imul
inc
cmp
aam
lret
jne
loope
pop
mov
imul
jg
jmp
jnp
movsl
mov
jo
lods
mov
pop
adc
inc
movl
jne
jo
add
jmp
jno
lret
cmp
popa
or
xor
xchg
bound
jne
cltd
inc
or
or
out
testb
loopne
jne
xorl
das
out
jecxz
stos
xchg
andb
push
or
inc
adc
out
xor
push
dec
jb
mov
or
or
repnz
mov
xor
aad
xchg
fiaddl
decl
adc
inc
push
jp
jge
stos
mov
jmp
rcrl
or
dec
or
adc
add
push
sbb
jo
or
cmp
fisubrs
sarl
pop
push
negb
data16
loopne
jne
idivb
jno
or
pop
xchg
cs
mov
movd
and
movsl
push
add
push
in
adc
mov
or
pop
jb
loope
mov
xor
nop
lods
inc
enter
add
push
inc
push
sbb
inc
fcmovnb
fadds
testb
pop
mov
jg
pop
cs
jbe
push
xor
pop
div
adc
or
jae
or
and
dec
adc
in
data16
or
sbb
sbb
add
adc
fidivs
sub
lods
add
dec
inc
inc
mov
popa
cmc
push
fsubrs
or
cmp
mov
ficomps
data16
pusha
xlat
leave
bound
jo
ljmp
shrl
loope
les
std
jle
push
add
out
aad
push
repnz
add
add
add
ret
adc
lock
pop
mov
pop
sbb
lock
cmpxchg
inc
rorl
in
in
fadd
imul
outsl
add
repz
push
mov
push
mov
xor
lahf
inc
push
fnstsw
xor
rolb
mov
and
movsl
popf
adcb
enter
mov
rcrb
or
or
mov
cs
test
out
sbb
fcomi
push
add
or
mov
lods
test
fsubr
push
xchg
jbe
js
jo
fistps
cwtl
inc
loopne
out
add
cmp
jb
xor
push
hlt
in
sbb
ss
jp
or
test
sub
inc
loopne
daa
rcr
je
cmpsb
fsubr
ret
mov
lahf
push
xchg
mov
or
xchg
sub
add
xchg
hlt
mov
rcll
movsl
fmuls
idivb
inc
mov
xchg
mov
jmp
pushf
mov
jae
sbb
pop
sbb
mov
fldt
out
outsb
and
movsl
dec
inc
repz
cmp
testl
lret
fildll
add
mov
and
fistpl
xor
mov
adc
and
fmull
mov
add
lods
mov
testb
inc
mov
or
test
loopne
xchg
mov
or
or
sbb
je
inc
jnp
or
scas
cli
pushf
push
fmul
adc
push
jmp
inc
cmc
pusha
or
adc
adc
scas
xor
xor
lock
cmpsb
mov
incb
rorb
ret
jmp
inc
pop
adc
push
or
inc
adc
mov
adc
and
fcoml
cmpsl
push
lret
pop
mov
movsl
divb
mov
data16
push
out
dec
inc
or
inc
ja
fadds
adc
push
add
and
push
sub
sahf
xchg
out
sub
mov
js
pop
jle
cs
dec
pop
inc
add
inc
jne
mov
jo
outsl
andb
mov
sbb
mov
in
mov
pushf
xchg
dec
les
call
js
sub
dec
mov
push
inc
mov
cmp
and
mov
push
pop
xor
psrlw
pop
pop
pop
adc
push
lahf
cltd
stos
fwait
mov
loopne
add
xchg
das
and
neg
and
inc
or
les
adcl
push
pop
cmpsl
jl
ret
or
cmp
jne
pop
hlt
enter
or
rol
xor
push
rclb
push
adc
shl
bound
lea
fimuls
add
out
pop
push
adc
and
ljmp
mov
adc
sub
movsl
sub
pop
mov
fiaddl
in
sub
enter
or
jp
inc
or
std
inc
mov
out
jbe
cmp
je
dec
xor
sub
inc
mov
push
fwait
push
pop
repz
imul
in
inc
dec
add
in
inc
push
daa
add
adc
dec
add
daa
and
add
repnz
flds
add
sbb
mov
enter
push
pop
mov
add
or
sahf
xchg
add
or
or
sbb
inc
sub
or
xchg
add
or
fisubs
or
or
or
mov
or
and
cwtl
push
push
adc
jb
nopl
notb
lret
push
adc
pop
adc
fwait
rcrb
inc
add
xor
adc
adc
and
in
add
adc
add
out
rclb
adc
adc
in
sbb
adc
adcl
in
jns
pop
pop
xor
repnz
sbb
lcall
sbb
call
mov
nop
sbbl
sbb
rep
sbb
jb
sbb
add
jns
bound
sbb
sahf
pusha
push
push
inc
ljmp
nop
out
pop
pop
jne
add
add
sub
cmp
pop
and
push
je
mov
jmp
xchg
ret
sbb
inc
mov
inc
adc
ret
mov
cmp
je
lcall
push
in
repnz
lea
add
aad
cmp
mov
out
fwait
out
ret
out
inc
outsb
or
data16
call
rcll
repnz
adc
sahf
xchg
add
inc
jmp
sbb
inc
or
sbb
nop
cmpsb
repnz
in
in
jns
pop
insb
in
cltd
mov
nop
addr16
sahf
out
out
inc
push
inc
push
jge
sbb
xor
cmp
lock
enter
icebp
add
mov
repnz
and
in
std
repz
std
jnp
aam
hlt
hlt
rorl
pusha
hlt
fwait
pusha
iret
enter
cmc
inc
add
sbb
jg
testb
cmp
cmp
rolb
sub
clc
clc
cltd
seto
jb
stc
inc
stc
lock
in
jns
cli
cli
iret
lret
pusha
sti
sbb
stos
cld
xchg
mov
je
cld
push
pslld
push
and
mov
xor
enter
sbb
adc
mov
sbb
ret
inc
dec
add
add
stos
popf
add
in
cmp
cmc
xchg
movsb
or
movlps
jecxz
and
movsb
jecxz
mov
enter
in
push
in
stos
icebp
inc
mov
ret
daa
xchg
sti
out
xchg
add
dec
out
cltd
outsb
pop
leave
and
sub
adc
xchg
sti
sbb
lcall
dec
push
jno
in
add
mov
cli
rolb
sub
out
out
cltd
jns
xor
das
cli
and
and
cli
sbb
jmp
cltd
nop
stos
in
sar
push
sub
stc
rclb
fstpl
div
and
int3
jmp
pop
fwait
xor
das
xchg
inc
pop
add
stc
out
clc
lret
and
mov
lcall
add
cld
inc
cld
subl
inc
pusha
scas
out
mov
sbb
jp
or
cmpsb
ret
mov
push
mov
loop
icebp
mul
mov
shl
scas
imull
xchg
xchg
jg
mul
sbb
inc
or
out
bound
jno
out
inc
testl
jno
imul
loop
push
shl
pop
mov
adc
xchg
xchg
negb
insb
out
out
mov
les
negb
in
repnz
add
dec
push
cmp
cmc
repnz
jb
or
cmc
pop
leave
mov
adc
mov
dec
cmc
idivb
pusha
pop
xchg
div
jns
and
pop
add
clc
clc
lock
stc
popa
movsl
test
hlt
cli
cli
imul
test
hlt
in
repnz
hlt
push
hlt
shll
mov
das
pushw
jmp
data16
hlt
idivl
jo
insb
out
push
sti
lahf
loope
dec
sub
add
cmpsb
test
loope
loope
cmp
mov
scas
repz
xchg
mov
test
imul
sbb
repz
repz
jns
repz
movsl
test
bnd
cmc
mov
sub
shll
repnz
mov
in
in
and
les
jns
jne
repnz
je
push
adc
icebp
cmp
mov
icebp
mov
icebp
test
sub
icebp
cmc
push
jno
imul
xchg
pushf
dec
jecxz
fldl
lock
popf
lock
stc
cmc
scas
adc
and
push
lock
sbb
push
lock
test
ss
outsb
or
dec
add
cli
and
stc
out
ret
jb
mov
push
add
and
enter
stos
add
and
dec
add
push
jnp
add
sub
lods
loopne
jne
or
fs
orb
add
sahf
and
add
push
add
pop
incl
jp
add
and
lods
sahf
xlat
insb
mov
push
mov
push
push
sub
data16
scas
adc
iret
sarl
pop
call
or
cmpsl
fnstcw
jo
pop
popf
sbb
sarl
loope
in
push
push
jb
push
out
mov
pop
jg
out
or
add
out
pop
add
shrl
add
xorl
imul
mov
mov
add
addl
mov
xor
pop
add
lock
inc
cld
jb
test
mov
dec
lcall
push
je
int
lret
and
adc
std
mov
or
addb
popl
inc
movsb
aam
mov
loopne
or
and
arpl
cmp
inc
popa
daa
aas
mov
ret
movsb
fs
mov
push
xor
je
add
in
push
bound
adc
add
add
jle
sbb
cmp
sbb
outsl
or
xchg
movb
fistpll
insl
jnp
mov
lcall
and
add
or
repz
inc
inc
mov
addl
add
xchg
add
dec
pop
dec
rcrl
rol
mov
jg
ljmp
imul
ret
aam
leave
addb
push
mov
and
mov
add
insb
sub
mov
call
aas
frstor
testb
adc
and
testl
stos
mov
dec
ljmp
pop
and
in
cli
rclb
and
xchg
insb
js
pop
fdivrs
pop
mov
shr
add
push
push
cwtl
or
movl
mov
pop
adc
fsubp
pushf
inc
push
std
xchg
adc
je
mov
outsb
loope
add
adc
test
insl
pop
incb
ja
adc
cmp
inc
jb
rolb
add
outsb
sub
inc
outsb
loope
inc
inc
inc
inc
xor
pop
add
inc
cmp
enter
cs
sbb
scas
int
pop
sbb
adc
inc
push
inc
and
gs
iret
push
mov
cmpsb
xor
clc
sub
xor
outsl
mov
or
or
or
repnz
je
mulb
add
mov
inc
inc
pop
cmp
enter
xor
or
and
movsl
icebp
clc
scas
sti
test
or
sbb
xor
xchg
add
sub
roll
adc
adc
dec
pusha
mov
add
and
shrl
data16
lods
push
mov
push
lea
inc
popf
movl
inc
dec
mov
jmp
inc
out
out
xchg
leave
adc
aaa
out
xor
inc
push
xor
fisttps
movl
mov
jne
sub
push
out
push
dec
xchg
sbb
lcall
and
cmp
push
push
hlt
dec
enter
pop
jmp
mov
push
pop
in
outsb
or
and
adc
mov
adc
pop
jne
dec
add
add
lds
sbb
inc
add
adc
lret
or
div
sbb
push
mov
sbb
pop
idiv
fidivs
lret
sub
cmp
cs
and
adc
pusha
fwait
pop
sbbl
enter
movsb
xchg
imul
popf
push
sbb
and
mov
filds
mov
imul
pop
cld
imul
mov
inc
xchg
cmc
mov
sbb
mov
sub
mov
ja
pop
lods
nop
je
sub
es
imulb
xor
je
push
movsl
jo
loop
loop
es
stos
pop
scas
add
les
pop
das
in
rolb
sbb
xchg
lret
pop
adc
out
sub
or
push
iret
cmp
xchg
pop
cmp
add
adc
cmp
aas
popa
push
jl
pop
insb
sub
std
loopne
pop
adc
cld
fisttpl
push
fcoms
sti
inc
and
cld
lret
mov
cli
mov
push
cmp
jne
mov
aaa
dec
jae
push
cmp
jne
es
jne
mov
repz
adc
or
mov
push
or
cmp
out
add
jmp
std
mov
repz
std
jmp
cld
push
sub
cs
sahf
sbb
inc
inc
inc
xchg
loopne
sub
jb
jne
movsl
mov
insb
pop
shr
repnz
pop
push
adc
lock
dec
stos
repz
adc
sbb
pop
leave
jns
adc
jns
pop
mov
pusha
pop
ret
jnp
in
and
xchg
pushf
and
pop
fs
sub
cmp
cmp
cmp
inc
adc
or
sahf
call
cmp
xchg
fidivl
xchg
xchg
es
or
hlt
scas
cmpsb
es
add
sbb
fimull
inc
fs
sbbb
xor
js
add
ffree
xor
roll
mov
sbb
xchg
loopne
inc
sti
ja
int
stc
aad
hlt
push
jmp
mov
sbb
adc
jne
or
or
cmp
sbb
adc
out
jns
mov
mov
fs
dec
mov
imul
rorl
pop
outsb
sbb
cwtl
mov
cmp
ja
pop
nop
add
add
nop
or
jb
les
add
xchg
sbb
dec
cmp
inc
sbb
bound
std
testb
push
sub
pop
hlt
jae
ret
xchg
shlb
pop
lret
clc
or
mov
call
mov
jle
dec
sub
insl
mov
imul
stos
add
testb
inc
inc
pop
sbb
sahf
mov
out
mov
sbb
pusha
rcrl
mov
test
push
mov
xor
je
mov
inc
adc
add
push
mov
add
dec
sbb
add
movsl
icebp
dec
pop
mov
shlb
mov
adc
cld
roll
movb
push
or
scas
subl
pop
push
pop
and
int
push
xchg
cmovs
scas
push
pop
test
or
sbb
xchg
test
cmp
or
rep
jmp
add
fs
and
jb
adc
enter
sub
out
ss
sub
or
fsubs
mov
mov
or
scas
adc
cmp
push
dec
add
lret
movl
imul
mov
jns
jnp
dec
push
inc
push
cmp
sub
repz
and
mov
mov
call
cmp
in
lock
call
clc
clc
cld
fdivrs
lock
lock
fnstenv
mov
mov
cmp
andl
sti
and
fcompl
ret
push
mov
into
jl
cld
scas
loopne
push
or
add
neg
fimuls
pop
sbb
stc
sub
pop
xor
cmp
pusha
fiaddl
jl
sub
out
add
dec
inc
fcomps
add
jbe
mov
jecxz
insl
pop
add
ljmp
mov
push
mov
sahf
out
aam
in
jns,pn
out
aaa
sbb
sbb
adc
jns
out
adc
or
and
jns
or
add
mov
jnp
inc
adc
sbb
sub
aaa
outsl
dec
push
xchg
push
add
pop
sub
dec
adc
daa
ja
adc
loop
repnz
mov
xor
mov
mov
incl
inc
decl
jne,pn
pop
add
movsb
pop
test
scas
push
cld
cmp
xor
jbe
push
inc
sbb
sti
add
mov
pusha
or
add
add
sarb
shlb
dec
mov
mov
xor
add
fisttps
and
jmp
cmp
jae
dec
les
pop
jae
pop
jbe
arpl
push
mov
dec
xchg
jmp
pusha
add
sub
rcrb
cmp
adc
ror
push
jg
inc
add
add
pop
call
or
sbb
sbb
dec
dec
je
push
push
aam
test
mov
unpcklps
mov
xchg
insb
adc
xchg
out
and
mov
xor
pop
decb
push
stc
adc
mov
inc
and
and
movsb
sbb
push
das
fwait
pop
or
inc
add
ljmp
add
lret
or
push
cmp
test
pop
add
dec
adc
testb
xor
adc
pop
rclb
inc
pop
xorb
push
mov
adc
cmp
sbb
sub
sub
insl
or
sahf
icebp
or
push
push
lcall
and
sbb
push
xchg
inc
out
cmp
and
mov
jmp
ss
nop
mov
lock
push
pop
imul
add
popf
fs
adc
imul
add
jmp
jl
mov
sbb
call
mov
mov
pop
insb
sub
sbb
mov
mov
add
dec
jb
ret
sub
incb
inc
jns
xor
pop
cmp
xlat
or
incl
pop
sti
cmp
jno
sub
pop
sub
mov
in
push
sbb
aam
jae
adc
add
dec
lds
and
xchg
push
lahf
push
xor
xor
mov
js
pop
je
sbb
or
std
cmp
jle
sti
int3
mov
ud0
iret
jno
mov
mov
test
int3
dec
jo
mov
je
dec
inc
sbb
jne
mov
mov
out
inc
xchg
inc
and
mov
in
loop
lcall
jo
inc
or
sbb
push
test
xor
inc
mov
push
aaa
inc
out
nop
orl
cmp
out
dec
or
stc
pop
push
adc
mov
add
lcall
push
mov
mov
push
mov
dec
jb
mov
mov
inc
and
fldt
ret
push
je
mov
flds
cmpb
jp
push
push
cmpsl
cmpl
sbb
and
jge
loop
shll
imul
lock
or
push
adc
pushw
out
jns
add
adc
adc
or
out
fdiv
cmp
call
sbb
out
mov
aaa
jbe
pushl
cmpsl
jo
ljmp
xchg
nop
ficoms
jg
imul
push
paddb
hlt
dec
js
mov
nop
jp
adc
push
sbb
aam
add
sti
push
push
decl
inc
jg
jbe
pop
das
fs
adc
mov
outsb
mov
loopne,pn
add
mov
iret
inc
inc
cmp
je
dec
popf
adc
xchg
mov
push
mov
cs
sbb
adc
add
pop
ret
rcrb
je
and
inc
sub
aam
ret
or
sbb
mov
pushf
movb
fld
outsl
les
mov
incl
lcall
push
mov
push
inc
sbb
xchg
and
jne
sbb
lods
mov
inc
mov
mov
or
fidivs
or
xchg
dec
mov
leave
or
jmp
popf
inc
push
inc
movl
or
mov
jo
add
test
jle
movsl
xchg
adc
test
decb
cmpl
cmp
mov
movsb
sarl
mov
rcrl
mov
or
add
cltd
loopne
inc
push
pop
inc
int
push
adcb
and
mov
fdivl
pop
or
frstor
lret
dec
in
sbb
dec
movsb
jb
jns
ret
add
mov
sbb
push
dec
sahf
lret
adc
loopne
add
fildl
dec
dec
mov
jl
and
lea
popa
bound
mov
mov
popa
dec
or
pusha
pslld
and
das
dec
jmp
ljmp
adc
into
mov
mov
push
scas
sbb
mov
imul
lea
mov
dec
mov
jb
es
adc
cmc
gs
push
xchg
fisubs
in
or
sbb
lods
adc
or
adc
mov
test
lahf
jge
outsb
jns
cmpl
or
inc
push
push
aad
scas
adc
repnz
pop
mov
mov
mov
sub
mov
testb
cmp
and
add
jmp
cmp
je
inc
or
inc
inc
int3
jmp
or
aas
test
sarl
push
insl
and
jbe
out
sub
cltd
push
inc
and
push
mov
xor
xchg
pop
mov
jmp
ja
pop
adc
mov
pop
push
sub
push
sub
mov
pop
das
push
enter
decb
inc
leave
jne
dec
push
nop
inc
add
sub
xchg
xchg
sbb
hlt
adc
imul
push
xor
adc
enter
jo
daa
inc
inc
and
add
fmul
aam
leave
aaa
rep
push
push
adc
pop
mov
jb
stos
inc
sbb
loopne
inc
and
and
lock
lock
iret
mov
stc
push
or
mov
push
adc
ja
rorl
jmp
pop
arpl
xchg
movsl
lods
test
fs
pop
clc
sarl
inc
mov
mov
add
test
rcll
mov
mov
cmp
pop
xorl
adc
or
or
out
push
and
push
ret
loopne
fnstcw
cmp
shrb
mov
dec
mov
inc
inc
mov
cmp
sub
dec
mov
mov
int3
js
adc
adc
jg
push
and
add
xchg
and
pop
mov
addr16
sub
rclb
mov
outsb
fdivrl
bound
xor
pop
sbb
in
dec
shll
call
inc
cmp
lock
adc
gs
clc
jp
mov
outsl
es
push
popf
sahf
enter
add
mov
cmp
xor
jne
aam
pushf
enter
mov
fmuls
out
mov
mov
adc
dec
lcall
std
data16
adc
and
insb
jmp
inc
sbb
jae
or
lock
push
popl
push
or
ret
sub
push
inc
cmc
xchg
pop
sub
sbb
addr16
sbb
imul
cmp
cltd
nop
ja
add
sub
sub
into
or
fisttpll
imul
xlat
and
int
mov
pop
xchg
add
fiadds
rolb
xchg
loope
mov
lret
pop
or
sbb
pop
or
aam
stos
add
jbe
orl
js
mov
jo
xchg
fildl
fcomps
mov
add
xor
dec
xchg
fildl
repnz
inc
xchg
sbb
sbb
dec
xchg
jg
addl
adc
orb
lcall
addb
shrl
insl
ja
cmp
push
pop
xor
rcrb
shl
test
xor
insb
lock
in
xor
fsubl
xor
mov
push
jne
xchg
pusha
sbb
les
sub
jne
rorl
incl
xorb
subb
call
adc
or
test
gs
test
imul
and
inc
cmc
xchg
ret
test
jecxz
jmp
das
out
dec
sbb
aas
icebp
push
add
testl
and
inc
out
pop
adc
adc
pop
fistps
adc
and
shrb
incb
fcoml
dec
jo
push
sub
lea
neg
mov
mov
dec
cli
or
add
jmp
cmp
xchg
jbe
jp
clc
sub
push
cld
jb
sbb
decl
push
mov
dec
mov
mov
dec
dec
mov
rol
inc
mov
test
or
adc
inc
loopne
scas
jne
shlb
loope
hlt
or
add
es
and
cmp
sub
sbb
clc
mov
adc
xchg
lcall
add
jno
cmp
adc
sbb
inc
adc
or
jg
add
mov
rolb
xor
or
inc
and
mulb
xchg
and
xor
dec
sbb
cltd
jae
cmp
insl
xor
repz
add
sbbb
andl
sbb
test
add
jbe
push
sahf
or
rolb
sahf
push
clc
pop
ljmp
adc
js
ret
je
nop
repnz
sub
test
mov
add
mov
pusha
mov
xor
jmp
mov
xor
inc
cmp
mov
and
pop
pusha
enter
data16
nop
sar
dec
xor
cmp
nop
sub
in
insl
cmpsl
adc
push
pop
dec
ss
sbb
enter
into
insb
js
inc
movsb
enter
mov
ret
es
rorb
mov
add
andl
pop
mov
xchg
jne
test
adc
add
and
push
add
test
inc
jmp
pop
mov
clc
push
int
and
jae
jo
arpl
enter
mov
call
xor
fiaddl
mov
clc
mov
das
cmp
aam
daa
mov
aam
push
pop
push
rcrl
jne
mov
pop
adc
add
imul
bswap
sub
sbb
add
fists
add
xchg
rclb
add
xor
nop
add
adc
and
pushf
out
or
mov
fstl
rcrb
adc
adc
adc
jo
inc
fwait
aas
cli
mov
mov
insb
push
lea
loopne
cmp
or
in
mov
sub
cmp
les
xlat
push
mov
mov
mov
push
push
push
xor
push
pop
lods
add
or
add
iret
xor
push
dec
or
xorb
inc
clc
adc
mov
call
test
sti
push
pop
push
lea
dec
xchg
dec
pop
or
xchg
pop
pop
push
adc
dec
or
add
mov
jl
jg
sub
lahf
pop
fdivrs
or
push
or
popf
pop
cmp
popf
or
leave
in
mov
and
lock
mov
stc
mov
and
rcll
paddd
sub
pushf
fcomps
and
sbb
lods
push
sbb
ficompl
jne
xor
rorl
shrb
or
mov
mov
push
lods
lret
test
test
fs
sub
cmp
or
mov
sub
sub
push
or
or
sbb
sbb
adc
popl
frstor
ljmp
mov
sub
loopne
movl
cmp
es
rcl
or
cmp
cmpsl
test
mov
fmul
sar
or
fadd
mov
roll
adc
sub
xchg
pop
je
inc
loopne
in
sbbb
sbbb
or
mov
fwait
int3
xor
push
dec
sub
fistl
or
xor
or
or
je
adc
and
je
lret
bound
movb
cmc
xor
adc
out
rclb
add
sub
inc
ror
mov
dec
jne
lea
cld
cmp
or
addl
add
call
cmpsb
test
fdivrs
jle
shr
test
test
mov
movb
popf
out
mov
cmpsb
sbb
in
add
lea
nop
xchg
or
aas
push
push
jno
in
je
mov
fdivr
ficoml
push
push
das
adc
mov
lahf
les
sub
push
cmp
sbb
dec
inc
inc
cld
pop
cwtl
mov
pop
clc
das
inc
ror
push
orb
mov
jmp
and
je
and
xor
sti
nop
mov
getsec
clc
adc
aad
jmp
mov
cmpl
leave
sub
adc
or
rorl
loopne
pop
and
cli
or
push
icebp
test
ret
jae
ljmp
jmp
add
cld
rcll
mov
lock
ja
ficompl
clc
mov
jg
pop
pop
mov
push
aam
add
scas
pop
push
sub
outsb
dec
or
xor
add
mov
inc
jno
xlat
xchg
jns
pop
xchg
pusha
mov
pop
xchg
cmp
insb
push
cld
pop
cmp
cs
subl
movsb
mov
push
lods
sbbb
dec
lret
cmpsb
add
cmp
in
in
cmp
sti
or
jne
aam
fldt
aam
add
les
or
les
inc
cli
cmp
jle
adc
push
jge
and
fadds
push
push
mov
out
test
shlb
lock
out
into
std
adc
imul
fs
dec
pop
jne
movl
push
and
xor
stos
ljmp
rolb
and
mov
and
push
call
andb
add
lea
mov
or
ret
pop
leave
inc
adc
lea
xor
or
push
nopl
into
sub
jb
fs
mov
out
mov
cmp
or
insb
inc
ljmp
jle
pusha
pop
outsb
incl
loopne
cltd
sub
mov
xor
insb
and
je
or
jg
and
pop
mov
mov
inc
mov
inc
inc
inc
dec
mov
repz
inc
loope
cmp
jl
sbb
pop
sbb
mov
call
fwait
inc
push
mov
mov
dec
jne
loopne
movsb
mov
or
sbb
hlt
gs
cltd
add
jmp
cmp
nop
mov
sub
mov
jp
leave
adc
call
mov
xor
jge
pop
push
pop
aam
or
or
sbb
addr16
jp
fisttpl
mov
inc
sbb
int3
in
xorl
aam
and
push
push
pop
mov
inc
adc
push
xor
cmp
inc
and
int3
cmp
sub
xlat
cli
repnz
adcb
pusha
xor
and
xchg
fs
or
insb
hlt
xchg
xor
pop
std
adc
cmp
loopne
or
pop
out
icebp
std
sub
jmp
xor
dec
sbb
mov
inc
cmp
add
loopne
gs
ss
mul
jmp
or
jno
es
lahf
stos
sub
ds
xor
and
and
imul
jecxz
loop
xor
leave
pushl
cmpl
and
cmp
pop
popa
popa
popa
mov
lret
fisubs
sub
cmp
es
stos
sub
and
pop
sbb
pop
adc
mov
ds
imul
mov
mov
das
adc
fidivl
inc
inc
sbb
sub
inc
sub
sub
xorb
rclb
xchg
mov
sbb
sub
cwtl
sub
xor
notb
leave
sbb
aaa
out
jle
jnp
in
or
push
cmpl
add
icebp
push
pushf
or
cmp
sahf
pop
adc
inc
add
cwtl
decl
inc
inc
movsb
shlb
push
es
xor
sbb
xor
sbb
orb
mov
in
xchg
and
lea
jnp
mov
aaa
or
jne
cmpl
push
pop
ret
mov
aam
movsl
sub
pushf
push
xchg
lods
xor
adc
dec
xor
add
dec
pop
dec
xor
rclb
aam
sub
inc
jp
dec
jle
xor
repnz
clc
add
xor
loope
shll
xor
gs
lock
xor
sbb
jo
loope
nop
add
es
mov
sbb
out
scas
push
inc
mov
jmp
push
lret
dec
ficomps
in
addl
ljmp
and
fcoms
clc
pop
push
cmp
rol
cmp
pop
in
xchg
daa
mov
adc
jmp
add
repnz
sbb
dec
lret
or
sub
add
sbb
lods
imul
xor
lods
std
out
call
or
and
pop
add
rol
sub
push
push
push
mov
mov
inc
aas
push
mov
in
loope
sbb
inc
jge
dec
adc
enter
cmp
inc
inc
or
mov
jb
cwtl
and
sbb
cli
xchg
lret
inc
bound
outsl
insb
push
cld
push
jo
shrb
or
inc
mov
mov
sbb
or
inc
xchg
imul
cmpsb
insb
test
movl
mov
fnstcw
inc
sub
push
outsl
mov
dec
flds
pop
push
sub
and
pop
ret
dec
push
fldt
fstps
cmp
and
movsb
movsb
pushf
xchg
pop
cmpb
cmp
dec
mov
jns
inc
xchg
nop
or
xor
rol
mov
mov
aaa
imul
and
dec
repz
ret
mov
inc
and
push
movsb
movsl
xlat
sbb
in
push
in
inc
inc
data16
inc
push
dec
pop
cmp
test
daa
jle
and
mov
jmp
push
dec
inc
push
pop
lahf
testl
push
mov
pop
cmp
je
jle
or
sti
mov
mov
pushf
cs
jg
jge
push
inc
or
ret
ret
add
lret
cmp
bt
sbb
lret
pushf
cmpl
data16
xchg
es
adc
sub
and
daa
test
shr
mov
push
cmpsb
jp
sub
dec
ja
mov
out
mov
lea
xchg
mov
mov
push
inc
mov
xchg
pushf
cwtl
mov
inc
loopne
int
in
das
mov
push
xchg
mov
sub
inc
add
sbb
add
add
das
adcb
xchg
aaa
jmp
pop
inc
sub
mov
movsl
dec
cmp
or
dec
inc
cmp
cmp
mov
or
cmpsl
test
loopne
fcompl
pop
pop
xchg
fcomps
int3
jns
stc
std
data16
popf
enter
cld
jns
movsl
shrb
imul
add
sarl
insl
ja
aaa
dec
cld
adc
sub
push
popl
push
adc
aam
xchg
or
icebp
sub
mov
inc
pop
out
ret
cmp
add
popa
js
jmp
jge
bound
jle
dec
add
push
ret
pop
mov
fisttpl
add
insb
or
addr16
hlt
jmp
mov
pop
adc
mov
or
or
pop
in
jb
adc
sub
mov
test
cmp
fs
mov
cmp
test
pop
jnp
adc
or
out
lahf
out
fdivp
push
call
pop
mov
fld
out
push
push
jmp
pop
pop
jns
adc
mov
pusha
pop
mov
push
and
pushf
test
mov
pop
mov
sub
pop
out
fidivrs
push
je
test
jl
mov
sbb
inc
rorb
push
fsubs
add
in
pop
pop
sub
aas
inc
fwait
add
test
cmp
xor
mov
mov
mov
lock
rorl
mov
and
fstpl
js
or
add
add
jno
jle
cld
cli
dec
je
loope
mov
lret
jne
pop
mov
rcrl
int
dec
cmp
jge
inc
mov
pop
mov
push
int3
sbb
int3
mov
inc
ljmp
nop
call
inc
and
adc
outsl
dec
aas
add
add
add
mov
and
and
lock
ret
idivl
aas
and
xor
pop
add
ds
call
xor
daa
fwait
xor
daa
and
test
enter
pusha
in
decb
testl
and
dec
adc
pop
xorl
jae
fs
sub
orl
movl
sub
jmp
xorl
inc
rclb
rcll
xchg
data16
add
jne
or
push
adc
and
ret
cmpsl
and
add
test
out
inc
adc
push
push
jno
inc
bound
xor
lock
loope
dec
or
push
xchg
jle
or
sub
inc
imul
xlat
sub
mov
aam
sbb
outsl
push
data16
push
jb
jbe
mov
loop
push
sub
loope
divb
cmp
enter
xchg
call
rorl
pop
sub
pop
sbb
out
push
mov
les
adc
push
mov
or
mov
sub
out
sbb
and
mov
or
shl
dec
sub
jl
ljmp
mov
cmp
fs
dec
jae
cmp
mov
loope
or
adc
adc
repnz
dec
add
adc
loopne
add
lea
inc
test
jg
dec
sub
lea
inc
cmp
pop
test
cs
push
push
cmc
xchg
ficompl
pop
std
dec
push
adc
int3
push
testb
das
ss
inc
lcall
or
sub
loope
dec
mov
sbb
fcmovbe
and
out
xchg
mov
cmp
add
shrb
popa
xchg
hlt
into
adc
outsb
inc
mov
outsb
xor
push
inc
or
test
mov
in
dec
popa
or
or
pop
and
adc
les
ss
sub
aam
adc
test
xchg
or
mov
push
mov
mov
out
jbe
push
inc
and
and
shrb
popa
fnstenv
inc
testl
adc
or
or
jbe
in
stos
js
lock
lret
add
into
sbb
clc
dec
xchg
inc
and
push
push
jne
sub
or
add
leave
rclb
scas
in
push
add
cmpsb
or
push
sub
pop
loopne
xchg
add
cli
add
add
inc
inc
movb
push
jp
mov
and
mov
scas
xchg
iret
loopne
ret
imul
and
mov
push
and
outsb
mov
dec
jmp
addr16
mov
jo
push
test
and
aas
and
pushf
mov
orl
and
dec
mov
pop
imul
inc
mov
cmpl
pop
insl
rorl
loop
push
jg
sbb
xorl
fldenv
jg
jne
repnz
jmp
das
push
dec
sbb
xchg
inc
cld
ret
je
inc
jns
outsl
cmpl
stos
imul
and
push
idivl
ret
cs
es
mov
push
inc
lea
scas
int3
rorb
popf
in
mov
jb
hlt
fadd
fcomps
jle
cmp
xor
adc
imul
out
mov
mov
or
sub
cmp
pop
imul
mov
jl
push
add
test
in
or
loope
xlat
loopne
jae
cmp
dec
pop
test
stos
adc
rclb
fisttps
jle
ja
mov
movsbl
push
loope
cmp
pusha
loopne
aam
sub
out
test
pop
sbb
pop
sar
pop
mov
aad
xchg
add
subl
sub
dec
out
or
aam
clc
xlat
loopne
fsubs
lret
mov
dec
or
je
or
movsb
adc
jb
in
jne
or
add
push
mov
or
mov
push
lock
ret
add
shrb
mov
adc
loopne
sbb
imull
arpl
push
imul
lret
or
ja
lods
shrl
in
xchg
daa
adc
out
sbb
hlt
hlt
stc
cmpl
or
inc
insb
je
lock
dec
jo
mov
test
adc
ds
loopne
sub
xchg
and
fidivrs
ss
or
xor
mov
repnz
jb
dec
xor
movl
out
jns
or
adc
pop
outsl
imul
js
sub
je
mov
inc
adc
push
dec
dec
sub
lret
pop
scas
sbb
mov
rorb
push
rcrl
sbb
jle
inc
lds
pop
push
or
and
movsb
jge
ret
mov
lcall
dec
pop
inc
cmp
lock
test
je
push
arpl
lret
pop
shl
test
outsl
push
dec
xchg
pop
mov
aaa
jne
das
mov
adcl
icebp
jge
pop
sbb
dec
and
imul
aaa
test
mov
cmp
andl
mov
xlat
imul
mov
inc
add
sbb
inc
inc
push
xchg
pop
jne
cmp
xchg
inc
sbb
bswap
negl
dec
xor
xor
add
xchg
insb
pusha
ss
cmp
cmpsl
add
mov
mov
push
jmp
mov
pushl
loop
int3
mov
icebp
test
fnstsw
ja
setp
push
pushf
hlt
mov
inc
insb
cli
inc
cmp
pop
or
sbb
xor
xor
add
adc
je
inc
cmp
out
pop
jns
movsl
sbb
jb
pop
mov
shrl
cli
add
add
aad
sub
addr16
decb
repnz
push
outsb
je
test
jns
sbb
xchg
je
or
movsb
xor
jae
rcr
test
mov
push
clc
je
data16
movsb
push
pusha
pop
add
or
mov
clc
sbb
or
sbb
pop
jecxz
push
stos
add
or
dec
jne
mov
jne
mov
jmp
cmp
jle
insl
cmpl
incl
dec
or
push
scas
cwtl
mov
or
dec
pop
or
xchg
sub
cld
adc
or
cmc
mov
scas
add
arpl
js
inc
or
popf
test
test
and
lcall
pop
test
mov
rcl
sub
adcb
pop
cmpb
jne
and
test
pop
xchg
push
push
xor
mov
setl
gs
decb
inc
leave
dec
inc
daa
add
mov
sbb
dec
lahf
shl
xor
sbb
push
sub
push
test
push
lret
dec
cmp
mov
inc
fbstp
push
or
xor
stos
mov
cmpsb
jmp
or
popa
int3
je
cltd
outsb
dec
fmuls
sub
jl
insb
mov
sub
neg
jecxz
js
sti
lds
jne
cmpsb
jmp
sbb
dec
test
pop
mov
or
jne
and
enter
lea
or
push
inc
movb
aas
and
xorb
jbe
cmp
push
nop
xchg
cmpsl
clc
bswap
clc
sahf
add
mov
dec
jmp
pop
xchg
icebp
sbbb
movb
stos
test
popa
dec
aas
je
into
cmp
jmp
orb
mov
movb
inc
jp
je
jmp
cmovl
test
sbb
sub
inc
xchg
sub
fwait
sbb
adcl
popl
xor
test
icebp
push
jmp
rorb
sub
push
test
dec
mov
outsl
inc
and
mov
jmp
popf
fcoml
or
pop
inc
negb
shl
push
jp
cltd
fdivl
dec
fdivrl
lea
stos
aas
mov
or
adc
push
jbe
loope
adc
dec
sbbl
jne
add
in
nop
aaa
cmp
pusha
xor
push
call
aad
xor
rcll
push
lock
sbb
xchg
jnp
add
jg
mov
je
and
adc
sti
push
and
mov
jb
and
add
push
xorb
adc
adc
pop
mov
mov
mov
sub
movsb
ret
sarl
ds
rcrl
and
lret
sub
sbb
dec
add
addr16
imul
push
data16
or
cmp
imul
cmp
xchg
shrb
inc
lea
andl
mov
sbb
mov
cmp
pop
ret
ja
add
lea
shll
add
imul
rcr
and
rolb
loopne
lcall
push
aam
daa
push
mov
nop
mov
dec
or
push
mov
jge
aas
or
jl
push
pop
ror
fstl
jecxz
jne
push
aas
out
data16
out
xor
lahf
sub
lds
pop
icebp
inc
cwtl
sbb
mov
or
add
les
pop
xor
add
ss
lods
loopew
push
xor
jne
push
jo,pt
jmp
push
add
cmp
adc
loope
fcompl
push
adc
mov
sbb
add
add
push
js
jns
inc
cmc
orb
leave
or
mov
adc
inc
sub
addl
jg
test
mov
es
imul
add
jmp
movsb
mov
sahf
int3
fsubl
pop
sub
rclb
pop
sub
sbb
loop
add
jns
cld
shr
mov
imul
daa
mov
inc
jo
mov
test
dec
or
sbb
es
mov
mov
je
jle
push
cld
mov
mov
lcall
cli
add
cmp
jbe
push
pop
cmp
ljmp
shlb
subb
jae
mov
shr
lea
not
inc
adc
shll
pop
mov
push
sub
jbe
dec
loopne
pushf
mov
sbb
sub
es
dec
pop
jmp
scas
insl
nop
add
and
or
data16
jg
movsl
or
pop
clc
and
sti
mov
shlb
and
sti
add
add
add
dec
pop
cmp
ficoms
mov
imul
pop
sbb
jno
jae
adc
jno
mov
shr
not
sbb
shll
pop
dec
add
xor
mov
loopne
mov
pop
lock
stc
xor
dec
add
dec
lret
pop
movsb
mov
adc
xchg
cwtl
mov
mov
sub
ficoms
mov
lea
mov
inc
mov
pop
dec
or
adc
mov
mov
inc
mov
mov
xor
lret
lock
push
or
pop
mov
das
dec
or
jmp
dec
adc
cmp
mov
or
cltd
fiaddl
xor
lcall
repz
add
and
stos
ret
ret
pusha
es
shrb
lsl
scas
jp
fistps
push
push
call
aas
gs
push
or
movsb
cmp
sub
iret
push
decb
adc
inc
cmc
test
enter
and
push
shlb
movsb
das
sbb
adc
inc
das
mov
mov
xchg
in
dec
adc
dec
mov
jl
push
cmp
or
insl
or
mov
outsb
and
cmp
inc
out
pop
adc
sub
or
xor
adc
dec
push
xor
and
add
dec
and
cmp
imul
stc
mov
push
sbb
and
inc
adc
lods
mov
mov
and
push
or
or
adc
adc
mov
mov
fwait
orl
xchg
loope
and
add
sbb
mov
add
or
test
je
shl
add
inc
ljmp
jl
jl
test
incb
pop
loopne
xchg
cltd
or
or
hlt
test
push
mov
mov
mov
or
push
push
popa
data16
xchg
xchg
and
adc
in
outsl
mov
iret
shr
movb
clc
loop
aas
lock
nop
cld
or
adc
ja
std
dec
test
lock
call
aad
add
je
clc
add
dec
fmuls
sbb
mov
adc
or
fs
inc
mov
sahf
inc
pop
hlt
cmp
mov
lock
icebp
stos
jmp
dec
inc
jne
or
lds
not
and
xchg
ror
dec
or
sbb
stc
adc
daa
sbb
or
shrb
mov
cs
mov
jb
cld
mov
cmp
clc
adc
movsb
lods
adc
mov
mov
push
or
jl
rcl
in
sub
aam
jne
lods
dec
mov
int3
push
pop
movsb
sub
sbb
mov
cmpsl
data16
sbb
clc
rolb
jge
jb
es
add
cmp
mov
dec
or
push
jns
push
lock
sub
add
xchg
sub
push
adc
xor
pushl
int3
fwait
pop
fstpl
lea
scas
data16
lcall
lcall
pop
push
pop
xor
push
jns
pop
lcall
or
iret
js
mov
jmp
aaa
js
test
sub
adc
add
push
inc
insb
xor
mov
insb
and
push
sub
jl
stos
shl
fs
mov
dec
inc
dec
insb
pop
xor
push
sar
dec
and
and
mov
push
jl
push
xor
cmp
or
out
dec
je
fisttps
rclb
mov
add
fnstenv
in
loopne
dec
ficoms
add
mov
loope
ret
ja
dec
lea
mov
test
mov
ret
adc
push
cmp
lods
sub
into
mov
test
cmp
lods
dec
inc
inc
insl
call
cld
or
jp
insb
sub
lods
pop
and
inc
ss
mov
push
push
push
jge
cmp
cmp
xor
out
adc
roll
or
stos
call
or
cmp
sub
and
or
cmp
adc
xchg
xor
test
aas
pop
int3
mov
sbb
jne
jae
push
inc
jnp,pt
add
cmp
fcmove
xor
aaa
arpl
mov
loopne
mov
mov
and
insb
cmp
pusha
clc
loopne
jb
lcall
cmp
je
mov
insl
sbb
and
or
mov
dec
pop
xor
sub
dec
dec
adc
mov
fisubrl
test
out
fsts
dec
mov
and
jne
push
cld
mov
mov
push
pop
outsb
leave
inc
test
mov
push
pushf
mov
sub
icebp
push
loope
mov
fdivrl
lcall
dec
add
pushf
stos
push
popf
xchg
sbb
iret
push
push
icebp
test
inc
cmp
push
and
mov
sub
jne
in
test
jmp
jmp
jp
mov
xor
and
jne
dec
jne
shl
and
xor
shll
jp
dec
jp
sub
adc
xor
mov
js
push
or
das
pop
xor
sbb
and
jge
lret
ds
out
or
pop
adc
cld
or
or
or
mov
mov
out
or
nop
cmp
dec
jo
or
adc
push
test
add
scas
and
or
push
lea
and
daa
pop
rcrb
cmp
jge
add
push
pop
hlt
xlat
mov
inc
add
xchg
hlt
loopne
repnz
ja
cmp
xor
sbb
pop
jb
or
xorl
cmp
pop
and
inc
test
mov
lock
push
shlb
dec
cs
jp
sub
imul
or
lods
dec
add
sarl
inc
mov
add
stc
std
adc
shlb
cmp
push
or
je
jnp
jle
roll
inc
cmp
cmp
sub
add
lmsw
and
sub
test
xchg
or
or
out
push
lret
test
xchg
jl
dec
xor
dec
or
inc
fisubrs
xor
and
or
ficomps
andb
fdivr
outsb
or
xor
lahf
pushl
adcl
push
cmp
mov
adc
push
in
adc
inc
andl
mov
or
mov
adc
mov
into
mov
and
loopne
cmc
inc
js
push
or
adc
ss
jmp
jne
inc
mov
cmpsl
pop
jl
ja
pop
jae
pop
xchg
loopne
bound
hlt
and
insb
popa
loope
loope
push
add
dec
imul
xor
inc
inc
add
rorb
xchg
xchg
dec
rorb
popf
call
and
std
hlt
inc
mov
gs
add
aas
push
enter
sarb
outsb
loop
call
jge
jmp
movzwl
sub
jl
cs
in
int3
test
in
fldcw
scas
into
je
cmp
mov
decl
rorl
sbbb
xchg
imul
test
mov
fcomps
pop
lcall
mov
inc
or
add
xor
je
movsb
mov
sarb
dec
inc
inc
dec
cmp
jo
add
xchg
or
std
lods
or
pop
xor
pop
sub
in
or
sub
pop
jno
adc
ficomps
jp
leave
in
in
jp
scas
and
hlt
ficomps
pop
roll
in
out
sbb
pushf
or
fisubrs
adc
in
sbb
sbb
adc
and
pop
nopl
jg
add
and
and
sbb
or
cmp
notb
or
push
movsl
xor
and
loope
adc
and
les
std
xchg
push
mov
sahf
aaa
int
ret
test
shll
enter
jne
leave
jae
xchg
sbb
inc
call
xor
test
sub
aaa
xor
dec
sti
call
enter
sub
inc
cs
xor
sub
js
push
and
js
js
negb
cmp
test
xchg
in
scas
dec
outsl
and
call
push
pusha
repz
mov
repnz
insb
adc
fimuls
cld
ja
stc
inc
cmp
inc
pop
mov
push
test
lret
add
repz
shll
and
call
pop
in
je
jns
mov
push
hlt
xchg
repz
lods
movsb
xor
add
sbb
xchg
jne
add
add
call
inc
in
or
mov
mov
xor
cltd
in
rolb
mov
out
loop
in
sbb
pop
adc
in
orb
test
mov
jb
test
mov
mov
icebp
adc
outsl
sarb
call
mov
sysret
sub
or
int
lds
cli
inc
jns
xor
outsb
leave
cmp
and
ss
push
mov
xchg
imul
sub
mov
stc
lea
inc
sub
mov
adc
lret
pop
js
ret
mov
jge
dec
ror
xchg
ret
lock
mov
jb
jmp
fdivl
outsb
shll
mov
rclb
dec
rorb
or
movsb
inc
sbb
test
je
test
push
pop
and
lods
inc
leave
push
les
push
mov
sub
das
xor
dec
adc
cwtl
sahf
add
movlps
sub
popl
jl
dec
mov
sarb
lds
mov
aaa
cmp
add
jbe
icebp
cmp
jne
push
cmp
and
fcom
inc
addb
inc
cmpsl
or
push
mov
adc
push
jbe
ret
jne
mov
es
mov
mov
push
or
cwtl
add
in
cltd
mov
out
add
add
jmp
xor
push
pusha
subb
jmp
add
add
add
mov
or
adc
add
add
cmp
add
jne
inc
cmpsl
adc
or
push
aaa
inc
cld
push
ds
or
pop
and
dec
cmp
call
push
adc
mov
sub
or
add
push
or
push
xlat
and
shll
enter
pop
lds
cltd
jecxz
cmp
sub
add
cmpsb
push
pop
inc
clc
add
cli
sti
mov
dec
inc
sub
jno
xor
mov
push
lods
lock
mov
je
or
mov
pop
push
sbb
add
inc
pop
test
in
sarl
sub
sbb
dec
mov
ljmp
movsl
xchg
je
push
or
adc
mov
imul
pop
fcomp
pop
loopne
fldl
or
fldl
or
data16
xchg
sahf
add
push
inc
lcall
fcmovne
pop
jmp
jo
push
fldt
dec
popf
mov
pop
sub
xchg
int3
sub
das
sub
xchg
jmp
je
add
and
sbb
push
lea
sti
fldenv
lcall
xchg
insl
ljmp
push
pop
mov
fldcw
sub
add
add
and
lret
nop
xor
pop
xor
test
push
jns
outsl
xchg
adc
rorb
dec
fmulp
in
shl
push
in
inc
adc
faddl
push
fcom
fdiv
inc
sbb
cmp
push
push
shl
push
adc
aaa
jne
das
sbb
ret
and
inc
lock
testl
push
dec
push
pop
out
dec
repz
sbb
clc
mov
and
sti
sahf
loopne
mov
arpl
mov
dec
mov
or
push
dec
mov
and
lock
push
or
inc
mov
sbb
lods
shlb
xchg
call
cmp
mov
jle
and
inc
sbb
jbe
or
dec
sbb
dec
sti
cmp
push
xchg
jmp
inc
faddl
pop
or
or
popa
pop
push
sar
push
jmp
test
fmull
out
xchg
cmp
in
movsb
mov
push
push
cmpl
out
jle
testb
sbb
add
push
dec
adc
inc
adc
add
push
mov
and
mov
sbb
or
push
or
loopne
adc
enter
and
adc
xor
test
mov
outsl
test
sbb
jb
or
aas
mov
mov
js
xor
clc
sarb
mov
pop
sub
test
jb
call
push
jmp
xor
leave
lods
std
repnz
pop
jno
sbb
pop
pop
mov
dec
xchg
mov
push
pop
ja
les
pushf
add
mov
lahf
dec
testl
xchg
dec
sbb
pop
cmc
mov
mov
std
lea
testb
adc
fstpt
fldcw
in
cmpl
mov
loopne
jo
jge
mov
pop
lock
inc
sahf
adc
push
lret
jl
or
bound
ja
stos
movl
inc
iret
xchg
std
lods
push
sahf
pop
sbb
cmp
lea
shl
mov
lock
push
daa
mov
lret
in
jne
enter
pop
or
mov
add
enter
lret
test
iret
mov
cmp
lods
mov
aam
sar
or
iret
and
mov
xor
or
es
testb
push
mov
lcall
je
movsb
cmp
jg
jne
lahf
movsl
dec
cmp
adcb
pop
aad
mov
mov
aad
outsb
lcall
pop
inc
jne
mov
xor
movsl
pop
subl
aad
cmp
push
int
movsl
test
mov
cmp
lods
cmp
push
lds
dec
mov
cmp
test
sbb
mov
mov
lret
xchg
jg
in
xor
fs
xchg
out
push
or
add
xchg
imul
js
xor
xchg
add
adcb
sti
push
inc
cmp
lods
and
setge
std
mov
repnz
inc
jns
inc
sets
dec
xchg
cmp
xchg
jno
outsb
sbb
mov
cmp
adc
negl
mov
pop
xor
mov
mov
jno
sub
jns
sbb
xchg
test
mov
sahf
add
pop
insl
pop
je
inc
cld
mov
inc
hlt
or
dec
mov
inc
pop
enter
mov
pop
mov
loopne
xor
mov
mov
outsb
into
je
divl
sahf
and
subb
push
add
mov
or
jne
std
mov
sti
and
dec
sub
mov
xchg
xor
repnz
std
aaa
addr16
lods
dec
mov
das
lock
fdivr
pop
sbb
dec
adc
lods
insb
cwtl
add
mov
mov
test
push
pop
jno
notl
cmp
jbe
scas
cmc
jle
popf
mov
call
ds
xorb
sub
push
mov
jns
cmp
push
mov
jno
test
mulb
pop
aad
stos
xchg
movq
enter
lds
mov
ja
lea
cmpsb
lret
lock
out
imul
mov
mov
pop
imul
ljmp
loopne
dec
movaps
push
push
mov
in
jecxz
ja
mov
cs
sbb
mov
std
jns
push
dec
out
imul
inc
add
movb
jno
jne
test
add
clc
popa
pop
jns
xor
roll
pop
stos
xor
push
frstor
dec
xchg
jl
sbb
cmp
inc
push
or
inc
dec
call
std
sub
xor
push
imul
test
sahf
dec
repnz
dec
push
ja
xchg
daa
in
mov
mull
lods
popa
dec
push
fdivrp
or
jecxz
lods
dec
ds
data16
aad
inc
adc
hlt
sub
test
inc
push
pusha
jmp
popa
dec
jmp
dec
das
rcrb
int3
add
movsl
mov
pop
sar
lock
aam
mov
or
jmp
lds
or
sbb
jge
in
pop
sub
cmp
loopne
pop
or
xchg
scas
jne
adcb
gs
cmp
cmp
jns
xchg
in
addr16
dec
add
xchg
cmpb
je
jbe
mov
insl
mov
movsb
or
shll
arpl
dec
pop
mov
inc
push
inc
lret
or
dec
out
jne
cmp
xchg
sbb
jo
hlt
or
xor
inc
ds
das
push
or
xchg
clc
dec
pop
jno
push
je
sbb
test
sub
gs
loopne
cmp
push
enter
das
and
mov
cmp
and
sahf
cmpsl
jne
xchg
push
inc
mov
sbb
cmp
and
push
cs
movsb
pushf
sbb
or
mov
sbbb
sarb
mov
dec
mov
lea
push
lods
icebp
lcall
lret
and
inc
shrl
and
outsb
leave
sub
or
add
mov
loopne
cmp
test
enter
mov
push
or
popa
push
popa
ljmp
dec
push
lock
xor
pop
add
mov
pop
xor
scas
adc
pop
jns
adc
popa
scas
movsl
call
push
es
push
pop
nop
les
in
pop
leave
cltd
popa
bound
and
adc
and
push
arpl
popa
xor
repnz
cltd
popa
aam
les
mov
lods
pop
lret
xor
stos
mov
sub
or
push
dec
push
cltd
popa
ljmp
sbbl
dec
outsl
popa
in
push
cmpsb
pushf
inc
xchg
cmp
xchg
inc
lods
test
das
xchg
call
xchg
xchg
es
pushf
sbbb
cmp
popa
xchg
pop
test
jbe
pop
arpl
sub
loope
xor
repnz
fwait
mov
pop
sbb
cltd
inc
cmpsl
and
int
add
mov
mov
xchg
mov
enter
push
lea
mov
lret
push
lea
pop
repz
mov
inc
push
nop
xchg
pushf
and
pop
mov
test
inc
xchg
push
xchg
loopne
add
in
in
mov
inc
imul
dec
pop
inc
xor
sbb
pushf
movsb
xchg
nop
add
aas
dec
or
leave
adc
scas
nop
inc
pop
test
test
test
test
pushf
pop
add
xor
xchg
nop
nop
nop
leave
adc
push
pushf
lods
movb
enter
adcb
test
adc
push
int
push
mov
je
aam
outsl
push
stc
dec
mov
lea
sti
mov
push
icebp
dec
mov
int3
out
sbb
cmpsb
xor
outsb
pushf
cs
adc
mov
xor
xchg
or
jne
xor
xor
and
add
les
inc
cli
inc
jne
xor
inc
add
orl
addb
add
aaa
nop
icebp
adc
shr
roll
lcall
scas
insb
adc
add
js
or
jne
push
and
and
shlb
nop
dec
nop
pop
inc
sti
and
fwait
loopne
test
mov
into
pop
or
xchg
in
jl
add
hlt
dec
movb
pushf
xchg
xchg
pop
ret
cs
mov
idivl
jno
test
je
mov
xor
xor
loop
bound
ret
cmpsl
mov
sbb
pop
and
push
push
cmp
and
jle
jg
dec
popa
popa
add
sub
mov
adc
mov
shll
fucomip
stos
bound
pop
test
daa
adc
sbb
or
mov
lahf
les
jmp
lods
or
shrl
jb
shrl
pop
mov
movl
aam
xorb
test
cmpsb
sahf
mov
inc
push
gs
sub
inc
xchg
arpl
xor
lock
pop
jmp
add
xchg
fnstenv
fldenv
push
sar
xor
lahf
cwtl
lahf
or
flds
push
dec
jecxz
xchg
jle
adc
jns
sahf
fisttps
add
je
hlt
daa
clc
inc
push
cmpsb
fsts
jae
testl
cmpsb
jmp
cmp
fistpll
repz
and
cmc
scas
pop
add
and
popa
and
and
mov
inc
jg
add
dec
out
loop
imul
ja
mov
fisttps
pop
jmp
loope
nop
les
mov
and
jmp
lret
push
stc
clc
movb
mov
push
pop
daa
push
mov
and
test
imul
stos
push
and
ret
daa
xlat
test
push
push
mov
sbb
add
push
adc
loopne
xor
and
lret
xchg
sti
sub
xchg
data16
movl
sbb
iret
and
adc
loopne
xchg
sbb
lock
mov
sbb
cmp
or
add
push
in
lea
jge
pop
out
sub
fstpl
push
xor
ret
je
andl
sbb
jmp
sti
enter
inc
out
inc
cmp
mov
popf
lods
daa
lret
cltd
test
sbb
push
fcompl
cmp
popa
sub
loopne
dec
fs
gs
add
and
sahf
and
inc
repnz
inc
push
xor
mov
loopne
jae
pop
insb
das
pop
js
mov
out
inc
push
stc
dec
dec
dec
out
stos
or
mov
sti
adc
cmp
popf
xor
ljmp
jb
fadds
test
movsb
and
xchg
bswap
inc
adc
add
cmpl
jno
xor
or
popa
insl
imul
jnp
roll
int
mov
jno
push
push
add
sbb
sbbl
add
mov
or
sub
adc
pop
adc
int3
lahf
mov
inc
push
or
nop
inc
sub
out
loopne
cwtl
xor
daa
push
xchg
shlb
test
sbb
cmp
aad
fistl
mov
stos
jge
sub
adc
adc
lret
pusha
mov
add
push
imul
ret
mov
dec
push
pop
jbe
ror
xor
ret
arpl
inc
mov
add
outsb
data16
and
add
or
sbb
add
push
mov
and
test
cmp
mov
add
leave
and
andl
testb
mov
fbld
cmp
jl
mov
imul
jle
cmp
std
pop
lret
sbbl
pop
orl
and
sub
sbbb
popl
push
cmp
cs
lods
fs
ret
insb
lock
leave
push
sbb
icebp
nop
fsubrl
or
int3
int3
movsl
fistpl
dec
or
mov
adc
fcompp
push
cmp
xor
imul
pop
add
pusha
ret
call
add
pop
xchg
fs
stos
cmp
inc
or
xchg
mov
dec
ja
push
pop
rclb
jg
and
or
ret
faddp
je
mov
fs
fstps
adc
mov
and
xor
jmp
pushl
pop
subb
or
push
add
jmp
xchg
lock
dec
cmp
je
movsl
sti
adc
jmp
xchg
push
sub
push
push
ljmp
mov
push
xchg
pop
xchg
pusha
iret
xchg
xor
cmp
les
push
in
rolb
fwait
add
je
out
pop
fwait
sub
mov
aam
inc
pusha
jne,pn
ja
mov
sbb
inc
mov
popa
sub
adc
and
push
jbe
sbb
adc
or
fcomi
cmp
decl
pop
sbb
push
push
dec
jmp
fsubl
dec
push
mov
and
xchg
add
add
sub
sbb
push
adc
sub
add
xchg
pop
inc
loope
sub
lret
jmp
fbld
pop
xor
addr16
es
xor
push
mov
push
je
out
add
add
ret
dec
sub
and
orb
scas
es
iret
sahf
xchg
test
adc
fldpi
or
add
in
mov
adc
mov
mov
outsb
xor
lret
loop
dec
cld
add
xor
test
xor
jbe
sbb
and
or
adcb
out
mov
lds
icebp
insb
inc
into
cmpsb
out
mov
mov
cmp
je
out
and
sti
jns
adc
xchg
pop
addr16
sbb
inc
outsb
or
cld
and
dec
cmp
adc
xor
scas
ret
cmpl
pop
or
sbb
sbb
mov
stos
pop
pop
andb
bound
and
ja
push
adc
and
and
cmp
ss
or
adc
mov
orl
lahf
adc
add
mov
sbb
and
jne
jmp
add
cwtl
ret
adc
ja
jecxz
mov
rcll
rol
inc
xchg
pop
movsl
insl
pop
subl
mov
cmp
xchg
test
jbe
push
pop
add
icebp
mov
jge
push
sub
xor
outsb
incb
fnstenv
inc
popa
or
pusha
cld
cmpb
pop
je
mov
adc
adc
add
cmp
mov
mov
in
daa
dec
insb
arpl
dec
repz
mov
lret
dec
add
jae
stc
pop
xchg
push
cmpsb
dec
push
out
mov
push
push
add
subl
in
fdivs
or
xchg
and
cmp
push
shrb
sub
or
mov
push
in
sbb
adc
addl
xchg
mov
dec
pop
lret
sbb
lret
and
std
inc
cmpsb
or
xchg
add
lret
out
cmp
test
lcall
dec
jmp
xor
xor
adc
add
lods
enter
pop
je
pop
add
int
or
adc
or
adc
or
and
jmp
bound
add
sbb
subps
xchg
xchg
inc
or
ss
add
je
repnz
loop
and
or
rolb
out
mov
inc
add
xor
inc
je
int
pop
test
arpl
or
add
fisubrs
insl
pop
cwtl
lret
inc
cmp
in
cmp
imul
fiadds
insb
and
mov
jmp
incb
or
test
movsb
test
fmuls
sbb
rcpps
sbb
jmp
repnz
sbb
mov
testb
pop
rolb
push
push
adc
lods
sbb
push
push
orl
hlt
sbb
clc
or
movsb
mov
jo
push
ds
jle
pop
rol
or
adc
mov
inc
mov
inc
add
and
in
dec
cltd
xorl
dec
mov
int
cmp
dec
inc
inc
or
jne
divb
push
add
push
sar
inc
or
pop
fiaddl
cmp
xor
je
mov
jo
pop
xor
and
sbb
xchg
adc
arpl
xlat
mov
scas
jno
gs
xchg
ret
jmp
add
addb
add
lods
jb
xchg
cmp
pop
sti
or
cltd
leave
nop
cs
int
dec
sbb
push
cwtl
fs
cld
fwait
add
dec
sbb
xor
int
push
mov
rclb
push
push
pop
push
dec
push
add
lock
or
or
add
rep
xchg
rorb
or
or
push
and
or
cmp
inc
mov
outsl
add
jge
mov
or
pop
mov
adc
inc
inc
cmp
mov
inc
test
cmp
mov
lea
pop
sub
jb
aaa
clc
sub
addl
les
andb
jp
mov
add
adc
mov
jbe
cwtl
sar
sarb
jg
popf
test
rorb
insl
iret
daa
add
xor
sub
or
dec
fdivrs
mov
cmp
ljmp
clc
add
out
add
and
push
mov
and
sti
mov
lcall
in
inc
adcl
xchg
fs
adc
xor
shrl
cmpsb
hlt
push
cmpb
xchg
subl
push
ret
movsl
xchg
fs
mov
fnsave
inc
cmp
aas
push
repz
xor
ds
mov
jne
aaa
popa
push
inc
ss
sbb
mov
movl
add
add
mov
jmp
scas
push
notb
test
xchg
aad
mov
and
pop
mov
inc
divl
xor
adc
test
mov
mov
push
xlat
cs
add
xor
xchg
daa
insl
push
lahf
lock
rcrb
rorl
dec
mov
fildll
inc
lcall
repz
jbe
pop
push
loopne
or
xor
not
push
rcll
cld
push
add
add
enter
les
sbb
adc
jb
rcrl
add
ret
sub
sbb
pop
jge
add
aam
push
jmp
shr
rcl
jg
dec
movsl
sti
and
adc
and
inc
push
dec
push
push
sub
lea
dec
cmpsb
xchg
call
lods
adc
cltd
jo
add
cli
sub
add
push
cmp
roll
jle
in
lret
sub
shrl
adc
sub
xorl
sarb
test
cmpsb
jge
hlt
rep
ss
neg
cmpsb
imul
or
lock
push
scas
int
mov
or
pop
sub
sbb
test
std
enter
and
movsl
dec
pop
pop
adc
rcrl
xchg
add
adc
lods
fidivs
dec
data16
popa
push
mov
in
and
test
ret
cmp
cltd
loopne
push
dec
test
pop
incl
cmc
add
jmp
cld
dec
dec
testb
add
outsb
ljmp
push
mov
mov
lods
xor
mov
fsubrp
das
outsb
movl
vmwrite
pop
jo
addps
in
js
sbb
adc
push
stc
adc
push
test
sarb
or
mov
in
or
hlt
mov
pop
push
fnclex
xchg
xor
pop
mov
pop
or
fbstp
outsl
push
push
dec
adc
push
and
xchg
cmp
pop
xor
push
pop
jecxz
stc
jle
inc
or
jbe
jle
xor
dec
in
outsl
ja
mov
mov
mov
scas
add
pushf
sbbb
adcl
xchg
lret
addr16
les
and
xchg
dec
test
fwait
cmp
into
and
call
loop
sub
std
mov
dec
sub
daa
test
or
shrl
shll
add
sub
lock
in
popf
xchg
mov
add
jne
inc
fisttpl
in
in
in
pop
lds
mov
and
or
cmp
xchg
push
push
ret
xchg
jmp
jb
xor
pop
idivl
cmp
enter
test
mov
hlt
push
ss
add
pop
outsb
cli
addb
push
sub
push
divb
pop
jno
xchg
and
jmp
clc
lock
lahf
cltd
dec
ret
xlat
pop
and
jb
xchg
and
sub
rcl
inc
pusha
push
add
in
pop
aaa
dec
loopne
pop
dec
rolb
iret
in
out
jae
addb
or
xchg
mov
xor
jns
sarb
mov
lret
or
xor
nop
sub
iret
add
insl
lock
mov
jp
call
cmp
and
mov
adc
push
push
fidivrl
push
push
xorb
es
pop
mov
sub
pushf
outsb
sbb
aas
add
insb
jae
dec
jmp
or
sbb
push
or
push
mov
lret
dec
or
sarb
sbb
fxch
fnstcw
add
sub
sub
adc
fcmovb
push
movsb
push
and
push
sbb
leave
jae
test
nop
int3
sub
nop
and
shlb
call
or
data16
mov
jmp
adc
outsl
jo
mov
addb
adc
push
sub
inc
add
or
mov
shll
pop
push
fdivrl
dec
dec
dec
mov
test
mov
mov
jmp
xor
xor
ds
lods
loop
jecxz
xor
xchg
lock
push
shlb
pop
imul
sbb
cmp
inc
mov
popf
mov
cmp
inc
jmp
in
jbe
xchg
hlt
pop
sub
jne
imul
add
mov
fnsave
shrb
aas
sbb
xchg
sbb
les
rcr
fsub
mov
andl
mov
insl
and
adc
mov
cwtl
dec
jnp
mov
xor
xor
mov
push
mov
idivb
xor
loopne
outsb
outsl
ja
cld
and
add
xlat
ja
mov
mov
lcall
add
sbb
or
sub
inc
pop
adc
mov
mov
nop
mov
push
nop
movb
fistpll
or
movl
inc
pop
or
sub
add
xchg
arpl
push
inc
or
sub
cmpl
cmc
inc
dec
push
mov
shll
add
pop
or
dec
or
or
test
sub
fimull
fcmovnb
mov
mov
jnp
cmp
addl
nop
fs
mov
jle
sbb
imul
or
mov
jg
push
add
sub
insb
jae
call
jbe
or
jne
sub
pusha
jle
cmp
push
and
mov
add
mov
fs
push
mov
mov
inc
push
pushl
andl
xchg
pop
rcrb
clc
dec
mov
hlt
or
jns
mov
jmp
sahf
xchg
push
in
mov
or
ret
dec
cmp
loopne
stc
dec
imulb
lods
adc
and
and
inc
cmp
xor
or
lods
xor
jmp
dec
dec
sub
sub
and
cld
rol
orb
inc
push
sub
lods
mov
inc
or
xchg
ret
lret
inc
cmp
es
add
dec
add
hlt
push
cld
mov
movsb
push
adc
or
add
add
or
or
jg
aas
in
or
jmp
adc
jbe
sub
add
sbb
dec
mov
xor
and
or
sub
xor
push
nop
jle
jno
add
nop
sbb
pop
pop
jg
add
and
mov
aas
xor
push
pop
jl
mov
leave
aaa
dec
cs
call
fstl
xchg
mov
call
pop
pop
pusha
daa
test
xor
ret
arpl
les
jle
test
cmp
test
jp
dec
fsubrs
xchg
mov
mov
aaa
mov
loope
fdivs
and
push
jnp
scas
push
clc
call
mov
out
repnz
or
loop
outsl
mov
jo
mov
out
fdivl
ficomps
cmpl
lods
cli
pop
adc
ss
cmp
jae
mov
cmp
mov
mov
or
adc
adc
add
add
mov
or
addr16
and
gs
sbb
cs
pop
mov
shll
cmpl
inc
das
and
cmp
inc
push
pop
cmp
mov
movsb
push
pop
frstor
lods
jbe
int3
xchg
mov
sub
mov
aaa
cmp
jo
mov
mov
xchg
cmp
dec
adc
or
rol
andb
pop
xchg
push
jle
js
fmuls
pop
rclb
sbb
xor
aam
faddl
mov
repnz
dec
movsb
scas
and
or
sbb
hlt
adc
mov
and
push
fisubs
test
je
mov
cltd
aam
push
pop
mov
outsl
inc
cmpl
mov
sub
push
jmp
mov
push
sbb
je
xchg
je
cs
xchg
sbb
jmp
or
mov
outsl
sub
cmovns
mov
testb
test
add
dec
pop
jo
add
xlat
inc
pusha
cltd
mov
popa
repnz
and
sbb
and
or
adc
inc
pushf
cmp
or
add
inc
rorb
push
add
testb
jmp
xor
inc
xor
mov
xor
mov
mov
mov
fsubrl
and
or
sub
jne
push
lods
loop
rcr
and
mov
sbb
or
arpl
mov
insl
sub
xchg
jns
shrl
test
test
push
les
fbld
aas
sbb
dec
pop
je
pop
cmc
and
shlb
sub
jo
or
in
mov
ss
bound
xchg
cmp
fistpll
cmp
jae
push
cmp
mov
sub
jl
mov
inc
cmp
and
loopne
adc
push
lret
xchg
or
ja
outsl
and
testb
jne
clc
push
mov
push
push
outsl
or
mov
roll
lods
mov
jb
push
pop
pusha
andl
ror
inc
add
sbb
fs
or
pop
xchg
pop
in
dec
dec
dec
dec
test
sbb
inc
enter
pop
mov
mov
mov
pop
std
mov
jmp
push
into
adc
or
pushf
test
cmc
lods
add
mov
call
mov
or
or
xlat
jns
jne
mov
and
in
shll
arpl
push
xchg
sbb
lods
inc
mov
xor
in
xor
cmp
ret
je
test
add
pushl
dec
push
sub
inc
xorb
subl
mov
inc
mov
xchg
add
repnz
mov
cmp
and
push
inc
add
clc
jbe
icebp
leave
mov
pop
add
push
lock
xchg
cmpsb
and
sbbb
jo
jl
pusha
loope
div
outsb
jae
in
push
mov
aam
push
inc
sub
dec
adc
in
pusha
jbe
add
push
ret
jmp
sbb
decl
fldt
dec
jg
adc
orl
call
lret
pop
hlt
jecxz
and
lret
sbb
or
add
cmp
and
or
sub
fxrstor
pop
and
sbbb
lds
inc
icebp
ja
pop
test
push
adc
or
cmp
cmp
xchg
notl
repnz
push
push
imul
lock
pop
xchg
enter
inc
cmc
sub
xor
sub
mov
push
ljmp
and
add
inc
dec
and
imul
mov
into
dec
and
jg
call
je
cmp
adc
jecxz
xor
cmp
jb
testb
scas
sub
add
push
push
je
jge
gs
movsb
mov
movb
and
adc
xor
cmp
jbe
mov
push
test
sbb
js
adc
push
pop
push
xchg
cmp
call
mov
sarb
add
mov
push
push
adc
mov
inc
cmp
bound
insl
jbe
mov
outsb
sbb
mov
pop
es
jmp
lea
adcl
cld
cmp
push
popa
call
enter
mov
xchg
adc
sub
or
scas
mull
int3
jnp
or
lsl
jmp
push
pop
push
push
iret
push
std
out
inc
shr
rcr
shr
rcr
or
div
pop
dec
adc
out
mov
inc
inc
mul
pop
jb
cmp
or
cmp
add
sub
sbb
adc
test
xor
neg
lret
lret
adc
call
mov
fcmovb
adc
mov
jecxz
sub
add
dec
std
inc
rolb
push
mov
mov
pop
and
js
je
add
fcoms
stos
inc
xchg
dec
inc
test
int
jmp
pop
dec
sbb
dec
insb
sbb
shl
mov
inc
shlb
push
jle
jne
lea
adc
push
mov
adc
test
stc
scas
jecxz
outsl
xor
cmp
sub
test
pusha
loop
inc
ret
fstps
pop
mov
incb
jns
adc
adc
sub
jbe
mov
push
jo
add
adc
adc
push
mov
dec
adc
fs
movsb
mov
jl
leave
add
push
fistps
test
sbb
subb
mov
mov
push
jl
push
xorl
test
push
mov
push
push
mov
xchg
inc
cmpsl
and
mov
mov
jecxz
xor
clc
mov
negb
je
xchg
cli
adc
add
outsb
jg
lea
lea
or
fists
mov
insb
inc
xchg
mov
mov
insb
dec
dec
mov
xor
push
dec
lods
test
xor
dec
enter
inc
mov
sbb
adc
or
shl
icebp
loopne
mov
sti
adc
dec
and
pusha
add
mov
push
sahf
push
popf
test
loop
mov
clc
sbb
dec
jg
loopne
rcrl
ljmp
push
inc
cmp
xor
js
add
out
adc
sti
cmpsb
jge
jne
lret
xor
imul
xchg
addb
push
outsb
adc
add
pusha
inc
arpl
outsl
xchg
mov
pop
adc
xchg
xchg
or
adc
dec
dec
outsb
mov
sbb
sub
dec
dec
dec
xor
cmp
xchg
adc
cmp
inc
and
pushf
pushf
fmull
cmovs
pop
pushf
pushf
push
pop
add
daa
daa
fs
daa
daa
je
jl
testb
sbb
dec
es
mov
xchg
cwtl
pushf
mov
movsb
test
sub
lcall
into
adc
hlt
cmp
or
sub
insl
xchg
pop
xor
and
mov
adc
movsb
cltd
nop
in
adc
sbb
sbb
clc
insb
movsb
cltd
and
and
std
insb
decl
inc
insb
pop
xor
insb
dec
mov
push
jo
push
inc
dec
test
push
leave
enter
ret
cmp
add
add
outsb
adc
out
nop
jb
mov
or
sub
mov
insb
loopne
mov
push
add
cli
outsl
loope
and
in
adc
cmp
imul
push
mov
cmpsl
adc
mov
add
fcoml
inc
add
int3
xor
lea
fcmovnbe
sbb
pop
xchg
cmp
xor
xor
mov
js
add
in
wbinvd
or
and
add
inc
pusha
fwait
inc
jecxz
push
fdivs
pop
inc
push
pop
cmp
insl
push
lea
je
jo
imul
adcb
ret
fadd
into
or
and
cli
cmp
fmuls
add
push
jle
insl
push
fcoms
pusha
popf
in
pop
int3
adc
scas
fcomp
sbb
cwtl
add
xchg
and
fcompl
sbb
adc
add
je
push
gs
or
jmp
sub
and
loopne
test
xchg
add
dec
jge
scas
inc
data16
addb
pop
adc
in
mov
adc
adc
cmp
adc
jb
dec
add
int3
and
cmp
push
iret
sub
jne
sbb
outsl
adcb
push
pop
or
mov
fisubrl
and
lock
lret
das
inc
ret
out
jl
adc
adc
fnstenv
xor
cmpsb
dec
mov
out
lret
jmp
ficoms
or
iret
xor
ss
cmp
mov
xor
and
rclb
int
inc
jmp
inc
push
into
pushl
loopne
mov
xor
cmc
imul
insl
xchg
adc
jmp
cmp
or
pushl
push
mov
rol
lods
push
das
jmp
mov
sub
jl
sbb
fwait
push
add
ljmp
and
addl
pop
fcomps
cmpsb
jno
imulb
inc
sbb
xchg
push
xor
sbb
cwtl
iret
scas
push
mov
in
es
jmp
fwait
mov
dec
lcall
out
mov
sbb
clc
mov
inc
test
xchg
sbb
and
pop
dec
call
in
mov
je
cmp
xor
ss
fcomps
mulb
xor
mov
std
push
lea
push
and
out
sar
sub
pop
and
fcmovnbe
sti
mov
or
or
loop
sti
add
push
divl
mov
iret
or
push
and
adcl
popa
rclb
fsts
out
js
popf
add
pop
inc
sbb
jmp
les
dec
ljmp
adc
outsl
inc
pushl
mov
jns
mov
sub
mov
shl
ret
lock
sahf
cmp
cmp
push
adc
pop
mov
cmp
mov
loop
lcall
jbe
jmp
cmp
in
lods
mov
icebp
mov
mov
mov
mov
lock
jmp
mov
and
cmp
ja
sub
add
cmp
fsubs
mov
lret
xor
push
cmp
cmp
adc
sbb
call
lea
push
rcrb
inc
cs
je
mov
jnp
xor
jge
mov
cmp
pop
fsubrs
mov
inc
add
sub
sub
sarl
cmp
cmpb
mov
jnp
cmpl
jnp
jbe
push
test
rolb
jno
subb
add
jmp
sub
popa
cmp
cmp
sbb
cmp
pop
adc
aam
and
dec
popa
mov
push
inc
mov
daa
inc
insl
sub
sbb
dec
adc
icebp
or
test
scas
out
and
xchg
pusha
jns
sbb
xchg
inc
cli
fisttps
cmp
xlat
pushf
sti
lods
ret
adc
push
sysenter
sbb
xadd
inc
dec
add
lea
nop
adc
lret
iret
sbb
jmp
xchg
ljmp
movsl
aad
sub
mov
push
cmp
mov
xlat
pushl
adc
cli
or
inc
mov
outsl
cmpsl
mov
adc
cmpl
fmuls
push
icebp
xchg
push
push
and
inc
add
je
pop
inc
add
int3
cmp
jmp
push
lret
jp
dec
jmp
rcrb
in
pop
push
in
movsl
dec
add
cmp
addb
pop
push
cwtl
sub
adc
lods
push
orl
out
push
or
loopne
cmp
xchg
cmpsl
shlb
pushf
xchg
push
and
pop
add
or
mov
out
jl
xchg
dec
dec
stc
jnp
imul
add
mov
into
xchg
push
xchg
sub
and
xor
addb
test
mov
hlt
push
jbe
pop
lock
scas
insb
cs
inc
scas
mov
std
pusha
and
lret
jge
xchg
sub
test
jae
je
add
jmp
or
and
mov
or
inc
test
xorb
xchg
sub
setns
inc
ja
xor
xor
fdivrs
jne
ljmp
xchg
cmp
ss
jne
divl
fidivrs
in
clc
test
xor
inc
inc
cli
inc
cmpb
mov
and
sbb
pop
or
or
sar
pop
cltd
xor
and
sbb
clc
orl
xchg
or
mov
aaa
push
xor
jne
sbb
add
sub
jo
jo
and
ljmp
add
cmp
push
add
orl
in
mov
into
sbb
pop
loopne
inc
mov
adc
aaa
adc
and
unpckhps
push
psrad
repz
push
lahf
or
jecxz
ljmp
mov
add
inc
jmp
and
mov
adc
sub
ljmp
mov
xchg
mov
fsubr
fldenv
dec
push
and
mov
les
adc
cmp
addr16
scas
bound
mov
shll
stc
mov
out
jl
push
pop
inc
xor
ret
push
sbb
flds
xchg
sahf
in
fstp
add
nop
std
into
inc
call
aam
pop
cmpb
out
xor
xor
cmp
cmp
pop
and
sbb
sub
sub
cmp
movsb
add
dec
or
fmull
push
pop
mov
cmp
push
jl
pop
mov
xorl
arpl
sbb
pop
cmp
lods
jg
fiadds
pop
mov
xchg
pusha
outsl
jl
pop
xor
mov
adc
jge
les
pop
xchg
lods
inc
pop
std
or
mov
push
pusha
mov
fisubrs
jne
or
mov
and
mov
lea
lods
pop
int3
pop
pop
lods
nop
mov
and
cmp
call
lea
mov
pop
xor
add
dec
imul
hlt
add
xor
sbb
mov
scas
dec
cmp
xor
insb
ljmp
mov
push
push
and
sbb
mov
je
inc
cmp
shlb
pop
mov
test
add
js
pop
sbb
push
mov
dec
push
popa
add
int3
xchg
movsl
inc
scas
enter
inc
add
sub
cmp
aaa
adc
add
sbb
mov
inc
jo
pop
call
lret
mov
sarb
cmpsb
dec
int
inc
jmp
icebp
xor
jecxz
cmp
xor
mov
loop
jle
adc
test
mov
ret
mov
jge
push
or
rcrb
gs
cmp
inc
lds
fcoms
push
and
frstor
and
jnp
push
mov
adc
cmpsb
xchg
cwtl
mov
fildl
jmp
sub
shll
out
mov
add
test
cmp
jbe
fcmove
inc
mov
jno
nop
pop
and
or
loope
cltd
jmp
je
and
das
mov
xchg
lret
test
dec
xor
mov
mov
das
push
nop
or
dec
ja
inc
dec
cmp
add
js
pop
sbb
pop
push
sbb
adc
cmp
jecxz
inc
arpl
sbb
xchg
sbb
fadds
dec
push
notb
mov
cmp
jbe
mov
or
and
and
int3
ds
mov
rcr
sar
aas
repnz
das
dec
rcrb
ret
adc
inc
add
fdivl
jl
call
jle
sub
mov
data16
or
lods
lret
mov
sbbb
gs
inc
push
in
mov
inc
and
pusha
or
aam
xchg
jo
cmp
data16
add
imul
inc
add
push
sbb
int3
or
lret
adc
adc
test
inc
jne
and
mov
push
dec
or
ror
call
push
mov
in
dec
lret
std
jmp
fwait
jmp
sub
pop
movsb
sbb
inc
sub
push
imul
push
push
jg
jne
hlt
mov
xor
call
pushf
pop
sub
je
push
popf
ds
cmp
or
aad
push
mov
and
data16
pop
idiv
add
push
movsb
lret
mov
jle
pop
adc
sbb
imul
lret
adc
or
or
test
push
or
and
mov
pusha
mov
push
mov
xchg
fsubs
and
add
iret
and
adc
in
shl
not
xor
outsb
aas
mov
or
mov
jmp
and
es
aaa
loop
rol
sahf
lock
test
inc
push
in
adc
test
lcall
xor
adcb
lret
mov
mov
sbb
or
sub
outsl
mov
incb
jmp
sbb
lock
and
movsb
pop
mov
jl
and
fcmovne
int3
mov
pushf
jge
add
or
jmp
sub
or
aad
clc
orl
and
jge
mov
insl
adc
es
and
push
out
sti
and
pop
adc
pusha
mov
pusha
loope
pop
sub
add
and
rclb
fstp
ds
test
insl
rcrl
push
rcrb
push
addr16
or
sub
or
push
sahf
lret
es
adc
sti
add
cmp
test
fisttps
jo
mov
push
clc
popf
add
or
sub
je
jmp
push
mov
mov
adc
testl
xlat
pop
in
lcall
sbb
jmp
push
and
inc
add
fwait
cmp
xor
fiadds
inc
push
flds
fisttpll
add
adc
loope
js
adcl
cmpsb
jle
mov
ret
inc
push
cmp
incb
es
or
shrb
fsubp
sub
inc
push
add
jb
ret
xor
lret
pop
out
test
or
loope
rcl
pop
xchg
push
mov
sbb
out
rcr
sbb
mov
rcr
loopne
add
les
pop
jbe
lea
pop
sub
jmp
sub
dec
jae
daa
push
or
psubusw
roll
div
xor
repz
push
icebp
adc
dec
jnp
lahf
clc
sbb
mov
je
pop
in
mov
fmull
jge
ffree
repz
insb
push
mov
inc
xchg
aad
or
pop
addb
add
cld
lods
push
jp
adc
test
iret
and
insl
in
sbb
mov
orl
jo
test
jp
test
scas
loop
sahf
jmp
pop
movsb
push
ret
push
fsubr
aam
andl
or
or
adc
and
cmp
sub
arpl
cmp
rolb
jg
xchg
push
add
sbb
pop
test
or
add
lcall
add
fsubl
push
pop
movzbl
add
ljmp
lds
rorb
out
xchg
or
sub
xchg
adc
scas
sbb
add
adc
or
int3
subb
mov
push
mov
pop
test
das
add
add
dec
pop
idivb
cwtl
push
add
lods
fsubrp
fwait
jno
mov
dec
inc
and
add
cmp
xchg
loope
cmp
or
fidivs
lahf
or
adc
or
mov
out
div
xor
ss
pop
add
mov
push
push
cmp
in
mov
sbb
add
xor
enter
and
or
in
and
sub
mov
ljmp
add
inc
xor
out
mov
mov
jnp
inc
lock
inc
adc
pop
mov
sarb
data16
pop
std
mov
or
fimull
xchg
cmc
int3
pop
cld
pop
test
data16
cmc
sbb
into
jbe
loopne
rolb
rcrl
nop
cmp
lock
xchg
xchg
jne
jb
gs
and
xchg
cmp
mov
mov
mov
out
mov
sbb
in
imul
push
clc
jecxz
fadds
into
mov
mov
addl
ss
shrb
push
lcall
jnp
imul
pop
or
xchg
rorl
mov
xor
jle
ret
or
or
stos
inc
add
or
push
ljmp
out
in
and
pop
imul
push
adc
inc
sbb
xor
push
in
sbb
pop
add
sbb
xor
pushf
jbe
sub
ljmp
cmp
sub
dec
aad
mov
clc
push
fldl
das
or
sbb
loop
inc
fldenv
inc
lret
and
popa
xor
bound
mov
push
in
fldcw
push
push
mov
or
lock
sub
fwait
sahf
jbe
cltd
loopne
fwait
int3
and
sbb
inc
insb
xchg
adc
and
jle
adc
fdivp
jb
mov
xor
mov
pop
inc
mov
inc
je
sbb
add
ldmxcsr
mov
repnz
and
enter
pop
test
and
hlt
cmpsb
push
inc
shl
cmp
jbe
mov
mov
out
add
pop
add
jo
lods
testl
je
and
shll
mov
sbb
je
or
mov
inc
mov
pop
push
ret
insl
push
mov
or
data16
adcl
ja
mov
stc
int3
mov
inc
and
ljmp
je
adc
or
insl
loopne
sbb
test
pop
inc
jb
js
mov
sarb
popf
inc
inc
psubq
xchg
xor
shrl
sbb
inc
sbb
in
inc
fucomip
sbb
or
or
adc
and
testb
add
add
pop
xor
inc
add
jle
dec
decl
cmpw
inc
inc
and
int
test
adc
dec
adc
lods
or
loope
and
aaa
cmc
es
or
loopne
xchg
sub
cwtl
mov
mov
test
push
or
xchg
adc
add
add
shrb
daa
adc
sarb
push
mov
add
pop
loope
sbb
cwtl
pop
test
jne
push
add
sub
mov
stos
repnz
pop
pop
sti
add
sbb
jle
aam
add
jle
add
cli
sbb
mov
cltd
and
add
dec
pop
push
inc
mov
add
add
pop
lock
inc
shl
jb
fsubs
test
jmp
aam
loop
rolb
adcl
pop
outsb
mov
dec
cltd
insb
pop
cmpl
and
into
loopne
push
dec
imul
lea
xor
or
xor
cmp
sbb
jmp
cmp
enter
incb
insb
scas
adc
mov
or
or
pop
test
mov
in
xor
push
call
add
in
push
cmp
dec
dec
outsb
adc
loope
inc
lock
mov
roll
xor
enter
cmp
mov
aas
gs
test
xor
or
sbb
jp
ds
lcall
and
push
cld
not
rcrb
push
call
into
and
push
ds
push
and
fadd
or
and
lock
adc
and
xor
and
pop
popa
addb
add
fsubrl
cmp
jl
mov
fs
push
lods
adc
aam
bnd
popa
sub
mov
inc
loopne
xor
dec
scas
sub
or
lcall
lea
mov
cli
seto
mov
mov
data16
or
mov
lcall
fwait
js
rolb
xor
iret
dec
jns
inc
lock
ret
sbbb
adc
loope
cmp
les
idivl
sbb
loopne
cmp
imul
inc
xor
icebp
cltd
pusha
or
mov
jl
pop
andl
stos
stos
mov
into
out
loop
rcrb
iret
and
mov
xchg
in
sub
add
pop
mov
es
scas
rcrl
outsb
lahf
addb
add
xor
mov
jmp
or
loop
stc
and
adc
sbb
xchg
pmulhuw
cmp
cmp
add
xchg
stos
sub
add
repnz
add
or
sub
cmp
and
mov
mov
push
xchg
jmp
add
mov
lds
inc
mov
nop
int
add
mov
sub
mov
lcall
pushf
mov
fmuls
xchg
sbb
aam
call
enter
aaa
mov
mov
or
ljmp
or
loop
jne
inc
jmp
mov
sub
stos
adc
ja
out
ret
pop
mov
sub
cmp
ja
push
dec
jmp
mov
add
fs
mov
push
cmp
into
add
sbb
call
sbb
mov
into
jmp
or
subb
cli
sbb
mov
jmp
cmpsl
movsl
sarb
jbe
mov
adc
imul
inc
jle
mov
cmp
push
xor
rol
mov
roll
orl
nop
clc
cmp
jbe
mov
clc
or
fldcw
pushf
push
cmp
fs
or
sub
push
jmp
dec
jno
lea
mov
jae
mov
ret
popa
add
inc
mov
out
fistl
pop
jge
pop
cmp
jno
xlat
cmp
add
bnd
js
jae
imul
sbb
in
cmp
jmp
and
sbb
fisubrl
call
or
lea
push
out
out
testl
and
cmp
sbbl
orl
and
mov
scas
mov
dec
or
sub
cmp
mov
mov
jmp
je
inc
scas
sub
fisubs
mov
sbb
mov
call
in
dec
mov
js
adc
add
inc
imull
mov
dec
mov
jmp
ficomps
jmp
dec
sbb
orb
mov
sbb
imul
mov
push
in
cmp
jbe
inc
or
jecxz
add
pushf
jmp
push
cwtl
or
xor
cmp
stc
fists
into
dec
ficompl
es
mov
mov
dec
rcl
xor
shrb
jg
rclb
jge
neg
add
mov
orb
movsb
sub
cmp
icebp
inc
and
cmp
adc
nop
cmpsl
jne
push
sbb
cmp
push
mov
jge
jle
lock
xor
iret
xor
jne
fwait
adc
inc
add
dec
test
lods
sarl
push
add
sbbl
inc
and
cmpl
jb
mov
dec
mov
pop
cmpb
cmp
add
mov
jmp
fmulp
mov
mov
mov
ret
xorl
into
nop
fs
out
cmpsl
faddl
in
fisttpll
mov
ja
xlat
xchg
ja
mov
pop
push
mov
movb
testl
xchg
xchg
jne
outsb
fldl
inc
into
jne
inc
or
int
mov
cmp
jne
hlt
int3
or
data16
jne
mov
inc
or
test
rcrl
or
add
sbb
add
outsb
push
lea
mov
lods
push
scas
sbb
pop
adc
dec
cld
adc
dec
push
clc
je
lock
ja
dec
insl
xor
add
sahf
cmpsb
cltd
jbe
sub
sub
rcrb
push
stc
jg
add
mov
jge
test
js
mov
add
inc
shll
bound
add
pop
lods
add
or
shr
push
shll
gs
in
mov
sub
mov
jg
or
adc
inc
mov
les
add
notb
je
hlt
lods
mov
imul
pop
sbb
insl
fadd
loopne
shr
or
mov
sahf
xor
arpl
jne
insb
mov
xor
or
mov
lcall
and
sbb
sub
fwait
and
add
pop
add
cmpsb
imul
sti
pop
mov
fiadds
push
scas
cs
or
or
sbb
mov
icebp
lds
mov
and
fmull
sahf
nop
dec
ja
inc
ret
stos
out
orb
cmp
inc
out
test
or
sub
sbbl
ss
cltd
jb
movsb
mov
add
int3
push
xor
addl
push
lret
bound
xchg
add
imulb
dec
loopne
sbb
add
pop
enter
insl
and
rclb
or
call
or
mov
mov
mov
repz
add
cli
aas
or
out
sahf
ja
out
push
or
lods
aam
hlt
push
lods
mov
or
push
enter
iret
das
hlt
jmp
inc
insl
sbb
test
pop
jne
cmp
add
jge
add
scas
inc
mov
mov
adc
add
mov
jo
andl
cmp
pop
push
in
popa
and
sbb
dec
pop
mov
pop
adc
mov
cmp
insb
inc
cs
or
or
ss
cmp
je
or
loopne
popa
xor
mov
dec
cmpb
je
mov
cmp
push
sbb
add
or
mov
out
jp
fbld
fcompl
gs
pusha
mov
pop
cmc
orb
sbb
mov
out
clc
adc
into
cmp
mov
xor
rorb
mov
pop
sti
repz
scas
dec
pop
dec
mov
testl
adc
je
ja
shll
and
rcrb
add
test
sub
xchg
adc
jmp
aam
test
add
xor
mov
mov
out
adc
or
mov
push
pop
loopew
dec
je
setg
sub
clc
clc
add
mov
mov
inc
xor
aam
aas
sub
movb
push
push
sub
inc
jle
add
push
ficoml
sub
das
xor
mov
es
sbb
jp
sahf
pop
add
add
call
lret
jmp
sub
add
jecxz
lods
add
pop
or
int
xor
jg
dec
add
inc
mov
inc
out
adc
jns
les
les
repnz
xor
push
or
add
testb
pop
add
ret
xor
lea
lock
mov
dec
in
lods
test
dec
or
cld
dec
add
push
jge
push
loopne
mov
test
pop
mov
sub
add
lock
outsl
jo
call
loope
clc
in
lock
mov
aam
sub
add
adc
adc
jmp
out
outsb
dec
mov
add
shlb
pop
adc
cmp
push
cs
lret
rol
nop
inc
add
inc
aam
jb
inc
sbb
stc
subb
add
in
es
mov
sbb
stos
push
adc
into
adc
jno
mov
jmp
js
fldl2t
call
pop
dec
jb
call
pop
rorb
add
adc
pop
push
lret
push
add
adc
inc
sbb
enter
mov
clc
test
xor
outsb
fwait
or
mov
testl
addr16
pushf
jnp
add
enter
xor
xor
ret
or
adc
ret
and
pop
push
xor
push
mov
mov
add
lea
dec
lea
incl
inc
xor
leave
and
add
cmp
scas
jo
movb
out
jo
jmp
je
mov
dec
fwait
ds
neg
sbb
jecxz
mov
jg
ret
daa
xor
sbb
shll
cmp
sahf
ja
and
mov
or
mov
scas
test
js
inc
test
aam
add
xchg
fsubs
or
or
adc
sbb
mov
ja
sub
lret
cmpsb
push
sub
adc
or
test
lret
cmp
push
movswl
les
xor
pop
sbb
xor
loopne
mov
mov
ret
mov
insl
cld
add
dec
shrd
push
jle
daa
xor
cmp
ss
xor
sbb
clc
mov
lea
cmp
nop
stc
inc
es
hlt
pop
add
dec
jmp
xchg
clc
adc
mov
xor
or
or
sub
push
mov
add
shrb
mov
push
add
pop
cmp
popa
fsub
shr
lock
and
insl
in
rorl
pop
and
or
pop
mov
sarl
jg
jb
push
sub
or
cld
mov
shl
fidivrl
rorl
ret
adc
loop
adc
nop
sbb
test
inc
ret
jbe
add
scas
sub
mov
test
jg
lods
pop
cmp
jb
fs
dec
leave
jae
fiaddl
pop
or
or
pushf
or
lcall
sbb
push
or
adc
jae
adc
push
cmpsb
stc
mov
pop
add
sub
cmp
scas
xchg
push
je
int
hlt
fsubrs
mov
loop
jo
inc
loopne
jb
mov
and
sub
xchg
inc
add
mov
adc
enter
jmp
lock
insb
sub
mov
cltd
inc
pusha
sarb
mov
shlb
mov
fwait
jns
popaw
push
mov
add
mov
xor
or
ret
add
mov
and
adc
add
add
orb
mov
je
push
mov
repz
cmp
or
push
jbe
adc
inc
inc
push
cmp
inc
fisubl
mov
jb
push
insl
push
jmp
insl
cmp
int3
xchg
pusha
mov
shlb
mov
subl
inc
pop
mov
or
sbb
inc
shr
loop
mov
mov
sbb
jns
pop
dec
je
jge,pt
clc
xchg
int
gs
or
pop
data16
loope
bnd
in
add
je
bound
fwait
push
inc
je
dec
pop
lods
jmp
test
mov
pop
jns
orb
add
mov
loopne
or
dec
insb
mov
cmp
les
test
sub
add
rolb
inc
call
dec
add
clc
push
int3
outsb
push
pop
clc
fstps
or
mov
push
xchg
dec
push
and
pop
cmp
rol
ret
das
sbb
sub
xchg
push
in
imul
inc
cmp
dec
sbb
push
adc
inc
ja
xchg
ret
lahf
clc
jmp
jmp
xor
sbb
cmp
pushf
add
pop
sbb
xchg
xor
hlt
xor
stos
andb
push
and
sub
xchg
cmpsl
je
pusha
pop
lods
lahf
jp
inc
inc
xor
push
lahf
dec
push
sub
xchg
int3
fbstp
add
pop
call
push
dec
mov
pushl
xorl
dec
aaa
sub
lcall
or
imul
jbe
sub
lods
sub
jmp
inc
mov
and
lock
mov
mov
jnp
sub
inc
xor
mov
xchg
mov
clc
cmpl
loope
ss
or
push
data16
and
mov
lea
test
fidivl
or
or
jl
pop
jecxz
xchg
mov
sub
and
push
push
out
repnz
lret
jge
xor
in
and
and
jno
add
jge
pusha
ret
jecxz
xchg
mov
mov
pop
es
xor
mov
xor
adc
out
int
lock
pusha
or
out
pop
cmp
mov
mov
icebp
push
add
mov
loop
les
add
xor
add
rcrl
jg
or
adc
hlt
jmp
or
jmp
testb
je
push
ljmp
adc
addl
adc
negl
mov
and
add
shll
xor
test
adc
add
push
hlt
rcrb
adc
adc
xchg
lock
fistpl
sbb
or
loope
push
incl
and
js
or
ss
insl
mov
jl
mov
or
jns
cwtl
sbb
push
stc
push
imul
lea
mov
mov
dec
dec
push
add
lods
add
jg
mov
push
jecxz
push
push
mov
movsl
add
sub
imull
jne
cmc
iret
mov
cwtl
push
jp
sahf
xchg
push
cmpsl
fs
lods
adc
out
or
add
push
hlt
xor
add
je
dec
popa
mov
add
ljmp
int3
add
ret
push
push
xchg
push
enter
inc
xlat
add
jge
notl
sub
cmp
push
pop
in
jb
lret
addps
subb
inc
filds
sti
call
sub
push
arpl
daa
adc
and
xor
mov
cmp
inc
jmp
leave
and
xchg
syscall
bswap
add
push
addb
stc
inc
inc
test
push
sub
sub
push
cmp
imul
movd
lsl
pop
mov
mov
jmp
mov
sbb
push
lret
cld
jo
mov
push
lret
jae
mov
or
adc
movzwl
and
rcrl
addb
in
and
repz
pop
shll
push
add
sbb
jo
cmc
sbb
aaa
mov
mov
adc
and
mov
cwtl
pop
mov
lods
or
or
sub
adc
fs
mov
cmp
xchg
cmp
jmp
sub
bound
add
sysexit
std
clc
mov
data16
ljmp
push
jl
push
push
popa
jle
fstpt
add
push
push
mov
nop
adc
and
loope
adc
mov
xor
aad
xlat
lds
add
sbb
int
loope
pop
incl
aaa
xchg
daa
aam
xor
and
imul
add
pop
or
or
and
filds
add
lret
mov
sbb
insb
loope
cwtl
fs
jo
mov
xchg
mov
adcl
out
pop
xor
jmp
sub
sbb
and
repz
push
cs
leave
cmc
outsl
les
mov
adc
mov
insb
xchg
push
and
pop
push
adc
pop
xor
test
test
mov
lea
icebp
mov
adc
and
mov
dec
cmp
lea
or
or
incb
jp
shr
add
or
cwtl
mov
rcr
shr
mov
out
pop
or
mov
add
add
or
bound
scas
push
lock
int3
aad
in
mov
mov
rcrb
aam
pop
fldln2
and
or
cmp
dec
mov
clc
flds
push
idivl
inc
les
jbe
jl
ds
add
pusha
lock
lea
mov
shr
cmp
mov
sub
or
mov
add
push
jp
inc
sub
mov
adc
orb
add
and
cmp
adc
rorb
out
decb
dec
or
inc
jbe
rcr
imul
loope
push
pop
outsl
jmp
cmp
fidivrs
cli
push
notb
or
shl
pop
xor
inc
mov
adc
aad
adc
push
add
ds
mov
into
cli
stos
testb
xchg
sub
or
test
test
scas
subb
sbb
lret
je
dec
call
aam
or
dec
inc
loop
sub
cmp
cwtl
pop
push
cmp
icebp
shlb
idivl
push
lods
pop
add
negb
add
adc
fstl
cmp
test
push
cld
sub
jne
dec
mov
call
ss
inc
inc
and
adc
mov
cmp
inc
ljmp
adc
cmc
test
adc
and
inc
rclb
out
pushf
fldl
mov
jle
cld
add
ja
flds
les
or
fisubl
mov
cmp
jmp
ss
mov
je
cmp
jmp
adc
xor
stos
xor
cmpb
idiv
fdivl
sub
mov
adc
xchg
push
fsts
or
adc
aam
add
inc
push
push
mov
push
push
fsubs
sbb
mov
inc
inc
adc
fnstcw
xchg
jp
pop
int
cld
aam
subl
mov
jmp
xchg
adc
dec
enter
dec
cmp
imul
add
jnp
add
and
enter
inc
addr16
dec
out
or
test
jne
pop
scas
filds
ja
add
xchg
xchg
shll
fisttps
test
or
je
mov
pop
mov
leave
xchg
or
add
loop
and
rclb
andb
enter
movsl
xor
xchg
or
sbb
lds
xchg
push
outsb
push
hlt
aam
xchg
push
sub
and
push
push
or
xchg
pop
int3
add
push
xor
in
imul
inc
mov
neg
neg
sbb
sub
xor
sti
adc
sbb
popa
mov
int3
aad
adc
adc
sbb
push
push
cmp
xor
rcr
aad
sbb
adc
and
sbb
sbb
jmp
lods
jmp
dec
call
daa
pop
pop
pop
icebp
mov
stc
inc
jae
or
jae
lods
rcl
ljmp
dec
and
shr
mov
or
icebp
idiv
and
cld
je
xchg
pop
xchg
js
mov
or
and
das
cmp
push
test
dec
mov
add
add
les
jge
push
xchg
adc
ss
shlb
sbb
sbb
push
sbb
into
jbe
jns
aas
bound
adc
mov
ret
sbb
push
les
adc
and
iret
daa
push
or
adc
cmp
aam
aas
cs
inc
and
fwait
xchg
xchg
or
insb
mov
mov
and
insl
xor
test
nop
dec
adc
pusha
jno
and
inc
or
lret
test
and
ss
dec
pushl
dec
cmp
filds
ret
jge
cld
sbb
sbb
jne
cmp
jp
testb
fistps
cli
lds
or
je
mov
inc
loope
nop
lock
mov
scas
es
mov
je
pushl
shll
test
mov
push
cmp
ja
add
daa
movsl
jg
cmp
adc
cmp
jne
xchg
sbb
adc
mov
test
rcrl
xorb
add
lods
inc
cmc
aam
inc
pop
mov
adc
mov
push
sbb
mov
mov
push
jbe
add
mov
xchg
dec
aaa
outsl
adc
mov
daa
incb
inc
imul
je
push
stos
pop
fildll
push
dec
cmp
fwait
mov
and
adc
add
inc
sbb
cmp
or
imul
mov
notl
movb
test
cltd
or
adc
sti
lods
push
mov
mov
inc
push
push
sahf
dec
pop
adc
das
add
pop
aaa
adc
pop
push
inc
int
sarb
xchg
out
femms
pop
mov
ljmp
xchg
or
push
inc
mov
lea
mov
sti
mov
push
or
or
fcoms
sub
rolb
dec
sbb
sbb
iret
pop
dec
sti
and
jg
mov
push
rcl
cmp
repz
aam
xlat
adc
fstpt
loopne
xchg
push
shlb
dec
mov
inc
add
sbb
into
data16
mov
push
dec
sub
and
mov
or
data16
add
mov
mov
add
push
ret
push
push
push
mov
mov
sub
push
sbb
je
test
sub
call
cmp
es
push
xor
or
repz
push
push
sbb
pop
rcrb
add
xchg
movb
sbb
leave
adc
jmp
in
lcall
sbb
dec
lea
sar
inc
xorl
mov
les
scas
xor
shll
test
test
jl
mov
add
sub
or
loope
roll
es
out
or
mov
pop
adc
les
mov
jle
decl
rcll
in
stos
push
or
fadds
xchg
aam
inc
hlt
pop
ljmp
or
mov
out
loope
into
and
lea
pop
sbb
movsb
subl
xchg
icebp
nop
pop
decb
xchg
gs
xchg
sub
cmp
and
and
adc
and
loopne
xor
sbb
dec
lods
loopne
inc
or
sub
push
mov
jne
sub
sub
rolb
nop
in
push
js
mov
push
or
mov
sbb
or
cwtl
dec
cmp
test
jns
je
cmp
cmp
push
mov
mov
push
addl
ror
fwait
cwtl
mov
jge
jl
mov
test
rol
add
or
jle
jle
shrb
mov
shrl
rclb
rorb
pcmpgtb
and
add
or
add
ds
gs
push
lret
mov
inc
xchg
int3
or
lods
outsl
loope
popf
ss
shrl
decb
mov
jmp
sbbb
dec
adc
cs
movsb
lock
cli
and
push
pop
cli
inc
cli
div
into
adc
xchg
inc
mov
ljmp
call
push
push
jnp
sbb
adc
lcall
or
mov
cmp
scas
outsl
mov
shll
mov
xor
mov
icebp
js
and
and
out
je
xor
mov
imul
mov
xor
and
dec
mov
lds
divb
or
pushw
sub
shll
jge
adc
mov
test
inc
adc
lret
mov
add
xor
in
inc
inc
adc
sub
loopne
sub
cmp
ss
sbb
mov
test
dec
ss
dec
test
push
cmp
dec
mov
mov
add
or
call
dec
inc
mov
lea
push
fnstcw
mov
insl
nop
mov
mov
rolb
into
repz
cltd
add
sub
aas
sbb
adc
imulb
sbb
and
enter
lock
xchg
lret
out
or
sbb
fs
jge
inc
sbb
loop
lock
and
jmp
add
movsb
repnz
jne
sub
nop
push
loopne
fimuls
push
add
mov
adc
push
lds
sub
sbb
add
mov
or
inc
add
add
push
nop
fimull
jecxz
cmp
popl
pop
add
movsb
jle
out
adc
xchg
shlb
gs
cmp
or
test
sub
shll
adc
mov
sbb
neg
and
rcrl
call
test
loopne
fadd
xchg
std
cmpsb
mov
add
and
aaa
add
pop
xchg
and
les
pushf
lret
shr
sti
and
pop
int
xchg
mov
add
or
mov
stos
xchg
or
xor
les
add
into
or
test
inc
sbb
mov
fimull
add
enter
xchg
fidivs
shlb
add
pop
add
add
mov
add
add
in
rcll
into
or
mov
inc
test
xchg
lock
in
dec
nop
pop
cmc
cmpsl
decl
add
xor
inc
cmpb
or
add
dec
in
pushf
les
mov
add
rclb
incb
sub
orb
pusha
mov
movb
mov
jmp
xor
dec
mov
jb
mov
lock
pushfw
adc
dec
inc
ret
and
add
push
add
inc
jbe
pop
mov
xor
inc
or
test
add
add
push
xor
test
lret
mov
aad
push
mov
dec
add
and
orb
adc
out
or
jmp
repz
int3
iret
xchg
push
or
add
popa
jecxz
or
pop
push
ret
cmp
scas
add
adc
int3
add
adc
mov
fld
push
ret
pop
xchg
adc
xchg
mov
jae
jo
jbe
test
lret
movsb
repnz
and
cmp
xor
into
pusha
jg
push
fs
into
mov
rcrl
pop
loop
pop
mov
pop
rol
shll
or
pop
mov
adc
sahf
dec
movsl
popf
loope
inc
push
pop
jae
or
or
sub
adc
and
or
or
mov
add
clc
adc
mov
mov
mov
xchg
pop
pop
enter
ficoml
or
dec
pop
enter
scas
push
add
mov
jne
and
and
or
dec
cmp
data16
js
or
aas
movsb
push
enter
add
insl
cld
dec
xchg
xor
mov
cld
cmp
je
ja
or
jnp
add
stos
jg
sub
push
add
and
add
jne
in
out
dec
pusha
dec
cld
into
in
stmxcsr
dec
rcrb
mov
cltd
ss
or
add
int
xor
add
add
pushf
xorl
jbe
jle
iret
nopl
sub
xor
xchg
xchg
out
inc
jg
into
into
mov
mov
fidivrs
sarb
push
pop
nop
and
cwtl
pop
mov
nop
int3
or
shlb
or
sbb
sub
pop
psubsw
dec
gs
lcall
add
leave
lahf
pop
test
out
adc
add
add
cmp
add
add
mov
sbb
aam
cmpsb
call
cmp
je
sub
or
fsubrs
jmp
jmp
daa
lret
push
xor
pusha
push
mov
xchg
incb
scas
sub
push
add
adc
xchg
ret
xchg
shll
ss
sbb
pop
fmul
and
xorb
mov
push
jbe
lods
push
inc
test
into
sbb
push
outsb
sub
pop
sbb
sub
push
mov
es
ret
fisubrs
scas
add
sbb
xlat
jle
and
daa
or
int3
adc
sub
arpl
std
push
adc
jge
addr16
inc
jl
or
jecxz
mov
loop
xor
dec
pop
push
int3
and
inc
sbb
or
daa
inc
test
push
adc
dec
pop
add
cwtl
orb
out
inc
jmp
and
dec
xor
sub
add
shrl
dec
ds
je
not
nop
fisubrs
rorb
jb
mov
lret
inc
inc
fsubrp
jmp
pop
sbb
popa
out
leave
nop
mov
lds
inc
or
jo
adc
int
jbe
pop
js
jmp
test
xor
fsubrs
jl
lea
inc
mov
movsl
xor
cmp
pop
mov
sbb
or
adc
and
sbb
xchg
jne
mov
test
mov
adc
or
push
scas
ret
lock
sbb
jnp
inc
pushl
leave
and
adc
pop
test
ja
testb
xor
mov
hlt
jno
inc
aam
pop
popf
mov
fcoms
fwait
movb
pop
mov
sbb
enter
adc
test
push
sbb
shlb
rclb
jmp
push
hlt
fcomps
fisttpl
inc
sbb
incl
inc
pop
jge
lea
xchg
inc
mov
lret
iret
pop
push
imul
dec
enter
mov
mov
and
push
adc
mov
sub
pop
push
shll
add
xor
xor
std
adc
and
push
adcb
add
sub
push
mov
lcall
mov
push
xlat
adc
mov
cltd
xchg
pop
cmpb
shrb
mov
popa
sar
test
sub
jl
inc
lcall
mov
dec
inc
pop
or
inc
bound
loopne
or
push
inc
aas
lods
pop
inc
or
movsb
adc
cs
push
xchg
xor
mov
jbe
pop
fiaddl
push
lea
aad
push
sub
xchg
or
outsb
es
dec
in
jb
mov
cmp
mov
add
loop
adc
inc
pop
add
clc
mov
dec
or
testl
enter
cmp
popa
sbb
dec
shll
sub
mov
fmuls
and
cwtl
mov
xchg
test
sbb
sbb
out
xor
les
sub
lret
cld
add
dec
pop
jl
cltd
cmp
mov
dec
lea
ss
popa
inc
jno
int3
adc
adc
xor
sbb
pop
nop
insl
cmp
push
and
loope
outsl
icebp
sahf
outsl
stos
loopne
jmp
dec
loop
adc
inc
das
movsb
fisttps
sbb
sub
cmp
cwtl
mov
ja
call
movsb
or
mov
sbb
sbb
push
sbb
or
cmpsb
cmp
pusha
sbb
mov
push
add
pop
push
das
xchg
dec
adc
in
stos
inc
std
sub
sub
add
cmp
or
xor
ljmp
add
jl,pt
and
inc
hlt
xor
push
sub
add
daa
loopne
cmp
sub
mov
add
ja
addb
inc
add
fisttpl
mov
fs
push
add
mov
dec
inc
mov
fnstsw
or
pop
add
xor
xor
push
insl
add
push
out
enter
fsubrl
add
xor
jmp
and
jne
mov
xor
sub
sbb
popl
shlb
add
dec
or
inc
adc
js
or
and
push
xchg
clc
or
mov
mov
or
call
dec
call
outsl
cmpsb
ss
loopne
clc
div
cvttps2pi
mov
xchg
lcall
and
je
daa
ds
popf
and
test
mov
push
fisttps
rclb
and
push
arpl
jmp
fstps
xchg
xor
push
shrb
and
sub
das
fcomp
in
fidivl
adc
xchg
and
loopne
in
dec
shlb
add
inc
jmp
aaa
test
lea
movsl
unpcklps
or
dec
in
mov
mov
sub
push
sbb
sub
push
cmp
mov
fmull
lock
in
inc
mov
fs
loopne
mov
pop
xor
insl
cmpb
aad
in
push
outsl
xor
lds
mov
js
xor
andl
xor
xor
aam
fs
mov
clc
dec
mov
mov
cmp
and
in
sbbb
or
shlb
daa
sub
call
sub
push
nop
movsl
jne
jge
xchg
ret
jo
mov
jg
pop
sbb
je
int3
ss
jo
imul
dec
rcll
das
mov
pop
in
test
test
jns
add
xor
dec
pop
fdivr
sub
and
add
in
fcoms
pop
xchg
xorl
hlt
pop
push
in
adc
dec
pop
adc
fwait
in
adc
ss
in
cmp
mov
sub
addr16
sti
rorb
addl
sub
pop
rol
sbb
push
insl
add
rclb
sbb
or
cmpsb
mov
jnp
dec
xor
pop
dec
shl
mov
cs
and
jno
and
sub
push
add
sbb
jb
sub
cmpsb
sub
push
sbb
push
test
call
dec
xchg
cmp
mov
dec
leave
test
in
ret
xor
rcrb
dec
insl
cmp
test
adc
movd
mov
movsl
data16
add
push
ss
dec
cwtl
icebp
fcoms
add
cmpsb
popa
mov
cs
xchg
xor
or
rol
bound
mov
ss
andl
adc
cmp
inc
push
xlat
pop
in
ljmp
rclb
ljmp
xlat
test
out
arpl
mov
add
cmp
loopne
sbb
and
fs
or
xchg
shrl
sub
sbb
das
xchg
adc
sbb
fdivl
shll
in
mov
sub
inc
or
fs
cmp
mov
lods
into
add
xchg
dec
xor
push
adc
xor
and
and
leave
and
sub
xor
and
dec
cmp
and
dec
xor
popf
fwait
int
push
push
in
neg
pop
sub
inc
add
mov
stc
push
loopne
pop
lods
pusha
add
add
nop
add
rcrb
nop
aam
sub
mov
ret
aam
gs
repnz
xor
jecxz
clc
mov
xor
or
lock
jle
jp
adc
mov
daa
iret
jl
add
sub
cld
add
aam
jae
mov
mov
aad
nop
dec
push
xor
loopne
rorb
pusha
adc
mov
and
imul
mov
inc
cmp
gs
sbb
subl
cltd
push
in
lock
or
nop
adc
xchg
cmc
xor
jnp
hlt
call
xor
xor
mov
mov
rclb
cs
pop
or
aaa
inc
mov
or
add
xor
call
mov
lock
xchg
sub
in
je
push
jg
dec
add
jg
test
int3
pop
test
push
sbbl
dec
push
mov
cs
psubsb
icebp
add
insb
mov
xchg
inc
fs
cmp
call
in
xchg
nop
insb
faddl
or
roll
ret
call
dec
call
daa
jns
sub
pop
fmuls
or
or
insl
mov
dec
repnz
int3
insl
out
lock
and
or
add
adc
mov
popa
movq
mov
leave
mov
outsb
inc
imul
insb
and
stos
dec
adc
test
loope
xchg
cli
sarb
adc
test
fmuls
push
pop
pop
imul
sub
out
xor
adc
sti
mov
rcl
cmpb
or
arpl
outsl
out
xlat
push
aad
jge
mov
outsl
adc
fcomps
sbb
mov
bound
mov
icebp
shlb
or
jbe
mov
test
in
in
lods
mov
mov
mov
ljmp
add
xchg
push
arpl
jb
ss
sbb
push
adc
ret
sbb
add
mov
push
and
jb
nop
mov
or
sbb
sbb
popf
push
adc
mov
or
mov
lock
notb
pop
shrl
mov
mov
je
and
loop
or
call
jo
int
jecxz
sbb
je
dec
in
pop
push
test
lods
int3
xor
jp
mov
aas
inc
adc
sbb
mov
push
outsl
fadds
jns
int3
sub
xor
sbb
call
mov
push
and
in
js
std
fisttpll
sti
enter
ror
sub
push
push
fldenv
push
jmp
dec
cmp
mov
scas
dec
jo
fsubr
loopne
sbb
add
add
loop
add
adc
fdivl
add
aam
sub
and
in
rorb
fildll
adc
pop
inc
xor
mov
xor
adc
es
inc
add
lock
jecxz
and
adc
adc
nop
adcb
ja
add
lret
lret
add
cs
mov
lea
cmp
jecxz
lods
adc
adc
and
lahf
in
mov
cmp
das
mov
movsl
loopne
adc
or
shrl
mov
int3
popa
dec
aaa
mov
sub
pop
ret
repnz
dec
movsb
nop
add
mov
and
je
add
pop
leave
add
lcall
jg
xchg
inc
ret
pop
or
inc
mov
in
add
mov
fadds
inc
add
add
insb
ljmp
jp
lret
dec
sub
pushf
cmc
and
pop
arpl
enter
cmpsl
mov
addb
hlt
jp
mov
inc
cmp
mov
pop
push
enter
xchg
loopne
or
adc
jnp
or
cmp
nop
or
or
cmp
nop
inc
or
or
dec
push
or
inc
in
daa
call
mov
jl
push
mov
push
fucomp
jl
mov
mov
je
movl
adc
jge
xchg
pop
xchg
popa
inc
shlb
inc
movsl
mov
test
enter
xchg
xchg
xchg
sub
sub
mov
imul
test
sub
mov
jle
jne
dec
fsubl
and
repnz
xchg
jl
sarb
push
cmp
in
or
in
and
data16
jg
inc
xchg
inc
jl
imul
add
mov
lods
fsubrs
mov
mov
mov
in
scas
mov
mov
and
pop
adc
nop
lock
sub
add
sbb
xchg
cwtl
xchg
leave
or
gs
jg
mov
aam
sub
add
in
adc
push
mov
sbb
out
addr16
loop
in
push
mov
push
daa
xchg
lock
push
sub
rcr
jns
or
xlat
and
fisttpl
cmp
bswap
enter
cmp
sarb
mov
cwtl
cmpsb
arpl
cmp
enter
outsl
movsb
xor
adc
pop
imul
pop
and
or
xchg
sub
in
xlat
adc
mov
test
out
test
and
fsubl
insb
outsb
xchg
test
movsb
and
movsb
inc
rclb
pushf
pop
adc
test
daa
push
pop
lds
leave
mov
pop
jo
daa
mov
jae
pop
add
push
mov
lods
dec
jb
movsb
jne
add
xchg
push
fsubrl
or
sub
xchg
push
jne
mov
in
or
lea
dec
call
jg
add
push
stos
inc
push
add
push
mov
mov
popl
outsl
or
insb
je
xor
mov
ret
jge
popa
inc
enter
sti
xor
fcompl
outsb
inc
pusha
mov
dec
repz
or
nop
enter
mov
and
js
push
out
ret
adc
pop
in
mov
les
mov
push
aam
cmp
rcrb
inc
mov
neg
fisttpl
push
mov
adc
jno
sti
fsubl
arpl
adc
jne
mov
dec
push
fcomps
pusha
adc
arpl
scas
mov
clc
jne
adc
shll
fcomp
inc
or
test
xor
orl
jae
outsl
enter
sti
movsl
or
mov
mov
in
add
mov
inc
lods
addr16
push
dec
call
push
paddsb
push
and
andl
add
iret
int3
mov
sbb
ret
ret
mov
sub
pusha
mov
ret
test
adc
inc
lods
test
call
lock
xor
fdivs
push
and
test
sub
push
and
loopne
lea
push
leave
daa
mov
lock
mov
cmp
dec
shll
dec
add
ss
fsubl
cs
fstl
and
sbb
aam
dec
mov
jns
lea
pop
je
adc
adc
lock
mov
xchg
sti
and
arpl
push
test
mov
arpl
xchg
add
push
imul
adc
add
or
sti
fs
jns
cmp
in
in
add
lds
sub
or
subb
loope
xor
enter
sub
movsb
sub
imul
aad
repnz
pushf
fimuls
test
test
fsub
das
sub
cmp
sub
enter
fs
enter
lcall
imul
xchg
aas
add
push
xor
sbb
jnp
loopne
mov
stos
sbb
loopne
mov
leave
mov
and
outsl
in
or
lock
adc
scas
rcll
push
imul
or
mov
add
inc
test
and
das
outsl
daa
cmpsb
push
add
xchg
movsl
or
xchg
test
mov
xor
lret
les
loope
or
mov
or
jne
nop
addb
fadd
subl
jmp
loope
mov
je
dec
scas
sbb
ror
pusha
xchg
adc
cwtl
fs
fdivrs
pop
or
mov
lock
xchg
fsubl
and
fs
sbb
push
aad
faddl
pop
pop
cwtl
pop
add
inc
test
jns
stos
sbb
pop
pusha
xor
cld
cwtl
pop
imul
xchg
xchg
nop
pop
sub
fwait
or
pop
pop
jl
movsl
add
aam
roll
cmpl
mov
jecxz
insl
dec
add
inc
arpl
sub
and
shll
mov
mov
lods
mov
inc
cmc
lods
addr16
adc
arpl
enter
jo
mov
add
add
sub
mov
push
inc
add
mov
dec
xor
cmp
mov
jns
aam
fcomps
in
pushf
sub
xorl
xor
bound
dec
in
enter
adc
cmpsl
or
or
les
in
add
movsb
loopne
mov
push
mov
test
cmp
push
nop
popf
outsl
xor
mov
test
andl
pusha
jo
movsb
cmp
lea
insb
push
inc
mov
jno
pusha
add
jg
loopne
mov
jg
fdiv
lcall
and
push
repz
scas
bound
pop
rorb
test
push
rcrb
sub
inc
bound
das
enter
adc
pop
andl
sti
mov
add
or
mov
repz
mov
mov
mov
adc
mov
and
jmp
pop
les
jb
sti
lock
bound
stc
shrd
xorl
fmull
enter
pop
mov
xor
push
and
adc
jecxz
leave
les
nop
mov
xor
jne
aad
adc
or
xchg
inc
pop
xchg
cmp
in
xchg
mov
int3
cmc
inc
fwait
mov
in
fwait
dec
fsubrl
int3
jmp
adc
movsl
int3
xchg
je
adc
mov
mov
insl
inc
add
mov
mov
push
dec
mov
pop
or
in
lock
ss
xor
stos
mov
test
les
lods
inc
mov
movsl
les
mov
je
out
in
in
fucom
sub
adc
insb
js
jo
repnz
sbb
sbb
cltd
add
enter
fcomps
or
rorb
orb
movsb
adc
xor
int
nop
and
add
mov
fmull
nop
inc
mov
cltd
popa
dec
lcall
imul
add
pop
enter
add
mov
add
sbb
mov
xchg
leave
loopne
nop
fildl
jb
adc
adc
dec
scas
sbb
and
test
jo
add
cmp
dec
push
dec
repz
push
add
clc
cmpsb
fbld
call
sub
push
cmpsl
fwait
mov
dec
or
fcoml
xchg
roll
insl
sub
out
jg
push
mov
xchg
aam
sbbl
xchg
add
or
leave
mov
aad
add
test
ffree
test
mov
push
mov
add
lds
or
adc
mov
mov
dec
cltd
dec
imul
leave
int3
popl
rorb
sbb
bound
fwait
lods
es
ss
xchg
xlat
push
andb
mov
dec
dec
es
pusha
and
dec
adc
fsubrs
lock
fdivr
and
mov
das
pinsrw
lret
push
addl
or
mov
xchg
xlat
jecxz
les
xor
mov
aam
add
enter
add
add
xor
xchg
or
adc
test
out
and
shll
in
outsl
inc
inc
mov
adc
sysenter
xor
jge
pop
cs
adc
sbbl
leave
add
fadds
xor
and
pop
add
add
inc
sub
cmp
xor
ja
xor
pop
das
call
roll
ret
sub
in
test
and
in
inc
pop
or
inc
mov
lret
cmpb
repnz
movsl
fdivs
xchg
push
insb
mov
invd
pop
das
and
or
add
or
addl
fadds
xchg
mov
sub
leave
xchg
cmp
scas
int
fisttpl
push
iret
mov
loope
add
jg
xchg
push
push
das
js
incl
push
jne
xchg
adc
pop
mov
push
pop
push
adc
and
and
adc
movsb
lea
insb
add
lcall
add
adc
cmp
cltd
mov
inc
inc
or
sbb
xchg
outsl
pop
adc
in
sub
and
mov
add
pop
pop
mov
call
test
imul
dec
lea
and
mov
mov
xor
and
push
add
or
in
gs
aad
bound
loopne
scas
add
les
xchg
push
imul
xor
mov
adc
and
test
sub
pop
push
jo
call
inc
test
sbb
sbbb
insl
sub
push
jne
xor
rorb
push
sub
or
xor
inc
sub
push
jne
and
int3
pop
test
or
shrl
xchg
mov
push
mov
shl
mov
lret
in
sbb
test
movsb
mov
or
push
cwtl
push
enter
xor
daa
xchg
dec
and
cmpsb
andb
sub
xchg
pusha
pop
mov
fldt
popf
inc
jmp
jns
lcall
cmpsb
or
adc
repnz
fs
es
fs
pop
insb
hlt
pop
cltd
fs
dec
push
js
push
nop
dec
es
inc
jo
imul
clc
inc
repnz
dec
pusha
fcoms
or
cmp
orb
out
and
lret
enter
loopne
mov
addb
addb
cmp
dec
addr16
dec
xor
and
je
aam
and
dec
int3
enter
rclb
jb
mov
movb
adc
mov
push
mov
or
push
or
pop
sub
adc
pop
xchg
cmp
shlb
mov
add
enter
rclb
mov
fbstp
movsb
jns
or
inc
mov
lea
mov
mov
lds
mov
aam
arpl
stos
xchg
dec
or
fsubs
mov
cmpl
test
sub
pop
pop
mov
jg
dec
push
add
movsb
fdivrs
add
das
imul
cmovo
push
and
push
dec
pushf
movsl
cmp
cmp
push
nop
jmp
xchg
arpl
add
jmp
imul
mov
add
cmpsl
cltd
mov
mov
fcmovnb
add
inc
dec
xor
push
mov
mov
aam
movsl
lods
or
nop
test
rcrl
mov
loopne
stos
mov
jbe
mov
les
xchg
mov
inc
adc
jo
nopl
lods
pop
add
int
dec
pop
inc
bnd
sub
sub
add
aam
mov
movsb
scas
and
xlat
inc
jb
cs
pop
call
aas
mov
sbb
add
les
arpl
int3
aam
popa
or
cltd
mov
mov
and
jmp
mov
xlat
push
mov
jae
add
das
adc
push
insb
xchg
pop
inc
pop
and
push
imul
jmp
adc
loopne
fcmovbe
dec
sahf
hlt
push
push
inc
xchg
sub
pop
pop
or
or
pushf
sbb
dec
or
or
les
sub
aam
xor
lea
aas
add
or
es
add
fs
dec
adc
hlt
cli
mov
sbb
mov
sti
cld
cli
scas
xchg
dec
xor
fs
cmp
and
enter
enter
hlt
add
adc
fisubs
inc
mov
fiaddl
add
and
cltd
ss
cmp
dec
xor
pop
and
adcb
cs
xchg
repnz
push
sbb
xchg
cmpsb
es
fbld
test
iret
arpl
dec
mov
sub
dec
orb
or
pop
or
dec
lahf
mov
and
pop
decl
adc
sub
or
int
mov
nop
and
push
xorl
fnstenv
mov
sub
pop
pop
sub
xchg
mov
loopne
push
repnz
mov
sti
push
push
push
insb
push
and
and
pop
sub
adc
cmpb
sub
movsb
and
mov
push
imul
jne
js
clc
jle
rorl
add
mov
pop
adc
add
aaa
iret
scas
std
sbb
push
ror
push
xchg
mov
popf
push
pusha
sub
xchg
rol
jne
sub
xor
in
mulb
mov
cwtl
les
pop
imul
call
xchg
push
lds
in
sub
add
jae
shrb
push
je
mov
std
mov
aaa
jmp
mov
mov
sbb
cmpsl
stc
push
mov
cmp
es
lods
mov
mov
mov
stc
les
push
sbb
lahf
dec
shrb
pop
insb
pusha
add
jo
push
jmp
test
aas
inc
add
dec
mov
nop
push
mov
mov
shrb
inc
ljmp
mov
mov
ljmp
add
fistpl
or
jnp
mov
add
mov
add
scas
inc
push
xlat
fs
pusha
pop
pop
dec
frstor
inc
fwait
add
incl
inc
dec
dec
dec
dec
dec
dec
dec
dec
push
push
push
decl
inc
lcall
fs
imul
ljmp
jo
jb
je
jbe
js
jp
xor
xor
sub
leave
adc
incl
rcll
xchg
adc
push
or
cmp
rclb
cmpl
pop
mov
loope
jmp
or
inc
repz
negl
adc
iret
je
imul
fsubrp
push
out
dec
outsb
je
jb
outsl
arpl
fs
out
sbb
sbbl
imul
push
sbb
jb
gs
xor
cs
insb
push
bound
and
cmp
popa
je
outsl
outsb
dec
inc
xor
add
testb
pop
in
xchg
xor
incl
shrb
fldcw
inc
outsl
jb
js
je
jb
arpl
jae
add
arpl
outsl
add
aaa
adc
add
incb
and
push
gs
pop
pop
lock
push
je
mov
popa
jb
mov
inc
imul
dec
xor
xor
jle
push
cmp
cmp
cmp
and
jns
add
das
shll
push
dec
push
inc
inc
gs
std
fcomps
daa
dec
outsl
jbe
dec
arpl
ds
rcll
je
inc
jne
jne
dec
mov
insb
xchg
mov
insb
mov
xchg
jg
popa
jb
push
inc
cmp
out
or
mov
jae
xchg
popl
ja
ja
cmp
push
jne
xor
cmp
and
daa
push
scas
lahf
mulb
sbb
dec
js
push
pushf
jae
mov
jbe
inc
imul
ds
popa
das
jo
or
adc
sub
lock
in
inc
ud0
fiaddl
fldl
adc
pop
dec
rorb
add
jg
lahf
and
sub
sub
cs
movsl
cmp
cmp
ds
push
les
stos
inc
das
pop
pop
dec
jg
stos
hlt
pusha
cmp
jge
jg
cmp
jo
mov
inc
test
cs
and
push
pop
or
adc
fadd
xor
inc
insb
jae
mov
push
fs
mov
inc
adc
cmpsl
dec
inc
mov
pop
fwait
in
int
jo
insl
and
jb
jbe
lods
fucomp
in
dec
push
push
sbb
inc
sbb
fimuls
inc
and
add
xor
push
scas
ficompl
inc
outsb
push
jo
imul
insl
mov
cltd
pop
mov
je,pn
jo
fdiv
lret
and
mov
and
sbb
pop
fs
scas
xor
mov
or
xorb
insl
xlat
sahf
xor
mov
mov
fistpl
insl
and
insl
push
gs
fiadds
aas
xor
cmpsb
loopne
and
jne
dec
mov
add
insl
les
out
fwait
dec
and
mov
and
mov
mov
sbb
lock
movsl
add
or
fs
popf
jmp
mov
je
or
flds
and
push
ds
xor
fidivrl
ss
push
mov
pop
xchg
sub
movsb
addb
das
arpl
cmp
ss
dec
popa
sub
negb
fiadds
inc
xchg
xchg
pop
pop
push
insb
imul
lods
cmp
int3
or
push
ret
add
sbb
popa
or
sbb
pop
xor
dec
jno
mull
push
push
filds
push
sarl
nop
aaa
xor
mov
fs
xor
hlt
inc
and
cwtl
pop
dec
add
xor
fisubl
outsl
ss
sub
and
fs
xorl
imul
sarb
xor
pop
pop
ficompl
gs
xor
out
inc
test
outsl
push
or
outsl
mov
cmp
cmp
xor
inc
aaa
and
jecxz
insl
in
ljmp
imul
pop
shrl
or
stos
jmp
add
leave
nop
xchg
lds
inc
insl
imul
push
cltd
cmp
xorl
or
insb
popa
and
and
pop
pop
adcb
push
cmp
addr16
popf
mov
xor
fsubrl
pop
pop
pusha
jo
sub
add
sub
push
sub
lret
inc
sub
jne
jo
pop
dec
jmp
mov
pop
cmp
push
and
cmp
mov
mov
cwtl
ja
ds
inc
inc
and
jbe
and
ud0
sahf
pop
fisubl
add
mov
sub
rol
das
lret
outsl
dec
mov
inc
mov
clc
ret
movsl
add
xorl
jae
jae
push
loop
adc
imul
jle
fisttpl
aad
popa
dec
add
xor
in
adc
jae
outsb
js
mov
addr16
dec
pop
add
add
icebp
jne
and
sub
xchg
adc
adc
test
add
add
add
add
jns
cmp
pop
or
aaa
ds
push
pop
hlt
and
in
pop
or
pusha
add
js
or
sub
pushl
data16
sbb
addb
cmp
push
xchg
test
add
fisubs
pop
daa
push
cmpb
in
popf
fnstenv
xor
int3
push
lods
pop
into
jo
add
or
lds
pushf
into
push
stos
mov
js
jo
dec
rorb
jb
fcoml
sbb
pop
jb
or
leave
and
js
xchg
lock
pop
push
push
inc
or
or
test
dec
js
add
adc
loope
cs
cmp
test
data16
testl
setp
sbb
cmp
mov
and
enter
and
sub
push
jb
dec
add
leave
sbbl
add
adc
add
and
add
add
ficoml
add
nop
imul
add
insb
or
mov
test
incl
adc
fisubl
jbe
aaa
add
pop
lods
and
shr
ljmp
and
add
test
mov
mov
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
mov
cmpsb
cmpsl
test
stos
stos
lods
lods
ljmp
mov
mov
mov
mov
mov
ret
enter
int3
int
dec
iret
rcl
rcl
aam
xlat
fcomp
fcmovu
loopne
loop
in
out
call
in
mov
lock
repnz
cmc
div
clc
stc
cli
sti
cld
and
adcl
stos
sbb
decl
aas
mov
sbb
push
int
fists
outsl
ja
mov
push
jae
jb
bound
je
sub
stos
inc
ss
mov
mov
repnz
sub
daa
pop
lea
dec
mov
outsl
js
fisubrl
inc
push
mov
inc
jmp
lea
insb
gs
mov
dec
pop
movsl
outsb
jnp
mov
in
dec
imul
pop
jns
inc
mov
imul
push
inc
and
inc
jb
jns
daa
add
enter
dec
pop
jnp
jns
mov
or
arpl
stos
or
cmp
outsb
pushw
dec
add
arpl
mov
push
pusha
inc
ficompl
mov
jbe
push
push
lahf
movsb
sbbl
and
xor
dec
or
imul
cmp
or
pusha
gs
sbb
sbb
jno
sub
push
test
pop
pop
pop
push
push
jae
cmp
jecxz
push
cmp
call
movsl
jae
addr16
subl
ret
outsb
gs
mov
xchg
xchg
inc
xor
jbe
push
push
push
push
dec
testl
dec
xchg
add
adc
popa
mov
fildll
dec
jge
dec
test
jg
imul
call
push
adc
jg
cmp
inc
mov
enter
jg
sbb
ljmp
sub
xor
push
or
imulb
mov
mov
mov
popw
pop
imul
mov
push
jl
cmp
cmp
push
sahf
out
jns
das
push
sub
es
mov
push
jle
sub
sub
addr16
sbb
sahf
mov
sub
sub
push
cmp
cmc
jo
inc
jmp
cmp
and
add
pop
xchg
push
mov
jb
sbb
insl
popf
imul
das
jo
ss
loopnew
push
lret
lods
fadds
mov
and
int3
cmp
jo
sub
test
jl
lahf
sub
sahf
daa
mov
cld
loopne
push
call
jns
les
cwtl
push
dec
add
fildl
aam
sarl
cwtl
nop
loopne
jns
jnp
dec
test
addb
js
cmpsl
mov
fs
xor
pop
pop
dec
pop
repz
adc
dec
movsw
and
push
xchg
cmp
push
mov
dec
mov
inc
inc
nop
mov
cmp
cmp
jns
repnz
sub
and
sahf
repnz
and
sbb
adc
cmp
repz
fcomip
in
rcr
cmp
lods
mov
inc
or
cmp
jl
fiadds
test
pusha
iret
repz
inc
xor
sub
hlt
sahf
out
lcall
xor
out
insb
inc
sbb
clc
cmp
repz
pusha
xor
fsubl
pop
aam
lcallw
shlb
jns
push
test
xor
data16
add
mov
pop
push
in
mov
bound
fs
sbb
repz
jb
xor
xchg
jp
shrd
sub
sub
rolb
add
jle
push
insb
cmp
inc
inc
dec
jae
mov
adc
mov
mov
push
inc
dec
xor
inc
incl
dec
dec
push
push
and
xor
push
dec
inc
dec
add
dec
dec
inc
add
lcall
das
adc
sub
adc
xchg
inc
inc
call
rclb
mov
and
jg
scas
xor
jnp
inc
loop
mov
ds
pop
addr16
aas
fcoms
inc
pop
clc
lret
sbb
jb
xchg
jge
inc
lcall
arpl
cmp
adc
dec
scas
jp
adc
incb
mov
mov
and
cmp
dec
imul
pop
jns
iret
lret
add
inc
mov
mov
add
dec
mov
pop
sahf
fwait
ss
sbb
pop
jns
dec
sti
jnp
inc
xor
incb
int3
dec
dec
xor
dec
popf
pxor
xor
pushl
div
inc
sub
dec
xchg
cmp
cmpsb
das
xchg
pop
jmp
insl
xor
sahf
icebp
mov
cld
or
loopne
cmp
inc
mov
xchg
push
test
mov
ds
dec
xchg
scas
lods
sti
xchg
clc
push
xor
sbbb
or
icebp
pop
test
hlt
stc
aas
fdivr
and
es
mov
flds
sbb
mov
insb
mov
jns
mov
dec
test
shrb
mov
outsb
jbe
and
inc
pop
out
mov
inc
inc
or
and
jmp
jo
daa
inc
push
bound
out
aam
dec
push
dec
push
sub
out
dec
mov
and
add
es
push
cs
xor
adc
xor
push
push
ds
dec
add
std
out
ljmp
adc
ds
pop
adc
sbb
pop
inc
aas
pop
adc
pop
daa
and
sbb
mov
adc
inc
cs
jno
jb
jbe
pop
das
out
int
outsl
ss
inc
sub
sbb
aas
and
sbb
jle
fldl
pop
push
push
inc
cs
sbb
pop
cmp
push
push
push
sbb
adc
xor
aas
aas
xor
outsl
mov
mov
lods
add
inc
sub
add
adc
imulb
add
sbb
or
das
sub
pop
daa
and
jge
dec
pop
sbb
out
push
pop
or
jnp
inc
sbb
daa
add
jg
std
pop
add
adc
sbb
pop
sbb
inc
or
inc
push
sbb
or
dec
inc
or
pop
jge
addb
out
mov
or
pop
push
inc
invd
mov
mov
aad
push
xor
mov
in
push
and
je
lea
push
sbb
outsl
mov
insl
or
es
adc
mov
and
fstpt
inc
ds
pop
push
sbb
sbb
lret
jnp
inc
pop
pop
adc
das
sbb
xor
aas
pop
push
xor
and
jge
mov
dec
push
es
das
sub
outsl
push
inc
lock
insl
test
xor
dec
cmp
xor
adc
js
sub
or
sub
shlb
out
scas
mov
es
pop
push
gs
clc
pushl
es
daa
pop
xor
dec
push
adc
push
xor
daa
jnp
in
mov
dec
add
in
sub
cmp
inc
pop
and
pop
dec
jo
aas
cld
sub
pop
push
adc
pop
pop
aas
fildl
dec
pop
movsl
pop
cmp
or
notb
cld
jmp
dec
nop
dec
cwtl
in
push
cmp
adc
sarl
xor
pusha
and
jo
imul
jns
stos
mov
outsl
jg
push
xor
jo
cmpsb
addb
testl
jle
and
inc
mul
pusha
inc
inc
and
inc
scas
push
cmp
mov
push
inc
cmp
adc
push
popa
out
lahf
loope
outsl
insl
mov
inc
popa
outsb
push
add
jmp
lods
adc
push
popa
add
out
adc
bound
xor
and
push
or
nop
push
pop
push
lock
repz
push
jo
mov
out
lcall
rcrb
add
push
push
mov
mov
push
and
push
push
lock
xor
mov
push
outsb
xor
mov
push
cmp
cs
push
aas
adc
mov
pop
sbb
scas
cs
add
sub
add
cmp
adc
ss
imulb
xchg
adc
pop
inc
jbe
pop
sbb
daa
pop
or
out
fcmovu
das
cmp
dec
push
inc
nop
cmp
jmp
out
jne
scas
push
fisttpll
push
and
push
sbb
xchg
pop
cmp
fcoms
clc
icebp
push
int
mov
and
in
movsb
aas
inc
jb
push
sub
mov
mov
push
push
inc
and
push
xchg
inc
lock
lods
sub
mov
pusha
sub
and
cmove
push
xor
and
cs
insl
inc
mov
push
pop
dec
in
out
mov
xor
cmp
popa
in
push
xor
inc
ja
ja
lcall
push
cs
push
aaa
fnstcw
xor
out
pop
push
pop
and
ret
jmp
rcrl
mov
scas
jge
andl
fs
cmp
insl
pusha
hlt
outsb
scas
push
dec
pop
adc
xor
test
push
add
cwtl
xor
fs
daa
pop
push
or
pop
sarb
out
insl
push
xchg
jae
push
cmp
nop
fldenv
pop
cs
adc
test
cmp
inc
push
das
jbe
or
push
cmp
daa
js
or
cmp
out
sahf
adc
add
cs
sub
or
push
dec
ss
and
cs
or
out
mov
adc
aas
inc
xorps
jge
sbb
add
inc
mov
sbb
adc
adc
and
mov
mov
mov
popa
jb
mov
or
push
pop
add
and
jle
or
inc
xchg
adc
dec
dec
push
ror
adc
xor
add
mov
clc
mov
in
push
pop
inc
testl
add
imul
inc
out
aas
lret
popa
push
adc
cltd
into
scas
daa
mov
es
notl
push
aad
add
cs
mov
xor
pop
and
mov
sbb
outsb
mov
adc
iret
sbb
es
and
lcall
xchg
sbb
pop
xchg
ret
scas
jg
push
and
movsl
cmpsl
scas
and
pop
or
je
rcrl
add
cmp
sub
push
push
aas
push
jg
inc
adc
and
jle
mov
das
dec
andl
pop
stos
pop
setle
fst
push
mov
hlt
gs
xchg
cs
int
inc
test
cmpsb
pop
mov
addr16
or
sbb
pop
xchg
cmp
cmp
push
cmp
mov
inc
daa
addr16
dec
mov
mov
pop
pusha
pop
push
push
cmp
adc
es
or
push
pop
addl
outsl
jns
jmp
dec
cs
adc
pop
xor
pop
ja
cmp
lods
and
mov
pop
and
jbe
cmpsb
data16
pop
mov
or
sub
sub
jmp
cmp
aaa
mov
aaa
pop
push
add
mov
adc
push
and
and
or
sbb
pop
subb
movsl
inc
add
testl
push
std
jns
popa
jne
push
lds
inc
dec
sarw
inc
add
mov
xchg
dec
inc
pop
push
xor
cmp
dec
sub
mov
add
mov
push
sub
pop
setbe
jnp
sbb
cmp
ds
sbb
jne
ret
cmp
and
dec
pop
cmc
push
push
jns
sub
pop
push
das
xor
adc
in
fistl
add
cmp
cmpsb
arpl
pop
push
xor
mov
pop
lea
mov
mov
sub
popa
je
jae
sub
jp
or
pop
adc
outsl
xchg
mov
inc
mov
xor
subl
subl
mov
insb
outsl
jb
bound
push
pop
insl
mov
add
addr16
and
jae
popa
inc
pop
inc
xor
xor
pop
insb
daa
inc
daa
cs
and
xor
js
cmpsl
popa
test
mov
and
addl
push
mov
xor
mov
mov
inc
jl
push
out
pusha
push
loopne
mov
les
lcall
js
cmp
wrmsr
aas
ret
push
fadds
mov
mov
daa
push
dec
push
pop
push
daa
pop
adc
pop
or
stos
fwait
rolb
cmp
sbbb
push
loopne
dec
add
inc
cmpsl
mov
inc
push
mov
rorl
movl
mov
aam
push
add
adc
xchg
insl
jle
or
push
pop
sbb
sahf
fisubs
xor
lcall
mov
fadds
ret
in
in
or
pop
push
leave
sbb
ret
sub
jno
shll
ds
aas
cmp
inc
jo
push
inc
mov
sbb
push
aaa
push
sub
sbb
or
aas
ret
xor
inc
outsl
add
xor
stos
push
daa
pop
sbb
cmpsl
jge
or
mov
jbe
xor
cmp
pop
dec
sarb
xor
cmp
ds
pop
and
add
subl
inc
mov
mov
and
mov
pop
cmp
das
pop
pusha
enter
push
or
mov
adc
adc
add
cmp
cs
dec
and
fidivrs
out
jecxz
iret
roll
mov
jo
cs
push
repnz
mov
hlt
pop
stc
jbe
cli
daa
addb
aad
mov
lods
lret
das
pop
mov
ficomps
push
ret
in
push
jo
jo
subb
inc
cmp
cmp
add
add
or
mov
es
cmovge
bnd
sbb
sbb
inc
sub
push
js
or
aaa
loope
fiadds
add
mov
push
ss
out
and
js
lcall
and
lock
xor
test
outsl
and
mov
repnz
cltd
push
adc
adc
popf
adc
js
or
pop
or
popa
ficomps
mov
cmp
adc
orb
or
out
sub
mov
sub
sbb
jmp
cmp
or
dec
int3
inc
jnp
daa
xchg
or
dec
dec
in
add
dec
pop
in
lea
or
sahf
xor
inc
cmp
jg
notb
daa
push
mov
fnstcw
xchg
push
adcl
adc
inc
insb
or
aaa
outsl
or
popa
iret
mov
out
xor
das
fstps
xchg
pop
mov
lods
dec
jno
sub
mov
cmp
push
pop
mov
inc
add
pop
mov
or
pshufw
cmp
movsb
cwtl
popf
pop
sub
sub
cltd
cltd
push
repnz
insb
or
xor
jns
xor
push
xchg
xor
cmc
lahf
test
xor
add
dec
and
push
sbb
or
add
or
or
inc
cmp
push
inc
cmp
rcr
inc
push
mov
cmp
pop
inc
dec
pop
inc
add
int3
fiaddl
fistps
inc
add
cs
push
dec
add
sub
arpl
mov
add
add
adc
clc
movsl
push
push
scas
push
add
rclb
iret
iret
out
das
outsb
sub
sub
or
adc
pop
outsb
add
pop
jle
pop
jbe
cmp
and
das
fistl
adc
cmp
xor
test
into
fincstp
adc
sub
push
or
cmp
push
imul
popf
xchg
mov
mov
dec
ret
mov
sbb
adc
jnp
ja
sbb
fldt
sub
insl
sbb
mov
inc
sub
pop
xor
cs
and
push
jae
pop
adc
popf
sbb
aam
out
adc
pop
sub
xor
insl
xchg
xor
test
loopne
aam
cmp
and
cmp
xchg
inc
push
jbe
test
push
add
cmp
add
pop
repnz
lods
scas
push
fiaddl
push
rcrl
dec
fwait
push
pop
mov
mov
xor
xor
adcl
dec
add
sub
mov
test
pop
imul
and
mov
dec
lods
pop
jo
xor
adc
mov
inc
cmp
xor
inc
push
inc
xor
les
push
adc
sbb
loope
mov
movq
or
std
rcll
cmpsb
dec
dec
push
add
mov
dec
je
call
and
inc
fcomps
adc
incl
aas
dec
push
pop
dec
cld
adc
cs
cmp
ret
push
push
gs
push
adc
inc
inc
test
inc
sbb
nop
jae
push
ljmp
sbb
pop
icebp
add
pop
mov
or
rorb
inc
dec
ss
movsb
cmp
mov
das
adc
adc
daa
push
addr16
ja
push
adc
add
xor
aam
pop
insb
dec
ss
lcall
icebp
aaa
jo
insl
or
sub
clc
push
add
and
push
adc
call
sbb
sub
insb
data16
ja
fs
push
dec
xlat
gs
outsl
jb
jp
filds
lods
pusha
adc
outsl
inc
add
rolb
addr16
lods
push
mov
pop
mov
xor
mov
inc
cmpsb
and
outsb
pop
movsl
bound
sub
imull
mov
add
movb
mov
cmp
push
xor
inc
int
shll
insb
ss
sbb
fidivl
sahf
out
fldl
mov
fisubs
push
out
push
nop
in
out
push
leave
cli
inc
mov
les
or
dec
dec
mov
push
aaa
shlb
mov
ds
adc
and
mov
add
adc
outsl
mov
shlb
movsl
enter
push
push
mov
inc
push
insl
ss
adc
xor
or
mov
sub
sub
mov
mov
sbb
mov
ds
pop
sbb
push
pop
subb
add
lahf
jo
fsubs
sbb
cld
lcall
mov
pop
dec
xchg
pop
shl
dec
push
fadd
push
testb
add
jg
pop
inc
cli
or
aaa
aaa
mov
and
lock
dec
cmp
sti
push
and
dec
js
push
add
in
sbb
out
pushf
mov
imul
imul
imul
clc
add
cmp
out
push
xor
jae
pushf
enter
iret
and
cwtl
mov
adc
js
mov
insb
inc
int
mov
js
cmp
ss
add
or
lock
ds
pop
int3
shlb
call
pop
mov
jnp
cmp
xor
mov
xor
xor
inc
xor
xor
inc
xor
inc
push
xor
adc
outsl
shr
cmp
fdivrl
adc
add
mov
sahf
xchg
push
add
pop
pop
mov
aam
inc
das
js
and
pop
fidivs
jne
je
xlat
xchg
sbb
jbe
push
push
or
jo
jg
or
cmpsl
push
insb
popa
outsb
lock
gs
daa
cs
aaa
mov
and
adc
pop
adc
and
lock
testl
and
mov
xlat
das
fisttps
push
sbb
out
dec
fnstcw
rorb
inc
fs
add
sbb
sub
sbb
iret
rorl
test
daa
push
data16
add
xor
jge
sub
dec
dec
adc
pop
push
add
cmp
cmp
faddl
pop
jbe
movsb
add
mov
pop
mov
jge
imulb
mov
and
inc
pop
xor
cld
and
das
xor
dec
rolb
or
pusha
sbbb
mov
xorb
iret
push
in
das
push
daa
jge
cmove
xor
xchg
pop
fistl
enter
pop
add
jle
push
inc
add
pop
fwait
cmp
out
mov
push
imul
fisubrs
idivb
inc
inc
outsl
sub
jae
pop
ljmp
out
sahf
sub
outsb
in
out
in
dec
es
push
scas
imul
xchg
mov
repz
popf
pop
jb
jg
clc
lcall
mov
pop
fcoml
out
flds
pop
or
sbb
jbe
jl
or
pmaxub
mov
daa
sarl
dec
inc
inc
scas
xchg
dec
mov
leave
sahf
cmpsb
inc
pop
imul
ficomps
data16
dec
into
filds
test
and
fisubs
cmpsb
divb
mov
out
mov
or
call
xor
clc
inc
pop
andb
iret
repz
xchg
mov
push
pop
jmp
inc
cltd
push
mov
and
pop
jnp
outsl
testb
sub
cmp
sbb
addr16
sarl
mov
push
or
push
sbb
sahf
out
sub
mov
lea
jns
out
sbb
push
sahf
mov
int
testb
and
pop
sub
js
cmpsl
xchg
push
sub
inc
cmp
mov
push
aaa
mov
int
sub
cmp
cmp
cmpsl
jge
cs
adc
insb
lahf
negl
pop
int
push
push
push
push
jmp
sub
in
pop
test
push
dec
iret
xor
in
repz
fadd
jnp
ljmp
out
cs
jns
cmp
sbb
push
push
movsl
sarl
mov
dec
dec
repz
mov
fidivs
add
das
fists
cmp
mov
testl
aas
outsl
mov
sahf
cmpsl
stc
cmp
adc
cmp
ds
jns
loopne
and
sahf
out
xor
xchg
mov
ds
mov
addr16
incl
or
dec
sbb
scas
sub
adc
inc
mov
stc
add
adc
or
ljmp
popa
stc
push
mov
xor
adc
mov
pop
mov
or
scas
int
mov
fadd
cs
outsb
and
push
pop
mov
add
idivb
adc
imul
and
pop
sbb
enter
adc
out
test
or
adc
daa
add
bound
or
ret
nop
add
dec
add
nop
cltd
into
mov
dec
loopne
inc
and
outsb
push
outsb
xor
mov
aas
inc
push
inc
imul
inc
sbb
mov
je
addr16
push
mov
cmp
cmp
cmp
fisubl
push
fidivs
push
jae
dec
fisubl
mov
in
mov
insl
push
ljmp
cmpsb
dec
add
push
in
lea
push
scas
xor
je
jns
push
loop
out
push
fisttps
jp
das
push
loope
enter
outsb
push
inc
pop
ja
imulb
iret
push
pop
retw
sub
jnp
dec
or
es
sbb
inc
dec
cwtl
lock
outsl
push
insb
in
and
sbb
or
stc
mov
push
ds
pop
push
das
adc
out
fisubs
jo
movb
je
sub
jns
addr16
jo
jae
es
outsl
and
cmpb
sub
fnsave
cmpsb
mov
mov
repz
xor
xor
xor
xor
xor
cmp
cmp
mov
xor
xor
cmp
push
add
and
xor
xchg
invd
pop
es
into
std
fimull
or
add
lock
push
dec
or
cmp
add
out
xor
jne
mov
pushf
dec
es
sbb
xor
int
xor
sbb
dec
mov
dec
daa
pop
adc
rcrl
ljmp
sub
inc
in
pop
and
cmc
xor
xor
rorb
out
or
add
mov
stc
add
lret
or
loope
add
add
and
fs
adcl
jl
push
pop
xor
js
lods
les
in
int
call
pop
inc
pop
or
dec
or
pop
int3
and
cmp
lock
dec
sbbl
jge
repz
xor
or
mov
pop
clc
inc
jbe
out
sub
repz
clc
jecxz
push
add
inc
push
sbb
and
addr16
add
dec
mov
repz
or
xchg
data16
insb
or
pop
or
int
or
adc
adc
sbb
and
fwait
int
sub
xor
inc
mov
mov
jnp
mov
mov
mov
insb
popa
xchg
sbb
sub
ss
int
add
or
adc
int
shll
pop
add
add
push
dec
str
add
stc
das
call
frstor
fisubrs
jp
imulb
dec
push
add
stos
loopne
pop
inc
inc
lods
das
sub
add
scas
daa
and
arpl
inc
das
daa
or
adc
xor
mov
add
and
arpl
test
cmp
push
subb
add
push
dec
push
jo
xchg
in
cmp
aaa
lds
lods
mov
dec
push
aaa
inc
pusha
or
mov
and
add
insl
mov
stos
bound
and
push
js
subb
das
fisubrl
pop
divl
iret
pop
les
sub
push
loope
adc
adc
jno
push
lds
sub
popa
mov
test
daa
pop
xchg
lds
das
dec
out
fiaddl
test
adc
js
js
pop
and
pop
xor
je
shll
and
iret
adc
push
lock
mov
scas
lods
loopne
imul
daa
lahf
push
jo
loopne
xchg
outsb
ficompl
addb
pop
int
xor
addr16
out
arpl
pop
push
lods
xor
sbb
popa
pusha
in
jmp
or
and
jno
fisubrl
lcall
cltd
push
daa
inc
pusha
or
imul
les
add
andb
jb
cmp
js
xchg
xor
jl
jl
icebp
mov
pop
movb
test
outsb
imul
bound
xor
or
adc
add
int
cmpsl
cmp
cmpsl
xchg
insb
sbb
pop
push
sbb
cltd
xor
push
sub
dec
add
mov
adc
cmpsl
stc
pop
pop
int
fsubrs
jnp
das
add
or
adc
or
das
xchg
int
je
sar
jo
mov
je
jo
pop
adc
or
je
xchg
pop
or
add
or
adc
jbe
and
push
and
pop
lahf
or
adc
das
cmp
test
push
bound
es
addr16
jnp
inc
subb
push
es
cs
dec
adc
mov
pop
and
std
in
or
mov
push
shrl
dec
inc
sbb
je
pusha
mov
push
pop
inc
rorb
push
jmp
inc
pop
inc
push
xlat
add
or
mov
add
mov
xor
negl
das
bound
das
inc
es
adc
xchg
inc
inc
mov
movsl
mov
iret
push
testl
sbb
add
gs
dec
add
into
cli
ret
call
mov
lock
adc
andl
aas
in
xorl
shlb
cmpsl
mov
jmp
fstl
sbb
int3
outsb
shr
aas
dec
xorb
adc
arpl
scas
adc
cs
cmp
cmp
sbb
mov
aas
pop
rcrl
mov
mov
mov
inc
add
pop
pop
push
jbe
add
das
pop
jnp
mov
mov
mov
add
dec
sbb
add
push
pusha
push
fcoms
xor
iret
sub
data16
js
les
inc
test
adc
sbbl
fisubl
hlt
sbb
mulb
inc
lret
pop
and
cmp
inc
clc
pop
call
movb
pop
xchg
add
jp
lcall
pop
dec
test
sarl
flds
movl
mov
push
adc
sbb
test
pop
push
add
les
rcll
inc
xlat
push
loope
test
push
add
mov
or
xor
push
rcrl
rcrl
xor
sbb
and
pop
inc
inc
jmp
lods
push
inc
in
pop
inc
pusha
xchg
test
xlat
ja
test
dec
push
xor
and
jae
and
mov
cs
sbb
cmp
movsl
js
scas
ljmp
pmuludq
push
dec
inc
push
pop
dec
sbb
jne
xlat
or
jb
jo
push
jo
and
cs
jl
jbe
fs
mov
hlt
jbe
cs
add
rorb
dec
sbb
and
or
add
movsl
mov
push
pop
adc
push
outsl
dec
push
add
add
push
push
and
or
inc
adc
push
inc
aas
pop
adc
add
es
fidivrs
sbb
ds
push
cs
push
or
insb
loope
inc
inc
inc
inc
pop
dec
and
inc
dec
sbb
inc
stos
incl
sbb
add
inc
dec
es
pop
or
inc
pop
dec
push
or
sbb
sub
push
push
sbb
lret
outsl
decl
cmp
and
sbb
sub
mov
inc
pop
popa
mov
pop
sub
xchg
mov
sbb
push
xor
sbb
inc
adc
das
or
cld
lcall
inc
aas
push
inc
or
cmp
push
sbb
inc
push
push
inc
adc
pop
and
das
and
pop
and
adc
push
insl
xlat
pop
inc
sub
jne
shll
and
add
ret
push
add
adc
pop
push
and
pusha
scas
jne
cmpsl
push
mov
rcrb
daa
dec
push
add
pop
sti
and
cmc
cmc
push
les
movb
pop
sub
inc
mov
inc
inc
inc
pop
js
mov
sahf
xchg
mov
push
out
add
lea
or
pop
adc
mov
cmp
pop
les
pop
stc
xchg
push
push
dec
mov
mov
adc
popa
pop
mov
sbb
xorl
les
andl
test
test
incb
jg
dec
jo
cmp
push
movd
push
push
inc
push
js
push
dec
mov
add
adc
mov
out
mov
pop
cwtl
das
mov
inc
aaa
jno
sti
shlb
ret
dec
pop
push
adc
pop
movsb
cmpb
aad
sbb
cwtl
stos
pop
fdivr
fildll
and
jge
push
je
mov
andb
fwait
rol
fwait
in
or
incl
popf
rorl
and
sub
sub
decl
test
stc
jbe
push
ds
insl
xor
jg
mov
inc
xchg
cmpsl
lcall
arpl
push
sub
adc
or
cld
insl
sub
adc
decl
gs
leave
ret
sub
xchg
mov
data16
mov
call
xchg
shll
cltd
test
push
push
shll
ja
daa
mov
mov
mov
ljmp
dec
stos
fmuls
lret
rep
cs
arpl
test
incl
mov
mov
movsb
mull
jno
addr16
push
scas
addr16
cmp
push
dec
movsl
jg
push
push
mov
fwait
stos
flds
pop
insl
jl
pop
push
dec
and
cmp
mov
rorb
xor
inc
insb
sub
push
sub
cli
mov
jnp,pt
aas
ja
arpl
dec
jo
cmp
bound
sub
adc
je
push
cmp
outsb
jns
cmp
pop
inc
or
and
push
bound
test
ljmp
xor
imul
or
push
push
daa
push
xor
dec
dec
add
ficomps
push
dec
sub
mov
mov
push
push
push
into
lods
sbbb
push
pcmpeqw
inc
pop
aaa
pop
push
jne
addr16
daa
pop
daa
and
adc
cli
xchg
pop
inc
xor
mov
sbb
mov
dec
pop
push
and
cs
xor
inc
add
xor
xor
push
inc
add
mov
inc
inc
xor
and
aaa
inc
push
inc
mov
dec
inc
ss
mulps
outsb
mov
ss
cmpsl
ss
push
fisubs
pop
je
and
loope
cmp
ja
es
aam
inc
push
bound
xor
sbb
aaa
pusha
xor
dec
mov
inc
cwtl
divb
xlat
push
leave
push
scas
bound
or
inc
inc
dec
dec
push
jle
lock
xor
mov
mov
sbb
outsb
inc
insl
cwtl
xchg
ds
iret
fnstcw
ret
sub
iret
nop
jle
das
maxps
sbb
das
mov
dec
xchg
push
sahf
inc
push
insb
lds
bound
inc
sub
xor
rclb
js
and
mov
addl
xor
pop
aaa
push
aas
inc
cmpsl
add
sbb
sbb
cs
pusha
dec
pop
rcll
sub
popf
sub
mov
push
sbb
call
fsubrs
loop
sub
clc
inc
pushf
pop
gs
xor
mov
adc
inc
mov
sub
es
adc
dec
popa
cmp
scas
out
and
fadds
jnp
cmp
jmp
addb
and
mov
sbb
xchg
adc
and
push
popf
and
jmp
add
mov
push
pop
fildl
xor
mov
mov
dec
js
loop
mov
mov
mov
jmp
adc
cmp
icebp
mov
fsubs
cmp
orb
sahf
and
pushf
enter
addl
dec
mov
lds
or
das
ret
movsl
aad
add
inc
rclb
dec
add
addr16
outsb
outsb
je
xor
js
cmp
int
xor
jae
popa
insl
gs
ret
cmp
xor
shll
cmp
mov
outsl
imul
fdivs
insl
loop
inc
push
sbb
xor
icebp
out
testb
int
inc
outsl
insb
dec
push
popa
je
xchg
push
rclb
out
fstp
clc
sub
and
adc
negb
add
push
gs
and
mov
mov
adc
or
mov
ds
les
sub
test
xor
cmpsl
outsb
test
ds
add
lahf
call
iret
mov
aas
and
shrb
push
jae
and
fcmove
dec
cmp
fmull
push
sbb
in
pop
add
xor
mov
xchg
scas
xor
fcoms
js
sarl
mov
nop
cmp
sbb
adc
sbb
ja
push
xchg
pop
xor
xlat
xor
push
rcl
pop
nop
ds
add
test
push
dec
dec
popa
dec
stos
pop
push
les
call
jb
pop
repz
push
inc
lock
int
pop
inc
jne
ds
xor
and
and
mov
cmpsl
ds
cmp
mov
test
sub
inc
inc
add
pop
xor
ss
clc
push
inc
dec
or
call
insb
mov
std
aam
loope
hlt
xchg
fs
jo
cltd
fs
or
stos
push
outsl
imul
mov
push
and
arpl
push
ds
jecxz
inc
addr16
push
cmp
push
aas
in
pusha
pop
inc
fisttps
stc
add
das
aad
jo
scas
dec
pop
arpl
and
cmc
and
and
push
jnp
repnz
xchg
sub
adc
ds
and
xchg
aam
cmp
dec
mov
pop
mov
out
lea
and
sub
shrl
push
xlat
fs
pop
sahf
sbb
pop
adc
sub
sub
push
jmp
sbb
ljmp
xor
dec
mov
add
inc
add
sub
shlb
je
push
mov
or
add
mov
or
test
adc
mov
inc
add
lods
ficompl
fildl
pop
pop
pop
aas
dec
shlb
hlt
inc
aas
lea
mov
push
out
pop
pop
pop
push
pop
stos
enter
notb
mov
sbb
pop
mov
orl
mov
cs
mov
cmpsl
xchg
lea
xor
pop
mov
xor
stos
sbbb
cmp
inc
lods
dec
mov
rorb
or
mov
sub
and
rorb
mov
inc
and
inc
add
or
add
cmp
sar
mov
shlb
jne
jg
aaa
shlb
jne
or
lods
push
loopne
outsl
xchg
mov
add
push
mov
push
popa
pop
outsl
jne
imul
outsl
and
mov
lret
inc
out
and
or
punpckhwd
dec
outsb
push
je
insb
rolb
pop
add
pushf
test
push
push
inc
dec
push
inc
pop
push
dec
inc
dec
inc
push
pop
shlb
xlat
jb
gs
sub
inc
mov
fwait
pusha
rorl
daa
dec
jo
popf
loopne
dec
jb
addb
sub
aas
dec
mov
mov
or
loop
adc
mov
or
mov
mov
mov
pop
add
xchg
push
xorl
mov
add
ja
add
notb
sub
addl
inc
es
insl
dec
fs
inc
fsub
push
mov
mov
add
jae
pop
addr16
push
push
iret
and
stos
ret
js
sbb
out
mov
adc
and
out
sahf
cs
pusha
add
lcall
xor
push
ja
pop
cmp
or
xchg
movsl
dec
outsb
jbe
icebp
push
clc
sbb
dec
or
push
lea
sbb
xor
or
sbbl
sub
pusha
cmp
sub
add
out
dec
rsqrtps
loopne
and
dec
dec
cmc
cmpsl
imul
and
pusha
and
and
pop
cmp
and
jns
jo
inc
lret
and
adc
pop
lock
sbb
mov
fdivrs
lods
or
fsubs
jno
inc
or
or
mov
push
cmpsl
mov
jb
enter
or
mov
inc
sbb
adc
xchg
dec
stos
jp
sbb
inc
dec
sbb
inc
js
adc
jne
mov
sbb
test
shlb
mov
mov
stos
loop
sbb
dec
sub
xlat
outsl
in
cmp
or
jo
std
scas
jb
mov
push
push
sbb
cs
dec
and
outsb
in
mov
or
adc
sbb
js
mov
inc
mov
push
cmp
push
in
and
inc
outsw
insl
pop
xor
dec
mov
clc
in
and
xor
push
mov
dec
dec
adc
mov
outsb
jle
pusha
sbb
gs
ljmp
outsl
imul
add
iret
popf
push
in
dec
push
mov
aad
mov
pop
fcomps
mov
cs
dec
dec
dec
dec
mov
orb
dec
xchg
dec
inc
xadd
cmp
inc
outsl
mov
in
xor
inc
sti
fdivr
sahf
adc
cmpb
aas
mov
sub
insl
pop
pop
inc
dec
add
xchg
popa
mov
xchg
fstps
roll
es
xor
add
fsubl
add
mov
push
addr16
movsb
mov
daa
add
push
repnz
movsb
add
iret
mov
leave
add
mov
jg
daa
test
lods
mov
inc
push
dec
xchg
stos
rolb
add
jl
pop
stos
shrb
xchg
daa
aas
jg
int
arpl
outsl
mov
dec
scas
in
inc
inc
in
scas
in
xor
scas
in
scas
sub
and
scas
in
add
push
daa
insb
fwait
mov
mov
aaa
push
jo
xor
iret
rcll
ds
inc
sarb
or
ds
sub
int
stc
fdivrs
test
jns
testl
sahf
cmp
cmp
jo
ds
mov
movb
pop
jl
adc
out
pusha
inc
sub
push
lea
pop
aaa
add
push
es
rclb
dec
pop
rcrb
cmp
add
movsb
stc
cmp
fmuls
add
push
push
repnz
add
popa
ret
xchg
mov
ss
mov
mov
push
cmp
shrb
dec
pop
leave
mov
pop
dec
inc
mov
fsubrs
in
cmp
fisubrl
leave
add
mov
and
in
in
xchg
mov
dec
inc
lock
loopne
mov
das
xchg
in
outsl
add
inc
or
or
and
cmp
int
cmp
add
dec
xchg
leave
rcrl
cmp
cmp
dec
add
cmp
xchg
or
shl
scas
add
outsl
out
pop
jb
pop
xor
inc
ret
leave
mov
mov
xor
pushf
orl
fsubs
jb
fsubrs
leave
push
lods
fs
xor
nop
pushf
pop
enter
dec
repnz
cmp
enter
ss
sub
adc
sarb
xchg
sub
cmpsl
cmpb
jns
inc
sub
cmp
ds
jnp
or
mov
inc
lods
fs
or
ss
push
jg
sbb
push
xor
out
ja
or
add
leave
push
ja
push
or
mov
repnz
hlt
cmp
ds
popa
dec
outsl
add
and
outsl
and
or
jmp
or
sbb
jbe
push
xor
scas
add
push
sbb
int3
outsl
out
js
jo
mov
pop
dec
out
add
xlat
mov
adc
push
aaa
push
pop
mov
aaa
mov
shrl
outsl
mov
decl
insl
outsl
pushf
push
movsb
daa
add
bound
in
pop
inc
jnp
cmovle
mov
int
imul
test
mov
push
push
add
mov
xchg
fimuls
mov
sbb
add
jbe
sub
and
mov
dec
and
enter
stos
fnsave
push
push
outsl
add
adc
push
pop
inc
xchg
daa
testl
push
cmp
push
pushf
inc
lods
inc
nop
repz
xbegin
push
inc
sub
sub
xchg
push
cmp
inc
mov
adc
test
inc
lahf
stos
popa
or
xlat
or
imul
inc
mov
daa
inc
addr16
xlat
or
loopne
pushf
fs
jl
loop
shrl
inc
add
fimull
xor
popa
xor
outsl
and
sub
fdivs
add
inc
cld
jno
xchg
cmp
cwtl
inc
divl
xor
add
xchg
mov
xor
aaa
xor
sbb
add
and
outsl
mov
add
add
adc
push
xchg
cmp
and
xchg
pop
mov
leave
lods
mov
push
repnz
mov
aad
sbb
sub
jb
insl
fdivrs
addr16
enter
pop
insb
je
adcb
sub
test
incl
out
jnp
push
in
test
das
outsl
pop
leave
mov
or
bound
pop
pop
adc
inc
pop
mov
ss
jo
push
inc
dec
and
adc
add
testl
push
fsubl
test
iret
dec
xchg
add
iret
cltd
mov
out
fs
daa
or
mov
pxor
push
setbe
pop
mov
push
pushf
movb
dec
aam
in
jns
andb
and
or
nop
push
xchg
mov
xchg
sbbb
scas
cwtl
xchg
or
aas
or
movsb
adc
sub
cmp
push
dec
movsb
xchg
or
outsl
add
ss
pop
or
fistps
mov
or
dec
add
ss
cmp
lock
cmp
orb
insb
jo
scas
add
push
sbb
je
out
dec
xchg
popl
pusha
imul
out
lahf
sub
sbb
or
mov
inc
and
daa
or
mov
mov
adc
push
mov
push
mov
push
adc
out
inc
xlat
mov
jl
mov
mov
xlat
mov
roll
push
call
push
and
cwtl
aas
add
inc
aad
mov
inc
dec
das
push
ja
insl
and
adc
outsl
sub
mov
adc
push
repnz
int3
add
data16
iret
les
push
das
push
sbb
sub
daa
sbb
push
in
ds
addr16
pop
ret
aas
pop
jl
data16
js
cmp
cmp
fdivrs
push
loopne
sbb
ret
out
cli
and
pop
xor
lahf
out
loope
dec
aas
iret
repz
jge
mov
hlt
bt
lcall
dec
stc
cmp
roll
push
jb
or
jl
cmpsl
pop
cmpsb
icebp
inc
dec
push
imul
dec
inc
arpl
out
sahf
cmpl
sarl
push
xchg
icebp
dec
push
jne
stc
cmp
test
addr16
sarl
ret
inc
pop
js
out
cmp
lret
sub
test
fdiv
push
push
outsb
xchg
jns
iret
repz
push
outsl
cmpsl
repz
out
in
push
xchg
out
ds
mov
xchg
iret
repz
sti
das
pop
pop
je
rorl
imul
pop
xor
cmp
pop
pop
aaa
push
mov
pop
rorb
movb
xor
out
pop
roll
pop
mov
out
pop
pusha
cs
clc
sub
rcrb
inc
andl
sarl
jne
mov
stc
sub
fists
dec
jns
iret
repz
fsubs
stos
cmp
repz
xorb
dec
imul
stc
cmp
cmpsl
push
adc
and
jl
cmpsl
dec
mov
push
outsb
mov
imul
outsl
ds
cmpsl
stc
cmp
push
jo
lret
bound
out
ss
loopne
jb
jae
mov
ficoms
je
jnp
es
out
jne
push
jbe,pt
test
ja
lcall
jo
int
jns
xor
push
mov
lahf
cmpsl
stc
cmp
push
jnp
enter
iret
repz
xchg
out
jge
lahf
out
imul
in
fdivrs
subb
xor
cmpsl
stc
or
aad
lahf
cmpsl
stc
pop
adcl
lcall
rorl
pop
jl
xchg
ja
out
repz
imul
daa
mov
fwait
dec
repz
xchg
lock
cmpsl
stc
push
xchg
jns
cld
dec
xchg
xor
cmpsl
fsts
cwtl
mov
out
xor
imul
fisttpl
fwait
pop
repz
out
xlat
cmp
out
popf
cwtd
hlt
and
imul
push
adc
adc
cmpsl
fldcw
test
ror
ror
rcl
lods
pop
scas
add
and
inc
xchg
je
das
jo
mov
mov
outsb
add
add
mov
jmp
mov
mov
add
ljmp
and
jnp
rcrb
pop
paddq
lret
jmp
aas
inc
es
dec
in
rcr
and
int3
loop
or
in
inc
fwait
push
icebp
inc
fsts
decl
inc
push
push
and
mov
push
aaa
jbe
scas
or
or
xor
aaa
or
subb
fimull
in
add
mov
or
enter
out
push
pop
mov
cmp
and
dec
aas
cmp
fimuls
push
aas
cs
inc
nop
push
inc
pop
lahf
fdivs
push
push
pop
push
stos
dec
push
inc
jno
jg
cmpl
cltd
bound
iret
sarl
push
in
inc
cmp
aas
in
stos
mov
lcall
cmp
inc
jle
ss
mov
or
mov
mov
repnz
es
push
jno
mov
leave
sbb
push
xchg
push
jb
adc
scas
jnp,pn
inc
lcall
inc
mov
fnstcw
inc
push
inc
je
out
mov
pop
testb
dec
push
or
sbb
into
jl,pn
bswap
mov
iret
ds
adc
sub
leave
test
cld
mov
rcrl
loopne
sub
lds
jmp
call
test
mulb
dec
pop
aas
int3
popf
cs
push
and
and
inc
jb
iret
cmc
sub
sub
adc
pop
add
and
pop
jle
divb
pop
nop
or
jo
inc
ffree
popf
pop
mov
call
outsl
ljmp
dec
cld
pop
in
pop
or
dec
push
mov
scas
dec
add
pop
incl
adc
aas
mov
cmpsb
mov
push
out
loopne
inc
int3
sub
mov
fisubrl
push
pop
fwait
inc
jne
leave
inc
xor
rcll
sahf
mull
flds
add
cld
add
fs
and
dec
adc
movsb
xchg
cmp
mov
push
add
xchg
dec
pop
jb
adc
leave
sub
inc
testl
push
mov
cmpsb
in
xlat
test
dec
leave
mov
pop
adc
xchg
dec
lock
and
addr16
pop
out
add
xor
xchg
and
jbe
mov
in
fmul
in
cmpl
xor
inc
lret
inc
cmp
add
fistps
or
add
jg
pop
rorl
push
mov
cmp
push
movsb
mov
push
icebp
add
inc
in
pop
xchg
push
xlat
or
divl
jmp
cmp
lret
dec
dec
loope
in
push
cmpsl
stc
cmp
add
add
dec
add
or
and
cs
xchg
or
dec
mov
or
add
repnz
in
xchg
in
pop
inc
scas
aam
inc
xor
inc
dec
pop
cmp
pop
daa
iret
roll
jae
dec
ds
pop
mov
pop
leave
enter
dec
rorl
jns
lahf
hlt
dec
decl
xchg
dec
sub
jbe
enter
dec
push
dec
cmpsl
push
daa
daa
adc
cmp
jle
and
xchg
sahf
daa
daa
pop
leave
mov
leave
shll
loope
jbe
pop
leave
loopne
dec
unpcklps
sahf
fldt
pop
and
sub
xor
lods
fwait
cmp
daa
popa
mov
in
jns
push
add
mov
mov
xor
dec
aad
add
call
dec
shlb
test
enter
bound
andb
loopne
pop
push
mov
push
addl
sub
mov
arpl
mov
push
daa
mov
add
mov
jae
nop
inc
dec
jo
arpl
mov
fcoms
sbb
add
pop
out
cmp
daa
nop
dec
mov
dec
fs
fs
iret
xchg
mov
addr16
outsl
dec
dec
xchg
pushf
in
ja
jg
nop
fs
in
lods
xchg
mov
les
add
fsubl
inc
das
and
and
gs
pop
push
and
dec
sbb
dec
pop
pop
pop
pop
cs
cmp
dec
dec
dec
out
pop
pop
pop
dec
gs
jo
or
or
sahf
out
pushf
or
jns
out
mov
out
sahf
rcll
ficoms
in
adc
int
jns
adc
lock
repz
and
xor
and
cmp
js
fimull
jo
je
push
nop
jbe
xchg
dec
mov
mov
inc
pop
popf
enter
ja
cmp
pop
adc
je
push
pop
inc
addr16
pop
and
add
int3
ds
es
and
sbb
pusha
addr16
push
xor
enter
push
daa
push
out
daa
nop
iret
add
push
add
inc
aas
and
add
mov
pop
and
addr16
call
push
xor
or
mov
mov
fdivl
in
enter
filds
nop
sub
push
popf
in
push
int3
push
pushf
xchg
push
imul
les
scas
pop
add
mov
adc
fwait
mov
addr16
insl
xchg
adc
push
in
lock
js
mov
inc
pushf
out
fimuls
add
add
jns
call
adc
iret
in
and
add
xchg
pop
nop
cwtl
rcrb
push
mov
aam
das
and
imul
adc
sbb
and
push
outsl
push
push
iret
xchg
addr16
int3
les
add
lahf
xchg
push
mov
pushf
pop
inc
dec
xchg
push
pop
pop
mov
mov
repnz
call
sbb
clc
jg
mov
mov
xor
daa
push
jb
add
mov
mov
fiaddl
mov
inc
xor
adc
jne
jns
insl
xchg
push
setg
pop
mov
cmp
mov
dec
pushl
and
xchg
push
roll
push
lock
movsb
mov
push
pop
ja
mov
ret
add
sbb
adcl
push
pop
lods
iret
dec
fidivl
xlat
loop
inc
ret
dec
shrb
sbb
leave
sub
hlt
outsb
adc
and
cmp
repnz
push
iret
in
bnd
mov
pushf
pop
lret
por
repz
pop
cmp
jns
pop
adc
pop
in
jns
insl
test
jo
and
daa
sbb
jo
fs
nop
inc
repnz
scas
jb
pop
enter
hlt
inc
dec
faddl
push
aaa
pop
mov
jno
out
jb
adc
negb
pop
push
pop
lret
dec
cmp
pop
push
pop
push
pop
pop
pop
pop
mov
pop
ss
ds
pop
pop
pop
pop
inc
pop
dec
pop
push
pop
pop
pop
pop
pop
pop
pop
pop
outsb
pop
jbe
jle
leave
dec
mov
pi2fd
leave
leave
leave
leave
or
or
leave
leave
leave
leave
or
push
add
add
add
xchg
dec
scas
leave
add
and
jbe
frstor
mov
cmpsl
mov
add
pushf
jb
setb
negl
sbb
in
shll
push
pop
xchg
out
jb
pop
pusha
ja
inc
repnz
sbbl
inc
mov
mov
pop
fistpll
out
out
push
mov
idiv
or
int3
mov
pop
testl
push
add
push
cmp
loopne
pop
das
bound
jbe
es
ja
iret
xchg
push
repz
inc
test
iret
aaa
xchg
les
add
ret
popf
pushf
je
lret
dec
or
pop
repnz
cli
or
or
inc
ds
das
ljmp
xchg
repnz
stc
dec
inc
fldl
and
dec
push
inc
repnz
cmpl
push
add
push
jl
jne
pop
or
ja
push
daa
adc
daa
mov
or
mov
xor
jb
pop
inc
push
add
dec
sahf
out
add
out
pop
js
into
sbbl
jne
mov
repnz
xchg
add
leave
inc
lock
pop
repz
sbb
and
add
add
xor
pop
inc
pop
or
repnz
jo
js
sahf
out
orl
fmull
mov
add
in
in
loopne
repz
sbb
repnz
pop
pop
push
push
sub
repz
xor
cmp
repz
or
popa
inc
push
cmp
or
or
cmp
and
mov
add
leave
inc
repnz
add
lock
dec
js
sti
xor
inc
sbb
jb
pop
mulps
pop
imul
jno
jns
addl
pushf
xchg
or
lds
or
outsb
mov
hlt
and
hlt
and
sub
pusha
ds
cmp
xchg
pusha
dec
pusha
and
xor
insb
jns
jbe
jb
mov
inc
inc
into
icebp
fsubs
loopne
call
mov
lock
xlat
and
mov
push
popa
rorb
mov
dec
aas
popa
xchg
mov
add
loopne
push
loopne
daa
divb
scas
addr16
sbb
xor
in
sbb
pop
pop
popa
ljmp
push
aaa
outsb
in
bound
testb
xchg
rclb
dec
jnp
add
mov
push
test
mov
mov
jb
pop
pop
loopne
jmp
mulb
inc
mov
arpl
sbb
cmpsl
xchg
iret
or
dec
arpl
enter
arpl
imul
arpl
mov
repnz
pushf
mov
xchg
test
jl
enter
in
cli
add
in
sbb
xor
cmp
cwtl
jl
and
dec
gs
fs
push
fs
push
mov
insb
in
pop
fimuls
out
add
adc
invlpg
aam
push
cmp
jnp
daa
iret
repz
add
jb
jmp
xchg
cmp
inc
gs
and
decw
xchg
dec
repnz
pop
inc
push
jbe
addr16
and
and
push
sub
sbb
mov
mov
cmp
push
add
ja
jg
lods
cmpsl
lcall
rorb
pop
push
add
str
es
ds
or
cs
divps
loopne
nop
cmp
jg
testl
dec
and
xchg
xchg
vpmullw
clc
lock
jb
inc
fwait
fbld
push
cmp
push
inc
js
outsl
push
in
and
sbbl
mov
movsb
addr16
inc
cld
outsb
repnz
flds
add
sub
aas
dec
xor
inc
imul
push
jecxz
sbbb
imul
imul
imul
imul
jecxz
jmp
repz
pop
ud2
or
leave
leave
leave
or
pop
push
leave
leave
leave
leave
add
jns
iret
sbb
push
or
push
adc
repz
sbb
iret
repz
xor
and
inc
dec
and
jo
out
and
fiadds
int3
sub
data16
jns
add
sub
jmp
jecxz
mov
push
pop
cmovle
add
test
imul
in
in
jns
add
cmpsl
pushf
pop
and
push
je
mov
cwtl
imul
test
jmp
cmp
scas
mov
mov
or
shrb
or
popf
cmp
repz
or
call
pop
clc
adc
dec
jo
shrl
insb
xchg
add
repnz
push
xchg
int
cmp
test
inc
es
insb
insb
insb
out
inc
inc
insb
insb
movb
flds
enter
imul
iret
add
outsb
in
out
push
iret
or
insl
sbb
mov
es
mov
js
inc
xchg
xor
daa
xchg
add
testl
rolb
test
dec
mov
push
sbb
cltd
insl
insl
insl
xchg
adc
out
sub
mov
add
insb
xchg
sbb
xor
outsb
inc
outsb
push
outsb
adc
xchg
and
jo
pop
insb
xchg
cmp
mov
test
in
in
cmpsl
mov
mov
in
aaa
lock
outsb
cmpsl
push
cmp
out
pop
add
mov
mov
push
outsb
inc
repnz
dec
incl
mov
push
jb
fmul
add
mov
repnz
mov
sbb
enter
xor
decl
outsl
outsl
insb
pcmpeqb
jns
sarl
push
add
cmp
jns
lods
or
cmp
or
jp
cmp
adc
adc
in
outsl
cmp
jo
pshufw
xor
cmp
pushfw
out
inc
add
cs
cwtl
insb
push
pop
call
or
mov
sbb
pop
nop
aas
fucom
mov
mov
and
cmpsl
scas
xor
sbb
out
aaa
pushf
pop
pmaxsw
jb
ror
push
add
xor
jno
pushf
dec
dec
dec
mov
movsb
lds
test
or
repz
cmpxchg
out
lods
fisttpll
sarb
pop
sub
or
adc
int
or
and
mov
mov
jb
push
pop
adc
jnp
add
add
fmull
lar
scas
push
leave
repz
pop
push
or
dec
push
cmp
pop
mov
jb
xchg
jl
adc
pushf
jb
daa
iret
sbb
aaa
jns
add
int3
pand
fcompl
in
cmp
repz
or
or
add
or
fistps
sbb
and
notl
insl
in
repnz
sahf
out
fisubrs
add
js
sahf
xchg
out
addb
mov
cmc
bound
xchg
ja
mov
push
add
adc
stc
jae
add
jg
repnz
lea
pushf
out
push
jns
mov
das
scas
sub
aas
je
loope
das
dec
je
scas
push
leave
jae
push
add
and
mov
scas
push
jecxz
cmp
inc
dec
jb
mov
test
pushf
pushf
dec
and
jmp
loop
out
add
jne
jne
add
pop
pop
push
jne
jne
or
stos
or
call
and
nop
nop
pop
cmp
pop
jo
pop
lret
lret
lret
lret
js
xorl
cltd
jne
lret
lret
lret
movsb
jne
jne
jne
jne
aad
enter
out
pop
icebp
jne
jae
cmp
jbe
adc
inc
mov
xor
jb
jecxz
nop
das
pusha
jbe
xchg
test
push
mov
push
sbb
jb
fdivs
jbe
jbe
jbe
inc
inc
mov
jbe
ja
sbb
add
ja
std
sbb
or
inc
mov
ja
inc
dec
xor
inc
ja
ja
insl
in
xchg
ja
ja
ja
pop
and
mov
mov
clc
cmp
xchg
ja
cpuid
or
repz
push
xchg
cmp
fildl
ja
in
shrb
sub
fistpll
jns
fcmovne
dec
js
addps
in
inc
cmp
js
movsl
filds
ljmp
call
nop
scas
cwtl
push
pop
cwtl
mov
ja
mov
in
es
add
lret
out
or
sarb
or
cs
xchg
jns
data16
jns
sub
add
xor
jns
fdivrl
movq
inc
repnz
leave
leave
leave
cwtl
mov
jns
test
add
xchg
xchg
mov
fninit
jb
mov
xchg
xchg
jp
outsb
sbb
daa
jp
pop
lsl
mov
add
xchg
cmpsl
jbe
rcrb
jp
or
xchg
out
call
xorl
inc
shrl
fcomi
cmp
cld
xchg
pop
sldt
or
and
sub
and
xor
jnp
jnp
leave
xor
dec
jnp
or
fsubrl
test
cld
cmp
jnp
jnp
jl
mov
scas
pop
shlb
xor
in
cmp
jl
add
mov
jl
rclb
dec
jl
push
jl
jl
cmp
imul
jmp
lar
mov
xchg
pop
mov
ja
push
jo
cmp
mov
iret
add
mov
jae
dec
cmpsb
iret
in
addr16
xchg
mov
and
test
rcll
incl
out
jmp
mov
sbb
jecxz
rcrb
ja
mov
push
repnz
lcall
push
ljmp
aaa
jns
cmc
add
adc
dec
add
mov
int3
jle
jo
stc
dec
aam
fdivrl
aas
setae
jg
sahf
out
push
add
add
add
add
iret
jmp
jg
aas
push
pop
das
aas
xor
add
cs
das
das
push
jg
iret
dec
mov
aas
mov
or
sahf
out
daa
cwtl
ds
mov
out
sbb
jecxz
repz
sbb
sarb
push
dec
push
nop
insb
call
jl
repnz
cld
fwait
inc
daa
sbb
nop
add
adcb
lds
pop
andb
and
push
push
add
addb
pop
nop
leave
repz
cwtl
push
or
cmp
test
mov
movnti
das
lret
adc
adc
and
mov
jb
inc
aad
pop
xor
mov
popf
pop
pusha
outsl
push
sbb
jae
jle
mov
xchg
dec
lahf
into
push
stos
or
leave
push
repnz
lock
in
flds
or
adcb
sbb
iret
repz
sbb
cmp
inc
or
lods
fwait
cmp
clts
pop
add
cmp
repz
sub
iret
repz
cvtps2pd
bound
iret
jae
adc
adc
iret
jae
orb
add
cpuid
sub
jmp
je
aaa
int
mov
ja
hlt
lock
loope
cmp
popl
iret
fwait
pushf
sbbl
and
and
sbbl
iret
repz
cmp
inc
or
movsb
fwait
cmp
xchg
adc
inc
ja
sahf
fcmovne
enter
popl
mov
inc
adc
add
scas
das
add
mov
aas
ljmp
inc
pop
mov
iret
cmp
adc
inc
xchg
or
or
lahf
sbb
jns
or
push
call
test
daa
cmp
mov
sbb
push
mov
into
lock
out
addb
dec
xchg
dec
cs
rclb
add
shlb
xor
mov
popa
test
imul
sahf
orl
cmp
mov
outsl
sidtl
in
mov
test
daa
adc
fcompl
insl
daa
in
seta
mov
mov
xchg
push
aas
cmovns
push
and
mov
mov
mov
xchg
repz
push
add
and
mov
add
xchg
xchg
xchg
xchg
and
jmp
xchg
xor
dec
mov
push
cltd
push
xchg
dec
dec
icebp
in
test
addr16
das
mov
loopne
call
mov
movsb
iret
add
iret
repz
jae
jnp
out
in
daa
lahf
pop
push
cmpsl
push
push
or
leave
repz
or
or
cmp
ucomiss
mov
mov
sbb
mov
mov
mov
mov
push
mov
pushf
cmp
push
add
leave
leave
in
jbe
pop
movd
leave
leave
leave
xchg
mov
repnz
in
in
mov
cmp
leave
leave
leave
andb
cmp
sbb
call
fimull
scas
push
xor
in
daa
dec
push
and
dec
cltd
ljmp
mov
ds
repnz
cs
dec
rorb
xchg
push
mov
mov
mov
cmpsb
jmp
sbb
pop
je
sahf
mov
dec
mov
pop
insl
mov
jnp
dec
push
add
mov
repz
lahf
or
pushf
pushf
pushf
pop
ret
loopne
sahf
pushf
pushf
out
cld
or
and
and
sub
inc
mov
lea
pop
lea
repz
push
jbe
jle
iret
repz
xchg
mov
idivb
repz
or
hlt
cmp
scas
push
push
mov
fidivrs
sbb
subb
cltd
pop
loope
icebp
pop
icebp
movsl
in
popf
pop
pop
stc
add
comiss
das
scas
outsb
and
inc
mov
das
das
das
dec
mov
pop
mov
das
das
das
das
outsb
mov
jle
xchg
mov
mov
stc
cmpsb
mov
jns
stc
jg
mov
mov
mov
mov
les
in
mov
mov
scas
or
and
adc
push
iret
repz
and
and
and
cmp
inc
daa
dec
sub
cmp
repz
or
push
dec
sahf
outsb
cvttps2pi
cs
mov
test
test
cmpxchg
dec
mov
jp
fistps
push
das
jne
in
rorb
pop
xchg
and
sti
adc
sbb
xchg
outsb
repnz
int3
jp
xchg
add
nop
fisttps
xor
stc
inc
stos
pusha
nop
push
jo
orb
in
in
mov
in
jb
xor
push
xchg
push
aaa
push
cmp
jae
pop
gs
adc
ja
jne
dec
adc
fmull
xchg
adc
xchg
fucomi
mov
dec
sbb
sbb
sub
daa
daa
daa
inc
dec
push
and
and
leave
repz
sahf
ds
jle
daa
xchg
mov
cltd
movzwl
mov
js
in
xchg
decl
xchg
pop
adc
xor
push
xchg
out
dec
pop
packuswb
xor
sahf
ja
jg
jg
sahf
cmp
repz
fdivs
loopne
ds
iret
add
add
or
dec
popf
dec
inc
push
add
fdivrl
xchg
add
leave
and
xchg
push
out
mov
pmuludq
xchg
and
xchg
pushf
and
stos
leave
inc
xchg
scas
scas
jo
leave
rep
outsl
jnp
add
iret
pushf
add
add
fstpt
fdivp
cmp
aaa
ud2
jmp
jns
decl
xchg
sbb
push
and
cmp
adc
inc
repnz
iret
adc
pop
push
gs
iret
jae
sbb
sbb
iret
xrelease
xchg
pushf
sbb
cmpsl
mov
mov
cmp
rcr
add
into
jmp
xchg
or
imull
sbb
push
add
cmp
dec
js
mov
cwtl
xchg
mov
mov
push
add
test
mov
sahf
out
inc
das
rorb
fmuls
es
cmp
call
mov
clc
psllw
dec
sahf
out
push
add
adc
and
leave
repz
adc
lar
aam
pushf
out
cmp
insb
outsb
inc
cwtl
cmpsl
in
negl
repz
in
mov
inc
inc
sbb
push
mov
mov
cmp
insl
xchg
cwtl
iret
push
mov
mov
orl
nop
outsl
fwait
cwtl
clc
xlat
in
daa
inc
mov
ds
in
mov
cmpsl
push
fs
lea
sbb
mov
cltd
add
inc
dec
push
subps
insb
xchg
add
rcll
xlat
cmpsl
sahf
out
in
mov
push
in
jns
or
and
in
in
cli
ja
mov
faddl
sbb
add
xor
pop
cmp
jo
xor
dec
dec
or
xchg
fwait
mov
stos
pop
mov
mov
repnz
lret
rorl
daa
daa
pop
leave
js
incb
das
pop
stos
sbbl
xor
cmp
add
cmp
dec
add
push
push
and
je
test
xchg
scas
daa
jp
cmp
dec
fwait
cmp
and
or
pushf
fcoml
add
addr16
scas
pop
sbb
leave
repz
in
fwait
in
pushf
mov
push
pushf
fucomi
ss
pushf
gs
fbstp
mov
filds
pop
popf
xchg
push
daa
iret
or
popf
fsubl
enter
pop
loopne
das
xchg
out
call
popf
jns
outsb
and
bndstx
add
popf
aas
inc
mov
in
popf
dec
push
pop
add
xchg
mov
cmpsb
sub
push
cs
les
int3
jg
ror
fcompl
faddl
mov
jae
or
fwait
in
sahf
insb
addr16
push
mov
sahf
jg
cmp
xchg
add
mov
nop
es
jb
cmp
ja
in
loopne
pop
jo
jmp
lidtl
das
push
add
lahf
in
sub
cmp
inc
lahf
dec
lahf
pop
lahf
fs
mov
lahf
jp
test
pop
pop
pop
fwait
lahf
cmpsb
lahf
mov
mov
pop
lahf
rcrb
pop
pop
pop
pop
repz
lahf
or
pop
pop
pop
mov
setae
leave
dec
sbb
xchg
xchg
xchg
xchg
sbb
pop
push
jns
xchg
xchg
adc
in
sahf
out
sub
sahf
cmp
insb
push
xor
mov
dec
outsl
xor
mov
andb
lea
cwtl
cmp
cmp
cmp
sahf
out
aas
iret
inc
fiaddl
jns
out
inc
lock
sti
fmulp
repz
adc
inc
xchg
out
jns
pop
dec
imul
je,pn
jg
cmp
repz
xchg
dec
mov
iret
repz
mov
ror
cmp
mov
clc
bnd
out
add
jb
jb
and
cmp
cmp
lahf
popa
sub
push
mov
xchg
mov
mov
mov
add
or
cmp
mov
inc
mov
mov
mov
fmulp
push
adc
cmp
lock
add
or
sbb
sbb
and
leave
repz
xor
sbb
ret
xchg
xor
mov
mov
mov
mov
repnz
jae
add
add
ja
fiadds
call
lods
pop
mov
push
repnz
hlt
mov
aaa
mov
movsb
movsb
jns
dec
mov
push
add
cmp
in
clts
pusha
push
mov
sbb
xchg
js
movsb
movsb
vmwrite
add
push
mov
mov
inc
ja
loopne
call
js
movsb
outsl
movsl
inc
or
out
add
out
je
xor
cmp
ss
dec
movsl
push
movsl
pop
mov
xchg
or
xchg
fs
out
daa
mov
in
xchg
mov
pop
lahf
mov
mov
stc
or
shlb
repnz
jns
movsl
in
maskmovq
testl
xor
pushf
dec
pop
sahf
adc
cmove
inc
push
cmc
adc
iret
mov
cmpsb
push
sbb
repz
sbb
cmp
cmpsl
mov
mov
enter
fimuls
bnd
xchg
jmp
daa
or
adc
jg
sarb
cmpsl
pop
push
add
cmp
repz
dec
sahf
ja
push
add
in
sub
inc
shl
movsl
aaa
repnz
add
and
das
sub
sbb
in
movsb
fistpl
syscall
or
mov
scas
inc
test
test
test
shrl
popa
pop
movups
cmp
repz
adc
sbbl
sahf
out
mov
mov
ja
aaa
jns
movlhps
push
iret
rorl
pop
int3
mov
and
in
and
bnd
xor
es
daa
add
jns
fwait
dec
scas
push
sub
adc
jns
out
pop
sub
add
pop
enter
test
or
mov
pushf
xor
ret
das
test
dec
mov
xor
sahf
test
test
pushf
dec
stos
out
cmpsl
mov
dec
test
das
psraw
scas
test
or
inc
dec
jg
stos
sbb
add
out
out
adc
inc
mov
pop
jo
out
sahf
out
add
jns
xchg
pushf
cmpsl
pop
mov
dec
aaa
jns
mov
leave
leave
shll
jle
out
cmp
fucomi
lahf
imulb
stos
xchg
and
pop
stos
and
cmp
cmp
ror
stos
stos
stos
lahf
cwtl
stos
jns
out
mov
mov
outsb
adc
stos
jg
bswap
out
or
fs
adc
lock
addr16
into
lock
lods
mov
out
daa
lods
jae
outsb
and
aas
cmp
jns
leave
dec
push
or
sahf
out
sahf
imul
outsb
cmp
xchg
pop
invd
dec
dec
dec
sahf
adc
ja
mov
xlat
loop
and
dec
sahf
sbb
sti
clts
lods
pop
iret
repz
adc
sbb
or
repz
and
out
jbe
pop
mov
cs
jp
test
xchg
sahf
cmp
repz
cltd
loop
test
lods
das
cs
into
stos
in
add
enter
scas
out
mov
scas
wrmsr
push
push
cmp
jns
sahf
pop
inc
dec
or
xchg
fucomi
pop
punpcklbw
push
sahf
js
adcb
adc
inc
aaa
jns
push
out
cwtl
scas
mov
insl
in
scas
test
mov
fmuls
mov
push
sbb
rcrb
cmp
in
sbb
nop
in
sub
scas
clc
scas
cmp
jbe
scas
pop
or
and
adc
repz
sub
sub
in
daa
iret
sub
inc
push
sub
popf
cmp
pop
push
sub
pop
daa
iret
jae
push
js
orb
nop
scas
scas
ss
xchg
adc
add
inc
push
adc
xor
aas
cmpsl
inc
push
mov
push
or
jp
adc
add
aas
inc
push
push
inc
sbb
inc
push
push
lret
xchg
into
pop
inc
or
popf
mov
aaa
outsl
pop
adc
push
aaa
adc
jns
jnp
push
cmp
pop
xor
xor
jns
out
and
sbb
iret
repz
or
enter
fdivrs
repz
ror
enter
iret
repz
jns
lods
movsb
cwtl
nop
mov
repz
fs
push
repz
repz
inc
cmp
sbb
xchg
or
or
add
lahf
dec
and
jae
jns
mov
add
iret
repz
sbb
jbe
repnz
or
or
mov
mov
or
adc
adc
adc
and
daa
mov
pop
inc
inc
push
addr16
in
jbe
push
xorps
repnz
shrl
jo
jb
mov
andb
cmpb
mov
pop
xchg
sub
mov
xchg
sahf
mov
repnz
add
pop
sbb
xor
add
test
xchg
add
bound
stc
std
mov
push
aad
add
pop
push
enter
cld
inc
xchg
aam
add
movsb
add
in
leave
andb
fisttps
mov
cld
push
std
pop
scas
inc
jle
test
shll
int3
push
cmp
repnz
cmp
mov
in
call
out
adc
mov
ficompl
mov
fisttpl
fidivl
rcr
fsubp
stc
jb
jle
daa
jecxz
mov
inc
inc
iret
xchg
inc
mov
mov
add
mov
inc
and
fdivs
mov
dec
fiaddl
pop
jle
sub
incl
xchg
mov
mov
mov
das
mov
flds
pop
inc
inc
push
sbb
mov
ds
repz
or
out
sahf
out
adc
sahf
adc
sbb
int
iret
repz
lods
sbb
cmp
repz
push
sub
lods
jl
pop
mov
int3
nop
int3
cwtl
lret
inc
clc
lret
cmp
mov
jns
jp
jns
testl
pushl
sub
call
mov
jle
aas
fs
inc
pop
sbb
mov
adc
pop
and
mov
cwtl
dec
je
mov
jae
xorb
addr16
push
push
mov
inc
push
pop
inc
jg
imul
xchg
push
mov
xlat
push
cmp
pop
and
insl
inc
in
imull
scas
cmp
inc
pop
jg
fcoms
and
inc
pcmpeqb
out
add
roll
add
pop
arpl
push
ja
push
es
ss
and
xor
cmp
sub
mov
je
loop
push
and
in
sbbb
sahf
sbb
int
mov
loop
loop
fimuls
fildll
adc
fsubl
das
sahf
out
sahf
push
or
or
adc
pop
rcrb
in
enter
mov
mov
iret
repz
test
movsb
and
repz
mov
es
jo
mov
mov
inc
out
xor
sub
sahf
mov
cld
xorb
inc
cmp
xorl
jg
cmp
pop
iret
repz
js
mov
repz
xor
add
push
iret
repz
pop
ja
mov
repnz
jnp
jae
das
push
dec
insb
add
push
roll
mulb
add
psubw
or
ret
mov
adc
enter
cwtl
push
and
mov
xor
in
int3
into
sbb
rorl
and
sahf
mov
sub
inc
sar
lcall
and
sbb
addl
xlat
xchg
inc
push
add
inc
stc
mov
adc
incl
aad
iret
decl
js
inc
outsl
loopne
jmp
xchg
test
mov
call
cmp
inc
mov
popf
sti
jmp
stos
push
inc
mov
repnz
test
incl
pop
stos
clc
scas
adc
inc
jmp
aam
imul
loope
jp
iret
inc
gs
xchg
push
cmpsb
scas
jmp
or
addl
cmpsl
xchg
cmp
xor
dec
cmpsl
in
lcall
lds
mov
cmpsb
lock
mov
popa
sar
mov
fsubs
cmp
jmp
xchg
clc
repz
mov
subb
fwait
xchg
and
and
iret
insb
int
add
sti
aas
jno
or
mov
pop
fs
decl
xchg
outsb
adc
sub
sbb
pop
pop
mov
icebp
aas
rorb
and
cmpsl
out
aas
incl
mov
insb
scas
add
aas
xor
aad
mov
std
std
into
popa
test
ja
dec
stos
in
das
dec
pop
loope
les
aas
xchg
les
jne
int
mov
addr16
cmp
push
mov
xchg
aas
push
loop
mov
jmp
jp
popa
push
pop
sarl
jl
mov
das
lea
mov
inc
inc
aas
jmp
ljmp
mov
inc
rcr
push
arpl
int3
and
call
cmpl
xor
lods
cmp
mov
cmp
std
xlat
cmp
mov
sbb
call
cmp
test
pop
mov
jne
fldt
cmp
jno
shlb
out
dec
nop
pop
cmp
mov
andb
mov
cmpsl
push
lahf
inc
pop
mov
sub
dec
in
ss
push
scas
into
ljmp
pop
add
rcr
jge
call
mov
xchg
cmp
push
andl
dec
dec
gs
std
sbbl
mov
xchg
jge
pop
ficomps
frstor
jo
push
pop
pop
inc
inc
je
inc
cmp
dec
jnp
ficoml
andl
pop
ja
popa
push
out
mov
les
hlt
push
xor
xchg
fs
xor
fdivrl
jmp
rclb
mov
sub
mov
sbb
pushl
repz
test
ficompl
jmp
mov
hlt
movl
ljmp
jp
std
in
leave
mov
add
insb
push
arpl
psubd
or
outsb
cmp
ljmp
in
pusha
aad
jno
mov
inc
aam
dec
std
test
movsl
cli
test
xor
mov
leave
mov
insb
fdivs
jne
filds
or
shrl
ljmp
adcb
push
popa
sarb
and
mov
cltd
xchg
mov
mov
sub
mov
and
or
adc
stos
sbb
jmp
nop
inc
fdivl
jno
add
aad
mov
mov
movsl
in
lahf
xor
fbld
mov
js
stc
shrb
decl
loope
or
insl
or
pop
arpl
hlt
push
imul
insb
sbb
xor
dec
add
jmp
in
xchg
push
insb
jnp
add
shl
adcb
cmc
fnstenv
adc
mov
sbb
mov
bound
ficoml
gs
aam
pop
popa
mov
into
pop
cmp
jmp
add
inc
movsl
fisttps
fadd
shll
jmp
imul
mov
sarb
add
in
add
pop
dec
or
cmp
incl
daa
adc
or
and
test
or
mov
popa
into
push
stc
ficomps
leave
fldcw
and
xlat
pop
cmp
mov
cmp
lods
insb
mov
mov
lcall
mov
cmp
ljmp
fildl
push
fdivl
or
jmp
test
fs
ds
or
or
push
in
decl
xchg
daa
scas
add
mov
pop
jge
xchg
decl
lock
add
inc
push
imul
xorb
sbb
push
imul
call
loopne
rorl
int3
dec
frstor
fistpll
mov
mov
aad
mov
call
call
jle
shll
push
repnz
addr16
cmpsb
fldl
mov
dec
pushl
mov
fisubrl
or
scas
testb
pusha
jp
inc
ret
out
pusha
fists
addr16
mov
jns
dec
mov
popa
lret
sbb
outsl
and
ja
int3
add
mov
mov
es
lds
or
add
mov
mov
xlat
ret
shlb
scas
ficomps
ret
es
lcall
insl
add
ss
jmp
addr16
jb
push
add
adc
mov
ljmp
sbb
xchg
or
out
fdivrl
fisttpl
aam
roll
clc
mov
push
int
mov
mul
ja
outsl
ja
mov
out
cli
mov
push
dec
cmp
pop
or
adc
sahf
gs
clc
sar
imul
ljmp
loop
mov
push
addl
mov
cmp
cmpsl
notl
pusha
rorb
imul
lret
shrl
or
inc
mov
pusha
mov
fidivrs
mov
ljmp
mov
mov
lret
mov
jmp
sarb
sub
push
mov
jp
mov
dec
popa
les
sbb
mov
sub
aaa
mov
or
sbb
add
sub
dec
cs
push
push
inc
add
dec
sahf
popa
pop
inc
cmp
push
insb
add
aad
push
xlat
fdivrs
out
fcmovnu
jns
out
loop
in
jns
out
call
out
sahf
out
repz
cmc
negb
clc
stc
cli
sti
cld
add
mov
adc
test
lahf
xchg
rclb
cmp
mov
inc
inc
push
push
add
and
aam
add
xchg
jbe,pn
jne
call
inc
cltd
movsl
fisubrl
popa
je
push
cltd
dec
or
and
inc
dec
outsl
aas
lds
xor
pop
inc
cmp
pop
bound
lods
insl
jmp
aaa
cmp
popa
arpl
cmp
arpl
or
xor
dec
insl
pushl
bound
jg
popa
push
inc
jbe
pop
insb
imul
xchg
insb
gs
push
sahf
sbb
inc
orb
push
inc
push
push
cmpsb
push
repnz
lock
popa
or
push
mov
shlb
push
je
inc
xchg
mov
scas
ss
jbe
mov
shrb
inc
aas
sub
inc
push
sub
jle
gs
inc
inc
dec
js
push
adc
addl
sbb
xor
insb
inc
lds
popa
jns
pop
dec
or
fldenv
cmp
inc
xorb
insb
aaa
jbe
cmc
lock
inc
push
inc
aas
lods
fadds
or
adcb
cltd
and
jae
mov
jp
vcomisd
inc
aas
inc
jbe
and
pop
inc
inc
push
sbb
inc
pop
idiv
js
mov
inc
inc
inc
add
mov
popa
mov
lret
mov
iret
int
push
dec
cmp
mov
andb
sbb
mov
pop
mov
outsb
jne
jno
pop
insl
inc
popa
mov
push
pop
xor
xor
insl
fwait
cmp
add
int
mov
xchg
into
pop
jo
xchg
adc
pusha
in
add
cmp
pop
subl
lret
dec
in
push
adc
outsl
add
lods
dec
pop
mov
mov
lcall
cmp
sbb
pop
movsb
sub
push
xlat
mov
arpl
add
mov
inc
jb
andb
dec
popa
jo
sbb
add
mov
outsl
test
dec
sub
push
xor
stos
loop
in
jb
pusha
rcrb
in
nop
pusha
lds
inc
push
cmpb
arpl
or
mov
popa
add
out
mov
je
addr16
xchg
shlb
gs
jb
push
jae
inc
stos
cmpsb
gs
inc
outsl
arpl
insl
dec
popa
mov
sarl
xlat
inc
push
bound
ja
inc
jbe
cmpsb
outsl
pop
push
xor
mov
push
dec
xor
bound
xor
add
jb
add
add
mov
les
mov
mov
push
cmp
lods
icebp
hlt
scas
add
push
mov
pop
sub
inc
mov
inc
mov
jo
inc
mov
sbb
outsb
rclb
jle
shl
inc
push
inc
dec
pop
bound
outsb
arpl
inc
inc
mov
je
push
xor
pusha
in
insl
push
xchg
mov
sub
pop
inc
lods
or
xchg
fistpl
xlat
test
daa
sub
inc
enter
pop
inc
add
nop
fimull
les
jle
pop
incl
adc
fdivr
loopne
adc
or
aaa
or
cmp
es
add
add
in
fbstp
add
add
or
pop
pop
push
or
or
add
or
or
adc
adc
push
adc
in
fidivrl
movhps
push
adc
adc
adc
add
sub
outsb
fisubl
or
adc
pop
adc
aaa
cmpsl
add
inc
add
nop
add
add
pop
add
in
add
adc
add
js
jno
mov
loopne
add
jb
incl
jge
call
xor
adc
call
pop
and
xor
inc
mov
adc
xor
cmpb
ficoms
pop
mov
and
cmpl
push
inc
pusha
xchg
sbbb
and
or
test
inc
xorl
addl
pop
dec
rorb
and
add
pushf
push
or
add
add
jo
add
pop
scas
cmp
outsl
decb
lods
adc
push
adc
pop
popa
jno
and
adc
xchg
jl
repz
mov
lock
loope
icebp
adc
sbb
mov
mov
xor
add
rcll
add
js
inc
and
cli
sub
rcr
push
ret
xchg
and
pushl
sub
std
cmpsb
xor
aas
imul
fdivrl
add
mov
mov
mov
mov
inc
dec
or
lock
cmp
push
xor
and
fistpl
jg
inc
cmc
push
xor
dec
xchg
inc
jl
repnz
dec
or
adc
pop
inc
inc
xchg
adcb
cmpsb
xor
das
std
or
mov
sbb
cli
and
mov
fiaddl
jg
fnstsw
ficompl
fdiv
jmp
and
mov
bound
pop
lahf
mov
movsl
jecxz
pop
mov
inc
jl
push
stc
or
xchg
jg
decl
insb
sub
addr16
out
or
push
push
xchg
add
repnz
inc
push
jbe
scas
jle
fcmovnu
clc
cmp
fisubrl
in
mov
orb
int3
lcall
push
aaa
cmp
mov
scas
mov
pop
pop
mov
popl
movb
jmp
ret
scas
adc
mov
xor
lods
scas
xchg
test
aam
ljmp
xchg
sarl
and
roll
fwait
movsb
jmp
push
lret
push
out
in
and
lahf
fdivs
aas
repz
cmpsb
pop
outsl
icebp
mov
pop
lock
std
or
pop
mov
jle
daa
test
aaa
dec
dec
pop
push
out
outsl
loope
loope
rorl
mov
int
arpl
mov
jp
push
out
or
push
sahf
pop
clc
sti
jg
pushl
mov
jg
inc
icebp
xchg
std
sarl
xor
hlt
and
xchg
jmp
or
cltd
inc
sbb
xchg
xorb
jb
mov
mov
mov
sub
xor
mov
jl
rorl
adc
fcmovnu
decb
hlt
push
add
stc
loope
mov
sar
andl
aas
pop
push
mov
icebp
testb
mov
scas
fadds
in
sub
jno
pop
sub
jg
scas
cld
or
push
inc
sbb
paddb
xor
push
clc
jb
adc
push
push
movsl
lods
jp
testb
sbb
into
fcomps
sbb
sbbl
outsl
fcmovne
andl
aas
loopne
cli
adc
aaa
xchg
in
add
inc
sahf
fisubs
or
dec
fisttpll
out
aas
std
cli
push
push
ljmp
outsb
push
idivl
cmp
sub
inc
scas
inc
mov
jg
je,pn
sub
jg
imul
mov
mov
inc
es
gs
jns
enter
pushl
cmp
pushf
push
scas
xlat
sub
cmp
sti
punpckhbw
cmpsb
orb
mov
or
cmp
cmp
js
jmp
inc
push
sub
xchg
pop
clc
pop
hlt
sub
movsb
add
fildl
add
lea
jg
gs
std
xorb
jg
add
outsl
adc
ret
das
pop
pop
pop
shlb
out
sar
scas
cli
cmp
lock
or
sarb
std
pop
les
cli
mov
mov
mov
arpl
stos
mov
and
insl
add
leave
push
scas
loop
jge
push
shrl
jmp
mov
push
mov
adc
and
sbb
xchg
jo
and
out
test
jl
imul
rcr
lock
sbb
cmpsl
sahf
imul
fcmovnu
rorl
ljmp
nop
enter
add
cld
call
js
cmp
scas
lods
hlt
cmp
cmp
fistl
mov
adc
push
movsb
xchg
or
mov
stos
dec
lods
xor
outsl
pop
cld
ds
cmpsl
scas
popa
in
pop
or
mov
xlat
pushf
cld
aas
clc
jge
jnp
std
sbb
outsb
mov
sbb
jecxz
inc
adc
mov
adc
adc
call
inc
pusha
imul
add
mov
cmp
xchg
mov
add
xchg
ftst
jbe
xchg
and
mov
shrb
shlb
out
aas
stc
add
out
gs
jno
mov
call
adc
pop
cld
addl
adc
and
ds
cmp
fmull
enter
jecxz
scas
jg
jg
sub
in
pop
mov
sub
mov
dec
incb
outsb
mov
aas
mov
or
cld
inc
or
in
pop
cmpsb
push
pop
jg
add
jg
mov
outsb
jg
aad
test
mov
mov
iret
cmp
jg
push
jbe
push
sbb
stos
icebp
pop
incb
jno
insl
lcall
sub
push
inc
jecxz
sbb
sarl
adc
sbbl
sar
adc
lahf
xor
ds
and
cmp
dec
push
js
mov
aas
mov
fsubrl
lock
incl
ss
and
clc
xchg
inc
rcrl
sbb
jne
push
and
mov
adc
xchg
lahf
or
push
rcrl
rolb
pop
inc
jb
jge
aas
fistpl
adc
call
jno
pop
dec
jg
mov
inc
sti
arpl
daa
std
or
sbb
mov
inc
cmpsb
popf
push
loop
inc
call
sbb
or
imul
xor
dec
xor
fsubr
fistps
lds
fidivrl
adc
stos
pop
add
dec
in
stc
clc
pushl
mov
lahf
les
sbb
sbb
cld
loop
pop
fiaddl
mov
in
stc
mov
lahf
outsl
int3
push
sbb
movsl
loopne
test
clc
pop
sti
jle
xchg
popa
out
out
outsl
xchg
inc
test
in
jge
popa
push
test
lock
outsb
hlt
sti
fsubs
shl
dec
jp,pn
adc
hlt
jmp
fistpl
out
lcall
sti
jg
shl
cld
mov
adc
stos
pop
jg
pop
shrb
rcl
jg
adc
decl
mov
popf
pop
rcr
dec
mov
gs
pushf
lea
jp
cmp
jnp
jecxz
adc
inc
lds
push
pop
adc
imul
aam
dec
int
cmp
daa
rorb
and
add
jg
incl
cmpsl
push
sbb
mov
pop
inc
cmpsl
enter
mov
into
test
xchg
jg
movsb
insb
or
and
xchg
fidivrs
push
xor
add
insb
test
aas
repz
outsl
lock
clc
int
mov
in
jmp
stc
out
mov
clc
push
std
mov
mov
fs
out
mov
or
cmc
mov
push
mov
fsubrp
dec
sahf
enter
incl
pop
fcmovb
inc
adc
inc
loopne
test
out
rolb
pop
push
in
cmpsb
mov
pop
cld
or
dec
ss
outsl
jg
inc
lods
movsb
or
repnz
mov
loope
pop
and
imul
cmpsl
lret
pop
in
cmp
inc
clc
jmp
mov
pop
lock
jmp
hlt
dec
mov
aas
fcomps
xlat
inc
aas
mov
jg
mov
jg
out
or
addr16
sbb
cld
daa
jp
std
adc
clc
in
loopne
cltd
or
mov
ret
nop
cmp
das
incb
add
icebp
scas
lock
pop
pop
div
cld
idivl
fs
pop
add
loope
jae
jmp
shrl
je
jge
sti
pop
lds
jg
stc
add
out
das
xchg
or
fndisi(8087
fisttps
sti
mov
or
ret
cmp
ja
push
leave
outsl
das
jge
aaa
fwait
pop
add
cmpsb
cmp
call
cli
or
data16
decb
adc
mov
and
loope
adc
call
loope
in
add
incb
in
cmp
int
add
push
pop
nop
or
dec
lock
or
mov
mov
jle
icebp
ret
ror
sbb
aaa
cmp
cmp
adc
shrb
clc
stos
sub
mov
pop
clc
loope
loope
mov
lahf
mov
sub
dec
add
xlat
jmp
mov
and
fmull
cld
pop
cmp
cmp
repz
sbb
pop
gs
lds
dec
sarl
pop
out
jg
jno
ret
jmp
cmp
inc
sti
andb
out
iret
push
dec
jge
pop
clc
xchg
cmpsb
ljmp
sbb
mov
ds
inc
mov
in
sbb
xchg
imul
jmp
or
mov
std
mov
daa
jmp
faddl
sbb
xchg
aaa
inc
test
sar
ljmp
lock
stc
push
dec
out
fstpt
mov
enter
add
lcall
jl
icebp
push
lahf
sti
inc
pop
imul
push
xchg
cmpsb
scas
les
jmp
xor
mov
xchg
mov
fildll
fsubrl
dec
add
sub
inc
or
add
std
adc
push
sti
pop
inc
dec
push
leave
dec
lods
push
mov
push
cmp
xchg
push
iret
and
add
sbb
ja
aam
pop
inc
sub
shlb
pop
push
call
in
jge
push
mov
adc
lods
hlt
mov
dec
aam
sbb
push
lcall
loope
mov
push
sarl
in
push
jg
addr16
cmp
outsl
pop
xchg
movsb
xor
in
mov
xor
jns
adc
dec
cwtl
xor
xor
lahf
cmp
shrl
mov
mov
push
jb
and
fdivr
xchg
jne
gs
push
inc
jne
xchg
dec
mov
lcall
inc
adc
int3
ja
jmp
aas
fs
push
pop
push
loop
sti
adc
cltd
stos
and
popa
xlat
cmp
jmp
out
bound
cli
mov
dec
int
inc
mov
mov
cmp
sahf
cmpsl
push
jo
ljmp
rorl
roll
loopne
bound
and
cmpsl
fistpl
frstor
fs
repnz
arpl
int3
cli
pop
stos
vmread
jmp
push
imul
mov
cs
dec
shlb
sahf
adc
test
nop
lahf
ljmp
call
xchg
iret
push
or
inc
loope
stc
loop
cmc
dec
mov
fs
pusha
lcall
ja
lods
dec
push
rcr
sub
and
jns
out
add
jg
push
test
xchg
jecxz
ret
push
mov
sbb
dec
and
rcr
mov
dec
mov
mulb
and
lcall
shlb
into
repz
call
sub
sti
add
mov
mov
enter
adc
jmp
jne
and
add
lods
mov
and
out
arpl
fsts
sar
incl
in
inc
ret
daa
repz
add
mov
jo
cmp
cltd
insb
imul
push
int3
dec
stos
pop
jp
aas
mov
push
and
ja
test
and
lcall
popa
mov
pop
mov
pop
jne
decl
push
adc
pop
mov
jo
js
ds
les
enter
ds
mov
xor
pushf
repnz
and
xor
push
jae
pushf
cs
fisubs
dec
hlt
lret
push
lcall
or
ljmp
cld
sti
xchg
data16
add
in
shl
clc
pop
dec
jb
pop
jecxz
mov
incl
and
pop
cmp
adc
or
rcl
movsb
imul
rcrb
ljmp
adc
pusha
lock
stos
popa
and
push
scas
and
hlt
lcall
scas
loope
mov
ljmp
cmc
loope
lods
fwait
scas
xchg
stos
call
cmp
xchg
dec
add
pop
xor
lcall
lcall
dec
jmp
mov
mov
scas
jge
rclb
movsl
sahf
movsl
jge
jl
lcall
pop
ds
cmc
sub
add
paddw
incl
jae
aaa
mov
mov
mov
mov
cmp
adc
push
test
pushl
mov
or
xchg
imul
dec
pop
jnp
sub
mov
ljmp
leave
xchg
adc
push
pop
dec
cmp
push
sub
or
pop
push
in
cmpsl
call
lcall
sahf
add
test
call
push
rcrb
cmc
mov
mov
inc
mov
call
repnz
sub
mov
xlat
push
and
xor
pop
outsl
and
sbb
adc
add
or
imul
and
sbb
decl
leave
shlb
rclb
inc
pop
cwtl
sbb
in
mov
mov
sub
rcrb
loop
pop
in
clc
je
aam
mov
jnp
pushl
inc
dec
arpl
push
sbb
dec
mov
std
jmp
mov
loopne
mov
adc
inc
cmp
pop
arpl
into
nop
inc
cmp
pushl
adc
jge
int
and
sbb
dec
leave
sti
imul
sub
mov
gs
push
ds
data16
mov
rcll
lcall
lcall
mov
jb
mov
inc
mov
mov
mov
loop
aaa
daa
dec
sub
shl
mov
sbb
incl
lea
fsubl
stos
xchg
mov
pushl
xchg
xor
pop
rol
test
mov
les
xchg
std
push
outsb
add
ljmp
or
shrb
lock
dec
into
decl
test
ljmp
in
sub
decl
aaa
push
clc
fmul
mov
addr16
push
or
inc
lcall
jg
jg
mov
mov
out
lock
dec
sub
sub
mov
jmp
nop
arpl
xlat
xchg
pop
sar
call
cld
inc
adcl
push
in
jle
and
adc
mov
cmp
scas
popf
ljmp
fmull
scas
inc
xchg
in
imul
fmulp
leave
out
mov
ja
mov
clc
cmp
cmpsb
mov
nop
xor
inc
adc
call
pop
lret
out
imul
int3
cmpsb
pusha
jnp
mov
mov
pop
in
imul
jg
fmulp
push
xor
jge
sti
mov
aad
popa
jmp
jmp
cmp
ret
add
jno
push
push
xchg
jae
shl
sub
repnz
popf
inc
sti
pop
add
add
or
lret
dec
push
adc
aas
mov
dec
jle
xor
jge
xchg
es
xlat
mov
int
scas
mov
sar
jp
jg
je
or
adc
out
out
sub
dec
test
push
pop
sbb
jmp
scas
movsl
dec
inc
cmp
cmpsl
mov
sbbl
mov
pop
mov
es
xchg
xor
add
fimuls
data16
dec
xor
cmp
xchg
iret
rolb
dec
loopne
push
out
fsubrs
decl
xchg
shll
mov
mov
mov
mov
add
call
jle
pop
mov
or
lret
ficoml
std
lcall
int3
fs
mov
cmp
fs
push
rcl
hlt
dec
lea
ljmp
fs
push
and
movsb
pop
push
fcomps
decl
icebp
orl
jl
popf
xor
ljmp
fiaddl
daa
sub
test
aas
movsb
lock
call
mov
sub
mov
ret
xchg
mov
roll
xchg
rcrl
js
sbb
fistpl
jno
fisttpl
mov
jp
fnstenv
paddusw
testb
lcall
and
lea
xchg
dec
mov
rorb
adc
add
lods
xchg
decl
xchg
enter
fisubl
dec
lcall
lcall
xor
pop
cmpl
jmp
pop
movsb
repz
orb
mov
jb
mov
jg
incl
enter
sti
inc
rcr
add
jns
ljmp
cmpsl
jb
add
sbb
push
add
lea
mov
loopne
dec
das
clc
or
mov
loopne
cwtl
scas
repnz
inc
adc
loope
mov
sub
scas
xchg
stos
sub
jnp
call
fucom
cmp
mov
and
xor
ret
inc
push
ficompl
xor
mov
loop
jmp
imul
jmp
pop
add
pusha
jg
xor
and
push
les
add
sub
or
stc
es
mov
jne
pushl
fbstp
movsl
add
clc
aaa
cmp
cld
fcomps
addb
dec
aam
mov
add
mov
sbb
push
dec
shrb
inc
loop
cmpl
decl
mov
jg
into
inc
dec
xchg
xchg
mov
mov
pop
sahf
and
les
and
imul
je
push
and
int3
or
or
adc
ljmp
xchg
fdivr
decl
cs
lds
leave
mov
data16
iret
push
test
daa
xchg
cli
movsl
popf
add
incl
adc
ret
mov
orb
sub
push
inc
mov
cmpsb
add
lcall
lret
jle
sub
mov
push
loopne
sbb
inc
insl
call
push
jmp
insb
out
mov
mov
icebp
inc
insb
cltd
inc
xchg
cli
ljmp
ret
into
adc
jp
lcall
int3
inc
imul
mov
sti
pop
mov
nop
jge
or
inc
or
call
lods
fdivrs
mov
sbb
lret
imul
in
ret
sahf
je
rcll
fwait
ds
imul
cmp
cmp
push
mov
call
dec
loopne
das
add
into
cmp
cli
inc
mov
fsub
lcall
xchg
pop
pushl
xor
xchg
lea
int3
cmp
inc
ljmp
xlat
xor
shll
xor
jecxz
decl
push
xor
xchg
dec
sahf
xchg
test
lcall
jg
fmull
faddl
mov
cmpsl
push
sbb
clc
out
add
and
pop
and
call
addr16
mov
sbb
cwtl
dec
iret
dec
incl
and
hlt
xchg
mov
push
fmul
fimull
ret
xlat
inc
jmp
jmp
enter
mov
xchg
jb
mov
dec
fistps
jb
mov
push
xchg
push
into
ljmp
push
fidivrl
movsl
mov
pushl
jle
push
sarb
stc
inc
nop
decl
bound
sub
shr
adc
jecxz
in
incb
incl
inc
hlt
push
or
mov
mov
subl
jbe
out
mov
out
inc
pop
jmp
cmpl
jmp
enter
nop
inc
outsl
bound
adc
scas
ljmp
mov
dec
mov
jb
and
mov
push
jp
out
dec
int3
and
out
call
pop
pop
push
mov
movl
out
and
mov
icebp
dec
rcl
jg
int
fsubrl
data16
stos
xor
sub
mov
addr16
fildll
sub
mov
mov
ss
push
sarb
sub
mov
jle
or
lret
fbld
add
cmp
incl
out
icebp
ljmp
jb
mov
jecxz
mov
or
call
mov
movsl
jmp
jle
cld
mov
push
inc
push
inc
dec
idiv
lcall
mov
rcll
in
inc
adc
inc
lcall
fmull
mov
fisubl
fnstsw
loopne
stos
jmp
daa
pop
push
or
adc
subb
repnz
clc
imul
test
decl
pop
rolb
mov
dec
cmp
mov
cmp
icebp
rcll
pop
cld
jp
jmp
or
into
iret
pop
jb
xchg
mov
lds
or
fsub
sahf
cmp
pop
lock
cmp
lds
sub
xchg
sbb
jmp
pop
pop
jle
and
pop
push
sbb
pop
or
mov
sub
adc
jp
addr16
xor
mov
xor
push
dec
sub
inc
pushf
lods
mov
imull
sti
pop
pop
rcrl
pop
lahf
pop
jl
xchg
decl
add
or
out
imul
dec
cmpsb
xchg
and
jg
loopne,pn
lock
dec
adc
cld
in
imul
add
ja
push
fisubl
jo
clc
pushl
adc
out
cmp
and
mov
stos
fidivs
push
mov
outsl
clc
das
in
mov
push
inc
mov
gs
mov
addr16
ljmp
jns
aam
es
popf
xchg
ret
mov
cmp
xchg
clc
mov
and
mov
jmp
sahf
lahf
cwtl
cld
lea
inc
push
sbbb
mov
ja
inc
push
test
decl
jae
cwtl
and
negb
push
jge
das
mov
inc
fadds
push
movsl
fstps
fcomip
jmp
push
sbb
test
test
push
insb
fsubrl
outsb
push
jecxz
lods
cwtl
call
loopne
popa
cmp
adc
jmp
mov
xchg
lcall
incl
jne
lret
nop
rorb
mov
dec
aad
and
repnz
imul
jmp
fdiv
inc
addr16
xchg
jl
or
pop
enter
push
mov
or
inc
mov
incl
fwait
or
das
add
cld
addr16
push
js
sarb
movsl
lret
jae
pop
cmp
cmp
ljmp
pop
pop
mov
imul
mov
fwait
lods
xor
ret
stos
mov
fstpt
fadd
sbb
stos
pop
pop
sub
pop
mov
outsb
and
cmp
xor
add
mov
push
movb
dec
sti
cld
pop
push
test
inc
addr16
decl
lods
iret
rdmsr
adc
rcl
dec
mov
dec
iret
out
xor
lret
xor
or
add
sbb
xchg
and
jns
popf
inc
xlat
jge
fdivl
mov
fstpt
decb
pusha
xchg
call
cwtl
mov
test
inc
shlb
lcall
fwait
inc
dec
cli
mov
pop
adc
cld
mov
push
decb
jg
jp
mov
or
rcrb
adc
stc
in
sub
dec
mov
mov
sub
call
inc
cmp
mov
nop
test
mov
adc
sub
dec
jle
cmp
or
cs
jne
ljmp
test
jl
or
push
faddl
sub
fsubrs
stc
add
decl
out
stos
xchg
fidivrl
mov
sub
sbb
mov
fmull
js
adc
daa
lods
sbb
loopne
mov
dec
stos
cmp
pushf
push
sar
in
icebp
in
jmp
subl
ljmp
and
and
inc
mov
add
clc
pop
mov
repnz
in
loope
mov
pushl
lods
cmp
xor
cmpsl
imul
cli
sbbb
cwtl
adc
xchg
adc
pushf
les
mov
ljmp
decl
adc
mov
push
hlt
xchg
ljmp
andl
pop
out
mov
pushl
popf
in
push
dec
cmp
idivb
mov
and
sbb
stos
mov
push
sbb
mov
push
std
push
stos
es
les
cmc
lcall
cwtl
and
popf
cmp
jns
mov
inc
shll
pusha
adc
xchg
sbb
cwtl
idiv
mov
sbb
adc
adc
int3
add
sbbb
mov
bound
lcall
adc
sbb
insb
inc
adc
cmp
xchg
pop
push
jo
in
mov
decl
in
or
js
mov
dec
test
and
push
std
cltd
cmpsb
add
jno
xchg
scas
cmpsb
movsl
add
fprem1
adc
and
mov
aam
inc
jno
dec
cmp
in
mov
mov
and
add
test
data16
mov
dec
and
cmp
in
call
xchg
loop,pt
scas
add
mov
jne
shlb
xor
sbb
xchg
jmp
leave
push
push
cmp
mov
xchg
sub
jne
add
scas
cli
add
sbb
dec
sub
fcmovb
pop
cmp
test
pop
out
outsb
push
sbb
cmp
loop
jae
jp
mov
inc
shll
adc
add
cmp
aas
push
pusha
ljmp
dec
adc
adc
push
add
adc
mov
mov
sbb
mov
pushf
sub
add
or
fst
mov
ljmp
mov
scas
sbb
jp
int
repnz
xor
mov
lcall
lea
dec
fmuls
push
xchg
cmp
cs
and
mov
in
incl
sbb
mov
fiadds
fadds
repz
test
inc
leave
ja
add
cmp
sbb
and
inc
ret
mov
imul
mov
dec
call
xchg
movsb
sbb
xchg
pop
add
hlt
pop
aaa
std
pushl
dec
scas
test
mov
mov
aam
cs
in
cmp
ljmp
jecxz
inc
mov
nop
mov
imul
cs
das
mov
shll
fstps
pop
js
sbb
shl
adc
in
in
jbe
inc
sar
cli
jb
insl
inc
test
sub
ljmp
pop
lahf
imul
test
sbb
out
je
ds
push
std
stos
mov
int
push
aas
jns
imul
pop
pminub
pop
xchg
daa
pop
sbb
and
mov
mov
scas
pop
pop
mov
mov
notl
pop
sub
inc
and
cmpsb
mov
jmp
and
bound
xor
mov
pop
lds
pop
and
push
pop
cmp
xchg
inc
xchg
inc
fcoms
loope
inc
imull
ret
shlb
sub
dec
lea
ljmp
jno
hlt
xchg
call
fistpl
and
mov
inc
pusha
inc
xor
cltd
sbb
mov
popa
daa
and
ljmp
out
sbb
dec
jb
pusha
and
cmpps
dec
mov
and
sbb
adc
out
adc
jne
movsb
nop
mov
cs
hlt
mov
dec
sti
push
std
pusha
arpl
loopne
clc
arpl
lock
jg
leave
lret
movsb
lret
sbb
xor
jg
repnz
popa
push
shlb
loop
xchg
jg
jmp
sub
push
sbb
add
ret
cmpsl
comiss
stos
mov
add
ja
lcall
sbb
shrb
das
mov
xchg
in
or
mov
lods
pop
ljmp
ja
dec
mov
cmp
lahf
repz
cmp
add
pop
sub
pushf
and
sahf
pop
out
imul
cltd
jb
lock
fucomi
loope
inc
pop
neg
push
xchg
cmp
pop
mov
shl
loope
push
fstps
dec
pop
addb
inc
mov
cmc
pushl
std
xchg
test
cmp
les
inc
push
scas
jae
testb
mov
pushf
adc
ljmp
push
sbb
add
pop
pop
inc
dec
pusha
xor
lock
jmp
ja
cs
inc
add
jo
mov
push
mov
outsl
aad
ret
fidivs
jne
cmp
fcomip
ljmp
xor
arpl
popl
cmp
xchg
in
icebp
push
and
and
jmp
ljmp
or
shrl
xchg
cmp
xor
jge
push
insl
fiaddl
and
ja
aaa
std
jmp
add
xchg
mov
xchg
xchg
sahf
js
sub
jp
push
and
incl
fmulp
or
cmp
mov
cmp
fsts
test
cmp
mov
dec
cs
jb
arpl
out
cli
cmpsb
call
xchg
push
mov
lock
mov
xchg
and
mov
add
push
push
sarb
cmpsb
xchg
stc
cmpsb
daa
jo
xor
adc
loopne
jae
pop
rcrb
clc
ljmp
and
sbb
loop
cld
lahf
cld
push
jne
push
push
add
ss
lcall
jl
jns
mov
mov
movsl
add
sahf
mov
aas
sti
cmpsl
popf
jmp
dec
push
filds
idiv
rcll
adc
cmp
inc
fwait
xor
jb
es
lcall
data16
inc
jb
pop
test
rorb
cmc
push
loop
xor
cld
push
lods
es
dec
sti
mov
testb
loopne
lods
js
jo
push
mov
mov
scas
ja
sbb
pop
fs
and
cli
add
lcall
imull
incl
jmp
leave
mov
add
xor
push
push
pop
adc
xchg
stc
mov
jmp
mov
test
mov
jb
add
push
fldenv
jp
pop
es
xchg
test
call
ret
inc
fists
sarb
push
ret
dec
dec
and
outsl
add
pop
mov
jno
aad
xchg
cmp
call
addr16
pop
inc
ret
and
icebp
lods
mov
cmp
clc
cmpsl
jl
cli
scas
scas
stos
mov
cmpb
jmp
loop
jge
lock
ds
push
and
jbe
cmp
outsb
mov
mov
jmp
data16
adcl
pushf
jecxz
mov
clc
movsb
mov
enter
fwait
jae
pop
jmp
test
mov
push
in
arpl
idiv
dec
aam
adc
test
pop
dec
inc
das
sar
popaw
xlat
cmp
and
and
jl
pop
inc
in
test
sti
incl
and
loop
mov
rclb
pop
idiv
decl
lcall
mov
rcrb
movsl
rcrl
lods
mov
incl
sub
sbb
xor
pop
call
xchg
inc
and
icebp
jl
fwait
sbb
adc
pop
in
push
xor
dec
or
push
mov
cmp
ds
mov
jecxz
dec
xlat
push
mov
aam
jge
mov
fcoml
pop
jo
and
and
repz
jo
call
inc
mov
pop
mov
cmc
lcall
add
jle
push
and
mov
jno
xchg
push
aam
jae
dec
nop
pushf
lds
xchg
push
and
popa
sbb
sbb
xor
dec
lock
lock
in
enter
hlt
decl
xor
mov
and
adc
mov
pop
testl
aaa
ret
outsb
lcall
shrl
cmpsl
or
mov
inc
push
vmovdqu
inc
adc
cmpsb
add
lods
sub
pop
pop
fwait
mov
add
adc
jmp
sbb
adc
lea
mov
test
inc
xorb
ljmp
or
test
xlat
sub
or
inc
mov
and
inc
xchg
xchg
ds
cmp
mov
lods
std
aas
out
sbb
mov
sub
lret
add
shl
xchg
and
mov
sbb
leave
cmp
xor
dec
and
in
repz
inc
push
sahf
xchg
push
call
aaa
jo
jp
and
push
xchg
adc
popf
aas
dec
xchg
out
adc
test
shrl
push
mov
inc
in
imul
ja
sub
cmp
decl
in
mov
add
and
push
shlb
sahf
std
insb
push
push
int3
test
sbb
add
pop
xor
push
out
icebp
lcall
outsb
es
dec
pop
push
xor
or
pop
lods
jb
mov
jge
sub
sub
mov
ds
rcrl
sbb
outsl
dec
push
dec
mov
pop
scas
jg
incl
in
push
int
inc
xchg
and
enter
jb
sbb
fisttpl
inc
incb
aaa
jbe
add
mov
fnstenv
enter
fsubrs
loop
add
out
outsb
scas
dec
arpl
push
sar
cmpsb
mov
xor
loop
xor
decl
jecxz
mov
adc
arpl
jmp
inc
adc
inc
adc
jmp
cmp
or
inc
loop
stos
mov
sbb
aaa
cmp
fwait
lcall
xor
jg
xchg
dec
aam
pop
mov
and
dec
inc
xor
les
repnz
std
pop
inc
das
in
sub
shl
aaa
xchg
and
pushl
dec
popa
fstps
xchg
and
andl
jmp
xchg
dec
xor
scas
js
cltd
out
and
dec
roll
sub
mov
or
aaa
adc
faddl
pop
pushl
add
fucom
mov
inc
js
mov
push
stos
insb
adc
js
mov
jmp
push
lret
popa
adc
test
mov
pop
fisubrs
jne
pop
pop
jl
mov
sbb
mov
and
gs
cmp
mov
repnz
aaa
adc
mov
inc
sub
insl
dec
imul
fwait
test
mov
mov
or
lret
cmp
xor
lods
je
cld
fsts
add
ret
mov
jp
decl
cld
mov
aam
xlat
aad
mov
inc
cmpl
fwait
push
mov
lahf
xchg
cli
incl
sub
fcmovbe
in
or
pop
fsubrs
cmp
cmp
mov
mov
cli
sbb
sbb
inc
and
mov
pop
daa
xchg
pop
mov
xlat
xorb
ljmp
jno
repnz
dec
sbb
jmp
cltd
loopne
inc
popf
sbb
mov
popf
incl
test
ret
jl
rorb
outsb
daa
inc
pop
imul
call
sbb
popa
jle
scas
adc
movsb
les
cwtl
std
prefetchnta
dec
lss
or
pop
repz
xor
inc
js
frndint
incl
fst
xor
stos
pop
adc
cli
arpl
sbb
pushl
stos
xchg
adc
cltd
popa
dec
out
sub
ss
pop
xchg
add
aaa
jns
cwtl
call
fisubrl
test
dec
fimull
inc
cwtl
out
or
sti
roll
push
jecxz
test
adc
ljmp
test
lcall
dec
cmp
loopne
push
test
lret
sub
adcb
loope
out
mov
cbtw
pop
lahf
pop
dec
popa
add
cltd
mov
lock
ljmp
sub
lret
test
aas
adc
dec
sahf
pop
imul
cltd
loop
mov
push
sarl
sbb
loope
cmpsb
imul
inc
mov
jmp
mov
pop
xor
add
test
add
or
add
test
inc
mov
mov
pop
mov
add
aad
std
enter
negl
or
pop
jg
dec
ret
mov
jb
hlt
dec
xchg
insl
cmc
and
test
pop
sarl
jmp
adc
outsl
ret
and
sbb
cmp
add
incl
inc
lods
sub
jne
test
mov
js
jno
jg
nop
les
ds
mov
repz
mov
jle
movsl
or
mov
loop
xor
push
push
sbb
rorb
aas
aaa
mov
pop
xchg
mov
hlt
call
icebp
int3
sbb
stos
pop
dec
add
ja
sub
push
xchg
dec
pop
adc
inc
push
icebp
shlb
pop
inc
push
push
lahf
or
call
testb
negb
dec
xchg
jp
mov
mov
shr
aas
out
enter
mov
inc
jno
jle
ja
shl
xor
dec
jnp
ss
decl
leave
cmp
push
fcomi
mov
xchg
stc
insl
fimuls
out
cli
mov
push
out
add
sbb
sbb
pusha
arpl
dec
or
adc
push
incl
aam
add
lock
cli
stos
mov
enter
mov
cmpsb
stos
ret
fisubrs
decl
adc
add
fistpll
outsl
ljmp
pushl
or
inc
sbb
xchg
add
fimull
call
push
jg
stc
jno
outsb
push
dec
inc
pop
jg
dec
sahf
cmc
sbb
ds
sar
fdivrs
or
aad
jp
mov
jns
dec
xchg
popf
cmp
fisttpl
dec
jns
push
inc
mov
decb
addb
es
and
je
lds
call
jge
pop
aam
loope
sub
pop
icebp
jg
push
push
cmp
inc
lret
int3
psadbw
repnz
fsubs
lcall
faddl
push
rorb
aad
mov
xchg
jo
scas
cmp
aaa
data16
aam
push
nop
shrl
jae
leave
call
orb
sbb
arpl
sbb
in
mov
pop
jecxz
fldenv
fnstenv
incl
rorl
sub
ret
push
arpl
shl
loop
ljmp
sti
clc
testl
fcompl
inc
sbb
pop
mov
leave
fistpl
flds
pop
or
and
decl
dec
xor
in
and
iret
lds
jle
mov
jns
arpl
shlb
loope
add
cmp
sbbl
inc
jmp
fisttpll
aas
inc
mov
int
daa
mov
addb
aas
int3
pop
pop
lods
push
loope
jp
dec
fisttps
adc
pop
into
aad
add
andb
dec
in
cmpsb
mov
sub
xchg
sub
add
into
sbb
les
mov
call
test
cmp
inc
rclb
icebp
cmpsl
daa
loope
add
adc
or
in
aaa
push
sbb
call
popf
mov
scas
sub
out
mov
arpl
push
inc
fistps
ret
push
ljmp
pop
xor
jo
out
adc
or
shrl
inc
call
sbb
and
xor
testb
jns
test
fcmovu
lcall
std
loopne
cmpsl
std
neg
adc
add
lcall
jno
mov
xor
data16
lcall
sarb
fldenv
and
or
pop
xchg
add
cld
aaa
cld
or
fildl
pusha
pop
jne
outsl
mov
test
cmc
incl
into
sub
fnstsw
cltd
je
mov
out
xor
mov
in
mov
inc
adc
mov
jge
fisubs
jmp
jecxz
xor
cs
and
sbb
rorb
ret
cld
add
and
cmp
fbld
addr16
adc
add
pushl
mov
fldenv
fwait
and
xor
mov
ret
loope
test
nop
mov
mov
sbb
repz
out
inc
push
cld
decl
fimuls
inc
test
push
arpl
popf
arpl
push
in
cmp
call
mov
sbb
mov
out
pusha
enter
xor
xchg
add
out
mov
pushl
cmc
cmp
xchg
pop
das
and
cmc
lahf
gs
insl
enter
aaa
insb
jp
aad
cmp
inc
cld
insb
div
ljmp
mov
sbb
mov
sub
popf
sbb
enter
mov
jecxz
jb
ja
movsb
lods
pusha
and
test
jmp
push
call
lods
cs
xor
mov
or
fisubrs
mov
or
sbb
push
inc
addl
out
push
inc
and
dec
push
xchg
out
mov
std
jmp
mov
jp
pop
jecxz
dec
in
lods
pop
subl
and
xchg
push
dec
xorb
sbb
sti
cmpsl
cmpsl
sub
push
sti
adc
test
or
jg
xor
push
cmp
mov
nop
mov
imul
cs
jg
sar
push
jl
cwtl
movsl
cld
mov
loopne
xorl
movsb
incl
es
cmp
mov
insb
ja
int3
push
dec
adc
push
rcrl
jecxz
cmpl
mov
xor
dec
inc
mov
lds
push
pop
in
xor
add
cmc
pushl
stc
jl
xchg
pushf
loopne
outsb
mov
minps
adc
mov
ljmp
addl
sub
pop
fidivs
xchg
mov
add
and
adc
ja
mov
decl
sarl
ror
or
loopne
pcmpeqd
push
pop
xchg
push
pop
pop
mov
ret
mov
incl
mov
add
cld
repz
jnp
pop
mov
in
mov
pop
lahf
mov
cmp
sbb
in
xor
xchg
jbe
cmpsl
sub
leave
cmp
incl
loopne
clc
dec
xor
push
mov
dec
mov
jg
out
xor
icebp
pop
and
and
adc
xchg
test
mov
fst
inc
sub
cmc
sti
loopne
cli
mov
sbb
cmp
cwtl
mov
js
xchg
rclb
push
daa
push
pop
inc
mov
js
test
movsl
and
pop
xchg
ds
in
rcr
pop
bndldx
or
jmp
xchg
add
inc
sbb
cld
jnp
xor
sub
mov
ficompl
in
jns
dec
sbb
xchg
fdivl
jns
into
iret
pushl
and
hlt
incb
jo
lcall
sub
cmp
ljmp
sar
loop
lods
mov
jmp
xorl
maxps
pop
sub
sub
xchg
and
lcall
add
push
xchg
xchg
xor
mov
insb
push
xor
adc
fidivs
cmp
xchg
in
pop
cmp
xchg
sbb
aad
xchg
les
idiv
pushl
cli
adc
cmpb
in
cltd
shl
int3
xchg
out
sahf
add
jmp
jnp
push
inc
insb
mov
lret
fucomip
andnps
cmp
test
lods
pop
sarl
test
call
ja
mov
sbb
dec
inc
daa
in
or
or
jmp
mov
in
data16
inc
pop
shrb
mov
mov
or
call
jmp
jo
cwtl
cltd
push
rcrb
adc
jecxz
mov
xor
mov
jb
xchg
add
out
andb
js
mov
sahf
fs
or
leave
xchg
mov
mov
pushl
adc
scas
movsl
mov
js
push
outsb
cltd
sti
mov
pop
sub
sub
jl
lcall
adc
popf
nop
sub
xor
repnz
ret
xchg
mov
xchg
push
and
popf
sub
xchg
adc
rcr
cmc
mov
inc
xchg
sub
sub
subl
repz
jne
or
enter
dec
add
test
lcall
icebp
movsl
imul
push
pop
push
cmpl
test
rclb
test
inc
push
push
out
stos
iret
addr16
adc
iret
jae,pn
cmp
pop
clc
out
outsl
mov
les
out
jmp
fcompl
sub
arpl
aad
jmp
and
dec
jnp
in
sub
popa
nop
inc
mov
cwtl
xchg
push
pusha
je
jnp
leave
fwait
sub
hlt
sbb
hlt
jno
jmp
ss
incl
inc
cmc
xor
iret
mov
mov
iret
leave
adc
mov
insl
mov
inc
adc
jmp
aam
test
into
pop
push
dec
repz
push
jne
cmp
jge
rclb
sub
cltd
push
mov
adcb
push
jnp
dec
outsl
loope
fucom
mov
pushl
ret
rcr
or
inc
cli
cmpsl
out
fdivrp
dec
or
daa
inc
xor
xchg
outsl
clc
inc
gs
pop
in
or
sbb
jg
int3
repnz
and
mov
cmp
out
addl
lcall
pop
data16
lea
pop
lcall
pushl
pop
loop
pop
subb
inc
sar
mov
sbb
jmp
cmp
fstpl
xor
repz
mov
and
jns
or
pop
rorl
movsl
mov
das
mov
mov
cmpsb
mov
jbe
std
stc
cmpsb
cmp
mov
fldl
pop
dec
add
fs
incl
push
cmpsl
ret
loopne
xlat
ror
andl
sbb
cmpsl
cmpsb
daa
pusha
sbb
scas
pushl
mov
mov
aaa
xchg
aam
dec
scas
lock
push
xlat
leave
adc
decl
push
in
mov
lods
adc
push
and
push
lods
fcoml
xchg
jne
cli
lods
aam
ja
pushl
lods
sbb
pop
sub
js
outsb
fsubrs
leave
inc
cmp
or
test
mov
arpl
call
frstor
pusha
clc
pop
pop
xchg
cli
and
inc
push
adc
scas
inc
outsl
jg
scas
mov
jmp
add
jnp
cwtl
xchg
mov
fmulp
daa
pop
aam
inc
aaa
jg
iret
add
ljmp
cmp
mov
push
xchg
fldenv
add
leave
out
jg
frstor
jg
sahf
loopne
dec
push
gs
insb
ss
and
stos
jle
mov
sub
mov
ljmp
cwtl
cmp
cli
jno
and
loopne
xchg
inc
inc
outsl
push
add
mov
ss
incl
rcrl
lods
aaa
int3
out
add
dec
negl
or
xor
outsb
fnstsw
jnp
lret
jmp
push
mov
decl
cmp
push
fisubl
xchg
fdivl
xchg
or
dec
sbb
xchg
lea
xchg
lcall
cmp
call
loopne
daa
xchg
pop
jns
insl
mov
mov
push
cmp
call
or
mov
or
lahf
push
xchg
inc
lret
ret
pop
ds
incl
mov
mov
rorl
xorb
jge
dec
xor
fdivp
lods
adc
push
lretw
fstps
aas
incl
dec
in
ljmp
aam
cmp
jle
enter
xor
pushl
decl
push
out
xor
push
popa
jg
test
inc
jne
in
out
fwait
pushf
int
imull
int
std
jmp
mov
js
mov
sub
inc
dec
shrb
mov
lcall
mov
jle
daa
xchg
xlat
popf
jg
nop
mov
pushl
or
adc
dec
popa
mov
push
imul
out
mov
aad
mov
incl
imul
ljmp
xor
adc
or
pop
out
int3
scas
incl
in
and
sbb
popf
cwtl
xchg
jbe
jbe
mov
xchg
push
call
adc
das
aam
test
mov
out
push
jmp
mov
push
mov
jle
clc
push
mov
mov
adc
push
iret
daa
sub
add
imul
sbb
mov
inc
test
mov
dec
popa
inc
shlb
out
cli
loope
or
mov
mov
pop
cli
sbb
xlat
push
jbe
pop
cmp
mov
sbb
neg
inc
push
outsl
or
add
decl
call
ss
cld
leave
inc
mov
movsb
dec
movsb
sti
fdivrl
mov
int3
inc
or
inc
mov
popa
in
push
push
ja
push
push
sub
loop
rorb
test
jg
pop
mov
lret
adc
mov
test
aad
js
incl
pusha
rcrl
xchg
pop
repz
rol
adc
icebp
adc
mov
scas
mov
jle
adcb
sub
cmpsl
adc
add
in
jmp
test
cmp
stos
pop
test
push
lock
js
movsl
cmp
push
lea
cmpsl
mov
jmp
aam
call
pushf
outsl
jne
xchg
add
aam
mul
lods
jmp
dec
cmp
and
or
add
add
popf
andl
jbe
sub
cmp
and
cmp
iret
push
sbb
movsl
mov
inc
mov
lods
enter
aaa
shl
sub
mov
add
pop
push
add
or
ret
shr
ljmp
push
incl
movsb
or
pop
jmp
nop
lods
xlat
push
mov
mov
inc
and
dec
stc
std
outsb
cmp
aas
aaa
testb
arpl
mov
add
jno
pusha
xlat
cmp
dec
mov
xchg
decb
repz
call
jg
into
sub
sbb
push
inc
xchg
push
inc
xchg
adc
mov
mov
sti
xchg
cmc
pop
jg
ljmp
push
inc
pop
pop
push
mov
jge
cmp
push
xchg
inc
xchg
mov
pushf
mov
sti
stos
jmp
pop
dec
jmp
cmpsb
sub
cmc
xlat
inc
adc
jbe
and
pop
or
push
pop
fimull
clc
ds
test
xchg
shll
xor
ljmp
jmp
sub
inc
inc
divb
adc
or
in
cmc
fcomip
pop
dec
add
xor
push
cs
inc
jecxz
paddd
icebp
test
lcall
xor
enter
ret
jmp
lcall
mov
iret
sbbl
lock
jg
mov
xchg
incb
add
stc
xchg
fisttps
stos
aad
scas
shll
pushl
fs
cmp
sub
xchg
jno
int3
iret
sbb
sti
push
int
mov
jg
sbb
sub
icebp
mov
xchg
std
sbb
out
mov
les
adc
add
or
jns
xchg
daa
mov
mov
lods
jp
xchg
add
xor
decl
jecxz
jns
push
aam
pop
add
divl
out
jmp
test
ljmp
inc
inc
gs
inc
mov
mov
pop
xchg
and
outsl
sub
nop
in
int3
stc
cmp
ljmp
stos
out
cmp
dec
inc
sbb
pop
sbb
sub
outsl
clc
or
and
call
cld
enter
inc
insb
scas
fidivrs
mov
add
push
sub
ja
fistl
in
sar
pushl
sbb
aad
dec
lds
push
push
push
insl
mov
xchg
jbe
jg
pop
jge
sub
cmp
or
rcrb
call
es
dec
xlat
fs
lods
decl
lock
xor
sub
pop
into
cmp
rcr
popa
cmpsl
mov
incl
jle
and
cmp
pusha
inc
dec
test
test
repz
xor
dec
cmc
dec
scas
mov
idiv
push
cmp
pop
das
mov
mov
xchg
lods
outsl
ljmp
cmpl
pushl
push
andb
or
cmp
jle
inc
jg
mov
xchg
in
sub
add
pop
test
sbb
inc
int3
xor
cmp
jae
fs
dec
xchg
dec
lock
mov
xchg
int3
adc
add
icebp
mov
enter
adc
add
movsl
int3
sub
icebp
push
lcall
push
lock
dec
mov
aas
lea
imul
pusha
fucomi
ret
mov
adc
insb
or
mov
out
xlat
add
test
movsb
lcall
add
test
mov
adc
add
ljmp
mov
xchg
fsts
int
xor
push
inc
lock
lcall
push
shlb
insl
shlb
hlt
dec
jae
imul
xchg
es
arpl
ljmp
icebp
dec
xchg
std
xchg
jbe
or
and
stc
jnp
mov
push
stos
repz
lcall
mov
cmp
inc
cmpsl
lret
or
int
mov
shr
in
jbe
aaa
and
lcall
jl
jne
mov
test
ljmp
call
jno
loop
cld
cmp
inc
ja
lds
and
jecxz
gs
adc
sub
icebp
jmp
jp
stos
icebp
push
int3
inc
adc
ds
push
imul
fcomip
ljmp
aad
inc
and
jns
inc
or
xchg
xchg
push
mov
cmc
xor
std
aad
clc
movsl
fsubs
fsubrs
scas
in
pop
enter
mov
mov
adc
dec
loopne
mov
cs
inc
addr16
out
clc
pop
inc
cmpsb
add
scas
pop
pop
rolb
jge
mov
jmp
test
rolb
push
cld
orl
pop
or
addr16
bound
jmp
and
out
mov
ror
jbe
add
lret
jge
lods
mov
hlt
cmp
cmpsb
mov
pop
fs
sub
ss
mov
call
rorb
aam
xchg
push
ja
movsb
mov
mov
cmpsb
icebp
push
xchg
and
mov
jmp
mov
popa
pushf
xor
fwait
ljmp
dec
stos
mov
test
incl
lret
das
mov
movsb
or
fxam
push
inc
cmp
xor
inc
sti
mov
aas
pop
jecxz
decl
mov
or
jne
sbb
pop
mov
adc
and
rcrb
sbb
test
cld
mov
dec
in
jle
jp
xor
inc
mov
inc
or
jne
call
mov
stos
dec
andb
lret
gs
leave
xchg
sbb
dec
xor
pop
mov
mov
cwtl
pop
jmp
add
lock
bound
es
mov
jmp
push
or
pop
pop
sub
dec
xchg
adc
mull
out
cmp
jmp
call
sahf
add
pop
mov
and
cmpsb
int3
add
push
outsb
mov
or
lcall
je
imulb
mov
addr16
fiadds
repnz
push
cld
call
lds
push
shlb
sub
sbb
scas
and
fdivrl
cli
call
jge
pop
fdivr
sti
push
ljmp
jno
inc
push
pop
stos
scas
decl
or
dec
mov
ret
shl
lds
lret
je
lock
fistpl
add
mov
xorb
adc
xorb
xor
pop
cld
leave
aaa
imul
cmc
push
mov
xorb
mov
push
int
sub
pop
repnz
or
xor
jmp
adc
and
imul
adc
subb
incb
jmp
mov
and
xlat
call
cld
jg
faddl
jle
add
loopne
or
jns
call
jge
daa
xchg
cld
xchg
xchg
hlt
data16
scas
pop
filds
xor
scas
call
xchg
sub
andl
sbb
inc
adc
inc
ljmp
mov
jmp
sub
fcomip
adc
jae
les
mov
xor
inc
sub
lods
imul
jmp
sub
jl
mov
add
cltd
fwait
stc
mov
adc
je
lret
lcall
ljmp
lods
adc
shl
sarl
xor
jg
mov
or
adc
std
pushf
stos
shll
nop
call
jmp
in
lret
clc
fbld
fisubrs
in
mov
sbb
sbbl
pop
std
cmp
push
cmpsl
call
repz
jb
xor
inc
repnz
nop
nop
jl
les
stc
sarl
in
push
cmp
incl
pushf
add
add
adc
xchg
and
dec
shl
and
std
js
jle
mov
fsub
sbb
pop
push
test
out
ds
lcall
jmp
sub
xchg
ret
mov
sbb
sbb
insb
sahf
in
sub
ljmp
dec
sub
icebp
mov
and
cwtl
xor
sti
js
out
popl
jg
add
pushl
cmp
adc
fistpll
outsb
dec
mov
out
dec
cltd
push
lahf
mov
pusha
inc
lret
or
mov
decl
ss
sbb
cmp
and
out
dec
jl
outsl
cli
decl
insb
std
in
lret
ja
or
fidivrl
push
ja
mov
and
fcomp
frstor
test
call
vsqrtsd
fisttpll
adc
sti
inc
fmulp
sbb
int3
fstcw
mov
or
jge
and
outsb
aaa
jbe
es
in
jg
push
mov
pop
std
scas
jno
ljmp
and
aam
xchg
push
and
fimull
scas
jecxz
jmp
xlat
push
std
lcall
in
into
mov
and
sub
sub
add
std
stos
fs
or
xchg
test
dec
mov
iret
mov
or
inc
imul
push
fiaddl
daa
fdivr
jbe
push
call
push
pop
sbb
adc
test
sub
mov
push
lods
daa
or
push
aaa
cld
incl
or
xlat
jmp
mov
fistpll
js
add
sub
cmp
and
leave
gs
push
inc
std
das
int
push
fstpt
dec
out
pushl
mov
inc
out
or
fs
clc
movsl
push
test
add
jg
push
dec
test
movsb
add
xchg
dec
xchg
sbbl
jae
arpl
dec
fists
jge
std
aad
pop
sarl
xlat
jmp
cmp
sbb
mov
sub
xchg
out
js
cs
mov
jg
pushl
mov
push
push
cs
js
xor
popf
enter
cmc
or
xor
jmp
mov
cmp
adc
and
addr16
scas
push
cmp
decl
xchg
and
je
divb
mov
sbbb
int
sbb
pushl
jo
fdivrl
or
andb
pusha
pop
pop
fisubl
inc
shll
ljmp
lret
adc
loopne
sub
add
xchg
xchg
jnp
adc
cmp
xor
std
push
adc
adc
push
mov
fs
ret
mov
jg
mov
jl
aaa
sbb
repnz
xchg
rcrl
sbb
incl
add
mov
pop
ret
pop
fisttpll
fcompl
or
pushl
add
pop
test
movsb
sti
jp
push
in
push
popl
sahf
imulb
pusha
in
and
lahf
fdivrp
js
xlat
lahf
sbb
sti
subb
push
mov
lcall
lods
mov
icebp
das
cli
incl
in
rcrl
popa
xchg
mov
or
mov
incl
dec
rcr
add
inc
inc
pop
mov
decl
fidivs
dec
pusha
jecxz
pop
lret
cmp
fwait
push
fisttpll
adc
jp
sbb
push
in
push
lock
call
dec
push
sub
pop
popf
outsb
stos
icebp
es
push
mov
or
mov
inc
punpcklbw
decl
int3
xchg
inc
pop
inc
daa
fwait
call
mov
sub
sub
cmp
jg
filds
lahf
xchg
push
repz
scas
ret
mov
mov
mov
jge
push
pusha
mov
push
xorl
push
sub
mov
scas
adc
jle
fcmovne
adc
loopne
in
inc
pushl
adc
inc
data16
sub
mov
push
dec
jo
pop
jo
jnp
dec
pop
ds
xchg
sarl
out
test
lcall
stos
lds
fmuls
mov
aad
fistl
sarb
jg
loope
mov
clc
ljmp
lret
cmp
movl
loopne
jge
pushl
aam
hlt
jb
call
movsb
int3
inc
mov
add
scas
into
xor
out
bound
out
cli
inc
daa
sbb
lahf
xchg
xor
jle
dec
int3
xor
ret
insl
and
lcall
mov
pshufw
test
ljmp
xor
push
sub
fs
decl
fwait
pop
dec
dec
ficompl
mov
test
hlt
add
rorb
nop
fwait
loop
incl
fstp
enter
das
icebp
icebp
mov
pop
mov
out
data16
and
pop
imul
ljmp
or
mov
rcrl
faddl
pop
pop
sub
xor
sub
mov
cli
fisttpl
fsubrp
and
aam
das
pop
push
out
pop
clc
push
js
xchg
add
push
mov
out
adc
pop
xchg
mov
call
cmp
loop
push
incl
inc
push
aas
js,pt
inc
add
push
pop
ljmp
cmc
add
std
test
xor
push
std
stos
addr16
rcll
inc
jbe
lds
jns
daa
outsl
lahf
pusha
test
ljmp
mov
je
scas
cmc
js
or
notl
ljmp
fcoms
pop
mov
jg
mov
push
arpl
mov
xchg
mov
faddp
adc
sbb
fwait
xchg
imul
sub
pminsw
fcomip
lcall
aaa
inc
xor
rclb
sbb
push
push
jp
jnp,pn
cmpb
pushl
and
movsl
daa
insb
inc
pushf
xor
ja
popa
mov
jmp
xor
in
js
pushl
jle
rclb
rclb
jb
fst
cmp
cmpb
jg
sbb
repnz
cmp
ljmp
pop
fwait
pusha
sarb
mov
in
adc
mov
lret
xchg
shll
ja
sbb
ljmp
popa
sbb
or
faddl
sub
ja
mov
inc
ljmp
enter
in
lods
es
sub
adc
inc
push
aad
xchg
testb
out
test
call
cmp
pop
ret
jg
push
or
cmp
mov
sbb
mov
cwtl
sbb
pushl
mov
es
add
xchg
mov
cs
inc
inc
loope
cmovs
mov
adc
lret
pop
mov
jp
pushl
push
je
in
shlb
mov
dec
jb
cli
pop
inc
popf
xchg
inc
popf
inc
fldenv
pop
push
popf
insb
shlb
in
ret
scas
inc
lcall
xor
bound
jl
cmc
rcrb
lret
jo
inc
xor
inc
daa
mov
fdivrp
push
fimuls
add
inc
mov
fmulp
xor
je
mov
add
std
bound
push
jge
shr
add
jge
add
lret
out
cs
jl
sub
sarl
fildll
repnz
fwait
xchg
inc
cmp
xor
xor
push
pop
add
add
and
gs
mov
jg
fisttps
fs
dec
in
xorb
mov
pushl
or
push
sbb
fisubrl
adc
loope
cmp
out
push
mov
arpl
or
xchg
adc
pop
pop
gs
mov
aad
jae
sub
lods
xchg
movsb
xchg
dec
xchg
ja
dec
cltd
gs
lcall
cmp
xchg
out
shll
adc
mov
sub
fiadds
popl
jge
gs
xor
ljmp
adc
fildl
pushf
cmp
outsb
popf
adc
stos
mov
jl
outsb
fists
mov
incl
movsl
sbb
mov
pop
lods
repnz
aaa
out
outsb
sahf
cmp
enter
pushl
cld
pushf
in
sub
mov
mov
scas
fisubs
xchg
out
adc
stos
dec
pop
movsl
cmpsb
jecxz
inc
inc
les
xor
jbe
cmpsb
inc
adc
sar
bound
imul
out
xchg
mov
paddd
dec
sub
mov
shll
insb
or
mov
aas
rorb
dec
cmp
loop
insb
sub
ja
aam
icebp
xchg
mov
jae
pop
and
pop
and
inc
daa
sub
jbe
cmc
pushl
js
xchg
leave
lret
jg
sub
xchg
sub
fldenv
pop
mov
std
lcall
sub
pand
fisubs
aam
ret
sbb
lcall
jb
leave
daa
jno
push
ja
xor
mov
cmpsl
jle
push
lea
std
and
sbb
rclb
mov
cmp
push
pop
xchg
orl
fldenv
cld
incl
pop
push
xchg
andb
sub
es
shr
fwait
push
mov
push
pop
pop
inc
ficompl
mov
jg
mov
clc
xchg
dec
mov
mov
imul
cmp
nop
push
cmp
mov
pop
inc
push
cld
and
jnp
push
into
movsb
sahf
add
incl
cmp
xchg
push
jmp
andb
bound
mov
cmp
jmp
div
xchg
jnp
sub
xchg
rcrl
sahf
jle,pt
test
xor
out
pop
pop
cmc
jb
pushl
incb
ret
nop
out
cli
and
fidivl
ljmp
inc
scas
jns
rcll
lea
xchg
jnp
mov
paddsb
int3
pushl
sbb
in
pop
imul
stc
sbb
xor
bound
das
aam
ficoms
je
xchg
mov
les
out
sbb
imul
and
jmp
pop
lret
pop
sbb
sbb
or
pop
iret
into
xchg
ret
mov
out
dec
mov
jmp
push
mov
mov
call
fdivrl
sub
cmp
popa
popa
mov
cmpsb
je
out
sbb
lcall
add
mov
add
imul
cmp
cmp
ja
daa
in
cs
mov
stos
pop
jbe
xchg
xor
scas
dec
jp
or
add
pushl
sbb
rolb
cltd
push
mov
adc
inc
mov
jmp
aam
iret
divl
pop
mov
and
or
or
outsl
jno
lcall
ficompl
stos
mov
cltd
xorl
scas
nop
daa
notl
pop
pushf
dec
push
decl
dec
dec
test
cmp
idiv
loope
mov
rorb
and
lea
push
sbb
mov
jmp
mov
pop
xchg
mov
imul
push
pop
mov
shll
stos
xchg
xchg
cmp
jp
loope
mov
pop
xorl
pop
mov
pushf
imul
dec
shll
incl
stos
ljmp
xchg
mov
mov
lcall
out
mov
xor
ljmp
dec
das
es
mov
jg
cmpsb
fildll
jnp
inc
mov
xor
lcall
adc
movsb
aas
daa
loop
in
out
cmp
sub
sub
xor
out
movsl
addl
jg
popa
cld
pop
js
push
fs
mov
dec
xor
rcrl
lret
flds
dec
outsb
and
das
loopne
adc
sub
add
or
std
ljmp
push
jbe
adcb
fcomip
setle
jg
xor
mov
xchg
jb
and
jmp
lret
mov
push
enter
xor
fsts
sahf
das
subb
push
pop
adc
inc
test
popa
push
and
lcall
mov
inc
dec
inc
sbb
test
bound
mov
jl
aad
xor
jbe
decl
rcrl
mov
lock
cli
icebp
pop
push
jecxz
sub
ljmp
incl
push
out
mov
ljmp
xor
mov
lea
sar
jns
mov
cmp
rcl
or
jo
imul
jg
sbb
xor
xchg
inc
dec
and
pop
xchg
adc
sbb
pushl
jo
scas
fists
cmp
jns
icebp
scas
lock
adc
fs
test
ljmp
lahf
jbe
stos
adc
in
push
or
xchg
sub
sub
mov
jp
lock
clc
mov
or
negb
sarb
incl
lea
std
ljmp
test
cmpsb
inc
ljmp
cld
xchg
mov
in
push
decl
inc
adc
and
movsb
dec
add
pop
mov
fisttps
sub
enter
outsb
sar
mov
inc
ljmp
pushf
or
jl
add
into
push
std
inc
xchg
sbb
or
popa
repz
cmc
cld
mov
mov
jno
cmp
and
mov
hlt
idiv
dec
mov
jb
fsubrl
and
insb
dec
dec
sub
xchg
cli
insl
into
xor
incl
decb
gs
xlat
call
push
into
jp
pop
cli
js
in
neg
jecxz
repnz
je
rolb
test
idivb
push
pop
xchg
push
dec
mov
shlb
call
push
xchg
mov
lcall
mov
jg
xchg
or
imul
dec
cmp
decl
nop
test
sbb
xchg
or
xor
aaa
popa
jg
jle
test
call
pushf
xor
out
lea
cs
xchg
fdivr
out
jge
imul
aas
sbb
xchg
jg
jmp
jnp
pop
xchg
and
push
add
std
subb
sbb
mov
decl
lea
cs
add
cmpsb
push
xor
sbb
push
xlat
mov
add
dec
add
push
mov
cltd
scas
mov
xchg
leave
mov
scas
test
decl
adc
repz
mov
xor
push
add
push
repnz
fbstp
inc
ds
sub
stos
cmp
jmp
adc
es
call
int3
scas
inc
add
xchg
test
cmp
shlb
bnd
mov
cmp
and
sub
fisubs
dec
clc
ja
decl
icebp
adc
pop
mov
imul
mov
sub
incl
daa
xchg
push
lods
bswap
or
push
and
pushf
scas
leave
inc
pop
lret
jae
nop
xchg
in
aad
call
xchg
popf
xor
lds
xor
cwtl
ljmp
ljmp
roll
test
es
fs
sbb
xchg
pop
ljmp
add
mov
adc
popa
mov
cltd
sbb
ljmp
aaa
pop
cs
fdivr
mov
daa
sub
jle
es
pushf
jae
xchg
pop
sarl
insb
ljmp
dec
adc
ljmp
jne
inc
es
ret
mov
test
insl
loope
rcrl
xchg
or
mov
arpl
jg
xchg
and
leave
test
dec
fucomip
std
jmp
aaa
test
incl
int3
js
xor
loope
js
mov
loope
pop
negl
and
jecxz
jle
mov
out
cli
lcall
cmp
mov
out
loop
pop
arpl
insl
addr16
add
test
adc
out
add
inc
and
ret
sti
mov
incl
clc
stc
sarl
icebp
insl
std
fucomp
mov
je
int3
arpl
retw
push
cmp
push
mov
mov
sub
adc
or
je
je
daa
sar
arpl
insb
in
fisubrs
decl
mov
negl
pop
fmuls
push
stc
fsubrl
decl
test
iret
ds
inc
lea
out
icebp
hlt
in
mov
jmp
pushl
sbb
js
mov
jns
sbb
daa
pusha
or
xchg
cmp
std
int3
jmp
mov
cmc
pop
cltd
jb
ja
mov
int3
stos
in
jp
sbb
add
lcall
cmpsb
pop
ficoml
dec
push
mov
jae
cwtl
push
sub
lock
ror
clc
or
pop
loopne
lock
push
mov
push
imul
jno
pusha
scas
add
lret
cmp
xor
pushl
addr16
rcrb
pop
dec
jecxz
fistps
pop
or
and
scas
cmp
incl
inc
aam
rcl
adc
or
ret
sbb
pop
jge
scas
nop
pop
cs
pop
sub
push
mov
mov
lcall
add
lds
jmp
shll
mov
dec
insl
mov
pop
jg
jp
inc
jne
das
fadds
add
xor
and
adc
cltd
shll
ds
lret
mov
and
mov
dec
cmp
cmc
mov
xor
xor
cmpsl
test
cmpsb
cmp
call
test
fdivr
mov
jl
pushl
repz
and
sub
jbe
shll
mov
out
clc
ror
hlt
movsl
jne
and
or
daa
add
incl
outsb
mov
push
mov
aad
aad
aam
jg
mov
ss
clc
jg
call
push
leave
fcmove
push
ds
cwtl
xchg
cmpsl
sbb
rcrb
fwait
and
jb
push
mov
add
aas
call
sub
cmp
cmp
lcall
insb
into
mov
sbb
nop
mov
cli
mov
fcmove
jbe
data16
ds
pop
push
filds
add
mov
push
out
lcall
icebp
jmp
icebp
mov
jecxz
sub
or
aad
dec
xchg
mov
cmp
pop
shlb
mov
pushl
push
ja
call
or
and
push
cli
call
sarl
div
mov
cmc
imul
pop
fistpll
mov
jbe
rcl
ljmp
std
divb
test
push
fcmovu
mov
repz
jg
jmp
and
mov
xor
pop
imul
pop
pop
gs
ljmp
das
adc
or
push
xor
pop
popl
cld
or
lahf
inc
pop
mov
les
dec
xlat
outsb
lret
outsb
mov
sbb
sahf
and
gs
push
xchg
add
psadbw
cmc
xor
sti
pop
cmc
lods
pmuludq
arpl
mov
push
xor
pushf
mul
sbb
icebp
cmp
sbb
sbb
les
fcmovb
subl
mov
inc
in
mov
sysret
inc
cmp
in
mov
sbb
int
sbb
outsl
jmp
pop
inc
stc
rorb
pop
fsubrs
push
arpl
mov
ficompl
stos
mov
fsubr
sahf
pop
ret
or
xchg
jge
fisubrs
clc
pushl
shll
pop
dec
or
in
lahf
cli
inc
dec
jns
or
mov
mov
pop
stc
and
pop
mov
clc
ror
ret
sub
sarb
jae
cmp
mov
es
daa
pop
cli
outsl
call
dec
xor
and
outsb
dec
pop
clc
inc
rolb
outsb
sbb
xorl
mov
movsl
jo
mov
pop
xor
or
inc
loop
iret
jmp
lea
out
mov
dec
ss
jbe
jecxz
out
sbb
sub
int
test
incl
insb
lds
clc
cltd
aam
push
jle
aad
mov
and
mov
ljmp
cmpsb
mov
mov
movsb
imul
decl
lock
fwait
jmp
lock
xchg
mov
test
fsubr
aam
dec
incl
mov
ret
gs
data16
xlat
shll
cmc
shll
cmp
inc
push
dec
jo
push
aad
mov
or
mov
addr16
lock
incl
pop
push
bound
fiadds
sarl
hlt
hlt
sub
lcall
lock
xchg
jbe
addb
jbe
in
add
aad
cli
cld
leave
arpl
xchg
push
in
lods
sub
imul
mov
jmp
ljmp
adc
mov
or
cmp
ds
sub
add
decl
jmp
pop
cmpsl
aaa
pop
seta
jne
dec
add
insl
int3
cld
jmp
es
sahf
push
cmc
jb
lock
enter
jl
out
pushl
dec
cmp
out
dec
fmuls
lahf
inc
lods
cmp
mov
pop
loopne
decl
sub
xor
ja
mov
test
pushl
pop
cmp
adc
or
mov
jg
imul
call
pop
mov
adc
cmp
dec
jnp
jp
inc
ret
cmp
xchg
mov
decl
aas
fimuls
adc
inc
cmp
repz
adc
repz
jnp
aad
mov
cmp
dec
xor
adc
push
insb
push
in
jae
cmp
loopne
mov
push
enter
pop
mov
rclb
orl
push
mov
decl
push
out
stos
sub
inc
fmul
stc
rolb
or
mov
sbb
call
xor
dec
mov
push
xchg
les
clc
cmp
stos
ja
loop
es
lret
sub
nop
jge
stc
dec
fdivrp
push
inc
ljmp
mov
dec
push
cmpsl
xorl
inc
cs
mov
pushl
and
jo
lods
pop
cmpsb
sbb
pop
mov
ss
inc
gs
lahf
mov
jns
fimuls
mov
sub
scas
aad
xchg
sub
int
cmp
jb
sbb
mov
out
or
ds
out
clc
cmp
jo
push
add
and
bound
mov
xchg
jae
std
pushl
cmp
mov
pop
subl
pop
or
cmp
mov
aad
call
cs
or
shlb
cwtl
rcrb
adc
jle
cmp
or
cmp
mov
stc
sahf
int
mov
addr16
jmp
call
xchg
testl
dec
inc
popf
shrl
add
daa
mov
inc
lahf
push
pop
adc
mov
shlb
fistl
out
lcall
inc
fcompl
call
pop
aas
addr16
stos
adc
arpl
lret
push
cs
mov
int3
or
push
je
add
ja
or
push
lea
push
fstps
bound
mov
jbe
outsb
testl
adc
stc
ljmp
jg
adc
es
or
adc
dec
repz
out
sub
inc
jmp
lcall
sub
xor
inc
mov
sbb
add
call
notb
pop
lret
fcmovnu
int3
loope
xchg
add
stos
add
div
push
xchg
divb
pushl
in
sti
insw
and
cmpsb
jbe
pop
mov
push
add
cmp
les
loopne
call
add
push
lods
mov
sbb
sub
xlat
inc
xchg
mov
outsb
cld
lretw
cli
pop
or
mov
adc
jmp
mov
bound
mov
sub
and
and
loopne
xchg
ljmp
mov
pop
inc
mov
push
fimuls
mov
in
adc
mov
adcl
pop
add
xchg
sbb
sub
insb
stos
fimuls
cmc
dec
popf
ljmp
or
add
or
jbe
or
adc
arpl
ret
lcall
push
add
pop
dec
jno
clc
insl
js
push
jecxz
cmp
in
test
ljmp
pushw
dec
sbb
inc
imul
pop
sti
add
or
daa
std
dec
xor
jge
scas
aaa
fldl
scas
clc
fistpll
imulb
mov
ss
mov
ds
loope
mov
clc
jmp
jae
lods
fwait
in
mov
push
jns
lods
jle
test
pusha
push
fwait
ret
nop
xchg
call
mov
inc
in
jl
mov
xchg
stos
leave
adc
imul
lods
xor
cmc
mov
stos
stc
jle
cmc
mov
push
fisubs
mull
push
xchg
addr16
adc
jo
call
mov
adc
jge
cltd
sbb
sti
divb
xor
and
or
shlb
pushl
sahf
xchg
in
fadds
push
sbb
imul
cmp
jmp
clc
mov
mov
sub
lcall
mov
mov
ret
mov
ret
hlt
popa
pop
pop
xchg
les
mov
lret
ds
mov
notl
push
adcb
fcmove
imul
pushl
cld
pushl
push
push
inc
outsl
push
pop
and
sub
cli
adc
or
cmpsb
or
fucomip
cmp
jmp
xchg
inc
push
xlat
test
imul
pop
ret
jnp
inc
in
mov
mov
rcrl
dec
mov
ljmp
cld
mov
or
inc
mov
adc
test
orl
stos
jbe
adc
lods
leave
xchg
test
sbb
sub
es
cmpl
enter
fcomps
lea
test
jp
in
inc
inc
in
inc
dec
out
mov
cmp
push
pop
jmp
jbe
addr16
sti
lods
dec
les
xchg
mov
sarl
sbb
lret
mov
popa
cli
shll
subb
jnp
adc
popa
sbb
mov
push
cmp
negb
punpckhbw
jmp
or
ljmp
push
lret
cmc
mov
mov
or
cld
incl
jno
aas
cmpsb
jge
jmp
jo
stos
mov
push
in
jnp
push
imul
sahf
imul
mov
xor
in
incl
mov
pop
mov
fsubl
scas
inc
mov
lods
pop
shlb
aad
xor
jmp
adc
stos
rcl
imul
or
lcall
xchg
adc
inc
call
jmp
push
lds
xorb
dec
adc
pop
xchg
cmpsb
pop
adc
mov
iret
xchg
shlb
je
jecxz
jp
mov
mov
aaa
call
or
nop
stc
arpl
sub
imul
cmp
or
mov
ss
xor
incl
jb
push
adc
outsb
mov
push
jge
adc
jge
mov
subl
out
in
pop
mov
lods
xorb
aaa
aad
daa
push
sbb
test
fidivrs
incl
push
nop
ss
add
sub
mov
enter
lods
outsl
push
inc
push
test
nop
repnz
cmc
adc
test
pop
in
mov
xor
daa
inc
mov
sub
fwait
inc
add
outsl
clc
jmp
lahf
xchg
pop
inc
pop
xchg
jbe
sahf
stos
dec
pop
pop
wrmsr
xor
mov
jmp
pop
lea
xchg
add
dec
enter
mov
jbe
push
outsl
ljmp
fisubrl
pop
dec
les
popf
adc
fwait
cmp
and
clc
xor
sbb
hlt
mov
jno
push
or
ja
push
and
or
decl
imul
push
mov
stos
in
dec
cmp
mov
repz
and
hlt
repnz
call
and
adc
cmp
mov
daa
fldt
xlat
negl
test
push
test
cli
incl
cld
sti
sbb
xor
rcrb
ja
ss
pop
hlt
jae
mov
incl
aad
pop
push
jle
pop
dec
cmp
pusha
int3
loopne
in
out
mov
ficompl
sbb
call
cld
pop
inc
lds
mov
push
add
enter
xor
jecxz
or
jecxz
pop
rclb
sub
data16
xchg
cmpsl
mov
xlat
adc
call
push
or
inc
inc
mov
mov
mov
popa
pop
and
push
xchg
pop
mov
decl
mov
fs
ljmp
jge
mov
imul
sub
enter
sub
cmp
mov
mov
sub
mov
decl
xchg
test
sub
xor
mov
and
cs
jmp
out
outsl
and
sbb
inc
jns
in
xchg
or
dec
xchg
add
out
cli
hlt
mov
pop
dec
mov
test
sub
and
or
pop
decl
push
rcrl
mov
dec
lahf
sub
ret
mov
inc
pop
int3
fdivr
jmp
das
lods
dec
fsubrl
loopne
out
xlat
in
out
stos
dec
jb
xchg
insb
ret
xchg
pop
push
xor
or
lcall
push
adc
adc
jb
mov
push
mov
daa
sbb
mov
push
sbb
out
repz
jg
popf
movsb
cmp
loop
and
shlb
jp
sub
lods
shll
imul
das
sub
out
xchg
bnd
mov
call
sarb
xchg
jge
or
push
lock
lahf
or
mov
jb
sub
add
movsl
in
pushf
sahf
add
cmp
and
repz
ljmp
lcall
xchg
xchg
adc
sbb
imul
addr16
std
js
and
push
mov
pop
lcall
or
pop
push
dec
pusha
rol
or
sar
roll
xor
and
adc
call
call
arpl
jne
daa
gs
out
std
jg
lahf
mov
mov
decl
lock
enter
inc
lds
pop
mov
mov
cmp
add
fwait
mov
sbb
fnstsw
jae
std
fwait
mov
jo
scas
push
outsl
cli
jg
mov
xchg
xchg
lret
xor
call
mov
sub
and
ret
inc
popa
dec
lret
jo
mov
mov
incl
outsb
inc
adc
inc
mov
or
pop
addr16
lds
xchg
push
or
mov
inc
push
rcll
add
fmull
lcall
repz
jmp
pop
test
mov
decl
mov
xorb
xor
in
fistpll
adc
sub
decl
or
popa
cltd
dec
lret
insl
rorl
xor
cld
xchg
call
push
adc
push
ljmp
inc
jp
jl
adc
cmc
jmp
ja
pop
shll
lcall
push
icebp
fsts
lods
incl
xchg
sub
jnp
push
int3
test
sti
stos
dec
shll
add
pushl
out
shl
fbstp
jg
xchg
mov
lcall
fsts
ljmp
xchg
mov
xor
popa
jg
icebp
repz
adc
lods
jnp
mov
push
imul
cmpsb
cld
fcomip
mov
and
adc
jmp
jb
test
es
mov
inc
lret
pusha
cld
decl
lret
jp
xchg
or
jno
js
mov
in
pop
ret
cwtl
jne
jle
push
xor
mov
leave
fs
ljmp
cli
sub
icebp
aas
add
fisubrl
adc
mov
jg
sub
incl
push
sub
test
stos
mov
fldcw
add
test
dec
insl
jo
ficomps
xchg
data16
arpl
sbb
lret
mov
in
stc
daa
mov
jg
sbb
fs
incl
dec
bound
xchg
jnp
mov
outsb
sar
int
or
ret
lcall
push
div
jne
psubsb
movsb
pop
stos
mov
lea
cmp
int3
xchg
int3
or
call
jbe
ss
sbb
adc
xchg
sub
mov
fdivrs
sbb
dec
std
adc
fmul
mov
pop
popa
and
mov
pop
pop
or
out
cli
pop
or
insb
and
int3
and
in
dec
push
popa
xor
nop
cmpsl
jmp
loop
into
arpl
and
sbb
xchg
call
cmp
and
sub
filds
enter
jmp
adc
xchg
xchg
xchg
dec
mov
xchg
ret
cmp
jno
test
adc
ljmp
mov
ja
outsl
ror
testb
mov
pop
push
xchg
pop
and
xchg
add
cmp
sub
decl
sbb
mov
push
out
adc
pop
mov
js
gs
push
xor
pusha
mov
jb
inc
adc
imul
xor
fnstenv
pop
cld
push
or
in
rol
adc
lret
jecxz
pop
ret
cli
jnp
outsl
jecxz
push
cmp
cli
inc
push
popw
js
inc
mov
outsb
jmp
rorl
scas
pusha
inc
mov
ljmp
scas
jb
sbb
data16
mov
es
fs
push
aam
mov
sbb
ret
cmp
js
int
lahf
rcr
mov
xchg
cld
add
nop
pop
mov
ss
fnsave
mov
es
hlt
nop
mov
jnp
mov
cmp
inc
arpl
or
xchg
jecxz
adc
nop
add
mov
xchg
xor
xlat
test
jle
mov
sti
xor
mov
sub
push
pushf
push
cmp
pop
jbe
adc
cmc
cmp
mov
clc
fisubl
adc
aad
xor
add
lret
xchg
and
push
fsubr
stc
or
jle
imul
cmp
adc
mov
ljmp
lods
push
ss
push
int
inc
int
xor
xorb
mov
cs
inc
scas
idivb
iret
lds
mov
cmp
sub
test
repnz
jge
inc
xchg
popa
iret
mov
ficoms
mov
das
jp
shrb
rcrl
xchg
sub
mov
pop
stc
xchg
mov
lods
or
inc
and
ljmp
sbb
mov
lock
push
stos
cmpsb
repz
and
push
idivl
fldt
mov
lods
jne
sub
lds
ss
jno
cmp
jge
xor
clc
push
pusha
les
cmp
and
cs
popl
dec
repnz
mov
imulb
movsb
sti
dec
xchg
cmp
lock
lcall
pop
push
cmp
cmp
cmp
cmc
ljmp
sub
pushl
rcr
sbb
out
mov
adc
outsl
mov
rcr
push
movsl
pushl
push
xchg
popf
fimuls
jmp
mov
aaa
adc
xor
test
nop
out
cli
mov
shll
inc
ljmp
lea
lds
divl
and
cwtl
inc
and
adc
mov
jmp
fcmovb
sahf
aaa
daa
sbb
jle
push
pop
mov
jmp
idiv
iret
and
movsl
jecxz
decl
ret
fwait
adc
icebp
ljmp
sub
jno
mov
sub
pushl
inc
scas
dec
inc
pusha
popa
push
mov
add
test
sbb
inc
daa
loopne
mov
xchg
push
std
mov
jns
std
add
jns
movsl
popa
cld
dec
pop
sub
outsl
mov
jb
out
test
or
decl
faddl
loope
adc
aas
sub
sbb
inc
dec
clc
incl
push
dec
xchg
jne
push
roll
lahf
movsb
mov
ljmp
bound
dec
push
popf
int
out
or
movups
fwait
test
js
sub
rcll
xchg
inc
xchg
daa
shrb
mov
and
repz
stc
stos
dec
add
pushl
inc
cs
popa
push
and
mov
adc
xchg
inc
mov
sub
mov
mov
xor
out
xchg
mov
adc
mov
adc
push
lods
lcall
call
xor
mov
inc
and
lds
out
xor
pushl
mov
cs
xchg
cli
call
mov
divb
test
xor
dec
sarl
imul
decl
sub
lds
lods
mov
fsubrs
cmp
push
adc
jg
pop
add
mov
fldl
fcoml
icebp
stos
fisubs
scas
mov
mov
js
xor
out
clc
jmp
adc
jmp
rorb
sub
shr
imul
loope
adc
xchg
mov
jo
jbe
mov
xchg
add
js
pushl
int3
imul
call
sarl
orb
pushf
out
pushf
sub
jb
xchg
pushl
sub
iret
and
mov
xchg
cmp
aaa
lock
decl
mov
dec
jo
repnz
leave
out
pop
cltd
add
xor
lcall
mov
aad
dec
jmp
mov
out
pop
int
push
rolb
or
stos
xlat
mov
xor
out
stc
adc
scas
scas
sbb
or
fwait
out
inc
sbb
pushl
imul
and
inc
adc
and
in
shrb
adc
mov
inc
jns
fldl
xchg
fisubrl
fs
inc
scas
cmp
mov
or
divl
mov
les
pop
cmpsl
add
inc
adc
fiaddl
sub
jg
dec
outsl
adc
idiv
pop
xchg
ljmp
ficoml
xchg
dec
cld
je
loopne
sub
aas
xor
cltd
mov
pop
fimull
adcl
loope
incl
scas
sti
add
movsb
and
subb
fnstsw
incb
xchg
cs
jmp
sub
orb
and
stos
mov
in
call
int
fwait
xorl
cmp
popa
cli
sub
mov
cmp
dec
cmp
push
push
jge
jl
in
sub
in
inc
shr
adcl
loop
outsb
aas
sub
sub
jge
not
movsl
adc
lret
decl
push
push
div
insl
aam
hlt
sbb
and
fidivrl
in
push
mov
or
cmpb
push
pop
sub
or
aad
xchg
fisttpl
jnp
jo
or
fnsave
push
dec
xchg
aam
jb
mulb
push
lahf
lahf
cmp
mov
incl
or
add
pop
sbb
sub
stos
mov
jl
xchg
sub
ljmp
lret
sbb
cmpsl
push
fwait
gs
ss
test
sbbb
adc
clc
lret
xchg
mov
cmovbe
push
mov
mov
mov
mov
loop
inc
cmpsb
push
test
dec
jg
mov
jbe
jmp
into
mov
push
fstpt
add
or
and
lds
cli
mov
rolb
jecxz
lcall
xor
adc
mov
xchg
xchg
rorb
add
mov
sub
cmp
push
in
test
mov
addl
stc
lcall
pop
addr16
mov
scas
jecxz
notb
fcmovbe
in
fimull
jmp
and
mov
dec
jae
xlat
xchg
fdivs
push
mov
lret
pop
jmp
add
sbb
stos
decl
pushl
adc
xchg
pop
popa
jecxz
cmpsl
repnz
repnz
jl
cmpsb
xchg
imul
ds
test
loope
sbb
pop
jp
leave
adc
xchg
push
std
sub
lcall
xchg
addr16
mov
call
mov
scas
mov
jg
push
jbe
push
push
pushf
arpl
cmp
pop
dec
mov
push
mov
shlb
mov
lcall
loopne
es
jmp
mov
enter
cltd
cmpsl
jle
mull
cwtl
mov
sahf
enter
and
aaa
pushl
aam
in
aam
dec
enter
sti
lret
into
fstpl
xchg
loopne
and
aad
lret
mov
aas
sahf
ret
pushf
loope
mov
cmc
scas
sbb
dec
repnz
sub
cli
and
adc
ljmp
sub
mov
jbe
inc
sar
pop
xor
sub
int3
push
xor
dec
test
pushl
das
mov
and
jp
mov
mov
mov
sbb
repz
sub
push
sahf
ds
xchg
sub
cmp
mov
mov
addl
movsb
push
ret
icebp
mov
pop
mov
mov
incl
and
fnstenv
pop
mov
pop
jbe
push
cmp
fidivs
sti
ljmp
sbb
subl
popa
sub
sahf
subl
cmpsl
pop
push
lods
xchg
cmp
jg
push
fs
xor
sub
mov
cmpsb
data16
inc
adc
xor
aam
dec
gs
lock
push
sbb
ja
js
jae
sub
adcb
out
push
stc
jg
lcall
and
xchg
cmc
lock
xor
nop
jne
xchg
lcall
lods
pusha
xchg
push
movsl
jb
sub
lahf
enter
mov
cmpsl
sbbb
and
xchg
incl
sub
mov
daa
ds
pop
pop
loop,pt
mov
dec
push
clc
or
lcall
mov
dec
dec
loop
movsb
cmpsb
in
incl
cmp
sahf
cmpsl
shll
sbb
mov
mov
fwait
mov
test
fcoml
jmp
adc
jb
ja
inc
rorl
mov
pushf
lods
orl
inc
subl
pop
in
jae
aad
repnz
add
adc
sbb
and
data16
dec
push
or
push
call
push
hlt
fs
lea
iret
fsts
sub
xor
dec
popf
xchg
fs
dec
and
cmp
dec
mov
sub
jbe
sbb
or
out
in
add
or
orb
ljmp
fsts
shlb
mov
sub
push
pop
inc
popa
mov
pop
inc
popa
ljmp
sar
xor
fnsave
in
xor
sub
xchg
adc
push
lcall
jne
add
mov
cmp
jecxz
hlt
fidivrs
adc
das
clc
jl
adc
sub
ret
pop
daa
cmp
fistps
pushl
dec
jo
dec
je
fcmovnu
jge
popf
xchg
push
xchg
xchg
mov
mov
xor
jmp
sti
stos
xrelease
into
mov
ficomps
shlb
mov
pop
push
cmp
rclb
pushl
cmp
inc
mov
shll
mov
imul
jne
call
inc
xchg
mov
jmp
mov
cmp
and
notb
adc
cmc
mov
in
mov
pushl
add
adcl
cmp
xchg
push
mov
dec
sar
pop
jp
stc
adc
jo
mov
mov
pushl
cmpsl
adc
inc
inc
jle
lcall
xchg
xchg
push
push
xchg
jle
ljmp
cmp
fwait
jo
aas
jecxz
or
orl
mov
sub
ljmp
push
in
sub
jns
and
movl
push
fildl
push
pop
sbb
lcall
mov
sbb
dec
cmp
mov
pop
int
xchg
jno
cmpsb
pcmpeqw
je
loopw
pop
test
test
push
or
lcall
mov
popf
push
pop
leave
ret
popa
mov
mov
andl
pshufw
decl
lock
cltd
imul
mov
imul
out
lods
cmp
scas
jmp
out
addr16
ret
xchg
sti
jmp
pop
mov
sbb
pop
sti
cs
loope
rol
sbb
sub
mov
lret
xor
sbbb
mov
xor
test
pop
je
test
das
mov
mov
cmpsl
cmpsb
stos
addr16
std
sbb
sub
pop
dec
mov
push
fsubl
mov
mov
jge
mov
pop
call
xor
push
pop
loope
adc
cld
adc
ljmp
xlat
xor
push
sub
mov
cli
loop
mov
xor
daa
mov
mov
push
les
mov
mov
pop
sub
jmp
sarl
lret
push
clc
scas
out
ficoms
dec
cmp
push
divl
call
adc
mov
cmp
xchg
xchg
inc
xlat
xlat
ficomps
sbb
xchg
jne
in
xchg
adc
shlb
or
adc
xor
xor
dec
mov
lcall
jnp
es
data16
jl
xchg
out
out
pushf
dec
out
movsl
mov
nop
decl
das
test
aaa
jmp
cmp
adc
cld
xor
dec
into
clc
insl
jae
loopne
ljmp
xor
mov
add
jg
mov
repz
dec
jns
imul
lcall
pop
mov
dec
arpl
xor
leave
mov
mov
jmp
jg
xor
mov
dec
pushw
addl
cwtl
imul
cli
push
cmp
jno
pushf
xchg
loop
jmp
sti
fnstcw
clc
sarb
jnp
push
mov
or
mov
je
mulb
cwtl
mov
cmc
imul
in
mul
call
shlb
adc
sbb
adc
fcompl
testb
mov
rorb
cmpsl
popa
pop
aad
sub
stc
xchg
push
shll
pop
mov
pop
xchg
call
pop
cmpb
ljmp
lods
xchg
adc
push
or
or
jae
push
or
pushl
ret
test
stos
es
aaa
jg
pop
ret
and
pushl
dec
fldcw
in
mov
outsb
sbb
or
add
rcr
dec
jecxz
fdivr
ja
jae
inc
xchg
add
icebp
mov
jle
xor
icebp
aam
movsl
mull
insb
imul
mov
sub
sub
and
xor
andb
dec
aaa
cli
outsb
outsl
xlat
test
call
pop
test
ljmp
fisttps
mov
nop
mov
dec
lock
jg
lods
cmp
out
jmp
inc
jbe
mov
wrmsr
pop
js
jecxz,pn
adc
xchg
sbb
or
in
into
mov
lea
xchg
cwtl
sbb
scas
or
rcr
xor
lcall
aas
xchg
adc
fsubp
mov
cld
roll
ja
xor
xchg
push
stc
sbb
ljmp
lods
lock
out
cmp
mov
pop
pop
fs
arpl
int
add
and
xchg
nop
lcall
jge
lahf
push
ljmp
xchg
test
ja,pt
outsb
cmp
mov
lcall
mov
mov
icebp
movnti
iret
rcrl
push
adc
mov
aas
in
cli
incl
xchg
sub
ret
imul
adcb
mov
inc
std
incl
jno
cmp
call
or
xchg
inc
mov
cmc
lods
cmpsb
lcall
adc
inc
mov
std
das
mov
xchg
bound
call
adc
pop
jns
mov
pushf
ret
sbb
mov
push
daa
push
adc
lret
les
movsl
aad
push
idivl
call
xor
fidivrs
sub
push
and
addr16
mov
pushf
adc
xor
in
ds
mov
lcall
pop
xor
mov
add
xchg
insb
cmpsl
decl
outsb
out
fsubrl
and
jg
lds
sti
push
jg
sbb
push
fldenv
pop
mov
ljmp
imul
mov
xchg
jl
gs
lock
sbb
or
push
fwait
push
jle
cmp
push
nop
icebp
ljmp
mov
push
mov
in
int3
das
xlat
fcomip
jae
cs
jl
out
icebp
out
xchg
push
ficoml
ret
idivl
in
pop
es
adc
idivl
incl
andb
inc
push
notb
outsb
sbb
adc
mov
push
xor
mov
push
enter
repz
jnp
push
pop
mov
iret
xor
mov
hlt
decl
xor
or
lds
je
sub
fstpl
mov
call
cmpsb
in
into
and
dec
scas
push
adc
js
xchg
leave
int
sbb
cmp
mov
cli
dec
push
mov
jl
adc
jne
aad
mov
lock
lret
stc
mov
xchg
bound
xchg
mov
pop
fistpll
cmp
xchg
data16
jge
aam
push
push
cmp
das
loop
pop
sbb
decl
add
xor
cltd
sbb
mov
int
scas
neg
dec
mov
mov
test
decl
lret
ss
fstpt
or
arpl
cs
sarl
dec
jno
bound
jg
mov
dec
jb
jns
push
cli
pop
negl
mov
js
sbb
arpl
mov
cmp
pop
cwtl
mov
lcall
or
sub
in
adc
or
loope
out
mov
inc
pop
out
sub
mov
lods
gs
adc
push
dec
fmull
lret
mov
ljmp
pusha
ljmp
cmpsl
inc
xchg
pop
cmp
aas
popa
xor
mov
in
push
ljmp
jp
mov
mov
fnstenv
sbb
adc
iret
xlat
popa
jb
xchg
adc
insb
scas
imul
loope
mov
xchg
xchg
ds
in
jnp
jmp
repz
in
cld
ljmp
shrb
shrl
insb
data16
stos
addl
movsl
xor
int
push
mov
jg
and
push
jo
mov
add
incl
sahf
xlat
enter
js
cmp
in
mov
pop
sub
test
ljmp
pop
inc
mov
pushl
dec
mov
push
jg
push
mov
jl
mov
aaa
pop
sbb
push
push
js
call
xor
mov
push
lcallw
nop
jb
or
sti
xchg
aaa
fstpt
in
rcr
xchg
jmp
jb
ja
je
adc
push
inc
movsb
inc
orl
xlat
mov
sub
sbb
xor
decl
pop
mov
pusha
dec
and
and
leave
add
enter
or
jecxz
imul
xchg
bndstx
dec
or
xchg
outsl
rolb
jbe
mov
jmp
addr16
popa
push
xchg
in
stos
push
xchg
mov
lea
pop
out
mov
sbb
insl
mov
pop
push
aas
mov
decl
cmp
jae
cmc
iretw
out
aaa
jbe
cli
aad
lcall
push
ljmp
pop
andl
outsl
mov
aaa
cli
xor
stos
loop
repnz
fidivrl
imul
loope
add
mov
fwait
mov
jp
mov
mov
orb
icebp
repnz
popa
xchg
mov
clc
inc
inc
neg
mov
xlat
xchg
and
lods
fcomps
sub
rcll
decl
flds
out
add
sbbl
dec
lds
sub
mov
call
out
clc
call
cmp
outsl
aaa
sbb
mov
mov
cmc
incl
leave
lods
or
movsb
xor
xor
or
jmp
mov
mov
add
rolb
sub
lds
loope
sbb
sub
mov
movsl
inc
xor
lock
scas
ret
neg
pushf
fisubs
sti
mov
mov
cs
cwtl
mov
dec
lahf
adc
out
ja
mov
jp
jmp
or
or
sub
popf
std
cltd
js
cmp
je
pop
jle
xchg
adc
jg
cmp
add
call
mov
cwtl
dec
jg
mov
fs
incl
pushf
cmpsb
in
mov
adc
push
repnz
or
xchg
pop
jecxz
or
lcall
ds
dec
dec
sbbb
mov
mov
aam
adc
push
pop
and
dec
inc
out
add
jle
int3
mov
cmpsl
std
xor
test
mov
pop
pop
adc
pop
add
lret
jmp
jmp
xchg
lods
decl
scas
adc
iret
andb
pop
xlat
fsts
mov
sbb
pushl
dec
mov
imul
movsl
mov
fneni(8087
xchg
ljmp
std
adc
inc
or
sti
lods
mov
sbb
lock
scas
cli
inc
xchg
sti
ret
jl
fimull
mov
in
cld
decl
mov
xor
cmp
lea
push
sub
decl
loopne
sub
mov
cmp
add
lods
mov
stos
movq
jmp
or
fwait
dec
and
call
int
loopne
and
mov
inc
xlat
mov
je
idivl
fsubl
or
adc
and
sub
xorb
mov
mov
dec
aad
fnstsw
int3
xchg
and
add
out
cli
add
loopne
pop
pop
nop
cmpl
jns
sub
gs
mov
insl
cmp
movsb
or
sub
fiadds
aam
popl
pop
mov
in
fcomip
ljmp
cmp
jmp
cmp
jnp
inc
inc
dec
jge
jne
push
cld
incl
scas
push
dec
inc
scas
in
daa
mov
ss
pop
cmp
cld
stc
in
outsl
dec
mov
ds
loopne
loope
inc
jno
hlt
lcall
insb
xor
enter
xchg
dec
sub
fbstp
andl
mov
cs
test
xor
subl
push
dec
lahf
pop
jmp
je
adc
out
xor
lods
jmp
xchg
xchg
xorl
test
mov
mov
dec
nop
into
mov
mov
xor
inc
pop
call
out
xor
pushl
ret
dec
sahf
push
xchg
lret
rcr
dec
incb
or
aaa
cmp
add
decl
pop
sub
xchg
fnstcw
lea
push
es
aaa
cld
xchg
sub
hlt
test
mov
mov
xor
icebp
cltd
or
dec
popf
test
popa
mov
dec
jae
lret
sbb
or
xchg
and
fmul
arpl
xchg
popa
inc
cld
jg
mov
or
inc
push
adc
dec
das
jge
jg
and
lahf
adc
pop
and
nop
fdivl
test
pushl
sbb
std
sub
fnstenv
mov
movsl
loope
add
call
inc
pop
scas
jo
xchg
std
aaa
push
stos
int
xlat
aas
jle
pop
orb
stc
incl
out
insl
dec
cltd
mov
jmp
jge
pushf
or
divl
out
cmp
insl
jno
jns
sarl
jbe
mov
ljmp
ret
cs
negl
push
inc
push
imul
xor
xor
push
adc
mov
mov
add
push
insl
js
jg
pushl
lahf
pop
rcrb
pop
fimull
and
push
mov
stos
imul
mov
dec
cs
sahf
jmp
cmpsb
outsl
pop
inc
lods
movsb
cmp
orl
dec
out
push
push
test
push
inc
cli
incl
dec
push
adc
cmp
dec
stos
pop
adc
data16
decl
nop
mov
iret
leave
clc
adc
adc
cvtps2pd
sbb
fdivr
push
aaa
push
add
xor
xor
pusha
jg
pusha
xlat
adc
ljmp
popa
and
fwait
jne
test
jp
sbb
icebp
sbb
inc
leave
lods
fisubs
movsb
ljmp
mov
adc
pop
adc
mov
imul
shll
or
enter
push
ret
lahf
pop
cmp
adc
lods
add
lods
mov
xchg
imul
xor
pop
divb
call
stc
adc
jno
out
sub
mov
mov
test
insb
call
negl
scas
sub
ret
jb
les
mov
lea
call
jl
sbb
xor
lods
fcmove
incl
lret
je
cmp
stos
mov
aad
cmp
shl
hlt
xchg
test
lcall
mov
xchg
push
mov
test
shrd
mov
lret
adc
mov
mov
adc
lea
in
xor
call
sbb
lods
xor
mov
fbld
pop
cmp
movsb
ficoml
fimull
push
lret
push
pushl
push
ljmp
ret
sub
lea
push
xchg
mov
call
call
cmp
mov
jno
jg
add
push
sbb
sbbl
sbb
cwtl
adc
mov
xchg
mov
fistpll
ljmp
cli
jmp
repnz
jns
icebp
sub
mov
clc
push
inc
adc
loop
aam
pop
pushl
jmp
andl
xchg
scas
cli
xchg
inc
push
std
or
lcall
cmp
or
inc
adc
ror
and
xchg
scas
and
incl
cld
jp
inc
ds
jbe
daa
jl
dec
daa
aaa
scas
testb
cwtl
into
int
pop
ljmp
addl
dec
sti
lock
ss
shll
xchg
in
fcoms
push
repz
in
bound
in
push
call
xlat
mov
test
mov
fdiv
lahf
mov
ror
and
sbb
xchg
cmpsb
cmp
pop
sar
push
test
add
shlb
sbb
dec
mov
mov
test
fmull
lcall
xor
decl
mov
test
jne
xchg
adc
or
test
sbb
xor
jno
mov
jl
test
push
or
add
xchg
cmpsl
add
xorb
sub
xchg
sub
sub
ljmp
enter
dec
loopne
lret
cmpl
stos
fwait
push
insl
stos
sub
cwtl
sbb
decl
dec
push
hlt
push
or
cmp
aad
xchg
xor
ljmp
loopne
mov
lcall
ljmp
mov
or
test
add
int
mov
out
loopne
inc
adc
repz
ds
js
subb
mov
mov
mov
rcr
lds
scas
pop
jo
mov
stc
cli
aaa
sub
cmp
fnsave
mov
sbb
sub
xchg
mov
insb
and
enter
cmp
call
or
mov
divb
adc
pop
dec
cmpsb
pushf
or
dec
mov
jmp
mov
std
pushl
ret
inc
gs
pop
sahf
stos
and
enter
divl
mov
xlat
fcomip
jg
mov
scas
ret
ja
xor
or
out
and
mov
mov
mov
ret
je,pn
xor
incl
sbb
rorb
xorb
mov
pop
pop
int3
mov
insl
ljmp
aam
popa
sub
mov
sub
movsl
and
out
pushl
cld
inc
out
xchg
pop
daa
inc
clc
mov
mov
mov
xchg
icebp
mov
or
call
out
mov
cmp
movsb
test
jns
xlat
pop
incb
sub
xor
decl
sub
mov
xor
sbb
and
bound
test
mov
xchg
cmp
mov
mov
pop
push
pop
iret
ja
fs
ljmp
inc
adc
pushf
stos
add
nop
xchg
push
pushf
leave
sub
xchg
lods
or
fidivs
cmc
or
ret
pusha
test
dec
sti
sti
inc
mov
js
cmp
mov
test
pop
mov
jmp
imul
je
or
lahf
dec
addr16
jne
mov
fimull
xchg
repz
or
aas
call
lret
jae
sub
fcompl
outsl
into
cmpsl
push
jno
dec
aam
mov
mov
ret
push
cmp
mov
xor
xchg
mov
js
cmp
cmp
test
aad
or
add
mov
mov
test
ljmp
adc
shr
sbb
jp
ret
cmp
fldcw
or
ficompl
ljmp
loopne
test
adc
out
test
sub
xor
fisubs
repnz
leave
fstl
xlat
xor
push
add
lods
ret
pushl
daa
inc
adc
dec
jge
test
cmp
mov
xchg
es
lods
lret
lcall
sub
ret
sub
repnz
imul
mov
aaa
incl
lods
dec
ret
cs
jno
in
stos
push
push
xchg
sbb
xchg
std
fdivrs
stos
addr16
mov
or
movsb
repz
cli
push
sbb
mov
sbb
adc
decl
out
stos
out
mov
stos
pop
or
jmp
add
movsb
jle
sbb
loope
shlb
push
pop
mov
mov
repz
add
decl
inc
jge
push
sbb
gs
dec
dec
mov
in
popa
push
movsl
or
jecxz
or
mov
jmp
jmp
mov
aaa
xlat
inc
pop
insb
add
into
mov
add
loopne
jl
lcall
lcall
icebp
into
push
pop
dec
popf
ret
and
aaa
inc
inc
fcmovnbe
jp
arpl
int3
sub
decl
and
push
jae
incb
sub
cmpsb
lock
fcomip
incl
in
movsb
add
in
shlb
pop
call
mov
add
or
jmp
sbb
or
push
adc
pop
out
mov
daa
sub
push
adc
int
cwtl
and
incl
rorb
push
mov
sub
into
add
fldenv
pop
dec
dec
sub
jbe
lock
icebp
push
jg
fdivr
and
test
push
mov
pop
or
pop
mov
ret
jmp
cmp
out
pop
scas
push
andb
pop
adc
xchg
js
bound
mov
inc
push
imul
enter
pop
dec
and
cltd
and
dec
jg
cmp
rolb
andl
xchg
ss
xor
mov
fistl
or
daa
iret
sbb
and
push
sbb
mov
cli
pushl
sbb
fs
lcall
loope
mov
or
jmp
dec
jo
inc
sarb
aam
in
cmp
in
ljmp
test
push
mov
jbe
cs
lods
incl
int
iret
sbbl
mov
sub
fs
in
bound
mov
ljmp
popa
fisubs
mov
js
mov
cmp
jmp
jge
or
sbb
je
adc
cwtl
ret
xchg
push
jecxz
mov
cmp
adc
out
mov
out
cmp
call
cli
mulb
sub
jp
call
xor
rorl
add
mov
xchg
pop
adcb
and
jle
mov
jp
sahf
mov
ljmp
mov
je
push
xchg
mov
int
in
orl
inc
sbb
cmovge
fimuls
das
or
cmp
mov
fistpl
and
fsubl
jmp
pushl
dec
cs
subl
in
pop
insl
lret
gs
shlb
cli
shl
and
popa
not
fidivrl
and
aas
xchg
lcall
sbb
push
in
outsb
adc
dec
fdivs
movl
lcall
jne
mov
mov
inc
jecxz
add
push
dec
lret
out
inc
popa
add
jne
mov
lahf
jmp
daa
movsb
xor
dec
push
dec
jp
or
inc
jmp
push
mov
cli
xor
cmp
fstps
pop
idivl
adc
mov
pushl
cmp
sbb
add
and
std
ror
incl
jg
cmc
fstps
fadds
popf
inc
leave
insb
jl
stos
fnstenv
lret
ss
incl
and
inc
pop
gs
ljmp
lret
cld
or
popa
stc
push
pusha
adc
fwait
das
push
sub
call
mov
outsl
negw
push
faddl
jo
mov
test
incl
stos
adc
mov
sub
je
mov
and
inc
gs
lcall
outsb
leave
loope
jbe
add
push
outsl
pop
adc
add
orb
nop
inc
push
out
test
cs
dec
jmp
dec
and
out
jne
test
insb
push
inc
or
pop
inc
dec
popl
push
xor
in
pop
xor
jno
lret
addb
inc
mov
jae
bound
stc
sub
push
mov
jo
imul
or
mov
or
ds
add
adc
push
inc
xlat
sub
inc
inc
add
add
data16
add
lcall
pusha
pop
xchg
in
and
cmp
add
sbb
adc
push
mov
outsl
jg
dec
pop
push
outsl
outsl
insb
push
push
xchg
jo
push
mov
xor
dec
gs
push
insl
mov
adc
inc
add
mov
jae
sub
adc
imul
mov
jnp
jne
js
stos
pop
inc
fbld
sub
cmp
xor
outsb
sub
and
imul
nop
or
icebp
loope
push
fisubrl
push
adc
outsl
insl
insl
sbb
sbb
addb
shlb
and
outsb
inc
and
out
int
push
adc
push
outsb
dec
fdivrs
in
pop
xor
inc
insb
sbb
inc
dec
xorb
addl
inc
mov
cmpsb
insl
push
lcall
imul
fldenv
insb
jne
xorb
pop
filds
data16
sbb
dec
loope
xor
fwait
push
fstpl
mov
mov
add
push
add
andb
fsubs
jp
push
mov
add
orl
inc
push
jne
subl
pop
push
fcompl
gs
mov
push
jns
out
fmul
insb
cmp
xchg
adc
pusha
js
add
pop
movsb
insb
jbe
jne
inc
jecxz
xchg
adc
mov
int3
mov
jae
adc
inc
insb
rcll
inc
mov
push
sbb
inc
or
dec
lds
sub
addr16
push
pop
fstl
adc
jo
push
dec
inc
dec
xor
sbb
mov
je,pn
insb
jae
arpl
addl
aad
in
mov
push
pop
or
pop
iret
pop
loopne
pop
push
xor
cmp
in
ror
or
in
roll
pop
push
xchg
imul
in
scas
mov
sbb
inc
mov
dec
loopne
push
jne
dec
pop
js
pop
adc
jns
ficomps
das
sub
dec
jae
mov
or
xchg
inc
dec
or
inc
mov
pop
dec
add
sub
jb
cmc
mov
pop
fs
jne
jge
xchg
lods
xor
call
ja
mov
movsl
call
lods
call
mov
or
adc
cmp
arpl
jnp
inc
popa
es
jp
test
xchg
adcl
xor
mov
aas
sbb
add
insl
jno
orb
adc
mov
pop
mov
jns
int
rorb
push
xor
jmp
bound
and
pop
pop
lods
lods
jmp
aad
jns
adc
inc
inc
jbe
sarl
mov
jge
sbb
cli
mov
adc
and
xor
je
insl
adc
or
push
es
mov
sub
or
push
and
jns
loopne
xchg
and
or
mov
dec
sub
iret
bound
cmp
insl
adc
push
sarl
jbe
gs
jl
nop
add
dec
push
jne
inc
xor
inc
dec
adc
lcall
jecxz
test
and
pop
xor
std
test
insl
sbb
mov
adc
or
add
xlat
loopne
test
popa
push
xchg
filds
sbb
adc
add
pushf
xor
push
dec
mov
repz
mov
mov
outsl
jae
ljmp
mov
out
sbb
dec
jo
mov
add
add
into
sbbb
push
push
dec
inc
or
gs
push
rclb
cli
mov
jl
mov
add
roll
scas
jbe,pt
int
dec
mov
arpl
xor
push
or
fsubl
dec
imul
push
loop
inc
add
outsl
rcll
and
sub
sbb
pusha
cmp
clc
divb
dec
cmp
and
test
sarl
sbbl
insl
aaa
and
mov
jno
inc
sub
fstpt
pop
pop
pop
jo
inc
mov
pop
push
popa
dec
rcll
sbb
mov
pop
fs
jmp
jo
in
mov
iret
push
outsl
rolb
xchg
and
lret
in
in
inc
push
cmpsl
and
into
jo
inc
inc
rcr
arpl
arpl
scas
mov
inc
imul
lods
push
ret
loop
fs
sbb
mov
mov
push
js
insb
mov
rolb
jle
psubsw
push
jecxz
testl
shl
mov
jae
cmp
mov
scas
scas
les
sbb
jne
mov
sbb
leave
jl
js
enter
jmp
imul
dec
inc
cmp
lret
je
push
jle
jo
je
scas
push
loopne
sbb
sar
and
sti
cs
xor
push
pop
xor
shlb
add
adc
mov
mov
push
jo
pop
and
adc
jnp
lock
outsb
dec
scas
xchg
cmpsl
loope
add
ss
repz
lock
pop
add
add
mov
mov
adc
xchg
movsb
dec
adc
dec
sub
movhps
lods
imul
add
inc
shll
adc
in
pop
rolb
pushf
mov
mov
scas
and
mov
arpl
xor
inc
jo
fbstp
ds
sbb
adc
fstl
jmp
push
jb
inc
jae
jo
pop
sbb
inc
aas
inc
jb
and
push
pop
adc
xor
imul
pop
adc
inc
jb
push
rclb
push
js
cs
inc
jo
icebp
or
inc
dec
jl
and
add
and
xchg
cmp
adcb
pop
lock
or
sbb
cmpsl
push
pmulhw
je
in
push
adc
mov
insl
addr16
and
jo
lret
nop
movl
pop
imul
jns
inc
in
std
lcall
movsb
imul
mov
mov
jbe
je
movsl
push
outsl
ljmp
dec
jno
sbb
faddp
jmp
jb
xchg
sahf
clc
dec
mov
dec
add
cwtl
dec
fnstsw
insb
mov
lock
das
lds
add
movsb
popa
or
dec
movsb
ja
cmp
mov
cmp
leave
add
insb
adc
shlb
dec
sub
outsb
ja
push
loope
sbb
mov
lods
loope
sar
fsubp
nop
cltd
xchg
adcb
mov
add
mov
pop
push
dec
mov
std
push
test
pusha
mov
aam
adc
push
insl
or
or
cmp
mov
pop
sub
insl
xor
dec
inc
inc
mov
daa
jbe
push
lds
aas
or
pusha
adc
sbb
pop
jbe
mov
dec
xchg
icebp
pop
and
xor
outsb
mov
jo
outsb
fistl
jl
pop
xor
and
insb
and
dec
popw
imul
popa
add
scas
ret
mov
or
jo
pop
jmp
pop
mov
or
fadd
scas
inc
sbb
jp
stos
mov
fs
inc
jp
sahf
outsb
cmp
pop
sbb
lcall
mov
lods
lahf
add
fdivs
rcrl
sbbb
call
jns
ret
mov
dec
addr16
fs
fildl
out
out
adc
test
incl
fidivrs
fs
fdivrl
sbb
pop
test
dec
mov
inc
inc
push
jne
mov
adc
mov
in
xchg
ffreep
jo
add
pop
icebp
or
mov
dec
imul
pop
jnp
sub
int
or
test
inc
push
pop
or
add
arpl
cmp
mov
fwait
fs
mov
and
insl
das
jmp
repz
inc
pop
xor
idivl
push
sbb
adc
push
ud0
jbe
inc
cld
enter
adc
scas
imul
lea
pop
adc
fadds
dec
js
pop
cs
sahf
pop
stc
mov
add
aad
bound
add
jb,pn
popa
adc
add
es
inc
cs
cmp
outsb
lock
add
push
dec
rcrb
mov
dec
mov
test
fimull
lock
iret
das
inc
xchg
and
insb
loop
test
dec
incl
add
add
add
inc
add
call
or
pop
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
mov
inc
add
add
