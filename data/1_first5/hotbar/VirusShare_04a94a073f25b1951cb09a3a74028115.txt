divb
in
mov
mov
mov
inc
add
add
ror
int
in
jg
shlb
or
and
push
je
and
out
je
push
call
push
add
sub
push
ret
in
divl
jne
mov
or
call
xchg
push
push
sbb
stc
out
aas
mov
test
je
cmp
movl
cmp
jae
dec
movzwl
lea
jne
sbb
xor
jmp
and
neg
fidivrs
and
pop
pop
mov
or
call
push
push
sarl
stc
shrl
jp
lock
jge
add
pop
push
push
push
push
xor
mov
mov
movsl
std
in
pop
scas
cmp
inc
cld
add
jmp
test
jne
pushf
or
push
rcrb
sahf
push
mov
push
xor
fidivl
fcoms
cmp
adc
mov
ret
mov
jmp
jmp
pushl
jbe
adc
lea
or
lock
dec
test
jg
mov
or
add
cs
add
ret
std
imul
xchg
add
mov
inc
push
adc
add
inc
pop
push
fcmovnb
les
mov
push
mov
xor
pop
mov
mov
mov
call
pushl
fwait
mov
enter
push
or
data16
sbbl
sarl
push
lahf
add
xchg
notl
andl
mov
push
sub
mov
hlt
cs
addl
add
sbb
lock
fcomi
sub
dec
shlb
in
or
xlat
mov
xor
hlt
or
pop
cmpsl
push
repnz
in
cmpsb
cmp
lea
fwait
popa
xor
push
call
sub
add
out
push
sbb
push
insl
loopne
xor
test
mov
lea
mov
adc
daa
mov
push
dec
or
add
iret
jbe
ret
ja
pop
xchg
sbb
call
and
cmp
ret
test
push
xchg
mov
call
addb
das
or
push
dec
and
add
xchg
es
pop
xlat
push
sbb
scas
imul
add
xchg
or
ljmp
es
out
push
out
jmp
mov
mov
pop
pop
fs
pop
lods
mov
aad
add
mov
push
sub
mov
pop
push
insl
sbb
add
shl
push
push
push
iret
bound
pop
sub
inc
pop
pop
ljmp
ss
xor
push
mov
cmp
or
jge
dec
add
gs
sti
mov
mov
xor
mov
xchg
jmp
arpl
rcrl
js
push
pop
imul
sar
sub
inc
sub
inc
clc
sub
enter
xorl
ss
shll
inc
jmp
fs
pop
push
ja
xor
movsl
push
xorl
sbb
idiv
add
mov
cmp
jg
mov
adc
or
ds
ret
pop
dec
sbb
push
mov
cs
add
adc
movsl
jmp
enter
push
push
jmp
sub
push
mov
sar
imul
push
cmp
ja
adc
pop
dec
clc
add
push
fiaddl
ret
pop
in
inc
andl
sahf
leave
les
int3
stc
test
clc
lds
jle
mov
cmpl
or
push
fucomp
sub
cmp
jge
dec
cmp
subl
adc
jmp
cltd
sub
shr
enter
mov
test
mov
ret
cwtl
and
push
test
cmp
jl
cmp
jne
mov
incb
add
xor
jbe
mov
call
xchg
rol
inc
add
inc
add
dec
sar
lea
push
add
push
push
lea
sbb
psadbw
xor
dec
int3
pop
hlt
into
mov
aam
sbb
adcl
cmp
cmpsl
xlat
ja
stc
mov
cld
fsubrs
fisubrs
stos
mov
jmp
imul
enter
test
jle
cmp
mov
inc
sbb
sahf
mov
pop
loope
add
and
sbbl
push
push
xchg
cmp
aas
adc
mov
loope
mov
inc
push
push
test
pop
sub
xchg
or
cli
insb
adc
jb
es
and
adcb
and
xchg
jbe
dec
and
and
cmp
mov
rorl
pop
loope
lcall
push
hlt
inc
push
or
sti
shl
hlt
cmp
jle
mov
icebp
aas
push
pop
out
add
push
inc
stos
xchg
or
pop
or
and
cmp
sub
sbb
xchg
pop
lret
or
addr16
add
jb,pt
pop
add
jg
in
in
pop
leave
ret
lea
fidivs
ljmp
add
cmp
clc
push
push
push
aas
lods
sbb
rcrb
ja
jmp
xchg
push
push
insb
or
cmpsb
imul
cld
pop
cmpsb
out
cmp
jo
inc
mov
sub
aad
aaa
out
or
sarl
in
sub
pop
or
cmp
push
mov
outsl
idiv
push
lea
cmp
jne
push
push
push
push
sarb
js
push
mov
mov
or
add
sahf
pusha
pop
pop
push
jnp
insb
dec
xor
mov
jne
cmp
jbe
xlat
or
xchg
and
add
or
into
dec
jne
jl
add
add
mov
out
out
xchg
fstpt
cmp
ficompl
enter
push
mov
mov
fdivr
push
or
cwtl
push
mov
data16
in
jb
or
nop
add
out
push
js
outsl
loope
out
stos
or
push
pop
push
and
ds
movl
or
cmp
mov
rcll
mov
xchg
dec
ss
cmpsl
pop
push
out
ja
push
mov
sbb
add
pop
mov
mov
pop
lea
add
sbb
dec
xchg
push
aas
in
popf
cmp
std
testl
or
mov
jo
lock
mov
push
mov
fisttpll
push
scas
push
bound
flds
sbb
test
push
cmc
jo
lahf
cmp
push
pusha
cmp
je
rcr
dec
mov
adc
in
jne
imul
arpl
cwtl
cmpsb
mov
pop
mov
cltd
mov
insl
push
jb
cmp
or
push
repnz
pop
mov
cmp
out
aam
cwtl
inc
imul
dec
or
movsl
mov
mov
mov
or
adc
in
jle
jge
cs
jno
add
or
inc
cmp
jbe
out
or
movsbl
leave
out
sub
add
or
pop
ret
mov
stos
in
mov
insb
shrl
push
adc
or
push
or
jle
mov
mov
push
xor
or
inc
and
out
mov
mov
or
push
xchg
sbb
mov
mov
out
push
int3
loop
mov
push
ficomps
loopne
adc
sub
or
mov
inc
sbb
js
pop
inc
lods
mov
lahf
add
sbb
je
dec
je
push
adc
cmp
pop
jmp
push
adc
inc
shll
mov
lret
or
nop
cs
dec
adc
push
arpl
sbb
pop
ljmp
push
push
mov
mov
cmp
mov
xor
fsubrs
xor
jge
and
mov
aam
and
data16
jb
pusha
pushf
pop
cmc
andl
sbb
push
xchg
add
pusha
xchg
mov
test
mov
aad
cld
out
test
mov
mov
js
sbb
inc
xchg
xlat
ljmp
add
mov
lret
ljmp
in
pop
pop
movsl
or
or
pop
fcmovnu
dec
sub
js
and
adc
popa
lcall
push
in
dec
call
ds
je
and
sbb
inc
jo
mov
mov
aad
pop
decb
add
test
lea
jge
push
negl
xlat
xchg
pop
movsl
push
pop
sti
sbb
sub
adcl
push
loope
sub
adc
test
jp
notl
adc
test
or
sbb
cmp
sbb
adc
sbb
fists
aaa
pop
sbb
and
mov
mov
jp
push
add
jl
ret
pop
adcb
jb
and
test
mov
mov
scas
repnz
cmp
jle
or
jne
fisttpll
mov
push
pop
test
roll
fs
nop
xchg
lret
and
into
push
andl
or
mov
je
inc
mov
into
scas
mov
or
push
xor
aam
pop
mov
jnp
pushf
sub
aas
loopne
push
fs
mov
jmp
jo
fdivrs
adc
leave
adc
out
mov
pop
repnz
je
scas
fisubrs
lahf
xor
mov
mov
insl
fsubrp
std
mov
mov
xor
dec
sub
mov
inc
subl
or
push
xchg
xor
xor
xchg
adc
jne
xchg
sar
push
pusha
pop
sbb
cmpsl
lret
and
mov
out
scas
mov
ljmp
mov
mov
xor
mov
inc
call
push
push
cmp
aaa
and
inc
pop
or
or
outsl
lea
stos
mov
jnp
add
cwtl
fidivs
addl
pop
imul
pop
repnz
je
test
sub
in
rolb
clc
or
and
orb
xchg
xor
add
mov
push
sbb
cmp
jns
inc
pop
cmp
ja
lahf
in
lock
ret
push
xor
mov
lods
aas
aam
jge
decl
inc
enter
xchg
mov
add
xchg
inc
pop
loopne
movl
jae
mov
add
popf
mov
jp
mov
and
sbb
inc
xor
sbb
xchg
in
push
and
push
pushl
and
add
add
fcmovnu
test
loopne
add
testb
int3
in
loopne
cmp
xor
test
add
jnp
mov
loope
or
push
push
jmp
jp
cmc
dec
test
mov
push
and
push
in
fistpl
fistpl
jae
ret
je
push
sarb
mov
out
fcmovnb
mov
dec
sahf
or
jb
or
cwtl
mov
cltd
xchg
mov
pop
dec
and
nop
xchg
pop
sub
add
inc
add
adc
lods
inc
cmpsb
in
or
cmp
add
mov
jns
sub
cmp
jge
pop
adc
adc
adc
outsl
mov
in
das
loopne
push
mov
negb
push
xor
sbb
sub
mov
test
fcoml
dec
jo
xchg
mul
mov
shlb
lock
jo
cmp
movsb
sarb
js
mov
adc
pop
adc
push
mov
xorl
cmp
cmp
rclb
xchg
rcl
ret
aam
in
inc
push
push
pushf
pushf
iret
and
test
mov
hlt
xchg
in
inc
push
sbb
hlt
inc
int3
sbb
nop
lret
int3
or
inc
mov
enter
repnz
pop
rol
rol
nop
lret
and
mov
fs
les
dec
mov
mov
mov
subl
test
push
test
push
hlt
xchg
test
jle
pop
xor
int
pusha
and
ja
inc
and
dec
pop
add
xor
aas
testl
arpl
inc
cmp
mov
pop
iret
and
xchg
aad
cmpl
mov
push
add
jmp
jo
push
add
mov
stos
add
push
loop
push
jmp
and
fnsave
and
inc
push
inc
adc
nop
mov
stos
or
in
adc
loopne
add
or
jle
in
inc
mov
in
xorb
and
inc
jl
lods
outsb
and
push
xorl
movsb
punpckhwd
frstor
push
aaa
adc
dec
je
sti
dec
or
test
pop
push
mov
test
dec
sub
jae
lea
add
sarl
sbb
insl
or
and
xor
add
test
xchg
xchg
or
rorb
rcrl
adc
ds
loope
frstor
add
jae
jae
cmp
or
data16
xorb
xchg
push
out
jne
fildl
in
scas
push
pop
fcompl
ss
push
jmp
push
xor
push
mov
xor
mov
mov
pop
or
add
adc
xor
mov
inc
mov
or
sbb
mov
outsb
into
push
sbb
fdivrs
lea
sub
sbbb
mov
sub
pminsw
pusha
mov
outsl
bsr
push
inc
test
stos
adc
leave
test
loop
jl
jno
ljmp
sbb
jne
cmp
into
adc
cmovno
xor
cmp
in
add
cmc
gs
add
push
mov
je
lret
xchg
add
sbb
push
and
iret
sbb
out
jmp
cmpsl
test
fdiv
fistpl
jne
test
jno
nop
xchg
xchg
test
inc
push
pop
push
hlt
push
push
out
cwtl
ret
clc
popf
cmpsl
mov
loopne
cmp
pop
add
push
shlb
sahf
les
loopne
pushf
pop
nopl
xchg
ja
in
loopne
mov
maskmovq
imull
sbb
and
clc
ljmp
or
je
xor
push
push
or
push
mov
adc
xchg
mov
pushw
mov
xchg
add
and
test
je
cmc
jecxz
daa
add
aaa
ret
or
enter
add
lods
mov
sahf
cwtl
cmp
adc
cmp
flds
fldt
sbb
pop
rclb
out
hlt
je
push
push
pop
ljmp
test
pop
or
xchg
pop
inc
xor
and
cld
clc
adc
and
shrl
pop
mov
jne
pop
push
xor
push
sahf
sub
mov
popl
xchg
and
push
xchg
stos
jmp
and
push
and
dec
mov
xlat
and
inc
jg
mov
xor
and
xchg
movsb
std
daa
call
and
cwtl
and
je
aas
incb
and
cmp
daa
cmc
sub
or
js
push
push
fistpl
aam
stc
push
add
scas
sub
pop
sub
pop
nop
mov
push
ljmp
sub
push
xchg
test
mov
jno
ss
ret
jne
jmp
test
lret
jge
sbb
xor
mov
inc
mov
stos
add
adc
in
inc
pop
xor
jae
insb
stos
xor
shll
sahf
mov
adc
push
lods
mov
mov
sub
pop
stos
jo
fsubs
jne
jo
out
pop
and
pop
xor
xchg
lahf
mov
inc
sbb
arpl
dec
adc
inc
ret
jecxz
lret
push
push
or
sub
pop
adcb
push
add
test
test
adc
out
inc
in
push
dec
or
dec
push
push
mov
add
lahf
mov
and
ret
pop
cmp
insb
rolb
push
loopne
sahf
dec
orb
popf
cmp
jl
mov
mov
pushf
dec
test
sub
lret
ret
shlb
cvttps2pi
inc
mov
add
enter
int3
ds
lds
lea
pop
xchg
add
ds
pusha
pop
sub
xor
xor
jns
cmp
xchg
dec
xlat
movsl
xchg
and
xor
xchg
inc
test
gs
fdivs
push
pop
xor
xor
fistl
fisubrs
bound
and
adcb
mulb
add
mov
push
sbbl
pop
in
or
xor
push
and
xchg
out
cmp
aam
adc
and
inc
jb
cmp
jne
mov
jns
and
cmp
mov
pop
push
and
xor
and
or
shl
inc
jge
push
mov
popa
adc
bound
inc
add
mov
mov
mov
notl
xchg
nop
les
push
ret
jmp
inc
mov
cmc
add
xchg
pushl
aad
pop
or
mov
loop
cmp
in
and
mov
inc
stc
adc
dec
add
push
je
nop
lret
sbb
adc
mov
icebp
ficomps
pop
dec
cmpl
shl
xor
push
jp
and
repnz
adc
fiadds
push
pop
mov
je
adc
sub
sub
ds
jne
push
sub
call
adc
das
mov
jo
lret
jne
inc
in
fdivrp
and
dec
sub
jmp
cmp
pop
sbb
xor
and
ja
pusha
cmp
add
jge
jmp
mov
inc
lock
lock
mov
rcrb
push
loopne
or
ret
rorl
cwtl
adcb
push
xchg
or
inc
repz
out
jge
orb
xchg
inc
loopne
fadds
les
or
mov
roll
cmp
mov
test
or
sub
jge
cmp
or
call
loope
add
and
daa
sbb
pusha
nop
andb
mov
mov
and
loopne
sbb
loope
lods
add
push
mov
out
or
sub
mov
add
jecxz
add
icebp
jg
fldt
adc
pop
out
jne
or
je
sub
das
pop
push
cld
sti
loopne
jg
and
das
mov
cs
xor
and
cwtl
add
cmp
clc
je
push
pop
pop
test
pop
mov
lods
outsl
jae
loope
fsubrp
out
jne
or
mov
emms
xchg
cmp
mov
loop
test
xlat
cs
lock
not
add
xchg
mov
sar
lahf
je
popa
repnz
das
mov
xchg
inc
in
sbb
push
loop
out
inc
out
test
inc
push
add
sbb
or
lock
lds
popa
inc
movsb
jno
test
or
mov
mov
mov
push
mov
push
pop
mov
or
enter
inc
push
rorb
pop
int3
add
mov
or
jle
add
mov
fdivr
or
sbb
push
in
cmpsb
lahf
sub
shrb
mov
jnp
adc
push
lock
add
dec
dec
je
sub
jmp
ljmp
cmpl
je
dec
push
outsl
mov
xor
jmp
loopne
fldenv
test
sbb
ror
sti
mov
jne
xchg
ja
add
or
push
sbb
xchg
jmp
xor
xor
jecxz
inc
inc
mov
sbb
mov
or
cmpl
clc
mov
hlt
xor
inc
mov
movl
bound
cmp
xchg
or
aaa
sbb
xor
and
pop
xchg
mov
push
pop
sbb
push
push
mov
das
fdivs
mov
pop
sub
or
add
icebp
pop
pop
jle
lods
or
pop
lock
jmp
mov
shrb
add
and
imul
gs
xchg
mov
stos
jae
aas
add
sbb
jnp
push
or
scas
mov
lea
adc
cmp
in
jecxz
xchg
rcr
daa
in
fs
jge
push
add
pop
cmp
out
js
insb
dec
aaa
or
mov
arpl
mov
fwait
in
jmp
dec
in
mov
cmp
outsl
loopne
daa
pusha
movsb
xchg
outsb
loopne
lret
or
ja
outsb
dec
ret
insb
mov
jmp
add
pop
insb
push
scas
dec
mov
lods
sahf
stc
push
add
flds
push
add
or
inc
cmp
push
add
in
std
xor
cwtl
movsb
ljmp
lret
jge
add
es
dec
sub
fstl
mov
out
pop
xchg
daa
pop
fmull
adc
fdiv
push
xor
test
add
and
mov
in
loopne
pop
cld
loopne
and
jecxz
xchg
push
add
testl
movsl
call
test
push
loope
push
ds
loopne
push
or
or
push
add
stc
adc
mov
pusha
inc
clc
mov
inc
add
movsb
sbb
add
ljmp
jo
adc
aam
dec
pop
repz
leave
push
in
sbb
lods
mov
scas
sbb
xchg
xorb
add
filds
nop
sub
shll
sahf
pop
cmp
xor
mov
push
call
push
push
and
call
and
pop
out
mov
mov
cmpb
push
fs
add
inc
dec
sahf
mov
sbb
adc
pop
call
push
inc
cli
or
cwtl
cmc
mov
jbe
mov
or
xor
mov
add
xchg
shll
pop
loopne
adc
cmp
mov
adc
or
inc
sahf
mov
and
sub
loopne
push
shll
popf
js
and
shlb
push
sub
sub
mov
xor
mov
adc
xchg
in
insb
out
adc
rclb
sbb
mov
mov
fsubrl
sbb
xor
in
pop
dec
inc
mov
call
mov
and
shr
movzbl
push
adc
jecxz
pusha
push
push
ret
push
enter
sbbb
data16
mov
out
xchg
xlat
mov
xchg
cmpsl
jle
jnp
mov
cmp
or
or
xchg
adc
jno
and
xchg
push
jo
add
aad
insb
pop
xor
sbb
sbbb
jg
push
xor
out
pop
or
add
sbb
pop
jb
or
cmp
insb
adc
cmp
add
sti
jle
push
add
inc
push
push
icebp
int
lahf
mov
cmp
jg
mov
mov
jmp
mov
daa
enter
pop
mov
rcrl
daa
jns
test
adc
scas
lcall
fstpt
or
cmpsb
push
mov
lea
bndldx
out
adc
notb
insb
add
sbb
pop
jo
add
pop
out
lods
mov
pop
jmp
mov
push
aas
add
popa
xor
inc
pop
mov
push
or
push
stos
mov
jmp
shrb
cld
jne
test
jp
dec
inc
adc
insb
gs
push
lock
sbb
xor
inc
cmp
jae
clc
mov
or
xor
ja
dec
test
mov
je
push
mov
loopne
mov
push
sub
fadds
add
mov
scas
pop
hlt
add
jl
in
push
inc
lock
jg
push
push
jne
js
mov
roll
icebp
cmp
xbegin
add
xlat
into
popa
nop
add
mov
sub
call
rcll
add
lea
ljmp
cld
add
or
push
test
adc
sbb
xchg
add
mov
leave
add
mov
mov
mov
jb
push
sub
mov
dec
lahf
inc
or
cli
push
js
jb
insl
fdivrl
pop
pop
inc
xchg
push
inc
fwait
je
test
js
cmp
fimull
sbb
or
push
je
sub
pop
movb
imul
sti
ds
add
inc
jecxz
cmp
inc
push
push
data16
mov
inc
in
pop
xor
fmuls
xchg
fnstcw
inc
imul
pusha
lock
cmp
jl
outsl
dec
push
js
fldpi
push
or
sub
or
in
xor
pop
mov
ret
or
mov
jae
add
cmp
fs
or
xchg
add
or
popf
into
shrb
jne
pop
mov
unpcklps
push
mov
adc
push
stc
push
je
jbe
scas
push
aaa
mov
ret
je
mov
sbb
mov
aam
mov
xorb
mov
pusha
ds
push
mov
sbb
sbb
fisubl
or
cmp
pop
mov
or
movb
mov
and
add
jne
and
xor
jecxz
sbb
add
adc
adc
out
dec
mov
fadd
je
pop
test
movb
xor
jmp
xor
nop
fldl
call
jb
out
mov
push
enter
sbb
add
jmp
adcb
adc
inc
jl
jb
pop
icebp
scas
mov
fs
jne
cmp
je
jbe
movb
std
or
or
and
sbb
addb
mov
test
adc
testl
out
out
add
mov
pop
mov
shll
mov
and
mov
cmp
xchg
or
psllq
insb
loopne
mov
in
lods
orl
push
and
test
js,pt
jo
jg
jo
and
ss
dec
push
and
dec
or
push
sti
shll
int3
pop
test
bound
push
adc
pop
push
inc
xor
jp
pop
pop
mov
js
push
leave
xchg
adc
inc
lret
or
inc
addb
mov
fbstp
mov
cltd
nop
dec
push
mov
sbb
test
add
es
jno
fiaddl
ficoms
push
push
and
push
cwtl
out
clc
lret
je
sbb
movsl
add
xor
inc
lahf
enter
ret
aas
xor
arpl
sbb
std
add
hlt
sub
out
mov
repz
cmp
or
mov
adc
enter
jl
add
insb
adc
std
xchg
cld
cmp
lea
jbe
mov
fidivl
pop
push
push
and
push
push
enter
cmp
lock
add
push
js
call
movl
xchg
xor
popf
dec
add
adc
movsb
std
push
add
stos
cmp
pop
sahf
fsubs
je
icebp
or
addr16
fcompl
adc
in
cmp
mov
sahf
iret
mov
iret
ret
in
add
fdivrs
mov
or
mov
push
das
push
loope
or
adc
or
lods
jo
or
mov
adc
lods
jno
dec
pop
dec
movsl
and
xchg
orb
cmp
or
ds
insb
fdivs
push
cmp
rcr
pop
fldt
push
sub
lahf
xor
push
nop
jecxz
jae
cwtl
pushf
dec
push
inc
aad
jno
andb
imul
jl
dec
mov
inc
sbb
or
xchg
in
cmp
loope
jmp
fadds
stc
cltd
in
cmp
or
test
test
mov
and
xchg
dec
fnstcw
mov
push
jb
nop
cmp
mov
pop
and
ficompl
xchg
mov
push
mov
add
pop
test
jbe
sbb
faddl
or
push
mov
cmp
jne
push
enter
and
dec
jne
add
sbb
xor
or
and
and
xorl
les
inc
pop
fdivs
and
pop
mov
xor
push
sbb
push
adc
pop
xchg
shll
sbb
inc
jbe
pop
pop
xor
out
mov
daa
or
add
enter
dec
mov
jno
jns
jg
add
out
push
push
loopne
imul
mov
add
and
fstpt
sub
loope
lret
xor
iret
cmp
or
pop
mov
adc
loopne
pusha
scas
gs
and
leave
and
clc
cmp
inc
enter
dec
or
enter
dec
adc
fbstp
push
lea
mov
daa
loope
imul
pop
sbb
xor
mov
sbb
mov
jbe
pop
mov
loop
inc
and
mov
xor
inc
out
mov
and
or
dec
or
mov
cmp
dec
push
ss
jge
in
jg
dec
adc
leave
xchg
sbb
xorb
inc
sbb
ret
push
and
inc
scas
cmp
sbb
sbb
ret
jne
sub
sbb
cmpsb
push
add
push
sbb
aam
mov
xchg
mov
test
mov
and
or
ja
in
dec
sti
jo
movups
and
stc
adc
repz
popf
cmpl
cmp
or
in
in
jg
jo
pop
cltd
pop
negl
mov
add
cmp
cmp
or
push
xchg
jmp
and
or
push
cmp
js
dec
mov
arpl
pop
adc
add
mov
loopne
aaa
jmp
cmp
out
notb
out
cmp
leave
jmp
sub
cmp
loope
je
mov
je
sub
test
cwtl
inc
out
ss
mov
dec
mov
mov
mov
and
es
and
adc
pop
jne
pop
in
or
jmp
push
add
push
mov
xor
push
les
movsb
orb
cmp
loopne
mov
xchg
xchg
or
pop
push
mov
pushf
fisttpll
mov
in
std
mov
in
sahf
mov
clc
xchg
and
push
or
lret
divl
xchg
pop
pushl
js
aaa
mov
mov
enter
pop
nop
out
int3
sub
mov
cld
fisttpl
shr
jmp
cmp
je
cmp
sbb
imul
jmp
inc
sbb
lahf
mov
sbb
mov
sbb
fstpl
lock
jmp
sbb
movsl
inc
xchg
push
and
jmp
and
icebp
rcrb
outsl
jmp
xchg
sbb
loope
add
adc
ficompl
inc
push
push
iret
repz
push
arpl
jl
iret
clc
cmp
imul
push
mov
out
adc
pop
and
push
fildl
pushw
and
sub
adc
fstl
lea
jl
fdivl
lahf
or
and
movb
lock
mov
xchg
xchg
pop
jge
icebp
sub
lahf
aaa
and
push
dec
push
mov
pop
push
lea
push
pop
and
mov
shll
lea
sbb
xchg
sub
add
push
xchg
ja
dec
mov
adc
lahf
push
or
jno
sub
ja
lea
lea
movl
add
and
movsb
xlat
sub
xor
lds
call
fwait
mov
mov
mov
sbb
dec
jae
int3
push
aam
push
xor
add
jl
inc
xor
add
and
adc
popa
push
cmp
arpl
pusha
mov
add
xchg
call
ffree
jge
das
or
cltd
mov
mov
mov
aam
push
push
xchg
sub
or
jle
sbbb
or
jmp
shlb
adc
fdivl
insb
adc
ja
adc
sti
xor
mov
movsl
dec
jne
push
sbb
and
adc
or
jae
enter
adc
inc
mov
rep
rolb
pop
adc
dec
and
mov
in
pop
xor
out
ret
je
xchg
jl
in
pop
cmp
and
sub
xor
push
add
divb
xor
ficoms
fcoms
dec
int
test
je
xor
jo
push
push
cmp
sbb
mov
pushf
jl
jnp
xchg
xchg
sbb
add
or
sti
fiadds
push
jg
popa
adc
or
sub
andb
outsl
push
loopne
xchg
pop
mov
pop
mov
das
in
sbb
pop
jne
nop
jecxz
ds
push
roll
lret
xchg
out
fcoml
les
dec
fildl
cmp
ret
loope
jbe
inc
add
jnp
test
test
fcoml
sub
pop
movsb
jmp
je
xchg
mov
pop
inc
scas
xor
adc
int3
cmp
jne
push
sub
xor
adc
clc
js
nop
xor
stos
adc
iret
je
lea
push
loopne
add
popf
js
or
jo
inc
enter
add
push
sbb
cmp
jne
call
ror
and
push
or
adc
xor
mov
rol
dec
rep
or
sub
les
loopne
adc
pop
push
dec
lock
push
adc
dec
lea
dec
push
push
test
sbb
int3
faddp
sub
sub
or
in
dec
jmp
sub
add
sub
in
mov
out
cmp
push
mov
add
mov
inc
adc
dec
inc
shll
cmp
verw
daa
mov
push
test
push
in
imul
push
or
loope
js
sub
loopw
fstp
pop
push
in
dec
push
sbb
neg
sbb
xor
or
jg
out
mov
mov
popa
adc
les
mov
lret
xor
xor
in
and
dec
dec
sub
inc
sarl
or
push
push
int
negb
lcall
push
push
fimull
or
fstps
leave
and
push
push
out
cmp
mov
adc
cmp
push
cmpsb
out
mov
call
dec
mov
adc
adc
push
dec
sub
inc
jl
je
push
sbb
or
pushl
and
aas
xor
idivb
xchg
jo
loopne
les
gs
popf
push
mov
shl
mov
and
idivl
sub
les
fdivrs
cmpl
jne
pushl
pop
mov
sbb
dec
cmpsl
jbe
push
adc
fstps
outsl
cld
adc
scas
push
sbb
int
fmuls
dec
jmp
cmpsb
cltd
jge
stc
add
add
pop
jg
cmp
cmp
sti
je
cmp
xchg
mov
or
push
sahf
add
pop
repz
lock
cmp
aad
xchg
mov
and
lret
ja
loope
add
popa
in
pop
jno
nop
call
mov
xor
clc
xor
sbb
push
jne
movb
xor
out
jmp
or
pop
repz
popf
movsl
pushf
inc
cwtl
icebp
fldz
xor
push
clc
dec
enter
adcb
dec
addr16
dec
aas
mov
jp
hlt
mov
add
lea
faddl
cltd
test
sbb
push
shlb
lock
test
and
and
jbe
test
fimull
popf
sub
fisubl
daa
mov
mov
dec
or
adc
jne
push
sbb
es
add
leave
push
push
pop
cmc
adc
fcoml
push
nop
pop
cmp
dec
clc
notb
iret
push
adc
enter
gs
movsl
mov
pushf
aad
pop
jmp
pop
inc
test
or
add
add
dec
or
adc
or
pop
xchg
js
movsl
mov
or
adc
mov
test
pop
push
xchg
sbb
shll
dec
jl
xchg
andb
cmp
push
jbe
xor
test
js
xchg
mov
cmpb
inc
rcrb
test
aaa
mov
mov
add
pop
dec
xor
inc
fldl
fmull
sub
add
push
cmp
push
push
push
aaa
sarb
sbb
stos
jl
into
push
sub
mov
fiadds
out
andl
lcall
ret
fdiv
xchg
pop
xchg
out
into
popa
in
ds
aam
out
sbb
adc
mov
cli
dec
adc
inc
jo
popf
fmuls
call
loopne
repz
or
or
test
jo
cmc
jmp
mov
adc
roll
xchg
xchg
push
fcom
push
adc
pop
or
loopne
cmpb
xor
insl
and
clc
je
push
pop
cmp
push
enter
jb
jmp
jne
in
scas
das
cs
sub
push
push
mov
adc
mov
cmp
push
insb
repz
push
cmp
fisubrs
add
xchg
sbb
popa
pop
cli
or
push
icebp
push
rcll
or
push
cmp
sub
call
jmp
pop
sub
cltd
sub
push
jecxz
and
push
shll
daa
push
add
pusha
add
movsb
pop
outsl
sbb
mov
repnz
and
sarb
add
sarl
sarb
cltd
mov
lea
push
pop
mov
dec
adc
sbb
and
jnp
pushf
add
cmp
jge
mov
xor
outsb
mov
idiv
push
mov
mov
lea
inc
mov
ret
xor
idiv
mov
mov
repz
jg
test
out
add
push
add
jnp
push
xor
mov
popf
mov
xchg
popa
inc
inc
dec
sub
jmp
cltd
jns
jge
add
movsl
inc
repnz
lock
inc
cld
in
or
out
dec
fstpl
lock
xchg
insb
xor
sti
sub
sbb
xor
sbb
jbe
std
lea
cltd
idivl
add
pop
and
inc
inc
popa
popf
movsl
daa
add
fsubl
mov
ds
jg
out
sbb
dec
fs
or
xchg
arpl
mov
loope,pt
test
jle
cmp
xor
addr16
negl
pushf
movb
cli
in
cmp
lea
jae,pt
xor
mov
sub
cmp
mov
dec
nop
or
out
insb
mov
pop
sub
hlt
mov
test
jns
cld
mov
inc
add
xor
xor
mov
fdivrp
movsl
mov
sub
mov
jmp
sbb
pop
add
les
cmp
add
push
lods
mov
cmpb
cld
mov
je
into
clc
fidivl
jmp
push
xchg
cmp
rolb
fstp
cmc
push
pop
mov
pop
jne
pop
pop
movb
clc
mov
push
dec
outsb
mov
mov
xor
push
cmp
and
add
imul
lret
rorb
cld
inc
hlt
adc
lea
adc
adc
sub
in
jne
push
gs
bound
out
sub
xor
in
inc
pop
and
aad
inc
jmp
out
xchg
cs
cmc
bound
out
push
pop
pop
push
sub
and
push
add
push
cmp
push
stos
sub
ret
push
mov
add
call
push
and
cltd
add
int3
pushf
push
push
test
or
push
and
mov
fxch
adc
int
sbb
loope
rcrl
or
iret
addr16
dec
jns
and
cmp
clc
loope
mov
inc
jne
sti
sub
lds
adc
mov
push
jg
jmp
punpckhdq
leave
adc
jno
test
add
add
add
xchg
push
popf
int
mov
lea
push
mov
push
loope
mov
daa
add
lods
pop
pop
or
mov
negl
mov
lea
push
push
cmp
movsb
adc
jnp
lahf
icebp
inc
dec
inc
sub
movsl
mov
adc
sub
lods
push
addl
popa
scas
jle
orb
outsl
pop
test
ja
inc
bound
pop
mov
jmp
push
dec
xchg
add
cltd
fs
scas
sbb
cmc
in
cmp
mov
sub
push
and
push
setns
pop
push
pop
in
xchg
popf
dec
adc
nopl
ret
mov
jl
mov
pop
dec
dec
or
or
fisttps
inc
push
cmp
daa
cmp
dec
das
sbb
mov
nop
out
fisubl
mov
pusha
bound
stc
xchg
sbb
outsb
pop
dec
cmp
pushfw
aas
inc
loopne
push
pop
icebp
inc
dec
pop
xor
push
add
push
mov
pop
sub
clc
setb
lock
loopne
test
rorb
xor
lods
jge
je
xor
dec
adc
data16
sarb
lods
aaa
addb
adc
sbb
push
fstps
idivl
gs
add
lods
add
cltd
es
mov
je
dec
mov
je
adc
adc
jne
outsb
xor
scas
sbb
xchg
popf
sbb
rcl
push
inc
or
mov
in
xlat
das
push
mov
mov
int
fwait
mov
sub
inc
push
ss
xchg
js
xor
sbb
xchg
xor
or
test
out
imul
ficompl
add
adc
loopne
push
push
rcl
iret
jnp
push
aas
jmp
test
nop
adc
jl
test
adc
inc
movl
aas
xchg
add
pop
js
and
mov
out
or
add
adc
sbb
testb
pop
das
inc
xor
jno
js
sbb
xchg
pop
add
add
jmp
or
inc
in
pop
dec
std
mov
js
add
enter
js
push
jno
push
push
and
or
inc
aaa
and
and
xchg
call
push
cmc
in
adc
push
out
add
xor
in
sbb
mov
clc
pop
push
push
mov
enter
repnz
or
dec
mov
xor
adc
aam
hlt
mull
enter
dec
pop
rorb
stos
int3
add
pushf
sub
jne
add
pop
rclb
rcrl
sbb
les
push
stos
lcall
add
cmp
call
call
mov
in
push
sbb
lret
mov
fisubs
addr16
push
sbb
stos
mov
adc
xchg
pusha
das
jmp
pushf
jno
cmp
sbb
bound
inc
push
mov
or
add
push
mov
push
outsl
sub
mov
push
add
insl
es
pop
lds
push
mov
sbb
pop
fs
fcoms
dec
cmpsl
adc
jae
add
mov
or
xchg
mov
add
nop
jnp
jge
out
sbb
xchg
xchg
or
mov
adc
fisubs
pop
jne
mov
aaa
popa
je
icebp
or
lock
inc
sbb
xchg
icebp
insl
and
pushl
push
lret
pop
shrb
scas
mov
xchg
out
mov
add
decl
fs
aas
and
test
je
jne
pushf
sbb
or
loop
dec
mov
cmc
jge
imul
xor
and
sub
and
mov
stos
pushf
jge
add
add
inc
pusha
inc
xor
mov
cmpsl
xchg
sub
outsl
push
ss
sub
leave
js
cmp
jge
mov
mov
lock
sti
mov
cmp
sbbb
cmp
jle
in
add
call
xor
pop
push
dec
ud0
fimull
std
fdiv
cmp
cmp
sbb
popf
in
sbb
inc
push
cs
mov
xchg
mov
and
mov
sbb
aam
inc
xor
push
add
dec
mov
cmp
in
mov
add
jo
sub
inc
sete
insb
dec
ficoml
sbb
loope
and
je
sbb
or
push
and
push
or
test
les
inc
loopne
mov
mov
mov
adcl
pop
enter
cmpsb
mov
and
ret
orb
test
movsl
cmp
add
sbb
arpl
pop
lahf
int3
jnp
icebp
add
dec
pop
push
push
pop
push
sarb
loop
pop
pop
je
fwait
adcb
push
dec
lock
out
ret
ja
pop
add
xor
dec
cmp
mov
fucom
push
jae
or
push
mov
stos
mov
mov
fsubrs
push
jge
push
pop
mov
push
iret
ss
in
std
fadd
or
inc
out
sub
cmp
push
lds
or
cmp
sti
add
adc
sbb
mov
nop
das
mov
iret
sub
mov
jne
nop
lret
lds
adc
push
cmp
adc
data16
rolb
cs
adc
xchg
je
mov
ret
xor
popa
lock
in
repz
in
aaa
daa
in
call
xor
lock
and
fdivs
xor
push
xorl
pop
pop
arpl
add
mov
and
nop
dec
adc
add
jno
daa
xor
fdiv
dec
enter
or
jle
test
sbb
mov
mov
xor
dec
push
and
or
orl
or
je
jb
cmp
pop
aam
or
aaa
jbe
ret
inc
bound
adc
cmp
test
lea
dec
and
clc
sub
dec
and
xchg
lret
xchg
mov
mov
hlt
add
sbb
dec
or
lock
dec
clc
jmp
xchg
shlb
xor
lea
xchg
das
mov
add
in
dec
call
cld
sub
lock
lahf
sub
jg
and
clc
fcompl
pop
jl
in
jmp
aaa
hlt
mov
push
scas
jge
out
or
jbe
into
sbb
add
push
outsl
or
and
or
out
mov
mov
adc
sub
outsb
mov
or
insl
inc
aas
add
ds
in
jb
add
aaa
cmpsl
sbb
sub
jg
mov
xchg
fdivl
mov
in
mov
jecxz
dec
pop
push
or
xor
push
movsb
clc
aaa
mov
sub
mov
jno
inc
fildl
scas
sbb
pop
imul
mov
addb
xor
xor
push
mov
js
mov
mov
xor
mov
push
sub
je
cmp
je
dec
std
push
lea
push
test
push
mov
push
in
push
rcll
jbe
push
or
jbe
pop
push
or
push
cmpsb
sub
sbb
jo
mov
sbb
ja
pop
mov
imul
fs
or
inc
jge
push
push
fisttps
sbb
cltd
in
sbb
psubsw
notb
loop
int
and
and
mov
nop
xchg
inc
callw
mull
test
mov
testb
push
add
xor
inc
xlat
ficompl
inc
push
idivl
cld
mov
les
jbe
push
sub
add
dec
adc
cli
call
mov
sub
ret
xchg
push
bound
rclb
aad
icebp
loope
mov
add
cmpsb
add
movb
mov
mov
pop
out
jle
sbb
or
pop
pop
pop
cmpl
add
add
sbb
out
loope
xchg
jno
inc
stc
xchg
dec
sub
adc
inc
shlb
add
iret
xor
test
push
xchg
arpl
dec
push
mov
in
add
mov
insl
pop
push
push
inc
adc
movsb
nop
jb
sbb
in
pusha
test
jb
inc
std
or
push
mov
sar
dec
mov
pop
sbb
sbb
ret
cmp
dec
sti
inc
add
add
push
sahf
or
jg
jmp
mov
jp
or
add
cmp
fildl
cmpsl
push
sbb
mov
fnstcw
icebp
mov
ljmp
inc
sbb
sub
adc
popf
add
aam
mov
iret
pop
add
push
pusha
pusha
jns
dec
leave
or
sbb
inc
pop
jns
ljmp
repz
ret
rclb
ljmp
jns
pushf
es
ret
jg
mov
adc
call
dec
jmp
push
adc
push
pop
mov
mov
lock
push
cmp
lret
push
scas
mov
jl
jmp
lock
add
xor
push
jg
cmp
and
push
call
xchg
add
nop
add
add
lock
adcb
lea
jge
ss
and
or
sub
adc
stos
imul
fsts
pop
shll
inc
cmp
cwtl
movl
push
and
mov
xchg
sbb
adc
int
inc
jnp
aam
adc
dec
jl
pop
rcl
xchg
dec
stc
jnp
lea
inc
jns
or
push
cli
mov
or
add
mov
insl
lea
mull
xchg
shrb
movl
fstps
push
add
rclb
add
outsl
sbb
inc
or
lcall
or
dec
pop
jae
sub
add
cmp
adc
les
inc
mov
addb
lea
test
loope
test
inc
cwtl
adc
adc
and
movsb
cltd
lea
xchg
adc
lcall
jmp
enter
cld
and
sbb
addr16
mov
xchg
test
and
lcall
addb
lret
ljmpw
push
jle
ficomps
lahf
cmp
mov
jl
xchg
dec
loopne
jecxz
xor
add
xchg
adc
xchg
loop
sbb
loopne
leave
lea
xor
adcb
mov
mov
push
inc
subb
xchg
push
push
cmpsb
nop
push
mov
xchg
jo
fistps
xor
je
push
push
or
xor
xadd
sbb
cli
bound
add
push
stos
or
push
std
xor
shlb
mov
xor
rorb
dec
cmpl
add
in
dec
repz
rcll
das
adc
mov
repz
push
jmp
jnp
stos
loope
movsb
push
lret
fwait
das
pop
shrb
push
sahf
call
cmpb
imull
xor
nop
icebp
cmp
pusha
pop
inc
lods
lods
xchg
xchg
xchg
cmpsb
mov
imul
cmp
out
mov
and
mov
loopne
add
pop
or
mov
push
hlt
pop
in
lea
loope
addr16
outsb
jecxz
mov
lret
aam
or
jecxz,pt
mov
pop
mov
cmp
sahf
push
mov
push
and
pusha
inc
nop
xchg
pop
fs
and
mov
pop
pushl
popf
in
lods
pop
mov
lahf
cmp
orb
sarl
les
mov
jne
call
add
push
and
add
add
push
xchg
ret
jmp
or
mov
shll
or
or
add
inc
and
movsl
and
aas
mov
call
insb
divl
jo
push
fwait
es
add
or
push
mov
xchg
fisttpl
xlat
mov
xor
add
dec
int3
mov
cmp
lods
js
adc
movzwl
insb
mov
pop
pop
mov
and
ja
cmp
mov
out
inc
fwait
int3
lods
xor
dec
in
adc
mov
mov
test
jle
pop
inc
adcb
leave
sahf
xchg
rorl
sub
inc
or
mov
push
pop
pop
test
mov
loopne
mov
pop
test
fbstp
sbb
test
test
scas
push
arpl
pop
callw
faddp
xchg
fs
lock
pop
dec
jae
lock
add
add
mov
xorb
fbstp
add
adcb
xor
test
adc
xchg
loopne
mov
cli
inc
insl
jo
scas
in
movsl
jbe
and
push
in
jl
mov
jae
adc
xor
pushf
mov
lea
inc
push
fisubs
test
mov
aam
push
insb
in
push
add
pop
cmp
pushl
add
mov
pop
mov
mov
pop
ljmp
js
mov
inc
mov
popf
orl
fdivr
adc
inc
mov
pop
adc
add
shr
jp
adc
fnsave
fs
test
rolb
or
lods
aaa
jp
push
lcall
mov
or
loope
aas
aad
inc
inc
add
inc
out
xchg
call
dec
sbb
pop
fwait
pushf
cltd
dec
pop
push
add
jno
jmp
ss
dec
loopne
mov
repnz
mov
push
inc
or
pusha
push
mov
lock
lock
arpl
push
cmp
mov
enter
fcmovnu
lret
test
mov
cs
nop
mov
or
adc
xchg
shrb
scas
mov
loop
andl
adc
jge
das
add
sbb
cmp
bswap
push
rcll
jnp
pushf
push
arpl
fildll
push
lods
cmp
push
pusha
imul
jns
sbb
or
xor
outsl
mov
add
xchg
pushf
fimuls
movsb
les
int3
mov
or
add
sarb
repz
or
ja
push
sahf
int3
dec
hlt
es
cmp
add
sbb
adc
push
test
lock
xchg
xor
push
js
mov
mov
movsl
or
repnz
adc
add
cmp
scas
mov
push
nop
shll
mov
fcomps
into
fistl
std
xor
js
jg
pusha
pop
imul
sbbl
cmp
xchg
jge
outsb
loopne
mov
mov
loopne
pop
xor
xchg
and
movl
xchg
push
fdivs
pop
loope
cmp
popf
stos
loopne
xchg
adc
inc
and
dec
fcomps
mov
xor
jno
or
leave
cmp
push
orps
test
imul
cmp
jo
shrb
pop
push
cmp
push
push
mulb
and
cld
jmp
push
inc
sbb
xor
push
cmpsl
addl
inc
or
sbb
popa
sbb
sbb
je
xor
or
shlb
insb
sbb
jno
aas
hlt
cli
cmpl
push
push
pop
cmp
je
stos
fstl
push
or
jle
sub
xchg
movsb
cmp
cmpsl
mov
call
inc
repz
xor
adc
dec
or
jns
push
and
inc
and
pop
dec
test
stc
icebp
and
xor
aam
jge
rorl
add
rol
rolb
or
sub
pop
dec
push
xchg
mov
es
adc
rol
rorb
push
lahf
add
fsubrl
mov
daa
int3
sub
jl
popa
adc
nop
xchg
jo
push
mov
xchg
push
insl
test
enter
loopne
jbe
int3
popf
sub
aas
pop
add
aam
sbb
das
ret
rcrb
xor
and
jns
jbe
or
insl
sub
xor
sub
insl
into
int3
xor
je
push
rorb
sub
bound
paddusb
lret
pop
mov
jge
sub
adc
add
dec
and
and
fsubrl
enter
sbbl
ret
in
mov
pop
jmp
mov
mov
add
sahf
nop
lock
mov
lock
sub
ret
add
sbbb
add
fldl
add
lods
adc
or
and
mov
add
inc
clc
test
push
sbb
sti
insb
add
mov
cmp
shlb
mov
push
lods
adc
or
inc
sbb
loop
inc
fcompl
cmp
sbb
mov
js
fsubr
mov
les
push
cmp
lock
or
cmpsl
jmp
add
les
sub
or
leave
mov
mov
jecxz
mov
push
ss
movsb
dec
pop
or
insl
add
xchg
dec
pop
fsubs
aam
add
fsubrp
test
dec
test
sbb
lock
dec
xorl
inc
or
and
bound
mov
jae
xchg
popf
cli
fisttpl
jge
into
add
insb
cmpsb
scas
int3
stos
test
pusha
pop
jg
ret
xchg
push
ret
push
sub
xchg
int3
push
push
cs
push
ss
cld
je
aaa
insl
test
xchg
mov
sub
mov
rorl
adc
test
jp
inc
xor
sbb
in
jne
sahf
xchg
test
adc
sti
pusha
cmpb
pop
push
mov
mov
outsb
pushf
mov
push
bound
add
sub
add
push
sti
jae
and
aam
mov
enter
loopne
push
pop
lock
mov
sub
mov
subl
bound
ljmp
lock
out
cld
rolb
cwtl
lahf
xchg
add
xor
idivl
dec
hlt
sub
push
arpl
pushf
iret
inc
sarl
outsl
push
mov
inc
or
fadds
xchg
scas
mov
ret
popa
push
jmp
mov
fadds
cwtl
sbb
inc
pop
push
cs
clc
cli
xchg
inc
mov
fnstenv
add
adc
adc
add
add
nop
add
xor
js
dec
scas
cmp
pop
sub
xchg
clc
add
or
xor
insl
xor
or
pop
cmp
xchg
dec
outsb
or
pop
or
push
jns
pusha
pop
popf
ret
movzwl
mov
adc
mov
sbbb
push
int3
sub
cmp
push
inc
inc
ret
mov
cmp
loope
and
enter
rclb
sbb
call
movsb
out
mov
add
add
inc
lock
rcrl
test
pop
push
lock
push
sbb
mov
or
dec
inc
sub
dec
push
xchg
add
aaa
loopne
xchg
jb
mov
add
push
aam
pop
push
add
xorb
stos
lcall
or
sbb
adc
sahf
or
std
arpl
pusha
adc
scas
fsubrs
add
cmp
cmp
out
mov
push
mov
xchg
js
push
mov
nop
loope
pop
insl
cld
ss
je
sub
clc
xchg
decl
mov
sub
lea
push
lea
push
inc
push
sbb
push
setns
xlat
popa
push
leave
sub
arpl
inc
cltd
sahf
fcmovnu
outsl
xchg
lret
cmp
jl
mov
scas
int3
cmp
cmp
jle
pop
sub
lcall
push
sbb
icebp
jne
xor
addr16
mov
add
enter
je
cmp
shll
cmp
out
adc
mov
cmp
je
sub
loope
stos
push
pushw
push
stc
push
jns
in
cmp
fcmovnu
js
add
push
loope
fstps
sti
add
xor
or
xacquire
jmp
sub
popa
fidivl
or
repnz
cmp
in
sub
lea
out
push
dec
or
and
movsl
in
out
xorl
mov
mov
dec
xchg
ret
call
scas
pop
and
cmp
mov
ja
andl
xchg
adc
push
add
mov
pop
cli
mov
call
out
lock
je
push
pop
push
or
cwtl
dec
jo
cmp
sub
sbb
jbe
ljmp
or
or
lds
jne
xchg
fwait
xorl
loopne
mov
and
cmp
je
clc
add
aas
sbb
jbe
push
mov
fildll
mov
pop
push
sti
mov
xchg
repz
repnz
in
add
push
adc
cmp
jb
pop
pushl
rcrb
xor
mov
jbe
jl
pop
test
lret
inc
or
test
push
sub
dec
and
cmpl
xchg
push
or
cmpsb
dec
or
or
rorb
and
bound
mov
inc
shrl
popa
add
cmovle
mov
cmp
adc
push
lahf
add
stos
test
pusha
arpl
popa
adc
ss
inc
sub
sahf
and
jmp
cmpsl
enter
xchg
xchg
fwait
cltd
outsb
jnp
dec
incl
pop
adc
leave
cmp
or
mul
seto
xor
enter
pop
fwait
cmpsl
inc
dec
push
jmp
mov
add
mov
or
sbbl
aas
iret
shl
or
add
xor
or
fildl
cli
add
fadds
adc
loop
mov
jo
adc
mov
cmp
pop
adc
mov
cld
je
aaa
adc
ret
ret
lahf
addr16
add
pop
sub
jle
jecxz
mov
inc
adc
bound
inc
sbb
adc
add
xchg
and
popa
push
andl
sbb
cmp
xor
js
sub
shlb
inc
orl
xlat
inc
inc
clc
jbe
cmp
jp
pop
mov
fwait
ljmp
and
leave
add
inc
inc
scas
sbb
mov
callw
mov
cmpsl
mov
cmp
push
loope
scas
adc
push
je
adc
adc
inc
cld
or
push
cmp
je
inc
or
movsb
jbe
add
ds
inc
mov
mov
jbe
push
scas
xchg
mov
aas
testb
adc
jb
push
xor
out
fbstp
rolb
sub
faddp
jmp
jl
ret
mov
aaa
cld
out
push
test
je
cli
jmp
mov
aam
or
negb
inc
cmp
jae
add
pusha
les
and
les
pop
or
mov
sub
jne
and
sbb
lcall
rolb
pop
adc
int
jmp
in
add
or
cwtl
cmp
fbld
mov
mov
mov
rcl
dec
pop
or
pop
push
jo
adcl
lret
je
pop
aas
movsl
or
mov
or
jo,pn
or
imul
and
pop
fucomip
or
mov
addb
mov
icebp
int
ja
lea
dec
std
cmp
xor
rorb
mov
hlt
jmp
push
jle
test
dec
jns
mov
out
ja
cli
sbbb
dec
movsl
nopl
out
push
pusha
and
cld
lahf
jae
mov
popa
cli
and
or
pusha
lahf
outsb
fcomip
or
push
or
mov
push
mov
xchg
inc
xchg
xchg
dec
rcrl
jbe
jg
push
shlb
daa
icebp
adc
sub
inc
and
or
aad
loop
add
pop
or
or
or
dec
adc
inc
pop
add
or
or
xor
fwait
loop
or
mov
push
das
or
loop
add
push
mov
jl
jg
mov
xchg
test
shl
push
lahf
mov
xchg
push
push
sarb
pop
add
ret
and
adc
dec
pusha
sub
pop
lcall
push
jl
mov
xchg
xchg
or
cmp
test
mov
jns
jmp
clc
and
cmc
push
adc
push
shl
mov
xor
test
pop
ret
add
add
or
xor
jnp
lret
jmp
bound
push
in
inc
in
mov
in
jnp
mov
mov
neg
push
xor
mov
add
mov
cli
jp
or
out
jne
fimull
push
test
mov
imul
inc
jmp
js
or
int
cmp
xlat
add
mov
sub
push
or
mov
jecxz
scas
inc
fwait
aad
stc
dec
or
add
mov
or
movsb
ja
insb
xchg
or
and
aad
ds
ret
xchg
icebp
xchg
popf
popf
pop
lods
cmc
inc
arpl
and
in
adcb
mov
cltd
jbe
mov
jnp
jno
mov
pop
sti
mov
pop
shll
adc
dec
fisubrl
cmpsl
adc
push
popa
mov
lock
mov
cmp
movl
dec
cmp
jae
push
or
push
jle
add
testb
in
inc
rcrb
jae
mov
pop
jnp
dec
sbb
pop
add
or
jmp
ss
jae
insb
adc
push
rcrl
jo
je
iret
inc
stos
lcall
mov
jnp
repz
add
mov
lcall
push
add
mov
mov
inc
pop
outsl
mov
push
orl
movl
add
pop
or
mov
push
adc
stos
pop
xchg
pop
sub
fisubl
jo
sbb
pop
popf
outsb
pop
fs
cmp
sub
dec
sbb
ret
mov
in
popf
inc
push
or
insb
or
test
mov
repz
mov
or
inc
test
dec
ffree
add
outsb
inc
js
test
add
or
lahf
cmc
daa
mov
adc
sbb
fisttpll
pushf
test
dec
add
mov
push
jmp
je
mov
je
aad
dec
jo
das
jo
jg
pop
ja
popa
daa
mov
pop
inc
test
in
mov
pop
add
adc
dec
add
pop
cmp
mov
popf
dec
mov
rclb
and
sub
orl
shrb
js
ret
inc
push
nop
xor
fistpl
or
mov
mov
or
lods
out
outsb
lahf
cld
lea
add
rcl
and
push
or
pop
inc
adc
js
sub
dec
dec
cmp
sbb
mov
cs
loop
sub
xor
add
and
cmp
mov
xchg
into
dec
xor
inc
push
sbb
mov
pop
sbb
js
xlat
rolb
pop
loopne
lods
cs
popf
jg
rolb
scas
shl
push
iret
mov
add
cwtl
xor
sarl
sbb
arpl
out
cmc
loop
mov
jns
push
cltd
sbb
or
push
mov
pop
imul
loop
xchg
add
sub
push
cltd
fsubs
scas
mov
push
daa
pop
leave
lea
out
xchg
mov
in
ss
hlt
enter
clc
adc
aad
push
iret
fmuls
outsb
push
les
sub
int3
fadds
push
cmp
cmp
jp
sbb
adc
and
jae
mov
push
push
pop
inc
out
dec
divl
hlt
outsb
adc
pop
sub
int
sbb
mov
jmp
mov
jecxz
aaa
push
sahf
js
push
faddp
xchg
dec
push
sub
ret
loopne
mov
mov
in
or
popf
add
mov
sub
lods
push
addb
sbb
daa
aaa
push
inc
mov
jb
mov
loop
mov
bound
xor
cmpl
and
inc
or
aad
pop
mov
loopne
xchg
fnsave
sub
pop
and
adc
bound
add
inc
sub
xchg
push
sbb
jg
push
ljmp
pop
pop
push
movsb
loopne
cmp
idivl
and
jbe
or
add
out
stos
arpl
addr16
sbb
ljmp
clc
sbb
sti
faddp
filds
mov
pop
pusha
orl
push
sub
adc
lret
inc
add
lcall
xchg
pop
inc
outsl
shlb
dec
pop
sub
and
adc
pusha
jb
sbb
inc
pop
es
mov
std
lods
add
test
and
iret
xor
dec
adc
push
and
cmpsb
test
test
inc
jg
sub
mov
push
testl
pop
and
das
pushl
mov
fiadds
repz
push
cmp
jae
push
cwtl
adc
sbb
dec
adc
pusha
test
fsubr
ret
rcrb
andb
cmpsl
test
fs
popa
inc
jp
icebp
cmp
jl
test
and
shrb
or
fwait
sub
and
lahf
cmpsl
sbb
adc
ja
xchg
fiaddl
popa
stc
test
rcl
push
loop
in
push
push
mov
in
test
push
fcoml
xchg
lock
fimuls
push
icebp
divb
adc
dec
sar
js
adc
mov
mov
hlt
movb
test
loope
sbb
js
mov
cmp
pop
mov
jne
mov
or
adc
pop
push
and
std
dec
hlt
add
push
imul
fiadds
sub
lcall
pop
or
adc
add
add
ja
stos
mov
mov
mulb
mov
popa
inc
dec
jmp
dec
or
stos
xor
mov
sub
fucomi
movsl
cs
cmp
mov
insb
pop
jns
mov
loopne
bts
xchg
jno
shlb
lcall
mov
popa
insl
inc
clc
xor
push
adc
sub
push
mov
dec
pop
aas
test
pop
ret
mov
cmc
in
xchg
sbb
adc
test
sub
fs
or
sbb
cltd
or
notl
inc
or
xlat
push
test
push
lods
pop
and
jne
and
xchg
ds
test
add
xchg
pop
pop
lcall
mov
cmpsl
iret
rclb
push
es
ss
or
lea
sarb
fmuls
jnp
cmp
cmp
rorb
pop
jmp
mov
and
ret
pop
mov
imul
mov
orl
adc
out
inc
xchg
pop
aad
in
mov
cltd
movsb
mov
or
inc
rcrb
or
adc
add
xor
jecxz
cmpsl
out
sbb
inc
push
inc
insl
imul
insl
pop
pop
in
orl
xor
or
in
add
jp
stos
fcmovbe
loopne
xchg
imul
cmpsb
xchg
in
add
add
xchg
movl
dec
fstp
movsl
adc
jmp
or
lock
cwtl
dec
repnz
cwtl
xor
sar
add
lea
mov
dec
mov
push
mov
push
or
mov
add
add
shlb
lea
adcl
sbb
jecxz
insl
xchg
xlat
push
adc
loopne
push
mov
adc
nop
rol
push
push
adc
test
lods
mov
pop
pop
clc
aas
dec
rcrl
sub
xor
xchg
hlt
loope
push
test
dec
fdivs
sub
addl
cmp
push
jmp
js
add
aas
shr
jge
add
jle
outsl
es
or
sar
cmpsb
xchg
jnp
orl
push
push
js
fcomps
bound
je
sbb
test
lea
pop
pusha
cmp
stos
test
jne
inc
mov
push
pushf
inc
push
cmp
jbe
shlb
dec
mov
bound
dec
jo
xchg
push
aas
test
add
pop
pop
lods
jne
cmp
push
adc
adc
popf
icebp
add
pop
dec
jbe
mov
andl
pop
push
inc
xchg
loop
lds
pop
das
lods
js
movsl
test
cmp
sbb
out
adc
mov
fsubrs
mov
cmp
pushf
adc
jle
cmp
push
rcll
jae
and
sbbb
fsubr
aam
out
rcrb
adc
push
movsl
push
sbb
enter
std
push
or
cmp
dec
ds
aas
cld
mov
insb
out
add
test
xor
fdivrl
aas
dec
dec
sti
nop
cmpsb
cmp
dec
rclb
dec
cmp
cld
insb
push
push
push
cmc
inc
sahf
dec
pop
xchg
sbb
push
pcmpgtb
js
jno
cmpsb
arpl
push
das
xchg
sbb
sbb
lahf
mov
fwait
shl
out
cmp
xor
push
inc
das
movsl
jge
aam
cmp
xor
dec
pop
push
rcrl
adc
cwtl
xor
or
popf
ret
and
dec
jmp
push
scas
xchg
lods
enter
or
or
pushw
mov
cld
sahf
dec
pop
inc
ljmp
fs
inc
mov
adc
adc
mov
dec
enter
and
cmc
bound
mov
fcomps
mov
mov
test
lea
xor
add
sbb
fsubrl
pushf
adcb
dec
cmp
sbb
ljmp
add
loopne
add
loopne
les
push
sub
sbb
fistps
fcompl
mov
test
sbb
fsubr
ret
sbb
push
faddl
and
pusha
sub
push
jo
sbb
std
jmp
in
jp
push
dec
pusha
lahf
test
pop
and
orl
js
mov
in
dec
add
fimull
lret
inc
add
push
out
das
sbb
sub
pop
rol
or
inc
add
jb
js
int
scas
pop
je
incb
dec
in
jno
lea
lea
sbb
jb
mov
and
or
xor
pop
imul
int3
les
jl
xchg
test
mov
add
test
int3
mov
xchg
cld
mov
test
inc
and
cmp
and
xor
pop
sbb
loope
sti
sbb
jo
push
rcll
or
mov
call
fs
lods
sbb
scas
and
mov
scas
mov
xor
incb
push
add
add
pop
popf
mov
mov
xchg
js
repz
cmp
fimull
call
or
push
inc
add
mov
stc
popa
or
xor
add
mov
sub
mov
sub
or
daa
add
popa
add
out
aas
je
dec
mov
xor
inc
xchg
lds
aas
pushf
jge
xor
pop
imul
aam
push
imul
mov
dec
cmp
dec
xlat
scas
sub
popf
icebp
lock
jb
adc
ja
sub
or
popa
add
push
movl
stc
ds
inc
adc
pushf
cwtl
rcrb
xor
aaa
in
add
ljmp
add
adc
jge
lds
jns
and
add
pusha
pop
ret
scas
mov
fiadds
add
ss
sbb
aad
aaa
xor
out
pop
shl
or
inc
adc
mov
add
mov
out
xor
add
aam
je
dec
jne
pusha
mov
cmc
lcall
or
bound
shr
and
jmp
dec
dec
sub
dec
cmp
sarl
aam
sub
ret
int3
pop
fadd
cmp
xor
repz
mov
in
mov
js
push
add
lods
and
sub
andl
cld
loopne
in
and
movl
xchg
daa
xor
divb
enter
push
lea
cli
jb
cltd
test
jae
pusha
inc
outsb
cmp
lods
or
jmp
or
cmp
repnz
sbb
shll
push
jns
mov
xlat
je
jp
push
mov
push
pop
and
mov
lcall
ret
test
shrb
pop
cmp
xor
jns
loope
aam
repnz
into
adc
pop
fs
push
jae
push
xchg
inc
bound
adc
or
mov
lock
add
cmp
testb
lock
fmul
data16
hlt
push
movsl
dec
ds
je
pop
rorb
cwtl
ret
xor
inc
sbb
roll
sbb
inc
push
xor
push
mov
outsl
int3
or
call
jmp
inc
and
and
lea
push
cmp
in
mov
jne
cltd
adc
mov
push
dec
jl
pop
dec
push
lods
ret
xchg
adc
xchg
aaa
push
or
int3
rorb
cld
lods
mov
inc
fcmovnbe
jmp
cmp
je
aaa
pop
add
cmpsl
js
shll
adc
cmpl
add
adc
add
adc
pop
mov
jnp
add
push
fldl
add
dec
xchg
fnsave
lfs
fs
popa
add
rcrb
sub
inc
push
pusha
incl
inc
cmpb
inc
lea
fnstcw
mov
test
jmp
lods
and
jne
pushf
lods
outsl
bound
push
test
xchg
cmp
notb
or
xchg
sbb
cmp
ds
movsl
adc
lcall
nop
or
or
sub
add
push
imul
jbe
fcoml
jnp
jae
ret
xchg
arpl
adc
jbe
dec
movl
andl
adc
push
xor
sub
cld
inc
xchg
mov
lret
ja
mov
adc
pop
xor
pop
enter
mov
cmpsb
add
push
mov
pop
test
ret
mov
jo
popa
mov
sub
or
and
loope
fdivrs
ja
jge
mov
mov
or
jno
inc
cmp
jl
leave
cs
add
dec
repz
adc
sbb
dec
and
add
lods
cmp
mov
clc
inc
cwtl
mov
insb
dec
mov
inc
decl
jmp
js
jo
enter
insb
mov
scas
cltd
les
mov
or
dec
mov
shll
in
mov
add
imul
or
push
dec
andb
sbb
cmp
in
mov
jae
inc
ja
daa
fistpll
popf
inc
jae
icebp
add
pop
jnp
ret
add
incl
aam
push
je
ret
mov
xchg
rorl
add
mov
lea
xor
andl
sbb
and
push
sub
dec
push
fisubrl
lods
or
fdivrl
inc
lods
loope
insb
xchg
addl
cli
inc
inc
push
cltd
pop
or
sub
and
or
mov
inc
std
gs
imul
mov
popf
mov
pop
mov
xor
cmpl
test
and
mov
sti
sub
pushl
dec
aas
dec
jno
adcb
loope
daa
pusha
or
inc
jmp
push
jl
push
loopne
mov
dec
add
adcl
aam
jbe
mov
inc
dec
aaa
lods
stos
test
push
mov
das
jl
sub
xor
push
and
inc
sub
pushf
in
fiadds
or
mov
loopne
cmpsb
mov
call
subl
shll
imul
sbb
inc
pop
adc
out
adc
pop
lock
aam
push
je
incl
inc
sub
jns
mov
push
minps
push
lods
inc
dec
xor
aam
dec
sbb
lods
and
dec
inc
or
pop
pushw
sbb
sbb
pop
mov
test
cld
cmp
lea
push
and
pop
xor
or
sub
lea
sti
pop
jb
cli
sbb
sub
sbb
in
pushl
cld
pop
adc
sub
xor
addl
mov
ja
dec
in
xlat
dec
pop
mov
inc
and
jmp
mov
adc
push
mov
adcl
mov
test
nop
pusha
adc
or
cltd
mov
addl
popa
inc
sub
push
cmp
shl
or
pusha
imul
stos
ds
jno
adc
push
push
xchg
icebp
pop
or
inc
add
cmc
jns
mov
xchg
hlt
adc
dec
cs
insb
filds
push
movsl
lods
xchg
aas
cli
insb
cmp
loope
ss
mov
or
testl
push
sbb
xor
mov
jl
stos
sti
xchg
stos
push
out
cmp
jge
xchg
push
cmp
imul
xchg
cmp
stc
adc
add
dec
and
jmp
sbb
cmp
and
outsl
push
in
sbb
xchg
xchg
outsl
lds
sbb
add
mov
fsts
sbb
inc
into
cmp
sbb
push
pop
lds
add
xor
sbb
adc
add
sbb
jns
cltd
addl
add
dec
movsb
and
mov
push
xor
or
shr
sbb
mov
int
push
sub
sub
js
xor
inc
sub
push
adc
xor
or
test
pop
add
in
dec
push
sti
pop
add
shll
pop
std
aas
movl
test
out
das
add
push
sti
push
push
or
out
andl
xor
in
pop
jb
push
imul
ss
pop
push
sub
fidivl
aad
and
aam
movsb
sub
stos
lret
xor
mov
pushl
push
repnz
insb
xchg
fistpl
dec
or
js
pop
sub
dec
cmp
xor
sbb
pop
push
or
aaa
sub
rolb
or
fnop
or
push
xchg
repnz
sarb
and
dec
aad
inc
and
cwtl
pop
mov
subl
mov
out
loopne
sbb
out
mov
push
bound
cltd
out
das
adc
adc
and
mov
outsb
and
je
mov
and
lea
fs
add
rolb
xor
and
fwait
cmpl
adcl
pop
pop
test
jo
ss
inc
aaa
sub
or
orl
cltd
fs
jae
mov
int
adc
jno
inc
cmc
cmc
mov
stos
das
in
lret
out
je
bound
dec
loopne
xor
sub
xor
pop
loop
cwtl
movsb
sbb
inc
pusha
outsl
jne
lea
push
pop
pop
orb
push
les
pop
xor
or
jmp
inc
imul
lret
mov
cmpsb
icebp
adc
sarb
outsl
mov
fldl
sub
andb
push
cmp
aaa
icebp
sub
and
pop
repz
push
sub
outsb
adc
movsl
dec
shrb
mov
sub
popf
arpl
add
jnp
in
push
adc
cmp
or
jmp
mov
inc
push
and
mov
mov
adc
jge
pop
xor
sbb
leave
pop
and
sbb
mov
jbe
mov
mov
mov
push
pop
cli
push
sub
lahf
cmp
or
pusha
mov
sbb
lahf
or
add
cmpsl
inc
fldl
inc
pop
mov
in
mov
out
jno
mov
mov
insl
ret
mov
nop
aaa
sub
call
mov
leave
in
lea
movsl
testb
rep
or
adc
xlat
test
pop
mov
mov
negb
and
xor
sbb
pop
lahf
or
pop
xlat
divb
popf
inc
jge
cmp
daa
jmp
mov
dec
fstps
mov
and
or
jg
push
cmc
je
and
jle
fisttpll
jne
aad
mov
pop
stos
ret
push
xor
sbb
mov
xlat
aaa
sbb
iret
mov
dec
and
iret
movsl
push
das
mov
jg
xchg
fcmovb
sbb
into
or
sub
pop
addb
lret
in
fadds
imul
jge
adc
repz
scas
push
jbe
in
divb
mov
xor
rorl
jmp
mov
lcall
cmp
pop
xorl
testl
xor
pop
push
out
inc
push
cmpsb
or
cmpsl
dec
add
pusha
ss
adc
mov
jae
mov
iret
add
loope,pn
mov
dec
lret
loope
jno
and
push
dec
enter
xor
ljmp
sarl
sub
push
cmp
adc
mov
sbb
and
push
test
push
xchg
and
xor
lds
cmpsl
jno
and
arpl
arpl
or
or
popa
pop
inc
out
lea
push
mov
test
pop
enter
xor
xor
nop
or
and
sbb
pop
and
and
repnz
pop
inc
xor
inc
jb
and
pusha
xchg
push
mov
dec
push
in
and
sbb
and
daa
inc
mov
cmp
and
mov
je
rcll
xchg
call
xchg
sub
push
lds
pop
cmpsb
popa
pop
pop
and
and
in
cmp
enter
cmp
sub
or
out
xor
in
adc
push
aaa
outsl
shll
pop
pop
mov
push
push
sbb
imul
pop
enter
pop
das
hlt
push
mov
xor
push
addl
loopne
pop
and
outsl
mov
jo
dec
dec
xor
cmovns
insl
xchg
ja
or
or
sbb
or
cmp
pusha
lea
fisubrs
fwait
nop
out
push
adc
and
adc
dec
add
add
and
adc
movb
add
popa
push
push
xchg
sub
jb
cmp
add
inc
pop
or
test
xlat
sbb
xchg
in
hlt
in
pop
fcmovnu
and
inc
sub
push
data16
xchg
rolb
inc
repz
nop
fiadds
aaa
daa
icebp
inc
fisubl
push
mov
sbb
lock
pop
sbb
or
add
pop
xchg
icebp
rclb
xchg
lock
cs
cmpsl
add
fidivrl
pop
insb
dec
mov
sbb
in
clc
loopne
add
inc
in
sub
push
into
fmull
adc
aam
add
jl
lcall
fsts
pop
adc
push
and
adc
bound
popa
jbe
insb
pop
stos
jo
push
add
in
sbbl
fdivs
cwtl
rcrl
dec
xchg
icebp
push
add
rorb
icebp
cmp
pop
push
xor
pop
push
andb
dec
adc
mov
adc
xor
icebp
sub
pop
aam
fists
jle
fwait
les
lar
imul
push
push
push
icebp
or
jl
mov
jbe
testl
sbb
dec
mov
or
mov
cmp
je
inc
xlat
adc
test
nop
ret
rolb
sub
and
jecxz
add
cwtl
cmp
icebp
mov
shrl
pop
int3
lcall
cmpl
dec
cmpsb
filds
mov
inc
mov
dec
and
inc
jecxz
pushf
adc
xor
fsubrl
push
mov
jnp
cmp
push
cmpsb
xchg
add
inc
fcomp
push
faddl
xchg
imul
les
daa
mov
add
inc
enter
push
les
xor
jns
inc
lahf
shll
mov
xor
lock
pop
mov
pop
orl
int
loope
push
sti
dec
xor
ja
and
ja
cmpb
sbb
int3
cli
ret
push
cld
push
xor
cmp
ljmp
push
mov
nop
mov
clts
repnz
or
xchg
mov
inc
push
xchg
jge
push
push
icebp
jne
inc
jne
push
loopne
or
mov
jge
mov
ja
mov
jne
test
add
add
aaa
adc
dec
add
cltd
clc
popa
inc
push
push
rcrb
arpl
popa
and
and
in
pusha
stos
mov
sbb
je
cmp
addr16
and
sbb
shrb
pop
dec
lea
movsb
mov
aad
adc
xchg
push
jmp
inc
popf
inc
stos
es
adc
xchg
lcall
mov
fldcw
add
cmpsl
inc
mov
lret
gs
adc
cmp
jle
xchg
cs
sbb
adc
js
lea
hlt
inc
pop
mov
sbb
aas
cld
add
xor
sub
fcompl
lods
in
sub
mov
cli
and
sbb
outsb
dec
inc
inc
in
fcomps
rorl
mov
loope
push
inc
dec
push
inc
jmp
mov
roll
sub
sub
pop
aaa
xor
adc
cmp
mov
pop
fistl
sbbl
jmp
sub
xchg
push
cmp
or
leave
push
sbb
loop
dec
sbb
or
add
xchg
nop
stos
add
dec
inc
stos
mov
pop
inc
enter
int3
std
mov
mov
dec
jae
and
loop
dec
mov
sbb
sbb
insb
mov
aam
pusha
es
fs
xchg
cmc
nop
aam
push
popa
pop
out
add
and
xorl
test
inc
pop
push
test
lret
mov
xorb
add
cmp
dec
jle
ss
add
stos
mov
test
xchg
shlb
or
loope
sub
rol
cmp
out
inc
inc
or
or
loop
enter
jae
inc
add
outsb
mov
push
scas
orl
jno
add
cmp
mov
cmp
jo
mov
sbb
enter
gs
xchg
add
xor
flds
mov
mov
lret
jp
sbb
jmp
xor
lock
add
or
cmp
sub
stc
in
fistpl
adcb
addr16
inc
ds
inc
push
inc
dec
sub
sbbl
inc
push
les
lea
push
push
addr16
push
int3
add
cmp
pop
mov
xchg
lret
stc
add
sub
push
and
mov
loope
mov
add
add
leave
xor
mov
jecxz
movsl
push
sub
test
hlt
ja
jp
mov
test
add
and
cmp
dec
and
daa
daa
mov
pop
or
cmp
das
pop
jp
mov
sub
adc
lret
sti
or
jmp
pop
mov
and
xor
movsb
movsb
dec
adc
dec
shrb
movl
cld
mov
dec
andl
dec
imul
mov
cmp
filds
cmpsl
mov
dec
cmp
xlat
sub
lea
ljmp
stc
or
sbb
add
fwait
adc
cs
add
add
loopne
dec
aaa
adc
clc
inc
sbb
xchg
in
sbb
cltd
jne
mov
dec
cmpsb
xor
xchg
and
sub
popl
sub
add
daa
sub
daa
jecxz
fdivrs
movsb
sbb
out
xor
and
adc
xchg
inc
inc
mov
xor
and
adc
push
mov
adc
jmp
lea
jae
dec
pop
bound
or
adc
push
sub
call
adc
add
mov
mov
pop
push
xchg
adc
rcrb
push
rcrb
pusha
add
pusha
inc
xchg
xchg
adcb
xchg
sbb
sbb
xchg
std
and
mov
cltd
mov
mov
stos
test
mov
dec
aaa
scas
cmp
pop
and
push
enter
cmp
mov
push
lea
pop
push
push
xor
dec
mov
mov
push
daa
mov
sbb
sub
call
pop
je
sahf
incl
sbb
sub
jo
sbb
iret
leave
push
fsubrl
nopl
call
xchg
ret
sbb
rorl
dec
cmp
pop
cmp
shrb
loope
movsl
xchg
push
adc
je
sub
or
or
imul
mov
lahf
push
fistps
rclb
pop
adc
test
adc
inc
add
cmp
inc
aam
inc
add
mov
icebp
mov
fldenv
mov
add
xor
adc
dec
in
pop
and
xchg
sub
aam
dec
adc
add
enter
std
lods
xor
data16
sarb
dec
or
test
insl
mov
add
mov
test
pusha
out
mov
js
and
lahf
add
cmp
jge
mov
je
pop
sub
into
inc
adc
adc
sub
pop
push
jp
and
or
incb
inc
cmp
insl
and
daa
imul
insb
xorb
clc
fists
inc
js
fimull
cmp
adc
push
adc
cmpsb
rcr
sbb
add
or
es
or
push
es
fdivrs
push
xchg
orl
fs
dec
lods
add
adc
sub
dec
and
cli
pop
aaa
cs
xor
jmp
inc
adc
mov
cmp
rcrb
sbb
sub
dec
je
cli
push
enter
ja
add
push
sub
cmpb
add
movl
push
fwait
pop
nop
xchg
sbb
cmp
das
lret
push
jp
insl
inc
inc
push
mov
in
inc
roll
cmp
push
sbb
push
add
or
fs
bound
lods
popa
ds
add
and
add
aaa
push
ja
push
push
jo
ficompl
dec
add
xchg
push
xchg
and
ss
add
lcall
mov
out
popa
stc
or
test
movl
xchg
lods
sbb
icebp
jbe
dec
mov
cmp
lahf
and
out
js
fadds
movsl
push
push
sbb
xorl
subb
mov
push
sbb
arpl
sbb
jo
push
jo
addl
or
adc
ljmp
movl
imul
xor
mov
cmp
xlat
mov
lcall
push
sbb
cltd
ret
mov
sarb
push
and
and
outsl
jle
jecxz
int
je
adc
jbe
test
dec
dec
testl
dec
add
xchg
xchg
inc
add
push
xor
inc
push
repz
xchg
repnz
push
lea
stc
mov
add
repnz
sbb
lods
lds
out
out
sbb
xchg
aam
clc
adc
sub
rcrb
mov
add
cmp
inc
sbb
je
in
add
jge
add
jae
lea
fs
imul
popa
inc
inc
add
push
je
push
mov
mov
in
push
test
mov
add
add
push
enter
in
jnp
or
push
bound
imul
sbb
test
iret
aas
loope
pusha
bswap
nop
mov
movl
xor
or
call
inc
or
mov
or
adc
test
dec
arpl
xchg
subl
sbb
arpl
mov
inc
int3
or
cli
or
mov
push
testl
mov
les
sbb
or
mov
mov
or
cmp
movsb
repz
pushl
push
mov
movsb
push
inc
jno
wrmsr
rol
and
cs
scas
orl
dec
cmp
xor
ret
fisubl
sub
fstpl
jmp
or
ret
push
cmp
jmp
and
or
cli
or
adc
nop
lds
shlb
push
inc
and
mov
cwtl
mov
adc
mov
inc
add
aam
push
pop
repnz
dec
mov
adc
decl
fs
loopne
adc
arpl
fisttps
jne
movsbw
mov
outsb
push
sbb
cmp
jne
and
or
test
je
or
inc
js
rorb
adc
pushf
add
inc
hlt
mov
in
jne
insl
hlt
push
inc
std
js
push
jle
rolb
pop
dec
cmp
or
inc
je
push
lods
testb
sbb
aad
push
mov
adc
movl
shll
andl
xor
xchg
xchg
xor
push
jg
lea
fucomi
add
cmpsl
push
inc
dec
sahf
das
fwait
dec
lods
repnz
ret
mov
xor
sbb
and
cmp
pop
mov
mov
imul
inc
xchg
dec
cmp
adc
cmpsb
inc
gs
scas
je
pop
je
push
sub
mov
dec
sbb
pop
and
lock
movsl
xor
cvtps2pi
inc
or
int3
dec
xchg
neg
hlt
and
lods
cs
test
daa
add
neg
out
mov
dec
mov
aad
in
ret
imul
ja
pop
xchg
pushl
push
push
cmp
int
mov
movsb
sbb
aad
sbb
movsl
adc
inc
lock
mov
shrl
ret
inc
push
sbb
mov
incl
xor
ret
push
std
jne
sbb
andb
or
and
xor
adc
aam
add
iret
js
xchg
pop
mov
mov
imul
outsl
xor
dec
jg
and
mov
inc
test
add
xchg
xchg
xor
aam
enter
aam
xchg
sbb
xor
std
adc
lcall
loop
mov
mov
insl
popa
cmp
xor
mov
hlt
jo
push
test
and
dec
adc
sbb
jns
clc
cmp
adc
cld
push
push
js
inc
push
dec
mov
push
lock
jae
out
in
movsl
cmp
cmp
dec
fs
in
repnz
mov
push
in
test
and
add
mov
sub
mov
jle
mov
or
mov
add
movl
push
test
mov
xor
cmp
insb
addb
inc
mov
ret
out
or
mov
sbb
adcb
stc
push
jp
push
pop
dec
cld
sub
mov
pop
fcomps
adc
sub
sti
cs
push
sub
mov
jno
adc
test
dec
ret
inc
xor
rclb
sti
popl
mov
movl
stc
xor
mov
inc
rolb
je
sbb
into
int3
mov
add
sub
pushf
sarb
add
pop
xor
stos
inc
ds
sahf
pop
inc
sbb
or
ficomps
movl
cmp
and
sub
ret
loope
mulb
loopne
add
lret
dec
mov
add
roll
or
test
sub
xchg
mov
jns
pusha
or
mov
orps
push
test
sub
add
in
cmp
sub
enter
or
push
clc
sub
dec
stc
and
jg
out
push
add
push
push
push
push
leave
push
or
push
pop
xor
mov
mov
stos
ret
or
icebp
push
jne
mov
push
lock
addl
dec
fadds
adc
adc
cs
stos
aas
dec
adc
pushf
push
movsb
cmp
xor
js
mov
fsubs
adc
andl
ljmp
adc
repnz
xchg
nop
loopnew
mov
mov
repz
leave
mov
mov
cs
or
xchg
cld
jmp
push
rorl
ret
js
or
inc
cmpb
xchg
data16
inc
cwtl
lcall
orl
hlt
adc
aas
pushf
lea
incb
cli
mov
pop
add
fs
mov
lods
fnstsw
mov
pop
cmp
cmp
jle
cmp
jnp
imul
out
add
xor
loope
jp
xchg
xchg
jbe
loop
popa
outsb
or
enter
adc
rolb
sbb
jnp
cmpsl
and
insl
mov
add
pop
sbb
adc
cmp
movsl
mov
cmp
push
test
les
ret
add
test
sub
pop
das
inc
sbb
xor
lock
in
cltd
xor
pop
add
add
mov
stos
arpl
add
add
data16
xor
xor
outsl
xchg
enter
adc
mov
inc
cmc
and
scas
xchg
xlat
test
push
push
xlat
inc
cmp
mov
pop
pop
jbe
fadds
push
pop
push
xchg
addr16
pop
push
sbb
shll
fildll
movsl
cmp
add
add
push
notl
cmp
inc
jne
cmpl
jb
or
add
mov
mov
adc
sbb
mov
mov
mov
sbb
out
rcll
pop
in
lea
push
sbb
aaa
add
add
imul
icebp
or
add
push
pop
xchg
or
and
mov
xor
jne
cld
or
jl
jb
jl
ja
mov
inc
adc
adc
or
or
loopne
shlb
sub
pop
shrl
notb
movq
dec
les
insb
pop
dec
scas
in
sub
enter
insl
jne
imul
mov
dec
shrl
stos
je
jge
mov
sahf
ret
int3
call
dec
ljmp
push
cmp
mov
push
pop
roll
xor
es
jp
dec
pop
cmp
icebp
inc
hlt
jmp
cmp
ljmp
inc
mov
or
pop
int3
je
loop
arpl
add
pop
push
rol
ja
notl
lods
mov
cmpsb
loope
or
je
push
sbb
or
adc
je
add
lds
insb
mov
daa
std
mov
cmp
dec
jge
add
or
dec
pop
and
cmp
gs
test
mov
imul
push
pop
add
pop
pusha
icebp
and
andl
inc
loop
push
inc
add
mov
jge
xchg
mov
bound
lret
cmp
cmp
adc
test
inc
sbb
push
cwtl
fmuls
repnz
mov
add
rcll
mov
sbb
xor
sub
push
ror
inc
cli
cmc
push
inc
cmp
fchs
jmp
test
insb
andb
push
loopne
or
mov
push
mov
test
sarl
push
ret
inc
ret
adc
mov
cmpsb
jnp
pop
sub
mov
sbb
sbb
out
mov
mov
mov
push
adc
stc
jle
add
cmpw
sbb
cmpb
pusha
sub
push
push
ja
cmp
stos
ss
push
pop
mov
decl
add
stc
jb
push
je
add
dec
inc
mov
jl
jns
adc
pop
jns
mov
adc
addr16
pop
pop
jmp
lea
add
mov
jbe
sbb
mov
cld
shlb
dec
push
xor
sti
and
sbb
shr
cmpsl
outsl
cld
lcall
dec
outsl
out
jg
movzwl
cmpl
push
adc
rorl
jns
inc
or
rclb
add
sbb
cmp
jl
sub
sahf
sub
fimull
test
cmp
push
shrb
xor
or
enter
jg
rcrl
mov
push
add
jae
bswap
push
cmp
sahf
ss
mov
pop
and
pop
and
enter
cmpsl
bound
hlt
jne
jb
xchg
add
inc
xlat
cmovg
pop
dec
pop
push
pop
push
fmuls
jo
pop
andl
and
lea
adc
xor
or
insl
add
faddp
pop
adc
sbb
mov
je
mov
movsl
adc
push
imul
and
push
push
icebp
or
and
sbb
mov
pop
sbb
cmpsb
and
outsl
fisttpll
pusha
and
mov
mov
data16
adcb
sbb
fadds
stc
filds
mov
ret
jb
inc
pop
mov
xor
xor
lock
cmp
mov
fists
pop
dec
ss
push
inc
test
mov
push
ss
add
dec
adc
iret
mov
ss
cmpsb
addl
dec
das
in
shr
add
ret
push
cld
test
lock
jmp
sub
sub
mov
and
or
mov
xchg
shll
lods
popa
adc
stos
mov
jbe
addr16
adc
and
sbb
cmpb
sbb
push
add
xlat
add
inc
pusha
xor
and
rorb
or
dec
push
pop
dec
daa
rcrb
add
cmp
cmpl
pop
je
or
in
aaa
lods
adc
call
xor
xor
lods
mov
cmp
mov
test
jecxz
sbb
mov
or
sbb
jl
jne
dec
sub
inc
hlt
ret
call
lea
cmpsb
mov
ret
pop
add
les
imul
dec
movsl
lret
jmp
mov
rorb
das
andb
push
and
and
xchg
cmp
rcll
sbb
icebp
and
sub
movsl
aad
lods
adc
call
push
or
scas
xor
xchg
sbb
cmc
lcall
testl
inc
icebp
hlt
movsb
je
in
mov
loopne
cs
dec
imul
scas
add
inc
or
cmp
data16
pop
sbb
psubw
es
mov
xchg
js
dec
push
incl
jbe
cs
flds
dec
lods
adc
xlat
xor
in
inc
ficomps
adc
add
pop
pop
inc
mov
mov
movl
adc
adc
sub
mov
rolb
test
ret
shlb
sub
push
xor
push
inc
test
daa
aaa
mov
cmpsb
std
cmovo
xor
jmp
push
push
das
xorb
push
sbb
enter
or
sub
sbb
test
in
fbstp
mov
pop
es
mov
in
inc
into
push
dec
mov
lock
sub
pop
shrl
adcl
cmp
pusha
add
inc
dec
xor
inc
sbb
lea
idivb
cs
pop
mov
add
push
sbb
mov
or
mov
repnz
mov
dec
lahf
stos
pop
aaa
adc
inc
jno
lods
inc
mov
push
sbb
test
push
add
push
dec
sub
stos
in
push
or
jmp
inc
sahf
addr16
shlb
sub
mov
out
popf
outsl
push
add
mov
popa
iret
cmpb
inc
inc
dec
push
jle
and
scas
nop
mov
repz
shlb
clc
mov
xlat
sbb
nop
mov
jne
sub
xorl
push
sbb
test
outsb
mov
sub
fdivs
push
xor
clc
pop
fwait
ljmp
inc
test
push
dec
push
adc
lea
pushl
sbbb
fidivrs
xor
sbb
mov
andl
xor
loopne
andps
cmp
sub
jecxz
jle
aaa
add
pop
xchg
je
enter
rorb
orb
mov
mov
mov
pop
mov
mov
push
or
add
push
sbb
repz
cmpl
cmp
test
movsl
inc
mov
call
repz
push
sub
pop
adc
and
addr16
lret
xchg
enter
push
lea
dec
es
adc
jmp
aam
data16
mov
and
adc
jo
inc
fisubs
inc
mov
rcr
pop
adc
adc
hlt
jbe
dec
push
push
sub
xchg
mov
sbb
mov
xor
movsb
leave
std
fsts
inc
jle
inc
cld
out
fucomp
jmp
add
dec
psrad
std
lea
xor
imul
pop
pop
mov
xchg
lea
push
mov
lock
add
jae
push
out
test
je
mov
outsb
fadd
fstpl
and
clc
push
xor
jbe
push
xchg
cmpsb
cmp
hlt
mov
test
lods
sub
or
xor
rclb
mov
insb
jno
mov
aam
dec
mov
push
push
push
pop
repz
mov
pop
and
adc
or
pop
cmp
cmp
sbb
push
inc
or
and
xchg
loop
adc
cmp
jmp
push
jg
mov
clc
repz
cmp
out
pop
push
sbb
or
jmp
push
xchg
sbb
and
dec
xchg
aaa
add
pop
andb
inc
or
or
and
cli
repz
mov
add
leave
cmpsb
or
or
cld
stc
or
adc
dec
or
pusha
ljmp
and
and
in
pop
inc
sbb
test
stc
adc
sbb
aas
sbb
repz
xchg
xor
jne
xor
or
outsb
or
pushf
and
cmc
test
arpl
unpckhps
and
ja
xchg
add
mov
dec
push
in
pushf
inc
add
es
nop
adc
lea
or
inc
or
mov
cmc
dec
or
dec
and
cmp
xchg
nop
xlat
lahf
adc
repz
inc
sbb
sub
mov
cs
inc
jo
jmp
test
dec
sub
subl
ret
stc
addr16
loop
aam
or
add
adc
or
cwtl
outsl
hlt
scas
rol
xor
pop
mov
push
fdivs
test
stos
jmp
sub
into
fadds
push
or
pop
addl
and
daa
out
pop
jb
sub
or
mov
and
mov
and
aad
sub
and
dec
mov
iret
or
push
xchg
and
add
jne
push
shrb
lret
lea
js
or
xchg
jle
ret
inc
add
lea
nop
subl
jb
cmpsb
popa
inc
aaa
sub
and
popa
mulb
insb
es
mov
push
or
and
xor
popa
add
push
push
and
mov
cld
cltd
pop
stos
out
lea
push
mov
ret
rorb
push
or
sbb
xor
or
adc
popf
add
inc
pop
lods
add
data16
hlt
clc
nop
mov
cwtl
mov
insl
or
mov
or
cs
cmpb
push
push
push
inc
in
xor
lea
pop
adc
or
mov
push
adc
pushf
roll
add
loope
gs
aaa
push
mov
adc
or
sbb
or
movsb
movsb
loop
inc
in
lock
sbb
sbb
jmp
xchg
dec
push
push
add
adc
nop
cmp
ss
addr16
mov
push
adc
jmp
sti
nop
xor
or
and
mov
xor
mov
and
pop
xor
pop
pop
mov
jno
leave
push
xor
lods
and
pop
adc
inc
int
mov
mov
popa
xchg
ds
lock
cmp
lods
roll
adc
push
mov
loopne
add
inc
xor
mov
sub
sub
movsb
sbb
lcall
sbb
aaa
sbb
sbb
pop
stos
mov
cmp
push
pop
outsl
push
aam
pop
lea
out
push
fmul
cmp
aad
sbb
push
push
imul
add
inc
dec
std
lahf
or
xchg
adc
cltd
rolb
adc
pop
add
sub
andl
lea
mov
stos
or
fwait
subb
push
mov
cli
cltd
loopne
or
lock
cmp
rol
and
push
fldcw
sub
and
pop
add
inc
je
ljmp
cltd
jns
pop
push
aad
sbb
add
xchg
out
imul
icebp
mov
sub
add
mul
and
stos
in
push
or
cli
sub
sub
int
cltd
sub
mov
lahf
push
add
test
add
dec
insb
data16
repnz
loopne
xor
leave
rorb
shll
nop
pop
sub
jae
jmp
incb
andl
hlt
cmp
icebp
jb
test
xchg
xor
or
inc
les
sar
adc
jl
mov
mov
xchg
nop
and
dec
call
cmp
sbb
inc
mov
and
or
xchg
push
push
xchg
call
mov
lea
and
fs
jb
lea
push
adc
xchg
adc
push
jns
dec
pop
push
popa
adc
sub
mov
inc
add
push
xlat
push
in
or
mov
mov
aam
movsl
push
outsb
repnz
rclb
pop
and
xchg
lods
out
inc
sahf
adc
jo
mov
or
test
in
popa
ret
sbb
cmp
add
push
push
jns
inc
cmp
push
imul
pop
bound
push
jmp
dec
test
sbb
mov
push
push
pop
dec
stc
daa
cmp
movsb
adc
mov
mov
add
cmp
add
and
push
xor
sbb
sahf
sub
fcoml
pop
ficoms
ret
jecxz
and
pop
sbb
imul
push
push
sub
inc
inc
js
nop
xchg
push
or
jno
push
add
cltd
push
xor
jb
inc
add
or
stos
enter
add
push
test
leave
push
pop
dec
scas
xchg
fimuls
lods
sub
sbb
or
adc
xor
mov
ds
stos
add
adc
shrl
cld
out
test
loope
add
movzwl
add
add
pop
sbb
push
inc
jp
mov
sbb
pop
inc
sbb
dec
mov
lret
pushl
sbb
xchg
shlb
xchg
add
push
test
in
fstl
jns
sub
daa
sbb
add
jne
call
stos
adc
push
mov
jb
inc
jo
sub
push
jo
cmp
sub
mov
xor
pop
inc
cs
jge
sub
mov
loop
cmp
mov
dec
loopne
mov
es
xor
jmp
call
or
mov
pusha
sub
movsl
xchg
rorl
out
cmpsl
xor
dec
push
scas
push
xor
fcoml
rcrl
or
xor
and
outsb
dec
add
adc
cli
adc
in
dec
orb
cmpsb
jle
into
out
inc
xor
jle
ds
pop
add
adcb
pop
pop
pop
mov
fs
or
nop
mov
or
or
arpl
imul
jno
jecxz
push
push
mov
sti
mov
mov
adc
scas
xor
cld
mov
je
movsb
pop
orl
add
sub
sbb
jecxz
push
xlat
or
adc
ret
ljmp
xor
pop
xorb
mov
mov
jae
enter
adc
insl
and
xor
mov
adc
add
repnz
nop
fwait
add
sbb
inc
jg
fistl
add
xchg
push
lds
adc
adc
jmp
xchg
inc
jno
add
test
adc
xchg
inc
adc
cmp
adcl
es
mov
mov
enter
inc
das
icebp
push
rcrl
xchg
sbb
popa
iret
sub
shll
daa
push
push
inc
sub
jl
popa
fmull
xchg
xor
mov
lods
loop
jmp
stc
sbb
push
ds
mov
stos
inc
es
and
push
lret
ss
mov
test
or
adc
adc
adc
adc
add
jmp
mov
mov
jns
addl
adc
mov
sbb
pop
rolb
sbb
cmp
push
dec
lock
push
ja
loope
out
xadd
sbb
mov
stos
and
dec
loope
sbb
int3
jle
sub
and
and
or
ret
adcb
repnz
adc
or
xchg
gs
inc
sbb
xchg
push
mov
add
pop
push
or
push
mov
loopne
inc
loope
push
pop
mov
push
xorb
or
sbb
sub
inc
cs
fnstsw
push
push
mov
and
movsb
xor
dec
out
add
cwtl
outsb
fstpl
jmp
ja
lds
je
sar
outsb
in
and
sbb
sbb
fwait
add
or
dec
movsl
je
sbb
imul
cmc
add
jbe
xor
sbb
ss
stos
lds
mov
inc
call
adc
xor
das
sbb
and
or
leave
jae
push
lods
dec
sar
add
ret
xchg
add
sbb
and
test
or
sub
js
jno
test
jo
mov
rorl
adc
mov
cmc
push
and
or
jne
pop
lods
push
sbb
imul
mov
push
pop
or
adc
fwait
adc
shll
adc
adc
popa
mov
cld
lret
push
xchg
in
adc
je
sbb
adc
push
add
jbe
sarl
cmpsb
jbe
push
adc
lea
popa
or
cmp
add
jb
ret
lea
xor
adc
cwtl
inc
out
push
popa
adc
cmpsb
or
mov
aaa
mov
mov
loope
movsb
movsl
pusha
sbb
add
mov
mov
inc
into
xor
pop
push
fimuls
sti
insb
xor
jl
sub
packssdw
cmp
fisttpl
xor
xchg
fstps
adc
movsb
add
or
mov
lods
add
xchg
push
add
mov
mov
dec
sub
popa
push
sub
mov
add
or
sub
stc
or
mov
dec
mov
sub
into
push
xchg
sub
mov
add
adc
cmp
push
int
add
adc
sub
xor
jle
add
push
cs
jo
stc
jne
das
mov
jns
leave
rolb
ret
inc
sbb
add
jg
push
push
dec
mov
mov
int3
pop
pop
or
inc
and
dec
neg
sbb
sbb
in
int
add
cmp
cmp
mov
ret
push
pop
mov
fadds
add
add
lods
pop
sbb
mov
movsb
faddl
mov
pop
push
imul
jne
mov
dec
loope
mov
je
xchg
or
cmc
insb
loopne
add
add
sub
push
aas
push
pop
push
push
sbbl
lret
or
sbb
lods
iret
and
push
push
push
jo
mov
pop
dec
jnp
mov
fst
mov
xchg
dec
les
sbb
shl
lretw
mov
nop
shl
push
addr16
jo
add
pop
cmp
push
or
fldcw
mov
or
or
xchg
test
mov
cmp
inc
lcall
push
add
xchg
xchg
sbbl
in
mov
add
pop
into
cmp
call
inc
mov
xchg
insl
roll
movsl
xor
popf
jmp
dec
push
cmp
mov
js
inc
sbb
sub
push
sub
lea
push
pop
sbb
add
add
inc
mov
adc
cmp
leave
cs
push
ss
hlt
add
push
and
mov
sbb
adc
test
jl
dec
add
mov
ret
sub
int
inc
dec
mov
mov
cmpsb
fwait
loopne
fcoml
dec
aam
adc
inc
push
lock
xchg
mov
mov
test
push
add
adc
push
lods
fisubs
sbb
test
lret
and
std
and
sbb
push
adc
push
mov
add
push
imul
fnsave
push
mov
test
dec
and
testl
add
xchg
mov
inc
jmp
and
mov
pop
arpl
scas
push
lods
test
popf
in
cmpsl
adc
jecxz
xor
sub
adc
or
test
popf
mov
pop
in
adc
xchg
lock
lret
mov
fsts
in
clc
inc
sahf
lret
dec
or
mov
leave
mov
sub
or
inc
xchg
push
call
mov
and
sub
bound
inc
adc
pop
push
adc
cmp
sub
ja
inc
movl
or
adc
inc
adc
pop
rcr
fldz
and
add
and
cmp
and
and
sub
cmp
fildl
push
je
cmp
sub
mov
sbb
mov
jp
mov
xor
ja
add
adc
enter
sub
mov
mov
rcrb
das
imul
fmuls
mov
inc
push
cmp
add
add
lea
fsubs
mov
mov
add
in
sbb
call
lea
xor
mov
mov
es
addr16
rcrl
mov
jle
push
pop
pop
popa
cmpsb
test
sub
mov
cmp
jl
push
cmp
push
cmp
dec
cld
cld
repz
cmp
jp
push
cmp
cmp
cmp
add
sti
add
add
inc
jmp
mov
data16
popa
xchg
icebp
movl
repnz
sahf
aas
and
or
fs
dec
pop
cmp
pop
idiv
call
cmpb
les
pop
ror
aad
inc
mov
inc
movsb
cmpsb
or
mov
test
jnp
add
jns
adc
push
cmp
das
xor
add
cmp
add
sbb
push
hlt
adc
mov
mov
dec
mov
ret
and
sub
inc
xor
in
jg
adc
bound
sbb
dec
movsl
or
jns
and
adc
or
adcl
mov
pushf
lods
mov
int
lret
rclb
cmp
push
movl
sbb
mov
test
xor
sti
mov
sub
pop
insl
pop
leave
and
iret
orb
fsubl
add
shll
dec
mov
pop
pop
pop
pop
pop
push
ds
les
cs
xor
insl
or
cltd
inc
ror
iret
enter
aam
in
or
and
jo
sbb
addl
push
inc
insl
add
pop
popf
jbe
mov
clc
add
sarl
xor
pop
mov
adc
mov
dec
xor
pushf
xchg
bound
sbb
arpl
data16
inc
nop
mov
push
sub
movsb
or
inc
call
mov
inc
cmp
sbb
cmp
jb
pusha
push
imul
dec
and
dec
adc
sbbl
stos
inc
adc
popa
pop
or
nop
fnop
sub
and
dec
pop
push
xor
in
lcall
sbb
mov
pop
and
sbb
fdivrs
and
sbb
sub
sub
sbbl
test
cmp
mov
mov
jb
in
and
add
pushf
or
adc
outsb
sub
jnp
pop
mov
xchg
sub
fstl
or
pushl
stos
int
test
int3
inc
adc
adc
push
sbb
jle
addl
bound
mov
andb
add
add
sbb
and
popf
adc
shlb
sbb
aaa
or
sub
leave
nop
pop
dec
es
adc
add
rcll
aas
add
add
hlt
inc
add
add
or
sub
push
xchg
and
inc
loopne
frstor
in
push
and
sar
les
mov
mov
mov
ret
or
adc
sbb
stos
loope
or
fwait
loope
add
add
dec
loopne
int3
out
rol
xor
andb
rorl
rclb
or
nop
jne
mov
adc
fcoml
or
xchg
pop
or
add
inc
xchg
inc
icebp
pop
jne
lea
add
xor
xchg
popf
xor
push
out
jmp
pop
cmpsb
mov
dec
test
lock
fsubrs
sbb
xor
add
cmpsl
in
pop
jp
inc
inc
outsl
inc
push
jl
orl
cli
inc
push
mov
mov
pop
pusha
mov
dec
aaa
lock
fadd
mov
push
xchg
fistl
adc
or
leave
adc
adc
icebp
cld
jne
dec
pop
aad
call
xor
pminsw
jbe
pop
sbb
clc
xchg
int
cs
jp
sbb
insb
pusha
add
or
mov
jecxz
pop
test
hlt
inc
ja
push
xor
and
and
dec
push
or
std
lods
ja
inc
mov
loopne
stos
sbb
aam
sbb
fldt
lock
clc
lret
and
push
adc
pop
ret
orb
jbe
sbb
push
popa
cmp
ds
stos
cmp
jne
add
mov
mov
rol
popa
xchg
add
lcall
fstps
or
pop
push
add
xlat
cmp
dec
lock
fildl
fildl
dec
push
xor
fs
lds
addl
rcl
mov
mov
mov
pusha
js
and
cmp
add
and
xlat
add
pushf
adc
adc
pop
pop
xor
dec
pop
mov
cmp
fwait
push
shll
pop
lods
add
or
or
push
imul
mov
or
mov
xchg
add
call
lea
add
xor
push
xchg
clc
lea
ret
push
ret
iret
adc
and
xor
int3
cli
shl
add
roll
adc
adc
loopne
jmp
inc
adc
add
lods
jle
mov
sub
mov
add
mov
pop
mov
sbb
xor
in
orb
or
out
mov
mov
inc
jno
dec
nop
adc
loop
pop
lcall
call
iret
dec
pushl
add
data16
sbb
loopne
les
nop
add
jae
push
push
and
lock
out
push
fldl
push
sbb
dec
arpl
xchg
clc
sti
fstpl
and
mov
ffree
inc
std
lods
push
hlt
decb
mov
mov
pop
or
adc
add
and
loope
fsubrp
pop
stc
push
fadds
or
flds
mov
push
repnz
icebp
fdivl
leave
jmp
ret
xchg
pushf
sub
scas
rolb
in
cmp
mov
jp
mov
inc
cmpsl
dec
pop
negb
xchg
clc
and
push
mov
inc
adc
ss
mov
and
inc
insl
scas
sub
add
mov
dec
or
shrl
ljmp
roll
out
mov
fidivs
lock
add
pop
add
inc
pop
xor
insl
ret
les
xor
jecxz
dec
enter
push
dec
pop
add
jnp
ja
loopne
repnz
and
mov
mov
and
xchg
test
enter
and
aaa
cmp
push
mov
mov
andl
push
sub
mov
jnp
ficomps
add
add
dec
xchg
mov
clc
xchg
orb
push
sarb
movsb
mov
sbb
leave
shld
add
jg
je
sbb
lea
push
push
sbb
add
push
je
inc
adc
cli
idiv
mov
or
push
mov
push
adc
push
push
push
add
rorb
lahf
xor
sbb
or
cmp
push
jne
push
pushf
add
pop
pop
ror
or
and
or
test
int
xor
xor
dec
push
mov
push
mov
shlb
push
das
inc
fsubs
pop
push
and
ja
jno
fiaddl
adc
sub
mov
xor
xchg
lcall
test
cmpw
jne
jp
cmp
inc
cld
cmp
cmp
aaa
jmp
push
push
jl
mov
push
fldt
add
sti
jg
stc
std
loopne
sbb
ja
sbb
lock
shr
data16
push
push
push
cmp
push
push
push
pop
in
loope
sub
hlt
ret
and
xchg
xchg
mov
stc
leave
js
mov
or
pop
outsb
adc
add
adc
xor
mov
adc
inc
adc
sub
adc
mov
adc
add
arpl
pop
sub
lock
add
push
ret
cli
push
mov
jnp
push
iret
push
jg
push
mov
mov
in
das
push
mov
dec
jns
push
sub
push
add
ljmp
enter
sti
push
sub
sbb
mov
lea
or
jg
push
lret
adc
sbb
xlat
add
pushf
rcr
sub
fmuls
jae
movsb
std
lret
nop
loope
fdivs
repz
in
xor
cmp
js
jb
pusha
sub
pushf
cmp
push
pop
xchg
gs
int
sub
sbbl
sub
push
jl
lds
jnp
fs
lret
leave
push
orb
add
mov
pop
xlat
or
jmp
stos
sti
dec
push
rorl
cmp
add
mov
cwtl
push
xchg
dec
pop
sbb
pop
je
arpl
lds
ds
fwait
pop
ret
pop
add
leave
adc
cmpb
dec
sub
mov
push
inc
fildl
sbb
pop
or
add
xor
rorb
fwait
mov
insb
cmp
out
sub
mov
inc
imul
or
and
add
mov
pushf
or
push
adc
bound
outsb
pop
and
add
insl
cmp
xchg
xor
add
add
mov
jmp
into
push
int
cmp
pop
mov
rolb
push
add
jl
jge
mov
scas
insl
adc
mov
fbld
pop
adc
adc
pop
mov
or
mov
loopne
mov
shll
movsb
ret
gs
stc
es
rclb
ja
xchg
pusha
cmpsb
mov
jbe
ret
insl
xchg
or
sbb
movsl
mov
mov
dec
jge
ljmp
icebp
and
xor
fisttpll
add
mov
fs
and
outsl
lcall
ss
je
add
sbb
dec
jne
push
and
or
sbb
adc
xchg
or
add
sub
push
push
sarl
or
mov
push
scas
push
sub
loopne
lea
fldt
adc
mov
inc
mov
and
in
xor
push
push
push
jb
jo
mov
and
jl
push
cmp
nop
inc
jl
loopne
enter
jge
sub
int
push
pop
push
pop
out
inc
in
arpl
push
push
and
cmp
or
and
xchg
cmp
addb
loopne
jb
mov
jg
adc
and
nop
xchg
fsubr
add
cmp
push
in
cwtl
enter
mov
push
mov
cmp
loope
xlat
fs
loope
jmp
jmp
jns
out
adc
jns
cmp
pop
orl
mov
jns
out
rcr
out
iret
repz
sti
add
sub
aaa
inc
dec
push
pop
repnz
repz
loope
xchg
xchg
sbb
xor
lods
push
mov
add
cmc
int
fsubr
push
mov
mov
inc
arpl
push
mov
test
fcompl
adc
test
xchg
je
jge
add
and
cmp
bound
andb
sti
test
movsb
mov
xchg
fwait
jmp
jl
mov
sub
add
mov
inc
mov
push
std
aam
es
push
add
out
fcompl
cmp
cmp
pop
xchg
cmp
fmull
mov
jmp
mov
faddl
xor
adc
push
xchg
push
sbb
int3
loope
sbb
jl
imull
dec
mov
popa
movsl
adc
dec
cmp
add
inc
sbb
xor
adc
dec
mov
xor
push
and
sahf
cmpb
jge
idivb
es
push
cmp
push
and
lock
add
pusha
movsl
idivl
cmpsl
scas
sahf
fbld
imul
rcll
cmpsl
jg
inc
xchg
inc
mov
enter
nop
rcr
xchg
mov
ret
cmpxchg
jns
or
push
push
mov
or
xchg
test
loope
sbb
orb
pop
test
sub
adc
shrb
pop
xchg
ret
and
sar
or
sub
xchg
dec
call
sub
rcll
add
adc
or
push
sbb
mov
push
movb
scas
xchg
mov
mov
test
int3
cmpsb
sti
xor
or
add
fidivrs
or
xchg
jae
insb
sub
pop
movsl
mov
add
arpl
push
inc
mov
dec
adc
sbb
ja
push
or
lea
or
mov
sbb
loop
cli
or
test
ret
mov
movsb
lea
sbb
mov
mov
int3
sub
pop
lods
movsb
js
dec
add
les
adc
loop
mov
mov
xor
push
mov
mov
jb
push
push
outsl
or
sub
add
dec
sti
popa
ljmp
push
rcl
mov
and
mov
jle
sbb
cs
push
cwtl
nop
scas
sub
adc
fwait
nop
pushaw
jp
mov
xor
mov
inc
xor
mov
push
jle
sbb
xor
pop
mov
sbb
pop
rcrb
xor
das
pop
rcrb
jo,pn
lcall
sbb
sub
movsb
call
push
subb
mov
mov
cmp
test
jl
mov
add
adc
xchg
lret
cmp
push
insb
xlat
movsb
inc
loop
aas
mov
mov
jl
jne
cmp
xchg
adc
lds
dec
and
ret
mov
in
jbe
int
sahf
sbb
ljmp
cmp
mov
imul
mov
sub
lods
jl
gs
add
int3
pop
inc
es
sbb
sbb
xchg
push
mov
xorl
dec
pop
dec
inc
xchg
jns
dec
mov
xor
add
sub
sbb
and
fistpl
dec
adc
lahf
sub
repnz
xor
mov
or
or
bound
mov
pop
pop
movb
mov
mov
call
adc
in
gs
cmp
insb
push
xchg
or
pop
sub
enter
xchg
cmp
sbb
mov
cld
test
cmp
inc
push
push
rorl
pop
push
hlt
or
int3
cmp
add
int3
cmp
jmp
rcl
or
sahf
nop
scas
mov
push
mov
dec
sbb
cmpsl
or
stos
fwait
sub
and
or
add
mov
cmp
and
or
inc
push
adc
daa
cmp
xchg
push
jmp
in
push
inc
cmp
mov
inc
push
push
xor
negl
inc
sub
addl
lahf
fiaddl
dec
imul
jno
lcall
shlb
adc
pop
mov
and
inc
push
cld
mov
adc
sti
xlat
test
jmp
push
sub
loop
or
je
stos
stc
nop
cwtl
mov
loop
sbb
xchg
popf
pop
dec
cs
shrb
pop
adc
add
cs
or
jne
in
and
push
daa
lock
or
jle
push
mov
subl
ret
fiaddl
jl
jmp
ret
movsl
lahf
in
add
test
sub
test
mov
and
pmuludq
add
dec
roll
inc
jmp
or
mov
cmc
jnp
lock
pop
sbb
mov
or
in
jge
cmp
xchg
ficompl
jae
fidivl
mov
push
and
xor
in
les
push
stc
inc
call
cmpsb
fldenv
xor
mov
add
pop
jmp
push
xchg
insb
sbb
push
in
push
sub
jbe
and
mov
outsb
iret
mov
cmp
mov
daa
call
jo
rorl
fmulp
or
arpl
pop
pop
sub
in
in
pop
nop
push
call
mov
movsb
mov
adc
adc
xor
test
xor
lock
add
or
adc
push
push
cltd
adc
inc
push
push
or
loopne
rol
pop
mov
insb
dec
int3
imul
ds
int
not
dec
enter
fsubrs
sbb
pop
lods
sbb
test
enter
or
enter
sbb
jae
mov
shlb
pop
jl
lahf
mov
or
mov
xor
xor
inc
and
adc
mov
xchg
es
mov
and
in
inc
sbb
mov
cltd
or
sbb
push
or
xchg
inc
sbb
nop
pop
push
mov
mov
les
mov
jae
mov
orl
add
pushf
xchg
mov
test
ficoml
loope
and
dec
dec
jae
je
insb
int
xor
or
in
andb
fwait
call
andb
inc
add
das
mov
push
inc
popl
mov
xor
sbb
or
clc
cmpb
inc
xor
add
push
sub
mov
js
add
loop
cltd
jecxz
cmove
inc
jecxz
push
jb
icebp
js
add
jo
out
xchg
push
jle
mov
dec
in
sarl
loope
dec
add
nop
pop
xlat
adc
ret
dec
mov
mov
mov
test
lods
add
jecxz
rcl
mov
mov
fsub
or
xchg
je
out
fcom
or
jo,pt
loope
inc
adc
je,pn
or
xor
push
xor
lcall
in
orb
mov
or
and
test
dec
js
or
icebp
push
xchg
push
mov
jne
jnp
sbb
test
pusha
lods
sub
push
pushf
in
xorb
sbb
fdivrl
xchg
add
xor
jbe
inc
push
outsl
fwait
and
cltd
mov
sbb
adc
mov
jmp
push
pushf
inc
pop
sub
cmp
pop
inc
jmp
sub
dec
or
iret
movsb
or
sub
sbb
xchg
fiadds
pusha
sbb
pushl
clc
push
add
push
sbb
mov
xchg
cltd
es
and
mov
ret
cwtl
nop
imul
nop
pop
mov
sub
and
mov
mov
and
ret
and
orl
and
push
ficoml
and
jl
imul
cmp
idiv
ficompl
push
pop
popa
leave
movsl
mov
mov
push
in
sub
mov
subl
or
pop
lods
pop
lcall
inc
sub
test
fcomps
insl
sub
rorl
lea
mov
fcoms
dec
xlat
andb
test
rorb
add
dec
flds
insb
mov
lock
push
shrb
cs
out
push
fdiv
xor
dec
or
pop
popf
das
not
fwait
nop
out
icebp
inc
movsb
sub
dec
dec
sub
sub
int
xor
sub
push
sub
fs
and
adc
jl
pop
dec
xor
int
je
test
adc
dec
and
int
push
nop
sbb
mov
adcb
js
and
les
aam
inc
lcall
adcb
scas
and
movsl
lock
add
shlb
call
push
jp
dec
pop
les
jns
fs
pop
sbb
popa
add
sahf
cs
sub
and
sub
push
xor
fdivrs
push
ljmp
push
enter
fistpll
sbb
xchg
out
xchg
dec
push
push
out
pusha
ret
pop
jecxz
shrb
repnz
pop
sub
adc
aam
pop
add
shrb
mov
jge
in
mov
adc
imul
and
lods
or
push
lahf
jne
enter
in
mov
cs
testb
jmp
adc
stc
pusha
dec
sub
fsubrs
ss
pop
xchg
mov
xchg
add
pop
sub
movsb
cmp
outsl
add
or
ljmp
push
mov
ss
or
mov
daa
lea
cmp
cs
adc
and
mov
cmp
inc
add
add
add
pusha
enter
rclb
popf
add
mov
sahf
sbb
or
scas
cltd
jo
lods
mov
lods
shr
dec
imul
pop
mov
outsb
xlat
mov
pop
jg
pop
cmp
jbe
mov
mov
sub
pop
adc
jmp
jmp
in
add
mov
aam
outsb
add
pop
sub
scas
add
jmp
dec
ds
inc
adc
leave
scas
ss
inc
xor
repnz
sbb
cmp
adc
sbb
cmp
cmp
adc
add
pusha
ljmp
hlt
loope
push
jbe
or
flds
jb
mov
jg
dec
lret
lahf
sub
add
test
mov
sub
pop
add
leave
jo
mov
pop
out
movsb
bound
jle
ficoms
cmp
shlb
jbe
mov
xchg
cmp
jne
inc
adc
jb
jl
and
inc
cld
lods
ret
mov
test
push
or
iret
jne
mov
mov
add
cmp
bound
fcmovnbe
jae
inc
adc
lods
inc
push
and
je
mov
dec
rcl
adc
xorb
jmp
mov
fwait
mov
inc
mov
xchg
add
sub
fnstsw
mov
sbb
mov
mov
inc
clc
inc
call
jnp
addl
push
mov
cmc
in
addb
loope
xchg
pushf
xlat
aad
dec
or
dec
or
leave
imul
mov
push
sbb
fwait
roll
ljmp
mov
pop
mov
push
cmpsl
jne
ds
xchg
inc
jmp
icebp
or
inc
sbb
sbb
push
sbb
sbb
sbb
add
inc
popf
imul
adc
lea
sbb
cmpsb
sbb
and
and
fwait
or
outsb
loope
pop
xchg
mov
xor
adc
add
test
shrb
add
cmp
jmp
cmp
jl
or
je
cmp
icebp
decl
movzbl
movb
movsbl
shr
mov
mov
and
mov
nop
inc
mov
leave
jne
jae
mov
pop
mulb
lret
push
scas
xor
test
pop
sbb
int3
aam
bound
mov
orl
mov
outsl
sub
fxtract
fidivs
sbb
inc
ja
mov
mov
cmp
adc
push
and
lods
rorl
cltd
push
test
add
test
and
push
xor
add
push
arpl
lcall
imul
jo
xchg
incb
xchg
and
cmp
es
dec
and
lods
dec
ret
jg
add
in
push
mov
nop
xchg
ret
inc
cmc
shrb
pop
popl
into
lret
nop
xor
aad
call
test
xchg
test
notl
pop
test
aaa
daa
cwtl
sub
pusha
push
std
push
push
push
mov
and
into
dec
jl
jp
fisubs
lock
mov
pop
add
add
jp
stos
xchg
add
and
stos
pop
sbb
and
aam
popa
pop
iret
inc
pushl
push
data16
cmpsb
push
ja
xchg
ficomps
testb
mov
notl
push
add
out
and
dec
pushf
push
fwait
sbb
adc
add
jecxz
in
xchg
add
ljmp
dec
sub
xchg
add
mov
or
push
leave
and
aad
jl
popf
mov
inc
pusha
enter
add
mov
add
sub
push
jle
imul
add
into
mov
ret
pop
sbb
cli
popf
lock
pop
pusha
in
out
or
and
loopne
mov
or
movsb
push
dec
lret
ret
es
idivl
pop
mov
mov
mov
leave
and
jmp
cmp
cmp
add
or
push
call
and
dec
push
inc
adc
loop
aas
pop
leave
push
adc
lea
pusha
add
cmp
mov
dec
jae
andb
add
xchg
rorb
sub
and
andl
xchg
push
test
push
fimuls
and
leave
bound
sub
adc
or
outsl
xchg
mov
cmp
sbb
stos
mov
push
dec
or
push
pop
testb
dec
or
mov
dec
dec
jl
cmp
test
mov
add
mov
lods
lock
pause
sbb
ret
push
mov
xlat
push
fs
push
fwait
mov
add
ficomps
mov
fnsave
add
daa
or
subl
mov
dec
or
mov
lret
cmp
mov
repnz
xchg
gs
call
out
rcl
inc
clc
ds
fistps
aaa
jb
sbb
inc
jle
jle
mov
jne
inc
adc
sub
outsb
lods
add
cltd
mov
jl
or
cs
addb
add
loopne
gs
lods
dec
faddl
push
and
sbb
adc
mov
sub
or
mov
lods
hlt
push
inc
sbb
pop
ret
adc
mov
faddl
pusha
and
add
push
adc
jno
movsl
jnp
pusha
sub
js
loopne
insb
enter
cmp
ficompl
lea
cmpsb
icebp
adc
imul
xchg
cmp
xchg
outsb
add
or
push
or
or
sub
or
ret
sub
xor
adc
sti
sbb
test
and
push
add
fisubrs
or
add
dec
hlt
cmp
jmp
or
sbb
and
jne
pusha
mov
jmp
push
or
adc
add
xchg
fwait
sarb
mov
xor
cmpsl
je
stos
mov
mov
movsb
outsl
test
lock
adc
dec
pop
cmp
notl
dec
fadds
lea
xor
xor
nop
inc
push
cmp
je
push
les
shr
les
roll
dec
sbb
xor
mov
xlat
fsubs
mov
inc
xor
cmpsl
movsb
inc
in
sbb
xchg
mov
jae
imul
xchg
inc
or
push
xchg
xor
pushf
out
test
add
je
in
cmpsl
in
inc
aad
adc
lret
pop
or
jl
ljmp
push
xor
jne
je
inc
push
add
aam
sarb
cld
imul
add
test
mov
fmul
testl
inc
add
shll
push
pop
or
mov
cmpsb
negb
mov
sub
and
inc
lods
push
enter
and
divb
mov
sub
ds
shrb
aam
lea
push
cmp
inc
jne
dec
jns
mov
in
pop
pop
or
pop
imull
add
adc
xor
mov
mov
imul
or
les
addr16
mov
push
mov
xchg
dec
xor
divl
aas
sbb
mov
xor
lods
cmp
in
addb
addb
scas
gs
jge
lea
arpl
jns
dec
enter
outsl
das
mov
push
sahf
fcoml
es
sbb
dec
dec
sahf
in
cmp
test
jne
es
loopne
mov
jne
jno
mov
mov
inc
sbb
and
clc
mov
add
add
dec
fisttpl
inc
rcrb
and
mov
and
idivl
push
in
sub
push
push
call
sbb
sbb
jge
sub
sbb
or
mov
insb
inc
ss
sbb
or
push
sbb
push
dec
ret
or
cli
outsb
mov
js
push
cmp
dec
sbb
cmp
jle
test
inc
add
mov
mov
cmpsb
push
icebp
pop
adc
inc
or
movsl
push
lds
notb
movsb
jecxz
ljmp
add
inc
mov
ret
out
jl
pop
out
and
inc
pop
inc
pop
ret
xchg
push
test
pop
xchg
xchg
xor
enter
xor
cmp
add
xchg
mov
and
inc
cmp
stc
insl
fcomi
inc
data16
cmp
adc
jne
jns
daa
bnd
adc
hlt
jne
or
out
divb
or
push
mov
mov
pusha
sub
js
pop
insb
in
dec
jb
push
aad
clc
push
add
inc
sbb
add
jp
out
addr16
dec
dec
in
outsb
sbb
scas
xchg
lods
les
add
push
jl
mov
lea
lea
lea
cmc
lea
lcall
imul
lds
fcoml
dec
or
add
mov
cmp
sub
mov
push
sbb
ds
dec
pop
mov
jmp
aad
int3
sub
lea
sarb
fdivrl
fdivrs
adc
adc
push
sub
mov
xor
sub
fcom
loopne
rol
adc
lret
adc
adc
mov
add
jns
gs
cmp
jmp
cmp
or
shll
cmpl
movsl
ficoms
inc
loopne
or
xchg
sbbl
push
xchg
insl
mov
ss
cld
call
and
orl
in
sbb
pusha
pusha
daa
int
sub
xchg
test
xchg
pushw
inc
xchg
fs
nop
xchg
fs
push
jne
pop
enter
into
xor
xor
test
fiaddl
ret
xlat
jge
cmp
mov
fidivs
mov
xchg
push
xchg
loope
or
sub
insl
push
call
out
mov
stos
mov
mov
jbe
call
je
add
rorb
int3
or
es
daa
test
inc
subl
mull
test
les
fbld
xchg
dec
push
add
cmp
fildl
ja
dec
and
sub
add
enter
push
or
mov
pop
xor
mov
push
mov
jmp
fstp
xor
cmpsb
hlt
pop
mov
in
xchg
pop
fwait
or
and
loopne
gs
xchg
xchg
push
add
push
scas
mov
ret
rcrl
xchg
loopne
mov
push
cs
jnp
insl
dec
test
push
insb
xor
push
mov
popa
mov
dec
fwait
push
sub
scas
mov
or
push
pop
jle
add
mov
pop
pop
mov
pop
push
xchg
pusha
sbb
jle
or
call
sbbl
push
mov
out
pop
adc
xor
pop
test
out
cs
hlt
mov
sti
push
xor
cmp
inc
adc
sbb
cmp
and
and
push
adc
cmp
adcl
inc
enter
adc
arpl
xor
sub
pop
xor
xor
dec
adc
lcall
and
pop
daa
xor
sbb
inc
cmp
push
or
test
bound
out
sahf
inc
and
sti
jg
dec
pop
movb
xor
pop
rolb
jne
add
repz
pop
inc
sub
xor
lcall
pop
dec
pop
and
test
in
dec
popl
cmp
sub
mov
inc
mov
andl
pusha
jno
aaa
push
xor
push
je
xor
add
xor
imull
xchg
mov
cmp
xchg
xchg
ljmp
sti
aam
mov
push
inc
mov
pop
xor
adc
mov
js
dec
mov
jg
ljmp
push
xchg
pop
lea
push
aam
xor
xor
sbb
fsubrl
rcr
shlb
ss
fsubl
lock
test
dec
imul
jne
movsb
test
outsb
jbe
in
test
leave
mov
add
push
lods
movsl
inc
inc
sub
ret
lret
loopne
or
xchg
insb
loopw
hlt
hlt
rclb
popf
cmp
pop
test
les
shrb
stos
jnp
mov
ret
xor
je
popf
add
or
in
call
cwtl
add
xorl
sub
sbb
pop
mov
mov
addl
enter
shl
test
jge
pop
jae
lea
jge
jecxz
mov
pop
inc
inc
pop
pop
push
lock
data16
sub
dec
pop
inc
std
xor
pop
sbb
imul
popa
sbb
mov
notl
xchg
mov
sub
dec
cmp
fmull
call
mov
sub
mov
and
pcmpeqd
sub
xlat
jnp
push
mov
sub
xorl
imul
loop
leave
fadd
add
in
sub
or
dec
aaa
push
mov
jnp
fs
add
or
mov
je
cs
push
push
add
inc
icebp
aas
inc
cmpsl
or
push
jne
pop
stos
mov
cmp
out
or
es
jne
mov
imul
push
ljmp
xor
adc
adc
out
and
inc
and
subl
adc
xor
push
insb
rcll
and
xchg
jnp
adc
adc
lret
ret
cmp
cltd
bound
fdiv
mov
xor
or
in
orb
aad
loopne
sbb
sbb
stos
clc
inc
add
inc
pop
dec
sarb
cld
pop
push
stos
jge
dec
and
and
data16
jle
rcrb
pop
add
mov
mov
cmc
xorl
adc
andb
inc
pop
shrb
or
popf
add
inc
jecxz
adc
mov
into
and
sbb
push
lds
pop
xchg
pop
call
push
das
mov
je
sub
dec
xchg
inc
call
add
xor
lcall
adc
jb
js
outsl
jne
repz
cmpsb
cmp
add
jmp
mov
in
sahf
repz
push
fisttps
sbb
repz
je
nopl
shrl
mov
and
push
stc
pop
cmpsb
movsl
addb
mov
lahf
pop
sbb
push
mov
lea
mov
push
shll
rcrb
sbb
addr16
adc
shlb
mov
push
dec
gs
mov
daa
inc
inc
xchg
mov
in
aad
inc
xchg
adc
xchg
popa
shrb
flds
test
scas
add
add
mov
roll
stos
sub
or
or
xor
hlt
aas
mul
pop
jb
ljmp
test
pop
lock
dec
push
add
or
jb
adc
and
jl
insl
adcb
mov
je
movsl
nop
fs
cmpsb
ja
or
pop
test
cmp
xor
cmp
je
pop
idivb
dec
or
jb
rolb
sbb
dec
clc
inc
outsb
sete
sahf
push
clc
clc
sar
jb
stos
push
cmpb
mov
lret
adc
add
or
hlt
jae
movsbl
sbb
inc
mov
jmp
sbb
or
mov
cmp
mov
enter
xor
lea
and
dec
inc
jmp
ljmp
mov
dec
jmp
shl
or
add
inc
cmp
jl
cmpl
dec
arpl
pop
add
cltd
and
add
shrl
dec
call
jo
xlat
sub
clc
xor
mov
shlb
jecxz
sbb
inc
jne
stos
aas
loope
enter
adc
or
mov
sbb
pop
pop
sahf
cvtps2pd
pop
cltd
pushf
mov
pop
push
mov
sub
mov
cmp
sub
ret
or
orb
rolb
roll
scas
adcb
push
outsb
dec
lods
pop
and
and
pminsw
or
jle
insb
aas
lods
test
mov
ss
xchg
fistpll
push
xchg
cli
js
inc
mov
andl
cli
movb
jne
and
inc
arpl
inc
or
shl
sbb
jge
out
add
or
invlpg
adc
icebp
cs
int3
mov
and
adc
or
sub
inc
ficompl
dec
inc
push
pop
inc
fidivl
xor
in
push
xor
cmpsb
notb
mov
iret
or
jne
sbb
nop
aaa
and
add
testl
sbb
sub
and
mov
or
add
nop
je
add
test
and
jecxz
ja
pop
popf
pop
push
stos
lock
loopne
sahf
xchg
add
ljmp
ss
cmp
out
fsubrs
addr16
outsb
pop
mov
stc
jle
daa
lock
push
dec
dec
push
add
push
push
push
test
pop
jnp
dec
add
push
inc
cmp
dec
mov
sbb
shlb
lods
cmpsl
cs
pop
pop
jle
js
bound
dec
add
adc
jne
push
push
int3
pop
mov
pop
mov
lret
push
insb
add
add
lret
clc
lea
stos
int3
xor
or
cmpl
push
sbb
cmp
xor
imul
add
or
ret
or
stos
je
push
pushl
inc
iret
push
lahf
popf
fdivrl
push
cmp
lea
dec
pop
mov
mov
fsubs
jge
orb
shrl
repnz
cmp
daa
or
add
dec
cli
mov
rorl
dec
or
test
das
push
jmp
and
dec
and
dec
cmp
orl
cmp
jecxz
movsl
cmpsl
jbe
jl
add
mov
jmp
fwait
pushf
cwtl
push
cmpsb
jmp
jp
out
add
mov
and
lock
and
mov
shr
cmp
mov
insb
adc
mov
sbb
xchg
imul
jno
subl
pop
aam
cmp
sbb
mov
mov
xorb
push
lds
xor
or
mov
jle
aaa
mov
aaa
je
adc
push
xor
cmp
test
cmp
mov
add
lret
in
sbb
add
mov
sbb
mov
cmp
lcall
adc
mov
mov
fisttps
and
repz
je
dec
fdivr
jp
cmp
adc
add
out
das
add
mov
pusha
imul
sti
sub
or
cmpsl
les
push
fidivl
xchg
mov
or
inc
add
push
mov
mov
jecxz
outsl
xchg
xor
aam
add
jmp
out
mov
pop
enter
fcoms
test
push
or
aam
xchg
and
mov
mov
push
lods
mov
fdivrl
pop
jge
sub
cmp
and
push
sbb
sbb
movsbl
fwait
rorb
add
add
sub
ss
decl
ret
jmp
mov
out
test
pop
cli
dec
push
mov
leave
sbb
and
push
lret
movb
outsb
cmpl
jbe
or
add
add
shrb
and
mov
cmp
adc
sbb
dec
rcr
imul
fstl
push
roll
outsb
mov
or
mov
popf
shlb
loope
setg
clc
mov
pop
sub
jne
scas
xchg
psubb
inc
xor
lock
sbb
iret
nop
pop
insl
jge
xorl
cltd
pusha
sbb
add
add
add
sub
in
adc
mov
inc
add
mov
rcrl
sbb
lock
je
bound
sbb
cmp
mov
mov
jle
xchg
mov
mov
clc
pop
mov
jl
ljmp
push
add
das
xchg
inc
dec
pop
nop
jno
or
lods
pop
lret
inc
cmp
add
mov
pop
push
dec
mov
stos
es
fmull
xor
jecxz
testb
mov
mov
inc
mov
mov
cmp
jl
lahf
sub
addl
pop
adc
not
clc
jle
sub
push
icebp
or
orb
imul
fisttps
mov
pop
or
mov
fisubl
add
and
icebp
mov
cld
push
leave
push
xor
mov
inc
ds
fs
adc
pop
out
mov
fwait
jb
xchg
mov
in
sbbb
sub
mov
insb
into
push
dec
aas
enter
add
sbb
mov
xor
push
mov
cmp
sbb
leave
movsl
pusha
in
in
pushf
nop
dec
in
mov
xor
lret
and
lret
sub
sub
adcb
and
inc
sahf
mov
cmp
inc
pop
sti
inc
push
enter
adc
mov
ja
movsl
jne
lahf
lret
xor
ds
scas
and
lods
xlat
adc
xchg
popa
leave
inc
pop
lods
imul
js
add
push
jo
xor
cmp
or
mov
nop
mov
and
adc
add
lock
or
and
fadds
mov
push
mov
adc
dec
pop
clc
jp
in
mov
push
mov
mov
sub
add
or
ror
je
dec
mov
mov
lahf
shrb
sub
ss
lea
cmp
jbe
cmp
jbe
stos
dec
mov
cmp
jbe
in
mov
mov
imul
adc
insl
cmp
ret
in
pop
das
push
fstps
dec
add
mov
cmp
inc
dec
xor
stos
pop
sub
push
loopne
adc
adc
push
push
cmpl
popa
imul
daa
push
fnstcw
jmp
addr16
rcll
push
cmp
cmpsb
or
cmpxchg
and
mov
sbb
add
push
mov
hlt
jmp
pop
ret
and
mov
sub
and
fsts
jne
fstps
mov
or
xchg
mov
popf
outsl
or
push
fldt
mov
call
jns
sti
lea
mov
lcall
or
sub
pushf
pusha
adc
push
cltd
add
or
jbe
mov
mov
mov
or
add
push
in
mov
sbb
in
into
push
jnp
sbb
imul
push
jne
loope
mov
sti
fcomps
cmpsl
lock
test
mov
dec
das
push
add
or
lods
push
xchg
fcomps
pop
sti
mov
mov
xchg
data16
or
cmp
sbb
and
jp
insb
pop
loope
add
add
and
or
sub
mov
jecxz
mov
and
jecxz
dec
mov
xlat
loopne
out
test
xchg
xchg
insl
push
inc
enter
iret
sbbb
mov
je
or
jle
insb
and
xor
inc
movsl
adc
add
adc
in
out
sub
mov
push
adcl
cmp
sbb
mov
adc
cltd
repnz
push
loopne
mov
xchg
sti
push
push
js
sti
dec
cmpl
lods
ret
roll
test
test
push
jo
call
pop
adc
fwait
adc
aam
jne
xchg
shrb
xchg
sbbb
jmp
shlb
in
or
add
mov
sbb
push
je
mov
cmovae
mov
mov
cmp
ret
cmp
sub
mov
jbe
cld
sbb
lret
maxps
repz
mov
mov
out
sbbb
mov
cld
adc
dec
fwait
movl
and
in
aas
push
push
and
cmp
xchg
mov
cli
add
jne
sbb
jmp
mov
cmp
std
xchg
jmp
sub
adc
cmpsl
int3
shrb
xor
pusha
ja
or
push
pop
je
cmpb
pop
test
mov
dec
in
nop
dec
mov
movsl
aam
push
pop
cmp
or
outsb
dec
dec
xor
or
pop
pop
add
flds
add
dec
lea
pop
push
or
divl
out
int3
or
add
lret
pop
dec
adc
xchg
xlat
gs
scas
pop
mov
cld
inc
incl
fistl
je
mov
incb
cmp
call
ret
stos
int3
shl
push
jmp
push
adc
test
add
call
iret
xor
xor
push
push
or
mov
pop
mov
push
lods
sbb
lahf
imul
jle
into
mov
push
pushl
rclb
xor
jne
cmp
jbe
add
mov
jmp
push
pop
push
sbb
jmp
fldcw
idivl
mov
in
call
es
cmpsl
or
push
out
xchg
xor
clc
test
in
jne
mov
jp
loopne
shrb
gs
inc
negb
fcomps
inc
pop
leave
xchg
or
movsl
out
mov
mov
int
rclb
mov
push
xor
cmp
xchg
push
scas
lea
push
cmp
sbb
lods
pop
ss
adc
push
call
cmp
sbb
fs
adcb
xchg
pop
in
add
mov
xchg
ret
jmp
xor
or
pop
sbb
and
fwait
xchg
inc
sub
testl
sbbb
or
stos
cmp
mov
xor
aad
aas
xor
add
mov
xchg
loope
add
mov
test
ret
fisttpl
dec
loop
repz
in
jmp
dec
cmp
push
fs
sarl
dec
and
cmp
mov
dec
pusha
test
xchg
lock
jl
sti
fwait
repnz
xor
dec
sub
add
add
js
push
add
loope
daa
mov
shlb
add
xchg
stc
loopne
jge
lret
ret
shlb
test
pop
popa
cmp
jmp
cmp
cmp
into
adc
xor
sub
mov
orb
push
and
push
mov
dec
push
xor
test
mov
inc
lcall
mov
sbb
ds
aas
lods
das
sub
xchg
jae
test
rcll
lea
pusha
and
push
xchg
or
nop
or
inc
mov
inc
adc
jle
or
andl
ret
loopne
movsl
jae
shrl
sbb
in
add
enter
sub
or
or
popa
and
lods
les
cltd
loope
sbbb
xchg
cmp
inc
ja
add
mov
add
repnz
mov
push
mov
negb
dec
cmp
push
and
inc
nop
popf
jg
cld
jg
push
xor
push
push
test
inc
push
stos
inc
imul
iret
mov
mov
mov
pop
sbb
aam
adc
add
add
and
stc
pop
adc
adc
cwtl
adc
cwtl
loopne
les
lds
pop
xchg
sub
sbb
adc
push
sbb
add
sbb
jnp
mov
daa
icebp
lods
icebp
test
pop
or
or
jmp
cmp
push
dec
jnp
and
xchg
mov
test
mov
icebp
inc
js
xchg
sbb
jecxz
pop
inc
movsb
jge
in
ret
fidivs
cwtl
push
xor
mov
inc
pop
cs
ret
mov
cmpsl
mov
ja
scas
xchg
in
cwtl
iret
adc
push
sub
adc
lret
jge
mov
and
in
rorb
inc
mov
lock
or
pop
cmp
inc
andl
pop
popa
adc
xorl
sarl
adc
stc
pushl
jo
pop
popa
jg
push
ret
or
push
mov
jecxz
cli
popa
lahf
xchg
ret
fsubrl
and
fcompl
xor
xchg
add
mov
lods
movsb
sub
or
pusha
jno
jmp
add
lock
fldcw
push
ret
mov
cwtl
xchg
outsb
xlat
pop
adc
outsb
mov
lea
stos
pop
xor
iret
movsb
dec
outsb
lock
jmp
pop
cmp
xchg
mov
push
stos
or
jo
movsl
sbbl
iret
inc
push
push
fbstp
jb
cmp
adc
sbb
inc
aaa
popa
xor
ret
lods
push
xorl
pop
push
sbb
shlb
mov
aad
mov
push
inc
adc
add
mov
inc
push
inc
mov
je
push
cld
jp
lea
mov
mov
mov
in
push
push
filds
or
mov
cmp
addr16
je
cmp
test
mov
sbb
add
pop
out
aaa
xchg
mov
push
inc
mov
pop
dec
xor
fdivrs
cmp
sub
inc
adc
je
testl
jbe
sbb
cld
add
lea
shlb
loopne
pop
add
inc
cmp
je
sub
inc
jmp
inc
and
and
xor
shrb
push
outsl
cwtl
lcall
clc
mov
xchg
jo
cmp
jp
sbb
pop
lods
push
adc
into
jo
xchg
loopne
mov
test
add
in
inc
jl
punpcklbw
xor
cld
inc
pop
push
jl
mov
push
jne
push
sti
cmp
outsb
hlt
cmp
mov
cmp
bound
pop
les
lods
dec
or
rcr
arpl
mov
ja
in
sub
nop
stos
sub
mov
gs
jge
mov
add
inc
cld
shlb
sbb
pop
xchg
sbb
dec
pop
mov
fdivrl
jmp
loopne
jne
mov
inc
insl
dec
je
roll
sub
mov
mov
roll
pop
clc
inc
add
jae
movl
mov
shrb
shl
add
jmp
movsl
addr16
pushf
aas
insb
sti
and
cmpsb
and
adc
xchg
xchg
cmp
js
loopne
or
fs
jne
xor
lock
dec
push
mov
or
sub
aas
push
push
mov
jmp
dec
shlb
fildll
xor
sub
push
cmpsl
shll
adc
mov
push
add
or
int3
xor
in
stos
push
push
ror
inc
jg
or
mov
cmp
sub
mov
sub
jle
sub
and
pop
or
jl
ret
mov
pusha
bound
ljmp
aam
cmp
jbe
add
clc
mov
test
xchg
and
add
add
out
adc
je
test
jne
pop
inc
les
cld
jb
clc
test
cmp
add
push
xor
outsb
adc
xor
adc
movb
inc
test
mov
push
sub
ds
xchg
or
push
jns
inc
push
pop
data16
mov
inc
and
xchg
or
xchg
adc
mov
inc
loop
mov
mov
call
add
sbb
rol
lret
js
inc
push
lcall
jbe
clc
push
rolb
mov
fcomps
insl
out
cmp
mov
fwait
test
mov
adc
ja
mov
push
fcom
cwtl
pop
jge
ror
inc
add
dec
jmp
insl
loop
adc
ret
add
jmp
lret
jne
mov
imul
loopne
out
push
inc
sahf
mov
imul
ret
ret
cli
test
push
jo
inc
xchg
add
jg,pn
pop
push
clc
mov
in
cmp
aad
jbe
push
push
xchg
dec
xorb
popa
int
cli
jecxz
and
add
sbb
cmp
mov
sahf
inc
sbb
xchg
out
and
sbb
push
popf
test
mov
inc
and
mov
mov
imul
aas
cmp
loopne
repz
jne
push
xchg
xchg
cmp
or
mov
andl
addl
outsl
pop
ret
nop
out
cltd
aaa
jp
inc
popa
jb
imul
ficompl
cmp
xor
iret
ret
cmp
mov
inc
push
pop
push
mov
xchg
jl
push
adc
cli
lods
pop
mov
xor
push
lahf
mov
pop
push
add
or
ja
xor
push
mov
mov
jne
adc
sysret
cmp
add
sbb
xchg
ss
push
mov
push
pop
xchg
push
shrl
popf
int
add
xchg
jo
sbb
cmp
cmp
mov
cmp
outsb
or
out
push
fsubr
jae
pop
push
shl
aaa
xchg
cmpl
sub
cmp
pop
pop
subl
push
dec
lea
or
adc
sub
imul
inc
pop
mov
pop
xor
and
fisubrs
lcall
idiv
into
push
gs
add
inc
inc
rolb
add
pop
mov
cmp
getsec
mov
cmp
es
rclb
or
pop
mov
mov
push
movsl
push
das
fisubl
dec
add
mov
sbb
clc
pop
ficomps
or
je
test
dec
push
inc
inc
adcb
jmp
xor
push
fs
inc
xor
dec
adc
rcrb
shl
push
jmp
enter
mov
sbb
lods
inc
js
cld
pop
pop
or
adc
icebp
in
clc
mov
lods
mov
add
add
pusha
ret
shl
addl
inc
push
rorl
in
mov
iret
loopne
push
loop
inc
and
je
out
rorl
push
aaa
les
add
push
ficoms
add
pop
xchg
test
mov
repz
xor
mov
push
outsl
mov
mov
dec
fisttps
ret
or
sti
mov
sbb
pusha
jb
loopne
decl
cmp
adc
roll
ds
mov
jbe
push
adcl
inc
movb
lcall
jp
mov
xchg
jno
das
push
and
gs
and
call
jo
push
ljmp
or
mov
mov
xor
jno
sti
sub
and
fndisi(8087
mov
inc
inc
push
push
popf
test
xchg
jb
dec
pop
addl
add
jmp
xchg
add
scas
std
xor
mov
ret
push
roll
push
fstpl
es
insb
pop
frstor
pop
cmpsb
or
xchg
pop
mov
cmp
andb
xor
push
es
mov
sbbb
loop
out
and
cmp
push
cmp
lea
cmp
movsl
or
int3
push
orl
addr16
sub
ficomps
adc
movsl
clc
add
out
popf
and
testl
xor
ret
jne
xchg
cmpl
jne
cmp
lods
jo
pop
int3
push
push
lret
dec
aam
and
jne
sar
pusha
sub
ret
popa
xor
insl
jnp
das
xlat
shlb
add
das
js
js
cmpl
outsb
jae
cmp
in
andl
aas
mov
cmpsl
xor
sub
xchg
pop
or
xchg
add
adcb
jmp
bound
and
push
cmp
pop
jge
mov
sbb
inc
mov
add
xor
popf
jne
push
cmp
call
lock
rolb
subb
ficomps
lods
jno
mov
push
adcl
std
test
dec
fcmovb
pop
or
fcoml
loope
adc
sub
push
add
nop
inc
movsl
es
lea
mov
mov
xchg
pusha
cmp
mov
dec
mov
icebp
cmpsl
push
lods
fstsw
movsl
insl
cwtl
jl
fsubs
pusha
cmp
push
aas
je
push
sbb
cmp
push
pop
jne
aam
inc
cmp
shlb
or
mov
inc
pop
jne
pop
call
jl
incl
or
scas
insl
in
cs
xorl
and
push
xchg
cmp
sub
xor
test
mov
hlt
add
jmp
out
fldl
mov
sbb
cmp
and
in
pop
in
subl
mov
or
je
sti
lds
fs
jmp
pusha
mov
mov
sub
sarl
sbb
pop
daa
decl
cltd
or
xchg
mov
sub
xor
outsb
decb
adc
cmpl
pop
and
pop
sarb
mov
mov
pop
lock
sbb
pop
cs
pop
pop
fs
push
scas
or
inc
decb
add
subb
ret
ret
push
add
mov
ret
lahf
les
fadds
cmp
filds
or
or
push
mov
testb
adc
test
rclb
add
inc
push
mov
sbb
mov
pop
xchg
add
or
sbb
push
jno
xchg
imul
mov
pop
pop
pusha
pusha
jbe
fdivl
or
or
adc
js
adc
xchg
sub
addb
push
mov
data16
js
cld
outsb
xchg
and
mov
push
icebp
jge
shrb
adc
add
push
aas
jmp
push
rorl
lret
mov
mov
add
sbb
sub
movl
pop
insl
int3
adc
lea
int
sbb
sarb
movsb
ds
in
fdivr
push
push
mov
jbe
or
add
daa
mov
push
and
imul
inc
es
fistpl
push
fiaddl
ljmp
xchg
mov
sbb
loop
sub
inc
outsb
pop
cli
jp
push
pop
jmp
lea
stos
mov
adc
adc
or
popa
mov
mov
in
inc
sub
test
subl
pop
daa
nop
sbbb
push
and
mov
cld
mov
mov
lock
mov
pop
push
xor
sti
es
sti
paddusb
add
addr16
pop
push
mov
in
inc
jae
sub
jnp
sub
fcomp
rolb
test
cmpsl
xchg
inc
cmp
cmp
mov
rcl
cmp
fisttpl
daa
ljmp
cmp
adc
fwait
add
dec
add
dec
add
adc
dec
in
xor
pushl
inc
jbe
add
adc
adc
lret
mov
ret
jae
nop
mov
cltd
sbb
and
pop
sbb
pop
xchg
add
pop
mov
add
sbb
pop
add
xor
std
sbb
add
push
sub
into
mov
sbb
push
adc
ds
mov
das
or
bound
in
call
or
push
xor
shr
insl
jne
or
addl
jbe
jo
daa
inc
sub
adc
cs
mov
test
jl
push
sbb
ret
add
es
lcall
cmp
sub
or
or
andl
xlat
stos
loop
or
incl
cmp
roll
inc
adc
adc
sub
mov
ret
inc
sarb
or
mov
clc
jne
in
subb
es
xor
inc
pop
dec
adc
hlt
cmpsl
aaa
cltd
jecxz
ja
mov
pusha
je
divb
push
aam
adc
leave
repz
arpl
push
inc
adc
loopne
mov
push
add
jge
jb
xor
ret
jmp
cmp
lea
adc
inc
hlt
add
lods
mov
sbb
cli
hlt
xor
test
je
mov
mov
or
push
mov
add
mov
je
jg
hlt
cmp
ljmp
pop
mov
enter
pop
sub
xchg
lcall
and
inc
sbb
mov
iret
mov
ret
mov
jg
popa
or
mov
and
cmp
adc
int3
push
xorb
push
sar
push
popa
xchg
or
xlat
lea
add
pop
mov
or
inc
cmpsl
jnp
pop
xchg
xchg
mov
jne
addr16
mov
cmpsb
pop
push
rclb
hlt
test
addb
jno
je
add
nop
inc
ret
jle
out
adc
mov
add
pusha
scas
xchg
push
add
cld
jns
add
push
xchg
aaa
mov
lock
and
mov
sbb
fsubl
fsubl
and
test
add
or
sbb
adc
shl
cmp
lcall
adc
pop
pusha
imul
mov
ret
test
pusha
add
mov
je
adc
leave
and
bound
adc
add
xor
adc
clc
jmp
sub
iret
xchg
cli
push
push
push
popa
cmp
in
inc
ret
or
xchg
add
imul
mov
adc
and
adc
ret
scas
add
push
jmp
mov
xchg
add
and
xchg
adc
mov
mov
orb
gs
xor
xor
stos
pop
pop
sbb
dec
dec
dec
jne
loopne
and
jns
sbb
in
nop
jp
jmp
in
sbb
adc
lds
mov
shr
mov
flds
xchg
cmp
cmpl
push
adc
es
ficoms
int3
jl
out
stc
lcall
imul
fmuls
fcompl
add
and
loopne
inc
loop
push
shlb
ficomps
xor
mov
push
pop
js
aas
push
jnp
dec
imul
mov
nop
nop
rcll
xor
pushf
movb
xlat
push
fldt
ljmp
adc
fs
js
je
fdivs
daa
inc
mov
jmp
cmp
jl
jmp
pop
addb
inc
es
sbb
add
sbb
sub
stos
jo
sub
mov
push
cmp
fldcw
mov
mov
push
andl
xor
sbbl
mov
pop
insb
xor
lea
mov
pop
in
push
push
push
sub
jge
and
dec
cmp
in
ret
out
rep
ret
xor
xor
lock
xchg
add
jmp
clc
xchg
rclb
add
not
mov
xor
adc
jns
and
shll
jl
je
test
push
push
xor
ret
popf
mov
jmp
push
adc
test
jl
lods
push
push
or
add
dec
in
add
outsl
pop
int3
or
aas
ret
add
push
or
dec
xor
loope
aas
sbb
mov
js
inc
ljmp
cmp
sub
mov
sub
in
xor
lods
dec
sbb
jge
sbb
imul
inc
lahf
add
inc
push
or
inc
ds
add
es
adc
add
inc
decl
fsubp
xchg
subb
cs
push
jmp
sbb
sbb
popa
pop
jg
inc
cmpsb
leave
sub
pop
mov
cmp
das
loope
dec
mov
or
icebp
neg
ja
add
add
imulb
adc
jmp
push
js
sbb
loopne
aad
lahf
rcrb
fmul
shll
adc
inc
mov
adc
jge
or
push
push
cwtl
jle
jne
adc
cs
dec
nop
push
add
js
pop
pusha
push
push
push
mov
jo
pusha
mov
fisubrl
add
test
ret
pushl
push
iret
add
push
mov
pop
ja
cmpsl
inc
out
xor
movb
cltd
jo
push
pop
sbb
jno
jo
repnz
xchg
orb
cmp
push
jge
or
loopne
push
rcrb
xor
pop
jnp
push
andl
push
pop
mov
mov
mov
mov
dec
jae
sbb
pop
movsl
mov
mov
mov
dec
loopne
test
inc
bound
je
imul
inc
mov
add
adc
sub
outsb
push
mov
push
or
clc
and
pusha
push
adc
push
leave
add
inc
cmp
or
in
xor
scas
sub
inc
mov
sub
arpl
shrb
cmp
imul
cld
sbb
or
js
int3
and
mov
stos
push
cmpsl
inc
jno
sub
dec
subl
jbe
add
lret
lods
jb
loopne
and
adc
sub
push
lds
or
data16
push
repnz
push
leave
cld
adc
fldenv
sub
push
outsl
adcb
iret
or
dec
xchg
adc
pop
and
sub
cmp
negl
popa
adc
pop
addl
mov
push
incl
fists
aaa
jbe
push
mov
aad
and
xlat
mov
push
pop
sbb
adc
or
inc
sub
adc
rcr
pop
mov
aas
sbb
inc
sub
and
inc
adc
or
add
xchg
bound
add
or
iret
push
adc
enter
mov
xor
cmp
and
adc
das
pop
xchg
pushf
and
pop
mov
add
push
mov
mov
mov
push
arpl
add
cmp
inc
xor
add
movsl
cmp
inc
add
mov
dec
push
cltd
lea
jbe
fsubl
or
xchg
adc
adc
insl
or
insb
mov
mov
mov
test
jns
cmp
popf
or
loope
push
add
lods
or
iret
add
pop
or
add
inc
xor
cmp
lret
les
fbld
scas
test
nopl
xor
fdivrl
jb
sbb
xor
jne
xchg
cmpsl
mov
adc
orl
out
test
hlt
lret
jge
fcmovb
or
jge
add
xchg
mov
pop
leave
mov
inc
jne
sar
or
rorb
pop
cmp
push
lds
and
mov
movsb
mov
adc
inc
dec
inc
and
dec
mov
cli
push
cmp
pop
push
dec
and
inc
sbb
mov
cld
push
je
jbe
pop
inc
movsl
mulb
fisubs
sarl
and
add
int
inc
and
push
inc
mov
jp
ret
xchg
mov
mov
or
mov
sbb
adc
push
and
xchg
or
sub
cmp
shl
cs
cli
popf
sbb
jo
mov
mov
lock
inc
jp
sbb
jnp
inc
or
add
pop
mov
xorb
and
dec
jbe
sahf
push
cmp
jbe
push
push
enter
in
push
sub
dec
aam
int
ja
mov
and
push
and
sbb
jp
aaa
xor
xchg
je
aas
jae
scas
push
push
rclb
mov
sbb
adc
mov
dec
jmp
outsb
insb
pushf
gs
lret
fistpll
ja
inc
sbb
sbb
mov
subl
adc
push
push
jecxz
push
jge
adc
rcrb
ret
roll
xchg
xchg
jne
mov
mov
jne
cmpsl
movsl
repz
insb
insb
xchg
fs
fwait
xlat
lea
mov
loopne
mov
test
dec
xchg
add
lea
adc
add
fiaddl
pop
xchg
adc
or
push
les
mov
call
inc
adc
in
mov
mov
adc
and
iret
imulb
and
mov
and
sbb
pop
ss
flds
inc
pushf
pusha
fs
or
mov
inc
lods
add
dec
lods
pop
mov
inc
push
cmc
inc
shlb
faddl
push
sbb
push
mov
push
stc
bswap
enter
cmp
inc
mov
dec
dec
cltd
jmp
sbb
test
push
push
movsl
push
fsubr
push
mov
sub
loopne
outsl
add
daa
out
push
cli
adc
or
push
fildl
jg
jmp
adc
push
xchg
add
jl
pusha
xchg
mov
lods
scas
jge
aam
addr16
xchg
mov
fisttps
and
cmp
xchg
adc
add
sbb
or
inc
shl
inc
jbe
xor
pop
adc
lods
jmp
andb
jle
jle
pop
add
sbbl
sub
push
sahf
inc
loopne
push
mov
rcrb
bound
xor
fistpll
sub
pop
sahf
pop
jbe,pn
ret
sti
fdivl
ret
mov
xor
mov
subb
jp
xchg
mov
shll
push
adc
loop
push
dec
adc
insl
jno
mov
enter
mov
mov
adc
cmp
sub
push
push
fsubr
adc
ret
add
adc
js
xchg
or
inc
movsb
mov
xor
imul
inc
pop
mov
adc
hlt
inc
sbb
les
add
and
xchg
incb
mov
inc
ltr
cmp
loope
mov
rorl
cmp
pop
clc
leave
addb
divb
ficoml
jmp
mov
mov
clc
push
hlt
adc
or
cltd
or
enter
cltd
xor
dec
push
adc
xor
lahf
sbb
insl
jmp
enter
sub
mov
push
or
scas
mov
sub
cmp
call
or
sbb
pusha
in
stos
push
mov
sub
out
or
mov
pop
fisubl
loop
fs
test
cmp
sbb
ss
cmp
xchg
jmp
out
into
mov
test
inc
and
jne
jge
popf
xchg
mov
or
test
push
testb
xchg
jle
and
add
sbb
lock
out
push
mov
or
loopne
xor
stos
fldt
adc
sub
cmp
rcrb
dec
add
jbe
sub
add
jnp
das
movsb
push
pop
or
add
mov
push
mov
xor
inc
push
shlb
cmc
cmp
jb
mov
mov
jae
mov
adc
arpl
xchg
cwtl
mov
cmp
dec
adcl
cmp
inc
push
add
mov
pop
das
jae
mov
pop
inc
xchg
hlt
sub
cmp
out
xor
enter
cmpb
rolb
in
pop
lretw
cltd
jp
sbb
lods
sbb
cmp
mov
bound
jp
xor
inc
rorl
push
cmc
adc
mov
subb
push
push
cld
jne
ret
sbbb
mov
enter
ret
sbb
adc
xchg
adc
in
add
and
pop
xchg
ss
inc
shrb
test
or
adc
adc
cmp
mov
adc
and
notb
xchg
adcl
nop
xchg
test
cmpsl
lret
lods
cld
out
cmp
ss
ds
dec
outsl
cs
jb
je
dec
cmp
jnp
mov
sti
enter
mov
fcos
xor
mov
ret
and
out
adc
jns
adc
hlt
adc
xchg
or
inc
adc
adc
and
inc
cs
adc
adc
adc
push
enter
fildl
jbe
sub
shll
mov
mov
mov
jno
mov
cmpw
mov
rolb
je
cmp
adc
subb
int3
add
enter
or
xor
xor
jmp
insl
sbb
mov
pusha
lods
mov
test
add
lret
les
pop
pop
ret
inc
scas
mov
xlat
es
popf
mov
ds
mov
and
jl
inc
and
das
loopne
mov
jmp
cmp
shrb
cmp
testl
and
notl
sbb
xor
imul
lea
in
mov
lea
daa
stc
rcrb
xchg
jnp
dec
cmpsl
dec
mov
push
adc
mov
sub
add
xchg
inc
mov
and
mov
addr16
sbb
imul
jne
sarl
dec
popf
push
sbb
push
notl
mov
mov
sbb
and
jb
and
dec
or
sbbl
arpl
adc
or
divl
push
pop
add
inc
dec
shlb
ds
mov
shrl
push
jle
add
adc
adc
pop
cmp
cmc
imul
into
aam
mov
push
mov
inc
or
popa
stos
mov
push
in
fidivrs
jmp
xor
dec
cmp
test
dec
mov
pusha
movsb
shll
mov
mov
outsl
test
jnp
adc
cmp
xor
inc
sub
ss
cmp
orl
aaa
mov
std
mov
sub
mov
std
insl
movsl
jae
movsb
ret
inc
test
push
cmp
adcl
jmp
mov
imul
insb
std
xor
cmp
xor
shrb
testl
ja
icebp
pop
xchg
repnz
pop
or
sub
icebp
add
mov
dec
push
inc
xchg
adc
dec
dec
push
inc
add
xchg
test
sbb
add
loope
sbb
push
push
cmp
pop
and
mov
sbb
or
pop
push
fimull
test
pop
test
xor
add
shll
mov
neg
nop
mov
inc
sbb
dec
mov
mov
stos
test
push
mov
aam
rorb
jo
insl
out
and
add
add
mov
sbb
mov
sub
mov
mov
in
mov
jmp
push
mov
lea
adc
add
imul
leave
test
push
sub
jge
mov
cwtl
rcpps
call
int
xor
adc
repnz
cmp
mov
jmp
cmp
pop
xor
or
inc
test
mov
into
mov
add
ret
jg
adc
inc
dec
adc
roll
push
push
mov
cld
cmpsl
jmp
cmpl
push
mov
jno
cmp
movsl
adc
or
xchg
cmp
jl
xchg
add
jae
dec
notb
sub
outsl
pop
stos
xor
mov
adcb
jg
clc
adc
pop
decb
cwtl
stos
or
xor
scas
jp
push
and
push
fs
mov
jle
out
es
sub
psubw
gs
bswap
popa
inc
sub
test
pop
add
adc
shrb
fwait
cli
inc
scas
nop
lock
outsb
jl
adc
push
scas
push
in
inc
push
xor
pushf
cmp
out
xchg
ret
jb
pop
push
int
jbe
ror
ret
sbb
xor
cmpsl
mov
pop
roll
pop
pop
repnz
add
pop
mov
dec
sahf
xor
inc
bound
jno
enter
xor
mov
inc
pop
mov
dec
imul
mov
cmp
dec
sub
shufps
scas
repnz
jge
mov
push
fcmovu
mov
adc
sub
lret
faddl
xor
mov
pop
dec
adc
cmp
ss
adc
xchg
fstpl
mov
call
mov
ret
push
mov
pop
xor
push
push
popf
push
mov
mov
in
inc
es
inc
pushf
adcb
test
call
cmp
adc
pop
out
nop
push
and
xchg
bound
xor
push
movaps
enter
mov
jl
dec
xor
mov
mov
xor
adc
adc
insb
stos
mov
sti
sub
in
insb
and
mov
pop
outsl
or
ljmp
add
mov
add
pop
and
push
jecxz
add
xchg
xlat
mov
mov
data16
or
xor
push
add
sbb
push
imul
rclb
clc
or
push
aas
xor
fs
jmp
das
test
or
andl
and
add
imul
shll
sub
mov
mov
or
xor
loopne
inc
fidivs
enter
inc
orl
mov
sub
flds
cltd
inc
push
imul
add
in
jae
lret
clc
lea
jmp
cmpl
sub
shll
or
aam
push
je
mov
xchg
jp
clc
scas
pop
in
fmull
lret
js
shrb
sbb
dec
mov
add
imul
dec
sbb
or
pop
lds
fs
movsl
jge
clc
xchg
cmc
in
push
fbstp
out
sbb
xorl
push
addr16
lret
sbbb
mov
aam
pusha
add
notb
add
sub
xchg
xor
xchg
xorb
push
arpl
mov
fiadds
pop
or
or
xor
orb
xor
mov
cmp
adc
pusha
lods
or
or
sub
add
subl
mov
mov
xchg
inc
idivl
sahf
pop
test
mov
mov
lret
out
das
adc
cmp
mov
test
and
or
roll
inc
cmp
mov
adc
xchg
mov
mov
mov
insb
cltd
jecxz
inc
push
sub
inc
aas
pop
gs
stc
addb
pop
fidivl
xchg
out
adc
cmp
sbb
jmp
mov
jbe
xchg
fcomip
js
add
stc
xchg
lds
enter
outsb
or
mov
loopne
scas
pushl
xchg
adc
or
add
enter
mov
dec
test
xchg
cwtl
outsb
push
lock
mov
pop
dec
jb
outsb
jge
mov
add
cmp
je
cmp
or
or
xchg
sbb
or
nop
popa
and
cmpb
mov
xor
push
add
inc
and
cmc
std
jb
jl
cmp
pop
adc
add
nop
dec
dec
enter
adc
dec
je
add
sub
push
or
imul
or
xchg
push
pushf
test
jae
push
xchg
mov
outsl
adc
jl
scas
and
jmp
adc
mov
fsubrs
pushf
mov
sbb
push
shrl
jb
test
or
testb
adc
bound
adc
sbb
ja
pop
or
jb
je
imul
loope
sub
lret
fmull
or
cmp
push
jbe
or
je
test
cltd
jbe
xor
lock
jne
mov
shll
and
add
aaa
sub
lock
enter
xor
add
in
stos
es
enter
dec
lcall
jbe
and
js
and
jb
lds
mov
mov
inc
mov
add
and
cmp
jae
mov
sub
sbb
js
lock
fistl
cld
loopne
fnstenv
loopne
push
push
mov
testb
push
stc
repz
test
pop
mov
fmul
dec
inc
in
or
out
testl
inc
push
cmp
add
inc
sbb
icebp
dec
ljmp
lea
lock
pop
inc
mov
pop
pop
sub
lret
pusha
push
and
sub
aam
xor
mov
neg
sbb
and
bnd
sarb
test
mov
push
sub
push
adc
push
les
daa
stc
lods
les
sbb
jge
andb
cmpsl
xor
xor
mov
fistpl
add
mov
in
outsl
jmp
sub
mov
push
jb
sbb
mov
jg
add
out
cmpl
jne
cmp
jbe
or
jne
push
jnp
mov
add
hlt
fisttpl
std
mov
loopne
xor
push
xchg
popa
xor
ja
inc
cmc
jmp
sbb
orb
addl
nop
aam
mov
or
mov
loop
xchg
mov
mov
ja
cwtl
sbb
pop
movsl
lea
lods
push
cmp
jne
loope
imul
popf
inc
pop
lea
push
mov
ja
xchg
jne
movsb
inc
jg
or
cmp
js
xchg
or
xchg
or
nop
pusha
xor
sbb
mov
call
push
rep
addl
add
cmp
mov
jnp
adc
movsl
cs
sbb
add
add
fldenv
or
add
inc
adc
inc
push
js
call
sbb
jg
rolb
adc
andl
leave
ret
ss
nop
push
sub
movsl
clc
addl
cltd
pop
or
lods
xchg
cmp
add
add
daa
inc
test
xchg
push
jne
aas
arpl
or
sbb
cmp
stos
call
dec
ljmp
gs
jg
xor
or
cmpl
cmc
jl
jmp
call
shlb
ljmp
rcrl
push
fldl
mov
push
push
arpl
xor
int
sbb
push
loopne
xlat
sub
push
repz
ret
pop
mov
lock
ret
mov
jb
sub
or
cmp
fcoms
push
sbb
fiaddl
arpl
inc
cmp
jp
add
jae
cmp
dec
cmp
leave
sahf
ds
xor
push
rcrl
add
xlat
sbb
loopne
and
or
es
cmp
sub
jb
push
jae
and
sub
mov
data16
add
jne
pop
shlb
dec
pusha
testb
cmp
decb
cmp
daa
lock
jp
ljmp
push
dec
jno
orl
inc
inc
fcoml
cmp
es
xchg
lods
push
fwait
add
xor
fmuls
add
cltd
mov
push
out
mov
das
jecxz
popf
ljmp
xor
xor
mov
int3
ds
mov
jbe
mov
sbb
sbb
or
dec
add
call
dec
mov
nop
mov
push
test
cmp
sbb
arpl
sbb
or
outsl
jle
or
das
loopne
mov
movsl
fsubl
jno
mov
xchg
jge
cmpsl
shll
outsl
sbb
cmpsb
cmp
packsswb
cs
mov
je
or
roll
xor
inc
scas
xor
and
sbb
faddl
pop
push
repz
loopne
add
cmp
pop
mov
lock
push
and
rcr
pop
xchg
mov
xchg
or
xor
add
lea
pop
nop
adc
and
inc
sub
mov
pop
pop
in
add
push
notl
mov
mov
fsin
mov
xor
je
mov
stos
mov
and
clc
les
test
xor
in
enter
dec
or
out
sub
loop
push
aam
mov
fcomps
add
and
adc
fcoml
push
jle
cltd
mov
xchg
sarb
xorl
and
subb
rclb
or
xor
in
adc
lea
jae
and
pushf
fucom
dec
fdivrs
cmp
push
popf
push
test
lret
mov
dec
pop
xchg
pop
add
in
rorb
std
mov
sub
sahf
roll
add
pop
mov
or
movd
sbb
mov
xchg
rcrl
mov
in
into
sbb
mov
mov
sub
inc
inc
sbb
push
in
mov
add
lea
fistps
or
test
test
aaa
mov
add
popf
pushf
xor
xor
xor
sub
cmp
xchg
out
in
xor
and
pop
je
mov
js
adc
push
jae
ss
rorb
aas
or
or
aaa
mov
out
mov
lea
sub
push
sbb
cmp
mov
push
push
daa
add
or
aad
sarb
lea
jae
jge
sbb
push
dec
or
testl
je
iret
xchg
inc
clc
iret
lea
loopne
call
scas
xor
stos
sbb
jmp
push
inc
sub
dec
insb
icebp
sub
and
sar
push
movsb
and
test
sbb
push
adc
xchg
pop
lsl
mov
or
adc
dec
imul
add
or
cmpsb
pop
push
sbb
adc
out
mov
adcl
xor
xor
popa
mov
sbb
adc
or
adc
ja
adc
inc
mov
add
das
dec
and
sub
adc
mov
loope
adc
push
in
jne
push
subl
pop
lea
cmp
jle
movsl
sub
imul
inc
fisubl
hlt
ja
pop
adc
in
jmp
mov
nop
cmpsb
adc
imul
orb
mov
add
fisttpll
xor
push
lds
or
jle
sbb
adc
mov
mov
mov
pop
clc
add
mov
incl
int
or
dec
sti
jge
imul
sub
lock
out
pop
movsl
movsl
pop
imul
shll
and
push
and
or
jbe
push
push
or
aam
inc
adc
or
or
je
adc
sbb
inc
clc
jmp
push
je
dec
add
inc
sub
fs
les
scas
inc
inc
outsb
orl
adc
std
lcall
scas
jbe
pop
int3
or
adc
add
add
arpl
xor
and
outsl
lahf
in
lea
ss
lret
shl
orb
xor
mov
loop
loope
lret
xchg
daa
bnd
fisttpll
push
mov
mov
push
cmpb
outsb
mov
dec
ret
push
jae
lea
push
sub
push
out
shlb
ret
push
out
push
inc
lcall
shl
inc
dec
pop
ret
mov
fmuls
ret
int3
loope
pop
sub
cmc
loopne
jge
mov
sarl
sti
or
cmp
cmpb
xor
fnstenv
inc
jmp
push
or
mov
sti
sub
jmp
in
lea
les
shll
movb
inc
inc
or
cmp
push
xchg
fdivs
sub
sub
out
push
xchg
add
jmp
loope
out
insb
mulb
or
daa
mov
div
fstpl
add
cmc
dec
in
jne
cmc
rorl
or
ds
loopne
mov
mov
push
mov
jo
mov
bound
pop
mov
jb
add
test
or
jns
lock
lea
jbe
fwait
xchg
push
inc
cmp
pushf
mov
fnstenv
data16
push
scas
mov
push
ds
enter
xor
mov
sub
outsb
pushf
cmp
add
mov
or
sti
sub
int
or
xchg
xchg
je
xor
fdivl
cmp
lds
and
mov
cmp
jb
inc
daa
mov
mov
cmpb
push
movb
adc
orl
pop
div
fimull
push
bound
inc
or
add
stos
adc
es
xlat
nop
add
xor
adc
sbb
lods
push
inc
shrb
call
sahf
jmp
out
std
cmc
imul
sbb
mov
dec
add
mov
xchg
jnp
jmp
addr16
cmpsb
imul
les
xor
imul
filds
mov
or
lods
pop
in
push
js
repnz
lea
mov
jbe
sbb
pop
mov
in
out
std
push
xchg
lods
and
mov
xchg
xor
mov
push
inc
inc
mov
lods
push
and
inc
rcrb
aad
jo
push
cmp
cmp
jmp
xlat
and
pusha
cmp
lock
movl
pop
cmp
wbinvd
fcoml
nop
fimull
adcb
in
mov
sbb
out
pop
in
stc
mov
add
iret
push
ret
rclb
adc
out
lods
out
not
jbe
cmp
pop
adc
ret
dec
testb
js
pop
je
sbb
pushl
or
scas
inc
fucomi
and
push
lret
pusha
jo
inc
sbb
sub
pop
imul
xchg
ss
inc
es
sbb
pop
adc
add
adc
cmp
inc
stos
pop
mov
xor
mov
adc
dec
xchg
icebp
andb
gs
mov
mov
adc
inc
pop
cmpsl
pop
imul
rep
cli
adc
dec
inc
mov
add
pop
fildl
adc
or
mov
dec
sub
mov
adc
sbb
push
ljmp
sbb
ja
lea
rorb
xor
repnz
mov
pop
sbb
pop
sbb
cmp
sub
push
sbb
mov
mov
int
and
push
pop
xchg
mov
mov
add
adc
ficompl
cltd
ret
sbb
movsb
push
dec
sub
push
jae
test
sub
mov
push
push
addr16
in
fs
xchg
cmpsb
addl
pop
mov
mov
add
jge
jg
adc
jne
or
inc
xchg
jae
jne
dec
sub
out
adc
jle
popa
inc
and
ror
dec
sti
lock
add
mov
or
test
pop
or
sti
dec
push
lahf
mov
rcrb
es
iret
jmp
and
pop
cld
lcall
adc
or
mov
pop
stos
adc
adc
push
out
mov
push
or
add
cmp
or
sbb
bound
sarl
xchg
pop
push
xor
pop
inc
inc
cmp
ret
push
iret
cmp
fldt
ud2
int3
sti
or
imul
into
movsl
ds
popa
jge
rcll
pop
mov
push
mov
iret
icebp
fimuls
adc
cltd
and
cs
shrl
sub
subl
inc
adc
pop
fwait
ret
mov
fcoms
ret
pop
rclb
out
inc
xorl
xchg
jle
js
push
push
or
pop
sub
pop
and
push
inc
movzwl
test
je
test
ret
or
push
or
jo
push
xchg
dec
shll
push
mov
pop
mov
xchg
add
push
cmpl
rcll
or
std
mov
push
sarb
das
jmp
cmp
inc
arpl
mov
push
clc
push
push
push
js
fcmovne
fsubrs
sub
push
dec
push
adc
xchg
rol
mov
fisubrs
cmp
pop
mov
adc
loopne
lods
pop
sbb
and
and
stc
push
mov
sbb
dec
clc
loope
cmp
js
fildl
or
lods
add
js
sbb
aam
clc
lret
adc
addb
fdivrl
in
pusha
pop
push
in
je
aam
mov
jle
push
lods
movsb
inc
sub
gs
les
pop
jle
mov
mov
add
icebp
push
imul
add
arpl
out
push
imul
dec
pop
push
dec
add
or
je
scas
ljmp
mov
mov
or
movl
or
mov
std
xchg
jno
xor
daa
sarl
adc
repnz
cli
push
cmp
push
ret
xchg
add
cwtl
cmp
imul
dec
cli
sbb
repz
cmp
push
adc
cld
jnp
jmp
js
mov
xchg
dec
ss
add
sti
dec
jb
add
clc
xor
add
lods
mov
aam
xchg
mov
jne
mov
add
outsb
pop
sbb
jne
mov
jnp
pop
pop
fs
push
push
sbb
mov
mov
popa
or
js
enter
mov
outsl
jle
jl
adc
cs
cmp
xor
jge
adc
or
sarl
pop
dec
cmp
adc
mov
gs
out
shll
jecxz
pop
jl
subl
add
cmp
xchg
add
gs
push
lea
stos
push
cwtl
sub
and
ds
and
imul
movsl
xchg
mov
cmp
inc
push
sub
push
sub
push
repnz
sarb
inc
or
mov
enter
frstor
inc
js
rcll
sbbb
sbb
rorb
sahf
jecxz
and
inc
clc
scas
xor
mov
inc
cmpsb
cmpsb
push
push
dec
push
cmp
adc
inc
ss
sub
cmp
push
fwait
sbb
mov
mov
adc
pop
or
outsb
adc
push
popf
loop
out
ffree
in
mov
jmp
into
out
push
adc
shrb
roll
dec
xor
xor
popf
divl
push
cmp
xor
push
pop
mov
outsl
push
add
inc
xor
sub
jne
fistpl
inc
popf
adc
lock
xchg
jl
mov
leave
add
mov
mov
cli
xchg
and
lea
push
ss
xor
shrb
mul
jge
call
jns
adc
lret
push
pop
js
iret
push
shrb
fcmovnbe
push
pop
repz
imul
inc
add
or
pop
jmp
aam
xorl
int3
add
lret
mov
sbb
mov
fadd
push
ja
sub
mov
inc
mov
jg
sub
and
xor
adc
xchg
fimull
add
lds
loop
inc
xchg
xchg
adc
sub
sub
je
xchg
xchg
js
outsl
adc
cmp
in
loopne
or
inc
mov
adc
add
push
push
and
sub
out
adc
insb
jmp
pop
and
outsb
out
in
sbb
inc
and
add
pop
loopne
push
jno
add
es
cmc
and
enter
sbb
je
cli
mov
daa
cmp
mov
pushl
lock
in
sahf
pop
mov
ret
sbb
or
xchg
rcrl
or
loopne
push
cmp
pusha
pop
xchg
loop
inc
in
mov
jnp
mov
imul
jmp
mov
and
cmp
xor
dec
enter
icebp
pop
xchg
add
push
mov
xchg
push
cld
sub
pop
mulb
femms
lods
pop
adc
pop
loop
and
aam
mov
andl
les
adc
jge
movb
cmc
int3
rcll
or
adc
call
add
mov
or
and
jl
fwait
xor
jno
and
jne
sub
pop
xchg
or
pop
mov
push
or
jne
sub
add
in
adc
daa
add
sbb
insb
xor
add
loop
dec
push
js
popf
fists
lahf
cmp
ja
lock
sbb
lea
es
lret
push
into
add
clc
iret
xchg
xchg
fcoms
emms
insl
repnz
cld
push
dec
jnp
notb
popa
inc
add
mov
dec
add
stos
pop
fcmovb
xchg
rorb
push
add
loope
fists
movsb
inc
mov
std
sbb
or
push
jnp
aad
in
xor
cmp
sub
mov
or
adc
out
push
push
cmp
fiaddl
mov
mov
jp
lods
adc
add
out
push
fdivl
enter
pop
mov
cmp
push
dec
scas
lcall
inc
fbstp
aam
pop
mov
jg
daa
cmp
and
pushf
pop
sbb
xor
mov
pop
mov
bound
jo
movsb
cmp
push
jmp
imul
sub
insl
roll
loope
cmp
push
jnp
sarl
les
icebp
repnz
xchg
mov
push
out
dec
aam
and
add
jle
dec
andb
and
and
sar
mov
sbb
jne
aaa
push
add
jne
sub
sub
jae
sbb
jne
add
push
sahf
inc
push
push
je
xor
outsl
ret
cmp
sbb
dec
insb
jne
data16
aaa
adc
jne
scas
aaa
ret
sbbb
mov
cmp
and
cwtl
ds
sbb
or
in
push
pushf
js
rorb
fadds
dec
aam
mov
inc
insl
fadds
add
mull
lock
adc
xchg
cmp
jne
xchg
or
jnp
ret
cmp
pop
push
push
pop
inc
sti
pavgw
cmp
jl
mov
outsl
or
cmpsb
push
cmp
fidivs
fidivrs
pop
sbb
in
push
adc
xor
cmc
push
sub
adc
xor
rorl
outsb
rcr
push
test
outsl
add
inc
push
sbb
test
stc
mov
and
adc
movhps
lea
jno
mov
mov
mov
mov
in
push
test
adc
inc
pop
adc
cmp
movb
or
or
shl
mov
aas
and
add
shl
leave
mov
add
and
add
push
xor
jp
xchg
lea
das
inc
inc
dec
rorl
xchg
sbb
or
pop
add
sub
js
dec
aaa
push
data16
and
lea
andb
xchg
subb
add
sbb
adc
cmp
push
pusha
imul
rol
cmpsb
js
mov
push
and
movsl
or
call
test
cwtl
test
enter
dec
int3
int
or
and
mov
cmpsl
xor
addr16
scas
sub
es
dec
add
ficompl
pop
lret
push
inc
sti
and
pop
movb
sbb
jbe
push
lret
pushl
sbb
xchg
mov
rcl
jae
fadds
sbb
and
xor
jo
xor
add
and
xor
pusha
push
push
je
xor
mov
std
add
or
hlt
pusha
rclb
sbb
dec
rcrb
add
out
ja
add
pop
sbb
push
adc
push
mov
mov
shlb
les
mov
sub
sub
xor
pop
adc
add
loope
pop
fs
add
das
cld
adcl
mov
jne
mov
xor
incl
and
notb
dec
cli
sub
ret
or
cmp
jne
sbb
dec
xor
ret
inc
sbb
clc
push
ret
lcall
daa
push
jle
out
jle
mov
xor
or
sahf
sti
and
test
in
push
pop
add
fistps
mov
sub
ret
testb
shl
ret
in
push
pop
and
xcrypt-ecb
cmpsl
dec
xchg
and
pusha
adc
xor
fimuls
cs
xor
das
xorl
outsl
mov
inc
adc
jne
orl
and
daa
inc
dec
adc
imul
inc
pop
dec
test
mov
xchg
add
add
sub
stc
fldl
je
mov
das
add
lods
cmp
mov
xor
mov
nop
fcmovnbe
cmp
mov
fisttps
scas
add
xchg
xchg
mulb
stc
push
jne
mov
pop
sub
and
mov
and
pushf
mov
data16
cmp
adc
lea
subl
inc
xchg
ja
fwait
in
lcall
mov
outsb
push
dec
pop
movsb
lock
mov
adc
into
js
pop
adc
mov
or
xchg
sbb
outsl
andl
and
dec
aad
adc
dec
stos
adc
shlb
xchg
jp
jno
lock
mov
xor
cli
pop
sbb
cmp
sahf
jge
addr16
out
pop
mov
sub
sbb
pusha
dec
and
dec
mov
add
dec
lods
dec
push
adc
or
lods
jns
or
popa
and
mov
push
xchg
fcompl
in
sti
insl
adc
mov
inc
fs
aad
stos
mov
mov
sub
jp
inc
fcmove
call
sub
repnz
mov
mov
adc
jb
sbb
lea
add
sbb
loopne
or
bound
pushl
mull
push
and
mov
adc
lods
ja
dec
xor
int3
lock
arpl
ffree
fwait
inc
adc
lock
call
and
loope
add
or
pushf
add
mov
je
fs
or
fs
inc
inc
push
sbb
insb
and
adcl
sbb
push
mov
cmp
push
icebp
mov
push
xchg
and
je
popf
add
sbb
push
lds
push
lods
cmpb
or
cmp
lea
mov
hlt
sti
push
sub
and
sub
inc
and
shlb
andl
adc
push
movsb
push
outsb
dec
adc
in
orb
lock
lock
cmpsl
adc
cmpsl
dec
jmp
stos
or
lret
xchg
pop
adc
jo
cmp
sub
jg,pn
xor
movsl
movswl
in
push
mov
mov
add
push
and
ret
add
mov
inc
sub
sub
cmp
cmpsl
xor
cmp
xor
popl
push
flds
pop
add
pop
pop
or
mov
adc
add
test
or
xchg
scas
xor
add
lods
insl
aaa
leave
adcl
add
ret
jle
jnp
inc
das
xchg
jno
and
sub
jo
jne
adcb
repnz
cmpsb
sbbl
adc
icebp
rclb
sub
std
insl
ljmp
popa
mov
inc
clc
dec
add
mov
sub
cs
add
out
pop
es
jne
outsb
fcompl
add
shlb
shr
cmp
pusha
cmp
pusha
xlat
stos
or
inc
or
in
ds
cwtl
fidivrs
adc
sub
mov
andl
das
cmp
test
jae
cmp
rorb
fmulp
cwtl
dec
push
lea
inc
mov
push
out
adc
add
lea
dec
pusha
ss
or
sbb
cmp
adc
lock
mull
in
xor
fcoms
jecxz
mov
inc
orl
lret
add
sub
mov
pop
arpl
bound
fs
imul
sub
test
fidivl
je
inc
fdiv
or
mov
loopne
or
cmp
movsb
pop
add
sbb
sub
sbb
lret
dec
stos
cmp
enter
fdivs
pop
or
ljmp
jge
fdivrl
jg
sbb
mov
mov
rolb
sbb
or
or
inc
xchg
ds
adc
or
pop
add
test
cmp
fmuls
cmp
inc
popa
rcr
out
jno
mov
pop
ret
mov
in
adc
push
pop
cmp
push
add
or
pushf
push
pop
data16
sub
push
adc
and
xchg
xor
adc
dec
es
and
push
lea
and
push
push
cli
sub
xchg
aam
push
sub
dec
inc
in
sub
adc
xchg
cltd
mov
push
push
push
ja
adc
push
adc
fiadds
mov
sub
xorl
pop
mov
mov
movsb
inc
pop
push
cli
adc
push
dec
pop
mov
sbb
pushf
push
jmp
rolb
je
push
push
add
testl
pop
shlb
lret
rolb
push
pop
jae
cmp
inc
push
dec
xor
xor
xchg
loope
dec
pusha
xor
pop
mov
movsl
add
pusha
inc
in
jl
mov
mov
icebp
xchg
cmp
sbb
and
push
push
jo
rclb
sbb
mov
cmp
cmpsb
add
xor
push
xor
sbb
insl
pop
out
or
jmp
xor
rcrb
loope
lods
pop
enter
push
add
test
pop
jl
stos
sbb
cmp
repnz
push
stos
fldenv
hlt
sub
mov
aaa
jne
jae
ja
movsl
sub
movsb
jns
pop
inc
and
push
insl
or
movsl
dec
repz
adc
shl
sbb
lea
cmp
push
and
imul
add
inc
dec
cwtl
push
aam
sub
push
adc
fsubl
jb
cwtl
push
mov
inc
jnp
les
inc
push
or
pop
fstpt
cmpps
adc
fsubl
sub
adc
xchg
sub
add
popa
mov
add
inc
jg
je
jg
lea
mov
push
inc
add
mov
cmp
sbb
je
sbb
sbb
or
jnp
xor
mov
out
inc
mov
xchg
add
jp
push
add
push
cs
or
mov
fwait
cmc
pop
push
and
push
mov
xor
push
xchg
dec
push
adc
pop
cmp
sbb
cmp
push
imul
push
inc
and
and
loope
pop
dec
xor
call
or
mov
mov
int
daa
loopne
movsl
push
xor
loope
inc
enter
scas
lea
and
xor
cs
or
or
mov
loopne
push
jbe
pop
ljmp
mov
pushf
adc
push
cltd
xchg
add
push
sbb
add
push
or
fldt
pop
add
sbb
xchg
push
nop
ss
sub
add
dec
and
push
push
ss
jnp
inc
push
inc
xor
push
xor
andb
out
adc
lock
jg
add
fwait
pop
clc
es
cmp
nop
lock
ss
mov
dec
adc
inc
sbb
js
pop
push
test
push
push
int
mov
xor
inc
push
sbb
iret
fucom
std
push
nop
sbb
cmpb
leave
push
mov
or
or
mov
or
dec
pop
movsb
add
jnp
inc
or
inc
inc
ret
in
jmp
jmp
xor
mov
lods
stc
inc
cmc
js
add
cmp
sbb
jmp
pushl
jne
push
pop
mov
pop
add
push
sahf
ds
cmpsl
orb
jnp
idivl
mov
inc
xor
push
nop
rcll
push
mov
int3
pop
into
add
or
mov
mov
sub
mov
in
adc
jl
andl
adc
js
push
mov
js
sub
fs
jne
insb
sub
outsb
inc
jae
xchg
dec
pop
adc
mov
pop
jo
push
dec
jo
sbb
adc
mov
outsl
mov
push
stos
xchg
movsl
icebp
add
cmp
xor
scas
test
push
lds
adc
mul
xchg
dec
adc
shl
sbb
out
ret
jl
cmp
mov
jl
or
jp
inc
push
icebp
jne
mov
sub
sub
sub
xor
pop
push
sbb
jmp
and
pop
js
ljmp
mov
push
and
sbb
or
xor
cmp
xchg
into
push
mov
movsl
add
pop
pop
jb
jmp
xor
push
stos
and
push
pop
lock
loopne
sub
ss
and
mov
decb
add
cmp
mov
or
cmp
add
sbb
push
ret
inc
sbb
icebp
mov
les
or
cmpxchg
fwait
cmp
jl
loope
xor
push
in
scas
mov
fistl
adcb
and
fadd
fidivrl
iret
rolb
fisttps
faddl
test
fidivs
xchg
mov
mov
mov
fstl
lods
cmpsl
sub
add
adc
dec
inc
mov
aas
mov
cmpsl
loope
jl
add
inc
push
in
push
add
cmp
cmpsl
aaa
add
xchg
pop
addl
jle
xchg
iret
ja
push
push
addr16
arpl
repnz
or
inc
or
lock
adc
push
xchg
nop
enter
fstpl
stc
or
or
cli
and
ret
mov
inc
cmp
mov
mov
data16
mov
mov
mov
xchg
inc
pop
repz
inc
mov
mov
call
dec
cmpsb
neg
adc
sub
and
mov
ret
stos
or
mov
inc
pushf
jmp
es
mov
add
push
jg
mov
pop
cwtl
imul
cld
or
cltd
idivl
push
or
dec
inc
inc
mov
add
add
fucomip
or
mov
mov
pop
push
dec
enter
mov
or
mov
inc
ret
iret
pop
pop
test
xor
push
push
adcl
cmp
aad
leave
scas
add
movsl
add
dec
push
and
push
mov
push
xor
cmp
rolb
push
xchg
fcoms
adc
fistl
mov
xchg
aas
or
inc
cmpsl
inc
sub
daa
js
imul
or
ds
push
cmp
sub
in
xchg
pop
mov
add
adc
add
push
stos
mov
outsb
movsl
or
jg
mov
sub
mov
je
in
clc
push
jns
mov
push
cmp
test
cmp
pop
cmp
jp
fsubl
cli
dec
and
and
mov
sbb
mov
dec
mov
outsl
push
or
jae
push
mov
add
js
flds
inc
ret
jae
orl
adc
and
cwtl
dec
pusha
lcall
data16
mull
mov
je
xor
add
je
lds
scas
add
pop
add
pushf
inc
xchg
mov
enter
movsl
std
mov
adc
sbb
lea
orb
jle
pop
mov
mov
scas
jne
pop
add
push
add
cmpsb
fcoms
ss
mov
add
add
and
add
xor
and
aas
pop
xchg
sub
es
jbe
or
cmpl
cli
push
lea
test
dec
movb
push
mov
sbb
iret
pop
dec
push
xor
shr
inc
add
gs
pusha
pop
call
loopne
adc
cmp
pop
out
add
cmc
xor
mov
insb
std
popl
or
pop
decb
sub
pop
adc
add
and
jno
pop
aam
mov
stc
outsl
insl
out
in
mov
jae
movsl
mov
movsl
dec
mov
es
sbb
jne
pop
jnp
popa
sbb
push
arpl
jecxz
jne
pop
adc
inc
lock
shl
push
xchg
adc
pop
jns
add
inc
and
push
ja
testb
sbb
xor
sbb
clc
ficoml
mov
or
ljmp
int3
xchg
cmp
or
xor
sub
in
xor
bound
xor
loopne
fists
test
orl
jmp
arpl
insb
leave
adc
out
mov
adc
int
insb
or
mov
int
adc
xchg
pop
imul
loopne
add
inc
scas
fadds
out
or
xor
sbb
jle
out
mov
je
cmp
add
imul
push
jne
ss
call
add
cmpb
jl
push
loopne
fucomip
push
push
jnp
add
mov
outsl
push
out
lds
xor
pop
cld
arpl
jle
add
inc
xor
addr16
ret
xchg
xchg
adc
and
dec
rorl
push
mov
repz
push
jne
repz
add
in
mov
sbb
xor
dec
or
fcmovu
movsl
ds
inc
jo
into
sub
lock
sub
int
inc
orb
mov
arpl
push
test
test
sbb
mov
psrlw
ret
inc
push
mov
cmp
inc
or
xchg
cmp
inc
pop
jp
jl
aaa
cmp
ss
pop
sahf
notb
inc
in
sub
mov
int3
dec
add
ret
or
sub
adc
push
push
jae
nop
and
rorb
inc
push
addr16
adc
test
decl
call
sub
setp
ja
xchg
imull
insl
jnp
mov
xor
pop
xor
adc
mov
repnz
dec
or
pop
testl
ret
loope
mov
es
inc
sahf
orl
hlt
ror
mov
push
ja
dec
or
add
push
leave
pop
xchg
adc
test
inc
cmc
aaa
sbb
push
adc
ud2
out
mov
jmp
or
bound
sbb
mov
call
lret
add
dec
nop
push
pushf
fnsave
sti
je
dec
pop
cwtl
sub
fsubrs
jge
lods
testl
push
mov
adc
shlb
or
ret
cmp
dec
adc
inc
xchg
out
adc
mov
cmpsb
add
mov
dec
jne
imul
invlpg
xchg
pop
sub
orl
push
push
sbb
cmp
in
fsubrl
js
movl
fs
push
push
dec
or
adc
dec
pusha
xor
test
add
in
je
add
push
je
mov
cmp
cmp
sbb
mov
imul
aas
pushf
add
sahf
ljmp
cmp
pop
loopne
mov
pop
push
rolb
or
xorl
sub
and
aas
or
pop
sub
daa
inc
insl
adc
xchg
add
cmpsl
adc
cmp
push
add
divb
lret
mov
roll
rcl
adc
or
push
jnp
mov
mov
xchg
or
sti
push
addb
lock
arpl
sbbl
in
daa
or
lock
push
add
cmp
adc
xor
rcr
incl
xchg
or
outsl
ss
mov
push
push
cmp
jecxz
pop
xchg
mov
js
rolb
cld
push
adc
std
xchg
mov
add
shl
aas
test
inc
mov
cltd
adc
jmp
bound
or
nop
fs
push
xchg
push
aam
sub
nop
fs
movsl
push
enter
jne
ret
outsl
mov
xor
cmp
sti
dec
ja
je
xchg
inc
jae
or
je
or
sub
push
sub
adc
mov
stos
jns
dec
push
adc
xchg
or
add
or
jne
sahf
popa
or
xchg
jnp
xor
jmp
rcrl
jecxz
cmp
adc
movsl
test
xor
insb
pop
or
adc
push
add
test
int3
lds
sub
ja
mov
testb
push
lcall
cmp
xor
push
adcl
test
xchg
mov
inc
mov
sahf
sub
lcall
inc
mov
fs
sar
sbb
push
sub
adc
in
xchg
xchg
lods
insl
mov
or
xchg
and
leave
inc
gs
imul
add
or
call
fmuls
push
div
xchg
sbb
dec
je
sub
adc
rorl
xor
sbb
pop
add
cld
inc
outsb
fcmovnbe
pop
inc
or
in
mov
call
daa
or
xchg
fisttpll
ret
push
adc
inc
push
js
nop
cs
cltd
add
insl
cmp
xor
fscale
dec
jmp
dec
pusha
xorb
cmp
divl
mov
adc
mov
and
push
pop
and
sbb
lods
loopne
or
xchg
jmp
jne
push
leave
jle
dec
or
add
mov
lds
cmpsl
insl
mov
or
adc
cmp
mov
icebp
or
ret
out
je
push
sub
inc
das
xchg
nop
fildl
add
and
mov
sbb
sbb
and
push
pop
loope
adc
xlat
loopne
push
mov
push
or
push
test
je
push
sbb
das
push
jo
push
or
shll
pop
lcall
out
push
inc
inc
add
inc
shrl
ljmp
push
xchg
add
sbb
dec
push
dec
movsl
or
push
das
cmpl
icebp
jae
inc
and
test
xor
mov
adc
in
push
xchg
pop
shlb
pop
push
adc
in
lcall
mov
in
iret
xlat
adc
inc
jge
mov
jecxz
sub
inc
sbb
push
jne
aam
mov
and
ret
push
sub
in
dec
sbb
nop
push
xor
int
testl
pop
cmc
dec
lcall
dec
sbb
pop
sub
out
shlb
icebp
xchg
push
inc
or
xchg
aas
or
mov
adc
jl
mov
adc
mov
aas
and
mov
pushf
rorl
inc
jne
dec
aam
js
xchg
cmp
mov
lcall
imul
adc
add
sub
add
lods
or
sbb
add
rolb
pop
arpl
stos
std
decl
or
jns
in
adc
push
cmp
movsb
sbb
lahf
adcb
fidivl
push
loopne
inc
ljmp
dec
sbb
sahf
and
or
dec
faddl
pop
mov
sbb
mov
inc
or
cltd
mov
and
mov
push
daa
mov
jne
and
dec
js
xor
enter
ja
imul
mov
call
testb
or
jne
in
and
nop
rorw
pop
mov
rorl
jb
push
repnz
leave
and
loopne
outsl
cltd
popa
sbb
daa
insl
mov
xchg
dec
dec
mov
cltd
or
pop
sbb
movl
lret
scas
cld
js
or
or
sbb
lea
dec
jmp
sbb
sbb
and
sub
add
hlt
add
repz
pushf
inc
xchg
xor
inc
inc
inc
mov
or
adc
loopne
adc
imul
das
mov
xchg
push
loop
ds
and
pop
dec
jno
xchg
in
dec
jo
int3
cmpsl
call
add
inc
jp
push
or
mov
mov
pop
push
inc
leave
cmpsb
repnz
pop
rcl
add
call
adc
out
push
cmp
movsb
add
push
icebp
add
jge
push
sub
dec
sahf
imulb
pop
movsl
cltd
insl
repz
inc
xor
xor
xchg
loope
aaa
divps
in
mov
xor
dec
xchg
inc
movsb
push
sbb
pop
and
mov
dec
sbb
and
mov
imulb
nop
cmp
sbb
sbb
cmp
mov
out
xchg
dec
or
mov
or
aam
je
jg
add
add
call
mov
mov
adcl
lods
cmp
mov
dec
dec
cmp
cmp
adc
xchg
dec
mov
push
cwtl
jae
and
sub
xchg
popa
cmp
mov
cmpsl
jns
xchg
nop
jp
xchg
mov
add
add
cmp
in
or
enter
sbb
and
movsl
cmp
or
popa
sub
jp
or
les
xor
insb
cmp
sti
and
or
sub
add
movsl
lock
cmp
mov
sbb
insb
enter
jne
xor
adc
cmp
cmp
push
shll
mov
in
jg
cmovnp
mov
or
cmp
pop
cmp
mov
xchg
pop
cmpb
lock
mov
sti
or
jl
sbb
xchg
call
or
das
push
sbb
jmp
or
pop
pushf
std
and
adc
les
mov
dec
adc
and
hlt
sbb
xor
cmp
push
rcrb
add
sbb
dec
xor
pop
add
jb
add
xor
sahf
in
xor
divb
inc
and
xchg
dec
fs
popa
and
div
add
ja
jno
sub
clc
sbb
into
jle
imul
jbe
mov
or
or
or
mov
sbb
mov
cli
es
inc
test
cmp
in
add
adc
sub
fwait
popa
sub
add
pop
adc
das
mov
xlat
push
mov
ljmp
mov
add
dec
add
out
insl
xchg
sub
and
pushf
leave
nop
rol
jns
andl
sub
mov
in
pop
mov
sub
dec
pop
xor
dec
jbe
sbb
cmp
lods
ret
dec
lods
repz
xor
inc
lock
loope
sbb
jecxz
mov
inc
cmp
pop
mov
icebp
inc
sbb
push
or
int3
nop
add
pop
ss
cmp
lock
add
outsb
dec
out
test
test
and
or
les
push
mov
or
inc
sbb
daa
subb
mov
inc
mov
adc
push
mov
je
loopne
push
mov
popf
cmp
push
pop
addr16
dec
xchg
loopne
inc
mov
xor
dec
adc
push
or
sti
push
cli
xor
mov
dec
xchg
movsl
outsb
push
repnz
pop
je
xor
je
cmp
push
add
cmp
mov
dec
loopne
adc
fsubs
test
lods
cld
jae
xchg
xor
push
rorl
andb
sbb
call
leave
dec
add
adc
sbb
movsb
push
mov
dec
outsb
sti
mov
sub
cmc
cmpb
je
imulb
mov
shlb
xchg
movb
mov
popa
adc
dec
jp
sbb
inc
adc
and
jo
test
mov
cld
rolb
out
std
fwait
jl
adc
adc
stos
cltd
pop
jb
in
das
pop
addl
pop
and
xor
andl
xor
sbb
sub
mov
dec
or
pop
fisttpl
je
adc
mov
inc
ss
sbb
lahf
leave
inc
sarb
or
rorb
sbb
fwait
and
data16
and
sub
and
xlat
xchg
and
lea
frndint
inc
outsb
xchg
insb
and
push
push
and
xor
push
adc
sub
jae
das
jge
and
pop
xor
xorl
sarb
pop
xor
jge
nop
int
arpl
xor
mov
inc
jne
dec
cltd
repnz
add
jbe
inc
add
xor
fs
jg
adc
insl
push
std
jg
es
or
push
jg
dec
or
push
sub
lea
stc
mov
jle
push
rorl
cmp
dec
inc
push
addb
cli
xor
add
cmpl
fisttps
call
loopne
test
dec
je
and
call
mov
js
mov
push
sbb
addr16
rorb
pop
cmp
push
push
pop
pop
test
loope
push
sub
xor
push
lret
or
mov
push
adc
lods
ret
fsubl
mov
push
mov
sbb
mov
inc
sbb
lea
cmp
test
adc
sub
jo
jmp
and
es
sbb
adc
fmull
jle
fwait
mov
inc
sbb
dec
je
cltd
fdivl
inc
in
clc
inc
xor
loop
mov
jp
in
aam
mov
mov
movsl
sbb
stos
in
and
fldl
aas
int
push
testb
or
jmp
call
xchg
popf
nop
out
mov
push
sbb
jnp
dec
loopne
loopne
add
rol
xor
sbb
cmp
and
add
and
cmp
add
pop
imul
enter
xchg
mov
mov
sbb
or
pop
xchg
mov
xlat
adc
fadds
imul
push
int3
pop
sbb
sets
or
imul
inc
xlat
sbb
or
add
lretw
loopne
and
dec
and
scas
pop
in
pusha
sub
sbbb
clc
mov
add
mov
cli
call
cmp
add
mov
test
addl
or
test
rolb
out
dec
std
or
mov
dec
add
movsb
loopne
aaa
frstor
dec
je
fmuls
xchg
add
add
leave
arpl
push
cmp
push
add
mov
clc
scas
adc
loop
and
jl
lcall
dec
or
incb
sub
add
clc
jne
xor
mov
add
add
jne
clc
or
push
scas
mov
add
movsb
pop
dec
jmp
mov
aaa
push
push
xlat
push
push
cmc
pusha
pusha
pop
add
push
andl
pop
push
jns
lahf
ja
pop
shlb
call
mov
sub
push
and
or
and
xor
fsubr
mov
or
enter
aad
or
sbb
imul
shr
hlt
push
imul
adc
cmpb
sbb
rcrb
jb
push
shrb
mov
or
xchg
sar
andb
mov
sub
jge
adc
jo
and
xchg
adcl
sbb
and
sub
shll
mov
inc
or
sbb
ret
fadds
loop
cmpl
mov
pop
and
pop
or
mov
add
rcll
cs
call
arpl
xor
imul
push
sub
insb
pusha
and
sub
in
sub
adc
pop
jge
push
xor
ss
xor
cmp
mov
push
jns
or
in
mov
xchg
jle
je
cmp
jbe
shll
push
leave
push
xor
xor
add
aas
imul
cmp
jno
lds
jno
xor
inc
or
inc
xor
mov
add
leave
dec
sbb
leave
mov
cld
out
push
xor
cmp
nop
and
adc
lock
mov
add
xor
adc
stc
add
inc
mov
cmp
sub
lea
add
mov
cmp
int
or
lock
pop
pop
push
and
insl
pop
adc
or
ret
mov
test
mov
js
xchg
or
popa
cltd
shlb
sub
push
add
jo
ja
push
mov
test
pusha
adc
nop
push
inc
nop
pop
in
ret
mov
add
and
sub
add
mov
data16
lock
add
sbb
in
std
aaa
aas
ja
push
aas
add
mov
cmc
and
inc
xor
icebp
inc
nop
inc
aad
xor
add
mov
jne
andl
rolb
mov
xlat
rcrb
add
mov
fnstsw
mov
push
xchg
ror
ret
sahf
orl
aad
jnp
cld
je
push
adc
and
pop
sbb
jmp
mov
and
xchg
sbb
and
cwtl
push
mov
push
push
rol
and
jle
jbe
xlat
rorb
mov
mov
push
jo
ret
and
cmp
inc
push
lret
pusha
and
xor
in
jle
mov
rol
and
and
movsb
mov
inc
bts
push
sub
push
xor
jo
sub
push
lea
mov
push
movsl
mov
rol
pop
arpl
sub
add
sbb
adc
mov
push
add
push
jns
or
xchg
mov
jmp
sbb
inc
add
sbb
sub
xor
out
or
or
rorb
mov
leave
jae
push
inc
lds
stos
mov
or
stos
push
dec
dec
adc
sbb
mov
jge
test
and
or
popa
scas
rorb
dec
add
stos
fstl
cmpsl
gs
lods
xor
fisubs
lods
mov
das
push
cmp
shlb
dec
fmull
inc
adc
add
push
push
pop
jge
mov
mov
sbb
or
sub
mov
jnp
add
cld
mov
pop
inc
mov
imul
push
adc
add
mov
pop
mov
cmp
decl
fadds
push
dec
pop
ret
pop
push
pop
ss
aaa
mov
and
ja
sbb
add
jg
or
push
sbb
lock
mov
xor
sahf
ret
je
pushl
daa
add
das
add
fcoml
xchg
fisttpl
cmp
test
push
hlt
mov
inc
lods
xor
mov
les
add
and
hlt
jns
jo
je
inc
adc
inc
add
lea
mov
adc
or
mov
insb
daa
pusha
push
mov
push
push
adc
inc
or
push
lsl
test
lcall
add
lock
jmp
sbb
xor
or
inc
mov
sbb
cli
mov
dec
xor
mov
outsb
push
clc
rolb
and
xlat
jnp
pop
nop
data16
cld
adc
pop
cld
jmp
data16
sub
pop
js
mov
jg
stos
inc
pop
add
stos
inc
and
fisttpl
jbe
sub
lea
sarl
xor
push
cmp
pop
pusha
jb
cmp
test
and
mov
jne
jne
je
test
sbb
sub
inc
clc
cmp
cli
mov
sbb
loope
pop
inc
jg
sbb
xchg
add
or
inc
xor
mov
xchg
xor
inc
push
inc
imul
push
dec
sti
jl
test
jg
cmp
add
rorb
or
xor
cltd
pop
mov
fwait
js
and
push
dec
cld
fists
xor
mov
shr
not
in
sbb
dec
xor
scas
mov
test
out
adc
or
int3
push
es
xor
push
or
testl
xchg
dec
dec
sbb
cli
imul
loop
in
or
sub
xor
mov
or
dec
pop
push
data16
dec
lods
je
sub
push
add
push
xchg
add
hlt
cmc
pop
or
jg
or
inc
add
adc
shlb
imul
mov
inc
mov
add
dec
mov
jno
js
add
or
or
push
dec
outsl
adc
push
js
mov
xor
push
mov
xchg
andb
pop
aas
xor
inc
popf
mov
in
rol
sub
mov
adc
sub
jnp
inc
push
pop
jns
in
addl
iret
inc
adc
jge
jle
insl
bound
push
ss
clc
or
sub
fwait
rclb
cmp
or
iret
or
sub
dec
in
roll
int
rclb
arpl
dec
inc
arpl
push
cmpb
push
xor
inc
mov
push
out
cmpsb
leave
cli
add
jae
push
cli
daa
loop
mov
mov
xchg
add
jo
in
and
cmp
dec
and
xorb
jle
dec
sub
dec
or
shll
xor
lods
adc
xor
je
pop
cmp
pop
fisttpll
cmp
rcrb
inc
cld
inc
dec
sti
rep
cli
inc
xor
dec
pop
adc
sub
or
sbb
pop
inc
outsl
sub
jae
and
scas
psrad
ret
inc
sbb
fisttpl
andl
sub
jne
push
push
push
mov
inc
push
push
mov
fistps
and
push
mov
scas
xor
loopne
adc
xchg
mov
inc
mov
push
mov
adc
mov
imul
adc
xorl
ret
imulb
xor
mov
adc
cmpsb
jl
mov
cmp
and
ret
jno
xchg
push
lock
inc
repnz
or
mov
inc
scas
push
iret
test
mov
mov
int3
repnz
shlb
and
push
cmp
push
push
jnp
or
arpl
mov
cmpb
in
sub
call
test
xchg
dec
roll
push
insb
add
lock
mov
mov
push
dec
inc
out
dec
push
push
pop
sub
dec
sbb
mov
cmp
jo
out
adc
call
in
popa
or
push
jl
ret
dec
xchg
push
in
mov
and
mov
adc
adc
arpl
adc
cmp
test
js
or
inc
mov
sbb
insl
roll
sbb
and
sarb
dec
jne
xchg
jge
sbb
cmp
bound
adc
push
pop
es
jnp
inc
sbb
aaa
pop
add
adc
iret
nop
push
add
pusha
cmp
dec
ss
adc
push
sbb
adcb
adc
clc
mov
add
scas
sub
add
scas
rolb
clc
adc
ret
arpl
adc
add
and
into
cmp
and
fwait
mov
nop
popl
add
or
inc
out
testb
and
test
fidivrl
jnp
sub
mov
pop
data16
xchg
ret
push
sbb
push
lea
aas
adc
pop
or
cmp
and
sub
idivw
inc
cmp
xorb
test
imul
loopne
aam
mov
mov
cmp
sar
xchg
add
add
inc
or
mov
jmp
lock
dec
mov
mov
lcall
sub
xor
xchg
inc
jecxz
in
add
push
cmp
sbb
in
popf
add
push
or
outsl
ficomps
xor
cmpsl
ret
sub
mov
cmp
pusha
sub
int3
mov
mov
ja
inc
jmp
es
sbbb
jp
shrl
dec
sbb
leave
test
incb
lock
popl
and
rorb
or
add
and
cmp
rcll
or
mov
mov
aam
ja
mov
push
push
lods
or
lcall
pop
lcall
or
lcall
push
mov
sbb
mov
push
sbb
adc
adc
sub
daa
inc
jecxz
test
sahf
dec
jl
sbb
cmp
and
lret
or
push
outsl
push
pop
imul
inc
pop
enter
sbb
inc
xchg
adc
pusha
sbb
and
jmp
push
shrl
mov
loopne
ret
jne
sub
outsb
sar
mov
jp
cmp
addb
fnstcw
jae
jb
jae
cmpl
push
rcrb
dec
hlt
jae
add
rolb
jae
jg
pop
push
cmp
dec
push
stc
adc
icebp
xchg
inc
aam
mov
and
push
mov
aad
inc
icebp
or
test
icebp
mov
inc
sub
jb
nop
dec
mov
adc
inc
cmpsb
int
dec
pop
pop
push
popf
inc
pop
in
mov
sbb
push
push
sub
add
inc
rcrb
sbb
pop
dec
sti
xchg
xor
inc
ljmp
add
cs
adc
fwait
cmp
cmpb
aaa
adcb
sbb
sub
and
jle
insb
adc
and
sbb
daa
or
cmp
in
in
add
mov
dec
rorl
movsb
or
and
mov
and
pop
mov
es
dec
and
adc
es
push
or
pop
insb
cmpsl
lods
mov
xchg
add
fstl
cmp
mov
scas
jae
jmp
mov
nop
fnstcw
adc
loopne
test
movsl
xchg
popf
sub
push
in
cmpsb
aam
stc
or
or
rorl
popf
and
mov
or
sub
inc
xor
jp
cmp
and
jne
mov
sbb
jbe
and
inc
cmp
xor
ss
test
inc
loop
push
xor
xor
dec
adc
push
dec
cwtl
and
or
jmp
jl
inc
aas
sbb
xor
rcrb
aam
lock
cmp
adc
and
inc
mov
sub
push
cmp
jo
inc
push
cmp
pushf
sub
cmp
hlt
cs
popf
lret
les
or
mov
mov
xor
in
or
xor
pop
mov
lret
and
xorb
mov
jne
cmp
pop
mov
mov
sub
sbb
mov
cmp
sbb
or
pusha
adc
xchg
into
pop
add
lret
ja
shll
or
sbb
adc
fsubl
push
sbb
daa
sbb
js
es
mov
je
pop
push
mov
sub
scas
dec
pop
mov
cwtl
adc
mov
adc
mov
shrl
xor
jne
xchg
mov
or
mov
add
in
inc
sbb
mov
addl
insb
jge
ljmp
mov
sub
lock
jnp
test
cmp
fidivl
jns
cmpsl
jns
out
in
loop
jle
cmpsl
fimuls
enter
out
sahf
es
in
jo
or
mov
push
push
dec
or
shll
xor
js
insl
pop
dec
jne
orl
mov
mov
mov
ja
into
test
inc
add
sub
andl
imull
inc
sub
xchg
cmp
nop
lcall
push
mov
pop
add
add
fs
or
jmp
jns
mov
mov
lock
push
pop
inc
dec
sti
js
mov
outsl
jne
test
jne
pop
xor
mov
loopne
and
mov
xchg
js
or
inc
push
icebp
lock
popl
cmp
cmp
clc
outsb
mov
test
sub
jge
data16
push
or
call
fnstenv
push
insl
xor
or
cmpsl
or
add
and
adc
push
orl
mov
push
jne
push
cmp
rorb
sbb
cmp
sbb
test
cmp
cltd
out
xor
insb
dec
sub
pop
jb
scas
cmp
dec
xchg
adc
push
lock
mov
adc
xchg
sbb
sbb
pop
sub
cmc
adc
and
pop
pop
push
dec
mov
js
or
insb
pop
inc
adc
sub
fwait
add
or
scas
inc
sbb
rorb
add
sti
bound
je
clc
adc
ljmp
adc
int
jo
ret
dec
xchg
cld
xchg
orb
add
or
push
inc
or
lock
sbb
inc
jl
test
mov
adc
cmpsb
addl
push
or
push
push
lcall
add
push
pop
mov
pop
sarb
xor
stos
popf
add
in
push
shlb
out
call
jns
repz
cmp
fsts
lcall
je
call
push
mov
call
pop
jbe
arpl
cmp
xor
and
sbb
in
adcb
movsl
dec
lret
fldl
pop
ret
xchg
jnp
dec
push
dec
mov
aam
pop
inc
dec
add
mov
mov
mov
fdivr
aam
add
lods
adc
fcomps
lahf
je
or
and
ja
jp
push
mov
push
sub
adc
mov
jmp
inc
sub
xchg
push
fcompl
or
and
std
or
pop
clc
jl
mov
and
or
aas
pop
and
jbe
jmp
outsb
push
js
lahf
stc
outsl
addb
adc
add
inc
add
dec
popa
add
and
jae
and
pop
test
scas
jne
add
out
or
jo
sub
cmp
popf
and
loopne
and
or
ret
sub
mov
add
fisttpl
lock
xchg
insb
jecxz
inc
popf
sbb
pusha
inc
pcmpgtd
rorb
push
xchg
inc
pop
xchg
fcoml
jnp
and
adc
stc
add
mov
pop
push
push
cld
fcoms
jmp
or
je
inc
dec
stos
mov
dec
loopne
ss
inc
or
dec
push
and
adc
icebp
divl
sbb
push
push
add
inc
pusha
aas
push
inc
adc
push
movsl
push
sbb
insl
push
dec
call
cmp
mov
fs
inc
mov
sub
xchg
clc
push
xor
subl
add
jbe
xchg
loopne
mov
mov
xor
stos
aam
imul
add
lcall
and
push
mov
sahf
push
test
xchg
pop
pop
pushl
jo
mov
xor
fs
or
push
jmp
mov
push
loopne
sbb
add
push
pop
dec
addl
shll
inc
push
shll
xor
mov
fs
dec
dec
ret
jmp
jmp
xor
cmp
in
dec
movsl
aam
test
lcall
shlb
mov
xchg
test
push
push
lea
push
mov
inc
ret
sbb
lea
jl
test
movsb
mov
push
xchg
imul
sti
fxch
sub
and
mov
ljmp
adc
cmc
cmpsb
out
mov
aam
es
test
and
and
or
pusha
sub
or
sbb
enter
mov
arpl
out
mov
test
loope
add
dec
dec
sbb
pop
outsb
inc
jno
test
test
addr16
push
pop
mov
xor
js
and
rorl
out
mov
loopne
cmp
jbe
ljmp
push
mov
or
push
pop
add
inc
mov
xor
arpl
rorl
adc
mov
xchg
jo
outsl
pusha
xor
jp
das
and
movsb
adc
mov
push
cmpsl
add
xchg
jmp
add
dec
sub
jp
inc
cmp
rolb
das
or
sbb
push
jnp
or
lahf
pop
xor
scas
adc
lds
fbld
les
int3
popf
push
push
or
test
or
xchg
rorb
push
sbb
adc
dec
movsb
out
rol
sbb
inc
mov
sbb
mov
test
es
sbb
out
scas
loopne
dec
lods
jae
adc
fs
inc
cmpsl
aam
pusha
test
les
repz
pop
test
adc
jnp
xchg
mov
mov
push
sub
test
je
push
sarb
movsb
adc
xchg
pop
mov
aam
data16
cmpsb
add
xchg
scas
fwait
add
xchg
adc
cmpl
ljmp
xchg
or
mov
push
add
loopne
mov
push
cltd
inc
add
dec
mov
fwait
mov
mov
dec
leave
in
sbb
mov
add
je
ss
push
clc
stos
push
add
push
cli
adc
rcrl
arpl
pop
call
mov
or
and
inc
push
jbe
push
mov
xor
sahf
fistl
jne
pop
imul
xchg
iret
add
es
and
sub
adc
fcoms
in
cmp
and
xor
lods
cmp
adc
incb
pop
xor
xchg
lcall
ret
sbb
lea
push
sub
mov
mov
jp
data16
pushf
stos
sub
testb
push
push
fdivs
dec
pop
cmp
jo
dec
int3
mov
jo
rcrb
in
jo
mov
ljmp
push
aaa
pop
rol
in
xchg
movsb
fcompl
pop
lock
ds
sbb
push
adc
pop
adc
pop
sarb
cmp
iret
popa
addr16
fcoms
xor
inc
pop
fldl
hlt
inc
or
dec
push
sahf
push
or
lods
ret
xchg
or
add
shlb
sbb
shr
or
cmp
pop
add
add
cltd
add
inc
pop
adc
fiadds
or
pop
sbb
mov
sub
lcall
sub
mov
je
sub
cmp
cs
sub
inc
push
mov
test
jno
pop
xchg
cwtl
pushf
test
mov
pushf
mulb
mov
jne
push
sub
push
stos
mov
pushl
dec
inc
or
pushf
and
pop
adc
pop
mov
xor
sbbb
dec
mov
rcrb
outsb
sbb
mov
les
or
lods
jmp
sbb
add
cmp
adc
in
scas
icebp
fidivl
and
or
aaa
in
jno
add
loope
pop
in
mov
xchg
je
aaa
mov
mov
jne
mov
add
mov
push
mov
popf
jg
dec
mov
mov
mov
lea
ljmp
scas
outsl
push
pop
jnp
and
mov
xchg
mov
dec
movsl
jmp
push
not
andl
mov
push
mov
add
and
mov
insl
in
xchg
mov
lods
fucomip
sbb
incl
out
out
adc
shl
lahf
sbb
mov
xlat
and
add
push
mov
cltd
aaa
cmc
pop
lock
in
cmp
inc
test
jnp
sub
or
add
inc
addr16
or
testl
dec
push
mov
jne
stos
lds
mov
loop
add
mov
push
push
push
jns
in
mov
push
push
repz
and
test
hlt
mov
je
roll
add
jo
push
movsl
sbb
inc
testb
mov
les
pop
mov
sub
inc
and
and
icebp
cmp
ret
push
sbb
xlat
push
add
fwait
jo
stos
add
mov
add
imul
sti
dec
pop
test
incb
cmpsl
cmp
fldcw
mov
ljmp
cmc
inc
xchg
in
daa
mov
aam
shlb
mov
mov
and
fnsave
jge
xchg
pop
rolb
push
shlb
into
and
hlt
lea
inc
or
decl
sbb
nop
dec
test
in
lret
pop
pop
inc
inc
inc
inc
push
jl
andl
push
test
sbb
imul
add
mov
lock
mov
mov
idivb
dec
sub
pop
add
repz
loop
rolb
or
xchg
push
add
out
and
push
mov
pop
rcrw
mov
mov
push
and
mov
or
pop
sbb
pushf
sti
mulb
inc
dec
add
into
xor
mov
sub
ret
jle
push
pop
faddl
bound
pop
hlt
add
cmpsl
hlt
lock
imul
xor
insb
imul
hlt
cmpb
clc
dec
lods
aam
mov
jg
mov
stc
or
cmpl
nop
dec
jl
mov
jo
js
cld
sbb
shl
sub
push
or
sti
lea
add
pushf
lcall
fadd
dec
dec
adc
pop
mov
add
inc
sbb
xchg
mov
jb
adc
ret
imul
sub
mov
or
pop
pop
sub
movsb
dec
push
xchg
call
das
and
lea
jae
out
push
lds
rolb
cltd
lret
sbb
push
in
int3
dec
inc
rolb
adc
outsb
dec
cmp
js
dec
push
repnz
fsubrs
push
xor
add
mov
push
call
xor
loopne
imul
push
pop
jne
rorl
fsub
fs
ja
icebp
jne
dec
lods
adc
jns
push
fwait
stos
loopne
adc
push
add
pop
shlb
out
cmp
cltd
pusha
add
push
rolb
push
mov
pop
pop
sbb
and
cmpsl
mov
lcall
sarb
push
mov
scas
popf
mov
mov
dec
mov
or
inc
or
add
loopne
sarb
sbb
mov
xorl
cmp
das
push
int
add
adc
lock
mov
adc
outsl
mov
jne
movsb
sbb
std
xor
push
inc
in
fists
cmp
cmp
cli
sarb
decb
cmpsl
add
inc
mov
aaa
add
imul
inc
bnd
cmp
cmp
or
roll
sub
bound
js
insl
xchg
push
push
add
lahf
cmp
clc
xchg
movsb
push
add
hlt
mov
sub
les
push
pop
inc
ja
cmpsl
imul
int
std
xor
jp
je
insb
ljmp
je
data16
sub
ljmp
jo
stos
inc
je
lcall
outsb
adc
insl
add
jbe
or
imull
add
push
jge
push
jle
pushf
repnz
in
push
filds
dec
cmp
lock
dec
inc
jo
lock
fstl
lods
sbb
inc
inc
loop
inc
xor
or
or
jge
cmpsb
dec
cmp
leave
popf
cmpsl
mov
mov
shlb
pop
orl
or
xor
fidivrs
and
fs
inc
jmp
inc
jo
add
inc
sahf
cli
addr16
and
add
or
jne
cld
lock
addl
add
and
movsl
push
or
inc
fsubr
or
push
sbb
mov
adc
xchg
icebp
ds
lret
jmp
pop
cmpsb
sbb
or
roll
push
inc
mov
adc
cmp
mov
sbb
aam
cmpsl
mov
cmp
into
sub
rolb
test
xchg
rclb
add
add
cli
sarb
pop
adc
push
mov
scas
add
xlat
xor
dec
pusha
out
fwait
pushf
mov
jge
add
fdivl
lret
dec
gs
xchg
les
aam
push
add
fldcw
or
cmpsl
mov
mov
push
or
adc
movsb
adc
push
imul
or
sub
fstps
shl
out
jns
ror
lcall
add
mov
add
and
and
fidivrs
inc
ret
mov
repz
mov
jnp
andl
in
test
push
and
or
popa
shl
cmp
xchg
movsl
shrl
push
sahf
mov
dec
ss
rorb
data16
push
divl
jo
dec
loopne
mov
arpl
add
into
es
movsb
and
dec
je
das
lea
lahf
or
arpl
sub
in
ret
push
pusha
nop
cltd
xchg
pop
mov
pop
in
push
lea
test
adc
sar
movl
in
inc
inc
lcall
and
pop
outsl
sub
fwait
lds
jmp
ljmp
adc
fwait
mov
insl
leave
jo
push
pusha
and
adc
lods
test
sub
loopne
jp
scas
xor
mov
cmp
adc
hlt
int
push
and
sbb
sub
cmp
movsb
xchg
add
fwait
mov
adcb
rcrb
enter
add
mov
cmp
ds
mov
test
dec
pusha
movsb
loopne
ja
and
mov
mov
or
sbbb
hlt
push
into
dec
cmc
dec
test
inc
arpl
pop
xor
imul
or
call
inc
ss
fcompl
jmp
incl
adc
je
cltd
sti
gs
test
gs
pop
cmp
or
sbb
fwait
cwtl
shrb
xchg
inc
fsubs
jge
repz
bound
lret
jae,pn
mov
add
cmp
mov
mov
inc
sbb
adc
push
pusha
push
push
push
jp
jo
sub
es
push
xlat
push
frstor
mov
test
sub
pop
or
imul
cmpsb
mov
loopne
cs
cmp
pop
and
cmp
cmp
sbb
or
add
mov
es
addb
mov
mov
lea
sarb
mov
xor
loop
and
sbb
add
shr
add
fcom
push
pop
cmp
adc
mov
pop
sub
mov
in
test
outsb
dec
jmp
jg
cmp
call
add
aaa
jmp
add
outsb
dec
loopne
and
ret
and
add
jns
dec
loopne
inc
inc
enter
sub
jl
sbb
pop
ret
adc
or
movsb
pop
or
mov
mov
lahf
sbb
scas
adc
mov
lcall
fldt
mov
mov
mov
nop
inc
adc
xchg
test
and
fsubp
lds
gs
inc
imul
rcrb
sub
cmpsl
add
push
insl
aad
dec
sbb
sub
scas
mov
add
dec
jl
mov
sbb
adc
mov
add
cmp
adc
in
sub
ret
enter
jo
sub
push
jge
insb
xchg
pop
jo
mov
pop
mov
xchg
jb
xor
mov
xor
add
xor
loope
sarb
cmp
or
and
dec
mov
jge
mov
xor
xchg
adc
adc
cmp
into
add
das
sbb
popf
sbb
mov
xlat
add
xchg
stos
inc
outsl
push
inc
ds
hlt
dec
int
add
mov
pop
sbb
mov
cmpsl
and
cld
mov
clc
xchg
inc
sub
add
sahf
jp
in
mov
cmp
push
add
push
aam
stc
rorb
dec
mov
adc
dec
push
scas
sub
in
jle
xor
push
pop
js
sbb
cmp
and
pop
aaa
xor
mov
or
pusha
xor
or
add
pop
sbb
lods
sbb
mov
xchg
iret
dec
loopne
in
push
add
or
push
into
fnsave
push
orl
imul
insl
add
adc
jne
push
leave
add
adc
inc
stos
or
inc
repnz
sarb
pushf
int3
aam
pop
imul
fs
jecxz
es
sub
mov
dec
int3
incb
xor
mov
dec
enter
push
or
push
pop
mov
popa
sbb
in
jge
add
adc
loopne
adc
fwait
pop
inc
ret
jo
dec
aam
inc
cmpsl
ret
jb
adc
pop
xor
adc
mov
push
repz
outsl
int
push
pop
fcoms
lcall
or
add
std
sub
in
inc
nop
push
push
in
ds
mov
and
insb
pop
push
nop
outsl
fnsave
mov
push
test
xorb
dec
xchg
adc
sub
dec
xlat
inc
fsubrs
gs
ret
in
mov
pop
jmp
aaa
js
sbb
pop
and
hlt
movsb
roll
add
cltd
lods
adc
push
ja
cmp
daa
push
adc
or
mov
ret
jecxz
sub
or
andl
push
push
xor
sbb
test
xchg
loope
push
push
pop
int
out
imul
incl
pop
or
loop
cld
lock
mov
es
popf
add
cmpsb
lods
mov
mov
mov
in
mov
outsb
sbb
orb
add
cld
push
jae
sub
mov
aaa
push
aam
xchg
data16
or
ret
test
jp
pop
sbb
lods
daa
mov
mov
and
push
sub
mov
ljmp
push
adc
addl
arpl
mov
idivb
ss
mov
ds
pop
sub
cmp
jbe
ret
pop
lods
add
sti
dec
push
add
add
sbb
xor
sub
popa
dec
push
jne
inc
or
pop
js
sub
fists
scas
ret
lret
push
add
add
rcrl
dec
add
add
inc
jle
jae
cli
cmpsb
mov
mov
testl
or
lock
lret
lock
dec
mov
adc
test
cld
add
das
cmpsl
push
mov
test
add
push
mov
add
mov
or
insl
add
add
push
cmp
insl
popf
insl
pop
or
outsb
add
adc
repnz
dec
mov
or
mov
mov
dec
adc
cmc
fwait
inc
xchg
js,pt
mov
jo
stc
push
adc
mov
flds
xor
insl
xchg
jb
test
arpl
call
add
adcb
or
or
sarb
js
and
pop
rorl
es
jno
scas
or
mov
push
cmp
xor
fiadds
add
cmp
sbb
or
mov
scas
sti
mov
clc
push
cmpb
jp
inc
es
xor
pop
loope
pop
cmp
push
bound
ret
and
xor
mov
adc
mov
loop
pop
or
pop
lea
xchg
cmp
xchg
inc
add
add
xchg
shlb
inc
out
add
loopne
fmull
mov
add
or
mov
sbb
jne
les
arpl
mov
mov
pop
loopne
push
mov
push
pop
shl
mov
mov
or
inc
or
mov
sahf
xchg
pop
mov
movsl
mov
dec
push
inc
pop
mov
sbbb
push
cmp
push
fists
call
dec
or
addr16
sub
inc
push
jl
push
xchg
mov
mov
or
adc
bound
push
aaa
loopne
mov
das
pop
mov
jns
jno
jle
push
sti
mov
dec
pop
inc
aaa
ret
leave
mov
push
jne
push
cmp
clc
mov
dec
jbe
push
mov
xchg
and
jbe
imulb
cmp
shrb
lods
ret
mov
pop
pusha
leave
lret
add
push
mov
and
cmp
aaa
xor
loopne
ds
push
repnz
cs
mov
xchg
cmpsb
push
les
mov
push
xchg
nop
mov
arpl
push
loopne
and
push
and
mov
jae
call
cmp
pop
and
push
aaa
dec
in
dec
pop
adcb
jbe
xor
mov
inc
addb
arpl
rolb
add
mov
or
inc
or
cwtl
cmp
addb
or
lcall
out
imull
test
pop
mov
or
mov
lret
pop
inc
test
and
sbbl
int3
fwait
test
mov
xor
icebp
scas
jl
mov
insb
xchg
nop
fs
push
dec
nop
mov
mov
or
movsb
lods
mov
mov
add
rcrb
jne
pop
pop
int3
dec
shlb
data16
push
scas
cmp
cmp
mov
jne
test
insl
sbb
outsl
sbb
jns
dec
insb
jne
addb
mulb
sub
mov
inc
sti
jge
add
lea
push
ficoml
pop
sbb
addb
aas
adc
mov
mov
shrb
xor
shlb
mov
mov
xchg
xchg
or
in
adcl
jo
enter
add
add
dec
js
sub
xor
fistps
mov
and
jmp
add
push
sbb
add
sbb
test
andl
cmpsl
loope
jle
fcomps
adc
pop
mov
ret
add
inc
mov
and
jge
je
sbb
jg
and
and
push
mov
addb
in
mov
les
or
mov
jmp
outsb
ss
or
add
sub
andl
orb
lea
jo
jmp
xor
adc
xor
add
dec
xchg
imul
push
xor
push
mov
mov
aaa
cmp
dec
adc
gs
adc
cwtl
aam
inc
mov
mov
fwait
lcall
ja
jo
xchg
xor
out
mov
out
lea
ret
sub
int3
push
push
cmpsl
push
sbb
xorb
and
in
add
aaa
xor
or
lret
sbb
sbb
push
mov
imul
je
rsqrtps
out
sub
and
jl
imul
mov
mov
decb
sbbl
xor
mov
gs
in
rorl
cmpsl
in
mov
push
jmp
inc
inc
xor
xor
loopne
test
sbb
jb
jmp
cwtl
rcl
push
inc
in
fistpl
out
xchg
push
mov
das
subl
fidivrl
push
pop
sub
lahf
in
test
cmp
push
pop
sub
movsl
dec
pushf
xchg
cwtl
or
inc
sbb
mov
adc
dec
mov
push
jl
std
mov
add
mov
gs
cs
aad
insl
lock
sbb
and
jo
push
dec
lret
cmp
loopne
dec
iret
xchg
push
dec
jb
icebp
push
or
movsl
jo
push
inc
cs
lods
ret
push
scas
call
pop
in
in
and
lock
xchg
jmp
pop
cmp
inc
jg
push
push
fwait
cmpsl
or
or
shrl
je
cltd
pop
leave
flds
cmp
pusha
or
mov
sti
in
or
daa
iret
repz
dec
stos
stos
push
and
push
movb
xor
or
xor
imul
mov
or
jecxz
pusha
ss
ds
pop
mov
les
roll
sbb
add
mov
or
arpl
cli
rclb
scas
std
packsswb
or
jno
pop
adc
pop
xchg
mov
test
push
push
cmp
cmp
inc
add
repz
lods
xor
sahf
sbb
xchg
sbb
add
lods
add
mov
or
jno
jmp
add
aaa
test
mov
jne
and
jl
adc
sbb
icebp
lock
jg
faddl
sub
cld
add
push
push
movsl
lods
jg
add
faddl
fstl
aaa
add
xor
loopne
pop
or
jp
fstp
fsubr
pop
faddp
adc
pop
fildl
arpl
lock
pop
ret
sbb
mov
imul
and
xlat
mov
fistl
lods
aam
mov
cmp
xchg
xor
scas
pusha
jo
cmp
mov
xor
test
pusha
jge
adc
and
jle
sub
aam
imul
inc
add
mov
or
fstpt
lea
push
or
sbbl
mov
into
push
frstor
mov
jecxz
lret
adc
stc
mov
rorb
aaa
cmp
call
jmp
or
dec
mov
int3
dec
sbb
xchg
jae
push
sub
sub
mov
jne
pop
in
ja
mov
mov
push
mov
push
jl
test
jns
call
mov
clc
cmp
jge
and
aaa
inc
push
add
dec
xchg
inc
sbb
push
xchg
mov
push
loope
cmpsb
mov
bound
jmp
rorb
adc
cwtl
aad
sbb
jns
aad
aaa
cwtl
loope
test
filds
pop
add
cmp
xor
xor
movsb
inc
pop
lock
or
mov
or
imul
inc
add
xchg
aas
or
dec
jns
mov
mov
push
cmp
fsts
or
movsl
pop
test
mov
mov
inc
shlb
inc
lods
mov
mov
mov
bound
push
rorb
jmp
lret
test
js
push
inc
dec
sub
push
ja
mov
insl
ret
add
aas
push
dec
mov
or
ret
leave
jp
imul
repz
pop
jp
pusha
or
dec
or
jne
pop
arpl
add
cmc
lock
pop
sub
loope
bound
clc
mov
push
fcmovnb
movl
in
call
mov
in
or
mov
scas
or
add
sbb
mov
jle
or
dec
scas
adc
push
pop
in
pop
mov
sub
add
test
aaa
jecxz
or
nop
xor
dec
adc
xchg
adc
lret
imul
and
pop
stos
xor
and
xor
fcoms
inc
xor
mov
rorb
int
loop
or
bound
mov
cmpb
xor
xchg
jnp
adc
and
mov
daa
gs
sub
fildl
dec
dec
or
or
adc
bound
pusha
mov
xor
adcb
ret
mov
mov
lock
or
orb
adc
or
pushf
and
arpl
add
jmp
add
push
push
add
inc
jecxz
lods
push
push
sub
loop
pop
xor
mov
scas
push
lret
pusha
mov
lret
pushf
popa
mov
inc
rclb
push
pop
adc
clc
or
hlt
and
pop
repz
pop
and
lock
clc
mov
repz
push
sub
add
or
stos
cmp
cmc
jns
icebp
fwait
sbb
test
stos
mov
push
data16
mov
mov
mov
out
enter
lret
mov
in
out
mov
adcl
ficoml
jl
in
cmp
sbb
xor
bound
mov
jl
jnp
adc
jno
mov
lret
pop
call
pop
push
cltd
fmul
mov
xchg
mov
lret
sub
in
pop
push
mov
push
and
push
mov
push
sub
add
lods
jmp
addr16
ret
mov
add
jns
pop
or
add
xchg
jns
fs
clc
xor
mov
inc
pop
int3
and
add
push
or
push
jecxz
outsl
add
pop
jo
sub
scas
leave
jmp
imul
dec
xchg
adc
rorb
lods
xor
mov
sbb
inc
dec
mov
xor
sub
mov
scas
aad
das
jns
cmp
cmp
sbb
adc
hlt
dec
pop
dec
push
mov
lods
int3
test
mov
dec
fstl
xor
addr16
jle
cmpsb
dec
cmp
sub
pop
xchg
in
aam
lock
dec
stos
xor
or
cli
loope
popf
mov
pop
lods
jl
les
ret
sbb
jp
or
call
mov
pusha
insl
fsubs
std
movb
and
ss
xor
pop
adc
add
adc
cmpsb
inc
add
test
subb
mov
pop
adc
pop
push
jg
jge
mov
or
pop
in
sbb
pop
or
jmp
xor
xchg
mov
mov
push
push
add
sbb
push
xlat
mov
adc
or
cld
dec
test
test
push
jbe
jl
xchg
and
ret
adc
sub
xchg
inc
je
adc
rorb
mov
cmp
test
or
ljmp
push
aaa
call
imull
test
xor
xor
sahf
dec
mov
mov
xor
ds
jl
cmp
mov
push
das
insb
or
mov
or
in
popa
or
movsl
aas
mov
imul
push
in
lock
sbb
push
cmp
xor
jne
lock
lock
push
xor
clc
xchg
adc
jmp
out
ret
cmp
dec
adc
pop
and
pushf
inc
dec
lea
and
cmp
add
inc
test
push
mov
add
leave
lock
stc
mov
repz
call
push
mov
data16
xchg
lock
pop
into
jno
and
and
sub
dec
in
xchg
add
fdiv
aam
popf
xchg
mov
add
les
adc
push
loope
or
out
sbb
aad
mov
or
cs
push
sbb
jbe
sbb
cmpb
sbb
cmp
sub
cmp
jne
lcall
addl
ret
sar
and
daa
js
enter
mov
pop
popa
add
mov
repnz
xchg
or
add
dec
inc
mov
cmp
push
pop
push
sub
call
xchg
adc
insb
insb
jb
daa
jl
clc
jl
xor
push
sbb
dec
sahf
dec
lcall
movsl
jns
loopne
rolb
ret
leave
loopne
dec
ds
inc
push
fwait
nop
out
nop
sbb
add
and
in
mov
push
sbb
adcl
cmp
std
lcall
aam
lock
jl
inc
mov
or
mov
ljmp
jp
aad
stc
inc
pop
push
and
xor
cli
fisttpl
push
stos
push
cmp
cmc
dec
inc
mov
test
cmp
cli
dec
ficomps
out
push
adc
xchg
sub
testb
push
in
mov
pop
cltd
jg
push
jmp
daa
inc
leave
lahf
jp
push
jo
xchg
movsl
jo
fmuls
ret
sub
add
push
hlt
jge
shrb
or
imul
pop
lods
or
dec
pop
call
stc
pop
or
ret
push
or
fsubr
sbb
xlat
adc
or
hlt
sub
add
xor
mov
faddl
adc
dec
repz
loopne
jo
int
or
push
popa
scas
movsl
in
cmp
ret
mov
inc
add
out
adc
push
pop
repz
jmp
inc
xchg
xchg
xor
insb
or
rcrb
in
scas
jecxz
add
out
call
dec
add
ret
fcom
lret
in
leave
push
int3
sub
jg
sbb
xchg
mov
cmpsl
push
clc
imul
dec
bound
lret
inc
jmp
push
mov
pop
testb
es
push
cmpsl
cmp
sub
lahf
or
cli
pop
nop
lock
mov
inc
sub
or
push
cmp
mov
ss
cmp
dec
push
int
cs
inc
fdivs
ret
hlt
and
push
dec
adc
into
rolb
add
mov
cltd
les
fld
adc
or
ret
rorb
sub
xchg
pop
push
test
imul
lea
xchg
mov
and
dec
sub
dec
outsb
fistpll
insl
or
dec
sbb
sbbb
mov
cmp
or
data16
mov
inc
cmp
sbb
imul
imulb
dec
popf
into
lret
mov
arpl
mov
cmc
xchg
and
inc
sbb
fnstenv
mov
loop
data16
cmp
out
out
add
and
cmp
rol
cs
enter
push
add
push
inc
jl
lahf
dec
lahf
lret
sub
push
xor
add
adc
cmp
add
push
nop
ret
ret
push
shlb
sahf
inc
inc
dec
push
xchg
inc
mov
adc
pop
pop
push
and
ds
sbb
jbe
clc
insb
sbb
inc
andl
dec
xchg
dec
xchg
nop
test
addb
pop
lea
ret
push
fimuls
mov
clc
lods
popa
loopne
in
or
addl
mov
and
js
inc
mov
int
jo
loope
pop
int3
cmp
lods
xorb
mov
pop
pop
add
rclb
or
aas
orb
add
out
adc
pop
and
adc
fisubs
mov
cmc
cmp
pop
aaa
adc
push
adc
arpl
push
enter
xor
in
cli
std
pop
cmpl
pop
dec
sub
cmp
jl
xor
push
sbb
jmp
sahf
adc
enter
or
enter
sub
and
mov
or
mov
add
iret
and
movsb
and
sbb
jecxz
adc
fisttpl
adc
inc
add
je
mov
sbb
xlat
pop
jno
push
ret
mov
or
inc
or
test
imul
and
or
lock
or
mov
icebp
inc
dec
aaa
sar
add
add
cmp
pop
pop
pop
adc
ljmp
adcb
fwait
enter
sbb
dec
cmp
add
in
push
push
inc
mov
insl
nop
dec
jge
xlat
mov
add
fisttps
mov
inc
mov
mov
cmc
pusha
pop
inc
pop
pop
movsl
ret
pop
pushf
xor
aaa
push
adc
push
mov
sbb
push
roll
push
pop
mov
sbb
mov
pusha
lea
mov
pop
pop
cmp
mov
cltd
cmp
inc
sub
in
je
orl
les
cmp
jl
xor
or
into
mov
in
fdivrs
add
add
pop
pop
sub
neg
xor
cmpb
es
into
jl
shrl
pop
enterw
xor
or
rorl
std
dec
mov
push
insb
pop
ficomps
sub
mov
cmp
ds
inc
inc
pop
jbe
fidivrs
jl
jmp
or
xor
ds
dec
fwait
push
loopne
mov
into
outsb
out
dec
inc
and
pop
jne
jns
pop
mov
clc
sti
push
jmp
push
add
add
sbb
fcomp
mov
dec
int
stos
xor
push
pop
mov
outsl
lock
jne
jns
push
mov
push
fwait
rcl
dec
push
jge
lret
push
sbb
pop
xor
push
lea
xchg
flds
shl
cs
dec
add
sub
stos
xchg
sahf
cwtl
xchg
js
aaa
popa
push
mov
mov
fadd
sbb
pop
subb
xor
or
stc
test
lods
fcmovb
pop
orl
adc
sar
pusha
fistpll
add
ss
dec
push
add
push
push
add
dec
rcrb
sub
sbb
push
mov
cmp
call
stos
or
push
clc
mov
and
and
fcmovbe
pop
and
mov
dec
shll
cmpsl
cmp
addb
sub
shrb
addr16
imul
das
add
mov
jle
loopne
add
or
shll
xchg
mov
ficoml
lock
aam
popf
stc
xor
xchg
mov
aam
mov
pop
pop
jg
cmp
mov
rcrb
mov
push
scas
xor
sub
cmp
pusha
test
out
popa
out
subl
insb
dec
in
jge
dec
inc
adc
push
in
test
sub
mov
xchg
adc
or
push
xor
push
cmp
aam
gs
callw
jne
xchg
test
sbb
add
mov
pusha
divl
movsl
push
inc
mov
mov
pop
push
or
cmpsl
sub
mov
push
push
roll
inc
or
aaa
add
andl
fiadds
imul
xor
rcrl
mov
ret
add
in
aam
loope
push
add
sub
ss
adc
inc
cmp
jne
push
jmp
cmp
ljmp
jmp
test
inc
add
adc
pop
sub
rcrb
fisttpll
in
cmp
cld
mov
inc
push
mov
xor
aam
or
mov
mov
push
rcrb
pusha
xchg
stos
mov
adc
lods
mov
cmpsb
ds
mov
out
jl
out
xchg
mov
pop
pop
mov
popf
call
bound
inc
outsl
call
add
sbb
or
jno
pushf
pusha
orb
or
dec
cmp
shlb
fidivrl
test
movsl
mov
adc
mov
je
mov
push
and
jnp
jne
mov
shlb
jne
and
mov
push
sub
mov
push
pop
lea
out
pop
push
mov
adc
jp
scas
jnp
push
popa
test
push
cmpsb
jo
mov
mov
sub
fs
xor
mov
push
and
mov
inc
insl
add
movsl
and
shlb
pop
xchg
aad
ljmp
ss
jne
aad
fsubs
and
add
std
subl
stos
nop
hlt
jo
and
pop
rcrb
mov
bound
psubsw
ss
or
les
add
sub
fldl2e
dec
push
dec
mov
insl
lods
ja
inc
adc
insl
imul
adc
push
dec
dec
in
xchg
clc
push
adc
iret
sbb
add
add
push
jnp
rcrl
and
ret
stos
vmovlpd
adc
and
pop
push
mov
mov
add
dec
cmp
xchg
and
rcll
fisubl
jmp
add
push
xchg
push
ja
add
push
or
and
pop
ret
test
add
popf
xchg
lock
outsb
jl
mov
adc
or
inc
test
jbe
xor
mov
popa
sub
lea
in
or
lock
test
mov
lret
inc
dec
jae
inc
scas
add
popa
jle
call
add
lock
and
popa
adc
popa
insl
sub
sub
sbb
rcrb
testl
jns
push
dec
adc
adc
pop
sub
xor
or
jg
push
mov
setge
outsb
loope
addr16
mov
cmpsl
and
push
ja
pop
add
jl
daa
dec
and
movl
inc
popa
ret
inc
lret
cmpl
lahf
sub
pusha
repz
add
and
xchg
xor
in
adc
icebp
adc
xchg
nop
sub
xor
fucomip
push
lods
jmp
inc
lahf
mov
movsb
adc
add
jg
adc
dec
hlt
jl
push
push
push
push
pusha
sub
arpl
push
push
or
jle
lcall
daa
jo
pop
cmp
hlt
stos
cli
lea
ret
iret
js
adcb
and
and
mov
ret
in
add
mov
mov
rol
and
in
in
hlt
cmp
push
push
sub
jo
mov
mov
cmp
orl
fs
or
das
add
call
xchg
aam
jae
test
mov
inc
aad
sbb
inc
xchg
jne
mov
mov
xchg
imul
or
repz
push
int3
pop
jl
push
pop
orb
xchg
cwtl
mov
insl
dec
xchg
sbb
imul
lret
call
popa
xor
mov
cmp
dec
mov
cmc
inc
or
test
jg
and
sbb
shll
iret
clc
xlat
out
movsb
xor
repz
xor
push
and
mov
int3
filds
jne
movsl
orb
fadd
std
mov
mov
mov
xor
cmpsl
mov
add
scas
roll
enter
loopne
inc
lahf
cmc
bnd
xchg
cmp
cmp
jl
insb
in
lea
jmp
push
enter
icebp
lahf
fistl
out
imull
push
les
cmp
add
imul
add
mov
cltd
in
sahf
sub
sarb
xchg
pop
dec
push
adc
dec
fsubs
pop
xchg
pop
mov
test
arpl
lds
push
cmp
andb
or
sti
add
mov
aas
pusha
loopne
jae
push
push
xor
or
add
add
jb
adc
mov
call
pop
enter
or
or
mov
or
mov
push
scas
xor
dec
or
loopne
or
js,pt
and
push
pop
push
push
lods
dec
push
cli
ss
adc
into
orl
in
xchg
inc
arpl
xor
rorb
roll
or
inc
mov
or
push
jo
pop
push
mov
mov
cmc
sub
push
mov
jae
add
mov
fadds
dec
shl
fucom
dec
add
xor
ds
or
and
imul
adc
adc
popf
sub
xchg
rorl
sub
inc
or
inc
xchg
adc
sbbb
movb
adc
and
push
orl
mov
addb
inc
sbb
sarl
and
mov
popl
sub
add
out
mov
or
sbb
mov
jge
bound
mov
sbb
scas
adc
push
cmp
adc
in
jo
and
iret
dec
std
insb
sbb
leave
in
push
mov
or
sub
dec
call
movsl
fwait
loopne
subb
test
add
mov
rorb
dec
pop
inc
in
call
add
test
and
jbe
insb
add
hlt
jmp
in
insl
and
push
lea
dec
enter
in
inc
andb
mov
shl
push
jmp
sbb
pushf
cmp
mov
jne
pusha
fmul
sbb
fsubrs
mov
pop
add
sub
adc
call
mov
ret
add
fstpt
cmp
mov
fdivrs
mov
xor
inc
int
data16
testb
imul
add
rclb
mov
jb
outsb
mov
ret
out
xchg
out
imul
push
sub
sub
jno,pn
test
lods
loopne
cmp
mov
xor
mov
pushf
mov
mov
adc
mov
xlat
xor
cmpsb
jb
or
or
std
mov
cmp
jecxz
cmp
dec
rcrb
pushf
jo
out
jl
xlat
add
out
add
sbb
das
shll
sub
xor
jno
xor
test
sub
stos
ja
inc
mov
mov
xlat
das
push
push
xor
or
aam
scas
lret
mov
pop
push
sarl
sub
cli
pop
mov
rcrb
add
ret
shrb
into
mov
or
rorb
mov
add
ret
sbb
and
cld
fisubrs
and
push
mov
jnp
jnp
push
adc
es
shll
add
rcr
push
shrb
lret
mov
gs
xchg
ss
sub
popa
filds
stos
ljmp
lods
cmpsb
mov
lock
movb
dec
or
pop
out
sub
or
mov
pop
in
mov
in
mov
enter
pop
push
push
sahf
mov
add
into
repnz
add
into
inc
xor
addr16
mov
test
icebp
nop
dec
stos
push
mov
sarb
mov
sbb
jo
mov
or
sub
call
and
push
or
push
shl
push
mov
mov
icebp
in
mov
or
mov
stc
dec
mov
pusha
xchg
out
jmp
cmp
mov
jo
add
iret
repnz
push
mov
jle
dec
loopne
xor
aam
cmpsl
frstor
and
fmull
sahf
lret
in
js
dec
sbb
add
mov
push
sbb
les
or
cmc
sub
in
xchg
xor
addr16
idivl
cmpb
shlb
add
enter
xor
add
sbb
and
test
and
add
cwtl
mov
inc
iret
mov
pop
or
push
ss
clc
sbb
sbb
movsb
mov
or
sarb
jo
lods
adc
mov
mov
fs
jmp
cmpb
and
add
lds
mov
mov
push
popa
mov
orb
popa
neg
int3
jne
movsbl
jg
movsb
mov
pop
jecxz
clc
adc
xor
and
paddb
push
addl
mov
adc
daa
loopne
rcrb
xor
hlt
push
mov
outsb
rclb
xorl
xchg
xchg
loope
inc
and
lods
sbbb
fcmovnb
les
test
add
jle
fimuls
cmpl
idivl
cltd
mov
mov
jl
adc
sub
xchg
imulb
mov
test
sub
or
jae
mov
cmp
out
cmp
push
add
imul
hlt
push
push
xor
pusha
sbb
shl
push
orl
dec
ja
xchg
sbbb
ret
scas
addb
sub
std
clc
daa
in
xor
add
daa
daa
daa
daa
add
push
pop
daa
daa
or
or
jnp
or
fwait
fwait
fwait
fwait
jbe
jmp
or
por
fwait
bound
jmp
adc
pop
adc
push
adc
fwait
fwait
fwait
fwait
dec
adc
dec
adc
aas
pop
jmp
fwait
fwait
fwait
cmp
jmp
sbb
xor
jmp
sbb
fwait
fwait
fwait
fwait
es
and
pop
pop
jmp
dec
fwait
fwait
adc
jmp
and
int3
and
and
test
push
orb
mov
mov
adc
adc
aas
mov
fucom
fidivrs
out
cmc
std
add
jns
out
sbb
out
sahf
out
cmp
dec
sahf
out
sahf
dec
push
pop
pop
arpl
sahf
out
insl
jb
jl
out
sahf
out
mov
push
push
pop
into
add
add
push
pop
or
and
or
push
decl
adc
adc
push
pop
sbb
sbb
sbb
push
pop
and
and
aas
nop
int
push
push
movb
movsl
push
cmp
jae
test
jno
leave
mov
mov
ss
mov
sub
mov
or
mov
cmp
pop
fiaddl
call
les
cmpsl
lret
jp
pop
aam
andl
add
out
mov
mov
je
popf
add
or
fsubl
xor
adc
fst
mov
jb
inc
fs
cmp
outsb
test
xor
addr16
and
mov
push
push
aad
pusha
adc
jno
inc
mov
lock
or
cltd
cli
jmp
loope
movsl
mov
ds
xchg
jb
setnp
cltd
xchg
shll
sti
adc
outsb
xor
inc
jmp
xchg
addb
xor
sub
and
loopne
adc
faddl
lcall
enter
pop
mov
in
test
mov
rcrb
clc
adc
sbb
ljmp
and
gs
push
pop
inc
in
adc
jmp
dec
outsl
push
xor
add
pop
rcrb
clc
cmp
jge
and
or
sbbl
or
stos
cmp
pop
cwtl
or
or
cwtl
sbb
mov
mov
xor
shll
dec
fdivrs
adc
ja
mov
add
inc
loopne
ss
push
fidivs
inc
pusha
xor
ret
imul
xchg
xor
jo
pop
add
push
xor
in
dec
loop
push
xor
incl
mov
ror
xor
shr
xor
incl
mov
rol
xor
shr
xor
add
add
pop
popa
add
inc
pop
jg
popf
addr16
or
insl
push
or
and
fistl
add
add
push
add
in
fsubr
add
or
mov
ror
mov
fisubl
or
add
xor
and
and
mov
push
rcr
or
adc
test
xor
fs
sub
repnz
repnz
dec
imul
sub
fmull
pop
add
ja
push
or
xlat
and
sbb
jbe
ror
add
add
add
add
xor
cs
xchg
lret
call
adcl
inc
push
xor
ljmp
imul
xor
add
push
push
cs
cmpsb
xor
fsub
lcall
in
xchg
add
cmp
and
in
fwait
push
cmp
repnz
adc
add
repnz
add
pusha
push
and
pop
cmp
aaa
fadd
xor
cmpsb
ss
loopne
in
and
dec
inc
jo
loopne
cmp
pop
pusha
and
aam
jns
xchg
xor
mov
adc
icebp
or
cmp
cmp
add
cli
andb
xor
lock
hlt
call
or
push
and
xor
add
or
addl
aas
mov
jge
push
call
push
jo
ficoms
dec
add
cmp
into
aam
or
filds
inc
fbld
je
loop
mov
pop
inc
sbb
mov
fadds
pop
fs
js
std
push
and
fisubrl
add
shl
push
clc
jl
push
and
add
and
rol
push
cmp
xor
fs
call
sarl
jle
aam
xchg
ficompl
add
cli
mov
push
adcl
aam
cmp
inc
lcall
nop
cmpsb
in
in
and
shl
rolb
dec
sbb
scas
add
cli
ss
lret
js
xor
inc
rcrb
inc
sub
dec
xchg
sub
or
shrb
xor
inc
in
inc
add
leave
or
and
adc
dec
xorl
pushf
and
xor
add
push
out
fs
int3
push
push
inc
lcall
xchg
inc
mov
pop
test
lods
or
scas
push
mov
ljmp
loopne
scas
and
scas
inc
pop
and
dec
xorb
fs
in
add
pusha
fsubs
test
pushf
mov
sarl
push
test
fstps
lret
push
sahf
adc
imul
enter
fxch
pop
testb
lods
push
mov
xchg
mov
loop
addb
xor
or
fcoml
adc
pop
add
or
and
mov
push
mov
adc
nop
mov
dec
sbb
sbb
shrl
mov
mov
add
cmp
jb
dec
std
or
sub
add
ss
pop
cld
sub
pop
xor
jmp
aad
cmp
sbb
decl
aaa
sbb
sub
lret
mov
out
in
loop
incl
rol
and
lods
subl
dec
jnp
jo
inc
jae
stos
or
sub
movsb
sub
loopne
ljmp
call
add
lea
push
mov
pop
rolb
sar
mov
fimull
pop
jne
pop
push
adc
pop
shl
add
inc
mov
in
xchg
sub
push
enter
clc
aaa
jbe
or
add
mov
fs
outsl
or
or
sub
jae
push
add
fisttpl
pop
rolb
rep
or
add
neg
in
mov
or
mov
push
loope
jg
pop
fdivp
ror
mov
hlt
push
shr
jmp
mov
test
pop
jge
lock
inc
pushf
sub
xor
call
pop
xchg
and
sbb
movb
inc
adc
mov
push
popa
enter
cli
faddl
cmpsb
cmp
jbe
adc
jnp
mov
add
insb
add
lock
mov
or
add
or
xchg
fdivr
mov
daa
lea
imul
cmp
ja
and
les
cmp
mov
sbb
pop
xchg
or
lock
inc
pusha
dec
add
or
inc
adc
or
adcb
inc
cmp
sbb
sbb
add
lods
xor
jbe
push
test
xchg
es
mov
inc
lock
add
mov
push
fmuls
test
pop
pop
adc
sarl
push
mov
mov
inc
fcmovnb
sbb
je
rcr
inc
pop
sbb
mov
stos
xchg
icebp
subl
sbb
sbb
cmp
pop
lock
push
inc
cmp
inc
mov
in
xchg
adc
test
pop
push
add
in
push
inc
pop
mov
pusha
adc
xchg
xchg
sub
imul
and
cmp
hlt
lret
out
fists
lret
lea
adc
ret
mov
sarb
jbe
cmp
sbb
inc
xorb
je
es
shll
cvtpi2ps
mov
movsb
pop
ljmp
mov
and
and
jo
and
xchg
mov
inc
enter
jnp
cmp
and
adc
or
enter
adc
mov
inc
cmp
jl
arpl
adc
ret
fdivrs
nop
or
mov
jle
in
cmp
add
or
fbstp
cli
es
lea
cmp
push
jg
and
or
js
xor
add
or
sbb
jge
mov
inc
push
aad
or
xor
cmpb
idivl
cwtl
imul
icebp
jl
dec
idivb
cmp
push
js
test
jae
rclb
ds
nop
pusha
and
movsl
mov
adc
mov
sub
mov
or
shll
testl
cmpb
pusha
add
jmp
push
aam
or
or
pop
push
inc
in
xorb
or
jl
jmp
aas
ret
mov
and
cwtl
add
or
and
lea
sub
push
xchg
mov
cltd
ja
inc
in
inc
xor
sub
dec
aam
mov
loope
push
push
shll
ret
and
mov
or
popf
test
or
dec
cmpsb
imul
push
adc
and
js
sbb
add
pop
xor
jne
test
xorb
dec
pop
mov
and
push
push
sbb
jl
outsb
push
pop
push
sub
pop
test
dec
sti
cmp
push
bound
push
add
insb
jmp
cmp
sbb
and
clc
mov
stos
cmp
inc
xchg
add
add
mov
mov
inc
xor
add
and
push
sarl
loope
and
cmp
add
sbb
or
ret
and
rolb
mov
or
les
sub
inc
mov
add
mov
in
insl
les
sbb
cmc
dec
and
fwait
outsb
xchg
jno
and
lret
test
or
mov
iret
add
ja
pop
xor
push
ljmp
push
jmp
mov
aas
push
push
add
push
rcrb
push
dec
pop
pop
inc
arpl
jb
dec
push
shrb
mov
and
clc
je
orl
mov
pop
testl
or
rcll
sbb
arpl
mov
jne
push
sbb
stos
inc
mov
pop
pop
and
mov
or
mov
mov
mov
bound
jle
repnz
push
sub
or
dec
pop
lods
pop
inc
push
push
fbstp
loopne
adc
push
aam
mov
or
sub
fnsetpm(287
push
les
daa
outsb
push
add
xor
aaa
int
int3
adc
lea
lock
push
ret
mov
dec
adc
push
inc
pop
aad
push
repz
sbb
adc
ja
leave
popa
dec
mov
xor
inc
push
jg
adc
or
addl
out
and
ret
mov
rcl
mov
add
mov
addr16
iret
inc
and
jnp
pop
in
add
scas
pop
jmp
xchg
and
ss
add
adc
mov
xchg
clc
stc
and
or
cmp
popa
in
mov
mov
adc
jg
cmp
and
xchg
clc
cmpsb
mov
add
es
cmc
mov
and
add
adc
mov
add
call
ret
or
push
add
movsb
sub
fiaddl
shll
cmp
inc
popa
shlb
rorl
jl
pushf
scas
int
sub
stc
push
sbb
ret
xor
insl
adc
rorl
divl
test
fnstenv
pop
bound
das
out
out
mov
mov
sub
dec
xor
push
fnsave
shll
inc
or
cs
cltd
jae
jo
xchg
add
cld
cmpl
push
adc
mov
push
or
dec
dec
mov
dec
sub
inc
dec
dec
mov
adc
and
in
pop
push
xchg
icebp
dec
clc
jo
sbb
push
mov
and
xor
data16
sbb
and
ret
ret
mov
int
push
lock
popa
add
push
inc
xor
push
cmpsl
push
hlt
ss
push
xor
fcmovnb
push
pop
adc
xor
xchg
jmp
push
pop
sub
ret
clc
and
mov
ret
mov
adc
mov
adc
and
ja
xchg
popa
rorb
scas
mov
cld
jae
add
xor
dec
mov
jmp
and
mov
jnp
sub
pop
inc
scas
xchg
adc
inc
push
mov
pop
cmp
popf
int3
mov
cmpb
and
call
inc
cs
addl
js
jmp
mov
jecxz
fstps
stc
aas
rclb
and
adc
cmpsb
pusha
and
ds
lds
shlb
mov
xor
fwait
and
or
mov
mov
mov
adc
xchg
pop
div
mov
cvtpi2ps
xor
vmovaps
mov
dec
dec
imul
inc
push
sti
sub
and
imul
sbb
scas
bound
push
nop
xor
inc
adc
jl
pop
and
mov
and
jbe
mov
or
push
or
inc
mov
sub
clc
and
xor
psubusw
cmp
and
imul
cmp
push
mov
test
scas
jb
test
push
sysenter
test
or
je
push
out
xchg
nop
enter
adc
xor
or
iret
inc
and
and
cmp
or
sub
dec
sbb
outsb
lcall
and
andl
lahf
xchg
cli
sbb
cmp
aad
push
in
cld
in
repz
pop
add
pop
sub
cmpsb
cmp
leave
leave
sbb
pop
movsl
xor
movb
xchg
dec
sbb
xchg
jne
push
cltd
or
or
testl
out
sbb
jle
push
je
js
jle
jecxz
lea
fstps
icebp
mov
movq
lahf
lea
push
arpl
in
mov
pop
mov
push
xchg
push
pop
leave
add
movsb
add
daa
inc
xchg
inc
repz
adc
fildl
daa
xchg
fstl
inc
pop
sbb
inc
or
loope
arpl
sbb
int
cmp
fisubs
cmpb
sbb
add
sahf
jmp
mov
xor
pop
cmp
je
and
xor
or
xor
pusha
xchg
cmp
mov
fdivrl
dec
jbe
andb
aas
xchg
ss
adc
mov
mov
aas
adc
sub
andb
cmpb
xchg
or
add
nop
adc
or
mov
inc
fstpl
and
push
jns
xor
cmp
sub
mov
inc
fidivrs
stos
rcrb
stc
inc
jo
pusha
shrb
mov
enter
adc
pop
mov
push
stos
ss
repnz
sub
lcall
adc
rorb
push
adc
mov
mov
sbb
mov
or
test
dec
pop
repnz
push
inc
pusha
cmp
pop
cmp
dec
inc
or
xchg
jbe
mov
les
push
aad
adc
mov
lea
dec
inc
inc
cs
add
adc
cld
das
adc
xlat
jge
mov
decl
add
lea
fstpt
jecxz
push
test
mov
add
mov
in
cmp
das
or
lock
clc
clc
cld
push
clc
or
add
movl
dec
cs
add
add
add
cmpsb
test
and
jle
inc
or
add
dec
je
add
add
jg
dec
jne
mov
and
dec
or
mov
shr
sbb
or
lret
ljmp
xor
sub
icebp
data16
shrl
or
mov
cli
and
and
mov
sub
or
or
jnp
je
push
add
out
loop
push
jb
jmp
adc
add
lret
ljmp
in
add
push
add
inc
jnp
lds
sbb
adc
mov
push
cmp
cmp
sub
add
xor
add
lcall
ret
cwtl
sbb
clc
das
xchg
jmp
ret
cltd
idiv
inc
inc
imul
add
push
cmp
add
les
scas
cld
mov
fdivrl
inc
insl
push
pop
xchg
mov
loopne
mov
add
or
cmp
outsl
push
rcll
mov
cmp
or
loopne
xor
push
push
lock
jge
cmp
je
cmpsl
into
pop
jbe
push
fidivrl
jmp
daa
pop
icebp
hlt
loope
cmp
sarb
in
clc
jae
mov
mov
pop
outsb
gs
int
or
jae
pop
lods
jmp
sbb
add
dec
mov
sub
repz
cld
jbe
cmp
je
cmp
push
cmp
jne
inc
jne
xor
and
sbb
adc
pop
inc
bound
or
es
shlb
mov
ret
pop
je
ret
sub
jne
rorl
sub
and
push
add
js
outsl
mov
decb
inc
sbb
sub
cmp
nop
add
addr16
add
or
inc
mov
std
adc
jl
or
jg
mov
jmp
push
repz
movsl
and
push
jmp
inc
push
sub
aaa
and
mov
jp
add
shl
dec
mov
sahf
dec
fcmove
sub
mov
mov
and
scas
xchg
mov
outsl
adc
test
or
pop
mov
jp
add
das
xchg
rcrl
and
pop
and
sbb
mov
out
sbb
shlb
scas
and
aaa
add
push
pushl
xor
push
inc
cmp
pusha
mov
std
mov
call
imul
mov
addb
roll
aad
inc
lods
aaa
lcall
xor
dec
sub
pop
loopne
inc
pop
inc
xor
gs
jge
inc
imul
adcl
movsb
xor
xor
xor
and
cmp
sbb
adc
vmovhps
orb
movsb
idivb
call
out
jmp
xor
sub
pop
xor
xor
sbb
test
addr16
in
ja
mov
pop
ucomiss
or
fadds
push
cmp
mov
and
out
mov
enter
popa
cmp
test
arpl
and
cmpsb
pcmpeqb
clc
inc
or
pop
xchg
mov
in
push
clc
mov
int
xor
clc
arpl
or
ja
add
jne
mov
mov
sti
or
cmc
cld
imul
sbb
mov
faddl
jle
in
imul
sub
je
xor
leave
or
in
fcoml
rcll
sbb
test
add
add
or
mov
test
sub
push
mov
fdivs
sbb
les
or
adc
jmp
dec
cwtl
adc
inc
inc
pop
mov
je
jbe
or
mov
push
lock
push
pop
push
fildll
cmp
jne
int
je
add
and
hlt
loopne
or
pop
push
add
cmp
imul
or
and
inc
inc
push
sbb
rorb
sub
cmp
popf
popf
adc
shrb
add
cwtl
adc
leave
rolb
lret
outsl
xchg
xchg
inc
jp
adc
xor
xor
icebp
jmp
push
shl
xchg
js
push
mov
mov
mov
ss
add
xchg
rcll
xchg
addb
imul
and
mov
jl
in
xchg
xor
pop
push
sbb
mov
test
rorb
int
inc
mov
jne
push
movb
jo
es
mov
add
rorl
decl
rclb
xor
push
dec
and
sarl
xchg
add
imul
je
sti
out
test
ficompl
cmp
xchg
pop
rcr
nop
mov
xor
cmp
icebp
xor
push
outsb
mov
push
shrb
movl
or
lcall
mov
and
jl
dec
pop
jb
outsl
pushf
sub
dec
inc
mov
or
adc
inc
cwtl
jmp
jmp
enter
push
jmp
and
fadds
or
jno
pop
push
cmpb
jne
mov
and
out
xchg
es
ret
sbb
add
adc
push
add
and
dec
ret
sbb
sbb
inc
mov
xor
movsb
xor
mov
adc
mov
mov
ss
add
dec
pop
push
stos
cmp
and
xchg
push
mov
push
jb
lods
push
xor
add
es
mov
rolb
cmp
outsl
test
lock
mov
arpl
add
add
jo
jp
mov
les
mov
mov
push
addb
adc
call
jnp
in
jne
pop
inc
mov
adc
xchg
dec
dec
and
mov
xchg
xchg
clc
jge
movsl
dec
mov
inc
test
sub
mov
pop
add
and
adc
or
cmp
jns
insb
je,pt
inc
add
mov
pop
scas
lea
mov
data16
out
pop
dec
push
arpl
cmp
es
and
mov
lcall
fisubs
dec
jbe
mov
addl
push
clc
push
arpl
mov
adc
cmp
inc
jo
sahf
popa
sbb
sti
fistpl
orl
push
jo
push
jnp
je
push
das
shl
insb
push
shl
jmp
xchg
pop
xor
mov
cmp
mov
nop
insl
or
xchg
cmpsb
cli
xchg
into
sub
jae
aas
pop
call
inc
dec
xchg
loop
xchg
sub
addr16
cs
mov
mov
mov
or
pop
mov
xchg
dec
adc
sbb
inc
arpl
jge
push
xchg
aam
test
leave
add
es
pop
lret
shlb
mov
or
push
jae
add
movsl
or
lret
sbb
in
lcall
inc
xor
cmp
jb
jne
aas
scas
or
push
dec
call
push
in
jo
xor
ret
sub
imul
push
mov
or
mov
pop
xchg
hlt
xchg
movl
add
adc
stos
or
sahf
adc
mov
mov
push
mov
cld
dec
jne
inc
push
sbb
add
and
aad
xchg
xor
adc
xor
mov
arpl
sub
dec
cld
minps
popf
pusha
or
cmp
or
jb
inc
push
scas
pop
inc
adc
push
inc
adcl
jg
sbb
mov
mov
xchg
dec
sbb
shl
js
jmp
fmuls
pusha
mov
add
inc
shll
push
jecxz
mov
daa
inc
insl
insb
por
filds
fsubrs
or
add
mov
push
sub
or
dec
movsl
rorb
lds
in
pop
and
add
add
pop
pushf
and
incb
out
add
xorl
or
movl
mov
mov
inc
fsts
xchg
pop
xchg
sub
sbb
jmp
cmp
jne
sbbb
add
add
push
pop
data16
bound
pop
jle
push
cltd
js
xor
jno
clc
adc
dec
sbb
data16
iret
dec
xchg
mov
leave
mov
into
je
mov
add
fwait
ja
ds
enter
pop
ret
enter
cld
sbb
sbb
aam
add
pop
push
test
nop
jnp
icebp
mov
pop
sub
sub
call
fwait
es
mov
xchg
nop
push
fcompl
jmp
push
dec
dec
inc
vcomisd
mov
out
mov
and
ret
addr16
stos
lock
adcl
dec
inc
or
cmpsb
stos
arpl
cmc
in
sbb
cmc
pop
xor
jno
or
add
jbe
mov
imul
or
lods
inc
add
addl
inc
call
jns
and
and
in
dec
movb
dec
mov
nop
int
jb
mov
lcall
pop
sub
fisttpl
pop
ret
cmp
push
or
mov
dec
xor
pop
pop
daa
scas
lea
addl
mov
xor
pop
or
and
lock
imul
fucomip
bound
mov
sub
mov
movsl
sarl
shrl
dec
cmp
xchg
pop
adc
addb
push
pop
xor
cltd
loopne
adc
or
aaa
fs
insb
repz
ss
aaa
movsb
xchg
movsb
push
sub
mov
pop
call
and
addb
mov
mov
cmp
sbb
pusha
cmp
test
push
call
add
push
pusha
addl
or
lcall
sbb
jl
add
push
or
addl
adc
xchg
orl
xchg
adc
sub
fwait
sub
orb
stos
and
mov
mov
pop
pop
pop
jno
pusha
xor
xchg
fdivrl
and
jle
fmuls
gs
outsb
fiaddl
adc
push
jo
sub
aam
loopne
and
mov
stc
push
push
popa
jns
mov
inc
or
add
aad
sub
mov
leave
call
sub
fadds
pop
cmpsb
mov
pop
js
nop
xchg
cli
sbb
cmpsl
arpl
out
mov
add
cltd
inc
mov
in
outsl
out
and
mov
jmp
rolb
iret
icebp
xchg
sahf
movsb
push
xor
imul
inc
imulb
pop
pop
ds
cs
iret
pop
cmc
ss
loopne
inc
das
mov
xor
jg
or
sub
and
jg
jb
pusha
and
into
xor
jmp
test
test
mov
fisubrs
dec
mov
pusha
mov
inc
call
into
mov
rcll
mov
or
jo
adc
push
inc
and
and
rorb
mov
xchg
cmp
pop
push
ret
outsl
mov
pop
aas
push
jno
adc
adc
pusha
cmp
adc
push
mov
imul
jae
and
or
pusha
or
shl
adc
lods
test
sub
cwtl
lcall
jno
adc
mov
add
clc
add
pop
jmp
rorb
inc
imul
popf
movsb
add
dec
xchg
adc
dec
pusha
daa
addr16
insl
jecxz
movsb
push
push
pop
push
push
add
ss
shlb
adc
fsts
jecxz
inc
jle
cmp
inc
or
jo
in
jnp
or
sti
movl
bound
aam
sub
sub
add
int
lahf
dec
mov
cmp
adc
es
cmc
nop
jns
test
test
int3
popl
iret
stos
loope
mov
dec
sub
pop
push
cli
or
lock
adc
push
and
mov
adc
dec
adc
ret
js
xlat
add
addr16
mov
jg
jo
mov
std
cmp
rcll
xchg
hlt
xchg
fs
je
xor
lcall
ficomps
js
mov
and
fisubs
jne
cld
mov
mov
jne
pusha
sub
fsub
loopne
inc
jne
pop
push
jae
gs
lods
mov
cwtl
shrb
push
jne
call
add
or
lock
mov
xor
jl
flds
rcr
dec
or
jmp
lea
fdivrp
dec
daa
or
xor
stos
shr
test
dec
cmp
test
add
adc
sbb
pop
dec
push
hlt
adc
sub
pusha
xchg
and
or
test
adc
mov
inc
jbe
aam
push
in
xor
ret
push
cmp
cmp
jge
aas
inc
loopne
loopne
mov
js
je
mov
sub
loopne
jno
sub
call
arpl
loope
lea
jecxz
pop
mov
mov
push
loopne
jp
pop
jmp
sarb
cwtl
jne
repz
addl
push
inc
inc
push
ds
adc
pop
lret
add
jl
outsl
mov
imulb
cmp
pop
mov
bnd
pop
daa
jecxz
xchg
or
push
push
int
or
inc
sub
insb
aaa
mov
cmp
dec
shlb
aaa
mov
push
loop
or
shr
rep
adc
mov
inc
test
adc
and
dec
sbb
push
xor
test
daa
push
jmp
pop
and
mov
mov
fisubrl
sub
mov
sub
push
imul
sbb
cmp
sti
loopne
outsl
xor
jae
out
pop
adc
cwtl
daa
push
or
js
jmp
xchg
xchg
inc
je
lea
adc
pop
jne
aaa
es
and
sub
shrl
pop
syscall
divl
add
xchg
insl
inc
daa
stc
out
jbe
mov
fwait
jne
xor
and
je
ret
in
jle
add
mov
push
cltd
sub
sub
mov
pop
pop
cmp
sahf
adc
and
lea
sub
and
outsl
push
add
or
cmpl
mov
xorb
or
mov
xchg
push
mov
pop
add
lcall
in
cmpsb
adc
sub
fildl
push
sbb
sub
aad
sub
mov
ja
inc
jg
inc
or
sub
adc
and
add
in
and
inc
xor
pop
cwtl
pop
pop
pop
pusha
rcll
xchg
call
inc
mov
bound
xorb
dec
sbb
inc
adc
xchg
cmc
mov
adc
sbb
in
out
aas
xor
loopne
inc
dec
ss
sub
jo
mov
inc
ret
or
mov
adc
and
lcall
cmp
push
jmp
and
mov
lds
call
sub
dec
ja
pushf
ja
inc
jmp
mov
push
xchg
dec
mov
fs
push
clc
imull
stos
loope
add
cs
test
lea
adc
xor
push
dec
xor
pop
je
or
and
scas
sub
sbb
cmp
sub
push
or
jne
lods
aad
flds
inc
push
push
jae
or
adc
cwtl
add
les
cmp
or
pmulhuw
sub
je
push
mov
mov
xor
in
add
stc
in
cmp
cmpsl
or
push
push
mov
nop
or
int
adc
and
ds
ljmp
sbb
clc
je
mov
jb
loopne
stos
lret
inc
and
aas
inc
inc
ds
jnp
cmp
movsb
mov
inc
loopne
out
inc
and
orl
popa
dec
fs
shlb
leave
pop
or
pushf
inc
mov
mov
or
sub
inc
fldt
das
or
nop
or
xor
cmpsb
add
loopne
inc
add
and
push
test
pushl
loopne
lret
push
popf
fadds
push
pushf
stc
jmp
das
icebp
subb
push
lret
movl
lods
pop
hlt
test
ret
add
test
dec
and
or
popa
push
inc
inc
or
sarb
push
arpl
daa
or
add
sbb
and
inc
call
in
push
lock
xor
arpl
cmp
or
mov
aas
inc
push
cmp
or
dec
jo
xor
hlt
add
cwtl
or
movsb
popf
dec
aas
scas
stos
jecxz
lds
jo
ljmp
cwtl
sub
jp
push
jo
and
lea
cmp
pop
mov
sub
add
stc
pusha
adc
mov
inc
adc
outsb
pushw
ret
mov
test
pop
cli
sub
stos
fcomps
fldenv
pop
ja
shll
add
fstps
cmp
jne
push
dec
cmp
mov
movsb
cmc
jp
fwait
mov
cwtl
js
jne
clc
in
xchg
mov
addr16
mov
insl
xchg
jae
jmp
pusha
jle
inc
cli
stos
push
xor
pop
div
hlt
add
lea
movsb
fs
jno
mov
lock
xor
or
push
cmp
adc
jp
xor
mov
jne
or
sub
sbb
mov
gs
push
and
adc
push
stos
sub
add
jno
push
cmp
mov
xorb
push
inc
fisttpl
and
inc
shr
popf
testl
lock
pop
add
or
es
pushf
mov
je
in
jle
push
das
cmp
push
rolb
jmp
adc
sub
sub
jne
bound
les
out
adc
addl
jae
dec
lret
lret
jo
jp
clc
int3
add
xor
inc
push
in
subb
or
clc
pinsrw
test
jg
jo
mov
cmp
jb
idiv
testb
sub
mov
mov
jne
aas
fstpl
add
or
cltd
mov
push
rep
mov
dec
ljmp
ret
or
push
pop
cmovp
call
push
xchg
cmp
push
movsb
mov
adc
jae
mov
fidivrl
add
or
loop
adc
xchg
xor
xchg
in
sbb
mov
sub
pusha
insl
mov
jle
or
add
dec
shll
lods
jb
cwtl
scas
pop
push
mov
and
sbbb
psubusw
adc
and
clc
jg
fs
dec
jno
add
movd
movaps
out
xlat
adc
push
clc
jae
xor
jle
aaa
das
mov
xor
cli
rcl
lret
sub
cmp
and
lret
or
ret
inc
mov
jg
ljmp
jp
cli
jnp
mov
and
adcl
adc
push
hlt
adc
outsb
shll
and
cmpsl
jge
repz
roll
jbe
and
dec
xorl
enter
add
xchg
idivl
mov
cmp
dec
sbb
inc
pop
pop
pop
test
sub
and
shr
and
dec
jle
jne
orb
incb
xor
xor
pop
add
add
xorl
cwtl
std
jb
test
mov
lret
or
or
push
int3
jmp
mov
lret
sub
ret
adc
std
cld
push
push
xor
inc
hlt
cmpsb
aam
jg
mov
fdivr
movsl
ljmp
inc
mov
arpl
or
scas
push
inc
dec
pusha
xor
mov
inc
loop
sub
mov
test
ds
push
pop
incb
ss
mov
push
sub
add
loop
inc
sub
clc
ja
mov
jbe
ljmp
ljmp
jne
inc
cmpb
xchg
jo
repnz
addb
add
pop
push
repnz
inc
inc
and
adc
jbe
add
or
or
mov
push
dec
ret
daa
jb
mov
dec
xchg
pop
push
push
daa
int3
sbb
jmp
mov
sub
mov
xchg
xor
push
xor
xor
or
mov
or
pcmpgtb
xor
mov
dec
push
lds
insl
sub
adc
mov
test
pusha
adc
jne
ret
out
xchg
push
lods
and
cs
mov
xor
mov
inc
and
sub
addr16
icebp
mov
fsubs
xor
push
movb
xor
pop
addr16
jg
sbb
sbb
fdivl
popa
and
and
xor
adc
es
shlb
xor
push
and
jp
mov
cmp
imul
leave
ret
jno
data16
movl
xchg
imul
movsl
call
and
inc
fwait
pop
cmp
mov
imul
fnstenv
add
jae
jmp
ja
bound
testb
or
xor
inc
mov
jle
fidivrs
adc
test
push
lock
nop
sub
dec
push
push
fdivr
push
cltd
hlt
push
jle
icebp
and
int3
stos
mov
adc
scas
mov
inc
cmp
adc
cwtl
cs
movsl
lea
inc
adc
jecxz
push
int3
jno
sbb
push
mov
mov
je
mov
movmskps
mov
fcoml
out
sub
xchg
dec
mov
mov
sbb
or
int
rcll
movsb
fidivs
pop
sub
jp
add
aas
data16
mov
xor
out
movsl
add
mov
push
push
ret
add
je
jae
rcrb
enter
mov
adc
pop
fwait
push
add
xchg
add
jne
add
ret
adc
or
inc
lock
pop
shr
arpl
pop
jb
and
sub
mov
sarb
add
je
test
cs
mov
daa
jle
adc
push
stos
repz
xor
imul
outsl
jl
movsb
pop
inc
inc
push
and
push
mov
inc
roll
and
pop
cld
add
xlat
test
hlt
icebp
outsb
loop
out
cmp
gs
adc
out
add
testb
je
inc
mov
cmp
or
jbe
mov
es
loope
or
cmp
jne
or
dec
jmp
shl
jl
jne
xchg
mov
jne
inc
aaa
push
lds
sbb
push
loope
xor
mov
adc
jmp
and
test
xchg
fcomps
dec
push
rolb
jo
and
std
int3
mov
mov
jge
sbb
not
add
cmp
dec
ret
xorb
stc
repz
pop
and
int
sbb
dec
pop
pop
jne
rcll
aas
push
fdivs
sbb
decl
cmp
jb
rep
jmp
push
push
outsb
mov
xor
add
cs
fs
loopne
fisubrs
hlt
and
inc
push
and
pop
inc
xor
push
sub
inc
add
xor
lods
adc
xchg
stc
rcrb
lea
dec
add
dec
cmpsb
nop
inc
xor
mov
add
repz
push
lods
push
movsb
pushf
xchg
mov
inc
mov
mov
call
out
in
lock
hlt
ss
out
clc
cld
xchg
xchg
sub
lea
lock
sbb
cmp
jns
jmp
and
mov
into
nop
inc
pop
xchg
mov
sti
and
outsb
or
push
lea
jl
cld
push
jo
sub
and
std
cld
out
mov
fcmovne
insb
addr16
adc
sbb
daa
outsb
pop
sbb
stc
sub
pop
xor
movsb
push
int3
fiaddl
jl
sub
out
add
dec
inc
fcomps
add
nop
dec
dec
addr16
xorl
mov
cmp
dec
int3
mov
or
push
xor
das
ds
repz
dec
push
arpl
sbb
sahf
out
sbb
sbb
adc
jns
out
adc
or
or
sahf
out
add
inc
test
or
icebp
xchg
xor
push
add
pop
andl
inc
ja
dec
mov
jbe
fimull
sub
or
inc
imul
and
cmp
repnz
mov
inc
arpl
outsb
stos
clc
xchg
adc
fidivs
sub
inc
fisubrl
push
xchg
shlb
and
sub
pop
xor
sbb
sbb
add
adc
or
mov
push
and
mov
loopne
fdiv
inc
mov
inc
and
loop
popf
pop
outsl
push
xchg
daa
fstpt
ret
pop
outsb
aad
mov
sbb
adc
pop
cmp
xor
movsl
sub
push
pop
xchg
push
inc
test
mov
sbb
ret
pop
sbb
mov
cmp
pop
cmp
leave
xor
or
ficoms
packssdw
xchg
inc
and
test
dec
mov
sbb
pop
and
or
mov
dec
fistpll
mov
adc
pop
pop
sbb
cmp
fs
adc
js
loope
pop
push
jle
inc
sbb
xchg
arpl
popa
mov
sbb
dec
push
jbe
sub
pop
mov
xchg
cmp
pushf
mov
cmp
pop
push
push
cmp
add
jmp
in
mov
cmp
jne
push
adc
or
add
mov
adc
sbb
fcompl
add
push
mov
cmp
clc
inc
jne
imul
imul
push
push
add
mov
es
and
ljmp
push
push
jne
xchg
clc
adc
dec
pop
and
sbb
xor
mov
int
or
mov
mov
fadds
jbe
test
mov
adc
movsb
aad
fs
dec
in
sbb
and
pop
dec
pop
and
enter
inc
fistpll
fcmovu
mov
ja
pop
fnstsw
outsl
das
mov
loop
nop
lret
pop
stc
ds
fidivs
or
faddl
sub
xchg
xchg
adc
cmpl
mov
adcb
add
or
mov
inc
inc
xor
sub
sbb
jne
and
test
ljmp
xchg
rcl
mov
dec
imul
mov
fiaddl
adc
xor
dec
pop
test
pop
xchg
add
add
adc
lret
sbb
sbbb
pop
js
or
sbbb
ret
inc
shrl
pushf
std
jne
scas
adc
or
jl
and
loopne
sarb
loopne
push
push
lods
lods
js
push
ljmp
adc
add
add
push
push
sub
mov
sub
in
into
js
push
or
int
je
or
jmp
sbb
sub
mov
xor
je
pop
pop
gs
pop
fisubl
pop
pop
sbb
xor
adc
into
pop
fdivrs
lock
jg
sub
clc
ja
leave
fldt
pop
jbe
lea
adc
sbb
jp
daa
in
add
out
xor
inc
leave
push
sbb
test
jb
push
clc
jbe
cwtl
push
ljmp
jl
out
dec
cmp
pop
jmp
add
addb
mov
cmp
jmp
pop
hlt
xchg
mov
test
cmp
addl
mov
cld
jbe
divb
clc
cmc
je
mov
mov
pop
adc
pop
or
xorl
ret
negl
cld
out
nop
fildl
pop
out
inc
xor
loopne
test
add
adc
xchg
rol
in
adc
sub
test
sbb
dec
out
adc
mov
push
andb
mov
and
pusha
aas
pop
dec
shr
js
cltd
sub
outsl
push
add
insl
test
lods
xchg
roll
push
add
or
jp
or
stc
shrb
inc
dec
push
rolb
push
test
inc
push
rol
stos
inc
icebp
adc
fsubl
sbb
mov
mov
dec
inc
out
sub
jmp
pop
pop
push
sarl
rclb
pop
rclb
push
testb
push
xor
frstor
popa
xchg
rcl
sbb
dec
loop
mov
daa
repnz
add
push
xor
dec
loop
cs
dec
jne
jmp
xchg
repnz
push
int
loope
cmp
dec
jne
mov
or
addr16
test
lcall
lcall
mov
mov
mov
movsl
stos
or
jno
add
jle
bound
sar
jae
add
into
pop
mov
rcl
sahf
imul
cld
jne
mov
push
cmp
jne
data16
out
es
jne
call
aam
lahf
mov
mov
push
stc
jns
insl
inc
incl
dec
mov
jmp
sti
jns
out
push
xor
cld
cld
jmp
iret
lcall
adc
adc
inc
inc
inc
jecxz
lea
pop
push
pop
repnz
adc
add
jge
add
shlb
dec
imul
in
orb
push
subb
ret
dec
and
push
mov
push
sbbb
loope
loopne
bound
or
mov
add
add
add
adc
xlat
outsb
and
lahf
test
inc
or
movsb
xchg
xchg
or
arpl
test
pop
pop
pop
cwtl
pop
orl
adc
and
or
mov
xchg
dec
jmp
pop
add
xlat
push
mov
test
in
iret
jne
fmuls
add
outsl
xor
add
mov
or
mov
popl
jo
sub
or
arpl
push
push
push
push
or
cmpsb
and
test
adc
mov
test
mov
divb
out
test
or
adc
aas
add
add
lea
mov
aam
push
fisttps
mov
jmp
addb
or
push
pop
arpl
pop
nop
sbb
sbb
pop
or
push
and
adc
xchg
cmp
call
adc
pushf
and
push
lds
push
xchg
mov
pushf
add
mov
inc
adc
push
rclb
call
es
loop
and
test
dec
mov
in
dec
adc
es
ret
loop
ljmp
or
adc
or
adc
fadd
sub
daa
fdivs
mov
jg
jecxz
lea
add
not
and
sub
and
add
lock
lods
xchg
outsl
inc
arpl
push
sub
push
or
lock
push
pop
adc
push
or
adc
sub
sub
fs
aam
jne
pop
mov
sbb
push
lcall
sti
mov
cmp
ja
mov
inc
je
mov
inc
push
sub
fmuls
or
add
jmp
nop
shll
inc
inc
push
pop
insb
sahf
out
loop
or
push
scas
mov
pop
cmp
mov
inc
cmp
jb
jno
jo,pn
jae
or
cld
data16
mov
pop
pop
ret
and
mov
scas
adc
or
ret
loop
xchg
adc
add
add
pop
pop
sbb
jne
or
movsb
lods
xor
adc
mov
mov
pop
and
xor
dec
stc
addl
mov
movsb
iret
xor
jo
and
sbb
jbe
je
add
out
add
and
push
js
pop
inc
cld
and
loopne
xorl
je
repnz
test
cs
fcompl
fmul
push
aam
xchg
pop
addr16
pop
sub
popf
mov
sbb
or
push
add
jno
and
xor
or
or
lock
in
xor
push
sub
jns
aas
aaa
or
jl
and
lret
push
add
mov
cmpl
pop
ss
xor
sbb
repz
xor
lods
icebp
mov
pop
mov
inc
jmp
cmp
sbb
data16
add
add
sub
pop
or
pusha
decb
cmp
adc
cmp
mov
ss
mov
je
cmp
and
or
adc
pop
mov
dec
add
mov
pop
push
ret
loopne
lods
adc
mov
mov
bound
mov
and
je
sub
dec
pusha
jno
ss
lea
sbb
popa
add
test
and
fwait
add
ret
inc
test
or
lods
push
jecxz
sub
add
pop
adc
mov
dec
push
rcrb
scas
movsb
and
movsb
jecxz
push
mov
push
adc
shl
cld
xor
cltd
sbb
adc
sbb
test
inc
xor
or
rorb
popl
idivl
add
inc
movsb
jbe
add
aaa
push
test
jp
pop
sub
or
sub
loop
sbb
adc
push
or
mov
mov
mull
mov
mov
inc
mov
dec
jne
adc
add
adc
add
add
sbb
pop
insb
xor
cmp
sarb
xor
jo
xlat
inc
jmp
push
cltd
nop
add
mov
inc
adc
addl
push
adc
sbb
adc
dec
or
push
mov
in
mov
pop
insb
sbb
push
inc
push
xor
push
ljmp
jne
rclb
cwtl
or
jp
adc
mov
jno
fisubs
nop
mov
cmp
adc
jb
lea
push
adc
fldl
dec
ss
adc
push
ret
inc
clc
icebp
xchg
mov
gs
push
clc
mov
pop
cmp
or
mov
mov
adcl
xchg
xchg
lret
daa
jne
or
push
push
call
inc
shr
or
es
insl
and
or
push
imul
inc
dec
sub
mov
inc
pop
and
in
push
movsb
xor
test
or
cld
or
push
mov
jmp
outsl
addl
mov
loope
mov
mov
sub
mov
cmpl
or
cmpsl
ds
fistpl
add
mov
das
adc
insl
xor
inc
jecxz
and
inc
sub
add
jmp
es
fdiv
or
push
add
in
sub
mov
mov
inc
shlb
add
pop
fisubs
fcomps
ret
push
or
sti
or
lcall
rcrb
cmp
push
or
adc
sbb
push
or
push
jp
push
jmp
xor
adc
loop
or
mov
jle
mov
rcrb
mov
jne
ja
btr
pop
cmpl
push
stos
das
dec
int
mov
push
jge
or
or
arpl
jbe
inc
enter
movl
outsl
pop
adc
lods
sarb
push
push
push
aaa
mov
mov
push
out
pop
addl
jnp
add
out
fisubrs
sub
jbe
mov
lea
sbb
dec
test
xor
add
xchg
pop
mov
pop
sub
push
cmc
stos
scas
popa
push
mov
pusha
adc
rcrb
add
imul
dec
fisubl
push
dec
loopne
dec
in
dec
frstor
mov
pop
test
sub
pop
aam
mov
test
and
mov
dec
adc
in
dec
mov
enter
pop
pusha
sub
mov
in
sbb
out
jns
jle
adc
or
repnz
fcomp
repz
add
or
imul
imulb
jmp
cmp
pushl
inc
and
test
push
cmp
js
jmp
inc
push
stos
popf
fcoms
clc
jnp
push
push
in
orb
mov
adc
xchg
lods
add
addl
push
cli
sbb
push
cmp
inc
pop
bound
adc
xchg
adc
mov
faddl
sub
push
mov
push
jo
icebp
clc
fs
cmc
movsl
mov
daa
adc
jge
cli
push
popa
dec
cmp
or
call
in
push
or
aam
jmp
dec
je
add
leave
add
mov
push
pop
fidivrs
pop
scas
fsubs
outsl
jno
push
sbb
repnz
inc
add
sub
push
push
stos
and
pop
add
sti
or
adc
cmp
push
push
dec
sub
jo
lea
test
rcrl
push
add
adc
popw
add
xchg
lcall
roll
push
jne
mov
addr16
add
dec
or
xchg
dec
jo
inc
jne
jb
push
dec
repz
repnz
xchg
and
je
cmp
and
lods
adc
dec
xchg
xlat
pop
sbb
int
xor
mov
pusha
mov
mov
cmpsl
xor
push
rcl
add
push
iret
mov
lock
jmp
xchg
jbe
leave
add
scas
cmp
shll
jmp
rorb
add
std
lret
orl
test
push
jmp
sub
aas
lcall
dec
push
pop
test
inc
arpl
or
push
fadds
cltd
and
addb
sub
js
add
jno
jae
popa
add
or
lock
jmp
cmp
jae
mov
stos
arpl
mov
push
mov
inc
push
mov
or
xlat
sub
add
lcall
mul
mov
add
add
jmp
sub
push
sbb
inc
push
push
sub
adc
mov
xor
test
sub
movsl
loope
fsubrl
or
jl
sub
je
or
dec
and
sbb
shl
std
jns
push
das
or
mov
pop
jle
rcll
jbe
aaa
push
pusha
ss
xchg
xchg
imul
or
lea
jb
mov
add
xor
jo
in
int
addr16
mov
and
jns
lods
pop
push
decl
das
pushl
loopne
push
sub
push
pop
sub
mov
dec
lcall
dec
push
pop
sub
add
cmp
add
xlat
dec
mov
mov
outsl
rcrb
shlb
imul
cmp
lret
push
push
add
imul
jmp
inc
lods
push
test
pushf
movsl
stos
sbb
xorb
or
cmp
jecxz
sti
ret
adc
loopne
add
push
loope
cmovbe
data16
push
push
jge
inc
cmp
je
fsts
stc
xchg
clc
push
mov
push
xchg
mov
pop
xor
fs
pop
mov
notb
imul
add
xchg
dec
push
mov
jmp
loopne
inc
sub
notb
mov
adc
inc
dec
or
xchg
mov
cs
add
rcll
sbb
cmp
inc
mov
add
and
movsb
cmp
stos
cltd
pop
inc
mov
inc
add
push
ja
jno
daa
mov
rolb
pop
and
aas
lods
in
jb
add
repnz
push
or
cmp
push
push
push
int
push
mov
in
js
in
push
add
jecxz
js
aam
rcrl
flds
js
imul
mov
lret
inc
dec
inc
and
add
test
pushf
out
lds
inc
leave
shlb
hlt
jmp
mov
arpl
orb
pushl
lea
and
jb
adc
or
or
push
dec
mov
push
mov
xor
ret
add
popa
mov
push
test
and
mov
bound
cltd
ss
mov
xchg
shll
imul
or
jl
fs
test
jge
cli
jno
test
pop
movsb
cmpsl
stc
cmpsb
jmp
pop
lret
inc
sbb
movsb
sbb
mov
insb
jne
fmul
outsl
jne
jecxz
cmp
and
sub
ret
dec
test
cmp
and
push
and
rcr
in
dec
pop
jns
test
pusha
or
es
or
lahf
adc
cmc
shlb
test
negb
sbb
inc
adc
jge
or
or
dec
cld
jmp
add
dec
adcb
subb
inc
push
fnsave
lock
test
push
rolb
mov
rorb
sub
in
outsb
negl
sub
adc
popa
insl
rorl
xchg
rcl
dec
inc
pop
xchg
dec
movsl
in
rclb
cmp
rorb
popf
jmp
pop
and
dec
push
sub
or
int
sub
cmp
xlat
xorb
loopne
push
jle
jmp
lock
fsubrl
and
clc
ja
rorl
rcrb
adc
ljmp
adc
pop
fnstenv
jne
mov
jnp
popa
xor
inc
sahf
jp
jnp
add
ss
add
xchg
xchg
inc
inc
bnd
jp
add
jnp
aad
leave
enter
lret
mov
int
mov
xchg
add
push
aad
mov
int3
and
push
adc
pop
mov
leave
add
cmp
mov
add
push
mov
mov
icebp
mov
je
mov
ljmp
jno
mov
incl
inc
or
push
sub
sbb
orb
call
shlb
push
push
jno
lahf
je
mov
cmp
lock
nop
add
and
dec
pop
inc
pop
mov
mov
jns
imull
mov
mov
out
shl
pushl
or
push
adc
orb
xchg
inc
inc
ret
push
xchg
test
pop
mov
pop
cmp
test
sub
aas
sub
dec
push
or
je
movsb
mov
mov
out
jmp
movsb
fnstsw
xchg
testb
jne
pop
lock
sbbl
adc
sbb
rol
cli
add
pop
rolb
jbe
cli
or
mov
mov
sub
scas
int3
testb
jne
push
sbb
stc
cmp
loopne
adc
xchg
xchg
lea
and
popa
and
add
out
dec
adc
dec
cmp
dec
cmp
mov
mov
push
push
xor
push
repz
or
push
adcl
or
mov
loop
push
mov
idiv
mov
pop
sbb
repz
lods
cld
in
push
mov
aad
fstl
sub
xchg
push
or
xor
data16
or
cmpb
lock
fsubs
sbb
mov
insl
mov
dec
dec
dec
test
add
pop
enter
adc
pop
cmpb
aam
push
roll
mov
push
adc
xchg
cwtl
cld
add
mov
push
or
sub
outsb
pop
jae
rcrl
int
pop
sbb
and
sbb
add
mov
push
lock
dec
cmp
add
lock
add
hlt
cmp
add
mov
mov
adc
cld
inc
push
mov
movb
jmp
loope
fucompp
insl
xor
sub
std
add
jo
add
sbb
add
or
adc
mov
xchg
push
and
clc
mov
sbb
sub
or
repnz
or
jo
repnz
and
ret
mov
rolb
in
cli
mov
add
pushf
or
aas
sub
xor
mov
das
das
das
das
sbb
subb
pushf
popl
mov
jno
mov
testl
mov
ja
sbb
cwtl
cltd
sub
aad
jge
inc
ret
add
fcoml
popa
and
xor
call
push
lcall
push
int3
adc
popa
or
push
xor
push
in
or
add
rol
add
xchg
ss
mov
mov
lcall
xchg
dec
ljmp
ret
sub
xchg
iret
xchg
rorb
fcoml
fcomps
int3
mov
xchg
clc
or
test
mov
mov
mov
cmp
mov
add
hlt
fistpll
insl
xlat
sbb
aam
aaa
dec
cld
xor
loopne
rclb
ror
pop
in
xchg
int3
jno
insl
push
jne
push
and
test
jecxz
in
mov
xchg
add
add
jbe
test
sub
pushl
pop
cli
add
mov
mov
inc
push
leave
sbb
adc
add
add
and
push
push
or
das
lock
dec
or
xchg
xchg
push
mov
and
shrb
lahf
jge
pop
imul
hlt
push
mov
adc
jbe
push
lock
stos
rolb
push
jne
imul
or
or
clc
or
sbb
push
scas
movsb
jbe
add
push
adc
or
jg
push
inc
js
ds
mov
xchg
insl
test
dec
push
nop
aaa
loopne
jbe
push
push
jne
xchg
pop
call
dec
ljmp
sbb
mov
shl
add
pop
mov
mov
addb
outsb
mov
stos
push
push
pop
stos
and
cmp
sbb
add
and
cld
data16
push
push
frstor
or
cmp
adc
mov
mov
test
push
or
pop
push
in
dec
aaa
mov
or
in
mov
mov
aam
es
mov
cmp
and
or
test
ror
xchg
sbb
sarb
leave
xchg
call
addr16
xchg
loopne
cmp
out
or
sbb
lahf
mov
mov
cmp
sar
lahf
lea
pusha
and
pop
ja
or
mov
xchg
xorb
push
sarb
add
sar
pop
lods
movsb
add
jbe
xchg
push
sub
jo
mov
or
lret
movsl
mov
loopne
sbb
pusha
xchg
mov
lcall
or
sbb
into
dec
pushf
mov
or
add
setg
jb
sbb
or
dec
add
xor
sti
mov
adc
push
mov
mov
clc
adc
push
imul
cs
dec
lock
ja
movsl
mov
mov
leave
test
pop
orb
jbe
movsl
hlt
hlt
stc
rcr
push
add
push
sbb
push
lock
insl
and
jo
test
mov
fsubrl
jbe
sbb
adc
and
in
ss
js
add
movb
inc
xor
movsl
jecxz
xchg
shl
incl
jae
fisubl
imul
sub
js
xchg
es
out
adc
mov
js
mov
dec
sbb
btc
das
add
sbb
sbb
out
inc
mov
inc
je
mov
push
or
add
nop
push
repz
adc
push
adc
icebp
mov
adc
inc
iret
rcr
and
arpl
inc
inc
xorl
or
mov
xchg
lahf
aad
gs
testb
in
sbb
or
lock
es
add
fdivl
add
xchg
or
addr16
in
imul
insl
cmp
or
mov
nop
jmp
into
cmp
sub
mov
mov
mov
mov
clc
cmp
mov
adc
movsb
jo
mov
push
pop
enter
mov
jecxz
ret
mov
sub
lds
imul
pop
mov
inc
lods
xlat
sbb
pop
lret
mov
dec
mov
mov
xor
jp,pt
mov
je
pop
cmp
pop
cmp
pop
ret
out
push
sbb
lcall
jo
add
pop
gs
mov
adc
jmp
mov
outsb
je
arpl
pop
lock
fsubrs
je
test
sbb
into
lds
and
scas
test
rorl
mov
gs
xchg
xchg
dec
xchg
push
or
adc
xchg
mov
cwtl
lds
les
test
or
add
push
add
xlat
sbb
shlb
movsb
addr16
mov
xlat
out
xchg
hlt
jmp
cmp
jle
popa
mov
jl
and
pop
push
sub
mov
bound
and
add
dec
nop
std
shr
push
push
insb
push
dec
or
mov
or
fiaddl
adc
ja
sbb
xchg
sub
pop
insb
test
sbb
mov
loopne
mov
and
jne
mov
dec
mov
scas
data16
data16
adc
sbb
inc
push
sbb
aas
sub
inc
mov
lea
cmpsb
push
add
mov
sbb
dec
lret
cld
pusha
cld
or
adc
mov
push
inc
daa
add
jno
sbbb
arpl
xorb
and
dec
or
push
push
into
fisubrl
mov
bound
in
in
adc
dec
adc
loope
inc
inc
ss
cmp
push
cltd
ret
add
outsb
dec
sbb
or
mov
pop
jl
jae
add
fwait
push
mov
neg
mov
dec
or
shll
jnp
or
sbb
hlt
les
mov
mov
or
dec
push
lea
sbb
cmp
push
inc
stc
cltd
push
test
add
call
mov
clc
repnz
sahf
add
in
adc
mov
mov
inc
mov
mov
imul
into
orb
or
dec
shlb
xor
jmp
movsb
mov
movl
or
andb
std
jo
push
repnz
sar
ret
iret
imul
std
mov
sub
shrl
movsb
inc
push
sub
add
and
mov
mov
and
pusha
or
or
add
ret
sti
in
jle
cmp
js
dec
sub
pop
rol
add
xchg
mov
lret
adc
test
imul
into
pop
push
dec
test
dec
cs
xor
push
mov
roll
jo
sub
cmp
jle
aam
sub
rcll
dec
ljmp
jle
cmpsl
das
lret
pushf
sub
lret
daa
rorb
in
jg
jmp
sub
loopne
js
xchg
aas
jmp
pop
int
fldcw
daa
cmpsb
mov
mov
adc
xor
add
in
inc
movsb
les
in
movsl
call
mov
mov
push
fcmovb
xor
and
movsb
adc
adc
xchg
mov
jge
or
leave
rolb
mov
lcall
push
shll
cltd
jge
les
cmpb
xchg
mov
xor
in
mov
dec
inc
mov
or
add
sbb
sbb
mov
pop
popa
xchg
addr16
add
int3
int3
jnp
mov
mov
adc
xchg
negb
xlat
sar
les
test
mov
or
add
dec
clc
mov
mov
addb
into
xchg
dec
dec
scas
mov
sbb
scas
in
fwait
cmp
jl
fisubl
push
je
cmp
and
clc
adc
js
movsb
xchg
jmp
push
cs
out
addr16
fmuls
push
push
adc
rcrb
cmp
and
icebp
into
mov
adc
adc
jae
add
cwtl
pop
sub
pop
mov
add
pop
dec
test
vpmuludq
pusha
jbe
les
dec
mov
call
mov
call
sbb
cmp
out
rclb
cmp
sbb
mov
out
push
imul
out
or
pushl
insl
and
mov
call
lahf
xchg
test
jp
add
loop
fdivs
mov
inc
add
cld
push
cmpl
xchg
or
adc
adc
add
out
loopne
push
loopne
pop
lods
gs
loopne
add
es
sub
ljmp
imul
or
in
nop
outsb
pop
mov
and
sub
sbb
pop
inc
outsl
dec
pop
sbb
xor
mov
mov
inc
dec
pop
adc
inc
mov
jno
jb
mov
add
nop
inc
ret
cld
add
sbb
jbe
les
add
call
dec
insb
add
add
jmp
xor
and
mov
ficoms
loopne
std
pop
cmp
xchg
push
fmuls
jmp
mov
push
in
add
and
mov
mov
mov
cmp
push
subl
addr16
cmp
roll
cmp
sub
lea
sub
aad
mov
enter
sar
add
mov
ljmp
fldenv
es
adc
mov
pop
addl
mov
movsl
into
in
push
ds
daa
xchg
push
jo
sbb
sub
push
add
cmp
mov
jb
lock
xchg
mov
je
xor
inc
mov
mov
inc
inc
sbb
out
jb
cmp
mov
rol
loop
test
in
mov
std
shlb
add
ret
and
cmc
jo
shl
sbb
pop
lods
inc
jb
mov
roll
mov
sub
jne
push
and
dec
imul
inc
adc
or
fxch
mov
js
push
icebp
adc
js
sahf
pop
push
ret
xor
cmp
jne
ss
ds
xchg
xchg
adc
hlt
sub
mov
int3
push
out
jb
xor
test
cmp
mov
and
add
jle
mov
or
push
mov
call
push
push
gs
nop
jg
push
or
outsb
adc
inc
stos
push
xor
or
ret
popa
imulb
ret
or
add
xor
aas
sbb
pop
fimuls
movsb
push
xor
mov
adc
mov
stos
les
add
sti
sbbb
cld
dec
dec
sub
xchg
lods
push
add
push
or
icebp
out
call
sub
icebp
dec
mov
and
xor
and
add
jb
hlt
add
jo
jmp
and
das
xor
js
mov
and
out
add
sbb
sub
push
dec
inc
pop
out
subb
xchg
inc
and
fcomps
cli
lock
rcrb
xchg
sub
and
aaa
out
dec
inc
loopne
lock
test
jae
mov
pusha
cmp
dec
adc
icebp
test
mov
xor
into
lahf
xchg
xor
sbb
add
enter
push
sub
push
pop
arpl
or
outsb
test
cld
mov
ja
push
jmp
sub
mov
dec
mov
lock
mov
and
lcall
fnstcw
daa
inc
cmpl
jne
push
cmp
je
mov
fmulp
das
nop
xlat
inc
sbbb
jnp
and
pop
and
jnp
mov
shlb
mov
test
hlt
int
lods
dec
movsl
fdivl
xor
xchg
rolb
cmpsl
xchg
mov
iret
ret
fistpll
les
sbb
enter
pop
add
pop
bound
cmp
icebp
out
xorb
pop
ja
test
push
test
call
jmp
rcrb
test
mov
imul
mov
or
adc
dec
leave
fistpll
ja
mov
nop
dec
push
jmp
iret
mov
add
sahf
dec
xor
aam
je
and
adc
mov
or
pop
lret
mov
add
sbb
mov
inc
les
mov
and
cltd
pusha
lret
sub
jecxz
inc
cmpsb
jge
scas
and
jmp
xchg
mov
loopne
icebp
xchg
push
inc
js
nop
inc
rcr
cmp
pop
ret
mov
adc
and
jnp
add
outsb
mov
inc
cmp
xor
fcmovb
lods
jg
jb
daa
daa
daa
daa
inc
cmp
xor
daa
sbb
daa
adc
xchg
orb
xor
xchg
pushf
push
rcrl
movb
lea
mov
leave
add
loopne
ljmp
xchg
jb
xlat
lods
jge
clc
movsb
xor
push
adc
mov
cmpsl
repnz
xchg
ret
mov
dec
pop
push
test
jg
call
int3
mov
int
or
xchg
int3
mov
out
and
call
fsubs
outsb
and
sub
enter
std
add
mov
iret
insl
and
xchg
add
in
ja
inc
scas
pop
idivb
sbb
push
repnz
xchg
in
cmpsb
fistl
cli
mov
mov
mov
adc
loopne
out
shrl
in
xchg
adc
nop
mov
cmp
xchg
mov
mov
xor
pushf
mov
lods
in
pop
out
ja
lret
cltd
mov
enter
nop
lods
lret
mov
pop
call
push
fcompl
lods
pop
dec
daa
adc
nop
fmuls
dec
mov
xor
je
test
enter
fs
cwtl
ljmp
pop
decl
xor
jne
fmul
adc
movsl
xchg
in
xor
fmul
adc
aam
jmp
nop
in
jne
dec
xor
aam
in
aad
xchg
push
jbe
lock
daa
pop
movsb
mov
dec
lods
dec
call
add
sahf
pushf
mov
or
cmc
xchg
outsb
lea
pop
in
lcall
add
lods
push
and
mov
adc
add
pop
xchg
cmp
dec
cmp
fs
lea
jae
mov
ror
mov
movsb
xchg
sbb
cltd
clc
xchg
ret
sbb
jne
leave
add
rcr
adc
xor
adc
inc
and
jmp
pop
sti
push
ret
inc
cli
xor
dec
adc
and
mov
add
rolb
dec
add
or
hlt
and
adc
aad
out
cltd
cmc
test
lds
pop
add
dec
negb
add
add
or
cmp
and
ljmp
pop
nop
int3
adc
sbb
mov
jne
push
inc
fisubrs
push
nop
sbb
rol
add
jl
mov
xchg
sbb
push
fisubrl
add
add
jp
dec
into
mov
dec
xchg
mov
movsb
je
jle
lock
or
mov
or
push
or
adc
test
rorl
xchg
xor
jb
stos
ljmp
sbb
mov
iret
add
mov
or
or
add
shr
jle
sub
mov
mov
inc
in
fbstp
add
or
out
nop
ret
sbb
xchg
add
cmp
outsl
add
mov
jmp
xor
test
cli
mov
or
or
mov
add
ja
add
push
cli
bound
inc
add
xchg
adc
and
out
mov
loopne
ficoms
push
out
movsb
cmpsl
in
adc
in
add
ja
sub
cmp
push
push
imul
inc
mov
mov
int
out
lcall
mov
orb
mov
lahf
shrb
dec
cld
and
xor
popa
push
push
pop
mov
jo
jmp
lret
jle
test
pop
mov
mov
rorb
sbb
mov
es
fidivl
es
sbb
and
fadds
add
pop
jb
lods
dec
addl
sub
mov
inc
fsubs
outsb
jg
cli
mov
xchg
loope
sbb
jnp
cltd
inc
pusha
xchg
gs
mov
add
sbb
jecxz
adc
jnp
hlt
or
xchg
mov
dec
out
insb
push
subb
push
pop
cmpsl
shll
push
mov
cltd
mov
jb
cmp
jne
movl
inc
mov
cmp
std
jne
jmp
sub
cmp
add
xchg
pusha
fst
jmp
ja
xor
add
inc
test
jo
fisubrl
xor
push
push
or
xor
out
test
mov
xor
pusha
xor
jp
loopne
add
cmp
into
jb
or
les
aam
cwtl
mov
cltd
stos
mov
insl
push
or
and
aaa
outsb
push
mov
pop
icebp
stos
push
aas
rolb
jnp
dec
sbb
jae
cmp
jbe
jp
shl
jne
jl
shll
push
sbbb
leave
inc
imul
imul
and
in
jo
sub
sub
pop
cmp
loopne
cmpb
inc
lods
or
cmp
ljmp
add
jg
sbb
loopne
xorb
sbb
inc
movsb
xchg
xchg
and
lock
mov
andb
and
out
in
cmpsl
pop
out
dec
jne
mov
xchg
stos
lods
sbb
pop
xor
sbb
jle
in
jno
or
inc
jbe
mov
add
jne
adc
stos
mov
jmp
mov
push
jnp
cmpsl
cmp
into
clc
push
enter
or
push
inc
sbb
daa
mov
addl
xchg
pop
mov
in
testl
cmp
sbb
nop
pusha
sub
jp
xchg
test
movsl
pusha
pop
jno
pop
mov
dec
pop
jo
dec
sbb
cmp
push
sbb
pop
push
std
dec
cmp
xlat
testb
insb
ljmp
add
sbb
pusha
push
or
dec
les
or
dec
or
push
cmp
frstor
clc
clc
add
in
fmuls
sti
sub
jmp
xor
dec
sbb
mov
mov
jne
movsb
jmp
aad
out
cmp
ja
pop
sbb
es
push
pop
ljmp
mov
jmp
sbb
cmp
dec
mov
pusha
loopne
pop
add
mov
cmpl
lods
bound
and
xor
xorl
in
rol
inc
jp
xchg
pop
push
or
xorb
rclb
lea
or
push
jg
cmpl
cwtl
popa
mov
cmpl
ret
sahf
xchg
jo
adc
adcb
mov
sub
je
lea
mov
add
xor
and
sub
xchg
add
scas
repnz
and
je
sarb
push
lds
rcrb
pop
adc
pushl
das
inc
mov
cltd
cmp
das
testb
inc
sbb
lret
les
shlb
mov
push
inc
fcmovu
rcrb
cwtl
rclb
add
pop
mov
cmp
ljmp
jle
jg
cmp
dec
faddl
or
imul
mov
lods
and
pop
aad
jg
add
add
test
xor
adc
push
mov
fisttpll
ficompl
addr16
cmpsb
pop
push
or
push
mov
push
clc
movsb
sbbl
jb
lock
into
stos
push
js
push
sbb
jo
adc
sarb
insb
leave
mov
pop
add
mov
xchg
dec
or
dec
jb
ret
or
cmpsb
cmp
test
sub
adc
and
fsubrs
mov
fsubrl
ret
sbb
popa
dec
jnp
push
push
push
pusha
cmpsb
or
mov
jo
rol
cs
mov
mov
sub
pop
data16
push
jo
xor
inc
or
add
push
cs
fwait
mov
inc
xchg
inc
mov
push
push
bound
cs
mov
repnz
push
xor
xor
imul
ret
cmp
into
xchg
mov
or
cmp
clc
xor
xchg
push
dec
sbb
push
pop
push
mov
adc
pusha
dec
iret
jnp
mov
or
xor
shl
pop
icebp
mov
sti
iret
inc
push
outsb
rorb
adc
mov
fs
and
jns
push
es
push
sbbl
enter
inc
inc
dec
adc
sub
pop
cmp
les
sbb
cmpsl
bound
jmp
push
dec
mov
mov
es
jbe
daa
add
and
pop
cmp
pop
adc
xchg
scas
popf
fisubs
nop
mov
jg
jge
or
push
fxch
inc
adc
or
push
in
push
mov
jo
les
fmul
gs
data16
in
sub
gs
jae
adc
aas
push
and
mov
mov
loope
jbe
rol
sub
ja
mov
stos
and
cli
fwait
or
into
xorb
jb
enter
inc
pop
fcmovnu
adcb
pop
mov
or
xchg
arpl
lds
push
inc
ffreep
jne
cmp
enter
xlat
xchg
sbb
mov
mov
pop
pop
mov
push
or
pushf
xchg
adc
mov
add
sub
sub
jg
mov
bswap
sub
xchg
js
cmp
pop
adc
mov
dec
jecxz
or
and
movsl
test
pop
cmp
lahf
add
sub
lsl
sbb
or
and
add
out
sub
pxor
push
push
add
rcl
or
gs
jle,pn
jg
call
push
sub
mov
jg
push
inc
adc
and
inc
inc
mov
jo
mov
dec
or
mov
jne
shlb
outsb
lods
mov
lea
or
xor
mov
je
add
fdivs
fldt
mov
sub
jne
ss
sbb
cli
pop
pop
ret
outsb
adc
and
adc
ljmp
shll
add
cli
shr
add
dec
push
lcall
roll
test
ret
clc
dec
sarl
or
sub
or
pop
testb
cmpsb
outsb
adc
adc
add
xor
loopne
test
inc
mov
push
bound
jg
mov
shll
enter
adc
or
icebp
or
fistpl
xchg
add
pusha
rol
movsb
push
comiss
loopne
in
inc
dec
mov
sbb
cmp
adc
loope
mov
sbb
push
add
and
sub
mov
fcoml
add
adc
xorl
dec
bound
xorb
push
xlat
fmull
scas
add
inc
or
orb
int
push
fldl
or
lahf
push
je
adc
jns
in
sub
add
and
mov
arpl
jno
xchg
out
js
cmpl
repnz
sbb
mov
leave
lods
into
das
and
pop
stc
outsb
dec
sub
dec
add
and
sbb
rorb
adc
pop
andl
push
push
push
adcl
cmp
xor
inc
std
mov
flds
sbb
xchg
cld
and
push
jmp
cmpsl
xor
das
sbb
xlat
ror
imul
mov
jmp
mov
cs
push
in
fmul
or
pop
adc
aam
js
and
fmull
fstl
mov
push
adcb
insb
jno
xor
mov
sbb
push
cmp
jns
iret
dec
ror
pop
mov
push
gs
out
outsb
push
ja
mov
mov
pusha
add
andb
cmp
dec
jbe
mov
lock
inc
push
or
xor
push
push
icebp
nop
clc
inc
push
mov
add
dec
xchg
sbb
and
bound
mov
pop
push
ja
std
bound
cltd
jmp
inc
faddl
or
or
jmp
test
and
inc
in
pop
fucompp
and
sti
iret
mov
xchg
and
ret
and
push
push
test
mov
pusha
add
mov
push
xor
fst
scas
fsubrl
jno
test
fdiv
xor
xchg
xchg
and
pop
pushf
mov
sbb
jl
add
jg
xor
jle
mov
sbb
sub
mov
sbb
shlb
je
jmp
bound
add
loopne
ret
nop
popl
js
cmp
adc
adc
into
insl
pop
mov
inc
or
xchg
lret
lret
test
js
pop
sarb
mov
std
leave
fdivrl
test
dec
lock
movsl
pop
mov
mov
push
adc
inc
test
incb
mov
add
hlt
lods
fwait
cmpsb
stc
psubsw
or
dec
ret
clc
pop
push
outsb
jno
idivb
mov
mov
or
mov
xchg
out
push
cmp
add
daa
fs
les
dec
xchg
daa
call
je
out
das
daa
mov
test
fnstenv
pop
sbb
mov
lret
int3
shl
jl
dec
sarb
pushf
jno
dec
scas
push
inc
jne
or
add
sub
dec
add
imul
pop
and
adc
mov
dec
neg
add
lea
mov
subb
popa
mov
lret
inc
xor
xor
adc
call
clc
pop
shl
call
mov
or
or
cmp
lds
push
dec
aas
insb
jne
inc
sub
pop
daa
bound
adc
pop
add
ss
cmpb
lahf
mov
ja
or
idivl
inc
xor
pop
inc
loop
rclb
mov
imul
xor
cmpsb
jne
js
pop
push
ds
andl
inc
js
punpckhbw
test
cmp
in
pop
xor
subb
lea
lret
or
cs
scas
sub
pop
arpl
fs
or
ret
pop
mov
or
out
jle
push
or
movb
mov
mov
aad
mov
ret
ret
dec
push
mov
cmc
int
lds
sub
in
inc
icebp
cwtl
add
pop
cmp
inc
es
cwtl
xchg
stc
add
jo
dec
sbb
test
imul
or
xor
mov
push
jns
daa
mov
add
add
xor
mov
cld
movsb
roll
int
icebp
push
push
push
push
imul
mov
mov
lea
aaa
jno
dec
aaa
dec
sub
testb
sub
cmpl
das
pop
loopne
or
push
or
inc
mov
adc
mov
mov
cmp
xorb
add
mov
into
nop
cmp
lcall
std
and
or
cs
mov
into
cmp
icebp
push
jnp
cmpb
jno
leave
addb
xor
xor
rcll
shlb
push
jne
subb
popf
fldl
jp
mov
jno
mov
mov
movsl
inc
xlat
add
mov
inc
dec
shlb
pop
sub
popf
mov
or
ret
repnz
mov
mov
mov
fs
adc
xchg
lea
mov
sbb
sub
sbb
cmpb
xor
add
cmp
sbb
xchg
add
dec
sub
mov
push
in
xchg
mov
fnstcw
daa
push
add
dec
push
dec
sbb
xor
or
aas
shl
mov
pop
popf
push
ret
sbb
adc
lcall
fwait
push
mov
push
xchg
adc
inc
outsb
adc
sarb
daa
adc
lock
xchg
and
lcall
hlt
mov
enter
xchg
adc
adc
inc
repz
js
add
bound
mov
mov
out
jns
xchg
aas
dec
lea
dec
and
mov
xor
lahf
inc
jl
pop
dec
xchg
add
pop
inc
push
shll
sbb
notb
lcall
sbb
inc
pop
sub
or
jnp
movl
or
xor
ds
cmpsl
and
mov
dec
mov
lcall
fisttps
push
lods
mov
loope
daa
call
sub
add
lds
jne
jmp
fwait
mov
mov
dec
lahf
fstpt
sbb
jl
or
mov
je
push
push
mov
sbbb
push
rorb
push
aam
int3
nop
popa
or
mov
ret
push
sub
enter
jge
aas
jp
jmp
int
adc
iret
inc
mov
inc
pop
imul
and
pop
and
dec
or
daa
pop
mov
or
fcoml
mov
mov
in
add
mov
js
mov
sub
push
pop
sub
xor
das
sub
roll
fmul
push
or
push
enter
roll
cmp
testb
push
rcr
jns
dec
lcall
add
or
jecxz
push
clc
mov
pop
adc
and
in
dec
lock
les
sub
int
lcall
out
adc
out
popa
mov
or
mov
aam
or
mov
push
leave
inc
xor
and
mov
outsb
sub
shrb
pop
xor
sbb
and
loopne
xor
jecxz
rcrb
aam
or
out
int3
dec
jb
xchg
xor
xchg
int3
mov
dec
jne
push
add
stos
leave
xor
xor
jbe
addr16
jno
push
mov
pop
add
rorl
ljmp
aad
and
pusha
aad
movsl
insl
jne
repz
xlat
scas
outsb
insb
out
mov
xlat
jb
jecxz
xor
jecxz
dec
xlat
sbb
mov
xlat
adc
and
inc
xlat
inc
inc
mov
in
pusha
inc
inc
inc
aad
lds
ret
inc
aaa
add
mov
cmpsb
nop
sub
jbe
push
fldl2e
fs
lret
repz
mull
mov
inc
push
jb
jns
iret
int3
call
xor
fildl
test
es
cmpsl
inc
push
dec
movsb
aam
pop
stos
movsl
and
cmp
outsb
fcmovnbe
pop
pop
push
lods
outsb
cwtl
daa
xchg
dec
in
fsubrs
xchg
xchg
fstl
aad
adc
inc
mov
stc
aaa
add
mov
mov
shll
or
pop
lods
mov
pop
and
mov
sbb
movsl
dec
rorb
enter
xchg
mov
mov
cmp
sarl
push
add
push
enter
movsl
inc
jb
arpl
dec
pusha
fdivr
cwtl
xchg
leave
jne
iret
jecxz
fcompl
dec
iret
push
sbb
xor
movsb
test
push
jb
test
pop
enter
lods
minps
sbbl
rorb
sbb
hlt
adc
out
pop
lcall
add
push
jns
and
sub
jae
ss
push
or
or
push
mov
or
add
pop
sbb
addb
adc
pop
sbb
push
and
pop
mov
mov
sbb
xor
dec
sub
mov
or
pop
pop
push
jo
or
lods
lret
movb
in
scas
aaa
call
xor
jl
scas
sti
pop
push
or
hlt
sbb
movsl
add
ds
push
jmp
ljmp
out
add
stc
cwtl
add
sub
mov
mov
dec
xlat
and
cmc
push
aam
insl
test
mov
add
movsb
movsl
xchg
jge
xor
add
sar
test
push
inc
cltd
pop
jne
or
enter
mov
jno
cld
or
or
mov
stos
sbb
dec
call
inc
inc
inc
push
ficompl
sub
add
adc
or
cmp
or
fmuls
inc
dec
inc
fdiv
enter
ja
add
shr
je
cld
fwait
clc
jl
dec
std
outsl
push
push
dec
adc
push
and
jns
cmpsb
dec
and
dec
push
pop
test
out
outsl
inc
or
jbe
jle
repz
stos
dec
outsl
ja
jo
mov
loop
les
pop
dec
sahf
sub
in
adc
and
jbe
lea
inc
out
mov
shll
mov
xor
dec
cli
add
test
inc
inc
push
negl
ret
mov
adc
shrb
lret
ret
mov
shr
addl
add
or
xor
pop
push
clc
push
add
jae
push
inc
xor
mov
push
add
or
fistl
xchg
add
add
sub
add
dec
or
sarl
adc
push
push
add
sub
inc
into
mov
xchg
mov
add
jmp
sbb
xchg
xor
daa
adc
xor
pop
insb
insl
adc
les
cmp
inc
jne
pushl
cld
sub
cmp
cmp
je
cmp
and
or
sub
cmp
pop
xchg
add
ljmp
loope
and
dec
pop
subb
cmp
lret
fwait
mov
mov
icebp
clc
mov
jae
xor
mov
test
mov
cli
mov
and
and
pop
les
clc
rorb
mov
adc
test
xchg
ret
andl
or
stc
mov
fldl
sub
adc
or
stc
fadds
cmpl
pop
subl
inc
test
xchg
test
push
push
mov
ds
lret
cmp
mov
cmpsl
imul
test
test
shll
shlb
pop
rcll
sub
sahf
pop
loop
jno
jl
mov
mov
jo
adc
sbb
mov
sbb
mov
adc
mov
rcll
or
inc
mov
mov
fsub
push
movl
or
insb
cmp
movsl
xchg
cwtl
lods
cmp
and
out
mov
clc
sub
fsubr
inc
pop
dec
adc
js
gs
test
pusha
fldpi
xor
js
dec
pop
mov
shlb
add
ss
inc
pop
mov
jne
mov
add
incl
inc
and
jo
or
pop
jmp
bound
dec
out
dec
adc
or
add
adc
imul
in
adc
xchg
shl
stos
ret
xor
xor
inc
push
or
jns
and
insl
rcrl
add
lock
gs
lock
cld
enter
or
jne
dec
movsb
testb
cltd
dec
sub
jle
neg
movsl
das
addr16
add
add
call
adc
es
jp
add
inc
cs
je
lcall
imul
or
mov
and
and
lods
or
cld
push
ljmp
pop
sub
inc
jle
in
jae
push
cld
add
sbb
push
adc
or
andl
mov
jno
adc
push
cli
push
loopne
and
ds
inc
jge
fisubl
pminsw
sbb
xor
icebp
mov
idivb
mov
pusha
xor
clc
add
pop
sub
dec
jbe
pop
clc
int3
mov
inc
popa
push
xchg
xchg
add
jb
push
scas
add
jae
lea
add
add
adc
lods
inc
xchg
sub
sub
daa
orl
jmp
enter
shlb
inc
lods
add
xor
mov
dec
or
out
mov
fsubp
into
js
push
outsl
sbb
cltd
dec
clc
push
scas
mov
lea
push
fldenv
or
jbe
mov
loop
sbb
loope
pop
and
cmp
sub
inc
push
pop
push
int
sar
jg
mov
nop
pop
mov
loope
daa
test
mov
dec
mov
movw
mov
adc
movb
push
mov
xchg
pop
dec
inc
or
add
int
push
push
add
cmp
jl
pop
sub
add
push
add
js
add
add
mov
pusha
jo
outsb
cmp
movsb
or
icebp
out
mov
addl
ja
mov
faddl
add
pusha
pop
orb
add
cmp
or
nopl
into
sub
shll
cmp
lds
adc
push
jg
fstpt
insb
call
pop
push
orb
push
pop
test
fmuls
xchg
mov
or
pop
ret
cmp
clc
add
xor
jmp
mov
or
sbb
jbe
push
test
inc
jo
sbb
dec
sub
adc
mov
xchg
out
jmp
xor
push
orb
jmp
movb
rorb
pop
jmp
lea
push
adc
cmc
push
jnp
jmp
sub
push
insl
dec
add
xor
mov
js
ret
inc
jmp
aam
adc
in
insb
lock
je
push
mov
movl
xchg
xchg
add
add
enter
push
add
jne
js
pop
idivb
mov
add
dec
and
outsb
aam
cwtl
cwtl
or
lret
pop
inc
imul
ss
out
mov
orps
loopne
adc
adc
sti
or
shlb
push
jns
cmpsb
sub
xor
inc
and
mov
paddusb
repnz
lock
aad
adc
sbb
cmp
es
pop
mov
jne
out
repz
mov
or
and
push
lret
pusha
dec
imul
test
jb
jae
mov
pop
ret
mov
dec
lahf
mov
in
pusha
push
jnp
lods
int3
sbb
pop
push
nop
popa
out
sub
push
lock
jecxz
or
sub
lea
daa
pop
inc
sbb
movsl
xchg
enter
in
sub
push
inc
rorb
xlat
xchg
test
fisubl
push
and
in
jb
pop
sbb
addr16
lret
add
push
add
jnp
fs
enter
cmp
cmpsb
push
cmp
adc
add
stos
or
lock
or
add
inc
xor
push
xor
idivb
inc
adc
jge
iret
in
cmp
inc
dec
jns,pt
pop
inc
dec
inc
js
dec
push
push
adc
cmp
push
xchg
or
inc
adc
pop
fnclex
sub
dec
mov
add
in
icebp
movsb
add
xor
push
ja
sub
inc
adc
rol
js
xchg
xor
xchg
shlb
pop
jne
pop
add
adc
xchg
mov
jns
call
mov
mov
nop
roll
mov
mov
push
jmp
jmp
fstl
cmpsb
stc
movb
cmpsb
ljmp
movlps
cmpsl
aad
or
push
pop
lea
fwait
xchg
sbb
stc
mov
sbb
pushf
add
enter
mov
insb
or
dec
adc
loope
sarl
out
pusha
add
push
adc
ss
in
mov
sbb
dec
hlt
jge
inc
push
sbb
clc
outsb
sbb
or
inc
dec
imul
int
xchg
data16
sub
sbb
cmp
mov
add
insb
data16
push
cmp
std
inc
scas
adc
xchg
mov
and
add
inc
adc
loope
lods
sbb
in
jecxz
out
jo
inc
fcmovnbe
loopne
pusha
popa
pop
xchg
xor
and
mov
sbbb
cmc
add
xor
mov
jno
jno
mov
sub
xchg
mov
mov
inc
or
or
sub
sub
sbb
sahf
testb
clc
lock
or
lret
loop
pusha
lods
and
insb
mov
insb
or
push
mov
push
mov
cmpsl
out
push
pop
rolb
mov
gs
and
sub
xchg
lock
je
mov
sbb
add
enter
es
mov
and
jb
add
fwait
lock
pop
xchg
fadds
ret
sub
cmc
add
jmp
add
jle
rcl
push
or
jmp
or
adc
push
lock
jnp
out
ret
mull
lsl
jmp
push
pop
push
push
mov
jg
inc
shr
rcr
shr
rcr
or
mov
repz
lahf
sub
jno
fs
out
jg
outsb
pop
jb
cmp
or
cmp
or
xor
and
cmp
add
fiaddl
lret
cs
fxch
pop
ret
adc
sbb
xor
inc
sbb
pcmpeqd
lea
imul
xor
lea
sti
mov
jne
in
xorb
imul
sub
out
jecxz
into
or
xchg
or
addb
inc
lock
add
out
cmp
cmp
add
mov
stos
cmp
dec
scas
ja
mov
dec
js
testb
or
and
inc
xlat
pop
les
and
xlat
mov
jmp
add
into
mov
mov
push
shlb
add
rolb
or
js
jmp
insl
out
leave
loopne
push
xor
sbb
or
in
mov
loop
jmp
dec
and
insl
pop
lret
xor
push
ret
mov
rcll
add
or
jmp
sub
je
pop
push
aad
dec
inc
aaa
push
pop
lret
sub
js
jo
add
cmp
ret
mov
adc
add
mov
jne
sbb
bound
xchg
add
mov
jmp
inc
cmp
pop
pop
xor
pusha
addb
add
mov
rcrl
lock
fiaddl
mov
roll
pop
dec
and
inc
cmp
shrl
push
mov
adc
or
pop
and
and
or
lret
fdivrl
nop
adc
ret
faddp
xchg
fidivl
add
loopne
pop
add
sbb
in
jmp
dec
cmp
test
and
mov
cs
adc
lock
sub
sub
sub
mov
movsb
add
cwtl
push
fcom
cli
push
inc
cmpsb
push
movb
jne
inc
je
add
xor
les
push
push
adc
push
xor
sub
pop
lcall
push
mov
cmp
push
mov
inc
jb
add
out
in
add
stos
or
and
or
cmpsl
adc
mov
fimuls
or
or
sarb
add
inc
cmp
mov
sub
cmp
ret
push
je
mov
sub
aam
add
cmp
jmp
fucomi
or
fdiv
push
lahf
push
inc
add
push
or
data16
shlb
mov
jmp
adc
sbb
outsl
push
mov
adc
adc
and
sub
cmp
adc
push
rorb
jmp
fcompl
dec
mov
aam
loopne
push
test
and
fidivl
jnp
dec
xor
push
mov
movb
lock
inc
sub
nop
out
out
cmpb
push
or
adc
sub
xor
cmp
inc
jmp
or
in
mov
lds
jbe
jne
imul
add
push
xorb
push
mov
adc
cmp
sbb
xchg
add
js
sarb
fcomps
je
dec
mov
dec
je
mov
mov
inc
lock
pop
fadds
xor
shll
jne
push
pop
xor
xor
jne
push
adc
and
or
incl
mov
dec
jo
stos
into
mov
pop
mov
adc
adc
gs
cmp
jge
addr16
inc
mov
jae
add
and
jae
push
and
mov
xor
jl
pop
addl
add
and
mov
sub
stc
xor
pop
inc
rorb
jp
hlt
add
psubd
push
sbb
pushf
or
les
and
and
iret
idivb
and
hlt
sbb
xchg
addr16
loop
push
gs
and
sub
xchg
sbb
adc
orl
test
or
or
nop
dec
mov
insb
pop
lock
push
pop
enter
lret
ds
mov
arpl
add
cmp
addl
or
sub
rclb
lock
ja
sub
stc
loopne
addr16
pop
inc
and
lods
imul
or
mov
addl
mov
loop
push
add
nop
add
mov
mov
cmp
or
sbb
mov
jo
cmp
add
fistpl
subb
xor
lea
or
movsl
mov
cmp
int3
ds
sti
ret
out
subl
mov
mov
popl
xorb
inc
ret
inc
add
pop
das
ljmp
js
xor
shrb
rcrl
inc
adc
sahf
push
and
pop
inc
mov
notl
sub
jno
add
popa
mov
jno
push
or
pop
pop
loop
mov
push
push
mov
sub
mov
shrl
cmp
decb
in
ds
sub
push
push
cmp
sub
pusha
ss
rolb
insb
enter
pusha
movsb
adc
xor
push
mov
jl
lcall
movsl
add
cmp
or
aaa
je
xchg
cmp
cmp
inc
mov
sub
sub
pusha
mov
add
push
pop
popl
je
push
movsb
aas
scas
ds
mov
daa
addb
loope
mov
mov
pop
cmp
lret
fstl
add
mov
scas
jmp
out
andl
mulb
in
pop
pop
pop
and
push
sbb
pop
pop
xor
jo
add
andb
aaa
pusha
pop
test
or
cmp
push
dec
add
ds
xor
push
insb
mov
movd
and
mov
jmp
dec
incl
rcrl
pop
jo
jl
mov
dec
shl
loopne
and
clc
das
xor
or
mov
gs
orl
addb
add
dec
fcoms
mov
and
or
lods
insl
loopne
je
in
cmp
lea
add
adc
xchg
xchg
adc
adc
mov
push
and
push
xchg
int3
out
push
inc
mov
test
das
adc
lret
sbb
xchg
pop
mov
add
sbb
adc
testb
xor
faddl
ljmp
mov
popf
pushl
leave
lcall
hlt
lahf
cmp
cmpsb
lock
sub
push
outsl
cltd
daa
add
sub
xor
mov
cmc
lret
xchg
inc
mov
push
push
or
or
dec
mov
cwtl
cmpsb
imul
orb
fwait
mov
cmp
jecxz
mov
adcb
add
or
or
pop
xor
push
mov
cs
push
or
xchg
push
dec
cmp
or
lea
and
cwtl
inc
mov
dec
shlb
adc
add
add
out
or
sub
or
cmpsl
jl
into
incb
mov
movsb
andl
mov
fwait
mov
stos
popf
adc
mov
enter
push
sub
mov
inc
jle
jle
sub
cmp
xor
or
sbb
or
cmp
jbe
cmp
sub
out
add
pop
lock
test
pop
push
inc
sbb
sbb
mov
sub
fildl
insl
xchg
inc
jmp
adc
jae
add
mov
jnp
mov
nop
add
jne
nop
lret
sti
lods
out
dec
jae
imul
sbb
push
pop
cmp
and
pop
sub
xchg
dec
lea
sbb
aaa
push
bound
lahf
mov
adc
dec
cwtl
fidivl
cs
and
adc
addb
sub
cmp
mov
push
movsl
jbe
sub
mov
jne
stos
loopne
je
mov
jno
mov
data16
in
mov
dec
adc
xchg
lea
testl
testl
fnstsw
mov
inc
jmp
sahf
dec
dec
or
iret
xor
cmovl
and
and
lea
es
dec
xor
cmp
or
jecxz
jl
inc
insb
push
push
inc
jmp
cmp
inc
data16
pop
pop
xor
push
div
dec
mov
dec
push
or
pop
shl
jne
push
popa
jmp
loop
dec
popa
aad
push
fsubrs
cwtl
jge
es
repnz
mov
icebp
inc
jae
sub
cmp
cmp
fbstp
or
mov
add
jp
pop
call
idivb
mov
xor
jne
push
fiaddl
test
add
int
call
add
mov
call
pushf
imul
mov
mov
push
sarb
add
push
or
enter
inc
mov
shrb
orl
mov
iret
mov
out
mov
dec
pop
and
shll
cmp
pop
xchg
pop
inc
idivl
push
or
mov
pop
push
fnsave
mov
out
xchg
or
call
int3
out
insb
adc
mov
int
push
cs
xlat
dec
into
jle
fsubrl
ljmp
pop
cmp
xchg
push
adc
push
pop
iret
int3
xchg
dec
xchg
pop
dec
xchg
lods
push
and
nop
jbe
pop
sub
cwtl
xchg
test
push
pushf
insl
mov
mov
push
lea
lcall
or
push
loopne
cld
sub
add
repnz
adc
jb
push
add
inc
ja
shlb
mov
cmpl
insl
mov
pop
and
jg
or
jle
data16
sbb
sti
jg
add
xor
loop
and
sub
aaa
sbb
gs
call
lock
add
shrl
sahf
mov
jae
pop
mov
dec
sub
add
mov
pusha
aad
or
je
sub
sbb
jl
insb
imul
shrl
shl
shr
or
mov
sahf
dec
mov
adc
outsb
mov
mov
adc
mov
adc
and
inc
cmp
mov
sub
icebp
out
sub
rcr
fiaddl
mov
rolb
fsubrs
or
or
fisubrl
bound
sbb
mov
mov
mov
mov
loope
jl
dec
call
int3
jmp
xchg
or
jp
call
movb
and
ficomps
dec
into
jmp
lods
xchg
jmp
rol
rolb
pop
or
int3
and
and
sbb
sub
pop
jne
push
lret
das
sub
test
sbb
in
sbb
movups
inc
lods
fs
jo
mov
inc
mov
inc
mov
or
mov
or
inc
add
loop
push
pop
jl
out
nop
movsb
std
call
into
rcrl
mov
ret
jo
sub
push
mov
or
add
testb
adc
sbb
mov
dec
jecxz
stos
push
push
idiv
add
pop
int3
sbb
jne
xchg
push
popa
add
pop
cmp
outsb
je
push
int
lcall
and
int3
test
xor
rorb
lahf
cmp
pop
in
or
pop
mov
mov
mov
jne
stos
mov
adc
cld
add
push
sub
jo
push
sbb
dec
in
sbb
ret
add
sbbl
push
cs
or
mov
sub
or
xchg
pop
imulb
es
insl
imul
sbb
lcall
jecxz
cld
in
adc
mov
pop
lea
add
fadds
pushl
mov
sbb
add
lret
and
mov
mov
pop
jl
call
add
xorl
inc
popa
ret
mov
testb
call
pop
or
xlat
jmp
rorl
sub
fists
pop
jno
and
push
iret
jmp
xor
rcll
andb
pop
mov
leave
mov
cwtl
xchg
lods
movsb
ret
adc
jb
das
ss
test
push
add
rorl
xor
xchg
lret
lock
loope
or
push
sbb
push
outsl
add
std
test
push
and
dec
in
loopne
sbb
jmp
cmpsl
dec
decb
adc
in
mov
mov
push
stc
push
movsb
mov
dec
cmp
xor
sbb
or
pop
ljmp
cmp
inc
das
lahf
hlt
sbb
push
lea
add
cmp
leave
sar
mov
aas
or
cmpsb
pusha
add
or
addl
sbb
mov
mov
cmp
push
arpl
pop
dec
movd
cmpl
cltd
xor
cmpsb
push
lods
loop
pop
ret
mov
pushf
mov
jo
push
pop
pusha
dec
pusha
and
cmp
inc
pushl
mov
js
xor
fimull
pop
pusha
cmp
or
inc
push
push
ds
rorl
loope
popf
and
adc
orl
mov
mov
imul
mov
pop
mov
fsubl
mov
add
adc
lcall
adc
push
hlt
mov
andl
sbb
test
pop
xor
pop
add
or
cmp
fsubs
add
sbb
sbb
sbb
js,pt
inc
call
jmp
push
pop
cmp
lret
dec
inc
outsb
cmp
adc
hlt
in
inc
xor
or
inc
pusha
jns
cmp
pusha
enter
inc
mov
lea
rcll
add
je
dec
or
or
mov
pop
add
lea
mov
and
fstps
jl
mov
int
lods
pop
sbb
test
loopne
out
sbb
mov
inc
mov
out
add
fcoml
xchg
mov
rol
cs
enter
add
int
imul
pop
mov
pusha
and
mov
dec
je
rcl
or
sbb
add
fcompl
xor
loope
mov
jb
fldcw
cwtl
mov
inc
mov
sbb
inc
dec
xor
imul
mov
mov
shll
dec
std
xchg
lret
ss
loope
enter
xor
jae
subb
mov
cmp
jne
bts
adc
add
mov
push
adcl
adc
aad
gs
xchg
and
pop
lahf
dec
add
loopne
imull
ret
sub
sub
add
add
add
dec
dec
dec
int
andl
jbe
fs
jl
or
pop
jns
adc
fiadds
into
sub
adc
sbb
mov
pop
pushfw
std
aam
jle
add
test
sub
and
pushf
xchg
inc
and
popa
add
mov
push
mov
push
lea
or
inc
push
add
shlb
test
stos
in
and
mov
push
or
add
lods
arpl
inc
xchg
and
push
inc
xchg
adcl
push
stos
mov
es
call
mov
add
jmp
pop
pop
mov
pop
mov
movl
stos
and
xchg
aas
push
jae
adc
movsb
mov
adc
ja
xchg
add
lcall
jne
adc
sub
pop
adc
mov
fimuls
shrl
cmp
cmp
je
xor
dec
inc
and
sbb
js
in
cmpsb
or
jmp
and
push
and
push
mov
push
loopne
fdivr
xchg
cmp
pop
adcl
push
mov
add
cmp
mov
ret
call
or
orl
sbb
dec
jecxz
add
xor
add
out
or
cli
adc
add
or
mov
adc
mov
xchg
or
pushw
ss
int3
add
mov
push
inc
mull
add
mov
bound
cltd
push
mov
inc
pop
mov
pop
pushf
push
xchg
and
out
pop
fcompl
pop
mov
loopne
mov
and
cmp
xchg
dec
jae
fstpt
add
inc
andb
loop
sub
test
lea
jmp
xor
roll
sbb
dec
jle
mov
mov
mov
inc
mov
jmp
lahf
push
test
sub
cmp
jg
insb
pop
jl
jmp
addl
js
pop
fs
add
sbb
or
stos
popa
add
push
push
adc
push
jo
add
add
adc
xchg
aam
sub
mov
pop
adc
inc
or
mov
sub
jl
pop
adc
push
lds
leave
cwtl
pusha
cmp
jno
xlat
and
pushf
push
dec
add
sbb
push
dec
test
lock
lret
xor
outsl
stos
popa
jge
mov
add
add
inc
xor
loopne
push
stos
adc
movsb
push
pop
pop
pop
icebp
fisttps
inc
adc
gs
cmp
push
pushf
imul
sub
mov
push
or
add
sarl
sub
push
bound
add
data16
inc
cltd
jmp
push
or
or
adc
idivb
pop
les
and
pop
mov
adc
adc
sbb
or
and
rcrl
jo
cmpsl
testl
jle
fwait
dec
fucomi
in
push
mov
or
scas
cmpl
gs
or
or
or
cwtl
movsl
cwtl
data16
push
jne
push
aas
out
mov
pushl
leave
inc
push
or
enter
or
dec
arpl
inc
mov
xchg
jno
shlb
sub
jmp
push
std
js
ss
jne
push
push
clc
mov
dec
jnp
jne
pop
push
xchg
add
popa
pcmpeqw
loope
loopne
movsb
mov
or
rolb
pop
mov
in
arpl
jo
and
lea
mov
std
lods
pop
adc
lcall
movsl
stos
mov
mov
or
movsb
cmp
cmp
cmpb
or
outsb
outsl
mov
add
jb
imul
dec
or
fcoml
and
cmp
imul
js
mov
imul
outsb
movsl
fadd
or
cmpb
pop
sub
cmp
ror
or
jne
mov
clc
push
or
scas
rcll
or
or
push
xor
push
mov
outsb
dec
xchg
jbe
into
jmp
nop
or
or
je
out
pop
cmpl
dec
je
jae
mov
push
mov
mov
mov
ret
or
and
or
loopne
mov
sbb
pop
lds
in
xchg
mov
cwtl
jo
adc
sbb
das
or
mov
push
inc
pusha
jne,pn
sbb
rol
inc
mov
xor
jo
adc
add
cmp
mov
mov
pop
popf
lcall
ja
jle
push
icebp
or
int3
cmp
pop
jmp
cwtl
les
test
dec
sub
test
aaa
sub
ljmp
cmp
add
orl
loope
jg
loopne
dec
adc
dec
adc
add
cmpl
cs
shlb
dec
sbb
andw
jecxz
ja
bound
inc
loop
jno
push
push
sub
pop
push
out
mov
dec
mov
jb
sbb
sub
ljmp
adc
sbb
add
mov
test
lahf
push
push
push
movups
xor
add
or
add
xor
mov
dec
adc
in
mov
or
daa
push
push
ljmp
mov
add
inc
and
imul
cmpsl
mov
jmp
adcl
mov
stos
popa
ljmp
clc
shlb
ret
neg
push
add
lret
out
cmp
mov
clc
call
or
xor
add
push
push
iret
out
mov
push
cmpb
mov
rclb
out
xor
mov
sbbl
mov
notl
push
and
gs
or
stos
inc
cmp
or
xor
sub
clc
or
sub
and
stos
cmpsl
push
fsubrs
mov
jno
push
mov
lock
imulb
or
mov
mov
inc
andb
mov
rorb
in
ja
mov
aaa
and
fcompl
xchg
jp
jle
mov
out
sbb
jo
addl
dec
jl
out
rcr
or
in
add
inc
cwtl
pop
popf
add
call
or
adc
xchg
ljmp
and
arpl
stos
or
rcrb
sbb
test
adc
inc
mov
cmp
inc
dec
pop
dec
or
xor
or
mov
loop
push
push
addr16
mov
adc
enter
jns
daa
xor
jae
dec
in
and
mov
cmp
add
sub
add
fists
xchg
sbb
push
or
push
xchg
xchg
xchg
xchg
or
adc
outsb
mov
sbb
sbb
dec
dec
dec
dec
sub
xor
pop
add
cmp
inc
and
inc
cmovs
pushf
pushf
push
push
pop
add
daa
pusha
fs
daa
jo
js
idivb
and
sbb
cltd
fs
test
xchg
dec
xchg
cwtl
pushf
fs
dec
mov
and
mov
xchg
dec
enter
xor
sarb
leave
and
loopne
call
in
aam
and
dec
xor
clc
cld
add
cmp
add
add
add
shll
adc
leave
sbb
and
xor
and
sub
xor
and
xor
cmp
leave
adc
inc
gs
dec
fs
imul
xchg
dec
es
pop
pop
pusha
lods
add
je
rcrb
adc
push
adc
cmpsb
dec
mov
and
test
xor
mov
xor
imul
movsb
mov
and
xor
sbb
sbb
and
and
cmp
cmp
mov
xor
inc
rorb
dec
enter
mov
mov
pop
mov
sbb
xchg
adc
xorl
bound
rolb
or
pop
adc
push
mov
xor
lahf
push
or
nop
aam
or
pop
push
outsl
enter
pop
add
fcoms
fsubrp
xorl
lret
and
xchg
add
or
or
and
pop
out
jb
aas
mov
shll
dec
xor
adc
or
inc
outsb
and
shr
add
es
and
cmc
xorl
test
js
or
mov
in
test
adc
push
jae
bound
jo
fcmovbe
aam
insl
insl
loop
mulb
shll
and
or
sub
adc
clc
incb
bound
or
jmp
inc
cmp
outsb
and
mov
and
aaa
out
jae
jecxz
sbb
add
or
cwtl
or
or
or
and
or
fnstsw
aaa
jge
je
cmp
ja
outsl
xchg
ljmp
aas
pusha
mov
pusha
loope
adc
pop
sub
xor
inc
and
adc
fisttpll
filds
fldl
cmp
mov
outsl
mov
clc
rcll
testb
push
jns
and
adc
sti
jge
sahf
lret
add
test
fildll
and
sub
loopne
sub
mov
sbb
das
or
cld
push
inc
or
sub
push
and
lcall
or
pop
xchg
pop
testl
pop
add
pop
rorl
es
push
and
or
push
or
jmp
inc
flds
fstps
jmp
fisttpll
cmp
adc
fisttpl
xor
push
hlt
sbb
test
adc
jbe
in
pop
orl
push
xchg
popa
mov
imul
add
sti
fisubs
cmp
add
inc
test
xchg
loope
call
dec
mov
fldz
cmp
movsl
cli
mov
rolb
dec
jmp
sub
sub
jmp
sub
nop
xchg
add
push
or
push
fldcw
movsb
jns
add
adc
add
jge
xor
scas
cld
add
mov
jnp
rolb
or
shrb
mov
mov
aaa
test
xchg
add
or
jge
ffree
repz
pop
xor
in
or
pop
inc
fdivl
ss
xlat
inc
bnd
je
cld
push
mov
mov
pop
test
stos
xchg
dec
cld
cli
shrl
call
push
shrl
nop
loopne
stos
cmp
pop
or
push
rolb
adc
adcl
lcall
cmpsb
mov
aaa
rol
or
push
pop
cwtl
sbbb
and
mov
jle
push
add
sbb
testl
test
pop
lret
add
xor
and
test
add
aaa
mov
add
aam
pop
push
add
push
je
mov
aaa
push
pop
sbb
pop
imul
add
or
pop
or
sbb
sbb
hlt
mov
cltd
and
cmp
dec
sub
sub
loopne
sarl
and
pop
mov
sbb
mul
aad
pop
sarb
pop
fstpl
pop
das
in
adc
gs
adc
in
leave
dec
inc
and
push
fcomps
lock
add
or
push
test
enter
dec
cwtl
push
add
mov
jo
data16
jo
sub
pop
lods
addr16
popa
xor
xchg
lock
mov
push
inc
or
ret
add
and
fcomps
or
sbb
loopne
ja
and
push
das
ss
lods
dec
rolb
cltd
xlat
sbb
pop
pushf
arpl
sbb
jne
nop
add
out
fnstsw
jl
inc
and
push
jnp
pop
xchg
cmp
hlt
addl
mov
and
push
inc
add
sbb
outsb
adc
jmp
or
xor
add
mov
shufps
push
push
dec
cmp
enter
arpl
jg
or
sbb
pushl
and
decb
mov
xchg
fsubs
into
pop
adc
push
mov
shll
ret
xchg
insb
test
fbld
aam
enter
fld
fucomp
mov
add
fldcw
pop
out
in
pop
add
mov
xor
test
stos
cmpsb
repnz
mov
xchg
das
pop
sbb
gs
or
imul
add
or
push
push
inc
mov
pop
and
pop
xlat
mov
les
or
push
and
xchg
push
push
nop
cld
es
sub
mov
push
push
movsb
jl
sub
ljmp
adc
fnstsw
lgs
or
mov
loop
aas
sub
mov
fyl2x
and
xchg
xor
fdivrl
mov
xchg
push
push
mov
les
sub
lock
fsubs
mov
mov
inc
adc
dec
lock
pop
repnz
sbb
lea
movsb
fldpi
xor
mov
or
sbb
adc
cmp
mov
je
sbb
xorb
push
cmp
xsaveopt
pop
insl
test
mov
mov
cmp
test
or
mov
xchg
out
jmp
and
loopne,pn
insl
mov
push
jg
xchg
or
and
mov
test
mov
dec
lds
jle
jg
pop
jo
cmovae
jne
cmpsb
loopne
mov
mov
inc
cmp
push
mov
sbb
sahf
adc
push
ja
inc
mov
test
sbbl
push
pushf
add
lcall
lds
add
rolb
jo
rol
mov
sbbb
nop
lret
je
test
sub
mov
cmpsl
xor
push
inc
mov
repz
jbe
test
sub
xchg
inc
out
daa
xor
jb
or
or
sub
add
loope
push
or
mov
adc
xor
cmp
jmp
or
push
mov
cltd
mov
xchg
dec
imul
dec
push
or
jle
pop
inc
outsb
add
aas
xor
push
xchg
inc
push
and
cmp
idivb
loopne
icebp
loopne
test
add
adc
out
xchg
lock
stos
jp
pop
pop
mov
push
call
das
inc
fdivrl
inc
adc
and
pop
add
rcr
bound
adc
scas
ret
dec
js
mov
or
inc
lea
pop
mov
lret
jge
mov
push
pop
mov
lret
loop
rolb
cmpl
xchg
or
pop
repz
out
imull
or
pop
pop
and
mov
out
sub
outsl
mov
inc
adc
iret
sbb
jbe
dec
mov
add
lods
dec
or
or
cmp
sbb
sub
adc
loopne
mov
mov
jae
pop
inc
shlb
mov
sahf
jns
adc
lock
or
mov
mov
inc
or
or
pop
xor
add
xor
aaa
je
push
pop
or
mov
es
or
pop
mov
adc
xchg
xor
cmp
mov
mov
cmpl
das
clc
pop
aam
jb
loopne
mov
shl
loope
ljmp
subb
aam
pop
popf
jb
mov
and
es
sahf
or
out
push
or
and
aam
out
inc
xor
adc
xor
mov
int3
pop
in
sub
push
out
xor
je
lahf
lds
mov
or
dec
jns
mov
mov
push
rclb
inc
lods
lds
movsb
out
sbb
test
jmp
push
mov
out
int3
loopne
dec
or
inc
rcrl
dec
xor
push
cli
cmp
cmp
sub
push
jb
pop
pop
push
push
jb
or
pop
add
add
xchg
mov
xor
cmp
and
shl
hlt
push
aas
lea
cmp
lea
shll
push
xor
push
and
adc
cmp
xor
or
add
roll
loopne
arpl
mov
inc
dec
add
out
add
andl
xor
into
out
mov
lea
ror
pusha
mov
sub
mov
in
xchg
jge
sbb
cmovb
lods
shl
test
pop
aas
or
inc
or
adc
adc
adc
fdivp
xchg
stos
jb
lret
jne
and
sbbl
mov
jae
and
push
adc
push
nop
inc
xor
dec
push
sub
push
push
popf
or
push
pop
adc
pop
mov
add
dec
je
pop
add
mov
xchg
pop
adc
adc
addr16
lret
add
xor
adc
mov
jne
and
cmp
add
fmuls
mov
mov
test
push
mov
rorl
or
sub
repz
adc
push
xchg
mov
or
pop
cmp
xchg
xchg
adc
inc
cs
pop
scas
or
ss
cmp
je
or
out
mov
dec
std
decl
incb
mov
cmp
pop
jne
dec
mov
inc
inc
mov
mov
jae
xor
data16
and
fcompl
fistpll
shrb
inc
cltd
arpl
sub
xor
inc
jmp
or
dec
sub
add
adc
or
wrmsr
push
add
cs
adc
mov
dec
popf
push
add
adc
jno
fcoms
gs
ss
add
sbb
fadds
loopne
jne
xlat
imul
je
stc
fdivs
or
add
aad
stos
gs
in
inc
pop
ret
push
fstl
je
cwtl
rorb
cmp
adc
sub
js
add
mov
popf
push
clc
dec
inc
adc
aas
sub
push
cmp
sub
jle
lds
xchg
adc
add
sbb
mov
movb
add
lods
sar
dec
inc
mov
fiadds
ljmp
pop
push
adc
xor
je
dec
lea
sbb
das
mov
or
movb
fs
cltd
push
inc
add
xchg
subb
imul
add
add
inc
sbb
push
insb
sbb
jb
ret
cs
cmp
push
push
imul
jns
inc
subps
inc
xchg
push
shlb
and
pop
and
int3
push
sbb
pusha
inc
lahf
dec
cmp
add
imul
jmp
xchg
jmp
jns
cwtl
xchg
jge
xchg
outsb
or
mov
rcll
pop
lods
movsb
loope
and
push
adc
mov
xor
arpl
lret
cmp
or
sbb
and
jmp
addl
xor
add
data16
push
fadd
xchg
mov
sbb
out
mov
xor
push
xchg
test
jge
adc
and
jb
cmp
mov
xchg
xor
mov
fcomps
or
adc
or
and
xor
xchg
sahf
sbb
mov
or
or
pushf
add
call
mov
adc
pop
incb
pop
jo
cmp
jle
xor
ret
cmc
pop
adc
xchg
daa
xor
pop
and
in
cmpb
jbe
sub
add
clc
pop
test
enter
js
subb
sarl
js
in
cli
pop
mov
and
add
insb
movb
mov
push
xchg
scas
and
mov
addb
dec
ja
neg
sbb
mov
pop
loopne
jecxz
adc
jg
ret
add
call
jne
bound
xor
sahf
cmpb
xor
subb
pop
adc
mov
pop
inc
xor
mov
mov
xor
mov
or
mov
or
arpl
mov
or
mov
hlt
test
or
adc
fldl
dec
scas
and
xor
rclb
mov
bound
inc
sbb
xor
mov
jg
das
in
fs
cld
add
hlt
shrd
dec
inc
ret
adc
inc
push
dec
pop
pushf
cmp
jge
sbb
in
mov
add
fstpt
inc
into
fs
and
xor
out
and
sub
cmp
cmp
adc
inc
mov
inc
test
xor
sbb
fisubl
loop
or
sbb
adc
ja
imul
push
and
in
sbb
icebp
fisubrl
loope
movq
or
jmp
adc
mov
mov
cmp
sarl
insl
loope
test
push
sbb
hlt
xchg
inc
cmp
mov
push
lock
sarl
push
jg
mov
fs
xor
inc
and
xchg
imul
jb
or
dec
and
add
imul
loopne
or
jnp
stos
inc
inc
and
ja
js
movsb
test
or
cmp
mov
adc
add
mov
movl
loopne
sbb
jo
sbb
push
sbb
sbb
push
jmp
lock
movsb
adcl
mov
notl
xchg
inc
or
js
sahf
jl
cli
ret
aaa
push
pop
or
rolb
lea
and
pop
xor
pop
push
add
add
je
das
push
repnz
je
add
and
jbe
rolb
jl
into
shll
inc
popa
or
pop
xor
push
sbb
mov
add
and
adcl
sbbb
jp
xor
jne
push
cmp
nop
aaa
fs
out
push
mov
mov
stc
push
mov
sub
sbb
pop
shrl
push
push
push
push
out
dec
out
les
orl
adc
sub
adc
or
xorl
push
add
pusha
aaa
jae
jmp
xor
ds
in
pop
or
fstps
or
dec
int
pop
data16
daa
out
mov
inc
popa
je
pusha
mov
sbb
ss
xor
inc
sbb
aas
xor
pop
pop
dec
adc
bound
cmp
je
xor
je
rorb
clc
push
mull
or
push
add
pop
shll
mov
inc
mov
adc
and
arpl
imul
repnz
sahf
mov
pop
movsb
inc
xchg
roll
sub
test
and
out
and
push
adc
push
fbld
cmp
cmp
and
jnp
js
jb
jp
sarl
push
arpl
hlt
jbe
or
add
xchg
inc
popf
ret
loopne
cmp
cli
jge
mov
adc
sbb
xor
inc
mov
add
int3
arpl
cmp
or
add
aam
popa
fdivrl
lea
loope
inc
cmc
cmp
and
fwait
push
icebp
les
inc
add
push
aam
pop
pushl
inc
inc
insl
dec
xor
mov
xor
push
leave
rorl
push
xchg
cltd
and
ret
pop
lods
les
adc
movsb
xchg
cmp
push
pop
data16
mov
rcll
jae
fmuls
cmp
mov
sub
mov
mov
mov
inc
mov
or
jbe
adc
mov
jp
xchg
sub
adc
clc
cmpl
aaa
pop
mov
sbb
dec
push
mov
adc
add
mov
push
and
push
mov
pop
cmp
adc
incl
inc
lods
lret
jl
cmp
enter
and
jo
icebp
jb
jge
or
mov
inc
push
in
negb
pop
cmp
adc
or
push
push
jmp
or
jmp
cmpb
mov
or
lcall
adc
sub
sbb
repz
add
dec
minps
rcl
popa
test
xor
call
data16
int3
or
push
xor
sbb
lret
xor
gs
sbb
and
jo
jne
adc
jp
push
aas
cmp
cmp
je
mov
test
mov
push
int3
or
sbb
mov
or
pop
mov
pop
adc
jnp
xchg
es
cmp
xchg
and
into
xchg
sub
xor
xor
sub
or
popf
arpl
or
sub
sbb
mov
cmp
sub
pop
ret
pushf
and
xor
dec
add
pusha
das
inc
jns
inc
add
mov
call
cmpsl
mov
rorl
push
adc
lret
scas
mov
test
push
clc
shr
add
or
dec
cld
aaa
add
add
shr
or
mov
push
and
dec
call
and
add
mov
insb
xchg
push
movsl
notb
lock
stc
xchg
mov
mov
xchg
jp
fcmovu
fimull
cmp
leave
inc
jbe
add
lock
mov
sbb
cmp
or
xor
pop
fimuls
rorb
int3
cs
sbb
mov
and
xchg
jp
sarb
adc
adc
fcoml
bound
xor
push
fidivs
clc
xorb
pop
push
mov
lea
inc
inc
and
and
int3
out
stos
lods
mov
lcall
inc
movsl
dec
rorb
ja
pusha
cmpsb
and
xchg
add
es
dec
dec
fiaddl
push
mov
sbb
rcll
xor
push
lea
mov
icebp
loop
sub
insb
fldcw
cli
jne
mov
sbb
not
test
add
cmp
or
mov
pop
or
data16
popf
sub
fnstenv
jbe
les
pop
mov
mov
and
xor
inc
insb
add
xor
imul
push
sbb
and
dec
adc
call
xor
aaa
ret
ljmp
ret
orl
enter
lret
setbe
fnstenv
decl
aas
adcl
adc
ror
dec
sub
or
sbb
cmp
add
inc
mov
insl
cmp
ret
and
seto
and
sbb
fs
loope
add
inc
test
adc
ret
adc
mov
or
ror
push
pop
xor
pop
divb
mov
mov
das
add
outsl
inc
mov
xchg
mov
les
inc
lcall
clc
and
xor
lret
mov
sbb
sbb
mov
adc
xchg
fistpll
mov
repnz
stos
and
add
aam
sbb
add
pop
je
add
xchg
and
pop
int3
lock
xor
push
sub
sbb
hlt
mov
mov
hlt
sub
mov
sub
push
inc
aaa
mov
sarl
call
and
jmp
xlat
out
cmpl
call
cmp
xor
repnz
and
add
sbb
cmp
popf
mov
cmp
xchg
call
pop
in
mov
cmp
jle
sbb
and
rclb
lea
push
jp
adc
mov
test
ds
leave
inc
xor
sbb
cmpsl
sub
jmp
mov
cmpb
jl
xor
incb
xor
inc
aam
add
rclb
push
fstl
inc
mov
shrb
cmp
add
cmp
imul
insl
xor
mov
ds
mov
mov
cmpsb
roll
and
loopne
cmp
ret
ret
sub
jmp
adc
rcrb
jne
cmp
jne
imul
inc
dec
add
jmp
jbe
adc
adc
push
imul
or
fprem
sbb
add
roll
leave
add
clc
js
je
mov
iret
adc
xor
or
jne
dec
dec
dec
pop
pop
or
rclb
je
jecxz
pop
adc
xchg
adc
or
and
movsl
dec
push
add
push
or
push
mov
lret
aas
inc
push
sbb
adc
inc
adc
and
es
or
or
add
push
mov
xor
adc
fdiv
fiaddl
or
sbb
inc
sbb
add
and
sbb
sbb
inc
push
sbb
fcoms
adc
and
inc
and
fnstenv
movsl
icebp
sbb
adc
movsl
in
adc
sbb
sbb
or
jns
mov
dec
jne
pop
pop
pop
aam
shll
adc
xchg
test
lods
rcl
ljmp
shr
sub
cmp
adc
pop
shr
pop
push
idiv
and
maskmovq
cld
lock
je
pop
loopne
or
rolb
gs
mov
sbb
dec
or
dec
into
add
jo
lods
jae
adc
cmc
movsb
int
inc
xchg
cmpsl
enter
sarb
or
aad
push
or
inc
sarl
jbe
xchg
mov
hlt
adc
jne
ret
movsb
and
into
adc
or
push
jecxz
lock
test
jae
adc
outsb
add
add
cmp
nop
es
mov
inc
lcall
mov
mov
lret
gs
fidivrl
mov
popa
decl
add
mov
pop
push
push
ljmp
cld
inc
ss
adc
sub
pop
rclb
cmpsb
jnp
push
inc
jns
add
pop
xor
out
cld
jbe
jmp
leave
jne
mov
add
pop
cmp
ljmp
pop
mov
popf
push
loop
push
mov
adc
fldcw
inc
insl
ret
pop
push
lcall
dec
xor
add
mov
mov
cwtl
inc
jecxz
cs
mov
je
adc
lahf
idiv
and
jb
cmp
ja
add
cmp
adc
cmp
jne
push
shll
leave
adc
jo
push
inc
mov
jl
pop
pop
and
je
insl
orb
iret
and
and
jge
sbb
or
pop
sub
rclb
mov
mov
pushf
movl
aas
cs
push
mov
inc
add
mov
push
xchg
sub
mov
cmp
mov
mov
add
ret
pusha
movw
adc
add
jb
add
sbb
pop
xchg
xor
mov
fisubs
pop
mov
subl
mov
push
or
jbe
cwtl
call
or
sub
cmp
push
andb
sbb
dec
push
data16
push
add
sarb
push
add
cmp
mov
mov
adc
pushl
ret
cli
shr
rcll
imul
lea
push
loope
sar
dec
jmp
popf
dec
movswl
xchg
fstpt
es
dec
out
jge
fsubrp
dec
stos
cmp
mov
pop
lock
cwtl
inc
xorl
xchg
dec
mov
push
ss
add
dec
imul
dec
rorl
mov
push
dec
js
push
jb
jl
push
or
dec
jle
repnz
loope
adc
jno
loopne
adc
mov
mov
mov
and
and
lea
stos
pushf
imul
adc
cmpsl
add
aad
adc
sahf
cmpb
dec
and
adc
ja
lods
bsr
dec
icebp
enter
mov
inc
call
loop
ljmp
dec
mov
inc
jnp
jbe
mov
lea
rolb
cs
mov
or
les
dec
or
xor
fcmovnb
dec
or
push
adc
test
sub
xchg
cmpsl
inc
lods
shll
shrl
data16
pop
shrl
sub
insb
jl
in
test
and
rclb
jae
loope
mov
clc
mov
shll
mov
add
shr
or
and
rorb
dec
jmp
dec
sbb
push
lret
test
inc
mov
test
add
inc
mov
jle
int3
shrl
negb
shr
or
mov
dec
mov
out
push
pop
jp
lods
out
inc
jp
lock
dec
and
jnp
repnz
add
cli
pop
nop
xchg
out
repnz
jbe
test
cmp
loopne
mov
xor
leave
test
mov
sahf
or
cli
adc
mov
lret
pop
fisubrl
mov
dec
idiv
dec
xchg
mov
and
jb
sbb
and
or
mov
enter
xor
xor
mov
sbb
sbb
add
dec
scas
inc
repnz
pushw
cmp
loop
out
jge
xchg
pop
xchg
enter
subb
leave
inc
scas
fwait
dec
xchg
xchg
daa
adc
sub
or
dec
mov
fdivp
faddl
jne
fdivrs
aam
inc
jbe
add
jbe
dec
sub
push
popa
mov
sbb
shlb
dec
notb
or
xor
test
xor
adc
or
jns
sahf
add
flds
subb
vfrczps
insl
test
cli
mov
int3
jg
add
xchg
add
idiv
adc
xchg
je
notl
adc
jg
or
adc
or
jb
lock
push
sbb
jge
das
nop
or
lock
and
mov
cmp
add
jne
enter
fnsetpm(287
loopne
rorb
ss
sbb
lret
mov
jbe
stos
aaa
pusha
add
sbb
sub
pop
ds
mov
mulb
cmp
inc
sbb
movb
lea
adc
pop
outsb
call
adc
incb
and
or
cmp
adcb
in
pop
sub
sbb
pop
inc
rcrl
lcall
frstor
jecxz
and
imul
call
imul
call
push
loopnew
fsubs
pop
inc
push
js
add
and
mov
push
in
cmpb
pop
stos
popf
addr16
add
aaa
push
sar
sub
xchg
sbb
into
or
in
mov
imul
xabort
mov
sbb
in
inc
dec
enter
sahf
push
mov
lods
mov
and
dec
int3
addl
aas
call
jge
xor
add
add
into
or
mov
adc
addb
xor
js
xchg
jmp
dec
cmpsl
mov
sub
cmp
jge
sbb
pop
cmc
jmp
cmpb
or
add
dec
cmp
jecxz
in
inc
dec
add
add
fadds
mov
add
call
ret
jp
jne
dec
xchg
lock
mov
jb
int
inc
test
add
es
mov
lret
or
subb
adc
test
mov
imul
add
add
fisubrs
in
dec
add
test
mov
mov
stc
lret
mull
sbb
add
push
outsb
or
adc
push
das
add
repz
dec
imul
pop
or
jne
or
push
test
scas
je,pt
push
xor
dec
push
ret
sbb
adc
mov
je
mov
xchg
or
adc
or
fsubrs
add
test
inc
pop
mov
mov
sub
sarl
xor
into
pusha
inc
add
and
sub
and
insb
popa
ljmp
nopl
add
or
cmpl
inc
adc
push
loopne
or
mov
test
jne
or
or
add
add
roll
mov
mov
xor
mov
adc
xlat
pop
ja
into
push
pop
sub
pop
neg
cmp
adc
jne
and
mov
add
test
mov
jo
add
shlb
ret
cwtl
aam
cmp
ret
and
push
lds
add
nop
clc
mov
xor
adcb
sub
add
push
push
scas
addl
or
sub
sbb
sbb
add
pushf
or
add
add
mov
lock
adc
repnz
test
and
into
or
add
or
mov
add
jp
mov
mov
sbb
daa
iret
xor
sbb
inc
jg
into
into
sbb
or
sub
inc
pop
sub
push
pop
xor
adcl
mov
movsl
cmp
pop
xchg
shlb
or
sbb
stos
xchg
mov
jmp
push
push
mov
mov
pushf
hlt
jecxz
push
lahf
pop
xchg
out
cmp
out
cltd
adc
add
clc
cmp
and
xchg
mov
mov
ret
cltd
and
push
cmp
roll
mov
mov
xchg
lret
lret
mov
xor
pusha
out
pop
mov
inc
mov
les
mov
lahf
xchg
xchg
adc
xchg
mov
int
jbe
mov
enter
in
sub
xchg
sbb
test
lock
scas
cmpl
jnp
mov
jge
flds
cmc
sub
in
mov
nop
je
ret
add
dec
add
fdiv
jle
sbb
pop
inc
sub
dec
loop
sub
je
mov
push
dec
sub
loope
inc
and
fmuls
inc
mov
aad
mov
cmp
jb
cmp
jbe
dec
nop
out
loopne
sub
jmp
push
xchg
fs
xchg
loopne
les
imul
loopne
or
push
hlt
push
test
mov
jecxz
inc
mov
add
and
sbbl
push
adc
ret
mov
in
cmp
adc
sub
cmp
or
fidivrl
xor
mov
call
and
pop
mov
push
fsub
fsubrs
inc
add
adc
push
shr
xor
sub
adcb
lods
push
lret
xor
jns
pop
pushf
push
xor
dec
or
or
or
xchg
sbb
ljmp
and
aas
push
cs
push
inc
push
aaa
sbb
cmpsl
mov
inc
mov
inc
loope
or
loopne
mov
cmp
add
daa
fnstenv
add
xchg
mov
jmp
mov
fiadds
sub
rorb
cmp
push
bound
movsl
lock
inc
sub
inc
or
cmpl
sub
lahf
pop
xchg
mov
loope
aaa
dec
mov
nop
cmc
xchg
mov
pop
test
shll
mov
add
push
ret
das
test
mov
iret
call
dec
adc
push
push
cmp
pop
outsb
push
test
cmp
adc
adc
icebp
mov
mov
pusha
gs
sbb
mov
je
in
or
cli
std
mulb
sbb
mov
xor
xchg
jg
xor
push
push
sti
jo
push
scas
sub
add
pop
call
out
lods
dec
lea
enter
mov
mov
popf
cmp
js
pop
out
sbb
mov
dec
mov
mov
mov
fidivrs
clc
sub
dec
dec
and
sarb
sub
ss
jnp
outsl
jae
ja
enter
adc
inc
or
mov
orl
insl
out
dec
sbb
test
push
xchg
push
or
pushf
iret
mov
or
pushf
mov
push
cmp
mov
sub
add
cmpsl
mov
pop
sub
es
dec
hlt
pushl
push
pcmpeqb
jg
push
lds
scas
sbb
mov
sbb
sbb
out
aas
cmp
cmp
jbe
jg
pop
push
push
push
adc
test
iret
imul
or
push
dec
mov
xor
test
adc
xchg
cmp
repnz
mov
in
cmp
jo
lea
add
jb
sti
pusha
mov
notl
fcomps
jmp
cmpsb
or
inc
and
loopne
and
add
jnp
jge
fcompl
push
cmpsb
xchg
loope,pt
sub
push
or
mov
pop
dec
mov
rcll
push
xchg
xchg
andb
mov
jmp
movsb
test
adcb
scas
shll
clc
outsb
dec
add
dec
daa
movsl
dec
in
and
test
mov
cmp
dec
dec
nop
test
loopne
mov
loop
add
mov
push
xor
mov
add
cltd
mov
push
push
push
mov
es
xchg
popa
dec
push
push
add
vpsubb
push
push
sbb
lds
push
and
push
test
clc
xchg
in
inc
cwtl
pop
sub
sbb
pop
rol
sbb
mov
sarl
or
and
ret
cmpsl
mov
mov
mov
cltd
sbbb
mov
jecxz
inc
inc
cmpsl
and
inc
andl
or
shlb
or
add
inc
rcrl
adc
inc
push
lods
push
mov
sbb
push
inc
push
int
stos
push
add
sbb
pop
test
jmp
mov
add
xor
out
mov
sbb
and
insl
cld
mov
jnp
push
loopne
pop
pop
xchg
cmp
loopne
fs
xor
cmp
xchg
and
jo
jo
lahf
clc
adcb
mov
mov
sarl
add
sbb
xchg
lret
or
cld
iret
cld
adc
dec
test
mov
mov
roll
jmp
aaa
adc
or
adc
mov
sub
cltd
enter
jbe
mov
inc
or
cmp
pop
sbb
mov
loope
jo
scas
addb
add
bound
xchg
mov
or
sahf
push
xor
jmp
stos
rolb
and
call
dec
cltd
push
mov
mov
aas
sbb
lock
popf
xchg
xchg
xchg
jne
rcrb
jp
push
pop
addb
mov
push
aam
loopne
xor
enter
mov
popa
sub
mov
imul
adcb
push
push
dec
or
out
btc
xor
inc
and
and
xchg
nop
insb
jmp
push
gs
mov
adc
aam
and
and
das
rcrl
aad
stos
pusha
jne
sbbl
cmp
pop
xchg
in
popa
xor
push
jmp
imul
fcmovu
dec
pop
sub
push
jo
cmp
sub
fnstenv
inc
imul
add
jb,pn
dec
xchg
jge
cmp
sub
jg
sub
jp
inc
mov
dec
inc
clc
push
sbb
cmp
ja
pusha
or
mov
test
push
aaa
pop
inc
in
xlat
cwtl
pushf
xchg
pop
das
xchg
add
mov
lret
push
inc
cwtl
cmp
jmp
sub
repnz
fidivrs
test
jg
adc
lock
scas
inc
or
lcall
push
add
jmp
icebp
cmp
push
pop
adc
xlat
pop
shlb
or
mov
into
lock
fadds
add
mov
mov
cwtl
add
add
sar
push
pop
jno
int
pop
cwtl
adc
dec
push
xchg
cmp
add
xchg
or
cwtl
jmp
lea
or
lcall
or
cmp
dec
and
push
and
pop
fs
outsb
daa
inc
sub
test
outsb
inc
in
sub
pushl
inc
inc
loopne
pop
cmp
cmp
cmp
mov
popa
cmp
mov
jle
sbb
mov
dec
push
or
adc
jg
lea
add
jg
jae
mov
dec
bound
ljmp
inc
cmp
bound
je
mov
cmp
ja
mov
rcrl
pop
sar
jl
sub
addb
out
int
repnz
sbb
and
cmp
test
jmp
pop
gs
mov
sub
test
and
ret
arpl
stos
or
xor
adc
and
test
mov
and
inc
sbb
push
icebp
and
or
std
xchg
xor
call
sub
jno
inc
push
sbb
test
stos
cwtl
aam
jle
mov
pop
jae
pop
pusha
ret
pusha
inc
mov
cmpsl
and
mov
add
dec
jl
loopne
in
sbb
or
add
add
push
pop
mov
aas
loopne
js
nop
loop
xchg
add
sbb
call
xor
jmp
addb
mov
push
add
fistl
jle
push
push
or
insb
pop
dec
cli
pop
jg
xlat
add
fs
enter
cmp
jl
testb
ret
out
xchg
rcrb
lods
push
or
adc
cs
mov
inc
addl
adcb
lock
addb
test
stos
or
pop
mov
les
sub
mov
in
sbb
into
outsb
loope
fdivs
pop
gs
pop
inc
out
and
sahf
je
ds
lods
sysret
sahf
jb
jmp
and
jbe
mov
or
mov
dec
cmpsb
pop
adc
sbbb
jae
inc
mov
inc
cld
push
mov
jle
cmp
jg
jbe
rol
sbb
out
mov
inc
sub
xchg
cmp
std
adc
add
mov
orl
nop
pop
mov
roll
pop
outsb
pop
mov
sub
rcl
stos
and
idivb
jle
cld
setb
call
movsl
and
mov
adc
lods
inc
fisttpl
sub
add
shlb
or
in
rol
fldpi
mov
cmp
adc
or
lods
addl
cmp
jge
sbb
and
sub
ds
mov
jb
sbb
add
mov
push
call
dec
adc
push
inc
data16
push
adc
pop
cmpb
pop
je
int
nop
pop
stos
cltd
aam
sbbl
adc
add
imul
sbb
mov
pop
or
je
xchg
je
mov
xchg
sbb
jmp
mov
cmpsb
outsl
sub
scas
and
imul
push
sub
pop
jb
cmp
push
add
inc
sbb
repnz
add
cli
cmp
pusha
xor
cmp
and
push
cmp
pusha
cmp
xchg
jbe
jne
push
fildl
pop
mov
or
add
jmp
xor
add
pop
je
mov
push
mov
fadd
xor
mov
or
push
sub
inc
aas
mov
mov
aaa
lds
leave
mov
insl
pusha
out
cli
inc
cs
arpl
mov
loopne
inc
dec
and
xchg
jns
mov
inc
stos
add
ja
loope
inc
sbb
daa
xor
ret
and
mov
imul
adc
sbb
mov
daa
mov
cmp
push
jb
bound
sub
pop
cli
jae
cmpsl
clc
push
lea
movsb
or
jl
push
inc
mov
icebp
insl
push
add
mulb
push
cmpb
sub
add
and
dec
and
jge
imul
and
fcmovb
mov
lret
insb
imul
pop
sbb
add
mov
adc
dec
or
push
aad
sarb
out
or
push
mov
lret
mov
mov
imul
xor
pop
out
cmp
or
add
cmp
add
push
ror
rolb
xlat
add
jecxz
rorl
stc
xchg
sbb
mov
add
hlt
jne
adc
fistpl
or
push
mov
insl
push
add
jb
add
call
pop
sbb
pop
jle
mov
mov
out
cmpsl
les
xor
inc
add
or
sub
adc
dec
test
sub
xchg
or
mov
jo
mov
pop
jg
jg
add
fwait
addb
jbe
fsub
pop
scas
and
stc
test
adc
adc
cs
mov
inc
lock
cmp
or
hlt
adc
jnp
pop
lods
loopne
insb
jle
out
nop
lea
add
in
enter
mov
and
orb
cmp
xchg
add
dec
jg
adc
orl
jg
jmp
adc
cwtl
add
arpl
and
xor
and
or
adc
add
ljmp
popf
mov
mov
out
je
call
daa
adc
gs
xlat
push
aaa
pop
pushf
and
adc
jae
loope
loop
scas
or
test
pusha
pop
and
jns
add
xchg
inc
bound
xor
scas
ret
cmpsl
adc
fwait
or
jnp
es
lret
or
test
rolb
insb
and
push
pop
dec
mov
test
rcr
jns
or
pop
mov
or
cmp
je
cmp
std
call
mov
and
cmp
jb
testb
out
adc
lock
js
add
xor
inc
or
aas
mov
fidivs
sbbl
push
xor
xor
cmp
jbe
xor
pop
clc
push
push
or
cmp
or
outsb
in
push
rcll
mov
inc
shr
jmp
mov
xor
insb
test
or
and
mov
add
push
mov
and
dec
mov
js
shlb
daa
mov
pop
jmp
lods
pop
pop
xchg
pop
inc
es
lret
push
out
std
sarl
sub
mov
mov
cmp
mov
jmp
gs
xor
sub
lods
ss
fnstsw
sbb
and
dec
cmc
add
xor
pop
dec
jns
push
test
aas
sub
stc
add
and
test
aas
jo
jne
and
enter
fisubrl
push
inc
add
and
aas
xor
pop
enter
cmp
out
aaa
pusha
xor
adc
lock
push
push
sbb
test
add
jo
fwait
dec
sub
aam
clc
mov
add
nop
aam
cwtl
lcall
stos
movsb
pop
lahf
je
pop
and
fld
fld1
fbstp
lods
sub
push
fildll
hlt
xor
jmp
lcall
and
icebp
push
cwtl
js
cmp
add
xor
sahf
jmp
cmp
fcomp
jnp
cmp
int
fldenv
cmpsb
pop
inc
jb
add
pop
pop
jno
xor
gs
push
add
and
test
shr
or
or
lea
mov
loope
xchg
adc
mov
leave
xor
enter
push
and
cld
or
or
daa
add
lock
cmp
pusha
sbb
cs
add
adc
mov
and
nop
lock
pop
lock
les
or
insl
xchg
nop
sub
jo
enter
add
cwtl
adc
xor
sbb
pusha
in
add
add
rcr
mov
mov
inc
es
lock
push
mov
lock
xor
mov
cld
sub
jne
add
fimull
ss
mov
mov
push
cmp
sbb
and
jnp
mov
pop
setne
pop
test
adc
dec
dec
roll
enter
int
pushf
nop
test
enter
inc
mov
push
nop
sbbl
add
fdivs
adc
in
jae
in
fiadds
nop
xchg
pushf
cmp
push
filds
or
lock
es
ret
jnp
or
add
inc
jo
aaa
inc
adc
or
scas
sbb
mov
dec
shlb
fistpll
in
inc
leave
mov
insl
in
inc
adc
ss
mov
inc
roll
pop
add
adc
push
dec
popa
mov
js
push
enter
lods
pop
and
push
shll
dec
ret
lock
sbb
or
stc
jno
adc
fs
mov
inc
icebp
mov
sbb
fs
mov
mov
cmpb
dec
jb
js
fdivrl
dec
cs
pop
add
jb
enter
xor
call
xor
mov
imul
mov
rclb
xchg
pop
adc
in
push
dec
outsb
unpcklps
cmc
or
fbld
mov
jb
std
push
jno
pusha
leave
and
dec
fs
xor
js
and
enter
sbb
add
fsubr
adc
inc
xor
test
lea
cmova
hlt
lret
out
out
mov
or
dec
mov
sbb
mov
mov
sbb
mov
in
sti
and
hlt
or
push
icebp
js
rclb
jmp
stos
xchg
lea
xor
iret
mov
adc
cmp
sub
dec
mov
movsl
adc
les
jbe
adc
mov
pop
dec
pop
les
mov
stos
in
ss
outsb
stc
popa
js
lods
add
ja
cmp
mov
loope
mov
mov
adc
mov
in
inc
sbb
adc
mov
or
sbb
dec
sub
and
fs
hlt
enter
nop
lods
pop
jb
sbb
or
popa
push
repnz
cmp
push
in
ret
bound
cltd
ret
push
insb
popf
mov
lock
test
push
xor
shl
rclb
arpl
enter
pop
add
push
loopne
in
sbb
in
or
inc
mov
xchg
dec
fwait
or
dec
or
cmp
lock
fs
and
pop
sbb
repnz
or
xchg
cmpb
or
jbe
add
loopne
in
jne
jne
stos
cmp
lock
and
sub
in
and
sbb
add
mov
xor
fnstenv
and
in
xchg
in
ja
sti
or
sbb
outsb
or
leave
mov
nop
add
adc
aas
call
je
xor
loopne
and
cmp
mov
push
cmp
adc
xor
or
arpl
and
dec
insl
int
out
add
test
pop
test
adc
rcrb
inc
add
ret
add
add
cmpsl
add
call
or
fs
pop
cwtl
mov
insl
and
dec
cmp
and
gs
lock
mov
stos
adc
repz
es
fiadds
adc
gs
dec
fs
loopne
cmpsb
add
or
cwtl
adc
pop
pop
inc
or
mov
mov
ret
int3
and
inc
or
and
popf
aam
cmp
ficompl
push
and
push
xchg
push
pop
imul
add
jae
add
in
xchg
or
add
push
aam
pushf
pop
shrl
sbb
inc
ja
or
lcall
dec
fiadds
pop
jo
sub
pop
dec
xchg
lock
lds
xchg
bound
loope
in
ss
test
mov
ja
fisubrs
xchg
adc
add
je
sahf
dec
mov
fsubl
jne
in
or
xchg
or
jne
push
xor
pusha
repnz
and
xlat
push
sub
and
push
sbb
sbb
and
clc
test
mov
nop
sbb
add
and
mov
push
lcall
in
subb
or
or
or
xchg
add
sub
aam
cmp
and
and
xchg
loopne
fdivs
cmp
pop
xchg
test
sbb
or
or
call
xor
jae
fdivs
orb
jecxz
inc
mov
outsl
in
aad
adc
adc
jo
or
add
je
mov
fsincos
daa
and
fs
cmp
ret
mov
lcall
lock
movsl
leave
cmp
sub
sub
arpl
xor
and
sub
jb
test
or
enter
or
or
xchg
pop
jb
or
in
pop
leave
or
jg
sub
loope
enter
fadd
fadds
fsubl
movsb
mov
rclb
test
out
sbb
call
or
orl
es
aad
and
add
inc
imul
mov
int3
mov
popf
movsl
frstor
push
and
adc
add
sub
inc
sub
push
mov
sbb
ss
dec
cmp
or
rol
mov
pop
loope
add
and
sub
adc
add
fwait
adc
adc
dec
adc
mov
or
mov
pop
push
shl
lea
or
lret
and
or
sbb
outsb
xlat
cld
and
push
loopne
pop
popf
jnp
mov
lods
call
xchg
ret
je
dec
aam
insb
sub
sub
fiaddl
xchg
ret
adc
sub
scas
aam
jge
shll
inc
cmpsb
sub
and
fistps
call
psubsb
and
jno
mov
sub
push
fsubrs
sub
subb
sub
loope
adcb
inc
dec
pop
push
push
dec
cs
fcoms
call
ss
popf
mov
rorb
mov
daa
hlt
cs
sbb
loopne
js
subb
cmp
push
xlat
and
inc
mov
push
jl
mov
leave
ds
sbb
push
movsl
sub
dec
mov
subb
xlat
or
hlt
sbb
sbb
xor
or
mov
jne
or
sub
adc
subl
xchg
mov
roll
lods
mov
xor
outsb
sbb
xor
and
jne
movl
add
cs
add
jae
cmp
jb
mov
repnz
and
mov
xor
stos
nop
pushf
mov
xor
push
int
lcall
fldcw
sub
jl
rclb
pop
and
sbb
jecxz
sbb
cmp
xor
fnstenv
aad
jne
pop
xchg
andb
mov
or
sbb
add
es
sub
push
mov
test
push
xchg
pop
xor
insb
xor
mov
pushf
stc
fldl
cwtl
and
insb
xor
xchg
stc
aas
or
lock
gs
stos
add
adc
sbb
ss
xchg
test
lea
xorb
sbb
and
test
or
ficoml
shl
adc
dec
fwait
add
stos
rorb
dec
fsubl
enter
mov
mov
mov
mov
mov
mov
andl
pop
movsb
add
jo
stos
inc
add
shll
add
dec
repnz
imul
jmp
aad
xlat
dec
cmp
dec
and
mov
arpl
rcr
sbb
in
pop
fsub
aam
call
inc
cmovge
ljmp
pop
and
add
cmp
jle
ret
jne
fidivs
cmp
das
pop
cs
unpcklps
aam
mov
aad
adc
cmpsl
mov
jbe
or
cmc
pusha
mov
aam
negb
fimuls
cmc
fidivl
divb
fwait
mov
inc
es
fs
nop
pushf
and
enter
out
mov
int3
test
add
scas
mov
imul
jns
or
xor
xchg
xchg
xchg
ja
xchg
fisttpl
sbb
insl
mov
mov
aaa
inc
ficoml
imul
imul
pop
test
mov
push
mov
xchg
push
xchg
and
movsb
fdivr
enter
adc
mov
sub
fnstcw
mov
sbb
enter
inc
mov
jb
call
sub
inc
orb
xor
stos
xor
cmpsb
test
fcoml
arpl
push
js
aam
ja
aas
xchg
prefetcht0
inc
daa
cmpsl
jl
xor
shlb
arpl
dec
adc
fwait
lret
testl
adc
insb
sub
xor
lods
pop
mov
test
inc
sbb
pop
dec
dec
jge
pop
lret
in
loop
lahf
out
cmp
pop
ljmp
inc
lds
dec
inc
add
push
push
jge
inc
popf
jmp
aam
lea
cmpsl
fdivr
inc
push
ret
test
adc
rorb
xor
das
adc
enter
js
mov
cmp
mov
pop
jns
cmp
imul
dec
imul
and
sbb
xor
or
gs
jp
stos
xor
lock
repz
sub
or
sbbl
sub
shlb
adc
cmp
xor
std
int3
ss
add
jae
sbb
or
lods
inc
and
inc
sub
inc
arpl
les
loopne
cmp
jno
dec
xchg
imul
jp
xchg
faddl
or
pop
mov
cmpsl
bound
mov
push
addb
sbb
mov
inc
nop
idiv
and
inc
sbb
inc
adc
cmpsl
dec
inc
dec
sbbb
enter
jl
and
insb
test
push
and
les
pop
test
jne
lods
rol
mov
dec
adc
and
push
pop
rclb
xchg
add
mov
imulb
imul
aam
mov
orb
leave
jb
jno
jnp
dec
in
rcll
adc
push
test
pop
dec
fs
popa
and
rcl
sahf
xor
mov
push
add
dec
push
imul
or
push
inc
dec
xchg
lret
loopne
inc
lea
loope
sar
inc
mov
adc
ficoml
shlb
roll
test
rclb
pop
adc
leave
cmp
imul
aam
xchg
data16
rcrb
pop
inc
mov
addb
aam
cwtl
test
pop
sub
or
nop
test
mov
in
cmp
sbb
sbb
push
in
les
push
popa
shrl
stos
jno
pop
pop
fcompl
dec
push
fadds
xchg
test
jne
mov
fsubr
push
mov
fistpl
sti
dec
dec
popa
push
sbb
push
sbb
push
xchg
mov
xchg
insb
lret
or
pusha
rcl
push
mov
adc
pop
test
inc
push
xor
insb
mov
mov
xor
aam
or
push
cmp
xchg
fs
pop
jo
xorb
test
rcl
das
dec
orl
cmp
mov
xchg
js
xor
jmp
in
in
add
mov
out
dec
jae
lods
lods
test
sarb
call
sbb
push
ret
push
inc
add
mov
push
scas
jge
add
push
insb
and
leave
and
pop
mov
adc
mov
sbb
and
mov
lods
sbb
sub
inc
pop
mov
arpl
adc
inc
push
fwait
sbb
pop
in
push
add
mov
rsqrtps
leave
adc
pop
stos
inc
add
dec
add
pop
xchg
scas
and
cwtl
jmp
xchg
inc
adc
int
mov
mov
xlat
xchg
inc
xchg
adc
inc
insb
push
test
js
push
sbb
add
push
mov
adc
mov
or
fisubl
test
and
pop
push
fcoml
cmp
or
and
dec
in
cltd
test
jmp
nop
mov
add
and
adcb
enter
das
inc
mov
sub
fsubl
pop
leave
loope
test
or
mov
les
in
jl
aam
gs
fadds
rcl
xorb
xchg
in
lods
push
movsb
mov
or
jecxz
jbe
sub
fcoms
test
adcb
lds
lea
inc
jge
mov
inc
rcll
mov
rorl
sbb
push
push
stos
inc
push
out
fs
es
loope
sbb
orb
adc
push
or
es
pop
inc
cmpsb
sbb
adc
or
push
jo
das
xor
fdiv
call
add
lock
push
imul
negl
jbe
sub
jbe
xor
cmpsl
dec
adc
loopne
subb
clc
aaa
clc
pop
rolb
cwtl
dec
dec
and
jno
pop
xchg
push
test
enter
add
mov
lea
shlb
and
and
push
push
insl
sbb
sti
push
pusha
fs
dec
cmpsb
adc
dec
es
and
sbb
es
sbb
inc
es
fs
cmp
sub
add
xor
add
push
mov
adc
scas
xor
cmc
inc
aad
es
or
jne
add
adc
icebp
icebp
adc
mov
andl
movsb
xor
inc
or
sbb
pusha
roll
xchg
push
push
add
aam
or
and
and
pop
insl
inc
xchg
sbbb
addl
call
jo
movl
pop
xor
jne
xor
dec
jno
xchg
xor
pop
sbb
or
cmp
test
and
push
inc
dec
pop
lret
push
cltd
nop
outsl
test
insl
dec
lock
outsb
pushf
push
pop
add
es
ret
xchg
rolb
outsl
adc
lahf
mov
movsl
sbb
in
push
sub
cmp
add
cmp
mov
pop
inc
daa
lock
lock
cltd
fdivrl
int3
fildl
or
inc
les
cmp
push
xchg
xlat
sbb
aam
daa
mov
imul
stos
pop
mov
adc
xchg
dec
cmp
adc
adc
fs
inc
incl
outsl
insl
sbb
xor
cmp
pop
xor
lods
aas
out
mov
sbb
sbb
mov
fmull
bound
mov
jns
bound
mov
popf
je
aad
and
bound
ret
jne
lods
mov
adc
aaa
cmpsl
xchg
arpl
out
cmp
and
or
adc
xor
xor
arpl
and
add
es
insb
xchg
fnsave
aam
or
or
xchg
mov
adc
test
test
je
add
movsb
and
and
in
inc
push
dec
and
or
xor
mov
sbb
mov
cmp
inc
or
mov
or
mov
mov
push
push
popw
add
mov
mov
jae
pop
cs
xor
std
push
sbb
dec
aam
sti
sti
movsb
add
lcall
adc
loopne
in
and
sbb
sbb
lret
cwtl
and
xchg
inc
aaa
xor
push
sbb
daa
lods
int
leave
fsubl
lock
push
mov
add
sub
enter
pop
adc
or
xchg
mov
sub
mov
insb
fadds
incl
add
imul
mov
jmpw
in
adc
sbb
mov
jns
add
push
and
out
push
loopne
movsb
push
sahf
dec
cmp
call
ret
loopne
hlt
stos
and
imul
int
jecxz
test
inc
ja
test
add
test
pop
cmpsl
cmpsb
inc
push
bswap
imul
stos
fisttpll
push
fisubrl
addl
imul
mov
pop
pop
jno
insb
sub
sub
loopne
subb
add
pop
les
out
mov
std
push
insl
push
adc
ja
stos
sbb
pop
or
cs
or
leave
mov
aam
loopne
fsubr
fcomps
shlb
mov
jg
mov
lea
movb
jg
dec
or
enter
cmp
nop
aaa
arpl
add
les
or
dec
dec
mov
in
bound
fcoml
dec
lock
push
repnz
adc
cwtl
jo
fadd
fadd
inc
addr16
add
jmp
add
test
sbb
mov
sub
push
mov
daa
jns
mov
push
dec
adc
adc
movnti
or
and
movsl
adc
add
push
outsl
xor
les
sbb
aam
les
push
fs
mov
dec
sbb
sbb
test
sbb
add
nop
jl
test
nop
add
mov
nop
add
pushf
dec
movsb
lods
add
push
dec
dec
inc
xchg
dec
fwait
mov
adc
leave
and
lods
push
xor
and
mov
and
dec
push
jl
and
dec
xor
xchg
dec
xor
cwtl
nop
mov
xor
and
aam
popa
and
dec
popf
cld
ss
cltd
decb
insl
mov
jmp
rol
shl
ficoml
jns
fcoms
mov
enter
nop
mov
in
clc
jae
pop
cltd
unpckhps
xor
or
dec
xor
push
or
fmuls
das
sbb
adc
cmp
nop
mov
inc
lods
mov
in
nop
inc
push
int3
aam
xchg
imul
cwtl
js
sbb
and
push
test
adcb
xchg
in
cmpb
xor
outsb
outsb
jb
jo
fcoms
cwtl
pop
leave
leave
leave
insl
aam
int3
les
lods
movsb
pushf
push
xchg
fcmovne
xchg
mov
test
xchg
dec
outsb
adc
cs
pop
mov
mov
test
inc
push
adc
inc
jbe
lcall
nop
mov
mov
push
pop
xchg
pop
int
enter
aam
dec
popf
lods
int
mov
xchg
or
in
sub
imul
dec
ja
aam
bound
aam
xor
stos
adc
sub
test
xorb
add
mov
pop
jo
daa
nop
mov
inc
popf
mov
sbb
sub
mov
xchg
ja
mov
rcrb
test
and
jnp
pusha
mov
adc
mov
xchg
shrd
in
sub
and
rolb
mov
inc
mov
pop
lret
xor
and
movsl
dec
repnz
idivl
fs
push
movsb
dec
adc
sbb
adc
cmpsb
or
rorl
push
fs
mov
or
sahf
push
mov
dec
es
cmpsb
notb
ret
dec
aaa
fcomp
adc
shll
sub
adc
flds
mov
and
adc
push
insl
dec
add
xor
mov
cmpl
push
adc
pop
shlb
push
adc
sub
mov
sbb
xchg
femms
and
xchg
fidivrl
outsl
fmuls
push
imul
dec
cmp
inc
pshufw
mov
dec
ret
sub
or
rclb
xor
push
lods
popf
rcrb
inc
adc
popa
inc
and
or
fidivl
out
adc
add
mov
sbb
data16
insl
xor
sbb
add
fsubrs
xchg
sbb
xor
fs
fisubrl
fsts
cltd
rclb
rclb
fmul
stc
rclb
sub
les
mov
and
sub
mov
movsb
xchg
enter
jo
cmpsb
or
or
fs
mov
xchg
movsb
pusha
insl
xor
dec
inc
jno
xor
ror
aas
inc
dec
push
jbe
xor
jb
int3
pushf
push
xchg
sub
shrl
or
leave
bound
push
jle
sub
sbb
movsb
adc
mov
sbb
sbb
add
jns
cmpsl
adc
repz
cltd
jbe
or
insb
push
inc
xor
dec
repnz
insb
mov
das
add
nop
xchg
sbb
dec
xor
mov
add
mov
fildll
push
push
nop
orb
push
mov
std
push
das
inc
sarl
je
jo
sub
enter
and
je
sarb
or
inc
test
mov
add
insl
push
lcall
insl
xor
in
adc
imul
and
adc
insl
hlt
cltd
inc
out
add
repz
insl
xchg
sbb
xor
in
sti
leave
and
add
fists
adc
add
leave
and
sub
mov
push
mov
movsb
les
bound
pop
clc
mov
jbe
scas
cltd
push
fwait
jo
add
icebp
sar
xor
or
or
lds
clc
icebp
call
adc
jp
in
int3
sbbl
adcl
xchg
enter
xor
mov
in
adcl
rcr
push
test
xchg
repnz
and
add
cmp
iret
fstps
xchg
cmpsb
int3
pop
cltd
movsb
call
sub
push
jno
lods
sub
jmp
mov
lcall
adc
pusha
cltd
aas
out
outsb
mov
jmp
mov
faddl
or
jns
xchg
xchg
sahf
and
pop
adc
mov
test
mov
cmpl
shlb
adc
js
rorb
adc
fstl
shrb
mov
and
insb
orl
in
push
movsb
or
test
sbbb
test
adc
int
or
adc
adc
xchg
in
mov
mov
lcall
inc
push
adc
in
mov
andb
mov
call
mov
pop
dec
cmp
xor
adc
and
adc
ss
notl
pop
rorl
adc
aam
insl
test
insl
adc
add
lods
inc
adc
add
dec
shlb
test
cld
add
push
pusha
and
cmp
test
dec
inc
xor
adc
sbb
fildl
add
nop
ret
gs
mov
test
mov
mov
adc
jge
adc
or
ret
xor
xor
mov
std
xorl
add
and
mov
inc
arpl
sub
xchg
pop
sub
dec
push
push
and
add
call
inc
mov
xchg
lcall
dec
add
inc
lods
bound
dec
out
jbe
adc
sbb
inc
cmpsb
adc
rclb
pop
dec
rclb
mov
sahf
daa
sbbl
lods
cmp
fcomps
test
mov
cmp
sbb
icebp
ret
inc
add
dec
lcall
pop
add
xor
push
inc
sub
leave
je
pusha
cmp
xchg
dec
or
and
mov
nop
cmp
leave
clc
mov
and
mov
adc
dec
stos
sbb
mov
int
cmp
mov
mov
cmp
addb
or
pop
sub
inc
lds
imul
int
imul
stc
bound
sbb
sbb
pop
pop
imul
je
mov
xor
cmp
adc
nop
test
or
inc
add
pop
roll
sbbl
and
dec
xor
sbbb
adc
les
adc
fwait
fs
dec
cwtl
mov
icebp
inc
jno
dec
movsb
mov
or
pop
pop
lea
leave
sub
or
lock
les
pop
push
mov
pusha
inc
adc
subl
mov
sub
dec
popl
mov
dec
call
movsb
int3
push
sub
imul
adc
out
or
hlt
gs
aad
or
pop
bound
cli
mov
insl
mov
lock
push
push
cld
inc
enter
lret
clc
sti
push
jns
xor
fs
cld
in
and
dec
adc
mov
mul
jo
lret
stc
or
or
cmp
cmp
cmp
push
shrb
cmp
and
jle
sti
movl
movb
mov
ljmp
dec
repnz
push
aas
subb
mov
or
dec
pop
inc
push
and
and
jl
mov
icebp
mov
add
or
lock
and
jg
xor
dec
push
repz
jbe
or
xchg
test
rcll
nop
das
dec
out
cld
nop
imul
add
hlt
sub
or
out
and
push
xchg
push
jge
push
bound
pop
push
mov
loop
inc
jmp
cmp
es
xchg
es
or
fldcw
or
int
mov
jl
std
mov
pinsrw
adc
inc
std
add
inc
xor
test
add
push
test
out
push
out
or
sahf
out
jl
cltd
scas
rcrb
add
push
aaa
push
jae
jg
jns
add
push
inc
add
push
mov
aas
jbe
fprem1
int3
push
ljmp
inc
aas
dec
pop
inc
add
mov
and
push
sar
incl
orb
jnp
mov
add
adc
mov
rcll
xchg
mov
or
outsl
cmp
adc
jp
lret
pop
mov
incl
nop
add
into
pop
adc
test
dec
testb
push
mov
mov
dec
cld
sahf
or
mov
or
enter
push
jnp
popa
pop
lock
rdpmc
add
invlpg
mov
incl
sub
pusha
mov
pushl
popa
and
insb
outsl
arpl
imul
mov
xorb
sub
popa
arpl
jne
jb
outsb
sti
fisubrl
je
add
das
ss
insl
adc
jnp
subb
inc
outsl
jb
js
je
mov
mov
jae
or
outsl
add
add
add
jge
add
jne
les
inc
cs
mov
jb
and
add
pusha
pusha
daa
add
aaa
or
jl
dec
add
xor
fdivr
mov
inc
push
add
aas
push
add
pop
dec
add
sub
mov
insl
xchg
je
je
and
idivl
dec
fisttpl
out
loopne
mov
insl
push
push
shr
loopne
or
bound
repz
sbb
popa
idivb
xor
insb
jp
fndisi(8087
fisttpll
or
mov
frstpm(287
arpl
lret
aas
rcrb
fisubs
out
outsl
jmp
jo
mov
pop
xor
stos
insl
sub
adc
push
imul
push
cmp
jne
inc
push
data16
xchg
mov
ds
jp
sub
sub
jnp
popa
pusha
sbb
daa
lahf
popa
into
jecxz
adcb
arpl
pop
jnp
inc
or
daa
dec
enter
jbe
fbstp
jge
ja
bound
jnp
ficomps
ficompl
ret
arpl
mov
or
push
xor
sub
mov
xlat
xor
filds
push
jo
scas
das
jb
ret
fiaddl
cs
movaps
pop
or
add
fs
mov
imul
jg
popa
sub
cmp
or
outsl
xchg
pop
push
sbb
lahf
aaa
jg
rclb
pop
dec
iret
push
fists
in
xor
loopne
divl
jb
jne
and
jg
out
sub
xor
stos
bnd
icebp
jbe
push
das
rcrl
jae
shrl
mov
cmp
push
cmp
fistps
outsl
aas
or
arpl
sbb
push
mov
inc
jb
push
xlat
aaa
jge
shrb
jecxz
stos
fs
fidivl
imul
shll
sbb
rdtsc
cmpsl
outsl
loopne
sbbb
sub
pop
xchg
sbb
mov
pop
add
pop
out
jnp
in
pop
insl
lret
je
mov
cmp
addr16
mov
loop
subb
ja
jecxz
push
push
sub
lock
cmp
xor
mov
fldenv
pop
add
mov
or
push
inc
imul
insb
jecxz
push
inc
inc
mov
sahf
adc
das
sbb
testl
fcomps
int
jns
mov
sbb
test
sbb
cmp
das
push
pop
sahf
push
sbb
sbb
repz
cmp
jns
jp
push
cld
js
sahf
out
outsb
incl
clc
mov
addr16
jp
ja
pop
sub
sub
push
push
push
out
mov
fucom
xchg
add
pop
mov
jl
insl
out
xchg
push
or
pop
mov
pop
pop
sti
mov
and
jge
fdivrl
push
xor
mov
and
jns
in
repnz
add
das
das
and
ret
pop
mov
out
dec
ljmp
loope
and
decb
cmc
pop
ret
ret
dec
repnz
jnp
jns
aas
dec
inc
out
pusha
xor
mov
mov
sbb
ds
daa
outsl
jo
mov
dec
and
add
inc
inc
das
pop
mov
ss
imul
iret
jns
rcr
mov
out
and
outsb
sti
adcb
inc
pop
xlat
mov
inc
jae
push
imulb
dec
and
sub
pop
jbe
scas
push
dec
fbld
ds
insl
arpl
mov
mov
xor
es
cmp
cmp
ficompl
sub
fs
dec
and
popf
scas
imul
dec
testb
arpl
bound
dec
outsl
jbe
popa
or
arpl
inc
jo
sub
jne
jne
xor
insb
xchg
outsb
xchg
call
jo
imul
fnstsw
adc
into
mov
jae
xchg
popl
jge
into
jg
addr16
popa
je
jb
xor
mov
jae
push
gs
sbb
idivb
push
jne
dec
outsl
outsb
and
jbe
ja
pop
dec
inc
aas
add
imul
out
dec
or
adc
fistpll
dec
add
insb
jae
push
dec
mov
push
popa
insb
jne
inc
add
mov
add
mov
jmp
sub
sub
cs
xor
xor
xor
ss
cmp
cmp
cmp
ds
inc
inc
inc
inc
adc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
and
jl
test
xchg
pop
pop
pop
pop
pop
or
lcall
arpl
addr16
insl
outsb
outsl
jo
add
jbe
js
jp
jl
jle
dec
adc
fs
lcall
loopne
pop
ret
mov
orb
sar
lret
repz
repnz
jno
icebp
pusha
inc
mov
clc
ret
movsl
add
pop
loope
lds
shrb
outsl
fs
xor
imul
aas
daa
mov
gs
xor
cmp
outsb
bound
add
negl
dec
pop
sbb
icebp
cmp
ret
sub
int3
adc
adc
test
add
add
add
add
or
push
cld
and
push
pop
push
add
xor
jg
rol
pop
hlt
and
add
pusha
push
out
xor
inc
add
or
xor
mov
mov
addl
outsl
sahf
mov
test
add
orb
fwait
daa
push
cmpb
push
and
sub
insb
imul
jb
int3
push
jo
add
in
rol
mov
push
outsb
imul
sub
push
imul
icebp
or
ret
xchg
les
rolb
add
add
repnz
jb
lea
mov
and
xchg
xchg
xchg
pop
jb
xchg
mov
movsl
enter
add
adcl
push
cmpsl
shr
lret
hlt
add
push
pop
pop
lods
mov
mov
in
add
pop
jns
pop
sbb
cmp
sbb
arpl
inc
sub
idivb
xor
dec
jmp
dec
inc
adc
lret
mov
xchg
pop
loopne
xor
push
jae
dec
bound
jge
outsl
xchg
je
outsb
data16
push
jbe
dec
dec
add
inc
xor
push
xchg
push
xchg
mov
mov
mov
js
push
xchg
cs
dec
popf
insl
jmp
inc
outsl
insl
jo
jo
and
and
loopne
imul
aaa
insb
les
dec
imul
or
inc
mov
ds
xchg
fdiv
cmp
dec
inc
jb
jns
daa
pop
bound
fwait
and
gs
push
jg
pusha
je
and
arpl
je
lods
add
and
cmp
outsb
fwait
outsb
rolb
jle
jbe
mov
jo
mov
outsl
jnp
outsb
pop
jb
and
xor
outsl
inc
jbe
push
push
lahf
xorl
jns
insl
and
out
cwtl
add
jp
pusha
xchg
pushw
andb
popl
inc
imul
pusha
gs
inc
jo
lds
rclb
shll
dec
test
lock
ret
fcoms
outsb
mov
mov
dec
mov
jae
or
cmp
insb
call
mov
subl
gs
adc
jbe
mov
mov
or
or
out
push
push
dec
testl
dec
lods
jbe
lcall
fmull
dec
mov
ds
ret
pop
sbbb
imul
inc
sub
push
call
adc
and
inc
in
das
pop
shll
das
gs
mov
rcll
push
inc
jg
bound
sub
xor
pop
das
scas
imulb
xchg
daa
xchg
mov
mov
pop
pop
cmp
in
repz
or
ds
and
ja
idivl
sub
es
cmpsb
or
cmp
jle
jle
out
mov
add
add
sub
pop
or
sbb
das
push
xor
ret
aaa
aaa
and
mov
out
outsb
cmp
xchg
cmp
jg
pop
pop
jne
stos
xor
sbb
add
mov
xor
gs
imul
mov
dec
sbb
jae
jo
sahf
inc
pop
sub
xor
pop
fs
jo
sub
xchg
jl
out
sub
pop
cs
add
repz
dec
cmp
and
adc
cmpsl
stc
cmp
cld
sub
call
loopne
push
push
aam
repz
ror
enter
mov
cmp
push
lods
test
outsb
sahf
out
sahf
mov
mov
mov
jns
jns
mov
test
push
js
jo
push
fs
pop
pop
push
iret
repz
push
dec
inc
xor
and
cld
sub
enter
out
mov
and
repz
repz
les
iret
insb
fs
xor
sbb
cmpsl
stc
cmp
lock
test
ja
out
pop
sub
in
sub
push
jnp
jl
pushf
jo
sub
push
and
test
iret
adc
sub
inc
test
add
and
ret
push
jb
sub
dec
mov
add
addl
xlat
push
addb
pop
push
sbb
jbe
xchg
sub
addl
add
add
nop
imul
push
adc
add
adc
and
add
jnp
and
push
jnp
pop
fistps
mov
add
cmp
addb
xchg
lea
xchg
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
lahf
mov
movsl
cmpsb
cmpsl
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
mov
enter
int3
int
iret
rcl
rcl
aam
xlat
fcomp
fcmovu
loopne
loop
in
out
call
in
out
out
lock
repnz
cmc
div
clc
stc
push
test
std
cli
sti
cld
std
jmp
add
xor
sub
test
adc
and
cmc
lods
call
outsb
gs
popa
data16
pop
out
add
shlb
jne
sub
jb
add
add
daa
fidivs
push
arpl
stos
jecxz
sti
inc
insb
fs
sbb
mov
xor
pushf
jp
push
setl
sub
loopne
add
add
inc
adc
push
test
mov
xor
push
dec
inc
dec
cmovns
cmove
push
adc
sub
cld
adc
adc
clc
filds
mov
mov
jnp
inc
pop
in
xchg
mul
outsb
mov
ds
pop
adc
clc
lret
call
jb
jge
arpl
cmp
in
dec
scas
jp
jno
in
fstl
mov
and
iret
mov
xor
iret
imul
adc
inc
inc
mov
mov
sub
fwait
jns
pusha
pop
ss
sbb
pop
jns
ds
xor
incb
mov
xor
dec
popf
pxor
xor
lret
aaa
push
div
inc
sub
dec
xchg
cmp
push
int
das
xchg
pop
and
xchg
lret
sahf
icebp
mov
call
loopne
cmp
inc
mov
xchg
push
pop
xchg
sub
pop
stc
jmp
insb
mov
out
leave
ljmp
orb
popa
push
or
shll
mov
leave
hlt
mov
aas
sahf
xchg
dec
add
scas
lods
dec
lock
xor
pop
mov
nop
adc
pop
pop
repnz
loope
fistpl
lret
es
sbb
add
leave
aam
outsl
outsl
and
addb
je
or
shlb
or
or
sub
xor
sub
mov
mov
ds
mov
das
outsl
jns
aaa
movsl
pusha
fadds
dec
xchg
jmp
and
test
jle
imul
jae
sbb
push
jae
movsl
mov
and
data16
scas
sub
inc
cmpsl
mov
sub
ret
bound
jg
subb
jne
fs
pcmpeqw
ss
sti
or
ja
popa
daa
sti
call
daa
je
push
lods
push
fucomip
jae
or
test
je
mov
dec
loopne
mov
loop
enter
addr16
imulb
jb
add
mull
pop
and
nop
nop
push
aaa
cmpsb
outsl
push
push
loope
mov
jae
push
lret
idivl
jae
insl
jle
push
lods
cmp
cmpsl
mov
inc
sub
loope
mov
or
loopne
adc
lods
mov
pop
out
push
sbb
inc
shll
push
mov
pop
jg
fildl
mov
mov
rcll
cmpsl
cmp
or
push
add
add
push
xor
adc
jg
out
adc
push
bound
sbb
jns
outsb
xlat
cs
cmp
fs
mov
cmpsl
negl
mov
je
xchg
js
sub
mov
aas
cmpsl
cs
push
out
add
xchg
jo
orl
add
test
jo
jne
adc
dec
xlat
je
sbb
push
jo
imul
call
es
and
cmp
xorb
daa
adc
outsb
pop
mov
cmpsl
sbb
bound
dec
sarl
js
mov
fstpt
xchg
gs
dec
jp
pop
loopne
loope
pop
ja
pop
rorl
dec
jecxz
fwait
insb
mov
sub
ljmp
test
pop
mov
shll
inc
xlat
and
je
and
outsb
ficompl
daa
pop
xchg
jo
arpl
add
gs
loope
jp
jne
xor
and
dec
ljmp
pusha
push
and
pop
in
jo
pop
inc
mov
add
fdivs
fldt
dec
mov
roll
and
arpl
mov
lret
sub
stos
mov
inc
sub
inc
into
ret
push
and
into
js
jno
or
jo
add
test
push
into
pop
aaa
sbb
mov
je
mov
push
add
adc
arpl
mov
inc
cmp
arpl
cmovnp
dec
loope
hlt
andb
data16
pop
sub
or
add
cmp
je
jae
sub
xchg
outsb
out
out
jnp
hlt
addl
pop
dec
aaa
sub
add
or
fwait
test
mov
pop
push
and
ljmp
sub
and
bound
cmp
dec
aas
loope
push
push
jae
pop
push
out
cmp
daa
jne
add
dec
pop
outsl
dec
mov
push
sbb
inc
das
push
hlt
mov
push
adc
push
clc
ret
js
mull
dec
xchg
jne
pusha
testl
add
sub
ret
outsb
sub
outsb
outsb
sub
and
into
out
jmp
push
fiaddl
bound
jae
imul
push
push
pop
mov
addr16
sti
push
rdmsr
scas
xchg
jecxz
push
bound
sub
push
out
arpl
pop
mov
adc
outsl
jmp
add
mov
in
dec
outsl
insl
cli
mov
cs
mov
add
es
or
out
jecxz
je
inc
push
inc
scas
imul
mov
arpl
dec
insb
xchg
xor
inc
inc
dec
add
dec
out
test
out
adc
mov
add
ss
mov
iret
mov
pop
cs
xchg
dec
por
adc
pop
shrl
scas
inc
bound
outsl
or
ja
sbb
inc
out
jmp
pop
push
aas
ds
testl
or
mov
add
inc
inc
jl
jl
and
jl
mov
mov
imul
mov
and
addr16
mov
stos
das
mov
push
xchg
ret
das
add
mov
adc
bnd
push
mov
pop
lods
fnstsw
adc
rcr
scas
jl
pop
jnp
cmp
pop
imul
jmp
adc
insl
ja
add
mov
lea
pop
bound
outsb
cs
and
mov
mov
mov
out
sarb
outsl
jo
js
lret
jl
jo
loopne
and
jns
mov
mov
fstpl
ret
loopne
pop
fisubrs
fs
mov
dec
lock
loope
adc
jl
ret
sbb
push
repnz
dec
repnz
lods
js
mov
es
add
jbe,pt
push
imul
inc
pop
and
sbb
add
push
test
push
sahf
xchg
sbb
sub
mov
mov
divl
sbb
push
jecxz
daa
inc
div
push
imul
jb
sahf
inc
jns
jae
jae
mov
sbb
pop
andb
inc
fisttps
xor
pop
jg
pop
cli
js
cli
add
mov
clc
das
aaa
pop
pop
push
mov
jb
rcrb
pop
pop
inc
aaa
inc
mov
insb
roll
push
mov
aas
adc
popl
mov
aaa
es
loope
inc
outsl
das
addr16
ffreep
push
mov
fcoms
scas
push
add
add
sahf
out
mov
inc
dec
push
dec
cmp
cmp
sti
push
lock
dec
push
fisttpll
xchg
push
cs
pop
inc
cmpsb
aam
addb
ss
mov
or
xchg
cmp
push
xchg
cs
mov
mov
ds
pop
push
push
lret
pop
push
mov
lret
add
jl
sti
push
addr16
inc
fnstcw
push
xlat
push
es
movsl
pop
sarl
repz
inc
pop
shrb
pop
cltd
adc
add
aas
pop
clc
mov
pop
out
push
jnp
pop
iret
jnp
sub
mov
push
mov
out
cmp
in
or
sbb
repz
jg
push
and
cmp
cmp
pop
push
cs
lock
dec
das
adc
adc
testl
push
scas
pop
aam
pop
jae
outsl
and
ja
and
daa
xor
mov
pop
sbb
cmpsb
push
inc
sbb
cmpsb
push
add
dec
add
addl
sti
aas
pop
jp
popa
push
jae
sbb
xchg
xchg
popa
outsb
arpl
push
gs
std
loopne
jne
pusha
push
popa
jne
or
fadds
push
dec
bound
xor
imul
pop
shrb
sub
aas
push
pop
push
lahf
out
sahf
pusha
xchg
mov
ficomps
sahf
jne
mov
fwait
push
mov
mov
mov
jecxz
sbb
bound
dec
fs
mov
jp
mov
push
and
gs
int3
ret
je
cmp
ds
mov
cmpsb
es
jo
jb
out
jb
into
pop
sti
push
mov
and
jae
sbb
aas
fcom
xor
and
and
and
arpl
xor
mov
arpl
cmp
fs
adc
push
add
inc
add
mulb
and
jne
je
ss
cmp
pop
inc
cwtl
or
imul
frstor
sub
ja
adc
and
sbb
jo
movsl
xchg
aas
pusha
cs
push
mov
popf
sub
inc
pop
pop
jne
imul
cmpsl
xchg
adc
pop
push
scas
ja
jge
fsubl
inc
push
ja
push
inc
sub
push
add
hlt
xchg
scas
mov
cmpl
rol
stos
pop
pop
je
mov
iret
inc
movsb
dec
push
and
mov
aaa
cs
adc
cmpsl
js
out
sbb
ds
dec
cmp
pop
testl
pop
sub
push
test
mov
sub
faddl
jbe
iret
outsb
sub
push
or
int3
test
sbb
and
and
jp
nop
pop
aas
movswl
pop
sbbl
mov
adc
inc
and
jno
pop
xor
mov
and
and
fs
xor
bound
jle
sbb
jae
inc
or
push
push
cmpsl
scas
mov
or
aas
cmp
loopne
xchg
sbb
mov
outsl
or
and
cmp
push
les
pop
mov
push
add
js
xchg
pop
dec
jg
pop
jmp
sti
iret
sub
push
sub
mov
mov
sbbl
fwait
iret
adcl
ret
cmpsl
mov
sbb
lds
pop
inc
lahf
mov
adc
out
mov
pop
mov
add
outsl
mov
bound
and
out
push
xchg
inc
mov
add
cs
cmp
and
ret
add
adc
and
aad
inc
mov
iret
imul
fsubrl
jp
lret
shrl
jp
arpl
add
xchg
adc
fbstp
pop
bound
cmp
inc
lods
xor
mov
lahf
out
and
lock
jb
xchg
push
jb
fsub
xchg
sbb
inc
jbe
lds
scas
push
jae
inc
sahf
iret
repz
mov
adc
pop
sbb
iret
sub
mov
cmp
sahf
out
push
cltd
or
xchg
mov
js
mov
pop
push
mov
or
mov
mov
stos
mov
jns
and
sub
xor
inc
mov
mov
cmp
lret
mov
popa
xchg
cltd
fldcw
shrb
ret
sub
lcall
xchg
pop
adc
ss
mov
pop
sbb
int
push
dec
str
xlat
insb
mov
mov
das
incl
lahf
adc
xchg
ret
xabort
cld
stos
ss
daa
inc
iret
es
inc
shll
jl
push
out
pop
mov
fbld
in
fiaddl
shll
je
add
outsl
pop
add
aas
das
das
ret
xchg
push
dec
ficomps
pop
or
aas
rclb
sbb
sub
xor
comiss
add
push
mov
inc
push
pop
sbb
shlb
aas
sbb
cmp
dec
inc
push
or
nop
mov
ret
fdivl
xchg
adc
jmp
sbb
jns
rcll
jo
pop
cmp
rcrb
or
jmp
cmpsl
push
sbb
mov
es
push
jmp
inc
dec
fdivrl
mov
cli
push
jbe
imul
scas
xchg
shlb
pop
push
push
mov
or
aad
pushf
movsl
out
stos
mov
test
sub
arpl
sarb
das
and
cmpsl
push
cs
ljmp
cmpsb
mov
scas
inc
xchg
aaa
dec
iret
or
aaa
pop
insb
cmp
fucomi
sbb
imul
outsb
jae
sbb
xorl
pop
inc
repz
add
mov
pop
mov
inc
push
imul
aas
roll
mov
push
jae
mov
aaa
sbb
sbb
stos
mov
pop
ret
and
outsb
in
icebp
jbe
outsl
mov
das
dec
adc
adc
ret
das
sbb
and
aaa
lock
ss
jo
mov
add
pop
sub
push
dec
dec
mov
add
mov
ret
test
negb
inc
fistpl
arpl
scas
jp
pop
mov
xchg
xchg
sub
mov
xlat
mov
bound
pop
dec
sbb
xlat
stos
inc
outsb
cmp
xchg
mov
pop
push
jbe
pop
adc
dec
xchg
call
insb
mov
shrl
lods
arpl
sti
mov
pop
jo
idivl
mov
add
push
xchg
add
mov
pop
xchg
ljmp
jb
fcompl
push
ficoms
xlat
dec
cwtl
fstpt
scas
ss
inc
mov
fbstp
add
cmp
addr16
aas
sub
cmp
aas
add
notb
mov
es
cmp
pop
inc
outsl
daa
xor
pop
ja
push
jecxz
lea
cmpsl
sub
or
pop
xor
or
cld
rcrb
cmp
push
inc
sbb
ficoml
sbb
test
insb
sub
inc
inc
enter
lods
push
cmc
mov
stos
xchg
js
shrb
add
push
dec
sbb
imul
lock
sub
subl
push
sbb
inc
sbb
inc
mov
mov
add
dec
xchg
sub
xor
xlat
mov
mov
das
outsl
mov
inc
dec
push
sbb
inc
fwait
add
adc
ss
add
cmp
mov
mov
fs
mov
or
stos
sbb
ficomps
subl
push
add
pop
pop
aaa
sahf
mov
dec
das
push
adcb
adc
insl
push
sbb
pop
dec
insb
pop
pop
popa
xchg
pushl
add
dec
cmp
push
jmp
mov
addb
test
shrl
push
mov
rclb
add
inc
cwtl
arpl
push
ret
cmp
addr16
lods
mov
cs
adc
ja
and
sbb
adc
xchg
arpl
pop
and
xor
dec
push
adc
dec
sub
ja
loope
xor
orl
fadds
sub
cmpsl
mov
fcomps
adc
ja
inc
stos
jb
fisubrl
mov
push
pop
minps
sbb
sbb
add
sbb
adc
mov
pop
jecxz
insl
add
dec
push
mov
stos
push
scas
sub
sbb
test
sub
gs
les
dec
inc
inc
fildll
dec
outsl
iret
jp
jmp
hlt
lods
dec
dec
add
je
mov
jae
pop
jnp
xchg
subb
lret
pop
addb
fcoms
pop
xchg
aas
cmp
adc
mov
daa
ja
test
mov
rcrb
inc
add
inc
iret
push
sub
xchg
sbb
int
or
and
ds
mov
jae
adc
stos
lds
pop
cmp
out
outsb
lret
pop
cmc
or
stc
movsl
sbb
sbb
sbb
xor
jmp
pop
inc
jmp
push
adc
fstpl
out
ss
and
inc
cs
mov
out
push
push
inc
lods
xchg
fsubrs
inc
mov
xor
call
inc
das
dec
mov
add
sbb
cmpsl
arpl
cs
stos
jno
jnp
aas
push
inc
les
out
adc
xor
sti
push
out
inc
sub
lods
push
mov
pop
adc
sub
lahf
sub
mov
test
mov
fiaddl
add
lods
mov
aam
pop
movl
insb
mov
adc
outsl
dec
mov
mov
test
or
rcll
shll
dec
jo
sbb
or
nop
dec
or
das
sbb
mov
xchg
out
adc
push
les
adc
test
fisttpl
cld
stos
movb
or
loop
fistps
mov
pop
rorl
stos
pop
xlat
imul
loopne
push
adc
pop
sub
lods
cmp
rcrb
dec
xchg
or
pop
dec
xor
stos
mov
push
bound
push
mov
repz
jp
push
insb
imul
scas
xor
add
addr16
punpcklwd
jnp
jge
insl
xlat
cmpsb
data16
inc
push
and
fs
add
xor
pop
das
outsb
sbb
sbb
scas
add
push
insl
pop
push
add
add
popa
sti
cmpsl
push
notl
mov
arpl
bound
mov
int
add
mov
dec
mov
push
cli
pop
test
inc
push
or
adc
int3
jecxz
mov
sub
loop
push
xor
xchg
push
in
loope
push
repnz
and
add
xchg
lods
fistps
xchg
stos
or
dec
fs
xchg
test
sbb
xchg
mov
xchg
push
leave
push
sub
fldt
mov
push
leave
push
repnz
mov
cltd
dec
pop
and
stos
in
inc
in
fcoms
inc
stos
sub
xlat
mov
push
add
xchg
pusha
or
cmpsb
xchg
push
mov
sub
and
rcl
sub
push
leave
stos
enter
jns
pop
sub
shrl
cmp
rorb
les
cmp
mov
adc
int3
pop
and
mov
inc
inc
test
scas
lahf
xor
pop
inc
rorb
dec
mov
cmpsb
ret
mov
inc
test
inc
mov
jmp
call
dec
inc
inc
push
iret
dec
or
pop
pop
das
inc
xlat
and
xor
push
dec
push
dec
lods
pop
push
add
push
bound
dec
mov
jae
and
sbb
add
test
pop
inc
les
insl
repz
add
insl
dec
inc
inc
int
mov
mov
inc
mov
mov
shll
setae
sbb
inc
shlb
pop
mov
dec
ret
or
notb
mov
pop
outsl
dec
and
shrl
or
push
scas
push
xor
xor
xchg
arpl
mov
add
jg
adc
adc
jnp
arpl
pop
inc
sub
inc
push
push
or
enter
jp
add
lahf
sbb
inc
push
or
js
popa
filds
js
scas
mov
outsl
ss
mov
scas
movl
or
or
test
jecxz
shrl
or
xor
gs
adc
cs
or
scas
and
xor
mov
aaa
or
pop
out
jp
iret
inc
daa
push
lahf
nop
and
sbb
or
mov
adc
call
jecxz
mov
test
sbbl
bound
add
cmp
add
push
pop
add
lea
xor
and
add
sbb
sti
push
pop
and
jae
pop
or
push
and
sub
push
in
xchg
push
push
iret
rcrb
xchg
jb
inc
or
add
popl
inc
or
lahf
xchg
addr16
sti
cmp
sti
es
addr16
bound
cmp
imul
test
dec
sub
mov
xor
sub
aas
pop
and
mov
xchg
jae
sub
push
or
rorl
cmpsl
pop
shrl
subb
inc
divl
xorl
dec
scas
adc
push
jbe
xor
xor
or
sbb
daa
outsb
xor
add
pusha
insl
xchg
ds
push
int3
jg
in
ja
adc
jo
mov
bound
jae
js
jge
or
push
dec
pop
enter
lds
mov
movsl
out
jmp
or
xor
ret
pusha
inc
mov
add
and
popf
push
xor
roll
stos
sub
pop
push
lahf
jae
add
stos
and
jmp
in
popa
inc
push
rorb
les
rcll
scas
push
aam
xor
pusha
cmpsb
sub
ds
jnp
in
outsb
or
push
cmp
divb
lock
dec
push
sbbl
xchg
imul
jl
mov
andl
mov
lods
adc
jb
sbb
push
loopne
inc
imul
mov
or
fimull
sti
and
imul
fildl
pop
push
fistps
popf
ret
ja
ds
jne
push
sub
inc
cmpsl
mov
out
pop
xchg
lods
mov
xchg
je
xor
xor
ds
pop
mov
adc
stos
pop
cwtl
jl
xchg
dec
cmovno
and
cmp
icebp
xor
pusha
adc
loopne
push
popa
outsl
pop
sub
push
jns
mov
add
fldl
and
cmpsl
adc
pop
dec
cmpsb
je
data16
mov
push
mov
stos
xor
lea
ja
test
adc
rorb
push
bound
lret
dec
shrb
adc
in
cmpsb
mov
mov
mov
jle
dec
es
outsb
sub
roll
push
out
ret
push
xorl
mov
xor
dec
repnz
out
es
movsb
lods
or
mov
inc
insl
xchg
and
jnp
xor
mov
push
xor
xchg
ret
fs
dec
sub
push
cmp
lock
xor
pop
jecxz
pop
mov
dec
shlb
or
inc
or
mov
js
xor
cmp
xchg
jnp
and
jbe
dec
or
inc
jbe
cmp
cmpsb
ss
push
faddp
inc
mov
adc
mov
add
mov
push
lret
jb
out
pusha
jno
loop
push
cmpsb
xchg
ja
data16
sysret
ret
pop
lret
inc
data16
jnp
mov
xor
mov
lcall
out
inc
add
inc
mov
lock
mov
dec
daa
scas
fnstsw
data16
push
mov
dec
call
bound
imul
sub
inc
pop
pop
mov
push
es
ss
pandn
ja
pop
push
push
xor
dec
jb
xchg
jl,pt
inc
pop
dec
es
das
add
loopne
mov
fbld
data16
inc
pop
lock
xor
dec
cs
lock
inc
lock
push
outsl
push
push
cli
push
push
insl
sub
push
neg
jnp
insl
mov
inc
ja,pn
xor
lods
js
mov
push
jp
ds
fstpt
scas
jg
dec
das
ret
jnp
loopne
fisttps
jp
pop
pop
xorl
pop
outsl
dec
xor
js
push
into
xor
pop
adc
imul
test
sub
bound
ret
insb
cmp
shl
inc
sub
ja
sbb
testl
outsl
lahf
push
add
lret
jae
jnp
ret
jnp
add
mov
xor
add
nop
aas
add
push
arpl
adc
or
mov
xchg
mov
daa
inc
sub
add
pop
scas
sahf
rolb
mov
add
pop
pop
and
mov
loop
cmp
jae
in
sbb
movsb
bound
xchg
fs
push
adc
std
ret
inc
add
mov
arpl
lock
lea
xchg
shl
loopne
sub
stos
scas
repz
and
mov
and
add
pop
je
pop
dec
daa
fimull
jmp
out
sti
lahf
and
dec
lret
mov
dec
dec
or
xor
lahf
sbb
mov
subl
lods
mov
lods
fldl
mov
fcmovbe
daa
test
in
and
mov
sti
mov
add
bound
outsl
popa
fs
outsl
mov
test
rolb
push
sbbl
mov
inc
ret
mov
pop
jno
mov
xlat
lcall
mov
sbb
push
add
mulb
hlt
popf
shlb
addr16
jle
out
sbb
jae
push
and
mov
dec
jb
repz
mov
ja
pop
lds
xchg
push
xor
das
xchg
pop
xchg
pop
and
scas
xor
push
iret
repz
jle
jl
push
jo
pop
aaa
imul
pop
pop
fnstsw
pop
cmp
jne
jo
arpl
xor
adc
incb
pop
pop
ja
xor
xor
push
dec
adc
push
xor
test
mov
pop
repz
loop
jno
xlat
jae
or
xor
push
lea
mov
add
mov
xchg
sbb
or
or
add
push
sub
or
movsl
mov
fisubrs
cld
mov
lahf
fsubr
cmc
mov
inc
sub
ja
inc
aam
xlat
add
mov
popa
inc
test
xorl
fisubl
push
test
sub
cmpsb
push
pop
sti
and
cmp
mov
and
das
aam
stos
ret
dec
inc
mov
adc
pop
lahf
popa
fldt
xor
rep
sbb
iret
repz
push
mov
lahf
lods
push
sbbl
sub
inc
mov
push
mov
xchg
jnp
dec
ljmp
add
jns
jmp
push
xor
add
filds
mov
and
dec
arpl
add
ret
jae
daa
jbe
or
dec
out
and
push
mov
xor
mov
mov
pop
xlat
aaa
ss
add
mov
mov
mov
add
sub
dec
mov
ds
fldcw
pop
cmc
adc
jle
sub
pop
rclb
push
lgs
ja
dec
add
das
mov
ja
mov
inc
js
xor
packuswb
push
rolb
outsl
dec
lahf
sub
cwtl
fcomp
xlat
and
xchg
iret
in
out
push
insb
adc
fwait
hlt
jmp
mov
xlat
cmpb
and
insb
call
mov
push
stos
es
pop
pop
fwait
cwtl
lods
add
nop
mov
aas
mov
mov
ja
push
and
mov
jg
add
adc
xchg
mov
mov
lods
pop
dec
movsl
enter
push
push
mov
inc
push
iret
idiv
insl
ss
adc
cli
mov
sub
sub
jae
sbb
mov
sbb
mov
ds
pop
sbb
insb
incl
lods
sub
and
jle
jo
fsubs
fsubrs
xchg
pop
sbb
mov
pop
dec
xchg
js
lods
push
cli
jecxz
dec
push
pop
nop
mov
adc
adc
sbb
push
icebp
fs
xchg
push
in
or
aam
ss
jmp
fs
push
add
inc
mov
inc
daa
pushw
mov
lea
pop
lds
adc
push
xor
dec
sahf
imul
sub
xchg
imul
das
push
pushf
cmp
out
xor
aam
iret
leave
jae
cmp
and
je
sbb
cmp
outsl
add
rolb
xor
lahf
push
mov
inc
decl
add
lret
pop
sub
cmp
nop
sbb
mov
and
jnp
pop
cwtl
add
adc
pop
popf
cmp
cmp
ss
cmp
sub
pop
xor
inc
adc
inc
push
sbb
addr16
mov
inc
cmpsb
jp
xor
jl
jge
bound
add
testl
xor
orb
dec
cmpsl
push
lcall
sub
outsl
jne
cmp
popa
outsb
imul
xor
roll
movsb
adc
jnp
pop
sbb
insb
xlat
or
xorb
mov
pusha
pop
aaa
push
or
in
adc
cmp
test
add
push
movsl
adc
add
pop
add
test
push
mov
or
push
push
scas
lods
daa
and
mov
je
and
xchg
dec
popa
add
loope,pn
xchg
outsb
aas
addr16
add
psrld
mov
hlt
test
push
mov
dec
or
iret
inc
adc
idiv
push
add
les
loope
push
mov
test
out
shlb
jae
xlat
out
pop
mov
outsl
arpl
inc
or
out
pop
sbb
cmp
mov
cmp
xor
stos
test
lea
ret
shll
iret
inc
fdivrl
mov
add
outsl
dec
push
aas
mov
push
or
or
dec
inc
arpl
add
cli
cs
xchg
inc
ds
pop
fsubs
mov
mov
mov
mov
int
mov
inc
push
inc
fisubrl
pop
div
sahf
divb
pop
jle
pop
push
jns
ret
xor
enter
push
pop
dec
push
negl
push
cltd
or
clc
stos
pop
push
mov
in
jle
adc
adc
mov
push
fs
es
xchg
xchg
adc
loop
inc
data16
cs
outsb
out
xor
jo
or
pop
enter
fisttpll
inc
push
arpl
push
jge
int3
ds
cmp
scas
mov
sbb
cmpsl
adc
dec
fnstsw
push
mov
nop
push
or
cmpsb
shll
inc
fdivl
data16
jnp
fwait
pop
orl
push
jo
inc
jns
iret
shll
leave
jnp
call
pop
push
adc
lahf
aaa
mov
or
inc
ficoms
cmpsb
sbb
iret
repz
xor
addb
ss
jns
jne
mov
push
push
push
fs
movsl
sti
pushf
cmp
lods
push
mov
pop
repz
jbe
out
push
adc
and
shrl
iret
jg
push
push
sti
push
pop
repz
ss
and
mov
pop
push
jle
or
push
filds
pop
xlat
or
in
push
cmp
mov
mov
cs
push
add
sahf
shrb
or
adcl
in
mov
push
into
dec
push
and
add
sahf
pop
pop
repz
xchg
fs
cmpsl
jge
push
dec
les
cld
cmp
sarl
cs
jo
out
in
repz
pop
dec
push
or
lret
aaa
rcll
mov
sarl
pop
addl
pop
dec
shl
jns
iret
jmp
mov
jns
lods
iret
icebp
sbb
outsb
sahf
out
cmp
lret
dec
jae
sahf
out
sbbb
dec
repz
push
xor
mov
mov
inc
mov
scas
and
jg
dec
sbb
scas
sub
adc
incl
mov
xor
rcrb
push
outsl
adc
push
mov
xor
adc
mov
pop
mov
push
push
inc
mov
loopne
mov
cs
push
mov
and
pop
sbb
test
imul
adc
or
bound
repnz
mov
daa
or
stc
adc
add
scas
or
movsb
push
dec
inc
add
sub
cmp
inc
or
push
push
push
sub
xlat
mov
add
jl
adc
iret
add
mov
imul
cmpl
js
xor
dec
inc
adc
insl
seto
in
cmp
xor
inc
mov
mov
arpl
pop
sub
push
xor
dec
jo
add
inc
out
xchg
lock
cmp
xor
push
popa
je
test
add
lret
test
and
or
aam
cmp
mov
movsb
sub
pop
push
ficoml
fisubl
mov
outsb
and
pop
jmp
jb
test
dec
add
or
dec
inc
inc
inc
ljmp
xor
lahf
lahf
pop
sub
mov
pop
pop
addr16
dec
sub
lahf
arpl
jnp
mov
push
pop
adc
or
xor
outsl
xchg
push
or
xchg
jo
pop
mov
inc
lds
xor
dec
pop
lahf
cmp
sub
jecxz
sub
mov
xchg
push
mov
lret
in
out
adc
sbb
cmpsl
fs
mov
xchg
mov
jb
add
in
mov
movsb
xor
and
push
lcall
pop
getsec
data16
mov
add
xchg
test
pand
adc
insb
or
out
xchg
and
mov
jp
jae
repz
adc
xor
faddl
cmovp
cmpxchg
lret
xor
mulb
cmova
dec
daa
cmc
jg
arpl
fs
jo
xor
jo
sbb
std
scas
bound
outsb
push
jnp
repz
push
xchg
or
mov
inc
cld
and
adc
push
jb
js
sub
add
ret
pop
notl
xor
pushf
mov
push
outsb
decl
mov
aas
sbb
bound
inc
rclb
cmp
pop
or
sbb
add
jmp
xor
push
fiadds
das
aas
xchg
rol
sbb
je
sti
push
pop
mov
popl
cs
arpl
mov
inc
lods
cmpsl
mov
iret
adcl
fisubl
das
movsb
jecxz
pop
cmp
inc
lods
test
aaa
ja
test
add
das
addl
xor
das
mov
mov
arpl
imul
mov
or
into
pop
pop
imul
dec
mov
xor
inc
pop
mov
outsl
aaa
jne
inc
fldt
xchg
add
pop
mov
push
sbb
inc
das
outsl
inc
push
mull
jb
shll
pop
push
inc
cwtl
sbbb
pop
mov
mov
mov
mov
mov
ficoms
movsl
addl
popl
es
cs
pop
pop
and
popf
add
jecxz
loope
idiv
out
inc
into
inc
and
and
and
sbb
push
testl
rorl
aas
sbb
or
push
xrelease
lea
fisubrl
cs
adc
iret
sahf
add
xchg
add
inc
push
push
ret
in
fcmovbe
and
aas
mov
mov
sbb
and
mov
or
dec
and
scas
aas
add
pop
imul
out
pop
cmpsb
inc
jb
push
jnp
push
inc
daa
sbb
loopne
cmp
dec
push
popl
test
cmp
lret
add
jnp
pop
pop
dec
dec
inc
jbe
ret
shlb
xchg
pop
imul
adc
pop
xlat
inc
ss
mov
lahf
lock
mov
push
jbe
scas
cmpsl
pop
dec
add
cmpsl
or
cmp
xlat
mov
js
jg
and
pop
imul
testl
add
adc
push
jns
add
scas
lods
lock
lret
out
adc
nop
stos
mov
and
roll
loopne
adc
xchg
cmp
jo
je
pop
pop
addr16
incb
aas
jo
jae
daa
pop
jno
outsl
xor
push
out
cmp
pop
sub
jns
xchg
add
jne
or
jmp
xor
ja
sbb
out
lock
mov
jae
mulb
mov
dec
cmp
dec
iret
inc
sub
dec
fmull
push
inc
daa
fimuls
or
punpckhwd
arpl
dec
outsb
push
or
sbb
inc
inc
popf
adc
fldt
and
push
push
mov
push
or
mov
inc
push
stos
pop
test
push
and
bound
and
mov
mov
ret
jae
push
or
faddl
pop
adc
xchg
jmp
into
dec
je
rolb
xchg
push
dec
jne
jmp
adcb
push
mov
mov
pop
daa
movsl
cmp
fwait
xchg
mov
shll
inc
and
lar
mov
jns
jb
or
popa
scas
iret
mov
fcoms
repz
ret
mov
xor
dec
xlat
in
sub
sbb
or
test
inc
insb
pusha
addps
mov
xor
xor
ret
ret
out
loop
push
js
push
add
std
fwait
cmc
adc
incl
dec
inc
dec
push
cmp
dec
sahf
xchg
add
add
sti
loopne
das
fiadds
jg
int
sbb
ret
jbe
add
mov
adcl
lahf
aas
out
incl
add
inc
aaa
jno
sti
shlb
ret
cmp
adc
pop
movsb
cmpb
aad
sbb
cwtl
stos
pop
fadds
pop
adcl
test
and
jge
push
je
mov
jb
mov
andb
fwait
rol
fwait
in
inc
mov
bswap
mov
jmp
sub
fsubrl
stc
jbe
push
ds
insl
xor
jg
mov
inc
inc
xchg
cmpsl
aad
arpl
push
sub
adc
or
cs
insl
sub
adc
or
jmp
or
cs
ret
sub
xchg
mov
data16
mov
call
call
and
cltd
test
push
push
shll
ja
daa
mov
mov
mov
sbb
cmp
fmuls
lret
rep
cs
outsl
arpl
test
add
mov
mov
nop
jmp
push
movsb
mull
jno
addr16
push
scas
addr16
cmp
dec
movsl
jg
push
ret
call
push
sbbl
int
pop
and
adc
jg
and
pop
mov
fisttpll
das
ds
das
sbb
mov
mov
imul
daa
push
and
jg
push
inc
push
pop
inc
inc
inc
push
inc
pop
and
or
imul
insl
insb
cwtl
xchg
add
cs
sbb
push
and
lods
insl
cs
or
pop
adc
fsubrs
sbb
gs
pop
aas
ds
shll
push
popw
push
ss
sbbl
aaa
push
cld
inc
test
push
es
add
daa
push
mov
lret
outsl
pop
out
adc
push
lods
mov
and
dec
xchg
inc
repz
sbbb
mov
out
shl
das
int
fistpll
xlat
outsb
lds
adc
in
imul
std
mov
sbb
push
inc
idivb
cmpsb
cs
mov
ret
xor
idivl
aaa
mov
mov
mov
addr16
dec
dec
adc
sbb
mul
cmp
scas
push
inc
cmp
mov
push
lock
dec
cmp
push
and
xor
insl
pop
mov
ja
out
or
pop
adc
enter
sbb
popa
addr16
fadds
ret
sub
bound
sbb
pop
pusha
mov
je
insb
jns
xchg
fidivl
movsb
outsl
je
mov
popa
pop
and
stos
rolb
sti
daa
adc
sbb
sub
sub
push
xor
mov
js
ret
pushw
icebp
inc
dec
inc
mov
adc
add
movsb
push
add
test
gs
jo
jns
iret
jo
popa
in
inc
mov
bound
sub
outsl
insl
jne
push
xchg
jbe
mov
add
lods
bound
or
addr16
cmp
stos
icebp
bound
push
inc
je
bound
push
pop
gs
inc
insb
aas
sbb
cld
dec
jbe
pop
inc
popa
ss
faddp
imul
jo
aaa
xor
arpl
jo
in
stos
sub
dec
sub
fbld
ret
orb
inc
jle
mov
or
inc
xadd
sbb
inc
cmovo
addb
adc
sbb
mov
nop
jo
maxps
and
mov
hlt
cs
add
psrad
xor
decl
pop
push
add
out
cmp
loopne
add
sbb
outsb
int3
or
es
cmp
in
push
hlt
daa
ds
fistps
insb
mov
shlb
and
jnp
adc
push
xor
inc
push
pop
das
mov
mov
inc
add
lods
pop
js
ja
lahf
add
xorl
les
enter
mov
xchg
mov
insb
sbb
daa
xchg
imul
inc
sub
fs
push
mov
fcomi
push
adc
dec
fsubl
fildll
js
loop
flds
add
aam
in
jl
ss
mov
pop
jle
mov
mov
mov
jb
clc
mov
lret
enter
lds
xor
in
outsl
inc
inc
push
dec
add
push
repnz
mov
pushf
cmp
lahf
nop
cwtl
fcompl
pop
and
enter
dec
add
fsub
push
adc
inc
inc
out
scas
jbe
xchg
enter
dec
enter
push
xor
xchg
dec
cmp
fiaddl
outsl
xchg
js
enter
jo
js
jae
pop
pusha
movsb
lods
sbbl
cmp
jb
sar
stos
loopne
in
addr16
aas
add
or
mov
inc
int3
adc
push
pop
push
movsb
das
inc
daa
and
xchg
xor
pushf
aas
daa
nop
xorb
aam
mov
push
cli
pop
in
aam
mov
int
mov
push
inc
push
nop
enter
insb
insl
push
aas
ja
aam
pop
enter
cld
mov
aas
dec
in
and
outsl
movsb
inc
in
mov
ja
jge
in
jo
sub
add
cmp
inc
daa
lock
dec
inc
enter
mov
push
loopne
nop
das
sbb
testl
stos
mov
add
idivb
iret
and
push
in
negb
sub
push
in
mov
jo
in
cmp
jnp
daa
add
mov
shll
iret
test
cld
add
repz
cs
aam
and
mov
es
inc
push
test
push
xchg
cld
fcmovb
pop
and
jl
bound
dec
jae
addr16
pop
int3
mov
divl
in
add
shrl
imul
dec
add
cld
rorb
cs
pop
insb
rclb
lahf
add
pushf
fsubrs
dec
lahf
nop
out
push
pushf
xor
and
repnz
nop
iret
test
cmp
add
pop
lahf
pusha
test
fidivl
mov
lods
mov
repnz
enter
in
pop
enter
mov
and
sub
pop
insl
leave
shll
push
shl
fcoml
mov
mov
jg
or
jne
test
nop
movsb
daa
frstor
adc
lods
cmpsl
push
cmpsl
xor
enter
in
scas
enter
cmpsl
cmp
mov
sub
cmp
dec
mov
testb
fisubs
iret
mov
mov
jb
iret
mov
pop
enter
loopne
or
cmp
nop
fbstp
in
and
xor
dec
push
xor
cmpsl
in
xor
mov
jg
and
js
cmp
test
add
stc
cmp
repnz
fdiv
jl
inc
cs
or
dec
enter
xor
inc
push
and
cmpsl
js
scas
pop
jnp
dec
mov
sahf
xchg
jb
fistl
je
test
enter
enter
enter
stc
pop
clc
adc
and
xor
push
enter
ja
pop
sar
lahf
and
fs
enter
dec
lahf
fs
repnz
push
mov
aam
pop
enter
mov
add
adc
sub
lods
or
cs
lods
jg
test
push
jl
addr16
cs
nop
pop
loopne
mov
rcr
loopne
int
mov
fnstenv
jmp
fldenv
cmpsl
in
rcll
cmpsb
push
ss
fldenv
cmpsl
in
nop
or
mov
pop
mov
mov
add
push
test
clc
fsts
cmp
or
sbb
movsb
out
pop
add
clc
cmpsl
loopne
clc
dec
enter
jo
aas
stc
lods
sub
sbb
push
jl
movsb
mov
pop
jb
cs
cmpsl
mov
cmp
add
ds
or
hlt
repnz
adc
nop
dec
fstpt
pop
sahf
push
pop
dec
aas
ja
or
lahf
rcrb
inc
shlb
lahf
pop
out
call
adc
or
ja
out
pop
bound
jmp
rcr
add
dec
inc
loopne
mov
jbe
dec
mov
inc
and
mov
pop
xorb
inc
push
mov
lock
js
and
add
loopne
xor
in
fldl
push
push
movsb
inc
mov
inc
mov
imul
test
addr16
lahf
pop
imul
int3
inc
ja
out
sahf
lock
clc
fucom
and
push
lock
aam
inc
ss
sbb
sub
cmp
lahf
pusha
stos
shlb
adc
daa
sar
fiadds
fdivrp
push
dec
rol
cmpsl
jo
int3
or
jo
adc
mov
fildll
mov
push
inc
fists
lods
sub
or
int3
inc
sub
rolb
mov
in
iret
fisubrl
jo
inc
jg
or
pushl
shl
loopne
pop
pop
add
fiadds
loopne
push
mov
enter
fadds
test
jg
nop
mov
enter
mov
mov
and
shrb
mov
fidivrl
in
pop
daa
sub
insb
lahf
in
inc
test
lods
ja
adc
lods
mov
shl
outsl
push
iret
lds
test
cmpsl
inc
add
and
adc
lahf
dec
addr16
or
lahf
fs
nop
push
pusha
jo
sahf
or
mov
rorb
lock
nop
int
add
adc
mov
lock
jecxz
and
test
in
mov
adc
nop
outsb
and
test
jb
lahf
nop
inc
loopne
fldl
inc
cmc
mov
xor
in
cmp
fidivl
aas
js
test
in
out
iret
mov
push
lods
sub
fadd
rorb
clc
or
mulb
mov
push
xchg
inc
outsl
test
xchg
clc
inc
in
pushf
cmp
push
pusha
enter
outsl
insl
outsl
aas
mov
sbb
scas
pop
insb
adcb
cmp
pop
add
in
flds
js
in
out
bound
xorb
or
clc
adc
inc
mov
push
push
pop
fsubrs
daa
data16
iret
inc
lock
pop
mov
daa
pushf
fsubr
add
jns
test
ljmp
scas
push
imul
xlat
mov
cmc
and
push
or
dec
outsl
out
sbb
push
addb
aas
call
cmpsb
adc
pushl
ja
in
andb
pushf
ja
scas
fnsave
lods
outsl
mov
add
dec
out
sub
roll
faddp
xor
xchg
push
fcmovnu
les
dec
push
push
daa
aas
ss
lcall
sbb
pop
out
mov
ja
and
filds
jb
inc
cmp
and
and
and
sbb
daa
inc
or
cmp
int
repz
mov
dec
push
xor
icebp
mov
enter
ds
add
es
push
and
lcall
out
mov
out
test
push
dec
out
out
xor
ds
push
push
int
in
movsb
mov
shl
lcall
pop
test
scas
fisubs
iret
mov
xchg
and
in
dec
cwtl
ljmp
aas
dec
xchg
out
xchg
inc
ss
fildl
pop
leave
sarl
jmp
scas
in
mov
mov
push
xor
mov
push
jb
jge
enter
add
jmp
push
arpl
leave
adc
mov
dec
inc
fs
pop
cmp
xchg
sti
inc
pop
add
scas
sbb
push
rclb
xchg
add
rcr
in
dec
xor
outsl
add
inc
mov
daa
push
pushf
inc
sarl
push
dec
in
fistps
fistpll
iret
test
scas
mov
jb
scas
test
cmp
push
jo
adc
popa
and
push
rcrl
out
mov
xor
fstp
xchg
mov
cmp
add
and
ljmp
dec
repnz
movsb
out
scas
add
or
and
xor
push
jno
pop
xor
out
or
repnz
out
out
outsl
add
mov
fildll
loop
rolb
js
lcall
cwtl
add
jns
sub
mov
xlat
hlt
out
movl
pop
or
lock
jo
dec
jg
push
xor
add
or
mov
add
lods
ja
loopne
in
pushf
sub
lock
dec
xchg
outsl
add
scas
fs
and
fisubs
outsl
xor
xlat
mov
fdivrp
ret
fs
sbb
cwtl
pop
scas
add
les
mov
dec
fisubs
or
daa
add
sbb
and
xlat
cmpsl
in
cmp
xchg
add
lret
fisubrs
popa
fistpl
mov
call
push
mov
add
aaa
cwtl
pop
adc
jmp
xor
adc
or
xchg
hlt
int
imul
jl
pusha
repz
mov
pop
loopne
xor
inc
jnp
adc
inc
repz
fisubrl
sbb
add
js
xchg
rolb
testl
add
fidivl
outsl
push
bound
jbe
outsl
jg
aad
xchg
mov
xchg
mov
push
xor
scas
test
movsb
clc
push
mov
hlt
scas
lcall
cmp
xchg
clc
loope
push
xlat
push
xchg
xchg
mov
push
mov
mov
loope
and
dec
enter
cmc
push
jo
ficoml
xlat
or
xlat
dec
dec
idivb
add
ret
imull
clc
mov
cmc
dec
aam
dec
dec
inc
divl
inc
jno
loopne
in
fdiv
pop
inc
addb
cltd
mov
inc
outsl
and
out
mov
testb
imulb
add
sub
in
shlb
xor
sub
addr16
and
les
sbb
outsl
addr16
jo
xchg
add
cmpsl
pusha
imull
inc
jno
jo
scas
mov
and
movsb
xchg
mov
and
jg
daa
in
or
mov
mov
iret
xlat
xchg
and
jg
addr16
pop
jb
daa
add
fs
leave
test
add
push
enter
sub
clc
push
faddl
mov
imulb
outsl
add
lahf
mov
pop
in
sub
inc
ds
adc
cmp
ss
push
push
dec
stc
aaa
add
or
add
xchg
push
lods
in
cmpsb
mov
xor
int3
xlat
add
push
sub
push
daa
loopne
pop
cli
daa
in
scas
or
lock
in
stc
sahf
negl
push
xchg
add
call
jns
js
or
outsl
mov
or
fcoml
aas
add
sahf
or
cmpsl
aaa
inc
mov
and
dec
movb
lcall
dec
xchg
outsl
add
or
jae
pop
xchg
movsb
mov
and
imul
js
and
pop
leave
add
cld
jmp
dec
pop
push
cld
pop
scas
fadds
xchg
add
sbb
add
add
and
pop
lahf
addr16
mov
inc
or
out
mov
daa
or
or
out
adc
std
addr16
jl
push
pop
add
addr16
out
xor
lods
int
movsb
mov
mov
aam
addr16
mov
push
dec
int3
les
divl
test
inc
mov
push
inc
xchg
and
sub
mov
out
push
nop
incb
aaa
cs
fdivs
rol
cs
or
rol
enter
adc
and
xor
lahf
fdivl
mov
mov
clc
out
xor
fimuls
jl
les
clc
ja
adc
call
decl
xchg
push
add
mov
jno
jb
test
stos
iret
sarl
jmp
xchg
mov
faddl
xchg
out
mov
mulb
mov
cmp
xrelease
idivl
cmpsl
dec
outsl
xchg
icebp
or
mov
jns
arpl
stc
cmp
shll
mov
cmp
cmpsl
test
sarl
add
and
out
nop
aas
lahf
out
sahf
bound
xchg
ds
repz
outsb
mov
sbb
jp
mov
dec
repz
in
repz
out
xchg
cs
ljmp
inc
jne
push
cmp
push
test
aas
repz
out
lea
stc
cmp
push
fwait
in
cltd
push
fidivrs
lcall
lock
out
testl
into
hlt
xchg
pushf
lahf
cmpsl
stc
xor
add
cmp
repz
jl
jl
cmpsl
stc
xor
mov
outsb
xchg
int3
sbb
repz
shr
mov
cmpsl
stc
cmp
sub
repz
sub
sahf
cmpsl
stc
add
cmpsl
imul
repz
pushf
repz
out
add
sarl
in
adc
out
sahf
out
lods
cmp
lods
ds
jns
mov
jb
lcall
leave
push
mov
xor
out
xchg
fdivr
es
jns
out
test
mov
pop
mov
cmp
out
xor
sahf
out
mov
xlat
outsb
mov
stc
cmp
xchg
mov
xor
lahf
shll
mov
cmpsl
stc
xor
stc
dec
mov
iret
repz
xchg
ss
imul
push
mov
out
hlt
aaa
mov
dec
sbbb
jbe
out
lcall
hlt
out
ds
ret
ret
popf
aad
out
ds
ljmp
lds
lea
out
imull
daa
ds
popf
clc
cmpsl
stc
cmp
xor
xchg
sahf
out
push
lret
jl
loopne
int3
jns
iret
roll
xor
int
stos
pop
into
inc
mov
in
xor
arpl
ds
ret
pop
rcl
idivb
fstpl
shll
out
fstpl
aam
cwtl
out
sti
cmp
repz
xchg
sar
daa
jbe
out
mov
mov
out
cmp
in
fstps
ds
repz
xor
outsl
stos
sub
imul
jl
out
rcrb
arpl
mov
lahf
in
out
or
ror
cmpsl
fnstcw
inc
in
aam
lock
mov
lcall
cmc
testl
insb
ss
mov
jns
jae
dec
inc
ljmp
add
ss
lahf
int3
nopl
pop
std
push
inc
cmpsb
push
inc
aas
aam
inc
jmp
jae
jo
scas
pusha
push
scas
sbb
xor
scas
add
movsb
mov
or
scas
jbe
pop
loopne
aaa
lahf
out
pop
inc
ss
cmp
dec
and
shlb
pop
xchg
nop
or
sarl
cmp
mov
mov
jnp
aas
or
popf
push
arpl
int3
cmp
mov
and
movntq
out
inc
pop
neg
and
fmuls
mov
pushf
dec
pop
in
mov
xor
ud0
mov
adc
push
outsl
out
out
inc
jecxz
mov
push
inc
outsl
pop
push
inc
stc
and
mov
imul
out
push
aas
mov
xlat
xor
gs
xor
rorl
dec
jg
dec
aas
in
xlat
pop
jb
mov
ss
fldt
daa
push
cli
or
fnstsw
adc
add
aam
in
xor
push
xchg
test
sub
mov
pop
add
ffreep
adc
inc
loope
ror
jne
xor
sbb
push
or
and
jb
or
and
xchg
fcomip
sbb
push
pop
outsb
jp
jb
xor
jnp
push
in
pushf
cmc
das
je
or
xchg
cmp
jg
lock
lods
cmpl
or
xlat
pop
inc
leave
addr16
dec
cs
je
inc
rclb
ret
fstpl
jg
dec
movb
mov
add
fistpll
inc
pop
xor
cmpsl
mov
inc
scas
pop
ja
sbb
xchg
push
push
dec
sbb
fbstp
data16
ja
mov
insl
daa
inc
fbstp
and
jne
call
cmpsb
scas
and
inc
jmp
mov
push
pop
pop
push
loopne
jb
testl
daa
sub
xchg
and
pop
xchg
fisubrl
call
leave
add
mov
xchg
out
cmp
leave
negb
ss
insb
push
out
lret
push
cwtl
push
mov
push
xchg
fisubl
dec
adc
pop
jb
and
inc
out
es
xor
and
daa
inc
push
push
pushf
inc
xchg
pop
mov
leave
xchg
and
jp
jl
lock
sub
mov
mov
lds
or
or
push
scas
comiss
repnz
add
jmp
es
mov
or
outsl
insb
mov
jl
adc
fiaddl
les
scas
aam
xor
or
out
fs
jb
inc
jb
mov
into
inc
lods
pop
push
cmp
loopne
pop
ret
push
mov
mov
fildl
out
push
inc
xor
pop
xchg
inc
repnz
cmpsl
inc
hlt
adc
adc
leave
cmp
daa
mov
fwait
sub
in
push
addr16
pop
pop
push
mov
jo
jle
xchg
shrl
add
pop
jb
rcr
mov
add
imul
ja
fmull
xchg
je
inc
mov
push
iret
pop
fwait
in
mov
sub
loopne
add
mov
test
dec
jl
test
push
testl
sbb
rcll
xlat
mov
mov
xchg
xchg
xor
add
xchg
and
mov
mov
mov
dec
jb
mov
mov
pop
gs
cmpsl
nop
sbb
jne
jge
pop
pop
fmull
dec
add
dec
dec
mov
mov
push
ljmp
mov
addr16
or
or
lods
ret
or
or
xor
push
cmp
push
fisttps
outsb
add
mov
add
ret
mov
inc
pop
pop
rolb
mov
push
push
inc
push
fs
and
and
pushf
mov
add
mov
mov
mov
xchg
and
mov
pop
mov
jb
mov
jle
mov
dec
or
mov
fucomi
in
mov
xchg
js
xor
das
cli
and
enter
daa
inc
test
cmpsb
fcomp
xchg
dec
push
leave
add
stos
inc
and
or
enter
sbb
lahf
push
push
lods
dec
push
dec
pop
ja
xchg
das
jns
cmpsl
jo
out
push
add
popf
push
jnp
sahf
mulb
mov
inc
dec
cs
vprotw
jns
clc
inc
mov
mov
cmpsl
dec
sahf
xchg
fists
add
cmp
xchg
or
lock
xchg
jge
lock
xchg
pop
enter
mov
jb
xchg
sbb
out
sbb
cmp
out
mov
xchg
scas
or
movsb
sbb
rclb
ljmp
pushf
in
xchg
or
ss
fdivrs
sbb
fldenv
push
pop
xchg
xchg
push
jb
xchg
shll
iret
daa
mov
scas
cmp
xchg
daa
cltd
push
mov
mov
enter
mov
out
xchg
mov
rclb
out
pushf
sub
jmp
cmpsl
push
pop
je
dec
mov
mov
dec
pop
push
adc
mov
xchg
addr16
aad
xchg
cmp
xchg
xchg
call
dec
shlb
push
sub
repnz
sbb
dec
and
jmp
and
mov
lret
xchg
push
sahf
inc
pop
xor
pop
adc
or
stc
unpckhps
push
addr16
scas
cmp
cmp
inc
push
aas
inc
dec
xchg
fiadds
pop
in
xchg
fildl
add
and
hlt
push
fisubrs
cwtl
cmpb
in
cmp
daa
sub
push
and
pop
jb
daa
inc
and
pop
call
mov
aad
lock
push
dec
mov
and
inc
push
pop
push
add
add
repz
mov
mov
out
dec
or
mov
pop
dec
popf
xchg
add
add
xchg
xor
adc
xchg
and
nop
dec
insl
pop
out
jg
xchg
popa
or
inc
ja
into
popf
xchg
mov
mov
sti
cmpsl
cmp
pop
unpckhps
js
cmp
push
cmpsl
push
fcompl
push
mov
fbld
xor
mov
push
xchg
or
xchg
les
xchg
out
or
jmp
das
addr16
xchg
mov
cmp
mov
cmp
in
dec
push
jge
test
je
test
mov
xchg
mov
aam
dec
dec
lds
cwtl
aaa
add
push
aam
rcrl
and
jns
jg
lcall
inc
das
xchg
dec
mov
lods
mov
and
mov
pop
and
cltd
cld
push
es
xchg
pop
xchg
sub
dec
push
and
fcmovbe
add
scas
inc
loopne
fnsave
cwtl
cmpsb
pop
andb
test
dec
lcall
jge
out
loopne
xchg
es
push
aas
push
addl
push
push
pop
js
pop
test
repnz
es
xchg
es
and
scas
fmul
das
adcl
decl
andl
insb
addr16
mov
jg
fwait
push
add
add
in
daa
mov
pusha
dec
cs
pop
add
jmp
ljmp
pmulhuw
hlt
out
in
mov
popl
int3
ds
pusha
call
sbb
loope
ret
push
aaa
mov
aas
push
cmpsl
dec
push
scas
push
push
lahf
stc
lock
pusha
push
push
insl
pop
push
jp
daa
xchg
xchg
sbb
pushf
pusha
sub
add
push
aas
xchg
cwtl
pushf
or
in
fcoml
mov
mov
cmp
pop
sub
add
out
cmp
fildll
popf
xor
inc
push
lahf
dec
popf
outsl
jo
xor
js
pop
and
in
fwait
ja
mov
outsb
daa
mov
rdseed
rcr
pavgw
in
push
add
addr16
cmp
cs
pop
and
mov
in
push
sub
outsl
test
leave
and
adc
lret
lgs
call
xchg
adc
sbb
push
sbb
mov
push
maxps
dec
adcb
add
push
lahf
out
pushf
dec
dec
shll
mov
cmp
jbe
xchg
add
mov
loop
mov
adcb
mov
inc
ljmp
fwait
mov
or
add
adc
push
clc
aas
mov
je
mov
push
pop
pop
js
add
loopne
pop
dec
sub
cmp
scas
mov
iret
daa
iret
jae
ficompl
in
lock
hlt
jle
outsl
clts
mov
dec
sahf
aaa
imul
xor
push
dec
push
adc
jl
dec
imul
aas
outsb
and
test
test
mov
insl
and
push
pop
insb
cs
cmp
lock
addr16
pop
mov
movhps
mov
jbe
out
inc
addr16
scas
mov
push
imull
jae
jnp
fmulp
repz
xchg
insl
xchg
mov
das
push
orb
das
sbb
in
in
out
ja
es
ror
and
inc
push
sbb
enter
push
js
add
test
addb
lock
mov
movsb
out
xor
add
inc
mov
repz
add
cmp
mov
in
scas
add
sbb
idivl
in
inc
push
movsl
and
addr16
xor
sbbb
cmpsl
ret
xchg
dec
add
pushf
loope
jb
xor
ja
movsl
cmp
xchg
push
das
outsb
movsl
jbe
fdivl
jb
pusha
and
fisttpll
ja
push
add
cmp
mov
and
mov
movsl
call
cmpsb
cmp
es
mov
dec
cmpsb
out
xchg
inc
daa
push
imul
mov
add
add
daa
xchg
cmpsb
fisttps
fisubrl
leave
loopne
xlat
addr16
mov
mov
xor
pushf
sub
leave
add
cmpsl
sarb
push
add
out
add
pusha
popf
mov
push
into
jl
inc
pushf
dec
push
cs
jb
inc
fwait
xor
rcrl
fcmovnu
shlb
jecxz
xchg
les
test
inc
dec
mov
push
scas
and
scas
xor
xchg
and
push
test
test
or
fwait
nop
into
mov
jmp
test
mov
xor
sub
mov
mov
and
pushf
push
jo
adc
test
lods
sub
pushf
mov
imull
scas
ja
decl
outsb
adc
ja
in
in
sarl
or
fldl
push
rdpmc
stos
mov
cmovae
fstl
jmp
stos
pop
ja
pop
jle
cmp
cmp
add
xchg
cmp
leave
repz
sahf
cmpsb
or
mov
mov
repz
or
leave
repz
out
out
notb
mov
adc
stos
unpckhps
push
push
push
push
stos
xlat
out
cs
addr16
inc
push
add
cmp
jns
das
test
xchg
jl
sahf
add
push
aam
in
jbe
xor
in
psubd
lahf
sub
ljmp
repnz
inc
jb
pop
mov
jmp
das
aam
mov
sub
mov
mov
lods
mov
lods
push
add
jmp
push
inc
mov
dec
or
push
or
mov
test
fidivrs
dec
jne
arpl
jns
outsl
fadds
push
aas
outsl
jp
lcall
pop
or
xor
or
push
sub
sbb
clc
adc
mov
ds
cmc
and
pushf
and
nop
xchg
xchg
cmp
dec
pop
mov
mov
popf
sbb
fsubr
and
leave
xor
adc
xchg
loopne
cmp
mov
and
pop
pop
sub
xor
pusha
incl
and
lahf
xchg
nop
pop
pop
cmp
push
jle
pop
jmp
add
mov
jmp
jbe
mov
inc
notrack
cmp
or
leave
fsubs
cmp
in
in
in
aad
in
out
add
out
cmp
sbb
repz
jmp
cmp
pop
mov
in
ret
scas
or
cmp
pushf
loopne
lcall
daa
daa
and
scas
aam
lock
adc
or
shl
cmp
or
or
or
mov
sub
inc
mov
loopne
mov
mov
mov
sub
insl
mov
movl
insb
push
daa
movsb
and
add
fildll
jb
inc
mov
ds
daa
xchg
fcoml
in
pop
ja
out
push
xchg
idiv
xchg
adc
mov
mov
jns
cmp
mov
test
inc
je,pt
or
cmovns
xor
adc
xchg
int3
ds
fcomp
cs
inc
je
mov
mov
mov
addr16
xadd
push
cmp
enter
inc
repnz
pop
push
aas
repz
fwait
mov
push
mov
push
push
cs
or
pop
ja
dec
daa
push
push
outsl
pop
pop
jge
cmp
cmpsb
add
aaa
inc
shl
mov
addr16
xchg
or
xchg
inc
rorb
fcom
insl
mov
loopne
psllq
str
push
dec
sti
mov
mov
mov
mov
mov
or
in
add
mov
mov
cmp
and
bound
mov
inc
add
inc
pop
ss
xor
ret
jbe
or
jl
roll
jp
adc
imul
movsl
jo
imul
add
clc
inc
out
out
addr16
popa
push
mov
or
sahf
add
and
sub
or
inc
dec
push
pop
add
inc
lahf
outsb
mov
xor
pop
mov
outsb
aas
fwait
cmpsl
push
enter
leave
aad
lret
ja
sbb
mov
shll
mov
mov
mov
cs
dec
pop
cmp
jmp
ja
dec
das
push
jg
xchg
daa
pop
enter
add
push
outsb
daa
xchg
jbe
das
cmp
mov
inc
cmp
cltd
push
mov
movsl
mov
bndstx
cmp
mov
cltd
lea
mov
mov
push
fists
inc
jb
lods
fmul
pop
jo
jns
inc
adc
and
mov
sbb
xor
dec
orps
and
mov
mov
cmp
stos
das
jg
or
enter
repnz
mov
add
pop
push
mov
sahf
pushf
je
push
cmovp
mov
incl
setnp
mov
mov
loop
inc
popl
fmull
loope
cmpsl
testl
add
cs
or
or
cs
cmpsl
fisttpl
or
inc
das
femms
pop
cmp
sahf
dec
cvtps2pd
out
pop
sbb
iret
adc
sets
outsb
pop
cmp
push
das
push
pushf
fcompl
rcrb
das
psubusb
ja
ljmp
mov
mov
daa
xchg
jl
outsl
cmovne
xchg
adc
push
into
repz
xchg
push
add
ja
lahf
scas
movzwl
pop
rorl
pop
fucom
lret
push
aad
vmread
inc
in
jnp
add
mov
cmp
mov
gs
xchg
cs
mov
les
iret
push
add
js
cmp
lock
addr16
adc
dec
sub
jns
pop
push
jmp
dec
push
xchg
setns
mov
ud1
rol
leave
xlat
or
xchg
cmp
in
das
mov
pop
mov
fisttpll
pop
das
pop
push
aas
push
pop
leave
xor
iret
aaa
mov
leave
rep
daa
bound
push
add
icebp
xchg
fstpt
cmpb
daa
daa
mov
cmpsl
lods
mov
ret
insl
xchg
mov
sub
mov
pop
ja
daa
adc
sbb
and
xchg
out
sub
sarl
xlat
sahf
ja
xor
jbe
add
inc
fimull
xchg
mov
add
mov
mov
aam
punpckhbw
shlb
xchg
mov
pop
popf
in
jae
add
leave
in
mov
bound
jb
jl
ret
xchg
xchg
xchg
popf
movsl
mov
out
in
mov
and
or
lock
push
mov
rolb
sub
shl
leave
inc
fwait
pusha
xchg
leave
mov
data16
xchg
cltd
mov
cs
ja
addr16
and
cmpsl
ja
dec
notl
ja
shll
stos
orl
popf
xlat
gs
lar
cmp
dec
sahf
add
clts
push
pop
push
pop
or
sbb
mov
jg
fimull
movsl
sbb
loop
sar
dec
push
mov
pop
mov
daa
daa
sub
cmp
cmpsl
push
js
xchg
cmp
pop
retw
xchg
dec
pop
mov
mov
xchg
mov
mov
push
cmp
repz
add
add
sbb
ret
adc
aas
sbb
pminub
push
ret
insl
xchg
mov
xchg
ret
jne
jge
xlat
test
mov
insl
mov
setne
rclb
out
leave
in
sub
push
lock
cmp
leave
in
add
femms
sbb
mov
les
xor
outsl
cmp
or
es
imul
mov
iret
jo
jnp
add
jb
xchg
in
jbe
out
mov
sahf
xlat
not
cs
jmp
cmp
xadd
repnz
daa
lds
out
mov
push
push
pop
pcmpeqd
add
jge
cs
stos
cmc
test
out
test
rorl
seta
add
rol
clts
jns
sarb
push
or
dec
sahf
out
or
lock
or
sub
push
out
adc
ja
iret
nop
scas
mov
dec
ja
dec
dec
fidivrs
sbbb
push
lea
push
adc
adc
xchg
mov
call
push
shlb
inc
daa
pop
xor
jbe
pmaxub
out
mov
das
push
xlat
femms
jno
adc
fists
iret
pop
xor
daa
cmp
popl
movsb
push
pop
xchg
mov
pmaddwd
es
inc
pop
lea
inc
mov
push
cmp
enter
aaa
cmp
maskmovq
mull
cmp
call
xorl
out
enter
roll
addr16
mov
daa
pop
pop
addr16
outsl
ja
jg
in
loopne
pop
mov
mov
repnz
dec
add
lret
dec
imul
lret
lret
lret
xor
cmp
inc
leave
push
leave
sub
lret
pop
leave
push
jne
jbe
fwait
out
bts
stos
mov
in
xchg
into
addr16
popf
xchg
fildl
out
in
negb
paddd
leave
adc
in
lret
pushf
mov
divl
repnz
mov
lret
add
mov
lods
pop
loopne,pn
repnz
jb
pop
push
aad
add
hlt
xor
dec
cmpsl
mov
inc
pop
sub
lret
and
fistps
cmp
test
pop
or
adc
test
sub
ss
sahf
out
inc
add
mov
or
js
iret
repz
orl
cltd
cmp
repz
movsb
push
scas
psllq
repz
iret
repz
adc
adc
adc
lcall
pop
int3
pop
repz
jns
sbb
sbb
es
sbb
prefetcht1
cmp
cmp
push
adc
cmp
adc
adc
test
cmp
push
or
iret
sub
int3
faddp
and
xlat
int3
fbstp
add
or
inc
out
xchg
inc
fisubs
push
pop
cmpsl
mov
dec
xor
xchg
pop
dec
int3
int3
fnstsw
jmp
rol
das
subb
psrlw
pop
xchg
or
and
pop
daa
and
sahf
or
and
out
rcrb
jb
int3
add
or
add
jns
push
int
pop
mov
push
lcall
daa
daa
pop
insb
enter
mov
cld
fisttps
loopne
add
outsl
fldenv
push
add
and
jns
into
xor
into
sub
sub
pop
jb
shll
pop
enter
addl
and
pop
out
aam
sbb
ja
sbb
mov
ja
iret
adc
mov
push
lahf
pop
sub
xchg
mov
xchg
out
popf
push
pop
pop
ja
mov
jle
out
mov
xchg
xchg
pop
leave
jae
hlt
mov
daa
int
pand
jmp
sbb
iret
add
xchg
insb
sub
pop
mov
jnp
rcr
push
rcrb
arpl
popf
int3
fiadds
psrlq
jnp
repz
pop
mov
xchg
push
or
jns
leave
fwait
mov
jo
jns
mov
mov
xor
outsl
adc
xchg
fsubp
out
testb
cmpsb
pop
pusha
sbb
xchg
iret
sbb
and
das
push
add
popl
mov
scas
inc
push
add
cmp
lock
inc
lahf
loopne
daa
mov
mov
lock
lahf
dec
dec
sbb
jnp
fmull
bts
mov
test
fisttps
fistpll
lret
mov
xchg
rorl
sub
and
cmp
pop
mov
or
mov
mov
fstl
daa
int3
iret
das
jne
pop
movsb
rorb
push
and
xchg
sub
xor
add
rorl
or
bound
daa
mov
ja
ja
insb
in
in
and
jae
into
int
aad
add
pop
add
clc
rorb
cs
add
xor
dec
and
outsl
arpl
outsl
fnstsw
setns
decl
pop
insl
xchg
out
mov
mov
outsl
and
xchg
aam
aam
andnps
push
add
pop
inc
loope
xchg
js
decl
ja
jl
push
imul
dec
adc
in
inc
aaa
fcoms
nop
dec
mov
or
fs
mov
jle
xchg
fcmovne
push
out
mov
aam
dec
xchg
fsub
aam
cld
fs
xchg
cmp
decl
aad
ja
icebp
test
sub
lahf
push
into
repz
sahf
add
push
add
jmp
iret
jmp
pop
push
push
data16
pop
iret
leave
jae
add
outsb
jbe
loopne
mov
jle
xchg
mov
xor
mov
aad
js
add
ja
notl
ds
rorl
xchg
add
cmp
jo
leave
and
pop
pop
pop
movsb
push
cmp
add
leave
dec
fsubs
jg
jne
cmp
pxor
push
xchg
bnd
out
add
clts
fidivl
jb
loop
hlt
pushf
fsubl
push
nop/reserved
aaa
je
sahf
sub
aas
sbb
enter
iret
jb
cmp
ja
les
in
jbe
jb
mov
or
pop
mov
outsl
enter
rcl
repnz
syscall
cs
insl
pop
invd
decl
fdiv
xor
lahf
adc
leave
out
lock
pop
cmovs
push
ficoml
push
xlat
push
mov
xchg
fcoms
xchg
adc
shlb
jg
pop
and
out
add
les
push
iret
fdivr
nop
cmpl
pop
pop
rcll
int
aas
test
das
loope
pop
daa
mov
cmp
or
xlat
pop
add
xlat
repnz
fmuls
fsts
rolb
dec
dec
push
fwait
mov
mov
xchg
cmp
xchg
dec
push
cmpsl
push
je
enter
flds
leave
inc
mov
psubusw
add
sbb
addr16
and
enter
inc
push
pop
and
pushf
dec
je
popf
out
xchg
push
add
dec
jbe
add
test
lds
fmull
pop
aad
fidivrl
in
push
xchg
in
push
add
cmc
push
std
jno
jb
add
add
imull
mov
push
push
push
adc
adc
addr16
fistl
dec
fcmovnb
rclb
xchg
sub
xor
addr16
pop
xorps
add
clts
scas
sahf
xchg
out
bsf
int3
or
addr16
push
aam
or
insb
inc
jb
adc
imul
mov
jp
fdivr
pop
subb
aaa
out
push
xchg
pop
dec
pop
mov
iret
stos
dec
inc
cmovp
in
lds
or
push
pop
pop
setle
jns
bound
adc
jb
leave
dec
aaa
jns
movups
in
in
mov
mov
sahf
out
sbb
nopl
aaa
jns
xchg
loop
pop
repnz
mov
dec
and
add
push
and
frstor
iret
fwait
sbb
push
es
cmp
jmp
sub
sub
sub
repz
cmp
inc
sub
sub
push
cs
das
int
mov
mov
insl
xchg
fucom
push
sarl
push
inc
repnz
test
es
mov
aas
push
mov
shlb
rcr
fisttpll
insb
mov
lock
ficomps
dec
inc
jmp
xlat
sti
xchg
sub
aaa
aas
cltd
cmp
push
pop
ficoms
in
jle
fistpll
das
lcall
je
in
mov
cmpsl
fstpt
pop
sysret
jnp
jns
fimuls
jmp
das
add
dec
cmp
sbb
out
and
inc
push
adc
jns
jns
test
adc
cmp
repz
pushf
push
cmpsl
pop
repz
repz
mov
cmp
sbb
sbb
sbb
in
repz
push
mov
loopne
repz
sbb
and
iret
repz
and
repz
repz
iret
repz
subb
sub
cmp
sub
repz
into
sahf
cmp
call
aas
or
into
into
into
into
pop
push
loope
and
lahf
sub
mov
int
filds
decl
daa
pop
es
out
arpl
jns
out
test
and
and
sahf
out
mov
out
sahf
out
fcompl
out
int
jns
repnz
std
adc
loop
jns
idivl
dec
push
push
dec
sub
jns
out
xor
inc
dec
fucom
jne
dec
sqrtps
pop
push
xchg
pop
aaa
jns
popw
dec
cmovp
jns
xchg
adc
jno
jle
mov
xchg
dec
mov
repz
or
fwait
call
call
push
push
jecxz
femms
iret
repz
das
add
add
add
inc
push
dec
pop
push
repz
repz
or
repz
jle
mov
or
jle
jecxz
movzbl
rclb
adc
jns
out
adc
adc
adc
repnz
cld
pop
jle
in
sahf
out
adc
sbb
sahf
out
xor
inc
sbb
dec
push
push
pop
pop
and
and
das
mov
nop
outsl
fwait
mov
jo
in
mov
mov
out
sahf
out
pop
fsts
in
sahf
out
sahf
in
adc
adc
adc
jns
pop
push
add
or
adc
out
sahf
nopl
and
sub
sahf
out
or
or
mov
or
dec
pop
in
in
mov
pop
push
jbe,pt
je
jnp
inc
test
icebp
xchg
in
sbb
je
mov
outsl
outsb
in
fwait
jecxz
outsb
push
pop
in
aad
fildl
in
in
pop
aaa
mov
cmc
lahf
std
push
das
xor
adc
out
push
iret
repz
adc
mov
adc
cmp
daa
mov
pop
push
pop
imul
jno
out
sbb
jbe
inc
push
and
out
ja
pop
ja
ret
lret
shl
dec
sahf
xchg
ret
add
sti
leave
insl
in
push
add
adc
das
and
xor
xchg
xchg
cmp
orps
mov
insb
push
adc
in
in
orb
xchg
das
lcall
mov
iret
leave
leave
leave
ret
ficompl
iret
leave
repz
and
sti
and
add
and
ja
in
dec
sub
ja
add
mov
cmp
dec
push
add
pop
popa
pop
imul
or
jnp
lcall
pslld
push
push
fwait
popf
cmp
jbe
dec
stos
push
adc
mov
push
loopne
js
xor
cmp
repz
adc
add
add
repz
jecxz
push
push
aas
repz
iret
pop
dec
push
or
jns
iret
or
push
or
pop
fldcw
sub
in
in
sahf
adc
jb
jns
rcrb
adc
out
icebp
jbe
shll
sbb
pop
jns
sahf
addr16
dec
sahf
out
ds
pop
push
pop
sahf
out
jns
push
and
mov
dec
sahf
daa
lods
mov
ret
pushf
pushf
pushf
fsub
out
cs
ds
stc
das
add
por
cmpsb
xchg
iret
xor
pop
pop
add
push
jmp
repz
jmp
add
js
addb
or
mov
sahf
or
mov
or
ret
leave
leave
lret
loop
pushf
cmp
ljmp
notb
das
or
pop
adc
sbb
xlat
dec
bndldx
and
sub
cmp
aaa
nopl
push
dec
cmp
aaa
xchg
jl
and
pop
pop
pushf
pushf
pushf
je
ja
mov
cltd
mov
insl
in
mov
mov
xsha1
cmpsb
or
out
pslld
lds
std
insb
pop
or
mul
in
adc
in
fistpll
dec
outsl
inc
push
or
push
in
push
or
dec
sahf
out
or
or
xchg
xchg
lahf
mov
sahf
ja
mov
adc
adc
loope
in
testl
jns
fstps
out
repz
jp
jmp
sahf
mov
mov
daa
xor
int
into
into
pop
cmp
lahf
push
out
mov
mov
out
mov
sub
sub
sub
sahf
out
out
push
sub
das
je
sahf
out
xor
mov
cmp
dec
out
pop
into
xor
jns
out
mov
ss
aaa
into
out
sub
cmp
cmp
cmp
out
aas
mov
cmp
cmp
iret
rep
aas
mov
pop
scas
into
psubusw
lahf
out
sahf
inc
out
inc
cld
inc
or
jns
mov
push
lock
and
dec
sub
adc
je
out
add
pop
jp
mov
xchg
int
movsb
decb
dec
and
add
nop
jg
lock
jns
mov
mov
outsl
xchg
push
add
jns
out
add
repz
sahf
pop
iret
push
or
or
pushf
pushf
cmp
hlt
decl
ds
sbb
out
pop
fs
push
adc
adc
repz
adc
adc
daa
jns
pop
sbb
lcall
sahf
ja
jns
xlat
psrad
and
dec
inc
fimuls
lsl
push
sbb
movsb
nop
iret
pop
pop
fdivrs
pop
imul
xchg
add
sub
iret
cmp
push
add
mov
ror
fmull
pop
or
add
or
add
iret
repz
or
and
iret
mov
repz
inc
push
adc
outsb
repnz
pop
unpckhps
addr16
repz
jb
jge
out
fmulp
mov
jbe
mov
sbb
fidivs
repnz
hlt
aad
push
loopne
push
fwait
mov
iret
jmp
testb
pop
iret
jnp
ja
push
daa
pop
sub
and
iret
mov
cmovle
sub
repz
fbstp
and
andl
mov
jne
add
jg
add
fiadds
out
aas
negb
pop
fisubrs
lahf
push
cmc
out
adc
xor
cmc
mov
iret
fwait
xor
add
dec
cmc
iret
push
in
in
mov
out
pop
push
push
push
setae
jns
mov
mov
ret
or
out
push
pmulhuw
out
adc
pop
notb
negb
sahf
testl
pop
mov
fsubrp
mul
jns
aaa
ds
sbb
pop
sahf
out
sahf
sbb
jnp
jns
dec
mov
jns
and
jae
fisttpll
xlat
iret
loop
clc
xor
sub
add
jl
pop
inc
jg
jns
pop
into
iret
clc
test
orl
es
out
add
lahf
cs
cmp
ljmp
daa
daa
iret
add
jne
pop
repz
repz
lcall
or
js
mov
testl
and
testl
daa
iret
cmp
es
adc
outsb
mov
outsl
inc
rsqrtps
sbb
adc
jo
fwait
dec
ds
test
push
cmp
clc
bswap
fsin
adc
pop
push
clc
pop
in
clc
je
out
push
pop
cld
wbinvd
xchg
out
sbb
add
or
ds
daa
iret
repz
push
sub
xchg
out
outsb
aas
inc
cmovp
adc
iret
repz
adc
add
cmp
pop
sbb
sbb
mov
stc
lahf
push
pop
jl
sahf
out
and
and
stc
je
stc
mov
pop
xchg
stc
data16
sahf
out
int
sbb
add
dec
inc
push
dec
pop
push
in
sahf
ja
push
or
rorl
out
or
femms
iret
repz
cwtl
bt
scas
adc
repz
cmp
les
iret
cmp
mov
fisubrl
in
femms
inc
mov
xor
cli
sti
cli
or
outsl
in
and
push
sbb
push
pop
ret
cmp
aas
sti
jg
sti
iret
repz
pusha
and
daa
iret
repz
jbe
orl
cwtl
push
aam
xchg
xchg
aas
and
inc
add
sub
or
nop
mov
pop
in
xchg
and
ficompl
cmc
sti
inc
std
sti
push
cld
jbe
fldcw
cld
das
dec
cld
pop
cmpsl
in
subl
pop
push
mov
cld
mov
psllq
dec
sahf
add
or
ret
syscall
jbe
jl
or
cld
pmulhuw
mov
movups
sbb
push
daa
cmp
leave
repz
cmp
iret
repz
mov
cmp
leave
mov
sbb
xlat
cmp
sbb
sbb
fsts
cmp
das
pop
push
and
iret
jae
imul
cmp
xchg
daa
mov
repnz
pop
das
sub
leave
repz
sub
je
out
xlat
xor
movhps
out
xor
in
xor
add
out
sti
inc
aas
push
lcall
sbb
cmp
jo
mov
pop
lahf
imul
mov
xchg
jl
jle
xchg
std
inc
rorb
into
pop
lcall
mov
jg
in
in
mov
das
mov
push
mov
sahf
fcmovnbe
pavgb
jmp
jmp
imul
or
inc
femms
das
sbb
in
sahf
ja
push
adc
adc
mov
dec
minps
repz
jbe
push
pop
jle
daa
mov
leave
mov
jbe
cmp
les
iret
fimull
xor
out
and
pslld
leave
lods
add
dec
sti
cs
out
push
punpcklbw
imul
dec
sahf
out
sub
jl
fwait
das
sti
cs
add
pushf
cmp
in
add
xor
xor
fmulp
repz
xchg
leave
leave
in
jbe
lahf
scas
ud1
add
leave
leave
iret
fimull
shl
fsubrl
inc
mov
mov
sahf
add
cs
push
add
jns
dec
ficompl
push
pop
sahf
sahf
shl
in
mov
push
mov
mov
loop
dec
ljmp
fwait
psubd
repnz
or
in
push
fcompl
mov
sbb
and
jbe
adc
mov
mov
mov
jns
pusha
js
pop
sbb
aaa
addl
push
add
incl
out
adcl
and
and
pop
add
nop
dec
dec
add
inc
xorb
add
push
sbb
ljmp
xchg
orb
pop
inc
inc
inc
pusha
out
dec
aaa
mov
mov
mov
xlat
add
dec
fiadds
cs
xchg
out
sahf
cmpsl
add
add
jns
or
or
or
aaa
or
inc
fsubrs
adc
adc
outsb
das
and
jbe
popf
push
addr16
das
push
xorps
pop
imull
mov
out
out
push
sbb
push
pop
andb
fildl
aas
addl
sub
popf
movsb
fbld
sbb
pop
data16
cld
and
mov
imul
adc
mov
xchg
xorb
dec
inc
imul
imul
stos
adc
mul
fstpt
or
andb
fisttps
cs
jb,pt
movsl
sbbl
test
pop
shll
cmovo
pop
inc
mov
or
mov
sbb
in
call
adc
push
ficompl
push
pop
fisubrl
xor
mov
rcr
fsubp
stc
jb
jle
fnsave
sub
out
pushf
and
jns
out
xchg
nop
mov
sahf
jl
insb
pusha
push
dec
jns
out
inc
cmp
xor
out
sahf
out
sub
sbb
out
sahf
sbb
or
and
cmp
int
in
and
push
faddl
aam
repz
repz
iret
xchg
xorb
sub
fs
pop
push
sahf
idivl
dec
mov
cmp
sahf
ja
iret
sbb
clc
and
aam
jns
out
mov
iret
jnp
out
mov
cmp
repz
push
cmp
and
int
popf
sbb
or
and
fcomp
cmp
repz
pushf
push
je
loopne
repz
pusha
pop
icebp
jnp
movb
add
push
fwait
adc
lock
js
clc
ss
out
cmp
mov
add
xor
es
push
add
xor
lods
push
cwtl
xchg
xorb
icebp
call
fiaddl
push
inc
jg
popf
add
mov
pop
pop
dec
inc
rdtsc
and
push
adc
es
sarl
mov
adc
push
sti
mov
add
shll
sbbb
les
aad
das
outsl
test
pusha
data16
iret
push
pop
jge
jb
js,pn
stc
fildll
pop
jg
jl
add
pop
orl
repnz
add
mov
out
xchg
es
inc
out
xchg
cmp
repz
and
and
sahf
out
pop
push
sahf
idivl
or
sahf
cmpsl
stc
ds
and
dec
sahf
xor
fmuls
and
out
rorb
or
sahf
out
out
adc
fcompl
cmp
cmp
jnp
push
xor
sub
iret
jae
into
and
iret
repz
adc
and
add
clc
aaa
inc
int
xchg
int3
out
clc
shr
cmp
pop
imul
daa
xor
pop
mov
xchg
cld
subb
inc
xor
lea
add
loopne
rcr
fistl
cmp
iret
repz
pop
js
mov
repz
out
cmp
dec
insl
add
jns
out
push
pop
ja
mov
loopne
iret
loopne
jae
das
push
dec
insb
push
xor
lods
dec
pop
daa
jns
pop
mov
cli
or
pop
repnz
or
ret
femms
dec
or
and
adc
stc
mov
pop
and
sbb
jmp
ret
inc
and
sahf
mov
sub
inc
rcrb
and
sbb
cmp
incl
xchg
xlat
xchg
inc
push
add
inc
stc
mov
adc
mov
decl
fistpl
js
inc
outsl
loopne
jmp
xchg
test
mov
cmp
inc
mov
fisttpll
jmp
stos
push
inc
mov
repnz
test
pop
stos
clc
scas
adc
pop
inc
xor
cmpsl
aam
imul
loope
jp
iret
inc
gs
xchg
push
cmpsb
scas
jmp
or
addl
cmpsl
xchg
cmp
xor
dec
cmpsl
in
lcall
lds
mov
cmpsb
lock
mov
popa
sar
mov
xor
jg
mov
xchg
clc
repz
mov
subb
fwait
xchg
and
iret
int3
jbe
xor
int
add
aas
jno
mov
mov
pop
fs
dec
lea
aas
ret
shrl
pushl
mov
inc
sbb
lds
mov
insb
scas
add
aas
xor
jp
aad
mov
std
std
into
popa
test
ja
stos
in
das
dec
pop
loope
les
aas
call
inc
int
mov
addr16
push
mov
xchg
aas
and
loop
mov
jmp
jp
popa
push
pop
sarl
jl
mov
das
lea
mov
inc
inc
aas
jmp
ljmp
mov
inc
rcr
push
arpl
int3
and
call
cmpl
xor
lods
cmp
mov
cmp
std
xlat
cmp
mov
sbb
call
test
pop
mov
jne
ljmp
cmp
jno
shlb
out
dec
nop
pop
cmp
fisubl
xor
push
lcall
sub
dec
in
ss
push
scas
into
imul
faddp
jge
call
mov
pop
push
xchg
cmp
push
andl
dec
dec
gs
std
orl
pop
ficomps
push
test
frstor
rolb
or
addb
push
fmull
leave
outsl
inc
xlat
clc
nop
mov
inc
je
inc
inc
push
dec
filds
and
dec
dec
inc
push
dec
inc
aaa
xor
jg
mov
lds
inc
ss
pop
push
inc
dec
inc
jo
inc
popa
push
outsb
jbe
imul
aad
sub
outsl
jb
roll
mov
adc
imul
fistl
inc
push
mov
icebp
push
pop
add
pusha
dec
push
inc
dec
push
and
jo
jb
push
adcb
nop
inc
inc
inc
test
lea
dec
inc
gs
gs
cmp
xchg
inc
ds
arpl
xor
mov
dec
and
bound
outsl
push
dec
pop
mov
push
push
xchg
shll
xchg
out
xorb
mov
add
push
adc
das
add
das
push
fs
xor
das
cmpsl
add
xor
dec
arpl
xchg
dec
inc
dec
daa
hlt
out
fisttpl
imul
xor
inc
fdivs
jl
jg
inc
jns
dec
lahf
imul
push
push
les
push
cmp
and
jb
xchg
inc
inc
push
pop
fwait
or
or
insl
inc
and
sbb
and
dec
dec
lds
jae
or
dec
jbe
dec
test
push
mov
and
xchg
xchg
int
add
iret
and
dec
popa
jne
arpl
sbb
popf
je
dec
dec
pop
dec
add
or
push
bound
jmpw
mov
pop
adc
ja
inc
jbe
add
xlat
mov
cli
dec
sub
inc
rol
mov
shlb
sub
addr16
insl
push
add
pop
idivl
inc
ud2
xor
movsl
sbb
pushf
mov
or
outsl
push
jb
lds
rclb
sub
or
push
xlat
fstpl
add
push
clc
jp
lock
push
dec
adc
gs
inc
dec
push
jg
push
repnz
inc
mov
jp
push
inc
arpl
push
dec
dec
mov
push
cmpsl
pusha
test
sub
pop
jg
pop
insb
adc
xchg
lds
pop
pop
add
loopne
mov
data16
add
push
cmpsl
insl
add
push
outsl
ja
xor
pop
add
xor
ja
xor
insl
ja
scas
push
fadds
arpl
push
bound
mov
push
stc
lahf
push
add
xor
ja
mov
cmpsl
fsubrs
scas
test
dec
add
push
and
shll
leave
dec
or
mov
sub
inc
or
pop
adcl
sar
add
push
inc
lahf
mov
mov
adc
cmpsl
stos
inc
and
test
inc
xchg
dec
jge
xchg
sbb
js
lea
cwtl
xchg
jae
adc
push
shrb
adc
outsb
push
rorl
dec
push
pop
push
jne
les
outsl
mov
adc
sub
pop
movl
iret
inc
lea
ret
shlb
pop
les
push
outsb
sbb
push
addr16
xlat
insl
mov
jg
daa
adc
cmpsb
push
test
out
push
xor
call
rcl
mov
test
data16
inc
cmp
aaa
je
add
cmpb
jns
out
push
and
lahf
lcall
fistps
add
popa
push
out
mov
push
or
hlt
push
xor
xchg
fs
xor
fdivrl
jmp
xchg
sub
mov
sub
mov
sbb
dec
jno
repz
incl
test
ficompl
jmp
mov
hlt
movl
imul
std
in
dec
mov
add
insb
push
arpl
psubd
or
outsb
cmp
imul
pushl
mov
inc
aam
dec
std
test
movsl
cli
test
xor
leave
mov
add
stc
mov
xor
iret
or
cmp
fldenv
cmp
ficoms
push
xlat
enter
mov
and
mov
cltd
xchg
mov
cld
jmp
add
or
or
jg
mov
jl
das
adc
stos
sbb
data16
inc
fdivl
jno
add
call
aad
mov
mov
movsl
in
lahf
xor
mov
js
stc
jg
inc
test
xchg
sbb
push
sub
insb
fs
add
push
push
imul
insb
sbb
xor
dec
add
in
xchg
push
insb
jnp
add
shl
adcb
cmc
inc
fnstenv
adc
mov
mov
bound
ficoml
gs
aam
idiv
outsl
clc
pop
popa
mov
into
pop
cmp
mov
inc
movsl
fisttps
xchg
fadd
inc
shll
jmp
outsb
xor
mov
sarb
add
in
add
pop
decl
leave
jl
fnstsw
add
daa
adc
or
and
test
or
call
mov
popa
into
push
stc
ficomps
leave
fldcw
and
xlat
pop
cmp
mov
cmp
lcall
lods
insb
mov
in
mov
mov
add
inc
aad
scas
ja
popf
adc
fildl
push
fdivl
or
test
fs
ds
or
or
push
in
decl
xchg
daa
ljmp
pop
jge
xchg
shlb
add
inc
push
imul
xorb
aaa
std
ss
sbb
push
imul
aam
loopne
rorl
int3
dec
frstor
fistpll
stc
out
mov
pop
aad
mov
call
xchg
shll
push
repnz
addr16
jmp
mov
aas
dec
ss
fisubrl
or
scas
testb
pusha
jp
inc
ret
out
pusha
call
addr16
mov
jns
imul
andl
shrb
ss
push
xchg
ja
int3
incl
inc
or
das
es
lds
or
sub
mov
cmpsl
call
ret
pushl
iret
shlb
sbb
ret
es
pushf
mov
insl
add
jg
aas
ss
jmp
addr16
jb
push
hlt
orb
adc
mov
jnp
sbb
or
mov
xchg
or
out
fdivrl
fisttpl
aam
roll
clc
mov
push
jecxz
lcall
int
mov
mul
ja
outsl
ja
mov
out
cli
jo
ud0
cmp
incl
pop
or
adc
sahf
gs
clc
sar
imul
push
js
or
call
or
dec
ret
cmp
cmpsl
notl
pusha
rorb
imul
push
scas
fdivr
lcall
fldenv
filds
cmp
aaa
push
scas
mov
fidivrs
mov
jmp
repnz
inc
mov
push
cmpsb
mov
sarb
sub
push
mov
jp
mov
dec
cli
decl
les
sbb
xchg
sub
aaa
mov
or
sbb
sub
loopne
sbb
add
or
dec
sub
sub
push
push
mov
xchg
push
inc
jne
ds
mov
cmc
push
imul
insb
imul
xchg
pop
in
incl
fistps
jbe
push
jns
arpl
arpl
popf
mov
add
add
subb
inc
jne
xchg
sub
cli
outsl
insl
addr16
pop
lods
fldenv
fildl
jne
lods
xor
sbb
and
jmp
jns
aam
push
pop
dec
or
dec
inc
js
inc
insl
bound
xchg
out
mov
inc
xor
js
push
dec
and
dec
sbb
std
mov
pop
inc
cmp
pop
bound
xor
aaa
cmp
popa
arpl
cmp
arpl
mov
xor
xor
bound
notb
les
inc
jbe
pop
pop
adc
inc
icebp
xor
dec
mov
dec
inc
cmpsb
add
pusha
cmp
int3
push
push
cmpsb
into
inc
int3
dec
adc
dec
xor
jne
add
mov
sub
jbe
arpl
mov
pop
or
inc
aas
cmp
mov
mov
inc
rcpps
sbb
subb
aaa
aam
add
lcall
inc
lds
push
dec
insb
orb
cmp
lock
inc
inc
je
aaa
aas
rorb
aas
adcb
sub
push
and
jae
popf
int
or
inc
aas
stos
jp
mov
aaa
int
or
inc
sbb
xchg
sub
inc
pop
sbb
out
std
push
es
inc
inc
inc
add
ds
push
add
xor
mov
dec
push
dec
dec
lea
xchg
sbb
mov
cmp
inc
outsb
jne
adc
popa
mov
push
imul
add
add
outsl
fucomi
adc
arpl
add
addr16
pop
pop
push
push
pop
sti
push
pop
inc
cmp
push
mov
idivl
aaa
mov
push
mov
imul
add
add
call
sbb
sub
movsb
dec
xor
fsubrs
dec
aam
jmp
pop
and
push
xlat
mov
sbb
fists
push
inc
jb
addr16
test
inc
mov
add
sub
push
outsl
outsl
test
fisubrl
push
jno
inc
adc
xchg
mov
in
push
sbb
pop
in
nop
lods
mov
mov
add
inc
dec
js
push
cmp
mov
add
addr16
add
outsl
insb
jns
pop
shrl
dec
pop
push
pusha
push
popa
jb
testb
nop
adc
inc
mov
jo
inc
push
bound
dec
mov
mov
aad
push
aaa
jo
dec
pop
ja
jae
mov
popf
xor
adc
pusha
add
and
push
sub
xchg
mov
and
popa
add
stc
pop
adcb
imul
xor
testb
jbe
add
jns
push
sub
scas
xchg
inc
push
test
push
sbb
push
jg
and
cmc
aaa
adc
aam
aaa
push
roll
jnp
loop
aaa
push
outsb
ffree
pop
add
inc
add
daa
aas
pop
mov
and
xor
adc
jo
push
sbbl
test
shrl
dec
pop
nop
mov
sub
repnz
stos
clc
or
pop
mov
int
mov
mov
adc
jo
xchg
add
add
test
outsl
je
sbbb
jb
testb
dec
push
and
cs
xchg
jno
jmp
sub
pop
lea
stc
repnz
mov
out
ud0
iret
mov
repnz
in
push
pusha
ljmp
lret
sar
xchg
cli
push
cld
push
imul
push
daa
push
inc
es
add
dec
mov
std
and
add
or
or
insb
daa
aam
pop
mov
cmp
adc
adc
add
and
add
mov
fcompp
add
sbb
add
and
mov
xor
push
test
mov
push
mov
or
mov
sub
push
loop
insb
adc
inc
push
pusha
push
add
pop
add
iret
add
test
fiadds
lods
add
shlb
jb,pn
lcall
xor
in
lret
cs
mov
fs
dec
or
xor
sahf
jae
arpl
xlat
out
test
lahf
jb
iret
repz
or
sbb
adc
jo
inc
xlat
push
nop
icebp
add
add
inc
adc
jmp
fs
outsb
add
gs
loop
or
rorb
push
mov
movups
or
dec
xor
dec
jne
pop
sbb
js
dec
xchg
in
dec
mov
ret
sbb
dec
or
jbe
ret
mov
xor
push
push
out
xor
mov
dec
mov
call
dec
out
filds
ja
jne
jmp
mov
dec
mov
leave
mov
or
call
ss
test
popf
push
pop
lret
int3
loope
mov
inc
jnp
sqrtps
outsb
xor
mov
sub
pop
pushf
jbe
es
hlt
jl
fmull
dec
test
xchg
add
add
pop
es
shrb
push
sti
mov
push
mov
imul
pop
cmp
rcll
sbb
mov
dec
sbb
call
nop
fadds
inc
ret
cli
std
call
movsl
mov
fcompl
adc
jbe
mov
repz
pop
test
call
add
xchg
add
inc
nop
add
sub
pop
mov
movsl
sub
dec
fwait
adcb
loopne
mov
xor
push
movsb
jnp
movsl
mov
loopne
stos
mov
and
sbbb
push
add
test
xchg
sub
sbb
pop
pushf
and
aad
or
mov
es
jne
push
inc
imul
add
cmpsb
push
lods
repz
out
push
mov
sub
rcl
bound
inc
or
in
inc
dec
and
mov
push
rcl
or
inc
adc
popa
and
int3
cmpsb
loopne
rolb
sub
loopne
mov
movsl
jle
mov
fidivrl
cld
add
inc
mov
add
imul
or
xchg
mov
push
push
push
dec
jnp
cmp
push
or
mov
cmp
stc
leave
push
adc
sbb
add
sbb
dec
or
ret
xchg
ficoms
push
mov
cmpsl
movnti
rorb
mov
sahf
jp
dec
pop
push
jno
or
ret
jg
leave
test
rorb
stos
stos
pop
cltd
test
pop
mov
and
sub
and
and
xor
sub
cmp
add
test
addb
pop
dec
mov
push
aam
je
inc
test
jb
jbe
movb
dec
adc
add
push
mov
or
aam
lea
into
out
or
lds
lret
mov
pop
jmp
mov
push
arpl
xor
mov
in
mov
je
rcr
dec
rcrl
in
add
daa
leave
cmp
and
or
or
adc
add
shrb
repnz
xchg
and
ljmp
jno
mov
movsl
mulb
mov
pop
mov
and
dec
jge
in
push
fwait
and
or
jae
aas
jb
fnstenv
adc
xchg
popf
pop
fistl
and
or
xchg
rolb
les
push
sbb
dec
call
push
push
ror
imul
dec
inc
cmc
lahf
xchg
addb
aam
sub
xchg
sub
sbb
fcoml
xor
jmp
or
shr
push
add
jl
mov
stos
lcall
or
stc
rcrb
push
push
clts
xchg
lea
pop
jbe
not
mov
jp
push
or
inc
loopne
les
lock
mov
gs
cltd
inc
pop
jl
sbb
test
ja
inc
push
push
push
pop
rolb
ja
xchg
and
roll
push
jnp
xchg
xchg
mov
sbb
popa
jl
sbbl
std
imul
call
cmp
add
and
pop
push
fwait
pop
add
mov
add
pop
xchg
and
fildl
sti
scas
add
rclb
adc
lret
pop
inc
adc
pop
sub
push
xchg
call
clc
icebp
xchg
mov
clc
and
ds
pop
push
jle
pop
push
call
mov
in
push
push
sub
cmp
xchg
lea
xchg
or
ret
into
lret
and
test
xchg
cld
nop
jl
rorl
ss
hlt
jmp
sbb
cmpsl
imul
out
or
inc
lock
insb
dec
call
mov
rorl
sub
rorb
or
lods
mov
add
or
jl
insb
ja
pop
mov
xchg
xchg
mov
mov
fsubp
jl
dec
call
iret
and
dec
push
inc
cmpsb
push
dec
or
shrl
add
mov
push
fs
sbb
sbb
mov
outsb
dec
sbb
cs
sahf
or
in
shl
or
cmp
xchg
push
mov
push
xor
icebp
inc
psllq
sbb
ret
xchg
ret
iret
mov
lea
jge
or
add
ret
sub
or
outsl
xorb
jmp
loopne
mov
dec
loop
mov
xor
inc
daa
fs
adc
fildl
sub
ret
aas
cmp
fiaddl
sub
sti
mov
pop
lds
and
push
pop
lahf
jecxz
push
mov
or
gs
les
popa
mov
push
shrb
jmp
bound
xchg
or
fcoml
push
push
cltd
dec
sub
xchg
cld
push
jns
test
lds
mov
xchg
or
data16
fadds
pop
or
sbb
lret
push
ret
mov
aam
push
or
mov
lcall
repz
jne
xor
xchg
sbb
push
sbb
subl
addr16
loop
add
clc
xchg
push
and
cltd
inc
stos
mov
pop
push
push
push
dec
fdiv
rol
jns
xchg
sbb
rorb
out
xor
push
inc
adcl
pop
mov
insl
popa
hlt
mov
in
sub
pop
insb
mov
into
idivl
mov
adc
xchg
push
xor
add
test
dec
add
fcompl
jb
call
test
test
sub
sti
cmpsl
cmc
je
cmp
cmp
xchg
test
in
cmp
push
lea
adc
inc
jbe
fnstenv
xor
sarb
leave
or
mov
mov
loopne
sub
daa
shlb
lods
jmp
fidivrl
push
fsubl
fiadds
out
out
call
neg
iret
inc
mov
jb
out
popf
pmuludq
xor
fdivr
mov
pop
loop
ret
or
sub
xor
fdiv
dec
sar
mov
jecxz
pop
add
inc
outsb
mov
push
pop
dec
mov
loop
jo
xchg
lea
xor
call
or
mov
int3
or
std
xchg
mov
mov
movsl
mov
and
or
mov
mov
rcrb
fsubrl
lea
nop
pop
enter
clc
outsb
ret
in
add
cmpsb
add
movsb
push
jo
aas
dec
dec
xor
fldl
cmp
je
fisttpll
sub
nop
aas
mov
aaa
fdivs
bound
adc
rcl
aas
cmp
sbb
lea
jne
xor
dec
jno
cmpsl
mov
mov
lahf
xchg
pop
pop
mov
inc
aas
pushf
shlb
shl
xchg
enter
pop
add
sbb
add
or
dec
je
ljmp
ljmp
mov
popa
sbb
xor
xor
push
and
mull
sbb
je
mov
subb
sbb
mov
mov
insb
inc
sbb
nop
or
jp
leave
aaa
push
xor
repnz
jb
adc
xchg
pushf
stos
adcl
imul
rcrl
push
mov
lret
adc
fxch
mov
push
loopne
dec
aad
pop
push
inc
xlat
popa
dec
push
sbb
repnz
js
mov
fwait
sahf
ret
std
sub
pop
sarl
enter
push
adc
pop
dec
add
push
or
add
and
scas
dec
adc
call
cwtl
push
addb
push
xchg
pushf
add
and
cmp
jle
mov
and
jmp
adc
jp
cs
dec
pushl
push
sub
loopne
cmovbe
dec
in
in
push
add
xchg
mov
push
and
pop
pushf
pop
cs
cmp
inc
xlat
or
mov
pop
dec
sub
xchg
cltd
mov
or
jge
cmp
or
nop
dec
in
addl
mov
push
pushf
lret
enter
pop
xor
ret
test
insb
cmp
adc
leave
sub
sub
xlat
ds
orb
xor
into
xchg
lods
inc
rcr
in
sbb
xor
mov
mov
pop
mov
cmp
movl
or
je
inc
mov
mov
mov
cmp
pop
mov
jno
jne
je
in
xchg
in
in
in
insl
sbb
jns
pop
sarl
jge
adc
popa
sbb
mov
aad
cmp
push
lds
ljmp
imul
es
cmpsl
int3
pop
mov
adc
push
fists
seto
adc
jmp
adc
mov
aaa
inc
sbb
jne
lods
lods
sub
outsb
push
push
cmp
fimuls
sbb
push
jbe
aad
add
sbb
push
ds
int3
add
mov
jne
dec
int3
mov
xor
popa
xchg
cmpsb
adc
jmp
xor
push
mov
inc
faddl
push
aam
enter
add
inc
mov
inc
sahf
les
fs
jae
out
test
aad
mov
lods
dec
xlat
push
push
mov
jecxz
cmp
sub
push
jg
add
dec
lea
jb
xchg
mov
inc
in
insb
pop
jns
dec
adc
or
and
add
cmp
cmp
mov
add
jne
jl
sbb
or
push
mov
mov
jne
cld
jb
add
and
sbb
add
ss
mov
sub
sahf
in
jne
xor
sub
mov
ret
jns
or
sbb
add
push
icebp
or
gs
jmp
xchg
lcall
aaa
push
add
add
out
enter
rorb
frstor
mov
clc
mov
clc
dec
jp
xor
mov
into
mov
pop
inc
inc
mov
inc
or
xchg
sbb
pop
sub
mov
xchg
popa
inc
lock
add
pop
and
je
or
sbb
pop
je
mov
adcb
leave
ret
cmp
adc
or
loopne
inc
xor
xor
orl
ret
mov
fimull
sbb
push
jmp
mov
fs
push
ret
jp
call
xor
xchg
push
shl
sbb
sbb
pop
in
sahf
push
cld
lcall
add
jmp
rcrl
cld
adc
ja
sbbl
mov
lds
push
lock
pop
mov
sbb
mov
les
mov
hlt
lods
jbe
inc
pop
and
inc
pop
aas
addl
nop
push
ret
rcl
fiadds
xor
inc
cmpb
or
outsl
popf
fldenv
and
outsl
lock
push
loopne
ja
cmc
push
orl
push
xchg
adcb
push
add
add
in
ret
xor
adc
dec
insl
je
sub
xor
ja
mov
or
or
shr
pushl
and
out
cmp
xor
stos
std
std
in
scas
test
push
xor
inc
inc
cld
cmp
mov
inc
sarl
cmp
call
fiaddl
mov
jns
inc
aas
jmp
mov
dec
xor
sub
testb
pop
dec
inc
sub
dec
mov
adc
pop
push
jno
and
pop
dec
cli
add
adc
std
adc
xchg
sarb
iret
or
clc
sbb
mov
or
mov
jne
addl
dec
add
mov
and
and
and
add
imul
push
sarb
dec
sbb
fcoms
jae
subl
push
pop
sbb
loopne
jmp
mov
add
orb
jmp
insl
test
fcmovnb
push
xor
mov
adc
or
shll
loopne
aam
rorl
jnp
push
dec
push
adcb
std
add
pop
xchg
adc
cmp
scas
pop
cmp
push
orl
test
nop
or
mov
sub
jmp
xor
jecxz
push
mov
push
dec
pushf
cmpsl
fld1
cmp
loope
jo
pop
sub
inc
jbe
dec
adc
aad
xor
cmpsl
imul
sbb
lret
dec
xchg
xchg
sarb
add
clc
push
or
enter
imul
test
in
std
jmp
fsubl
insb
and
xor
add
in
push
es
movsb
or
jle
fidivs
push
mov
cmp
rcrb
push
sarb
int3
sbbl
aam
mov
shl
or
inc
xor
cmp
and
push
movsb
pop
sub
push
mov
popa
rorb
sbb
or
add
in
test
push
mov
ret
xchg
sbb
pushf
fidivl
jl
pop
repnz
push
mov
lock
jne
mov
jmp
or
xor
dec
rorb
or
or
xor
lahf
dec
sbb
or
rcl
or
add
je
mov
and
add
adcl
and
sbb
sub
inc
inc
push
add
call
jmp
sbb
xchg
mov
call
cmpsl
xchg
std
aaa
dec
test
shll
ss
add
mov
ljmp
mov
test
hlt
push
cmp
mov
mov
or
mov
mov
aam
push
mov
lea
push
adc
adc
ret
xor
div
or
push
fucomip
cmp
je
cmp
sub
lods
jbe
movsb
xchg
jne
stos
adcb
pop
dec
and
nop
clc
push
and
std
loope
fimull
rcll
xor
sbb
add
adc
in
rcr
pop
xlat
xchg
or
pushf
shll
cli
adc
pop
loopne
mov
movsb
jae
pop
pushf
int
and
loop
test
incb
mov
ret
shr
je
imul
sbb
sbb
fsubrl
ret
mov
mov
test
sub
mov
mov
rorl
xchg
mov
push
cld
out
push
or
jbe
jbe
fwait
jmp
dec
clc
or
mov
outsl
shr
fsubr
jo
push
sbb
or
cltd
adc
pop
mov
into
call
xor
mov
or
pop
inc
adc
pop
add
jbe
roll
sti
fs
pop
push
je
sub
ljmp
test
cs
stos
mov
int3
loop
or
movsb
movsb
test
shlb
js
pop
push
lea
mov
pop
xorb
push
xchg
aam
inc
jne
jne
data16
push
jno
ficoms
and
xchg
mov
mov
jno
into
inc
cmp
cwtl
popa
fsubrl
call
aas
subl
out
ret
sub
faddl
inc
arpl
push
push
xchg
fadd
inc
cmp
xor
fwait
jae
js
imul
loopne
rol
mov
loope
dec
shll
dec
add
or
push
push
add
or
push
jns
insl
jmp
mov
jns
adc
imul
mulb
mov
jmp
ficoms
xchg
fs
xchg
jmp
or
mov
pop
lock
lock
dec
push
hlt
push
in
fwait
add
push
adc
mov
sbb
adc
jne
clc
and
adc
nop
push
sbb
adc
mov
orl
adc
and
add
ficoml
push
sub
xchg
mov
testb
orb
rorb
add
rorb
dec
jbe
push
pop
jnp
lods
mov
call
movsb
call
lea
test
sbb
mov
or
add
or
pop
addr16
roll
pop
sbb
sbb
ret
cmp
cld
jne
into
cmp
mov
addr16
ss
cmp
push
in
dec
js
es
pop
test
and
iret
leave
je
int3
jecxz
decb
or
jns
outsl
cmp
mov
xorl
jmp
nop
xor
and
jl
push
sahf
jae
xchg
add
ret
sarl
jno
cmp
icebp
call
out
test
mov
je
subl
inc
jmp
mov
setb
push
fucomip
xor
clc
cmp
lcall
nop
fs
call
aad
dec
cmp
outsl
jne
push
cmpsb
test
enter
xor
xor
fxtract
jg
rcrb
insb
pop
xorb
pop
xlat
jmp
outsb
mov
imul
aam
pusha
movl
push
jecxz
xor
adc
add
addl
fdivrp
xlat
jnp
jne
add
push
call
in
cmp
in
movsb
jmp
js
sbb
lret
dec
je
and
insb
sub
mov
sbbl
addr16
cmp
jbe
lock
icebp
mov
or
and
or
clc
je
push
stc
sub
rcrb
out
lock
push
fcoms
push
sbb
arpl
jo
or
mov
pop
cwtl
or
popf
pushf
or
cmp
push
daa
cld
test
rcrl
outsl
test
stos
push
inc
rcrb
lock
inc
mov
std
and
inc
mov
xchg
mov
lock
push
adc
jne
lea
pop
popf
shrb
call
xor
insl
xchg
test
aas
mov
icebp
mov
fsubs
or
xchg
nop
push
in
pop
icebp
xchg
or
mov
cmp
fadds
dec
jne
movzbl
add
or
xor
movsb
nop
xchg
jno
sbb
lods
test
jbe
jge
push
sbb
xchg
lea
fstl
push
nop
sbb
xchg
xchg
subb
movsb
add
mov
insb
jmp
mov
add
and
adc
cli
sub
pop
cmp
test
xor
or
and
ja
jg
rolb
inc
adc
inc
xor
or
pop
rorb
and
xorb
inc
ss
out
add
imul
in
cltd
call
inc
loopne
xor
xchg
and
sub
in
and
push
loope
mov
call
dec
and
add
fsubrl
dec
aam
movb
scas
dec
mov
stos
inc
je
or
cmp
mov
push
sarb
dec
mov
je
inc
mov
imulb
mov
add
or
xchg
aas
mov
loope
add
xchg
cmpsb
add
inc
xchg
sub
add
add
push
add
push
add
add
cmp
inc
push
add
xorb
push
add
xor
xchg
out
xor
push
orb
xchg
pushf
jno
and
mov
add
xchg
add
add
sub
call
addl
jecxz
xchg
and
call
dec
dec
addl
xchg
or
and
mov
push
pop
inc
cmp
rclb
cmp
xchg
mov
movsb
inc
pop
popa
pop
cmp
xchg
pusha
inc
nop
dec
xor
inc
dec
inc
icebp
sbb
cli
or
push
sahf
and
jp
jle
into
ds
mov
callw
pop
call
xor
jmp
cmp
fwait
out
pop
movsl
dec
aam
inc
adc
cmp
es
dec
pop
js
roll
pop
int3
pop
fs
mov
sbb
jmp
xchg
popa
mov
pop
cmp
mov
movzbl
mov
sti
bound
psubsb
add
call
jno
scas
pop
jmp
into
arpl
cld
and
pushl
cmp
jmp
pop
shrb
sbb
or
xor
add
mov
xor
jae
jle
loopne
pop
push
into
cmp
insl
push
xor
fimull
jmp
sub
je
push
lahf
inc
jmp
pop
push
mov
and
jo
mov
push
test
mov
xchg
sbb
out
xor
sbb
subl
leave
test
sahf
xchg
pusha
enter
rcrl
mov
and
or
pop
out
cmp
pop
and
call
dec
jmp
shlb
sub
cmp
and
xchg
push
push
es
fnsave
dec
lods
cmpsb
add
movsl
push
and
cld
aad
es
into
in
ja
inc
mov
je
lcall
sbb
xor
es
mov
pop
adc
movb
loop
push
outsb
iret
dec
push
cwtl
clc
add
push
or
in
pusha
sub
loope
pop
xor
rclb
xchg
sbb
adc
js
sbb
and
int3
xor
jbe
push
pop
nop
xor
imull
push
jae
sub
enter
sub
jp
mov
adc
cmp
cmp
push
xchg
mov
push
outsl
pop
aaa
pop
lds
decl
adc
lods
movsl
adc
ret
add
cwtl
nop
push
mov
push
cmpsl
inc
je
popa
inc
cmpsl
push
push
in
push
adc
sarb
add
cmpsl
loope
ret
call
dec
call
dec
mov
aaa
and
les
pop
in
test
cmpsl
das
push
xor
sub
dec
cmpsl
sub
dec
cmpsb
ss
or
cmp
sub
lret
iret
adc
call
jl
jmp
add
shlb
imul
push
das
or
push
inc
dec
fldcw
daa
inc
cs
pusha
idivl
shlb
sbb
je
or
jmp
daa
add
add
mov
sub
sub
je
out
sbb
or
popa
add
daa
cmp
imul
jmp
xor
mov
adc
adc
or
daa
inc
daa
xchg
jnp
pop
nop
add
and
dec
and
mov
outsb
add
daa
push
ja
inc
add
mov
or
iret
repz
ror
and
imul
or
push
adc
add
sub
or
add
add
call
adc
lahf
dec
shrb
adc
dec
dec
in
adc
adc
adc
mov
sbb
lahf
insb
and
sar
pushf
push
pop
jmp
outsb
or
xor
xor
xor
sub
mov
lahf
ret
lea
mov
adc
add
pop
add
and
add
add
or
ret
lret
add
in
sahf
divl
je
xchg
add
mov
add
cmp
push
jb
push
gs
pop
xchg
out
addl
sub
or
or
and
add
or
shll
fisttpll
or
pop
lcall
or
inc
scas
in
or
or
in
je
push
or
sbb
lods
xor
xor
adc
pop
adc
or
adc
jns
adc
int
das
nop
xchg
push
adc
ja
adc
xchg
adc
xchg
sub
sbb
in
sahf
push
push
inc
pop
rcrb
pop
and
sbb
and
sti
mov
xchg
cmp
fcompl
sbb
jb
mov
dec
in
lcall
sbb
sbb
jns
jo
xor
cmp
xchg
cmp
pop
push
push
add
xchg
inc
negb
pop
push
fcom
pushl
add
add
sub
clc
add
incb
mov
movl
xchg
cmpb
jmp
cwtl
ss
xchg
push
in
push
in
imul
cmp
rol
adc
in
jns
in
in
out
sub
jns
mov
imul
call
addl
push
repnz
mov
cmp
cmp
cmp
push
jmp
xchg
mov
push
aad
imul
xchg
in
fsubp
aad
in
cmp
mov
mov
xchg
out
int
add
or
je
lock
dec
icebp
cmp
mov
das
jnp
inc
sahf
xchg
stos
or
test
hlt
hlt
imul
pop
hlt
xchg
std
cmc
cmc
cmp
cmpsl
div
pop
enter
negl
gs
clc
clc
clc
or
aas
stc
stc
and
xchg
cmp
cli
cli
add
iret
sti
sti
fdivrp
cld
mov
je
cld
push
push
nop
shlb
out
leave
jnp
std
xor
sbb
decb
fsts
and
add
jmp
pop
sub
jb
mov
shll
push
dec
inc
stos
mov
or
jecxz
jecxz
in
xor
xchg
xor
ficoml
dec
push
cmpl
cmpsb
loopne
adc
inc
or
out
lea
xchg
scas
call
pop
sti
adc
dec
adc
push
sbb
setb
push
cltd
or
jmp
and
mov
lcall
jns
xor
cltd
and
cli
or
jae
repz
sbb
sbbb
cli
stc
loopne
repnz
stc
imul
stc
div
divl
xchg
xchg
clc
cltd
sub
nop
mov
rclb
sbb
mov
xchg
or
cmp
mov
in
jmp
mov
jb
test
out
test
push
pop
aad
xabort
jmp
mov
lcall
jns
xor
pushf
and
and
aad
imul
xchg
in
aad
fdiv
out
mov
sbbl
jb
imul
ljmp
push
jmp
testl
testl
mov
into
mul
sub
nop
mov
movsb
mov
repnz
and
repnz
inc
repz
setb
sub
or
lcall
div
mov
add
mov
clc
clc
xor
pop
cmp
push
pop
pop
cmc
cli
cli
inc
mov
mov
pop
repnz
cmc
cli
hlt
sub
inc
repz
pop
lock
push
jo
adc
mov
add
sti
push
movsl
jmp
loope
repnz
loop
pop
hlt
shll
or
cmp
hlt
in
add
repz
leave
and
repz
xchg
cmpsb
jb
or
and
repz
inc
xlat
dec
repz
out
inc
or
in
xor
in
xlat
repnz
repnz
cmp
test
cmp
icebp
mov
icebp
das
xchg
pop
jns
sbb
adc
repnz
repnz
dec
xor
mov
icebp
test
cmp
leave
sub
int
jne
stc
mov
dec
icebp
xor
jb
icebp
or
out
lock
mov
cmp
scas
lock
jp
jmp
fidivl
jo
out
push
sub
ffreep
push
inc
insb
scas
div
push
loope
inc
cmp
cmp
inc
add
mov
adc
mov
jne
ret
mov
jb
jne
stc
xor
dec
icebp
dec
add
movsb
xchg
dec
movb
notl
jmp
insb
dec
mov
stos
int3
dec
push
nop
push
jns
adc
int
imul
add
insb
adcl
push
cmpsl
fldcw
push
repz
mov
jns
pop
insb
sbb
push
push
aad
in
sahf
negl
push
dec
outsb
or
dec
cmp
faddp
movb
inc
xor
jl
mov
lret
xor
and
lea
inc
cmp
bound
lods
shll
lret
push
ret
ficompl
pop
or
push
jae
push
mov
push
or
xchg
daa
and
or
jmp
xor
out
fists
push
subb
jecxz
pop
jmp
pop
xor
sbb
adc
push
xor
ret
cmp
inc
jecxz
push
imull
sbb
mov
xlat
mov
mov
mov
pusha
mov
daa
jl
call
test
hlt
ret
xchg
or
js
pop
jmp
mov
pop
add
dec
dec
pop
push
push
fsubl
call
nop
adc
dec
sbb
xor
pop
insl
adc
adc
adc
xchg
xor
cwtl
cwtl
sub
insb
xor
xor
lret
mov
cltd
xchg
sbb
movsl
mov
cli
adc
dec
xor
loopne
cmpsb
das
pop
xor
stos
adc
push
ss
cmp
sbb
adc
jp
jmp
ret
mov
sub
jmp
movsl
sbbl
and
and
cwtl
add
shr
add
pop
and
mov
add
inc
add
add
es
xchg
pop
xchg
push
inc
sbb
inc
jb
js
push
xorb
jo
rcrb
rcrb
xchg
and
orl
push
or
adc
adc
mov
icebp
cltd
sbb
rorb
icebp
inc
adc
mov
push
icebp
inc
dec
pop
inc
hlt
and
icebp
inc
pusha
push
stos
adc
add
and
and
jo
icebp
rolb
or
push
inc
aaa
vpaddd
fwait
lds
rcr
xor
je
adc
jp
xor
add
lods
outsl
push
stos
push
ja,pn
push
mov
outsl
sbb
sbb
pushf
inc
movb
adc
pop
push
jg
daa
xorb
je
cmp
loop
shl
adc
sub
sti
iret
shlb
and
jno
push
cltd
inc
push
loopne
mov
rorb
and
sbb
jb
or
and
les
cs
cmp
int
pop
add
mov
cmpsb
fwait
xchg
jmp
mov
adc
sub
inc
cmc
outsl
loopne
movsb
sbb
cmc
out
cmpsb
mov
ss
mov
push
xorb
or
adc
pop
cmc
out
pusha
nop
or
inc
cmc
aam
adc
cmpsb
mov
pushf
dec
nop
into
pop
and
nop
dec
nop
outsb
stos
cmc
imul
inc
jb
jb
hlt
cmp
sub
loopne
jb
sbb
xor
and
out
xchg
add
cmc
repz
or
mov
or
pop
push
pop
andb
nop
rclb
pop
or
imul
push
je
inc
rcll
xor
dec
xchg
adc
xchg
dec
in
jmp
mov
icebp
push
call
sub
dec
adc
cmc
nop
das
inc
cmp
hlt
push
stc
in
dec
ficompl
cmc
lods
or
and
cs
jp
cmc
dec
nop
sahf
les
push
mov
xor
cmp
nop
out
mov
data16
dec
cmc
std
push
pop
shll
or
imul
cmc
pop
add
shrb
test
popf
add
rcl
and
int
xchg
xorl
je
pop
dec
mov
pop
repz
scas
test
inc
repz
rolb
dec
pop
aam
xchg
and
popf
dec
aaa
leave
in
lock
cmp
hlt
jo
push
sub
jno
xor
jl
loopne
data16
data16
pop
xorb
and
or
repz
sub
iret
dec
lea
iret
repz
stos
or
cmp
imul
popa
aas
ss
ret
movsb
loope
xor
and
fs
push
pop
or
aad
add
jns
add
adc
jmp
adc
nop
outsb
cwtl
jns
sbb
mov
int3
es
mov
jns
into
dec
jns
ljmp
popa
xor
push
or
dec
xor
jb
dec
sbb
jns
mov
push
movsb
mov
ss
cmp
movsb
repz
imul
xchg
cs
xor
and
and
mov
pop
and
loop
jne
inc
adc
adcb
rorb
repz
aaa
mov
int3
xchg
xor
loop
mov
xor
push
loope
cmpsb
mov
rcl
loopne
loopne
mov
aaa
or
mov
rclb
inc
fisttpll
adc
pop
push
lock
je
and
call
mov
hlt
ljmp
call
call
add
rcr
xor
cmp
cmp
sarb
je
jb
dec
jl
pop
dec
mov
pop
insb
in
loope
mov
and
lods
out
cmpsb
mov
dec
inc
aaa
mov
aam
sbb
cmpsb
mov
test
pop
pop
fisttpll
mov
mov
cmpsb
mov
mov
pop
add
xor
mov
inc
insb
mov
mov
or
fs
jp
aaa
mov
xor
cmpsl
outsb
mov
loopne
in
push
fmull
enter
fs
and
sbb
subb
mov
xor
sbb
les
imul
out
or
adc
test
mov
jg
je
mov
adc
rcr
je
outsl
sarl
orb
mov
adc
inc
scas
jno
sbb
and
jnp
sbb
je
mov
xorl
insl
pop
dec
adcl
rorl
icebp
fcoms
xor
push
roll
imul
inc
mov
jne
sar
or
dec
add
inc
aaa
cmp
loopne
mov
andl
ficompl
ljmp
ja
subb
daa
pop
jmp
jbe
insb
movsl
pop
movsl
test
into
jmpw
imul
fwait
xchg
ret
pop
xchg
movsl
xlat
mov
mov
pushf
push
cmc
adcl
and
mov
rorb
mov
fwait
xchg
movb
sub
and
aam
mov
cs
cwtl
xchg
subb
xchg
imul
das
sbb
mov
xchg
addb
and
sbb
sbb
mov
mov
movsl
jnp
cmp
aam
inc
jns
ffree
dec
addl
subl
inc
aaa
fldl
or
fwait
xchg
aaa
sub
mov
and
or
pop
loope
cmpsb
and
test
sbb
lock
je
add
insb
sbb
pop
dec
or
enter
push
mov
adc
xor
add
sar
push
stos
in
mov
inc
ja
orl
or
stos
ja
rolb
fwait
xchg
adcl
int
and
mov
fidivs
pop
aad
fnsave
pop
imul
or
in
out
cmpsb
xorl
jmp
sub
pop
inc
adc
sti
lret
sahf
out
mov
adc
pop
add
or
jg
cmp
add
mov
in
nop
inc
loop
adcl
jae
cmpl
arpl
push
idivl
iret
out
xor
inc
push
rclb
rolb
je
jno
roll
mov
outsl
sbb
clc
js
sbb
stos
addl
inc
ljmp
dec
cmpl
out
faddl
rcll
mov
andl
mov
mov
pop
sub
mov
and
inc
jmp
cmpsb
adc
cmpsb
adcl
xchg
mov
adc
push
xchg
mov
cli
lea
daa
adc
hlt
xchg
cmp
push
ds
into
icebp
leave
jmp
xor
imul
sub
inc
daa
mov
in
icebp
mov
mov
ret
push
in
pop
xchg
dec
inc
je
mov
or
inc
out
push
mov
es
pop
dec
push
js
mov
ret
sub
lret
mov
mov
push
sub
clc
xchg
cmp
jbe
ss
sbb
in
pop
push
pop
roll
jb
pop
popf
add
dec
lahf
test
jbe
aad
xor
ja
mov
ja
addr16
rolb
sub
xchg
xchg
inc
pop
sbbb
pop
adc
and
faddp
push
mov
pop
gs
orl
inc
jnp
add
leave
lret
xlat
jae
mov
or
or
call
pop
xor
out
adc
mov
call
faddl
js
dec
mov
pushf
or
insb
or
pusha
jmp
movsb
mov
pop
mov
repnz
push
and
repz
stc
sti
xchg
movsb
mov
mov
rorb
ja
mov
add
cmp
push
sbb
push
mov
test
sbb
fdiv
loop
arpl
das
aam
xchg
ljmp
jns
dec
mov
xchg
inc
cmp
inc
dec
call
mov
leave
ret
cmp
and
or
js
rcll
movsl
pop
mov
rolb
jl
clc
rolb
aam
in
cli
stc
mov
adc
sbb
mov
shlb
xchg
scas
mov
xlat
dec
nop
aam
mov
fs
pop
jne
mov
xchg
add
add
adc
add
pusha
jmp
mov
rcll
lock
clc
fadds
hlt
out
or
stos
add
shrb
adc
mov
xor
adc
xor
popf
dec
lcall
in
imul
or
mov
xchg
dec
sub
push
sbb
call
adcl
ja
mov
jge
jbe
fimuls
xor
aad
mov
repz
inc
mov
mov
cwtl
rcr
jge
push
shll
inc
sub
xor
push
inc
xchg
ret
and
cmc
add
mov
pop
push
inc
rolb
inc
sarb
dec
inc
pop
loopne
popa
out
fistl
inc
sub
add
or
push
rorb
neg
inc
mov
sbb
inc
and
dec
mov
or
mov
inc
loopne
add
push
dec
fadds
dec
daa
loopne
imul
xor
push
and
rol
mov
idivl
clc
cs
call
sbb
xchg
fnstenv
inc
arpl
adc
push
jo
mov
push
sub
es
xchg
nop
add
jne
and
xchg
jne
push
pop
loopne
and
inc
pusha
mov
jo
rorb
jne
frstor
pop
jne
aaa
or
dec
enter
call
in
jne
jne
or
fwait
test
adc
and
cwtl
nop
fs
adc
pop
jmp
and
mov
or
xorl
cmp
shll
push
subl
push
test
jno
shlb
mov
pop
adc
xchg
mov
outsb
jae
lea
adc
push
cmp
adc
add
movsb
mov
add
fwait
stc
dec
daa
mov
add
incl
jl
je
push
xor
add
daa
and
call
cmp
lahf
sub
mov
aam
ljmp
pop
mov
cmp
adcl
jp
jmp
pusha
addl
pop
or
rcll
push
cmp
xor
inc
sub
repz
loopne
xchg
sub
adc
add
arpl
loopne
push
pushf
es
adc
push
out
add
push
movsb
lods
sub
ljmp
clc
add
add
dec
inc
pop
adc
ret
and
cs
mov
nop
inc
test
add
and
cmp
pop
xor
and
mov
xor
push
inc
call
inc
pushf
inc
pop
inc
lods
insl
push
jmp
sub
rcr
add
shlb
sti
inc
aaa
cmpsl
or
or
jne
cmpl
dec
fcmovnbe
int3
sub
add
cmp
inc
mov
repz
jmp
xor
push
and
mov
inc
adc
xlat
xchg
int3
inc
jmp
inc
inc
inc
pop
je
test
test
es
add
mov
mov
and
inc
xlat
push
in
ret
pusha
xchg
mov
or
add
pop
das
or
mov
xorb
cmpsb
lcall
lock
cmp
and
cmp
leave
or
push
mov
ss
inc
add
sarb
jmp
add
xchg
jno
arpl
jmp
sbb
sub
sub
xor
dec
sbb
cmp
aas
dec
mov
sbb
int3
add
mov
fldl
push
mov
mov
mov
or
lock
mov
mov
dec
adc
test
mov
pop
add
inc
fwait
cmp
shl
addps
pop
rorl
sbb
ficomps
negl
jge
push
push
or
inc
cmp
je
cwtl
mov
jns
xor
and
les
outsb
cld
jmp
cmp
xor
or
push
adc
push
add
ret
push
sar
inc
push
xchg
mov
adcl
xchg
insl
cmp
shlb
hlt
dec
sub
arpl
sbb
inc
adc
sub
or
mov
pop
sarl
nop
mov
mov
dec
aaa
inc
xchg
scas
sbb
xor
pop
and
push
xor
xor
inc
pop
pop
or
and
test
stos
or
sbb
shl
add
dec
jecxz
xchg
mov
cwtl
add
sahf
lods
ret
adc
in
push
or
call
call
out
shlb
dec
out
or
popl
push
lcall
movsb
lock
imul
xor
add
imul
fs
cmp
popf
xor
pusha
mov
sub
mov
cmp
les
movsb
mov
push
imul
push
mov
dec
addr16
cmovo
neg
sub
cmc
fists
add
and
in
xchg
xchg
les
sbb
cmp
mov
test
testl
cmp
daa
add
inc
xorl
je
jae
int3
pop
xchg
push
jmp
sbb
notl
add
jbe
pop
repnz
pop
add
pop
add
push
pop
fwait
dec
sbb
inc
xor
push
inc
cmp
movsb
mov
and
pushf
loopne
jmp
push
call
dec
loopne
sarb
rolw
mov
dec
jo
pop
lcall
xorb
xor
or
pop
fmuls
jp
pop
dec
pop
je
sar
and
inc
pop
je
rcrb
inc
pop
add
sbb
sahf
inc
inc
inc
ds
ljmp
ror
xchg
pop
and
and
add
pop
sbb
imul
nop
imul
add
cmpsb
cmp
mov
inc
and
mul
pusha
addb
idivl
add
or
add
nop
push
push
jno
das
or
lcall
cwtl
add
dec
mov
fbld
ljmp
movsb
testl
inc
sbb
ret
loop
push
test
shlb
adc
xchg
sbb
loop
movsb
movsl
inc
testl
sbb
call
testl
and
test
add
roll
mov
push
testl
fwait
call
testl
inc
xchg
sbb
idivl
jo
xchg
inc
jb
ficoml
subb
xlat
mov
jge
fdiv
aam
push
inc
mov
push
inc
mov
in
lcall
jnp
out
and
sub
lahf
andb
mov
in
inc
cli
mov
scas
imul
fldl
cmp
push
out
inc
pop
and
test
inc
mov
nop
stc
xchg
pop
and
lods
loopw
xchg
mov
adc
adc
je
push
test
jns
mov
outsl
mov
lret
cwtl
daa
xchg
or
lea
sbb
add
add
push
sbb
inc
out
daa
dec
dec
add
je
test
ds
fldl
push
daa
adc
xchg
daa
pop
cmp
mov
es
jle
push
call
push
push
daa
mov
mov
cmpsl
andl
adc
mov
loope
mov
mov
cmp
mov
inc
sub
es
xor
inc
sub
movsl
ret
inc
push
mov
mov
std
mov
push
sub
scas
push
xchg
mov
push
xchg
sub
std
mov
es
sub
movsl
mov
and
adc
xchg
mov
std
mov
mov
sub
addr16
sbb
or
xor
inc
mov
xor
lea
scas
repnz
push
cmpsl
pop
fnop
fldenv
add
or
add
inc
pop
aas
addb
xchg
dec
pop
adc
add
push
addr16
in
xchg
loopne
add
add
push
add
or
es
aam
pusha
aaa
push
xor
inc
push
jmp
add
dec
hlt
push
aam
xchg
xchg
and
fldenv
dec
adc
inc
sub
or
or
mov
sub
out
add
xchg
and
and
cmp
cmp
and
xor
ret
cmp
call
dec
mov
mov
pop
xor
cmp
and
or
lret
xchg
les
xchg
cmp
dec
push
call
push
mov
add
mov
adc
test
mov
jp
arpl
ret
lods
je
and
add
xchg
and
scas
movsb
ljmp
lds
xchg
nop
add
xor
inc
push
cmp
adc
aaa
call
jo
int
rorb
mov
ss
mov
dec
and
sub
fxch
mov
mov
ret
mov
adc
mov
cmp
nop
popf
fadds
dec
adc
pushf
pop
cmp
mov
xchg
nop
popf
sbb
hlt
jb
pop
push
cmp
mov
cs
inc
and
cmp
cmp
cmp
cs
mov
dec
push
cmp
cmp
and
dec
cmp
add
or
or
in
and
movl
sub
push
xchg
cmp
test
sub
add
cmp
sbb
and
pop
lea
dec
cmp
and
and
dec
call
or
inc
das
lods
cmp
inc
outsb
mov
js
mov
adc
je
dec
cmp
sbb
jl
xchg
cmp
push
xchg
sarb
rclb
sbb
add
push
popf
sbb
imul
mov
adcb
xchg
mov
fistpl
arpl
and
lds
xor
dec
inc
inc
sbb
test
test
cmp
sbb
and
mov
cwtl
sub
cmp
mov
inc
aad
pushf
sbb
les
sub
and
les
test
pusha
inc
jo
and
or
adc
call
sub
les
push
cmpl
inc
cmp
and
in
xchg
xor
xor
push
inc
add
insl
pop
mov
inc
sub
aaa
call
lods
xor
scas
nop
push
lret
sub
sbb
dec
mov
test
or
lods
xchg
sbb
xchg
inc
movsl
sbb
cmp
add
cmp
jp
sub
adcb
and
gs
clc
cmp
xor
sbb
sbb
pop
xchg
sbb
dec
sbb
pop
nop
xchg
lods
dec
sbb
jp
xor
loope
or
jge
test
mov
rolb
adc
push
sbb
ret
or
xor
jb
sbb
test
sub
sbb
inc
pop
sbb
push
aas
rol
int
out
xchg
push
push
mov
out
in
das
sbb
pop
dec
movsl
mov
lahf
test
sbb
add
mov
dec
add
push
out
pop
cmp
dec
inc
out
rcrb
out
dec
inc
jbe
mov
in
ss
jns
int
out
inc
inc
scas
cltd
dec
out
call
dec
out
jle
jmp
rolb
out
dec
inc
add
pop
sbb
out
pop
inc
mov
or
add
or
cmp
fcmovnbe
adc
or
aad
ss
neg
cmpsl
scas
test
andl
mov
subl
add
lret
xchg
add
or
insb
call
mov
pusha
popl
test
inc
push
xchg
fistl
mov
gs
or
add
mov
xchg
fistl
add
fistl
sbb
fistpl
sbb
cmc
mov
fisttpl
adc
jmp
jbe
mov
fcmovne
xchg
and
gs
fstpt
fildl
sub
roll
lds
sbb
and
adc
mov
adc
js
inc
inc
arpl
imul
pop
in
and
pop
leave
mov
lock
dec
jmp
dec
sbb
gs
and
lock
push
inc
adc
in
pop
inc
adc
pop
xchg
or
xchg
stos
dec
call
mov
es
loopne
mov
dec
sbb
and
pusha
cmp
jp
lret
push
shrl
iret
sub
xchg
test
xor
adc
add
bound
adcb
cmc
enter
call
cs
or
push
gs
pop
dec
sub
push
mov
cltd
pop
pop
adc
xchg
pop
monitorx
pop
cltd
push
aad
je
fnstenv
push
cltd
nop
jo
mov
or
or
xchg
stos
mov
adc
sub
dec
mov
and
cmp
rcrb
inc
adc
out
in
in
mov
push
or
inc
or
aas
or
unpcklps
das
shlb
repnz
cli
out
call
mov
adc
mov
or
add
call
repz
xchg
lock
call
call
mov
call
decb
dec
call
movsb
lods
das
pop
mov
movsl
pop
call
pusha
call
lea
push
jne
mov
insl
je
gs
pop
jl
push
cmp
cmp
test
mov
pop
sub
sbb
cwtl
add
lret
mov
rclb
test
shld
jl
rol
mov
enter
lret
jmp
xchg
mov
xchg
lret
fdivl
push
in
call
lret
aam
lock
test
jns
sub
add
add
leave
or
leave
frstor
loope
adc
mov
sbb
cs
dec
mov
stos
and
dec
in
mov
mov
jle
jae
xchg
dec
in
push
push
cs
dec
cmp
mov
cs
adc
lret
pop
or
test
sub
inc
mov
push
cs
xor
dec
mov
daa
int
dec
jo
xor
sub
mov
mov
je
data16
js
sbb
imul
data16
xorb
test
lcall
movsb
mov
cmp
call
inc
dec
lcall
sub
cmp
sub
movsb
mov
mov
shrb
and
push
imul
mov
daa
and
add
mov
add
cmp
add
push
jae
push
es
dec
adc
xchg
sub
mov
dec
inc
pop
pop
mov
daa
dec
or
imul
movsl
je
mov
pop
adc
loop
shlb
add
or
mov
mov
pop
je
or
fisttpll
sbb
sbb
push
fstpl
nop
scas
andl
dec
fcoms
mov
inc
frstor
cmp
test
cs
mov
and
pop
adc
inc
sbb
mov
sti
adc
out
rcrb
mov
fdivr
stos
mov
fsubrs
mov
das
ficoms
adc
xchg
movsb
inc
shlb
and
addb
pop
adc
adc
xchg
mov
test
dec
sbb
push
rcl
mov
mov
xchg
xchg
xor
mov
adc
add
add
and
loopne
mov
or
scas
xchg
pop
mov
add
mov
nop
jae
push
mov
dec
mov
pop
push
or
add
add
or
nop
cwtl
or
push
rcll
push
adc
xlat
xchg
mov
add
adcb
pop
mov
xchg
or
mov
add
xchg
fs
enter
or
sbb
inc
sub
sub
pusha
dec
pop
inc
and
jp
ss
cmpsl
dec
lea
mov
sub
test
sub
and
mov
push
adc
adc
push
jne
inc
cmp
xchg
adc
bswap
popf
sub
mov
mov
jg
adc
mov
cli
xchg
lds
adc
push
arpl
jecxz
push
int3
jno
push
in
push
pop
mov
mov
adc
pop
push
xor
fwait
or
and
cmp
and
movsl
movsl
xchg
inc
pop
or
cmp
xor
lods
aaa
adc
and
cmp
popf
or
sub
je
das
push
lcall
call
add
cmovge
xor
stos
dec
push
inc
push
cli
mov
pop
dec
add
mov
pop
or
cmp
cltd
pop
movsl
sti
sbb
mov
add
sub
push
mov
xorb
or
cs
xor
pop
cs
push
mov
cmp
call
xor
jle
rclb
rclb
fdivrs
cmp
adc
pushf
inc
add
sbb
push
sbb
xchg
es
pop
add
test
sbb
push
leave
lods
fwait
shlb
test
mov
sti
call
stos
rorl
dec
sti
and
pop
jo
sti
adc
jae
shrb
call
push
pop
and
adc
jno
shrb
and
and
inc
or
push
push
pop
pop
mov
xchg
push
pop
or
jmp
je
das
adc
lods
cmp
push
pop
clc
shll
and
pop
dec
or
pop
add
add
ja
movsl
add
fisttps
sahf
adc
push
mov
pop
push
and
pop
cwtl
jmp
mov
ficoml
pop
push
roll
mov
nop
aas
or
aas
xor
pop
and
inc
aas
push
jne
xchg
lods
test
jo
nop
fs
and
loopne
push
adc
sbb
nop
add
movsb
pop
sub
inc
add
testb
adc
and
jo
out
adc
int
pop
and
mov
jge
je
rcrb
ret
mov
inc
pop
inc
pushf
lods
mov
negl
call
subb
cmp
inc
stc
jecxz
xor
and
and
sarb
orb
push
mov
xchg
push
divl
notl
testl
notl
adc
or
jl
and
mov
pop
mov
xchg
pop
inc
cmp
test
push
push
pop
nop
mull
mov
aad
in
imul
xor
mov
sub
divl
jbe
or
divl
inc
aam
mov
shlb
lea
popa
or
mov
idiv
pop
nop
fnstenv
cld
add
enter
jl
negb
call
cld
jb
or
sub
and
out
push
rorb
inc
push
and
pop
push
jo
push
orl
and
jp
or
rol
sub
dec
out
ret
add
call
daa
icebp
sbb
adc
adc
mov
daa
adc
mov
jle
loop
movsb
daa
loopne
addl
mov
jb
xchg
daa
fwait
movsb
xchg
inc
daa
adc
jmp
cmpsb
rcr
and
inc
imul
hlt
cmp
das
xor
daa
or
imul
enter
inc
jno
add
out
pop
push
daa
and
push
jne
pop
scas
push
pop
mov
fldl
insb
inc
push
push
pop
sahf
cmp
push
fistpl
sbb
push
add
in
adc
jmp
mov
fstl
loop
nop
mov
test
or
outsl
mov
fistpl
jo
add
out
jo
mov
stc
mov
pop
cli
push
es
inc
sahf
pop
in
sbb
cmpsl
adc
mov
xchg
mov
clc
mov
push
outsb
bound
out
cmp
adc
stos
sbb
adc
adc
cmp
push
mov
and
rclb
inc
mov
cmc
addb
add
push
add
lods
addb
imul
xor
cmp
mov
push
pop
cmp
xor
mov
test
inc
xchg
lods
mov
push
sbb
mov
leave
push
fwait
xchg
add
and
sbb
mov
and
xor
inc
adc
xchg
inc
inc
mov
lahf
mov
fdivl
push
xchg
movsb
mov
sahf
loop
test
stos
test
stos
sahf
sbb
and
subb
test
xchg
fldenv
nop
inc
ret
mov
mov
outsb
jg
in
rcll
mov
sub
or
arpl
sbb
int
mov
out
call
sub
mov
push
cmpsb
je
mov
scas
dec
leave
cmp
adc
or
lret
loope
icebp
push
mov
insb
movsl
hlt
add
and
sbb
sub
test
cmp
aam
shll
sbb
xor
push
imul
mov
add
adcb
or
push
addl
imul
test
push
add
cmpsl
sub
fwait
sub
adc
jno
mulb
stos
xlat
fwait
push
cltd
imul
aaa
adc
pop
bound
mov
lea
call
adc
call
mov
xchg
inc
cmp
push
cmp
sysret
dec
mov
shl
adc
inc
call
ret
mov
cmp
lcall
adc
xlat
ret
push
sub
popf
icebp
in
or
dec
nop
sbb
inc
xlat
dec
nop
out
mov
sbb
dec
inc
movsb
repz
shlb
xchg
mov
or
cmp
scas
dec
nop
inc
inc
add
ss
adc
dec
push
sbb
mov
int
outsl
pop
jb
mov
test
in
sbb
cs
push
or
loopne
push
inc
and
and
sub
cmp
xchg
and
sahf
mov
andb
sbb
in
dec
clc
jmp
rorb
adc
or
dec
fcomps
jmp
adc
inc
add
pop
cmp
add
and
imul
sbb
ret
jns
scas
sahf
mov
push
jl
out
ds
or
sbb
cmp
push
mov
pushf
jns
out
pop
push
lods
push
mov
out
out
push
inc
push
push
sub
push
nop
repz
sti
movsb
push
push
xchg
jl
push
cmp
cmp
je,pt
push
repz
cmp
sbb
out
sahf
out
push
fmulp
mov
sahf
xchg
mov
ret
into
sbb
incb
add
cmp
cmp
loop
sbb
out
aam
mov
sahf
mov
sbb
pushf
ds
repz
lret
or
jns
out
and
pop
out
sahf
out
test
jns
mov
fsubrp
decb
sarb
test
shl
jns
adc
jb
jle
sahf
mov
daa
out
cmp
loop
clc
adc
sub
cmp
jns
mov
aaa
je
fs
push
cmp
mov
push
daa
pop
mov
jbe
aad
popf
mov
lahf
jae
jbe
push
cwtl
imul
cmpsl
insl
mov
iret
dec
test
aad
repz
add
jbe
push
scas
test
pusha
loope
and
pop
adc
stos
add
jp
ret
jo
mov
xchg
push
es
pop
jle
sub
inc
push
jge
xor
or
dec
push
je
jo
or
pop
sbb
pop
stos
push
outsl
push
push
sub
or
ja
sbb
dec
mov
cmp
es
xor
or
fcmovne
push
insb
xchg
pop
jae
outsl
ss
mov
xchg
xlat
ret
addr16
bound
add
push
or
shr
xor
fldt
mov
sahf
jl
push
dec
cmp
or
das
jns
rolb
imul
add
mov
mov
mov
pop
clc
dec
dec
inc
jnp
pop
pop
mov
adc
pop
inc
sub
push
pop
add
pcmpeqd
and
les
and
add
adc
sbb
loop
sub
sbb
stos
outsl
xchg
push
data16
add
fsubp
es
das
cmp
mov
sbb
clc
jg
ret
aas
ret
add
loopne
cmp
arpl
push
dec
inc
push
push
inc
push
inc
pop
inc
outsl
outsl
ficomps
or
out
xor
sbb
mov
xor
xor
imul
jb
jae
ljmp
sbb
pop
inc
jne
outsb
je
ret
or
inc
js
std
in
or
je
ss
inc
xor
mov
inc
inc
sub
sub
inc
inc
xor
xor
xor
mov
mov
inc
xor
xor
ss
aas
sti
xor
cmp
fdivl
cmp
xor
clc
inc
inc
xor
mov
aam
pop
fs
bswap
loope
add
sets
test
icebp
cmpb
addl
fidivrs
cmp
sub
or
push
and
pmaxub
sub
inc
aaa
adc
xor
inc
pop
dec
add
imul
scas
ljmp
inc
push
dec
and
jbe
loopne
cmp
ss
pushf
xor
add
dec
outsl
mov
dec
mov
faddl
scas
int
loope
push
dec
hlt
imul
ficoml
pop
push
call
push
inc
out
adc
jns
out
push
sub
out
cmp
outsb
fs
ftst
inc
mov
lods
sahf
add
stc
mov
movd
hlt
push
aam
jo
dec
jnp
or
insb
adc
jg,pn
ret
xchg
pop
je
and
outsl
xor
imul
ss
mov
inc
je
push
push
xor
push
jns
push
inc
cmp
cmpsl
enter
inc
cmp
sbb
mov
fwait
add
ss
pop
dec
popf
mov
fldt
inc
cs
add
std
roll
insb
insb
mov
xchg
sub
loop
and
outsb
ret
lret
cmpsl
sub
and
dec
inc
xor
push
add
pop
insb
cmp
inc
add
xor
pop
add
pop
sub
jg
jp
or
stos
inc
jmp
mov
dec
popa
jae
loope
xchg
mov
jnp
aas
pop
dec
inc
inc
push
imul
ret
adc
js
mov
scas
scas
je
dec
cmp
nop
gs
mov
mov
cmp
push
popa
fs
jo
movl
add
fmull
or
aaa
dec
shll
xchg
ret
pop
dec
jae
jmp
scas
out
outsl
push
pop
arpl
inc
cs
push
push
push
add
ja
enter
shlb
fwait
mov
imul
add
cmc
sbb
sbb
nop
fdivl
pusha
faddl
jmp
orl
inc
inc
and
add
and
add
pop
subl
push
xchg
adcb
and
xchg
pushf
add
sbb
push
adc
adc
jg
dec
add
cmpsl
sub
add
add
push
mov
or
add
jns
addr16
orb
or
add
mov
das
push
adc
dec
shrb
adc
push
sbb
iret
repz
enter
idivl
sbb
push
das
jnp
stc
cmp
pop
nop
cld
and
repz
out
cli
js
jns
stc
jns
out
jp
push
cld
fdivr
mov
cmpsl
popa
test
mov
dec
sbb
mov
push
xor
mov
and
outsl
push
dec
sbb
push
unpckhps
sbb
out
inc
ds
cmp
test
dec
xchg
or
or
lds
stc
int3
adc
push
cld
or
in
jns
out
int3
les
xor
cmp
imul
iret
jl
insb
push
out
pop
mov
dec
jns
out
inc
inc
cmp
xor
iret
repz
sub
and
repz
repz
adc
or
stc
cmp
or
cld
or
sahf
out
sahf
hlt
call
jns
out
movsb
nop
jo
xor
cmp
out
lock
int3
mov
iret
repz
insb
inc
sub
adc
sahf
out
ds
push
fcom
les
js
sub
repz
repz
mov
outsl
xchg
sbb
add
call
rolb
jl
xor
pop
inc
or
es
pop
ret
mov
repz
mov
dec
push
mov
xor
mov
push
sub
inc
inc
add
and
mov
inc
dec
cmp
mov
dec
call
bound
fwait
inc
adc
inc
rcll
popl
push
jecxz
gs
xchg
mov
add
mov
mov
leave
and
inc
pop
fimull
sbb
cmpsb
pop
and
push
ja
pop
dec
dec
adc
mov
daa
jmp
pop
jmp
shrl
cmp
mov
adc
inc
addl
sbb
add
js
shrb
icebp
or
mov
pushf
andb
add
das
call
cs
out
or
push
loopne
filds
push
inc
push
xor
xchg
cld
inc
inc
mov
cs
pop
push
jnp
out
mov
inc
cmp
pop
jne
pop
shlb
dec
ret
push
mov
push
je
imul
pop
xchg
pop
dec
loop
sbb
push
int3
inc
cld
and
or
inc
clc
lds
mov
inc
fs
cmp
xor
fists
neg
inc
push
push
push
insb
das
inc
in
stos
dec
iret
outsl
jl
add
scas
mov
adcb
add
das
loopne
outsb
repnz
insb
xchg
loopne
mov
insb
shl
push
mov
movsb
inc
jo
mov
insl
or
add
inc
sub
and
repnz
jg
fdiv
xchg
or
cmp
mov
ss
movsl
fadd
cmp
sete
int3
loopne
jnp
data16
ljmp
ds
xchg
inc
in
dec
xlat
jns
pop
dec
and
jbe
fisttps
cmp
push
lcall
mov
lret
les
mov
push
sbb
push
or
push
popf
jl
in
loop
addl
sbb
jg
cmpsb
jg
mov
push
imul
or
mov
cltd
shlb
aam
or
mov
sbb
je
adc
outsl
inc
jb
loopne
iret
daa
fimull
sarl
jbe
jp
push
sbb
ss
adc
fs
loopne
mov
mov
push
sahf
loopne
daa
dec
jecxz
jnp
dec
enter
dec
push
fadd
mov
mov
xor
aam
inc
jnp
js
fcmovbe
sub
inc
mov
ret
je
dec
imul
and
add
add
pusha
out
push
jb
push
lcall
push
leave
jo
and
les
bound
push
push
add
push
outsl
ja
xor
lods
scas
aam
jle
jb
ja
cs
sub
add
mov
out
daa
movsb
and
xorl
mov
es
dec
inc
repnz
cwtl
cmp
outsb
inc
lods
inc
sbb
fbstp
leave
sbb
push
add
mov
bound
sub
in
cwtl
dec
push
jb
mov
lock
adc
inc
add
insl
jo
pop
jnp
add
outsb
push
add
push
imul
fwait
loope
mov
jae
jb
mov
push
jae
push
adc
ret
and
push
dec
jp
mov
out
ret
add
mov
out
adc
cmp
push
inc
pushf
push
xor
sbb
shll
add
and
leavew
xor
add
mov
mov
inc
push
mov
push
imul
mov
push
or
cmp
push
jo
jb
jns
ret
lret
jo
imul
movsb
sbb
in
aad
add
lods
cmpsl
xor
enter
push
sbb
imulb
cmp
aaa
adc
popa
jge
and
je
fimull
pusha
inc
and
daa
cmpsl
and
inc
insl
mov
jge
xchg
xchg
cmp
mov
add
js
sbb
mov
ja
inc
or
addl
fbld
jne
pop
negb
lods
gs
or
mov
push
or
sub
push
sbb
and
sbb
and
xor
sbb
nop
pop
ds
mov
inc
lahf
xor
dec
xor
dec
test
dec
cmp
ss
ja
dec
inc
cs
mov
fidivrl
and
push
mov
pop
adc
call
outsb
xor
fimull
xchg
inc
ret
inc
xor
push
jo
add
orb
mov
outsl
pop
icebp
xor
or
stos
mov
dec
mov
push
lcall
orb
mov
roll
dec
dec
push
jnp
cli
pop
addr16
inc
jns
lods
imul
inc
sbb
ficompl
jbe
outsl
inc
push
outsl
cmp
xchg
test
rorl
shrb
shlb
xor
add
sbb
cmp
add
sbb
ffreep
add
mov
or
xchg
imul
add
mov
adcb
push
mov
jp
mov
inc
jmp
mov
cwtl
add
inc
js
fcomps
fidivl
dec
inc
dec
pop
or
adcl
lods
sbb
and
xor
jnp
push
mov
enter
add
pusha
pop
dec
or
inc
mov
xor
fiaddl
iret
add
jo
add
add
outsl
inc
pop
sub
cmp
sub
cmp
adc
cwtl
sbb
movsl
dec
pusha
push
jo
jno
in
xchg
lods
sbb
mov
push
inc
mov
and
push
or
add
xchg
sbbl
imul
add
cmpsb
addl
iret
pop
add
lret
xchg
add
sbb
out
outsl
rcll
add
push
mov
inc
orl
push
and
in
jb
imul
jns
bound
ret
cld
inc
jae
adc
add
je
addb
divb
add
mov
xor
and
sbb
xor
lods
push
mov
mov
add
sarb
into
insb
pop
out
lds
push
add
pop
int
das
sub
xor
imul
fbld
lret
fbld
mov
cltd
jmp
ficomps
mov
push
popa
ret
fs
std
fwait
xchg
add
ja
cwtl
aam
fwait
clc
cmc
jg
jecxz
add
mov
aam
add
jae
test
add
mov
add
mov
pop
push
insb
push
sbbb
xor
adc
push
punpcklbw
popf
cs
and
sbb
movb
std
icebp
add
and
test
sub
mov
mov
add
pop
add
test
pop
gs
cmp
insb
push
loop
inc
xor
sti
fsubrl
mov
or
ss
jne
inc
pusha
jmp
pop
loopne
inc
call
push
jo
dec
add
aad
push
push
push
test
inc
or
push
add
test
inc
xchg
sub
add
xchg
xorb
sub
sbb
adc
adc
add
jns
cmpsl
stc
clc
out
lock
sahf
out
mov
iret
jnp
lods
test
pop
mov
iret
repz
nop
mov
jo
pusha
push
pop
push
sahf
out
sahf
inc
cmp
and
sbb
dec
repz
cld
in
lock
imull
loopne
fcom
jns
out
enter
cwtl
out
sahf
out
je
push
cmp
out
sahf
xor
and
adc
cmp
repz
cld
in
hlt
in
in
cmp
repz
mov
iret
repz
push
js
push
inc
jl
out
sub
and
or
jmp
push
add
push
es
dec
and
sub
sub
add
popf
loopne
divl
mov
push
mov
shl
incl
pmuludq
push
aad
add
shl
rcrb
sub
sub
data16
out
rorb
and
or
or
testl
lret
jbe
add
xchg
xor
mov
add
outsb
push
jg
fs
inc
dec
pop
add
mov
adc
pusha
xlat
bound
mov
test
sar
dec
or
nop
data16
das
sbbb
dec
add
dec
fstpt
dec
push
pop
jo
add
in
mov
inc
mov
push
dec
inc
xorl
sbb
aam
rorb
cmp
insl
xor
ljmp
xchg
cmp
mov
and
jbe
and
cmpsl
cld
fbstp
add
and
or
je
adcb
sbb
xor
jae
mov
jb
pop
and
add
shll
imul
sbb
cmp
mov
sub
and
xor
add
adc
add
push
pop
jne
es
xor
sti
mov
popa
insb
into
sub
dec
mov
or
das
sti
ss
add
push
mov
lahf
ds
inc
add
inc
inc
add
fistpl
adc
fcmovnbe
add
les
xor
sbb
bound
loopne
sbb
das
xor
xorb
xor
xor
xor
ljmp
xor
xor
xor
movsb
xor
xor
xor
xor
xor
xor
xor
xor
xor
push
xor
xor
dec
xor
xchg
shll
inc
ss
ss
incl
aaa
es
dec
aaa
push
aaa
mov
iret
aaa
call
aaa
adc
dec
cmp
cmp
cmpb
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
data16
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
add
sbb
cmp
sub
ret
add
push
lock
idivl
jmp
add
adc
and
dec
xor
xor
outsb
xor
mov
popf
xor
xor
xor
xor
xor
xor
mov
xor
xor
xor
xor
xor
xor
out
xor
inc
sar
jge
mov
xor
xor
fidivl
scas
xor
rclb
clc
pushl
jecxz
call
xor
cmp
pushl
cltd
ss
ss
ss
aaa
sbb
jno
mov
aaa
loopne
lcall
or
cmpsb
cmp
outsb
cmp
cmp
cmp
push
cmp
or
cmp
cmp
cmp
push
cmp
jl
cmpl
mov
jmp
aam
fimuls
adc
cmp
cmp
cmp
cmp
pop
cmp
mov
cmp
mov
pushf
cmp
call
das
jo,pt
test
mov
aas
adc
xor
inc
aas
popa
aas
cmpl
aas
mov
les
into
aas
pop
or
std
out
jmp
repz
andl
xor
xor
xor
xor
jl
mov
mov
xor
xor
ljmp
xor
xor
pop
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
inc
xor
pop
xor
jo
xchg
xor
xor
ljmp
xor
xor
xor
xor
xor
xor
xor
push
mov
sub
ss
clc
loop
cmp
cmp
cmp
mov
mov
inc
cmp
cmp
cmp
cmp
cmp
mov
xchg
cmp
cmp
cmp
cmp
ret
fwait
xchg
aas
inc
aas
pop
aas
ja
pusha
jg
and
pop
push
or
cmp
pop
xor
push
xor
xor
xor
xor
xor
xor
xor
xor
jmp
incl
cmpsb
push
xor
xor
lcall
jg
clc
xor
xor
test
mov
mov
nop
xor
out
in
xor
xor
clc
xor
cmp
pop
fildll
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
pop
jp
cmp
cmp
std
cmp
cmp
loop
lds
push
lcall
das
cmp
decl
ds
aas
jmp
ljmp
outsb
xor
xor
mov
ss
ss
xchg
cmp
cmp
test
lods
cmp
cmp
mov
cmp
cmp
cmp
cmp
cmp
ljmp
mov
cmp
cmp
cmp
cmp
adc
dec
inc
inc
aas
push
mov
cmpb
aas
sarl
aas
in
out
out
in
pop
pop
lcall
movsb
xor
add
das
pop
cld
xor
xor
xor
fisubrl
xor
ljmp
and
xor
xor
mov
xor
xor
aas
cli
scas
std
xor
cmpsb
data16
ss
add
or
aaa
and
lods
loopne,pn
aaa
dec
aaa
dec
aaa
push
aaa
pop
aaa
imul
xchg
std
aaa
cld
decl
int
repz
xor
cmp
xchg
outsl
cmp
mov
call
xor
pusha
cmp
mov
cmp
cmp
sbb
push
cmp
inc
lock
mov
add
push
cmp
sbb
cmp
std
push
incl
stos
cmp
cmp
or
cmp
cmp
cmp
cmp
cmp
clc
push
cltd
sbb
jbe
adc
sub
xor
cmp
ljmp
cmp
dec
cmp
push
cmp
insl
cmp
js
cmpl
mov
xlat
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
sbb
jg
xor
cmp
pop
cmp
mov
cltd
cmp
scas
cmp
jg
cwtl
ds
ds
jecxz,pt
out
ds
das
aas
cmp
je
cmp
aas
jge
mov
movsl
aas
stos
aas
mov
mov
shlb
pop
xor
lcall
sahf
xchg
les
fidivl
in
jmp
xor
xor
xor
xor
mov
xor
xor
xor
xor
ljmp
xor
xor
xor
mov
jl
cmpsl
xor
xor
jge
sbb
lcall
xor
xor
ja
xor
cmpsb
xor
xorb
aaa
fwait
sahf
cmpsb
jmp
sbb
scas
cmp
outsb
subb
cmp
cmp
mov
xchg
cmp
mov
inc
mov
sbb
nop
cmp
cmp
cmp
ljmp
mov
jle
push
or
xor
clc
lcall
cmp
bound
data16
push
outsb
aaa
jb
jbe
xchg
ja
cmp
jge
cmp
cmp
cmp
cmp
cmp
cmp
jle
inc
add
jbe
cmp
sbb
ds
ds
pop
mov
aas
push
mov
insl
decl
mov
xor
xor
xor
jl
jg
push
scas
fiadds
aaa
ret
add
aaa
repnz
or
cmp
pop
cmp
jge
mov
cmp
fsubrp
cmp
cmp
jbe
xchg
cmp
cmp
cmp
sti
mov
cmp
cmp
cmp
fdivrs
push
aas
jne
jmp
or
mov
fwait
xor
mov
shlb
xor
dec
or
repnz
xor
xor
divl
pop
xor
fdivr
mov
ss
dec
ss
outsb
notb
ss
sbb
fidivl
in
and
cmp
cmp
cmp
mov
pop
mov
sbb
cmp
jg
sub
push
imul
cmp
test
mov
ljmp
or
cmp
dec
cmp
cmp
cli
mov
cmp
cmp
cmp
jp
mov
cmp
cmp
pop
sarb
sub
push
push
inc
cmp
orb
push
mov
push
cmpb
cmpsl
ds
ds
ret
idivl
add
sbb
addr16
mov
rol
lcall
or
xchg
xor
xor
pop
xor
xor
jg
clc
xor
xor
xor
xor
xor
xor
xor
mov
xor
push
xorl
add
xor
ds
dec
aaa
pop
aaa
js
mov
stos
std
pop
loopne
cli
fidivl
out
in
aaa
cli
aaa
mov
cmp
mov
add
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
incb
dec
cmp
cmp
adc
jbe
cmpl
cmp
cmp
icebp
lcall
adc
and
pusha
aas
cmpb
aas
fdivrl
loop
out
out
pop
aas
icebp
push
xor
adc
ljmp
xor
loop
xor
xor
jg
xchg
xor
xor
xor
mov
sub
cld
xor
xor
ljmp
jbe
loopne
adc
adc
sbb
sbb
pushl
sub
sub
nop
cmp
mov
cmp
cmp
cmp
cmp
cmp
fdivrl
test
out
xor
incl
cmp
inc
xor
or
lock
lcall
orl
mov
pop
inc
sarb
xor
xor
xor
cmp
sub
sub
xor
cmp
inc
cmp
and
decb
dec
cmp
push
rcrb
cmp
call
fidivs
cmp
cmp
adcb
ret
ficoml
mov
enter
jge
scas
mov
cmp
cmp
mov
cmp
inc
lock
aad
push
push
dec
cld
push
add
or
adc
cmp
stos
sbb
and
and
sub
sub
xor
clc
jecxz
fidivrs
inc
cmp
cmp
pop
cmp
aas
sahf
cmp
insb
cmp
je
jl
cmpb
cs
cs
mov
nop
xchg
cwtl
decl
mov
push
mov
aas
inc
mov
push
aas
push
loope
ret
xchg
aas
cwtl
aas
lods
aas
mov
shrb
aas
fdivrs
loopne
clc
push
sti
shlb
push
or
xor
xchg
xor
mov
sbb
and
inc
xor
xor
cwtl
xor
jmp
enter
cs
rorl
mov
xor
mov
jb
out
jle
inc
xor
andb
add
leave
fimuls
xor
ss
sahf
int3
clc
aas
std
pushl
shlb
aam
fdivs
fdivl
loopne
in
call
ss
ss
ss
sub
mov
or
or
adc
adc
jg
mov
and
and
sub
sub
xor
cmp
cmp
inc
aaa
inc
aaa
dec
call
lcall
jb
aaa
push
aaa
pop
aaa
pop
aaa
pusha
aaa
jo
je
jl
xorb
aaa
mov
or
nop
aaa
xchg
aaa
cwtl
into
mov
call
loope
dec
mov
mov
mov
aaa
enter
rorb
dec
cld
aaa
aam
fdivs
fcompl
in
loop
test
xor
aaa
hlt
add
or
rclb
cmp
sbb
cmp
out
ret
fdivrl
call
clc
ss
inc
js
pop
cmp
cmp
cmp
cmp
es
cld
in
ljmp
cmp
cmp
cmp
cmp
cmp
push
cmp
subb
cmp
mov
cmp
cmp
mov
cmp
push
add
mov
push
rcrb
adc
std
mov
push
pop
in
add
or
sub
xchg
push
push
aas
pop
mov
add
push
inc
mov
cltd
into
daa
push
inc
push
or
aas
movsl
xchg
push
inc
and
mov
xor
leave
mov
push
jae
lcall
pop
xchg
add
xchg
mov
push
push
add
inc
lgs
sub
shlb
test
mov
inc
dec
xor
addb
xor
dec
js
push
xchg
sub
sub
insb
iret
jnp
inc
and
dec
mov
add
filds
add
shlb
inc
add
jne
orl
pop
orl
or
fs
cmp
pusha
jg
mov
mov
imul
ret
xor
aas
loope
stc
bound
addb
pusha
pop
xchg
sub
or
gs
rolb
add
rol
mov
dec
fiaddl
xchg
xchg
outsl
popf
jle
push
sbb
call
call
je
inc
xchg
fbld
idivb
push
sub
je
jae
or
imul
aaa
std
inc
or
cld
add
jl
or
incl
sbb
hlt
sub
xor
mov
sub
push
mov
xchg
dec
fdivrl
adc
xchg
mov
dec
adc
aas
addb
call
sub
xchg
xor
mov
aaa
pop
lahf
dec
jmp
and
mov
insb
jmp
ljmp
or
subl
test
popa
or
xor
and
or
adc
mov
loop
or
sbb
pop
pop
pop
sub
jmp
in
push
adc
add
xor
ret
adc
rol
mov
push
add
adc
cmp
movsl
insl
add
adc
xor
pop
std
sahf
add
lret
into
or
cmc
mov
xchg
jle
push
pop
shr
xor
inc
cmp
jne
insl
or
or
add
test
fisttps
push
cmp
call
and
cs
xor
bound
inc
jmp
sbb
mov
or
ficoml
or
jne
data16
das
push
inc
mov
adc
adc
je
int
pop
push
outsb
dec
add
dec
add
xor
and
mov
pop
add
pop
pop
pusha
sahf
push
or
mov
scas
adc
dec
inc
loop
sbb
push
or
insl
adc
loope
loope
jbe,pn
dec
cmp
nop
adc
sub
cld
or
call
repz
clc
push
push
push
add
cmp
dec
adcl
pop
clc
fldl
pop
cmp
and
test
cmp
adc
insl
dec
xchg
xor
sub
fcomps
sahf
or
sub
and
fcoms
jne
out
ljmp
je
stc
lea
push
fidivs
fcmovb
js
or
adc
jecxz
pop
add
mov
nop
adcb
fisubl
lret
test
orl
jecxz
pushl
push
mov
pop
dec
add
pop
addb
cli
aad
pop
pop
adc
rolb
cmp
fcoms
inc
pop
dec
pushf
testb
outsl
sub
sub
adc
push
mov
sub
into
adc
inc
std
push
mov
sbb
mov
and
mov
sbb
cmp
int3
cmp
push
lods
std
pusha
andl
dec
std
adc
repnz
inc
jo
xor
adc
les
std
lds
std
jb
filds
jae
add
inc
dec
jp
pop
call
pop
das
adc
pop
inc
inc
std
shll
ret
les
test
enter
pusha
adc
movsb
cwtl
inc
imul
popf
push
jne
cmpsb
sub
cltd
xor
inc
xor
mov
adc
dec
mull
out
cmp
cmpsl
push
push
jge
inc
fimull
push
mov
sbbb
lahf
jmp
dec
inc
dec
inc
flds
inc
mov
mov
test
mov
sbb
jle
pop
stos
sbb
cmp
fldl
and
mov
xchg
loope
mov
dec
push
push
xorl
xorl
add
add
inc
sarb
jmp
scas
stos
jmp
aas
or
fs
outsl
pop
add
mov
call
or
add
dec
adc
mov
mov
cmp
push
add
out
mov
into
and
pop
adc
xchg
test
push
stc
dec
mov
sbb
inc
dec
or
imul
call
sbb
pop
cli
cld
mov
mov
and
and
jne
and
push
std
pop
xor
jl
pop
lahf
adcb
mov
adc
mov
fmuls
mov
or
pop
sahf
fwait
dec
mov
jbe
mov
shll
and
and
and
leave
mov
pop
call
es
cwtl
ds
out
push
pop
and
fisttpll
fs
test
sbb
call
and
cmp
add
sub
or
push
fimuls
and
gs
fiaddl
mov
les
pop
mov
adc
or
and
fmuls
and
fwait
stc
sub
loope
sbb
and
pop
sbb
rorb
jg
sub
icebp
pop
xor
pop
mov
and
pop
mov
inc
fistps
adc
add
mov
mov
or
cmp
sub
jns
push
ficoml
or
sbb
sarb
and
push
subb
mov
cmp
dec
push
fnsave
mov
inc
cmpsl
fstl
es
add
add
test
insb
loopne
jmp
push
ret
int3
pop
outsb
cmp
movsb
addl
sahf
inc
pop
ja
mov
pop
cmp
or
fldl
ss
prefetcht0
mov
pop
cmp
ss
nop
shlb
fcomp
jo
rol
or
mov
fisubl
jae
xlat
pop
mov
and
sahf
int
sbb
cmp
mov
repnz
and
es
add
or
xchg
dec
adc
fisttpl
or
out
sahf
out
insb
fs
push
dec
add
gs
inc
cmpsl
repz
jmp
cwtl
mov
enter
jne
sub
lret
and
roll
adc
xor
jns
ja
pop
nop
inc
push
fs
mov
mov
add
cmpsl
push
loopne
mov
jecxz
out
push
call
push
or
jns
and
inc
cmp
inc
xor
out
push
push
add
pop
out
push
cmp
sbb
stc
rolb
mov
loopne
cltd
push
enter
cltd
and
inc
into
mov
sub
sbb
cltd
mov
in
adc
sbb
dec
push
stc
adc
pop
sti
cs
jnp
mov
pop
or
leave
repz
stos
sbb
cmpsl
ret
int3
push
adc
inc
cmpsl
lcall
xor
imul
add
int
and
daa
daa
daa
shlb
daa
daa
cmpsb
test
daa
nop
add
daa
daa
sub
and
sub
sub
and
dec
shrl
sub
cs
and
sub
imul
or
add
xor
sub
sub
cmp
test
aam
or
and
jo
push
jb
cmp
mov
sub
les
mov
add
inc
stos
pop
jl
mov
out
push
fcoms
sub
add
int
sub
sbb
pop
mov
push
cmc
cmc
push
lock
jp
repnz
insb
mov
ret
clc
fs
dec
sbb
sub
cmpsb
pop
sbb
adc
nop
data16
inc
inc
mov
leave
cwtl
addr16
push
mov
push
inc
cmpsl
or
addr16
call
inc
enter
mov
inc
sub
cwtl
add
adc
pop
test
sbbb
jo
jle
pop
pop
xchg
test
pop
xchg
in
je
or
adc
mov
push
addr16
rolb
and
lods
shll
and
add
outsb
and
and
add
xchg
test
mov
push
pushw
or
cmp
call
adc
xor
addr16
rcr
test
nop
movsb
cmp
out
add
and
xchg
cltd
sbb
pop
mov
sarb
repnz
mov
mull
mov
mov
and
cltd
and
and
sub
sbb
xor
inc
mov
xchg
mov
cltd
cwtl
test
cld
pop
push
call
pop
dec
fmul
xor
rol
inc
out
sbb
mov
popf
and
dec
outsl
dec
sbb
cltd
mov
xor
adc
or
cltd
or
inc
ret
cwtl
pop
flds
sbbb
lret
push
sub
xchg
sbb
bound
pusha
sub
sbb
xchg
inc
cwtl
test
inc
add
or
nop
cltd
adcb
pop
ljmp
mov
data16
sub
push
adc
fcom
push
lods
dec
pop
aam
stos
sub
ret
rorl
jp
aad
roll
mov
jl
shll
mov
xchg
jmp
outsb
adc
mov
fs
mov
mov
out
and
mov
add
in
jbe
mov
jb
mov
stos
or
shrl
sub
inc
addb
inc
enter
xor
mov
xlat
adc
push
mov
stos
mov
and
out
sbb
sub
jo
aam
and
mov
fstl
fcom
push
pop
aam
mov
stos
fisubl
rcll
sbb
cmp
sahf
mov
add
inc
add
leave
inc
push
insl
push
xchg
pop
shll
pop
add
adc
call
fisubl
adc
adc
mov
rcrl
fs
jmp
pop
push
mov
test
mov
je
push
pop
mov
shrl
sbb
mov
push
xchg
mov
pop
roll
xchg
or
or
inc
andl
nop
dec
testl
mov
pop
rol
and
movsb
jmp
adc
lea
pop
fcoms
or
fdivr
mov
imul
lahf
cs
nop
and
jge
pop
xchg
push
icebp
add
pop
enter
sub
pop
mov
lods
sbbb
adc
adc
pop
and
add
je
rcrb
push
pop
push
les
dec
addl
sbb
add
dec
pop
and
xor
ret
pop
xchg
pop
xchg
xor
leave
push
ds
pop
adc
pop
mov
out
popl
pop
loope
sub
not
mov
add
dec
pop
mov
inc
and
shll
mov
mov
sbb
inc
inc
inc
inc
xor
cmp
inc
inc
inc
inc
inc
pop
inc
dec
push
inc
inc
inc
dec
inc
pop
cmp
je
das
pop
mov
fs
pop
pop
bound
call
or
jo
add
push
pop
dec
adc
cmp
add
insb
jle
mov
add
ss
stos
fbld
loop
pop
cmp
inc
int3
dec
or
call
sbbb
popf
and
pop
in
push
sbbb
nop
cs
xchg
rorb
or
inc
cmp
pushf
or
jae
orl
mov
mov
dec
dec
jno
cmp
cmpsb
and
nop
fsubl
aas
lock
pop
adc
sbb
xor
fistpl
mov
aad
pop
call
jae
sbbb
outsl
cmp
subl
dec
or
xor
sub
xchg
cmpsb
in
or
adc
sub
inc
adc
lcall
test
pop
dec
fisttpll
push
mov
loop
xchg
pop
jb
fmul
fdivl
test
mov
call
nop
mov
das
popa
push
push
mov
or
jo
xchg
sub
and
fsubrl
fdivrl
pop
lods
lret
call
mov
pop
je
aam
jecxz
cmpsl
mov
inc
pop
lret
cmp
mov
xchg
testb
adc
and
cmpsl
add
and
mov
mov
pop
adc
push
mov
mov
add
xor
pop
pop
ret
pop
sbb
inc
add
fcmovu
ss
cmp
bound
jl
xor
loopne
je
adc
jns
fs
or
clc
js
test
pushf
dec
test
icebp
pusha
aaa
ret
sbb
das
nop
loopne
adc
sbb
xchg
cmpl
movsb
sub
daa
add
pop
in
fmull
and
dec
daa
rclb
xorb
sub
inc
nop
in
add
jmp
movsl
pusha
xchg
daa
mov
popf
es
daa
loopne
or
fwait
roll
bswap
sbb
cltd
loopne
adc
pop
sbbb
sbb
mov
adc
out
xor
push
and
and
push
inc
jecxz
sub
push
cltd
mov
push
push
and
inc
and
push
stc
cltd
xchg
scas
fs
cld
push
cwtl
push
imul
xor
mov
mov
adc
popf
fisttpll
cwtl
test
ds
push
daa
fwait
mov
push
rcr
or
out
cld
loope
fcompl
test
inc
repz
pop
jbe
lahf
mov
pusha
and
out
xchg
xor
repz
movb
repnz
add
xchg
xchg
iret
xor
sub
add
mov
jo
cmpsl
rclb
imul
inc
sub
enter
aam
into
stos
inc
outsl
adc
sbb
push
inc
adc
call
movsl
xor
insb
cs
xor
xor
sbb
sbbl
sbb
stos
cmc
stos
jle
pop
leave
fcomi
jmp
add
ret
call
cmc
pop
ret
mov
dec
fisubrl
hlt
je
and
dec
jge
and
subps
ret
ds
shrb
xchg
js
jl
xorb
push
test
or
inc
andb
push
mov
hlt
xchg
cmp
push
inc
inc
icebp
xchg
xor
mov
nop
push
adc
and
push
lret
inc
jl
jl
sbb
or
sub
shll
and
cmp
mov
inc
pop
adc
or
sbb
inc
push
test
cli
arpl
leave
pop
lds
icebp
shlb
loope
jne
xchg
pop
scas
or
inc
fbld
mov
fisttps
push
push
pop
sti
cmc
inc
push
dec
xchg
adc
mov
and
mov
in
push
fwait
pop
pushf
xchg
pop
xchg
inc
aad
dec
mov
jp
push
xor
mov
mov
lahf
jae
cmp
xor
cwtl
out
and
mov
es
fdivl
daa
mov
xchg
or
mov
mov
adc
popa
mov
inc
pop
ss
xor
xor
lwpval
and
aam
xchg
cmp
aam
aam
fldenv
sarl
sbb
rcll
dec
arpl
xchg
or
cmc
rcrb
or
xchg
sbb
nop
xchg
sbb
adc
adcb
jns
sbb
jmp
cs
fs
dec
seta
mov
fnsave
les
push
inc
xchg
mov
outsb
filds
rcrb
xor
xchg
and
xorb
xchg
mov
ljmp
cwtl
sub
mov
rorb
xchg
ret
fs
xchg
leave
rolb
pop
lods
and
or
jmp
pop
pop
cmp
call
cwtl
sub
xor
add
and
dec
dec
jl
stos
lret
xchg
inc
inc
test
movsb
icebp
jnp
in
add
or
push
adc
add
ret
push
adc
rorl
adc
adc
pop
adc
rcll
sub
in
ds
add
sahf
iret
inc
xchg
aaa
mov
loope
clc
mov
mov
int3
leave
call
mov
mov
mov
dec
out
das
push
in
mov
add
pop
insb
push
hlt
push
cmc
fxch
mov
inc
ss
mov
push
inc
cmp
rcl
inc
andl
cld
dec
inc
mov
mov
fldl
cmpsl
lods
aam
push
inc
inc
or
xchg
adc
cmpsl
pusha
and
in
lods
dec
push
fildl
pop
mov
cmpsl
push
pop
popa
gs
push
and
ret
call
loop
call
push
fcmovne
add
inc
enter
sbbb
clc
outsb
or
and
fucomi
nop
test
push
sub
leave
mov
push
xchg
mov
dec
push
pop
pop
and
fisttpl
adc
leave
dec
push
fistl
mov
fistpl
pop
mov
sbb
ret
pop
sbb
add
xor
fildl
fisttpl
xchg
mov
mov
cmp
or
rcr
dec
push
aaa
lods
sub
daa
sub
fdivs
jmp
mov
jns
adc
sub
rcrl
fildl
fldt
call
ljmp
xchg
mov
fistl
outsb
and
imul
je
fildll
nop
mov
dec
or
loopne
enter
jo
test
add
add
fdivl
add
ffreep
push
addl
adc
js
fucomip
in
pop
xchg
rcll
leave
sar
lock
loope
xor
mov
add
int3
jns
sbb
in
mov
mov
sub
mov
mov
mov
mov
in
mov
mov
les
mov
mov
xchg
mov
mov
xchg
mov
imul
push
mov
xchg
xchg
xchg
mov
and
sbb
sbb
and
idivl
push
jb
adc
lret
mov
enter
stos
mov
in
xchg
mov
push
repnz
mov
and
cmp
pop
mov
nop
sbbl
mov
enter
sbb
in
pop
cmp
mov
repnz
sbbl
lret
mov
inc
push
mov
cmpsl
mov
and
xchg
mov
push
jb
xorl
mov
enter
inc
mov
in
cs
push
repnz
mov
and
cmp
hlt
mov
rorb
in
mov
inc
mov
lcall
xor
out
or
jp
mov
scas
nop
pop
orb
fcoml
xor
adc
sbb
cmp
inc
dec
or
sbb
mov
and
call
xchg
and
cmp
les
cmp
cmp
mov
xchg
data16
inc
mov
adcb
mov
dec
dec
push
rolb
adc
pop
lock
inc
adc
adc
rorb
inc
adc
or
mov
shlb
shll
pusha
test
inc
push
sub
xchg
push
repnz
jb
dec
repnz
push
mov
mov
cvtpi2ps
inc
inc
enter
call
mov
pop
inc
inc
sti
testl
pop
icebp
insb
or
or
cmp
mov
sub
jg
push
push
rolb
incl
adc
out
imul
punpcklbw
inc
sub
inc
jmp
xchg
arpl
inc
inc
scas
push
in
dec
scas
sub
xor
ret
scas
cmp
xchg
scas
push
xchg
scas
movsl
gs
gs
push
mov
mov
scas
lret
inc
les
xchg
and
scas
xchg
movsl
mov
xor
xchg
push
shrb
jl
movsb
stos
pop
scas
mov
gs
and
sub
sub
lret
sarb
ds
fstl
scas
push
sbb
cmp
scas
lds
scas
sub
scas
adc
and
xor
movsl
inc
int3
scas
lds
scas
pop
push
pop
inc
ja
add
pop
mov
dec
lock
popa
movl
loopne
or
push
and
adc
jle
dec
inc
xchg
xor
int3
dec
stos
pusha
xchg
and
fnstcw
iret
scas
test
je
mov
and
shrb
sbb
test
dec
movsb
lcall
test
cwtl
gs
cwtl
gs
leave
test
sub
test
adc
sarb
xchg
movsl
shr
pop
test
or
pop
mov
xor
dec
jbe
sbb
inc
scas
push
cmp
xchg
outsb
or
addb
inc
mov
test
sub
call
sub
xor
test
hlt
xorb
ljmp
xor
pop
cld
jp
lahf
gs
adc
jno
lret
shrb
and
test
pop
jp
subl
or
pop
xchg
scas
mov
jbe
int
hlt
mov
xor
aaa
dec
adc
aam
dec
test
sub
test
fisttpll
pop
cmp
pop
cmp
daa
shrb
mov
add
push
call
sub
test
int
test
fsubrl
arpl
adc
and
inc
int
movsl
shl
sub
pusha
insl
add
sbb
sub
in
sub
mov
movsl
and
lret
xor
xor
shrl
and
xchg
movsl
test
xor
test
xorl
nop
jbe
cmp
sbb
mov
and
xchg
sub
xchg
sti
test
and
mov
lock
scas
cld
mov
mov
outsb
or
test
pop
xchg
test
xchg
movsl
jne
xchg
or
adc
mov
add
push
xor
push
or
pusha
xchg
movsl
xor
sbb
test
mov
mov
cmp
rcl
cmc
or
mov
js
int3
mov
add
test
data16
and
pop
mov
mov
flds
jbe
xor
sbb
je
or
stos
shlb
int3
mov
mov
xchg
and
in
cmpsb
or
test
cmp
jmp
inc
push
xor
add
pop
xchg
dec
das
test
add
je
mov
and
jmp
add
test
test
int3
mov
test
inc
sahf
aaa
dec
jp
mov
loop
andb
xchg
enter
shrl
mov
pop
fldcw
mov
sub
lahf
lods
adcb
sub
shrl
stc
xor
mov
test
or
or
adc
adc
cwtl
test
int3
mov
pop
jmp
test
sbbb
loope
push
mov
jnp
xor
xchg
jb
sub
arpl
lods
jb
pop
mov
in
out
xor
pop
test
mov
test
out
test
add
cmpsl
jmp
cmpsl
movl
add
movsb
add
in
shlb
inc
sbb
adc
imul
xchg
xorb
sub
cmpsb
test
fs
cltd
jmp
push
dec
mov
and
sub
mov
hlt
clc
cltd
fucomp
leave
fwait
push
mov
cs
jb
pop
or
jae
orb
loopne
test
ja
cltd
cmp
push
scas
push
xchg
sarl
pop
add
jbe
sbb
dec
mov
push
cmpsb
ljmp
jmp
mov
adc
inc
lahf
out
ds
loopne
push
testb
push
sub
mov
sarl
sbb
ss
repz
repz
pop
outsb
adcb
mov
or
repz
cmp
ds
pop
jb
repz
orb
stc
cmp
push
stos
adc
jns,pn
out
cmp
jbe
idivl
out
mov
jns
out
push
sbb
xor
dec
inc
ja
out
insb
addb
cmpsb
jbe
lds
push
dec
add
and
ds
lea
mov
add
loop
pop
sbb
dec
repz
push
push
mov
ss
cmp
add
push
clc
mov
shrl
mov
sbb
pusha
iret
aaa
mov
mov
out
add
inc
clc
mov
repz
js
mov
int
jns
add
test
adc
das
push
adc
xchg
sbb
jns
out
sbb
xchg
js
dec
imul
pop
jl
sarb
test
push
and
repz
sarl
jns
jp
jns
out
cmp
les
out
add
sub
dec
call
dec
inc
outsl
adc
test
cltd
test
and
push
cmp
out
sub
adc
add
cmp
repz
xchg
in
loopne
fmul
repz
ror
enter
cmp
repz
mov
movsb
mov
pushf
cwtl
xchg
nop
mov
repz
mov
iret
repz
insb
push
iret
repz
pop
push
push
dec
iret
repz
dec
inc
inc
cmp
xor
iret
repz
sub
adc
jns
out
add
nop
fmul
test
jns
out
push
repz
call
pusha
push
cmp
repz
inc
xor
or
cmpsl
stc
cld
mov
shlb
out
cmp
int3
data16
cmp
test
push
xor
jg
inc
out
testl
jle
mov
add
das
sub
pop
adc
add
push
enter
push
add
push
aaa
xor
push
push
add
leave
rcrb
jbe
pop
xor
push
jne
pushw
mov
es
xchg
outsl
push
jbe
push
mov
loopne
pop
sbb
mov
sbb
daa
add
insl
dec
push
and
aas
loop
sub
scas
test
mov
or
push
mov
inc
add
outsl
sarb
mov
mov
mov
ss
inc
pop
add
int
shll
jbe
add
sub
mov
cmp
mov
enter
push
aas
andb
shrl
in
sbb
les
inc
pop
rorl
xchg
outsb
xchg
cmp
insb
dec
pushf
fisttps
or
push
inc
lahf
inc
shll
dec
jle
pop
es
cmp
aas
sti
push
int3
fdivs
repnz
push
push
andb
fsubl
dec
clc
push
dec
int3
jbe
rorl
aam
les
fbld
mov
add
movnti
imul
test
dec
mov
inc
mov
pushf
add
xchg
add
popf
loopne
pop
cmp
inc
insb
pop
scas
outsb
cmp
cs
lahf
dec
outsl
ds
outsl
ds
jae
gs
push
nop
sub
mov
xchg
add
jbe
fsubl
dec
cmpsl
mov
cld
xchg
or
mov
push
scas
inc
enter
iret
fbstp
jne
notb
imul
jecxz
mov
push
outsl
and
push
nop
dec
dec
add
xor
and
and
and
add
mov
jae
mov
inc
outsl
xor
pop
lea
mov
adc
fwait
pop
push
cmpsl
mov
xor
sbb
call
add
loopne
fldt
dec
pop
nop
or
pop
lcall
mov
push
imul
cmpl
or
or
xlat
sbb
and
adcb
xchg
mov
mov
sub
push
mov
loopne
xor
shll
and
cmp
cmp
or
lods
bound
out
push
add
and
push
or
shll
push
and
leave
mov
xor
xor
add
es
mov
push
add
pop
sbb
mov
mov
sbb
ficompl
pop
inc
xchg
out
add
movsb
xchg
jle
pushf
cwtl
sahf
out
sahf
xchg
nop
mov
jns
pop
push
pop
dec
inc
iret
repz
inc
cmp
xor
sub
iret
repz
and
sbb
and
cld
xchg
hlt
xchg
in
repz
jnp
in
enter
cmp
mov
test
mov
leave
cmp
push
insb
in
iret
repz
fs
push
dec
mov
cmp
repz
and
add
in
xchg
push
iret
repz
enter
test
cmp
nop
mov
out
jo
pop
inc
cmp
repz
adc
lock
sahf
out
sahf
loopne
mov
sbb
jns
pop
outsl
mov
mov
out
pop
leave
or
adc
cwtl
adc
popf
mov
neg
mov
lods
mov
xor
test
dec
roll
add
pop
mov
bound
push
fisubrs
ds
pop
lds
cld
pop
enter
sahf
pop
and
outsb
pop
mov
in
stos
lcall
lcall
inc
aas
sub
aas
and
test
xchg
incl
inc
xchg
mov
je
xor
mov
mov
fnstenv
sti
inc
xor
rcr
xor
xor
cmpsb
cld
jg
mov
fwait
xor
adc
pop
ss
nop
ss
fwait
clc
fwait
pusha
sub
ss
popa
push
dec
sub
xorl
aaa
adc
sbb
push
ret
clc
mov
cmp
cmp
ja
xchg
popa
es
lret
loop
adc
cmp
cmp
cmp
cmp
cld
fildll
cmp
clc
cmp
xor
cmp
cmp
sbb
mov
mov
ds
ds
fdivr
lcall
add
ds
ds
ds
ds
aas
pop
aas
and
sub
xor
aaa
aaa
lds
inc
into
push
data16
jbe
sbb
aas
jnp
cmpl
movsb
aas
mov
sarl
div
jmp
outsl
jo
add
jl
xchg
cmpsb
mov
xor
jecxz
mov
pushl
sbb
lods
cmp
xor
add
mov
jecxz
sbb
pushf
xor
xor
outsb
adcb
cmp
xchg
mov
cmp
xor
adc
mov
jg
mov
dec
xor
xor
xor
test
pushl
xor
xor
xor
xor
xor
xor
xor
dec
sbb
xchg
ss
mov
ss
decl
xchg
mov
popa
or
push
add
sub
ja
clc
imulb
cmp
add
pop
cmp
rcrb
sbb
pop
or
cmp
xor
xor
cmp
cmp
add
sarb
inc
push
pop
cmp
add
cmp
pop
xor
sbbb
inc
fidivs
push
sahf
sbb
outsb
cmp
idivb
mov
cmp
cmp
cmp
dec
push
sbb
push
xor
cmp
cmp
cmp
cmp
add
cmp
hlt
cmp
inc
ds
ds
shll
xchg
ds
cs
aas
add
push
cwtl
xchg
xor
xor
lock
jnp
test
xchg
xor
push
xor
and
jmp
xor
xor
xor
xor
xor
filds
xor
xor
xor
outsb
xor
loopne
repnz
dec
ss
bound
aas
cld
xorl
ss
ss
icebp
push
sarb
clc
ss
ss
aaa
or
out
nop
icebp
lcall
inc
aaa
sub
add
adc
unpckhps
and
cmp
ret
clc
mov
sbb
pop
mov
test
mov
cmp
cmp
leave
push
in
jmp
repz
cmp
or
mov
sbb
and
es
cmp
cmp
and
push
cmp
jns
jle
xchg
cmp
cmp
fcmovb
cmp
push
add
cmp
cmp
cmp
cmp
cmp
cmp
push
adc
inc
aaa
push
fs
cltd
mov
mov
pop
shrl
dec
dec
xor
xchg
mov
aas
ret
aas
iret
dec
fsubl
jecxz
xor
into
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
jo
in
pop
xor
xor
mov
outsb
sbb
or
cmp
insb
icebp
jg
xor
ret
xor
xor
adc
push
ljmp
arpl
stos
add
ss
ss
icebp
or
adc
jne
jle
das
cmp
cmp
cmp
mov
in
cmp
cmp
ret
cmp
cmp
cmp
cmp
cmp
aaa
or
cmp
cmp
pop
ret
cmp
arpl
outsb
lea
mov
fnstsw
fildll
push
inc
out
ds
or
cmp
faddl
mov
scas
jge
push
fbstp
divb
data16
lcall
xor
xor
xor
xor
xor
xchg
jno
mov
fdivl
out
xor
xor
xor
xor
xor
xor
xlat
xor
ja
mov
pushf
ss
mov
jecxz
ficomps
adc
and
xor
push
shll
int
aas
jp
incl
pop
cmp
lcall
divb
cmp
and
ds
imul
dec
mov
lret
aas
lods
cmp
sbb
mov
mov
cld
xor
xchg
xor
out
sub
pushf
cli
cmp
cmp
dec
cmp
bound
stos
cmp
xchg
and
mov
sbb
mov
xor
xor
xor
js
cmpsb
ss
clc
mov
aaa
daa
jp
aaa
ss
aaa
dec
aaa
pop
aaa
fs
jae
pop
pusha
jmp
cmpsb
xor
xor
and
push
je
js
orb
pop
sbb
cmp
jle
xor
mov
popf
jb
push
mov
pushf
pop
lods
call
mov
je
inc
fdivrl
in
and
popf
xor
cld
cmp
xor
cmp
sbb
xchg
insb
jb
or
ret
xchg
popa
adc
sbb
xor
xor
loopne
call
xor
or
or
dec
sbb
xor
xor
sbb
sbb
and
sub
cmp
inc
xor
aaa
xor
adc
xor
push
pusha
pop
sub
xor
xor
es
mov
test
mov
mov
nop
xor
or
mov
mov
jbe
call
fdivs
add
xchg
je
js
sub
adc
xlat
aam
push
jle
jp
cmp
cmovg
push
xor
outsb
jo
bound
mov
cmp
dec
add
lret
fmull
lock
pop
daa
cwtl
out
shl
ljmp
cld
xor
xor
xor
push
insb
xor
xor
xor
xor
xor
jp
mov
add
xor
cmpsl
inc
ficoml
pop
xor
xorb
cmpsb
sbb
push
ret
xor
jb
xor
pop
pop
push
mov
fsubrl
in
call
xor
xor
xor
xor
inc
add
in
iret
inc
and
sub
xor
cs
jg
aam
xor
xor
xor
xor
xor
xor
pop
xor
pop
decl
push
mov
xor
xor
xor
xor
mov
mov
xor
scas
pushf
xor
bound
xor
xor
xor
xor
add
pop
into
shlb
int3
fiaddl
pusha
push
or
mov
xor
scas
test
ret
mov
cmp
mov
or
jecxz
xlat
sbbb
cwtl
add
decl
add
jns
test
int3
jns
in
add
jmp
out
test
push
xor
mov
or
sbb
push
inc
sar
jmp
insl
xchg
sbb
mov
add
in
cmp
mov
fdivr
lcall
xor
mov
jle
cmc
xchg
nop
mov
add
push
scas
pop
add
gs
xor
ljmp
cmpsl
cmp
cltd
pop
sahf
movsl
insl
cmc
pop
fcomps
and
sbb
cmp
push
aad
in
les
pushl
pop
dec
pop
addr16
pop
repnz
in
pop
shlb
sbb
pop
rcrl
lcall
insl
loop
cmc
icebp
iret
mov
aam
icebp
stos
jae
cmc
mov
mov
icebp
inc
mov
cmp
incl
adc
fmul
cmp
outsl
out
aam
jl
test
push
cmp
adc
dec
mov
pushl
pop
or
mov
jns
pop
add
pop
jne
dec
sahf
fistps
cmp
call
xor
ljmp
sub
adcl
mov
fadds
lods
xchg
call
lret
xor
push
jmp
scas
xor
or
cmp
and
inc
mov
add
in
push
test
mov
push
clc
sub
les
mov
cmp
popa
sbb
xor
jb
mov
mov
and
int
jo
hlt
jg
decl
outsb
movsl
xchg
in
enter
fstps
ficoms
shrb
mov
jnp
mov
jmp
inc
push
xchg
jno
inc
push
imul
push
pop
mov
out
pusha
lods
mov
jmp
aam
add
ljmp
mov
in
mov
and
movsl
call
enter
popa
aaa
push
outsb
pushf
push
and
push
ret
mov
jg
mov
lds
decl
fimull
jg
lock
xchg
ja
pop
lret
xorl
mov
ljmp
mov
mov
cli
xchg
out
or
cmp
in
into
sti
sti
xor
adc
mov
sbb
sub
js
xchg
adc
mov
jnp
mov
cmp
or
int3
cmp
dec
leave
sbb
fisttpll
inc
mov
jmp
push
loop
stc
xor
inc
cwtl
mov
xlat
in
or
nop
xchg
jmp
leave
orb
je
sbb
push
ficompl
mov
repz
pushl
movsb
adc
fs
jns
adc
add
cld
xor
insb
scas
in
mov
scas
or
test
call
cmc
sub
mov
jg
repnz
leave
lock
mov
fs
push
ljmp
and
cwtl
xor
sbb
mov
insl
sub
and
pop
lcall
push
mov
and
pushl
jge
sbb
xor
xchg
mov
out
test
insb
mov
inc
pushf
in
sub
xchg
xchg
mov
and
lods
rep
dec
mov
mov
cmp
mov
adc
lcall
push
mov
pop
lcall
jmp
decl
divl
pop
mov
cmp
jo
mov
popa
adc
loopne
stos
mov
jbe
mov
add
xorb
and
lods
pop
mov
cmp
decl
loopne
xchg
inc
add
xor
xor
pop
mov
push
lods
xchg
add
add
aam
pop
std
sahf
pop
push
lock
pop
outsb
lods
dec
xlat
mov
jp
xchg
scas
ljmp
cltd
lcall
addb
leave
int3
jle
dec
add
add
jnp
bound
jae
outsb
inc
dec
inc
lret
push
mov
xchg
call
xor
adc
sarl
inc
call
pop
xor
mov
sub
aaa
ljmp
cli
xchg
das
xor
add
cmp
or
jns
lret
lods
addb
dec
dec
adc
shlb
repnz
xchg
pop
inc
pop
jne
es
sbb
jmp
leave
ljmp
rol
cltd
aam
nop
test
jmp
es
fnstenv
and
sub
mov
imul
loope
lds
ljmp
scas
xor
fsubp
jb
xchg
xor
cmp
lret
jne
cmp
cli
jnp
addb
add
incl
inc
dec
jg
out
fbld
lods
add
and
cmp
mov
dec
sbb
fwait
inc
into
or
xchg
outsl
xchg
adcl
xchg
pop
fsubr
jmp
cltd
cmp
ss
loop
xchg
insb
gs
rcl
iret
hlt
mov
sti
dec
aas
mov
shll
out
sbb
add
jnp
cmpsb
in
lea
roll
shll
jmp
sar
lock
sahf
cmp
cmpsb
cmp
jg
popf
jno
sub
sub
pop
hlt
pushl
hlt
jl
and
les
xor
mov
repz
mov
jmp
rcrl
repnz
pusha
pop
jae
dec
ss
cmpsb
fldenv
ret
pop
mov
insb
mov
lcall
adc
inc
sahf
fsts
stos
push
xchg
aaa
or
sarb
shr
insb
add
fcomip
xchg
rcrb
lcall
or
sbb
ja
adc
jg
incl
sbb
int3
and
dec
loop
cmp
add
outsl
mov
xchg
mov
xchg
cmp
mov
lcall
push
fistps
imul
mov
sbb
ja
loop
scas
xchg
add
int3
call
ds
in
aaa
jmp
push
lods
call
mov
jne
gs
cmpsb
sti
mov
add
xor
add
push
sub
mov
inc
jge
das
mov
fsubrl
aas
outsb
movl
cmp
cmp
call
push
test
jae
dec
adc
mov
mov
ficoms
stc
cmp
movsl
cmpsb
add
fwait
ds
dec
scas
movsb
arpl
fwait
push
pop
inc
push
or
inc
fwait
pop
xor
add
cmp
test
add
addl
push
call
sbb
sbb
pusha
xchg
mov
and
rolb
adc
adc
push
ret
mov
dec
mov
mov
adc
cmpsb
and
cltd
es
xor
push
pushl
inc
imul
testb
scas
mov
or
pop
sub
mov
mov
cmp
sahf
fstp
sbb
mov
jns
mov
inc
pushaw
pop
rorl
push
mov
ret
jg
sbb
xor
rorl
pop
xchg
pop
sub
ffreep
mov
out
and
cmp
push
enter
insb
push
out
orb
mov
mov
ljmp
fldl
imul
mov
test
mov
mov
or
push
sahf
ljmp
cli
popa
cli
popf
dec
push
cld
adc
dec
nop
add
mov
cli
rorl
add
imul
mov
add
jbe
mov
push
jae
call
cltd
dec
out
in
xchg
xor
mov
sbbl
test
or
notrack
fbld
cmpsb
out
cmp
add
ljmp
mov
test
inc
jmp
jnp
sahf
add
sbb
fildll
jmp
movsb
mov
jle
cltd
mov
mov
mov
mov
mov
imul
test
ja
inc
fwait
call
ficomps
repnz
xchg
and
mov
das
and
jnp
cwtl
xchg
add
int
aad
jmp
mov
ficoms
pop
in
orl
and
inc
addr16
sub
jg
xchg
lea
push
lock
cmp
push
pop
xor
sub
add
call
cmp
mulb
cmpsl
xor
ja
out
lods
ret
mov
mov
or
dec
decl
das
xchg
mov
int
in
xchg
xor
arpl
mov
pusha
mov
pop
pop
xor
and
or
into
shl
ljmp
lock
push
int3
push
sbb
pop
mov
sar
jmp
data16
test
push
js
push
out
jge
push
arpl
stos
dec
js
popf
push
jle
insl
addr16
popa
dec
xor
aam
or
mov
add
in
shrb
jl
inc
jle
dec
mov
call
mov
sarb
fistps
test
call
roll
mov
jb
cltd
aaa
push
fldcw
insl
gs
test
aaa
fwait
ss
je
int
inc
cmp
ljmp
lcall
sub
loopne
ja
add
pop
scas
aas
aad
and
dec
adc
dec
fs
adc
mov
iret
xlat
pop
adc
adc
xchg
sub
call
mov
pop
and
xchg
lret
lds
lds
xor
jb
jge
sarb
aad
pushl
divl
dec
dec
mov
mov
add
mov
dec
jne
xchg
sbb
sbb
mov
fdivl
xor
add
fisttps
adc
inc
mov
stos
add
ljmp
ret
jns
adc
mov
test
mov
mov
pushl
ficomps
lahf
std
scas
je
lret
inc
inc
push
test
jb
fbstp
and
cmp
decl
outsb
daa
cmc
subl
fisubrs
cmp
pop
ja
cmc
dec
and
int3
xchg
test
int3
mov
call
add
aam
into
leave
cmp
dec
in
inc
sub
fsubrl
push
sub
rolb
sti
jmp
clc
add
mov
sbb
mov
cmp
ljmp
or
jno
rcr
push
popa
jl
cli
push
cmp
push
dec
lock
sub
jg
push
fwait
jnp
aad
rorl
out
fisttpl
mov
sbb
jo
lods
lret
pushf
aam
cmp
dec
out
scas
cmp
enter
xlat
mov
adc
sarb
mov
xlat
decl
fnstcw
xchg
pop
or
insb
or
inc
sub
pop
in
rorb
sar
push
sbb
gs
punpckhbw
inc
dec
or
pop
push
cmc
xor
xchg
shlb
incl
mov
leave
int
frstor
push
loop
repz
sub
xchg
mov
inc
test
pop
or
and
jmp
or
cmpsb
xor
mov
loopne
ljmp
leave
daa
adc
fwait
pop
cmp
and
negl
pop
xchg
add
call
fdivrs
std
insb
aaa
dec
push
clc
sti
lods
out
adc
mov
jmp
stos
inc
mov
mov
inc
daa
xchg
sti
icebp
jecxz
icebp
inc
aas
mov
jo
push
ret
imul
fs
loop
imul
jl
inc
test
nop
xchg
jmp
outsl
movsb
push
stos
jae
fwait
mov
arpl
data16
insl
mov
or
cltd
mov
enter
ljmp
adc
rcll
dec
bound
ja
loop
testb
mov
lcall
cld
loope
add
add
in
fdivrs
stos
arpl
xchg
loope
ljmp
in
popa
cmp
bound
add
dec
cmc
push
xor
dec
inc
mov
dec
movsb
jl
xchg
outsl
dec
sets
adcl
ja
or
jb
or
ljmp
lock
scas
pushf
bound
jae
shlb
inc
je
add
call
repz
sbb
sub
pop
fsts
pop
pusha
call
pop
sbb
add
push
jmp
sub
and
stos
lods
aad
pusha
les
call
mov
sbb
enter
mov
and
test
shrb
pushl
cmpsb
rcrb
mov
or
cmp
cmp
push
je
in
mov
loopne
ljmp
sub
es
or
mov
inc
mov
jbe
sbb
cmp
jmp
push
adc
dec
or
push
add
scas
adc
xor
test
sbb
call
outsl
adc
xor
xchg
repnz
push
je
inc
cld
cmp
es
mov
data16
dec
cmc
push
outsl
push
cltd
add
lds
lods
jb
jnp
pop
mov
test
sti
fiadds
pushl
cmp
mov
mov
cwtl
sarl
cli
js
mov
jg
adc
xor
je
push
insl
jne,pn
inc
add
inc
adc
inc
pop
mov
cmp
mov
decb
stc
xchg
or
mov
leave
push
scas
xor
mov
sbb
xchg
push
inc
or
cmp
test
fdiv
ljmp
stos
jo
sbb
fbld
xchg
jmp
in
ljmp
aam
adc
mov
xor
xchg
cmpsb
int3
lret
jmp
adc
jmp
xchg
cmp
jae
mov
mov
adc
imul
leave
mov
cwtl
cmpsl
xchg
xlat
pushl
mov
inc
cmp
gs
fucomp
in
pop
sub
jg
sbb
in
sbb
inc
cmp
xchg
jb
mov
iret
add
test
js
jmp
mov
sbb
clc
dec
fs
test
or
push
xor
mov
or
ljmp
jp
in
add
arpl
cmp
xchg
out
fadds
std
dec
mov
adc
sar
incl
and
mov
xor
subl
adc
push
or
jbe
scas
incl
adc
sbb
cmp
mov
jo
sbb
lret
jo
sbb
cmpl
pop
add
inc
xor
mov
mov
std
push
lods
movsb
movsb
sbbl
shrb
jl
push
cmpsl
loopne
rorb
loop
arpl
sbb
ja
out
js
adc
cmp
adc
gs
fdivp
jge
call
adc
jge
jno
and
xor
xorl
fcomps
loopne
push
and
dec
jecxz
jns
pushf
jne
xlat
push
paddb
mov
decl
lock
cld
ss
adc
mov
jbe
xchg
and
aas
bound
std
mov
push
jo
lcall
mov
mov
mov
add
or
push
mov
pop
js
jecxz
inc
jg
jbe
inc
cmpsl
out
mov
dec
into
and
push
mov
ds
or
dec
sbb
push
push
or
shll
sbb
dec
enter
cs
dec
incl
and
pop
mov
dec
push
push
js
xor
mov
cmp
call
sub
jns
stos
push
and
cmp
clc
cmp
mov
xchg
aad
fildl
inc
movl
enter
add
arpl
mov
movsb
adc
fmuls
mov
in
jmp
data16
popf
arpl
lds
mov
das
movsb
lea
pop
mov
test
call
xor
sbb
repz
insl
mov
dec
vmovdqu
nop
jle
adc
lds
jmp
mov
orl
cmc
dec
test
lds
xor
sbb
mov
popa
inc
push
xor
jb
lods
in
pop
xchg
repnz
outsl
mov
lcall
add
flds
jno
je
mov
add
cmpb
xchg
nop
sbb
fstl
incl
xchg
je
sbb
dec
push
or
dec
imulb
ja
cs
sar
jmp
and
sbb
fstps
xchg
xlat
inc
dec
and
stc
mov
inc
jbe
pop
push
pushf
fnstsw
aam
sbb
clc
cmp
dec
cs
pushf
sarl
incl
pop
mov
sub
xor
adc
mov
mov
sbb
adc
dec
mov
lcall
xchg
imul
roll
jnp
xchg
cltd
pop
or
mov
call
push
jmp
in
data16
xchg
and
and
and
jbe
popa
shrl
add
mov
fadds
cld
mov
stos
xchg
sti
fs
xchg
push
ja
decl
das
stos
loopne
test
or
idivl
add
andl
fldt
jnp
jae
mov
sub
pop
mov
call
jle
shl
in
dec
pop
in
add
sbb
jle
adc
jns
rcrb
lds
ljmp
lret
jno
jp
in
imul
shrb
xchg
jo
mov
in
jmp
push
adc
dec
notb
dec
aaa
xchg
repnz
call
add
dec
imul
cmc
fucomp
adc
sahf
sub
jp
jecxz
es
dec
aam
in
sti
addl
incl
out
mov
ljmp
add
jnp
xlat
xor
sbb
cs
incl
fists
mov
aaa
mov
pcmpgtb
cwtl
push
mov
daa
rcrb
clc
test
in
fisubrl
inc
lea
int
cs
cwtl
subl
lahf
cltd
insb
das
inc
ljmp
cmp
and
lods
xlat
xor
test
cmp
sbb
mov
cmc
pop
and
ljmp
insl
fmull
push
pop
push
ret
lods
and
daa
and
push
push
pop
call
jle
outsl
fxch
or
das
or
push
leave
add
nop
lds
cs
stos
jle
bt
cld
incl
int3
sbb
push
lret
pop
push
pusha
sub
or
sahf
cld
lock
push
lock
int
xor
add
mov
dec
stos
and
pop
out
xchg
test
cld
sub
push
lods
or
loop
push
or
call
push
push
dec
jnp
rcrl
and
dec
jmp
jl
repz
divb
pushl
mov
jmp
je
mov
xor
push
mov
dec
jne
ljmp
les
mov
mov
mov
xchg
testb
pushl
out
and
aad
mov
lea
or
push
inc
and
test
mov
sarb
inc
aad
add
adc
mov
cmp
decl
scas
dec
inc
sbb
pop
sti
jo
jbe
popa
or
jl
ss
or
js
call
push
jne
mov
dec
mov
inc
ja
lods
sbb
jg
les
add
mov
inc
push
inc
scas
arpl
pushf
add
incl
push
dec
ja
ud2
cmp
dec
pop
mov
push
scas
lock
and
pop
sbb
test
xchg
clc
push
das
mov
dec
dec
fs
mov
sbb
imul
in
xor
insb
sbb
incl
orl
nop
dec
out
rcr
int
adc
das
loopne
mov
incl
sub
xlat
imul
inc
popf
sub
gs
js
xchg
jg
sub
ljmp
fnstsw
lods
out
scas
cld
mov
cmp
les
in
call
xchg
lds
dec
pop
adc
imul
jo
mov
lahf
mov
xchg
inc
into
in
test
notb
mov
sub
cmp
fcomps
iret
or
adc
inc
jnp
jp
and
push
movsb
rcrl
jge
sar
fdivr
jmp
push
add
fildll
push
imul
nop
arpl
xor
pop
mov
mov
hlt
pop
mov
stos
fwait
push
out
xchg
ds
shrl
pop
pop
das
pop
hlt
lcall
and
shrd
roll
repnz
mov
mov
lods
jmp
lcall
rcrl
popa
fsubrl
xchg
je
push
pop
fstl
ljmp
jl
push
jmp
cmc
cltd
push
push
scas
ja
aas
gs
cwtl
test
loope
test
xchg
push
or
fcmovne
out
cli
out
cmp
jge
cwtl
adc
cwtl
xchg
int3
cld
or
sarb
call
inc
and
dec
fwait
ss
mov
stos
mov
popf
jmp
lcall
add
pcmpeqd
ljmp
pushf
pop
mov
push
shl
repz
xor
cmp
and
mulb
dec
pop
sbb
gs
fcomip
lret
sub
daa
xchg
inc
cmpsb
cmpsl
jl
test
pop
pop
cmp
push
pushl
dec
dec
cmpsl
scas
push
aam
or
lret
insb
dec
scas
jle
mov
or
in
jae
jb
shlb
push
xor
clc
cli
mov
pop
sub
aaa
and
xchg
ljmp
cmpsl
cli
out
mov
ljmp
cli
jo
hlt
cltd
out
pop
mov
pop
add
jecxz
cs
jl
dec
sti
scas
cmc
gs
scas
cli
pushl
sub
sub
enter
cmp
sub
lret
pop
or
lcall
push
cld
inc
ljmp
mov
in
mov
bound
mov
jno
sub
sub
sar
mov
ret
fs
aaa
pushf
cmpsb
adc
xchg
sub
cli
xchg
pop
pop
mov
adc
ljmp
jp
sbb
mov
xor
dec
xor
fistpll
jne
test
push
aad
xchg
shll
adc
jb
and
nop
push
pop
push
orl
fsubr
mov
push
xchg
popa
ret
pushl
clc
out
jge
lret
pop
xchg
cwtl
repz
inc
into
push
jg
mull
imul
jb
icebp
xchg
loopne
sti
jmp
jae
mov
pushl
push
push
dec
sbb
lret
jmp
jecxz
roll
and
in
fisttpl
fwait
mov
sbb
fcmovnu
push
js
mov
push
lods
lds
pop
pop
push
xchg
pop
lds
jg
jge
pop
addb
adc
imul
shl
dec
shl
inc
clc
jmp
sbb
mov
in
adc
je
cmp
push
mov
cli
mov
std
jnp
ljmp
adc
iret
pop
out
std
jle
loope
repnz
cwtl
in
and
dec
xor
xchg
bound
push
and
pop
fldenv
insb
div
fstps
shll
push
popa
stc
sub
ds
dec
sahf
in
sbb
movsb
lods
nop
jns
cmp
pop
pop
cltd
sub
ror
movsb
xor
scas
push
or
inc
repz
fcomip
incl
pop
les
shlb
jo
outsb
iret
push
sbb
ds
clc
inc
sub
lcall
and
int3
ja
insb
mov
or
pushl
insl
adc
sahf
push
mov
iret
cmpsb
jle
dec
inc
shrl
sub
int
lcall
jno
or
or
adc
in
xchg
jb
dec
sbb
ljmp
cmp
jge
dec
cmc
xchg
cmp
test
xor
ja
mov
sub
pushf
sti
jb
xchg
jge
outsb
fidivrs
shrl
sub
lret
cld
xchg
movsb
jbe
jb
lds
arpl
clc
sbb
repnz
inc
je
or
adc
adc
leave
lcall
out
pusha
negl
cs
imull
js
fs
adc
rcrb
andl
sub
inc
movsl
push
mov
roll
xchg
lods
fldl
ret
loopne
aad
jecxz
cli
fwait
stos
sub
jmp
xchg
mov
imul
repnz
loop
and
push
adc
add
lock
call
push
jno
sahf
or
scas
ficoml
mov
jne
lds
outsb
add
jbe
cmp
mov
mov
pop
mov
rep
lret
sbb
test
push
add
inc
add
jg
fildll
lcall
and
inc
les
call
in
aas
add
nop
fldl
in
dec
mov
aas
mov
inc
add
lret
aas
cmp
add
lret
stos
nop
jbe
ret
fsubrp
sahf
adc
stc
hlt
xor
xor
imul
lods
iret
ret
push
mov
adc
loope
mov
adc
pop
out
push
int3
pusha
mov
movsl
mov
insb
pusha
pop
popa
xchg
mov
ficoml
dec
xchg
or
outsl
pop
imul
sbb
inc
pop
outsl
xor
jmp
dec
lret
and
cmp
push
mov
es
test
incl
addr16
clc
stos
and
or
mov
pop
jnp
mov
sbb
call
int3
or
in
add
jge
xor
jecxz
cmp
imul
mov
lcall
aaa
pusha
cmpsb
cs
test
leave
ljmp
stc
scas
repz
stos
call
and
or
mov
jb
pushf
cmp
loopne
in
mov
push
sbb
mov
das
lock
dec
mov
out
rcr
pop
je
add
fnstsw
lock
adc
jl
jmp
add
dec
sub
xchg
mov
call
popf
jl
call
ret
cltd
pop
clc
jp
sub
int
popa
iret
add
pushl
inc
jecxz
jmp
ljmp
cld
mov
test
out
test
jmp
xchg
sub
pop
inc
insb
fidivl
dec
jp
movsl
mov
divb
inc
movsb
or
lret
lahf
int3
and
and
lods
lea
je
pop
cwtl
jp
push
adc
stos
adc
mov
add
jg
clc
adc
jg
sub
fs
into
cmp
jns
mov
mov
lods
out
add
js
hlt
subb
add
icebp
mov
push
jg
ljmp
mov
into
sbb
outsb
xchg
dec
popf
std
rcrb
dec
xor
pop
mov
data16
fcomip
or
inc
fwait
pop
xor
push
les
cld
jno
add
jg
mov
inc
push
add
add
stc
fdivr
push
mov
in
movsb
sti
cmpsb
daa
push
inc
sbb
test
sti
js
inc
icebp
dec
gs
pop
mov
es
call
in
push
das
movsl
shl
xor
test
mov
out
cwtl
in
sbb
lcall
stos
int3
pop
sti
dec
or
sub
test
in
mov
inc
fistps
les
std
jle
icebp
mov
pushf
pusha
pop
call
int
int
and
or
adc
into
call
inc
mov
jp
test
movsb
aad
dec
pushf
pop
mov
popa
orb
in
adc
scas
xchg
icebp
cmp
addr16
pop
or
repnz
aas
outsl
mov
xor
je
ficoml
sub
xlat
repz
lds
xor
decl
pusha
test
in
imul
xor
dec
test
jnp
fwait
push
jb
mov
stos
adcl
pop
sbb
int3
lods
stos
adc
pusha
mov
stc
imul
cli
lds
lcall
sbb
lods
mov
jno
xor
mov
popa
ret
pushl
push
aaa
cld
lret
ljmp
call
jb
adc
lods
xorl
inc
xchg
pop
and
jg
mov
or
sbbl
aad
mov
stos
cmp
mov
mov
sub
cmpsl
inc
pop
sbb
popf
popf
dec
test
stos
subb
pop
mov
das
mov
lcall
sbb
mov
lea
xor
aas
leave
pop
sahf
mov
hlt
out
mov
ljmp
xor
and
je
test
in
pusha
rorl
mov
inc
jne
pushl
push
xor
xor
cmpsb
pop
add
scas
popf
jae
mov
add
outsl
cli
inc
or
iret
sub
cmp
out
pop
inc
add
repnz
test
cmpsb
aaa
mov
aas
aaa
call
fadds
cmp
incl
adc
adc
inc
fisttps
fisubrl
mov
sbb
pushl
jl
jne
popa
jae
loope
test
lcall
test
dec
subb
int
icebp
test
xlat
mov
nop
mov
jmp
outsl
es
int
xlat
and
mov
inc
insb
call
aam
clc
add
sub
dec
push
sbb
cmc
enter
gs
addr16
pop
xlat
mov
inc
std
mov
dec
popf
add
mov
decl
push
sub
in
lret
push
and
test
mov
cmp
dec
pop
xor
lcall
xchg
mov
aad
cmp
jbe
sahf
and
sbb
lcall
push
es
jb
xchg
pop
jbe
pop
ficomps
pop
fwait
fwait
mov
jl
xor
cmp
icebp
add
mov
and
push
fisubrl
mov
sbb
out
jg
pop
adc
shlb
xchg
sarl
jmp
enter
icebp
out
leave
enter
jp
lods
subb
mov
pop
pop
add
cmp
lds
fiadds
clc
mov
fmull
and
call
sarb
ficoms
out
push
lea
jl
sbb
negl
out
shll
jp
sbb
ljmp
in
push
lret
cmpsl
mov
aam
dec
into
jp
loop
arpl
dec
add
mov
push
lods
out
fdivr
inc
enter
ljmp
jge
sub
addr16
test
fs
fisttpll
jmp
es
push
xor
pop
mov
jo
fisubrl
dec
push
add
cltd
or
mov
inc
push
adc
xchg
xchg
sub
xor
lcall
push
push
in
nop
cmc
fisttpll
xchg
ds
ja
mov
xchg
dec
call
fcmovu
inc
stos
sbb
fldt
cs
mov
in
fstl
repnz
xchg
inc
dec
inc
fsubs
mov
mov
daa
std
lcall
xlat
into
cmp
js
pop
mull
fsubs
mov
iret
aad
mov
mov
pop
pop
loop
pop
sbb
aaa
push
xchg
cmovbe
lahf
mov
mov
push
or
ljmp
int
jae
xor
out
inc
insl
stos
mov
add
mov
or
sbb
in
std
lock
sub
cltd
mov
dec
adc
cmp
and
pop
mov
mov
sub
mov
call
movsb
call
and
in
sub
ljmp
ljmp
xor
ret
pop
movsl
cmp
adc
jecxz
pop
and
lcall
and
sti
loop
and
push
pop
dec
xchg
scas
jge
push
push
and
mov
dec
into
scas
das
jne
or
jmp
lods
lahf
or
and
or
inc
fidivs
outsb
lods
mov
or
cmpsb
js
mov
push
lret
ret
dec
pop
lds
xchg
xchg
pusha
loop
jle
cltd
sub
pcmpgtb
pop
sbb
fmul
add
and
das
aad
scas
mov
pop
dec
sub
jg
lcall
xchg
add
popa
insl
xchg
xor
inc
stos
mov
adc
xor
sahf
cmp
das
cli
jmp
pop
out
stos
push
cmc
cs
push
inc
jle
pop
jne
pusha
leave
test
ljmp
sub
inc
andb
inc
or
pop
mov
mov
je
pop
pop
mov
or
mov
clc
mov
mov
mov
in
jg
pop
lods
std
out
test
cmp
adc
sti
pop
test
sub
arpl
std
mov
shrd
roll
lods
push
mov
inc
mov
mov
call
push
push
out
add
mov
mov
pop
jnp
jno
mov
sub
ljmp
jg
incl
aad
fwait
ret
orl
mov
mov
cmp
inc
push
xchg
mov
xor
xor
push
sub
cmp
add
mov
mov
ds
push
ja
mov
inc
clc
call
mov
dec
das
fsts
out
mov
repnz
aas
mov
ss
ljmp
and
aaa
enter
gs
pop
xor
mov
sub
ljmp
jg
adc
mov
jbe
andl
dec
adcl
incl
ja
sbb
sub
lret
lock
jno
sbb
push
jecxz
mov
mov
fnstsw
dec
sub
cld
pop
jle
and
aad
shrl
jg
xor
lods
mov
mov
add
lahf
jo
aas
jg
inc
jp
xchg
and
ljmp
call
sbb
ffree
xchg
call
add
or
lds
into
imul
hlt
push
in
out
lahf
out
test
movsl
inc
inc
add
mov
jb
aam
aas
popf
adc
cmp
inc
jmp
add
in
or
pop
ret
pop
mov
sub
or
push
cmp
ljmp
test
arpl
test
gs
test
fcmovnb
inc
faddp
dec
add
mov
in
jae
cmp
enter
push
fdivrs
aaa
dec
ret
xor
fs
mov
out
pushf
inc
xchg
outsl
mov
das
sbb
jns
jae
and
push
ljmp
push
pushl
in
int3
sub
loope
inc
int3
out
jae
ja
mov
lret
cmpl
sbb
ret
sub
adc
mov
mov
lret
fstpt
outsl
xchg
hlt
mov
jne
out
or
mov
dec
sub
dec
mov
iret
and
dec
lahf
or
repnz
sbb
mov
loope
xchg
add
mov
lea
movsl
push
lret
cltd
push
xchg
lock
test
popf
cmp
shl
mov
adc
fdivl
test
mov
je
mov
adc
cmpsb
iret
div
adc
sbb
adc
dec
insl
sub
jmp
push
in
push
sbb
jbe
pop
into
add
mov
ja
cli
mov
cmp
lods
pop
push
fcoml
push
out
pop
ljmp
inc
cmp
rcll
jb
fsubrs
out
jecxz
flds
mov
pushl
dec
dec
je
and
dec
js
loopne
pop
jae
jg
std
sub
call
pop
push
imul
mov
popa
or
push
scas
mov
pusha
in
mov
call
lcall
xchg
insl
or
scas
inc
dec
jne
hlt
xchg
movsl
mov
ljmp
decl
les
xor
sbb
push
es
sbb
sahf
jb
sub
mov
jmp
hlt
das
mov
lods
aam
icebp
or
lahf
cli
in
push
movsb
pop
bound
push
call
loopne
enter
jae
cmp
xchg
in
adc
enter
fcmovbe
adc
cld
decl
lock
or
or
inc
jg
mov
push
dec
dec
mov
lcall
push
fsubrs
push
mov
push
xchg
into
loop
test
jnp
pushl
or
int3
std
imul
jno
mov
scas
xchg
mov
dec
cmp
out
repz
call
and
mov
sbb
divb
add
push
inc
lcall
fistps
or
out
lock
lret
jo
imul
mov
fdivs
and
icebp
xchg
xchg
jnp
jnp
jg
cmp
jb
scas
mov
xor
lock
cmp
jo
xor
loope
sahf
cmp
call
cmp
xchg
daa
pop
jns
cltd
mov
pop
cmp
sbb
xor
movsb
sbb
xor
or
cmp
xor
xor
lcall
mov
lods
sahf
adc
nop
in
insl
mov
jp
mov
add
dec
jae
stos
repz
push
call
es
push
xor
mov
mov
test
or
test
aad
add
outsb
push
adc
jmp
push
xchg
jb
xor
and
daa
lcall
and
mov
ljmp
or
imul
cmp
push
nop
loopne
in
mov
in
popa
cmp
adc
in
cld
icebp
ror
jne
int
fs
push
int
lcall
sbb
sub
push
pop
dec
dec
mov
push
lods
xchg
dec
lahf
loope
int
sbb
cmpsb
pop
inc
fistps
xchg
jo
push
mov
in
fldenv
add
ror
sub
fstpt
cs
in
adc
jle
jmp
push
inc
and
xchg
dec
lods
inc
dec
dec
push
sbb
inc
xchg
in
out
out
inc
mov
mov
pushl
sbb
int3
inc
pop
mov
dec
rclb
inc
sbb
jle
icebp
test
fistps
iret
dec
pushf
das
xchg
cltd
adc
shl
mov
insb
lcall
cmp
pushl
lret
add
pusha
mov
loopne
pop
nop
xlat
rorb
out
sti
cld
adc
ficoms
mov
pop
jge
fdivr
jmp
pop
push
ret
fdiv
stc
mov
lods
inc
in
subl
movsb
bound
jnp
sti
js
addr16
dec
std
outsl
xchg
jo
cmpl
cmp
shll
aas
mov
lock
mov
mov
inc
ja
inc
aad
pushl
jl
mov
in
jmp
push
enter
add
bound
int
cmp
xor
jg
arpl
divl
arpl
and
mov
sbbb
jge
cmp
call
jbe
mov
or
movsl
arpl
push
and
mov
cs
mov
decl
iret
and
test
scas
loop
pop
addr16
cwtl
outsl
xlat
dec
rcrl
mov
popa
fdivrp
lcall
adc
adc
add
push
stos
mov
fadds
daa
nop
pop
jno
dec
lahf
inc
xor
ljmp
addr16
out
das
pop
push
icebp
adc
and
xlat
cmpsl
shlb
fadd
jmp
fistl
fdivs
add
loopne
out
inc
sbb
cmp
popf
inc
pop
dec
push
mov
test
sbb
popf
clc
dec
sbb
call
jmp
aas
push
dec
xchg
dec
mov
push
jp
stos
or
into
icebp
mov
xchg
es
xchg
mov
adc
cs
pop
pop
shl
sub
jecxz
cmp
filds
pop
rol
cmc
inc
inc
jo
cmc
fisubrs
mov
call
inc
cmpsl
lahf
fisubl
jl
push
lds
cmc
pop
fs
xlat
or
fxch
sbb
pushl
in
mov
lahf
leave
test
je
addb
test
mov
aas
sti
scas
sar
jl
jmp
jnp
lock
popf
call
or
xchg
out
cld
cmp
rcrl
adc
mov
add
dec
call
cmp
sub
push
xor
cmp
fnstcw
inc
ja
cmp
adc
sbb
and
arpl
lcall
jmp
cvtdq2ps
sbb
jle
push
xchg
sbbb
lret
ljmp
add
std
cmp
mov
add
and
xchg
fistps
shrl
inc
call
cld
scas
pusha
scas
ret
je
push
push
ds
mov
jnp
pop
and
pop
in
outsl
ljmp
push
cmp
adc
jae
daa
arpl
cmc
fistpl
repnz
cld
and
jmp
stc
test
jecxz
movsl
addr16
inc
dec
mov
loope
jno
sbb
inc
shlb
lret
mov
ror
push
cmpsb
adc
mov
inc
jp
sahf
fwait
adc
jnp
xchg
push
xchg
ret
je
inc
outsl
pop
cs
xchg
lcall
mov
mov
lods
adc
or
xor
nop
inc
dec
cld
lock
stos
jbe
mov
loopne
stos
dec
gs
mov
outsb
adcb
dec
lods
inc
cmp
loop
push
inc
jne
sub
aas
jno
pushl
push
cmpsl
mov
xor
mov
test
pop
xchg
dec
add
stc
mov
mov
fdivl
sub
jbe
sbb
imul
lods
mov
lcall
pop
mov
xor
flds
call
dec
std
daa
push
imul
mov
push
popa
pop
sbb
stos
movsl
scas
arpl
sbb
scas
cli
add
cmp
sbbl
push
inc
movsb
sar
jmp
ds
shrl
jno
pop
mov
jbe
cmp
pop
dec
stos
jecxz
pusha
int
fisttpll
cli
outsb
sub
cli
jg
cmp
cs
mov
sbb
je
mov
lcall
mov
fwait
or
adc
ja
outsb
mov
push
push
iret
push
pop
jg
pusha
lahf
and
push
sti
inc
subl
in
aad
mov
mov
xor
pop
push
adc
pushl
adc
lds
loopne
mov
jne
jp
push
mov
ds
adc
mov
jnp
mov
daa
ja
cmpsb
je
test
push
das
add
addr16
mov
cmc
loope
push
sbb
mov
and
xchg
nop
inc
mov
dec
mov
xchg
sbb
pushl
test
dec
sub
inc
aas
adc
out
lods
popa
imul
cmp
pop
cld
lcall
push
push
sahf
cmpsb
sub
call
dec
stc
nop
imul
push
pop
sub
shl
push
or
decl
or
add
dec
inc
std
stc
add
lahf
jl
jge
push
outsl
cwtl
jmp
out
incl
mov
pop
outsb
testl
imul
xchg
ret
sub
ja
scas
mov
incl
mov
mov
pop
or
push
jmp
push
or
repnz
xchg
fstps
aad
out
jg
jmp
popa
mov
inc
pusha
mov
nop
int3
mov
lret
dec
push
lret
pushl
or
sub
pop
cmc
stc
sbb
sbb
mov
sbb
lcall
ljmp
mov
add
sbb
or
test
or
mov
mov
jmp
lret
jecxz
fwait
push
lret
mov
mov
inc
pushl
dec
cmc
xor
xchg
push
stos
or
xor
ret
mov
push
xor
cli
pushl
ja
out
sahf
cmpb
sub
cmp
mov
xor
adc
filds
gs
ss
fcompl
cs
xchg
push
dec
dec
adc
jge
ljmp
outsl
fcmovnb
sbb
pop
fwait
and
icebp
lahf
push
add
sbb
arpl
movsl
inc
push
out
mov
icebp
mov
hlt
push
jl
ja
push
loopne
push
lret
mov
inc
shlb
aas
rorb
xor
and
sarb
out
outsb
or
jne
movb
mov
repz
jo
mov
xor
fisubl
pop
hlt
ljmp
jle
cs
mov
subl
mov
cli
dec
jmp
dec
fiaddl
mov
out
dec
or
leave
es
clc
add
in
and
in
fsubrs
jle
int
jmp
mov
orl
pop
orl
xchg
sti
mov
repz
sub
cmpsl
mov
in
roll
stos
or
push
arpl
mov
lods
test
add
adc
xor
dec
xchg
call
adc
jmp
les
cmp
incl
insb
mov
pop
data16
inc
ror
xchg
fcmovb
xor
mov
cmp
mov
int3
gs
insl
fsubs
incl
outsl
popf
popf
add
push
xor
in
mov
inc
jge
fistpll
xcrypt-ctr
cmpsl
pop
imul
push
lahf
lds
adc
jns
mov
cmp
fnstsw
outsl
add
shlb
cmc
ljmp
addr16
movb
inc
insb
sti
fisubrs
and
insl
into
pop
data16
pushl
mov
pop
repnz
mov
mov
inc
ret
jbe
mov
inc
ljmp
xchg
int3
cli
mov
jge
push
and
fldenv
ljmp
out
push
lret
or
xchg
leave
mov
sub
aam
shr
scas
xor
mov
or
and
test
adc
mov
jg
dec
movsl
hlt
xchg
stc
xor
fsub
xor
jl
cwtl
mov
push
dec
sub
cld
jg
lret
jbe
movsb
mov
int3
dec
and
cltd
and
add
shlb
lds
inc
addl
mov
sbb
jg
decl
aam
jp
mov
int3
out
test
sbb
in
rol
into
and
inc
fisttpl
divl
push
add
cmc
jbe
daa
enter
ljmp
or
xchg
sub
int
or
sar
adc
dec
fcomp
fcos
incl
inc
shlb
in
or
add
lea
out
decb
sti
sub
mov
repnz
out
xchg
aaa
into
push
xor
cmc
imul
or
mov
pop
ljmp
mov
scas
mov
push
ror
jnp
sbb
mov
mov
push
mov
out
out
loop
in
loop
lcall
dec
aam
and
insl
mov
fiadds
bnd
sub
call
int
adc
ss
xchg
fsubl
mov
dec
lret
cs
lcall
lcall
xor
jnp
fcmovnb
pusha
pop
fisubrl
es
mov
ljmp
jmp
iret
pop
jno
movsl
mov
cmp
xchg
fisttpl
jb
scas
inc
pop
dec
sbb
std
mov
jmp
pushl
xchg
push
mov
dec
sti
ret
ds
mov
test
adc
cli
cmp
ljmp
mov
push
adc
or
xchg
push
add
or
jge
ljmp
inc
mov
sub
mov
inc
inc
ljmp
sbbl
fisubl
mov
mov
mov
fadds
call
jl
dec
outsb
outsb
push
movsl
add
sti
int3
xchg
lret
insb
les
int3
sbb
inc
or
insb
repz
incl
popf
mov
adc
mov
sbb
and
pushl
jle
push
mov
shrb
and
out
and
pop
cmp
fldt
popa
mov
jmp
push
dec
push
cmc
stos
cmpsb
pop
loopne
jns
cmp
pop
aam
test
jmp
add
pusha
icebp
or
in
mov
cmp
out
and
lahf
or
xor
add
ljmp
push
sbb
repz
out
mov
jae
adc
jae
push
mov
sub
mov
xor
ja
jmp
add
and
cmp
mov
push
mov
sbb
fmull
sub
cmp
cmp
sub
ljmp
sub
jno
repz
jge
ror
popa
adc
lcall
cmp
stc
mov
arpl
adc
test
sub
test
sub
pushl
xchg
in
cmpsb
andl
inc
call
loop
push
add
and
rcl
enter
add
fidivrs
or
call
dec
hlt
pop
int3
fnstsw
add
cmp
test
decl
inc
pop
das
lcall
aas
fnstcw
dec
cmp
popa
and
xchg
dec
mov
jge
dec
and
lock
test
mov
pavgb
xchg
cld
mulb
pusha
adc
sbb
pop
pusha
lds
or
push
sub
call
xchg
push
notb
ljmp
rolb
mov
jno
flds
sar
mov
add
mov
dec
daa
and
sub
es
stos
dec
xchg
mov
das
in
adc
xchg
jmp
jle
sub
lods
mov
cli
cld
test
test
scas
dec
mov
inc
xor
dec
into
sbb
jg
fistpl
mov
or
fdivr
mov
addr16
jle
jle
push
jecxz
pusha
xor
repz
rcrb
lods
shrb
cmp
out
mov
adc
mov
add
shr
ljmp
jne
filds
mov
mov
mov
int
pop
xchg
xchg
sub
adc
xchg
sub
call
fst
fwait
or
push
pushf
iret
mov
popf
out
out
jecxz
sbb
pop
call
mov
dec
mov
dec
pop
xor
rcr
ror
out
pushf
sahf
inc
aad
push
ficoms
stc
pop
mov
clc
fld
sub
sub
notb
jecxz
testb
xlat
add
jne
adc
dec
pop
mov
je
pushf
mov
fucomi
fisubl
lret
in
jnp
sbb
cmc
inc
or
dec
imul
enter
adc
inc
xchg
aad
jbe
call
lea
push
insb
sbb
dec
rcrl
ret
decl
and
popa
fisttpl
xchg
inc
mov
mov
sub
outsl
pop
fiadds
mov
lret
call
mov
jae
sub
sub
dec
call
pop
andl
sub
rolb
dec
and
iret
ja
xchg
sub
aaa
or
jg
mov
cmp
mov
mov
stos
cld
les
shll
dec
mov
cli
lcall
jns
out
xchg
pop
stc
xchg
popa
int
out
pop
xchg
cld
jecxz
mov
jp
orl
ret
jns
cwtl
and
addr16
test
decl
xchg
mov
dec
mov
jb
adc
or
or
ret
mov
pushl
repnz
jae
push
adc
jnp
shlb
popf
dec
mov
add
lret
push
and
sub
popf
and
and
addr16
subb
loop
lcall
sub
mov
jo
sbb
xor
les
das
cli
mov
arpl
das
xlat
ds
xor
mov
jnp
lods
or
std
xlat
cmpsb
cmp
sub
xchg
loopne
add
loopne
shlb
repz
pushl
popa
push
ret
lcall
das
arpl
mov
add
mov
push
mov
cmp
lods
push
cwtl
adc
cmpb
inc
mov
hlt
sti
loope
aas
jle
js
adc
call
std
fwait
call
pushf
add
pushf
mov
rcll
je
xor
pushl
pop
mov
iret
sbbl
out
in
jge
pop
mov
inc
bound
jae
std
mov
incb
jmp
aam
in
mov
ss
rol
cmp
decl
adc
inc
sti
jp
jbe
pop
shrl
rorl
jp
or
jmp
pushf
add
cmp
pop
and
xchg
cmp
xor
pop
jle
fisubrl
mov
xor
sub
or
mov
dec
in
in
pop
call
sbb
outsl
cli
push
add
ljmp
dec
cld
pop
inc
div
call
mov
push
dec
std
incl
mov
fstpt
mov
sbb
jns
js
add
sti
pop
dec
mov
mov
adc
push
cmp
dec
imulb
insl
inc
int
and
and
add
inc
rol
incl
mov
pop
stos
xor
notb
pushl
push
sbb
addr16
jno
mov
pop
dec
mov
in
dec
mov
push
dec
fs
stos
jecxz
subl
lret
scas
dec
adcb
cli
sbb
mov
jge
ljmp
xchg
mov
xor
ja
stos
cld
xor
inc
jmp
mov
cs
push
dec
sub
cltd
testb
mov
das
jo
dec
addr16
lds
xchg
test
pop
sbb
mov
xor
js
cmp
shlb
js
ficomps
scas
mov
or
popf
xchg
je
xchg
daa
loop
loop
mov
mov
enter
icebp
jmp
cltd
xchg
adc
sub
outsb
mov
or
repz
je
mov
dec
aas
jns
insb
sbb
addr16
call
ljmp
mov
int
add
cmp
inc
push
cmc
or
pop
jnp
add
mov
sar
xorl
pushl
cld
test
fistps
dec
sub
mov
movsb
popf
cli
push
push
pop
testl
call
adc
jecxz
aas
aaa
sub
pop
and
cs
dec
mov
fiadds
or
xlat
push
pop
ret
xor
out
lcall
ret
mov
movsl
push
xor
jne
push
xchg
adc
fs
cmpsb
xchg
xor
inc
xchg
pop
and
mov
call
pop
sub
mov
frstor
movsb
or
call
pushl
enter
call
push
fadds
ljmp
lahf
jae
lcall
cmp
leave
sub
ss
leave
stos
mov
jno
fucomip
pushf
iret
mov
mov
scas
pop
mov
mov
jbe
in
addb
clc
pop
xor
in
hlt
std
decl
xor
out
mov
imul
jecxz
js
pushl
addr16
das
adc
mov
dec
data16
mov
call
adcb
dec
xchg
push
shlb
add
mov
sub
in
and
rclb
outsl
imul
xor
adc
xor
imul
or
call
xor
les
daa
shll
cmpsb
ja
test
les
inc
dec
pop
movl
push
imul
out
pop
jbe
jmp
fidivs
dec
inc
pop
shl
ds
pushf
aad
push
sti
and
out
in
arpl
push
push
fbld
rcrl
jl
divl
sti
testb
in
jb
dec
popa
fstps
out
cli
sub
faddl
mov
sub
inc
mov
dec
push
into
outsb
add
fsubs
adc
fcomip
out
loop
mov
pushf
pop
loope
adc
popa
jle
rcr
dec
fistps
or
jmp
idivl
jl
nop
xor
xor
jne
sbb
outsl
mov
int3
mov
lock
mov
aaa
std
ds
mov
lret
test
push
ret
xor
fldenv
inc
inc
test
jmp
rclb
pop
dec
mov
fdiv
test
mov
push
mov
xor
xchg
out
sbb
mov
lcall
sub
das
test
cs
pop
push
xchg
sbb
mov
sbb
inc
int
addr16
fimuls
es
mov
sub
aad
rol
mov
lds
in
xor
xor
pop
in
jnp
mov
push
or
mov
dec
das
das
fidivrl
test
pushl
sbb
std
pop
xor
aam
decb
mov
pop
adc
mov
call
fmuls
cltd
xchg
fidivl
insl
jmp
inc
push
jl
loopne
in
add
test
pop
mov
dec
outsl
push
mov
ficomps
in
jecxz
popa
push
outsl
xchg
icebp
lcall
xor
and
mov
or
sbb
cld
xchg
jbe
jge
inc
stos
gs
shrl
invd
fstp
filds
or
incl
or
popa
rcr
ret
xchg
enter
in
scas
iret
test
mov
aas
inc
gs
insb
jmp
test
imul
icebp
mov
mov
xchg
mov
mov
daa
shl
std
or
add
inc
cld
decl
lods
stos
jl
data16
dec
dec
adc
mov
adc
stc
pop
sbb
xchg
pop
jle
clc
or
xchg
adc
mov
cld
add
jns
incl
repz
mov
mov
outsb
xchg
cmp
pusha
adc
mov
incl
inc
or
mov
mov
fbstp
pop
xor
cli
inc
xorb
in
sub
cmp
sbb
push
mov
mov
xcrypt-ctr
cmpsl
popf
hlt
dec
in
rcll
mov
pop
decl
sbbl
add
xchg
sbb
xlat
idivb
mov
jmp
inc
mov
je
fwait
repnz
pop
dec
loope
sub
jmp
fnstcw
loope
xchg
mov
add
cld
scas
divb
inc
sub
stc
and
cltd
sti
test
sbb
imul
ljmp
cli
lods
mov
xchg
sahf
dec
int3
jmp
scas
mov
clc
dec
lcall
or
mov
insl
pop
pushl
divb
les
je
test
xlat
xlat
loop
gs
sbb
jnp
pop
mov
jmp
pop
das
js
int3
cmp
ss
or
mov
inc
mov
sub
add
or
ret
dec
dec
sbb
addb
and
jmp
pop
inc
push
xchg
mov
pop
lret
into
cmp
mov
loope
data16
jmp
push
or
popa
ficoms
push
std
sbb
in
in
pop
andl
rcrl
jg
mov
sub
mov
dec
dec
scas
movntq
add
inc
repnz
std
fwait
add
into
or
push
loope
cmp
pop
cli
push
decl
ljmp
mov
xchg
rolb
adc
sbb
mov
jg
or
adc
incl
sbb
in
dec
mov
push
add
js
inc
scas
inc
push
mov
idivb
add
subb
or
fwait
sbb
jne
imul
cmc
aam
jecxz
jge
sbb
adc
decl
lahf
shr
fsubl
repnz
adc
pop
iret
rorl
incl
sbb
mov
imul
xor
cld
aas
sub
jle
scas
jnp
dec
sbb
or
fbstp
lcall
sub
pop
sbb
popa
rol
or
push
pop
push
shrb
mov
aam
lret
push
jae
push
xchg
enter
push
repz
jno
lods
call
out
push
sbb
jg
into
add
stos
adc
jg
ljmp
out
mov
pop
push
loopne
mov
or
and
cmpsl
dec
cli
xchg
xchg
dec
xor
fisttps
xor
dec
cmc
decl
and
or
xchg
imul
hlt
adcb
decl
lcall
sbb
mov
jecxz
pop
jne
cmc
add
pop
sub
call
movsl
inc
xchg
dec
insb
cli
push
insb
pop
jne
test
cmp
jp
add
pushl
leave
mov
add
daa
push
arpl
xchg
push
or
out
sarl
dec
xor
jmp
sub
testl
push
imul
cmc
jbe
das
inc
ret
inc
sub
leave
inc
aam
adcb
push
pushl
cmp
jbe
in
cmp
addr16
int
shrb
std
sbb
lds
imul
push
rol
in
mov
mov
cmp
std
cli
xor
dec
add
insb
std
dec
push
xchg
mov
xor
push
dec
inc
je
or
idiv
decl
dec
enter
stos
imul
cwtl
mov
add
xchg
clc
faddl
or
xlat
popa
leave
pop
insb
in
call
pop
add
mov
mov
jg
push
arpl
leave
push
into
lcall
and
dec
incb
mov
xchg
cld
xchg
mov
int
in
cmpl
cli
xchg
lock
jmp
sahf
sub
mov
cmp
jg
or
or
xorl
fwait
add
inc
mov
or
scas
push
mov
jl
popl
jg
push
push
insl
jno
inc
or
incl
cmp
in
add
push
repnz
inc
sbb
jg
btc
jb
cmp
fidivl
sub
inc
xchg
dec
decl
mov
mov
aaa
dec
dec
jns
repz
pop
mov
outsl
inc
fnstenv
push
pop
sbb
push
push
fs
mov
inc
scas
cmpsb
mov
sbbl
call
mov
add
jno
sub
sub
push
xchg
jecxz
mov
out
imul
out
aaa
or
mov
lret
int3
jns
lahf
pop
lret
mov
sahf
mov
dec
mov
mov
incl
jecxz
or
out
mov
mov
scas
insb
in
cmp
sub
xchg
jp
shrl
cli
push
outsb
adc
add
cmp
sub
dec
inc
mov
incl
loopne
ss
fldlg2
sub
cmp
pop
scas
jl
jle
and
add
pop
adc
scas
cltd
enter
pushl
ja
lahf
jge
test
cmp
push
xor
jne
add
divl
in
iret
inc
mov
lock
pushl
inc
add
xor
lods
int
sbb
pop
cmp
sub
call
sub
push
arpl
cs
push
into
push
rolb
addl
aaa
into
dec
add
decl
icebp
push
loopne
mov
iret
mov
imull
lahf
outsl
pop
daa
mov
mov
inc
icebp
pop
adc
loop
adc
sub
fisubl
movl
ljmp
test
leave
sti
lret
push
push
xor
int3
cmp
cltd
mov
and
adc
vpmulhw
dec
push
pop
cmp
push
jb
andb
jmp
mov
rcrb
mov
adc
mov
and
out
stc
insl
dec
sub
lock
xchg
cmp
add
sbb
cmp
jno
sahf
inc
push
mov
std
mov
or
push
jge
js
xor
inc
mov
jbe
pop
adc
add
loop
sar
pushl
enter
bound
or
insl
pop
cld
sbb
jg
pop
sti
inc
sbb
pushw
in
push
das
jp
cmp
aas
filds
mov
out
sub
xchg
jge
push
pop
xor
add
mov
sbb
push
fwait
cli
and
sbb
push
cmpsb
sarl
jmp
inc
push
jns
fcomi
test
sub
inc
pshufw
cmp
jg
pop
push
fs
xchg
xchg
jg
out
fcomi
aas
test
or
pusha
jno
add
addr16
lahf
mov
push
cltd
lret
call
inc
xor
inc
cmp
xor
out
cmp
ss
es
addr16
ljmp
adc
bound
lock
add
popf
sahf
pop
push
loopne
ficomps
arpl
shll
scas
cli
lcall
in
adc
inc
pusha
leave
inc
dec
enter
xchg
push
sarl
pop
xlat
add
cmp
cmp
push
push
repnz
in
mov
cmc
fcoml
pushl
ret
mov
enter
out
sar
dec
adc
push
xchg
fnstsw
push
cmovne
aad
jmp
test
mov
sbb
movsl
push
dec
xchg
inc
cltd
mov
adc
jp
cmp
inc
mov
jg
jo
stos
lahf
mov
pop
bnd
rclb
pushf
rclb
mov
ljmp
les
imul
or
decl
fucomi
push
negl
arpl
and
rclb
stos
mov
push
and
add
inc
scas
icebp
icebp
jb
jl
repz
xor
fsubrl
jle
call
or
sub
mov
add
imul
popf
mov
push
inc
shlb
ljmp
addr16
pop
sub
jge
insl
std
nop
push
push
pop
insb
push
shrl
mov
ljmp
pop
fldcw
stos
sahf
dec
and
icebp
xor
test
incl
outsl
sbbl
gs
sub
roll
stos
in
std
push
mov
mov
cltd
loope
mov
push
inc
les
xor
pop
adc
push
cmp
ja
int3
lds
push
int
nop
pop
cmp
in
fsubs
repnz
loope
xchg
test
mov
cld
cmc
push
mov
lcall
mov
pop
rorl
ficoml
daa
mov
out
and
incl
or
not
stc
mov
sbb
cmp
dec
mov
adc
mov
dec
pop
lret
pop
test
xchg
subl
or
clc
fildl
dec
testl
div
xlat
jp
xor
mov
loop
push
or
pushl
mov
mov
push
and
test
pop
out
mov
or
int3
bound
xchg
cld
lcall
loope
mov
fcompl
xorb
pop
incl
jns
mov
sti
mov
jmp
xor
lcall
adc
into
lcall
add
push
fdivr
decl
lock
mov
sbb
mov
mov
xchg
lcall
ss
sub
ret
pop
xor
xor
imulb
and
mov
out
or
dec
leave
mov
or
ret
jnp
inc
xchg
fldt
div
shlb
decl
notb
lret
jb
push
and
mov
add
in
sbb
mov
jl
cmpsb
rcl
cltd
scas
sbbb
xchg
add
decl
out
lahf
sub
jbe
mov
mov
cwtl
inc
xorl
ljmp
add
pop
loop
sub
and
cmp
in
jmp
jmp
lods
lcall
stos
ret
mov
fldt
and
mov
imul
jle
mov
in
sub
test
js
cld
cmp
lcall
mov
fdivr
call
jmp
loopne
xor
dec
dec
dec
out
pop
div
rcrb
xchg
sbb
push
xchg
mov
cltd
jbe
out
sub
outsl
addb
leave
cmp
xchg
lcall
xor
stos
mov
jp
mov
jno
push
add
ljmp
sbbb
pop
mov
fs
adc
xor
sbb
decl
sbb
add
sbb
lds
out
lods
push
cmpl
lahf
incl
into
push
aam
nop
cmp
xlat
repnz
pusha
push
mov
icebp
shll
mov
call
lock
push
inc
sbb
fnstsw
mov
lret
rclb
sub
cmpsb
xchg
je
xor
lods
pop
inc
xor
and
idivb
mov
es
out
xor
jle
pop
ss
idivl
leave
mov
pop
cmp
xchg
leave
sarb
or
loope
mov
xchg
pmaxub
incl
clc
lret
aam
adc
out
aad
rcl
bound
jle
movsb
and
mov
out
pusha
xlat
clc
fnstsw
or
push
ss
dec
aaa
inc
lcall
pop
aad
hlt
ja
stc
inc
push
jmp
loopne
xchg
js
ja
xor
decl
mov
mov
dec
sti
mov
das
out
sbb
jmp
filds
in
xchg
outsb
std
incl
sub
sbb
sub
xchg
pusha
fists
incl
clc
mov
push
jmp
lea
push
mov
or
or
decl
inc
jmp
aam
cmpsb
nop
lret
insb
xor
dec
pop
call
cmp
mov
ret
test
lds
imul
call
jmp
dec
cld
and
in
icebp
idivb
sub
lahf
test
mov
adc
dec
insl
ljmp
lods
push
fcmovbe
dec
mov
fsubs
push
or
imul
xchg
adc
test
jo
fistl
adc
xor
out
push
pop
mov
add
decl
cli
jl
dec
movsl
cmp
out
scas
xchg
es
cmp
addr16
aaa
xor
jge
sub
decb
sbb
add
outsb
cli
mov
pop
lds
pop
cli
sahf
dec
fwait
stc
pusha
lcall
or
imul
push
dec
ljmp
outsb
hlt
test
inc
jo
or
jg
cmc
ljmp
push
imul
mov
push
xor
sbb
jnp
fldl
cmc
ret
loop
mov
in
divl
xor
insl
lds
mov
jg
divb
repz
mov
lahf
sahf
inc
sti
mov
xchg
and
xchg
cmp
mov
loopne
mov
push
iret
or
or
jae
push
xor
push
leave
imul
jge
shrb
ficompl
xchg
sbb
shll
pop
dec
cmp
push
shlb
inc
adc
inc
xor
xchg
pushf
mov
mov
sbb
sub
push
mov
pop
mov
sbb
pushl
mov
test
sbb
push
adc
aad
pop
aad
jle
and
ret
xchg
lcall
adc
mov
dec
arpl
mov
aad
cmp
mov
outsb
pop
or
mov
inc
inc
cld
loop
psubusb
mov
sti
movsl
push
rorb
dec
xchg
pop
aam
ds
or
jno
stos
stc
push
sbb
iret
pop
orl
jmp
cmp
or
mov
aas
fnstsw
je
jecxz
dec
sub
stos
std
sub
outsl
ja
ficoml
cmpsl
xchg
sub
jg
jle
flds
jge
or
lds
cmp
pop
subb
jg
gs
xor
jbe
out
int
lock
das
iret
imul
fiadds
and
incl
or
aad
jbe
cmc
lcall
dec
ret
cmp
mov
dec
hlt
mov
enter
call
pop
mov
lcall
mov
dec
pushf
outsl
mov
pop
jbe
or
cmp
addr16
cmp
adc
xchg
sub
pop
stos
jae
shrb
jb
mov
mov
cwtl
cs
adc
push
mov
adc
cli
pop
in
dec
jg
decl
loop
dec
lock
test
lcall
stos
roll
pushl
mulb
sub
sub
loopne
jnp
push
std
jecxz
sub
out
cld
jne
sbb
and
incl
pushf
enter
sub
pop
adc
roll
cmpsb
stos
xlat
cmp
mov
jbe
sti
repz
lcall
mov
xchg
adc
cmp
mov
sub
jae
fwait
es
das
push
shl
aaa
movsb
jmp
pop
dec
mov
mov
sbb
sbb
idiv
jg
das
pop
mov
orl
pop
and
lcall
iret
test
ret
decl
push
idivb
add
ret
inc
mov
cmpb
adc
or
lcall
cltd
hlt
sub
dec
shll
inc
mov
cli
cmpsl
mov
push
pop
adc
xor
dec
call
push
mov
mov
jp
sub
stos
sub
push
push
test
push
orl
ret
imul
cmp
lahf
in
popa
mov
jmp
loopne
dec
rorl
into
xchg
sarb
mov
jne
nop
loope
jg
lret
dec
mov
dec
jge
dec
imul
loop
and
out
or
sbb
in
lea
ljmp
pushl
xor
das
jp
xchg
xchg
stc
xchg
add
into
ret
mov
jmp
cltd
jl
ljmp
and
fcomps
loopne
ficoms
push
stc
xor
jle
or
inc
dec
inc
dec
mov
push
fmuls
or
imul
sub
out
pop
push
add
fdivr
incl
push
ds
pop
push
js
cmc
pop
lods
rcrl
in
loope
adc
adc
sbb
aas
dec
cmp
jbe,pn
mov
imul
sbb
jecxz
push
je
push
cld
jmp
pop
inc
push
cmpsb
jno
scas
ror
or
shrl
push
fs
sbb
test
jbe
outsb
jb
mov
jne
jmp
std
push
xchg
jno
jecxz
mov
mov
push
dec
jno
adc
flds
hlt
movsl
mov
loop
imull
dec
icebp
lret
ds
push
or
aad
decl
dec
adc
add
xor
mov
shl
inc
icebp
sbb
ljmp
pop
sub
call
and
dec
inc
mov
mov
cwtl
out
sti
xchg
jae
jae
arpl
fwait
ljmp
sub
pop
rcll
mov
push
in
addr16
lods
mov
mov
ljmp
jmp
arpl
je
jo
or
mov
jo
pushf
cmp
sub
cmp
ss
dec
sbb
xchg
cmp
push
sti
mov
xchg
push
adc
fcomps
add
mov
adc
lret
mov
dec
xchg
movsb
incl
movsl
adc
sbb
fbstp
and
fbld
lods
test
xor
jmp
jno
adc
iret
xor
adc
fisubrl
lret
jg
jl
ret
js
sarl
pop
xchg
push
lret
jo
pop
jp
out
iret
incl
or
jmp
iret
push
sti
lods
imul
cwtl
call
sti
int3
ss
mov
fistl
dec
hlt
andb
jnp
pushf
adcl
in
adc
jno
dec
pop
leave
jecxz
inc
push
scas
shl
das
das
es
and
inc
inc
orl
sar
jmp
ds
inc
gs
jno
lods
jns
sbb
pop
fcos
pushl
dec
in
and
cs
or
mov
aas
push
inc
push
lods
ljmp
sar
out
mov
test
adc
rorl
sbb
inc
lods
cmp
sub
dec
sub
or
in
pop
sahf
mov
out
push
fwait
jo
pop
jno
lret
outsb
sub
cmc
movsb
loope
std
xchg
orb
lret
hlt
sub
icebp
mov
scas
cli
pop
adc
push
push
xchg
out
jle
inc
xor
ss
and
ds
xor
cli
mov
cmpsl
cmp
jge
adc
and
movsl
ljmp
shlb
test
test
sub
dec
imul
call
mov
sbb
popa
jae
cmp
fiadds
xchg
arpl
dec
mov
incl
xchg
pushw
mov
fadds
lret
rorb
cmc
inc
xor
mov
gs
and
aad
loop
test
ljmp
mov
ljmp
cli
cmpb
mov
mov
leave
pop
insl
fisubs
rcl
jg
dec
jle
mov
lcall
push
mov
xor
movsb
xchg
fistps
xlat
movb
lock
in
pop
pop
sbb
jp
ret
lock
sbb
pop
enter
ret
cmp
push
adc
loope
pop
popa
out
loop
lcall
and
cwtl
test
pusha
dec
lods
data16
mov
xchg
movsl
aaa
jg
sub
dec
ljmp
adc
cmc
jl
aas
dec
lcall
cmp
in
loope,pn
fcomps
jge
xchg
ss
cmp
ljmp
out
push
or
stc
repz
push
sub
mov
orb
xchg
push
loope
call
cmpl
scas
push
pushf
movsb
mov
mov
xor
jl
jno
iret
faddl
cmpsb
fcoms
lea
mov
and
add
mov
dec
xor
mov
jmp
in
ja
pop
gs
inc
sub
push
push
js
push
sar
stos
push
push
out
cmp
or
roll
out
jo
sbb
shrb
fstp
cmpsb
add
cli
add
sbb
pushl
sbb
dec
cwtl
sub
cwtl
jb
push
decl
mov
sti
dec
jmp
stos
mov
out
jp
sahf
xor
pop
mov
incl
sub
inc
movsb
jne
mov
popa
mov
push
mov
and
or
lods
fwait
cmc
enter
loop
lods
mov
loope
addr16
mov
call
sbb
rcr
stos
lock
mov
int3
insb
jl
repz
lret
ljmp
call
push
mov
popa
sub
clc
fcompl
lock
push
fs
jo
dec
mov
fcomip
rcr
push
push
pop
cwtl
mov
test
mov
sbbl
jnp
ja
pop
xchg
push
jg
jae
outsl
stos
push
fstp
mov
pop
push
xchg
lock
xor
cmpl
mov
sar
scas
fsubs
dec
fidivs
insb
pop
xor
mov
shrl
decl
pushl
fadd
or
xchg
or
imul
test
incl
es
cmp
test
xor
fwait
icebp
nop
sub
jp
xor
out
jmp
std
jo
and
add
fwait
adcb
xlat
xchg
lea
sbb
sub
sub
mov
loopne
movsb
inc
fcoms
repz
inc
inc
mov
mov
inc
inc
loope
cmpl
mov
xchg
scas
pop
lahf
in
icebp
jg
out
cs
icebp
hlt
sarl
out
jbe
ljmp
sbb
xchg
add
dec
in
mov
out
test
inc
fldcw
mov
xor
lods
pop
stos
addr16
pushf
sbb
addb
xchg
xor
cmc
bound
jo
mov
pushl
shlb
sub
shll
lea
cmp
lcall
xchg
jns
sub
inc
push
lcall
loopne
aad
jp
pop
mov
sbb
icebp
pop
xchg
adc
mov
ljmp
jecxz
lock
dec
cld
cmp
pop
xor
pop
adc
push
cmp
mov
pop
cld
jg
xor
bound
aad
stos
into
cmp
fidivrl
loop
bound
lcall
int
dec
mov
mov
call
lret
jns
jns
scas
jae
xor
incl
stc
out
imul
ret
clc
inc
ljmp
hlt
adc
jle
inc
and
loope
or
xor
inc
imul
fisubs
pop
insb
mov
leave
mov
mov
sbb
scas
xchg
mov
adc
sti
das
push
pop
mov
jmp
jnp,pt
pop
dec
outsl
in
iret
fadds
xchg
jb
push
xor
pop
in
fstps
push
push
stc
mov
lcall
dec
orl
negb
sbb
mul
jbe
mov
outsb
jg
cmpsb
dec
ja
mov
or
jmp
bound
int3
push
mov
cmpsb
sbb
push
push
or
adc
lret
inc
adc
data16
xchg
mov
sub
pop
decl
lock
cmp
enter
pop
js
lcall
xchg
cs
clc
xlat
into
push
fsubrl
and
jl
jle
inc
test
int
jg
inc
sar
incl
lods
cmp
inc
in
dec
add
jno,pn
leave
ljmp
mov
push
stos
jg
mov
insb
aad
outsb
mov
inc
scas
lock
mov
aaa
pop
jne
repnz
cvttps2pi
mov
pop
push
push
adc
ja
cmp
fistl
sbb
push
add
mov
sbb
ljmp
mov
bnd
sahf
mov
mov
push
inc
mov
stc
movsl
pop
pop
sbb
push
ljmp
xor
pop
dec
in
mov
cmp
popl
dec
push
cwtl
int3
data16
push
and
std
popa
stos
cmp
int
aam
or
mov
fnsave
cli
jmp
shll
cmpsl
jmp
sbb
dec
test
inc
mov
jmp
fidivrl
or
lret
push
and
pusha
out
jns
jns
arpl
sbb
shlb
fisttps
loop
call
sbb
imulb
cmpsb
push
jo
and
bound
or
outsb
xor
fistps
xor
orb
int3
cmc
add
mov
adc
push
icebp
mov
fdivrp
and
repnz
cmovne
mov
ds
fisubrs
dec
shrb
cmp
or
dec
lret
sarb
enter
sub
inc
aam
mov
and
cli
pushl
lods
adc
jg
mov
in
adc
stos
jmp
out
mov
les
or
mov
mov
cltd
push
cld
jb
clc
ljmp
iret
hlt
inc
push
jmp
jg
lock
test
push
ljmp
adc
cmp
add
test
jns
outsb
xor
adc
fcomip
inc
sbbl
movsb
mov
dec
cmpsb
jne
lcall
push
in
jmp
test
and
mov
jns
arpl
int
lahf
add
imul
mov
test
clc
test
inc
popf
jne
ror
rcr
sarl
jge
dec
lea
push
push
ret
jecxz
xlat
hlt
in
hlt
jp
lahf
fmul
xor
lea
jg
xchg
mov
iret
jne
insl
shll
lds
aam
jg
jp
jbe
lock
into
stos
add
outsb
mov
mov
and
out
ljmp
ljmp
push
in
push
adc
xchg
mov
adc
sbb
push
cmp
jb
mov
es
mov
jecxz
lret
adc
test
xor
cli
or
repz
pop
cmp
jmp
xor
push
mov
out
mov
popa
mov
and
int
dec
mov
test
dec
lods
frstor
add
mov
call
push
or
addr16
jno
stos
ficoms
popa
and
lret
lock
decl
adc
jnp
and
mov
sub
inc
jecxz
jne
repnz
mov
fildll
movsb
movsb
pushf
out
and
ds
orl
pop
pop
imul
cmc
ret
and
add
imul
leave
add
movsb
mov
aas
fcmovu
mov
loopne
cmpb
loopne
push
push
call
push
push
divb
loope
mov
adc
xchg
lret
cmp
mov
repz
adc
add
sahf
movsl
mov
add
mov
dec
fwait
or
sti
inc
push
nop
fstps
aas
subb
and
dec
fsubs
out
push
mov
mov
fwait
sbb
mov
mov
sbb
pop
pusha
mov
and
add
inc
jo
mov
movsl
mov
mov
test
incl
mov
out
mov
jbe
dec
outsl
icebp
lds
cmp
mov
pop
leave
cmp
mov
arpl
adc
cmp
mov
rcr
inc
js
push
jg
call
sbb
mov
and
nop
je
sub
pusha
xchg
pushf
pop
sbb
repnz
push
fwait
ljmp
loopne
cwtl
iret
rorb
and
lret
adc
mov
push
cwtl
lcall
mov
cs
jmp
icebp
xchg
and
mov
outsl
xor
in
add
pop
int
clc
jmp
pop
sub
add
push
das
fsubrs
pop
aaa
xor
adc
ljmp
pop
pop
mov
into
jmp
add
sbb
ja
ficomps
jae
add
push
decl
or
pop
fcompl
xchg
test
mov
mov
insl
dec
leave
xor
xchg
loope
popf
imul
mov
fnstsw
dec
rolb
pop
xchg
es
xor
shlb
jecxz
int3
add
pop
repz
decl
pop
ss
jo
lret
cmpsb
cmpsb
outsb
jb
jle
scas
push
sarb
push
or
lcall
mov
mov
dec
into
inc
and
cwtl
dec
rcrl
int
sahf
pop
ja
insl
lock
insb
pushl
std
ljmp
pop
test
pop
lock
sub
sub
cwtl
mov
fstp
out
cmc
ljmp
dec
movsl
inc
or
dec
mov
das
inc
mov
out
loop
cld
ljmp
cld
cs
enter
or
ret
jnp
pop
dec
mov
xchg
mov
sub
addb
jno
cmp
decl
dec
and
push
rolb
xlat
dec
sbb
xor
inc
xchg
test
sub
fstl
fldl
pop
hlt
jg
mov
shlb
addb
lcall
mov
pop
sbb
cwtl
xorb
jmp
btrl
inc
or
shrl
ljmp
pop
or
jle
shl
mov
decl
xchg
adcb
cmp
or
mov
or
aaa
ret
sub
jg
ss
test
xchg
adcb
sarl
nop
fmuls
jecxz
or
xchg
scas
xchg
jmp
ret
sbb
inc
inc
loopne
rcll
push
mov
decl
pop
push
test
subb
inc
dec
sub
imul
fs
lcall
push
adc
test
sarl
mov
dec
enter
out
inc
mov
rolb
incl
mov
jns
and
cmp
dec
dec
mov
decl
and
jl
movsb
mov
into
cmpsb
mov
pop
fists
mov
nop
adc
xchg
ss
lcall
mov
pushl
std
sub
pusha
sti
jecxz
fwait
jmp
and
aam
mov
jmp
cli
xchg
popf
lcall
fnop
adc
pusha
and
leave
dec
mov
decl
or
iret
ret
lods
stos
bound
push
push
shr
push
fnsave
inc
or
dec
lcall
je
inc
jmp
mov
mov
jle
sub
call
add
jmp
push
cmpsl
cmpb
and
cwtl
rcrl
sub
jbe
xchg
lcall
int3
sbb
adc
dec
insb
arpl
fs
nop
data16
pusha
mov
or
add
inc
jg
sti
div
lds
push
loop
stos
mov
icebp
cltd
shlb
loope
ljmp
je
xchg
jae
jge
fbstp
jle
adc
mov
jg
out
push
pop
jmp
lcall
add
jl
pop
jle
push
mov
cli
insb
cmp
cmpl
jne
jmp
jmp
fstpl
jae
push
pop
pop
push
stos
fdivs
push
cmc
mov
add
test
dec
add
fwait
inc
std
mov
lea
cltd
dec
inc
inc
out
xchg
addb
jmp
movl
cld
fcomps
in
aad
or
adc
adc
into
pop
ret
lock
das
clc
sbb
inc
dec
xchg
ficomps
stos
adc
sub
pop
lods
jecxz
mov
in
cmpsb
jp
push
divl
adc
incl
and
jg
shrb
lea
out
loope
jmp
push
loop
sub
mov
decl
subl
mov
mov
clc
mov
xor
xor
push
aam
inc
jne
dec
ror
cmp
inc
fldlg2
js
enter
inc
push
inc
inc
cld
jmp
mov
fs
jge
mov
sub
mov
xchg
aam
jmp
dec
loop
sub
inc
jae
pop
call
cwtl
add
fwait
and
ljmp
ds
lret
lods
andb
jne
mov
rol
je
data16
fistpll
mov
pusha
stos
imul
and
or
loopne
cmp
cld
xchg
imul
in
test
dec
or
clc
fcmove
bound
push
decl
loop
xor
lret
lock
push
dec
xor
jno
or
outsb
test
and
add
ds
xor
mov
popf
dec
int
addr16
ljmp
xchg
xor
xor
pushl
fcoml
notb
out
leave
fcmovne
ljmp
mov
sbb
stc
enter
ret
jbe
dec
and
hlt
subl
cmp
mov
dec
cmp
outsb
dec
jge
incl
popa
rorl
rcrl
popf
adc
or
dec
mov
das
xchg
pop
call
jge
mov
incb
lret
add
adc
push
jle
xor
lahf
arpl
push
lcall
cmpsb
cmp
cwtl
sbb
testl
ds
xor
movsb
mov
les
jecxz
mov
lret
push
jb
push
mov
sar
cmpsb
scas
in
sbb
fistl
aad
pushf
mulb
xchg
mov
ljmp
bound
pop
nop
jl
movsl
or
jecxz
out
jnp
stos
fisubrs
out
nop
lds
lods
decl
frstor
jp
sub
mulb
sub
xor
mov
int
and
mov
sub
arpl
aas
out
aas
pop
pop
cli
flds
lods
insl
in
mov
dec
add
dec
fsubl
pop
mov
icebp
lods
and
mov
sub
test
push
repnz
mov
push
mov
cmp
mov
and
and
movsl
cmpb
inc
mov
cmpsl
sbb
push
call
or
mov
into
std
decl
das
out
xlat
int3
sbb
xchg
out
stos
fcoms
inc
xlat
aam
push
xchg
jmp
imul
xchg
data16
aam
lea
or
adc
dec
movsl
xchg
dec
aaa
arpl
lods
mov
imul
cmc
xor
cltd
mov
arpl
jg
imul
sbb
adc
lods
ds
push
push
mov
loope
incl
cwtl
les
and
out
ret
jg
dec
gs
lcall
rolb
mov
jl
and
dec
cmp
mov
adc
add
incl
inc
push
xchg
mov
mov
sub
je
mov
stos
push
sub
inc
jmp
jge
sahf
mov
push
sbb
xor
enter
faddl
shl
push
jle
call
fistpl
std
call
scas
loopne
adc
lret
push
loopne
xchg
xchg
decl
push
fst
mov
lock
lods
mov
cli
cltd
ret
pop
jae
nop
and
cmp
decl
ljmp
addb
xor
and
inc
mov
lret
jae
call
xchg
call
out
lcall
movsl
punpcklwd
jnp
pusha
inc
es
pushl
cmc
into
cmp
inc
sub
jo
jb
mov
push
mov
dec
inc
jb
sbb
and
jg
jnp
mov
aad
fistl
push
and
xchg
ficompl
dec
loope
jmp
leave
inc
push
shlb
cmp
add
pushf
mov
iret
je
xchg
orb
stc
xchg
jle
or
in
inc
ljmp
enter
aas
mov
call
and
mov
pop
out
orb
sub
ljmp
jg
sub
enter
lock
ljmp
add
lods
mov
fsts
popa
mov
shl
popf
cmp
outsb
pop
daa
mov
icebp
pop
lock
call
lret
mov
or
xchg
in
icebp
int
mov
loope
lcall
je
pop
push
pop
out
push
shr
add
xor
gs
or
mov
mov
inc
ljmp
push
dec
imul
mov
mov
sbb
xchg
sbb
incl
push
test
dec
orb
sub
cmpsl
or
andl
leave
arpl
lods
sbbl
pop
loopne
add
push
lcall
scas
lods
fcoms
dec
iret
aad
push
sbb
sbb
xor
movb
pop
subl
inc
mov
add
jmp
inc
push
sbb
xchg
cmp
scas
lret
idivl
xchg
xchg
mov
jne
cld
aas
enter
fcompl
push
repnz
sahf
mov
adc
push
jp
cmpsl
fmuls
xor
xlat
mov
sub
pop
xor
sti
jl
ffree
mov
es
imul
xchg
das
push
pop
jne
out
adc
mov
incl
ja
adc
pusha
xlat
in
lods
bound
and
inc
mov
and
inc
insb
stc
out
lcall
cwtl
push
mov
mov
lcall
mov
addr16
push
pop
pop
add
cmp
xchg
jp
iret
xor
jmp
and
es
mov
xor
mov
xor
mov
int
loopne
ja
lret
pushl
jl
jns
cmpsl
mov
and
xorl
cmp
pop
ljmp
and
lods
pop
shll
pop
pop
mov
cs
inc
lock
push
fadd
and
ljmp
jb
cmp
pop
pusha
sbb
fnstenv
xchg
test
xor
and
inc
lods
adc
cmpsl
mov
and
adc
lcall
insb
xor
cli
std
dec
inc
pusha
mov
dec
test
clc
xchg
sbb
incl
fidivrs
jl
adcl
inc
aad
sub
cwtl
rolb
cld
lcall
mov
mov
or
popf
pop
pop
mov
stos
xchg
pop
nop
jmp
mov
pushl
push
pop
xchg
xlat
push
jg
cltd
test
sbb
repz
mov
jl
insl
jns
push
pop
jmp
sbb
cmp
lret
inc
fcoml
xchg
xor
cwtl
pop
stc
pop
or
in
mov
decl
add
movsl
mov
jae
cmp
xchg
xchg
rcll
adcb
in
sub
mov
ret
addb
imulb
sub
jp
rolb
sbb
cli
add
jl
aam
mov
hlt
dec
inc
adc
pop
jne
mov
jg
sub
insb
es
cmp
popf
sar
call
xchg
push
icebp
adc
push
mov
push
lods
dec
push
cwtl
xor
je
inc
repnz
jg
inc
lcall
hlt
in
and
cli
sbb
dec
jns
jns
adc
inc
lods
sarl
lcall
xchg
shlb
leave
outsb
movnti
add
inc
jbe
cmp
push
scas
sbb
testl
xor
xchg
sub
dec
test
adc
or
test
adc
ja
mov
sbb
dec
lret
cmp
mov
xor
mov
jmp
lock
pop
ud0
clc
dec
rorb
push
aam
push
push
cmc
mov
xchg
fiaddl
fimull
ss
lret
sbb
mov
popf
mov
sub
in
xor
jg
hlt
or
cmp
dec
adc
loop
ljmp
mov
ss
and
mov
jp
decl
mov
pop
jb
pusha
and
mov
inc
xor
mov
add
mov
push
inc
testl
stos
fldt
pop
jg
stos
fwait
sub
sar
call
data16
nop
jns
lret
mov
inc
js
mov
ljmp
or
jge
aaa
mov
mov
pop
xor
add
gs
push
sub
ljmp
jns
xchg
int3
jg
mov
push
popf
or
outsl
and
notl
or
ljmp
adc
fcomps
xchg
test
dec
cmpsb
popf
adc
adc
cmp
pushf
mov
pop
push
sbb
push
incl
fimuls
out
imul
ljmp
js
cmpsb
cmc
pop
loop
cmc
in
loop
psubsb
jecxz
loop
mulb
outsb
test
popf
sbbb
call
xor
jno
and
loopne
pop
arpl
push
cmpl
adc
ja
jmp
sub
xchg
leave
pop
sub
add
lcall
jno
mov
cmp
mov
scas
dec
push
sti
jns
jnp
insl
int
mov
incl
mov
sbb
and
mov
lods
popf
and
mulb
repnz
fbld
ret
mov
ljmp
dec
push
push
js
std
scas
mov
jle
dec
stos
repnz
or
push
adc
jmp
add
xor
jecxz
jns
xor
dec
in
dec
xchg
add
inc
jne
mov
jmp
imul
mov
jp
and
cmp
pop
out
xor
lods
dec
or
add
lcall
dec
lcall
cld
rcrl
cmpsb
or
ljmp
add
fstpt
push
cmpb
or
mov
xorl
data16
clc
in
popf
loope
repz
ret
fidivrs
sub
mov
jg
lock
push
stos
fists
xor
inc
push
pop
sub
shll
pop
lea
xor
lcall
cmp
scas
mov
jbe
jns
pop
mov
dec
pop
xor
mov
and
das
std
dec
outsl
jbe
daa
lods
sub
jbe
mov
fwait
aas
repnz
inc
sar
and
cmp
cwtl
mov
aam
pushl
mov
adc
dec
jae
inc
jmp
decl
xchg
add
xchg
push
mov
xchg
scas
jae
rcr
mov
outsl
pop
scas
or
rorb
out
in
and
lcall
div
pop
in
mov
aad
mov
frstor
in
push
loopne
ss
xchg
adc
daa
decl
roll
sbb
lret
insl
push
mov
jo
and
sub
adc
fcmovnbe
out
decl
incb
rdmsr
pushf
lret
movsb
icebp
mov
pusha
and
ret
pop
push
scas
mov
or
cmc
adc
bound
push
fmul
xchg
mov
shlb
jg
push
xchg
pop
jns
hlt
push
out
pop
movsl
sbb
loop
jns
les
mov
incb
sub
addr16
je
ja
mov
mov
je
xchg
dec
and
scas
gs
lock
call
lock
sub
inc
xlat
aad
lret
push
mov
sbb
xlat
aas
mov
or
sti
lret
adc
xor
sti
dec
sbb
es
mov
mov
test
push
rcll
cmpsl
fimuls
dec
or
cmpl
sbb
inc
adc
mov
mov
mov
lds
mov
pusha
enter
lahf
orb
out
cli
decl
mov
sbb
pop
inc
xor
push
xor
lcall
lods
mov
sub
into
xlat
shll
mov
mov
or
or
popa
loop
pop
sar
pop
fldl
jae
mov
mul
push
and
mov
imull
and
jecxz
decl
les
or
adc
cwtl
and
rolb
decl
dec
jl
pop
ds
insb
xlat
mov
inc
jl
cmc
add
lcall
sbb
pusha
scas
add
cmp
rorl
decl
cmp
sub
jne
fsubrl
mov
add
lock
jle
decl
cmp
add
stos
cltd
or
outsb
loop
cmp
lea
pop
mov
jae
loope
jno
imul
repz
outsb
std
nop
dec
xchg
push
bound
dec
xchg
inc
call
fdivr
in
sarl
bound
inc
adc
add
imul
and
sar
mov
push
imul
jmp
shl
pop
dec
mov
cltd
jno
mov
cs
xorb
iret
push
or
sub
inc
xchg
jae
mov
outsl
lock
sarb
jge
outsb
sbb
mov
mov
lcall
dec
in
loope
std
push
jnp
xor
mov
mov
inc
push
jg
or
stc
pop
mov
loop
dec
and
jl
lock
jle
dec
xchg
push
jnp
fucomip
subb
xorl
mov
hlt
sbb
jg
scas
test
mov
jmp
fwait
mov
and
or
push
clc
js
pop
add
incl
sub
mov
movsl
mov
fidivrl
push
sub
adcl
loopne
adc
jg
push
xor
stos
or
jg
pusha
fs
sub
in
mov
decl
mov
mov
test
and
imul
xor
ljmp
sub
push
sub
sti
je
out
negb
fstl
mov
or
push
pusha
ljmp
andb
ret
in
leave
mov
idiv
call
clc
test
push
add
jmp
sbb
cmp
push
daa
inc
mov
ljmp
call
pop
sbb
movsl
lret
lods
push
cmp
push
jmp
or
lea
cmpsb
sbb
jge
ljmp
push
cs
ds
sub
mov
out
and
inc
cmc
ds
popf
pusha
xchg
add
inc
or
add
popa
jg
out
jne
and
aam
cmc
lahf
mov
fsts
loop
cmp
shll
cwtl
mov
pushl
lcall
mov
sub
repz
mov
in
hlt
jb
push
pop
stc
add
pop
call
cld
ljmp
push
jo
inc
xchg
jbe
out
cs
repnz
inc
mov
mov
mov
inc
movsb
sub
xchg
dec
or
jno
mov
xchg
stos
mov
sti
loopne
xor
lods
xor
jge
lock
sub
or
inc
cmp
fildll
xchg
into
jb
pushl
and
outsl
dec
add
cmp
movl
xchg
das
pop
repz
loop
das
repnz
jmp
add
call
or
lldt
mov
mov
sub
lcall
bnd
mov
das
jp
xchg
ss
shlb
test
pop
push
lea
xor
incl
xor
cmp
mov
rolb
ficomps
push
push
in
cmpsb
sti
xor
in
sub
rorl
movsl
and
sahf
shll
orb
insl
pop
jl
outsl
xor
outsl
stos
xlat
dec
outsb
in
inc
shl
sbb
stos
dec
or
mov
push
inc
sub
adc
or
divb
imul
outsb
xchg
adcl
lcall
jmp
mov
stos
push
movsl
mov
into
nop
fldlg2
xchg
sarl
dec
imul
insl
incl
dec
adc
ds
loop
repnz
les
mov
mov
lcall
cmp
push
stos
mov
push
jecxz
lock
stc
int3
pop
push
out
adc
pop
sahf
out
jno
or
rorb
divl
js
push
stos
jge
cmpsl
mov
cmc
jmp
insl
lret
into
ja
and
jbe
fistpl
call
imul
lcall
jecxz
sbb
in
sub
ret
pop
call
mov
cmpsl
push
mov
fsts
pop
lds
cli
pop
shl
or
adc
adc
ret
push
dec
ljmp
and
dec
rcrb
jmp
mov
adc
cld
data16
fs
jmp
stc
incl
js
call
jmp
jno
ss
enter
adc
dec
movsl
add
call
outsl
arpl
mov
movsb
enter
div
mov
xchg
int
inc
lcall
sub
add
jle
lods
inc
inc
jo
arpl
test
jnp
xchg
xor
jg
and
sarb
mov
xchg
pop
in
popf
mov
daa
mov
dec
popf
cli
xlat
inc
fprem1
adc
in
arpl
mov
enter
mov
jbe
push
xchg
in
jae
adc
lcall
or
fnsave
mov
aas
pusha
sbb
jmp
cld
fcoml
or
call
inc
xor
mov
aas
pop
push
es
aad
sbb
flds
mov
jle
aaa
cli
xchg
stos
xor
mov
and
ja
js
pop
int
mov
bound
xor
cmpb
xor
adc
out
scas
push
outsb
in
push
xorl
push
pop
fnstenv
sbb
std
ljmp
in
jb
push
repz
mov
mov
cltd
fsts
fdivr
pushl
daa
ds
mov
fbld
popa
int3
sub
jb
test
imul
ljmp
icebp
movsl
enter
mov
xor
cmpsl
or
add
movsl
inc
add
or
imul
cmp
cmp
leave
xor
and
pop
pop
pop
incl
lea
pop
stos
faddl
push
dec
sbb
mov
scas
in
ret
ljmp
incl
popf
int3
adc
sbb
pop
iret
js
sub
pusha
or
fisubl
pop
loopne
test
and
clc
mov
stos
out
push
data16
call
loopne
dec
je
pop
clc
neg
mov
adc
push
mov
imul
and
nop
inc
mov
sbb
or
fldenv
imul
xchg
xchg
into
subb
incl
push
jge
mov
addr16
dec
adc
push
repz
pop
cmp
std
aam
and
in
lcall
jg
pop
ljmp
jp
out
adc
jmp
leave
push
out
incl
mov
fmuls
jbe
push
and
mov
sti
dec
or
push
ljmp
int
add
mov
sub
in
dec
loop
cli
fmull
adc
xor
jl
xor
jle
pop
mov
or
cltd
decb
inc
xor
or
pop
cmc
mov
fucomip
or
inc
stos
test
dec
lock
test
sub
das
frstor
call
ljmp
jbe
pushf
aam
push
push
xor
jb
adc
jmp
nop
push
push
loope
jl
lcall
push
mov
into
mov
loope
shrl
negl
sbb
dec
xor
decl
popf
test
cmp
sub
add
sub
ss
jbe
decl
lock
push
fwait
lods
shl
and
mov
cmc
jecxz
pop
xchg
ljmp
xchg
lret
cmpl
lahf
nop
test
xor
dec
dec
fdivrs
dec
lcall
adc
sbb
add
or
mov
pop
es
mov
pop
shlb
xchg
inc
sbb
and
cwtl
xor
iret
sbb
cmp
pop
std
jmp
sub
dec
inc
rcll
movsb
test
mov
jno
lock
dec
jl
xor
fcomps
add
jne
loop
rclb
call
loop
push
dec
outsb
mov
push
nop
lods
ds
aam
sbb
shrl
jbe
out
xor
mov
lock
daa
mov
sub
out
aaa
int3
mov
in
pushf
lods
cmp
call
imul
insl
inc
mov
add
loopne
pop
test
lcall
xchg
jbe
out
lods
mov
jb
sub
dec
xchg
addr16
pop
cmpsl
and
fld
pushl
adc
and
icebp
or
mov
pop
repnz
in
cli
pop
jbe
and
jmp
push
clc
sbb
inc
idivb
into
sbb
dec
data16
repz
dec
xor
jbe
dec
ss
movsl
sbb
stos
mov
mov
inc
xchg
xor
pop
push
adc
jmp
xlat
fildll
test
je
jb
shl
jno
hlt
inc
and
mov
repz
cli
call
add
and
bound
push
xchg
mov
sbb
add
incl
xor
add
call
aaa
xchg
popf
sub
ret
sub
and
xor
ds
cltd
pusha
loope
loopne
add
lret
mov
ds
mov
push
jle
test
add
push
push
mov
push
into
data16
sbb
and
int
add
xchg
inc
fldt
cld
push
inc
outsl
test
loop
jg
jle
xchg
popa
imul
jb
imul
adc
loopne
shrl
pop
inc
fcoml
push
adc
and
call
adc
sbb
adc
ja
adcl
xor
inc
fsin
icebp
inc
sub
cmp
rcll
call
mov
lret
dec
cli
hlt
push
and
jno
fnstsw
filds
sbb
add
mov
imul
sub
jge
lods
test
jnp
jne
pop
adc
test
decl
scas
jmp
fisubs
dec
mov
xorl
push
shrw
fimuls
lods
cli
nop
insl
sub
in
add
mov
movsb
pop
push
jb
mov
push
mov
lock
pop
ss
xlat
cltd
out
mov
push
stos
cld
leave
pop
outsl
mov
or
sub
dec
push
arpl
cmp
xor
call
pushl
outsb
cmp
ds
stos
lock
adcb
test
andb
into
push
loopne
sbb
test
pop
out
icebp
jp
push
test
mov
cld
add
and
pop
stos
in
adc
mov
mov
test
push
rcl
fdivr
ljmp
xchg
inc
insl
lcall
imul
addr16
imul
jge
out
std
cs
sahf
cmp
or
ljmp
cmp
cwtl
ljmp
test
push
fsts
jmp
dec
cmp
outsl
dec
jb
aaa
push
jae
out
leave
stos
outsl
sub
mov
fsubl
mov
pop
mov
decl
movsl
xchg
fsubrl
sub
push
inc
ret
lcall
sbb
and
mov
and
jne
aam
int3
push
in
mov
fwait
leave
mov
lcall
mov
inc
test
repnz
mov
daa
cmp
incl
xor
cli
inc
sbb
dec
das
inc
jnp
icebp
decl
pop
pop
lcall
rcll
push
inc
sbbb
or
sub
mov
xlat
imul
cmp
or
scas
lcall
stos
dec
and
and
xor
int
push
sbb
push
les
jg
lret
mov
cmp
jge
adc
or
cmp
popa
inc
inc
mov
std
lcall
sbb
jp
rorb
xchg
loopne
outsb
cli
stos
shl
xor
pusha
fisubrs
test
lcall
dec
cmp
cwtl
js
pop
notl
test
out
cltd
or
sub
pop
mov
test
outsl
mov
dec
test
or
mov
sub
decl
adcb
nop
cmp
aas
pop
and
fadds
jl
mov
cmpsl
inc
mov
lods
cld
sahf
pop
les
add
jge
push
ret
lcall
fwait
popa
push
cmpsl
and
jo
lods
dec
xor
dec
ss
xlat
sbb
mov
sub
inc
outsb
out
sahf
divb
lcall
bound
mov
outsb
fwait
or
inc
roll
adc
fdivs
adc
pushl
xchg
add
dec
cmp
mov
or
or
fs
dec
mov
lcall
mov
ja
aam
pop
jl
mov
andb
lock
jmp
pop
xor
repz
cmp
add
mov
xor
pop
imul
add
jb
pop
cld
fidivl
clc
loop
mov
int
cmp
int3
je
fsubrs
inc
fcompl
aad
lret
call
loopne
fs
mov
jae
jmp
xchg
pop
rorb
mov
push
jg
loop
idivb
pop
xchg
dec
sbb
lret
arpl
adc
sub
xchg
ret
cmp
decl
mov
movsb
lret
cmp
xor
sub
ds
mov
pop
inc
cmpb
arpl
lods
lahf
jge
incl
xchg
outsl
push
lods
movsl
andb
jecxz
fnstcw
dec
push
add
minps
inc
cmp
and
leave
aam
mov
fnsave
roll
and
and
fisubrs
je
xchg
inc
jecxz
push
dec
dec
jecxz
jae
iret
and
mov
xlat
and
scas
mov
in
ret
pushl
ja
rorl
rcrl
lret
ficoms
loopne
mov
xchg
jbe
decl
in
data16
ficomps
inc
add
sub
inc
dec
inc
add
test
lock
xchg
xchg
cld
lahf
push
cmp
fwait
popf
mov
dec
push
ret
imul
adc
mov
jg
stos
dec
sbb
mov
mov
cld
call
pop
xor
xor
pop
mov
cmp
daa
outsl
das
push
clc
pop
addr16
mov
ljmp
add
lods
sti
mov
roll
clc
sbb
lods
cmp
stos
ljmp
jne
inc
les
mov
inc
cwtl
mov
add
out
push
jae
xchg
xorb
adc
sar
sar
cs
daa
push
out
mov
mov
mov
imull
sub
ret
pop
mov
pushl
lods
sbb
push
cmpsl
fninit
sbb
push
fisubrl
or
cwtl
add
scas
mov
jg
add
jg
add
je
stc
adc
shrl
push
sahf
or
and
or
mov
xor
add
lock
incl
inc
cs
mov
sub
or
or
pusha
in
push
popf
xor
imul
add
leave
or
pop
jg
ljmp
dec
lret
jmp
insl
adc
pop
outsb
mov
addr16
hlt
incl
fldl
dec
cld
mov
outsb
fsts
fnstenv
paddq
dec
sub
inc
jnp
push
mov
add
ss
repz
movsl
fbld
cld
adc
inc
mov
ja
jmp
mov
fidivrl
dec
mov
fwait
fs
test
out
mov
shl
icebp
push
inc
mov
cmp
mov
xor
mov
jmp
imul
cwtl
add
sahf
stos
sub
test
in
push
dec
notb
out
jmp
lret
call
out
pusha
movsl
hlt
fldl
movhps
ret
adc
push
fcmove
mov
adc
mov
fistpll
sahf
jae
mov
mov
out
or
call
cli
icebp
or
fdivl
xchg
movsl
xorl
push
je
adc
scas
or
jmp
in
sub
test
jno
out
xlat
add
movsl
testb
mov
pop
pop
jo
mov
decl
les
sbb
push
inc
in
add
leave
ret
fisubs
pushf
in
fld
imul
ljmp
or
adc
std
rolb
mov
pop
loopne
loopne
or
lcall
jne
mov
push
cs
push
inc
cli
jmp
inc
insl
aas
rcrl
pop
decl
push
sbb
enter
inc
pusha
sbb
push
nop
shrl
lock
popf
sbb
adc
les
xchg
loope
jmp
fcomip
decl
sahf
or
fnsave
push
lret
xor
es
popf
in
sbb
adc
cmp
pop
and
insl
pop
int
rclb
xor
jo
mov
icebp
call
push
inc
xchg
dec
shrl
int
xor
and
mov
sub
fwait
inc
aas
or
jmp
or
pop
pushl
in
bound
mov
insb
xor
jns
sbb
mov
and
cmc
jae
lods
xor
sub
sbb
dec
lret
jmp
or
popa
out
cli
call
mov
outsb
inc
and
rcr
xchg
mov
push
xlat
push
cld
aam
pushl
and
mov
xchg
cs
test
pop
push
sub
cmpsl
filds
loopne
adc
stos
sbb
jecxz
xor
pop
in
and
cmp
ja
sub
mov
pushf
cs
mov
fsubs
ljmp
fcmovbe
imul
popf
push
mov
adc
dec
sbb
in
mov
push
test
ror
stos
pop
lock
inc
add
push
rcrb
mov
hlt
pop
pushf
cmp
mov
cmp
cmpsl
pop
dec
cmpsl
push
mov
test
adc
ljmp
pusha
pushf
cwtl
clc
and
mov
inc
out
add
dec
mov
fwait
pop
dec
sbb
pop
aas
outsl
sub
inc
mov
dec
test
jmp
xchg
push
and
and
jae
push
sbbb
sbb
adc
daa
andb
jmp
xchg
mov
ljmp
aaa
xor
add
das
cs
call
sbb
mov
scas
mov
mov
sti
mov
aaa
rcll
shlb
ljmp
dec
fcmovnbe
out
popl
js
cmp
leave
sub
add
jecxz
cld
add
jg
loop
sbb
divl
aad
and
hlt
jne
push
in
dec
jge
out
loopne
dec
mov
loope
lcall
or
jg
lahf
popf
pop
cs
xchg
push
pop
push
movsb
lock
mov
adc
add
mov
std
call
ljmp
add
or
add
out
js
dec
repz
xor
lret
mov
sbb
push
rorl
inc
mov
insl
mov
jecxz
or
inc
cmp
in
jle
fs
xchg
or
pushl
leave
sbb
mov
nop
sub
adc
jg
sbb
dec
fdivrs
mov
push
mov
mov
dec
pop
aam
ss
call
or
mov
fmull
and
jmp
adc
filds
mov
push
outsb
fidivs
cmpsb
add
out
jg
lcall
mov
or
pop
push
cmp
xor
fldcw
les
jmp
add
fldcw
leave
fnsave
xlat
daa
testb
in
sbb
mov
lcall
xchg
mov
sub
fwait
cld
fists
cwtl
cmp
and
test
cld
pop
cmc
add
push
sub
aad
mov
movsb
call
adc
push
or
pop
cld
jle
inc
in
mov
jb
or
lahf
inc
pop
sub
sar
pushl
jno
mov
inc
adc
mov
xchg
in
ret
enter
outsl
incl
mov
in
adc
and
sti
sbb
daa
pop
mov
push
addb
rolb
push
imul
inc
mov
push
dec
imul
sub
movb
push
mov
mov
stos
adc
inc
dec
cmpsb
inc
inc
mov
jge
test
call
jp
push
je
xchg
xchg
jl
sbb
or
ret
sbb
add
incl
jecxz
movsl
dec
pop
lock
sub
xor
ret
lds
outsb
shll
test
adc
int
pushl
mov
scas
hlt
sub
dec
adc
imul
rcll
pop
cmp
in
cmpsl
insl
out
xchg
lods
mov
lahf
outsl
mov
cmp
push
bnd
pop
mov
popf
xchg
push
cmc
mov
jne
fcomip
lcall
jmp
pushf
rcll
mov
es
jns
mov
leave
sahf
imul
imul
scas
push
test
sub
pop
in
dec
mov
jmp
int
jno
pop
mov
and
shrb
ja
adc
xor
cmp
outsl
xchg
lods
inc
jmp
int
decl
cld
sahf
imul
je
dec
jo
push
popa
test
jmp
sub
incl
xor
fs
repz
imul
mov
cmp
into
mov
in
push
hlt
dec
and
filds
jl
cmp
rorb
lcall
push
sub
test
adc
adc
push
or
adc
cli
mov
stos
or
jo
mov
sbb
pop
call
subl
pop
cmp
mov
pop
test
push
mov
aaa
sub
stos
cmpsb
inc
and
cmp
cmp
push
std
mov
insl
imul
idivl
jbe
cmpsb
ds
gs
idivb
pushl
daa
aam
sub
repz
or
daa
jle
xchg
xchg
mov
lock
jg
cmpsl
jg
insb
std
jmp
cli
pop
insb
cltd
jmp
scas
xor
call
jle
imul
add
jle
fistpl
cmp
incl
outsl
insb
mov
test
aad
mov
popf
push
lret
fisubrl
lods
jne
or
icebp
in
sbb
xor
and
adc
dec
xor
add
test
ret
aam
std
lcall
loop
cmp
subl
lea
cmp
and
lcall
or
dec
inc
xchg
out
push
in
dec
push
and
repnz
xor
mov
xor
add
mov
pop
push
fisttpl
fcoml
arpl
inc
mov
incl
movsl
cli
adcb
xor
dec
dec
hlt
pushf
jbe
das
dec
xor
call
std
fiaddl
frstor
fnstenv
cli
insb
and
aaa
inc
xchg
inc
aad
push
mov
call
xchg
aaa
or
sub
aas
sahf
fimuls
ror
popa
popa
fwait
adc
ret
aaa
clc
insb
ljmp
pusha
ss
insb
in
mov
push
leave
sbb
mov
or
fcomip
pop
jae
inc
data16
and
sub
test
roll
jnp
dec
add
insl
inc
in
push
push
insl
lret
and
cmp
inc
pop
add
popa
mov
int3
jns
and
test
dec
pop
cmpsb
rol
or
aaa
testl
out
cli
ret
sub
sub
addr16
popa
popf
idivb
loope
mov
pop
dec
lcall
sub
cld
adc
dec
pop
add
js
bound
jne
pop
movsb
mov
sbb
pushl
mov
loope
cmp
leave
ja
and
ret
cmp
in
xor
or
pushl
jo
insb
imul
and
inc
push
mov
mov
jae
and
mov
aad
fcomip
mov
imul
addr16
imul
xchg
pop
call
push
pushl
call
pop
fwait
cmp
jmp
sbb
fnstenv
leave
jae
or
or
jle
jp
add
andl
push
mov
imul
push
xor
pop
roll
or
cmp
icebp
jge
mov
add
jg
icebp
jg
jb
inc
fbld
fmuls
das
push
lcall
sub
xor
jecxz
cmp
jo
sub
outsb
fldenv
inc
incl
adc
mov
push
pop
xchg
cli
dec
add
aad
lock
push
mov
mov
scas
loope
pop
xchg
sbbl
fs
cmpsl
cmpsb
outsl
mov
stc
inc
ljmp
in
mov
sbb
inc
jecxz
ljmp
mov
mov
daa
push
or
cli
lcall
mov
xchg
mov
and
jne
mov
xchg
or
fnstcw
cs
cli
jg
jb
out
sarb
repnz
call
dec
scas
add
lods
cmpsb
mov
jbe
ljmp
gs
decl
push
mov
or
enter
xor
aam
mov
loop
push
jns
sbb
fwait
pushl
add
add
cmp
lcall
fstps
pushl
std
sub
jle
movsl
stc
sub
sub
arpl
add
bound
push
divl
sub
in
leave
sub
fisubl
pop
jbe
outsb
sub
xor
pop
fsubl
dec
mov
out
inc
movsb
pushf
stos
inc
fwait
dec
add
xchg
xlat
sahf
xchg
cmc
fsubs
push
mov
adc
and
push
inc
cltd
stc
inc
out
mov
and
call
std
scas
dec
iret
adc
push
inc
lret
and
aas
test
pop
lods
ss
xor
mov
cmp
mov
mov
inc
mov
push
vpaddd
pop
gs
ret
in
call
sbb
mov
bound
mov
mov
ret
insl
xlat
pop
loop
cmc
outsl
add
mov
filds
cmpsl
aas
lcall
jmp
mov
movsb
and
lahf
cmp
xor
push
dec
nop
add
dec
push
xchg
mov
push
mov
ret
mov
xchg
orl
and
sub
sbb
xchg
jmp
push
pop
dec
push
mov
inc
or
or
sbb
int3
pop
mov
jg
mov
imul
lret
sub
dec
into
fdivl
push
addr16
push
aam
fninit
jmp
mov
arpl
push
lods
xlat
mov
sub
pop
or
or
scas
jg
lock
adc
inc
loope
movsb
sahf
mov
es
xor
dec
push
data16
dec
addr16
push
out
inc
sub
fs
dec
mov
lcall
jg
outsb
xor
shlb
repz
ds
cmpsb
fisubrl
adc
rcll
push
mov
arpl
stos
sbb
mov
lds
or
shrb
lcall
mov
movsl
daa
test
mov
cmp
sub
or
ds
or
in
jnp
pushl
ret
mov
cmp
add
mov
decb
bound
data16
pushl
aad
pop
js
add
mov
xchg
out
into
loopne
stc
fcomps
addb
mov
push
dec
jmp
ret
xor
mov
cmpsl
lds
and
mov
ljmp
inc
mov
push
cli
insl
and
cmp
push
mov
fldt
roll
sbb
mov
mov
test
adc
inc
push
mov
pushl
cld
dec
into
add
popa
add
shrb
push
fsts
bound
pop
pop
lcall
inc
push
inc
imul
mov
sub
inc
jecxz
call
ss
pushf
ljmp
pushl
pop
cltd
in
rolb
inc
cmpsl
sti
inc
fimuls
out
gs
xor
leave
cmpsl
inc
icebp
aas
lds
pop
cmp
pop
fwait
cli
lcall
scas
subl
mov
pop
lock
jmp
cmp
fptan
or
or
leave
ss
jae
mov
decl
jp
cli
fsts
adc
sbb
inc
dec
xchg
jg
cmp
not
adc
daa
inc
jne
lret
divb
pop
xor
dec
sbb
xor
mov
in
ds
cld
iret
xchg
push
scas
fucomi
sub
inc
ss
decl
push
push
mov
cltd
sbb
js
fxch
pop
int
push
or
push
call
mov
loop
xchg
lods
push
mov
outsl
jbe
or
or
ljmp
hlt
mov
cmp
or
call
jnp
sub
mov
mov
lock
jmp
inc
sub
popa
cltd
sub
push
jmp
lret
jl
lods
notl
jmp
aaa
mov
xchg
ficompl
aaa
mov
pop
dec
sub
adc
aam
imul
inc
pop
ljmp
push
mov
adc
std
scas
popf
loop
dec
lock
sub
jnp
clc
dec
sub
ja
mov
cmc
mov
shlb
xor
cli
jb
push
repz
out
cmpsb
lcall
inc
insb
pop
or
imul
fsubrl
daa
cmp
mov
adc
test
jns
test
mov
sbb
inc
in
sub
add
pushl
inc
fmull
lods
gs
jbe
sbb
xchg
imul
add
call
movl
mov
movsl
cld
es
subl
sub
cmp
enter
xor
xchg
cltd
mov
ficomps
xor
pushf
lret
lods
adc
fcmovne
xchg
fs
jb
fbstp
cld
xchg
fdivl
outsb
push
test
ljmp
pop
cmp
push
aam
add
pushl
movsb
test
addr16
jno
xor
dec
push
ljmp
in
lock
jmp
cmpsl
int
sub
ss
test
adcl
fwait
mov
out
enter
imul
jecxz
mov
call
add
stos
sbb
jmp
std
nop
jns
insb
jno
pop
mov
adc
incl
cmp
cltd
sub
xorb
hlt
mov
out
jle
jg
sub
xor
push
mov
call
imul
push
dec
sub
adc
aaa
add
xlat
and
xchg
adc
decl
inc
lds
jmp
pop
iret
insl
in
cmp
add
xor
test
stos
inc
pop
cwtl
mov
test
nop
testl
jle
push
loop
hlt
push
subb
mov
test
mov
decl
mov
inc
jg
dec
popa
mov
sbb
inc
inc
sarb
jg
mov
jmp
or
push
dec
xchg
or
push
int3
add
jl
jbe
fucom
fistpll
fisubrs
out
mov
xchg
clc
push
shlb
dec
imul
jmp
ficoms
sub
shrb
loope
mov
xor
leave
outsb
cs
loope
xchg
ds
out
out
imul
loope
das
gs
inc
fxch
jnp
push
sbb
sbb
mov
push
fidivl
sarl
fdivl
outsb
xor
leave
or
pop
cmp
mov
gs
push
ret
pop
xchg
fwait
sahf
xchg
fistpll
push
add
xchg
loope
inc
loopne
cmc
scas
mov
mov
decl
or
lea
gs
je
sbbb
pop
pop
push
dec
xchg
loopne,pn
mov
icebp
mov
dec
enter
push
cmc
mov
ret
push
fdiv
xchg
mov
stos
std
aas
mov
shll
in
rclb
fimuls
ljmp
cmpsl
pop
sbb
je
inc
repnz
test
sub
insl
xchg
mov
cs
rclb
lds
mov
pop
push
push
mov
daa
adc
std
and
jp,pn
xchg
daa
sbbl
iret
xchg
shll
in
pop
loopne
mov
call
in
fidivrl
leave
repz
mov
mov
dec
leave
cli
inc
cli
add
mov
ret
cmc
jge
sbb
mov
pop
mov
fcomp
call
sbb
adc
pop
jg
push
std
or
clc
addr16
xchg
dec
xor
scas
inc
cmp
subl
loopne
in
ja
loope
lcall
push
mov
ja
jne
jns
mov
orl
sub
fcomip
lcall
mov
pop
dec
sbb
shl
sbb
and
stc
out
ret
imul
mov
in
jae
sbb
jne
cmp
sti
test
and
add
push
adc
call
inc
jnp
mov
in
xchg
jae
popf
cld
and
push
rclb
or
mov
and
push
and
jns
or
jge
out
adc
cli
iret
pushl
fcompl
cs
add
push
mov
push
in
cmp
mov
mov
jmp
stos
js
les
jp
hlt
lahf
iret
pop
in
lahf
into
pop
or
jb
idivl
inc
sub
sti
or
or
out
inc
lea
insl
inc
add
imull
cmp
test
add
scas
popf
add
inc
fs
jg
ja
xorb
sahf
mov
add
or
fisttpl
inc
pop
mov
lea
sti
add
imul
loop
pushl
ds
push
outsb
daa
pop
ret
pop
lods
dec
jno
test
leave
fmuls
pusha
jecxz
test
add
sar
js
xlat
icebp
repnz
cli
lods
sbb
les
mov
xor
jg
mov
jmp
jl
pop
loopne
pushl
xchg
push
notl
fisttpll
lods
cmpb
pop
rcll
inc
lcall
leave
inc
test
negl
fnsaves
mov
mov
adc
nop
stc
jne
xorl
pop
and
push
add
pop
in
inc
sbb
lods
pop
ret
aam
dec
dec
and
sbb
push
test
jb
pop
sbb
mov
rcrb
adc
xor
cmc
data16
mov
cltd
icebp
stos
xor
push
mov
fiadds
rolb
call
cmpsl
out
rcrb
sub
xchg
pop
lock
lods
or
inc
xor
jg
or
cmp
ud0
fcomip
mov
cmp
sub
repz
arpl
mov
fisttps
add
sbb
loopne
or
pcmpgtb
jg
decb
cmp
enter
jne
rcrb
inc
dec
insb
mov
fcomip
rorl
rcl
and
cmp
xor
aaa
lcall
test
push
mov
int3
jne
les
push
push
fistpll
jbe
clc
lcall
lods
push
fnstenv
adcl
fucom
loope
loopne
scas
add
scas
dec
or
pop
sbb
or
clc
jg
in
push
test
data16
sub
fcoml
jns
fcmovu
mov
and
dec
push
incl
addl
mov
inc
pop
les
sbb
xor
in
lcall
jle
mov
xchg
stc
xlat
mov
sbb
stc
cmp
mov
incl
js
adc
imul
mov
push
fisttps
inc
mov
insl
test
add
decl
enter
cmc
ds
iret
cmp
incl
sahf
fdiv
mov
fildl
call
cmpsb
sbb
xchg
cwtl
dec
arpl
inc
dec
xorl
cmp
mov
sbb
adc
add
scas
mov
mov
out
jb
cwtl
mov
mov
pop
jecxz
mov
fsubl
adc
sbb
cmpsl
out
addr16
ud0
mov
fidivs
dec
pop
pop
test
dec
dec
bound
and
test
loope
gs
je
loop
icebp
mov
mov
pop
mov
sbb
mov
cmpsb
or
xchg
lahf
jle
fistl
pop
jo
test
cltd
ret
jg
test
ljmp
pop
loopne
setb
push
xor
incl
rcrb
xchg
cmp
leave
loopne
fs
fmull
jmp
ljmp
push
mov
les
pusha
inc
jg
jl
cltd
loopne
clc
fnstenv
sub
fildll
xor
aas
pushf
pop
je
popa
pusha
and
jb
sbb
cmp
ds
mov
ljmp
in
rorl
add
lahf
dec
popf
mov
cmpsb
out
pop
std
je
mov
call
inc
int3
xor
fs
dec
xor
add
dec
lods
sub
adcl
leave
or
fsubrl
roll
inc
mov
adc
inc
and
test
ljmp
inc
sbb
cmpb
repnz
adc
cld
push
adcl
jne
push
mov
fdivs
lcall
sbb
and
popl
fs
das
cli
aam
ljmp
movsb
sub
cs
mov
jmp
cmp
or
into
ja
shl
pop
rcll
enter
push
fisubl
incl
sub
pop
cs
mov
xchg
mov
lods
int3
lods
pushw
nop
call
sbbb
adc
and
nop
aad
dec
int
dec
aam
clc
adc
dec
andl
in
xchg
push
outsl
stos
push
push
mov
pop
aas
mov
sti
mov
fs
mov
testb
push
rcl
add
stos
inc
mov
or
es
js
out
fadd
loop
test
inc
push
scas
add
mov
dec
adc
loop
pop
adc
int
addl
xchg
pop
js
lcall
fbld
lret
lahf
pop
and
rclb
fbstp
dec
inc
add
incl
fwait
sbb
shl
aad
mov
or
repz
cmp
xor
push
lret
mov
jnp
pop
mov
xchg
cmp
mov
xchg
pop
dec
dec
loopne
ja
pop
insb
test
loop
push
or
cmp
cs
mov
incl
inc
mov
pop
ds
shl
push
mov
mov
hlt
or
incl
ss
je
rcr
nop
hlt
clc
cs
xchg
adc
fists
mov
cmp
decl
movsb
negb
in
pop
sub
adc
test
scas
rcrl
lea
sub
add
lret
mov
pop
cmp
clc
loope
pushl
test
add
popfw
test
jno
xor
lock
loopne
incl
cld
lcall
push
ficompl
push
dec
pusha
stos
mov
jae
scas
test
popa
sub
ljmp
and
inc
or
adc
jmp
and
jmp
push
mov
jg
hlt
mov
add
push
movsb
mov
test
push
ljmp
ljmp
mov
jg
popf
fisubl
bound
movsl
sbb
pop
xchg
lds
decl
sub
movaps
xchg
and
je
adc
mov
fadd
sbb
pop
xlat
push
incl
test
pop
aas
out
fdivl
mov
push
ret
dec
or
clc
xor
fimull
jecxz
or
sbb
sub
xchg
imull
int
dec
insl
mov
decl
in
mov
mov
div
and
das
mov
cli
popf
pop
jno
xor
mov
movsl
dec
cld
jp
gs
cmp
sub
jmp
mov
jg
sub
mov
lcall
mov
lock
dec
sbb
in
push
in
push
imul
xchg
mov
xchg
pop
fadds
lcall
mov
filds
mov
movl
push
xchg
push
xchg
push
imul
incl
sub
in
jbe
aad
loope
fdivl
rcrb
and
cmp
lcall
movsl
jo
cmp
stc
cld
xor
xlat
std
inc
pop
les
aad
push
test
pop
daa
pusha
push
adc
jmp
les
rcl
fbstp
hlt
add
xor
jg
mov
adcl
xchg
or
adcl
push
pop
pop
subb
ljmp
mov
decl
rcl
push
nop
inc
fs
outsb
xchg
insl
jae
bound
and
sahf
dec
dec
arpl
lock
call
cwtl
jae
push
sub
xchg
jo
push
popa
ret
testl
stos
out
in
loopne
xchg
fcmovu
or
mov
jbe
sbb
std
int3
bswap
daa
les
jmp
dec
aam
fidivrl
xchg
adc
cmp
cmp
push
pop
nop
std
cmp
movb
incl
ss
movsb
popf
sar
jo
xchg
pop
repz
stc
outsl
cld
xchg
add
push
fcoml
fdivr
incl
imul
andl
out
mov
and
ret
jge
ja
ret
fmuls
out
push
push
dec
sbb
dec
sub
pop
or
xor
fsubl
cld
and
xor
ljmp
adc
leave
jmp
pop
add
orl
mov
push
jmp
nop
mov
arpl
mov
stos
mov
sahf
clc
imul
popf
fstl
out
cmp
jmp
mov
inc
mov
nop
fmuls
jl
loopne,pn
xor
call
popf
xchg
xor
icebp
inc
sub
adc
lds
pop
aam
push
es
cld
aas
adc
xor
push
test
adc
lcall
call
mov
push
rolb
sarb
push
daa
push
popf
and
push
aam
lret
sbb
cld
mov
mov
iret
xlat
add
cmp
lahf
mov
or
sbb
jns
in
jnp
sub
hlt
pop
push
xchg
jb
aad
movsb
sbb
cmp
ffreep
or
jle
mov
push
mov
cltd
push
fbld
int3
test
pop
mov
push
aad
call
mov
cld
shll
or
aad
inc
push
lcall
adc
jne
fs
loop
and
jge
loopne
fcmovnu
and
into
pusha
into
repz
mov
aaa
into
je
pop
testl
inc
mov
mov
aaa
ss
in
bt
xchg
ljmp
cmpsl
cs
cli
pop
cwtl
xchg
mov
ficoml
add
rorb
mov
mov
fisttpl
mov
add
xor
inc
mov
push
inc
stc
and
mov
cli
ljmp
repnz
daa
add
sub
shlb
loope
shrl
inc
imul
enter
data16
sbb
cmc
and
insl
aaa
repnz
or
xor
inc
or
push
insb
insl
jmp
jp
sub
adc
mov
sbb
xchg
sub
xor
lcall
sub
adc
xor
repz
repz
pushl
mov
dec
xchg
test
adc
adc
in
ds
add
cwtl
lods
mov
cmpsb
mov
imul
leave
fwait
inc
cli
mov
xchg
lcall
scas
mov
pop
ljmp
aas
mov
inc
data16
mov
ret
push
lea
incl
xchg
fwait
and
clc
lret
inc
and
adc
jno
mov
adc
aas
pushf
repz
lock
mov
aam
ljmp
ret
adc
pushf
andnps
imul
cmpsb
fisubs
ret
adc
lcall
sbb
xchg
rol
inc
pop
xchg
ljmp
js
sub
pop
dec
sub
push
cmpsb
subl
xlat
push
popf
ljmp
xchg
cltd
mov
push
push
out
stos
dec
mov
iret
pop
xchg
adcl
cmp
jmp
mov
xchg
xor
int3
cli
rcrl
push
loope
push
scas
push
add
idivl
decl
sbb
decb
add
xchg
cwtl
outsl
inc
jb
mov
in
pop
ljmp
xchg
cmc
dec
lea
ljmp
test
rol
pop
sub
sbb
xchg
inc
cmpsb
adc
mov
ficomps
inc
mov
cli
inc
sub
decl
cmpb
adcl
adc
idiv
sbb
iret
idiv
mov
xchg
daa
xchg
xor
hlt
mov
ret
cltd
sarb
mov
pushl
add
js
xlat
pop
rolb
jno
inc
jp
xchg
loopne
mov
sub
or
std
das
cli
outsl
cs
jge
mov
sbb
mov
mov
shll
cltd
test
add
xchg
add
arpl
lret
lods
xchg
pop
std
loopne
mov
inc
icebp
aas
movsl
push
sub
mov
dec
mov
insl
sahf
test
pusha
loopne
mov
push
xor
mov
jmp
xor
push
mov
cwtl
mov
sub
ret
mov
jmp
mov
inc
bound
pop
int3
pop
sub
jns
ss
inc
ljmp
loopne
jns
inc
adc
push
aam
sub
out
push
add
idivb
push
repz
mov
jp
incl
jge
imul
or
cwtl
mov
push
add
inc
mov
js
dec
adc
into
adc
xlat
sub
mov
jne
xchg
and
xchg
mov
data16
aaa
outsl
push
das
ja
lcall
or
lods
sbb
rdpmc
ljmp
in
mov
mov
mov
mov
repnz
jne
mov
and
pop
mov
sub
push
out
hlt
sahf
push
cwtl
inc
or
push
xor
insl
cltd
mov
mov
jmp
add
sbb
insb
fwait
add
out
dec
out
xchg
in
fmull
outsl
cld
fdiv
cmpsl
adc
or
sub
stos
std
mov
lret
mov
movsl
adc
test
jbe
jecxz
sbb
mov
jmp
cmp
pop
mov
lcall
and
repz
ss
sbb
or
in
mov
jg
jecxz
cmp
sub
bound
adc
mov
movsb
jmp
push
out
inc
stc
nop
mov
popa
js
push
or
cltd
dec
add
adc
jno
mov
jmp
mov
rclb
testb
incl
mov
dec
and
mov
cmp
jbe
xchg
pop
mov
inc
cmp
cmp
or
add
mov
push
call
adc
loope
popa
xor
movsb
adc
aam
add
mov
hlt
rcrl
jmp
movsl
push
mov
dec
lods
or
jmp
andl
icebp
mov
fnstsw
sub
cmc
ficompl
sarb
mov
test
push
push
lock
jge
mov
push
ss
cmpsl
or
fisubl
push
pop
lcall
mov
mov
ret
pop
push
jne
cwtl
pop
pusha
std
mov
xor
fistl
jmp
dec
mov
cmp
mov
jge
xor
outsl
lcall
jns
mov
mov
lods
jns
mov
xor
pop
shll
jmp
cmp
add
std
mov
aas
ret
inc
adc
scas
xchg
shlb
in
xchg
shlb
xchg
bound
pushl
add
inc
xchg
rclb
adc
add
jge
push
rclb
xchg
jge
rcrl
cmc
xchg
xchg
pop
xor
jecxz
lea
fsub
fcomp
jnp
in
xor
xor
jmp
mov
xchg
mov
jbe
test
jmp
sub
xor
mov
daa
or
nop
dec
dec
push
sahf
push
fiaddl
or
push
aam
repnz
mov
add
jmp
das
jo
dec
sbb
shl
les
das
stos
adc
push
and
mov
fldl
fdivrs
ds
mov
in
movsb
stos
mov
das
jmp
aaa
repnz
xchg
push
jg
popa
mov
mov
loop
cmpsl
and
mov
add
pushl
mov
cmp
les
jbe
mov
lods
je
jmp
jl
data16
test
lock
iret
sub
add
shr
jmp
cmpl
int
mov
divb
je
imul
jmp
sub
adc
push
fdiv
jge
inc
push
fcmovne
cmp
jmp
jg
fists
lcall
jp
pusha
mov
aam
adc
mov
nop
daa
push
jecxz
or
inc
cmpsl
xchg
mov
pop
stc
add
or
cs
call
mov
ret
sub
inc
lret
cmp
pop
mov
shll
mov
mov
xchg
movl
adc
jmp
out
call
and
lret
je
das
inc
mul
mov
xchg
mov
ja
lcall
icebp
into
mov
aam
sub
shlb
cmpl
dec
jge
add
in
loopne
scas
inc
shlb
cld
fwait
lret
xor
arpl
fs
pop
inc
js
and
pushl
sarb
push
lock
divl
sbb
sub
cmpsb
sub
shlb
or
decl
dec
push
xchg
xor
add
push
or
sub
push
sti
mov
xchg
sbb
lcall
jmp
adc
mov
sub
dec
push
push
js
or
daa
jp
clc
incl
jle
jmp
sahf
pop
pop
add
out
adc
lods
xor
neg
xor
sub
sti
js
pop
jmp
xlat
xlat
test
pop
das
push
sub
mov
dec
aas
jno
sub
sub
inc
mov
lcall
sub
stos
mov
and
shll
mov
dec
sbb
add
into
fimull
movsl
clc
in
int
push
fldl
rclb
loop
and
clc
ljmp
imul
adc
icebp
add
test
cmc
jg
or
jle
xor
mov
dec
sub
cltd
jne
pop
icebp
jmp
fwait
clc
leave
adc
sbb
cli
and
aad
sub
es
das
add
pushl
inc
sti
sahf
scas
and
pop
or
cwtl
dec
dec
cmp
cmc
jb
clc
lret
cmpsl
or
sbb
or
loopne
jne
sub
ljmp
mov
mov
hlt
and
neg
fnstenv
in
sarb
call
dec
xor
outsb
push
or
sub
cld
movsl
dec
adcb
roll
jmp
mov
cli
aam
daa
push
mov
daa
ds
push
lahf
mov
hlt
call
sti
mov
subb
sbbl
jl
push
shl
stc
jg
push
call
scas
lods
push
mov
cmp
pushf
hlt
jo
adc
cld
incl
dec
in
scas
dec
mov
leave
ds
fs
and
lcall
inc
or
cmp
leave
nop
mov
sbb
imul
mov
and
mov
lock
cwtl
dec
push
imul
frstor
ja
lcall
or
test
neg
popl
popf
mov
inc
cltd
adc
sbb
scas
mov
xchg
and
std
mov
xchg
iret
mov
and
sbb
popl
cld
mov
and
dec
or
mov
adc
lds
mov
out
cli
cmp
jl
and
jo
cmp
movsl
xlat
mov
sbb
jmp
jg
pop
hlt
repz
xchg
push
out
sbb
mov
pop
repnz
into
pop
je
decl
xor
push
stos
mov
adc
fiadds
les
lods
mov
xor
ret
std
mov
inc
and
outsb
js
inc
fadds
jg
imul
xorb
int3
imul
and
aad
jge
push
pushl
pop
pushl
insl
jecxz
insl
rcl
hlt
int
outsb
mov
or
out
lcall
imul
cmp
pop
incl
enter
mov
std
ljmp
jle
ljmp
mov
popa
sub
mov
call
gs
in
jo
out
and
ja
sub
sbb
insl
inc
andb
jmp
cmp
test
sti
and
js
sub
pop
mov
lods
mov
sbb
mov
mov
idiv
mov
pop
sti
xchg
inc
cmp
test
aad
mov
rorl
lahf
ja
das
mov
mov
cltd
shrb
int3
dec
ret
mov
fldcw
cwtl
cmp
add
incl
insl
aaa
cmpsb
or
cmp
aas
bound
jno
mov
out
testl
call
repnz
fiaddl
scas
mov
mov
in
mov
add
sub
and
push
orl
pop
jle
lds
fldenv
cld
movsb
push
mov
fwait
ljmp
jmp
or
pop
insb
inc
ja
bound
push
lcall
push
mov
in
popa
dec
jecxz
stos
jge
inc
loop
mov
push
xchg
push
repnz
sbb
jmp
ud0
cli
jmp
dec
scas
push
and
mov
js
inc
cmp
mov
sub
push
out
test
cmp
lds
cmpsb
ss
ss
stos
push
in
insl
in
mov
and
cld
mov
call
mov
lret
shrb
jle
pop
daa
es
repz
ja
jne
mov
incl
cmp
xor
aas
push
call
in
lret
inc
fchs
adc
dec
lcall
and
adc
jle
fstps
and
dec
stos
stc
xchg
jg
mov
cmpsb
cmp
cmp
fidivrl
ljmp
clc
stos
out
shrl
das
cmp
inc
lret
dec
jle
repnz
jmp
mov
push
xor
filds
icebp
or
jge
int3
andb
enter
insb
xchg
pop
xchg
repnz
dec
mov
jne
out
sbb
mov
jmp
int
in
faddl
pop
movsb
lahf
int
sbb
dec
mov
add
push
push
fldt
shrb
and
int3
pushl
push
add
adc
inc
push
sbb
dec
jne
lea
sbb
or
push
dec
mov
nop
push
mov
test
jmp
pop
xor
sub
mov
xlat
icebp
push
pop
inc
outsb
push
jbe
adc
jns
push
xchg
mov
js
push
or
jp
push
lcall
mov
pop
mov
xor
mov
call
mov
xchg
call
sbb
sub
call
mov
insl
lods
pop
add
jb
mov
jmp
outsl
adc
pop
jge
fcompl
push
mov
lcall
inc
cmp
adc
jg
inc
into
loop
rcr
ss
ljmp
mov
ret
ficompl
push
das
gs
ffree
out
arpl
lods
and
idiv
incl
jp
kmovb
and
enter
dec
dec
test
jl
sub
loope
jbe
mov
jp
lret
inc
lcall
call
and
cmp
out
stc
aam
mov
cli
mov
sub
mov
nop
xchg
adc
adc
add
mov
push
xchg
push
push
mov
mov
mov
jns
ja
into
mov
divl
push
clc
decl
sub
lds
jmp
ret
int3
sub
dec
lahf
or
pop
sbb
repz
adc
in
push
push
or
cmp
call
and
cmp
push
jmp
pop
sbbl
test
jg
or
lret
adc
scas
lret
shlb
fcmovne
or
jb
mov
sub
mov
test
mov
jecxz
sbb
push
call
mov
in
jb
mov
pop
scas
pop
outsb
xor
shll
ror
rclb
pushl
lcall
std
and
sbb
jns
insl
ljmp
mov
leave
popf
pop
jmp
cmp
call
push
daa
je
leave
lods
rcrb
xchg
iret
clc
inc
hlt
add
sub
pop
loop
sbb
lcall
je
stos
ffreep
and
ret
xor
and
mov
dec
frstor
pushl
movsl
mov
loop
xor
mov
adc
adc
movsb
push
mov
sbb
les
pushl
sub
pop
pop
xor
mov
sub
mov
xor
and
cwtl
jno
call
out
fwait
mov
ret
movsl
push
mov
add
sbb
ljmp
in
inc
adc
adcl
sub
jp
mov
lahf
pop
scas
mov
arpl
ja
loop
dec
out
add
sbb
sub
pushl
cltd
fs
pop
mov
inc
cmp
inc
push
mov
in
mov
fwait
ss
push
dec
add
jp,pt
push
sbb
xchg
rcrb
or
jb
dec
clc
push
mov
dec
in
sub
ja
lcall
mov
mov
int3
jne
mov
dec
rclb
loope
xor
out
inc
push
cmp
cmpsb
scas
cmp
push
xchg
rcll
or
mov
mov
push
call
jbe
mov
jmp
jmp
push
cmpsb
insl
pop
sub
mov
in
cmp
add
or
ret
hlt
and
sbb
outsb
dec
ljmp
dec
into
sbb
pop
scas
int
push
arpl
cmpsl
jb
loope
je
fcompl
vcomisd
fisubrs
call
loopne
cmp
cmp
outsl
test
inc
inc
mov
insb
outsl
clc
jmp
pop
decb
stos
sbb
ljmp
ljmp
push
lret
rclb
inc
pop
push
or
sbb
jecxz
dec
lock
enter
pop
or
pop
adc
enter
stc
lock
mov
sub
out
ret
call
cmp
repnz
ja
or
mov
lcall
incl
or
ret
jecxz
js
push
jbe
ret
sub
popf
repz
cmp
jg
sbb
push
in
or
cmp
inc
add
or
lcall
inc
aad
jl
mov
push
dec
out
insl
pusha
jae
mov
xor
ljmp
insb
sub
adc
xor
sub
add
out
mov
lret
ljmp
dec
and
sub
add
pop
adc
xlat
sbb
negb
add
loope
test
data16
jmp
rorl
aas
lret
push
or
xchg
push
fdivrl
pusha
aaa
or
incl
int3
jl
mov
jo
add
js
das
shrb
xchg
shlb
cmpsb
sub
adc
sub
in
jecxz
test
sbb
push
loope
dec
sub
jg
scas
inc
into
cmp
repz
cs
int3
in
adc
mov
mov
insl
or
pop
fbld
sub
ss
xor
sub
jge
dec
in
into
and
clc
and
adc
insl
push
mov
mov
dec
jb
psrlw
pop
lds
scas
decl
ljmp
addr16
jl
stos
clc
ss
cmpsb
jle
stos
ljmp
daa
mov
insl
mov
std
call
jmp
pop
inc
scas
rcrb
std
add
lcall
cwtl
lds
leave
cli
loope
outsl
imul
xchg
outsl
sub
imul
call
xor
inc
ja
out
push
mov
inc
arpl
fwait
nop
sbb
fldcw
or
rol
mov
inc
sti
mov
pop
ljmp
stc
clc
rcrb
jmp
xchg
pop
test
cmp
into
push
filds
sahf
or
scas
mov
jb
adc
incl
lock
or
mov
inc
mov
out
mov
adc
je
cli
jle
jg
lods
push
outsb
jns
scas
lea
subl
test
jmp
mov
das
mov
addr16
and
mov
or
ljmp
out
adc
xor
mov
pop
adc
ja
add
jmp
incl
sub
test
mov
jge
sti
aad
mov
in
movl
cmp
xchg
sti
add
std
movsl
pop
cmc
lds
push
cld
lcall
xor
pop
iret
loopne
xor
dec
cld
sub
ds
cmp
and
decl
adc
inc
movsl
outsb
stos
mov
xchg
cs
in
out
xor
mov
and
ljmp
ja
aad
push
popf
dec
hlt
mov
cmp
push
dec
xor
pushf
mov
loope
xor
lcall
add
stos
cmp
out
into
cwtl
leave
mov
xchg
lret
into
sti
and
orl
testb
adc
xor
pop
inc
mov
lcall
push
ret
inc
loopne
mov
test
xchg
stos
pusha
mov
or
aam
xchg
jecxz
push
xchg
jp
xchg
repnz
push
imulb
pop
sahf
jmp
orb
adc
mov
mov
rolb
xor
das
or
popa
fwait
sbb
lock
jmp
add
fdivrl
iret
pop
dec
or
add
ficomps
pop
out
jl
push
lods
fcmovnbe
gs
decl
or
mov
lea
adc
xchg
add
mov
and
xor
pushf
insl
mov
out
loopne
popa
pop
add
xchg
or
adc
mov
mov
or
xchg
test
or
call
inc
jnp
repnz
mov
xor
jl
std
xor
in
push
outsl
iret
or
and
aam
mov
cwtl
jb
flds
cmp
jl
call
adc
int3
xor
jne
popf
in
sub
decl
lods
xor
lret
push
or
imul
lret
ss
fldt
cwtl
sbb
jmp
leave
data16
out
cmc
pop
mov
xlat
rcrl
idivb
adc
sub
pusha
aaa
mov
adc
das
daa
adc
lret
cwtl
push
add
lcall
fcompl
add
and
lahf
jl
xchg
cmp
incl
xor
xchg
pushf
inc
in
loop
sti
fwait
push
xor
adcl
mov
jp
icebp
jmp
adc
adc
mov
push
int
ljmp
and
sub
xchg
std
add
decl
ljmp
rcrb
aaa
stos
dec
loopne
je
sbb
jg
cld
push
ds
mov
imul
popf
insb
push
inc
cmp
lds
sub
decl
fsubrp
cwtl
push
jo
popf
dec
pop
ss
lcall
mov
jae
test
xor
cld
and
mov
push
das
mov
movsb
dec
sbb
sbb
jge
mov
decb
test
push
aas
adc
fmul
loope
and
add
cltd
xor
into
bound
scas
jmp
rclb
or
add
movsb
dec
cmpsl
add
cs
pop
sbb
cmc
add
adc
xor
push
dec
repz
add
ljmp
jns
mov
cld
mov
jg
xchg
mov
dec
mov
outsl
cmp
dec
mov
cmp
out
cmp
decl
loop
fldt
scas
lret
scas
jnp
loope
rorb
adc
xlat
lcall
inc
push
mov
cli
repz
ret
mov
jg
add
and
add
and
fs
inc
dec
or
bound
int
sbbb
sub
jne
hlt
xor
jns
rclb
jnp
lahf
sahf
pop
jnp
cmp
lahf
pop
in
cmpsb
outsl
pushl
sbb
dec
xchg
pop
hlt
pop
sub
sti
into
sub
mov
pop
cmc
clc
mov
and
cld
cmp
data16
push
adc
incl
js
or
pop
cmc
mov
xchg
and
push
aas
in
lret
out
ret
push
dec
call
aaa
fbld
sub
ljmp
nop
aaa
sbb
push
addr16
sbb
stos
orb
iret
bound
pop
jo
inc
loope
inc
cmpsb
out
or
stos
call
mov
mov
stos
bound
sarb
mov
adc
incl
pusha
lcall
int3
bound
xchg
jae
jecxz
pop
movsl
mov
xchg
and
hlt
adc
mov
or
int3
jae
pop
outsl
inc
push
ja
call
lcall
pop
and
cmp
aam
int3
cli
xor
pop
sbb
movsb
call
std
decl
mov
daa
mov
incl
insl
stos
push
xchg
cmp
xor
jle
dec
jg
xor
hlt
call
pop
in
pop
cmp
fcomp
inc
sub
stc
add
jecxz
lcall
enter
dec
inc
fwait
or
dec
idivb
pop
hlt
push
and
shrb
mov
call
addr16
in
je
out
mov
stos
inc
loope
imul
adc
jb
lcall
fisttpll
sub
test
icebp
into
stc
inc
stos
push
int3
inc
push
lea
adc
je
shr
out
ss
icebp
mov
dec
mov
jb
mov
push
push
add
jmp
mov
add
push
xor
mov
ljmp
push
pushf
cmp
jmp
mov
add
mov
aaa
cld
pushl
and
mov
subl
lahf
mov
sbb
incl
adc
cmp
or
cmp
gs
inc
insl
jo
xchg
sub
jnp
mov
pop
iret
sbb
das
shlb
loopne
adc
cmp
dec
pop
aad
out
pushf
push
insl
outsl
cli
mov
test
leave
rcll
decb
bound
incl
jns
mov
aam
je
xchg
popf
lds
xchg
out
xlat
call
out
adc
sub
scas
addr16
iret
xorl
divb
pop
mov
outsb
pushl
add
xchg
into
fbld
pop
mov
adc
fsubr
push
push
into
insl
mov
fisubl
repz
dec
mov
iret
outsb
pop
cmpsl
int3
pop
mov
inc
idivb
lret
xor
push
xchg
lods
data16
xchg
arpl
fbld
cmp
insl
cli
jns
sar
lcall
fldcw
push
addr16
sub
dec
cmp
push
aad
pop
add
daa
nop
das
sahf
lret
dec
push
pushl
pushf
or
pop
int
cmpb
dec
cmpl
das
jns
add
inc
xchg
jecxz
sub
xor
push
mov
std
aad
sti
xor
push
inc
fidivrl
pop
inc
xchg
mov
xchg
ljmp
lcall
decl
jae
xchg
ljmp
negl
das
hlt
les
pop
hlt
mov
fcmove
cli
lret
cmp
sahf
push
ds
lock
das
in
jnp
jbe
mov
mov
sub
loop
mov
inc
push
lcall
ja
decl
arpl
addr16
push
dec
movsb
push
mov
cs
xchg
lods
xchg
jg
notl
call
arpl
rclb
push
pop
xchg
mov
jge
add
xor
mov
jns
incl
jg
inc
loope
cmp
sub
inc
movsb
je
add
and
pop
movsb
incb
jmp
adc
xor
sbb
sbb
or
cmp
mov
in
mov
or
cmp
iret
mov
cmp
insb
outsl
gs
aam
call
cmp
out
lcall
push
enter
xor
sub
inc
and
les
decl
fcoml
outsl
pop
popf
dec
sub
push
mov
aad
movsl
push
mov
mov
xor
call
test
ljmp
xchg
in
jnp
cmp
sub
sub
push
mov
mov
dec
aaa
cs
dec
dec
or
call
mov
xchg
ret
dec
mov
xchg
mov
xor
cmpsl
mov
arpl
jo
incl
addr16
nop
pop
aam
js
loope
or
xor
into
sub
cmp
ja
stos
pop
or
mov
idivl
mov
jg
inc
or
out
jae
lret
mov
or
ficoml
push
std
pushl
add
xchg
jnp
and
out
pop
or
cmp
cld
push
loope
sbb
jmp
sub
cwtl
add
fadd
pop
jmp
add
ds
dec
push
test
std
sbbb
ljmp
xchg
dec
pop
xor
xor
jmp
pusha
add
jbe
loopne
xchg
mov
repnz
call
insl
xlat
shll
fstpt
mov
lea
push
out
sub
pop
shrl
lcall
mov
xlat
bound
mov
dec
push
or
lret
pop
adc
pop
push
fs
cltd
fcmovnu
bnd
pop
nop
in
ficoml
inc
cmpsb
lcall
dec
push
push
xor
mov
and
mov
add
bound
push
jg
mov
pop
cmp
out
push
test
adc
std
incl
inc
decl
xchg
test
cmpsb
jae
fmul
mov
cmp
pop
jp
ret
or
jne
fsubr
mov
lcall
in
mov
popa
mov
cs
mov
mov
addr16
iret
iret
mov
ljmp
loope
push
or
push
lods
or
call
pop
jmp
push
push
cmp
cli
push
mov
push
loope
pop
or
add
jb
test
jecxz
dec
jmp
add
ret
pop
adc
or
pushf
sbb
mov
leave
clc
cli
push
incb
push
lock
loope
aad
outsb
xchg
jl
cli
rorl
or
jg
lcall
add
sub
jne
and
jb,pn
xor
fisubs
bound
jmp
cld
and
jne
repnz
jne
xor
xor
sub
fwait
dec
dec
jg
out
pop
pushl
cld
fstps
lret
mov
in
jnp
jo
fstpt
xchg
or
xchg
das
sar
or
testb
push
shrl
scas
mov
ljmp
insb
insb
push
stos
lods
ret
or
call
int3
push
ficompl
es
push
bound
cli
mov
lcall
mov
test
aam
stos
xchg
pop
aas
pop
lea
add
adc
insb
xchg
sub
sub
push
inc
and
and
fsubrp
push
into
xor
stc
and
jno
inc
xchg
jns
push
movl
outsb
in
cmp
push
lock
sub
je
fsubr
push
scas
repnz
les
fsubs
cld
aam
cmp
cmpl
inc
subb
data16
xchg
sbb
out
inc
pop
jb
cmp
adc
fists
xlat
aaa
or
mov
popa
push
pop
lock
mov
dec
cmp
push
xchg
jg
fnsave
inc
xor
ss
jnp
push
insl
lea
mov
mov
incl
test
cmp
aaa
dec
jns
xor
cmp
pusha
lahf
shl
adc
pushl
dec
sbb
test
sbb
xor
and
add
push
ret
mov
call
aaa
ljmp
cmc
test
xchg
adc
add
mov
pop
js
call
icebp
jecxz
mov
inc
cld
lret
xor
pop
out
and
hlt
cmp
out
jle
inc
cmp
sub
data16
jo
roll
xchg
sbb
aam
sbb
sarl
shlb
adc
pop
loop
cmp
lods
loopne
sbbb
sbb
xchg
outsb
ja
lahf
stos
in
sti
pusha
fwait
test
inc
mov
pushf
lods
stos
jo
incb
pop
shl
inc
mov
sub
dec
nop
stos
sbb
push
daa
push
jne
stc
pop
cmpsl
jae
pushl
cmp
mov
ds
cmc
scas
fidivs
in
out
cmp
lret
cmpl
decl
lds
lds
xor
mov
adc
mov
or
lock
gs
gs
mov
cmp
lret
fisubl
dec
push
jl
pop
cmpsb
fdivrl
imul
lds
adc
pushf
iret
scas
in
dec
dec
aaa
push
pop
es
call
out
jae
jmp
dec
fidivrs
and
inc
xchg
cmp
inc
push
inc
popa
and
push
cmp
add
and
popa
mov
out
mov
decl
adc
pushf
xchg
test
mov
icebp
mov
aaa
add
jg
lds
scas
sbb
pop
fbld
in
lds
pop
sbb
ljmp
pop
insl
mov
jg
jl
out
jns
push
inc
adc
shlb
test
jg
cli
lds
fcomi
aas
jbe
or
add
pop
lods
imul
xchg
pop
or
mov
ljmp
xchg
xchg
fisubrs
or
and
pop
js
jns
add
mov
mov
jmp
imul
push
aam
sub
jle
das
test
lcall
cs
pop
xor
xchg
in
push
push
push
jge
call
push
scas
and
aaa
mov
add
jb
add
and
xchg
push
push
mov
incl
fbstp
stos
gs
fmuls
adc
mov
sub
xchg
mov
lcall
dec
mov
subb
bound
incb
ficomps
pop
push
rsm
idiv
mov
mov
xchg
popf
jno
push
xchg
clc
xchg
jge
enter
std
and
mov
fidivl
xor
out
je
jge
jae
and
jge
nop
inc
cld
test
mov
jmp
inc
fs
mov
ds
daa
add
mov
mov
xor
lcall
out
fnstsw
jno
scas
cld
int3
fnstcw
push
mov
ljmp
jmp
xchg
les
lds
in
adc
push
dec
fisubrs
movsb
lods
xchg
jae
gs
pop
shlb
mov
out
xchg
add
mov
mov
lds
push
addr16
pop
lds
add
push
das
in
in
push
ja
inc
pop
sbb
inc
xchg
cmp
gs
push
fimull
rclb
inc
lods
pop
popa
jecxz
loope
test
icebp
mov
add
cmp
jmp
lcall
xchg
and
jp
dec
mov
insb
movb
and
adcl
inc
les
xchg
scas
push
dec
add
inc
in
dec
push
dec
sub
pop
sub
ret
mov
shrl
icebp
mov
leave
ljmp
call
xchg
adc
sarb
std
out
jnp
test
out
neg
mov
xchg
lods
scas
ds
decl
sbb
mov
or
ss
mov
cmpsl
inc
xor
ljmp
add
xlat
adc
cmp
sbb
int3
push
jo
sbb
hlt
xor
xor
decl
mov
push
hlt
out
add
dec
insl
push
std
das
pop
xor
lods
mov
pop
cld
and
mov
clc
subb
and
lds
repnz
adcb
mov
lods
mov
and
adc
call
jmp
or
shr
nop
lea
add
jne
pop
sbb
into
sbb
les
call
inc
dec
mov
andl
cmp
xchg
mov
cmp
xor
pop
repnz
and
jge
loop
outsl
das
clc
decl
lret
loop
scas
sbb
es
cltd
jge
adc
sbb
jg
cmc
push
push
cs
fmuls
bound
mov
std
jg
xor
inc
andl
icebp
gs
push
or
rorb
pop
and
adc
inc
aas
push
out
xchg
call
cmpsb
call
and
int
js
repnz
cmp
in
inc
incl
ret
es
inc
push
xchg
pushf
mov
pop
hlt
lcall
into
adc
add
dec
or
or
lods
and
jmp
sub
push
cltd
mov
addr16
test
push
fildll
dec
into
fwait
jl
test
shr
in
and
xchg
lods
sbbb
cwtl
mov
sbb
cwtl
les
ljmp
and
data16
pop
xchg
ja
sahf
mov
jecxz
push
inc
adc
jg
cmp
and
icebp
add
dec
lahf
pop
sub
stc
jge
dec
lahf
mov
inc
mov
mov
lea
mov
jg
sahf
cs
mov
cmp
mov
mov
cltd
into
cmpsb
dec
mov
das
cli
decl
outsl
shrb
cmp
test
push
sbb
lahf
mov
mov
decl
adc
je
cmc
xor
jo
push
sbb
call
mov
pop
and
or
xor
arpl
xchg
xchg
jg
adc
mov
mov
int
dec
push
stc
jne
je
cltd
cmp
push
mov
cmp
popf
sbb
adc
mov
popa
pop
push
icebp
jmp
data16
sti
pushf
jmp
call
mov
sbb
mov
and
lock
pop
roll
jl
jle
outsl
push
lcall
or
sbb
adc
push
cli
subb
push
js
mov
pop
sbb
xor
bound
sbb
xor
outsl
cli
ljmp
dec
ljmp
in
ret
pusha
cmp
inc
enter
repz
or
jmp
pop
cmc
inc
jne
lods
outsl
setne
cli
cmp
mov
or
mov
xchg
shr
jno
fildl
std
cs
or
pop
aad
imul
add
mov
clc
sub
sbb
lcall
xchg
jle
xchg
inc
orl
fs
decb
adc
or
lods
mov
add
push
jmp
dec
imul
cltd
aas
mov
shll
mov
shl
inc
mov
lcall
cmp
rclb
mov
test
js
rcrb
mov
scas
cli
jmp
hlt
inc
pop
or
std
mov
jno
outsb
inc
adc
dec
daa
add
lcall
dec
ret
daa
mov
loope
loopne
adc
fisubs
in
or
daa
xchg
incl
enter
gs
loop
push
pop
aam
add
pop
mov
test
sbb
ljmp
aam
mov
mov
in
outsb
int3
sbb
jg
test
lods
adc
sub
push
jge
adc
dec
stos
pop
inc
sbb
incl
add
cs
pop
fists
rcrl
jnp
mov
aaa
pop
ret
movsb
test
jg
scas
ss
mov
js
pusha
int
loopne
mov
decl
dec
cmp
fwait
mov
icebp
inc
stos
lret
dec
mov
les
xchg
decl
sbb
sub
andb
mov
out
aad
dec
pop
out
sbb
jmp
push
mov
int
in
mov
mov
data16
push
stos
jmp
notb
rcl
addl
incl
fistl
idivl
push
push
out
add
mov
out
sub
loopne
jnp
ja
jmp
adc
stos
icebp
orb
in
jl
cmpsb
aad
in
sbb
mov
push
cmp
sbb
dec
fbld
adc
rorl
loopne
push
loop
mov
pop
gs
add
sub
call
mov
stos
push
xor
cmpb
popf
cld
daa
cmp
jp
lcall
hlt
fdivs
xchg
rolb
test
fstpl
subb
mov
adc
ret
movsb
fildll
les
sbb
imull
out
sbb
fisubl
xlat
pushl
clc
aam
dec
mov
push
dec
add
sub
cli
ljmp
jle
fiaddl
pop
adc
int3
je
cs
xchg
out
push
lret
sbb
icebp
push
cmp
xchg
ljmp
testl
stos
je
pop
std
adc
pop
mov
gs
mov
xchg
scas
cli
inc
adc
mov
jo
adc
fwait
dec
dec
loop
and
jae
popa
xchg
lcall
pusha
enter
mov
push
and
ljmp
dec
mov
cmp
or
ljmp
in
fnstsw
mov
loopne
repz
std
es
decb
xchg
imul
daa
add
fsts
xor
fs
inc
pop
adc
js
add
frstor
ret
imul
push
push
dec
add
subb
test
mov
mov
mov
or
jp
xchg
xor
call
adc
dec
addr16
cmp
and
xchg
sub
jmp
sub
jo
add
ds
mov
lds
xchg
xor
cmp
sbb
jl
cmpsb
fcomip
push
addr16
xor
mov
jo
icebp
xorb
mov
ljmp
lcall
movsl
shrb
call
lcall
xchg
push
mov
arpl
pop
andb
sbb
mov
hlt
test
divl
xor
ljmp
shl
mov
cmp
les
mov
aam
mov
cli
in
sub
pop
mov
rcll
neg
or
popa
mov
add
mov
xchg
mov
jmp
pop
push
std
fidivrs
mov
jmp
mov
cwtl
add
out
mov
in
ds
adc
pop
daa
pop
pop
push
ljmp
jb
or
dec
cmp
jmp
adc
and
cmp
aam
lock
inc
pop
in
pop
loopne
jecxz
aaa
mov
js
test
call
aad
aad
mov
mov
push
inc
in
sbb
lcall
pushl
xorb
adc
mov
pop
js
pop
jnp,pn
ret
fldenv
inc
push
sub
fcmovnbe
aaa
ja
pushf
sysexit
xor
scas
loope
jbe
popa
mov
mov
and
inc
movsb
jno
xchg
cwtl
dec
cmp
repz
stos
jp
pop
and
pop
int3
mov
push
jp
add
ljmp
repnz
lods
pop
dec
jecxz
sbb
idivl
lea
lcall
jle
cmp
sbbb
pusha
popa
out
repnz
cs
repnz
push
push
das
push
mov
popa
ljmp
imul
rorb
cmpsl
pop
stos
xor
xor
nop
dec
xchg
popa
je
les
ljmp
mov
dec
repz
sbb
mov
jne
cs
aaa
incl
push
arpl
mov
lock
mov
pusha
inc
add
add
xchg
mov
loopne
loope
and
jg
enter
sbb
xor
jg
pop
mov
add
daa
sub
cld
inc
lahf
add
adc
mov
aaa
imul
jg
xor
iret
pushl
jecxz
and
popf
lret
adc
mov
mov
in
dec
enter
xor
incl
adc
dec
xor
xlat
xchg
insl
stos
outsl
rcr
jmp
jns
or
pop
sar
mov
loop
add
jo
scas
int3
pusha
repz
arpl
dec
andl
call
bound
shrb
repz
mov
sahf
dec
lcall
adc
pop
xchg
ljmp
mov
out
mov
in
call
add
into
outsl
insb
mov
pop
ret
std
xor
mov
xchg
or
test
roll
xchg
pop
or
pop
jge
sbb
je
andb
incl
rcrl
in
push
fisttpl
fs
sub
movsl
lods
movsl
inc
push
pinsrw
decl
sahf
xor
test
stc
jno
test
scas
sbb
and
and
decl
mov
inc
cmp
fadd
or
jmp
cmp
fmull
call
lods
push
and
call
xchg
shrb
inc
lock
xor
sub
pushl
jno
mov
fucomip
mov
dec
jg
rcrl
xchg
inc
cmp
icebp
movsb
xchg
arpl
std
mov
nop
sub
sub
call
xchg
pop
sysret
mov
cltd
out
ja
mov
sub
sub
lcall
push
stos
mov
imul
xor
fnstenv
out
jl
scas
mov
sub
call
scas
test
mov
lahf
dec
sub
decl
pop
repnz
or
cltd
mov
in
mov
pop
in
inc
shlb
clc
decl
jmp
out
fst
sbb
push
cltd
es
xor
cmpsl
cmp
xchg
jle
xchg
adc
xor
mov
push
loopne
mov
pop
arpl
push
and
dec
sub
rcrl
loop
adc
pop
lret
add
mov
call
jge
ss
push
push
imul
inc
mov
cwtl
adc
rcrl
decl
aaa
xchg
push
sbb
dec
imul
pop
pop
mov
lahf
decl
sub
aas
sti
mov
repz
add
lcall
xchg
jecxz
jl
incl
ret
and
mull
daa
stc
dec
add
xchg
sbb
mov
mov
and
cmpsb
icebp
out
idiv
fists
sub
mov
lods
out
and
xchg
push
iret
dec
mov
in
jo
sbb
fiaddl
mov
mov
cmpsb
pop
test
xor
repnz
jge
pop
insl
ds
pop
pushf
imul
mov
pushl
push
clc
sbb
or
lods
pusha
and
and
push
and
incl
aas
jae
lods
cmp
mov
inc
lcall
sub
mov
sbb
inc
out
jp
inc
test
divb
xchg
cmpl
ljmp
jmp
std
inc
and
and
xor
cmp
adc
in
ret
mov
xchg
pushf
es
gs
jg
in
std
loope
orl
xchg
mov
xchg
inc
loop
std
fnstenv
jmp
inc
inc
aaa
or
stos
xchg
pop
dec
out
arpl
sti
adc
call
scas
lahf
in
jbe
cmpsb
mov
test
mov
push
push
mov
aaa
loope
inc
mov
pop
or
or
jp
bound
fidivs
stos
loope
inc
dec
mov
scas
sub
pop
inc
push
xlat
repz
popf
int
loopne
mov
aam
inc
clc
dec
adc
push
push
int3
es
testl
fcomip
jmp
das
push
lret
xchg
mov
adc
mov
sahf
sub
ret
or
xchg
call
and
jg
mov
dec
popf
sbb
ds
loope
inc
jo
pop
insb
lahf
clc
es
mov
mov
outsl
js
xchg
scas
mov
or
lret
jp
inc
fbld
loop
push
xor
ljmp
sar
adc
imul
sub
sbb
mov
jnp
jne
sbb
ljmp
push
and
lds
xchg
jae
mov
stos
mov
cmpsl
cmc
add
scas
dec
cmpsb
lds
lcall
sub
pop
outsl
dec
insl
jb
pusha
jmp
lea
pop
sub
pushl
dec
push
imul
daa
add
lcall
out
push
jecxz
sar
shl
sub
mov
leave
mov
pop
sub
test
or
jp
sti
addr16
xor
xor
jmp
adc
jmp
mov
inc
xor
add
cmp
dec
xchg
outsl
xchg
jle
cmp
imul
out
push
repz
pop
cli
dec
in
fiaddl
inc
dec
aas
lods
fbstp
movsb
pushl
sti
mov
out
int3
sub
enter
test
cs
push
outsl
lcall
jmp
or
call
push
jo
push
sbb
xchg
mov
aam
ja
popf
in
fldcw
clc
cmp
inc
std
mov
push
popf
jae
fidivs
mov
mov
out
imul
pop
aas
push
pop
lock
or
in
push
nop
jae
in
rorl
cmp
mov
add
in
xchg
sub
sub
inc
loope
jbe
sar
data16
jmp
jbe
mov
das
xchg
pop
fwait
xchg
jb
sar
mov
and
xlat
xchg
dec
mov
mov
popf
lcall
mov
lcall
dec
xchg
scas
stos
iret
cmp
inc
sub
jnp
ret
xlat
scas
sub
hlt
out
movsl
ret
mov
lcall
in
inc
aam
add
ds
cmpsb
loopne
cmp
and
clc
sarb
jnp
push
test
sti
adc
fistl
or
pop
dec
sbb
cld
inc
cwtl
sbbb
cmp
inc
inc
lea
sbb
ficoml
lcall
ret
lods
call
add
shl
iret
xor
jg
decl
into
xchg
adc
push
mov
push
sub
inc
pusha
add
mov
stc
data16
call
je
jae
mov
mov
mov
sbb
pushf
mov
bound
pop
movl
sub
movsl
add
fs
jmp
int
stos
inc
cmpsl
fwait
xchg
test
call
cld
and
int3
jg
ret
pop
add
icebp
jge
rcl
mov
push
pop
adc
leave
xchg
mov
lret
jae
xchg
fildl
xor
sarb
enter
jl
inc
andb
push
mov
mov
and
stos
inc
dec
and
or
push
mov
ja
mov
mov
or
call
call
jmp
xchg
lcall
jp
lcall
push
xor
rorl
xlat
jnp
into
aas
js
rolb
loop
mov
rorb
test
sub
adc
stc
mov
pop
or
mov
or
dec
out
cld
clc
push
xor
cmpsb
cmp
ja
jno
xchg
subl
cmp
dec
sub
ljmp
inc
ss
jl
sub
inc
push
fiaddl
out
dec
cmpl
push
adc
jg
and
aas
sub
jo
push
jbe
shll
mov
jo
dec
push
add
jmp
dec
inc
jbe
xchg
lea
call
popf
xchg
jge
movsb
sbb
xor
sub
pop
push
dec
cmp
shrb
test
lcall
xchg
scas
jb
and
cmp
sbb
pop
repz
pop
popa
sub
bswap
aas
push
das
jae
jmp
in
andb
flds
imul
jns
jne
push
stc
dec
jg
xchg
xor
adc
call
outsl
mov
push
iret
mov
push
scas
aas
jno
loopne
mov
push
push
xchg
out
lcallw
cmp
lods
int
push
loop
cmp
jge
mov
lds
sub
mov
pop
icebp
mov
push
push
add
rcll
movb
loope
incl
push
mov
sti
lfs
sub
jns
out
pop
push
call
daa
sbb
xor
xchg
gs
lods
pop
inc
das
clc
lds
sahf
and
cmp
adc
and
jmp
xor
mov
inc
stos
adc
dec
ljmp
lds
fisttps
push
lcall
xchg
outsb
pusha
cmp
rorl
mov
sub
jg
push
notb
or
lret
push
jo
jmp
std
pop
sub
jmp
imulb
insl
aad
mov
clc
fdivrs
push
mov
xchg
loopne
movsl
stos
sbbb
inc
ljmp
scas
fcoms
outsl
addl
xor
xor
adc
aam
loopne
sbb
in
or
je
in
push
add
mov
xor
jbe
cli
and
decl
xorb
mov
cli
dec
movsl
cs
cwtl
cmpsl
mov
cmp
cmc
inc
call
and
pop
jp
inc
add
fstpl
out
addr16
sbb
or
dec
popa
popa
and
addr16
push
outsb
mov
jecxz
stos
or
in
pop
mov
incb
mov
lods
mov
and
fimull
push
jmp
fcom
jle
mull
adc
nop
je
mov
pushf
cld
imul
add
ljmp
lret
decw
lcall
fisttps
push
inc
scas
jg
insl
jo
xor
inc
loop
or
cmp
std
pop
push
pushl
movsb
stos
lods
mov
xchg
std
stos
clc
push
mov
stos
and
dec
imul
mov
insb
inc
bound
scas
dec
dec
andb
sub
scas
fs
xorl
loopne
add
in
dec
push
cmpsl
adc
jmp
fldcw
pushl
cmpsb
ret
pushf
and
cmpb
ss
cmp
insb
in
and
and
shr
dec
cmp
pop
movsb
xchg
pop
pop
out
sbb
data16
call
dec
outsl
into
pop
jno
adc
fisubs
adc
cwtl
fs
adc
daa
outsb
add
lcall
jecxz
or
cld
xchg
push
add
pushf
aad
dec
fbld
mov
arpl
insb
and
dec
cmp
insl
mov
std
clc
sbb
test
mov
shll
faddp
mov
lcall
aaa
loopne
pop
dec
jns
dec
into
xchg
push
sub
dec
inc
add
pop
and
mov
mov
push
test
insl
popa
or
jnp
jle
adc
add
call
sub
inc
push
fdivs
or
push
sbb
jb
push
push
jmp
lods
movsl
sub
mov
push
shlb
imulb
sub
jmp
rcr
fstps
outsb
push
xchg
inc
cmp
fldenv
push
mov
cmp
rcrb
pop
inc
ljmp
or
movntps
xor
fmuls
std
arpl
and
sub
pushl
mov
jle
sbbb
mov
stc
pop
lea
dec
xor
dec
leave
icebp
fucomip
outsb
and
mov
mov
je
jg
pop
push
xchg
adcl
push
fldcw
push
fldt
sti
gs
or
lcall
sub
or
sbb
mov
adc
cmp
adc
sub
push
gs
sub
test
jg
sub
or
mov
jge
add
mov
and
fcomi
ds
dec
cmpsl
mov
jge
mov
xchg
inc
clc
std
push
shlb
pop
or
xlat
mov
lcall
testl
adcb
aam
mov
and
dec
adcl
mov
push
rcr
sub
and
pop
pop
out
lods
pop
data16
sti
lret
ljmp
lods
lock
test
dec
cmpsb
fcomip
ret
or
in
push
mov
call
push
movsb
sub
loopne
vmovlpd
add
jmp
loopne
mov
or
jno
outsl
clc
lcall
popf
fnstsw
test
pop
sbb
mov
mov
cs
inc
add
jmp
jb
icebp
stc
jge
je
lds
inc
xchg
xor
das
stos
pop
aam
aas
and
lcall
inc
stc
je
sub
push
test
ja
cwtl
mov
mov
xlat
mov
aas
js
adc
cs
fists
iret
stos
xor
repz
decl
sub
out
fildl
popf
es
int3
data16
push
dec
stos
flds
ja
pop
inc
and
cmpsb
or
jae
shll
and
dec
cmp
out
insb
cmp
in
pop
jge
cmp
cmp
jnp
xchg
inc
inc
lcall
cmp
je
mov
dec
aad
mov
fstl
mov
sub
lcall
cmp
aad
divl
inc
xchg
in
mov
adc
xchg
cmp
jo
hlt
cmp
inc
add
mov
add
lcall
sub
out
into
sti
das
jae
cmp
inc
into
mov
pop
add
cld
xchg
int
mov
add
dec
repz
add
jle
aad
aas
out
dec
mov
aaa
xlat
mov
lcall
dec
inc
inc
mov
stos
ffree
adc
out
push
outsb
jp
dec
cmpsl
mov
pop
fisubl
mov
in
push
lret
and
outsl
and
or
psubb
decl
cmp
sub
mov
xor
mov
cmp
cld
cmc
stos
outsl
sub
inc
fldcw
or
ss
jge
out
in
mov
hlt
scas
mov
and
lods
cmp
cltd
mov
pop
jo
push
inc
add
call
jp
mov
int3
adc
xchg
repz
sub
stc
popa
add
clc
mov
xchg
mov
hlt
mov
and
lcall
lcall
je,pn
outsb
gs
xchg
cmp
cltd
fadd
cmovp
push
or
popf
jmp
lret
icebp
jl
into
sbb
mov
repz
jle
mov
ljmp
add
shll
pusha
mov
cmp
pop
and
cwtl
mov
mov
sub
xchg
popf
ljmp
xchg
decb
enter
sub
dec
test
shll
call
lcall
xor
inc
adcb
xchg
incl
andl
into
test
inc
icebp
adcb
dec
xchg
repnz
mov
fdivrl
pushl
pop
xchg
lahf
pop
ret
loop
cld
cwtl
das
ljmp
mov
gs
adc
lods
les
mov
push
rcrb
aad
mov
push
lret
aaa
ret
push
imul
int
cmpsb
subb
mov
divl
test
sub
call
mov
sarl
das
in
ljmp
push
pusha
hlt
inc
or
xchg
xchg
fwait
lods
lcall
into
add
rcrl
iret
in
adc
lcall
gs
dec
int3
loopne
outsl
ror
sti
out
out
leave
test
sti
inc
cwtl
es
push
outsl
imul
insb
call
jmp
bound
inc
jmp
dec
sbb
pop
jp
add
push
hlt
loope
push
loope
incb
incl
jmp
pushf
xor
mov
movsl
ret
mov
das
insb
mov
sahf
push
add
gs
jne
mov
popa
jl
aam
dec
insl
jg
addb
inc
test
jle
push
shll
jmp
sbb
cli
enter
fsubrs
std
popw
pop
outsl
and
mov
adc
push
cs
shl
dec
shll
int3
dec
mov
ljmp
sub
aaa
and
cltd
push
push
out
mov
or
mov
jns
push
jbe,pn
lret
scas
cmc
cmp
jge
fidivrl
pop
push
add
rcl
pushl
test
push
shll
nop
int
cli
mov
jns
popf
rcl
ljmp
sub
cmp
dec
outsl
das
push
or
and
fdivl
inc
in
and
testl
jne
mov
fiadds
push
icebp
cmpsb
stos
shlb
mov
es
pop
adc
mulb
jns
push
xchg
pinsrw
or
dec
mov
sbb
lret
ljmp
push
mov
cltd
mov
dec
fimuls
test
out
dec
push
mov
pop
mov
dec
out
cli
jle
fisubrs
rcrb
movsl
rorl
cld
push
out
sub
outsb
jns
fcomip
jmp
mov
jle
adc
cmp
loopne
clc
in
push
mov
lcall
adcb
sub
adc
ds
in
mov
scas
inc
cmp
ljmp
or
xchg
fxam
stos
cmp
cwtl
mov
push
xor
cld
decl
stos
sub
sub
pop
and
repnz
add
pushl
int3
mov
cli
andb
cmp
sar
or
xchg
jp
out
add
movsb
subl
and
ljmp
jno
repz
test
fidivs
outsl
stc
nop
add
outsb
mov
push
ljmp
loop
and
test
ljmp
inc
jbe
pusha
dec
jmp
sub
cmp
mov
cmp
or
inc
popf
lret
sbb
inc
mov
pushl
std
fisubrl
sbb
imul
pop
out
xor
cmp
int3
xchg
sub
mov
lret
test
push
jmp
lahf
jb
xor
xchg
lret
sbb
lahf
xorl
and
les
jecxz
out
lods
xchg
insl
adc
pushl
mov
idivl
xchg
push
push
rol
cmp
mov
sbb
call
lea
dec
xchg
add
int
mov
std
push
xchg
shlb
repnz
mov
les
icebp
push
or
jmp
jb
jne
aaa
outsl
mov
pop
jnp
lcall
je
xor
add
mov
incl
xor
and
dec
pop
movl
lds
mov
lds
adc
push
std
cwtl
xor
jo
push
jp
cmpsb
lcall
push
out
insl
mov
in
mov
cmp
dec
stos
inc
push
xchg
inc
call
jg
add
test
lds
imul
dec
lock
mov
push
adc
inc
inc
incl
dec
cmp
cmc
lret
mov
ja
xchg
scas
cs
mov
stos
icebp
rorl
fucomp
cmp
cmpsl
cmp
push
add
fistpl
lret
ds
xchg
xchg
and
or
lcall
xor
xor
pop
mov
fbld
adc
or
or
dec
jbe
jg
push
out
icebp
mov
sub
adc
adc
xchg
int3
push
lahf
mov
push
pop
xchg
pop
sahf
mov
push
ret
sahf
testb
mov
push
mov
add
test
adc
pop
ss
rolb
mov
stc
aaa
lds
adc
mov
mov
daa
sub
inc
movsb
or
dec
enter
sahf
insl
fistl
ret
call
call
mov
std
lods
pusha
into
mul
sbb
sub
jno
sbb
mov
cli
jmp
insl
out
mov
pop
push
or
mull
jge
or
dec
pop
inc
jecxz
inc
sahf
jg
jg
stc
insb
dec
push
jp
sbb
insl
dec
fiadds
data16
dec
sbb
cmc
sub
loopne
sub
mov
decl
cmpsb
in
scas
inc
sub
xchg
mov
sub
mov
push
je
incl
add
pushf
jl
mov
xchg
lret
dec
gs
inc
js
xchg
xchg
mov
ljmp
jp
lods
xchg
add
or
lahf
nop
jns
sub
xor
mov
pop
loopne
loope
add
mov
xchg
xor
lret
inc
lock
in
sbb
pop
iret
and
mov
jno
jecxz
cs
psllw
sub
jmp
imul
hlt
mov
dec
xchg
push
fs
mov
or
inc
dec
jg
adc
mov
jge
dec
ljmp
rolb
push
ljmp
mov
inc
inc
repz
or
lcall
into
dec
push
dec
dec
inc
sti
lret
movsl
xorb
xor
and
jg
insl
fdivrs
incl
jecxz
add
outsb
push
xor
cmp
sahf
out
dec
rclb
or
xchg
decl
pop
mov
mov
dec
int3
insb
sbb
xchg
mov
daa
lea
sub
or
incl
push
push
jo
aam
shll
shrb
cmp
call
js
cmp
xor
shlb
mov
sub
mov
ficoml
scas
pushl
mov
rorb
outsl
rorb
aad
stos
dec
jle
mov
or
inc
pop
dec
movsl
inc
dec
jmp
xor
push
sbb
push
int
cmc
sti
movsb
mov
jnp
shll
outsl
xchg
ljmp
std
decl
adc
or
inc
jecxz
iret
int
dec
daa
cmp
dec
test
dec
jae
sbb
xchg
out
push
lcall
or
cmp
xorb
push
jmp
cmp
mulps
inc
pop
push
dec
lods
movsb
shlb
loopne
mov
decl
fs
pop
inc
or
rcl
sub
repnz
push
shll
insb
sub
mov
cmp
push
mov
inc
aaa
hlt
xchg
pop
or
xchg
icebp
mov
dec
cltd
jne
and
xchg
sarl
sbb
incl
jge
and
inc
and
dec
ret
push
jno
fwait
clc
repnz
xlat
jg
mov
repnz
pushl
shlb
int3
outsl
or
push
mov
sub
fsubrl
push
cld
cmp
jle
inc
adc
pop
jl
mov
mov
out
ljmp
js
testl
sar
sbb
pop
sub
xor
data16
adc
push
add
adc
push
les
call
dec
pusha
stos
sub
sar
jb
pusha
add
scas
lahf
pop
int3
ret
scas
inc
mov
jmp
icebp
inc
sub
cmp
fiaddl
mov
in
cli
call
cmpsl
imul
or
call
lahf
ret
pop
outsl
pop
inc
std
call
sbb
and
push
popfw
test
jns
divl
hlt
ljmp
pusha
xor
push
sub
pop
xchg
sbb
or
in
push
push
jae
in
lret
xlat
movsl
sub
cs
pop
or
and
push
or
call
stos
bnd
sbb
and
fmuls
hlt
inc
shll
lahf
ret
lock
dec
aam
jo
dec
xor
jp
fdivrl
arpl
mov
add
ret
test
pushl
lcall
sub
inc
fidivs
jne
lods
cmp
test
ljmp
mov
lret
jmp
pop
xchg
and
dec
lock
das
js
pushf
addr16
in
ljmp
jp
push
imul
fcompl
adc
ljmp
jp
cmp
bound
call
sub
cmp
test
mov
imul
push
mov
push
outsb
cs
call
add
add
jl
into
fwait
cmc
and
gs
adc
cmp
cmc
call
decl
dec
fnsave
jnp
loope
pop
lret
test
fwait
in
les
andb
call
cmc
mov
test
push
sub
mov
pushf
dec
call
push
add
addr16
ret
xorb
adc
insb
push
js
inc
push
xchg
add
and
or
pop
test
cmp
inc
dec
xor
jmp
shrl
int3
cmc
jno
dec
jle
pop
out
pop
shrl
xor
pop
mov
push
lahf
mov
test
call
push
xchg
cmp
push
and
dec
cmp
ljmp
addl
cli
ljmp
add
cmp
mov
out
pop
test
cltd
cmpsb
cmp
mov
mov
pusha
mov
jne
mov
adcb
mov
loop
inc
cmp
ljmp
or
stos
cmp
repnz
jle
xor
std
faddp
mov
fidivl
mov
sbb
call
mov
mov
stc
jno
in
or
movsb
push
xchg
fstps
nopl
xchg
cmpsb
das
incl
lcall
add
out
or
jnp
sbb
fcoml
decl
iret
cwtl
pusha
jne
sbb
pop
mov
pusha
mov
jge
shl
mov
leave
jne
dec
xchg
or
rcrb
int
mov
push
mov
int3
or
mov
scas
dec
push
dec
cld
jmp
push
push
sbb
jo
mov
in
add
cmp
cmp
and
incl
xor
lods
scas
loopne
add
lcall
mov
int
jno
xor
mulb
mov
fidivrs
shrb
cmp
mov
sub
movsl
jae
mov
cld
cmpsl
lods
jne
lret
sbb
push
cmp
adc
das
arpl
and
inc
out
jg
mov
sbb
ret
imul
push
cmp
loope
lret
sub
inc
jle
clc
call
xchg
mov
pop
jmp
rorl
push
cmp
mov
mov
std
into
sub
sti
cwtl
shrb
sahf
and
into
pushf
pop
mov
jbe
iret
sub
jmp
addr16
mov
xor
add
repnz
in
pop
mov
sar
call
in
add
std
pop
xor
stos
xor
es
decl
data16
insb
aaa
je
or
aad
push
mov
aas
setg
call
mov
sti
cmc
jle
pop
repnz
pop
xor
dec
adc
jle
mov
push
std
call
dec
movsl
pop
xor
xchg
add
rcrb
neg
fnstsw
ljmp
arpl
sub
lea
jg
jl
movsl
subl
std
jmp
cmp
out
xor
xchg
dec
fcompl
jl
les
ficoml
outsb
cmp
push
mov
outsl
rcl
jmp
loop
jmp
fstpl
aas
mov
sarl
xor
outsw
adc
in
jbe
add
incl
xchg
mov
cld
cmpsb
xchg
inc
movsb
shrb
mov
xchg
lods
movsl
aad
pop
cli
xorl
pusha
frstor
aas
push
pushl
fwait
dec
mov
mov
cmpsl
pop
adc
mov
movsb
pop
mov
lea
decl
out
pushf
jmp
jnp
dec
mov
inc
sub
mov
cmc
push
mov
mov
dec
pop
or
movsb
int
sti
idivb
aaa
mov
xor
pop
sub
mov
decl
loope
mov
cmc
std
pop
mov
pop
clc
mov
outsb
mov
enter
jmp
xchg
adc
inc
jg
jmp
push
dec
fsubrs
arpl
pop
mov
sbb
incl
pop
leave
es
jne
in
aaa
cwtl
jne
incl
pop
mov
or
inc
mov
pop
roll
sbb
mov
xchg
mov
xchg
mov
fwait
in
jmp
add
aaa
jmp
mov
push
mov
cmp
jg
mov
bound
push
jbe
push
or
pushl
enter
enter
dec
cmc
add
stos
icebp
cs
js
pop
movsb
mov
sar
call
inc
arpl
ret
pop
mov
stos
mov
dec
cmp
mov
push
mov
jmp
movsb
sub
xchg
lea
xor
jg
leave
xchg
inc
psrlw
pop
outsl
adc
add
in
rclb
mov
or
sbb
push
aaa
and
std
cmp
pop
pop
gs
and
xor
shrl
inc
sbb
sbb
dec
lahf
add
jno
mov
fistps
cs
jb
in
push
sub
jg
lock
xchg
cs
out
popa
fiadds
xchg
dec
fs
inc
rolb
jo
out
sbb
fidivl
xlat
lods
icebp
out
lea
jno
ljmp
test
sbb
add
insl
loope
cmpsb
dec
push
in
test
call
lock
mov
sub
lcall
scas
arpl
cwtl
incb
in
dec
call
ss
enter
pop
dec
ss
insb
mov
fst
arpl
fstps
in
xor
js
sahf
stc
movsl
iret
lahf
cld
incl
into
xchg
cmpsb
adc
jns
lds
sbb
nop
iret
sbb
mov
and
lret
in
push
mov
ss
cmp
push
int3
in
stc
push
push
and
xor
cld
notb
sub
add
push
push
sbb
adc
jl
jl
popf
loopne
cmpsb
sbb
and
cli
call
ljmp
pop
jae
imul
arpl
std
decl
push
cltd
stc
imul
cmpl
pop
std
mov
sbb
push
mov
adc
and
test
fs
dec
jb
push
and
out
mov
ljmp
arpl
xchg
jb
mov
aam
lret
pop
in
cmp
jge
mov
idivb
pop
mov
in
insl
pop
jo
jno
lock
jg
call
jo
icebp
sub
mov
out
divb
xor
and
mov
add
mov
mov
nop
rorb
adc
adc
adc
sar
incl
cwtl
push
inc
hlt
mov
lds
and
sub
data16
je
gs
out
cli
outsl
cmp
and
xor
cmp
and
call
or
xchg
xlat
repnz
insb
mov
insb
mov
add
pushl
pop
push
pop
test
in
jno
jo
test
fwait
lahf
cmp
gs
xchg
add
jmp
test
enter
cmp
pop
or
and
insl
or
movsb
sbb
sbb
repz
filds
jp
lods
cltd
ja
int3
jns
jne
sbb
cwtl
sbb
das
test
sarb
sub
sbb
xchg
or
adc
test
or
xchg
push
pop
sar
lcall
sbb
jl
pop
lea
dec
out
pop
pop
dec
dec
ds
outsb
adc
jge
jecxz
iret
sbb
add
call
aad
mov
push
mov
inc
sub
sub
or
xchg
es
lcall
add
xchg
inc
cmpsl
or
mov
das
mov
fbld
push
scas
push
nop
call
jb
dec
sti
lds
imul
sub
addr16
test
adcb
fsqrt
jnp
inc
mov
or
fisubs
push
push
aas
fcmovu
push
movsl
lcall
add
mov
dec
fwait
lock
pop
sbb
ljmp
adc
ret
mov
jecxz
adc
add
cld
aas
inc
xchg
insl
push
xor
loopne
pavgw
jo
adc
xchg
pop
inc
stc
imulb
pop
or
loope
stc
or
cmpsl
jne
or
dec
push
jmp
ljmp
call
pop
test
dec
js
fldenv
sti
enter
inc
add
push
inc
cltd
mov
test
movl
lcall
adc
adc
cmp
inc
and
pop
mov
imul
mov
test
lods
add
or
movsb
es
cli
mov
jmp
fisubl
fldt
cmpsb
and
aad
jo
and
cltd
rorb
bound
sub
jg
std
add
call
mov
repz
sti
into
dec
mov
je
push
fstps
aam
cli
js
mov
xor
shrl
and
movsl
mov
decl
loop
es
fwait
daa
pop
mov
inc
mov
sub
pop
sub
push
pop
cmp
jnp
ljmp
push
das
or
push
test
les
mov
je
iret
ljmp
in
ss
test
add
sbb
dec
dec
jnp
loopne
sub
sub
fisubs
xchg
clc
pushl
cmpsl
xchg
rorl
cld
daa
cmp
pushl
jbe
aad
add
mov
cmp
or
adc
push
xchg
mov
test
lcall
jp
dec
jp
sub
bound
ret
aad
stos
xor
mov
dec
and
pop
pop
ss
cmp
mov
inc
mov
or
push
jmp
adc
outsl
and
aas
out
cmp
mov
cltd
movsl
shlb
dec
cs
loope
xchg
movsb
mov
lahf
pop
in
jmp
sbb
pop
xchg
ja
sbb
fcomi
jns
cmp
cmp
push
inc
jg,pt
ja
mov
mov
jl
jno
sti
push
inc
pusha
add
cmpsb
mov
adc
xchg
cmp
lcall
mov
mov
xor
push
inc
pop
pop
pop
cld
adc
mov
jecxz
push
sub
dec
sbb
shll
lahf
xchg
sti
jns
mov
call
mov
xlat
out
xchg
and
repz
mov
push
xchg
roll
js
fs
cltd
imull
mov
sbb
sub
fsubs
add
push
ds
pop
dec
push
out
inc
sbb
inc
out
and
pop
sahf
ret
xor
std
out
inc
mov
mov
incl
fistps
les
add
pop
add
out
push
subl
adc
lcall
xlat
mov
dec
xor
sarb
fldcw
shl
jg
out
jg
testb
incb
stos
push
rcpps
cmc
pop
icebp
sub
je
cltd
mov
dec
or
call
std
scas
pop
pop
orb
in
jl
cmp
fnstsw
jmp
repz
sbb
push
aas
iret
mov
ja
jb
scas
clc
lods
adc
pop
and
cmc
fnstenv
je
adc
and
mov
ja
lcall
cmp
inc
leave
mov
cmpsb
or
lods
push
mov
outsb
xor
popa
adc
std
daa
fldenv
or
popf
mov
mov
lock
mov
sbb
and
cli
cltd
adc
add
mov
and
jl
lcall
xor
out
mov
mov
cmp
pop
jb
in
imul
decl
sbb
push
cld
xor
or
mov
daa
push
jg,pn
mov
les
pushf
mov
sbb
adcl
adc
sbb
inc
push
dec
pop
push
xchg
loop
into
sub
in
pop
dec
popa
mov
pushl
cmp
jbe
or
mov
xlat
pop
lea
scas
leave
pop
push
push
fbld
sbb
and
dec
dec
imul
fsts
int3
xchg
sarl
sub
or
icebp
aad
scas
adc
adc
inc
mov
inc
jl
incl
fwait
and
arpl
push
dec
test
shll
mov
push
jge
mov
loopne
inc
rcll
push
pop
adc
xlat
ja
mov
jno
and
enter
push
arpl
jmp
jle
add
pusha
js
lret
mov
cld
decl
lahf
jge
bound
push
mov
subb
lods
insb
mov
mov
aaa
mov
cmp
mov
or
and
rcrl
jmp
push
lcall
jg
mov
sbb
mov
pop
gs
sub
cmpsl
mov
jb
ret
sarb
leave
mov
repz
push
popf
or
hlt
std
hlt
pop
pop
mov
mov
or
test
or
and
and
mov
jmp
leave
mul
jmp
pop
inc
push
fcomip
cld
jle
add
sub
push
xor
out
xchg
in
inc
daa
jo
push
jp
int3
adc
pop
inc
mov
push
push
xchg
dec
and
mov
movsl
mov
in
dec
mov
call
adc
es
aad
icebp
jns
rorb
dec
push
sbb
aas
fs
push
mov
jmp
jae
fs
dec
stc
cltd
cli
mov
mov
push
cmp
mov
dec
push
dec
pushl
inc
jne
stc
je
int
or
fnsave
scas
xchg
and
sbb
pushl
cmp
jae
mov
mov
scas
je
in
mov
pop
call
incl
stos
movsl
pop
mov
and
in
decl
pushf
pop
mov
aad
sbb
nop
cwtl
out
xor
jmp
pop
cmc
sbb
stos
xchg
movsl
mov
daa
cli
test
cmp
data16
mov
mov
and
xchg
stc
and
mov
ja
jmp
or
incl
xchg
fcoms
imul
cmp
mov
inc
aam
ja
fwait
cmp
lret
jmp
aas
je
adc
stos
lcall
pop
dec
cmp
mov
push
sbb
mov
mov
add
jg
incl
loopne
lret
es
popf
pop
test
dec
aam
and
mov
incl
insl
loope
inc
popf
lds
push
or
xor
jo
mov
dec
testl
out
or
pop
add
xor
nop
or
or
adc
sbb
mov
stos
cmc
jge
loopne
lcall
xor
adc
jne
jmp
decl
dec
mov
or
cmp
mov
incl
ljmp
cmp
pushf
outsb
dec
lret
xor
push
cli
fists
mov
lret
pop
push
bound
insb
ds
cmp
lcall
mov
xchg
mov
xor
add
icebp
push
sti
es
sub
adc
pop
icebp
lcall
ret
adc
mov
sbb
fldenv
movsb
and
ss
mov
decl
addr16
mov
add
pop
icebp
mov
jb
xchg
aas
fsubs
test
mov
and
sub
push
cmp
cli
inc
cmp
dec
out
push
jle
dec
inc
pusha
jmp
orb
lds
or
fistpll
pop
ret
cmp
mov
sbb
data16
mov
pop
sar
decl
mov
in
jns
aas
pop
loopne
jg
fiadds
jecxz
add
int3
lcall
scas
xor
ja
dec
push
xlat
in
cld
lcall
push
pop
pop
jg
fidivs
das
stos
xchg
jp
push
push
and
call
dec
mov
pop
mov
xchg
push
enter
cmpsl
push
push
mov
sub
jmp
loop
pusha
jge
out
in
je
xchg
adc
mov
pushl
fidivrs
dec
sub
mov
push
jno
in
subb
fisttpll
cmovg
mov
imul
add
mov
clc
insl
clc
mov
sub
xor
ss
mov
cwtl
lret
repz
mov
jmp
cmpb
pop
xchg
loop
and
loopne
inc
xlat
movsl
cmp
xor
jg
pop
ror
ljmp
daa
rcrb
inc
push
scas
mov
shl
push
sarb
insb
dec
fdiv
bound
push
clc
xchg
cmp
ds
mov
mov
in
and
lds
imul
push
push
mov
push
cs
pop
call
stc
in
lahf
adc
xorl
jbe
fsts
aad
jbe
mov
xlat
push
aad
sub
xor
pop
enter
mov
jg
and
inc
pusha
test
ds
xchg
pushl
jge
out
call
jbe
cli
lret
aaa
pop
sbb
jecxz
sarb
mov
pusha
or
ljmp
jmp
xor
fdivrs
inc
divl
lcall
insl
adc
sbb
jns
sahf
jecxz
sarb
xchg
sbb
and
jle
js
xor
push
sti
cld
xchg
fimull
sbb
data16
decl
pusha
fistps
call
ret
push
lods
xchg
mov
jae
hlt
dec
pop
lret
add
arpl
sub
lcall
ds
std
scas
fimuls
stos
cmpl
adc
mov
push
lcall
xor
or
cs
daa
in
ret
sahf
xor
cmp
aas
enter
loop
lret
decl
sahf
cmp
imul
neg
and
scas
adc
ja
jg
das
into
repnz
pop
push
int3
push
xchg
stos
mov
popa
push
sub
push
xor
xchg
mov
int
clc
ds
pop
sub
pop
out
lcall
cmpsb
cmpsb
fs
stos
dec
and
ja
cmpsb
add
roll
mov
sar
ljmp
lret
sarl
xchg
shlb
xor
mov
or
jecxz
hlt
testl
dec
movsl
inc
cmc
inc
mov
call
adc
or
or
pushf
cmp
or
inc
mov
loop
xlat
inc
fistps
jg
daa
jge
loopne
shl
and
test
imul
dec
xchg
mov
mov
jne
pop
filds
mov
adc
arpl
rorb
xchg
cmpsl
pop
ljmp
and
adc
cmp
xchg
ds
jns
mov
pushl
mov
push
mov
in
pop
inc
or
pop
add
xor
sub
out
incl
sbb
std
pop
xor
and
jne
lahf
xchg
imul
clc
dec
call
negb
add
lods
mov
pop
repz
xchg
pop
jns
adc
mov
mov
lods
xchg
call
inc
repz
lret
cld
cmp
or
in
fnstsw
mov
add
mov
lea
out
add
pusha
cwtl
jmp
incb
mov
popf
lret
add
or
cmp
dec
loope
xor
popf
sbb
ljmp
mov
inc
add
iret
inc
negl
xor
movsl
sti
xchg
mov
xor
mov
jnp
xor
stos
pop
test
negb
inc
fdivl
scas
push
fs
js
cltd
inc
pop
xchg
insb
xchg
or
daa
xchg
out
out
mov
call
jne
ds
pop
sub
pop
stos
inc
dec
mov
fadd
addr16
sub
mov
xor
rcll
and
mov
stos
rep
iret
out
jo
xchg
call
xlat
std
int3
imul
sub
mov
dec
sar
lret
sub
and
jmp
dec
push
add
into
dec
mulb
ret
daa
insl
iret
mov
push
divb
ret
jecxz
push
ljmp
pushl
ret
fdivrs
insl
pop
and
pop
insl
cli
sarb
negb
nop
outsl
pop
sbb
fdivl
lcall
xchg
push
negl
xchg
fmull
es
loop
mov
sbb
lds
xchg
xor
int3
mov
sub
nop
stos
cmp
call
dec
in
mov
scas
jnp
dec
jb
or
add
adc
xchg
push
pop
dec
jmp
loope
pushl
xor
inc
dec
dec
sub
mov
shrb
out
xorb
lds
pushl
sbb
sub
mov
mov
sub
shr
into
push
imul
push
dec
mov
inc
adc
lcall
insb
push
pop
fcoms
mov
sbb
pop
repnz
insl
incl
shr
push
mov
icebp
fisubs
les
pop
adc
popa
xchg
xor
data16
leave
add
mov
loop
sub
adc
mov
pushl
pushf
jae
jb
add
pop
inc
je
addr16
pop
mov
xchg
cs
dec
inc
scas
ud0
mov
ljmp
out
sbb
inc
and
and
mov
jmp
inc
xor
jns
lahf
icebp
jb
ja
iret
rol
adc
or
jg
std
push
pop
loop
ljmp
mov
movsl
ljmp
lahf
int3
dec
add
lock
adc
mul
xor
rolb
add
sahf
ret
insb
hlt
outsb
in
mov
std
ljmp
sbb
push
dec
push
push
sbb
mov
js
push
divb
xor
stos
je
and
sar
jg
jae
cmp
sbb
add
clc
jl
pop
sub
sahf
mov
xchg
out
add
mov
dec
out
push
notb
stos
shlb
jg
andl
mov
mov
lret
insl
daa
arpl
lods
ds
lahf
add
inc
cmc
lahf
mov
lcall
fs
dec
shufps
cmpb
pop
push
mov
pop
sti
sub
lcall
mov
xchg
inc
or
jp
inc
ljmp
leave
mov
or
push
xor
cld
and
or
pusha
pusha
lcall
ljmp
add
sub
fmuls
dec
xchg
inc
mov
shrl
pop
call
mov
popl
fistpl
sub
lods
movsl
adc
rcr
rcll
pop
mov
fcomip
incl
xchg
stc
pushl
jmp
pop
imul
mov
push
inc
cwtl
adc
decl
mov
xchg
nop
test
mov
pop
pusha
mov
shlb
leave
sub
call
pop
jecxz
add
scas
insl
push
cltd
test
lock
imul
loop
cld
mov
lds
lcall
mov
and
mov
mov
sub
fldlg2
leave
pop
and
xchg
pop
inc
out
jmp
sbb
mov
jmp
mov
mov
into
lods
fucom
mov
jmp
je
aad
stc
std
dec
push
movl
add
addr16
aam
add
xor
jns
lcall
es
pop
jb
jp
fistpl
and
xchg
xchg
dec
pop
mov
or
pop
push
cmc
lcall
xchg
mov
repz
mov
pop
jbe
decl
mov
xor
scas
cld
fucomip
jecxz
jne
aaa
les
aad
decl
mov
mov
pop
aad
push
test
xchg
lds
sbb
cld
repnz
sub
add
mov
sbb
mov
xor
sub
mov
sti
sub
push
jno
ja
push
add
jbe
addr16
lcall
cmpsl
dec
mov
mov
jg
jne
test
dec
sbb
les
add
outsl
decl
jle
xor
imul
lods
fst
adc
rclb
jb
push
ds
mov
pop
cld
ljmp
cltd
mov
repz
lret
idivb
sub
mov
out
adc
bound
xchg
xor
pop
mov
mov
push
lods
and
idiv
xorl
aas
xor
inc
xchg
ret
sbb
jmp
xor
mov
movsl
and
les
iret
adc
cli
call
imul
add
dec
popa
xor
fsts
adc
mov
jno
cli
lcall
das
movsb
out
mov
jle
ror
adcb
movsb
mov
lret
cwtl
add
out
out
insb
or
lret
jmp
dec
pop
icebp
sarb
add
mov
sbb
inc
cmp
cmpsb
mov
and
jge
dec
adc
adc
push
xchg
sbb
jecxz
xchg
mov
movsl
sarl
mov
nop
lret
mov
das
rcrb
inc
repz
dec
ret
mov
fdivrs
outsl
clc
cmpsb
dec
xor
and
dec
inc
les
sbb
adc
pop
sbb
or
rolb
rorb
lahf
das
movsl
je
push
mov
jnp
mov
mov
mov
lods
mov
sbb
clc
test
ret
scas
cli
sub
std
jmp
scas
addr16
mov
repnz
or
adcb
cli
aas
gs
lret
and
dec
cltd
pushf
mov
sbb
nop
lcall
cmp
lcall
loopne
mov
in
lahf
pusha
fisubrs
mov
nop
fistpl
mov
outsb
mov
push
lcall
xchg
lret
add
adc
mov
cltd
ja
fsubrs
dec
imul
sbb
mov
sahf
xor
cmpsb
decl
sahf
sub
nop
xchg
lea
not
sbb
dec
and
call
adc
in
inc
mov
mov
inc
mov
hlt
ljmp
mov
jmp
sbb
insl
and
xor
mov
add
inc
dec
push
insb
dec
adcb
outsl
je
orb
mov
adc
fidivrs
pusha
ret
mov
pop
xchg
mov
pop
test
dec
pop
cmpsb
xchg
cmp
jg
add
outsl
pop
xchg
mov
aas
repnz
and
enter
enter
jecxz
mov
xor
sbb
test
rcr
and
fbld
mov
lret
inc
aam
movsb
movsb
lds
xchg
repnz
xor
pop
loopne
jmp
push
iret
push
inc
std
pop
add
inc
pop
mov
cmc
lcall
cmp
addr16
ljmp
cmpsb
pop
test
pop
dec
popa
push
jb
fldcw
sub
pop
jmp
ljmp
adc
rorb
cvttps2pi
ffreep
mov
push
pop
mov
jo
incl
push
lahf
jnp
call
orb
stos
pop
enter
fs
add
push
clc
ljmp
fsubs
aaa
daa
or
xor
push
sbb
mov
mov
icebp
decl
repnz
orb
cmp
cmp
pop
mov
mov
sahf
insl
pop
pushl
mull
pop
xor
xchg
dec
xchg
xchg
jae
inc
addb
out
cld
scas
stc
cmpsb
movsl
pop
sub
jbe
or
inc
sbb
dec
je
inc
cmp
out
idivb
ljmp
cli
pop
inc
mov
adc
xchg
xor
fcoml
leave
mov
ljmp
adc
pop
adc
dec
in
insb
sbb
ss
push
fsubrp
mov
call
fwait
inc
xlat
mov
xor
pushf
cli
ljmp
mov
add
jo
inc
jmp
sub
sbb
bound
fdivl
call
out
mov
fisubrs
addl
repnz
pop
lahf
decl
mov
out
test
mov
add
js
jns
addb
rcl
sbbl
hlt
pushl
outsl
sbb
and
mov
shl
arpl
inc
dec
es
fildll
pushf
sub
fs
cltd
or
shlb
dec
adc
push
adc
int3
xchg
dec
loope
dec
loopne
add
xor
cmp
incl
jnp
aad
adc
mov
mov
bound
jno
xchg
add
inc
pop
dec
arpl
jp
test
lcall
je
and
rcr
jle
or
lcall
and
jb
jns
mov
ljmp
jnp
cmp
push
or
sarl
xor
push
mov
sar
jg
loop
xor
mov
xchg
in
mov
push
mov
loopne
dec
push
inc
clc
adc
or
jg
push
nop
in
pop
mov
fbld
pop
mov
imul
cmp
movsl
out
and
push
dec
popf
testw
out
mov
push
out
jg
lcall
mov
xchg
lcall
bound
lods
iret
inc
jl
std
cmpb
stos
imul
in
mov
mov
incl
xor
imul
adc
or
pop
cs
ljmp
xchg
decl
sbb
fists
movsb
and
in
loop
jno
add
jbe
or
inc
add
decl
or
push
js
and
inc
popa
pop
cmp
outsl
push
dec
ljmp
loope
push
ss
add
fists
inc
cmp
inc
gs
es
ljmp
mov
mov
pop
mov
fisubs
lds
data16
ffree
mov
cli
push
dec
orl
fimuls
mov
je
movsl
jns
or
xchg
pop
fdivl
xchg
mov
insb
call
pop
push
mov
mov
inc
lcall
mulb
aad
pushl
lret
and
fs
int
das
subl
jl
jb
xchg
dec
call
jbe
aaa
cld
jg
ret
repnz
add
mov
push
mov
cmp
mov
xchg
incl
xchg
adc
sbb
or
or
ret
sbb
xor
fstpl
lcall
jecxz
in
pushf
add
orb
addr16
adc
repnz
pop
loopne
incl
mov
cmc
sub
test
jg
mov
mov
or
sbb
xchg
adc
mov
ljmp
pop
test
jno
inc
pop
sbb
les
enter
inc
mov
jg
or
dec
and
enter
adc
mov
push
push
subl
aas
sbb
adc
std
pop
psubd
stos
mov
dec
negb
into
mov
pop
sbb
jb
jp
imul
leave
rolb
lcall
outsl
loop
xor
scas
into
es
sbb
add
and
ret
add
call
test
mov
xchg
outsb
mov
dec
mov
jo
dec
out
sbb
mov
lods
test
inc
pop
decl
dec
lahf
and
sub
cmp
les
hlt
and
xchg
incl
in
daa
cmpsb
sub
mov
ret
push
lods
add
fistpl
xchg
cli
or
pop
sti
shlb
pop
inc
popa
mov
pop
addr16
mov
dec
aas
out
mov
lods
push
scas
adc
fwait
cld
jne
repz
push
mov
jmp
out
xor
iret
daa
and
xchg
pop
ljmp
mov
sub
inc
dec
ret
push
jl
lea
rcl
jno
sbb
pop
cmp
add
pusha
test
lret
roll
fbstp
inc
sbb
push
sub
push
mov
lds
imul
mov
cmp
decl
push
shlb
nop
cmp
add
dec
jno
jnp
mov
or
mov
pop
sub
sbb
outsb
push
xchg
imul
callw
jno
je
stc
push
scas
aad
mov
aam
lret
adc
push
add
adc
and
scas
clc
lcall
into
icebp
arpl
cld
push
stc
test
addr16
dec
ljmp
decl
mov
pop
pop
mov
out
cmp
insl
out
or
lock
mov
push
test
lcall
cs
stos
or
ret
andl
mov
mov
adc
sub
pop
sub
out
adcb
incl
dec
gs
leave
and
dec
fisubs
xchg
jnp
incl
arpl
pop
mov
jb
fwait
cmc
into
push
pop
incb
sbb
mov
int3
aas
dec
mov
mov
lcall
dec
ljmp
mov
in
fwait
pushf
pop
sub
pop
std
testb
popf
pop
hlt
or
cmpsl
out
adc
call
lahf
loope
dec
test
outsb
push
filds
int3
add
mov
js
inc
xor
and
inc
xor
out
call
enter
mov
and
gs
push
sub
xchg
mov
and
mov
ja
fmul
cmpsl
pop
test
sub
je
inc
mov
pushl
jae
ficoml
lcall
mov
aam
xor
fs
lret
mov
sbb
lcall
sbb
fimull
rolb
popa
sbb
loop,pt
jle
xchg
dec
rcl
add
dec
test
icebp
jmp
in
push
lock
sbb
fwait
push
cmpsb
push
out
clc
ljmp
xlat
sub
jg
shrb
test
out
sub
les
mov
and
popa
mov
cmpsb
jno
sti
call
inc
cmp
clc
imul
xchg
hlt
push
xchg
dec
out
push
rcl
fs
rcrl
test
in
xorb
cmp
lds
pusha
dec
scas
ds
jns
inc
mov
sahf
stc
jns
sub
cmp
lock
jmp
inc
aad
jle
inc
push
pop
and
mov
push
or
jmp
mov
out
pusha
xchg
sub
xchg
mov
mov
stos
xchg
stos
pop
gs
scas
sar
jnp
or
in
sub
adc
jmp
push
fwait
pop
jno
xchg
mov
lcall
mov
adc
inc
xor
xchg
pushf
jmp
out
lret
xor
add
out
cli
subl
imul
lret
les
xchg
mov
lcall
inc
xlat
nop
lret
sub
sub
cld
sub
dec
cmpsl
lret
sub
sbb
mov
jge
dec
mov
sbb
mov
add
sbb
movsl
push
fcompl
xor
pop
pop
push
ljmp
mov
fstps
fstpl
out
xchg
sar
xchg
inc
ret
mov
pushl
and
mov
or
xor
and
testl
sbb
mov
lcall
test
jns
jbe
hlt
mov
add
int
lahf
cmc
or
ljmp
sub
leave
ja
push
movsl
test
xchg
jecxz
in
shrl
add
ss
xchg
xchg
inc
cltd
mov
scas
in
push
cmp
fwait
insb
fstl
decl
lret
push
push
adc
inc
pushf
loop
sub
jnp
aam
enter
lcall
pop
mov
scas
pop
pop
xor
mov
ljmp
adc
stc
or
decl
inc
popf
outsb
xchg
fisttpl
in
int3
sub
dec
xor
jo
idivl
loope
jno
dec
dec
and
dec
fidivl
cmpsb
pop
test
pop
adc
lret
ret
cld
pop
or
dec
popf
sbb
mov
pop
cmp
dec
add
xlat
out
stos
xlat
arpl
xchg
push
out
sbb
ljmp
imull
push
cmp
mov
push
lahf
stos
ret
and
fidivs
mov
sub
pusha
push
push
lods
cmp
sub
pop
adc
in
inc
jge
mov
in
add
add
sub
xor
stc
cmpsb
pusha
and
push
lahf
mov
and
jg
data16
sub
stc
loopne
daa
push
into
int
idiv
lret
cmc
push
arpl
xor
lcall
out
xor
adc
push
or
scas
pop
pop
repnz
mov
cmp
into
imul
lcall
push
mov
fstpt
and
ffree
mov
pop
cld
mov
mov
imul
cli
pushl
xchg
add
inc
addb
cmpsl
fcmovnb
sub
dec
icebp
dec
cmp
in
mov
mov
adc
ds
cli
mov
inc
cmp
push
pop
sub
pop
shll
imul
sub
pushl
pop
test
sub
pop
push
inc
cwtd
nop
inc
mov
xchg
jae
ficomps
daa
inc
cli
mov
decl
lods
pop
cmc
in
xchg
mov
pop
mov
mov
bound
and
incl
cld
pop
sub
repz
push
push
lcall
test
push
decl
lret
sub
and
mov
fcomps
or
or
addr16
xor
cli
dec
pop
mov
cmp
jnp
outsl
movsl
inc
pop
jp
loop
popf
and
xor
or
and
js
jmp
inc
stos
push
mov
xlat
hlt
scas
test
dec
mov
cmp
test
decl
fprem
scas
nop
cmp
rclb
in
and
inc
mov
cltd
lock
sbb
mov
icebp
icebp
adc
inc
lods
mov
fildll
push
xor
jecxz
pop
rclb
ret
out
adc
mov
push
push
mov
and
clc
xchg
jo
imull
bound
fadds
mov
ljmp
subb
sub
push
push
cmp
cltd
das
insl
push
mov
pop
mov
lcall
mov
mov
mov
out
or
push
testl
testl
push
cmp
jmp
mov
lock
push
cmp
cmpl
xor
xor
pop
sbb
call
adc
mov
stc
add
icebp
mov
pop
inc
pop
mov
stos
mov
jg
aad
test
mov
cmpsb
lret
repnz
jmp
cmp
sub
inc
cmpsl
cmp
pop
in
push
ljmp
icebp
aad
jle
fwait
mov
jbe
mov
mov
rclb
mov
cmp
mov
lock
cld
aad
cld
xor
jne
fdivr
faddl
iret
dec
sub
imul
mov
sahf
xchg
into
sub
xchg
pop
xor
sbb
dec
cli
dec
mov
cmp
ja
dec
pop
test
jnp
shrl
add
stc
xchg
lret
sub
sub
sbb
sub
hlt
inc
or
decl
or
incl
int
dec
push
dec
lret
cmpsb
add
mov
mov
int3
add
dec
pusha
jns
ljmp
imul
imul
lds
cli
incl
inc
jle
add
lret
jb
cmp
sbb
push
adc
jmp
stos
jle
lock
clc
decl
fistps
or
mov
insl
xchg
testl
dec
jle
scas
mov
inc
dec
aas
and
scas
cmp
xchg
sar
ds
mov
mov
sub
aad
and
mov
or
lea
and
pushl
stc
cmp
xchg
push
punpckhwd
daa
cmp
sbb
aad
jg
sbb
jne
in
lds
sbb
js
lahf
push
pop
loope
sbb
or
stc
mov
pusha
xchg
and
mov
cli
mov
stos
orb
xchg
sbb
js
and
cld
aad
inc
mov
clc
inc
mov
ret
cmc
call
push
push
shlb
out
xor
ja
push
loope
insb
inc
add
xor
insb
and
and
push
pushl
cld
decl
insl
or
std
stos
aaa
lret
jno
movsb
or
jbe
mov
addr16
cld
idiv
xchg
inc
nop
int
test
xchg
add
adcl
dec
mov
cltd
mov
dec
mov
pusha
push
and
rcrl
jnp
test
push
add
mov
fidivl
xchg
and
pop
pop
pop
mov
push
insb
ljmp
rorl
out
xchg
cmp
or
clc
jae
push
sti
pop
insb
cltd
rcl
ljmp
shrb
push
sbbb
loope
push
sub
dec
cmc
pusha
icebp
mov
xchg
inc
xchg
and
pop
js
dec
add
pop
popf
imul
aam
ret
cmp
enter
adc
and
outsl
xor
sub
aam
pop
lahf
pushl
push
jecxz
int
int
inc
push
and
mov
cwtl
sahf
mov
arpl
cld
inc
sub
mov
ss
inc
pusha
aam
lds
lret
or
into
cs
incl
into
enter
shlb
pop
xor
sub
cwtl
in
loop
mov
fcomip
ljmp
scas
scas
and
xor
faddp
es
pop
int
imul
mov
incl
mov
xlat
mov
pop
aad
fadds
cld
mov
inc
std
pop
jge
mov
les
mov
data16
mov
repnz
pop
dec
mov
mov
xchg
or
push
xchg
or
cmp
scas
cmp
sahf
dec
sbb
mov
divb
test
inc
xor
out
ljmp
ficoms
ret
rorl
jbe
pop
xor
out
and
inc
jg
incl
pop
pop
sahf
ljmp
loopne
xor
mov
inc
add
push
jmp
imul
lds
loopne
das
in
jmp
push
sbb
sbb
xchg
pusha
dec
or
jmp
push
cli
out
inc
sbb
decb
push
popf
aas
mov
std
xchg
cmp
mov
stc
pop
in
call
fnstcw
iret
lcall
pop
xchg
dec
icebp
pop
and
in
stc
dec
or
loopne
in
add
imul
sub
mov
fcmovnbe
xor
jmp
push
inc
add
push
loop
jns
daa
ja
adcl
lcall
and
test
dec
cmpsb
mov
icebp
fsts
jnp
dec
pop
pushl
lcall
decb
xchg
adc
lods
repz
xchg
dec
push
add
stos
sub
and
out
lcall
in
fsubr
xchg
repnz
insl
or
out
imul
add
cwtl
and
mov
ss
dec
dec
add
test
push
cmp
jl
xchg
ljmp
lock
pushf
test
orb
inc
adc
and
push
out
cmp
jp,pt
pop
cltd
les
xchg
lods
ljmp
jns
and
jb
fadds
or
loope
push
orl
push
stos
xchg
mov
aas
dec
rolb
insb
sbb
push
sbb
mov
pop
stos
push
mov
popa
sar
incl
in
loopne
rcrb
push
icebp
or
dec
or
in
test
fistpl
push
xchg
push
xor
and
fnstsw
in
idivb
mov
sub
add
xor
jmp
cltd
fstpl
in
arpl
fidivrl
int3
sbb
pusha
push
leave
ljmp
pushl
subb
jo
stos
sub
mov
jo
dec
jns
movsl
mov
add
aad
popa
dec
sub
repnz
aad
scas
inc
push
imul
ljmp
out
cltd
or
shll
out
sbb
sarb
clc
call
xor
add
push
or
rol
fdivl
adc
cli
sti
out
imul
aam
mov
xor
and
fldt
fstpt
leave
mov
push
ljmp
push
dec
jge
popf
mov
or
xchg
inc
lahf
ds
fisubs
and
jnp
jg
incl
pop
stos
rcrl
jp
sti
pop
mov
leave
mov
insb
incl
sub
jne
sbb
cltd
int3
pop
inc
and
fisubl
icebp
pop
jg
xchg
mov
push
or
cwtl
push
or
nop
inc
cmp
mov
stos
outsb
pushl
cld
pop
jge
lea
push
xor
lret
lock
jmp
and
popa
aad
cmp
dec
or
cmp
loopne
out
test
pop
into
mov
aaa
pop
mov
sbb
pop
mov
test
lock
dec
mov
cmp
nop
sar
arpl
xchg
daa
movsl
mov
mov
jnp
xchg
xchg
add
sbb
xlat
out
jae
push
add
sahf
mov
jmp
xchg
dec
and
add
dec
cmp
mulb
ds
movd
mov
ljmp
inc
daa
add
mov
pushf
pop
or
dec
clc
jmp
sub
or
mov
xchg
inc
push
or
sub
push
jmp
push
loope
dec
ficoms
jno
dec
pop
js
push
xor
pop
jecxz
jle
std
bnd
call
jo
sub
push
mov
push
rolb
add
pop
ljmp
dec
icebp
repz
imulb
addr16
ja
cld
loopne
xlat
mov
decl
jp
xchg
scas
adc
mov
cwtl
ret
cli
adc
js
pop
push
pop
push
cld
pushl
xorl
leave
icebp
xchg
gs
or
jg
and
inc
dec
or
mov
or
xor
pop
add
fwait
loope
inc
mov
inc
stc
test
add
fcomip
aas
cmp
cld
pop
idivl
lods
arpl
fdivs
jmp
decl
mov
iret
rclb
cmc
mov
jle
out
rolb
mov
mov
mov
decl
movsb
fistps
dec
idiv
outsb
pop
repz
std
add
jmp
cmp
enter
inc
mov
xchg
out
sub
mov
xchg
and
movsb
repnz
out
clc
pushl
in
xor
int3
jmp
stos
dec
mov
stos
add
imul
subl
call
aas
pop
sbb
ljmp
add
jnp
inc
bound
call
pop
cmp
stos
fildl
outsl
push
les
mov
or
mov
mov
cld
add
das
lcall
mov
lock
popa
lcall
xor
mov
sbb
int
dec
clc
mov
xor
decl
fsts
out
pop
loope
insl
xchg
pop
scas
mov
aaa
cld
incl
outsl
cmc
dec
dec
mov
xchg
add
imul
bound
lcall
mov
pop
inc
push
je
and
stos
neg
cmp
xchg
lcall
fcoms
and
out
mov
ds
jb
pop
jg
adc
add
decl
dec
int3
and
cmp
push
es
ljmp
add
fimuls
in
int
xor
jmp
mov
jbe
in
mov
inc
and
leave
sbb
les
sbb
jp
jle
or
shlb
sbb
clc
push
clc
imul
push
js
xchg
jp
inc
test
sbb
lock
lds
out
push
mov
stos
inc
shrb
and
inc
sbb
cmc
paddd
jnp
cmc
scas
add
mov
and
lcall
lcall
mov
cmp
shlb
xchg
mov
sti
mov
jne
test
aam
push
mov
pop
not
sub
gs
repz
jmp
mov
push
ljmp
mov
in
dec
sarb
lahf
rcr
jecxz
scas
pop
or
rcll
out
lret
loop
pop
push
and
mov
test
call
jnp
fcomip
call
cmpsl
adc
cmpsl
shlb
fs
mov
out
mov
xor
je
jne
gs
sbb
jge
clc
stos
adc
nop
fs
mov
clc
pusha
int3
push
push
ss
sub
jmp
mov
jmp
dec
push
movsb
insb
add
mov
inc
or
jmp
sbb
or
lods
cmp
jne
int3
aam
mov
sti
pop
popa
nop
xlat
jmp
sub
ljmp
ss
add
push
mov
and
mov
sub
xor
insl
push
dec
loop
rclb
cld
fadds
xchg
pop
jp
or
push
stos
jge
jae
mov
repnz
lcall
call
notl
cmp
lods
add
test
xchg
jl
dec
jecxz
add
lcall
mov
fidivs
add
mov
pop
push
or
add
arpl
cltd
adc
nop
cmp
ljmp
jmp
pop
aas
popfw
cs
loope
inc
sbb
test
incl
jle
xchg
prefetch
fldl2t
sbb
pop
ret
pushf
je
mov
xchg
dec
inc
lea
rclb
call
out
pop
mov
cmp
push
ja
fimull
fisubrs
stc
jge
mov
sub
push
fdivr
adc
mov
xor
shll
push
xchg
xchg
fistpll
incl
adc
or
daa
push
jno
and
xlat
adc
ss
jno
cmp
sarb
jg
push
lock
into
lods
inc
fimuls
cmp
aaa
xchg
fwait
insl
adc
push
add
pushl
sbb
dec
sub
fs
mov
xchg
sub
add
jg
add
inc
add
mov
es
out
xchg
test
sbb
mov
inc
imul
lock
push
jnp
push
add
jle
pushl
ficoml
subl
aad
lret
ljmp
pop
xchg
iret
adc
dec
push
mov
push
dec
fcomps
lret
dec
rcl
enter
adc
dec
xchg
call
mov
js
mov
ljmp
out
cmpsb
jmp
push
mov
mov
jmp
push
jecxz
xchg
incl
repz
daa
push
pop
sub
iret
leave
daa
es
inc
pushf
push
cmp
aaa
sbb
push
or
mov
xor
outsl
daa
rolb
xlat
shlb
adc
ljmp
ficomps
push
aas
into
shlb
test
jno
dec
jns
pop
pusha
adc
in
pop
mov
inc
mov
ficoms
rolb
out
lret
and
push
test
cmp
jge
cmp
enter
stc
inc
incl
popa
xor
inc
adc
sbb
pop
pop
dec
xor
mov
sub
mov
testl
sbb
mov
call
add
add
enter
sub
out
push
jl
pop
ss
add
mov
or
mov
xchg
ss
xor
divl
inc
lret
std
call
add
div
cmpsl
out
out
ss
cmpl
xchg
mov
rorl
out
mov
decl
cmp
dec
inc
mov
push
mov
cmpsb
push
ret
pushl
pop
fldl
outsb
sarb
loop
jae
mov
push
stos
movsl
sub
ljmp
pop
lods
fists
gs
push
pushl
hlt
xorb
addr16
arpl
call
mov
or
mov
mov
inc
xor
ja
jp
inc
sub
jmp
sahf
inc
in
imul
outsl
push
shrb
sbb
cmp
es
jl
sub
jmp
mov
sbb
mov
dec
aam
test
ljmp
add
sub
and
stc
inc
loope
ljmp
push
lcall
dec
and
xchg
cli
in
adc
cmpsl
mov
jmp
or
in
xchg
pusha
xchg
jmp
std
jns
push
insl
lret
insb
add
pop
mov
push
push
push
xchg
cltd
fisttpl
pop
psllw
push
push
out
ljmp
decl
pop
adc
fcomip
dec
cmp
mov
loop
add
cmp
inc
inc
or
jb
sub
mov
nop
lods
int3
enter
fs
pop
vmovups
das
mov
lcall
add
xor
sub
xchg
xor
mov
xlat
leave
sar
cmpb
inc
xchg
lock
mov
pop
test
and
fisubl
addr16
xorl
decl
test
jns
dec
cmp
push
mov
iret
xor
mov
enter
in
mov
cmp
push
add
scas
push
jmp
add
sbb
sbb
js
fists
sbb
cmp
lcall
sbb
addr16
mov
out
das
lods
daa
add
test
loope
pop
xor
pushl
add
cmpsl
das
inc
outsl
lods
popf
fst
pushf
pop
xchg
ss
shrl
mov
pop
popf
mov
sub
incl
repnz
push
sbbb
fsubrp
dec
pop
cltd
loope
jmp
pop
popa
addl
push
rcl
cmp
aam
lds
and
stos
lea
das
fldenv
sub
ret
leave
into
loope
push
mov
ret
mov
cs
jmp
inc
xlat
lea
push
fldcw
xchg
xchg
fisttps
xor
dec
jge
ret
dec
cmpb
cmp
sbb
jo
mul
repz
jg
fnstenv
rolb
sbb
in
pushf
cltd
push
repnz
cli
fs
incl
mov
adc
js
push
lods
jae
imul
or
push
pushl
leave
fisubl
mov
jbe
je
loop
stos
addr16
add
adc
cltd
mov
lock
push
jae
lods
jmp
push
int
push
es
sbb
ljmp
stos
ljmp
jno
dec
in
nop
mov
mov
push
cmp
scas
cmp
lcall
pushl
push
jne
or
insb
adc
mul
div
pop
lret
pop
cmp
mov
sub
push
fmuls
ss
xorl
iret
mov
mov
pop
jnp
ud0
ljmp
cwtl
dec
call
xor
and
cmpsb
sbb
repnz
inc
jle
sub
test
jl
je
int3
fldt
das
imull
inc
add
outsl
mov
jno
jnp
incl
cld
out
imul
pop
xor
pop
cltd
mov
sbb
jg
lahf
xor
mov
scas
jno
mov
push
mov
movsb
stos
sbb
out
sahf
hlt
jmp
inc
ret
and
loopne
push
cmpsl
dec
cmp
repnz
jae
xchg
addr16
cs
lret
cs
mov
inc
std
mov
cmc
pop
jecxz
shrb
incl
in
pop
dec
mov
inc
shlb
das
fildl
mov
les
mov
ss
push
fs
mov
push
scas
or
je
xor
xchg
js
jbe
cmp
xchg
mov
jg
mov
mov
add
push
dec
lds
inc
pop
int3
jns
lcall
ljmp
push
inc
call
popf
test
xchg
sub
cltd
repnz
test
jg
or
cmp
pusha
out
ja
or
push
mov
mov
sbb
fcompl
fcmovne
xor
pop
xlat
sub
sub
or
call
adc
jge
jecxz
lds
dec
out
shr
loopne
enter
xchg
lcall
data16
fabs
adcl
add
lret
lahf
lret
jg
fbstp
jne
adc
incl
js
mov
movsb
idivb
popa
aaa
lea
dec
inc
les
add
or
out
cmp
dec
jns
test
pop
or
movsb
or
call
adc
push
jmp
dec
icebp
pop
cmpsb
js
in
ss
inc
shlw
fstpl
stc
add
and
dec
jne
and
pop
popa
mov
jmp
in
xor
jns
lcall
mov
inc
fidivs
mov
jnp
lahf
sub
adc
data16
outsb
outsb
inc
or
aaa
std
mov
pop
fsubrs
cmp
into
xchg
add
es
adc
or
addr16
sbb
frstor
pop
lret
test
fwait
mov
sub
decl
gs
xor
mov
inc
shl
inc
fdiv
das
mov
in
mov
mov
jmp
into
jecxz
ljmp
and
add
sbb
mov
push
xchg
in
repz
add
imulb
popa
xor
sarb
fdivrp
lcall
mov
add
mov
or
out
lahf
add
sbb
inc
adc
jp
ds
mov
ja
imul
mov
sub
inc
es
xchg
jg
ret
bound
pop
inc
push
into
cmpsl
ret
movsb
movsl
dec
lock
fwait
inc
cld
jmp
or
push
outsb
dec
into
fmul
jmp
add
jno
pushf
js
leave
inc
xor
jns
inc
mov
fwait
push
fidivrl
jbe
cs
gs
or
mov
stc
pop
enter
xchg
sub
decl
add
or
movsl
outsb
int3
cmpsl
adc
push
fmuls
mov
adc
dec
popf
dec
push
fmull
jae
mov
ret
xor
jmp
cmp
or
mov
dec
test
out
push
jmp
push
xor
fs
es
subb
call
jo
or
push
loop
push
sbb
and
pop
and
dec
dec
aaa
ja,pt
repnz
xchg
lock
mov
cmp
fidivrs
jmp
scas
stos
xlat
mov
pop
xchg
movsl
test
pushf
dec
call
stos
mov
sbb
jle
out
mov
jns
test
subl
call
push
or
dec
stc
jg
or
add
push
mov
push
pop
mov
mov
or
dec
insl
pop
lock
pushl
les
push
pusha
stos
xchg
xchg
pop
sub
lret
lcall
push
mov
lods
popa
and
mov
xchg
push
lahf
js
in
aaa
fbld
inc
test
call
je
sbb
mov
inc
lock
sbb
imul
cmpsb
scas
cmp
inc
push
test
stos
jmp
pop
and
repnz
clc
mov
es
notl
call
stc
cmc
frstor
mov
loopne
mov
or
mov
test
ret
xchg
lods
dec
fwait
inc
nop
jmp
lahf
bound
add
ss
sarb
mov
push
mov
dec
add
push
orl
or
push
pop
lcall
loopne
sub
sahf
mov
mov
mov
mov
cld
dec
cld
xchg
shrb
pushf
ret
or
js
andl
jecxz
jmp
pop
fimuls
cs
inc
test
fwait
push
testb
push
jp
add
jg
and
xchg
bound
push
jae
sub
mov
mov
sbb
ljmp
or
jl
js
jns
dec
mov
enter
pushl
nop
mov
faddl
or
inc
out
imulb
in
push
cmp
cmp
bound
loopne
test
repnz
mov
rclb
outsl
mov
pop
sar
cmp
decl
shll
fstpl
xchg
sar
xchg
addb
rcrb
xor
inc
mov
inc
pop
lock
fwait
inc
pop
loopne
mov
fiaddl
pop
sbb
cld
lcall
mov
inc
xor
movsb
adc
jmp
push
cmp
std
push
iret
ret
jae
and
popl
ja
and
scas
incl
cmp
pop
pushf
or
cltd
int
nop
cmp
dec
loope
stos
pop
xlat
or
xchg
adc
sub
xlat
jmp
rolb
mov
jns
out
addr16
dec
sub
mov
bts
jnp
pop
or
lcall
inc
fisttpl
aas
test
cltd
inc
lret
jmp
xchg
xlat
decl
and
stos
and
or
daa
lds
stos
mov
fbld
adc
daa
and
cmp
andnps
lds
mov
scas
mov
dec
lahf
shll
push
or
push
addl
cld
incl
push
and
dec
into
mov
loop
jbe
xchg
jo
imul
stos
jp
mov
call
filds
jbe
cwtl
test
incb
pop
sahf
pushf
xchg
push
or
dec
sub
xor
mov
xchg
insb
pop
xlat
mov
fdivp
call
decl
mov
clc
and
mov
xlat
std
or
addb
or
jl
rsqrtps
decl
inc
in
and
xchg
pop
shll
inc
push
ss
imul
in
xchg
aaa
dec
cmpsb
daa
xchg
ljmp
dec
test
mov
das
jecxz
pop
out
stos
ret
mov
mov
fdivrl
call
xor
lods
pop
dec
mov
bnd
std
ljmp
js
lret
sti
sbb
data16
sar
mov
sahf
jbe
call
daa
mov
adc
dec
pop
jmp
aas
sub
ss
hlt
jmp
ja
jbe
mov
sbb
imul
lret
cltd
insb
adcb
out
mov
mov
xor
out
sbb
leave
push
jbe
sbb
hlt
ret
aaa
sahf
mov
sbb
int
out
push
lret
test
sbb
ljmp
jmp
sbb
pop
ficoml
pop
push
sbb
loop
sti
sub
test
adc
lahf
popf
js
lock
aas
mov
in
mov
mov
stos
ljmp
jmp
call
rolb
push
add
inc
rorb
adc
popa
es
pop
push
mov
pop
jmp
lods
mov
out
or
aam
mov
jmp
lods
or
fstpt
and
imul
and
lds
aad
jg
add
outsl
dec
repnz
sub
lds
mov
and
xor
outsl
fisubrl
dec
jecxz
and
lcall
lods
repz
cli
pusha
js
jb
mov
shll
fistl
into
icebp
icebp
cmpsb
inc
pushl
cmp
lds
push
int
out
push
adc
aas
mov
bound
test
push
call
loopne
iret
pop
jp
and
adc
mov
out
or
xor
inc
movsb
pop
call
repnz
xchg
and
popa
xchg
push
xor
cmpsl
xchg
mov
dec
int
push
xchg
mov
xchg
lock
mov
fwait
sarb
cwtl
decl
lods
jmp
lods
mov
int
add
lret
mov
andb
es
lcall
xchg
mov
pinsrw
push
fidivs
inc
inc
arpl
mov
call
cs
fsubrs
call
nop
xor
push
sbb
xor
or
and
dec
xchg
sub
pop
adc
loopne
push
push
stc
or
sbb
or
cltd
ror
jg
int3
and
call
jae
leave
jecxz
dec
icebp
jle
es
int3
inc
dec
push
daa
push
lret
test
pushl
ret
mov
pop
inc
aas
cmp
cmpsl
dec
stos
sbb
out
sti
or
ss
or
mov
lcall
inc
adc
fcomi
jmp
jecxz
add
ds
mov
dec
scas
mov
cli
out
aad
popa
hlt
xor
adc
push
cli
lcall
shrb
sahf
push
push
outsb
add
sbb
mov
in
dec
jl
inc
stos
mov
clc
jne
dec
in
les
dec
adcl
dec
loope
icebp
dec
mov
jbe
cld
cmpsb
push
jg
mov
inc
jle
cs
leave
call
cltd
imul
addr16
or
mov
push
mov
push
inc
push
incl
js
lock
jo
out
rclb
add
popf
repz
sub
decl
test
pop
xor
add
push
shll
push
jge
dec
jae
int3
mov
fistl
incl
subl
adc
flds
mov
test
sub
jne
in
std
insl
push
decl
sti
ja
mov
loope
mov
out
mov
fsubp
lahf
addr16
inc
aaa
jmp
mov
cmp
and
shr
popf
out
bound
jle
mov
ror
lea
jp
enter
jmp
xchg
pop
adc
or
mov
lret
dec
mov
aam
ss
outsl
fdiv
pop
adc
jae
inc
mov
mov
nop
scas
iret
sub
dec
jg
call
cli
cld
into
add
dec
jl
mov
inc
stos
fsubl
pushl
sbb
out
pop
jno
add
push
imul
jg
rcrb
mov
lock
ja
push
pop
or
je
add
jmp
fimuls
in
adc
mov
mov
iret
sbb
dec
jecxz
inc
jl
cmp
sbb
ret
dec
clc
and
xchg
jl
sbb
inc
mov
add
xchg
xor
cmp
or
jge
push
dec
push
cmp
push
aad
daa
fdivp
aam
ljmp
cld
sub
pop
fdiv
push
imul
enter
aad
jne
push
outsl
xor
pop
xchg
cli
incl
lock
scas
mov
addr16
cwtl
xor
outsl
xchg
xor
pop
sbb
mov
mov
enter
pushl
adc
push
in
repz
mov
insl
add
jmp
or
sahf
jno
in
dec
jmp
mov
sti
add
mov
pushl
insl
test
aad
lea
mov
fdivrl
mov
loopne
stc
das
pop
inc
out
cmp
movb
gs
lods
pop
decb
mov
mov
outsl
push
ficoml
jmp
cmp
pop
outsl
pop
and
sbb
or
mov
dec
orb
pop
sti
out
pushl
push
and
in
push
push
adc
pushf
mov
divb
mov
push
fimuls
mov
mov
mov
mov
mov
ds
inc
dec
adc
dec
in
inc
mov
pop
movsb
push
out
test
ret
mov
pop
imull
fs
lcall
in
cmp
js
es
jg
add
dec
and
mov
add
in
inc
and
dec
daa
sbb
jns
mov
sbb
mov
push
lret
sarl
imul
divb
pop
pop
push
stc
ret
aam
xchg
and
xchg
xor
mov
inc
or
call
xchg
jnp
outsb
loop
push
fsubs
inc
test
js
sbb
inc
xchg
cmp
pop
sbb
loopne
ljmp
xor
dec
jo
adc
inc
adc
ljmp
cli
cs
push
mov
or
push
jns
aad
fcmovbe
scas
inc
call
push
stc
or
in
sti
pop
push
jle
imul
repz
addb
push
daa
pushw
incl
ret
sbb
pop
adc
jb
xchg
imul
mov
inc
sub
decl
push
daa
push
insb
rol
sbb
imul
mov
mov
xchg
jnp
decl
dec
or
push
movl
rorl
inc
mov
incl
fnstsw
lret
lahf
lret
test
adc
xchg
xlat
mov
mov
mov
cld
test
inc
sar
addr16
scas
pop
or
cmpsb
jmp
imul
rolb
in
int3
cwtl
pushf
iret
xchg
or
lcall
inc
cmp
pop
mov
or
jnp
cs
sub
mov
ljmp
jecxz
xchg
loopne
cli
sub
or
jmp
jno
repz
test
xchg
dec
cli
mov
dec
stc
js
cli
pushf
add
icebp
sbb
jge
mov
adc
lcall
je
add
pop
outsl
ja
loope
mov
mov
xor
inc
mov
decl
insl
imul
xchg
mov
xchg
mov
sub
jbe
push
jo
test
adc
and
fneni(8087
incl
push
test
data16
lods
jmp
gs
adc
cmpsl
or
clc
call
push
cmp
cltd
mov
jge
aas
mov
jmp
les
and
add
dec
pusha
xchg
ret
shlb
dec
adc
out
and
mulb
outsl
jp
mov
push
nop
out
mov
fdivs
jae
push
inc
fxch
clc
incl
push
out
cli
ljmp
std
ljmp
cmpb
mov
fmull
mov
fwait
ss
sti
in
insl
addr16
insb
cmp
dec
push
xchg
mov
loope
sar
mov
sub
mov
mov
dec
inc
ja
jae
xchg
jno
push
test
out
orb
and
push
push
adc
pop
cmc
call
mov
inc
imul
mov
int3
in
jecxz
mov
jg
mov
xchg
mov
inc
or
sbb
incb
cld
lahf
sub
mov
popf
push
lods
adc
fdivrl
incl
loopne
decl
lahf
mov
es
lds
lret
pop
les
pop
aad
push
scas
hlt
out
jl
xchg
pop
jne
std
int3
outsb
push
push
faddl
push
push
push
mov
and
fwait
jae
out
popf
imul
jne
ljmp
mov
xor
and
xchg
mov
and
xchg
adc
out
push
add
addr16
jmp
fwait
dec
pop
mov
xchg
shr
pop
outsl
pop
push
movsl
push
push
test
mov
mov
das
mov
repz
inc
add
outsl
lcall
in
ret
pop
add
jle
pop
push
jg
sarl
inc
repz
call
add
lahf
rolb
sub
dec
mov
aas
iret
insl
sub
xchg
mov
movsl
es
arpl
mov
jp
jle
popa
lcall
jg
mov
push
mov
stos
cltd
nop
mov
mov
ljmp
cld
and
jg
into
pop
jge
mov
push
cltd
fimull
cmp
add
cmp
dec
dec
ret
imul
jae
jecxz
cmp
xchg
outsb
jle
jp
dec
fdivr
pushl
cmpsb
add
scas
push
es
lods
pop
sub
cltd
stos
in
pop
jmp
add
add
out
cli
outsl
mov
out
into
movsb
insb
and
stc
mov
call
xor
imul
out
mov
sahf
mov
mov
out
call
cmp
test
dec
loop
or
adc
sbb
cmp
sbb
pop
or
push
sub
cmc
sub
dec
decb
dec
imul
mov
mov
jo
sbb
xchg
inc
hlt
clc
adc
push
xchg
std
mov
lcall
cmp
mov
sbb
dec
push
pop
or
and
fisubl
cmc
decl
cwtl
add
push
cltd
cmp
sbb
sbb
mov
dec
cli
jg
xchg
stos
shl
in
fidivl
imul
jb
xorps
or
scas
clc
out
push
or
iret
jle
fs
mov
fdivrs
cmpsl
hlt
into
dec
mov
pushl
mov
push
sub
add
pushl
ficoml
xor
pop
insl
jle
faddl
insb
cld
fisttpl
mov
xlat
outsb
jne
cmp
out
es
repz
hlt
in
lods
dec
and
sbb
xchg
jae
les
lcall
cmpsl
jg
fwait
je
mov
shlb
mov
cli
sub
cld
call
addr16
cmp
stc
mull
daa
js
outsl
sub
jo
xchg
cmp
sbb
pop
xchg
sub
shll
fcmovnbe
dec
inc
cmp
cmp
mov
fcmovnu
sbb
icebp
add
ljmp
leave
xor
lahf
outsb
push
mov
mov
push
mov
fisttps
jne
cmp
cmp
add
loopne
and
add
lds
out
mov
push
push
xchg
pop
xchg
pushf
enter
mov
je
sbb
ljmp
dec
lret
add
mov
ljmp
inc
test
fisttps
andb
inc
xchg
mov
xor
stos
movsl
into
cwtl
mov
jnp
out
addb
ret
orb
adc
sar
pop
lcall
xor
loopne
pop
mov
xlat
rorl
add
dec
dec
or
je
cmp
and
fidivrl
out
fcomip
mov
fsub
xor
into
pop
js
mov
inc
jmp
incl
dec
pop
lock
push
mov
in
push
sbb
cwtl
stos
mov
lcall
pop
sub
shll
inc
inc
stc
lahf
sbb
and
idivb
je
lods
out
loopne
jae
pop
shr
in
jnp
notb
adc
sub
cmp
scas
jle
dec
insl
rclb
sar
ljmp
pop
outsb
lea
or
xor
mov
adc
mov
adc
xor
cmc
cmp
out
adc
xor
add
jo
mov
sar
pushl
mov
dec
sub
sub
or
idiv
sbbl
push
ljmp
jo
dec
es
aaa
sub
xchg
lods
cltd
jnp
xchg
lods
scas
stc
subb
xchg
lock
scas
xor
mov
pop
xchg
fadds
mov
sub
push
ret
movsl
lret
aad
jg
lahf
mov
cmpsl
inc
and
pop
insl
call
sbb
jecxz
cmp
fstps
mov
int3
mov
jb
xchg
ljmp
push
enter
ljmp
out
imul
hlt
adc
cmp
dec
cmp
popl
mov
push
hlt
jo
sub
jl
dec
lea
inc
mov
cmp
add
insb
inc
and
xor
es
pop
jns
adc
mov
fxtract
decl
out
or
dec
or
les
xchg
and
sub
fsubrl
mov
addr16
inc
adc
sbb
cld
cs
int3
jp
js
not
aaa
popf
push
or
push
xor
mov
pushl
sbb
adc
lcall
stc
adc
adc
jg
in
mov
out
push
mov
inc
jge
sarb
sbb
inc
loope
pop
lcall
cmp
decl
test
lods
jnp
and
push
hlt
mov
and
push
ljmp
add
out
mov
daa
adc
iret
adc
lret
mov
jge
xor
mov
jbe
outsl
into
cmp
pop
decl
push
jl
xchg
adc
lds
cmp
gs
push
cltd
out
cmpsb
or
stos
fdivr
adc
pop
push
push
fimuls
and
mov
xchg
aam
call
aad
sbb
pop
int3
mov
movsb
sbbb
cmp
mov
jnp
lret
mov
idivb
mov
inc
push
repnz
cmp
xchg
aam
pop
jg
mov
mov
and
inc
loopne
dec
cld
rolb
lock
loop
push
popa
in
mov
arpl
add
jg
cmp
loopne
leave
dec
sti
or
lea
lods
push
lock
inc
ret
ss
inc
jle
ljmp
int
gs
ret
das
inc
mov
xorl
int3
pop
xchg
or
aam
ret
decl
cwtl
fistpl
and
ds
dec
loop
push
xchg
add
pop
mov
push
inc
incl
pop
imul
push
xchg
clc
stos
or
jmp
add
mov
mov
jae
xor
mov
ss
fbstp
push
jae
xor
cmp
ss
hlt
loopne
stc
push
and
push
lods
mov
arpl
leave
or
lahf
adc
sub
mov
add
add
fcomp
mov
sub
imul
adc
and
ret
lods
mov
pop
aaa
test
insl
divl
mov
jg
test
sub
out
loop
subl
and
inc
ds
sahf
rolb
into
lcall
fisttpl
in
jecxz
or
fcoml
adc
pop
push
jb
mov
sbb
inc
xchg
enter
jnp,pn
test
mov
es
faddl
or
decl
fcomi
sbb
pop
add
and
add
xor
push
ja
mov
xchg
fdiv
rcr
pusha
aad
xlat
rol
jmp
jmp
fidivrs
mov
cltd
aas
popa
dec
xchg
mov
gs
lret
notl
cli
inc
je
add
notrack
xor
clc
mov
sub
and
adc
shll
sbb
int
mov
ret
je
push
mov
outsb
xchg
mov
jg
aaa
pop
orb
lret
adc
push
or
push
sbb
add
leave
jae
inc
or
xchg
movsl
sbb
mov
jg
jbe
stos
jge
pop
inc
mov
cwtl
cwtl
xchg
incl
mov
sub
jle
nop
lahf
jbe
cmpsb
jecxz
xchg
int3
scas
repz
movsl
jl
dec
inc
shrb
dec
ss
popa
jns
es
imul
jg
data16
mov
pushl
pop
mov
das
sbb
inc
fs
mov
mov
movsb
ret
fcomip
ljmp
pusha
cmpsb
aaa
jg
inc
outsb
sbb
jae
test
ficoms
lcall
lcall
xor
and
les
pop
sub
add
movsb
stos
mov
iret
adc
jg
call
push
bound
pop
xchg
sbb
sbb
inc
jne
in
pop
ja
add
jle
call
jbe
ja
or
lds
sbb
pop
roll
fcmovb
cmpsl
jmp
jne
and
and
mov
mov
movsb
call
cwtl
lret
fdivs
jnp
ljmp
sar
lcall
das
xchg
fadds
adcl
lcall
std
aam
push
cmpsl
push
inc
cmpsb
dec
aas
jbe
mov
in
or
jmp
ds
push
cmc
ljmp
into
test
in
sti
push
ljmp
mov
cwtl
fwait
cmpsl
mov
and
push
fstpt
push
mov
mov
cmovge
adc
push
xor
or
fisubs
and
les
iret
adc
mov
insb
sub
sbbl
decl
cwtl
or
cmp
pop
outsl
mov
jnp
shlb
or
cltd
jbe
cmp
leave
in
jl
into
sbb
mov
shlb
xor
jecxz
push
aam
fcmovu
in
mov
loope
sub
insb
jmp
sub
push
adc
loop
mov
pop
mov
or
incl
adc
mov
aad
dec
vaddsubps
and
add
xor
cmpsb
fnstenv
xchg
pop
ret
roll
jecxz
cmc
rclb
imul
xor
lcall
ficompl
cmp
adc
and
loop
insl
fisttps
sbbb
lcall
xor
cltd
inc
les
call
or
pop
mov
mov
lock
pushl
or
in
dec
add
inc
in
mov
movsl
js
bound
call
nop
sbb
ja
fwait
pop
sbb
les
push
lret
js
pop
inc
adc
mov
cmp
ds
out
jo
lock
mov
jns
out
mov
mov
in
mov
aad
inc
divl
sub
test
sub
mov
xlat
mov
cmp
ljmp
mov
mov
dec
add
pop
push
xchg
lret
in
fdiv
cltd
nop
fdivrp
call
lds
add
inc
hlt
lcall
xchg
jp
push
ljmp
mov
shlb
or
jl
out
dec
lret
daa
sbb
cli
dec
cmp
xchg
decl
shlb
pop
shrb
enter
cmp
imul
aam
jge
jbe
sub
ljmp
dec
adc
int3
push
or
and
push
les
push
aad
outsb
jge
inc
decl
push
jb
out
sbb
loop
outsb
inc
shll
mov
adc
out
pushl
iret
dec
cmpsl
rorb
lahf
sub
pop
call
imul
decb
pop
push
xchg
cs
adc
mov
js
jp
ljmp
fisubs
mov
pusha
push
mov
stc
add
adc
or
cltd
iret
cmpl
fcomip
pushl
pusha
xor
push
aad
pop
in
cmp
incl
pop
into
sub
das
fimuls
das
ljmp
sbb
loop
dec
jns
mov
dec
xor
es
cmp
push
pop
incl
fdivr
cmpsb
pop
ljmp
or
jp
andl
in
or
js
daa
sahf
and
scas
pushf
dec
add
and
ret
push
cmp
scas
in
cmpsl
mov
sbb
jmp
sahf
dec
lahf
aaa
jbe
pop
out
lds
xchg
add
adc
rol
movsb
pushl
out
iret
sbb
sub
loopne
pop
cmp
pop
inc
jno
test
aaa
mov
mov
adc
mov
or
sub
leave
pop
std
lcall
or
fmul
shrb
fcomp
inc
ljmp
push
stos
inc
pop
movsb
popa
push
pop
push
cmp
in
sahf
inc
leave
dec
dec
aad
es
rorb
shrl
cmp
cmpb
jp
aam
xchg
es
lods
out
pop
jb
incl
lea
jp
xor
addr16
jmp
add
xchg
mov
loope
xchg
and
lcall
pop
scas
mov
shl
fiaddl
mov
je
out
stc
rcrb
adc
and
call
add
mov
push
adc
add
or
nop
sti
push
out
mov
in
scas
lcall
popa
fisubrl
and
add
push
cmp
frstor
aad
bound
and
popa
mov
push
add
lcall
dec
test
pusha
rclb
adc
imul
jns
insl
or
jb
nop
call
inc
sar
out
push
mov
aaa
push
std
decl
or
js
stos
xor
add
lcall
rclb
xchg
sub
sbb
popa
dec
pop
inc
pop
pusha
xchg
out
shl
ficomps
adc
ljmp
imul
push
sub
shrb
jp
inc
mov
js
lds
nop
in
cld
test
rclb
inc
mov
fcomip
pop
mov
fnstsw
pop
xchg
mov
or
rcrb
inc
js
dec
insb
lahf
xchg
dec
xchg
or
pushf
mov
cmp
decl
cmpsl
leave
test
dec
inc
or
lret
std
dec
ljmp
add
cmp
push
xchg
icebp
popf
test
xor
pop
fsubs
xchg
bound
ljmp
mov
mov
out
lea
push
add
pop
mov
dec
sub
pushl
lahf
shl
lcall
pop
xchg
mov
in
mov
pushl
ret
cmpsl
adc
arpl
add
dec
lock
sbb
mov
pop
or
jmp
add
cmp
pop
test
in
adc
jb
jno
mov
sub
call
idivl
jle
sbb
fdivl
call
sahf
jmp
bound
lcall
mov
cmp
sbb
sub
lret
push
adc
pusha
pop
aas
pop
mov
cmp
inc
pop
insl
test
hlt
pop
dec
sub
sub
pop
sahf
js
cwtl
xchg
daa
popa
cmpb
cltd
pop
adc
sar
mov
inc
sahf
fwait
cltd
movsb
mov
xor
push
xor
call
ljmp
shl
pop
std
les
pop
xchg
mov
lea
cli
jnp
sbb
js
pop
imul
pop
jmp
sar
jns
sub
sar
lret
loopne
fcomps
xor
pushl
movsb
jp
ljmp
xchg
inc
pushf
icebp
scas
outsl
mov
scas
jecxz
es
jo
decl
and
cmp
test
mov
adc
mov
adcl
les
or
jo
rol
inc
inc
gs
shll
inc
or
movsb
bound
cmp
cld
imul
inc
lahf
les
push
out
push
fistps
pop
mov
ja
inc
dec
mov
mov
or
movsl
test
push
cld
lea
sarb
mov
cmc
negb
ljmp
aam
incb
inc
jge
add
movsl
insb
repz
mov
outsb
fsubrs
mov
int3
aam
xchg
jecxz
pop
cld
orb
aad
lret
mov
jae
inc
xchg
xchg
pop
jg
test
jmp
mov
mov
test
mov
bound
mov
lret
push
mov
or
fdivp
add
jmp
and
xchg
mov
push
and
popa
xlat
sub
ja
and
incl
pop
loope
xchg
add
xlat
stos
pop
out
out
lahf
and
movsb
hlt
call
inc
addr16
jae
jne
and
lret
fsubl
sub
outsl
dec
jns
ja
popa
repz
scas
jl
mov
jne
sbb
out
lods
inc
outsl
sub
add
xor
cmp
js
sbb
incl
cwtl
jbe
std
scas
add
insl
xchg
enter
sbb
cli
adc
adc
call
movsl
mov
stos
adc
outsb
mov
pop
mov
sti
push
fld
pop
or
incl
test
push
xchg
inc
adcb
add
lods
push
push
sbb
xor
cmp
imul
stc
incl
repnz
pop
rolb
sub
adc
mov
or
mov
decl
in
neg
add
fidivs
shrl
pop
lahf
hlt
mov
and
sti
popf
mov
fdivr
xchg
push
imul
sbbl
out
xor
call
ljmp
ret
les
nop
mov
gs
xchg
ljmp
sar
movsl
xor
and
push
dec
cmp
xor
fwait
incl
lods
xchg
dec
fmul
icebp
lret
fiadds
jne
popf
adc
in
sbb
iret
mov
incl
cmp
iret
sbb
or
add
jns
sti
inc
xor
sub
iret
loopne
int3
sub
mov
mov
cmc
das
cmp
int3
repnz
std
ljmp
je
mov
cltd
push
dec
mov
call
in
bound
pop
seta
lock
pop
xchg
mov
xlat
iret
sahf
or
aas
inc
pop
or
mov
adc
sbb
inc
dec
dec
sub
ljmp
incl
repz
xor
add
or
inc
rorb
pop
nop
sti
add
jmp
push
xlat
popf
push
cmc
dec
sbb
xor
repz
stc
xchg
mov
fiadds
inc
cmpb
cmc
ljmp
outsl
aam
push
add
ficompl
fwait
fwait
cld
dec
lods
mov
push
clc
stos
cs
push
push
xor
dec
ljmp
ret
inc
cmc
mov
adc
dec
jne
adc
stc
hlt
pop
xor
lret
lret
fstl
cmp
test
scas
repz
popa
push
test
je
orl
call
mov
gs
mov
imul
push
iret
lea
inc
add
inc
data16
push
mov
cmp
jp
fs
sahf
or
mov
or
push
or
in
pop
call
popa
into
icebp
inc
jmp
xor
cmpsl
les
and
and
pop
mov
pusha
loope
add
lcall
roll
les
jns
push
or
pusha
stos
into
mov
out
in
lods
sbb
call
scas
cmp
lock
repnz
popa
inc
fnstsw
ljmp
dec
in
add
call
lret
push
popa
bound
dec
aad
je
push
and
inc
mov
mov
fs
mov
and
dec
movl
xlat
dec
ljmp
add
aam
push
cmp
sahf
movb
push
mov
push
outsb
dec
xor
shlb
xor
cmp
pop
push
hlt
sub
and
hlt
inc
addl
push
xchg
sub
and
loope
leave
xlat
xchg
pop
insb
lods
inc
cmpsl
call
sbb
loope
xchg
mov
mov
mov
fistpl
neg
repz
mov
incb
xchg
leave
stc
jmp
rclb
jnp
aaa
jbe
insl
outsb
sbb
ror
mov
and
pop
shrb
jnp
fidivl
aad
movsl
mov
sbb
push
fistps
jmp
adc
js
ljmp
das
xchg
out
out
jmp
pushl
sub
aad
sub
lods
sub
clc
ja
repz
test
xchg
std
popl
sbb
pop
cld
decl
fsubrl
outsl
fimull
gs
shll
lock
ja
cmp
xchg
imul
sub
rclb
outsb
out
push
and
js
mov
loope
adc
jmp
insl
in
mov
clc
fucompp
xor
lea
or
call
mov
sub
add
jge
mov
add
in
or
sbb
call
enter
fnstcw
addr16
mov
rol
mov
stc
push
mov
pop
insl
sub
ljmp
sbb
jmp
mov
jmp
test
iret
ljmp
dec
clc
dec
pop
aas
push
sub
push
stc
push
add
mov
shll
cli
jmp
fld
adc
test
in
nop
inc
cli
cmp
cmp
scas
loop
lret
push
scas
sub
leave
add
ljmp
jb
sbb
adc
outsl
and
js
mov
inc
push
cmpsb
je
lcall
cmp
sbb
adc
insl
pop
pop
and
dec
push
ret
xchg
fists
mov
outsl
clc
cmpsb
aam
test
inc
lahf
andb
js
sbb
xchg
ds
add
add
cltd
mov
sbb
push
push
pop
dec
push
push
addr16
lcall
adc
mov
jb
pop
jo
hlt
in
push
icebp
in
jns
and
jg
les
push
arpl
xchg
mov
loopne
repnz
lods
sbb
out
lahf
mov
push
incl
mov
stos
or
jae
lcall
or
call
push
xor
mov
mov
adc
pusha
jecxz
lcall
outsb
cltd
jb
xor
ljmp
mov
adc
movl
insl
xchg
bound
rcrb
push
xchg
push
jecxz
enter
in
ljmp
in
daa
lahf
and
pusha
inc
es
fisubrl
outsb
push
loopne
jne
push
jns
mov
adc
push
adc
dec
or
iret
xchg
sbb
jmp
loop
mov
mov
mov
ja
ljmp
out
js
leave
pmulhw
imull
cmc
incl
inc
push
cmpsl
mov
or
sub
inc
loope
jo
add
enter
incl
adc
sahf
jo
inc
out
xor
xor
shl
inc
call
xchg
add
cmp
mov
test
lcall
fwait
scas
and
js
and
mov
xchg
or
fldl
and
cld
in
test
hlt
decl
and
jnp
shrb
bound
cmpsb
ret
fcmovnu
insb
jne
in
dec
call
jge
in
inc
mov
loope
cmp
filds
loopne
inc
push
cwtl
mov
lcall
aas
rorl
dec
popa
test
push
ficoms
movsb
lock
outsb
mov
dec
dec
mov
lret
mov
lret
push
std
das
pop
loope
rclb
pop
push
fsts
lcall
loopne
inc
aas
mov
cmp
xchg
roll
sbb
mov
jns
push
jo
fldl
pushf
and
pop
in
mov
xchg
andb
mov
aaa
fs
jg
mov
jmp
fs
and
xor
insl
mov
pushl
mov
je
lret
jp
cltd
xchg
mov
pop
xor
ljmp
inc
cmp
fcomp
jmp
shlb
mov
fwait
imul
jno
pushl
mov
pop
inc
mov
sbb
ficompl
pop
dec
addr16
dec
ja
loope
mov
clc
decl
pop
loope
mov
popf
and
pop
inc
sbb
test
aam
push
xchg
sbb
jmp
adc
xor
pop
push
sub
jns
in
push
xchg
cmp
imul
decl
adc
xchg
xor
int
movsl
mov
mov
inc
cmp
jmp
pop
lock
notl
mov
mov
add
fucomi
inc
cmpl
cld
int3
cmpsb
adc
call
inc
jge
push
push
pop
mov
mov
jl
arpl
lock
and
dec
sar
mov
mov
in
inc
je
sbb
loope
cmc
pushf
push
pop
test
jo
repz
decl
push
dec
mov
xor
mov
loope
idivl
cmp
jmp
add
push
xchg
or
fdivs
jl
aam
scas
add
dec
jb
jmp
lahf
aad
jns
test
roll
pop
adcl
imul
pop
incl
pusha
sbb
push
push
faddl
enter
cmp
int
adcb
push
inc
rcl
mov
push
mov
fidivrl
incl
aam
enter
mov
into
rclb
loop
call
flds
fistpll
movsl
xor
ljmp
movsb
ja
test
cltd
pop
dec
imul
outsl
sbb
jno
or
rorl
jle
rorl
push
mov
mov
pop
and
ljmp
fbstp
mov
push
sub
mov
jne
inc
aad
add
push
ds
pop
call
loopne
pop
inc
mov
addr16
pop
sahf
adcb
push
call
or
sbb
dec
mov
sahf
je
loopne
ret
sbb
jge
cld
mov
incl
sti
jo
mov
rorb
xor
push
dec
mov
cwtl
lea
jge
mov
pop
xchg
decb
out
adc
nop
mov
movsb
cltd
pop
xchg
cltd
lcall
jno
decl
jmp
or
sahf
int3
sbb
inc
xor
das
incl
std
bound
xchg
or
sbb
and
xchg
or
in
jg
incl
outsb
pop
lret
push
std
arpl
xchg
shrb
enter
movsb
adc
mov
pop
nop
or
cld
call
stc
mov
aad
ret
sbb
dec
popf
push
mov
push
call
cli
push
xchg
arpl
xchg
dec
mov
inc
mov
lods
add
mov
jnp
or
fnstsw
out
mov
push
jg
or
lret
add
fsubs
fistpll
aam
int3
out
mov
add
loopne
mov
shrl
lcall
out
loop
sbb
or
in
scas
inc
out
fldcw
cmp
test
stc
lcall
icebp
ret
cmp
mov
das
adc
pop
and
xchg
fidivl
mov
jge
mov
jg
adcb
sbb
enter
popf
out
xchg
sbb
rcll
lret
lcall
ffreep
popf
adc
mov
loope
ret
adc
das
mov
das
out
call
mov
jne
mov
leave
push
push
inc
sub
scas
dec
cmpsl
fisttps
xchg
add
or
or
repnz
ds
cmp
arpl
in
xor
ljmp
imul
xor
cmp
push
xchg
push
add
dec
push
je
adc
movsb
lret
push
imul
xchg
mov
fs
lahf
xchg
pop
dec
fwait
imul
mov
shl
sbb
adc
dec
ss
add
mov
dec
mov
hlt
sub
clc
mov
mov
aaa
lcall
inc
and
sbb
jecxz
push
pop
mov
mov
inc
das
inc
dec
sub
out
clc
lcall
adcb
hlt
cmpsb
lock
clc
aad
or
xor
int3
jl
lcall
hlt
fadds
repz
mov
or
jmp
push
in
or
cld
pop
add
xchg
or
packuswb
and
mov
das
mov
pop
mov
test
int3
packssdw
sub
sub
popa
mov
mov
cmpl
mov
or
pop
jp
mov
daa
inc
mov
call
inc
scas
xor
push
inc
sahf
roll
movl
outsb
lret
mov
decl
stc
xchg
push
jp
push
pop
popa
adc
sub
pop
andl
sub
add
cmpsl
pop
mov
cmp
daa
in
pushf
lcall
add
decl
lock
jo
lret
fcoml
fldcw
ss
sbb
mov
test
test
movsb
mov
incl
loope
iret
sbb
inc
xchg
add
sti
xchg
adc
lahf
cmp
scas
adc
decl
inc
insl
push
rcr
lods
mov
lahf
inc
cmp
xchg
out
jne
loope
jmp
test
test
sub
in
fsubrp
iret
pop
sbb
sub
cmpl
xorb
pushl
je
test
cld
add
data16
inc
daa
adc
jns
mov
cld
adc
jle
ja
mov
dec
push
mov
and
mov
mov
mov
add
loop
fldt
sbb
push
fwait
icebp
scas
sarl
fs
fs
mov
xchg
movsb
add
jno
pop
dec
ds
inc
lcall
pop
in
and
or
jmp
out
jle
ret
filds
call
fnsave
inc
out
jge
ljmp
js
push
fxch
into
aam
in
mov
mov
inc
xor
xchg
fsubs
or
mov
push
jae
pushf
fstpt
adc
movsl
jmp
mov
dec
push
jbe
pop
mov
xor
enter
jge
inc
frstor
mov
or
cmp
jmp
cli
push
repz
mov
call
stos
xchg
xchg
popf
sub
push
cld
in
arpl
and
mov
pop
jmp
out
pop
sbb
cmp
jle
sarl
adc
push
loope
lcall
dec
jae
push
cmp
ljmp
fsub
jg
test
push
mov
jnp
xchg
mov
mov
pop
ret
inc
icebp
int
xchg
out
dec
jnp
sub
mov
xchg
inc
mov
cmp
fwait
pop
std
pushl
adc
shr
or
add
inc
pop
lahf
dec
cli
sub
or
mov
cmpsb
ss
sbb
sbbb
rcll
nop
ljmp
jmp
mov
mov
xor
pop
test
mov
xchg
cld
cmp
adcb
pop
jbe
mov
cmp
xlat
sub
push
cwtl
sub
adc
addb
add
cmp
push
dec
sub
imul
cld
call
sbb
incl
xor
stos
cwtl
sbb
adc
cmp
mov
out
lods
sbb
push
and
cwtl
fists
call
call
adc
mov
ret
or
mov
fisubl
jg
and
cmc
fldenv
lcall
inc
repnz
cwtl
jecxz
mov
sub
rolb
mov
push
divl
cmp
lcall
mov
addr16
and
xchg
adc
leave
mov
mov
incl
lahf
lds
lds
enter
outsl
sarl
push
stc
ret
jle
addr16
in
mov
std
jne
fabs
mov
jecxz
pusha
test
mov
decl
decl
mov
push
mov
scas
cmc
sbb
pop
lret
ss
mov
fcompl
pop
fwait
cmp
adc
xchg
fxch
xchg
std
or
pop
pop
push
ficoms
mov
je
scas
mov
add
popf
xchg
dec
cs
lcall
mov
ret
je
aaa
xor
pop
jmp
cmpsb
add
xchg
imul
and
push
cmpsb
jg
jb
ljmp
push
add
int
jne
adc
sbb
push
pop
dec
std
jmp
rcrl
sub
shll
mov
mov
out
cli
incl
sub
mov
mov
ret
incb
push
lcall
repnz
jmp
out
daa
push
xchg
std
cmp
fistl
aad
movsb
push
push
bound
jl
rorl
lcall
mov
xorl
cmp
fdivrs
sbb
xchg
cli
mov
add
scas
add
add
into
or
and
mov
lcall
repz
lock
cmpsb
sbbl
shll
push
aad
lahf
adc
adc
xor
jne
call
lret
call
pop
jle
jecxz,pn
mov
arpl
jo
mov
out
sub
cmp
xchg
pop
cmp
sub
rorl
divb
adc
and
lock
int
and
push
adc
scas
stos
lret
ljmp
dec
pop
dec
jl
jb
jl
mov
cmp
call
idiv
int
fimuls
push
lds
pop
push
xor
mov
std
mov
mov
in
mov
mov
das
xchg
cmp
pop
cmp
pushl
lds
hlt
adc
cmp
jae
gs
pusha
imul
pop
inc
xchg
push
cmc
fcomip
jbe
mov
or
lcall
inc
sub
inc
ds
bound
ljmp
inc
pop
sbb
fldl
cmp
or
repz
mov
cmp
xchg
inc
cld
lods
enter
mov
inc
nop
cmp
push
mov
pushf
xchg
es
jge
enter
inc
push
pushl
stos
les
enter
shl
jae
cltd
mov
pop
pop
sahf
jnp
mov
cmp
pushl
rorb
fnstsw
imul
or
lahf
scas
fs
inc
call
push
add
rolb
push
sub
mov
fmuls
inc
iret
sbb
gs
sub
inc
push
xchg
mov
cmp
call
add
sbb
dec
insb
shll
out
push
mov
inc
mov
lret
aaa
pop
cld
mov
setns
inc
out
mov
pop
ss
dec
cmp
fbstp
sub
jmp
outsl
inc
pop
or
cwtl
out
sub
mov
clc
or
xchg
sbb
imul
push
les
mov
pop
call
clc
pop
xor
sub
adc
pop
sub
push
lock
or
inc
jns
add
aas
cld
out
mov
sub
loopne
dec
imul
cmp
loop
cmpsl
fdivr
push
push
pop
insl
cmp
inc
pop
push
testl
rorl
xor
add
imul
mov
add
or
pop
pop
push
or
or
fidivs
or
or
adc
adc
push
adc
scas
std
fwait
adc
add
pop
sbb
adc
adc
adc
in
cmpsb
fldl
add
or
adc
pop
adc
inc
mov
add
or
xchg
push
mov
movb
sahf
add
les
ficomps
push
add
pop
xchg
cmc
inc
mov
subl
imul
add
add
push
adc
pop
and
xor
inc
mov
adc
xchg
jb
js
xchg
orl
inc
or
add
pop
cltd
mov
xchg
jmp
fcmovne
movsb
adc
dec
sub
mov
lods
xor
arpl
mov
or
add
loopne
add
pop
scas
cmp
fdivr
pop
pop
adc
push
adc
pop
popa
jno
and
adc
add
lods
or
xor
adc
add
mov
mov
mov
xorb
scas
fiaddl
or
adc
stos
js
inc
int3
cmc
sub
in
pop
fcomip
jg
adc
sbb
cli
and
mov
inc
jnp
test
jge
ficompl
cmpsl
xor
mov
inc
and
mov
bound
pop
lahf
mov
movsl
jecxz
cli
pop
mov
bound
push
stc
or
xchg
jg
or
insb
sub
addr16
call
sbb
push
push
xchg
add
repnz
inc
lock
scas
jle
fisttpl
clc
cmp
fisubrl
in
mov
orb
int3
lcall
sbb
sbb
mov
push
xor
mov
popl
incl
mov
sbb
scas
adc
mov
xor
lods
scas
xchg
test
decl
and
sbb
sarl
and
roll
fwait
movsb
jmp
pop
push
lret
push
out
in
and
ss
repz
cmpsb
pop
outsl
in
icebp
mov
pop
lock
std
or
pop
mov
daa
test
aaa
dec
dec
pop
push
out
outsl
loope
cld
lcall
mov
pop
cwtl
int
arpl
push
jg
add
push
push
sahf
pop
clc
sti
jg
jno
lock
jg
inc
icebp
xchg
std
sarl
xor
fdivr
decl
hlt
and
xchg
jmp
sbb
das
mov
out
pop
jb
mov
or
push
xor
mov
int
inc
fwait
sbbb
mov
dec
jp
push
gs
dec
rcrl
stos
hlt
push
add
stc
loope
mov
sar
push
mov
fildl
icebp
testb
mov
rcrb
pop
xor
mov
in
repnz
aam
pushl
pop
sub
jg
scas
cld
or
push
inc
sbb
paddb
mov
mov
cld
push
lock
lods
jp
div
decl
aaa
sbb
into
fcomps
sbb
sbbl
into
andl
jmp
test
loopne
cli
adc
aaa
xchg
in
add
inc
adc
loope
cmpsl
aaa
or
icebp
aas
std
cli
push
push
push
idiv
sub
inc
scas
inc
mov
jg
je,pn
sub
decl
jg
imul
mov
mov
inc
es
gs
jns
enter
or
push
pushf
push
cmp
ljmp
incb
aas
sti
punpckhbw
cmpsb
orb
mov
xor
jmp
not
mov
xchg
pop
clc
pop
hlt
lret
movsb
add
xlat
call
lea
jg
gs
std
xorb
jg
aad
adc
das
xchg
cmc
js
ret
incb
pop
shlb
out
xchg
icebp
or
sarb
sbbl
or
sar
ljmp
les
cli
mov
mov
inc
arpl
stos
mov
mov
lcall
pusha
insl
add
dec
loop
jge
push
shrl
ljmp
mov
push
mov
adc
and
sbb
xchg
jo
and
out
incl
icebp
push
iret
sti
cmp
ficoms
aam
sahf
imul
fcmovnu
rorl
decl
enter
add
cld
call
js
cmp
scas
lods
hlt
cmp
ljmp
push
mov
push
movsb
xchg
or
mov
stos
dec
lods
xor
mov
jle
jg,pn
cmpsl
scas
popa
in
pop
or
mov
xlat
pushf
cld
aas
clc
jge
jnp
sbb
outsb
mov
sbb
jecxz
inc
adc
mov
adc
adc
call
jo
pusha
imul
add
mov
cmp
xchg
mov
call
xchg
xchg
and
add
out
jae
shrb
shlb
out
aas
stc
add
out
gs
jno
fidivrl
adc
adc
pop
cld
addl
adc
and
clc
repnz
cmp
fmull
enter
jecxz
scas
inc
stc
sub
in
pop
mov
sub
mov
dec
incb
fidivl
std
loop
aas
mov
or
cld
inc
or
mov
cmpsb
push
pop
jg
add
jg
mov
pop
mov
test
mov
mov
iret
push
mov
push
push
sbb
stos
icebp
pop
incb
jno
mov
jg
adc
push
inc
jecxz
sbb
sarl
adc
loopne
mov
clc
xorl
paddsw
push
or
add
mov
aas
fsubrl
lock
or
sbbb
mov
add
push
sbb
jne
push
and
mov
adc
loope
xchg
lahf
or
push
rcrl
rolb
pop
bound
aas
fistpl
adc
call
jno
pop
jg
fists
scas
inc
sti
arpl
daa
std
or
sbb
mov
inc
cmpsb
popf
push
call
adc
or
imul
xor
dec
xor
fsubr
fistps
lds
ss
jg
jg
stos
pop
add
ds
cmp
out
fidivrl
xor
lahf
les
sbb
sbb
clc
incl
and
mov
in
stc
mov
lahf
outsl
int3
push
sbb
sub
incb
sti
jle
xchg
popa
out
out
outsl
xchg
inc
test
in
jge
popa
push
test
cld
jg
cmp
jbe
outsb
hlt
sti
fsubs
shl
dec
jp,pn
adc
aad
loop
lahf
mov
or
out
lcall
outsl
ljmp
shl
cld
mov
adc
stos
pop
jg
pop
shrb
rcl
jg
jg
adc
xor
pop
rcr
dec
mov
gs
pushf
lea
jg
sti
sti
jp
jnp
jecxz
adc
inc
lds
push
pop
adc
imul
aam
dec
int
sbb
inc
pop
xor
rorb
and
add
cmpsl
push
in
xor
lock
inc
cmpsl
enter
mov
into
test
xchg
movsb
insb
or
clc
jmp
and
xchg
fidivrs
clc
clc
fistps
insb
test
aas
repz
sbb
lock
in
jmp
ret
out
sbb
aaa
clc
push
std
mov
je
icebp
or
mov
lcall
pmullw
mov
push
mov
fsubrp
dec
sahf
enter
fcmovb
inc
adc
inc
loopne
std
insl
and
hlt
out
rolb
pop
or
or
outsl
pop
bound
dec
ss
lods
movsb
or
repnz
clc
dec
cmc
mov
jl
mov
xchg
imul
pop
in
cmp
cld
int
mov
fidivs
clc
adc
repnz
jmp
hlt
dec
mov
cmp
psadbw
xlat
inc
aas
mov
jg
mov
sub
mov
mov
sbb
cld
daa
jp
std
adc
cltd
or
mov
ret
nop
cmp
das
incb
lock
pop
inc
orb
div
cld
idivl
mov
sbb
stc
lahf
loope
jae
jmp
shrl
je
jge
call
push
fbstp
out
xchg
add
out
icebp
mov
loope
lock
js
cmpsl
popf
sti
mov
fbstp
adc
push
adc
jge
aaa
loope
cmpsb
out
cmp
call
xor
incb
mov
adc
mov
and
imul
xchg
sub
mov
cmp
int
add
push
pop
aaa
xchg
std
fisttps
andb
inc
sbb
xchg
fimull
hlt
jle
icebp
ret
ror
sbb
aaa
lds
fidivs
inc
adc
shrb
mov
aas
pop
clc
loope
loope
mov
lahf
jp
xchg
push
jo
add
xlat
rcrl
je
xchg
fldenv
iret
fdivrl
xchg
lcall
push
cmp
repz
add
movsb
loop
dec
sarl
pop
out
jg
jno
ret
shll
cmp
ljmp
inc
push
dec
jge
pop
clc
xchg
cmpsb
lcall
mov
ds
inc
mov
in
sbb
xchg
imul
jle
bswap
jmp
outsl
jmp
std
mov
daa
jmp
fsubrl
rolb
mov
ret
outsl
pop
jmp
push
imul
pop
stc
push
dec
out
fstpt
mov
enter
xor
push
inc
in
adcb
add
int
or
inc
add
nop
cltd
dec
push
push
nop
mov
fwait
rorb
popf
test
and
mov
or
pop
popa
popf
and
xor
addb
out
and
incl
xchg
incl
and
daa
ss
ja
jo
mov
in
fidivl
push
jg
add
pop
sub
sbb
js
pop
mov
pop
dec
orb
inc
add
pop
mov
or
adc
sub
push
sub
popa
jle
jnp
inc
add
nop
cmp
mov
scas
xchg
cmpsl
adc
cmc
in
bound
jnp
xchg
movsl
push
daa
mov
push
mov
add
sahf
and
cs
push
movsb
push
movsb
inc
jmp
rcl
scas
push
stos
push
and
push
test
and
imul
push
iret
ljmp
mov
scas
pop
dec
lods
push
mov
pop
sbb
int
pop
repz
mov
pusha
sbb
mov
out
jp
les
push
adc
fs
mov
insb
or
lret
jg
mov
imul
add
push
xor
movsb
sub
lret
mov
jbe
aaa
imul
push
mov
lock
pop
stos
pop
stos
mov
sub
jb
ss
add
jo
mov
push
shll
sbb
loope
shrb
shll
fidivrl
iret
outsb
or
insl
fcmovnu
mov
push
ja
ret
je
fidivrs
out
jge
neg
add
push
xorb
ljmp
insl
in
in
movsb
push
add
mov
sbbl
push
mov
jns
arpl
push
push
push
add
jne
fwait
in
imul
aam
push
ret
add
sarb
pop
add
push
pop
dec
add
adcl
ja
data16
mov
xchg
cs
push
sti
lcall
outsb
outsl
stos
aas
add
imul
addr16
push
push
xlat
jne
add
mov
ja
ja
push
aad
push
xlat
ja
js
rcrb
fidivrl
push
jp
jp
inc
pop
mov
lock
fidivrl
sarl
ja
fldl
les
je
jmp
ljmp
push
xchg
sub
xchg
in
xchg
sub
mov
xor
xchg
push
setbe
xor
mov
xchg
dec
fisttpl
push
lcall
cwtl
push
cltd
cmp
cmp
pushf
cmp
sti
lock
out
popf
xchg
popf
aas
push
sahf
inc
push
lahf
inc
lahf
mov
mov
mov
mov
push
imulb
sar
fadd
add
cld
out
out
push
hlt
sahf
out
sahf
clc
stc
cli
sti
cld
std
imul
add
mov
jae
xor
add
popa
push
add
fwait
int
add
pop
add
pop
add
add
in
lds
mov
fistpll
add
add
or
mov
or
outsl
or
or
repnz
stos
test
test
or
aam
pop
or
or
pop
pop
adc
adc
lods
outsb
push
rcrb
push
lods
lods
popf
lods
dec
rcrb
pop
push
scas
fcmovnu
stos
mov
scas
scas
insl
lods
pop
pop
adc
mov
add
sbb
push
pop
scas
sbb
scas
scas
scas
and
sbb
nop
fwait
and
mov
mov
push
inc
push
xorl
pushf
sub
sbb
lock
xchg
push
xor
mov
and
and
outsl
push
and
mov
fwait
and
pop
sub
mov
cld
test
pop
sub
popa
and
mov
add
es
fimuls
pop
aas
cmp
mov
push
dec
pop
cmp
push
mov
cmp
cmpsb
add
mov
pop
xor
insl
insl
push
pop
pop
or
or
add
out
addr16
insl
pop
pop
xor
mov
pop
das
push
cs
xor
in
std
mov
add
xor
das
pop
push
push
xor
adc
pop
push
cs
incl
inc
das
inc
inc
xor
adc
push
xor
push
push
popa
jbe
cmp
jl
jge
jno
dec
inc
adc
pushw
decl
cmpb
jo
mov
inc
xorl
mov
xchg
xchg
xchg
popf
pushf
fwait
cld
jg
lcall
mov
mov
inc
xchg
push
dec
in
fisttps
jle
je
push
bound
js
lock
cmp
je
pop
inc
mov
jg
fmuls
xor
add
push
add
xadd
xor
add
sub
test
aas
outsl
sti
mov
jle
xchg
pop
push
dec
add
out
and
mov
and
cmpsb
push
mov
xor
push
inc
orb
inc
push
ja
lcall
es
xor
mov
fldt
jbe
dec
sbb
popf
mov
mov
xchg
jo
push
mov
mov
cmp
divb
enter
xchg
jp
add
popf
mov
aaa
jle
out
inc
jno
lret
push
push
bound
mov
aas
out
cmp
mov
inc
push
sahf
mov
add
add
add
xchg
outsb
add
xchg
cmpsl
mov
push
test
cmpsb
dec
push
dec
push
movsb
das
pop
mov
jae
add
jb
shll
outsl
pop
xlat
pushf
push
testl
pop
add
fwait
imul
lcall
outsb
mov
sti
fwait
dec
mov
add
ja
sahf
jbe
fistpl
imul
iret
add
ds
push
add
and
outsb
testb
mov
data16
shrl
repz
outsb
push
outsl
ror
adc
push
ds
jno
add
jge
push
jg
add
xchg
fisttpll
lock
pop
mov
mulb
add
data16
sti
out
mov
add
test
sahf
hlt
mov
mov
jb
inc
mov
in
push
jle
or
jecxz
or
fiadds
fnstcw
aad
push
divb
fildl
testl
push
adcl
out
sbbl
sbb
sbbl
test
test
sbb
test
in
mov
push
xchg
nop
and
aaa
or
in
xchg
lock
sub
sub
mov
dec
add
scas
outsb
out
xchg
das
push
xchg
imul
cltd
xor
cwtl
push
cmc
sahf
xor
lcall
fwait
cmpsb
pop
cmp
pop
shlb
lahf
aam
jle
push
cmpsb
inc
add
cld
scas
jo
test
sahf
loop
jbe
test
shll
loopne
lgs
int
mov
mov
sarb
dec
rcr
rcl
mov
movsb
pop
adc
ret
data16
add
addr16
cmp
out
je
add
imul
or
mov
mov
femms
or
or
fdivrp
or
or
es
push
adc
push
add
inc
inc
sbb
or
and
mov
ds
add
mov
adc
outsb
or
ds
icebp
xlat
push
and
sbb
mov
stos
add
and
pop
lods
mov
cs
mov
aas
add
repz
aas
mov
add
xor
or
aas
aas
enter
cmp
cmp
cmp
cmp
mov
ds
jbe
subl
push
incl
jle
cmp
scas
xor
dec
mov
jbe
dec
jle
aas
adc
or
ds
xor
dec
jns
in
fadds
inc
scas
add
xlat
push
fadds
mov
addr16
mov
jecxz
jmp
stos
test
cmpsl
cmpsl
cmpsb
cmpsl
add
call
dec
test
mov
mov
ds
xor
sub
sub
sub
xchg
pop
sub
add
in
ljmp
dec
and
inc
mov
push
push
push
push
push
imul
push
pop
push
push
subb
loopne
imul
jg
pop
imul
nop
cltd
mov
mov
nop
test
lcall
cmp
insl
popf
mov
jge
jns
jns
jle
addl
jb
jae
jo
outsb
pushf
sti
mov
imul
inc
enter
push
addb
push
pop
mov
add
add
cli
mov
push
push
cmp
push
repz
dec
xor
enter
bound
aas
add
inc
jmp
cmp
test
add
add
jecxz
std
fstpt
push
mov
fnstsw
fildll
aaa
add
addr16
add
pushf
add
mov
xchg
divb
lcall
or
mov
mov
sahf
or
jae
js
sti
mov
add
mov
mov
test
scas
xchg
js
push
cmp
in
and
out
inc
nop
sub
jbe
sti
fimull
sub
nop
sub
mov
fistl
xchg
xor
xchg
xor
xchg
outsb
lcall
in
imull
jbe
negl
fcmove
fst
clc
cltd
int
es
push
lret
loopne
push
std
adc
fdivrp
divl
xchg
add
test
jg
adc
data16
jge
or
mov
add
pop
repnz
dec
dec
dec
dec
dec
dec
add
pop
mov
add
dec
or
adc
cmp
adc
dec
or
arpl
dec
push
adc
add
or
pop
pop
lcall
inc
push
dec
sbb
aas
in
and
dec
and
adc
sbb
dec
add
outsl
jmp
dec
adc
inc
ds
cmp
cmp
cmp
daa
and
sbb
lcall
push
sbb
sbb
and
add
dec
ss
xor
sub
sub
sbb
push
add
sti
addb
mov
pop
mov
mov
mov
gs
mov
mov
add
and
int3
dec
loop
outsl
add
or
cmp
bound
pop
sbb
or
enter
orb
jbe
lods
dec
xor
incl
sub
mov
jg
xlat
sbb
call
jnp
roll
sysret
inc
xor
or
cmpsb
jg
ds
xchg
cmpsb
pop
stc
sysret
push
and
iret
in
lock
pusha
shl
push
push
add
ja,pn
lock
sbb
aaa
outsl
sub
or
pop
shrl
sahf
jg
add
test
xchg
inc
mov
mov
lods
out
cli
mov
cli
filds
adc
mov
mov
or
cli
pusha
and
push
xchg
adc
jg
sti
jg
or
mov
sub
mov
or
jg
push
stos
add
jg
and
adc
adc
sbb
cmpsl
notb
lods
and
push
cld
jg
add
adc
jo
jle
and
std
ja
jg
inc
dec
sub
jg
repnz
dec
out
jg
mov
pop
mov
jle
lods
or
add
adc
fs
incl
adcl
lret
dec
xor
incb
xor
sub
sub
mov
nop
incl
add
xor
jg,pt
xchg
sbb
push
jbe
insb
mov
add
add
jmp
cltd
lea
call
add
jmp
lods
pop
mov
stc
jle
lret
imul
addr16
orb
and
mov
dec
xorl
cmp
jbe
add
shlb
data16
add
push
pop
sbb
outsb
mov
push
add
sub
jg
push
adc
mov
dec
mov
lods
jle
mov
jmp
popf
notb
pop
pop
pop
add
mov
in
pop
daa
aas
aaa
pop
push
pop
xor
pop
add
addl
in
jle
add
adc
push
mov
jle
sbb
or
jle
push
dec
jns
je
xchg
push
bound
add
mov
lods
fstl
comiss
daa
das
les
das
pop
push
or
popa
mov
and
out
mov
and
dec
lcall
lds
notrack
jae
dec
scas
sub
jle
jle
and
or
push
inc
into
push
fnstenv
add
fimuls
push
jne
pop
push
jbe
inc
fisubl
test
push
jnp
push
jp
mov
or
push
js
dec
jbe
pop
jne
mov
fdivrs
into
pop
es
push
outsb
aam
jne
ljmp
call
or
lcall
outsb
ss
decl
sub
je
jmp
xchg
mov
inc
subb
jns
fiadds
test
push
push
mov
insl
mov
sahf
inc
out
nop
popf
adc
mov
xchg
mov
mov
inc
push
pushf
cmp
mov
pop
cmp
cmpsb
test
xchg
xor
sub
fldt
out
nop
sub
nop
daa
ss
cs
outsb
repz
shlb
lcall
push
incl
incl
jg
sbb
cmpsl
dec
pop
fnsave
xor
decl
sbb
sahf
data16
ss
rcl
push
or
push
add
pop
ja
jbe
or
dec
push
xchg
movb
mov
test
cmpl
divb
mov
add
add
in
adc
sub
sub
push
insl
sbb
add
orb
and
mov
or
mov
push
repnz
fistl
negl
orl
lea
jmp
or
imul
mov
sbb
xchg
xor
ljmp
adc
pop
cmp
cmovb
push
icebp
imul
push
in
add
mov
add
cmpb
decl
jbe
xor
out
pop
idiv
mov
dec
sahf
mov
popf
or
sbb
inc
push
call
add
cmp
sti
xchg
jge
adc
std
into
jmp
syscall
mov
arpl
call
incb
mov
or
xchg
call
lcall
or
mov
sub
daa
cld
pop
das
mov
cld
lcall
js
or
cmpsl
sbbb
out
add
push
jbe
adc
lcall
or
mov
sbb
sti
cmovno
test
inc
fsin
incl
ljmp
ljmp
or
mov
sahf
sub
data16
inc
xor
or
sbb
sbb
sub
push
leave
jae
outsb
decb
mov
mov
arpl
mov
mov
adc
enterw
adc
and
out
rcpps
lcall
mov
adc
pop
aaa
mov
pusha
iret
es
mov
pushl
movsb
xor
fdivrp
push
add
rclb
cmp
sti
push
std
incl
call
call
inc
push
add
and
or
xor
ljmp
and
in
jg
and
idiv
loop
add
movsb
xchg
out
inc
decl
push
xchg
iret
and
fcmovbe
outsl
lret
mov
pop
pop
inc
xorps
imul
mov
sahf
int
push
shll
push
dec
out
push
dec
sarb
mov
ret
incl
jnp
fisttpl
ljmp
lahf
inc
inc
push
ss
fcmove
inc
inc
pop
inc
pop
mov
mov
pop
sahf
movsb
dec
push
stos
push
xor
fldcw
cmpsb
dec
dec
inc
fldcw
dec
cs
dec
mov
add
out
inc
ss
mov
shrb
rcl
outsb
shrb
mov
es
add
xor
insl
cmpsb
cmp
xchg
pop
daa
outsl
pop
imul
push
push
push
test
cs
sahf
in
imul
movsl
pop
int
repnz
and
dec
push
jmp
cli
mov
push
pushf
cmp
aas
decb
cwtl
xor
dec
xchg
xor
xchg
fwait
in
cltd
and
push
aaa
push
lcall
jp
xchg
push
xchg
es
xchg
xchg
cltd
and
xchg
xchg
notb
sub
and
dec
pushl
xchg
scas
incl
xor
and
fcompp
inc
sbb
mov
push
add
or
mov
faddl
jge
push
jnp
mov
fwait
or
jl
or
push
imul
jge
jg
es
jbe
adc
fidivrl
push
dec
push
dec
fbld
push
fnstcw
repnz
jae
pop
fidivrl
push
mov
jnp
andl
push
push
leave
xor
pop
add
push
push
xor
xchg
push
outsl
lahf
adc
adc
adc
or
imul
cmp
jnp
lahf
dec
es
addl
adc
xchg
in
orb
jg
and
xchg
push
sbb
out
push
sub
iret
out
mov
cli
incl
mov
jbe
clc
push
idiv
mov
jb
sub
jg
mov
icebp
or
cld
mov
out
ja
jno
sub
jg
mov
icebp
fucomip
or
jg
je
daa
jg
jns
add
mov
ja
loope
xchg
jl
cmp
cld
jp
es
xchg
rcll
aaa
incb
jge
and
or
orb
jg
dec
stos
dec
pop
ja
movsb
addr16
orl
mov
icebp
idiv
lcall
push
faddl
rolb
push
and
lahf
inc
push
int3
decl
pop
jle
mov
fidivrl
arpl
clc
jbe
fidivs
jmp
mov
push
pop
push
pop
nop
jbe
nop
push
pop
or
and
mov
mov
push
int
push
jns
or
push
mov
push
mov
jmp
xchg
jmp
mov
sti
popf
fldcw
sbb
jmp
adcb
add
lcall
cs
sbb
loope
and
lret
jg
out
mov
inc
push
test
or
iret
sbb
push
mov
add
lahf
aam
jp
stc
inc
or
xlat
mov
push
cmovno
arpl
nop
cmp
adc
add
push
pop
fiadds
and
movb
pop
lret
adc
addr16
test
push
inc
lahf
outsl
add
dec
lret
adc
call
sub
jb
mov
mov
push
sbb
lcall
add
insl
jnp
imul
sbb
add
xchg
inc
inc
or
test
xchg
add
inc
add
and
adc
dec
popa
loope
es
mov
ss
xor
lret
adc
add
sarb
insl
jo
dec
les
mov
stos
test
mov
add
xchg
std
and
aam
dec
add
les
sub
les
jae
push
inc
cmp
fidivl
xchg
mov
add
dec
test
imul
xchg
ss
push
outsl
lock
inc
jmp
lahf
jo
das
push
cmp
sbb
dec
push
fildl
add
imul
and
lds
aas
add
stos
xchg
mov
add
jno
jns
dec
and
add
push
pusha
mov
mov
addl
dec
xchg
adc
mov
xchg
lods
add
xchg
test
insl
and
stos
dec
and
mov
jecxz
notb
shlb
xor
push
dec
test
mov
rolb
mov
xor
es
fidivrl
add
add
push
and
mov
clc
pop
pop
gs
icebp
add
or
ficoml
dec
shrb
add
and
adc
jno
mov
adc
add
or
push
loope
in
xor
dec
push
outsl
loop
and
testb
push
pop
jno
adc
sub
int
fwait
ljmp
mov
dec
in
pop
mov
inc
imul
sbbl
inc
subl
adc
mov
jne
addr16
push
inc
loopne
push
cmp
and
or
popa
sbb
or
or
add
mov
ss
and
out
and
mov
lea
adc
loop
add
add
movsb
add
push
add
clc
js
xchg
aad
and
je
mov
add
sub
ret
add
sbb
xor
sbb
cmp
jo
je
push
fdivs
mov
sbb
mov
movsb
inc
push
fsubrs
lahf
mov
mov
cmp
mov
ret
add
jbe
dec
mov
iret
addb
jecxz
adc
xor
pop
pop
adcl
insl
or
lret
mov
jbe
push
jb
dec
cwtl
mov
adc
jmp
js
loopne
imul
loope
jecxz
je
bound
mov
cmp
pop
lods
cmp
stos
pop
mov
mov
sbb
adc
js
icebp
lds
icebp
ss
les
adcb
cmp
stos
sbb
loopne
popa
push
dec
call
jo
dec
gs
jae
xor
shlb
cs
cmp
scas
mov
mov
dec
cmp
das
xchg
inc
imul
ja
loop
mov
sbb
and
mov
pop
inc
and
inc
jg
stos
popa
je
les
xchg
jl
mov
inc
jl
js
jne
inc
mov
mov
jae
loop
cmp
in
outsl
mov
movaps
mov
mov
add
push
add
inc
fwait
pushf
fldenv
dec
fisttpl
and
testl
mov
das
sub
add
cs
sub
xchg
pop
sub
pop
dec
xchg
mov
mov
les
mov
cmp
es
sbb
fisttpl
fisubl
fiaddl
ret
or
into
arpl
jae
adc
insl
lea
or
js
inc
fstpt
xor
xlat
fstps
test
imul
fimuls
mov
fimull
xor
jne
fs
scas
mov
inc
or
push
popa
rcpps
mov
js
push
jb
addb
inc
inc
xchg
or
jbe
stos
mov
imul
rol
mov
ja
pop
pusha
sbb
sahf
daa
lods
push
push
and
push
cld
mov
mov
notl
fwait
push
mov
dec
orl
stos
dec
inc
adc
add
sub
js
hlt
lock
dec
loopne
and
test
ljmp
sub
std
addr16
add
xor
mov
and
adc
nop
jne
outsb
inc
sbb
push
pop
and
int
fcomps
je
insl
dec
outsb
dec
xorb
inc
std
lea
mov
andl
dec
xor
sub
push
push
js
add
pop
add
cmpsb
mov
dec
add
sbb
mov
movsb
dec
shll
or
or
xor
movhps
mov
shll
mov
loop
fidivrl
lods
pop
pop
add
jb
in
nop
inc
add
movsb
outsl
xchg
add
and
sbb
or
pop
push
and
in
call
sbb
or
test
mov
popfw
stos
daa
add
insl
subb
imul
sbbb
cmp
imul
inc
insb
scas
cli
fs
sub
test
les
mov
adc
jno
sbb
dec
lock
jno
movl
inc
sbb
add
movsb
sbb
jl
repz
mov
sbb
dec
mov
and
jne
je
xorb
arpl
pop
adc
in
sbb
js
lret
mov
shrl
push
xor
push
hlt
and
ret
adc
sbb
stos
lret
cs
insb
sub
fcmovb
mov
ja
pop
mov
mov
lock
sub
scas
mov
push
hlt
mov
mov
dec
rcrl
pop
xlat
adc
or
mov
popa
xor
jg
adc
and
fidivl
push
enter
nop
and
pop
jbe
aaa
outsl
and
lds
mov
cmpsl
inc
ret
adc
test
cmpsl
adc
inc
enter
mov
mov
scas
push
mov
xchg
xchg
dec
insl
dec
or
shll
push
adc
sub
inc
dec
test
sub
adc
push
in
inc
push
arpl
test
int3
and
pop
dec
dec
test
jmp
sub
inc
addr16
int3
pusha
adc
inc
push
mov
nop
fs
mov
push
fdivrs
sbb
stos
aam
dec
and
inc
cmp
sub
out
xchg
cmc
bound
daa
outsb
pop
sub
fwait
sbbb
xchg
scas
or
lahf
mov
sub
mov
fisubrs
mov
pusha
lods
mov
mov
lahf
and
cmc
out
stos
push
mov
xchg
push
inc
inc
cmp
mov
xor
sbb
adcl
enter
cmp
pop
dec
mov
out
inc
scas
mov
dec
dec
ja
imul
shll
add
aaa
mov
out
sub
pop
or
rolb
inc
push
arpl
push
cmp
lea
dec
sub
lods
add
fistl
enter
mov
insb
add
add
jo
xlat
push
cmp
loope
or
mov
fidivrl
pop
add
fs
pop
shll
inc
dec
pop
movsb
mov
dec
mov
inc
mov
adc
fwait
add
dec
in
dec
negl
mov
mov
cmp
dec
jbe
push
fidivrl
pusha
push
rorb
pop
movsb
xor
jp
cmpsl
add
or
xlat
or
xchg
jg
and
adc
xchg
incl
add
add
pusha
mov
lea
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
add
inc
add
