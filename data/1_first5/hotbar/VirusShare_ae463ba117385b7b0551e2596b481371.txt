divl
in
mov
mov
mov
push
push
call
int3
cmpsl
std
in
pushl
add
call
test
jne
pop
ret
push
push
sbb
mov
test
je
aas
mov
dec
adc
movb
lock
sti
in
decl
dec
movzwl
lea
jne
sbb
xor
jmp
and
neg
sbb
and
in
jbe
mov
mov
call
push
mov
mov
add
sbb
daa
or
add
les
mov
rclb
addr16
push
enter
and
jg
lock
push
push
push
mov
push
into
pushf
add
jge
jmp
jmp
stos
adc
push
push
sahf
jp
push
testb
clc
test
ds
jmp
pushl
sar
dec
sub
ret
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
ljmp
sahf
push
mov
andl
push
dec
add
enter
add
mov
punpckhwd
add
push
inc
mov
mov
inc
in
or
push
push
outsb
iret
negl
inc
cld
add
nop
mov
add
incl
sti
inc
add
add
call
jle
add
mov
mov
mov
mov
lock
add
sahf
or
sbb
pop
inc
push
or
out
or
in
lock
add
xchg
add
push
loop
inc
adc
mov
insb
mov
out
leave
sbb
xor
dec
sbb
int3
sub
outsb
sub
and
push
push
cwtl
in
add
mov
add
dec
mov
push
xor
mov
sbb
push
push
lods
push
cli
pop
inc
add
fdiv
fistpl
fldt
inc
add
test
mov
ds
je
pop
add
pop
mov
push
cmp
loopne
cmp
rcl
cmp
add
push
mov
add
push
dec
or
cmp
mov
xchg
nop
cmpsb
jae
dec
add
sub
in
out
dec
push
cmp
call
pop
int
addr16
or
call
xor
in
loopne
ljmp
inc
jmp
push
push
cld
hlt
ja
mov
in
inc
inc
mov
dec
pop
and
mov
pop
jge
mov
jmp
push
or
cmp
inc
inc
sahf
imul
mov
fistpll
js
jmp
sahf
cmp
mov
mov
adc
mov
push
pop
mov
pop
subb
jb
mov
xlat
in
addb
and
imull
and
sbbl
and
cmp
mov
ficoms
pop
stc
out
mov
add
and
mov
icebp
add
push
xor
fnsave
sub
push
mov
cltd
inc
push
insb
xor
lock
adc
mov
icebp
sbb
jle
fdivs
cmc
rcll
xchg
fdivl
or
je
cmp
jns
pop
testl
call
adc
cld
jb
and
popf
aaa
jo
rcrl
cs
sub
cwtl
sbb
subl
pop
push
sub
inc
sbb
jo
push
rol
div
pop
add
push
or
rolb
xor
xor
dec
mov
sbb
or
xchg
or
pop
subl
and
or
push
inc
push
into
cmpsl
or
cmpb
repz
pop
sbb
fwait
je
bound
mov
adc
movsl
lods
mov
push
cwtl
mov
push
scas
aas
outsb
sbb
mov
int3
push
xchg
mov
xchg
jle
or
cmp
mov
push
push
sbb
idivl
push
xchg
loop
pop
mov
pop
test
jne
data16
enter
sbb
icebp
loopne
outsb
push
shrb
mov
xor
movsl
push
sbb
sbb
adc
dec
scas
inc
pmulhw
cmpsb
mov
push
repz
jmp
push
and
adc
iret
addl
popf
and
adcb
and
or
adc
fstl
nop
xlat
adc
addb
sbb
mov
jns
push
pop
push
aaa
adc
int
outsb
fcomp
pop
sbb
sarl
nop
popa
mov
push
pop
jnp
add
jmp
and
xchg
mov
sbb
leave
repz
pop
jae
push
mov
xor
cs
pop
pushf
outsb
icebp
and
xchg
sbb
add
cmp
or
adc
push
push
push
sbb
test
mov
mov
pop
test
out
lea
lock
push
pop
push
push
adc
mov
ret
fiaddl
jl
or
push
mov
sub
out
pop
pop
push
xchg
or
int3
out
cmp
sub
aas
int
xchg
mov
shrb
mov
jge
jle
movsl
cltd
mov
mov
lea
ds
scas
sbb
inc
mov
in
pusha
rclb
mov
lds
or
fmull
sbb
je
popa
cmp
mov
lea
fildll
fdivs
je
add
imul
adc
cli
mov
ja
insl
lea
jno
imul
bound
sbb
dec
inc
mov
jne
adc
in
mov
inc
or
jno
stos
mov
cmp
or
lret
push
fdivs
or
mov
sbbb
xchg
xchg
inc
pushf
mov
push
sbb
and
popf
xchg
arpl
pop
xchg
xchg
push
cmc
push
stc
or
jl
and
mov
shr
mov
xchg
iret
aas
test
hlt
bound
xor
add
mov
leave
ret
push
mov
fcomps
shlb
ficompl
sti
insl
icebp
sbb
push
mov
xor
cld
cmp
call
cmp
jne
pop
mov
sub
fs
pusha
cmp
into
lea
je
sub
dec
pushl
pop
in
push
dec
xor
adcl
mov
dec
pop
mov
mov
mov
push
push
scas
aad
hlt
push
mov
cmp
inc
in
push
sub
call
sub
push
add
xlat
mov
test
jne
fs
inc
cmp
jl
push
jns
fucomip
ds
adc
cli
pop
pop
push
pop
pop
xchg
push
pop
push
pop
jmp
dec
xchg
add
push
pop
test
js
mov
ret
mov
ret
push
or
mov
rolb
adc
loop
sbb
bound
and
rorl
daa
mov
add
gs
dec
or
enter
sub
ss
andl
push
shlb
icebp
mov
jl
xor
ljmp
sti
inc
mov
jmp
adc
adc
dec
jo
loopne
ret
push
push
fcomps
out
pop
inc
cmp
rcl
or
repnz
dec
sub
mov
and
xchg
xor
arpl
fcompl
cs
rcrl
jge
rorb
add
pop
or
jne
js
dec
cld
in
hlt
sub
pop
cmp
mov
jge
iret
xchg
out
clc
xchg
or
or
test
add
or
add
lea
clc
sti
outsl
lock
mov
imul
add
jmp
mov
popf
xor
mov
clc
adc
faddl
or
cmp
out
idivb
cmp
je
or
std
pusha
mov
push
hlt
dec
mov
jmp
xor
cmp
data16
or
mov
jne
mov
jmp
xchg
lock
shr
push
repnz
popf
pusha
mov
ja
lea
decb
jmp
clc
lds
cmp
push
jge
rorl
shll
gs
pop
pop
bound
lock
rolb
loop
inc
sarl
daa
jle
pop
inc
out
shlb
test
je
or
lods
shl
pop
mov
mov
push
mov
loope
rorb
outsl
mov
xchg
xor
je
ljmp
sbb
cmpsl
mov
je
push
jno
xchg
cmp
ss
push
push
mov
cmp
pop
inc
pop
pop
movsl
mov
loopne
imul
je
hlt
adc
or
popa
push
adc
mov
das
icebp
inc
xor
lahf
leave
add
add
addl
push
add
sti
jecxz
adc
adc
cmp
or
jg
popa
or
mov
mov
aam
je
cmpl
push
adc
push
jne
push
push
jge
pop
dec
shlb
test
jmp
or
mov
dec
mov
arpl
mov
clc
loopne
leave
xor
dec
xor
or
cs
and
or
mov
out
jl
push
inc
clc
jg
inc
out
addr16
inc
xor
mov
cld
pushf
jb
int3
cltd
add
cltd
adc
into
pusha
inc
or
shlb
je
gs
inc
ret
outsl
or
aad
ds
movsl
fndisi(8087
push
jb
das
inc
pop
and
sbb
and
cmpl
adc
test
cli
push
das
lea
in
dec
push
push
call
cmpl
in
mov
into
cs
jae
or
jae
sbb
ja
pop
lds
mov
pop
hlt
ds
inc
mov
fdivrp
mov
mov
mov
mov
dec
xchg
push
cltd
lods
clc
jge
scas
push
in
mov
push
or
xchg
cmp
sub
inc
add
clc
sub
xchg
rcl
mov
xchg
add
dec
xchg
mov
xlat
pop
mov
inc
repnz
jle
push
daa
scas
mov
jo
jmp
mov
mov
ret
inc
mov
cmpsb
ret
shlb
push
out
cmp
adc
cmp
inc
cmp
push
sub
lods
sbb
push
mov
and
pop
mov
jbe
inc
add
out
aaa
or
adc
adc
ret
pop
push
jmp
ljmp
pusha
shlb
adc
invd
mov
lods
loope
push
pop
push
or
lock
gs
repz
fs
js
fmul
cmp
ret
push
lds
xchg
sarb
sahf
lahf
rcl
cmp
xlat
sahf
and
push
les
xor
xchg
data16
cmp
add
or
mov
pop
ret
push
call
cmp
insl
cltd
jmp
mov
sbb
clc
and
fcoms
lea
push
mov
adc
mov
pop
pop
jmp
test
je
mov
jnp
testb
lret
add
inc
cmp
jb
pushl
movsl
sub
ds
ret
push
mov
adc
inc
ret
push
dec
jbe
mov
dec
adc
sbb
add
dec
jmp
out
bound
and
negb
add
add
pop
iret
js
add
push
mov
dec
shlb
jle
sar
push
xor
inc
add
mov
shlb
fiadds
mov
or
mov
push
add
fidivl
pop
or
sbb
notl
or
jb
inc
and
mov
ret
fwait
cmp
pusha
add
or
shrb
xchg
or
or
ret
add
sbb
mov
push
push
pushf
adc
jb
xor
inc
adc
sti
mov
fcmove
sbb
ret
push
and
and
push
jl
lret
sbb
das
sbb
sbb
add
das
pop
push
mov
push
sub
mov
movsb
fmulp
adc
pop
pop
ds
cwtl
and
ss
jnp
cs
dec
dec
or
push
push
push
mov
add
adc
pop
jle
and
fwait
push
lods
dec
or
mov
test
cmp
ja
testl
stc
movups
and
test
add
inc
pop
sbb
push
cmp
mov
lcall
push
cltd
pop
testl
mov
out
shrl
roll
sbb
adcb
test
mov
js
shlb
mov
jle
ljmp
push
mul
jmp
push
lock
sahf
lods
lret
fcmovnu
je
pop
and
ja
sub
dec
je
mov
shr
adc
in
jge
adc
sub
push
adc
mov
jo
out
jmp
or
cmp
inc
addr16
jbe
jp
jecxz
pop
jne
roll
je
jmp
add
add
test
or
lea
sub
push
testl
cld
mov
lea
dec
sub
mov
adc
push
mov
int3
xchg
mov
xor
xor
mov
xchg
and
push
aaa
xchg
jl
movsb
push
xor
push
push
sub
pop
lret
idiv
jo
js
xchg
push
in
in
jae
mov
adc
in
imul
jmp
mov
adc
jmp
es
push
or
jae
mov
jmp
inc
sbb
dec
stos
xor
leave
adc
adc
sti
out
andl
or
cmp
jmp
mov
sbb
and
cmpsl
jmp
pop
fisubl
and
iret
jmp
data16
sbb
mov
mov
inc
sub
je
jns
out
xchg
scas
mov
int
sub
xor
sub
inc
pop
inc
lahf
out
push
fs
mov
inc
in
js,pn
jmp
add
adc
push
push
pusha
dec
imul
aaa
outsl
dec
adc
and
lret
aaa
sbb
in
or
clc
movb
add
xchg
lret
or
adc
pop
sbb
out
call
outsl
cli
push
dec
mov
pop
push
lea
push
addl
xchg
adc
push
xor
xchg
xlat
dec
cmp
mov
cmp
inc
mov
or
add
dec
pop
mov
jge
mov
cld
adc
movl
push
movsl
ret
in
imul
ja
push
sbb
mov
testb
jo
and
dec
dec
fidivrl
add
fsts
dec
add
and
mov
ja
mov
sub
jo
cmp
sbb
add
xchg
pop
pop
leave
sbbl
cmpsb
add
or
cmpl
cwtl
add
nop
sub
lock
sub
xchg
sbb
lret
sbb
dec
repz
mov
adc
je
cmp
adc
inc
push
push
push
in
lods
in
xchg
xchg
mov
mov
and
push
mov
add
jp
fcomps
mov
mov
push
enter
mov
cmp
nop
lahf
or
push
push
push
mov
loope
pushf
sbb
xchg
cmp
aas
popf
push
push
add
scas
xor
fldcw
ja
dec
xor
adcb
cwtl
sahf
pushf
add
ret
dec
pop
pop
daa
lea
pop
lock
je
mov
pcmpgtw
mov
lea
in
and
cmpl
inc
xor
push
add
sbb
pushf
push
push
cli
hlt
or
loopne
dec
pusha
adc
dec
sub
outsb
xor
xchg
push
call
sbb
clc
push
xor
jg
push
mov
pushl
mov
adc
dec
adc
push
push
dec
lea
or
mov
cmc
dec
negl
pop
cld
rorb
sub
mov
mov
sar
add
bound
in
dec
insl
sti
int
in
cmp
push
mov
add
mov
lock
imul
pop
leave
rorb
pop
hlt
mov
push
popa
add
adc
sub
ret
pop
sub
imul
or
out
sub
aad
sbb
or
and
addr16
pop
sub
and
sub
pop
push
add
andb
push
stos
cmp
jg
daa
out
adc
dec
test
or
out
fistps
jmp
adc
data16
xor
sbb
loope
andl
imul
pushl
add
inc
mov
push
rol
lahf
shlb
push
insb
mov
lret
cltd
adc
push
loop
or
mov
lea
sbb
and
adc
cmpb
sbb
cmpl
or
adc
push
cmp
ljmp
in
test
add
fists
data16
sbb
jge
je
push
aaa
push
inc
lock
pushl
and
add
repnz
or
outsb
incl
and
dec
test
jo
mov
cmc
pop
mov
mov
out
cmp
and
adc
je
cmpl
in
popf
jbe
push
dec
je
push
xchg
sbb
jmp
fwait
adc
jb
jmp
mov
fsubrl
push
adc
and
pop
je
cmp
repnz
mov
movsb
js
adc
popa
jle
dec
jo
imul
lret
cld
ret
pop
push
push
sbb
test
dec
sub
mov
hlt
movb
cltd
lock
jne
mull
sbb
enter
push
popf
cwtl
jo
movb
cmpsl
mov
ret
dec
aas
mov
and
xchg
mov
push
cmp
out
mov
lea
inc
nop
outsb
pop
xchg
pop
cmp
cs
cmp
add
insl
push
test
inc
pop
loopne
mov
pop
addr16
jge
mov
pop
adc
mov
xlat
dec
xor
pusha
mov
test
cmp
xchg
jle
or
cs
cmp
push
push
in
mov
inc
outsb
pop
jbe
adc
cmp
out
cmc
add
push
shlb
shrb
fcoml
and
push
or
fwait
xchg
sub
or
nop
or
mov
iret
repz
enter
adc
or
insb
je
xchg
andl
daa
cmp
or
mov
xor
cmpsb
or
or
fsub
adc
in
sbb
xsave
sub
mov
xor
addb
hlt
adc
repnz
dec
int
mov
push
cmpb
icebp
iret
sbb
test
icebp
test
mov
out
dec
mov
inc
imul
inc
dec
fldl
fmull
or
in
push
push
negb
xor
pop
push
cmp
ret
rcrl
adc
lock
adc
or
andl
sarb
and
popa
rorb
shl
and
in
dec
lahf
shl
xchg
and
push
shll
sub
iret
pushf
and
into
push
popa
test
arpl
mov
arpl
dec
push
mov
jne
push
addl
mov
scas
add
mov
xlat
stos
fcoms
rorl
or
lock
or
rorl
js
add
xchg
das
adc
xor
sbbb
shlb
mov
enter
sbb
addb
dec
adc
pop
shll
sbb
je
cmpb
mov
mov
aaa
cwtl
pop
shrl
xlat
call
jmp
cmp
repnz
push
cs
sub
push
push
cmp
nop
flds
adc
pop
cmp
in
insb
repz
dec
jmp
mov
or
nop
push
test
mov
pop
inc
shlb
inc
mov
mov
loopne
pop
loope
clc
push
out
in
sahf
data16
adcb
jl
xor
sub
sbb
jno
outsl
and
aam
mov
sbb
cmp
inc
xor
sub
out
jo
jo
int
fsub
scas
inc
pop
nop
pop
cmp
push
les
or
fsubrl
out
inc
sbb
cwtl
lock
loopne
mov
cmc
repnz
sbb
cmp
pop
or
cltd
mov
add
sar
push
test
rcll
daa
sbb
mov
jl
dec
inc
or
fistps
lret
lock
adc
adc
mov
jo
fcomip
sti
push
pop
push
adc
dec
jmp
xor
idiv
jle
mov
mov
aaa
jp
mov
add
jne
and
cmp
push
jbe
adc
xchg
push
fucomp
test
mov
mov
mov
lahf
sti
adcb
stos
sbbl
inc
les
lea
adc
ja
aaa
rorl
out
mov
push
ljmp
movsb
sti
sub
or
je
test
pop
lea
cltd
idivl
push
add
cli
xor
sbb
mov
mov
maskmovq
imull
into
mov
or
xchg
idiv
sub
sub
mov
test
or
jbe
lahf
stc
repnz
xor
xchg
in
and
xor
loop
movl
mov
cli
mov
dec
sub
jge
jmp
mov
pop
sub
inc
hlt
pusha
or
add
xor
fdivl
xor
mov
fdivrp
jb
movlps
mov
test
sbb
cmpsb
fbstp
add
pop
add
fiadds
xorl
or
xchg
pop
jl
jmp
rolb
bound
jge
je
mov
outsl
into
clc
fidivl
jmp
outsb
mov
mov
mov
lods
jmp
jnp
mov
add
jl
dec
cmp
addr16
push
mov
aad
bound
fmull
push
sbb
push
or
cmpsl
rcr
lock
push
adc
sbb
mov
aam
jo
adc
movsl
cmp
xchg
push
lahf
je
je
movsl
test
or
pop
sub
cmp
and
repz
jmp
sbb
jle
arpl
ljmp
sti
sbb
and
fwait
xor
js
mov
push
ret
push
mov
add
arpl
clc
test
call
cmp
pushf
sbbb
xor
pop
mov
or
sbb
xchg
dec
push
or
divps
mov
xchg
loopne
push
rcll
movb
mov
loopne
jmp
or
and
xchg
pop
jmp
inc
pop
push
fisttps
and
push
mov
loope
pop
mov
push
mov
push
push
inc
aas
test
xchg
pop
mov
push
cmp
pop
pop
push
mov
negl
push
sub
dec
push
dec
add
push
mov
jne
xor
aaa
roll
lods
push
adc
ret
push
or
sbb
outsl
test
inc
movsl
pusha
push
add
fs
sbb
clc
popa
and
mov
pop
lock
lret
fs
sbb
rorb
pop
ds
int3
add
mov
pop
jns
jg
ret
mov
jle
mov
mov
mov
mov
adc
push
bound
pop
xor
mov
in
gs
or
push
in
mov
and
mov
rcll
adc
push
cmp
xor
jge
pop
mov
or
pop
cmp
cmp
clc
data16
clc
setb
test
jne
pop
ret
das
rorb
sbb
mov
xor
lds
fimuls
andl
lea
push
rcll
and
fwait
imul
mov
je
sub
lahf
pop
xchg
pop
je
jmp
or
push
cld
mov
mov
nop
lock
hlt
mov
insb
push
lock
push
pusha
xchg
jno
push
cs
mov
add
pop
lcall
cmp
push
dec
out
add
hlt
push
hlt
loopne
cmp
or
xchg
into
imull
mov
sahf
jo
mov
movsb
add
or
test
push
push
ret
loope
std
shrl
mov
or
imulb
push
adc
xor
cmp
pop
inc
push
jns
cs
ror
ljmp
or
je
and
jnp
fcoml
sbb
and
shr
hlt
pusha
inc
in
sbb
or
rorl
xchg
mov
mov
rolb
shlb
pop
or
or
loopne
movl
scas
je
fs
add
dec
in
fmull
lock
inc
mov
movsl
pop
mov
ja
test
popa
or
pop
mov
pop
pop
add
dec
add
lds
addr16
push
xor
int3
xchg
mov
add
and
ret
rclb
aad
test
add
dec
clc
lret
add
ret
jne
push
mov
sbb
ja
divb
sbb
xor
push
das
notb
int
jnp
mov
aam
loopne
and
lods
xchg
dec
cmp
xchg
in
inc
xchg
shl
loopne
js,pt
es
sbbb
lahf
test
in
jae
sbb
rorb
and
out
xor
inc
enter
push
repz
lds
mov
add
add
xchg
and
push
xchg
lret
fcoms
call
jl
adc
insl
icebp
xor
mov
inc
insl
lcall
xchg
ja
mov
mov
jge
mov
bound
lcall
jl
sbb
pop
popa
xor
dec
add
mov
or
push
xor
es
add
inc
dec
xlat
pop
push
inc
fmuls
push
xor
cmp
add
pop
cmp
push
xchg
repz
leave
mov
adc
mov
orb
gs
pop
repz
adc
mov
dec
push
mov
lds
xor
add
stos
jb
iret
lret
and
dec
pop
or
aad
mov
stos
or
and
and
jmp
stos
and
xor
inc
repnz
sub
cs
push
mov
jg
out
jne
push
test
pop
in
mov
pop
insl
push
jnp
enter
add
pop
rorl
add
test
mov
inc
pusha
loop
mov
popl
stos
call
repz
loope
mov
sbb
sub
enter
add
sub
sbb
lods
push
lea
lea
ret
mov
shl
ret
or
inc
enter
int
and
or
mov
int
leave
mov
sub
cmpl
aam
add
or
push
fs
or
add
push
or
add
fbstp
pushl
fdivl
lock
dec
fsubr
aam
inc
fisttpl
mov
cmpl
cmp
xor
fsubrp
add
adc
xchg
sbb
pop
mov
mov
push
int3
mov
test
sbb
arpl
mov
aam
push
scas
js
in
adc
fdivrl
add
rcrb
bound
adc
shlb
or
incl
inc
shl
pop
push
fadds
je
in
adc
imul
in
mov
jae
fidivl
movl
mov
aam
add
or
sbb
push
sub
lcall
in
xor
xchg
or
mov
neg
sbb
bnd
lret
aas
xor
inc
and
popf
fsubrp
jo
jnp
enter
iret
gs
or
test
inc
sub
test
or
lods
lahf
or
jns
rolb
add
pop
mov
jbe
add
aad
pop
push
mov
nop
add
add
dec
cmpsl
mov
mov
leave
dec
mov
sbb
mov
pop
ds
pushf
sbb
mov
cmp
xor
pop
test
add
int3
fmuls
in
add
mov
aas
jmp
out
mov
mov
push
xor
into
mov
push
mov
js
xlat
and
fsubrs
push
in
sub
dec
lret
loopne
stc
sbb
pushf
sbbb
push
lcall
sbb
xor
mov
das
mov
inc
adc
mov
shll
repnz
jne
add
fdivp
push
fs
sub
adc
sbb
add
push
lcall
and
mov
xchg
fildl
dec
cmp
mov
rclb
mov
mov
ljmp
add
shlb
rclb
push
fnstenv
cwtl
sub
adc
dec
jno
rorb
inc
ret
jne
mov
mov
fistl
mov
adc
faddp
inc
repnz
cwtl
push
stos
cmp
xlat
push
sub
ret
or
xor
push
and
addb
lds
lea
adc
add
je
mov
push
add
and
das
xchg
xchg
push
push
test
rorb
ja
mov
xchg
pop
adc
stos
loope
cmp
lods
in
mov
inc
and
in
popa
cmp
cltd
cmp
adcl
add
repz
xchg
pop
adc
es
add
call
daa
sldt
dec
leave
mov
in
push
adc
add
inc
leave
repz
or
sub
stc
in
dec
and
or
ficompl
mov
sub
mov
sbb
xchg
sahf
xchg
pop
repnz
inc
mov
cmc
cmp
out
or
popa
inc
push
repnz
test
in
inc
cld
fmull
lock
js
scas
jno
add
enter
rcll
sbb
lods
shlb
outsl
mov
push
or
jbe
and
ret
mov
in
mov
lret
jle
popf
lret
sysret
or
push
addl
sub
add
add
int
xor
popf
jecxz
insl
icebp
jbe
adc
or
insl
dec
sbb
sub
popa
movsl
lock
adc
in
insb
push
mov
push
in
dec
mov
push
outsl
or
pop
inc
js
jo
movsb
negl
xor
inc
push
xor
adc
lcall
arpl
iret
punpckhwd
pop
jl
jo
mov
or
adc
or
mov
push
pop
clc
push
aaa
fnstsw
cmp
push
dec
dec
mov
push
inc
and
idivb
jo
jle
jmp
fcomps
inc
inc
sahf
cmp
je
ja
cmpsb
push
mov
rorb
add
mov
jbe
mov
sub
add
dec
lea
add
nop
int
in
push
or
add
aam
cwtl
and
push
fnsave
orl
test
jno
push
mov
outsl
push
outsl
outsl
testb
mov
push
je
and
gs
ljmp
inc
dec
and
pop
sahf
xchg
arpl
in
test
or
or
dec
or
outsb
pop
xor
or
inc
pop
movsb
inc
mov
and
cmp
cltd
mov
cli
inc
xor
add
test
cli
add
repz
xor
jl
iret
mov
fldcw
or
or
or
sahf
lret
enter
std
in
addr16
out
sub
sub
repnz
sub
jl
or
cli
gs
xchg
outsl
ja
pop
icebp
rorl
lret
sub
xchg
xchg
pop
enter
mov
shr
test
sbb
call
out
test
xor
inc
inc
or
movsb
pusha
and
pop
xchg
sub
mov
add
pop
inc
adc
enter
add
insl
mov
and
push
outsb
mov
or
imul
test
or
add
int3
repz
add
adc
add
xorb
lods
adc
aam
jbe
mov
inc
notl
sahf
out
adc
or
jl
sbb
test
pop
enter
push
out
add
in
mov
inc
add
add
and
in
test
cmp
aas
hlt
pushf
adc
mov
xor
xchg
popa
aad
cmp
jnp
dec
sti
jae
mov
pop
cmp
lea
inc
cmp
push
pop
pop
inc
cli
arpl
push
fsubl
lock
in
cmpsb
or
in
and
in
push
sub
sbb
push
popa
mov
pushf
or
insb
adc
stc
pusha
inc
shrb
mov
jno
push
mov
es
mov
test
push
sbb
cmp
lods
sbb
popf
inc
jp
push
jnp
icebp
pop
data16
push
inc
insl
sub
ret
jnp
mull
pop
add
lea
andl
mov
xor
xor
xor
addr16
aaa
shl
movups
jae
icebp
adc
lea
pop
je
movsb
fstl
test
in
mov
fs
in
inc
xor
iret
mov
or
das
mov
sub
lcall
sub
pop
pop
daa
leave
pop
push
cld
xchg
lods
fisttpl
push
jbe
sub
pop
pushl
push
and
adc
pop
sbb
leave
and
rclb
xor
pop
and
in
and
sbb
orl
cmp
jne
push
sarl
leave
int3
cmp
test
jge
push
loop
xchg
cmp
aas
jl
movl
out
bound
push
xchg
and
ficoms
dec
adc
push
pusha
inc
mov
mov
test
pushf
call
lahf
aaa
loop
adc
push
jl
repz
lods
mov
mov
jne
shll
loop
xor
and
xor
pop
js
es
ficompl
push
dec
jbe
data16
int
or
jo
push
and
mov
jmp
sub
jl
sbb
fisttpl
out
rcll
cmp
jns
and
movsb
xchg
mov
dec
popl
add
fidivrl
testl
lock
movsl
mov
pop
sbb
mov
mov
fs
add
cmp
mov
test
pop
out
add
sbb
pop
stos
subb
push
cmp
ljmp
and
popf
or
xor
push
push
cltd
fsubrl
mov
int
cltd
aad
lcall
xor
fs
and
data16
mov
ljmp
add
add
ljmp
aaa
cmpb
dec
add
lret
repnz
add
dec
ljmp
push
pop
add
inc
dec
lock
mov
inc
testb
popa
lea
mov
push
cwtl
mov
in
cs
and
push
xchg
sub
popf
sub
sub
push
adc
or
cwtl
inc
mov
add
in
mov
mov
pushf
loopne
xor
sbb
xchg
sub
push
in
movsb
xor
push
push
mov
xor
jno
or
inc
sbb
inc
scas
aam
test
xchg
leave
add
mov
add
jo
popl
cmp
sub
pop
pusha
movsb
or
cmpsl
dec
inc
aaa
sub
add
push
jnp
inc
xchg
push
ljmp
mov
clc
cmp
setne
pop
repz
sti
incl
aas
aas
push
push
push
and
adc
mov
std
jne
push
push
push
sbb
push
cmp
push
scas
sub
inc
xor
push
jp
call
sbb
inc
sub
pop
int3
adc
clc
mov
gs
leave
jecxz
jecxz
test
adc
dec
and
mov
dec
test
rcrb
cmpsl
add
and
loopne
xchg
cld
and
xchg
iret
push
pushl
jne
push
daa
fcompl
and
inc
add
push
sbb
or
push
dec
add
out
lret
push
cli
dec
leave
repz
cli
jnp
test
push
mov
add
sbb
loopne
sbb
xor
push
daa
mov
imul
call
xor
xchg
mov
or
cmc
add
aaa
or
je
jo
push
je
xor
or
dec
or
sub
aaa
lcall
imul
jmp
mov
fnstcw
add
roll
lret
sbb
add
pop
and
out
test
mov
aam
push
cmp
test
xor
nop
test
popf
ret
xchg
mov
adc
pop
lea
jp
push
sbb
or
xchg
jbe
push
jp
jmp
bound
cltd
in
repnz
out
lods
enter
ss
dec
push
or
add
fistps
push
mov
inc
out
movsb
lahf
push
pop
mov
adc
mov
push
adc
test
mov
mov
loope
inc
jle,pt
xor
add
je
and
or
sub
movzwl
push
pop
dec
or
sub
dec
test
adc
ret
sbb
xor
cmp
cli
scas
adc
rcll
adc
push
fwait
jle
push
mov
ret
sub
jge
insb
and
pop
test
shlb
fbstp
ds
out
das
inc
clc
cwtl
add
sbb
mov
push
test
lods
ja
shlb
add
xchg
push
push
mov
inc
repz
dec
mov
mov
push
addr16
jge
add
in
inc
xor
fdivs
pop
aam
test
adc
xchg
pop
aam
stos
call
in
mov
inc
add
push
inc
adcl
test
imul
mov
push
cmovle
test
pop
sbb
out
mov
adc
mov
sub
daa
fimuls
jbe
fstpt
mov
lock
inc
add
shl
lea
mov
add
dec
leave
ret
push
jmp
out
scas
mov
test
dec
mov
inc
addr16
push
push
ret
xchg
mov
lret
into
out
dec
push
lock
ljmp
je
cmp
je
outsl
lcall
sbb
add
cmp
jae
push
scas
sarb
sbb
fcomps
mov
in
push
es
sub
push
add
loope
pop
push
add
xor
push
test
jmp
cmp
dec
hlt
jge
mov
adc
cld
ss
mov
outsb
test
out
inc
push
sti
or
jmp
xor
ljmp
xorl
sahf
pusha
pop
test
jecxz
sbb
pushl
leave
jl
mov
cmp
jg
loope
shl
cli
xchg
and
push
jmp
mov
pusha
pop
mov
hlt
mov
and
xchg
mull
xchg
or
mov
into
repz
shll
mov
fadd
push
pop
mov
daa
ret
or
add
xor
add
pop
getsec
in
sub
push
nop
mov
mov
adc
testb
imul
jge
xorb
mov
sub
mov
mov
movsl
int
push
cmp
iret
add
xchg
jnp
clc
bound
jle
sbb
es
xor
and
adc
xlat
sbb
push
cmpsb
cmp
and
xchg
jge
or
roll
push
cli
cmp
mov
mov
adc
roll
js
add
sub
jmp
fdivr
cmp
dec
or
call
push
cmc
lret
jne
mov
push
inc
bound
dec
jp
push
in
sub
pop
push
jp,pt
fsubl
adc
mov
jns
add
push
pop
xor
jge
mov
sbb
or
mov
push
ficomps
or
sahf
test
fwait
andl
or
ss
inc
add
inc
popf
aad
mov
adc
mov
lock
mov
jmp
int3
cmp
inc
sbbl
movsb
push
cmc
pop
xor
sbb
xor
pcmpeqw
sbb
clc
pusha
insb
push
ret
add
repnz
mov
jle
sub
mov
push
dec
scas
push
cmp
outsb
push
mov
mov
outsb
or
and
or
mov
int
std
jbe
inc
pop
adc
inc
push
pop
adc
and
pop
push
xchg
dec
test
cltd
jecxz
xor
hlt
adc
adc
scas
sbb
test
jg
lahf
cmp
je
inc
cmp
mov
sbb
cli
pop
jg
test
ret
pop
push
sahf
ret
add
stos
test
fs
push
jmp
lods
push
loop
sub
push
insl
xor
sub
mov
cmp
mov
add
cmp
cmp
test
imul
add
cld
xchg
stc
sub
adc
jbe
sbb
mov
adc
out
inc
je
push
pop
cmp
int3
sbb
mov
arpl
pop
sub
and
xor
outsb
mov
jne
mov
xor
adc
lret
push
xor
repz
cs
rorl
sbb
and
or
rclb
shlb
and
pop
jl
js
lock
push
and
dec
test
pop
test
push
cmp
sub
sbb
cmp
sub
cmp
lret
inc
cmpsb
mov
mov
sub
fldl
mov
sarb
sbbb
push
mov
lock
inc
and
adc
pop
xor
sbb
push
int
call
out
ret
dec
add
mov
cs
add
cmc
stc
mov
icebp
dec
lcall
in
jne
sbb
gs
pop
mov
or
sbb
xchg
jmp
adc
adc
push
add
out
mov
xor
jl
inc
pop
jp
xchg
jo
lahf
mov
and
sbb
pop
mov
ror
xor
inc
lods
stos
cmpsl
or
in
mov
loope
add
pop
cmc
movl
jne
pusha
fistl
sbb
sbb
pop
test
xor
stos
jp
cmp
dec
or
nop
push
pushf
sbb
jne
or
test
inc
push
int3
fs
jg
jnp
fs
mov
pop
jmp
mov
stos
dec
insb
xor
push
dec
fnstcw
ja
sub
adc
or
or
add
rcrb
int3
pop
adc
mov
es
addr16
push
es
push
cmp
or
aam
mov
test
fldcw
outsb
mov
pop
mov
push
mov
pop
sti
xchg
pop
lock
shrl
sub
xlat
add
call
pop
int
jne
xchg
sbb
xlat
add
iret
add
sar
mov
jbe
jns
add
cld
jne
jmp
push
pop
in
jle
or
jno
push
sbb
jmp
mov
outsb
mov
push
dec
adc
inc
pop
and
or
loopne
mov
and
popa
arpl
ja
imul
pop
pop
mov
dec
add
aad
inc
sub
aad
push
jp
imul
jmp
cmp
cmp
leave
sbb
aas
insb
imul
pop
cmc
add
mov
inc
cmp
push
jo
fidivs
push
enter
jne
add
repz
es
mov
shrl
cld
lret
loopne
fnstsw
shlb
cmp
aaa
mov
in
pop
mov
sar
pop
or
mov
add
enter
push
add
and
out
pop
add
call
in
pushf
mov
shrb
movsb
les
fcoml
movsl
fdiv
or
in
pop
and
stos
add
pop
inc
jecxz
add
pop
sbb
adc
rorb
or
push
or
mov
mov
jb
in
inc
push
jae
addr16
sahf
pop
addr16
push
push
xor
shlb
in
sysenter
call
and
push
and
push
outsl
fsubr
gs
and
ja
adc
test
gs
btl
sub
je
xor
or
add
jne
xor
push
or
imul
stos
cld
in
or
lock
pusha
sub
ficoms
hlt
popa
push
lea
test
or
mov
testb
push
xchg
push
add
add
jge
push
lret
cld
sub
mov
imul
jo
fimuls
into
movsb
mov
adc
lock
call
adc
in
loop
pusha
scas
pop
inc
pop
hlt
shr
adc
fistl
push
sub
add
iret
push
push
add
push
jecxz
mov
xlat
out
or
into
out
cmp
mov
mov
add
or
push
mov
stos
das
test
shll
inc
inc
jo
enter
mov
sbb
xor
mov
pop
push
dec
rcrb
jae
push
add
add
or
lcall
lock
xchg
outsb
pop
adc
jmp
mov
arpl
cmp
lods
cmpsb
push
test
test
sub
imul
xchg
add
loopne
add
push
call
ret
mov
lock
push
mov
cmp
add
push
mov
ficomps
push
push
cmp
movzwl
aad
cmp
xchg
push
xor
into
pop
and
cmp
dec
mov
mov
loope
sub
sub
pop
fstpt
ljmp
test
dec
in
jl
repnz
add
mov
sub
push
rcrb
mov
push
mov
push
fmuls
inc
mov
pop
push
test
jmp
mov
mov
adc
incl
shll
push
cld
push
nop
outsb
mov
xchg
push
push
sbb
sub
push
sbb
mov
xchg
into
xorb
xor
pop
or
adc
sbb
lock
xchg
imul
aas
push
adc
repnz
pusha
push
pusha
lods
cmp
adc
bound
clc
add
hlt
push
mov
inc
jbe
shr
add
push
mov
neg
push
fwait
ret
nop
sbb
cmpsl
mov
loopne
jle
mov
pop
in
xchg
mov
jl
push
push
je
xor
aam
dec
inc
imul
test
ja
inc
movsl
push
push
jbe
mov
call
in
push
push
cmp
je
fcmovbe
push
push
lods
sbb
rolb
call
push
int3
sub
mov
fnsave
push
aas
inc
push
shlb
in
movsl
fcmovnu
mov
jmp
imul
cwtl
push
icebp
mov
movsl
mov
push
push
sarb
cmp
imul
or
add
in
adc
rolb
dec
rorb
mov
adc
into
gs
cltd
push
xchg
pop
sbb
andb
push
and
ljmp
in
je
aam
push
jge
xchg
arpl
inc
aad
cmp
pop
xchg
jae
inc
cmp
mov
jns
addr16
filds
jb,pt
pop
push
loopne
ljmp
mov
sub
mov
xchg
pop
fisttps
dec
test
xor
add
or
stc
int3
js
lea
cld
decl
test
cmp
je
cmp
je
cmp
jne
add
pop
mov
push
cmpsb
mov
cmc
je
mov
call
mov
jg
jno
xor
jmp
outsl
outsb
pop
sahf
loopne
clc
mov
cmp
xor
adc
mov
pop
out
sub
add
test
addb
jmp
enter
dec
jg
jno
cmp
jne
mov
sets
push
adc
aad
sbb
or
add
xchg
sub
pop
stc
test
jl
pop
sbbb
shrb
cld
mov
arpl
or
aam
leave
loopne
mov
add
add
aaa
je
in
icebp
cmpb
or
ja
daa
dec
mov
xor
inc
aaa
add
xor
push
ret
shrl
lcall
push
add
xor
sbb
int3
sarl
or
push
inc
adc
sbbl
shll
xchg
add
ret
in
lahf
ss
cmpl
in
xor
jle
or
add
mov
cmp
gs
cmp
mov
jne,pn
mov
sbb
add
push
dec
repz
rolb
inc
mov
pop
dec
xor
test
fildl
movsb
jne
jmp
testb
lcall
xchg
out
inc
sbb
cli
cmp
jbe
cmpsl
aam
add
cmp
fs
dec
inc
jmp
inc
and
push
pop
rorb
xor
pop
mov
mov
pusha
sub
ret
sbb
pusha
test
fdivr
clc
aaa
fwait
inc
lahf
movsl
nop
cmp
cmp
je
mov
lea
cmpb
adc
sbb
and
mov
pop
xor
jle
mov
inc
cmpl
push
cmp
jne
testb
cmp
test
jno
jns
clc
je
sub
inc
fdivl
push
jb
or
ja
ljmp
or
push
mov
popa
jb
cld
add
push
cmp
push
add
sub
jnp
lock
cmpsb
inc
sub
popa
loop
xchg
mov
adc
out
loopne
mov
outsb
push
movzwl
ss
data16
mov
aaa
jb
cmp
rol
shl
add
jmp
cwtl
aas
pop
icebp
fmull
mov
inc
orl
test
es
je
fs
jne
xor
and
dec
lock
test
insb
je
push
mov
or
add
sub
cmp
dec
cwtl
xor
cld
mov
mov
sub
lea
cmp
call
insl
xor
push
xadd
outsb
mov
stc
inc
jg
or
jge
outsb
outsb
outsb
pop
adc
or
jle
es
sub
outsl
sub
and
pop
cmp
jl
pop
jle
pusha
add
inc
test
or
orl
lahf
jb
jbe
mov
test
fwait
cld
cld
dec
jo
jne
or
je,pn
test
jne
je
or
clc
pop
outsb
and
xchg
je
daa
push
mov
je
xor
add
movsb
pop
hlt
movb
inc
mov
push
sub
push
xor
push
push
or
or
cmp
std
adc
mov
pusha
push
push
mov
inc
inc
mov
je
adc
mov
negb
mov
push
pop
rorl
jp
inc
es
dec
pop
add
mov
add
push
movl
sub
inc
cli
jecxz
mov
andb
push
shrb
xchg
cltd
fildll
adc
inc
pop
popf
insb
mov
rolb
jecxz
jno
mov
je
pushf
es
out
add
mov
jne
cs
xchg
sub
cmpsl
fisubs
push
sub
push
mov
sbb
xor
movb
dec
cmpsl
cli
and
lea
push
faddl
popf
cmpsb
push
pop
add
pop
jb
jg
sub
pop
cmp
mov
stos
push
mov
loopne
add
das
mov
or
xchg
lods
cmp
pop
cwtl
jne
imul
fiaddl
stos
dec
daa
mov
add
cmp
push
push
dec
fadds
inc
and
jae
je
xor
mov
cmp
je
test
adc
push
ret
in
push
fsts
sti
mov
add
jbe
pop
or
sti
pop
daa
dec
add
and
push
and
stc
pop
add
data16
inc
push
hlt
add
xor
pop
inc
or
mov
mov
add
out
pop
popf
nop
sbb
scas
jl
add
cmp
stc
or
data16
mov
jg
scas
push
or
mov
cmp
lock
cld
xchg
mov
sub
pop
pop
add
inc
xchg
mov
pop
xchg
imulb
sarl
jne
add
push
cmp
adc
lds
adc
jae
jb
sti
pusha
jb
or
shlb
mov
andb
add
sti
pop
fwait
adc
mov
xchg
xor
xor
add
jno
sbb
mov
mov
mov
pop
sbb
mov
push
and
mov
outsb
xchg
mov
sbb
xchg
push
mov
jne
lahf
jne
dec
into
push
cwtl
addl
xchg
xchg
jl
inc
push
pop
shr
push
out
mov
or
jne
xorl
leave
mov
cmp
or
nop
mov
add
xchg
push
and
jbe
les
dec
into
ds
mov
scas
call
xor
jmp
xor
fmul
rorb
aam
aaa
clc
rcrl
sbb
cld
sbbb
mov
in
mov
xor
loop
xorl
add
arpl
es
push
rolb
sub
and
jne
add
push
push
fdivl
pop
insb
mov
jne
sbb
aas
lods
loop
jle
add
movl
add
bound
sub
mov
sti
dec
adc
jle
sub
mov
add
push
sti
rclb
ret
js
mov
jb
and
xor
fcomps
inc
clc
and
cs
jmp
cmp
je
lret
pop
cmpb
jge
inc
inc
inc
xchg
in
je
insl
mul
cmpl
and
aaa
sbb
inc
mov
inc
jne
cwtl
shl
pop
call
pop
mov
adc
imul
add
jmp
jle
test
popf
test
push
push
fwait
push
push
and
inc
pop
adcl
in
push
outsb
insb
jne
fsubs
push
jl
sub
jge
daa
or
sbb
aas
clc
int
sbb
jae
jmp
pop
inc
cmp
je
ret
aaa
cld
inc
lea
cmpb
cmp
jne
les
aam
aaa
add
jne
push
loopne
pop
cmp
add
jp
mov
mov
inc
call
cli
push
xchg
dec
data16
mov
push
jmp
test
movsb
push
adc
cltd
test
jge
sub
mov
jl
add
icebp
das
or
jo
and
jae
add
js
hlt
jns
push
and
push
or
ljmp
sahf
or
jbe
mov
or
das
ret
or
pop
jl
sbb
cmp
sbb
aad
pop
xchg
pop
push
push
stos
fisttpll
cmp
lcall
sub
adc
add
sbb
or
push
cmp
add
leave
mov
test
mov
shlb
dec
cltd
mov
jb
pop
lcall
test
mov
cld
mov
add
mov
or
mov
lret
push
push
rolb
inc
push
sbb
lock
insl
lods
add
push
mov
das
rolb
sarl
cs
adc
cmp
dec
mov
mov
js
in
jbe
cmp
jae
lret
inc
and
mov
fadds
cs
sub
xor
xchg
lret
in
xor
cmp
cmp
sbbb
fbstp
stc
add
sbb
pop
ret
mov
dec
rolb
mov
mov
or
xor
in
add
test
subl
sub
add
ds
mov
punpcklbw
push
or
loopne
jb
sbb
ficomps
jl
fsubl
loop
push
mov
je
xchg
enter
or
adc
xchg
sub
adc
shlb
push
jnp
pop
push
cmp
pusha
mov
mov
adc
adc
ret
sbb
push
mov
xor
in
dec
bound
pusha
and
jle
fidivrs
dec
movl
mov
sub
es
test
shl
mov
pusha
mov
inc
fucom
xor
repnz
hlt
test
cmp
repnz
pop
test
or
or
add
lcall
sbb
lahf
add
and
adc
cld
into
xchg
or
out
jne
cld
aam
cmpsl
andb
fildll
subb
cmp
cmpb
mov
pop
jmp
jmp
mov
sub
hlt
cmp
pop
and
cmp
mov
rclb
jnp
jle
jg
sub
cmpsb
pop
jge
adc
ud0
add
mov
sub
mov
lea
mov
ret
pop
adc
pop
xchg
shlb
shll
in
mov
dec
bound
or
cmp
cmpsl
je
in
inc
insl
or
sarl
dec
add
nop
sbb
daa
push
xchg
rclb
imul
pusha
jo
push
in
mov
mov
pop
xchg
sbb
jb
jo
out
xchg
mov
dec
push
orb
jg
lods
mov
aaa
push
xchg
lret
push
xlat
sub
or
shrl
push
adc
mov
data16
idiv
push
adc
or
lods
adc
shlb
or
lcall
or
bound
mov
pop
mov
or
out
inc
out
cmp
or
cmp
insb
in
lahf
subb
cmp
jo
cmpsl
subb
pusha
adc
adc
or
push
sub
pop
sbb
cmp
test
sbbl
add
loopne
insl
rorb
mov
int3
xorl
imul
jns
cld
or
push
cltd
inc
bnd
add
pop
lds
cmpsl
or
scas
dec
cld
mov
inc
notb
aaa
sub
mov
jae
jmp
dec
repz
pop
sbb
roll
shrl
loop
jg
fisubs
inc
jmp
call
fldcw
pop
mov
mov
fwait
mov
or
adc
add
mov
xor
push
adc
lcall
sbb
xor
cmp
jmp
loop
popf
add
push
pop
sbb
xchg
popf
ds
pop
adc
fistpll
cmp
negl
negl
sbb
adc
sbb
sub
sbb
pushf
add
and
hlt
stos
xchg
aas
push
push
mov
add
dec
push
std
add
rorl
or
push
movsb
or
xor
mov
push
pop
movl
or
cli
popf
lods
std
scas
adc
mov
add
and
xor
add
lock
mull
call
shrb
inc
push
sub
cmovae
stc
cmp
pop
or
cmp
inc
inc
or
andw
dec
sbb
jecxz
pop
fstps
jecxz
add
or
push
sub
sahf
js
ret
into
lcall
clc
xchg
add
xor
ja
in
push
mov
add
xchg
icebp
or
out
gs
push
mov
sarb
and
and
das
adc
cmpsl
and
and
push
mov
insl
xchg
data16
push
push
sub
sbb
and
and
pop
sti
repz
mov
jno
int3
adc
subb
xchg
sub
jnp
mov
xor
rcrb
xchg
xchg
xchg
shrb
xchg
jecxz
in
and
xchg
cs
lret
les
cwtl
push
push
xchg
sbb
sub
dec
add
ss
cltd
push
xchg
fcompl
xchg
int3
jecxz
or
adc
cmp
jb
fildl
icebp
add
push
and
fimuls
add
add
push
mov
lock
loop
dec
inc
and
dec
push
insl
inc
pop
iret
repz
inc
push
or
rorb
xchg
push
inc
push
xor
jecxz
pop
cmp
push
xlat
mov
push
sub
sarb
mov
test
pop
pop
mov
or
or
daa
xchg
jp
sub
lret
adc
sbb
push
jne
sub
jle
out
sti
sub
fwait
int3
es
xchg
or
pop
cmp
pop
repnz
dec
pop
mov
clc
jno
insb
insb
call
imul
push
repnz
dec
imul
mov
inc
dec
test
add
pop
push
or
cwtl
lock
imul
test
push
adc
xchg
adc
xchg
pop
std
or
lods
or
push
and
scas
les
fistpl
add
add
sub
scas
jb
dec
adc
popf
test
ret
inc
cmp
adc
or
loop
inc
ret
sub
shl
push
push
xor
scas
aaa
clc
xor
repz
jmp
nop
sub
or
sbb
inc
push
in
cld
pushw
shr
lods
out
lea
pop
push
inc
sub
subb
cs
bound
or
hlt
pushl
lock
mov
or
xchg
adc
lock
test
jb
push
shlb
cmpsb
jbe
aaa
pop
adc
outsl
adc
mov
mov
sahf
divl
testl
fisubl
test
dec
ja
jecxz
adc
or
adc
sub
add
mov
nop
push
icebp
pop
adc
push
popa
push
and
icebp
cmp
jne
sub
adc
out
in
xor
pop
dec
or
lods
pusha
adc
and
or
xor
cwtl
jne
or
xor
dec
push
fisttpll
mov
add
inc
or
hlt
mov
adc
lahf
or
add
xchg
cmp
push
out
cmp
pop
or
es
enter
mov
mov
sub
sub
and
cmpsl
fcomps
stc
call
in
sbb
in
inc
and
jo
rol
or
sub
or
shll
jl
add
adc
cmc
pop
test
lahf
out
sbb
pop
loop
add
dec
push
push
xchg
aaa
sbb
mov
sub
sbb
mov
shll
cmp
sbbb
shll
testb
dec
push
push
pop
pop
mov
int
sub
push
xchg
fs
push
push
and
sbb
pusha
daa
fdivl
insb
adc
jb
xor
mov
sbb
loope
leave
dec
mov
ss
dec
ljmp
cs
rcll
push
dec
mov
rorb
cmpsl
adcl
pop
push
mov
xor
jbe
mov
lea
dec
and
jo
mov
xor
sbb
mov
lock
les
shrb
ret
rorb
fsubs
rolb
add
movsb
push
jne
push
into
aad
push
xchg
cmp
mov
cli
xor
pop
dec
and
das
and
and
pusha
shll
ljmp
popa
popf
mov
inc
jno
shll
jne
rol
jne
sub
pop
ret
dec
push
push
out
fs
jmp
and
adcb
cltd
fdivs
sub
cmp
inc
scas
xchg
fldl2t
sub
test
mov
sub
mov
or
pusha
adcb
sarb
dec
pop
jno
add
pop
xchg
jae
stos
adc
sub
sbb
inc
xor
adc
add
jmp
cmp
xor
inc
fiaddl
adc
xchg
add
sub
mov
pop
add
test
mov
add
mov
pop
xchg
sahf
mov
push
add
js
ret
push
xor
movsb
and
sub
in
js
pop
mov
cmp
xor
ljmp
xor
test
xor
dec
xlat
mov
sbb
or
xchg
push
and
faddl
mov
or
out
xor
sbb
test
add
jne
mov
jmp
nop
out
ret
push
loop
enter
out
xor
pusha
sub
lds
dec
test
push
add
roll
es
dec
xor
mov
fxch
cmp
adc
inc
xor
xor
adcl
mov
scas
daa
or
or
or
clc
sbb
and
daa
jecxz
push
mov
mov
or
loope
mov
push
push
shlb
pusha
daa
pushf
js
pop
xor
push
sub
insl
lods
push
fistl
sub
pop
hlt
jne
push
or
jl
mov
in
mov
and
jl
or
mov
imul
dec
mov
adc
enter
jb
jmp
cmp
repnz
inc
movsb
inc
lsl
movsb
push
xor
test
xchg
fdiv
lahf
add
adc
mov
push
mov
add
cmp
fdivs
les
loop
or
sbb
or
in
jge
sub
jbe,pt
lret
or
out
xorb
rclb
pop
cltd
testb
mov
and
sahf
jecxz
jbe
jns
aam
imul
and
add
aam
ror
inc
aam
or
popa
nop
dec
in
loopne
jge
inc
xorl
push
call
repnz
push
mov
in
test
shrb
jge
mov
xor
or
insl
pop
xchg
fwait
ja
repnz
adc
cltd
pop
xchg
cmovne
xor
setno
enter
test
add
sarb
icebp
clc
mov
pop
mov
arpl
add
out
iret
jo
inc
cmp
inc
mov
stos
pusha
mov
jo
mov
or
add
adc
jnp
mov
sub
push
push
or
xorb
pushf
sub
or
adc
fists
mov
sti
jp
mov
popa
mov
add
je
push
fldt
push
xor
add
xor
cmp
xchg
push
popa
or
lret
repz
sub
xchg
test
or
pusha
test
push
out
or
mov
add
inc
hlt
sub
enter
aam
dec
leave
xor
adc
sub
jmp
sbb
inc
mov
sbb
push
lcall
jo
scas
fdivrl
xor
xor
pop
ftst
test
xchg
add
mov
sbb
mov
jmp
rorl
dec
and
adc
mov
sub
push
and
das
or
leave
sub
pop
call
loopne
out
add
pop
jae
rcl
fisttpll
sub
mov
pop
dec
adc
and
sub
test
in
inc
bound
xchg
sub
stc
or
adc
ret
push
call
push
cmp
cwtl
pop
and
in
sti
aad
push
dec
roll
pop
sub
insl
xor
sahf
and
xor
push
jge
insb
pop
dec
cmc
ds
add
add
sub
push
fimull
out
bound
push
jle
fistps
movsl
cmp
sahf
repnz
add
xor
loope
aas
sarl
jmp
and
sub
push
movl
sub
and
push
and
aaa
adc
mov
ret
wbinvd
push
loope
pop
out
push
xor
or
mov
stc
and
in
push
add
js
hlt
adc
lret
add
add
inc
pushf
push
push
fwait
or
adc
and
sub
or
or
lods
scas
test
sub
ljmp
cwtl
imulb
aam
or
cmp
xor
enter
stc
pushf
lahf
push
sub
cmp
js
rcrl
sub
fildll
mov
mov
mov
xor
or
xlat
mov
lock
cmpsl
add
test
loop
xchg
lcall
jns
sbbl
push
jmp
jb
push
mov
adc
out
ret
xchg
xchg
fistps
jge
movzbl
push
xor
add
sbb
sub
std
aaa
mov
jo
lahf
dec
je
xor
mov
andl
mov
fdivs
mov
je
sub
jmp
inc
lcall
and
ret
jmp
add
add
lock
movsb
idiv
ljmp
movlps
push
add
adc
push
inc
push
int
dec
das
lret
out
scas
add
ljmp
inc
mov
imul
cmp
sbb
imul
test
pop
or
outsl
jae
cmovbe
mov
add
inc
into
imul
test
mov
and
sbb
cmpsl
jb
test
inc
mov
fisubrs
add
movb
movl
xchg
push
push
mov
out
cmpsb
aaa
cmc
dec
mov
add
push
jge
sti
xchg
jb
cmp
inc
in
aas
mov
push
add
xorb
cwtl
push
jbe
cs
fmul
sbb
sbb
push
leave
insb
int3
cmp
sbb
aaa
or
aas
mov
cmp
rclb
ret
lea
lock
jl
jecxz
jmp
je
pop
or
xor
inc
cmp
xchg
stos
notb
push
and
pusha
mov
outsl
sarl
loopne
mov
mov
adc
xorb
mov
jge
adc
cwtl
call
in
mov
and
cmc
cmpsb
add
call
mov
adc
int
test
sub
inc
pushf
fs
sbb
ror
push
and
or
in
imul
adc
mov
lret
or
test
test
out
fwait
cmp
xchg
add
enter
iret
jbe
mov
xchg
mov
lret
mov
xchg
xorb
roll
push
mov
adc
inc
fld
inc
sub
push
sbb
adc
jnp
xchg
add
add
je
cld
push
and
dec
pop
rclb
sbb
add
aas
mov
adc
xchg
pop
stc
sahf
loop
lahf
mov
cwtl
lea
inc
push
scas
xor
ja
jl
mov
sahf
fdivr
xlat
push
mov
sbb
adc
mov
ret
xchg
test
or
loopne
cmp
cs
fadds
cmpsb
cmp
adc
sbb
adc
ss
bound
sbb
add
je
in
inc
scas
push
xlat
loope
ret
or
or
fiaddl
scas
outsl
or
and
add
insb
mov
sahf
jnp
add
mov
jne
inc
icebp
mov
push
loop
ds
aam
fcoml
or
icebp
push
sub
and
and
stc
jge
push
jge
and
filds
add
mov
or
cwtl
sbb
sbb
stos
push
cmp
sbb
outsb
mov
in
xchg
or
and
bound
pop
jle
pop
pushf
dec
push
test
gs
add
lea
sbb
mov
flds
push
add
imul
and
sbb
cmp
fisubl
mov
adc
subl
and
fwait
and
sub
mov
dec
fwait
movb
jg
fwait
mov
lea
lea
add
or
mov
dec
cmpsl
sub
lahf
insl
es
sub
jcxz
adc
mov
pop
pop
mov
add
mov
icebp
loop
cld
push
testb
clc
push
std
inc
lea
lea
cmp
cmp
test
lea
je
jno
cmpsb
lret
xor
inc
shl
icebp
data16
rclb
loope
or
cli
out
rorb
test
fdivrl
mov
jmp
mov
push
mov
pusha
mov
lods
jle
jl
rcr
or
jmp
cmpl
sar
jle
aaa
mov
je
enter
out
push
ret
hlt
sbbb
push
cwtl
or
int3
sbbl
push
sbb
insb
jb
and
lock
dec
pop
cmp
mov
xchg
sbb
add
add
push
shl
repz
jo
push
es
fidivrs
adc
sbb
pop
cmp
jne
add
rcrl
sbb
sahf
mov
add
cld
and
notb
jle
js
jb
mull
shlb
dec
mov
and
pop
xor
mov
push
dec
ffreep
sub
pushf
push
pop
or
add
mov
or
mov
adc
mov
shrb
sub
ficoml
xor
or
cmp
jne
mov
fcomps
pop
mov
loope
inc
das
mov
cmpb
xchg
faddl
and
push
shl
pusha
and
push
adc
sbb
adc
mov
stc
jmp
or
or
mov
mov
les
sbb
movsb
jo
leavew
js
dec
dec
and
ljmp
cli
pop
sbb
cltd
cli
pop
push
sub
fdivrl
hlt
jmp
mov
std
pop
pop
sub
jp
xor
fistpll
xchg
jg
cmp
cmp
into
or
pop
or
jle
add
ja
testb
hlt
nop
stos
es
ret
fisttpll
sub
push
je
dec
cmpb
add
or
or
cmp
jge
xor
out
mov
cmpb
lds
out
sub
sbbb
pop
into
in
mov
jmp
pop
inc
loop
ret
pop
lock
popf
mov
pushl
sbb
repnz
jl
lods
int
jp
sarb
jge
test
mov
jp
or
out
jg
ret
pop
pop
daa
int3
and
xchg
mov
roll
or
je
test
mov
movzwl
adc
call
adc
popl
sub
dec
mov
push
cwtl
inc
jnp
pop
pop
push
push
or
adc
mov
idiv
dec
lock
or
cmpb
jne
addr16
push
push
aas
les
mov
sub
pop
mov
rcrb
rclb
xchg
mov
mov
pop
push
mov
push
xchg
inc
mov
movl
in
push
push
call
aaa
jne
pop
sbb
push
push
das
lock
stos
rclb
and
mov
fsts
sbb
popf
xchg
jge
pop
clc
jge
lea
rcl
bound
push
jg
pop
dec
fisttpll
inc
jl
adc
loopne
les
push
incl
scas
cmp
je
shrb
cmp
jbe
adc
and
mov
sbb
cmp
jbe
cmp
pop
lcall
test
int3
das
and
dec
pop
sahf
mov
cmp
jae
in
shl
adc
loope
or
insl
pop
mov
adc
mov
mov
xlat
js
push
insl
clc
push
sub
fimuls
js
jb
pop
push
imul
add
and
add
xchg
popf
lods
in
mov
xchg
mov
push
fwait
insb
dec
push
mov
sbb
addl
pop
repz
dec
xlat
push
mov
addl
movsb
jo
ret
add
les
lock
aam
adc
sub
push
sbb
mov
cmp
fcoms
mov
aam
ret
mov
push
mov
or
nop
cmc
popl
decb
enter
sub
xor
xor
jo
in
jge
mov
int3
aad
mov
bound
or
inc
adc
notl
add
loope
dec
xor
sti
mov
std
int
fisubl
jmp
test
mov
frstor
or
lret
pop
mov
fisubrs
leave
scas
push
jp
add
pushf
ret
stos
movsl
xlat
cli
push
int3
enter
xchg
lea
mov
mov
add
lock
fnstsw
push
push
adc
mov
inc
sbb
cld
push
xor
jmp
push
dec
sbb
cmp
jo
or
adc
pop
push
popa
daa
xor
inc
jb
insb
in
pop
pop
cmp
push
mov
aas
inc
inc
mov
jne
int
pop
add
adc
test
push
jo
dec
mov
js
and
lea
push
sbb
or
cmc
mov
aad
adc
ds
mov
mov
add
push
data16
xor
outsb
or
std
push
and
mov
pushl
mov
rolb
jmp
sbb
mov
hlt
rolb
dec
mov
push
mov
rorb
push
pop
mov
imul
mulb
dec
inc
cmp
pop
mov
mov
jnp
shr
push
add
ja
fwait
inc
adc
add
xchg
scas
test
mov
pusha
sub
cmp
jne
mov
push
lret
xchg
mov
xlat
xor
leave
pushf
sbb
jp
rorb
out
addr16
xchg
les
sub
and
add
jge
clc
inc
adc
sub
mov
dec
mov
mov
rclb
es
pop
cmp
je
mov
push
mov
test
les
xchg
xchg
dec
cmp
jne
adc
in
add
jo
fstpt
iret
scas
inc
mov
jmp
ret
inc
insb
mov
push
sbb
nop
xchg
std
adc
mov
fildl
fcomp
inc
out
add
add
pop
cli
pop
add
andb
clc
testb
or
or
sahf
ja
and
out
testb
mov
mov
push
xor
in
clc
add
in
cmpsl
sub
mov
jmp
cwtl
dec
je
dec
xchg
repnz
inc
scas
pop
or
js
lcall
inc
xor
xor
ljmp
pop
cmp
adc
aas
jmp
mov
cmp
jae
lea
inc
jmp
jge
cmpl
inc
cmp
jbe
mov
in
push
and
inc
nop
sbb
sub
fcom
adc
cld
mov
dec
aam
sub
in
pop
mov
test
cmpl
dec
sarl
adc
mov
ds
xchg
scas
xchg
mov
hlt
push
push
loope
cmpb
xchg
call
insb
and
push
push
les
and
movsl
mov
push
sbb
xor
and
mov
pushf
addl
sbb
roll
cmp
sub
mov
mov
add
lock
in
pop
bound
cmp
mov
xchg
mov
mov
ficomps
fiadds
pop
add
and
add
mov
popf
jno
in
sahf
inc
fcompl
adc
sbb
xor
cmp
mov
mov
ret
scas
and
into
adc
inc
repz
and
dec
mov
pop
inc
hlt
aad
or
dec
pop
sbb
mov
mov
inc
jno
lahf
ja
lods
adc
sbb
ret
cmc
enter
cmpsb
pushw
push
je
add
ret
loopne
mov
xor
stos
xchg
pop
enter
pushl
shl
jp
xchg
ljmp
and
call
and
ret
push
or
adc
enter
fwait
fwait
or
adc
xlat
xchg
push
cmp
or
inc
add
orl
pop
dec
in
xchg
push
xorl
xchg
mov
gs
inc
lock
and
cmp
push
pusha
adc
add
inc
lcall
or
jne
push
dec
rol
dec
xor
pop
mov
add
ret
pop
arpl
cwtl
lods
jge
xor
adc
lea
clc
aam
addb
rorb
sub
inc
loop
push
sub
jge
jl
pop
xor
test
mov
lahf
stc
lret
or
sarl
or
cli
sbb
je
mov
cmc
xchg
maxps
jmp
cmp
jbe
xchg
addb
xchg
dec
inc
jns
xor
insl
dec
dec
dec
clc
jne
mov
push
test
cmp
dec
or
sub
lea
lods
testl
pop
stos
mov
popa
ss
addl
or
clc
hlt
hlt
in
cmp
pop
adc
or
pop
orl
dec
pusha
push
xorl
pop
cmp
jae
cwtl
mov
inc
sbb
fxtract
jne
jb
mov
fistl
adcl
fnstenv
mov
subl
sub
and
in
add
or
int
sub
add
call
cld
clc
pushl
cmp
add
mov
xchg
and
rorl
pop
movups
orl
data16
or
xor
add
xchg
pop
add
adc
loopne
cmp
push
mov
add
pop
in
and
je
mov
dec
pop
jo
xchg
or
lds
jl
ja
js
into
lea
adc
push
nop
pop
mov
xchg
xchg
adc
inc
adc
test
pop
xchg
ret
sbb
les
push
pop
xor
ret
mov
daa
pushf
mov
fists
pop
or
mov
jo
xor
sbb
rclb
add
mov
inc
std
dec
mov
jne
cmp
mov
sbb
cmp
adc
dec
loopne
scas
jge
jbe
push
xor
dec
hlt
mov
nop
adc
xchg
scas
insb
jne
lea
mov
add
lret
out
add
fnstsw
imul
jbe
loop
inc
jne
sub
das
push
jmp
pusha
ret
ja
std
outsl
cmpsl
jne
push
push
test
rclb
inc
adc
jg
jnp
push
scas
sbb
notb
jo
loopne
lret
or
lods
in
lods
push
lods
add
cmpsl
lahf
sub
or
cltd
sub
mov
dec
fcomp
and
fs
and
test
movzbl
push
lock
push
push
mov
rolb
es
stos
adc
xchg
stos
test
es
xchg
jne
xchg
lock
or
jle
mov
push
ret
and
push
pop
push
or
mov
mul
sqrtps
mov
test
push
jmp
gs
push
ja
mov
lret
shrb
inc
loopne
rcrl
fcoml
xor
lods
loop
xor
cli
data16
ficompl
es
insb
xchg
ds
add
mov
mov
iret
mov
stos
jmp
jle
jo
xchg
push
mov
mov
or
cld
add
jbe
les
add
lret
add
cwtl
aaa
xchg
dec
test
pop
sbb
adc
lods
dec
loop
call
or
add
shll
shlb
push
sbb
push
push
out
mov
inc
das
lods
push
lea
std
push
movsb
lea
stos
pop
or
pop
pop
or
jl
jo
addl
arpl
mov
lds
movw
xor
pusha
test
mov
test
add
sbb
or
pop
and
test
sarl
cmpb
push
mov
adc
addb
jl
jmp
mov
add
es
das
daa
jg
addr16
jmp
enter
negb
pop
lds
jo
jle
mov
nop
pop
inc
xchg
push
je
imul
sbb
aas
pop
pop
insb
movsl
push
andb
xorl
out
or
jmp
call
lret
call
xchg
xchg
inc
andb
subl
add
fstpt
cmp
addr16
and
pop
jnp
inc
push
popa
adc
cmp
pusha
adc
xchg
mov
push
pop
push
cmp
and
fucom
jle
sbb
cmp
mov
jb
loop
cmp
xor
add
loopne
add
enter
andl
and
or
out
sbb
js
jo
inc
ljmp
pop
or
dec
inc
je
je
push
loopne
inc
movsl
fisubs
sarl
lds
inc
lcall
or
jmp
cmp
adc
mov
movsb
mov
int
stc
je
add
adc
mov
adc
xchg
adcb
add
sbb
loopne
inc
mov
clc
clc
inc
sbb
int3
sub
lock
xor
or
sbb
int3
lods
cmpsl
jp
push
sbb
mov
arpl
cmp
pop
adc
inc
sub
mov
and
mov
imul
out
xorl
movsb
jecxz
adc
mov
jle
jge
sbb
sub
inc
xchg
and
cmpsl
call
jmp
or
cmp
cmp
call
in
jl
cmp
cmp
jbe
mov
and
clc
jle
adc
enter
inc
jl
cmp
push
sbb
call
dec
out
popl
or
fdivr
clc
add
clc
jno
mov
add
or
sub
mov
icebp
or
sub
jne
sbb
or
cmp
sub
or
sbb
je
sti
push
xor
test
add
sbb
cmp
ret
les
push
xor
lea
negl
mov
movl
xor
popf
loopne
xorps
test
jne
push
fdivr
push
pushl
cmp
xchg
in
mov
negl
xchg
and
cltd
loop
add
mov
pop
mov
xor
jb
adc
push
sbb
lods
hlt
ret
mov
mov
fwait
sahf
repnz
mov
mov
sbb
sub
in
test
adc
pushl
jmp
mov
aam
or
xlat
insl
popf
xor
push
enter
orl
sub
xchg
rcll
mov
pusha
jg
add
lret
jb
sbb
xor
pop
fcompl
int
dec
add
ficoms
das
das
mov
jge
lock
repnz
jmp
fcoml
iret
cs
add
add
movsl
or
cltd
sub
imulb
mov
cmp
test
lods
add
xor
inc
dec
adc
push
lods
outsb
pop
lea
lods
mov
enter
les
dec
shlb
xadd
loope
arpl
out
loop
cmpsb
and
or
sti
imul
xchg
inc
mov
loopew
out
pusha
test
mov
cmp
clc
cltd
lea
inc
dec
int3
cmp
jae
test
xchg
in
sub
loopne
adc
xlat
mov
adc
ljmp
mov
add
push
push
cmc
xchg
shl
dec
adc
fstpt
loopne
inc
mov
xor
cmp
les
adc
idiv
mov
incb
mov
xor
or
mov
or
or
xchg
jmp
mov
nop
jb
shll
mov
push
add
xchg
cmp
push
jle
sub
adc
insb
int3
mov
out
mov
enter
addb
xchg
cld
jb,pn
rol
add
insl
jle
ret
scas
sub
push
mov
cmp
dec
lock
add
add
dec
xor
and
mov
test
mov
lea
popf
dec
pop
roll
ds
je
mov
bound
hlt
jae
inc
test
and
rorl
pusha
repz
adc
xor
or
loope
rcrl
data16
lock
mov
xchg
sub
loopne
sub
push
dec
sub
xchg
or
xor
xchg
sub
mov
les
cmpsb
push
cmp
push
pop
pushl
xchg
inc
movsb
fnsave
sbb
jo
jmp
and
inc
adc
jo
jg
push
cld
mov
fcoml
mov
sub
and
popa
shrl
lock
adc
xchg
aas
bnd
mov
out
mov
data16
cmp
jne
cmpb
ret
or
js
push
jae
lea
push
sub
sbb
xchg
push
add
jnp
ret
jno
movsb
idivl
cmp
ja
push
add
xchg
or
rolb
pushf
or
adc
jmp
dec
cmp
sbb
mov
cmpsl
sbb
push
shrb
cmp
push
cmp
jae
inc
jmp
push
or
sub
mov
and
sub
inc
cld
ret
sub
mov
movb
mov
adc
dec
fcom
sub
iret
ret
mov
inc
mov
add
xchg
inc
into
or
int
xor
and
pop
test
adc
or
cmp
push
inc
mov
xor
test
in
lods
pushf
pusha
leave
push
cmp
inc
dec
xor
outsb
xor
add
lds
add
lods
inc
cmpsl
inc
add
lods
dec
push
test
in
pop
pop
enter
adc
test
mov
int3
or
and
and
ss
xor
cmpb
sub
cmp
les
sbb
jbe
mov
sbb
dec
jo
add
hlt
add
jb
adc
and
cmp
ja
cmpb
push
push
or
or
jo
add
xor
sbb
inc
icebp
sahf
adcb
and
shll
lods
int
mov
ds
adc
add
scas
adc
fs
sub
jecxz
dec
pop
push
inc
or
add
cwtl
sub
insb
es
adc
aam
and
addr16
outsb
sti
testl
in
cli
adc
fs
shlb
lea
cli
ja
cmpb
out
ret
push
mov
or
add
fcomps
andl
mov
xor
loop
or
test
sbb
arpl
xor
imul
inc
mov
push
push
popl
pop
in
jno
xchg
aaa
adc
xor
pop
dec
xchg
test
fwait
add
sbb
loopne
jns
cmp
pop
adc
or
orl
sarb
dec
iret
push
add
or
loopne
es
push
and
pop
adc
push
add
mov
mov
sbb
add
stc
cld
push
mov
xchg
pop
jg
pop
mov
add
imul
jge
cmp
cmp
pop
sub
xor
test
mov
in
lock
and
and
fcmovnbe
je
mov
xchg
inc
aam
jmp
and
lock
insl
mov
lock
lock
test
out
pop
cmpsb
movl
xor
pop
je
out
cmp
and
mov
shrb
sar
xor
xchg
repnz
movl
rclb
mov
fisttpll
jge,pn
xor
push
jg
or
mov
push
cmpb
or
mov
cmp
jne
inc
adc
or
adc
push
call
mov
push
mov
popa
add
aas
lret
cld
cltd
add
rolb
inc
push
fcompl
repnz
jle
arpl
test
popa
and
into
inc
cmp
and
mov
sbb
or
pop
loopne
jle
pop
sbb
gs
cmp
xor
xchg
xor
ror
adc
in
jmp
sbb
pop
dec
ret
repz
dec
popf
xchg
xlat
dec
sbb
aas
sbb
mov
fcoml
mov
sbb
add
ja
cmp
mov
sbb
leave
and
test
enter
push
push
pushf
sbb
lahf
into
call
scas
cmp
cs
jge
inc
adc
out
repnz
stos
cs
add
inc
sahf
xchg
fs
xor
int3
push
nop
addr16
insb
adc
push
jl
add
inc
ds
add
je
push
in
aas
iret
push
adc
lods
jl
iret
mov
enter
ss
movddup
pop
lods
mov
pop
xor
dec
jecxz
jge
sub
ret
bound
adc
dec
movsl
dec
shrb
inc
test
icebp
adc
cld
push
ja
push
dec
mov
pop
adc
jmp
scas
icebp
adc
pop
cli
test
pushf
xor
adc
add
xchg
lock
push
push
arpl
xor
jne
mov
imul
mov
push
rol
add
pop
fdivrs
add
test
ret
pop
jae
pop
xor
mov
inc
pop
mov
rcrb
push
bound
vphaddbq
imul
cmp
int
outsb
out
mov
jmp
xor
nop
cmp
call
pushl
inc
rorb
xlat
sub
jmp
or
fstl
fimuls
push
sbb
mov
ret
mov
test
cli
out
loope
pop
push
mov
and
sti
or
js
pmuludq
cmp
subb
roll
shrb
call
ret
inc
or
imul
dec
and
sbbb
fidivs
add
fcoms
pusha
add
dec
mov
push
clc
sbb
push
inc
pop
rorl
inc
addr16
add
outsb
xchg
inc
cmp
mov
and
xchg
lds
lock
pop
bound
add
mov
loopne
mov
mov
push
add
int3
pop
imul
or
aam
and
or
add
or
fs
push
dec
or
pop
dec
xchg
and
call
sub
outsl
add
movsb
into
or
movsl
xor
push
popa
cmp
add
rorl
inc
lods
out
fwait
repnz
sbb
mov
push
mov
stc
push
or
cli
push
mov
jp
jbe
add
push
insb
mov
inc
jmp
pop
push
inc
into
push
pop
and
add
push
and
cmp
sub
lea
xor
lock
std
fnstcw
movsb
pop
add
mov
movsb
mov
pop
mov
call
mov
inc
inc
daa
pop
clc
rorl
push
jp
mov
fiaddl
mov
dec
mov
add
jmp
jns
cmpsl
sub
mov
and
mov
sbb
jmp
or
mov
leave
sbb
pop
adc
loop
adc
or
pushl
xchg
mov
ss
jl
lock
push
test
add
int
mov
imul
mov
rcl
inc
shll
cmp
mov
mov
fucomp
and
in
lods
inc
pop
daa
lea
pushf
dec
stos
or
fmuls
fsubrl
or
pop
mov
jns
shrb
add
push
push
mov
lcall
test
aaa
pop
and
push
das
js
inc
sbb
popa
add
enter
and
pop
enter
mov
xchg
cmp
or
add
mov
fs
lods
lea
mov
sub
mov
lar
sbb
mov
or
mov
cmpsb
add
into
xor
mov
sbb
lea
adc
xor
push
dec
mov
add
imul
push
fstps
pop
ret
push
aas
push
lock
xchg
frstor
sbbb
test
push
sub
nop
push
pop
cwtl
dec
push
push
lea
jl
scas
mov
jle
xor
push
insb
and
mov
mov
push
lock
or
add
jno
cmpb
jle
mov
clc
andb
sbbl
je
jg
sub
sbb
push
mov
and
clc
push
call
sbb
pop
call
ja
and
sarl
test
cmp
fsubrs
shlb
pop
xchg
adc
add
pop
jo
and
and
mov
rorb
imul
sbb
sbb
xor
inc
inc
xcrypt-ctr
in
mov
je
clts
inc
or
and
das
pop
rorb
inc
xor
pop
arpl
mov
cmpl
jmp
pop
es
mov
inc
sub
cmp
call
rclb
or
arpl
xchg
call
inc
loop
mov
sub
cmp
int
cmpl
mov
add
test
cmc
inc
jne
pop
ret
cmp
movsb
mov
jmp
data16
pop
push
not
rcl
xor
in
cmp
or
dec
aam
pop
into
pusha
lds
mov
or
add
cmp
movsl
dec
sbb
scas
add
inc
sbb
ljmp
sbb
leave
add
fisubs
test
mov
sbb
push
mov
mov
lock
enter
es
push
add
add
xor
into
je
nop
cmp
fwait
iret
sti
mov
call
push
and
pop
addb
add
repnz
ret
jae
cs
loopne
add
xlat
push
into
mov
popa
mov
das
aad
test
sarl
js
dec
inc
inc
mov
pop
jb
popa
in
mov
mov
test
push
dec
or
mov
mov
lds
enter
subl
mov
test
xchg
add
inc
mov
stos
and
and
add
push
cwtl
cmp
lret
ljmp
add
ja
rclb
dec
push
add
je
mov
inc
add
sub
push
mov
test
clc
mov
mov
jg
pop
add
ret
inc
inc
or
pop
mov
mov
or
daa
fs
ffreep
or
push
outsb
add
sbb
dec
mov
add
inc
add
mov
mov
add
jmp
pop
adc
pop
mov
pop
push
pop
pop
cli
xchg
lods
mov
lock
data16
xor
sub
fsubrs
add
aam
mov
mov
push
icebp
adc
mov
dec
sbb
cld
push
loop
xchg
mov
dec
stos
test
sbb
sbb
or
sti
xchg
rclb
test
hlt
cmpb
mov
mov
pop
scas
rol
imul
add
das
mov
in
push
repz
jne
dec
mov
arpl
in
lahf
cmp
push
cs
push
adc
sbb
pop
andb
add
aaa
or
popa
negl
dec
and
inc
add
or
movsl
loopne
in
jo
push
addr16
jo
mov
push
push
lcall
jp
or
xchg
inc
popf
push
push
jbe
mov
mov
push
jb
xlat
add
add
sbb
xlat
test
mov
mov
jp
or
nop
pop
pop
out
inc
push
xchg
add
test
xchg
sbb
mov
jecxz
aad
test
add
pop
je
mov
jo
push
or
popf
popf
xchg
nopl
test
jnp
mov
cld
add
popa
mov
js
loope
fsubl
ss
mov
xchg
lods
aam
xchg
pushf
pop
inc
and
sbb
sbb
jb
sub
ja
lods
sub
test
out
jno
ljmp
sbb
int
fsub
or
icebp
sbb
mov
cli
roll
xor
jae
and
in
nop
dec
mov
fwait
jg
scas
mov
ss
pop
mov
add
push
sbb
dec
enter
sbb
cmp
sbb
cwtl
sti
sub
xor
jb
or
sub
sub
cmp
test
fisubrl
fcompl
mov
add
je
and
fisubrs
fucomi
sub
sbb
xor
fstps
in
xor
leave
cmp
test
mov
cmp
and
bound
add
dec
stc
jo
sbb
je
repnz
popa
jnp
push
or
xlat
sbb
lret
movsb
add
sbb
daa
xchg
xchg
add
add
push
dec
sub
xor
movsb
jb
cmp
cmp
xchg
lret
cmp
inc
or
sub
xchg
inc
or
test
adc
push
out
adc
mov
div
mov
xchg
mov
xchg
adc
or
and
rcr
outsl
jmp
xor
push
or
sahf
fdivs
xchg
lcall
push
movl
in
inc
pusha
add
pop
mov
mov
cmp
add
add
leave
sub
sbbb
lea
sbb
int
mov
xchg
rcrb
int3
dec
push
fs
enter
push
dec
stos
pop
push
xchg
enter
inc
and
adc
insl
sti
jnp
xorb
mov
jg
fs
enter
inc
jb
and
and
and
adc
sbb
enter
or
aad
clc
add
roll
xlat
mov
lea
dec
into
loope
incb
cmpsl
push
sbb
fldl
ret
jl
cmp
orl
xchg
pop
out
push
add
or
push
dec
aaa
cltd
cs
mov
sub
add
add
pop
int3
xchg
add
inc
cmp
xor
pop
lock
nop
cld
pop
sub
jge
pusha
das
xor
add
fidivl
inc
jp
add
and
cld
add
xchg
ja
push
inc
add
sbb
mov
push
lret
nop
or
or
fs
push
jb
mov
pop
sbb
add
outsl
rcrb
inc
adc
pushl
or
sarb
pushl
push
adc
or
out
or
push
das
sbb
scas
inc
mov
inc
pop
mov
jge
add
cli
ljmp
mov
loopne
inc
or
jmp
lea
outsl
filds
rclb
lods
sub
pop
jo
xchg
pusha
mov
or
test
mov
rorl
jl
adc
or
enter
add
xchg
or
hlt
pop
or
adc
pop
xor
push
mov
fucomip
xchg
mov
or
rcrb
cwtl
enter
or
sbb
sub
dec
add
adc
jl
fs
or
jbe
insb
push
pusha
rorb
cwtl
fwait
and
push
or
sbb
and
mov
pop
xchg
or
shlb
add
mov
cmpsl
add
jo
or
push
fcmovb
ss
adc
loop
add
inc
jl
in
add
sbb
push
sahf
rcrl
mov
jmp
clc
insb
sbb
clc
fwait
pop
pop
loopne
fdiv
adc
sub
add
push
add
inc
ss
cld
push
ret
dec
pop
pop
xchg
add
xchg
cmp
add
sbb
test
cmp
push
cmpl
insl
push
nop
dec
pushf
je
inc
lods
sub
sub
adc
or
shrl
dec
and
pop
ret
xlat
mov
add
insl
jae
imul
sbb
ss
push
test
adc
hlt
push
push
push
mov
or
mov
lods
mov
and
push
outsl
lcall
dec
pop
adc
es
dec
push
loope
pop
ljmp
insb
jb
aas
add
dec
push
sub
push
dec
inc
adcb
std
inc
imul
shl
add
push
idiv
cli
cld
sarl
jne
cmp
jae
push
imul
cmpl
sti
jmp
mov
mov
lods
or
and
push
sbb
pop
add
jne
mov
push
adc
sub
sub
dec
sbb
mov
sub
dec
inc
notb
mov
pop
mov
jmp
cmp
mov
add
shlb
mov
add
and
jb
mov
nop
outsl
mov
and
xor
or
cli
or
sbb
or
jmp
inc
jge
adc
inc
dec
fwait
push
sub
lea
popf
dec
add
xor
adc
adc
or
xchg
xor
inc
jo
pop
jmp
scas
fiadds
push
fcmovu
inc
and
les
addr16
inc
out
test
div
sub
pop
shrb
lahf
add
pusha
push
lea
cmp
mov
icebp
and
dec
mov
pop
repz
add
xchg
out
or
loopne
xor
xor
out
or
or
and
or
cmpsb
aam
and
mov
repz
mov
xor
sub
inc
sti
hlt
addb
adc
jne
sub
ret
ja
imul
and
pop
pop
jp
mov
inc
xchg
push
mov
add
inc
add
adc
arpl
pusha
loope
rol
loope
push
adc
xor
out
adc
xor
mov
push
mov
fsubrl
icebp
rolb
cmp
push
loopne
push
daa
cwtl
dec
in
inc
xlat
pop
mov
loop
jl
jns
loopne
dec
mov
add
sti
xchg
cmpb
jge
inc
jo
sbb
dec
cli
enter
jne
push
xchg
and
xor
dec
push
pop
dec
or
hlt
movsb
in
xchg
add
pop
push
inc
adc
fisubrl
sahf
inc
lea
or
ljmp
push
push
and
in
adc
das
push
test
dec
mov
push
cmp
mov
add
mov
aad
test
mov
push
mov
mov
stc
xchg
ds
adc
testl
xchg
inc
and
push
scas
hlt
mulb
xchg
add
sbb
add
sbb
xchg
sub
pop
cmp
sbb
inc
jo
xor
rol
subl
dec
push
addr16
pop
orl
mov
and
cmp
js
push
push
cmp
and
loopne
loope
push
jae
cmc
push
or
xchg
and
dec
push
cmp
clc
add
in
leave
jg
lret
mov
xorl
jle
nop
scas
aaa
xor
ss
sub
cmp
rclb
pop
or
leave
cmp
and
sbb
and
inc
sub
sub
lahf
addr16
nop
adcb
data16
fisubrs
out
push
setg
icebp
push
inc
sub
das
sbb
sub
leave
add
mov
aas
aas
push
pop
push
sarl
or
inc
mov
test
and
aaa
mov
dec
xor
xchg
add
fs
testb
iret
pushf
sbb
es
xor
inc
mov
sbb
or
orl
pop
and
sbb
arpl
xchg
cmpsl
je
xchg
or
ret
push
mov
xor
imul
xchg
lock
and
push
popa
es
cmp
mov
mov
test
xor
loopne
mov
adc
push
out
jmp
das
or
sbb
jo
add
lret
push
or
pop
sbb
inc
mov
enter
inc
lret
mov
mov
inc
fisubl
jg
cld
pop
test
add
iret
cwtl
mov
mov
js
jne
sub
sub
lods
add
jbe
cmpb
cwtl
insl
cmp
inc
jnp
arpl
mov
jne
or
xchg
mov
fists
jle
imul
push
addl
sub
movsb
movsb
or
inc
lret
sbb
adc
mov
pop
enter
cmp
xorb
lock
and
sub
xchg
leave
in
call
daa
movzbl
jmp
and
repz
mov
sahf
iret
scas
mov
and
movsb
ret
sub
mov
or
sub
cmp
mov
and
lret
add
jne
sbb
pop
les
add
jbe
cmp
dec
aaa
dec
shlb
arpl
mov
mov
sub
sarb
arpl
jo
test
pushl
in
inc
sub
decb
fistl
push
mov
js
test
es
inc
pop
aam
popf
lret
ds
mov
jae
sbb
jl
push
in
and
lea
jbe
cld
sbb
inc
outsl
fsubs
dec
mov
daa
mov
nop
mov
sahf
popf
adc
jmp
push
cli
ja
mov
cmp
jle
push
movsb
jnp
ds
loopne
push
and
jge
dec
mov
es
sbb
jo
pop
popa
inc
cmp
lds
stos
hlt
add
dec
xor
test
repnz
adc
mov
clc
repz
push
daa
adc
fstpt
pop
mov
push
add
mov
jns
icebp
in
int3
cmpsb
mov
jecxz
push
movl
adc
pusha
push
or
or
pushf
fwait
aas
fdivr
or
dec
sbb
mov
sbb
or
rolb
inc
pop
aas
pop
cmpsl
inc
add
mov
xor
iret
mov
inc
adc
or
xor
inc
add
incl
mov
aaa
es
xor
dec
push
je
dec
sbb
loope
jne
aad
lea
push
fs
adc
push
pop
add
adc
inc
lahf
jb
push
dec
xchg
cmpsl
xlat
inc
repnz
push
inc
dec
push
roll
sub
sarb
pop
add
push
jmp
cmp
pop
fisubrs
adcl
jne
dec
dec
lcall
sbb
jecxz
dec
dec
rcll
std
roll
mov
mov
lcall
lock
add
scas
xchg
mov
add
push
daa
fdivs
jo
jo
inc
inc
mov
xor
push
mov
stos
xorb
mov
dec
sub
pop
faddl
jp
mov
jbe
xor
push
xor
out
cwtl
cld
sub
xor
dec
enter
or
inc
or
inc
mov
sbb
loop
sbb
mov
add
cmp
pop
add
dec
jge
sbb
out
fsubrs
push
mov
jnp
mov
pop
ret
add
xchg
cmp
xor
lea
push
add
push
mov
into
pop
into
pusha
popa
pop
and
enter
or
add
lock
inc
sub
sti
je
mov
sbb
xchg
iret
xchg
inc
es
pusha
sub
inc
pop
and
and
js
fnstcw
or
inc
sbb
loope
aad
fwait
jns
sub
add
or
dec
and
jmp
and
dec
sub
dec
shll
cmp
push
daa
xchg
xor
pop
pop
add
sub
gs
sbb
mov
je
adc
and
inc
pop
test
inc
and
cwtl
mov
mov
in
fwait
and
mov
sbb
push
sub
inc
movb
data16
add
mov
mov
xchg
push
inc
test
add
mov
push
or
pop
push
ja
pop
adc
mov
jmp
cmp
jae
add
iret
pop
addb
pop
or
inc
lret
sbb
add
lret
mov
pop
sub
fistps
cmp
jb
cmp
js
adc
decl
push
lods
sbb
cltd
push
adc
out
mov
mov
cmp
mov
sbb
pop
and
xchg
or
adc
pushf
sub
jne
add
mov
xor
pop
adc
push
stos
xor
daa
mov
adc
xor
sbb
add
inc
clc
xchg
cmp
lahf
fwait
or
ret
lahf
jecxz
jne
hlt
stos
ja
jno
or
mov
mov
jnp
ds
mov
inc
sub
inc
xor
cmpsl
aad
insb
jge
xorb
lea
add
sbb
movsl
jbe
enter
enter
adc
sbb
add
addl
xor
pop
xor
rcr
rolb
mov
fstps
or
mov
or
jnp
std
inc
xor
and
je
ljmp
nop
add
xor
rcr
rolb
push
inc
cmp
push
add
push
add
mov
push
push
xchg
add
mov
and
js
add
push
inc
stc
and
jle
add
incb
fucomp
insb
add
inc
jmp
push
cwtl
gs
mov
xor
adc
inc
fdivrl
xor
mov
xchg
mov
scas
jge
dec
pop
loopne
inc
or
inc
sbb
jecxz
or
dec
sbb
fwait
out
sbb
sbb
mov
mov
je
or
shlb
lea
cmp
subb
and
fs
sbb
xchg
push
sbb
decl
xchg
jmp
enter
fmull
jge
xor
mov
pop
popa
pushf
adc
push
test
mov
insl
push
insb
push
jl
add
push
je
fisubs
pop
and
rcrb
or
sub
sub
adc
push
bound
xchg
push
pushl
inc
mov
add
push
lods
mov
subb
mov
xlat
enter
mov
and
shll
enter
aaa
pop
push
loop
add
pop
rorl
adc
mov
stc
test
cmp
lock
adc
adc
mov
jecxz
lods
push
inc
movsb
push
push
sbb
imulb
jge
movsb
pop
sbb
aam
pop
xor
dec
sti
push
std
pushl
nop
lret
in
in
push
mov
adc
clc
cwtl
or
or
dec
cmp
pop
jb
adc
add
xor
cmp
movsb
mov
push
mov
pop
shrb
inc
lcall
jb
adc
adc
jnp
out
mov
xor
int
movsb
adc
or
push
push
xchg
pop
jne
add
out
jo
pop
sbb
adc
mov
and
repnz
loope
adc
arpl
push
ja
push
dec
lea
adc
or
fsubr
leave
mov
pop
jns
clc
sbb
or
push
xchg
iret
in
sbb
pop
dec
and
imul
push
or
mov
mov
xchg
mov
mov
adc
inc
insb
inc
jle
or
mov
add
pop
rorl
cmpsl
mov
cmp
shrb
dec
add
dec
fdivs
sbb
cmovb
cmpsb
dec
cs
jl
push
or
sbb
xchg
cltd
mov
stc
jnp
insb
fildl
rcrl
dec
push
cmp
pop
adc
mov
cmpsl
sub
pop
lea
pop
stc
push
test
popa
test
test
add
adc
push
inc
mov
adc
push
add
testl
mov
movsb
mov
sub
pusha
pop
mov
mov
lods
fiaddl
push
packsswb
mov
outsb
iret
dec
push
sub
popa
or
sub
mov
andb
sbb
cmpb
les
sbb
sub
iret
xchg
adc
pop
out
cmp
or
mov
adc
xchg
or
ja
or
add
imul
out
leave
ss
sarl
push
lret
test
add
call
or
cmp
xor
push
cltd
cmp
cli
scas
out
add
mov
sub
sbb
xor
addl
pop
inc
js
into
mov
xchg
cltd
push
test
inc
mov
adc
icebp
test
dec
es
adc
pop
jb
push
adc
push
bnd
push
and
sbb
insb
cmp
lret
or
pop
xchg
xor
cmp
push
lret
or
in
cltd
add
push
pop
jns
xchg
subl
sbb
mov
or
sub
jl
addr16
sbb
jae
mov
js
and
push
adc
les
sbb
gs
or
pop
mov
or
and
adc
add
sbb
les
push
int
stos
pusha
dec
aad
dec
cmp
and
fstpl
mov
and
inc
arpl
and
xlat
and
and
pusha
int
push
xchg
xor
imul
outsl
and
cltd
mov
inc
jne
mov
mov
sub
sbb
or
add
sbb
rorb
lods
repnz
mov
and
sbb
ja
push
mov
lea
ljmp
inc
dec
rcrb
or
int
pop
add
pop
ja
dec
jl
dec
jmp
in
adcb
lock
adc
outsb
loopne
ss
jne
pop
pop
adcl
add
jmp
xchg
pop
cmp
jmp
jecxz
in
push
das
shl
test
add
insb
add
jl
cmpsl
xor
sahf
adc
sbb
scas
leave
xchg
push
xchg
cmp
push
sti
je
out
cmp
dec
push
inc
mov
sub
imul
je
inc
cmp
sti
xor
movsl
mov
idivb
jne
pop
js
lret
stos
push
leave
inc
loopne
jne
sbb
xchg
sbb
add
bound
push
test
aad
push
ss
aaa
mov
push
fildll
pop
mov
test
push
fimuls
or
push
dec
mov
or
jae
pusha
xchg
inc
mov
and
mov
push
xor
sub
jecxz
xor
ret
push
mov
in
or
dec
pop
enter
pop
or
jmp
or
rcll
push
sub
dec
add
enter
xchg
cmp
outsl
jmp
fcomps
sub
cltd
insl
in
xchg
out
adc
adc
pusha
inc
lock
mov
loope
mov
adc
sbb
cwtl
insl
enter
in
mov
mov
xchg
sbb
rcrl
inc
aam
sbb
pop
js
or
adc
sbb
jl
mov
or
adc
push
mov
pushl
or
lods
in
fisttps
push
jbe
pop
cwtl
adc
subb
mov
addl
icebp
or
jp
xorb
fs
sub
into
pushf
sub
xor
pop
shlb
cmp
in
je
lods
jl
test
sbb
mov
pusha
pop
push
jo
jge
ss
inc
popa
push
ret
sbb
stos
and
mov
movsb
mov
lcall
sub
jge
xchg
xor
xchg
dec
call
pop
xor
and
and
lcall
xor
popa
xor
dec
pop
aas
pop
sbb
outsl
pop
jmp
jb
lock
loop
dec
inc
adcb
das
push
inc
cmp
add
xchg
and
and
jmp
jp
rcl
ljmp
add
popa
and
andl
xchg
cmp
stc
mov
sbb
es
xor
jne
or
jno
fidivrl
sbb
ficompl
pop
fs
push
stos
les
and
mov
sahf
xor
rcl
pop
lods
inc
dec
sahf
sbb
lods
and
fmul
ja
add
sti
sbb
push
sub
cmp
mov
sbb
addps
es
sub
xor
fadds
pop
pop
sub
push
dec
sbb
pusha
sub
jne
rcrb
mov
movsl
xor
shlb
sub
pushf
mov
push
pop
dec
mov
push
test
mov
sbb
or
mov
add
lods
int
imul
lock
add
ds
and
sbb
sub
stc
movsl
dec
sbb
sub
dec
das
pop
ret
pop
lea
sub
push
xchg
cmp
and
sbb
out
mov
xchg
adc
cmp
add
and
push
aaa
sub
sbb
push
sub
dec
orl
ret
jecxz
jne
xor
out
xor
adc
xor
sbb
leave
or
stc
lock
or
xor
movsl
stos
xor
mov
cmc
bndstx
ret
and
xor
add
addb
icebp
dec
ds
movl
pop
call
adc
jmp
add
mov
inc
push
movsl
ret
push
push
mov
sbb
scas
and
lret
nop
cltd
or
pop
sbb
dec
mov
adc
int
daa
les
pavgw
jmp
jbe
or
adc
nop
add
loop
add
leave
push
iret
test
mov
ds
mov
cmp
nop
and
xor
fs
and
sbb
loop
sbb
fs
inc
lock
lcall
ret
repnz
rcrb
push
add
leave
add
in
ret
insl
inc
xlat
mov
or
push
adc
sub
mov
mov
aad
push
fs
sahf
and
pop
loopne
jne
add
and
adcb
sub
push
fists
sub
and
or
loope
add
out
stos
sub
inc
cmpsl
xor
xor
jo
inc
inc
or
mov
or
jb
inc
sub
cmp
insb
pop
xor
shrl
xor
inc
sub
imul
mov
jns
and
in
insb
loope
dec
xor
arpl
push
minps
movsl
inc
dec
lods
cmp
mov
fs
test
add
nop
add
addb
and
sbb
inc
push
andb
dec
loop
xchg
jae
mov
push
cmc
inc
cltd
inc
gs
in
mov
push
or
and
push
sub
fistps
adc
mov
std
jp
scas
mov
pop
lcall
roll
mov
adc
faddl
stc
or
aas
enter
aaa
add
cmp
add
xchg
lret
pop
push
add
or
aas
aaa
pushl
call
in
sub
jecxz
hlt
and
leave
push
sub
xor
pop
aam
sbb
pop
mov
fwait
or
mov
push
xchg
je
push
sti
adc
das
adcl
xchg
adc
inc
pop
out
pop
dec
cli
out
and
dec
push
pop
enter
adc
addr16
lret
or
or
sarb
pop
sub
sbb
sbb
or
sub
repnz
dec
or
mov
inc
pop
scas
pop
add
out
add
push
cmpsl
push
xchg
dec
push
ud0
mov
pushl
adc
and
add
sbb
imul
jmp
pop
dec
sbb
gs
outsl
add
jne
and
add
dec
neg
jns
xchg
fs
sbb
sbb
loope
adc
lret
mov
jae
and
dec
sbb
inc
sbb
push
jmp
repz
xorl
pop
adc
fnstsw
dec
pop
or
adcb
fdivr
xor
in
loopne
sbb
jns
es
sbbb
dec
push
sbb
sbb
xchg
mov
incl
cmp
jns,pn
iret
test
jp
add
sbb
outsl
push
mov
subb
add
icebp
push
pop
jb
sbb
lods
xchg
sarl
add
fsubr
adc
fsubs
push
push
outsl
roll
push
pop
inc
sub
push
pop
xor
and
xor
inc
xchg
sub
sti
adc
adc
mov
dec
rorb
jbe
dec
mov
pop
scas
inc
mov
movsl
ja
lcall
pop
jp
cmpsl
repnz
add
inc
jb
stos
push
std
mov
jb
outsl
pop
inc
inc
inc
push
dec
movsb
pop
cmc
mov
xchg
rclb
pop
push
leave
sbb
push
xor
sub
inc
scas
pop
xor
inc
and
dec
xor
sub
push
das
cmp
stc
inc
jns
inc
add
js
xor
movsb
pop
sub
pop
sub
cmp
sbb
aaa
mov
fwait
cmpsb
std
cmp
xchg
gs
pop
call
sbb
push
sub
dec
vcvtps2dq
fdivrs
push
pushf
adc
jmp
loopne
and
push
lea
add
popf
inc
dec
aas
cmp
nop
sbbl
cmp
hlt
xlat
or
adc
xor
pop
dec
jb
shl
lock
subl
and
inc
mov
ret
out
cs
dec
push
push
hlt
imul
in
fwait
mov
dec
mov
ja
pop
cld
sub
ds
jmp
and
mov
dec
mov
dec
dec
andl
inc
push
adc
pop
fwait
leave
scas
movsl
or
push
aaa
dec
cmp
mov
lea
xor
xor
inc
inc
mov
mov
rcll
mov
imul
sub
je
out
insb
sub
cmp
xchg
lret
xor
mov
mov
mov
aas
scas
mov
mov
pop
sbb
jnp
dec
and
inc
push
adc
xchg
xor
cmp
or
or
mov
dec
add
lret
andl
and
cmp
jl
mov
mov
les
mov
jb
sub
lret
sbb
xchg
or
dec
outsb
xor
adc
call
inc
scas
test
xor
rcrl
adc
mov
leave
mov
dec
sbb
sbb
cmp
or
jmp
addr16
clc
test
mov
das
sbb
iret
cmp
ljmp
pop
add
nop
sub
dec
test
or
lds
push
cltd
nop
sub
push
rcll
in
lds
mov
adc
jg
and
popf
push
nop
dec
std
cli
cs
push
pop
lea
jmp
jecxz
loope
sub
jns
jle
or
pop
pop
test
dec
aam
and
pop
mov
and
in
leave
test
adc
push
ret
rol
cs
test
xorl
mov
xorl
pop
rcrl
das
cld
movsb
shlb
dec
outsl
rolb
jae
pop
nop
inc
dec
and
enter
sbb
xor
std
icebp
mov
xchg
push
lea
stc
aaa
sbb
in
in
test
jne
test
data16
push
push
gs
cmp
cmp
lcall
rcrb
dec
shrb
fcoms
leave
sbb
enter
add
adc
mov
dec
lea
mov
aam
bound
fnsave
js
fnstcw
dec
je
jg
fsubrs
jae
sbb
mov
mov
push
call
cmpb
xchg
decl
das
mov
idivb
add
mov
pop
and
pop
add
idivl
dec
jle
cmpsb
dec
push
add
and
adc
outsl
jle
loop
adc
test
dec
inc
mov
jp
cld
pusha
and
jnp
add
dec
rcrb
je
add
adc
xor
and
push
push
ret
lock
je
out
sbb
push
push
jmp
std
adc
push
jmp
adc
push
and
jecxz
jo
out
inc
jl
arpl
pusha
mov
jp
ret
cmp
push
dec
push
aam
add
fcmovu
leave
cmp
inc
mov
dec
and
daa
xor
jp
jle
xchg
icebp
in
orb
xor
add
mov
lds
or
pop
mov
sub
and
mov
and
popf
mov
andb
daa
adc
pusha
mov
dec
jge
mov
mov
add
push
adc
push
xchg
xor
fdivl
inc
add
cs
adc
push
jae
xchg
add
mov
dec
sbb
filds
push
aas
push
sub
lock
sbb
pop
inc
xor
lret
add
inc
call
mov
dec
xor
or
daa
nop
push
or
sarb
lret
ret
inc
dec
fst
das
enter
jge
bound
and
aam
mov
je
orl
dec
scas
xchg
sub
jno
or
mov
add
fdivl
incb
pop
shr
popa
movsb
pop
subl
jno
shll
es
inc
pop
pop
or
lea
mulb
addr16
lea
movl
add
pop
cmp
jae
add
push
rclb
mov
sub
inc
push
cmc
mov
add
jae
sbb
add
pop
push
sbbl
add
jo
pop
xchg
call
push
and
pop
adc
add
sbb
adc
and
xor
fildll
lock
pop
lahf
dec
push
test
add
pop
or
sub
inc
std
xor
jnp
add
lahf
xor
xchg
push
imull
cmovo
insb
inc
enter
cmp
icebp
or
inc
in
pop
mov
imul
inc
xor
cmp
xchg
push
inc
push
loop
sbb
leave
dec
adc
testb
cmpsl
push
xchg
xlat
mov
dec
movsb
jmp
push
sbb
lea
fildl
and
add
fcomps
push
dec
rclb
lea
mov
push
cmp
inc
and
jo
add
mov
pop
andl
lods
jge
push
sbb
xchg
sbb
xchg
mov
and
mov
loope
xor
ljmp
push
inc
test
cmp
aaa
jbe
lret
inc
inc
dec
nop
pop
sbb
cmpsb
bound
daa
jns
xchg
mov
or
dec
cmp
jmp
fwait
pop
sbb
movsb
sbb
lock
mov
add
cmc
mov
subb
push
add
mov
adc
jg
lock
sbb
orl
movsl
ljmp
cmpsb
sbb
jl
sbb
add
or
pop
or
rclb
fadds
lcall
test
fisttps
xor
inc
lods
and
aad
xchg
mov
dec
push
inc
sub
nop
push
dec
out
cli
mov
mov
cmp
push
ds
adc
pop
push
ja
cmp
xchg
clc
jl
cmp
jne
or
pushl
sub
and
or
or
sti
lods
cmp
je
push
inc
cmp
sub
repz
imul
jg
fmull
jne
push
fidivrs
icebp
or
test
gs
xchg
ret
mov
jo
cmp
mov
ret
lock
cmp
sub
cltd
cmp
fdivr
test
or
adc
loope
pop
cmp
add
xchg
test
add
mov
push
int3
adc
add
and
xchg
push
xchg
or
js
mov
sub
movsb
add
push
inc
mov
icebp
daa
add
loopne
rolb
test
imul
outsl
xorl
sbb
int3
sbb
and
pop
inc
inc
push
call
xor
daa
sbb
mov
jecxz
addb
sbb
mov
sbb
adc
mov
mov
ljmp
stos
sbb
cmp
push
jo
add
hlt
sbb
add
push
xchg
out
push
add
dec
cld
rclb
lcall
or
and
mov
xchg
pause
mov
and
sub
js
loopne
and
jns
or
ret
int
pop
mov
mov
add
pop
ds
popa
sbb
bound
add
mull
scas
adc
inc
jg
push
sub
pop
pushl
stos
in
push
ljmp
mov
pusha
cltd
imul
push
xchg
ror
out
aad
dec
test
xchg
dec
enter
sub
adc
sub
sbb
and
decb
xor
xchg
hlt
pop
inc
lret
mov
fisubs
lods
mov
orl
subb
ss
cmp
pop
add
pusha
and
pop
loope
xchg
fnsave
pop
sarb
pop
pop
rclb
std
dec
dec
push
mov
ret
sti
test
test
or
inc
aas
mov
jo
mov
mov
push
pop
negl
orb
orl
outsb
xor
testb
inc
pop
sub
mov
mov
dec
lds
jp
ret
push
lea
xor
decl
cmp
je
movsb
flds
push
and
mov
stc
ljmp
inc
inc
adc
push
mov
add
xorb
rcl
sbb
jo
je
pop
mov
js
jo
test
xor
push
cwtl
fsubs
push
push
jno
lahf
mov
mov
loope
or
adc
sbb
in
sti
iret
xor
and
sbb
push
and
adc
sbb
dec
jne
or
mov
sarb
rcl
cmp
pop
imul
js
loope
xchg
in
sgdtl
pop
stos
inc
rcrb
aad
aaa
repnz
loope
mov
or
cmp
daa
ja
and
inc
or
adc
xchg
ficoml
fisttpl
and
pop
bnd
in
adc
mov
lea
movsl
add
adc
pop
push
repz
push
sub
loop
pusha
inc
inc
pusha
xchg
dec
push
push
mov
movb
pop
cmpl
mov
dec
push
notb
sub
sub
scas
mov
fcmovb
sbb
sar
dec
dec
cmc
lahf
int
push
add
jo
jnp
js
and
jmp
sbb
push
jbe
mov
and
cmc
pop
orb
in
cmpsl
movsl
jg
push
add
cmp
jne
and
add
jp
add
insl
cmp
pop
adc
mov
mov
push
jne
push
ret
inc
inc
call
inc
cmp
lea
popa
stc
xor
or
fs
or
in
sub
push
call
or
pushl
aam
mov
dec
mov
adc
fimuls
sub
cld
mov
push
pop
pushl
mov
cmp
jmp
or
and
fadds
xor
adc
lds
movb
cmp
add
imul
inc
cmp
add
mov
or
add
pushl
and
xchg
adc
je
or
push
mov
mov
pop
jg
jb
cmp
in
mov
adcb
push
inc
jne
pop
and
test
or
pop
fcmovne
aad
push
pushf
jecxz
jge
adc
roll
push
sub
jecxz
loope
sub
andb
or
cmp
pop
aaa
mov
movsl
jne
xor
jle
xchg
mov
ret
sub
sahf
adc
jl
push
pop
xor
mov
push
inc
lret
mov
adc
cmp
mov
xor
in
or
adc
sbb
sub
dec
repz
sub
test
lea
adc
inc
sbb
push
pop
adc
mov
xor
push
add
push
mov
lods
mov
sbb
xor
and
inc
stos
add
dec
fcoms
lahf
xchg
sarb
dec
cli
inc
je
je
mov
mov
and
aam
pop
mov
and
dec
cs
jl
push
mov
and
push
mov
add
xchg
hlt
mov
ljmp
mov
push
jmp
push
add
mov
dec
mov
mov
push
and
sub
sub
popa
mov
sbb
or
test
dec
cmp
mov
pusha
mov
xor
sbb
or
inc
adc
inc
dec
cmpsb
inc
push
dec
mov
dec
dec
fdiv
pop
push
sti
add
rol
dec
mov
cwtl
or
xor
mov
push
imul
and
lea
sbb
or
jo
sub
ret
dec
mov
or
movb
add
test
call
dec
mov
insb
mov
or
jns
cmc
insb
jmp
push
add
fldt
push
and
add
mov
out
jmp
int3
push
insb
stos
cld
push
mov
xchg
pop
mov
lret
sbb
aam
lock
push
imul
xor
dec
dec
xchg
test
cltd
movsb
fldcw
mov
iret
leave
dec
sbb
xchg
push
outsl
test
add
xchg
xor
rorb
inc
adc
push
mov
pop
sub
or
push
mov
addl
sub
xor
or
sbb
adc
pushf
cmpl
test
sbb
sbb
push
xor
mov
mov
pusha
jo
dec
or
sbb
dec
roll
dec
shl
xor
cmp
sub
inc
push
loope
fdivs
push
push
fstl
inc
adc
cmp
out
cmp
int3
xor
dec
icebp
and
lret
jns
and
test
bound
or
jno
push
dec
jno
inc
push
push
pop
mov
stos
jnp
and
lods
mov
stc
fiaddl
loopne
in
adc
les
ret
in
or
int
add
mov
mov
add
or
jmp
cmp
adc
nop
imul
dec
test
mov
aaa
in
imul
sbb
or
cmpl
xchg
xlat
lods
fstl
ss
pop
mov
loopne
or
push
push
and
mov
pop
jo
dec
or
aas
fldenv
add
sbb
pop
adc
dec
push
mov
mov
pop
sbb
scas
cmp
push
add
insl
in
scas
push
mov
dec
inc
xchg
push
iret
cmp
push
adc
into
inc
or
lods
icebp
sbb
or
mov
das
jmp
pop
fisubrl
lock
enter
xor
jo
dec
sub
push
push
enter
push
jbe
xchg
stc
aaa
loope
daa
mov
push
lock
testl
push
push
inc
push
mov
pop
adc
xor
jne
push
subl
push
pop
jmp
pop
pop
cmp
es
loopne
cwtl
adc
dec
pop
je
jle
adc
or
scas
push
sbb
xchg
push
sub
xchg
mov
jo
mov
ror
push
add
ret
and
adc
xor
loope
inc
inc
lea
mov
enter
jmp
push
imul
maxps
dec
rcr
sbb
fwait
sub
je
shlb
push
test
sbb
mov
and
sbb
imul
jns
in
dec
hlt
mov
test
in
pop
adc
cwtl
dec
add
push
mov
inc
pop
sub
pusha
pop
ror
sbb
xchg
sub
aad
push
ficoml
lcall
jb
add
push
adc
adc
sbb
xchg
call
jb
aas
clc
inc
mov
pop
imul
adc
call
sbb
ret
cld
dec
dec
fs
divl
or
and
push
add
stos
idiv
cld
or
in
xor
es
adc
decl
fwait
dec
sbb
inc
sbb
sbb
add
xor
fisttpll
dec
pusha
mov
mov
loope
sbb
adcb
inc
mov
push
mov
xchg
and
xchg
push
insl
sbb
add
arpl
test
push
xor
push
add
rolb
aas
adc
mov
cmp
adc
xor
sbb
pop
test
pop
scas
xor
jns
gs
xor
xlat
push
loopne
inc
addr16
lea
sbb
dec
inc
mov
fwait
xchg
push
ror
arpl
sub
push
dec
xor
and
pop
repz
lcall
rcrl
add
pop
into
cmpb
xor
sub
add
test
inc
icebp
cltd
ss
inc
out
or
push
fs
pop
popa
pop
fs
pop
lea
jle
inc
dec
stos
dec
pop
adc
fisttps
ret
add
and
movsl
por
cmp
dec
nopl
or
adc
insb
or
and
mov
lds
push
ret
ficompl
loopne
aam
mov
xchg
jne
xor
loopne
xor
push
movb
icebp
push
sahf
es
dec
pop
mov
scas
fmull
mov
jnp
sbb
leave
std
push
andl
jge
push
xchg
xchg
in
xor
mov
push
xchg
mov
fnstcw
mov
xchg
inc
fsubr
cmp
cmp
movsb
xchg
insb
jo
mov
add
mov
mov
pop
cmp
mov
xlat
adcb
jg
je
jne
adc
sub
dec
and
jo
cltd
sbb
fimuls
xchg
and
loope
push
and
push
ljmp
outsl
mov
xchg
cli
inc
fistps
popa
cli
jg
jle
lea
cmpb
inc
jecxz
mov
test
push
add
jg
add
lock
movb
push
sub
sub
cmp
pop
jl
pop
je
mov
test
add
push
dec
push
cmpl
adc
xor
dec
mov
pop
lahf
pop
in
add
aam
cmp
sub
mov
ret
mov
add
inc
test
pop
imul
movsb
jae
sub
add
int3
adc
or
stos
push
sti
or
cmpl
daa
pop
mov
test
test
sub
hlt
sbb
mov
mov
dec
or
adc
cmp
movb
and
jmp
dec
adc
movsl
aad
push
loop
popa
jb
jg
je
or
mov
jge
dec
js
cli
mov
cmp
sbb
and
lret
mov
mov
call
loop
sbb
dec
inc
cmp
jb
pop
pop
mov
adc
push
jno
and
push
add
and
stc
pop
ret
mov
push
push
divl
insl
sar
cmp
nop
xor
and
jmp
cmp
mov
xor
inc
lret
out
stos
outsb
pop
gs
push
mov
jg
ss
push
or
push
les
add
arpl
mov
test
push
mov
shl
lea
jmp
mov
mov
mov
sbb
icebp
mov
into
testb
dec
mov
and
leave
dec
inc
mov
or
into
rorb
daa
test
push
mov
cli
inc
add
xchg
cmovle
fistl
or
xor
sub
inc
sbb
sub
add
test
push
push
test
mov
gs
pop
mov
sbb
lods
sbb
dec
adc
pop
fadds
xchg
and
adc
cmp
data16
fimull
sbb
fs
call
orb
icebp
adc
lea
xchg
cli
or
mov
adc
adc
sbbb
fsts
ret
or
or
dec
xchg
push
loope
rorl
inc
mov
jl
cmp
shlb
push
cmpsb
incb
daa
adc
mov
das
insb
dec
mov
jecxz
paddusb
or
test
dec
pop
sub
cli
paddsb
sub
cmp
gs
leave
push
mov
cwtl
arpl
ss
push
lea
into
imul
lret
mov
lock
and
loop
push
xchg
scas
push
and
and
outsb
popa
lods
push
sub
mov
into
mov
inc
dec
mov
mov
test
mov
add
push
sub
dec
daa
or
jecxz
jmp
or
cmp
mov
arpl
dec
cmp
shrb
in
mov
xchg
mull
scas
into
test
push
dec
cmp
and
nop
pop
int3
push
cmp
hlt
loop
aaa
xchg
mov
inc
push
sbb
pop
je
xlat
jne
or
stos
push
sub
popf
mov
mov
and
adc
add
mov
insl
adc
ljmp
js
arpl
and
pop
addw
aaa
pop
in
adc
test
je
test
ljmp
or
enter
jo
cmpsb
out
pop
push
mov
test
and
add
cmpsb
sbb
jne
cmpl
adc
or
out
jno
sub
cmp
sbbb
cwtl
jmp
mov
nop
mov
push
addb
xchg
in
mov
in
sub
pop
lods
mov
test
test
jb
andl
push
add
adcb
jl
clc
or
mov
pusha
jl
call
sub
push
adc
add
fdivrs
pop
and
stc
push
mov
sbb
lret
push
or
push
lock
mov
or
push
xlat
jb
lret
rcr
lcall
pop
xchg
xor
push
mov
sub
mov
iret
in
pusha
pop
push
outsl
pop
cmp
je
jmp
fs
sub
negb
test
popa
outsb
out
pop
je
std
test
mov
in
lret
imul
fcompl
imul
xchg
inc
cmpb
insb
sbb
mov
mov
or
cmp
mov
adc
movhps
or
call
or
adc
pop
and
adc
call
nop
xchg
add
jno
enter
mov
sbb
xor
shr
mov
or
nop
data16
das
add
pop
aas
addl
in
rolb
jbe
add
sbb
aas
xchg
xor
jle
mov
pop
out
push
pop
int
lret
sub
int3
add
mov
lret
or
sub
pushf
mov
add
push
push
icebp
jge
addr16
stos
cmp
cmp
mov
mov
add
int3
data16
sbb
adc
jbe
inc
mov
ljmp
insl
lock
es
lock
loopne
or
sub
lcall
dec
push
cwtl
inc
add
jne
xor
pusha
and
add
sbb
adc
sub
mov
xor
hlt
arpl
adc
in
or
iret
mov
nop
loop
inc
popa
push
push
roll
or
cmp
lret
or
incl
rorl
lock
sub
push
mov
in
call
or
add
inc
or
mov
cwtl
xchg
cmpsb
stos
push
push
into
pushf
in
cwtl
daa
ret
out
cwtl
add
mov
repnz
push
aam
mov
fs
pop
ss
pop
mov
out
test
adc
add
mov
jl
stos
sbb
pop
clc
sub
inc
rcll
ja
push
adc
ss
inc
pop
pop
ret
shll
sub
jecxz
sub
mov
mov
or
push
shl
jo
loop
roll
inc
dec
or
rol
lods
dec
sti
mov
cmp
push
push
fsubrs
add
das
push
aam
fs
add
divb
adc
std
push
xor
testl
pop
mov
out
dec
add
test
and
or
add
jae
insb
add
cmp
xchg
xor
out
push
idivb
mov
add
rcll
adcb
imul
inc
push
jmp
pop
mov
in
dec
daa
xor
push
jo
mov
fadds
mov
enter
popa
shl
mov
shr
push
cmp
fcompl
loop
cld
mov
mov
sub
roll
mov
pop
shrd
sub
int3
test
sbb
popa
jecxz
cmp
dec
jbe
inc
mov
pop
or
je
pop
inc
push
mov
outsb
and
jmp
adc
xor
loopne
enter
adc
cli
adc
stos
fsubrl
push
push
cmp
or
mov
xchg
mov
jbe
scas
fadd
and
pop
test
cmpsl
mov
adc
jl
sub
adc
sub
xor
adc
inc
push
xor
push
ret
adcb
xchg
cmp
mov
out
or
lahf
ret
inc
enter
stos
mov
dec
rorb
pushw
sbb
push
mov
lods
push
jnp
adc
je
outsb
mov
add
iret
add
aaa
adc
inc
out
shr
adc
inc
sti
loope
je
push
lea
aaa
dec
insl
mov
push
adc
sbb
push
cmp
lods
pushf
pop
jg
cmp
fidivl
push
push
sub
repnz
inc
popf
xchg
out
mov
mov
pop
cmp
xchg
data16
nop
loopne
lock
or
test
xor
sbb
pop
in
mov
jbe
pushf
mov
mov
push
cli
cmp
jb
push
adc
jae
mov
push
loope
push
in
addr16
imul
ret
jecxz
rclb
dec
les
sub
inc
push
mov
jnp
clc
or
add
xchg
std
mov
adc
mov
lock
xchg
repnz
mov
nop
or
ret
mov
push
push
cmp
xchg
movsl
cmp
mov
outsl
jbe
push
mov
push
shr
sbbl
jmp
add
and
push
mov
lea
push
mov
sbb
push
icebp
aad
popa
mov
js
bound
inc
push
daa
call
stos
push
in
or
push
push
add
cmpsl
cmp
sub
popf
xor
xchg
adc
mov
pop
add
insb
lock
push
ljmp
inc
xor
pop
fcmovu
lcall
aam
push
fwait
aam
and
aam
es
adc
mov
mov
lret
push
mov
mov
lock
xor
leave
movsb
pushl
and
and
repnz
xor
jmp
mov
lock
movsl
inc
mov
jbe
icebp
in
add
ffree
pusha
sub
xchg
xor
stos
add
push
add
fidivrl
mov
shrb
or
cmpsb
lods
adc
pop
data16
cmp
movb
negl
adc
push
mov
je
pop
xor
adc
insl
jne
add
push
stc
repnz
jae
arpl
push
xchg
out
push
je
inc
or
sti
repnz
insb
jne
or
cmp
push
push
hlt
sub
xor
inc
adc
cmp
push
and
push
in
and
adc
xor
pop
pop
sub
add
or
mov
outsl
mov
cmp
je
adc
push
or
pop
and
nop
cwtl
push
popa
mov
xchg
mov
pop
cmpb
sub
pop
sbb
orl
add
popf
xchg
jmp
push
cmovae
and
call
aaa
fidivs
sub
jmp
inc
iret
pop
inc
xor
xchg
inc
adc
rclb
lahf
movsl
adc
into
xchg
inc
ficoml
cmp
pop
and
sbb
sbbl
lock
sub
mov
xor
ja
xor
xor
and
push
test
xor
push
jae
jne
enter
clc
sbb
sbb
jb
cmc
xor
push
pop
stc
pop
and
jne
shr
imull
or
lea
mov
add
sbb
mov
outsb
or
jl
or
jmp
sub
insl
sub
sbb
push
xchg
sub
xor
rolb
rorl
add
add
mov
push
jnp
ljmp
push
add
push
push
gs
shlb
pop
orb
mov
cmpsb
imul
cmpsb
imul
adc
mov
out
out
mov
addr16
lock
enter
mov
jmp
inc
mov
xor
addr16
scas
sub
cltd
testb
and
pop
push
xor
andb
int
adc
and
add
sbb
data16
mov
loope
daa
movsb
movsl
shrl
push
fadds
inc
push
fs
sbb
fs
push
fs
push
fs
push
imul
loopne
push
pop
ret
inc
and
pop
inc
cli
and
xchg
fildl
add
sbb
adc
loop
add
push
clc
adc
and
cmp
jne
mov
xor
cmpb
dec
pcmpeqw
xor
push
add
inc
adc
push
xchg
es
sbb
lcall
inc
popa
dec
mov
mov
fists
divb
jmp
cmp
sbb
or
outsl
inc
jne
sbb
xchg
lret
or
mov
add
mov
xchg
xchg
js
add
and
clc
jne
mov
jb
mov
and
mov
push
mov
mov
rclb
sbb
lea
or
or
rcl
dec
or
jne
sahf
pop
imul
in
push
fimull
sbb
insb
sbb
popa
das
or
inc
cmp
aaa
push
ljmp
and
dec
mov
add
fwait
movd
imul
orl
testb
dec
mov
jne
adc
adc
notb
mov
out
test
addl
fdivrs
push
fnstcw
adc
add
in
sti
je
pop
mov
and
or
mov
iret
and
fucom
das
add
iret
sub
or
push
ljmp
stc
mov
out
sbb
out
inc
xchg
out
fnop
movsl
sti
dec
sub
mov
stc
push
adc
xchg
pop
mov
stc
or
inc
shl
clc
push
stc
push
push
push
je
icebp
jne
leave
cmpsl
jge
xor
ja
mulb
sub
mov
int3
cmpsb
mov
lods
push
mov
and
dec
jge
mov
cmp
xchg
lods
outsb
aaa
or
ret
adc
shrb
mov
inc
ret
mov
jne
lret
clc
imul
cmp
mov
or
jmp
cmp
pushf
scas
or
jmp
xor
loopne
jmp
aam
jnp
popf
outsb
pop
cmpsl
inc
pusha
sbb
fwait
xor
jbe
or
jno
xchg
clc
xor
add
and
shlb
add
adc
add
dec
cmp
adc
iret
cmpsb
pop
mov
jmp
test
test
incb
push
mov
inc
imul
cmpsl
or
or
mov
add
popa
sub
dec
push
push
mov
mov
add
ds
push
and
mov
pop
loop
lock
pop
cmp
cmp
inc
cwtl
add
out
notl
xchg
and
adc
rcrl
lods
or
push
pushf
outsl
mov
je
sbb
fs
pop
fs
pusha
xchg
inc
inc
push
insb
insb
push
push
les
inc
sub
sbb
icebp
lahf
ja
pop
testl
je
and
movzwl
divb
mov
jno
shlb
cmp
loope
cmp
je
xor
dec
ret
das
inc
outsb
push
push
lock
push
lock
mov
inc
pop
xchg
jmp
lea
pop
fcompl
sbb
int
or
add
lock
add
lock
cld
lock
aaa
icebp
cmp
dec
jmp
xor
into
push
push
adc
mov
ret
loope
pushf
sub
dec
ss
fcompl
int
mov
scas
movsb
push
jg
add
add
push
mov
mov
lea
lods
cmpps
pop
cs
mov
fiadds
cltd
movsb
pop
add
dec
cmpsl
into
shll
and
mov
add
sbbl
inc
jne
sahf
mov
fidivs
xchg
adc
xor
filds
dec
xlat
test
je
test
ljmp
sbb
test
adc
jbe
into
das
inc
pop
adc
ret
xchg
addr16
push
sbb
nop
push
mov
adc
or
pop
push
jge
jne
mov
outsb
xchg
or
int3
cmpl
mov
shr
or
addr16
push
aas
cmpsl
std
mov
jne
mov
pop
mov
cltd
jb
xchg
jbe
jbe
stos
or
xchg
mov
cwtl
cmc
addb
lods
sub
jnp
ja
push
test
sub
pop
loopne
je
sbb
sbb
pop
or
jle
or
cwtl
dec
push
lea
jbe
xchg
cwtl
push
adc
add
aam
movsl
test
dec
push
or
cmpb
sbb
lods
imul
jl
rcr
xchg
or
and
int
cmp
jo
push
pop
adc
in
insb
daa
mov
adc
fs
nop
cs
in
inc
push
pop
addb
and
pop
rorl
sub
inc
cmp
pop
sub
jmp
push
push
and
mov
pop
ss
inc
std
mov
mov
push
push
pop
cmp
fisubrs
je
push
mov
or
inc
orl
mov
cmp
pop
loopne
enter
add
in
dec
je
and
leave
sbb
clc
fidivrs
sbb
jg
adc
test
push
cmpb
adc
cs
sahf
jo
or
pusha
pop
inc
or
pusha
pop
arpl
subl
or
push
mov
adc
and
push
and
pop
sbb
or
or
adc
xchg
into
jecxz
popl
cs
sbb
xchg
sbb
loopne
cmp
cmp
fnsave
push
lds
sbb
xchg
lret
jl
ret
verr
dec
xor
mov
aam
inc
adc
fildl
sbb
test
or
push
sbb
pop
cmp
or
jp
cmp
sub
jmp
ds
add
xchg
clc
lret
push
pop
or
pop
aam
push
add
sbb
sbbl
rolb
jo
outsb
sub
mov
jo
lret
fs
xchg
test
push
test
jne
pop
into
fisttpl
mov
adc
dec
insb
inc
xchg
xlat
sbb
cli
add
jge
mov
push
sbb
es
out
jo
push
cli
lcall
push
xchg
sahf
mov
insl
cmp
push
xchg
popa
cwtl
bound
jbe
lock
ljmp
mov
jmp
inc
cmp
test
mov
into
sub
adc
rolb
and
mov
xchg
mov
adc
int
popf
daa
jae
lret
xor
imul
push
dec
jae
inc
push
push
je
pop
adc
das
mov
cmp
adc
xchg
incb
je
repnz
push
mov
into
xchg
sbb
loop
lcall
push
add
push
jmp
mov
shl
xchg
jno
leave
movsl
mov
push
pop
add
inc
dec
or
inc
adc
sahf
adc
inc
sub
stos
sbb
stos
add
and
daa
xlat
cmp
js
push
xchg
imul
std
and
and
aad
cmp
orb
nop
adc
xchg
les
pop
imul
adcl
cwtl
add
cli
add
jecxz
sbb
xor
rcrb
xlat
mov
call
cmp
data16
in
push
and
dec
call
sbb
cmovns
int
jg
ret
adc
mov
decl
jo
sub
xor
mov
cmp
rdmsr
shrb
fwait
insl
mov
ffree
stos
push
xchg
jne
jg
jmp
lods
subl
mov
dec
cs
imul
mov
daa
pop
or
pop
scas
pop
mov
mov
mov
icebp
xor
mov
mov
jo
in
rol
or
push
and
dec
mov
fimuls
pop
sbb
add
push
lret
mov
std
push
and
popa
not
cwtl
fbld
out
and
bound
ret
std
cmpsb
mov
divps
add
ficompl
rclb
fs
cmp
ret
fs
je
out
lods
jb
sbb
lret
cmpl
outsl
inc
xchg
mov
xor
das
rcrb
test
add
addps
fsubs
push
adcl
lcall
insb
xor
sahf
pop
inc
xchg
dec
lcall
daa
inc
jne
xor
xlat
mov
inc
shlb
jno
jl
inc
push
pop
xchg
adc
addl
out
mov
aad
addr16
loop
lea
and
out
ss
push
inc
inc
in
add
rcr
test
mov
scas
xorb
pop
pop
pop
sbb
mov
inc
idivb
mov
and
jge
add
add
mov
jl
andl
mov
insl
cmp
enter
pop
and
or
cltd
add
lock
bound
inc
lret
mov
cmp
lds
dec
xor
pop
sahf
push
xchg
icebp
dec
cwtl
sbb
adc
sub
xor
es
es
dec
and
enter
xchg
ret
inc
mov
push
or
cwtl
fdivrl
push
ds
pushf
push
mov
ja
jl
dec
cmp
sbb
mov
jl
or
mov
push
je
adc
push
in
mov
xor
jmp
add
movl
fdiv
jno
inc
adc
push
inc
push
inc
repnz
inc
push
add
xchg
jp
fdivs
inc
pop
pusha
jle
test
sahf
and
addl
pop
pop
xchg
pop
dec
push
fbstp
mul
or
pop
xchg
push
or
pop
rcrl
js
fmuls
or
lea
xor
jp
stc
pop
or
mov
cmp
cmp
cmp
cmc
mov
imul
ret
fcmovb
pop
testb
or
mov
dec
jl
xchg
jl
mov
mov
dec
add
or
cmp
jo
or
mov
xor
dec
cmpl
and
std
sbbl
push
mov
ja
fisubl
scas
push
mov
jl
xor
sbb
pusha
repnz
addl
xor
add
and
jbe
out
push
push
xor
and
aaa
add
add
nop
add
pop
pop
outsl
sbb
aas
insb
jmp
sbb
mov
test
add
fldl
mov
rcr
jbe
stos
ret
filds
mov
lods
cmp
jne
cli
cmp
pop
test
dec
stos
mov
or
and
pushf
pop
imul
cmp
loop
xor
pushf
push
push
mov
subl
cmpl
and
or
add
inc
lea
fmul
lods
fdivs
sub
nop
mov
data16
out
insl
xchg
inc
xlat
adc
aad
add
sahf
movsb
test
cmpb
fcoms
adc
mov
mov
aad
jb
pop
sbb
testl
adc
loopne
andb
pushl
insl
dec
add
int3
popf
in
adc
popa
sbb
sbb
lea
dec
mov
cltd
negl
jmp
inc
push
cmp
mov
test
pop
push
mov
cmpb
dec
addb
lock
jb
sbb
or
aas
pushf
xor
or
push
addr16
add
xchg
mov
cmp
add
push
or
inc
push
pop
enter
add
inc
movb
je
push
std
gs
push
push
psrad
xor
outsb
orl
mov
inc
xchg
push
adc
or
mov
ss
xchg
scas
xor
xchg
xor
and
dec
lods
add
clc
sti
adc
add
lea
or
sahf
mov
scas
sub
sti
cmpxchg
jbe
mov
push
mov
mov
push
pushf
ljmp
or
pop
and
or
jbe
pop
clc
xor
cmp
adc
cwtl
cmp
je
mov
mov
mov
cltd
std
mov
or
jae
push
lds
push
aas
lods
sbb
sub
cli
xchg
dec
stc
orl
jbe
sub
lahf
ljmp
insb
mull
or
mov
outsb
mov
add
add
sbb
mov
aam
adc
loope
mov
xchg
sbb
cmp
lods
dec
pop
xor
imul
add
cmp
cmp
sub
stos
pop
mov
lcall
aam
popa
inc
pop
lea
pop
push
mov
pop
xorb
mov
rcrl
add
and
rcll
mov
lods
imul
call
ficoms
ja
and
sar
xchg
adc
in
cmpl
pop
adc
inc
insb
shr
enter
inc
add
adc
fstp
dec
adc
cmp
mov
lock
out
mov
sahf
loope
stos
pusha
insb
std
mov
decb
adc
fucom
dec
push
inc
sbb
js
imul
jb
jge
dec
push
dec
pop
movsl
scas
push
outsb
cmpsl
ficompl
clc
notb
and
push
aam
lock
push
pop
adc
adc
rclb
xchg
jne
mov
mov
jo
cmpsb
inc
leave
jnp
jnp
sarl
je
mov
push
mov
lods
cmpb
cmp
enter
add
push
mov
inc
xchg
lock
add
inc
ret
and
jnp
not
adc
xor
mov
xor
xlat
or
pop
cld
jecxz
adc
push
fnsave
out
movsl
addl
loope
test
sbb
jo
mov
loopne
jg
daa
inc
es
fdivs
xchg
add
add
inc
jne
pop
popa
push
sub
je
pop
shlb
xor
inc
xchg
loop
dec
sub
add
test
adc
dec
lea
mov
cmpsl
push
out
dec
arpl
inc
push
xchg
mov
pop
mov
or
clc
and
push
jl
leave
mov
push
je
cld
xor
add
dec
or
ficomps
dec
sub
enter
or
push
loopne
mov
jmp
push
xchg
addl
push
jo
dec
in
cmp
outsb
jb
or
pop
or
inc
jo
add
lods
add
mov
jmp
adc
sbb
dec
pop
movsb
pop
cs
jno
mov
push
adcb
mov
add
sbbl
repnz
out
sbb
mov
les
gs
cmp
or
push
lcall
inc
out
and
imul
int3
cmp
aam
jns
xchg
push
pop
inc
rcr
jmp
push
push
adc
jge
push
mov
out
xchg
or
pop
dec
shll
inc
sub
pop
fldcw
sub
mov
inc
mov
dec
cmp
push
cli
sbb
idivl
sbb
lcall
adc
push
xchg
cmp
or
in
loopne
pop
testl
mov
push
dec
mov
cmp
jo
inc
mov
inc
dec
cmp
mov
jne
or
jle
jge
sbb
or
test
imul
aaa
sbb
fisubrs
or
or
jno
push
dec
sub
movsb
ss
lret
cmp
jo
sbb
push
cmp
push
sbb
mov
mov
fnstenv
mov
lock
mov
sbb
testl
adc
test
xor
mov
push
inc
inc
call
xor
dec
lret
stos
adc
mov
movsb
inc
mov
cmpsb
add
int
xchg
fnstenv
or
or
stc
xchg
push
jae
push
push
adc
int
es
jl
movl
pop
pop
push
push
add
dec
sub
mov
aas
add
fwait
or
dec
in
les
mov
sub
in
xchg
push
in
dec
ljmp
bound
test
sahf
dec
es
cmp
mov
out
out
push
jae
adc
or
cmpl
mov
push
rorb
or
or
adc
shll
sub
in
and
dec
pop
lods
push
pop
mov
dec
popa
cmp
mov
divb
pop
or
or
test
mov
imul
push
sub
inc
mull
push
cmp
rcrb
sub
es
jo
adc
sub
das
aam
cmp
or
push
xor
xchg
in
or
inc
push
push
mov
lcall
dec
jo
aad
std
sbb
cld
push
fs
and
in
sub
mov
add
sub
loopne
add
clc
adc
add
mulb
cmp
pop
xor
lahf
test
pop
jno
imul
push
adcb
pushfw
adc
mov
push
dec
andl
or
enter
mov
sti
dec
ja
je
or
je
or
sub
xchg
pop
adc
adc
cwtl
push
inc
in
sub
or
jnp
dec
aad
add
xor
shl
or
mov
push
jmp
cmp
push
je
push
adc
adc
xor
push
cmp
sahf
ss
stos
inc
sbb
inc
add
lds
dec
dec
imul
add
shr
cmp
inc
call
sahf
add
ljmp
cli
mov
inc
or
rorl
sub
mov
gs
add
je
mov
ret
pop
push
aam
aas
adc
or
adc
add
mov
mov
test
cltd
and
push
shl
loope
test
add
xchg
aad
cmp
jb
mov
mov
mov
adc
sub
ljmp
add
add
nop
adc
add
add
in
add
repz
icebp
daa
or
fs
or
push
adc
sub
add
push
icebp
sahf
test
aaa
shlb
pop
nop
pop
or
cmpb
xor
movl
push
inc
out
fadds
and
jo
lods
jp
adc
mov
mov
or
push
jno
mov
push
pop
and
xchg
inc
push
and
mov
cmc
shlb
sbb
notl
cmp
xchg
cmp
jp
mov
jne
faddl
mov
mov
das
or
push
sbb
mov
inc
push
inc
push
sub
dec
jmp
ret
scas
in
and
nop
add
cmp
aam
push
dec
sub
xor
fcomp
repnz
notb
cmp
test
fs
test
cmp
test
jge
int3
sete
rcll
pop
cmp
jne
add
mov
loope
mov
mov
xchg
lcall
xchg
xchg
sahf
and
scas
test
jg
mov
das
adc
fwait
int
les
and
xchg
leave
and
push
test
leave
jecxz
iret
mov
adc
test
jp
out
cltd
xchg
ret
ret
rorb
lcall
jb
pop
fdivrs
repz
sbb
inc
lcall
inc
test
lcall
sub
jns
and
aam
mov
mov
pop
jne
pop
cmc
adc
pop
jge
loopne
xchg
shlb
cmp
in
push
cmpsl
xor
aam
xchg
mov
aam
mov
xchg
or
fmull
push
fdivrs
push
jg
inc
in
popf
xchg
clc
pusha
adc
aas
imul
xlat
cmp
add
push
ret
fs
lea
and
pop
shlb
mov
sti
add
inc
test
sbb
push
popa
pop
jno
movsl
mov
mov
push
adc
mov
jl
aad
dec
in
fcmovu
cmp
sarl
dec
pop
shrl
fsts
lods
pop
cwtl
dec
dec
fisubl
mov
sbbl
sbb
sbb
add
or
outsb
pushf
and
jecxz
mov
adc
iret
mov
pusha
xor
and
or
adc
dec
nop
xchg
mov
or
xor
movsb
push
rcl
sbb
icebp
test
push
int3
fiadds
adc
jle
fs
jno
xor
ss
pop
mov
push
mov
cs
pop
mov
les
sbb
int
mov
pop
test
enter
mov
push
mov
jne
add
or
cmp
or
push
lahf
dec
in
sub
dec
sub
inc
xor
sub
sbb
mov
mov
fcoms
push
sub
jo
sub
and
xchg
xchg
sub
dec
push
movsb
mov
test
mov
add
cmc
inc
and
imul
pop
and
push
inc
add
or
aad
imul
adc
mov
sbb
adc
xor
dec
and
and
inc
outsl
and
cmp
or
pop
xchg
xor
imul
add
mov
mov
or
push
cmp
lods
xchg
cmp
sbbb
add
push
add
dec
jae
mov
xor
xor
or
mov
xor
cld
dec
cmpl
ljmp
incl
push
addl
leave
xlat
mov
dec
fs
mov
xor
cmp
push
insb
pushf
adc
ret
scas
push
mov
dec
and
sbb
into
pop
mov
or
add
dec
mov
clc
testl
ficomps
testb
inc
push
and
nop
push
add
dec
xor
sbb
cmp
add
pop
or
in
rcl
push
jmp
inc
cmp
add
push
xor
mov
int
push
jns
inc
jb
in
push
dec
push
cmp
cmp
pop
test
or
or
mov
hlt
ret
jae
in
mov
mov
rolb
das
bound
std
and
cmp
add
aas
inc
dec
popf
or
mov
cmp
and
inc
imul
and
call
daa
les
mov
cmpb
je
inc
or
popf
push
sub
or
xchg
or
addr16
subl
je
push
sbb
mov
cmpsl
lock
xor
push
scas
mov
pop
adc
movsb
dec
sbb
inc
lds
les
adc
in
jp
shrl
adc
fs
push
shlb
or
sub
adc
rorb
out
les
mov
test
xor
xor
pop
sbb
cltd
lock
addl
enter
lret
sarb
sbb
lods
inc
hlt
loope
jle
sbb
inc
ret
jns
mov
nop
add
mov
sub
inc
push
lock
mov
and
mov
addb
sti
adc
pop
mov
notl
cmpsl
mov
lea
jnp
lcall
mov
andb
adc
subb
lock
sub
mov
sub
xor
hlt
jle
push
aam
sub
pop
xor
mov
bound
ror
pop
push
fiaddl
xchg
gs
ss
and
sbb
dec
adc
jno
movsb
mov
das
jae
jo
add
xchg
jge
xor
mov
adc
push
pusha
movsb
and
cli
adc
mov
sbb
inc
loopne
add
lahf
sbb
and
in
imul
jns
xor
shll
in
aaa
stos
sbb
fadds
jge
stos
jns
mov
je
shr
sub
dec
dec
push
xchg
js
adc
setns
call
cmp
push
jmp
xlat
jnp
pop
shll
add
lret
pushaw
rcll
cmp
push
and
push
mov
mov
movsl
push
fildll
dec
mov
mov
jnp
out
adc
sar
and
add
jmp
lahf
inc
dec
dec
dec
hlt
add
pop
je
or
push
outsb
inc
xchg
sarb
mov
adc
mov
push
or
popa
or
mov
and
cld
push
xor
cmp
cmc
inc
insb
lcall
or
leave
lcall
loopne
push
rorl
nop
adc
cmp
rolb
sub
cmp
mov
add
ret
pop
cmp
and
pop
lret
lret
push
add
dec
push
add
fidivl
jl
jmp
push
mov
clc
popf
adc
lea
push
add
or
ja
or
in
out
popa
rolb
xor
in
or
mov
push
and
mov
cmp
xor
into
addr16
dec
jg
add
lahf
movsbl
mov
inc
or
adcb
push
fsubr
dec
or
je
adc
adc
int
das
adc
xor
sbb
dec
popa
mulb
inc
cmpsb
nop
and
sbb
xchg
lahf
xchg
cmp
or
mov
push
and
and
enter
mov
lret
insb
add
pop
mov
inc
xchg
lea
mov
xchg
or
xchg
add
test
addr16
ljmp
mov
mov
push
push
xchg
push
mov
mov
mov
sub
xor
movsb
dec
mov
and
stc
pop
sbb
adc
and
shl
dec
jle
iret
cs
cmpsb
sbb
les
add
and
or
addr16
xchg
in
leave
ss
jg
cwtl
inc
mov
sub
push
inc
push
mov
jl
insb
add
dec
xchg
sbb
iret
out
sub
or
mov
pop
xor
fisubrl
sbb
inc
mov
pop
pusha
dec
push
mov
mov
cmp
nop
xchg
dec
repz
sbb
out
jns
dec
cmc
aas
mov
aad
cs
pop
ret
add
pop
or
jne
push
cltd
add
mov
dec
outsb
je
scas
add
add
sahf
mov
aam
add
add
push
push
xor
call
pop
add
pop
or
fwait
or
aaa
and
arpl
push
adc
or
dec
pop
xchg
or
std
jbe
inc
mov
dec
jl
pop
rclb
mov
inc
dec
sarl
nop
rorb
add
sub
mov
in
add
add
push
sub
inc
add
jmp
dec
mov
icebp
xchg
or
sarb
jge
jl
scas
adc
add
sbbb
add
push
inc
or
inc
or
add
stos
jbe
push
and
add
sub
mov
les
jl
cmp
jae
mov
lcall
add
dec
mov
push
shl
pop
cmp
jne
jg
out
add
popf
pop
dec
movsl
inc
dec
data16
adc
add
outsb
mov
xor
rol
fcoms
add
inc
jmp
push
push
xor
xchg
push
cli
pop
push
push
jo
mov
sbb
andl
nop/reserved
mov
movsb
or
jle
xchg
sub
enter
sahf
or
pop
rcll
jecxz
lret
jge
je
sahf
adc
outsl
add
push
xchg
bt
insl
sbb
aam
adc
hlt
jne
das
pop
push
test
xor
fchs
mov
jle
insl
insb
xchg
jecxz,pt
mov
add
inc
pop
mov
push
cwtl
shll
xchg
clc
add
inc
ss
sub
and
xchg
sbb
sbb
icebp
add
ret
xor
xor
push
inc
xchg
fcmovu
fcompl
jnp
fmull
xor
adc
jmp
add
test
jg
lods
dec
pop
push
popf
lahf
jmp
xchg
and
dec
repnz
mov
dec
dec
or
xor
gs
mov
mov
call
in
es
imul
or
or
lock
jns
rorb
stos
add
test
test
pop
adc
rclb
add
and
lret
cld
test
mov
push
cmp
jbe
roll
push
leave
push
xor
mov
xchg
mov
inc
pop
xchg
push
xor
mov
pop
imul
subb
and
jecxz
push
lock
xchg
mov
inc
add
inc
or
dec
mov
dec
pop
repnz
add
test
dec
or
mov
add
clc
mov
pusha
or
stc
add
test
pop
gs
push
sub
jo
add
mov
mov
inc
inc
cmp
push
inc
lock
push
lret
xor
jmp
jg
pop
filds
testb
test
mov
or
xchg
push
push
push
lea
and
push
subb
shrb
adc
pop
scas
jb
cmp
sbb
mov
add
rorb
ljmp
jge
dec
dec
xor
xchg
loope
lds
add
adc
add
stc
or
insl
fdivrl
pop
jle
incb
hlt
out
or
cmp
push
and
pop
mov
addb
mov
pop
cmc
and
insl
out
cwtl
or
loopne
mov
push
cmp
dec
add
lret
jle
repnz
out
iret
inc
adc
adc
lret
and
add
mov
xlat
mov
jecxz
or
or
dec
mov
push
add
fsubrs
inc
mov
jne
andl
sti
mov
jnp
mov
jo,pn
iret
filds
movsl
sbb
leave
fistpl
or
mov
or
or
add
repz
insb
enter
lea
pop
enter
lea
mov
push
sbb
shr
inc
test
jl
out
push
adc
push
or
js
xor
pusha
pop
xor
arpl
xor
add
ds
jno
sbb
mov
push
add
addr16
in
mov
or
adc
test
adc
add
adc
add
mov
pop
clc
lcall
sbb
push
inc
imul
add
pushf
sbb
rolb
adc
aam
in
test
dec
lcall
dec
add
lret
scas
test
mov
ds
cli
fisubs
mov
jp
mov
mov
add
push
add
lea
mov
push
imul
aad
pop
loopne,pn
mov
push
mov
and
inc
sub
daa
mov
jns
sub
cmp
shrb
sbb
adc
push
int
adc
or
push
push
mov
mov
xor
pop
pop
dec
nop
jbe
sti
enter
xchg
inc
pop
mov
xor
push
sbb
or
push
jns
sub
sub
sbb
jp
dec
pusha
dec
adc
jns
addr16
aas
add
inc
loopne
lret
push
adc
sbb
test
sbb
shll
xor
fs
mov
xchg
hlt
push
adc
add
cmp
push
dec
jg
addl
inc
mov
rolb
xor
push
push
sbb
add
add
loope
xor
or
lock
inc
fs
jbe
stos
mov
add
xor
and
cli
push
shrb
add
imul
daa
in
pop
pop
or
ljmp
cld
lock
sbb
cld
sub
mov
cs
fcompl
insb
js
xchg
outsb
fwait
adc
loopne
and
sbb
mov
add
push
xor
inc
push
fildl
cmp
int
pop
leave
fbstp
sti
aaa
mov
xor
jb
mov
sbbl
mov
mov
notb
xchg
or
cwtl
frstor
sub
add
cmp
aad
and
add
imulb
push
jmp
xor
rcrl
inc
je
icebp
jp
inc
or
mov
xor
xchg
mov
cltd
push
leave
pop
inc
xchg
imul
sbb
pop
mov
dec
inc
loop
sbb
add
xor
imul
cmp
adc
loopne
cwtl
mov
mov
sub
test
mov
loopne
fidivl
or
testb
incb
ficoml
decl
add
sarl
mov
sbb
mov
cmp
out
add
push
rorl
lret
add
xor
mov
cmp
cmc
inc
outsl
or
rolb
xchg
fisttps
orb
lret
lret
xor
xor
cmp
addr16
lret
inc
faddl
adc
dec
fs
and
testl
add
sbb
inc
add
lahf
aad
lock
movsl
sub
or
test
and
dec
mov
mov
adc
add
jnp
stc
ficompl
aaa
sub
or
and
sub
push
jecxz
je
mov
pop
push
insb
xlat
shr
adc
push
mov
cmp
jb
icebp
mov
sub
icebp
pop
or
mov
adc
mov
inc
push
iret
add
or
scas
cmc
push
test
sahf
pop
ss
inc
sbb
mov
je
mov
jp
xchg
lret
int
sbb
shl
mov
add
repz
dec
or
popf
inc
call
add
lods
mov
insl
je
ret
cmp
mov
add
cmp
cmp
adc
add
popa
fsincos
add
ret
xchg
jno
dec
dec
cmp
or
adc
test
sub
in
mov
sub
push
pop
fbld
pop
cmp
sub
dec
sub
movsl
clc
movsl
inc
ret
dec
pop
lea
mov
mov
cmpsb
inc
xor
loope
out
or
adc
jmp
sub
jae
or
outsl
add
shlb
add
test
roll
andl
mov
adc
fisttps
xchg
enter
jae
push
push
mov
jae
xlat
push
and
push
mov
test
loopne
adc
push
push
push
insb
lahf
adc
inc
sub
mov
adc
ret
or
add
cmp
inc
mov
xchg
sbb
shll
testb
jbe
xchg
add
push
mov
inc
push
enter
dec
les
jne
push
xor
test
and
xor
mov
and
push
insb
popl
fiadds
jne
lret
mov
lock
hlt
add
jnp
js
in
pop
mov
test
push
inc
add
fists
mov
mov
jmp
mov
push
inc
loopne
faddl
cld
sub
mov
sub
pushf
ds
and
xor
shl
fmull
pop
inc
les
pop
mov
sub
clc
add
test
sbb
mov
mov
lret
add
je
cld
xchg
jnp
pop
adc
push
push
mull
xchg
push
xchg
cmp
stos
mov
mov
imul
call
sub
and
fisttpl
orb
mov
lcall
pop
fdivr
gs
fdivr
ret
pop
popa
bound
ljmp
stos
popf
test
push
jne
test
and
pusha
lea
lds
inc
adc
arpl
popa
popf
mov
and
add
popa
data16
imul
dec
push
sbb
add
xor
cmp
add
mov
lods
push
sbb
addl
add
mov
dec
ret
arpl
jge
sbb
or
rorb
jo
and
enter
out
stos
jle
mov
jmp
jge
adc
fcmovb
je
lcall
loope
or
add
or
and
mov
mov
outsb
mov
dec
cmpsb
call
stos
jno
icebp
cmp
ret
adc
fists
pop
or
aas
adc
dec
inc
or
bound
sub
push
mov
adc
das
and
in
push
ror
js
test
dec
jmp
in
ficomps
lea
pop
fcmovne
sub
imul
pop
clc
adc
xor
xchg
add
push
movsb
add
add
xchg
iret
adc
shrb
jp
testb
test
pusha
or
insl
lahf
mov
or
pushf
cmp
in
cmc
test
insl
push
adc
xchg
add
lock
sbb
pop
cmp
cmp
dec
adc
out
add
les
push
test
outsb
cmp
je
mov
adc
adc
sub
sar
cmp
jbe
or
add
shlb
popa
lock
inc
mov
in
inc
aaa
lcall
cmp
cmp
pop
xchg
faddl
adc
cs
repz
add
or
das
pop
inc
pusha
adc
adc
fildl
or
inc
or
orb
push
lea
mov
xor
addb
lock
push
dec
outsl
enter
movsl
add
and
xlat
cmp
fld
pop
scas
inc
sarb
in
mov
push
scas
add
lea
lea
fisttpll
adc
testb
loopne
inc
add
and
enter
push
rol
sbb
shll
sub
pop
in
add
mov
add
xchg
dec
sbb
mov
sub
hlt
imul
cmp
sbb
xor
shlb
ret
pop
ljmp
ret
jmp
jnp
lods
enter
arpl
dec
add
xchg
icebp
push
mov
cwtl
outsb
sar
inc
lret
outsb
out
jp
cmp
cmpsl
pusha
jno
add
cmp
jb
pushl
mov
into
pop
or
cld
or
es
jae
xchg
push
sub
and
movsl
and
call
lahf
adc
adc
rolb
dec
pop
push
jnp
cmp
mov
pop
sub
icebp
leave
sub
xchg
inc
sub
push
sub
jns
sbb
push
repz
inc
and
mov
popl
rcll
scas
xor
jo
push
xchg
add
ret
xchg
or
rdmsr
out
cmp
cmp
push
jb
sbb
insb
and
jmp
mov
daa
or
and
push
sub
and
enter
or
and
inc
outsb
fcmovnu
daa
arpl
fwait
or
dec
or
add
sbb
adc
or
outsb
sub
fldt
mov
cmp
in
add
sbb
sbb
outsl
add
dec
add
int
jecxz
jb
xor
mov
jl
enter
sbb
vmread
xor
and
xchg
out
test
test
pop
inc
loopne
jecxz
add
push
ficompl
adc
sbb
enter
jp
and
imul
popa
ficomps
push
sub
stos
push
outsl
or
add
enter
enter
inc
aas
and
and
and
and
enter
enter
mov
aam
enter
in
nop
add
and
daa
in
add
cmp
push
sub
cs
das
mov
jnp
int3
cmp
pop
push
add
inc
push
jb
xor
and
xor
or
xor
mov
mov
mov
jp
adc
test
dec
out
cmp
cmpsb
in
sbb
xchg
mov
sti
test
push
push
add
out
mov
adc
push
addr16
pop
sub
jno
sbb
fidivl
mov
fbstp
or
movl
adc
addl
push
or
repnz
xchg
or
adc
lea
add
adc
mov
aam
sbbb
pop
mov
movsl
imul
xchg
push
push
dec
cs
push
sbb
mov
mov
adc
sbb
inc
inc
or
mov
jmp
cmpb
cltd
adc
or
inc
mov
mov
imul
in
mov
sbb
jnp
orb
andl
addl
mov
or
push
pop
in
ret
lods
imull
repz
pop
add
add
loopne
ror
inc
cli
pop
jae
lock
jle
or
add
adcl
lods
cmp
add
push
popa
adc
inc
jg
es
addps
dec
nop
pop
pop
mov
mulb
es
and
xor
dec
imul
lcall
push
xor
jle
inc
rolb
scas
addb
ja
jne
test
orb
xchg
cld
rol
je
daa
add
fisttps
or
pop
orb
pop
js
sbb
xor
push
add
add
push
xchg
jne
jno
adc
xor
xor
mov
push
sbb
lret
pop
add
daa
add
adc
je
lret
fsubrs
adc
or
aaa
push
jmp
cmp
sahf
ljmp
adc
lock
sub
mov
jecxz
mov
ljmp
push
dec
arpl
jg
sbb
xlat
and
jle,pt
dec
dec
sub
leave
pop
movsb
addb
rcpps
mov
xor
add
loopne
lock
or
std
cld
ror
pop
lods
xchg
lret
fwait
push
mov
inc
cmp
popa
mov
jnp
or
inc
int
idivb
adc
add
popa
fisttpl
jl
cwtl
xor
arpl
dec
jae
or
das
or
lock
xor
add
jmp
in
and
or
iret
xchg
dec
mov
repnz
or
pop
pop
sbb
inc
mov
inc
add
push
mov
sbb
out
popa
xchg
inc
sbb
fimull
jg
inc
or
push
mov
sub
and
std
addr16
pop
adc
sbb
sub
sub
repnz
xor
jmp
les
xor
inc
testl
or
stos
mov
out
cs
mov
pop
sbb
and
nop
iret
pushf
ret
inc
addb
dec
push
in
jmp
stos
push
aaa
add
jge
adc
fidivl
and
lock
cmp
mov
js
mov
xchg
xchg
andb
nop
mov
lock
push
mov
cmp
jl
or
std
cmp
jle
cmp
push
jp
or
pop
push
mov
sarb
je
stos
mov
inc
scas
addb
jge
lahf
test
pop
and
cmp
jl
je,pn
cli
push
repnz
or
js
call
push
cmp
adc
and
mov
dec
dec
cs
addb
leave
outsl
or
adc
cmp
rcr
in
sbb
fstps
lods
mov
add
mov
test
or
enter
lock
add
or
in
mov
subb
lret
sbb
cmp
and
xor
shlb
adc
call
scas
push
dec
rorb
stos
in
and
daa
mov
push
sub
xorb
insl
cs
pop
ret
je
xlat
jl
fadd
push
shrl
outsb
inc
rclb
or
cmp
mov
dec
fsts
or
popf
add
int3
mov
ljmp
mov
sbb
jp
sub
lods
push
pop
xor
dec
inc
mulps
lods
xchg
and
outsl
les
cs
sbb
mov
cmc
or
or
xor
lock
or
mov
inc
push
inc
lea
push
test
call
cli
cmp
pop
push
pop
adc
sbb
repz
lcall
inc
pop
pop
adc
push
push
jb
icebp
or
pushf
mov
push
ss
dec
cmp
stos
enter
fildl
cmp
inc
loope
add
pop
out
fs
popa
adc
push
pop
xchg
shl
pop
pusha
fs
or
add
sbb
push
xor
jmp
scas
jmp
xor
testb
xor
sbb
sbb
rolb
sub
daa
xchg
lcall
add
push
mov
adc
add
jo
or
adc
push
roll
lock
scas
push
xchg
in
inc
shlb
xor
clc
cmp
sbb
test
mov
push
inc
dec
pushf
ret
cmp
and
jmp
adc
jbe
adc
sbb
jne
nop
pop
sbb
xchg
ret
sbbb
inc
je
jmp
and
fs
loopne
es
inc
push
outsl
fidivrs
clc
and
sbb
je
jo
les
sbb
sbb
loop
xor
fcoml
sub
shlb
movq
aas
jbe
jmp
outsl
pmulhuw
cmp
cmp
and
and
add
and
add
fwait
adc
pop
ljmp
inc
jmp
inc
jl
fucomi
mov
add
pop
xchg
xor
inc
mov
stos
outsl
push
cwtl
fwait
push
scas
jo
cmp
adc
or
out
sub
and
inc
cwtl
stos
das
add
daa
lods
mov
lods
and
xchg
adc
shlb
je
arpl
sub
pop
or
inc
aaa
and
fldt
stos
pop
fwait
mov
lahf
popf
push
jo
mov
gs
add
adc
xchg
addr16
xchg
jae
xchg
test
and
sub
test
or
sbb
clc
out
xlat
xor
or
mov
or
je
or
je
cmp
outsl
pop
adc
and
pop
push
call
add
push
sbb
sbb
jl
pop
jecxz
adc
adc
or
jne
or
and
mov
pop
dec
add
sahf
sub
add
jl
adc
popa
adc
pop
push
lock
cwtl
jne
push
repnz
jmp
and
mov
add
cmp
cmp
xor
and
cmp
stc
add
sbb
or
insb
addr16
cmp
inc
fcom
fmuls
imul
cmp
es
cmp
mov
pop
xor
jo
flds
cmp
mov
sub
nop
xchg
sbb
adcb
fiaddl
mov
outsb
and
pushf
lods
cs
test
sub
and
push
cs
or
jge
dec
rolb
pop
and
cmpsl
sbb
jle
popa
cld
add
jle
into
push
mov
cmpsb
scas
add
sub
inc
inc
or
add
aam
sbb
nop
jne
dec
inc
cmp
sti
push
adc
pop
pop
gs
bound
add
ljmp
inc
shr
mov
sarb
loop
push
repnz
hlt
jg
mov
sub
cmp
add
mov
ret
pusha
pop
enter
push
clc
mov
sub
push
dec
mov
loope,pn
xor
aas
fs
push
lret
sub
cltd
or
decb
fimull
add
pop
ret
clc
jg
nop
les
or
jne
push
push
mov
or
sbb
int3
adc
cmpsl
and
add
adc
shrl
or
adc
adc
jg
adc
repnz
mov
unpcklps
pop
adc
adc
add
mov
inc
push
add
or
add
mov
inc
push
or
dec
inc
rcrl
dec
sahf
mov
adc
mov
jbe
dec
add
adc
or
add
sub
or
cmp
mov
cwtl
adc
scas
xchg
or
jmp
loope
dec
in
cmp
aas
push
cmp
inc
add
xchg
add
push
andb
imul
outsb
lret
xor
insl
and
jmp
sub
lcall
orl
js
and
xor
xor
or
mov
jae
push
adc
test
add
shr
jmp
in
adc
pop
adc
jnp
cmp
pushl
jae
pushf
mov
xchg
and
push
sahf
out
call
sbb
jae
div
je
dec
call
xchg
daa
sub
push
es
incl
sub
or
out
in
outsb
rorb
pop
add
dec
nop
pop
inc
add
push
mull
inc
adc
add
xchg
test
sub
shrb
fdivrs
add
pop
je
fldl
jne
jnp
adcl
mov
clc
nop
push
cmp
sahf
filds
adc
jne
push
divb
or
jne
or
jne
or
jg
addb
add
dec
lret
addr16
cwtl
add
sub
fistpll
cmp
inc
dec
inc
dec
mov
jmp
pop
mov
mov
inc
fiadds
out
mov
jnp
das
mov
aam
arpl
test
lea
push
inc
and
fstl
jecxz
fsubs
cli
mov
mov
push
xlat
fildl
dec
test
icebp
ret
push
lea
ret
sbb
notb
add
dec
jg
xchg
dec
push
icebp
push
or
add
clc
cmp
imul
loopne
jecxz
jnp
mov
ljmp
addb
js
loopne
je
out
mov
movsl
pmaxub
jmp
push
pop
add
in
inc
sbb
sub
sub
sub
pop
add
dec
cmp
or
or
jmp
mov
mov
aam
add
pop
sbb
jbe
or
push
ficoms
and
mov
movb
mov
dec
mov
sub
and
dec
dec
jmp
push
add
in
insb
and
mov
add
in
add
add
popa
sbb
repz
xor
or
test
or
inc
repnz
push
pop
clc
mov
pop
jns
lahf
inc
or
jne
adc
rcrb
leave
repz
or
push
sbbl
popa
stos
cmp
repnz
cmpsb
or
or
pusha
inc
push
push
sub
stos
dec
inc
xorb
or
cs
int3
test
ss
sbb
add
jbe
sbb
scas
mov
sbb
sub
mov
cltd
adc
mov
xor
add
xor
sahf
iret
cmp
or
add
les
push
imul
movsl
lret
addl
in
or
rclb
inc
xchg
or
dec
enter
imul
jno
cwtl
mov
cltd
nop
aaa
xor
loop
xor
push
outsl
inc
es
paddusw
imul
cwtl
mov
add
inc
stos
enter
add
adc
imul
stos
add
cltd
mov
and
adc
inc
and
add
mov
adc
dec
shll
or
mov
lods
mov
lods
jge
loope
xchg
push
sub
and
fstl
fmull
inc
addl
fistl
add
and
ret
js
sbb
mov
push
int
pop
jg
lods
imul
mov
sahf
aam
les
sbb
add
mov
ficoms
sti
cmpsb
jmp
xor
daa
mov
es
fs
inc
and
jge
sbb
int
xchg
je
pop
add
scas
loopne
fistl
fwait
lock
jns
cwtl
cmp
jl
int
lea
push
inc
xor
addl
mov
add
mov
lcall
or
sidtl
add
mov
pandn
pusha
pop
add
in
cmpsb
je
push
movsl
cli
push
sub
pusha
mov
add
and
xchg
or
shlb
jmp
sub
pop
push
lods
fwait
and
imul
mov
cmc
inc
ficoml
loop
das
ret
cmp
xchg
pusha
add
mov
add
xchg
jne
movsb
or
fstpt
in
push
cltd
mov
in
lret
push
or
mov
call
scas
xor
adc
inc
push
mov
adc
jne
dec
add
cmpsl
popf
syscall
out
insl
mov
insb
xchg
jne
xor
stos
enter
repnz
cmp
test
call
arpl
ss
sub
mov
mov
xor
mov
aad
mov
sub
mov
jmp
mov
inc
data16
xor
add
mov
in
or
xor
fimull
or
mov
insb
adc
pop
clc
mov
testl
xor
in
insl
or
sbb
popf
pop
sbb
sub
cmpsb
dec
cmp
xor
imul
add
sub
mov
mov
rorb
adc
aas
lea
push
insl
fmulp
mov
enter
stos
adc
mov
stos
jb
loope
mov
test
stos
sbb
jb
add
and
or
inc
adc
adc
cmp
sbb
push
stos
dec
sub
mov
xor
sbb
stc
rep
sub
lea
mov
mov
sti
or
movsb
xorl
nop
add
aad
fcoml
outsb
dec
clc
pop
adc
adc
inc
dec
mov
xor
arpl
ljmp
fs
movsb
pushf
shl
andb
popa
dec
pop
hlt
ljmp
sub
addl
jle
jmp
or
dec
movsb
insl
dec
call
pop
sub
das
push
ret
pop
jl
xchg
mov
adc
add
adc
add
cmp
add
cmpsb
push
jle
addb
push
xchg
xchg
sbb
aad
bound
push
movsl
pop
pusha
lds
shll
dec
leave
popf
pop
dec
xchg
cmp
push
xchg
stos
rolb
and
bound
dec
jmp
add
xchg
or
movsl
adc
les
mov
mov
jge
mov
movsl
popf
mull
lock
les
xor
cmp
push
mov
cs
shrl
lahf
xor
mov
mov
push
add
test
sub
jbe
mov
mov
dec
xchg
push
leave
mov
mov
jl
clts
sub
mov
cmp
sbb
leave
mov
imul
cmp
push
and
loop
push
and
pop
xor
adc
lock
aam
sbb
xchg
adc
imul
shlb
xchg
inc
ret
inc
mov
imul
pop
push
cmp
or
sub
add
scas
pop
ss
shrl
add
sbb
xchg
xor
xor
adc
xchg
xorl
scas
mov
lea
jne
add
push
das
nop
jmpw
add
sub
or
and
icebp
mov
and
cmp
loop
add
jecxz
and
sub
add
imulb
add
lods
sar
lock
cmp
es
test
lods
mov
int3
sti
pushl
cmpsl
push
repnz
cmp
call
add
jle
lea
and
and
jmp
testl
cmp
push
or
popa
mov
ss
adc
sub
lods
lahf
adcb
xor
sub
lea
dec
add
ret
dec
dec
mov
push
add
pop
test
loope
arpl
mov
int3
mov
fistpll
pushf
movsb
or
fwait
loopne
test
adc
fadds
sahf
gs
xor
fwait
pop
popa
and
stc
test
sbb
and
mov
jo
movsb
add
xchg
push
icebp
call
addr16
inc
stos
inc
insl
mov
movsl
mov
mov
jp
shlb
dec
sub
cs
add
lds
mov
and
out
xor
jge
lods
push
das
ljmp
jb
inc
jne
adc
push
or
xor
push
dec
push
sub
hlt
clc
or
es
clc
cld
scas
lret
adc
and
jne
test
jns
or
lods
adc
mov
xor
popa
push
pop
inc
pusha
les
inc
pop
scas
pop
mov
inc
loopne
fldl2t
and
lea
int
mov
sahf
and
inc
mov
jns
mov
or
xor
add
adc
jg
and
adc
pop
add
push
lods
test
push
jmp
push
push
stos
stc
loope
dec
out
and
in
xchg
pop
jp
dec
lock
ss
sbb
ud0
fcompl
inc
ja
shlb
sub
lret
cltd
jo
enter
addb
roll
mov
adc
pop
aaa
mov
add
jnp
nop
add
xor
cmp
add
ja
add
jp
test
dec
sub
cmp
adc
js
sti
or
jl
mov
add
sahf
mov
fwait
add
mov
aaa
in
test
dec
nop
push
cmp
imul
push
pushf
pop
and
and
pusha
lods
mov
add
mov
or
or
enter
and
add
insl
or
xor
inc
movsb
insl
adc
xorb
push
adc
jns
lea
loop
and
push
leave
adc
inc
and
and
mov
mov
push
pop
aaa
xor
xor
push
aam
mov
je
cs
sbb
xchg
in
fsubrs
and
outsb
adc
pop
loopne
dec
les
or
loop
push
add
ror
sub
mov
pop
cmp
sbb
and
lcall
adc
adc
mov
and
and
and
sbb
popa
and
rcrb
addl
and
arpl
dec
mov
in
pop
sbb
icebp
push
clc
sub
mov
jns
sub
mov
xor
push
mov
or
mov
xchg
addr16
and
and
imul
adc
inc
mov
shll
jo
pop
cli
jle
push
bound
sub
das
in
fiaddl
lret
sbb
insb
imul
xchg
cmp
imul
or
in
popf
xor
push
or
and
gs
adc
add
mov
nop
popa
adc
sbb
popf
dec
insl
jmp
enter
dec
mov
shrl
push
mov
loope
mov
push
mov
les
popa
out
repz
in
popa
sub
test
push
add
and
and
loope
pop
mov
inc
adc
add
sub
sahf
cs
cltd
sub
fsubrl
loopne
add
lock
addb
sbb
mov
adc
push
and
std
in
ret
push
pop
faddl
testb
rcll
roll
cmc
add
cs
jmp
mov
cmp
push
sbb
pop
fldenv
daa
pop
shl
enter
mov
push
adc
stc
mov
test
daa
or
and
int3
cs
xchg
push
aaa
inc
dec
test
es
lock
out
filds
and
dec
fiaddl
adc
add
dec
pop
or
insl
inc
cld
add
push
fildl
mov
inc
xchg
les
push
hlt
ss
push
mov
shlb
sbb
inc
mov
ret
xor
pop
and
cmp
lods
cld
std
sarl
popa
sbb
daa
lods
dec
xchg
dec
lcall
ds
and
adc
inc
xor
xorb
movsl
mov
push
mov
lock
test
xchg
add
or
and
sti
in
mov
add
push
lcall
or
xchg
repz
cmp
jae
cmpsl
sub
mov
inc
test
pop
jp
add
loopne
fs
sbb
ret
sub
sbb
icebp
loopne
mov
nop
test
pushf
add
mov
cltd
sbb
xor
add
add
cmp
pusha
pop
and
in
add
jmp
shll
sbb
inc
imulb
nop
sbb
rolb
test
in
rorb
jp
xchg
pop
test
lods
mov
adc
cmp
adcb
or
mov
inc
jns
in
lcall
push
inc
push
dec
xor
es
in
push
outsl
cli
std
popa
add
addr16
iret
pop
mov
rol
or
out
xchg
jmp
imul
rolb
ret
fists
mov
mov
aam
add
cmp
je
sarb
repz
or
lds
cwtl
inc
add
stos
call
sub
xchg
dec
fldl
xchg
fmuls
xor
jae
xchg
dec
and
adc
sub
mov
push
adc
lret
mov
cmp
sub
push
inc
and
jae
imul
mov
lret
je
negl
fmuls
pop
xchg
xor
inc
pop
mov
dec
add
dec
sub
clc
mov
andl
pop
sub
cmp
jge
ret
jb
std
dec
xchg
es
cmpb
and
lock
iret
mov
movsl
test
lea
test
inc
push
adc
adc
mov
mov
mov
scas
sub
nop
inc
xlat
call
push
sub
mov
sub
rcrl
nop
add
sbb
add
adc
dec
add
adc
callw
jp
mov
fucomi
and
lcall
loope
popa
jo
sbb
add
xchg
mov
fnstsw
test
je
and
add
add
xor
sarb
leave
xor
add
adc
repz
pusha
dec
mov
xchg
aas
imul
or
pushf
or
sbb
and
xor
fcoml
sbb
xchg
or
rol
fldz
out
sti
test
cmp
add
pushf
and
push
inc
decl
fsub
pop
fsubrp
pop
push
stc
fs
xchg
push
sub
xchg
pop
clc
arpl
cmp
icebp
xchg
xchg
int
and
add
or
push
cmp
and
and
add
inc
lret
lret
adc
cmpsb
mov
push
dec
je
add
and
dec
daa
sub
outsb
pop
dec
fsubr
inc
push
pushf
jmp
push
notl
inc
push
pusha
pop
xchg
sbb
jmp
push
stc
addr16
pop
jmp
push
jmp
push
jge
pusha
jg
mov
push
cs
jmp
push
pushf
ljmp
shrl
xchg
inc
lcall
lahf
xorl
add
push
enter
lahf
iret
hlt
xor
movsl
cmp
pop
inc
jmp
rcrb
xchg
aaa
push
hlt
outsl
in
sti
or
push
test
cmp
cld
mov
das
lea
ja
mov
dec
or
popf
loope
std
and
mov
lret
push
mov
adc
push
mov
mov
or
inc
sahf
or
loopne
movsl
push
adc
enter
fdivs
adc
xor
sbb
mov
fnstcw
mov
or
je
aaa
repnz
dec
daa
mov
nop
and
das
mov
push
or
repnz
push
mov
add
mov
inc
mov
adc
inc
push
fsubl
mov
xor
sbb
repnz
ss
pop
push
push
xchg
sbbl
sub
jle
into
push
inc
jbe
iret
cmp
dec
jne
push
jns
ret
mov
jl
ljmp
mov
xor
xor
aas
mov
adc
cmp
cmp
das
push
test
sub
repnz
pop
pushf
cmp
aaa
pusha
gs
aas
xor
sub
and
mov
or
push
test
je
jmp
mov
enter
sub
mov
adc
push
pop
add
add
iret
stos
clc
xchg
lea
out
push
std
or
sbb
cmp
jns
out
push
sarl
fld1
testl
cmp
and
inc
push
pop
outsb
cmp
repz
mov
iret
repz
shl
repz
out
sahf
cmpsl
adc
xor
inc
pushf
dec
sahf
pusha
jle
add
dec
pop
cmp
je
sbb
or
mov
test
add
mov
add
push
cmp
mov
cmpsb
xchg
fildl
xor
in
pop
imul
mov
push
push
mov
movsb
pop
cmpsl
push
shr
xor
shufps
sbb
notb
xchg
mov
rorb
dec
mov
sbb
add
pop
ds
adc
cmc
jp
aam
addr16
fldenv
data16
push
inc
arpl
xor
add
push
xor
xor
bound
xor
sbb
adc
xor
and
sub
cmc
xchg
cltd
sarb
xor
adc
cmp
int3
fidivl
int
jns
cmpsb
hlt
into
xor
push
xor
xchg
mov
popa
dec
jno
aas
das
sbb
fists
cmpsl
iret
jl
in
rclb
mov
sbb
sub
leave
mov
sub
call
mov
js
inc
lods
push
adc
dec
aaa
addr16
xor
push
add
rolb
push
mov
sarl
dec
push
roll
xchg
sub
sub
filds
xchg
cmpsl
or
push
and
lock
mov
int3
fdivrl
adc
add
and
mov
mov
inc
cltd
rorb
loopne
cmp
pop
push
add
sbb
cmc
add
mov
jnp
push
sbb
dec
mov
arpl
in
sbb
sbb
pop
loopne
call
call
adc
shrb
sub
popa
shrl
fisttpl
xchg
sbb
arpl
in
in
adc
ret
pop
test
push
movsb
pop
jle
int3
mov
add
mov
inc
out
lock
lds
ret
rcll
sbb
push
mov
xlat
push
dec
mov
sbb
inc
cmpsb
or
cmp
les
popa
xor
sub
sbb
mov
out
pop
leave
repz
cmp
and
dec
mov
xchg
out
xor
or
push
add
add
jmp
add
add
imul
stc
cmc
and
mov
push
sarl
xchg
jb
sub
lock
xor
push
add
popa
and
in
andb
call
fdivs
daa
jnp
mov
jmp
in
pop
and
xchg
sbb
add
cmp
dec
or
shrb
test
sbb
or
or
stos
ret
lds
shlb
shlb
inc
push
cmp
cli
sub
pop
leave
lock
sub
lcall
vpaddsb
leave
call
or
dec
inc
xchg
test
pusha
aam
ret
adc
cmpsl
jo
and
lea
fsubs
ret
sbb
adc
pop
adc
or
inc
add
adc
push
sbb
mov
ret
adc
push
adc
adc
inc
or
je
push
cwtl
nop
add
or
pop
sub
add
or
fidivl
or
std
or
les
addb
add
aam
sbb
sbb
adc
push
ret
pusha
lods
cmpsl
xchg
inc
adc
cmpsl
push
add
stos
mov
adcb
jne
pop
pop
leave
push
ja
sbb
dec
pop
mov
sbb
lcall
stc
pop
push
xor
int
rolb
inc
adc
sub
inc
out
add
dec
std
and
sbbl
icebp
icebp
inc
movsl
pop
sub
pop
pop
daa
shll
push
mov
dec
test
call
inc
xchg
dec
pop
or
mov
add
in
push
jle
ret
movsb
add
scas
or
jecxz
add
cmpb
mov
cmp
pop
push
stos
sbb
addr16
xor
adc
xchg
test
jg
dec
cs
daa
sbb
call
and
mov
cmp
fisttpl
lea
mov
add
and
mov
or
cmpsl
leave
mov
cmp
ljmp
dec
mov
xchg
cltd
push
mov
sub
inc
mov
dec
addb
leave
das
test
or
rcll
pusha
inc
lods
mov
push
push
jg
inc
aad
mov
pop
int
adc
or
jge
mov
add
or
push
dec
mov
jno
cpuid
inc
inc
or
add
test
push
insb
and
mov
add
push
xor
in
push
shlb
inc
add
sbb
add
orb
add
add
push
xchg
adc
rcrb
aaa
subl
ds
sub
call
cmp
cmp
leave
cs
cmp
jl
pop
int
cmp
jg
pop
xorb
imul
add
fimull
bound
mov
sbb
out
enter
cmp
daa
adc
jno
cmpb
movsl
cmp
add
inc
jo
in
out
les
add
test
iret
and
push
cmp
or
jns
sub
mov
test
add
pop
adc
push
and
aaa
je
mov
and
push
dec
aaa
lods
popa
je
data16
dec
xchg
lea
xlat
roll
xor
xor
cli
add
mov
mov
and
pop
mov
mov
sarl
movsl
xor
xor
mov
or
repz
add
inc
inc
fcompl
or
fmull
pop
rclb
fildl
sbb
pop
adc
jnp
into
mov
clc
push
jecxz
or
and
jp
add
mov
aad
mov
and
rcll
xchg
push
scas
movsb
fneni(8087
cwtl
lret
push
push
mov
sbb
movsb
cmc
rorb
sub
xchg
push
lea
jmp
lcall
push
inc
stos
and
cmp
dec
sbb
add
pop
sbb
cmp
popf
ret
leave
pop
call
or
cmp
bound
addb
adc
daa
xorl
add
or
mov
adc
addb
loopne
jo
push
inc
cli
cs
and
das
bound
xor
imul
fucom
add
push
push
xor
loopne
adc
and
loopne
fistpl
test
xor
sbb
insl
cmpsb
xor
jno
and
sbb
jg
test
dec
mov
sbb
sub
pop
adc
in
mov
fdivrl
movl
arpl
push
dec
icebp
icebp
insb
jns
dec
add
mov
push
ljmp
sbb
adc
add
and
gs
add
and
mov
faddl
or
hlt
mov
sti
filds
ds
or
adc
jl
xor
jmp
cmp
jl
or
int
jbe
jle
adc
jle
xor
jle
mov
je
mov
mov
push
add
inc
jmp
movb
mov
add
xchg
push
pop
cltd
idiv
mov
repnz
ljmp
jno
aas
in
push
ss
pop
xlat
inc
fdivrs
pop
decb
jne
rorb
mov
push
or
insl
leave
pusha
or
fstl
insb
lret
in
lods
bound
orl
xchg
lret
shlb
push
in
in
dec
testl
xchg
into
inc
sahf
call
nop
jl
add
sub
dec
fsubl
daa
cmp
sub
gs
add
push
add
xorb
mov
push
dec
call
cmp
dec
inc
in
xlat
cmp
mov
mov
cmpsb
aas
jmp
aas
repnz
pop
push
les
sbb
push
cmpsb
xchg
inc
repnz
test
mov
pop
jmp
jno
dec
std
adcb
push
aad
icebp
push
ljmp
push
xor
insb
imul
push
orl
add
dec
jl
loop
xchg
test
sub
out
sub
sub
adc
lock
pushf
adc
or
aas
sbb
hlt
and
push
cmpb
in
adc
fldcw
addr16
mov
jns
pop
dec
insb
adc
or
adc
pop
inc
add
jo
cmp
push
mov
jle
pop
mov
jge
and
jbe
and
lret
ss
push
jle
dec
add
cltd
les
stc
sbb
cmp
sarl
out
ds
jae
out
imul
fcomps
in
mov
leave
dec
nop
push
fsubrs
sub
mov
ja
dec
aam
stc
movsb
cwtl
and
push
jb
int3
push
jl
rcrb
and
push
lods
sbb
cs
iret
and
pop
inc
nop
and
sub
nop
sub
and
in
scas
add
xor
gs
ret
jns
push
das
daa
pop
inc
popa
leave
dec
inc
push
xor
add
sub
and
mov
add
push
test
mov
pusha
cwtl
dec
orl
adc
mov
pop
fs
sub
sbb
jo
fs
xchg
dec
mov
movsb
pushf
dec
xor
and
mov
jl
enter
adc
sbb
fsubrp
call
and
sub
aad
sbb
sub
jl
imul
les
jecxz
dec
idivb
add
sahf
add
scas
xor
das
xor
int3
nop
jo
jnp
cmp
xor
pop
adc
and
fsts
xlat
mov
dec
imul
push
cmp
movsb
fcompl
lods
and
clc
inc
movsb
fmull
add
movsb
mov
repz
sbb
xorb
mov
addl
push
sbb
xchg
cmp
jl
xchg
pop
repz
pusha
add
ret
in
lods
sbb
jl
mov
pusha
lods
xchg
pop
add
dec
jae
push
or
movsb
in
lcall
pop
add
rcr
xchg
xchg
sub
sbbl
lock
bound
in
push
add
sbb
daa
or
int
xchg
mov
dec
adc
or
addl
or
xor
dec
sbb
or
lds
dec
push
xchg
mov
xchg
nop
pop
push
pop
adcl
xor
mov
ljmp
dec
xchg
mov
sbb
mov
inc
das
lods
adc
ja
dec
mov
mov
fstl
and
cmp
jmp
adc
cmpb
insl
hlt
or
outsl
and
js
add
sbb
push
ret
and
add
add
out
mov
push
jnp
test
movsb
fstl
add
rcl
sahf
inc
pop
jp
ljmp
sub
sub
rcrb
sub
xor
lret
mov
lcall
insb
call
mov
jno
pop
jp
sbb
add
adc
mov
and
and
aam
jne
mov
fs
push
push
pop
incb
adc
ds
in
push
sub
add
pop
jg
pop
dec
lods
mov
mov
mov
push
sub
pop
push
xchg
andl
pop
pop
sub
sbb
push
mov
sub
fldenv
inc
fsubl
in
add
pop
xchg
bt
stos
in
imul
out
or
iret
js
push
xor
or
imul
cmp
mov
xchg
inc
shlb
push
pop
hlt
jge
dec
jl
xchg
fsubrs
cmp
hlt
pop
loop
ja
bound
jecxz
or
add
lret
push
xchg
into
adc
adc
testb
shlb
push
shrl
jo
pop
out
js
add
call
inc
inc
hlt
push
sbbb
pop
aam
adc
iret
popl
add
scas
in
xchg
mov
hlt
pop
push
lock
push
fldl
add
mov
or
sbb
or
lea
inc
xchg
inc
xchg
push
and
cmpsb
leave
add
testb
cmpsl
mov
shll
aaa
push
add
or
cmp
inc
sbb
and
call
shll
inc
push
pop
ret
mov
fiaddl
out
add
femms
jne
negb
mov
sub
loopne
lcall
int3
jl
cli
sub
push
or
mov
por
mov
add
add
sbb
dec
sub
cmp
jne
mov
push
addr16
add
jne
ret
fidivl
xor
cmp
int3
sub
xor
push
fxch
inc
jecxz
or
stos
mov
pop
xchg
cmpsl
sbb
fmull
mov
add
in
pop
psraw
aaa
shlb
mov
fsubrs
repnz
adc
fdivs
fdivl
call
int3
adc
cvtps2pi
adc
mov
aam
add
push
bound
and
rclb
sbb
out
ret
cwtl
sbb
sub
fimull
adc
adc
adc
fldcw
or
dec
jmp
mul
ret
movsb
cwtl
rcrb
adc
enter
push
mov
push
sbb
fnsave
push
xchg
sbb
imul
loopne
mov
pop
inc
xor
pop
rcrb
jle
push
imul
out
sbb
movsb
in
adc
lea
pop
jmp
xor
mov
sete
sub
push
testl
jmp
das
add
and
sbb
iret
mov
pop
cmp
popa
aam
pop
pop
inc
or
sub
pop
mov
push
or
test
dec
movsb
jg
movsl
sbb
xchg
mov
and
push
nop
sub
pop
bound
jne
ja
inc
push
xor
pop
daa
sub
sti
insb
cmc
cmp
cmp
push
xchg
dec
iret
adc
or
jae
shrb
gs
xchg
sub
push
cmp
dec
cmp
in
cmp
xor
ljmp
pop
es
sbb
push
lret
adc
cmp
cmp
cli
test
push
and
xchg
xor
adc
add
jne
or
dec
getsec
subb
add
dec
sub
add
sbb
add
nop
push
daa
sub
push
add
mov
arpl
pusha
cmpsl
testl
jle
dec
mov
and
sbb
and
inc
jl
cmp
jne
add
les
gs
cmp
push
xlat
pop
cmc
or
lods
push
outsb
add
aas
adc
jns
ss
xor
mov
rorl
dec
adc
and
mov
popa
insb
sbb
sub
mov
xor
xlat
xchg
add
add
or
xchg
repz
pop
in
inc
mov
lret
imul
ret
lret
aad
dec
pop
sbb
in
mov
adcb
ret
rcr
cmp
xor
mov
inc
sbb
loopne
pop
aaa
and
aad
pop
push
ss
dec
or
call
loopne
ret
cmp
pop
push
call
mov
push
inc
movsb
call
cmp
xor
ret
in
add
xchg
lcall
ret
sbb
in
in
xchg
sbb
in
ret
roll
and
mov
dec
out
sub
xchg
adc
rcl
sub
es
cmp
lea
aam
js
es
and
pop
or
add
pushf
test
mov
inc
inc
xor
daa
test
dec
mov
das
jne
sarb
mov
lret
push
cmp
daa
das
cltd
loope
cmpl
adc
or
or
xchg
jo
iret
adc
add
ret
lcall
mov
dec
mov
sub
and
push
pop
add
mov
dec
hlt
mov
test
popa
mov
mov
mov
xorl
push
push
pop
cli
mov
push
inc
push
adc
adc
mov
enter
push
adc
pop
fs
ss
or
in
or
cmpl
jne
sbb
or
je
add
loopne
loopne
push
mov
outsl
sbb
jbe
aam
xchg
xor
sub
xlat
and
icebp
pop
pushf
test
push
xchg
out
or
daa
add
sub
je
cltd
sub
test
push
push
mov
call
push
stos
adc
push
adc
xor
ja
imulb
pusha
fdivs
divl
sbb
cld
xchg
mov
pop
es
push
and
mov
push
add
cmp
nop
add
mov
lods
mov
cmp
add
and
pusha
ja
cltd
jb
or
imul
sbb
mov
ret
mov
jb
mov
cmp
fucom
adc
repnz
call
cmpl
jne
cs
dec
pop
push
dec
add
in
dec
xchg
jne
or
cmpsb
lcall
shlb
in
xor
mov
jae
mov
push
call
mov
rclb
mov
jmp
adc
int3
add
mov
out
outsl
ret
jne
insl
gs
push
faddl
lock
ret
sub
fs
inc
lock
or
cmp
jno
pop
sub
sub
aaa
push
pop
ret
xchg
push
push
popa
mov
pop
mov
pushf
enter
js
xchg
decl
mov
cmc
sbb
pop
push
pop
iret
aad
sbb
mov
mov
in
lods
dec
outsb
mov
push
xchg
and
adc
enter
pusha
pop
sub
xchg
mov
lock
add
and
xor
or
pop
push
stos
cltd
push
ds
mov
sub
add
dec
add
sub
stos
nop
add
add
add
push
xor
inc
andb
sub
xchg
xchg
cmp
sbb
xchg
push
addr16
out
cmp
insl
and
in
or
and
sbb
jo
imul
mov
mov
and
notb
jo
sti
adc
add
mov
mov
xor
das
inc
jo
std
mov
pop
or
and
cmp
mov
mov
and
fs
shll
push
xor
cwtl
rolb
test
fiaddl
mov
adc
cwtl
in
andb
pop
call
sub
stc
jecxz
sub
or
and
stos
xchg
test
cmp
fistpll
dec
adc
and
pusha
or
add
or
mov
sbb
mov
xchg
inc
cmp
imul
add
mov
push
and
or
push
cmp
mov
mov
movl
adc
addl
sbb
test
sbb
cmpsb
orb
pusha
pop
add
push
xchg
lds
or
pop
jecxz
cmc
push
mov
jne
add
push
fbstp
or
adc
outsl
repz
pop
cwtl
movsb
or
cmp
xchg
add
and
push
push
test
es
outsb
adc
lret
push
test
cmpb
js
int
jmp
add
rorb
mov
popf
fidivrs
mov
mov
mov
sbb
jno
stc
mov
push
aad
push
push
dec
iret
in
and
add
das
lods
inc
xchg
or
or
and
add
stos
add
push
and
roll
push
mov
add
je
jg
add
xchg
inc
pop
aad
xchg
mov
add
test
mov
lds
add
push
mov
jnp
sbb
and
mov
sub
leave
nop
fsubrl
inc
insl
add
dec
adc
pop
fiadds
cmp
fwait
pop
mov
adc
mov
mov
add
loopne
movsl
cmp
push
pop
roll
mov
sub
ja
jmp
mov
int3
sub
dec
pop
xchg
push
subl
mov
adc
sub
sbb
pop
jo
sbb
sbb
test
pop
aaa
out
and
xor
imul
adc
loopne
je
cmp
cmp
mov
mov
stc
ja
shll
and
push
cmp
dec
ja
call
sbb
ss
in
add
sub
push
push
mov
cmp
mov
loop
rclb
lods
push
cmp
sub
adc
inc
jmp
mov
fstl
lods
xchg
in
test
xor
daa
mov
adc
adc
pushf
sbb
fisubrs
andl
push
jo
imul
and
sbb
sub
arpl
mov
cli
lods
aam
dec
mov
sbb
adc
das
movsb
aaa
jmp
sub
test
add
lahf
mov
cmp
or
or
sbb
lea
xchg
sub
aad
or
orl
fiadds
unpcklps
ljmp
push
push
pop
mov
or
scas
push
or
and
ror
adc
pop
sub
xor
std
and
or
rclb
adc
data16
aam
dec
and
cli
push
dec
and
mov
enter
mov
and
push
add
imull
outsb
mov
test
push
push
push
sub
in
aad
test
lea
xorb
jb
inc
sbb
daa
and
or
int
sbb
jne
push
sbb
sub
cld
sub
dec
je
push
and
jbe
and
sub
andb
rcrb
lret
mov
sbb
fiaddl
jnp
clc
mov
push
push
add
pop
inc
jmp
push
cmp
fisubs
inc
inc
mov
pop
fs
add
dec
es
mov
push
and
loopne
aas
lods
lcall
dec
mov
int
in
sub
xchg
movsl
add
test
les
dec
jge
pop
add
inc
add
adc
addb
push
or
adc
mov
inc
inc
or
movsb
inc
sub
test
movsbl
or
insb
jg
popa
popl
int
ror
push
ret
push
add
sbb
add
and
movsl
xorb
add
inc
orb
test
data16
icebp
xor
jb
push
clc
xchg
push
mov
dec
adc
mov
xchg
and
rorl
dec
cmpsl
jne
test
das
jge
xor
add
inc
add
sbb
fwait
sahf
clc
add
addr16
outsb
push
jecxz
xor
test
lret
mov
dec
rorb
je
jne
and
out
inc
pop
mov
daa
push
loope
add
mov
pop
stos
adc
and
insb
push
popa
dec
leave
push
dec
jo
and
loop
out
mov
add
incl
inc
sub
ret
xor
sbb
mov
mov
push
lock
test
inc
cmp
inc
jb
pop
pop
and
cmp
mov
fstp
ret
push
and
decl
mov
push
mov
leave
shr
scas
hlt
shrb
xchg
sbb
add
imul
clc
negl
js
dec
hlt
xor
mov
jp
xorl
pop
ja
or
pop
cmp
decb
out
cmpsb
in
mov
stc
jne
push
inc
add
push
into
adc
push
inc
into
push
mov
push
dec
xchg
mov
jo
lock
dec
pop
psubw
cmp
ja
nop
shlb
cmp
out
orl
loopne
jns
xabort
push
dec
dec
xchg
mov
add
out
push
pop
cld
mov
mov
test
dec
test
pop
jle
sub
movsb
dec
mov
push
ds
inc
cmp
jb
jmp
xchg
cmp
or
xor
or
or
xor
sti
mov
adc
mov
inc
push
ljmp
daa
test
cbtw
ret
sub
adc
fcoml
xor
jb
xor
pop
stos
nop
sub
dec
sbb
xchg
loopne
iret
pop
xlat
sbb
adc
inc
and
jle
clc
lea
add
jl
jp
sub
test
daa
xor
das
jns
mov
mov
pop
fiaddl
es
add
cmp
addl
and
icebp
popa
mov
test
scas
shll
pusha
xor
repz
and
sti
adc
pop
pushf
adc
test
adc
addb
inc
insl
test
or
ljmp
push
adc
xchg
addb
dec
mov
fs
aam
pop
pop
inc
cwtl
push
dec
mov
xchg
xor
pop
pop
adcl
xor
aam
cmp
xchg
out
push
push
cmp
xchg
sbbl
aas
push
rol
add
test
ss
add
xor
jl
mov
fdivr
pop
xchg
js
je
pop
das
push
lea
js
sar
add
loope
loopne
xchg
addr16
ja
mov
std
iret
or
dec
cmp
pop
shlb
aam
mov
xchg
popa
sbb
out
imul
mov
mov
adc
negb
adc
add
pop
rclb
jns
ret
lret
test
and
fdivrp
mov
cmp
lea
inc
cmp
xchg
leave
subb
mov
lea
test
or
xchg
push
rclb
jo
push
push
orb
mov
jb
pop
add
clc
scas
cmpl
pushl
popa
sbb
frstor
rcrl
and
in
lea
inc
xor
mov
adc
daa
mov
mov
aad
sbb
jns
mov
and
lea
insb
sbb
jp
push
les
aam
lock
pmulhuw
rolb
rolb
xchg
test
cltd
and
push
loopne
adc
cmpsl
mov
inc
aam
jl
bnd
jno
or
fwait
dec
enter
mov
fisttps
adc
pop
jb
repz
pop
jo
into
sahf
inc
popa
test
mov
mov
pusha
stos
push
shlb
sub
ja
sub
lret
in
jecxz
jno
loopne
push
push
sbb
mov
out
pop
add
sub
jno
cmp
inc
and
pop
adc
cmp
mov
mov
lods
dec
or
jns
jno
xor
or
call
or
push
das
fimuls
adc
loope
add
sbb
popf
xor
ret
insl
out
pushf
in
mov
adc
or
xor
pop
dec
adc
xchg
ret
pop
and
cmpsb
nop
arpl
xchg
and
adc
mov
cmp
dec
sahf
mov
xorl
inc
jno
mov
mov
sahf
daa
aam
and
sbb
outsl
ret
push
adc
imul
imul
jl
pushl
es
cmp
shlb
filds
push
jmp
test
add
sbb
sub
test
out
push
push
add
mov
inc
or
mov
push
test
or
int
cmp
popf
es
xor
pop
sbb
sbb
dec
adc
and
ret
shr
decl
or
mov
pop
dec
mov
mov
adc
enter
rorb
sub
jnp
shll
push
cmp
or
and
and
iret
or
xchg
xor
xchg
fcoml
shlb
std
adc
dec
or
push
cmp
sub
movsl
inc
sbb
cld
cmp
push
jp
xor
inc
or
in
in
outsb
sub
call
mov
push
in
push
faddl
mov
and
jmp
enter
pop
adc
imul
lods
push
push
pushf
ds
and
jno
pop
sub
cwtl
cmpsb
test
xor
clc
or
daa
add
scas
sub
loopne
add
pop
rolb
cmpsb
mov
inc
inc
add
in
outsb
xchg
int3
sbb
les
pop
push
stos
lea
roll
cwtl
outsb
pop
inc
lea
add
adc
outsl
or
mov
rorb
adc
in
dec
xor
enter
xchg
mov
int3
add
mov
add
mov
sbb
shlb
mov
sub
mov
sub
pop
addl
jge
xchg
push
cltd
and
mov
mov
divb
inc
or
inc
pusha
push
add
cmp
inc
inc
sub
mov
dec
ds
loope
adc
inc
outsl
and
adc
add
or
cltd
rol
ret
pop
adc
xor
clc
fcmovbe
push
push
or
sbb
and
stc
xchg
xchg
cmp
xor
mov
cmp
mov
repz
rclb
int3
out
enter
mov
lock
inc
adcb
add
xor
cmpsb
dec
aam
lcall
repnz
cmp
adc
scas
ret
hlt
cmp
pusha
mov
jmp
ret
xchg
bound
jo
xor
test
adc
out
les
cmpsl
add
push
in
xchg
push
and
dec
mov
add
inc
mov
push
jl
jmp
or
xchg
and
sbb
xor
sub
push
out
cmp
add
add
push
jge
sbb
mov
push
pop
fs
movl
fisubrl
std
ss
and
popa
mov
xchg
fmul
xor
ret
loope
add
sbb
pop
xchg
sub
test
movb
add
inc
inc
cmp
add
mov
cli
mov
add
scas
aam
jmp
test
hlt
mov
scas
repz
data16
cmp
pop
jbe
loope
pusha
flds
mov
cmp
lods
shlb
push
mov
mov
daa
jmp
push
push
xchg
call
scas
jmp
or
jo
pop
dec
mov
cli
mov
pushf
push
add
mov
mov
test
cmp
es
sub
adc
push
mov
add
stos
jmp
ficompl
add
dec
add
add
mov
mov
aas
dec
orl
xorb
shrb
mov
test
out
cmpsl
add
cmpsb
iret
add
insb
addb
aas
xor
push
rclb
cltd
add
adc
mov
icebp
sub
push
call
ljmp
pop
inc
pusha
mov
and
imul
lock
rclb
add
movsb
adcb
sbb
push
hlt
std
push
test
sbb
xchg
push
repnz
in
mov
popa
push
mov
lock
mov
arpl
in
xor
loope
jne
mov
and
and
dec
insb
add
dec
inc
sarb
pop
or
jg
jae
or
cmp
adc
mov
loope
inc
sbb
pop
sub
jne
das
cmpsb
subb
xor
ret
insb
push
adc
dec
pop
js
sbb
fwait
aam
int3
jb
lods
dec
sbb
sbb
mov
loop
scas
testb
jp
xor
jmp
xor
xlat
fs
sbb
add
lret
in
aas
xchg
cltd
push
fdivrl
jbe
mov
sbb
jmp
int3
cmp
mov
add
ljmp
cmp
xor
adc
sbb
dec
popf
and
mov
cmp
and
and
push
mov
adc
pop
sbb
pop
add
ss
push
push
or
mov
cmp
hlt
or
rorl
cmp
loop
sahf
pop
cmp
adc
inc
push
ret
lret
insl
push
cmp
andl
push
jns
out
mov
push
push
push
call
cmp
inc
push
leave
mov
push
lods
rorl
pop
sahf
xor
nop
sar
sbb
loop
mov
adc
shll
or
add
or
or
lock
outsl
dec
adc
mov
inc
punpckhbw
fstl
int
sbb
add
mov
mov
mov
or
pushf
in
push
mov
pop
popf
loop
das
push
sub
jmp
push
push
imul
clc
or
push
scas
cmc
cmpsb
push
push
icebp
rorl
daa
adc
sub
adc
lock
add
test
cltd
sbb
cwtl
xchg
ss
lea
mov
inc
add
aas
push
mov
mov
repnz
xor
mov
jg
add
call
adc
mov
in
mov
insl
fldl
or
adc
orb
les
push
mov
dec
mov
push
leave
cli
insl
shl
xlat
out
popa
or
aad
fmul
pop
sbb
iret
dec
sahf
ss
iret
cmp
mov
das
push
movzwl
inc
mov
inc
add
stc
lock
push
jl
cmp
addl
sbb
cmp
xchg
fdivrl
mov
nop
cli
xchg
repz
imul
and
cmp
mov
lret
sub
or
lds
insl
xchg
jp
mov
push
repnz
fcoml
daa
rcrb
add
add
nop
pop
xorl
push
insb
cmp
cmp
or
fcompl
repnz
loop
hlt
xor
adc
cmpb
insl
adc
mov
outsl
cmp
stc
sbb
push
adc
jp
jno
and
mov
add
jo
add
sbb
mov
mov
hlt
fwait
sti
rep
movsw
push
cld
es
xchg
movsb
mov
aas
std
aas
into
or
mov
shr
mov
inc
mov
ja
inc
cmp
jle
movb
cmpb
mov
xor
jg
mov
and
mov
nop
mov
lcall
mov
xchg
push
push
inc
jl
jbe
add
jb
and
push
cld
ret
xchg
je
push
push
fwait
adc
enter
pop
push
cmp
xchg
rcll
mov
xorl
les
cmp
mov
xor
subl
or
fs
xor
push
insb
dec
and
or
cmp
pop
sub
add
xor
xor
pushf
inc
loopne
inc
cmp
test
push
mov
idiv
cmc
ss
cmp
lods
or
push
nopl
mov
lock
test
inc
sbb
and
ds
inc
js
or
jns
fisubl
sub
sahf
sbbl
dec
dec
dec
dec
add
dec
pop
or
or
aaa
aaa
aaa
mov
or
jmp
or
jno
jmp
push
jmp
aaa
aaa
aaa
aaa
por
jmp
adc
pop
adc
push
aaa
aaa
aaa
aaa
adc
dec
adc
dec
adc
aas
aaa
aaa
aaa
aaa
pop
jmp
sbb
xor
jmp
aaa
aaa
aaa
aaa
sbb
es
and
pop
aaa
aaa
aaa
aaa
pop
jmp
and
or
jmp
mov
adc
fimull
push
mov
lds
and
and
rcrl
xor
push
cld
xchg
cmp
repz
scas
mov
repz
repz
aam
fsubp
iret
repz
call
add
push
or
adc
jns
and
cs
jns
out
cmp
in
mov
add
and
or
or
push
movups
call
adc
adc
push
pop
sbb
sbb
sbb
push
pop
and
and
aas
jl
jo
mov
nop
sbb
cs
push
in
sub
outsl
lock
push
and
fnsave
or
jne
scas
popf
in
lock
andl
inc
mov
sub
rcrb
pop
push
stc
and
pusha
xchg
adc
push
push
cmp
pop
mov
push
cltd
pusha
xchg
and
sub
adc
clc
add
push
sahf
inc
aam
cwtl
mov
adc
dec
in
test
jl
enter
test
push
cmp
dec
in
dec
dec
je
push
add
lods
cmp
cmp
mov
push
jne
mov
sub
mov
xor
mov
add
mov
add
je
or
adc
mov
push
int
add
adc
cmp
mov
or
test
outsb
dec
fidivs
xor
fs
or
inc
dec
call
or
and
cld
mov
push
clc
add
adc
sub
repnz
mov
adc
bound
push
push
pushl
and
cmpl
lcall
pop
jnp
pusha
push
sbbb
sti
dec
jecxz
mov
andl
scas
ss
push
jne
push
ss
push
push
push
pop
loopne
add
xchg
add
es
sbb
push
call
out
jle
inc
jmp
mov
jne
and
and
pop
test
jne
jno
xchg
add
aas
jo
gs
shll
push
cmp
add
cmp
jge
leave
pop
loopne
test
pop
xor
mov
inc
mov
push
push
mov
fmull
faddp
je
dec
sahf
push
inc
ds
jns
cld
push
clc
sbb
je
xchg
jbe
xor
data16
push
xor
push
xchg
lock
or
adc
cmp
cmp
push
xchg
imul
inc
mov
or
jl
mov
cmp
cmp
or
inc
cmp
movsl
xchg
pop
push
cmpsb
pop
fistpl
dec
sbb
inc
cld
mov
mov
push
arpl
mov
enter
iret
and
adc
and
aaa
sub
xchg
dec
ds
pop
ret
and
xchg
sbb
jo
push
xchg
and
mov
clc
dec
cltd
test
sub
incb
cmp
andl
dec
mov
add
xor
pop
or
loop
sbb
adc
pop
add
test
sub
rcrb
sub
add
cmp
lret
xor
nop
lret
into
jno
mov
cwtl
aam
inc
dec
adc
aas
jp
add
cwtl
or
jbe
pop
cmp
shlb
push
lcall
jo
fisttpll
pop
xor
dec
push
mov
jle
push
jmp
dec
and
adc
adc
lods
rorb
add
inc
enter
lret
mov
std
pop
inc
jae
add
scas
loop
jo
rclb
ds
xchg
shrl
jp
push
out
lods
roll
into
movsb
sahf
test
sbb
mov
lret
xor
sbb
mov
dec
inc
jle
push
xchg
popf
cwtl
and
mov
or
mov
or
xchg
lahf
or
sub
add
mov
movsb
jno
inc
push
dec
cmpsb
inc
jp
jbe
pop
sbb
inc
loopne
add
popa
jno
pop
push
cmpsb
adc
pop
adc
shrb
add
jns
xchg
enter
fimull
leave
orl
dec
orl
pushf
sub
shlb
dec
sahf
faddl
pop
inc
bound
repz
lods
in
mov
cltd
es
loopne
ret
imul
fmull
mov
add
sarb
pop
stos
add
add
add
mov
mov
fistl
daa
cmpsb
push
andb
jo
aad
std
rcl
jge
adc
sbb
inc
xchg
or
add
das
addb
xchg
jne
lea
push
call
test
mov
pop
ret
cltd
xchg
dec
or
imul
call
or
js
fnstenv
cmp
cmp
inc
stos
adc
scas
pop
xchg
mov
mov
inc
push
mov
mov
push
sub
cmp
fcmovb
jge
or
add
inc
cmp
push
daa
lock
or
jle
mov
aad
ror
xchg
and
iret
jmp
sbb
push
pop
lea
lea
cmp
jae
sub
scas
call
mov
imul
xchg
rcl
or
pop
insl
stos
ljmp
movsbl
push
inc
cli
aaa
mov
inc
cmp
jbe
adc
push
lcall
daa
or
push
sbb
insb
dec
jns
decb
cmp
or
cmp
shl
inc
add
cmp
fwait
call
jmp
inc
push
xchg
es
pop
enter
add
gs
lret
or
mulps
or
adc
add
sbb
inc
enter
and
movsb
fwait
movsb
jb
push
xor
xor
movsb
fwait
cmp
cmp
pop
inc
xchg
dec
sub
adc
and
pop
or
out
psubsb
push
xchg
push
inc
daa
in
inc
decl
fcoml
test
add
lea
add
shlb
test
mov
mov
xchg
je
jl
pusha
nop
lret
ret
and
xchg
in
mov
jl,pt
sub
in
aad
lea
sub
clc
cmp
je
dec
int3
or
inc
push
or
sbbl
dec
stos
movsb
jl
xchg
and
jno
std
inc
jmp
repnz
repnz
sti
lods
sub
xchg
hlt
shll
jne
shll
adc
push
pop
insl
or
or
push
sar
or
call
sahf
mov
mov
cmp
je
mov
inc
push
in
and
and
adc
jl
shr
add
sbb
cmp
jp
mov
and
and
pop
das
sub
or
out
mov
mov
les
sbb
push
fwait
fwait
mov
test
and
or
inc
lds
test
cmpsb
leave
daa
pop
add
cmpsb
test
add
decb
push
mov
cmp
jl
cmp
jle
fiaddl
adc
ret
jmp
adc
pop
add
add
mov
inc
jecxz
shrl
fs
mov
push
sahf
sbb
jo
mov
lock
sub
ds
test
jne
cmp
pop
add
pop
cwtl
adc
adc
je
cmp
push
adc
inc
std
add
call
xor
push
js
repnz
adc
jle
sbb
cmp
outsl
pop
pop
adc
adc
adc
stos
mov
mov
rcrb
adc
in
lock
lea
add
test
lret
mov
cmp
sub
jmp
mov
nop
pop
call
dec
add
xchg
adc
jno
and
imul
js
jmp
jo
ret
cwtl
mov
xchg
stc
sbb
jns
mov
xchg
data16
inc
cmp
jge
push
pusha
mov
xchg
repnz
or
aas
imul
push
jg
xor
xor
je
xor
js
clc
aas
jne
push
leave
add
clc
adc
xchg
jne
scas
mov
jbe
add
add
popf
lods
cmp
mov
mov
add
xchg
inc
or
add
cmpsb
mov
fsubs
mov
push
mov
sbb
xor
jno
adc
cmp
gs
test
adc
pop
ljmp
xchg
or
or
cmp
loop
rcrb
sbb
xor
inc
fbstp
xlat
and
add
jmp
inc
xor
test
bound
js
mov
leave
rorb
cmpsl
pop
les
nop
add
or
lods
leave
arpl
test
push
mov
and
mov
and
iret
push
shll
add
xor
mov
xchg
jne
int3
loope
scas
cltd
or
test
push
sbb
xor
movsb
dec
sub
adc
aas
sbb
push
push
and
xor
repnz
xchg
or
sub
shr
mov
fnsave
dec
lea
pushl
dec
imul
and
daa
std
mov
xchg
jo
dec
outsl
pop
and
sbb
push
es
jno
mov
push
dec
sub
adc
cld
dec
dec
push
movsl
jle
mov
and
mov
inc
into
mov
mov
es
mov
std
insb
addr16
das
mov
add
clc
or
adc
and
cmp
dec
pop
xor
test
imul
jae
testl
mov
sbb
loopne
pop
movsl
pushf
mov
sbb
test
cmp
test
jo
jne
mov
adc
pushf
into
popf
push
hlt
ljmp
jbe
lods
add
jle
clc
lock
push
jbe
stc
push
movsb
sbb
pop
cmp
adc
enter
popa
add
aad
test
inc
pop
add
mov
adc
jmp
xor
js
sbb
pop
push
jg
dec
xchg
mov
rorb
rol
fld
and
inc
out
inc
jle
lock
out
ljmp
mov
stos
subl
rorb
gs
loopne
xchg
dec
ss
jle
adc
push
in
arpl
pushf
fcmovu
shlb
mov
adc
inc
ret
dec
or
pop
ret
movsb
push
push
aaa
lea
ret
lret
pusha
add
sub
inc
and
adc
shrb
lret
adc
jns
push
pop
je
push
xor
push
insb
push
lods
inc
hlt
sbb
test
mov
call
mov
cmpsb
insb
pop
jo
in
popf
lds
pop
push
cwtl
stc
dec
and
mov
inc
pop
std
pop
lods
pop
and
lea
sahf
xchg
cmpsb
push
orl
sbb
xor
sub
pop
lret
push
aad
fwait
bound
lock
fldl
inc
or
push
mov
adcl
repz
aaa
aas
adc
insl
xor
sub
mov
es
add
add
faddl
fstl
fldz
fcomp
fnstsw
mov
scas
rolb
int3
fsubr
pop
faddp
cmp
and
mov
push
ds
or
test
test
or
mov
adcb
jb
stc
fadds
mov
pop
hlt
xlat
hlt
sub
and
pop
hlt
jl
cmp
sbb
push
lea
sbb
insl
pop
jge
jmp
loop
insl
adc
sbb
aaa
push
jb
call
aas
lea
das
mov
ret
xor
mov
fdivs
cmp
inc
mov
mov
jnp
ds
inc
jmp
fldl
cmp
ret
shrb
dec
adc
lea
jg
lcall
xchg
xchg
xchg
adc
jne
jne
push
fidivrl
add
cmpl
sbb
xorl
stos
add
jmp
fldl
dec
push
test
jnp
data16
dec
mov
repz
adc
mov
dec
sti
xor
shl
fimuls
enter
mov
sub
loopne
shr
dec
jge
sub
fdivrs
insb
pop
or
mov
clc
push
lcall
lcall
mov
aam
enter
jbe
inc
rolb
push
push
andl
in
jmp
mov
jmp
add
sbb
mov
hlt
and
or
data16
pop
rcl
mov
adc
fiaddl
cs
aam
inc
sete
loop
adc
sbb
adc
mov
and
jne
xchg
movsb
dec
and
dec
fistl
pop
fwait
and
dec
dec
imul
add
cwtl
push
int
pop
and
test
or
cmp
mov
inc
mov
xchg
dec
inc
add
and
mov
icebp
push
popf
mov
jge
dec
movsb
in
and
push
roll
sub
add
ss
ljmp
add
jb
or
lock
jbe
add
popa
push
push
add
mov
mov
sbb
mov
jb
push
or
stos
xor
daa
dec
pop
jb
adc
or
add
lods
lock
xor
inc
xchg
add
shlb
cmp
call
fmuls
or
or
jo
sub
insb
dec
jmp
stc
xlat
les
or
xchg
inc
sub
cmpsb
aam
and
push
cs
or
pop
adc
sbb
jne
rol
out
or
dec
xchg
inc
mov
lods
mov
or
mov
inc
andb
xlat
dec
cmp
cwtl
xchg
aad
call
xchg
add
dec
mov
test
imulb
inc
mov
push
lcall
xor
js
dec
pop
clc
or
mov
pop
sbb
or
shlb
sbb
cli
pop
pmaddwd
mov
pop
xchg
out
xor
int3
adc
fs
xor
push
dec
pop
dec
xor
add
or
test
fimuls
push
pop
add
daa
cmp
aam
inc
ret
les
mov
cmp
je
xor
push
jmp
or
adc
aas
enter
cmp
dec
jp
xor
sub
aad
and
jecxz
dec
sub
enter
aam
add
push
imul
or
fbstp
movsl
pop
lods
xor
jne
jno
push
mov
cmc
scas
rcrb
add
bound
bound
mov
push
pop
cwtl
cmp
jb
mov
jg
and
cmpsb
test
popa
mov
rcrl
jo
xor
push
jne
push
push
adc
cwtl
xor
push
js
mov
add
test
mov
pop
iretw
jnp
fstl
push
push
hlt
nop
cmp
dec
fsts
cmpsl
jo
mov
clc
mov
jmp
inc
pop
popf
or
inc
ficomps
add
jl
xchg
xchg
movsl
je
cmpsl
mov
mov
cmpsb
lods
imul
and
adc
jg
add
mov
test
push
xor
inc
loop
pop
add
adc
mov
or
popa
mov
je
ret
cmp
pop
daa
mov
xchg
pop
dec
push
aam
mov
ret
in
decb
xor
shlb
dec
getsec
pop
cmp
test
and
sahf
pop
inc
out
push
mov
loop
arpl
in
ljmp
mov
lods
add
test
xchg
jle
call
test
sub
cmpl
cltd
push
add
push
dec
mov
stos
jne
mov
adc
cmpsb
test
mov
jo
push
sub
pop
mov
bound
or
jne
sbb
daa
inc
mov
dec
sets
movsl
ror
sbb
dec
rcll
js
mov
pop
push
push
mov
bound
mov
gs
dec
pop
sub
mov
test
rcll
xorb
int3
mov
push
fimuls
adc
add
es
lcall
dec
popa
pop
sbbl
notl
mov
int
popa
mov
or
loope
jb
add
faddl
adcb
sub
add
mov
aam
inc
or
dec
or
pop
mov
xchg
addr16
or
jl
ret
iret
pop
add
mov
dec
add
inc
dec
pop
push
loopne
mulb
adc
in
dec
pushf
fldenv
or
mov
lods
inc
push
ret
sbb
jbe
sub
xor
mov
pop
out
fiadds
rolb
mov
repz
invlpg
push
pop
cmp
push
dec
xor
int
repnz
or
or
std
cltd
mov
jge
push
dec
dec
subl
jg
imul
pop
xchg
into
mov
fsubl
int
mov
mov
mov
test
ficoml
and
or
test
out
sub
adc
adc
stos
push
xchg
jmp
sarb
and
jne
andb
mov
gs
out
ret
jbe
push
push
add
push
pop
pop
orl
rorl
aaa
dec
mov
xor
jg
cmp
insb
rclb
lods
nop
iret
xchg
outsl
and
sbb
push
push
add
test
sub
arpl
adc
arpl
iret
outsl
inc
add
push
or
push
test
pushf
mov
sub
test
andb
push
ja
or
add
xchg
or
and
xchg
pop
lret
sbb
scas
and
sbb
push
xchg
sbb
mov
js
xchg
loopne
adc
jbe
je
mov
dec
inc
mov
subl
mov
faddp
mov
loop
cmp
roll
adc
dec
cmp
add
mov
mov
jmp
xchg
add
sti
test
mov
shlb
shl
inc
in
push
incl
xchg
add
in
aas
je
add
add
xor
ret
xor
sbb
ds
mov
and
add
adc
push
mov
mov
mov
mov
push
in
rcrb
jge
xor
imul
testl
fsubrs
shlb
je
fadd
popf
lret
push
or
in
ss
jae
scas
sub
pusha
sbb
sub
mov
lea
jl
adc
and
push
push
push
and
cmpsl
dec
js
das
andb
dec
push
inc
sub
mov
mov
inc
dec
xor
rolb
lods
test
cmp
or
es
push
adc
mov
scas
add
lret
dec
sub
mov
inc
or
ret
ret
imul
or
mov
push
mov
adc
int3
cmp
pusha
xor
aas
or
xor
dec
subl
inc
mov
push
inc
inc
pop
or
andb
cmpsl
adc
sub
xchg
push
inc
mov
xlat
pop
addb
xor
fmul
aam
pop
add
ja
fs
inc
inc
or
and
fs
add
dec
repnz
xchg
adc
test
and
sub
and
sub
xor
mov
add
or
pushf
mov
xor
xchg
and
adc
mov
dec
lcall
xchg
loopne
inc
fcompl
push
xor
mov
dec
adc
stos
mov
js
rcll
arpl
jo
shlb
inc
loop
and
mov
cmp
mov
out
jmp
cmp
sub
inc
es
test
aaa
int3
mov
mov
popa
aad
stos
and
mov
push
jle
pop
test
push
cmp
dec
loop
mov
xchg
test
push
int3
sarl
out
aam
push
adc
rcrb
pop
pop
test
jb
mov
lods
mov
movsb
dec
mov
fmuls
cmp
lock
jmp
mov
stc
test
rclb
ret
mov
cmp
mov
or
imul
push
call
dec
inc
adc
mov
rclb
jno
mov
andb
sbb
lret
xchg
daa
add
mov
pop
push
xor
xchg
push
aam
sarl
test
ret
mov
and
rorb
cmp
fcompl
repz
dec
rolb
in
fs
xorb
lods
inc
push
dec
mov
ljmp
mov
xor
pop
popl
fsubp
sbb
and
scas
call
mov
scas
sbb
xchg
lret
mull
cmc
add
push
adc
push
push
mov
jo
mov
je
popf
mov
lcall
cmp
cmp
xchg
out
mov
in
and
xchg
mov
jns
out
or
sub
xchg
test
xchg
in
dec
dec
and
xlat
dec
sahf
hlt
dec
mov
ss
pushf
pop
pop
dec
mov
mov
shr
add
xor
or
rcrb
sbb
adc
incb
and
inc
dec
push
jl
mov
lods
pop
or
dec
push
test
sub
jmp
lret
sbb
sbb
jnp
push
mov
sarl
pusha
cmp
add
lock
or
dec
sub
pop
add
insb
add
and
inc
and
es
dec
adc
and
mov
mov
or
push
ret
or
jns
adc
mov
push
cmp
or
or
xor
or
stos
or
mov
jmp
jl
push
dec
icebp
or
cmpsb
xlat
hlt
or
mov
bound
xchg
xlat
inc
gs
hlt
dec
mov
mov
js
incb
test
xchg
cmp
or
fdivrs
clc
and
jne
mov
adc
fld
aas
jo
push
ss
mov
loopne
and
jnp
push
flds
sub
int
data16
push
fcmovu
imul
jp
mov
leave
movsb
or
pop
out
mov
cmpl
test
ss
test
mov
mov
pop
js
pop
imul
cmp
add
int
hlt
inc
icebp
test
lods
cwtl
jp
jle
inc
push
sub
and
scas
shrb
mov
sbb
push
push
mov
sbb
push
daa
mov
pusha
lods
add
aas
aas
movl
push
mov
mov
aaa
lea
cmc
or
sbb
out
stc
in
shll
rcrb
xchg
mov
push
mov
gs
popf
adc
adc
jo
add
sbb
out
lret
lea
aaa
mov
sti
mov
sub
pushl
cmpb
jp
mov
and
push
push
pop
sbb
nop
pop
jmp
outsb
and
int3
loop
adc
test
cwtl
std
fistpl
lds
nop
mov
dec
sub
xor
inc
cmp
movb
enter
cmp
mov
jbe
int
stos
notb
cmp
add
jbe
jne
xchg
notb
jne
enter
std
fcoms
mov
or
mov
xlat
pop
in
lret
or
or
movsb
ja
pop
mov
std
mov
push
sbb
xchg
loop
xor
jne
adc
lock
scas
rolb
roll
or
lret
mov
mov
inc
lock
dec
or
push
lea
insl
cmc
fdivs
pop
jnp
adc
pop
mov
and
mov
cltd
ror
enter
jns
fisubl
fimuls
xchg
push
push
and
pushl
pop
inc
pop
in
sub
mov
xchg
mov
pop
jl
data16
in
sbb
lods
outsl
je
test
push
cs
push
dec
xor
mov
xchg
in
sbb
or
and
pop
adc
pop
or
inc
mov
sbb
test
mov
fwait
pop
jnp
nop
inc
adc
jl
push
mov
jbe
test
pushf
and
adcl
lret
xor
fs
fsubl
insl
xor
test
imul
xchg
filds
push
sbb
nop
data16
push
sbb
popa
lea
rcrb
roll
mov
adc
xchg
sbb
shll
mov
inc
sub
cld
sub
sub
xchg
jno
xchg
sahf
out
and
test
gs
ficoml
mov
in
mov
test
hlt
inc
mov
mov
xchg
jecxz
mov
dec
xor
mov
in
add
and
in
mov
jg
rcr
jns
push
enter
xor
push
and
push
cmp
movsb
pusha
rolb
ror
and
inc
test
and
arpl
test
loop
rcrb
mov
or
in
xor
loopne
dec
pop
jo
int
daa
xor
add
ss
mov
fcoms
lea
repz
lock
xchg
adc
je
addb
pop
and
pop
mov
mov
pop
enter
xor
and
xchg
mov
mov
les
pop
xor
mov
jp
adc
mov
dec
lret
mov
sub
lret
ret
iret
out
mov
addr16
pop
sub
pop
fiaddl
dec
ljmp
repnz
imul
test
mov
mov
sub
adc
adc
adc
or
ja
inc
sub
xchg
or
sub
push
push
cmp
pop
push
out
sub
xchg
dec
mov
or
mov
xor
inc
lcall
mov
fstl
or
ret
sahf
adc
adc
clc
xchg
pop
pushf
cmpb
adc
aas
dec
subl
in
cmp
and
test
adc
sub
xor
sbb
inc
sub
test
mov
mov
jne
or
push
clc
jo
ret
les
pop
imul
sub
test
lret
js
cmp
push
xchg
aad
imul
mov
inc
cmp
or
test
add
dec
repz
adc
pop
cmpsl
mov
push
push
es
dec
and
loopne
aaa
out
ja
mov
jg
jg
mov
rorb
xor
pushf
adc
cmp
je
pushf
xor
sti
imul
bound
jne
inc
inc
jmp
inc
fs
sub
lea
mov
cmp
mov
icebp
add
sbb
mov
or
inc
js
push
jmp
test
pop
xlat
cltd
adc
repnz
shl
jne
scas
popf
fimull
push
stos
arpl
or
pushf
fld
pop
shll
push
add
jge
sbbl
mov
push
sub
bound
cs
xchg
lock
push
mov
mov
and
popa
push
pop
cmpsl
aam
pop
in
mov
repnz
sbb
in
ret
fcmove
jb
and
xor
push
cmp
insl
push
jmp
mov
push
scas
xorb
outsl
orb
or
mov
test
lods
inc
movsb
push
ret
faddl
sub
and
pushw
xchg
xor
adc
push
cmp
ja
cmp
and
stc
rol
mov
les
enter
jmp
jnp
ret
fsub
adc
adc
push
daa
insb
and
push
loop
ret
adc
les
je
sub
sub
and
mov
push
push
dec
clc
or
je
add
dec
and
cmpsb
int
je
outsl
jle
insb
sub
mov
sbbb
pop
pusha
ret
sub
dec
sbb
or
mov
lcall
ss
mov
fwait
out
add
pop
push
sbb
into
sbb
in
inc
or
push
cltd
stos
test
adc
mov
adc
mov
add
lret
loop
addl
jge
and
out
dec
cmp
or
pop
dec
rcll
jl
repz
and
mov
lahf
sub
in
xor
clc
lahf
dec
gs
xchg
mov
mov
inc
repz
ljmp
inc
xor
test
xchg
lea
cmp
xchg
add
mov
ret
and
pop
adc
cmpsb
inc
insb
or
js
inc
jl
sub
insb
icebp
push
push
loope
pop
mov
xlat
xor
dec
clc
sarb
popa
add
jl
loop
dec
sub
lods
adc
popf
insl
lods
inc
dec
mov
mov
dec
repz
mulb
sub
jle
fadds
xor
dec
push
push
insb
inc
jle
and
or
inc
sbb
sbb
fcoml
enter
push
dec
and
push
inc
pop
enter
aas
mov
test
rorl
testl
jl
mov
dec
gs
syscall
cmp
iret
sbb
mov
xlat
loopne
inc
ljmp
out
or
cmp
test
mov
bound
jb
pushf
mov
js
push
not
loop
test
sub
pop
push
fisttps
movl
call
clc
cmp
jbe
add
add
mov
dec
ret
mov
pop
and
addps
inc
push
adc
cmc
xor
and
divl
add
jecxz
inc
enter
dec
sbb
int
inc
lea
or
clc
adc
mov
sbb
sub
add
pop
cmp
ds
sbb
inc
aas
sub
fcoms
and
adc
push
and
or
and
and
adcb
subb
mov
xor
or
mov
out
mov
lea
jmp
sbb
mov
add
jb
push
sub
or
jmp
lahf
aaa
xor
add
dec
and
mov
stc
add
mov
enter
adc
lahf
add
and
xchg
rol
or
out
imul
inc
push
dec
stos
fnstenv
and
mov
push
addb
out
int
mov
xor
rcrb
cltd
test
loopne
mov
js
jmp
fistl
cmp
or
stc
xchg
sub
pop
je
adcb
adc
stos
xchg
es
mov
adc
pusha
add
xor
shlb
xchg
orb
pop
adc
and
data16
mov
lods
fiadds
jp
sbb
add
or
test
add
add
adc
push
repnz
sub
ret
pushf
ret
adc
mov
adc
push
jmp
and
add
in
cmp
push
adc
into
fisubrs
add
pop
xchg
inc
xchg
stos
push
cmp
and
adc
xor
or
or
pop
jo
push
add
sahf
sbb
push
sbb
or
or
mov
mov
repnz
sbb
mov
jns
or
mov
or
sbb
or
sub
shll
stc
or
sbb
mov
out
cmpsb
mov
ljmp
enter
imul
inc
or
cwtl
push
into
push
into
inc
jl
mov
dec
dec
or
cli
and
lock
dec
cwtl
push
or
mov
pushf
test
push
and
mov
inc
js
sbbb
jo
out
icebp
jbe
es
cmp
iret
push
in
sti
ret
or
clc
and
xor
test
mov
popa
sbb
clc
fisttps
mov
sub
sub
pop
and
shrl
adc
push
push
and
jmp
insl
sub
sbb
mov
xchg
cmp
xchg
mov
loope
cmp
jns
and
add
xor
mov
and
shlb
sbb
cs
je
sbb
inc
push
adcb
iret
cmp
jnp
lds
and
data16
pop
in
aaa
outsl
mov
ja
xor
dec
sub
jne
inc
insb
ret
push
cmp
enter
daa
jl
or
int3
sub
dec
dec
dec
repz
pop
mov
adc
mov
scas
movsb
lret
fwait
test
mov
xchg
fxch
lods
das
lods
dec
ljmp
push
push
mov
xor
fsubl
mov
mov
mov
xchg
mov
xchg
adc
sbb
enter
pop
fnop
test
ss
hlt
jge
add
mov
mov
loopne
dec
cmp
outsb
flds
test
jmp
push
sbb
mov
pop
repnz
lcall
int
push
sbb
cmp
push
lret
addb
sbb
mov
pop
add
mov
aam
mov
jns
jns
push
dec
fstps
nop
push
sub
and
orb
and
insl
mov
sbb
in
ds
leave
enter
add
dec
leave
test
push
ja
mov
movsb
inc
in
add
add
sti
push
fistps
pop
call
fistpl
inc
mov
test
dec
add
push
push
xorps
dec
lret
add
pop
enter
xorl
jo
and
sub
mov
cmp
dec
mov
xchg
jmp
cli
pushf
push
dec
xchg
mov
jle
sahf
jmp
push
cs
mov
dec
lcall
xchg
cmc
jmp
mov
and
cmpsl
push
sbb
pop
int3
push
mov
negl
mov
test
int3
js
dec
repz
fisttps
adc
pushl
push
or
cs
push
mov
mov
movups
inc
push
xlat
xchg
jnp
mov
movsb
sahf
sub
loope
pop
adc
es
fsts
stos
scas
movsl
mov
sbb
cmpsb
push
in
imul
dec
lock
aas
xor
dec
shlb
andb
sbbl
std
popf
sbb
pop
bnd
jp
or
or
inc
dec
xchg
cwtl
add
cmp
je
jbe
inc
mov
fists
xchg
xchg
ja
dec
je
or
test
adc
push
mov
test
rcr
jmp
sbbl
add
insb
daa
adcb
lcall
xchg
icebp
mov
lea
stc
and
push
aaa
xorl
bound
pop
mov
std
sub
push
push
fs
push
inc
inc
mov
sub
test
ficompl
push
fstpl
and
or
loop
mov
daa
call
popa
aaa
aaa
pop
cmp
inc
call
add
shll
in
push
mov
push
or
inc
mov
daa
dec
ss
hlt
dec
push
add
lahf
cs
push
ficompl
cs
or
push
flds
mov
pop
sbb
es
and
cli
orb
pop
sbb
sahf
adc
and
movsl
sub
cmp
in
test
sbb
or
push
mov
fisubs
rcrb
shr
and
cld
dec
adc
popa
cmp
add
js
sbbl
sub
push
push
outsb
mov
lret
inc
add
push
push
add
push
pop
mov
bound
xchg
push
sbb
cvtps2pi
stos
in
adc
arpl
push
and
xchg
push
icebp
mov
add
xchg
and
inc
add
jo
cmp
mov
ljmp
and
shrl
dec
jne
std
in
pop
xchg
sub
movsb
in
xor
repnz
and
pop
les
jmp
pop
in
fcompl
adc
and
adc
mov
rcr
dec
jl
adc
lret
mov
sbb
xor
add
es
pop
add
mov
clc
push
or
adc
lahf
and
shlb
xchg
adc
push
pop
jp
bound
ret
test
adc
xlat
add
stos
iret
rep
pop
push
scas
test
cmp
cmp
push
or
inc
popf
mov
mov
popa
fsubrl
popf
sub
and
push
sbb
loop
xor
je
inc
cmp
push
add
rcrb
or
roll
imul
push
adc
mov
imul
mov
jp
jbe
jmp
mov
cwtl
xor
xor
andb
push
movsb
xchg
dec
add
jle
test
cmpl
repnz
pop
loopne
jb
inc
or
movsb
das
adc
add
dec
push
movb
xor
cmpl
mov
sbb
add
pop
mov
sub
sub
ficoml
sarb
pop
cmp
add
add
mov
lea
dec
sahf
int3
sarb
rol
movl
mov
or
loop
inc
adc
adc
sub
pop
and
push
test
and
dec
cmp
jne
in
and
xor
sbb
adc
or
mov
add
mov
loope
dec
mov
pop
push
add
ja
ds
xchg
pop
push
outsl
push
je
push
push
push
outsb
dec
adc
push
push
aas
jmp
cmpsl
sarb
imul
sbb
les
sahf
test
push
mov
enter
dec
mov
mov
inc
and
inc
inc
or
inc
adc
fisubs
push
out
jl
push
in
orl
push
push
or
xchg
mov
add
es
mov
je
push
sub
adc
jl
sbb
and
inc
mov
cltd
jmp
mov
inc
push
mov
in
pushf
mov
daa
js
pushf
fcoms
adc
sbb
and
loope
sub
add
xor
cltd
and
cmp
xor
mov
xlat
jl
add
adc
or
push
repnz
xchg
push
push
stc
pusha
or
ds
xor
or
pop
add
mov
mov
sub
mov
push
lods
lret
and
sahf
or
xor
push
pusha
sub
cmp
jns
push
push
sub
out
arpl
jo
or
adc
jo
pop
push
xor
popa
int3
call
mov
dec
inc
push
fwait
add
add
nop
adc
adc
pop
sub
int
popa
addl
hlt
inc
and
hlt
jge
adc
movsb
outsb
xor
mov
adc
pop
xchg
add
iret
mov
lret
push
pop
movsl
xor
adc
aam
pusha
or
dec
test
pop
mov
pop
or
or
imul
or
dec
dec
aaa
adc
ret
or
adc
mov
push
add
repz
adc
loopne
stos
jno
in
push
fstpt
inc
int
in
pop
mov
out
xchg
push
adc
mov
pop
out
lds
mov
mov
repnz
rolb
dec
cmc
ret
mov
notb
jne
pop
push
pop
push
add
subb
lods
aaa
xchg
mov
adc
mov
andb
or
gs
mov
pop
jne
xchg
fdiv
cmp
loopne
or
or
loope
lahf
ljmp
push
jo
daa
ja
push
add
stos
pop
dec
sbb
into
adc
sub
jo
pop
lea
jle
in
call
fmull
xor
mov
rol
mov
ror
xor
shr
xor
cli
call
mov
rol
xor
shr
xor
add
add
add
inc
pop
flds
push
adc
ret
jae
in
or
and
xor
add
add
aam
sub
cmp
mov
push
scas
push
mov
ror
mov
fisubrs
shrb
and
and
xchg
push
aam
aaa
adc
xor
push
fs
xor
repnz
repnz
movsl
rcrb
or
mov
neg
push
or
xlat
ret
rcl
add
add
push
rol
cld
ss
add
in
imul
aam
call
push
scas
sub
ljmp
push
lcall
add
push
sub
dec
shll
fcomp
loopne
test
inc
xor
in
imul
shl
in
push
cmp
bound
rorb
cwtl
add
pop
aaa
mov
push
fadd
cs
cltd
call
xor
loopne
loopne
in
push
cmp
in
loopne
adc
pop
dec
shll
rcl
mov
pop
xor
jae
sub
or
int3
into
add
outsl
pop
xor
jne
and
and
out
pop
in
jl
iret
or
xor
cmp
imul
add
inc
adc
orb
mov
cmp
jo
ret
push
jo
je
or
ficoms
call
lcall
dec
adc
push
loop
jle
inc
pop
mov
add
add
pop
sub
jbe
call
fcomi
mov
or
clc
jp
push
and
nop
cmpsb
bnd
add
gs
fdivrs
inc
movsb
imul
and
adc
inc
mov
aam
mov
xchg
jmp
jo
cli
stos
pusha
nop
or
adcb
dec
shll
cmp
sub
shlb
call
xor
shr
rolb
add
push
pusha
inc
aaa
cli
xor
xor
xor
shlb
shlb
inc
sub
in
imul
sbb
jo
add
add
jo
push
xor
popl
sahf
dec
sbb
dec
add
dec
push
dec
in
movsb
cltd
xor
and
xor
dec
add
inc
cmp
adc
int
dec
jae
pop
cmp
leave
and
sub
push
test
sub
int
add
or
imul
sbb
pop
nop
data16
xchg
and
pusha
enter
xchg
movsl
mov
fcoms
stc
rorb
adc
sbb
roll
push
adc
cmpsb
jb
cmpsl
xor
dec
dec
dec
xor
push
imul
pusha
aam
mov
adc
ret
xchg
inc
dec
jb
lcall
adc
adc
push
cmpsb
imul
adc
push
pop
push
in
add
and
push
pop
jo
orb
filds
sbb
shrl
mov
loopne
adc
movb
inc
push
pop
aas
and
push
lea
cmp
pop
cld
insl
rolb
sub
xchg
mov
xor
pusha
adc
or
loopne
decl
jmp
adc
sarb
rol
fwait
xchg
or
mov
adc
in
outsl
stos
add
jae
mov
adc
loop
sub
xor
adc
add
mov
mov
sub
sub
pop
add
frstor
mov
or
mov
dec
jne
pop
decb
add
mov
lahf
addl
or
adc
adc
or
fs
ljmp
dec
loope
in
push
jae
push
pop
push
adc
xchg
sub
sub
stos
or
scas
cli
popf
lods
mov
or
mov
push
std
fldt
pop
loopne
ror
mov
testl
in
add
mov
mov
jg
push
adc
push
adc
enter
movsl
xchg
sbb
inc
nop
pop
xchg
cltd
sbb
xchg
dec
jae
push
inc
add
fdivs
inc
add
stos
lea
adc
mov
jg
repnz
push
or
pusha
repz
aas
test
push
mov
movsl
nop
push
pop
inc
out
push
sbb
xor
test
cltd
sbb
jae
or
hlt
cmp
mov
loope
or
ljmp
adc
in
shlb
push
icebp
mov
xchg
mov
test
dec
and
jmp
and
and
pop
dec
mov
jb
mov
add
dec
add
add
loope
xor
shr
subl
loope
inc
xchg
popa
addb
mov
or
push
lcall
push
iret
fistl
pop
or
pusha
ljmp
cmpsb
imul
and
xchg
jmp
sub
fwait
push
mov
or
cmc
pop
ret
dec
mov
mov
sub
data16
inc
sub
je
dec
sub
mov
jo
push
or
mov
pop
jp
and
mov
mov
pop
fisubs
add
adc
xlat
popa
add
cmp
aaa
in
movsl
je
cmp
sub
cmp
add
inc
dec
fistl
sbb
push
adc
and
add
add
sub
jns
inc
mov
or
or
push
dec
add
add
jle
cmpsb
lock
inc
es
bound
add
pop
push
pop
popl
enter
add
cld
inc
or
jnp
push
das
and
mov
in
mov
xor
cmpl
or
hlt
sbb
push
addb
cld
hlt
ljmp
mov
adc
adc
mov
gs
xor
out
adc
lahf
ret
dec
in
subb
xchg
test
popa
push
or
add
bound
pushf
ret
repnz
loopne
mov
cmpsl
lahf
adc
mov
loopne
and
out
mov
stos
add
jae
push
jb
mov
fdiv
pusha
les
push
cli
and
pop
add
jge
call
loopne
cmp
push
dec
insl
dec
sub
cs
dec
dec
std
xor
mov
pop
push
outsl
in
or
dec
mov
and
insb
loopne
or
mov
xchg
lcall
test
xor
inc
cmp
aaa
jp
or
addl
or
pop
pushl
aaa
add
inc
add
jnp
stc
or
lret
mov
loope
lods
mov
inc
or
std
je
cmp
push
daa
mov
dec
sbb
je
inc
ret
push
push
dec
sub
dec
dec
lcall
out
dec
and
pushw
jecxz
rclb
fildll
fcoms
or
orb
pop
add
cmp
xor
mov
mov
pop
orl
xorl
ret
add
ret
arpl
sub
and
out
xchg
push
and
mov
push
pop
push
ss
popa
xorl
sbb
sbbb
dec
pop
stc
push
js
or
movsb
cs
lods
dec
sub
out
mov
filds
mov
movsl
mov
push
mov
push
mov
orl
pop
mov
adc
cmp
cmp
mov
or
push
xchg
xor
add
adc
pcmpgtd
xchg
inc
pop
xor
test
dec
adc
jb
shr
cwtl
fisubrs
sbb
add
add
sbb
cmp
mov
frstor
add
xor
fsts
cli
das
test
jbe
push
add
jmp
mov
dec
sub
and
jae
push
cmp
push
mov
fidivrs
jb
jmp
inc
jbe
push
push
repnz
je
push
adc
mov
mov
sub
mov
sbb
mov
cs
pop
mov
icebp
push
add
push
sbb
icebp
mov
pop
mov
inc
or
cmpl
mulb
cli
cmpl
or
in
push
jne
cmp
mov
and
xchg
inc
ja
and
and
mov
dec
inc
pop
mov
sbb
aad
dec
dec
inc
and
jne
bound
add
sub
lea
xchg
ret
jle
adc
or
sbb
adc
add
push
cmp
mov
pop
imul
sar
pop
push
jbe
sub
add
and
mov
add
push
pop
cli
push
jbe
or
push
call
push
sahf
insb
cmp
sub
adc
clc
stos
xchg
lods
or
add
xchg
das
inc
push
cmc
aas
sub
pop
xchg
push
pushf
leave
dec
add
stos
notl
scas
xchg
ljmp
data16
xchg
pushf
dec
push
xorb
pop
ljmp
lret
data16
sar
xor
mov
or
sub
clc
push
xor
and
jns
add
insl
add
fidivl
add
decb
lea
or
inc
fldl
inc
and
add
shrb
dec
lret
fldt
push
jbe
xor
dec
pop
cmp
xchg
filds
icebp
mov
je
cmp
or
add
mov
sub
sbb
icebp
mov
nop
push
mov
push
dec
mov
leave
adc
jp
add
sub
in
fistpll
scas
bound
push
mov
cmp
jnp
inc
aaa
inc
adc
mov
mov
bound
stc
ja
cs
lock
ja
ss
cmp
jb
mov
push
mov
or
pusha
jno
jns
jp
rolb
pusha
adc
or
add
in
neg
add
jmp
mov
lds
loop
push
in
xchg
das
dec
pushf
jo
or
adc
addl
lods
sub
cmp
lahf
pop
sbb
dec
xor
mov
mov
scas
ret
xorb
sbb
mov
dec
xor
cmp
jmp
lods
loope
sub
mov
in
sub
mov
add
xchg
jo
add
cmp
jo
loopne
xchg
stc
cld
mov
adc
mov
inc
cmp
pop
push
movsb
mov
jl
inc
cmp
movsl
lahf
je
mov
movb
pop
mov
mov
nop
sub
adc
sbb
pop
cwtl
xor
dec
mov
jne
jge
add
mov
or
sub
lret
add
xchg
frstor
and
adc
adc
cwtl
dec
out
pop
xor
pop
push
fsubrl
add
imul
cli
das
sub
sbb
adc
cmp
xor
push
or
pop
push
inc
fiaddl
and
lea
jo
xlat
inc
nop
xor
inc
cmp
jl
pop
mov
xchg
mov
ja
enter
aaa
ret
push
xor
push
pushf
sub
arpl
or
int3
adc
orl
jecxz
push
jae
push
out
sbb
insb
sbb
jle
das
add
xor
push
cld
cmc
xor
pop
ret
push
das
sub
mov
adc
push
jl
rolb
rcll
dec
xchg
jns
js
and
mov
adc
sbb
inc
mov
popf
pop
mov
inc
jnp
inc
dec
push
fsubs
cmp
or
mov
pand
ss
cmp
bound
movntps
les
comiss
push
push
mov
loop
inc
adc
pop
mov
xor
fs
mov
mov
adc
ret
mov
mov
decb
push
loope
and
add
mov
ret
mov
shr
shl
add
sbb
lret
mov
or
and
pop
adc
movsb
mov
cmc
mov
arpl
jp
inc
mov
xor
iret
push
fidivrs
pop
add
adc
add
shl
call
fisubrs
dec
sub
add
sbb
add
adc
pop
fs
xchg
lock
sub
push
test
sub
mov
and
sar
mov
inc
or
add
ss
inc
jp
hlt
mov
subl
xchg
cmc
dec
cld
mov
xor
loope
mov
push
sub
insl
pop
push
or
add
and
mov
shl
icebp
or
aam
mov
adc
xchg
cmp
scas
jmp
ljmp
sbb
cvtps2pi
inc
movb
inc
sarl
mov
inc
sti
adc
pushf
mov
dec
dec
mov
or
add
push
insl
push
popa
out
xchg
shlb
cltd
dec
and
xchg
pop
lds
adc
aaa
dec
or
jne
repnz
sub
add
mov
ficomps
mov
push
mov
add
jo
inc
add
loope
mov
dec
test
mov
xor
push
mov
adc
pusha
mov
adc
push
push
stos
or
orl
data16
xor
and
mov
inc
adc
fldl
add
in
fldt
xor
ss
insl
push
and
enter
pop
push
or
add
jbe
aas
nop
mov
push
push
js
fucomi
call
mov
jnp
cmp
xchg
xchg
add
loop
dec
aam
or
out
xchg
inc
fs
sbb
aam
push
dec
xchg
shrl
push
ret
adc
sub
jno
jecxz
in
sbb
sub
pusha
cmp
orl
jbe
sub
sbb
insl
popf
mov
sbb
sub
add
or
and
lds
xor
enter
inc
mov
push
or
mov
xchg
xor
xchg
addb
inc
adc
sbb
inc
or
mull
insl
pusha
in
movsl
pop
pop
ret
add
or
pop
add
pusha
rorb
sub
or
sarl
int
sub
add
insl
inc
add
push
push
sbb
or
or
sub
cmc
and
loopne
cwtl
push
adc
dec
push
xor
loop
cmp
or
adc
or
and
and
or
jbe
repnz
mov
sbb
mov
push
imul
or
inc
movl
cmp
fwait
or
adc
inc
or
sbb
sub
loopne
cmpsb
pop
inc
mov
jecxz
and
pusha
jmp
sbb
ds
adc
jbe
addl
addr16
sbb
out
pop
mov
sti
sub
js
sbb
scas
cmp
mov
insl
sbb
sbb
mov
or
aam
add
inc
xor
insb
push
sub
or
sarl
dec
xor
clc
je
int
xor
xchg
sub
xor
push
in
in
je
push
das
aas
lds
arpl
inc
loopne
and
sbb
or
push
sbbb
cmp
add
pop
push
lcall
les
mov
aaa
ds
pop
push
pop
push
push
push
add
into
push
adc
daa
cmpsb
cmc
jo
cwtl
push
ljmp
jge
jmp
mov
adc
adc
popa
sar
push
and
inc
mov
inc
add
jno
sbb
inc
pop
sub
fwait
adc
bound
sbb
dec
mov
cmpsl
mov
add
sbb
and
sub
cmpsb
sbb
mov
inc
cmpl
jo
out
cmp
jle
shr
mov
adc
jo
data16
dec
in
push
repz
cmp
in
mov
jo
inc
ret
sub
mov
jne
push
inc
sub
push
mov
jo
push
insl
fsubrl
sti
cmpsb
mov
mov
pushf
or
jmp
xchg
jne
repz
imul
lcall
je
in
pop
xchg
mov
into
dec
insb
mov
or
repnz
insb
inc
or
pop
cld
test
or
dec
jo
add
push
xor
inc
cmp
pusha
pop
cmp
ds
or
sub
outsb
inc
nop
sub
inc
jo
push
shll
enter
scas
fcmovne
mov
pusha
adc
or
pop
inc
add
data16
and
adc
loope
xor
add
fdivr
call
xor
cmc
movl
xor
jl
cmp
sub
add
imul
push
das
shlb
xchg
sub
aaa
data16
pop
cmp
mov
push
add
push
add
in
sub
cmp
xchg
jmp
sub
dec
jnp
push
cmp
jne
push
adc
add
add
out
mov
jne
pop
sub
int
scas
mov
or
or
loop
xchg
dec
aad
push
inc
add
sub
loopne
sbbl
push
pop
mov
push
add
cmp
je
loop
jae
add
and
icebp
jmp
jle
mov
out
jge
dec
ret
imul
adc
in
push
push
idiv
dec
add
jne
jg
add
pusha
adc
adc
hlt
pop
or
inc
sub
sti
inc
add
cmp
insl
sub
jo
and
stc
sbb
push
pop
test
or
pushf
inc
pusha
je
gs
push
push
mov
aam
or
leave
or
inc
mov
add
testb
ret
or
sbb
pop
xrelease
dec
push
push
shlb
xchg
inc
add
andb
imul
adc
sarl
sarl
sbb
add
mov
int3
lock
or
testb
mov
sbb
push
es
add
dec
repnz
roll
add
add
leave
jmp
lea
push
mov
sbb
dec
rcll
adc
inc
dec
adc
lret
into
jne
mov
test
cmp
pop
or
xor
and
or
dec
xor
lret
jmp
push
cmp
pop
xor
hlt
and
xchg
inc
jl
addb
inc
pop
inc
in
dec
xor
jb
push
jg
int3
sub
cmp
jne
push
inc
popf
pop
hlt
xchg
sbb
adc
adc
in
mov
stos
jl
lods
imul
andl
dec
xor
add
aas
clc
cmp
sub
dec
push
aad
es
xorb
lret
jno
mov
inc
add
jb
js
notb
ja
sbb
lcall
pusha
sub
jnp
loopne
xchg
cmc
sub
inc
pop
addl
mov
push
or
adc
mov
dec
mov
pop
sbb
and
imul
mov
or
cvttps2pi
mov
inc
and
orb
or
cs
adc
pop
mov
repnz
in
adc
or
enter
in
add
out
and
inc
mov
mov
testb
add
dec
and
add
stc
or
movsb
and
add
add
and
push
sbb
test
imul
filds
jb
test
mov
pusha
lcall
push
je
jmp
mov
add
in
cld
inc
or
jbe
inc
hlt
and
fists
add
out
inc
xchg
add
mov
add
mov
sub
ret
mov
rol
add
add
cmpsl
adc
inc
or
or
push
addb
pusha
call
pushf
adc
enter
adc
sbb
les
mov
ja
adc
in
mov
lods
dec
push
loopne
cmp
insl
loopne
mov
faddl
jne
cmp
and
sbb
add
add
inc
adc
fisttpl
sub
adcb
or
jne
xor
add
and
test
add
popa
scas
mov
mov
cmp
pop
daa
add
jmp
loopne
add
jne
push
jbe
jno
ljmp
aaa
add
loopnew
pop
xchg
push
adc
adc
push
into
inc
fstps
js
cmp
jl
mov
or
adc
test
jmp
aas
pop
add
dec
insl
cmp
nop
nop
and
in
es
or
decb
fisubs
out
cltd
rorl
fidivl
xchg
mov
sub
adc
jmp
orl
mov
adc
cltd
mov
lods
mov
adc
push
fidivrs
and
mov
or
inc
je
push
mov
and
xor
mov
stos
add
js
jp
negl
inc
addb
rorl
push
sub
addr16
or
loop
push
ds
jae
add
adc
add
cmp
movq
dec
jl
mov
inc
push
sbb
xorl
jmp
es
mov
push
add
ja
adc
xor
ret
aaa
int3
cmp
push
pop
xor
dec
push
xchg
movsl
inc
dec
pop
sbb
pop
ja
in
sbb
pop
pop
ret
push
or
or
cmp
inc
popa
vunpcklps
cmpb
adc
mov
pop
adc
rcrb
insb
cmp
xchg
xchg
fwait
iret
adc
gs
loop
push
jb
jno
add
sub
adc
xchg
mov
xor
aad
scas
pop
xchg
or
mov
adc
icebp
iret
adc
add
into
jbe
rorb
push
push
mov
and
push
mov
sbb
enter
stos
cs
jl
movsb
jbe
and
inc
movaps
sub
mov
or
pop
jb
cmp
cmpsl
out
pusha
popf
adc
lahf
int
shll
jp
push
js
inc
cld
movsl
push
jbe
adc
jae
mov
sub
push
adc
ja
test
dec
rcrl
nop
daa
mov
cld
cmp
push
bound
push
push
add
scas
xchg
add
and
jp
fisttpl
dec
js
dec
nop
cmp
in
push
mov
roll
ret
jmp
push
aam
add
mov
or
popa
insb
sbb
mov
add
mov
scas
dec
xlat
and
sbb
aas
dec
jne
je
jmp
or
push
dec
nop
push
movl
mov
jns
add
push
inc
sbb
pushw
lock
add
cmp
daa
psrad
test
fsubs
push
xor
cs
push
and
icebp
xor
icebp
jnp
and
jnp
sub
cmp
mov
insb
inc
sub
mov
and
pushf
es
push
mov
dec
inc
pop
pop
and
pop
add
gs
push
jo
sarb
or
and
add
je
jno
mov
js
sbb
adc
mov
subl
imul
dec
mov
aas
dec
push
mov
lcall
mov
stos
and
adc
push
cld
ss
jb
movsl
ljmp
inc
or
icebp
pushf
push
mov
add
stos
lock
roll
mov
push
jmp
enter
cmpsl
and
es
adc
adc
or
jne
mov
loop
popa
test
ret
fcmovb
push
cmp
adc
dec
adc
test
cmp
fwait
sub
xchg
sub
mov
les
insb
lods
mov
cmp
orl
pop
loop
push
add
bound
jne
insl
xor
stos
adc
pop
dec
sbb
cmp
and
jnp
push
es
push
bound
push
movl
nop
push
add
mov
sbb
mov
and
or
inc
js
scas
jle
rcrb
js
xor
or
orl
shrb
fwait
sar
mov
and
sbb
mov
jle
add
ret
ljmp
scas
divb
and
mov
jne
fnstcw
mov
and
clc
jg
fs
std
fisttpl
jge
jmp
movq
movaps
aaa
out
push
enter
shlb
jle
xor
stos
dec
mov
lret
je
mov
fistps
test
pusha
jge
repz
or
jg
notb
xchg
and
or
and
in
add
adc
jge
aam
ret
or
add
adc
add
mov
fadd
roll
cmp
imul
imul
pop
enter
mov
add
sub
adc
dec
sbb
cpuid
fistpl
xchg
jmp
xchg
imul
mov
ja
stos
loopne
sub
add
sahf
push
xor
xor
sbb
ret
mov
addb
adc
in
test
in
dec
dec
pop
xor
outsb
rcrl
clc
addr16
ret
jge
mov
jge
pop
enter
pop
pop
sbb
test
adc
je
daa
loope
subb
movsl
call
ss
ret
test
jb
neg
sbb
cmpsb
mov
rorl
jmp
jle
pop
mov
or
rorl
xor
bound
stos
mov
dec
ljmp
inc
ror
or
pop
adc
test
outsb
or
inc
jno
imul
adc
cmp
inc
add
push
roll
nopl
andb
add
and
pop
and
cmovs
jle
mov
mov
test
mov
stc
or
rep
jmp
xor
int3
mov
data16
cmp
test
jns
lea
push
or
and
inc
pop
imul
add
add
mov
int3
lea
dec
add
lret
movl
imul
mov
or
push
jo
push
jg
push
dec
mov
mov
call
cmp
in
lock
loop
iret
repz
clc
clc
cld
push
mov
push
lock
fldenv
mov
lods
push
mov
lcall
pop
sti
sbb
insl
and
push
fcompl
jbe
push
lea
jl
cld
or
scas
loopne
or
xor
sub
pop
mov
loopne
daa
in
xchg
xchg
xchg
stc
sub
pop
nop
inc
xor
out
push
push
jl
mov
out
add
push
ficoms
push
out
push
add
nop
dec
dec
lea
dec
rcrl
add
push
sahf
repz
push
in
push
hlt
cld
pop
jl
out
xor
daa
xor
sbb
sahf
out
sbb
sbb
out
sahf
out
adc
or
jns
or
inc
movsb
loop
fiadds
dec
push
pop
insb
xor
lds
push
push
add
pop
cmpxchg
daa
lock
nop
push
mov
test
test
nop
cmp
xor
test
mov
loopne
repnz
fbld
pop
divl
cmp
jnp
mov
sbb
cmp
or
mov
xchg
push
inc
add
adc
repnz
mov
inc
inc
add
fldt
ret
mov
jmp
jp
je
mov
sub
rorl
sahf
mov
decl
jb
ja
cmp
sbb
mov
pop
and
lret
fidivrl
sbb
sbb
insl
je,pn
cmpsl
mov
sarl
mov
push
sbb
int
arpl
clc
or
popf
shrb
hlt
aam
xor
xor
and
fdivrp
sub
hlt
fcomi
arpl
fmuls
inc
sub
sti
or
sub
cmp
xchg
and
dec
test
add
adc
xchg
inc
mov
jo
mov
dec
push
call
cld
mov
adc
inc
cmp
jne
inc
cmp
inc
sbb
sar
lods
and
adc
mov
adc
inc
bound
pop
mov
sub
adc
jmp
and
inc
je
xchg
cmp
sbb
dec
sahf
pop
inc
push
add
inc
cmp
cmp
add
sarl
or
dec
rcrb
aaa
xchg
cmp
sbb
adc
cmp
push
lret
loopne
in
loope
es
or
mov
or
pop
xchg
addb
push
jae
addb
and
inc
addl
inc
and
aas
addr16
jmp
pop
or
cmp
daa
dec
dec
add
imul
sarl
sub
jnp
inc
loopne
cmp
jno
shl
shlb
dec
aas
insl
imul
sbb
or
or
inc
pop
cmp
mov
adc
push
inc
push
fmull
rol
inc
inc
cmp
aam
lret
jne
das
loopne
push
sbb
mov
lock
jnp
sub
push
jnp
sub
aad
push
lods
lods
lea
out
andl
dec
les
call
int3
and
xchg
repnz
xchg
outsb
mov
fwait
scas
or
add
mov
testb
or
cmpl
add
mov
adc
mov
ret
pusha
hlt
and
das
and
rcrb
inc
jne
cmp
lret
adc
subb
mov
test
add
add
shrl
and
add
outsb
sub
or
inc
cmp
jecxz
jmp
jge
mov
stc
and
dec
into
xor
rorb
push
sub
into
xor
fmuls
or
sbbb
jmp
or
mov
inc
ds
or
aaa
add
in
mov
jb
into
jmp
mov
dec
mov
mov
dec
dec
ffree
mov
mov
inc
cmp
jb
lret
ret
xchg
cmc
adc
jbe
and
movsb
push
jmp
xor
rol
pusha
and
mov
sbb
cmp
pop
add
jg
test
mov
int3
lcall
jb
lea
add
mov
xorl
pushl
push
cld
jne
mov
push
cmp
jne
data16
out
es
jne
call
in
cmp
les
andl
cld
mov
incl
dec
jmp
adc
jmp
sbb
repz
std
jmp
cld
cld
ret
iret
into
fucomi
pmaxub
popa
mov
pop
scas
jb
push
push
adc
outsl
scas
movb
shr
stc
add
jb
jo
push
scas
push
or
scas
popf
shrl
enter
adc
testb
pop
mov
add
dec
adc
cmp
jae
scas
lcall
movl
cmp
push
insl
std
or
and
mov
push
sub
inc
add
and
cmp
cmpsl
loopne
or
cmp
sbb
clc
mov
mov
cs
dec
add
ret
add
or
into
and
pop
push
adc
adc
cmc
cli
add
and
cs
add
ja
and
sahf
mov
mov
in
andb
das
and
jae
data16
fcoml
and
jecxz
jle
push
push
pop
div
addb
cmp
daa
push
xor
mov
jne
pop
iret
pop
xor
lods
pop
bound
sub
pop
adc
push
mov
pop
clc
pop
cmp
ret
add
jns
imull
cmp
and
or
nop
gs
pop
adc
xchg
or
inc
daa
mov
sub
int
mov
inc
mov
xchg
gs
int3
stos
rclb
push
jmp
cmc
hlt
adc
addb
jo
push
sub
movsb
sub
or
leave
xor
jp
pushf
add
sti
outsb
or
jl
or
lods
push
mov
mov
lea
cmpl
inc
fs
jmp
inc
fstl
out
inc
rorb
cmp
jne
addl
add
add
sub
mov
dec
cmc
out
sbb
push
adc
cmp
in
insl
add
push
xor
frstor
outsb
rorl
mov
or
cmp
and
or
fnstsw
adc
dec
add
add
lds
sbb
xor
adc
dec
lret
or
test
push
mov
jg
loope
jmp
fidivs
lret
sub
cmp
cld
push
imulb
ja
xor
dec
adc
sbb
sbb
or
jb
movsb
mov
and
cmp
sbbl
je
push
or
lock
loopne
ja
les
in
adc
frndint
das
mov
inc
cmc
mov
sbb
push
add
xor
or
outsl
or
jbe
inc
or
arpl
je
dec
pop
je
adc
and
bound
mov
popa
int
movsl
das
in
rolb
sbb
movsb
or
pop
aaa
shr
cmp
cmp
popa
inc
dec
loop
add
cs
add
mov
fisubl
sub
sub
adc
rorl
icebp
add
lahf
out
imul
movhps
jp
jge
stos
mov
shr
and
fimull
loopne
test
adc
mov
jno
jbe
push
cmpsb
adc
or
dec
jp
andl
iret
data16
jne
div
test
jmp
enter
rcrb
push
mov
adc
mov
cmp
lods
pop
shlb
push
adc
aas
mov
inc
inc
mov
adc
fdivrl
and
shll
adc
sbb
cmp
and
jb
pop
mov
ljmp
mov
mov
ds
mov
lret
or
call
add
add
sbb
ja
cmp
push
aas
adc
mov
push
jmp
xor
mov
dec
shll
cltd
iret
push
cmp
dec
cmp
xchg
sub
push
dec
push
movsb
ret
xchg
ds
clc
stos
and
adc
int3
decb
loopne
test
loope
les
push
adc
or
add
add
inc
addb
ret
pop
frstor
xor
js
loopne
jp
sub
or
fwait
cmp
sbb
xchg
addb
dec
adc
aam
mov
enter
sbb
pop
clc
out
xchg
adc
fidivs
sub
add
inc
mov
xchg
add
jmp
sti
sbb
call
je
int3
stc
sub
in
push
in
push
test
ja
push
dec
ss
sbb
adc
fstpl
cwtl
and
scas
popf
fwait
clc
push
mov
and
inc
or
dec
xor
push
incb
push
mov
lods
mov
cvtdq2ps
gs
add
mov
cmp
mov
jecxz
insb
sbb
or
xchg
mov
dec
adc
push
jmp
pop
sbb
js
mov
adc
mov
push
push
sub
xadd
pusha
push
incb
imul
mov
inc
stc
adc
loopne
insb
cld
and
mov
adc
add
and
dec
pop
xchg
sbbl
and
icebp
add
mov
mov
mov
daa
xchg
inc
mov
aam
jge
or
dec
and
xor
adc
mov
movb
roll
es
sub
leave
sub
mov
pop
ja
add
xchg
push
clc
push
push
push
rolb
popa
icebp
jno
imul
push
movsl
push
sbb
or
adc
mov
rorl
fdivl
adc
ja
cmpl
loopne
xor
push
pop
mov
add
negb
ja
ficomps
push
ss
cltd
mov
test
shrb
inc
shrb
les
jle
push
addr16
addr16
aad
push
popf
aaa
push
pop
decl
pop
clc
adc
push
pop
ds
and
ss
or
les
jb
pop
add
pmaxub
inc
shll
es
or
in
xor
repnz
add
mov
jl
xor
aad
or
and
shlb
jo
mov
cmp
nop
xor
sub
push
mov
outsb
push
sbb
inc
jae
cmp
pop
je
inc
mov
push
rcrb
adc
push
add
sbb
and
add
adc
pushf
adc
mov
mov
push
dec
add
popf
pop
sarb
fmuls
mov
xchg
mov
sub
push
in
pop
xor
xor
dec
ljmp
sahf
mov
and
xlat
test
sub
fdivr
add
push
cmpsb
fdivrl
push
cwtl
xor
sub
movsb
jnp
push
cld
mov
call
xchg
xor
cmp
sub
mov
mov
movsl
in
inc
rcll
orl
or
mov
sub
mov
mov
cwtl
mov
push
pop
sbb
test
out
mov
jnp
and
push
jbe
fcompl
push
mov
jb
mov
in
pop
ret
int3
add
clc
mov
mov
cmp
jne
or
dec
add
lcall
je
jns
rcr
xor
inc
push
sub
shrb
sub
lds
nop
sbb
rcrl
popfw
jbe
add
xchg
mov
jnp
loop
out
push
in
out
movsb
mov
mov
push
mov
add
mov
push
jmp
and
push
pop
cmc
inc
cwtl
add
inc
js
loope
pop
inc
dec
pop
fimuls
fidivs
mov
fwait
jne
mov
mov
test
bound
push
push
jbe
inc
shrl
call
and
in
add
insl
jg
psubw
sarb
xchg
ret
jp
and
fnstcw
dec
sti
or
inc
xor
ss
pop
adc
push
and
inc
cs
or
and
dec
loop
or
or
aaa
mov
cmp
add
pop
push
inc
jp
inc
mov
push
bound
enter
sub
andl
je
mov
jne
cmp
xchg
push
add
sub
or
add
dec
xchg
mov
xchg
loop
les
bound
push
outsb
inc
mov
jae
sub
mov
adc
pop
jno
add
mov
push
cmp
fadds
adc
mov
out
pop
iret
push
push
pop
jle
testl
add
sub
je
fisubl
sbb
repz
imul
add
add
repz
daa
add
jnp
sbb
adc
pop
or
cmpsl
add
cmp
je
lret
add
jns
add
flds
xor
mov
push
pop
and
enter
push
pop
rclb
jb
or
inc
push
nop
out
or
addr16
jns
sub
jns
push
nop
or
or
xchg
cmpsb
repnz
add
or
repnz
or
add
sbb
cwtl
push
push
enter
ja
push
cvtdq2ps
inc
push
adc
pop
adc
inc
push
fcoms
fwait
sub
adc
ret
enter
adc
adc
mov
add
adc
adc
aaa
jb
cltd
adc
inc
push
js
push
push
and
sbb
push
pop
pop
enter
xor
sbb
lcall
sbb
push
nop
out
call
cmp
push
inc
sbb
sbb
test
pop
sbb
repnz
cmp
add
push
pop
enter
push
pop
pop
jne
mov
ret
sub
cmp
push
push
fldt
xchg
sahf
add
add
cmp
xchg
jg
loopne
fsubs
repz
call
push
scas
cmp
in
in
jno
repnz
sub
rol
lea
fdivp
xor
aad
cmp
push
nop
out
mov
mov
jns
out
jb
pusha
shlb
call
mov
aaa
call
mov
out
cwtl
jmp
ror
repnz
enter
in
in
mov
cltd
mov
and
enter
out
jb
jb
jge
sbb
inc
lcall
inc
push
nop
lock
icebp
nop
addr16
pslld
or
pmaxsw
repz
hlt
hlt
rorl
pusha
jnp
push
fdiv
fwait
mov
iret
enter
testb
divl
dec
push
jns
std
clc
clc
clc
cltd
cmpb
pop
enter
cld
cli
cli
iret
push
and
and
sbb
stos
cld
in
fcoml
je
cld
push
aad
mov
ss
xor
repz
leave
std
sbb
adc
ret
dec
rorb
sub
add
icebp
popa
dec
lahf
adc
ljmp
pop
xor
lock
push
inc
es
jecxz
ja
inc
mov
in
push
inc
push
fdiv
inc
and
daa
insb
nop
or
sti
out
out
cltd
inc
pop
and
outsb
call
das
xchg
sti
sub
sbb
pop
jmp
jmp
mov
cli
in
add
xchg
cmp
cli
popf
cli
rclb
sbb
imul
or
in
repnz
das
cli
push
cli
push
cmp
jmp
ss
repz
sar
pop
and
push
stc
sbb
pop
xor
fstpl
cwtl
xlat
movsl
test
fwait
mov
add
stc
or
pop
and
clc
cmp
lret
sti
sti
enter
cltd
mov
mov
inc
adc
push
in
sbb
cmp
and
xor
sub
mov
fldl
xchg
pop
icebp
mul
pop
rolb
scas
idivl
or
mov
out
out
and
insb
out
out
and
mull
negl
sti
imul
ljmp
negb
mov
imulb
inc
add
sbb
popa
imul
cmp
pop
pop
and
push
adc
add
sbb
rclb
jno
les
xchg
cmc
loop
repnz
pop
xlat
movsl
test
div
jns
jne
cwtl
fwait
and
jbe
inc
clc
clc
jecxz
sbb
hlt
jno
imul
loop
push
xchg
hlt
pop
jne
adc
xchg
push
hlt
sbb
das
pushw
data16
jns
hlt
idivl
jo
sti
push
or
pusha
adc
ds
fsubrs
push
iret
loope
push
loop
and
mov
repz
inc
or
test
mov
inc
repz
push
jno
andl
xchg
xchg
mov
bnd
imul
popf
dec
push
mov
xchg
repnz
pop
jo
sbb
cs
in
cmc
je
dec
push
and
add
addl
pop
loope
sbb
xchg
icebp
icebp
js
testb
nop
jo
icebp
jb
xchg
icebp
cmp
sub
cmc
cmc
daa
xchg
inc
fdiv
add
jecxz
in
test
jns
mov
popf
lock
jb
sbb
cmc
jne
repnz
xorl
jne
and
push
lock
xchg
scas
and
test
cmp
test
imul
fiaddl
sub
out
scas
mov
in
cmovno
push
repnz
add
add
mov
enter
dec
add
adc
fwait
push
jnp
and
adcl
or
dec
add
jmp
in
sbb
dec
add
push
pop
inc
cmp
pop
fsin
pop
ljmp
fcompl
call
mov
popa
insl
push
dec
pop
jp
xor
int
ficoms
push
leave
pop
jmp
dec
insb
ds
repz
push
lahf
push
cmp
mov
stos
pop
int3
pop
xor
sbb
int
repz
lea
pop
loop
divl
repnz
push
push
dec
add
push
or
and
loop
or
mov
push
shlb
pop
pop
clc
jmp
in
or
lock
cld
test
jg
pushf
jge
push
sbb
push
add
pop
pop
rcrl
mov
nop
cmp
adc
orb
hlt
pop
and
add
and
sbb
fdivrs
fmuls
push
fldt
and
add
insb
sub
cs
loopne
lock
xor
test
rcrl
add
add
inc
jl
jge
mov
movsl
xchg
loopne
loope
sbb
push
les
sahf
jge
jbe
orb
inc
xchg
jo
inc
leave
ds
in
inc
cltd
shrb
andps
adc
and
cltd
jns
es
pop
mov
inc
test
or
add
xchg
movsb
and
and
ja
mov
mov
jb
pop
and
and
test
subb
inc
inc
inc
inc
sbbb
ret
cmp
loopne
test
enter
out
cs
aad
imul
test
push
inc
shlb
iret
and
hlt
ret
js
in
popa
lock
lret
push
cmp
dec
outsl
cmpsb
or
and
inc
test
xor
je
pop
shrl
mov
sub
inc
inc
pop
cmp
lds
lods
enter
add
xor
orps
and
dec
pop
inc
lods
inc
adc
and
pop
loop
dec
stos
adc
leave
shlb
repz
mov
jmp
mov
add
dec
jne
jo
sub
les
in
cmc
add
or
in
push
add
adc
adc
adc
fcoml
push
stc
aad
ds
clc
lret
rol
jg
and
mov
mov
inc
inc
cmp
push
push
jmp
sbb
ja
ret
out
jns
mov
dec
mov
aas
incb
or
push
mov
pop
pop
push
inc
mov
inc
pusha
cwtl
ja
stos
adc
mov
adc
add
mov
jl
sbb
std
testb
les
cwtl
add
pop
or
clc
lods
add
cmpl
out
adc
fwait
add
jmp
stos
add
testb
mov
push
push
sahf
int
adcb
ret
in
mov
shrl
test
push
push
or
leave
adc
cmp
stos
and
pop
jo
push
outsl
adcb
in
sub
enter
or
mov
xor
jle
aaa
sbb
mov
adc
mov
xchg
mov
incl
inc
decl
jne,pn
loop
test
xor
mov
xchg
decl
add
or
inc
mov
or
add
xchg
mov
xchg
mov
mov
adc
adc
jmp
cmp
jae
dec
mov
jecxz
stos
xchg
pop
jae
pop
jbe
cmp
icebp
mov
dec
in
push
sbb
pop
sub
adc
lcall
pop
jne
dec
xor
push
jg
mov
test
sbb
and
add
dec
push
fsts
test
je
or
dec
dec
je
push
push
jne
pop
pop
test
movb
insb
adc
adc
es
mov
pop
decb
push
movsb
stc
jle
push
mov
inc
pop
mov
cmp
das
sbb
inc
push
add
jb
xor
cmp
fs
sbb
stc
adc
jl
mov
xor
add
add
in
pop
inc
repz
dec
push
fcmovbe
jl
les
mov
inc
sbb
mov
mov
hlt
add
ss
jmp
cmp
inc
enter
ja
insl
or
scas
mov
aas
jge
push
push
lcall
test
ret
btr
xor
xchg
inc
out
cmp
pop
popa
sub
mov
adc
xchg
or
sbb
xor
pop
aas
mov
fs
add
lret
imul
push
shrl
push
mov
or
insl
in
call
dec
lds
or
je
insb
sub
sbb
jecxz
repnz
sbb
xchg
jae
mov
or
inc
or
add
or
jg
xlat
loop
add
sti
pop
adc
pop
cmp
pop
sub
add
hlt
inc
xor
adc
pop
cltd
mov
add
jae
cmp
int3
in
movsb
loop
mov
push
mov
loope
push
jmp
jge
out
icebp
jl
je
sbb
add
jno
add
mov
test
adc
outsl
mov
sub
int3
dec
jo
mov
je
dec
inc
add
dec
jne
mov
fldt
sub
mov
bound
lret
cs
cltd
test
adc
insb
lock
js
pop
popl
mov
lods
sti
and
xchg
or
inc
mov
sub
cmp
pop
jle
xor
adc
lcall
mov
inc
jmp
push
pushf
jae
aam
sub
or
dec
pop
aaa
adc
ret
push
mov
lods
push
mov
cmpb
sahf
mov
and
cmpl
cli
and
jge
add
mov
shlb
hlt
mov
xor
push
adc
push
mov
cmp
inc
adc
or
out
pusha
iret
repz
add
dec
jp
xor
push
jae
push
mov
cmpsl
pushl
gs
dec
ljmp
rclb
sbb
add
push
pop
or
pop
or
fsubs
sbb
hlt
dec
js
loop
ret
sbb
fs
push
mov
aam
add
jecxz
jb
push
inc
jg
cmp
je
gs
imul
test
pop
mov
jle
jmp
scas
pop
bound
inc
cmp
je
xchg
mov
mov
cs
cli
orb
adc
add
rclb
fidivrl
dec
je
lahf
and
dec
popa
xor
push
mov
jno
dec
sbb
insb
mov
out
sub
mov
incl
pushl
clc
hlt
push
mov
push
inc
sbb
les
sbb
int3
fwait
cmpsb
test
lret
pop
sbb
lods
mov
mov
push
insl
pusha
shlb
jnp
popa
mov
sbb
or
xchg
add
loopne
dec
push
jo
sub
movl
ljmp
addr16
test
jbe
aas
lock
test
cmp
mov
lahf
pop
cmp
je
mov
jo
mov
add
int3
pop
mov
inc
or
add
push
orl
inc
int
movsl
sub
enter
push
roll
mov
in
cs
sbb
dec
mov
jb
jns
mov
add
cs
orb
leave
mov
loopne
fcoml
fiaddl
inc
add
pop
fcom
iret
add
jl
and
mov
popa
bound
repnz
jmp
dec
or
pop
cmp
pusha
rcpps
cs
dec
jmp
dec
call
mov
ror
xor
cs
dec
movsl
pop
and
pop
iret
shll
stos
push
nop
push
sbb
sarl
sub
in
pop
call
bound
inc
pusha
lcall
in
out
sbb
and
xchg
and
adc
cwtl
subb
jbe
ret
jl
cmp
push
jns
and
pop
daa
jne
lcall
sbb
cmp
inc
sbb
push
mov
mov
or
adc
int3
fs
pop
and
and
inc
push
jmp
rorl
cmp
ja
or
dec
jg
and
inc
inc
rcrb
int3
mov
inc
inc
shl
cwtl
lods
ja
or
sbbl
or
cltd
pop
add
lods
jmp
mov
clc
xor
jne
out
and
shl
out
jmp
ja
inc
jmp
aas
inc
loop
dec
pop
fidivl
add
xor
pop
pop
jb
in
mov
mov
inc
cs
jmp
in
add
add
pop
adc
fidivrl
pop
fldz
push
xor
adc
repnz
jo
xchg
lock
adc
inc
adc
cltd
aaa
pop
lret
sub
fdiv
mov
pusha
hlt
add
cli
push
mov
rclb
loope
push
punpckhdq
outsb
fadds
mov
jge
dec
or
insl
push
arpl
jmp
pop
mov
xor
arpl
xchg
push
jno
test
pop
xchg
pop
fdivr
mov
popa
test
push
hlt
add
cmp
push
std
add
les
cmp
repnz
pop
add
cmpsb
inc
or
cs
test
stc
sbb
xor
into
ds
pop
or
pusha
xlat
cld
jmp
add
or
into
popa
push
xchg
out
inc
mov
outsb
jbe
js
adc
cmp
jle
jbe
and
push
mov
jecxz
dec
outsl
shrb
jae
sbb
les
inc
bound
js
xor
imul
fs
cmpsb
sbb
and
pop
pop
arpl
add
mov
push
enter
int
popf
sahf
enter
and
inc
int3
or
rcl
jl
xor
int3
rcrl
xor
and
enter
and
pop
sub
outsb
scas
xchg
add
mov
xor
sbb
maskmovq
mull
lcall
cmp
sub
movsb
rorb
adc
add
ret
bnd
sbb
adc
adc
imul
int3
push
xchg
sub
fs
add
out
sub
push
sbb
out
sbb
mov
ficoml
test
mov
dec
js
nop
ja
mov
sub
inc
push
rclb
into
imul
jo
subl
add
dec
xchg
hlt
inc
or
jle
lods
hlt
sbb
jge
lock
mov
sbb
ja
insl
sbb
sbbl
js
mov
sbb
or
fistl
push
sbb
scas
add
pop
push
outsb
cmpb
inc
inc
pop
jp
xor
dec
scas
or
fistps
jg
adc
hlt
mov
push
imul
lcall
add
rcll
pop
lods
icebp
cmp
push
pop
xor
rclb
sub
sub
sarl
shlb
fcmovbe
lock
fadds
mov
fcomps
dec
or
call
nop
pop
jbe
push
inc
cli
mov
ds
push
incl
jge
test
fs
push
sub
sub
xchg
or
test
cmp
mov
push
ret
inc
mov
adc
frstor
add
push
cmpl
push
ret
jmp
add
mov
jo
nop
jns
jecxz
mov
lods
insb
push
lea
loopne
out
into
add
cmp
call
inc
fisubrl
call
adc
xor
jb
pop
add
adc
shrl
push
movsb
sbb
lods
inc
and
jnp
je
cmpsl
cli
or
or
push
dec
or
dec
aad
mov
inc
jecxz
sub
jne
js
mov
sti
les
dec
lea
dec
xchg
loope
sbb
xchg
pop
es
push
sbb
mov
cli
push
lock
xor
jl
jg
pop
fcomps
mov
cmpsb
jle
andl
adc
and
sbb
hlt
jmp
jle
leave
or
movl
push
repz
or
paddd
out
and
push
call
push
or
int
xor
sbb
pop
test
or
orb
and
pop
cld
mov
cmp
icebp
outsb
push
sub
lods
lret
test
jle
mov
mov
out
cwtl
xchg
xor
adc
out
iret
lret
cmp
push
or
lret
lret
sbb
sbb
add
popl
mov
mov
test
push
movl
cmp
pop
movsl
test
xor
xor
pop
sub
jge
add
mov
adc
inc
push
pop
dec
test
fidivl
sub
loopne
call
add
in
and
mov
js
lret
cld
sub
mov
or
int
nop
mov
popa
sbb
cmp
or
sub
sub
jae
aam
lock
das
or
add
shl
or
shlb
sub
pop
or
inc
pushf
pop
sub
mov
push
decl
testl
add
xor
xchg
imul
call
lcall
mov
es
jne
test
xor
push
movb
clc
pushf
lea
fisubrs
or
or
or
popf
or
pop
inc
push
imul
fdivr
test
push
repnz
push
dec
out
sbb
fdivs
std
out
fidivs
push
pop
inc
sahf
mov
pop
mov
and
int
incl
dec
push
sbb
push
mov
and
je
and
cmp
xchg
outsb
lock
aad
jmp
mov
test
dec
xchg
mov
fstp
mov
cmp
and
sbb
push
imul
add
jmp
cmp
push
and
add
jmp
add
popa
test
dec
ret
adc
pusha
fiaddl
je
mov
ja
mov
mov
insb
or
ja
cmp
or
mov
mov
mov
or
faddl
push
add
sbb
or
sbb
jno
push
lret
sahf
lret
push
mov
pop
sbb
out
insb
push
hlt
ret
outsb
fbld
call
mov
xor
stos
lods
mov
dec
shll
push
sub
aam
cmp
xchg
cmp
std
jne
das
sarl
add
jmp
sub
stos
aaa
je
or
cmp
iret
add
xchg
xor
xchg
add
call
cmp
sbb
cmp
aad
mov
mov
mov
or
xor
adc
std
fidivl
push
jmp
fs
movsb
pop
pop
push
push
shl
push
add
fsubl
push
out
dec
xchg
adc
cmpsb
push
inc
rolb
jnp
movsb
push
inc
jae
cmp
jbe
jmp
mov
test
push
jnp
aam
cmp
leave
inc
jo
call
imul
popa
popf
loop
push
mov
aaa
jmp
xor
in
dec
loopne
sub
cld
jmp
mov
mov
cmp
mov
lea
ljmp
push
scas
jne
outsb
incl
jg
adc
add
jb
mov
xor
inc
inc
mov
push
push
std
fistpll
inc
adc
mov
inc
mov
inc
inc
inc
dec
jne
mov
es
inc
mov
outsl
xchg
jl
sbb
push
fdivp
mov
outsb
push
jg
or
inc
push
mov
inc
cld
or
inc
dec
jne
mov
movsb
mov
fdivp
pop
cltd
add
gs
jnp
test
xor
mull
push
lcall
and
and
call
or
push
adc
idivl
pop
push
mov
inc
xchg
sbb
add
dec
sarb
inc
sub
pop
sbb
sbb
movsb
jo
popa
popa
outsl
and
inc
sbb
add
inc
sbb
jbe
inc
lret
sbb
fsubrs
sub
xlat
cli
jo
jmp
ljmp
or
xchg
std
and
fs
push
or
ret
mov
std
outsb
xor
lret
pop
sub
jmp
xor
add
mov
mov
add
cmp
pusha
push
scas
mov
push
jmp
adc
jno
es
jb
jmp
xchg
inc
data16
push
inc
and
loope
add
add
out
sub
lret
mov
adc
dec
pop
movl
and
rcr
sub
outsl
cmp
es
pop
xor
or
pop
sbb
rcll
xor
ds
cmp
les
cvtps2pi
imul
sbb
sub
inc
xchg
int3
mov
mov
popa
and
je
xlat
xor
cmp
and
push
jne
cld
arpl
aaa
out
jle
or
push
jno
in
stc
cmpl
add
mov
rolb
pop
cld
rolb
sub
adc
dec
or
push
add
in
lcall
and
andl
loopne
add
mov
lea
mov
mov
aaa
cmpl
insb
push
cmpsb
or
jo
aam
movsl
sub
or
shrl
sub
sbb
clc
adc
xor
adc
push
mov
dec
test
stos
sub
push
adc
xor
sti
in
or
pop
jbe
inc
sahf
lock
lock
dec
jle
sbb
add
pushf
sub
loopne
push
les
push
shlb
xchg
and
jb
cmpsl
testl
push
and
push
pop
mov
sbb
int3
push
xchg
mov
jne
sbb
push
cmp
shl
xlat
ljmp
mov
add
jns,pn
hlt
lds
sbb
ljmp
fisubl
cmc
dec
mov
leave
mov
xchg
fisttpl
add
call
sub
mov
dec
inc
inc
mov
movsb
cmp
push
push
push
mov
or
aas
push
loope
mov
sbbl
cs
mov
inc
adc
icebp
pop
cmp
inc
mul
enter
cwtl
and
sbb
cmp
sti
lret
popa
cmp
insb
push
cld
push
jo
pop
gs
rcl
addl
test
jecxz
mov
movsb
xchg
js
js
add
imul
in
in
jae
in
xchg
test
insb
jg
imul
sub
sbb
outsl
mov
dec
fistpl
push
xchg
ja
test
add
or
push
into
fistpl
or
push
push
movsb
pushf
test
sub
lea
orl
xchg
or
out
add
xor
shlb
stc
je
mov
frstor
add
push
inc
imul
and
rcrb
sub
cmp
jb
pop
inc
inc
dec
sbb
xchg
and
mov
push
in
cmpsb
ud0
push
dec
mov
and
jbe
ljmp
pop
cmp
je
jle
sbb
das
test
or
sub
or
adc
js
mov
lds
movsb
ljmp
lret
enter
cwtl
test
cmp
xorl
pushf
cmp
lahf
cmpsb
and
daa
test
dec
jno,pt
xchg
dec
adc
mov
pusha
aaa
adc
mov
xchg
movsb
jb
jbe
inc
mov
or
mov
xchg
hlt
fnstcw
popf
mov
push
pop
xchg
sbb
xchg
mov
enter
sbb
pop
das
push
mov
shll
repnz
sub
andl
rorb
jno
cmp
mov
das
mov
nop
xchg
xor
sbb
or
fcoml
lods
popf
aam
sarb
clc
mov
in
popf
enter
ror
mov
test
or
xchg
add
sarl
enter
dec
cld
adc
cmp
pop
aam
xchg
add
inc
mov
push
nopl
jno
test
loope
mov
popa
and
pop
das
movsb
popa
inc
push
pop
jno
movsb
xorb
loopne
test
pop
sarb
mov
adc
inc
mov
add
clc
lds
bts
jmp
mov
cld
pushf
xor
es
mov
jae
js
loop
pusha
loop
jae
adc
in
clc
hlt
aas
push
adc
mov
xor
pop
mov
daa
loopne
in
in
jns
mov
xchg
or
push
shl
sahf
out
mov
mov
loopne
lahf
fldcw
imul
pushf
pop
adc
adcb
nop
test
pop
nop
xchg
push
mov
repnz
inc
adcb
adc
inc
loopne
cmp
dec
push
pop
fs
and
and
inc
nop
or
mov
lahf
andl
bound
push
cs
push
add
xchg
adc
mov
fadds
adc
sub
sbbb
add
adc
dec
or
inc
mov
push
mov
dec
cmp
jge
inc
mov
add
test
movsb
stos
test
ds
inc
imul
add
xlat
or
pop
or
aam
and
adc
jle
adc
loopne
lds
and
dec
lahf
and
or
jmp
and
jno
mov
movsb
dec
aas
dec
mov
add
sbb
lcall
mov
dec
or
daa
add
popf
mov
roll
orb
testl
testl
popa
je
push
dec
dec
sahf
insb
loopne
adc
add
enter
dec
jae
jl
or
sub
movl
pop
imul
sbb
mov
push
or
and
loopne
and
adc
and
sbb
ja
pop
jbe
push
lcall
xor
lock
and
mov
aam
scas
jmp
notb
pop
sbb
xor
and
inc
addr16
outsl
push
scas
shll
ret
sub
orb
mov
push
sub
testl
js
xor
sub
je
movl
sub
clc
inc
sbb
fmuls
cltd
fmuls
hlt
jecxz
rol
xchg
xchg
rcrl
mov
inc
and
cmp
dec
in
es
mov
jl
sub
sub
js
push
or
adc
adc
jno
push
jecxz
fisttpll
inc
sbb
imul
cmpsl
adc
mov
ds
stos
cmp
sub
fs
inc
stos
repnz
nop
sbb
lea
inc
cmp
cli
or
addr16
ficompl
adc
test
pop
xchg
push
test
jecxz
jo
loopne
jmp
inc
loopne
js
fs
cmp
xor
fstps
je
dec
sbb
test
add
inc
shlb
pop
sbb
and
ficomps
sub
ret
xor
inc
dec
sbb
pop
mov
sbb
jg
inc
or
test
adc
clc
xchg
rolb
or
and
push
mov
mov
dec
shl
inc
fisubrl
mov
adc
sub
ja
mov
inc
cltd
adc
jbe
push
inc
orl
enter
pop
xchg
in
or
inc
cld
push
adc
dec
sbb
mov
pop
divl
in
xor
add
ds
mov
loope
dec
xchg
mov
fdivrs
lret
lcall
in
hlt
dec
ljmp
or
mov
push
sub
pop
pop
cmp
shl
add
mov
add
or
and
dec
xchg
mov
ret
inc
mov
mov
cwtl
sbb
xchg
push
push
lock
push
mov
mov
dec
jmp
and
gs
jo
repz
add
in
pop
add
decl
mov
dec
and
mov
pop
movsl
call
nop
xchg
dec
roll
jle
sub
adcb
out
mov
inc
push
push
mov
insb
cld
insl
inc
dec
jg
jne
repnz
jmp
pop
sbb
test
divl
jns
outsl
cmpl
pop
dec
mov
pop
mov
movsb
mov
xor
xchg
jo
xor
lcall
pop
sub
mov
in
mov
sbb
mov
jne
xor
cmp
adc
lods
mov
sti
lods
xor
push
or
leave
mov
leave
cmp
fbld
mov
lcall
adc
rcl
and
xchg
mov
adc
loopne
pop
ja
mov
movsbl
cmp
pusha
loopne
push
sbb
pop
sbb
pop
sar
pop
mov
mov
xchg
add
push
mov
cmpsb
push
lea
lret
in
or
aam
clc
fcom
icebp
cmp
lret
mov
mov
add
mov
je
sbb
mov
mov
push
pop
add
sub
icebp
mov
int
nop
cli
xchg
jnp
add
mov
adc
flds
dec
aam
aas
mov
add
sub
push
imul
or
inc
or
ja
movsl
cltd
nop
imul
cmp
or
movsl
hlt
insl
push
and
push
or
sbb
int
inc
insb
je
lock
fimuls
subb
js
mov
add
in
fidivl
mov
div
ss
or
xor
mov
xchg
xchg
xchg
aaa
dec
xor
movsl
pushl
cmp
in
jmp
or
mov
int
incl
outsl
cmc
jne
dec
xor
jmp
loope
xlat
cli
push
imul
push
stc
adc
je
pop
sbb
pop
jecxz
lcall
or
sbb
jnp
clc
dec
je
cmp
adc
or
in
imul
nop
mov
ret
add
hlt
cmp
or
je
loop
and
push
ds
addr16
push
jae
mov
jl
sbb
xchg
xchg
aad
cmp
mov
ret
adcl
ret
loope
mov
and
xchg
int3
add
test
fmull
or
es
xorl
popf
jbe
xchg
pop
push
mov
or
sbb
insl
pusha
js
push
cmp
push
xor
shlb
negl
push
xchg
div
pusha
addb
dec
lret
push
sbb
mov
aam
dec
add
mov
outsl
aaa
push
jmp
mov
pushl
in
aas
push
insl
arpl
and
jge
lcall
mov
inc
xorl
pop
mov
cmp
jecxz
and
mov
add
dec
popa
je
mov
sarb
push
sbb
das
andl
push
push
ss
add
add
rcll
add
addr16
push
je
cmp
je
test
mov
enter
mov
xor
cmp
sbb
imul
add
cmp
add
adc
addr16
xchg
enter
jecxz
jbe
ret
scas
aaa
sub
push
add
ret
nop
sbb
adc
addr16
mov
jmp
cmp
jle
insl
js
dec
ja
mov
incl
adc
xlat
mov
mov
mov
ja
xor
jl
call
cmp
xor
adc
cmpsb
outsb
cmc
mov
clc
mov
lea
and
mov
mov
mov
out
enter
lea
stc
lcall
pop
xchg
cwtl
inc
scas
popf
or
sbb
dec
nop
lcall
jne
and
xchg
gs
cmp
mov
call
mov
addr16
decb
mov
dec
inc
daa
add
and
inc
in
jmp
push
pop
data16
push
xor
adc
inc
cmp
push
jne
push
sbb
pop
sbb
inc
push
xchg
cmpsb
jmp
or
sar
popa
int3
je
cltd
mov
sub
test
pusha
pop
jl
jae
adc
in
mov
in
xchg
adcb
pop
mov
mov
or
sbb
push
rcrb
pop
lods
cmp
lahf
mov
or
jne
and
lea
out
sbb
sbb
lret
int3
ss
test
cltd
pusha
loope
test
jmp
pop
cwtl
xor
xchg
clc
sahf
add
popf
loop
lret
mov
dec
jmp
pop
xchg
sub
inc
cmp
ljmp
test
into
and
popf
jne
dec
shlb
xor
ss
mov
mov
loope
push
ss
jmp
dec
pop
xchg
mov
push
or
clc
roll
je
gs
pop
mov
fisubrl
int
push
jl
jecxz
jmp
rorb
sub
push
test
dec
adc
stos
mov
adc
enter
fisubrs
popf
fcoml
or
pop
test
mov
push
jp
dec
xor
dec
fdivrl
lea
stos
aas
cmpl
sub
push
xor
add
push
jbe
dec
or
movsl
sub
fdivs
filds
lods
pop
jno
aaa
cmp
outsb
shlb
pushf
push
loopne
stos
or
jle
divl
test
inc
cmp
pop
jg
dec
lea
int3
sti
push
add
les
and
and
loop
and
add
push
xchg
xchg
loopne
add
out
movsl
daa
pop
mov
xor
sahf
mov
sub
movsb
cmp
mov
dec
lret
sub
sub
mov
push
sbb
push
sub
imul
rorl
cmp
insb
sbb
test
xor
and
js
stos
or
mov
movsl
and
or
int
lock
mov
mov
add
lea
add
xchg
imul
addl
add
mov
and
lcall
mov
cmpl
push
xchg
push
jno
sub
mov
inc
jl
push
mov
dec
or
add
dec
popa
lcall
ret
out
xor
pop
cmpsl
or
mov
rcll
dec
jge
les
js,pt
fs
cmp
mov
test
push
xor
clc
inc
or
jne
jmp
push
inc
adc
sbb
adc
xor
push
adc
pop
data16
shlb
or
jns
adc
or
xchg
orb
sub
xchg
push
pop
adc
push
cmpsb
mov
stc
mul
push
pop
or
or
adc
enter
adc
movsb
sub
dec
or
fdivl
rclb
xchg
or
sbb
or
lock
inc
sub
cld
shr
mov
imul
pop
mov
inc
and
sahf
movsb
scas
dec
or
mov
lretw
xor
adc
int
xor
cld
mov
adc
or
icebp
decl
cli
add
cmp
jbe
push
pop
lock
mov
inc
rolb
loopne
lcall
mov
shr
lea
not
and
decb
jne
add
sbb
or
loopne
pushf
mov
lret
add
push
or
add
cld
add
pop
and
addl
jg
or
pop
clc
and
mov
inc
shlb
and
sti
add
add
js
mov
cmp
xor
ficoms
imul
subb
cli
pop
es
mov
cs
jno
mov
fldl
not
and
jle
popf
mov
sub
jmp
lea
das
mov
xor
cmp
push
jle
pop
xor
movsb
mov
lock
add
or
dec
scas
ficoms
inc
popf
loopne
mov
int3
inc
mov
pop
dec
or
adc
mov
out
aas
sub
mov
mov
cs
lret
pxor
push
or
pop
mov
ret
testl
adc
loopne
mov
or
daa
mov
xor
push
mov
repz
or
adc
add
adc
add
pop
scas
shl
add
scas
jp
push
call
aas
ret
js
pop
gs
push
or
push
cmp
sub
mov
inc
adc
jne
xchg
mov
and
push
sarb
lret
movsb
in
adcl
call
fildll
enter
mov
jbe
dec
adc
jge
jl
inc
negl
sub
cmp
or
push
ret
mov
mov
inc
xor
pushf
pop
push
imul
shll
data16
cwtl
js
adc
outsl
push
add
movl
addl
xor
les
xor
pop
pop
inc
adc
test
stos
adc
dec
pushf
mov
sbb
add
icebp
movsb
adc
push
fucomi
fldl
xor
fwait
orl
incl
imul
pop
push
mov
pop
mov
lgdtl
mov
add
add
push
mov
imul
inc
clc
pop
and
les
addb
test
jne
or
add
adc
add
sub
lea
rcl
push
iret
shr
sbb
rolb
xchg
adc
adc
jne
dec
orb
push
scas
mov
cld
lock
call
dec
loope
ljmp
add
adc
dec
rorl
inc
fs
aas
test
mov
mov
jecxz
adcb
test
testb
add
js
and
cld
ljmp
int3
les
pop
test
adc
add
mov
push
mov
pop
shr
jb
xor
test
mov
cmp
movsb
loopne
add
mov
and
pushf
jle
and
int3
inc
cmp
orb
outsb
cmp
cmp
add
cmpsb
stos
lret
push
mov
int3
push
pop
and
mov
inc
stc
dec
add
xor
add
and
shl
jae
test
nop
dec
or
ret
inc
inc
jg
jns
sub
add
xchg
sub
adc
pushl
adc
xor
incl
pop
jbe
sbb
jbe
jae
adc
jg
or
xor
push
dec
mov
pop
pop
cmpsb
test
adc
ljmp
adc
js
xlat
fildl
and
and
js
or
sbb
iret
adc
aad
or
inc
insb
xor
or
mov
adc
jl
and
and
popf
inc
or
adc
lock
mov
inc
dec
insb
pop
xor
push
sar
dec
test
cmp
movsb
pop
xlat
xchg
xor
sbb
and
cld
xor
cmp
fwait
cmp
je
filds
cmp
push
mov
je
add
fbstp
lea
dec
ficoms
add
xor
adc
loope
lea
mov
sbb
push
xchg
inc
jbe
loopne
adc
mov
cs
decb
into
mov
out
cmp
or
push
xor
jns
dec
mov
or
add
adc
scas
psubsb
ret
lods
push
test
lock
cmp
push
push
push
sbb
adc
jge
es
adc
aas
adc
inc
in
or
scas
pusha
and
or
loope
cs
nop
cmp
and
decb
xlat
and
adc
push
andb
jg
sbb
mov
jne
jmp
repnz
mov
jae
xor
aaa
push
add
mov
lock
cmp
push
out
xchg
mov
and
mov
cltd
jle
inc
pop
lcall
cmp
je
mov
dec
sbb
and
mov
mov
dec
pop
iret
jne
shlb
addl
jno
mov
inc
dec
push
ljmp
add
out
repz
cs
into
jne
mov
push
xchg
sbbb
inc
test
inc
push
pushf
scas
jbe
loop
or
out
icebp
sbb
push
cmp
mov
mov
dec
add
xchg
sbb
push
aad
ror
push
inc
cmp
aad
push
out
and
mov
pop
xor
xor
repnz
jmp
gs
cwtl
popf
jp
mov
adc
bound
dec
push
and
push
clc
into
xor
movups
dec
jp
ja
xchg
mov
or
das
pop
xor
sub
jge
jge
pop
rorl
cmc
push
or
dec
cld
or
pop
add
push
push
push
mov
pop
nop
jge
or
sub
or
fimull
dec
adc
add
in
xchg
mov
and
lods
test
lea
ds
or
jne
cmp
jp
push
ds
xor
add
gs
imulb
lea
je
nop
or
sti
add
pop
jb
or
xorl
rol
jg
add
sbb
xor
pop
inc
mov
dec
and
sti
cmp
push
push
dec
add
jbe
or
repz
test
or
push
xchg
sub
fnstcw
das
adc
mov
es
add
getsec
test
add
inc
cmp
cmp
sub
add
push
mov
sbb
sahf
es
or
inc
je
push
and
inc
and
popa
repnz
sbb
push
push
icebp
xor
mov
xchg
mov
adc
adc
iret
out
dec
in
or
jmp
push
inc
dec
inc
cs
jnp
mov
sti
insb
outsb
dec
push
add
adc
pushl
adcl
icebp
cmp
je
out
sbbl
pop
jne
push
rcrb
pop
mov
std
mov
sbb
push
mov
rclb
dec
cmp
shl
inc
js
push
cmp
insb
pop
or
pop
push
jo
shlb
inc
mov
cmpsl
pop
jl
sbb
fnstcw
xchg
lock
lahf
loope
ret
int3
push
outsb
popa
dec
imul
xchg
sbb
iret
mov
mov
rorb
lods
pop
add
repnz
mov
call
lods
aam
hlt
inc
or
xchg
mov
sbb
and
xor
sbb
sarb
outsb
dec
adc
cmp
cmc
mov
push
jmp
movzwl
sub
in
int3
test
in
test
into
je
cmp
mov
decl
rorl
sbbb
xchg
imul
test
mov
adc
pop
fdivs
pop
lcall
inc
pop
pop
ja
andl
or
lods
ljmp
or
jl
xchg
xchg
ret
or
sbb
pop
add
add
negb
xchg
arpl
out
or
mov
jge
and
jb
jb
ljmp
daa
ficomps
mov
inc
hlt
icebp
push
jb
repz
pushf
xor
out
fistpll
insb
jne
sbb
mov
sbb
adc
and
pop
nopl
jg
add
mov
arpl
xor
cmp
nop
adc
or
cmc
xchg
lret
jmp
int3
les
xorb
std
push
push
sub
clc
xor
xor
ret
in
shll
lea
lcall
adc
add
sbb
aam
push
jns
push
lock
dec
sbb
inc
sti
call
enter
xchg
lods
push
nop
push
and
call
add
lods
dec
lods
dec
negb
lret
and
or
pop
xor
repz
or
repz
in
iret
out
add
mov
mov
stos
push
stc
ret
shlb
pushf
icebp
andb
repz
xchg
xchg
lret
call
mov
mov
mov
push
hlt
xchg
repz
cltd
xchg
or
lods
in
cmp
or
lods
rclb
sbb
call
add
lods
pop
leave
orl
mov
orl
lds
in
nop
or
xchg
in
pop
push
cmp
test
test
test
mov
int3
test
xchg
jle
mov
mov
sysret
movsb
cmc
or
bound
adc
ret
adc
fidivs
cmp
in
aaa
mov
or
pop
jecxz
aas
xchg
fists
push
repz
cmp
sbb
push
pop
lea
inc
sub
test
dec
cmp
lock
lret
mov
add
mov
xor
xchg
ret
sub
add
inc
or
fwait
in
sbb
rcll
xor
and
adc
std
or
mov
push
add
and
and
popa
imul
adc
rolb
pop
inc
push
lods
inc
jno
jle
stc
das
mov
or
sarl
push
ret
adc
push
add
es
push
jnp
adc
inc
loopnew
adc
gs
testb
movsb
or
or
or
out
fsubs
push
adc
inc
fadd
cmpsl
pop
in
dec
imul
hlt
jmp
mov
aaa
inc
cld
push
sbb
fdivs
mov
push
gs
push
inc
cmp
out
inc
adc
ret
pop
and
fsubl
mov
lret
push
fisttps
not
and
xor
scas
sub
and
cmp
dec
jmp
rorb
adc
push
clc
add
cmpsb
imul
pushf
mov
mov
xor
inc
or
sub
add
and
adc
cmpsb
xor
mov
lret
je
pop
sbb
add
incb
sub
push
pop
sub
sbb
xchg
mov
dec
mov
movsl
inc
push
sti
xchg
xchg
je
push
or
pop
mov
fmul
mov
pop
lret
pop
pop
push
mov
fldl
or
fldl
or
ja
ffree
imul
mul
mov
push
fbstp
pop
jmp
jo
ss
insl
mov
rorl
in
mov
sbb
inc
pop
sub
das
sub
mov
lret
sub
je
dec
je
add
and
xchg
pop
and
sbb
sti
fldenv
lcall
xchg
jae
insl
int
test
lahf
mov
add
mov
mov
outsl
xor
loope
jmp
rcrl
stc
xor
insb
fwait
add
inc
test
jno
mov
lock
test
xlat
sub
jmp
jns
in
inc
adc
fadd
scas
lret
push
fdiv
fsubrl
fstl
push
inc
add
shl
push
push
push
jl
xor
jne
das
and
adc
lock
and
sahf
out
mov
out
sahf
mov
adc
shr
pop
and
mov
xchg
stos
enter
jno
sub
dec
inc
inc
push
sbb
sub
or
push
dec
es
sub
push
outsl
xchg
add
fdivs
sbb
xchg
inc
jle
test
sti
push
jl
pop
push
inc
sti
or
clc
add
xchg
xchg
push
xchg
and
out
dec
jmp
inc
faddl
add
frstor
popa
push
jmp
test
mov
clc
push
fmull
sti
iret
mov
inc
jp
cmp
test
jne
push
xor
adc
jmp
jbe
testb
and
loopne
nop
sub
mov
stos
lods
add
cmpsb
or
int
sub
xlat
dec
push
mov
jo
push
add
add
mov
popa
cwtl
sub
out
mov
mov
mov
test
ret
cld
jne
sti
inc
mov
or
aas
mov
clc
aad
add
sbb
xchg
lods
mov
test
or
sub
jmp
in
rol
ror
xchg
add
and
sbb
jle
cmp
inc
into
jne
dec
pop
mov
push
pop
mov
clc
adc
add
sbb
ret
and
or
dec
testl
jne
dec
sbb
loopne
sar
lea
or
mov
subb
fstps
movsl
pop
rorb
loopne
mov
out
test
inc
pop
loopne
push
or
inc
hlt
push
jp
cmpsl
add
or
inc
jno
ja
stos
mov
inc
and
sahf
pop
cs
xchg
std
lods
dec
shll
adc
rol
mov
cwtl
pop
enter
sar
mov
push
inc
push
pop
or
add
sub
mov
xor
clc
sub
cmp
mov
lods
in
mov
pushf
and
popa
int
popa
sub
adc
xor
mov
and
mov
mov
or
inc
xchg
cmp
lods
add
arpl
call
push
inc
sub
pop
cmpsb
in
adc
outsb
in
lea
sbb
inc
jne
mov
xor
movsl
pop
sbbl
aad
cmp
push
int
movsl
test
mov
cmp
lods
cmp
jbe
js
jecxz
ret
jmp
test
call
mov
mov
fwait
mov
in
inc
jae
push
mov
fs
bnd
cmp
call
lods
jo
popf
addb
dec
add
js
cmp
xchg
adc
xor
adcb
sti
push
inc
cmp
lea
popf
in
mov
jns
mov
loop
jge
mov
cwtl
add
mov
xor
cwtl
xchg
stc
mov
push
adc
push
nop
push
loopne
mov
dec
pop
sub
pop
xchg
enter
fcmovb
jge
pop
jns
daa
mov
int
aad
sahf
add
cwtl
inc
lret
lods
cld
rclb
std
xchg
pop
lret
loopne
in
fstp
imul
adc
loopne
dec
nop
dec
jno
or
pop
insl
xor
cmp
into
je
mull
loopne
adc
insb
sbb
inc
mov
adc
gs
mov
leave
dec
jecxz
xor
mov
sbb
addb
lock
aaa
addr16
xchg
xchg
imul
mov
adc
ret
loopne
sahf
xchg
in
add
mov
test
jne
stc
mov
or
ss
mov
call
mov
iret
jp
jb
std
call
pop
mov
push
mov
data16
in
xor
cmp
mov
fdivrs
int
cmp
mulb
jbe
std
inc
in
popa
lods
push
sub
std
out
mov
sub
lds
out
cmp
push
and
mov
xor
mov
pop
sbb
add
icebp
xchg
popa
push
push
mov
push
jb
mov
mov
xchg
cmp
std
out
xlat
jl
jae
mov
push
mov
xor
cmp
imul
test
sbb
rclb
adc
pop
inc
inc
adc
push
dec
add
cmp
cmp
mov
sbb
nop
and
std
lock
pcmpeqd
jmp
cmp
push
pop
ret
mov
ret
aaa
loopne
mov
es
inc
repz
daa
in
mov
popa
sti
mov
cmp
or
dec
data16
mov
push
or
and
popa
dec
jmp
dec
lods
pop
jmp
cmc
shll
sar
lock
xor
cmp
jmp
push
sbb
jmp
lods
or
sbb
jge
divl
pop
int3
cmp
cmp
test
jb
iret
push
mov
dec
test
xchg
cld
ror
aam
jns
pop
xchg
lahf
push
lock
dec
sbbl
push
or
fbstp
jmp
pop
insl
mov
movsb
add
sarb
push
inc
or
lret
jne
cmp
xchg
sbb
cmovge
or
fwait
inc
jne
fdivr
das
rcll
jl
sbb
test
xchg
add
sahf
ds
sub
xchg
aaa
fcoml
jo
add
and
jl
testb
movl
aas
or
ss
add
and
mov
movsb
test
daa
pop
and
int
sarb
dec
repnz
mov
push
push
push
pop
jmp
push
push
cmp
and
and
or
pop
add
or
dec
jo
sub
push
roll
pop
push
fstpl
ds
cmc
ds
or
dec
int3
lock
int3
test
push
push
inc
push
lock
pop
push
lea
pop
add
push
xor
imul
int3
test
scas
movsl
call
nop
es
js
pop
push
pop
int3
enter
test
insl
or
adc
and
int3
test
int3
test
or
mov
xchg
out
xor
push
arpl
xchg
lret
mov
pushf
sbb
test
pushf
dec
push
sbbl
xchg
outsl
popa
leave
or
test
mov
pop
and
call
and
inc
xchg
push
lret
and
cmp
add
push
push
push
jecxz
pop
pop
arpl
push
cmp
test
xor
in
insl
and
mov
pop
sbb
xchg
cmp
test
lea
add
mov
mov
leave
jmp
lcall
mov
pop
pushf
xchg
and
pop
mov
xor
xlat
fdivs
addr16
mov
lea
sbb
add
dec
mov
movsb
sub
and
mov
push
cmp
movsb
push
mov
in
stc
dec
add
dec
xor
repnz
movsb
and
or
bound
xchg
cmp
dec
inc
leave
adc
test
pop
test
test
fs
nop
or
sub
in
nop
nop
cmpsb
add
push
nop
inc
dec
lods
lods
or
dec
ret
shlb
push
dec
push
mov
je
sbb
shlb
out
sbbb
add
mov
pop
roll
cmp
scas
stc
xor
arpl
dec
lret
push
popf
and
in
in
aaa
mov
jg
push
jmp
adc
and
inc
and
pusha
jo
stos
add
test
jle
add
stc
int3
pop
lods
adc
cltd
enter
xor
sub
or
push
loop
ljmp
test
lret
cmp
sbb
sarl
inc
inc
faddl
nop
inc
add
xor
outsb
into
adc
xchg
fnsave
lods
dec
rep
ss
neg
pop
mov
sub
xor
lock
push
add
into
inc
dec
and
ds
lcall
or
popa
cmp
sbb
jns
adc
fbstp
push
push
dec
adc
push
and
jle
xchg
or
dec
push
pop
outsl
inc
in
repz
or
jbe
jle
sbb
xor
dec
outsl
ja
mov
sub
out
sbb
and
subb
cmp
lods
lret
sbb
or
or
pop
dec
adc
and
into
and
call
mov
sub
cmc
into
and
insb
pop
adc
sahf
outsb
ljmp
shll
fsts
or
in
lock
rep
jge
push
xor
fcmovnbe
or
and
jp
or
fmuls
push
ret
cmpsl
jmp
pop
xchg
nop
lret
add
fiadds
in
cld
es
ret
in
mov
xchg
fsub
pop
mov
insl
dec
inc
and
add
lea
rolb
xor
mov
pop
icebp
and
xchg
jecxz
mov
sub
and
sbb
cmp
movsb
or
inc
not
and
mov
adc
mov
and
push
mov
fcoms
dec
repz
sahf
mov
nop
cmp
adc
into
pop
cmp
jg,pt
or
mov
push
leave
enter
test
mov
stos
jge
jg
outsl
mov
test
je
divl
adc
mov
imul
aaa
mov
sbb
pusha
or
pop
or
add
and
jne
lea
stos
xchg
mov
popa
add
les
mov
cmpsl
movsl
filds
push
mov
and
lock
mov
bound
fcoms
mov
inc
fcoml
mov
sub
lea
popl
fistpll
cld
mov
movl
es
cli
dec
mov
in
cmp
lods
pushl
adc
movsl
int
add
xor
faddl
data16
loope
or
lahf
or
fisttpl
add
out
dec
and
cmp
sbb
push
add
je
hlt
daa
push
push
stc
clc
inc
push
inc
sbb
jae
testl
es
ss
jl
mov
inc
xchg
test
xchg
mov
insb
and
or
mov
xor
scas
mov
jae
push
fiadds
sahf
pop
adc
or
or
pushf
mov
push
inc
mov
fs
fsts
push
pop
sti
lcall
shr
rcr
shr
rcr
or
jne
div
pop
mov
adc
inc
mul
pop
jb
cmp
or
lret
push
jbe
dec
sub
sbb
adc
iret
inc
adc
or
fcmovu
fiaddl
lret
iret
stos
xor
adc
inc
adc
add
sahf
inc
add
into
movsb
jbe
ja
jo
adc
xchg
pop
pop
jmp
pop
and
pop
stc
movb
cmpsl
mov
inc
clc
movb
fwait
adc
daa
push
loop
dec
lahf
ja
flds
adc
push
mov
jae
push
inc
jg
sahf
lea
xor
add
sbb
or
adc
cmp
clc
out
sub
sbb
adc
sbb
wrmsr
jo
mov
jge
dec
bound
mov
sbb
dec
lea
popf
jne
mov
les
pop
pop
or
sbb
adc
and
pop
insb
das
dec
push
rorl
jecxz
sbb
dec
fcomps
sbb
sbb
mov
inc
cmp
hlt
out
gs
test
add
lea
cmpl
jne
or
in
mov
inc
lods
push
loop
sub
test
ret
jnp
into
cmc
jne
aas
add
and
cmp
adc
adc
leave
dec
jae
adc
and
add
aam
adc
or
add
dec
daa
testb
prefetch
adc
mov
jl
mov
and
jb
loop
subb
mov
lret
push
jno
sub
sbb
inc
sbb
add
fs
stc
mov
aaa
adcb
adc
jo
sub
dec
repz
add
push
push
mov
data16
lret
iret
add
add
add
sub
and
or
int
inc
sbb
lock
jo
fs
inc
lea
imul
in
loope
fs
sar
xchg
loopne
lods
cmp
or
and
mov
nop
inc
mov
push
lock
adc
lods
inc
rcrb
pusha
hlt
adc
add
xchg
and
add
sub
cltd
lock
scas
mov
push
insl
mov
je
pop
cmp
loopne
and
xchg
pop
je
lea
and
cld
add
les
xor
sbbl
fcompl
add
hlt
or
xchg
test
cmp
lock
je
mov
fdivrp
iret
lods
iret
stos
dec
jle
sub
or
mov
shl
push
adc
mov
lret
ret
sarl
xor
test
xor
jo
and
mov
and
stos
mov
push
or
movsl
jne
int3
pop
cs
inc
mov
push
xchg
mov
jl
cmp
je
ss
fmul
repz
adc
xchg
pop
lret
adc
outsb
or
cld
ds
or
popf
adc
and
scas
and
pop
add
movl
mov
mov
jae
out
insb
clc
jo
push
jp
adc
inc
lods
movsb
repnz
pop
pop
jge
add
arpl
int3
add
jo
and
cmp
jb
inc
fisttps
dec
pop
sub
sbb
push
roll
and
xor
daa
fcmovne
xor
sbb
mov
pop
jne
or
bound
sbb
mov
jno
push
dec
sbb
sbb
dec
or
dec
jp
push
mov
jo
jb
inc
in
scas
add
sub
or
pushf
lahf
push
push
mov
mov
or
jne
mov
dec
stos
mov
pop
and
jecxz
in
ret
mov
cs
inc
shll
inc
and
bound
fildl
pop
orb
dec
cmp
xchg
mov
dec
pop
divl
jecxz
adc
test
jns
push
pop
mov
sbb
lret
les
ret
imul
fwait
nop
mov
out
add
ret
pop
add
gs
inc
dec
add
inc
push
pusha
mov
xor
push
das
fcoml
outsb
fs
test
and
adc
pusha
lock
rcrb
jp
imul
or
pushf
rorl
xor
out
pusha
and
leave
and
scas
jl
jle
or
cmp
and
loop
sub
cmp
mov
sub
scas
or
pop
cmp
cmp
xchg
test
cmp
lret
push
sbbb
popl
push
cmp
shll
inc
fs
inc
lock
leave
rorb
int3
into
pusha
dec
mov
pop
jmp
mov
xor
adc
cltd
addr16
push
cmp
lock
or
divb
and
mov
cmp
add
pop
ljmp
fnop
popf
cmpsb
ret
into
push
jo
dec
movsl
cli
test
das
loop
or
repnz
addr16
shll
cmovs
jne
js
sbb
mov
or
pusha
stos
mov
pusha
sub
addb
xchg
clc
adc
je
xchg
sub
sbb
std
mov
cmp
scas
mov
jb
mov
dec
or
int3
xor
push
xchg
fdivrl
aaa
popa
mov
dec
cmp
out
mov
in
or
inc
mov
scas
test
or
mov
add
dec
mov
mov
jne,pn
sbb
testl
mov
pop
sub
adc
cmp
jge
mov
out
popa
or
adc
inc
sub
rcr
pop
sub
je
fidivs
pop
sbb
push
push
ret
push
dec
jmp
lods
insb
repnz
ret
add
add
aaa
xor
mov
jo
sub
adc
fs
jno
xchg
insl
and
adc
lcall
and
inc
adc
in
insb
in
das
jmp
insb
inc
xchg
ficoms
push
test
movsb
push
xchg
fadds
les
std
sub
pop
and
mov
stos
sbb
and
and
jo
mov
cmp
cmp
sub
xchg
cs
inc
or
add
and
addr16
pusha
cmp
dec
jb
cmp
add
inc
fldenv
and
inc
test
xor
and
cmp
incb
xchg
lock
jecxz
rcll
lds
pusha
mov
jp
es
and
mov
daa
outsl
loopne
cmp
jbe
pop
adc
add
mov
movsl
sub
mov
lret
adcl
popa
xor
mov
je
push
inc
cmp
sbb
adc
rol
sbb
jnp
pusha
add
lret
lahf
add
mov
daa
pop
inc
popa
mov
or
add
imul
push
sub
stc
xor
or
out
mov
add
das
sbb
lret
mov
add
adc
fdivs
lods
mov
mov
inc
and
cmp
pop
mov
cmpsb
rclb
add
arpl
adc
inc
mov
rcrl
jb
or
mov
add
xor
add
xchg
notl
xchg
add
inc
ljmp
sahf
or
jg
lods
ja
or
aad
cmp
ss
jmp
xor
es
rclb
inc
popa
cmp
adc
add
add
inc
pop
je
pop
cmpsl
lods
popf
dec
mov
cltd
shll
mov
adc
xor
pop
inc
sti
sub
adc
add
es
inc
push
xchg
xchg
xchg
lods
addl
or
push
pop
dec
call
cmp
cmp
and
inc
mov
mov
jns
fcmovu
add
xor
inc
pop
loope
pop
add
popa
adc
dec
enter
in
pop
in
sbb
and
inc
sbb
cmp
clc
out
xor
sbb
pop
fsubr
mov
mov
ss
loope
xchg
mov
jo
andb
mov
loopne
daa
lea
xor
icebp
aas
jae
mov
push
inc
dec
shl
psllq
stos
ss
lods
pusha
mov
push
or
sub
mov
orl
or
rcr
push
and
add
shll
inc
push
lret
mov
movsb
clc
sbb
inc
inc
xchg
adc
jo
xchg
gs
je
xor
in
outsb
mov
pop
dec
inc
inc
or
jne
repnz
rcr
mov
sar
add
and
fcomps
das
mov
push
ret
adc
add
push
dec
jne
scas
addr16
ret
mov
lcall
fiaddl
lock
imul
xor
ficomps
int
push
cwtl
push
sbb
data16
push
sbb
xchg
add
xor
sub
or
or
push
pop
push
dec
clc
xchg
rcrb
mov
insb
mov
call
jmp
fwait
outsl
cmp
or
or
sbbl
sbb
cmp
or
mov
in
js
cmp
xor
xchg
popa
sbb
sbb
mov
mov
pop
in
xor
push
out
mov
shl
add
jo
sbb
pop
jo
pop
cwtl
rcrb
and
jns
sub
pusha
and
add
cmp
daa
shrb
imul
cmp
ret
loopne
pushf
insb
loope
adc
dec
aas
inc
add
push
mov
adc
add
xchg
movsb
inc
stos
dec
push
mov
add
cld
inc
sar
and
shl
add
lahf
fildl
lock
add
push
or
iret
mov
push
xchg
jno
inc
or
inc
adcl
subl
mov
repz
test
jmp
xchg
orl
cli
mov
cmp
cmc
push
inc
rclb
pop
addl
mov
push
stos
mov
aad
add
clc
dec
add
adc
sub
popf
or
push
add
mov
jmp
scas
pop
notb
xor
xor
sub
test
fdivrs
add
inc
mov
xor
mov
push
clc
not
mov
xlat
cs
fwait
adc
cmpsb
cmp
aas
add
movsb
loope
xor
sahf
lock
mov
push
or
dec
mov
or
adc
push
loopne
or
xor
not
push
shll
mov
add
enter
aaa
cmp
mov
and
jb
rcrl
add
sub
jecxz
ret
sub
mov
setg
adc
or
mov
dec
in
mov
sbb
xor
add
jp
push
popa
push
mov
mov
dec
sbb
jge
test
add
dec
adc
scas
or
cmp
incl
add
jmp
pushl
add
stc
fmull
xchg
push
push
jae
pop
jmp
and
add
xorl
mov
js
xor
inc
inc
pop
sahf
lret
repz
jl
adcb
sti
mov
xor
dec
mov
xchg
cmpsl
repnz
inc
nop
aaa
xchg
les
push
in
add
bnd
jg
lock
mov
push
cmp
fnclex
xchg
sub
xchg
mov
push
mov
lods
outsb
xchg
or
pop
jno
inc
and
or
lret
fdivrl
nop
push
jbe
js
int3
jmp
dec
cmpsb
and
in
adc
rolb
push
push
add
mov
imull
aas
aad
push
mov
fisttpl
imul
add
dec
fsubr
lahf
fcomp
and
pop
dec
mov
lret
int3
scas
mov
xor
decl
cwtl
roll
jl
cld
xchg
imul
loopne
dec
aad
js
push
inc
push
push
or
inc
push
inc
cmp
add
movsb
movsb
jbe
sub
lret
and
gs
sti
push
and
dec
mov
popf
aas
add
inc
sbb
mov
jo
and
adc
sub
sub
insl
adc
leave
subl
pushf
sbb
mov
dec
adc
add
sub
xor
sbb
sub
dec
icebp
fsubr
push
and
mov
aas
dec
push
push
mov
xlat
mov
cmp
or
sub
or
int
sbb
add
lods
push
stc
mov
jae
adc
inc
sbb
adc
enter
test
faddl
dec
push
fdivs
pop
subl
in
inc
mov
daa
push
mov
push
mov
aaa
jmp
mov
or
push
sbb
fbld
iret
imul
lcall
aaa
xor
cmp
inc
jmp
int3
hlt
mov
inc
inc
pop
xchg
jbe
jne
imul
out
push
rolb
jge
aas
sbb
xor
mov
flds
not
adc
or
ss
sub
jle
inc
push
dec
movsl
cmp
mov
adc
dec
cwtl
sahf
aam
xchg
mov
cmpsb
pop
cld
idivb
xor
push
ja
cld
and
or
incl
mov
mov
leave
mov
or
enter
or
inc
loopne
sbb
ja
incl
add
or
movl
sbb
or
sbb
or
pop
inc
push
nop
dec
push
dec
sbb
mov
je
mov
and
push
decl
sarb
add
pop
and
loopne
je
lea
shrb
cmp
or
test
or
decb
rolb
mov
mov
pop
add
pop
sub
andl
mov
or
add
inc
lret
jbe
loope
and
xor
jg
mov
jae
or
mov
mov
dec
loop
movsb
jle
cmp
imul
xchg
add
mov
fs
and
std
lds
mov
je
add
add
mov
icebp
add
out
scas
or
orl
adc
mov
inc
dec
adc
mov
sbb
xor
inc
dec
adc
and
and
inc
or
jne
inc
sbb
adcl
cmp
or
cs
sub
cmp
clc
adc
mov
mov
lods
push
sbb
and
fistps
adc
jg
push
fs
or
mov
inc
or
pop
push
inc
mov
test
cmp
add
or
push
jl
push
xor
mov
or
add
add
loopne
dec
mov
sti
jg
xchg
fcoms
sbb
add
add
inc
pop
fsubrl
jo
fstpt
pusha
pusha
push
test
and
bound
inc
fwait
and
push
push
adc
mov
out
dec
dec
sahf
push
mov
xor
pop
jg
hlt
addr16
xchg
fs
pop
jl
mov
movsb
cltd
add
push
pusha
test
leave
xchg
or
fstl
fs
fisttpl
movsb
cmp
js
add
cmp
es
add
popa
or
iret
sub
sub
mov
gs
lods
mov
mov
cmpsb
cld
shlb
mov
fldl2t
call
push
clc
and
subb
mov
sub
jmp
mov
fcomps
or
ficomps
cmpl
dec
or
lock
sbb
je
popa
movsl
mov
jle
test
jg
test
xor
fldz
notl
js
adc
or
repnz
adc
cmpsl
and
mov
sbb
insl
pop
mov
rcl
mov
testl
jg
sbb
call
int3
mov
xlat
sbb
lods
outsl
inc
sbb
icebp
sub
lock
and
sub
idivl
add
push
or
mov
adc
or
test
fcmovnb
mov
sbb
jb
sub
das
sbb
push
rolb
sbb
or
icebp
xor
shlb
mov
adc
lock
popa
shld
in
sbb
test
je
jbe
cltd
aam
push
cmp
cli
inc
incl
aaa
inc
lods
add
jl
push
jmp
mov
push
sbb
je
xchg
je
cs
xchg
sbb
jmp
or
mov
outsl
sub
scas
gs
shl
add
inc
add
rorb
inc
add
out
add
xlat
or
mov
popa
repnz
inc
pop
call
adc
aam
xchg
adc
add
jo
leave
repnz
add
add
jne
mov
push
ja
fcoms
mov
and
jmp
xor
inc
xor
adc
test
pushf
or
jo
lret
sub
push
or
cmp
xchg
jb
aaa
rcll
inc
mov
push
data16
cli
inc
mov
fisttpl
mov
pop
sub
popa
daa
xchg
jns
pop
lahf
or
les
fisubrl
filds
pusha
aas
nop
stc
pop
je
pop
cmc
and
rolb
pop
popa
fwait
sub
icebp
mov
add
adc
insb
mov
adc
push
mov
jb
pop
adc
cmp
loope
xor
push
cmp
jl
mov
inc
adc
lock
adc
in
xchg
js
or
lea
testb
jne
clc
push
mov
jl
xorl
pop
jmp
mov
jb
xor
mov
movsb
sub
or
inc
xorb
xor
dec
nop
sbb
stos
dec
push
ret
or
enter
icebp
push
sub
mov
xor
fwait
sbb
add
fsts
or
add
adc
lods
mov
loopne
and
shll
jne
push
insl
sbb
pop
xlat
sti
mov
jne
jmp
frstpm(287
or
jo
jae
push
arpl
ljmp
cmp
lock
mov
icebp
mov
sbb
iret
dec
push
dec
xor
inc
cmp
jecxz
mov
adcb
adc
sbb
test
adc
sbb
xchg
sub
aam
mov
jno
imul
push
lcall
clc
dec
gs
cmp
mov
adcl
rorb
leave
jo
jl
ret
xor
outsb
push
pusha
sbb
jle
aam
adc
in
pusha
jbe
add
add
loopne
mov
ret
decl
push
cmp
fstl
xor
jecxz
mov
call
lret
pop
hlt
jno
mov
in
mov
pop
xlat
or
fadds
clc
das
nop
or
or
push
jp
jne
mov
pop
std
jb
test
add
xchg
or
pop
test
adc
sub
out
cmp
imul
jne
or
ljmp
bound
orl
mov
or
xchg
enter
stos
or
or
lret
mov
pop
pop
aad
push
mov
ljmp
push
inc
stos
adc
repz
dec
and
mov
adc
xlat
je
cmp
push
adc
shll
testb
mov
lea
and
jbe
xchg
popf
nop
cmpb
jmp
inc
jl
mov
test
pop
je
les
and
xor
cmp
add
cwtl
rclb
push
or
movsb
loopne
ljmp
arpl
pop
neg
inc
pop
jmp
das
xor
lock
jge
imulb
adc
or
popl
push
push
pop
adc
pop
mov
and
jle
aam
fcmovu
mov
fstpl
pop
jmp
adc
ret
cmpsb
sub
sbb
clc
inc
pop
pop
mov
orb
add
push
push
pop
sub
mov
sbb
xchg
push
sub
je
xchg
cli
adc
incl
lea
lea
or
in
add
int3
fsubr
mov
pop
fdiv
fnstsw
jo
cld
jmp
popl
enter
and
nop
cld
mov
mov
enter
movb
push
cmpsl
or
mov
inc
aas
js
mov
data16
sti
stos
dec
and
or
sbb
or
xchg
push
push
loop
mov
aas
sub
popf
xchg
call
ljmp
jbe
cmp
xor
out
lock
stos
shrb
inc
jnp
cmp
sub
push
mov
rorl
add
movsl
jbe
out
inc
andl
adc
in
ss
ss
leave
leave
leave
sub
xor
ret
sbb
cmp
fisttpl
inc
inc
and
inc
cmovs
push
push
pop
add
pop
pusha
fs
insb
jo
js
xchg
xor
jl
sbb
dec
rclb
mov
xchg
cwtl
pushf
dec
xor
and
movsb
test
insb
rcrb
je
inc
mov
xor
add
sub
lock
xor
mov
inc
mov
or
clc
ss
adc
cld
adc
or
sbb
and
movsb
or
sbb
and
or
sti
enter
pop
inc
adc
pop
push
jo
add
mov
ret
cmp
add
add
and
ffreep
dec
jne
out
xchg
jb
and
mov
add
xchg
fldcw
popf
push
inc
sbb
adc
loop
out
sub
shlb
mov
sbb
push
dec
add
lods
xchg
lock
mov
repnz
xchg
add
add
es
aam
pop
fiaddl
jne
cmp
inc
sbb
xor
sub
fists
sbb
daa
pop
and
dec
dec
add
cmp
and
xchg
inc
push
sbb
das
cmp
xchg
in
sub
ja
loope
push
int3
faddp
adc
lcall
fistps
cmp
fmuls
add
imul
sub
popf
negl
in
or
sbb
inc
mov
fistpll
push
push
sbb
xor
dec
rolb
jle
je
push
pushf
mov
sub
and
loopne
test
or
pop
int3
ss
dec
add
sub
orb
in
lds
mov
adc
add
cmp
in
cltd
stos
roll
repnz
cmp
int3
add
data16
jae
imul
sub
jb
mov
push
mov
push
adc
subl
ja
add
jp
jg
pusha
mov
jbe
or
push
inc
xchg
les
lahf
push
adc
inc
adc
sub
fadds
loopne
jmp
add
test
fdivl
iret
jo
andb
fcoms
mov
push
ja
incl
loopne
mov
mov
pop
add
mov
adc
fildl
mov
or
lods
jb
push
add
push
jmp
inc
test
lea
or
xor
mov
movhps
and
orl
pop
fcomps
out
popa
add
xchg
or
inc
test
push
inc
mov
add
fwait
mov
movsb
mov
xchg
aaa
mov
daa
loopne
push
jns
inc
mov
repnz
in
pop
add
loopne
in
sar
cs
cmp
xor
add
ljmp
push
adc
mov
roll
clc
push
push
test
xor
xchg
xor
and
out
imul
add
sar
mov
or
xchg
cmp
mov
or
mov
jne
aad
test
adc
mov
push
adc
xor
mov
add
mov
inc
sbb
xchg
inc
insb
or
mov
sbb
dec
ja
out
mov
inc
pushl
mov
jns
inc
out
dec
pusha
dec
sub
push
push
js
dec
cmp
pop
addl
pop
mov
jae
sbb
mov
add
inc
xor
mov
mov
stc
or
lods
mov
or
pop
fldpi
adc
push
hlt
mov
add
and
pop
test
jmp
ja
pop
outsb
jo
leave
cmp
ret
jo
lret
add
cmp
fsubs
pusha
push
mov
xchg
adc
mov
xor
pop
ss
push
dec
inc
lea
or
mov
add
lea
mov
iret
les
push
xchg
mov
fcoms
and
lea
dec
fisttpl
jl
dec
sub
jns
xor
sarl
cmp
test
mov
xor
add
test
push
or
push
icebp
cmp
mov
mov
sbb
scas
sbb
pusha
cld
sub
test
jne
movd
aam
dec
movl
out
inc
je
outsl
sub
push
push
jmp
inc
mov
pop
xchg
inc
inc
dec
pusha
ss
lock
dec
je
aad
add
clc
clc
pop
mov
sub
cmp
sbb
fisttps
cmp
sub
xor
adc
push
sysenter
sbb
in
js
dec
add
xchg
push
pop
mov
mov
dec
mov
jmp
xchg
mov
andl
add
aaa
call
push
cmp
mov
adc
cli
or
aas
js
aas
movb
inc
mov
adc
daa
or
cmpl
fmuls
push
and
adc
pop
inc
out
pop
inc
add
pusha
sbb
jmp
xor
or
pushl
in
roll
sbb
add
int3
adc
rclb
inc
divb
shrd
push
or
inc
inc
sbb
dec
fistl
cmp
add
bound
cltd
nop
lret
add
loopne
add
jl
xchg
xchg
push
int
dec
dec
stc
pop
xchg
cmp
pop
mov
adc
into
xchg
push
xchg
and
add
sub
addb
popf
and
cmp
in
lods
adc
pop
lock
dec
loopne
in
scas
sub
pop
mov
lods
xor
jno
xchg
or
push
mov
faddl
pop
pop
mov
sub
xor
test
je
add
jmp
add
repz
cli
mov
mov
sub
pushf
aas
lea
mov
dec
ret
ret
mov
lods
adc
dec
mov
mov
mov
cs
ljmp
adc
inc
jne
divl
cmp
xchg
fidivrs
xor
fbstp
popf
lea
inc
cmpb
shll
sbb
sbb
dec
or
or
adc
movsl
mov
pop
test
mov
pop
mov
mov
nop
inc
leave
je
xlat
test
add
sbb
push
add
imul
cs
je
sbb
sbb
inc
cld
clc
das
lea
mov
sbb
fcmovnb
dec
or
sbb
popf
adc
and
and
adc
andl
ret
dec
jmp
unpckhps
push
push
jp
and
sbb
or
and
cmpsb
push
sbb
mov
cwtl
mov
add
ss
test
xor
push
pop
mov
into
xchg
lea
jno
jge
popa
xlat
inc
push
mov
mov
fdivrl
sbb
push
and
mov
mov
push
sbb
and
insb
xchg
mov
shll
ret
lahf
mull
pminsw
pop
inc
inc
push
mov
mov
pushf
cli
sbb
arpl
add
int
jp
ja
mov
jl
js
or
cwtl
nop
rcl
mov
out
pop
mov
jp
xor
jmp
js
mov
and
sbb
sub
sub
push
aam
or
mov
in
dec
add
pop
fbstp
jge
jecxz
sub
mov
jno
xchg
jge
and
arpl
stos
jecxz
and
sbb
fstp
rorb
ja
in
stos
add
dec
call
sbbb
orl
xchg
push
test
or
adc
xchg
loopne
mov
clc
push
jne
in
xchg
fmuls
and
pop
pop
out
loop
adcb
push
pop
lods
pop
push
xor
pop
int3
pop
pop
scas
mov
pop
dec
cld
inc
and
jg
add
jns
imul
clc
je
xor
loopne
incb
xor
pop
daa
and
jle
mov
js
mov
mov
sbb
popf
roll
push
shr
push
or
je
inc
cmp
shlb
in
mov
js
pop
sbb
add
jb
add
push
popa
add
lods
movsl
sub
enter
inc
test
orl
or
jge
xchg
adc
push
or
and
jb
or
fxch
adc
jmp
pop
dec
or
dec
test
inc
jmp
icebp
xor
dec
rclb
jge
mov
lcall
and
rcr
mov
movsb
arpl
lods
push
call
add
dec
pop
pop
movsl
cmp
push
sub
jb
cmp
out
sbbb
and
or
push
sbb
pop
adc
aaa
or
cmp
adc
xor
rol
adc
sub
icebp
lret
add
push
add
sbb
inc
mov
sub
mov
or
inc
dec
fcmovnu
push
push
repnz
faddp
outsb
jecxz
xor
daa
add
mov
cltd
nop
lret
pop
dec
inc
dec
fisubs
jno
pop
mov
and
push
aam
imul
cmp
dec
sbb
sbb
sbb
mov
arpl
sbb
dec
shrb
adc
adc
push
push
dec
fs
cmp
jbe
mov
or
and
and
int3
push
cmp
dec
cmp
mov
repnz
das
adc
inc
jmp
hlt
in
rorl
jl
cs
invd
bound
ss
add
sub
or
add
inc
add
jbe
inc
dec
pop
mov
or
popf
jne
or
movsb
test
inc
data16
xor
xor
inc
jnp
and
mov
mov
sbb
fsub
inc
and
jne
and
lcall
or
into
and
and
leave
test
imul
cmp
nop
push
sbb
push
sbb
mov
sbb
adc
inc
push
icebp
pop
push
inc
adc
jo
pop
mov
xor
dec
push
popf
pushf
pop
sub
je
push
popf
ds
cmp
adc
inc
pop
mov
and
data16
pop
imull
gs
lcall
adc
xchg
es
cmpsl
mov
add
mov
or
or
roll
out
push
or
repnz
sbb
pop
push
mov
dec
add
and
test
and
enter
add
or
xor
nop
nop
and
shl
not
xor
loope
xor
and
jb
nop
or
jmp
mov
add
or
mov
jns
lea
test
adc
test
pusha
jp
adc
test
xor
lds
fs
or
xor
or
or
sub
sub
cmp
pop
clc
incb
jmp
sbb
testl
and
mov
and
xor
cmp
aaa
jecxz
jge
inc
cltd
out
add
or
mov
cltd
adc
or
pusha
xor
xor
sub
or
sbb
loope
flds
sti
test
pusha
mov
or
mov
pop
sub
xchg
addr16
rorl
jecxz
pop
fstp
mov
pusha
pusha
pop
je
pusha
insl
sbb
push
addr16
xorl
or
cmp
mov
xor
adc
sti
add
ja
test
pop
xor
mov
incb
push
sbb
lods
or
sub
lock
orl
mov
xchg
inc
or
imull
imulb
push
subb
xorb
sbb
jmp
push
and
jnp
and
inc
add
adc
mov
inc
push
fstps
fmuls
sub
fstpt
cmp
jecxz
ret
inc
cwtl
xchg
js
cli
cmp
push
jl
inc
fisttpl
push
pop
sub
ficomps
jno
push
or
xchg
inc
in
push
xor
mov
add
pop
bound
cs
xchg
push
aaa
lret
and
sbb
bound
in
dec
xchg
mov
fcompl
sub
in
lods
sbb
add
sub
sub
jmp
sub
inc
dec
push
jp
push
or
psubusw
xchg
out
add
adc
mov
mov
repz
popa
and
mov
pop
mov
clc
mov
subl
in
push
cli
add
stc
into
jbe
or
mov
repz
faddl
adc
testl
xchg
imul
into
repnz
aaa
je
jge
test
mov
lahf
adc
shrl
inc
sbb
jg
pop
orl
fchs
pop
push
loopne
mov
push
or
pop
lds
sahf
jmp
pop
movsb
roll
aam
push
inc
add
mov
decb
push
and
jbe
lods
dec
mov
out
outsl
movl
push
push
add
mov
jg
xchg
sbb
pop
test
lea
lock
popw
or
push
push
adc
pop
loopw
mov
insl
outsb
fisubl
movzbl
es
fcoml
out
xchg
or
stos
icebp
mov
je
pusha
inc
loop
xchg
sbb
sbb
mov
sbb
sub
hlt
adc
or
inc
adc
or
cwtl
push
pop
sbb
and
popa
inc
repz
adc
incb
jno
jbe
das
gs
or
cmp
jbe
add
or
push
sbb
xchg
or
sbb
insb
dec
sbb
gs
scas
adc
pop
incl
out
mov
fsubl
mov
dec
add
xor
imul
add
mov
lea
push
pop
xor
mov
mov
jbe
sub
xor
cs
and
cmp
sub
sbb
mov
sbb
xchg
sahf
frstor
js
inc
jnp
adc
adc
cmpl
push
ljmp
in
pop
cld
ret
xor
clc
popf
cli
inc
sub
add
icebp
into
jl
loope
ret
add
dec
cmp
sub
jg
or
xchg
flds
push
cmp
sbb
pushf
mov
xor
add
sbb
push
sub
jno
mov
pop
fadds
into
enter
stos
mov
push
or
das
pop
cwtl
sbb
sti
push
xor
test
cmovge
push
dec
stos
or
mov
mov
sbb
shll
push
or
mov
das
stos
inc
add
or
inc
mov
push
mov
fdivs
je
mov
loopnew
sbb
jl
jo
mov
sbb
sub
shr
loop
pop
popa
in
lret
sub
dec
aad
sub
fwait
mov
frstor
adc
cmp
add
inc
fsts
xor
xor
push
or
insl
or
push
mov
clc
adc
enter
fwait
mov
sahf
adc
mov
mov
aam
or
daa
js
or
call
cwtl
fsubrl
mov
fldpi
xor
push
andb
mov
mov
loopne
inc
xchg
scas
push
ja
or
sub
jle
jb
mov
inc
fsubr
or
mov
xchg
dec
jecxz
mov
mulb
sub
mov
push
int
add
inc
push
dec
std
shll
jmp
test
orb
sti
fidivrs
shlb
add
ud2
pop
mov
push
pop
and
insl
push
and
dec
mov
cmpsb
inc
data16
stc
mov
outsb
ja
mov
jnp
add
xor
inc
xchg
es
sub
xor
adc
push
out
add
sbb
nop
push
add
outsb
ss
mov
mov
jo
mov
mov
sti
jbe
inc
ffree
fidivrl
cs
sti
add
js
and
or
or
push
jno
fildl
loope
push
lods
add
or
cltd
lret
pop
xor
push
aam
add
adc
jle
dec
call
mov
dec
cmpw
inc
inc
and
int
fdiv
adc
dec
cmp
in
jg
mov
mov
mov
imul
fchs
insl
dec
subb
dec
push
or
test
imul
ljmp
aas
sub
push
add
sti
add
adc
enter
mov
pop
test
jne
or
in
mov
fiadds
test
rol
jle
cli
inc
stos
sub
clc
xor
cmc
pop
dec
fmull
pop
add
dec
pop
jnp
inc
push
jle
jns
dec
xchg
loopne
lea
clc
imul
shl
andl
dec
rcr
shl
not
test
add
pop
rorl
or
jmp
push
cltd
insb
pop
and
mov
out
pop
jge
scas
mov
inc
insb
sub
adc
shrl
lea
xor
repnz
sub
jae
or
jb
cmp
cli
out
mov
pusha
sub
adc
not
sub
jb
incb
jae
add
sbb
adc
jns
jo
pusha
mov
movsb
pop
ljmp
add
das
imul
jno
xor
mov
sti
loopne
or
dec
stos
inc
and
jp
fsubs
bswap
fs
pusha
test
aam
xor
cmp
push
sbb
rorl
mov
mov
insb
out
and
push
cld
notl
add
lods
xlat
add
popf
je
sub
ds
adc
loop
or
jne
shl
or
adc
inc
mov
jl
adc
xor
pop
xchg
outsb
sub
sarb
je
mov
dec
push
jmp
adc
push
and
in
add
cltd
sbb
and
adc
sbb
sub
or
mov
push
insb
add
cli
xor
shrl
bound
sub
lcall
push
cld
inc
or
xor
inc
lock
orl
adc
leave
push
inc
mov
inc
cmp
js
cmp
imul
or
cs
add
sub
rcll
pop
xorl
inc
sub
fwait
loope
mov
mov
out
and
pushf
add
or
pop
int3
cld
sbb
jge
add
nop
shrb
popa
nop
jle
pop
scas
shl
out
add
sahf
and
add
rorb
or
mov
or
flds
add
or
inc
and
js
lock
and
sbbb
pop
pop
repnz
xchg
test
push
xchg
mov
and
adc
sub
mov
jns
adc
out
add
test
sbb
adc
adc
or
sbb
adc
das
sub
or
inc
sbb
bound
data16
xor
add
adc
lcall
add
movsb
mov
mov
xchg
or
add
pop
mov
pusha
inc
lock
xor
add
or
cmp
in
pop
mov
or
jmp
xor
or
xchg
add
aam
xlat
xchg
int3
mov
sub
inc
rcrl
or
push
dec
jmp
fs
in
ss
cwtl
mov
ss
add
call
nop
or
in
cmpsl
push
mov
scas
add
adc
jmp
andl
jmp
cmpsl
mov
lods
jbe
mov
add
call
cli
bound
mov
inc
jle
cmp
inc
sbbb
xor
pop
fildll
or
xchg
sbb
int
and
sub
shll
sub
mov
dec
add
mov
jae
cmpsl
movsb
cmp
mov
ret
outsb
inc
fisttpl
fwait
sbb
push
pop
jge
pop
mov
mov
pop
and
movsb
jne
push
jae
and
sbb
imul
out
add
mov
call
aaa
mov
lods
out
push
sub
mov
or
orl
cmp
push
and
inc
mov
xor
mov
jo
test
mov
and
call
mov
shrl
add
xor
fldenv
pop
cmp
cmp
testl
cmove
fdivp
pop
push
les
mov
orb
push
mov
mov
shlb
cli
and
sub
out
rolb
or
push
popa
mov
jecxz
add
pushf
jmp
push
cwtl
pop
scas
mov
icebp
xor
push
mov
dec
adc
insb
or
hlt
mov
fimuls
jne
xor
xorb
sub
jge
neg
add
xor
aam
mov
sub
cmp
xlat
test
cmp
lods
scas
mov
sbb
inc
add
ret
jge
jle
add
and
xor
jne
lea
lods
inc
out
and
add
mov
sarl
xor
inc
mov
sbbl
rorl
std
cmp
jb
mov
dec
mov
ss
rorb
nop/reserved
sub
lea
push
xor
and
and
and
scas
mov
nop
shlb
and
jle
std
mov
ja
ja
jae
sbb
pop
mov
pop
adc
inc
testl
fisttpll
mov
les
test
dec
pop
inc
into
jne
inc
or
cmp
fisubrs
cmp
jne
hlt
int3
add
jne
and
pop
mov
or
add
add
pop
lods
scas
mov
es
lea
mov
lea
rdtsc
lods
push
scas
sbb
sbb
cli
icebp
dec
push
clc
je
lock
ja
dec
fs
add
sahf
cmpsb
cltd
jbe
sub
sub
push
sbb
push
stc
jg
add
movsl
lods
dec
pop
aaa
xor
js
aaa
pop
dec
adc
scas
shll
cld
pop
push
add
add
or
shr
mov
or
push
out
out
jae
pop
mov
jg
or
fwait
add
adc
inc
mov
les
lods
mov
mov
jg
cmc
adc
shrl
shl
shr
or
mov
shl
call
jne
xor
mov
push
push
ja
push
add
and
inc
cwtl
sub
mov
xor
xchg
pop
add
ficompl
add
popa
iret
sar
pop
dec
xor
inc
jmp
call
in
push
int3
fidivl
shlb
cmp
xchg
es
orl
nop
dec
push
lock
popf
fiaddl
cmp
sub
add
lret
into
jmp
rcrl
sub
push
xchg
rorb
and
les
fwait
test
data16
jae
xchg
into
mov
cmp
das
sub
add
cmpl
jns
sub
and
mov
les
bound
inc
xor
mov
sbb
repz
shl
cmpsb
inc
nop
push
adc
repz
inc
mov
aam
cmp
sbb
lcall
stos
dec
push
push
aad
ja
enter
jmp
inc
add
test
pop
jne
inc
mov
cmp
add
mov
sub
scas
inc
mov
mov
push
mov
rorl
outsb
pop
cmp
test
push
push
adc
push
or
xchg
scas
cmp
mov
cmp
insb
inc
cs
or
ss
mov
gs
or
out
mov
dec
std
decl
incb
mov
cmp
pop
jne
dec
mov
inc
inc
mov
or
aad
mul
pop
add
rol
add
mov
arpl
outsb
test
mov
in
jno
and
or
orb
jp
xor
aam
das
shrb
xor
dec
mov
cmc
xor
nop
sbb
fsubrl
xchg
mov
push
adc
pop
sti
add
xor
jmp
xor
fmul
add
inc
add
xor
cwtl
add
and
sub
xor
fimull
mov
inc
mov
mov
xor
fdivs
or
and
or
add
loop,pn
inc
inc
mov
push
pop
je
or
jge
setg
sub
fldt
jmp
xor
repz
cmp
sub
jle
add
push
fimull
pop
cmp
xorb
mov
push
hlt
mov
pop
pushf
sbb
loop
lock
decl
adc
pop
lret
jmp
sub
add
dec
dec
add
lock
pop
xor
lds
mov
adc
inc
out
adc
jns
xchg
push
sub
es
inc
pop
idiv
xor
cmp
or
sub
add
movsb
lret
insl
inc
sub
jne
outsb
inc
add
popa
xor
pop
dec
cmp
sub
xor
or
push
cwtl
jp
xchg
xor
cmp
loopne
add
add
ds
jbe
sahf
clc
sbb
enter
aam
sub
scas
add
adc
xor
shlb
enter
jl
push
add
xchg
ja
pop
and
adc
lods
add
or
call
mov
jb
push
repz
loope
push
add
cmp
jle
cwtl
inc
cmp
sbb
mov
call
lret
push
imul
pop
jle
lock
fldl2t
call
in
cmp
jge
and
rorb
mov
push
fcoml
sub
add
rsqrtps
lret
lret
add
rol
addl
aad
push
or
sar
insb
pusha
and
lea
add
out
sub
add
enter
xor
push
pop
sbb
add
cmp
push
add
xchg
mov
inc
enter
aaa
or
mov
mov
push
push
xlat
inc
cltd
xchg
push
dec
inc
xor
leave
and
sub
dec
jmp
jo
mov
xchg
xor
gs
je
cmp
inc
fcmovb
mov
jbe
xor
fistpl
sub
loopne
lock
rcr
lcall
jne
pop
cmp
push
or
sahf
add
mov
scas
test
movb
test
ss
or
mov
data16
and
xor
adc
xor
insl
les
sub
sub
and
nop
mov
push
movswl
les
sar
pop
dec
insb
data16
subb
mov
ret
mov
or
addl
shrd
push
jle
xchg
sub
xlat
inc
sti
jge
jge
sbb
clc
mov
dec
push
xor
incl
xchg
or
scas
inc
add
dec
jmp
xchg
clc
inc
shll
mov
mov
add
scas
xchg
insb
incb
push
inc
or
mov
addb
pop
cmp
insb
loope
xchg
add
js
adc
jo
inc
out
inc
imul
dec
and
fcmovu
or
cld
pop
sbb
js
jg
jb
push
sub
or
pop
push
cmp
fidivrl
rorl
shlb
add
or
push
nop
dec
mov
aam
mov
push
rcl
sbb
jb
jg
lods
lods
sub
jb
in
jb
dec
inc
dec
pop
or
or
sbb
cmpsb
add
xchg
test
scas
shlb
adc
dec
and
or
push
pusha
aad
scas
or
push
popa
cmp
je
int
lods
xchg
aam
sbb
jne
loop
mov
jb
pop
jl
inc
and
int3
xchg
fadds
mov
mov
add
adc
sub
push
sarb
mov
cmp
call
and
mov
add
add
add
loope
ficompl
push
xor
mov
loopne,pt
add
nop
test
stc
cmp
inc
mov
pop
dec
xor
repnz
mov
pop
push
shl
jne
loop
xchg
cmp
or
jbe
adc
mov
rolb
add
and
rorl
adc
push
insl
push
push
xor
jmp
insl
cmp
cld
cld
jl
sahf
sub
hlt
outsb
mov
mov
inc
or
mov
mov
shr
loop
pop
ret
mov
jns
inc
pop
scas
jge,pt
fstp
jle
clc
gs
or
pop
data16
push
pop
aaa
lock
out
cmp
inc
fs
je
inc
je
dec
imul
xor
aas
pusha
xor
sub
adc
cmp
cmpsl
sbb
scas
or
and
dec
mov
bound
inc
jl
enter
idivb
inc
adc
call
jne
fmull
jl
data16
push
pop
clc
fstps
or
leave
push
xchg
inc
mov
push
pop
inc
rcrb
inc
pop
dec
shrb
add
mov
cmp
or
testl
xor
shlb
decb
dec
inc
mov
mov
cmp
mov
sti
clc
jmp
js
outsl
sbb
fdivl
mov
cmpb
jne
jp
inc
rol
dec
in
lcall
adc
xchg
scas
sub
add
hlt
xchg
mov
movsl
hlt
adc
cmp
nop
pusha
dec
cmp
sbb
pop
rol
rcl
lahf
xor
dec
cld
imul
and
sub
dec
hlt
dec
or
ret
lods
push
mov
xor
mov
aaa
sub
pop
mov
loopne
or
cmp
aaa
dec
fwait
je
sub
shlb
insb
xchg
mov
dec
das
int
pop
inc
mov
mov
addl
icebp
fisttps
mov
xorl
adc
out
ss
or
push
data16
mov
mov
adc
sub
and
jbe
scas
mov
push
jp
pop
sbb
mov
pusha
inc
mov
sub
mov
jmp
add
in
mov
ja
mov
fdivs
mov
add
jge
pusha
pop
push
cmpsl
mov
dec
dec
push
insl
pushf
pushf
push
inc
cmp
iret
or
pushf
je
pop
int
lock
mov
js
mov
outsl
adc
jl
cmp
icebp
jae
mov
icebp
mov
mov
or
adc
je
sub
nop
push
mov
sub
mov
xor
xchg
xor
cmc
jmp
testb
je
push
ljmp
or
orb
negl
in
arpl
and
sub
aad
cmp
jne
cmp
adc
add
inc
xchg
rcrb
add
fists
outsb
adc
inc
test
lret
inc
xor
jne
or
or
fcoml
cmp
das
inc
test
aad
xor
mov
enter
or
aaa
mov
jmp
aad
add
push
stos
fdivrs
mov
mov
dec
fs
shr
lods
add
mov
jecxz
push
push
cs
sub
inc
and
into
push
mov
mov
hlt
mov
mov
fsts
xor
xorb
or
sub
push
push
jecxz
mov
inc
dec
dec
xrelease
lock
and
xlat
pop
loopne
cmp
jge
notl
pushf
push
cmp
sbb
sbb
lea
popa
mov
dec
sbb
das
add
mov
adc
sub
push
arpl
and
xor
cmp
dec
cld
or
sbb
inc
jmp
jmp
xchg
dec
jb
inc
add
fcomps
or
jbe
xor
stc
inc
inc
test
data16
sub
sub
jecxz
mov
cmp
xchg
fmuls
ss
pmaxub
mov
jl
adc
pop
movsl
jl
jo
lret
cld
jo
mov
sbb
pusha
js
sbb
leave
pop
jmp
adc
insl
sbb
addb
in
adc
xchg
pop
test
pop
mov
adc
mov
mov
js
jo
adc
xchg
movsl
cld
cmp
xor
test
and
movsl
push
sahf
pop
mov
push
lea
xchg
sub
mov
dec
loope
push
sub
cli
xor
inc
sbbl
jl
repnz
sysexit
xor
enter
ljmp
inc
jmp
dec
jmp
loop
loopne
mov
addl
cwtl
cmp
or
adc
adc
xor
sub
sbb
sub
xlat
sbb
dec
pop
inc
xor
loope
xchg
loope
push
pop
inc
lea
and
and
xchg
mov
pop
or
sbb
push
xchg
iret
addl
inc
mov
lret
es
pusha
cmp
and
rcll
or
rorl
scas
cmpb
jmp
pushf
cwtl
fidivrs
inc
orl
or
inc
mov
notb
jno
in
loop
xchg
pop
jge
adc
jo
add
xor
unpcklps
testb
int
fisubrl
cmp
rol
sub
adc
add
popl
dec
cmp
lea
or
dec
sar
es
add
or
mov
notl
mov
out
pop
or
mov
add
add
or
bound
scas
push
lock
int3
sti
in
or
cmp
xchg
sbb
pop
push
ret
inc
or
or
bound
or
stc
lcall
fnstcw
inc
mov
icebp
movsl
adc
ds
add
flds
dec
testl
scas
and
cli
mov
adc
sub
adc
cs
lods
add
mov
add
sub
push
sbb
dec
sub
sub
mov
stc
out
sub
inc
jbe
gs
pop
and
imul
rcll
mov
mov
push
cli
inc
sub
adc
iret
shl
andl
adc
sub
das
cmp
add
or
ds
clc
add
jbe
imulb
or
test
inc
aaa
mov
test
je
or
push
mov
or
and
inc
je
cmp
dec
sbb
lock
mov
sub
pop
shlb
and
mov
int
negb
add
fwait
mov
cmpsl
push
sti
inc
outsb
add
sub
jne
add
call
mov
ljmp
and
dec
and
push
cli
test
mov
push
movsb
jle
mov
cs
ss
inc
dec
fldl
sub
mov
push
lds
pop
les
or
jl
lret
pop
mov
adc
xor
dec
cmp
mov
xchg
jl
cmpb
jl
xor
sbbb
outsb
cmp
mov
mov
adc
inc
xchg
adc
es
push
shll
rcll
popf
cli
mov
push
push
mov
push
push
and
pop
nop
iret
ds
stos
xor
fldcw
push
push
dec
sbb
jne
aam
pop
or
cmp
sub
hlt
add
or
mov
cmp
jbe
dec
add
scas
ss
and
enter
cli
test
dec
out
or
test
jle
pop
adcl
add
roll
inc
mov
test
jp
xor
je
mov
pop
ret
pop
add
pop
ljmpw
aas
pop
rolb
push
mov
inc
or
into
or
sbb
mov
movsb
mov
add
aam
xchg
or
dec
leave
int3
add
and
xor
repnz
inc
cmp
mov
inc
or
in
dec
jge
inc
inc
mov
neg
neg
sbb
sub
mov
sbb
and
sbbl
adc
sbb
out
push
fcoms
inc
and
fsts
fcomi
sbb
fxch
enter
sbb
and
and
or
dec
jns
mov
push
pusha
cmp
pop
pop
adc
lds
adc
lods
rcl
ljmp
dec
and
shr
test
pop
dec
push
mov
mov
inc
jge
jmp
mov
cld
je
push
cli
dec
notb
mov
fwait
rcrb
push
lds
inc
test
rcrb
pop
pop
add
inc
pop
add
xor
push
jge
faddl
jnp
pop
sub
je
push
or
into
push
sbb
aas
push
dec
push
loopne
dec
adc
adc
push
xchg
bound
add
push
xchg
sub
jge
add
das
bound
jno
leave
sbb
mov
adc
sub
sahf
rcrl
dec
negl
mov
cmp
sub
jmp
pusha
push
loope
mov
or
push
int3
aam
popa
mov
cld
and
ret
int3
dec
pushl
dec
fidivs
clc
mov
arpl
inc
jge
bound
pop
sbb
jbe
add
mov
sub
testb
lds
dec
sbb
push
sub
sub
or
je
cmpsl
mov
mov
mov
and
fists
push
es
mov
je
sti
jmp
in
mov
push
cmp
ja
add
cmp
adc
xor
iret
ret
cmp
jne
out
xor
call
adc
xor
mull
cmc
mov
cmp
pop
push
dec
fimull
add
inc
mov
mov
add
sbb
push
inc
and
mov
dec
mov
pop
aam
inc
jmp
sbb
add
les
ret
jmp
neg
je
iret
icebp
test
mov
fmuls
addr16
data16
sbb
push
shlb
shrb
mov
cmp
mov
mov
cmp
jne
or
xchg
add
arpl
add
jnp
adc
pminsw
jmp
mov
sbb
js
pop
pop
loopne
jg
or
test
mov
jno
cmp
dec
movsl
cmp
push
pop
inc
push
sub
shlb
ja
xchg
sub
mov
cmpb
xorb
fsubl
in
or
nop
pop
add
mov
sbb
sbb
inc
pusha
push
pusha
or
js
xchg
jle
mov
pop
jle
dec
mov
repz
roll
rcl
rcl
aad
repz
xlat
fcomp
mov
adc
fstpt
mov
adcl
or
movsl
pusha
dec
adc
jbe
jne
cmp
test
sbb
mov
or
sti
and
adc
push
inc
ret
push
add
ret
jmp
push
add
push
divb
cmp
test
jmp
push
mov
cmp
mov
pusha
jnp
scas
or
push
push
add
add
adcl
add
push
sbb
push
popa
lcall
mov
imul
or
outsl
mov
lea
imul
lea
sar
mov
js
mov
add
sbb
neg
sqrtps
add
add
into
inc
loop
cwtl
pushf
popf
scas
rolb
or
push
adc
mov
rol
shlb
xor
sti
mov
pop
test
lea
adc
or
fcoml
pop
or
dec
adc
or
daa
or
movb
sti
outsl
mov
icebp
divl
mov
and
lea
pop
incb
test
fimuls
jae
xchg
ja
add
add
push
imul
inc
mull
sarl
ljmp
ss
inc
or
sub
mov
or
mov
jne
in
sub
repz
test
or
push
dec
rolb
push
mov
push
lea
iret
or
mov
or
or
sbbb
movsb
repnz
sub
cmp
pop
shll
inc
repz
addl
pusha
mov
jge
jl
or
dec
pop
loop
test
rol
add
stc
jle
jle
test
adc
sub
lea
inc
cmp
add
cld
or
jg
into
loopne
cmp
rorb
add
push
push
lret
movl
clc
cltd
adc
inc
lods
ffreep
adc
insl
clc
in
out
sbb
inc
xchg
mov
or
dec
add
inc
lods
pop
enter
lock
test
inc
sahf
cmpsl
mov
inc
cli
div
cmp
test
jb
cmpb
or
rorb
loopne
mov
push
jnp
sbb
adc
mov
adc
ret
dec
xchg
push
clc
and
and
icebp
loopne
fstl
and
and
idivb
movsl
dec
rolb
lock
inc
push
xlat
xor
push
popa
cmpsl
add
pop
sub
cmpsb
imul
or
clc
xor
xchg
mov
test
addr16
negb
or
and
dec
pop
inc
js
xchg
and
inc
xor
mov
xor
in
or
fisttpl
shlb
fdivrs
enter
aam
inc
inc
test
dec
or
xor
or
sub
les
xor
cltd
mov
mov
ja
push
cld
lea
fcmovu
mov
mov
inc
pop
push
aam
add
lods
adc
adc
and
adc
loop
mov
sbb
negb
negb
test
xchg
inc
inc
lock
enter
out
or
jge
les
js
xor
sbb
dec
incb
jne
jne
sbb
loopne
lods
dec
mov
pop
test
mov
add
sub
jle
sbb
insb
sbb
add
mov
push
add
push
nop
mov
push
das
sbb
adc
xchg
adc
add
dec
cmpsl
sub
push
test
jb
sub
push
shll
add
fiadds
sti
pop
jle
inc
imul
jmp
mov
call
loopne
daa
mov
lea
push
and
cmp
jecxz
loopne
jcxz
in
out
mov
into
pusha
push
sti
and
xchg
test
repnz
mov
add
dec
push
lret
xor
out
xchg
sbb
mov
and
jne
cmp
stos
jbe
insb
imul
mov
add
enter
in
mov
push
shlb
add
testl
add
pop
cmp
shll
into
or
mov
cli
pusha
test
inc
xchg
inc
in
imul
dec
mov
dec
cmp
shrl
jmp
cmpb
or
add
dec
cmp
jae
mov
add
pop
dec
lret
sub
orb
pop
add
or
and
js
hlt
xchg
jp
jne
dec
mov
jb
int
sbb
pushfw
adc
mov
dec
and
add
push
add
dec
jbe
ret
adc
in
mov
enter
or
sub
dec
push
adc
and
ret
lcall
add
push
mov
ret
and
mov
adc
fisttps
jmp
jmp
xchg
push
or
dec
out
add
or
xchg
stos
pop
pop
scas
add
adc
mov
add
pop
pop
mov
lods
xor
in
inc
pop
movsl
rclb
add
add
in
pusha
maxps
ret
mov
mov
inc
and
cmp
xor
into
cmp
mov
call
add
rcrl
ret
push
das
cmpb
prefetchw
mov
adc
sbb
imul
adc
lret
rclb
or
add
add
fsubl
lret
lock
jl
or
mov
push
je
dec
pop
or
adc
xlat
dec
pop
lahf
xor
add
xchg
mov
xor
mov
clc
enter
inc
jge
sub
ret
addb
jle
cmp
xor
and
mov
cld
jnp
es
xorb
or
inc
testl
add
add
into
xchg
rorb
sub
fs
xchg
rclb
mov
movsb
cmp
test
adc
lcall
add
pop
xchg
jle
sahf
pop
cmp
sub
xor
daa
daa
iret
addl
into
into
into
inc
push
cmp
inc
sbb
sarb
push
pop
nop
pop
dec
sbb
cld
pop
rolb
and
or
es
in
lods
pop
add
sbbl
pop
lcall
add
leave
lahf
pop
test
out
adc
add
or
jns
add
add
and
or
je
inc
lods
movsb
and
fcom
xor
sbb
sub
xchg
or
mov
lret
sbb
daa
lret
xor
loopne
pusha
push
xchg
push
or
adc
push
xchg
faddl
mov
xor
ret
pop
fmul
cmp
mov
mov
push
push
cmp
jo
or
pop
cmp
stos
sub
cmp
int
rol
ficomps
adc
sbb
call
push
daa
xlat
xor
or
and
adc
sbb
jge
addr16
cli
es
dec
mov
lea
icebp
or
cmpsl
mov
adc
nop
das
dec
mov
mov
push
rorb
mov
dec
or
out
push
adc
push
loop
and
sbb
loopne
xor
jmp
adc
dec
sub
test
jb
sbb
insl
sub
out
je
push
sub
leave
or
mov
cmp
in
adc
jbe
inc
inc
int3
call
jle
ret
ficoms
imul
xchg
add
sbb
or
sub
fwait
or
xchg
dec
jl
lock
into
sub
push
or
js
sbb
aam
fbstp
mov
movsl
rolb
push
cmp
cltd
repz
sub
and
inc
and
loopne
movsl
or
cld
imul
test
fs
and
inc
push
pusha
rcrb
js
movsl
mov
mov
sarb
scas
sub
repnz
pop
in
pop
xchg
inc
test
push
xor
mov
out
je
and
call
fcoms
cs
cmp
cwtl
pop
mov
out
fs
xlat
and
sbb
int3
adcb
sbb
inc
and
test
sbb
je
out
imul
fcoml
inc
inc
xchg
adc
sahf
fstps
dec
inc
sbb
inc
pop
xchg
dec
clc
lcall
inc
sbbb
jge
lea
jae
lret
or
or
pop
push
imul
adc
sub
mov
cmpsl
cmp
cmpsl
push
xchg
xor
fildll
cmp
arpl
test
inc
dec
orb
sbb
sbb
bound
ds
aas
call
cs
add
add
jae
icebp
ds
mov
jmp
push
push
xlat
adc
add
push
dec
jo
fcompl
outsb
lods
flds
sub
das
adc
sub
jmp
xor
inc
dec
xor
mov
inc
hlt
push
addl
sub
lock
push
inc
das
lods
aam
ret
scas
pop
sbb
addr16
daa
add
pop
fisubl
xor
adc
inc
inc
adc
popa
dec
fdivrl
outsb
add
mov
and
push
or
into
outsb
cmp
std
xchg
xor
add
rolb
orl
xor
mov
add
std
add
lcall
dec
daa
loop
cmp
push
and
clc
add
mov
mov
addl
sahf
xor
ret
decl
inc
jl
push
lock
pushf
cld
jecxz
or
jl
mov
lea
push
ss
jmp
lock
push
adc
gs
pop
insw
daa
repnz
pop
nop
add
in
dec
iret
jae
fcoms
js
pop
sbb
aas
stos
loopne
jmp
dec
loop
add
dec
int
fisttps
xchg
push
ss
scas
push
sub
js
cli
mov
rorl
mov
pop
lahf
xchg
mov
mov
push
sbb
loop
sbb
sar
inc
and
sbb
push
das
shlb
jno
shlb
dec
aas
sub
sub
add
es
mov
lret
outsb
xchg
sbb
xor
sbb
fwait
push
and
push
adc
cmpsb
inc
hlt
xor
sbb
in
sub
mov
push
adc
push
lock
xchg
incb
rcr
pop
testb
push
inc
lock
inc
inc
ds
push
mov
mov
and
or
pusha
ja
cmp
icebp
dec
xchg
push
jno
pusha
arpl
or
pop
add
in
enter
js
cwtl
add
sbb
push
daa
data16
adc
loopne
test
adc
addr16
sbb
sbbl
andl
fwait
cli
adc
push
pop
ret
adc
lods
or
xchg
pop
inc
das
mov
mov
add
and
pop
xchg
mov
dec
loop
loopne
sub
loope
and
jne
mov
mov
clc
out
cvttps2pi
mov
aaa
xchg
aaa
push
stos
add
pushl
scas
mov
pop
cs
fld
push
subl
insb
push
lahf
and
xor
jmp
test
jns
fstps
icebp
lahf
mov
add
sub
cmp
fcomp
in
fidivl
adc
inc
and
xchg
test
mov
push
popf
sub
dec
arpl
dec
add
or
aaa
sarb
dec
in
lahf
lret
iret
mov
pop
push
js
sub
in
jnp
lret
add
rolb
fcompl
jb
in
test
inc
gs
mov
mov
jb
mov
xchg
aad
cmp
jecxz
jbe
sub
mov
fcoml
clc
dec
add
xor
enter
inc
pop
dec
dec
fimull
in
lock
jp
lock
pop
push
hlt
cmc
adc
nop
dec
mov
call
pusha
jnp
xor
mov
popf
pusha
mov
add
pop
fsubrs
insl
and
add
enter
jge
adc
cltd
in
adc
and
mov
cmp
xor
sub
adc
imul
or
test
jae
cld
enter
pop
push
mov
or
xor
sbb
sti
push
cmp
pop
fwait
cmp
xchg
pop
dec
mov
lock
fmull
and
add
es
sub
mov
in
mov
dec
dec
pop
mov
or
and
movsl
pop
and
cmpl
pop
adc
pushf
call
dec
lret
nop
les
rclb
test
in
xchg
in
cmp
jge
adcb
in
movups
mov
outsl
dec
leave
int
sbb
sub
mov
mov
fcoms
jnp
dec
test
mov
push
adc
xchg
in
xor
call
sbb
add
lods
pop
hlt
add
test
xchg
and
sub
pop
add
dec
mov
fstpt
cmp
lds
adc
pop
mov
adc
and
dec
js
in
orb
addb
loopne
cmpsb
dec
or
aaa
sub
call
loop
or
shlb
sub
repz
fsubl
int3
or
jb
mov
mov
call
and
test
adc
adc
xor
insb
jne
adc
xchg
dec
xor
cmp
xchg
dec
xor
dec
xor
leave
fs
lods
mov
sbb
and
pop
repnz
rol
lods
sbb
int3
add
jb
rcr
inc
fimuls
push
xchg
lock
leave
pop
push
pop
jb
test
dec
rolb
shll
cmp
hlt
fwait
aam
jmp
in
push
adc
orl
loop
add
int
call
adc
add
loopne
dec
xchg
or
mov
cmp
movsb
movsl
add
sbb
add
and
mov
push
mov
xchg
mov
jbe
movsl
aam
scas
sbb
gs
enter
xor
fcompl
pop
xor
and
or
test
in
mov
xor
or
nop
arpl
mov
call
loope
inc
mov
pop
call
cwtl
in
sub
pop
dec
fsubr
push
or
push
enter
mov
cmp
ds
mov
lcall
add
and
mov
jg
dec
xchg
push
in
sub
sub
and
xchg
push
inc
inc
fidivl
xchg
dec
adc
jp
xchg
out
xchg
cli
je
or
int3
mov
pop
subb
out
sahf
loop
dec
fwait
insb
int3
out
sub
popf
xor
lcall
sbb
mov
mov
inc
push
ret
daa
mov
out
mov
xchg
and
jecxz
in
jno
add
adc
iret
and
adc
adc
mov
dec
and
add
adc
jl
adc
or
dec
cmp
outsb
inc
rcr
lea
shrd
mov
dec
dec
enter
xor
popf
inc
stos
rorb
mov
sbb
add
ret
sbb
mov
in
push
cwtl
xchg
ja
adcb
shrl
cmp
stos
pop
and
les
xor
adc
cmp
fcoms
push
scas
fmull
or
mov
mov
push
mov
lock
mov
mov
leave
sbb
lea
push
cwtl
bound
xchg
int3
das
unpcklps
insb
xchg
and
jb
inc
mov
adc
sahf
xor
xchg
inc
mov
insl
jl
jno
push
jmp
push
dec
xchg
and
roll
push
pop
filds
adc
add
sbb
mov
icebp
inc
adc
jo
stos
xchg
stc
xchg
out
sbb
mov
cltd
fs
cltd
ss
sbb
es
jl
subb
fwait
inc
sub
push
inc
loopne
sbb
cmp
aaa
adc
push
lock
push
dec
cmp
adcl
bound
in
adcl
xchg
jnp
imul
aad
scas
in
dec
call
bound
ss
xor
iret
adc
lods
add
push
add
and
stc
mov
sbb
cmp
xchg
jmp
xor
mov
sbb
cmpsb
test
add
imul
in
sbb
add
imul
nop
loope
xchg
pop
imul
clc
xchg
out
pusha
scas
cmc
sub
popa
xchg
add
sbb
enter
or
and
or
sbb
and
aaa
call
inc
xchg
ja
cltd
jbe
mov
subl
xchg
mov
lcall
cmp
adc
dec
leave
inc
sahf
or
jo
inc
xlat
push
jo
addl
adc
inc
andl
or
xchg
mov
pop
jo
in
and
lds
cwtl
cmovne
popl
xchg
outsb
push
movsb
jl
cmpb
fwait
cltd
mov
aam
enter
or
push
mov
fcompl
cwtl
das
adc
inc
sub
and
nop
decb
pushf
arpl
in
pop
bound
repz
sarl
pop
aam
int3
or
call
adc
push
in
popf
dec
push
and
lea
int3
inc
subb
push
mov
gs
fstpt
fdiv
rcrb
dec
orl
sbb
inc
sahf
scas
test
je
arpl
inc
add
xchg
lds
movsl
mov
mov
mov
movsb
aad
dec
int3
lds
sarl
pushf
pushf
fsubl
mov
int3
enter
pushf
pushf
sarb
mov
cwtl
mov
pushf
or
fsubrs
pop
rolb
push
dec
add
lcall
pop
enter
or
insl
push
test
cwtl
test
mov
sbb
mov
mov
push
mov
setne
pop
jb
test
movsb
xchg
nop
pop
or
or
mov
mov
mov
adc
sbb
mov
pop
loopne
add
fbld
mov
decl
sbb
insl
adc
sbb
push
or
call
inc
in
mov
aad
mov
xchg
test
mov
inc
mov
cmp
imul
push
movsb
and
dec
cwtl
movsb
std
rolb
jno
repnz
inc
js
insb
shrb
sbb
in
call
jno
push
xor
xor
adc
jne
test
and
enter
mov
or
xorl
sub
mov
push
add
push
sub
in
movsb
cmpsb
and
addl
call
fsubl
les
rorb
aas
xchg
inc
sbb
repz
movsl
xor
xchg
rorb
and
push
enter
lods
sub
or
test
loopne
jmp
or
fimull
or
push
mov
std
mov
add
rcll
adc
mov
and
loop
ret
imul
cltd
fs
test
test
mov
and
adc
in
inc
push
inc
in
pop
xchg
lcall
inc
or
mov
cmc
jne
mov
int3
test
fdivrl
inc
stos
xor
es
rclb
in
pop
xchg
aam
fsubrl
xchg
sbb
mov
adc
inc
mov
lcall
pop
imul
mov
push
mov
stos
pop
and
sub
fcomps
push
or
aas
fsubs
or
inc
ds
add
and
test
push
pop
lods
jae
test
xlat
aam
les
push
test
lods
sti
sub
and
xchg
fs
sub
mov
lea
mov
test
popf
mov
scas
les
mov
add
scas
stos
es
push
out
push
cmp
inc
inc
test
add
movsb
lods
mov
imul
sti
popf
andb
add
in
mov
movsb
int3
divl
mov
inc
sbb
fsub
push
mov
pop
xor
jb
xchg
jo
xor
rolb
push
mov
push
inc
lock
iret
shlb
cwtl
outsb
fwait
loopne
mov
jns
mov
rorb
dec
xor
adcl
ss
adc
sti
pusha
adc
mov
pop
loopne
mov
jmp
shrl
mov
and
outsl
mov
push
pop
inc
pop
test
inc
lds
or
mov
in
push
push
sbb
in
pusha
mov
ret
repz
mov
adcl
or
mov
mov
add
aaa
adc
mov
ljmp
shlb
ret
push
dec
cmp
xchg
pop
ret
test
imul
mov
mov
lock
sbb
cmc
pop
and
mov
sub
cwtl
mov
jecxz
jg
sbb
aam
fisttps
xorb
loopne
xchg
or
lods
mov
sbb
out
adc
jb
shrb
mov
cmp
insl
test
inc
mov
cld
inc
adc
mov
adc
add
mov
popf
push
movsl
rorb
xor
add
adc
or
xchg
popl
jmp
addb
fnsetpm(287
add
les
dec
sbb
mov
dec
sub
pusha
ficoml
fs
mov
jns
daa
fdivrs
addr16
mov
ret
les
inc
add
dec
shrb
cmc
xor
xchg
popa
pop
push
pop
call
sbb
test
out
mov
push
mov
test
pusha
les
iret
call
mov
mov
out
mov
dec
add
imul
lods
fs
test
psraw
mov
or
stos
cmpsb
lea
jne
fmull
mov
enter
sahf
dec
mov
and
push
mov
dec
jge
or
jb
pop
imul
adc
in
push
and
or
add
pop
movsb
cmp
xor
add
enter
lock
cs
dec
sub
out
jnp
push
jns
sbb
filds
mov
inc
add
lcall
jecxz
setnp
add
gs
cs
add
add
sti
cmp
mov
aas
loopne
test
or
cmp
cmp
xor
pusha
sub
cmp
nop
mov
and
je
subb
fnstsw
aad
loopne
pop
jb
cmc
fsubr
sbb
out
les
mov
mov
adc
hlt
xor
test
cltd
nop
in
pop
sbb
add
pusha
mov
or
push
arpl
daa
adc
cwtl
shr
jo
or
adc
mov
adc
ret
lea
test
xchg
xor
scas
pop
je
and
test
xchg
push
ret
test
xor
jmp
mov
imul
mov
nop
and
fs
pusha
mov
es
mov
mov
mov
test
enter
nop
xchg
incb
rcr
ret
sub
popa
lret
test
enter
mov
call
int3
lcall
les
inc
adc
mov
gs
mov
outsl
and
incl
add
les
jno
pop
in
lcall
sub
lds
sbb
lds
inc
push
sbb
jae
test
and
push
push
sbb
mov
ss
pusha
mov
xor
cmp
sbb
sub
cmp
xchg
sbb
shr
and
dec
jo
scas
inc
lods
stos
les
fmuls
cmp
pop
xor
std
inc
es
add
or
cltd
nop
notl
out
test
adc
inc
mov
ret
in
jge
inc
and
vucomiss
pop
mov
add
inc
cmp
std
xor
xor
or
outsl
aas
movsb
dec
inc
pop
or
adc
push
push
out
shlb
cmp
xchg
inc
pop
or
dec
push
mov
dec
leave
adc
pop
enter
cmp
xchg
scas
dec
mov
invd
xlat
add
xor
inc
sti
movl
rclb
in
or
in
inc
call
test
dec
mov
dec
das
or
mov
jae
mov
shrl
fwait
jo
cmc
pop
leave
mov
fimull
pinsrw
movsl
inc
add
enter
inc
add
sbb
test
mov
sub
add
orb
call
cmp
lret
and
push
pop
movsl
arpl
jb
pop
cwtl
lret
push
andb
push
inc
or
dec
int3
and
and
test
and
aam
lods
fcoms
dec
int
sbb
push
mov
push
lods
adc
sbb
mov
xchg
mov
into
stos
xchg
sbb
sbb
mov
lock
adc
call
cmpsb
mov
sti
andb
sbb
add
adc
pop
aam
dec
test
inc
mov
adcb
mov
mov
mov
aam
in
in
rcll
fs
dec
and
sbb
sbb
pop
insl
cmp
fildl
test
insl
push
and
clc
xor
imul
loopne
call
dec
roll
xor
test
leave
and
sbb
xor
icebp
xor
hlt
mov
dec
xor
mov
aad
cmp
xor
sub
jl
jne
dec
fwait
push
push
fadd
mov
adc
mov
aad
adc
test
insl
xchg
arpl
leave
and
dec
xchg
js
and
dec
xor
add
fistl
push
mov
lods
call
mov
and
inc
cmpsb
dec
clc
loopne
pusha
cmp
cmp
imul
or
pop
sbb
push
movsb
scas
and
adc
cmp
je
jbe
aam
lds
or
nop
push
add
lds
sub
pop
sbb
push
inc
lahf
pop
pop
add
imul
xor
pop
ljmp
pop
lea
daa
in
mov
cmp
mov
cwtl
sbb
fistpl
call
cmp
mov
sub
rcl
movsl
mov
fcoms
sub
fsubl
test
test
mov
and
add
dec
aam
ljmp
xor
test
sub
in
and
fsubs
inc
test
add
je
movsb
rcr
push
sub
fcomps
lods
test
cmpl
loope
inc
sub
stos
inc
sbb
pop
adc
push
sub
imul
ret
cltd
sbbb
mov
push
xor
inc
rcl
add
add
lcall
addr16
lock
push
fisubrl
push
fcom
ficoms
clc
inc
lock
xchg
cmp
hlt
xchg
xlat
dec
jl
testl
cld
pop
dec
mov
xor
adc
sbbl
mov
pop
inc
mov
ja
scas
mov
cltd
loopne
adc
mov
ffree
mov
int3
sbb
and
ss
cmp
fnsave
cmp
xor
outsb
mov
inc
pop
sub
jns
inc
xchg
jmp
mov
inc
popa
and
mov
add
adc
shll
or
mov
inc
push
pop
fmull
insl
xchg
out
mov
adc
jl
jo
push
enter
sub
dec
aad
mov
pop
dec
pop
pusha
dec
push
fdivs
test
push
enter
lea
fs
test
and
insl
pop
rorl
pusha
sbb
xorl
xchg
inc
and
pushf
inc
ds
dec
inc
faddl
call
jmp
or
inc
testb
pop
fidivl
xchg
adc
mov
leave
shrb
cmp
pusha
adcl
push
icebp
cmpsb
lock
or
call
pop
mov
aam
ja
cmp
and
add
loopne
lahf
xchg
jl
push
pop
inc
loopne
scas
mov
pusha
or
push
mov
test
mov
mov
mov
pop
fisubrs
mov
mov
popf
out
lea
sub
std
dec
inc
cwtl
and
sbb
or
movb
pop
ror
jmp
js
les
and
push
and
pop
sbb
int3
cld
sarb
ret
xchg
out
and
fs
aam
dec
shr
jmp
enter
ja
and
mov
mov
fsub
lods
out
adc
add
repz
mov
mov
out
lcall
aad
pop
insb
pusha
add
pop
cld
or
mov
fnstcw
sub
push
inc
xchg
insb
fwait
les
sbb
out
inc
and
xchg
inc
mov
mov
ljmp
dec
mov
fistpl
or
jnp
mov
add
lahf
pop
pop
and
shlb
leave
or
adc
outsl
dec
mov
out
leave
ljmp
cmpb
or
repz
or
push
xor
add
cmp
sbb
or
loop
cmp
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
push
inc
orb
pop
popa
bound
gs
jmp
imul
jo
jb
je
jbe
js
jp
xor
xor
sub
dec
incl
daa
adc
mov
rcll
xchg
adc
push
or
cmp
xchg
stc
cmp
adc
adc
push
jns
out
imul
xchg
mov
add
je
jb
outsl
arpl
fs
pop
cmp
out
sbb
push
dec
imul
pushl
fdivs
cmp
jb
gs
xor
cs
adc
test
pop
bound
and
popa
je
outsl
outsb
push
mov
fldenv
bound
sub
lock
rdpmc
add
push
mov
jnp
add
pop
sub
mov
sahf
cwtl
aaa
imul
inc
js
je
jb
gs
add
mov
or
outsl
add
add
add
pop
cld
in
add
push
gs
push
je
mov
jbe
lock
jb
mov
outsb
pop
pop
pop
mov
arpl
cmp
jne
iret
mov
sub
dec
and
jns
fbstp
das
das
adc
push
dec
push
inc
jbe
pop
lock
gs
insl
bound
daa
dec
outsl
jbe
jo
dec
arpl
push
jo
sub
addr16
mov
xchg
dec
jne
xchg
mov
lahf
out
roll
jb
insb
dec
popa
jb
push
jnp
insb
pusha
inc
insb
adc
jae
scas
cmpsl
xchg
popl
popa
into
cmp
addr16
push
jne
fs
or
fdivl
lahf
mov
daa
cwtl
mov
clc
sbb
dec
pushf
mov
cmpsl
js
push
jne
xchg
lcall
ds
popa
das
jo
mov
insl
pop
filds
mov
and
add
ss
fs
out
jno
push
adc
mov
add
inc
add
jmp
daa
sub
sub
sub
cs
movsl
jo
ljmp
aas
inc
das
pop
pop
lahf
mov
cmp
jge
pushf
lcall
outsl
inc
test
mov
and
push
pop
or
divb
inc
adc
push
inc
insb
jmp
les
push
fs
shr
scas
mov
inc
inc
mov
jnp
test
xor
insl
and
aaa
cmp
lds
jbe
dec
push
push
sbb
inc
outsl
int
imul
and
push
aad
ss
xor
sbb
push
jo
imul
push
pop
mov
je,pn
mov
and
push
sub
and
fs
test
push
out
scas
mov
push
insb
gs
int
xorb
inc
popa
and
loopne
data16
mov
jne
pop
xor
and
mov
push
xchg
sub
inc
or
rol
mov
lcall
int
out
mov
out
es
and
or
imul
pop
es
addr16
sbb
xchg
mov
jo
inc
pusha
je
and
push
dec
addb
mov
popf
jb
loopne
outsl
mov
loope
fcmovu
push
daa
sub
dec
addb
das
arpl
roll
cmp
arpl
das
orl
mov
fiadds
inc
xchg
jge
inc
xchg
insb
imul
in
int3
or
xchg
lcall
mov
push
sbb
inc
mull
push
push
fistps
push
adc
pusha
pop
aaa
xor
jbe
lock
shll
or
es
out
nop
add
sub
mov
ja
outsl
outsl
or
or
push
hlt
pusha
in
jo
cli
jbe
add
je
and
xor
xorl
das
mov
int3
loopne
or
lds
push
and
inc
jle
outsl
pop
scas
xor
arpl
lcall
bound
cmp
mov
insl
in
ljmp
imul
dec
xor
imul
mov
pusha
aad
jae
rclb
leave
icebp
sbb
imul
cmp
xorl
in
xor
add
or
push
and
test
pop
push
cmp
addr16
jae
xor
add
push
pusha
jo
sub
test
pushf
jb
push
sub
add
bswap
inc
sub
pop
dec
jmp
dec
or
jo
and
vmovd
cmp
cwtl
ja
ds
inc
inc
mov
lods
and
dec
cmp
jg
ss
fisttpll
lcall
loopne
add
cmpb
rol
push
out
ret
das
lret
jno
icebp
pusha
inc
mov
clc
ret
pop
mov
jno
add
add
mov
push
loop
imul
ret
gs
popa
dec
add
inc
test
enter
popa
js
jae
stc
inc
jae
je
pop
dec
pop
add
ja
sub
addr16
imul
xchg
adc
jae
add
adc
add
add
add
add
xor
cmp
pop
or
aaa
ds
push
pop
xor
and
or
pusha
add
js
popf
cltd
testl
add
sbb
mov
addb
addb
mov
imul
and
adcb
pop
daa
push
addr16
mov
push
and
sub
jb
pusha
mov
jnp
push
jo
add
dec
icebp
adc
js
inc
add
xlat
push
stos
outsl
xor
int3
js
jo
dec
rclb
sbb
xchg
pushf
cmp
mov
nop
xchg
xchg
xchg
outsl
shll
adc
cmp
les
push
adc
mov
ds
ret
sub
pop
add
daa
pushf
jo
and
daa
pushf
jo
cmp
pop
data16
jo
or
inc
and
and
cs
mov
in
decb
add
add
cltd
nop
sub
sub
dec
mov
inc
cmp
xchg
dec
adc
add
add
mov
subb
andl
dec
add
mov
enter
add
adc
cmp
fucompp
add
aaa
add
sub
insl
adc
mov
push
adc
and
add
incl
test
mov
xchg
xchg
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
popf
sahf
lahf
mov
movsl
cmpsb
cmpsl
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
ret
enter
int3
int
iret
rcl
rcl
aam
xlat
fcomp
fcmovu
fdivr
fstp
fnstsw
loope
jecxz
in
out
jmp
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
adc
shll
or
lcall
push
or
roll
xchg
push
add
fists
xor
pop
outsl
ja
inc
push
call
gs
bound
dec
stos
imul
ss
popa
mov
xchg
mov
jne
daa
pop
lea
std
ja
dec
mov
outsl
js
push
push
inc
push
mov
inc
dec
dec
and
insb
gs
jne
out
mov
dec
mov
daa
add
aas
lret
scas
push
insb
in
dec
imul
sbb
jb
jo
ds
and
dec
dec
insb
cmp
inc
jns
daa
pop
mov
mov
mov
aad
lcall
addr16
cmp
adc
mov
mov
arpl
pop
pusha
push
pusha
inc
jbe
push
lea
or
push
and
or
push
sbb
popl
clc
mov
sti
cmp
push
loopne
push
and
inc
es
dec
adc
mov
lock
ret
test
push
insl
mov
test
aas
cmp
insb
call
loope
xor
subl
gs
push
adcl
xchg
inc
push
push
push
push
dec
testl
push
jne
repnz
mov
cmp
and
mov
sarb
jg
xchg
aam
imul
call
sub
jg
jae
xor
xchg
addr16
pop
jg
popa
jl
fistl
or
mov
cmpl
push
or
lods
sbb
pop
das
je
xlat
arpl
outsl
xchg
daa
xchg
mov
fisubl
daa
popw
pop
cmp
out
xor
add
ds
sub
insb
dec
imull
inc
jl
push
jle
sub
dec
fstpt
dec
sub
sub
push
cmp
dec
in
jp
and
cmp
fst
mov
dec
pop
pop
xor
lods
lret
addr16
push
jb
imul
adc
xor
lret
ret
xor
push
xor
in
add
es
cmpsb
inc
out
jo
sub
shr
jo
lahf
sub
cld
push
sahf
out
pop
hlt
push
call
outsb
lahf
out
mov
cwtl
cmp
idivl
imul
aam
cwtl
nop
ss
out
mov
push
test
sahf
out
je
fs
add
fldcw
pop
pop
pop
dec
push
clc
inc
or
imul
adc
in
push
cmp
cmp
dec
push
inc
movb
rorl
xor
je
cmp
cmp
repz
sub
sbb
cmp
repz
add
decl
lock
in
shrb
dec
sub
or
sahf
out
fiadds
test
pusha
inc
xor
lahf
out
xor
sbb
std
in
repz
repz
mov
insb
out
ds
inc
sbb
cld
aam
push
out
sahf
mov
sbb
pop
aam
lcallw
test
bound
outsb
push
xor
test
mov
test
xchg
cwtl
cmpsl
pop
push
jb
bound
fs
sbb
cmp
jno
je
or
std
sub
sahf
shrd
sub
cld
push
clc
movsl
add
sarb
insb
cmp
inc
inc
dec
jae
insb
push
sub
insb
inc
mov
jnp
push
sbb
dec
inc
dec
xor
inc
in
outsl
clc
dec
dec
dec
push
push
loop
and
inc
dec
add
dec
dec
inc
add
das
adc
sub
adc
sbb
std
incl
popa
into
mov
mov
adc
outsb
cmpl
fidivl
push
pop
jg
cld
clc
lret
sbb
jb
xchg
jge
arpl
cmp
adc
fcomip
das
in
scas
jp
adc
fisubrs
xchg
out
enter
cmp
dec
imul
sti
dec
lret
add
inc
mov
mov
sub
fwait
mov
inc
sbb
pop
jns
ds
xor
incb
fisttps
dec
dec
xor
dec
popf
pxor
xor
lret
aaa
push
div
inc
sub
dec
xchg
lcall
cmp
cmpsb
das
xchg
pop
and
xchg
lret
sahf
icebp
mov
mov
loopne
cmp
inc
mov
xchg
push
pop
popa
push
or
scas
int
out
mov
mov
pop
leave
loop
mov
xchg
dec
mov
das
and
lods
jb
xor
sti
adc
pmaxsw
pop
and
es
xor
addr16
flds
sbb
push
mov
mov
jbe
and
add
inc
std
mov
push
les
inc
div
int
sbb
push
dec
aas
iret
push
sub
mov
cmp
or
dec
xor
aaa
adc
fistps
push
cmp
inc
pop
push
pop
adc
xor
push
sub
aaa
sub
sbb
pop
sti
incl
push
sub
or
dec
adc
adc
in
pop
and
ss
subb
fists
xchg
add
xor
pop
sbb
push
pop
jnp
mov
aaa
push
dec
dec
push
sbb
push
and
inc
xor
jnp
add
add
and
lods
sti
ss
ja
pop
movnti
cmp
ljmp
sahf
loopne
jg
add
xor
cmp
sub
sub
sbb
xor
sti
sti
out
pop
cmp
push
pop
dec
or
and
sub
xor
xchg
pushl
dec
cmp
and
pop
xor
xor
cmp
pop
xor
sub
add
js
inc
and
pop
fildll
dec
sbb
push
inc
sbb
cmpsb
xchg
jl
aad
push
and
inc
ret
sbb
cmp
pop
push
push
cmp
xor
cmp
fists
shll
mov
dec
pop
and
xor
and
add
sub
pop
inc
sbb
push
and
fcmovb
int
imull
sbb
xor
cmp
cmp
and
pop
cmp
mov
sub
outsl
pop
adc
or
sbb
cs
add
push
adc
dec
cmp
adc
xor
stos
sbb
push
push
mov
jb
out
mov
add
gs
jg
sbb
xchg
or
xor
dec
xor
dec
inc
cmp
dec
pop
dec
decb
push
pop
dec
cmp
in
mov
jl
sub
jo
fbld
ja
inc
sub
cld
push
sub
adc
push
sar
inc
pop
adc
dec
nop
dec
cwtl
in
push
cmp
lcall
movsb
push
test
mov
repz
repz
into
rcr
cmc
add
sbb
and
outsb
jg
push
sub
ds
popf
iret
jnp
pop
push
xor
inc
adc
sbb
add
or
idivl
inc
adc
push
sbb
sbb
int3
hlt
pop
inc
sbb
adc
push
popa
push
xor
and
insb
jbe
test
popa
mov
popl
test
push
dec
bound
fistpll
cvttps2pi
sub
out
ds
pop
ds
sarl
cld
scas
xchg
push
sarl
iret
sarl
iret
std
call
push
cmp
repz
xchg
cmpsl
stc
or
aas
repz
pusha
sub
lods
sub
lock
adc
or
xor
push
aaa
sub
push
scas
cs
mov
cmc
call
add
cmp
sub
mov
pop
xor
jae
mov
mov
or
push
imul
sub
add
push
inc
dec
adc
nop
sbb
jmp
icebp
mov
push
add
jg
push
and
inc
sbb
sbb
fcoms
push
xor
cmp
sbb
movsb
xor
jb
pop
dec
pop
sub
dec
cmp
inc
and
rol
push
and
fildll
sub
pusha
sub
dec
push
cmovo
pusha
inc
inc
or
sbb
inc
sbb
mov
out
push
xor
nop
test
out
adc
sti
shlb
sub
ret
fsubl
cld
xor
out
pop
push
sub
scas
sysret
sbb
sub
add
mov
jge
fs
shll
scas
pop
dec
xorl
pop
mov
daa
daa
cmp
cwtl
xor
test
ret
sahf
push
or
jbe
ret
adc
push
push
pusha
sub
stos
int
push
or
sub
insb
push
add
push
cmp
cs
push
insb
cmp
push
pop
push
push
cld
jbe
cs
inc
dec
sub
xor
dec
cmp
push
xor
sub
and
mov
xor
sbb
shll
xor
aaa
sub
icebp
xor
sbb
andb
out
and
testl
or
outsl
scas
add
and
xchg
sub
or
sub
cmp
inc
testl
clc
aaa
adc
insl
sbb
pusha
and
push
pusha
pop
es
push
icebp
in
xor
sub
and
aam
outsl
jle
push
xlat
and
into
aaa
daa
push
cmp
adc
xchg
sub
gs
into
adc
cmp
lods
or
aaa
dec
movlps
daa
aaa
mov
sbb
or
xor
cs
mov
and
push
das
divl
push
adc
loop
fs
push
imul
cmp
dec
int
or
add
out
and
jle
dec
loope
insl
in
dec
cmp
push
and
sbb
hlt
push
gs
push
push
subb
jbe
fdivr
mov
sub
inc
xchg
cmpsb
daa
cltd
xlat
mov
xor
inc
inc
fisubrs
mov
adc
dec
cmp
inc
daa
pusha
addr16
dec
adc
sub
adc
add
push
pop
test
push
and
pop
loopne
xor
or
xor
aaa
repz
dec
mov
sub
jbe
shl
inc
xor
lods
cmp
push
sbb
js
pop
xchg
imul
test
and
sbb
pop
dec
sub
pop
dec
add
js
not
dec
push
mov
pop
add
or
cmp
push
cmp
or
mov
imul
cs
jns
js
pusha
push
jl
jns
popa
into
addb
scas
add
push
add
push
xchg
stc
scas
push
fidivs
insl
popa
imul
inc
sbb
push
pop
outsl
jo
mov
mov
push
ja
push
mov
push
adc
push
iret
repz
dec
push
pop
cs
add
xchg
out
cmp
add
jbe
add
lock
mov
and
add
sub
iret
pop
adc
out
or
xlat
pop
jns
fiaddl
or
cvttps2pi
add
and
inc
mov
sarb
lahf
unpcklps
loopne
add
and
out
cmp
shrb
cmp
sub
dec
sbb
xor
ja
push
sub
sbb
add
adc
pusha
xor
fisttps
and
or
pop
jl
jbe
iret
mov
mov
ds
rclb
push
dec
cwtl
jmp
and
or
pop
mov
in
adcb
loope
or
sub
mov
nop
push
popa
ret
push
fsubrs
xor
xor
push
popf
add
mov
aaa
xor
outsb
aaa
inc
popf
xor
add
popa
lock
push
out
adc
push
or
es
xor
add
xor
aaa
cs
out
jne
add
cs
cmp
push
popa
out
inc
add
in
or
dec
jae
inc
pop
bound
mov
jp
mov
bound
pop
mov
repz
repz
pop
sbb
repz
inc
push
andl
imul
or
xchg
js
ds
mov
mov
std
test
or
or
out
insl
sahf
adc
sbb
and
sub
xor
inc
mov
mov
int
sti
out
mov
mov
popa
xchg
sbb
ss
test
sub
add
or
mov
add
and
add
insb
pop
adc
push
push
dec
insb
ss
int
add
add
inc
inc
ljmp
add
dec
push
push
push
das
xor
xor
dec
inc
cmpsl
push
adc
cmp
and
inc
je
pop
sbb
sub
push
inc
fisubrl
fmul
sbb
rclb
inc
addr16
adc
push
dec
jl
js
pop
pop
das
cmp
je
or
mov
jae
push
leave
mov
arpl
push
jb
data16
sub
xchg
jb
outsl
imul
ss
dec
aaa
push
inc
jge
scas
pop
inc
xor
out
addr16
insb
aam
push
xchg
enter
pop
pop
inc
add
jecxz
wrmsr
lahf
jo
or
xor
stos
mov
cmp
pop
dec
pop
cmp
sub
dec
cmp
sbb
xor
movsb
ficoml
pop
push
xchg
mov
pop
push
sub
pop
cwtl
inc
ss
pop
cmp
pusha
stos
add
sub
mov
sbbl
mov
adcb
add
ss
push
aaa
adc
jle
xor
loopne
imulb
mov
xor
push
inc
sbb
xor
dec
mov
push
xor
daa
popa
jae
loopw
mov
push
lret
or
mov
enter
or
in
pusha
xor
inc
push
inc
cmp
dec
push
push
pop
push
ret
testl
inc
test
pusha
fldt
loop
add
mov
xor
mov
adc
ljmp
jbe
push
add
pop
or
push
loopne
adc
pop
pop
lods
xchg
inc
xor
push
and
push
mov
xor
inc
jp
js
mov
push
cmp
mov
dec
add
jl
push
cmp
aaa
push
adc
adc
and
mov
adc
or
inc
movsb
add
sbb
adc
rolb
cvttps2pi
mov
sbb
sub
daa
or
push
xor
xor
jno
push
adc
int3
push
adc
les
push
aaa
lret
push
mov
nop
fdivrl
fldl
aas
inc
or
fimuls
fists
loopnew
fldenv
push
cltd
daa
fs
xor
out
dec
das
push
lods
ror
ljmp
fs
jo
and
data16
sbb
inc
inc
ds
push
push
sub
adc
insl
push
adc
jo
mov
addb
rorb
repnz
loopne
dec
outsb
fcmovb
xchg
lcall
dec
dec
cmp
sbb
cmp
dec
fnstcw
mov
das
pop
push
adc
jp
inc
pop
dec
dec
fstpl
sub
pusha
and
push
aaa
cs
or
and
sahf
lock
sub
nop
inc
add
jne
cmp
pop
add
or
inc
cli
jb
mov
add
scas
flds
clc
ficomps
cmpsl
test
adc
ja
aam
sbb
cmp
push
in
movsl
mov
popf
or
and
dec
in
add
inc
pop
in
lea
mov
inc
xor
outsb
xchg
inc
sbb
notb
subl
xchg
lea
push
cltd
sbbl
dec
and
pop
pop
push
add
pop
sub
test
dec
sub
pop
inc
jo
ss
sbb
aas
and
xor
clc
pop
imul
push
sub
adc
or
pop
scas
cmc
mov
dec
push
mov
shl
add
aaa
dec
jle
adc
cmp
add
xor
fdivrl
or
pop
insl
push
xchg
xor
xor
push
xchg
inc
popf
jp
xor
lea
loopne
sub
or
xchg
dec
push
xor
clc
filds
and
sbb
adc
sbb
inc
pop
push
and
sub
clc
sti
xor
pop
dec
sub
and
int3
das
inc
or
aaa
pop
and
and
loope
xlat
or
mov
add
loopne
mov
mov
push
cld
test
dec
sbb
lods
xor
jns
setnp
aaa
getsec
and
mov
or
adc
mov
inc
adc
jae
xor
or
rol
hlt
mov
dec
pop
xchg
leave
push
cwtl
xchg
mov
enter
xor
adc
adc
xorl
sbb
test
adc
aaa
pop
in
call
data16
jo
cmpsb
mov
jbe
push
pop
or
pop
cmp
pop
sub
adc
orl
mov
push
cmp
rcrb
dec
cltd
loop
jno
pop
cmp
insb
subl
jbe
adcb
xchg
out
pop
sbb
aaa
adc
shlb
mov
lcall
sbb
push
pop
shll
fdiv
test
adc
push
or
dec
jo
aas
and
sub
dec
cmp
pop
inc
lds
mov
std
and
mov
adc
push
inc
shlb
sub
pusha
cmp
push
jb
cltd
adc
mov
add
push
push
mov
ret
js
adc
shlb
sahf
out
loope
sbb
pop
push
mov
jns
fildl
loopne
sbb
jmp
sbb
fldcw
pop
xor
outsb
push
pop
xchg
xchg
movsl
inc
aaa
push
jae
pop
adc
insl
sbb
frstor
and
inc
fisubl
pop
add
mov
insb
cmp
cmp
and
fisttpl
push
and
cwtl
sub
inc
jl
xchg
push
sbb
out
mov
adc
adc
inc
ud0
inc
repz
add
sub
or
xor
das
push
push
pop
dec
and
mov
aas
or
scas
shlb
pop
push
pop
mov
jnp
mov
shlb
sub
fcomps
push
xor
daa
fwait
dec
jo
dec
daa
push
xor
pop
imul
cmp
fisubrs
inc
sbb
xorb
inc
dec
sbb
pop
mov
cwtl
imul
sub
mov
ss
movsb
cmp
xchg
unpckhps
mov
add
pop
xlat
subl
or
push
int
pop
rcll
dec
cmpsl
cmp
mov
add
jbe
dec
jge
rclb
sub
ja
fistps
sub
cld
cmpsl
outsl
jo
insb
gs
ja
fs
imul
and
mov
loope
cmp
mov
movl
in
movsb
and
inc
sar
push
movsb
adc
inc
inc
add
xor
iret
fstl
push
into
ror
data16
notl
pop
pop
pop
or
mov
add
push
dec
fwait
int
repz
xor
pop
adc
mov
xor
add
jbe
addr16
insb
movsb
inc
xchg
pop
add
lahf
mov
dec
push
dec
dec
test
shlb
mov
mov
dec
lcall
ljmp
mov
ja
mov
lods
push
lcall
movsl
enter
push
push
mov
inc
push
insl
ss
adc
cli
mov
jmp
mov
jle
sub
mov
sti
pop
repnz
adc
pop
sbb
xor
rol
addr16
dec
fsubs
sbb
call
test
xor
dec
xchg
pop
shl
dec
push
mov
pop
adc
stc
pop
jb
adc
xor
aaa
xor
sub
mov
and
ss
pop
inc
movsl
les
mov
call
pop
push
jl
sbb
rolb
lret
xchg
imull
push
dec
imul
jae
xchg
xchg
test
je
leave
and
push
inc
jae
pop
jb
xor
and
daa
iret
leave
xor
cmp
jae
or
pop
aam
add
leave
dec
les
lcall
mov
xor
add
ret
scas
dec
pop
aam
dec
pop
pop
cmp
call
xchg
pop
push
dec
or
pushl
xor
sub
sub
xor
inc
xor
inc
test
inc
xor
imul
data16
cmp
insb
push
outsb
add
xchg
in
les
js
js
xchg
sub
jne
sbb
lcall
jbe
push
jb
test
inc
bound
cld
ljmp
je
bound
mov
or
adc
aaa
mov
pop
adc
adcl
test
inc
xchg
insb
das
jo
pop
push
ja
and
pop
arpl
bound
mov
pop
sub
xlat
das
pop
js
sub
pop
push
pop
dec
iret
stos
inc
aaa
jle
cmp
xor
push
mov
cmp
sbb
add
or
andl
lret
daa
inc
adc
pop
xchg
push
dec
cmp
dec
cmp
pop
sub
pop
ret
addr16
fsubs
sub
xchg
inc
pop
add
fisubrl
and
and
inc
push
std
iret
cmp
xor
jns
lret
cmp
cs
and
or
inc
pop
jae
and
add
mov
call
or
lock
dec
push
in
das
lods
xchg
mov
xor
push
inc
adc
outsl
dec
repnz
sbb
je
test
mov
addr16
aad
and
pop
sbb
lods
es
aam
aad
jae
push
test
fdivrs
scas
ds
pop
xchg
xchg
cltd
ds
adc
ja
iret
xor
sbb
cmpsb
jge
fcomps
test
imul
sahf
fnstcw
iret
mov
fsubl
xlat
jbe
sbb
add
add
ja,pn
jns
test
dec
push
pop
fdivl
pop
pop
lock
push
sbb
inc
pop
pop
xor
pusha
pop
mov
scas
insl
mov
es
cmpsl
pop
ja
pusha
dec
xor
addr16
inc
push
subl
divb
push
shll
push
jns
jnp
jns
leave
mov
lods
push
mov
repz
iret
pushf
or
dec
outsb
adc
pop
jp
rcrb
stc
xor
ds
movsl
mov
and
cmpsl
stc
data16
xlat
xchg
daa
lods
dec
das
aad
in
jmp
mov
mov
push
adc
imul
mov
xchg
mov
sbb
mov
jl
out
cmc
pop
cwtl
and
pop
cltd
out
jge
jbe
ja
pop
xchg
push
cwtl
notb
mov
lods
aam
aaa
mov
cltd
xlat
test
dec
fdivp
mov
filds
lcall
lcall
rcll
fidivrs
mov
push
mov
out
aad
xchg
sti
cltd
pop
cltd
cmpsl
stc
mov
das
xor
adc
rorl
mov
fstps
pop
outsb
ds
repz
mov
ds
repz
fcomip
mov
inc
repz
xor
sahf
out
xor
popf
push
lret
iret
sarl
cmp
cltd
jns
iret
repz
push
dec
jnp
out
test
push
sub
iret
repz
imul
repz
xchg
sbb
xor
out
add
or
std
mov
jg
dec
sbb
scas
sub
adc
incl
fbld
imul
adc
or
ljmp
popa
stc
push
mov
xor
adc
mov
pop
mov
push
mov
jg
loopne
mov
jbe
inc
mov
and
pop
sbb
ljmp
in
enter
adc
or
adc
aas
pusha
or
xlat
test
add
add
cmpsb
adc
rolb
outsl
dec
sub
popw
inc
xchg
stos
outsb
adc
test
push
jae
popa
mov
cli
push
push
ja
pop
daa
inc
sbb
out
je
addr16
push
pop
gs
cltd
push
dec
cmp
xlat
push
repnz
adc
add
dec
and
divl
ljmp
cmpsb
dec
add
jbe
in
xorps
push
insb
pop
pop
push
out
jb
dec
pop
je
jns
ja
xlat
aaa
push
fisttps
jp
das
push
in
jno
ret
outsb
or
xor
iret
push
pop
test
out
pop
retw
js
frstor
or
dec
mov
ja
cmp
ret
push
mov
xor
push
add
dec
js
cmp
out
push
push
push
ds
xlat
daa
das
adc
jns
imul
cmp
pop
insb
je
push
addr16
sub
popa
jo
jae
es
outsl
and
cmpb
sub
and
pop
fnsave
lods
push
or
pop
repz
cmp
xor
xor
xor
cmp
cmp
push
xor
xor
cmp
push
add
das
adc
and
fidivs
fistpl
ss
or
into
adc
add
lock
add
push
loopne
sarb
add
mov
jl,pn
cmp
dec
sub
aam
loopne
rolb
add
xor
adc
cmp
push
dec
pop
dec
aas
ljmp
push
into
push
or
faddp
push
subb
loop
sbb
push
add
or
in
test
testb
mov
xor
or
rolb
cmpsl
xor
pop
sarb
xor
jmp
pusha
pop
fistps
je
cmp
and
xor
inc
fsubs
repnz
dec
imul
cmp
sub
addl
aaa
adc
cmp
ficomps
push
adc
or
or
or
sbb
imul
rolb
cs
popf
push
shrl
jp
and
pushf
jbe
das
dec
pop
push
pop
fcomps
mov
popa
in
pop
sub
push
and
pop
imul
or
or
mov
outsb
popa
pop
or
mov
inc
imul
aaa
dec
ds
les
pop
in
push
dec
sub
cmp
aaa
test
aad
adc
insb
mov
mov
push
daa
add
insl
mov
stos
insb
dec
les
inc
push
daa
or
pop
lods
daa
jge
adc
das
pop
insl
add
das
divl
iret
cwtl
js
inc
jecxz
sub
retw
pop
ret
nop
fisubrl
jno
mov
das
popa
push
sbb
dec
lods
js
push
das
dec
cmp
lock
mov
jle
inc
dec
cmp
movsb
out
inc
xor
sbb
mov
or
mov
mov
mov
js
fiaddl
fsubrl
js
lahf
pop
xchg
outsb
cmpsb
pusha
adc
pop
push
pop
sub
test
addr16
lea
jg
lea
fsubl
sub
lods
push
xchg
xchg
fsubrs
push
pop
mov
cmp
xor
or
add
outsl
lret
pop
popa
popa
sub
xor
adc
mov
dec
sbb
adc
js
jl
pop
or
and
add
jo
sub
jg
add
loope
sbb
and
cs
jo
insl
fnstsw
xchg
adc
push
ja
fsubrs
xchg
outsb
cmpsl
call
jecxz
loopne
les
push
outsb
loop
sbb
mov
in
or
and
cs
test
lret
movsl
sbb
and
push
dec
sbb
das
sub
aaa
test
pop
sbb
loope
or
xor
js
ja
clts
es
mov
push
dec
jnp
add
js
adc
es
hlt
mov
adc
adc
repz
inc
rcll
inc
testb
fnstenv
xor
adc
xor
adc
and
xchg
sbb
lods
lods
pop
aaa
insb
jno,pn
ret
scas
add
sub
addb
sarb
jl
loope
movsb
outsb
sub
enter
cmp
rclb
negl
and
mov
pop
sbb
ljmp
sbbb
push
sbb
dec
xchg
dec
aaa
and
or
or
call
xchg
out
psubusb
test
test
adc
loopne
insb
aas
mov
movsl
xchg
adc
push
cmpb
pop
push
cmp
repnz
xor
test
test
xor
push
push
ljmp
out
sahf
pop
or
xor
lods
pushf
push
outsb
les
xor
int3
xor
push
add
or
mov
sub
cmpsl
jge
lcall
xor
pop
cmp
inc
ljmp
inc
pusha
test
sbb
cltd
xchg
xor
fiaddl
mov
adc
popa
test
lret
adc
mov
xchg
insl
dec
shlb
rorl
subb
adc
and
into
outsb
imul
sub
push
inc
hlt
adc
or
fsubrs
sub
lods
xchg
xor
mov
jo
and
and
or
hlt
xchg
ljmp
xor
push
inc
push
adc
ja
xchg
pusha
sbb
aaa
aam
adc
fnsave
inc
adc
push
out
pop
test
loop
or
mov
sub
sbb
xorb
or
or
dec
ret
cmp
pop
push
pop
adc
das
pusha
pop
andb
add
add
fisubrl
xchg
ja
pop
test
shlb
and
sub
fsubl
pusha
add
add
mull
imul
dec
dec
mov
pop
out
sahf
and
adc
and
adc
lock
adc
dec
mov
movsb
pop
mov
shlb
sub
sub
jl
imul
xor
lahf
popa
or
or
and
pop
adc
push
and
push
add
add
pop
pop
das
cli
push
aaa
cld
fistpll
pop
or
dec
dec
or
pop
xor
xor
ljmp
add
cmp
sub
pop
ud2
aaa
or
xor
inc
pop
sub
sbb
push
ss
or
sub
jmp
and
and
push
cmp
dec
or
xor
dec
adc
add
pop
add
adc
or
adc
dec
lret
mov
aas
shr
and
ds
push
dec
sbb
dec
or
aaa
pop
mov
mov
adc
dec
pop
ds
inc
daa
xchg
mov
cmp
and
dec
es
filds
pop
pop
xor
xor
push
sub
ds
inc
xor
push
push
pop
push
adc
incl
inc
push
sub
cmovnp
cmp
mov
mov
adc
loope
mov
ret
pop
push
ret
jnp
stos
add
out
ret
sbbb
cmpsl
sahf
pop
dec
pop
mov
inc
or
push
pop
push
pop
mov
and
dec
mov
cli
gs
mov
cmp
movsl
call
addb
mov
fcoms
sbb
adc
or
out
pop
xor
xor
and
pop
pop
inc
cld
rolb
xchg
push
push
dec
enter
fstl
push
inc
add
xchg
or
mov
and
push
xchg
aaa
jb
pop
pusha
bound
add
ret
mov
enter
mov
jb,pn
add
push
xchg
cld
push
push
sbb
sbb
inc
dec
xchg
add
add
cltd
jo
xor
sub
ljmp
xor
pop
or
add
dec
dec
push
push
negl
int3
les
addr16
dec
dec
and
xchg
sbb
fs
inc
mov
ja
fadds
xchg
sub
xchg
in
fnstenv
pop
pop
daa
pop
daa
cmp
dec
push
dec
jg
js
push
dec
and
daa
mov
cmp
dec
cmp
cwtl
das
mov
inc
aaa
jno
sti
shlb
cmp
adc
pop
movsb
cmpb
aad
sbb
cwtl
stos
pop
fadds
pop
adcl
test
and
inc
jge
push
je
mov
andb
fwait
rol
fwait
in
inc
mov
ud0
dec
mov
jmp
dec
fsubrl
stc
jbe
push
ds
insl
xor
inc
jg
mov
inc
xchg
cmpsl
aad
arpl
push
sub
adc
or
cs
insl
sub
call
or
or
or
cs
ret
sub
xchg
mov
data16
jmp
call
cltd
test
push
push
shll
ja
daa
pushl
or
cmp
fmuls
lret
rep
cs
outsl
arpl
test
decl
add
mov
mov
movsb
mull
jno
addr16
push
scas
addr16
cmp
dec
movsl
jg
push
push
mov
fwait
stos
flds
pop
and
ds
push
sub
pop
lock
pop
xor
outsl
or
fs
lcall
cmp
imul
xor
jb
xor
jl
je
push
arpl
jne
ljmp
jno
aas
jge
inc
ss
cmp
jp
dec
inc
js
dec
insb
xor
push
dec
insl
bound
pop
push
and
mov
cli
pop
and
sub
pop
and
test
lcall
mov
push
push
add
int3
sahf
or
xor
scas
mov
and
call
xor
jbe
ss
sarb
mov
cmp
sbbb
or
ds
xor
xor
fldt
in
add
xor
xor
push
inc
add
mov
add
inc
xor
and
into
fldt
aaa
inc
push
inc
cs
inc
mov
pop
cmovb
pop
ss
cmpsl
ss
push
or
jae
mov
or
and
cmpsl
les
sbb
add
and
cmp
mov
ret
xchg
xor
dec
adc
cmp
sub
js
shlb
xchg
decl
mov
arpl
rorl
cmp
mov
pop
push
cltd
popf
inc
dec
je
mov
loop
adc
sub
lds
lret
xchg
inc
push
shrb
or
xor
xor
sbb
push
sbb
mov
push
dec
adc
xor
pop
aaa
jp
push
adc
pop
pop
mov
jno
lret
cwtl
adc
pop
sbb
jp
dec
xchg
bound
jno
and
int3
add
loop
sub
pop
jo
sbb
mov
mov
adcl
sbb
pop
cmp
xor
inc
cli
gs
lret
test
idivl
rcrl
jge
push
xchg
shlb
mov
push
mov
push
add
shll
fs
cmp
pop
sahf
jne
or
inc
shl
test
out
pop
adc
outsl
sbb
push
or
test
adcb
pop
xchg
xchg
iret
cmp
push
xor
stc
data16
pop
xor
jae
popa
insl
gs
loope
pushf
cmp
test
addl
xchg
or
mov
loop
daa
xor
insl
loop
adc
inc
mov
les
outsl
insb
push
push
popa
je
and
in
xor
insl
pop
ret
mov
xor
sbb
adc
out
sbb
push
sbb
fsubrs
cmp
pop
out
movsb
popf
movsb
push
pop
sub
rcl
adc
pop
arpl
sub
xor
jne
push
dec
lods
push
adc
or
mov
sbb
push
or
and
jae
fiadds
lods
pop
sub
cmp
pusha
push
sub
pop
stos
cs
mov
jecxz
jnp
mov
addr16
dec
lahf
scas
sbb
test
and
jge
movsl
scas
xchg
js
push
mov
pop
int3
mov
push
loopne
xor
nop
push
dec
sub
add
dec
add
mov
popa
dec
xor
add
add
ja
jb
pop
sti
pop
mov
jae
inc
jne
es
jp
int
xor
or
rolb
mov
lret
pop
push
pop
loope
sub
mov
jg
dec
push
test
or
sbb
insl
pusha
adc
pop
and
cmp
pop
sub
data16
test
pop
aaa
daa
repnz
cmpsl
fs
jo
sub
or
ret
jo
or
push
outsl
imul
xchg
mov
pop
sysexit
out
lods
adc
jg
add
mov
cs
cmp
pop
aas
movsb
adc
add
out
and
pop
aad
into
scas
adc
mov
push
pop
test
adc
pop
aas
push
leave
movsl
xor
sbb
or
jle
cmp
xor
pop
insb
scas
sub
and
sbb
and
push
mov
movsb
sub
data16
mov
into
sub
les
xchg
xor
mov
inc
jge
fst
outsl
sbb
sbb
add
iret
lret
sub
notl
sbb
dec
ds
cmpsl
push
xor
punpckhwd
jb
les
jle
mov
xchg
inc
pop
pop
pop
pop
nop
sar
mov
adc
js
mov
xchg
pop
pop
pop
inc
pop
push
or
push
inc
mov
movsl
sbb
pop
dec
pop
in
insl
mov
movsl
sbb
repz
hlt
sub
je
insb
sbb
ds
add
xchg
in
aad
xlat
xor
por
popf
dec
sbb
js
inc
add
adc
and
cmpsl
pushf
aas
add
sub
inc
dec
insl
vmread
or
and
inc
xor
or
or
add
cmp
sbb
fisttpll
insl
mov
out
sub
mov
push
jne
or
aad
cmpsl
or
stc
and
jb
das
mov
sbbb
mov
mov
dec
jae
push
popa
mov
insb
popf
fcmovu
dec
outsl
and
or
mov
push
hlt
push
shrb
jne
outsb
push
je
scas
daa
imul
into
add
inc
dec
push
inc
pop
push
dec
repnz
sar
dec
inc
push
pop
mov
gs
cmovae
fwait
pop
daa
cmp
roll
pop
mov
shlb
aas
dec
pop
les
test
cmp
dec
inc
outsl
or
in
aaa
js
and
push
lock
inc
and
loope
add
or
rolb
flds
mov
or
scas
xchg
ret
jb
gs
or
push
adc
adc
icebp
mov
add
cmp
add
imull
sub
out
adc
loopne
cmp
dec
add
inc
mov
and
dec
add
pop
dec
xor
xchg
cmp
xor
cmp
mov
push
jo
sub
shlb
jo
or
mov
adc
aaa
in
cmp
fsubs
pushf
mov
adc
push
cmp
movsl
adc
cmpsl
mov
rcll
sbb
mov
andb
sbb
pop
pop
mov
aam
rclb
stos
sbb
push
insb
adc
adc
jmp
outsl
xlat
adc
test
ja
mov
pop
shrb
pop
int
sbb
and
xlat
cmp
or
aaa
push
insb
push
mov
mov
mov
jle
xlat
addr16
push
and
sarb
mov
dec
sub
insb
dec
add
fucomip
xchg
dec
inc
xadd
sbb
inc
scas
or
inc
cmovo
mov
inc
adc
cmpb
aas
fisubrl
mov
jo
maxps
dec
add
subl
adc
xchg
mov
pushf
fcomps
add
test
les
int3
insl
das
xchg
outsl
push
fsubl
aas
add
xorl
test
addr16
inc
inc
movsb
or
daa
ficompl
jne
jnp
sub
inc
das
inc
add
outsl
ror
cmpsl
ja
mov
add
iret
test
daa
mov
insl
adc
outsl
pop
add
insl
mov
insb
adc
inc
aas
jg
mov
stc
jbe
outsl
nop
sbb
jb
push
jb
inc
cmp
and
and
and
jns
jb
add
daa
adc
cmpsl
jge
push
mov
loopne
push
iret
sarl
add
mov
sahf
out
ds
mov
iret
sarl
xor
cld
pop
xchg
mov
jo
pop
sahf
pop
pop
ds
iret
repz
jo
add
imul
pop
shlb
jl
push
jo
and
int3
push
add
mov
and
push
xchg
int3
out
dec
inc
lahf
mov
fsubs
mov
aam
insb
pop
dec
mov
in
add
push
rolb
dec
xor
or
add
out
lods
pop
push
jo
out
push
mov
add
pop
jg
push
or
mov
pop
mov
pushf
ja
add
popa
and
in
in
dec
outsl
or
test
inc
shll
loopne
pop
das
dec
push
push
pop
dec
mov
or
outsl
add
inc
inc
pop
leave
inc
adc
inc
sub
mov
in
outsl
fildll
jbe
outsl
cmp
ss
dec
adc
in
xor
dec
inc
sbb
pop
pop
pop
scas
add
subb
xchg
popa
out
xor
jb
and
inc
dec
lcall
imull
or
push
push
sbb
pop
scas
or
pushl
out
jb
and
xor
jae
inc
pop
pop
pop
ficoml
xor
pop
fildll
inc
scas
les
outsl
sub
fstps
lock
adc
jns
movsb
add
pop
scas
insb
pop
jl
movsl
pusha
shll
aam
fs
add
dec
xchg
cmp
pop
jg
jg
adc
and
xor
sbb
ja
mov
sbb
fs
popa
imul
pop
fildll
sbb
stos
jo
mov
outsl
and
push
cwtl
sbb
or
add
and
ret
push
lock
pop
pop
scas
add
cmp
or
xor
shlb
cmpsl
add
nop
sbb
and
xlat
cmpsl
and
add
testb
pop
insl
mov
outsl
faddp
popa
idiv
or
fisubs
xchg
ja
add
bound
cmpsb
sti
or
insl
lahf
mov
popa
xchg
data16
mov
jg
push
fcoms
sub
mov
popa
dec
mov
push
mov
mov
or
sub
ja
mov
ja
sbb
push
mov
xchg
outsl
jg
cmp
mov
lcall
popa
inc
mov
cs
push
test
mov
xchg
jo
jnp
cmp
movaps
or
mov
adc
pop
or
dec
test
bound
xlat
or
popa
stos
sarb
lock
adc
jo
xchg
cmp
cmp
arpl
pushf
and
push
arpl
and
jbe
arpl
sbb
and
out
fsubp
add
and
in
cld
scas
and
fs
loopne
negl
mov
mov
xor
ja
leave
adc
pusha
aaa
xchg
outsl
addr16
jo
xchg
add
and
jo
call
imul
xchg
or
lahf
gs
add
mov
dec
scas
in
cwtl
jg
jb
daa
xlat
addr16
add
leave
test
fsub
add
or
xchg
nop
mov
jmp
sub
idivb
das
outsl
add
ss
fs
mov
cmpsb
mov
orl
enter
les
andb
xchg
addr16
cmpsl
add
ret
dec
iret
inc
arpl
xlat
add
iret
daa
push
xchg
stos
daa
add
push
sub
out
xchg
in
pop
adc
or
imul
pusha
inc
lock
jmp
or
sub
or
push
sub
xlat
pushf
and
or
push
lods
push
inc
outsb
rorb
or
pushl
sub
push
sub
xchg
sub
and
pop
leave
fwait
xchg
add
add
pop
add
push
mov
fcom
push
rcrl
outsl
out
cwtl
and
and
xchg
jbe
push
addr16
and
out
addr16
sbb
daa
add
adc
and
fsubrl
in
push
sub
outsb
clc
adc
imul
in
ss
test
stc
lods
lea
xor
in
imul
pop
insb
push
xchg
nop
push
jl
imul
insb
inc
or
aam
sbb
mov
das
shrb
fiaddl
ja
cld
cs
pop
add
jl
insb
xor
cmp
push
ucomiss
pop
or
pop
das
pop
mov
xor
mov
sbb
aas
fists
popa
pop
out
pop
jne
add
fwait
int
jbe
jns
or
in
dec
arpl
repz
xchg
ret
jp
jo
iret
repz
mov
xor
push
imul
out
adc
das
mov
iret
icebp
pop
jge
mov
xor
out
and
jmp
cmp
repz
jns
cmpsl
inc
bound
cmp
push
sbbl
repz
and
add
sub
test
iret
repz
outsb
xchg
lds
xchg
repz
es
popa
jl
std
sub
push
test
repz
xabort
mov
dec
repz
and
jns
cmpsl
stc
pop
mov
movsl
ds
repz
mov
push
inc
dec
repz
mov
cmp
push
sbbb
push
nop
mov
ds
sarl
dec
test
push
xchg
cmp
repz
lock
cmpsl
stc
and
jns
iret
repz
rcrb
xchg
cmpsl
jmp
out
testl
movsl
out
cwtl
mov
repz
fs
cltd
sahf
pop
lcall
or
lcall
stc
cmpsl
stc
cmp
xor
dec
xor
jge
mov
sbb
je
sahf
cmpsl
stc
sub
mov
xchg
mov
imul
jecxz
movsl
dec
stc
cmp
repz
cmpsl
imul
test
fs
out
add
fidivrs
out
stos
js
add
sarl
sbb
push
jns
out
clc
inc
scas
pop
mov
stc
cmp
repz
mov
jl
cmpsl
imul
mov
scas
push
scas
mov
push
hlt
cmp
mov
mov
out
lcall
jp
shrl
mov
ror
jl
ja
add
lahf
out
ds
dec
scas
loop
ret
sahf
out
xor
stos
push
les
jl
lds
test
ss
out
imul
int
int
into
into
push
imul
sarb
or
out
fsubs
mov
addr16
jns
add
xor
call
pusha
jno
addr16
out
jb
jle
add
mov
cmp
mov
in
xchg
pop
leave
jae
hlt
sbb
fisubl
add
fcmovbe
xchg
out
pop
paddq
xchg
inc
aas
pop
xor
syscall
and
std
imul
nop
and
xor
ss
push
pushf
dec
push
mov
mov
nop
and
inc
sub
push
loope
xor
mov
daa
out
mov
jg
pop
mov
push
mul
inc
pop
enter
mov
dec
ss
loopne
sub
dec
outsb
dec
inc
lds
loopne
fs
loopne
scas
mov
leave
jg,pn
sbbb
aas
in
xchg
arpl
mov
outsl
fmuls
mov
cs
fbstp
movsl
dec
mov
push
mov
adc
mov
inc
cmp
dec
mov
aas
test
mov
les
outsb
out
dec
in
fwait
inc
out
ss
out
aas
mov
xchg
test
mov
aas
mov
sub
test
iret
mov
std
mov
jmp
push
fadds
fs
insl
push
inc
mov
dec
add
dec
push
jbe
xlat
jmp
push
daa
je
jl
enter
add
mov
adc
cld
push
dec
push
outsb
xchg
in
adc
push
lsl
sbb
aad
lahf
and
xor
setp
inc
pop
cmp
das
bound
rorb
or
mov
xor
adc
jae
sub
push
pushf
sub
sar
adc
jg
push
sbb
cmpsl
mov
push
xor
xchg
pop
popa
aas
mov
jo
adc
mov
cmp
pop
pushf
sbb
cs
adc
fwait
pop
inc
enter
into
repz
add
das
in
hlt
inc
outsl
repz
dec
or
pop
dec
mov
pop
xor
push
jns
es
mov
jns
aas
add
xchg
mov
inc
jg
loopne
inc
xor
pop
cmpsb
jp
and
push
iret
add
jns
dec
out
iret
xchg
push
add
daa
xchg
iret
int
xchg
jp
jnp
pop
mov
fistps
mov
pop
and
cwtl
jbe
fwait
in
les
push
mov
jbe
iret
push
sbb
cmp
jnp
jnp
jnp
in
sahf
and
inc
je
scas
loope
cmp
pop
dec
and
stc
fidivrl
into
push
inc
outsl
mov
iret
enter
jl
call
xchg
jl
icebp
or
fsubl
mov
fsubrs
sbb
leave
inc
daa
iret
leave
xchg
rolb
rcrb
sbb
enter
jge
jge
sbb
jb
jl
push
jl
jl
push
iret
repz
add
addl
mov
rep
out
xchg
jns
pinsrw
inc
in
mov
hlt
jge
and
in
adc
cmp
sub
outsb
in
jb
jle
jge
push
mov
add
test
cmp
test
cmp
pop
pop
mov
jge
jge
xchg
xchg
mov
in
lods
iret
repz
add
add
cltd
dec
ds
push
sub
inc
mov
std
add
jle
fs
and
in
inc
jle
jle
pop
and
shlb
jne
mov
xchg
cmpsl
fwait
pop
mov
in
stos
cmpsl
mov
mov
leave
jae
dec
ficoms
orb
lods
lock
xor
cmove
fldl
cmovl
xchg
add
xchg
mov
and
jnp
inc
pusha
adcl
jo
pop
add
mov
cmp
inc
sarb
rorl
or
or
sub
lahf
push
daa
aas
ja
inc
ret
mov
into
sbb
leave
sub
leave
and
hlt
pusha
ret
mov
leave
adc
leave
addb
inc
movsl
mov
dec
push
iret
je
dec
cmpsb
xchg
dec
jb
inc
cmpsl
push
orl
pushf
popf
dec
cmp
addl
add
nop
jl
mov
dec
lcall
test
pop
test
andl
add
or
xor
push
sahf
out
lcall
jns
out
daa
or
jns
out
dec
adc
sahf
out
sahf
pop
adc
ja
jns
out
test
mov
pop
xlat
dec
dec
and
sbb
and
fimull
jae
adcb
addl
add
daa
pop
leave
in
addr16
jl
daa
filds
sbb
mov
push
xchg
and
cwtl
xchg
scas
inc
in
je
mov
test
xchg
dec
cmpsb
in
iret
lock
adcb
add
test
dec
dec
cmp
fidivrs
das
push
mov
pop
insb
xchg
mov
push
inc
or
add
lock
pop
add
jne
aas
mov
enter
popa
andb
inc
lret
aaa
add
leave
inc
repnz
mov
mulb
into
cmpsl
add
test
mov
add
inc
aas
add
xchg
mov
leave
dec
pop
adc
test
mov
xchg
imul
push
sub
dec
cs
dec
pop
lods
xchg
dec
cs
test
mov
in
das
xchg
xchg
mov
pop
xchg
mov
xchg
and
adcb
pop
mov
dec
cs
in
paddsw
fmull
ja
shrb
loope
xchg
and
fwait
mov
xor
pop
jb
outsb
jns
mov
fisttpl
in
cwtl
mov
jo
cmp
mov
xchg
pushl
or
xchg
add
sbb
popa
mov
cs
adcb
dec
lods
mov
mov
jo
sbb
mov
xor
add
cmp
add
jb
push
inc
pop
jg
pop
lea
int3
dec
dec
lea
inc
sub
mov
in
dec
jb
mov
lea
icebp
xchg
mov
popf
mov
xchg
xchg
mov
mov
xchg
xchg
xchg
xchg
mov
mov
mov
mov
xchg
xchg
xchg
xchg
mov
mov
mov
xchg
xchg
mov
jb
jb
or
jb
or
or
jb
jb
push
add
jb
add
add
outsl
ret
mov
mov
in
xchg
addr16
xchg
gs
jae
xchg
jl
xchg
add
dec
cs
out
nop
mov
mov
and
in
daa
ja
call
cltd
sub
nop
daa
leave
xchg
and
dec
mov
pop
mov
fcmovne
mov
jne
jge
push
enter
test
mov
testl
pop
leave
jae
aam
mov
ret
add
call
insb
xor
adc
and
sbb
je
sub
rdpmc
cmp
pop
repnz
dec
or
arpl
dec
fnstsw
das
push
stos
les
pop
add
daa
mov
js
mov
iret
shrb
mov
xor
fsubr
pop
or
out
in
push
call
push
add
inc
pop
cmp
enter
mov
xchg
xchg
sbb
mov
fildl
fcoml
mov
in
add
jge
iret
insb
ja
add
idivl
lea
pop
and
lea
jae
fistl
dec
sub
in
sahf
aaa
test
out
in
aad
push
loopne
mul
cmp
jmp
testb
sahf
out
sahf
or
pop
or
stc
mov
or
push
and
addr16
inc
arpl
xchg
das
cwtl
mov
adc
lret
mov
mov
xchg
and
mov
pop
cld
out
cmp
adc
and
dec
sahf
or
sysenter
cmpsl
repnz
out
push
cmp
jo
cld
xchg
pop
in
in
pop
ds
xchg
inc
jb
xchg
add
jp
pop
enter
xchg
mov
add
xchg
je
mov
xchg
mov
add
add
incb
xchg
pop
lods
xchg
leave
pop
and
xchg
lret
mov
pop
and
pop
in
xchg
adc
nop
and
cmp
nop
inc
nop
test
imul
jae
mov
xchg
add
iret
repz
in
shll
push
fists
adc
out
stc
add
pushf
loopne
sub
xchg
and
inc
inc
xchg
xchg
iret
in
in
outsl
jp
add
mov
mov
inc
repnz
fsubrp
enter
hlt
xchg
iret
call
jb
adc
xchg
ss
iret
pop
inc
mov
dec
xchg
iret
or
cmpsl
xchg
cwtl
jb
jge
mov
leave
enter
xchg
sahf
test
mov
lret
daa
iret
shl
or
or
mov
xchg
push
xchg
sbb
and
xchg
cmp
jb
push
xchg
pop
xchg
xchg
jno
setb
imul
pop
cltd
lcall
xchg
addr16
jnp
push
ja
push
call
sub
xchg
pop
adc
pop
mov
js
xchg
out
pop
ja
xor
add
repnz
lcall
xor
xchg
xchg
jae
aam
fcoml
mov
xchg
inc
fwait
mov
inc
mov
xchg
add
cmp
jbe
movsb
push
adc
out
mov
stos
cmc
cmp
inc
iret
call
mov
clc
mov
daa
add
xor
das
inc
xchg
jg
xchg
outsb
repnz
verw
enter
xchg
outsl
xchg
ja
dec
aaa
jns
jg
or
js
cmp
xchg
lahf
xchg
xadd
and
pushf
lret
mov
sub
jecxz
popf
inc
push
xchg
dec
push
loopne
dec
popf
scas
xchg
leave
jae
mov
outsb
daa
pop
pop
filds
mov
in
and
inc
mov
lds
jns
roll
and
setb
in
pop
mov
sub
add
pop
les
popf
cmp
in
jg
add
out
add
cmp
mov
enter
js
fwait
sub
jmp
repz
cwtl
lret
lret
lret
xlat
out
add
lret
lret
lret
lret
sbb
xor
cmp
push
cltd
jb
jmp
pop
pop
ud2
pop
or
jb
jb
or
push
add
add
add
iret
repz
arpl
imul
sbb
iret
repz
sbb
mov
mov
sahf
out
cmp
xor
jecxz
mov
sub
enter
lahf
out
lcall
les
ja
cmovae
push
add
push
lcall
add
hlt
mov
clc
xlat
xchg
pop
mov
and
fmull
cmpsl
push
mov
rcr
jg
loope
aaa
cmp
jmp
pushf
in
stc
lcall
daa
cmp
xchg
aaa
filds
fmulp
xchg
fwait
dec
fwait
pop
push
add
xchg
jo
outsb
iret
or
mov
xchg
fwait
fs
frstor
movsb
mov
sbbl
adc
fsubrs
fmuls
call
xchg
sbb
mov
mov
es
mov
pushf
mov
inc
push
pop
dec
pushf
inc
jecxz
jns
push
add
add
sbb
mov
lods
mov
mov
cmpsl
movsb
add
sbb
dec
push
pop
push
sbb
jmp
scas
out
xor
daa
add
fabs
out
jmp
icebp
pushf
scas
js
inc
into
push
adc
xchg
in
and
dec
pop
repz
dec
lock
mov
repnz
cmp
lea
leave
leave
inc
int3
aam
ds
ja
aas
aam
fsubl
cmp
sahf
mov
into
dec
pop
push
add
ss
xchg
sahf
pop
sahf
test
mov
push
jmp
jb
sahf
jae
addl
xor
dec
lsl
mov
cmpsl
push
je
add
add
das
xchg
push
add
cmp
inc
cmovs
push
add
jb
cmp
pusha
push
jae
or
out
nop
pop
cwtl
or
or
test
mov
adc
sahf
out
adc
out
lahf
xor
cmpsl
lahf
mov
add
or
adc
jns
out
sbb
and
loop
ljmp
ss
xchg
pop
test
fsubs
inc
push
scas
pop
push
and
ljmp
pusha
test
cs
outsl
mov
dec
mov
sldt
push
mov
mov
jecxz
les
mov
pop
mov
or
add
add
out
popf
xchg
jge
daa
lea
xchg
repnz
sahf
add
iret
in
mov
push
add
and
sbb
mov
and
cmpsl
xchg
iret
add
cmp
fbstp
das
lahf
inc
dec
cvtps2pd
pcmpgtw
jo
or
pop
add
cmp
add
and
out
or
mov
stos
scas
das
mov
xchg
or
pop
push
iret
mov
xchg
outsb
repnz
lar
insl
in
mov
jmp
pop
pop
mov
jns
enter
push
add
inc
pop
repnz
jae
add
add
outsb
sysret
bound
or
jns
leave
jb
or
sahf
mov
mov
scas
stos
mov
leave
add
ja
in
cmp
testb
add
movsb
cmpsb
lcall
ljmp
cmp
inc
repnz
andb
push
movsb
pop
addb
jg
mov
clc
inc
notl
lods
inc
add
movl
loopne
repnz
mov
int
mov
pushf
mov
push
ja
lea
xor
or
xchg
mov
cmpsl
push
sub
cmp
xchg
leave
or
add
mov
push
push
xchg
xchg
xchg
movsl
jb
mov
in
cmp
xchg
sahf
movsl
aas
test
in
movsl
mov
movsl
das
aas
loope
loopne
jmp
outsl
mulb
hlt
cs
movsbl
cmpsb
and
sub
cltd
push
scas
push
andl
inc
cs
mov
jo
cmpsb
outsb
das
scas
cmpsb
mov
enter
mov
cmpsb
cmpl
fisubs
in
in
mov
test
pusha
scas
rolb
enter
cmpsl
das
pop
cmpsl
and
sbb
cmpsl
xor
jmp
pop
invd
push
sahf
out
sahf
or
arpl
imul
es
ud2
push
inc
ss
scas
sahf
aaa
rclb
mov
iret
inc
mov
int
dec
pop
xchg
mov
mov
jo
in
in
pop
hlt
adc
mov
test
or
or
stc
cmpb
inc
xor
or
mov
out
fildl
das
scas
aaa
test
test
sub
test
arpl
fisubrs
push
jns
mov
push
dec
lods
jg
bsf
ljmp
pop
push
testl
test
mov
test
in
sbb
jb
in
test
adc
sbb
cmp
iret
jae
adc
adc
iret
jae
cmp
push
dec
push
insb
pop
adc
pop
test
and
test
in
stos
mov
push
fldt
xchg
test
popf
dec
and
push
xor
xchg
out
add
std
add
jl
mov
sub
xor
mov
pop
or
push
loopne
into
test
bound
jbe
inc
pop
repnz
cmp
out
sti
sub
cmp
or
divl
jnp
orl
setnp
mov
dec
sahf
push
mov
add
xchg
int
addl
and
add
rorb
out
pop
leave
mov
rdmsr
stos
ja
push
in
ja
addr16
pop
pop
ja
xlat
popf
xchg
mov
dec
sahf
in
cmp
adc
jo
enter
daa
lods
das
lods
mov
scas
push
ja
mov
push
jg
stc
inc
pushf
cmp
push
pop
lods
jns
out
pcmpeqw
fldl
mov
mov
outsl
mov
jbe
leave
rcrl
lidtl
add
loope
ret
jns
sysret
or
xchg
lods
add
jmp
cli
inc
mov
nop
xchg
dec
mov
aaa
lods
fisttpll
andb
pop
sbb
scas
cmp
bound
daa
cmpsl
mov
inc
mov
les
in
mov
iret
lods
mov
popf
add
iret
mov
lods
push
add
jmp
lods
lods
cmp
les
mov
push
and
mov
out
femms
add
scas
jns
mov
mov
sbb
leave
and
cmp
push
shll
sbbb
rcll
pop
int3
scas
cmp
leave
leave
movsl
lods
mov
mov
or
mov
scas
dec
ja
dec
outsb
js
scas
scas
scas
scas
jns
out
pop
push
add
add
aaa
sidtl
insl
jne
iret
add
mov
mov
shlb
add
andl
scas
push
outsl
sub
wrmsr
mov
and
mov
dec
into
lock
arpl
mov
enter
mov
adc
jl
fcmovnb
pop
push
dec
leave
mov
xchg
cmp
mov
xor
iret
add
repz
int
pop
sbb
and
movsb
fwait
cmp
sub
xor
add
repnz
add
push
cmp
cwtl
jns
pop
adc
add
out
outsl
ja
jg
out
dec
dec
xchg
setg
or
cmp
cmpsl
or
rclb
mov
inc
dec
and
mov
ljmp
psubd
mov
or
mov
mov
lret
lret
xor
mov
data16
rep
aas
outsb
push
push
jbe
push
or
getsec
jns
push
fisttps
cmp
mov
and
and
sahf
pushf
pushf
jecxz
add
or
dec
dec
dec
and
dec
dec
dec
mov
dec
dec
out
mov
sub
out
adc
inc
iret
repz
fmull
pusha
jle
xchg
xchg
out
cmp
xchg
dec
sbb
cmpsb
mov
and
push
leave
mov
push
in
sbb
xchg
loopne
mov
addr16
enter
mov
mov
add
daa
adc
or
pusha
push
daa
jle
pop
out
jb
lcall
dec
dec
cs
push
rcr
jecxz
dec
dec
dec
icebp
decl
xor
mov
repnz
mov
mov
mov
daa
and
mov
jg
push
out
sahf
out
pop
vpmacsdd
sahf
or
dec
jp
je
mov
mov
ror
mov
mov
adc
shll
test
cli
xchg
or
add
pop
or
adc
cmovle
mov
in
in
mov
mov
mov
mov
in
in
mov
mov
mov
mov
in
in
mov
mov
mov
mov
in
in
mov
mov
mov
mov
in
loope
mov
fidivs
in
icebp
mov
mov
mov
jns
negl
push
adc
pop
and
and
and
and
sahf
out
inc
and
jns
out
pusha
sub
dec
aaa
jns
jbe
jle
sub
inc
pop
cmp
mov
dec
xchg
mov
jns
mov
jae
pop
pop
aam
fcompl
jmp
mov
mov
push
comiss
add
push
add
movsb
fwait
cmp
sgdtl
popa
xchg
pop
decb
ret
xchg
xchg
mov
pop
mov
outsb
ja
cmp
sahf
push
xchg
out
js
iret
ljmp
iret
movsb
adc
sbb
cs
mov
push
push
jb
adc
iret
cmp
add
mov
add
dec
outsb
daa
iret
add
clc
cmp
bnd
add
fcmovne
repz
and
das
out
jns
cmp
inc
push
adc
jns
xchg
pop
push
sahf
xchg
out
mov
cmp
sahf
xchg
out
rcrb
cmp
in
and
test
mov
enter
xor
inc
mov
mov
mov
mov
xchg
xchg
daa
or
sub
xchg
out
sahf
cmp
inc
adc
jbe
mov
bound
push
iret
leave
leave
leave
mov
mov
psubd
mov
or
pop
inc
dec
sahf
xchg
out
push
and
xchg
out
jns
mov
jns
fisubrs
out
psadbw
jae
sub
mov
push
das
cwtl
test
dec
push
inc
mov
lds
insb
mov
vmwrite
ja
cs
mov
or
out
pop
pushf
movsb
mov
aas
lods
mov
or
cmp
mov
int3
mov
ja
fdivrl
in
adc
hlt
ret
repz
adc
cld
dec
add
out
sarl
push
adc
xchg
scas
push
pop
adc
sbb
jns
pop
mov
leave
sbb
dec
leave
aaa
jns
add
add
paddusb
lahf
add
inc
rorb
in
mov
rcrb
test
cmp
leave
xchg
xlat
jbe
inc
cmp
rclb
and
in
mov
jb
mov
cmc
xchg
std
mov
add
dec
outsb
xchg
rorl
cmp
dec
cs
imul
rcl
movl
or
mov
mov
ja
push
lret
and
sub
ret
mov
sub
pop
cmp
inc
xchg
outsl
ja
out
pop
movq
xchg
je
jns
xchg
push
lahf
cmpsl
ret
cltd
push
shlb
leave
jae
fiaddl
insb
std
test
xchg
daa
add
dec
push
cmp
jbe
ret
dec
inc
pop
mov
cmpsl
dec
ret
push
pop
inc
repnz
xchg
rcll
setae
cmp
jns
fcmovnb
lahf
into
add
fisubs
iret
jae
out
out
add
jb
ret
pop
push
les
push
les
inc
push
add
add
pop
popa
pop
imul
out
jns
add
fcmovne
in
and
jns
mov
idivl
in
out
div
and
lds
rdmsr
cmp
inc
inc
cmp
adc
cmpsl
cmp
leave
insl
jne
add
cmp
mov
push
ja
jb
ret
lret
rcrl
iret
sub
pop
jmp
in
popf
cmp
sti
or
leave
inc
les
popf
xchg
mov
shlb
push
cmp
iret
roll
push
test
fistps
dec
cmpsl
mov
mov
mov
syscall
ficoms
cs
xchg
xchg
xchg
xchg
or
adc
movsb
mov
xchg
movl
mov
insl
js
mov
mov
cltd
movsb
mov
mov
mov
out
icebp
cld
pop
xchg
xchg
xchg
outsb
nopl
xchg
xchg
xchg
xchg
sbb
sbb
mov
adc
in
jbe
jle
enter
sub
jns
out
xor
xor
out
sahf
xor
xor
jns
out
xor
iret
jnp
out
cmp
cmp
repz
cmp
out
int
ds
inc
jns
aaa
jns
cmovb
stc
inc
sahf
out
repnz
bndldx
jns
out
inc
xor
dec
leave
leave
in
in
push
pop
pop
addr16
cmp
leave
jb
dec
mov
xchg
xchg
xchg
cmpsl
push
xchg
sahf
test
mov
leave
jg
call
sar
leave
or
push
mov
pushf
iret
adc
push
pop
into
sbb
jb
sub
xor
aas
lret
xchg
and
push
lret
imul
mov
enter
lret
inc
das
aas
mov
iret
lods
lret
cmp
lret
into
lret
jns
out
adc
jnp
sahf
cli
sbb
add
push
iret
repz
sbb
es
sbb
cmp
inc
pop
push
jns
leave
repz
push
and
jns
out
jle
mov
das
stos
sub
cmp
shrb
mov
loope
in
das
into
fldt
enter
int3
or
cmp
and
cmp
inc
pop
jns
sahf
out
cmp
cmp
sahf
out
cmp
cmp
jnp
xchg
cmp
mov
jns
roll
fmulp
test
rcll
int
mov
xlat
pop
int
das
add
sub
cmova
stc
int3
mov
fisttps
sub
out
in
sub
mov
add
repz
cmp
xchg
add
add
mov
sub
add
pushl
mov
mov
daa
dec
xchg
dec
sbb
call
dec
clc
and
bnd
testl
push
sbb
jb
and
xor
into
and
inc
into
pop
xlat
lock
arpl
ljmp
jae
hlt
pushf
pushf
dec
pop
jnp
mov
push
into
into
call
adc
sub
daa
daa
fsubp
adc
out
scas
into
pop
dec
fmul
sahf
out
push
add
push
pop
daa
add
aaa
jns
push
mov
iret
dec
cmp
repz
push
pop
pop
or
cmp
repz
mov
cmp
mov
mov
xchg
out
rcll
sahf
out
daa
loop
adc
out
dec
add
push
sbb
sbb
sbb
and
das
setle
cmp
daa
iret
cmp
pop
push
and
out
dec
outsb
xchg
push
daa
outsb
xchg
mov
imull
daa
fmulp
test
shr
push
add
mov
push
add
and
shll
cmpsl
ficoml
iret
push
xchg
xchg
shll
xchg
add
iret
cmp
stos
push
push
mov
mov
outsb
repnz
or
sahf
int3
rcl
shl
roll
frstpm(287
in
sar
pop
setle
jns
xchg
xchg
rorb
rcrb
shlb
adc
das
push
cmp
push
fwait
cmp
repz
data16
mov
push
jl
sahf
ja
movq
and
repz
and
out
sahf
out
leave
adc
sub
and
sahf
fildll
ljmp
jle
sarb
inc
add
sub
clc
fldt
adc
nop
fsubrl
rcrl
shl
jns
insl
ds
dec
add
cmp
xchg
pop
push
jne
adcb
cmp
or
out
outsl
inc
fdivrl
cmp
into
add
in
dec
sahf
ja
push
add
fnsave
jb
adc
sbb
es
sysret
in
in
es
xor
aam
fsubp
in
aam
aam
push
adc
sbb
enter
sub
mov
fdivrs
mov
dec
hlt
push
das
aam
fimuls
out
enter
or
cmp
in
aad
push
add
psllq
push
push
cmp
jmp
or
push
pop
or
jns
outsl
ja
jg
leave
repz
cmp
adc
lahf
xcrypt-ctr
cmpsl
lahf
scas
cs
mov
add
sbb
aad
mov
pop
sbb
push
aad
mov
fimuls
push
ljmp
push
add
iret
repz
add
push
iret
jae
cmp
pusha
imul
in
in
daa
sbbl
xchg
xchg
xchg
out
sahf
xchg
into
fsts
adc
out
push
cli
push
cmp
xor
lahf
xlat
xlat
push
sbb
jns
leave
repz
inc
jns
out
inc
and
pop
jns
dec
aaa
mov
jae
and
jle
mov
xchg
jns
sahf
out
sub
out
in
lret
cs
fmulp
loope
push
xor
fmuls
xor
sbb
aas
add
fdivs
cmp
cmp
inc
dec
movntps
dec
icebp
pop
fdivr
cmp
dec
dec
pop
addb
and
inc
in
xchg
ss
dec
cmpsl
mov
xor
cmp
sbb
pop
out
aas
inc
push
fadds
xchg
inc
inc
aas
push
sbb
into
pop
inc
adc
test
sbb
aaa
cmp
xchg
out
push
add
sbb
cmp
repz
outsb
daa
daa
iret
or
or
aaa
or
jne
scas
or
daa
cmp
es
adc
adc
and
jb
inc
push
addr16
das
fsubrl
fistl
push
mov
insl
daa
iret
repz
and
jb
outsb
mov
outsb
pop
andb
cmpb
jns
or
pop
xchg
sub
mov
xor
mov
xlat
sbb
data16
or
xchg
ret
fs
jmp
cmp
push
cmp
repz
xor
and
imul
or
call
out
aam
sahf
out
sahf
int3
enter
mov
pop
mov
lods
movsb
cwtl
out
daa
iret
nop
mov
out
sahf
fs
push
inc
inc
cmp
lahf
out
xor
or
add
jno
push
hlt
fwait
clc
mov
inc
add
inc
enter
and
mov
inc
popa
mov
inc
aam
std
mov
or
cmp
adc
cmp
ss
movsb
jnp
add
and
cmpsb
fisttps
xchg
sub
cmp
cld
inc
jle
test
inc
push
jg
shll
cmovo
pusha
daa
mov
inc
mov
vmovdqu
mov
in
call
mov
notl
push
ficompl
mov
xor
gs
neg
fsubp
stc
jb
jle
mulb
mov
inc
inc
mov
or
jmp
push
in
or
and
add
jle
inc
pop
mov
aaa
push
incl
or
mov
xchg
insb
add
das
aas
inc
dec
dec
aam
add
add
jl
in
outsl
mov
push
or
out
repz
rcll
les
xchg
adc
repz
jo
inc
sbb
sahf
out
ds
sbb
jns
dec
push
sub
repz
and
iret
push
lcall
jns
test
cmp
push
sbb
cmp
jbe
mov
jbe
jl
cmpsb
aas
rorb
push
add
jnp
mov
pop
in
inc
pop
dec
pop
or
js
and
fisttpll
aam
xchg
and
cwtl
jle
push
dec
clc
push
xorb
addr16
pop
mov
mov
inc
lods
jmp
push
push
xchg
loopne
adcl
pop
daa
mov
stos
negl
imulb
jge
mov
pop
jg
sti
xchg
dec
stos
out
loopnew,pn
inc
nop/reserved
roll
sub
daa
dec
inc
inc
sub
xchg
es
or
adc
xor
cmp
xchg
push
js
sbb
sbb
loopne
add
lock
and
push
lret
jns
and
out
lret
cld
lock
add
cmp
cmp
fsubl
das
push
or
out
jns
repz
adc
in
fdivp
cmp
enter
sbb
jns
out
push
mov
test
out
sahf
and
sahf
out
and
cmp
adc
mov
out
jg
movups
pop
dec
frstor
xor
mov
filds
mov
inc
cmp
xlat
inc
jp
xorl
jg
cmp
pop
js
jns
out
mov
repz
dec
sarl
dec
xor
add
movsb
imul
iret
pusha
bnd
das
push
dec
insb
ljmp
dec
repnz
dec
inc
pop
enter
inc
ds
inc
pushf
or
ret
psubw
pop
in
hlt
adc
mov
lret
mov
mov
ret
inc
and
sahf
mov
sub
lods
lds
std
and
sbb
addl
xlat
xchg
inc
push
add
inc
stc
mov
incl
adc
mov
decl
js
inc
outsl
loopne
jmp
call
imul
divl
jl
mov
popf
sti
jmp
stos
push
inc
mov
push
sub
test
pop
stos
clc
scas
adc
inc
jmp
aam
imul
loope
jp
iret
inc
gs
dec
xchg
push
cmpsb
scas
mov
or
addl
cmpsl
xchg
cmp
xor
pushl
in
cmp
sahf
xchg
pop
lcall
lock
mov
popa
sar
mov
fsubs
stos
xchg
clc
repz
mov
subb
fwait
xchg
and
and
or
add
aas
jno
or
mov
clc
aas
pop
fs
dec
lea
aas
ret
shrl
mov
icebp
aas
rorb
and
incl
lds
mov
insb
scas
add
aas
xor
aad
mov
std
std
into
popa
test
ja
stos
in
das
dec
pop
loope
les
aas
xchg
les
jne
int
mov
ljmp
xchg
cmp
push
mov
xchg
aas
and
loop
mov
jp
popa
push
pop
sarl
mov
call
adc
das
lea
mov
inc
inc
aas
movsl
jmp
jg
sub
jge
mov
inc
rcr
push
arpl
int3
and
call
cmp
jp
and
pushl
shrb
inc
xchg
mov
fmull
call
cmp
test
incl
mov
jne
fldt
cmp
jno
shlb
out
dec
nop
pop
cmp
fisubl
xor
jmp
push
lahf
inc
pop
mov
sub
dec
in
ss
push
scas
into
imul
faddp
jge
sti
call
mov
xchg
cmp
push
andl
dec
dec
gs
std
orl
pop
mov
ficomps
frstor
push
push
add
enter
pop
inc
push
dec
ljmp
in
jnp
cmpsl
add
xor
popa
push
out
mov
les
hlt
push
xor
xchg
fs
pushl
mov
push
movsb
mov
aad
mov
rclb
mov
sub
mov
jmp
sbb
dec
jno
repz
test
ficompl
jmp
mov
hlt
movl
insb
adc
test
fs
std
in
leave
mov
add
insb
push
arpl
psubd
or
dec
and
pop
adc
in
pusha
aad
jno
mov
inc
aam
dec
std
test
movsl
jg
cli
test
xor
leave
mov
insb
fdivs
jne
filds
or
mov
lods
xor
es
ficoms
push
xlat
enter
mov
and
mov
mov
xchg
mov
adc
sub
mov
pushl
jmp
outsl
das
adc
stos
sbb
data16
inc
fdivl
jno
add
mov
adc
out
mov
mov
movsl
in
lahf
xor
mov
js
stc
jg
inc
inc
test
xchg
sbb
push
sub
call
pop
arpl
hlt
push
imul
insb
sbb
xor
dec
add
in
xchg
push
insb
jnp
add
inc
hlt
or
fnstenv
adc
mov
mov
bound
ficoml
repz
mov
aam
pop
popa
mov
into
pop
cmp
mov
inc
movsl
pushl
ret
movsb
sti
hlt
shrl
imul
mov
call
mov
add
in
add
pop
dec
or
cmp
add
daa
adc
or
xchg
or
and
test
or
mov
popa
into
push
stc
ficomps
leave
fldcw
and
pushl
mov
orl
mov
in
mov
mov
add
lcall
inc
aad
scas
ja
popf
adc
push
fdivl
or
test
fs
ds
or
test
push
or
push
in
decl
xchg
daa
scas
add
mov
pop
jge
xchg
shlb
add
inc
push
imul
xorb
sbb
push
imul
aam
loopne
rorl
dec
dec
frstor
fistpll
mov
mov
aad
mov
call
xchg
shll
jg
push
repnz
addr16
cmpsb
fldl
mov
dec
ss
fisubrl
or
ljmp
pusha
jp
inc
ret
out
pusha
fists
addr16
mov
jns
imul
andl
aaa
std
mov
rclb
or
add
mov
das
es
incl
cld
mov
mov
mov
add
mov
cmpsl
call
ret
shlb
scas
fldcw
ret
es
pushf
mov
insl
add
decl
pushf
aas
ss
jmp
addr16
jb
push
add
adc
mov
jnp
sbb
call
xchg
or
out
fdivrl
fisttpl
aam
roll
clc
mov
push
int
lcall
pop
es
outsl
ja
mov
out
cli
jo
ud0
cmp
pop
decl
adc
sahf
gs
clc
sar
imul
push
js
or
xchg
cli
call
dec
ret
cmp
cmpsl
notl
pusha
rorb
imul
ljmp
fldenv
filds
out
sub
aaa
pusha
mov
fidivrs
mov
jmp
sub
mov
lret
mov
cmpsb
mov
sarb
call
int
push
ficoms
fldenv
jp,pn
mov
dec
popa
les
sbb
xchg
sub
aaa
mov
fadds
aam
or
sbb
add
sub
insl
jae
xor
pop
push
fstpl
filds
jns
movsl
add
fsub
jns
out
fcmovu
mov
loop
in
out
sahf
out
jmp
out
sahf
in
repz
cmc
div
js
out
clc
stc
cli
sti
cld
sbb
cmp
mov
adc
inc
sub
inc
movsl
adcb
push
fbld
cltd
fdivs
jae
inc
push
dec
bound
jbe
inc
lea
xor
dec
repz
insl
bound
sbb
inc
dec
popa
je
push
xchg
push
in
fistpll
and
cmp
mov
pop
inc
jno
ljmp
and
aas
pop
inc
cmp
pop
bound
xor
aaa
cmp
popa
arpl
cmp
arpl
insl
adc
xor
bound
in
sub
popa
push
inc
jbe
pop
insb
imul
push
outsb
jg
insb
imul
dec
inc
mov
add
push
inc
mov
xor
dec
sbb
dec
mov
lock
fs
push
mov
gs
je
ss
inc
rol
xchg
jbe
lcall
xchg
fs
lret
gs
or
mov
inc
test
inc
dec
arpl
lret
mov
popa
jns
jne
jno
push
dec
insb
stc
popa
sub
adcl
aaa
aas
inc
push
sti
or
push
push
aas
add
add
adcb
and
add
daa
xchg
push
aas
inc
inc
cmpsb
outsb
mov
inc
aaa
sbb
fs
sbb
popl
jle
jae
pop
jbe
out
inc
inc
inc
add
ds
mov
scas
add
cli
rcl
push
iret
int
push
dec
or
xor
dec
xchg
pusha
stos
sbb
cmp
ja
outsb
jne
aad
movsb
andl
dec
jge
addr16
mov
xor
xor
or
mov
test
add
addr16
clc
xchg
cmp
fidivrl
data16
or
ds
inc
cmp
test
adc
cltd
cli
cltd
dec
cld
push
rorl
push
add
outsl
adc
mov
push
lcall
cmp
mov
pop
mov
xlat
mov
and
xchg
loopne
scas
or
inc
jb
js
push
mov
dec
popa
jo
push
nop
and
cmpsl
lahf
push
outsl
outsl
test
bound
push
jno
and
push
sti
mov
in
pop
or
dec
pop
in
nop
push
pop
or
test
or
out
arpl
cmp
adc
mov
pop
jo
push
mov
push
outsl
insb
jns
push
add
inc
das
inc
jb
push
notl
mov
je
inc
outsl
arpl
adc
mov
in
daa
sub
inc
push
bound
ja
cli
ss
inc
jbe
xor
imul
jg
push
dec
and
cmp
xor
pop
sahf
pop
shll
das
xor
xchg
inc
add
and
repz
push
and
inc
xchg
xchg
inc
ror
jle
shlb
xor
je
lret
dec
sahf
dec
pop
pop
and
add
inc
inc
mov
daa
sbb
jo
outsb
rclb
shl
inc
sub
inc
dec
pop
bound
jle
push
jns
arpl
je
scas
xor
inc
pusha
in
popf
mov
inc
jne
test
pop
inc
add
ficoml
fnstcw
sub
daa
sub
and
add
add
add
add
fsubr
sub
inc
jo
or
incl
pop
add
fdivr
loopne
adc
dec
or
adc
add
es
fbstp
xchg
add
add
or
mov
pop
push
or
or
or
or
or
adc
adc
push
adc
fidivrl
or
pop
sbb
adc
adc
adc
outsb
mov
add
or
adc
pop
adc
cmpsl
add
sub
rolb
nop
add
in
aaa
add
add
add
adc
or
push
add
dec
add
inc
mov
cmpb
jb
imul
ds
adc
push
adc
pop
and
xor
inc
mov
adc
xor
addb
add
js
and
subl
and
pop
add
pusha
xchg
rolb
pusha
orl
add
add
or
add
aas
adcl
shlb
or
add
pushf
into
add
adc
decb
lods
jnp
ja
adc
push
adc
pop
popa
jno
and
fwait
outsl
or
xchg
mov
lock
sbb
loope
icebp
mov
mov
add
or
push
xor
js
frstor
lret
rcr
push
ret
decl
xchg
jae
sub
std
cmpsb
xor
aas
imul
fdivrl
add
mov
cmp
out
pop
les
fsts
dec
or
xchg
jecxz
pushf
ret
ja
fbld
and
cmp
xor
and
jmp
inc
cmc
iret
xchg
inc
jl
repnz
dec
or
adc
pop
inc
inc
xchg
scas
or
xchg
pusha
add
std
or
mov
cld
cli
and
mov
fiaddl
jg
fnstsw
ficompl
cmpsl
xor
mov
cmpsb
mov
insb
mov
movsl
jecxz
fisttps
or
pop
mov
stc
or
jns
xchg
jg
or
insb
sub
addr16
out
or
push
push
xchg
add
decl
lock
scas
jle
fcmovnu
clc
cmp
fisubrl
in
mov
orb
cli
lcall
outsb
push
aaa
cmp
mov
scas
mov
pop
pop
mov
popl
inc
sub
mov
ret
scas
adc
mov
xor
lods
scas
xchg
test
jns
jecxz
aam
and
sbb
sarl
and
roll
fwait
movsb
jmp
push
lret
push
fistpll
in
and
ss
repz
cmpsb
pop
outsl
icebp
mov
pop
lock
std
or
pop
mov
daa
test
aaa
dec
dec
pop
push
out
outsl
loope
loope
rorl
mov
in
outsl
dec
sub
lods
leave
mov
jp
push
out
or
push
sahf
mov
sti
jg
jno
lock
jg
inc
icebp
xchg
std
sarl
xor
hlt
and
xchg
cld
pop
mov
jmp
sbb
add
pop
pushl
jb
mov
mov
mov
sub
pop
mov
jl
rorl
adc
push
gs
jg
hlt
push
add
negb
pop
stc
loope
mov
sar
andl
aas
icebp
testb
mov
stos
imul
scas
fadds
in
sub
aam
pushl
pop
sub
jg
scas
cld
or
push
inc
sbb
paddb
lcall
inc
mov
dec
adc
push
lock
lods
jp
testb
sbb
into
fcomps
lcall
dec
popf
sbb
sbbl
into
andl
aas
loopne
cli
adc
aaa
es
in
add
inc
adc
loope
fisttpll
out
je
hlt
icebp
aas
std
cli
push
push
push
idivl
cmp
sub
jg
mov
incb
inc
mov
jg
je,pn
sub
jg
imul
mov
decl
sbb
jns
enter
or
push
pushf
push
scas
xlat
sub
cmp
sti
punpckhbw
cli
je
scas
cmpsb
orb
mov
mov
pop
push
cmp
js
jmp
xchg
pop
clc
pop
hlt
sub
fistpll
add
lea
jg
gs
std
xorb
std
sub
imul
outsl
adc
ret
das
pop
pop
pop
shlb
das
rcr
out
sarb
sbbl
jno
or
sarb
jg
pop
les
cli
mov
mov
inc
arpl
stos
mov
and
insl
add
jmp
scas
sbb
push
scas
loop
jge
push
shrl
mov
push
mov
adc
and
push
fcomps
xchg
jo
and
out
test
jae
push
iret
sti
cmp
ficoms
aam
sahf
ljmp
sbb
fadd
or
mov
nop
enter
add
cld
call
js
cmp
scas
lods
hlt
cmp
fistl
mov
adc
push
movsb
xchg
or
mov
stos
mov
lods
xor
jg,pn
cmpsl
scas
popa
in
pop
or
jg
xchg
mov
xlat
pushf
cld
aas
clc
jge
jnp
sbb
outsb
mov
sbb
jecxz
inc
adc
pushl
adc
xchg
and
push
push
jo
pusha
imul
add
mov
cmc
push
cmp
xchg
mov
cwtl
pop
xchg
ftst
jbe
xchg
and
popf
and
out
jae
shrb
shlb
out
aas
stc
add
out
gs
jno
fidivrl
lock
adc
pop
cld
addl
jno
das
cli
adc
and
lahf
fmull
push
cltd
jge
push
lret
mov
pop
mov
sub
clc
mov
dec
incb
fisubrl
aas
mov
or
mov
inc
or
pop
jg
add
std
mov
jg
mov
aad
test
mov
mov
jbe
or
iret
push
jbe
push
sbb
stos
icebp
pop
incb
jg
out
dec
jno
adc
push
inc
jecxz
sbb
sarl
outsl
loop
jnp
inc
sar
xor
sbb
xor
imul
dec
jae
imull
mov
aas
mov
fsubrl
mov
push
and
punpckhwd
push
clc
xchg
pushf
mov
repnz
add
push
and
mov
adc
inc
aas
push
shll
cld
decl
inc
jb
fistpl
adc
call
jno
lcall
pop
pop
nop
mov
inc
sti
arpl
daa
std
or
sbb
ljmp
mov
inc
cmpsb
popf
push
loop
sbb
or
imul
xor
dec
xor
push
fsubr
fistps
lds
fidivrl
jg
stos
inc
pop
add
dec
mov
sub
jge
xor
lahf
les
sbb
shrb
xor
inc
and
mov
in
stc
mov
lahf
outsl
int3
push
sbb
pop
sar
jmp
arpl
out
out
outsl
xchg
ljmp
sar
test
in
jge
popa
push
test
jbe
outsb
hlt
sti
fsubs
shl
dec
movsb
incl
xchg
aad
loop
lahf
mov
or
out
lcall
dec
cmp
shl
cld
mov
adc
stos
pop
jg
lcall
fistpl
sub
sarb
adc
xor
pop
rcr
dec
mov
jmp
jmp
lea
jp
jnp
jecxz
adc
inc
lds
call
pop
adc
imul
or
inc
pop
xor
rorb
and
add
jg
incl
cmpsl
push
sbb
mov
pop
inc
cmpsl
enter
mov
into
test
xchg
jg
movsb
insb
or
and
xchg
fidivrs
push
xor
add
insb
test
aas
repz
outsl
lock
clc
int
mov
in
jmp
stc
out
mov
clc
push
std
mov
mov
or
mov
pmullw
mov
push
mov
fsubrp
dec
sahf
enter
fcmovb
inc
adc
mov
loopne
test
out
rolb
pop
or
or
inc
in
cmpsb
rorl
aas
lods
leave
inc
lods
movsb
incl
pslld
cmc
lock
pushf
imul
jl
fistps
jl
xchg
imul
pop
in
outsl
out
cmp
jmp
mov
pop
lock
in
scas
and
jmp
hlt
dec
mov
xlat
inc
incl
ja
pop
aas
mov
jg
mov
sub
addr16
jbe
mov
cld
daa
jp
std
adc
cltd
or
mov
ret
clc
push
std
and
add
lock
pop
pop
div
cld
testl
sbb
add
stc
lahf
loope
jae
jmp
or
je
jge
fbstp
xchg
mov
stc
add
out
icebp
mov
loope
mov
mov
popf
sti
mov
fbstp
in
sub
push
das
push
jge
out
cmp
call
xor
decb
adc
jbe
mov
mov
and
call
shr
cltd
add
jo
mov
js
int
add
push
pop
aaa
std
filds
dec
inc
sbb
idiv
jg
xchg
fimull
ret
ror
sbb
jmp
push
pushf
jecxz
jg
mov
sub
mov
pop
clc
loope
adc
and
dec
add
cwtl
pop
inc
push
lods
mov
and
fdivrl
xchg
lcall
decb
js
pop
gs
and
sarl
xor
loop
pop
out
jg
jno
ret
cmp
je
inc
arpl
out
jmp
addr16
clc
xchg
cmpsb
ljmp
ds
inc
mov
in
pop
sbb
xchg
imul
jmp
outsl
jmp
std
mov
inc
add
faddl
mov
or
lcall
imul
pop
stc
push
dec
out
fstpt
pop
adc
jmp
pop
add
inc
add
jl
icebp
push
lahf
sti
inc
pop
imul
push
xchg
cmpsb
scas
les
pop
xor
mov
xchg
and
pushl
outsb
sbb
aas
inc
or
jns
or
add
push
test
push
sti
pop
inc
dec
push
mov
dec
mov
fs
cmp
int3
add
rcrl
and
add
lds
xor
rol
fimuls
or
pop
push
enter
test
inc
xchg
call
loope
cmpl
inc
test
mov
adc
call
iret
xchg
xor
cmc
jo
frstor
ret
out
mov
addb
or
pop
add
ljmp
loope
shl
cmp
cs
fldcw
mov
adc
jmp
mov
aad
inc
lret
jb
int3
push
adc
test
mov
mov
lds
xor
iret
xor
testb
rcll
mov
roll
call
or
sub
daa
cmp
js
scas
addb
outsb
iret
jae
imul
pop
fnstsw
dec
in
jae
dec
es
dec
cwtl
fistpl
inc
and
sbb
push
inc
fsts
pushl
adc
mov
jecxz
mov
ret
and
sahf
push
jp
xchg
lret
mov
es
cli
mov
jmp
dec
pop
pop
push
push
mov
mov
lds
cmp
lds
pop
pop
jmp
dec
xor
out
pop
daa
lret
adc
push
xor
and
or
mov
dec
push
out
dec
mov
jmp
imul
dec
inc
fs
pop
sbb
call
jno
scas
mov
sarb
in
es
inc
movsb
fnstenv
jbe
mov
dec
bound
int
inc
js
outsl
and
mov
mov
or
sub
dec
in
hlt
ljmp
dec
push
mov
xchg
out
popf
sub
mov
lea
lret
fidivl
push
clc
sar
decl
pop
lcall
out
add
dec
stc
xchg
and
sbb
push
adc
lcall
out
jp
incb
cmp
push
movsl
dec
cmc
lahf
sbb
jns
movsl
testl
mov
inc
dec
jns
mov
fdivl
inc
mov
xchg
mov
incl
mov
mov
add
dec
call
rorb
pop
scas
aad
xchg
mov
push
decl
pop
cmp
cmp
leave
jmp
add
jae
in
fnsave
ds
decl
addr16
scas
and
aam
loopw
push
mov
sub
xchg
xchg
loopne
or
incl
popa
lea
push
in
cld
lahf
inc
out
mov
xor
lcall
fists
jae
lods
stc
sbb
cmp
iret
stos
sti
inc
popf
test
adc
mov
add
push
ret
aad
mov
jge
xchg
sbb
test
incl
push
adc
mov
pop
pop
fwait
jb
or
lret
js
ret
lea
in
adc
sti
rolb
dec
push
stos
xlat
std
es
add
in
sub
sbb
insl
lea
daa
xor
lea
decl
xchg
cmpb
sub
imul
call
int
fdivrp
call
mov
fdecstp
std
jne
mov
lret
in
cmc
push
mov
cmc
xor
in
xor
pusha
insb
cld
inc
in
inc
dec
mov
mov
jp
popf
cmp
jne
add
inc
fldt
in
sub
out
cld
int3
pushl
pop
sbb
push
xor
sarl
leave
mov
and
jo
jne
mov
in
incl
push
test
mov
or
sar
xor
mov
icebp
lcall
mov
or
mov
repnz
push
es
sbb
sub
pop
mov
mov
call
mov
mov
mov
fadd
setg
in
mov
adc
jbe
jns
popa
jecxz
aad
fs
add
pop
test
std
movb
fdivrs
mov
ljmp
cmpsb
in
inc
call
loope
shll
jno
add
xchg
aas
pop
rcr
lcall
js
mov
jp
lcall
xor
dec
shll
adc
mov
call
mov
sbb
sti
cmp
jg
add
xchg
and
imul
and
pop
out
je
cvtps2pi
adc
ds
cmp
idiv
push
xor
jae
icebp
jnp
jmp
xchg
fxch
idiv
push
nop
loop
outsl
xchg
jl
aaa
pop
loop
scas
cli
fdiv
sub
push
sub
arpl
int3
test
data16
cmpsb
mov
pop
leave
sar
adc
mov
in
in
imul
or
leave
jl
xchg
and
iret
pop
inc
aaa
outsb
aad
lret
mov
cmpsb
add
ljmp
pop
push
xor
jb
sbb
int3
repz
repz
ljmp
lea
adc
in
mov
dec
push
or
cmpsb
jmp
mov
sub
stos
cmp
incl
mov
lahf
xchg
lret
je
inc
psrld
decl
rcr
ds
xchg
add
adc
cwtl
int3
jl
cltd
pop
or
mov
jae
sbb
or
mov
xchg
addr16
icebp
pop
incl
dec
xchg
in
add
mov
std
cmpl
sar
lret
arpl
incl
cli
xchg
jnp
imul
sbb
daa
jle
pop
icebp
jmp
or
test
jns
aad
std
call
xchg
divb
jge
or
scas
je
xchg
push
movsl
pop
dec
push
xor
jo
dec
jg
or
jmp
mov
outsl
xchg
bndldx
loop
and
sbb
fnstcw
dec
mov
sbb
cmp
sub
push
mov
test
stos
jmp
or
das
or
jl
push
xlat
leave
icebp
add
jmp
fisttpl
data16
mov
add
sti
xchg
xor
push
mov
popf
add
cmp
loope
clc
mov
mov
mov
cmp
js
add
sub
xor
in
or
pusha
pop
xchg
lods
negl
test
lret
mov
das
std
outsb
rcr
push
mov
inc
out
mov
push
dec
fistl
ljmp
imul
mov
or
cmpsl
orb
sub
mov
ja
aam
sbb
mov
sub
imull
jbe
lahf
aaa
push
jg
dec
cld
jno
sub
dec
sahf
scas
mov
das
mov
jns
or
mov
and
sbb
stos
jl
push
sub
subb
sub
std
or
sbb
add
ret
mov
add
dec
sbb
sbb
pop
inc
into
daa
out
add
js
test
jl
out
xlat
fcomi
dec
gs
rep
mov
xor
sbb
jmp
cmp
into
fstp
in
mov
mov
int3
cmp
divl
insl
mov
xlat
mov
imul
ljmp
into
push
pop
ljmp
sahf
cmp
inc
push
ljmp
jl
add
inc
pusha
leave
and
ret
int3
jmp
inc
mov
adc
jns
int
stos
addr16
inc
jnp
add
fs
mov
movsb
and
in
adc
jne
dec
dec
xor
movsb
pop
jle,pt
std
lods
subl
lcall
dec
sarl
nop
fnstcw
pop
mov
lock
jge
mov
mov
cmp
jae
lret
mov
in
sbb
lret
decb
dec
jmp
sub
sub
lcall
out
mov
xlat
mov
xchg
call
loop
pop
cmp
mov
jg
flds
xchg
mov
sbbb
cmp
adc
insb
jbe
into
sbb
cmp
in
jo
out
cli
or
jle
mov
scas
push
fisttpll
jns
rolb
push
out
out
shll
inc
loope
mov
xchg
cmp
adc
jbe
mov
add
in
jg
lock
jp
pop
mov
inc
xor
mov
sbb
adc
sbb
mov
inc
pop
cmc
call
jne
rcll
call
into
jge
xchg
mov
call
scas
sub
ret
mov
inc
dec
add
xchg
xor
mov
jmp
enter
dec
xor
insb
nop
inc
cmp
ja
pop
imul
clc
sub
fcom
pushl
insb
lods
or
dec
push
xchg
ss
outsl
out
out
out
in
stos
cmpsl
lds
mov
xchg
test
jle
xchg
pop
mov
test
and
repz
jg
cmpsb
test
pushl
scas
and
outsl
xchg
cltd
sti
cmpsl
add
scas
pop
dec
sbb
sbb
mov
stc
mov
inc
ljmp
cmpb
lret
gs
adc
lcall
xchg
cmp
sub
aas
lods
lea
dec
and
push
data16
or
sar
sbb
adc
add
lods
sub
push
pop
mov
and
ljmp
repnz
mov
sbb
cmpsb
mov
inc
adc
clc
pop
sbb
mov
mov
fsub
mov
out
cli
incl
sbb
mov
jo
mov
xchg
mov
pushl
rorl
cli
jo
in
scas
inc
aaa
cld
fs
shrl
or
sbbb
decl
scas
xchg
mov
push
pop
rcr
xor
loope
push
mov
icebp
roll
xchg
ljmp
push
jae
inc
jge
mov
xor
cmc
imul
int
mov
push
pushl
mov
mov
jno
mov
and
cmp
xchg
adc
imul
call
mov
mov
repnz
int3
outsl
sbb
out
lret
aaa
ds
mulb
push
add
pop
xchg
stos
push
sti
fdivrl
add
test
dec
xchg
hlt
lcall
jl
es
or
adc
call
fisubrs
call
jle
sub
push
psubusw
les
jmp
pusha
add
call
or
jle
hlt
cmp
inc
mov
push
ds
mov
mov
adc
enter
cmc
jl
inc
aam
cmp
scas
test
ljmp
push
inc
xor
sbb
mov
xchg
adc
lcall
lods
jno
incb
fstl
addl
mov
insb
push
adc
rcl
lock
jecxz
enter
push
inc
dec
pusha
mov
ljmp
sbb
decl
lret
xor
push
pop
test
xor
pop
sahf
push
and
jmp
in
or
cmp
lock
negb
dec
sub
dec
test
imull
sub
mov
pushf
mov
mov
inc
pop
or
mov
cmp
shll
adc
sub
fcomip
push
ficoml
xor
adc
lret
inc
adc
push
push
mov
call
cmpb
xchg
rcrl
lcall
jmp
jecxz
cmc
push
aaa
in
decl
nop
je
popf
mov
sbb
pop
mov
pop
sbb
daa
dec
jmp
jmp
mov
cmpsl
mov
es
xor
adc
fcomip
inc
daa
push
cmpsl
jb
pop
lods
rol
aam
mov
xor
sbb
xchg
out
cli
ljmp
adc
adc
mov
stos
or
jb
lcall
iret
jle
fidivl
cmc
or
cmp
and
adc
inc
sbb
test
addr16
movsb
outsl
lcall
push
mov
lret
sub
sarl
ficoms
es
jb
out
xlat
dec
mov
mov
cli
cmpxchg
out
in
jmp
inc
pop
mov
mov
or
fxch
imul
cmp
shrl
push
push
mov
jmp
mov
mov
mov
xchg
sahf
gs
icebp
dec
pop
mov
ret
sbb
ljmp
pop
dec
ret
insl
cmp
lret
lret
adc
clc
mov
inc
mov
mov
test
fidivrs
es
ds
xchg
dec
mov
jae
fcomps
push
sub
pop
mov
call
es
iret
or
jnp
sub
outsl
mov
jno
xlat
fildl
pop
repz
cli
jmp
jecxz
fmull
push
shlb
adc
cli
pop
adc
mov
cmp
jmp
xchg
enter
pop
mov
cmpsb
mov
add
push
dec
nop
mov
adc
adc
movsb
movsb
adc
stc
cmp
mov
loop
mov
aas
orl
decl
mov
pop
cmpsb
adc
fnstenv
out
mov
jl
test
fidivrs
add
lcall
andl
sub
inc
pop
or
mov
leave
shlb
inc
lahf
negb
or
pushl
jne
fbld
mov
jecxz
dec
hlt
mov
int
cmp
sar
jg
jp
stos
mov
add
stos
call
jb
xor
roll
in
or
addr16
imul
pop
add
sbb
rol
incl
adc
adc
sahf
mov
cld
mov
lock
mov
fcoml
mov
sarb
mov
cs
cli
push
adc
lcall
cld
mov
inc
sti
les
cmpl
shrb
xchg
push
inc
mov
sahf
sahf
mov
push
mov
dec
fdivrl
push
aaa
and
aad
sbbl
push
cmp
jecxz
popf
fwait
sub
add
mov
mov
jo
dec
inc
mov
nop
cli
jg
inc
cmpb
sbb
xchg
lods
and
icebp
or
out
nop
sar
and
jmp
addr16
pop
es
xchg
jge
mov
pop
dec
pop
subl
mov
insl
pusha
push
cmp
mov
cmc
jo
add
movsb
inc
es
add
incl
and
addr16
jge
jb
cmp
xor
push
jg
jbe
notl
add
inc
cli
mov
cmpsb
ror
call
shlb
call
xor
in
sbb
add
out
mov
add
xor
xchg
outsl
clc
ljmp
popa
shrl
push
sbb
lods
iret
arpl
sbb
fidivrl
stos
ljmp
shrb
rorl
daa
or
mov
mov
jp
icebp
mov
xchg
push
insl
dec
push
pop
outsb
add
insb
and
mov
stc
decl
cmp
inc
adc
jbe
fistpl
and
test
leave
jge
inc
sub
sahf
data16
add
out
sub
fildll
cltd
rorb
sub
cmp
mov
movsl
adc
sub
movsl
push
adc
fcomps
cltd
xor
mov
jmp
mov
mov
xchg
adc
enter
andl
decl
or
jl
cmpsl
dec
mov
cmp
dec
cmc
out
inc
das
pop
jmp
push
xchg
xchg
adc
fidivl
jmp
fbstp
enter
adc
xchg
sbb
cmp
lock
pushf
xchg
lret
xchg
stos
pop
jge
call
add
icebp
test
and
loopne
repnz
pushf
dec
movsl
cmp
xchg
aaa
ljmp
mov
push
test
xor
shll
mov
mov
jl
cmpsb
mov
test
test
test
push
sahf
call
dec
mov
pop
sbb
push
fucomp
clc
ljmp
cli
push
lock
loop
mov
out
push
daa
cmp
jno
push
ljmp
jns
adc
xor
dec
pop
sti
and
lods
dec
jmp
xchg
mov
adc
nop
and
clc
pushl
mov
xor
cwtl
cltd
jo
inc
mov
xchg
or
push
xchg
or
in
inc
pop
fisubrl
fwait
into
jp
mov
jno
out
outsl
out
cwtl
cmp
fucompp
pushl
add
push
fisubrs
xchg
pushf
mov
andb
inc
ror
jb
xchg
or
les
dec
adc
sahf
pop
mov
ds
push
add
or
data16
mov
pushl
inc
addl
xor
pop
mov
mov
pop
add
xor
incl
push
adc
repnz
pushl
mov
daa
sbb
imul
lods
push
clc
push
clc
insl
push
xlat
jle
mov
sarb
decl
stos
fisttpl
mov
les
cs
cmpb
lds
lcall
xlat
int3
enter
sub
aaa
movsb
sahf
daa
mov
jae
mov
ds
cmp
iret
jmp
xlat
mov
negb
fldcw
xor
enter
pushl
pop
leave
or
pop
mov
jp
mov
jg
mov
jno
xor
jle
call
dec
into
fxch
mov
and
push
xor
or
push
mull
or
in
pop
decl
or
push
sub
push
fstpt
call
lahf
jp
xor
mull
jo
insb
add
enter
adc
in
scas
jp
xlat
fistpl
daa
sahf
lea
mov
jmp
test
ljmp
clc
jge
pop
or
sbb
lock
icebp
jge
js
dec
loopne
in
push
dec
test
cmp
int3
push
outsl
jg
mov
testl
mov
xor
cld
fmuls
xorl
insb
pusha
mov
cmpsl
dec
std
jno
jl
jl
add
rclb
lea
test
push
loop
decl
dec
cmp
int3
fistps
scas
push
jne
clc
test
cltd
push
mov
or
aaa
cld
call
pop
push
shrb
scas
mov
test
aaa
popf
sub
inc
push
jno
xchg
or
jo
sbb
or
out
stc
shrb
push
and
mov
xor
dec
les
scas
mov
dec
cld
scas
dec
adc
xchg
jns
decl
xchg
test
mov
aas
xor
mov
sahf
inc
das
stos
insb
cli
sbb
pop
cmc
loop
aaa
or
mov
lcall
fsubs
in
decl
or
fdivp
inc
jecxz
clc
push
push
insb
lcall
notb
aas
cmc
mov
adc
pushf
dec
fsqrt
dec
pop
outsb
mov
pop
cmp
add
lret
push
cli
push
stc
cmpsb
xchg
inc
mov
push
jae
sub
mov
fidivrs
fwait
xor
loop
cmp
insl
add
inc
sti
sar
jg
xchg
mov
mov
das
jmp
imul
movsb
inc
xchg
adc
jl
and
pop
mov
push
int
xchg
inc
or
cmc
xchg
inc
and
outsb
pop
arpl
jb
ja
adc
stos
inc
jl
cltd
adc
jg
pop
inc
jp
inc
aas
repnz
imul
rol
jmp
into
or
test
lods
test
out
xor
mov
xchg
mov
decl
cmp
push
sub
mov
fidivs
int3
mov
lcall
xchg
lock
and
test
lret
stos
mov
cmp
push
sbb
xchg
cmp
mov
xchg
sbb
dec
fistpll
and
add
daa
mov
call
lock
loop
outsl
das
xor
jmp
xchg
cmpsl
popa
lods
push
push
fidivs
pushf
nop
call
xor
xchg
or
testl
lret
jo
lcall
jge
mov
pop
and
pop
sbb
sub
cli
ljmp
test
push
sbb
out
push
xlat
rolb
push
out
and
dec
inc
pop
es
stc
mov
shl
pop
in
aam
add
in
push
mov
add
shl
jmp
jmp
mov
dec
jl
and
aad
dec
sbb
cmpsl
sar
mov
lcall
int3
ret
inc
inc
and
pop
dec
push
inc
rclb
insb
sbb
jmp
aad
mov
jp
jl
fistl
mov
cmc
jns
mov
inc
pop
xchg
xor
std
lcall
cmp
fnstcw
xor
imul
insb
into
mov
out
clc
ljmp
repz
lret
adc
in
xor
fldt
decl
push
jnp
jb
push
mov
add
sub
and
sbb
pop
jg
loop
in
subl
out
adc
add
mov
mov
decl
scas
inc
mov
and
mov
test
nop
and
fsubrl
jb
jnp
lcall
movsl
mov
mov
out
movsl
xor
pushf
cmc
cs
fistpll
mov
pushl
outsb
jp
pop
test
imul
lahf
and
pop
insl
mov
daa
lcall
popf
inc
subl
sbb
push
adcb
adc
ror
dec
ficoml
push
fwait
idiv
cmp
xor
mov
mov
or
popa
mov
add
push
and
ljmp
js
push
outsl
mov
or
or
inc
add
outsl
and
mov
bound
sub
push
pushl
clc
sbb
pop
rorb
int3
or
les
jg
incl
pop
imul
das
ret
cmp
sub
rcrl
jne
popa
or
pop
cwtl
dec
mov
popa
fwait
jbe
push
or
ss
iret
stos
repz
enter
jae
mov
pop
sbb
lcall
pop
pop
push
out
lds
xchg
stc
adc
pop
push
dec
sbb
jg
inc
inc
fstpl
mov
xchg
sarl
popf
pop
addr16
or
xchg
mov
dec
pop
sbb
flds
mov
nop
movsb
pop
and
adc
xor
in
mov
lock
incl
adc
pop
xor
or
pop
ljmp
sbb
mov
inc
and
adc
push
cmpsb
push
cltd
test
mov
shll
add
decl
dec
adc
scas
cmp
rcr
sub
jns
stc
xchg
and
sbb
mov
cmc
fcomip
dec
push
push
mov
dec
leave
stc
inc
dec
stos
dec
xor
xor
inc
mov
dec
jae
dec
push
mov
mov
or
sahf
push
inc
cmpsl
js
in
sbb
and
mov
int3
cld
incl
shll
pop
cmpsb
dec
or
jg
xor
or
xchg
cwtl
aas
pushl
std
aaa
lcall
or
xchg
jmp
cmp
jg
fnsave
out
mov
sub
sarb
ficomps
rorl
cmp
addb
roll
add
xor
jne
jno
cmpb
jg
push
push
js
cmp
jbe
in
lret
scas
mov
rclb
rclb
aas
jnp
nop
jg
push
es
incl
outsb
cmp
jb
incl
pusha
inc
repz
pushl
testb
mov
sub
mov
aad
jp
push
cs
dec
ljmp
push
fs
pop
int3
xor
pop
sub
insb
jp
dec
in
or
lcall
xchg
fwait
int
inc
pusha
fnstsw
jo
das
imul
rcl
testb
dec
adc
jge
and
push
nop
lock
fdivr
sub
dec
pop
andb
jbe
add
dec
loop
mov
push
dec
cmpsb
sub
roll
in
jno
add
dec
jl
ss
dec
jg
jbe
les
push
enter
cs
jo
mov
or
cmp
xchg
ja
ljmp
pushl
jp
sbb
cs
out
aas
xchg
mov
xlat
jmp
and
repz
and
jno
popa
enter
js
and
or
cmp
sub
out
jecxz
out
inc
sub
cld
mov
inc
arpl
int3
loop
idiv
incl
mov
and
rcrl
aaa
icebp
ret
mov
daa
out
ds
xor
xor
js
scas
divb
ljmp
add
or
cli
dec
push
mov
and
sbb
scas
out
mov
outsl
andl
cmc
pop
dec
enter
jecxz
lds
mov
in
pop
insl
sub
ljmp
xor
jmp
xor
les
mov
int
cmp
fs
in
mov
push
lcall
jo
push
pop
lods
mov
sub
call
dec
jl
xchg
scas
stos
test
sub
pop
stc
lock
push
inc
and
lock
out
adc
pushl
push
stos
cwtl
mov
push
dec
xchg
or
out
dec
fucomip
icebp
pusha
add
mov
cmc
in
std
sbb
push
jb
cmpsb
xchg
lods
inc
jns
add
subb
bound
and
mov
xor
xchg
xor
sbb
imul
arpl
sub
arpl
dec
jg
jae
pop
outsb
imul
fs
cmp
mov
out
das
sahf
ret
mov
add
mov
jg
xchg
jns
cmp
popa
push
xlat
sar
aaa
jge
loopne
lahf
mov
dec
insb
mov
loopne
and
xor
das
xchg
incl
cmp
loope
cmp
mov
daa
push
cmpsb
shlb
fs
inc
push
pop
cmp
incl
popa
push
dec
sub
jge
std
clc
int
int
add
mov
pop
push
mov
or
incl
or
xchg
test
mov
out
pop
xor
adc
aaa
shl
ss
loope
mov
sbb
lret
dec
int3
pop
inc
xlat
xor
add
and
out
sahf
aas
mov
bnd
adc
decl
repz
mov
pushl
mov
loop
push
dec
sti
rorl
sub
fistpl
push
and
xchg
pushl
jge
xor
sbb
mov
jo
sub
notl
mov
jb
mov
movsl
or
mov
insl
pinsrw
cmp
loop
incl
mov
sbb
or
ljmp
loope
cmpsb
cmp
fidivrl
mov
inc
jb
call
lret
cmp
add
repnz
repnz
dec
dec
in
jmp
and
mov
pushl
movb
mov
mov
sbb
aaa
test
xor
dec
jecxz
decl
mov
xchg
sahf
out
subb
jne
pushf
cli
rcr
std
lock
cltd
aas
and
in
sbb
lret
adc
jbe
ja
aad
pop
mov
dec
push
adc
push
fsubl
loopne
mov
fisubs
and
or
mov
cli
das
cmpsl
push
jmp
mov
cmp
pop
mov
jge
cmp
dec
cmpsb
leave
in
repnz
sti
pop
push
pushf
ljmp
xchg
mov
mov
orl
sbb
mov
dec
movsl
in
inc
fs
jmp
arpl
inc
xor
call
xor
mov
xchg
jg
out
inc
icebp
mov
dec
xor
incl
dec
cmc
add
sbb
lods
mov
jae
mov
fisubl
iret
jns
outsb
sahf
in
cmp
test
dec
dec
mov
icebp
pop
loopne
or
jo
jns
push
and
xor
sbb
addr16
push
mov
in
xor
mov
mov
aas
cltd
add
inc
cltd
pop
or
cli
in
cltd
icebp
into
or
in
int3
rcrl
fdivrl
fwait
call
movsb
sahf
out
push
lahf
fldl
xor
js
incl
mov
popf
call
dec
xlat
sub
mov
int3
adc
in
xchg
mov
cmp
mov
ss
call
push
jle
cmp
and
aam
adc
jno
std
add
nop
mov
pop
into
fbstp
cmp
or
sbbl
mov
inc
add
sbb
pop
jecxz
sub
push
sbb
and
lcall
ljmp
in
xchg
imul
fnstenv
inc
jmp
ljmp
jl
rcrb
or
or
mov
add
jmp
fistpll
sbb
decl
insb
sbbl
pop
out
bound
pop
mov
call
in
jae
ja
lcall
dec
rorb
cld
or
popf
aam
mov
aaa
int3
inc
fldcw
scas
popa
and
mov
test
mov
ficompl
pop
push
jg
xchg
mov
dec
jle
rcll
and
sti
push
sub
popa
sub
ss
aad
ja
leave
push
cmp
dec
cwtl
aaa
push
repz
out
movb
push
cld
js
in
mov
cld
xlat
jb
nop
add
pop
negb
push
ret
jb
pop
and
push
dec
fldcw
aam
std
mov
lds
sub
lahf
in
shlb
loopne
pop
dec
xchg
lcall
mov
xchg
scas
sbb
scas
mulb
jmp
adc
aam
stc
pop
sub
sbb
jle
mov
sub
ficomps
je
mov
out
in
adc
out
ljmp
rcrl
adc
rolb
xor
imul
decl
pop
test
bound
adc
xchg
or
push
stos
sbb
push
repnz
loopne
xchg
in
adc
pop
roll
add
adc
fwait
bound
mov
sar
ljmp
imul
pop
lret
mov
mov
pop
dec
add
add
lcall
pop
lods
jne
test
inc
rcll
test
bound
push
jae
mov
add
call
shll
fmul
xchg
fmuls
imul
cmp
jmp
negl
lods
shrl
and
xor
inc
sti
pop
aam
repz
lcall
stc
and
lods
xor
jnp
cmp
push
aaa
test
xor
push
clc
mov
push
dec
fstpl
es
mov
loop
cmp
pop
es
mov
push
daa
outsl
loopne
clc
sbb
popf
lahf
jo
int
ret
dec
aam
pop
cld
jmp
aaa
inc
dec
leave
xchg
pop
mov
sub
pushf
negl
andb
call
or
lock
data16
push
gs
and
cmpsl
lock
sahf
pop
jmp
jbe
call
icebp
xchg
arpl
xchg
fnstsw
leave
cmp
xor
jg
cmp
xchg
adc
dec
cmp
mov
outsb
adc
inc
ret
cs
ror
add
ljmp
shrb
imul
repz
dec
cmpsl
test
add
incl
mov
push
jns
sti
lcall
leave
dec
or
test
js
sbb
push
adc
dec
xchg
shrb
jg
cmp
push
sbb
adc
xchg
mov
adc
add
xor
ljmp
inc
repz
lock
xor
mov
xor
in
lret
fildll
insb
push
mov
arpl
ljmp
out
lods
es
data16
push
repnz
dec
cmpsl
add
ss
push
scas
xchg
xor
loopne
mov
xor
imul
jge
subl
out
mov
in
dec
out
dec
xchg
sbb
mov
loope
call
out
pop
mov
movsb
fistpll
jmp
push
bnd
sbb
dec
add
and
cli
imul
jp
adc
movsb
mov
push
arpl
sbb
pop
es
pop
stc
cltd
pop
adc
fsub
insl
fstpt
test
push
pop
add
xor
dec
inc
jnp
ljmp
jno
fstl
ret
pop
roll
and
aad
jl
xchg
adc
or
decl
pop
push
add
push
ret
lahf
sbb
enter
mov
sub
ret
mov
lret
sbb
bound
cli
mov
mov
vshufps
mov
cld
stos
cltd
inc
mov
movsl
push
imul
jne
testb
fcomip
jg
mov
jle
push
push
xor
push
ja
mov
call
mov
push
fiaddl
ror
inc
mulb
dec
and
insb
push
popa
jns
dec
cltd
mov
xchg
pop
fcomip
out
clc
mov
jns
cmp
in
xchg
es
lods
mov
fxch
adc
ljmp
int3
cwtl
pop
mov
lods
divb
dec
adc
cmp
icebp
mov
pushl
dec
aas
xchg
dec
fcompl
jmp
xchg
xchg
notl
pop
in
and
out
cmp
ds
fildl
cmp
pop
nop
cli
push
jmp
outsl
adc
pusha
daa
daa
dec
dec
lock
lcall
pop
mov
fcomi
mov
and
jp
xchg
movsb
je
jno
lahf
dec
cmp
loop
sbb
xchg
jg
inc
mov
inc
xchg
jnp
jmp
mov
jae
lret
jg
mov
mov
mov
pop
fnstsw
jmp
popf
push
push
nop
repz
ljmp
outsb
loopne
gs
jmp
loop
sahf
fidivs
add
cmp
pop
fnstcw
shlb
int3
jmp
sub
pushf
dec
ret
arpl
dec
decl
jge
dec
push
ss
js
xor
xchg
cwtl
mov
ss
jg
cmp
add
xor
push
ds
jmp
or
jb
xor
adc
decl
mov
pushl
scas
ffree
or
lock
push
jne
jae
aam
xchg
fsubl
fistpl
jmp
sbb
scas
jl
xor
popf
sbb
adcl
push
adc
lret
xchg
inc
fdivp
jo
cld
inc
lret
pop
cmc
aad
aas
clc
sahf
pop
mov
lret
out
movsb
movb
iret
sub
fmuls
rcrl
inc
popa
push
cmpsl
std
jno
imul
iret
cmc
add
or
adc
pushl
test
inc
sbb
outsl
enter
test
inc
and
push
ds
cmpb
inc
or
mov
out
imul
cmp
jg
fs
sarb
iret
les
push
scas
jecxz
into
cmp
mov
out
sbb
sbb
gs
movl
mov
push
sarb
mov
fdivrs
dec
cs
lock
jl
rorl
xchg
aaa
adc
inc
jge
or
push
popf
mov
mov
sbb
xlat
mov
xchg
xchg
sub
in
fsubr
loope
cmp
call
jge
dec
mov
jno
lret
pusha
mov
xchg
jmp
mov
cld
cwtl
sub
sar
push
mov
push
mov
gs
mov
pushf
jg
testb
cmp
jno
dec
sub
cmp
and
movsb
push
rcll
xchg
ret
loope
mov
adc
pushf
xor
repz
xlat
mov
mov
in
mov
add
inc
aaa
sub
ja
lret
jle
test
pop
sbb
sbb
mov
fisubl
divl
cmp
xchg
xor
pop
cmp
pop
lahf
inc
imul
push
jbe
incl
outsb
jecxz
insb
sbb
lret
std
fmuls
les
mov
das
inc
fisubl
push
insb
ljmp
push
into
cmpsb
jecxz
sbb
daa
inc
in
or
mov
bound
out
outsl
clc
mov
mov
jp
dec
push
xchg
mov
jbe
insb
in
cmc
addr16
ljmp
movsb
fcoms
jp
sbbb
les
adc
repz
sti
and
xlat
mov
in
sub
ja
leave
shll
or
jnp
xchg
in
fs
aam
xchg
in
mov
decl
icebp
lock
test
pop
dec
push
mov
repz
cmp
mov
jmp
mov
movsl
sahf
sbb
sti
or
ret
and
mulb
and
adc
jmp
aad
push
ss
bound
push
testl
xchg
pop
cmp
mov
imul
or
int
push
and
fnstenv
mov
jl
pop
loopne
jg
mov
and
test
inc
cwtl
xchg
in
incl
mov
rol
pushf
dec
inc
add
mov
cli
arpl
mov
mov
pushl
xchg
xchg
sub
mov
call
cwtl
inc
xchg
sbb
sbbl
leave
cmp
push
outsl
push
xor
mov
jb
jns
pop
inc
stc
ljmp
sar
test
jmp
mov
dec
sbb
pop
dec
mov
mov
add
mov
shrl
adc
pop
jp
adc
adc
adc
lret
decl
dec
jae
test
pop
int
jbe
bsr
jp
add
dec
pushl
push
xchg
inc
xchg
fs
dec
or
movsl
stos
pusha
or
lds
call
in
mov
dec
add
movsl
stc
jp
lock
mov
es
and
fiadds
xor
leave
mov
jo
mov
out
xchg
mov
rcll
test
xor
jmp
adc
std
push
adc
aaa
popf
aas
sbb
loop
mov
sbb
adc
lcall
mov
xchg
cmp
lret
jle
mov
call
cmp
ret
test
cwtl
or
lcall
jmp
push
daa
dec
push
rorb
add
push
adc
mov
mov
mov
lahf
aaa
lods
mov
mov
das
jbe
std
mov
push
enter
fs
aas
incl
outsl
lret
add
adc
std
std
adc
dec
sbb
fsubl
es
cmpsl
repnz
lods
std
sbb
in
add
xor
int3
xor
shrb
std
push
pop
icebp
ljmp
test
dec
push
repnz
aad
pop
or
lcall
mov
out
test
addr16
xlat
fisttps
movsl
push
jne
test
pop
push
outsl
imul
jmp
lahf
mov
lods
add
jbe
or
js
gs
pusha
xchg
mov
insl
add
mov
jecxz
jo
mov
out
adc
inc
xchg
dec
push
adc
mov
jmp
jg
cmp
pop
add
inc
sbb
sub
lret
jae
mov
xchg
cmp
outsb
add
push
call
push
xlat
add
subb
dec
xchg
lcall
out
loop
dec
cli
mov
pop
sub
in
and
jns
xlat
add
mov
mov
sbb
std
push
cld
mov
mov
xor
add
add
jmp
insl
mov
or
jmp
inc
mov
iret
pop
push
xor
in
insl
fsubrp
rcl
jp
xadd
incl
incl
xchg
sahf
out
or
lods
mov
jmp
pushf
aas
xchg
mov
pop
push
mov
decl
gs
jbe
lret
gs
xor
hlt
movsb
out
pushf
lret
mov
xor
pop
icebp
jmp
stos
mov
incb
mov
mov
cmp
pcmpgtw
mov
in
jg
rcl
iret
add
jno
je
loop
mov
rcrl
jno
rcll
icebp
call
mov
mov
mov
mov
jnp
nop
sbb
jns
das
cld
imul
push
enter
out
out
xchg
push
clc
or
jle
adc
xchg
cmp
jmp
aam
mov
pop
lods
mov
aam
pusha
imul
push
sub
mov
and
sbb
ljmp
ds
pop
push
iret
fstpl
leave
pmaxub
popa
sbb
ret
sub
sbb
mov
dec
decl
fdivr
mov
popa
pop
jmp
dec
push
mov
in
pop
add
or
lret
fsubl
add
call
adc
lret
push
nop
mov
rolb
mov
and
enter
cmpsb
pop
loop
ficompl
filds
mov
decl
mov
addr16
and
jbe
inc
sti
sbb
xchg
pusha
sbb
pop
outsb
subb
pop
mov
dec
js
pusha
pusha
nop
rorb
sbb
stos
aad
scas
mov
out
pop
std
in
jmp
out
loopne
imul
insb
xchg
imul
test
pop
or
call
dec
jge
jne
xorl
ljmp
stos
ds
mov
mov
std
call
jecxz
push
pop
es
notl
mov
add
lods
imull
stos
movsb
add
jmp
dec
mov
stc
add
call
fwait
inc
add
in
adc
movaps
add
mov
call
repnz
cmc
dec
faddp
push
aaa
sbb
ret
and
icebp
mov
adc
pushl
mov
into
mov
mov
add
scas
inc
test
xlat
sbb
mov
dec
and
inc
mov
mov
scas
fsts
inc
jns
sbb
mov
mov
hlt
incl
push
mov
jge
inc
pop
nop
xchg
xlat
push
ror
mov
in
and
cli
arpl
pop
loopne
or
jg
mov
push
pop
mov
incl
les
incb
arpl
mov
add
push
popf
data16
cltd
cmp
mov
cmp
in
cmp
fistps
add
sbb
pop
xchg
jecxz
lahf
sub
hlt
fisubrs
inc
idiv
decl
cmpsl
xor
pop
test
call
pop
repz
ret
jns
inc
decl
dec
ljmp
xchg
sub
cmp
push
das
dec
push
loopne
rorl
cmp
pop
mov
push
fisttpl
xchg
mov
clc
stos
mov
adc
mov
imul
push
inc
push
inc
fwait
jne
add
lret
lcall
pop
mov
lods
or
pop
loopnew
xchg
gs
mov
sbb
mov
jae
repnz
sbb
testb
xlat
jle
clc
pop
dec
mov
loope
inc
loop
xchg
fcmovnb
ds
or
cmpsb
in
cmp
ljmp
fcomp
add
es
add
pop
loope
push
sahf
jl
push
into
jo
fwait
ljmp
test
enter
pusha
pop
sub
iret
shrb
psrlw
or
stos
xlat
stos
inc
ds
add
mov
sar
loopne
cs
jb
mov
pusha
pop
jg
sarl
or
jle
add
adc
sbb
lret
into
inc
test
jmp
xchg
cmc
call
enter
test
shll
mov
jae
lcall
mov
mov
cmc
and
mov
cld
incl
pop
nop
lcall
fadds
mov
mov
loop,pn
jnp
push
mov
jns
xchg
shll
popf
lahf
and
mov
or
inc
gs
pop
add
jle
stc
aaa
mov
and
jmp
out
jmp
adcb
cmp
adc
jmp
xchg
dec
mov
dec
pop
mov
inc
dec
outsl
dec
add
pop
mov
outsl
mov
mov
ret
in
lods
xchg
mov
mov
jbe
sti
hlt
loop
push
arpl
mov
lcall
sbb
pop
enter
jnp
movsb
rorl
cmpl
adc
fildll
inc
faddl
inc
pop
sub
push
sub
sti
jae
scas
sbb
xchg
pop
cmp
fidivl
jno
cmp
std
jmp
leave
sub
inc
mov
repz
loop
dec
jnp
pop
cmp
push
aaa
sbb
mov
test
les
add
jnp
xor
outsl
jo
add
decl
ret
outsb
jp
xchg
mov
popa
movsl
sbb
add
xchg
xchg
nop
push
jge
ljmp
cmp
jp
in
inc
test
or
arpl
mov
out
gs
notl
fcomip
in
mov
push
push
inc
xchg
xor
push
mov
sub
mov
scas
cmc
jmp
and
sub
jmp
aam
ficoml
mov
and
sbb
push
jnp
fwait
addr16
fsubrs
test
pop
push
fmul
fildll
or
jne
dec
pop
jmp
loopne
and
pop
push
jnp
aas
and
repnz
andb
hlt
push
addr16
testl
cmp
adc
cmp
js
in
lds
pushl
adc
in
andb
dec
sbb
lcall
jg
out
js
jbe
and
xlat
or
shlb
jno
subl
call
mov
shl
cmp
sub
mov
andb
or
ds
or
inc
lcall
adc
lds
dec
pop
popa
mov
ret
push
mov
sbb
push
aas
or
fwait
and
loope
sbb
mov
int3
rorl
add
mov
jmp
pop
stos
fistpl
addl
mov
mov
lods
jnp
push
adcl
decl
cmp
and
pop
xchg
sbb
or
movsl
outsb
sub
add
add
aas
loop
fisttps
push
sti
mov
cmp
and
das
jne
pop
addr16
out
cli
jmp
sbb
mov
fcoml
sub
jb
inc
and
or
cwtl
mov
es
stos
in
test
aas
jb
sbb
repnz
lahf
out
lcall
ds
dec
inc
rcl
xchg
cmc
aaa
lods
repz
call
inc
cmp
mov
jmp
jmp
shlb
jbe
push
insl
push
sahf
jle
sub
sahf
in
fcmovbe
insb
idivb
in
repz
pushl
shrl
stos
sbb
sbb
stos
cmp
adc
rcr
fldl
jmp
and
das
xchg
jecxz
push
pop
int3
es
xor
lret
push
addl
das
clc
cmp
or
imul
cmp
sub
xchg
sbb
and
xchg
inc
lods
adc
jmp
gs
outsl
fnstenv
cmp
leave
sub
add
xchg
call
mov
call
loop
mov
mov
xlat
mov
lea
or
push
jmp
inc
mov
adc
inc
test
fcmovnbe
test
es
xchg
xchg
push
inc
sarl
push
loop
jg
andb
pusha
in
and
lret
std
sahf
shll
jg
xchg
lcall
add
mov
xor
enter
les
fsubrs
ret
mov
pushf
jmp
push
jge
cmp
mov
cmpsb
pop
adc
fistl
clc
mov
ficompl
mov
lock
or
pusha
je
sar
pushl
xlat
test
mov
mov
test
sbb
xchg
push
cmp
push
scas
rcl
int3
insl
cld
and
pushl
std
filds
mov
test
leave
out
int3
repnz
shl
rcll
cltd
mov
mov
setbe
push
cwtl
xchg
inc
sbb
push
fwait
add
dec
xor
jmp
mov
ss
inc
xchg
int
mov
inc
scas
lea
sub
dec
or
insb
insl
jg
inc
adc
cmp
jno
sbb
lret
jecxz
or
jmp
jae
dec
rcrb
gs
lods
sar
daa
cmp
mov
stos
int3
lret
testb
and
call
ja
stc
xor
hlt
push
add
pushf
sub
fsubrl
pop
inc
xor
mov
and
cmp
mov
imul
call
test
in
and
push
lods
push
sub
insl
sub
fxch
add
xchg
xlat
iret
sub
sub
mov
decl
ljmp
push
ljmp
and
hlt
add
sar
call
jb
sti
cmpsb
es
xchg
lret
out
cmp
xchg
dec
js
inc
sbb
or
or
add
lcall
call
jo
sub
fsubrs
or
and
xor
jmp
into
repz
add
mov
mov
insl
pop
mov
xor
pushf
std
cmp
push
std
call
push
adc
xchg
test
push
movsb
xchg
pop
push
in
cmp
pop
into
inc
movsb
inc
cmp
lods
pop
in
dec
arpl
and
mov
cmp
loop
test
cmpsb
mov
decl
je
dec
jns
sub
call
push
mov
out
call
loopne
mov
cmpb
jbe
mov
xchg
icebp
stos
mov
int
cmpb
mov
hlt
lcall
mov
shl
ljmp
decl
dec
int3
xor
adc
gs
dec
lods
cmc
adc
cmp
pop
sar
dec
ljmp
aaa
xchg
inc
and
out
xchg
or
mov
push
adc
in
push
pop
mov
jbe
push
sub
add
and
mov
xchg
clc
push
out
and
add
dec
inc
cltd
sub
in
ljmp
scas
mov
sub
nop
movl
and
incl
into
addl
bnd
jb
dec
or
loopne
aas
and
imul
mov
jecxz
inc
xchg
subl
or
jmp
ret
je
addr16
insb
cmp
mov
fisubs
shr
pop
dec
loope
movsb
shll
shl
adc
pushl
mov
push
lret
repnz
mov
cmpsl
insb
dec
out
add
out
sbb
jmp
stos
mov
lods
dec
std
inc
insl
xchg
arpl
lods
shll
repnz
mov
call
popf
jecxz
and
ljmp
push
push
jb
inc
jb
movsb
std
or
push
lcall
repz
xor
cmpsl
mov
add
dec
fstpl
enter
mov
test
clc
daa
movsb
pop
popa
insb
movsb
sbb
decl
repz
fistpll
mov
jmp
jg
mov
jo
jp
jb
mov
pop
call
xchg
dec
mov
setp
jne
xlat
repz
int
cmp
lds
xchg
mov
and
mov
add
push
ficoml
hlt
daa
int
inc
add
out
jnp
xor
pushf
mov
inc
jne
sub
mov
adc
or
jno
js
imul
sbb
pop
mov
decl
xchg
cltd
popa
mov
sub
loope
or
mov
loop
pop
sbb
adc
ret
aaa
jl
inc
mov
ljmp
or
jnp
lods
mov
pop
pop
dec
jle
inc
push
xor
jp
test
movsl
aas
fwait
adc
add
aaa
clc
xchg
call
mov
js
xor
add
xor
rorl
aad
lahf
jbe
enter
aas
jp
imul
cltd
lds
pushl
ficoms
xchg
sti
shrl
mov
daa
sbb
pop
mov
shrb
and
ljmp
ds
aam
call
in
cld
aad
mov
lahf
js
jnp
sub
frstor
outsb
jnp
sub
loop
inc
scas
out
push
jecxz
mov
stc
aam
pop
xlat
sahf
or
push
sub
lret
decl
push
or
pop
repnz
loopne
clc
and
ffree
fiaddl
jmp
lcall
incl
and
jo
stc
imulb
pop
incl
mov
inc
xchg
sti
jne
lods
cwtl
lods
rorb
orb
fisttpl
cmc
mov
icebp
mov
pushf
push
sub
aas
jl
jnp
addr16
and
cli
push
add
and
loope
sub
xchg
andl
call
push
sub
call
sub
cli
loope
or
jg
add
and
ja
or
loope
idivl
xchg
mov
lcall
in
stos
mov
mov
inc
shrl
ret
add
scas
test
bound
sbb
stc
fdivr
mov
cmpsb
test
xchg
arpl
dec
test
pusha
call
sti
xchg
pusha
xchg
ss
mov
inc
xchg
pop
cmp
mov
dec
cmp
clc
inc
arpl
addr16
incl
lock
arpl
mov
push
and
cmpsb
xchg
addr16
xchg
mov
mov
decl
jp
pop
jl
in
jge
ret
dec
je
lock
push
xchg
int3
in
push
jg
call
push
or
jl
mov
xor
mov
shll
decl
std
dec
jno
jmp
aas
mov
lock
xor
sbb
xchg
mov
call
cld
int3
into
sbb
les
insl
loopne
dec
push
sub
inc
xlat
negl
out
test
idiv
out
cmpsb
lea
or
push
in
push
repz
ljmp
add
mov
stos
or
sub
sub
xchg
inc
or
lret
test
ljmp
lret
bound
scas
inc
movb
mov
mov
mov
call
xchg
xchg
sti
xchg
test
sbb
jmp
loop
cmc
add
cwtl
fcompl
in
shrb
insb
cltd
cs
call
clc
sub
jo
xchg
daa
dec
jp
fs
adc
icebp
sbb
xchg
and
mov
insb
call
sub
fldl
jmp
mov
jbe
cmp
adc
add
stc
call
ja
mov
andl
pushl
push
cmpsl
xorb
fwait
std
sbb
dec
iret
std
jmp
push
das
sub
jae
pop
nop
inc
sbb
cmpb
clc
mov
fimuls
mov
mov
roll
lret
or
nop
je
jbe
jg
inc
mov
loopne
aad
icebp
negb
nop
std
cwtl
ja
jb
imul
pushl
xorb
icebp
mov
jno
cmp
and
jae
sar
mov
jmp
out
outsl
inc
shl
inc
cmpb
std
mov
xlat
test
sbb
ljmp
pop
repnz
add
jmp
cld
shll
bound
sbb
test
push
decl
fbld
arpl
lock
addr16
nop
cs
inc
cmp
outsl
fnstsw
pop
or
push
inc
ja
and
or
adc
test
jnp
incl
cltd
loope
add
shlb
push
mov
fdivs
xlat
push
inc
loope
call
mov
sub
dec
fs
mov
jbe
cmc
mov
in
pop
push
cld
decl
cld
inc
sbb
inc
xchg
mov
jmp
dec
out
imul
mov
jg
cwtl
and
push
pop
adc
lock
mov
adc
mov
mov
dec
ficomps
std
faddp
enter
adc
adc
or
ret
call
scas
incl
and
adc
cwtl
mov
lret
lret
pop
ficoml
aam
inc
push
sar
mov
pop
fldl
bound
xlat
dec
cmpsb
cld
add
cwtl
jb
dec
lea
xchg
xchg
cwtl
inc
dec
sub
jbe
push
rorl
ja
mov
addr16
pop
repz
popa
in
push
xchg
xchg
cs
cltd
dec
inc
ficoms
push
insl
sub
jne
mov
pop
and
popf
idivl
jns
mov
mov
jae
jg
pop
fcomps
cmp
mov
pop
in
clc
xor
test
or
outsb
mov
pop
addr16
cmpsl
mov
sbb
in
out
lea
js
aas
jne
in
stos
lcall
sbb
movsl
and
xchg
mov
or
xor
jmp
js
shlb
add
pop
mov
push
mov
aas
jp
lcall
add
jbe
test
es
push
and
jnp
bound
add
mov
gs
imul
lahf
das
or
sub
xchg
loopne
jmp
ljmp
das
push
ja
mov
mov
insb
lret
mov
lods
sbb
ja
lcall
cmp
enter
aam
inc
pop
sbb
sub
pop
loop
cmp
push
mov
in
aad
mov
add
lcall
std
test
mov
sub
cmc
sbb
push
enter
jns
ficoml
push
push
imul
lcall
icebp
xor
sub
sbb
and
lock
and
or
mov
cmp
fcmovnu
xchg
pop
mov
sarb
jg
enter
std
mov
mov
and
lods
idivl
addr16
fisubrs
push
adc
or
inc
mov
push
movsb
cmpsb
testl
adc
arpl
and
push
daa
cmp
and
jmp
add
xchg
faddl
jp
jb
in
push
mov
psrlq
clc
or
push
js
xchg
jno
ret
rcr
and
mov
xor
incl
xor
jns
mov
scas
dec
xchg
out
loope
pop
sbb
pop
aaa
push
iret
adc
mov
xchg
pop
sahf
jp
mov
mov
dec
mov
outsl
push
adc
add
aad
or
or
lcall
int
mov
lret
pop
imul
loope
mov
int3
shrd
sub
mov
sbb
int3
loop
roll
xorw
ljmp
test
daa
popa
inc
mov
and
add
adc
and
mov
jb
mov
call
lods
mov
sub
xchg
hlt
xchg
lret
mov
decl
mov
std
popa
mov
jne
sub
leave
sbb
or
push
jle
cmp
push
sub
pop
cmp
pop
ja
imull
cltd
inc
dec
stos
push
or
mov
push
dec
add
mov
mov
add
daa
xchg
fstpl
je
sti
push
daa
xchg
inc
push
aam
icebp
lahf
xchg
scas
xor
sub
aas
adc
test
fwait
dec
call
call
lahf
out
gs
lods
jecxz
lods
push
jg
mov
mov
mov
das
nop
jl
lcall
dec
daa
add
call
cmp
out
decl
pop
cmp
jecxz
stc
sahf
xchg
ror
in
pop
push
ljmp
xchg
mov
cmp
pop
xchg
mov
pusha
and
inc
cmpsb
cs
test
icebp
insl
mov
lcall
scas
jle
pop
adc
or
xlat
adc
mov
sub
jp
mov
hlt
into
and
into
xor
push
xchg
sti
mov
add
fdivs
pop
out
inc
rolb
popa
out
insl
jmp
push
adc
bound
push
sbb
xchg
das
cld
mov
inc
iret
aad
lods
or
or
mov
add
movsb
xchg
mov
aad
mov
call
pop
clc
push
test
jnp
push
mov
lret
mov
lcall
sbb
push
test
mov
pop
data16
cmp
dec
into
mov
xlat
or
ljmp
out
cmp
fisttps
cmp
out
and
ret
xchg
test
xchg
sarb
std
in
mov
psrld
inc
aaa
push
dec
mov
and
enter
sbb
test
adc
ljmp
mov
out
jmp
and
stc
push
test
std
cld
push
sub
pushl
scas
jmp
sti
xor
inc
jp
sub
xchg
fidivl
mov
xor
dec
movsb
and
hlt
sar
xchg
xchg
lock
and
popa
mov
das
clc
jbe
fs
cli
xor
adc
fcomi
shlb
test
scas
clc
cmp
dec
mov
imul
mov
lods
xlat
ljmp
sub
mov
and
push
shl
in
jecxz
in
jg
adc
pusha
popa
cmc
dec
add
add
inc
dec
mov
add
jg
push
nop
add
add
or
add
test
push
inc
sbb
xor
or
pop
mov
pop
add
ljmp
in
push
stos
addb
inc
lret
scas
fnsave
bound
imul
fcmovnbe
aaa
and
jne
jo
imul
mov
jp
ds
add
mov
add
mov
loope
inc
adc
inc
add
imul
insb
push
xor
inc
sub
mov
out
adc
inc
imul
dec
jo
daa
pop
cmp
sbb
push
aas
add
push
pop
push
outsl
outsl
adc
pop
shrl
sub
popa
jo
push
sti
adc
push
sbb
push
sub
idiv
push
or
dec
dec
jne
js
into
xor
scas
jecxz
add
ret
aaa
push
popa
fildl
adc
cmp
xchg
mov
jns
push
push
inc
push
mov
sub
inc
cwtl
sbb
ljmp
add
mov
insl
insl
and
dec
xchg
cmpsl
and
into
fimull
push
or
call
pop
xor
fwait
inc
jl
loopne
sub
and
xchg
outsb
imul
dec
lock
sub
shll
or
mov
paddusb
pop
push
outsb
flds
sub
cmp
dec
inc
adc
mov
cli
arpl
mov
mov
adc
inc
cmp
sbb
fisubs
mov
sbbb
push
pop
lock
mov
ds
insb
jne
addl
and
xor
push
inc
sbb
dec
inc
jnp
jo
inc
push
fildl
in
iret
inc
push
pop
fadds
shl
add
jnp
push
jne
addr16
inc
adc
subl
jb
cld
push
inc
or
outsb
xor
inc
jae
adc
cmp
insl
add
cmp
hlt
fs
inc
jecxz
or
mov
std
dec
cmp
ret
push
or
stos
pop
adc
popa
pop
subb
and
inc
or
jo
packuswb
xchg
imul
mov
or
inc
dec
sbb
pusha
pop
insl
adc
ret
dec
dec
outsl
leave
push
std
push
arpl
mov
inc
stos
imul
xchg
test
xchg
xor
orl
popa
movsl
or
inc
adc
or
or
ds
pop
and
popw
push
mov
mov
push
mov
inc
xchg
popa
orl
and
das
ljmp
jae
pushf
inc
or
mov
stos
pop
dec
inc
dec
or
inc
jb
mov
jae
rorb
rsm
or
test
fs
arpl
lods
xor
push
push
cmpsl
push
je
ja
mov
push
inc
jg
pop
mov
ja
sub
cmp
into
mov
inc
popa
es
jp
lods
inc
adc
push
arpl
xor
push
jg
sbb
adcb
add
cmp
orb
adc
lds
ret
pop
test
mov
inc
adc
add
push
fs
xor
jmp
bound
or
pop
pop
lods
lods
jmp
aad
jns
adc
inc
inc
push
and
mov
inc
mov
push
inc
sbb
sub
sub
fiadds
sbb
insl
adc
or
push
es
mov
xchg
or
push
adc
add
inc
add
jo
lret
stos
loope
adc
loopne
cmpsl
adc
add
cmp
add
out
ret
pop
aaa
cmp
inc
inc
test
xlat
test
and
dec
and
add
stc
pushf
push
jne
inc
fadds
adc
stos
inc
or
pusha
andb
xchg
scas
mov
test
sbb
cmp
arpl
xchg
jnp
addr16
pusha
arpl
jg
mov
xor
sti
inc
adc
or
inc
test
inc
scas
cmp
addps
outsb
push
outsl
add
adc
fadds
sub
or
add
insl
sbb
sub
ficoms
xor
sarb
and
jns
jne
out
pop
push
iret
stos
add
xor
nop
or
arpl
sti
mov
mov
pop
adc
and
jg
mov
xor
or
mov
sbb
inc
fisubl
mov
jge
or
fildl
sti
pop
lock
outsb
adc
lods
and
mov
xor
cmp
in
sbb
jmp
sbb
cli
pop
push
je
lock
sahf
and
push
outsl
xor
jb
mov
fstpt
mov
inc
in
lods
jo
xor
and
arpl
insl
sbb
imul
or
mov
fistpl
mov
inc
insb
stos
ja
sbb
push
inc
insb
jle
cmovnp
pmullw
stos
fs
popa
mov
movsb
jae
cmp
adc
nop
fstl
inc
iret
mov
push
or
js
inc
mov
and
sbb
adc
mov
inc
ss
push
les
arpl
push
xor
adcl
dec
push
push
pop
xor
push
not
and
adc
mov
outsb
inc
push
push
adc
pop
or
mov
jnp
cmp
jg
and
je
insl
dec
outsb
dec
inc
js
loopne
scas
jnp
mov
jnp
sar
pop
add
add
mov
imul
imul
or
cmp
lcall
inc
push
addb
pop
adc
loope
repz
out
mov
shlb
mov
dec
and
jl
outsl
int3
ds
dec
movsb
bound
add
sbb
add
inc
jb
test
add
inc
jae
inc
push
imul
shll
sbb
inc
imul
mov
inc
inc
jo
sbb
push
ljmp
dec
rclb
dec
add
icebp
push
loop
je
mov
add
mov
mov
pop
push
loopne
mov
scas
rcrl
and
push
js
mov
push
adc
mov
aad
cmp
popa
fstpl
or
outsl
or
or
add
cmovno
fldenv
sub
mov
sub
jmp
xor
sbb
cwtl
scas
push
inc
jb
lods
fsubl
xor
cmp
ss
jl
shlb
mov
js
push
xlat
push
mov
pusha
dec
mov
jnp
dec
mov
popa
add
rcll
notb
fs
ret
pusha
mov
inc
cwtl
dec
push
cmp
push
push
adc
xor
int3
outsb
push
push
xor
gs
cltd
lret
inc
outsl
inc
dec
insb
xor
cwtl
mov
in
and
inc
push
cltd
lret
lods
pop
and
dec
insl
jecxz
test
arpl
jo
popa
push
lret
inc
lds
ret
inc
and
and
xchg
mov
rcll
rolb
inc
fcomi
xor
call
jno
inc
mov
outsb
pusha
adc
out
mov
jno
or
pusha
push
mov
icebp
add
das
sbb
or
jo
cmp
mov
andb
ja
int3
add
pop
push
sbb
inc
iret
xlat
and
jns
add
int
nop
inc
insl
inc
outsb
push
fs
cmp
outsl
rol
outsl
and
push
pop
lds
fisttpll
pop
lahf
dec
ljmp
add
push
adc
xchg
and
test
add
vmwrite
sbb
enter
push
addr16
or
flds
js
push
push
inc
out
adc
add
sub
lret
sub
popa
pop
xchg
daa
sbb
push
imul
mov
dec
jae
int3
lock
inc
ror
jne
subl
xchg
outsb
lods
movsl
xchg
add
jmp
jg
mov
sbb
adc
jp
out
push
insb
popf
inc
inc
aaa
lods
aaa
or
fmull
adc
pop
or
or
andb
add
adc
pop
repz
loopne
inc
pop
add
sbb
in
pop
in
cmp
xchg
in
adcb
movsl
stc
dec
sub
jae
loope
xor
sub
pop
xchg
mov
fadds
imul
inc
pop
dec
pop
add
cmpsb
cs
mov
xor
and
jb,pn
dec
jo
sbb
adc
push
rclb
js
dec
out
inc
cs
adc
shlb
jae
sub
add
jb
out
mov
dec
js
push
lahf
adc
insl
ss
es
out
shl
add
dec
incl
pusha
mov
lea
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
xor
inc
add
insb
inc
add
add
