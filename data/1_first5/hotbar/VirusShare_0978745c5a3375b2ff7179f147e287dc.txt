sti
pushl
rorb
jbe
add
jmp
or
ret
push
push
mov
push
push
call
add
mov
pop
ret
push
push
and
xor
mov
push
std
sti
std
out
adc
sub
add
ret
mov
sti
decl
add
rorb
rorb
rolb
add
mov
orl
xchg
dec
in
mov
es
dec
in
test
je
sub
pop
mov
fwait
loopne
jmp
andl
lea
ja
or
or
scas
pop
sar
mov
or
or
sub
int3
xor
andl
div
insl
cmpb
or
inc
or
xchg
add
dec
lahf
imul
mov
push
lods
testl
push
lock
jmp
mov
pop
rol
or
mov
sti
in
lret
jle
or
ss
sbb
inc
add
add
cmp
mov
test
orl
dec
das
test
add
add
jo
sti
notl
cmp
or
mov
ret
and
loope
or
or
les
add
fistpll
push
int3
cmpl
jb
mov
in
sti
sbb
add
push
push
mov
push
cmpl
cld
jge
out
or
mov
mov
imul
in
inc
push
jae
sub
cmp
ja
xor
inc
sub
add
mov
add
push
jl
outsl
fisttps
sbb
jmp
decl
or
pop
pusha
ss
sub
lea
lea
xor
mov
cli
cwtl
mov
ss
roll
pop
leave
ret
mov
cld
cmpl
add
or
mov
sub
jmp
xor
fildll
icebp
cmp
jae
mov
xchg
mov
sub
cmp
jae
mov
jo
pop
testl
mov
add
or
add
push
pop
fsubs
pop
jne
cmp
lock
insl
push
push
sub
jo
add
ret
out
mov
dec
cmp
inc
push
xor
xchg
jle
push
lea
push
mov
data16
jg
adc
or
inc
cmp
jl
pop
out
lret
data16
push
call
andl
pop
shr
mov
or
bound
je
mov
enter
xor
dec
imul
inc
rorl
xchg
jmp
sub
lcall
stc
lea
xor
cmp
jne
push
stc
mov
pushl
push
xchg
jg
push
jmp
sti
cmp
sbb
cmp
jle
mov
lea
cmpb
jne
repz
dec
mov
inc
or
cmpb
jne
mov
jmp
push
push
push
outsl
and
pop
aaa
cld
call
mov
dec
data16
pop
test
cmp
into
push
push
push
push
stos
pop
aad
cmp
test
sub
mov
rorl
push
add
movb
loopne
jecxz
xchg
sbb
jmp
jg
ds
xlat
mov
cmp
push
es
out
adc
enter
fnstsw
dec
and
mov
cmp
pop
cmp
icebp
je
cmpsl
and
pusha
mov
cmp
outsb
adc
sub
pushl
loopne
pop
pop
pop
cmpsl
into
xor
add
add
addb
xlat
jae
mov
loopne
call
cmp
sti
outsl
inc
imul
cmp
sub
jnp
mov
xlat
add
push
push
add
push
jl
insb
outsb
repz
fst
shrl
add
mov
inc
rolb
push
jp
xlat
jecxz
movsb
push
mov
daa
in
pop
sub
mov
or
pop
xchg
fldt
push
sbb
add
aaa
pop
or
inc
mov
push
pop
adcb
data16
and
fdivs
dec
cld
idivb
sbb
ret
mov
clc
or
xor
sub
fmull
jge
jge
aad
mov
into
packsswb
jbe
adc
and
jg
scas
in
in
shrl
jge
push
pop
div
mov
cmp
jae
scas
stos
decl
pop
sub
cmp
ja
xor
gs
data16
jle
push
xlat
call
or
loopne
out
inc
xor
sbb
sahf
mov
lahf
fsubp
movsb
ja
jp
cmp
or
pop
call
push
jbe
iret
jnp
call
sbb
aas
cmp
dec
hlt
mov
xor
outsb
mov
dec
in
push
shlb
int3
sub
cmp
push
fs
and
pop
cmp
imul
add
push
add
or
mov
pop
jo
mov
mov
or
push
enter
mov
xchg
js
add
jmp
cld
pop
loopne
adc
neg
sbb
pusha
and
and
mov
push
mov
mov
jge
movb
addr16
add
pushl
push
faddl
test
and
ss
lock
imul
ss
sub
jns
pop
shll
pop
pop
mov
cmp
addr16
mov
sbb
ljmp
add
adc
je
dec
adc
inc
adc
sarb
and
movsl
jmp
xor
ss
jo
inc
sbbl
mov
pop
or
pop
or
in
clc
add
lret
je
pop
sub
jle
fisubs
sub
xchg
jle
push
jbe
mov
cmpsl
pop
leave
test
pop
add
dec
mov
push
push
xor
or
push
pop
testl
pushf
arpl
sub
mov
cmp
push
imul
pushl
inc
mov
enter
adc
icebp
push
andb
adc
jl
mov
cmp
ja
jbe
loop
dec
ret
xor
cmp
xor
lahf
push
or
cmpsl
push
addl
andb
ret
ja
inc
sub
adcl
movsb
das
dec
aas
mov
mov
jne
push
add
cmp
jo
or
jmp
dec
sub
addr16
cmpl
jnp
aaa
adc
add
and
and
repnz
adc
loop
add
xchg
mov
sub
push
jno
hlt
or
aaa
and
arpl
pop
and
add
add
mov
add
fldenv
repnz
or
cmp
jl
pop
mov
mov
lea
and
faddp
xchg
dec
or
or
leave
mov
dec
add
jbe
nop
adcb
or
mov
or
cmp
or
jmp
and
popf
push
add
cmpsb
and
rcll
cmp
jbe
or
icebp
mov
push
xlat
push
sahf
xor
or
or
pop
and
jle
insb
jnp
add
pop
pop
adc
and
or
or
xor
xlat
cmp
push
or
adc
or
fldt
jne
push
lea
cmp
jmp
push
push
push
loopne
inc
add
sti
xor
in
pop
pop
add
push
push
push
or
push
pop
pop
xchg
mov
push
fisttpl
mov
incl
cmp
jl
cmp
jg
sub
jmp
cmp
sbb
pop
jg
jmp
cmp
jl
cmp
jg
aaa
dec
mov
mov
sbb
sarl
push
cmp
or
mov
pop
pop
nop
inc
mov
pop
into
mov
movd
and
dec
mov
or
pop
bound
outsl
addr16
xchg
in
out
or
push
jge
hlt
sarb
call
jle
sbb
push
je
or
loopne
add
sbb
enter
or
or
push
pusha
pop
sub
or
mov
push
push
nop
mov
adcl
xchg
seto
inc
clc
das
lods
and
add
jle
lea
mov
mov
mov
xchg
shr
gs
std
rcrl
sub
adc
idiv
push
mov
call
fwait
jb
pop
insb
nop
mov
sbb
ljmp
pop
aaa
and
xlat
or
jb
push
push
dec
xchg
or
xchg
xchg
and
int
cmp
pop
mov
fnstenv
hlt
pop
adc
pavgb
bts
add
mov
add
mov
add
clc
ds
xor
mov
shl
int3
pop
popl
loope
sub
sub
decb
lock
inc
xor
cmp
pop
std
ret
scas
fdivl
nop
fcoml
push
negl
imul
pop
insb
jnp
mov
and
xor
in
jo
int
cmp
xchg
loope
les
pop
cld
inc
les
fistpl
push
and
cld
iret
icebp
and
xchg
ret
and
or
mov
ret
scas
psrlw
pop
pop
inc
sbb
pop
js
mov
xchg
pop
ret
ret
popa
cmp
dec
sub
mov
fistl
iret
mov
jge
or
out
pop
test
push
xchg
push
and
adc
adc
sarl
dec
pop
inc
xor
jmp
mov
call
push
lcall
enter
insl
adcl
jns
jg
cmp
jbe
cmp
je
daa
cld
call
call
stos
push
ror
stos
mov
adc
inc
test
dec
es
cld
in
adc
fcompl
out
hlt
xor
adc
push
imul
sub
push
das
xchg
out
xchg
or
call
pushf
jg
jmp
cmp
clc
test
jne
jmp
cld
add
mov
add
cmp
pop
push
xor
cs
push
pushf
adc
pop
xlat
lcall
xlat
mov
jne
push
mov
add
inc
imul
hlt
shrb
jle
inc
pop
sub
pushf
fsts
mov
push
push
push
push
push
and
sbb
mov
sub
mov
and
push
popa
js
testl
lea
add
add
sbb
lret
dec
push
fsubl
sbb
add
push
pop
sbb
dec
fwait
adc
jle
cmc
push
out
or
in
scas
and
push
and
ss
jb
adc
push
sub
sbb
loope
mov
pop
dec
movsb
mov
into
adc
mov
jl
or
sar
push
pop
mov
ljmp
sbb
mov
shr
in
add
std
sbb
pop
adc
and
lock
cmp
call
push
ss
jb
sbb
adc
mov
mov
sbb
add
fldpi
sub
push
pop
sbb
test
ds
cmp
divl
lds
mov
inc
mov
cmp
adc
loop
push
and
test
hlt
ss
loope
ficoms
sbb
ljmp
mov
fs
mov
loopne
and
push
fcomp
jge
cmpb
test
popa
mov
pop
adc
decb
mov
xor
adc
jns
push
stos
push
insb
push
cwtl
fists
mov
cmpb
push
faddl
push
pop
or
out
or
repnz
in
rcrb
and
lods
mov
jo
mov
or
repnz
mov
xor
orb
mov
mov
leave
nop
sbb
dec
xor
add
jnp
sbb
add
rcrb
mov
and
jl
lahf
push
in
pop
or
cwtl
add
sbb
fwait
xor
mov
adc
mov
dec
inc
mov
add
jbe
mov
addr16
jbe
pop
cmp
out
sbb
jecxz
sbb
jecxz
add
adc
iret
mov
mov
xlat
inc
or
push
popa
mov
jo
cmp
dec
push
push
push
mov
cwtl
pop
rolb
cmp
inc
inc
shlb
push
pop
imul
faddl
add
push
push
clc
xlat
cmp
ss
push
and
hlt
stos
and
inc
ret
jmp
xchg
loop
dec
xchg
in
xchg
adc
adc
ficoms
sbbb
or
sbb
testb
add
jne
adc
in
movsl
sbb
pmuludq
fs
repz
mov
sbb
fadds
inc
fdivrs
or
inc
in
loopne
mov
pushf
lock
jmp
push
je
mov
and
mov
push
dec
sbb
and
push
push
fcoms
and
push
lods
push
dec
inc
mov
dec
mov
xor
mov
lock
cltd
fldt
push
dec
pushf
cli
mov
repz
sbb
gs
cmp
pop
push
cmp
rcll
inc
mov
add
mov
pop
jns
fdivp
cmp
in
xchg
add
push
loop,pt
dec
mov
in
dec
adc
lea
pop
add
enter
loopne
inc
xchg
mov
cmp
in
nop
std
and
outsb
in
push
loopne
in
test
xchg
idiv
xor
pop
in
xchg
rorb
mov
jg
stos
cmp
je
cltd
nop
mov
sbb
lods
xor
sub
call
subb
pop
adc
sub
int
ljmp
sbb
pushf
adc
xchg
pop
pusha
cwtl
icebp
js
rcr
into
or
lret
inc
xchg
lds
in
jp
stos
mov
inc
pop
push
xor
push
dec
xchg
mov
outsb
dec
outsb
xor
fisttpl
jns
cli
je
inc
leave
les
int
inc
mov
mov
mov
jae
mov
pop
bndstx
jle
lods
cwtl
cwtl
push
push
pop
push
les
cmp
dec
jae
cmp
imul
jo,pt
mov
data16
or
pop
test
jo
or
scas
fstpl
int3
xor
cmp
add
test
repnz
add
aad
sbb
add
xor
jge
pop
inc
enter
repz
dec
sahf
lret
or
or
xchg
cld
les
xor
mov
fnsave
std
sbb
pop
fnstenv
and
adc
andl
cs
inc
sar
sbb
mov
std
dec
or
mov
sahf
insb
cli
fs
mov
jo
imulb
push
push
jmp
pop
sub
call
enter
jge
cwtl
dec
sbb
add
jb
je
cwtl
sti
and
inc
sti
and
jo
and
jb
push
test
jnp
mov
cmp
xchg
nop
pop
repnz
call
bound
call
dec
call
leave
test
das
in
jl
cld
pusha
sti
shrb
and
cld
sbb
shll
pop
pusha
dec
xor
mov
les
adc
jns
daa
leave
rcll
sbb
ss
pop
push
mov
cwtl
bound
mov
and
push
or
add
and
and
ja
adc
es
pop
lods
add
std
cmc
mov
movsb
popa
push
inc
std
push
hlt
in
mov
in
inc
and
lods
sbb
and
repnz
cmc
int3
cld
add
xchg
xchg
out
aaa
cmp
hlt
add
nop
and
cmp
add
mov
and
cmp
pop
cld
in
xchg
cld
push
leave
jbe
and
hlt
xchg
cld
xchg
cld
es
and
cmp
add
cmpsl
push
add
lcall
pop
jb
adc
pop
xchg
push
out
push
add
orb
push
aas
push
jge
in
jne
mov
ficoml
dec
jbe
mov
lahf
sahf
ss
or
test
inc
push
les
in
adc
mov
inc
test
cmp
pop
jo
cs
in
add
loopne
int3
push
ss
outsl
cmc
adc
leave
jb
loopne
fstpt
lret
cmp
stc
sarb
lret
push
or
inc
fisubl
stos
lcall
xchg
aaa
push
sub
clc
mov
mov
adc
dec
dec
enter
mov
popa
ljmp
cs
fstpt
leave
mov
clc
push
das
inc
cs
fadds
test
adc
sub
pop
pop
push
sbb
lea
movsb
push
and
subl
or
xor
xor
push
mov
pop
rcr
fwait
gs
subb
clc
sub
adc
cld
pop
test
jne
push
rclb
js
rcl
insl
rcrl
clc
lret
fcompl
xchg
or
pop
imul
mov
sub
and
rol
movsb
sub
push
rolb
mov
and
xchg
movsl
andl
gs
sbb
push
mov
mov
jge
pop
je
inc
jg
xor
sbb
insl
pop
xchg
push
push
push
sbb
adc
pop
clc
push
push
loop
shlb
xorb
test
fistpll
adc
mov
jmp
rorb
jmp
jne
test
jne
push
jl
lock
iret
in
push
pop
in
xchg
or
inc
or
sbb
jne
out
mov
mov
or
push
and
inc
dec
test
push
cmpsl
push
es
mov
arpl
stos
fildll
ja
call
fistl
push
push
and
adc
push
rol
rcl
jmp
movb
xchg
loop
sbb
mov
xchg
ja,pt
xchg
jmp
dec
fisttpl
jne
adc
jnp
sarl
xor
pop
and
mov
mov
aam
adc
cmpl
xor
mov
and
add
adc
arpl
and
or
cmovg
sbb
push
or
cmpsl
push
mov
outsl
sbb
clc
mov
popa
and
fistl
test
cmp
pop
cld
andb
fists
inc
pushl
call
lcall
ror
das
test
cld
pushl
lods
dec
xor
imul
jne
push
mov
pushf
les
sahf
in
cmpl
add
negb
iret
inc
sub
adc
cmp
or
mov
and
add
mov
mulb
xor
add
xor
xchg
les
nop
sti
or
fisttpll
mov
les
pop
iret
inc
jmp
jl
nop
outsl
mov
test
push
in
and
sti
or
loopne
pop
jp
jns
in
test
push
aaa
add
mov
pop
pop
jbe
call
mov
sub
iret
dec
divl
pop
andl
xor
push
clc
add
in
sbb
inc
hlt
push
inc
xchg
sarl
fs
int
pop
jmp
push
roll
pop
sub
mov
inc
xor
add
shr
lea
push
push
push
lds
or
pusha
mov
adc
mov
jle
and
adc
push
jg
or
add
rolb
jle
mov
js
loopne
inc
sub
adc
sbbl
jle
or
sub
pop
shrl
insl
inc
adc
xchg
out
int
daa
add
ret
push
fstps
sub
in
or
divl
pop
pop
adc
push
mov
cmp
jne
arpl
inc
add
popa
jmp
xor
std
lret
pop
jmp
arpl
cli
xchg
and
push
je
dec
sub
sbb
inc
add
xor
and
flds
mov
in
pop
adc
sub
sub
or
ret
repnz
xor
and
fs
inc
hlt
cltd
nop
jb
push
push
mov
or
mov
mov
or
mov
fsts
xor
dec
mov
push
lods
cmp
lods
shrb
or
or
jmp
enter
cld
sub
push
mov
lods
cmp
ret
repnz
xor
mov
xor
push
inc
sbb
cmp
mov
andl
cmp
out
out
ret
movsl
ret
ret
mov
js
sete
jge
xor
pusha
das
and
add
jl
or
jnp
rcll
and
sarb
fiaddl
push
sub
loopne
pop
gs
or
insb
icebp
cmp
push
inc
inc
cmp
inc
loop
ss
xchg
push
sbb
inc
sahf
inc
jae
xchg
jmp
mov
push
cmp
cmpsl
insb
loopne
or
push
in
leave
lahf
cltd
andl
xchg
adc
add
icebp
test
cmp
mov
jo
sbb
or
push
jno
cmp
jnp
mov
or
daa
mov
out
pushf
push
popa
dec
push
add
test
sbb
or
and
ss
and
or
mov
fisttpll
dec
xor
sub
fmul
out
loopne
xchg
sub
loopne
test
je
push
adc
push
dec
cs
sub
sar
dec
sbb
adc
mov
lcall
out
pop
push
clc
shll
push
shl
add
adc
push
fdivrl
xchg
push
mov
sbb
fmull
push
pusha
cmpsl
fdivs
inc
or
rorb
mov
adc
sbb
adc
xchg
rolb
fadds
ljmp
sbb
cmc
push
in
push
dec
adc
mov
xchg
xor
inc
sub
in
push
xchg
or
mov
push
adc
inc
and
ja
jne
ss
cmp
sbb
or
mov
and
sti
scas
xor
sbb
sbb
xor
das
xor
mov
add
and
add
fmull
pop
clc
pop
lea
dec
aaa
enter
or
add
xchg
lea
je
andw
inc
and
or
repz
test
neg
sbb
and
cmp
sub
shl
xor
shlb
inc
xor
add
cs
cltd
cmp
mov
jnp
je
inc
jmp
lahf
popa
fsubrl
sti
or
ret
xchg
icebp
mov
adcb
hlt
aaa
dec
push
movw
sub
sub
mul
cmp
rolb
rclb
ss
popa
fstpt
jne
push
ret
lcall
xor
popa
fdivrs
cmp
je
dec
test
pop
xor
mov
mov
addr16
aaa
mov
out
inc
lea
cmp
in
push
adc
out
jns
cmp
gs
jmp
ret
mov
out
or
mov
xor
and
push
push
mov
rcrb
insb
and
dec
or
mov
movsb
mov
mov
je
clc
outsl
mov
add
dec
jl
jmp
cmp
ret
jg
gs
mov
lea
inc
or
add
sub
add
inc
or
rolb
call
push
addl
add
xor
cmp
mov
rclb
imul
sbb
mov
lea
mov
push
xchg
and
pop
add
std
pop
sub
in
mov
data16
data16
inc
pop
pop
xchg
inc
inc
add
add
mov
sbb
jmp
and
add
xor
and
adc
and
or
clc
ss
mov
and
mov
or
lea
ret
adc
loopne
sub
mul
or
or
std
or
pushl
inc
cmp
pop
jge
js
sbb
cld
ficompl
inc
pop
jl
add
ret
and
inc
and
in
xor
dec
mov
cld
add
into
pop
adc
add
sbb
pop
dec
pop
sub
jg
jmp
lea
cmp
push
sub
cmp
test
push
xorl
icebp
mov
cs
cmpsb
pop
cmp
call
and
add
icebp
inc
shrl
sbb
add
lcall
pop
insb
or
iret
pop
or
jecxz
pop
hlt
xchg
cmp
mov
pminsw
sbb
push
pop
pop
popf
push
pop
mov
cltd
jl
mov
sarb
jns
iret
jnp
lret
xor
push
jle
push
xchg
dec
inc
inc
pop
or
clc
lds
jmp
subb
mov
mov
jo
pop
push
sub
fistpl
popf
sarl
sub
and
outsl
out
hlt
insb
ss
add
ficomps
mov
xor
inc
jecxz
add
jne
leave
cs
jg
mov
shl
add
je
nop
jecxz
dec
in
adc
xchg
push
dec
fisttpll
mov
test
dec
add
or
push
daa
sub
sbb
jp
out
cmpl
jnp
adc
jb
xor
daa
int
push
icebp
sbb
pop
cld
jmp
lea
sbb
js
sbb
cmp
sbb
cmp
test
push
adc
imul
adc
jmp
call
pop
lcall
push
jns,pn
orl
out
jg
pop
aaa
cmp
je
jno
sub
repnz
rclb
in
shll
xor
jno
sahf
lret
add
in
ljmp
sbb
and
aaa
gs
popa
add
adc
dec
scas
popa
jno
fisttpll
xchg
or
mov
xor
xchg
or
hlt
lods
es
fiaddl
xor
push
sbb
push
sub
inc
sub
inc
ljmp
ljmp
fildl
stos
ret
jmp
push
das
jl
insb
xchg
push
shll
xchg
xor
imul
jb
cwtl
sbb
push
sbb
dec
icebp
imul
inc
roll
ret
loopne
push
push
punpcklwd
orb
jmp
inc
mov
pop
xchg
loope
dec
jne
movl
and
int3
adc
sbb
loopne
sbb
xor
in
push
inc
dec
inc
nop
xchg
jmp
lea
loopne
fsubs
xor
divps
mov
xor
adc
dec
cmp
bound
push
jno
movsl
adc
jp
add
jb
aas
sub
mov
mov
xchg
fstps
push
into
dec
ds
pop
fadds
daa
sti
jl
sub
cmp
adc
lods
pop
mov
sbbb
jnp
jno
xor
pushf
filds
aas
mov
bound
mov
xor
jge
in
lea
push
cmp
inc
xor
xchg
jbe
and
jae
repnz
mov
in
decl
jne
cli
jmp
mov
jo
cmc
in
daa
ffree
jnp,pt
mov
jg
inc
cmp
jb
rorb
das
mov
or
or
jle
or
or
and
xchg
xchg
aaa
sub
adc
jmp
pop
outsl
push
in
mov
pop
lret
aas
add
daa
push
push
mov
imul
mov
dec
aas
pcmpeqw
push
daa
jne
xor
loopne
das
pop
push
test
call
add
push
add
shrl
jae
cmp
daa
clc
aas
lds
push
jb
ret
jne
or
movb
mov
mov
cmp
js,pt
outsl
or
insl
ss
xor
adc
scas
and
and
ja
or
add
ds
addr16
pop
ror
mov
sbb
repnz
dec
adc
push
je
dec
mov
sti
inc
out
xor
popa
xchg
add
pop
add
sbb
xorl
or
adc
cld
pop
lcall
xor
cmp
jne
push
imul
push
fwait
xchg
inc
push
ds
pop
sbb
adc
or
and
and
mov
jne
push
sub
nop
push
xchg
lahf
ds
lret
packuswb
and
jle
clc
mov
test
add
or
mov
roll
adc
jg
mov
or
mov
jg
sbb
out
loop
push
mov
sub
cmp
jg
lock
inc
push
push
and
dec
push
nop
adc
inc
add
sbb
mov
inc
sti
mov
shll
cvtps2pi
not
jae
ds
cwtl
push
sarb
jge
fs
dec
mov
jge
mov
negl
leave
out
xor
inc
daa
sub
faddl
sub
out
push
mov
add
dec
jl
and
pusha
pop
cmp
lea
out
pop
or
loope
add
mov
add
and
or
push
inc
add
or
pop
icebp
jne
aaa
in
adc
mov
add
jmp
sbb
movsb
out
xchg
pushf
sarb
cmpb
pushf
cmpsb
ret
or
ja
push
inc
jecxz
rorl
jecxz
movsb
jge
outsb
lds
jne
fbld
test
sbb
inc
sub
ret
icebp
pusha
and
push
push
ret
enter
gs
mov
sbb
flds
call
inc
ss
iret
xor
lock
jge
push
outsl
pop
or
enter
or
mov
cmc
lods
nop
out
push
test
sbb
fldt
and
fistl
sbb
ret
or
nop
loope
mov
sbb
cmp
std
aad
bound
xchg
pop
je
or
push
gs
out
jmp
push
xor
jne
and
mov
inc
push
aaa
ficompl
push
rcrb
mov
sub
mov
adc
in
lock
dec
push
mov
imul
add
mov
bnd
je
orb
jle
test
stos
pop
push
js
jne
bound
cld
xchg
inc
addr16
rcll
and
loopne
movsl
test
pop
ljmpw
aad
mov
cwtl
rorl
adc
xchg
sbb
fwait
lret
cmpsl
lea
xchg
jecxz
in
add
add
sub
cmp
dec
mov
inc
popa
test
fninit
ret
pop
or
pop
mov
push
jge
dec
or
je
push
jns
in
or
pop
inc
xchg
inc
mov
inc
dec
adc
scas
adc
push
push
add
lcall
ffreep
mov
pop
pop
sbb
sbbb
xchg
cmpsl
mov
sbb
push
or
push
int3
sub
mov
mov
fcoml
outsb
push
sahf
pop
cmp
mov
sarb
fisttps
fidivrs
mov
addb
xchg
lea
jmp
jne
lock
jae
imul
shll
jne
sub
add
in
pop
mov
sub
push
dec
lods
push
adc
push
in
pop
mov
repnz
stc
or
dec
add
adc
jb
xor
popf
mov
sbbb
or
rcr
xchg
and
push
rclb
lock
or
dec
sbb
std
mov
pop
loop
lock
lods
rorl
int3
inc
mov
out
dec
sub
push
push
sti
hlt
lcall
fsub
push
push
and
ds
sbb
mov
push
pop
fcomps
mov
int
cld
in
insl
pop
pop
push
jno
popf
push
insl
jns
jl
push
pop
out
sbb
xchg
mov
and
fiaddl
pop
xor
xchg
cli
mov
fistpl
fdivs
cmpsl
mov
iret
cmp
xor
cld
mov
je
xchg
shr
mov
inc
sbb
jns
dec
leave
or
movsb
in
je
push
mov
jmp
cwtl
pop
test
or
sar
stos
push
enter
xor
push
or
loop
stc
add
mov
and
test
inc
xchg
push
jne
cltd
mov
aad
dec
xor
push
push
pop
movb
jo
cwtl
cmp
out
cld
and
push
and
lock
cmc
cmpsb
adc
jne
ja
add
pop
mov
lock
loope
sar
xor
push
push
add
xor
cmpb
xlat
xlat
push
cmp
fcoms
xor
pop
adc
pusha
sub
jecxz
ffreep
sbb
adc
popf
xchg
xchg
out
test
sbb
cld
or
jbe
pop
mov
jnp
fdivrs
jae
movl
cmp
lret
dec
push
out
cmp
or
mov
sub
mov
adc
in
in
pop
mov
aam
sub
loopne
or
inc
cmp
test
mov
or
xor
pop
jmp
inc
dec
lahf
ja
shll
jl
mov
ds
popa
rolb
add
rorl
decl
cmp
jne
movb
push
inc
and
sarl
mov
mov
fisubl
mov
mov
loopnew
sbbb
in
loopne
xchg
decl
push
sbb
outsb
sti
cmp
or
xor
loopne
mov
jb
push
and
xchg
dec
mov
pop
mov
cmp
mov
xor
pusha
push
and
repz
jo
pushl
xor
xor
and
mov
adc
popf
or
shrl
cltd
sub
mov
add
mov
mov
pop
daa
testl
mov
bound
test
faddl
fwait
jmp
push
outsl
test
xor
incb
dec
push
shrb
push
jmp
scas
iret
and
pop
mov
rcrl
push
shll
shl
or
hlt
mov
mov
mov
push
pop
push
add
lods
je
sbb
sub
xor
add
pop
inc
bound
pop
jmp
fucomip
adc
sub
ss
scas
push
lea
mov
push
fcmovu
flds
fcomps
mov
cmp
sub
out
dec
sbb
movsb
and
scas
movsl
jae
sub
testb
addr16
adc
add
dec
repz
mov
and
jns
xor
dec
cmp
lcall
mov
sahf
inc
mov
movsb
xchg
add
inc
enter
lea
mov
aam
pop
xor
mov
inc
push
inc
jle
jns
xchg
hlt
cmp
jle
mov
ret
pop
aaa
pop
or
test
nop
call
xchg
pop
sbb
in
movsb
jae
mov
aaa
push
mov
cmp
inc
test
inc
fdivrl
je
push
push
pop
dec
enter
dec
jmp
or
loope
das
rorb
push
xchg
sbb
inc
test
or
inc
lea
inc
sbb
add
lahf
clc
neg
sbb
and
mov
add
aad
push
mov
or
sbb
push
cmp
jae
mov
movsl
fisttps
add
cmp
mov
jmp
popa
cmp
push
adc
jmp
pop
mov
push
mov
mov
add
adc
push
mov
inc
jb
or
push
mov
mov
ficoms
sub
daa
dec
dec
xor
mov
push
add
popf
add
jp
dec
arpl
jne
push
xchg
shlb
mov
mov
adc
push
imul
dec
cmpsl
and
repz
pop
push
push
cli
mul
cmp
stos
stos
stos
mov
addr16
jne
sub
cmp
sub
mov
jecxz
nop
call
cmp
int
push
sarl
sbb
push
sbb
test
mov
ret
or
fcomps
loopne
inc
jns
xor
movsb
and
add
inc
inc
movsb
aad
sub
push
rcrl
movsb
mov
mov
xchg
ret
and
mov
rorb
dec
cmp
pop
pop
cmp
xor
dec
pop
sbb
cmpsb
loopne
mov
add
push
or
mov
mov
jmp
in
divb
sbb
and
pop
scas
jns
mov
js
rolb
aam
adc
sub
pushf
js
mov
push
mov
cmp
jo
rcll
movsl
xchg
and
testb
inc
jg
imul
jbe,pn
pop
cmp
dec
mov
inc
insb
mov
xlat
sbb
rolb
out
popa
mov
ss
push
mov
adc
test
xchg
icebp
ja
push
xor
xchg
jmp
insb
popf
or
sbb
sti
loopne
jbe
pop
pusha
mov
or
dec
addr16
xor
insb
pop
cltd
dec
shl
pop
xor
cmp
enter
in
nop
orl
push
inc
outsb
mov
pop
stos
fistl
cmpsb
nop
cmp
push
hlt
and
mov
push
test
mov
daa
sub
jge
pop
nop
inc
and
or
das
fmuls
aas
flds
and
popa
loop,pt
dec
aam
inc
sub
adc
ja
fsubs
jo
or
mov
mov
adc
jo
in
inc
aam
mov
sbb
les
pop
or
xchg
aam
or
sbb
jbe
cmp
push
cld
cmpsb
push
push
adc
sarb
fistl
push
xor
aam
in
push
pusha
push
jl
adc
jb
push
mov
out
mov
sub
rolb
inc
in
add
mov
jl
out
or
fidivrs
jmp
xor
std
sbb
dec
pop
mov
or
decb
in
jle
push
dec
dec
sbb
and
popf
arpl
sbb
mov
decb
adc
loop
pop
inc
push
fs
setns
popf
cmpsl
push
sub
xchg
mov
xor
rolb
push
icebp
mov
mov
or
iret
stc
add
and
xchg
sbb
rolb
les
jo
data16
cmp
xor
shrb
xor
sbb
in
subl
dec
shlb
jge
movsw
movsb
jge
in
sbb
enter
aam
inc
call
adc
adc
cld
jmp
mov
or
xchg
push
dec
pop
or
call
shlb
lcall
sbb
aam
mov
add
pop
add
sub
inc
cmp
and
addb
inc
and
int
test
fwait
aad
fnstsw
test
inc
loopne
cmpl
cli
test
test
add
jns
mov
mov
loopne
sbb
push
add
sbb
sub
add
pusha
movsl
ret
rcll
bound
sahf
sbb
out
mov
test
push
pop
je
pop
xchg
test
cmp
inc
outsl
cmpsb
inc
push
jp
leave
push
sub
mov
cmp
fldcw
repz
enter
fsub
iret
push
shlb
jb
cli
dec
inc
es
into
adc
shrb
loope
pop
fs
int3
adc
fidivrs
inc
push
push
cmp
adc
add
mov
or
push
sbb
push
mov
xor
lock
mov
adc
mov
xor
repz
pop
or
inc
jge
cwtl
jae
sbb
and
push
push
lcallw
mov
sarb
jmp
push
or
push
push
das
pop
mov
call
adc
xchg
rcrb
adcl
sbb
nop
add
sbb
sbb
je
adc
jle
call
pop
adc
sbb
cmpsb
pop
lock
mov
cld
xor
or
rclb
xor
daa
daa
mov
je
xchg
decb
jne
push
dec
in
add
or
bound
daa
or
xor
push
mov
jo
nop
pop
and
loope
sub
outsl
cli
sbb
xchg
add
inc
jmp
inc
xor
ljmp
decl
je
andl
push
push
cmc
and
add
xchg
jl
sti
pop
incb
std
iret
enter
add
je
je
dec
push
loopne
int3
push
cmpsb
jmp
or
push
xor
notl
cmp
and
ja
pop
sub
sbb
ja
inc
js
xchg
add
sarl
repz
jo
lods
xchg
push
in
enter
push
inc
or
rorb
cmpl
pop
sbbl
adc
incl
mov
push
sbb
aam
shlb
xor
popa
pop
iret
pop
lods
cmc
push
in
std
pop
lods
push
pop
fisubl
push
iret
dec
mov
mov
andb
mov
hlt
adc
mov
adc
add
mov
lods
icebp
or
lret
test
ret
movsb
push
aad
dec
ficoms
sbb
scas
push
mov
xchg
inc
jno
inc
mov
repz
mov
int3
loopne
int3
pop
adcl
test
lock
adc
rcrb
mov
push
xor
dec
push
scas
push
loopne
sub
insb
xor
add
push
jmp
mov
test
hlt
mov
xor
cmp
xor
mov
and
int3
popl
popf
clc
dec
loopne
or
scas
enter
dec
js
add
call
jo
sub
test
push
aas
adc
jne
pop
pop
sub
mov
jg
mov
sub
push
sub
push
movl
mov
jmp
xor
adc
das
adc
xchg
aaa
dec
xor
fcom
mov
adc
mov
push
movsb
push
or
pop
or
add
js,pt
icebp
addl
cwtl
fiadds
dec
push
mov
xor
clc
add
shlb
idiv
sub
push
cltd
pop
imull
sub
fdivr
ret
sub
stos
sbb
push
popl
push
and
add
jne
push
sbb
cmpl
cs
adc
or
and
sub
paddw
push
add
je
lea
mov
jmp
movlps
aad
cmp
add
stos
jmp
mov
aad
das
loopne
ret
divb
sub
int
mov
test
pop
je
mov
stos
cmp
sub
pop
push
or
stos
fwait
inc
xchg
das
mov
sbb
stos
popa
inc
inc
addr16
mov
pop
je
xchg
jne
fmull
in
xchg
leave
lea
mov
adc
rcrl
stc
lret
arpl
mov
sub
in
jg
push
imul
ds
push
mov
mov
movsb
xor
xor
jle
enter
lds
test
add
test
mov
jnp
or
and
jmp
mov
sub
add
int3
push
pop
rolb
sarl
jne
dec
inc
in
xor
inc
mov
sub
add
in
or
icebp
ret
in
xchg
out
xchg
fcomip
push
sub
fwait
testl
jnp
sbb
jo
fstl
mov
ss
in
jne
jecxz
vorps
cmp
pop
daa
test
sub
psubsb
enter
push
sbb
js
or
mov
pushf
das
add
sbbl
rorl
or
inc
test
popa
incl
in
push
in
push
inc
add
daa
mov
aaa
pop
movsl
mulb
roll
jmp
leave
push
push
lods
ret
lock
out
jbe
outsb
iret
xchg
jne
js
cmp
xchg
ja
jecxz
or
jnp
subl
sbb
inc
add
subl
fxch
adc
sub
pusha
cmc
add
adc
fimuls
ljmp
sub
inc
dec
psraw
adc
adc
cmp
inc
ffreep
adc
dec
or
fs
aas
pop
or
push
add
or
cmpsl
push
mov
or
shr
enter
nop
arpl
mov
jp
mov
add
push
in
jnp
les
jg
jle
shrl
scas
mov
inc
sbb
xlat
sbb
loope
pop
push
rorb
sub
push
add
pop
lea
iret
cmc
lcall
push
fcompl
dec
dec
fs
lock
dec
imul
pushl
and
push
icebp
fwait
ror
sub
dec
and
mov
sbb
push
call
inc
or
sub
cmpsl
dec
cmpsb
add
push
pop
jge
mov
clc
cwtl
push
mov
cmp
jb
enter
mov
inc
adc
ja
sub
mov
enter
cmp
lea
mov
pop
cmp
addl
fcomps
adc
fdivs
jmp
test
mov
inc
sub
scas
pop
add
push
movsl
mov
cmp
push
push
or
aaa
push
bound
xor
cmp
jno
ret
jmp
cld
cli
xor
lcall
or
lea
loope
or
shll
inc
insl
in
dec
or
test
add
or
dec
pop
pop
dec
push
ds
or
cmp
mov
dec
jecxz
xor
cmp
je
inc
cmp
lods
roll
inc
in
jecxz
je
movsl
std
adc
in
mov
mov
enter
sahf
aam
aas
or
mov
js
loopne
cs
adc
shll
mov
xchg
push
out
mov
out
jne
mov
hlt
mov
or
jbe
bnd
test
dec
xchg
mov
fsts
jne
hlt
adc
cmp
rcll
jp
js
das
movsl
pop
stos
push
aaa
mov
in
xchg
sub
or
add
pop
xor
mov
and
dec
cmp
adc
or
sbb
inc
cli
or
xchg
sbb
insl
leave
sub
jecxz
xchg
mov
mov
adc
hlt
pusha
pop
pop
push
inc
pop
mov
or
je
jge
adc
bound
sahf
push
popa
push
adc
cmp
sbbb
push
sub
xor
add
cmp
cmpl
into
ficompl
lea
push
lea
testb
push
pushl
fcoml
test
enter
inc
jl
js
sbb
sbbl
enter
setbe
push
cmp
adc
xchg
push
sbbb
call
cs
in
sub
add
push
push
cmp
adc
cli
outsl
add
push
loope
push
push
mov
or
cmp
xorl
outsb
inc
pop
mov
lock
insb
jmp
and
mov
mov
mov
or
rcr
xor
in
adc
pop
dec
fistpll
push
dec
adc
fistps
aas
adc
jnp
mov
fsub
das
sbb
ret
mov
dec
scas
inc
in
pop
sub
adc
cmp
je
cmp
jb
adc
jbe
aaa
je
cmp
sti
xor
je
rdtsc
jbe
ja
and
adc
jmp
into
inc
jecxz
in
popf
pop
jmp
cmp
sbb
ret
ljmp
xchg
loopne
and
int3
mov
push
mov
push
sbb
sbb
push
push
insl
xchg
shl
push
fnstcw
cmpl
daa
mov
push
sub
fsubp
sbb
ja
inc
cmp
les
in
in
xor
pop
das
jb
cmp
and
pushf
pop
sbb
inc
or
stos
push
stos
pop
fs
lcall
push
pusha
adc
push
test
or
push
push
clc
push
push
pushl
mov
pop
push
cwtl
lods
pop
dec
mov
test
mov
push
fsubs
int3
cmp
mov
jns
pusha
fs
xchg
gs
jl
mov
mov
xchg
andl
outsl
sti
or
push
sub
fsubrp
mov
xor
addr16
sti
fdivp
pop
scas
sub
push
jle
adc
inc
jo
iret
xor
mov
imul
adc
and
push
pop
add
add
std
inc
mov
inc
inc
lea
adc
mov
sub
inc
sub
xor
cmp
enter
and
inc
lock
sbb
jae
dec
test
sbb
add
lret
cmc
sub
add
sbb
or
mov
and
sbb
jo
lods
sub
test
dec
xor
inc
pop
sbb
mov
mov
push
cwtl
push
sbb
jne
mov
cmpsb
les
xor
rcrb
pop
xchg
xor
lea
xchg
outsl
adc
dec
jl
loope
neg
sbb
mov
jnp
or
push
mov
inc
test
or
dec
in
in
or
arpl
cs
xchg
popf
and
or
and
mov
add
fwait
sbb
jge
inc
mov
sub
mov
pushf
sub
pop
dec
push
out
xchg
daa
push
test
sbb
xchg
sbb
pcmpgtw
and
xor
push
ret
xchg
sub
or
shll
inc
fdivrs
and
sti
in
out
pusha
insb
std
xor
mov
not
lret
add
cmpsb
dec
sbb
shr
and
fdivrp
jp
jbe
dec
clc
xor
adc
scas
popf
popa
out
cld
mov
addl
cmpb
insb
adc
adc
les
add
mov
es
ja
in
xor
out
inc
adc
movb
adc
cmp
outsl
data16
je
push
pop
dec
or
adc
jbe
stos
sub
ds
sub
push
repz
js
ja
pop
adc
or
inc
or
push
adc
push
or
sub
push
adc
adc
aas
mov
sub
push
pop
rolb
push
ljmp
call
add
xor
je
rorl
orb
hlt
push
aam
js
sub
jnp
cmp
lock
sub
push
hlt
push
in
cmp
sub
sbb
or
or
jo
in
cmp
lds
xchg
mov
adc
inc
adc
push
cmpsb
cltd
jle
sbb
aaa
rolb
mov
std
aaa
mov
testl
sbb
cmc
je
sbb
inc
sub
aam
prefetchw
call
jmp
and
inc
roll
or
or
add
and
cwtl
sbbl
mov
adc
insb
push
add
xchg
dec
cli
adc
ljmp
or
or
dec
es
or
adc
cltd
adc
adc
mulb
adc
cmp
xor
and
sbb
fs
dec
cmpsb
cmp
and
dec
es
and
sub
adc
sub
fwait
das
int
out
rclb
push
call
and
add
xchg
jmp
aad
lret
mov
mov
cld
pop
cmpsl
push
shrb
adc
jecxz
jl
das
popf
xchg
sbb
adc
sub
pop
sbb
add
push
xor
je
mov
sub
push
js
push
and
rolb
pop
loopne
mov
jb
jo
add
sbb
push
pop
dec
int3
or
std
je
push
dec
addr16
push
jnp
push
and
xor
mov
sub
xchg
xor
orps
neg
sbb
push
inc
jb
fdivrl
ret
ret
rorb
cmp
jne
insl
inc
lods
test
xor
js
cmpl
scas
mov
js
mul
je
ret
popf
shlb
popf
ljmp
xorl
pop
je
ret
cmp
imul
sbb
xchg
inc
dec
mov
adc
mov
fildl
sti
xchg
jnp
loopne
orl
dec
xor
pop
sbb
mov
sub
push
faddl
jge
data16
jl
cmp
jne
push
push
cmp
xchg
mov
fmull
xor
insb
andl
mov
mov
mov
stos
jns
push
push
and
loope
pop
pop
or
mov
mov
push
dec
xor
pop
pop
push
pop
add
add
push
mov
cmp
stos
xor
add
leave
push
xor
les
orb
jnp
cmp
add
gs
scas
sbb
add
adc
jno
or
mov
mov
mov
adc
les
push
sarl
xor
sti
ret
mov
jnp
push
sbb
push
lods
add
dec
cmpsl
sbb
mull
jg
cmpsb
pop
shr
jl
lret
hlt
or
imul
mov
mov
je
jle
pop
mov
push
push
je
push
jl
mov
pop
inc
sarl
lahf
jl
fsubl
dec
add
dec
xor
adc
into
addr16
lret
push
popa
jl
in
cmc
add
mov
mov
mov
out
aad
int
push
mov
lock
mov
push
popa
daa
xchg
inc
mov
add
mov
add
cltd
sbbl
and
push
push
or
lock
sub
fcoml
xor
arpl
dec
dec
ja
jbe
pop
push
push
push
inc
call
ljmp
cmp
add
cmp
inc
es
jecxz
cmp
enter
aas
or
mov
gs
jae
fimull
push
push
cmp
lea
and
add
imul
xchg
movsb
push
popf
test
in
push
push
fs
xor
adc
cwtl
dec
jno
or
rorl
xchg
sahf
add
lods
add
sub
daa
jnp
mov
adc
mov
std
sub
or
pushf
cmp
sbb
notl
inc
cld
sbb
aas
or
insl
fcompl
clc
xor
cmp
adc
sub
je
mov
mov
mov
push
in
add
mov
or
jae
adc
pop
mov
iret
sti
iret
aad
cmpsb
cmp
sub
inc
cmp
daa
dec
or
add
push
push
iret
add
adc
add
cmp
xchg
scas
xchg
add
in
bound
sub
lret
xor
add
gs
push
in
pop
or
push
sbb
or
cmpsb
push
mov
mov
sub
jo
sbbb
shlb
sbb
lea
inc
loop
adc
lds
xor
movsb
fadds
push
cmp
dec
and
sbb
and
sarl
add
loope
push
pop
movsl
scas
sub
or
mov
xor
aam
bound
testb
mov
mov
je
xor
add
jbe
roll
in
add
dec
mov
xlat
dec
sub
popa
incb
push
cmp
sub
aas
push
popf
sbb
xor
sbb
into
aam
jne
ss
aas
sub
inc
inc
jo
adc
lock
push
movsl
dec
mov
cmp
jnp
sbb
sbb
outsb
cmpl
and
adc
push
int
dec
push
inc
ret
mov
pop
jb
mov
stos
adc
or
add
push
mov
mov
lcall
add
and
lahf
mov
fstps
in
xor
inc
or
inc
outsb
xlat
push
jecxz
mov
out
fcompl
aam
out
add
fnsave
test
lea
push
jmp
cmp
orl
fs
arpl
dec
mov
jne
test
push
lock
sahf
adc
push
movsl
add
test
in
pop
outsb
lock
mov
test
mov
aas
add
shl
add
scas
loope
punpckhbw
push
or
sbb
aaa
add
sub
in
push
push
cmp
push
popf
add
or
sub
jno
xor
into
outsl
imul
js
mov
cmp
jne
clc
dec
cli
lds
test
push
jge
jo
mov
jo
mov
in
scas
lock
je
arpl
add
inc
jne
inc
stos
push
stc
jbe
subl
outsb
pop
mov
or
out
xor
divb
in
mov
mov
mov
xlat
scas
mov
outsb
shr
sbb
lds
or
test
sub
pop
icebp
lea
xor
cs
aas
cmp
add
mov
int
xchg
xorb
cld
or
xchg
sbb
xchg
stc
add
mov
shr
and
test
inc
enter
add
xchg
add
leave
and
int
pop
andb
push
pop
add
lahf
sbb
pop
mov
cmp
push
andb
add
outsl
or
jne
push
cltd
mov
lods
push
inc
fsts
add
loopne
dec
mov
and
clc
jne
mov
add
out
sti
xor
sbb
sub
frstor
cwtl
add
pop
mov
xchg
cmp
pop
mov
cmovne
add
test
incb
filds
mov
pop
mov
jo
add
jne
idivl
outsb
mov
rolb
sahf
xchg
popa
fwait
cmp
and
or
add
push
or
add
and
std
repz
stc
jb
aaa
xor
add
inc
xchg
or
sti
std
insb
nop
out
repnz
add
pusha
fiadds
adc
test
sub
pop
mov
push
dec
stos
dec
mov
outsl
mov
cltd
movsl
imul
setno
dec
and
lcall
push
stos
imul
fcomps
jmp
xchg
xchg
ljmp
sbb
add
mov
fists
iret
add
lea
std
dec
mov
sub
push
mov
inc
mov
xor
pop
push
ss
or
into
xor
adc
lret
inc
sbb
and
stos
push
or
xor
shl
pop
test
incl
in
sbb
mov
dec
out
dec
xor
fwait
mov
adc
xor
dec
mov
clc
fwait
push
inc
fmuls
in
lock
xor
adc
dec
push
or
mov
add
jae
sbb
faddl
roll
pop
push
sbb
xor
lock
das
cmp
mov
sub
test
push
int
cmp
sub
adcl
sbb
jns
in
inc
cmp
aam
push
leave
jo
dec
push
mov
sarb
stos
mov
loopne
ss
cmp
mov
fisttps
int3
mov
cld
imul
dec
sahf
inc
data16
pop
sbb
or
in
and
pop
clc
mov
sub
add
inc
call
sub
or
ja
icebp
dec
je
fiadds
clc
or
data16
and
je
xor
sub
sub
sbb
pop
outsl
popf
sbb
push
adc
out
or
shlb
adc
add
in
push
fxtract
adc
add
sbb
mov
inc
xchg
int3
aam
pop
dec
cmp
xor
addl
test
in
je
jb
pushl
test
jne
adcl
cmpl
lock
xor
lock
cld
sbb
xchg
fs
test
jne
in
rolb
cmpsb
inc
cmpsb
out
cmp
je
inc
mov
jo
add
push
cmpsb
push
add
inc
cmp
add
rcrl
add
inc
push
and
or
xor
dec
les
lods
movb
int
cmpsb
pop
lcall
pop
sbbl
lods
pop
and
enter
sub
shll
cmpb
dec
cmc
mov
or
lret
sbb
mov
clc
xor
cmp
jnp
and
pop
sub
add
pop
je
push
or
sub
add
push
sbb
sahf
test
or
xchg
inc
iret
pop
xchg
loope
fimull
sbb
mov
xorl
sahf
aam
je
inc
and
fs
and
xchg
insb
pusha
jb
enter
out
inc
jl
sti
movsb
add
popa
sbbl
pop
je
add
sbb
cmp
icebp
dec
mov
push
scas
das
dec
into
repz
imul
rorb
push
and
xor
mov
push
mov
or
mov
jle
pop
ja
je
sbb
je
or
sub
mov
cs
fmulp
adc
test
popa
dec
add
inc
mov
mov
jmp
add
aad
cmp
mov
pop
jmp
loope
push
cmp
addr16
int
jbe
adc
js
aaa
cmp
xchg
hlt
push
sub
test
aam
mov
pop
jle
or
call
test
pushf
cli
lock
push
cmp
inc
mov
xorb
sub
imul
adc
mov
dec
or
cmpb
insb
jmp
daa
xor
jo
cwtl
movsl
mov
rcl
inc
xchg
cmp
cld
imul
add
adc
and
pop
ljmp
mov
scas
mov
add
mov
nop
adc
je
adc
dec
lcall
lea
add
cmp
lea
adcb
aaa
arpl
cs
es
or
xchg
push
les
out
cmp
cmpsb
daa
rcll
sbb
cmp
jae
mov
shl
lea
add
loopne
xor
jge
shl
or
jg
cs
adc
push
cmpb
fldcw
test
cmpsl
or
add
ret
aaa
and
push
testl
mov
mov
testb
pop
ficomps
xchg
dec
add
or
add
rolb
xchg
cmp
mov
or
cmp
enter
jmp
cmp
jne
testl
fcompl
rcrb
fimuls
ds
test
bound
xchg
jge
pop
scas
bound
cmp
push
pop
pop
push
cld
jmp
ror
pop
pop
mov
test
sbb
xor
sbb
cltd
pop
add
cld
testb
je
push
es
or
inc
test
or
dec
jg
or
loopne
jecxz
adc
popa
repz
dec
call
or
cs
leave
xlat
or
andb
or
jb
pop
jbe
xchg
inc
mov
adc
jmp
xor
xchg
out
jg
je
hlt
jo
fnstsw
je
clc
jmp
ret
loope
popa
in
testb
subb
or
fdivr
sahf
je
mov
dec
into
add
add
and
jl,pn
adc
mov
inc
and
cmovno
or
or
pop
cs
push
pop
in
xor
push
jl
movl
pop
xor
nop
fistpl
push
inc
or
test
movsb
xor
sbbb
xor
adc
pusha
sbb
dec
mov
jnp
inc
mov
pop
push
jne
dec
mov
and
cmpsb
push
loop
mov
xchg
sbb
mov
cmp
mov
daa
sarb
cltd
imul
cmpsb
dec
movsb
and
push
lcall
fildl
scas
mov
and
pop
into
sub
mov
mov
cltd
inc
jo
out
or
test
js
aas
mov
stos
stos
add
nop
sub
xor
mov
sbb
xchg
addl
adc
push
push
outsb
xchg
sbb
out
add
add
stos
xor
xchg
ror
aam
add
sar
jb
mov
fmul
xor
jno
mov
fisttpl
xlat
stos
std
sbb
dec
pop
push
in
xchg
xchg
loope
inc
pusha
lods
sarb
fdivr
arpl
or
pop
inc
movb
cmp
sbbb
push
sbb
movsb
add
mov
pop
test
fdivl
and
and
xchg
add
iret
enter
test
jne
js
cmpsb
pop
xor
aas
outsb
xor
xchg
mov
xchg
pop
addr16
insl
icebp
and
xor
add
popa
mov
fs
add
xor
adc
inc
ret
pop
jb
mov
sub
loopne
rcrl
movsl
add
clc
jl
cmpsl
hlt
xor
push
and
mov
jo
cmp
or
and
mov
movsl
es
add
jae
lret
pop
sbb
mov
cmp
jecxz
mov
sub
ss
fcomip
cmc
lods
push
mov
das
push
js
sbb
arpl
aas
inc
or
sbb
dec
sbb
popa
data16
dec
negl
insl
add
daa
pop
dec
lcall
xchg
in
sbb
push
push
fcmovnb
dec
lcall
std
imul
cmpl
scas
mov
ret
das
repnz
jecxz
and
dec
test
into
and
clc
xchg
push
mov
push
aad
fldt
popf
hlt
fisttpll
and
dec
sub
add
add
adc
jo
add
cmp
clc
arpl
and
sub
lds
or
lea
jl
or
jo
jne
rcrl
popf
call
je
dec
push
push
inc
fcomps
sub
mov
inc
xor
push
jl
cltd
out
mov
mov
sbb
mov
jno
je
cmp
orl
shlb
sarb
movsl
push
addr16
sbb
cmpb
push
sub
xor
fldlg2
rcl
push
ds
add
stos
add
movsb
xor
or
mull
push
mov
mov
add
ret
push
pop
add
inc
or
ret
mov
stos
push
leave
sbb
jns
inc
imul
pop
movl
aad
popa
daa
xor
adc
inc
push
sbb
test
push
mov
pop
add
cltd
aad
cmp
fiadds
arpl
add
xor
push
dec
popf
sub
push
fwait
xchg
add
rol
jns
lahf
push
xchg
ss
jne
aaa
inc
push
jae
xor
fs
push
push
insl
daa
push
je
or
lahf
fwait
int3
xor
push
jne
movd
or
sub
lock
adc
fildll
inc
jne
pop
add
lret
shll
push
xor
sbb
clc
push
or
add
jbe
fsubs
pop
sbb
aad
adc
movb
into
cmp
jge
lea
push
and
sbb
push
mov
popa
cmp
and
cmp
pusha
push
pop
dec
ficoms
dec
cmp
cmpsl
jo
rorl
or
insl
xchg
clc
mov
push
push
dec
js
push
pop
shlb
cld
cwtl
sub
add
pop
jge
fsubs
adc
ret
push
sarl
icebp
fadd
aaa
je
push
andl
cld
inc
inc
loopne
daa
xor
add
dec
enter
ss
dec
mov
dec
cmp
xorb
add
fwait
mov
dec
push
jae
dec
adc
or
loope
movl
loope
inc
iret
cmp
decl
ss
push
adc
or
pop
mov
rorl
les
pushf
dec
arpl
fstpl
push
or
shrl
cmp
add
sub
shll
pusha
jnp
sub
mov
dec
mov
lds
rol
inc
ljmp
shlb
or
loopne
ret
ret
pop
js
addr16
dec
fadds
push
popa
jns
pop
mov
andl
movl
or
cwtl
popa
push
inc
add
ret
sbb
nop
stos
adc
mov
jo
std
sti
lock
lea
mov
jp
setne
jo
loope
ret
inc
lods
add
jne
decl
or
call
add
out
push
inc
mov
pop
addb
dec
add
pop
add
or
or
jecxz
add
mov
dec
adc
aaa
test
hlt
movsl
xchg
push
pop
test
pop
inc
aaa
cmpsb
push
mov
jl
in
ficoms
frstor
inc
movsl
adc
xlat
loopne
pop
mov
out
sbb
mov
lock
dec
pop
or
cmp
popf
add
mov
cmp
imul
adc
fcmovnu
add
adc
inc
je
cmp
test
adc
rorb
cmp
jne
mov
cmp
sub
and
jnp
inc
cmp
add
or
mov
pop
xor
sub
das
mov
popa
jne
pop
pop
pushf
ret
mov
dec
mov
ret
sbb
cmc
inc
fs
mov
mov
imul
or
sarb
dec
test
inc
jnp
dec
inc
notb
pop
lea
cmp
jo
and
jle
in
dec
xor
xor
and
sbb
cmp
adc
scas
test
hlt
sbb
add
adc
mov
test
ret
sub
cmpl
cmp
jo
pcmpeqb
cmpsl
or
xor
sahf
dec
notl
sbbb
je
or
out
adc
ret
mov
sbbb
enter
daa
test
jne
sarb
mov
or
enter
ret
and
sbb
mov
gs
xorw
sti
pop
call
mov
jle
dec
mov
jmp
out
add
movnti
lds
push
scas
dec
loopne
pop
gs
xchg
gs
dec
pop
sbb
xor
les
fadds
loope
pop
mov
adc
sbb
enter
inc
aam
jl
mov
push
mov
cld
jl
pop
mov
gs
push
cwtl
add
and
jae
adc
push
lea
rcrl
lock
mov
inc
lea
jb
ljmp
dec
inc
mov
push
sarl
fsts
leave
push
enter
mov
cmpl
jo
lcall
nop
pusha
int3
decb
dec
or
addb
ret
out
push
cmp
pusha
imul
add
jnp
dec
ss
pminsw
fdivr
mov
pop
or
icebp
ds
icebp
or
push
cmp
push
pop
rclb
and
adc
ret
int
stc
lahf
in
movzwl
loopne
icebp
push
addr16
mov
je
shll
add
pop
aas
mov
push
pop
add
or
mov
enter
mov
sti
mov
add
lods
addb
sbb
fcmovbe
les
sahf
cmp
jg
add
mov
lods
add
mov
push
lcall
xor
outsl
add
insb
loope
xor
mov
stc
xor
sbbb
or
mov
cmp
shrb
add
mov
push
add
jge
mov
jbe
push
inc
andl
jge
daa
dec
xchg
xchg
shr
add
dec
leave
stc
push
test
or
mov
and
jb
or
xor
syscall
ja
mov
pop
arpl
mov
inc
mov
insl
push
pusha
push
adc
lock
xchg
and
jne
inc
mov
pusha
mov
or
cmpb
dec
lea
imul
je
jge
std
mov
adc
xor
rorb
lea
shl
cmc
out
adc
add
add
dec
popa
add
inc
mov
pop
push
cltd
and
test
push
lcall
les
dec
mov
andl
gs
add
jmp
shrb
jmp
sbb
ljmp
xor
mov
jg
loopne
jmp
pop
mov
jb
pop
adc
adc
sbb
pushf
into
push
mov
jge
jae
or
into
pop
xchg
mov
mov
or
or
jp
cmp
dec
and
sub
iret
xor
pop
out
or
push
stos
inc
mov
shl
adcb
je
push
aaa
xchg
mov
or
sbb
jno
xor
mov
testb
add
out
xchg
jo
inc
cmp
sub
jne
adc
bswap
add
cmp
sub
mov
cmp
mov
scas
rolb
aam
jge
adc
jbe
sbb
scas
mov
pop
mov
dec
shll
and
outsl
mov
adc
test
lret
jo
movsl
dec
sub
adc
mov
and
js
add
cmpl
es
jmp
push
push
push
push
adc
lock
add
mov
subl
add
or
xchg
imul
jl
cmpl
ficoml
adc
push
jno
adc
add
in
jnp
pop
cmp
sbb
movzbl
sbb
pop
mov
sbb
cwtl
addr16
lcall
fsubrs
fsubrs
push
movb
xchg
sahf
mov
sub
inc
mov
movsbl
aaa
andb
cmp
incb
add
jne
pop
je
inc
sbb
roll
daa
aam
mov
test
pop
fisttpll
add
test
in
mov
pusha
xorb
pop
pusha
inc
or
adc
faddl
int
movl
mov
in
jp
or
pop
push
jno
jle
push
inc
push
and
das
jmp
lcall
xor
cmp
adc
leave
fildl
xor
xchg
xor
mov
loopne
push
pop
pop
fwait
pop
outsl
in
sbbb
mov
pop
and
push
decb
loopne
jmp
subb
jecxz
ja
cwtl
mov
and
imul
fmul
inc
cwtl
mov
popa
jno
push
out
in
xor
add
push
fs
mov
adc
push
or
stos
cmp
into
leave
push
mov
or
add
mov
jmp
push
or
les
mov
jle
jbe
mov
push
leave
mov
dec
popf
inc
sbb
ret
jno
mov
inc
sub
je
cmpb
pop
fsubrl
clc
sahf
inc
sbb
xchg
xchg
sub
hlt
and
cs
pushf
pop
cmp
stos
imul
ss
add
and
mov
mov
add
icebp
rclb
je
dec
fldt
xlat
out
cmc
scas
pop
rcl
fistps
mov
adc
inc
clc
mov
and
push
adc
fdivr
jae
dec
imul
mov
and
pop
pushf
out
jbe
out
sbb
push
jo
ds
jne
xchg
xchg
adc
stos
and
sub
mov
pop
stos
jmp
lods
inc
out
inc
sti
sbb
and
hlt
movsl
dec
push
xchg
sarb
jno
movsb
xchg
das
cltd
adc
sbb
pop
push
std
or
mov
hlt
sbb
ds
dec
adc
cmp
push
or
and
push
orl
jg
dec
lea
pushf
xor
mov
lods
lahf
push
add
lock
sahf
mov
pushf
xor
xchg
and
ret
and
cmp
pop
and
rorb
addr16
cwtl
notb
push
lcall
pop
cli
push
inc
mov
mov
jge
movl
shr
push
shrb
sbb
pop
jns
adc
mov
lds
adc
adc
inc
dec
test
xor
pop
inc
xor
loop
hlt
loope
mov
pop
dec
in
dec
or
mov
pop
adc
jne
loope
xlat
push
imul
insb
data16
pop
or
imul
sahf
xor
sub
aam
mov
sub
test
and
imul
fdivrs
jne
pop
outsb
push
dec
pop
xor
scas
scas
jl
lds
xchg
pushf
pushf
mov
jnp
xor
inc
cld
lret
shlb
inc
dec
jo
jne
lea
cmp
add
jns
push
ret
or
shrb
or
pushf
jnp
mov
xor
or
add
adc
push
pop
ret
loopne
es
movb
lea
lock
stc
dec
add
pusha
inc
push
pop
xchg
cmp
fadds
jb
aam
and
cmp
test
mov
jl
in
adcl
add
sbb
sub
cltd
or
cmp
dec
inc
pop
inc
orl
das
jmp
jle
popf
push
test
or
aas
or
mov
mov
sub
enter
incl
xor
out
mull
inc
jmp
cmc
or
test
inc
insb
lods
mov
jmp
lea
inc
les
push
push
lret
ds
shrl
push
xchg
insb
orl
imul
and
mov
push
sub
jge
dec
test
jmp
push
xchg
scas
in
push
push
outsl
sub
ret
push
lods
push
pusha
xor
pop
and
out
test
adc
jno
sub
or
mov
insl
into
add
inc
inc
scas
xchg
dec
xchg
fmuls
xchg
push
jb
shll
inc
gs
mov
pop
popa
pop
test
call
leave
sub
loopne
popa
and
push
icebp
jbe
pop
inc
add
cmp
in
cmp
or
adc
inc
fadds
shll
and
cmp
repnz
and
xchg
mov
mov
push
test
mov
addr16
fwait
pop
mov
pop
cmp
dec
sub
or
inc
ds
xlat
fisttpl
jo
xor
push
nop
stc
sbb
nop
outsb
cmp
adc
mov
xchg
pop
push
jge
enter
and
insl
xor
enter
sbb
inc
popf
nop
mov
scas
ss
dec
jmp
aaa
pop
je
mov
jmp
add
dec
in
ret
jb
je
jne
sbb
sbb
popa
xchg
stos
mov
dec
jmp
dec
adc
cli
lret
insl
sbb
pop
add
lock
dec
xchg
cmp
je
mov
testb
xchg
jg
ja
push
rorb
add
test
mov
dec
pop
sub
inc
cvttps2pi
sbbl
jl
insl
cmp
jge
outsb
insl
mov
mov
shlb
cld
push
dec
add
mov
lock
iret
es
data16
sbb
push
icebp
mov
mov
ja
cmp
jbe
fucomip
jg
add
inc
or
in
in
fcomp
ds
jle
cld
imul
push
pop
push
add
aam
and
nop
repz
addr16
push
les
cmp
scas
inc
rcrb
mov
jns
or
out
cld
dec
add
pop
and
leave
shll
inc
stc
sub
je
lret
cld
inc
xchg
in
sub
adc
add
outsb
adc
loopne
sbb
xchg
mov
test
jmp
add
xor
test
jge
incl
add
pop
jae
idivb
je
andb
dec
xchg
cmpb
es
and
test
fistpll
xchg
adc
loopne
cmp
xchg
testl
lock
xchg
das
or
cld
mov
cs
jae
push
pop
out
insb
loop
xor
and
jne
mov
int
sub
lds
out
sahf
popa
and
and
push
xor
xchg
test
stos
adc
out
sbb
enter
inc
or
xor
pop
push
dec
test
xor
and
mov
fdivr
loop
je
idivb
add
or
mov
and
or
aaa
cmp
push
jmp
sub
call
xchg
push
pop
out
add
cmpl
or
xchg
sub
dec
or
test
sbb
mov
inc
xor
frndint
add
sbb
ret
sbb
push
mov
lahf
fwait
xlat
pop
rorl
ret
loopne
imul
scas
and
xor
jmp
xor
stos
fcmovnbe
pop
pop
xchg
push
xchg
add
dec
push
dec
jmp
in
sub
push
pop
das
mov
xchg
inc
mov
or
or
or
enter
push
sbb
js
mov
inc
imul
dec
subl
dec
pop
sub
push
push
adcb
out
pop
pop
sbb
or
mov
mov
push
push
pop
push
add
mov
push
xor
cmpl
into
fistps
or
loop
sbb
aad
or
sbb
jne
adc
mov
mov
add
mov
jnp
decl
clc
jne
cmp
fdivl
mov
fs
and
push
mov
js
push
sbb
loopnew
out
xchg
push
push
xor
xor
mov
loop
inc
loopne
pusha
mov
add
inc
xchg
idiv
xchg
or
aam
add
add
pusha
push
cmp
mov
xchg
jg
adc
inc
pop
inc
je
mov
mov
mov
pop
add
mov
cmp
adc
and
out
sub
push
sub
or
and
popf
or
movsl
adc
sub
jg
sti
add
leave
insl
mov
scas
test
push
je
pop
cmp
je
cmp
pop
int
icebp
imul
addl
adc
mov
sub
insb
test
inc
xor
das
or
or
xlat
lcall
ret
lahf
xor
shlb
jmp
mov
push
mov
lea
push
push
push
and
add
rclb
mov
pop
xor
xchg
pop
lea
mov
rep
inc
pop
xor
mov
das
js
gs
sub
imul
jl
dec
add
jae
push
lret
adc
jg
add
arpl
sbb
xor
push
pop
jmp
mov
jnp
aad
jae
xchg
les
push
mov
lea
push
adc
xor
test
inc
cmp
inc
mov
aad
xorl
inc
dec
stc
xor
xor
sbb
mov
pop
movsb
lcall
and
xchg
shll
iret
jle
cwtl
pop
mov
sahf
fisubrs
cmp
adc
ret
rcll
pop
loope
add
out
cmc
cmp
add
jmp
mov
cwtl
add
imul
inc
popa
or
adc
mov
xchg
add
add
or
xchg
add
and
push
cltd
cmp
lock
push
and
sahf
push
out
clc
daa
inc
icebp
repnz
scas
enter
push
test
jbe
hlt
or
jb
rclb
subb
push
dec
and
mov
dec
mov
pop
adc
adc
or
fmuls
dec
cmp
clc
clc
jmp
clc
jne
dec
pop
cmp
sbb
mov
outsb
or
enter
or
sub
jne
add
or
sarl
orb
int
xchg
shlb
add
lods
ss
pop
out
fldcw
pushw
jns
jne
xor
jmp
lods
add
jns
stos
cmp
dec
call
mov
fstp
mov
and
arpl
sub
sar
add
xchg
pop
dec
xor
xor
jg
enter
pop
xchg
add
add
jo
shl
xor
xchg
add
xchg
add
nop
addb
insb
cmp
mov
and
sti
es
dec
enter
jb
mov
addr16
mov
sarl
ljmp
nop
je
out
fstl
inc
adc
or
pop
in
cmp
or
push
out
inc
notl
jg
mov
and
xor
jne
orl
fcoms
adc
dec
js
fdivs
and
xlat
mov
dec
mov
and
sahf
mov
movsb
jae
and
adc
out
adc
sbb
or
jne
and
and
rolb
mov
les
pusha
mov
ret
lahf
imul
sbb
add
push
pop
push
adc
ja
nop
sahf
or
or
add
push
dec
loop
cmp
and
adc
clc
pop
dec
mov
lock
and
jg
les
aam
movsb
movsb
shl
out
and
mov
mov
in
aam
adc
and
in
inc
and
xor
pop
adc
lea
repnz
pop
enter
dec
gs
lds
sbb
dec
loopne
dec
mov
jb
nop
add
loopne
test
or
ret
push
and
test
loop
dec
dec
pop
inc
decl
std
adc
add
out
mov
hlt
std
aam
and
sbb
fimull
out
xor
sub
aam
pusha
push
push
imul
jb
inc
popa
add
pop
xchg
adc
and
push
enter
or
pusha
sbb
or
mov
pushf
frstor
out
or
push
in
mov
les
mov
adc
mov
add
and
cmpl
cwtl
jb
dec
rcrl
and
xchg
add
add
es
addb
test
pusha
test
mov
test
jecxz
daa
in
and
std
dec
std
adc
cmp
sub
jns
fbld
bound
std
sub
add
cmc
and
cwtl
xchg
jo
clc
mov
xor
xor
nop
jnp
fs
test
ret
pop
pushf
dec
imul
pop
dec
insb
sbb
nop
adc
push
xor
iret
inc
mov
pop
lds
jne
dec
dec
dec
call
xchg
xor
add
push
pop
jl
pop
sbb
add
dec
mov
nop
call
js
pusha
enter
adcl
addl
enter
ror
cmc
adc
in
inc
jo
bound
adc
mov
in
popa
and
lahf
imul
or
flds
pop
and
popf
movsl
mov
in
imul
cmpl
push
jb
dec
and
mov
pop
sub
lea
js
outsb
or
fstl
sub
cmpsb
adc
dec
scas
sbb
decb
in
pushf
clc
sti
jbe
es
test
push
leave
mov
popa
loop
sti
fisubs
cmpsl
jbe
andb
xchg
adc
cld
jne
js
pop
push
lea
mov
pop
jbe
add
sub
outsl
lods
pusha
das
xor
fptan
leave
or
push
cmp
dec
cld
cmp
xchg
push
mov
je
into
leave
and
popa
addb
stos
inc
push
pop
sub
and
pusha
int3
ret
sbb
je
push
push
pop
daa
mov
test
mov
pushl
data16
push
inc
jno
push
addr16
les
insl
xchg
jecxz
add
aaa
xor
std
mov
add
dec
and
clc
dec
push
addr16
xchg
sub
mov
mov
push
in
aam
clc
jns
sbb
mov
fsub
ss
jb
fmuls
xchg
inc
cmp
dec
in
adc
es
stc
clc
frstor
sbb
fistl
xchg
mov
xor
push
addb
shlb
nop
mov
inc
pop
cmp
fadd
sub
fcmovnb
mov
pop
or
in
fdivrs
fcom
or
pushf
je
cmp
fcoms
push
dec
adc
enter
pop
movsb
std
mov
je
xor
pop
nop
jmp
or
push
push
mov
or
push
jns
push
dec
adc
dec
cld
and
enter
faddl
xor
push
adc
test
pop
repnz
dec
mov
pusha
sub
ror
pop
out
add
push
bound
xchg
call
add
push
cmpsb
push
cmp
int3
in
jg
dec
xchg
or
push
loop
push
ret
call
aaa
push
dec
cmp
pusha
popa
sub
or
jb
insb
std
or
insl
add
in
fisubrs
popa
fcoml
inc
inc
movsl
lahf
mov
fcoms
repnz
pop
mov
jns
test
sub
orb
mov
sub
inc
adc
mov
mov
out
adc
fs
std
in
mov
pusha
in
mov
call
cmp
cs
call
enter
rorb
cmp
push
in
icebp
or
inc
mov
pop
mov
xchg
int3
lret
popf
inc
or
cmp
add
stos
js
cli
nop
sub
sahf
sub
mov
sbb
adc
and
sub
adc
notl
sarl
fs
push
dec
push
lret
jecxz
subl
movsb
jns
fcoml
push
pop
pop
outsb
nop
rcl
rorb
push
push
and
shlb
sbb
sbb
or
aam
inc
lcall
sbb
in
push
movsl
addr16
push
cmp
push
add
jno
dec
pop
ja
or
shrl
int3
jno
les
hlt
add
pop
push
icebp
jmp
add
push
jecxz
mov
push
pusha
aad
cmpsl
jne
mov
xchg
mov
and
pop
push
push
or
push
push
jnp
je
xchg
mov
push
loopne
aaa
les
int3
push
shlb
jmp
and
and
and
jb
xor
xor
jo
fstpt
xchg
and
outsb
jno
clc
lea
insb
loope
xor
test
in
sub
push
push
sbb
pop
in
push
xchg
jbe
mov
test
je
scas
add
xchg
or
dec
out
dec
pop
xchg
dec
add
cmp
sbbb
daa
add
xlat
out
dec
ja
push
xchg
mov
pushf
in
xchg
sbb
jmp
cltd
movl
insl
leave
mov
mov
mov
stos
cmpsb
fsubp
mov
fsubrl
fmul
cmpsl
pop
and
sbb
xchg
imul
xchg
or
lahf
dec
push
push
popf
push
ss
pop
cmp
add
mov
push
clc
and
sbb
pop
lret
adc
mov
mov
inc
add
mov
mov
repz
imul
int3
scas
aam
imul
xlat
rorb
jecxz
or
test
or
adc
push
dec
add
mov
pop
add
rcl
pop
sbb
mov
or
sub
je
xchg
push
add
dec
adcb
pop
aaa
or
add
mov
roll
lods
idivb
pop
das
lods
or
dec
je
pop
xor
jnp
push
mov
pop
sbbl
dec
push
sub
pop
jbe
mov
mov
and
cmc
rolb
movsl
or
inc
jg
mov
fstpt
add
dec
push
sbb
mov
adc
add
std
add
mov
stos
jns
or
jmp
xlat
jnp
out
mov
lods
rcrb
mov
je
sub
in
xor
iret
and
iret
add
fwait
adc
jmp
ds
push
sahf
mov
or
scas
jo
mov
adc
fisttpl
xorl
add
int3
int3
cmp
pop
xor
sbb
jl
popa
add
mov
adcb
jbe
sbb
mov
test
add
mov
push
es
and
or
xor
push
mov
inc
push
inc
push
pop
xchg
xor
push
cld
push
adc
dec
in
add
clc
adc
push
mov
inc
xchg
jo
or
push
fadds
lcall
and
sbb
loop
sub
push
cmc
inc
sbb
push
push
cmp
pushf
dec
cwtl
mov
add
dec
inc
mov
adc
or
mov
mov
xchg
scas
xchg
dec
fcoml
lock
dec
mov
push
inc
xchg
add
push
push
xlat
rolb
ds
sub
jmp
pop
xchg
data16
clc
fdiv
push
js
jns
push
push
push
loope
push
pop
enter
jmp
leave
repnz
gs
fadds
idivl
shll
add
in
mov
sbbl
out
dec
sbb
mov
adc
xor
dec
ret
xor
dec
adc
mov
push
sbb
sbb
inc
jno
sub
push
mov
orb
or
xor
cmc
rclb
xchg
mov
sbb
add
lock
xchg
push
or
cltd
mov
push
mov
push
push
and
push
data16
mov
imul
adc
mov
add
and
lods
fsubrl
add
sbb
iret
aam
cmp
les
repnz
popa
push
data16
pusha
cmp
mov
adcl
popa
and
into
cmp
mov
cs
sub
inc
add
roll
push
es
add
fs
icebp
dec
test
mov
sbb
add
sbb
cmp
or
push
and
cmp
pop
lahf
in
adc
pop
xor
sbb
incl
icebp
push
pushl
inc
add
cmc
xor
or
pop
repnz
pop
or
jmp
loopne
rcr
jle
adc
or
stc
and
cmp
jo
jecxz
xor
mov
jp
cmc
addr16
dec
mov
dec
push
aas
mov
clc
push
push
lock
add
jg
cs
mov
imul
sbb
sbb
mov
xor
push
lock
jp
cli
or
mov
mov
adc
adc
test
test
mov
pop
xor
mov
pop
lods
popf
lret
inc
jae
jne
cmpl
inc
jae
shrb
push
add
paddb
push
movzbl
cmp
out
push
bound
addb
dec
iret
pop
jle
inc
and
push
mov
xor
ljmp
inc
loopne
out
fcoms
jl
test
xchg
sbb
ror
out
lods
rcl
lahf
add
std
jmp
sbb
std
push
jne
test
out
add
outsb
test
and
out
push
jl
cmp
add
mov
cmp
and
in
out
push
popa
int
je
push
mov
cmp
pop
push
mov
mov
pop
mov
stos
jmp
pop
int
cld
mov
push
push
cmp
or
pop
popa
scas
or
outsl
bound
fisttps
dec
mov
pop
sbb
add
cli
dec
inc
inc
pop
loopne
and
pop
shlb
addr16
add
jmp
lods
or
sbb
xor
push
and
int3
jbe
into
push
popa
leave
cwtl
sub
rorl
add
adc
xchg
add
push
or
and
adc
sbb
adc
fistpll
pop
pop
pop
movsl
out
mov
inc
jp
js
add
xchg
jecxz
push
inc
or
push
fs
cmp
mov
cmp
fldcw
test
imul
lsl
cmp
jle
sub
pop
dec
mov
mov
mov
mov
das
jmp
inc
idivl
andb
mov
sub
cmp
pop
sbb
in
dec
mov
je
sub
icebp
mov
adcl
jae
xor
add
sbb
adc
mov
sbb
push
add
fcoms
in
call
cmpl
fnstenv
adc
in
add
loop
mov
inc
inc
je
inc
xor
cmp
ret
repz
add
sbb
popa
mov
push
call
inc
popa
push
popa
cmp
das
movsb
add
fbld
push
out
inc
or
subb
inc
xchg
mov
test
in
push
in
sbb
cwtl
push
fisubrl
imul
add
xchg
cmc
shll
dec
lock
jle
push
jl
sti
push
pop
imul
dec
or
enter
add
outsb
add
dec
cmpl
lods
movsl
sub
push
popa
data16
sub
orl
inc
mov
inc
fstpt
xor
cli
cmp
scas
sub
das
arpl
out
loopne
xor
xorb
outsl
or
sub
add
fisubs
mov
setbe
xchg
in
mov
movsl
mov
aaa
shl
push
scas
jecxz
imul
xor
ret
or
jl
dec
or
sbb
js
je
ret
insb
or
inc
jmp
mov
add
add
mov
fsubs
jg
lock
sub
mov
push
mov
cmp
in
adc
mov
mov
push
mov
cmp
repnz
test
push
push
pop
jne
out
cld
push
xorb
addr16
mov
cmp
enter
lea
hlt
lock
dec
lods
sbb
adc
mov
push
aaa
mov
jl
jnp
mov
sti
push
dec
add
push
xor
jo
pop
adc
adc
mov
fstps
andl
mov
inc
nop
jns
and
push
push
in
inc
stos
movsb
push
xchg
mov
lret
es
adc
addr16
pop
mov
pop
push
mov
xor
les
dec
or
pop
jnp
push
idivb
nop
sbb
mov
shll
add
out
pop
clc
pop
repz
push
push
push
pop
and
pop
in
mov
out
in
pop
in
test
or
sbb
adc
out
xor
pmulhuw
add
push
mov
mov
push
mov
jg
fcomps
rclb
push
mov
and
bound
jmp
pop
mov
sti
in
push
nop
mov
in
push
fnstcw
je
sub
sysret
add
pop
adc
cmpsl
pop
js
pusha
icebp
push
cmp
insb
repz
or
cltd
cs
push
std
leave
or
lods
jecxz
push
add
inc
lock
sub
add
jne
icebp
dec
or
xchg
in
mov
xchg
into
bound
pop
sarl
inc
popf
push
cwtl
push
movsl
add
nop
adc
adc
jnp
cmpsb
pop
cmpb
adc
push
stos
xor
dec
sub
jno
sbb
cld
mov
je
rorb
inc
push
cmp
addr16
sub
add
cmp
or
cmp
sbb
mov
sbb
loopne
xor
lahf
cmp
mov
das
repnz
push
push
test
xchg
in
push
imul
rorl
adc
adc
mov
cmc
arpl
mov
aam
jmp
push
cmp
mov
or
cli
jo
mov
add
jp
in
jne
jg
or
add
rorl
or
sub
sub
roll
jnp
and
testl
ss
push
loopne
jge
mov
add
rcrl
mov
adc
shrd
ds
es
add
jne
mov
jmp
aaa
jmp
sbb
ret
and
fmuls
pop
xchg
lods
sbb
lds
fadds
mov
dec
lcall
aaa
and
orb
jg
fs
xchg
push
and
mov
push
xor
and
sbb
jne
dec
xlat
mov
in
xchg
repz
insl
std
jno
or
call
xor
push
inc
andl
cwtl
or
enter
add
rolb
je
adc
add
lods
xchg
inc
sbb
roll
divb
and
mov
rclb
sub
or
cmpsb
repnz
add
jbe
and
pop
push
adc
cmp
sub
rorl
cmpsl
dec
push
mov
mov
push
xchg
push
sahf
push
je
xor
ss
sub
adc
sub
inc
js
adc
stos
and
jle
add
cltd
adc
adc
sub
pop
push
push
xorl
xchg
push
jmp
neg
push
inc
sub
je
sub
pusha
and
inc
add
loope
push
enter
or
mov
fisttpl
stos
mov
lods
stos
xchg
test
inc
ret
push
inc
push
mov
imul
loopne
mov
in
push
mov
add
fisubrl
addl
adcb
inc
jb
and
adc
fs
inc
mov
and
mov
cltd
dec
mov
mov
enter
dec
sbb
and
in
inc
add
mov
inc
mov
rorl
ror
xlat
loopne
adc
jns
lds
icebp
add
add
pop
ljmp
inc
push
and
mov
and
dec
add
and
out
dec
mov
add
push
xchg
push
mov
sbb
stos
movl
push
add
and
inc
cli
leave
add
add
fadds
nop
lahf
pop
fadds
mov
je
fcomps
loop
insl
pop
ljmp
clc
lods
cmp
aad
loope
jo
psubsb
and
das
or
mov
clc
mov
lcall
xor
mov
or
jno
and
xor
jbe
add
pop
and
add
mov
call
stc
or
push
insl
addr16
xchg
out
push
je
xchg
mov
mull
jbe
popa
push
insb
sbb
push
pop
pop
sub
sbb
pop
sub
fcomps
or
pop
adc
cmp
cmp
sti
push
cmp
jno
jbe
aas
add
je
xor
add
sub
adc
lea
inc
mov
jb
mov
sbb
gs
clc
clc
push
and
jge
je
push
das
clc
mov
and
rorl
mov
hlt
pusha
imul
hlt
call
sbb
test
sub
pop
test
aad
je
addb
std
sbbw
movswl
mov
daa
push
lea
dec
int3
adc
rolb
jp
sub
push
mov
nop
adc
xor
inc
ds
outsb
sub
push
daa
push
push
adc
mov
cli
inc
xchg
or
push
testl
mov
std
push
mov
lret
bound
push
clc
je
and
jecxz
adc
ror
sub
jo
push
push
ja
loope
clc
push
push
nop
cld
fs
es
lods
sti
add
jecxz
push
inc
movb
mov
stos
out
xchg
adc
adcl
mov
icebp
add
push
sub
jbe
push
push
jno
imul
xchg
insl
jle
sbb
inc
jb
fisubl
and
push
mov
mov
sbb
repz
sub
insb
imul
js
sbb
xor
inc
jae
inc
cmp
dec
or
xlat
inc
or
dec
jecxz
in
jne
cli
popa
sar
js
je
cmp
adc
test
fcoms
or
mov
or
push
push
push
pop
or
and
leave
lcall
sqrtps
xorl
fstpt
pop
and
dec
inc
lock
xlat
push
test
rcrb
sbb
and
push
fldt
or
pop
adc
dec
xor
clc
mov
divb
sub
adc
xor
sbb
mov
nop
pop
ljmp
std
push
push
mov
out
fwait
sbbb
rcrl
addl
push
fldt
sub
in
pop
and
jmp
icebp
pop
or
mov
adc
outsb
adc
dec
push
dec
adc
jmp
xor
shrl
cmp
add
xor
int3
enter
sbb
add
scas
adc
mulps
cmp
adc
inc
push
cwtl
inc
mov
push
mov
push
jns
push
loope
lods
xor
xchg
pop
adc
rcrl
xor
test
clc
and
cmpb
add
loopne
in
mov
je
nop
xlat
rcr
jns
and
xor
inc
xchg
adc
dec
pop
shll
pop
sar
jl
xchg
stc
xor
inc
imul
dec
adc
imul
add
xor
pop
xchg
mov
dec
test
xor
fldz
test
and
insb
mov
push
dec
mov
push
mov
push
xchg
cmp
mov
pop
call
jae
xchg
jl
push
cwtl
insb
adcb
js
inc
push
jno
adc
and
push
nop
mov
in
pop
add
push
sub
test
pusha
sahf
rorl
xchg
or
sbb
or
mov
add
push
sbb
cltd
dec
or
dec
xchg
pop
mov
loopne
adc
test
jne
push
mov
les
subb
sbb
and
xor
sbb
cmp
dec
fimuls
push
mov
xor
xchg
cmpsb
pop
lea
sbb
scas
loope
sbb
jmp
fstl
mov
jbe
push
sbb
sysenter
push
sbb
sbb
adc
add
aas
mov
xchg
into
je
push
sbb
mov
pop
push
es
outsl
sub
mov
stos
push
dec
dec
mov
xor
xor
jl
pop
push
out
xor
ds
loope
sbb
setge
push
pop
and
push
stos
adc
or
jl
add
gs
imul
jne
loopne
push
loope
js
leave
push
in
jmp
mov
testl
aas
xchg
dec
cltd
and
and
adc
inc
test
aas
stos
or
fisubs
lods
adc
push
mov
pop
add
and
sub
enter
call
test
inc
inc
push
cmp
loop
lsl
call
out
push
nop
and
lea
jmp
pushf
xorb
adc
inc
push
aas
daa
push
hlt
orl
jmp
mov
shll
adc
mov
pop
or
loopne
jmp
pushf
dec
add
push
or
and
xchg
ret
push
test
push
or
fcoms
mov
push
and
outsb
mov
pop
or
push
adc
add
pusha
inc
sub
push
enter
jmp
dec
outsl
and
outsl
in
arpl
movsl
lds
jno
jle
jnp
mov
mov
add
shlb
and
enter
imul
dec
and
mov
add
push
add
mov
int3
aaa
and
pop
xor
add
es
push
mov
mov
xor
mov
std
push
cmp
push
cwtl
arpl
add
pusha
jne
out
nop
das
pop
dec
imulb
es
xor
loopne
shlb
inc
and
add
andl
les
pop
repnz
loopne
xchg
popf
dec
fadds
ret
add
and
cltd
enter
movsb
fwait
movsl
lds
roll
push
jne
inc
sub
sbb
lcall
out
jns
add
fwait
xor
inc
sub
xchg
into
les
test
cmpsb
rorb
pop
push
into
and
call
test
outsl
les
test
jb
adc
push
push
dec
or
test
pusha
and
jle
cli
nop
xchg
pop
cmp
lea
and
cmc
inc
sbb
add
or
lea
mov
arpl
dec
pop
sub
sbb
lea
nop
adc
bnd
int
add
xor
adc
xor
outsl
adc
inc
xchg
or
imul
xchg
fisttpl
push
mov
daa
jb
sub
popl
jo
push
jecxz
adc
adc
sti
mov
shll
pop
push
and
aas
jb
ja
add
loope
inc
ja
jg
inc
divl
movsb
popl
push
in
mov
cmpsl
adc
je
notb
in
sbb
sbb
ss
xchg
add
dec
pop
add
inc
in
adc
pop
mov
int
adc
insl
push
fs
aas
push
cli
push
mov
inc
push
or
push
push
out
mov
xor
shll
loop
xchg
jecxz
xchg
xor
aad
and
hlt
xchg
adc
add
push
xchg
popa
subl
in
or
mov
data16
cmpsb
add
sub
sbb
push
mov
addl
aas
fsubl
cmc
mov
pop
mov
xor
and
ret
xor
push
in
into
sarb
cmp
adc
and
dec
push
fdivrs
lret
add
lock
dec
xchg
or
jp
inc
adc
mov
ds
leave
push
mov
xor
push
push
add
aam
push
cmc
sbb
js
pusha
push
mov
push
popa
jae
xor
imul
lock
xchg
adc
pop
jo
add
push
dec
push
lock
jnp
or
and
or
xchg
xchg
mov
nop
jle
xorl
pop
clc
inc
jns
add
inc
push
xor
adc
dec
shlb
scas
mov
adcb
add
xchg
add
sbb
dec
dec
dec
sub
sbb
or
js
dec
sub
inc
inc
ja
xor
pusha
pusha
xchg
inc
jl
dec
push
xchg
push
cmpl
das
mov
repnz
or
pop
xor
adc
fwait
cmpb
je
push
adcl
mov
xor
movl
add
add
or
pop
xlat
jnp
pop
pop
cmpb
adc
adc
jmp
cld
mov
xor
jo
jbe
jae
inc
adc
stos
add
test
pop
add
js
mov
test
out
frstor
or
cmp
jne
pop
js
inc
fadds
xlat
jmp
sarb
negb
mov
pop
test
cmp
pop
rorl
inc
std
cmc
mov
xchg
mov
mov
cmp
ret
jne
or
or
or
aaa
js
test
dec
or
not
loopne
sbbl
push
sub
mov
mov
or
sbb
mov
mov
loopne
clc
dec
lea
mov
fwait
or
mov
sub
clc
jne
pop
adc
divb
lock
movb
ds
or
mov
testl
xor
fwait
fwait
adc
je
add
lods
data16
cmc
sub
inc
movsw
jmp
rcll
fs
jg
mov
iret
adc
test
decb
adc
cmp
sbb
popa
arpl
adc
add
outsb
push
add
jp
jbe
call
movb
mov
movsb
sbb
imul
insb
inc
test
sarb
dec
stos
sub
add
jmp
or
inc
mov
add
mov
fwait
push
cmp
add
adc
xlat
and
scas
das
sbb
aam
mov
test
ja
repz
cmovnp
push
push
jl
je
pushl
add
and
push
test
out
loope
or
push
rcrl
inc
cmp
xchg
push
jne
not
adc
xchg
inc
jge
or
insb
pop
inc
and
sbbb
push
adc
cmc
jge
lock
adc
and
imul
je
pcmpgtb
int3
jecxz
imul
or
fs
xchg
sbb
add
add
adc
jo
insb
mov
enter
push
push
inc
lods
loopne
sbbl
and
lea
or
enter
or
sbb
mov
lea
sub
fldenv
add
xor
push
repz
jo
push
push
popf
or
push
mov
insl
ret
mov
push
xor
xchg
sub
lahf
in
dec
mov
cmp
outsb
int
pop
push
sti
xor
add
xor
in
jnp
loope
sbb
or
adcb
jl
sub
ret
dec
jp
jne
call
push
fwait
sub
inc
fimull
xor
push
scas
dec
and
xlat
xor
sbb
xchg
lods
dec
xchg
pop
push
imul
in
fdivrs
hlt
cmp
pop
sbb
jae
adc
or
dec
mov
ret
mov
out
pop
mov
sbb
enter
dec
and
xor
sbb
jmp
jmp
sbb
fmuls
lret
add
cmp
int3
lods
push
fiaddl
in
in
push
lea
inc
pop
fwait
hlt
add
mov
jmp
lret
aaa
jo
push
dec
popa
cmp
and
adc
jp
xor
std
add
iret
xor
stos
push
pop
sub
pop
lret
lea
sbb
push
sbb
pop
adc
inc
fnsave
dec
test
inc
leave
les
fwait
mov
sub
adc
call
and
push
push
xchg
sbb
push
fidivs
jmp
js
scas
div
leave
cli
xchg
insl
push
inc
push
aas
jg
and
fs
addb
cmc
mov
insl
xor
ror
addr16
sub
push
sbbb
ret
test
pop
xchg
dec
pop
xchg
mov
scas
and
adc
cmpsl
push
repz
mov
sub
xor
adc
sub
sti
push
push
push
cmp
xchg
ds
xor
rcrb
shlb
lock
sub
hlt
jmp
sarl
cltd
je
pop
rorb
rolb
inc
cli
fisttpll
cs
jne
pop
mov
pop
mov
sbb
cmpsl
or
xor
jbe
dec
mov
mov
inc
jp
mov
jo
or
jp
clc
dec
hlt
xor
push
sbb
pop
mov
in
push
xor
jb
shlb
adc
fadds
sbb
push
cmp
pop
pop
repnz
hlt
lahf
push
sbb
and
push
fdivrs
outsb
push
dec
sbbb
nop
sbb
jo
push
sbb
sub
lahf
es
cmc
int
scas
cmp
inc
push
rcrw
sbb
cmp
loop
adc
adc
daa
mov
jo
jnp
out
add
pop
sti
sub
mov
xchg
jo
nop
xor
dec
sbb
xchg
int3
push
mov
inc
pop
cmp
sbb
xchg
mov
mov
rcll
push
mov
sbb
hlt
push
adc
or
movsl
pop
sbb
sub
push
movsb
inc
adc
pop
sahf
jmp
movl
adc
hlt
sbb
adc
sbb
inc
sub
imul
fs
fs
sti
addb
pop
es
xchg
pop
mov
mov
inc
sub
das
and
test
hlt
xor
add
into
xchg
lea
cmp
jns
rorb
inc
sbb
or
inc
in
rcll
into
dec
daa
or
mov
testb
lcall
and
cmc
and
add
ret
gs
jo
mov
movl
inc
xor
xchg
jno
xchg
punpcklwd
dec
pop
dec
inc
rcr
or
sahf
jb
jb
scas
ja
jo
add
cld
dec
loope
or
mov
cld
mov
clc
push
mov
lds
adc
sbb
cld
or
cld
fnsave
push
mov
push
lock
jecxz
and
add
inc
or
addr16
in
cmc
push
jne
push
mov
loope
add
mov
sahf
enter
cwtl
shrl
lea
fdivrs
pusha
aas
in
test
bound
subl
mov
arpl
test
mov
imul
leave
pop
mov
je
shlb
lock
popa
push
nop
call
push
push
loope
test
add
rclb
loopne
in
pop
xchg
sbb
pop
aad
pop
mov
jae
push
pop
sbb
and
in
add
adc
je
dec
mov
push
push
mov
dec
fcoms
sub
mov
push
sti
xor
sub
movsb
lds
dec
jecxz
les
mov
adc
clc
inc
inc
lret
push
jbe
mov
push
push
xor
jns
es
insl
ret
xchg
data16
or
xor
add
inc
add
inc
incb
push
popa
enter
mov
fs
add
ljmp
xchg
or
cmc
iret
mov
jno
sub
sbb
inc
outsl
daa
jae
mov
pop
stos
mov
dec
movsb
les
rol
xor
xchg
sarl
mov
pop
add
add
pop
negl
dec
pop
iret
movsb
stos
cmp
aam
popf
mov
mov
mov
cmp
dec
pop
sbbb
inc
rclb
fnstcw
into
pop
jno
aam
ljmp
addl
adc
xor
pusha
push
aam
inc
adc
inc
or
add
insl
or
pop
push
or
fadd
les
dec
mov
test
pop
int
aaa
out
xor
or
xor
rolb
insb
popf
xor
adc
mov
and
pop
je
push
and
js
and
pop
cltd
gs
dec
rol
fiadds
call
out
mov
or
push
mov
insb
ds
in
je
mov
xchg
cmp
sbb
inc
mov
and
xchg
dec
out
xor
movups
aaa
or
iret
ret
mov
insb
cwtl
sub
dec
jl
aam
cmp
iret
adc
push
push
dec
or
push
push
mov
adc
mov
rcrb
insl
push
insb
enter
pop
adc
push
add
mov
push
addl
inc
js
inc
leave
popf
imul
add
loop
pop
ja
push
or
dec
daa
lret
movzwl
popa
xchg
dec
cmpsl
shrl
das
leave
sbb
ret
add
sbb
add
add
pop
mov
movb
xchg
adc
inc
movsb
push
sbb
xor
enter
cmpsb
pushf
cld
dec
out
cmp
out
dec
add
orb
mov
hlt
push
gs
mov
ficomps
adc
and
or
mov
dec
push
inc
cmpsb
test
stos
and
test
hlt
fcmovnbe
cwtl
mov
movsb
sub
pop
xchg
mov
mov
mov
ret
enter
test
call
pop
push
out
in
mov
xor
fstpl
xchg
and
pop
jmp
lret
mov
pop
mov
call
test
aaa
xchg
sbbl
sti
mov
dec
pop
sub
insl
jb
cltd
cmp
mov
negb
sbb
and
inc
mov
dec
adc
in
int3
mov
testl
mov
je
or
repnz
mov
cmp
into
sbbb
dec
repnz
xchg
jo
roll
inc
nop
sbb
add
adc
dec
mov
mov
inc
sub
popl
nop
push
push
sbb
rep
stos
inc
xor
je
sbb
shlb
jp
pop
and
adc
insl
or
inc
push
add
inc
mov
insb
cmp
lahf
test
sbb
and
jecxz
sub
sub
lea
cs
or
sbb
push
nop
je
mov
stc
push
dec
pop
sub
dec
mov
stc
inc
inc
mov
inc
loopne
enter
push
push
fcompl
push
sub
add
mov
mov
push
cwtl
stos
xor
loop
sub
jns
push
data16
and
cmc
xor
mov
stc
cmp
xchg
sbb
int
add
or
xchg
xor
test
xor
aas
es
hlt
cmp
je
or
adc
pop
adc
lods
add
sbb
fildll
pop
dec
ficomps
mov
lock
mov
stos
cmp
mov
imul
dec
js
cltd
jo
jne
je
stc
push
xor
lahf
add
scas
bound
adc
mov
cmp
or
aam
xorl
jecxz
daa
in
dec
or
cmp
mov
sbb
js
sbb
cli
popa
mov
cmovo
sub
imul
push
or
stos
nop
leave
lret
les
xor
or
adc
enter
sbb
push
fs
icebp
push
adc
xchg
jns
xchg
or
pop
jmp
add
fldcw
pop
or
lods
xor
lods
pop
das
sbb
sarb
gs
je
arpl
push
ds
add
popf
subb
xchg
gs
fucomi
jg
jge
jmp
movsbl
arpl
je
movl
mov
cmpb
push
jne
xorl
add
stc
jecxz
loopne
add
les
add
add
test
addr16
rcl
sub
lods
dec
sbb
xchg
lea
push
pop
jp
xchg
inc
les
adc
push
add
incb
jnp
int3
pop
pop
mov
xor
adc
fs
cwtl
and
call
nop
ret
das
pushf
popa
xor
imul
adc
push
pop
test
dec
or
dec
xchg
faddl
cmp
dec
inc
inc
adc
fildl
aas
arpl
cmp
add
mov
or
leave
aad
or
shll
stos
sbb
and
or
adc
pusha
aam
arpl
pushf
add
test
stos
mov
xor
xchg
pop
leave
pop
pusha
jae
adc
add
dec
sub
fistps
pusha
pop
inc
jo
jg
aas
mov
push
add
sarl
dec
stc
or
inc
push
aam
xor
add
jle
push
mov
pop
fdivs
cmp
jne
mov
mov
sbb
jmp
or
out
jmp
sti
xor
sub
push
mov
sbb
add
mov
cmc
adc
adc
mov
pop
adc
xchg
adc
cmpb
jo
into
sub
movb
push
xor
mov
or
and
cmp
or
inc
sub
sub
add
cmpps
in
out
movsl
jo
push
jmp
pushf
je
cmp
adc
shrb
addr16
cmpsl
xor
jne
pop
adc
mov
dec
pop
data16
mov
aad
push
or
dec
aas
sub
cmp
pop
jae
sub
or
inc
add
imul
mov
punpckldq
lods
jp
jle
and
jo
je
push
mov
in
jno
push
inc
clc
xchg
pop
cmp
insl
sti
jne
pop
pop
add
or
and
or
sub
push
mov
fsqrt
xchg
sbb
push
lahf
pop
rolb
aas
pop
insb
push
inc
das
cmp
sub
mov
mov
adc
add
inc
pop
push
aam
pop
jne
les
pop
or
movsl
push
loope
dec
cmp
push
push
xchg
mov
pushf
imul
and
cltd
inc
or
jmp
test
inc
mov
shll
js
and
enter
je
ds
cmp
pushf
push
inc
mov
or
add
inc
dec
insb
sub
xchg
dec
dec
insb
dec
push
cs
lods
adcl
and
es
insb
test
add
arpl
lods
dec
movsb
mov
or
hlt
inc
sbb
pop
fwait
dec
js
mov
dec
ljmp
lock
sub
faddl
adc
psubusb
xor
les
xchg
sbb
mov
push
push
fsubs
jne
xor
loopne
xor
leave
les
cmp
andb
xor
adc
and
inc
sbb
and
sbb
xchg
push
sub
fistl
movl
sub
inc
pusha
movl
and
insl
and
jmp
in
mov
shlb
jp
or
pop
mov
out
outsl
jl
mov
int
pop
push
or
cmp
xor
call
nop
out
popa
lock
push
push
add
int3
cmp
dec
iret
lock
jne
popa
adc
and
ljmp
call
movsl
sbb
or
or
pop
mov
cmpl
push
addb
add
mov
xor
loopne
icebp
jl
pop
mov
adc
test
mov
mov
test
adc
pushf
xchg
pop
push
pop
pop
pop
inc
loop
xor
sbb
out
xor
fsubr
aaa
mov
adc
dec
call
inc
aad
mov
int3
mov
push
xchg
cwtl
push
or
fstp
fists
mov
loop
add
das
xchg
or
push
mov
sub
push
mov
cmpsb
pop
outsl
mov
adcl
daa
pop
fs
sbb
sbb
mov
ret
out
dec
popa
fistpl
cmp
mov
pop
inc
fadds
pushf
rcrb
pop
mov
mov
pop
mov
movsb
xor
loope
push
xor
scas
es
sbb
mov
arpl
cltd
or
sbb
setb
orb
add
ret
mul
and
dec
jno
jg
or
inc
add
cmp
jno
test
aaa
add
aam
add
xchg
jp
jmp
add
das
inc
pop
or
arpl
dec
lea
or
ret
or
pop
add
sbb
repnz
das
push
jns
lret
or
daa
mov
and
or
xor
es
nop
xor
jnp
xor
jno
insl
pop
loop
jmp
jo
gs
cmp
and
pop
loop
inc
jecxz
lods
and
adc
jne
xor
xchg
imul
enter
adc
mov
mov
inc
sbb
rcrb
mov
imul
mov
in
mov
addr16
dec
jge
adc
mov
xchg
push
dec
ja
or
xor
ja
or
adc
shlb
out
cli
lret
loop
addl
aam
mov
inc
mov
pop
cmc
sub
nop
mov
cmp
add
add
mov
arpl
adc
pushl
or
scas
sub
loopne
int3
dec
les
or
clc
mov
orl
or
in
cmpsb
push
mov
in
rol
clc
enter
jno
ljmp
ja
mov
push
adc
jb
mov
movsl
adc
and
jne
dec
mov
pop
les
lods
shrb
rorb
mov
repnz
mov
mov
movl
xchg
cmp
add
and
std
jmp
mov
lods
cli
inc
mov
dec
ret
xor
jns
stc
test
dec
sbb
sub
cmp
inc
push
xchg
repz
aaa
xchg
dec
pushf
adc
push
or
jbe
or
mov
in
sbb
sahf
hlt
adc
cli
daa
test
aas
rclb
pop
adc
adc
adc
adc
xor
mov
pop
sub
xchg
data16
push
or
imul
invd
mov
out
xor
inc
mov
fs
xchg
fs
outsl
or
or
cltd
mov
sub
pop
push
pop
mov
or
imul
and
xsha256
cmpsb
adc
aaa
outsb
push
sbb
pop
pop
iret
sbb
test
adc
daa
lret
push
xchg
sbb
cmp
jno
mov
cmp
inc
inc
stc
or
clc
les
adc
push
pop
imul
andl
xchg
icebp
lea
incb
loope
lea
clc
dec
mov
add
cmpb
je
arpl
jo
add
inc
xor
cmp
jecxz
pushw
fisubrl
add
sub
fisttpl
pop
add
pop
and
add
pop
je
test
lock
push
das
or
inc
aas
push
sbb
adc
xchg
dec
adc
push
lahf
adc
fldl2e
jg
pop
pop
jne
jns
sbb
sub
insb
push
inc
pop
test
adc
mov
jnp
adc
sbb
fwait
orl
xor
cmc
fsubrs
and
add
mov
sub
inc
cltd
cmp
in
sbb
xchg
adc
jne
push
sbb
mov
inc
sbb
mov
adc
outsl
cwtl
or
dec
loopne
inc
outsl
add
inc
shlb
or
dec
or
push
or
adc
popf
xchg
add
dec
add
cmp
jae
aam
loope
lock
add
pop
xchg
sub
imul
sti
mov
pop
adc
cmovns
ss
jnp
inc
insl
and
mov
notl
stos
shl
lea
fmull
pop
icebp
mov
sub
and
add
mov
cmp
dec
mov
mov
bnd
cvtdq2ps
pop
or
inc
mov
xchg
test
mov
addr16
mov
repz
push
loope
test
rcrl
jp
pop
cmp
dec
or
lret
pop
adc
ret
or
jecxz
lds
and
insl
test
jae
push
imul
jl
dec
bound
xchg
xlat
cltd
jne
pop
add
cli
fs
pusha
repnz
or
adc
and
leave
adc
adc
in
lock
push
pop
cmp
jg
sbb
jg
jmp
mov
sub
aas
in
push
push
sbb
test
dec
and
cmp
addl
cmpsb
cmp
pusha
repnz
rcll
push
jne
cmp
je
xor
jp
or
lret
and
add
mov
push
lods
jne
lea
dec
push
stos
test
jnp
fldenv
push
xlat
insl
dec
mov
or
adc
in
cld
xchg
mov
or
add
xchg
aaa
mov
pop
add
dec
sub
js
adc
xchg
push
dec
cmpsb
ret
nop
cmp
pop
jge
push
adc
fs
dec
imul
movsb
push
loop
mov
das
push
and
mov
nop
nop
and
sub
sbb
pop
cmp
jge
push
bound
loop
pop
xorb
enter
aaa
rorb
in
pop
fs
push
push
lcall
xchg
push
jle
ljmp
mov
and
and
ret
fs
pop
jnp
enter
dec
inc
stos
push
pop
inc
push
adc
push
dec
dec
push
movsb
and
and
mov
pop
dec
scas
movsb
mov
cmp
sub
aam
test
inc
lea
jns
das
arpl
repnz
mov
inc
addl
xor
inc
push
arpl
xchg
push
mov
push
and
pop
xor
and
mov
add
das
dec
inc
jb
inc
in
inc
mov
rorb
dec
or
fldt
adc
pop
and
insb
div
sbb
inc
inc
fmull
inc
and
sar
rolb
cmp
jmp
mov
adc
sub
and
popa
lret
pop
cmpb
aaa
add
orb
pop
push
movsl
adcl
mov
sub
repnz
arpl
dec
add
inc
aas
mov
mov
and
cmp
inc
jecxz
xchg
fs
mull
cmp
mov
push
jno
inc
cmp
nop
xor
lcall
xorl
adc
decl
mov
adc
in
xchg
out
push
mov
sub
mov
cmp
cmp
sbb
pop
sbb
call
jmp
rorb
xchg
push
mov
and
pop
mov
xor
xchg
ja
mov
pop
and
inc
loopne
pop
movsl
ja
push
or
inc
xchg
inc
xchg
inc
fst
arpl
cmp
das
push
arpl
add
dec
sub
inc
xchg
or
add
sti
mov
add
cmp
pop
fisubrl
add
je
scas
cmp
xchg
inc
sub
cmc
stos
dec
and
cmpsb
lods
cmp
in
test
add
testb
pop
or
push
xor
int3
pop
das
add
cmpsb
mov
pusha
or
loope
or
nop
lret
pop
insb
jne
pop
pusha
push
adc
mov
and
mov
loopne
lret
add
in
mov
ja
cwtl
in
lret
add
add
or
inc
or
out
xor
adc
icebp
mov
or
pop
lock
push
decl
or
push
pop
sub
nop
dec
dec
fs
mov
sbb
sub
adc
pusha
insl
pop
in
jnp
and
dec
or
pop
nop
mov
cmp
sti
lret
andb
or
xorb
mov
add
in
fldl2e
add
jle
inc
dec
push
push
sub
lret
cmp
repz
push
xchg
outsb
das
paddsb
add
ret
rol
stos
mov
push
call
imull
rcll
in
push
faddl
popa
or
xchg
test
in
dec
sub
mov
xchg
testl
push
push
jnp
adc
pop
add
adc
dec
or
mov
shrb
mov
js
push
cs
and
mov
mov
pushl
mov
push
xchg
idivb
dec
xor
cwtl
mov
add
pushf
repz
pop
lods
lods
movb
or
mov
scas
xor
test
sahf
sbb
xor
and
sub
adc
sub
xchg
bound
bound
jns
enter
xor
xor
jp
lea
push
cmp
inc
push
ja
add
dec
test
and
imul
or
addl
xorl
addb
insb
movl
or
xchg
in
inc
push
js
inc
push
adc
cmp
fistl
mov
cltd
adc
adc
mov
dec
xchg
inc
or
fwait
ss
test
orps
xor
stos
scas
movsl
and
js
push
cwtl
aas
jns
mov
loopne
outsl
and
mov
mov
adc
stc
movl
adcl
dec
jb
bound
sub
lretw
andb
add
pop
jl
jo
scas
pop
pop
cmp
pop
js
inc
sub
rcrl
or
movsl
addl
mov
push
jle
add
sbbb
cmp
jne
leave
popa
ds
cmp
mov
shrl
or
mov
jns
loopne
push
mov
push
adcb
pushl
add
pop
lcall
jae
ret
addl
ja
pop
sub
pushf
sub
adc
dec
push
inc
mov
mov
and
lock
ss
push
adc
pop
sub
or
and
pop
jmp
shr
js
icebp
pop
cmpsb
int3
pop
arpl
ret
add
inc
cmpsl
cs
pop
xor
daa
mov
push
nop
inc
or
pop
fs
fidivrl
xor
and
mov
sbb
jl
and
sbb
std
push
push
pop
push
jmp
xchg
inc
lods
mov
adc
fs
lods
shll
adc
xchg
or
test
xchg
mov
shrl
inc
xor
loope
in
jb
or
or
or
sbb
cltd
inc
dec
ret
out
in
mov
xchg
idivb
pop
mov
pusha
inc
xchg
or
and
stos
js
jne
mov
sub
push
sbb
dec
rorl
sbb
cltd
inc
in
fsubr
fwait
in
mov
incb
data16
mov
data16
push
sub
dec
repz
sub
push
or
xchg
adc
xchg
shlb
add
js
int
mov
push
es
push
pop
and
pusha
sub
test
loopne
jne
inc
pusha
in
lret
add
mov
mov
dec
dec
repz
fisubs
pop
lcall
cmc
jns
and
rcrl
inc
cmp
jg
xchg
or
sub
in
pushf
and
jmp
in
and
jne
mov
add
nop
stos
or
int3
push
bound
adc
cld
mov
jmp
push
ret
jmp
mov
dec
mov
jg
push
or
mov
mov
pusha
push
popf
mov
inc
lahf
nop
inc
cmp
and
scas
add
in
leave
mov
sbb
adc
inc
cmp
cmp
mov
in
or
xchg
pop
test
inc
push
inc
sub
cltd
pusha
addr16
clc
cmpb
arpl
sub
data16
push
lcall
stos
rorb
mov
push
cmp
adc
pop
movsl
add
lret
xchg
or
add
fdivs
push
out
lock
ret
pusha
and
popa
xchg
or
out
fistl
add
pop
ret
arpl
xchg
inc
ret
in
push
shlb
push
add
ja
fs
adc
jo
or
inc
mov
push
push
add
xor
rcrl
inc
sub
pop
jns
push
lods
and
push
loopne
shll
mov
out
dec
push
in
aam
dec
xchg
movsb
push
mov
enter
sbbl
push
enter
sbb
inc
cmp
add
cmp
sbb
push
test
xor
lret
or
and
push
sahf
lcall
inc
and
jo
inc
mov
pop
scas
and
sub
inc
lahf
push
inc
sbb
cmp
imul
sub
inc
lret
sahf
dec
inc
mov
ret
inc
jg
push
in
in
lret
shrb
xor
stc
adc
cmp
loope
and
add
pop
xor
mov
push
adc
cmovno
push
inc
or
jg
rcll
je
xor
sub
add
push
js
fmuls
cmpsb
or
rcl
xor
in
leave
push
enter
incl
aam
mov
or
xlat
je
scas
stos
push
and
or
and
pop
fdivrp
out
fnstcw
dec
cwtl
call
mov
inc
and
movsb
sahf
hlt
and
mov
mov
je
aad
fs
cmp
pop
int
push
pop
sub
adc
jecxz
sti
mov
inc
rclb
ret
inc
push
xor
jo
sub
xor
clc
mov
addr16
jecxz
mov
add
shlb
frstor
fldenv
pop
and
cmp
jo
pusha
adc
push
cwtl
in
and
out
inc
popf
mov
and
and
fs
sahf
push
pushf
in
les
jae
mov
push
lret
mov
es
or
test
mov
mov
pop
test
aam
aad
dec
cmpsb
in
jecxz
call
loope
divl
add
sub
shr
inc
and
push
xlat
lcall
mov
pop
pop
movsb
or
aad
int
inc
ljmp
sub
pop
push
ret
push
mov
pop
mov
je
or
mov
addr16
in
sbb
pusha
incl
fs
mov
xchg
cmp
sbb
and
loope
sub
and
add
jnp
mov
stos
lods
dec
or
cwtl
or
push
inc
cltd
and
out
push
ss
add
add
inc
dec
push
adc
rclb
xorl
lcall
popf
add
mov
sbb
inc
test
in
adc
sub
xchg
and
rorl
jne
push
push
sub
js
addr16
dec
sub
jge
add
push
bound
jg
je
imul
shrl
add
inc
pop
les
xor
sbbb
mov
test
out
insb
daa
orl
js
pop
xchg
dec
fs
xchg
and
mov
jae
jmp
bound
scas
pop
xchg
shll
jo
nop
outsl
and
shrb
shrb
add
insb
cmp
cmpsl
popa
pop
push
mov
bound
pop
lcall
cmp
add
mov
arpl
imul
xor
mov
inc
cmpb
xor
push
mov
add
mov
adc
jne
adc
push
fmul
lcall
insb
les
mov
mov
and
mov
xchg
loopne
jo
aam
lods
lret
xor
ret
mov
out
mov
xchg
sbb
pop
insb
pop
pop
cmpsb
inc
add
xor
inc
dec
cmp
rcrl
mov
sbb
fisubl
push
xchg
dec
dec
adc
push
jnp
repnz
jns
push
add
popa
insl
xchg
leave
mov
and
push
frstor
fcoml
mov
adc
cmp
inc
mov
ljmp
push
outsb
sbb
sbb
fisubrl
loope
lahf
loopne
mov
inc
pop
int3
or
cld
mov
xlat
fs
or
and
cltd
shlb
fcomp
mov
gs
sbb
add
push
add
faddl
mov
loop
fmul
mov
cmp
popf
or
mov
loop
test
pushf
bound
add
xchg
mov
aad
cmpsb
pop
js
mov
adc
jecxz
dec
lret
cmpsb
jmp
cmp
cmpl
nop
push
ja
adcl
mov
jecxz
push
pop
inc
xor
jnp
add
jl
orl
jg
add
sbb
lock
mov
xchg
dec
dec
in
lea
and
mov
inc
das
enter
imul
cmp
fdivrl
inc
loope
sbb
inc
movd
je
jae
push
addr16
jbe
das
iret
jne
or
adc
adc
cmp
hlt
push
add
ret
jmp
add
pop
andb
push
and
inc
aas
sbbl
pop
jmp
clc
jno
add
xor
push
adc
stc
xchg
push
add
push
mov
into
dec
cmp
sti
dec
sbb
inc
ret
lods
inc
call
aas
and
add
je
push
mov
or
push
addr16
or
xor
aas
insl
fs
add
mov
and
aas
mov
add
inc
nop
sub
adcb
mov
inc
adc
pop
call
mov
cmp
je
ror
mov
ds
sbb
xchg
add
inc
mov
mov
sub
ljmp
add
daa
push
pusha
das
fbld
imul
loop
sbb
dec
andb
loop
test
xor
sbb
les
test
rcr
jmp
je
lret
jle
cmp
xor
lock
inc
in
mov
jne
lods
mov
arpl
add
push
jecxz
adc
cmp
cmp
or
mov
dec
daa
adc
push
add
and
add
mov
movmskps
pop
pop
movsl
call
and
std
js
jb
mov
pop
adc
or
bound
push
or
or
sbb
pusha
jno
icebp
sub
xchg
jecxz
insl
cmp
popa
icebp
cmp
cmpl
or
testb
cld
or
jb
insb
adc
int
cltd
sub
jno
push
ja
mov
nop
das
dec
cmp
push
nop
mov
in
push
or
je
daa
pop
cmp
mov
and
in
inc
xchg
sbb
add
pop
leave
add
cmc
lds
or
adc
sti
add
and
cmp
flds
mov
mov
xor
icebp
or
push
das
sub
mov
add
lds
add
inc
lds
mov
out
and
insl
add
insl
in
loop
xor
lahf
mov
loope
lods
inc
add
xorl
inc
cmp
mov
pushf
orl
movl
add
sbb
push
addr16
push
push
push
inc
aam
xchg
push
sbb
lds
jle
lock
push
cmp
xor
pop
adc
sub
mov
mov
mov
lahf
push
and
xor
jbe
pusha
sub
add
dec
jne
mov
addl
add
pop
in
cmp
icebp
sbb
cmp
jne
int3
pop
ret
fdivrs
add
add
xor
in
inc
push
rcll
pop
add
push
lock
enter
or
je
test
sbb
sbb
xchg
jmp
add
inc
cmp
std
jns
add
add
and
mov
jne
pop
js
mov
jo
jecxz
adc
xlat
jo
cmp
int
cld
push
sbb
add
sbb
cmp
push
testb
ds
jns
push
lret
pop
dec
jge
mov
mov
add
fs
arpl
xchg
dec
jnp
push
adc
pusha
mov
ret
push
sub
dec
lds
clc
dec
sbb
lea
push
sbb
inc
mov
pop
sbb
clc
inc
dec
int3
mov
rorb
call
pusha
lods
inc
cltd
xchg
xor
les
add
aaa
push
out
loopne
push
dec
fs
setno
dec
fcoms
sub
xchg
push
les
xchg
pusha
repnz
ret
inc
cmpl
mov
push
xor
jns
jno
and
xchg
push
andb
push
pop
or
shrb
add
in
insb
lret
int3
xor
push
xchg
push
and
xor
loop
mov
les
je
lcall
call
out
rolb
cmc
fsts
pop
out
lds
mov
test
xchg
dec
icebp
jmp
push
mov
mov
ds
mov
pushf
or
pop
dec
orl
xchg
dec
sbb
vandnps
leave
adc
lahf
pop
pushf
add
aam
cmc
adc
cmp
push
leave
xchg
mov
or
rorl
test
mov
sub
push
test
push
jecxz
adc
xlat
mov
pop
hlt
push
jle
mov
pop
cmp
sub
pop
and
or
rclb
cmp
pop
cmp
dec
jnp
mov
fbld
xchg
sbb
add
mov
add
cld
out
push
add
add
shl
mov
sub
inc
ret
jge
cmpsl
mov
pop
xor
rolb
jo
xor
push
inc
inc
ret
add
adc
lea
negb
rcrb
cli
jbe
jne
imul
or
enter
mov
add
jae
mov
add
sar
stc
add
push
sub
std
sub
rcr
pop
sub
cmp
sarb
imull
lock
lods
push
and
call
and
sub
in
roll
mov
sbb
imul
or
pop
xchg
mov
or
pop
and
dec
sti
addl
into
mov
adc
das
sub
mov
ja
dec
jecxz
add
insl
mov
aaa
inc
pop
ja,pn
ja
lcall
ret
add
ret
jl
sub
push
push
lock
sbb
lret
push
push
insb
mov
pop
jmp
add
cmp
push
dec
jo
stos
scas
int3
pop
imul
push
pop
enter
mov
test
popa
sar
inc
popa
xor
loope
adc
imul
jae
rcrb
icebp
push
sub
ds
push
stos
or
and
push
rcrb
iret
sbb
or
mov
pop
mov
xor
xor
and
add
popf
imul
lea
shl
test
je
mov
inc
fs
or
sub
inc
cmpl
sbb
xor
js
nop
or
nop
push
lea
mov
fwait
push
sbb
sub
imul
mov
add
cs
mov
movsb
mov
sbb
mov
inc
mov
int
add
hlt
cs
mov
push
lret
adc
pop
clc
add
les
jo
jecxz
xchg
cld
add
push
lcall
mov
jmp
inc
xchg
scas
sar
dec
je
add
ss
in
push
adc
add
test
popa
lret
push
add
xchg
mov
mov
push
imul
int3
js
das
mov
cmp
call
mov
inc
testb
fs
push
xchg
jmp
cltd
lods
add
das
les
repnz
sarb
push
movsb
pop
sub
int
insb
dec
aas
je
mov
repnz
and
les
mov
xor
dec
jb
rolb
pop
mov
lea
add
xchg
xchg
aam
addr16
pusha
popa
in
push
mov
bound
lods
gs
adc
and
repnz
movl
enter
popa
cwtl
xchg
and
loope
or
jnp
lea
std
cmpsl
nop
xchg
popl
cmp
div
mov
dec
fildl
fmull
pop
repnz
mov
pop
xor
xor
and
data16
cltd
add
adc
mov
xor
pop
inc
cli
ljmp
fcoms
xor
inc
sarb
loopne
les
jle
push
in
sbb
jmp
orb
xchg
pushf
push
bound
jne
xchg
fwait
push
and
or
insb
out
test
jge
xor
lahf
lock
push
fstpl
sub
mov
dec
push
adc
bound
mov
rcrl
xchg
mov
push
data16
cmp
cld
outsl
inc
pop
hlt
inc
cs
lea
or
sti
subl
add
fcomi
push
mov
aam
push
enter
arpl
mov
push
add
push
sbb
sub
xor
mov
sbb
adc
sbb
sbb
imul
push
dec
pop
mov
pop
les
xor
inc
dec
subl
push
add
lar
bound
cmp
pop
ljmp
pop
stc
xor
jmp
push
push
std
mov
sub
sbbb
ret
xchg
cmp
hlt
rcll
movsl
pusha
xchg
mov
in
fistpll
pop
jp
cmp
mov
jle
fstpl
aas
roll
cmp
push
dec
push
jle,pt
cmp
dec
js
lock
push
push
xor
fmuls
call
push
adc
xchg
fldcw
xchg
mov
or
lods
pop
test
sbb
jmp
push
nop
and
aam
inc
or
pop
push
ljmp
mov
or
add
scas
jne
mov
and
xchg
jne
cmp
jb
iret
sub
push
push
add
push
cmp
insb
arpl
imul
outsl
push
and
clc
arpl
btc
push
xor
inc
dec
arpl
aas
mov
and
lcall
jge
inc
sbb
in
loopne
lds
mov
addr16
fiaddl
test
mov
sbb
jl
adc
hlt
pop
add
push
jb
push
loopne
sub
push
scas
movb
fistpl
lea
xchg
loopne
sbb
lock
faddl
sub
add
inc
xor
cmp
cmp
jp
and
add
adc
add
out
jo
mov
cmpsl
icebp
sbb
push
push
sbb
sbbl
or
jo
stc
pop
inc
iret
cld
add
adc
push
cwtl
mov
and
sbb
adc
cld
bnd
pushf
out
adc
mov
insl
add
or
xor
loop
xchg
pop
out
iret
add
popf
cmpsb
movb
les
xchg
jb
or
add
popa
sub
inc
inc
jl
push
add
fcoms
jle
pop
mov
addl
pop
xor
xchg
adc
aam
js
outsb
mov
fs
xchg
stos
sub
jne
roll
gs
inc
dec
das
loop
cmpsb
mov
lods
mov
testb
jg
je
test
imul
pop
ds
inc
je
nop
ret
gs
add
cld
xor
push
mov
dec
jo
scas
xor
jle
lods
pop
cwtl
sub
out
push
inc
jecxz
mov
test
and
add
jmp
cmp
nop
outsl
cmpl
inc
cwtl
imul
aas
js
js
addr16
inc
push
xor
inc
xchg
xor
loope
fmuls
bound
mov
mov
pop
sub
adc
pop
inc
mov
jle
jle
out
add
pop
xchg
push
pop
pop
aam
cmpb
jne
stos
andl
pop
cmp
lods
mov
jb
adc
test
orl
xchg
push
sub
mov
and
lret
sbb
fisttpl
xchg
int3
push
and
add
aas
dec
pop
dec
or
scas
cmpsl
push
enter
and
mov
push
or
lea
fiaddl
arpl
popf
push
adc
inc
cmp
in
sbb
movsl
and
sti
or
mov
adc
gs
xor
mov
aaa
aas
add
mov
orb
dec
and
test
test
aam
jecxz
push
andl
mov
inc
xchg
dec
xchg
stos
mov
jge
dec
push
in
mov
or
and
cltd
push
push
or
push
xchg
sbb
cwtl
lcall
cld
orb
jne
push
or
and
mov
rorl
xchg
pop
adc
icebp
stos
andl
adc
jecxz
adcb
mov
subb
pop
jo
leave
xchg
or
test
push
in
lcall
push
inc
faddl
jle
jne
mov
dec
xchg
sbb
popl
lock
out
xor
or
fdivs
push
push
ja
mov
mov
loop
sub
mov
mov
lcall
and
pop
pushf
es
call
call
mov
or
pusha
and
in
lea
mov
mov
and
ss
repnz
or
or
inc
xchg
outsl
imul
mov
xor
imul
and
cwtl
mov
iret
mov
cmp
add
cmp
in
or
arpl
or
push
cmp
sub
pop
jne
adc
mov
add
test
push
push
cwtl
push
ja
mov
adc
pop
pop
adcb
jbe
jns
pop
and
les
into
sbb
call
loopne
sahf
sub
popl
sub
jno
push
lods
rcr
cmp
imul
mov
je
inc
je
je
adc
sti
jne
add
dec
cltd
sbb
push
push
call
int3
sbb
scas
cmp
jle
test
mov
xor
into
popa
test
dec
das
inc
mov
adc
mov
pusha
adc
hlt
cmp
and
dec
js
pop
mov
dec
cltd
mov
daa
jmp
push
mov
push
bound
data16
sbb
shlb
sbb
or
enter
nop
inc
push
sub
jl
add
jo
fcomps
and
adc
pop
pop
sub
stc
popa
inc
call
js
clc
data16
gs
mov
pop
aaa
mov
lods
insl
jnp
push
nop
mov
icebp
aam
pushf
stc
es
inc
pop
pop
add
sbb
in
nop
add
aam
and
mov
mov
adc
pop
or
jbe
mov
mov
ljmp
cld
in
hlt
sbb
pop
or
or
pop
sub
pop
or
add
les
push
mov
push
pop
stos
and
push
ret
imul
push
inc
push
ret
addr16
ret
dec
dec
and
ficomps
mov
add
or
lcall
out
mov
sbb
pop
adc
fcoms
fsubs
adc
ds
daa
repz
fimull
cmp
pop
andb
push
adc
jb
push
fmul
sub
addr16
vsqrtpd
std
fstps
push
and
sub
data16
jmp
add
xchg
inc
dec
pop
fldcw
insb
pop
inc
push
dec
mov
pop
sti
mov
dec
mov
dec
jbe
pop
and
lds
pop
sbb
iret
fsubrl
xchg
hlt
aam
xchg
fcmovu
mov
iret
push
pop
xorb
push
cmp
xor
addr16
mov
icebp
popa
repnz
outsl
test
cmpl
inc
xor
jmp
icebp
dec
jne
adc
push
pusha
adc
repz
and
cmpsb
fwait
or
loopew
add
or
xchg
cmc
cmpsb
dec
jno
mov
inc
cltd
mov
nop
mov
dec
je
je
movsb
ret
push
jmp
cltd
rep
add
add
xlat
nop
insl
push
xchg
dec
push
test
cmc
roll
inc
outsb
je
push
or
fsts
xchg
add
add
push
pop
mov
insl
mov
andl
inc
insb
xor
ss
add
call
aas
sbb
addr16
mov
add
sub
aas
sbb
cmpl
pop
jg
cmp
sahf
ficompl
push
shrl
mov
sub
lldt
sub
cmp
fs
add
push
and
push
adc
test
inc
inc
movsl
nop
dec
mov
ja
dec
mov
dec
xlat
and
adc
add
orb
adc
mov
ret
stos
insb
addb
add
push
mov
out
jno
movsl
push
add
test
pusha
add
lret
cwtl
and
stos
les
pop
jno
rolb
rclb
pop
cmp
mov
leave
xchg
add
nop
cmpsb
jne
adc
and
shll
sbb
push
pop
aas
xchg
push
les
andw
push
insl
add
or
cmp
lea
cmp
nop
test
cmp
xor
cmpsl
cs
or
cmp
mov
pop
mov
or
xchg
inc
cmp
xchg
int3
xchg
xor
sub
orl
pop
into
int3
in
add
pop
xor
loope
jmp
pop
ds
jp
fiaddl
inc
pop
cmp
pop
jg
jo
test
dec
aam
dec
inc
add
push
insl
dec
cs
sub
sub
inc
ds
inc
or
mov
add
push
adc
or
push
lahf
mov
pop
je
js
dec
movb
pop
and
popa
sub
and
lea
and
inc
mov
and
cmp
or
pop
lds
jns
mov
or
rclb
pusha
lods
inc
push
mov
and
iret
sub
cmp
cwtl
xlat
add
xchg
cmpsl
add
push
add
add
test
cmp
push
insl
jmp
cmp
xchg
dec
ficomps
mov
pushw
mov
or
sti
xchg
shlb
jnp
int3
push
mov
movsl
rcrl
pop
movsl
sub
add
jmp
in
xchg
in
fwait
xor
aad
lea
push
mov
or
arpl
add
push
lock
xchg
and
sar
cs
repnz
add
scas
aam
imul
sub
or
fwait
sbb
pop
ds
dec
movb
inc
ja
or
loop
mov
and
mov
ret
push
push
push
mov
jmp
push
andl
or
sbb
jno
repnz
insl
sbb
mov
jp
push
adc
clc
dec
mov
call
push
movsb
imul
push
adc
je
and
mov
xor
push
adc
movsl
jne
repz
and
call
cmp
mov
dec
lock
push
andl
clc
and
add
push
shlb
in
mov
push
out
sub
adc
mov
iret
cltd
xorl
and
sbb
or
push
aaa
pop
ss
pop
lcall
lods
pusha
cmp
or
dec
call
jns,pn
test
je
repz
push
lods
sub
movsb
xor
int3
jns
aam
cmp
pusha
adc
and
sarl
dec
inc
sub
sbb
xchg
push
nop
xchg
inc
pusha
mov
lock
xor
jp
xchg
sub
push
or
pop
test
add
push
cld
sub
fldl
and
or
xchg
xchg
inc
mov
mov
mov
mov
rcr
mov
cmp
dec
iret
jno
and
loopne
add
pop
mov
dec
addb
add
adc
pusha
enter
sbb
ja
outsl
pop
insb
data16
and
sub
fdivl
push
cld
or
movsb
inc
jg
lcall
punpcklwd
adc
ret
cltd
imul
xor
or
dec
push
add
adc
lods
sub
repz
loopne
aam
fisttps
je
sbb
imul
xchg
and
mov
push
pushf
inc
dec
roll
add
gs
sub
test
fidivs
jae
mov
pop
aaa
mov
ret
mov
add
xchg
push
gs
ret
fisubs
and
gs
cmp
sbb
clc
add
es
jle
mov
adc
imul
jae
test
nop
fsts
pushf
inc
insb
insb
fwait
pop
adc
insb
imul
push
xor
cmpb
fisttpl
pop
jmp
and
outsb
add
or
push
push
jle
jne
or
push
sbb
adc
pusha
cmp
gs
cmc
addl
pop
pushf
adc
or
pop
xor
jp
adc
cmpsl
ja
pop
mov
push
xor
mov
xor
daa
mov
push
and
std
push
lods
sub
adc
mov
out
jmp
cmp
sub
cmp
or
jno
xor
mov
inc
jns
mov
and
nop
inc
dec
push
rorl
test
push
dec
mov
fsubrl
pop
mov
adc
and
mov
xor
xor
push
jns
mov
test
push
inc
push
or
rcrb
dec
mov
add
xchg
mov
aam
hlt
imul
sbb
ret
or
xor
imul
xchg
mov
aas
and
dec
mov
push
mov
add
call
jb
aam
jecxz
inc
xchg
or
in
call
xchg
cmp
in
in
pop
int3
les
test
ljmp
loopne
mov
mov
xor
inc
ja
add
dec
jne
test
mov
cmp
push
pop
push
inc
and
mov
scas
xorl
adc
test
adc
add
fisubl
dec
lods
outsb
and
and
test
push
push
jne
sub
adc
push
out
and
mov
nop
push
leave
xor
adc
mov
dec
push
inc
mov
push
mov
add
and
jb
mov
sahf
pop
jl
mov
outsb
pusha
add
mov
mov
scas
mov
stos
cwtl
mov
in
add
orl
dec
add
pop
sub
adc
mov
mov
cmp
and
jne
push
out
or
pop
nop
and
add
dec
or
jbe
or
jmp
xchg
cmp
adc
push
cmp
push
adc
and
xor
xor
xor
fnstcw
leave
push
sub
inc
stos
iret
pop
or
xchg
pop
xor
iret
out
nop
xchg
lods
and
mov
push
dec
and
rcll
xchg
push
jns
dec
cmpsb
sbb
lods
and
or
test
mov
jno
cmp
mov
sub
add
xlat
inc
add
daa
xchg
xchg
rcl
mov
sub
les
push
les
mov
push
dec
pop
mov
xchg
and
test
repnz
cwtl
lret
mov
cltd
adc
mov
cmp
push
data16
rcrl
push
cmp
add
fsubrl
cmpsl
test
loop
or
cltd
fs
fadd
movsb
clc
xor
dec
adc
stos
pop
je
pop
or
loope
or
mov
dec
push
sqrtps
add
jmp
push
push
push
push
push
outsb
or
loope
pop
add
enter
fstpl
add
imul
mov
add
inc
dec
adc
movb
adc
int3
cmpb
testb
mov
lcall
and
mov
arpl
mov
lods
and
sbb
mov
mov
out
jbe
xorl
jmp
and
mov
lea
and
or
xchg
leave
arpl
cmp
pusha
aaa
mov
das
add
jmp
push
jae
xchg
lea
mov
aad
jmp
dec
clc
lcall
push
cmpsb
xor
stos
inc
or
push
jne
sbb
or
test
fcmovne
ficompl
popf
push
jecxz
xorl
push
pusha
inc
mov
push
mov
popa
push
mov
fdivrl
xor
cltd
loopne
outsb
sbb
push
sub
push
outsl
xchg
loope
mov
mov
sub
xor
not
sbb
dec
cs
and
push
in
jl
add
cmpl
lret
faddl
cmp
pop
adcb
cmp
dec
xor
inc
incb
jp
xchg
andb
xchg
dec
inc
sbb
insb
mov
and
insb
insb
test
enter
jo
sbb
nop
or
mov
sbb
cs
or
movsb
dec
sti
jnp
addl
push
jne
push
or
xor
inc
mov
xorb
push
cs
test
insb
clc
imul
and
push
rolb
shr
mov
or
inc
mov
rolb
int3
fs
push
pop
rorb
or
push
test
or
aas
int3
jae
add
sub
xchg
pop
jmp
repnz
pop
cmp
loope
dec
movb
movl
fs
outsb
add
cmp
dec
jle
ret
movb
push
add
sub
jae
sub
inc
or
roll
add
test
and
push
sbb
cmp
cwtl
shl
dec
push
lahf
or
rorb
loopne
sbb
jns
mov
addl
and
mov
leave
les
and
push
dec
aaa
adc
fdivl
aam
or
sbb
adc
add
stc
mov
inc
or
xor
sbb
std
push
inc
jecxz
in
fistl
or
subl
cld
inc
push
lea
or
pusha
dec
cmp
adc
or
aaa
cmp
add
adc
imul
add
sub
mov
and
cmp
bound
imul
xor
add
insl
or
mov
je
insb
pop
nop
inc
push
add
adc
shlb
sbb
inc
pop
cmp
pop
sbb
or
xchg
les
movzwl
sbb
daa
or
clc
lock
sbb
repz
shll
xchg
sub
andb
push
sarl
push
xchg
cmp
adc
adc
insb
test
aam
mov
sub
cmpsb
out
popa
sub
in
xchg
jecxz
popf
pop
xor
sub
enter
shl
push
insl
shll
daa
add
fdivrl
pop
es
pop
or
js
in
mov
or
sbb
dec
sbb
xor
cmp
push
hlt
add
add
adc
xchg
push
into
add
pushf
sbb
mov
ljmp
lods
mov
out
dec
and
or
mov
imul
inc
mov
push
xor
add
imul
test
lds
lods
cmp
xchg
sub
fistps
or
pop
mov
lods
shlb
subl
sti
mov
inc
add
push
add
mov
aam
add
xor
cmp
push
xchg
push
adc
push
and
popa
pop
push
sbb
loope
sub
dec
sub
add
sbb
mov
test
loop
cmpb
cmpsl
jae
add
stos
or
xchg
lods
rclb
pop
inc
dec
into
les
bound
dec
and
xchg
and
mov
cli
lds
orb
in
imul
xchg
adcb
in
add
packsswb
and
je
test
les
nop
lcall
in
xchg
xchg
rorb
mov
dec
and
push
push
int3
pusha
test
fistl
push
sbb
lock
loopne
push
xchg
inc
pushf
insl
addl
jmp
shlb
xchg
icebp
push
nop
jbe
enter
mov
mov
cmpsb
mov
loopew
mov
and
cmp
xor
enter
inc
and
loope
enter
add
std
sub
push
jmp
lods
test
loop
imul
cmp
cmp
outsl
push
inc
mov
loop
jns
cmpsl
loope
jbe
and
mov
je
pushl
mov
pop
pop
add
or
jne
outsb
xor
or
sbb
sti
into
cmp
cwtl
xor
push
mov
xor
push
push
movsb
inc
outsl
jb
push
add
pushf
in
and
add
dec
shrb
pop
mov
mov
xorl
cld
or
push
push
push
loopne
jecxz
xchg
lock
ret
adc
test
and
push
mov
jmp
adc
je
add
push
inc
push
inc
ror
in
push
xor
hlt
aas
js
in
dec
push
push
ret
cmp
shlb
js
out
sbb
jmp
push
rclb
xchg
test
movsb
xchg
jne
test
movsl
popa
popa
add
mov
fwait
fwait
add
jge
mov
push
out
lret
jne
push
push
test
loopne
mov
xchg
cld
in
rcrb
mov
loopne,pt
rclb
outsb
movsb
test
pusha
push
dec
jle
bound
jno
add
xchg
add
aad
cmp
shrb
pop
rorb
push
or
lea
and
add
enter
call
in
int3
push
divb
in
nop
mov
and
xchg
dec
cmp
inc
shrl
inc
pop
push
sub
and
pop
add
imul
int3
out
sub
aaa
pop
mov
xchg
add
lods
push
dec
es
push
insb
aaa
call
add
push
stos
pusha
jae
inc
in
add
int3
movsb
xchg
je
push
int3
js
inc
sahf
xchg
nop
jg
pop
push
repz
es
push
dec
or
pusha
pop
and
inc
stc
cmc
add
dec
jmp
push
fwait
sbb
movsb
cmp
cmp
lods
mov
xchg
rcl
test
js
sbb
lret
and
roll
xchg
test
adc
inc
sub
cmpsb
in
enter
ss
imul
test
and
sub
push
orb
cld
enter
les
dec
cmp
add
dec
adc
and
push
gs
adc
jnp
pop
sub
add
mov
add
add
mov
in
adc
push
inc
rcll
pushl
popf
pop
xchg
xorl
lahf
or
sub
fcoms
cmpsb
pop
scas
adcl
pop
mov
inc
pop
sub
jae
fwait
out
push
add
and
lcall
or
push
bound
add
xor
mov
and
xor
and
xor
or
pop
mov
inc
jne
inc
push
or
adc
popf
lret
pop
movsl
adc
inc
or
rorb
jae
test
jecxz
jne
shlb
adc
dec
pop
sub
les
add
leavew
or
ljmp
in
pop
rcll
test
add
mov
call
and
mov
inc
and
mov
xor
or
popa
sub
and
cmp
cmp
jne
cmp
inc
jo
and
and
add
xor
aaa
cmp
cmpsb
sub
in
cmp
adc
stos
xchg
add
pusha
xchg
dec
add
add
xchg
cs
lods
sbb
pop
gs
pop
jo
pop
test
adc
subl
jmp
divps
ret
push
xorb
cmp
inc
sbbb
xlat
cs
sub
cmp
test
lock
hlt
push
mov
push
out
dec
jbe
adc
and
movsb
sub
mov
shrb
xor
popa
aam
push
lahf
std
ret
mov
inc
mov
inc
stc
out
push
mov
in
and
aam
sub
push
dec
push
shrl
inc
leave
xchg
mov
dec
sub
dec
push
adc
push
add
dec
sbb
add
push
leave
xor
hlt
imul
ret
std
ja
inc
push
jo
dec
lock
cmp
leave
push
enter
mov
adc
fcoms
or
sbb
inc
xor
fucomip
lock
sbb
adc
outsl
xchg
and
in
pop
xchg
add
jae
jae
cmp
cmp
jne
xor
cltd
push
nop
rorb
mov
adc
inc
or
mov
loope
jl
je
packsswb
lock
insb
imull
push
nop
mov
dec
adc
sub
lods
ret
jne
pop
lods
xorl
loope
dec
dec
lods
pusha
sub
cmpsl
xchg
in
or
lcall
push
dec
in
jns
push
fcoms
xchg
and
hlt
dec
or
push
pusha
pop
in
jecxz
movb
pop
pop
adc
push
pusha
es
out
fsubl
xchg
addr16
inc
adc
add
les
add
inc
push
dec
jne
pop
shrl
rolb
or
std
arpl
stc
sub
and
ret
movsb
pop
xchg
gs
insb
dec
fdivs
cmpsl
sbb
push
dec
mov
inc
fsubrl
sub
xor
les
xchg
sub
es
rorl
dec
dec
push
mov
push
mov
dec
mov
inc
jb
pop
mov
cmp
inc
xor
mov
pop
mov
sub
and
xchg
mov
mov
and
fwait
mov
xchg
pop
icebp
adc
adc
popf
enter
cs
pusha
mov
inc
rorb
or
filds
nop
mov
mov
ja
es
cltd
adc
mov
enter
xchg
mov
xor
lea
add
insb
test
fwait
or
lods
int3
jo
jo
xor
mov
sbb
mov
pop
enter
mov
nop
orb
js
cmpsb
inc
popa
insb
xor
sub
xchg
pushf
sub
jno
jo
add
add
cmc
loopne
adc
push
dec
mov
test
xor
dec
insb
xor
test
push
jae
cmp
mov
add
dec
dec
or
pop
or
dec
out
sahf
movb
out
shll
or
and
lret
pusha
iret
add
and
test
iret
out
inc
sub
sbb
and
dec
inc
pusha
cmp
ret
jns
test
test
xor
fsubrl
outsl
adc
sbb
mov
enter
or
mov
dec
xchg
push
xor
dec
ja
ret
iret
jmp
lods
add
lret
pop
fists
jbe
aad
add
xchg
sbb
xchg
test
sbb
clc
loope
js
pop
fildl
or
jmp
addl
icebp
jmp
addb
sub
loopne
and
cli
fbld
adc
dec
mov
inc
loope
enter
inc
mov
jl
add
xchg
jmp
xchg
xchg
sbbl
xlat
mov
cmp
mov
sbb
lods
fsubs
or
xor
movsb
movsb
cmp
sbb
movsb
cli
out
xor
jo
popf
cs
rcr
ret
aam
ja
rclb
sarb
fdivrs
or
lea
enter
loopne
cmp
imul
add
insb
and
push
and
repz
ja
cli
jg
adc
cmp
je
cmpl
std
rcrl
xor
scas
mov
inc
push
push
jo
in
jne
jno
jbe
pusha
leave
aas
add
xor
pop
jno
es
sub
enter
addr16
sub
or
adc
sarb
mov
cmp
sub
xor
inc
imul
stos
jb
cmp
xor
and
mov
push
lret
test
lds
mov
lahf
add
inc
pop
xor
jb
and
inc
or
inc
scas
dec
and
pop
jnp
and
stos
pop
xor
call
orb
cmpsb
cmpsb
pop
pop
icebp
jg
fcom
insl
xchg
inc
cmc
pushf
xchg
pop
adc
push
mov
dec
jb,pt
xor
xor
cmpsb
dec
jmp
aaa
in
inc
loopne
pusha
cmp
mov
dec
mov
aaa
or
xor
add
add
inc
dec
add
pop
jecxz
push
fists
pop
dec
je
xor
sbb
sbb
dec
shlb
pop
cmp
pop
add
shll
push
shrb
movsb
and
hlt
sub
pop
bound
outsl
xor
add
mov
xor
pop
pop
test
je
imul
lcall
jmp
cmp
jb
xor
pop
push
mov
xchg
inc
inc
mov
jecxz
lds
jo
xor
jb
and
sbb
mov
sbb
test
mov
mov
push
test
push
rcll
cmp
push
lret
or
or
cmp
jne
leave
int
addl
pop
cmp
mov
push
or
xchg
push
imulb
sbb
add
test
inc
lea
sbb
pop
or
and
in
push
pusha
jl
jle
popf
mov
scas
je
andb
dec
xor
hlt
add
add
and
call
jae
aam
push
int
sti
incb
and
sbb
rorb
repz
pop
mov
les
cld
push
insb
sub
cmp
pushf
pusha
jmp
flds
data16
cld
cs
aam
je
mov
sbb
mov
pop
stos
mov
sub
push
rorb
mov
lods
repz
sub
xor
cltd
fs
popf
mov
push
mov
adc
fisubrs
jb
or
imul
xchg
aad
test
nop
insl
imul
sub
cmp
enter
inc
sub
or
push
xchg
cmpsb
imul
xchg
rorl
pop
inc
push
ss
or
push
inc
xchg
pop
adc
or
or
or
inc
or
adc
sbb
pushf
in
push
xor
aaa
add
leave
add
cmp
inc
leave
loopne
xchg
test
adc
xor
push
rcll
orb
and
cmp
cltd
or
cmpsb
sbb
add
mov
pop
mov
stos
mov
mov
push
aaa
mov
pushf
push
add
push
add
adc
fs
xchg
scas
pop
jb
in
mov
mov
cmp
pushf
addb
and
sub
dec
inc
nop
aaa
sub
das
loop
lods
sub
int3
mov
decb
mov
andb
lods
lods
inc
pushf
dec
insb
addl
les
cmpsl
xor
iret
mov
je
cmp
or
cmp
mov
hlt
hlt
gs
xor
xor
pop
and
mov
inc
push
push
cmp
mov
sahf
inc
imul
pusha
ja
loope
imul
mov
mov
mov
sub
dec
jae
je
test
push
mov
ficoms
call
pop
and
and
stc
cmp
loopne
and
sbb
inc
outsl
gs
sahf
cmp
addl
mov
bound
stos
movsl
adc
ret
adcb
push
add
test
nop
push
cltd
lods
pusha
add
rolb
js
or
add
pop
mov
and
push
pop
pop
bound
mull
adc
mov
fisttpl
pushl
imul
pushf
cmp
inc
outsb
xor
jbe
mov
and
out
push
dec
pop
mov
dec
and
inc
inc
nop
mov
pop
sbb
test
sar
pushl
mov
ljmp
xchg
idivl
push
add
loopne
test
mov
cwtl
add
gs
iret
mov
test
xchg
test
cmp
jmp
jne
sub
orl
test
fisubrl
pop
xlat
jmp
jmp
aam
or
adc
or
push
ss
and
or
jmp
test
fstpt
mov
add
jne
popa
loop
push
lock
add
fdivr
dec
arpl
and
pop
in
jge
push
sub
out
add
or
xlat
sbb
mov
mov
jne
in
lret
push
push
std
xchg
orl
cmp
out
mulb
adc
ret
jne
jne
in
fcomp
and
rol
loopne
in
or
add
lea
fcmovbe
push
popf
int
or
fxch
mov
data16
jno
das
and
mov
jmp
push
mov
xchg
fs
rcll
nop
mov
push
adc
mov
je
push
daa
call
and
fcmovnb
loop
dec
cs
das
into
push
xchg
lods
ja
cmp
mov
cmpb
test
insb
and
xchg
roll
jmp
xchg
jbe
inc
xor
stos
fcompl
insb
adc
shlb
sub
adc
cmp
inc
pop
movsl
imul
sub
push
cltd
mov
int
sub
and
imul
stos
test
adc
mov
adc
or
xor
sub
mov
and
scas
addr16
add
punpckhbw
cld
jne
ret
dec
aaa
xchg
sbb
sbb
xchg
in
cmp
sbb
jmp
push
adc
xor
cmp
xor
mov
stos
dec
jo
xor
xor
ret
int
aaa
outsl
mov
mov
movsl
and
out
mov
subl
or
inc
das
adc
cltd
push
push
or
or
cmp
sbb
mov
xor
jns
add
addb
in
xrelease
or
mov
add
lock
inc
jle
add
jns
popf
inc
outsb
addb
cmp
icebp
lods
je
addl
je
popa
loopne
dec
rol
inc
xor
mov
add
mov
repnz
in
loopne
xor
int3
in
cmp
test
enter
add
sub
out
jle
mov
and
lahf
adc
inc
inc
cmpsb
or
addr16
xchg
mov
pop
out
test
fadds
test
imul
jp
xchg
rorl
lea
jg
xchg
pop
pop
cmp
mov
fnstcw
mov
and
inc
mov
das
sub
adc
pushl
add
cmp
mov
negb
mov
mov
push
xor
push
xor
sub
bound
roll
punpckhbw
or
jecxz
jmp
and
jmp
and
testb
push
je
in
enter
sub
ss
cmp
pushf
cltd
outsl
add
test
inc
fcom
rorb
add
pop
mov
or
movsb
ret
push
lret
mov
cwtl
rcll
mov
and
sub
lahf
mov
xor
push
xor
lahf
xchg
sub
and
call
xchg
jo
orl
cmp
cltd
push
xor
hlt
add
cwtl
rorb
jae
sbb
or
mov
mov
mov
xor
pop
xchg
and
mov
mov
pop
add
insl
pop
push
inc
mov
sub
push
xor
sbb
into
and
mov
mov
cld
sbb
push
scas
insl
arpl
mov
or
add
shlb
dec
loop
xchg
lret
in
bound
xlat
pop
jmp
mov
sbbb
out
add
movsb
nop
jmp
lahf
es
mov
cmp
popf
in
inc
adc
in
loopne
cmp
and
divb
mov
repz
add
cmp
ja
filds
pop
loope
or
mov
mov
pop
lea
push
xor
roll
shll
adc
dec
mov
fcomip
sbb
jne
or
sbb
xor
sub
mov
mov
mov
xor
cmp
jns
int3
jmp
mov
inc
iret
pop
popa
enter
in
cmp
loop
sbb
cs
fsubrs
stc
push
pop
or
adc
sub
cmp
pop
lds
and
xor
mov
ljmp
int
jo
mov
fmull
mov
xchg
data16
in
ss
icebp
ficomps
paddsb
jo
mov
inc
arpl
call
out
and
das
xchg
sti
push
push
dec
lahf
push
add
xor
aas
push
sarb
xchg
and
ja
or
inc
cs
aas
loope
sub
mov
inc
or
adc
cld
cmpsl
mov
adc
jle
mov
inc
and
inc
push
pop
jle
lods
sbb
jg
adc
mov
lock
push
push
addr16
jmp
push
and
aas
popa
and
rolb
scas
pop
shlb
incl
jl
or
jl
jge
sub
andb
ja
sbb
add
fs
push
xor
pop
or
inc
xor
push
mov
mov
les
and
jl
lods
jecxz
inc
gs
adc
mov
sub
sub
and
xor
in
sub
sbb
add
push
shrl
jo
cmpb
incb
int3
or
cltd
add
sbb
mov
xor
rolb
pop
pop
mov
rolb
push
adc
loop
aam
into
add
mov
and
add
shll
test
sbb
adc
arpl
popa
mov
push
inc
rclb
push
pushf
adc
in
lahf
push
adc
sarl
or
pop
add
dec
mov
lret
les
sub
ja
push
jo
js
repz
mov
mov
adc
xlat
and
sbbb
lds
dec
int3
cmpb
xor
fldcw
mov
and
and
push
push
mov
orl
inc
xchg
iret
or
jp
add
sbb
add
mov
push
cmpl
mov
call
jnp
mov
and
fucomi
rcll
push
jmp
pop
lock
and
pushl
pushf
or
adc
loope
cmp
pushl
adc
bound
push
push
add
xchg
adc
add
js
popa
loopne
adc
inc
mov
jmp
loope
cmp
jmp
flds
subl
inc
mov
lea
cmp
add
rcll
jmp
or
std
or
dec
fs
adc
les
mov
rcrb
outsb
or
dec
xlat
xchg
cmpsb
in
inc
je
and
jmp
pusha
out
shl
xor
cmp
mov
sbb
clc
add
dec
adc
adc
insb
mov
lds
testb
jecxz
jnp
xchg
xchg
mov
ds
jb
daa
test
sub
pop
int
or
xchg
mov
pop
inc
or
sub
xor
cmp
loopne
ret
dec
jg
je
fwait
mov
hlt
rorl
lock
pop
jnp
fnstenv
xor
lods
or
pop
or
push
dec
push
mov
mov
xor
xchg
or
aam
adc
add
sub
frstor
dec
jge
adc
pop
add
pop
xorb
add
push
dec
roll
jae
pop
push
pop
xchg
pop
ret
xor
stos
mov
enter
push
pop
pop
test
ret
or
jns
add
xor
adc
add
push
int3
enter
push
inc
mov
mov
add
lret
jecxz
inc
adc
xchg
scas
mov
and
imul
inc
xor
int3
mov
daa
cmp
int3
add
sub
jo
lods
jne
inc
and
repnz
dec
or
pop
fdivl
adc
cmp
jnp
jbe
mov
hlt
xor
in
out
xchg
test
inc
xor
adc
mov
loope
jno
mov
xlat
repnz
call
pop
xchg
dec
cmp
jge
mov
add
add
push
push
je
clc
and
or
fimull
je
test
icebp
stos
pop
cmp
rcrl
sti
fs
fiadds
or
outsl
cmp
cmpl
sbb
add
and
lea
pop
xor
aad
sub
inc
call
push
and
std
arpl
icebp
lea
test
or
sub
adc
in
neg
add
or
cmp
or
or
ds
mull
adc
mov
sub
mov
lock
test
out
add
arpl
dec
jbe
add
loopne
sub
or
or
movsb
je
pop
xchg
adc
adc
add
test
dec
mov
push
outsl
push
fdivl
adc
rolb
aaa
jns
mov
adc
or
ret
xchg
in
dec
and
mov
push
hlt
sbb
push
mov
cmp
cmpsl
adc
cmpsl
push
mov
and
jecxz
and
inc
lcall
add
pop
jnp
ss
das
xchg
jno
push
dec
jge
jo
sti
shrl
mov
sbb
push
jb
fsub
mov
add
loopne
xchg
jp
jmp
rorl
arpl
rorb
adc
pop
dec
or
inc
inc
test
rcl
mov
ss
and
sub
mov
std
inc
sbb
add
sub
mov
loop
lods
push
xor
jmp
inc
add
dec
pop
and
mov
or
clc
add
sub
mov
cmp
push
adc
insb
loop
pop
std
add
push
lcall
punpckhbw
fdivrs
cmpsb
dec
mov
ret
out
xchg
test
gs
sbb
adc
sahf
cmp
or
fstps
jbe
sarl
pop
and
add
push
dec
in
sarb
push
push
add
mov
pop
pusha
fidivrs
insl
adc
pop
and
ret
xchg
clc
rorl
inc
js
cmpl
sub
js
xor
inc
add
cmp
push
clc
jno
scas
add
mov
add
pop
inc
nop
fwait
pop
mov
xor
mov
inc
sbb
xlat
cmp
rolb
test
sub
xchg
push
test
fists
adc
push
push
push
ljmp
clc
xchg
jl
inc
out
lock
lock
sbb
arpl
sbb
daa
aas
lock
push
push
mov
sbb
cwtl
imul
sbb
and
lret
inc
jne
xchg
jne
cmp
or
inc
movl
daa
sub
add
jo
push
clc
mov
ja
xchg
push
push
movsl
adc
rcrl
inc
loopne
fildl
adc
ljmp
xor
ja
jb
push
push
pusha
das
sbb
push
enter
xlat
pop
stc
repz
push
stos
mov
jae
sbbb
fidivs
jge
push
out
push
outsl
push
push
add
mov
add
cmpl
mov
pusha
test
ret
test
and
dec
mov
adcb
incl
sbb
ficompl
cs
fwait
int3
sub
out
jns
ljmp
xorb
movsl
push
mov
xor
cltd
and
or
insl
fs
pop
xchg
xlat
ljmp
dec
jmp
push
sbb
in
xor
push
pop
sbb
and
add
test
sbb
mov
xlat
or
imul
jmp
icebp
sub
lock
jnp
mov
push
mov
mov
pushl
add
xor
sbb
fcmovnbe
lcall
mov
fwait
pusha
das
adc
dec
ja
push
push
loopne
push
cmp
and
jne
cmp
movsb
jne
out
jmp
jbe
adc
fucomp
adc
add
and
bound
insl
and
fidivs
mov
mov
adc
mov
adc
clc
and
cmp
lock
inc
addl
or
rorl
in
adcb
push
mov
inc
pop
xor
or
jmp
cltd
loopne
mov
sub
xchg
test
pop
mov
lds
xor
push
and
sbbl
outsb
rcll
int3
mov
jnp
jg
push
mov
xchg
js
mov
mov
negl
xor
push
jle
ret
mov
call
orl
inc
shl
mov
jo
pop
adc
inc
cwtl
cmpsl
or
jns
incb
xor
aaa
fs
or
push
push
pop
rcl
cmpsl
mov
push
sbb
pop
imul
enter
call
xchg
mov
sub
enter
mov
ret
or
orb
adc
cwtl
call
adcl
mov
test
pop
sub
mov
mov
lret
inc
mov
mov
lret
fcmovb
adc
mov
popa
inc
and
jo
or
or
mov
js
or
or
push
shlb
push
pop
loopne
and
push
sbb
in
cwtl
orl
insb
sbb
ja
mov
pop
dec
arpl
bound
cwtl
mov
add
push
testl
int
mov
aam
push
rol
lcall
lret
xchg
xor
addl
sub
push
sahf
or
insb
test
inc
call
jnp
pop
pop
aad
fldl
mov
scas
out
aam
loop
add
add
out
notl
rcll
imul
jecxz
dec
mov
sar
arpl
jo
push
push
pusha
cmpsl
les
das
sbb
fadds
popf
jge
push
in
push
mov
leave
mov
das
cmp
rclb
loopne
fadds
mov
inc
mov
mov
sti
dec
adc
popf
ss
sarl
push
in
pop
push
sbb
sbb
add
popa
adc
xchg
in
cmp
fcomps
lock
dec
sbb
lods
mov
sbb
adc
or
lcall
xchg
adc
repz
and
in
pop
sarl
nop
in
stos
enter
into
cmpsb
lea
sub
arpl
jae
arpl
test
les
insl
test
fcompl
sahf
cmp
pmulhuw
inc
xor
movb
pop
push
sbb
sub
fabs
add
push
jmp
xchg
push
push
rcll
mov
push
dec
mov
aam
cld
mov
cltd
nop
fistps
or
inc
and
pop
jb
inc
push
add
test
ret
jo
jmp
cmp
stc
adc
test
push
add
xchg
and
xlat
xchg
jmp
aam
mov
sbb
popf
mov
jl
pop
jns
add
push
pop
push
stos
fidivrs
sbb
das
mov
adc
out
loope
outsl
icebp
je
jae
nop
rolb
mov
je
push
imul
cmp
mov
pop
lret
add
jae
sbb
nop
mov
jbe
clc
or
add
add
inc
arpl
push
push
or
adcl
je
std
xor
and
push
jno
insl
xor
test
add
movsl
or
fdivr
icebp
add
rorl
lea
insb
std
mov
pop
mov
mov
cmp
pop
movb
mov
sub
cmp
mov
je
js
js
mov
mov
test
jo
fistl
std
sarb
ja
mov
aas
mov
cmp
add
cmp
fdivrl
mov
jp
enter
clc
jns
in
aam
mov
enter
or
sbb
or
cmp
or
mov
fwait
pop
mov
jo
dec
les
std
cmp
dec
lea
sbb
ja
pushl
cmp
and
sub
inc
mov
or
hlt
js
enter
aam
mov
into
enter
jl
sub
adc
cmp
mov
or
sub
and
add
int
xor
rcr
les
xlat
lret
fsub
shll
dec
shr
out
hlt
sub
push
loopne
pop
aas
call
push
mov
add
add
sub
cmp
inc
clc
loope
insb
or
mov
push
out
clc
add
rcrb
lea
cmp
pop
fcmovnb
mov
mov
ja
icebp
imul
cmp
jb
add
cmp
jbe
adc
ret
cmc
jb
fisttps
daa
sbb
dec
clc
out
adc
mov
sbb
icebp
mov
push
out
iret
movsb
pop
repnz
push
adc
xor
loope
pop
lods
mov
adc
cwtl
mov
or
cmpsl
js
movl
stos
sbb
mov
push
dec
xchg
adc
jae
fiaddl
mov
pop
xchg
leave
add
ljmp
test
jne
cmp
jbe
push
out
enter
push
xorb
mov
jmp
jmp
popa
daa
jne
adc
sbb
pop
jns
loope
mov
push
mov
jp
pop
or
cmp
push
arpl
mov
pop
mov
adc
jmp
aaa
adc
mov
hlt
inc
insl
aaa
adc
cwtl
in
push
add
pushf
sahf
loopne
outsl
lods
push
inc
jl
enter
shlb
adc
cmp
out
test
and
jo
add
inc
add
push
jp
xchg
stos
fs
rol
movsb
mov
insb
cmp
push
pop
jo
jle
mov
aam
sbb
je
jne
sbb
jmp
push
push
sub
xchg
sbb
fwait
xor
mov
adc
cmpsl
add
test
leave
int3
and
push
repz
push
ret
mov
pop
idivl
push
cltd
mov
push
fdivrl
out
inc
adc
add
push
incl
sub
push
fcmove
lahf
pop
movsb
adc
je
je
test
leave
cld
jnp
sarb
cwtl
ja
js
cmp
cmp
iret
sbb
xchg
test
mulb
push
xor
sub
push
test
inc
jle
mov
xchg
nop
adc
cs
push
hlt
or
add
sbb
mov
pop
test
push
add
adc
inc
rolb
sub
gs
pop
fsubrs
decb
movsl
test
cwtl
jne
push
lret
xor
add
pushf
push
pop
pushf
cmp
add
jae
fnstsw
dec
jo
cmp
mov
mov
inc
pop
and
pop
add
enter
or
lock
shrb
and
mov
or
out
xchg
add
test
fnstsw
gs
flds
pop
sbbl
jo
push
and
add
call
out
lahf
ss
pop
or
xchg
and
mov
xor
lods
mov
das
insl
sbb
in
add
dec
dec
add
jne
enter
mov
fiaddl
cmpl
int
repnz
mov
repnz
inc
les
enter
inc
and
jecxz
mov
jl
cmpl
sarl
sbb
iret
int3
adc
pop
insb
test
cld
loop
and
adc
pop
xchg
cmp
sub
lods
rorl
adc
or
or
mov
jne
hlt
cld
push
xchg
stc
xor
cmp
inc
push
lea
lods
loope
dec
add
pop
push
dec
pop
mov
jnp
fistl
push
enter
add
out
mov
sub
push
or
push
push
dec
cmp
fstl
les
xchg
movsb
fisubs
test
pop
je
jmp
mov
arpl
inc
imul
inc
add
into
stos
add
ficomps
test
and
call
decb
add
mov
lds
arpl
jno
jp
jl
adc
into
adc
cld
ret
out
dec
add
jae
push
sti
mov
push
faddl
inc
push
sbb
pop
xchg
in
in
je
mov
jmp
notl
xchg
adc
add
int3
in
xchg
xor
cmp
mov
pop
cmp
adc
xor
xor
sub
movsl
or
inc
test
dec
and
pop
movl
jmp
lock
test
loope
data16
inc
adc
add
movsb
fcomi
jmp
movsb
jecxz
mov
hlt
push
or
loop
sbb
mov
mov
jns
or
lock
pop
or
sub
mov
sub
or
mov
sbbb
add
rcr
mov
mov
mov
push
ret
adc
cmp
or
push
add
xor
xchg
sub
adc
arpl
insb
dec
adc
fsubrl
or
mov
setb
scas
xor
sbb
jns
in
mov
inc
push
push
aad
adc
dec
imul
dec
add
data16
jo
jno
push
enter
and
dec
add
clc
sub
push
push
sub
xchg
ret
pop
add
aam
ret
loop
dec
mov
inc
push
xchg
mov
dec
nop
adc
or
loopne
and
jecxz
and
and
mov
add
imul
loope
rclb
or
xchg
sbb
test
or
popa
xor
daa
xor
das
cmpsb
int3
push
adcb
cmp
in
test
fmull
aaa
ret
dec
lods
xorl
negb
pop
mov
fdivs
scas
enter
add
cmp
in
pop
xor
sbb
add
mov
ret
pop
mov
lahf
push
add
popa
movsb
push
xlat
pop
jns
nop
nop
xchg
add
es
mov
int
add
out
inc
rcrb
andl
adc
push
push
ret
in
pop
and
xor
cmp
xchg
insl
das
add
orl
mov
and
sub
cmp
cmp
mov
es
pop
or
sbb
dec
mov
inc
add
aad
pop
push
xchg
push
mov
ret
lods
inc
not
cmp
adc
and
cs
aam
mov
test
fldcw
jl
mov
pop
inc
inc
cmp
pop
jne
inc
nop
or
fidivl
or
jbe
movl
ret
lods
jne
push
je
cltd
js
jno
call
pop
out
or
aaa
pop
ret
xor
xor
inc
aaa
outsb
jo
or
popf
out
enter
jb
jb
push
test
pop
popf
lods
aaa
enter
js
lods
ret
or
test
push
pop
xchg
jg
sub
or
jecxz
mov
cmp
inc
sub
addr16
gs
adc
je
lcall
pop
das
xlat
add
aaa
movsl
fwait
dec
or
aas
aaa
inc
scas
mov
mov
fwait
push
push
cmpsl
mov
test
movsl
ja
or
or
cmp
mov
test
mov
lods
fs
sarb
sbb
ja
jb
add
jne
cs
fidivrs
cld
or
cmp
push
and
aaa
or
and
dec
xchg
sbb
xor
inc
ror
sbb
std
sbb
ja
mov
dec
dec
xor
jne
inc
jne
pop
pop
push
or
pop
repz
lods
lods
pop
cmpsl
mov
pop
les
dec
loope
stos
stos
movzwl
push
pop
inc
add
adc
ljmp
jle
xor
shlb
and
js
push
filds
jno
mov
jns
pop
enter
and
inc
mov
jbe
and
pushf
gs
jne
mov
add
js
aaa
and
add
add
cmp
jmp
pop
cmp
jo
and
push
fs
fmuls
inc
ret
lea
mov
sub
dec
sbb
rorb
and
aaa
lds
or
push
cmp
icebp
add
or
cmp
les
push
sbbl
jno
popa
negl
inc
pop
enter
cltd
lds
addb
mov
mov
dec
pop
xchg
add
roll
mov
movb
xor
adc
push
cmp
adc
mov
or
mov
and
lret
mov
inc
nop
icebp
outsl
mov
rorb
pop
sbb
jle
je
cli
add
lds
push
cmpsb
mov
pop
or
addl
outsb
pop
sbb
fnstsw
sbb
das
mov
les
adc
inc
inc
inc
inc
mov
sti
dec
pop
add
add
pop
xor
mov
xor
nop
mov
and
sub
addl
loopne
es
enter
aas
mov
jge
mov
rol
pop
xor
rorb
inc
pop
add
icebp
jbe
mul
or
cli
or
add
jmp
adc
jl
jg
pushf
sub
jle
mov
inc
shrl
jne
clc
lcall
jle
lea
dec
jmp
mov
mov
mov
mov
dec
inc
cmp
ja
jecxz
dec
add
pop
sbb
jne
and
aad
jno
into
in
push
mov
rcrb
fstpt
ss
xlat
movsb
cmpsl
jle
fisubs
fbld
mov
push
mov
mov
mov
movsl
adc
push
test
ljmp
add
and
jmp
pop
dec
jecxz
xchg
fcomps
pop
das
dec
fstpt
xor
mul
mov
neg
mov
and
in
jecxz
inc
sbb
outsb
js
jle
rcrl
aam
lods
movsb
sti
mov
cwtl
in
call
or
xchg
ja
lahf
test
xchg
ret
sbb
test
jmp
sub
push
dec
dec
lea
sbb
xor
leave
jle
inc
or
push
in
nop
or
pop
xor
ss
gs
add
and
add
xchg
add
cmp
sub
imul
xlat
sub
pop
xchg
xchg
test
scas
loope
jnp
xor
sub
sbb
mov
jae
sub
mov
inc
push
push
js
ja
jns
cmp
cmp
xor
lea
jmp
and
and
cli
jmp
popf
sub
sar
or
sub
add
ret
mov
push
inc
inc
sbb
xor
movsb
lock
jnp
add
jmp
lea
test
dec
aaa
cs
xorl
popa
rcrl
or
cmp
jl
or
adc
inc
pop
jle
or
or
lret
jl
cmp
inc
cmp
jl
sbb
or
addr16
add
lods
jl
inc
add
loop
sub
adcl
daa
jg
jns
andb
lods
add
sbb
add
xorl
sbb
inc
in
inc
cmpsb
sbb
imul
push
and
lret
repnz
loope
loope
or
lea
jae
push
push
adc
outsb
or
xor
shll
inc
and
ss
fisubs
or
rclb
or
add
xor
xor
rorb
and
sbbl
and
push
lods
push
dec
push
cmp
and
lock
aaa
sahf
sub
dec
sar
sub
movsb
mov
xor
daa
mov
add
rcr
mov
movsb
push
sub
push
les
insl
outsb
lret
mov
adc
pusha
mov
rcrb
xor
aaa
test
rorb
pushf
rcl
mov
roll
adc
add
shrl
shl
push
enter
out
scas
repnz
fcom
lods
roll
or
cwtl
and
sub
mov
inc
int3
mov
dec
inc
mov
fxch
mov
jo
pop
push
add
or
sub
ss
dec
sbb
andb
add
cmpsb
movsb
xchg
or
es
lea
xchg
rclb
ss
or
je
jmp
pop
repz
aas
test
add
enter
add
inc
and
je
jns
sbbl
mov
js
imul
adc
mov
insb
enter
jle
push
and
or
mov
jp
aaa
or
add
aam
dec
sbb
sub
aad
jecxz
add
sub
adc
andb
adc
ror
inc
add
lret
lds
bound
xchg
lods
adc
pop
pop
or
int3
cltd
and
dec
imul
imul
jns
push
test
or
or
and
nop
lcall
les
cmpl
rcl
lea
pop
imul
adc
adc
or
sub
nop
insl
mov
dec
inc
sub
or
test
and
in
xchg
adc
mov
mov
inc
aaa
lcall
jp
and
shlb
add
aaa
inc
pop
ja
mov
or
dec
enter
pop
pop
repz
add
sub
jo
mov
js
dec
addb
xor
pusha
mov
cmp
xchg
add
fiadds
out
cmp
dec
sbb
mov
cld
jmp
sub
sbb
inc
sahf
add
or
xchg
or
mov
and
inc
loope
dec
outsl
jmp
sbb
les
cltd
xor
dec
aas
sbbl
popa
mov
cwtl
outsl
outsl
es
bound
adc
or
dec
or
pop
jo
enter
in
xor
push
or
xor
sub
andl
cmpb
dec
push
je
push
ljmp
lods
rorb
and
xor
xchg
mov
jmp
adc
push
mov
das
dec
rcrb
or
rcrl
lods
push
out
or
add
push
rolb
push
daa
mov
xchg
sub
jle
jo
popa
pop
fcmovnbe
add
mov
jle
or
push
adc
outsl
inc
insl
je
xlat
and
jmp
adc
pushf
sub
dec
pop
sub
in
sub
repnz
adc
add
xor
in
dec
clc
or
or
mov
nop
es
lahf
mov
xchg
lock
inc
jle
sbb
iret
lods
pop
push
push
test
dec
test
push
cmp
hlt
mov
es
xchg
addb
jnp
sbb
add
test
mov
xor
fcoml
test
mov
fdivrp
dec
sbb
mov
xor
adc
sub
aaa
mov
into
inc
cmp
and
adc
insb
inc
sub
shlb
pop
mov
pop
adc
ret
test
scas
dec
mov
xor
enter
push
push
ret
sub
mov
xor
insb
push
push
mov
in
shll
outsl
sbb
sbb
movsb
add
add
lea
repz
in
rcll
shrb
sub
add
adc
sbb
or
in
jecxz
sbb
add
out
mov
add
addb
xchg
dec
mov
xchg
adc
ret
xchg
mov
popa
pop
jne
imul
dec
aaa
xor
jg
xor
sahf
inc
or
sbb
mov
mov
mov
push
adc
mov
fwait
lods
std
push
outsb
xor
sbb
adc
push
or
scas
or
pop
rorl
fnstenv
or
push
mov
pop
addb
mov
pop
add
push
int3
mov
jne
sbb
adc
subb
push
js
adc
aas
sub
pusha
mov
jmp
fildll
add
ficoms
shll
pop
pop
lea
repnz
test
insb
imul
enter
pusha
push
add
dec
mov
push
mov
cmp
xor
int
push
xchg
push
mov
out
mov
nop
mov
jo
and
mov
and
xor
push
mov
jb
scas
cmp
or
pop
mov
adc
cmpsb
ja
push
orl
sub
add
cli
and
jmp
adc
arpl
jae
inc
add
add
add
mov
adc
cli
push
xor
loop
or
test
arpl
push
sub
ret
cmp
divb
mov
out
jmp
aam
ljmp
shlb
cld
gs
aaa
cmpsb
or
inc
and
cmp
jecxz
mov
in
and
dec
jl
mov
rorb
xor
xor
add
imul
sbb
jecxz
cmp
cmc
xchg
out
pop
orl
roll
mov
mov
pushf
push
adc
je
cmp
pop
shlb
dec
pop
sbbb
in
mov
test
pop
ret
push
popf
xchg
jo
iret
dec
aas
add
rol
daa
or
sub
push
cmp
rcll
icebp
fst
jns
aam
mov
gs
arpl
insl
mov
adc
sbbb
fadds
adcb
pop
dec
sbb
sub
sbb
leave
hlt
adcl
scas
push
lock
xor
mov
xor
popf
sbb
mov
adc
pop
sti
and
and
lcall
mov
rcll
ficoml
xor
test
lcall
es
pop
addb
fmull
loope
jecxz
cmp
xchg
in
int3
cmp
jns
inc
inc
mov
loop
push
dec
in
fldt
jb
adcb
dec
lods
add
ret
mov
cmp
lock
aam
adc
mov
test
lods
push
and
lock
add
pop
lock
add
cmp
pop
add
lock
add
lock
arpl
pop
lock
dec
sub
leave
sahf
das
movsl
movsl
jne
int3
sub
pop
or
daa
adc
fdivr
fsubr
pop
ds
push
pop
jp
sbb
aaa
sub
enter
aas
out
or
cmpsb
negb
push
xchg
mov
and
cmp
add
lock
or
insb
sub
adc
stos
jmp
ret
or
sti
xchg
xor
and
sub
lea
add
pop
mov
push
sbb
sub
insb
inc
test
bound
test
out
or
enter
popf
cmp
sbb
mov
pop
loope
subl
int
mov
lds
cmp
je
mov
aas
jbe
mov
stos
adc
add
ror
sbb
push
fwait
dec
aad
fwait
add
pop
js
sbb
mov
or
push
sub
pop
and
imul
sbb
syscall
inc
lcall
add
mov
arpl
add
imul
out
gs
in
sbb
jecxz
cmp
scas
pop
loope
lret
jmp
sub
push
pop
insb
stos
add
mov
or
cmp
sub
popf
xor
xor
loop
dec
mov
test
les
mov
add
push
inc
mov
nop
in
jns
and
adc
lods
sub
lods
pop
mov
shll
pushf
mov
out
rolb
inc
dec
mov
mov
idivl
pop
insl
inc
xchg
dec
push
testl
add
adc
dec
std
and
aam
test
js
sbb
add
cmp
add
inc
stos
pop
pop
push
jmp
repnz
loopne
inc
lcall
adc
xchg
xchg
push
nop
jno
or
enter
xorb
add
enter
adc
enter
adc
xor
cmp
mov
orb
ror
mov
lea
push
pop
lock
mov
push
mov
pop
inc
mov
sub
lods
ud2
pop
xor
rol
jae
daa
sub
cwtl
add
xlat
pop
dec
pop
incl
pusha
push
mov
xor
dec
test
add
pop
into
add
call
aaa
mov
ss
sbb
and
in
and
test
stos
test
in
gs
and
je
push
sti
dec
pop
add
inc
es
shl
mov
fmuls
shr
arpl
mov
inc
lods
test
inc
adc
mov
or
das
cmp
fdivp
test
mov
jb
cltd
inc
incb
and
mov
inc
mov
xchg
dec
loopne
test
mov
inc
and
outsb
dec
addr16
push
add
mov
xchg
lods
aas
lea
push
pop
cli
pop
push
mov
popf
ret
inc
scas
fisubl
push
xor
sub
ret
adc
jb
xor
stc
or
das
or
ret
mov
jbe
arpl
add
daa
sbb
or
lahf
icebp
sbb
jbe
mov
lds
cmc
dec
mov
iret
dec
andl
inc
cmp
jb
push
adc
rorl
iret
adc
fisubrl
outsl
mov
add
push
sbb
pop
and
sub
dec
and
cmp
cmp
jl
sbb
xor
test
xor
mov
xchg
faddp
jle
cmp
lock
jo
clts
pop
cmp
cmp
rol
sbb
adc
loope
rorb
pop
push
mov
inc
jmp
sub
fstpt
sub
xlat
or
adc
push
add
sub
pop
mov
dec
popa
push
cmp
lea
jbe
cmovs
adc
push
in
shlb
xlat
xor
push
or
xchg
orb
dec
jp
adc
xchg
jl
xchg
sub
inc
sub
xchg
mov
rorl
lds
cmp
mov
add
cmp
push
mov
or
dec
pusha
test
cmp
jno
test
dec
mov
push
or
mov
or
mov
sub
pop
mov
lods
out
xchg
add
dec
or
sbb
or
faddl
andl
and
ss
push
jge
stos
xchg
inc
sub
subb
dec
sub
je
mov
and
xchg
push
and
inc
dec
cmpb
and
jae
adc
movsb
mov
aad
test
mov
mov
xchg
adc
push
cmp
push
dec
cmpsl
add
lods
push
rorb
pop
std
or
sub
test
pop
xor
pop
repz
pusha
pop
xchg
ss
pop
imul
push
ret
lret
scas
mov
lcall
adc
or
add
push
add
loopne
pop
inc
or
push
insl
add
fldenv
xchg
xchg
xchg
adc
ret
pop
ret
ret
shrl
mov
cmc
mov
test
stos
pop
and
pop
cmp
xor
inc
ds
add
mov
add
adc
fisubl
inc
add
or
mov
mov
and
push
das
and
push
das
mov
fwait
push
xchg
push
xchg
ljmp
dec
les
jmp
js
and
or
inc
adc
stos
adc
or
or
pop
push
sub
cs
sti
call
xor
jne
push
lds
mov
add
cmp
js
push
add
dec
jnp
movl
mov
rcrl
push
add
sub
jne
sbb
mov
inc
movsl
and
add
icebp
inc
test
enter
dec
sub
inc
push
mov
push
xor
pop
xchg
push
lret
or
inc
nop
jbe
cmp
popa
or
inc
add
stc
in
add
cmp
or
jns
and
test
out
jge
rolb
push
ret
inc
xor
ret
or
adc
imul
mov
inc
fisttps
pop
sbb
lds
rcrb
bswap
scas
push
shrb
test
imul
rcrl
stos
jge
mov
push
dec
stos
inc
rol
rdpmc
int3
inc
shrb
push
ds
and
adc
xchg
mov
or
orb
arpl
mov
or
and
and
cmpsb
lcall
pop
xchg
cmp
addb
sahf
mov
sbb
jne
js
pop
pop
loope
dec
inc
sbb
xor
loopne
mov
test
cwtl
or
pop
lcall
dec
cs
dec
add
aam
iret
cmp
fists
enter
fidivl
lea
cmp
shrb
xlat
stos
add
test
mov
fwait
adc
pop
clc
sarl
pop
arpl
xor
dec
xor
outsb
jbe
add
inc
aam
add
loope
ja
adc
push
pop
in
dec
push
cwtl
mov
out
pop
sub
shll
xorl
add
scas
xchg
repz
fldl
add
shrb
adc
js
mov
addb
xchg
sub
lds
and
adc
stos
or
adc
mov
jns
sarb
mov
add
mov
or
mov
jo
or
push
cwtl
aam
add
sbb
mov
add
imul
test
push
sub
adc
stos
and
sub
or
cmp
outsl
sahf
push
pop
xchg
cmpsb
nop
jle
pop
push
daa
push
or
xor
add
pop
adcl
mov
fwait
pop
dec
test
les
jns
test
fildl
es
lds
fldt
rcrl
pop
aam
enter
dec
rolb
test
and
mov
in
lea
mov
inc
fmuls
lock
sbb
test
bound
pushf
xlat
movsl
add
xchg
pop
lock
inc
inc
mov
stos
out
mov
dec
dec
js
jmp
and
dec
push
adc
and
or
rcll
add
mov
neg
push
icebp
sbb
daa
xor
pop
lock
push
outsb
enter
mov
sbb
push
pushf
dec
mov
dec
outsb
adc
xor
rcll
inc
add
subb
out
mov
inc
jge
xorb
pusha
jne
or
stos
ror
or
leave
dec
push
pushf
stc
imul
or
fisttpll
xor
and
push
and
je
test
stc
mov
dec
adc
cwtl
add
sub
testb
pcmpgtb
push
sbb
das
mov
push
or
mov
sbb
outsl
or
bound
outsl
mov
mov
adc
push
out
dec
dec
or
jbe
push
jp
pushf
outsl
add
add
adc
daa
or
inc
push
and
nop
pop
movsl
inc
int
or
xchg
xchg
daa
shlb
or
je
test
mov
or
push
enter
mov
ja
or
mov
cmp
cmp
pop
test
push
push
sub
mov
dec
and
inc
dec
dec
or
cmpxchg
inc
cmpsb
nop
push
add
pushf
inc
es
inc
adcl
mov
inc
inc
stos
dec
pop
adc
jl
jns
push
pop
and
or
sar
decb
mov
aas
nop
in
inc
add
fcoms
call
add
or
cltd
lcall
inc
push
cmp
mov
and
jge
mov
xchg
inc
das
xchg
xor
repnz
or
push
sbb
icebp
sbb
dec
jmp
fstl
push
and
mov
push
or
sbb
xchg
pop
insl
jno
or
fmuls
lods
pop
fs
testl
adc
and
inc
stos
sbb
insl
pop
imul
mov
icebp
sarl
mov
cmp
mov
jo
fwait
mov
inc
sub
push
mov
fisubrl
or
inc
inc
fiaddl
cmp
sub
inc
xlat
jge
jb
add
adc
pusha
and
sub
mov
mov
jmp
dec
int3
xchg
and
aam
cmp
or
fstpl
or
cld
sbb
fisttpll
mov
adc
inc
push
movl
adc
mov
adc
push
outsl
push
pop
iret
cld
inc
lock
and
cmpsb
add
sub
push
and
pop
push
mov
or
out
push
ljmp
mov
xor
gs
add
test
adc
mov
cwtl
xchg
aaa
rcll
in
sub
inc
fucomi
adc
and
pop
push
imul
je
push
sbb
push
push
mov
cwtl
mov
in
arpl
imul
iret
pop
xchg
sbb
fsubs
add
sub
pop
xor
jge
cmp
pop
pusha
adc
fidivrl
sahf
movb
inc
fistps
add
xchg
and
sub
push
sub
push
sub
scas
stc
or
mov
cltd
dec
les
pop
clc
insl
test
mov
rclb
or
or
addb
ret
and
das
outsl
xchg
jl
and
add
push
pop
enter
repz
rolb
mov
sub
inc
inc
mov
inc
cmp
xor
bound
and
sub
int3
add
mov
test
adc
sbb
dec
ljmp
mov
push
push
or
outsl
add
jle,pt
adcl
rolb
nop
or
sti
sbb
cmpl
pop
jne,pt
icebp
pop
push
cmp
add
mov
pminsw
sbb
push
std
adc
add
or
add
adc
push
out
lcall
xor
adc
xchg
push
lods
cmp
xchg
add
rcrl
pextrw
test
push
mov
xchg
sub
rcrb
push
cmp
adc
rolb
push
adc
add
ret
adc
add
xchg
addb
and
gs
icebp
mov
sti
pop
insb
fs
xchg
or
mov
push
add
sub
adc
push
ljmp
inc
dec
roll
or
xor
out
dec
sbb
xor
outsl
pop
sbb
or
ret
je
addb
inc
xchg
sbb
insb
test
test
mov
mov
jmp
ret
push
pop
dec
add
pop
sub
and
loopne
fs
pop
mov
orl
fadd
movsl
vmrun
xor
pusha
jo
ret
jp
outsb
leave
or
dec
call
add
into
aaa
xacquire
cltd
lock
sbb
sub
mov
sub
mov
jmp
add
inc
adcl
mov
xor
pop
cs
add
xchg
test
mov
mov
stos
inc
xor
rol
add
add
test
xor
lods
or
and
ret
cmp
add
sbb
rol
inc
aam
xor
add
sbb
lock
nop
mov
scas
js
cltd
adc
aaa
outsl
loopne
add
and
jns
sub
ret
shrb
mov
sub
mov
lods
cmc
adc
mov
shll
adc
pusha
xchg
inc
js
mov
sahf
or
sub
mov
sahf
or
mov
faddl
lock
mov
cltd
push
sub
loopne
nop
lcall
push
in
push
and
or
pop
or
sbb
rol
sub
test
inc
rolb
mov
adcb
outsb
sbb
cwtl
cmp
add
add
fwait
lds
out
pop
lret
xor
adc
rcll
push
pop
lock
add
popa
add
lock
mov
lods
loopne
clc
mov
add
cmp
fdivr
fidivrl
test
fwait
outsl
mulb
loopne
fistl
fcompl
add
movsb
xor
nop
dec
jb
repnz
add
lock
fwait
loope
or
mov
dec
push
pop
adc
fmuls
into
or
mov
dec
fcmovu
nop
pop
adc
fmull
add
or
mov
fnstsw
jbe
daa
cmpl
or
dec
js
xchg
gs
call
jmp
cmovno
enter
cwtl
jmp
jle
mov
mov
add
mov
xor
push
pop
rcrl
pop
dec
pop
pop
stos
call
pop
pop
icebp
push
push
ss
or
inc
js
xchg
jo
dec
cwtl
scas
push
dec
repnz
test
sub
add
and
push
xor
js
jmp
daa
mov
sbb
add
ror
xor
and
inc
xchg
movsb
out
loopew
jl
adc
jns
push
fisubs
pop
jne
push
mov
jno
mov
jbe
inc
cwtl
mov
clc
mov
xchg
pop
jne
iret
je
insl
lock
inc
cmp
and
mov
push
mov
aam
add
rdpmc
dec
pusha
adc
or
xchg
call
mov
and
and
and
imul
ja
xchg
gs
mov
xor
dec
daa
out
gs
inc
aaa
cmp
dec
add
int3
mov
add
xor
push
adc
or
jmp
test
stos
aas
push
push
inc
rclb
adc
cmp
adc
xchg
jo
xchg
or
ds
pop
cmp
arpl
add
xchg
pop
sub
adc
mov
xchg
xlat
adc
fildl
mov
nop
jle
je
rorl
add
mov
inc
or
cmp
addb
sbbb
dec
std
jne
pusha
fwait
imulb
jo
jmp
and
loop
xor
inc
sub
xchg
pushf
cwtl
lock
adc
mov
sbb
pop
dec
test
adcb
dec
fistl
movsl
pop
hlt
rclb
rcl
inc
add
test
pop
out
lret
scas
cld
xor
lret
dec
ret
test
shrl
lods
rcll
shll
xchg
hlt
or
sub
and
add
sub
in
sub
sub
xchg
fists
push
insl
xchg
cwtl
lods
and
out
and
loopne,pn
lcall
cmp
shlb
push
inc
adc
mov
aaa
cmp
aad
add
into
jne
pop
mov
cmp
mov
cmp
push
test
mov
ss
gs
dec
je
xor
xor
das
sub
push
pushf
sub
adc
inc
dec
js
mov
pop
shrb
pop
xchg
sub
dec
mov
outsb
das
dec
and
add
and
scas
out
inc
mov
add
sti
test
jmp
fs
jle
jl
pop
xor
mov
pushl
cmp
sahf
add
negl
jecxz
add
je
sub
pop
sbbb
mov
mov
cmp
in
push
pcmpgtw
cltd
nop
gs
iret
insb
jb
nop
xchg
iret
iret
jbe
lea
and
insb
dec
inc
rorb
jns
push
jmp
dec
dec
insl
call
xor
test
loop
or
shl
sub
sub
sbb
cmp
sbb
jbe
lea
sub
ja
push
sbb
out
jp
pop
bound
mov
lcall
and
jge
rcrl
lea
enter
adc
pop
insb
dec
dec
adc
cmp
add
inc
cmp
test
imul
jo
sbb
dec
pop
outsb
mov
adc
cmpsb
adc
ret
sbb
or
xchg
push
cmp
roll
sbb
cmc
inc
inc
xchg
add
sti
inc
sub
ret
push
test
test
adc
add
inc
lahf
push
adc
sbb
push
sbb
sbb
adc
cmpsl
enter
cmpsl
adc
and
fs
adc
aam
loopne
inc
pop
push
xchg
and
adc
nop
or
add
mov
or
sahf
sbb
xor
inc
dec
pop
or
cmp
mov
xor
cs
shlb
leave
or
push
cmp
int3
push
or
sub
add
mov
js
jno
mov
nop
fwait
jo
and
jb
xchg
and
and
mov
je
and
and
jo
jecxz
xchg
aaa
out
add
pusha
dec
or
mov
mov
adc
xlat
adcl
jbe
jae
and
stc
inc
adc
add
inc
insb
loopne
lea
test
xchg
lock
sub
add
les
mov
stos
xchg
add
jbe
xor
add
sub
ja
dec
adc
repz
push
adc
ret
mov
repnz
adc
inc
jbe
sub
test
cli
push
mov
fnsave
pop
or
push
push
lret
xchg
jo
pop
ret
cmp
mov
adc
mov
inc
push
inc
test
push
jecxz
test
insl
cmp
sub
mov
cmp
add
adc
ds
andb
xor
jbe
adc
push
sbb
jne
sub
mov
pop
imul
in
xor
dec
or
cs
sub
adc
xlat
jne
or
sub
push
add
in
or
dec
jle
leave
push
xor
rclb
xchg
or
sarb
mov
push
dec
ret
adc
push
xchg
mov
mov
lods
popf
pop
fisubs
loopne
push
sbb
push
mov
inc
inc
inc
sbb
dec
pop
xchg
and
lock
pop
mov
insl
shr
icebp
add
test
adc
movsb
inc
adc
sbb
xchg
outsl
jmp
xchg
aaa
xor
or
xor
in
mov
adc
js
jno
stos
mov
jbe
orl
dec
ret
mov
and
icebp
pop
jp
push
in
sub
aaa
or
divb
add
add
push
fistpll
test
inc
xor
lret
shlb
jne
jne
xchg
lock
lret
stos
push
sti
pop
mov
mov
jmp
pop
jae
inc
cmp
mov
xchg
test
push
or
inc
xchg
jmp
inc
rol
or
push
mov
adcb
outsb
inc
xor
push
sub
xchg
inc
cs
inc
cmp
in
jecxz
mov
pop
pop
push
push
push
sbb
jmp
fstl
pop
add
cld
leave
aad
shll
mov
stos
sbbl
lock
push
pusha
or
loopne
dec
movl
bound
or
pusha
mov
aam
jno
mov
js
fcoml
xorb
sub
xor
mov
adc
imul
pop
xchg
fbstp
jno
out
inc
sub
push
pop
xchg
xor
add
push
mov
and
not
mov
cmp
push
aas
or
imul
add
sbb
imul
or
imul
adc
imul
and
imul
sub
imul
xor
xor
lea
dec
sub
xor
ret
and
loope
insl
sbb
dec
xchg
dec
addb
pusha
and
mov
loop
in
cmp
pusha
xchg
loop
dec
push
push
adcb
jo
sub
movsb
call
andb
orl
pop
in
push
pop
cmp
or
les
pop
das
bound
pop
push
mov
jno
add
push
lahf
pop
or
and
cmp
add
or
js
pop
pop
jle
ds
je
or
pop
push
je
pop
je
cld
negl
or
jne
imul
pop
idiv
sbb
sub
push
mov
mov
mov
mov
or
sbb
test
adc
daa
or
fsts
test
add
test
inc
shll
iret
sub
pop
and
clc
bound
add
sarl
jg
rcll
mov
adc
mov
lea
pop
ret
fstps
inc
inc
and
sub
push
or
adc
daa
aad
mov
fcoml
xchg
lock
cmp
cmpsb
mov
and
inc
aam
pop
pop
popf
mov
insl
dec
or
bound
xchg
inc
imul
add
lock
push
addr16
ja
aad
or
insb
sbb
pushf
test
mov
push
pop
adc
xor
xchg
or
je
adc
sbb
jmp
pushf
test
add
and
jne
sbb
adc
mov
lret
add
and
push
dec
cmpsl
arpl
je
lds
push
aad
mov
je
insb
cmp
add
dec
xor
inc
rcrl
pop
je
cmpb
xchg
jne
mov
jl
fists
cmp
sbbb
fcoms
and
nop
mov
sbb
mov
ljmp
jo
outsb
pop
dec
cli
test
or
sub
movsl
mov
test
pusha
enter
push
adc
fs
and
stc
mov
test
xor
push
xchg
add
pop
add
jecxz
ret
lret
insb
in
test
adc
inc
into
add
shrb
arpl
mov
je
push
aas
push
add
push
push
ds
and
std
jno
lahf
push
mov
jno
or
or
pusha
test
test
rcrl
jb
dec
pop
aad
ja
ret
add
js
jb
dec
sub
ss
cli
mov
iret
cmp
lahf
jp
jne
push
lods
inc
cmp
add
cmp
cmp
pop
dec
ret
sbb
loopne
mov
insb
xor
mov
mov
fsubrp
pop
mov
cmpsl
dec
xor
inc
push
xchg
sub
loope
fdivl
mov
lods
or
mov
add
add
xorb
ret
or
adc
xchg
nop
pavgw
lods
xor
cmp
fsubrs
push
add
add
sbb
push
inc
es
xchg
pop
ret
add
jo
aas
in
mov
popa
cs
push
mov
test
clc
or
daa
loope
sub
in
pushl
xor
add
or
dec
adc
roll
frstor
or
cmc
sbb
arpl
xchg
jne
push
cmp
cmc
jnp
mov
add
cwtl
lods
test
inc
sbb
ja
pop
sub
flds
rcl
shrl
out
push
and
jno
xchg
adc
pop
sbb
sbb
push
push
and
add
sbb
dec
movsb
imul
add
xchg
fimuls
fs
std
xor
and
mov
insb
stc
jge
jne
xor
lcall
sub
sub
stos
fsts
les
mov
pop
add
ret
adc
xor
aaa
out
push
or
jmp
add
push
push
inc
dec
push
dec
push
sbb
adc
das
test
cs
and
sbb
in
scas
and
add
nop
inc
adc
add
popa
sub
adc
movl
jb
fs
jne
cmp
xor
sbb
adc
add
out
dec
inc
push
inc
and
mov
int3
idivb
ss
mov
int3
jmp
leave
pop
add
xchg
or
add
lock
shrb
ljmp
pusha
cmp
mov
pop
ret
mov
cs
and
push
call
or
enter
adc
and
push
push
and
sub
in
mov
js
into
xorb
add
and
mov
inc
dec
push
push
add
inc
fwait
js
and
push
into
and
test
jmp
sarl
or
and
loopne
scas
insb
add
xchg
and
andl
stc
orb
mov
adc
pop
scas
in
pop
or
and
jg
adc
and
add
jmp
sbb
sbb
cltd
mov
test
or
mov
jecxz
or
mov
inc
lods
roll
orl
push
adc
enter
dec
ljmp
test
xchg
or
inc
movsb
jno
mov
xor
ud2
inc
push
xor
add
xchg
mov
shll
mov
fwait
push
and
lea
xchg
push
push
out
cmp
xor
lahf
xchg
nop
nop
or
push
push
cmp
push
nop
mov
inc
xchg
ret
out
enter
and
cmp
das
cltd
nop
les
pop
aam
lock
and
fcoms
fs
lea
jne
push
xchg
sub
test
mov
mov
inc
popa
icebp
push
push
mov
sbb
adc
sbb
inc
jp
cmp
and
sbb
push
rclb
repz
in
in
les
fs
mov
outsb
mov
pop
sub
rcll
test
rolb
fcoms
aam
or
mov
stos
push
loope
mov
push
cmpb
push
testb
js
bound
mov
inc
push
pop
shll
add
and
leave
fs
or
xor
fs
push
fs
clc
mov
lods
xor
addr16
lcall
cltd
add
xchg
insb
fmul
icebp
push
ljmp
jmp
push
xchg
test
ret
js
xchg
pop
and
xchg
pushf
pop
or
sub
add
sub
shlb
xchg
push
and
loop
adc
mov
push
notb
pop
negl
push
dec
loop
pushf
sbb
andb
push
lds
or
and
or
jecxz
xor
sarl
das
aam
sub
inc
adc
test
lea
lods
icebp
dec
push
fcompl
aam
loop
dec
xchg
daa
fs
add
repz
jge
inc
or
adc
xlat
sub
inc
dec
add
je
jb
mov
sub
or
xlat
sbb
imul
and
cltd
imul
inc
pop
xor
xchg
add
cs
movsl
add
sub
nop
imul
xor
jb
lods
push
aam
jmp
inc
rorb
dec
ret
dec
mov
sub
cltd
adc
or
pop
dec
jl
dec
loop
loope
mov
pop
fiaddl
sbbl
test
and
or
inc
imul
arpl
icebp
and
jmp
leave
in
push
xorps
and
aaa
and
mov
xchg
movsb
mov
xchg
test
push
out
or
jmp
add
mov
movsb
adc
cmpb
push
jne
loopne
jmp
movsb
mov
dec
dec
insb
nop
adc
shrb
xor
fcmovnu
mov
rcrb
pusha
push
fldl
js
xchg
mov
inc
sub
dec
and
inc
xor
addb
sbb
add
push
inc
or
cmp
inc
inc
adc
push
or
push
or
mov
outsl
or
in
lods
int
in
jne
or
or
jo
shlb
fcoml
mov
xor
pop
cmc
nop
add
sbb
mov
mov
rol
mov
pop
js
jnp
mov
jle
out
fcomps
stos
sub
cmp
push
test
xchg
clc
shrb
push
movsb
mov
mov
jecxz
loope
in
or
mov
js
enter
aaa
xor
adc
inc
dec
imul
test
push
sarl
sbb
jmp
xchg
and
or
addl
mov
fisubrl
or
cli
inc
js
addb
jne
pop
pusha
jb
jb
jb
or
inc
pop
jb
pop
fs
xchg
jb
jb
cmpsb
pushf
jae
cmp
jnp
jb
nop
int
dec
jb
jb
xchg
inc
movsb
push
les
pop
dec
mov
inc
xchg
les
push
push
cmp
aam
pop
and
push
xlat
mov
and
mov
jno
add
push
js
subl
jmp
repnz
push
mov
mov
and
push
lock
call
dec
aam
test
xchg
rorb
add
xchg
sbb
sbb
addr16
add
bound
mov
es
cltd
mov
lcall
lahf
pop
idivl
sbb
mov
or
or
mov
sub
adc
add
popa
aad
push
out
orl
popa
add
add
xchg
push
xchg
jne
cltd
in
push
mov
sbb
lods
jae
in
add
pmulhuw
sbb
in
and
xor
enter
add
dec
je
pop
add
add
sbb
or
popf
cmpsb
jle
dec
and
jo
add
dec
pop
jne
push
push
repnz
mov
adc
lods
mov
rcr
inc
shl
cmp
mov
scas
nop
add
add
jg
sbb
sub
pop
push
jb
sbb
test
pop
and
nop
add
scas
nop
xchg
or
lods
sbb
push
mov
xchg
mov
mov
lret
enter
aas
pop
push
adc
imul
insb
fs
sub
aas
pop
enter
movsb
xor
daa
xchg
out
enter
add
iret
xchg
xchg
xchg
xor
dec
testl
and
push
int
nop
mov
leave
aad
and
and
push
dec
push
add
lods
pusha
push
mov
rcll
pop
push
adc
xchg
test
dec
inc
mov
lcall
lods
mov
scas
or
loop
scas
dec
push
fldl
leave
mov
jecxz
fucomp
dec
enter
jecxz
or
in
or
pop
or
shlb
enter
ss
mov
jae
push
inc
int3
or
adc
int
cmovbe
dec
inc
rcll
jl
sbbb
adc
mov
adc
mov
push
inc
pop
add
sub
mov
inc
cld
fwait
add
xor
push
jb
adc
in
and
fwait
and
inc
mov
call
leave
leave
es
sub
push
add
sar
add
mov
jb
mov
push
jb
xor
xor
sub
adc
xor
xchg
or
in
aam
or
ficoms
int3
aam
pop
lock
xchg
data16
fiadds
fs
fxam
cmp
mov
jmp
pop
aas
pop
xor
je
dec
and
xchg
testl
and
and
and
sbb
inc
inc
data16
sbb
pop
jo
ss
add
call
fs
enter
mov
data16
lea
add
inc
ficompl
inc
cwtl
decb
pop
jb
rcrb
enter
sub
inc
sbbl
xchg
in
pusha
mov
or
add
mov
push
leave
cmp
nop
fwait
adc
inc
and
push
stc
mov
push
mov
push
roll
pusha
fwait
leave
cld
fwait
inc
push
sbb
push
lock
and
inc
mov
mov
in
cmp
xchg
andb
add
fs
xchg
mov
adc
sub
add
enter
sub
inc
pop
and
add
decl
cltd
inc
sahf
daa
or
sbb
fsub
in
je
push
and
inc
push
shl
cltd
add
push
lcall
and
cmpsb
nop
xchg
inc
adc
push
cmp
push
push
outsl
dec
push
cmp
leave
inc
jb
fwait
pop
cmp
xor
enter
mov
dec
repz
pop
dec
cmpsl
scas
push
push
xor
pop
std
add
cmp
lea
adc
xchg
inc
dec
push
push
enter
inc
or
pop
and
and
pop
and
enter
and
repnz
or
xchg
addl
mov
xor
flds
shll
jo
pop
pop
mov
shlb
bound
lods
add
ror
add
and
and
aam
pop
leave
adc
movsb
aad
xor
inc
scas
in
add
sbb
in
cltd
xlat
sbb
and
enter
cmp
adc
adcb
push
fistl
cltd
xor
mov
cmp
mov
jmp
xchg
mov
mov
inc
fcmovnb
mov
cmp
cmpl
leave
or
enter
xchg
xchg
add
sbb
popa
orb
mov
popa
dec
sahf
aam
jno
movsl
sbb
add
mov
mov
pusha
repz
push
push
fs
gs
movsb
add
pop
inc
movsb
inc
shll
dec
push
movb
push
insl
inc
pushf
jo
add
add
adc
adc
mov
into
cmpb
mov
aam
sub
and
cld
and
pop
sbb
movsb
mov
pop
shll
pop
and
and
sbb
or
push
je
inc
scas
xchg
mov
sbb
pop
add
add
lea
test
cld
fwait
xor
xor
jb
or
add
hlt
xchg
and
leave
enter
adc
pop
daa
or
pop
in
in
add
xchg
sub
adcl
xchg
fsubrl
or
es
scas
fs
xor
cmp
nop
sub
int3
xor
push
add
xorb
daa
xor
fnsave
pop
cmp
ja
or
fwait
dec
sbbb
jp
jne
pusha
arpl
dec
ss
xchg
or
pushf
sub
add
ja
mov
push
in
enter
mov
mov
ret
xor
pop
cmp
sbb
mov
push
fisubrl
xor
or
pushf
mov
push
ret
inc
dec
cmp
mov
inc
addl
outsl
adc
jle
push
mov
inc
inc
and
enter
and
or
mov
xor
in
jo
pop
pop
sbb
cmp
push
enter
xor
and
add
iret
and
or
cmp
mov
cmp
xor
inc
pop
push
xchg
dec
fisttpl
add
cld
rcrl
push
sbb
outsl
xchg
bound
sbb
lock
pop
ret
minps
sbb
xchg
sub
xor
sub
enter
loopne
adc
push
sbb
out
test
push
jo
inc
bound
pop
cmp
sbb
aas
sbb
dec
or
mov
sbb
fmull
sbb
gs
addb
sbb
push
push
dec
sub
addb
inc
push
pop
sbb
pusha
fisttpl
mov
aaa
repz
or
add
sbb
jo
sub
cmp
ds
fs
sbb
sbb
nop
xchg
cmp
mov
nop
xchg
add
add
clc
sbb
xor
pop
pop
fs
dec
mov
inc
enter
xchg
cld
in
daa
pop
jbe
xlat
js
orb
or
popf
mov
nop
or
scas
and
jo
adc
fnstenv
adc
dec
inc
xchg
movsb
mov
mov
mov
clc
and
or
arpl
cmp
jp
add
scas
insl
cmp
outsl
mov
or
push
sub
pop
roll
inc
jg
insb
loope
es
add
pusha
fisubs
inc
loopne
and
pop
fstpl
jns
ror
popa
xor
pop
adc
jmp
inc
lods
inc
pop
outsb
mov
lea
sub
cmp
cs
outsb
xchg
pop
push
add
cs
dec
add
sbb
mov
sbb
je
mov
pop
sbb
les
es
sbb
pop
cld
push
or
sub
add
adc
call
cwtl
mov
sub
sbb
aaa
jecxz
sbb
inc
insb
jns
cmpsl
add
stc
push
andl
std
nop
jns
and
add
or
xchg
add
sbbl
loopne
fmul
cmpb
lods
xor
xor
xor
add
lahf
call
int3
xor
add
and
xor
je
lods
nop
xlat
cs
aaa
int3
cld
sbb
or
les
test
and
dec
enter
decl
adc
dec
movsb
pop
add
pop
inc
sbb
es
adc
jecxz
dec
and
adc
movsl
in
add
mov
cmp
push
cltd
lods
adc
fisubrs
mov
mov
push
test
xchg
cmpsb
inc
les
test
xchg
jecxz
ret
push
sub
movsb
add
jge
cmp
mov
xchg
in
and
and
daa
xchg
mov
pop
test
pop
std
push
leave
and
nop
enter
leave
add
jo
sub
sbbb
repnz
pop
leave
sbb
xor
mov
bound
rolb
or
sbb
mov
in
xchg
jbe
pop
push
lods
sbb
cmpb
sbb
loopne
enter
test
cmp
in
sbb
enter
mov
inc
pop
outsb
add
pop
adc
and
aaa
push
cwtl
js
adc
xor
shlb
and
and
cmp
cmc
pop
into
inc
mov
test
popf
mov
adc
mov
pop
mov
rolb
or
movsl
shrb
movsl
jl
mov
loope
dec
dec
add
cmp
inc
add
dec
mov
iret
inc
or
mov
mov
leave
or
ret
clc
lret
shrl
popf
mov
sbb
and
movsb
in
add
lea
pushf
push
add
sub
xchg
fdivrs
mov
dec
jae
inc
jl
test
in
xchg
and
aam
dec
push
xor
add
fwait
addr16
repnz
cltd
xor
dec
rcrb
mov
dec
sbb
mov
xor
fnstcw
or
aaa
mov
mov
add
or
fcomp
inc
scas
or
or
inc
cmpsb
dec
mov
sub
fildl
pop
ror
sbbb
mov
dec
fcoml
pop
insb
xor
push
xor
daa
and
adc
mov
movsl
xchg
jbe
cmc
sbb
sbb
sbb
inc
xor
mov
in
push
jb
sbb
mov
jmp
and
dec
sbbl
inc
or
sbb
loopne
outsb
cmp
mov
mov
fldcw
xor
xchg
sub
xchg
xchg
test
dec
clc
dec
roll
pop
and
cmp
pop
push
pop
mov
popa
xor
ss
and
mov
xor
mov
xor
push
push
xor
cwtl
and
push
or
jns
push
or
add
sbb
shlb
lock
stc
add
sahf
inc
sbb
jge
sbb
push
pop
jo
cmp
jne
push
xchg
push
orl
lods
bound
mov
aas
mov
das
sub
fadd
cs
mov
pop
jb
rol
add
inc
push
aad
pop
test
xorb
js
loopne
xchg
mov
rolb
fsts
outsb
and
add
or
iret
xor
and
or
pop
dec
add
sti
pop
jb
jnp
add
pop
rolb
in
add
cmp
mov
nop
sub
inc
sbb
adc
and
jb
adc
bound
adc
testl
sbb
sbb
sar
adc
dec
cld
fwait
pop
nop
nop
mov
adc
mov
repz
mov
sbb
in
sbb
add
std
pop
inc
test
sbbb
std
add
and
leave
push
enter
cmp
sbb
jo
in
and
dec
add
inc
leave
orl
push
and
std
sub
inc
sahf
add
ss
call
shlb
and
push
add
pop
lods
xor
int
push
popa
leave
add
or
test
push
sbb
rorl
cmpsl
inc
js
ja
aam
addb
jno
inc
jae
mov
fwait
rcll
mov
movsb
jo
outsl
pop
jns
push
sbbl
fsubrp
in
jns
cltd
pop
cmp
loope
add
enter
and
fldt
in
pop
aaa
dec
ret
jmp
adc
sbb
add
pop
inc
and
hlt
test
or
xchg
test
shrb
and
xchg
js
cltd
inc
push
push
dec
xchg
loopne
pop
mov
mov
pop
xchg
js
fwait
in
add
push
sbb
push
cmpsl
push
xchg
jne
movsl
inc
pop
jnp
lahf
cmc
movsl
xor
es
jmp
insl
mov
inc
or
sbb
stos
test
xchg
inc
or
repnz
inc
sarl
or
sbb
dec
push
mov
leave
adc
or
sub
adc
or
pop
ljmp
mov
shrb
pop
inc
jmp
nop
dec
xchg
adc
adc
jmp
cs
add
adc
push
fs
sub
dec
pop
add
in
sbb
xchg
adc
xchg
sbb
in
cmp
cltd
in
hlt
push
scas
dec
cs
pop
and
and
nop
dec
and
cltd
in
in
in
dec
cs
add
scas
fsubl
sub
mov
and
aam
xchg
add
dec
scas
dec
int3
sub
cs
jg
mov
pop
jle
pop
jle
add
fstpt
push
or
jmp
xor
add
pop
push
jecxz
popa
xchg
push
test
push
adc
or
mov
testb
xor
shlb
jno
or
and
sub
adcb
test
push
push
or
jb
lahf
dec
lret
inc
cltd
inc
pop
fidivl
jge
push
ss
add
jno
add
rclb
sbb
push
and
mov
nop
loopne
add
push
xchg
xchg
push
sahf
jge
and
in
subl
xchg
push
or
sbb
loope
sahf
sbb
andb
mov
les
dec
push
mov
mov
xor
dec
jl
pop
jmp
insb
dec
paddd
cmp
mov
fnstsw
jnp
outsl
orb
or
xchg
pushf
mov
push
ret
pusha
inc
out
mov
inc
or
and
ret
push
and
mov
push
mov
fwait
sub
pop
insb
loopne
mov
adc
adc
push
xor
xor
mov
push
adc
mov
jge
push
pop
mov
mov
mov
and
pop
add
cmp
lds
cmpl
movsl
mov
cmp
push
xchg
jo
push
mov
cmp
sub
lock
fdivrl
repz
scas
rcll
adc
xor
in
pop
enter
pop
pushf
jns
mov
push
fst
sub
js
es
sub
xchg
or
popf
inc
je
fwait
and
push
inc
mov
mov
mov
pop
mov
lods
test
sub
jne
pop
movsb
mov
fdivs
xchg
and
add
mov
aas
jge
jmp
sbb
push
adc
int3
push
loop
cmpsl
xchg
and
and
or
test
cmp
pusha
nop
adc
lahf
adcb
xchg
xor
mov
push
adc
mov
xlat
push
cmp
dec
or
adc
add
mov
cmp
and
leave
sahf
aaa
jmp
push
add
rol
enter
clc
cs
inc
push
cltd
cmp
fstl
lock
inc
add
mov
add
mov
int3
and
addr16
xchg
and
insb
jne
jecxz
pop
add
adc
sub
mov
aaa
or
add
xchg
loopne
int
sbb
sub
push
xchg
and
sbb
lods
or
pop
mov
test
or
pop
ret
xchg
decb
xstore-rng
cmpsl
test
and
je
add
fcomip
push
adc
or
cli
mov
dec
mov
popa
out
mov
jns
clc
jb
adc
cmpsl
and
cmpb
pop
mov
sbb
fcmovnb
sub
xchg
imul
mov
sbbb
add
or
pop
sub
and
dec
cltd
out
cmp
inc
push
add
mov
fldenv
dec
je
sbb
pop
jne
cld
jmp
in
add
add
or
mov
pop
or
jl
or
jg
hlt
fildl
or
mov
push
and
repnz
sti
inc
sarb
xchg
jne
mov
mov
pop
push
xchg
mov
hlt
add
in
cli
pop
or
cmc
mov
hlt
inc
stos
xor
sbb
inc
sub
xchg
and
mov
push
or
push
sbb
test
sbb
movl
sti
pop
jne
fildll
mov
aaa
cmp
pop
or
jmp
adc
in
repz
dec
dec
aam
mov
push
push
or
in
xlat
xor
roll
lds
sub
inc
dec
bound
cmpsb
addl
adc
aaa
sub
arpl
pop
jl
xchg
mov
lea
or
add
xor
div
test
pop
movsb
jge
inc
sbb
mov
cwtl
adc
ret
and
fwait
dec
nop
cmp
add
mov
js
dec
xor
inc
in
repz
lds
rorl
jne
adc
lock
data16
test
lea
sti
mov
mov
jb
and
pop
js
insb
xchg
or
jns
outsl
aam
int3
add
sbb
in
lcall
mov
das
in
push
push
push
or
loope
add
and
enter
push
or
dec
and
push
sbbl
cltd
adcl
scas
mov
cmp
jbe
dec
cwtl
je
in
xor
mov
xor
add
mov
add
mov
imul
fisttps
mov
outsl
adc
push
xor
adc
pusha
adc
aam
ror
adc
ja
and
jle
push
popf
std
and
push
pop
out
hlt
fisttpll
pop
stc
not
xor
jb
testl
dec
rcrl
cwtl
lret
adc
lock
lock
or
add
stc
jbe
stc
push
adc
aas
cmpsl
xor
jmp
stos
push
jle
add
or
shll
adc
jle
sub
mov
andb
pop
jecxz
cs
clc
xor
fidivrs
add
hlt
sub
and
cwtl
cli
ds
movsb
mov
sbb
or
sub
add
lock
add
cmp
mov
in
mov
jecxz
jmp
pop
or
jb
insl
clc
add
pop
inc
call
lea
and
divl
add
mov
jp
cli
jns
pop
cmp
sbb
and
jae
inc
adc
add
in
or
in
incl
inc
inc
mov
inc
cmp
jne
sysenter
sub
enter
sbb
cld
popl
jb
mov
sub
add
push
cmp
lea
clc
scas
pop
inc
and
jno
push
jge
lea
mov
repnz
jg
jl
jno
and
icebp
or
sbbl
jbe
cmp
push
adc
cmp
xor
inc
rcrl
stos
xchg
dec
push
inc
fyl2xp1
inc
addr16
sub
jl
mov
push
insb
cmp
insb
in
ret
or
leave
pop
sbb
adc
jmp
ss
cmp
sub
push
aad
pop
ret
add
pop
sbb
push
lea
vorps
xchg
inc
cmp
jecxz
sub
push
pop
or
sub
sub
out
cld
cmp
sbb
not
and
dec
mov
jne
cmp
sub
out
mov
iret
sbb
not
and
dec
or
repz
cs
dec
cld
pop
insb
add
stos
adc
pop
fcmovb
xor
and
dec
out
jne
or
cmp
and
pop
sub
or
xor
in
aaa
xor
jle
clc
mov
add
inc
insb
pop
insb
xorl
hlt
xchg
push
add
push
lea
dec
inc
testl
jg
dec
add
shll
dec
sbb
and
xor
pusha
clc
add
test
loope
out
dec
or
pop
jno
sti
xor
jae
sbb
mov
pusha
cmp
clc
add
jmp
xlat
mov
xchg
add
push
push
hlt
mov
or
ret
je
pushf
aaa
sub
dec
pop
insb
aad
inc
adc
jl
adc
lret
push
pop
arpl
jp
mov
jmp
cld
les
jne
inc
push
loope
scas
js
push
xchg
shrl
mov
popf
pop
ficompl
push
push
push
xorl
mov
dec
cwtl
fbstp
cmp
loope
xor
cmp
ret
mov
sbb
lret
popf
mov
in
jne
push
jne
scas
lods
jno
outsb
xor
lahf
out
jle
jl
jmp
jae
or
pop
sbb
pop
or
in
ret
and
scas
and
test
push
jp
jb
inc
and
and
pop
xchg
daa
dec
sub
pop
fimuls
lds
cmpl
sub
and
xlat
fstpt
jnp
pop
cmp
pop
sbb
out
cli
and
mov
sub
push
push
test
repz
sbbl
daa
rcrb
pushl
call
lret
lea
pop
mov
push
notb
xor
pop
mov
sti
repnz
inc
sub
sub
movsl
inc
push
inc
scas
ffreep
jge
dec
nop
mov
incl
mov
addr16
nop
fld
loopne
cltd
incw
cmp
pop
jecxz
xor
mov
pop
push
scas
inc
mov
ja
dec
test
xchg
leave
dec
cmp
jecxz
jno
sub
inc
mov
cmp
jecxz
sub
cmp
pop
loope
push
push
push
lcall
int
push
inc
add
and
shl
xor
pop
sub
pop
shlb
push
push
ljmp
call
filds
add
push
dec
mov
mov
loope
add
pushf
cmovp
in
repnz
rcrb
add
cmp
jmp
add
xchg
add
push
inc
inc
popl
ret
adc
pop
push
orl
call
cmp
rcrl
decl
dec
mov
je
inc
hlt
jae
pop
xor
sbb
cmp
nop
gs
add
lds
sbb
pop
push
mov
punpckhbw
pop
mov
je
int
mov
sbb
ret
sub
cmp
inc
mov
cmp
icebp
inc
pop
or
je
jo
push
cmp
push
ja
mov
mov
inc
fisubrl
std
mov
jl
std
adc
xor
pop
dec
or
jg
jae
arpl
inc
sub
add
sbb
incb
cmp
ja
iret
leave
and
hlt
push
pshufw
pusha
add
xchg
cmp
movl
shrl
mov
push
rolb
and
leave
inc
jb
push
push
fcomps
cmp
fistpll
pushf
popa
jp
or
jge
add
jns
fstl
push
xchg
dec
add
cs
mov
push
sbb
adc
add
sbb
and
fdivrs
outsb
pusha
je
xor
add
jecxz
inc
add
sub
lods
jmp
ljmp
rorl
loop
int
dec
add
jle
adc
push
hlt
call
push
icebp
add
and
dec
sbb
aam
mov
add
add
adc
mov
jne
dec
ja
call
aaa
sbb
pop
aas
adc
out
pop
repz
and
andl
ds
shrb
jp
in
push
cltd
add
jo
and
imul
andl
arpl
jmp
xchg
xor
dec
push
mov
jbe
sub
sub
push
mov
pop
sbb
mov
sub
inc
mov
pop
int
adc
adc
push
xor
inc
and
in
jb
or
sbb
repnz
rorl
mov
jae
sub
cmp
lret
dec
js
sub
push
xchg
ret
and
les
mov
xor
mov
fmuls
clc
xor
sbb
dec
sub
lahf
lret
mov
test
arpl
add
ret
decl
lret
jbe
idivl
cmpsl
or
fld
cld
pop
and
and
std
fst
call
pop
sbb
dec
adc
stc
ds
je
pop
test
add
push
mov
icebp
adc
mov
mov
repz
mov
add
sub
and
jb
or
int
mov
mov
push
push
push
push
jle
jp
outsb
fsubrl
push
mov
and
in
mov
mov
push
add
sbb
push
loope
or
lret
or
fucomp
sub
aas
add
mov
cld
add
int
ret
loope
xchg
add
and
xchg
or
push
jno
mov
fisubs
inc
pop
jae
mov
inc
add
outsb
das
mov
jbe
mov
mov
test
pop
mov
mov
lds
mov
mov
int3
lds
or
add
mov
sub
test
inc
aad
push
push
push
inc
xor
int
iret
or
imul
shrl
jno
pop
fidivrl
xchg
lock
jne
jno
out
xor
dec
je
dec
mov
push
cmp
into
push
data16
mov
fsubl
hlt
mov
adc
enter
bound
mov
addr16
or
or
fsubrs
ljmp
add
lods
packuswb
xchg
aas
xor
xlat
popa
addb
xchg
jge
mov
dec
push
cmpl
cmp
lret
lds
enter
add
aaa
inc
cwtl
push
fisttpll
enter
js
dec
movsl
sub
mov
xor
add
or
adc
js,pn
jae
test
adc
or
js
sbb
sti
push
cmp
jb
jmp
pop
add
fsubl
fstl
jle
adc
rolb
lea
and
sbb
add
sbb
hlt
insl
ret
and
aam
loop
add
in
jns
fistpll
adc
or
mov
sar
push
pop
inc
add
pop
imul
push
mov
aas
cli
adc
or
scas
in
jae
sarl
sub
lock
and
adc
cmp
inc
adc
inc
loopne
adc
repnz
sbb
test
or
xor
sub
adc
cld
add
pop
push
orl
scas
jmp
and
outsb
enter
cmc
js
repz
mov
pop
mov
mov
lock
jg
mov
pop
fwait
add
adc
add
andb
insl
inc
mov
sti
or
popf
lcall
mov
adc
in
loope
adc
xchg
pusha
add
cmp
icebp
xchg
aam
lock
cmpsb
fsubr
push
add
jb
add
loopne
inc
or
fldcw
mov
push
sarb
dec
stc
mov
sub
test
shlb
aam
ret
xchg
push
in
fsts
in
dec
mov
dec
add
leave
jo
and
jp
sbb
pop
jl
mov
mov
push
sbb
adc
subl
clc
jae
aad
pop
rorl
sub
pusha
dec
movsl
test
shrb
pusha
mov
call
sub
adcb
xchg
pushf
shll
rorl
inc
getsec
js
sbb
ss
jnp
std
jmp
jmp
fwait
mov
xor
jnp
fwait
push
inc
xchg
add
push
sti
pop
pop
push
cmc
enter
into
jne
addl
pusha
daa
hlt
push
xor
pop
in
mov
inc
cmpb
or
sub
imul
loope
dec
dec
dec
push
push
mov
lret
sub
cmpsl
dec
aad
push
cmp
mov
cmc
add
xor
pop
adc
jb
push
aad
or
inc
or
or
mov
xor
aas
pop
push
es
adc
xchg
and
pusha
mov
pop
lcall
and
or
imull
shr
ja
sbbl
xchg
and
sub
je
out
jecxz
jnp
sub
test
dec
pop
or
roll
jecxz
add
std
sbb
filds
repz
add
lar
nop
inc
push
sbb
fs
or
push
sbb
or
push
sysret
bound
adc
dec
in
jo
inc
movsl
or
or
popf
add
dec
jne
movsb
mov
and
mov
div
pop
repnz
push
add
cli
cmpsl
orb
rcrb
out
sbb
and
imul
adc
push
or
popf
clc
outsb
ret
push
lea
cli
or
mulb
xor
imull
imul
push
das
add
adc
arpl
mov
and
mov
test
movw
add
jnp
mov
push
cmpsl
nop
dec
adc
add
cmp
jg
mov
jge
mov
pop
cmp
sti
push
mov
pop
adc
cmp
jb
jne
mov
lret
out
out
fstpt
sbb
inc
and
pop
push
dec
jne,pn
and
pop
rcrl
mov
pop
std
cmp
jns
shl
add
pop
pop
insb
cmp
sub
sti
loopne
cmp
lret
fsubrs
and
mov
hlt
pop
mov
stos
aaa
clc
in
test
rep
lea
ja
rorl
add
cmp
adc
jge
cmp
aas
mov
in
rcll
mov
js
cmpsl
iret
hlt
movzwl
or
cmp
test
jmp
lods
sub
dec
pop
add
incw
add
sub
cmp
adc
mov
jne
cmp
and
jge
add
ja
imul
add
lahf
mov
dec
push
jg
lock
iret
add
movsb
dec
cs
pop
test
ja
les
loopne
in
dec
lea
stos
aas
or
pop
psrlq
mov
daa
js
sbb
sub
loope
jg
push
jbe
fsubp
mov
fidivs
inc
cld
jo
fwait
fs
int3
fdivrs
mov
or
inc
jno
fwait
popa
push
cmp
sbb
inc
cmpsl
and
mov
push
cmp
decl
push
mov
jne
adc
lock
mov
pop
loopne
movsl
adc
sbb
xchg
daa
or
push
xor
jmp
outsl
and
add
dec
cmp
icebp
sbbb
mov
roll
xchg
clc
roll
jge
inc
arpl
fbld
les
jge
or
xchg
sbb
add
jmp
sbb
add
out
cmp
or
jle
enter
xorb
add
rcrl
mov
xlat
rcr
outsb
pop
out
sub
gs
push
jo
sbbl
jmp
pop
lock
dec
jne
add
pop
rol
jns
push
subb
pop
jge
pop
push
scas
out
pop
add
loopne
jo
call
jno
dec
inc
cmp
xchg
sahf
add
add
shll
ss
push
cmc
sbbb
lea
sub
mov
dec
pop
mov
mov
cmp
mov
loop
or
mov
sbb
stc
dec
xchg
in
popa
and
mov
jno
in
test
mov
sub
shr
lea
lock
pop
jbe
mov
sti
jmp
outsl
pushf
lods
enter
cmp
loope
lahf
add
dec
mov
xchg
lods
das
pop
dec
push
lock
stos
test
adc
pop
mov
mov
sub
and
repnz
mov
dec
cmp
cs
jnp
fisubrs
push
mov
clc
loopne
mov
std
dec
fimull
daa
jle
in
jmp
aaa
cmp
in
ret
repnz
shl
jge
push
lock
cmp
sets
xchg
movsl
dec
adc
loope
mov
or
pop
repz
xor
sti
add
mov
mov
xchg
add
or
scas
mov
sub
xchg
add
adc
pop
hlt
pop
call
pop
inc
das
cmpl
or
push
jle
gs
pop
add
pop
pop
adc
sbb
push
add
and
sbb
ret
nop
jge
ret
sub
sbb
push
mov
jns
ret
addb
jle
pop
dec
mov
mov
push
or
icebp
pusha
lahf
dec
loope
outsl
jae
out
pusha
mov
lea
in
push
addb
loopne
mov
movzbl
pop
push
or
xor
jbe
decl
repz
xchg
imul
pop
add
insb
cmpsb
mov
dec
mov
imul
xor
mov
in
pop
sbb
push
push
mov
ret
sub
leave
lock
popa
push
or
dec
loopne
ret
daa
add
repz
fnstcw
clc
testl
push
push
adc
adc
sub
decb
jns
aad
push
iret
push
lds
daa
dec
insb
add
adc
sbb
or
add
mov
sbbb
aaa
mov
pop
mov
dec
xchg
add
sbb
out
mov
out
dec
sub
outsb
adc
pmuludq
sbb
add
push
mov
lret
xorb
xchg
inc
test
adc
je
sub
add
cmp
inc
sbb
sbb
or
inc
add
lcall
daa
sbb
dec
xor
rol
insl
mov
orl
push
lahf
add
and
pop
adc
xor
lock
or
rcrb
popa
xchg
mov
pop
mov
pop
sub
cmp
adc
jno
mov
hlt
cmpsl
ficomps
jl
mov
xor
cmpsl
pop
out
mov
test
and
inc
stc
jb
and
ss
or
adc
and
push
mov
inc
js
movq
cmp
or
xor
adcl
push
sbb
lods
bound
ljmp
pop
inc
sbb
sti
mov
add
daa
test
shlb
xchg
dec
add
lea
jl
cmp
pop
cld
pop
mov
pop
ret
or
or
push
jle
stos
orl
adc
push
push
sbb
xor
enter
or
pop
pop
push
and
and
cmc
mov
sbb
or
pop
and
mov
shlb
mov
mov
jbe
shlb
jne
cmp
fisubrs
mov
mov
not
fistl
stc
es
and
pop
sub
or
or
insb
arpl
aad
test
inc
dec
jne
pop
pop
pop
pop
test
xchg
pop
lea
faddl
jg
shrb
push
dec
je
loopne
add
shl
mov
jmp
dec
loopne
xchg
scas
hlt
sti
pusha
cmpsl
jl
aaa
push
mov
icebp
lods
dec
loop
push
loopne
and
inc
scas
orb
or
clc
fdivrp
shr
shl
dec
inc
jg
call
cmp
leave
jb
inc
adc
push
and
inc
filds
dec
or
mov
lock
mov
lcall
sbb
cmp
or
cmp
dec
jmp
inc
clc
movb
sub
jg
les
jl
jmp
test
pop
ljmp
fucomp
pop
pop
sub
jnp
loope
data16
mov
decl
mov
add
xchg
jle
test
push
inc
add
xchg
xorl
inc
mov
or
dec
cld
jg
in
add
xor
mov
scas
inc
mov
or
push
mov
and
enter
loopne
enter
pushf
xor
loope
cmpsl
popa
lea
mov
pop
sbb
lahf
cmp
cmc
pop
roll
mov
orb
cmp
jb
adc
jmp
or
push
pop
pushf
mov
in
mov
or
and
add
test
roll
mov
or
or
lahf
cs
fdivrs
das
add
pop
hlt
movsb
xchg
lods
fildll
dec
pop
je
or
adc
mov
inc
fiadds
mov
and
and
mov
xchg
adc
mov
inc
test
mov
add
ljmp
cmp
lds
mov
nop
adc
pop
jo
inc
popa
pop
pop
jmp
test
sbb
test
jmp
pop
je
cld
adc
jl
jle
cmpb
jne
pop
outsl
popa
nop
inc
sub
mov
adc
mov
and
xlat
add
jmp
sarb
jmp
dec
add
fidivl
aam
xor
nop
ljmp
arpl
xorl
rolb
xor
aas
xor
shlb
dec
xchg
push
adc
mov
inc
adcb
mov
xchg
adcb
xchg
xchg
in
adc
loopne
xchg
push
bound
pop
pusha
lahf
cmp
add
jns
and
add
enter
cli
shl
mov
xor
or
dec
xchg
in
or
sahf
popf
nop
gs
xchg
loop
inc
push
pop
xchg
negl
cmp
mov
mov
push
add
ds
push
and
or
sbb
pop
jmp
adc
int
sub
push
je
sbb
clc
dec
or
cmp
adc
xchg
ja
adc
adc
jne
adc
loop
pop
mov
push
push
xor
outsl
pop
jno
addb
or
or
popf
dec
fnstcw
repz
adc
inc
sub
and
xrelease
or
mov
lock
jmp
hlt
inc
lret
push
push
add
jge
ds
shll
adc
push
push
lock
and
mov
stos
and
adc
ss
jmp
adc
xor
lret
add
mov
clc
jbe
xchg
dec
pop
mov
inc
ss
nop
xor
or
add
sahf
das
js
es
add
test
add
inc
lcall
or
out
test
cmp
jb
scas
or
dec
or
insl
or
dec
mov
sub
or
sahf
call
mov
test
insl
pusha
mull
mov
or
stc
out
fisubs
adc
inc
arpl
mov
add
sbb
insb
enter
xor
in
and
add
fists
mov
ljmp
add
cmpb
mov
test
mov
bswap
adc
cmp
pmulhuw
add
jno
pop
cmpb
and
jle
and
pusha
jae
adc
das
add
les
inc
and
clc
sub
mov
push
dec
and
sbb
ret
pop
xor
les
add
lock
mov
fldcw
repnz
lock
mov
mov
xchg
rcr
inc
lock
or
movsl
add
dec
push
push
or
inc
hlt
mov
jp
cmp
popf
ss
ret
test
dec
inc
roll
iret
inc
imul
or
fnsave
sbb
cmp
sbb
movl
cmp
jge
and
pusha
mov
mov
dec
inc
sahf
or
jbe
sub
push
push
pop
add
inc
sbb
mov
mov
sahf
pop
add
pushf
movsl
loopne
lods
and
loop
arpl
xchg
sysret
jbe
subl
push
inc
rorl
jmp
xor
xor
dec
jge
mov
sbb
ljmp
mov
add
imul
add
add
add
and
mov
pop
pusha
gs
xchg
and
and
enter
and
push
notb
adc
xchg
into
and
lods
movsl
sub
lds
jno
pusha
aam
sub
dec
and
add
mov
lret
call
cld
sub
mov
add
or
lahf
or
mov
dec
loopne
incl
hlt
repnz
mov
jo
cmp
lds
shrl
pop
push
in
cmp
mov
cli
jmp
cmc
cmp
rcll
push
sub
test
sbb
stos
push
shl
jg
mov
shl
jmp
sub
mov
push
iret
shl
sti
out
dec
xchg
jl
out
jg
xor
rorl
sbb
inc
sbb
clc
cmpsl
arpl
dec
sbb
daa
sbb
push
adc
or
pop
je
dec
mov
cwtl
sbbl
and
or
mov
push
inc
cmp
xor
outsb
testb
jl
arpl
or
fstpt
xor
xor
cwtl
lods
adc
mov
mov
pop
push
push
adc
mov
pop
filds
repz
popa
fdivrl
mov
xchg
loopne
out
pop
jmp
mov
mov
in
sub
call
sbb
xor
mov
cmp
repz
xchg
sbb
sub
lret
aas
dec
cmp
mov
ret
or
sub
dec
cmp
das
sub
xor
jae
inc
sbb
push
inc
arpl
pop
mov
mov
mov
shl
dec
in
jb
jecxz
sub
sbb
or
and
cmp
jns
push
jo
fidivl
or
xchg
xchg
push
rclb
pusha
mov
jg
je
mov
mov
mov
cmp
push
loopnew
sub
lods
dec
inc
xor
xchg
arpl
sar
pop
xor
cmpsl
inc
mov
push
sub
call
jb
cmp
sbb
les
or
mov
pop
jb
popa
cmp
loope
sub
xchg
dec
mov
adc
setb
dec
and
lea
pusha
fsubr
sbb
sub
sti
or
mov
add
add
cmpl
jo
inc
cmp
xor
inc
shl
scas
call
lea
sub
shr
fildl
ds
cld
xor
shl
jb
das
push
andb
inc
and
xorb
aas
call
test
jne
mov
rol
aaa
sti
xor
or
jnp
shll
inc
xor
dec
dec
and
loop
jns
cmp
std
dec
cmp
xlat
rol
nop
ja
and
subb
push
rol
inc
pop
and
add
add
add
jmp
add
fcomi
dec
ret
ret
sbb
and
push
adc
xor
clc
inc
pop
jmp
and
xlat
mov
fs
cli
adc
adc
mov
mov
add
hlt
mov
sbb
je
insb
int
add
push
rclb
es
pop
arpl
pop
cmpsb
cmp
std
sub
adc
pop
push
cmpl
add
rclb
mov
pusha
and
jbe
inc
in
adc
mov
dec
pop
cmpsb
mov
sub
inc
adc
fstpl
je
insb
pusha
inc
fwait
sbb
sbb
and
ja
repnz
mov
sti
cmp
sub
je
pusha
sbb
repz
ss
sbb
xchg
cmp
or
sub
mov
mov
nop
int
inc
or
or
repz
or
add
xor
arpl
ds
cmpsb
jecxz
aas
pop
or
outsb
inc
das
movsb
in
in
push
imul
fnstenv
and
mov
sbb
minps
add
sub
mov
mov
les
lret
pop
push
test
pop
or
cmp
shl
pop
xor
lds
imull
mov
sub
cld
xor
pop
cmp
dec
jbe
fimuls
fists
ja
pusha
int
fcoms
dec
bound
or
or
xor
or
clc
mov
sbb
popl
sbb
loope
or
shl
insl
mov
sbb
adc
xor
and
lahf
add
lods
mov
xchg
cli
adc
ja
pop
loop
mov
js
arpl
sub
pop
dec
or
int3
lret
add
add
movb
and
loopne
inc
shr
push
sbb
shlb
mov
adc
mov
cmp
fists
and
sbb
cmp
pop
call
les
test
or
insb
and
mov
mov
out
dec
sti
dec
mov
loopne
psrlq
sarb
push
mov
sahf
out
pushf
faddl
popa
in
sub
inc
sbb
jno
lock
js
cs
pop
sbb
enter
sbb
xchg
or
sbb
subl
jmp
sub
shl
shll
enter
sbb
sub
je
loopne
sbb
ficompl
push
or
mov
cli
insl
jae
hlt
jne
scas
addb
inc
add
sbb
cmp
hlt
pop
mov
add
mov
add
push
or
inc
mov
popf
movsb
sahf
jno
add
push
sub
and
fwait
insl
outsl
xor
ja
in
inc
add
push
pop
and
xor
pop
loope
dec
sub
fld
jecxz
iret
add
mov
push
mov
or
xor
cmp
je
or
or
stos
mov
int3
adc
jno
bound
decl
and
inc
inc
or
push
cmp
and
xor
dec
add
add
xchg
rcl
nop
mov
mov
insl
cmpsl
add
bound
mov
adc
das
lds
les
movsb
inc
add
out
cmpsb
adc
xorl
pop
int
shr
sbb
jne
add
mov
call
add
dec
dec
mov
mov
fcoml
mov
add
pop
mov
ret
mov
or
je
push
pop
rcl
xorl
or
and
push
adc
pop
and
jecxz
fmull
pop
pop
xchg
inc
cmp
add
pop
pushf
push
out
jo
sub
add
or
and
adc
or
test
sbb
sbb
in
and
lds
and
push
dec
les
and
inc
mov
dec
jg
push
or
cmpsl
pop
cmp
mov
jg
xchg
dec
push
and
roll
test
stos
and
add
pop
in
add
or
inc
adc
pushw
sub
add
adc
push
mov
or
adc
adc
cld
mov
les
and
xor
xor
adc
test
fld
mov
or
push
rolb
mov
mov
mov
fisttps
cwtl
sahf
push
adc
aas
lds
cmp
push
xor
pop
stc
call
mov
mov
shll
addb
jo
repz
shl
push
xchg
dec
mov
lea
mov
cmp
mov
les
pop
adc
mov
pop
shrb
cmp
mov
jmp
mov
mov
call
iret
sub
rol
jle
push
fists
cmc
int
sbb
or
addl
fdivl
or
push
jnp
pop
dec
dec
xor
sub
push
xchg
dec
pop
fmull
test
ja
or
ret
shll
sbb
add
mov
aam
inc
mov
xchg
push
mov
les
push
adc
in
or
pop
hlt
fs
jne
mov
loop
bound
push
jno
and
lds
in
jmp
mov
hlt
insb
repnz
out
or
adcl
mov
sub
mov
pop
test
xor
shrb
mov
or
xchg
mov
sbb
add
pop
or
dec
jl
add
roll
mov
insl
cmp
mov
js
into
es
mov
push
fs
sbb
pop
arpl
dec
cmpb
or
push
dec
pop
xor
jg
sbb
adcl
or
and
push
adc
aaa
pop
mov
pop
arpl
sbb
insb
xor
out
pop
dec
adc
rcrb
add
mov
cmp
jb
neg
and
je
mov
adc
push
xor
sub
jne
fwait
loopne
out
gs
or
lret
out
mov
rep
jl
dec
ljmp
add
xor
mov
pop
lea
loopne
sbb
pop
popf
xchg
cld
add
cwtl
out
jg
scas
call
adcb
inc
xor
pop
and
xor
stos
or
sbb
fisttps
add
je
insl
inc
jmp
mov
jns
jae
pop
notb
or
push
jge
or
cmc
sub
cmp
push
pop
push
push
lea
xor
xor
in
data16
movsb
in
call
pop
pop
scas
xor
js
ja
int3
lcall
inc
or
mov
fisubrl
orb
mov
pop
sbb
js
iret
push
js
xor
jmp
mov
loope
roll
adc
out
fwait
movsl
pop
sub
xor
leave
fsubrs
mov
mov
sarb
dec
gs
insb
call
dec
scas
pop
dec
test
repnz
or
xor
pop
cld
mov
push
cmp
jne
add
cmp
scas
std
jge
sbb
shll
mov
mov
adc
xor
mov
call
cmp
dec
icebp
outsl
loopne
sub
cmpsl
pop
dec
pop
sbb
test
dec
adc
cmc
jne
popa
shr
sub
inc
imul
mov
ljmp
les
lret
lret
clc
std
sbb
out
jne
adc
and
faddl
sub
mov
test
pop
jnp
outsl
out
add
add
cli
incl
mov
mov
add
xor
xor
addr16
add
add
jb
test
lea
or
add
leave
sti
mov
sub
ret
adc
std
dec
sub
dec
cld
and
fcomp
dec
adc
xchg
ror
roll
cmp
jbe
sets
xchg
xor
pusha
ds
rep
jmp
mov
mov
lcall
das
test
cmp
fcmovbe
push
pusha
lock
inc
push
and
addr16
pop
or
mov
mov
or
lods
adc
leave
insb
jns
mov
int3
lea
cmp
xor
add
add
nop
inc
add
add
ret
or
push
test
hlt
andl
addb
imul
lcall
hlt
clc
clc
push
cmpsl
xchg
imul
addl
sbb
sub
cmpsb
sbb
add
and
jg
inc
xorb
inc
ds
or
sbb
lea
leave
push
cld
iret
jl
cld
pop
and
std
filds
addr16
cld
out
push
sbb
cmp
xor
mov
repnz
cmp
jl
mov
ja
fildl
jge
mov
add
outsb
leave
mov
inc
push
fiaddl
add
push
fmull
pop
add
pop
dec
orb
push
fidivs
lods
or
push
sub
cmp
dec
imul
cmpsb
imul
imul
ret
inc
inc
js
addb
sub
stos
fsubs
fsubs
daa
inc
addb
push
testl
pop
mov
cli
aas
aad
ret
mov
add
xor
je
sub
sub
movsl
mov
ljmp
in
shl
add
or
jmp
pop
xor
mul
fdivs
inc
jne
pop
ret
push
in
or
lret
mov
pop
stc
xor
scas
lock
lods
das
or
in
pop
and
jmp
sbb
pop
cmpsb
or
or
in
testl
std
in
push
data16
fistpll
sarb
cmp
lret
gs
or
xor
mov
dec
aad
xchg
push
mov
js
cmp
mov
loopne
xchg
cmp
stos
cmp
sti
and
pop
nop
insb
push
nop
inc
push
pop
nop
push
mov
mov
enter
mov
dec
rcr
or
adc
sbb
sub
mov
aas
fildll
push
xchg
aas
fbstp
pushf
sbb
jmp
adc
or
cltd
cmp
lock
mov
pop
add
sub
pusha
mov
lret
mov
cmpsb
xor
mov
xor
and
fldenv
pushf
jmp
insl
pop
dec
popa
int
rcr
pop
xchg
test
andl
add
inc
mov
cmp
je
xor
xchg
sarb
cld
mov
loopne
pop
pop
xchg
repz
add
xor
xchg
clc
mov
sub
xchg
fcmovne
mov
xchg
pusha
mov
cmp
insl
and
cmp
jno
fs
das
cltd
xchg
push
pusha
xor
rcrb
dec
insl
pop
cld
mov
sub
mov
xchg
int
push
dec
push
in
sbb
ret
fs
pushf
jo
jo
or
add
jo
or
movsb
add
inc
push
sbbl
jne
mov
ret
push
xor
js
xor
fcmovnu
xchg
icebp
xchg
jge
fsubr
cs
pop
in
sub
or
lret
and
push
clc
and
clc
test
les
mov
sbb
fcomps
xchg
int3
add
and
fisubs
mov
outsb
cmp
add
addb
fmuls
push
call
jns
lock
cld
int
add
lret
pop
call
xor
loopne
je
pop
movl
cmp
push
xchg
cltd
xor
push
test
sti
adc
or
pop
and
push
loop
push
add
push
pushf
pop
xor
push
xchg
adc
sbb
imul
sbb
add
dec
add
frstor
ja
pop
iret
lahf
jp
xor
mov
aam
adc
dec
fwait
jp
mov
jge
push
addb
jle
cmp
adc
out
jge
int3
dec
adc
mov
call
jg
in
jbe
iret
jbe
pop
xchg
repnz
imul
pop
imul
sbb
sbb
es
cmp
test
sbb
pushf
shll
enter
pop
push
inc
xchg
cmp
or
jbe
and
push
test
sub
or
test
dec
loopne
mov
ror
adc
repnz
dec
popf
lock
scas
in
out
cld
insl
in
test
pop
addl
sarb
mov
pop
mov
mov
mov
xchg
cli
inc
sbb
inc
dec
mov
lcall
add
enter
push
push
fstpt
xor
cmp
push
adc
cmp
and
inc
rcrb
xor
mov
and
add
jl
fidivs
cli
cmp
vandps
jmp
fs
xor
sub
movsb
sbb
cmpl
loope
jne
or
dec
add
dec
rcll
mov
inc
fsubrs
mov
rcrb
shrl
pop
cwtl
test
hlt
jecxz
or
lods
and
daa
push
or
push
push
jg
jmp
jb
ja
pop
mov
repz
jae
movsl
rorb
lcall
push
add
mov
pop
push
adc
daa
loopne
push
mov
popa
or
adc
scas
adc
push
mov
lods
push
inc
enter
cmp
fidivl
data16
push
sub
inc
stos
xchg
mov
loopne
and
mov
shr
mov
cltd
cli
sbb
lea
cwtl
out
cmp
bound
xchg
xchg
fistpl
lds
in
jb
fsubrl
jge
aad
cmp
jbe
and
push
cmc
pop
sbb
xchg
add
or
adc
mov
sub
cmp
mov
int3
cltd
or
gs
andl
mov
pop
nop
subl
neg
pushf
add
or
xor
ss
cmp
push
push
pusha
or
push
popa
sbb
lods
mov
jnp
clc
push
clc
enter
or
iret
loopne
or
mov
mov
in
dec
enter
ja
inc
xlat
mov
lcall
inc
adc
adc
in
bound
sbb
pop
pop
mov
cs
mov
nop
imul
or
loope
xorb
fadd
and
rcll
xchg
and
adc
mov
cli
adc
lahf
loopne
pusha
mov
jne
push
iret
xor
pushf
scas
loope
pop
mov
lea
les
test
xchg
mov
push
out
adc
inc
cld
sub
in
mov
sbb
loope
push
push
push
adc
pop
and
mov
test
faddl
cmp
dec
mov
inc
je
jns
not
and
sub
xor
sbb
add
icebp
fists
imul
repz
pop
inc
fstpt
pop
cmp
cwtl
or
jp
push
loop
in
add
fsubrs
ret
adc
shl
sahf
pop
imul
into
jnp
xor
jmp
jge
dec
xchg
mov
dec
mov
inc
push
dec
inc
xor
test
adc
sbb
jne
insb
and
and
cli
cmp
movsb
repz
and
xor
jno
mov
push
or
inc
hlt
loopne
xchg
sub
add
inc
lods
pop
jmp
mov
sbb
dec
movsb
cmp
push
xor
out
pop
jnp
add
stos
cmp
loop
icebp
xor
push
add
pop
shll
mov
dec
movsl
mov
push
fwait
jmp
inc
add
push
adc
sbb
mov
adc
scas
lods
dec
adcb
and
adc
cmp
jne
add
push
lods
cmp
mov
jne
cmp
pop
popf
adc
and
lods
test
xchg
fdivrs
mov
pop
ja
mov
fisttpll
imul
aas
rcrb
pop
fcoms
leave
std
inc
add
ret
sahf
add
push
and
mov
xor
xor
or
jp
loopne
clc
iret
shrl
shll
dec
cmp
inc
inc
add
stc
sbb
xchg
fldenv
add
ret
pop
aas
xor
mov
push
sbb
add
sbb
mov
mov
arpl
daa
repz
or
icebp
jne
loope
lods
or
repnz
jbe
movsl
cmc
aaa
adc
add
inc
popf
or
sub
imul
sbb
clc
pop
sti
xor
pop
xchg
clc
clc
pop
dec
das
icebp
cmpb
je
lea
lea
sbb
cmc
xor
xchg
js
dec
pop
cltd
push
in
or
push
mov
jge
and
fsubl
std
mov
adc
cs
imul
movsbl
les
xor
cmp
or
mov
sub
or
sbb
push
es
daa
popa
sti
cmpsb
xor
popf
aaa
and
and
and
add
xor
pop
xor
aam
shll
sbb
inc
cmp
mov
sub
and
sub
add
jno
cmp
pop
xor
dec
or
cmp
and
dec
sbb
movsl
pop
and
mov
mov
push
jg
inc
inc
call
dec
sbb
hlt
add
sarb
and
test
les
sub
cmp
inc
outsb
addr16
gs
and
push
sbb
in
push
jle
push
sti
dec
xchg
lahf
cmp
gs
dec
dec
sub
paddq
jmp
stos
sbb
mov
dec
or
stos
pop
xchg
or
sub
cmp
lcall
jnp
pop
add
incl
lea
cld
jmp
cmp
adc
cltd
pop
push
push
arpl
cmp
dec
and
adc
addl
xor
fs
or
jge
jge
inc
sub
loope
or
cmp
fs
add
loope
rcrl
mov
mov
dec
pop
into
mov
jp
inc
adc
mov
loope
xchg
imul
mov
sub
jb
and
fnclex
adc
or
out
jb
adc
in
sbb
mov
call
push
xor
pop
loop
test
iret
fistpll
push
je
data16
sar
jbe
aaa
push
aam
add
add
fwait
adcl
jno
push
dec
adcl
loop
cmp
stos
inc
je
inc
rorl
and
aas
addb
data16
xlat
push
jne
adc
pop
mov
jno
or
mov
inc
pop
fld
adcl
inc
jl
cld
add
bound
xor
push
rcll
outsb
dec
pop
ret
push
ret
inc
xlat
addl
les
cltd
movb
sbb
lret
movsb
shlb
loop
adcb
das
rorl
push
cmp
push
or
or
enter
pop
sub
inc
sbb
mov
jb
pusha
scas
pop
inc
add
add
add
loop
push
test
dec
dec
call
in
add
in
cmpsb
fdivs
and
pop
or
or
sbb
mov
sub
repnz
jg
push
add
sbb
mov
xor
icebp
cli
enter
push
popa
fisubl
mov
adc
push
pop
or
dec
fistpll
jne
pop
dec
push
ret
movq
and
xor
andl
adc
imul
push
mov
push
sbb
sub
jle
jmp
add
cmpsl
cmp
push
or
or
mov
inc
mov
loope
or
push
mov
cs
fs
adc
cmp
adc
stos
cmp
lock
stos
es
icebp
in
xor
out
lock
sbb
mov
pop
sbbb
nopl
or
ret
jne
test
loop
or
lret
sub
dec
mov
mov
sarl
cmp
sub
adc
ja
add
jmp
push
xor
int
push
jb
and
ja
sbb
sbb
mov
ret
test
inc
sbb
mov
sbb
sbb
imul
jns
adc
popf
je
out
loopne
mov
push
in
cld
jmp
cld
inc
call
pop
dec
cld
dec
dec
nop
xchg
xchg
xchg
dec
dec
dec
cld
in
push
push
cld
push
cmp
jne
iret
cmp
lret
cld
add
test
incb
mov
add
hlt
test
fs
sub
fildl
cmp
arpl
mov
mov
sub
ret
mov
push
cmpsb
or
dec
clc
rclb
pop
hlt
add
mov
in
or
push
or
jmp
bound
add
aaa
sbb
addl
mov
or
dec
ljmp
dec
jge
sub
add
jb
int
lods
pop
das
or
test
call
xor
xor
pop
xlat
lds
lods
xchg
mov
inc
push
inc
out
add
lcall
and
pop
lock
mov
or
pushl
popf
xchg
mov
movsl
ret
and
clc
inc
cmp
dec
xor
sub
push
jmp
and
out
xlat
sbbl
enter
inc
xor
inc
pop
push
xchg
lcall
ret
push
imul
add
popa
imul
mov
and
ret
mov
jg
cmp
mov
leave
imul
filds
jge
jmp
cmp
cmp
push
insb
mov
sti
mov
test
cli
jl
jl
outsl
test
or
cmp
mov
mov
fistps
add
push
xchg
cwtl
pop
jge
jno
adc
inc
dec
mov
cmp
xor
test
test
add
xchg
nop
adc
inc
push
mov
mov
inc
neg
push
aam
mov
orl
in
jbe
int
mov
mov
out
inc
popf
cmc
push
outsl
icebp
jb
movsb
cmpb
or
or
push
les
js
inc
sbb
mov
xor
mov
sub
aad
add
mov
push
pop
or
das
pop
push
cmp
adc
fs
adc
push
push
push
mov
popl
inc
es
pusha
push
aas
or
test
and
mov
push
test
and
adc
in
push
rcll
mov
cmp
xor
jge
lret
je
into
add
loop
mov
xor
mov
jcxz
jge
pop
aad
cmp
enter
pop
rcrl
aaa
pop
adc
cmp
inc
sbb
or
add
out
daa
andl
repnz
mov
jmp
cmpl
loop
frstor
icebp
call
hlt
sbb
fildl
push
adc
and
lret
mov
dec
mov
mov
sub
gs
pop
jae
mov
leave
enter
outsb
dec
mov
or
mov
or
jns
pop
or
insb
sbb
pop
sub
bound
outsl
sarl
xor
dec
testb
orl
dec
mov
add
ret
dec
rcl
fucomi
mov
sbb
jmp
icebp
fwait
jp
int3
mov
add
add
mov
pop
mov
mov
call
daa
inc
cmpsb
xor
xor
add
bnd
push
inc
test
mov
cmp
decl
imul
jne
ficomps
jmp
inc
inc
or
xor
aaa
jbe
out
call
lret
or
adc
push
add
push
add
cltd
aaa
dec
mov
mov
clc
decl
xor
or
bnd
cmp
jae
dec
lea
sub
pop
jnp
jae
pop
jbe
xor
aas
lea
jmp
sub
jmp
inc
push
sub
icebp
icebp
clc
pop
push
dec
jl
xchg
stc
jg
incl
jne
imul
add
out
dec
je
clts
je
sbb
and
cltd
xlat
lret
push
and
and
dec
out
jle
in
cmpsb
shr
jmp
push
xchg
push
pushf
mov
pop
movb
pop
adc
fdivrp
or
jp
add
lret
push
mov
dec
in
push
push
add
mov
scas
add
pop
push
and
adc
jnp
test
dec
mov
xchg
movups
push
int
xor
inc
outsl
or
mov
push
pop
jmp
sarb
ficompl
dec
sbb
ljmp
push
cltd
pop
idiv
cmp
test
mov
adc
inc
push
ds
xor
lahf
add
push
fidivrs
call
add
test
pop
outsb
mov
cli
popl
es
loop
or
jp
sbb
sbb
ret
imul
cmp
outsb
dec
ret
dec
pop
xor
shlb
adcl
ror
insb
jg
imul
jo
pop
or
je
dec
iret
add
sarb
adc
cmc
imul
fs
push
adcb
jmp
aas
pop
hlt
outsl
arpl
sbb
push
jecxz
or
dec
cli
hlt
jae
sub
movsb
mov
push
rorb
or
imul
fcomip
mov
cmp
push
dec
adc
cs
ficoms
shld
xor
movsb
loopne
add
cwtl
mov
sub
clc
adc
rorb
jg
lcall
jno
sbb
inc
adc
rorl
mov
ja
cli
ficoml
or
pop
jne
loopne
lea
ds
mov
rolb
add
sbb
int3
xor
mov
or
sub
insb
jecxz
enter
adc
xorb
es
ja
adc
test
lret
je
mov
dec
lods
frstor
adc
inc
addl
mov
push
faddp
notl
dec
out
and
shr
xor
jbe
leave
mov
mov
mov
inc
jne
push
dec
jl
js
stc
out
pop
xchg
das
pop
add
mov
cmpsl
push
add
sbb
daa
jp
inc
gs
xchg
out
sbb
inc
inc
inc
cmp
je
sbb
leave
cmp
rcll
xchg
idiv
daa
adc
or
pop
dec
je
push
add
or
mov
xchg
add
mov
ret
add
dec
popa
out
fidivs
and
dec
push
sub
cmpsb
mov
ss
cltd
adc
pop
movsb
in
cmp
or
add
loopne
int
movsb
sub
jo,pt
bound
jg
push
loopne
ret
test
sbb
sbb
cmp
je
movzbl
jb
dec
testb
inc
add
popf
stos
loopne
mov
pop
cmpb
scas
popa
clc
call
xor
decl
dec
adc
js
push
mov
mov
and
and
adc
and
das
add
add
and
popa
mov
push
xchg
adc
ljmp
cmp
add
xor
jns
imul
sarl
jo
jne
or
and
mov
rcll
cmpl
and
mov
fadd
add
mov
pop
xor
adc
cmp
xchg
sbb
jle
jne
pusha
xor
sub
add
push
jmp
sub
and
adc
jnp
mov
test
jmp
jno
fbld
and
dec
push
dec
sahf
mov
and
test
push
xchg
push
pusha
add
fsubl
popa
push
cmp
pushf
das
mov
push
mov
add
mov
add
jo
xorb
imul
test
xchg
icebp
xor
push
cltd
enter
add
jge
cmc
adc
xor
mov
mov
arpl
flds
sbb
jmp
mov
inc
and
inc
inc
clc
cmp
add
mov
add
cmp
cmpsl
push
pop
fdivl
or
cmp
andb
jmp
es
ret
dec
shrl
insb
popa
leave
pop
aaa
mov
dec
in
loope
out
add
pusha
pop
adc
shlb
adc
loop
mov
out
and
sub
pop
adc
mov
push
pop
xor
call
popf
pop
jge
mov
movb
pop
add
jmp
sub
xchg
cltd
idiv
add
jecxz
rorl
scas
test
sbb
mov
and
and
jne
pop
adc
push
sbb
jmp
dec
fdivp
clc
or
lret
int3
jne
sbb
cld
fdivrs
dec
test
cmp
xor
adc
mov
in
int
and
scas
xor
femms
add
add
imul
mov
push
dec
pop
test
cmp
jmp
inc
shlb
push
pop
ret
mov
xchg
jnp
cmp
add
xor
jne
and
or
sbb
cmp
sbb
jmp
addr16
mov
push
adc
out
js
dec
sub
or
sub
xor
or
or
mov
lock
cmpl
jne
popa
dec
popa
jge
fsubrl
jo
loope
pop
jo
int3
push
and
add
imul
ljmp
sub
aad
fsubs
jne
jecxz
popa
in
cmpsl
pop
adc
cld
adc
inc
pop
xor
pusha
fsubs
dec
dec
mov
mov
xor
movsb
cmp
fsub
ret
ret
adc
xor
nop
gs
or
popa
fstpl
push
aad
loope
dec
and
sbb
jo
inc
repnz
mov
fmulp
ljmp
sbb
ja
cmc
and
push
add
sarb
scas
xor
sbb
test
andnps
and
shll
cltd
insl
lds
push
das
jle
adc
push
fisubs
jns
mov
js
sbb
xchg
sbb
icebp
and
or
add
test
rolb
pop
adc
mov
jmp
int3
or
mov
push
shll
cmpsl
test
sub
cmp
and
loope
iret
mov
mov
sbb
xchg
mov
sub
add
or
or
sub
pushl
sbb
xor
pop
inc
dec
js
sbb
sub
loopne,pn
pop
les
or
and
arpl
jne
inc
mov
and
test
outsl
sti
xchg
cli
jge
fisttps
andb
cmp
push
sbb
icebp
xorb
inc
mov
and
bnd
cmp
mov
mov
xchg
cmp
jl
loope
cmp
jo
call
sahf
inc
xor
inc
hlt
int3
je
mov
and
mov
cmpw
mov
adc
dec
cmpsl
or
addr16
pusha
sub
dec
push
add
mov
jbe
enter
jb
mov
add
cmp
jae
testb
jne
pusha
sbb
and
insb
sub
or
jo
sarl
cltd
js
mov
cmp
dec
jl
xlat
aam
xchg
hlt
adc
mov
and
call
dec
xchg
clc
sbb
lods
mov
inc
cmp
vpcmpeqb
pop
inc
mov
mov
jg
jo
add
sbb
popa
xor
or
je
mov
sub
jl
sub
jp
add
hlt
pop
jge
lret
sub
adc
push
inc
mov
push
push
mov
push
lea
inc
cmp
cli
cmpsb
mov
sub
sar
jb
test
mov
cmp
xchg
adc
add
popa
sbb
out
push
push
add
and
repnz
shrb
push
pop
jp
je
push
inc
sub
mov
push
push
xor
xchg
sbb
fs
test
or
cmpsb
mov
cmc
in
cmp
pop
pop
add
cmc
loopne
inc
push
and
xor
xor
lea
and
rcl
cmp
add
dec
and
inc
icebp
push
popa
push
stos
mov
fistl
and
adc
push
pop
shr
test
or
out
adc
push
pop
mov
push
jne
push
xlat
lret
aas
out
dec
ret
mov
lds
sub
mov
xor
cmp
sub
jb
sbb
add
mov
aas
push
fwait
dec
jo
push
mov
dec
cmp
ljmp
or
ss
pop
cmc
or
push
sub
add
test
lock
adc
nop
enter
imul
daa
testb
adc
mov
pop
xor
stc
push
scas
test
gs
pop
sti
inc
sub
inc
sbb
or
or
orb
or
sbb
pop
xchg
mov
mov
adc
sub
cmp
rclb
add
xor
adc
mov
sub
jle
mov
pop
iret
imul
outsb
hlt
mov
inc
fdiv
mov
dec
cs
arpl
xor
add
mov
rcrb
mov
or
adc
cld
jae
adc
mov
jne
sar
sbb
push
pop
or
and
dec
or
pop
and
ljmp
dec
jmp
add
shll
pop
std
mov
decb
out
and
jmp
dec
loopne
dec
mov
xor
pop
add
test
or
mov
push
or
mov
shrl
sbb
jecxz
mov
outsl
sub
and
xchg
hlt
paddusb
add
mov
mov
int
clc
imul
andb
cmc
je
push
ficoms
in
scas
jno
jno
cmp
loopne
movsb
xchg
mov
and
ret
inc
and
xor
in
add
add
das
mov
mov
push
jg
js
mov
pop
or
mov
push
or
or
jnp
mov
lea
mov
pop
or
cmpsb
mov
dec
or
mov
outsl
fmuls
dec
paddd
mov
xor
mov
cmpsl
xor
sbb
pop
mov
jle
or
jmp
dec
adc
push
mov
or
cli
sub
add
inc
xor
decl
inc
mov
fsub
faddl
pop
mov
dec
xchg
pop
adc
inc
shl
add
push
adc
dec
or
jp
aas
add
ret
mov
mov
push
or
imul
movsb
mov
add
decb
das
loop
inc
adc
in
or
and
mov
and
daa
dec
or
adc
add
inc
lds
jge
enter
rol
enter
dec
adc
push
cmp
push
pop
aam
adc
add
adc
imul
mov
dec
loopne
or
adc
shll
mov
rcr
pop
outsb
push
aad
rol
pusha
pop
ret
addl
pop
xchg
push
adcl
sub
scas
or
xor
mov
xor
shlb
jmp
aas
adc
out
stos
nop
push
and
call
icebp
sbb
add
jmp
orl
iret
mov
lret
xchg
scas
add
lcall
pop
loopne
ljmp
ret
imul
jne
jmp
mov
add
imul
sti
mov
out
or
push
mov
pmuludq
lea
adc
sbb
or
cld
scas
inc
mov
incl
mov
xlat
lea
out
out
fnstcw
lock
add
sub
sbb
mov
jne
xchg
clc
add
fmuls
jb
mov
sub
loopne
sahf
fnstcw
std
mov
mov
add
jne
or
cmp
stos
jb
ss
adcb
test
lret
xlat
sub
test
pop
shr
andl
icebp
push
les
xor
add
jne
insl
inc
or
fldcw
mov
add
cmp
xorl
xchg
pop
push
mov
pop
add
sbb
clc
iret
push
dec
sahf
xchg
add
push
dec
add
cmp
nop
dec
or
cmpsl
mov
adc
add
fists
adc
into
add
push
mov
adc
incl
cmp
adc
cld
ljmp
lea
jecxz
jg
imul
or
pop
lcall
push
pop
adc
movsl
imul
testl
dec
xor
sub
cmpsl
xor
pop
inc
xchg
js
xor
xor
xor
mov
sub
js
push
cwtl
bound
lea
mov
sub
pop
xor
sbb
sar
gs
test
xor
movsb
pop
mov
das
pop
add
cmp
mov
inc
dec
jo
movsb
scas
dec
je
fisttps
pusha
js
add
add
xchg
aad
ja
ja
dec
in
faddp
add
adc
fisttpl
adc
or
mov
sub
cmp
mov
dec
add
and
xor
push
paddd
nopl
ds
mov
rolb
rdpmc
cmp
sub
dec
dec
pop
add
inc
jl
sbb
mov
add
clc
icebp
lock
inc
xor
push
adcb
cmp
arpl
mov
cld
and
shr
mov
or
hlt
nop
xor
rorl
sti
addr16
cmp
jmp
dec
cmp
dec
and
or
jne
ret
adc
or
iret
dec
jb
push
sahf
mov
inc
mov
or
into
or
testl
pop
adc
int3
mov
loopne
iret
or
pop
jp
fsubr
jno
mov
dec
mov
addl
xor
add
mov
mov
test
scas
fucomi
mov
rcr
xlat
je
dec
sti
xlat
pop
push
imul
into
jne
lret
jmp
inc
or
push
pop
and
adc
cmpl
pop
jae
pop
out
andb
xor
int
jb
jne
pop
mov
int3
and
pop
jne
aad
jecxz
por
xchg
cmpl
loopne
push
shl
inc
test
cltd
cli
mov
icebp
inc
push
rorl
imul
push
xor
jb
sub
pop
cmp
call
iret
jle
rcr
mov
and
mov
decb
jne
data16
orl
loope
pusha
pop
mov
bound
sub
xchg
fisttpll
jns
xchg
add
popa
sarl
pop
inc
mov
or
jecxz
pop
or
and
shrl
add
ret
and
js
mov
ja
or
scas
test
movsb
inc
or
mov
push
mov
or
jl
adc
inc
mov
pop
adc
add
sbb
add
lret
and
fdivrl
in
push
lea
ja
sbb
add
xchg
cmp
pop
std
inc
adc
add
cmpsl
adc
testl
dec
add
add
shll
inc
xchg
enter
and
pop
add
push
lcall
add
test
or
jne
hlt
add
jmp
push
xchg
jne
push
jmp
push
push
int
jo
xor
jae
in
add
xchg
cmp
lea
jle
cmp
fwait
jg
roll
mov
enter
popa
test
xchg
push
inc
fucom
cmp
mov
xor
pushl
jle
jmp
shl
xchg
sbb
mov
pop
and
jmp
fldenv
mov
loop
xchg
in
dec
in
rcll
push
or
mov
cmp
call
dec
ljmp
sbb
mov
add
xchg
rcrb
add
and
mov
icebp
xor
cmpsb
mov
mov
inc
mov
fldl
cwtl
xlat
inc
roll
arpl
repz
js
test
pop
sbb
insl
jl
shrb
inc
mov
jo
sub
mov
push
dec
or
dec
xchg
add
push
pushf
into
or
outsb
sub
inc
push
push
jo
xchg
jne
idivb
fcoms
js
sub
js
and
pop
cmp
adc
in
nop
test
insl
and
cmpl
jl
sbb
shlb
fadds
addr16
sub
jns
adc
cmp
and
xor
or
pop
das
ret
jle
and
jg
lea
push
push
insl
add
movsl
lock
add
push
out
ret
mov
lock
inc
jmp
xchg
loope
andl
push
cmp
pop
and
mov
mov
cmpl
cmp
cmp
daa
sub
jp
push
or
cmpsb
icebp
dec
gs
pop
int3
jl
adc
push
es
dec
mov
adc
xchg
icebp
mov
mov
adc
jb
lods
dec
cld
lods
fwait
popa
daa
into
sti
add
jg
testb
and
addr16
add
or
push
mov
xor
mov
add
daa
out
mov
and
in
sbb
pop
lock
or
push
adc
jae
sbb
xchg
mov
jbe
enter
push
ret
inc
xchg
fidivrs
inc
xchg
in
pusha
cmpsl
pop
adc
xor
dec
pusha
divb
testb
push
cltd
xchg
mov
dec
cmp
mov
das
jb
pop
addr16
sbb
push
xchg
jmp
subl
and
push
lods
nop
cmpsb
inc
mov
fldcw
push
test
addr16
jmp
out
add
push
xchg
mov
jb
popf
cmp
mov
cmpsb
sbb
dec
mov
mov
mov
and
outsl
push
js
outsb
in
and
dec
cld
add
xchg
jne
mov
call
mov
and
sbb
cmpsb
adc
or
push
push
cmp
cmp
xor
xor
add
jae
push
cmp
jl
pop
jg
test
pusha
in
ss
adc
lods
pop
add
mov
imul
or
or
in
xchg
cmp
push
out
dec
pop
mov
mov
dec
add
sbb
xchg
dec
push
cltd
ss
jl
mov
pusha
cmp
je
add
popf
and
out
hlt
aam
jnp
mov
popa
stc
xor
cmpl
or
xchg
add
or
cmp
adc
add
loop
fstps
out
mov
add
mov
fwait
gs
jb
in
add
testb
cmp
mov
in
in
loopne
push
das
movsb
hlt
dec
hlt
loopne
sbb
jae
cmp
jg
cmp
pop
dec
pop
or
inc
mov
outsl
sub
mov
jb
jle
test
cmp
int
inc
gs
sbb
add
adc
and
or
jnp
pusha
jecxz
mov
sub
clc
add
scas
push
cmp
dec
out
mov
push
cs
jge
inc
shlb
test
mov
sub
sbb
jno
bound
mov
dec
loopne
push
push
rolb
test
movsb
push
pop
scas
bound
enter
popl
push
push
inc
ret
sbb
sahf
imul
push
cmp
lock
ret
jbe
and
cwtl
mov
pop
sbb
push
iret
push
cmp
push
pop
das
mov
and
and
imul
add
or
cmpsb
cwtl
mov
sbb
les
or
fwait
cwtl
pop
clc
push
push
pushl
out
mov
inc
mov
or
mov
sti
add
shll
sub
xor
shlb
push
dec
bound
les
lret
loop
fs
mov
push
sub
mov
or
sbb
repnz
mov
dec
inc
sbb
xor
adc
inc
adcl
and
cmp
imul
cmpsb
push
add
pop
adc
rcr
cmp
or
outsl
cmp
push
popa
out
repnz
imul
jns
imull
or
xor
xor
mov
push
sahf
inc
inc
or
js
mov
and
cmp
jne
mov
add
mov
inc
pop
lds
je
push
es
fwait
push
or
add
pop
xchg
add
adc
iret
mov
movl
push
xor
cmpsl
and
push
mov
mov
cmpl
add
pop
xchg
push
mov
out
repz
or
xchg
movl
mov
adc
shlb
and
sbb
inc
push
sub
movsb
and
out
sub
jnp
pop
flds
sbb
dec
insb
ret
sbb
xor
aaa
dec
jns
daa
sti
nop
mov
mov
or
mov
fiaddl
pop
inc
imul
push
xor
mov
cld
pop
int
jle
sarl
pop
jmp
stc
imul
add
push
inc
xchg
pop
enter
cmp
pop
sbb
push
js
sbb
aad
or
adc
mov
or
sub
shrb
cmpl
sahf
inc
adc
ret
pop
push
ljmp
imul
arpl
mov
cmp
pop
mov
in
lahf
cmp
jne
mov
and
inc
lret
xor
stos
nop
sbb
shl
aam
mov
xchg
sbb
push
lea
repz
out
add
mov
add
xor
mov
cmp
xchg
adcl
lret
and
test
lcall
xor
add
jmp
jmp
mov
js
add
loope
mov
pop
inc
sub
pushf
xchg
xchg
movsb
aas
sub
hlt
push
andl
inc
push
pop
pop
sbb
xor
sub
push
test
jb
out
cmp
fs
les
hlt
mov
int3
sti
test
int
imul
fstpt
nop
adc
pop
insl
xorb
aad
adc
fidivs
push
pop
inc
xor
inc
and
loop
inc
or
js
leave
or
mov
jle
add
jmp
adc
aam
sarl
push
sbb
or
and
cmp
pop
and
and
xorb
sbb
push
or
push
sbb
push
data16
fnstsw
and
push
pop
or
xor
pop
test
dec
enter
pop
call
add
or
mov
or
pop
or
xchg
adc
adc
pop
mov
pop
xchg
adc
inc
cmp
mov
outsb
adc
add
fidivrl
pop
aad
fiaddl
loopne
add
lds
and
pop
out
cld
xor
mov
scas
or
or
hlt
jg
add
dec
out
test
push
and
sbb
loopne
lea
push
movzbl
add
in
pop
cmc
enter
popa
lea
pop
pop
nopl
add
xlat
mov
pop
lret
push
mov
lea
test
xor
xor
ficompl
cs
push
cmp
mov
push
inc
cld
ror
push
mov
push
cmp
mov
cli
fstpt
push
orb
cld
mov
mov
mov
sbb
add
push
pop
out
in
test
jecxz
cmpb
clc
mov
loope
cmp
sbb
adc
jle
popa
aas
enter
test
xor
adc
jp
push
aam
inc
cmp
and
loopne
mov
fwait
mov
adc
popa
ret
mov
lea
pusha
out
cmp
and
decl
jne
mov
sub
cmp
add
or
inc
test
sub
or
and
sbb
hlt
push
sbb
mov
sbb
dec
mov
jo
add
inc
cmp
push
loop
shlb
daa
and
lods
lds
add
mov
sbb
cli
popa
stc
out
xchg
aam
loope
add
xchg
rol
std
dec
or
mov
ja
arpl
add
arpl
pop
icebp
stos
lea
sbb
aas
test
outsl
es
add
cmp
xchg
adc
or
cmc
inc
scas
je
fwait
xchg
sar
jne
hlt
rclb
add
rcrl
cmp
add
cmpsb
inc
cld
lea
je
lea
fists
xor
fwait
ret
push
std
hlt
inc
inc
cmpb
dec
loopne
lahf
fabs
loope
sarl
inc
cmp
xchg
out
dec
popf
jne
or
pop
cld
xor
cmp
testl
cmp
clc
xlat
std
pushf
mov
adc
pop
xorl
test
jmp
loopne
nop
cmp
jne
shlb
mov
imul
sub
in
adc
jne
adc
xor
fs
pop
fsubrl
inc
inc
jg
add
ds
bound
lock
jg
mov
xchg
pop
fidivl
mov
mov
mov
or
cmp
out
add
test
or
add
outsl
add
pop
jmp
xor
mov
out
pop
rorb
jmp
mov
inc
mov
je
adc
cmp
adc
sub
or
cli
xor
adc
jns
fldt
push
mov
test
and
mov
xchg
mov
adc
je
adc
sub
movsb
push
jno
mov
nop
inc
or
xchg
or
addl
movsl
add
movl
xor
pop
sbb
pop
xor
insb
or
cmp
add
add
dec
dec
adc
je
divl
leave
inc
xchg
pop
mov
mov
jae
rcrl
mov
sbb
andb
bnd
add
mov
dec
flds
adc
sbb
mov
psubusb
loope
cmp
or
in
negl
mov
sub
mov
je
push
jl
in
loope
js
mov
in
loopne
pop
push
jnp
cmpsl
mov
cli
loope
or
movsb
sub
je
and
push
movsb
jge
inc
pop
repnz
jp
and
add
inc
push
jbe
sbb
dec
rcll
inc
sbbl
xchg
inc
mov
cld
or
loopne
out
or
and
les
mov
sub
hlt
data16
sbb
jne
pop
and
push
sub
arpl
add
ss
jle
and
icebp
jb
push
shr
inc
decl
sti
pop
xor
jmp
rcr
or
jne
imull
in
inc
mov
inc
inc
mul
add
jb
cmp
jns
cmp
add
mov
mov
gs
add
add
lods
mov
and
xor
pop
sbb
or
popf
flds
push
mov
add
jp
fists
mov
mov
mov
and
xor
add
in
pop
xchg
jne
xor
loope
sbb
or
shrl
ds
add
dec
cld
dec
psrlq
cld
cmp
je
mov
add
out
cmp
je
xor
jp
xor
jae
adc
xchg
pop
dec
lcall
cld
shl
jno
mov
adc
push
cmp
sbb
and
inc
xchg
dec
xor
xor
jecxz
and
jle
ds
add
inc
cmp
jne
add
xor
adc
add
mov
adc
inc
xlat
aam
out
pop
xor
pop
aam
int3
xchg
and
mov
pop
and
inc
pop
pop
and
in
cmpsl
sbb
test
sbb
add
sub
mov
mov
mov
mov
iret
enter
pusha
enter
mov
cli
sbb
and
fadds
mov
push
cmp
sbb
cmp
cmp
jle
inc
or
sbb
push
jge
sbb
lock
movsb
loopne
adc
aas
add
add
scas
jbe
xor
je
add
add
les
mov
xor
mov
xor
sub
repz
shlb
sbb
in
addl
or
fwait
mov
sub
pop
or
aad
or
dec
cmp
dec
jmp
xchg
xchg
out
aam
dec
insb
test
into
pop
pusha
mov
and
mov
pusha
mov
cmp
xchg
imul
clc
mov
adc
xchg
fcomps
sbb
cmc
fdivrl
in
cmp
fnstenv
imul
push
ror
mov
push
push
xor
fsubs
xor
test
pop
push
mov
dec
cmp
loopne
fdivrl
test
inc
nop
mov
mov
jns
iret
iret
ss
pop
pop
jmp
or
subb
or
sbb
push
loope
inc
add
fs
xchg
andl
push
jns
lea
or
jmp
out
bound
push
sbb
shlb
pop
aas
shr
fsubs
sub
in
sub
jbe
adc
loope
xor
fsubr
data16
push
test
jno
mov
add
add
arpl
sbb
mov
fs
push
orb
and
cltd
cmp
push
stos
std
data16
cs
xchg
icebp
leave
push
or
sub
movsl
hlt
xchg
xchg
je
enter
or
adc
and
invd
pop
push
jle
add
jae
add
test
push
or
push
je
or
push
jbe
lea
push
and
clc
mov
xchg
jle
fwait
or
js
test
lds
add
test
cmpsb
sbb
stc
add
adc
inc
ret
test
add
cmpl
and
notl
movsb
ror
bound
mov
adc
mov
add
jo
std
add
push
adc
inc
mov
add
testb
mov
das
add
shlb
js
jmp
xlat
clc
xor
add
or
push
dec
lgs
cmp
xor
incl
xchg
adcb
leave
mov
inc
sbb
decl
fsub
pop
lods
inc
push
push
add
stos
flds
jne
in
clc
push
jne
add
sbb
iret
ret
fwait
imul
or
dec
cmp
xchg
sahf
inc
test
cmp
mov
js
mov
adc
int
ret
jbe
pop
nop
pop
and
sar
cs
inc
fbstp
mov
xor
or
adcl
ret
add
iret
test
test
enter
pusha
out
mov
sar
pop
pop
nop
ja
mov
inc
in
ror
mov
pushf
test
les
out
mov
sub
cmp
hlt
xchg
xor
and
adc
mov
xchg
lods
add
or
add
and
leave
and
addb
mov
test
add
or
sbb
std
out
lea
in
push
bound
lret
repnz
inc
rolb
enter
rolb
shlb
push
mov
ret
push
sarb
or
and
xchg
setns
dec
lds
and
sar
aas
xchg
ss
cmpb
jne
inc
inc
push
cmp
cmpl
xor
jg
cmp
shll
ud1
mov
test
data16
cltd
ret
nop
push
stos
mov
add
stc
pop
lcall
pop
lea
lea
mov
lahf
mov
inc
lret
xor
les
imul
aad
jmp
mov
jge
and
call
loope
sub
or
add
pop
pop
stos
fwait
std
xor
xchg
mov
push
sbb
push
rorl
dec
xor
shl
test
adc
in
test
inc
out
mov
lea
mov
inc
add
mov
xchg
add
mov
lods
shlb
in
leave
addr16
xor
push
rolb
mov
sbb
je
mov
or
xchg
lds
outsl
push
pop
pusha
jge
ret
pushf
jmp
lea
pop
jl
mov
rcll
jmp
xchg
mov
cmp
jo
push
xor
ret
loopne
xchg
sub
pushf
lret
lods
sbb
mov
mov
es
push
fsubs
and
testb
sbb
aaa
mov
das
inc
call
fdivl
cwtl
adc
and
ror
rcrl
addr16
ja
aaa
in
mov
sbb
push
mov
les
add
xchg
lock
inc
rol
rcrb
mov
getsec
mov
push
push
cli
nop
icebp
push
push
gs
and
sbb
push
pop
in
negl
add
mov
adc
ds
pop
roll
movsl
call
or
dec
mov
pop
repz
jle
jmp
inc
sbbb
cwtl
daa
jo
orl
adc
inc
inc
mov
loopne
sbb
sub
xchg
cmp
orb
lock
and
inc
pop
lea
out
dec
dec
mov
pop
mov
pop
mov
jnp
ljmp
xchg
push
or
std
mov
add
mov
ret
je
dec
mov
ret
jmp
add
mov
loop
ret
pop
jge
inc
outsl
inc
jmp
jmp
or
mov
and
ss
mov
or
fadds
pushf
test
add
les
cli
aad
mov
mov
add
or
notl
mov
or
sbb
sub
inc
and
scas
mov
cmp
cltd
push
push
push
push
mov
arpl
jns
mov
add
push
dec
jmp
lea
dec
call
adc
add
ror
cmpb
popa
xor
je
add
imulb
inc
cmp
pushf
mov
fsubrl
mov
jmp
inc
repz
pop
adc
je
and
fsubp
add
daa
test
jne
add
icebp
xor
mov
inc
mov
add
and
movsb
std
sahf
xchg
mov
xor
or
outsw
insb
test
add
push
xor
pop
cmpsl
lock
or
movb
mov
cmp
cmp
push
movsl
insl
shll
enter
inc
sub
sub
ficoms
lea
roll
push
add
loop
enter
out
je
jnp
das
arpl
repz
loopne
pop
and
or
jl
loopne
adc
jns
sbb
addb
xchg
inc
add
xchg
pop
dec
shll
sbb
sbb
daa
fs
dec
std
xchg
enter
ja
mov
or
lret
add
jmp
push
stc
js
lahf
test
cltd
jns
mov
int
je
push
lahf
std
mov
push
cld
call
inc
adc
xchg
mov
std
add
or
dec
jno
add
ret
sbb
add
or
mov
or
xor
cmp
je
pop
sbb
aas
pop
pop
mov
cmp
jne
sbb
sbb
shlb
nop
inc
js
lods
in
div
push
push
enter
inc
xor
mov
adc
and
fidivs
int3
push
js
push
inc
jp
insb
imul
push
xor
sbb
mov
int3
pop
ret
and
mov
daa
outsl
movsl
mov
pop
cmp
or
ret
add
and
inc
lds
xor
cld
lcall
mull
xchg
decl
ss
mov
lcall
or
inc
sub
xor
cs
inc
inc
adc
call
push
adc
adc
test
push
ja
daa
hlt
adc
add
es
or
lods
and
popf
mov
jecxz
xchg
decl
js
or
or
push
xchg
ret
popa
dec
mov
mov
in
or
fxch
int
push
pop
insb
mov
dec
adc
xchg
jne
loop
or
push
lods
imull
add
sbb
dec
lcall
or
lea
movl
popf
fabs
jo
lret
pushf
mov
je
adc
sahf
pcmpeqw
and
pusha
mov
movb
iret
or
pop
or
imul
xchg
jnp
add
inc
jmp
push
jns
inc
cmc
adc
lea
pop
loopne
add
mov
lea
pop
or
mov
sbb
inc
sbb
dec
je
dec
jne
scas
arpl
pop
clc
mov
stc
ss
add
fnsave
andl
jle
pop
jmp
dec
xor
xor
and
or
dec
outsl
je
xchg
jns
mov
jne
jmp
mov
push
push
orl
jns
repz
jnp
decb
lea
xor
pop
sub
adc
xchg
mov
mov
leave
cld
mov
inc
pop
sbb
push
cmp
ficompl
lock
inc
fwait
jmp
ds
mov
je
or
xor
jnp
loop,pn
mov
sbb
dec
sbb
icebp
stos
nop
push
push
add
mov
data16
das
fs
loopne
sahf
fisttpll
mov
sbb
jg
xor
outsb
jmp
fnstsw
or
lcall
adc
loopne
add
xor
pop
daa
cmp
cmp
sub
cmp
out
lods
add
add
jne
mov
and
sub
das
js
cmp
je
fmuls
imul
incl
push
data16
movl
mov
push
inc
lods
lea
mov
jne
cmp
sti
daa
jne
adcl
cmp
rcll
jmp
orl
xor
je
inc
inc
mov
clc
shlb
jno
fwait
popa
lock
jne
add
sbb
xchg
sbb
or
fisubrs
sbb
sub
xor
mov
mov
add
cmpsl
pop
lret
aaa
pushl
mov
jmp
sub
test
adc
cmpsb
add
in
cmpsb
inc
dec
pop
in
rcrl
loop
dec
in
push
jae
sub
adc
or
decb
sub
or
outsl
lock
mov
movntps
test
repz
jmp
nop
lock
mov
je
jbe
outsb
aas
pop
push
inc
pop
push
push
sbb
adc
pop
and
lahf
mov
and
inc
push
sub
xor
inc
icebp
inc
push
dec
scas
dec
add
js
cmp
inc
clc
repz
add
shrl
push
pop
xor
cli
clc
incl
pop
pop
jne
mov
inc
movb
jmp
inc
cmp
dec
jg
rol
inc
mov
in
inc
cmp
jae
mov
xchg
ffreep
jmp
ret
cmp
ja
shrl
inc
test
push
push
inc
adc
test
paddw
ret
into
pushl
jg
mov
shl
or
mov
shr
pop
mov
mov
rorl
mov
xor
mov
sbb
jbe
mov
xor
cmp
sbb
fs
repz
push
test
je
pop
xchg
mov
push
pusha
adc
xlat
jecxz
pop
js
xlat
mov
cld
fists
jae
jae
or
mov
test
and
cmp
data16
rol
shrl
or
jp
sbb
sti
xor
test
xchg
fs
pop
das
enter
sbb
xor
cmp
xchg
dec
and
push
inc
mul
sub
cmp
into
pop
add
lds
sub
fsubs
pop
mov
inc
inc
dec
sub
push
fcompl
in
sbb
mov
jmp
mov
and
lret
xor
dec
mov
pop
cmp
push
stc
clc
adc
sti
pop
je
incl
lds
roll
push
stos
add
pop
or
pusha
out
inc
push
pop
ss
rcrl
push
subl
pop
es
js
cmpsb
mov
add
ret
mov
or
clc
imul
adc
push
mov
push
cmp
fwait
sub
jp
daa
add
mov
adc
andl
adc
mov
and
dec
imul
out
or
fcomi
test
add
popa
xor
sub
ret
int
adc
mov
stos
lea
movsb
roll
xchg
fldenv
jmp
ljmp
push
or
aaa
xor
add
inc
imul
das
xchg
xor
addl
jmp
pushf
inc
sub
gs
lret
cmpsb
loop
jle
inc
rcrb
adc
sub
jmp
inc
and
in
mov
or
and
incb
outsl
adc
neg
imul
pop
xor
repnz
and
xor
push
lods
mov
shll
adc
or
adc
and
leave
sub
dec
add
and
ss
inc
sbb
xchg
sub
ds
das
pushl
popf
sar
adc
subb
andl
jne
testl
cmpsl
and
mov
cmp
adc
aaa
and
outsl
je
inc
adc
mov
push
mov
sbb
pop
clc
inc
cmp
repnz
push
push
enter
and
call
mov
les
call
cmp
push
sbb
outsb
iret
push
repz
mov
adc
fisttps
insl
jae
or
xchg
jne
push
fsubrl
lea
in
and
mov
mov
in
or
addb
sbb
xchg
clc
cmp
cmp
pop
sbb
or
cmc
sub
push
mov
cmp
mov
iret
test
or
sub
or
fidivs
inc
xor
std
jmp
push
lea
je
cmp
jne
dec
mov
inc
inc
sub
xchg
lock
xchg
fldl
fcompl
test
arpl
push
sbb
je
jno
add
adc
adc
adc
mov
leave
ret
push
push
sbb
or
sub
inc
je
ja
push
add
push
loope
jecxz
and
es
inc
sbb
add
setg
pop
dec
bound
sub
mov
pop
pushf
sbb
ss
and
sub
jp
jle
or
inc
es
aaa
or
or
dec
adc
jle
adc
out
add
add
push
cmp
lock
movb
push
adc
dec
jns
aas
sub
lods
stos
in
jmp
xchg
sbb
out
cmp
inc
repz
or
cltd
cmp
cmpsl
stc
pop
pop
movsl
sub
xor
adc
in
ja
fcmovbe
and
mov
and
and
aam
addl
sub
addb
rorb
xchg
sbb
orl
lock
inc
push
icebp
adc
mov
cmc
movb
mov
sbb
lock
add
inc
bound
sti
and
jg
cltd
ja
xor
roll
or
cmp
aam
test
add
dec
add
pop
jae
neg
enter
in
or
test
xchg
xor
cmp
push
pop
mov
prefetch
xchg
daa
fsubr
or
pop
lock
cwtl
add
popf
push
fs
sbb
add
rcll
push
fldt
and
and
dec
mov
addr16
push
push
leave
clc
icebp
sbb
cltd
dec
push
pushf
shl
ljmp
and
inc
and
jg
stc
mov
sub
or
adc
sub
xor
and
outsb
xor
fs
xchg
xor
stos
sub
fbld
xchg
adc
push
ret
popf
in
pop
inc
repnz
inc
mov
mov
pushf
in
or
cmp
movb
insl
popa
or
jl
std
push
fldl
pop
clc
adc
mov
lock
fdivl
fmull
insl
lock
pop
mov
add
jmp
adc
push
mov
lahf
dec
addr16
xor
xchg
dec
incb
incb
iret
push
xchg
pop
add
pop
push
fstpt
test
ret
mov
xchg
push
and
adc
clc
add
lods
cmp
out
lea
movb
adc
jp
mov
sub
mov
adc
sbb
push
test
test
movsb
jo
rolb
testb
jp
mov
push
rcl
out
or
call
mov
jo
or
in
pop
pop
jmp
sti
mov
into
push
aad
andb
adc
add
push
aaa
stos
sbb
andw
jnp
push
pop
mov
and
push
mov
loope
outsb
gs
ret
cmp
cmp
or
movsl
inc
cld
sar
mov
daa
push
push
pop
les
rol
inc
add
shlb
push
push
imulb
pop
data16
movq
inc
jecxz
cmp
rol
or
pop
pop
pusha
cmp
add
adc
inc
add
xchg
mov
or
fsub
cmp
pop
aad
loopne
les
loopne
jmp
pop
outsl
sub
fidivs
add
sbb
inc
ljmp
cmp
xor
dec
clc
mov
cmpsb
sbb
mov
daa
popa
lods
cmpsb
sysexit
adc
xor
sub
xchg
popf
pushl
xorl
outsb
insb
dec
jno
add
mov
pushf
dec
add
adc
mov
jo
pop
call
clc
lret
pop
jne
shr
push
cmp
jge
out
scas
pop
or
mov
push
mov
lock
xor
loope
lahf
or
mov
xchg
mov
sub
std
and
dec
pusha
adc
fsubs
sub
lods
lock
xor
loope
xchg
add
orl
and
mov
push
in
cli
cmp
rorl
pop
cmpb
es
iret
jge
gs
ret
pop
cmp
mov
rcl
sbb
ss
std
mov
xchg
mov
jge
push
insl
in
lods
cmp
pop
jbe
in
dec
int3
cmp
mov
dec
mov
sub
or
rorb
or
mov
stos
cmp
jmp
and
and
jl
inc
mulb
pop
dec
mov
fimuls
or
js
add
ss
movsb
push
bswap
ja
pop
or
lods
call
sub
jne
popf
cli
enter
fsubl
push
subl
pop
es
or
add
scas
lock
xor
pop
outsl
leave
add
addl
adc
xor
stos
mov
or
loopne
jmp
shll
or
repnz
inc
fbld
xchg
inc
mov
cmc
jnp
hlt
xor
shrb
test
psrlq
test
ret
sub
cmpsb
enter
stos
fisttps
fisubl
pop
clc
jl
and
scas
fidivs
sti
aaa
sbb
cmpsl
addb
mov
lds
adc
rorl
aas
lret
clc
inc
cmp
jb
sbb
lahf
cltd
sub
cltd
test
js
mov
and
or
int3
rolb
shrl
addr16
dec
xor
dec
pop
shrb
xchg
xchg
xor
mov
sarb
xchg
mov
mov
push
push
aaa
or
mov
xchg
mov
inc
in
jg
dec
add
jmp
cmpb
push
or
shl
jnp
aad
and
xor
cld
arpl
insb
mov
fcomi
inc
rolb
inc
sbb
add
jo
inc
xchg
sub
mov
inc
sbb
add
cmp
add
addr16
jb
xor
and
cltd
jp
and
daa
sbb
movsl
dec
jl
adc
fs
sub
ret
adc
add
push
aas
push
test
sar
pop
dec
ds
cmp
jecxz
xchg
mov
pushf
mov
loope
cmp
pop
movl
cmpl
cld
mov
pushf
cmp
pop
lds
xchg
addb
dec
imul
xchg
jo
inc
dec
xorb
test
movl
mov
sbb
cmp
je
cmp
inc
inc
insl
insb
mov
icebp
into
add
or
loopne
mov
cmp
cwtl
xchg
inc
fcmovb
push
jg
pop
jle
jno
bound
or
je
push
int3
cmp
fsubp
mov
insl
fabs
xchg
xor
and
jne
cmp
cmpsb
daa
adc
dec
add
cld
sbb
jns
pop
mov
jne
pop
add
idiv
xchg
cmpl
mov
lock
ud2
js
xchg
pop
dec
sbb
sub
addr16
mov
gs
pop
mulb
shr
sbb
into
push
or
lret
mov
push
test
or
out
movsb
push
pop
mov
xchg
imul
push
fiadds
add
or
jbe
xor
mov
sbb
cmp
sbb
or
mov
lods
jo
sbb
push
sbb
nop
or
pop
rol
push
inc
fisttps
jne
pop
jle
or
imul
lcall
addb
jb
ret
and
pop
loop
jmp
cmp
xor
adc
push
filds
sub
pop
push
inc
xor
icebp
sbb
mov
push
add
insb
mov
imul
sbb
ficoms
mov
mov
in
jo
adc
add
popl
jg
sbb
dec
adc
stos
das
stos
ret
jo
mov
dec
ds
adcl
sbb
arpl
inc
inc
loopne
pop
jnp
add
test
lods
fiadds
mov
push
int3
add
sbb
inc
sbb
pop
addb
or
ds
mov
add
push
mov
inc
sub
xchg
cmp
adcb
or
pusha
xchg
nop
dec
cmpsl
lods
pop
push
add
push
and
xor
nop
add
mov
cmp
pop
xchg
pop
loope
jmp
cmpb
je
sbb
nop
std
cmp
mov
lea
ret
inc
pop
inc
ss
sub
out
xor
xor
xor
cmp
push
inc
adc
imul
insl
fcoms
lods
lea
fmull
mov
lret
scas
xor
out
ds
pop
lcall
jmp
into
out
add
or
adc
inc
pushf
add
xchg
cmp
add
and
popa
and
sbb
shlb
add
jecxz
ja
ret
adc
mov
ret
loop
adc
jmp
js
outsb
in
mov
rolb
call
es
rol
or
inc
inc
fs
hlt
inc
aaa
jo
xchg
mov
dec
push
movb
jae
inc
xchg
gs
add
cmp
cmp
or
call
sub
pop
add
je
mov
enter
ret
rcr
sbb
push
mov
push
add
lea
test
stos
mov
and
add
sbb
es
xchg
mov
lea
mov
inc
mov
push
mov
mov
scas
testl
mov
inc
sti
add
mov
jo
loopne
out
insl
pushl
imul
pusha
int
pop
ds
mov
jbe
aas
cwtl
mov
lea
lea
nop
cmp
push
mov
mov
mov
inc
cmp
int3
inc
test
mov
or
xchg
jno
or
sub
inc
adcb
inc
test
add
add
xorb
push
jg
fs
sar
loope
test
jmp
outsl
cmp
sbb
mov
jo
or
cli
cmpsb
pop
dec
cmp
jne
push
push
mov
lods
jle
jae
in
mov
aaa
lea
out
test
subl
lods
sbb
loopne
jecxz
jne
rcrl
mov
add
inc
pop
sub
cmp
mov
push
icebp
mov
inc
scas
xchg
push
insl
and
adc
xchg
sub
or
lock
mov
shr
jno
lods
lea
push
push
inc
xchg
mov
adc
or
pop
sub
sub
dec
sub
mov
adc
fistl
or
fimull
bound
loopne
ficoml
inc
sbb
fxch
inc
call
je
or
flds
das
int3
sub
push
pop
les
fisttps
cmp
scas
loopne
adc
shl
mov
and
mov
mov
push
and
hlt
stc
cld
or
xchg
inc
leave
mov
pop
push
mov
mov
test
pop
xchg
jge
xlat
lea
mov
jg
divb
in
in
cmp
jbe
sbb
cmp
fimull
clc
push
leave
cmp
or
xor
sbb
cmp
sbb
test
pusha
jns
fs
push
mov
pop
ss
or
frstor
add
sub
ss
mov
jmp
push
lea
test
aaa
xor
hlt
or
and
ja
jae
pushf
inc
pop
pop
jns
add
test
sub
add
add
xor
adc
push
adc
xorl
lds
pop
sbb
lods
cmp
fwait
hlt
filds
or
lcall
in
sbb
lret
add
adc
add
jno
imul
sbb
sbbl
and
sbb
movsl
mov
sub
mov
and
js
sahf
cs
dec
or
jge
adc
test
mov
les
cltd
sarb
lret
push
lahf
negl
add
andl
cmp
add
inc
add
sub
adc
popf
pop
add
fs
nop
push
pop
sahf
cltd
and
cmp
xchg
test
inc
xchg
out
lea
pop
sahf
xchg
xchg
pop
mov
verw
sahf
pop
push
rcrl
repz
jno
dec
call
push
sbb
mov
enter
in
push
and
das
sub
cld
push
pop
out
test
mov
jl
add
pop
and
loope
jmp
aaa
cmp
out
sub
xchg
stc
and
std
je
inc
inc
jmp
push
add
aaa
sub
outsb
and
negl
dec
and
repz
jmp
cmp
outsl
jge
stos
mov
in
add
or
jne
ret
jne
ret
mov
jbe
shlb
je
jge
sbb
pop
test
sub
call
cmp
push
pop
sbb
je
mov
mov
fdivrs
jne
ljmp
push
xor
out
mov
add
pop
jbe
ss
xor
push
add
in
inc
or
es
push
mov
cmc
inc
insl
adc
ja
leave
or
push
sbbb
fwait
rolb
shll
push
bound
pop
cmova
flds
and
ds
dec
je
xor
mov
inc
adc
insl
inc
cmpsl
mov
xor
mov
mov
or
jne
cmp
movb
add
aas
inc
fimull
dec
jmp
xor
xor
inc
and
sbb
nop
or
jmp
sbb
inc
inc
aas
add
inc
pop
je
cmp
mov
pop
mov
fadds
inc
or
and
insb
mov
shr
add
push
dec
cli
pop
pop
incl
dec
jne
fwait
ja
sub
ds
cmp
cmp
pop
inc
subb
loopne
testb
fbld
mov
testb
mov
fdivl
and
sbbl
imul
sub
pop
nop
xchg
mov
add
pusha
xor
cltd
mov
jl
xor
les
rcl
xor
and
cli
sar
mov
ljmp
add
jno
mov
aaa
jbe
cmp
ds
and
cmpsb
ret
icebp
dec
pop
mov
adc
jnp
or
mov
aam
xchg
mov
pop
jne
xlat
mov
or
inc
sbbb
mull
xchg
pop
inc
lds
fdivl
or
jge
lea
or
jne
outsb
mov
add
adc
jne
or
mov
sub
push
sar
fildl
imul
pop
shl
insb
fnsave
into
stos
mov
cmp
dec
and
inc
int3
mov
adc
mov
xchg
popa
es
pop
call
push
cmp
je
push
loopne
jo
clc
sub
adc
pop
ja
pushf
sub
inc
lods
ljmp
sbb
cld
adc
mov
inc
pop
lahf
and
add
cmc
mov
pop
es
adc
and
mov
cmp
add
pop
mov
std
inc
fistl
scas
roll
add
aam
jo
and
sarl
fimuls
and
fdivp
mov
mov
inc
cli
jmp
xchg
dec
ret
xlat
jecxz
mov
lea
das
sbb
lock
ret
clc
jl
in
out
xor
xchg
loopne
dec
mov
pop
lock
lahf
adc
mov
push
add
out
fildl
mov
sbb
loop
lock
and
dec
mov
dec
xorl
sub
lret
test
addb
sub
inc
or
je
js
push
inc
cs
fwait
push
and
inc
inc
enter
int
fildll
fstpt
or
jae
jp
cmpsl
dec
xchg
pop
jmp
inc
push
adcb
xor
cmpsb
loopne
aas
push
sbb
lods
xor
dec
add
add
xchg
or
lret
add
adc
jg
testl
lcall
rcrb
mov
inc
sbb
mov
shl
iret
pop
cmpl
jae
adc
jp
push
add
jb
push
in
icebp
add
aad
xchg
dec
insb
mov
pop
and
sbb
ret
push
adc
shlb
aam
xor
arpl
push
popf
shlb
sub
cmpb
scas
cli
test
scas
out
jbe
and
jno
mov
xchg
rcll
dec
xor
das
pusha
dec
cmp
stos
inc
int
pop
push
addr16
cmp
mov
or
sbb
sbb
mov
add
add
test
inc
push
jge
dec
and
adc
jge
xor
je
mov
or
scas
cmp
jg
out
or
out
push
add
and
or
or
mov
mov
insb
shll
mov
adc
fsub
sarb
lock
or
fcmovnu
push
jnp
sub
out
out
stos
dec
or
sub
sbb
or
push
push
iret
test
cmp
mov
push
mov
and
fcoms
cmp
in
testb
or
jb
mov
enter
enter
mov
ljmp
pusha
rcrl
test
pusha
add
scas
jmp
jnp
nop
cltd
jge
mov
sbb
cmc
loopne
or
jge
lds
shlb
xchg
mov
nop
or
cmp
popf
aam
and
ret
and
cld
jbe
push
pop
jne
and
or
mov
mov
sub
test
add
xor
cmpsb
ds
mov
mov
pop
jg
std
mov
mov
std
cmp
je
sub
addr16
inc
cmp
sbb
insl
add
add
xchg
pop
icebp
orl
rcrb
insb
imul
dec
adc
daa
daa
mov
sbbl
lock
neg
popf
dec
repz
aaa
lock
outsl
cmpl
pushl
popf
das
and
jmp
shll
cmp
adc
arpl
cmp
pop
fdivrs
xor
inc
sbb
and
cmp
sbb
cmp
mov
lock
enter
adc
or
jae
jo
cli
add
repnz
inc
fsubp
lock
pop
or
add
and
lret
or
or
leave
and
lret
or
inc
fimuls
lcall
or
das
jb
xchg
jb
lret
in
mov
or
jb
mov
pop
jge
push
stc
push
jb
mov
add
decl
in
inc
sub
jb
mov
dec
adc
mov
loopne
and
pop
jb
mov
xchg
jge
sbb
sbb
jmp
or
lods
jg
dec
cmp
or
ja
icebp
cmp
add
jae
fisubrl
sub
movsl
test
mov
out
adc
imul
or
addl
and
jmp
and
mov
lods
mov
xchg
xor
adc
xchg
push
pop
mov
nop
lock
inc
push
push
xchg
loopne
insb
push
test
cwtl
dec
es
cmpl
mov
test
outsl
mov
mov
negl
cmp
insb
mov
shlb
lea
or
repz
fistpl
and
jle
mov
test
je
or
call
mov
push
mov
or
sub
jmp
push
mov
jl
lea
add
or
xor
jne
lods
add
push
push
sbb
jne
fwait
dec
sub
popa
xor
cmpb
call
fnsave
lea
sbb
mov
into
clc
push
pushf
pop
cltd
sbb
mov
ret
mov
xor
adc
mov
in
sub
sbb
jmp
jb
je
mov
jne
sbb
jle
aam
arpl
insb
mov
mov
mov
int
push
mov
mov
adc
sub
adc
push
ljmp
and
fcomps
xor
fmul
add
and
addr16
or
jnp
jmp
notb
loopne
jo
jbe
inc
adc
mov
mov
sub
jmp
aam
test
xlat
nop
add
lret
xor
xor
test
adc
ret
add
pop
pop
cmpsl
mov
in
xchg
and
inc
sbb
ret
pop
jmp
or
dec
sbb
xchg
inc
add
inc
and
mov
push
or
pop
int3
movsb
fwait
out
add
sub
adcb
lret
cs
test
and
push
dec
loopne
test
adc
push
sbb
push
cmp
pop
jo
inc
cli
fidivs
leave
push
stos
dec
fisttpll
cmp
push
push
hlt
popa
cmpsb
mov
push
mov
mov
sysenter
pusha
adc
aaa
rolb
js
les
hlt
cmp
mov
jno
push
cld
xor
loope
cmp
cwtl
pop
sbb
ror
or
je
bound
adc
add
dec
mov
mov
pop
iret
into
cmc
xchg
enter
push
add
mov
pusha
sbb
fwait
pop
gs
pop
ljmp
push
gs
push
idivl
mov
inc
xor
mov
mov
fwait
in
push
push
fcomps
not
push
aam
lds
dec
mov
xchg
mov
dec
push
sbb
pushf
jl
and
xchg
mov
sbbl
mov
push
add
sub
lods
inc
xchg
ficoml
sub
aas
xor
dec
dec
push
push
mov
push
pop
inc
out
jge
adc
or
faddl
add
mov
mov
inc
and
nop
imul
shll
adc
dec
or
movl
fnstsw
lods
inc
and
adc
popa
ljmp
pushf
cmp
jb
movsl
sub
sbb
add
outsl
sub
shrl
pop
mov
pop
repz
push
add
cltd
dec
mov
jne
loop
jmp
inc
fnstenv
mov
pop
add
jmp
jbe
mov
inc
ret
sub
add
imul
mov
je
je
sbb
sub
test
or
adc
sub
in
movsb
lock
invd
nop
inc
push
sbb
adc
ss
sbb
sbb
nop
inc
push
sub
mov
sbb
nop
ja
cmp
orl
inc
cmovs
xor
and
pop
or
enter
push
insb
jo
ret
or
jl
jb
lret
inc
movsb
sbb
xchg
pop
mov
jb
pushf
mov
movsb
test
sub
pop
add
mov
dec
mov
or
add
fs
jnp
dec
popf
aaa
inc
add
cs
cmp
mov
fwait
mov
push
mov
daa
or
cmp
cs
cmp
cmp
inc
enter
adc
inc
test
pop
sbb
dec
pop
jb
enter
dec
and
iret
and
push
and
push
repnz
push
inc
testb
mov
add
adc
jg
pop
imul
bts
jmp
mov
leave
ljmp
xchg
mov
pop
les
xor
xchg
lock
lahf
or
imul
push
xchg
scas
addr16
adc
js
sbb
jne
int
sbb
push
jmp
jp
xchg
jno
mov
pop
add
push
jne
sbb
popa
and
je
xchg
lods
dec
inc
aaa
sub
jne
xorb
xor
jbe
into
mov
ljmp
insb
mulb
xor
cmc
pop
mul
lahf
add
mov
daa
movhps
icebp
ja
jae
mov
and
cmpsb
adc
add
insb
sub
stos
xchg
scas
inc
jo
mov
mov
imul
xor
icebp
or
xor
repz
cwtl
imul
je
rcll
lods
rorl
adc
test
xor
xor
mov
dec
int
or
xlat
ret
inc
mov
jbe
jge
adc
je
sbb
and
jg
inc
ret
mov
mov
push
push
mov
mov
inc
dec
inc
jae
jecxz
pop
sbb
adc
cmp
mov
insl
jecxz
pop
lods
cmp
jne
sbb
or
sbb
add
es
leave
dec
sbb
sbb
shlb
inc
loopne
clc
or
pop
cmpsb
add
roll
mov
or
or
jb
cmp
addb
and
fwait
pop
jns
xor
adc
push
jb
lret
xor
mov
lahf
inc
stos
mov
add
addb
je
cmp
push
and
mov
cmc
adc
jae
cmp
mov
cmp
xchg
test
push
jmp
or
and
xchg
or
or
insl
or
in
or
xchg
and
cltd
mov
aaa
pop
xor
and
adc
fists
test
sbb
dec
std
imul
lods
or
and
adc
jle
mov
sbb
dec
mov
push
adc
mov
xor
and
hlt
and
rolb
jle
cmpl
testl
push
cltd
andb
flds
lds
js
pop
inc
stos
push
movsb
loop
xchg
outsl
or
sbb
cmp
in
push
mov
shrb
jecxz
sub
out
ja
push
push
test
mov
or
stc
sbb
mov
rcrl
nop
mov
add
push
loope
orb
in
jbe
push
enter
mov
dec
mov
jl
jnp
and
cmp
jge
mov
cwtl
sub
insl
rep
clc
or
rolb
enter
adc
add
cmp
xor
or
insl
pop
mov
and
lock
sbb
sub
fcmovne
faddl
mov
add
adcl
xlat
push
xor
inc
and
sbb
int3
xor
test
sbb
es
shl
lods
mov
fistpl
cmp
mov
add
jnp
xchg
jg
jns
outsl
orb
adc
addl
xchg
xlat
les
jge
shll
inc
pop
icebp
or
frstor
incl
and
dec
push
int3
dec
add
mov
sub
cmpsb
and
sbb
incl
shl
mov
cmc
mov
push
jne
insl
je
stc
fsubl
add
stos
add
cmp
cmpsl
pop
or
sbb
fimuls
add
add
sub
mov
or
idivl
fdivs
clc
jg
sub
mov
je
repnz
ficoms
push
nop
into
adc
mov
inc
xor
mov
jl
mov
in
dec
testl
in
jmp
gs
push
andb
ss
cmp
cld
lock
xor
dec
jnp
adc
loopne
and
cld
inc
pop
incl
shrb
pop
hlt
cmp
dec
popa
inc
add
into
addr16
jle
mov
jmp
and
jne
mov
scas
push
or
mov
enter
pop
or
dec
adc
call
jne
jecxz
hlt
push
iret
in
and
xchg
iret
jns
sar
pop
ret
dec
or
enter
std
add
push
xor
pop
mov
add
adc
ret
rolb
pop
jp
pop
addr16
jmp
adc
rcr
mov
cmp
xchg
xor
adc
add
add
xchg
inc
sbb
sub
shlb
inc
push
out
jg
mov
add
jbe
mov
es
add
mov
push
push
js
mov
fldenv
outsb
aas
adc
pop
ds
fwait
mov
jno
rclb
rorb
lcall
orl
dec
dec
add
push
enter
shl
test
sub
ret
imul
shl
pop
cs
loop
roll
lret
roll
mov
mov
je
dec
mov
sahf
mov
leave
push
ret
leave
or
roll
dec
enter
mov
stos
adc
movsl
movsw
inc
mov
push
jge
push
out
sar
inc
mov
mov
insb
push
fdivs
movsl
sub
fisubl
add
dec
repnz
or
iret
repnz
or
add
add
imul
add
dec
outsl
rcrl
xchg
prefetchw
sub
inc
jne
outsb
and
add
lea
push
adc
or
or
subb
jmp
add
je
cmp
push
insb
ja
xchg
je
lods
pusha
sbb
mov
inc
psubb
adc
add
adc
and
ret
loopne
dec
xor
inc
mov
mov
mov
or
fcmove
jne
or
push
jmp
or
inc
addr16
xor
in
pop
or
jne
or
or
ret
pop
sbb
push
fscale
mov
shlb
mov
add
or
sub
lock
cwtl
fldcw
dec
xor
mov
cwtl
sysexit
push
rcll
dec
or
mov
test
add
cmp
mov
filds
test
pop
sbb
sub
repnz
add
mov
or
cmc
jmp
inc
mov
aam
fildll
mov
pop
and
lds
or
mov
cmp
push
enter
jo
pop
dec
cmp
in
sahf
arpl
pop
mov
enter
push
push
in
push
das
orl
xchg
inc
jae
cmp
jo
mov
in
add
add
fisubl
leave
mov
mov
add
cmpsb
xorb
xchg
in
jns
shll
stc
cltd
js
sub
adc
jbe
popf
pop
outsb
adc
insb
mov
pop
sbb
or
inc
mov
or
xor
push
outsl
adc
mov
add
sbb
leave
je
scas
add
and
lret
or
incl
lea
adc
test
xor
jl
sahf
or
and
flds
stc
lahf
negb
jb
add
repnz
popf
or
pushf
dec
enter
add
pushf
dec
fs
jo
outsb
rcll
ret
and
sbb
or
pop
add
adc
pusha
sub
cltd
push
mov
dec
loope
mov
push
mov
push
pop
inc
insb
mov
rol
mov
ljmp
cmpsb
add
push
addb
pop
mov
adc
cmp
out
and
out
outsl
movsb
push
mov
mov
dec
leave
je
out
outsl
lea
es
push
idivl
inc
loop
mov
dec
in
and
inc
je
or
test
or
jno
or
mov
sbb
jecxz
adc
xor
inc
push
jno
leave
xor
loope
sub
pop
inc
xchg
inc
cmp
divl
xchg
xchg
inc
cld
jne
aas
int3
add
jb
arpl
adc
sub
push
xor
inc
jmp
lods
dec
add
mov
or
or
mov
popa
add
test
jecxz
rol
and
ss
inc
loope
adc
in
sbb
mov
push
shll
pop
roll
lock
incl
and
dec
mov
pop
rcrb
jecxz
sub
pushf
jl
sub
adc
pop
sbbb
pop
jge
inc
or
je
xor
je
inc
dec
out
and
push
xchg
push
movb
fildl
por
mov
jmp
adc
cmp
ja
jp
mov
add
and
xorl
das
je
aas
mov
shlb
cmp
stos
jne
mov
dec
adc
xor
hlt
jmp
dec
add
or
lods
push
and
sbb
add
fcom
jb
pop
adc
lea
cwtl
inc
daa
loopne
xlat
or
daa
cmc
dec
sbb
xchg
test
pop
xor
and
clc
rcl
clc
add
les
add
imull
and
and
pop
adc
sbb
pop
xchg
xchg
ja
pop
jb
sub
sbb
xor
sbb
push
inc
mov
test
cmpl
push
sahf
sub
stos
lock
loope
shll
mov
push
ror
push
push
xchg
adc
or
pop
push
js
stos
sub
dec
or
fstl
mov
lods
lock
adc
mov
mov
popf
or
mov
andb
mov
dec
or
ret
sub
sub
xor
je
push
jo
inc
pop
stc
jp
orb
out
mov
sbb
cvtps2pd
push
lea
rcl
or
popa
cwtl
lods
iret
clc
push
push
xor
jl
sbb
lock
xchg
stc
adc
in
add
aad
movsl
push
in
sbb
test
jae
imul
fs
ss
filds
push
fcoms
sbb
push
sbb
je
imul
add
and
loopne
fbstp
leave
cmc
aas
je
cmp
pop
mov
adc
or
mov
je
jae
cmpsb
std
jg
cmp
jb
cmp
ja
add
cmp
adc
dec
stos
aam
cmp
sti
dec
roll
sarl
shlb
adc
xor
mov
or
lock
rcl
sbb
test
or
mov
jns
pusha
lds
lahf
inc
outsb
jne
loope
sub
inc
jmp
add
jmp
lds
daa
mov
jecxz
xor
gs
cmpsb
mov
push
xor
aas
pop
pusha
mov
int3
leave
sbb
pop
je
push
insb
push
pop
test
mov
mov
fists
enter
or
xchg
je
xchg
sbb
or
rorb
sbb
cmp
cwtl
cmp
div
add
jbe
jne
fldl
or
mov
and
das
xor
jb
iret
mov
inc
add
testb
nop
and
daa
sbb
add
jl
sub
adc
sahf
test
xor
and
and
les
push
sub
add
in
inc
jns
mov
dec
sub
sbb
test
push
xchg
cmp
or
dec
inc
adc
mov
mov
pop
inc
ss
fmuls
jne
add
fdivl
mov
cmp
dec
push
sub
aad
in
ficomps
mov
dec
or
and
ret
pop
push
movl
std
testb
push
fisubs
pushf
call
mov
pushf
ja
orb
sti
pop
adc
mov
adc
loopne
mov
sub
fpatan
push
filds
and
pusha
push
adc
sbb
outsb
add
mov
sbb
out
sub
lods
or
mov
sbbl
ficoms
sbb
inc
rcll
adc
nop
sbbl
sbb
sbb
push
push
adc
sub
int
scas
clc
mov
loopne
push
xor
gs
sub
std
sti
or
shll
xchg
push
inc
sbb
stc
notl
loopne
jne
jp
mov
add
out
lea
pusha
xor
add
lea
orw
dec
mov
push
mov
sarb
xchg
or
jle
jl
scas
mov
out
adc
xorb
unpcklps
push
shl
mov
aam
data16
lods
adc
rcrb
fcoml
rclb
mov
icebp
push
cmp
sarl
jge
cmpb
loope
and
dec
je
add
jae
cmp
leave
and
lret
lea
mov
push
xor
push
inc
out
inc
das
call
adc
clc
lea
mov
sbb
inc
mov
mov
inc
lods
sub
fmull
push
push
mov
loopne
mov
jo
mov
cmp
inc
loopne
mov
mov
js
push
enter
stc
gs
jo
pop
cmp
jmp
subl
clc
stos
in
nop
mov
add
insl
pop
inc
js
pop
sbb
cmp
daa
lock
pop
rol
inc
pop
pop
and
mov
fcoms
cmp
add
inc
mov
mov
jecxz
clc
fimuls
xor
sub
pushl
xlat
pop
xor
aaa
inc
std
sbb
mov
jne
add
sbb
dec
outsl
bound
adc
inc
cwtl
dec
loope
jle
ror
sbb
es
mov
into
jae
lock
add
clc
or
rcl
xchg
int3
loop
rcl
sbb
shrl
les
cvtps2pi
or
or
jge
js
xor
pop
std
and
pop
mov
push
aas
or
movsb
ljmp
cli
xlat
shr
shl
or
pop
mov
test
lea
cld
ljmp
jmp
in
fnstsw
shl
jmp
pop
inc
mov
inc
pop
mov
push
adc
arpl
and
mov
ja
dec
inc
cld
adc
jbe
xchg
cmpl
or
push
movsl
cmp
push
or
adc
pop
movsl
mov
dec
ret
mov
inc
mov
pop
mov
mov
clc
sbb
mov
jne
mov
mov
push
sbb
iret
and
xorl
adc
sbb
add
lret
mov
jno
shll
pop
test
in
xlat
add
test
sbb
test
outsl
or
pop
loopne
or
inc
adc
dec
int3
sbb
xchg
adcb
hlt
movsb
filds
xchg
mov
mov
add
or
sub
out
push
add
das
add
std
mov
or
xchg
sbb
lock
mov
je
loopne
and
lret
pop
add
pop
fistpl
mov
lcall
xor
jle
mov
add
popf
xor
xor
out
je
inc
adc
mov
dec
dec
inc
adc
adc
arpl
adc
gs
push
or
or
js
movsl
enter
dec
mov
cwtl
cmp
add
popa
in
cli
lds
rcll
or
xor
fcoms
xor
sbb
xchg
aam
jns
xor
inc
push
inc
je
test
ret
jne
fldl
andl
cmc
shrb
leave
in
mov
mov
shrb
dec
sub
jo
scas
rorl
push
mov
aas
or
mov
int3
pop
and
or
rorb
add
enter
arpl
fcoms
or
outsl
mov
clc
nop
sbb
mov
inc
dec
pusha
popa
mov
out
push
movsb
sbb
jge
adc
js,pt
jl
incb
dec
dec
in
xchg
test
xchg
loope
and
or
pop
dec
movsl
mov
dec
jecxz
mov
shr
and
fwait
addl
cmp
icebp
adc
dec
mov
xchg
mov
jge
lods
sub
mov
adc
adc
adc
sbb
add
inc
jg
outsl
rorb
mov
rcrb
mov
xor
xor
lds
sub
add
hlt
pop
cltd
test
mov
fwait
jmp
xlat
push
push
pop
jge
add
adc
cmpsl
movsb
dec
nop/reserved
aas
cmp
jmp
jl
and
inc
xchg
in
mov
out
iret
repnz
and
xor
das
sti
mov
pop
lock
sub
mov
daa
sbb
inc
push
cmp
jno
mov
lret
jne
inc
test
or
inc
fildl
dec
shll
cmpsb
push
hlt
pop
cmc
pop
mov
cmpsb
imul
or
xor
inc
sub
dec
enter
add
sbb
and
lcall
int3
pop
in
imul
sub
cmpsb
in
in
out
sti
out
inc
rclb
addr16
shrb
xlat
jg
add
xchg
shlb
sbb
adc
lods
jo
cmp
jne
aad
pop
add
clc
data16
jne
lock
movsl
lahf
loop
test
push
jmp
inc
or
jmp
cmpl
sbb
cmpps
sbb
loopne
xchg
or
add
aam
loopne
std
sarb
pop
push
loope
sbb
rorl
xor
adc
jo
dec
sbb
fs
out
mov
lea
jecxz
mov
loopne
lds
or
jg
push
pop
cli
mov
mov
or
psubd
adc
cwtl
adc
cmp
imul
loopne
repz
add
stos
std
dec
out
xor
add
sub
jg
call
and
aas
mov
cli
fistl
or
testb
cltd
pop
neg
sub
js
out
mov
cmp
dec
xor
inc
jo
mov
push
rorb
nop
xchg
or
jge
movsl
movsl
dec
jnp
loopne
das
jb
fsubrs
cmp
dec
and
xchg
into
mov
call
sbb
or
stc
xor
add
rcrb
sarb
push
repz
pop
outsl
push
add
callw
add
andl
sbb
cmp
fs
xor
adc
fs
movsl
xchg
out
sub
add
add
je
and
rcrb
popa
fstpl
test
adc
push
push
push
test
out
fldt
test
popf
movsl
pop
je
call
dec
mov
pop
lea
js
push
jp
out
imul
or
or
scas
pop
inc
fucomi
cmp
inc
xchg
lcall
jg
jmp
dec
cmp
dec
sbb
sub
mov
cmpsl
mov
xor
inc
jmp
cmp
loopne
data16
mov
inc
mov
pop
dec
cmp
adc
mov
gs
mov
or
stos
xchg
add
and
outsl
sbbl
jo
test
add
cli
mov
repz
je
pop
mov
andl
push
cmp
inc
add
mov
xchg
cmpl
sub
pop
out
sbb
dec
mov
dec
je
xor
cmp
inc
jecxz
lret
jo
std
hlt
and
loop
fmull
cmpsl
pusha
mov
jne
dec
movsb
in
sbbb
mov
rol
in
jl
or
fisubrl
push
outsl
fdivl
in
pop
loope,pt
mov
sbb
add
and
and
cmp
jg
jne
fisubrs
testl
std
aad
jl
mov
aas
ja
cmp
je
jmp
or
adc
insl
or
or
push
push
test
mov
mov
jge
push
cmp
push
clc
mov
lds
cmp
cmp
inc
cmp
out
aad
push
dec
fdivs
call
icebp
in
scas
xchg
imull
add
mov
or
test
aam
shl
fcompl
or
inc
jnp
imul
or
dec
adc
pop
xor
call
xorl
insl
loopne
out
std
fs
in
adc
movd
add
mov
clc
and
flds
pop
jg
movq
sub
stos
push
fmuls
fadds
jmp
or
add
outsb
lods
mov
dec
ljmp
add
lock
and
cli
cmp
repnz
fistpl
jg
add
mul
sbb
add
or
sbb
pop
lods
adc
sbb
test
in
negl
cs
jae
dec
repnz
or
mov
sbb
je
testl
jmp
inc
popa
mov
add
out
jle
add
les
arpl
loope
sub
mov
pusha
cmp
clc
roll
pop
jge
testl
xor
or
je
pop
nop
push
sbb
rcll
mov
jno
or
ret
aaa
mov
or
movsl
fistl
fdivs
repnz
sti
fimuls
add
in
sarl
add
xchg
shr
ds
jmp
rorb
imul
add
cmpl
lods
rclb
in
push
test
enter
mov
jg
adc
sbb
mov
or
rolb
inc
mov
add
test
subl
dec
pusha
sub
mov
cli
xor
push
test
adc
pop
pop
push
mov
cs
xor
movl
ud0
pop
or
aad
repnz
lods
jle
push
outsl
inc
or
daa
sbb
or
add
cmp
iret
xor
lahf
xor
jne
mov
and
fmuls
xchg
or
add
je
push
pushf
test
cmpsl
and
repz
jg
mov
rcll
pop
sub
and
flds
add
or
lock
cmpb
rorb
stos
pop
leave
aam
cmp
jb
cmp
jbe
fildll
bound
pop
sbb
mov
jb,pt
xor
gs
xchg
outsl
adc
loope
rorb
xchg
fisttpll
fs
call
les
ja
xchg
jp
loopne
int3
movsl
adc
or
pusha
cwtl
and
sbb
pusha
rcrl
cmp
adc
push
push
repz
icebp
inc
cwtl
and
and
shrl
pushl
testb
popl
repnz
pop
shll
mov
mov
jmp
xor
push
jmp
adc
sbb
insb
loopne
push
movsl
add
push
add
sbb
add
mov
rcrl
xor
js
out
or
or
inc
pop
je
clc
mov
pop
adc
dec
jae
sbb
sbb
xor
sbb
cmp
movsb
adc
xor
add
sub
cmpsb
pop
xor
xchg
adc
add
sbb
push
add
popl
pushf
insl
arpl
sbb
sub
xlat
xchg
push
mov
imul
iret
fdivs
sar
push
add
aam
mov
pusha
scas
inc
mov
pop
shrb
xchg
adc
push
pop
add
push
push
mov
dec
ret
int
add
test
filds
sbb
add
and
call
xchg
xchg
inc
es
es
test
xlat
popa
subb
inc
scas
pushf
je
push
push
pop
add
hlt
je
cld
pop
addr16
or
pop
add
dec
cmc
cmp
pop
add
pop
repz
sub
push
mov
sbb
sbb
inc
adc
scas
pop
push
jle
add
addr16
jae
fimuls
push
fdivs
xor
pop
dec
maxps
shll
js
fsubp
ja
jl
push
mov
movb
lea
xor
mov
les
xor
xor
push
push
fmuls
vpsllq
jle
cmp
les
cmp
movsl
andnps
adc
sti
or
cmp
or
xor
pop
or
jg
dec
lock
sub
addl
clc
das
lods
sbb
mov
push
movsb
ss
aam
adc
loope
add
adc
enter
push
sahf
mov
movsb
jmp
pop
cld
inc
xor
and
mov
sbb
jmp
decb
js
fmul
mov
rclb
mov
sub
js
rorb
cmp
and
xchg
dec
cld
dec
aam
cltd
in
xchg
inc
aad
loopne
leave
and
mov
fdivrl
enter
sbb
insb
in
xchg
dec
fsubrl
pushf
leave
and
pushf
or
pop
int3
enter
cmp
shlb
xchg
inc
dec
jb
adc
andb
fs
in
daa
cmp
push
ffreep
xor
inc
dec
xor
movsb
hlt
inc
loope
ret
sbb
sbb
fdivrs
add
cmpsl
add
adc
in
and
loop
lea
mov
lea
stc
xchg
push
mov
das
repnz
jnp
cmp
add
in
xor
pop
jb
sbb
imul
and
nop
push
dec
jb
xchg
nop
shrd
cmp
repz
xchg
jecxz
leave
add
adc
or
push
fwait
dec
jnp
jecxz
fmuls
mov
pop
repnz
fdiv
add
aam
xchg
xchg
push
dec
in
xor
xor
mov
sbb
adc
push
sbb
sbbb
lock
repz
pushf
sub
and
and
in
adc
jg
xor
mov
cmp
fwait
push
cltd
lret
cwtl
nop
mov
in
xor
pop
adc
in
pusha
rorl
mov
shll
push
xor
add
adc
mov
jmp
je
leave
insl
xchg
out
and
loopne
xchg
andl
lds
repnz
push
sub
ficoml
or
fdivl
pop
lea
arpl
movsb
sbb
fldcw
fists
add
ss
fsubr
push
inc
and
push
jo
ret
mov
push
jo
aas
mov
sub
das
mov
and
subb
jne
ljmp
imul
push
push
scas
sub
test
ljmp
divps
js
fdivl
or
gs
inc
and
and
rorb
test
mov
fisubs
in
paddsb
push
jnp
cmp
lods
cli
add
pop
inc
sbb
pop
imul
adc
repnz
fmuls
in
xor
int
call
pusha
push
nop
lds
in
pmulhuw
movsb
in
add
in
dec
enter
or
out
dec
or
pusha
out
pop
out
xor
out
cmp
pop
lods
out
xor
addr16
push
test
out
or
incb
jge
dec
lock
jb
loopne
lock
leave
sbb
jo
mov
mov
sub
fs
loopne
or
fsub
dec
sub
mov
dec
orb
dec
in
mov
jno
mov
test
sarb
fldt
add
and
in
hlt
repz
and
add
and
mov
addl
and
imul
and
imul
int
adc
jae
imulb
out
adc
sbb
dec
inc
in
cmp
fldenv
mov
test
testl
cmpsb
push
idivl
and
cs
ja
inc
jo
mov
cmp
jno
cmp
in
pop
fcoms
loop
pop
vmwrite
xor
adc
dec
test
shrl
pop
xchg
mov
dec
ret
test
or
adc
in
push
cmp
mov
and
rdmsr
leave
adcl
lods
stc
push
in
push
pop
mov
and
pop
mov
sub
rcll
xor
in
push
mov
adc
mov
bswap
push
scas
and
loopne
xchg
std
or
icebp
js
stos
or
iret
inc
jge
sbb
ss
gs
cmp
js
sti
daa
inc
xchg
add
daa
aaa
pusha
mov
mov
mov
mov
insl
xchg
aad
jns
add
cld
andl
inc
mov
cmp
xor
and
mov
shll
inc
mov
inc
pop
mov
xor
lea
jecxz
push
repnz
rcrl
cwtl
dec
xor
xchg
cmpsl
and
popf
cltd
jo
fs
sbbb
adc
mov
jb
sbb
in
add
cltd
nop
or
push
mov
cld
in
daa
inc
pusha
xchg
dec
adc
cmpsb
in
cmp
mov
push
in
pop
dec
xchg
repnz
sub
or
xchg
sub
inc
pop
call
inc
mov
jno
imul
adc
in
and
adc
inc
nop
popa
jmp
and
pop
je
insl
sbb
inc
jb
inc
enter
and
xchg
add
cmp
nop
test
inc
and
fdivrs
das
inc
and
lods
test
add
pop
jb
mov
nop
enter
in
dec
cmp
aad
dec
loopne,pn
das
in
xchg
dec
mov
js
xchg
pop
mov
insl
inc
pop
test
adc
pusha
aam
mov
cmpsb
cmp
push
sub
mov
push
je
pop
xor
dec
int3
cld
cld
lods
push
addr16
xchg
add
call
mov
inc
icebp
ficoml
mov
sub
pusha
rclb
push
stos
push
loope
sbb
clc
push
inc
pop
and
jecxz
dec
push
or
inc
test
pop
stos
fisubrl
and
ret
das
je
rclb
mov
imul
hlt
jge
das
leave
ja
jbe
or
adc
aaa
arpl
and
or
add
popa
pop
popa
push
xchg
ret
push
mov
mov
mov
add
pop
in
arpl
push
daa
das
sub
orl
xlat
and
notb
lret
push
call
mov
push
push
repnz
popa
inc
sub
mov
mov
in
push
popf
imulb
jo
nop
shrb
add
fcmovnb
insl
loopne
pop
shrl
cwtl
push
pop
repnz
outsb
sbb
fcmovb
ljmp
leave
outsl
add
sub
push
push
enter
imul
lcall
iret
sub
push
pop
xor
xor
mov
shll
push
xchg
in
and
in
jecxz
in
adc
fldcw
add
add
movsl
mov
add
inc
xor
ss
jmp
popa
xchg
push
and
mov
in
mov
cmpsb
ja
fs
test
sbb
inc
cs
sbb
js
jb
xor
sbb
std
inc
sbb
push
lret
mull
data16
jge
jmp
cmp
daa
fsubs
mov
stos
sub
or
inc
pop
push
adc
pop
inc
jb
jno
xchg
in
lods
insb
repnz
rorl
pop
adc
loopne
enter
js
or
push
mov
aas
add
sub
add
data16
adc
push
push
push
outsb
imul
outsb
decl
jb
outsl
jb
xor
xor
dec
inc
imul
repnz
std
popa
xor
and
addr16
bound
and
jae
addr16
in
out
outsl
jo
inc
cmp
dec
dec
inc
sub
sbb
and
arpl
imul
outsl
dec
inc
bound
xor
sti
outsl
add
xor
cmp
xor
xor
xor
cs
lcall
jo
add
mov
inc
inc
push
push
dec
dec
dec
and
sub
cs
out
std
add
sub
imul
inc
dec
fucomp
iret
decb
inc
js
gs
fs
jb
pop
cmp
mov
mov
jb
cmp
pusha
sti
or
cmp
cmp
sub
incl
cmp
dec
gs
dec
outsb
je
or
push
popa
jbe
pop
mov
sbb
fs
jg
mov
sub
add
jb
mov
dec
outsl
popa
fs
sbb
ss
insb
aas
sub
faddp
es
pop
mov
push
paddd
sbb
mov
je
insb
insb
popa
mov
fs
sar
or
pop
bound
and
sub
sbb
jne
fs
arpl
mov
mov
sub
arpl
sub
outsl
je
popa
dec
out
loope
loope
cmp
mov
jb
ss
roll
mov
shlb
inc
dec
xchg
daa
dec
mov
push
push
inc
push
inc
pop
jnp
or
inc
lds
jo
jb
sub
mov
inc
push
push
xchg
cmp
sbb
push
jae
adc
inc
mull
mov
xchg
mov
xchg
aaa
fidivrl
scas
fs
push
rorb
adc
popaw
imul
inc
jae
arpl
cld
out
imul
pop
jno
loopne
dec
dec
fnsave
jp
pusha
push
outsl
dec
popa
sbb
cmp
popa
xorl
enter
xchg
add
jg
fildl
xchg
ret
data16
jns
imull
and
arpl
and
jbe
and
push
popl
inc
dec
dec
inc
div
jo
push
ja
lret
push
xchg
push
push
dec
push
push
jne
rcr
push
push
jmp
mov
sti
mov
ret
dec
push
inc
push
dec
and
popa
jmp
je
jae
loope
cmp
lahf
lods
and
roll
gs
push
xchg
btc
stos
push
bts
add
ljmp
insb
imul
das
fisubrs
jb
sub
and
mov
outsl
data16
popa
jb
bound
adc
push
mov
shll
xchg
iret
fiadds
sbb
cmp
push
imul
xor
cmpsb
or
cmp
call
add
sahf
push
pop
popw
outsb
pop
leave
inc
dec
push
inc
inc
push
cmc
push
pop
daa
inc
mov
inc
icebp
and
fisttps
push
icebp
ds
scas
lods
xchg
iret
arpl
inc
lds
add
ficompl
inc
movl
xor
xchg
ds
push
imul
or
ljmp
dec
mov
sahf
rol
mov
xor
mov
movsb
cwtl
nop
inc
sti
pop
mov
dec
outsl
int
jbe
jno
jbe
inc
mov
lret
mov
jmp
push
and
xchg
xchg
add
inc
inc
inc
js
dec
inc
jne
jo
xchg
arpl
imul
imul
and
pop
jno
mov
push
xor
imul
jmp
cmp
pop
push
and
pop
das
pop
push
nopl
data16
lock
add
add
mov
mov
adc
inc
aas
inc
add
bound
push
mov
push
sub
incb
cmp
cli
jo
shll
xchg
sub
inc
test
aad
push
dec
push
add
outsb
loop
adc
mov
imul
aas
or
pusha
xorl
dec
cmp
imul
mov
sub
sub
sub
jbe
imul
pop
andb
das
outsb
cs
jb
cmpsl
shrb
pop
es
and
imul
inc
push
outsl
imul
insb
add
pop
sub
adc
js
pop
fs
outsb
daa
aaa
bound
add
in
inc
pop
xchg
cmp
lcall
xchg
and
in
ds
pushf
pusha
mov
sub
mov
mov
push
pop
dec
adc
add
sub
movlps
pop
add
inc
push
imul
imul
jbe
fbld
imul
popa
add
jge
mov
add
in
lods
push
xchg
push
lcall
and
xor
pop
fisttps
inc
pop
pop
adc
dec
push
cmovg
dec
jg
fbstp
dec
pop
inc
push
pop
add
push
inc
push
inc
dec
testb
push
dec
inc
dec
fwait
das
push
push
xor
fsub
lret
pop
dec
dec
inc
inc
dec
pop
inc
dec
dec
dec
insl
mov
pop
arpl
push
sbb
jb
in
dec
dec
push
daa
inc
inc
add
inc
inc
push
ret
or
xchg
sysenter
in
in
in
mov
mov
dec
subb
roll
mov
shll
je
inc
push
sbb
inc
add
sbb
adc
xor
daa
pop
and
push
jo
jb
jne,pt
shlb
and
dec
mov
adc
divl
ljmp
dec
mov
jne
and
push
sbbb
insb
xchg
mov
sbb
gs
aas
movl
jno
arpl
xlat
lods
jo
sbb
jae
cmp
sub
dec
cmp
test
pop
and
sti
es
push
aam
dec
pop
or
adc
dec
cmp
shl
ret
add
inc
inc
xchg
inc
pop
std
pop
push
dec
dec
inc
inc
jnp
pop
aas
addr16
dec
dec
dec
data16
js
in
out
jo
aaa
xor
dec
sub
inc
pop
jo
jnp
pop
ret
mov
xchg
mov
jo
pop
xor
adc
jge
xchg
out
repnz
jl
shrb
jle
sarl
mov
fisttpll
aas
add
xchg
sbb
and
in
mov
jg
xchg
imul
mov
cli
ret
sbb
lret
adc
push
mov
xchg
into
push
loope
and
dec
shll
inc
pop
jg
repz
shll
cmpsb
cmc
xor
mov
int3
or
aad
filds
jmp
bound
roll
lods
pop
mov
push
jns
xchg
fwait
push
movsl
outsb
mov
mov
push
xchg
insl
lods
pop
loope,pn
jo
push
pop
push
imul
mov
cmp
inc
cs
xor
push
aaa
xchg
dec
pop
or
jns
pop
lea
sbb
pop
mov
addr16
dec
test
jle
in
cmp
nop
mov
insb
mov
mov
sbb
sub
sub
adc
cs
mov
lea
incb
fdivp
mov
imul
data16
pop
das
xchg
pop
push
hlt
test
fistps
mov
push
ss
mov
mov
js
pushl
or
roll
ss
adc
cli
sbb
idiv
mov
push
and
pop
sbb
pop
or
cmp
add
and
jnp
std
mov
mov
mov
sbb
aas
and
sbb
sub
adc
mov
jg
pop
dec
rcrb
pop
decl
ja
and
fimull
repnz
push
mull
pop
or
andb
jg
dec
scas
sub
inc
sti
cs
adc
aas
popa
push
or
scas
int
adc
loop
orb
outsb
and
xor
aaa
mov
inc
popa
stc
aaa
loopne
notl
or
test
cmp
imul
sar
scas
shlb
add
lods
push
subb
scas
ss
push
stos
stos
adc
adc
mov
mov
lods
pop
dec
movsl
mov
out
dec
push
push
mov
aas
add
fistps
ja
mov
and
mov
adc
mov
jbe
into
sbb
ljmp
mov
mov
adc
out
mov
sub
and
lahf
mov
loopne
sar
fsubs
test
xor
dec
xchg
sar
and
push
fisttps
inc
push
xlat
dec
hlt
inc
pop
and
pop
ficoms
aam
orb
pop
les
xchg
mov
inc
xchg
ret
lcall
pop
roll
inc
xor
pop
test
je
xor
test
push
nop
inc
add
lods
rolb
aam
icebp
insb
out
sti
rclb
jo
jb
sub
cmp
fidivs
inc
stos
insb
push
jae
mov
adc
inc
data16
fldl
nop
sub
daa
jo
mov
out
jb
push
lods
arpl
cmp
out
shlb
or
fildl
aam
iret
jo
cmp
imul
push
push
pop
dec
lahf
push
push
pop
inc
dec
scas
pop
loope
es
inc
push
inc
push
lret
lahf
jae
fwait
jmp
jnp
out
inc
jb
xor
add
mov
xchg
xor
mov
push
test
ljmp
rclb
ja
outsb
pop
push
insb
push
daa
int3
popl
mov
fldcw
fldl
jle
sub
rorl
pop
mov
mov
mov
mov
sub
pusha
dec
mov
scas
adc
push
or
syscall
test
push
push
jne
stos
lods
arpl
paddsb
out
das
xchg
jae
arpl
mov
jmp
arpl
jae
xchg
xor
dec
mov
jmp
pop
jo
inc
sub
stc
popa
data16
mov
data16
imul
pop
cmp
or
pop
inc
pmaxsw
dec
and
hlt
lret
pusha
movsb
xchg
cmp
sbb
cltd
shll
jb
add
movsl
das
addb
out
push
cli
sub
cltd
addr16
and
lds
xchg
cmp
jp
push
test
jmp
addb
mov
test
push
popa
fdiv
cmp
xor
cs
ja
dec
and
dec
sbb
imul
adc
shrb
sbb
ret
push
bound
xor
scas
pop
arpl
pop
mov
and
adc
push
dec
xorb
cmp
aas
push
dec
cmp
setns
pop
fs
jo
jbe
std
adc
xor
inc
pop
push
pop
pusha
mov
cld
les
xchg
pop
lahf
dec
inc
insb
addr16
incb
popa
cmpsl
jns
and
inc
mov
push
mov
pusha
in
adc
sbb
sbb
loope
jae
fs
rol
mov
and
sbb
jmp
mov
insb
test
jne
push
jp
cmp
add
dec
stos
bound
pop
cmp
orl
mov
ja
imul
xchg
sub
test
gs
scas
iret
push
ja
push
arpl
push
popf
into
arpl
out
data16
jo
xlat
push
jno
filds
cmpb
aas
js
jecxz
inc
pusha
cmc
ss
sub
aam
sbb
xchg
inc
jo
out
out
loopne
gs
and
sbb
insl
add
addr16
fs
cmp
fstpt
xchg
dec
fildl
xor
adc
push
sub
sub
add
add
mov
aaa
inc
xchg
pop
cltd
sub
pop
add
js
scas
fisubrl
xor
xchg
mov
addr16
and
dec
inc
incl
dec
dec
inc
pop
push
dec
inc
dec
push
push
pop
inc
mov
inc
dec
sahf
push
dec
pop
test
push
aaa
push
fsubr
dec
in
push
dec
dec
daa
dec
dec
jae
jl
dec
inc
loop
pusha
push
cmpsl
pop
inc
out
adcb
push
insb
pop
jbe
sub
sbb
xchg
add
movups
add
cmp
ja
imul
inc
outsw
lods
sub
sbb
arpl
aad
mov
shl
notb
sub
cmpsb
cwtl
ja
imul
dec
je
or
adc
maxps
add
dec
imul
mov
outsl
popa
bound
test
adc
inc
cs
cmp
xchg
outsl
pop
bound
ss
fxch
stos
inc
sub
pop
sub
xchg
mov
pop
daa
fidivrs
loope
adc
fwait
inc
pop
push
pusha
dec
scas
outsb
arpl
cmc
subb
or
inc
fcmovb
test
or
push
test
loopne
xor
sbb
dec
dec
jae
je,pn
inc
or
xchg
xchg
xchg
dec
outsb
mov
mov
packuswb
rcrb
inc
and
inc
adc
nop
push
xchg
ljmp
les
sbb
adc
mov
frstor
xor
pop
addr16
push
sub
sub
adc
movsb
mov
fs
xor
adcl
jnp
pop
testl
loop
jmp
add
cmc
inc
mov
scas
dec
adc
paddusw
inc
comiss
imul
mov
inc
inc
inc
dec
dec
pop
dec
push
inc
das
sub
pop
movsl
push
sub
mov
ficomps
inc
mov
aas
or
fucompp
and
dec
and
dec
outsb
into
aad
jl
pop
inc
jp
fwait
mov
test
pop
and
mov
jge
roll
cmp
mov
in
and
and
xor
xor
cmp
cmp
xchg
add
add
and
das
sub
gs
int3
cmp
cwtl
sbb
loopne
mov
je
xchg
jo
test
jmp
sbb
mov
mulb
pop
test
gs
pop
push
outsb
pop
adc
xorb
add
sub
mov
sub
mov
bound
js
popa
inc
pop
adc
mov
mov
inc
pop
pop
sub
bswap
mov
sub
adc
and
pop
lds
inc
fs
adc
pop
subb
icebp
jae
dec
daa
cwtl
ljmp
andl
orl
insl
cwtl
or
insl
pop
adc
xlat
mov
pop
insb
inc
cmp
dec
inc
subb
popa
mov
mov
adc
jo
sbb
xor
test
inc
test
ret
ja
lcall
dec
adc
push
fnstenv
sbb
stos
popa
outsl
xor
or
push
sbb
or
xlat
or
xchg
adc
jno
loop
cmp
mov
and
dec
scas
sub
je
push
sahf
out
cmp
decb
pop
xchg
or
movsl
mov
inc
xchg
aad
cmc
adc
jnp
pop
pop
or
add
cmp
push
insb
jne
shrb
or
dec
push
inc
dec
and
jns
insl
test
xchg
rclb
sbb
xchg
sahf
sbb
and
mov
add
and
outsl
fcmovnu
mov
adc
dec
push
stos
pusha
movsl
outsb
fbld
dec
or
ret
fiaddl
movsl
ud0
pop
push
clc
clc
add
add
xchg
fisttps
inc
xchg
and
pop
jmp
imul
cmp
sub
cltd
pop
pop
ss
out
pop
pop
cmc
push
iret
adc
mov
adc
push
dec
inc
daa
adc
push
daa
inc
adc
xor
mov
add
jno
daa
pop
mov
paddb
andb
pop
jae
jg
inc
xor
add
push
pop
xchg
insb
fisubs
push
xor
mov
xchg
out
cs
fmuls
roll
pop
cmc
xor
popl
leave
sub
imul
imul
pop
dec
mov
inc
in
pop
push
dec
inc
adc
ljmp
popa
xchg
push
push
dec
inc
push
inc
pop
cmp
adc
dec
inc
dec
pop
dec
add
imulb
mov
mull
pop
xrelease
push
pop
cs
pcmpeqd
push
aas
pop
cmpsl
cmp
inc
or
xor
in
sbb
popa
jno
int
cmp
les
xchg
test
mov
inc
jp
jno
bound
or
xor
add
pop
or
and
xor
rcll
jg
mov
test
jl
fmull
dec
jl
dec
popa
jns
sub
push
divl
cmp
out
push
push
add
insl
outsl
aaa
or
cmp
add
fs
shll
or
push
insl
fs
pop
or
imull
pop
imul
jae
jb
and
dec
or
pop
popa
mov
cmp
mov
test
mov
push
sbb
fcompl
call
inc
mov
scas
sub
xbegin
adc
xlat
add
dec
inc
lret
stos
adc
lcall
and
xor
sub
icebp
push
out
mov
push
mov
fnstenv
ret
dec
popf
in
xor
push
inc
jnp
or
sub
add
xchg
cmpsb
das
shlb
sub
bound
cmp
xchg
inc
and
adc
mov
xchg
pusha
ja
push
pop
shl
dec
sbb
ja
das
lods
pop
popa
push
icebp
push
dec
cmpsl
dec
outsl
fcmovnu
stos
shlb
iret
inc
push
jne
imul
adc
or
adc
js
jns
jmp
jo
cmp
pop
pop
inc
add
push
rcl
mov
add
sub
pushl
xchg
out
test
push
mov
push
outsb
lret
xchg
orb
dec
xchg
sub
inc
int3
loop
dec
inc
cmp
jl
lahf
jg
iret
xchg
orb
pop
cmpl
les
sbb
scas
insl
jle
and
mov
insl
sahf
aaa
mov
push
pop
xchg
inc
mov
inc
push
xor
pop
outsl
add
aaa
and
dec
js
adc
lea
cmpsw
aam
imul
gs
and
pushl
jnp
scas
inc
loope
test
xlat
movsl
test
insb
rcrb
adc
jl
mov
sub
jne
xor
sub
adc
mov
test
and
sub
out
insb
shll
lock
loop
push
pop
outsb
and
adcb
aas
pop
and
pop
mov
das
or
iret
scas
inc
cmpsb
mov
push
popa
xchg
cmp
mov
push
pop
in
ss
divb
pusha
xor
lods
push
mov
add
imul
rolb
cltd
jbe
xchg
jg
xor
js
mov
xchg
sub
lcall
jp
or
push
xchg
je
popa
nop
and
sbbl
lods
sbb
xchg
je
push
insb
mov
push
adc
mov
sti
outsl
inc
jne
push
in
ja
mov
in
das
outsl
adc
push
fnsave
jae
pushaw
ret
jno
mov
fs
dec
outsl
jno
ret
out
das
sub
out
sbb
xchg
mov
mov
jno
pop
mov
pop
or
add
mov
dec
xor
outsb
movb
fidivrs
lods
add
pop
nop
or
int
daa
lds
jp
inc
adc
xchg
xlat
sub
mov
stos
hlt
and
and
sub
inc
push
insb
mov
fwait
inc
pop
inc
mov
test
outsl
pop
and
inc
js
insl
imul
push
outsl
out
jno
push
sbb
jo
lods
nop
push
arpl
insl
stc
push
pop
imul
call
ret
push
dec
mov
cmpl
push
filds
cs
or
lock
sti
frstor
insl
or
jae
std
mov
movsb
dec
or
data16
add
add
xor
pop
popa
fidivs
dec
stos
mov
cmpsb
pop
int
lret
negl
add
mov
inc
jb
jae
repnz
aam
je
shll
fwait
insb
mov
loopne
rclb
scas
ja
rorb
icebp
jle,pt
add
jnp
push
xchg
mov
jmp
pop
mov
clc
pop
and
dec
adcl
lcall
mov
mov
or
xor
or
mov
iret
adc
test
testb
out
mov
mov
hlt
fldl
jo
or
jecxz
or
lahf
ret
inc
sbb
dec
pop
jmp
jmp
push
cs
push
dec
push
dec
inc
adc
xor
out
dec
punpcklbw
push
lret
test
lods
add
addr16
or
cmp
ljmp
lock
roll
bound
mov
cmp
pusha
push
outsl
pop
shr
sub
inc
jp
decl
pop
inc
jnp
push
das
pop
inc
or
adc
lods
cmp
inc
aaa
inc
add
mov
or
rorl
mov
inc
pop
push
jb
fs
fldcw
stc
and
out
sbb
push
push
test
ffree
or
add
add
and
arpl
sub
push
sbb
sbb
in
push
push
inc
jae
push
push
sbb
out
xor
out
push
sbb
pop
sub
mov
pop
mov
int3
stos
loopnew
cmpsl
xor
iret
adc
cmp
test
imulb
lahf
cwtl
sub
adc
and
rorl
cmpsb
daa
push
inc
jmp
mov
ret
push
inc
dec
push
and
mov
ja
add
lods
sub
gs
dec
insl
lahf
push
filds
aam
mov
and
jbe
nop
pop
jae
jb
iret
pop
cmpsl
inc
fists
push
inc
xchg
cmp
push
jge
mov
xchg
and
pop
cld
ret
xor
xor
mov
jnp
jae
jb
sub
sbb
movsb
push
arpl
ret
mov
dec
push
push
dec
inc
ret
cmp
dec
and
scas
movsl
push
mov
sbb
or
xor
insb
fs
add
xor
and
or
sub
xlat
mov
mov
dec
mov
push
inc
imul
adc
sub
hlt
dec
aas
inc
push
fisttpl
jb
addr16
dec
cmp
add
cmc
mov
mov
fcompp
jo
or
inc
fsubrs
pop
push
jns
jbe
insb
push
mov
push
push
jno
bound
jbe
insb
jo
or
push
mov
adc
negl
jo
push
pop
sub
push
and
insl
clc
sub
pop
je
idivb
dec
inc
push
dec
inc
add
xor
js
inc
movb
inc
xchg
mov
dec
push
push
pop
dec
inc
shrb
andl
gs
pop
lahf
or
cmp
push
mov
fwait
in
enter
aas
xor
insl
fistpll
dec
outsl
pop
cmovl
outsl
cmpl
xor
xor
jnp
or
push
xor
ja
mov
push
inc
mov
inc
mov
inc
loope
addr16
sub
pop
js
push
or
scas
push
insb
pop
inc
mov
test
and
pop
pop
push
push
inc
inc
inc
push
push
ret
pop
inc
add
dec
jo
mov
les
subl
sub
mov
adc
jmp
faddl
roll
shlb
xor
test
fsubrs
push
and
ja
add
das
and
pop
lret
test
rolb
adc
xor
cmp
xor
subl
call
pop
jnp
push
pushl
inc
cmp
aaa
inc
sub
xor
cmp
sub
sub
adc
jmp
inc
inc
ss
jge
dec
es
out
push
add
cmp
das
mov
mov
jnp
arpl
cmp
xor
in
hlt
shrl
xor
adcl
popa
mull
jo
xor
inc
shlb
add
outsl
jae
call
push
lar
push
aas
fildll
push
inc
or
cmp
xor
add
push
mov
push
jb
sub
cmovle
popa
orb
mov
xchg
sbb
push
fiaddl
push
outsl
inc
imul
add
dec
loope
sub
stc
test
add
mov
dec
xor
mov
pop
jmp
mov
dec
inc
lods
ja
addl
icebp
jae
adc
nopl
mov
jnp
aas
and
popa
insl
daa
xor
je
pop
jmp
or
add
loope
ret
dec
daa
pop
or
inc
fisubrl
pop
roll
inc
push
xchg
mov
pop
daa
mov
in
sbb
pop
movsl
incb
loop
inc
push
sbb
popl
cmp
cwtl
mov
xor
adc
add
sub
add
jo
test
adc
mov
leave
sub
stos
call
add
pop
inc
dec
add
cs
xchg
dec
cltd
dec
xlat
ja
or
xchg
xor
pop
insb
in
test
push
dec
jae
push
push
sti
ljmp
and
es
push
push
push
das
xor
xor
or
or
sub
dec
inc
sbb
popa
sub
mov
bound
cmp
dec
rolb
push
shlb
xor
add
dec
nop
fiaddl
rcll
ret
inc
addr16
adc
pop
outsb
out
xor
cmp
push
movsl
add
ja
push
push
add
cmp
or
je
out
or
pop
push
mov
scas
and
mov
cmp
push
add
and
mov
push
xchg
loope
addr16
leave
sub
sub
mov
pop
inc
inc
add
dec
insb
out
rorb
xor
jle
sbb
add
push
inc
out
sub
jo
push
inc
sti
aaa
sub
and
pop
add
add
or
add
dec
mov
add
movsl
jo
data16
dec
mov
pop
inc
mov
pop
aad
and
push
pop
rcrb
adc
punpcklwd
push
stos
pop
cmpl
push
aas
mov
dec
pop
dec
push
stos
dec
dec
add
mov
push
dec
push
pop
push
push
inc
push
fsubs
inc
pop
jno
pmaxsw
inc
pop
inc
pop
adc
cmpl
mov
xchg
fdivs
outsb
xorb
push
jnp
mov
push
fldcw
inc
pop
jae
mov
push
push
sbb
fcomp
or
dec
cmp
cltd
in
dec
push
dec
inc
jmp
fisubs
movsl
imul
lea
inc
xchg
sbb
jg
push
add
sub
int
mov
push
pop
inc
repz
pop
push
inc
inc
xchg
push
inc
imull
xor
pop
push
cmp
ret
movsb
add
inc
dec
dec
stc
mov
stos
dec
mov
testb
notl
ja
xor
mov
fistps
rolb
pop
insl
or
mov
cmp
std
ret
mov
mov
addl
ss
dec
xor
inc
and
fmuls
and
rolb
inc
scas
insb
movsb
testb
sub
rcr
dec
xchg
insl
bound
inc
sbb
lock
bound
inc
inc
cmp
sub
andl
lock
push
arpl
pop
jo
pop
dec
and
scas
and
cwtl
xorl
inc
dec
xor
pop
pusha
xor
movsl
pop
cmpsl
jno
fcmovb
daa
aaa
inc
std
push
push
adc
es
push
popa
push
sub
icebp
sub
cs
push
pop
fstpl
jne
inc
inc
popf
pop
sbb
mov
dec
dec
sub
dec
push
sbb
shll
and
xchg
insb
call
dec
add
shrl
jnp
cmp
push
or
and
je
stos
xchg
inc
lea
or
jae
xchg
lods
dec
mov
mov
into
push
adc
inc
adc
dec
push
cmp
inc
push
jnp
jnp,pn
push
sbb
inc
sbb
inc
outsl
pop
or
dec
inc
dec
or
sub
inc
daa
inc
add
adc
or
xchg
inc
mov
aad
fcomps
xchg
stos
and
xor
adc
mov
dec
les
adc
mov
pusha
add
shlb
outsl
and
fcmovb
add
insl
incb
xor
jge
out
adc
sub
loopne
xchg
in
inc
sub
ss
lret
ja
aam
ret
xor
inc
insb
ja
jns
cmp
mov
jae
xor
cmp
or
in
add
and
mov
sarb
pop
inc
mov
data16
push
jae
adc
dec
jns
enter
add
adc
push
push
je
outsl
bound
push
pop
add
enter
out
add
pusha
ds
out
or
mov
cmp
sbb
push
insb
xor
and
add
push
mov
jne
mov
inc
pop
push
push
pop
jnp
pop
or
js
xor
mov
xchg
fdivrp
nop
stos
xlat
xor
pop
inc
sahf
addb
lods
pop
adc
outsl
inc
ja
mov
inc
jnp
add
ja
xchg
sbb
cs
add
sub
out
or
sbb
inc
jl,pn
pop
pop
cmp
jne
mov
imul
xchg
jbe
mov
data16
and
scas
lret
lods
lahf
ret
outsb
aam
jns
pushf
push
insl
test
push
fwait
cs
xchg
or
arpl
push
mov
cmp
jle
aad
aas
popa
addb
adc
and
pusha
popa
sub
loope
jae
or
push
rcrl
shrl
insl
fnstcw
xor
push
jae
lret
adc
daa
addr16
subl
lret
punpckldq
je
es
pusha
xchg
xchg
data16
insb
mov
push
xchg
and
add
add
push
jo
addr16
sbb
aas
imul
push
movsb
cmpl
aas
cmp
dec
xchg
fwait
out
mov
mov
adc
adc
outsl
and
jg
inc
push
dec
push
dec
dec
cmp
mov
jp
imul
ret
test
addl
in
daa
lock
fisubl
ficomps
dec
vmread
sub
cmpsb
and
daa
roll
out
xor
pop
cmp
js
sbb
add
das
cmp
mov
dec
bound
jae
push
cmp
loop
xor
mov
sarl
fs
pop
push
mov
cmp
cmp
popa
adc
rcrb
push
loope
aam
mov
cmpsl
xchg
push
in
pop
push
pop
repz
pop
sti
int3
cmp
pop
ud1
divps
pop
shl
fsubl
sub
pop
xor
jae
decl
jp
pop
pop
dec
push
pop
xor
xor
sbb
insb
push
or
cltd
mov
pop
pop
jl
xor
or
mov
out
clc
inc
mov
jo
bound
mov
and
jns
rolb
xor
xor
loopne
push
je
pop
add
mov
cmp
std
and
jbe
arpl
push
fs
xor
push
popa
mov
sub
subb
cs
jne
add
aam
sub
rcrb
push
inc
mov
and
addl
and
dec
inc
rolb
and
add
insb
andl
shll
sbb
mov
out
add
shlb
and
rclb
mov
cmp
aas
mov
push
pushf
cmp
cli
add
pop
xor
cmp
aaa
psrlq
fidivrs
lock
pop
int3
jbe
out
cli
inc
and
push
subl
je
outsb
cmpsb
mov
xor
add
and
pop
and
sbb
jae
sub
fsubs
fcoml
dec
addr16
pop
sbb
sub
dec
aas
xchg
in
packssdw
imul
iret
cmpsb
push
ja
das
je
insl
add
or
cmpsl
mov
pop
sbb
add
cmp
jne
mov
dec
pop
fsubs
mov
addl
xlat
cmp
add
nop
icebp
mov
xchg
add
push
sub
add
scas
popa
ss
push
adcl
add
add
jbe
sbb
or
add
jb
cltd
mov
sbb
fldt
adc
lock
repnz
mov
pop
or
cs
lret
in
test
mov
pop
lret
fildl
xchg
xchg
dec
xor
fwait
ja
push
add
call
data16
lahf
push
jnp
or
js
in
add
addb
das
cmc
sbb
inc
xor
inc
jb
pusha
xchg
cmp
pop
push
cmpsb
movl
add
inc
js
pushf
or
mov
rorl
push
stos
insl
out
mov
lds
jo
fdivs
and
les
add
mov
mov
daa
inc
icebp
or
imul
ja
xchg
cmp
xchg
inc
or
pop
es
lahf
dec
adc
inc
pop
cmp
and
pextrw
sub
lea
arpl
jmp
and
mov
add
lock
scas
jae
inc
xor
xor
cmp
mov
xor
inc
xor
xor
inc
inc
inc
cmp
or
add
pop
and
push
ja
jnp
pop
fdivr
jno
inc
xor
xor
xor
ret
inc
mov
cmp
inc
inc
cmp
inc
aaa
inc
cmp
dec
inc
inc
rcrl
negb
xor
aas
sub
fnstsw
inc
add
push
cmp
xor
sub
xor
ss
inc
xor
jnp
pushl
xor
inc
inc
xor
lahf
inc
pop
xor
inc
inc
ret
loope
cmp
inc
jno
push
outsl
mulb
inc
mov
mov
adc
inc
loope
and
pop
icebp
cmp
dec
add
xor
ret
testl
lcall
or
sti
filds
bound
cmpb
pushf
in
mov
cmp
mov
xchg
mov
test
pushf
nop
pop
pop
lea
xchg
pop
jbe
inc
add
pop
cmpsb
xor
sbbb
fmuls
sub
pop
xchg
pop
cs
and
test
clc
add
lds
inc
mov
aad
dec
sarl
movsl
push
inc
daa
cmc
mov
add
add
test
push
pop
lea
outsl
dec
mov
mov
wrmsr
pop
popa
add
mov
or
mov
xchg
mov
je
or
push
faddp
pop
add
inc
jno
in
aad
ja
add
or
fildl
cld
adc
pushf
add
aas
insb
push
xchg
inc
nop
scas
mov
pusha
jno
and
ret
daa
xchg
pusha
pushf
es
sarl
loope
or
jb
and
xchg
xchg
fidivl
loopne
imul
pop
dec
test
aad
fisubl
addb
jg
mov
push
adc
jne
lfs
xchg
xchg
and
jg
pop
jne
inc
lods
popa
cmp
xchg
jg
dec
push
add
dec
dec
lea
pop
lea
sbb
push
mov
pop
call
or
lods
pusha
addr16
mov
and
mov
xchg
xor
or
out
addr16
add
and
cmpsb
fwait
jg
add
mov
and
shrl
mov
jae
pusha
pop
mov
imul
xchg
mov
add
les
fsubs
stos
sub
mov
and
push
movsb
push
adc
daa
sbb
add
xor
rdtsc
xor
push
sbb
cmp
sbb
xor
xchg
push
sbb
das
daa
inc
int3
and
lret
shlb
mov
add
push
sbb
sbbb
adc
sub
inc
mov
stc
pop
add
pop
jne
aas
icebp
mov
ja
pop
arpl
pop
or
add
xor
dec
pop
sub
outsb
sub
fs
or
loopne
inc
mov
dec
push
xorb
shll
pop
adc
loopne
roll
sbb
xor
mov
inc
out
and
les
mov
xchg
cmp
popa
xor
rcll
faddl
add
popa
jg
jbe
sub
sbb
push
or
adc
pusha
mov
cmp
addr16
psrad
mov
fwait
inc
dec
in
or
inc
push
cmpsl
push
fcmovnbe
ljmp
push
cmpsl
jg
inc
mov
adc
ficoml
imul
sbb
push
sbb
adc
push
xchg
inc
push
push
push
aas
add
test
dec
inc
outsl
aad
fadds
xchg
mov
pop
adc
outsl
leave
and
add
xor
cwtl
or
push
test
mov
pop
mov
mov
mov
out
and
incl
jno
cwtl
mov
lcall
sahf
scas
xorb
pop
xor
add
dec
orb
dec
inc
inc
inc
dec
mov
cmp
mov
and
cmp
sub
out
and
bound
incl
jo
add
outsl
loop
inc
add
mov
cmpsl
add
jp
std
incl
jp
dec
mov
lret
jb
dec
nop
dec
fsubl
das
dec
scas
pushl
sarb
aas
mov
pop
loopne
fildl
test
imul
push
cmpsl
add
cli
mov
dec
mov
gs
sbb
aas
mov
xor
pusha
in
inc
cmpsl
mov
add
mov
or
pop
ljmp
dec
cmp
xchg
sbb
lea
mov
mov
cmp
imul
sbb
incl
mov
mov
mov
adc
cmpsb
xchg
mov
mov
jne
mov
xchg
mov
push
or
inc
sbb
inc
movsl
aas
mov
or
shlb
sar
movsl
xchg
dec
fwait
jge
es
rcrb
pop
cld
lret
mov
call
das
imul
or
mov
or
mov
lods
fldenv
pushf
cltd
xchg
push
xchg
push
push
mov
cmp
inc
mov
test
bound
cs
and
mov
dec
inc
jae
jo
jg
decb
adc
or
inc
xchg
jno
nop
stos
xchg
sti
lock
adc
jbe
mov
stos
fdivrs
mov
inc
notl
jno
sar
pop
inc
sti
mov
mov
adc
pop
fwait
aam
gs
jp
clc
decl
xchg
orb
andl
pop
shll
neg
pop
jle
ficompl
xor
aad
jg
push
pusha
pop
sbb
idivl
pop
dec
mov
pop
decl
enter
xor
push
sbb
pop
mov
mov
inc
xchg
cmp
repnz
cmp
jecxz
xor
jmp
xchg
cld
cmpsl
xchg
adc
adc
sub
lahf
aaa
cli
cli
hlt
dec
outsb
sbb
dec
je
nop
inc
lea
or
mov
cmp
call
mov
cmp
xchg
xchg
add
cld
das
sahf
fcoml
jne
lahf
sub
aam
adc
xchg
dec
or
sub
fnstenv
dec
out
adc
and
mov
cmp
minps
inc
mov
shll
mov
leave
inc
sbbl
cwtl
pop
jnp
call
pop
imul
sti
mov
les
hlt
mov
inc
xchg
rorb
scas
push
lcall
or
rcl
push
fistpl
les
sub
ljmp
push
xor
lcall
mov
das
out
push
out
sbb
ja
inc
lea
adc
lds
add
sbb
xor
subb
scas
adc
imul
xor
daa
call
ret
movsb
enter
add
das
push
cwtl
inc
addr16
test
pop
pop
mov
or
push
xlat
or
insl
out
push
fadd
add
insb
sahf
add
adc
les
sbb
xor
aaa
or
and
and
icebp
insb
add
pop
sbb
fst
dec
pop
aas
inc
xor
or
and
push
jbe
stos
pusha
push
or
push
mov
insl
pop
add
sar
inc
cmp
cs
ja
aaa
fwait
addb
and
add
mov
add
add
adc
or
adc
push
pop
lcall
add
cmpsb
imul
pop
ja
fisttps
xor
xor
bound
xorl
pushl
sbbb
aam
jns
shrb
sarb
popa
and
add
ljmp
mov
mov
jne
push
mov
bound
inc
btc
and
sbb
divb
pusha
insl
outsl
push
or
punpcklwd
or
pop
jle
aam
push
leave
nop
pop
add
add
add
iret
scas
popl
sbb
pop
pop
or
sbb
or
or
stos
dec
push
or
inc
aaa
notb
adc
pop
loope
add
fiaddl
push
add
sbb
lcall
lcall
cmp
jl
lcall
ret
lcall
lcall
xor
imul
cmpsb
imul
imul
cmpsb
imul
cmpsb
imul
imul
cmpsb
imul
cmpsb
imul
imul
cmpsb
imul
cmpsb
imul
imul
cmpsb
imul
cmpsb
imul
imul
cmpsb
imul
cmpsb
imul
imul
cmpsb
imul
cmpsb
imul
imul
mov
or
xchg
push
xchg
shll
shll
dec
shll
jae
xor
shll
or
mov
dec
dec
lret
lret
sub
xor
sub
xor
shll
sbb
fwait
fwait
shll
fstpt
dec
shll
jnp
xor
shll
pop
pop
xchg
inc
inc
mov
dec
daa
cmpsl
cmpsl
addr16
dec
shll
pop
pop
xchg
xchg
shll
xlat
aaa
dec
shll
ja
xor
shll
jg
rorl
iret
iret
das
dec
shll
outsl
out
xor
shll
pop
pop
lahf
lahf
shll
fistpll
dec
shll
jg
xor
lret
xor
xor
and
xor
rcll
push
xor
dec
shll
pop
cmp
inc
and
xor
rcll
xor
add
addl
ret
and
pop
adc
mov
lcall
lcall
sbb
push
imul
imul
imul
addr16
add
add
or
nop
or
or
or
xchg
or
or
push
cmovs
incb
adc
adc
xor
sbb
push
xor
push
leave
sbb
mov
inc
mov
sti
pop
loop
ret
mov
addr16
add
or
enter
adc
or
nop
adc
leave
pop
sbb
popa
test
push
lcall
and
push
sub
mov
or
mov
lret
mov
adc
sbb
lret
mov
lret
sub
cmp
pusha
sub
mov
jo
mov
mov
out
out
out
out
out
out
into
mov
xchg
sub
xor
addb
jmp
push
cmpsl
pop
rcll
das
and
cmp
dec
or
imul
push
loop
mov
iret
lcall
adc
pop
sbb
cmpsb
imul
cmpsb
imul
push
or
push
inc
and
xor
or
jle
xor
xor
roll
add
shrl
add
add
or
xor
rorl
sbb
xor
pusha
aas
std
pop
push
add
push
fs
popa
insl
imul
jae
jae
sbb
pop
fs
rcr
mov
sbb
cmp
inc
inc
or
sub
iret
push
cmpsb
push
fisubrl
inc
ret
bound
push
add
idiv
cmp
das
mov
rcll
xchg
xor
push
or
cmp
rclb
cmpl
jns
mov
lret
inc
add
movsb
jae
mov
daa
mov
add
jmp
imul
xor
and
sbb
mov
shrb
cmp
outsb
bound
outsl
cmp
das
push
xor
pusha
xor
mov
arpl
pop
out
push
pop
push
in
inc
mov
outsb
xchg
inc
mov
or
inc
xchg
pusha
dec
aam
and
dec
xchg
pushf
mov
shl
aad
push
push
test
test
pop
daa
push
mov
bound
mov
movsb
xchg
dec
pop
inc
push
dec
dec
cmp
cmp
xor
add
dec
and
jns
add
insb
jns
das
das
adc
dec
pop
inc
arpl
jmp
cmp
mov
test
dec
lods
adc
lcall
les
xchg
dec
jne
xchg
outsb
gs
add
mov
popa
nop
fsubs
jb
pop
inc
ja
ja
sub
mov
mov
outsb
jns
jle
inc
push
ret
xor
fcmovne
dec
pop
adc
daa
mov
adc
stc
sbb
inc
or
fstp
sub
push
xchg
pop
dec
and
flds
pop
popa
das
jo
or
loopne
pop
pop
pop
pop
iret
lds
out
push
adc
and
fisubl
mov
mov
out
aas
std
imul
je
cmp
inc
push
cs
push
shlb
in
mov
js
ja
ja
pop
enter
xor
jg
pop
or
insb
jae
inc
push
inc
data16
rorb
and
imul
xor
in
xchg
testb
subb
andl
and
addl
xchg
mov
ret
fadds
mov
push
push
outsl
add
les
pop
nop
pop
or
mov
mov
or
imull
add
add
push
add
add
add
adc
add
sub
push
pop
pop
or
aaa
mov
xor
pop
pop
pop
add
pusha
push
shll
add
inc
js
cltd
popf
lret
add
outsb
lods
fnstcw
dec
mov
mov
fisttpll
push
add
dec
add
dec
enter
adc
dec
add
or
fiaddl
jg
mov
or
or
push
jg
jns
pop
sbb
sbb
sbb
push
pop
and
and
and
es
ljmp
sub
sub
xor
xor
ss
cmp
cmp
cmp
ds
inc
inc
inc
inc
inc
inc
inc
inc
adc
loope
dec
dec
leave
dec
dec
std
add
imul
pop
pop
decl
loopne
inc
pop
pop
pusha
popa
bound
addr16
insl
outsb
jecxz
and
outsl
jo
jge
jbe
js
jp
jl
jle
mov
and
in
mov
ror
pop
sub
sbb
aas
and
sub
jle
push
inc
add
inc
dec
jae
fdivrl
inc
xor
gs
sbb
lret
dec
push
dec
mov
inc
je
aas
scas
mov
nop
in
ficompl
fbld
push
dec
dec
mov
enter
mov
mov
jb
inc
mov
and
push
push
sbb
jbe
jge
mov
dec
inc
and
push
js
out
xor
cmp
sub
adc
or
add
mov
cmp
data16
add
mov
das
or
jmp
dec
mov
add
inc
sbb
mov
dec
push
or
dec
or
and
scas
dec
inc
cmp
jl
jbe
inc
sub
mov
add
aaa
popa
inc
shl
aad
jb
or
pop
imul
repnz
je
xor
sbb
daa
imul
dec
jg
or
xor
pop
aaa
or
das
mov
mov
cmpsl
mov
fs
ret
sahf
mov
arpl
fs
push
cmp
enter
xor
arpl
fiadds
insl
loope
add
movsb
imul
movsl
mov
xorl
shlb
imul
mov
push
lret
dec
jmp
ja,pn
adc
xor
xchg
xor
je
push
cmp
pop
rclb
cmp
mov
add
imul
je
or
xor
push
imul
sub
dec
or
imul
and
cmp
add
mov
cmp
push
mov
mov
xor
in
push
pop
sub
xor
bound
fisttpl
testl
mov
loop
cmc
pop
bound
inc
mov
test
pop
int3
add
add
cs
inc
and
pop
add
andl
or
dec
cmp
inc
push
je
cmp
push
cmp
mov
or
leave
movsb
adc
and
xor
cmp
cmp
inc
pop
jne
mov
aas
lods
jne
clc
jno
data16
aad
lods
add
sbb
and
sub
mov
sub
xchg
push
lods
jne
repnz
sub
mov
and
push
pusha
or
push
les
jae
and
pop
add
mov
and
pop
in
push
sub
out
stos
sub
sub
sti
rcll
mov
add
xchg
rcrb
inc
and
add
mov
push
and
sub
add
add
add
andb
xor
add
stos
sub
xor
xor
add
mov
roll
add
mov
add
jg
lcall
adcb
insl
in
out
outsb
jb
fs
inc
das
mov
gs
lcall
fldenv
jne
test
sbbb
dec
xorb
adc
jo
pop
into
push
inc
outsl
inc
and
nop
mov
decb
testl
call
pop
ds
cmpsl
and
inc
dec
add
dec
dec
cmpsl
leave
inc
add
lahf
add
jnp,pt
mov
cmp
dec
and
lock
sub
push
xchg
cmp
call
xchg
mov
or
push
add
push
inc
dec
dec
bound
add
mov
xlat
das
add
cwtl
sub
jo
bound
xor
repz
or
add
or
hlt
lret
push
jnp
and
daa
jle
xor
xorb
inc
rcrb
insb
dec
jl
in
flds
mov
mov
pop
mov
in
add
jbe
mov
jle
mov
fisttpl
in
test
dec
daa
jbe
xchg
pop
xor
fisubrs
clc
inc
jbe
int3
addr16
mov
les
and
cld
jb
ds
out
pop
jmp
push
add
sbb
xor
shll
cmp
dec
shll
jle
xor
shll
pushf
cmpsb
mov
shll
loop
cmpsb
imul
cmpsb
imul
cmpsb
imul
xor
xchg
jbe
stos
mov
cmpsb
cltd
or
adcl
aad
sbb
push
cmpsb
imul
cmpsb
imul
dec
shll
lcall
flds
or
popa
pushf
shll
mov
cmpsb
imul
cmpsb
imul
mov
adc
inc
imul
ljmp
shll
jp
shll
and
lcall
test
imul
jo
dec
mov
lcall
and
cmpsb
imul
dec
shll
jbe
loope
pop
lret
in
pop
int
sbb
cmpsb
pop
cs
push
cmpsl
pop
sub
cmpsb
imul
out
lmsw
dec
in
test
pop
adc
jg
iret
sahf
adc
daa
mov
inc
jo
push
pop
mov
pop
or
aam
adc
call
add
fsubrl
add
insb
scas
xchg
dec
add
push
stc
xor
loopne
or
cmp
and
shlb
in
outsl
mov
ss
jno
or
enter
ror
test
lahf
stc
js
push
add
inc
shll
inc
outsb
pop
pop
cmpsl
or
arpl
shrb
sub
lret
iret
dec
aaa
pop
imul
add
int3
mov
xchg
xlat
in
jbe
lret
push
xchg
int3
leave
stos
js
sbb
pop
or
and
rcl
inc
rcll
insl
shll
inc
push
sbb
push
xchg
insb
push
mov
fsub
pop
fsubl
push
repnz
cs
mov
or
jo
nop
pop
mov
loop
loop
jecxz
mov
cmp
js
mov
in
insb
xor
add
mov
test
shll
lret
out
aam
sbb
mov
aam
mov
hlt
inc
ffreep
hlt
mov
jo
adcb
aam
push
add
test
bswap
or
and
adc
inc
imul
pop
cmp
cld
aam
aam
or
pop
inc
enter
insb
aad
pop
aad
inc
scas
in
sbb
int3
aad
inc
mov
lods
sbb
cld
aad
jb
in
mov
inc
test
dec
xor
jns
scas
in
ss
idivl
dec
pop
cmpb
outsl
aaa
and
lahf
test
sbb
xchg
add
xlat
clc
sbb
xor
and
push
fstpt
test
sub
add
mov
sbb
xchg
mov
dec
fdivrs
jno
xchg
xchg
fcomps
enter
int3
sbb
inc
push
or
dec
pop
or
repnz
loop
fcoms
add
fcomp
inc
ss
pop
mov
push
push
scas
in
lock
push
jg
pop
pop
add
in
fisttps
mov
data16
cltd
jno
jb
das
imul
and
xchg
ja
mov
sub
dec
ficoml
mov
dec
mov
orl
mov
add
or
fwait
mov
enter
incl
inc
cmp
fcmovnu
movb
iret
push
fistpll
cmp
mov
pop
aas
cwtl
fistpl
push
cwtl
adc
jnp
leave
dec
sbb
pop
jnp
fwait
enter
xchg
fistps
xchg
mov
dec
fcompl
and
cltd
and
inc
fs
cld
int3
das
testb
xor
pushf
daa
das
jns
cmp
sub
insb
pop
enter
out
adc
ficompl
xor
push
inc
stos
inc
mov
sub
fidivrs
addr16
ss
add
fdivs
in
icebp
inc
cmpsl
mov
ja
repnz
scas
mov
fcompp
pop
jnp
arpl
dec
pop
leave
or
and
add
inc
fistpll
jnp
addr16
fisttps
fs
add
mov
add
sub
int3
filds
int
stos
or
sbb
and
das
in
leave
movsb
int3
out
add
daa
cmp
loopne
loopne
or
call
rcrb
jb
test
or
adc
xor
mov
inc
fisttpl
inc
or
xchg
inc
in
fidivl
or
lcall
fistpl
pop
mov
roll
ja
inc
jo
cmp
add
pop
mov
mov
lahf
push
push
dec
xchg
jno
sbb
dec
xor
add
cmp
inc
enter
jecxz
pop
sbb
inc
in
dec
dec
push
jecxz
jecxz
jecxz
or
mov
jns
neg
inc
push
out
cmp
add
das
inc
scas
sbb
or
in
pop
sbb
sub
ja
or
xorl
sub
inc
push
mov
sbb
imul
and
insb
test
mov
pinsrw
pop
aam
add
or
ljmp
rorb
mov
jns
pop
or
or
or
cmp
cs
inc
cmovg
jns
insb
out
mov
or
aad
addb
xor
add
cmp
jge
ss
nop
mov
addl
movsb
fcoms
in
in
sub
out
out
and
jb
out
insb
aaa
sbb
fadds
leave
inc
xchg
xchg
fs
inc
cmc
paddsb
push
or
scas
add
orl
and
or
cld
mov
or
inc
or
fmuls
dec
or
addr16
add
inc
add
ret
xchg
shlb
in
movsb
jbe
push
sbb
andb
sub
pop
orb
jo
xchg
test
or
fsubrl
add
and
inc
push
inc
dec
insb
popa
sbb
cmpsl
sti
or
lahf
or
push
and
xor
add
ja
loopne
fs
and
inc
push
jnp
ljmp
mov
enter
pop
rolb
or
call
lock
movb
lcall
enter
xor
sub
pop
sub
or
pop
data16
adc
sub
push
cltd
or
push
and
fs
aam
add
sarb
pop
mov
fdivs
xchg
or
call
push
scas
dec
ds
clc
jmp
jmp
in
cltd
xchg
daa
inc
pop
dec
inc
in
loope
fsubrl
in
lahf
pop
adc
sbbl
and
outsb
xchg
aas
push
add
push
sarl
inc
pop
cs
fimull
mov
es
in
addl
jp
inc
jl
fwait
imul
push
inc
pop
jno
xor
add
cmp
cmpsl
push
pop
mov
inc
paddsw
sub
dec
mov
es
sbbb
in
jg
pop
enter
inc
adc
nop
enter
xor
orb
pop
jl
add
or
pop
les
inc
or
add
test
push
enter
int3
js
xor
divl
sbb
push
sub
inc
sbb
sbb
jne
xchg
addr16
sbb
cld
jb
sbb
xor
jne
imul
insb
mov
and
and
xchg
adc
inc
ror
sbb
aam
hlt
cld
jnp
roll
adc
or
outsb
adc
add
fmull
pop
adc
cmp
xor
cmp
inc
dec
or
mov
push
push
add
push
enter
jp
dec
shll
or
rorb
xor
scas
push
push
xchg
cmp
adc
into
adc
loopne
insb
push
or
movl
repz
jo
inc
sti
push
adc
imul
or
inc
push
inc
push
int3
lock
repz
add
inc
xor
enter
fisubrl
hlt
pop
or
push
inc
jl
mov
les
lcall
call
jb
cmc
cmp
inc
push
pusha
inc
pop
adcb
add
test
sbb
dec
ret
sbb
adc
or
ljmp
cld
add
aaa
ja
cmp
adc
sbb
mov
adc
testb
cs
dec
pop
adc
inc
adc
fdivs
ja
fadd
xchg
inc
inc
xchg
pusha
add
xchg
rorb
mov
add
adc
clc
stos
xor
or
mov
mov
xor
sbb
xchg
lahf
fbstp
fsubs
adc
lods
xchg
adc
or
int
lock
push
pusha
sbbb
stc
iret
rorb
in
adcb
sbb
enter
shld
inc
push
lods
mov
test
and
movsb
sbb
int3
loope
loope
sbb
lcall
fisubl
sbbl
xor
add
add
movsb
sbb
pop
or
cli
js
daa
dec
push
jb
dec
adc
adc
xor
into
and
das
js
add
dec
push
push
sbbb
sbb
mov
mov
loopne
push
cs
mov
sti
xchg
repnz
imul
adc
add
int
sbb
je
add
and
push
out
push
leave
or
and
sti
sub
mov
dec
orps
inc
xchg
or
hlt
xchg
xchg
js
xchg
nop
pop
fwait
xchg
dec
rol
pop
mov
fs
or
rcr
xchg
test
jecxz
push
add
and
mov
dec
push
jmp
or
pop
or
pop
sbb
mov
and
cvtpi2ps
push
stos
push
std
addr16
and
or
enter
outsb
test
outsb
add
ret
xchg
mov
xor
xchg
movsb
xchg
fs
mov
mov
push
jmp
int
and
incb
pop
ja
push
add
pop
and
ja
jns
in
pop
cmp
inc
pop
dec
pop
imul
cmpsb
imul
imul
movsb
sbb
mov
imul
xchg
add
loopne
jnp
add
das
push
adc
in
test
and
push
or
xor
xor
dec
ds
dec
shll
pop
dec
xor
pop
pop
pop
sbb
dec
shll
sbb
xor
xor
sbb
push
mov
dec
rcrl
xchg
xchg
and
xor
xor
popf
and
dec
mov
es
shll
lret
dec
xor
lret
sub
sub
loope
jmp
dec
xor
hlt
xor
ret
shll
add
push
xor
testb
push
aaa
sbb
and
popa
das
push
cmp
cmp
cmpsb
cmp
ss
inc
pop
inc
sbb
daa
dec
sahf
mov
je
xor
leave
xchg
sbb
sbb
cmp
rcrb
sbb
sbb
sbb
leave
xchg
daa
add
adc
shll
dec
xor
and
pop
pusha
adc
xor
adc
adc
xor
mov
dec
cwtl
sbb
dec
shll
xor
xor
pop
rcr
or
xor
and
and
lock
ss
shll
and
imul
sbb
inc
lcall
nop
cmpsb
imul
push
xor
pusha
imul
dec
roll
orb
mov
fwait
cmp
nop
fwait
xchg
sbb
add
sbb
leave
xchg
daa
lds
rcrb
fistpl
sahf
cmp
repnz
icebp
sbb
sbb
sbb
xchg
daa
dec
adc
jns
in
sbb
sbb
sbb
sbb
imul
in
push
push
jne
xorb
push
xchg
pop
repnz
rcrl
mov
xchg
daa
scas
js
sbb
lret
sbb
sub
sahf
insb
loopne
jmp
negb
ss
cmp
add
cmp
xchg
sub
xor
push
fwait
pushf
add
sbb
addr16
sbb
lcall
or
cmpsb
imul
xchg
imul
xchg
cmpsb
adc
sbb
imul
out
sbb
inc
lcall
addr16
mov
pop
push
das
pop
push
addr16
pop
es
xchg
push
das
push
cmpsl
and
dec
mov
inc
push
dec
push
push
insl
fmul
sbb
push
addr16
outsl
add
ja
das
xchg
xchg
cmpsb
imul
cmpsl
or
mov
imul
cmpsb
imul
cmpsb
imul
jno
push
mov
das
pop
pop
xor
in
mov
das
or
xor
sbb
xorl
pop
and
xor
addr16
dec
shll
xchg
ss
push
sub
repnz
pushf
sub
add
cmp
mov
das
shlb
add
push
imul
in
cmc
or
fwait
cmpsb
std
or
xor
mov
adc
bswap
and
sub
xor
xor
adc
or
xor
adc
xorl
test
dec
shll
lea
popf
push
movsl
pop
lods
shlb
and
xor
rorl
dec
shll
in
in
sub
mov
fisubl
std
push
sub
xor
or
and
and
adc
subl
or
push
subps
mov
pusha
out
add
fadds
adc
inc
and
mov
add
nop
lcall
out
mov
imul
outsl
add
dec
sbb
aas
add
fdivl
inc
add
in
call
push
mov
pop
sub
flds
shlb
sub
add
out
push
inc
push
add
mov
fisttpll
pop
inc
add
shlb
imul
cmpsb
imul
mov
icebp
pop
and
jo,pn
ja
int3
scas
mov
jne
pop
push
fidivrl
out
mov
in
das
jnp
sbb
pop
addb
mov
andl
push
pop
dec
pop
xchg
sbb
test
inc
aaa
inc
mov
pop
sahf
je
jne
jb
icebp
mov
outsb
cmp
out
xchg
inc
push
mov
test
pushf
aaa
bound
pop
cmpsl
lea
or
add
adc
aas
orb
push
cmp
xchg
xchg
or
nop
add
add
or
iret
and
nop
lcall
add
outsl
jne
pop
outsl
pop
jb
outsb
addr16
mov
mov
or
call
enter
out
call
popa
push
out
mov
les
hlt
push
xor
xchg
fs
xor
decl
movsb
mov
aad
mov
rclb
mov
sub
mov
lcall
dec
jno
repz
test
ficompl
jmp
mov
hlt
movl
call
shrb
std
in
leave
mov
add
insb
push
arpl
psubd
or
outsb
cmp
imul
addr16
add
aam
dec
std
test
movsl
cli
test
pushl
leave
mov
lods
jecxz
fdivs
jne
filds
or
shrl
jmp
cmp
ficoms
push
xlat
enter
mov
and
mov
cltd
xchg
mov
mov
pop
pop
ljmp
or
or
or
adc
ljmp
stos
sbb
data16
inc
fdivl
jno
add
aad
mov
inc
inc
pushl
lahf
xor
mov
js
stc
in
loop
ljmp
push
loope
or
insl
or
pop
arpl
hlt
push
imul
ljmp
test
insb
jnp
add
shl
cmp
call
pmaddwd
fnstenv
adc
mov
mov
bound
ficoml
inc
xchg
gs
aam
pop
popa
mov
into
pop
cmp
loop
mov
sti
fisttps
xchg
fadd
shll
jmp
outsb
xor
mov
sarb
pushl
add
in
add
pop
dec
or
cmp
add
daa
adc
or
jmp
test
or
mov
popa
into
push
stc
ficomps
leave
fldcw
and
xlat
call
cmp
mov
cmp
lods
insb
mov
in
mov
mov
add
cmp
ljmp
fildl
push
fdivl
or
test
fs
ds
or
decl
iret
push
in
decl
xchg
daa
scas
add
mov
pop
jge
xchg
shlb
add
inc
push
imul
push
test
insb
sbb
push
imul
aam
loopne
jg
jno
jp
adc
dec
frstor
fistpll
mov
mov
call
aad
mov
call
xchg
shll
push
repnz
addr16
cmpsb
fldl
mov
aas
dec
ss
fisubrl
or
scas
testb
pusha
jp
inc
ret
out
pusha
fists
addr16
mov
pushl
jns
imul
andl
shrb
ss
push
xchg
ja
int3
add
mov
jmp
das
es
lds
or
sub
mov
cmpsl
call
ret
shlb
ljmp
ret
es
pushf
mov
insl
add
ss
jmp
addr16
pushl
push
add
adc
mov
jnp
sbb
xchg
or
out
fdivr
jl
or
rcl
xchg
aam
clc
mov
push
int
mov
mul
ja
push
push
ds
outsl
ja
mov
out
sti
jo
std
jmp
pop
or
adc
sahf
gs
clc
sar
imul
push
js
jmp
or
push
addl
mov
cmp
cmpsl
notl
pusha
rorb
imul
sbb
shrl
or
inc
jg
adc
test
jg
mov
jmp
repnz
decl
xchg
mov
cmpsb
mov
sarb
sub
push
mov
jp
mov
mov
sbb
xchg
sub
aaa
mov
or
sbb
add
sub
add
mov
jg
push
and
or
adc
add
cmp
movsb
shlb
lahf
sub
insb
dec
in
out
sub
adc
cmp
push
mov
mov
lods
rcr
jl
mov
test
pop
or
pushl
sbb
jns
cmpsb
or
shrl
std
das
mov
sbb
in
scas
loope
xchg
jmp
jl
cltd
jg
icebp
inc
cltd
mov
daa
or
mov
outsl
or
cld
mov
decl
jno
pop
movsb
jle
xchg
hlt
je
or
pop
int
jno
dec
adc
jnp
lock
lcall
ret
xor
mov
pusha
sub
jns
lret
fstpt
cmovne
mov
sahf
insb
mov
mov
ja
xlat
daa
dec
xor
pusha
lcall
repz
push
stos
bound
call
push
mov
stos
sub
int3
mov
movsl
call
push
mov
adc
mov
mov
test
incl
xchg
xchg
pop
iret
and
out
jg
cmp
jp
xchg
scas
mov
mov
les
fsubs
test
jl
xor
out
pushl
and
fmull
mov
lds
inc
hlt
addl
incl
test
fwait
pop
sahf
inc
push
jmp
addr16
stos
sar
incl
xchg
test
push
fsubrs
cmpsl
setbe
or
outsb
incl
clc
clc
in
jp
push
or
gs
mov
cmp
pop
lret
push
inc
sbbb
out
mov
test
pop
mov
jg
ljmp
jae
roll
push
push
bound
mov
sbb
add
aaa
dec
adc
rcl
ljmp
leave
jb
pop
jnp
cltd
sbb
aam
idiv
fsubrp
negb
push
jecxz
dec
jns
mov
push
rolb
test
inc
ret
pop
arpl
incl
scas
outsl
sti
push
mov
adc
push
cmp
push
cld
insl
sub
xor
inc
inc
adcl
dec
xor
pop
sub
add
ljmp
sbb
lret
rorb
enter
or
sarl
or
pusha
sbb
add
ljmp
and
pop
sti
clc
jmp
xor
fists
jne
adc
push
push
das
stos
push
add
pop
xchg
std
dec
jnp
push
sbb
ds
mov
dec
cs
xchg
fldt
fcomip
test
aad
jle
xor
jae
dec
mov
pop
lret
mov
mov
cmp
and
insb
mov
dec
pop
rcl
sub
gs
clc
ljmp
sti
dec
fucom
xor
movsb
inc
adc
call
lret
jmp
out
add
sahf
jle
mov
icebp
sub
fistl
jno
lods
ljmp
decl
scas
das
pop
cmp
mov
jne
sti
loop
sub
repnz
or
add
ljmp
push
lods
shrl
pop
push
mov
pushl
mov
int3
mov
mov
rep
sbb
dec
test
mov
adc
cmpl
les
lods
shlb
pop
push
add
jae
xchg
ja
sbb
and
decl
ja
inc
push
iret
xor
int
mov
sbb
dec
jle
scas
sub
jg
shlb
loopne
push
fwait
ss
lcall
std
mov
arpl
cmpsb
fistps
inc
sarl
pop
fldenv
mov
pushl
subl
enter
jae
lret
mov
test
push
sbb
aas
aaa
aas
push
in
fwait
mov
add
mov
mov
push
imul
aas
clc
repnz
arpl
cs
test
pop
sub
dec
push
lahf
test
pop
test
jo
dec
inc
sub
fildl
inc
mov
outsb
lods
jge
cmpsl
dec
xchg
pushf
data16
jno
std
jg
stos
in
call
lcall
mov
movsl
add
sbb
dec
pop
inc
adc
ds
inc
lcall
in
cwtl
push
aas
gs
inc
pop
or
cltd
pop
pushf
shlb
out
cmp
lock
fisttpll
jo
jmp
push
add
imul
out
mov
cld
lcall
xchg
cmp
jo
imul
jae
pushf
mov
pop
push
stos
sbb
pop
lahf
ljmp
in
inc
jge
mov
fidivrl
mov
or
add
call
pop
pushl
or
mov
mov
pop
jp
and
stc
adc
ljmp
test
xchg
add
and
fcmovb
aaa
xor
mov
cmpsl
lcall
incl
rorb
ds
enter
jne
cltd
int
loop
push
ljmp
mov
sbb
mov
push
mov
inc
outsl
mov
xor
jl
and
mov
push
scas
mov
lcall
ja
ficoms
or
mov
aas
iret
fcompl
jb
push
and
imul
decl
incb
inc
adc
fimull
je
lcall
cmp
jp
cli
sbb
test
inc
or
ret
les
sbb
or
adc
fstl
mov
mov
jmp
add
xchg
push
fucom
cmp
sahf
clc
fbstp
dec
xor
ja
sbbl
lahf
jmp
cmp
movsl
and
in
out
repnz
sti
icebp
xchg
sub
mov
jo
cmp
inc
jecxz
mov
jmp
xchg
out
cli
push
cmp
sub
clc
nop
cltd
xlat
andb
dec
cs
adc
ljmp
push
cmp
movsl
hlt
sub
div
cmp
cmp
pusha
jns
sbb
cmpsl
and
adc
xlat
test
push
outsb
lods
jmp
pop
ret
ljmp
jmp
sub
mov
out
fnsave
push
pop
insb
mov
add
ljmp
movsl
into
out
cmp
sub
and
jne
fucomp
adc
int3
adc
xor
iret
arpl
stos
nop
pop
jae
cmp
lcall
lret
mov
sub
pusha
stos
pop
stos
pushf
outsb
test
mov
push
mov
mov
jmp
mov
xor
inc
mov
sub
mov
push
fwait
cltd
mov
push
xchg
test
cmp
clc
ja
jecxz
pop
xchg
in
adc
mov
mov
ficoms
movsl
test
push
arpl
sbb
ret
sbbl
or
push
in
out
bnd
ljmp
jae
jl
fsts
pop
jecxz
fs
call
adc
and
stos
stos
mov
rorb
cli
inc
hlt
inc
mov
mov
dec
gs
jns
fadd
dec
test
push
bound
iret
inc
jmp
lea
orl
ret
and
jg
je
imul
mov
push
add
std
decl
lods
je
bound
push
andb
lea
cmc
push
or
hlt
lods
sbb
xchg
lock
pushl
inc
jle
icebp
in
pop
fstpt
and
fidivrs
out
lret
cmpsl
repnz
xor
test
jmp
push
fsubr
call
stos
cmpsl
imul
fmul
or
lcall
add
sahf
push
push
rcr
jae
int
push
adc
pop
addr16
inc
jcxz
xor
clc
jno,pt
sub
out
ds
sub
pop
incl
jmp
sbb
dec
divb
imul
ljmp
mov
jno
or
push
and
mov
mov
scas
popa
add
idivb
push
inc
inc
and
je
sar
decl
adc
mov
dec
scas
xchg
mov
rcr
hlt
xor
or
test
jg
test
lds
jmp
inc
cmp
push
out
cmp
ficompl
js
sub
sub
fiaddl
mov
sub
dec
imul
out
lea
dec
mov
mov
jl
into
ljmp
cltd
mov
imul
and
xlat
cmp
mov
cmp
cli
leave
lcall
xor
es
jecxz
je
outsb
cmp
inc
pop
out
push
dec
cmc
or
lcall
mov
fsubrs
dec
mov
call
lea
decb
xchg
sarb
adc
incl
dec
sub
sbb
hlt
pop
jl
sub
mov
daa
add
adc
add
and
in
adc
dec
faddl
out
leave
stc
pop
nopl
movsb
jns
inc
pop
outsb
out
jg
push
pop
xor
rcrb
fs
jnp
pusha
pushf
sub
lcall
insb
arpl
ret
push
sahf
xor
add
dec
scas
adc
xchg
and
xchg
xor
and
ljmp
sti
mov
mov
cltd
or
jb
sub
mov
sar
xchg
mov
call
lock
int3
out
mov
jge
daa
std
popf
ret
push
lea
repz
arpl
je
cs
lcall
aaa
std
clc
hlt
pusha
fcoml
test
fucomp
mov
imul
push
jnp
aaa
lcall
cld
sub
insl
cmp
gs
rcr
or
add
xchg
mov
in
punpckhwd
sti
lahf
jnp
pushf
jge
into
or
xchg
mov
mov
adc
mov
cmp
incl
jmp
adc
xchg
loop
subb
inc
push
dec
dec
jne
sbb
js,pn
inc
adc
push
xchg
mov
mov
sti
dec
sbb
imul
in
lret
cli
fdivrs
loope
pop
push
inc
inc
xchg
adc
outsb
in
or
sub
jmp
xchg
mov
mov
fs
cmpb
jnp
pusha
dec
pusha
add
cmp
call
mov
cmp
add
inc
ja
cld
xlat
xor
xorl
lock
mov
pop
add
push
mov
ja
scas
call
push
popa
cs
mov
mov
out
je
ret
xchg
stc
data16
call
mov
mov
frndint
inc
popa
es
test
sbb
test
xchg
pop
xchg
mov
incl
push
mov
xchg
push
aad
dec
fiadds
leave
loope
or
dec
bound
jne
sbb
pushl
mov
inc
xor
add
pop
call
and
outsb
sbb
or
movsb
movsl
or
xacquire
mov
fdivr
push
cmp
into
loop
push
jg
dec
add
push
cli
addl
les
out
daa
mov
lcall
push
dec
pusha
ret
mov
test
sub
lock
cmc
shrb
fdivl
xlat
sahf
out
pop
std
call
arpl
cmp
xchg
ffree
push
xor
ret
cmc
mov
mov
add
pop
into
or
add
dec
cmp
jl
call
xchg
pop
rcrl
mov
push
in
mov
cld
or
jl
fadd
ud0
sar
dec
pop
out
push
push
clc
out
mov
test
out
aad
les
jmp
push
into
mov
fnsave
lcall
cli
push
loopnew
pusha
inc
aaa
into
cmp
iret
cmc
cli
shll
ja
stos
sbb
mov
inc
aaa
mov
sarl
mov
aad
jae
paddd
movswl
sub
imul
mov
cmp
mov
outsb
ss
ljmp
xchg
mov
enter
out
clc
rcpps
lea
or
dec
rorb
aas
cld
mov
mov
lods
add
pop
xchg
aad
mov
loop
out
arpl
cld
jmp
out
xchg
imulb
and
stos
add
movsl
movsb
shl
pushf
mov
mov
push
adc
fs
loope
cli
cmpsl
xchg
out
shr
das
push
imull
add
pop
or
ja
test
in
add
or
pop
std
nop
jmp
fnstenv
sub
cmp
xchg
jge
jge
ds
shrl
sub
lahf
pop
fwait
mov
pop
dec
push
mov
lods
sub
out
sbb
std
lods
mov
fwait
cli
xchg
in
shr
int3
push
cmp
sub
clc
sub
aas
cld
adc
add
pusha
jne
inc
push
xchg
testl
hlt
mov
and
lock
nop
cmp
sbb
xchg
sub
cmp
cmc
and
push
sti
stos
cmc
sbb
fdivrl
xor
jg
mov
xor
add
ja
sub
ret
int3
stos
pop
xchg
lods
int3
push
pop
call
mov
aaa
xchg
stc
and
into
jnp
sti
fs
and
mov
pushl
jecxz
test
cmp
fimuls
out
adc
scas
mov
std
sub
pop
jg
decl
or
mov
rolb
fisubrs
enter
mov
dec
add
lcall
jg
ror
mov
push
cmp
ds
mov
test
ljmp
adc
inc
outsl
cmp
arpl
fwait
rcrb
inc
push
sbb
scas
jo
dec
testb
pop
out
push
jb
pop
jge
scas
or
lcall
loopne
inc
inc
int3
loop
dec
push
shlb
arpl
sub
loope
cmp
mov
into
cmpb
outsl
subb
add
daa
jb
mov
adc
out
jns
call
cmp
cmp
push
mov
xor
leave
mov
sbb
idiv
fists
hlt
rol
mov
call
sbb
mov
fcmovbe
cmp
or
sub
cmp
addr16
jl
stc
lea
mov
mov
sahf
idivl
cli
pop
call
aad
inc
fldenv
sub
xchg
xchg
cld
out
jno
call
cld
xchg
adc
cli
jmp
mov
pop
fs
shrl
shll
push
jecxz
push
rclb
inc
movsb
add
push
icebp
loopne
fistpl
dec
fs
pushl
xor
shl
sub
rcrl
bnd
inc
je
mov
jno
aas
cld
mov
ret
lea
cltd
fwait
aaa
or
sbb
fimull
fcomp
push
iret
jns
into
outsl
jle
int
mov
push
add
rorb
notb
and
and
pushl
cmpsb
xor
int3
push
bound
jne
xchg
ss
outsb
int3
jae
mov
decl
sbbl
push
jno
mov
xor
shl
inc
lcall
leave
add
call
not
mov
jno
add
push
lret
mov
pushf
jbe
push
sarb
push
jmp
push
pusha
mov
inc
and
jbe
inc
test
call
ja
das
and
lret
test
call
jp
stos
stc
dec
pop
ret
mov
sti
add
push
add
loope
imul
pop
cmpsb
sub
out
ret
dec
mov
loop
fcmovnb
pushl
jecxz
push
out
ret
cmp
in
cmpsb
xor
test
aad
sub
push
or
fidivs
lret
clc
cmpsl
call
test
mov
out
xor
out
push
adc
pop
mov
daa
adc
ret
shlb
lcall
adc
insl
pop
sarl
push
pop
das
jo
xorl
push
or
ss
pop
add
addb
or
insb
push
aas
pop
sbb
push
cmp
push
imul
inc
sub
push
mov
xor
push
sbb
unpcklps
push
sbb
jecxz
sub
fs
xor
or
inc
and
add
nop
inc
push
test
xchg
aas
pop
aas
sbb
push
imul
cmp
aas
pop
incl
sbb
mov
or
dec
clc
sbb
add
fs
inc
push
mov
push
sbb
les
inc
push
sbb
movsb
push
sbb
addb
fs
inc
pop
pop
sbb
push
xchg
inc
jp
inc
push
sbb
aam
inc
push
sbb
mov
sbb
mov
sbb
add
nop
cmpsb
rolb
jbe
nop
inc
push
ss
seto
sbb
lods
inc
push
sbb
inc
push
sbb
or
sbb
pushf
arpl
nop
inc
push
fcompl
aas
popa
orl
cs
mov
aas
mov
and
push
call
adc
and
cmp
xor
and
ret
and
andl
loop
and
enter
and
enter
orl
sub
enter
push
inc
push
frstor
adc
dec
push
sbb
jne
lret
sbb
stos
push
sbb
test
push
sbb
sbb
dec
jge
fiaddl
sbb
sub
inc
or
dec
push
cli
push
adc
fs
push
ret
jae
sbb
arpl
fs
inc
push
cmpsb
add
inc
out
fs
push
sbb
xchg
jnp
dec
push
sbb
imul
or
sbb
mulb
fs
pop
ja
dec
push
sbb
into
addr16
inc
push
sbb
scas
pop
dec
push
sbb
out
dec
push
sbb
sahf
dec
push
sbb
fidivs
aas
das
mov
push
aas
aas
dec
pop
and
push
inc
mov
loope
xchg
pop
and
shll
icebp
leave
pop
and
leave
test
jb
fnstcw
stc
lds
xchg
pop
movsl
in
and
leave
xchg
aad
jb
jb
cmc
int
pop
leave
inc
lods
in
inc
jb
pop
popf
fstl
and
ret
jb
pop
and
jecxz
pop
leave
inc
xchg
rcll
xchg
pop
mov
pop
leave
inc
jb
stos
jmp
xchg
pop
and
sti
xchg
pop
and
cmpsl
pop
leave
inc
jb
xchg
xlat
jb
pop
and
test
scas
xchg
pop
and
out
lahf
pop
leave
inc
jb
mov
jp
add
push
adc
in
pop
adc
pop
in
imul
data16
add
pop
add
jns
data16
push
or
jb
lcall
add
movsb
or
sbb
inc
dec
push
cmp
push
popa
in
nop
xchg
pusha
add
xor
cmp
xor
or
dec
shll
aas
jg
shll
call
call
das
pop
mov
xorb
sbb
scas
add
sbb
das
inc
lahf
inc
xor
dec
dec
pop
mov
xchg
add
pop
jae
dec
inc
add
inc
ret
xchg
inc
sub
icebp
enter
addr16
aam
xor
rcl
int3
enter
shll
mov
imul
imul
imul
mov
and
sbb
or
lcall
in
aam
les
add
dec
sbb
and
pusha
subl
lods
lea
pop
aas
js
stos
lods
add
sbb
cmp
jge
add
dec
movsb
add
jns
and
fisttps
mov
cld
inc
jle
in
adc
ss
shll
decb
or
enter
inc
adc
mov
sbb
in
call
stos
in
jle
adc
push
ficompl
mov
xor
sti
sub
fcomp
loopne
jae
jle
add
xor
out
push
inc
push
add
push
pusha
dec
xor
lds
pop
jne
inc
pop
inc
mov
push
adc
mov
add
inc
pop
add
dec
cmp
lmsw
push
add
add
es
mov
test
sbb
or
mov
push
imul
mov
jbe
imul
xor
es
push
inc
xchg
pop
inc
sbb
insb
nop
inc
push
addr16
das
push
punpcklwd
xchg
insb
das
sub
daa
mov
and
or
pop
andb
and
xchg
cmpb
test
xor
or
sub
or
aas
addl
sbb
testl
scas
in
inc
insb
lcall
adc
mov
adc
adc
dec
je
cmp
adc
lcall
movsb
sbb
cmpsb
popf
imul
jns
ss
lcall
jbe
in
popf
andl
sbb
enter
or
orb
nop
orb
xchg
xchg
shlb
xchg
iret
js
sbb
cmp
or
call
lock
pop
cld
push
push
push
mov
insb
cmp
orl
mov
nop
cmpsb
loopne
push
out
cmp
push
mov
shll
repz
xor
mov
cmp
mov
sahf
shll
dec
das
push
dec
insb
add
jbe
aas
sub
mov
ja
jg
and
mov
adc
xor
roll
incl
subl
or
leave
dec
dec
sti
mov
add
xchg
cmp
pushf
or
ret
mov
adc
aas
in
adcb
sbb
stc
mov
mov
ret
inc
and
sahf
mov
sub
inc
sar
lcall
and
sbb
addl
xlat
xchg
inc
push
add
inc
stc
mov
adc
incl
aad
iret
decl
js
inc
outsl
loopne
jmp
xchg
test
mov
call
cmp
inc
mov
popf
sti
jmp
stos
push
inc
mov
repnz
test
incl
pop
stos
clc
scas
adc
lds
jmp
aam
imul
jmp
dec
jp
iret
inc
gs
xchg
push
cmpsb
scas
mov
or
addl
jmp
cmpsl
xchg
cmp
xor
dec
cmpsl
in
cmp
sahf
xchg
pop
lcall
lock
sub
aaa
popa
sar
mov
fsubs
stos
xchg
clc
repz
mov
subb
mov
xchg
and
and
add
jg
sti
aas
jno
or
mov
pop
fs
dec
lea
aas
ret
shrl
lcall
mov
icebp
aas
rorb
and
cmpsl
out
aas
inc
cmpsb
mov
insb
scas
add
aas
xor
mov
xchg
mov
std
std
into
popa
test
ja
stos
in
das
dec
pop
loope
les
dec
aas
xchg
les
jne
int
mov
addr16
push
mov
xchg
aas
and
loop
mov
cmp
popa
mov
popa
push
pop
sarl
jl
mov
das
lea
mov
inc
inc
aas
movsl
jmp
jg
sub
jge
mov
inc
rcr
push
arpl
int3
and
call
cmp
jp
and
cmp
mov
cmp
std
xlat
cmp
mov
lcall
mov
jecxz
cmpsb
add
movb
aaa
fldt
cmp
jno
shlb
out
dec
nop
pop
cmp
jmp
fisubl
xor
push
lahf
inc
pop
mov
sub
dec
in
ss
push
ljmp
pop
add
rcr
jge
call
mov
xchg
cmp
push
andl
dec
dec
bound
jg
std
orl
pop
ficomps
frstor
or
xchg
adc
xchg
or
fcmovbe
add
or
inc
adc
int
add
or
into
mov
pop
dec
aad
xor
or
inc
and
mov
es
aaa
mov
mov
add
cmp
dec
pop
aaa
test
or
mov
xchg
lret
add
dec
or
aam
sbb
push
pop
fwait
dec
mov
imul
mov
dec
sub
dec
addr16
outsl
outsb
cmpsl
das
imul
outsb
mov
mov
mov
xchg
jbe
aas
outsb
and
dec
jne
sbb
jg
push
inc
inc
sub
and
lea
xor
add
enter
stos
sub
addb
add
out
ficompl
addb
or
add
outsl
and
add
and
addb
xor
repnz
add
and
mov
push
jb
or
mov
cmp
in
xor
push
mov
mov
xor
fiadds
das
sub
add
cmc
add
add
push
sti
add
std
lcall
adc
add
add
and
jmp
loopne
aas
dec
pop
cli
add
in
ror
xlat
add
pop
sub
sub
hlt
das
sbb
sahf
sbb
sub
add
or
add
pop
add
lret
out
jg
fcomip
add
push
jg
fcoml
jmp
fiaddl
test
mov
test
mov
mov
add
dec
int3
aad
ds
add
daa
xchg
adc
incl
mov
and
add
add
pop
pop
add
or
add
arpl
fmul
lret
std
out
shrl
in
add
loop
ds
mov
cmp
fdivrs
pop
fcmovu
add
or
sub
sbb
sbb
scas
cmp
pop
push
push
aas
in
aam
rorl
dec
hlt
scas
pop
add
fcoml
int
mov
scas
pop
push
pop
fdiv
jnp
cmp
loopne
iret
cltd
add
incl
add
sbb
cmc
mov
cwtl
addr16
jle
aas
js
push
pop
arpl
fs
jae
out
test
notl
jg
add
fdivrl
jg
incl
cltd
xchg
add
sarb
jno
add
sarl
daa
data16
add
in
in
xchg
inc
or
shlb
dec
mov
xchg
jp
hlt
fsubl
dec
sub
jle
repnz
mov
push
cmp
clc
int3
lods
aam
pop
inc
ja
pushf
insl
mov
aam
add
adc
pop
fildll
cmp
aam
hlt
in
add
and
fdivl
outsl
xchg
jno
lods
ss
mov
clc
pop
push
shlb
pop
push
addr16
or
popl
psubusw
pop
loope
shr
dec
mov
mov
fmul
xchg
or
fildl
in
loop
test
push
hlt
inc
cld
pop
add
push
push
pop
scas
xor
sub
nop
xchg
mov
lds
shrb
jnp
mov
sbb
in
mov
pop
fidivrl
ss
les
pop
push
sbb
push
cmpsb
jle
sub
aaa
sar
fistps
push
filds
cmpsb
mov
dec
jae
das
mov
sub
dec
aaa
les
mov
add
jecxz
jle,pt
dec
movsl
jnp
xlat
addr16
lret
mov
push
pop
pop
sbb
das
xlat
sbb
shll
out
sarl
add
push
xor
fisttps
loopne
out
int3
hlt
push
idivl
loopne
xchg
mov
daa
mov
outsb
mov
lock
add
mov
xchg
pop
leave
inc
mov
not
idiv
inc
in
push
dec
jle
cmp
popa
inc
repnz
add
mov
int3
add
loope
jle
mov
xor
lea
in
insw
jno
xchg
scas
jle
jp
pop
jne
addr16
mov
mov
push
push
cld
ljmp
xor
loopne
pop
fs
inc
pop
mov
inc
dec
pop
cld
mov
outsb
test
xchg
xchg
fwait
sbb
mov
lahf
sbb
dec
add
lea
pop
scas
or
pop
inc
test
or
rcr
push
cld
es
mov
add
aam
int3
add
in
add
add
sbb
add
sbb
out
mov
or
add
adc
or
inc
enter
loop
in
adc
cld
out
jmp
xchg
adc
xchg
jg
idiv
fdivrp
or
loopne
sub
or
or
cli
cld
in
fsincos
std
push
in
in
push
push
mov
aad
or
dec
out
adc
sub
lahf
add
enter
cli
xchg
sti
dec
push
enter
jae
cmp
mov
movlps
push
bound
stc
cmc
adc
adc
out
insl
mov
jbe
or
mov
lea
sbb
icebp
and
adc
cli
out
or
or
or
sahf
syscall
inc
xchg
in
adc
adc
cmpsb
or
or
mov
or
adc
aad
or
adc
out
sbb
xor
cli
adc
enter
cld
in
or
out
or
cmc
or
lea
out
iret
pop
shr
add
sbb
mov
movsb
scas
stos
out
or
or
cli
cli
inc
pop
mov
in
push
sub
adc
cmp
mov
or
out
mov
jno
inc
cli
adc
mov
adc
add
push
or
mov
jo
xor
cmc
adc
popa
aaa
leave
cmpsl
mov
adc
adc
notb
addl
mov
and
adc
add
mov
or
out
clc
outsl
punpckldq
lahf
mov
adc
jmp
nop
add
test
pop
push
pop
out
out
dec
mov
adc
adc
sahf
out
outsl
push
or
out
adc
stos
pop
add
mov
sub
out
pop
push
loope
dec
mulb
push
bound
pop
pop
cli
rclb
mov
adc
lea
adc
out
adc
imul
insb
xchg
push
inc
fisttps
in
push
shll
aam
add
push
repnz
sub
pop
add
adc
in
loope
stos
add
insb
filds
or
add
icebp
cli
pusha
mov
mov
out
or
cmp
orb
adc
add
adc
or
std
test
or
push
fwait
pusha
adcb
cmc
out
pop
and
mov
popa
js
rcr
push
pop
adc
or
xchg
add
push
adc
push
sbb
fistpll
dec
add
in
rolb
push
inc
fmuls
push
cmc
out
sub
testl
aas
sub
leave
xor
add
inc
add
incl
int3
sbb
sbb
sub
out
jmp
inc
vandnps
add
add
ret
mov
pusha
decl
lret
mov
mov
lods
pop
sub
ljmp
scas
add
ret
xchg
and
or
stos
push
lcall
mov
mov
cmp
js
sti
aad
shrl
mov
add
mov
add
sti
clc
xchg
sub
jo
lret
decl
xchg
push
repz
in
adc
cmpsl
adc
add
movsb
inc
cld
cli
cmc
adc
pop
dec
sti
stc
cmc
stc
icebp
pushl
fnstenv
mov
add
repnz
lock
pop
jecxz
or
lods
or
xchg
push
incb
xchg
mov
add
push
rcrb
call
vcmpsd
cmp
jno,pt
add
add
or
out
jmp
in
out
incl
test
in
mov
cltd
add
and
xchg
cld
call
fcomp
lret
add
mov
mov
add
ljmp
rolb
add
add
pop
mov
fadds
sti
int3
push
or
movb
add
xchg
add
mov
aad
sub
lret
add
test
push
sub
icebp
out
out
sti
sti
jecxz
paddd
jl
inc
push
xor
lret
add
loop
rolb
push
popl
inc
cltd
sub
add
js
sti
sti
roll
std
sarl
jno
mov
lods
add
in
clc
notl
test
in
out
cmc
sti
cld
sti
push
add
shrb
sub
xor
mov
je
and
mov
out
add
add
hlt
sar
lahf
jge
mov
ror
add
add
mov
add
add
into
adc
ret
clc
jg
aam
js
xor
add
add
lods
lds
dec
call
dec
pop
or
cltd
in
insb
lret
movsb
lahf
jle
push
push
add
jg
mov
roll
sti
add
adc
test
add
dec
jle
into
adc
fcomp
lods
mov
decl
push
sub
daa
and
filds
adc
inc
push
add
std
aaa
js
ret
ret
push
movsb
dec
push
cld
inc
popf
sarl
stc
loopne
add
mov
fldenv
mov
out
mov
jns
fildll
cld
adc
std
and
cli
inc
movsb
cmc
mov
xor
jnp
jge
and
push
xor
add
add
mov
lret
sar
push
sbb
inc
cli
lds
out
mov
xchg
cld
pushl
mov
inc
clc
clc
stc
cld
clc
lret
mul
fdiv
in
jecxz
jle
out
js
outsb
xor
xchg
pop
popf
add
rorb
adc
cmp
sub
jmp
roll
iret
add
mov
icebp
mov
inc
pop
fcmovne
leave
mov
std
in
sti
aas
xlat
aam
or
mov
in
mov
lods
mov
jb
loopne
pop
ljmp
into
hlt
clc
int
mov
paddd
loope
push
add
in
aad
daa
mov
jnp
add
jns
or
mov
rcrl
repnz
pushf
jg,pn
call
mov
ljmp
pop
inc
mov
enter
and
icebp
lock
lea
xchg
insb
add
adc
add
or
fbstp
ret
mov
ret
add
sub
mov
stc
out
mov
in
jmp
xor
fidivl
hlt
imul
rcr
inc
sti
jmp
lahf
call
stos
add
or
cmc
push
ljmp
xor
clc
ret
imul
xlat
dec
mov
loopne
jg
add
loop
test
das
mov
inc
aam
mov
imul
notb
fdivs
ret
movsl
loopne
xchg
int
out
add
repnz
stc
flds
xchg
add
lods
add
mov
rolb
clc
lcall
cmp
in
mov
xchg
jle
hlt
mul
out
xchg
je
fs
sar
jae
add
ds
push
jmp
fcomi
jecxz
shrl
mov
mov
out
xchg
xchg
sub
loope
ret
add
mov
jmp
roll
lret
add
clc
pop
push
add
mov
xchg
add
cmp
fstps
std
jp
rol
aad
and
xchg
pop
xor
daa
filds
mov
lret
adc
mov
mov
adc
mov
add
repnz
iret
push
sti
addr16
lcall
jmp
mov
fistpll
scas
sahf
jns
repnz
sub
jmp
in
xchg
cmp
inc
into
test
mov
std
mov
mov
add
add
int3
add
je
shlb
les
add
pop
loope
mov
inc
aas
cld
out
ljmp
pusha
andb
and
lods
inc
inc
cmp
mov
rcrl
cmp
cmpsl
test
mov
in
pop
stc
mov
test
call
int
xchg
data16
aad
clc
dec
imull
or
mov
mov
pop
cmpsl
fadds
bnd
or
pop
cmpsb
les
mov
add
sarb
loopne
mov
cmpl
filds
mov
fdivr
loop
nop
sbb
stos
add
test
rolb
add
sahf
jp
loopne
lods
jl
add
cmp
iret
out
loopne
in
inc
pop
repz
por
dec
rol
fidivl
mov
jo
loopne
icebp
cmp
js
lock
or
add
dec
lock
stc
lahf
dec
add
lock
in
stc
jg
add
jmp
out
out
in
loop
and
sbb
cltd
notl
mov
jg
pop
cmpsl
clc
jb
add
ret
add
xchg
leave
pop
and
jns
loop
repnz
pusha
jae
call
jecxz
les
fimuls
leave
add
dec
aad
into
into
lock
ffreep
js
out
mov
cmpsb
jp
std
xchg
jg
mov
clc
icebp
std
jmp
sti
hlt
pop
ret
fcmovnbe
lods
cmp
cmc
cli
enter
testl
fisubrl
push
roll
lods
add
add
fnstsw
lcall
out
loopne
out
ficomps
cltd
add
mov
enter
or
int
enter
fsubrs
push
add
mov
les
mov
stos
lods
pop
add
shrb
cmpsl
mov
and
sbb
repnz
pusha
shll
mov
sub
add
add
rcl
jg
fsubrl
xchg
stos
addb
mov
sti
jp
mov
addl
addb
add
in
sarl
pop
pusha
push
sub
shll
incb
aas
pop
std
cld
add
fdivs
int3
clc
clc
add
clc
jo
add
pusha
loopne
pop
inc
sahf
rolb
cs
mov
mov
inc
pop
cld
add
mov
lds
mov
pop
pop
popf
add
jbe
addb
outsb
or
cmpsl
mov
and
popa
add
ret
jae
gs
imul
add
jnp
sbb
mov
inc
jbe
ljmp
xchg
xchg
fbld
pop
outsl
add
add
rcrb
arpl
cmp
and
clc
adc
xor
push
adc
mulb
jg
arpl
adc
cmove
popa
mov
lret
addr16
nop
add
add
mov
insb
push
inc
or
orl
dec
mov
lock
rcr
bound
push
mov
loope
out
add
add
sub
push
dec
add
mov
add
adc
iret
add
adc
mov
adcb
add
movsb
add
sbb
sub
add
add
add
in
add
insl
push
arpl
jo
orb
pop
jb,pn
xor
inc
xchg
xchg
sub
stc
adc
out
mov
cmp
out
fiaddl
aas
and
insl
loop
jg
and
add
push
leave
add
add
push
inc
mov
cwtl
call
dec
repnz
push
inc
rorb
jns
bound
lods
add
and
imul
sbb
or
push
jbe
dec
aaa
fdivs
arpl
arpl
imul
divb
adc
pop
push
bndldx
sub
sahf
lcall
and
aaa
push
outsb
cs
add
mov
pop
pop
push
cwtl
pop
or
cs
sub
add
mov
push
push
in
push
subl
pop
ja
orb
addr16
fimuls
xchg
add
fs
imul
jle
lods
mov
push
push
pop
ss
jns
outsb
ja
push
popa
out
jb
gs
adc
arpl
fnclex
inc
xor
push
dec
jp
adcb
jo
insb
and
in
sub
insb
outsl
out
sub
add
outsl
push
push
out
xor
es
inc
aaa
and
sahf
arpl
add
inc
and
inc
popa
mov
and
push
andl
xchg
jg
ja
pop
gs
jae
arpl
push
data16
sahf
test
fldt
addr16
and
mov
or
popa
mov
or
out
cmp
stos
sub
mov
lcall
movsb
pusha
inc
outsb
je
add
imul
and
cmp
lret
or
jo
adc
pop
fisttpl
fiaddl
scas
xchg
inc
rcrl
jecxz
cmp
mov
inc
sbb
arpl
sub
fistl
lock
inc
lret
imul
mov
orb
jb
push
je
addr16
inc
xor
push
mov
mov
and
scas
xchg
and
cltd
outsl
push
or
lahf
es
push
fsts
ja
xor
popl
push
fsubs
push
mov
xor
movsb
and
pop
or
pop
jmp
movsl
popa
ss
jb
cs
fcoml
out
ljmp
dec
adc
push
sbb
shll
cmpsb
jbe
dec
mov
mov
add
mov
pop
mov
push
scas
daa
pop
inc
pop
sub
cs
rol
xchg
xorb
das
cmp
jo
xchg
je
jae
add
pop
add
insl
mov
imul
push
xorl
mov
jno
imul
sbb
ret
jbe
lods
arpl
pop
mov
bound
mov
pop
xlat
ret
dec
stc
jbe
dec
scas
mov
cmp
das
fwait
jno
mov
mov
jp
push
push
data16
add
pop
jo
sbb
movsb
imul
imul
push
pop
pop
jb
das
mov
pop
add
stos
or
sti
mov
fistl
and
add
cmp
mov
in
or
aad
sub
push
pop
imul
xor
adc
or
sub
push
loop
cmp
es
les
jns
fs
ret
and
pop
ret
cltd
popa
sub
inc
mov
pop
scas
dec
fidivs
pushl
stos
rclb
imul
in
or
add
add
bound
push
insb
or
mov
andb
xchg
adc
xor
inc
mov
adc
mov
xchg
adc
mov
lret
and
ja
and
add
mov
popa
add
cmpl
jecxz
add
push
insl
mov
mov
push
jne
cs
aas
sub
cli
mov
xchg
repz
dec
out
jg
loop
insl
jg
sarl
add
mov
and
imul
push
dec
inc
pop
aaa
inc
lcall
insb
mov
mov
inc
add
es
fisubrs
dec
jg
addr16
aad
lcall
add
mov
cmp
dec
ja
or
int3
add
pop
fs
sub
mov
dec
shlb
pop
daa
arpl
mov
fimull
loop
adc
push
fdivs
inc
out
cmp
mov
inc
out
pop
pop
insl
pop
rol
arpl
push
inc
xor
xor
inc
mov
push
xor
adc
cmpsb
pop
dec
arpl
insb
jecxz
pop
mov
pop
and
adc
dec
add
add
lret
test
mov
add
dec
incl
mov
inc
sbb
or
dec
push
dec
inc
adc
outsl
jnp
das
cmp
inc
push
dec
push
push
and
addb
in
popa
jbe
cmp
and
jnp
adc
imul
push
outsl
sarl
aaa
lret
outsl
stos
outsb
gs
inc
mov
and
jb
jns
ds
dec
dec
imul
push
ljmp
and
push
push
or
dec
add
cli
inc
add
jne
inc
insl
das
js
jmp
jnp
outsb
outsl
cs
imul
lods
push
jge
pop
jle
bound
pop
push
jb
and
push
push
lock
imul
arpl
imul
imul
push
dec
pop
imul
scas
lds
add
insb
sub
mov
arpl
inc
inc
imul
jge
sub
das
sub
mov
push
dec
fistl
jae
bound
add
add
imul
imull
xor
cmp
and
nop
sub
push
push
xor
popf
mov
dec
int
les
fstl
cmpsl
sbb
pop
nop
in
insb
jno
add
push
out
push
inc
aas
adc
aaa
andl
pop
fs
test
adc
or
fs
mov
dec
xor
int3
xor
mov
push
mov
inc
jo
les
xor
xchg
xor
xor
int
lds
sti
es
scas
sub
xlat
xchg
cmc
lods
das
cli
fucomip
imul
inc
pop
and
notl
fiaddl
inc
or
xor
aam
ds
addr16
mov
pop
out
dec
mov
lock
cmp
sbb
xor
add
test
add
filds
adc
pop
push
pop
and
out
jnp
pop
leave
cmp
gs
subb
cmp
subl
jno
arpl
or
cmc
inc
pop
pop
outsl
pop
lahf
bound
jo
or
mov
push
aam
movlps
rcll
cltd
xor
xor
inc
addl
sub
cmp
dec
add
jecxz
js
inc
dec
dec
push
mov
xor
popa
xor
inc
dec
dec
dec
pop
sub
imul
and
dec
sti
mov
and
ss
cmp
xor
andl
dec
lock
clc
gs
jns
popaw
jbe
add
filds
test
mov
cmp
outsl
sub
add
dec
pop
mov
xor
jb
outsb
testl
stos
mov
das
mov
cmp
cmp
aaa
cmp
aaa
and
cmpl
js
movsl
pushf
cmp
and
aad
mov
or
xor
adc
in
inc
cmp
push
add
xor
pushf
mov
jne
push
ret
add
call
sbb
xchg
sbb
push
inc
dec
ds
pushf
or
xchg
addr16
add
cltd
xor
pop
dec
dec
or
dec
inc
add
addb
cmp
subl
pop
mov
jo
leave
js
fdivs
fiaddl
dec
or
sub
sbb
sub
es
pop
push
xor
rorl
pop
add
dec
xchg
add
xchg
adc
dec
idiv
popa
xchg
add
jecxz
movsl
add
jo
and
jge
in
inc
push
mov
imul
outsb
insl
mov
add
xor
imul
push
and
clc
stos
ds
adc
test
add
inc
insb
xchg
fiadds
mov
je
pop
dec
xor
into
and
sbb
push
cs
push
mov
xorl
pop
aaa
lods
cmp
push
pop
fmuls
push
push
sbb
sbb
cmpsb
jae
sbb
mov
data16
push
fwait
shlb
fs
shll
xchg
sbb
sbb
jae
shrb
xchg
mov
fwait
jle
rclb
stos
rorb
pop
push
push
inc
movsb
popa
ret
lahf
dec
sbb
fidivl
ret
sbb
leave
ds
or
xchg
cmp
xchg
fmuls
adc
dec
scas
pop
popf
movsb
push
inc
nop
insb
cmp
xchg
push
and
mov
mov
mov
add
inc
xor
xchg
pop
adc
xor
or
out
adc
stos
sub
push
jo
add
add
xchg
sub
pop
mov
pop
mov
shlb
push
ds
ss
xchg
fmuls
insb
xor
andl
hlt
inc
jns
adc
andl
adc
jbe
data16
cmp
pop
inc
add
ficoml
or
push
lret
sbb
imul
pop
imul
push
out
mov
dec
gs
dec
in
mov
add
and
or
fldt
or
add
sub
jmp
push
jns
jo
add
inc
xchg
and
fs
adc
sbb
xor
inc
pop
or
test
sbb
pop
movsl
sub
enter
outsb
jb
and
pusha
arpl
push
sub
or
jo
and
sub
fisubrl
xor
add
and
orb
push
push
pop
mov
xchg
cwtl
mov
fsubrs
insb
xor
push
sbb
adc
aam
inc
ljmp
fndisi(8087
sub
mov
movsl
rcrl
fistl
sbb
push
mov
pop
fisttpl
aaa
mov
mov
sub
or
mov
loop
lods
lea
add
push
add
scas
imul
push
pop
pop
sbb
je
adc
jno
std
push
imul
jbe
mov
pop
mov
push
adc
xchg
inc
sub
andb
sahf
xchg
inc
stc
mov
xlat
jo
test
bound
adc
test
add
sbb
mov
fisttps
arpl
in
add
xor
add
push
fbld
mov
clc
xchg
inc
mov
lods
mov
jmp
in
and
sbb
and
mov
lret
popa
pop
imul
mov
sub
pop
test
movsb
outsb
scas
adc
popa
add
ss
popf
add
adc
ljmp
sbb
sub
jae
push
jae
jnp
rcll
int
cmp
mov
adc
xor
mov
mov
pop
xor
sub
in
leave
or
mov
cmp
subb
xorl
mov
dec
add
adc
inc
in
inc
dec
scas
mov
push
mov
sbb
scas
inc
mov
imull
push
push
ficoms
xchg
popa
mov
call
cmp
cmp
pusha
mov
jno
jg
pop
repnz
sub
outsl
in
pop
mov
inc
loopne
push
lea
lods
inc
mov
inc
mov
pop
sub
pop
pop
cmc
test
mov
jo
and
loop
movsl
cli
loope
dec
sbb
push
jo
cmp
cmp
arpl
sub
orl
test
inc
xchg
pushf
test
repz
dec
outsb
shll
mov
pop
cwtl
pop
push
les
pop
repnz
daa
mov
pop
test
mov
add
inc
xchg
js
and
mov
aas
xchg
adc
insb
lret
dec
xchg
andl
std
jmp
mov
push
mov
insl
movl
lret
in
push
push
popa
les
les
ret
jle
test
add
inc
stc
dec
bound
mov
daa
add
and
fs
and
inc
inc
push
sbb
fadds
fwait
xchg
adc
add
shl
notl
pop
fimull
mov
mov
cwtl
movsl
fwait
xchg
gs
inc
aaa
jae
pop
ficompl
loope
mov
inc
rcrl
xchg
orl
adc
xchg
inc
arpl
js
inc
inc
dec
pop
sbb
lods
inc
repz
xor
aad
inc
das
push
ss
sbb
ja
inc
push
mov
insl
fwait
leave
scas
insl
in
lret
mov
outsl
pushf
mov
pop
test
out
adc
pop
xor
idivb
insb
adc
popf
and
add
adc
dec
outsb
dec
mov
mov
outsb
dec
add
loopne
icebp
cmp
sub
and
sbb
pop
lea
inc
xor
push
jge
mov
and
shrl
add
or
cwtl
mov
inc
jne
loop
andl
mov
inc
sbb
and
sbb
xchg
push
sbb
or
xor
push
fldenv
test
mov
pop
adc
add
add
pop
movsb
or
mov
cmpsl
xchg
dec
dec
add
int
sub
fmull
add
xchg
mov
das
int3
in
imul
sbb
sbb
jp
jno
out
sbb
mov
pop
jae
push
sbb
adc
cmp
jo
je
adc
out
push
arpl
std
add
test
rcrb
pop
cmp
dec
adc
movsb
shlb
push
pop
mov
sub
xchg
xlat
push
push
subl
jmp
cmp
push
adc
in
sub
scas
push
fs
imul
dec
gs
xlat
in
push
mov
cmp
fisubl
cmc
push
js
insl
js
ret
xlat
dec
inc
jmp
xchg
adc
cmc
push
adc
xor
gs
push
insb
stos
aad
mov
movsl
inc
subl
inc
cmp
dec
sbb
insb
arpl
arpl
rorl
sub
mov
dec
fisubrl
push
push
or
loopne
mov
adc
ret
ret
xor
nop
test
jg
sbb
cltd
add
sub
and
insb
ret
cwtl
lods
push
jl
lock
movsl
pop
xchg
sub
sbb
into
inc
ss
xchg
jg
add
shr
pop
cltd
dec
cmp
in
pushf
cmp
outsb
jmp
mov
inc
clc
ret
ss
dec
and
dec
xchg
nop
push
insb
and
add
jbe
stos
jbe
dec
xchg
xchg
xor
jo
rorb
iret
cmp
adc
rcrb
out
xchg
lock
adc
test
sbb
inc
mov
and
sbb
sarl
and
jl
inc
mov
lret
dec
add
arpl
xlat
mov
or
pop
or
add
dec
int3
mov
add
add
xor
aad
out
push
push
inc
aaa
mov
add
int
outsb
push
das
or
mov
nop
push
in
adc
add
xchg
inc
in
aas
dec
lret
scas
nop
out
xor
add
cmp
fsubs
and
lret
xchg
sub
jb
mov
push
sbb
out
testl
xlat
add
push
push
rcrb
loopne
xlat
nop
dec
pusha
jo
loope
das
add
test
add
add
add
add
inc
add
call
int
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
popa
jmp
