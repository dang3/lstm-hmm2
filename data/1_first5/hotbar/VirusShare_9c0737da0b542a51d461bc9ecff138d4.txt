fcomp
decl
push
jns
add
mov
or
pop
add
int3
add
jg
push
mov
mov
push
push
call
test
jne
pop
pop
ret
push
push
fwait
jmp
rcrl
mov
test
je
cmp
sbb
mov
pcmpeqd
lea
jae
sub
movzwl
je
add
fnstsw
pop
pop
xor
andb
fcomps
shlb
pop
lcall
push
push
xor
push
mov
adc
testl
les
adc
incl
sbb
clc
imul
add
push
mov
push
push
push
xor
je
push
push
push
push
idiv
data16
in
sbb
clc
add
pop
sbb
inc
pop
shlb
nop
jne
pop
pop
pop
lcall
repnz
add
or
inc
or
jle
dec
push
xadd
dec
test
jg
mov
mov
push
mov
mov
call
ret
pop
add
fdivr
inc
push
push
mov
pop
mov
mov
les
insb
and
aaa
cld
ja
mov
push
push
jmp
orl
jb
outsb
push
mov
orl
mov
xor
jnp
nop
adc
adc
push
lea
push
sbb
repz
jbe
sbb
add
pop
xor
or
xchg
dec
cltd
adc
jns
orl
mov
push
xchg
dec
add
push
cld
jg
mov
cmpl
jne
push
or
dec
add
mov
push
cmp
add
inc
sar
pushf
loop
xor
inc
hlt
push
and
les
mov
sbb
mov
adc
mov
adc
data16
mov
mov
lea
xor
lret
sbb
jp
or
add
loopne
ret
and
repnz
int
push
sub
push
aam
loopne
push
push
nop
and
sbb
or
in
lock
cmp
add
mov
sub
test
mov
jb
iret
outsb
clc
inc
in
add
xor
or
mov
sete
push
imul
into
mov
jle
or
leave
mov
cwtl
ficoml
mov
xlat
cmp
fcompl
fidivrs
les
add
push
push
push
inc
and
sub
cmp
rcll
add
insb
lock
hlt
lahf
cmc
pop
inc
add
adcl
fwait
push
loopne
push
js
jle
aam
xor
mov
push
daa
mov
lock
aam
xor
push
xchg
and
xchg
push
dec
push
mov
lea
stc
icebp
jle
or
mov
dec
jl
shll
xchg
repz
add
sbb
pusha
and
and
cmpsl
and
xor
notb
enter
pop
sub
pop
repnz
push
mov
and
mov
xlat
rcll
pop
addl
pop
jge
mov
movsb
pop
pop
cmpsb
mov
pop
ret
xor
push
iret
repz
adc
dec
push
sub
push
insb
insl
push
add
pop
stc
pop
pushf
and
jl
inc
adc
pushf
inc
les
leave
add
scas
mov
lahf
cmp
jae
cld
sti
fistpl
add
sub
push
mov
sub
js
mov
lods
shrb
cmpsb
sub
push
xlat
push
and
imul
int
add
xlat
imul
movsb
push
mov
push
iret
je
jmp
das
out
add
add
dec
in
dec
loope
pusha
bound
int3
push
add
call
inc
orb
mov
inc
push
push
aas
fucom
aas
call
or
pusha
mov
push
lret
shlb
shr
or
pop
je
push
movsb
sbb
inc
hlt
nop
test
scas
sub
mov
mov
or
dec
pop
push
mov
jae
add
dec
lret
rolb
cwtl
adc
inc
xor
push
pop
push
and
in
ret
or
or
je
in
xor
xor
mov
addr16
pop
push
push
stos
add
xor
dec
or
xchg
bound
popf
push
adc
inc
xor
fwait
push
mov
insb
xchg
push
jl
in
dec
jg
dec
or
test
push
adc
add
sbb
pop
inc
add
push
mov
add
adc
mov
jb
sub
fistpl
pop
sbb
sub
addps
icebp
daa
cmp
sub
out
jmp
lea
nopl
cmp
mov
pusha
push
push
es
mov
push
add
and
arpl
jle
cmp
mov
push
pusha
sub
xchg
pop
outsl
sete
test
test
xchg
or
add
or
and
jmp
push
push
enter
xor
adc
adc
push
jne
add
xor
and
push
dec
pop
xchg
lret
inc
test
test
mov
push
mov
jne
je
push
and
jle
push
xchg
inc
or
jecxz
add
and
and
insb
and
cltd
or
push
enter
push
or
bound
aas
inc
ss
push
or
push
and
adc
dec
movsb
sbb
pop
sub
ljmp
jb
popa
push
or
and
cmpsb
jo
push
ljmp
mov
mov
fs
scas
dec
push
xchg
and
sbb
sbb
lds
wbinvd
sbb
sbb
std
jns
jmp
fists
cmp
pshufw
fdivrs
push
jns
xor
sbb
sub
test
xchg
sbb
xor
push
jae
fcomps
mov
cmpsl
movsl
sbb
cmpsl
popf
xchg
icebp
sbb
cmp
mov
pop
add
sbb
and
or
movsb
fcmovnu
adc
fdivrp
adc
leave
mov
test
push
bound
mov
test
cli
push
mov
xor
pop
push
fcompl
testl
mov
xchg
scas
xor
push
sub
mov
je
mov
shrb
adc
mov
cmp
js
cli
push
mov
fildll
jmp
push
push
cmp
or
bound
adc
popa
jp
or
movlhps
push
mov
lea
data16
or
sub
mov
js
in
out
cmpl
je
jo
or
mov
lea
adc
push
xor
xlat
jle
fcoml
push
push
sarb
cld
mov
dec
cmp
xchg
and
testl
mov
push
inc
mov
enter
sub
lock
sbb
adc
push
jl
mov
xchg
dec
daa
add
cmp
cmpsb
notb
jle
or
sbb
sbbl
aas
ja
mov
mov
jmp
and
mov
mov
test
in
push
mov
pop
cmpsl
push
mov
sub
ret
aaa
push
in
ret
push
adcl
sbb
fdivrl
pop
lea
lret
test
jns
jl
or
or
push
push
xchg
jbe
dec
mov
xchg
inc
in
lcall
clc
scas
in
push
lods
mov
call
iret
sub
in
jg
xor
push
cli
jmp
cmc
adc
repz
jmp
insb
mov
pop
pop
and
int3
sub
xor
filds
test
and
and
xchg
std
imul
int3
sub
scas
outsb
shrb
push
push
insl
xchg
bound
bound
mov
pop
imul
les
shrl
jmp
add
das
push
enter
cmp
jne
mov
push
mov
inc
test
jl
xor
pop
lods
sbb
push
xchg
cmp
je
jne
mov
cmp
je
ljmp
loopne
push
lret
or
aaa
dec
mov
in
mov
test
inc
mov
rorl
gs
add
xor
xchg
add
push
push
outsl
shrb
lcall
sub
add
ss
push
and
cmpsl
call
pop
lock
adc
adc
call
inc
cmp
jl
xlat
jecxz
pusha
icebp
ret
pop
push
es
jl
push
js
data16
bound
add
outsb
clc
jp
divl
dec
testb
cmp
sub
push
sbb
je
and
out
shl
mov
jne
movzwl
in
sti
imul
add
into
push
sbb
fwait
jle
adc
add
inc
test
jne
sub
push
push
inc
rclb
mov
aam
adcb
pop
sbbb
ficoms
icebp
fstps
xor
fwait
push
push
mov
sbb
shlb
ffree
pop
dec
out
lea
fbstp
iret
inc
popa
fcom
cmp
clc
jmp
movsb
add
jge
xor
mov
cmp
jl
mov
sbb
jne
stc
pop
insb
pop
pop
ret
mov
jp
xor
sbb
sub
aaa
pop
add
dec
adc
loop
fisubrs
rcrl
xchg
push
ss
movsl
pusha
lock
mov
rol
negb
pop
enter
mov
push
lea
adc
mov
shl
lea
adc
pop
cmp
fists
or
fistpll
mov
std
sbb
jge
push
jo
icebp
sub
out
push
push
insb
aad
clc
jle
mov
mov
cmp
pop
aas
or
inc
clc
mov
lea
popa
push
or
cmp
stos
mov
jmp
add
call
push
push
add
push
push
pop
push
mov
dec
xchg
test
add
add
jl
sub
pop
ret
icebp
mov
fs
inc
lock
je
cmpl
jle
pusha
pop
sub
pop
sub
add
movw
fisttpl
or
xchg
xchg
icebp
mov
ss
or
jb
push
dec
mov
cmp
shl
pop
pop
sub
cmpsb
bound
rorb
lret
pushf
mov
push
and
jnp
sbb
fldenv
fwait
insb
pop
pop
cmp
pop
sahf
or
jne
fsub
add
pusha
cmp
ficoml
xor
lret
push
adc
jle
aas
clc
cmp
ja
add
push
push
lods
jmp
xor
xor
mov
sahf
out
cli
repz
adc
adc
pop
rcrb
clc
add
add
inc
push
mov
enter
push
pop
loop
xor
jg
push
push
push
or
lea
pop
push
push
lea
sbb
mov
pop
add
lods
cmp
imul
xlat
or
or
sbb
sbb
enter
xor
mov
adc
pop
push
out
adc
push
mov
mov
jae
jecxz
fmuls
add
add
imul
inc
inc
jg
call
lret
dec
les
je
stc
mov
decl
mov
cmp
je
cmpl
lea
jl
mov
push
jne
push
mov
call
dec
test
xor
sub
add
imul
push
hlt
push
push
sbb
daa
or
lods
adc
adc
mov
loope
xchg
inc
xor
imul
dec
paddsw
add
inc
aas
sbb
mov
mov
cmp
lea
and
in
nop
or
ficoms
inc
or
pushf
sti
loope
mov
test
jne
cwtl
icebp
roll
pop
mov
push
cmp
test
pop
fs
jnp
fcmovne
jb
jno
pop
push
push
int
prefetchnta
cwtl
sub
dec
pandn
mov
rorb
sbb
xchg
xchg
ret
and
das
shlb
fnstsw
jmp
inc
add
in
roll
dec
adc
adc
mov
lea
sub
mov
mov
in
add
adcb
sbb
or
cmp
cmp
aad
loop
pop
jle
mov
jmp
jbe
mov
ret
add
pop
add
jnp
add
shlb
ret
pop
pushf
and
mov
shlb
adc
push
dec
incb
outsl
jno
iret
xor
stc
ret
mov
enter
adc
bound
cmpb
inc
add
inc
push
add
ret
or
enter
pop
std
shr
cmpsl
sub
cmp
jge
popa
push
sub
cmpsb
jle
mov
cmp
mov
pop
xor
loopne
jbe
push
hlt
cmp
jbe
inc
cmp
lret
pop
pmaxub
sub
stc
rorl
inc
idivl
ret
cmp
rorl
and
inc
mov
pop
movsb
jb
mov
shl
mov
sbb
push
add
xchg
mov
sbb
mov
fisubl
imul
sbb
lahf
ss
and
stos
test
mov
add
cltd
jo
xchg
fstp
push
cmp
push
jp
inc
xchg
pop
mov
inc
jno
push
pop
sub
fdivl
mov
inc
insb
mov
addps
fldenv
cmp
adc
push
std
push
pop
xor
mov
pop
pop
fistpll
inc
nop
sub
clc
jb
xchg
or
sbb
push
jo
push
and
adc
adc
adc
cwtl
push
push
loop
add
or
or
push
shlb
aam
pop
push
or
negb
je
inc
sbb
cld
adc
sub
int3
mov
pop
xchg
lahf
xor
sti
aad
clc
movsb
push
push
and
adc
pop
sbb
sarl
or
imul
sar
or
sti
jne
xor
and
imul
push
dec
pop
outsb
or
sbb
insl
add
lea
add
ret
pop
inc
xor
jl
pop
mov
xlat
xchg
inc
add
pop
xchg
sub
mov
or
mov
enter
rcll
mov
pop
inc
push
push
and
adc
out
add
ficompl
jge
mov
inc
xchg
jg
leave
and
sbb
xchg
nop
outsb
pop
and
pop
in
xchg
das
jg
sbb
sub
or
filds
or
sub
inc
jb
or
mov
iret
outsb
imul
ret
mov
mov
je
cmp
loop
test
loopne
and
je
sbb
int
or
scas
or
jne
sbb
jne
add
push
push
in
in
fstl
mov
ret
cwtl
jecxz
outsb
xor
je
mov
stc
or
stos
push
cmpsb
push
sub
in
xlat
std
repz
add
test
cmpl
and
sti
push
out
cmpb
decl
data16
jmp
ret
add
shr
add
js
mov
add
cmp
roll
sbb
arpl
jmp
inc
pop
and
mov
or
inc
fwait
add
je
push
sub
sub
mov
cmp
test
stc
or
idiv
xchg
jne
jle
ds
fisttpl
daa
mov
movb
jno
add
loope
sub
inc
or
inc
add
outsl
dec
adc
inc
aaa
loopne
add
repnz
dec
rcl
incb
sbb
and
sbb
inc
jp
mov
bound
xchg
sbb
lods
sbb
push
mov
pop
cmp
mov
push
pushl
leave
and
mov
sub
insb
iret
lret
ret
push
jp
jl
jmp
lea
fs
sahf
adc
mov
rcrb
adc
sbb
or
adc
aaa
xor
orb
adc
mov
sbb
inc
sbb
xchg
mov
aad
fldz
movl
adc
lret
mov
stc
sbb
jb
pop
sub
lods
xor
je
loope
in
fdivl
scas
dec
sbb
out
lcall
pop
xor
repz
push
sbbb
lcall
add
sbb
add
out
pop
and
pop
mov
fstl
loope
cmpsb
mov
mov
and
sahf
inc
out
fucom
mov
adc
cmp
adc
or
xchg
xchg
lret
adc
scas
add
hlt
insl
xchg
sahf
jecxz
inc
mov
inc
outsb
dec
dec
mov
mov
lea
push
ficoml
add
push
lea
pop
add
dec
cmp
push
xchg
out
push
dec
aam
push
or
les
pop
sahf
pop
test
xchg
orl
add
push
fadds
repnz
sbb
pusha
outsb
test
sub
sti
add
jle
add
fiaddl
ljmp
mov
nop
scas
notb
add
inc
outsb
cmp
add
lock
push
dec
fildl
push
jle
ficompl
add
inc
sbb
push
pushf
andl
sahf
cmp
std
or
push
push
mov
add
mov
jle
call
aas
push
mov
dec
xchg
add
dec
add
rolb
sub
mov
sub
inc
call
mov
out
sbb
xchg
and
sar
mov
imul
and
insl
je
sbb
mov
push
pop
out
dec
dec
push
lods
inc
and
push
inc
pop
lock
scas
pop
arpl
testb
shrb
sub
imul
xor
pop
xchg
xor
mov
rcl
in
stos
int3
pop
pop
dec
in
sub
inc
inc
rcpps
add
lods
loope
mov
ret
je
lea
add
iret
or
push
inc
xchg
mov
imul
mov
fwait
add
add
or
ret
es
sbb
xchg
dec
stos
cmpl
xor
push
ds
adc
in
loope
je
mov
jne
imul
mov
sub
jecxz
push
pusha
lock
xchg
in
jmp
jnp
stos
fdivl
lods
data16
push
mov
mov
loop
mov
dec
mov
push
push
xor
je
add
inc
dec
adcb
inc
inc
inc
cld
jg
or
rcrl
shll
clc
out
inc
aas
xor
sub
and
jmp
mov
add
sahf
inc
add
mov
shlb
adc
pop
mov
cltd
in
xor
push
inc
icebp
mov
bnd
fadd
push
repnz
cwtl
push
sbb
push
adc
xor
out
xor
cmp
inc
or
jle
xor
mov
mov
fisttps
sbb
xor
fiaddl
movsl
rcrl
xchg
pushf
push
cmp
pop
inc
neg
sbb
loop
out
cld
call
jae
flds
add
into
push
sbb
test
jg
outsb
loope
subl
push
adc
dec
fisubrl
adcb
push
sub
sub
test
mov
popf
adcb
test
pop
movzbl
jle
adc
cmpb
testl
sbb
fdivrp
movsb
cmp
or
scas
call
in
mov
or
loopne
lods
js
shlb
push
add
mov
cwtl
add
jmp
lret
idiv
mov
xor
push
push
push
and
push
add
cwtl
jns
roll
mov
push
mov
xor
xor
sbb
and
loopne
inc
pop
cs
mov
subl
pop
test
in
add
sub
je
rolb
cmp
mov
aad
lahf
sbb
clc
in
push
repz
lea
jmp
gs
js
pop
cld
movl
push
pop
cmpsl
je
jns
adc
rcrb
enter
sub
popa
mov
adc
fisubrs
addb
adc
cmp
dec
adc
xchg
dec
pop
flds
mov
lds
cmp
xchg
mov
aas
mov
mov
test
add
push
xchg
stos
sbb
dec
sub
add
pop
xchg
push
or
push
jne
push
mov
sahf
andl
or
call
or
mov
push
lds
mov
push
pop
push
xor
fsubs
cwtl
shufps
aam
cmp
imul
fisubrl
dec
cmp
add
mull
sub
inc
and
enter
in
or
lods
and
and
sbb
adc
in
adc
fisttps
ficoms
add
loop
or
je
ss
ljmp
push
sub
lahf
jo
push
addb
inc
inc
imul
push
xor
pop
push
jne
or
pusha
test
push
test
jge
push
push
nop
cmp
sub
push
mov
pop
loopne
lea
mov
jl
pop
push
lea
test
loope
add
test
xchg
or
push
daa
fstpl
xor
jg
cmp
addl
loopne
push
lock
push
test
jae
inc
in
inc
cmp
dec
rolb
dec
addb
xor
push
adc
fcoms
add
push
push
stos
sub
mov
test
push
push
push
and
mov
push
sbb
pop
rcll
dec
add
push
jbe
ja
mov
adc
test
xchg
iret
xor
jae
insl
aas
inc
shrb
add
inc
fldl
fmull
pop
or
push
push
inc
lods
dec
and
push
fcoml
jb
push
lahf
push
mov
fisubrs
pop
repnz
or
mov
fisttpll
or
add
dec
cmpsb
roll
ds
push
js
inc
and
jecxz
push
lds
pop
push
jp
jo
adcb
enter
mov
push
or
jecxz
sbb
push
add
push
mov
mov
ljmp
add
enter
and
jp
shl
mov
sub
dec
andl
jbe
xchg
sbb
sbb
adc
mov
ss
xorb
nop
or
sbb
adc
and
mov
adc
adc
rorl
inc
xorl
sub
sbb
sub
add
push
push
push
js
lds
pop
cmp
cld
cld
add
jge
add
je
mov
pop
aas
jb
jge
xchg
lock
push
stos
sbb
pop
in
cs
sub
push
pop
or
into
sub
adc
cmp
jbe
int
dec
push
mov
leave
lea
mov
stos
xchg
add
movzwl
iret
add
fdivl
enter
loopne
nop
xor
int
dec
mov
fmull
sbb
cmpsb
aam
push
int3
int3
dec
push
push
push
lods
xchg
arpl
and
push
push
push
sarl
sbb
leave
loope
sbb
in
mov
inc
push
sbb
mov
add
xor
clc
test
insb
xor
lds
popa
dec
mov
out
ffree
mov
adcb
incl
inc
mov
and
sub
inc
lea
xchg
xor
loope,pn
dec
loopne
sbb
sub
add
cltd
and
arpl
sar
push
shlb
pop
adc
jl
dec
add
xlat
adc
add
rcr
and
mov
mov
dec
bound
imul
add
std
inc
cli
push
mov
shr
add
mov
imul
push
lahf
xchg
sbb
xor
in
add
in
loopne
mov
pushf
nop
imul
ret
jmp
mov
cmc
sub
mov
stc
add
pop
xchg
add
push
push
enter
lcall
sbb
divl
or
rolb
cmp
icebp
dec
loope
xor
call
jnp
dec
xor
lea
ret
ficomps
scas
cmp
mov
lea
and
or
or
fldenv
stos
in
arpl
hlt
aam
in
xor
inc
out
mov
inc
dec
push
dec
mov
mov
repnz
fldl
push
add
dec
cmpsl
sbb
sub
inc
out
inc
pop
jle
fldz
data16
push
ljmp
mov
fisubrl
int3
icebp
pop
xchg
sub
push
adc
fstpt
jp
or
cltd
idivl
push
pusha
add
cmp
in
lea
sbb
loope
scas
push
xorl
mov
or
popf
insw
arpl
mov
fidivrs
cmp
or
jbe
add
lret
repz
xchg
fwait
test
and
inc
or
ljmp
lods
pop
lea
cmp
jp
stc
or
out
or
jmp
mov
cmp
dec
xlat
pop
fistl
ud0
pop
sbb
push
faddl
dec
or
ds
lock
sbb
stc
shll
mov
test
sbb
mov
mov
mov
xor
inc
adc
inc
push
fcoms
fisubrs
out
add
outsl
addr16
mov
mov
std
out
fidivl
mov
jo
loop
fcomps
filds
clc
in
push
pop
movb
add
mov
leave
shrb
sub
and
cli
rclb
inc
xlat
xor
dec
pop
shll
test
aad
adc
and
outsb
jecxz
cmc
cmp
mov
test
jl
call
lahf
arpl
mov
pop
add
je
mov
xchg
push
add
mov
inc
insl
pop
test
ja
push
add
lods
mov
test
call
mov
jo
and
add
sarb
inc
lcall
roll
invd
adc
out
cmp
test
or
sub
loope
or
inc
cmp
mov
xor
inc
outsl
loopne
dec
lods
ret
xchg
jmp
jecxz
jns
xchg
jmp
add
or
insb
ret
sub
and
xchg
sbb
xor
add
pop
clc
mov
pop
mov
and
push
mov
outsb
mov
add
push
loop
mov
pop
cmp
or
push
rcll
mov
notb
xchg
test
mov
mov
ret
push
add
push
inc
mov
jae
inc
jg
jmp
xchg
fnstsw
jle
cltd
dec
bound
adcl
inc
loope
xchg
adc
ja
cmp
push
push
cmp
pop
xorl
enter
add
adc
mov
pop
orl
psubb
mov
and
cmp
js
pop
add
loope
sbb
sbb
lcall
pop
push
dec
mov
shlb
lahf
or
mov
jle
sbb
pop
jg
or
std
inc
lock
mov
pop
ret
pop
sbbl
es
xchg
and
add
xchg
fiaddl
inc
and
clc
decl
cmp
setb
or
mov
sub
cmp
setae
mov
lcall
adc
xchg
js
lret
mov
int3
js
int
or
jae
call
dec
in
loopne
push
add
inc
push
lock
lods
push
mov
lea
push
adc
rol
and
dec
push
movsl
push
inc
xchg
jo
es
pop
pop
mov
ffreep
in
sub
mov
mov
push
xor
or
or
mov
inc
push
hlt
adc
sub
sbb
cmp
fldl
push
add
mov
ss
push
dec
in
sbb
dec
push
add
add
cmpsl
jg
pop
and
inc
int3
sbb
mov
and
add
in
adc
iret
call
jae
fcoms
or
sub
jns
mov
adc
lahf
cmp
ja
movzbl
mov
fldcw
jno
cmp
test
addr16
jno
add
add
or
adc
sub
add
fisttpl
lds
mov
adc
out
push
mov
mov
inc
dec
lds
ds
push
and
clc
push
inc
pop
mov
insl
add
pop
jmp
xor
xchg
dec
pusha
jmp
prefetcht2
or
mov
inc
xor
movsl
jg
lea
mov
mov
insb
cltd
dec
cmpsl
mov
and
and
ret
pop
add
dec
push
lds
ret
out
sub
sbb
ss
popa
adc
and
and
push
andb
shlb
imul
or
pop
filds
or
sbb
push
push
xor
in
or
ret
pop
mov
mov
test
or
lea
sbb
or
sti
out
mov
pop
inc
pop
fdivl
in
mov
mov
sub
or
lods
sub
jmpw
mov
push
mov
push
adc
jmp
subps
mov
push
jge
nop
dec
int
mov
insl
aam
dec
dec
add
in
movsl
push
push
movsb
cwtl
push
pusha
mov
pop
lret
aaa
repnz
loopne
sub
lods
and
aaa
nop
and
pop
xor
es
shr
mov
je
adc
xchg
and
lods
adc
xchg
and
push
jp
loopne
push
sub
sti
subb
enter
cmpsb
std
arpl
mov
lahf
out
sahf
and
nop
seto
sub
push
or
and
movsb
or
test
cmp
cltd
push
push
dec
push
fistps
cmpsb
jl
es
push
mov
cmp
in
clc
dec
dec
pop
jg
mov
or
push
rorb
arpl
add
and
dec
and
xor
dec
add
les
sbb
pop
push
push
dec
add
push
push
js
andl
cwtl
in
jne
adc
push
or
scas
and
and
and
inc
enter
mov
or
or
add
add
add
fcmovne
or
int
inc
test
lret
push
mov
adc
push
xchg
xor
pop
push
fisttpl
adc
pop
inc
xor
fisttpl
adc
inc
cmp
push
dec
mov
cmp
and
inc
push
add
jne
adc
mov
and
jl
push
int3
pop
push
or
in
call
xchg
in
mov
fwait
mov
adc
jno
and
adc
cmp
sbb
dec
add
roll
xlat
jae
movsb
mov
or
faddl
mov
push
adc
mov
or
pusha
call
jp
mov
ss
es
pop
movl
pushf
incb
jne
pop
je
push
cmp
push
cmp
rcl
or
push
data16
mov
pop
sub
xchg
in
pop
nop
xchg
push
test
repnz
xor
out
cwtl
add
repnz
mov
adc
pushf
mov
adc
aam
mov
test
mov
daa
and
push
js
jge
out
add
subl
mov
lds
sub
pop
adc
andl
push
inc
daa
and
push
addb
inc
cli
ja
out
jnp
adc
sub
in
cmp
mov
pop
add
adc
insb
add
ljmp
or
outsl
or
popf
mov
xchg
cmpsl
mov
fisubrl
push
adc
movsb
push
pop
movsb
sbb
adc
xchg
or
xor
and
add
add
or
xor
push
ret
rol
andl
pop
fimuls
cld
adc
mov
jae
and
add
mov
xor
add
mov
jle
mov
mov
bound
int3
add
mov
in
sti
push
push
sbbl
into
popf
jo
out
push
std
stc
cmp
pop
mov
inc
sbb
mov
in
stc
xchg
sbb
jmp
inc
or
and
jp
xlat
pop
into
movl
pop
shlb
jne
push
xorl
lret
test
xchg
push
imul
jbe
jecxz
pop
pusha
or
mov
adc
push
push
mov
xor
test
jns
jb
or
or
movsl
test
jo
mov
pop
aaa
or
pop
push
add
nop
divps
add
js
mov
pop
jne
das
pop
leave
sub
or
jg
push
enter
pop
mov
popa
xor
mov
andb
or
imulb
jne
jo
pop
stos
dec
sbb
cmp
xchg
lods
jl
or
push
or
add
sbb
sbb
cltd
lahf
push
fmull
out
and
push
mov
sub
nop
xor
in
sub
adc
adc
push
sub
icebp
into
and
jnp
mov
sbb
jo
push
mov
popa
mov
jbe
mov
cmp
xor
ljmp
mov
roll
push
adc
jge
xor
mov
sbb
loopne
pop
gs
pop
sbb
sub
and
or
adc
jbe
pop
mov
clc
xor
addl
add
sbb
adcb
shl
push
ficomps
xlat
pop
std
inc
pop
sbb
cmp
xor
adc
jp
mov
fiaddl
pop
test
pop
cmc
data16
and
loopne
sbb
mov
adc
in
xor
and
jns
xchg
adc
jmp
dec
xchg
and
pop
pop
sub
and
adc
loop
jl
push
and
shr
sub
or
sub
mov
mov
es
add
xor
ljmp
jb
mov
mov
mov
and
or
std
fists
push
ss
sbb
push
pop
sub
sbb
imul
cwtl
dec
inc
cmpsb
pop
xchg
add
mov
jmp
push
cmc
sbb
push
sbb
loop
push
push
sub
fwait
push
xor
or
lods
movsb
or
cli
or
sub
add
sbb
and
mov
mov
inc
adcb
inc
and
inc
push
pop
rolb
cld
lock
sbb
mov
sbb
in
push
or
push
lret
test
cs
nop
pusha
add
sbbb
push
add
sbb
add
add
and
mov
or
bound
cmpsb
lds
fwait
add
int
add
pop
and
cmp
add
xor
out
adcl
sub
lret
push
push
or
add
xor
mov
ljmp
test
pop
dec
dec
out
xor
pop
add
mov
sbb
push
out
lock
pusha
jnp
push
xor
in
inc
jb
mov
push
repnz
sub
push
mov
cmp
loop
or
jp
push
pop
cs
pusha
cmp
push
sub
xor
wrmsr
je
push
sbb
cld
fidivl
sbb
clc
repnz
add
mov
ficoml
xchg
cs
xchg
xor
push
andl
mov
movsl
lock
xor
repz
add
pop
shlb
inc
cmp
stos
out
push
cmp
xchg
test
insb
sub
jno
test
sub
xchg
pop
cli
imul
inc
add
push
pop
xor
leave
into
in
cwtl
xor
or
jle
sbb
insl
dec
jge
push
or
or
movl
or
and
leave
and
xor
xchg
cmp
dec
sub
mov
pop
xchg
jo
cmpsl
cmp
imul
sarb
enter
mov
push
and
mov
pop
add
mov
add
mov
out
mov
popa
jo
sub
sub
pcmpeqw
or
cmp
xor
jge
inc
movb
jecxz
fbstp
fidivrl
cmp
cmp
loopne
adc
xchg
ror
mov
in
xor
int3
mov
mov
cmp
push
int
fdivrl
and
fsubr
adc
jbe
and
add
or
fs
mov
stos
in
push
pop
pop
cmp
and
add
ljmp
xchg
outsl
add
ss
iret
mov
pop
inc
dec
inc
xor
push
pop
push
aas
ljmp
push
sub
dec
hlt
push
into
inc
sbb
adc
pushf
scas
inc
add
pop
fdivrs
fs
push
cmp
mov
add
mov
sbb
mov
fs
test
andl
pop
movb
add
jmp
popf
popa
fs
push
into
outsb
jle
xchg
out
push
jp
outsb
inc
xor
lock
push
dec
inc
cmp
fnstcw
cwtl
mov
into
lods
xor
add
lds
inc
dec
mov
fmull
shrl
and
pusha
pop
call
inc
sub
ss
adcb
pusha
nop
inc
mov
ret
cmc
dec
mov
mov
std
test
cmp
popf
or
xchg
push
mov
mov
or
pop
or
les
or
jno
addr16
and
into
and
inc
pop
pop
js
insb
pop
pop
addr16
loopne
mov
push
test
je
push
add
push
mov
jecxz
or
and
nop
je
push
or
push
mov
mov
add
flds
and
mov
push
jecxz
not
aam
hlt
dec
rorl
jl
dec
pop
push
adcb
and
fs
jno
adc
cmpsl
push
inc
dec
gs
gs
addl
ror
les
mov
or
popa
xchg
sub
roll
sbb
push
std
std
into
test
mov
add
sbb
dec
add
add
es
mov
into
mov
sti
jg
or
loop
in
aaa
pusha
cmpsl
sbb
push
fs
movsb
push
push
push
mov
adc
lea
push
cmp
cld
movsl
lret
sub
pop
testl
xchg
dec
adc
in
adc
sbb
dec
push
mov
or
adc
and
push
lcall
in
filds
push
xor
cwtl
push
mov
in
cwtl
jae
add
xor
adc
stos
dec
pop
dec
xchg
outsl
cmpsb
call
add
adc
and
mov
mov
nop
or
pop
cmc
daa
nop
add
mov
or
ret
pop
inc
test
jns
xor
jecxz
outsb
jo
xlat
sarb
mov
js
push
pusha
inc
daa
push
adc
push
add
in
test
ret
imul
andb
nop
sbb
push
shrb
nop
add
adc
add
cmp
pop
cmp
fs
jbe
adc
xchg
divb
push
cltd
addl
sbb
add
dec
xorl
inc
cmp
cmp
jle
xor
push
push
mov
fwait
dec
out
sbb
add
dec
jg
mov
lea
jmp
fwait
sbb
jo
insl
xor
inc
rcll
repz
roll
sbb
js,pn
lret
les
cmp
es
dec
sbb
inc
scas
inc
repnz
sbb
out
movsb
in
pop
sbb
mov
je
dec
test
leave
stos
adc
add
lea
mov
inc
std
leave
cli
lock
into
mov
sbb
push
fdivs
adc
xchg
lahf
lahf
push
outsl
sbb
push
sbb
sub
cmp
push
cmp
lea
aas
mov
add
lods
xchg
add
out
out
pop
rorb
pop
fidivrs
or
adc
stos
lods
inc
or
xor
je
add
inc
jnp
sub
movsb
out
sbb
into
mov
dec
jae
or
sarb
or
mov
les
add
pop
or
xor
cmp
push
pop
aad
mov
shll
jo
sbb
std
andnps
sbb
inc
dec
fs
adc
xor
add
data16
mov
inc
add
filds
cmp
mov
and
fiadds
test
inc
shll
dec
fs
inc
or
push
inc
and
push
push
mov
fsts
adc
jb
lret
sub
dec
cmpsl
pop
add
mov
pop
sbb
pushf
cwtl
pop
orb
mov
and
xchg
pushf
dec
insb
popf
js
sub
insb
adc
iret
push
movb
adc
stos
cmpsl
and
mov
rcr
fwait
jne
out
adc
in
nop
dec
mov
leave
inc
add
push
inc
push
jb
hlt
dec
clc
and
mov
sarl
lock
ds
adc
hlt
frstor
into
mov
mov
jle
jg
sub
push
fisttpl
add
pop
in
in
fcmovnb
je
outsb
jl
mov
ficoml
xor
jne
mov
jno
mov
lea
jnp
rorb
fucomi
pop
mov
enter
add
sahf
add
aaa
out
mov
nop
and
sub
push
push
sub
pop
cmp
and
or
rolb
xor
adc
push
cs
inc
lods
clc
loop
or
inc
add
lods
icebp
scas
ja
lcall
nop
add
ljmp
sbb
adc
mov
jbe
jle
in
popa
roll
lods
and
and
push
cmp
xor
test
in
dec
arpl
xchg
pop
sbb
xchg
jno
rolb
popa
sti
sbb
shlb
ret
mov
add
sub
dec
sahf
stos
add
sbb
dec
pop
and
aad
lcall
les
jg
mov
or
test
das
fdivrl
xor
aaa
ss
cmp
adc
loopne
dec
mov
add
add
clc
dec
and
jnp
loopne
add
icebp
or
and
or
xchg
mov
jne
or
adc
inc
in
pop
fists
jge
mov
mov
push
xlat
cwtl
pop
js
je
lret
daa
add
mov
scas
xor
jo
subb
hlt
aam
push
xchg
test
jbe
xlat
jecxz,pn
orb
pop
sub
mov
add
add
rcrb
mov
ss
in
push
sbb
add
test
xchg
adc
hlt
add
dec
adc
fisubrl
je
int
adc
loopne
push
and
mov
addl
movsl
mov
push
pusha
loopne
pop
loope
mov
mov
xor
inc
pusha
pop
pusha
ja
loopne
jb
stos
sbb
dec
mov
jle
fsubs
rorb
jg
pop
dec
cld
lea
sub
fs
or
jle
dec
jo
sbb
fimuls
in
jo
sbb
mov
jecxz
push
xorb
mov
cld
xor
or
bound
inc
sub
dec
xor
into
sbb
lea
jns
add
fmuls
pop
adc
xor
or
ljmp
fwait
mov
or
fmull
and
mov
jmp
jl
push
dec
add
int
leave
add
xor
es
aad
cltd
aam
adc
movsl
rorb
push
push
rorb
lahf
add
inc
repnz
enter
sub
fiaddl
out
lods
push
add
inc
pop
xor
or
inc
adc
xor
pop
mov
insb
rcr
and
inc
das
sarl
lods
orl
jmp
adc
roll
mov
test
add
andb
sbb
cmp
out
in
cmp
daa
stos
or
pop
hlt
imul
je
sarb
dec
fs
push
aas
push
push
pushf
shrb
repnz
xor
cmp
test
push
xlat
movsl
pop
popf
push
jne
insl
sbb
jo
mov
stc
cmp
cmp
mov
sub
adc
push
push
pop
sbb
xchg
sub
sub
and
and
test
nop
pop
icebp
lods
ret
dec
xor
lea
sbb
inc
mov
jne
daa
jle
pop
xchg
inc
add
jns
js
sete
mov
pop
push
push
movsl
flds
mov
dec
add
xorl
adc
push
cmp
pushf
add
push
adc
enter
mov
add
sarl
or
and
mov
jno
sbb
stos
ret
test
mov
jmp
and
loopne
fists
mov
adc
push
add
sbb
jg
sub
add
pop
stos
push
rcll
mov
mov
mov
mov
push
mov
es
test
add
out
mov
push
push
jg
jmp
or
add
lea
xchg
test
out
and
sbb
or
mov
pop
or
add
dec
cmp
loop
inc
add
das
test
pop
push
test
mov
mov
xor
push
div
mov
mov
mov
push
rorl
movzwl
sbb
setge
shrl
jne
adc
sub
pop
sahf
dec
xor
cmp
loopne
sarb
add
xchg
out
lock
jle
jl
sub
fcoms
mov
fsubs
cwtl
adc
inc
ret
xchg
sbb
setb
les
and
adc
mov
xor
addb
loope
cmp
test
es
and
or
jno
add
sbb
or
sbb
sarb
mov
push
push
mov
jle
sbb
sub
mov
js
push
out
subb
jno
jmp
not
shrb
jo
dec
aaa
push
and
add
jbe
xlat
cmp
pop
rcrb
aad
mov
adc
stos
call
or
add
popa
cwtl
mov
xor
ret
and
inc
jns
pop
adc
movsl
jo
lods
insb
cmpsb
xor
mov
stc
mov
push
push
icebp
mov
and
sbb
lahf
mov
pop
je
push
leave
xorl
lea
mov
enter
adc
stos
mov
cmpsl
or
mov
pop
push
mov
subl
cmp
loop
xrelease
outsl
or
push
xchg
add
adc
testl
mov
and
fistpll
outsl
popa
aas
ret
mov
push
add
lret
loop
loope
daa
ret
xor
xor
cmp
xor
mov
sbb
push
push
add
mov
add
ret
xor
dec
push
dec
pop
xor
xor
push
mov
shlb
mov
mov
push
add
adc
mov
add
shll
push
or
adc
xor
mov
ret
adc
mov
xchg
pushf
adc
or
sub
mov
jp
cmp
xor
xor
clc
pop
inc
inc
hlt
cmp
jne
sbb
jnp
mov
les
into
ja
stc
in
enter
sub
push
movsl
xor
mov
lock
inc
ror
adc
aaa
shl
sti
cmp
stc
aaa
testl
cmp
lock
sti
adc
xchg
mov
push
leave
cwtl
sbb
pop
leave
loop
jae
mov
jmp
outsb
add
or
lea
jge
push
loope
movsb
sbb
mov
adc
inc
pop
or
lock
sub
xchg
ds
cmp
sub
loop
pushl
add
dec
mov
lods
icebp
jl
mov
cmp
jg
mov
mov
sbb
clc
dec
jg
test
bsr
je
xchg
ror
adc
les
insl
out
out
mov
and
movsb
cmp
add
pop
inc
imul
xor
int
jae
and
lods
lds
add
or
mov
bound
dec
lea
pusha
cmpb
push
or
cwtl
lea
xor
cmp
push
add
mov
icebp
mov
sti
sub
push
sarb
sub
shlb
xor
lret
lret
add
cmp
push
cmp
insb
or
sbb
iret
cmp
inc
add
add
or
jp
add
sbb
nop
mov
push
movl
nop
sbb
es
outsl
jb
mov
fmul
fsubrs
push
add
adc
es
xchg
or
fcmovnb
es
adc
sahf
jl
mov
push
icebp
sub
jg
push
add
push
out
sub
ret
lods
test
or
gs
adc
dec
dec
cld
sub
loope
loopne
add
lea
mov
xchg
call
add
ret
out
aas
mov
mov
hlt
sub
push
ss
test
push
pop
ret
mov
inc
adc
mov
pop
add
adc
xor
dec
pop
ret
mov
jno,pn
push
fadds
dec
loope
mov
push
pop
iret
div
add
hlt
push
adc
pop
xchg
sbb
es
mov
outsl
ret
jg
jb
dec
dec
cmp
rcrb
sbb
adc
push
xchg
imul
mov
lds
stos
andl
test
push
out
outsl
mov
addr16
mov
inc
jle
fists
mov
ret
aas
xor
add
cmp
js
and
sbb
push
jns
xor
lret
push
push
jp
lahf
outsl
fcmovnb
and
aas
and
xor
ret
fdivrl
dec
jle
clc
mov
scas
jb
mov
xchg
or
popf
pop
stc
dec
push
imul
push
push
or
es
test
mov
adc
or
and
inc
push
or
cli
sub
dec
or
or
or
dec
adc
jle
sub
jl
mov
and
adc
cmp
jle
adc
sub
xchg
cmpl
jns
or
mov
cltd
fadds
sbb
ljmp
dec
popf
adc
pop
orl
add
test
jo
add
sbb
cmpsl
push
lea
shlb
mov
dec
inc
cltd
or
or
mov
sbb
rclb
jp
xchg
fnsave
push
add
and
mull
add
shrl
cmp
pop
mov
pop
hlt
aad
addb
mov
movsl
mov
mov
mov
sbb
cltd
cmp
addl
jge
ljmp
loopne
xorl
sbb
insl
pusha
aas
outsb
inc
adc
adc
add
mov
movl
or
sbbb
adc
movl
gs
inc
push
fadds
fisubl
rolb
inc
mov
add
and
adc
jmp
inc
aaa
lods
jmp
pop
dec
orps
dec
pop
pop
js
add
sbb
push
mov
iret
pop
mov
stos
mov
sub
je
cmp
sub
xor
push
andl
test
or
adc
mov
jb
add
shll
loopne
pop
lods
icebp
xor
mov
or
pop
mov
fwait
cmc
xor
xchg
fcoml
jnp
fsubrs
test
jb
push
test
xor
and
mov
sub
add
jmp
mov
addr16
push
sub
imul
inc
pushf
andl
push
iret
xor
imul
punpcklwd
stc
pusha
int
sub
push
add
sbb
jbe
imul
or
cmp
xor
icebp
xor
sbb
sbb
les
add
push
loopne
repnz
fldt
jmp
pop
sbb
adc
adc
mov
adc
imul
mov
mov
xchg
dec
dec
jge
ret
push
or
nop
shll
add
mov
add
dec
mov
xchg
inc
add
cs
subl
jnp
push
dec
push
cmp
add
sbb
add
push
sub
jno
shl
fs
cmp
nop
or
or
imul
shlb
pop
jnp
and
adc
adc
push
leave
and
sub
dec
mov
repz
call
xchg
ljmp
int
mov
sbb
push
sbb
inc
push
dec
fdivr
addr16
push
andl
push
shl
lods
sub
cmp
push
stos
and
mov
cmp
mov
cwtl
add
cmp
dec
pop
andb
es
push
mov
scas
fists
pusha
xchg
jno
aaa
mov
push
push
add
sti
icebp
addb
dec
lea
push
or
dec
jnp
inc
add
popf
dec
and
push
pop
adc
insl
push
sbb
imul
xor
mov
shlb
push
fldcw
movsb
cs
mov
add
repz
push
xor
shrl
push
mov
addl
leave
sub
inc
and
pop
lock
push
mov
and
push
xor
clc
cmp
dec
aad
jecxz
ror
add
fistps
sub
outsb
push
lods
sar
and
push
push
in
and
sub
and
int3
push
mov
adc
test
pop
adc
stos
mov
je
or
repnz
or
sbb
ds
sti
mov
mov
jo
shrb
jne
ret
rcr
pop
inc
cmpsb
fadds
push
in
push
or
ss
xchg
mov
sarl
fwait
and
push
sub
sub
adc
aas
sub
and
fmulp
mov
add
cmp
xor
aaa
lcall
pop
mov
sub
push
icebp
add
add
mov
add
sub
push
fidivrs
pop
sub
and
inc
out
jecxz
cmp
rcll
adcb
sub
and
mov
je
push
cmp
jmp
lock
into
insb
add
ret
jg
push
test
stos
jg
xchg
or
test
mov
stos
and
stos
jns
jae
dec
xchg
mov
sub
push
nop
and
and
add
sub
add
sub
pop
jle
inc
mov
mov
push
cltd
dec
pusha
movsb
sub
add
lock
popf
and
xor
xor
add
jnp
insl
adc
push
cwtl
sub
lock
sub
xchg
mov
sbb
loope
add
add
push
insl
lret
lea
loopne
mov
and
or
adc
mov
mov
rolb
dec
or
subps
repz
mov
xor
xor
inc
inc
mov
add
sbb
push
mov
test
fwait
mov
inc
add
addps
jno
or
jl
xor
int
mov
mov
lea
lcall
fiaddl
iret
stc
pop
push
subl
insb
jo
out
dec
add
push
sub
fimuls
mov
mov
ds
fcoms
fldl
push
arpl
fdivrs
aad
inc
sbb
dec
push
or
push
mov
cmp
add
psrlq
pusha
fmull
xor
ljmp
mov
js
or
push
mov
mov
mov
inc
or
add
dec
and
ret
dec
loop
sub
mov
pop
dec
popa
loope
lret
or
int
scas
scas
or
sub
dec
push
mov
inc
push
mov
push
adc
adc
pop
sbb
sub
icebp
and
movsl
pusha
pop
xlat
std
xor
adc
jno
stos
push
push
inc
dec
xchg
cmpsl
movsl
xchg
inc
dec
add
aaa
aam
test
dec
dec
and
sbb
and
push
cmp
mov
pusha
adc
or
inc
dec
pusha
fisttps
or
and
adc
test
inc
mov
inc
mov
push
or
rclb
sbb
xor
dec
jg
inc
test
add
out
fisttpl
sub
add
xor
je
jmp
pop
cmp
jb
pop
pop
js
nop
xchg
pcmpeqb
in
push
imul
push
inc
sub
mov
add
cmp
cmp
add
jl
mov
add
jle
orb
decl
scas
incb
clc
in
jg
mov
cmpb
clc
sub
fisttpl
or
jge
lret
mov
or
push
lcall
scas
cmp
sahf
pop
push
push
addl
pop
and
or
std
mov
loopne
imull
add
sti
push
xor
jp
pop
push
push
push
push
lock
and
push
push
push
dec
fwait
add
and
add
add
add
push
movb
add
ret
xor
cmp
adc
mov
sub
insb
sub
jb
pusha
inc
jge
iret
js,pn
jg
sbb
mov
hlt
sbb
cli
adc
imul
xchg
cs
jp
sbbl
xchg
shlb
sub
and
test
dec
enter
scas
lret
mov
pushl
in
mov
mov
push
inc
push
dec
xor
jg
rorb
push
outsl
lea
sbb
or
dec
aaa
int
inc
sub
mov
or
pop
shrl
push
push
pop
insb
jecxz
sub
outsb
jb
inc
push
shl
push
je
push
mov
sub
outsb
adc
or
adc
fstl
push
cld
push
and
or
mov
mov
and
add
je
push
bound
out
movl
cmpb
sbb
rol
add
cmp
push
call
jo
add
xchg
mov
pushf
movzwl
sbb
ret
and
arpl
ret
mov
imul
push
gs
rclb
jge
push
ds
sub
push
es
outsl
xchg
mov
push
lds
and
add
jle
pop
jae
in
sbb
cmp
jne
mov
push
les
jge
cmpb
xor
cmp
pop
das
pop
adcb
sbb
lods
pop
pop
inc
ss
sbb
addl
dec
add
mov
cmp
add
push
call
mov
pop
imul
inc
cmp
inc
sbb
pop
lds
cwtl
mov
mov
push
xlat
jge
in
inc
test
aaa
mov
std
jnp
iret
push
shrl
push
push
mov
je
test
pop
add
add
xor
ja
mov
xor
negb
dec
repnz
sbb
sbb
add
enter
mov
out
dec
fiaddl
loopne
neg
mov
xor
cmp
push
cmp
in
xor
cld
xchg
subb
inc
and
push
jg
or
or
rclb
daa
xor
ret
cs
shl
insb
shlb
mov
mov
pop
fcoms
mov
ret
push
js
sbb
loopne
loop
jbe
add
push
or
rclb
mov
push
pop
inc
sbb
mov
shl
push
dec
cmp
fwait
les
pop
push
addr16
xor
icebp
pushf
pop
inc
pop
lret
fistpl
adc
pop
ret
fcomip
mov
cmp
shrl
add
adc
aas
cmp
push
inc
les
cmp
scas
or
inc
clc
xor
push
jo
add
jae
gs
or
sbb
enter
js
js
mov
add
adc
sbb
lock
mov
pusha
xor
das
mov
lock
xor
inc
inc
add
push
aam
xor
call
pop
rorb
mov
push
jb
pop
cld
mov
jbe
inc
bound
cmp
jae
call
aaa
ret
cmp
pushf
adc
sbb
add
add
mov
pop
lea
pop
aam
insb
popa
push
rcrl
jl
mov
cmp
and
pop
inc
and
sub
pushf
or
sub
imul
fdivrl
sub
push
sub
sbb
push
cmpsl
push
and
movl
loopne
fadd
mov
add
addb
in
adc
inc
mov
jle
mov
pop
divb
ljmp
lea
jne
push
push
push
push
adc
inc
adc
mov
mov
push
push
out
leave
add
xchg
or
adc
add
add
sbb
jae
movsb
cli
pop
add
xchg
pop
sahf
call
mov
cmp
xlat
testl
xchg
repz
and
sub
ja
mov
add
pop
add
and
mov
sbbb
ror
ret
add
mov
xor
jb
inc
adc
hlt
aam
mov
mov
movzbl
xchg
loopne
pop
ja
adc
rcr
lahf
add
test
or
jle
neg
dec
mov
mov
test
lods
mov
add
daa
dec
and
pop
aas
add
adc
clc
pop
ja
and
rcrl
ss
or
add
jo
cmp
mov
out
dec
inc
push
dec
dec
pop
push
pop
fadds
jecxz
jmp
pop
sbb
mov
and
xchg
cmp
or
aad
push
repnz
outsb
xor
cs
mov
je
or
adcl
mov
jne,pn
mov
inc
je
or
lea
dec
outsb
mov
out
fwait
mov
pop
decl
cmp
or
int
test
jmp
es
mov
jne
push
and
add
call
lea
lea
mov
out
xchg
lock
push
inc
and
call
fimull
mov
pop
fisttpll
sbb
cvttps2pi
cmp
sbb
lcall
notl
or
out
inc
push
mov
mov
or
pop
mov
push
and
je
movsl
adc
mov
and
stos
hlt
add
mov
popa
push
ja
cmp
cmp
ja
jne
sbb
mov
jl
jb
outsb
js
or
je,pt
sub
ds
test
cmp
adcb
ret
dec
push
loop
jle
sub
inc
xor
cmpsb
pop
cmp
jne
mov
cld
push
push
iret
cli
cmp
ss
and
adc
sbb
dec
cmpsb
inc
pop
nop
mov
xchg
mov
cli
and
or
ret
adc
jmp
outsb
cli
inc
cmp
jb
cmp
ja
data16
sub
jmp
cmp
jb
cmp
ja
and
ljmp
pop
lock
cmp
xor
add
cmp
pop
push
cmp
ss
fdivs
inc
fidivs
mov
pop
dec
pop
pop
mov
or
add
jmp
cwtl
aas
xor
and
ss
cld
sub
or
jle
push
add
stos
jne
ret
push
test
rcrl
push
or
adc
mov
jae
mov
jmp
push
pusha
aas
sbb
fildl
adc
jo
jne
adc
mov
andb
imull
pusha
or
insb
and
pop
xchg
add
xchg
xchg
lret
cmp
pop
ljmp
test
icebp
cld
out
sbb
and
test
adc
je
test
jne
sub
cmpsl
inc
into
sub
jb
or
dec
lock
dec
cmp
and
xor
add
add
inc
ss
pop
or
rcll
push
add
inc
fldl
jnp
pop
mov
inc
and
push
inc
outsb
and
std
cmpsb
jb
mov
mov
cltd
dec
imul
adc
push
inc
lods
jae
add
jbe
add
pop
ja
ret
mov
sbb
shlb
push
adc
rorl
cmp
ret
jge
insb
cmp
mov
inc
mov
imul
xchg
adc
xchg
jb
faddl
sbb
pop
jg
fsubrl
add
xlat
jbe
sahf
add
cmpb
test
pop
pushf
sbb
xchg
mov
sub
aas
lods
pushf
add
lock
xor
jae
cmpl
sti
sti
shr
scas
aam
push
das
mov
or
mov
fidivl
push
xor
sti
jge
mov
lods
cmpb
and
shll
pop
cmp
inc
insl
stos
in
pushf
fs
dec
out
add
jg
test
fiaddl
andb
push
ret
push
jo
push
sub
inc
movsl
cmp
leave
sub
cmp
aam
test
test
pop
sbb
out
add
movb
mov
push
arpl
mov
mov
adc
je
cmp
je
xchg
jae
jecxz
add
lock
je
sub
es
xchg
int
mov
or
pop
dec
lcall
pop
fadds
dec
push
jmp
xor
data16
decl
xor
jl
int
aas
mov
mov
stc
pop
add
push
movsb
sub
lea
sbb
icebp
je
and
sbb
adcb
inc
paddsw
popf
push
jle
add
sub
mov
into
test
mov
push
mov
mov
sub
xchg
jmp
xchg
notb
cmp
je
push
imul
cmc
mov
jmp
add
out
out
shlb
mov
push
nop
xchg
add
xchg
movsl
sahf
pop
mov
mov
inc
push
xor
xor
aam
not
movsb
and
xchg
rolb
fwait
add
jns
cmc
icebp
pop
pop
inc
cmp
jb
mov
push
jb
lock
adc
push
out
mov
clc
pushf
cmp
je
lea
mov
popa
mov
mov
dec
mov
adc
mov
sub
cltd
clc
push
push
lahf
test
jecxz
mov
mov
add
or
daa
mov
enter
jb
mov
jnp
daa
lahf
inc
int
lea
rcll
fcoms
les
ret
xchg
lods
jg
add
jmp
out
lock
and
mov
lahf
push
fs
push
lea
inc
xchg
sbb
divl
popf
pop
lahf
addl
addb
incl
add
movsl
xor
sarb
out
stos
nop
ss
adc
or
lea
in
cmp
or
out
inc
jg
mov
pop
cmp
and
inc
inc
add
leave
inc
mov
lods
xchg
adc
rol
mov
lret
ret
data16
cmp
roll
pusha
push
roll
jns
adc
test
mov
mov
mov
mov
dec
cld
sub
imul
mov
mov
xor
mov
mov
pop
sbb
pop
sub
cmpsb
xchg
notl
cmp
mov
divl
das
icebp
cmp
test
and
rol
mov
in
jne
ficoml
fwait
out
adc
mov
aad
ja
jb
cmp
jne
or
iretw
pushf
data16
adc
sub
mov
add
mov
xchg
jns
add
add
mov
or
add
imul
outsb
add
xor
js
loopne
and
cmp
je
ficoml
insb
fcmovne
out
cmp
inc
mov
push
inc
inc
inc
jne
movsb
outsb
jmp
pop
movb
sbb
jne
outsl
insb
mov
add
rcl
push
lods
adc
rorl
push
mov
psubusw
pop
xor
out
ljmp
cltd
jl
rcrb
test
sub
fdivp
mov
je
inc
popl
jne
stos
and
and
xchg
mov
das
clc
jmp
xchg
insb
push
push
xchg
push
xchg
push
mov
xor
add
mov
jp
jmp
jmp
lock
cmp
je
cmpb
cmp
jne
arpl
lea
push
jne
pusha
jecxz,pt
gs
cmp
addl
inc
inc
inc
inc
inc
mov
xchg
js
mov
mov
mov
jmp
test
adc
ret
js
ret
xchg
sbb
or
scas
call
xor
imul
stos
out
mov
sub
outsb
cmp
or
mov
jne
fcmovne
pop
inc
inc
mov
int
mov
push
sbb
cmp
sbb
dec
clc
rorb
push
fucom
in
xchg
and
in
cmp
inc
dec
sub
and
jbe
shrb
push
and
or
jge
test
or
jmp
add
dec
sub
je
or
je
push
pop
jne
inc
call
sbb
rorb
push
not
adc
sub
test
addr16
mov
js
movsb
test
mov
and
dec
fldt
sub
xor
aas
xchg
lret
cmp
inc
mov
mov
mov
rorl
and
sbb
sbb
aam
ss
push
sub
lea
sbb
adc
adc
cmp
mov
dec
and
mov
push
lea
xchg
xchg
loop
inc
and
or
pop
test
sub
mov
lret
lds
xchg
lret
in
inc
xor
cmp
pop
mov
cs
hlt
jb
mov
adc
aas
and
push
sbb
jmp
mov
imul
test
ret
in
sub
mov
or
lods
add
pusha
mov
inc
insl
loope
js
fcoml
stos
sub
cmp
add
into
dec
or
pop
mov
sbb
or
sub
mov
popf
pop
push
push
je
pop
jns
pop
out
sbb
or
mov
sub
xor
and
fimuls
push
and
insb
imul
sbb
inc
ds
add
cmpsb
test
push
push
dec
ret
rorb
adc
nop
es
rorl
mov
or
bound
dec
dec
xchg
or
mov
cmp
add
lret
mov
sbb
lock
add
sub
jo
or
add
mov
add
data16
push
push
pop
jmp
sub
push
jb
adc
cmp
in
adc
push
rcrb
xor
sbb
or
pop
out
insl
fcoml
jge
mov
rcl
and
inc
inc
or
loope
xor
xor
push
ds
popf
sub
mov
sbb
in
addb
or
or
aas
rorb
add
rolb
mov
or
leave
nop
movl
sbb
inc
dec
data16
shl
test
cmpl
jne
sub
mov
call
sbb
xor
adc
jbe
mov
fs
fwait
mov
movsb
shrl
push
inc
lock
in
aas
sub
jle
xchg
push
pushf
mov
mov
test
adc
mov
dec
lock
dec
mov
cmp
cld
subl
es
and
sbb
sub
mov
inc
mov
ficoms
cmp
mov
inc
fldt
sub
inc
pusha
xchg
cltd
mov
push
push
adc
dec
add
into
fimull
rolb
shrb
add
adc
lea
push
popf
and
loopne
cmpsl
shrl
cmpsl
adc
push
dec
xchg
pop
pop
cmp
sbb
add
ret
lock
in
inc
or
mov
pusha
pusha
ds
mov
into
pop
fldcw
mov
add
adc
js
pop
pop
jbe
sbb
sbb
in
push
nop
mov
or
push
add
imul
add
jmp
aas
xor
sbb
rsqrtps
js
rcrl
adc
or
jecxz
xchg
iret
leave
and
int3
pop
dec
adc
and
ret
add
notl
in
daa
cmp
test
loopne
jl
adc
pop
xor
les
aaa
push
cltd
jbe
push
cmp
shll
inc
imul
mov
or
dec
or
xlat
push
inc
dec
sbb
push
adc
jp
lcall
cmp
add
and
push
fsubrl
and
push
cmpsb
add
pop
ret
xor
cwtl
jg
add
and
frstor
bound
push
sub
out
ret
mov
or
or
add
add
rorb
push
adc
rcll
imul
add
cmp
and
dec
cmp
and
incl
int
jb
xchg
sbb
and
aas
lret
repz
fistps
ffree
add
testb
or
or
sbb
mov
scas
cld
jge
sub
mov
push
bound
cmp
or
or
lret
loopne
jge
ret
fadds
jae
pop
push
push
jo
add
es
adc
mov
xchg
add
or
icebp
sub
repnz
data16
pusha
pop
mov
push
or
lods
or
rcrb
lods
int
lret
pop
pop
dec
xor
cmp
push
xor
jo
mov
rcr
dec
or
jg
mov
dec
adc
or
add
inc
inc
or
xchg
jnp
sbb
pop
inc
orl
pop
sbb
mov
mov
adc
lds
jle
mov
jae
mov
dec
lods
push
pushf
jg
inc
js
jno
inc
jae
jae
push
pop
stos
sbb
lahf
or
sub
pop
fldpi
mov
sub
shlb
pusha
nop
and
mov
push
push
add
inc
push
push
test
sbb
and
test
bound
xor
jb
mov
cwtl
int3
and
loop
mov
push
and
rol
mov
mov
jae
clc
sbb
pop
loopne
test
sub
mov
test
mov
or
jg
xor
push
and
mov
cld
sbb
mov
inc
cmpsb
adc
mov
lods
xor
mov
mov
decl
mov
rolb
dec
popf
inc
adc
jecxz
in
mov
lock
adc
aaa
test
cli
fsubl
cmp
add
cld
sub
nop
and
and
lea
cmp
or
xchg
add
nop
fildl
push
xor
pop
ja
add
cmp
js
pushf
aam
jl
cmp
jno
mov
fmull
rclb
pop
mov
fs
je
add
inc
push
loopne
sbb
lds
or
push
add
add
fadd
data16
jo
lea
or
add
aas
imul
mov
or
add
scas
mov
dec
inc
and
push
leave
arpl
or
imul
gs
xor
push
popa
push
mov
push
adc
out
sti
sbb
sub
add
fcoml
and
cmp
and
add
pop
add
lahf
add
and
add
pushf
sbb
adc
dec
mov
sub
cmp
xor
or
dec
xchg
and
mov
mov
and
adc
dec
into
addr16
roll
jbe
fnstenv
sbb
or
aaa
scas
sub
mov
ror
push
adc
dec
push
fs
cmovs
or
add
xchg
sti
mov
aam
push
addr16
dec
fmul
or
or
mov
and
addl
pop
mov
sete
repnz
push
aas
xor
adc
or
inc
int3
push
mov
xor
push
add
or
inc
ficoms
push
hlt
adcb
aad
or
jmp
jge
std
inc
inc
idivb
leave
cwtl
scas
ja
mov
nop
je
pmulhuw
daa
es
sub
add
aam
mov
cmc
pop
into
mov
int3
xchg
test
popf
pop
push
ret
lcall
loopne
inc
and
jnp
push
leave
push
hlt
or
push
loope
add
js
pop
fmull
adc
test
push
push
test
mov
movsl
rcrb
xor
and
adc
xor
stos
pop
push
jns
and
jno
mov
push
fdivr
mov
push
into
pop
and
and
push
dec
adc
xor
and
mov
pop
fs
xchg
adc
mov
stc
js
adc
push
loopne
xor
stos
mov
xor
sbb
cmp
sub
and
imul
adc
inc
cwtl
adc
dec
adc
pop
pop
push
or
into
mov
inc
cld
dec
pop
loope
cs
clc
add
ja
popa
push
movsb
or
repz
imul
or
sbb
add
stc
flds
mov
adc
lods
nop
lret
inc
cmp
iret
jae
sbb
and
sbb
stos
ds
jecxz
adc
xchg
mov
adc
push
xor
sbb
aaa
sub
lcall
and
ret
cmpsb
std
cmp
sub
adc
cmp
and
pop
leave
or
pop
pop
xchg
sbb
push
xor
xchg
xchg
dec
outsb
xchg
and
jns
adc
cld
pop
aas
or
add
cmp
and
push
push
and
pop
push
jmp
shll
add
shr
mov
jns
add
in
jg
xlat
movsb
dec
and
jl
dec
mov
push
jo
lahf
cmp
mov
push
inc
jne
dec
or
or
sbb
shlb
ret
nop
fisttps
xor
and
cmp
sbb
and
lcall
test
mov
push
cmp
pop
push
pop
mov
inc
and
mov
and
jo
lods
mov
sbb
in
pop
cmp
repz
fdivrp
jns
cmp
sbb
leave
cmp
pop
sete
fists
cmp
ljmp
int
and
push
adcl
cmc
pop
call
add
in
xchg
jmp
sbb
je
sub
lea
or
fs
cmpl
adc
sbb
mov
sub
and
sub
inc
icebp
out
sub
outsb
add
out
inc
push
mov
testb
sub
stc
out
outsb
sbb
jle
dec
mov
dec
jmp
fistpl
je
push
pop
push
sarl
popa
sbbb
jno
loopne
ss
adc
and
das
std
test
xor
pop
jne
mov
dec
mov
ja
test
out
inc
add
inc
or
je
push
add
in
cmp
sub
dec
in
ret
and
jne
pop
mov
pop
add
add
rcll
xor
push
stos
push
bndstx
lret
aad
insb
and
shl
sub
fcomps
out
rolb
mov
xor
xor
scas
dec
push
pop
pop
cmp
add
dec
js
cmc
fistpl
mov
mov
add
lcall
pop
push
js
or
and
sbb
fdivl
ss
lds
pusha
inc
dec
add
mov
iret
mul
add
mov
add
or
dec
cmp
or
add
sbb
mov
adc
andb
or
add
aaa
dec
or
outsl
sbb
fnstenv
idiv
add
mov
push
push
add
rolb
mov
outsl
add
jp
and
jne
pop
add
add
loop
mov
cmp
lock
xchg
fwait
push
mov
xorb
mov
les
outsl
mul
dec
or
sub
andl
pop
fdivs
icebp
cmp
add
or
adc
dec
inc
jns,pn
sbb
push
es
data16
sbb
sbb
dec
xchg
or
mov
cmp
in
mov
sub
inc
dec
jp
cmp
and
adc
popf
xchg
insb
adc
mov
jl
sahf
test
cmp
popl
mov
jmp
or
pop
jmp
jg
and
and
lods
mov
mov
nop
dec
xor
inc
pop
and
or
cmp
xor
test
loop
lea
pop
mov
movsb
iret
mov
sarl
pusha
cmp
fincstp
push
clc
or
xchg
fldl
adcb
xchg
das
pop
jmp
mov
add
pop
push
test
adc
shll
mov
cmp
cwtl
lret
inc
ss
gs
push
sahf
add
cmp
xchg
mov
sbb
sbb
popf
sbb
or
loopne
subl
xchg
test
imul
sbb
mov
aad
and
sbb
pop
mov
dec
adc
mov
mov
push
sub
pushf
repnz
pop
movsl
sub
push
pop
subb
stc
mov
add
js
or
mov
push
push
mov
repnz
fstpl
sbb
add
or
mov
lret
sub
dec
push
or
call
or
inc
jecxz
sub
jge
add
rcrl
movsl
fs
fbld
js,pn
bound
mov
pusha
push
adc
add
fcoms
xor
inc
inc
stos
cld
es
push
jmp
sub
push
push
or
stos
xchg
insb
ja
or
pop
mov
orl
add
inc
sahf
pop
or
sbb
inc
dec
je
je
pop
mov
lret
cmpsb
ss
and
inc
mov
mov
dec
aam
je
or
fisubrs
out
or
adc
pusha
inc
sbb
fldl2t
lods
int
sbb
adc
jp
mov
punpcklwd
das
adc
jo
arpl
les
add
pop
cltd
out
dec
in
stos
sbb
jl
pushf
jmp
pop
test
dec
add
addr16
add
xchg
sub
cmp
sbb
inc
lods
xchg
mov
fsubs
orl
ja
mov
cmp
pop
push
arpl
js
push
fsts
xorl
sub
sbb
rcr
cmp
iret
sbbb
adc
jne
adc
pop
or
mov
push
cmp
and
leave
in
adc
add
lcall
pop
hlt
mov
cltd
pop
xor
ljmp
adc
mov
or
shrb
addb
add
or
push
add
or
mov
test
adc
xor
or
imul
icebp
lcall
jae
inc
or
cmpsb
movsb
xor
lahf
adc
sbb
jmp
or
push
neg
ret
sbb
aad
sbb
xchg
or
add
mov
inc
jecxz
mov
add
dec
in
add
adc
int
mov
in
stos
movsl
adc
inc
cmp
xchg
xchg
loop
push
add
mov
push
push
sbb
jnp
jbe
outsb
das
arpl
xor
and
add
jo
sub
lock
pop
add
mov
push
rcl
fdivs
pop
cld
cmpl
inc
out
cld
mov
xor
rcr
pushf
mov
pop
or
pop
push
fcmovnu
scas
loop
jmp
lea
mov
aam
jb
call
pusha
push
adc
rorb
out
loopne
in
xor
pusha
and
daa
xor
and
sbb
jp
dec
cmp
or
jge
jecxz
adc
cmp
push
test
in
andps
xor
adc
hlt
jae
sbb
je
mov
adc
xor
mov
jl
xor
add
jecxz
sub
mov
sbb
popa
rorl
sbb
push
je
sbb
cwtl
sub
sub
rcll
ret
pop
mov
js
bound
cmpl
push
dec
xchg
cld
sahf
mov
push
std
push
adc
and
inc
lret
sbbb
mov
test
adc
ljmp
mov
adcb
jo
sbb
push
xor
add
or
add
cltd
dec
sahf
or
and
shrb
test
or
test
jns,pn
xchg
push
mov
imul
and
je
pop
mov
cmp
lods
mov
and
repnz
add
enter
lahf
lahf
inc
pop
mov
mov
out
loopne
insl
jnp
inc
jbe
dec
mov
adc
xchg
mov
and
adc
cmp
pop
inc
adc
dec
dec
or
cs
gs
mov
pusha
lea
add
push
mov
or
fsubs
adc
mov
ficomps
mov
mov
or
add
push
ljmp
jecxz
sbb
xor
rolb
and
sub
jne
lds
add
sbb
fld
sbb
add
cmp
mov
xchg
es
mov
inc
mov
push
sahf
cmpl
test
test
push
add
ss
addr16
ret
or
sbb
lods
cmp
lahf
outsb
add
rclb
and
jb
add
mov
or
pop
aam
shufps
lds
cwtl
push
jg
jp
inc
leave
and
xor
push
push
pushf
pop
pop
mov
inc
xchg
xchg
sub
add
sbb
ljmp
xchg
mov
dec
or
adc
add
push
adc
or
dec
je
push
and
sub
xor
cmp
xchg
enter
add
inc
jecxz
pop
scas
fsubl
pop
or
jge
and
cmp
aas
push
jbe
xchg
lea
outsb
lock
je
es
lahf
fadd
inc
push
rorb
add
inc
sub
inc
data16
es
jle
mov
cmpb
push
aam
rclb
ds
push
sub
adc
or
jne
cmp
je
stos
add
out
rolb
add
add
mov
pop
push
sub
fisttpl
rcll
push
sub
jecxz
jo
or
shl
shlb
pop
cmpb
decl
lret
mov
add
mov
das
pop
xchg
or
xor
dec
andl
es
add
adc
mov
lret
xlat
jge
push
mov
pop
xor
add
out
fisubrs
pop
xchg
gs
push
inc
pop
mov
xor
loope
cli
push
fildl
cmp
aaa
loope
clc
mov
cmp
jbe
cmp
jbe
cmp
shll
or
sbb
cmp
mov
neg
push
push
clc
lods
fiaddl
xchg
outsl
mov
cli
fldenv
push
pushf
push
add
push
push
lret
ss
in
xor
pop
xor
xchg
mov
les
pop
and
flds
and
pop
lock
dec
sbb
sbb
enter
add
jo
dec
inc
and
inc
xor
out
xchg
jnp
ja
inc
daa
lea
pop
pop
sbb
push
test
mov
lahf
jle
ret
lods
mov
inc
xchg
sbb
push
popf
cmpb
js
sbbl
mov
repnz
push
aas
push
or
decb
mov
jbe
pop
rolb
ds
mov
mov
add
fisttps
hlt
adc
xchg
rorb
sub
cltd
xlat
fsts
jp
daa
inc
jl
cmp
dec
xchg
mov
dec
shlb
and
cmp
sbb
push
lods
leave
push
cs
push
test
inc
stos
jne
adc
je
les
lock
mov
rclb
fdivp
or
inc
ljmp
es
push
lea
push
inc
push
mov
or
or
lret
stc
sbb
pop
es
mov
xchg
clc
inc
cmp
ss
sbb
push
lret
cmp
nop
sbbb
stos
push
icebp
sbb
ret
pop
or
inc
jne
push
jge
movsb
out
inc
cmc
jns
rclb
mov
pop
cmp
xchg
or
add
xor
sub
push
das
mov
dec
or
xlat
lret
push
push
mov
sbb
jae
xorl
fistps
sub
enter
xchg
cmp
cmp
xor
sarb
add
insb
or
add
or
inc
add
jmp
movsl
subl
mov
mov
push
nop
pop
pop
aad
push
push
sbb
push
cmp
or
fs
adc
mov
in
push
pusha
mov
pop
ret
out
ja
pop
add
inc
or
sub
and
and
sub
add
dec
ja
into
jmp
mov
mov
jge
mov
loopne
lahf
aas
or
rol
lock
mov
lods
xor
sub
test
aam
cltd
test
lds
nop
lcall
mov
rcrb
and
imull
sbb
pop
or
sub
sbb
mov
and
scas
js
icebp
xchg
xchg
add
stos
pop
mov
jbe
push
les
mov
push
push
cmp
adc
faddp
xor
add
push
rcrl
test
mov
imul
jl
aad
ds
inc
mov
and
adcl
rolb
mov
and
dec
add
pop
sbb
push
jnp
mov
shlb
or
and
fs
in
je
inc
je
fwait
cs
push
and
std
testl
pop
fmull
test
sbbl
push
mov
mov
fwait
push
cmpsl
out
add
sarl
jbe
mov
sub
or
in
sbb
mov
cld
cmp
mov
aas
sub
add
lods
imul
push
push
add
and
dec
shlb
mov
lea
shlb
lock
mov
movsb
and
cmp
in
sbb
dec
mov
test
mov
add
push
in
in
pop
mov
decb
push
mov
pushw
xchg
dec
mov
or
mov
pop
lret
mov
jge
add
shlb
cs
rclb
imul
jge
rorl
add
cmp
mov
cmpl
dec
adcl
mov
lock
sbb
jbe
inc
inc
or
pop
add
cmp
adc
ljmp
std
mov
push
and
xchg
mov
inc
xchg
rcr
leave
dec
jae
jne
mov
pop
movsb
jle
push
push
cmpl
sub
add
push
and
xor
cmp
jge
push
mov
jle
mov
push
xchg
mov
mov
xor
fidivrs
pop
clc
jg
mov
movb
sarb
and
push
add
or
xchg
and
xorl
ret
cmp
add
in
ret
xorb
aad
add
and
push
cmpsb
add
fmuls
fdivrs
mov
aam
cmp
cmp
stos
and
ret
jmp
psraw
rcll
mov
data16
xchg
decb
adc
adc
dec
xor
lea
int
jo
add
rolb
in
push
nop
or
or
or
push
scas
push
cli
loope
lock
paddusb
int3
rolb
loopne
mov
adc
adc
aaa
cs
xlat
or
cmp
shufps
lods
adc
jl
negl
inc
or
jp
mov
and
adc
enter
out
jns
imull
push
outsl
jle
out
nop
fildl
add
jo
mov
or
add
xchg
mov
jb
outsb
test
fs
or
aaa
push
push
je
cmp
mov
push
push
mov
loop
add
dec
in
push
and
repz
adc
imul
and
adc
and
mov
xor
jge
cmpl
sbb
mov
clc
mov
cmp
xor
fildl
in
adc
iret
lahf
cld
call
adc
clc
jns
outsb
or
fnstcw
test
lods
push
ret
xchg
add
sti
jb
aad
mov
add
jmp
mov
xchg
sub
adc
inc
sub
xor
jbe
sahf
push
shlb
clc
dec
cli
dec
lret
daa
and
sub
iret
cmpsb
lock
dec
iret
aaa
cmpsb
gs
cld
adc
xchg
xchg
jle
adc
int
pop
adc
jae,pt
sti
data16
sub
push
jbe
inc
cwtl
and
insl
lock
arpl
adc
lock
adc
add
jmp
ret
ds
dec
sub
subb
adc
mov
or
clc
inc
mov
or
lea
push
push
aaa
jp
or
adc
bound
pop
or
pop
setbe
inc
and
clc
add
push
into
cmp
jbe
pop
stos
and
cwtl
mov
mov
fidivrl
push
or
sub
repnz
cmp
jb
cmp
in
roll
loop
and
jne
dec
jl
xor
mov
mov
cmp
inc
shld
lds
stos
out
jl
and
in
add
adc
inc
shlb
pop
sbb
xor
jg
jl
jmp
dec
sbb
push
dec
cld
vmread
jge
je
jg
lea
mov
or
mov
rolb
movl
sarl
adc
jl
mov
xor
stos
faddl
in
int3
adc
jl
jo
lea
mov
dec
ja
xor
push
inc
xor
je
out
adc
sbb
add
push
js
mov
sar
pop
adc
xor
jmp
inc
push
jne
inc
push
mov
add
daa
sbb
sbb
mov
add
aaa
sub
nop
or
adc
jno
outsb
mov
push
sub
inc
rol
cmpsb
adc
pop
jp
or
sbb
mov
xor
mov
or
push
xchg
xchg
lret
es
add
test
adc
shl
daa
clc
add
test
je
pop
sbb
push
xor
jg
movsb
add
pop
in
jmp
test
cmp
pop
jmp
sub
adc
inc
and
dec
pop
push
repz
add
add
inc
test
or
jl
loopne
xchg
pop
in
mov
add
xor
sbb
cmp
push
sub
inc
loope
inc
fcoml
jmp
rcrb
pop
sub
push
add
mov
xchg
jbe
jmp
push
add
fst
rclb
ss
jne
or
pop
pushf
jne
shrb
fildll
mov
dec
test
mov
jno
je
pop
push
loopne
arpl
scas
push
dec
dec
sbb
loop
add
adc
sub
inc
pushf
push
movsl
push
repz
or
loop
fwait
cmpsb
es
imul
lea
pop
cmpsl
fwait
push
add
cmp
fxch
add
ret
xor
in
mov
pop
jl,pn
pop
movsb
adc
lcall
cmc
pop
stos
sub
insb
push
fcoms
lds
test
mov
or
in
je
xor
add
in
dec
roll
or
sub
jmp
pop
mov
inc
and
in
adc
mov
lcall
inc
add
inc
sbb
ret
in
imul
or
and
jge
dec
in
pop
push
mov
lea
push
aam
mov
cmp
mov
mov
adc
lea
dec
ss
ljmp
mov
mov
jl
push
loop
sub
arpl
out
loopne
sbb
or
or
lea
dec
sub
jl
lds
notl
add
sete
mov
stos
hlt
cmpb
ret
std
aam
add
test
ret
fidivl
push
and
inc
mov
in
mov
and
push
inc
clc
push
push
add
icebp
add
mov
pop
mov
mov
fs
cmp
cmp
push
stos
dec
or
adc
jo
push
pusha
push
mov
out
add
adc
or
add
inc
scas
jae
aad
xchg
xor
icebp
fidivrs
sarb
push
gs
es
arpl
incl
mov
adc
mov
shl
add
inc
add
mov
icebp
push
ficoms
pushf
test
scas
rcrl
add
sarb
push
sub
dec
or
xchg
clc
mov
sub
inc
sbb
adc
fisttpl
dec
dec
sub
cmp
adcl
adcb
pop
ret
mov
and
sahf
push
fmull
ljmp
jbe
pop
cmp
xor
das
add
mov
pusha
pop
or
mov
cmp
xor
clc
inc
cld
mov
or
push
or
cmp
push
add
or
push
push
push
mov
in
mov
mov
pushf
adc
jge
jbe
mov
test
mov
inc
popa
add
mov
sahf
das
lods
shrb
add
add
jo
mov
fadds
mov
fnstcw
movzwl
add
or
xlat
enter
insb
fistpll
fidivl
outsb
mov
adc
mov
inc
cmp
xor
aaa
aad
or
sub
cmp
popa
jo
xchg
scas
add
int3
sbb
pop
or
test
xor
das
sub
orb
add
pop
jl
shll
push
and
push
add
or
fs
fistps
push
insb
add
cmp
xchg
loop
and
cli
lcall
cwtl
push
dec
fsubrl
mov
pop
or
cmp
decl
xchg
and
add
sti
jmp
sub
inc
scas
movl
sub
aas
pop
das
or
cmp
stos
jne
push
push
cld
fidivrs
pop
out
mov
adc
sub
mov
cmpl
xor
xor
ljmp
iret
fidivl
adc
dec
and
in
pop
sub
push
and
test
and
dec
adc
xor
fsubrl
push
jb
repz
rolb
jecxz
pop
jg
int3
out
iret
out
out
shrl
push
andl
or
xlat
nop
jp
add
add
mov
rcrb
push
xor
ret
add
or
mov
add
xor
cmp
iret
repz
test
es
add
test
sbb
pop
out
into
test
mov
lods
roll
or
xchg
cld
adc
mov
add
fiaddl
fs
cli
cmovno
xor
data16
or
lea
stos
add
test
cmpsb
in
sbb
inc
lods
sahf
sbb
mov
lea
cmp
aam
je
dec
in
stc
fucomp
mov
xchg
jmp
lea
sub
push
mov
push
push
shrl
inc
push
jbe
xlat
adc
mov
cmpsl
or
cmp
into
in
lock
hlt
and
lahf
iret
mov
xchg
cmpl
or
les
in
in
ljmp
inc
xchg
and
pop
outsl
cmp
inc
mov
mov
sub
push
add
dec
pop
pop
and
adc
xchg
cwtl
sub
dec
std
sbb
ret
in
and
sub
mov
inc
or
fnsave
cmpb
cmp
sbb
or
pop
add
dec
push
dec
into
cwtl
mov
inc
push
lea
stos
xor
call
pop
push
mov
add
mov
daa
pop
and
add
and
ficompl
mov
cmp
or
js
js
sbbb
adc
iret
pusha
cmp
and
mov
sbb
cmp
dec
stos
imulb
shrb
mov
shll
imul
std
push
popf
insb
imul
sahf
testb
adc
jns
dec
inc
mov
hlt
push
mulb
push
inc
cs
mov
pop
ficomps
mov
fs
xchg
fisubrs
call
xchg
mov
dec
jbe
lock
and
jbe
xor
mov
push
cli
inc
push
cmc
aad
dec
sub
nop
cmp
jne
jbe
jns
sbb
jp
xor
or
loop
lods
fndisi(8087
je
inc
add
jne
mov
daa
cmp
sub
aam
clc
xor
adc
xor
sbb
push
xor
xchg
and
fldenv
mov
xor
pop
and
xchg
lds
mov
daa
add
jge
movsl
es
xor
js
pop
lock
cmp
cmp
jae
dec
sbb
nop
shlb
std
pop
add
and
jne
sbb
inc
add
push
adc
call
cwtl
dec
repnz
pop
sbb
push
icebp
loopne
cmp
sub
or
push
mov
test
lds
pop
das
in
adc
push
aaa
mov
push
cmp
imul
mov
sbb
roll
xchg
mov
jmp
and
push
or
adc
or
mov
cmpsl
push
pop
sub
je
data16
and
scas
jo
dec
mov
ja
and
mov
mov
mov
xchg
adc
sar
insb
lea
aaa
loop
dec
xor
cmp
mov
cltd
push
insl
nop
sar
pop
dec
je
pop
add
dec
jg
cmpsb
mov
mov
and
pop
mov
cmpsl
or
push
aas
mov
add
adc
inc
push
adc
adc
je
xchg
push
adc
or
adc
push
xorb
inc
pop
pop
jb
pop
and
test
and
mov
mov
fisttpl
test
lea
or
call
or
in
sub
cld
push
sbb
adc
and
xor
jbe
adc
sub
pop
jne
add
or
mov
push
mov
xchg
sub
int
jl
sahf
lds
add
or
mov
loopne
scas
xchg
mov
insl
mov
popa
mull
loopne
das
push
loope
push
inc
loopne
test
sub
jmp
lea
sahf
push
and
mov
push
sbb
pop
jle
and
sub
in
mov
inc
imul
or
in
stos
inc
adc
adc
sbbl
or
sub
clc
insl
xor
bound
sbb
inc
mov
mov
daa
push
add
add
test
add
pop
call
sbb
jne
int
loopne
aam
add
lret
sahf
add
sub
adcb
adc
or
xor
push
and
adc
js
repz
adc
decl
mov
push
shrl
mov
push
jne
inc
push
jecxz
dec
pop
dec
add
push
pop
fildl
test
fstps
flds
flds
cmp
cmp
dec
sbb
or
xchg
lret
flds
and
sbb
sub
fsubrs
fisttpl
push
sbb
popa
pop
jmp
adc
test
and
or
test
mov
jge
icebp
add
xchg
and
and
ja
or
and
cs
adc
sbb
cltd
lods
push
or
mov
fcomip
loop
nop
rcll
enter
sub
and
loope
jne
or
out
aaa
push
dec
in
or
insl
cmpb
mov
pushl
cmp
jbe
adc
push
andl
sahf
dec
or
pusha
sub
jne
jns
add
xor
clc
rorb
dec
sbb
mov
bound
jb
jl
movsl
xchg
mov
inc
insb
or
jg
shlb
mov
lock
and
ret
xchg
fisttpl
call
mov
sub
push
adc
outsb
xor
and
cmpsb
pop
push
sbb
mov
jo
dec
and
cs
adc
pop
lock
sti
add
iret
jl
jmp
movb
cmc
mov
cmc
pushf
aas
pusha
mov
mov
enter
loopne
lea
test
and
pop
dec
mov
mov
orl
mov
xchg
add
std
bound
ja
cmp
jae
xor
cmp
ja
fsubrs
push
fistps
add
es
cmp
test
ret
or
push
mov
push
push
ss
and
in
cmp
pop
push
sbb
mov
sahf
call
test
outsb
or
sbb
ss
ror
insb
push
mov
push
xor
push
push
push
pop
add
cmp
mov
lcall
add
popa
fsubs
add
pop
dec
and
mov
popa
or
and
das
ret
and
and
cmp
jo
lea
movsb
or
out
or
push
icebp
repz
pop
add
gs
mov
sbb
xchg
ds
mov
and
sbb
rolb
inc
dec
mov
fnstsw
mov
jb
jae
push
push
repz
mov
or
dec
xchg
adcl
or
xchg
js
loopne
pushf
lock
and
popf
sbb
dec
sahf
xor
clc
jae
cmpb
add
sbb
into
test
movsb
or
pop
xlat
add
stc
add
mov
cmp
andl
jmp
ret
or
add
push
pop
ljmp
inc
add
mov
stc
xor
shlb
mov
add
sti
sub
mov
pop
mov
sbb
pop
xor
pop
add
jg
jns
sub
loope
daa
into
leave
insb
lods
xor
test
fcomps
inc
mov
fsub
sarl
call
xor
or
push
lret
iret
jnp
dec
lahf
mov
inc
jbe
lea
mov
stc
sbb
xor
jmp
shrb
jmp
in
xor
testl
fadds
lea
mov
lea
push
mov
out
mov
movl
jne
lea
add
daa
call
imulb
mov
push
ss
pop
or
repz
sti
das
cwtl
inc
or
fcoml
mov
push
inc
rolb
sbb
test
cmp
add
add
es
lea
pusha
cwtl
adc
cmp
mov
dec
or
adc
addr16
push
push
push
call
sbb
jo
and
pop
sarb
cmp
out
cmp
xor
adc
or
scas
jmp
xor
loope
outsl
inc
loopne
pusha
addl
out
jnp
fwait
test
jge
mov
xchg
les
xchg
fcom
popa
lea
sub
cmp
fistpll
sarl
or
inc
outsb
pop
pop
jg
enter
mov
sub
sub
ffreep
pusha
inc
enter
add
dec
mov
iret
mov
mov
enter
sub
ds
sub
rcll
adc
mov
jo
push
jg
inc
mov
inc
cmpsb
jns
hlt
inc
push
lcall
insb
sbb
inc
mov
inc
imul
push
loope
sbb
mov
pop
test
cmp
xor
rclb
xor
outsl
dec
inc
frstor
ljmp
and
add
rcll
sbb
push
xor
mov
gs
cmp
in
iret
dec
inc
mov
testb
insb
jb
add
and
xchg
mulb
loopne
out
xor
mov
ds
push
push
push
jno
xor
mov
jmp
mov
test
sti
push
loop
aas
in
insl
loope
das
mov
lea
mov
push
pop
test
xchg
inc
lea
aas
or
andb
sbb
mov
ja
mov
push
push
inc
shl
push
aas
dec
mov
rcrl
mov
push
fsubrs
pop
push
push
or
add
in
and
ss
pop
sub
fcoms
sbb
pop
mov
sarb
ret
xchg
or
test
push
dec
xor
jp
mov
jb
aam
or
mov
fsubrs
rclb
orl
xchg
mov
fsts
je
push
out
add
roll
lds
sarl
sub
flds
icebp
add
dec
mov
je,pt
pop
bound
mov
fldpi
pop
jns
sti
call
xor
push
inc
shlb
sub
mov
repnz
ficoms
ret
sub
push
add
and
test
pushf
insb
mov
jmp
test
stos
pusha
or
clc
sub
cmp
mov
jmp
sti
xor
sub
roll
dec
jl
adc
xchg
xor
cmpsl
mov
cmp
xchg
jp
int3
shlb
jnp
loop
cmc
sub
add
or
pop
setge
jmp
pop
push
cmp
sub
call
cmp
jae
xlat
push
rol
add
inc
add
adc
enter
add
inc
and
dec
inc
jmp
decl
jg
repnz
jae
lea
push
cmpb
jne
rep
clc
adc
rol
add
sarb
lock
ljmp
neg
sbb
lods
les
sti
and
add
sbb
out
sarb
pushf
sbb
or
cmp
addl
mov
das
sub
add
or
lcall
lcall
and
push
test
int
mov
xchg
imul
mov
push
mov
xchg
aaa
inc
aad
push
nop
roll
dec
pop
shr
loop
jp
data16
jmp
xor
or
in
push
addr16
or
xor
push
clc
lret
push
ljmp
cmp
mov
pop
mov
mov
inc
adc
ret
or
cmp
push
jns
in
insb
adc
sbb
cmp
cmp
push
push
ret
arpl
dec
cmp
push
insb
and
adc
test
imul
insl
jne
mov
mov
adc
arpl
jg
sbb
addr16
cmpw
mov
add
dec
in
mov
ret
inc
mov
pop
inc
movsl
dec
xchg
add
fdivr
jle
push
jecxz
pop
inc
xlat
or
add
mov
jne
jecxz
lea
stos
jmp
mov
popw
inc
mov
call
xchg
pop
arpl
sub
dec
pop
aaa
or
xlat
cmp
sahf
xchg
xchg
jmp
or
je
call
icebp
insb
in
addr16
jb
push
jae
jo
sub
je
mov
sub
popa
std
mov
ja
inc
inc
push
std
insb
push
lea
sbb
in
mov
testb
leave
add
or
adc
pushf
data16
sub
adc
xor
add
add
fcmovne
or
cld
or
je
lret
fistps
add
jmp
push
loop
sub
cmp
push
mov
test
mull
and
sahf
movb
push
cmc
popa
filds
pop
add
ljmp
jb
xchg
pop
push
lea
ds
movsb
add
pop
ret
in
lea
xchg
inc
aad
mov
cs
lea
pop
mov
inc
push
shll
loope
add
jno
scas
fstp
cmp
push
xchg
jge
mov
ja
mov
push
orb
sbbb
inc
test
push
sbb
cmp
imull
jmp
dec
dec
insb
push
sbb
adcb
lea
jmp
mov
add
pop
test
sub
inc
jge
mov
mov
cmp
pop
mov
ret
jp
add
and
and
inc
js
jmp
pop
xor
pop
jno
dec
jnp
inc
lret
hlt
jo
dec
aaa
xor
clc
push
and
push
sbb
cs
in
lea
pop
lods
push
pop
lcall
dec
adc
sub
mov
xor
rorb
enter
push
xchg
outsl
or
jl
jge
test
push
cmp
add
int3
outsb
inc
push
mov
xchg
in
or
rcrb
push
push
cwtl
ret
xchg
jb
add
or
jle
inc
je
scas
jmp
in
ret
pop
jae
xor
add
movsl
test
or
cmpsl
mov
je
mov
adc
fwait
jmp
mov
fisttps
sub
adc
shlb
cmp
or
cld
xchg
mov
cmp
mov
push
dec
mov
mov
push
add
jmp
out
dec
or
add
outsb
adc
ljmp
cmp
xor
mov
and
call
push
push
ret
arpl
lds
add
push
movsl
jno
in
mov
mov
mov
push
popa
sub
adc
imul
lock
sbb
mov
mov
and
add
nop
or
mov
lds
call
outsl
or
push
and
sbb
out
cmpsb
push
fdivl
aam
push
add
mov
cmp
in
and
inc
mov
jecxz
cmp
mov
lock
lock
dec
jmp
or
ss
lret
test
leave
call
add
inc
xchg
insb
xor
pop
fadds
pushf
mov
fwait
mov
xchg
and
icebp
arpl
rcr
aad
add
imul
ja
clc
pop
jbe
mov
rorb
je
mov
add
add
insb
or
scas
clc
sbb
adc
push
add
sar
pop
xor
imul
or
mov
add
lahf
in
pop
inc
or
rcrb
adc
mov
push
loope
gs
cs
gs
jb
movsb
lock
sub
xchg
lods
inc
inc
sub
cs
loop
mov
add
js
ficoms
mov
sbb
inc
shrb
jmp
rolb
out
push
enter
push
aaa
dec
adc
adc
fs
sub
push
push
outsb
add
loopne
or
cmp
xchg
orb
pop
js
mov
adc
cmp
jbe
lds
mov
mov
inc
cs
lahf
inc
cli
outsb
or
aaa
leave
mov
pop
mov
push
jl
mov
test
jae
es
stos
push
xchg
dec
or
movsb
rcrb
mov
jae
jecxz
adc
xor
rorb
mov
mov
enter
and
cmp
fs
mov
js
shl
in
cmp
dec
sbb
and
fadds
jo
mov
or
push
sahf
adc
xchg
fldl2e
xchg
sub
js
and
je
add
lret
inc
mov
and
movsb
sub
cld
add
add
and
stos
adc
and
pop
or
test
xor
sbb
push
jge
sti
lret
mov
or
ret
xor
gs
popf
punpckhbw
cmp
aam
fnstsw
push
push
or
sub
lret
xchg
inc
and
out
cmpsl
mov
js
outsl
call
hlt
loop
clc
outsl
pop
push
jl,pt
push
jg
cmpb
jne
inc
inc
xor
dec
or
pop
and
jne
cmpsb
int3
adc
enter
inc
or
lods
es
sbb
les
mov
das
or
sbb
sub
jecxz
inc
cs
lea
sub
or
mov
sbb
push
call
js
jmp
sbb
push
xor
adc
push
inc
mov
push
push
xchg
fldl
and
adc
dec
pop
sbb
jmp
movl
inc
fcmovbe
adc
movb
test
inc
shrb
xchg
cmpsl
sbb
bound
insl
and
ljmp
xor
mov
add
or
mov
test
loope
push
lea
xchg
out
mov
push
call
loope
dec
movsl
mov
pop
jmp
xchg
lahf
dec
xor
mov
sbb
or
lock
adc
sub
orl
out
mov
push
pop
push
addr16
jne
pop
push
imul
jb
xor
push
jle
leave
sbb
fs
xor
out
enter
in
push
mov
loopne
xlat
adc
movsl
mov
mov
cmp
push
push
shlb
stc
add
mov
daa
push
pop
or
movl
xor
lods
les
mov
mov
and
mov
gs
hlt
lods
and
ret
movsb
and
adc
cmpsb
sub
mov
adc
xchg
mov
sbb
sub
xchg
xor
popa
in
scas
rcl
or
add
incb
pop
push
xor
sub
lcall
add
mov
pop
lahf
mov
icebp
nop
sbb
test
in
or
and
push
add
mov
fsubrs
xchg
outsb
cmp
inc
iret
cmp
jne
cmpl
lahf
add
shll
test
cld
loop
shrl
jmp
push
or
jecxz
mov
lock
mov
push
dec
mov
inc
or
xor
pop
dec
xchg
push
cmp
sbb
jo
xor
pop
add
mov
pop
and
clc
mov
sbb
in
push
adc
add
repnz
sub
imul
test
adc
and
popf
dec
sahf
sub
adc
arpl
nop
or
movsb
sbb
sbb
xor
dec
je
enter
hlt
loopne
cmp
jnp
xchg
ja
das
cmp
mov
out
rorl
and
pop
es
les
les
push
divl
mov
cmp
insl
mov
pusha
push
pushf
sub
cmpsb
into
jne
stos
xchg
in
cmp
lock
xor
adcb
mov
sbb
sub
jnp
test
push
jnp
nop
push
xor
mov
adc
imul
inc
inc
adc
or
push
test
dec
and
inc
les
mov
shrb
fcomip
jmp
sub
call
adc
mov
xlat
push
add
sbb
inc
add
inc
sbb
mov
xchg
inc
adc
insl
inc
clc
xchg
cmp
leave
adc
adc
test
xor
mov
das
xlat
lock
push
push
xor
add
mov
jns
subb
add
jl
fs
nop
es
lea
xor
adc
pushf
dec
xor
sbb
xor
shlb
add
add
ljmp
mov
push
jbe
pop
push
mov
mov
cmp
aam
push
cmc
loopne
mov
js
flds
aad
push
inc
js
pop
enter
pop
xor
adc
cmc
rcll
lsl
add
cmp
sub
loopne
leave
cs
sbb
pusha
movsb
sbb
pop
add
mov
rcr
cmp
add
push
cwtl
loope
xchg
sub
jnp
stos
push
xor
push
push
lret
pop
xchg
and
orb
xchg
cwtl
add
fiaddl
aas
rclb
push
push
pop
pop
ret
xchg
dec
push
sarl
and
xchg
mov
icebp
xchg
xor
gs
daa
adc
push
or
jl
nop
sub
sub
or
sub
xchg
or
or
inc
insb
and
inc
push
jecxz
xor
mov
and
lods
daa
add
add
pop
nop
jns
xchg
cltd
mov
push
rclb
pop
push
push
adc
sbbb
in
mov
xor
lret
pop
andl
add
arpl
dec
or
sbb
bound
xor
sub
pushf
push
loopne
and
fisttps
adcl
and
popa
fdivrl
test
or
sti
cmp
cmpsb
icebp
or
inc
sbbb
rolb
adc
sub
lods
cmp
lahf
push
pop
xor
test
sub
jae
mov
push
dec
and
or
lcall
pop
pop
jp
inc
mov
or
push
ret
into
adc
inc
adc
fimuls
mov
mov
cwtl
xchg
cli
icebp
iret
sbb
inc
les
aas
fmuls
adc
fld
mov
pop
and
sbb
cmp
push
int
jge
cmp
inc
cmpl
add
push
xorb
lods
add
pop
dec
call
mov
shrb
pop
or
xor
dec
mov
adcl
xchg
xor
xchg
adc
push
xor
call
mov
je
cwtl
or
push
xchg
and
xor
mov
mov
inc
sub
xchg
xchg
cmp
loopne
xor
xchg
and
pusha
shl
cmp
mov
fmul
dec
imul
int
push
sub
test
push
mov
sub
cltd
ret
loop
aam
push
or
jns
dec
leave
lret
sbb
jp
stc
mov
cmp
pop
inc
sarb
push
ffree
pop
clc
cmpsb
pop
sbb
xchg
push
push
shrl
adc
addr16
fmuls
mov
xor
inc
push
lsl
mov
adc
scas
xchg
xor
xchg
sub
xor
int
and
xchg
fs
cltd
or
cld
adc
cmp
push
adc
lret
aad
cmp
or
mov
test
cmp
and
test
test
sbb
lcall
dec
cwtl
adc
cs
in
sbb
pop
adc
and
mov
pop
mov
xor
js
js
into
test
call
pop
lcall
dec
xchg
add
or
jb
jne
int3
inc
fwait
lret
aaa
aas
push
push
mov
sbb
mov
mov
or
shlb
mov
arpl
push
scas
pusha
mov
sbb
mov
inc
rcrl
sahf
or
adc
movsl
sub
imul
inc
inc
loop
mov
insl
push
push
add
dec
xchg
ljmp
inc
mov
add
mov
sbb
dec
aam
mov
jge
xchg
sbbb
cltd
faddl
ds
dec
sub
push
ret
pop
mov
inc
lahf
fistpl
in
sbb
add
pop
xchg
lods
and
add
inc
hlt
lea
mov
pushf
repz
xchg
mov
cltd
mov
out
add
rcrb
movsl
out
shll
dec
ljmp
aam
movl
das
adc
cmp
pop
mov
je
imul
add
push
das
int
push
sbb
int3
je
jne
insl
sub
add
mov
daa
je
sub
xchg
or
mov
pop
mov
cmp
mov
push
and
mov
xor
ret
jns
add
repnz
mov
sbb
push
xchg
or
xchg
out
and
and
push
js
inc
pop
push
or
decb
sbb
repz
push
in
push
in
sbb
call
test
and
or
mov
mov
push
fs
int3
and
and
orb
adc
add
mov
ret
add
in
lcall
test
adc
push
movsb
rcll
push
inc
push
les
popf
push
js
pop
lock
leave
lret
push
aaa
sbb
adc
test
andl
xor
popa
repnz
out
cmpsl
or
pop
add
pop
sbb
xchg
adc
push
clc
icebp
sub
xorb
aad
sub
push
test
and
xchg
test
xor
and
xchg
mov
ret
out
mov
mov
data16
cmp
xchg
lock
adc
add
adc
sub
and
cs
sbb
fisttps
add
inc
pop
inc
enter
dec
or
xor
or
scas
xchg
jmp
outsb
cmp
addl
adc
dec
mov
inc
xchg
subl
push
cmp
xchg
cmp
imul
sbb
movsb
mov
rcrl
in
cmp
decb
mov
movsb
lods
adc
mov
sbb
js
ljmp
add
cmp
incb
mov
jne
lcall
inc
sbb
add
cmp
jae
mov
xchg
icebp
pop
add
jg
adc
sti
stos
add
ja
push
push
push
inc
cmp
add
sbb
and
sbb
pop
lods
dec
mov
pop
sub
dec
lea
add
je,pn
je
add
das
rorb
sub
loopne
cli
aas
inc
add
cmp
jl
pop
lcall
data16
sti
cs
mov
mov
lcall
xchg
mov
and
sbb
pop
adc
jae
push
movb
mov
cmpsb
pusha
xchg
dec
mov
push
ja
xor
fwait
or
xor
mov
adc
sbb
out
push
test
adc
or
sbb
push
pop
or
imul
or
pop
ret
ss
inc
aam
pop
nop
and
add
sbb
and
adc
lea
sub
shll
push
mov
dec
in
fiadds
push
xchg
sti
mov
pushf
cmp
adc
adc
loope
test
and
push
insb
js
outsl
add
sub
sbb
mov
add
outsb
sbb
sub
test
orb
sti
and
sub
push
inc
rcll
test
test
hlt
inc
push
sbb
pop
insl
dec
or
or
in
adc
aas
shrl
dec
sarl
or
cmp
clc
cmp
xor
push
push
fdiv
bound
mov
jo
int
add
xchg
pop
mov
jge
stos
popf
adc
sbb
adc
inc
repnz
or
xchg
icebp
cmp
in
or
repz
movsb
or
daa
sbb
cwtl
mov
test
push
loope
push
adcb
jbe
iret
lods
call
jbe
dec
or
rclb
mov
sub
popl
push
lahf
mov
mov
movsb
loope
jmp
jmp
faddp
push
pop
addb
jb
inc
lock
jl
and
subl
stos
pusha
jnp
inc
hlt
adc
fstpl
inc
dec
adc
rcrb
cmc
mov
xor
sub
stos
inc
cltd
mov
and
arpl
inc
sbb
push
pop
scas
mov
inc
sbb
enter
repnz
sbb
add
xor
jle
jns
dec
sti
inc
push
lret
ret
repz
mov
push
cmp
ret
dec
aas
xor
sbb
lcall
repnz
add
mov
push
mov
nop
add
loop
pop
mov
cmp
adc
add
push
subl
pop
mov
mov
inc
push
movsl
sub
push
leave
jae
dec
adc
adc
jo
cmp
adc
dec
shll
data16
jmp
inc
shrb
inc
sbb
or
cmp
cmp
mov
and
sbb
sub
ret
xchg
mov
sti
adc
nop
dec
lcall
nop
add
dec
cmp
push
leave
jae
and
add
iret
pop
add
adc
push
xor
and
add
lcall
and
add
enter
push
pop
adc
sbb
inc
sbb
ret
cmpsl
or
or
or
xchg
add
add
add
inc
sub
and
and
lret
pop
sub
xor
xor
xchg
add
test
inc
sub
dec
or
push
sbb
mov
nop
adc
insb
hlt
add
add
sbb
mov
movsl
xor
sahf
mov
jno
mov
mov
sbb
xchg
xor
xchg
aam
sbb
cwtl
pop
add
dec
mov
in
cmp
and
fsubrs
mov
dec
jp
movl
sbb
sahf
sbb
mov
mov
jbe
mov
sbb
cmp
dec
adc
push
sbb
enter
and
lea
ja
push
mov
push
sbb
icebp
mov
sbb
test
jge
mov
shr
dec
sbb
lcall
int3
stos
movsb
mov
mov
lcall
lods
mov
nop
jp
mov
insb
jae
jp
and
movsb
sbb
cmovbe
sbb
mov
lcall
mov
or
movsb
sbb
xor
push
and
dec
lcall
mov
lcall
or
movsb
sbb
or
pop
push
mov
sub
es
sub
cmp
add
nop
mov
add
add
lret
and
in
jno
dec
jne
pop
and
dec
push
push
xchg
push
mov
push
sbb
dec
pop
int
add
jb
sbb
sbb
call
loope
pop
in
push
mov
xchg
add
or
orl
push
pop
jb
mov
xchg
stc
cmp
add
push
lret
add
push
jne
lea
xor
ficompl
sbb
pushf
mov
pop
and
jnp
mov
cmp
outsl
xor
jns
xlat
das
xor
or
cmpl
test
push
fnstenv
push
cmpsl
add
xor
aas
aam
ret
aam
xchg
cmp
outsl
and
sub
and
enter
xor
loope
outsb
mov
or
hlt
sbb
push
and
push
mov
int3
sub
xchg
pusha
fwait
inc
cmpsb
mov
loope
mov
jp
test
lea
sub
nop
sub
pop
mov
or
out
and
sbb
sbb
sbb
push
hlt
sbb
pop
mov
push
add
nop
dec
sbb
es
push
cmp
jge
push
push
push
es
pop
rclb
mov
stos
or
sbb
cmp
call
std
jg
rorb
inc
jb
jmp
and
inc
jns
int3
les
mov
jecxz
jle,pn
sub
inc
dec
xchg
movsb
or
adc
pop
jmp
lods
xor
repnz
or
mov
popa
cmp
adc
and
clc
adcb
in
sbb
push
enter
push
addb
mov
movsl
push
rcll
jbe
push
add
push
sub
sub
push
pop
addb
and
mov
mov
push
mov
lahf
adc
cwtl
scas
xchg
and
out
pop
xor
xor
push
mov
push
or
mov
loopne
test
inc
pop
add
jl
clc
add
addb
enter
push
lea
orl
iret
ja
and
loopne
fadds
sbb
adc
rcrb
adc
jo
dec
push
push
and
cld
cmp
adc
mov
adc
sub
or
pushf
sbb
jg
pushf
fcmovnu
enter
cmp
push
push
bound
or
inc
xchg
mov
nop
push
inc
add
fildl
out
push
pop
mov
cld
cmc
fs
retw
cld
inc
mov
cmp
inc
push
movsl
push
das
mov
and
incb
movsb
clc
das
sbb
outsb
test
mov
or
add
icebp
xor
mov
jge
or
push
xorb
xchg
paddq
pop
inc
push
loopne
jnp
push
dec
mov
add
shrb
add
push
imul
mov
cmpb
push
cmp
hlt
mov
loopne
cld
inc
popa
cmp
mov
mov
in
push
mov
inc
in
js
mov
dec
or
jl
xchg
std
push
cltd
fimuls
dec
ss
xchg
call
fadds
and
fstp
rclb
inc
rorb
add
pusha
call
adc
int3
add
fbld
push
inc
clc
and
add
sub
hlt
add
xor
mov
pop
and
inc
fsubrs
push
lea
or
fstpl
fists
mov
or
add
pop
fimull
xor
lahf
pusha
cmc
idivl
or
lea
ror
dec
jecxz
dec
jo
adc
out
sbb
xchg
cmp
loop
or
push
inc
pop
int
pop
adc
hlt
imul
fadds
add
jle
movsl
int3
in
inc
ret
mov
cmp
jae
push
xor
daa
and
sti
jmp
mov
xor
dec
mov
test
jmp
ljmp
lods
int
loop
cs
sbb
push
or
mov
add
pusha
cltd
xorb
sub
push
inc
push
inc
iret
dec
dec
xchg
add
dec
movsb
fnstcw
sbb
aaa
add
push
add
loopne
push
pushf
jo
andb
inc
or
sub
leave
jg
push
and
cmpl
pop
sub
fidivs
xor
insb
push
test
mov
fiadds
cmp
insb
jmp
or
jae
je
dec
or
pop
adc
push
or
pop
inc
mov
test
in
dec
and
prefetch
add
sarl
or
add
adc
daa
xchg
inc
and
jecxz
push
jno
dec
inc
push
cmp
sub
adc
mov
xchg
sbb
mov
inc
and
shrb
mov
movsb
in
insb
add
sahf
pop
sahf
dec
shl
fs
cmp
test
adc
imul
sahf
js
ds
mov
jge
jmp
mov
ficomps
mov
add
adc
int3
inc
dec
xchg
jo
ret
lds
add
xor
scas
or
popf
je
out
in
push
cld
jo
and
imul
fldl
inc
and
mov
in
jo
aas
fs
cmp
outsl
addb
mov
fidivl
mov
sbb
mov
imul
pop
js
adc
mov
ss
roll
test
jle
inc
enter
push
jno
xor
push
jmp
add
jb
push
aam
std
dec
add
inc
pop
sbb
in
int
adc
leave
push
pop
pop
sbb
xchg
dec
and
cmp
xor
cmp
cmp
ljmp
xchg
mov
ss
dec
lcall
inc
push
sbb
push
cmpsl
movsb
add
pop
clc
push
fistl
push
push
add
fst
push
inc
imul
mov
dec
dec
jne
xor
mov
jg
mov
and
filds
cltd
in
sbb
xchg
in
pop
push
lret
out
add
cltd
in
pusha
push
sbb
leave
xchg
add
pop
pusha
sti
add
push
pusha
cmp
push
jns
in
push
cmp
test
call
xchg
sbb
lret
jp
dec
mov
imul
mov
jo
jle
mov
push
dec
insb
push
clc
mov
and
dec
mov
outsl
rclb
push
cli
dec
adc
cmp
cmpl
test
aam
dec
orl
mov
sbb
jl
push
int3
sub
and
out
fcmovbe
push
dec
or
dec
adc
imul
repz
cmp
mov
jb
aam
cs
stos
dec
addb
adc
movsb
jb
jmp
xor
xchg
popa
add
mov
lods
xchg
mov
jnp
mov
dec
cmp
pop
push
clc
jl
mov
inc
add
or
add
testb
sub
test
je
rcll
nop
daa
xchg
jno
push
sbb
or
shrb
arpl
jecxz
lret
pop
and
add
push
push
stos
push
aad
lret
sub
push
les
fldl
or
fisttps
rorb
js
inc
aad
enter
cld
or
or
test
pop
dec
mov
xchg
ds
xor
inc
xor
adc
push
rclb
rcl
mov
mov
or
nop
or
cmp
add
aas
or
pop
mov
jns
ljmp
es
adc
xor
mov
dec
and
sub
nop
add
sub
sub
stos
and
in
cmp
push
push
cmp
mov
dec
push
mov
mov
shlb
push
xor
pop
imul
es
dec
fidivrl
scas
mov
daa
mov
cld
scas
and
mov
and
dec
mov
add
mov
cmpb
mov
add
shll
adc
add
sub
xchg
rorl
jae
nop
add
sbb
add
movsl
inc
dec
or
add
sbb
mov
sahf
jns
sbb
and
push
or
sbb
or
adc
jo
arpl
outsl
adc
sub
sub
ss
jne
jg
add
xchg
adc
sbb
pop
dec
or
js
lock
adc
popf
aad
rorl
fiadds
lods
lock
push
xor
mov
adc
adc
and
adc
jp
dec
push
push
js
jne
subb
out
push
cmp
xchg
sub
and
adc
mov
adc
mov
lcall
add
add
push
cmpsb
adc
mov
adc
aas
lods
and
adc
mov
sti
lahf
aad
pop
das
loopne
pop
or
xchg
sub
xor
pop
push
cmp
and
xor
mov
mov
orb
mov
or
jns
inc
lock
inc
jmp
or
dec
sub
add
add
sub
cmpsb
imul
cld
add
dec
movsb
or
imul
jno
and
pusha
shlb
loop
cmp
sbb
sbb
push
or
mov
ret
mov
int3
subl
mov
je
and
sub
cmp
xlat
cli
dec
popf
sbb
sub
or
mov
mov
xchg
cmp
sub
mov
hlt
cs
lods
add
int
fdivrl
and
or
in
jb
fs
add
mov
sub
int3
adcb
cmpsl
mov
add
adc
sub
push
jp
fnstcw
dec
cs
adc
cmp
or
adc
sbb
adc
push
adc
mov
xchg
push
add
outsb
pop
adc
or
adc
adcl
je
lret
xor
pop
cltd
cmpl
inc
jb
repz
fisttps
dec
or
inc
addl
adc
push
mov
push
jb
aam
invlpg
loopne
pop
adc
add
imul
nop
sbb
jae
xchg
dec
xchg
sub
pop
sbb
adc
jb
adc
pop
jb
insb
sbbl
sbb
sbb
dec
mov
xorl
mov
sub
push
and
out
sbb
lods
adc
pop
fiaddl
mov
cmp
jle
hlt
fiaddl
xor
adc
shll
mov
sub
add
sub
inc
scas
rclb
push
mov
and
and
and
jl
enter
dec
je
add
sbb
adc
test
mov
fidivrl
mov
lods
divl
ja
cli
pop
jmp
cltd
mov
imul
call
adc
xchg
xlat
shrl
jb
in
add
mov
adc
loop
cmc
mov
push
and
dec
add
inc
add
fdiv
and
test
sub
sbb
inc
pop
movsb
push
mov
pushf
push
cmp
mov
rolb
mov
push
and
sub
jp
adc
mov
push
push
mov
xor
pop
mov
or
and
inc
jmp
mov
lea
negb
and
or
ljmp
aam
adc
xchg
mov
fs
movsl
dec
pop
mov
ret
sbb
push
and
fbld
adc
ror
gs
int
push
sub
shlb
or
adc
adc
lea
inc
pop
sbb
pop
je
mov
xor
adc
ret
das
jnp
adc
fstpt
and
test
add
fs
mov
sarb
xchg
and
pop
push
js
add
mov
mov
add
gs
inc
push
push
imul
jne
pop
dec
mov
add
aad
sbbl
add
and
cmp
xchg
adc
add
sbb
inc
add
sbb
xor
pop
mull
push
adc
pop
or
sbb
lods
outsb
mov
test
or
pop
push
stos
test
jo
inc
lock
mov
push
adc
sub
xchg
jns
and
xor
in
mov
or
mov
aam
test
push
dec
mov
pop
push
adc
fs
adc
inc
add
mov
dec
xchg
xor
pop
or
lahf
xchg
or
mov
or
dec
loope
mov
jbe
loopne
or
inc
mov
mov
xor
mov
mov
and
aas
cltd
js
fisttps
mov
mov
push
incl
push
push
fcomi
xchg
or
sbb
rolb
rclb
push
push
rolb
nop
xchg
stos
loopne
push
add
inc
pusha
fldl
adc
enter
fimull
add
cltd
mov
mov
add
sub
mov
dec
sbb
inc
and
cmp
lahf
stc
push
push
aas
mov
mov
inc
push
add
jae
mov
cmc
or
scas
test
sarl
mov
sbb
and
pop
push
xor
sub
je
lock
pop
or
outsl
gs
push
inc
fs
xchg
out
dec
pusha
cmp
xor
xchg
mov
jbe
cmpl
sbb
xor
push
inc
fisttpl
and
pop
pop
add
aas
in
push
push
loope
in
xchg
popf
mov
push
and
add
pushf
je
loope
add
movsb
fdivs
sbb
jo
gs
rol
add
mov
mov
adc
test
inc
cmp
adcb
pushf
push
jnp
pop
pop
sahf
idivl
add
cmpsb
mov
pop
xor
sbb
mov
xchg
xor
pop
add
aaa
xchg
mov
mov
inc
sti
mov
lods
lcall
fisubs
sub
mov
pop
out
cmp
je
adc
pop
push
cwtl
bound
pop
push
call
inc
lods
and
add
xor
sbb
ficoms
mov
fsubrs
fs
mov
cmp
push
mov
push
lcall
cmp
popf
pop
sbb
mov
adc
ret
cmp
jae
mov
cmpsl
test
nop
sbb
add
outsl
fisubl
lock
lods
mov
sbbb
push
insb
xchg
stos
dec
push
movsb
pop
mov
push
cmp
adc
mov
mov
or
push
or
sbb
fadd
adc
sarb
add
stos
test
add
inc
mov
add
adc
seta
pop
mov
rclb
in
adc
jmp
push
push
push
and
sbb
push
add
pop
jne
in
dec
iret
imul
mov
adc
in
dec
xlat
aam
sbb
push
gs
xor
pop
adc
sbbb
sbb
jbe
inc
pushf
adc
and
pop
cmp
jne
cmp
fwait
sbb
dec
inc
inc
push
push
and
xchg
dec
pop
xchg
addb
push
pop
push
push
leave
ret
outsl
adc
mov
sub
and
mov
sub
dec
jbe
sbb
ljmp
add
pusha
push
and
popf
aam
aas
mov
sbb
mov
jecxz
inc
or
xchg
aas
stos
insl
cs
adc
adc
jmp
cmp
lret
jg
mov
jp
mov
cmp
mov
inc
push
push
lret
mov
leave
idivl
nop
nop
xor
and
lret
and
leave
dec
inc
cmpsl
nop
leave
dec
enter
push
push
and
xor
jmp
push
hlt
sub
cltd
scas
mov
and
pop
test
push
ja
add
addr16
push
and
add
insb
mov
push
call
pop
enter
jecxz
xchg
fstpt
and
out
fcoml
sbb
add
inc
xor
icebp
cmp
test
inc
add
sbb
jne
mov
fidivl
or
pop
sbb
dec
loope
add
jle
xor
push
out
mov
add
sub
and
xchg
cmpsb
or
jg
imul
or
pop
les
movb
xor
lret
xchg
cld
test
mov
shll
adc
fbld
lret
cmp
push
xchg
push
je
mov
sub
pop
inc
popl
pop
in
or
or
sbb
xor
nop
sub
or
adc
add
dec
cmp
and
push
popf
inc
aaa
lea
icebp
or
inc
pop
or
push
adc
mov
pop
cwtl
jns
mov
idiv
mov
into
or
jne
pop
push
test
push
cmp
or
in
daa
mov
dec
repnz
sub
popf
push
out
sub
cmc
and
ret
mov
iret
mov
stos
mov
pusha
add
aaa
jl
sbbb
mov
sbb
inc
xor
or
dec
pusha
lret
push
adc
pop
jnp
xchg
dec
and
int
cmp
daa
daa
test
adc
sub
xor
mov
cmp
ret
pop
enter
cmp
das
in
jo
push
push
or
imul
add
ljmp
push
push
sbb
addl
aas
mov
test
mov
push
sub
add
add
mov
movsl
pushl
mov
push
push
lcall
and
xchg
push
pop
sbb
out
push
sub
aaa
cmpsb
and
push
jb
fidivs
dec
test
sbb
add
push
daa
or
dec
jecxz
ljmp
push
cmc
mov
inc
imul
jecxz
nop
mov
aas
mov
push
ficomps
cmp
jbe
dec
ds
or
and
add
xor
sub
mov
fcoml
push
js
ret
or
jp
adc
ret
and
lods
shll
ret
call
mov
call
inc
imul
loop
fbstp
movsl
push
ja
or
jbe
dec
add
add
push
pop
push
fneni(8087
mov
mov
lcall
push
ja
test
add
sub
sbb
adc
movsb
adc
in
bound
pop
hlt
jle
aad
aam
push
mov
mov
sbb
pop
xchg
cltd
mov
mov
inc
sub
inc
test
je
daa
hlt
mov
cmp
ret
loopne
mov
ja
sub
js
das
push
jae
pop
mov
mov
sbb
sahf
sti
fldl
int
xor
add
push
push
pop
in
adc
mov
loopne
and
pop
sub
push
js
loopne
test
imul
adc
and
inc
push
push
xchg
test
and
pop
addb
or
sbb
inc
test
lea
jno
add
jecxz
sub
xor
sub
cmp
out
add
test
sbb
pop
xor
pop
shlb
hlt
sbb
add
mov
sub
push
js
jl
xor
lahf
orb
xchg
negl
mov
adc
lcall
and
inc
insl
lea
sbb
test
movsl
or
test
lea
and
inc
mov
sub
test
jbe
mov
push
pop
inc
dec
mov
or
adc
js
adc
inc
sbb
lods
pop
and
ljmp
sbb
js
imul
xchg
data16
insb
or
fs
ret
push
xchg
mov
movsb
inc
pop
add
jb
dec
push
or
inc
dec
rorl
add
inc
and
mov
shrb
add
sub
sub
xchg
jg
push
sbb
pop
aad
push
and
cmp
insl
inc
adc
cmp
adc
sub
and
nop
mov
sub
add
add
push
stos
dec
and
in
add
pop
inc
scas
cmpb
and
xor
imul
neg
seto
pop
and
xor
movsb
add
mov
cmp
push
and
mov
inc
dec
movsb
testb
mov
pop
lcall
mov
xchg
or
movsl
mov
pop
loopne
xor
add
cmp
push
mov
push
test
add
jae
xchg
dec
sub
adc
lea
and
dec
cmp
aad
mov
sbb
pushf
jle
xor
mov
xchg
pop
mov
lds
std
push
jbe
dec
sbb
jg
sub
push
sbb
loopne
icebp
cmp
pop
popa
xchg
dec
decl
mov
lea
xchg
mov
sarb
push
mov
jno
cmpl
mov
imul
mov
or
jb
dec
movsl
or
add
in
add
mov
mov
mov
decl
pusha
cmp
or
pop
adc
gs
inc
mov
sbb
cmpsl
push
and
nop
push
iret
inc
xor
pop
pop
cmpl
fldcw
xchg
mov
mov
popf
add
xchg
sbb
mov
adc
lea
sub
jnp
and
add
dec
push
imul
inc
inc
movsb
stos
test
ret
adc
mov
jnp
outsb
push
popa
push
add
xchg
sbb
arpl
aam
clc
pusha
push
push
popf
mov
and
incl
icebp
xchg
mov
movsl
xchg
mov
shrb
mov
add
mov
je
insb
add
xor
ret
adc
sub
sahf
orb
popa
push
sub
cmpsb
push
sbbl
nop
jno
lods
adc
aaa
lea
jo
repnz
push
and
je
cmp
mov
sub
xchg
test
xor
push
cmp
xchg
fdivrp
push
shrb
sub
je
push
jne
lea
xchg
dec
rcll
xlat
pop
pop
and
jmp
inc
xchg
sbb
push
mov
sarl
mov
adc
sahf
push
push
push
mov
pop
mov
insb
andl
lock
mov
mov
adc
or
lods
bts
ljmp
xchg
inc
push
and
aam
nop
repz
add
loope
pop
gs
rclb
or
cmp
dec
or
and
push
pop
sub
pop
pop
add
adc
push
lcall
ja
mov
pushf
and
adc
pushf
cmp
add
sub
mov
pop
dec
cld
scas
mov
push
cmp
jae
loop
loop
sbbl
inc
cmp
hlt
shlb
fs
imul
push
jecxz
stc
call
jge
repnz
push
rorl
add
cmpb
push
mov
and
sub
mov
mov
sub
cmp
push
sub
push
aaa
mov
mov
or
rclb
mov
pop
mov
popa
inc
sbb
xor
das
jno
pushf
test
mov
and
adc
out
mov
dec
adc
test
xor
dec
add
push
rolb
rcr
push
and
dec
jo
gs
test
sbb
or
addb
fwait
sbb
hlt
jo
lcall
xchg
xor
push
ror
call
or
shll
sarl
adc
rolb
je
shrl
push
imul
jb
imul
les
sahf
mov
loopne
ret
xor
fistpll
mov
add
lock
fwait
xchg
fucomi
adc
and
sub
inc
add
xor
mov
pop
mov
add
cwtl
mov
int3
sbb
mov
out
pop
in
jl
jo
sbbl
sub
dec
les
sahf
lods
in
fs
push
sub
out
fs
push
sub
cmp
rcll
nop
test
inc
hlt
dec
push
push
push
test
xlat
sbb
adc
or
leave
xor
lret
adc
pop
inc
orl
pusha
mov
fs
push
sub
sbb
ficoms
mov
push
and
push
or
arpl
push
rorb
jmp
pop
movl
and
sbb
lea
sbb
add
or
inc
inc
popa
testl
dec
lock
testb
fstps
dec
dec
mov
or
pop
fdivrl
test
push
loopne
mov
mov
loop
daa
inc
daa
mov
scas
push
mov
stos
and
jge
cmpl
and
and
push
xchg
inc
add
js
and
enter
and
push
or
dec
adc
shll
and
xor
push
aam
pop
mov
lret
imul
and
push
and
adc
mov
mov
ljmp
inc
sbb
sub
inc
inc
lods
subl
icebp
dec
sub
test
sub
and
jno
stos
add
sub
sub
loopne
adc
and
push
enter
push
push
nop
inc
dec
push
dec
push
sub
test
lahf
inc
test
nop
sbb
inc
or
ret
insb
dec
pop
push
sbb
cmp
pusha
dec
mov
push
xor
push
and
pop
and
mov
lcall
push
jmp
gs
dec
nop
cld
and
mov
cmp
and
jbe
in
jge
shlb
sbb
loopne
sbb
cmp
xor
imul
mull
mov
add
inc
sub
inc
call
andl
jno
jo
xchg
lods
xchg
lahf
pop
aas
test
sub
adc
imul
jmp
shrl
mov
sbbl
jne
xor
mov
or
xchg
pop
fsubrl
mov
pop
ret
jecxz
add
or
fisttps
jbe
mov
call
inc
add
out
enter
or
pusha
scas
xor
lock
lea
lahf
or
inc
dec
add
jnp
xchg
mov
push
pop
leave
cs
shrb
xor
fistpll
test
xchg
cmp
jp
xchg
mov
ret
xchg
xlat
lods
orb
andb
adc
mov
lds
popa
push
and
inc
adc
xchg
and
and
cmpsb
add
adc
pop
mov
mov
or
insl
or
inc
sbb
mov
outsl
or
xor
and
and
push
stos
adc
inc
roll
xchg
mov
jo
mov
addl
test
arpl
push
sbb
dec
jge
sti
sub
adc
je
outsb
and
push
sub
cmp
lret
pop
inc
test
sub
test
ficoml
adc
jge
insb
jbe
test
dec
cvtpi2ps
add
imul
sahf
les
dec
mov
mov
nop
stos
add
push
adc
pop
ret
mov
adcl
xchg
es
nop
jno
push
shl
push
and
push
push
inc
orl
add
or
push
sbb
dec
sub
push
stc
xor
cmp
or
add
adcl
inc
mov
add
or
inc
enter
push
lods
adc
dec
sbb
scas
sub
cli
ljmp
cmpsl
imul
fisubs
xor
add
out
dec
or
add
sbb
push
jb
enter
nop
sub
jo
adc
inc
pushf
push
sbb
sbb
add
lds
push
push
adc
lret
mov
add
data16
xchg
push
xor
mov
add
mov
sbbb
adc
test
push
jo
pop
cmc
pop
push
cmp
mov
and
pop
add
sbb
push
adc
and
and
nop
or
add
fists
in
in
lea
mulb
movsb
xchg
ret
repnz
cmpb
insb
cs
sub
or
xchg
or
xor
inc
ret
adc
leave
jae
test
es
and
dec
push
es
fs
popa
add
inc
pop
leave
xor
and
and
aam
aas
xor
push
inc
and
lahf
dec
push
test
or
adc
fadds
push
rcrb
test
inc
mov
xchg
dec
and
mov
sbb
xchg
ss
mov
inc
or
daa
aam
add
mov
mov
push
push
push
jno
jp
sahf
inc
push
add
fwait
addb
cmp
add
pop
sbb
or
je
lret
cltd
mov
xor
mov
in
sbb
add
push
add
push
inc
pop
push
pop
push
mov
sbb
movsb
hlt
popf
imul
add
jmp
pop
decb
xlat
mov
and
aam
inc
add
and
mov
inc
int3
faddl
sub
aas
mov
add
xchg
test
jne
stc
pushf
or
aam
je
mov
popl
nop
or
pusha
daa
adc
rcll
and
or
add
add
aad
mov
cwtl
push
pop
cmpsl
push
pop
jecxz
xor
in
push
pop
xchg
push
ret
inc
push
cmc
je
lcall
inc
pop
and
push
xor
sub
and
dec
mov
xor
push
mov
incl
cmp
add
movsl
sub
das
loop
dec
xchg
test
jecxz
dec
dec
popa
sbb
push
cmp
cmpsl
add
jle
mov
push
or
scas
xchg
iret
mov
push
or
push
test
hlt
push
push
mov
lar
loopne
xor
lcall
negb
push
stos
icebp
stos
repz
or
lock
dec
and
dec
xchg
ljmp
repnz
and
and
xchg
jbe
shll
sub
cmp
dec
adc
add
adc
pop
inc
adc
mov
adc
insl
lea
xor
lret
pusha
add
adc
pop
add
out
dec
jb
mov
pop
push
dec
cmp
sbb
mov
jp
push
jg
xchg
push
xchg
xchg
push
sbb
enter
int3
call
cwtl
inc
xor
leave
rcrb
mov
leave
sbbl
inc
xchg
sbb
pop
in
scas
test
add
nop
inc
ds
sbb
sub
push
add
in
xchg
pusha
sbb
pop
xchg
imul
and
mov
and
mov
sahf
or
aam
in
add
sub
or
jns
inc
sahf
sub
sub
mov
leave
add
subl
mov
fs
sbb
repnz
cmp
pop
dec
pop
dec
xchg
and
and
pop
lahf
je
or
pop
jbe
lcall
ret
pop
push
fsubrs
aam
and
add
sarb
je
xor
orl
push
jl
fstl
mov
add
cwtl
sbb
in
cmpsb
les
lock
pop
scas
add
or
jl
mov
jne
push
adc
jo
pop
mov
loop
inc
cwtl
dec
or
push
add
jb
loopne
mov
ret
cmp
hlt
sbb
add
stos
mov
sti
mov
cmp
dec
mov
aam
arpl
stc
sarb
sub
mov
mov
dec
cmp
or
push
divl
popa
add
es
out
add
jl
xchg
out
fs
mov
in
aas
in
es
inc
insl
in
cmp
cld
inc
fcomps
inc
jb
add
push
hlt
adc
aam
or
inc
xchg
jnp
rcrb
pop
sbb
adc
imul
jl
inc
lods
xor
jmp
mov
in
out
mov
adc
and
ret
sbb
pop
mov
push
jg
fs
test
addr16
jns
rorb
enter
push
sarb
iret
inc
fadds
add
dec
addb
add
xor
lods
ds
jae
xchg
dec
jno
cmp
cmp
cmp
cltd
dec
mov
push
cmp
xchg
mov
dec
dec
mov
push
inc
jge
inc
daa
add
inc
lea
std
push
or
xchg
mov
lods
stos
into
loop
shrb
cmpsl
insl
add
xor
inc
dec
outsl
push
dec
dec
xchg
mov
jo
jg
push
mov
pusha
jns
sbb
call
jg
xor
xor
addl
gs
xchg
jnp
test
and
add
and
shrl
add
add
pusha
sbb
cmp
and
or
push
imul
jb
enter
loopne
mov
add
and
repnz
pop
jnp
cmp
mov
xor
push
and
fwait
mov
mov
cmp
add
ret
daa
pop
mov
sbb
ljmp
or
mov
sti
xchg
sbb
push
pop
add
push
push
lock
shrb
push
push
mov
xor
cld
lock
xor
stos
and
mov
loop
push
push
lods
lods
std
fisttps
aas
inc
lea
out
dec
rcrl
and
dec
jbe
out
pop
pop
and
and
add
push
sbbb
shr
in
pusha
push
and
nop
pop
dec
sbb
cmpb
add
push
xor
inc
fs
add
or
and
sub
sbb
ret
xor
lcall
in
and
mov
mov
dec
pop
push
loope
movlhps
dec
loope
add
test
or
ret
dec
inc
cmc
xchg
sbb
or
push
cld
repz
dec
rcrb
inc
lcall
lods
push
dec
dec
in
adc
ficoml
fdivrl
adc
insb
add
popa
sub
fmull
pop
xchg
cld
nop
outsb
jp
sub
sub
add
sub
sbb
dec
pusha
adc
mov
pop
xlat
adc
xchg
and
ss
inc
inc
push
mov
data16
sbb
cmp
mov
popa
mov
sub
aaa
dec
sbb
cmp
push
cmp
test
sub
push
roll
xchg
inc
lods
push
enter
in
or
sbb
xchg
push
mov
pushf
lea
jo
testb
push
mov
lods
or
add
cmc
mov
xor
xorb
rcll
mov
push
stos
cmp
inc
enter
push
test
push
add
pop
add
push
push
dec
push
insb
ret
pop
mov
sub
xchg
mov
pop
je
es
add
enter
push
fs
cmp
pop
add
mov
aaa
push
xor
int3
in
cmc
int
orb
xchg
pop
lock
jae
or
xorl
in
cs
jne
jge
mov
sbb
pop
mov
push
inc
leave
mov
jo
mov
dec
push
sbb
ja
and
xor
pop
jp
sub
in
push
mov
pop
cmpsl
xor
je
movsl
movsb
xor
cli
cwtl
sub
imul
dec
insb
push
das
js
inc
js
adc
lcall
test
xor
arpl
rclb
pop
addl
adc
mov
daa
bound
xchg
dec
mov
test
jl
rorb
adc
dec
jae
xor
sub
mov
add
int3
pop
mov
jae
dec
push
xor
cmp
push
popa
xchg
cmp
add
xchg
dec
cmp
popa
push
and
add
data16
in
aaa
lds
mov
pop
pop
push
pusha
mov
andl
mov
or
or
xor
cld
testb
rclb
push
nop
pop
push
push
and
xchg
push
lods
or
jmp
aad
pop
adc
and
jl
fwait
sub
xor
cli
push
out
xchg
mov
mov
mov
dec
fs
pop
cmp
pop
mov
bound
mov
fidivrs
mov
rclb
jge
sahf
test
jmp
and
out
mov
pop
aam
or
mov
push
add
push
pop
inc
add
and
out
or
cli
test
add
add
test
cltd
xor
cwtl
cli
or
jl
inc
pusha
pop
and
push
jno
rcrl
or
jg
and
call
jo
push
mov
inc
mov
or
xlat
add
add
mov
ret
or
sub
ds
push
daa
cs
inc
ljmp
mov
shll
fildll
adc
retw
mov
add
sub
and
fbld
leave
add
jo
push
addb
sbb
sbb
stos
frstor
cmp
or
dec
insb
xchg
jb
inc
sbb
sbb
or
pusha
xor
movsb
push
or
mov
mov
jno
jo
and
pop
cmp
inc
das
arpl
sbb
push
rcrl
mov
lret
jge
jl
dec
sbb
sub
mov
aam
sbb
mov
lret
jo
cwtl
cmp
mov
adc
mov
enter
sub
dec
add
sub
imul
push
or
sub
dec
adc
xchg
sub
jmp
xchg
pop
push
ljmp
sub
incl
dec
cmpsb
and
notl
xor
xchg
sub
dec
push
pop
cltd
and
xor
cs
out
xchg
mov
sub
adc
mov
test
fwait
add
push
pop
sub
or
dec
xchg
inc
jne
leave
in
jge
or
cmp
test
mov
and
xchg
adcb
pop
orl
dec
and
stos
mov
cltd
or
adc
imul
mov
push
inc
add
imul
pop
stos
mov
dec
add
fistl
and
pusha
scas
cmpsb
sub
test
sbb
cmp
and
add
adc
jbe
push
add
sbb
inc
add
or
das
jb
pop
mov
mov
push
jmp
sub
mov
jle
cmp
jae
push
add
mov
cmpsb
lods
xchg
push
push
or
xor
inc
cmp
jl
aad
pop
and
outsl
push
cld
std
incl
mov
xchg
xor
adc
inc
insl
ja
cld
std
shlb
loopne
lahf
sarb
add
mov
pusha
xchg
insb
mov
jmp
cmpsl
enter
add
pop
push
or
ror
push
rolb
mov
mov
ret
xor
bound
repz
pusha
insl
cld
addb
add
jbe
sub
inc
add
movsb
xchg
setg
mov
xchg
outsl
nop
test
ss
adc
in
add
add
or
inc
add
dec
fwait
push
push
push
cmpsb
jge
sbb
in
jo
cmpsb
aam
fs
insb
pop
push
fimull
rcrb
pop
adc
insb
sbbl
lds
adc
or
mov
inc
lock
repnz
int3
cmp
jmp
cmpsl
ds
out
pop
push
not
adc
push
inc
insb
cmp
xchg
mov
jmp
add
add
pushf
push
xorb
test
pop
or
mov
pop
mov
push
cs
lea
push
sbb
mov
mov
push
or
aaa
mov
fbstp
ljmp
adc
loopne
or
fidivl
push
or
or
inc
insb
or
inc
call
rolb
add
inc
or
or
test
sub
dec
gs
mov
xchg
mov
test
imul
adc
inc
push
mov
dec
sub
test
jle
in
mov
add
int3
dec
dec
xchg
sbb
dec
mov
lea
popf
jg
mov
jbe
test
push
xchg
add
ds
push
add
add
fcompl
adc
or
sarl
xchg
adc
test
popa
mov
aas
mov
pop
nop
sub
fcomp
movsb
xor
dec
mov
fdivl
sbb
jne
xchg
mov
popf
xchg
inc
ljmp
fadd
pop
aaa
dec
js
jne
ss
pop
repnz
cmpsl
in
inc
push
cwtl
test
xchg
cmp
loopne
fsts
loopne
add
xor
mov
jno
cmc
add
mov
adcl
jmp
orb
jns
movsb
cwtl
dec
or
popf
scas
jae
insb
add
data16
loopne
fldl
movb
cmp
inc
cmp
jne
pop
sahf
and
loopne
aam
pop
jecxz
sbb
lea
push
sub
or
adc
xor
shlb
pop
lock
sbb
push
orb
pop
mov
push
into
jp
dec
jnp
add
lock
mov
mov
push
or
adc
je
dec
push
idiv
cmp
je
cmp
je
cmp
je
push
jnp
mov
mov
push
mov
jnp
push
fwait
pop
fucomp
mov
mov
stos
lock
xchg
xor
mov
loope
ja
jo
push
push
shr
mov
and
dec
inc
hlt
inc
or
mov
sub
rorl
xor
push
adc
icebp
lds
inc
mov
je
mov
sbb
mov
aam
sub
xchg
mov
icebp
pop
nop
mov
je
adc
and
cmovno
push
dec
rep
adc
or
in
cwtl
pushf
enter
xor
jle
adc
fcomps
jge
cmp
adc
adc
jl
into
add
shll
fcoml
push
movsb
or
push
pop
fistps
sub
xor
or
mov
and
sti
push
stos
pop
xor
inc
sbb
pop
das
popa
fidivrl
xor
sbb
and
xchg
push
add
rolb
xchg
das
cmpb
jmp
mov
push
push
xchg
cld
mov
or
sti
sbb
popa
jne
and
rclb
push
and
clc
rcrb
push
mov
mov
mov
icebp
xchg
jb
fnstenv
mov
adc
cmpsb
mov
or
mov
in
les
xchg
cmp
dec
or
mov
or
test
jge
mov
cld
pop
sbb
sub
or
lret
imul
push
cwtl
sbb
cmp
es
psubb
and
cld
add
nop
push
mov
add
xchg
xorl
cmp
inc
inc
or
call
stos
loopne
movsl
data16
test
xor
adc
xor
lahf
adc
xchg
jl
and
test
inc
lods
and
xchg
out
pop
pop
sub
push
lahf
xchg
xchg
mov
enter
xorl
sbb
add
icebp
and
inc
push
and
arpl
add
add
fs
inc
lods
dec
xor
lock
mov
sbb
sbb
add
xlat
and
addb
sub
and
push
movsb
loope
mov
fdivrl
inc
lods
mov
xor
fdivs
or
xchg
pop
mov
pop
push
ret
jae
shrl
mov
repz
sub
sbb
fwait
and
push
lcall
cmpsb
xchg
out
dec
adc
adc
adc
fisubl
imul
pushf
inc
rcrb
call
jb
mov
or
jno
xchg
int3
or
jno
adc
push
dec
adc
outsl
sub
rclb
adc
sub
inc
sub
dec
sub
dec
and
push
mov
inc
xchg
xchg
add
ror
ret
or
adc
inc
pop
add
jns
dec
xor
mov
std
aaa
into
out
mov
lahf
or
xchg
sbb
jg
mov
jge
fs
add
movsl
mov
nop
and
lods
stos
inc
xchg
pop
sbbl
shr
call
mov
fcoms
sti
je
mov
shlb
push
cmp
fisubl
cmc
push
es
push
jecxz
scas
xchg
lea
adc
int3
stc
sbb
outsl
push
leave
adc
cmpl
mov
push
pop
mov
mov
pop
sbb
inc
push
insl
mov
push
orl
xor
push
gs
cmp
or
sahf
outsb
pusha
notl
cmp
cmp
sbbb
aam
dec
enter
mov
adc
xor
scas
or
add
and
and
cmp
inc
cmpsl
mov
rcl
pop
dec
mov
push
push
sub
test
mov
and
mov
mov
cmp
enter
push
cmp
xor
out
imul
jne
push
rorl
or
cld
sub
mov
or
jg
out
pop
push
rclb
mov
jg
arpl
push
cmpsb
test
add
sub
push
pop
jnp
shlb
lea
or
and
sbbl
sub
clc
pop
ja
cld
xor
sub
xchg
xchg
mov
mov
add
lea
jl
scas
loope
push
je
jnp
lods
push
lahf
jl
xchg
imull
sub
cmp
sbb
inc
rclb
loop
adc
xor
add
ret
add
or
mov
sbbb
aad
mov
lahf
adc
es
popa
stc
adc
or
mov
testl
shrb
sar
xchg
pusha
or
fcoms
stc
push
outsb
adcb
cld
sub
or
and
test
add
nop
jne
jge
sub
loope
xor
lds
jne
cmp
jne
mov
ss
jnp
push
sbb
pop
in
or
jno
push
inc
sbb
sub
push
loopne
xor
es
sub
push
and
pushl
je
push
icebp
add
aam
xchg
out
cmp
adc
pop
or
add
and
jmp
push
lea
jo
mov
mov
push
rol
dec
xchg
sub
mov
and
pop
cs
out
fadds
inc
test
movsb
insl
dec
push
jo
js
inc
stos
loope
xchg
mov
and
push
push
inc
mov
add
mov
push
pop
mov
sar
sub
push
mov
nop
mov
cmp
loop
lods
push
nop
rol
cmp
stc
adc
push
cmp
pop
cmp
mov
pushf
pop
adc
push
lcall
or
sbb
dec
jo
out
sub
mov
inc
jo
bound
sbbl
xchg
and
das
add
ret
push
js
sbb
lea
test
cmpl
outsl
cmp
mov
icebp
push
push
push
mov
mov
jne
mov
push
push
inc
xchg
xchg
mov
sbb
inc
adc
mov
test
jnp,pt
push
or
mov
add
dec
xchg
add
shr
nop
cmp
ja
push
je
callw
adc
cmp
insl
jns
outsb
inc
add
inc
shrb
cmovle
je
je
fistpll
mov
movb
pop
pop
pop
dec
adc
mov
cmp
add
xchg
adc
rorl
or
xchg
orb
and
mov
cmpsb
push
pop
xchg
push
xchg
push
cmp
pop
pop
jcxz
mov
pop
test
cmp
cmp
or
push
or
or
add
push
outsl
divl
jne
lcall
ja
sbb
and
arpl
jecxz
arpl
sub
pop
out
adc
cmc
and
xlat
and
hlt
sahf
pop
cmpb
cmp
sbb
mov
cmp
frstor
add
cltd
sbb
mov
push
pop
xchg
adc
xchg
jne
adc
inc
push
out
movl
cmp
inc
xchg
pop
pop
or
and
pop
sub
sbbb
pusha
das
jg
add
icebp
clc
lods
lret
daa
or
add
daa
inc
dec
sbb
mov
cmp
loope
xor
push
enter
mov
sbb
movb
inc
pop
sbb
addb
pop
sbb
pop
inc
addr16
and
push
mov
adc
xor
sbb
ror
sti
stos
dec
push
add
and
add
mov
cmc
addr16
mov
jno
add
dec
mov
add
inc
pop
mov
movsl
cmp
sarl
inc
pop
aad
mov
cmpsl
adc
and
idivb
inc
add
xchg
shlb
push
mov
sub
js
pop
mov
jmp
push
add
lret
cmp
mov
shlb
cmp
mov
add
jns
mov
test
js
add
pop
xchg
mov
xor
insb
pop
mov
push
jg
scas
adc
mov
movsb
push
mov
popa
pop
cmp
and
test
dec
fldenv
cmp
mov
pop
in
xchg
das
je
xor
xchg
jl
push
fs
push
push
add
nop
int3
sbb
dec
hlt
and
adc
sahf
into
jle
popa
inc
cmp
and
test
push
test
test
cmp
dec
sbb
and
fadds
xchg
outsb
and
xchg
mov
add
lock
dec
add
push
mov
or
adc
out
mov
add
push
lret
bswap
add
es
adc
or
pop
dec
cld
push
push
mov
loop
addb
inc
xor
push
mov
call
loop
nop
push
jnp
and
bound
or
and
or
adc
pop
or
jp
and
mov
popf
test
popa
ret
dec
and
icebp
xor
pusha
in
or
int
cli
in
or
insb
aaa
add
pushf
mov
movsb
push
inc
push
mov
iret
clc
outsb
add
adc
add
pushf
add
xor
gs
xlat
xchg
call
push
pop
stos
adc
pop
dec
add
ret
mov
aaa
dec
adc
add
scas
mov
lods
inc
pushf
push
inc
sub
jne
or
xchg
add
pop
mov
into
lahf
out
pushf
sbb
push
idiv
pop
and
jne
cmp
jb
sub
jmp
push
cli
sub
push
pop
dec
pop
cmpl
push
setl
movzbl
mov
jnp
out
stos
test
sub
or
sbb
mov
add
xor
mov
inc
inc
scas
in
loopne
mov
jl
add
mov
in
in
or
add
dec
push
mov
lods
out
push
rorl
cmp
addb
lahf
jmp
push
repz
rcl
pop
lea
push
jne
or
and
mov
add
iret
leave
in
push
test
imul
xchg
mov
rorl
popa
or
mov
push
mov
loop
xor
sub
mov
sbb
aam
fisttps
and
inc
pop
aas
loope
push
adcl
or
test
dec
ljmp
sub
mov
rclb
or
in
mov
and
cmp
mov
mov
cmc
sbb
push
xor
bound
pop
jns
frstor
inc
lds
inc
and
in
xchg
adc
jl
dec
push
pop
sub
and
pop
xchg
push
push
cmc
xor
movsl
je
cmp
mov
cmp
mov
mov
add
sbb
dec
add
test
vpunpckldq
and
push
jb
pop
stc
ss
loope
xchg
or
inc
adc
mov
xor
or
sub
sub
dec
push
cmp
lds
push
enter
jmp
sbb
xor
add
and
sbb
xor
pop
dec
fnstenv
sub
push
pop
mov
je
adcb
xor
sbb
and
push
stos
push
sbb
jns
bound
push
dec
xor
pop
and
pop
adc
add
lock
cmp
ret
ret
pop
ret
scas
in
add
mov
mov
or
jb
xchg
pop
in
sarb
dec
adc
cmp
adc
sbb
lea
xor
dec
sbbl
mov
pusha
lds
lock
sbb
adc
rorb
push
shl
dec
je
es
pop
and
inc
std
xor
testl
test
jle
add
push
or
pusha
lock
clc
cwtl
das
add
sub
xor
ret
jo
mov
inc
ja
lock
fdivrl
inc
sub
pusha
movsb
jo
xor
cltd
xchg
pop
inc
jecxz
sub
out
movups
subb
adc
into
mov
cmp
xchg
cmp
push
dec
sarl
add
insl
mov
fs
cmp
scas
adc
inc
decl
or
mov
fisttps
adc
xor
xchg
lods
and
enter
xor
add
sbb
add
add
in
xchg
push
stos
lds
pop
pusha
inc
daa
icebp
push
mov
shrb
mov
xchg
pushf
and
inc
pusha
mov
sbb
or
jne
dec
lods
lahf
cltd
sbb
das
pop
stos
jae
lret
inc
sub
cmp
sbb
jb
adc
and
cmp
mov
add
adc
sub
sbb
and
adc
sarb
mov
sub
outsl
sbb
mov
pcmpgtb
jnp
xchg
cmpsl
gs
mov
jns
add
sbb
dec
lret
inc
add
inc
push
dec
int
lock
add
adc
pop
decb
adcb
xchg
jmp
mov
pop
sub
test
push
adc
aad
jle
fistl
mov
xor
add
push
jg
push
push
sbb
fs
xchg
adc
clc
sub
sbb
sub
inc
sbb
cli
add
cmp
push
push
insb
js
push
add
ret
push
cmpsb
pop
push
pop
sbb
pop
dec
sub
jne
and
iret
add
lahf
insb
nop
adc
dec
sbb
repz
jg
sahf
xchg
fstpl
mov
pop
enter
fmuls
xchg
aas
push
imul
pop
add
xchg
xchg
jno
shrl
pusha
jo
push
inc
and
cwtl
push
rcrb
xchg
mov
add
add
adc
push
fdivrs
aaa
push
add
sub
pop
add
inc
call
sbb
or
and
jne
xor
push
pusha
xchg
pushf
insb
push
jl
js
xchg
sbb
arpl
jnp
dec
and
adcl
cmp
xor
imul
and
cmp
jmp
pop
inc
pusha
dec
and
inc
sti
and
pop
jb
push
pop
push
pop
pushf
sub
dec
cmpsb
in
add
je
jl
dec
js
or
and
push
sub
andb
inc
and
js
xor
sbb
push
test
xor
sub
adc
xor
push
inc
xchg
jl
js
cmpl
inc
or
sbb
mov
test
mov
pushf
adc
xchg
mov
cmp
sub
pushf
sbb
cmp
cmp
je
insb
pop
inc
pop
xor
xor
insb
addl
rorb
inc
test
pop
pop
mov
add
sahf
inc
mov
add
mov
dec
and
and
jmp
jbe
sub
jae
xchg
dec
adc
fwait
test
cwtl
ss
jmp
enter
fwait
add
inc
enter
add
jns
add
xor
ret
inc
push
or
add
daa
sahf
sarl
jae
cmp
das
sub
adc
jne
std
nop
push
js
push
pop
aam
sti
out
ss
mov
dec
dec
shrb
jns
jns
push
pop
fs
out
addr16
or
xor
sbb
stc
es
sbb
push
cmp
fbld
mov
sbb
repnz
pusha
pusha
push
lods
adc
xchg
adc
or
test
jo
add
ret
mov
push
fwait
pusha
and
seto
rolb
out
or
imul
fnstsw
push
push
jp
inc
push
sub
xchg
mov
jmp
and
or
and
and
sub
mov
inc
sub
cmpsl
aam
add
sahf
add
jmp
push
pusha
popa
mov
sub
adc
pop
fsubrl
push
inc
push
lods
fwait
subl
inc
mov
add
push
xchg
and
and
or
inc
jmp
dec
dec
push
sbb
inc
adcb
mov
testl
adc
sub
and
cmp
pop
add
hlt
push
sub
dec
adc
or
daa
xor
jo
push
mov
sbb
psubusw
and
and
inc
rorl
ret
pop
pop
add
and
adc
sbb
pop
aad
cmpb
je
scas
call
and
leave
add
cmp
push
jg
int
pop
cmpsb
push
or
shlb
and
pop
cmp
popa
cmp
dec
and
xchg
and
and
inc
and
cmpsl
ret
mov
push
icebp
cmp
pushf
cmp
mov
outsl
jle
mov
mov
cmp
fimuls
das
mov
pop
add
out
or
popa
add
loope
inc
filds
xchg
add
mov
sub
mov
je
adc
movsb
push
lea
xchg
loop
push
and
adc
sarl
iret
add
sarb
lahf
clc
xorb
cmc
fwait
ljmp
add
dec
cmp
ror
es
loope
fwait
loopne
push
repz
fcomps
sbb
sub
mov
pop
scas
pop
and
inc
repz
dec
mov
test
rol
insl
inc
jmp
fisubrl
sub
push
sar
lea
dec
jl
xchg
pop
mov
pushf
fldcw
and
cmp
push
popa
pusha
sub
xchg
in
pop
pusha
call
ret
div
or
ja
pop
pop
adc
pop
mov
sahf
pusha
mov
and
test
test
loopne
jnp
cmp
or
movsb
mov
leave
dec
pop
jns
addb
jmp
jns
fcomp
lock
push
inc
push
add
enter
mov
add
mov
mov
add
into
mov
pop
lods
popf
into
adc
and
push
xchg
jmp
mov
aad
jmp
sahf
cwtl
jne
sub
xchg
or
push
sub
inc
push
add
ljmp
or
jg
xchg
xchg
incb
mov
cmp
mov
sbb
push
movsl
xchg
sub
xabort
pop
stc
decl
mov
jmp
inc
mov
out
inc
push
inc
or
inc
movsl
mov
jp
nop
dec
push
add
inc
xor
nop
or
mov
mov
gs
lahf
pop
push
and
xor
push
xchg
scas
dec
mov
popf
add
cld
mov
or
mov
cwtl
cmp
sub
mov
dec
or
push
cld
lcall
push
mov
test
add
mov
flds
sbb
sbbb
pop
mov
push
in
shll
incb
ds
fld
add
ljmp
cmp
cmpl
pop
shlb
push
ret
sbb
ficoml
mov
push
or
add
cli
xchg
loopne
or
mov
sbb
mov
jl
cmp
sub
fsubrs
dec
jp
and
jg
add
jecxz
jle
add
xor
roll
mov
push
jge
mov
jmp
faddl
lds
call
sbb
std
or
mov
cwtl
int3
inc
addr16
frstor
adc
int3
iret
repnz
inc
pop
subb
add
push
add
or
cmp
pop
imul
push
and
adc
call
or
mov
add
push
xor
mov
xchg
lods
roll
push
push
sbb
gs
adcl
insb
and
ds
xlat
jns
pop
rorl
adc
adc
in
aam
aaa
mov
pop
rorb
add
lea
add
jl
pushf
dec
sbb
test
push
xchg
inc
jp
jbe
movsb
cld
xor
into
sbb
andl
ficoml
push
ret
push
punpckhdq
pop
int3
popf
inc
daa
adc
adc
aas
mov
xor
cmp
cmp
xlat
jo
divl
or
stos
push
sub
mov
and
clc
mov
pop
or
int3
outsl
inc
mov
sub
mov
call
add
int3
je
or
pop
clc
inc
mov
jns
jle
ljmp
adc
test
or
das
sub
add
cmp
pop
jmp
xor
jne
pop
mov
jbe
idivl
push
inc
gs
xor
cwtl
icebp
mov
mov
lahf
cli
xor
pushf
in
lock
fcmovu
pop
popa
adc
out
xchg
jne
rcrl
inc
sbb
mov
xchg
shlb
fsubs
xchg
xchg
push
push
mov
sbb
mov
cmpl
xor
jbe
cmp
xchg
sbb
push
decl
mov
add
imul
or
insb
cmp
leave
ret
adc
mov
and
loope
repz
push
call
jmp
cmpl
xor
lsl
push
cmpl
imul
xlat
or
inc
movsl
inc
push
lock
fcomps
sarb
jbe
loopne
roll
add
mov
xchg
rcrb
les
mov
pop
inc
mov
mov
sbbb
adc
nop
ficoms
int3
test
das
add
clc
add
cltd
clc
clc
das
loopne
lea
push
push
adc
jl
mov
ds
push
in
or
xor
adc
adc
adc
in
shlb
adc
adc
mov
leave
stos
jmp
and
push
lret
push
jb
jecxz
sbb
js
lret
adc
push
mov
adc
js
pop
jmp
ret
pop
lods
jb
and
jne
mov
mov
add
and
jo
push
mov
data16
mov
ret
into
iret
in
pusha
out
xchg
xlat
imul
int
fs
sbb
xlat
sub
pop
or
push
add
jle
sti
adc
mov
je
jmp
test
sbb
adc
sbb
test
pop
push
push
mov
in
cmp
push
ss
mov
push
das
addr16
dec
adc
repnz
inc
test
nop
or
inc
in
shlb
out
and
push
ret
add
mov
test
mov
sbb
or
and
cld
xchg
pop
pop
sub
pusha
sbb
sbb
push
test
stc
mov
lret
call
loopne
dec
mov
add
das
add
sbb
in
sbb
pop
in
sbb
mov
add
jl
cld
dec
jne
mov
adc
js
and
adcb
gs
adc
lods
mov
inc
cmp
in
lods
xor
test
ljmp
inc
cli
int3
stos
lock
addr16
cmp
mov
sbb
adc
push
cmpsl
inc
mov
xchg
inc
clc
jl
subl
mov
movsb
lock
jb
lcall
out
test
das
loopne
mov
sub
jne
xor
inc
xchg
adc
add
sbb
sbb
or
loopne
sub
fs
jp
pop
cs
add
repnz
add
mov
rcl
mov
addb
loope
mov
inc
inc
loope
in
cmpb
cli
data16
or
or
das
mov
sub
sub
push
incb
add
inc
or
add
cmp
mov
cwtl
pushf
cmpsb
movsb
sub
ljmp
lock
lock
push
call
sub
fcoml
fsubrs
ss
pop
push
fs
notb
adc
stos
inc
lods
dec
loopne
or
add
mov
inc
rcll
add
idivl
pop
add
sti
sbbb
rcll
int
adc
rorl
movsl
jge
push
rcrl
and
sbb
sbb
inc
dec
shr
rcrl
cmp
push
dec
fsubrp
mov
into
jae
push
outsl
das
push
into
xor
add
bound
mov
cmpsb
jle
xor
mull
call
imul
dec
add
inc
in
and
dec
or
add
pop
inc
pop
popa
pop
mov
dec
add
sbb
out
push
idivb
mov
mov
mov
pushf
sub
mov
and
inc
push
xor
mov
jmp
cmp
jp
shr
push
stos
call
inc
and
mov
pushf
ret
mov
cmp
sbb
pop
mul
xor
je
or
lods
fidivrs
or
push
jg
dec
arpl
aaa
add
add
push
gs
test
jne
mov
je
pop
scas
outsb
fisttpll
dec
jns
jmp
adc
push
data16
in
push
adc
dec
xor
lret
insb
push
and
push
aam
outsl
lea
test
cmp
scas
mov
test
cmpsb
mov
call
mov
add
mov
add
jge
push
xor
loop
dec
pop
movsb
push
jl
cs
rorl
mov
ret
cmp
xchg
push
dec
sbb
push
pusha
movsl
jp
sbb
pop
cmp
daa
bound
je
sbb
pop
jbe
mov
add
add
cld
inc
or
and
in
data16
andl
lea
aaa
dec
aam
push
mov
lret
test
pop
add
push
movsl
dec
in
add
dec
sti
int
push
dec
sub
repz
inc
xchg
stos
imul
or
xor
mov
xor
add
sbb
jge
out
push
inc
pop
cmp
mov
mov
mov
mov
test
xchg
je
sbb
cmp
cmp
sti
nop
push
adc
loop
test
dec
xor
leave
lock
inc
imul
mov
mov
inc
nop
loope
xchg
sub
pop
aaa
lods
and
dec
scas
dec
cli
test
sbb
jo
adcb
fwait
pop
inc
addl
mov
mov
mov
jmp
cmp
pop
in
sub
shll
out
out
les
mov
push
push
xor
xchg
add
jbe
xchg
inc
or
pop
pop
in
xchg
lcall
je
cmc
adc
push
ret
lds
lods
fistpl
mov
mov
pusha
jmp
push
pop
pop
push
push
shll
or
and
ja
and
push
por
repnz
out
adc
clc
mov
push
and
divl
pop
idivl
mov
push
or
and
js
fwait
ljmp
aas
inc
je
or
cmp
mov
clc
aam
cmpsl
jne
jno
pusha
push
enter
dec
jl
fisttpl
or
jae
inc
add
push
jae
arpl
dec
push
repz
cmp
or
push
or
in
lret
dec
insb
jne
or
cmp
push
push
adc
sub
jb
fisubs
lea
js
imul
push
jo
fildll
cli
mov
je
mov
test
mov
adc
push
push
fidivs
push
or
jne
mov
movsl
cmp
je
push
pcmpeqw
pop
xchg
aam
and
insb
mov
cmp
add
xor
icebp
popf
sbb
xlat
inc
add
xchg
or
je
test
dec
negb
dec
sti
jb
push
push
push
sahf
xchg
adc
fimuls
clc
pop
jae
ficoms
push
push
outsl
and
pop
inc
sbb
addl
lock
push
mov
push
adc
xor
ja
xor
xor
inc
push
xor
push
jae
add
xor
inc
xchg
ret
mov
adc
stc
mov
lahf
push
cmp
jne
clc
les
in
push
call
mov
je
rorb
fwait
jnp
cmc
mov
add
cmp
mov
dec
sub
in
or
xchg
les
mov
rolb
sbb
sti
pop
into
sub
xor
sbb
inc
rorb
inc
adc
jle
cs
mov
push
lcall
add
cmp
push
mov
xor
imul
or
add
cmp
shll
insb
jo
insb
or
js
fdivr
cld
pop
lcall
andl
sar
or
push
mov
int3
mov
roll
xchg
inc
pop
rol
fidivrl
scas
sub
add
and
pop
les
mov
mov
adc
adc
cwtl
sbb
cmp
pushl
imul
nop
add
fadds
sbb
sbb
push
fs
lcall
jbe
push
inc
push
push
xchg
add
push
push
js
rorb
cmp
sarb
adc
sar
adc
and
notb
call
jo
insb
mov
xor
enter
sar
clc
or
mov
dec
pcmpeqw
imull
jne
fnstcw
addr16
es
bound
pop
mov
data16
or
addr16
std
xchg
fbld
jmp
cmp
sbb
mov
jne
cs
xor
shlb
std
and
xchg
add
ss
mov
data16
push
sbb
outsb
sbb
mov
and
jb
mov
or
xchg
sub
leave
lea
stos
js
or
call
push
pop
inc
sbb
loopne
push
hlt
ret
add
test
and
into
in
repnz
repnz
bound
pop
enterw
testb
push
rol
ljmp
shl
ret
mov
push
sbb
test
xchg
mov
pop
jne
lea
add
scas
ret
mov
popf
dec
push
pop
popf
js
xorl
adc
xchg
orb
ret
inc
sbb
ja
adc
cmp
mov
sahf
mov
add
and
or
or
jmp
pop
repnz
out
add
jle
cmp
iret
cmp
orl
pop
in
clc
pusha
pop
mov
add
imul
cmp
add
xchg
out
add
mov
js
in
pop
sub
mov
leave
cmp
stc
lock
loope
push
stc
je
icebp
jne
dec
pop
sub
xor
push
xchg
ss
ja
fwait
or
pop
neg
lahf
sub
mov
scas
dec
outsb
pop
dec
sub
mov
out
push
andb
negb
outsb
or
je
ret
adc
popf
inc
ds
push
test
pop
jns
dec
mov
mov
or
mov
mov
sahf
ljmp
mov
clc
jae
mov
dec
xchg
sbb
jne
add
push
testb
cmp
insl
decb
push
push
scas
addl
dec
adc
call
arpl
push
orb
cmp
adc
mov
icebp
mov
jge
loop
mov
nop
outsl
icebp
mov
inc
enter
inc
mov
pop
mov
decl
sub
mov
js
lds
cli
xor
xchg
je
push
and
or
push
arpl
or
add
pushl
mulb
ljmp
or
dec
xor
int3
lock
jnp
sbb
dec
add
push
mov
xchg
and
daa
add
or
mov
gs
je
inc
inc
push
cltd
pop
fs
pusha
fs
xchg
insb
insb
push
inc
loope
push
lcall
insb
in
arpl
pop
xchg
ret
ja
and
mov
loope
cli
ret
in
dec
adc
je
cmp
je
mulb
xor
push
cmp
and
inc
and
iret
je
xor
push
xchg
out
push
mov
push
lds
imul
inc
pop
xchg
loopne
add
jmp
lea
fiadds
call
orl
out
push
add
lock
adc
add
sahf
pop
in
lock
cmpsl
addb
jmp
lret
push
push
adc
or
push
mov
add
repz
pop
dec
cmp
or
xchg
int
mov
inc
xchg
fbstp
into
add
push
mov
lahf
mov
into
lea
mov
sub
cs
sub
adc
xchg
dec
cmpsb
mulb
push
je
loopne
cmp
push
mov
jl
sbb
sbbl
inc
sub
mov
add
mov
and
and
xlat
test
test
ljmp
sbb
adc
jbe
add
adc
iret
rcrl
push
sbb
and
int
int
insb
clc
push
push
jge
int
jno
jne
enter
add
adc
out
xchg
cs
push
call
xchg
aas
jne
outsb
out
fsubrs
sbb
jl
clc
sbb
pop
cltd
push
mov
and
addb
fidivrs
sbb
lods
sub
push
test
sub
jo
cmp
or
jnp
fwait
sbb
add
fimuls
sahf
lret
js
push
and
xorb
dec
push
lea
add
jo
aam
add
pushl
daa
push
fmul
push
or
sbb
lods
or
add
adc
xchg
or
movl
mov
pop
xor
pop
and
push
lock
sub
fs
adc
sub
enter
mov
pop
arpl
push
and
sbb
pop
js
ss
add
ja
pop
mov
std
mov
addb
ja
pshufw
je
push
sbb
or
and
adc
jmp
pop
dec
pusha
dec
in
pop
loopne
or
xorl
and
mov
mov
or
jge
sbb
or
lret
adc
test
inc
sbbb
mov
ret
pop
imul
pusha
pop
dec
sbb
ljmp
mov
adc
and
push
and
addr16
add
push
or
pop
jo
sbb
push
pop
enter
into
jecxz
lock
adc
adc
and
in
cmp
ds
leave
lods
inc
out
cmp
xchg
lret
sbb
pop
sbb
fistpll
adc
lcall
adc
fistl
fs
loope
sub
or
cmp
jbe
inc
faddl
fwait
cmpl
xorb
cli
add
por
adcl
mov
int
jecxz
and
sub
mov
jo
sbb
add
lret
pop
and
aam
leave
sbb
mov
ffree
xor
pop
mov
movsl
push
xor
cmp
sbb
mov
xchg
push
pop
call
or
es
out
jo
push
cli
inc
adc
ds
out
mov
hlt
gs
mov
xor
push
lods
mov
test
jb
mov
jecxz
das
inc
cmp
and
adc
mov
dec
test
insl
aaa
int3
add
jp
and
and
add
or
test
inc
cmpsl
cs
dec
shll
jae
add
push
push
push
push
je
push
fs
and
lahf
mov
jl
or
adc
cmp
push
arpl
sub
in
push
push
sbb
popf
out
push
and
sub
push
popa
pop
fimuls
xchg
sub
sub
xchg
add
subl
outsb
inc
test
sub
cmp
sbb
adc
sub
imul
stos
sbb
sbbb
sbb
lods
pop
inc
xchg
fdivl
addr16
pop
pop
add
and
push
fbstp
cmp
or
sahf
mov
sbb
add
xor
push
test
or
sbb
xor
lock
jns
push
cmp
ss
add
and
test
pop
inc
inc
inc
sub
dec
into
dec
sbb
xchg
stos
inc
aas
sub
inc
xchg
test
sub
std
decl
xchg
out
cmp
insb
cs
data16
sarb
ror
cmp
addb
andb
sahf
dec
push
addl
call
mov
xor
shlb
sub
bound
pop
jle
lret
mov
push
xor
test
sbb
push
or
add
or
push
and
mov
ds
fmull
orb
add
xchg
lret
sbb
mov
lret
std
push
and
xor
ficoms
sub
sub
dec
popf
popa
sbb
and
cmp
ret
inc
es
xor
and
adc
lock
fcoml
sbb
sbbl
insl
inc
insb
js
pop
push
rcll
ret
add
sbb
outsb
and
sub
sbb
inc
cwtl
test
pusha
adc
xor
pop
inc
xchg
dec
jo
inc
add
rolb
imul
or
lret
inc
jl
stos
cmp
fidivrl
sbb
inc
jmp
pushl
xchg
stos
push
pop
mov
iret
call
inc
lea
loope
out
ss
out
and
mov
cmp
or
xor
ret
push
pop
aaa
push
inc
testb
test
jns
ss
out
pop
sub
int3
mov
jl
inc
push
add
sbb
rorl
jl
cld
and
push
pop
xchg
outsb
inc
or
lcall
loop
cmp
xor
pop
and
push
xchg
dec
outsb
mov
arpl
push
jnp
adc
xor
lahf
or
movb
jo
ljmp
push
sbb
push
test
or
xchg
inc
pop
mov
dec
mov
fdivrl
jae
test
push
mov
loopne
lods
jl
cmc
adc
dec
cmp
adc
jl
or
cmpsl
cmpsb
call
adc
sbb
add
shr
pop
xor
jecxz
add
lock
fmuls
adc
pop
cmp
jbe
inc
push
inc
adc
inc
cmpb
nop
push
and
fdivs
rolb
sbb
jmp
addl
pop
movsb
push
xchg
xchg
pop
fnsave
testb
push
leave
orl
lock
push
sbb
xchg
je
cld
popl
sbb
cmp
cmp
sub
xchg
xor
js
imul
ret
div
arpl
sti
inc
sbb
or
add
xchg
jb
mov
pusha
lcall
jae
dec
jl
loope
xor
pop
pop
add
xchg
mov
jl
inc
insb
adc
pop
adc
dec
sbb
sbb
inc
ret
mov
lcall
xor
cmp
lret
mov
repnz
mov
stos
pusha
xor
sbb
out
dec
movswl
add
and
cmp
add
xor
popf
shll
and
lea
jno
lock
ja
push
push
test
aaa
stc
je
or
and
mov
lods
cmp
fbstp
add
xchg
sub
mov
xor
fldl
call
movhps
sub
add
xor
xor
pop
out
movsb
push
push
push
xor
push
mov
dec
sbb
and
add
inc
mov
add
xor
fdivl
nop
data16
pushw
pushf
data16
pushf
inc
xlat
adc
aad
pop
mov
cmp
test
rcl
mov
inc
push
jne
mov
adc
inc
or
daa
add
pop
jmp
jae
push
jo
jmp
insb
or
mov
pop
and
pop
push
push
pop
cmp
lods
mov
cltd
inc
push
push
aad
sti
sub
xchg
xor
mov
dec
loope
jo
mov
inc
or
mov
lea
rcll
inc
and
or
or
pushf
mov
aam
pop
fisubs
orb
mov
xchg
xchg
dec
mov
cwtl
cmp
add
adc
and
push
addl
test
cmc
cmp
add
add
in
je
icebp
pop
mov
add
adc
dec
xchg
andl
cmp
xchg
adc
decl
dec
mov
adc
es
mov
mov
jl
xor
xchg
mov
mov
or
int
lock
mov
xchg
sub
jae
cmp
or
inc
sub
add
push
mov
in
push
mov
or
inc
cld
shrl
sub
es
and
and
dec
cli
mov
push
ret
mov
push
mov
std
push
cmp
pop
jae
mov
loop
push
xor
mov
add
sub
orl
jbe
add
adc
in
pop
loope
hlt
andl
sub
dec
push
push
ds
lahf
lea
add
inc
and
jo
jl
je
xor
cmp
or
inc
mov
dec
iret
cmp
incb
testb
adc
sbb
aas
xchg
jno
and
cmp
jne
push
mov
mov
cld
jo
pop
lcall
jle
xor
xchg
push
mov
add
push
sbb
sbb
mov
jnp
and
aas
xchg
or
inc
int
jbe
xlat
popf
lret
adc
add
loope
js
xchg
inc
cli
push
cld
mov
add
xchg
clc
in
pop
call
movl
shr
inc
das
jecxz
mov
sbb
mov
repnz
adc
dec
jl
mov
sbb
or
pusha
insb
std
mov
decb
dec
dec
data16
frstor
and
xor
add
xchg
js
jb
jge
pop
mov
cmp
or
loopne
push
cmpsl
bound
clc
into
mov
adc
pushf
repnz
mov
push
adc
pop
adc
sub
rcr
sub
jne
add
jns
jmp
push
xor
das
add
cmc
sbb
dec
insb
or
mov
mov
mov
int
cmp
inc
xchg
loope
push
cmp
and
pop
inc
mov
adc
xor
lcall
adc
jge
jmp
mov
testb
cmp
add
testl
in
int
pop
dec
jle
fimull
cmpb
bsf
fdivs
ret
sbb
push
add
inc
xor
call
push
sub
mov
adc
mov
mov
daa
add
fmull
add
or
pop
stos
das
push
fimuls
push
sub
push
pop
mov
sbb
push
lea
cmp
push
mov
add
aaa
jbe
rolb
or
lea
sub
cmp
dec
pop
or
jle
inc
or
push
jg
mov
add
mov
jo
fisubl
ss
in
imul
aaa
mov
inc
or
jo
out
or
daa
and
dec
dec
je
xor
inc
adc
jl
pop
jo
xchg
lret
inc
xor
lds
ret
out
call
nop
popa
repnz
jne
inc
jecxz
lds
cmc
jg
push
mov
mov
ret
mov
mov
lret
stos
lock
xor
xchg
cmp
pop
cltd
inc
push
dec
add
mov
dec
int3
les
ret
call
rclb
pop
mov
push
out
mov
jge
push
cltd
dec
cmp
roll
or
pop
bound
mov
or
jb
or
fisttps
jmp
pusha
test
push
lock
insb
jo
call
div
lock
jnp
xor
xor
out
pop
mov
mov
xchg
mov
fs
adcb
loopne
pop
negl
lea
ret
lret
mov
push
cmp
push
push
push
call
inc
mov
gs
dec
or
cmpb
loope
or
or
dec
dec
mov
fbstp
sbb
fistpll
sbb
fdivrl
pop
jmp
or
mov
dec
les
jo
add
jp
into
adc
sbb
cmp
xlat
jne
lcall
outsl
fisttpll
jl
je
add
push
mov
mov
testl
or
mov
adc
packsswb
mov
push
cltd
and
cltd
js
and
rorl
scas
or
adc
mov
or
insl
jne
mov
fcoms
cs
jo
mov
push
mov
sbb
jo
push
sbbl
mov
sti
and
pop
lods
jmp
pop
pop
flds
hlt
or
mov
push
pushf
add
xor
adc
add
in
nop
jae
xchg
movsl
push
push
push
and
add
pop
mov
shrl
mov
sbb
push
gs
inc
fwait
mov
sbbl
xor
cmp
testl
mov
fnstenv
imul
push
push
mov
push
rorb
adcl
or
jge
ret
inc
and
dec
pop
lods
adc
fstl
mov
jge
mov
mov
rcrb
push
pop
add
lods
sahf
test
dec
lds
in
shll
je
xchg
ds
leave
xchg
les
xor
adc
add
dec
js
insl
xchg
push
inc
push
stos
pop
fdiv
inc
in
mov
or
inc
push
sub
pop
test
fcoml
dec
push
jbe
push
push
out
and
jnp
notb
pop
dec
cmp
pushl
push
push
adc
out
adc
je
lret
xchg
jp
pop
mov
mov
loopne
add
ret
testb
add
lcall
cmovno
pop
jo
push
test
and
and
mov
out
out
xor
adc
outsl
jo
movb
jbe
xchg
addb
pop
or
je
or
sbb
out
je
sub
sub
cmp
cmp
stos
jecxz
dec
jnp
test
ds
xchg
lock
ss
jne
mov
jnp
fildll
bound
push
jmp
cmp
sbb
pusha
push
adc
adc
movsl
xor
inc
adc
or
pop
pusha
inc
cmpsb
mov
or
lds
dec
movzwl
dec
sub
dec
cmp
cmp
inc
jmp
jg
mov
mov
add
mov
or
dec
gs
add
je
loope
mov
ret
mov
add
or
adc
push
add
insl
pop
pop
mov
test
scas
and
es
mov
add
push
movb
popl
or
and
pop
push
or
je
sub
sub
or
add
xor
add
push
adc
les
test
fs
cmp
or
push
adc
mov
mov
add
movsl
adc
pop
in
push
or
nop
pop
dec
pop
insl
or
pop
insl
lea
inc
ja
or
test
outsl
push
daa
stos
xor
and
bound
pop
add
cld
push
pop
stos
push
rorb
mov
sub
inc
and
test
mov
cmpsl
adc
pop
fcoml
mov
cwtl
xor
out
je
orl
inc
xor
inc
fimull
inc
push
inc
cmpsl
mov
cwtl
fisubs
add
orb
fsubrs
fadd
ss
fs
in
push
push
ror
push
js
enter
mov
xor
sbb
ret
arpl
xchg
mov
sbb
fcompl
faddl
adc
cs
lds
adc
je
fucomp
xchg
les
xor
imul
test
jb
jns
popa
mov
cmp
xchg
callw
cmp
nop
out
xor
repz
push
adc
push
loope
and
call
fld
jno
inc
cmp
pop
jge
and
cs
cmp
call
mov
and
push
xchg
fcoml
in
xchg
out
inc
pop
and
in
sarl
and
nop
push
int3
aam
and
xor
cltd
shlb
fisttpll
pusha
jl,pn
call
stos
lret
jl
daa
addr16
sbb
jmp
addr16
mov
add
fwait
adc
or
mov
sbb
test
sub
jo
in
add
pushf
popa
push
jmp
inc
mov
rorb
push
jns
add
jbe
pop
shlb
sbb
jmp
jle
dec
ficoml
daa
loope
ret
push
cmp
je
test
insb
hlt
pop
xor
push
pop
adc
push
rcll
pop
mov
jnp
push
mov
lcall
jecxz
imul
movl
loope
jo
inc
push
jne
jle
inc
and
andl
in
enter
sbb
in
cmp
fcoml
fsubs
test
mov
inc
fcoms
repnz
mov
shlb
and
loopne
subb
loopne
leave
test
je
and
pop
imul
jb
xchg
mov
add
mov
pop
cld
mov
sbb
sub
aas
das
or
mov
add
adc
int
sbb
sbb
cmp
lret
testl
lock
rclb
scas
pop
push
or
mov
add
fldt
adc
loope
add
push
cmp
or
xchg
add
or
push
jp
cmp
xor
xor
jo
sub
add
push
and
hlt
loopne
int3
fsubr
clc
test
dec
pop
incl
push
dec
cld
cmpsl
push
shl
mov
fcos
or
dec
adc
gs
inc
pop
pop
xor
push
adc
in
add
mov
shl
into
pop
jp
jnp
movsl
xchg
dec
jb
cmp
sbb
fists
mov
mov
rorb
dec
shlb
cmp
and
xor
mov
insb
sbb
push
sahf
pop
push
loope
mov
xchg
inc
pushf
loopne
push
add
or
adc
fidivl
or
shrb
xor
aaa
xor
dec
mov
lods
push
push
xchg
int3
add
push
xchg
pop
dec
cmp
push
xor
cmp
lods
ror
mov
loopne
mov
out
fchs
fwait
std
jl
mov
icebp
add
push
pop
je
xor
ja
repnz
cmp
add
xchg
call
mov
loopne
and
daa
push
addb
cmp
pusha
pop
cmpsl
push
enter
jne
lods
xor
es
add
in
bound
dec
or
ret
out
outsb
arpl
pop
mov
cs
pop
xchg
push
cmp
push
movsb
aas
cmp
jns
or
inc
adc
fstpt
je
and
pop
xchg
push
jg
and
cmp
dec
or
clc
add
fildll
outsb
sarb
sbb
mov
cltd
xchg
les
push
or
adc
add
or
cwtl
mov
out
jecxz
push
sub
dec
adc
and
insb
dec
sbb
rolb
addr16
push
push
aas
loop
and
mov
movsl
inc
cmp
mov
in
fcomps
pusha
inc
lods
push
push
pop
movb
push
adc
inc
jo
mov
adc
imul
jle
hlt
jge
loope
loopne
jns
inc
jne
adc
cmc
dec
dec
xchg
enter
xorb
pop
pop
scas
pop
mov
adc
es
adc
pop
sbb
dec
fisubl
dec
fs
push
sub
xor
pop
inc
jbe
loopne
orb
aaa
add
testb
pop
or
xor
sub
sbb
push
out
sbb
into
push
call
test
movsl
fwait
call
aaa
stos
sbb
adc
ljmp
xchg
mov
sqrtps
lret
es
add
je
add
inc
add
test
movsl
cli
call
dec
jmp
out
push
adc
xor
cltd
inc
jnp
add
jne
or
mov
xchg
push
cli
sub
arpl
popf
les
add
push
sub
mov
subl
dec
dec
cli
add
pusha
ja
jmp
or
push
cmp
mov
dec
push
stc
fsubs
pop
xor
inc
pop
mov
mov
leave
fstpt
xor
je
mov
fistpll
lcall
outsb
shlb
xlat
or
in
fs
ljmpw
cwtl
sub
push
xor
dec
adc
fiadds
dec
mov
ss
push
mov
sbb
mov
pushf
in
xchg
push
adc
and
and
cld
pop
les
inc
clc
push
cld
push
adc
lcall
repz
movsb
xchg
sarl
push
jmp
jmp
pop
push
sbb
mov
popa
adcl
popa
pop
rep
icebp
xchg
sbb
xor
and
sbb
lds
jno
cmp
push
dec
out
add
in
std
adc
es
adc
pop
push
inc
sbb
xchg
inc
xchg
mov
xor
mov
xchg
inc
push
cltd
add
push
dec
sahf
and
and
bnd
sbb
xchg
or
and
add
inc
sub
sbb
bound
nop
mov
add
add
lea
fisttps
clc
or
xchg
add
sbb
dec
cmp
or
sbb
inc
repnz
push
addr16
push
jb
or
adc
xor
inc
repnz
cmp
push
cmp
pop
and
inc
cmp
xchg
cmp
cmp
and
lret
push
push
or
jno
ret
cmp
or
xchg
iret
lret
std
adc
sbb
inc
xchg
or
mov
and
bnd
add
fwait
loope
les
xor
add
dec
in
jns
dec
xchg
adc
les
lea
dec
jmp
xchg
cmp
adc
mov
pop
ss
ret
push
dec
push
mov
rcr
stos
or
mov
add
imul
loopne
imul
je
or
rclb
ljmp
call
cmp
push
mov
pop
adc
xor
loop
xor
add
or
sbb
or
and
jmp
xorb
aaa
sub
xchg
scas
mov
pop
popa
shrl
xor
lret
dec
loopne
mov
movsl
or
das
mov
sub
mov
push
sbb
or
adc
movsl
sub
cmp
ficoms
sbb
stc
rcll
cwtl
fdivr
sbb
out
push
xlat
mov
testb
fadd
jge
loopne
rolb
jecxz
jo
jno
jae
loopne
lahf
or
mov
push
imul
and
inc
push
xchg
sbb
mov
xor
mov
out
loopne
test
stc
lcall
dec
scas
xchg
jbe
pop
in
call
out
and
cmp
aas
mov
test
add
orl
sub
sbb
add
xor
xchg
fsubp
jo
lock
and
in
mov
lods
pop
xor
ljmp
cmp
out
call
push
lock
adc
cmp
sub
jne
pop
add
jns
sub
daa
push
iret
add
mov
daa
or
adc
dec
xor
int3
pop
or
jmp
mov
push
cmp
cmp
or
jno
dec
dec
xchg
jmp
fwait
push
sbb
or
jne
fs
test
cmpsl
mov
or
dec
cmp
lock
pushf
test
test
popa
shll
mov
in
xor
and
mov
loopne
add
dec
jbe
inc
mov
lcall
add
mov
push
fcompl
rorb
xchg
jns
jne
insb
jecxz
mov
call
push
and
dec
jae
or
fildl
push
loopne
stc
mov
push
int3
mov
dec
cmp
or
in
cs
inc
adc
stos
and
imul
add
or
xchg
in
jbe
push
jbe
push
adc
leave
jae
fbstp
mov
push
add
inc
jl
cmp
jae
divl
das
mov
shl
pop
cmp
jne
pop
adc
andl
jg
icebp
mov
pop
adc
or
mov
mov
pop
push
js
or
aam
mov
je
out
xchg
andb
loope
push
or
inc
adc
mov
add
shrb
or
mov
enter
enter
xchg
jg
or
sbb
aam
cmovns
pop
pop
hlt
test
xchg
or
aad
inc
pop
mov
loopne
mov
dec
or
fwait
or
aas
shrb
sub
subl
out
int
andl
jl
insb
push
es
cmpsl
and
push
cmp
mov
sbb
mov
add
sub
pushf
mov
sub
pop
add
cmp
enter
mov
dec
mov
mov
mov
scas
inc
inc
or
ja
lods
jae
jg
pop
rorb
cmp
jne
aad
imul
dec
sbb
adc
sub
test
jp
adc
or
cwtl
out
adcl
jo
jns
add
push
dec
jne
sbb
sub
sbb
mov
rcll
shlb
jmp
jbe
mov
push
xor
mov
loopne
push
lds
sbb
aam
pop
fwait
push
imul
sbb
popa
push
movsl
imul
hlt
adc
inc
jno
xchg
bound
xchg
test
or
mov
cld
pop
pop
test
cmpb
push
or
push
fcomps
in
mov
lret
adc
dec
stc
add
test
mov
mov
sub
cmp
jbe
mov
cmp
sbb
or
lock
pop
adc
jmp
arpl
pusha
test
pop
in
inc
xlat
add
jbe
mov
sub
xchg
or
lea
lret
or
jae
in
pop
jae
inc
xor
in
iret
mov
pop
push
mov
in
mov
add
rcrb
andb
pop
or
lods
sub
sbb
pop
sub
daa
xor
out
adc
xchg
xor
fs
or
or
inc
push
cmp
jb
sbb
cmp
cmp
inc
xchg
pop
std
out
sub
jmp
xor
pop
aaa
cmp
insb
std
ja
push
push
push
inc
pop
mov
jo
imul
sub
mov
ret
push
lock
add
or
adc
or
sub
push
adc
jne
jno
mov
lret
jle
push
js
inc
adc
daa
fcompl
adc
imul
mov
pavgb
subb
addl
ds
cwtl
xor
xchg
fdivrs
and
and
push
sbb
mov
inc
jnp
jmp
or
mov
and
cs
xchg
xchg
mov
inc
lahf
add
sub
shrb
and
fs
sub
mov
mov
xchg
dec
leave
mov
xchg
lcall
push
test
pop
adc
push
add
arpl
jae
es
ja
or
add
push
inc
jne,pt
push
sbb
repz
jb
mov
mov
mov
vmwrite
add
inc
adc
add
mov
cmp
cld
push
pop
ret
mov
mull
imul
mov
imul
jecxz
sub
inc
cmp
andl
add
pop
mov
mov
xlat
scas
loopne
pop
mov
loope
pop
imul
dec
add
dec
fsubrl
pop
add
js
jmp
add
or
fcoml
rorb
aad
mov
sub
sub
jb
iret
add
sub
inc
test
mov
push
inc
ljmp
push
sarl
rep
mov
adc
daa
or
mov
popf
jge
push
xor
incl
cmc
pop
cmpsb
xchg
sbb
adc
bound
cmp
addb
mov
push
jo
loopne
jge
lods
mov
dec
ficoml
idiv
das
xchg
ret
push
xchg
jb
mov
push
mov
push
add
or
xor
mov
in
and
mov
in
and
clc
in
test
cmp
aam
dec
rcll
sbb
sbb
mov
aaa
int3
push
outsl
sldt
and
push
xor
pop
mov
cmpsb
loop
pop
or
lock
adc
cmp
xor
stos
adc
in
or
mov
fcomp
popf
cmp
xor
mov
add
cmp
clc
rorl
pop
push
and
push
std
ljmp
cld
cmp
push
call
clc
push
scas
sub
insb
repnz
xchg
jae
test
pop
lret
inc
and
jl
lret
pop
add
add
push
xor
popa
push
sarb
cmp
enter
mov
and
stos
mov
arpl
mov
push
or
testb
mov
je
roll
xchg
lcall
adc
and
mov
sbb
cmpsb
les
xor
mov
lock
sbb
inc
je
sti
xchg
mov
inc
mov
adc
pop
mov
jbe
mov
mov
loopne
int
sbb
loopne
ret
je
mov
in
xor
call
mov
dec
jno
or
pop
cltd
lods
bound
test
push
aas
inc
mov
stos
inc
or
push
mov
sub
mov
mov
nop
pop
jns
jge
mov
adc
cld
fists
adc
dec
add
jmp
sbb
enter
aas
cmpsl
repz
out
sbb
mov
shll
push
xor
inc
mov
aad
xlat
add
addr16
ja
mov
or
pop
xor
mov
push
mov
pop
sub
cmp
inc
mov
dec
inc
sub
and
cmp
ljmp
xor
mov
add
pusha
add
sbb
add
pop
add
xor
movsl
sub
push
cmp
add
decl
cmp
inc
inc
jno
jg
test
push
xchg
push
lock
or
lods
fisubs
mov
cmpb
adc
jb
jne
jmp
or
mov
push
mov
xchg
fs
cltd
lea
mov
or
lods
ja
aad
adc
xchg
ret
mov
inc
into
or
inc
pop
cmc
lock
dec
xor
iret
ss
or
hlt
add
inc
sbb
mov
mov
xor
mov
arpl
mov
std
adc
sub
cwtl
cmp
stc
adcl
hlt
icebp
ret
pop
cmp
ljmp
cmp
je
cmp
cmp
cld
cmpsl
into
fisubs
adc
mov
xor
dec
cmp
cld
or
adc
ret
xchg
push
xor
sbb
inc
xlat
inc
gs
pop
cmp
xchg
mov
sub
es
pop
lahf
push
out
add
fsincos
rep
cmpsl
cmp
inc
xor
or
movsl
mov
adc
jmp
sub
jae
shl
shlb
shl
add
sbb
shlb
mov
test
pop
clc
outsl
jnp
and
jne
push
push
push
push
cltd
xchg
sbb
xchg
mov
pushf
cmpsb
xlat
mov
mov
adc
icebp
pusha
mov
inc
sub
inc
je
or
sub
mov
test
inc
or
xchg
testb
mov
adc
movsb
jle
inc
xchg
pop
mov
mov
daa
inc
or
cmp
xor
out
xor
shlb
shlb
and
js
push
push
sub
rcrb
sub
jns
push
daa
fcoml
clc
push
mov
mov
and
xlat
sub
cmp
dec
adc
push
popa
pop
cmpxchg
jmp
mov
jl
dec
test
push
inc
popa
shlb
sub
sub
loopne
and
aam
xor
je
das
inc
int
cld
inc
pop
jno
or
pop
mov
rcr
inc
rcrb
clc
pop
mov
xor
add
lret
clc
xchg
sub
mov
push
push
mov
mov
ja
mov
call
pop
dec
out
stos
xchg
sahf
adc
mov
mov
call
mov
hlt
clc
pop
lret
sbb
add
and
mov
push
adc
adc
adc
mov
jo
call
cmp
icebp
gs
push
sbb
scas
addl
push
push
cmp
push
adc
arpl
and
add
fs
add
mov
bound
cwtl
popa
xor
cmp
sti
dec
or
inc
and
sarb
dec
jne
cld
loopne
mov
add
mov
sbb
add
push
inc
sbb
mov
xchg
xor
push
and
add
hlt
jno
push
stos
push
std
jo
mov
jge
je
mov
bound
testl
cmp
jno
xchg
cltd
cmp
jl
subb
sbbb
push
jecxz
push
cwtl
push
icebp
subb
bound
sbb
and
push
dec
test
inc
cmp
clc
or
or
mov
ljmp
shl
push
sub
xor
call
je
in
mov
ror
or
rcrb
add
mov
rolb
ljmp
pop
or
adc
add
adc
and
pop
inc
jge
shrb
pop
xor
lea
mov
add
es
cli
add
testb
xchg
stos
mov
add
das
dec
dec
mov
cwtl
add
pushf
insl
nop
sub
daa
cmpb
sahf
arpl
or
cmp
leave
add
adc
dec
mov
push
and
add
cmp
xlat
xchg
dec
or
shll
shrl
adc
push
clc
add
cmpsl
ja
xbegin
add
sbb
insb
ret
inc
mov
in
adc
sub
jecxz
cmp
faddl
daa
hlt
mov
mov
mov
add
or
outsl
call
shlb
adc
adc
push
sbb
add
testb
lea
mov
fdivp
adc
popa
or
push
dec
mov
fmull
movsl
mov
cmp
pop
ljmp
jnp
in
jne
loope
mov
and
lea
shl
jns
add
ljmp
testb
orb
or
mov
inc
or
push
fs
or
aas
sub
sub
stos
imul
in
popa
jb
add
add
ss
pop
rcrb
inc
nop
shr
ret
enter
es
ret
pop
jmp
jnp
rorl
pop
or
xor
adc
adc
fcoml
inc
testb
fstpl
jmp
dec
cmp
arpl
dec
add
insl
negb
cwtl
outsb
sar
lea
jp
cmp
jb
xchg
and
aad
jae
jb
pushl
cld
xor
or
pop
jmp
rolb
xor
jae
adc
inc
cwtl
in
gs
and
and
insb
cltd
and
add
ds
std
add
add
dec
pop
movsb
movsl
out
sub
mov
mov
mov
and
mov
movsl
dec
mov
cmp
xchg
pop
add
and
cmp
pop
leave
adc
ret
cmp
test
adc
and
mov
movsl
pop
pop
mov
bswap
push
xor
add
mov
ss
dec
xchg
movsl
pop
nop
sbb
icebp
pop
jmp
mov
add
add
inc
xchg
mov
mov
shlb
cmp
adc
push
push
out
addl
or
jmp
adc
daa
or
insl
jb
ja
mov
sub
arpl
and
xchg
cmp
or
mov
insb
cmp
cmp
fcmovnu
insl
imul
fisubl
inc
jo
mov
ja
adc
or
mov
and
sbb
and
fstp
sbb
jmp
jae
mov
outsb
jmp
adc
daa
scas
in
pop
mov
das
out
testl
or
outsl
sbb
add
push
int3
sahf
or
add
add
mov
je
pusha
mov
or
jg
pop
fiaddl
jg
adc
or
cmp
and
mov
inc
jmp
xor
ss
dec
lcall
inc
and
push
cmp
jb
sarb
and
jb
and
jb
add
and
add
add
enter
jns
add
daa
sub
add
add
pop
in
cmp
sub
cmp
inc
scas
sbb
mov
aam
sbbb
push
xchg
mov
xor
or
xor
ljmp
shrb
test
mov
movsl
lea
cmp
fcmovu
cmp
stos
insl
mov
or
jmp
push
movl
xchg
daa
mov
fisttps
or
adc
inc
sbb
adc
pop
dec
inc
jle
or
cld
imul
add
int
mov
cltd
sbb
mov
es
dec
ljmp
jae
push
or
add
or
jae
sub
stc
push
adc
cmc
or
adc
rcrl
push
mov
ja
mov
dec
sbb
addb
loop
sar
inc
adc
sysexit
mov
xor
sbb
andb
pop
inc
outsl
push
xor
xor
dec
mov
ja
add
rcll
mov
lea
pop
or
push
and
jnp
cmp
sbb
adc
jb
sbb
add
or
int3
push
push
cwtl
adc
ds
push
xlat
jo
pop
adc
fdecstp
mov
fstps
insb
mov
or
in
mov
popf
and
pop
add
pop
add
xlat
rorb
xchg
jge
fwait
sahf
orl
lock
push
outsl
lcall
out
rorb
fcoms
sub
lock
das
out
or
loope
mulb
out
je
bswap
push
or
stos
push
out
sbb
jns
cmp
xor
das
add
aas
pop
adc
das
cmp
inc
cmp
jne
sbb
xor
sbb
jae
add
in
lds
in
inc
call
xor
or
je
les
testb
cs
daa
push
aaa
cwtl
push
push
adc
stos
mov
inc
repz
or
repz
jae,pn
outsb
sbb
pop
sbb
dec
xor
repz
push
add
lods
jg
cmp
fbld
add
inc
xchg
adc
sbb
ljmp
lock
push
sbb
sbb
or
xor
add
bound
lret
push
dec
loopne
test
sti
jg
push
sbb
pop
test
nop
pop
cmp
push
ficompl
mov
mov
movsl
daa
adc
out
lods
xchg
push
xor
push
push
pop
add
add
inc
addb
pushf
fmull
in
cwtl
shll
mov
mov
jnp
sub
loope
mov
jmp
cmp
or
or
shlb
dec
or
pop
and
add
test
mov
mov
sbb
sub
cmp
pop
mov
and
lock
stos
mov
test
sub
pop
or
push
rcll
jns
or
sub
xchg
loopne
dec
dec
inc
sub
or
ja
and
ret
fdivrl
jo
movsl
popl
sbb
movsb
adcl
cmp
xchg
stc
callw
mov
lock
push
test
sub
sub
add
loopne
and
xchg
dec
push
dec
sub
dec
lods
push
jl
xor
xchg
inc
ljmp
int
shl
jmp
lock
out
inc
jbe
mov
push
pop
repz
std
test
in
adc
add
or
lock
pushf
push
cmp
jbe
in
mov
mov
or
aad
mov
jb
and
lock
or
lock
les
mov
insl
and
movl
push
mov
push
or
push
mov
cmp
jl
cmp
jle
cmp
push
jp
mov
cmp
inc
cmpb
mov
ljmp
jno
cmp
jge
lahf
test
pop
and
cmp
jl
je,pn
cld
push
repnz
pop
or
xor
loopne
push
push
hlt
inc
iret
jae
insb
lods
and
pop
popa
cld
sbb
fcompl
lahf
dec
jl
sub
add
inc
and
outsl
inc
mov
nop
call
cmpsl
bound
jge
mov
lock
cmpsb
push
push
mov
jl
inc
test
sub
add
mov
sub
pop
push
subl
jge
add
popa
pop
mov
aaa
sub
fmull
adc
add
inc
add
and
mov
inc
inc
jl
mov
sbb
cmp
push
daa
aam
fcoml
cmp
sub
lock
insl
sub
mov
pop
test
int3
mov
or
push
push
repz
adc
ret
mov
mov
enter
or
rorl
add
mov
xchg
adc
lcall
mov
ret
rcr
sbb
or
sti
pop
mov
sbb
and
sub
stc
fmull
add
outsb
rcr
fisttpl
daa
add
mov
mov
pop
mov
jbe
pop
xchg
mov
cwtl
fistpll
add
insl
call
mov
cmp
sub
xchg
push
insb
sbb
leave
push
mov
lea
mov
fiaddl
aas
je
xor
add
inc
sbb
and
je
js
xchg
ret
sti
ret
xchg
je
ret
mov
fsubs
and
and
mov
mov
in
mov
inc
sub
das
sbb
or
add
sbb
sub
or
push
sahf
out
push
pop
pop
pusha
fs
xchg
dec
adc
add
sbb
push
ret
xchg
mov
mov
insb
cmp
dec
int3
lea
sub
les
xor
jns
or
and
and
insb
aas
xchg
xor
imul
pusha
gs
push
jne
push
inc
mov
mov
aas
cmp
sub
push
push
jmp
xor
adc
loope
movl
cltd
inc
pop
and
je
pusha
dec
xchg
divb
sub
pop
sub
push
pop
or
and
scas
or
xchg
ret
addb
mov
pop
jle
and
add
add
cmp
inc
fcmovnb
inc
add
bound
lds
sti
cmp
push
out
adc
push
push
fmull
jne
stc
lock
add
push
femms
movsb
ret
add
cmp
and
cmpsb
sbb
inc
add
sar
dec
add
in
pop
xchg
add
jp
adc
in
mov
sub
mov
jecxz
dec
pop
fucomi
jae
xchg
popa
sarl
sbb
fmull
push
mov
popf
adc
pop
or
xor
sbb
xchg
or
sbb
es
andl
jmp
sub
inc
test
adc
adc
mov
cltd
sbb
cltd
adc
and
imul
lret
mov
fwait
inc
or
movb
fsubrl
or
call
xor
inc
pop
sub
sti
sbb
inc
mov
scas
inc
or
mov
mov
test
je
push
aaa
mov
or
je
cmp
mov
lfs
and
pop
push
hlt
sahf
or
arpl
pop
jle
scas
inc
mov
add
inc
mov
add
incb
jne
xor
mov
add
fs
out
pop
cmp
add
and
in
push
push
jne
in
dec
xor
andl
sbb
push
adc
inc
repnz
mov
fists
sub
jne
arpl
jnp
add
and
mov
scas
and
jns
mov
inc
iret
add
pop
pusha
add
js
dec
stos
xchg
ljmp
or
mov
jo
and
xchg
pop
xchg
shlb
adc
jb
xchg
orb
sbb
pop
cltd
sbb
adc
sbb
pop
shll
std
mov
push
dec
insb
jmp
or
sbbl
rcll
sbbb
fdivrs
mov
add
mov
cld
adc
sti
sbb
xor
jle
mov
sub
inc
jle
enter
push
rorb
ds
mov
xor
addr16
rcll
sbb
mov
mov
sub
push
pop
dec
or
hlt
pop
jnp
lret
cli
cmp
inc
or
push
dec
gs
cmpl
hlt
jg
mov
sub
pushf
xor
dec
mov
push
aas
add
repnz
ret
movsb
push
ret
adc
sahf
lock
jb
loope
xchg
adc
push
in
cmpsb
test
dec
sbb
sub
lea
sub
andb
add
xorb
mov
sub
lcall
cmp
xchg
fisubrl
nop
push
push
push
add
pop
pop
adc
outsl
dec
adc
shrl
ds
add
lods
push
std
addl
xchg
push
lock
sub
push
adc
dec
subb
add
add
or
push
pop
data16
popa
loopne
lods
bnd
ret
push
sahf
pop
pop
sub
pop
mov
inc
movsl
cmp
ja
mov
lret
push
mov
push
cmp
sbb
ret
arpl
sub
nop
pop
and
push
cs
jmp
adc
jae
popa
ficoms
fildll
into
cmp
xor
movsb
pop
push
sub
sub
dec
sub
mov
or
xorb
pop
mov
lea
pop
pop
sub
lret
rcrl
or
or
sbbl
mov
mov
sub
movsb
rcrl
pushf
ljmp
je
daa
andb
cmp
lods
jo
inc
push
xchg
out
test
sub
call
push
inc
sbb
inc
jmp
divb
or
push
cmp
mov
es
cwtl
dec
movsl
addb
and
dec
push
xor
inc
pushf
pop
inc
popa
test
mov
or
jo
sub
sbb
ret
adc
push
fsubrs
sbb
fldl
rol
mov
mov
and
cld
ss
pop
out
sub
aaa
adc
adc
jne
jns
sahf
lahf
push
divb
or
jne
or
out
cli
jne
or
scas
leave
loopne
fwait
rol
fldz
into
fstpl
andl
mov
mov
inc
mov
cmp
frstor
fcmovne
or
pop
and
mov
xchg
aam
arpl
test
lea
fstl
cli
push
jne,pn
push
scas
mov
xor
scas
mov
movsl
push
out
cld
add
sub
repz
jno
adc
cmp
sbb
push
jb
aaa
dec
push
pop
inc
or
fmulp
loopne
xchg
les
jo
pop
and
aam
lods
push
or
pusha
adc
movsb
jge
or
ret
jne
cmp
inc
in
mov
loop
or
fimuls
sti
movsl
or
out
fisttpl
fisubl
push
push
rolb
cmp
dec
ja
and
mov
cmovns
push
je
xor
dec
add
fsubl
jb
push
jmp
mov
scas
outsb
xchg
popf
xchg
sub
push
inc
or
shlb
je
add
cmpsb
shl
push
pop
fcmovbe
sbb
inc
daa
pop
adc
xor
dec
mov
daa
push
lock
pop
pushf
subl
xchg
ret
addb
hlt
leave
scas
fadd
scas
mov
mov
sub
push
stc
add
sub
push
leave
mov
jmp
push
dec
call
leave
out
cld
xor
ret
arpl
and
mov
xchg
push
mov
in
lds
push
lods
lods
or
lods
fs
sbb
add
loope
and
popa
sub
push
push
les
jl
jo
pop
test
push
arpl
xchg
lods
push
mov
pop
pusha
mov
add
ret
push
outsl
push
nop
xchg
test
push
xchg
xchg
cltd
fiaddl
jno
add
mov
dec
pop
faddl
mov
mov
pop
and
or
inc
cs
mov
xor
cltd
nop
int3
rorb
jmp
andb
popa
imul
or
fstl
xor
ficoms
jo
sbb
fs
ss
or
imul
inc
es
mov
add
mov
dec
pop
mov
int3
dec
dec
dec
dec
enter
dec
dec
dec
dec
mov
lahf
xor
test
pop
jge
test
xchg
push
ss
scas
push
or
xor
fwait
nop
iret
xor
and
or
inc
movsb
test
push
ljmp
hlt
xor
scas
push
xor
shlb
cmp
es
pop
ret
cs
pop
lret
ret
pusha
or
cmp
stos
cmpb
xor
les
cwtl
mov
cwtl
ja
sbbb
pop
fimull
add
mull
push
adc
jle
xor
pcmpgtb
cmp
mov
fs
add
add
pushf
data16
cs
data16
xchg
push
add
pop
movb
fcompl
push
hlt
hlt
mov
jl
in
into
sbb
pop
cli
xor
jmp
adc
xor
out
sub
adc
call
add
and
cmp
add
add
fmull
lret
rcrb
jns
mov
push
fst
inc
insl
jmp
mov
loope
mov
push
mov
daa
nop
mov
adc
adc
lcall
dec
add
push
pop
sub
push
test
icebp
dec
test
jb
cmp
into
subl
dec
xor
insb
add
pop
dec
and
pusha
mov
addps
pushf
hlt
mov
and
push
or
pop
addl
push
aas
xor
jp
pop
call
xor
pop
cmovne
pop
sbb
sub
sbb
fdivs
and
cmp
add
xchg
mov
add
lock
sahf
mov
mov
xchg
push
add
xchg
xor
mov
das
call
mov
jbe
inc
lock
push
loop
inc
mov
pusha
fs
fnstsw
mov
jle
subb
lret
jne
sbb
push
fldl
pop
inc
mov
cmp
or
sub
je
and
and
xor
pop
cmp
cmp
loope
adc
dec
loopne
dec
jne
iret
inc
or
lods
sbbb
or
cmp
scas
out
jno
test
daa
out
mov
mov
addr16
sahf
xchg
ljmp
and
iret
xchg
jecxz
xchg
jecxz
push
movsl
je
xchg
sub
xchg
loopne
sbb
pop
push
push
push
test
adc
inc
test
cmp
lods
maxps
sbb
push
mov
cmp
adc
mov
lea
sub
out
jg
mov
lock
fisubrs
push
sub
int3
cld
outsb
add
in
inc
sbb
pop
pop
mov
or
pop
dec
mov
outsb
nop
cmp
enter
sbb
loope
sbbb
addb
fwait
pushf
andb
inc
mov
push
inc
loop
or
fcomps
das
cwtl
sbb
or
adc
cmp
inc
push
xchg
or
daa
icebp
pop
mov
jle
push
sub
and
pop
push
cmpsl
add
setne
cmc
xchg
xor
xchg
adc
arpl
push
bound
dec
or
pop
inc
shrb
iret
lods
push
push
ret
addl
xchg
inc
jae
mov
in
ret
lahf
mov
add
lahf
mov
push
lea
lods
or
adc
xchg
inc
mov
inc
xchg
ret
ret
inc
add
pop
arpl
sbb
add
add
pop
add
add
fiadds
lahf
pop
adcb
lds
movsl
mov
push
sub
out
adc
pop
lahf
inc
mov
mov
dec
pop
push
scas
lea
popa
push
into
adc
lock
ds
push
imul
pop
out
frndint
add
mov
les
repz
add
mov
xor
add
imul
mov
push
mov
dec
cmp
mov
sbb
push
mov
dec
scas
test
shlb
sbb
leave
arpl
mov
ss
or
mov
cmp
rcrb
xchg
in
sub
or
cs
leave
inc
sub
inc
sub
pop
loope
mov
sbb
push
test
lods
outsb
adc
pusha
sub
testb
xchg
mov
aaa
jo
sti
mov
sbb
mov
add
test
gs
xchg
mov
movsl
lods
pop
mov
fiaddl
adc
mov
push
mov
nop
sti
jl
jmp
aaa
sbb
lea
dec
in
sub
push
mov
inc
lods
mov
jecxz
and
or
call
loope
ja
lock
inc
add
in
aaa
inc
jecxz
mov
lods
sub
mov
sbb
je
hlt
aaa
add
das
popa
nop
out
pushf
push
mov
lock
dec
cli
xor
dec
cmpsb
adc
rolb
dec
fnstsw
mov
daa
adcb
jno
loope
mov
push
ss
sahf
inc
cmp
push
call
add
xchg
xchg
clc
ret
sbb
mov
movsl
or
jb
sub
sbb
les
push
into
adc
mov
adc
addr16
loope
movsl
lock
ss
dec
out
dec
aam
aaa
mov
adcb
scas
adc
inc
lds
pop
jbe
jmp
cmp
or
lahf
pop
inc
nop
add
sbb
bound
jg
cltd
xchg
xor
sub
in
fwait
cwtl
hlt
sahf
inc
xchg
jge
cmpsb
sub
push
or
lea
xor
push
fcomi
mov
stos
lods
fstpt
les
mov
inc
in
xchg
add
aam
icebp
imul
mov
add
movaps
sbb
add
clc
jno
ficompl
les
cmp
and
cli
mov
jmp
sbb
nop
sbb
jne
inc
fnstenv
orl
adc
out
mov
shr
cmpsb
push
test
push
mov
rclb
jnp
sub
and
mov
mov
ds
dec
pop
dec
add
clc
xor
das
inc
ds
cltd
mov
and
loopew
rclb
inc
inc
mov
push
sub
jb
push
push
sub
jmp
jnp
inc
or
sahf
jl
pop
add
jmp
in
pop
cmp
pushl
sarl
inc
lock
lods
shrb
sub
loope
clc
or
pushl
jae
jmp
sbb
imul
hlt
in
add
in
out
mov
movsb
and
dec
and
aam
adc
mov
push
dec
mov
push
fs
test
push
mov
xchg
clc
cmpsb
iret
imull
mov
mov
movsb
add
jo
sub
test
xchg
movsl
add
push
lea
xchg
and
add
push
add
fcom
ss
and
pushf
sahf
adcb
push
pushf
pop
dec
in
inc
pop
xor
pop
adc
iret
lods
or
xorb
iret
mov
andb
enter
or
or
xor
inc
movsb
dec
pop
inc
rorb
mov
sub
push
adc
and
sub
jae
jae
in
cmp
or
leave
leave
inc
dec
dec
push
es
popf
pop
hlt
mov
and
xor
jae
sub
clc
mov
add
jmp
adc
add
nop
and
dec
add
or
pop
orb
or
mov
push
sub
sti
xor
jb
imul
sub
dec
xor
je
xor
ds
arpl
pop
shlb
sub
les
imul
and
je
cmpsl
add
nop
arpl
test
leave
ja
push
xor
dec
sub
push
daa
and
pop
rcrb
adc
fiadds
pop
subb
jnp
sub
dec
gs
cwtl
and
js
jnp
push
sub
pop
das
mov
sub
daa
or
daa
and
inc
push
or
or
mov
out
lret
ljmp
and
push
add
mov
ret
mov
mov
pop
mov
xor
add
or
fsubl
cmc
adc
push
test
pop
add
test
add
add
call
jge
sbb
insl
pop
sbb
push
pop
testl
insb
adc
and
lods
out
mov
andb
adc
clc
into
mov
jle
jb
cmp
push
mov
add
or
jnp
adc
popa
pop
add
mov
and
ss
pop
mov
jle
loop
hlt
xlat
add
pop
inc
jo
sbb
rclb
pop
add
or
or
arpl
mov
jo
loopne
jo
xchg
scas
mov
fldt
inc
mov
mov
dec
sub
add
pop
add
lahf
inc
addl
lds
add
jmp
sbb
inc
int3
add
arpl
out
aad
xchg
xlat
push
sbb
adcb
in
mov
push
imul
xchg
lock
cmpb
adc
clc
sbb
push
repz
cs
add
inc
push
orl
add
fists
insb
xchg
fsts
inc
aam
out
fstps
sbb
dec
push
adc
or
cmp
add
sub
sbb
and
mov
sub
and
and
push
stos
pop
cmpsb
xchg
ss
lret
jecxz
dec
adc
and
dec
popl
mov
add
xchg
cmc
cmp
leave
xor
pop
jne
sub
adc
stc
movsl
sbb
ljmp
pusha
mov
call
out
mov
pop
sbb
inc
mov
call
xchg
dec
test
xchg
and
pop
pop
push
je,pt
push
push
add
jle
jbe
push
sbb
sbb
sti
mov
cli
insb
decl
push
out
repnz
inc
push
loope
pop
pushl
inc
cmp
lods
jge
ret
mov
push
pop
push
sbb
pop
dec
mov
jle
xchg
mov
lods
pop
adc
sar
dec
sbb
sub
xor
add
movsb
push
mov
push
and
shll
inc
sub
or
xor
adc
in
jne
jg
inc
sub
repz
cmp
push
aam
jae
mov
adc
je
inc
pop
aam
mov
jmp
loopne
dec
jbe
xchg
adcb
sbb
jmp
bound
and
cwtl
or
xor
leave
jno
or
dec
or
ret
push
push
into
mov
fwait
mov
cmp
movb
sbb
movsb
jmp
cmpsb
ret
pop
pop
xor
imul
in
inc
imulb
nop
sbbl
push
dec
les
cwtl
jl
fsubrs
push
mov
pop
movsl
mov
push
cmp
je
sbbb
cmp
gs
test
xchg
sbb
fcoml
push
imul
push
es
add
mov
adc
shlb
add
push
inc
cmc
or
xchg
movb
mov
addb
mov
roll
inc
mov
or
cltd
cwtl
sti
cmc
adc
adc
mov
push
sbb
in
fcmovnb
jmp
adc
jmp
imul
movsbl
imul
mov
and
cmc
push
mov
adc
or
push
cmp
je
loope
and
mov
mov
lods
and
mov
popl
cmp
jne
push
inc
inc
loop
test
aaa
adc
jmp
jne
jmp
mov
test
shll
lret
push
sahf
into
or
rol
aad
stos
or
ss
movsl
adc
inc
in
jmp
push
cmpsb
lea
or
dec
cli
cmp
add
rclb
es
pop
or
xor
pop
push
xor
je
ds
js
test
push
xor
lret
xor
mov
ljmp
imul
aaa
jecxz
rorl
mov
add
stos
mov
ja
daa
icebp
loop
aad
add
les
adc
fs
push
popa
inc
dec
jb
les
or
mov
leave
ficoms
and
movl
mov
incl
pusha
lock
insb
jno
imul
ds
sbb
movsb
rcrb
rol
test
loope
push
push
or
push
fildl
fnstenv
flds
fsubr
add
adc
adc
in
sub
enter
push
xchg
mov
or
push
adc
push
fstpl
fldl
loopne
les
jmp
and
add
sbb
sbb
mov
inc
loop
lcall
xchg
loopne
or
sub
aas
sub
mov
and
insl
clc
push
xor
mov
mov
out
imul
addl
add
cmp
jecxz
cmp
pop
fsub
pop
fsubrp
mov
or
jns
adc
repz
shlb
test
add
lods
mov
icebp
and
xor
push
rorb
sub
and
add
adc
adc
sub
dec
je
add
inc
insb
lcall
or
add
jo
test
jmp
xchg
out
jns
pop
cmp
ss
jnp
addr16
or
push
push
push
push
pop
into
daa
or
fmuls
and
push
pop
movsb
in
or
jmp
mov
stc
out
sbb
push
push
iret
dec
or
pusha
sub
repz
or
adc
mov
iret
movsl
hlt
repnz
scas
pop
iret
inc
das
mov
enter
lods
jmp
pop
or
and
or
nop
fstpl
or
push
aas
stc
sbbl
leave
out
stc
repnz
adc
dec
xchg
adc
cmp
divb
inc
push
push
fs
pop
push
push
push
fs
push
push
fs
adc
lds
adc
fmull
dec
push
lcall
in
or
mov
push
sbb
jbe
in
and
in
jbe
mov
or
imul
xor
sub
das
fwait
push
loopne
adc
pop
cwtl
dec
or
mov
add
pop
mov
les
lcall
and
adc
lock
fisttps
and
push
push
cmpsb
lods
dec
and
sub
lods
cmp
cmpsb
lret
dec
and
orl
adc
sub
jo
fs
sbb
test
outsb
sbb
jb
inc
mov
pop
stc
or
fadds
ja
or
fldenv
aaa
in
shrb
call
push
adc
repnz
sub
sbb
sub
lods
dec
mov
sub
pop
sbb
fiadds
jo
stc
push
and
dec
repnz
ret
xor
cmp
push
cwtl
les
push
or
add
repz
add
push
call
jns
adc
sub
dec
pop
jns
out
jo
xchg
mov
out
std
push
adc
xor
repz
inc
push
arpl
cmp
repz
mov
adc
adc
iret
repz
repz
push
sub
dec
cmp
repz
jo
xchg
mov
sbb
xchg
mov
sub
push
in
loop
add
fidivl
mov
and
xchg
outsb
inc
iret
push
outsb
xor
or
push
and
inc
mov
and
xor
dec
mov
push
sub
inc
push
addb
mov
cmp
in
cltd
fcmovb
add
add
push
cmp
fcomi
popa
add
pop
jp
mov
or
lds
shrb
loop
pop
sub
and
fistl
adc
pop
rol
nop
and
and
lods
or
outsl
js
push
mov
inc
sbb
add
dec
pop
and
lret
int
push
inc
rcll
pop
das
js
or
daa
push
mov
sub
add
xchg
xchg
iret
push
and
dec
rclb
cmpsl
nop
mov
out
or
xchg
in
or
and
xchg
add
ljmp
add
and
adc
xor
adc
aam
scas
mov
sub
add
adcb
sub
xchg
in
mov
mov
lcall
mov
xchg
enter
mov
add
das
mov
ror
jl
and
inc
in
mov
inc
jle
jo
bswap
mov
add
aaa
jae
out
push
push
popa
add
cs
add
call
in
dec
pop
add
push
cmp
or
sub
push
xor
lock
in
in
mov
inc
repnz
pop
clc
inc
push
push
es
or
or
pop
leave
popl
mov
add
pop
addr16
sub
aaa
mov
mov
faddl
cmc
movl
out
ss
je
es
sub
outsl
add
adc
shlb
add
pop
out
cmp
push
out
add
cld
add
push
xor
in
in
pop
enter
push
inc
or
and
sub
xchg
mov
test
popa
cltd
cmp
iret
lods
adc
pop
mov
dec
ds
ret
xor
cmc
add
or
cmp
push
movsl
sub
ret
add
mov
movl
jl
push
in
in
pop
stc
add
inc
xor
adc
mov
mov
push
mov
push
sub
hlt
mov
sbb
pop
fidivs
dec
adc
sbb
in
add
or
adc
lock
mov
xchg
sub
push
push
mov
adc
jg
and
test
jge
mov
jnp
iret
xor
in
add
enter
jns
in
pop
adc
dec
pop
push
xor
mov
or
dec
xor
test
icebp
in
test
add
movsb
stc
roll
stos
or
fiaddl
bnd
push
xchg
add
sbb
call
inc
or
outsb
adc
lret
or
in
sub
adc
xor
or
loop
insb
daa
pop
xor
cmc
add
or
push
out
mov
pusha
push
pop
cld
adc
test
add
cmpl
add
or
adc
xchg
scas
fsubl
sbb
pop
cmpl
lea
add
inc
and
fld
add
imul
push
cmp
and
xchg
push
sbb
cs
push
std
inc
ljmp
stos
jae
aad
dec
imul
push
sarb
stos
cmc
or
inc
and
iret
lods
add
pop
ret
add
or
rorl
loop
push
jg
push
call
push
shrb
sbb
adcb
inc
or
test
leave
add
adc
adc
and
or
fwait
add
xchg
stc
adc
popf
xor
mov
movsb
or
add
adc
nop
cmp
add
mov
adc
push
push
inc
sahf
and
or
xor
ret
cmp
adc
or
or
addb
sub
sub
mov
add
pop
dec
sub
sbb
cli
inc
loopne
roll
push
cmp
push
sub
aaa
or
jecxz
sbb
or
add
cwtl
cmp
rorl
aas
test
mov
xor
or
mov
adc
in
leave
add
add
add
or
enter
xor
xchg
pop
add
or
push
dec
inc
cmp
daa
je
dec
fnstcw
or
mov
push
cmp
and
add
inc
sbb
ret
add
in
jo
and
lret
mov
mov
bnd
or
cmp
sub
mov
cmc
jno
cmpb
je
andb
jnp
sub
or
nop
and
push
or
add
mov
xchg
sub
inc
add
call
jne
movsb
xchg
mov
std
fistl
add
lods
hlt
mov
adc
popa
xchg
add
push
dec
rcl
mov
pop
push
test
addl
adc
sbb
mov
sbb
arpl
inc
pop
cmp
lods
les
inc
and
or
adc
imul
pop
xchg
push
movsl
xchg
xor
adc
mov
out
sti
jne
fldl
jo
fadd
xor
and
or
mov
fildl
sbb
testb
or
lret
pop
push
imul
cwtl
and
cmpb
inc
rsm
mov
aaa
adc
push
jl
push
addr16
outsl
or
dec
lcall
icebp
and
and
push
xchg
outsb
imul
fisttpll
xor
in
dec
subl
ret
testw
adc
enter
xchg
pop
sub
and
jp
lahf
xor
in
jo
pop
sub
dec
and
pop
xchg
push
add
inc
pop
add
dec
ret
fimuls
test
inc
sbb
jl
test
nop
dec
xor
cli
inc
jb
sbbb
add
movsb
xchg
xchg
pop
inc
ss
push
push
sti
loopne
sbbb
nop
mov
sbb
xchg
cwtl
adc
sub
mov
push
popa
mov
push
sub
faddl
mov
cmpsl
add
outsb
mov
pop
paddq
icebp
dec
dec
cmp
cwtl
push
cmp
int
call
sub
lret
pop
call
dec
or
test
dec
les
outsl
sbb
mov
sub
loopne
pusha
movsl
mov
outsb
mov
xor
sub
imul
jl
xor
jmp
cmp
jl
or
sbb
popa
sti
mov
adc
cmp
cmp
je
mov
mov
push
jg
loope
add
inc
jmp
movb
mov
push
cltd
pop
idivl
push
repnz
in
cs
add
xor
and
pop
inc
push
inc
cmp
cmp
lea
imul
outsl
mov
cmpsl
or
push
and
or
lods
out
cs
cltd
mov
ret
dec
test
xor
lds
shr
add
or
dec
or
dec
dec
in
xor
lock
cmpsl
sarb
xchg
in
xorb
and
pop
pop
loop
cmp
mov
imul
cmp
daa
cmp
call
jne
hlt
movsb
cmp
push
adc
jo
or
lods
enter
inc
mov
mov
add
dec
out
cmp
jnp
ret
aaa
inc
in
lea
mov
mov
jp
pop
adc
test
or
shlb
push
inc
push
pop
outsl
ret
dec
mov
ja
je
or
test
sub
sub
aad
fs
imul
test
jmp
pop
and
mov
jmp
push
xchg
dec
repz
jp
inc
mov
enter
push
xchg
rcll
push
lods
pop
int
stos
adc
movb
cmp
insl
ds
gs
imul
adc
xor
cmpsl
lock
mov
mov
insb
mov
cltd
daa
push
jl
push
cmp
xor
shr
pop
jns
cs
and
mov
enter
xchg
pop
ror
dec
jge
cmp
enter
and
adcb
call
das
sbb
inc
sbb
movsb
js
sbb
sbb
negl
push
jns
cmp
nop
push
push
fpatan
inc
or
dec
imul
dec
jae
cwtl
and
sub
sub
aam
daa
xor
shlb
sbb
imul
inc
loopne
test
or
bound
scas
mov
jno
dec
out
mov
in
mov
jmp
pop
clc
jo
icebp
jg
daa
jns
cmpsl
leave
dec
ret
adc
push
sub
inc
adc
xchg
fisubs
cmp
fs
xchg
dec
nop
pop
mov
inc
or
dec
es
in
cmp
xchg
fcmovnbe
insb
in
shld
mov
and
int3
inc
dec
test
adc
mov
sbb
mov
xchg
fsubrs
ja
mov
es
or
mov
in
sub
jo
jge
mov
pop
add
cmpsl
xor
divl
xor
mov
mov
iret
lea
addr16
or
fadds
sbb
dec
xor
repnz
lcall
das
dec
sub
pop
inc
push
fldz
ds
movsb
clc
add
fcompl
sbb
fmull
int3
pop
scas
fildl
insb
clc
pop
or
mov
mov
in
pushf
sbb
fbstp
and
xor
mov
and
push
pop
arpl
inc
mov
sbb
push
ds
inc
mov
lahf
js
jbe
xor
cmp
mov
pop
push
enter
aam
insl
call
bound
or
or
scas
push
mov
push
xorb
xchg
lret
jp
or
popf
sub
xchg
sbb
xor
sahf
xchg
push
lock
insl
std
sub
int
dec
insl
or
dec
cs
ljmp
sub
add
sub
inc
hlt
mov
mov
push
push
push
repz
in
mov
mov
mov
inc
jb
into
adc
aam
inc
mov
shrl
inc
or
je
outsl
jmp
cmp
hlt
sbb
outsl
repnz
xchg
push
or
xor
inc
mov
add
aas
lret
sbb
test
or
pop
pop
mov
adc
rorb
mov
mov
test
pushf
fstl
mov
inc
sbb
fistpl
sub
fsubrs
sub
rcrb
xor
sub
rorb
jle
push
and
or
subl
sbb
js
sbb
sub
xchg
sbb
das
sub
hlt
inc
popf
xchg
addl
mov
pushf
add
gs
dec
movsl
flds
and
xor
je
mov
pop
dec
call
nop
adc
xchg
jl
sbb
push
inc
sub
or
pushf
cmc
xchg
mov
subb
jno
inc
fwait
sub
scas
push
cwtl
sbb
enter
les
arpl
inc
xor
in
adc
std
test
jecxz
inc
pop
leave
and
mov
sti
push
or
out
and
mov
rclb
stos
adc
aas
or
mov
call
loopne
cmp
jge
and
iret
movsl
mov
fsubrs
cmp
ja
fcomps
pushf
addb
inc
xchg
subl
push
in
cmc
cltd
rcrl
movsbl
xor
adc
push
or
leave
add
dec
mov
push
mov
adc
jb
push
xchg
int3
es
sub
imul
xor
push
xor
or
push
push
fs
and
pop
incl
jl
sahf
cwtl
popf
and
jbe
test
adc
popa
adc
add
or
xchg
cs
adc
or
jg
out
or
push
pop
andb
clc
adc
xchg
mov
or
xor
faddl
aaa
mov
add
cmp
mov
cmpb
cli
shld
das
fidivl
cmp
loopne
rcll
push
sbb
jl
imul
adc
out
es
pop
cli
test
add
sbb
or
cmp
lahf
les
data16
jae
fisttpll
dec
iret
push
shrl
xchg
dec
xor
aam
loopne
pop
sbb
xor
xchg
data16
push
test
and
xchg
rcrb
inc
cmpb
or
and
adc
mov
mov
loopne
adc
es
int
mov
cmpl
aaa
sahf
dec
or
jl
adc
notb
jns
sub
clc
into
and
xor
pop
push
push
pushl
mov
inc
sbb
inc
dec
loope
roll
push
push
bound
xchg
call
ret
and
popa
inc
xchg
adc
pop
ljmp
fcmovne
fiadds
iret
push
pusha
leave
pop
xor
sar
in
dec
lods
add
sub
xchg
xchg
inc
sub
out
je
or
mov
dec
das
xorb
test
inc
cmp
icebp
and
sub
jmp
xor
les
test
and
inc
cmp
rolb
add
nop
add
cmpsl
fcmovbe
jmp
ds
or
popa
pop
dec
and
jns
pop
push
sub
pop
data16
dec
sub
mov
sbb
cmpb
in
mov
je
xchg
test
add
cmp
leave
mov
jbe
push
dec
fimull
or
daa
pop
jne
ja
jnp
rdtsc
sub
sti
in
hlt
cs
cmp
cmp
dec
in
iret
adc
out
jp
rorl
cmp
sub
pop
pop
cmp
push
cmp
in
xchg
loope
cmp
xor
ljmp
in
es
sbb
sub
cmp
pop
or
inc
sbb
notb
sub
leave
inc
push
push
dec
or
xor
xor
icebp
stos
jle
push
pop
test
fisubrl
dec
jmp
add
cmp
or
add
jg
jle
jge
test
outsb
xor
sub
mov
mov
or
add
lret
add
ds
loope
push
mov
aas
je
movsl
pop
sub
cmp
xor
adc
or
ret
push
add
dec
mov
dec
sbb
movsb
cmp
jbe
lret
in
xor
daa
pop
sbb
lods
add
sbb
inc
pop
pop
dec
jbe
mov
add
inc
push
pop
stos
push
rcl
adc
lock
mov
outsb
subl
xchg
xchg
fnstenv
inc
iret
int3
dec
add
mov
mov
pop
pop
call
out
pusha
leave
pop
in
clc
enter
push
cmp
add
push
lret
push
xchg
mov
mov
call
cld
mov
push
push
or
dec
ja
push
loop
xor
xchg
or
ret
jne
xchg
sbb
jnp
negb
or
inc
sahf
sbb
xchg
pop
sub
mov
or
mov
xor
xchg
push
rolb
mov
jno
or
or
xchg
sub
jl
sahf
sub
push
sbb
pop
sti
in
sbb
pop
test
xor
mov
pop
div
scas
push
mov
cwtl
push
push
test
js
aam
push
jno
and
testb
stos
jno
aam
inc
inc
dec
fsubr
or
fmull
scas
ret
push
test
mov
push
add
cmp
cmpsl
mov
popf
lock
push
stos
dec
inc
adc
popf
andb
mov
sbb
mov
sbbb
sub
xor
and
adc
adc
es
sbb
test
adc
movsb
mov
daa
mov
or
pusha
add
out
sahf
mov
sti
mov
fldt
arpl
cmpl
jnp
add
cmp
out
lods
das
test
jge
popa
es
in
nop
xchg
sbb
daa
mov
push
add
pushf
ror
add
addr16
add
push
andl
insb
loopne
add
and
imul
dec
dec
cmp
ret
ret
mov
jle
or
out
rol
es
test
orb
push
add
add
lcall
jne
mov
jbe
decb
add
push
cltd
jb
or
or
nop
je
push
js
cmp
andb
add
sti
cmp
cmp
push
cmp
or
sub
adc
push
pop
or
insb
shl
dec
fsubl
sbb
push
stos
push
dec
xor
or
sub
sub
out
jg
jb
push
inc
cmp
jae
mov
push
add
cmc
sbb
inc
lcall
sub
and
dec
ret
aaa
mov
cmp
jne
fidivrs
push
inc
cli
push
fadd
neg
or
loope
xor
xchg
xchg
push
pop
push
lret
ret
mov
pop
adc
sbb
xor
cmpsl
inc
cmp
shll
and
dec
dec
add
cmp
fsts
leave
loope
cltd
dec
test
addb
inc
and
and
add
bound
add
push
mov
filds
pusha
pop
push
push
test
adc
pushf
divl
mov
arpl
add
sbb
push
dec
out
mov
add
jo
dec
jmp
lods
enter
sub
adcl
ja
adc
call
dec
pusha
or
imul
sub
loopne
fwait
and
xor
cmp
or
sub
and
mov
pop
mov
aas
int3
daa
jnp
push
fadds
test
xor
pop
push
fists
orl
mov
jl
arpl
ret
pusha
mov
sub
adc
adc
js
jge
push
aad
mov
lret
addb
fnsave
adc
mov
sahf
lods
fldl
nop
or
adc
testb
push
sbb
out
cld
or
adcl
test
dec
sbb
jbe
push
and
sub
mov
and
data16
gs
push
int
inc
or
mov
add
sbb
or
push
psubq
shll
aaa
push
inc
fstpt
adc
bound
and
pop
cmp
leave
push
push
addl
sbb
mov
add
mov
dec
or
pop
arpl
or
test
inc
insl
xchg
jp
xchg
leave
setno
jge
in
movsl
imul
orl
push
cmp
add
fimull
push
jl
mov
out
addr16
jg
pop
lea
lock
movl
ds
pusha
add
inc
jbe
pop
cmp
lds
sahf
mov
test
mov
sbb
incl
or
or
jo
or
mov
pop
sarl
cmpsl
push
pop
lret
movsb
lret
xchg
xor
je
xor
pop
inc
cli
rorb
cmp
dec
movsb
addr16
sti
out
adc
add
enter
es
push
cmp
js
add
fs
push
ret
mov
iret
push
mov
mov
popf
and
mov
add
shlb
dec
sub
loop
add
in
aad
outsb
pop
xlat
sbb
push
insb
pop
fisubs
dec
addr16
inc
or
rclb
testb
stos
dec
jns
push
cmp
dec
mov
xor
or
pop
sbb
insl
xor
lret
sbb
push
leave
pop
xor
and
mov
into
and
mov
addl
cmovs
inc
cld
cltd
inc
adc
jb
lret
repnz
adc
mov
xor
sub
repnz
hlt
loope
fadd
xor
mov
pusha
add
pop
adc
adc
and
das
popf
sub
mov
sbb
adc
push
mov
dec
mov
push
cmc
psrlw
adc
out
or
xchg
add
jmp
jo
sarl
sub
loop
push
push
inc
shrl
sbb
pop
pop
lea
es
jno
and
inc
or
sbb
or
add
gs
sbb
dec
cmp
scas
inc
scas
push
jmp
sbb
movsl
xor
shl
ljmp
add
inc
pop
scas
fstps
repnz
xchg
insb
xchg
ss
sub
aad
pop
sbb
push
sarl
movsb
jbe
outsb
xor
pop
mov
mov
loopne
pop
inc
sub
xchg
xchg
enter
pop
mov
lret
jmp
fistl
scas
lods
cmp
fadd
add
imul
adcl
iret
push
roll
mov
pop
add
inc
test
inc
fsubrl
inc
sbb
dec
pushf
push
or
fisttpll
xchg
cmpsb
xor
mov
mov
xchg
rcr
cmpsb
cld
adc
dec
adc
push
or
or
jl
xchg
inc
sbb
loopne
xchg
iret
cmpsl
and
scas
pop
mov
imul
negl
add
add
push
mov
and
and
addr16
in
or
sub
jp
xlat
mov
aam
insl
rcrl
addb
pop
push
int
es
pop
ja
add
mov
push
popf
lods
in
xorb
mull
leave
xor
test
lods
dec
pop
or
mov
push
xor
stos
fcompl
sub
fwait
daa
mov
loopne
and
sbb
fwait
add
ret
mov
sub
jl
lock
shl
pop
lods
mov
movl
sub
arpl
repz
cmp
ss
pop
je
push
cmp
lock
sbbl
add
cmc
sub
ret
mov
push
lods
pop
jnp
fiadds
mov
loopne
out
pop
sarb
add
and
add
inc
sti
mov
test
mov
mov
add
fstl
pop
in
add
mov
cmpb
aad
xchg
inc
addr16
arpl
push
lods
or
add
int
int
inc
bound
pop
push
dec
arpl
int
in
popa
sbb
jl
add
lret
or
add
add
pop
cmp
cmp
push
cwtl
xchg
pop
sbb
or
or
sub
cmp
sub
add
or
insb
sbb
mov
stos
cld
rorb
mov
lock
sub
dec
imul
dec
js
les
cmp
ss
xor
inc
orl
cmp
push
dec
sub
add
pusha
mov
cld
daa
lahf
add
adc
dec
or
mov
mov
add
add
adcb
pop
push
and
insb
pop
push
aam
sbb
add
loopne
push
movsl
xchg
leave
xlat
mov
push
dec
xchg
xchg
incl
or
or
xor
sbb
mov
and
sub
sarb
repnz
cmp
pop
dec
cmp
nop
ret
push
insl
andb
rol
push
or
pusha
decl
xchg
les
mov
adc
adc
or
ds
cmp
add
rcrb
ss
out
pop
push
mov
clc
xor
push
mov
xchg
ja
and
jg
sbb
dec
outsb
dec
pop
add
lock
and
fsubs
lea
dec
or
into
add
mov
mov
dec
and
xchg
mov
pop
psubw
fiadds
sub
mov
rol
jmp
add
shl
jecxz
in
addl
stos
imul
cmpl
sbb
scas
or
dec
andl
push
js
sub
aaa
jl
bound
icebp
jb
jmp
adc
mov
xor
add
mov
jne
add
out
inc
mov
mov
loopne
pop
mov
or
arpl
jo
loopne
rorb
push
xor
xor
or
inc
dec
push
jo
add
out
add
add
cmpsl
pop
cwtl
push
mov
add
inc
fs
jo
movsl
push
add
orb
xchg
pop
push
std
loopne
push
das
dec
add
int3
jle
dec
mov
cmp
jmp
loopne
or
loop
or
and
sbb
or
out
lds
fmuls
popa
shll
push
xchg
into
sbb
pushf
adc
and
add
sub
icebp
loopne
adc
lea
cs
mov
outsb
pop
inc
dec
adc
icebp
inc
cmp
es
add
movsb
popf
add
rcrl
xorb
in
or
sub
fld
pop
jne
lods
out
sti
pop
dec
ds
or
xor
call
mov
push
push
andl
in
aam
cmp
pop
inc
repnz
jmp
add
xor
jle
cltd
pop
mov
std
xor
push
and
mov
and
mov
inc
jecxz
shlb
jge
add
test
push
push
mov
adc
dec
daa
pushf
lret
testl
push
fdivl
xchg
xchg
cmpsb
loopne
shlb
jae
push
fisubrl
sbb
pop
adc
add
push
push
js
push
mov
js
cmp
lea
fnstcw
ret
adc
mov
lea
out
sub
test
into
push
mov
les
mov
test
cmp
mov
cmp
sti
adc
hlt
pushl
fldl
frstor
or
popa
fwait
ds
or
inc
or
mov
dec
sbb
mov
push
push
adc
andl
push
test
mov
inc
sbb
in
lea
mov
or
cmp
shrl
add
inc
jmp
rclb
pushl
ljmp
and
sbb
pop
fsubrs
pop
and
inc
push
pop
test
stos
inc
aam
sub
pop
int3
insb
inc
das
or
adc
shll
outsl
test
mov
nop
fdivrs
mov
add
mov
cmpsb
dec
clc
adc
sbb
xor
ret
ret
ret
cmpsl
dec
popf
adc
aas
pop
int
in
xorb
push
cmp
je
push
or
adc
inc
stos
fdivrl
mov
loope
inc
xor
sub
add
loop
mov
daa
loopne
xor
popf
iret
mov
sub
inc
scas
lods
dec
and
xchg
or
pop
in
fisubs
or
adc
mulb
insl
lods
insl
in
xor
outsb
das
add
jge
mov
push
mov
dec
adc
sbb
or
inc
mov
jae
and
hlt
cld
push
insl
shll
adc
adc
arpl
and
fistl
mov
push
push
sbb
test
adcb
inc
scas
cltd
clc
push
pop
xor
pop
or
mov
inc
push
jl
pushl
ljmp
inc
scas
and
fdivl
inc
pusha
dec
xor
cmp
dec
movsl
sbb
mov
outsl
mov
push
push
fsubs
lock
sub
push
out
push
push
inc
mov
or
dec
push
push
pop
jge
scas
mov
out
cmp
sahf
cmpl
sbb
xor
pop
sbb
sbb
pop
lock
adc
cmc
sub
push
loopne
movsl
and
bound
mov
call
dec
add
sub
inc
pop
xor
push
mov
add
add
or
dec
sbb
bound
sbb
push
sbb
xorl
or
movsb
pop
fwait
cmc
jmp
mov
mov
loopne
outsl
movsl
inc
cmp
in
jg
xor
jb
movzbl
push
xchg
dec
movsl
repnz
in
in
jmp
movsb
fcoml
call
inc
sti
add
loopne
fadd
mov
scas
push
push
lea
or
pop
xor
inc
xor
jl
subl
mov
mov
mov
or
and
in
mov
xor
into
mov
inc
hlt
shl
pushf
and
sub
xorb
push
pop
add
dec
inc
dec
and
outsl
pusha
jmp
push
insb
xchg
int3
adc
adc
jo
add
enter
les
out
mov
lods
cmpsl
add
sbb
lahf
ret
xor
fildl
add
or
shrb
sub
ss
orb
les
movsl
mov
inc
sbb
and
je
fs
jge
push
int
dec
clc
sub
and
and
push
cmpl
shll
arpl
gs
mov
mov
inc
mov
popa
mov
xorb
aad
or
mov
cmc
sbb
or
lret
adc
push
and
mov
in
or
mov
ss
cmpsl
mov
adc
cs
ss
and
out
sub
in
jle
cmp
mov
sub
mov
xor
pusha
cmpl
and
cmp
jne
mov
add
sbb
sti
popf
mov
push
lea
sbbw
test
addb
adc
ret
push
divb
rolb
inc
push
scas
cmp
adc
inc
xchg
sbb
xchg
jnp
and
inc
mov
int
pop
clc
in
lcall
incl
jae
loope
test
pop
js
test
outsb
mov
lea
xchg
fwait
mov
add
and
jns
pop
sub
pushf
mov
adc
jne
pop
adc
inc
mov
out
gs
jbe
xor
and
aam
pop
cmp
int3
andl
xchg
nop
push
daa
and
sub
cmpb
and
dec
movb
mov
clc
test
ss
lods
cmpsl
push
adc
hlt
or
push
mov
shlb
jge
jbe
daa
test
inc
pop
jbe
xor
bound
cmpsl
andl
dec
ret
sub
data16
add
push
jmp
mov
sub
jle
jne
adc
push
jl
test
clc
addr16
jmp
adc
pop
cmp
xor
mov
pop
sub
sub
jnp
xchg
inc
test
sub
or
lock
push
ret
aaa
or
pop
add
sbb
inc
inc
add
sbb
push
xchg
imul
dec
addl
inc
repnz
ss
sbb
je
dec
or
in
inc
dec
test
cmpl
push
hlt
outsb
inc
push
test
pop
xchg
inc
and
es
xchg
mov
pop
inc
jns
mov
icebp
jle
mov
popf
push
inc
or
xlat
add
inc
mov
sbb
pop
inc
inc
stos
orl
jbe
loopne
sub
incl
sub
adc
mov
int3
mov
sbbb
cld
mov
adc
mov
adc
inc
ss
add
push
rcll
adcl
mov
lds
jmp
sbb
push
enter
pop
jg
daa
add
in
dec
in
pop
adc
std
push
push
sbb
mov
and
mov
mov
mov
pop
push
dec
jge
push
add
ljmp
xchg
je
push
mov
push
mov
mov
cmpl
sub
hlt
xor
jmp
pop
adc
push
sahf
add
or
mov
cmp
testl
push
jmp
push
adc
pop
clc
jne
dec
adc
cmp
cmpl
dec
popf
imull
push
and
inc
test
movsl
mov
insb
mov
clc
cmp
mov
out
ret
and
movsb
mov
mov
mov
repnz
mov
or
dec
ss
fwait
pushf
rorb
push
push
push
cmp
popf
and
sub
mov
repz
push
sbb
or
pop
mov
scas
sarb
nop
pop
jo
test
xlat
push
arpl
push
daa
jp
jo
or
call
sbb
fidivrl
xor
gs
sbb
cmp
cmp
jae
mov
add
mov
ds
and
or
add
movsb
xchg
or
hlt
inc
inc
pop
add
rorb
leave
sub
dec
mov
push
sub
insb
popf
sub
ljmp
mov
das
push
cmpsb
loopne
mov
mov
push
test
mov
xchg
rcr
daa
xor
cmp
xchg
or
and
mov
add
jp
mov
inc
nop
pop
movsl
or
sub
fsts
dec
xor
cwtl
xor
movsl
dec
jb
popf
mov
push
out
fistl
push
jge
push
fistpll
push
cmp
jbe
mov
ja
shr
push
push
and
stos
test
mov
in
mov
dec
imul
cmp
push
mov
dec
fsub
notb
push
or
insl
bts
lock
shl
aad
jnp
jbe
fmul
pop
dec
or
sub
xchg
push
movzwl
inc
mov
inc
lret
add
cmp
out
cmp
outsb
lcall
outsb
sbbb
jge
mov
mov
rclb
sahf
xchg
dec
jo
fisttpll
or
sahf
mov
adc
in
mov
push
cmp
pop
adc
push
stc
push
adc
in
add
xchg
inc
shrb
insb
sub
push
scas
sub
push
inc
cmp
rolb
loope
faddl
hlt
or
cmp
mov
insl
testl
mov
sub
mov
inc
in
std
inc
add
in
ret
cmp
das
enter
inc
add
adcl
sahf
pop
pop
mov
jle
mov
movsw
push
cld
add
jo
movsb
mov
arpl
push
push
or
mov
shr
mov
int
mov
inc
mov
adc
movb
out
push
lea
cmpb
divb
fcoms
mov
sbb
inc
fistpll
cmp
movsbl
xor
dec
nop
cwtl
pop
add
ss
push
ja
aaa
jge
add
jb
and
push
cmp
je
push
push
loope
and
sbb
aaa
jne
cmp
sbb
andl
jmp
sbbl
add
shll
xchg
dec
outsl
insl
jge
inc
add
fldl
sub
cmp
test
scas
or
fs
cwtl
add
and
or
cmp
dec
adc
sbb
or
or
mov
lahf
xor
rorl
sbb
push
mov
jecxz
test
mov
sub
in
adc
add
or
sub
inc
pop
call
shl
lcall
mov
addb
inc
stos
xor
adc
es
xchg
xchg
testb
jno
push
add
xchg
xchg
xchg
xchg
add
push
pop
int
xchg
xchg
or
or
jnp
or
jbe
int
int
jmp
or
por
int
int
jmp
adc
pop
adc
push
adc
dec
adc
int
int
dec
adc
aas
pop
jmp
sbb
int
int
xor
jmp
sbb
es
int
int
and
pop
pop
jmp
and
int
int
or
jmp
and
jno
and
push
pop
aas
mov
inc
inc
je
or
ds
rcrl
cld
jecxz
push
jmp
sti
add
or
sbb
sub
jns
out
xor
out
sahf
dec
dec
push
pop
pop
bound
out
insb
jno
jnp
jns
out
test
jns
cltd
sahf
mov
std
ja
add
add
push
pop
or
and
or
or
push
movups
adc
adc
push
test
call
pop
sbb
sbb
sbb
push
pop
and
and
aas
or
cld
repz
sbb
adc
enter
jae
stos
xchg
or
addl
repnz
mov
cmp
add
idivl
shl
jo
mov
fidivrl
or
movsl
pop
mov
js
xor
ljmp
rcr
adcl
pop
sbb
jl
cld
scas
pop
movsb
xchg
shrl
or
or
aaa
dec
cli
sbb
lock
sub
mov
adc
icebp
jbe
ficomps
pop
mov
cmp
push
push
mov
xor
cbtw
inc
test
addb
sbb
mov
mov
imul
mov
mov
mov
repnz
arpl
aad
lock
jp
bound
lock
xchg
or
mov
aaa
fcoms
js
insb
ret
mov
add
lds
xchg
sub
sub
fstpt
inc
enter
into
adc
es
xchg
and
adc
fdivrs
add
sbb
dec
outsb
or
mov
test
dec
adc
inc
enter
dec
subl
cmp
jne
or
add
inc
insl
sbb
mov
inc
rolb
xchg
or
pop
mov
aam
repz
mov
mov
or
mov
adc
jne
jmp
mov
inc
mov
les
xor
hlt
popa
adc
int
add
mov
cmp
out
dec
xor
decb
push
xchg
aaa
or
fstps
mov
ret
sub
out
mov
mov
test
and
xor
mov
sbb
dec
insb
push
add
push
sbb
nop
sbb
subl
sub
dec
mov
rclb
push
ss
push
lret
cmp
add
push
xchg
mov
mov
in
add
movsb
push
jne
push
add
push
sbb
adc
dec
fisttpll
stc
push
jne
dec
nop
shll
or
jmp
scas
add
sbb
ss
je
inc
jne
pop
sub
aas
inc
add
cld
push
roll
fwait
sub
or
push
mov
pop
push
pop
cmp
mov
and
je
test
shll
rclb
or
mov
or
push
mov
je
int3
push
cltd
loope
xor
mov
add
sbb
or
adc
flds
cmp
push
sub
inc
mov
repz
mov
dec
enter
sub
mov
adc
adc
sbb
loope
or
add
pusha
dec
sbb
pusha
cmpsl
cmc
test
adc
rcrb
mov
enter
push
push
fisttps
xchg
fdiv
xchg
sub
dec
push
mov
add
sbb
push
push
xchg
sbb
roll
xorl
clc
pop
cmp
or
incb
jne
pop
lcall
xlat
mov
cmp
mov
mov
aaa
mov
imul
or
cli
or
cmp
mov
dec
es
mov
xchg
out
lods
sub
jmp
inc
mov
add
imul
pop
pop
and
mov
lods
push
shlb
shll
adc
fsubl
sbbl
in
loopne
int3
mov
dec
imul
xor
data16
cli
sbb
add
dec
and
stos
push
sub
andl
add
add
xor
adc
add
out
in
add
push
movsl
ds
push
xor
icebp
jne
or
addb
mov
pushf
add
inc
dec
sbb
addr16
jg
dec
dec
cmp
mov
pop
cmp
test
testb
pop
xchg
std
and
add
inc
pop
mov
je
nop
push
sub
popa
imul
loopne
cmp
add
loopne
adcb
dec
push
inc
lcall
inc
sahf
xchg
out
add
loopne
sub
fs
xor
sub
sbb
testl
enter
add
or
gs
testl
fs
sbb
je
push
fnstcw
cmp
xor
inc
stos
or
add
pusha
add
shr
push
pop
push
or
pop
push
push
sbb
or
dec
sbb
jns
jp
and
fstl
stos
pushl
cmc
shlb
push
xlat
mov
fcomps
push
mov
aad
sub
inc
ror
pop
lahf
pop
aam
and
jge
es
test
in
mov
sbb
rolb
inc
jmp
mov
fwait
mov
ret
xor
mov
leave
in
pop
jle
pop
or
cmp
sub
mov
and
add
sub
sub
cs
bound
faddl
dec
push
push
add
sbb
pop
inc
adcl
movsl
mov
adc
adc
ret
mov
pop
cmpb
jmp
cmpl
movsb
iret
jge
subb
mov
fiaddl
add
cmp
aaa
jg
daa
in
add
xorl
push
insl
push
add
cmp
cmp
add
add
dec
jle
push
dec
lret
sbb
add
add
rol
inc
pop
nop
xor
add
adc
clc
or
jae
pop
fs
dec
mov
push
xchg
mov
js
je
insl
push
jecxz
in
jmp
fs
cmp
cli
cmp
pusha
ret
cwtl
inc
xchg
adc
push
sbb
adcb
inc
leave
mov
cmp
and
je
sbb
pop
rol
dec
pusha
and
sub
jle
sbb
cmc
lods
sahf
call
pop
jne
inc
aad
jg
jmp
cmp
je
lcall
adc
fisubl
call
or
lret
dec
cmp
jle
in
jnp
sti
mov
lock
sbb
push
in
or
adc
jb
pop
push
aaa
push
push
iret
dec
push
ljmp
jo
adc
and
into
push
pop
and
push
rclb
fiadds
shrb
push
cmp
inc
dec
call
add
pop
push
int
xchg
jp
inc
xchg
sahf
shlb
pop
setno
outsb
xchg
sbb
sbb
jo
dec
mov
add
and
and
pop
xor
or
and
xchg
sbb
pop
and
ret
push
fisubrs
and
sbb
inc
and
cmpb
mov
ret
inc
cmp
lcall
push
iret
xor
adc
mov
pusha
or
or
xor
inc
xchg
cmp
sbb
and
repnz
xchg
xor
and
xor
or
gs
leave
and
sbb
nop
lret
or
mov
add
jne
jmp
in
shlb
sbb
inc
cmp
sub
dec
cld
fimuls
decb
xor
shl
inc
add
and
addr16
cmpb
test
enter
push
aas
cmp
movsb
fwait
movsb
jb
jo
pop
js
push
pop
cltd
jl
cmp
movb
jmp
mov
lahf
nop
xchg
xchg
push
push
fstps
push
push
cwtl
sbbb
movsb
pop
test
and
dec
sub
and
mov
push
inc
add
xchg
mov
psraw
jno
shrb
leave
add
add
setge
cmpb
and
add
add
lea
push
mov
test
out
nop
xor
ret
insl
and
and
or
jbe
add
adc
sub
pusha
mov
jl,pt
sub
lea
cmp
repnz
je
ja
sub
js
lea
inc
mov
sbbl
fildl
pushf
add
cld
jns
bnd
inc
sti
lods
sub
inc
and
fdivl
cmp
jnp,pn
pop
jl
jmp
out
push
enter
add
sbb
test
sahf
mov
incl
and
sbb
repnz
and
lea
dec
call
rcrl
bound
inc
mov
in
xchg
test
rcll
ret
jae
imul
insb
ret
daa
insb
je
js
pusha
pop
mov
sbb
gs
jmp
fdivrp
xchg
fsts
sub
or
lods
sub
sub
jns
call
xor
hlt
das
inc
hlt
push
pop
cmp
sub
pusha
xlat
rolb
cmp
jle
ret
out
es
lock
add
mov
ja
pop
call
pop
pop
sbb
mov
decb
pop
outsl
outsl
ffree
xchg
dec
cli
xor
enter
sbb
sbb
imul
lock
pop
sub
inc
xchg
lahf
sbbb
pushl
loopne
xor
push
cmp
je
cmp
jne
push
inc
loop
mov
push
xchg
push
cmp
loopne
fcom
mov
cld
mov
adc
cmp
out
cli
adc
mov
ljmp
or
mov
inc
mov
adc
test
or
arpl
push
das
or
inc
in
lar
hlt
adc
cmp
push
mov
push
jecxz
dec
loopne
xorl
outsb
cmpsb
inc
sbb
mov
push
jns
pop
imul
add
into
mov
and
pop
add
push
jbe
fwait
push
insl
or
jae
sbbl
in
in
jge
sbb
adc
repz
and
push
gs
fucomp
lahf
mov
mov
into
sarb
sub
mov
xor
aas
jne
push
stos
jo
adc
scas
xor
sbb
mov
mov
add
xor
sbb
int3
add
sub
dec
sbb
cmp
in
lea
add
mov
in
ss
mov
jl
push
push
imul
sbb
adc
xor
add
lret
sub
loopne
lods
mov
clc
or
adc
or
pop
js
push
sbbb
or
js
and
inc
jnp
rorl
outsl
loope
enter
repz
or
pop
xchg
inc
nop
adc
mov
ret
jae
mov
add
add
jo
repz
push
sub
cmp
insb
aad
sbb
fcmovnb
insb
xchg
int
push
adc
mov
mov
mov
sub
sub
mov
sbb
loope
mov
mov
aad
loopne
fidivl
notl
push
shl
fdivs
pushl
add
orl
test
mov
loopne
sub
fadds
and
nop
sbb
add
clc
xchg
adc
mov
jb
movzbl
in
inc
insl
inc
cmpsl
xchg
into
push
mov
lea
mov
add
xchg
dec
sub
imul
ss
jp
xchg
dec
xchg
loopne
adc
cwtl
and
lock
mov
xchg
xchg
xchg
add
mov
adc
test
and
push
cmp
add
push
mov
inc
sub
lahf
aaa
mov
add
in
push
call
insl
dec
mov
xor
loope
cltd
test
push
mov
shll
cmp
mov
pop
pop
popa
daa
pusha
mov
pop
in
testl
push
pop
inc
sub
push
fcoml
xor
or
jo
rorb
loope
xlat
push
adc
xorb
push
loop
add
pop
jp
pop
and
int3
adc
xlat
pop
and
test
aad
and
push
inc
mov
outsl
aad
dec
inc
aaa
mov
or
jle
enter
mov
dec
mov
cwtl
cmp
pop
ljmp
jmp
inc
inc
lret
and
xor
inc
mov
push
outsb
out
mov
bound
inc
add
or
xorb
xchg
psubusb
pop
fisubrl
gs
fwait
jno
sbb
mov
and
test
pop
add
sbb
lods
sbb
mov
inc
pop
aam
lea
negl
sbb
andl
sbb
dec
push
push
fistps
sbb
cmp
adc
and
sahf
jnp
adc
rclb
scas
adc
xchg
dec
sbb
cs
in
xchg
or
sub
and
sub
push
pop
or
sub
xor
xchg
sbb
popa
in
push
data16
lahf
push
add
sub
add
loop
pop
lahf
faddl
fstl
fldz
fcomp
fnstsw
lock
inc
dec
push
insb
pop
fsubr
pop
faddp
xchg
mov
das
je
push
pop
adc
dec
daa
pop
outsl
adc
loope
sbb
add
or
test
cmp
xor
test
dec
popa
lock
dec
or
xor
lock
mov
cltd
mov
cmpsb
nop
adc
out
add
xchg
sbb
xor
in
inc
mov
push
out
fnstsw
cmp
add
xor
cmp
fistpl
outsb
mov
add
in
add
bound
sbb
push
lret
cmp
ss
mov
xchg
stc
mov
pop
xor
xor
nop
adc
sbb
call
add
lods
imul
add
dec
addr16
hlt
fs
or
push
jp
pop
mov
adc
mov
imul
idiv
imul
in
xor
loopne
adc
imul
out
je
cs
cld
or
sub
test
pushf
mov
xchg
inc
dec
lcall
dec
outsb
xchg
rclb
jne
js
add
push
mov
push
mov
add
xor
dec
jmp
nop
fisubrs
adc
or
push
push
push
add
dec
jmp
xor
mov
jp
adc
sbb
or
mov
xchg
hlt
scas
mov
pop
mov
movsb
icebp
sbb
imul
adc
adc
dec
xchg
hlt
cmp
or
inc
cli
push
xchg
cmpl
sub
xchg
xchg
add
arpl
inc
in
pop
inc
sub
das
lcall
sti
out
ss
ja
ss
push
pop
sub
sub
push
mov
ds
inc
jae
stos
out
or
aaa
add
fstl
add
jmp
cmp
mov
pop
inc
faddl
cmp
jb
push
fwait
mov
and
lret
int
jb
adc
or
or
add
mov
dec
push
xchg
add
addb
les
dec
add
sbbl
call
xor
xorb
testb
sub
movsb
fstps
das
sbb
cmp
cli
icebp
and
add
test
xor
jne
je
in
mov
sbb
pop
jl
ret
dec
add
inc
in
mov
mov
mov
jb
fistl
je
pop
and
and
add
sub
jl
dec
addl
or
popa
inc
sbb
pop
int3
xor
popa
leave
outsb
pop
into
add
movsl
rorl
jp
gs
push
adc
test
mov
pop
pop
mulps
cmp
movsl
inc
hlt
pop
adc
adc
mov
sub
lods
adc
mov
jae
lock
jo
daa
add
pop
inc
pop
imul
mov
sbb
inc
push
rolb
xor
sbb
xor
fcmovnb
ja
push
jmp
repz
ret
sbb
adc
in
repnz
fs
mov
and
dec
mov
adc
sub
je
rcl
aam
loope
test
xor
cmpsb
cwtl
imul
loope
insl
add
aam
sti
repz
and
lcall
test
je
cmp
jb
aad
pop
loope
jg
and
add
or
popa
pop
jbe
push
jp
sbb
push
pop
push
lret
dec
mov
inc
add
fwait
dec
sub
and
repz
push
sub
dec
stc
or
jno
sub
inc
add
mov
fcoms
rorb
and
daa
mov
adc
inc
in
lea
dec
cltd
test
test
or
dec
pop
cmp
and
sbb
rcr
gs
shrl
push
push
pop
pop
loop
pop
loopne
mov
adc
inc
sbb
push
call
cmp
add
xchg
push
sbb
sbb
inc
scas
dec
cli
xor
and
push
pop
push
push
push
out
and
shll
adc
in
cmp
mov
test
pusha
xchg
push
and
jecxz
cmp
mov
movsb
push
sbb
add
inc
push
in
inc
and
mov
jle
call
pushf
add
stos
jne
dec
dec
inc
ret
gs
sbb
xchg
ljmp
popf
pop
pop
and
into
outsl
mov
jne
xorb
xor
sbb
loopne
cld
test
cmpsb
push
add
mov
test
xchg
add
pushl
lcall
and
rep
push
repz
out
nop
pop
lods
leave
test
push
pop
insb
dec
adcl
cmpsl
popa
inc
inc
sub
jle
dec
pop
xchg
stc
pop
lock
mov
xchg
xchg
test
add
dec
adc
pop
and
xchg
or
lcall
inc
fcmovnbe
bound
lods
mov
pop
popf
mov
cli
pop
imul
push
add
outsl
xor
mov
inc
cwtl
fdivrs
lret
add
inc
aaa
andl
cmc
sub
sub
pop
xchg
fsts
inc
or
sub
repnz
in
sub
call
jno
inc
sbb
cmp
ss
adcb
jo
xlat
cmp
cmpl
mov
adc
or
outsl
out
mov
mov
xorb
push
jbe
cmpsb
add
push
push
sti
subb
in
mov
in
sbb
mov
lods
pusha
adc
imul
mov
push
or
sub
xor
xor
inc
lock
jge
dec
xor
dec
sub
inc
sub
inc
stc
jbe
mov
std
jmp
push
in
mov
push
fwait
mov
push
inc
sti
dec
in
add
inc
jle
xchg
push
notb
out
push
add
inc
test
fbld
add
pushf
xchg
mov
imul
inc
in
inc
lcall
inc
sbb
push
js
add
sub
stos
cmpsl
lds
add
mov
lds
scas
lods
test
xor
or
adc
push
push
das
push
jecxz
adc
fiaddl
add
in
and
push
or
enter
sbb
loopne
inc
push
adc
sub
jb
or
or
sub
pop
or
dec
and
out
in
inc
shr
cs
jno
push
dec
xchg
dec
mov
sub
faddp
push
sub
sti
add
or
mov
push
pusha
mov
call
gs
sbb
lcall
repz
add
jle
mov
push
mov
push
bound
add
sub
add
fadds
loope
pop
loopne
add
mov
xor
sub
push
add
jo
shlb
xchg
lret
and
je
aas
sub
addb
pop
xor
sbb
or
mov
incb
or
shll
movb
and
jg
or
lea
das
jmp
dec
adc
lods
cmp
fcoms
sbb
xor
push
jp
mov
loopne
fsubrl
outsb
popf
mov
adc
xor
add
mov
out
es
sarb
push
add
push
shrb
mov
mov
mov
iret
addr16
pop
mov
lods
sub
mov
mov
push
sbbb
lods
lock
add
int3
nop
or
es
idivb
mov
shr
or
lret
push
add
add
cmp
hlt
or
or
leave
insl
test
sub
mov
and
mov
push
cmp
mov
push
adc
adc
in
jbe
mov
pop
test
sbb
lock
imul
imul
push
or
scas
and
test
mov
aad
inc
and
pop
xor
adc
fcomps
mov
imul
mov
or
jmp
xor
and
inc
mov
push
push
fs
push
pushf
mov
movsb
xor
dec
jo
mov
xorl
stos
mov
addb
cmpsb
pop
sbb
out
and
dec
and
mov
xchg
xlat
into
fimull
mov
pop
nop
jo
ret
adcl
aam
add
and
lahf
push
pop
inc
dec
sub
adc
or
adc
adc
adc
or
dec
or
cwtl
je
cmp
pop
push
or
mov
inc
cmpsl
push
pop
mov
sbb
add
lcall
push
pop
ficomps
push
sbb
add
push
ljmp
ret
stos
sub
push
inc
adc
sbb
popf
test
mov
pop
stos
rcrl
outsl
cwtl
outsb
jl
shll
pop
jmp
cld
ljmp
adcb
bound
iret
repnz
in
push
lods
xor
cwtl
push
jne
mov
mov
pop
test
je
or
inc
push
and
xchg
nop
jns
jne
insb
stos
sti
mov
ret
loopne
cmpsl
push
lods
xor
sub
add
xchg
dec
mov
jnp
data16
or
das
sarl
test
dec
aaa
in
aam
sti
lret
call
cmp
movsb
dec
ljmp
cltd
inc
fs
push
push
push
arpl
dec
enter
outsb
or
test
or
mov
loopne
es
push
cmpsl
or
in
mov
xchg
mov
into
mov
clc
rcr
adc
mov
filds
pop
sbb
les
mov
xlat
lcall
cmp
je
mov
repnz
and
sub
mov
jl
add
push
fwait
mov
sub
push
jnp
andb
fistl
pop
es
xor
fdivp
cmc
cli
push
ret
int
imul
loop
push
cmp
test
fsubs
sbb
loop
sbb
ffree
sbb
add
cmpsb
sub
and
push
jl
insl
pop
pop
mov
pop
test
sub
push
add
add
jnp
mov
or
mov
inc
in
stc
fistpl
xchg
xchg
cmc
mov
lods
fbstp
sbb
or
add
dec
mov
xor
hlt
add
dec
shl
or
push
xchg
xor
add
or
jle
pop
adc
out
sahf
sub
push
dec
loope
movb
xchg
in
cmp
xor
sbb
adc
push
test
sbb
jl
push
mov
test
fcoms
ss
inc
cmpsl
movb
pop
lock
rorb
push
aaa
mov
enter
jne
lods
fstpt
je
or
je
idiv
aaa
call
sub
jne
mov
or
add
orl
clc
xor
push
mov
mov
lods
push
push
push
stos
sahf
mov
sub
lods
inc
sarb
cmp
pushl
mov
mov
inc
lea
add
je
lea
sbbb
pop
scas
lods
jno
inc
test
inc
cltd
or
sbb
aad
jne
scas
sarb
sub
bound
jmp
push
mov
cs
nop
inc
addr16
popa
inc
lret
addb
setge
mov
and
arpl
push
mov
es
test
hlt
mov
aaa
lea
pushf
iret
push
inc
rorb
adc
ror
xchg
insb
movsb
mov
js
mov
cmp
fwait
sti
cmp
decl
xchg
lea
sti
fdivrp
incl
sub
pushl
add
mov
fisubrl
es
test
adc
cmp
push
push
xor
mov
push
aam
addr16
in
adcb
mov
xchg
or
jl
mov
adc
insb
mov
sbb
xchg
jl
sbb
mov
shl
xor
dec
or
cmpl
aam
ja
std
fcoms
mov
pop
shr
lock
or
push
or
and
sbb
add
cld
jo
lock
clc
rep
mov
inc
mov
sbb
adc
pushf
inc
pop
jle
add
and
lret
xor
pop
mov
les
jl
push
in
cmp
das
add
fistps
ja
mov
je
xor
in
xchg
push
lea
or
repz
lods
cli
dec
mov
js
jbe
ficoml
mov
push
push
and
fnstsw
xor
pop
inc
pop
cmp
ffree
rorb
mov
sbb
mov
fidivrl
pusha
push
or
adc
sub
imul
push
loop
pop
or
pop
shrb
lods
or
sbb
fwait
aaa
mov
pop
adc
cmp
in
mov
test
mov
int
mov
mov
mul
in
pop
pop
mov
pop
fucomi
ret
or
sub
and
xchg
stos
jb
xor
mov
adc
add
or
pop
jecxz
mov
adc
sti
or
pop
jnp
popa
pop
sbb
cmp
inc
roll
bound
aad
or
sbb
shll
and
xor
jae
dec
mov
pop
outsl
lods
sub
and
sbb
fsubs
sbb
xor
inc
cmp
loopne
push
jnp
jb
cs
sbb
orb
pop
fisttpl
sbb
in
xor
in
shll
mov
and
nop
mov
orl
ja
and
push
bound
jo
dec
pop
xchg
dec
mov
stc
jl
push
imul
xor
adc
dec
fistl
pop
cli
or
loop
scas
dec
jnp
mov
jo
mov
sbb
rorb
lea
or
insb
fists
pop
jbe
cmc
fs
mov
sub
xor
cli
pop
or
adc
ret
adc
and
mov
adc
fisttpll
inc
adc
xor
jnp
scas
adc
loope
sbb
mov
stc
insl
push
jne
lea
add
add
add
sti
lea
mov
and
out
pop
icebp
shll
dec
mov
add
sub
pusha
inc
dec
pop
ss
movsl
jp
movb
xlat
add
dec
push
loopne
scas
andl
push
dec
xchg
aaa
pop
jmp
or
pop
adc
ficomps
icebp
mov
push
sahf
les
dec
xor
xchg
push
pop
pop
pusha
lock
outsl
sub
dec
sete
jne
test
jmp
pusha
iret
pop
sub
lock
xor
push
inc
or
mov
adc
jae
xor
rorb
or
and
lahf
js
ret
dec
or
adc
mov
jbe
sub
adc
xor
hlt
cmpb
sbb
mov
ret
push
mov
sbb
add
push
sbb
push
or
mov
and
inc
sarb
sub
cmp
jg
mov
insl
mov
cmpb
push
or
push
add
pop
mov
push
adc
mov
iret
cmp
mov
adc
push
ljmp
int
and
jbe
push
bswap
cmp
mov
inc
sarb
shlb
xor
ret
push
or
mov
std
push
cmp
jne
inc
inc
inc
dec
sub
jmp
inc
fs
sub
pop
mov
push
cld
icebp
movsb
pop
pop
push
add
xchg
mov
loopne
dec
jmp
test
cmp
or
nop
repnz
or
or
loopne
sub
aam
arpl
pop
add
arpl
in
add
nop
and
or
aad
and
cmp
je
pop
loope
sub
sbb
add
xchg
pop
push
pop
pop
jl
xchg
aam
pop
in
mov
shlb
xor
xor
cs
pop
or
lods
unpcklps
shrl
fadds
mov
movsb
sbb
and
pop
mov
je
push
dec
test
push
cmp
and
or
push
lods
push
dec
inc
imul
push
jge
adcb
add
xor
aad
sbb
aam
and
les
pop
add
int
ret
outsb
out
dec
jno
and
adc
inc
inc
sub
jo
or
pop
sbb
loope
mov
call
push
es
push
mov
clc
or
xchg
cmp
jl
mov
fimull
ficomps
in
dec
inc
mov
sub
mov
lea
or
iret
xor
mov
mov
test
or
out
dec
pop
pop
push
sbb
push
nop
or
xchg
xor
sub
mov
pop
fcoms
outsl
lea
movsl
dec
movsl
mov
mov
xchg
leave
enter
pushf
mov
push
mov
dec
xchg
or
cld
inc
add
lods
in
inc
cwtl
sbb
xor
sub
test
dec
incl
add
fs
adc
std
stos
xor
cmp
xchg
xchg
xchg
jne
mov
add
xor
push
ret
jbe
repnz
lahf
mov
push
push
add
push
popa
test
and
jecxz
add
stos
subl
push
outsl
pop
insl
sub
and
pop
pop
mov
shll
pusha
ret
cmc
cwtl
ret
sub
xchg
ds
and
dec
pushf
daa
mov
test
je
mov
loope
inc
add
inc
pop
arpl
xor
test
and
gs
pop
cmp
dec
scas
add
mov
test
and
sub
add
mov
pop
int3
cmp
int3
mov
test
sub
pop
add
cmc
test
and
mov
dec
mov
xor
sti
mov
push
cmp
push
dec
push
mov
jl
adc
sub
nop
push
mov
sub
insb
pop
icebp
jle
fcomps
jo
push
lock
inc
jle
lods
xlat
std
sub
or
lea
cli
pop
movzbl
outsb
add
mov
outsl
je
add
inc
call
out
mov
jg
jl
mov
jb
push
mov
push
add
decl
shlb
cli
shr
xor
adc
js
mov
not
rcll
sub
lea
test
lock
call
add
xchg
cmp
aaa
jmp
add
mov
xchg
pushf
inc
sti
pop
mov
and
inc
push
add
fsubrl
mov
inc
inc
sbb
rolb
lcall
int
push
enter
in
xchg
sbb
mov
sbb
and
repnz
aad
leave
inc
fucomp
cli
push
push
mov
adc
mov
lods
push
test
mov
inc
rorb
dec
call
loopne
jne
push
aad
les
lret
push
ffreep
jne
js
push
lds
add
jb
jp
xchg
xchg
in
push
lret
cmp
pop
mov
fnstsw
loopne
test
sbbl
xchg
aad
mov
add
mov
rorl
subb
sub
xlat
shr
add
iret
mov
cmp
xor
inc
loopne
mov
cli
mov
adc
mov
sbb
inc
push
fldl
daa
adc
mov
jle
sbb
add
and
sbb
les
call
lea
rcrb
jb
push
xor
and
lahf
pop
push
imul
add
jmp
xor
mov
pop
mov
inc
cmp
out
bound
pop
ret
inc
xor
mov
jmp
inc
jp
or
sub
jns
les
and
xor
std
outsl
lahf
add
push
outsb
insb
add
test
sbb
cmp
pusha
popa
orps
push
jecxz
dec
loope
sbb
inc
or
dec
cli
xor
lea
add
sub
push
push
push
or
and
mov
add
sysret
jmp
sbb
or
sbb
test
cmp
cmp
add
nop
fstl
xor
scas
mov
add
adc
pushf
scas
rcl
mov
adc
in
inc
xor
and
inc
inc
ret
ret
hlt
test
sbb
xor
leave
lret
xor
or
jno
nop
out
xchg
xor
sub
mov
cltd
sub
push
pop
adc
mov
inc
and
mov
lods
movsl
dec
jp
pushf
pop
inc
ret
loope
add
and
rolb
adc
dec
inc
mov
push
movsl
addr16
pop
shr
mov
dec
dec
xchg
mov
xor
jl
add
push
xchg
add
or
mov
mov
scas
or
fs
fisubrs
lods
mov
dec
sbb
nop
dec
adc
mov
pushf
mov
fcom
adc
in
sbb
data16
or
fistpl
pop
out
jmp
and
adc
dec
aad
loope
sub
sahf
xchg
pop
adc
inc
add
pop
in
inc
jb
inc
cmp
jne
and
dec
fs
push
test
ds
mov
cmp
add
add
and
in
add
dec
mov
or
rcll
nop
pop
jecxz
inc
imul
pop
inc
imul
or
dec
and
xor
in
xchg
data16
mov
sub
jb
push
sbb
pop
out
mov
sub
mov
mov
mov
iret
inc
and
mov
in
add
sub
add
xor
mov
mov
push
adcb
pop
lds
les
into
add
or
dec
lret
xor
cmp
and
cmp
sbbl
fdivr
rclb
mov
pop
jmp
pop
push
lea
rorb
and
mov
cmp
xchg
jns
xlat
jp
movsl
pushf
das
mov
mov
test
insb
arpl
addr16
xor
test
mov
jne
xor
rcrb
mov
nop
daa
pushf
sub
fisubl
sub
xchg
sub
push
dec
gs
and
jnp
movsl
sub
enter
lret
test
aam
fnsave
lods
dec
in
popf
push
jbe
inc
cmpxchg
mov
popf
push
jbe
inc
lock
push
fldenv
cmpw
mov
sbb
push
les
ds
jne
movsb
clc
int3
adc
sub
xor
arpl
add
nop
shrb
pop
ss
shlb
shrb
or
or
js
es
sbb
xchg
mov
push
push
and
xor
ljmp
mov
lret
nop
lods
or
lahf
push
xchg
xchg
dec
rolb
mov
popf
mov
daa
daa
stos
and
pop
in
insb
mov
mov
lods
xchg
jns
nop
pop
mov
mov
fs
push
aam
sub
dec
add
or
scas
add
mov
pop
pop
mov
pop
call
fs
or
orb
adc
lods
sbb
stos
fldl
and
cld
hlt
xchg
jg
jg
sub
adc
scas
ss
cmp
xor
or
pop
out
cld
dec
cmp
hlt
fsubs
addr16
jmp
push
rclb
mov
mov
lock
jmp
jge
filds
cmp
sbb
fbstp
je
xor
arpl
inc
mov
repnz
mov
jo
gs
cs
loop
jne
or
xchg
stos
adcl
xchg
adc
mov
push
mov
and
lret
loop
xchg
lahf
add
or
scas
stos
jle
xor
decb
add
jo
xchg
xor
xchg
push
lret
and
shlb
seta
int3
call
addr16
or
insb
pusha
push
aad
and
inc
sub
js
mov
popa
repnz
sbb
pop
js
je
or
and
data16
sub
movsl
mov
xor
inc
mov
lahf
rorb
dec
mov
rcrl
sub
nop
push
lea
in
push
xchg
imul
adc
aas
or
fcomp
xor
jno
xlat
insl
cmp
jge
fldz
sbb
lret
jne
push
lock
inc
movsl
push
int3
loopne
fstpl
xchg
mov
call
pop
sbb
inc
shll
cmp
or
or
ret
and
orb
mov
or
outsl
jo
push
inc
xchg
rcrb
cs
cmpl
and
xchg
push
jns
movsl
test
and
test
push
addr16
in
mov
add
popf
or
jnp
movsl
out
inc
ja
fsubrs
xchg
in
shlb
sbb
in
xchg
and
sbb
test
test
dec
add
lds
jmp
mov
jne
and
add
or
and
or
inc
push
push
inc
fiadds
pop
repnz
xor
cmp
push
push
and
into
sub
inc
lea
push
sub
push
add
test
push
out
push
fld
mov
push
dec
sbb
aam
pop
shll
pushf
jo
add
scas
xor
and
imul
and
ja
mov
mov
subl
dec
mov
cld
in
pop
jne
mov
jae
cld
inc
cmp
and
imul
push
repnz
xchg
iret
sbb
dec
loope
xor
mov
popf
decl
inc
adc
or
push
or
mov
addb
add
xchg
subb
pop
gs
pop
jns
push
les
ret
dec
mov
mov
xor
and
push
call
xchg
add
add
stos
sbb
jae
jae
mov
add
cmpsb
or
aad
out
mov
adc
arpl
cmpsl
mov
aam
adc
popa
jmp
call
push
sbb
dec
cmp
mov
cmp
xor
clc
push
xor
data16
inc
mov
dec
jmp
xchg
and
or
push
push
xor
fistpll
nop
add
jle
loope
push
pop
inc
mov
pop
push
cltd
insl
shrb
mov
cwtl
mov
test
add
add
roll
and
pop
rorb
stos
push
push
scas
iret
aaa
add
sbb
iret
push
add
repnz
pushf
pop
shlb
add
jo
xchg
xchg
sub
and
xor
mov
push
lcall
add
sub
add
and
fistl
sub
mov
imul
in
ds
and
push
lock
push
mov
pop
data16
pop
cmp
cli
addr16
pusha
out
hlt
cmc
jl
xchg
xchg
enter
ja
in
aaa
xchg
nop
mov
push
adc
push
adc
mov
or
or
and
mov
cmp
rclb
mov
mov
cmp
pop
sbb
pop
mov
pop
or
pop
pop
clc
jns
adc
outsl
mov
jmp
aam
push
add
dec
fiadds
outsl
push
fldl
push
push
jo
loop
push
mov
push
dec
addr16
adc
lock
cmp
pusha
push
inc
cmpsb
jbe
jmp
push
lods
or
sbb
pusha
mov
jmp
inc
nop
rolb
je
loop
lds
adc
cmp
or
in
xorl
les
and
mov
mov
sti
je
push
or
rclb
sub
and
jbe
xchg
daa
cltd
jmp
push
pop
jmp
jno
xor
add
cmp
bound
and
cmpsl
sbb
push
and
leave
sahf
aas
aam
inc
mov
jl
orl
je
push
pop
push
xor
in
add
lods
mov
das
push
push
es
pop
stc
pusha
or
or
sub
xchg
xchg
imull
or
es
rcll
mov
fdiv
pop
cmp
je
bound
js
add
push
in
mov
push
inc
lea
mov
add
or
sbb
xor
pop
pop
cltd
sti
mov
push
push
dec
inc
push
xlat
inc
xor
jg
call
fldpi
mov
sbb
test
lret
sub
adc
jbe
in
adc
cmp
sbb
shlb
insb
into
push
or
les
rolb
jp
in
mov
push
leave
vpermd
roll
add
mov
leave
xlat
pusha
fistpl
jmp
push
mov
clc
adc
jmp
or
loopne
xchg
and
enter
or
loopne
pushf
test
cmp
cmc
sbb
push
shlb
inc
int
in
pop
mov
loop
movsb
adc
mov
ret
lds
les
or
insb
ss
rolb
dec
cmc
ret
imul
and
jne
aaa
outsl
add
mov
inc
les
push
ret
loope
stos
pop
push
cmp
add
inc
xchg
jnp
xlat
out
addb
cmp
or
notb
add
add
cmp
mov
test
arpl
dec
push
aam
push
lahf
mov
xlat
daa
dec
push
sbb
or
sar
lea
out
xor
pusha
mov
ljmp
inc
push
mov
ror
xor
shr
xor
sub
jnp
xor
and
or
icebp
add
add
add
mov
mov
iret
out
stos
fs
or
jae
ljmp
not
and
xor
add
add
aam
xor
outsb
outsb
sub
jge
add
lcall
repnz
cli
fisubrs
stc
or
add
xor
and
and
xchg
push
aam
adcl
xor
lret
repnz
mov
mov
inc
push
or
xlat
ret
shrb
add
add
add
dec
rcll
call
inc
inc
sub
call
jb
add
mov
mov
rol
rol
out
add
mov
xor
fcompl
in
and
in
nop
cmpsb
imul
orl
ret
add
push
cmp
bound
int3
enter
bound
pop
pop
and
mov
pop
aaa
mov
push
scas
adcl
and
call
xor
loopne
loopne
inc
sub
dec
in
in
loopne
adcb
imul
pop
xor
sub
adc
or
int3
test
test
mov
push
xor
and
and
loopne
or
dec
dec
stos
xor
sbb
add
test
mov
mov
inc
jo
pop
subl
ficoms
adc
mov
dec
push
sub
xor
adc
call
jne
mov
filds
cltd
sub
leave
fimull
inc
fadds
pop
jbe
call
add
lret
push
clc
jp
jle
pusha
xor
xlat
add
gs
fdivrs
dec
xor
rolb
call
in
shlb
mov
popa
jle
inc
mov
push
sub
adc
clc
jo
cli
push
and
popf
stos
adcb
or
aaa
cmp
inc
lcall
pop
push
cmp
xor
shr
mov
add
cli
stos
mov
and
xor
rolb
rclb
rorb
dec
shll
add
loopne
cld
add
dec
add
xor
xchg
inc
push
and
dec
xor
and
cmp
push
dec
add
dec
xorb
mov
jb
push
xor
adc
dec
pop
dec
cmp
or
movsb
mov
and
stos
inc
stos
fs
mov
xchg
out
sahf
push
add
rorb
inc
pop
test
add
pop
xor
rcrb
inc
xchg
lret
adc
push
pusha
ret
mov
in
rorb
adcl
mov
in
sbbl
mov
fs
sbb
icebp
stc
stc
xor
icebp
sbb
mov
adc
jl
mov
dec
not
imul
imul
push
loopne
or
and
add
and
add
pop
push
adc
mov
or
jg
pushf
out
pop
add
sub
mov
add
inc
test
add
jb
cld
or
xchg
aam
inc
aaa
sub
add
sub
aam
outsl
cmp
lea
pop
xor
outsl
jmp
test
decl
sub
jnp
lock
mov
cs
and
lock
rorb
shrl
in
inc
jae
mov
push
mov
mov
ja
or
aas
lea
jmp
sti
push
jle
lea
push
sub
pop
add
ret
dec
or
mov
dec
jne
pop
loopne
fsubrs
loope
lock
std
mov
or
add
mov
adc
cmp
fs
mov
mov
fildl
sub
jae
push
pop
fadds
rep
or
fildll
and
sbb
rol
or
cmpsb
mov
outsl
pop
push
hlt
insl
loopne
ror
mov
notl
xor
mov
mov
inc
mov
cmc
adc
inc
xchg
in
call
lds
push
dec
sbb
sbb
ja
adc
push
push
cmpsb
popf
inc
add
sub
and
or
out
loopne
imul
testl
ljmp
in
sub
mov
movsb
jb
adc
pop
pop
and
dec
pop
pop
pop
pop
dec
push
rclb
insl
jne
aas
cmp
call
mov
sbb
mov
aam
test
scas
pop
mov
mov
push
adcl
push
cmpsb
pusha
leave
or
in
jo
jo
dec
lock
fisubrl
imull
and
adc
jnp
std
mov
call
or
add
dec
add
loopne
add
fs
lods
out
lds
outsb
sti
xchg
sbb
nop
inc
dec
dec
adc
cld
enter
push
gs
xor
ss
lahf
mov
add
or
pusha
ljmp
mov
sub
and
dec
inc
addr16
mov
jmp
pop
ret
sbbb
sub
push
and
aam
sahf
sub
cmp
pop
adc
insl
cmpsb
inc
dec
add
mov
xorl
cltd
data16
mov
cmp
test
cmp
inc
push
or
add
in
sub
and
pop
in
add
sub
adc
sub
in
test
sub
incl
and
adc
xchg
xchg
mov
xchg
dec
cmp
add
jle
nop
push
or
inc
dec
insl
add
pop
pop
push
xor
xor
mov
arpl
adc
push
testl
fists
loope
in
je
lret
xor
in
loope
or
out
mov
xchg
push
dec
mov
and
fsubrp
sub
sbb
je
or
int3
adc
jmp
xor
push
dec
js
xchg
add
or
xchg
dec
movsl
pop
repnz
xor
dec
xchg
mov
push
loopne
mov
lea
or
repnz
and
insl
shl
jl
fcomps
icebp
xchg
dec
xor
cmpb
nop
jo
fimull
adc
repnz
mov
bound
arpl
rcrb
pop
inc
and
pop
cmp
test
test
xchg
sub
and
cmc
xlat
or
testb
xchg
inc
mov
mov
and
insb
loopne
cld
inc
rcrb
jnp
movsl
pop
push
xchg
jae
add
call
jmp
mov
test
inc
adc
lock
ss
pushl
clc
aaa
and
arpl
mov
dec
into
cld
sub
xchg
push
add
mov
xchg
std
xor
push
cmp
push
push
xchg
orl
push
or
movsl
lds
push
leave
aam
ds
movsl
fnstcw
loopne
mov
aaa
xchg
rcll
into
adc
sub
inc
xorb
pop
cld
ja
jo
je
cmp
jbe
jns
clc
sub
and
jbe
mov
lcall
adc
in
or
pop
stc
mov
and
and
insb
xor
sub
cmpl
jbe
cmpl
pop
clc
repz
or
or
sahf
jmp
push
hlt
sub
test
jbe
mov
adc
and
es
dec
push
movl
pop
mov
in
add
sbb
cmp
lcall
dec
push
sub
mov
sub
mov
sub
adc
mov
dec
sbb
pusha
adc
push
sub
mov
jbe
mov
cltd
pop
and
nop
push
out
push
clc
imul
pop
pop
mov
sbbb
fcomip
adc
add
cmp
xchg
mov
out
jbe
cli
mov
lock
xchg
les
das
sbb
jae
push
ret
mov
loop
ljmp
sub
push
mov
xchg
addr16
dec
or
dec
add
push
es
xor
sub
xor
jl
dec
mov
mov
push
fcomps
mov
cmp
test
mov
test
or
adc
push
lods
mov
or
in
and
jne
jmp
and
ja
push
fwait
gs
jbe
inc
or
xor
push
dec
rcl
pop
push
mov
mov
add
jne
inc
scas
add
sarb
dec
sub
and
cwtl
add
sbb
adc
mov
fiadds
adc
loope
testb
cmp
sarl
fwait
popa
jecxz
mov
mov
sub
add
fadds
push
mov
das
sahf
push
push
pop
imul
xchg
js
mov
push
mov
orb
xchg
fcompl
push
adc
test
lock
pop
xchg
movsb
mov
lds
xor
enter
add
mov
inc
lcall
or
mov
push
fisubrs
pop
add
movsb
dec
push
xchg
or
aam
cmp
xchg
outsb
adc
rcl
sub
or
clc
add
and
add
xchg
sub
push
xorb
daa
add
cmp
dec
hlt
dec
rcll
mov
inc
add
je
arpl
sbb
cwtl
jno
loop
add
fldt
or
dec
xor
add
scas
xchg
sbb
mov
scas
je
dec
cmp
stos
xchg
inc
inc
lea
jecxz
insb
xor
jl
mov
cmp
dec
sbb
or
outsl
sub
push
pop
mov
je
add
out
dec
mov
cld
inc
call
add
sub
push
aad
xor
fstl
add
ss
cmp
fistpl
dec
cmp
ja
rclb
adc
ss
jb
add
lock
sbb
adc
pop
neg
mov
jne
mov
sub
into
mov
inc
mov
push
push
loope
mov
pop
push
jmp
sub
xor
jmp
cmp
loope
hlt
adc
sbb
mov
mov
xchg
mov
xor
mov
xchg
jb
pop
add
inc
pop
inc
dec
xor
cs
test
lock
lods
ret
mov
fsub
test
ficompl
xor
mov
or
sub
jno
inc
jo
mov
add
outsb
shrb
stc
add
adc
mov
ja
lock
test
sbb
cmp
jnp
fisttpll
mov
sub
stos
xor
xchg
adc
xor
mov
in
mov
adc
mov
pop
cwtl
add
lock
inc
dec
mov
jne
pop
add
or
pop
dec
negl
or
incb
roll
lcall
xchg
or
adc
xor
pop
pop
repz
push
dec
add
add
imul
mov
mov
cmp
je
mov
aad
inc
pop
dec
jle
pop
push
adc
mov
push
add
push
inc
cmp
jl
pop
and
add
xchg
mov
ljmp
jle
shlb
adc
xor
and
jno
xor
adc
cmp
insb
xchg
cmp
jle
push
add
sub
xor
mov
aas
cmc
xor
pop
ret
push
das
add
or
mov
popa
push
push
push
jl
mov
mov
adc
sbb
test
push
and
adc
and
pop
mov
pushf
sub
cmpsl
mov
or
cs
in
mov
call
cmp
sbb
cmp
adc
mov
push
lea
stos
mov
sub
or
jne
push
outsb
add
sub
and
inc
pop
fs
mov
hlt
test
or
jo
mov
mov
mov
and
rclb
shl
and
add
call
mov
enter
shl
add
and
shl
xor
mov
mov
aaa
mov
movsw
movsb
mov
sub
inc
inc
jge
or
faddl
hlt
jge
into
pop
adc
int3
fidivrs
sub
lea
add
adc
das
ret
loope
fisubrs
dec
fs
push
mov
lock
dec
pop
arpl
test
js
loope
sub
insb
push
push
jge
rorb
jl
and
cmp
lcall
xchg
lods
call
xchg
rolb
pop
lret
inc
loopne
loop
lock
cmp
sub
jne
pushf
call
loope
mov
sbb
inc
shlb
and
xor
sbb
mov
push
xor
movsl
sbb
xor
clc
dec
dec
ljmp
dec
mov
pusha
stos
adc
jle
mov
and
sub
mov
icebp
cmp
and
jp
shr
aam
sbb
and
dec
adc
xor
or
mov
mov
lods
or
mov
dec
in
xor
imul
push
adc
cld
aad
daa
add
xchg
mov
out
lcall
inc
and
adc
cmp
ficoms
and
leave
hlt
push
xchg
adcb
adc
push
pop
xchg
pop
test
pop
cmp
xchg
dec
fbld
xor
out
or
inc
data16
pop
js
dec
lods
shll
xor
mov
test
push
sub
test
movswl
jle
lock
cmp
jg
subb
jl
push
jg
xchg
mov
jbe
ss
jmp
push
js
jbe
mov
jmp
push
xchg
mov
das
xor
xorb
test
ljmp
sbb
mov
xchg
out
add
adc
out
and
mov
jg
pop
dec
mov
push
cmp
hlt
cmp
notb
mov
pop
push
ret
in
adcb
out
jno
mov
repz
xchg
test
pop
lret
mov
pop
out
mov
sbb
sbb
mov
and
mov
xchg
sbb
or
add
clc
sbb
jne
add
dec
fiadds
or
test
iret
mov
adc
arpl
sar
mov
push
sbb
mov
popa
and
gs
out
cmpsb
lea
or
pop
ret
cmp
or
orb
sbb
pop
jmp
rorb
imul
push
or
sarl
movsl
in
pop
sbb
sub
push
addb
mov
clc
pop
adc
mov
arpl
inc
lret
jae
push
sub
mov
pop
subl
dec
push
push
cmp
jo
cmp
sahf
inc
fisubs
push
pop
or
outsb
in
inc
or
stc
cvtps2pi
aam
pop
out
sub
fistl
push
add
scas
jne
dec
mov
stos
mov
lods
mov
aaa
popl
inc
or
xchg
cmpsl
or
push
and
adc
nop
jmp
test
aam
inc
loopne
ljmp
push
gs
mov
rolb
adc
mov
mov
ret
xchg
push
data16
pop
or
pop
xor
fisttpll
call
bt
outsl
mov
sbb
mov
mov
xor
dec
dec
pop
stos
inc
xor
jne
push
jecxz
inc
sbbl
adc
or
loopne
je
testb
jns
dec
jmp
mov
dec
add
das
sbb
sub
mov
jp
icebp
cmpl
inc
or
cmpsb
test
sti
mov
push
out
nop
movb
ret
pop
pop
mov
pop
push
xchg
add
negb
das
mov
cwtl
push
js
cmp
cmc
adc
pop
add
fcompl
xor
xchg
mov
incb
jne
fcomps
dec
in
add
loopne
xor
mov
adc
mov
andb
pop
inc
push
and
sub
ss
bndstx
arpl
lret
jae
xor
out
cmp
jle
inc
and
cmp
sbb
cmp
mov
cmpsb
outsb
out
xor
inc
cmp
in
mov
add
cmpsb
pavgb
rcrl
test
mov
push
add
pop
adc
fsub
xor
push
das
shlb
or
inc
subb
pop
jmp
call
add
pop
add
mov
mov
jb
lea
dec
insb
mov
or
out
lock
inc
push
or
jo
add
cmpsb
pop
push
rcr
pop
cmp
or
or
add
cld
dec
push
sub
inc
jo
jne
addl
lret
inc
add
mov
aad
mov
test
scas
lea
std
inc
stos
pop
cmp
push
mov
rolb
pop
mov
jne
inc
addr16
and
inc
push
add
add
add
sub
pop
mov
mov
jo
sub
jbe
cvtps2pd
sarl
sbb
in
mov
cmp
adc
testb
je
cmp
mov
sub
inc
stos
push
cmp
xchg
nop
mov
mov
jmp
sub
ds
jnp
aam
adc
add
add
out
mov
jne
pop
sub
rcr
popa
jecxz
lock
cltd
push
sbb
xchg
test
repz
jecxz
adc
push
cmp
mov
subl
add
push
aam
ss
loopne
push
aaa
subb
jle
rorb
icebp
jmp
mov
jo
outsb
clc
jno
dec
ret
adcl
in
push
dec
jne
jg
cwtl
sbb
push
add
xor
movsl
and
hlt
mov
hlt
mov
inc
sub
in
cmp
insl
sub
inc
mov
and
push
pop
add
loopne
xchg
in
jg
jg
add
hlt
push
push
mov
mov
adc
sbb
or
inc
dec
add
mov
adc
or
dec
mov
xchg
aam
pop
mov
repnz
mov
push
and
pop
sub
pop
push
cmp
stos
mov
adc
jg
dec
std
add
mov
sbb
out
push
rorl
sbb
sbb
mov
stos
add
repnz
mov
inc
fiaddl
pop
cmpb
leave
jmp
jne
lock
sbb
dec
adc
adc
push
or
inc
bswap
ss
andb
mov
cmp
mov
movsb
or
jmp
in
or
dec
xor
lret
jmp
push
cmp
pop
xor
or
into
and
mov
cwtl
sbb
js
inc
imull
jae
and
lock
stos
aas
sub
cmp
jne
push
xchg
aad
and
xor
rolb
shlb
mov
mov
mov
les
jae
mov
out
lods
cmp
cmovns
push
mov
outsl
inc
mov
and
push
pop
push
pop
adc
pusha
pusha
sub
out
adc
clc
and
xor
sbb
dec
incl
aaa
mov
sti
lea
loopne
xchg
jl,pn
pop
addl
push
or
pop
jns
dec
inc
stos
mov
jmp
rol
mov
and
lcall
mov
out
sahf
inc
bound
incl
icebp
pop
fsubrl
adc
add
and
mov
add
cmpsl
push
pop
lcall
adc
add
mov
add
ficompl
pop
xor
sbb
rorb
in
dec
or
roll
pop
jmp
adc
fistps
xchg
sbb
jmp
cltd
sub
push
xchg
add
add
mov
sub
or
cmpsb
mov
add
shlb
add
into
push
leave
lea
arpl
pusha
fnstcw
test
fistl
pusha
dec
adc
mov
loopne
adc
or
adc
in
aaa
jne
and
add
dec
lock
jae
loopne
ljmp
fadd
pushl
or
adc
push
inc
ds
fidivl
andb
pushf
cmp
clc
fisttpl
sub
pop
inc
int
lock
js
dec
adc
rorb
and
ret
cli
int3
and
push
or
stc
scas
jl
arpl
inc
leave
sbb
mov
pop
popa
push
inc
add
or
rorl
jbe
dec
leave
push
call
ss
loopne
push
pop
adc
cmp
push
stos
lods
inc
sub
push
addl
in
or
inc
mov
or
xchg
push
out
inc
cmpb
imul
add
enter
in
sub
mov
jle
cmp
dec
push
xor
pop
sbb
stos
add
cltd
sub
pop
ficompl
xchg
push
or
or
in
jmp
push
mov
movsl
lds
or
lcall
jmp
pop
and
mov
pop
nop
xchg
aaa
add
dec
insl
cmp
je
dec
insb
fbld
jo
mov
hlt
pop
ds
testl
cmp
xchg
out
add
in
insb
cmpsl
ja
add
dec
push
ds
jae
fwait
sarb
adc
adc
movl
scas
out
andl
inc
sahf
add
inc
je
sar
out
fwait
nop
xor
imulb
or
sbb
or
sahf
loope
xlat
jno
adc
and
mov
pop
mov
in
cmp
sbb
ret
sub
mov
pop
or
in
orb
pop
das
push
adc
insb
inc
or
push
stc
test
jnp
aam
mov
mov
iret
inc
and
push
out
jb
or
adc
dec
aaa
add
mov
adc
pop
xor
mov
xchg
aaa
popa
insb
ret
imulb
mov
jecxz
jno
pop
rolb
or
mov
push
and
lock
jo
xchg
in
inc
and
or
jp
jbe
cld
mov
or
xor
pop
ja
sub
inc
inc
inc
jb
jb
cmp
inc
popa
ret
xorl
and
loope
ljmp
cmpl
or
ljmp
adc
sub
push
orb
cmp
add
cmp
push
das
aas
push
imul
push
mov
xor
cli
cmp
je
inc
pop
jne
fisubrs
and
movsb
or
push
mov
inc
cwtl
push
addb
xlat
jmp
push
push
dec
pusha
add
insb
sbb
or
push
cmpl
stos
sbb
sbb
lahf
pop
je
jmp
or
push
dec
cmp
xchg
sub
out
or
or
dec
sbb
out
setg
jg
cmp
outsl
xchg
jmp
adc
sub
clc
cli
push
xor
icebp
fnstsw
push
jnp
add
cmp
mov
pop
pop
or
dec
xchg
push
aaa
and
pushf
es
jecxz
dec
xchg
leave
dec
inc
pop
pop
rolb
and
or
loop
or
xor
rolb
fmull
inc
sbb
sbb
stc
or
ret
jnp
nop
sub
shlb
orb
adc
sbb
sbb
inc
aad
pop
mov
inc
mov
sbb
jmp
sub
jle
push
add
jb
cs
pop
in
mov
jge
mov
repnz
push
push
test
ficomps
xchg
adc
push
pop
jmp
cmpsl
and
aaa
mov
mov
adc
dec
add
jne
mov
mov
cmp
jo
popa
fidivrs
sub
mov
prefetch
or
cmp
jne
push
jno
sarb
xor
jmp
ja
dec
addb
jmp
adc
mov
mov
pusha
jne
inc
xor
push
mov
scas
dec
sbb
adc
shll
push
jle
pop
or
test
sub
mov
je
movl
jl
jns
jne
add
shlb
sub
mov
push
loopne
or
jle
rcrb
xchg
cmp
cmp
repz
xorb
pop
pop
push
jne
cld
pop
or
and
xor
ss
stmxcsr
testb
and
or
mov
pop
popa
lcall
jg
jg
fildl
dec
test
movd
out
or
sub
push
clc
jae
xor
jns
insl
or
xor
cli
rcl
lret
inc
stos
dec
mov
jl
xor
insb
fbld
repz
or
jg
push
xchg
fistps
xchg
ret
adc
jnp
mov
movsl
pop
sbb
hlt
aam
adc
cmp
push
mov
roll
repnz
roll
cmpsl
rcl
add
sbb
mov
enter
shrb
ret
adc
dec
dec
sahf
repnz
sbb
dec
repnz
and
sbb
jmp
imul
bound
dec
mov
int3
push
loop
repnz
and
ljmp
js
sub
adc
push
ret
pop
loop
jl
push
jle
test
push
push
mov
jge
mov
ja
jns
pushf
dec
ja
pop
and
icebp
xor
int
xor
ret
sbb
cmp
lock
cwtl
ja
call
xchg
loope
mov
sbb
inc
or
and
jbe
enter
cltd
mov
add
rcr
mov
movsl
pop
and
mov
sbb
pop
clc
sub
bound
add
adc
add
cmp
mov
add
movsl
rorb
roll
push
inc
inc
mov
adc
into
jle
mov
call
pop
push
sbbb
mov
mov
cmp
jne
in
mov
rcll
mov
roll
and
in
adc
es
shlb
mov
cmpsl
sbb
je,pn
cmpsl
fimuls
xchg
out
lods
or
sbbb
jge
arpl
pushl
jne
add
or
popf
rorl
inc
dec
ds
push
stos
adc
xor
mov
hlt
fcomi
arpl
or
in
cmp
push
xchg
jmp
push
jo
inc
add
pop
xchg
clc
push
pop
add
push
test
lock
mov
pop
dec
call
movsb
adc
decl
inc
cmp
jne
inc
cmp
inc
xor
jle
dec
adc
push
les
clc
push
push
pop
and
popa
adc
pop
mov
xor
das
inc
arpl
leave
adc
dec
test
into
jle
inc
inc
push
add
mov
mov
lret
xor
loopne
mov
dec
sahf
out
dec
adc
push
add
push
push
lret
lcall
pop
or
rolb
mov
sub
jge
adc
mov
jae
pop
andl
adc
or
mov
inc
hlt
cmp
mov
mov
add
enter
sbb
sub
add
ret
jge
shl
shlb
lahf
mov
testl
or
inc
pop
cmp
mov
or
loopne
rcrl
push
rol
inc
inc
cmp
aam
lret
jne
xlat
cli
dec
adc
imul
jg
jmp
jnp
add
add
push
test
adc
add
in
push
mov
adc
and
insb
cmp
and
xchg
xchg
shlb
push
inc
stos
xchg
inc
or
inc
jmp
je
inc
or
add
cmp
fdivl
adc
orl
jnp
or
add
lahf
xor
scas
mov
fdivl
or
or
bnd
jl
mov
add
xchg
adc
arpl
push
mov
lds
and
xor
ficompl
fdivrl
add
ja
sbbb
loopne
pusha
mov
out
jbe
jb
cmp
or
std
push
jmp
incb
pop
les
hlt
dec
into
repnz
push
sub
xchg
jne
fmuls
sbb
add
add
xor
mov
jbe
sub
jb
xchg
sub
add
jmp
mov
dec
mov
mov
dec
dec
mov
inc
pop
mov
lret
ret
adc
movsb
sub
mov
or
or
add
pop
daa
or
mov
cmp
pop
arpl
sbb
decl
push
mov
jmp
jb
lea
movsb
jo
dec
add
mov
dec
nop
push
and
cmpsl
mov
cld
jne
mov
push
cmp
jne
lcall
and
adc
or
push
jb
jmp
mov
adc
push
dec
jmp
adc
jmp
mov
stc
jns
std
jmp
cld
cld
ret
addr16
pmaxub
jecxz
dec
push
pop
loopne
in
push
xchg
and
adc
or
stc
hlt
or
add
jle
into
xchg
mov
popa
loop
or
inc
or
testb
pop
or
subb
gs
or
mov
cmpsb
or
jmp
add
sbb
aad
idiv
or
leave
inc
enter
jne
inc
sub
push
sbb
adc
add
adc
or
mov
loope
lcall
mov
test
int3
les
subl
stos
or
push
adc
cmc
cli
out
jecxz
cmp
jg
add
mov
mov
dec
sbb
in
rcll
addl
popa
loop
dec
pushf
sub
xchg
rep
jp
xchg
jmp
xchg
cltd
out
xchg
and
lahf
pop
jle
push
jbe
push
aam
pop
div
jb
inc
pushf
push
loopne
sbb
ret
mov
movsl
mov
sub
sub
fsubrl
subl
sub
pop
adc
push
mov
and
pop
xchg
xchg
push
mov
cmpsl
cld
sub
cmp
in
adc
clts
gs
mov
mov
addr16
jp
imul
int
sbb
in
xchg
imul
xlat
gs
outsl
adc
test
mov
imul
mov
add
push
shrb
mov
mov
adc
neg
sbb
or
jl
or
lods
push
mov
lods
adc
movsl
out
cmpl
pop
pop
out
jmp
roll
sahf
dec
cltd
fstl
std
aas
add
cmp
jne
orl
jmp
adc
jne
sub
inc
shlb
and
add
test
and
cmp
push
xor
les
mov
pop
in
cli
or
and
adc
mov
adc
pop
jne
dec
add
add
lds
sbb
pushf
add
sub
lret
or
fs
mov
jmp
test
mov
jg
dec
sub
cmp
ja,pn
xor
add
cmp
jae
push
or
jb
movsb
xor
mov
inc
js
add
and
into
je
test
push
je
or
push
pop
bound
adc
cld
imul
add
inc
cmc
mov
nop
test
jne
test
jne
push
andl
ja
lret
fimull
inc
mulb
add
je
imul
sub
add
add
into
out
or
in
pop
stos
mov
rolb
jp
or
mov
pop
aaa
shr
mov
push
xchg
cmp
inc
test
loop
add
sbb
in
xchg
add
mov
fisubl
sub
sub
add
inc
or
sbbl
push
data16
jge
add
icebp
stos
mov
add
pop
mov
pop
sub
ljmp
jno
or
push
fidivrs
and
adc
mov
jne
idivb
test
or
jmp
sub
sbb
push
pusha
or
or
adc
lods
pop
rcrb
or
adc
aad
sbbb
loopew
cmp
mov
insb
jmp
and
inc
xor
inc
mov
xor
ds
rcrb
xor
lret
dec
jmp
mov
add
dec
enter
arpl
in
in
fisttpll
aas
push
repnz
push
jmp
xchg
pop
jecxz
mov
adc
dec
and
scas
test
inc
jno
lock
mov
mov
arpl
ja
inc
fmuls
cwtl
lret
mov
nop
jp
shlb
cs
jmp
and
mov
je
pop
andb
add
movsl
dec
cmp
out
int3
inc
push
je
subb
dec
push
orb
sbb
or
mov
push
addb
dec
adc
adc
or
sbb
and
or
call
fidivs
sub
add
sub
sbbb
aam
lock
inc
ja
and
int
shlb
stc
sub
jb
lea
push
adc
push
pop
dec
ss
dec
rcr
push
add
and
xchg
popf
mov
mov
es
scas
and
sbb
inc
dec
push
mov
stos
mov
cmp
jne
add
nop
inc
loop
clc
or
or
add
cld
jmp
pop
sub
push
xchg
push
adc
inc
push
mov
pop
inc
cmp
fs
mov
clc
test
sti
xchg
lret
cmpsb
cltd
ljmp
push
push
pushf
mov
pop
insb
xchg
fiaddl
and
mov
pusha
adc
xchg
add
pop
fstl
jne
daa
cmp
call
xor
rolb
dec
and
lcall
mov
inc
incb
imul
leave
sub
fwait
cli
lods
mov
arpl
and
dec
push
push
das
movb
cmpsl
test
inc
xchg
pop
jne
mov
je
adc
xlat
dec
cld
aam
rorl
loope
shll
adc
ja
sub
push
and
push
cmp
outsb
rcrl
and
sub
inc
push
ja
ficomps
insb
pushf
jns
jno
xchg
pop
sub
xor
xor
mov
shrb
in
fwait
dec
popa
jle
push
mov
pop
push
popf
and
pop
jmp
daa
mov
pop
mov
ret
lock
add
mov
jb
pop
add
vmwrite
adc
adc
inc
roll
jb
xor
repnz
outsb
sbb
mov
pop
pop
or
and
pop
jecxz
push
or
and
fiaddl
push
inc
idivl
inc
adc
shlb
je
push
movsl
scas
jp
in
dec
pushf
mov
push
into
xor
imul
or
sbb
jecxz
insb
xchg
mov
mov
nop
rolb
xchg
add
inc
xchg
testb
sti
jnp
or
loopne
out
add
cmp
jb
xor
cmp
push
je
sbb
ss
jp
mov
xlat
test
out
aas
add
cmp
je
cmpsb
fdivl
shr
movnti
inc
push
or
or
inc
dec
jbe
add
dec
es
sbb
mov
lods
sub
loopne
in
jmp
iret
or
das
sbb
fstpt
insb
and
pop
sbb
add
mov
push
or
arpl
mov
lods
mov
int
int3
sbb
push
and
out
and
sbb
inc
pop
xchg
sub
add
bound
mov
stc
fcomps
push
and
cmpsb
cwtl
add
push
incb
loope
test
dec
pop
js
xor
mov
cmp
xorl
inc
jne
mov
sbb
hlt
je
push
jbe
test
call
loope
add
in
jge
mov
mov
sbb
lahf
adc
and
lret
jl
shlb
aad
jge
pop
lds
mov
pop
iret
mov
data16
shr
mov
dec
or
add
lret
sarb
or
pop
push
inc
pop
test
outsb
or
adc
ss
push
popl
xor
insl
addl
arpl
cli
xchg
sahf
xor
rorl
fcoml
jle
sbb
bound
gs
popf
shlb
push
cld
push
sub
mov
ja
xchg
arpl
jl
inc
fadd
in
dec
or
xchg
xchg
xchg
int
dec
mov
mov
pop
jle
add
jl
mov
add
xor
jo
sub
xchg
fiaddl
mov
lea
repz
imul
jo
pop
add
and
enter
daa
add
push
repnz
adc
imul
repnz
je
lcall
flds
add
add
sbb
push
xchg
sub
pop
jb
or
enter
or
dec
jb
cmp
or
sub
pop
enter
pop
or
test
loop
or
cmpb
add
nop
ja
inc
or
add
ja
xor
and
push
rsqrtps
adc
pop
in
lods
pop
adc
fwait
sub
popa
in
cmp
sahf
lret
add
ds
add
adc
add
sbb
inc
ficoms
adc
adc
enter
push
push
repnz
push
pop
pop
pop
lcall
mov
sbb
sbb
enter
call
pop
and
sbb
sbb
fstl
add
je
pop
sbb
aaa
xor
sbb
sbb
cmp
inc
inc
push
pop
pop
enter
jne
add
add
sub
cmp
jae
ja
add
add
cmp
xchg
dec
and
idivb
inc
add
in
push
in
jno
lcall
in
repnz
lea
or
out
jns
in
in
cmp
enter
fwait
out
sbb
out
enter
xchg
add
call
inc
fsubrp
nop
adc
jb
mov
ljmp
jmp
jmp
push
push
and
in
in
out
repnz
inc
in
repnz
sahf
out
out
enter
jge
sbb
push
imul
lock
cmp
icebp
icebp
inc
sahf
xchg
add
repnz
mov
repz
pushf
lcall
or
in
sbb
pusha
fwait
mov
cmp
pop
jg
notb
repnz
idivl
fsubs
dec
in
std
clc
clc
clc
cltd
add
inc
push
adc
inc
stc
sbb
iret
in
cld
cli
cli
iret
jns
sbb
sti
sbb
stos
cld
xchg
aaa
jb
cld
cld
je
cld
push
pmaxub
les
jns
addr16
sbb
adc
sbb
test
ficompl
xorl
pop
sub
add
popf
arpl
lahf
in
mov
js
xchg
or
aas
dec
es
and
movsb
jecxz
mov
enter
in
push
in
stos
icebp
inc
mov
ret
daa
xchg
sti
out
xchg
add
dec
out
cltd
outsb
pop
leave
and
sub
adc
xchg
sti
sbb
lcall
dec
push
jno
in
add
mov
cli
rolb
sub
out
out
cltd
jns
xor
das
cli
and
and
cli
sbb
jmp
cltd
nop
stos
in
sar
push
sub
stc
rclb
fstpl
div
and
int3
jmp
pop
fwait
xor
das
xchg
inc
pop
add
stc
out
clc
lret
and
mov
lcall
add
cld
inc
cld
subl
inc
pusha
scas
out
mov
sbb
jp
pusha
pushf
inc
cld
or
loop
loop
push
mov
loop
icebp
mul
mov
shl
scas
imull
xchg
xchg
jg
mul
sbb
inc
or
out
bound
jno
out
inc
testl
jno
imul
loop
push
shl
pop
mov
adc
xchg
xchg
negb
insb
out
out
mov
les
negb
in
repnz
add
dec
push
cmp
cmc
repnz
jb
or
cmc
pop
leave
mov
adc
mov
dec
cmc
idivb
pusha
pop
xchg
div
jns
and
pop
add
clc
clc
lock
stc
popa
movsl
test
hlt
cli
cli
imul
test
hlt
in
repnz
hlt
push
hlt
shll
mov
das
pushw
jmp
data16
hlt
idivl
jo
insb
out
push
sti
lahf
loope
dec
sub
xor
cmpsb
test
loope
loope
cmp
mov
scas
repz
xchg
mov
test
imul
sbb
repz
repz
jns
repz
movsl
test
bnd
cmc
mov
sub
shll
repnz
mov
in
in
and
les
jns
jne
repnz
je
push
adc
icebp
cmp
mov
icebp
mov
icebp
test
sub
icebp
cmc
push
jno
imul
xchg
pushf
dec
jecxz
fldl
lock
popf
lock
stc
cmc
scas
adc
and
push
lock
sbb
push
lock
test
ss
outsb
sub
xor
add
sub
cli
xor
stc
out
ret
xchg
sarb
push
add
jb
cmp
add
stos
les
add
push
inc
and
and
adc
or
adc
or
xchg
daa
cmp
dec
add
sahf
and
add
ds
mov
ss
mov
inc
inc
add
inc
push
repz
adc
js
fldcw
pop
test
inc
enter
data16
dec
testb
ss
int
lretw
inc
mov
xlat
dec
jl
out
cmp
daa
dec
lods
ds
data16
mov
inc
mov
xor
adc
mov
or
mov
dec
lock
and
add
push
mov
add
inc
push
les
fs
cmp
loopne
sti
jb
test
mov
inc
cmp
je
int
in
push
loope
cmp
adc
std
xor
push
addb
push
sbb
fdiv
push
js
test
sarb
push
ss
push
in
add
xchg
fdivp
mov
aas
dec
ss
push
sbb
fistpl
push
dec
sbb
fistpl
or
fistps
pop
mov
repnz
outsl
es
cmp
or
or
test
mov
jo
fists
cmp
push
insl
jnp
fmuls
and
add
stos
and
add
add
sahf
adcb
nop
sub
imul
sbb
add
lea
scas
ljmp
or
ss
mov
dec
lock
and
mov
push
cmpl
mov
and
in
fdivl
neg
outsl
addb
sub
mov
orl
add
add
mov
or
jmp
or
dec
cltd
mov
rep
mov
dec
ljmp
stos
xchg
js
cmp
andl
loope
sub
or
add
add
dec
and
jo
sub
in
inc
int
inc
and
or
fdivrs
jle
cltd
rol
dec
movsb
sbbl
and
fdivrp
add
dec
adc
rclb
arpl
add
nop
es
push
out
shlb
sub
xchg
sbb
mov
ja
add
xor
data16
jmp
jb
testb
pop
mov
inc
and
gs
iret
sti
and
mov
push
cmp
nop
cmpsl
cmpsb
or
pop
loopne
lock
repnz
je
pusha
mov
adc
in
lods
insb
mov
inc
inc
pop
cmp
enter
add
mov
orps
loope
add
inc
cmp
inc
ja
lret
add
loop
or
iret
or
orb
xor
push
add
pop
push
fimull
inc
outsb
enter
add
repz
sub
push
lock
rol
xor
adc
adc
adc
stc
ret
and
lret
adc
adc
jne
jnp
lock
inc
cmp
sbb
or
dec
outsb
out
jns
gs
mov
dec
mov
stos
insl
bound
jbe
lcall
add
inc
fs
ja
jge
dec
push
adc
add
xor
push
into
inc
cld
in
add
push
call
sub
insb
mov
sbb
inc
xchg
jmp
lret
clc
js
iret
dec
out
or
movb
ret
aad
sub
not
jmp
stos
add
testb
add
adc
mov
sahf
add
mov
add
mov
fimuls
or
popa
jne
add
mov
push
xor
inc
adc
xor
add
ficoml
push
imul
push
or
and
icebp
into
push
notb
mov
loop
add
enter
cmp
mov
push
fsts
insl
pop
and
cmovs
mov
push
jb
div
arpl
call
das
enter
data16
inc
add
mov
add
add
xor
push
ss
call
push
push
clc
es
dec
push
and
xchg
push
mov
or
scas
adc
mov
dec
and
add
add
inc
add
add
lret
or
push
mov
mov
cwtl
jno
mov
inc
in
cmp
repz
in
in
lock
repz
hlt
clc
clc
cld
sti
and
add
add
fnstcw
scas
andl
or
int
loop
and
test
mov
sti
and
outsb
or
push
lea
jl
cld
push
jo
sub
and
std
cld
out
mov
fcmovne
jo
neg
adc
and
sbb
sub
xor
test
rcr
add
test
add
dec
inc
fcomps
add
jbe
mov
jecxz
insl
pop
add
ljmp
mov
or
push
xor
mov
repz
dec
push
addr16
aaa
iret
repz
sbb
sbb
adc
cmp
repz
adc
or
and
repz
push
jl
fwait
inc
orb
push
cwtl
lods
pop
aaa
js
lcall
adc
ja
lea
cmpl
jbe
push
loope
scas
xor
push
mov
mov
incl
inc
decl
jne,pn
insl
sbb
lods
repnz
frstor
push
jecxz
fldl
cmpl
aaa
jbe
push
cltd
pop
idiv
scas
orl
mov
add
adc
ja
push
aaa
dec
mov
mov
xor
inc
and
pop
and
jmp
cmp
jae
dec
bound
pop
jae
pop
jbe
mov
push
dec
cwtl
jmp
jo
pop
sub
adc
jecxz
fdivrs
pop
fdivrs
jg
cmp
test
sbb
add
adc
in
mov
sbb
sbb
dec
dec
je
push
push
in
or
ss
xor
jne
fidivrs
roll
dec
mov
negl
cmpsl
pop
imul
jl
xchg
inc
dec
xor
cmp
nop
out
das
sbb
mov
and
add
filds
inc
cltd
push
bnd
pop
push
pop
mov
add
jae
push
test
test
xor
adc
fiaddl
inc
popa
movsb
jne
lock
stos
xchg
test
cmp
mov
push
lea
insb
jmp
cmp
sbb
ja
insl
or
aas
jge
push
add
cld
push
cltd
pop
idiv
in
ret
insb
xchg
push
xchg
inc
out
cmp
dec
add
lods
ret
jmp
dec
stos
test
fsubs
pop
jle
pop
inc
dec
cmp
cmp
enter
inc
sti
pop
clc
adc
fs
jmp
jl
mov
sub
pop
adc
cs
je
insb
sub
inc
arpl
inc
jb
lods
dec
jmp
add
adc
mov
stos
notb
dec
jne
or
pop
cmp
xabort
pop
fdivr
add
sti
cmp
pop
and
sarb
push
inc
sub
mov
ds
cmp
in
movsb
loop
mov
push
jecxz
sub
cmp
mov
jge
pop
je
sbb
mov
add
insb
mov
dec
aas
jno
mov
mov
int
int3
dec
jo
fs
loope
mov
je
dec
inc
call
jne
mov
je
xchg
mov
mov
inc
lretw
bound
adc
jl
pop
mov
movhps
fisttps
and
push
hlt
mov
mov
mov
jne
inc
out
aaa
subl
inc
test
cmp
pop
stc
pop
push
adc
addb
inc
jmp
popa
icebp
and
push
pushf
adc
movsb
stos
mov
and
inc
sbb
shll
ret
push
je
mov
mov
movsb
xchg
xchg
cmp
jge
dec
mov
mov
adc
push
adc
sub
jl
inc
adc
in
jns
testl
push
jge
push
out
jp
sbb
pushl
add
lcall
dec
xchg
rorb
jg
icebp
mov
push
pop
loopne
loope
push
fcoms
mov
sbb
and
adcb
cmp
or
aam
add
hlt
mov
jg
sbb
xchg
jle
mov
aam
test
push
ss
in
pop
mov
pop
clc
push
and
fisubl
push
ss
decl
add
mov
imul
daa
sbb
add
fidivrl
mov
fmull
dec
je
popa
inc
fidivl
sbb
push
pop
sbb
sub
movsb
add
mov
push
icebp
adc
push
fdivr
push
push
mov
push
inc
cmp
addb
test
jle
push
ja
mov
pop
sbb
lods
mov
push
jnp
bound
add
add
or
xchg
dec
push
arpl
inc
inc
cmpsl
mov
sub
or
das
mov
outsl
mov
addr16
test
adc
fwait
movb
test
cmp
mov
nop
sarl
mov
fsubrp
jne
int3
push
sbb
jno
add
dec
lock
mov
mov
int
sub
enter
imulb
pusha
shll
cmp
cs
mov
mov
cmovs
add
leave
mov
inc
sbb
mov
adc
fildl
or
pop
fcom
scas
mov
repnz
add
rcll
pushf
mov
shlb
jne
jmp
dec
or
in
inc
sub
push
jmp
das
dec
mov
push
dec
sbb
loop
mov
addb
test
and
mov
inc
in
sbb
mov
jb
pop
ret
orl
in
xlat
aam
sahf
cmp
push
inc
icebp
add
bound
jge
push
test
in
or
push
jl
cmp
lahf
jge
bound
and
jne
push
nopl
sbb
inc
or
mov
xchg
mov
sbbb
out
dec
outsb
and
inc
outsb
and
cmp
inc
fisubrs
rorb
cmpb
jne
inc
dec
pusha
out
sbbb
aam
outsl
inc
mov
sbb
mov
jecxz
jge
cltd
pop
pop
xlat
xchg
xchg
push
ficoms
clc
xor
mov
and
adc
es
inc
jmp
xor
popf
cmpb
pop
adc
ret
push
movsl
int3
nop
ret
inc
jge
pop
jmp
inc
push
enter
sub
lcall
dec
push
nop
add
add
cmp
jp
mov
pop
jo
pop
fldz
push
out
mov
add
push
adc
enter
jmp
jnp
sbb
add
not
push
mov
mov
and
divb
jp
inc
cltd
add
cmp
fbstp
jno
movsb
stc
push
add
hlt
outsb
fs
orb
fnsave
andb
ds
jmp
pop
arpl
sub
ret
pop
xchg
push
jno
in
or
fs
sub
lds
mov
jp
mov
inc
push
push
std
mov
les
cmp
cmp
pop
and
js
lods
or
mov
cs
sub
cmp
push
sub
into
in
sbb
outsb
jbe
in
push
push
js
adc
cmp
jge
and
sbb
inc
lock
add
les
mov
fsubrl
xor
xor
shll
in
call
dec
in
and
stos
push
push
ret
into
rorl
insb
insl
clc
mov
cmp
sahf
enter
pop
lret
stos
sub
or
rolb
jne
or
adcb
dec
jae
nop
stc
push
aam
pushf
enter
mov
fmuls
dec
jmp
mov
shlb
cmpb
sbbl
adc
loopne
and
inc
and
stc
cmp
insb
jmp
push
cmp
or
xchg
push
lea
or
adc
adc
aad
sub
iret
pop
sbb
cld
arpl
push
jo
mov
fidivrl
adcb
mov
jmp
adc
rcll
add
adc
cmp
jae
jge
cmp
fiadds
rorb
add
nop
sbb
addr16
xchg
and
sub
or
xchg
jbe
es
mov
pusha
js
mov
fcomi
jae
cmp
xorb
ret
aaa
jle
dec
xchg
jle
dec
nop
in
in
inc
inc
mov
push
out
jne
pop
dec
pusha
mov
scas
sbb
or
mov
cmp
movsb
shrl
pop
inc
icebp
cmp
push
pop
xor
rcl
ret
rorl
add
call
pop
xchg
lock
fadds
in
mov
xor
mov
clc
sar
push
pusha
sbb
adc
cmpl
in
pop
xor
jne
incl
sub
pop
or
mov
test
fists
xchg
mov
gs
mov
ret
inc
and
loop
adc
push
cmp
and
les
and
add
push
sbb
xor
jecxz
mov
push
lea
loopne
ret
loope
push
movsb
mov
repnz
add
cmp
lahf
adc
in
add
add
mov
outsl
nop
xor
or
jecxz
stos
jnp
je
add
iret
xor
mov
shrb
pop
jno
sbb
mov
mov
mov
mov
or
sti
sbbb
add
dec
xchg
xchg
pop
es
cmc
push
cmpl
sti
add
cmp
add
adc
add
into
or
inc
dec
jg
and
push
cmp
in
pop
shrb
aam
add
jne
cmpl
jle
and
repz
mov
rclb
call
adc
or
dec
xor
je
rorl
and
pop
test
or
lock
jno
add
cmp
in
mov
lret
test
fcompl
sub
push
ret
mov
std
pop
pop
pop
sbb
and
mov
stc
or
add
loopne
jns
adc
popl
outsb
xchg
je
mov
pop
mov
loopne
movl
cmp
xor
add
inc
sarb
std
out
xor
inc
cmp
adc
fmul
adc
dec
xchg
icebp
ja
insl
mov
sub
jmp
adc
add
push
mov
xchg
sbb
jo
sub
ljmp
addr16
lds
adc
or
push
ret
xor
xchg
or
push
and
fadds
xchg
or
inc
sbb
out
mov
test
push
jle
mov
adc
shl
or
mov
push
jle
pusha
insb
and
into
mov
or
mov
inc
dec
jne
lea
subl
dec
add
xchg
sbb
nop
pusha
cmp
mov
xor
mov
jo
sti
mov
add
and
call
test
and
cwtl
sub
lea
jp
and
ja
sub
scas
nop
out
ss
or
cltd
inc
popa
loop
xchg
sarb
cld
ficoml
imul
ja
jns
adc
cs
push
cmp
sub
cld
shlb
or
out
rcr
int
cmp
jg
push
orb
mov
je
dec
fldenv
mov
into
or
adc
ss
jo
jmp
mov
mov
jle
movsl
lahf
mov
xchg
or
mov
cmp
dec
sti
aas
in
sbb
lret
add
jmp
cmp
push
push
add
add
je
inc
inc
inc
lea
and
ja
and
clc
or
or
jo
jg
or
ja
jo
mov
test
or
insl
inc
cli
cmp
xorb
mov
or
jno
repnz
lret
jmp
or
mov
xor
out
insb
push
or
or
jg
mov
in
cmp
rcl
outsl
add
inc
ss
push
cmpsb
push
cmp
cmp
cmpsl
nop
in
outsb
inc
cmp
lahf
add
lock
sub
cmp
xchg
stos
enter
les
lods
push
lret
sarb
rolb
andl
add
pop
stos
xor
fidivl
pop
adc
iret
fildll
add
xchg
inc
cmp
imul
fidivl
push
jmp
popf
mov
shrb
das
fwait
mov
push
and
and
stos
jae
dec
lea
adc
and
add
cmp
jbe
xchg
cmp
lea
mov
outsl
loope
and
rcll
leave
inc
test
pop
dec
aas
imul
lea
loopne,pn
sub
std
std
mov
loopne
adcb
cmp
lcall
pop
lods
xchg
addb
shrl
clc
sti
xchg
addb
add
jb
mov
cmp
mov
dec
inc
or
adc
mov
loopne
pushl
inc
mov
inc
inc
inc
dec
jne
mov
inc
pop
push
bound
and
pop
jl
sbb
divb
mov
inc
push
mov
inc
dec
jne
hlt
jnp
or
movsb
mov
adc
add
or
gs
mov
jmp
cmp
insl
and
and
cmpsl
in
adc
mov
orl
adc
mov
cmp
push
out
mov
das
dec
loope
mov
inc
or
sbb
mov
cmpsl
and
loopne
rorb
jns
add
loopne
popa
mov
fidivl
push
xchg
jo
inc
adc
cmp
inc
push
adc
aam
push
int3
cmp
dec
xor
sbb
ljmp
repnz
jb
sub
and
fs
sub
ret
mov
add
jge
enter
or
pop
sub
imul
push
fucomip
call
or
mov
xor
add
dec
jmp
stos
xchg
int
ss
push
out
arpl
and
sbb
push
ljmp
xchg
frstor
xchg
lea
cmp
imul
mov
cmc
add
lret
push
lahf
leave
cmpl
and
pop
ret
add
fdivrs
fistl
outsl
cmp
cmp
mov
pop
andb
pop
pop
sbb
int3
or
mov
ds
jge
mov
into
int3
adc
mov
movsb
jb
arpl
inc
inc
sbb
es
data16
sub
imul
lahf
subb
and
add
cwtl
rorb
aam
and
push
inc
pop
cmp
xorl
pushl
out
jle
rep
mov
cmpl
test
pop
cmp
cwtl
shlb
inc
add
bound
add
or
sbb
push
xor
pusha
aaa
inc
mov
inc
mov
rorb
sub
fsubrs
jnp
or
cmp
adc
movsl
sub
inc
or
jl
xorl
mov
add
adc
xor
out
sub
mov
ljmp
lahf
addr16
pop
in
addb
sbb
pop
jbe
xchg
fdiv
ret
test
jle
sbb
jo
sbb
cwtl
loope
cltd
orb
ds
add
and
pushf
fiadds
push
ficomps
or
jbe
pop
mov
out
add
pop
cmpsl
adc
mov
jne
sbb
push
cmp
rcl
pop
sbb
daa
mov
incb
mov
in
and
pop
lret
xchg
mov
push
push
addb
out
inc
cmp
xor
xor
xchg
mov
loopne
dec
out
call
sbb
and
push
inc
fsub
nop
testb
push
sub
outsb
ja
aam
or
aas
push
idiv
fsubrs
sub
mov
enter
mov
dec
inc
pop
pop
adcb
rcl
jns
pop
inc
cwtl
and
sbb
dec
xchg
jbe
pop
pop
lret
insb
push
cld
push
pop
inc
ret
add
sbb
inc
mov
or
js
movsb
xchg
imul
inc
inc
cmp
cmpsb
jns
dec
mov
jae
imul
arpl
flds
outsl
adc
lea
dec
add
pusha
clc
aad
sub
std
and
inc
ret
dec
push
sub
xor
push
sub
xor
push
movsb
pushf
xchg
es
aas
mov
sbb
sub
add
orl
mov
xor
rol
and
stc
adc
adc
lcall
imul
pop
sub
jge
and
sbb
push
in
xor
in
push
in
inc
dec
or
subps
les
push
mov
ret
jmp
push
dec
insb
rorl
insb
and
pop
cmp
push
es
je
jle
or
cmp
mov
ret
add
addl
push
and
and
fucom
pushf
push
ljmp
xor
sbb
je
cmpl
sub
es
adc
cmpsb
and
daa
test
xchg
jno,pt
jns
dec
shll
out
or
ljmp
fsubrl
mov
jge
jb
mul
inc
mov
or
mov
add
mov
push
pop
xchg
sbb
xchg
mov
enter
sbb
pop
dec
lock
mov
xchg
pop
repnz
sub
andl
cmp
lea
mov
mov
das
mov
nop
pop
xor
lods
lods
mov
sbb
or
fcoml
lods
popf
aam
sarb
clc
mov
in
popf
enter
ror
mov
test
jnp
cmc
push
adc
sarl
enter
dec
cld
adc
cmp
pop
aam
xchg
add
inc
mov
mov
fcomps
sub
call
push
sub
jne
sbb
sti
or
in
js
jmp
jge
lock
shrb
out
dec
adc
push
mov
mov
test
popa
or
aas
adc
or
sub
incl
fmuls
js
pop
sub
nop
adc
jnp
out
push
sbb
adcb
inc
pop
test
test
push
lahf
out
sahf
pusha
pop
push
dec
inc
cmp
pop
fld
out
push
push
jmp
addl
and
push
and
pop
nop
xor
pushf
sub
pop
push
addb
pop
andb
cmp
cmp
push
in
hlt
adc
fcomip
cld
add
pop
sbbl
xchg
push
dec
dec
add
icebp
pop
sbbl
cltd
fsts
adc
xor
sbbb
sbb
jp
cs
push
ret
xchg
outsl
es
dec
cmp
js
mov
movl
sbbb
dec
sarl
jne
in
dec
inc
xor
dec
rorl
jge
or
mov
or
mov
mov
rcrb
rcrl
pop
add
mov
xor
pop
cld
adc
mov
add
add
inc
or
and
or
fbld
idivl
aas
xchg
adc
adc
and
and
mov
daa
dec
aad
daa
fwait
xor
daa
and
pushf
rol
push
enter
popa
testl
je
loopne
popf
in
dec
dec
adc
imul
nop
jne
jl
xchg
dec
or
mov
and
addl
imul
sbb
ret
je
rcll
ret
xchg
mov
add
jne
or
push
adc
adc
add
out
xorl
jno
sub
push
bound
xor
dec
push
cmp
or
ss
inc
push
or
push
mov
pop
mov
adc
jl
in
sub
and
sub
outsl
imul
adc
js
mov
pop
adc
loope
notb
inc
shl
jbe
jle
test
ja
shrb
imul
je
movl
dec
test
insl
or
inc
sbb
bound
mov
and
cmpsl
mov
push
inc
and
clc
mov
in
and
push
jo
xor
and
inc
call
dec
lock
les
add
daa
jno
or
popf
add
inc
sbb
or
or
pop
adcb
outsl
mov
pop
pop
xchg
test
jb
push
or
mov
mov
inc
in
sbb
lea
inc
cmp
stos
jle
push
clc
ficompl
pop
cmp
add
mov
pop
int
jmp
or
sbb
inc
fimull
frstor
jmp
add
push
dec
rorb
movsb
lea
mov
pop
sub
mov
sub
clc
cmp
sub
mov
xchg
mov
cmp
aaa
or
push
jbe
repnz
pop
adc
push
adc
and
dec
or
and
jo
ret
aaa
jecxz
xchg
add
ss
mov
test
xchg
mov
push
mov
adc
jbe
push
inc
mov
test
cmp
cmp
inc
nop
mov
scas
idivb
nop
pop
divl
in
inc
mov
fwait
push
pop
sbb
push
mov
dec
xchg
xchg
in
xchg
inc
xchg
mov
cmp
or
dec
ljmp
jns
and
lcall
push
mov
sub
pop
sar
add
add
inc
pusha
or
add
sbb
and
push
adc
jno
imulb
ret
and
add
push
push
push
shlb
fldl
lock
xchg
sub
dec
jmp
cld
or
in
and
testb
add
je
cmpl
inc
jg
inc
inc
add
jmp
rolb
jg
or
jg
std
inc
inc
cmpl
pop
test
cmpl
cmc
push
ret
aas
xor
nop
push
mov
je
dec
or
sahf
call
mov
xchg
fnsave
in
mov
cs
fadd
sbb
out
mov
xor
sub
mov
sarl
xchg
lds
xchg
test
mov
out
rcrb
push
leave
test
in
or
call
or
or
sbb
test
sbb
rclb
fildll
jle
lea
rcrb
jl
pop
fcmovnu
fadds
sbb
js
push
sar
pop
mov
sbb
cli
or
iret
mov
lea
pop
mov
fdivr
sub
cs
testb
rcr
or
je
or
sub
je
sbb
jne
push
push
scas
pushf
pop
or
mov
add
ds
cli
dec
loope
push
xchg
sub
or
pop
shrb
mov
mov
mov
shrb
inc
mov
lea
ja
adc
lods
shll
jb
xchg
daa
out
sbb
pop
hlt
stc
nop
je
push
cmpl
insb
je
lock
mov
subb
xlat
ds
xor
sub
pop
mov
and
mov
or
xor
mov
xor
repnz
dec
xor
movsl
mov
dec
fs
mov
or
adc
pop
outsl
imul
js
sub
je
mov
xchg
sbb
lret
pop
sub
or
or
push
sbb
jle
inc
je
pop
sti
or
repz
or
add
xor
mov
inc
mov
hlt
fdivr
sub
lock
push
dec
nop
and
jae
ljmp
xor
cmp
xchg
jle
aaa
jne
das
mov
jo
cmc
ret
adcl
pop
sbb
dec
mov
lods
jecxz
sub
xchg
or
fmuls
mov
movsl
push
xchg
push
es
sub
imul
mov
and
mov
pop
jne
add
push
insl
cmp
sbb
jbe
pushf
sub
aam
sbb
lret
or
loopne
adc
adc
pushf
jbe
std
je
mov
push
mov
and
xchg
aas
push
and
sub
add
shl
lret
jge
lcall
sub
enter
mov
mov
cmpsb
aaa
lods
dec
pop
adc
or
jecxz
mov
lea
out
pop
cmp
jns
push
sbb
ret
lcall
sub
loop
rclb
add
addr16
sbb
push
outsb
je
js
or
test
insl
pusha
outsb
ljmp
mov
or
stos
test
xchg
xor
add
movsb
orb
mov
pusha
adc
test
sbb
pop
jo
lds
jecxz
push
stos
add
push
add
ret
xor
sti
jmp
jne
mov
jne
mov
jmp
cmp
jecxz
popf
jmp
push
insl
cmpl
incl
cwtl
xor
sahf
add
int
lret
stos
mov
or
mov
xor
adc
dec
into
cmc
mov
rcll
hlt
dec
sub
psubusw
js
mov
adc
jecxz
lea
stc
sub
movsl
push
pop
test
cmpsl
adc
sbb
adc
addb
loop
push
int
inc
adcl
scas
nop
push
movsb
push
outsb
mov
sbb
cld
decb
mov
mov
inc
daa
add
adc
dec
ret
lahf
inc
push
xor
sbb
mov
sub
lret
out
mov
bound
push
in
push
fbstp
inc
push
data16
add
cmpsb
jmp
out
or
jmp
aaa
int3
je
cltd
nop
shrb
xchg
dec
sub
jl
xchg
rolb
dec
jae
and
orb
nop
rclb
add
pop
js
jne
mov
or
sbb
adc
add
dec
test
daa
cld
or
jne
and
lea
loope
das
sbb
or
inc
je
es
ret
sub
rol
sub
or
cmp
xchg
clc
sahf
add
mov
dec
jmp
pop
add
inc
cmp
jecxz
aas
je
cmp
adc
mov
inc
dec
shlb
add
movb
inc
jmp
cmovl
aad
jmp
dec
data16
sti
sub
inc
repz
fwait
sbb
adcl
add
sub
xor
bnd
and
sub
push
test
shl
lods
call
fcoml
pop
aam
cltd
sub
sub
sahf
dec
shll
shl
push
jp
xchg
jnp
xor
cmp
cwtl
jge
lea
jns
mov
xor
mov
xor
pop
lcall
cmp
nop
aaa
cmp
sub
in
fistps
rcll
btc
pushf
test
push
ret
inc
lods
add
cmpsb
sbb
cmp
sti
push
mov
imul
andb
add
push
xorb
adc
adc
pop
mov
mov
mov
sub
movsb
ret
sarl
jp,pt
pop
or
push
xlat
pop
sub
sbb
dec
push
movsb
bound
adc
push
jbe
and
jae
ss
fs
in
cmp
xchg
rcrb
pop
mov
lcall
andl
or
pop
ljmp
idivb
cld
xchg
dec
cmp
pcmpgtw
push
lret
jl
sbb
iret
stos
cmpb
jl
test
and
lcall
mov
or
mov
add
xor
mov
insl
fistl
rcl
movb
push
out
mov
push
jne
push
ss
cwtl
data16
out
fs
xor
pop
or
or
lock
pushf
jge
mov
les
sub
popa
cmp
outsb
add
push
inc
js
arpl
push
jo,pt
jmp
push
xor
adc
sbb
repnz
xor
cli
xchg
or
int
mov
or
adc
movsb
lea
jl
xchg
test
xor
cmp
rclb
cmp
push
or
adc
enter
cmp
mov
ljmp
jb
rclb
or
dec
adc
xchg
sub
cld
shr
mov
imul
adc
fisttpl
push
dec
or
outsb
hlt
jmp
mov
xor
sbb
mov
mov
mov
adc
mov
loop
inc
or
mov
sar
dec
cmp
jbe
push
mov
add
in
sbb
cmp
jne
subb
jae
mov
shr
lea
jmp
add
shll
pop
mov
and
cmp
lea
xor
in
push
pop
add
push
dec
lahf
imul
add
pop
and
push
or
sub
sub
jmp
jmp
clc
and
notb
pusha
mov
and
sti
add
push
pusha
add
fmull
cmp
in
fimuls
clc
imul
cmp
je
int
push
lock
jno
mov
pop
decl
and
add
push
pop
push
xor
dec
loopne
mov
xor
cmp
push
jle
pop
xor
clc
mov
lock
push
jmp
xchg
mov
fisubs
popf
loopne
mov
int3
inc
or
or
jnp
dec
or
adc
mov
out
aas
sub
mov
mov
es
lods
orb
xor
or
pop
mov
ret
testl
adc
loopne
mov
or
xchg
rorb
cld
pop
inc
cmpsl
loope
or
lock
je
inc
push
stos
pusha
gs
add
sub
shl
in
pop
testb
dec
or
jp
push
call
aas
mov
push
or
iret
cmp
sub
dec
inc
adc
icebp
adc
add
and
pushl
push
push
movsb
pusha
xor
mov
clc
jp
shll
popa
int
mov
fildll
enter
leave
mov
sbb
jmp
push
cmp
or
mov
pop
or
das
mov
inc
dec
mov
cmp
jne
sbb
test
outsl
push
push
cmp
lea
jns
addl
addr16
negb
les
mov
inc
adc
or
mov
xor
and
subb
adc
fucomi
fwait
mov
dec
cmp
add
pusha
jle
mov
mov
push
mov
orb
rolb
jge
ljmp
test
bound
pop
incb
pop
insb
add
sub
xchg
cmp
dec
jne
or
or
repz
sti
jg
xlat
add
int
mov
adcb
js
cli
ja
sub
shr
push
and
cmpl
orl
dec
push
or
adc
out
xchg
inc
cld
lock
push
add
sub
sbb
je
mov
jle
clc
add
push
ret
jo
jo
sub
sub
fs
inc
mov
mov
inc
mov
lock
push
rolb
add
js
lds
ljmp
iret
xchg
or
adc
add
push
xlat
sub
pop
shr
add
lret
cld
negb
mov
icebp
clc
mov
and
pop
adcl
add
fwait
adc
or
punpcklbw
inc
jl
cmp
js
add
push
xchg
add
mov
int3
push
pop
lcall
pop
inc
add
stc
sbb
clc
rcr
sub
add
cmp
or
rol
dec
or
out
add
push
jns
add
mov
in
ljmp
adc
pushf
sar
dec
mov
cs
fstpl
lea
jmp
pop
jg
or
mov
imul
xor
adc
lcall
fwait
rclb
jmp
orl
jp
js
test
inc
mov
mov
insb
xor
addl
lcall
jl
insl
inc
pop
add
jge
mov
push
cld
loop
inc
dec
insb
pop
xor
push
sar
dec
jp
loope
pusha
and
sub
movsl
cmp
push
jl
push
xor
cmp
or
out
dec
je
fisttps
rclb
mov
add
fnstenv
in
loopne
dec
ficoms
add
mov
loope
ret
ja
dec
lea
mov
test
mov
ret
adc
push
cmp
lods
sub
into
mov
test
cmp
lods
dec
les
sbbb
popa
add
insb
sub
lods
pop
and
inc
add
mov
push
push
push
jge
pop
add
out
adc
cwtl
dec
les
in
or
stos
pop
js
sub
fldcw
push
or
mov
nop
cmp
and
decb
xlat
jne
add
rcr
mov
call
sbb
cli
jae
fnstenv
jmp
jnp
add
shrl
aaa
arpl
and
das
movsl
dec
mov
mov
and
xchg
aad
jo
add
mov
clc
fnsave
cmpb
je
mov
imulb
adc
cmp
adc
inc
mov
push
sbb
sub
jno
mov
dec
pop
mov
ljmp
repz
insl
out
mov
mov
and
jne
mov
push
pop
outsb
js
or
leave
inc
push
pushf
mov
sub
push
and
icebp
sbb
pusha
shll
add
sbb
sbb
and
push
ror
push
xchg
cmp
or
pop
mov
decb
jne
jmp
repnz
jmp
push
out
fnstcw
mov
out
xor
jne
dec
push
and
push
clc
into
xor
dec
cli
adc
out
sub
inc
mov
or
cltd
mov
das
pop
xor
sub
add
cmp
sub
jl
aas
jge
push
or
dec
cld
or
pop
adc
inc
or
or
mov
push
aas
inc
imul
or
sub
adc
cmpl
mov
push
iret
scas
and
lods
test
lea
and
daa
mov
sbb
jge
add
in
mov
loopne
pop
leave
repnz
xchg
icebp
divb
add
nop
in
jb
or
ret
ret
sahf
add
push
pop
pop
mov
and
add
inc
mov
adc
push
and
jmp
lock
add
test
inc
sbb
jnp
test
lcall
and
push
mov
fisubrs
movb
test
mov
add
xchg
js
and
cmp
jbe
iret
sbb
push
mov
mov
sub
in
dec
movsb
adc
repnz
addl
cmp
pop
and
push
repnz
push
or
push
dec
jle
xlat
jle
adc
add
xor
jmp
push
inc
push
jle
sub
mov
sbb
xor
lahf
shrb
mov
adcl
sbb
push
divl
xchg
out
pop
jne
push
rcll
pop
mov
mov
add
std
pop
sbb
insl
mov
daa
hlt
insb
pop
iret
sbb
push
xor
or
pop
iret
outsb
psubd
inc
mov
jge
push
push
sub
jne
xchg
push
in
mov
and
cmpsb
es
jns
inc
xchg
imul
inc
je
jl
in
sub
add
and
push
sarb
addl
push
pop
movsb
rcrb
xor
xor
mov
jg
pop
int3
inc
addb
mov
in
xor
xor
popf
call
inc
cltd
movsb
hlt
mov
call
xor
sarb
push
pop
mov
inc
adc
dec
sbbb
movzwl
or
int3
test
lret
lods
in
je
cmp
cmpsl
xor
mov
mov
mov
mov
sub
push
mov
xor
test
dec
shlb
lcall
mov
xchg
iret
in
jo
xchg
lret
mov
into
xor
dec
inc
adc
cmpsb
adc
popa
mov
or
shll
lret
pop
add
sbb
lret
sbb
xchg
arpl
push
push
pop
add
pop
xchg
pushf
xchg
ja
rorb
mov
cmp
mov
adcl
mov
in
push
push
inc
pushf
add
insb
jne
jp
mov
adc
and
sbb
cmpw
lret
enter
cmp
xor
mov
add
jns
adc
or
test
jmp
int3
add
push
pop
std
and
xor
ret
jne
inc
and
in
jb
jns,pn
cmp
lcall
add
sbb
sub
sahf
lock
aaa
xchg
dec
xor
sbb
sub
mov
dec
xchg
test
call
sahf
ljmp
sub
lret
and
push
jns
scas
dec
leave
add
loopne
lahf
call
push
pusha
lahf
xor
inc
push
mov
in
fwait
incl
fimuls
cld
popf
mov
rorb
std
push
test
xor
lahf
mov
enter
shr
inc
enter
mov
sahf
pop
in
fwait
add
hlt
xchg
lahf
push
lods
test
shrb
xchg
fwait
mov
or
or
call
in
inc
scas
in
add
mov
scas
inc
xchg
les
shlb
loop
in
pop
enter
in
and
les
test
popa
xchg
ret
fwait
mov
inc
test
xchg
inc
cmp
mov
sysret
mov
push
into
cmc
or
xor
nop
xchg
cli
lahf
add
test
cmpsb
push
fidivrs
cmpsl
jno
repz
xchg
xlat
xor
mov
in
daa
cmp
fsubrl
jbe
push
pop
lea
mov
inc
inc
js
lret
mov
pop
ret
mov
iret
or
ret
loope
dec
js
xchg
in
and
outsb
repnz
mov
adc
mov
sbb
adc
sbb
or
mov
push
lods
clc
aaa
or
inc
test
push
les
sub
arpl
dec
xor
add
inc
imul
push
adc
push
pop
mov
lds
adc
xor
std
test
cmp
jne
push
clc
jbe
push
cmp
and
xor
or
nop
sub
or
adc
push
xor
or
test
sbb
rcrl
fwait
xor
add
xchg
cltd
lea
or
add
mov
push
add
add
in
mov
dec
add
mov
push
pusha
addb
add
and
add
or
or
iret
call
pop
inc
add
inc
pop
mov
std
lods
add
jne
add
hlt
ja
add
or
push
pop
inc
stos
push
ds
sub
dec
pop
cli
add
cmp
pop
inc
aaa
adc
adc
movsl
aam
das
loopne
xchg
rorb
int3
add
lret
aam
push
or
shll
enter
sub
lds
cltd
cmp
sub
js
mov
imul
cld
jno
lcall
mov
xor
aad
push
xor
pop
pushl
jbe
mov
je
mov
jp
pop
sbb
add
imul
int
mov
ljmp
enter
dec
je
push
or
inc
fmul
xor
mov
outsl
pop
fcomp
pop
loopne
fldl
or
fldl
or
xor
jno
push
mov
pop
icebp
cmpsl
sub
sti
insl
fcmovnu
ja
leave
pop
jmp
jo
fnsave
dec
push
dec
or
stos
mov
pop
dec
xlat
das
dec
dec
sti
scas
pop
pop
xchg
dec
je
add
and
sbb
sti
flds
insl
xchg
push
lcall
jmp
sbb
popf
subl
cmp
pop
mov
pop
sub
sbb
fs
stc
fwait
add
andb
lea
mov
add
jno
mov
lret
xchg
adc
adc
repnz
push
add
in
jl
push
adc
lock
clc
lock
inc
fdivrl
fstl
push
rcll
cmp
lock
pop
aaa
adc
jo
jne
das
and
inc
lock
arpl
mov
out
sahf
out
iret
pop
fildl
jns
cmp
lock
andl
add
andl
fnstcw
sub
adc
in
and
lock
mov
xchg
xor
mov
test
cmovg
mov
jle
push
jle
clc
or
mull
pop
push
inc
or
mov
jmp
push
push
xchg
jmp
inc
jbe
and
add
fisttpll
mov
push
jmp
push
push
repnz
clc
sti
add
fmull
loop
jp
or
hlt
sbb
and
xor
push
push
adcl
cmp
cmp
inc
mov
pusha
adc
dec
mov
and
push
mov
mov
or
out
lods
outsb
and
push
pushf
gs
xor
fs
lahf
fwait
test
cltd
out
xor
mov
and
sub
adc
fs
jne
mov
xchg
xchg
insl
add
aas
mov
aam
js
xor
mov
clc
test
test
lock
call
xchg
rcl
clc
and
lods
std
mov
testb
push
pop
pop
mov
pop
mov
or
xor
or
add
incb
or
or
mov
sbb
xchg
aam
and
jne
dec
sbb
jg
adc
pop
sar
lea
ret
and
mov
or
or
cmp
xchg
mov
stc
mov
loopne
mov
testb
in
int
popf
jl
or
add
mov
push
pop
ja
ss
es
stos
jae
es
dec
adc
jnp
std
xor
pop
lods
jbe
xchg
bnd
clc
adc
rorb
cmp
daa
and
daa
es
ja
dec
push
and
or
add
xchg
xor
add
cld
adc
mov
cmp
mov
stc
or
xor
fs
xor
in
and
mov
fldt
dec
je
imul
inc
movsb
cmp
lods
sbbl
push
cmp
sub
pop
aad
shll
adc
and
ss
cmpb
data16
adcb
add
inc
xor
cmpsb
inc
scas
aad
push
imul
rclb
mov
das
xor
lods
cmp
push
mov
add
push
leave
mov
fwait
ds
pop
sub
mov
mov
jg
xchg
or
arpl
fs
push
or
iret
outsl
or
add
lock
rcrl
es
push
xor
xchg
mov
or
popf
adcb
xchg
cmp
sbb
setge
std
mov
xchg
dec
inc
imul
testl
cwtl
add
add
add
cmpsl
cmp
xchg
shll
mov
into
jno
adc
mov
sbb
jmp
mov
mov
mov
push
pop
mov
arpl
jns
xlat
loopne
push
daa
mov
sahf
add
outsb
jecxz
push
inc
cld
loop
das
in
hlt
std
sub
addr16
xlat
pop
enter
dec
shr
mov
sub
je
add
jno
or
test
pop
mov
sbb
ja
add
push
and
xchg
loope
dec
cltd
or
cmp
std
mov
sti
jecxz
dec
sahf
pushf
mov
inc
subb
insl
and
sbb
lock
aaa
sbbl
fdivr
adc
adc
ret
or
lds
xor
pusha
add
mov
mov
ret
dec
mov
gs
jns
testl
call
bnd
add
jno
jns
mov
mov
mov
subb
xor
daa
stos
cmpsb
pop
xchg
jnp
lret
dec
daa
nop
std
lds
sub
cli
mov
xchg
push
cs
imul
mov
push
lods
mov
pop
orb
cmpl
pop
popf
data16
icebp
push
mov
xchg
call
std
mov
jb
leave
clc
mov
std
int
lods
out
imul
jno
sahf
mov
test
jae
dec
psrlq
dec
xor
jo
lret
adc
mov
inc
inc
adc
aad
dec
clc
cmp
cmpsl
adc
cmp
mov
mov
call
arpl
inc
lock
xor
stc
imul
test
mov
std
shlb
imul
pop
scas
out
in
mov
popa
dec
push
fstpl
lret
fdivrp
or
dec
xchg
es
cs
hlt
cmp
stos
mov
sub
cmp
cmc
test
pop
dec
jp
push
gs
movsb
cmc
rcrl
adc
lret
lock
xor
push
mov
test
sbb
jmp
jo
push
mov
sbb
jge
int3
mov
cmp
addr16
jmp
rolb
lcall
jbe
mov
jae
mov
subl
sub
fbstp
in
lds
stos
bound
mov
movsb
movsl
pop
pop
call
ds
cmp
pop
inc
push
inc
lret
jne
cmp
xchg
sbb
pop
addr16
or
das
jae
in
std
das
push
dec
lret
mov
jl
je
xchg
xchg
nop
and
std
jo
jb
std
std
loope
push
push
or
xor
xchg
aaa
fsubrl
add
jle
stos
sub
lods
and
add
cmp
repz
ss
mov
mov
movsb
test
add
mov
add
add
cmp
mov
loopne
cmp
jae
addr16
sbb
clc
jg
cmp
and
inc
loopne
mov
add
in
add
sub
add
mov
jo
pushf
inc
rolb
sbb
imul
push
mov
sub
cmovs
lock
xor
pop
pop
add
xor
xor
iret
pop
inc
dec
mov
add
mov
pop
mov
push
pop
mov
shll
rcl
xchg
test
adc
and
mov
roll
sahf
adc
xchg
jo
inc
mov
push
dec
lods
xor
push
mov
xor
push
cltd
inc
cmpsb
mov
xchg
inc
mov
xchg
xchg
dec
sub
mov
xchg
outsl
jns
xchg
test
lods
jae
jb
mov
mov
mov
fs
dec
daa
mov
xor
push
sbb
daa
xchg
lret
cmc
loope
xor
test
fwait
mov
pop
sbb
xchg
xchg
mov
rep
add
mov
mov
mov
adc
pop
inc
lods
push
or
pushf
push
lea
and
repz
inc
push
nop
lret
mov
pushf
in
fwait
xchg
addr16
mov
icebp
inc
addl
cmpl
fs
push
mov
inc
dec
movsb
imul
dec
inc
xor
dec
es
pop
mov
add
adc
aas
dec
add
adc
nop
inc
or
leave
dec
adc
pop
add
jb
xchg
pushf
pushf
nop
nop
adc
push
xor
leave
lods
lods
lods
lret
les
enter
cmpb
je
mov
je
mov
adc
dec
movntps
aam
popf
xor
rolb
dec
enter
out
ds
popa
mov
shlb
enter
leave
mov
iret
or
pop
add
or
nop
mov
pop
jne
mov
inc
mov
jp
dec
test
enter
xchg
add
add
or
imul
add
add
test
iret
pop
inc
xor
in
mov
stos
es
cmp
add
jne
push
or
fiadds
dec
pop
and
aaa
leave
xor
and
test
test
sahf
into
inc
dec
out
test
jmp
or
inc
int3
inc
mov
nop
push
and
pop
or
mov
nop
les
mov
jno
test
xlat
dec
dec
add
xor
xor
cmp
je
cmpsl
mov
sbb
pop
mov
xor
insb
sub
add
and
jle
popa
add
mov
and
mov
sti
stos
clc
push
mov
shll
fucomip
stos
bound
or
imul
or
cs
dec
dec
and
lods
or
into
and
jmp
sub
mov
movl
ret
xor
adc
cmp
gs
inc
adc
pushl
jecxz
or
inc
adc
inc
jns
sbb
and
sahf
xchg
lock
or
sub
fbld
loop
xor
cmp
fimuls
push
add
je
hlt
daa
clc
inc
push
dec
mov
addl
jae
testl
cmpsb
jmp
cmp
xor
repz
inc
mov
pop
inc
jp
inc
cs
push
add
mul
add
push
mov
xor
in
push
and
dec
inc
jno
lds
cmpsl
ret
push
lock
fs
test
inc
push
pop
push
push
iret
jg
inc
shr
rcr
shr
rcr
or
jne
div
pop
dec
adc
out
mov
inc
inc
mul
pop
jb
cmp
or
cmp
fdivs
sub
sbb
adc
ret
or
fimull
fmul
inc
rcll
mov
mov
mov
inc
add
ja
mov
test
or
pop
jmp
fstps
mov
clc
mov
movb
ret
inc
int3
inc
bound
addl
sub
out
inc
add
in
push
and
sbb
sahf
jecxz
rclb
lsl
sbb
or
and
push
push
inc
sbb
and
push
inc
or
xor
push
xor
add
aas
sarl
mov
pop
loop
pop
ljmp
lock
adc
out
int3
and
lods
cmp
sbb
xchg
wbinvd
pop
mov
inc
pop
dec
sbb
xchg
dec
add
popf
dec
jl
lock
jne
lea
adc
push
jl
mov
inc
and
mov
mov
sub
loop
sub
test
sub
jne
sbb
add
lea
xchg
adc
fldcw
adc
pusha
les
mov
enter
rcll
push
pop
mov
xor
and
inc
daa
fs
jl
pop
and
or
cmp
sbb
subb
mov
adc
and
dec
dec
cmc
scas
insl
cmp
mov
jp
js
stc
int3
aaa
add
mov
xchg
push
out
lods
dec
mov
xor
push
xchg
xor
pop
mov
mov
add
add
add
imul
cmp
add
mov
cmp
push
fdivl
xchg
inc
push
outsl
sub
loope
lea
push
lea
xor
push
in
shl
sahf
cmpb
or
pop
sbb
clc
push
pusha
push
test
lock
mov
inc
xor
xchg
fs
mov
loopne
test
mov
dec
inc
cmp
rcll
js
pop
lahf
aas
cmp
fdivl
mov
adc
sub
or
mov
repz
push
leave
pop
cmc
lea
and
pusha
adc
test
inc
pushf
sub
pop
jb
ret
jge
mov
lds
mov
loopne
adc
call
or
js
fdivrp
iret
push
negb
or
push
ret
shl
push
adc
popa
dec
loope
or
lret
movsb
lock
inc
stc
xor
sub
mov
ss
dec
xor
or
in
and
cmpsl
and
ja
push
sub
push
out
cmp
je
jns
mov
ss
and
or
out
aam
xchg
pop
addr16
outsb
popa
add
in
std
cld
pop
test
add
sahf
and
scas
xchg
push
dec
inc
and
pop
insb
ret
or
sbb
pop
je
inc
add
xor
and
push
mov
insb
clc
or
or
setl
loope
mov
dec
hlt
xchg
mov
sub
jle
popf
or
mov
sbb
loope
dec
sbb
ljmp
jb
inc
fisttps
aad
ja
pop
push
roll
int
xor
shrl
inc
jmp
jne
add
bound
sub
lods
inc
xor
push
lods
mov
jno
push
mov
sub
or
mov
or
jb
inc
fcmovnu
xchg
loopne
cmp
or
popf
lahf
or
dec
add
jne
inc
test
aas
or
lret
cs
daa
push
xor
or
push
rcll
inc
and
xor
in
inc
sub
mov
jbe
sbb
pop
jl
dec
test
push
push
lret
movb
js
imul
ja
mov
xchg
out
imul
ret
inc
add
in
add
mov
mov
int
dec
cwtl
adc
inc
test
jo
inc
cmp
add
sub
xchg
dec
dec
pusha
sbb
cmp
data16
int
dec
aas
adc
or
mov
or
and
ja
lds
and
cmp
xor
scas
inc
add
and
sarl
call
cmp
push
lock
addl
sti
pop
cmp
cmp
xchg
test
cmp
lret
push
sbbb
popl
push
cmp
inc
fs
lock
cmp
xorb
pusha
mov
sub
out
fwait
dec
mov
inc
lahf
adcb
cmp
lret
rclb
icebp
imul
adc
xor
and
and
cmpsl
add
call
cmp
cltd
or
add
push
xor
stos
xchg
ljmp
dec
repnz
mov
or
xchg
bound
jne
loopne
fs
iret
xchg
mov
jg
pusha
pushl
mov
int
insb
or
xchg
bound
fstpt
sub
sbb
jmp
scas
mov
mov
or
push
or
push
xchg
cli
fdivrl
jns
push
inc
lret
dec
sbb
pop
push
in
push
call
or
or
scas
mov
or
je
dec
mov
sarl
inc
pusha
jne,pn
sbb
inc
mov
and
fwait
sub
adc
adc
and
mov
mov
xchg
or
adc
fildl
ja
push
mov
sbb
push
push
xor
add
insb
jl
jo
jle
add
adc
mov
xor
push
adc
fs
mov
and
repnz
add
cmpsb
mov
sub
cld
sub
jnp
das
les
mov
inc
data16
xor
dec
pop
addl
sub
imul
push
je
shll
jne
mov
js
and
cmp
or
ja
bound
and
cmp
clc
mov
xchg
test
loopne
adc
imul
mov
sbb
sbb
or
and
dec
dec
xchg
push
ret
and
jo
imul
daa
or
inc
cmp
pop
inc
pop
test
and
cmc
sbb
mov
mov
mov
cmp
jbe
or
movsb
inc
dec
pop
push
jge
push
flds
popf
loopne
lods
mov
mov
push
jmp
popa
into
cmpb
pop
lcall
push
movsb
pop
lea
xor
shlb
cmp
add
jnp
test
aaa
and
in
daa
or
xchg
dec
add
lods
in
add
stc
push
dec
push
out
sbb
bnd
add
add
outsb
push
mov
add
adc
fdivs
int
push
adc
mov
inc
and
cmp
sub
rorb
mov
sahf
add
jb
push
mov
mov
adc
sub
inc
mov
pop
xchg
lods
notl
xor
push
push
popf
test
dec
inc
or
xchg
add
inc
incl
ret
sub
fcomps
ja
cmp
sbb
repz
jecxz
rol
dec
adc
incl
pop
shr
sbb
pop
je
pop
imul
mov
and
and
push
and
sbb
mov
mov
dec
stc
add
cmovl
xchg
xchg
inc
or
dec
sub
mov
sar
cmp
dec
xor
inc
mov
xchg
add
into
inc
add
xor
jle
mov
rcl
pop
jle
popf
inc
add
adc
stos
or
dec
nop
sbb
cwtl
jbe
xor
cmp
rorb
push
ror
adc
mov
jmp
mov
inc
and
cwtl
js
sub
je
or
lock
lds
inc
sbb
js
jo
jae
push
push
mov
mov
out
push
dec
addb
ss
lds
pop
add
add
outsl
jge
push
push
orl
mov
and
mov
cltd
xchg
xlat
js
loope
and
and
add
jo
lret
jl
sub
fs
mov
mov
cmp
inc
inc
or
jne
repnz
adc
call
sar
add
gs
nop
adc
dec
arpl
mov
sub
pop
jp
and
push
add
push
sub
adc
call
lcall
jbe
inc
addb
xor
jb
or
out
ds
sti
or
sub
out
xchg
shlb
int
pop
adc
rcrb
aam
fdivs
fdivs
clc
mov
push
pusha
bound
xchg
push
pop
push
dec
push
or
dec
add
mov
or
pop
jmp
add
rep
cmpsl
orb
or
or
push
and
or
cmp
inc
mov
outsl
add
jge
mov
or
pop
mov
push
shlb
sahf
pop
xchg
jle
sub
mov
aam
adc
xchg
pop
mov
sbb
dec
loopne
rorl
addl
rorl
in
dec
andb
and
push
cmp
daa
adc
test
mov
mov
cmp
or
xchg
roll
or
cmp
add
dec
lods
or
aam
pusha
insb
mov
xor
decl
push
sar
and
shl
add
fistl
pusha
inc
add
fs
and
filds
test
fmul
lcall
and
push
add
xchg
sub
shl
xorl
repz
or
orb
lock
addl
ret
dec
jns
movsb
jae
shl
pusha
pop
rorl
das
inc
in
push
aaa
xor
ds
xchg
int
aad
add
sub
xchg
stos
add
or
jns
insb
jo
aaa
and
test
mov
movsl
cmpsl
shrl
loope
jo
adc
xor
and
xchg
fdivrs
mov
xor
call
push
clc
not
mov
xlat
cs
xor
xchg
daa
insl
and
lock
shlb
rorl
push
fcomp
addr16
stos
mov
test
adc
jbe
pop
push
loopne
or
xor
not
push
rcll
or
mov
add
enter
pop
mov
add
cs
pop
xchg
adcl
cmp
pop
rolb
fwait
adc
push
xor
sub
mov
out
rclb
movsl
push
jmp
adc
and
inc
cmpsl
adcl
add
dec
inc
xchg
or
ficoml
dec
mov
mov
inc
adc
sub
nop
inc
xor
pop
push
loop
jo
lret
sub
sbb
loop
mov
dec
and
add
sub
lock
jge
hlt
rep
ss
push
imul
or
lock
or
jp
adc
adc
arpl
xchg
sahf
or
sbb
mov
xchg
pop
xor
pop
pushf
xor
arpl
mov
icebp
and
mov
adcl
ljmp
and
push
mov
cmpsb
lock
fs
decb
out
cmpsl
jns
push
cmpsb
test
scas
cmp
mov
pop
lock
pushl
add
stc
faddl
stos
push
push
jae
adc
sbb
loopne
and
cmc
inc
mov
std
and
cmp
movl
cs
push
push
stc
cs
stc
xor
xor
jl
push
mov
ja
test
or
or
sbbl
add
loop
cmpsb
scas
mov
jle
or
adc
push
in
outsl
push
push
dec
adc
push
and
xor
push
pop
iret
out
outsl
inc
or
jbe
jle
pushf
rclb
outsl
ja
mov
jecxz
xchg
sbb
cmp
or
mov
xor
mov
and
cmpsl
add
or
jb
push
dec
test
into
and
or
adc
icebp
test
outsl
dec
sub
ja
cli
andl
add
sub
xor
cmpsb
mov
adc
lock
in
aad
mov
add
or
jle
adc
pop
lds
mov
and
or
or
imul
sbb
adc
ficompl
pop
sarb
push
dec
mov
test
aam
hlt
push
xor
cmpsb
lock
cli
addb
push
inc
or
push
adc
pop
jno
xchg
and
adc
clc
lock
pop
or
faddl
cltd
mov
jb
push
aam
inc
leave
or
inc
add
loopne
pop
xlat
insl
xchg
cmp
pop
xchg
inc
in
fmull
xchg
lock
movsl
xor
fcmovnu
fsubrs
and
pop
dec
mov
or
and
jl
loopne
push
mov
pusha
cmp
and
cmp
pop
mov
nop
jl
js
xor
hlt
push
push
clc
mov
jmp
push
xor
and
mov
or
mov
cmp
outsb
dec
fnstcw
pushl
cmp
dec
add
jmp
adc
or
adc
lods
inc
cs
out
pop
sub
mov
mov
imul
testb
sbb
adc
add
sub
data16
sbb
sub
mov
jge
adc
push
push
movsl
push
sarb
int3
xchg
sarb
call
jne
int
add
mov
jmp
adc
insl
or
jae
lods
push
mov
add
or
sbb
cmpsb
sarb
lods
fdivrl
xchg
push
xchg
fsubrs
sarb
rorl
cmpsb
add
test
aaa
sbb
mov
enter
push
adc
rorb
sbb
inc
enter
dec
pop
imul
cwtl
and
jmp
adc
inc
jmp
xorb
dec
hlt
pop
dec
jbe
jne
imul
add
outsb
sbb
push
cmp
sub
test
mov
fmull
cmp
and
fadds
jb
pop
adc
mov
mov
js
mov
nop
mov
adc
test
cltd
cmp
mov
idivb
xor
out
mulb
and
sbb
jo
ja
pop
mov
mov
leave
mov
xchg
or
ret
or
imul
add
movl
sbb
jns
and
repz
test
mov
add
push
or
aas
ficoms
add
adc
xor
fstps
fdivr
mov
je
testb
je
cmp
fidivs
ljmp
cmp
pop
or
cmp
enter
push
sub
jnp
cmp
and
dec
sub
or
dec
test
add
jg
add
mov
mov
xchg
mov
xchg
jno
jne
sbb
jle
cmp
jl
gs
mov
loop
xchg
add
add
mov
fs
sub
mov
mov
lea
stos
push
pushl
in
cld
xchg
or
lea
adc
or
mov
loop
jmp
inc
lock
in
inc
mov
imul
and
mov
push
or
jne
inc
sbb
jecxz
sbb
cmp
popf
or
sub
sarb
add
dec
dec
inc
sub
jae
mov
sbb
add
je
and
mov
jg
fildll
or
mov
inc
sbb
test
add
add
push
jl
push
add
loopne
and
add
add
ret
dec
push
outsl
mov
pusha
cmpsb
aad
jle
and
pushf
sbb
jo
jle
jp
add
in
push
xor
push
adc
sbb
in
nop
fsub
or
js
rcrb
in
xor
pop
fbld
pop
jl
add
imul
push
sub
mov
leave
xchg
addl
or
ret
xor
fneni(8087
insb
cmp
fmuls
aas
xchg
dec
ja
fldcw
xchg
adc
loop
int3
add
dec
dec
ret
jbe
ljmp
mov
mov
shlb
mov
loope
fdivs
aaa
inc
inc
mov
pusha
push
clc
cmpsl
cwtl
or
pop
pop
in
or
outsl
mov
adc
pop
xor
cwtl
push
cmp
sub
flds
rclb
add
inc
or
sbb
je
push
pop
add
inc
lock
fwait
sarb
dec
rolb
jbe
sahf
push
enter
sub
jl
nop
in
adc
mov
push
xor
and
xor
cld
or
aam
rclb
stos
call
cmpl
inc
push
pop
cmp
movsl
and
movsb
push
jne
xor
mov
ret
pop
push
cmpb
inc
jecxz
test
pop
xor
aaa
add
push
in
xchg
xor
sahf
lret
push
or
dec
rclb
cmp
or
sub
and
mov
mov
push
or
cld
push
adc
nop
lcall
sub
xor
jae
lock
repnz
pop
loope
sbb
stos
adc
jecxz
ret
push
mov
dec
scas
mov
je
addr16
aam
push
cmp
sbb
cmpl
popf
outsl
sbbb
dec
jl
push
jmp
cmp
xor
push
sbb
je
xchg
je
mov
xchg
sbb
jmp
and
nop
imul
clc
adc
testb
xor
enter
dec
adc
push
jg
inc
in
and
and
mov
pusha
xor
fidivs
push
jae
adc
popa
push
and
push
leave
out
mov
loop
add
and
ja
fcoms
adcb
or
sbb
cmp
inc
xor
adc
sbb
stc
out
faddl
clc
subb
call
test
adc
aaa
xchg
and
icebp
enter
jno
cli
inc
cs
arpl
mov
cltd
sub
leave
pop
adc
pop
icebp
mov
mov
jb
scas
filds
fmuls
sub
mov
inc
and
and
mov
add
sub
push
ss
cld
ret
pop
inc
mulb
adc
pusha
adc
jae
push
cmp
jl
mov
inc
add
adc
pop
dec
insl
sub
or
jge
imul
clc
push
aaa
adc
mov
xchg
into
push
into
call
mov
jb
add
sub
or
inc
inc
inc
inc
add
xlat
push
add
mov
add
xorl
jbe
adc
mov
push
rclw
ds
mov
add
mov
adc
or
dec
cmp
xor
pop
cwtl
rorb
mov
pop
pusha
adc
add
ss
xchg
xlat
jns
jne
mov
and
in
shrl
sbb
mov
arpl
pop
daa
jne
adc
add
aad
dec
sub
jle
xchg
lock
mov
or
xor
inc
sbb
and
sub
inc
mov
clc
add
or
loope
push
or
aam
mov
jecxz
test
jle
add
test
mov
daa
xchg
dec
inc
pop
rcll
ss
or
inc
es
pop
lock
jg
das
hlt
mov
and
outsb
inc
jle
aam
adc
or
les
or
cmpsl
and
pusha
jbe
add
test
sbb
decl
xchg
insl
pop
xchg
adc
orl
call
lret
pop
hlt
add
js
sub
sbb
lock
mov
test
imul
dec
and
daa
mov
fmull
scas
negb
std
jb
ret
out
push
faddp
add
test
or
push
adc
cmp
hlt
cmp
xchg
push
ljmp
mov
push
push
dec
or
imul
push
lahf
add
out
jbe
inc
ljmp
mov
push
aam
scas
orl
sbbb
add
or
or
lret
mov
mov
mov
cmp
nop
adc
xlat
je
cmp
jecxz
jo
and
cmp
jb
testb
sbb
ds
inc
add
mov
add
pop
jbe
or
lock
test
pop
je
icebp
fbstp
js
cmpl
sub
pop
adc
daa
mov
addb
push
or
push
in
push
pop
push
flds
call
imull
jmp
test
cmp
jno
push
push
xchg
push
push
insl
cld
mov
push
shrb
fstpl
pop
jmp
add
add
loopne
call
pop
pop
shrl
or
insb
or
nop
jno
notl
push
xchg
inc
insb
loope
fdivr
pop
xchg
dec
mov
lock
and
sub
sbb
je
xchg
cli
adc
push
fstps
lea
lea
or
roll
aam
xor
mov
push
sbb
mov
popl
nop
stc
push
pop
nop
testb
mov
push
xor
movb
mov
push
lret
pusha
cmp
addr16
out
dec
inc
mov
push
lcall
sub
or
xchg
mul
push
mov
call
xor
mov
pop
nop
cmp
ljmp
push
inc
cmp
xor
out
pop
cld
lock
push
pop
jp
insl
or
pusha
movsb
pusha
xor
nop
cmp
push
push
loope
ss
out
or
fldt
in
sbb
sbb
xchg
xchg
and
sub
test
cmp
xchg
ss
inc
cmovs
daa
daa
daa
dec
push
push
pop
leave
leave
leave
add
leave
leave
leave
leave
push
pusha
enter
mov
cltd
movsb
cmp
mov
xchg
cwtl
fs
dec
es
mov
cltd
test
sub
test
dec
cmpsl
sub
add
push
imul
or
and
mov
jl
push
mov
or
movsb
dec
dec
call
inc
lcall
movsb
pusha
sbb
clc
and
and
fwait
or
sbb
mov
pop
push
adc
xchg
repnz
push
jo
add
xor
cmp
clc
adc
add
dec
jne
out
inc
cmp
or
nop
sbb
push
or
inc
jmp
es
or
pop
out
orb
popa
mov
xor
jb
sbb
fwait
jo
push
push
push
dec
add
subb
jp
push
cmp
push
aam
repnz
or
js
gs
dec
std
daa
dec
pop
mov
aas
test
pop
mov
iret
pop
iret
or
and
inc
mov
test
sub
loopne
fsub
pop
inc
in
mov
sbb
cmp
rcrl
stc
fs
je
sub
add
popa
mov
scas
sahf
ret
aad
nop
rcrb
dec
scas
sbb
nop
sti
in
subl
lea
push
jle
xor
push
popf
imul
es
mov
or
mov
push
inc
jp
adc
mov
cmp
outsb
cltd
aam
pop
push
sbb
add
dec
pop
je
push
pushf
pop
inc
inc
fwait
dec
out
inc
push
jno
enter
fs
mov
jo
mov
data16
dec
test
adc
inc
sbb
stos
mov
stos
add
fs
mov
fdivrp
add
and
cmpsb
movb
cmc
mov
mov
pop
and
mov
idivl
and
mov
outsb
adc
adc
ret
or
jp
jl,pt
jle
les
or
sub
dec
adc
pop
pop
push
adc
xorb
imul
loopne
test
add
ja
mov
andb
pop
hlt
or
fcoms
enter
std
call
bound
int3
inc
das
bound
mov
pop
mov
loop
jno
jl
cmp
pop
sti
insl
insl
jb
push
mov
push
mov
jmp
enter
inc
popa
lea
xor
aad
push
lods
pop
mov
loope
cwtl
or
cmpl
sbb
notb
pop
cmc
jecxz
adc
push
xchg
sbb
ss
fwait
mov
push
lret
ja
fisubs
test
add
mov
add
pop
cld
pop
and
jl
shlb
cmp
adcl
daa
movsl
test
int
xor
loope
pop
lock
push
mov
push
lea
push
and
out
sar
outsb
dec
mov
add
sar
mov
or
or
loop
sti
add
pusha
sbb
loope
movsb
imull
mov
iret
xchg
or
or
lods
popa
rclb
flds
popf
add
mov
inc
sbb
mov
les
dec
ljmp
adc
outsl
inc
pushl
mov
jns
movsb
ficomps
xchg
dec
rclb
repnz
int
push
sahf
pop
popf
pop
addl
pop
mov
test
sbb
mov
loop
push
addr16
mov
jbe
jmp
cmp
in
lods
mov
notl
movsb
call
push
hlt
mov
jle
jo
sbb
mov
imul
cmp
add
cmp
cmp
loope
fsubs
push
xchg
test
ret
xchg
or
adc
sbb
inc
inc
aas
adc
lea
push
add
dec
jo
fimull
mov
cmp
pop
pusha
fcoms
push
inc
mov
push
xchg
and
jns
jg
xor
sarl
cmp
test
cmpl
fldenv
pop
out
lods
push
or
push
add
loopne
inc
mov
jmp
xor
cmp
test
mov
shlb
sbb
js
xchg
add
add
inc
dec
out
sub
jmp
inc
icebp
and
mov
je
rorb
ds
pusha
push
je
lcall
inc
and
cmp
sbb
jnp
cwtl
fisttps
cmp
bound
ret
and
adc
cmp
out
in
push
sysenter
sbb
dec
add
xchg
sbbb
int3
mov
pop
adc
clc
clc
sahf
cmp
push
xchg
outsb
ja
sub
sub
jne
sahf
dec
and
cmp
mov
scas
pushl
adc
cli
or
inc
popa
das
fimuls
mov
adc
mov
sub
mov
sub
loop
stos
push
and
inc
sarb
call
mov
sub
cwtl
cmp
jmp
push
daa
or
pushl
clc
push
mov
sbb
gs
movsl
dec
add
lds
add
xchg
scas
in
mov
lods
push
orl
fwait
sar
or
inc
inc
sbb
or
dec
cmpl
add
inc
faddl
jl
mov
dec
dec
stc
pop
pusha
mull
rclb
adc
into
fs
dec
lock
push
xchg
sub
or
push
addb
test
mov
shrb
xchg
jmp
ss
or
jmp
mov
std
jno
inc
dec
pusha
inc
rcl
or
rcr
mov
xor
add
push
jo
lret
jmp
or
popa
aad
pop
and
jns
xchg
pop
or
mov
xorb
sub
push
push
cltd
sub
mov
fdivrs
jne
ljmp
pusha
cmp
insb
sub
jne
divl
fidivrs
fdiv
or
xor
mov
inc
cmpb
js
jb
xchg
and
sbb
js
add
cmp
pop
xor
and
out
in
js
sbb
add
sbbl
sbb
je
aaa
or
orl
test
xchg
sbb
mov
sub
and
leave
or
mov
mov
sbb
data16
cmp
cli
xor
pop
adc
popa
add
jmp
test
xchg
pusha
sub
or
scas
lahf
or
sbb
dec
pop
dec
push
mov
pusha
adc
sub
std
insl
pop
jo
sbb
push
pop
mov
mov
jge
mov
into
mov
inc
or
jae
addr16
push
and
mov
xchg
nop
inc
sbb
out
dec
pushf
inc
scas
shrb
or
and
ljmp
pop
inc
xor
ret
inc
pop
or
push
or
xor
nop
hlt
insb
js
sbb
call
cmpb
aaa
xor
cmp
sub
or
push
divb
push
push
sbb
into
sub
pop
jne
popa
sbb
orl
movsb
or
fcompl
pop
notl
daa
mov
orl
inc
out
and
arpl
lods
es
repz
pop
cmp
jnp
js
lods
jg
rclb
shlb
adc
jbe
jge
jge
addr16
pop
mov
push
adc
stos
add
pop
sbb
in
adc
push
jle
adc
test
leave
or
inc
sbb
pop
adc
and
adcb
add
jecxz
push
pop
lods
pop
cld
inc
lcall
movb
mov
inc
and
jg
pop
rol
push
mov
add
push
rcrb
push
lock
push
and
add
sub
lcall
lock
adc
insb
js
pusha
loop
mov
mov
jmp
mov
jmp
push
and
lds
fnsave
cmp
shlb
mov
inc
add
js
pop
sbb
mov
xor
add
or
shll
mov
enter
icebp
pop
clc
add
adc
mov
and
mov
push
mov
cltd
repnz
push
outsb
fildll
push
push
cmp
sahf
and
dec
lock
sub
icebp
xor
adc
push
jecxz
push
mov
sbb
jle
mov
pop
nop
nop
sahf
dec
pop
dec
xchg
ret
push
pavgb
pop
mov
jb
cmp
cli
sbbb
xor
sbb
xchg
lcall
sbb
sub
leave
cmp
rol
push
mov
or
fistpl
cmp
mov
sub
shlb
imul
mov
insl
add
sti
das
adc
sub
enter
adc
nop
xor
push
sbb
cwtl
mov
mov
das
mov
dec
pop
mov
push
sbb
adc
das
push
loopne
inc
movsl
xchg
je
dec
cmp
das
pop
daa
ret
sbb
mov
add
or
sub
pop
push
sbb
inc
jne
orl
inc
jbe
mov
mov
popl
mov
cmp
hlt
or
dec
jnp
repnz
das
adc
xlat
sub
inc
and
jb
into
jl
out
jle
xchg
mov
mov
out
jmp
or
or
pop
icebp
in
pop
or
test
je
gs
mov
xor
mov
add
jle
popw
and
movsb
jge
shlb
mov
fwait
adc
and
push
std
add
mov
and
mov
jbe
test
dec
or
ror
stos
mov
adc
xchg
rcll
push
sub
fldenv
push
dec
add
int
sbb
pop
add
lea
push
mov
rolb
test
pushf
pop
mov
xor
dec
push
popf
pushf
pop
sub
je
push
popf
ds
cmp
add
add
stos
inc
outsl
call
push
data16
pop
imull
clc
adc
je
mov
adc
adc
jne
sub
inc
cs
mov
add
lretw
fistl
or
lock
js
push
or
dec
mov
cmpsl
dec
lahf
notl
scas
pushf
push
mov
xchg
test
or
je
and
add
or
sbb
repnz
adc
pushf
and
shll
dec
xor
adc
cmp
in
or
add
and
shr
and
pop
cmp
jmp
inc
fmul
add
dec
test
inc
cmp
sahf
lock
test
adc
or
add
xor
xlat
inc
mov
xor
je
sbb
push
sahf
mov
and
or
sub
inc
jmp
push
verw
clc
mov
jmp
sbb
testl
and
mov
and
xor
cmp
aaa
jecxz
jge
popa
cwtl
out
add
or
mov
jnp
or
pusha
xor
or
or
sbb
loope
flds
clc
mov
pop
adc
pusha
mov
pusha
loope
pop
sub
shll
dec
and
mov
xchg
adc
fnstsw
pusha
ljmp
mov
pop
je
push
lea
roll
cmpsl
repnz
hlt
es
adc
sti
add
and
scas
cmp
out
test
fisttps
pop
js
mov
outsl
scas
xor
dec
je
add
dec
jne
orl
lods
stos
sbb
mov
fsubrs
pop
testl
mov
xchg
inc
jne
xorb
in
imul
inc
add
adc
add
inc
flds
fldcw
pusha
stos
mov
pop
push
shrb
xor
stos
mov
lea
inc
insl
call
adc
add
bound
pop
xchg
pop
sub
push
push
icebp
mov
or
adcb
xor
jo
sti
hlt
cs
or
or
mov
aaa
sbb
gs
cmc
call
testb
cli
add
les
pop
jbe
lea
pop
sub
jmp
sub
dec
jae
daa
push
or
psubusw
rcll
dec
int3
adc
pop
testb
repz
mov
adc
jnp
dec
pushf
clc
notb
fstpl
adc
pop
clc
loop
mov
jge
ffree
repz
scas
add
fmull
faddl
or
mov
testb
pop
lret
mov
inc
es
les
push
ss
insl
in
sbb
jp
dec
in
sbb
lock
stos
cmp
fcompl
push
push
sahf
jmp
jo
and
pop
movsb
or
sbbb
in
aam
bnd
loopne
xchg
and
mov
cmc
add
inc
and
push
pop
inc
rorb
sub
clc
in
js
mov
push
add
pop
outsb
mov
add
and
mov
adc
arpl
pop
enter
out
dec
push
int
jmp
mov
ret
mov
add
mov
dec
faddl
popa
inc
cmp
je
aam
jl
icebp
add
dec
mov
push
jmp
adc
jnp
xor
fistps
hlt
adc
push
push
inc
and
cld
subb
or
adc
inc
sbb
pop
xor
xor
sbb
xchg
rcrl
inc
das
in
sti
or
jno
mov
dec
inc
and
xorl
or
or
mov
ret
mov
or
mov
xor
insl
jo
imulb
out
gs
mov
add
orb
add
nop
inc
or
pushl
lea
sbb
or
and
sub
push
mov
mov
push
mov
mov
out
pushf
or
fnstsw
adc
jns
add
xor
add
sbb
mov
test
arpl
push
adc
adc
jmp
push
cs
sub
call
or
sahf
push
fdivl
jle
rolb
jne
mov
gs
shrl
xchg
mov
enter
jmp
roll
bound
popf
sbb
inc
ret
dec
repnz
pop
fadds
into
or
test
jne
cmp
cwtl
adc
mov
ret
imul
pop
or
mov
aad
icebp
sbb
inc
mov
mov
gs
or
fwait
cmpsb
lods
enter
push
or
push
out
and
sbb
mov
push
pop
push
in
flds
or
push
mov
loopne
add
fmul
fdivl
sub
shr
loop
pop
fwait
popa
in
sub
dec
aad
cmp
fisttpll
adc
sarb
and
inc
dec
mov
int3
add
xchg
mov
jnp
fldcw
push
push
mov
add
hlt
or
sub
fldl
clc
sahf
adc
sbb
adc
inc
adc
and
pop
test
mov
icebp
jb
mov
dec
out
xchg
jo
push
adc
mov
je
sbb
and
ldmxcsr
mov
and
es
mov
je
mov
and
xchg
mov
jbe
in
out
add
pop
or
aam
add
pusha
mov
dec
jmp
or
jmp
add
call
cmp
xchg
movsb
shlb
shlb
or
pusha
dec
adc
lock
mov
push
mov
sub
data16
and
adc
push
inc
and
sub
push
adc
dec
adc
addb
push
and
jo
xor
das
or
dec
or
inc
loopne
mov
sti
jbe
lods
lods
sbbl
add
pop
adc
enter
or
add
loope
mov
dec
add
dec
xchg
test
adc
pop
push
push
pop
pop
xor
cmp
aad
das
lods
hlt
arpl
sub
in
rorb
push
rclb
xchg
add
inc
inc
adc
add
ret
and
dec
pop
xchg
les
sub
xchg
stos
dec
or
gs
popf
or
insl
and
loopne
sbb
test
jbe
sub
cmpb
adc
sub
add
push
daa
cs
mov
pop
test
jne
or
jl
ss
sbb
xchg
xor
or
fbld
and
stos
aam
ret
in
xor
in
lods
mov
and
add
mov
pop
and
dec
jns
dec
xchg
shlb
mov
pop
popa
daa
icebp
lds
lret
loopne
test
std
add
imul
not
test
movsl
mov
push
sub
repz
jle
mov
pop
and
mov
out
mov
dec
or
inc
insb
sub
test
and
ss
dec
mov
add
nop
or
dec
aaa
inc
and
and
cli
sbb
iret
xor
adc
shlb
mov
add
dec
mov
sub
jns
cld
mov
pop
and
jge
xchg
xchg
xchg
cmpsb
aam
loopne
pop
xorl
add
in
push
or
sti
cmp
dec
dec
stos
inc
pop
sbb
ret
in
lar
sahf
xor
dec
xor
cmp
rorl
call
lahf
subl
out
and
push
jge
inc
jmp
not
les
xor
cmp
pop
ds
push
or
jne
shl
test
mov
mov
jl
inc
shl
sbb
test
mov
jl
ss
fs
aam
adc
mov
test
popa
pop
pushw
lds
dec
mov
lds
adc
push
or
leave
adc
or
cmp
mov
sub
sub
cmp
comiss
push
fs
push
pop
xchg
ret
xor
pop
add
and
iret
dec
jns
inc
lock
add
dec
mov
test
xor
pushl
jae
cmp
out
pop
cmp
imul
mov
shll
jo
jo
jl
pop
andl
add
movsb
dec
xor
lea
and
mov
or
add
sub
add
xor
dec
aas
sbb
sub
shl
add
xchg
adc
dec
cld
cmpsl
loopne
add
stc
inc
push
in
adc
fimull
fwait
jp
and
inc
sbb
xchg
add
sbb
sub
add
cld
sub
sbb
in
xchg
cmp
and
fs
add
add
dec
push
cs
or
sub
pusha
add
add
cmpb
or
imul
jl
imul
add
mov
add
push
in
xor
push
adc
cmpsb
imul
test
mov
pushf
stc
xchg
sbb
inc
fimull
pop
push
filds
nop
and
ret
lods
mov
pop
sub
or
in
jne
inc
jmp
lock
sub
or
xchg
add
adc
xor
enter
cmp
ja
adc
mov
frstor
mov
add
mov
add
jmp
enter
sbb
bound
jbe
jns
scas
enter
and
sbb
mov
push
lock
jmp
cmpsl
mov
test
scas
adc
lods
pusha
sub
orb
and
mov
or
cmp
jle
adc
push
xor
xchg
add
gs
dec
push
push
roll
jbe
lods
xor
pushf
push
cmp
add
push
jmp
lcall
sbb
mov
xchg
es
pushf
mov
pop
jge
pop
in
fdivp
sbb
mov
add
xchg
les
stos
dec
jae
imul
sbb
aad
cmp
jmp
subb
and
outsb
mov
push
xchg
jae
sti
sbb
pop
push
sub
mov
or
orl
fstl
push
and
daa
adc
enter
shlb
sub
mov
shll
je
mov
push
mov
mov
mov
adc
fadd
incl
add
inc
testl
hlt
inc
xor
fdivp
pop
push
dec
addl
jmp
cld
in
cli
and
or
imul
mov
stc
push
adc
lahf
mov
jecxz
add
int3
push
adc
push
cwtl
pop
mov
sbb
push
in
and
push
jne
and
push
cmp
adc
cwtl
jge
neg
add
mov
aaa
dec
sbb
test
stos
out
mov
cmp
adc
nop
sbb
pop
or
sub
loopne
ret
in
xchg
mov
jge
jle
lock
xor
adc
push
cmp
add
mov
test
mov
mov
sarl
push
add
dec
inc
mov
sbbl
jbe
mov
add
mov
dec
mov
cmpb
insl
adc
clc
xchg
loope
mov
push
xor
mov
lock
and
and
adc
nop
fidivrl
mov
iret
cld
mov
std
mov
or
call
mov
pop
mov
ds
scas
out
movb
testl
or
pop
enter
les
xchg
int
jnp
into
dec
pop
inc
into
jne
inc
or
lods
mov
and
xor
hlt
int3
add
shr
xchg
jne
mov
jp
xorl
or
mov
pop
push
dec
pop
mov
xor
rcrl
movsb
push
pop
bound
scas
sbb
cld
cmp
mov
lock
mov
test
negb
subl
lcall
xor
sub
stc
jg
xchg
xor
add
mov
dec
pop
pop
test
js
mov
dec
add
inc
aam
gs
lods
add
lret
push
add
or
shr
loop
rcll
and
pop
mov
jg
or
push
cld
sub
pop
jne
ja
add
notb
mov
dec
call
shll
shl
shr
or
mov
sahf
dec
or
xor
mov
pop
push
les
mov
push
ja
aam
loope
test
or
ss
mov
jge
cmp
add
ficoml
negb
pop
adc
inc
dec
in
fiadds
push
call
push
jmp
fidivl
push
jb
xor
mov
push
add
mov
sbb
lea
stos
or
xor
push
adc
lods
lret
into
jmp
scas
jne
imul
jae
add
inc
int
sbb
movsb
int3
or
cmp
int3
dec
add
xchg
clc
cmp
das
sub
add
negb
sarb
add
adc
push
nop
cltd
and
ret
or
aad
inc
mov
inc
and
xchg
jg
sbb
mov
mov
cli
lcall
or
xor
sahf
out
outsl
pop
fxch
jge
lods
aam
mov
inc
inc
push
cmc
mov
dec
mov
inc
addr16
lods
arpl
inc
test
pop
jne
cmp
add
push
inc
movsb
inc
scas
inc
mov
mov
insb
bound
pusha
mov
rorl
sahf
pop
cmp
mov
sub
dec
movsb
or
or
stos
push
xchg
xchg
adc
inc
cs
or
ss
cmp
je
or
call
cld
aas
out
mov
dec
cmpb
je
mov
cmp
pop
jne
dec
adc
stos
sti
mov
inc
inc
mov
out
add
loopne
fldz
call
lret
shlb
testl
jae
sbb
clc
xor
push
cmp
fidivl
mov
ljmp
adc
add
cmc
dec
and
repnz
inc
push
sbb
movsl
mov
jno
leave
mov
xchg
add
mov
testb
sub
mov
mov
jge
test
shrb
fdivs
or
popa
jo
jle
jl
push
xchg
dec
dec
sbb
dec
test
dec
cmp
mov
shll
je
setg
sub
cld
clc
add
mov
mov
or
ljmp
jne
movb
cmp
push
add
add
cmp
ficoml
xlat
xchg
jecxz
xor
mov
es
add
loop
lock
call
jecxz
pop
lret
jmp
sub
add
add
imul
push
rorl
or
pop
and
cs
dec
jns
mov
es
xor
pop
idiv
xor
jne
dec
in
or
add
testb
fiadds
lcall
mov
push
addr16
push
or
inc
or
sub
dec
or
xor
andl
cld
xor
mov
sub
adc
or
cwtl
jmp
inc
outsl
push
ret
jbe
mov
clc
dec
adc
sub
mov
aam
sub
adc
lahf
lock
lods
mov
dec
push
sub
lods
enter
mov
call
and
dec
add
pop
data16
xor
mov
mov
pop
jo
pop
xlat
add
jecxz
mov
sbb
jmp
enter
xor
inc
adc
adc
testl
pop
xchg
fstps
call
ljmp
aaa
or
fcoml
rolb
push
pop
orl
lret
xorb
xchg
mov
dec
jecxz
fistpl
outsb
adc
push
add
sar
lea
scas
loopne
imul
enter
pop
sbb
push
lds
sbb
sub
inc
add
ret
mov
push
mov
and
js
xchg
and
inc
cltd
dec
inc
xor
leave
and
add
cmpsb
jle
popf
popa
movb
jo
gs
je
cmp
dec
fwait
mov
dec
sbb
neg
sbb
sti
pop
cld
shl
mov
jg
ret
daa
xor
or
jne
pop
mov
sahf
ret
jmp
out
jo
fwait
mov
test
movb
inc
sub
xchg
mov
or
xor
sub
mov
mov
sbb
gs
adc
sbb
test
movswl
sbb
mov
arpl
lods
or
inc
bound
pop
lock
add
mov
add
dec
movzwl
and
jle
mov
ss
jl
jmp
clc
mov
or
pushl
xchg
stc
inc
add
dec
jmp
addr16
xchg
clc
sub
adc
cmp
xchg
xchg
sbb
js
lock
rol
call
push
stos
add
and
insb
icebp
add
mov
fists
into
xor
imul
js
dec
and
lcall
sarl
jg
jb
pop
push
fucomip
push
sub
or
fidivrl
rorl
pop
lock
gs
scas
sahf
cmpsb
icebp
shll
mov
add
lock
cs
mov
push
jg
in
lret
lods
jb
fs
iret
xchg
imul
dec
pop
or
or
pusha
and
sbb
xor
and
mov
inc
inc
jae
stc
mov
xor
pop
push
es
adc
fwait
sub
arpl
and
ret
shl
loopne
jb
sbb
or
and
lock
sub
gs
mov
add
mov
push
lock
mov
inc
sub
sarb
mov
jne
add
mov
shrb
data16
popa
push
mov
push
inc
sbb
or
fmuls
out
into
mov
and
adc
pop
nop
test
inc
or
mov
roll
in
fs
jne
cmp
scas
xor
das
and
jbe
push
dec
test
adc
inc
add
cmp
mov
mov
enter
decb
push
push
insl
push
jmp
insl
cmp
push
roll
sub
fisubrs
mov
mov
pop
jle
addb
pop
incb
push
loop
mov
mov
sbb
jns
ds
and
cmpl
push
aaa
mov
or
pop
data16
fcoml
inc
popa
je
in
pop
sbb
inc
je
dec
cs
xor
lods
in
sub
jmp
dec
xchg
pop
add
call
or
mov
dec
lret
inc
inc
lods
outsb
xchg
repz
inc
mov
das
int
adc
call
jne
fmull
insl
push
mov
in
pop
clc
fstps
or
sub
arpl
pop
push
and
add
push
stos
mov
and
nop
xor
xor
mov
fmull
icebp
mov
cmp
dec
loope
incb
push
inc
rcrb
call
cmp
and
mov
dec
popa
rcrb
je
sbb
cmp
inc
and
aaa
push
push
dec
push
iret
ss
rol
lret
dec
loop
sub
add
hlt
jns
push
ret
and
insb
sub
and
add
adc
pop
cmp
movsl
pop
sbb
inc
or
lahf
mov
mov
push
push
inc
cmpsl
fs
popf
add
push
lods
pop
mov
aaa
pop
cli
cmpsl
add
add
mov
aaa
sub
push
fildl
andb
cmp
push
mov
int
addr16
cs
xchg
xor
cmp
sub
mov
fisttps
mov
cmpl
xchg
lret
or
push
cmp
or
dec
push
mov
mov
call
aam
scas
sbb
imul
sbb
movsb
push
shrb
popa
inc
mov
mov
ret
xor
dec
sbb
sub
or
jnp
je
mov
jge
sbb
add
pusha
hlt
lock
sbb
jno
push
dec
or
bound
mov
je
lahf
int
lock
mov
pop
dec
out
pop
cmp
sbb
lea
mov
lret
nop
mov
jno
je
sbb
jg
xorb
sbb
rorb
push
push
jmp
xor
mov
or
jmp
testb
roll
ljmp
or
add
sbb
in
int
jae
sbb
sbb
shll
cmp
add
mov
push
popf
mov
lahf
inc
xor
adc
ss
or
sbbb
jne
mov
mov
orl
push
pop
insl
cmpsl
mov
or
sbb
xor
sbb
aad
push
imul
mov
insl
sbb
lds
and
sarb
sar
inc
cmp
add
jecxz
push
push
add
and
addr16
loopne
jne
arpl
mov
cwtl
push
jp
hlt
mov
jne
dec
push
or
xorb
mov
loope
dec
rcll
jecxz
push
xchg
jae
dec
xchg
adc
movl
mov
xlat
sbb
cmp
jge
not
and
dec
adc
shrb
mov
jb
pand
jl
inc
add
add
mov
jl
dec
fiadds
lahf
stc
arpl
and
xor
cmp
inc
daa
sbb
inc
jmp
pop
jb
inc
jmp
ss
add
data16
push
and
popa
ret
outsb
xor
stc
inc
inc
test
fnstenv
je
sub
jecxz
sbb
push
push
cmp
dec
pop
and
rorb
outsb
test
and
sarb
mov
jmp
push
dec
aam
in
cld
jo
and
xlat
mov
ja
addl
adc
insl
mov
pop
testl
shl
jl
dec
mov
mov
and
dec
sub
daa
dec
loope
mov
push
sub
mov
adc
pop
mov
inc
sbb
xor
movsb
cmp
dec
xchg
sbb
rcrl
xchg
test
adc
sub
dec
rorb
sub
ljmp
ja
pop
cwtl
loopne
mov
ret
xor
xchg
or
aaa
fcmovu
inc
sub
or
cmp
adc
add
sbb
inc
and
or
push
int
loope
pop
incl
aaa
xchg
sub
inc
xchg
push
sbb
ret
or
and
mov
xchg
sub
adc
adc
fs
jo
push
adc
push
lock
out
pop
xor
jmp
sub
sbb
and
les
or
and
sbb
cs
pop
leave
adc
and
insl
sbb
adc
cmp
sbb
lds
rclb
testb
or
ret
cmp
jg
mov
dec
cmp
lea
mov
lahf
or
xor
shr
add
or
mov
sub
pop
cld
mov
shr
or
mov
add
add
or
bound
push
sti
adc
stos
mov
cmp
or
mov
add
or
add
int3
pop
or
push
xchg
clc
inc
fs
mov
xchg
sub
lret
add
or
into
dec
testl
cli
mov
add
stos
or
mov
inc
add
push
xor
mov
and
mov
ret
push
dec
test
iret
or
dec
cmp
out
inc
imul
mov
sub
and
pusha
dec
in
jmp
cmp
ficoms
cwtl
add
adc
iret
mov
lock
andl
sbbb
test
leavew
mov
add
pushl
stos
idivb
sbb
sub
or
test
test
mov
sbb
lret
je
dec
call
pusha
push
or
and
mov
xchg
movsb
ja
in
adc
push
adc
icebp
push
sub
adc
jne
mov
cmp
andb
add
test
xchg
jno
pop
call
fs
cld
sub
jne
shrb
call
ss
adc
mov
adc
xchg
sub
sbb
cli
xchg
jp
and
mov
inc
dec
sbb
mov
jbe
fldl
mov
jle
shrb
cld
inc
mov
orb
xchg
les
or
or
lret
xorb
inc
xor
ljmp
push
dec
cmp
lock
jl
cmpb
jl
xor
jo
movsl
mov
stos
mov
mov
xchg
adc
push
xlat
push
scas
cwtl
or
shrl
or
inc
push
push
mov
push
push
pop
ljmp
iret
dec
mov
or
inc
inc
adc
fnstcw
pop
lods
push
and
adc
or
test
jmp
mov
adc
mov
call
mov
dec
add
and
clc
loopne
or
or
scas
push
mov
pop
xchg
add
or
mov
or
test
je
mov
xchg
push
scas
or
xchg
and
ds
pop
pop
mov
rclb
jne
mov
movsl
xor
pop
outsb
rorb
inc
nop
add
loope
test
aam
xchg
xchg
sbb
or
and
push
in
or
test
pop
mov
ret
cld
pop
std
xor
jge
inc
inc
div
fdiv
fiaddl
adc
adc
ss
adc
xor
adc
sbb
mov
sbb
push
push
jmp
and
fnstenv
fs
dec
movsl
icebp
sbb
adc
xchg
adc
sbb
xchg
int3
adc
push
jbe
jnp
jne
pop
pop
pop
das
or
adc
lods
rcl
ljmp
dec
and
shr
test
dec
sub
cmc
adc
jmp
mov
cld
je
jmp
shlb
and
pop
ljmp
dec
xor
jmp
add
and
outsl
cmp
add
sbb
inc
adc
pop
movsb
aam
es
cmp
imul
out
mov
je
push
or
into
jbe
addl
jns
aas
mov
cmp
sub
dec
lods
dec
sbb
add
push
dec
dec
jg
or
adc
das
mov
dec
es
adc
sahf
into
arpl
leave
adc
popa
push
pop
and
lods
xchg
jmp
xchg
stos
gs
mov
or
movb
int3
push
cld
outsb
xor
and
dec
pushl
dec
jbe
or
ss
jg
xor
push
adc
add
mov
lret
mov
jbe
testb
incl
sub
or
je
pop
decb
or
mov
mov
mov
into
es
mov
je
jg
sbb
add
out
push
cmp
dec
cli
out
ja
add
cmp
adc
cmp
jne
lea
xor
adc
enter
xor
idivl
pop
adc
add
jp
daa
stos
push
rolb
ja
je
adc
mov
pop
jmp
movsl
sbb
pop
pop
test
push
inc
es
scas
sbb
jg
insl
rorl
ret
jmp
test
scas
mov
je
iret
push
push
pop
call
mov
add
mov
pop
dec
mov
add
xlat
mov
dec
cmp
push
leave
push
bnd
pop
and
std
adc
cmp
adc
adc
ja
arpl
aad
dec
lcall
lock
mov
scas
dec
test
xlat
lret
add
rorb
cmp
sub
pop
movsl
dec
dec
push
sub
xchg
xor
cmpb
or
mov
adc
add
mov
in
or
cltd
add
inc
push
dec
mov
sbb
xor
mov
jle
mov
pop
jle
sahf
out
jg
mov
push
rcl
rcl
jns
out
aad
xlat
fcomp
adc
fstpt
mov
sbb
mov
mov
add
outsb
into
shlw
sub
xor
in
outsl
add
mov
or
adc
fistl
push
inc
push
add
fisttpl
aas
add
out
ret
outsb
or
ljmp
in
cmpb
push
icebp
adc
cmp
insb
iret
out
jne
or
push
push
add
or
adc
adc
add
dec
pop
push
fisttps
rcrb
leave
adc
or
std
jg
push
sbb
lea
sar
inc
sbb
mov
fadds
mov
aam
subb
pusha
loop
sbb
out
jl
sub
sub
mov
lret
lock
and
or
adc
mov
push
test
lea
inc
les
decl
rcll
decb
dec
push
adc
add
hlt
mov
ljmp
testl
into
and
lea
gs
or
sbb
imul
andl
jge
les
ja
add
adc
dec
mov
inc
pushf
test
mov
in
ljmp
loopne
inc
or
inc
or
movsl
mov
inc
hlt
mov
jne
inc
jl
popa
shll
rolb
push
mov
and
or
fld
dec
xchg
mov
adc
dec
push
add
movsl
aaa
pop
enter
sub
cmp
pop
outsl
popa
pop
sahf
shll
cmpsb
jns
addl
mov
jge
jl
cmpsb
imul
and
rorb
loope
add
jle
and
jne
jno
fs
shll
add
outsl
fcomps
mov
cmp
mov
or
push
push
push
lret
int
addb
inc
inc
imul
inc
daa
mov
inc
lods
ss
shrl
insl
adc
pop
in
out
xchg
mov
and
inc
jecxz
lret
dec
jns
test
lock
repnz
repz
push
push
cli
cli
inc
cli
testb
enter
or
ljmp
call
mov
fcoml
add
adc
inc
ret
ret
or
sub
sub
lret
leave
mov
mov
mov
rolb
xor
dec
dec
push
dec
lcall
lock
sbb
cmp
dec
push
repnz
shlw
loop
out
out
shrb
mov
jb
jb
daa
cmpl
inc
hlt
adc
sbb
inc
adc
sub
dec
insl
inc
shlb
fdivrs
aam
fs
ss
inc
test
dec
ss
test
sbb
sub
jl
mov
xor
call
or
push
cmp
cld
inc
sub
lea
fcmovu
mov
push
lcall
lods
rolb
mov
mov
cltd
add
mov
clc
sbb
roll
sbb
negb
and
enter
test
stc
xchg
lret
jge
or
add
jge
es
sbb
sbb
and
movsb
adc
cmp
jne
repnz
and
xchg
mov
xor
mov
adc
popf
mov
and
in
scas
pop
sub
mov
or
add
inc
add
add
sbb
cmp
call
jb
pop
jle
out
adc
or
dec
cmpsl
sub
nop
pop
shr
dec
cmp
sub
fisttpl
mov
push
shll
test
jne
sbb
neg
and
pop
jle
inc
imul
or
loopne
loopnew
xchg
pop
add
out
or
sahf
and
inc
mov
xor
in
out
jle
addl
std
cmpsl
lcall
rorb
mov
push
sub
push
add
sub
into
les
add
ds
enter
ss
mov
test
clc
js
inc
mov
mov
pusha
push
mov
sub
shlb
add
add
xchg
negl
sahf
jne
lock
mov
add
in
loope
or
into
or
mov
inc
ljmp
jmp
dec
nop
cmp
lahf
nop
dec
mov
dec
cmp
jge
adcb
stos
fdivrl
bound
movb
dec
cmp
out
mov
add
add
fadds
dec
lcall
lar
mov
push
insl
jp
jne
mov
jb
int
mov
push
inc
adc
dec
and
add
push
add
es
movsl
jge
in
add
mov
add
add
imul
add
fisubrs
xchg
mov
mov
mov
vorps
push
add
inc
mov
or
fisttps
jmp
mov
xchg
push
or
add
or
pop
pop
scas
push
je
add
cmp
add
imul
add
and
sub
ret
outsb
xchg
adc
xor
push
fimuls
ss
test
lret
push
sahf
orl
pop
cmp
xor
into
pusha
scas
add
rolb
xor
sar
pop
and
pop
pop
scas
mov
in
add
ret
jne
or
or
jns
mov
mov
cld
rcl
push
pop
jae
or
or
dec
movsl
test
add
add
mov
add
lahf
add
mov
shlb
pop
pop
out
dec
cmpsb
adc
xlat
dec
pop
adc
sbb
ja
jnp
and
and
and
mov
test
ret
pop
sbb
cmp
xchg
add
lea
xorl
cld
cld
and
sub
xorb
or
add
push
inc
stos
jg
add
into
and
addl
jne
loopne
aam
out
pusha
dec
cld
or
push
mov
pop
test
int
xor
adc
or
adc
jbe
iret
nopl
jle
pusha
mov
xchg
out
jnp
sbb
inc
jg
into
test
into
mov
pop
adc
jg
or
jecxz
nop
pop
cwtl
pop
mov
cmpb
shlb
pop
add
sbb
les
push
push
adc
lock
in
pop
lcall
xchg
push
add
shl
xor
or
add
add
and
add
add
xor
test
into
and
je
and
mov
inc
sub
es
sub
jmp
jb
sub
popa
push
ret
in
ret
testb
sbb
push
scas
insl
and
or
sbbb
and
jo
adc
sub
jo
jle
cs
pop
fmul
cmp
xchg
xchg
xchg
mov
adc
push
cmp
cmp
mov
sarb
je
add
sbb
aaa
ficoms
mov
sbb
xlat
jle
and
daa
or
add
and
adc
jge
call
push
cmp
jl
fcoml
mov
jno
icebp
xor
icebp
insb
int
lea
pushw
mov
out
and
dec
sbb
xor
sahf
add
push
adc
icebp
cltd
orb
adc
sub
jmp
mov
hlt
mov
fcmovne
rclb
add
push
out
je
and
adc
cld
pop
outsl
enter
cmp
jbe
inc
inc
dec
mov
jmp
pop
sbb
enter
rolb
imul
std
and
mov
cmp
mov
jbe
into
add
push
iret
xor
in
aaa
push
or
push
aam
jle
cmp
aad
movsl
cmovno
faddl
add
out
mov
nop
sbb
or
test
rclb
mov
imul
test
jp
cmp
and
jmp
scas
iret
mov
add
mov
jle
or
imul
cmpsl
test
xchg
cld
test
je
test
mov
xor
mov
aam
cli
cmp
and
push
dec
push
mov
push
loopne
and
mov
in
or
out
jge
pusha
adc
sbb
xchg
mov
mov
test
dec
jge
or
shlb
rclb
fcoml
hlt
fwait
ret
fdiv
int3
dec
cmp
sbb
je
stos
dec
clc
lcall
adc
hlt
add
in
mov
xor
cmp
inc
push
imul
push
imul
shrb
jne
cmp
popa
jl
and
xor
adc
lods
push
inc
and
push
movsb
sub
xchg
test
dec
add
sbb
push
add
bound
xor
aas
inc
addr16
cltd
or
sub
or
add
lds
jmp
push
push
xlat
mov
inc
sub
push
push
pop
pushf
sbb
jbe
fsts
sub
inc
test
ljmp
and
sbbb
mov
add
shrb
jne
push
inc
pop
loopne
or
lods
movsb
push
push
outsb
xlat
mov
push
xchg
pop
sbb
and
fists
mov
fisubrl
inc
stos
push
je
cld
test
mov
xor
add
outsb
xchg
pop
mov
and
jl
push
cmp
cmp
xchg
rolb
gs
add
out
push
sbb
clc
mov
or
push
jl
fisubl
mov
cmp
imul
dec
rcl
mov
mov
sbb
cwtl
fs
pop
test
sbb
mov
sahf
xor
push
nop
call
mov
pop
dec
push
mov
inc
sbb
push
ss
or
int3
loope
lock
push
adc
pop
rcrb
insl
daa
repnz
pop
nop
out
mov
push
and
out
sbb
movsb
loopne
jmp
dec
loop
es
fisttps
mov
outsl
push
sub
xor
push
js
mov
pop
sub
mov
cmp
xor
mov
rorb
js
sbb
adc
sar
push
sbb
fcompl
pop
xchg
push
mov
push
pop
cli
sub
add
xorb
push
lcall
dec
hlt
lcall
push
and
mov
sub
in
orl
shrb
subl
stc
push
add
sub
jbe
pop
popf
xchg
pop
testb
inc
mov
sbb
inc
inc
ds
adc
or
lock
push
xchg
movsb
lock
pusha
mov
add
adc
and
jg
push
ret
push
pop
xlat
xor
jns
or
add
dec
sarb
add
inc
add
pop
fimuls
test
cli
int
mov
or
add
shlb
xor
sub
pop
inc
inc
or
dec
aaa
gs
sbb
mov
push
jg
bt
jmp
push
fs
sbb
pop
aaa
adc
sbbb
out
cvttps2pi
mov
movsl
push
dec
inc
pop
aas
or
enter
pop
cs
mov
loope
rcr
fbstp
jnp
push
filds
push
xchg
std
out
jecxz
fsubrp
test
jns
fstps
xor
aam
pop
shr
data16
adc
fmuls
adc
test
rcr
pop
cmpsb
pop
sbb
imul
in
scas
adc
lea
and
push
or
cmp
or
dec
in
jmp
das
loope
outsb
push
inc
scas
inc
cltd
cmovs
sbb
inc
mov
ret
fdivl
fs
dec
pop
mov
mov
sbb
gs
sbb
xchg
or
mov
xchg
dec
jb
in
aad
sbb
mov
fsub
cmpsb
fsubs
mulb
ja
enter
dec
insl
xor
cwtl
or
xchg
pusha
inc
les
rcrb
add
lea
or
shlb
sub
imul
or
insb
jne
xor
adc
jnp
insb
in
andb
imul
push
xor
sbb
je
fs
and
int3
and
aam
mov
std
pusha
sub
repz
or
leave
inc
mov
pusha
jge
lahf
arpl
add
add
fs
ss
pushf
pop
cld
in
popf
or
sbb
add
inc
jle
nop
stos
lods
push
aas
pushf
in
adc
xchg
inc
hlt
dec
jg
ss
mov
adc
lret
int
jne
cmp
add
inc
cs
lret
insl
inc
adc
pop
lock
pusha
lods
dec
pop
lock
std
xor
push
nop
inc
sbb
rclb
sbb
jo
push
mov
push
movsb
pop
or
shl
and
xor
lret
shl
and
inc
fwait
adc
addr16
cmp
add
or
jbe
sbb
sub
mov
adcl
fsubr
lahf
aam
mov
les
pushf
mov
fildll
leave
loope
nop
in
jg
sbb
mov
or
in
movups
aam
pushf
in
insb
movsl
and
shrb
add
insl
icebp
fcoms
add
addb
push
lock
dec
cs
in
in
mov
adc
fs
hlt
add
mov
or
xchg
stos
jne
jns
pushf
nop
xlat
loopne
adcl
mov
in
fldl
push
pop
or
dec
outsb
insl
cmpb
fwait
mov
imul
test
iret
mov
jmp
test
dec
sbb
test
aaa
call
sub
lds
stos
int3
cmp
jno
sub
in
int3
in
fcmovbe
push
in
aam
xchg
dec
enter
rcrb
repnz
sub
ss
add
adc
adc
xchg
dec
es
and
dec
es
xor
es
fs
cmp
inc
dec
fs
dec
fs
int
insb
add
loopne
sti
in
fistpl
inc
add
mov
popa
add
push
cmc
sbb
int3
cmp
loopne
aam
xor
clc
hlt
lds
xchg
cld
cmp
and
and
sbb
or
xchg
bound
fmuls
mov
in
cmp
stos
push
nop
rcll
xchg
in
mov
dec
xchg
inc
je
test
cmp
mov
pop
mov
push
aad
frstor
sub
push
outsl
add
push
movsb
ss
inc
cmp
sbb
mov
pop
mov
cwtl
test
lock
js
sub
lea
cmp
std
clc
call
dec
jbe
and
xchg
dec
ds
pop
sbb
enter
dec
add
rol
push
subb
ds
daa
test
je
add
sub
inc
inc
inc
mov
cmpsl
movsb
subl
in
pop
mov
push
rcl
sbbb
mov
test
inc
call
stos
jp
mov
or
adc
call
cs
addb
dec
call
jns
sub
fsub
push
xlat
pop
and
mov
and
jb
fs
out
dec
repnz
lock
mov
les
popa
movq
fdivs
or
call
in
pop
adc
xchg
xor
nop
mov
loope
nop
ss
and
test
xchg
cli
push
cmp
jns
or
mov
out
cmc
sub
sub
sub
inc
je
sbb
adc
pusha
pushf
shrb
mov
xorl
out
shll
sbb
in
in
ret
xor
adc
mov
lods
dec
pushf
mov
cmpsl
jecxz
adc
cmpsl
push
and
sub
sbb
enter
leave
leave
in
test
lods
mov
leave
leave
leave
leave
mov
leave
leave
leave
enter
insl
adc
push
leave
outsl
adc
and
lds
out
stos
sar
xor
sbb
add
push
adc
mov
pop
xchg
insl
or
sbb
mov
jg
aad
jp
mov
popf
push
mov
int
push
jno
add
insl
mov
stos
sbb
mov
mov
add
xchg
or
or
imul
call
add
push
xchg
xor
xor
lods
int3
xor
adc
inc
adc
arpl
fdivrs
mov
xchg
dec
lcall
pop
shrb
aad
inc
mov
fsubp
mov
std
fisttpll
or
enter
repnz
mov
inc
shlb
pop
and
fwait
loopne
sbb
or
xchg
xchg
test
aas
mov
clc
nop
dec
dec
decl
sub
inc
jno
jmp
pusha
popa
add
jo
mov
jp
cltd
cmp
mov
dec
xchg
movsl
mov
sub
adc
mov
pusha
inc
add
adc
adc
lcall
sbb
jg
xchg
lahf
dec
cmpsb
or
daa
add
push
mov
mov
lea
pop
and
mov
lods
push
jo
dec
adc
cwtl
and
mov
mov
jmp
add
lock
loopne
inc
mov
loopne
push
in
std
cwtl
cwtl
call
jg
cmp
lock
pushf
loopne
add
push
push
cltd
test
test
adc
aam
or
leave
push
and
adc
jle
punpcklbw
call
xchg
icebp
mov
in
add
push
lcall
push
out
aad
hlt
push
pushf
cmp
and
cmp
movsb
cmpl
or
fwait
push
dec
dec
pop
lods
lock
lds
bound
jg
mov
mov
call
in
pop
dec
and
fdivr
pop
or
incl
out
lea
enter
xchg
daa
ficomps
sub
in
inc
stos
lods
aad
lcall
shrl
xchg
shlb
and
or
or
or
enter
and
inc
sbb
test
daa
and
xchg
mov
sbb
call
stos
add
mov
sub
push
xor
sbb
mov
lahf
fwait
or
stos
xchg
aas
shlb
dec
push
xchg
dec
push
mov
cmp
sahf
adc
nop
inc
or
popa
and
addb
lahf
dec
int
fcoms
in
scas
add
mov
or
pop
jge
mov
push
mov
jl
nop
mov
lock
cmpl
aam
add
bound
ja
enter
mov
into
aad
or
xor
or
pop
popf
push
or
jae
pop
dec
pop
mov
pop
lock
rorl
and
clc
mov
add
xor
andl
imul
repz
sarl
pop
pop
adc
add
and
scas
mov
dec
sbb
mov
aam
lock
inc
call
shl
decl
xchg
cmp
dec
mov
test
xchg
xchg
sarb
mov
cwtl
insb
sub
nop
dec
addb
cmpsl
push
shrl
in
data16
roll
rorl
rorb
int
push
adc
fiaddl
es
rol
imul
mov
outsb
shl
into
sub
xor
nop
pop
and
pop
fwait
inc
lcall
bound
mov
push
mov
mov
shlb
pop
enter
xchg
movsb
daa
xchg
pop
call
leave
or
iret
jp
pop
or
sbb
or
mov
xchg
and
imul
add
add
inc
and
test
mov
sub
inc
adc
sbb
pop
out
mov
xchg
fcoms
fbstp
mov
icebp
lea
cmpsb
adc
push
gs
pop
test
lahf
add
addb
test
sbb
dec
jle
and
inc
mov
push
es
in
call
lock
inc
lods
sbb
jmp
insb
adc
xor
fwait
pop
push
and
inc
les
arpl
movsl
jmp
jmp
mov
mov
inc
shlb
loopne
mov
or
sub
int
rcr
loopne
or
mov
and
cwtl
sbb
or
in
scas
fadds
push
test
jne
popf
pop
add
sbb
or
fmuls
stc
cs
push
ret
xor
std
mov
jae
inc
sti
and
jl
movsl
or
sub
stos
sbb
adcb
xchg
inc
pop
in
cmc
insl
rclb
das
add
inc
aam
fmull
mov
sub
xchg
mov
inc
enter
je
mov
repz
mov
mov
incb
add
inc
lods
es
sub
and
out
data16
or
lcall
fbld
fmuls
jne
and
add
scas
cmc
jns
mov
inc
lock
shrb
in
scas
add
add
lahf
sub
pop
push
inc
call
sbb
gs
inc
push
adc
or
pop
xchg
pop
stc
mov
pop
xor
fbld
mov
adc
jns
jl
je
jl
adc
jo
and
lock
mov
jecxz
or
mov
push
pusha
mov
andl
and
inc
push
add
aam
dec
sar
icebp
adc
dec
jg
add
fcoms
cmp
in
js
pop
or
mov
inc
outsb
adc
mov
pop
into
enter
popl
sbb
ss
and
pushf
movsb
adc
aaa
test
fdivl
adc
xchg
mov
dec
int3
dec
push
sub
bound
or
out
in
xor
cmp
call
popa
aas
jle
pusha
push
addl
aas
insb
sub
sarb
scas
mov
xor
pmulhuw
mov
add
xchg
outsl
popl
movsb
outsb
sbb
lahf
and
sbb
mov
mov
dec
add
add
cmp
inc
mov
pop
stos
test
andl
mov
xchg
xchg
push
add
dec
pop
cwtl
inc
or
adc
test
xor
sub
adc
repz
mov
and
mov
push
mov
xor
xchg
test
arpl
lock
enter
fdivs
or
inc
jb
xor
sbb
dec
enter
mov
xchg
test
xchg
test
push
lret
ret
xor
mov
bound
fwait
xor
cmpsl
mov
and
lea
xor
int3
sbb
and
xor
inc
lods
xchg
clc
dec
cvttps2pi
pop
or
dec
push
mov
mov
cmp
adc
lods
lods
adc
adc
les
adc
pushf
es
ja
mov
imul
add
pop
pusha
push
and
movsb
pop
pop
or
das
test
lfs
cmpb
aam
lahf
mov
in
js
mov
repnz
daa
cwtl
mov
or
or
and
ret
sti
dec
stos
or
and
out
jno
dec
pop
jno
int3
pop
mov
pop
mov
movsl
or
mov
xor
adc
addl
in
sbb
pusha
lcall
fs
rcr
inc
icebp
sbb
nop
iret
pusha
out
out
mov
pop
loopne
inc
add
fldt
fcmovnb
push
push
dec
xor
rorb
pusha
mov
test
adc
mov
and
adc
fiadds
fwait
pop
push
mov
sub
mov
test
mov
sidtl
rcrl
pop
xor
arpl
cmp
xor
mov
ret
test
inc
pusha
push
aad
mov
pcmpgtw
jg
mov
jg
dec
dec
xor
int3
adc
cmp
and
aam
sub
les
jno
xchg
mov
and
out
inc
dec
cmpsl
jne
aad
sub
push
loop
inc
xchg
inc
in
movsb
lea
pop
inc
mov
inc
jg
adc
int3
scas
fisttps
mov
or
cmp
test
inc
add
fistl
stos
add
movsl
cmp
je
rcl
pop
lds
lahf
shrb
add
pusha
call
xor
lock
pop
push
cmp
dec
das
mov
in
dec
jb
cmp
inc
jo
in
dec
shlb
lds
jg
xlat
test
cmp
jae
inc
inc
ror
mov
and
pop
lds
inc
js
mov
jne
aad
movl
inc
pop
les
lret
pop
mov
les
inc
push
inc
outsb
cmpl
test
mov
dec
push
je,pn
dec
xor
pusha
call
sbb
fwait
cmp
mov
lea
mov
add
xchg
cmp
inc
sti
rorb
fs
lcall
imul
roll
and
lds
mov
or
arpl
pop
mov
inc
add
inc
movsb
jb
mov
in
enter
mov
loopne
faddl
adc
iret
or
cltd
nop
lret
adc
and
jl
es
mov
mov
shll
cmp
pop
inc
dec
and
add
sbb
adc
mov
pop
les
mov
or
leave
cmp
loopne
fsubr
shl
push
jb
out
fsubr
out
arpl
mov
sub
mov
sbb
and
add
push
or
and
or
nop
in
inc
and
test
lret
mov
call
popl
add
or
lock
mov
popa
xorl
rorb
in
push
aaa
pusha
xor
jmp
cwtl
test
mov
pushf
fldt
jns
cmp
xchg
dec
fwait
js
push
andb
mov
cltd
in
cwtl
pusha
xchg
dec
leave
push
fildl
rclb
adc
enter
adc
incb
sbb
pinsrw
pop
adc
fwait
imul
jecxz
lods
loopne
test
int3
pop
imul
adc
xchg
into
lock
inc
jecxz
shrb
pop
lock
add
enter
add
add
xor
xchg
or
adc
test
out
and
shll
fbstp
outsl
inc
inc
mov
adc
xor
push
lods
fsubrl
push
jns
sub
and
add
fmuls
mov
mov
pop
add
or
pop
test
leave
shrb
add
ja
push
mov
pop
or
adc
sbb
out
inc
in
dec
gs
mov
and
inc
mov
lret
cmpb
xchg
outsl
xchg
add
sub
cmp
xchg
setbe
dec
or
das
fistl
jns
fs
or
or
mov
es
xor
sbb
sub
test
mov
and
je
inc
adc
cmp
mov
mov
testl
pop
mov
jl
push
rolb
adc
and
shr
cltd
movsb
insb
add
call
pop
adc
ror
arpl
cmp
cltd
mov
pusha
inc
or
cmp
sbb
sub
shl
mov
and
mov
jmp
rcr
xchg
hlt
call
xor
mov
or
dec
cmp
and
xor
mov
xor
sbb
in
push
or
loopne
mov
and
rcll
jae
test
and
pop
aam
fsubrs
rorb
fs
aam
or
rcl
mov
adc
cmpxchg
or
outsl
push
push
or
cmp
inc
insl
sub
push
gs
and
sub
fwait
mov
fsubr
pop
and
xlat
inc
repnz
test
inc
mov
popa
lods
fcoms
dec
fsubs
inc
dec
add
test
xchg
lods
adc
fstl
test
cltd
add
adc
addb
fldcw
cmpsb
movsb
test
lock
call
sub
inc
and
daa
lods
xor
es
loopne
popa
adc
mov
push
mov
cwtl
or
add
add
mov
les
fisttps
lods
shlb
test
pop
nop
push
pop
int3
fcmovnb
and
ficompl
ss
jl
insl
pop
insb
cltd
fs
dec
hlt
pop
push
fs
dec
es
dec
add
add
xchg
xor
xchg
movsb
js
pusha
fmul
and
rclb
stos
sbb
add
enter
aad
dec
loopne
xchg
fdivrl
enter
addb
dec
addr16
mov
js
dec
je
and
dec
cwtl
aam
push
aam
xor
adc
dec
xor
sbb
and
adc
mov
je
loopne
jecxz
mov
test
and
mov
loopne
xor
aad
push
xrelease
xchg
cmp
ficomps
test
mov
fisttpll
repz
mov
mov
mov
dec
nop
and
repnz
lds
jg
pushl
push
sbb
sbb
xor
cwtl
ret
cmp
cmpsb
adc
outsl
mov
xchg
inc
jg
test
mov
pop
inc
stc
add
xchg
jg
movsb
push
or
mov
mov
jg
lahf
outsl
loope
adc
loop
mov
or
movsl
jmp
enter
add
xor
enter
add
bound
pop
addb
cltd
int3
leave
mov
mov
or
add
dec
xor
aam
mov
push
nop
lret
popf
lods
test
or
das
loopne
pop
fsubrs
adc
adc
cmp
in
jns
inc
lds
adc
pusha
loope
in
mov
pop
nop
sbb
push
xchg
pop
test
test
out
add
aam
aad
in
sub
mov
into
dec
nop
xor
mov
mov
add
add
stc
lock
in
mov
push
in
cmp
enter
lods
ret
lock
add
add
les
fadds
jne
out
push
or
out
inc
mov
cmp
xchg
mov
fnstsw
sbb
test
lds
mov
mov
mov
lret
hlt
lock
je
jg
and
xor
cld
push
inc
xor
movb
test
dec
jno
xchg
mov
aam
and
push
and
dec
mov
mov
pusha
adc
mov
pop
rcrl
inc
lods
aas
add
sub
sbb
xor
and
adc
scas
xchg
dec
sbb
cli
add
xor
mov
cld
cli
scas
fs
enter
cmp
dec
cmp
and
cmp
add
adc
js
insb
inc
mov
lcall
sti
fwait
ss
inc
and
adc
test
pop
and
sbb
sub
inc
inc
dec
rorl
cs
adc
and
xchg
inc
je
cli
call
mov
mov
adc
sub
dec
xor
adc
dec
cmp
js
pop
cwtl
mov
test
mov
jo
rolb
mov
cltd
add
inc
sub
push
ss
fcomps
sub
loopne
test
xchg
jne
mov
addb
jecxz
faddl
subl
inc
fisttpl
sub
test
xchg
xchg
xchg
push
sbb
or
xchg
push
cmpsb
mov
aas
inc
dec
dec
enter
add
fsubrl
xchg
orl
das
sub
sahf
and
insl
push
repnz
add
xchg
and
fisubrs
mov
lods
sbb
mov
mov
movsb
xchg
sub
std
jle
pop
push
pop
inc
hlt
out
ret
out
ja
pop
adc
add
aaa
lahf
pop
sti
cmp
test
fisubrs
mov
sub
xor
and
enter
out
jno
push
cmpsl
pop
mov
jne
sub
imul
les
andl
inc
or
out
sub
jo
inc
and
push
js
lods
or
mov
dec
adc
jnp
inc
push
shlb
mov
out
bound
sbb
in
mov
pop
adc
sbb
outsl
jnp
pop
cmpb
sahf
out
push
loopne
mov
xor
add
fiaddl
jl
fistpl
nop
fldenv
jnp
add
pop
inc
scas
cmp
addr16
aas
int3
push
outsb
mov
testb
push
outsl
mov
adc
jmp
paddsw
inc
pusha
push
push
clc
add
decl
ljmp
add
fistpl
or
jnp
mov
add
fimull
pop
and
xadd
jnp
leave
or
adc
out
leave
ljmp
cmpb
or
fs
pusha
pop
jg
out
pop
dec
inc
cmp
inc
inc
mov
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
push
push
push
jmp
inc
lret
pop
popa
bound
gs
imul
ljmp
jo
jb
je
jbe
js
jp
xor
xor
sub
daa
cld
jmp
jg
pop
das
mov
rcll
xchg
adc
push
or
cmp
rclb
cmpl
mov
or
push
push
jo
repz
out
js
aaa
faddl
aas
iret
push
push
dec
outsb
je
jb
outsl
arpl
fs
out
test
mov
dec
imul
push
or
insb
xor
cs
adc
popa
dec
mov
popa
insb
popa
je
outsl
outsb
push
shlb
mov
pop
lock
rdpmc
add
pop
in
aad
incl
sub
fistpl
push
sahf
push
and
outsl
jb
js
je
jb
fidivrs
fidivl
jae
cmp
or
add
add
clc
sbb
sbb
add
push
gs
push
or
xor
popa
mov
popa
jb
mov
cmp
dec
push
outsb
dec
xor
xor
ja
adc
cmp
cmp
imul
sahf
dec
and
jns
add
das
das
adc
push
dec
push
inc
inc
gs
insl
loopne
in
into
and
dec
outsl
jbe
dec
arpl
out
push
pop
testb
je
inc
jne
jne
dec
jne
xchg
ffreep
pusha
push
mov
inc
jo
imul
lret
bound
inc
insb
out
jae
adc
xchg
pushf
jae
cmp
ja
sahf
mov
jne
xor
lods
sbb
and
daa
push
scas
clc
sbb
dec
xor
jne
dec
js
push
jne
jae
cmp
ja
pop
dec
inc
mov
popa
das
jo
or
jb
inc
adc
xor
test
or
dec
push
shrb
pop
sbb
mov
cwtl
or
sbb
mov
std
dec
xor
inc
out
and
dec
ljmp
sub
sub
cmp
push
or
adc
pop
xor
inc
cmp
jge
jg
outsb
arpl
mov
cmp
dec
and
push
jecxz
sbb
movl
in
pop
push
inc
insb
jae
cs
fs
mov
inc
out
adc
jo
mov
imul
and
dec
push
push
sbb
outsb
je
or
dec
dec
inc
sbb
insl
xchg
lcall
add
inc
outsb
dec
jg
push
push
jo
imul
insl
pop
inc
inc
mov
je
jo
xchg
sub
jnp
idivb
and
orl
mov
je
or
xorb
inc
popa
int3
mov
iret
and
daa
mov
jne
pop
out
fcmovb
in
xor
and
insl
push
xchg
inc
cs
xor
js
or
dec
rolb
andb
les
out
mov
add
xchg
and
push
rcr
push
or
imul
xor
pop
es
add
mov
je
add
dec
in
ds
leave
sbb
push
loopne
outsl
mov
push
push
or
andl
dec
sbbb
inc
and
das
arpl
cmp
arpl
dec
popa
sub
mov
sti
into
pop
xor
add
inc
xchg
insb
sbb
addl
or
or
push
lcall
mov
or
pop
xor
jo
cmpsl
cmp
push
push
fistps
dec
rcl
push
popf
and
xor
in
fs
xor
hlt
pop
cltd
and
or
add
ror
dec
aaa
ja
adc
insl
push
outsl
outsl
ss
bnd
fs
sub
inc
inc
xchg
in
or
sahf
push
mov
shl
add
das
mov
mov
cwtl
mov
imul
push
or
arpl
cmpsl
mov
cmp
fildll
aaa
xchg
in
jno
in
ljmp
imul
push
pop
scas
loopne
outsb
popa
pop
or
inc
sbb
rclb
add
push
leave
nop
inc
insl
imul
call
push
cmp
in
adc
pusha
xchg
cmp
jmp
push
and
pop
push
cmp
sub
jne
jae
scas
into
push
cmp
pushw
pusha
jo
aaa
addb
sub
call
rolb
data16
lret
inc
sub
pop
sti
mov
dec
or
jo
fstp
lods
pop
and
cmp
cwtl
ja
ds
pop
mov
out
inc
inc
and
dec
cmp
xor
ud0
loopne
iret
sub
jg
xchg
sub
rol
das
lret
jno
icebp
pusha
test
or
ret
movsl
add
xorl
jae
jae
push
loop
imul
or
into
in
aad
popa
dec
add
xor
mov
inc
jae
je
adc
mov
add
add
in
cmp
imul
out
imul
add
adc
add
mov
sti
push
add
add
add
and
push
pop
pop
scas
cmp
loop
add
ds
push
pop
hlt
and
or
pusha
xor
imul
js
or
sub
add
add
addb
add
sahf
mov
adc
ret
add
orb
daa
push
cmpb
push
and
into
in
lret
jb
int3
push
in
ja
mov
xor
stos
int3
js
jo
rorb
sbb
dec
xchg
lea
mov
nop
xchg
sti
xchg
dec
cs
xchg
push
ljmp
faddl
push
adc
and
adc
pop
dec
cmp
test
and
cmp
test
cmp
pop
loope
adc
je
shlb
pop
push
pop
repz
data16
mov
cmpsb
stos
and
pop
and
sub
dec
push
xchg
scas
dec
add
test
addl
adc
add
add
add
or
rolb
add
insl
add
in
add
add
add
push
mov
mov
add
inc
sbb
add
sub
and
add
aas
addb
xchg
lea
xchg
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
popf
sahf
lahf
mov
movsl
cmpsb
cmpsl
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
rol
ret
enter
int3
int
iret
rcl
rcl
aam
xlat
fcomp
fcmovnu
fstp
fnstsw
loope
jecxz
in
out
jmp
out
out
lock
repnz
cmc
div
clc
stc
cli
inc
push
adc
sti
cld
mov
imul
adc
ljmp
xchg
jmp
cs
sarl
add
nop
pushl
fists
outsl
ja
aas
das
cwtl
movsb
inc
cs
jae
jb
bound
sbb
stos
inc
data16
lea
arpl
mov
jne
daa
pop
lea
dec
mov
outsl
js
push
fisubs
push
inc
push
mov
inc
cmp
xchg
sahf
insb
gs
mov
dec
push
test
daa
add
insb
in
dec
imul
mov
imul
ds
and
inc
jb
jns
daa
addl
jb
lds
push
jns
mov
jne
push
sbb
lcall
stos
or
cmp
outsb
pushw
push
inc
sub
mov
xor
mov
push
pusha
testb
fiadds
push
push
lahf
imul
fisubl
lea
clc
pop
lcall
lock
adc
pusha
gs
mov
es
sub
aad
dec
lahf
faddl
sub
cwtl
xchg
pop
pop
push
push
jae
loopne
mov
cmp
cmp
sbb
jae
addr16
orl
imull
outsb
gs
mov
bound
rolb
fstpl
push
push
push
dec
testl
dec
loope
push
mov
push
in
cmp
mov
adc
mov
mov
sub
ret
imul
mov
cwtl
push
inc
adc
nop
lods
sbb
jg
xchg
push
fadd
mov
jg
sub
push
or
mov
je
outsl
xchg
daa
xchg
mov
popw
lcall
jl
cmp
cmp
cmpsl
jnp
notl
das
push
sub
insb
mov
push
jle
sub
sub
xchg
dec
sub
sub
push
cmp
pop
push
inc
jmp
cmp
and
add
in
out
inc
dec
pop
pop
cwtl
jb
sbb
sbb
jb
imul
loope
mov
push
jbe
out
cltd
lods
sbb
and
jae
cltd
adc
sub
and
jl
lahf
sub
sbb
inc
add
or
add
lahf
out
sahf
in
rol
mov
outsb
dec
and
inc
push
hlt
sti
aam
mov
push
js
push
movsb
mov
out
cwtl
xchg
nop
test
sub
push
jl
sub
fs
sarl
das
push
je
adc
idivl
push
cmp
repz
add
push
iret
cmp
inc
inc
xchg
push
cmp
repz
xor
adc
repz
repz
incl
loopne
lods
mov
iret
repz
dec
sub
in
jns
out
enter
push
out
sahf
out
dec
cmp
iret
repz
add
std
aam
mov
repz
adc
cld
shrb
push
cmp
mov
or
ds
mov
mov
outsb
push
xor
mov
ljmp
inc
cmpsl
pop
push
push
lret
jae
fs
sbb
ljmp
push
shrd
sub
add
loope
add
jle
push
insb
addb
mov
inc
dec
jae
insb
inc
out
gs
mov
sbb
push
incb
dec
inc
dec
xor
inc
dec
dec
dec
push
push
mov
and
inc
dec
jg
xchg
mov
inc
add
adc
sub
or
jo
adc
incl
popa
into
mov
push
imul
jnp
inc
loop
mov
ds
pop
adc
jnp
rcrl
lret
sbb
jb
xchg
jge
arpl
adc
pop
dec
scas
jp
adc
fdivp
das
in
scas
mov
mov
and
cmp
dec
imul
dec
cmpsb
iret
lret
add
inc
mov
mov
sub
fadds
pop
sahf
fwait
ss
sbb
pop
jns
ds
ljmp
xor
incb
int3
dec
dec
xor
dec
popf
pxor
xor
lret
das
cmp
aaa
push
div
inc
sub
dec
xchg
cmp
cmpsb
das
xchg
pop
and
pushl
xchg
lret
sahf
icebp
mov
cld
or
loopne
cmp
inc
mov
xchg
push
pop
mov
loope
xor
ds
dec
and
lods
incb
stos
js
xor
into
mov
and
in
pop
pop
repnz
hlt
movzbl
and
es
mov
jle
add
push
dec
push
mov
inc
or
outsb
jbe
and
inc
pop
cmpsb
push
jo
inc
sbb
ficoms
in
jmp
jo
daa
inc
push
and
out
xchg
inc
dec
push
dec
push
sub
std
aaa
std
into
mov
into
and
inc
dec
and
sub
push
add
call
push
and
push
cs
sub
xor
and
or
cmp
dec
push
xor
dec
mov
add
outsl
aas
sbb
dec
ss
or
out
sbb
pop
and
or
cmp
and
add
mov
sub
cmp
and
and
or
and
in
es
add
or
dec
ret
inc
sub
adc
mov
ljmp
or
and
cmp
sbb
pop
dec
sub
jg
lock
cmp
and
das
xor
jnp
mov
xor
cmp
pop
aaa
push
inc
cmp
push
dec
xor
sbb
and
mov
pop
pop
sbb
adc
adc
jge
inc
inc
mov
or
sbb
and
or
cs
dec
sub
dec
sub
xchg
insb
aam
or
sub
push
cs
inc
cs
add
push
sti
push
sbb
or
sbb
mov
adc
pop
fisubrl
sbb
add
sub
sbb
push
cmp
sbb
int3
dec
sub
in
orl
or
mov
orl
js
cmp
and
add
sub
add
cmp
movsl
jb
push
push
mov
les
mov
inc
and
gs
lcall
pop
sbb
pop
cmp
sbb
cmp
push
xor
cmp
stc
cmp
cmp
cmp
rorl
sub
inc
or
and
movq
ja
cmp
or
add
push
in
icebp
or
push
or
inc
rcl
lcall
fs
adc
dec
cwtl
in
push
cmp
xor
out
sahf
jl
pusha
jo
and
jns
out
mov
xlat
mov
push
adc
inc
outsl
jg
push
jns
repz
nop
orb
sarb
and
sub
addb
sahf
cs
mov
jge
rcrl
adc
adc
inc
cmp
lods
ds
aaa
cmp
outsl
insl
lods
pop
and
inc
pop
int3
popa
outsb
adc
pop
sbb
jg
insl
and
dec
bound
xor
pop
cld
cvttps2pi
push
outsb
jae
daa
clc
push
lock
scas
xor
clts
out
ds
mov
adc
jo
lds
rcl
clc
pushw
jnp
jns
inc
push
mov
jo
xor
mov
cmp
dec
movhps
add
and
and
push
sbb
cs
cs
cmp
sub
push
xchg
sbb
das
and
dec
pop
js
pop
adc
inc
jl
cmp
fcmovu
out
or
dec
dec
inc
add
nop
inc
or
jne
scas
out
sahf
cmp
push
pop
adc
cmp
and
pop
fadds
push
int
jmp
or
sbb
in
clc
pop
and
and
jb
jbe
cltd
ret
push
insb
push
adc
and
or
and
pusha
ss
iret
lods
sub
pop
roll
sbb
and
dec
addb
pop
scas
push
out
cs
sbb
push
out
or
mull
jae
fisubs
push
mov
sub
xor
push
ss
or
jecxz
add
arpl
pop
pop
mov
sahf
jge
add
cmp
outsb
loope
subb
dec
pop
sub
pop
test
test
mov
adc
shlb
out
jl
fcmovb
popa
cmp
cmp
inc
pusha
sub
cs
push
and
cmpsb
incb
das
push
cmp
push
daa
inc
jae
shll
mov
inc
cmp
mov
cltd
sub
mov
pop
or
sub
cmp
and
dec
cmp
xchg
stos
pop
or
out
mov
and
sub
data16
mov
scas
or
push
je
adc
or
movsb
loope
das
mov
or
or
inc
xorl
xor
stc
and
div
fisttpl
and
pop
and
pop
pop
or
or
adc
xor
ja
sub
in
pop
add
sbb
mov
imul
popa
pop
add
loop
jb
adc
jne
jo
int
xor
in
and
sub
mov
sub
ret
pusha
push
or
outsb
mov
sbb
iret
dec
mov
sbb
cmp
loope
xchg
sbb
sbb
pop
jg
dec
or
popa
cli
push
hlt
or
ret
je
rorl
or
sub
push
push
aas
push
jg
inc
adc
and
outsb
dec
jle
jecxz
repz
dec
dec
inc
andl
or
add
fst
push
mov
hlt
gs
sub
xchg
cs
lcall
cmpsb
or
dec
or
bound
psraw
call
sbb
lea
addr16
dec
mov
mov
pop
pusha
pop
push
pop
cmp
adc
inc
sbb
jb
push
pop
addl
outsl
jns
jmp
fsts
sub
pop
xor
or
push
call
lods
sbb
add
daa
push
pop
and
dec
int
das
adc
inc
sub
das
add
add
mov
push
sub
push
add
pextrw
or
loopne
cmp
sub
push
sbb
sbb
pusha
sbb
cmp
mov
sbb
jns
popa
jne
push
into
mov
stc
scas
push
xor
jle
push
insl
popa
imul
in
push
push
mov
mov
jo
push
data16
push
ja
mov
cmp
push
les
inc
mov
push
mov
stc
cmp
repz
lods
add
frstor
ja
xchg
add
add
mov
pop
adc
or
fs
or
pop
je
sub
push
std
pop
jns
xor
push
adc
inc
pop
sbb
mov
pop
mov
sbb
or
sbb
mov
pop
sbb
sub
xor
pop
or
pop
std
popf
lds
fistpl
or
sbb
sub
ss
sub
out
lds
fs
push
prefetch
push
mov
movaps
xchg
xor
push
cld
add
dec
push
inc
fmuls
inc
sub
rorb
es
inc
add
mov
xchg
pop
scas
mov
adc
lods
sbb
dec
or
ret
sub
daa
mov
les
scas
out
pop
dec
and
aaa
and
addr16
lock
outsb
aaa
sub
adc
and
pop
and
aad
push
xchg
cs
push
push
data16
js
adc
pop
out
push
das
inc
loopne
pop
ret
out
fimuls
cli
pop
jmp
jb
bound
push
sbb
std
rcrb
imul
and
insl
daa
jae
popa
dec
pop
jo
or
dec
aas
lcall
fisttpl
daa
push
das
and
xor
js
dec
mov
add
adc
dec
jae
into
cmp
imul
xor
mov
incl
outsl
add
and
push
push
das
xor
xor
add
pushf
cmp
in
push
out
dec
jnp
sub
sti
adc
rcrb
mov
scas
and
dec
loop
push
sbb
int3
xor
je
fs
fsubrl
jae
push
mov
das
pop
arpl
fldcw
fidivs
or
aad
shrl
push
inc
fldenv
mov
out
add
mov
fstps
punpckldq
pop
inc
add
pop
pushf
jl
xor
or
dec
pop
rcr
or
pop
pop
pop
cmp
or
cmp
or
push
cmpsb
dec
jnp
push
cmp
das
dec
sub
dec
sahf
iret
dec
das
cli
sub
xor
mov
and
pop
ss
and
rcr
cmp
adc
pop
cltd
mov
lcall
outsb
divb
sbb
jle
push
cmp
push
enter
dec
or
sahf
push
xor
xor
or
xor
xor
cmp
mov
leave
ljmp
inc
sbb
enter
and
nop
or
mov
inc
push
ds
daa
cmp
jbe
push
mov
ror
mov
and
mov
adc
pop
dec
or
adc
test
sbb
cmpsb
inc
and
daa
sbb
pushf
aaa
scas
neg
cmp
pop
pop
daa
push
jbe
lea
push
sbb
or
and
loope,pn
cmpsb
sbb
push
jno
sbb
xor
imul
sbb
jmp
inc
or
inc
mov
fsubs
push
mov
or
dec
xor
jb
inc
pop
mov
bound
push
and
push
inc
push
dec
imull
ret
fists
fbld
dec
lcall
inc
dec
rorb
jmp
cmp
inc
lahf
and
inc
push
push
mov
cmp
push
jo
push
pusha
push
jae
imul
fs
rolb
fists
xor
add
push
dec
cmpsl
das
loop
inc
inc
jo
mov
ret
add
bound
lahf
sub
orb
adc
mov
push
or
add
daa
les
sbb
or
or
ret
in
dec
dec
addr16
rorb
adc
ficomps
mov
dec
outsb
push
add
clc
ret
xor
pop
cmp
pop
add
lock
and
jmp
dec
and
jmp
adc
sbb
xchg
sub
or
sbb
cltd
mov
lahf
lea
cmp
adc
sbb
and
outsl
aad
dec
fwait
adc
add
test
inc
inc
mov
adc
sbb
daa
es
not
jo
call
inc
mov
mov
lea
pop
daa
mov
daa
xchg
daa
testb
mov
and
scas
testb
dec
sub
xor
jnp
sbb
insb
add
push
loope
aaa
mov
push
lahf
inc
out
and
xchg
jecxz
je
es
iret
dec
or
filds
mov
stos
out
fstps
and
push
xor
sub
push
inc
pop
push
in
add
mov
insl
aad
jne
and
es
jmp
push
movsl
es
ss
aas
sahf
cmp
cmpsl
enter
inc
pop
sub
xchg
cld
add
sub
add
aaa
inc
data16
insb
or
mov
cmpsb
jo,pn
jns
xchg
cmpl
adc
rorb
and
in
adc
pop
sub
inc
pop
pop
lock
mov
pop
inc
adc
push
adc
push
pop
adc
push
adc
pop
inc
aaa
mov
lock
adc
aaa
adc
inc
int3
pop
inc
and
sub
inc
mov
mov
xor
faddl
add
push
das
aam
push
push
sub
mov
fidivs
jg
fisttps
cmp
jae
mov
cmp
and
dec
inc
mov
or
and
and
movb
fincstp
adc
add
pushf
sbb
out
or
popf
loopne
jnp
xchg
jmp
test
push
ret
dec
dec
sarb
mov
adc
mov
ja
sbb
and
sub
sbb
push
xor
test
inc
sub
cmp
popa
pop
or
aaa
adc
sbb
loope
popf
sbb
aam
out
adc
fisubl
xor
sarl
pop
jae
sub
and
dec
pop
popl
mov
push
sbbl
dec
fsts
xor
in
add
push
lret
cmp
pop
mov
pop
xor
roll
xor
xorl
sbb
and
pop
stc
movsl
adc
test
es
xor
sub
bndldx
xor
mov
push
pop
lcall
stos
aaa
push
push
pop
push
sbb
les
push
pop
xor
movq
or
scas
xor
shlb
pop
pop
or
push
lret
push
or
push
jne
and
mov
sbb
movsl
decl
inc
pop
jge
and
push
cld
lods
mov
cs
call
gs
jle
add
mov
and
and
add
cmp
adc
pop
sub
xchg
inc
test
push
or
pop
xor
arpl
cmp
outsl
xchg
dec
adc
fbstp
decb
cmp
cmp
cs
scas
icebp
or
xor
or
fdivl
sbb
mov
insb
sub
divl
fadds
mov
pop
push
pop
xchg
add
rcrl
aaa
negl
loopne
mov
adc
call
pushl
add
je
ja
fs
gs
rol
test
pop
sub
pop
lods
push
mov
das
or
xor
cmova
cmpsb
and
sub
mov
xchg
push
adcb
add
sub
sub
push
das
fwait
int
mov
xor
inc
xor
ss
cmp
and
inc
out
stc
sahf
out
mov
inc
inc
dec
push
inc
shrl
inc
push
clc
out
sub
pop
add
dec
push
dec
dec
frstor
cld
mov
shlb
mov
mov
ljmp
outsl
dec
sbb
ljmp
mov
ja
mov
lods
pop
dec
movsl
std
mov
jb
push
push
mov
inc
push
insl
ss
adc
cli
mov
sub
pop
sti
mov
mov
sbb
mov
sbb
mov
mov
xor
pop
sbb
fwait
inc
mov
fsubs
mov
test
xor
dec
xchg
pop
sbb
jecxz
dec
push
add
pop
adc
jb
mov
pop
push
push
dec
movsb
stos
xor
aaa
aaa
clc
dec
cmp
or
mov
ficoml
pop
pop
sbb
mov
and
outsl
push
dec
imul
dec
pusha
push
pop
inc
in
cmp
xor
sahf
dec
cs
repnz
xor
lock
cmp
iret
leave
jae
inc
rorb
iret
and
mov
movups
scas
cmp
lock
int
push
pop
add
sahf
dec
pop
mov
add
or
sub
mov
jnp
cmp
xor
sub
inc
ret
mov
inc
sub
inc
inc
push
xor
ret
popa
add
jne
aam
push
xchg
adc
add
add
sub
ss
sub
pop
lret
xchg
dec
jp
jne
dec
xchg
push
jb
jo
inc
ret
bound
je
bound
mov
js
fidivrl
sub
stos
or
and
push
lahf
shlb
js
mov
insb
adc
mov
das
xor
dec
pop
jmp
pop
int3
es
push
and
outsl
adc
add
fs
ja
aaa
fcmovu
sarb
iret
shll
adc
test
mov
sub
dec
dec
xor
popl
push
dec
or
xchg
and
cmp
cmp
pop
or
rorl
cmp
fdivs
rolb
mov
outsb
and
mov
jbe
sbb
dec
inc
add
and
jns
push
cmp
dec
mov
cli
shlb
or
xor
adc
mov
call
cmp
push
lock
jg
in
das
test
and
push
mov
ror
xchg
dec
repnz
sbb
pushf
out
add
outsl
lcall
add
int
sahf
int3
es
push
int
adc
sti
imul
outsl
mov
mov
mov
test
popf
dec
cmp
push
mov
scas
dec
out
bnd
dec
insb
shlb
mov
pop
mov
in
repz
push
rolb
mov
bound
inc
push
cmp
insb
cmp
mov
push
ds
stc
cs
mov
insb
shrd
es
roll
aam
scas
pop
shlb
or
fcmovbe
cmpsl
out
pusha
dec
cwtl
mov
pop
push
outsb
cmp
push
add
mov
fnstcw
cmpsb
or
outsb
rol
fisubrs
aaa
mov
cs
push
ja
xchg
js
filds
out
into
jmp
jp
loopne
outsl
in
mov
out
pop
push
xchg
jns
fwait
jge
or
daa
int3
dec
jecxz
push
and
out
aaa
mov
push
inc
push
push
out
jnp
out
mov
push
push
lahf
testl
xlat
push
jmp
lahf
out
xor
push
mov
nopl
pop
lret
push
mov
sarl
sahf
fsts
daa
icebp
mov
outsl
test
pop
xlat
movsb
push
cmp
int
jns
imul
fcomip
cmp
iret
push
pop
jecxz
push
sub
jnp
jl
dec
sbb
pop
push
enter
cltd
jge
out
inc
inc
cmp
out
in
push
inc
lds
fidivrs
repz
or
mov
fdivp
repnz
xor
adc
imul
inc
cmp
iret
sahf
mull
lcall
cmpb
push
jl
out
js
enter
repz
shrl
dec
jno
shl
fwait
iret
jmp
xor
iret
imul
xchg
push
dec
ja
bound
or
lock
cmpsl
and
jg
dec
sbb
scas
sub
aas
xor
adc
stc
add
adc
cld
ljmp
adc
push
mov
xor
adc
mov
lds
pop
mov
scas
int
mov
jbe
mov
leave
loop
and
push
pop
mov
add
idivb
sarl
mov
sbb
pop
sbb
enter
stc
cmp
adc
or
adc
cs
mov
add
mov
push
sub
jmp
outsl
pop
pop
adc
mov
addr16
outsb
push
fildl
mov
scas
aas
sbb
and
inc
push
jp
sti
add
frstor
inc
sbb
or
lods
jo
addr16
push
stos
cmp
jae
fisubl
into
test
pop
das
loope
divb
dec
outsl
dec
dec
dec
mov
insl
push
ljmp
in
add
fstl
xorps
push
insb
pop
inc
aam
pop
push
dec
pop
je
in
ffree
mov
aaa
push
fisttps
jp
das
add
sbb
adc
mov
outsb
iret
push
xchg
ret
dec
test
or
mov
ja
mov
push
push
shrb
in
adc
into
lods
push
jo
cmp
push
jo,pn
xor
fisubrs
adc
pop
and
out
pusha
es
insl
jo
aas
jns
jnp
pop
insb
je
push
addr16
jo
jae
add
jg
es
outsl
and
sub
fstpt
adc
and
cmpsb
stos
jnp
push
or
imul
xor
xor
xor
xor
xor
cmp
cmp
out
jnp
in
xor
cmp
push
add
pop
inc
inc
push
cmp
inc
les
dec
or
sub
add
imul
or
jne
add
pop
pop
add
sahf
sbb
scas
and
inc
dec
xor
mov
xor
jns
aam
in
inc
sbb
dec
push
push
out
adc
lcall
push
xchg
cli
jle
and
xor
les
pop
and
lods
xor
mov
in
pop
fists
sub
add
xor
xor
jecxz
cwtl
xor
shlb
or
int
sbb
adc
sbb
in
push
bound
data16
adc
scas
test
daa
push
dec
mov
clc
add
mov
loopne
je
push
sbbl
arpl
mov
adc
sub
jbe
jmp
and
sub
jns
cld
push
add
pushw
sbb
sahf
sub
cmp
out
mov
cltd
sub
cmpsl
stc
or
xchg
fldcw
add
or
or
mov
adc
adc
sbb
and
iret
data16
inc
iret
xor
inc
mov
mov
jnp
mov
mov
fldcw
xchg
sbb
sub
add
or
adc
data16
jl
add
add
int
push
dec
str
data16
or
and
das
incl
xchg
repnz
push
scas
test
cmp
pop
ret
cmp
mov
mov
pop
pop
ret
sub
stos
lock
or
das
sub
or
and
pop
in
sub
cmp
dec
daa
pusha
mov
or
xor
insb
or
dec
aaa
xchg
adc
gs
pusha
lcall
cwtl
js
cmp
das
jmp
fldl
mov
daa
pop
add
adc
aad
inc
and
xchg
sub
lahf
mov
insl
or
ljmp
and
mov
mov
push
loopne
outsl
dec
lea
lods
inc
daa
lods
daa
bound
lea
pop
das
idivl
iret
sub
dec
js
iret
aad
push
pop
inc
test
pop
jno
fldt
imul
popa
daa
pop
adc
push
das
dec
insl
adc
sub
pop
xor
push
repnz
push
shlb
push
or
adc
pop
pusha
push
xor
fwait
mov
push
das
mov
mov
sub
daa
lea
xchg
insl
or
outsb
popl
push
pop
add
outsl
int
addr16
pop
jg
mov
cmp
shlb
mov
push
pop
mov
shrl
pop
mov
xor
aaa
outsl
test
cmp
orl
lret
xor
cmp
adc
jl
inc
xor
jl
movb
aad
or
xor
in
inc
xchg
pop
cmp
dec
adc
or
cmpsl
xchg
leave
mov
adc
ja
mov
movsl
icebp
and
push
mov
xor
add
fmuls
loop
jno
sbb
or
and
mov
pop
adc
jge
lret
das
bound
lret
dec
cmp
das
mov
add
inc
sub
or
dec
adcb
push
xor
sahf
or
or
push
xor
jae
adc
pop
or
add
push
das
iret
lods
jo
inc
adc
bound
add
inc
addr16
push
inc
and
push
dec
pop
pop
sub
mov
and
pop
or
movsl
xchg
sbb
inc
or
leave
sbb
test
adc
call
or
or
and
push
into
pop
pushf
ret
pop
jbe
add
add
jo
testl
pop
dec
push
int3
ret
adc
mov
repnz
pop
ret
or
xchg
testl
test
xor
fisubrs
xor
mov
out
dec
call
sbb
aam
rorl
int3
aas
imul
add
jle
gs
sub
loop
mov
ret
xor
test
sbb
cli
or
xor
jo
imulb
inc
mov
sub
inc
push
addr16
dec
arpl
rorb
and
lret
decl
jne
dec
ds
or
sbb
push
mov
leave
mov
and
push
push
sbb
sbb
fsubrs
imul
adc
or
int3
xorl
dec
lahf
test
adc
dec
or
popa
adc
data16
xor
inc
lret
add
sbb
inc
or
add
test
cmpsb
push
aas
pusha
popa
pop
in
or
or
es
fldcw
pop
mov
pop
dec
pop
call
pop
pop
push
xor
pusha
out
ret
pop
and
inc
outsb
loop
xchg
inc
das
dec
xchg
cmp
add
das
xor
jno
testl
pusha
dec
sbb
xchg
xor
xor
mov
inc
lods
sub
or
or
pusha
mov
ret
dec
fnstsw
or
adc
push
arpl
das
pop
or
pop
sbb
cmp
sbb
setge
roll
mov
push
inc
push
sbb
sub
jns
je
nop
ds
inc
jo
insb
jp
je
in
jbe
fs
jbe
xor
mov
jl
adc
out
loopne
add
or
add
daa
clc
push
fistl
pop
push
pop
stos
mov
add
pop
das
pop
rorb
pop
cmp
cmp
incl
push
add
jo
and
pop
and
xor
xor
add
ljmp
cmp
adc
sbb
or
or
add
sub
dec
pop
xor
push
adc
scas
cli
call
sbb
pop
or
adc
pop
dec
das
aam
add
fsubrs
inc
out
and
push
ljmp
inc
or
xor
add
or
aas
inc
xor
adc
and
cmp
and
add
push
xor
push
adc
adc
pop
push
decl
or
aaa
add
pop
pop
inc
xor
xor
or
pop
aas
or
dec
xor
dec
xor
bound
sbb
jmp
pop
add
jb
dec
js
push
xchg
and
lret
ret
dec
push
jbe
cwtl
adc
rcrl
push
cmpsl
adc
cli
pop
mov
dec
cmp
or
push
dec
rcl
mov
push
pop
icebp
xchg
xor
or
lods
lods
adc
inc
inc
and
adc
jo
dec
loopne
inc
push
out
and
cmp
das
xor
push
pop
mov
test
loop
mov
outsl
inc
and
rolb
cltd
inc
lahf
mov
dec
and
aad
pop
inc
les
pusha
sbb
dec
add
call
incb
jb
jb
xchg
aam
cmp
jns
jnp
jmp
dec
dec
sub
push
dec
push
leave
mov
add
xor
call
mov
sub
mov
inc
aaa
jno
sti
shlb
pushl
cmp
adc
pop
movsb
cmpb
aad
sbb
cwtl
stos
pop
fdivr
jg
mov
and
jge
push
je
mov
andb
sub
cld
lcall
in
inc
mov
bswap
and
ljmp
sub
fsubrl
stc
jbe
push
ds
insl
xor
jg
mov
decl
loopne
inc
xchg
cmpsl
aad
arpl
push
sub
adc
or
cs
insl
sub
adc
pushl
gs
leave
ret
sub
xchg
mov
data16
mov
call
cltd
test
push
push
shll
ja
daa
mov
mov
mov
xlat
decl
cmp
fmuls
lret
rep
cs
arpl
test
decl
add
mov
mov
movsb
mull
jno
addr16
push
scas
addr16
out
cli
cmp
dec
movsl
jg
push
push
mov
fwait
stos
flds
pop
sbb
dec
aaa
fcomip
sub
es
push
and
jb
push
cmp
inc
imul
jge
pop
inc
je
push
sub
cmp
arpl
pop
cs
push
dec
push
xor
jl
xor
pop
inc
inc
rorb
sub
push
xor
aas
bound
pop
cmp
jp
inc
mov
das
imulb
ja
addr16
xor
xor
or
lcall
cmp
pop
pop
cmp
sbb
pop
pop
or
cmp
arpl
aaa
pushf
xor
pop
inc
outsl
push
pop
add
xor
aas
cmp
mov
xorb
das
mov
and
mov
mov
daa
sbb
push
cmp
inc
mov
cmp
sub
cmp
jge
jg
sbb
pop
xor
and
xchg
fistpll
aaa
push
xor
inc
add
xor
xor
pop
outsb
cmpsl
cmp
inc
add
inc
cmp
jmp
inc
inc
xor
and
aaa
inc
push
inc
repnz
insb
or
cmovb
pop
mov
pop
cmpsl
ss
fiadds
push
mov
mov
mov
push
scas
or
daa
imul
loope
sub
adc
pusha
xor
adc
ss
ljmp
or
bound
or
popa
and
push
inc
loop
xor
lds
mov
and
mov
jns
scas
aam
add
xchg
fnstcw
mov
sub
jb
and
js
bound
cs
and
insb
lds
inc
pushf
or
pop
cs
push
popa
lock
cmpb
sbb
dec
xor
xor
jb
aas
or
and
in
and
mov
mov
push
ret
das
sbb
xchg
out
insb
and
sbb
movb
mov
xor
movsl
loop
sub
mov
adc
inc
pop
inc
add
sbb
pop
cmp
jno
push
scas
out
and
pop
dec
lret
sti
in
push
mov
add
jge
lods
sbb
sbbb
add
sbb
xchg
add
orb
fildl
aaa
sub
pop
sbb
jbe
push
sub
sahf
mov
pop
adc
in
scas
adc
add
adc
aam
loope
in
push
or
out
inc
push
pop
cmp
add
sub
mov
add
adc
lds
or
notb
aad
aad
or
push
xorb
add
mov
adc
rdmsr
stc
xchg
mov
pop
js
xor
jae
popa
loope
pushf
sbb
cmp
ret
inc
mov
cmp
mov
aad
arpl
push
mov
pushl
insl
loop
or
cmp
stos
push
dec
out
testb
aaa
pop
mov
insb
dec
push
popa
je
pop
add
xchg
insl
ja
jecxz
xchg
add
push
fs
sbb
xor
divb
add
or
gs
mov
pop
sub
dec
sarb
or
test
pusha
fdivs
dec
cmp
test
lods
push
insl
lret
je
adc
out
or
cli
fcmovu
add
inc
sub
fs
mov
lret
jg
sbb
aad
and
mov
adc
adc
ds
dec
out
lret
addr16
inc
out
xor
pop
outsl
lds
or
add
cmp
subl
add
push
or
and
rorl
sub
cmp
subl
stos
lods
push
lds
dec
popa
dec
lcall
ja
jb
pop
repz
and
inc
int
pop
inc
jne
push
insl
mov
ds
xor
cwtl
inc
xchg
or
jecxz
addr16
push
mov
inc
or
test
add
test
in
sub
mov
lea
adc
adc
push
pop
push
in
jo
pop
call
mov
mov
push
aaa
daa
jle
shll
xchg
fs
jo
dec
xor
mov
inc
loope
lds
dec
stos
push
push
ds
scas
push
call
dec
dec
icebp
or
cmp
push
sub
mov
push
das
push
cmp
push
xor
xor
cmc
sbb
popa
mov
xchg
adc
inc
cmp
ja
mov
xorb
test
add
and
dec
mov
fstpl
mov
pop
pop
jnp
or
pop
xchg
movsl
insb
push
xlat
movsb
or
mov
mov
cmp
pop
loop
dec
cmp
inc
dec
sbb
jge
xor
dec
aam
cmpsb
ja
dec
add
pop
notl
aas
addb
lds
push
or
imul
inc
lcall
sysret
stos
sbb
xchg
imul
mull
aaa
mov
dec
jb
mov
pop
jmp
in
in
sbb
pop
pop
pop
xchg
mov
fidivrs
pop
xor
fcomps
dec
pop
fwait
and
movsl
orl
imul
pop
cs
cmp
sbb
inc
rorl
and
inc
jne
and
pop
std
scas
aad
mov
cwtl
bound
pop
inc
adc
add
dec
push
rorb
cmp
push
and
mov
loop
aas
add
sub
inc
dec
rorb
iret
or
pmaxsw
and
loopne
xor
dec
cmp
xor
sbb
jg
aaa
insl
fldcw
gs
push
sub
outsl
xchg
mov
stos
jb
pop
dec
push
adc
pop
and
addr16
popa
pop
outsl
cmp
and
fwait
sbb
inc
call
punpckhwd
dec
outsb
push
je
mov
popf
add
push
push
pop
xor
inc
pop
push
dec
inc
dec
inc
push
pop
mov
mov
inc
or
push
lock
push
inc
sahf
fwait
pop
daa
cmp
daa
dec
push
dec
jb
or
sbb
jb
aas
dec
xchg
clc
add
daa
adcb
xlat
mov
and
and
push
lahf
sub
sbb
or
mov
add
pop
add
pop
loopne
xchg
xorl
jns
jb
fs
or
push
adc
add
fidivs
cwtl
sbb
or
orb
test
push
sub
add
lret
pop
xor
cwtl
daa
push
xor
inc
mov
mov
cmp
inc
xchg
loope
inc
shlb
pop
sub
inc
jmp
fldl
and
adc
imul
pushf
in
stos
sbb
cmp
and
cmc
and
mov
js
dec
aaa
add
lret
dec
pop
imul
xchg
cmp
ficoml
sbb
lods
xorb
push
and
shrl
pop
add
or
dec
outsl
aaa
lock
fildll
push
insl
xlat
incl
inc
das
push
popf
sub
push
lds
sbb
mov
pop
push
outsl
sarb
mov
xchg
insb
mov
fdivrs
jl
push
cmpsb
sti
and
cmpsl
aas
push
ds
pop
inc
popf
pop
bound
add
xchg
dec
xchg
dec
inc
xadd
sbb
inc
and
inc
xchg
inc
cmovo
rolb
adc
sbb
mov
nop
jo
maxps
dec
pop
test
add
rclb
aam
fadds
das
adcb
mov
outsb
dec
jp
cmp
aas
in
push
into
xor
incl
lahf
outsl
dec
movsb
sub
daa
add
aad
in
cmp
das
inc
add
outsl
ror
cmpsl
lcall
lcall
rolb
out
fsubrl
fadd
xchg
mov
or
pop
stos
shrb
push
and
aas
jg
int
arpl
outsl
mov
dec
scas
in
inc
inc
in
scas
in
xor
scas
in
scas
sub
and
lods
in
add
daa
mov
pop
push
rclb
sarl
push
in
push
enter
pusha
out
ds
rcrb
sarl
dec
jo
push
cmp
addr16
cmp
lods
pop
sahf
nop
pop
pop
pop
repz
jnp
ds
pop
pop
pop
lcall
add
pop
or
iret
sarl
aam
pushf
pop
push
inc
pop
dec
jae
sub
and
cmpsb
and
add
xchg
int3
icebp
mov
inc
mov
into
xor
das
hlt
imul
lahf
sub
pop
cld
add
fcmove
xchg
xor
sub
out
out
mov
push
int3
push
push
nop
sub
idivb
inc
mov
insl
add
jl
ja
mov
push
lods
mov
inc
mov
add
in
xchg
mov
imul
inc
pop
pop
das
or
shll
push
je
dec
outsl
add
mov
filds
sub
in
inc
inc
enter
sub
enter
xchg
cmp
cmp
pop
ss
add
pop
dec
adc
xchg
pop
mov
popa
dec
scas
add
mov
inc
mov
xor
xor
movsb
jns
daa
xor
pop
lods
aaa
and
in
sbb
sub
fs
or
pop
scas
add
push
lods
ljmp
sbb
xor
xchg
xchg
sub
xor
sahf
or
mov
sub
mov
mov
fs
enter
or
nop
xchg
out
rcrb
sub
fiadds
xor
or
lahf
mov
lods
loopne
jg
sub
xorb
sbb
ja
add
or
xchg
sub
jb
xchg
sub
out
add
out
xchg
mov
in
dec
xchg
shrl
enter
nop
sub
outsl
and
and
push
push
push
xor
scas
add
and
pop
outsl
out
ret
xchg
or
mov
xlat
imul
push
mov
lcall
mov
lods
jb
sub
fcmovnu
rcrl
push
xor
addr16
dec
ficoms
mov
movl
or
movsb
popa
push
push
xor
popa
jg
push
clc
push
mov
xor
int3
xchg
push
leave
xor
fsubl
pop
sbb
add
inc
jbe
and
nop
sub
testl
sub
insb
inc
cwtl
outsl
push
push
lods
sbb
stos
outsl
jg
cs
add
xchg
daa
idivl
lods
pop
mov
clc
popa
bound
sub
in
aam
imul
arpl
aam
sahf
out
cmp
xchg
push
cmpsb
mov
dec
mov
daa
cwtl
pop
or
pop
movsb
bound
addb
bound
repnz
call
lods
mov
daa
xlat
or
clc
push
nop
xchg
pop
arpl
and
adc
xchg
xor
inc
cmp
je
pop
test
and
and
inc
outsl
and
fdivs
add
iret
jae
cld
add
fs
push
rolb
fs
leave
mov
aaa
mov
and
pusha
aaa
js
addr16
mov
add
mov
js
inc
mov
add
xor
test
gs
mov
sub
xchg
sbb
cmp
addr16
dec
sahf
or
jl
mov
ja
add
xchg
mov
pop
jb
daa
add
cld
lods
fs
ds
add
sub
fisttps
inc
jmp
je
cmp
xchg
sbb
das
outsl
add
aad
pop
pop
in
inc
mov
shlb
ss
orl
push
in
aaa
add
inc
dec
cmpsb
add
sub
es
push
insb
cmpsb
cmp
popa
imul
iret
xlat
andb
add
rol
dec
out
hlt
mov
or
add
sbb
pop
push
iret
jnp
push
sub
imul
lcall
xchg
jns
cmp
aas
dec
push
in
push
mov
das
or
pushf
nop
pop
mov
push
outsl
add
cltd
inc
outsb
pop
or
dec
jp
pop
lcall
dec
testl
add
xchg
sub
add
ss
add
add
shll
mov
pop
leave
add
mov
xchg
pop
add
add
subl
sbb
pop
addr16
pop
or
test
xchg
pop
insl
cmp
fwait
push
enter
cld
push
or
adc
imul
sbb
adcb
push
xor
mov
cmp
addr16
xlat
xor
mov
mov
daa
sub
nop
or
xchg
cmpsl
mov
mov
lock
sub
ss
push
cmp
shrb
loopne
ja
daa
xchg
add
or
pop
sbb
ficoms
outsl
movsb
xor
sub
push
push
pop
lea
mov
pop
mov
bound
push
test
or
leave
jae
rclb
popa
or
addr16
push
mov
dec
mov
imul
fdivr
sub
add
repz
inc
jp
mov
fadds
outsb
es
pushf
iret
sarl
in
outsl
sbb
pop
lcall
add
xor
out
inc
pusha
in
pop
jno
imul
mov
xor
out
hlt
sbb
out
ds
mov
addr16
repz
pushf
mov
add
imul
sub
int
jns
xlat
sbb
jb
ds
repz
push
mov
clc
inc
jp
leave
clc
ds
sarl
pop
nop
rorl
jl
repz
es
inc
mov
repz
lahf
out
lcall
jle
iret
repz
mov
cmp
repz
andb
jns
cmpsl
stc
push
cmpl
dec
repz
icebp
xor
test
repz
test
test
dec
xchg
iret
rorl
and
push
test
sub
iret
enter
js
mov
cmp
add
add
push
jae
out
outsl
dec
repz
lea
pushf
lahf
out
sub
nop
mov
sahf
ja
push
jno
fcoms
cmpsl
stc
mov
cwtl
fistl
sahf
cmpsl
stc
xor
and
out
jl
xchg
xchg
dec
xchg
movsb
cld
lcall
repz
jge
lcall
out
ds
shr
pushf
xchg
rcrb
fiadds
sbb
cmp
repz
add
lahf
cmpsl
stc
pop
mov
jle
lcall
xchg
mov
out
out
aas
movsb
out
shl
movsl
lahf
cmpsl
stc
xor
test
sar
xor
mov
mov
movsl
sar
subb
sbb
lods
cmp
out
inc
icebp
cmp
fwait
iret
repz
clc
mov
sahf
out
lock
ds
mov
pushl
daa
mov
repz
ds
repz
insl
mov
cmp
out
jl
xchg
mov
mov
enter
outsb
mov
jl
cmpsl
stc
dec
ret
clc
pop
ret
jns
iret
rorl
mov
sub
xor
sarl
push
scas
loopne
jns
cmp
dec
int3
mov
push
jo
mov
insb
mov
iret
jno
inc
rcrb
roll
rcl
flds
jle
add
mov
cmp
push
movsb
outsb
je
das
out
clc
jno
addr16
ds
add
push
add
shll
jns
mov
mov
je
sub
xor
cmp
jbe
xchg
cmp
push
fbstp
or
sysret
in
imul
aas
cmp
or
adc
ss
notrack
adc
pop
xor
and
xor
loope
mov
push
out
lcall
mov
rolb
repz
jnp
test
push
inc
add
fsts
idivl
or
adc
mov
scas
rorl
mov
js
pop
jb
and
inc
pop
psubusb
leave
mov
jl
push
fbstp
xchg
cltd
movsb
ss
movsb
mov
jmp
fmuls
pop
sarl
cmp
fcmovne
rclb
push
enter
ss
mov
shl
fs
out
mov
or
jp
iret
outsl
in
mov
lock
repnz
shl
add
sahf
repz
push
inc
imul
push
incl
repz
in
jbe
cld
jbe
pop
leave
dec
add
inc
mov
aaa
xor
sub
ficompl
add
clc
leave
xchg
and
ja
ja
shrl
cmp
jno
shl
jnp
inc
mov
inc
add
push
push
pop
ss
outsl
push
in
inc
shll
aas
les
inc
rcll
inc
inc
jg
inc
in
cmp
stos
iret
jne
and
fimull
push
imul
and
add
mov
les
sub
in
xor
jo
inc
pusha
push
push
add
cmp
das
outsl
dec
push
inc
psrld
dec
movsb
jns
movsl
in
xchg
jns
jns
call
or
in
jns
bound
mov
jns
pop
shrl
lock
inc
sbb
leave
and
jp
imul
ret
and
jns
pop
sbb
jp
jae
sbb
add
mov
xchg
jnp
leave
leave
inc
jl
mov
inc
jb
xchg
dec
mov
mov
push
fidivrl
ja
inc
cmp
jnp
jnp
jl
in
cmp
scas
mov
push
jl
test
leave
inc
pushf
pop
jb
test
mov
push
outsl
addr16
enter
je
inc
jle
xchg
inc
outsl
dec
inc
add
in
addr16
jge
sbb
dec
jge
test
mov
mov
out
mov
push
jo
out
inc
cmpsl
in
or
cmc
pop
and
rcr
and
push
daa
xor
jb
inc
js
xchg
pop
and
mov
dec
cs
rol
loopne
repnz
cs
jg
jg
dec
and
jg
jo
cmp
in
xchg
jo
push
add
add
add
cmp
enter
fimuls
or
jo
mov
fs
hlt
in
push
les
add
inc
scas
push
or
dec
jb
cmpb
mov
mov
push
mov
insl
mov
push
add
push
mov
cltd
jno
movsb
xchg
cmp
xchg
jno
xchg
ja
jb
aad
in
push
xor
jp
add
add
cmpsl
push
in
mov
cmp
mov
jb
jb
jb
jb
pushf
pop
and
mov
pushf
pushf
pushf
pushf
orl
outsb
mov
in
scas
cmpsl
int3
pop
aam
fsubl
fstpl
in
mov
xor
pop
mov
push
xor
mov
xchg
jae
out
dec
cs
out
call
shlb
fcoml
out
push
jns
andl
addb
sub
aaa
or
test
loopne
daa
sarb
and
loopne
je
in
inc
jb
test
inc
cmp
popf
mov
in
lods
xchg
ja
xchg
jo
jb
push
jb
mov
cmpsb
xorb
mov
adc
add
clc
push
xor
in
sub
push
jne
and
in
mov
push
xchg
push
ret
ror
test
call
jne
pop
jne
jne
adc
dec
mov
cmpsb
sbb
mov
test
or
aas
mov
repnz
xchg
xchg
jle
outsl
lock
jne
jbe
pop
pop
pop
push
jbe
jbe
jbe
jbe
pop
pop
pop
cmp
jbe
push
or
or
jno
jns
out
jl
xchg
xchg
out
sahf
out
popf
adc
sahf
mov
mov
sahf
out
fsts
cmp
out
add
adc
inc
sbbl
scas
pop
ja
cmpsl
scas
dec
and
fistl
add
xchg
shlb
movl
cltd
dec
sub
insl
xchg
push
xlat
adc
ja
shlb
mov
fbstp
js
mov
ret
outsb
dec
dec
xor
fcoml
cmpsl
cmp
in
scas
xchg
and
cmp
inc
xchg
or
nop
mov
push
icebp
jl
loopnew
mov
addr16
push
adc
sbb
jb
mov
jns
das
xor
cmp
jns
cmp
sysret
fdivl
rorl
jo
cmp
or
mov
lock
ss
xchg
dec
mov
xchg
sbb
cmp
mov
push
divl
dec
dec
jb
lock
mov
inc
mov
push
sahf
cmp
mov
cmp
aas
push
adc
mov
inc
push
mov
and
out
and
fs
insl
xchg
pushf
in
pushf
mov
leave
inc
jb
lock
xchg
pushf
in
adc
mov
pop
xor
pop
jb
pop
js
movsb
lcall
cmpsl
push
test
insl
shlb
jl
shl
add
movl
xor
xchg
test
in
movsb
mov
shlb
xchg
sbb
jecxz
aas
jmp
mov
in
lock
jge
push
push
xchg
adc
or
pushf
mov
pop
mov
in
pushf
mov
mov
add
in
mov
lret
lret
jge
jge
xchg
add
adc
dec
into
fiadds
cmovge
push
jle
fsubrl
xchg
pop
js
add
aaa
mov
cmp
xchg
cmp
or
push
inc
jno
iret
cld
dec
and
fisttpll
dec
inc
nop
xor
daa
push
das
sbb
cmp
icebp
mov
mov
mov
addr16
push
jg
mov
pusha
jg
jg
jg
mov
cmpb
nop
jg
mov
mov
jg
mov
sarb
sarb
outsb
mov
pop
pi2fd
or
xchg
xchg
xchg
xchg
or
or
xchg
xchg
xchg
xchg
push
add
xchg
xchg
add
add
and
nop
add
xchg
sbbb
subb
dec
xor
pop
push
add
and
lods
fcmovne
add
ret
mov
in
addr16
stc
jo
es
and
sub
inc
daa
iret
mov
push
push
push
pop
popa
inc
mov
imul
iret
in
and
xchg
push
add
popf
out
pop
and
bsf
in
pop
iret
add
out
mov
or
adc
fcmove
dec
ja
cvttps2pi
dec
and
push
pop
or
cmp
or
das
dec
push
xcrypt-ecb
cmpsl
dec
pop
repnz
push
add
xor
inc
aas
outsl
test
aas
mov
cmpsb
or
out
pop
or
add
jns
push
xchg
mov
rcrl
loopne
in
das
xchg
lahf
cmpsl
cmp
jae
ljmp
push
stc
add
int
cmp
andb
stos
es
pop
or
adc
in
xchg
sbbl
subl
in
dec
in
push
imul
pop
subl
xchg
out
xchg
cltd
pop
mov
or
xchg
rclb
daa
js
cmp
add
xchg
and
test
test
test
pop
mov
outsl
pop
dec
outsb
inc
leave
enter
js
dec
dec
dec
dec
mov
iret
repz
push
mov
repz
rorb
fisttpl
out
adc
repz
or
leave
orb
testl
xchg
adc
pop
addr16
pop
jb
xchg
orb
sbb
rolb
fcmovne
icebp
test
pop
add
repnz
and
hlt
in
jns
xchg
cmp
xchg
dec
popl
or
cs
out
mov
call
adc
and
sbb
sub
and
gs
adc
cmp
jns
inc
repnz
inc
test
add
xchg
and
or
pop
or
decl
daa
pop
das
add
sahf
cmp
sbb
mov
sub
iret
orb
nop
pop
cwtl
jmp
mov
test
jo
pusha
lcall
movups
lcall
add
mov
add
mov
xchg
xchg
fwait
push
enter
fists
mov
mov
nop
cwtl
mov
mov
push
mov
pop
add
cmp
jmp
pushf
lahf
and
shll
dec
addr16
mov
xchg
mov
jo
aas
mov
in
xchg
jmp
ja
pop
and
add
xor
cmp
jns
popa
mov
mov
jns
mov
mov
jbe
jns
mov
mov
decl
push
pop
scas
xchg
pusha
cmc
shl
repnz
mov
mov
mov
repnz
aaa
mov
dec
mov
repnz
mov
outsb
mov
or
in
repnz
mov
mov
enter
in
fsubrp
hlt
out
enter
or
sahf
sbb
in
mov
addr16
push
xchg
dec
and
add
lahf
imul
pop
and
pop
xchg
setle
inc
repnz
push
leave
roll
movsb
xchg
ljmp
lea
lea
pop
inc
cs
add
push
pop
lea
lea
mov
lea
dec
or
lret
shll
in
inc
repnz
mov
push
ret
mov
mov
xchg
jmp
cmpsl
mov
mov
loopne
or
mov
mov
cmpsb
mov
fisubl
fucom
jns
add
ltr
enter
ljmp
xchg
aaa
aad
aas
or
add
in
or
and
repnz
lahf
xchg
out
add
xchg
pushf
pushf
dec
mov
pop
and
filds
xchg
xchg
mov
xchg
out
ret
xchg
cli
enter
enter
sub
sahf
dec
and
add
mov
push
dec
adc
mov
cmp
mov
add
push
pop
nop
ficoms
aad
cmpb
bound
xor
pop
pop
adc
sub
xor
dec
xchg
pop
pop
pop
pop
push
xchg
pop
xchg
pusha
xchg
push
pop
ud2
pop
or
xchg
xchg
xchg
xchg
or
push
add
add
add
jo
sahf
out
sbb
sbbb
sahf
out
sbb
rorl
pop
mov
cmp
leave
mov
and
and
enter
xchg
sub
add
or
pmaxsw
xchg
out
movsl
das
push
movntq
xchg
aaa
push
addr16
jmp
push
pusha
xchg
pop
lar
in
xor
jo
mov
repnz
mov
add
mov
push
hlt
pushf
pushf
pop
and
call
pushf
clc
pop
add
into
mov
prefetcht0
dec
push
imul
movsb
rclb
or
je
pop
pop
outsb
andb
adc
xchg
xchg
mov
sbb
mov
ffreep
xchg
bound
rclb
test
enter
xchg
xchg
xchg
xchg
leave
xor
mov
xchg
or
cmpsb
sub
iret
xchg
jae
jb
out
xchg
iret
cltd
mov
test
xchg
mov
ljmp
mov
cmpsl
test
scas
mov
jmp
das
jmp
repz
daa
js
sti
pop
push
xchg
pop
push
xchg
iret
add
popf
in
xchg
jo
xchg
xchg
push
add
push
xchg
jne
lret
add
cmpsl
jo
cmp
add
daa
adc
enter
xchg
fbld
test
ljmp
out
fsub
ja
das
xchg
out
nop
adc
mov
xor
jg
xchg
jns
inc
dec
xlat
push
xchg
pop
xchg
mov
int3
mov
and
jbe
rcll
rorb
cmp
fsub
movntq
jb
lock
xchg
pop
add
or
adc
sbb
and
sub
adc
adc
inc
xchg
pop
or
aad
pop
stos
jg
xchg
jns
fcmovne
jl
test
mov
xchg
scas
dec
pushf
out
pushf
iret
pusha
iret
and
cs
mov
pusha
stos
rcr
add
push
daa
jo
fldt
pop
in
outsb
repnz
in
push
mov
setp
xchg
test
lahf
pop
cwtl
orb
paddusb
jb
cwtl
dec
cwtl
packsswb
jl
sbb
lock
test
dec
es
lods
rorl
incl
mov
pop
adc
ljmp
push
or
test
jne
cli
insb
inc
add
or
dec
or
mov
femms
pop
mov
mov
push
add
cmp
cmp
lar
cs
movsb
push
jbe
cmp
or
inc
iret
in
les
cltd
inc
dec
and
or
loopne
lahf
mov
sub
xchg
out
xor
fdivl
inc
dec
or
pop
pop
sahf
out
ljmp
jp
jns
js
sbbb
andb
lcall
lods
ja
int3
push
xchg
out
sahf
aam
faddl
in
dec
dec
sahf
push
lcall
and
pop
fwait
pop
push
decb
xchg
int
pop
fwait
add
scas
inc
fwait
mov
gs
scas
daa
mov
jne
jg
out
inc
pop
adc
xchg
test
mov
fistps
mov
mov
leave
call
mov
xor
adc
pushf
mull
pushf
pop
mov
xorb
iret
mov
pop
fiadds
out
in
daa
outsb
add
push
add
xchg
sbb
xchg
sbb
test
sub
adc
fstl
daa
dec
das
loopne
xchg
xchg
xchg
pushf
call
pushf
or
adc
pop
popf
sub
xchg
popf
push
or
push
jns
out
or
insb
or
ja
orb
lea
cwtl
popf
mov
jae
adc
push
add
xor
mov
sahf
jo
loope
les
xchg
and
push
sahf
pop
sahf
pusha
sahf
cmp
fmul
push
js
inc
sub
adcl
iret
mov
cmp
mov
sahf
cmp
cmp
fisubrl
outsb
cmp
loop
pop
push
pop
repnz
in
xchg
sahf
cli
sahf
add
sbb
adc
jb
add
cmp
jo
jb
lahf
lahf
out
in
rcrl
or
or
gs
aam
sbb
jbe
outsb
xchg
lahf
push
ja
push
mov
in
sub
fcomp
cs
call
lahf
inc
repnz
fcomip
sti
inc
rclb
or
and
dec
mov
aas
push
pop
push
xchg
movsb
mov
fwait
pushf
pushf
fsubl
fsubl
mov
pop
leave
leave
inc
repnz
mov
leave
mov
xchg
jb
xor
lahf
outsb
lsl
mov
aaa
xchg
pushf
or
xor
cmp
popf
pushf
inc
dec
xchg
xchg
mov
js
mov
in
jecxz
pop
stos
int
xchg
cwtl
je
jecxz
mov
xchg
mov
aas
sbb
and
pop
or
call
xchg
mov
jae
je
cltd
out
into
popf
mov
push
add
jns
mov
pop
mov
push
test
adc
in
fdivl
leave
jae
mov
add
pop
pop
mov
jns
fldt
getsec
pop
aas
add
out
dec
lar
push
mov
in
jp
mov
les
push
xlat
mov
aaa
mov
mov
iret
sub
adc
adc
push
stc
aaa
sbb
pop
push
xchg
fsubrl
fisubrl
pop
addr16
leave
inc
cmp
ljmp
fstpt
mov
sbb
mov
movsl
inc
bndstx
movsl
inc
push
mov
aas
movsl
jg
cmp
nopl
add
popf
xchg
push
daa
fucom
push
mov
add
mov
pushf
movsl
shld
shll
add
movsl
movsl
movsl
int3
pop
sbb
movsl
cmpsb
xchg
cmpsb
sahf
pop
cmp
mov
xor
cmp
add
das
das
das
das
dec
sub
inc
cmpsb
mov
cs
dec
cmpsb
push
aas
pop
pop
vmwrite
iret
dec
or
push
sahf
out
pop
js
or
dec
sahf
sbb
nop
insb
jecxz,pt
cmpsb
das
push
xor
std
mov
push
mov
inc
mov
stc
pop
pop
add
jg
daa
push
pushf
dec
leave
andl
es
jb
enter
mov
jg
cmpsl
iret
cs
sub
enter
pop
sysret
mov
cmpsl
aas
cwtl
cmpsl
out
outsb
xchg
mov
cmpsl
add
jns
lock
inc
sub
test
sbb
call
test
dec
and
hlt
push
test
pop
test
test
iret
leave
rep
dec
jg
push
mov
sub
dec
cmpsb
xchg
mov
outsb
cmp
mov
pop
paddsw
repnz
test
push
dec
dec
mov
mov
or
cmp
inc
pop
dec
adc
dec
sahf
out
adc
push
cltd
jmp
jb
cmp
repnz
mov
mov
test
daa
movsb
xchg
xchg
push
mov
test
mov
xchg
xchg
test
sahf
pop
stc
or
push
stos
push
add
jns
out
add
add
add
dec
push
inc
push
or
cmp
repz
or
push
repnz
or
jp
and
xchg
or
dec
cmp
imul
mov
add
fsubs
call
jo
das
bts
mov
cmpl
pop
jp
inc
pop
lock
dec
les
pop
roll
pushf
fwait
xchg
jmp
test
push
les
cmp
push
push
arpl
stos
ret
dec
push
pop
stos
stos
push
mov
xor
xchg
fs
stos
stos
stos
mov
inc
cmp
out
clc
incl
rorl
xor
cmp
fs
lods
vmread
lods
lods
lods
cmp
repz
mov
repnz
sidtl
rcr
loope
pushf
dec
ds
adc
ret
and
sbb
mov
cmp
xchg
ja
xchg
add
jb
pop
vmwrite
fst
dec
and
iret
lods
dec
fisubl
fs
xchg
dec
cs
nop
lock
sahf
scas
scas
aaa
jns
ja
das
cmp
add
jb
enter
scas
push
scas
pop
scas
out
sbb
arpl
jnp
inc
pop
dec
aas
scas
dec
mov
push
call
iret
shlb
dec
scas
daa
daa
pop
fsubrl
fldt
jecxz
repz
shrb
syscall
add
and
sti
add
imul
inc
jns
out
add
push
add
jp
out
add
insl
in
and
pop
mov
or
push
call
scas
stos
scas
dec
adc
xor
scas
or
mov
hlt
in
das
mov
mov
xor
clc
xchg
pusha
push
addr16
ljmp
mov
pop
jns
out
rcrb
jmp
addr16
in
sti
clts
mov
adc
jne
push
daa
divl
in
mov
mov
mov
push
jo
or
mov
push
repnz
dec
adc
cmp
mov
mov
mov
mov
dec
dec
inc
mov
in
jbe
fwait
add
fistpl
pcmpgtb
leave
leave
out
notb
in
push
jb
cltd
xor
in
mov
cmp
push
sbb
rep
xchg
and
mov
mov
push
cmp
leave
mov
push
and
lret
push
js
daa
iret
and
fimuls
and
mov
enter
in
and
leave
push
fdivs
sub
jnp
inc
xchg
pushf
xchg
add
sahf
pushf
pushf
xlat
fucomip
mov
cmp
enter
mov
mov
mov
xchg
pop
leave
xor
push
inc
mov
jb
enter
mov
mov
mov
jae
sbb
pop
mov
daa
daa
pop
lods
into
leave
add
jg
xchg
xor
into
idivb
mov
iret
repz
or
or
cmp
repz
push
ss
addr16
pmaxub
mov
adc
in
outsl
push
mov
mov
cmp
insl
jno
jno
jns
stc
inc
mov
mov
jns
mov
mov
mov
mov
jns
jns
mov
mov
mov
mov
jns
jns
mov
mov
mov
mov
xchg
push
mov
mov
es
push
lret
xor
mov
lret
lret
lret
push
mov
mov
mov
mov
iret
repz
and
repz
and
cmp
and
and
iret
repz
int3
sub
or
es
repz
ljmp
repnz
cs
add
xor
sub
xor
int
cmp
pop
inc
mov
fistps
push
das
push
mov
xchg
mov
mov
xchg
mov
lods
cmpsl
leave
dec
mov
sgdtl
aas
dec
push
sbb
int
or
jns
fs
jb
mov
mov
jb
jb
xchg
lods
sbb
jb
out
mov
cmp
outsb
daa
iret
cmp
cmovne
fucom
jns
arpl
packssdw
sahf
fcmovne
in
jae
xchg
scas
das
int
mov
out
aad
fucomp
jb
daa
daa
clc
add
neg
ss
inc
aas
outsb
mov
xchg
ds
out
jns
ja
xchg
mov
out
mov
xor
push
mov
cmpsb
mov
out
pop
push
xor
mov
push
cmp
jns
js
mov
mov
mov
ja
je
ljmp
sub
clc
iret
lock
dec
adc
pop
mov
adc
mov
je
add
shll
xchg
shll
testb
adc
daa
add
cmp
leave
dec
push
or
cmp
cmpsl
or
je
pop
daa
iret
jae
mov
jae
cmp
mov
repnz
ficoml
in
das
loopne
iret
sbb
movsbl
mov
adc
jns
sahf
out
pop
cmp
out
push
pop
add
js
jns
mov
sub
in
and
rclb
add
dec
es
shl
xor
push
adcb
jg
sarb
jb
wrmsr
push
add
and
inc
aaa
clts
mov
cmc
das
cmpsb
aas
pop
shrb
push
in
js
push
js
into
shlb
pop
aas
nop
push
adc
dec
sahf
adc
lar
cmp
sbb
rclb
sub
mov
dec
cmpsl
negb
cmp
inc
popf
out
loopne
inc
daa
dec
mov
ror
and
pop
scas
rorb
rorl
jge
sar
rcll
roll
in
xchg
add
mov
xchg
cmp
cmpsw
push
in
mov
in
in
xchg
setns
xchg
iret
add
scas
popf
pushf
fmull
fsub
in
xchg
mov
ret
pop
push
dec
outsb
daa
iret
add
das
getsec
aas
xchg
addr16
push
movb
fadds
pop
dec
cs
es
int
push
ret
ret
loopne
clts
ret
repnz
ret
ret
daa
mov
call
xor
das
adc
addr16
sahf
xchg
out
add
xor
xchg
out
inc
push
dec
push
ret
jmp
push
iret
leave
in
jle
xchg
insb
daa
daa
pop
pop
test
jns
daa
daa
leave
shll
in
hlt
cld
add
pop
mov
cmp
jg
xchg
les
cmp
incl
mov
pop
jb
in
outsb
lahf
jp
orb
fistps
iret
leave
repz
mov
nop
mov
fucom
paddsw
in
in
in
jbe
pop
std
filds
xlat
rcr
pop
sbb
pop
mov
xlat
xchg
jmp
pop
pop
mov
xchg
out
xchg
add
dec
dec
xchg
fwait
mov
dec
enter
cmp
out
cmpsl
test
in
push
adc
sbb
aas
push
or
cmp
sub
jmp
dec
in
in
mov
pop
repz
cmp
xchg
xchg
add
lahf
cmpsl
or
inc
arpl
shlb
or
aad
fcmovnb
cmpsl
js
stc
iret
or
adc
sbb
aas
and
and
fisubl
xchg
iret
sub
ja
mov
pushf
pop
and
stos
mov
insl
daa
pop
xadd
pop
syscall
repnz
iret
xlat
push
pop
loop
in
repnz
movl
enter
repnz
das
enter
inc
in
into
repz
pop
enter
in
enter
enter
in
in
enter
enter
in
in
enter
enter
je
in
enter
sbb
pushf
sbb
sbb
pushf
pushf
pushf
pushf
pop
push
adc
pushf
sub
ud2
push
iret
repz
sub
sub
jb
cmp
aaa
fsub
insl
push
inc
popa
fbstp
sarb
repnz
cmovb
dec
jns
out
cmp
arpl
jns
out
cmp
out
sahf
aas
popl
inc
movsl
jnp
out
inc
mov
mov
cmp
movb
lret
dec
sahf
addr16
lret
sub
jns
xlat
cmovnp
xor
aas
dec
psllq
jae
dec
pusha
push
imul
iret
push
jbe
orl
leave
rorl
pop
ret
cvtps2pd
fcmovne
leave
leave
ftst
out
cli
fbld
lret
out
popa
lock
mov
push
lret
iret
mov
add
daa
js
pop
orb
pop
cwtl
sbb
enter
int3
adc
cmp
int3
push
adc
mov
xor
lret
mov
mov
mov
rorb
sbb
push
mov
jns
loopne
jle
rcll
clc
xor
pop
jns
sbb
cmp
inc
int3
jmp
enter
and
int3
int3
repz
enter
add
in
daa
iret
add
test
test
and
inc
int3
loopne
adc
mov
mov
shr
sbb
jb
int
int
pop
cmovle
sahf
push
and
pusha
push
sahf
int
mov
or
int
xchg
xchg
int
jo
add
test
xor
pushf
mov
int
ror
test
enter
outsl
fnstsw
sti
movl
and
into
adc
ss
and
lret
into
pop
sub
into
jns
lret
fs
push
pop
push
add
leave
in
in
pop
mov
jne
pop
pop
ds
das
mov
xchg
into
mov
pop
lods
movzwl
ret
jae
jb
jecxz
adc
cmp
cmpsl
sub
adc
sbb
push
iret
repz
repz
sbb
sbb
movsb
fwait
cmp
push
sbb
jns
xchg
out
addr16
jge
daa
iret
cmp
pop
xchg
out
dec
mov
mov
outsb
xchg
imull
xchg
loop
adc
out
sahf
out
add
dec
add
mov
add
cmpsb
fucompp
jg
in
mov
dec
cwtl
ret
repz
in
jecxz
push
out
pop
fmull
leave
stc
syscall
or
push
sahf
add
psrlw
lea
adc
cmp
repz
inc
adc
repnz
repz
adc
out
jbe
pop
mov
in
sbb
jns
mov
pop
mov
ja
cmp
aad
push
and
mov
add
or
jnp
inc
or
jg
sub
iret
repz
and
sub
add
pop
mov
pop
cmp
jne
inc
sahf
adc
lahf
iret
sub
inc
pushf
out
cmp
xchg
jo
clc
fs
or
jb
mov
add
mov
push
rolb
in
jmp
psraw
paddsb
mov
scas
push
jg
push
sbb
add
xchg
push
leave
cmpsl
adc
out
shll
jb
enter
sarl
xchg
out
jns
add
add
jns
pop
mov
mov
rorb
pop
rcl
mov
rcrl
xchg
jae
add
or
pop
aam
sbb
jb
aam
aam
push
iret
fwait
sbb
pusha
movsb
dec
aam
aam
cwtl
aam
iret
repz
mov
mov
sahf
mov
lret
out
or
xchg
jl
out
sti
or
addr16
aad
adc
mov
aad
aas
cmp
repnz
or
or
and
inc
pop
aad
ds
jg
mov
iret
dec
or
mov
cmp
rcll
pop
xlat
in
in
daa
loop
sbb
sti
bswap
repz
pop
adc
sbb
mov
xor
leave
repz
and
iret
repz
test
repnz
repz
sub
cmpsl
jp
mov
das
xchg
push
leave
addr16
call
xchg
mov
and
and
aaa
xlat
incl
mov
xlat
pop
xlat
movd
jae
cmp
or
test
or
pop
mov
rcll
fcoml
leave
repz
adc
mov
jns
testl
fmulp
repz
push
push
adc
sub
sbb
xor
pop
aas
and
dec
aaa
jns
mov
imul
jns
and
and
out
mov
out
in
sub
jns
leave
repz
out
cmp
sarl
sbb
mov
dec
xor
ss
adc
daa
inc
rsqrtps
out
cmp
dec
pop
es
jmp
xor
dec
arpl
adc
addr16
adc
test
cmp
std
jp
ljmp
pop
aas
inc
push
push
inc
sbb
inc
push
push
lret
xchg
mov
or
popf
jbe
aaa
das
jns
rcll
cmp
push
add
jae
add
add
add
repz
or
or
mov
jbe
or
aaa
or
or
adc
adc
and
daa
daa
inc
push
addr16
das
push
shr
mov
imull
push
jbe
cmp
and
jb
pop
in
mov
jb
mov
sub
mov
aas
dec
ret
xchg
fcmovne
aas
xlat
sbb
data16
lea
arpl
add
jmp
jns
out
dec
inc
inc
cmp
repz
out
sbb
or
call
clc
hlt
lock
call
cmp
aam
in
sahf
test
test
repz
mov
jl
cmp
repz
pusha
pop
push
cmp
es
xor
add
pusha
adc
imul
mov
mov
test
adc
and
in
add
cmp
std
sub
and
adc
sub
fsts
movsb
add
cmpsb
fisttps
mov
movsl
sbbl
sbb
fisubl
inc
ja
add
mov
inc
mov
fildll
in
iret
mov
in
call
adc
xchg
outsl
mov
fidivrl
xor
fcomp
loopne
adc
stc
jb
jle
div
and
les
push
orb
cmpsl
mov
inc
inc
hlt
push
pop
test
mov
daa
fcomps
mov
xlat
incl
push
sub
xchg
mov
cmpsb
fs
das
aas
pop
add
arpl
das
movsb
inc
lock
sahf
out
fcmovbe
out
push
or
iret
sarl
adc
repz
sbb
imul
in
sbb
insb
push
decb
ds
bnd
mov
mov
push
jns
hlt
ljmp
cmp
push
aam
jne
cmp
sub
call
test
in
test
pop
dec
mov
pop
iret
js
or
add
lods
add
outsb
push
xorb
es
icebp
addr16
push
push
xor
fwait
test
inc
jg
push
insb
dec
not
inc
push
xchg
aas
pop
push
lea
aaa
pop
xlat
sti
and
stos
pop
inc
neg
fsubrs
cmp
jg
out
out
fcoms
push
inc
sub
jo
push
roll
add
test
add
mov
xchg
es
out
push
scas
push
icebp
pop
push
sbb
push
js
add
aas
jnp
repz
push
ds
or
iret
cmp
sbb
ds
push
clc
add
pop
adc
iret
mov
push
or
or
or
out
out
adc
add
call
adc
loopne
fcoms
iret
repz
rclb
enter
cmp
repz
and
and
repz
test
jg
and
orb
popf
daa
in
inc
stos
test
xorb
inc
cmp
xorl
sahf
xlat
rcr
cmp
pop
js
sarl
mov
repz
xor
shlb
cmp
imul
jns
xor
das
push
dec
insb
pop
mov
das
mov
mov
pop
enter
inc
enter
pushf
or
ret
mov
adc
repnz
adcb
sbb
leave
sbb
xor
in
int3
into
sbb
rorl
and
sahf
mov
sub
inc
rcrb
and
in
mov
jmp
inc
jno
xlat
xchg
inc
push
add
inc
stc
mov
adc
pushl
cmpsb
iret
decl
js
inc
outsl
loopne
jmp
xchg
test
mov
cmp
decl
inc
mov
popf
sti
jmp
stos
push
inc
mov
repnz
test
call
stos
clc
scas
adc
inc
jmp
aam
imul
loope
jp
iret
inc
gs
xchg
push
cmpsb
scas
mov
jmp
or
addl
cmpsl
xchg
cmp
xor
dec
cmpsl
in
cmp
icebp
pop
cmp
lock
mov
pushl
popa
sar
mov
fsubs
stos
xchg
clc
repz
mov
subb
fwait
xchg
and
add
les
add
out
aas
jno
or
mov
pop
fs
dec
lea
aas
ret
shrl
lcall
mov
icebp
aas
rorb
and
cmpsl
out
aas
inc
cmpsb
mov
insb
scas
add
aas
xor
mov
xchg
mov
std
std
into
popa
test
ja
stos
in
das
dec
pop
loope
les
dec
aas
xchg
les
jne
int
mov
addr16
push
mov
xchg
aas
call
adc
mov
mov
popa
push
pop
sarl
jl
mov
pop
aas
xlat
out
das
lea
mov
inc
inc
aas
movsl
jmp
jg
sub
jge
mov
mov
fstl
arpl
int3
and
call
cmp
jp
and
cmp
aaa
inc
jmp
mov
cmp
cmp
mov
sbb
incl
cmp
test
pop
mov
jne
fldt
cmp
jno
shlb
out
dec
nop
pop
cmp
jmp
xor
push
lahf
inc
pop
mov
sub
dec
in
ss
push
scas
into
imul
incl
rcr
jge
call
mov
xchg
cmp
push
andl
dec
dec
gs
std
orl
fstpt
pop
ficomps
frstor
pop
adc
inc
je
inc
dec
dec
xchg
push
dec
jnp
lcall
xor
popa
push
out
mov
les
hlt
push
xor
xchg
fs
xor
fdivrl
jmp
decl
dec
mov
mov
sub
mov
sbb
dec
jno
repz
fiadds
test
ficompl
jmp
mov
hlt
movl
imul
std
in
leave
mov
add
insb
push
arpl
psubd
or
outsb
cmp
imul
pushl
addr16
add
aam
dec
std
test
movsl
cli
test
xor
leave
mov
aaa
mov
xor
filds
or
shrl
mov
push
xlat
enter
mov
and
mov
cltd
xchg
mov
mov
decl
mov
and
or
adc
stos
sbb
data16
inc
fdivl
incl
jno
add
aad
mov
mov
movsl
in
lahf
xor
mov
js
aas
push
xor
mov
xchg
sbb
push
sub
cmp
fs
add
hlt
push
imul
insb
sbb
xor
dec
add
in
xchg
push
insb
jnp
jmp
or
fnstenv
adc
mov
mov
bound
or
adc
gs
aam
pop
popa
mov
into
pop
cmp
mov
call
cmc
inc
movsl
fisttps
fadd
shll
jmp
outsb
xor
decl
pusha
fidivl
add
in
add
pop
dec
or
cmp
add
daa
adc
call
or
and
test
or
mov
popa
into
push
stc
ficomps
leave
fldcw
and
lcall
xlat
pop
cmp
mov
cmp
lods
insb
mov
in
mov
mov
jmp
mov
lcall
ljmp
fildl
push
fdivl
or
test
fs
ds
ljmp
or
or
push
in
decl
xchg
daa
scas
add
mov
pop
jge
xchg
shlb
push
add
inc
push
imul
xorb
sbb
push
imul
aam
loopne
rorl
jp
adc
dec
frstor
fistpll
mov
mov
aad
mov
call
xchg
shll
cli
ret
push
repnz
addr16
cmpsb
fldl
mov
dec
ss
fisubrl
or
decl
scas
testb
pusha
jp
inc
ret
out
pusha
fists
addr16
mov
jns
imul
jmp
mov
rclb
or
add
mov
das
es
push
mov
or
add
mov
cmpsl
call
ret
sar
lcall
mov
fldcw
ret
es
pushf
mov
insl
incl
test
ss
jmp
addr16
jb
push
add
adc
mov
jnp
sbb
or
mov
xchg
or
out
fdivrl
fisttpl
aam
roll
clc
mov
push
jecxz
lcall
int
mov
mul
ja
outsl
ja
mov
out
cli
jo
ud0
cmp
cli
incl
pop
or
adc
sahf
gs
push
jg
imul
push
js
or
push
addl
mov
cmp
cmpsl
idiv
sub
push
pusha
rorb
imul
scas
fcompl
fstps
adc
or
inc
push
aaa
pusha
mov
test
jg
mov
jmp
mov
xor
mov
add
push
xlat
int
push
ficoms
fldenv
jp,pn
clc
pushl
add
push
sub
mov
or
sbb
add
sub
sahf
out
pop
push
xor
pop
pop
push
dec
mov
sub
push
dec
iret
repz
push
xlat
fcomp
cmp
repz
fcmovnu
fstp
iret
and
in
call
jmp
repz
repz
cmc
div
repz
clc
stc
cli
sti
cld
add
jmp
or
inc
cmpsl
lods
add
lahf
iret
add
je
das
cmp
les
dec
bound
jbe
inc
popl
inc
insl
bound
lds
je
mov
xor
test
aas
and
inc
dec
in
cmpsl
pop
xchg
or
and
aas
pop
inc
cmp
mov
lcall
xor
aaa
cmp
popa
arpl
cmp
arpl
or
test
xor
xor
xor
sub
inc
jbe
pop
insb
imul
data16
gs
add
in
xor
inc
test
xchg
leave
aam
inc
or
leave
aam
xchg
rorb
pop
out
add
das
or
or
je
enter
scas
ss
jbe
sbb
sub
inc
aas
add
add
sbb
jle
gs
stos
or
mov
adc
push
nop
bound
inc
or
test
add
pop
xorl
popa
xchg
cmp
sub
aaa
je
aaa
push
cmpsb
push
fidivrs
inc
push
add
or
add
sbbb
mov
jp
daa
int
mov
inc
aas
inc
jbe
and
pop
inc
inc
push
mov
sbb
inc
pop
idiv
js
outsb
je
jo
inc
inc
add
mov
popa
mov
lret
mov
iret
int
push
dec
cmp
mov
andb
sbb
mov
pop
mov
outsb
jne
xor
mov
push
pop
xor
xor
insl
fwait
cmp
add
int
mov
xchg
into
pop
jo
xchg
adc
pusha
in
mov
pop
subl
lret
dec
lods
push
adc
outsl
add
lods
dec
pop
mov
mov
lcall
cmp
sbb
pop
movsb
sub
push
xlat
mov
arpl
add
mov
inc
jb
andb
dec
popa
jo
sbb
add
mov
outsl
test
inc
sub
jno
xor
stos
loop
in
jb
pusha
rcrb
in
nop
pusha
lds
inc
push
cmpb
arpl
or
mov
popa
add
out
mov
je
addr16
xchg
shlb
gs
jb
push
jae
inc
stos
data16
inc
outsl
arpl
insl
dec
popa
mov
sarl
xlat
inc
push
bound
ja
inc
jbe
cmpsb
outsl
pop
adc
addr16
mov
push
dec
xor
bound
xor
xchg
ret
inc
add
add
add
insl
adc
or
sub
lods
inc
add
outsl
pop
inc
dec
xchg
mov
dec
dec
dec
mov
adc
addr16
sbb
sbb
inc
stos
mov
push
push
sbb
flds
inc
dec
pop
bound
inc
hlt
popa
jmp
arpl
je
testb
pusha
in
insl
or
xchg
sub
push
pop
inc
sub
fldt
adc
nop
xlat
testl
sub
adc
push
add
sub
rorb
sbb
dec
push
or
push
add
xor
ds
push
xor
fstps
out
sbb
xor
push
roll
ret
repnz
pop
aas
ljmp
bound
and
fildl
gs
dec
cli
test
sbbb
cmp
push
jmp
gs
stos
mov
fistpl
inc
in
cltd
sub
jge
into
xchg
outsl
push
or
sbb
adc
sbb
fsubrs
loopne
and
push
icebp
mov
call
hlt
in
fsts
fld
insb
cld
mov
pop
stc
mov
cmpsb
xor
call
jae
mov
mov
xchg
mov
inc
cmp
aad
stc
insl
jmp
jno
push
push
or
stos
jnp
sarl
inc
sbb
inc
or
outsl
cld
push
jns
jmp
cwtl
xchg
push
mov
pop
ret
lock
les
push
xchg
or
cli
call
mov
icebp
imul
scas
addr16
jle
data16
ss
pop
orb
testb
insl
pop
xchg
mov
loope
ljmp
popa
pushf
mov
sbb
push
pop
lock
roll
pop
mov
inc
push
adc
xchg
aas
out
xchg
lret
cmc
adc
xor
std
jns
fbstp
ljmp
sbb
and
je
jmp
mov
mov
ret
aam
jmp
loop
sbb
mov
xor
js
sti
out
out
mov
ds
cltd
mov
jmp
xchg
push
test
imul
mov
jmp
loop
pop
mov
jbe
mov
pop
addr16
decl
mov
fisttps
jecxz
and
jbe
std
pop
xor
pushl
insb
xor
jb
fidivrs
stos
jno
mov
mov
mov
sbb
jecxz
es
mov
inc
cwtl
data16
loopne
mov
stos
sbb
sub
pop
adc
iret
dec
push
outsl
mov
adc
inc
outsl
sbb
mov
aas
es
in
xchg
das
inc
inc
iret
jmp
les
mov
cmpsb
push
adc
ja
lods
in
aaa
pop
pushl
jecxz
sbb
cmc
and
cmp
push
xor
add
and
call
dec
test
mov
cmc
lret
cltd
mov
add
xchg
pushl
repz
pop
ret
mov
mov
pop
imul
jg
inc
idiv
incl
clc
push
pusha
cld
stc
xchg
push
notl
jg
push
sub
loop
roll
outsl
sahf
xchg
cmp
clc
loopne
iret
cmp
add
nop
jb
inc
cmp
mov
pop
adc
jg
dec
add
adc
pop
pop
push
adc
adc
or
in
lcall
imul
outsb
dec
out
xchg
xor
push
sub
loop
ja
push
mov
orb
jmp
es
mov
xchg
mov
cmpsb
js
add
and
or
sub
test
cmc
addr16
imul
iret
push
int3
stc
ljmp
testb
xchg
jno
out
leave
aam
or
mov
inc
pop
add
int
lods
xor
std
inc
mov
xchg
call
jle
jmp
add
jl,pt
cltd
insb
add
pushl
int3
fimuls
pop
fsubs
lcall
push
les
int3
dec
clc
test
ret
iret
xchg
inc
push
stc
pop
dec
cwtl
jno
ret
inc
outsb
lret
mov
push
outsl
or
xor
rcrb
xchg
test
data16
adc
sbb
cmc
stos
aam
mov
fdivl
jb
je
cmp
call
xchg
je
std
cmp
mov
and
sub
cmp
lods
leave
push
push
popa
adc
bound
dec
outsl
arpl
adc
sbb
gs
outsb
sub
ljmp
test
js
aas
inc
cmp
and
aam
lods
rclb
test
mov
jl
cmp
movsl
js
cmp
pop
or
sub
jl
cmp
arpl
pushl
test
or
and
sub
xchg
and
mov
cmp
pop
push
and
push
xor
bound
loopne
sub
mov
jmp
fs
xchg
ss
mov
clc
ljmp
mov
gs
test
es
pop
jp
inc
mov
jp
cmc
jg
fcompl
cmpsl
sbb
cs
adc
cmpsl
mov
imul
mov
add
jp
std
shll
inc
mov
push
dec
in
mov
jno
int
lcall
icebp
outsb
sbb
and
cmpsl
lahf
stos
aam
fistps
mov
sub
incl
push
jecxz
mov
inc
xchg
fldl
cwtl
cwtl
clc
popf
adc
cmpsl
outsb
dec
xor
or
push
nop
xchg
insb
and
lret
sub
inc
xlat
inc
xor
call
mov
movl
dec
pop
jnp
daa
jle
dec
inc
pop
cld
mov
jecxz
push
or
je
pushl
jmp
jp
jp
mov
fistl
ja
dec
and
sbb
inc
push
sub
mov
jle
xlat
std
les
xchg
push
xor
adc
mov
ds
adc
daa
dec
icebp
or
mov
fcoml
add
lods
nop
or
jmp
mov
std
jmp
mov
mov
movsl
iret
or
insl
bound
pop
aad
shll
pop
jge
ret
ljmp
cltd
mov
repnz
cwtl
jne
mov
mov
jns
or
push
addr16
loopne
decl
inc
fs
mov
inc
or
jp
lret
sub
adc
sub
aad
cmp
es
xlat
push
in
stc
daa
cmp
push
mov
jp
shll
fists
xchg
clc
in
fdivl
dec
mov
nop
cltd
hlt
pop
out
out
mov
lret
adc
es
jp
dec
inc
add
cmp
decl
inc
push
cli
repnz
outsl
push
out
lcall
call
xor
and
pop
adc
push
jmp
inc
sub
jle
mull
push
fcomi
lcall
xor
stos
mov
iret
fucomip
jmp
in
mov
pop
roll
push
nop
fcomi
call
sti
adc
jle
sbb
jmp
fdivrl
into
push
xor
cmpsb
sar
cli
std
mov
icebp
roll
pop
xor
scas
sub
sub
sub
ljmp
or
lahf
push
pop
mov
fsts
mov
mov
out
call
and
jo
mov
daa
sbbb
lds
test
ljmp
or
stc
ret
mov
xchg
pop
dec
sbb
dec
push
mov
in
sbb
jmp
outsl
lcall
scas
test
dec
jp
fistpll
inc
and
mov
test
inc
incl
out
dec
fcmovnu
sub
stc
fnstenv
addl
mov
repz
arpl
incl
inc
xchg
xlat
mov
ljmp
cmp
stos
in
mov
pusha
lods
xor
call
cld
out
pop
movsb
rclb
jae
fldcw
and
push
stos
mov
pop
lock
lcall
push
es
push
les
pusha
xor
std
decl
sbb
pop
loop
pop
mov
jg
xchg
mov
idiv
call
inc
jo
push
add
outsb
cmp
addr16
jno
les
shll
mov
and
pop
fldt
fimuls
xchg
outsl
clc
sub
sbb
lret
mov
dec
jl
sbb
inc
incl
insb
cltd
add
adc
mov
cmp
mov
cmp
aaa
cld
jmp
jae
movsb
sub
sbb
dec
xchg
push
addl
enter
call
out
mov
mov
fmul
arpl
jl
lods
mov
mov
push
cs
mov
dec
pop
cld
pushl
push
popa
lcall
jge
insl
cmp
ret
pop
lock
mov
lcall
or
sub
mov
mov
inc
fildl
mov
cwtl
aam
pushf
lret
inc
sub
mov
xchg
lret
jmp
jnp
and
jp
dec
rolb
mov
cltd
adc
incl
out
testl
pop
dec
and
sbb
pop
es
test
push
dec
clc
jns
call
sbb
inc
inc
dec
gs
cmp
or
lcall
inc
jbe
xor
call
xchg
mov
enter
cmp
call
adc
repnz
mov
bound
mov
sub
fcoms
call
pop
jl
sbb
pop
je
fnsave
jns
cmp
pusha
dec
outsl
aam
jp
jge
out
nop
push
aaa
fucomp
mov
ret
outsb
je
rcll
les
nop
xor
cmp
aad
mov
scas
ret
mov
jge
pop
out
or
add
jg
sub
clc
ret
repz
nop
adc
push
mov
jmp
pop
rcrl
rclb
add
bound
and
out
in
cmp
dec
push
mov
testl
inc
jmp
pop
fsubrs
out
pop
in
imul
xor
daa
scas
shrl
pop
adc
dec
hlt
mov
sub
cmpsl
mov
mov
pop
test
adc
inc
insb
fdivrp
outsl
clc
call
pop
mov
jge
inc
cli
cmpsb
push
inc
sub
ljmp
adc
pushl
in
setl
mov
cli
or
xchg
jmp
scas
es
fbstp
push
pusha
jae
sbb
xchg
xchg
push
inc
adc
mov
test
ljmp
popf
aam
test
orl
cld
push
add
mov
cmp
aaa
adc
fisubs
popf
jge
dec
jns
rcrl
decl
pop
jp
outsl
jns
pop
push
ret
or
sub
mov
imul
sar
aaa
ja
mov
fmull
in
scas
sar
pushl
std
sub
push
jecxz
xchg
or
arpl
sbb
or
addb
sbb
ret
and
inc
sarl
xor
lcall
add
push
dec
mull
push
cmp
jb
or
jle
xchg
out
push
lods
lea
fstps
or
pinsrw
add
push
sbb
inc
incl
lds
xor
je
pop
call
adc
sub
cmp
call
xchg
add
pop
movsb
pushf
mov
mov
push
ss
test
mov
pop
lock
jmp
cltd
push
ret
mov
sub
nop
pop
and
pop
dec
lods
pop
stos
cmpsl
lcall
cld
push
pop
shl
adc
cmp
cmc
jl
mov
jg
loope
test
lcall
adc
fldt
pop
xchg
push
push
and
mov
jo
mov
idivb
repnz
loopne
incl
call
inc
rcll
xchg
push
adc
iret
jae
lock
xchg
incl
sub
loopne
ss
or
pop
pop
loope
mov
dec
dec
mov
incl
xchg
lods
xor
insb
lock
jb
pusha
dec
es
jmp
pushf
hlt
jg
jg
je
jge
cmp
xor
inc
mov
imul
pushl
pop
pop
lods
ljmp
cmc
mov
pop
jbe
xor
pop
cmp
ljmp
and
jg
jnp
int3
ror
dec
pop
sbb
aas
mov
push
data16
call
push
jns
in
pop
dec
bound
cltd
outsl
neg
std
mov
pusha
fnstenv
mov
call
subb
inc
loop
jnp
int
cmp
in
pop
mov
push
mov
push
inc
adc
push
ss
ljmp
in
fstpl
inc
arpl
sti
ljmp
inc
aas
clc
push
mov
pop
sub
mov
lock
leave
test
fwait
cmp
ljmp
mov
test
mov
pop
insl
add
jno
iret
cwtl
jg
and
sbb
lcall
movsl
lcall
loope
mov
bound
data16
cmp
orl
push
xchg
pop
and
or
hlt
jle
dec
add
cmc
mov
pop
sub
jmp
int
pop
iret
std
in
adc
lods
shll
aam
incl
out
and
fcos
jmp
or
or
mov
or
aas
push
iret
push
test
mov
sar
cli
lcall
sub
push
loopne
imul
sub
or
adc
ljmp
loop
cmp
fdivrl
scas
jbe
fidivl
pushl
cmp
jecxz
in
repnz
sbb
data16
ficoms
xor
faddl
rol
lahf
es
pushl
ret
mov
call
jmp
jae
sub
lret
or
es
sub
jmp
mov
stc
xor
outsl
repnz
pop
add
dec
lcall
stos
subl
mov
lcall
lock
fisubl
mov
dec
out
aad
mov
xchg
lcall
out
into
bound
sub
nop
lret
mov
cmp
decb
sarb
and
xor
dec
out
mov
incb
movsl
mov
or
ljmp
cmp
ds
outsb
daa
sbb
pop
sbb
in
sub
mov
lods
jns
into
jns
inc
sbb
cwtl
cld
aaa
dec
xchg
cmp
fisubl
int3
xorl
mov
xchg
jg
inc
cld
nop
cmp
mov
dec
fcomi
mov
mov
in
mov
push
dec
mov
pop
mov
inc
aaa
push
jae
dec
mov
jno,pn
jl
mov
popa
mov
or
add
jnp
iret
ds
stc
mov
cmp
aas
sbb
roll
dec
jno
es
or
pop
cmp
mov
lds
cmp
stos
int3
mov
cmp
incl
xor
std
xchg
or
push
xor
int
adc
pop
dec
decl
xor
pop
popl
sahf
inc
cmp
mov
add
xchg
dec
scas
jle
cmp
popa
dec
cwtl
es
mov
fdiv
repz
imul
aad
int3
sub
scas
mov
add
pop
nop
push
fwait
mov
ljmp
inc
inc
mov
loop
sub
ficompl
popf
adc
pushl
jo
pop
call
lds
and
outsb
int3
leave
pop
inc
sub
mov
jmp
scas
sbb
test
sub
pop
inc
mov
andb
jg
mov
pop
mov
sbb
cmp
or
dec
push
incl
lret
in
cmp
and
aam
xlat
aad
nop
call
std
jg
cmpps
jge
sahf
jo
fdivs
ret
inc
aad
mov
xorl
pushl
stos
pop
rcll
dec
into
pop
sub
and
jge
mov
nop
cmp
jmp
imul
dec
mov
jge
push
add
sub
decl
jl
cmpsb
mov
xlat
mov
negl
and
jmp
and
idivb
into
std
mov
faddl
or
iret
jo
mov
xchg
jg
cld
inc
mov
in
fistl
jmp
mov
clc
decl
mov
movsl
jp
test
xchg
xor
aam
fs
mov
in
jne
mov
call
push
sti
repz
test
xor
loope
fmull
mov
rcll
sbb
cmc
ljmp
in
inc
pop
dec
cld
fisttpl
and
jbe
add
sahf
stos
push
pop
decl
fiadds
insl
in
scas
adc
stos
mov
shll
sub
aad
cwtl
sub
test
ud0
pushl
inc
lock
sbb
or
adc
fisttpl
lret
cmp
popa
in
push
insb
sbb
dec
xchg
dec
fcomip
decl
aas
jo
pop
pop
push
push
mov
insl
push
pop
frndint
mov
hlt
out
xor
decl
jne
xchg
mov
sub
imul
fisubrl
mov
pop
cmp
call
rolb
mov
pop
mov
fs
std
ss
call
lock
shll
orb
dec
inc
dec
adc
out
cltd
jl
cmp
adc
imul
sbb
pop
mov
pushl
xchg
push
loopne
pop
cmp
das
and
xor
fwait
lahf
rclb
decl
mov
cmp
inc
xor
inc
out
inc
sub
xor
cmp
decl
sbb
xchg
aas
jbe
lea
dec
ja
out
imul
push
inc
add
nop
pop
std
sub
ljmp
and
popa
lods
fidivrl
jle
mov
mov
movsb
xor
daa
add
dec
std
add
lds
sub
stos
xchg
jmp
int3
xor
into
inc
push
fnstcw
mov
aad
lcall
lahf
pop
inc
ret
movsl
das
xchg
icebp
addr16
addr16
stos
adc
inc
adc
sbbb
or
rcll
hlt
daa
push
sub
and
jnp
cmp
mov
inc
mov
outsl
aam
and
insb
add
iret
cmp
jecxz
dec
loopne
adc
ret
pushl
sub
out
cmp
inc
dec
jecxz
cmp
icebp
icebp
aam
jg
cmp
idivb
inc
rorl
cs
shll
cmp
aad
jmp
push
filds
xchg
js
adc
shl
test
decl
dec
ja
and
adc
sbb
inc
push
mov
repnz
movsl
inc
loope
push
es
mov
lret
and
xlat
movsb
std
aam
scas
icebp
cmp
loop
out
decl
cmovo
cmpsb
inc
and
inc
xor
andb
adc
mov
test
decl
ficoms
sub
xor
std
loope
int
sbb
mov
mov
clc
cmp
dec
jnp
js
pop
popf
pushf
cli
and
xchg
incl
insl
push
fildll
cmpsl
sbb
inc
in
cmova
mov
inc
fstpt
cmp
hlt
push
add
imul
mov
lcall
mov
out
fadds
xchg
fadds
mov
sti
negl
fisttps
adc
adc
mov
pop
fcoml
cmp
das
inc
call
mov
or
int
mov
and
leave
push
outsl
clc
or
icebp
xor
xchg
out
fistpl
fsubrl
adc
decl
sbb
sbb
das
sbb
and
cli
int3
repz
mov
mov
sub
adc
add
dec
das
mov
and
fnstsw
sbb
and
insb
aad
out
and
adc
ret
jecxz
out
pop
into
cmp
in
mov
pusha
fldt
out
jmp
test
push
push
and
int
cld
add
es
dec
loop
dec
mov
dec
xlat
pusha
or
mov
sti
lret
cmp
or
fwait
ret
dec
sti
push
pop
mov
sub
stos
clc
ljmp
test
insb
adc
push
sub
das
rclb
call
dec
push
push
jbe
popf
leave
out
dec
ljmp
ljmp
in
cli
enter
sub
sub
jecxz
mov
std
call
repz
cmp
mov
sahf
fiaddl
push
cld
cmp
fcom
sarb
sbb
xor
dec
sti
dec
mov
mov
sbb
mov
adc
and
sub
loope
cmp
lods
aas
mov
jb,pt
sub
dec
sbb
cmp
pushl
loopne
sub
dec
fwait
pop
mov
fs
dec
sbb
mov
mov
decl
jle
and
jo
in
mov
xlat
mov
cmp
in
lcall
cli
jge
faddp
inc
fs
sub
outsl
test
repz
cli
ss
mov
mov
mov
jle
sub
pushl
xchg
scas
dec
jmp
push
xor
push
jg
repz
nop
add
sbb
push
jnp
movsb
xchg
clc
andl
daa
cs
xchg
add
std
bound
aas
xorb
jmp
xchg
or
cmp
fldt
pop
dec
jg
jo
into
fisttpl
jg
add
jmp
xlat
fimull
mov
xor
lret
sub
in
imul
pushl
add
jbe
cmpsl
sub
sahf
imul
add
push
sahf
bound
call
sub
mov
jo
sbb
or
fmull
jae
xor
pushl
mov
dec
shrb
cmp
sbb
mov
pop
inc
ljmp
sbb
or
in
mov
ret
xchg
mov
repnz
ljmp
adc
mov
push
inc
jae
out
outsb
adc
pop
dec
sbb
sbb
loope
sar
incl
xor
sub
mov
test
inc
cmc
inc
fcompl
lret
jg
in
push
adcl
fsubl
xor
xchg
ljmp
mov
stos
jg
dec
push
test
xor
lock
call
jae
insl
inc
inc
mov
add
shlb
ljmp
jecxz
push
roll
cmpsb
dec
mov
add
push
push
mov
fidivrs
loopne
jae
lret
push
std
test
int3
js
dec
fwait
adc
imul
gs
mov
ljmp
jg
stos
xchg
pop
fistl
lock
imul
pop
mov
xchg
call
cmp
in
or
cwtl
rcrb
ja
jg
fsubl
je
xchg
inc
inc
push
xchg
xor
ljmp
cmp
mov
sub
inc
sbb
stc
leave
mov
cmpsb
xchg
loope
ja
cmp
decl
and
push
push
jle
dec
inc
sbb
push
mov
std
cwtl
mov
jg
mov
mov
xor
inc
mov
sub
jg
incl
dec
pop
mov
fldcw
in
dec
scas
test
lea
and
gs
outsb
pop
push
pop
cld
pushl
out
and
mov
fs
loopne
push
mov
cld
xchg
bnd
sbb
sub
cmp
bound
add
in
cmpsb
incl
push
mov
inc
pop
in
hlt
jmp
ljmp
dec
cmp
mov
lret
pop
shlb
sbb
sti
stos
pop
les
dec
mov
jmp
dec
adc
aad
push
popf
fisubs
mov
pushf
xchg
fnsave
xchg
inc
adc
decl
outsb
xchg
mov
sub
xchg
in
dec
mov
jecxz
inc
jmp
stc
dec
push
pushf
divb
insl
in
pop
fsubs
lods
push
lcall
xchg
cmp
or
flds
cmp
inc
push
rorl
mov
lcall
outsl
and
repz
push
add
jbe
out
mov
and
mov
xor
icebp
call
mov
cmp
mov
js
xchg
out
movsl
pop
std
call
cmp
outsb
out
int3
loop
or
fdiv
in
sar
ljmp
call
fldenv
inc
jp
mov
mov
sub
frstor
popa
or
push
mov
insl
cmp
aaa
mov
mov
adc
outsl
cmpsb
sbb
int
xor
scas
lea
in
lods
ss
test
outsb
sbb
push
and
test
mov
ret
int
pop
lods
fs
and
stos
int3
call
adc
xchg
jne
aam
cmpsb
pop
icebp
sarb
int3
mov
daa
xchg
jns,pt
sahf
sar
incl
adc
lock
call
shll
dec
push
add
call
inc
sub
push
aad
inc
cmp
out
xchg
sahf
jb
mov
ret
mov
cmpsb
or
lcall
pop
mov
dec
mov
sub
mov
clc
mov
scas
mov
add
sub
dec
xor
jecxz
push
xchg
cltd
sbb
insb
test
lock
jmp
ret
in
adc
fwait
sub
es
fisttpl
push
jg
jae
imul
jmp
mov
call
jb
pop
or
gs
enter
out
mov
fildl
add
leave
test
mov
xchg
imul
out
sub
mov
call
clc
mov
mov
jno
push
leave
or
xchg
rol
push
cld
lahf
and
jmp
xchg
mov
fidivrs
in
pop
mov
fcoml
mov
push
xor
jo
out
call
ds
out
mov
push
sbb
loopne
add
loopne
mov
js
pop
rorb
fistl
loope
ss
dec
fcmovnb
sub
imul
test
and
mov
mov
sbb
or
out
lds
test
adc
in
cltd
std
fistpll
ds
inc
xchg
jno
lds
and
xchg
jge
in
cmp
dec
mulb
adc
lds
xor
scas
movsl
fldcw
cld
pop
jne
cs
je
lods
cmp
pop
call
mov
mov
loop
xchg
add
out
and
add
inc
iret
jnp
fistpl
inc
and
idivb
xchg
push
inc
dec
pusha
pusha
push
adc
nop
jecxz
xchg
cli
jge
test
jp
imul
ljmp
ja
lcall
les
fimull
sti
mov
mov
inc
shrb
fdivrs
cmpsl
in
sub
mov
push
add
or
inc
sub
ret
fdivs
cmp
fidivrl
enter
push
imul
clc
mov
adc
add
sub
jmp
rolb
stc
fmuls
or
inc
pushl
push
or
cli
mov
sbb
cmp
inc
dec
gs
mov
push
adc
inc
ljmp
dec
scas
mov
xor
mov
stos
int
dec
xchg
lds
pop
test
dec
outsl
or
xchg
out
mov
mov
arpl
mov
pop
cli
lcall
shl
xchg
pop
pop
lock
loop
lret
pop
sub
sahf
and
sbb
call
mov
fwait
dec
xchg
push
jecxz
imul
jo
das
movsl
pop
cmp
call
and
icebp
add
sbb
sub
fldcw
mov
push
lahf
insl
pop
imul
jg
xchg
jb
push
pop
cli
ljmp
shlb
xchg
mov
xor
das
add
mov
les
xchg
decl
pushf
push
lods
mov
cmpsl
sbb
jno
pop
dec
adc
jmp
pop
xor
pop
jnp
in
cmpsb
jg
push
dec
mov
push
adc
jl
push
push
loope
incl
repz
push
or
jecxz
push
add
in
faddl
adc
sub
cmp
test
aam
movsl
clc
push
mov
mov
roll
mov
push
movsb
in
pop
movsb
ds
and
vcmpsd
adc
push
mov
xchg
cld
jb
lods
insl
stc
jge
sub
inc
popa
or
popa
fimuls
mov
mov
movsb
lret
jne
scas
sar
jg
sub
mov
loop
push
fidivrs
sub
mov
js
xchg
shlb
sub
dec
sbb
js
or
inc
pop
daa
std
mov
pop
enter
push
push
int
mov
inc
mov
add
outsl
ds
fnstsw
movl
push
inc
sbb
inc
cwtl
mov
xchg
push
movsb
pop
ljmp
sbb
or
adc
dec
fadds
mov
xchg
hlt
sbb
fildl
imul
in
or
mov
clc
mov
adc
scas
dec
pusha
or
push
adc
or
push
xchg
les
pop
or
push
in
outsl
xchg
cmp
cmpsl
mov
pop
daa
pop
mov
jae
loopne
add
jl
and
push
outsb
out
out
into
mov
dec
adc
push
int3
jo
or
sub
mov
popa
movsb
out
js
pop
iret
std
ret
mov
enter
push
pop
mov
out
mov
jp
xor
addr16
dec
jg
pushl
jge
xor
cwtl
inc
xlat
test
cmp
mov
jmp
addr16
or
inc
xchg
ljmp
dec
mov
cmp
sbb
lahf
jbe
scas
sbb
scas
cs
cmpsl
decl
push
repz
sub
push
pop
xor
push
loope
and
adc
incl
jb
or
xchg
mov
add
pop
popf
gs
jns
and
cmp
mov
incl
imul
xor
aam
jns
in
icebp
xor
inc
js
mov
lret
shrl
in
cs
addr16
mov
pop
scas
jae
clc
inc
popf
or
mov
decl
ja
sbb
insb
mov
call
inc
push
je
in
sbb
in
jp
sbb
add
pusha
push
cmp
incl
sub
insl
movsl
xor
int
sub
jno
fists
rcrb
lret
jo
movsb
pop
mov
cmp
and
ljmp
decl
imul
cmpsb
ret
add
sub
cmpsl
jle
cmp
aad
imul
inc
mov
stos
lods
insl
std
cmp
mov
jo
jns
add
incl
pop
pop
xchg
loop
pop
mov
outsb
mov
mov
pop
sbb
rcrb
out
and
jl
or
pop
cmpsb
cli
decl
cli
loopne
in
dec
xchg
lea
mov
dec
xchg
enter
sti
pushl
mov
sbbb
aas
fstps
mov
andl
orb
lcall
jg
sub
js
and
repnz
shr
and
inc
repnz
shrb
inc
push
fxam
cwtl
jmp
out
mov
xchg
incb
push
and
mov
test
push
xchg
lcall
ret
icebp
sub
movsl
cmc
iret
push
leave
movsb
and
das
mov
lock
mov
jbe
pop
js
mov
jae
rol
leave
push
mov
sub
repz
or
pop
pop
push
xor
cmp
mov
jle
pushf
or
push
scas
pop
inc
push
int3
shll
pushl
adcb
jle
es
jge
or
sbb
sub
inc
push
movsb
or
or
decl
ficoml
verr
outsl
pop
imul
sbbl
xor
pop
les
mov
test
lea
outsb
lods
in
aad
cmpsl
mov
jecxz
mov
mov
inc
adc
ja
jg
cltd
or
shrb
adc
push
push
sahf
inc
into
repz
cmpsb
lcall
mov
sbb
mov
rorb
adc
sbb
push
inc
and
bound
decl
xchg
cmp
mov
mov
cmpsb
cmp
xchg
and
punpcklwd
xchg
shll
ljmp
mov
sub
push
pop
fnstenv
cli
xor
in
clc
pushf
mov
fwait
dec
jmp
inc
xor
icebp
cmc
aam
ficompl
adc
ljmp
scas
pusha
int3
lock
push
outsl
pop
push
out
daa
lcall
decl
stos
xchg
mov
das
inc
js
adc
or
jns
gs
outsb
inc
dec
sbb
jle
dec
inc
sahf
fidivs
cmp
xchg
scas
imull
lea
sbb
add
lcall
je
test
xor
push
and
cmpsl
xchg
jno
mov
fisubrl
sbb
jmp
push
shlb
mov
movsl
jns
jb
mov
daa
push
jmp
push
ficoms
ljmp
mov
ljmp
xchg
xor
outsb
xchg
jb
shlb
xchg
jns
call
fs
add
add
lret
mov
jnp
daa
mov
xor
lcall
push
int3
stos
jge
loop
sbbl
andb
stc
imul
dec
testb
inc
pop
mov
inc
mov
movhps
test
aas
mov
in
test
incl
lcall
sub
mov
ljmp
add
into
lcall
sahf
in
jp
out
xchg
sub
ret
out
and
inc
test
sub
out
adc
incl
push
dec
lahf
fucomi
gs
dec
rorb
lock
in
inc
stos
mov
dec
dec
fs
fs
lods
inc
in
mov
lods
aas
mov
fnsave
repz
popf
mov
xchg
mov
xchg
rcrb
jmp
and
mov
mov
push
push
movsl
pop
cwtl
cltd
lret
stc
in
jg
jg
mov
cs
pop
dec
cmp
xor
and
adc
popf
insb
les
sbb
call
and
push
push
cmpsb
pop
push
sbb
mov
mov
cli
adc
fs
call
jne
ss
aam
fldt
xchg
stc
into
pushl
les
jns
decb
outsb
adc
pop
in
inc
std
incl
pop
in
icebp
scas
outsl
lea
jg
xchg
outsl
xlat
out
dec
add
es
cmp
out
adc
test
rep
sub
fwait
ljmp
test
ljmp
ljmp
inc
pop
inc
cld
insb
into
mov
inc
dec
sbb
jge
je
cmc
je
xchg
pushf
cwtl
stos
jbe
and
inc
jp
mov
decl
adc
das
xor
jp
fidivrs
push
jns
pop
outsb
ljmp
push
fbstp
dec
clc
jo
mov
mov
and
jg
dec
cld
fisubs
clc
xor
out
cmp
fnstcw
pushl
jg
xchg
adc
ret
xlat
je
decl
hlt
jae
pop
cmp
test
sub
les
pop
mov
fwait
testb
aad
lret
js
and
fldenv
int3
push
jmp
push
loopne,pn
push
push
dec
aad
call
adcl
incl
jmp
jmp
lcall
xlat
hlt
addb
push
jle
hlt
cmp
inc
aaa
stc
jbe
into
and
into
out
int
push
jo
adc
mov
mov
lcall
maxps
mov
cmpsl
cmp
mov
mov
ret
cmp
sbb
xor
cmp
mov
adc
nop
scas
sub
xchg
shr
fdivrs
subl
mov
hlt
mov
sub
push
cmp
mov
mov
test
push
mov
js
test
dec
bound
sti
and
xchg
in
ljmp
jl
fcmovne
ds
or
loop
dec
clc
nop
xor
add
sahf
insl
bound
sub
add
out
jl
inc
clc
cli
xor
jne
mov
das
jo
fcomps
cmp
mov
pop
inc
dec
jle
push
jmp
cmp
shlb
xchg
ljmp
icebp
jmp
jle
and
jne
ficomps
decb
and
popf
dec
dec
pop
jnp
hlt
xor
repnz
lcall
fs
inc
dec
pusha
int
inc
xor
fldt
push
ja
mov
call
movsb
outsl
push
push
jb
popa
gs
dec
test
lahf
push
daa
call
fstp
mov
mov
mov
imul
dec
lret
cmc
sub
addr16
add
push
push
and
decl
adc
and
aam
addb
adc
inc
int3
dec
outsl
jo
cli
and
pushl
inc
std
mov
lret
test
das
pop
and
pop
jns
jne
lcall
lcall
sub
pop
lcall
inc
scas
xchg
adc
pop
sti
test
std
jg
lods
sbb
mov
mov
cmp
and
call
aam
mov
mov
inc
jno
add
add
loop
xchg
cmp
out
xor
sti
add
sahf
xor
cmpsl
test
dec
mov
lahf
inc
mov
adc
call
clc
mov
int
add
inc
mov
mov
cmc
pop
mov
pushf
add
sbb
cmp
pop
jmp
jl
push
push
sub
ss
sbb
inc
cmpsl
ja
jmp
pop
ljmp
sub
adc
jmp
jle
sbb
mov
jb
mov
jns
sub
mov
xor
fs
inc
xor
jmp
mov
push
out
push
inc
dec
dec
jae
insl
jg
jmp
mov
pushf
cmp
sub
decl
sbb
loop
xlat
fiaddl
roll
add
cmp
push
dec
imul
sub
jmp
push
jnp
jecxz
xchg
and
add
push
adc
push
mov
xor
lcall
mov
scas
cld
cmp
mov
lods
stos
in
test
mov
movb
mov
loop
sbb
mov
sub
jno
xchg
and
repnz
jg
in
and
dec
aam
les
hlt
adc
push
dec
das
add
inc
inc
enter
ss
sti
jg
int
in
ds
mov
sub
loopne
fdivrl
jecxz
mov
js
push
test
fisubs
push
sahf
jecxz
adc
xchg
mov
mov
mov
sub
jmp
int
pop
and
loope
push
les
jns
cmpsb
xchg
in
xchg
pop
int
xor
stos
test
push
decl
mov
out
fdivs
adc
mov
outsb
rorb
cmp
jmp
ret
loope
xor
insb
clc
lahf
xchg
cmp
fs
and
ss
jbe
clc
push
pushf
addr16
and
clc
add
xor
or
mov
lock
and
add
mov
loop
leave
repz
pop
and
loop
add
test
mov
push
std
and
mov
dec
repz
shll
jmp
insb
es
push
pop
mov
cmp
mov
js
dec
cmp
add
pushl
add
addb
sbb
or
add
xor
mov
loop
out
cmpsb
dec
int
cltd
xor
imul
mov
imul
mov
sub
jmp
pop
mov
stos
or
cmp
sub
out
adc
ljmp
push
loope
mov
pop
and
and
in
mov
dec
xchg
add
push
inc
out
and
mov
mov
jg
mov
dec
out
pop
dec
aam
xor
jmp
mov
sarb
incb
in
mov
push
and
xchg
pop
outsb
dec
movsl
jno
addr16
repz
mov
incl
stos
jnp
mov
insb
pushf
hlt
pop
xor
ljmp
loope
dec
lret
call
pop
loopne
nop
lds
cmp
fisttpll
jmp
fmul
mov
inc
push
jle
sub
adcb
and
jb
sti
dec
pop
dec
incl
scas
int
push
stos
lcall
and
shr
sub
jg
call
mov
out
enter
xor
xchg
or
cmp
ljmp
subb
dec
xchg
inc
pop
mov
mov
mov
jae
push
adc
rclb
test
lcall
movb
xchg
das
push
imul
or
mov
jae
sbb
lcall
jecxz
adcl
mov
cld
mov
add
xor
jge
aaa
adc
imul
lcall
mov
xor
xor
pop
psubb
sbb
cld
lcall
loopne
test
popa
xor
mov
add
in
dec
sub
ljmp
testl
inc
or
cmp
or
push
cwtl
fdivr
mov
pop
andb
call
pop
repz
inc
scas
jge
sub
ja
push
pop
shrb
adcl
aas
pop
and
jnp
push
lods
push
xlat
fnstsw
jns
test
fisubs
dec
outsb
in
in
pop
and
out
ss
mov
xchg
xchg
std
pop
xchg
inc
adc
push
mov
mov
xchg
aad
clc
pop
mov
or
out
sbb
faddl
pop
cwtl
or
cmc
cld
push
outsb
dec
loopne
popa
sbb
inc
int3
jae
mov
or
sbb
cmp
xor
mov
mov
mov
decl
cmp
pop
cld
mov
cs
add
in
push
jg
lock
call
dec
add
loop
popa
sub
repnz
xchg
icebp
ljmp
imul
xlat
pop
or
inc
sbb
cmp
fidivrl
adc
pusha
xchg
dec
mov
outsl
cli
lcall
les
ret
mov
lds
add
movsl
mov
ret
cmpsb
mov
in
loopne
mov
sbb
sub
dec
or
leave
mov
enter
jmp
dec
jp
popf
out
jne
outsb
sbb
sarl
xor
sbbl
adc
sub
ss
pop
nop
inc
fnsave
jg
jo
jecxz
xchg
sub
mov
sahf
xchg
and
xchg
in
mov
jns
std
popf
in
into
lret
ljmp
mov
jecxz
sahf
sbb
clc
hlt
lret
cmp
stos
stc
xchg
int3
cld
mov
das
js
xchg
decl
sub
cs
or
hlt
mov
imul
loop
call
mov
cmp
cmp
mov
les
fwait
repz
mov
sbb
xchg
pop
call
xchg
jle
cmpsb
fwait
push
jp
xor
mov
xchg
pushf
ds
daa
push
mov
push
add
daa
sub
mov
setae
pop
fisttpll
je
int
mov
push
idiv
jmp
and
mov
loopne
sub
adc
and
rcl
pop
jb
out
mov
aas
xor
gs
test
gs
stos
xchg
adc
mov
imul
mov
xor
out
inc
sbb
xor
jns
jno
rcr
fcmove
imul
pop
mull
fld
jl
mov
adc
js
xor
sub
mov
add
rclb
mov
incl
test
cmp
fcompl
lahf
cwtl
movsl
ss
pop
std
sbb
mov
pushl
frstor
mov
lcall
test
and
imul
xor
sub
mov
pop
lods
mov
and
fiaddl
int3
add
rcll
inc
insb
incl
jge
xchg
repnz
sbbl
je
ret
cltd
imul
fmull
cli
loop
fnstsw
loope
lahf
cmovo
decl
lcall
mov
jo
pop
shll
mov
pop
loop
lcall
add
out
push
cmp
repnz
push
pop
sbb
mov
addl
rolb
inc
xor
xchg
pusha
jge
daa
in
sarb
lahf
dec
fucomp
movsl
inc
inc
jns
sub
mov
cmp
mov
pop
iret
lcall
pop
jge
inc
inc
stos
push
or
lods
mov
leave
cmp
sub
cmp
call
sbbl
add
repz
ljmp
mov
cmp
pop
cmp
inc
ljmp
push
cmp
jecxz,pt
aad
out
fcomi
in
xchg
sbbb
sub
imul
call
lret
int
push
and
jp
cwtl
mov
shll
xor
fwait
xchg
jle
loop
subb
mov
aas
sub
add
lock
leave
cmpsl
mov
arpl
jp
lea
decb
test
in
mov
aam
jns
leave
call
push
stc
andb
sub
pusha
clc
mov
int3
clc
add
out
clc
incl
mov
hlt
or
es
mov
pop
dec
mov
cmp
xchg
and
mov
loop
sbb
pop
jbe
aaa
jecxz
jae
mov
dec
fs
popa
call
or
ja
cmpsb
sub
push
adc
and
inc
push
outsb
xor
dec
fstl
out
lcall
aaa
pop
and
jge
and
cltd
push
or
outsb
mov
jae
pop
and
and
pop
jl
push
cs
mov
test
iret
add
scas
pushl
pop
imul
outsl
sub
test
js
inc
mov
dec
jmp
sub
adc
lcall
fbstp
add
call
in
incl
fwait
aaa
mov
outsl
loopne
imul
mov
push
repnz
mov
mov
mov
or
push
mov
or
ds
clc
divl
xchg
mov
pusha
or
sbb
or
jno
imul
in
cmp
incl
call
shrl
das
scas
arpl
mov
rclb
or
sbb
push
and
jp
pop
inc
add
inc
add
movsl
rolb
fsub
mov
ret
into
mulb
fwait
push
insl
push
fsubl
add
lods
adc
pop
push
push
xchg
push
mov
mov
pop
lahf
pop
pop
fwait
cmp
lret
cmpsb
popf
xor
sar
or
loopne
sub
addr16
push
movsb
xor
dec
cs
jmp
es
or
jne
je
imul
cmovp
icebp
jmp
aas
int
insl
addr16
clc
jmp
gs
cli
pop
cmp
xchg
nop
inc
xor
pop
sahf
xchg
push
jno
cld
jmp
decl
jo
sahf
mov
cmp
jp
in
jmp
nop
mov
sub
jbe
outsb
fisttpll
mov
in
jne
jb
cwtl
jno
dec
sbb
pushl
icebp
mov
xchg
movsl
aad
xchg
xor
andb
addb
shrb
cwtl
add
lcall
inc
insl
aad
into
mov
faddp
aaa
push
mov
push
stos
sbbl
in
adc
inc
repnz
fwait
mov
xor
ror
cs
push
inc
push
js
sbbl
mov
dec
dec
ret
dec
add
adc
fildll
loopne
push
xchg
xor
and
sbb
call
call
mov
daa
mov
push
adc
scas
pop
xor
sbb
sub
lcall
addr16
loope
jl
xchg
sti
pop
pop
xchg
in
xchg
jnp
test
xor
mov
imul
jb
repnz
stos
add
faddl
inc
xchg
fnstcw
xor
aam
jae
and
xchg
mov
mov
or
les
and
sub
in
sub
imul
fs
test
ret
pop
mov
dec
add
cmp
push
dec
hlt
jg
jmp
push
sub
jbe
and
stos
shld
outsl
test
push
les
mov
inc
mov
or
andb
shr
pop
in
das
or
dec
loope
inc
push
inc
ss
bound
cmc
or
mov
stos
decl
stos
arpl
lar
popf
mov
test
and
hlt
and
xor
sbb
mov
mov
xor
popa
push
push
popl
adc
scas
test
xor
out
out
in
mov
fwait
enter
xorb
adc
movsb
mov
aas
loop
jmp
dec
ror
add
jne
fnstcw
inc
aaa
cmpsl
jecxz
pop
test
lret
das
cltd
sub
insb
lds
xchg
cld
xor
mov
mov
cld
js
mov
mov
js
bswap
pop
cmp
movsb
dec
xchg
dec
fiadds
mov
fstpl
xchg
cmp
pushf
cmp
imul
flds
push
ret
sbbl
call
push
dec
jmp
mov
rcr
sahf
push
inc
mov
jo
btc
xchg
fsts
lds
jmp
popf
dec
sahf
out
lods
dec
mov
lret
cwtl
std
xchg
jl
enter
push
sub
das
adc
imul
adc
lsl
mov
nop
pop
inc
into
ljmp
xchg
and
push
int3
scas
aaa
std
pushl
imul
cmp
outsb
pop
aas
lea
testl
jns
jg
fimull
jp
push
shll
mov
lock
inc
repz
lock
shll
or
bound
in
cmp
xchg
popf
mov
sbb
out
test
sub
adc
mov
cld
push
imul
jae
les
inc
fsubs
enter
fs
fisubrs
cli
insl
incb
sbb
cli
test
decl
movsl
lea
scas
sub
js
lret
or
jmp
pop
jmp
pop
ret
lock
adc
pop
sub
xchg
test
push
clc
pop
and
push
mov
decl
outsb
and
mov
jl
sub
dec
xchg
lock
cmp
pop
mov
push
lcall
jo
xchg
decl
or
enter
pop
pop
push
mov
int
mov
cld
pop
aad
ficoml
jns
into
xor
mov
dec
inc
or
and
call
push
testl
mov
movsl
dec
cmp
add
inc
mov
hlt
out
push
jo
std
jmp
inc
daa
faddp
mov
aad
or
fildll
pop
les
into
das
ss
call
adc
push
cmp
mov
and
js
dec
xchg
incb
stos
ljmp
push
inc
sbbb
in
jge
jns
aas
fs
int3
xor
cli
out
daa
jmp
push
mov
xor
fisubs
dec
faddl
jl
and
and
ret
lds
enter
addb
add
ljmp
mov
jae
mov
ljmp
lahf
cmpb
pushl
sahf
xor
sbb
xchg
mov
iret
mov
sti
scas
insl
adc
in
imul
mov
push
ss
sub
sub
mov
js
ret
cmpxchg
or
pushf
cltd
sub
scas
lret
pusha
mov
shll
pop
insl
jecxz
xchg
jmp
ret
mov
jg
std
out
adc
and
cmp
stc
shlb
loopne
push
cmp
cwtl
arpl
sbb
adc
adcb
add
shll
mov
lcall
mov
sub
dec
push
bound
mov
lret
mov
test
dec
mov
cmp
dec
xor
loope
add
sbb
cwtl
loop,pn
fimull
mov
jg
outsb
mov
mov
adc
push
iret
les
mov
fsubr
pushl
pushl
push
cmpsl
dec
sbb
cs
lcall
fcoml
imul
in
ss
or
xor
mov
ds
fisttpl
cld
push
mov
cmp
adc
lods
or
push
sub
mov
leave
hlt
jp
dec
outsl
xchg
push
enter
mov
fisubrl
icebp
cmp
inc
jns
mov
inc
mov
dec
jbe
hlt
call
inc
imul
pop
js
dec
enter
adc
hlt
inc
jecxz
aam
adc
ds
mov
call
jbe
adc
cmp
out
scas
adc
mov
mov
call
rep
hlt
xorb
testl
add
roll
cmp
in
in
insl
mov
dec
sbb
push
aam
push
mov
test
notl
mov
pushl
call
adc
stc
loop
push
rolb
sub
inc
cmp
clc
sahf
mov
or
lcall
xchg
jge
into
cmp
ret
sarb
mov
lock
call
or
cmp
xchg
dec
cwtl
aad
jge
adc
mov
inc
lcall
dec
lds
and
push
daa
aas
outsl
mov
sub
repnz
sub
incl
jecxz
or
pop
and
xor
dec
push
xor
xchg
scas
leave
cmp
decl
mov
inc
pop
pop
xlat
xor
push
push
aaa
addr16
jns
in
xlat
mov
push
mov
cmc
sti
sub
sti
imul
and
pushl
sub
ss
pop
in
pop
jns
cmp
adcb
sub
sub
rol
adc
std
adc
push
xchg
les
pushl
outsb
loope
dec
mov
out
popa
into
add
and
int3
or
or
aas
push
jl
ja
dec
in
jmp
mov
sbb
ret
fistpll
jo
push
in
das
push
jge
fbld
or
push
lcall
gs
cmpsb
movsl
mov
insl
in
push
lcall
pop
cmpsl
mov
push
dec
pop
call
sahf
leave
cmp
mov
out
aas
cmp
mov
add
aad
add
mov
lock
hlt
mov
int
cmpsb
sbb
movsb
pop
repz
push
adc
outsb
inc
and
cmpsl
popa
cs
fwait
jmp
mov
lods
mov
dec
and
sub
sub
sbb
incl
jmp
bound
mov
dec
mov
aam
out
add
cmpsl
fdiv
mov
mov
xor
aaa
les
pop
adc
decb
cli
mov
adc
xor
jno
das
scas
loope
fdivrs
decl
push
hlt
xlat
mov
test
mov
push
pop
inc
push
shrb
xor
std
iret
test
pop
fistpll
test
int
outsb
jmp
inc
jp
insl
mov
or
outsb
lret
mov
or
pop
das
scas
loope
jg
jmp
inc
jg
or
jecxz
repnz
pop
cmc
cmc
shll
and
cmp
incl
test
dec
mov
jne
jno
sbb
sub
sbb
mov
mov
jmp
or
push
fldl
lcall
popf
fs
arpl
dec
jg
jg
adc
xlat
inc
cmp
cmpsb
mov
inc
mov
xchg
mov
call
icebp
xor
mov
xchg
or
or
stos
pop
stc
dec
das
or
or
call
mov
cs
fdivrl
sub
insl
int3
aam
mov
cmp
lret
jecxz
std
out
jmp
cli
lcall
loope
mov
sbb
and
cmp
mov
cmp
std
in
xchg
pushl
lods
sub
jbe
popf
imul
fmull
jg
ret
in
mov
adc
in
lock
js
stos
shrb
stc
sbb
popa
inc
ss
pop
fcompp
xchg
sub
fwait
enter
pusha
call
xor
inc
sbb
mov
out
out
outsl
dec
mov
call
cltd
jg
lods
dec
loop
inc
lahf
cltd
in
outsb
enter
sbb
cld
scas
mov
xchg
adc
stc
dec
test
fidivl
scas
stos
mov
cmp
sbb
xchg
cs
dec
xchg
xchg
dec
int
insl
fucomip
jecxz
and
push
cltd
mov
jmp
xlat
insb
jbe
jmp
push
decb
or
ja
xor
push
ss
inc
shl
loope
loop
inc
add
jmp
jo
jmp
outsl
pop
out
shlb
mov
cmp
aas
jmp
mov
push
shlb
dec
rcll
test
ret
mov
sub
or
andb
leave
xchg
and
inc
loope
mov
ljmp
loop
jnp
cmpsb
insl
push
mov
mov
adc
sbb
adc
loopne
fisttpl
inc
dec
aam
inc
jmp
fidivrs
popw
or
out
xchg
inc
or
xchg
push
inc
outsb
data16
adc
xor
adc
mov
shlb
rolb
mov
stos
add
push
jmp
inc
cmp
cld
jg
sub
inc
sbb
nop
aaa
je
add
pusha
push
testl
clc
push
in
inc
pop
out
xchg
and
leave
pop
je
mov
lcall
lret
jmp
leave
imul
sub
and
sub
jne
jle
adc
pushl
xlat
lcall
push
add
mov
xchg
mov
loopne
test
fdivrl
mov
out
xor
js
lock
mov
xor
mov
lock
orb
dec
pop
mov
addr16
mov
daa
test
pop
mov
mov
imul
ja
lahf
adc
test
mov
aad
lret
push
jecxz
nop
es
sti
nop
loop
sub
push
push
mov
adc
xlat
decl
cmpsb
call
fwait
push
sbb
outsb
mov
mov
sub
xor
outsb
lock
mov
pusha
jl
out
xor
stos
cli
sub
jmp
add
pop
xchg
ljmp
or
sahf
jb
aad
inc
lcall
loopne
sub
out
mov
stos
or
jp
or
xchg
jecxz
call
pop
and
and
pop
push
mov
xor
mov
dec
andl
jecxz
subb
sub
lods
and
testb
mov
lcall
arpl
mov
or
shl
iret
xor
std
sbb
cmp
shlb
push
aas
mov
push
mov
xchg
ret
nop
mov
jnp
push
jmp
sarb
jne
mov
ret
jb
add
push
pop
sarb
dec
jno
jp
sub
jle
dec
sar
sub
push
sub
jo
add
jnp
pushf
adc
sahf
fidivl
aad
ds
data16
xchg
shrb
push
push
insb
adc
fwait
cmp
cmp
imul
jo
mov
decl
mov
fbstp
jns
pop
lret
jns
inc
add
jg
lcall
nop
adc
repnz
addr16
adc
push
dec
sbb
idiv
mov
mov
rorb
mov
lcall
sarl
dec
inc
mov
imul
ljmp
dec
jp
jmp
push
pop
pop
push
sbb
popa
jae
cmc
mov
movsb
or
ret
les
mov
pop
sub
push
shl
frstor
bound
jno
jl
push
dec
lcall
call
sub
and
sbb
or
push
mov
jg
out
icebp
pop
sbb
hlt
cs
adcb
gs
dec
mov
fbstp
loope
insl
pop
sub
repnz
je
mov
sti
lods
ds
mov
rcl
inc
sbb
sbb
adc
clc
cmp
jp
fcomip
not
cmp
in
sub
mov
mov
or
sbb
repz
dec
mov
inc
xchg
hlt
cltd
sbb
bound
shll
mov
mov
adc
iret
lahf
cmp
inc
inc
xchg
mov
xlat
fisubs
movsl
add
cmp
cwtl
push
push
xlat
jl
popf
repz
loopne
int3
mov
push
out
insl
shll
inc
aas
mov
sbb
scas
decl
lock
clc
pushf
arpl
xor
lcall
cmp
push
daa
mov
cs
addr16
mov
mov
mov
insb
inc
in
cmpsl
and
inc
dec
out
xchg
out
and
std
ja
jae
jnp
insl
pop
cmp
adc
adc
adc
insb
mov
inc
mov
out
arpl
adc
jl
fmull
xor
mov
xchg
push
mov
cmpsl
enter
in
pop
stos
and
out
and
xchg
push
call
or
fwait
lods
inc
pop
jb
inc
fidivrl
shrl
cmpsl
pop
lcall
pushl
push
cwtl
push
ds
mov
lahf
sbb
pop
jbe
test
pop
ljmp
cwtl
adc
inc
mov
inc
loopne
add
addr16
scas
jle
and
fwait
jg
inc
aam
xor
push
ds
sbb
push
adc
sub
clc
push
es
incl
cmc
fimuls
lea
mov
fsubs
inc
cmp
xor
push
mov
jl
in
pushf
jl
push
test
test
mov
sbb
imul
cmpsb
shrl
or
shlb
decl
aam
repz
roll
outsl
mov
insl
cmp
mov
mov
jle
sar
push
stc
dec
mov
andl
xchg
into
mov
mov
in
cmp
incl
cld
mov
int
in
in
add
push
push
insb
xchg
inc
repz
or
mov
cwtl
lods
scas
data16
movsl
shrl
cmp
cli
imul
in
jl
push
push
cwtl
sbb
dec
in
call
aas
mov
clc
dec
movsb
aad
pop
js
adc
movsb
lahf
mov
push
pop
xchg
subl
inc
mov
xchg
xor
sarl
pop
scas
decl
and
out
adc
lret
mov
and
std
fs
jns
adc
cwtl
and
xchg
scas
pushl
movsb
scas
jno
cmp
xchg
insb
dec
mov
mov
jb
dec
ljmp
cmp
in
inc
mov
mov
dec
cli
cmp
lods
aam
popa
pop
fistl
pop
std
incl
into
push
push
jmp
lret
xorl
arpl
pop
sub
or
decl
adc
mov
or
hlt
fdiv
adc
loop
pop
add
or
sarl
push
cmp
cmpsl
xchg
pop
and
cmp
das
sub
movsb
cli
jo
dec
cld
and
sbb
aas
movsl
sub
decl
sti
and
and
inc
jecxz
movb
jle
icebp
rcl
stos
dec
push
imul
push
jnp
jmp
aad
jnp
jb
jb
iret
repz
fcomps
mov
push
lea
sar
call
push
out
push
lret
cmpsb
inc
out
sar
cmp
push
ret
cli
xor
loop
out
bound
sbb
push
call
sbb
inc
stos
xchg
mov
or
mov
testb
ljmp
leave
imul
xor
push
out
xor
out
sbb
xchg
and
les
sub
push
out
mov
data16
cmc
mov
mov
push
jb
fcmovu
dec
jae
and
sub
stos
int3
jg
incl
mov
cld
imul
xchg
cltd
out
jecxz
jmp
mov
mov
in
arpl
mov
les
loop
lahf
jbe
daa
loop
fsts
xor
pop
mov
xor
call
xchg
hlt
into
lock
mov
adc
pop
sub
sub
fwait
sti
add
cmp
xchg
fadd
andb
and
mov
mov
aam
std
imul
dec
insl
mov
mov
loope
lcall
cmp
imul
in
and
pop
rcl
xor
mov
push
stos
and
inc
pushl
mov
int3
je
out
imulb
sti
lahf
mov
call
mov
xor
loopne
bnd
push
xchg
or
loope
mov
cmp
shl
rorl
sahf
pushl
push
clc
roll
sbb
std
inc
and
mov
mov
sbb
xor
dec
test
mov
or
and
enter
scas
jb
cmpsb
lock
call
push
adcl
mov
stos
insb
shlb
stos
or
enter
jmp
jg
call
push
jmp
sahf
mov
mov
jmp
sbb
xor
cmp
dec
lahf
in
push
xor
xor
loopne
or
sub
mov
jbe
shl
mov
in
adc
popf
cmp
cmpb
out
xchg
jbe
sub
enter
jnp
mov
decl
jo
pop
jp
xor
lret
sbb
xchg
scas
cmc
pop
xchg
stos
add
cmp
scas
xchg
inc
std
lret
or
push
int
imul
fcmovnbe
inc
cmp
hlt
fbld
cld
add
mov
pop
insb
and
or
jmp
sbb
push
inc
rcl
leave
outsl
mov
xchg
fwait
stc
loopne
enter
stc
pop
enter
in
add
insb
xlat
cld
mov
popf
add
mov
pop
scas
mov
lcall
scas
mov
mov
and
or
and
sbb
test
fdivrp
shrb
lods
inc
pop
or
les
or
lret
pop
js
sbbl
jmp
rcll
in
js
fdivr
dec
sbb
cld
adc
cmp
sub
xchg
jmp
fmul
test
repz
push
rol
cld
inc
mov
pop
pop
adc
add
pop
shlb
add
cli
mov
sbb
rolb
mov
mov
dec
xor
cmp
inc
test
lock
int3
jbe
pop
loopne
incl
ss
outsl
xor
loop
lods
fidivrl
pop
xchg
jne
mov
and
loopne
int
inc
shlb
sbb
loope
xor
pushf
fidivrs
nop
pop
std
sub
sub
clc
add
ficoml
inc
xchg
jbe
push
iret
pop
fists
cmp
jo
push
dec
xchg
mov
fs
jmp
call
pop
and
ljmp
sbb
imul
lea
incl
xor
loopne
mov
in
mov
test
test
sbb
adc
clc
daa
adc
insb
ljmp
xchg
jmp
fcmovb
jle
xor
iret
add
inc
adc
incl
fwait
scas
subb
ss
es
or
andb
fcompl
sub
jle
pop
fcompl
popf
and
or
pop
and
movsl
shlb
call
testb
pop
lcall
xor
and
jno
out
out
ss
movsl
pushl
sub
in
mov
subb
out
clc
add
add
hlt
mov
hlt
add
scas
std
scas
dec
pop
adcl
call
insl
aas
inc
inc
test
js
xor
xor
jp
dec
jg
mov
stos
bound
xor
add
addr16
sub
push
inc
clc
jg
lret
bound
mov
or
pop
jmp
mov
jbe
sub
xor
test
xchg
mov
addr16
test
loopne
mov
inc
into
in
mov
push
sub
push
call
cmp
ljmp
or
push
cmc
mov
lods
mov
or
mov
sub
incl
cmp
call
lret
pop
fwait
jnp
sub
lods
push
mov
decl
sar
sahf
cmp
jnp
es
cmpsb
movsl
enter
aam
adc
cmp
sahf
xchg
ljmp
pop
adc
xchg
idiv
push
add
in
mov
aam
cld
mov
call
rol
pop
gs
pop
pop
dec
jne
cmp
xor
addl
push
inc
jmp
and
and
test
rclb
push
gs
leave
push
dec
mov
add
les
aaa
js
xchg
popf
js
push
ret
sub
push
dec
xchg
push
pushf
lret
mov
or
mov
subb
and
dec
jecxz
call
cmp
cmp
bound
inc
xchg
lret
sbb
hlt
cmp
push
rcl
or
je
push
push
lds
add
clc
out
jns
or
cwtl
cmp
incl
mov
stos
stos
cmp
out
cmpsb
jb
cli
jle
lret
lock
mov
mov
mov
push
jmp
and
xor
add
pop
test
decl
mov
xor
les
in
sub
jae
jecxz
insb
mov
cmp
call
mov
add
cs
fildl
ss
jle
jmp
pop
cmp
mov
or
vsubsd
inc
add
jecxz
xchg
sbb
ljmp
out
test
add
test
xor
rolb
jne
inc
popa
mov
jmp
nop
loopne
adc
lock
mov
mov
push
cmpsl
jle
xchg
inc
arpl
lret
dec
inc
xor
push
mov
cmp
add
cmp
sub
ret
les
imul
jb
jmp
jb
jns
clc
add
jl
imul
pusha
add
hlt
fbstp
mov
ljmp
aam
in
mov
dec
sbbb
decl
pop
cmpsb
or
fbstp
add
jg
incl
cmp
or
and
xchg
scas
dec
dec
mov
movsb
aad
cmp
lcall
push
andb
gs
in
jmp
jb
inc
xor
mov
mov
jecxz
pushl
sub
pushf
add
loope
mov
xor
pushl
sub
test
cli
pushf
push
shll
add
testl
movsl
inc
jmp
scas
push
cmc
iret
mov
fsubrl
pop
sbb
jecxz
movb
pushl
sbb
pop
cmc
or
sahf
cmp
dec
cwtl
mov
cltd
pop
sub
popl
pop
lsl
pop
out
aad
dec
pop
hlt
out
xor
pusha
xor
cmp
fistps
or
bound
ret
and
aam
aas
fistpl
sub
jg
pop
roll
icebp
push
xlat
andl
or
or
lret
lcall
movsl
sbb
ficoms
lea
push
jns
and
jns
mov
or
inc
push
jecxz
ljmp
jae
pop
xchg
and
lock
mov
sub
and
in
movsb
fs
leave
ret
inc
sar
inc
jg
push
outsl
testb
je
daa
push
test
cwtl
ja
outsl
mov
sub
scas
mov
ljmp
push
cs
xorl
jnp
stc
inc
out
decl
lods
sahf
xor
cld
bound
add
xchg
inc
mov
incl
mov
dec
int3
and
out
dec
bound
and
outsl
mov
inc
mov
in
jmp
stos
ret
test
mov
push
mov
xchg
adc
cltd
in
xchg
mull
fcos
cmp
adc
mov
adc
dec
pop
dec
lods
ljmp
adc
mov
pop
cmp
mov
adc
xchg
js
pop
jg
add
ljmp
ret
mov
orl
lods
cwtl
loope
xchg
std
mov
cmp
pushl
std
mov
pop
and
in
in
daa
pop
adc
push
and
push
decl
scas
adc
fldz
push
push
or
sahf
into
inc
pop
and
add
popf
gs
cmpsl
xlat
inc
dec
ss
jnp
mov
sbb
sar
roll
inc
clc
push
and
push
das
cmp
repnz
push
imul
adc
push
ror
mov
insl
push
fiadds
jge
hlt
xchg
cld
xchg
test
pop
aam
sbb
xor
hlt
lods
repnz
popa
sahf
pushf
mov
mov
jecxz
ja
mov
or
or
push
pop
push
scas
xlat
fldl
adc
ljmp
lds
jne
aaa
nop
add
pusha
dec
lahf
jbe
in
ret
fnstenv
cmpsb
or
jmp
testb
xchg
hlt
pop
les
pop
mov
cwtl
mov
push
jns
mov
and
daa
push
in
pop
mov
mov
mov
fistpl
mov
sar
lcall
ss
adc
push
jp
mov
popf
in
imul
lcall
jb
call
lea
adc
push
pop
mov
fwait
dec
out
cli
decl
cmp
adc
out
jle
daa
sarb
add
mov
es
jl
jmp
scas
popf
cmpsl
push
in
icebp
dec
xchg
das
arpl
dec
mov
push
jecxz
mov
pop
ds
mull
push
jp
jo
mov
lcall
fucomip
add
adc
stc
xchg
mov
push
loopne
push
loopne
lock
call
mov
mov
pop
mov
or
jbe
popa
inc
or
xchg
call
or
outsl
pop
inc
enter
add
in
test
fmul
and
pop
lcall
push
cmp
sub
or
loop
jbe
push
xchg
xchg
or
jmp
lcall
or
into
mov
imul
xor
sbb
xchg
pushf
frstor
and
fbstp
jne
roll
test
repz
arpl
cmp
push
fdivr
call
fmull
out
out
sub
mov
jge
sbb
mov
in
addr16
and
xlat
movsl
insb
cmp
or
lea
dec
das
add
fisttps
mov
fcos
pop
cld
fistpl
and
out
dec
pop
mov
add
inc
fdivs
pop
cld
out
ljmp
insb
test
mov
sti
divb
cmp
jg
jge
decl
or
lods
dec
outsl
push
mov
repz
jl
fadds
lahf
adc
push
dec
movsb
incl
adc
push
cmp
mov
jmp
sub
pop
mov
iret
sbb
outsb
jecxz
pop
shrb
nop
inc
pop
pop
dec
sub
pop
jb
xor
test
sbb
mov
push
push
rcrb
in
dec
fistps
call
lds
inc
jge
pop
cmp
and
outsl
adc
jge
xchg
ljmp
hlt
add
and
test
xor
or
arpl
dec
mov
push
shlb
ljmp
push
pushf
jecxz
push
cmp
pop
movsb
pop
or
stc
adc
sar
incl
cmp
fdivs
xchg
fdivrp
bound
enter
dec
repnz
mov
ljmp
out
ja
jg
inc
pop
int
xlat
jno
ss
into
vrsqrtps
sbb
fwait
mov
inc
sub
loope
mul
sub
outsb
ret
or
iret
push
add
fcomip
sub
push
mov
push
pop
cs
xor
push
and
std
pop
add
mov
in
push
repnz
sub
test
fisubl
cmc
ljmp
mov
xor
aad
int3
cmp
and
cmp
xor
add
inc
or
inc
fisttps
jl
adc
push
dec
sbb
repz
sbb
jmp
fbld
imul
push
pop
mov
dec
outsb
add
pusha
cli
inc
int
popa
gs
add
pop
pop
ds
negb
jo
mov
lahf
or
ljmp
cs
mov
dec
mov
in
add
mov
jo
nop
xchg
mov
push
push
pushl
popf
dec
pop
mov
jns
outsl
jne
xor
pop
xor
xor
lods
call
cltd
mov
pop
int3
cwtl
mov
cltd
pop
xchg
inc
pusha
in
inc
or
cmp
pop
test
lret
inc
pop
adc
lahf
data16
ljmp
inc
adc
push
mov
jno
mov
pop
lahf
xchg
xchg
jo
adc
adc
adc
decl
xor
jg
jge
xchg
mov
stos
sti
call
xorb
lds
ds
lcall
and
adc
out
add
shl
pop
xchg
lret
mov
mov
sub
lods
mov
sbb
ret
adc
add
cld
push
loop
cmpsl
pop
bound
hlt
div
add
mov
sbb
push
aam
imul
jg
insb
lcall
in
mov
mov
ljmp
icebp
jge
pop
scas
pop
fldcw
nop
cmp
dec
jg
icebp
xor
fucomp
sub
mov
push
pop
cld
lcall
sub
arpl
adcl
sbb
mov
fsub
push
enter
lock
mov
inc
mov
mov
jle
fwait
cmp
xor
jmp
jp
jo
lea
int3
or
push
mov
fstpl
int
inc
les
mov
sbb
aas
in
cmp
jmp
addr16
daa
clc
pop
add
adc
lea
stos
xchg
jge
dec
out
cmpsb
cld
add
jmp
xor
pushf
jge
fcmovnbe
ss
je
in
insb
fisttpl
mov
sbb
test
adc
add
clc
sub
pop
arpl
jecxz
sub
and
lahf
ljmp
shl
inc
dec
ret
mov
sbbl
lcall
push
jle
fistps
dec
push
clc
gs
sbb
loope
lds
pushl
xor
fcmovnbe
pop
pop
mov
add
adc
je
sarb
and
jmp
push
mov
or
inc
jle
xchg
or
test
bound
scas
dec
test
dec
fcmovnbe
or
lcall
loop
rorl
xor
test
js
add
out
les
daa
icebp
mov
or
sbb
call
push
out
fwait
stos
push
add
cld
ficomps
icebp
inc
out
pushf
xchg
sub
push
cwtl
movsb
stos
movsb
fbld
cmp
imul
popf
and
ret
dec
push
xchg
loop
nop
mov
idiv
xor
imul
jnp
add
lods
dec
outsl
sub
cs
jns
sarb
frstor
sub
xor
xor
incl
sub
mov
sub
sub
stc
adc
stc
add
mov
decl
adc
addr16
cltd
xchg
decl
aaa
jg
outsl
adc
pop
lret
jno
push
or
fstpl
inc
or
lcall
loopne
mov
xor
popl
ja
xchg
sub
jle
adc
add
or
insb
ds
fldt
mov
cwtl
rcrb
insb
sbb
jno
inc
inc
inc
cmp
stos
mov
xchg
inc
scas
add
sub
add
ss
cmc
mov
call
and
fwait
test
ret
cmpsl
xchg
dec
add
ret
out
mov
dec
popa
das
add
out
decl
cmp
dec
imul
adc
sub
cmp
call
mov
inc
repnz
xor
push
pop
sub
dec
jns
dec
sub
mov
dec
inc
dec
mov
stc
ja
adc
les
mull
aas
lcall
sub
sbb
outsl
mov
cmpsb
stos
lcall
divb
cmp
inc
out
sbb
in
scas
adc
in
filds
incl
sub
push
jnp
popa
lcall
xchg
lea
jl
adc
push
adcb
fldl
repnz
and
jmp
popf
mov
pushf
cmp
push
test
lea
lcall
das
mov
data16
xor
aad
out
pop
sub
xorl
inc
int
dec
leave
repnz
testb
pushl
scas
or
ja
jp
shll
mov
jg
add
andb
decl
mov
mov
clc
mov
push
push
jecxz
fmull
and
hlt
adc
outsl
jmp
sub
dec
aad
cmp
ret
ja
mov
repnz
dec
xlat
adc
aaa
xchg
mov
mov
or
jl
pop
loopne
push
jp
sahf
fsts
jl
fnsave
test
cld
push
pop
mov
in
aad
inc
add
pop
std
jno
mov
adc
adc
inc
pop
cmp
out
aad
aad
mov
sar
adc
push
int
loop
ja
cli
imul
mov
nop
push
cs
mov
pop
cld
in
fwait
cmpsb
subb
mov
test
popf
or
or
sbb
jl
inc
lahf
pop
mov
jno
jnp
jne
dec
xchg
movsb
pop
add
mov
push
dec
ds
cmp
outsb
mov
sahf
addr16
fidivl
mov
inc
in
push
fisttpll
das
in
lods
loope
cmp
jge
test
das
test
cmp
jno
popf
sbb
cld
adc
shll
adc
mov
sarl
incl
push
aaa
jne
cmp
push
repz
jp
mov
sahf
ret
aaa
xchg
pop
mov
divl
xor
push
mov
out
jmp
in
mov
xchg
neg
jl
dec
scas
add
cltd
adc
mov
ds
fldl
jecxz
inc
mov
repnz
nop
dec
mov
push
popa
pushf
out
dec
sub
jg
sti
adc
or
or
ja
pop
cmp
fbld
mov
daa
in
aad
ljmp
pop
sub
dec
xchg
jg
jecxz
repnz
mov
jg
ljmp
arpl
dec
mov
add
xchg
outsb
cmpl
out
nop
pop
insl
mov
sbb
aas
jae
dec
out
mov
out
in
hlt
decl
lcall
arpl
mov
mov
push
cmp
push
inc
orl
inc
or
incl
mov
jge
aas
and
fstpl
mov
sbb
fisttpll
nop
into
push
out
scas
sub
pop
push
lock
cmovl
adc
jmp
je
or
mov
jg
mov
cmp
adc
mov
outsl
xchg
push
enter
add
pop
daa
sbb
cmp
or
add
pop
sbb
sub
jl
negl
mov
call
jle
jbe
mov
xchg
mov
pop
pop
and
lret
mov
sbb
ljmp
sti
shlb
lret
add
inc
call
std
pop
or
stc
adc
icebp
sahf
mov
ljmp
inc
mov
adc
mov
mov
mull
mov
jge
cmp
js
iret
jp
in
push
fxch
pop
les
idivb
ljmp
cmp
loopne
jmp
mov
mov
mov
jnp
fiadds
push
and
in
mov
stos
ljmp
aam
outsb
mov
test
and
fstpl
mov
xor
pop
mov
xchg
lock
test
push
xlat
xchg
ja
and
jmp
jmp
mov
pop
aaa
lahf
ds
in
mov
add
mov
popf
mov
outsl
lea
inc
adc
adc
data16
sbb
call
out
cmp
es
fnstcw
push
mov
and
gs
mov
add
lcall
jmp
leave
mov
mov
mov
mov
pop
iret
mov
stc
push
leave
sar
mov
mov
adc
in
and
fcompl
mov
lock
mov
inc
pushl
mov
fisubrl
add
inc
out
in
pusha
jo
cwtl
pop
mov
pushl
add
les
sub
adc
push
jmp
jmp
pop
xchg
mov
and
push
mov
call
loope
push
scas
jge
inc
fistpl
stc
testl
push
cmp
pop
and
xchg
jp
pop
mov
mov
mov
jbe
and
jg
mov
xchg
mov
cld
push
cmp
mov
cmp
add
mov
sub
incl
decl
movsb
fsubrp
or
loopne
xchg
xchg
bnd
pop
cmp
scas
stos
clc
incl
loopne
jbe
aas
sbbb
sub
ja
decl
sub
repnz
and
jno
or
fildl
lret
add
sub
arpl
decl
fcomp
mov
je
popa
fs
fstcw
mov
lahf
in
idiv
xor
inc
jae
adc
sub
js
pop
mov
jle
push
out
fwait
mov
or
out
loop
and
pushf
push
sub
dec
fs
repz
cmpsl
pop
stos
mov
adc
stos
out
dec
cwtl
insb
test
nop
jmp
loopne
fsubl
cmp
xor
xlat
incl
xor
test
push
inc
sbb
and
cwtl
rcl
ficoml
adc
sahf
roll
mov
push
jg
inc
loop
mov
insb
sar
jns
ficoml
cli
out
mov
push
sbb
incl
jp
aas
jecxz
movsl
leave
pop
stc
cmp
or
push
cli
daa
add
ss
scas
in
in
incl
mov
sti
mov
xor
push
add
pusha
data16
stos
jp
adc
popf
jmp
outsl
xor
dec
arpl
repnz
and
call
aas
ja
mov
pop
mov
and
mov
and
push
and
mov
cmp
das
lea
dec
xchg
popf
insl
nop
jl
in
pop
push
jb
cwtl
aam
scas
adc
sbb
lea
inc
cld
in
in
aam
add
das
pusha
xchg
test
fidivl
les
xchg
sahf
icebp
jg
insl
mov
inc
lahf
leave
pop
mov
enter
jmp
ljmp
xchg
loope
iret
ja
ret
movsb
fwait
pop
sub
sub
out
das
movsb
cli
in
add
mov
lcall
sbb
inc
in
mov
pop
jecxz
mov
and
mov
cmpsl
and
cmp
push
ret
cli
adc
movsl
adc
test
je
outsb
into
xchg
fcomip
mov
sub
sub
sub
dec
lds
cld
lcall
fcomps
cmp
xor
and
lret
jg
scas
es
pop
std
jmp
inc
decb
int3
aam
push
mov
incl
lods
push
ds
daa
iret
out
cmp
dec
bound
jp
sti
cmp
fidivrs
xchg
arpl
lods
push
inc
or
jns
andl
orb
xor
pop
movsb
movsl
inc
jp
out
lds
cmp
xchg
in
fdivr
in
pop
out
cld
dec
sub
xlat
sub
xor
aam
jns
jmp
fwait
scas
cmp
stc
sbb
test
bound
sbb
jl
mov
jno
xchg
ljmp
and
cli
ficompl
pop
jp
cld
mov
int3
mov
lcall
xlat
incl
pshufw
xchg
pop
int
aad
icebp
clc
test
in
stos
pop
ret
and
pushl
push
orb
aas
ret
int3
movsb
lods
xchg
pushf
sub
xchg
ljmp
lea
loopne
push
mov
cs
sbb
jb
add
stos
push
sbb
out
imulb
mov
sbb
arpl
mov
and
out
lret
push
lea
push
add
add
cli
cld
sbb
dec
clc
jmp
pop
fisttps
jae
push
jnp
mov
push
mov
push
loopne
xor
xchg
insl
push
jno
mov
movb
rorb
jbe
dec
pop
aam
nop
lods
lret
push
adc
dec
roll
popa
mov
xor
test
idiv
out
nop
cld
jp
movsl
mov
mov
lcall
int3
or
dec
test
das
scas
enter
mov
jmp
lods
xorps
incl
decl
lock
test
mov
enter
popa
out
pushf
mov
mov
aad
cmpsl
cmp
pushf
xor
test
insl
inc
cmp
and
test
or
mov
jmp
jo
pop
push
and
testb
insl
adc
mov
mov
decl
add
rorb
les
sub
cwtl
bnd
jle
sbb
pop
ljmp
mov
push
push
and
pop
xor
stos
in
es
movsl
bound
loope
incl
cwtl
mov
xchg
pushf
pusha
cli
nop
popa
movsb
push
jp
jg
ljmp
pushf
xor
push
push
orl
insb
mov
dec
xor
fsts
xor
jbe
cmp
fldl
mov
inc
out
fnstenv
dec
das
mov
in
push
decl
int3
out
sbb
jge
stos
pusha
sbb
adc
fwait
jecxz
mov
ljmp
rolb
pusha
and
movl
mov
jmp
dec
ss
scas
adc
inc
orb
into
negb
in
xor
or
fs
pop
pop
mov
ja
das
sub
mulb
mov
imul
mov
fwait
enter
test
js
jo
and
test
call
cld
call
pop
adc
lret
mov
hlt
icebp
dec
inc
mov
dec
call
lock
xchg
xchg
cmp
xchg
repnz
sub
leave
aas
lcall
dec
test
les
mov
rcr
loope
mov
pop
scas
jmp
repz
cmp
xchg
in
fisubs
pop
arpl
repnz
dec
sub
call
push
dec
pop
adc
ficoms
xchg
daa
fs
xchg
leave
pusha
pop
jecxz
cs
cmpsl
imul
adc
ljmp
mov
jae
mov
popf
lock
mov
and
arpl
decb
adc
dec
and
scas
xor
ret
sbb
mov
or
mov
decl
adc
cwtl
xor
mov
lret
jmp
leave
adc
xchg
dec
ljmp
adc
inc
adc
popf
stos
dec
xor
lods
pushf
test
subl
out
jmp
mov
jp
stc
out
decl
loopne
lds
push
cmpsb
sub
xorb
jbe
jo
or
lea
vcomiss
pushl
mov
insl
sti
cmp
cmc
inc
adcl
pop
or
jg
or
lods
or
mov
cltd
inc
sub
nop
cli
js
jmp
jbe
movsl
pop
jmp
jbe
pushf
sbb
pop
dec
dec
fs
inc
push
lret
out
je
jno
jge
arpl
repnz
stos
inc
push
es
pop
adc
pushf
subb
in
jb
fmuls
jns
dec
fcomi
mov
mov
adc
sbb
adc
or
mov
pop
fcompl
lcall
out
jae
sbb
out
add
mov
aad
or
fbld
es
dec
push
jg
pop
xorb
inc
test
leave
mov
jmp
ds
ss
fidivrl
movsl
cs
push
jnp
cmpb
imul
les
mov
sub
pushl
gs
mov
push
ljmp
cmc
push
jno
js
iret
mov
ljmp
sbb
out
jl
outsl
push
in
cmp
int
das
adc
sbb
leave
lcall
xchg
push
mov
scas
cmp
mov
jmp
jecxz
mov
mov
enter
jecxz
je
and
jg
nop
stos
out
xor
cmp
dec
je
leave
movsl
or
fistps
sbb
push
sbb
test
xchg
test
xchg
add
push
outsb
mov
stos
inc
pop
mov
jae
add
xor
pop
je
dec
out
inc
fs
xchg
loop
jg
pop
pushl
lahf
shll
shll
stos
sbb
push
decl
sub
mov
xchg
ret
mov
pop
in
incl
xchg
jmp
popf
or
inc
or
dec
sbb
xor
push
loopne
popf
pop
incl
cld
loop
aaa
cmp
pinsrw
ja
push
fbstp
js
int3
inc
adc
decl
fnstenv
popa
mov
push
sub
inc
pushf
push
dec
cmc
inc
pop
call
lods
and
mov
fs
lcall
inc
iret
jecxz
mov
dec
div
mov
shl
jg
mov
pop
adc
jmp
aad
or
cmp
pushf
xchg
leave
pop
icebp
stos
incl
push
ret
adc
xchg
jmp
test
xchg
arpl
ljmp
repnz
mov
dec
or
mov
das
rorl
xor
pop
fsubrl
mov
push
mov
and
ja
xor
enter
cs
pop
cmp
xorb
cmp
and
push
cmp
fmuls
out
das
mov
decl
jl
cld
js
jg,pt
imul
inc
xchg
and
cmpb
rolb
incl
das
jnp
xor
cmp
lods
cmp
xchg
cmp
dec
jg
mov
cmp
bound
jnp
movl
adc
adc
push
outsl
dec
inc
call
adc
lahf
test
sbb
mov
mov
cmp
in
cmp
xchg
xchg
pop
lcall
inc
inc
and
adc
mov
xchg
rolb
jo
cmp
mov
pushl
repz
xor
pop
dec
in
es
ja
inc
lcall
mov
cmpsl
push
sar
call
out
or
pop
aaa
jecxz
adc
xor
or
roll
aad
test
add
movsb
sbb
imulb
xor
mov
call
nop
lahf
inc
ffree
or
aaa
mov
push
jge
fiadds
xchg
xlat
cltd
mov
mov
shrb
cs
lods
popf
in
jbe
cmc
jg
xchg
sub
ljmp
pop
call
arpl
ja
sub
imul
xchg
aaa
ret
pop
push
dec
imul
inc
add
lahf
pop
pusha
repz
js
fildll
pusha
lds
adc
push
cmpsb
sbb
idivl
mov
clc
call
imul
mov
and
xorb
in
mov
mov
test
movsl
inc
sbb
xchg
push
mov
or
in
insl
dec
nop
mov
lock
call
std
mov
mov
pushl
jmp
jle
push
cmp
pop
jno
sar
jmp
mov
clc
outsl
cmp
add
repnz
test
fsubr
inc
ret
jmp
adc
mov
sub
imul
jbe,pn
mov
rol
stc
cmp
decl
inc
lret
jmp
cli
xchg
mov
lea
andl
stos
sub
push
vorps
inc
lret
adc
inc
js
out
sbb
aaa
mov
inc
stos
and
push
pop
and
push
scas
adcb
sbb
ret
push
fsubrs
fcompl
lods
sahf
or
jge
sub
insl
rolb
mov
arpl
xor
add
or
pop
push
mov
fstpl
notb
mov
xchg
inc
call
and
cmc
andb
stos
inc
adc
add
data16
mov
dec
inc
int3
push
or
sbb
aam
xor
jle
test
dec
shlb
push
shr
mov
push
pop
test
xor
ret
int
rclb
mov
inc
and
std
mov
femms
test
sub
lret
insb
jmp
jmp
and
addr16
adc
lcall
jg
outsb
xchg
test
in
outsl
ror
fstps
into
rcrb
int3
sbb
decl
jno
jno
mov
xor
negb
test
jae
enter
rcrl
jnp
pushl
push
leave
inc
cmp
inc
ds
imul
repz
rcr
ljmp
jp,pt
imul
movb
adc
test
jmp
fstps
jae
cld
cmp
or
ljmp
cmp
out
cmp
incl
inc
in
lahf
adc
cmp
scas
sbb
ret
cmp
jle
imul
inc
test
cmc
popa
push
cli
add
push
inc
shl
jp
leave
add
in
xchg
adc
daa
xor
mov
iret
imul
cmp
in
jecxz
cmp
and
aaa
ret
mov
lahf
ss
xor
call
shll
sbb
je
loope
xchg
or
mov
adc
adc
out
and
lds
call
stos
imul
pop
test
scas
lahf
jle
adc
mov
bound
daa
fildll
decl
popf
outsb
js
xor
adc
ds
pushl
sub
clc
ljmp
jmp
adc
ja
mov
mov
lds
jb
out
mov
dec
push
add
or
push
xchg
xchg
sarl
pop
jns
fdivrs
dec
loop
bound
int3
cmp
xor
cmpsb
push
decb
cmp
push
add
lods
movsb
jecxz
pushf
pop
push
jo
incl
sbb
cs
test
call
push
dec
es
adc
xlat
cmpsb
push
xor
mov
sti
ja
scas
mov
enter
push
cld
xchg
ja
ss
cmc
testb
imulb
mov
aas
xchg
adc
sub
clc
mov
ljmp
or
or
pushl
arpl
std
sub
mov
mov
test
rorb
aas
js
ljmp
jmp
xorb
sub
push
lock
fwait
test
cmp
fisttpll
into
and
jle
mov
int
jns
pusha
testl
clc
or
mov
aad
repnz
loop
das
push
push
push
aaa
loop
decl
pushf
xchg
push
push
dec
divb
stos
pop
and
cmp
inc
call
add
cld
push
pop
and
cmc
push
out
push
cltd
push
ror
into
lds
adc
push
cmpsl
mov
punpckldq
jp
icebp
ja
ficoms
pop
clc
lahf
add
push
out
movsl
jno
ljmp
test
mov
outsb
iret
enter
test
in
sbb
pop
leave
decl
or
lds
nop
rol
cmp
call
inc
inc
mov
pop
push
dec
jno
and
bound
add
repz
cmc
sub
stos
cmp
jg
int
cmpsb
imul
fmull
cli
bound
flds
sub
daa
push
incl
push
sbb
loop
mov
jecxz
xor
iret
add
movsl
aam
repz
dec
pop
lods
adc
add
lahf
insb
ja
push
into
sub
push
push
jno
jns
popa
jne
inc
jl
aam
jns
inc
cmp
xor
scas
dec
ret
sahf
inc
lcall
incl
int3
sub
lret
mov
xchg
sti
dec
adcl
insl
jbe
nop
push
jge
cmc
pushl
cld
roll
mov
out
loope
xor
pop
in
sbbb
push
data16
call
test
bound
add
movsl
rclb
mov
inc
leave
repnz
ljmp
cli
jbe
out
mov
xchg
fstpt
pop
jne
or
call
idivl
mov
mov
mov
mov
mov
popa
mov
movsb
sbb
push
lds
mov
or
sbb
adc
xlat
lds
xchg
lcall
inc
int3
add
jmp
mov
mov
rolb
jg
test
inc
das
jbe
addl
lds
mov
ljmp
lds
adc
test
ror
or
cmp
fstps
sub
sub
cmp
mov
mov
pushl
sub
and
repz
inc
cmpsb
mov
in
jo
les
xchg
adc
outsl
data16
jbe
out
stc
inc
adc
das
sti
push
lcall
pop
outsb
pop
ljmp
push
rcll
and
cwtl
hlt
notl
push
out
decl
lock
xchg
out
subb
mov
inc
cmpsb
mov
or
jl
cli
scas
lcall
scas
xchg
or
insl
mov
scas
imul
ret
mov
adc
call
iret
outsl
call
mov
sahf
mov
stc
andb
and
mov
mov
lock
cmc
inc
not
in
push
pop
adc
das
inc
mov
insl
inc
jmp
fbstp
mov
push
in
adc
pop
pop
pop
insl
loopne
pop
cmp
ljmp
ficoms
sti
push
xlat
xchg
xchg
mov
mov
cmpsb
dec
nop
add
ljmp
fadds
les
jo
and
xlat
push
out
cmp
and
jb
inc
jne
jb
push
mov
push
imul
cld
pushl
and
inc
sbb
mov
fdivs
bound
sbb
repz
push
push
lods
into
jl
add
add
inc
or
pop
cld
mov
mov
cmp
aas
aaa
and
int
xchg
inc
mov
fmull
gs
stos
jecxz
and
aas
inc
xchg
xchg
nop
je
mov
jge
mov
and
insl
push
shlb
lcall
out
int
mov
ja
outsl
inc
loope
jb
int
insb
cmp
add
lahf
sub
lcall
mov
sti
add
jnp
inc
adc
cmp
rclb
je
fsubp
pop
fwait
outsl
cli
jmp
inc
mov
lret
in
push
imul
gs
scas
or
cld
pushl
cld
and
push
xor
inc
xlat
push
movsb
ljmp
dec
hlt
jnp
inc
jg
mov
adc
mov
and
decl
inc
jb
pop
dec
adc
inc
test
mov
lea
jg
mov
jmp
jnp
and
lock
or
hlt
ljmp
xlat
mov
and
fdivs
ljmp
jns
mov
adc
add
aaa
xchg
mov
das
mov
lods
jge
push
dec
leave
std
aas
cmpsl
jmp
sbb
mov
pushl
ljmp
movsl
sbb
cmp
push
ljmp
insl
mulb
and
lcall
sbb
ficompl
push
jb
decl
and
cmp
push
lcall
push
mov
pop
jge
mov
outsl
clc
cmp
pop
push
fsubr
cmp
jmp
cwtl
scas
pop
test
mov
xchg
push
sub
dec
add
cltd
es
mov
mov
mov
rcll
stc
mov
sbb
pushl
popa
aam
in
movsb
repnz
test
js
jl
test
dec
stc
fdivrl
jge
sub
xor
and
add
push
ja
dec
mov
clc
scas
lahf
mov
cmp
decl
dec
ljmp
jnp
outsl
leave
push
sbb
lcall
ljmp
mov
aas
mov
pop
xor
loop
test
out
aaa
es
ljmp
cmpsb
xchg
mov
xchg
adc
mov
leave
lret
sbb
dec
mov
pop
orl
test
es
fdivrl
jl
rclb
xchg
daa
pushl
pop
fucomi
movsb
leave
mov
dec
sub
pop
lret
rorl
mov
mov
sub
mov
in
notb
push
orb
call
pop
adc
popf
and
outsb
aaa
imul
pop
lcall
inc
pop
lcall
jl
mov
loopne
pop
jp
js
out
cmpsl
in
mov
cmp
clc
jl
lret
jecxz
adc
lret
js
push
addr16
dec
adc
test
push
mov
sbb
fcomp
pushf
nop
xchg
and
cmp
push
push
pop
jno
push
or
lods
push
std
jp
jo
fsubs
mov
cmp
cmp
lcall
sahf
push
repz
push
sahf
and
ss
cli
das
dec
out
fs
sub
ret
and
lcall
dec
in
idivl
push
fadd
lods
mov
rcrb
cmp
iret
data16
inc
xchg
push
cld
incl
or
and
stos
and
jmp
iret
inc
adc
or
cmp
test
loope
adc
mov
ret
cs
push
or
data16
jg
adcb
jge
dec
lds
cmp
xor
call
sub
scas
mov
dec
sbb
mov
lds
lret
icebp
and
call
mov
rdmsr
mov
idivb
add
fucomip
loopne
fistps
jnp
xor
call
mov
in
in
sub
stos
sub
mov
lcall
leave
mov
cmp
dec
incb
dec
xchg
or
in
push
call
mov
lcall
out
push
cmp
leave
pop
repnz
mov
rcrl
in
pop
repnz
pushl
cmp
xor
filds
stos
pop
or
std
mov
mov
decl
pop
cld
sbb
dec
xchg
enter
add
test
jbe
into
movsl
xor
lret
add
call
mov
sbb
aad
dec
cmpsb
sbb
fstl
cs
sub
cmpsl
imul
inc
jge
mov
mov
pop
push
fisubrl
cmc
inc
mov
lahf
inc
fdivrp
ljmp
push
test
call
mov
mov
dec
fs
mov
sbb
push
mov
cld
decl
test
jae
ja
inc
jnp
inc
sub
sbb
ret
out
lret
jg
fs
test
jb
jns
sahf
test
push
cld
test
imul
shll
push
and
out
movsb
push
sub
sub
scas
iret
movsb
pinsrw
dec
mov
lcall
push
lods
inc
rol
dec
mov
dec
jb
ss
inc
scas
outsl
push
cmp
jle
sbb
sbb
pop
loop
xchg
and
mov
je
fcmovnu
test
cmp
sub
jno
push
pop
or
or
mov
push
mov
cmpsb
movsb
pop
jnp
loopne
mov
pusha
popf
daa
and
mov
in
decl
bound
or
aam
fsubrs
lcall
inc
out
cli
fcom
push
stos
dec
mov
cli
fistl
icebp
cmp
lock
mov
cmpsl
in
mov
push
xor
xchg
mov
test
or
loop
xor
loop
jmp
imul
frstor
movsb
dec
lea
loope
call
mov
and
jbe
mov
or
push
in
lcall
call
cli
leave
fisubrs
fnstcw
je
push
mov
in
sarb
stos
ss
or
ficoml
test
mov
jmp
mov
mov
lcall
jmp
fldl
mov
pop
sub
cld
add
xchg
mov
adc
xor
call
dec
add
lahf
jb
mov
call
mov
push
fisttpl
leave
or
into
jbe,pt
mov
shl
xchg
adc
push
inc
push
mov
mov
mov
sub
es
and
decl
inc
push
sbb
and
out
xchg
jns
in
mov
call
mov
fwait
pop
mov
fs
sbb
mov
xchg
cmp
pop
and
mov
dec
sbb
add
xchg
loope
pop
ja
ss
stos
std
popf
inc
sbb
jle
ss
xchg
dec
xlat
adc
stos
fs
fisubrs
dec
lcall
dec
cmc
repz
adc
data16
idivb
sub
mov
incl
sub
xchg
orb
icebp
jns
push
cmp
imul
dec
dec
xlat
call
icebp
push
pop
dec
aam
and
inc
pop
ja
jnp
cld
inc
fcompl
sub
decl
cmp
popf
lock
push
sbb
pop
jge
mov
inc
or
add
mov
cmp
cmp
push
test
inc
or
repnz
pushl
sbb
mov
aam
lock
mov
movsb
jge,pt
xorb
imulb
out
cli
mov
stc
and
sub
sbb
in
xchg
cmpsb
icebp
fcmovbe
lock
repz
add
pop
add
adc
jge
pop
push
pushl
test
and
or
and
push
inc
ret
mov
or
call
inc
fdivr
loopne
adc
inc
add
xchg
and
pusha
add
and
add
add
add
or
pop
pop
push
or
or
or
add
adc
push
adc
adc
push
adc
in
fidivrl
movhps
push
adc
adc
adc
add
sub
outsb
fisubl
or
adc
pop
adc
aaa
adc
inc
add
dec
add
add
pop
rcr
in
add
adc
add
jp
imul
stos
jb
jnp
imul
add
add
push
adc
pop
and
in
call
adcl
shl
and
bound
js
or
sarb
add
dec
add
push
inc
aas
and
scas
lahf
or
test
sbb
push
test
adc
add
xchg
and
inc
pusha
xor
jmp
pushf
jae
jo
into
add
subb
ja
adc
pop
pusha
inc
lods
push
adc
pop
popa
jno
and
mov
mov
push
lock
mov
and
roll
test
sub
scas
fiaddl
or
js
push
dec
orb
sub
rcr
push
ret
cli
or
xchg
jae
sub
std
cmpsb
xor
aas
imul
fdivrl
add
or
les
fsts
push
adc
dec
mov
cmp
ret
ja
out
cmp
ljmp
xor
and
fistpl
jg
inc
cmc
iret
xchg
inc
jl
repnz
dec
or
adc
pop
adc
add
pusha
sti
pop
inc
leave
add
sub
pop
lcall
add
lds
cld
cli
and
mov
fiaddl
jg
fnstsw
ficompl
jmp
sbb
and
mov
fsubl
inc
xchg
jno
movsl
jecxz
pop
mov
ljmp
stc
or
xchg
jg
or
insb
sub
addr16
out
or
push
call
data16
mov
repnz
inc
lock
scas
jle
fcmovnu
clc
cmp
fisubrl
aaa
std
jmp
aad
add
sbb
int3
lcall
fs
scas
mov
pop
pushl
inc
pop
movb
xchg
sbb
scas
adc
mov
xor
ljmp
lods
scas
xchg
test
aam
and
sbb
sarl
and
roll
jmp
push
lret
push
out
in
and
ss
repz
cmpsb
pop
outsl
icebp
mov
outsl
or
push
pop
lock
std
or
pop
mov
daa
test
aaa
dec
dec
pop
push
out
outsl
loope
loope
mov
call
lea
pop
cwtl
int
arpl
push
out
or
push
push
sahf
pop
clc
sti
jg
jno
lock
jg
inc
icebp
xchg
std
sarl
xor
fdivr
decl
hlt
and
xchg
jmp
sbb
lcall
incb
mov
mov
out
pop
jb
mov
mov
mov
sub
pop
add
arpl
dec
jp
push
gs
jg
jg
aas
stos
hlt
push
add
stc
loope
mov
sar
andl
aas
icebp
idivb
aad
or
mov
scas
fadds
jmp
jns
mov
in
repnz
jno
pop
sub
jg
scas
cld
or
push
inc
sbb
paddb
ljmp
sbb
jb
adc
push
lock
lods
jp
testb
jmp
sbb
into
fcomps
sbb
sbbl
into
andl
aas
loopne
mov
adc
aaa
xchg
in
add
inc
adc
loope
fnstsw
out
aas
std
cli
push
push
push
idivl
mov
sub
inc
scas
inc
mov
jg
je,pn
sub
jg
ljmp
mov
scas
call
les
jne
gs
jns
enter
or
push
pushf
push
scas
xlat
sub
pushl
inc
cmp
sti
punpckhbw
cmpsb
orb
mov
clc
xor
jmp
xchg
pop
clc
outsl
pop
dec
fistl
hlt
sub
movsb
add
lea
pushl
jg
gs
std
xorb
jg
aad
adc
ret
call
loopne
das
pop
pop
pop
shlb
out
sarb
sbbl
jno
or
mov
cmp
pop
les
cli
mov
mov
inc
arpl
stos
mov
lcall
insl
add
leave
push
scas
loop
jge
push
shrl
mov
push
mov
jg
call
and
sbb
xchg
jo
and
out
test
jae
push
iret
sti
cmp
cmp
aam
sahf
imul
fcmovnu
rorl
ljmp
nop
enter
add
cld
call
js
cmp
scas
lods
hlt
cmp
cmp
fistl
mov
adc
push
movsb
xchg
or
mov
stos
dec
lods
xor
outsl
pop
cld
ds
cmpsl
scas
popa
in
pop
or
mov
xlat
pushf
cld
aas
clc
jge
jnp
std
sbb
outsb
mov
sbb
jecxz
inc
adc
mov
adc
adc
call
inc
pusha
imul
add
mov
cmp
xchg
mov
mov
ftst
jbe
xchg
and
mov
shrb
shlb
out
aas
stc
add
out
gs
jno
mov
call
adc
pop
cld
addl
adc
and
ds
cmp
fmull
enter
jecxz
scas
jg
jg
sub
in
pop
mov
sub
mov
dec
incb
outsb
mov
aas
mov
or
cld
inc
or
in
pop
cmpsb
push
pop
jg
add
jg
mov
outsb
jg
aad
test
mov
mov
iret
cmp
jg
push
jbe
push
sbb
stos
icebp
pop
incb
jno
insl
lcall
sub
push
inc
jecxz
sbb
sarl
adc
sbbl
sar
adc
lahf
xor
ds
and
cmp
dec
push
js
mov
aas
mov
fsubrl
lock
incl
ss
and
clc
xchg
inc
rcrl
sbb
jne
push
and
mov
adc
xchg
lahf
or
push
rcrl
rolb
pop
inc
jb
jge
aas
fistpl
adc
call
jno
pop
dec
jg
mov
inc
sti
arpl
daa
std
or
sbb
mov
inc
cmpsb
popf
push
loop
inc
call
sbb
or
imul
xor
dec
xor
fsubr
fistps
lds
fidivrl
adc
stos
pop
add
dec
in
stc
clc
pushl
mov
lahf
les
sbb
sbb
cld
loop
pop
fiaddl
mov
in
stc
mov
lahf
outsl
int3
push
sbb
movsl
loopne
test
clc
pop
sti
jle
xchg
popa
out
out
outsl
xchg
inc
test
in
jge
popa
push
test
lock
outsb
hlt
sti
fsubs
shl
dec
jp,pn
adc
hlt
jmp
fistpl
out
lcall
sti
jg
shl
cld
mov
adc
stos
pop
jg
pop
shrb
rcl
jg
adc
decl
mov
popf
pop
rcr
dec
mov
gs
pushf
lea
jp
cmp
jnp
jecxz
adc
inc
lds
push
pop
adc
imul
aam
dec
int
sbb
inc
pop
xor
rorb
and
add
cmpsl
push
sbb
ljmp
mov
pop
inc
cmpsl
enter
mov
into
test
xchg
movsb
insb
or
and
sbb
cwtl
inc
mov
insb
stc
push
mov
fistps
outsl
lock
in
jmp
stc
out
rcll
clc
push
std
mov
ja
jl
or
mov
xchg
pmullw
clc
decl
repnz
dec
sahf
enter
fcmovb
inc
adc
inc
loopne
test
out
rcr
hlt
mov
inc
out
pop
or
or
dec
ss
mov
or
repnz
clc
dec
cmc
mov
jl
call
std
testb
pop
in
cmp
jg
aaa
inc
jmp
mov
pop
lock
jmp
hlt
dec
mov
adc
xlat
inc
aas
mov
jg
mov
cmp
or
addr16
sbb
cld
daa
jp
std
adc
loope
fldt
cltd
or
mov
ret
nop
cmp
das
test
mov
lock
pop
pop
div
cld
idivl
scas
pop
or
and
loope
lock
fidivl
jmp
in
jg
push
jge
fbstp
out
xchg
add
out
ss
cmovno
mov
loope
mov
cmpsl
popf
xor
or
fbstp
push
daa
outsl
das
jge
insb
jp
add
cmpsb
cmp
call
das
js
data16
decb
adc
mov
and
call
mov
cltd
add
pop
nop
inc
mov
inc
add
sub
or
aaa
std
fisttps
aaa
mov
mov
push
jnp
rorl
ror
sbb
sbb
sbb
aaa
inc
adc
jecxz
loop
shrb
mov
pop
clc
loope
loope
mov
sti
stos
mov
dec
add
xlat
insl
in
jmp
xor
lock
adc
jne
push
cmp
repz
pop
and
sub
jo
sarl
pop
out
jg
jno
ret
movsb
and
in
or
out
iret
push
dec
jge
jmp
clc
xchg
cmpsb
ljmp
ds
inc
mov
in
sbb
xchg
imul
in
bswap
jmp
outsl
jmp
std
mov
daa
jmp
faddl
push
sub
mov
adc
dec
filds
pop
stc
push
dec
out
fstpt
mov
enter
fcoms
sub
cmc
out
daa
icebp
push
lahf
sti
inc
pop
imul
call
cmpsb
scas
les
pop
xor
mov
xchg
mov
fildll
fsubrl
dec
add
sub
inc
or
inc
inc
leave
add
sti
push
sti
pop
inc
and
push
mov
push
mov
pop
cmp
int3
pop
iret
and
and
add
add
lahf
cld
stc
push
add
dec
or
add
jne
cli
andb
push
and
dec
loope
push
or
addl
xor
push
add
push
stos
addb
inc
imul
or
or
adc
add
and
out
mov
jo
imul
or
insl
xor
add
inc
lods
mov
sub
cwtl
shrb
mov
xor
dec
dec
std
jg
rolb
push
outsl
outsl
insb
push
push
mov
popa
jo
push
sti
adc
lcall
and
aaa
adc
jbe
add
jb
dec
fcmovu
cmpsb
xor
fcomip
push
jb
inc
xor
inc
push
inc
jmp
xor
sub
push
adc
imul
mov
jne
js
aad
inc
inc
jo
xor
leave
add
push
popa
and
cmp
jns
jmp
imul
andb
cmp
push
cwtl
or
ljmp
outsb
ret
out
inc
test
dec
push
jge
jecxz
xchg
jo
inc
and
or
add
inc
jl
loopne
fwait
cmp
and
dec
outsb
imul
pusha
sbb
insb
stos
sub
sbb
sahf
sbb
mov
push
outsb
faddp
ret
inc
imul
fcom
xchg
mov
adc
imul
inc
mov
or
std
push
fisubs
sub
push
mov
outsl
mov
pop
ds
insb
jne
adcl
and
jne
xchg
adc
xor
sub
sbb
xorb
push
fildl
fistps
mov
jne
addr16
jae
mov
push
cs
xchg
push
js
pusha
sarl
sub
inc
popf
shl
das
push
jns
mov
inc
mov
fdivrl
push
in
shl
push
push
push
hlt
fs
xchg
and
outsl
dec
jns
out
cmp
cmp
jae
mov
xor
loop
bound
flds
dec
subl
sub
dec
push
pop
pop
mov
lods
mov
stos
inc
dec
sbb
cs
call
pop
lods
insl
and
mov
dec
popa
and
mov
add
sahf
mov
xor
popa
jp
fs
xchg
cmp
or
fiaddl
popw
push
gs
stos
push
popf
js
insb
cmpl
fs
movb
andl
and
lock
rcrl
mov
sbb
pop
in
push
repnz
dec
jae
in
ficoml
cmovbe
mov
adc
cmp
fisttpl
or
pop
mov
cs
nop
dec
jb
xchg
rorl
or
sti
js
jmp
std
xchg
lods
xor
loopne
adc
je
ja
mov
add
jg
insl
call
push
stc
ficoml
lods
call
fcompl
mov
and
inc
popa
es
lds
fs
mov
inc
push
jg
sbb
sub
sbb
mov
adc
cmp
aam
or
adc
outsl
jns
andb
int
push
push
enter
xchg
mov
sbb
pop
pop
imul
aad
and
inc
je
push
or
cmc
ss
inc
out
sti
sbbb
gs
inc
sbb
pop
xchg
aas
push
mov
sub
and
sbb
faddl
es
inc
lock
mov
add
fsts
xor
stos
pushf
or
inc
stos
inc
js
pop
loope
xor
inc
push
mov
or
scas
adc
and
xor
mov
mov
push
jne
inc
push
add
popf
mov
cmp
pusha
xorb
out
addb
or
out
mov
adc
cmpl
pop
sbb
outsl
movsb
xchg
and
pushf
inc
sbb
adc
sti
cmp
lock
cmp
push
pusha
enter
outsl
int
xchg
cmp
aaa
ret
mov
imul
add
add
add
jmp
insl
shll
test
leave
and
adc
gs
push
inc
dec
push
divl
outsb
mov
xsha256
cmpsb
push
and
mov
inc
xor
xchg
test
pop
mov
sarb
arpl
push
or
mov
push
inc
dec
add
xor
dec
fstl
sub
mov
and
pop
push
addr16
inc
sbb
shll
es
dec
xor
xchg
popf
and
cmp
orl
sbbl
fisttpl
subl
jno
test
jne
sub
mov
or
mov
adc
mov
xorl
fists
xchg
pusha
pop
mov
arpl
mov
lret
pop
fs
inc
stos
aaa
rolb
insb
and
mov
push
cmp
outsl
add
push
and
sbb
inc
jns
pop
xchg
ljmp
pop
mov
sbb
inc
imul
fdivs
outsl
inc
pop
mov
sbb
cmpb
mov
jmp
insl
add
jle
nop
adc
icebp
adc
stos
mov
xchg
and
dec
jae
jecxz
popf
dec
jno
aad
popf
xchg
stos
or
cmp
sub
js
lods
push
imul
or
lds
inc
and
mov
enter
xor
daa
dec
jno
inc
xchg
shl
loop
imul
dec
push
push
pop
xor
adc
addr16
enter
pop
xchg
test
push
push
adc
and
adc
dec
or
cmp
mov
insl
dec
outsb
dec
fbstp
mov
shll
jnp
sar
pop
add
add
mov
rcrl
sub
cmpsb
xor
or
mov
mov
push
adc
mov
lcall
or
mov
mov
inc
jb
and
mov
or
and
and
outsl
movsb
dec
movsb
bound
inc
pusha
add
ds
inc
jb
sub
adc
jae
push
leave
movsb
ss
inc
shll
fidivl
inc
add
repz
pop
cmp
sbb
in
dec
and
cmpsl
loopne
rclb
fsubrl
add
pop
mov
jo
mov
xlat
gs
mov
push
mov
scas
mov
cmpsl
dec
fisttpl
push
cmp
andb
or
das
daa
or
adc
and
dec
in
inc
fildll
and
pop
movsb
and
push
push
mov
subb
adc
push
cmp
cmp
shll
shll
pop
xchg
and
push
sub
add
adcb
pop
lret
add
or
loope
repz
jge
out
test
mov
enter
push
fs
dec
push
and
psubusw
adc
adc
jbe
jno
imul
inc
xor
sub
mov
ret
jne
mov
pop
adc
adc
pop
push
dec
adc
mov
mov
arpl
dec
or
xchg
mov
test
sub
adc
popf
or
inc
mov
add
inc
lods
addr16
fisubl
sub
xchg
dec
in
test
dec
out
outsb
mov
xor
sub
push
cs
jbe
faddl
xchg
icebp
or
mov
cmp
inc
jo
outsb
call
sbb
pusha
rolb
imull
test
mov
adc
and
add
push
mov
outsl
add
pop
mov
pop
sbb
or
add
roll
call
xlat
push
fs
pop
fcoml
cmp
xorl
das
dec
test
add
mov
lret
loop
aam
out
pop
or
add
iret
or
mov
sub
subb
vmread
push
push
inc
out
adc
ljmp
scas
xchg
push
adc
pop
xchg
push
xchg
or
push
xchg
sbb
dec
jae
xchg
loope
or
push
push
js
xchg
push
jnp
pushw
mov
dec
jo
add
jmp
iret
int
imul
sbb
das
adc
pop
dec
or
inc
shlb
nop
push
or
jg
push
cmp
or
sub
add
movsl
pop
dec
cmp
adc
das
repz
verr
or
add
aaa
or
add
or
add
fisubl
xchg
jg
pop
add
push
mov
mov
pop
dec
js
pop
cs
movsl
sub
stos
fcmovnb
push
xlat
add
and
jb,pn
pop
inc
shll
jge
mov
out
inc
cs
and
xlat
loopne
push
roll
add
push
jns
out
rcrb
jo
scas
outsb
orl
jle
bnd
dec
xchg
lock
and
add
add
mov
lea
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
and
inc
add
insl
inc
add
add
