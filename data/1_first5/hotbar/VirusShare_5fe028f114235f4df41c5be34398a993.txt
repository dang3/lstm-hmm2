divl
in
mov
mov
sarb
add
add
int3
cmpsl
std
in
pushl
add
call
test
jne
pop
ret
push
push
sbb
mov
test
je
aas
mov
movb
lock
sti
in
decl
dec
movzwl
lea
jne
sbb
xor
jmp
and
neg
sbb
and
in
jbe
mov
mov
call
push
mov
xchg
mov
add
sbb
daa
or
add
les
mov
rclb
addr16
push
enter
and
jg
lock
push
push
push
mov
push
into
pushf
add
cmpsl
jmp
jmp
stos
adc
push
push
sahf
jp
push
testb
clc
test
ds
jmp
pushl
sar
dec
xor
ret
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
ljmp
cmpsb
push
mov
andl
mov
or
push
add
fidivs
call
aaa
mov
imulb
mov
in
iret
negl
push
in
loopne
movb
inc
jge
mov
sti
outsb
ds
inc
add
add
call
mov
cmpl
jne
mov
mov
jl
sub
imul
mov
out
fistpll
adc
pushl
sbb
pop
pop
push
or
in
push
in
pop
push
sbb
in
xlat
cs
loop
mov
pop
in
adc
clc
loopne
and
dec
sbb
mulb
push
mov
in
push
cwtl
mov
push
lock
clc
call
faddl
in
mov
push
push
jle
insl
ret
xor
sbb
push
push
lods
or
pop
pop
cmp
int
add
fdiv
fistpl
fisttpl
ret
add
sar
das
test
je
pop
add
pop
mov
push
mov
sbb
loop
loopne
sub
orb
rcrb
adc
add
and
add
add
xlat
shrl
push
dec
in
pusha
les
mov
push
xchg
dec
add
sub
lcall
lock
idivl
pop
pop
sub
sahf
or
imul
ljmp
inc
nop
loopne
js
in
push
push
jbe
hlt
mov
in
inc
inc
mov
and
sbb
mov
insl
incl
mov
jmp
mov
push
inc
mov
dec
jb
mov
pop
push
and
and
jmp
inc
adc
test
je
adc
mov
je
dec
pop
sbb
gs
mov
cmp
jbe
int
in
cmp
push
sub
inc
cmp
jae
repz
insb
sub
sub
push
push
mov
mov
add
mov
jge
pop
add
cwtl
and
jo
sub
sbb
inc
int
jnp
test
ja
jb
push
adc
add
aas
add
pop
sbb
test
push
push
xchg
pop
jbe
push
push
xor
enter
pop
rorb
lods
mov
sub
xchg
das
push
sbb
pop
push
and
stc
jo
out
add
addl
jo
incl
jb
fs
push
sub
loop
fsubrl
push
xorl
pop
or
fldt
enter
rolb
aad
sub
fcmovnu
das
pop
adc
or
push
push
dec
je
pushf
adc
stos
add
jle
xor
xchg
cmp
je
or
jb
orb
fsts
in
cmp
and
std
repz
shlb
push
mov
shll
adc
subl
outsb
sbb
push
inc
mov
int3
push
mov
scas
jge
or
clc
fsubs
js
push
in
xchg
loope
fs
lret
sbb
cld
push
add
call
pop
test
jne
fsubs
xchg
sbb
adc
dec
daa
mov
scas
loope
inc
adc
outsb
push
fidivs
push
movsb
es
icebp
xor
inc
xor
mov
andl
lds
movsl
fldl
repz
or
add
jmp
adc
nop
cmpl
and
xor
pushf
or
and
iret
mov
lock
xchg
push
add
sbb
punpckhbw
pop
test
xor
sub
dec
push
push
int
rcl
mov
cmp
and
mov
mov
push
js
sbb
shrb
les
shll
cld
sub
mov
mov
mov
pop
mov
mov
lods
mov
in
test
cld
inc
mov
push
push
test
mov
mov
mov
sahf
mov
test
push
push
testb
push
push
push
adc
je
mov
fiadds
aam
and
or
mov
push
push
mov
jl
and
push
data16
out
mov
sub
loopne
lahf
mov
shrb
or
mov
movsl
imul
test
jl
adc
push
xor
mov
mov
ss
xorl
mov
mov
inc
inc
or
iret
frstor
cmp
je
loopne
pop
mov
lea
lahf
jecxz
in
mov
aaa
je
nop
sub
cmp
icebp
add
sbb
jno
insl
lea
jno
add
les
insb
mov
insb
das
add
cwtl
pop
mov
inc
or
mov
rorl
or
add
insl
sbb
mov
mov
mov
xchg
cmp
int3
mov
and
aad
cmp
pop
cmc
push
inc
bound
stc
or
mov
or
mov
xchg
iret
mov
sbb
sti
push
cwtl
bound
xor
data16
ret
push
mov
fldenv
jbe
push
jmp
insl
std
lcall
adc
in
mov
and
inc
out
sbb
hlt
jne
pop
mov
sub
insb
jo
inc
fs
mov
je
sub
stos
dec
pushl
pop
in
ficoms
mov
or
mov
sti
xlat
clc
and
pop
xlat
test
je
mov
mov
pop
mov
push
push
push
mov
sarb
mov
sub
sub
and
mov
or
std
pop
cmc
mov
add
xlat
mov
test
jne
fs
inc
cmp
jl
jmp
inc
add
cld
pop
pop
push
mov
push
pop
push
pop
jmp
sub
lret
cli
test
lods
js
mov
ret
add
cwtl
test
mov
mov
xor
adc
push
sbb
js
and
aad
mov
adc
fdivs
ljmp
aas
add
add
push
dec
push
andl
push
imul
mov
xor
jl
std
and
add
cmp
pusha
adc
dec
lock
adc
pop
ret
push
data16
push
shl
or
fcmovnu
in
push
push
push
dec
int3
pop
mov
and
mov
pop
ja
sub
push
cs
aaa
add
dec
inc
aam
push
mov
ficompl
sub
pop
js
sub
pop
cmp
mov
jge
fchs
mov
jmp
inc
or
test
outsl
cmp
add
sub
adc
incl
jg
push
pop
lea
push
mov
imul
add
jmp
in
cmpb
adc
dec
or
sbb
inc
adc
leave
ret
fldt
ret
icebp
cmp
cmp
push
add
or
sbb
push
clc
std
cli
out
mov
dec
mov
jmp
add
inc
pop
adcb
inc
xchg
pop
stc
jne
mov
cmp
xchg
in
cmpl
push
repnz
inc
repz
push
ja
mov
loopne
or
decb
pushl
cmp
jmp
xchg
rclb
ss
popaw
fcoml
cmp
cld
gs
pop
pop
arpl
adc
shlb
out
adc
loopne
add
nop
test
je
add
inc
test
pop
cwtl
rcl
mov
mov
push
movsb
cmc
lds
ljmp
divb
sbb
push
push
dec
mov
cmpsl
xchg
sub
or
pop
ss
push
push
fcmovnb
enter
adc
inc
cli
mov
pop
pop
xchg
mov
loopne
je
test
and
adc
aas
sbb
inc
sub
add
inc
add
icebp
cmpsb
js
add
dec
push
sub
push
ds
std
mov
fidivrl
pop
cmp
mov
decl
das
fs
cmp
je
cmpl
pop
mov
cmp
jne
push
push
jnp
inc
jnp
pop
into
jo
ret
jl
sbb
js
pop
jmp
fmuls
mov
pop
cmp
adc
leave
push
inc
sub
inc
or
sarb
jge
xlat
fsts
test
fidivrl
inc
clc
jg
pushf
jecxz
mov
fimuls
movb
or
int3
cltd
add
cltd
adc
je
inc
or
hlt
movsl
mov
shlb
adc
ret
imul
aad
ds
sbb
mov
je
movsl
fndisi(8087
push
pop
ret
das
xor
and
add
mov
loopne
jl
jbe
adc
test
cli
push
das
gs
push
call
pop
das
adc
mov
into
sbb
push
sbb
or
dec
pop
add
popf
push
out
mov
ds
inc
mov
lret
push
mov
and
adc
lods
mov
jb
add
aad
dec
adc
pop
mov
inc
pop
xor
push
clc
sub
mov
xchg
outsb
icebp
cli
mov
sbb
cmpl
jle
push
daa
sub
and
cmc
negb
mov
mov
ret
ret
mov
push
add
and
push
out
inc
or
cmp
push
adc
xchg
stos
jne
call
nop
mov
inc
stos
add
push
xchg
xorl
jbe
inc
add
mov
push
adc
adc
push
adc
jmp
ljmp
pusha
mov
mov
fidivl
adc
pavgb
lods
loope
or
fdiv
fadds
or
mov
jae
cmp
stc
loop
mov
sbb
vhsubps
mov
xchg
js
sarb
xlat
xlat
mov
and
cwtl
cmp
es
dec
lcall
test
arpl
inc
scas
adc
mov
sbb
sbb
or
xchg
jmp
mov
clc
clc
or
dec
les
lea
push
mov
adc
jmp
test
je
inc
or
testb
call
add
call
out
pushl
movsl
jg
adc
outsb
sub
push
mov
aas
cmp
push
movl
ret
mov
adc
sbb
insb
scas
pop
dec
jmp
out
bound
and
sbb
je
mov
inc
iret
js
or
push
mov
dec
shlb
jle
rcr
push
xor
inc
or
mov
shlb
fiadds
mov
or
rolb
push
mov
cmp
add
push
scas
and
jb
inc
and
mov
ret
aaa
jae
repnz
pusha
add
or
or
jl
or
shll
sahf
add
push
push
sub
push
jno
adc
das
mov
pop
adc
sbb
ret
cs
cs
aaa
sbb
jo
lock
sbb
sbb
add
pusha
and
pushf
xchg
popa
cmp
into
adc
pop
sarl
add
push
sub
or
add
push
add
adc
pop
push
shr
xchg
fwait
lods
dec
or
add
loop
cmpsb
xor
cmp
ja
xchg
or
sti
rclb
sbbb
imul
stc
adc
cmp
popf
test
jne
cmpl
push
cmp
mov
ret
shrl
pop
neg
jne
lock
fdiv
inc
mov
fidivrs
shrl
je
xchg
adc
adcb
push
pop
mov
js
pop
pop
rcrl
rcrb
ljmp
les
jbe
call
fnstsw
mov
cmp
pop
and
ja
outsl
cli
mov
push
pop
dec
je
stos
adc
in
jge
adc
imul
test
jmp
cld
dec
inc
mov
jo
out
jmp
out
jae
or
and
adc
int
jp
jecxz
insb
je
jecxz
jne
mov
jmp
ret
push
mov
jg
mov
lock
mov
inc
add
add
mov
std
mov
hlt
mov
lea
sti
inc
out
jbe
xchg
adc
push
mov
or
cld
iret
xorl
add
ror
pop
add
and
push
or
add
sub
jo
js
xchg
imul
stos
movl
fistpll
sbb
adc
jmp
cmp
je
cmp
rol
imul
jmp
inc
sbb
mov
adc
adc
xor
dec
fstpl
jbe
cmp
jmp
sbb
dec
xchg
jmp
and
lds
data16
sbb
xlat
lock
inc
sub
je
xchg
sarl
scas
mov
hlt
jns
iret
xor
sub
out
push
jmp
in
fs
scas
pop
stos
xlat
cs
cmp
loopne
xor
adc
push
push
pusha
aaa
ret
shll
sub
in
in
stc
mov
movb
rorl
push
or
adc
jno
mov
xchg
cmpsb
dec
mov
push
and
mov
pop
push
lea
push
cmp
xor
push
lea
cmp
xchg
push
dec
aam
mov
inc
les
scas
pop
or
pop
mov
pop
stc
in
pushf
jge
mov
pop
push
mov
sbb
ja
push
sbb
fdivrl
mov
testb
frstor
in
add
in
movsb
push
call
xchg
jge
subb
and
ja
ja
je
ljmp
inc
sub
jo
pushf
ret
jnp
ror
nop
push
test
mov
mov
xchg
sbb
xchg
xchg
test
fisubrl
or
or
cmpl
nop
add
sbb
push
lock
sub
arpl
and
mov
in
adc
xorb
insb
pop
mov
js
out
inc
ficoml
je
adc
dec
jp
pop
mov
push
xchg
dec
dec
rclb
not
and
push
mov
mov
inc
js
xor
xor
push
xor
push
cmovno
sarl
in
jnp
stc
insb
clc
push
push
push
push
mov
loope
pushf
dec
filds
test
aas
adcl
mov
pushf
push
mov
dec
dec
lret
dec
mov
es
jp
fidivrs
xchg
sahf
addb
xchg
inc
pop
pop
daa
lea
loope
cmp
je
mov
jo
mov
sub
and
clc
or
in
add
mov
sbb
cmp
push
fs
dec
or
ret
adc
outsb
xor
pushf
jecxz
ljmp
and
aas
je
push
xor
mov
pushl
mov
out
fidivl
adc
push
push
dec
lea
scas
aas
dec
rorb
inc
sarb
shlb
sub
ret
ret
add
bound
dec
lcall
cmp
push
mov
insl
fistpl
add
mov
inc
adc
dec
cmp
mov
pop
leave
pop
popf
mov
jmp
dec
xor
adc
sbb
movsb
scas
pop
add
sub
push
mov
test
and
sub
rcrl
push
into
or
and
inc
sub
dec
adc
push
push
add
cmp
mov
fists
inc
js
dec
inc
icebp
sti
lahf
mov
sbb
and
and
push
fs
fs
andl
mov
sbb
xor
fldt
xor
cmp
dec
or
cmp
cwtl
and
adc
call
cs
push
adcb
dec
maskmovq
sbb
addl
test
nop
iret
xor
nop
adc
xchg
sub
into
int3
popf
adc
pusha
cmp
icebp
popf
ljmp
adc
add
fcoml
dec
mov
adc
punpckhdq
mov
inc
lock
pushl
sub
push
repnz
mov
cmpsl
incw
inc
sub
daa
lods
aas
jo
sbb
xchg
mov
out
cmp
outsl
sub
add
jge
in
or
in
popf
jbe
push
dec
je
ss
sub
sub
pop
inc
sbb
pop
aas
push
jg
jmp
mov
add
xchg
andl
sub
pop
or
jp
mov
push
bound
imul
lcall
add
sbb
dec
sub
cmp
hlt
movb
pushf
or
lock
inc
cmc
mov
fldz
enter
dec
sbb
scas
in
pop
dec
and
mov
ret
dec
inc
mov
mov
push
int3
lea
aas
call
fisttpll
cmp
xchg
pop
fs
pop
mov
sbb
mov
je
test
inc
fs
lods
sti
call
mov
pusha
insb
lahf
scas
mov
push
inc
sahf
jbe
loope
jle
or
pop
lea
inc
dec
push
or
pop
jle
outsb
pop
jbe
adc
cmc
add
push
sub
cmp
mov
mov
gs
mov
shrb
sbb
push
fwait
xchg
frstor
push
sub
or
nop
or
iret
repz
push
enter
adc
jl
pop
je
adc
or
inc
loope
xchg
push
loope
jo
sub
mov
push
adc
cmp
loopne
dec
rorl
cmpsb
dec
lock
ljmp
scas
and
sub
out
xlat
call
xor
addb
add
mov
xor
cmpl
pop
push
cmpb
lock
sbb
xchg
iret
int
test
icebp
mov
xor
bound
xor
imul
or
sti
pop
ljmp
sbb
mov
add
push
es
or
mov
ret
rcl
leave
jae
adc
lock
sub
add
mov
or
pop
or
dec
or
add
rcrl
dec
sahf
andl
ds
cwtl
mov
ds
jecxz
shll
pushf
and
adc
push
test
loop
cli
int3
fmulp
arpl
dec
push
add
push
sbbl
add
dec
mov
sub
cmp
shl
mov
xchg
pop
dec
dec
lock
xor
adc
inc
mov
or
loope
mov
add
and
mov
add
lcall
xor
sarb
jbe
aaa
test
adc
push
dec
sub
fmulp
mov
je
cmpb
mov
je
test
pop
shl
lock
jmp
stc
push
add
sub
sub
push
push
cmp
cmp
jmp
adc
pop
cmp
cmp
mov
push
or
xchg
mov
mov
pop
inc
shlb
mov
stos
mov
loopne
push
sbbb
ficoms
adc
sahf
data16
mov
sbb
data16
jno
outsl
and
sbb
pop
push
aam
cmp
inc
xorl
out
js
cwtl
jo
dec
call
scas
sbb
cmp
and
imul
nop
inc
subps
bound
fiadds
sahf
adcl
mov
or
cltd
mov
fwait
add
xlat
add
sar
push
mov
insb
cmp
adc
jl
dec
inc
sbb
dec
cmpsb
lock
mov
mov
mov
fcomip
daa
rclb
adc
data16
xor
idiv
jle
mov
fwait
inc
jp
mov
incl
pusha
adc
jne
loopne
jbe
rcr
and
pop
jmp
fstl
mov
cmpsl
int
mov
das
loop
jne
lahf
in
pop
and
sbbl
inc
adc
aaa
les
insl
rorl
out
dec
and
ja
or
pop
pusha
push
ljmp
push
loopne
mov
clc
je
test
pop
ljmp
idivl
mov
xor
sub
mull
pusha
jl
sbb
into
mov
scas
fs
or
xchg
arpl
mov
std
jle
cmp
lahf
xor
mov
sbb
or
lea
clc
add
sti
fbld
movl
cmp
out
jg
jae
dec
sub
jge
jmp
mov
push
jg
clc
pop
hlt
fildl
pusha
or
add
clc
loopne
xor
xor
mov
fdivrp
mov
dec
sub
mov
mov
adc
pop
add
pop
add
fidivs
cmp
pop
jl
jmp
rolb
fbstp
cmpb
or
clc
fidivl
jmp
push
inc
xchg
outsb
mov
mov
dec
lods
inc
xchg
sahf
lods
jmp
shr
inc
jne
pop
add
jl
dec
jmp
dec
mov
aad
xchg
sub
js
cmpsl
xor
lea
push
or
hlt
push
jge
add
push
and
clc
das
rolb
sbb
mov
notb
jne
push
lahf
lcall
lret
je
or
fcoms
jne
subl
sbb
test
mov
push
push
loopne
mov
pop
sti
adc
lock
adc
push
ret
push
push
cld
sub
out
imul
push
and
test
popf
rcll
cwtl
sub
aaa
jae
adc
gs
mov
adc
adc
loopne
jne
mov
xchg
pop
jne
rcll
outsl
cld
sbb
inc
jmp
leave
lods
add
movsb
pop
mov
inc
pop
push
adc
xor
fwait
mov
out
mov
push
mov
push
push
sbb
sbbl
jns
push
add
pop
pop
dec
mov
ja
aad
sub
dec
push
dec
add
push
xchg
or
cmp
or
or
pop
and
aas
flds
dec
imul
and
adc
push
shll
ja
ja
pop
mov
push
mov
add
adc
leave
sbb
cld
mov
arpl
sbb
mov
add
and
push
mov
cld
fmuls
pop
pop
xchg
jl
adc
mov
cmpl
movnti
aaa
xchg
mov
mov
mov
pop
inc
adc
push
xor
xchg
dec
jb
insl
push
or
add
fbld
arpl
or
inc
or
mov
pusha
sub
jno
scas
shrb
or
xchg
push
pop
cmp
push
loopne
and
mov
outsb
sub
clc
setb
test
jne
loope
loopne
mov
xchg
cmp
sbb
mov
xor
loop
outsl
dec
adc
pop
add
rcll
out
mov
je
sub
dec
scas
ret
push
aam
fwait
add
mov
mov
nop
lock
hlt
mov
mov
enter
ss
xchg
mov
fwait
or
sub
push
inc
cmp
push
cmpsl
repz
hlt
pop
jo
mov
push
imull
stos
or
jbe
dec
mov
push
add
sub
or
out
sbb
and
mov
test
push
push
add
ret
pop
xor
loope
push
adc
pop
sbb
mov
je
repnz
clc
or
and
push
je
and
pop
or
push
je
std
and
jmp
pop
or
mov
mov
lahf
out
ret
leave
rolb
ror
add
and
std
xor
push
adc
movl
add
or
movl
cmp
cmp
test
inc
fwait
lock
mov
sbb
sub
jl
gs
movsl
mov
fcompl
add
fs
lods
mov
les
lods
pop
pop
rorb
rcll
roll
and
or
in
jp
aad
jl
setne
decb
test
add
clc
push
lcall
fcoms
push
incl
inc
jne
push
push
or
or
divb
stc
out
xchg
aaa
ja
xor
bound
or
mov
jnp
or
loop
xor
enter
push
push
or
faddl
mov
jmp
jl
shl
loopne
arpl
pop
or
mov
sbb
or
nop
or
mov
test
dec
and
popf
inc
push
mov
in
inc
or
and
into
inc
loopne
push
or
jb
sbb
dec
add
sub
sbb
adc
shr
ds
push
mov
mov
int
xor
mov
inc
insl
cmp
pop
pushf
rorb
pop
jmp
push
mov
int
lret
xor
mov
mov
call
xor
fcmovbe
enter
ds
pop
dec
inc
mov
sbb
dec
jecxz
inc
push
push
push
fcom
shll
arpl
jbe
or
lock
shll
sub
mov
xchg
repz
dec
mov
outsl
adc
add
or
xchg
clc
outsb
repz
adc
mov
loopne
jns
push
and
pop
insl
sarb
dec
push
nop
out
xor
push
xchg
pop
or
fisubrl
sbb
jle
add
fdivs
sbbb
movsb
mov
mov
je
add
or
outsl
pop
enter
lea
push
test
xchg
iret
or
orl
and
mov
shr
enter
stc
shll
cmpsb
cs
popf
inc
inc
pop
jne
arpl
cld
cmp
adc
hlt
js
je
into
in
jmp
dec
lcall
or
inc
add
sbb
inc
add
sub
or
sti
push
mov
cmpsl
mov
and
ret
out
call
inc
xchg
xchg
adc
lret
or
lcall
leave
mov
xchg
xchg
adc
rclb
sbb
stos
cltd
or
adcl
daa
add
sub
nop
aam
adc
fdivl
in
in
fcompl
sub
mov
inc
adc
pusha
and
mov
push
jl
bound
push
jo
je
in
adc
sbb
pop
cmp
or
mov
clc
dec
clc
cmpsl
clc
or
push
adc
push
jmp
roll
cmc
fnstenv
cmp
adc
fdivrl
fdivl
adc
scas
rclb
dec
mov
gs
adc
or
or
jo
fstl
into
in
cmp
pop
add
push
jb
xor
int3
adc
imul
cmpsb
pushw
inc
push
hlt
or
add
push
adc
or
enter
add
inc
push
pusha
and
push
cmpb
sub
lea
stc
fs
fnstenv
pusha
push
bnd
xor
sbb
cmpsb
movsb
adc
pop
inc
sub
jo
or
sub
jns
imul
or
je
jbe
lods
popf
push
mov
add
pop
mov
nop
testl
sbbl
add
inc
sahf
pop
or
xor
cmpsl
shrb
add
push
mov
dec
insb
and
cmpsl
jmp
mov
jg
jne
or
sahf
xor
bound
inc
cmp
loope
jp
mov
mov
adc
sbb
fadds
in
sbb
pushf
mov
jmp
cld
inc
cmp
xlat
add
push
enter
or
mov
mov
adc
sbb
ror
or
mov
leave
popa
jo
das
movsb
xchg
jmp
adc
idivb
jo
setg
xor
or
enter
push
or
jnp
rcrb
jno
loopne
push
fcmovnbe
movsb
fimull
cmpsl
mov
adc
test
inc
sti
mov
add
mov
sarb
push
popf
stos
sbb
loope
xchg
pop
scas
dec
shlb
and
sbb
movsl
add
push
cmpsl
ja
cmp
dec
ret
push
enter
adc
jb
sbb
lds
mov
sarl
cli
mov
rcl
mov
in
jns
xchg
push
ds
movsb
rcrl
repnz
add
dec
outsl
sbb
push
and
pop
mov
jb
and
sbb
push
xchg
scas
sub
call
divb
ds
and
add
repz
pushf
push
test
push
inc
and
push
out
das
insb
dec
leave
dec
pop
push
sarb
arpl
lret
subl
push
sbb
or
sbb
or
or
stos
adc
add
sti
sti
enter
fnstcw
add
repnz
cwtl
push
sti
pop
mov
repnz
lods
test
jle
push
enter
sbb
add
xchg
lock
sldt
add
sub
push
in
push
push
or
sub
xor
test
or
sub
cmp
push
or
pop
and
pop
repnz
int3
insb
add
inc
sahf
or
aad
push
and
push
les
in
lods
mov
xchg
cmp
das
xor
aas
movsl
xor
or
test
sub
xor
xor
xchg
push
fimuls
insl
inc
or
add
nop
mov
fdivrl
add
jb
push
push
cwtl
in
prefetchwt1
xor
fwait
add
or
inc
xor
sub
rorl
jbe
test
adc
rcrb
or
xor
aas
enter
lock
mov
jmp
xor
sbb
shlb
int
xor
popf
icebp
test
mov
or
insl
push
adc
mov
fbld
jl
dec
and
push
pop
movl
lret
out
enter
test
xor
incb
and
sub
push
mov
insb
xchg
or
fcmovnbe
dec
dec
mov
clc
push
rcrl
outsl
aad
inc
fisubs
test
lock
test
and
mov
test
xor
or
ret
xor
cmp
movsb
and
sbb
or
sub
rcll
gs
sbb
ret
cmp
and
mov
jg
pushf
inc
testl
inc
jl
call
cli
insl
out
clc
neg
clc
out
mov
jmp
mov
mov
push
pop
add
lret
sub
clc
outsl
loope
mov
int
push
sar
push
cmpsl
fdivl
aas
aaa
loop
or
out
test
jne
orl
data16
arpl
sbb
outsl
testb
pand
enter
dec
subb
cmp
rcrb
add
cmp
cmpsb
mov
push
and
dec
push
test
push
lcall
data16
mov
lret
sub
or
add
rclb
sub
add
daa
dec
or
iret
mov
lret
or
or
push
cmp
add
sti
push
in
jmp
add
dec
sub
or
sub
add
idivl
ja
les
or
iret
vmwrite
adc
or
xchg
cmpsl
jb
call
push
mov
cltd
nop
ja
cmp
pop
les
enter
and
and
fisubs
and
mov
push
mov
aam
add
inc
js
push
sbb
mov
and
inc
adc
mov
inc
push
xlat
sahf
push
push
sbb
int
pop
push
xor
add
push
out
test
subl
in
cmpl
xchg
mov
jns
cltd
adc
adc
xchg
lods
test
or
fildl
inc
fsts
push
cmp
add
fsubs
adcl
xchg
add
adc
sbb
or
adc
mov
dec
push
jmp
xlat
or
pop
cmc
jns
lods
push
mov
pop
push
push
rolb
mov
insb
mov
xchg
int3
pop
push
and
gs
jp
jne
aam
aas
mov
push
test
mov
sub
fimuls
gs
pop
or
test
pop
xchg
aam
es
and
xor
popa
or
nop
inc
rorb
xchg
mov
or
mov
push
jns
inc
rcll
push
mov
push
xchg
cmp
cmp
sub
repnz
or
cmp
movsb
or
testl
icebp
out
test
xor
adc
dec
cmp
push
push
jecxz
pop
das
test
push
in
gs
js
cmp
or
or
mov
aad
xor
sub
push
sbb
sbb
inc
mov
jg
xchg
dec
movb
bound
sbb
jae
enter
out
jl
push
loopne
cmp
adcl
and
and
lock
dec
push
mov
sub
sbb
jnp
lea
inc
or
jge
int
inc
int
pop
pop
add
jne
bswap
rorl
mov
sbb
xor
mov
push
xor
aam
push
cmp
out
jp
cs
in
das
pop
nop
sbb
shll
popa
sbb
out
out
push
inc
cld
fimuls
nop
mov
pusha
add
dec
mov
sbb
fcoms
cmpw
lock
cld
sbb
idivl
repz
mov
test
mov
xor
js
jle
push
or
dec
xor
and
js
fidivl
or
es
push
dec
test
cmp
fwait
jp
or
mov
dec
or
inc
out
jecxz
jecxz
hlt
sbb
adc
movsb
or
cmp
jns
push
cmp
call
divl
add
lock
mov
out
lret
addr16
add
mov
pop
sbb
jl
sbb
or
pusha
add
cmp
mov
pop
hlt
pop
ret
daa
jne
pop
out
add
sbb
pop
jbe
sbb
cmp
pop
fidivs
push
notl
pop
ret
popf
xchg
aam
push
adc
jbe
into
xor
jo
pop
aad
mov
add
fs
cmpsb
xor
stc
dec
aam
jle
pop
das
sbb
push
and
aam
js
xchg
in
dec
mov
xor
mov
add
pop
add
in
sbb
and
movl
mov
lock
pop
test
lods
lock
fimull
inc
push
fsubrp
js
or
and
stos
test
and
push
leave
sub
dec
cmp
stc
daa
mov
sub
jmp
add
push
cltd
lcall
inc
fisubs
jmp
mov
stc
add
arpl
or
movsl
jb
and
xlat
sub
imul
pusha
pop
adc
pand
sbb
pop
sbb
fisttpl
push
push
xor
sub
push
sti
loop
inc
mov
push
or
lea
test
sub
sbb
adcb
test
icebp
pushf
sub
push
in
inc
mov
fldt
lret
loop
pop
hlt
setne
je
loopne
cmpsb
sahf
std
cmp
jne
sti
aas
push
push
aam
ud0
cmpsl
dec
jmp
mov
cmp
jne
push
push
push
push
loopne
xor
push
mov
rorl
call
xor
dec
xor
or
outsb
push
mov
fdivr
in
fsubs
push
inc
xchg
push
orb
and
mov
les
push
and
pop
mov
adc
pop
test
sbb
fiadds
dec
dec
mov
add
sete
decb
jne
push
push
jle
aas
xlat
add
push
sbb
add
pop
in
and
sbb
mov
push
movsl
test
push
mov
xchg
pop
dec
pop
mov
fwait
push
sbb
or
sub
mov
jno
add
add
ja
and
add
xchg
clc
sub
jge
testl
je
xor
cwtl
xor
andb
pop
enter
push
push
xchg
jl
jmp
imul
xchg
push
jns
test
pop
inc
js
pop
lock
jnp
or
dec
and
sbb
je
lret
xchg
add
mov
int3
add
pop
push
or
adcb
test
inc
add
mov
fisttpl
dec
inc
daa
jne
pushl
mov
inc
loopne
sbb
adc
lock
push
adcb
cmp
fdivs
jb
or
int3
lods
stos
pop
stos
repnz
mov
push
inc
imul
push
jns
inc
out
pop
insl
mov
mov
popf
inc
paddb
repz
test
pop
arpl
xor
add
div
inc
xchg
hlt
mov
push
mov
inc
dec
into
je
cs
dec
ret
push
mov
mov
loope
inc
loopne
xor
add
je
dec
push
mov
fsubrp
ret
adc
mov
cmp
add
pop
insb
or
fildl
cmpsb
stos
outsl
test
push
fisttpl
xor
cmp
aam
xchg
dec
adc
shll
push
pop
jge
leave
test
add
ret
push
sub
jge
insb
and
imul
icebp
nop
add
cli
inc
push
das
out
aas
mov
xor
jne
test
test
lods
ja
shlb
add
and
push
push
mov
test
mov
mov
mov
pop
addr16
jge
int3
loope
sub
out
jae
xor
cwtl
push
push
aam
das
call
adc
xchg
cmp
stos
dec
jno
mov
mov
inc
add
push
inc
adc
outsl
popa
add
cli
rorb
mov
push
jl
pop
add
fisubrl
sahf
sub
jge
popf
cltd
xchg
decb
adc
or
cltd
dec
xchg
and
rolb
test
insb
leave
push
push
push
ret
shr
or
popf
scas
mov
jl
cmp
popa
and
ret
nop
push
ret
xchg
lret
into
lock
out
lea
movsl
push
adc
shll
sbb
sub
mov
cmp
jae
push
push
scas
sarb
imul
and
inc
fwait
push
in
daa
es
orb
pop
push
push
in
or
add
mov
mov
cmp
aaa
cmpsb
cmp
jge
mov
jnp
jge
test
and
jecxz
mov
jecxz
jmp
mov
push
ljmp
pusha
pop
inc
cld
incl
and
push
cmp
jg
aam
sbb
add
in
outsb
mov
add
push
jmp
dec
addb
mov
hlt
mov
and
gs
outsb
and
or
adc
mov
inc
hlt
sub
push
sbb
push
stos
sti
movsl
in
or
into
xorl
pop
xor
lock
or
push
nop
mov
inc
add
pop
icebp
and
and
add
pop
mov
mov
or
mov
push
sbb
ret
sub
add
mov
cmp
iret
nop
mov
mov
in
bound
dec
clc
das
adc
pop
sub
test
xchg
arpl
cmp
inc
fstps
jge
or
cli
cmp
mov
testb
dec
jne
jbe
js
add
sub
cmp
dec
or
data16
sahf
push
mov
xor
or
lret
ret
mov
lods
mov
push
inc
jp
and
dec
repz
mov
ds
roll
push
fwait
repnz
fdivrs
add
push
pop
xchg
push
jp
push
xchg
mov
sbb
and
shl
push
cmp
cli
or
or
andl
andl
or
add
lock
cmp
pop
jne
pop
pop
pop
fwait
aaa
mov
mov
add
fimuls
mov
jp
in
xor
or
push
es
sub
mov
data16
inc
mov
aam
cltd
mov
repnz
or
enter
pop
xchg
and
inc
in
fidivrs
jne
sub
mov
jmp
sbb
pop
shr
ljmp
add
mov
pop
shrl
ret
andb
xchg
sbb
jmp
inc
mov
cwtl
ss
xor
adc
les
mov
pop
pop
lret
loopne
xchg
mov
push
cmp
outsl
ret
add
mov
add
lds
xchg
push
jns
add
movsl
cmp
jno
sub
fisubrl
loopne
cmp
imul
fmuls
mov
mov
pusha
ljmp
and
and
outsb
std
outsl
pop
addb
je
push
push
push
jmp
movsl
jo
push
mov
pop
vunpcklps
cs
adc
dec
or
mov
mov
adc
cmp
mov
hlt
test
pop
in
test
aam
pusha
xchg
or
lock
push
sub
jle
dec
and
inc
cmovbe
mov
jb
mov
jne
jmp
sub
push
mov
in
add
sbb
out
imul
ret
xchg
add
pop
pop
push
or
and
and
push
or
adc
addb
je
dec
sbb
jmp
test
sub
pop
jnp
outsl
and
add
movups
adc
jne
test
or
scas
mov
adc
mov
push
sti
adc
repz
rorl
frstor
push
sbb
jge
lock
push
mov
xchg
test
add
sbb
lock
insb
add
jl
xlat
push
nop
cmpsb
adc
xchg
es
cmp
enter
sub
loope
push
cmp
xchg
and
push
xor
int3
lock
enter
adc
or
dec
mov
push
bound
call
sub
xchg
mov
lock
inc
cli
ret
cwtl
adc
push
stc
pop
call
mov
call
dec
add
js
cwtl
and
xor
adc
or
cmc
xchg
dec
add
pop
jae
and
jne
sbb
notl
loopne
or
mov
jl
fs
fists
xchg
lret
add
adc
imul
adc
mov
push
jl
in
dec
pop
movsb
sub
adc
add
sbb
in
ret
push
mov
mov
add
push
adcl
adc
mov
cltd
movb
cmc
jmp
popl
pusha
test
pop
stc
sbb
push
punpckhwd
pop
pop
adc
jb
loopne
xchg
add
dec
or
mov
xorl
rolb
cld
inc
fs
push
push
push
xor
pop
jmp
push
push
dec
imul
ja
sub
fsubrs
push
push
adc
push
push
sbb
test
pop
aas
or
push
imul
popf
sbb
cmp
mov
sbb
push
test
add
mov
lods
bswap
loopne
mov
jle
or
call
xor
shlb
add
test
sarl
in
mov
xor
or
movsb
fidivrs
into
jbe
jns
js
aas
addl
jmp
xor
sub
fwait
test
cmp
jo
cmc
jbe
nop
push
mov
mov
add
fs
daa
and
xchg
pop
and
and
mov
sub
sub
sub
lret
add
ja
pop
pop
jmp
in
inc
and
mov
aad
jae
or
jmp
jp
popf
add
adc
cmpsb
xchg
pop
leave
sbb
aas
insb
cmc
add
xor
fsubrs
adcl
and
sbb
std
cs
stos
pop
and
lods
repz
mov
lahf
cwtl
add
push
loopne
cmp
mov
aaa
mov
xchg
pusha
adc
mov
and
push
ficoms
dec
repz
jnp
pusha
adc
loopne
sub
sbb
mov
dec
jns
in
pushf
mov
rclb
push
loop
mov
cmp
fdivrl
lods
in
add
pop
mov
jae
leave
pop
das
lea
adc
or
or
orl
ficoms
cmpsl
add
int3
xchg
push
push
nop
pop
imul
mov
and
sub
nop
adcb
test
int
rorl
and
gs
xor
jp
lea
and
out
shrb
test
mov
nop
sub
pop
ljmp
shrb
je
popa
out
fistl
push
pusha
jmp
mov
sub
jne
xor
push
imul
mov
inc
adc
cld
cld
mov
jge
push
lock
testb
xchg
add
ja
clc
mov
push
in
or
mov
push
xchg
fisttpl
add
je
add
fiaddl
pop
xor
lret
cld
sub
mov
imul
jo
rorb
fimuls
push
shrb
call
data16
cmp
loop
pop
xor
xlat
lods
hlt
shr
adc
push
cli
in
sbb
add
iret
push
push
add
sub
aaa
les
mov
jbe
xchg
dec
dec
jp
mov
add
sahf
mov
or
push
mov
add
lods
hlt
addl
jo
enter
dec
pop
mov
pop
sbb
dec
add
lea
pop
dec
jns
sbb
jae
adcl
sub
insl
or
inc
xchg
push
sarb
inc
mov
movsl
mov
subb
arpl
insb
stc
sbb
into
cli
cmpsb
pop
and
insb
movsb
test
pop
dec
insb
pop
inc
inc
jnp
add
xchg
add
sarb
push
call
ret
jg
sarl
mov
cmp
je
je
ficoms
push
push
adc
sahf
pop
pusha
movzwl
lahf
cmc
aad
clc
cmp
mov
xchg
repz
pop
and
imull
ds
jp
jle
xchg
int
inc
mov
push
sub
fldt
add
xchg
adc
cmp
out
or
in
jl
push
lahf
jnp
add
sub
jecxz
insb
sub
in
test
cwtl
push
mov
test
and
jo
or
mov
mov
cmp
je
push
lea
mov
mov
inc
frstor
arpl
cmp
sub
push
sbb
rclb
push
or
imul
pop
or
adc
sarb
xchg
xchg
jmp
loop
xlat
push
add
push
adc
les
xor
aaa
shlb
dec
fdivl
addb
add
hlt
push
in
mov
or
inc
fdivs
sbb
push
mov
lea
neg
push
add
jo
test
or
push
loope
add
hlt
pop
in
jl
push
push
cmp
test
dec
push
movsl
push
mov
test
ja
bnd
pop
sub
xor
push
push
cmp
jl
dec
mov
xchg
stos
inc
sbb
push
or
rcr
cs
xchg
xor
mov
je
push
push
aas
test
lods
sub
jmp
inc
dec
pop
mov
pop
sub
lds
push
push
icebp
mov
stos
addl
jns
or
into
push
test
add
in
imul
cs
xchg
gs
mov
xchg
push
shl
add
into
gs
lcall
jnp
push
addb
add
dec
adc
cmp
je
push
sub
fsts
cmp
stos
ret
pop
or
and
push
push
jmp
jb
or
mov
jle
adc
add
jb
pop
lret
test
sbb
aam
lods
ss
movsl
pop
jge
in
sub
push
and
jb
add
js
cld
lock
fsubr
cmp
je
cmp
je
cmp
jne
add
pop
rorb
cmpsb
mov
cmc
je
xchg
mov
je
push
mov
gs
aaa
lds
outsl
outsb
pop
mov
orb
ret
adc
mov
pop
pushf
pop
mov
clc
push
jo
ss
das
add
fidivrs
add
xor
add
std
jno
cmp
jne
xchg
adc
add
push
adc
push
push
push
mov
mov
or
add
adc
lea
sub
sub
mov
xchg
mov
jb
pop
pop
dec
aam
xor
je,pn
sahf
and
cld
sbb
cmp
jb
cmp
ja
repnz
add
sub
sbb
inc
add
dec
jae
popa
imul
incl
call
add
pop
sbb
mov
pusha
pushf
push
pop
mov
int3
roll
inc
adc
and
dec
xchg
xlat
mov
in
lahf
dec
pop
sbb
ret
jmp
jge
cmpsb
in
jle
loopne
xor
filds
pushl
jae
push
cmp
gs
je
cmp
jne
mov
sbb
pop
xlat
cmp
add
push
dec
inc
lock
mov
sahf
testl
push
movsb
jne
jmp
testb
sub
and
inc
sbb
lock
cli
cmp
jbe
cmp
cmp
fisubl
inc
jmp
inc
and
add
or
jne
xor
sub
ret
add
sbb
push
or
repz
pop
cmp
inc
shrb
je
mov
dec
push
popa
mov
adc
mov
pop
fimuls
xor
inc
cmpl
fcomps
sti
cmp
notb
cmp
in
inc
mov
push
ja
clc
test
xorb
movb
orb
fstpt
jb
or
ja
shrb
enter
test
cmp
push
scas
out
xor
cmp
push
clc
sbb
dec
jb
lds
sub
popa
loop
jne
mov
sub
push
test
mov
mov
or
jo
movzwl
dec
mov
aaa
jb
jae
sub
rol
outsb
xchg
aas
shl
add
jmp
cwtl
aas
les
pop
scas
js
inc
orl
and
outsb
stos
ret
fs
jne
xor
inc
rorl
test
mov
fdivrs
push
pop
jae
mov
jmp
dec
xor
xor
cld
jbe
test
sub
mov
push
sar
sub
add
or
fcomps
shlb
fists
lret
cmp
jg
or
jge
dec
aaa
aaa
aaa
mov
or
jle
es
sub
sub
and
insl
jmp
cmp
jl
pop
jle
pusha
clc
cwtl
aas
or
inc
test
jp
jb
jbe
mov
popa
test
fwait
and
or
cs
test
jne
je
outsb
and
mov
je
je
xor
dec
cmp
jae
movb
inc
mov
push
sub
push
and
dec
sbb
movsl
add
push
mov
daa
push
push
mov
inc
and
je
in
mov
in
adc
sub
push
loop
mov
or
jae
add
inc
push
hlt
jp
inc
es
and
jl
sub
pop
push
movl
sub
mov
sbb
add
push
cmpsb
outsb
jge
aaa
xor
mov
add
mov
pop
add
out
adc
cld
jbe
out
add
sub
call
mov
lds
loopne
imul
mov
movb
rorb
lea
mov
and
jge
add
pop
jb
sbbl
lock
ljmp
push
mov
and
sbb
xor
mov
xchg
sar
or
xchg
lods
cmp
pop
cwtl
xor
lea
pop
lock
xchg
pop
ja
dec
daa
mov
add
in
sbb
inc
arpl
dec
fcoms
je
inc
movb
jae
mov
dec
pop
movnti
frstor
adc
out
or
xchg
adc
into
sub
fchs
sub
adc
sti
mov
shl
jp
or
pop
mov
jmp
pop
daa
dec
add
xchg
pop
mov
arpl
or
add
ja
ds
punpcklbw
inc
mov
or
loope
aam
xor
pop
int
or
inc
test
clc
add
inc
inc
cmp
in
scas
aad
es
jl
add
cmp
add
mov
mov
cmp
mov
add
scas
push
or
cmp
fdiv
and
popa
fnsave
jg
mov
add
inc
xchg
xchg
push
or
stos
xchg
or
add
sahf
mov
push
inc
inc
addl
dec
es
mov
cltd
sub
pop
pusha
xchg
push
pusha
sti
pusha
jb
cs
sbb
mov
lds
ss
daa
add
inc
fisttpl
mov
xchg
xor
pop
mov
pushl
add
lods
dec
jle
add
push
mov
dec
push
and
sub
call
jmp
xchg
xchg
ret
out
mov
lahf
jne
addl
xchg
nop
mov
in
xchg
cmp
mov
xchg
or
cmpb
push
dec
mov
mov
adc
or
xchg
jns
xor
and
and
test
push
xchg
nop
add
mov
test
jmp
jge
mov
adc
or
setne
dec
xchg
jle
dec
roll
aam
push
or
in
mov
sub
shl
ss
in
sbb
gs
jne
aad
add
push
rolb
pop
out
shr
pop
and
jne
adc
cli
push
fwait
push
push
fdivl
jne
sbb
jmp
jnp
das
movl
clc
sbb
das
bound
into
sbb
rolb
mov
mov
add
mov
addb
jnp
mov
fcomp
sbb
push
cmp
jmp
cmp
je
loopne
sub
lds
lds
add
inc
popa
fwait
jge
xchg
in
loope
jge
pop
and
aaa
sbb
mov
mov
inc
idivl
mov
shl
mov
lods
loope
xor
subl
cmp
in
test
push
push
cmpl
sub
inc
push
call
insl
mov
jne
jl
sub
hlt
test
jge
add
fisttps
incb
jae
jmp
pop
jl,pt
incl
aas
je
lea
cmpb
cmp
jne
les
push
fisttpll
aam
adc
jmp
cmp
push
mov
mov
inc
call
inc
call
dec
mov
push
jmp
test
movsb
push
adc
mov
cltd
test
jge
shrl
cmp
and
call
add
pop
add
jns
push
and
nop
mov
add
ret
into
add
enter
lahf
js
ret
jo
loope
ret
or
cmpsl
push
sbb
cmp
lock
jns
ret
push
xor
in
das
lock
enter
adc
add
sbb
inc
or
or
pop
add
jns
sti
test
mov
fimull
push
xor
test
or
xor
xor
pop
cmp
or
in
sbb
mov
or
inc
sub
and
sbb
lock
lods
daa
add
push
repz
das
sbb
sub
or
push
cmp
and
inc
cmp
add
cmp
outsb
jns
inc
and
mov
sub
mov
lret
in
push
sub
xor
jb
pop
cs
cmp
or
in
cmp
aas
adc
cltd
push
sbb
pop
ret
inc
jle
mov
push
mov
mov
movsb
inc
in
add
in
add
push
popa
adc
sub
mov
xor
orb
mov
inc
mov
push
xchg
push
ljmp
sbb
loopne
jb
lcall
fcomps
push
dec
in
pop
sbb
push
adc
lods
or
cmpsb
daa
jnp
cwtl
insl
xchg
test
cmp
popf
imul
ret
sahf
insl
pusha
mov
fistpl
outsb
pushf
or
xchg
inc
ret
sub
orb
or
or
in
dec
loopne
lods
or
jae
or
pop
inc
lock
inc
dec
lcall
sub
andb
mov
push
js
daa
lods
addb
or
inc
rolb
mov
inc
movb
mov
adc
push
cwtl
inc
sahf
arpl
test
or
or
add
popa
pop
lcall
loopne
or
or
jmp
pushl
dec
push
push
xchg
xchg
stc
loopne
in
jne
cld
in
and
rorb
mov
or
std
out
sub
je
mov
jmp
pop
rcrb
lcall
inc
cmp
cmpl
push
cmpl
adc
jno
into
test
fstpt
ud0
add
mov
aad
lea
mov
faddl
or
mov
shll
sbb
jo
jnp
bound
lea
fiaddl
insl
cmp
mov
rolb
ja
daa
push
push
andl
mov
pop
imul
inc
in
in
in
mov
shl
cli
mov
addr16
push
xchg
out
xchg
rep
cmp
lods
sbb
xor
adc
push
pop
lret
push
cmp
bound
sbb
push
adc
or
loopne
sbb
call
loope
adc
pop
daa
repnz
loopne
mov
mov
lcall
dec
sti
bound
loop
jo
sub
inc
out
loope
sub
and
add
cmp
add
int3
cmp
push
add
adc
pusha
and
xorl
xor
roll
fimull
add
pushf
je
lock
leave
xorl
jb
fstp
jb
mov
imul
xlat
push
push
inc
xchg
movsb
cld
negl
inc
cltd
inc
mov
popa
adc
sub
pop
or
scas
dec
sti
push
das
int3
or
mov
sub
push
dec
adc
call
push
sub
pop
pop
sbb
sbb
cltd
sub
sbb
pop
aaa
adc
es
jmp
push
pop
or
add
mov
mov
or
cmpsb
mov
mov
mov
add
push
adc
dec
shll
push
xor
cmp
cmp
pushf
pop
std
add
ja
pushf
jge
or
inc
mov
fmull
aad
js
sbb
dec
lahf
add
cmpsb
push
add
adc
js
pusha
test
dec
push
push
sub
add
test
shr
push
mov
adc
jb
or
cwtl
adc
rorl
xchg
or
xor
js
shl
cmpsl
push
xchg
movl
xor
or
or
lock
and
mov
pop
adc
es
lea
xor
in
lock
movsl
add
jo
push
xchg
pop
int3
stos
pusha
adc
xchg
lods
ds
clc
cmp
pop
or
jnp
and
or
jo
pop
add
add
push
arpl
sbbl
lea
and
dec
push
sub
pop
adc
push
mov
inc
mov
pop
jl
adc
mov
mov
xor
test
sbb
shlb
add
sti
sbb
and
std
dec
sbb
andl
jp
roll
out
pop
push
adc
imul
pop
cmp
scas
int3
add
mov
push
ja
or
and
cmp
call
imul
xchg
sub
lret
and
sub
cwtl
ss
sbb
cs
sub
adc
clc
xor
jnp
push
ret
add
jecxz
dec
and
cmp
pusha
pop
insb
adc
jae
mov
movsl
and
xchg
and
xor
loopne
lock
and
push
and
gs
dec
pop
push
jb
in
push
insl
pop
pop
pop
push
lock
icebp
or
rorb
xchg
inc
cmpsl
cmp
adc
jecxz
pop
imul
xchg
sub
jbe
inc
xchg
popf
add
mov
fwait
pop
fnsave
hlt
mov
cltd
jp
loope
or
sub
sub
adc
dec
aas
pop
data16
add
sub
ficomps
mov
pop
push
push
pop
xchg
test
pusha
push
jmp
lock
add
and
sbb
mov
scas
mov
add
int
int3
jne
adc
aas
cmp
jb
dec
inc
push
or
jnp
add
mov
in
rcrb
add
dec
ss
jp
adc
out
xor
adc
out
pop
test
clc
fisttps
pop
neg
pop
or
adcb
xor
inc
add
dec
or
or
cld
cltd
adc
and
or
das
pop
add
sub
sbb
and
xchg
sub
rcl
mov
idivb
add
nop
icebp
loope
in
inc
inc
outsb
fists
push
pushf
push
sub
or
jmp
hlt
jmp
fidivrl
les
or
or
call
aad
sbb
push
pop
inc
mov
xor
inc
sbb
push
and
sub
pushl
je
pop
enter
dec
int3
imul
sbbl
sha1nexte
push
test
jb
add
enter
push
inc
icebp
pop
or
pop
outsl
adc
lahf
dec
iret
cmp
scas
adc
push
inc
aam
adc
dec
imull
fbstp
xor
jno
jb
dec
adc
adcb
add
dec
or
or
dec
fs
ljmp
cwtl
sbb
adc
push
add
add
mov
enter
inc
adc
lcall
xor
add
in
and
pop
fsub
sbb
adc
mov
sub
jb
and
xchg
add
addl
jb
stos
aaa
sub
rcll
sbb
popa
mov
popa
jge
outsl
and
jl
popa
lock
inc
lahf
out
add
and
push
out
movb
and
or
in
inc
mov
add
push
cmp
push
mov
loopne
add
mov
int3
movsl
pushf
jne
sub
inc
cmp
mov
cltd
mov
loop
addl
push
sbb
in
lret
movsb
xchg
dec
test
sbb
pop
subl
bnd
inc
cmp
push
shlb
push
mov
xchg
pop
xlat
dec
incl
cmp
pop
push
push
pop
inc
roll
dec
mov
and
push
pop
push
insb
iret
xor
sbb
push
lcall
mov
ret
cli
in
call
rorb
loopne
test
sub
sub
rcr
js
addr16
lret
leave
push
inc
and
adc
push
add
sbb
inc
push
incl
sub
scas
cmp
xchg
test
and
dec
pop
xor
sbb
movsl
aam
or
jl
mov
and
in
daa
cmp
adc
sub
sbb
or
nop
stos
sub
xchg
jno
sbb
mov
cmp
pop
ret
inc
pusha
enter
xchg
inc
es
sbb
test
mov
test
adc
mov
data16
push
jmp
std
or
rol
pop
pushw
popl
push
cmp
imul
lock
shrl
jg
je
push
in
push
pop
add
ljmp
push
cld
cmpsl
or
cmpb
mov
sbb
and
pop
adc
jb
cltd
xchg
push
dec
dec
ds
xchg
cmpsl
adc
push
jle
shrb
xchg
cmpl
push
rcr
mov
sub
xchg
mov
mov
pusha
or
xor
xor
shll
sbb
pop
adc
ljmp
scas
jmp
and
lahf
pop
lds
jmp
outsl
or
loopne
arpl
dec
sbb
add
push
jo
movsl
or
je
xor
xchg
pop
roll
shll
push
push
mov
sahf
pop
cmpsb
clc
pop
sub
ss
inc
sahf
xchg
push
mov
popa
test
push
loope
jg
adc
daa
push
push
add
cmpsb
cmpsl
addl
paddq
hlt
push
or
addl
xor
xchg
add
ljmp
cmpsb
cmp
sub
add
or
mov
loopne
mov
dec
mov
out
addr16
push
popa
pop
push
dec
adc
inc
add
inc
adc
hlt
mov
push
push
mov
jge
xchg
adc
sbb
adc
cmp
lcall
and
xchg
pop
dec
cmp
xor
mov
out
lret
dec
cmp
xchg
ds
cwtl
sbb
or
jl
add
push
mov
insb
inc
fldenv
fdivs
les
adc
sub
cmpb
pop
dec
in
cs
mov
jge
sahf
pushf
cmpsl
test
jbe
outsl
push
xor
movsb
adc
mov
or
lods
xor
adc
mov
dec
inc
add
enter
or
and
jl
push
xor
andb
or
imul
scas
adc
repz
outsb
ljmp
insb
push
sbb
ss
popf
sbb
push
out
repnz
jge
ljmp
or
xchg
repnz
add
enter
and
test
dec
adc
fnstenv
nopl
mov
outsb
int
test
shrb
out
les
push
ja
call
push
xchg
xor
imul
lods
xchg
fmull
push
inc
scas
dec
jl
mov
xlat
decl
push
or
movq
pop
int
nop/reserved
movsb
loope
push
push
or
cmp
push
or
sbb
gs
adc
out
mov
mov
fidivl
add
mov
clts
jmp
ljmp
scas
lds
rorb
sub
ror
aam
lea
inc
rorb
push
or
scas
xor
ja
mov
imul
cmp
aam
rorb
push
add
mov
mov
stos
adc
inc
sbb
in
sub
aaa
sbb
leave
push
bound
inc
rolb
fistpl
in
inc
inc
or
xchg
add
fadds
or
lods
xchg
out
jg
fadds
or
sti
add
aaa
stos
xchg
out
stos
aaa
loop
adc
inc
cltd
pop
fs
add
rcr
cmp
pop
mov
sbb
pop
jo
or
jae
or
cmp
repnz
lods
in
je
out
cs
dec
in
cmp
pop
mov
inc
jecxz
push
movsl
daa
pop
enter
push
add
push
jmp
in
sti
gs
mov
push
int
cmc
pop
adc
shr
imul
mov
dec
cmc
adc
adc
in
or
adc
loopne
or
push
jle
add
push
sub
mov
shlb
adc
lahf
call
add
jo
and
fistpll
push
inc
dec
shlb
icebp
push
aam
in
icebp
insl
jmp
ficompl
pop
fs
fnstsw
add
or
mov
out
add
ret
mov
sahf
xor
into
add
and
xor
sub
call
jl
push
mov
dec
push
xchg
add
dec
sbb
jno
popf
mov
sbb
inc
push
sub
adc
in
cmpsb
pop
inc
loop
inc
add
cmpl
sbb
or
inc
ret
stos
pop
stos
push
jnp
bound
inc
in
push
xor
inc
push
xchg
pushf
lahf
mov
mov
sub
iret
dec
sbb
push
fimull
add
mov
into
or
movsl
scas
adc
in
jno
scas
out
mov
add
add
test
repz
ret
or
pushf
adc
push
xor
xchg
pushf
and
leave
xchg
mov
inc
mov
pop
xor
lods
or
mov
and
push
mov
setg
xor
jbe
in
cs
les
enter
jns
sbb
pop
rclb
aam
fmuls
add
jl
jne
sub
push
arpl
jnp
jne
into
sbb
dec
push
mov
es
adc
in
xor
adc
push
sub
lds
test
cwtl
mov
pop
sub
data16
ja
pop
sub
mov
outsb
cmp
mov
or
loope
push
add
add
or
or
fs
sbb
lret
sub
mov
push
xor
or
jecxz
sub
jge
aaa
mov
out
pop
scas
push
jbe
xor
mov
inc
cmp
fidivrs
xor
fcmovnu
xor
pop
dec
lahf
cmp
movsb
push
jmp
push
and
sub
mov
sbb
ds
sub
sub
mov
movsb
ja
ljmp
js
icebp
sub
lea
push
lea
push
inc
push
pop
popa
loope
int
pop
mov
out
or
xor
popa
imul
cmp
and
shl
sbb
push
or
inc
pop
or
sti
cmpsb
push
push
mov
mov
or
shr
out
sbb
and
pop
xor
in
test
inc
xor
mov
add
or
add
fcoms
cmp
loopne
mov
clc
jne
jne
mov
add
std
insb
push
push
jge
jb
cmp
push
fisttpl
push
in
jge
cmp
jne
push
push
cmp
movsl
or
push
and
outsl
push
aaa
mov
or
adc
inc
js
cmpb
adc
dec
inc
sub
lock
imul
loope
test
movb
and
xchg
push
push
push
and
inc
cmp
fmulp
iret
sbb
test
movsb
ja
inc
sub
dec
sbb
or
and
adc
mov
jmp
mov
jne
adc
adc
mov
je
mov
xchg
pop
adc
inc
pusha
pushf
or
fs
pop
mov
je
sub
orl
aaa
push
lret
and
sbbl
mov
xchg
je
mov
push
fwait
sub
test
jecxz,pn
cmp
jbe
cmp
jbe
mov
sbb
imul
ret
push
je
and
sbb
fs
std
dec
sub
push
sbb
adc
mov
adc
add
adc
rorb
and
pop
mov
cltd
ret
and
in
adc
inc
lea
popl
mov
cmp
lea
fdivr
xor
cmp
pop
call
int3
add
andl
pop
jle
mov
xchg
es
pop
push
aas
test
inc
inc
jmp
add
cltd
sub
ss
lret
shll
mov
mov
sbb
pop
push
xlat
mov
dec
inc
popa
mov
mov
rcl
insl
loopne
xor
stc
fdivrs
jno
mov
cmp
lea
rol
jne
mov
adc
push
je
loop
pop
test
jecxz
push
sbb
and
and
std
sbb
and
nop
mov
stc
leave
jb
ret
cwtl
sbb
and
push
mov
push
enter
xor
lret
and
aam
pop
jae
movsl
les
js
jp
dec
inc
cld
add
push
stos
mov
sbb
repnz
cmc
gs
arpl
dec
push
mov
pop
or
add
shll
inc
orl
cmp
aad
mov
inc
mov
adc
push
lods
add
adc
sbb
and
test
xlat
pop
sub
mov
adc
sbb
mov
fwait
mov
adc
add
add
or
cmpsl
push
fsubrs
je
inc
mov
insl
cmpsl
lods
mov
es
ret
sbbb
pop
pop
mov
mov
mov
ljmp
xor
mov
in
adc
lahf
lds
xchg
sar
mov
mov
faddl
imul
pop
lods
rcll
shrl
rclb
adc
or
pop
cmp
and
cmp
mov
fstps
cmp
fwait
clc
and
notb
jge
xor
mov
jl
inc
dec
jmp
and
jbe
es
jge
cmp
push
dec
cwtl
push
shrb
insb
push
inc
movsl
sbb
dec
pusha
sbbl
add
ds
movsl
mov
and
fs
ljmp
test
adc
arpl
and
add
mov
push
pop
cmp
xchg
ljmp
dec
sbb
rol
loope
into
shlb
cld
addr16
mulb
js
data16
loope
jb
testl
and
inc
mov
dec
xchg
dec
shrb
mov
leave
mov
mov
jg
jl
or
add
sbb
mov
outsb
inc
and
scas
cmpsl
xor
jo
inc
fistpll
mov
or
cmp
adcl
sahf
bound
mov
loope
inc
das
loopne
lods
int
cmpb
xchg
faddl
nop
aas
push
inc
mov
xchg
and
add
mov
out
insb
and
jmp
or
inc
inc
or
mov
mov
inc
lahf
cmp
adc
and
lret
jecxz
and
int
imul
mov
test
sbb
jmp
mov
mov
clc
hlt
arpl
mov
xchg
jg
cmp
jle
jge
cmp
into
or
pop
add
and
add
testb
pushf
adc
icebp
lods
test
pop
lret
xchg
pop
add
or
call
push
and
add
iret
lds
mov
lock
popa
xchg
repnz
mov
cld
cs
xor
jp
loope
popa
sub
into
jnp
popf
or
ds
jmp
pop
je
test
in
filds
fstpt
jbe
das
mov
cmp
jge
adc
outsl
adc
or
out
adc
pushf
add
or
leave
push
inc
std
sbbl
xchg
xchg
adc
mov
movb
mov
jno
or
mov
mov
test
mov
xchg
sbb
xor
les
mov
pop
push
push
loop
sub
clc
pop
popa
add
jp
push
in
std
insb
xchg
push
push
aas
les
mov
mov
mov
sub
add
cmp
pop
jo
ljmp
pop
push
mov
xchg
inc
mov
movl
in
push
push
ja
inc
add
xor
lcall
inc
js
push
movsb
and
mov
fsts
pop
pop
das
js
sarl
jg
lea
push
adc
mov
pop
push
jbe
call
mov
dec
jl
incl
cmp
je
cmp
inc
xor
jle
jbe
adc
push
sbb
test
je
aam
jnp
xorl
pop
ljmp
sub
int3
pop
incl
lcall
sbb
adc
pop
dec
inc
or
pop
pop
pop
fistpll
inc
sub
imul
mov
cmpsb
cmp
pusha
mov
js
jb
pop
cwtl
pop
jnp
std
adc
cmpb
and
rclb
mov
sbb
mov
jb
cmp
inc
dec
add
jmp
shr
lock
repz
pop
cmpsb
jo
xor
addl
mov
stos
jle
mov
jmp
lock
aam
adc
mov
sbb
pop
inc
sub
mov
popf
popa
in
jge
scas
in
cmc
push
add
push
xchg
or
in
ret
adc
pop
cmc
xchg
decb
enter
add
mov
into
imul
pop
fdivr
bound
int3
aad
bound
dec
jno
jbe
cmpsl
sbb
notl
add
lods
sti
xor
jns
iret
mov
mov
sbb
jmp
aaa
lret
scas
adc
leave
mov
jp
push
adc
jbe
cmp
or
lea
out
and
ret
je
pop
add
mov
lods
cmp
cmc
xor
sub
adc
cmc
je
add
cld
push
xchg
mov
add
imul
xor
sub
pop
cmp
shl
or
pop
sbbb
icebp
xchg
test
mov
and
mov
jo
sbb
cmp
pop
jl
mov
push
ret
loop
fistpll
ja
jle
cmp
mov
xchg
pop
mov
mov
or
jp
jno
movb
outsb
arpl
mov
mov
push
or
dec
sbb
lretw
sub
add
add
mov
lock
mov
mov
and
rolb
ss
call
push
out
rorl
cmp
cmp
mov
rorb
test
pop
add
or
out
roll
stos
pop
dec
and
js
inc
cmp
mov
dec
or
jp
push
cmp
imul
mov
jnp
and
push
mov
addr16
cmp
jne
mov
cmp
xchg
loope
xor
xor
sub
add
inc
std
jle
sub
and
add
inc
adc
jno
out
mov
aam
xor
fidivrs
js
or
push
cmp
lods
add
add
mul
seto
inc
lahf
rcrb
jp
enter
or
popf
mov
jns
loope
pop
js
sbb
pop
add
lods
add
jno
or
shlb
mov
dec
add
push
rclb
adc
or
add
sub
ja
add
add
call
jae
sbbl
icebp
jb
pop
pop
pop
and
mov
sbb
aam
sub
pop
cmp
je
mov
sahf
push
mov
shrl
and
outsb
dec
cmp
cmp
sbb
fstpt
fsts
jmp
ret
mov
rolb
clc
mov
mov
xor
mov
sbb
in
hlt
in
arpl
mov
mov
inc
or
push
mov
cmp
jp
pop
or
stos
jg
inc
js
mov
lea
popf
dec
mov
orl
sarb
lock
pop
pop
mov
bound
mov
add
mov
mov
cwtl
lea
jmp
cmpl
inc
movsb
inc
stos
fistl
repz
in
nop
pop
hlt
pusha
mov
mov
addb
sub
shlb
sbb
hlt
jmp
sub
sub
sub
xor
xor
mov
pop
dec
and
jo
sbb
ds
fs
in
xchg
mov
and
rorb
hlt
xchg
jae
cmp
fadds
iret
adc
ret
sub
and
and
popa
pop
loopne
das
sti
add
push
ret
jno
push
mov
push
shlb
xchg
add
xor
pusha
sub
mov
iret
out
mov
mov
adc
add
sbb
sbb
mov
in
cmp
or
fisttpll
iret
dec
fmuls
shrb
add
fcoms
add
cmc
leave
xchg
mov
repnz
fimull
inc
fcompl
xor
pop
fcoml
cmp
mov
pop
outsl
loopne
inc
jge
sub
push
pop
and
pop
inc
hlt
or
rcl
push
jae
dec
or
mov
xor
insb
lock
ja
rcl
sbb
loope
lret
loopne
loopne
add
cmp
je
ret
jle
lea
fdivrl
pop
cmp
sbb
in
mov
shrb
movsb
in
push
pop
mov
js
jbe
shl
cmpsl
dec
xchg
add
inc
inc
clc
cmpl
add
sub
adc
fwait
or
in
adc
sub
cmp
push
jbe
mov
lcall
dec
add
lods
cld
pushf
sub
xchg
mov
add
cmp
cltd
add
inc
movsb
and
add
cmp
cmp
cmpb
pusha
adc
push
pop
add
adc
or
sbb
mov
aad
daa
dec
xor
aad
adc
adc
xor
xchg
sbb
sti
push
cli
or
andl
pop
xor
adc
lea
clc
or
or
jns
pop
js
xchg
xchg
cmpsb
addb
dec
les
xor
inc
cld
and
inc
adc
lahf
pop
pusha
filds
mov
or
mov
cld
or
jnp
cmp
dec
jge
mov
adc
jmp
cmp
jbe
mov
ss
rorl
dec
dec
dec
clc
jne
mov
push
test
cmp
dec
or
andb
fldt
lea
cmp
or
pop
stos
es
adc
adc
lock
xor
or
or
clc
hlt
hlt
popa
iret
popa
in
jb
inc
pop
lods
adc
and
or
pop
pop
or
mov
fidivrl
cmp
fcmovu
call
adc
sbb
fxtract
jne
xchg
sub
pop
push
js
fistl
cld
or
loopne
loopne
fnstenv
mov
sbb
push
jb
popa
popa
push
mov
or
imul
xlat
cld
clc
pushl
cmp
int3
fadd
adc
mov
mov
jne
push
pop
sub
dec
clc
faddl
faddl
cmp
xor
mov
movl
jg
push
mov
inc
sbb
and
je
mov
je
cmpb
mov
inc
es
xor
mov
lea
adc
out
push
fstpt
sbb
adc
inc
adc
inc
fs
adc
ror
cmp
push
adc
data16
in
add
stos
daa
sahf
pushf
lea
dec
and
data16
xor
rclb
add
shrb
mov
ret
cmpl
jne
pop
insb
jbe
push
loopew
push
cmp
adc
jge
sarb
cmp
ret
loope
xchg
loopne
inc
xchg
and
adc
iret
mov
cmp
lret
adc
aas
imul
test
or
push
rorb
test
adc
pop
xchg
pop
imul
mov
push
jns
testb
fstpt
adc
mov
cli
adc
xor
inc
lock
mov
add
pop
add
push
minps
add
rcrb
lret
mov
inc
adc
arpl
aaa
addl
mov
lea
mov
or
push
jecxz
jp
popa
inc
mov
push
pop
lods
jle
sahf
cmp
shlb
cmp
pop
or
js
mov
fstl
mov
xchg
inc
xchg
pop
mov
adc
shll
cmp
stos
icebp
dec
and
aad
xchg
xor
in
roll
cmp
jbe
or
test
or
cmp
je
push
das
aam
divl
or
mov
mov
cmp
lret
push
jecxz
idivb
mov
mov
jl
aaa
fdivl
or
add
add
sub
fsubs
data16
adc
inc
jnp
push
sbb
adc
data16
add
shll
mov
hlt
ret
daa
mov
jmp
pop
cmp
sbb
rol
lods
inc
xor
aad
cmp
je
mov
push
loop
xor
inc
incb
jns
ret
xor
in
pusha
or
sub
or
adc
xor
pop
jo
sub
imul
mov
pop
cmpb
je
xchg
movl
in
push
mov
jge
xor
mov
clc
shll
push
ja
xor
mov
test
sarl
pop
insb
jbe
cmpb
push
mov
adc
addb
addb
xor
out
push
test
mov
test
lea
mov
push
test
adc
nop
pop
cmp
jne
jae
mov
out
xchg
ret
pop
pusha
push
les
dec
or
lock
or
addr16
jmp
sbb
stc
lret
inc
ljmp
popf
mov
pushf
out
std
sub
or
fcomp
out
inc
cmp
jae
cmp
and
mov
push
cmp
pusha
push
lds
push
dec
cmp
int3
sbb
lahf
or
sbb
pop
mov
cmpb
pushf
jb
rol
pop
mov
add
jl
ds
and
rorb
and
sbb
je
pushf
pop
mov
pop
xchg
and
mov
xchg
cmp
dec
out
inc
clc
call
enter
iret
ficompl
aaa
push
mov
and
push
sbb
xchg
push
lret
std
jle
lea
sahf
mov
push
add
pop
stc
or
mov
add
adc
int
add
adc
int
popf
les
enter
out
rcll
jne
fcmovnb
dec
ret
cmp
sbb
push
sub
leave
xor
or
mov
xchg
push
pop
jmp
in
sahf
mov
pop
add
cmpsb
loopne
push
adc
sbb
jb
hlt
sbb
orl
adc
adc
movsb
lds
inc
ss
enter
les
jmp
xor
jae
cmp
sbb
adc
lods
fnstenv
jne
in
in
pop
mov
add
jmp
clc
mov
sbb
and
je
mov
ret
rol
inc
jl
arpl
call
out
out
popl
or
rolb
add
clc
jno
lods
loopne
push
repnz
mov
xchg
or
add
icebp
or
repz
sbb
push
cmpsl
and
popa
cmp
jns
sub
je
sti
and
fildll
or
mov
cmp
cld
pop
inc
dec
int
fisttpl
mov
sub
mov
movl
stos
jmp
imul
aam
test
and
add
mov
pushl
hlt
iret
xchg
in
xchg
and
cltd
pop
or
cli
inc
push
xor
pop
pop
push
push
sbb
xor
xchg
dec
aas
sub
and
rorl
shll
rorl
jle
cmp
int3
in
fldl
adc
xor
test
mov
in
push
and
mov
push
add
fidivs
or
jge
pop
sti
or
mov
cmp
jb
sbb
mov
roll
int
dec
in
jo
mov
shll
mov
cmpsl
je
dec
xlat
js
xor
inc
jmp
cmp
add
add
insb
loope
dec
andl
pop
arpl
add
lahf
ds
lods
add
xor
adc
push
lods
jle
sbbl
mov
lret
out
push
notl
lock
push
enter
mov
cmp
push
ret
fsubs
push
popa
mov
inc
cmpsb
and
lock
pop
imul
in
cmp
xchg
rclb
addr16
mov
lea
inc
dec
int3
cmp
lret
fidivs
sub
loopne
adc
or
int3
adc
ljmp
dec
mov
cmc
xchg
sarb
fstpt
pusha
cmp
aad
in
pusha
xor
fstpt
add
dec
dec
push
out
std
xor
mov
xor
push
in
mov
or
xor
jo
sti
cs
out
pop
mov
outsb
xor
add
push
add
xchg
jmp
jle
sub
lret
clc
cltd
nop
insb
int3
ljmp
bound
rolb
test
call
xchg
cld
jb,pn
cmp
adc
cld
pop
mov
enter
add
lcall
fildl
sbb
pop
add
add
xor
xor
and
push
repz
or
push
adc
lds
movsl
add
xchg
cmp
loop,pn
shld
loopne
push
jnp
cmpl
inc
mov
adc
repz
mov
rorl
or
pop
les
pop
stos
inc
sbb
outsb
xchg
jle
pop
push
test
fucompp
cld
cwtl
les
adc
dec
sub
adc
pop
xchg
jp
jbe
stos
enter
sub
inc
aam
push
pop
sbb
or
pushl
jmp
mov
lods
aad
jno,pn
cmpb
push
dec
fs
push
cld
mov
aam
cmp
dec
xchg
pop
jo
push
inc
and
mov
out
or
out
push
push
mov
aas
bnd
mov
push
adc
fidivs
add
jb
push
jae
lea
push
sub
add
and
add
movsl
mov
mull
sbb
stos
mov
push
add
repnz
insb
aam
or
or
mov
xchg
push
adc
xchg
in
jo
lahf
sbb
push
rcrb
xchg
cmp
cmp
push
cmp
jae
inc
add
push
fucomp
hlt
push
or
mov
jge
jbe
pop
push
cmp
nop
inc
or
or
dec
fcom
sub
mov
ja
push
mov
add
gs
mov
inc
add
mov
ret
mov
pop
cmp
adc
add
mov
jmp
push
adc
jne
mov
je
sbb
daa
or
mov
or
ret
cli
adc
pop
pusha
and
mov
outsl
lods
test
push
push
sub
sahf
cmpsl
lods
addb
shrb
adc
test
pop
pop
int3
mov
dec
add
add
call
or
xchg
sub
sub
add
lds
or
and
leave
add
or
add
dec
jns
adc
aam
enter
std
pushl
mov
aad
aaa
add
je
push
sub
or
push
jb
adc
and
cmp
ja
cmpb
push
push
or
or
xor
sbb
or
sbb
or
lret
insb
and
int
sub
add
sbbl
data16
pop
and
cmp
sub
aaa
pop
negl
or
add
subb
mov
pop
dec
sbb
sbb
into
and
mov
outsl
adc
jmp
mov
adc
shlb
dec
imul
sbb
adc
ret
xchg
inc
adc
inc
pop
push
fmulp
or
hlt
mov
fisttps
xchg
jbe
arpl
pop
and
push
fcoms
pop
mov
cs
ljmp
popf
xchg
push
mov
add
stos
adc
pushf
push
or
mov
pop
in
inc
mov
xor
out
sbb
sbb
add
jns
cmp
fs
pop
repz
add
dec
adc
push
inc
movb
lds
adc
push
inc
data16
mov
cmp
sub
loope
jo
xchg
push
dec
std
mov
scas
mov
jne
mov
mov
push
mov
or
cwtl
push
sub
pop
or
test
push
sub
pop
sub
cmp
cwtl
ja
lea
jo
sbb
andl
mov
shl
dec
cmp
lea
jl
mov
mov
inc
sub
sbb
icebp
mov
ds
lods
cld
insl
ds
jne
jmp
jbe
add
or
sub
jno
lds
cmp
movsb
dec
add
sbbl
ds
add
and
jb
or
insl
mov
dec
or
xor
and
push
lock
sbb
pop
and
inc
jns
push
adc
xchg
fwait
cmp
push
sub
mov
ret
test
dec
sub
xor
or
sbb
dec
roll
loop
jg
inc
inc
jbe
jmp
xchg
shr
sbb
cli
mov
mov
stc
pusha
pop
cmp
mov
or
and
jae
adc
adc
adc
pushf
xor
mov
push
fistps
or
pop
in
push
inc
rolb
dec
in
or
inc
aam
xchg
inc
inc
push
dec
sub
test
inc
push
sarb
mov
lock
int3
cmpsb
dec
or
popa
jmp
sbb
lahf
outsl
out
xchg
pop
inc
cmp
addr16
push
test
inc
insb
adc
and
xorb
mov
add
subl
pop
push
add
addr16
mov
scas
jge
out
jbe
aas
xor
push
jg
or
inc
stos
or
aam
push
adc
or
or
push
js
jne
and
sub
push
dec
push
cwtl
call
xor
lret
mov
sbb
loope
clc
shll
cltd
adc
push
iret
push
mov
hlt
jle
arpl
mov
popa
daa
std
int
jns
es
aam
jp
addl
adc
divb
cwtl
dec
movb
mov
cs
lds
sar
sub
jmp
mov
pop
in
rclb
fsubl
dec
std
push
repnz
sub
sbb
mov
test
into
sub
cmp
fwait
enter
cmp
mov
jae
pop
xlat
test
sbb
push
ficoml
push
sbb
or
shufps
mov
imull
mov
sub
adc
jno
mov
cmp
outsl
aaa
gs
or
repnz
sbb
add
add
mov
sub
adc
int3
pop
push
and
mov
mov
push
repz
push
push
sub
jp
ds
and
add
lcall
adc
in
in
inc
add
ret
iret
pop
xor
xor
mov
sbbb
cmpsl
add
or
dec
pop
pop
pop
dec
add
movsl
pop
lcall
push
mov
dec
mov
lea
jge
dec
test
xor
mov
out
jmp
subb
add
adc
or
push
adc
adc
push
sbb
les
jne
sti
fadd
mov
add
and
pop
push
sbb
cmp
outsb
cmp
mov
test
fdivrs
xchg
mov
jns
add
or
les
add
inc
andl
mov
mov
and
and
push
adc
and
push
sbb
push
mov
lahf
add
mov
out
insb
in
sub
jne
int
loopne
add
jle
or
jno
aam
shrl
test
or
pop
sbb
shlb
adc
sti
inc
rclb
adc
popa
shlb
popa
pop
call
jno
mov
adc
add
int
pop
bound
outsb
add
nop
mov
add
lret
fs
andl
addr16
jbe
xchg
xor
mov
les
pop
scas
mov
sti
add
jb
add
jge
jp
popa
ja
aam
outsl
fcoml
loopne
test
ss
arpl
adc
and
xchg
xor
nop
push
bound
and
push
inc
jmp
ret
cwtl
push
icebp
or
push
and
adc
nop
out
lods
and
iret
into
or
xchg
andl
shll
test
cmp
stos
mov
mov
adc
cmp
mov
push
dec
mov
adc
cli
inc
inc
and
cltd
jo
movsb
mov
nop
mov
xchg
xchg
inc
jle,pt
push
push
add
mov
loop
mov
outsl
loope
scas
add
add
sub
push
nop
cwtl
nop
add
int
lods
fwait
call
sarb
test
add
dec
mov
orb
jecxz
orb
cmc
inc
push
loope
xor
enter
push
push
adc
mov
push
inc
sahf
xor
pop
loop
mov
jmp
stos
push
mov
test
aaa
mov
pusha
dec
cld
sarl
test
into
push
push
and
pop
test
push
mov
in
je
push
hlt
test
ret
mov
cmp
push
jle
dec
rorb
jne
gs
ss
mov
mov
pusha
mov
or
mov
mov
mov
sahf
test
push
sbb
push
mov
inc
imul
dec
xchg
mov
add
fcomps
ret
jns
mov
mov
adc
shl
add
fcomps
sbb
test
inc
adc
popa
adc
xchg
jmp
nop
inc
adcl
jp
jl
mov
icebp
inc
enter
pop
ret
lea
inc
rcr
loope
mov
popa
mov
sbbb
xor
sbbb
mov
xchg
and
add
scas
jl
ljmp
cmp
popf
sarb
fistpll
jbe
cmpsl
add
inc
aam
add
or
lcall
cmp
add
jp
push
add
lock
ret
pop
or
add
dec
mov
rorb
mov
outsl
add
ret
push
lea
daa
xchg
mov
rcrl
fs
test
add
aas
out
je
clc
adc
inc
es
iret
push
and
xchg
adc
mov
xchg
sbb
ljmp
lock
xor
jo
mov
cmc
push
test
sbb
iret
insl
movsl
mov
xor
rolb
adc
lcall
in
cmp
jl
xchg
es
je
cmpb
je
dec
sarb
fstpl
pusha
and
mov
xor
inc
in
add
gs
inc
pushf
fisubl
xor
ret
pushf
add
push
inc
rcll
fisubrs
sahf
pushf
or
out
sub
test
mov
sub
inc
xchg
adc
mov
pop
fiadds
inc
cmpl
mov
lock
das
in
sub
push
rep
add
int3
arpl
es
cmp
call
movsl
or
and
lret
movsb
cvtps2pd
sbb
xor
pop
add
jne
push
mov
or
or
out
or
sbb
mov
dec
mov
fwait
out
push
mov
icebp
mov
rolb
add
cmp
cs
imul
bound
xchg
mov
hlt
push
rorb
push
fsubrl
or
add
push
and
enter
mov
mov
or
add
dec
fs
xchg
xchg
jl
arpl
add
jp
mov
mov
xchg
push
push
scas
add
xor
pop
jge
ret
js
jg
incb
ja,pt
lcall
adc
rcll
and
in
in
pop
outsl
jne
push
push
adcb
fsub
and
fiadds
mov
insl
cmp
aad
and
push
sub
enter
xchg
xor
push
movsl
sbb
adc
repz
popf
inc
dec
in
add
add
incl
jne
mov
cmp
jb
mov
outsb
mov
lods
adc
cli
fiaddl
stos
xor
push
in
add
sbb
push
cmp
fidivl
ja
lret
dec
je
mov
repnz
add
shlb
clc
mov
cld
mov
add
dec
filds
cwtl
sar
mov
mov
pusha
shlb
mov
inc
scas
adc
je,pn
push
outsb
add
sbb
push
sub
xchg
dec
add
inc
add
add
jmp
mov
push
add
pop
mov
xor
sub
test
fs
lods
mov
mov
add
fwait
dec
dec
shlb
jmp
call
adc
mov
call
sti
add
es
sbb
push
es
clc
sub
test
add
push
lahf
dec
sbb
or
xchg
test
or
mov
or
or
in
daa
fcmovnu
adc
add
and
fsub
movb
push
and
in
lea
push
out
mov
cmc
mov
js
and
add
jo
jl
pop
push
arpl
lea
push
add
or
aaa
or
adc
test
ja
pop
or
ret
call
add
push
add
adc
imul
popf
inc
mov
out
push
insl
jbe
xchg
js
push
imul
or
stos
add
hlt
jmp
cltd
les
test
add
mov
test
xorb
mov
mov
cmp
mov
mov
loopne
mov
icebp
jo
adc
push
arpl
push
jmp
jnp
mov
cld
add
test
dec
jbe
xchg
fsubl
mov
loope
jb
or
les
insl
or
jno
rclb
jb
pop
inc
shl
add
aaa
pusha
ds
xchg
lret
fsub
int3
aas
icebp
movsb
loopne
dec
sbb
leave
jecxz
sbb
cld
shll
les
in
and
jnp
std
mov
sbb
pop
mov
ja
push
mov
pop
jb
loopne
js
nop
nop
push
cld
call
or
sti
es
pop
daa
jb
push
mov
inc
adc
insb
mov
cmp
mov
dec
and
fs
xor
sub
add
stc
fstp
sbb
orl
mov
fwait
jo
jecxz
mov
imul
and
fldenv
xchg
mov
divl
pop
or
push
mov
daa
xchg
fwait
sbb
add
test
add
add
and
sub
xchg
lret
xor
xor
dec
sub
xchg
cmp
cmp
inc
cmp
or
push
push
punpckhbw
pop
hlt
dec
adc
push
pop
std
xlat
mov
pop
adc
lcall
int3
shlb
dec
cs
mov
fdivrp
dec
inc
dec
mov
or
sahf
fsubrl
dec
dec
outsl
sub
movl
push
sbb
sahf
in
popa
or
sbb
xor
add
add
push
jp
add
bound
jle
mov
ljmp
jbe
int3
pop
mov
sbb
add
nop
add
enter
xchg
fiaddl
push
cmp
idivb
push
xor
xorb
mov
sbb
dec
fstpt
fs
inc
jb
and
and
and
sbb
adc
cmp
or
out
push
enter
rorl
push
rclb
push
int3
cmc
cld
push
xchg
sidtl
or
dec
push
orb
or
cmc
in
xor
lods
or
mov
push
lea
subb
add
mov
dec
sub
inc
jno
inc
mov
in
cld
adc
pop
push
pop
sub
mov
js
xor
push
gs
cmpl
and
clc
pop
push
inc
or
xchg
addl
rcrb
add
and
dec
mov
ja
or
jno
jb
adcl
pop
sbb
fwait
mov
push
sbb
cmp
ja
sub
jg
push
pushl
sbb
adc
sbb
and
pop
dec
cmp
cmp
and
pop
clc
ret
push
pop
push
icebp
mov
call
loopne
inc
or
jmp
lea
or
iret
fisttpl
fildll
inc
add
jo
or
xchg
stos
es
mov
pop
repnz
mov
inc
dec
sbb
mov
mov
inc
ds
add
dec
push
pop
cmp
sbb
jne
cltd
nop
or
add
push
mov
inc
sbb
mov
mov
or
dec
cwtl
push
xchg
sub
push
sbb
lret
mov
and
sbb
ljmp
je
punpckhbw
sbb
ds
adc
cwtl
pop
mov
and
and
adc
cmp
aad
push
scas
mov
pop
or
mov
out
add
ret
or
mov
push
add
fmull
hlt
ss
ret
imul
inc
add
popl
mov
xor
mov
mov
inc
fwait
jb
or
shl
bound
clc
xor
and
push
rcr
push
add
mov
xor
or
pop
jo
sbb
mov
or
or
mov
fsubs
pusha
push
add
or
popa
adc
js
add
mov
mov
repnz
ljmp
xor
stos
jnp
shll
adc
movsl
out
mov
adc
mov
or
push
dec
mov
add
shl
cmp
addb
stos
add
cmpsb
dec
mov
or
lock
dec
push
loope
pop
add
cs
aam
mov
xchg
orl
adc
aas
push
addb
ljmp
nop
adc
add
add
jne
inc
call
jge
jae
push
imul
jmp
mov
add
sub
scas
push
stos
bound
je
push
js
push
add
push
mov
mov
add
push
daa
sbb
call
dec
sbb
sahf
lcall
into
pop
push
insb
add
les
push
jae
inc
add
orb
adc
pop
adc
and
test
fwait
icebp
and
sbb
cmc
sbb
or
cmc
jne
out
jmp
inc
dec
xchg
lret
jne
popa
xor
adc
or
shll
sahf
push
shrb
pop
and
imul
adc
xchg
or
cmp
and
inc
inc
data16
and
cld
sub
mov
add
fdiv
pusha
push
cmpsl
and
icebp
and
add
sub
mov
ja
repz
add
mov
mov
out
jno
add
out
sbb
adc
add
push
sbb
xor
cmp
roll
or
mov
pop
mov
and
mov
push
xchg
popa
cli
dec
mov
push
ja
dec
cmp
mov
fisttpll
pop
dec
call
push
mov
adc
sub
cmpsl
xor
sarb
or
and
or
sub
adc
repz
lods
xor
fildll
les
mov
inc
xacquire
cmp
add
lods
sbb
sbb
shl
insl
sub
mov
negb
xchg
xor
xor
leave
sbb
ja
push
mov
cmc
scas
popf
fcoms
or
add
adc
sbb
jae
adc
or
shrb
pop
test
outsb
xor
pusha
sbb
in
repnz
loop
jmp
adc
and
and
loop
add
inc
test
xchg
inc
dec
push
mov
mov
sbb
or
lahf
sub
pusha
push
xchg
sbb
add
add
mov
and
mov
jg
lcall
outsb
add
leave
inc
das
mov
ds
cmpsb
rcr
cmp
rcrl
movsl
cwtl
sub
xchg
int3
xor
es
mov
adc
or
aaa
pop
orl
mov
enter
cmp
cmp
inc
outsb
xchg
or
mov
adc
nop
nop
in
pusha
mov
movsb
cmc
mov
mov
and
or
loopne
dec
mov
lock
test
jg
jno
inc
dec
and
subl
fs
jle
and
or
mov
fsubrl
add
shr
scas
sbb
subb
cs
insl
cmp
push
sbb
mov
sub
push
fdiv
inc
sub
clc
nop
cmp
and
push
aad
ljmp
sbb
icebp
das
dec
in
call
leave
inc
aam
mov
out
jmp
pop
negb
rorl
or
lock
mov
ret
fstps
push
push
pop
mov
call
or
fbld
pop
lret
dec
push
dec
push
mov
and
mov
pop
pushf
sbb
jmp
repnz
and
push
push
in
adc
arpl
mov
lret
pop
loope
call
mov
lock
sbb
test
mov
push
fidivs
or
add
or
idiv
mov
out
add
and
or
mov
pop
test
loopne
idiv
adc
rcrb
rolb
test
push
lock
mov
in
add
pop
jo
pop
pop
inc
adc
cmp
cld
pop
dec
inc
jne
es
add
push
sbb
outsl
fsubrl
add
aas
lods
mov
xorb
aas
push
cwtl
movsb
jecxz
inc
jnp
call
jne
rclb
mov
sbb
push
test
lock
inc
ficoml
or
or
in
xor
inc
repnz
in
adc
xchg
notb
and
pushf
dec
push
sbb
pop
jl
push
mov
leave
jl
add
in
call
sbb
add
sbb
ficomps
dec
es
repz
sahf
jg
sub
push
icebp
fs
add
pop
push
sub
sub
sbb
sbb
bound
and
movsl
or
push
mov
jbe
movsb
add
add
cld
mov
xor
sbb
xchg
cmpsl
mov
mov
sub
xor
push
jmp
push
insb
sti
ret
loopne
inc
push
pop
mov
pop
sub
add
sub
or
mov
mov
imul
push
sti
ret
into
imul
xor
cmp
sub
xchg
lods
rcl
enter
mov
cltd
mov
sbbb
xchg
orps
mov
cmp
sbb
gs
in
aam
imul
inc
into
sar
add
jge
hlt
dec
mov
xchg
jno
add
cwtl
icebp
orb
rolb
mov
lds
mov
jge
xor
pop
jmp
push
sbbb
jbe
je
push
and
ss
xchg
push
fst
push
push
jbe
imul
loope
rcrb
mov
sbb
fstpl
and
xchg
mov
add
js
inc
push
mov
scas
xchg
mov
and
sahf
sbb
mov
adc
pop
sbb
and
rorb
movb
icebp
pusha
stos
or
jns
loope
xor
pop
xchg
mov
loopne
sahf
jne
cmp
imul
pop
mov
xor
dec
mov
cmp
testb
cwtl
rorb
scas
push
xor
mov
pusha
lcall
push
popa
repz
adc
inc
cli
addl
pmaxub
push
xor
scas
clc
push
xor
dec
push
jle
jne
shll
xor
clc
adc
cli
xchg
or
in
outsb
adc
imul
imul
subl
jle
and
push
push
jmp
cmp
push
fmuls
pop
fsubrl
daa
int
outsl
inc
xor
xor
and
popa
or
push
dec
jns
jp
mov
adc
inc
aaa
mov
add
daa
aaa
aas
les
incb
aas
push
sbb
push
and
ret
fs
fsubrl
mov
in
mov
lcall
sbb
add
push
iret
adc
adc
jbe
or
push
xchg
je
and
sub
testb
and
cmp
jb
inc
mov
cmp
mov
or
testb
cmp
sub
sbbb
orl
jo
adc
adc
push
mov
jbe
int3
push
test
xchg
out
xor
das
adc
inc
sbb
push
test
jecxz
daa
xchg
xchg
mov
fs
xor
in
xor
or
pop
stos
nop
cwtl
enter
jmp
push
sbbl
sti
je
mov
inc
arpl
in
jmp
or
iret
sub
sub
push
repnz
sarl
ret
frstpm(287
lcall
push
mov
dec
and
xchg
arpl
dec
sub
jle
cmpsb
imul
dec
dec
dec
sub
pop
add
push
push
gs
pop
pop
xor
jnp
push
xor
sub
je
popa
outsl
pushf
or
popl
xchg
sbb
mov
fisubs
xchg
and
and
outsb
lret
dec
sbb
push
cmp
inc
xchg
dec
xor
xchg
xchg
sub
or
popf
add
inc
sbb
lea
dec
mov
daa
call
and
add
xor
or
sub
sub
add
ss
pop
clc
lods
inc
inc
call
std
xchg
das
inc
enter
add
lret
sub
add
sub
sbb
test
js
leave
and
stos
xor
rclb
add
inc
dec
pop
es
fwait
sub
sbb
mov
xor
adc
or
ss
xor
arpl
mov
and
xchg
or
and
mov
add
and
push
xor
dec
lea
loop
testl
push
mov
mov
push
push
pop
imul
mov
mov
pop
add
pop
cmp
inc
out
cmovbe
jnp
jge
jnp
mov
js
jne
xchg
faddl
push
imul
shrb
and
push
int3
mov
mov
or
mov
or
scas
shll
lock
rorl
ljmp
or
cmp
add
int3
xor
mov
sub
push
int3
add
bound
or
or
jne
mov
add
push
call
in
out
push
mov
or
add
mov
lock
inc
inc
add
cmpb
fcompl
or
repnz
aaa
jmp
or
push
mov
xor
add
adc
cld
out
mov
or
js
jne
mov
scas
jge
sub
pop
xor
or
fs
xor
jle
ss
push
jle
inc
sbb
add
mov
lahf
test
daa
add
adc
add
mov
insb
je
jae
lret
inc
lea
sub
push
daa
and
xor
or
mov
mov
decl
xchg
inc
enter
sbb
pop
or
xor
mov
lret
sbbb
or
nop
jno
lods
mov
gs
inc
push
jl
adc
ljmp
rcrb
or
mov
repnz
jo
pop
mov
jne
outsb
adc
pop
jg
pushl
dec
add
popf
punpcklbw
adc
add
mov
mov
adcl
sbb
or
sbb
adc
sub
ss
xchg
adc
in
add
lods
adc
jecxz
mov
cmpsl
addb
ret
mov
pop
push
xchg
jmp
mov
shlb
jae
pusha
pop
jge
jae
dec
dec
push
movsb
jmp
cwtl
push
xchg
lahf
cwtl
inc
or
adc
sti
pushf
push
movsb
dec
or
test
inc
cs
test
dec
mov
testb
je
sbbb
dec
cltd
or
aas
add
adc
push
inc
fmuls
addb
add
mov
push
loopne
pop
cmp
js
mov
outsl
push
inc
lock
ja
arpl
sbb
mov
dec
filds
and
xchg
jp
cmp
in
dec
cld
pop
jbe
or
mov
push
and
sbb
and
sbbl
inc
fs
sbb
fimuls
ret
cmp
in
pop
sbb
mov
inc
iret
jecxz
mov
xor
cmp
and
xor
cmp
lods
push
mov
movsl
and
inc
test
pop
jae
and
inc
test
ds
lcall
cmp
fwait
dec
jp
flds
roll
inc
push
sbb
sub
rcr
lea
mov
out
pop
sbb
inc
stc
sbb
cmp
dec
add
subb
cmp
push
pop
sbb
pusha
test
cmp
ljmp
pop
or
mov
cmp
rcrb
enter
jp
jae
inc
sub
mov
mov
inc
testl
and
fs
or
insl
leave
sbb
mov
clc
add
aas
push
rcr
sbb
out
inc
mov
dec
push
adc
inc
enter
adc
or
test
dec
jae
sub
daa
orl
mov
jg
sbb
loopne
rcrb
dec
push
fiadds
movsl
pop
ds
xchg
jp
push
dec
sub
push
pop
imul
jno
arpl
mov
addr16
and
dec
push
or
and
rolb
sbb
add
ss
leave
fcmovnbe
fmuls
add
or
jecxz
mov
shr
mov
jmp
cmp
xchg
push
daa
in
xchg
add
ret
mov
sbb
arpl
add
roll
mov
dec
add
stos
ret
outsb
and
mov
test
call
fs
pop
test
icebp
xor
dec
in
mov
adc
adc
mov
sbb
and
cmp
inc
sub
adc
or
add
nop
sbb
movsb
jb
push
lret
or
leave
push
bnd
push
fiadds
mov
mov
mov
add
sbb
fidivs
sbb
cltd
pop
xchg
push
add
dec
adc
and
mov
push
xchg
pop
sub
sbb
inc
sbb
add
mov
push
sbb
jecxz
push
mov
inc
dec
cmp
rcrb
dec
and
add
rcr
rcrb
stos
in
cmp
mov
sbb
hlt
jb
pop
xor
and
frstor
pusha
int
out
cmpsb
icebp
push
xor
mov
mov
and
push
push
pop
xor
jecxz
scas
iret
or
jne
mov
movb
sbb
add
or
add
pusha
dec
sbb
lods
and
nop
jbe
inc
mov
and
aam
loop
dec
or
es
loop
dec
out
sub
push
sub
mov
pop
or
and
jle
popl
push
mov
and
or
push
iret
jecxz
jmp
mov
ja
pushl
push
es
lock
sub
test
scas
ret
jge
testb
push
push
mov
jo
mov
out
incb
loope
cmp
ret
jne
and
adc
adc
jae
xor
push
lock
ss
dec
in
push
add
pushl
inc
push
xchg
add
in
enter
sub
mov
mov
mov
in
mov
lret
mov
mov
inc
pop
aam
adc
mov
push
sub
add
cmp
pop
stos
and
dec
mov
adc
add
sbb
jmp
inc
xor
cli
adc
andnps
dec
mov
loop
xchg
cwtl
or
pop
adc
enter
xor
lret
adc
pop
mov
or
bound
inc
lods
jne
xor
push
adc
mov
cli
mov
sub
rorb
ud0
sub
push
cmp
mov
push
lods
vcvtdq2pd
sbb
inc
gs
arpl
and
les
xchg
xchg
mov
adc
dec
inc
push
cltd
movsl
adc
adc
xor
dec
fcompl
and
push
sub
fwait
inc
adc
in
rorl
push
lods
push
rclb
jecxz
pop
adc
mov
add
inc
sbb
imul
sbb
xor
in
loopne
sbb
jns
adc
sbbb
inc
push
sbb
sbb
in
push
push
sbb
sbb
inc
mov
sbb
and
dec
int3
andl
dec
leave
sub
mov
sbb
sub
add
adc
add
xchg
sub
addl
data16
adc
or
fdivrs
add
pop
loopne,pn
sbb
stc
add
sub
lea
sbb
jae
cmp
sbb
imul
mov
push
cmp
push
subb
pop
xor
rcr
lods
adc
inc
mov
pushf
push
and
lock
add
scas
ss
cs
add
je
lods
dec
cs
mov
out
or
ljmp
xor
jecxz
push
add
dec
inc
scas
sbb
mov
push
popa
sub
inc
add
rcll
addb
sub
or
adcb
xor
testl
inc
ss
pop
sub
xor
leave
les
mov
jno
std
cmp
enter
jge
call
mov
cmp
jns
andl
lods
cmp
pop
mov
mov
jae
push
loopne
bound
or
mov
adc
jmp
sbb
sbbl
enter
out
adc
inc
cmp
je
stos
call
jl
cmp
pushf
ss
sbb
lea
clc
insl
cwtl
adc
pop
mov
outsl
mov
in
cmp
xor
cmp
jno
push
xchg
lret
ds
pusha
xchg
inc
and
xchg
pop
hlt
and
push
xchg
xchg
add
aam
dec
or
xor
dec
inc
xchg
jl
inc
dec
xchg
xchg
sbb
and
les
daa
int
jle
orb
and
inc
pop
jb
inc
lds
inc
jno
subl
mov
outsl
mov
sub
mov
movsl
or
inc
movsl
and
inc
mov
add
mov
pushf
add
mov
push
int3
mov
test
cld
daa
int
sub
jae
inc
out
ud1
xlat
jnp
mov
inc
dec
or
xchg
lret
movsl
and
cmp
lahf
fwait
cmc
xor
cmpl
add
nop
int
sub
popa
aad
nop
sub
push
imul
mov
cwtl
dec
cs
dec
lods
test
ljmp
pop
sahf
inc
rcll
add
lds
sahf
dec
pop
repnz
adc
mov
mov
nop
push
sti
outsb
push
hlt
lods
divl
cld
mov
jmp
shll
sub
es
push
sbb
dec
sub
mov
mov
or
dec
dec
jb
sub
sub
push
xor
test
shrl
or
mov
das
sub
and
adc
push
mov
sbb
push
mov
movsl
or
aas
aaa
adc
fldl
je
jns
jle
test
or
lret
in
push
push
ficoml
dec
hlt
int
nop
xchg
mov
push
adc
adc
mov
or
fadds
ljmp
jle
rcll
mov
rclb
and
mov
ss
hlt
outsl
push
push
cmp
add
lret
dec
cmpb
testb
jmp
adc
mov
insb
divl
sbb
push
jmp
lea
aad
jns
ret
fwait
in
test
push
stos
or
cmp
mov
inc
adcl
xor
xchg
dec
test
shll
aad
aad
push
adc
test
xchg
mov
in
in
fildll
cmpl
out
sub
add
or
mov
mov
ret
cmpl
xchg
or
lods
or
push
push
sbb
jne
aam
fwait
jo
inc
dec
dec
mov
push
mov
push
data16
cmp
clc
mov
push
mov
cmp
jo
push
adc
mov
idivb
pop
fcmove
jl
cmp
and
pop
add
imul
mov
dec
js
cmpsb
popa
adc
dec
push
lods
jmp
push
clc
repz
mov
test
jmp
jbe
mov
jnp
lgdtl
jnp
add
aam
add
movsb
inc
mov
cmpsb
es
cmp
and
cmp
lock
data16
or
je
in
das
adcb
push
jmp
adc
jb
fwait
pop
inc
jo
test
ret
or
jl
in
push
mov
inc
das
sarl
jle
icebp
sub
lods
sbb
lods
inc
addr16
cmp
lret
adc
or
das
adc
adc
inc
cmp
cli
fadds
idivb
je
je
and
xor
and
mov
add
and
and
dec
or
pop
arpl
adc
out
sbb
rolb
sbb
arpl
add
lret
ret
xchg
mov
loope
sbb
imul
pop
daa
sub
in
ljmp
aad
cmp
and
lock
cltd
pusha
cwtl
inc
call
inc
or
xchg
and
or
or
add
ret
mov
push
xchg
pop
popf
test
andl
pop
sub
pop
lea
test
cmc
mov
es
call
pop
jne
adc
mov
inc
mov
aad
aam
xchg
add
out
jle
movsl
xlat
out
adc
or
movsb
mov
xorl
and
jg
cmp
push
mov
je
mov
sbb
mov
sub
aam
sbb
adc
cmpsl
jge
aas
fdivl
dec
or
pop
sbb
popa
test
cli
mov
nop
xchg
xchg
mov
adc
xor
add
add
or
lret
mov
adc
xor
jmp
dec
sub
mov
arpl
dec
inc
aad
pusha
push
pop
dec
movb
fimull
push
add
sbb
add
push
clc
mov
cmp
xor
insb
fstps
sbb
sbb
fstps
mov
jo
add
and
lock
imul
add
sub
lock
or
add
fcmovb
subl
xor
pop
jo
mov
dec
outsl
adc
xor
sbb
dec
jnp
outsl
and
push
inc
push
sahf
pop
popa
sbb
shr
mov
inc
movb
add
inc
xor
loope
jecxz
push
fwait
movl
or
lea
push
jmp
dec
divl
push
push
sbb
pop
push
fdivp
insb
lea
sub
sub
add
mov
std
dec
pusha
xor
adc
dec
dec
mov
dec
and
fs
sbb
and
loop
rclb
pushf
sbb
mov
sbb
mov
shlb
mov
movsl
cwtl
and
mov
xor
sbb
ret
inc
push
add
and
pushf
pop
jp
scas
flds
inc
imul
adc
cmp
and
mov
cmpl
lods
fbstp
faddl
test
add
pop
lods
cmpsl
sbb
push
sti
xor
sarb
test
push
add
mov
aas
movsb
cltd
in
adc
pop
mov
push
daa
adc
lock
or
test
inc
es
ds
mov
test
iret
or
fldt
dec
pop
or
xor
sbb
loopne
loopne
test
clc
sbb
cmp
mov
iret
adc
lret
sbb
pusha
jge
mov
push
pushf
psubw
popa
push
dec
pop
push
add
mov
mov
lods
test
jl
enter
sbb
mov
dec
mov
sti
pushl
cmp
je
cmp
je
cmp
je
cmp
je
push
inc
pushf
sbb
pop
clc
imul
hlt
jne
push
fidivrs
hlt
aad
mov
pop
pop
hlt
movsb
and
and
ja
push
xchg
mov
mov
sahf
and
mov
shl
cld
jno
xchg
adc
mov
lcall
mov
jl
sti
icebp
pop
mov
push
fcoml
push
adc
cmp
pop
arpl
xchg
jl
dec
loope
or
adcb
push
mov
outsb
mov
and
imul
imul
xchg
int3
jnp
mov
or
mov
int3
xor
or
mov
pop
or
add
mov
pop
mov
shlb
sub
xor
xchg
push
mov
pushf
test
mov
add
adc
pop
pusha
mov
ret
rorl
das
xor
enter
add
loop
mov
cmp
xchg
mov
inc
cmp
lods
add
imul
dec
add
and
xchg
or
fs
xchg
loope
nop
clc
and
mov
and
xor
pop
and
fistpl
mov
mov
pop
and
jl
pop
and
cmp
imul
rclb
sbb
inc
mov
xchg
sub
clc
mov
sbb
addr16
mov
movsl
and
das
movsb
push
xor
pop
dec
lcall
mov
add
mov
xor
sbb
jns
add
cld
cmpsb
mov
imul
xor
pop
cmp
loopne
pop
ljmp
fcomi
in
cmp
into
and
sbb
lods
push
int
or
jb
sbb
sbb
add
xchg
fnstcw
pushf
rolb
mov
aaa
sti
or
aad
mov
push
arpl
cmp
mov
add
icebp
mov
mov
pop
and
and
movsb
fstl
je
ss
adc
inc
push
sbb
jp
and
leave
shlb
fcomps
incb
mov
jle
je
orb
mov
rorl
mov
cli
das
cmp
js
dec
cmp
inc
fs
in
mov
push
mov
add
mov
jl
movl
dec
dec
test
adc
cmpsl
sbb
outsb
jbe
xor
lea
popa
mov
inc
push
xchg
es
cmpsl
adc
cmp
popa
data16
mov
add
jecxz
jbe
and
leave
mov
mov
arpl
inc
xor
adc
fs
push
jo
mov
movl
fimuls
inc
lods
dec
cmp
fs
lock
aad
mov
mov
rcrb
pop
loop
cld
cmp
pop
jnp
adc
enter
adc
lods
mov
das
jecxz
or
adc
adcl
add
pusha
loopne
aas
dec
mov
dec
mov
inc
adc
loopne
add
lret
cli
sbb
add
add
push
or
mov
movsl
pop
es
dec
cwtl
ret
sub
mov
sub
and
xorl
xchg
sbb
sar
leave
sbb
jg
clc
push
add
push
arpl
xchg
add
mov
and
cs
dec
cmpb
cmp
cmp
xor
jnp
jne
cmp
jne
sub
rorb
mov
jmp
cmp
fiadds
mov
jl
inc
mov
add
dec
xor
and
mov
fdiv
lahf
arpl
sub
mov
sti
add
pop
test
add
aad
adc
mov
xor
imul
and
xchg
iret
loop
shll
jl
sub
jmp
push
pusha
push
dec
and
lds
movsl
mov
imul
or
pop
mov
clc
xchg
lock
cld
into
adc
lds
sbb
fmuls
adc
test
dec
sahf
cld
movsb
lea
adc
stos
rol
call
int3
stc
jb
fadds
loop
inc
test
cmp
jle
pushl
ret
dec
pusha
pop
enter
movsl
xchg
or
inc
ds
and
les
cmpl
call
add
movb
add
arpl
rcl
ss
dec
lods
lods
aas
or
pop
in
add
test
sub
push
mov
push
sbb
or
mov
push
adc
push
push
rorl
orl
and
dec
ja
xor
or
jb
jbe
xchg
movsl
inc
das
fnsave
or
pop
popa
mov
lock
repnz
or
add
pop
mov
scas
cmc
jb
cmp
add
ljmp
cmp
inc
jne
pop
subl
or
jnp
adc
push
into
jecxz
fadd
cmp
push
int
test
sub
andb
mov
gs
outsl
mov
sbbl
xchg
test
mov
push
in
test
int3
jg
sub
push
pop
add
lea
pop
mov
ret
or
das
mov
dec
cmc
jp
popw
dec
in
or
adc
dec
mov
nop
push
lea
adc
add
clc
scas
add
adc
mov
hlt
sub
add
and
adc
mov
rorl
and
xor
cmp
test
out
jae
adc
xchg
sbb
jmp
add
push
jo
add
imul
inc
lret
add
inc
nop
in
and
inc
and
in
sbb
sbb
leave
insb
add
pop
pushl
cmp
xor
inc
pop
jmp
push
add
ja
sti
mov
add
push
push
pop
leave
push
mov
xchg
jae
lcall
hlt
sbb
push
dec
imul
rcr
les
xor
sbb
and
cmp
jecxz
dec
dec
mov
mov
fiaddl
sub
ret
add
dec
mov
xchg
sub
int
aaa
in
dec
mov
push
push
outsb
xor
rolb
jl
rcll
xor
xchg
lea
and
xor
dec
xor
jo
lods
loop
test
add
xor
subb
add
outsb
imul
or
mov
adcb
mov
call
loopne
scas
add
add
enter
pop
adc
loopne
cmp
push
cs
cmp
xchg
pop
or
outsb
sbb
or
mov
pop
sbb
pusha
repnz
cwtl
and
or
movsb
fisttpl
sub
or
rcrb
or
adc
sub
insl
xor
adc
adc
inc
add
pop
inc
lret
xorl
or
ffree
dec
push
mov
cmp
mov
dec
pop
push
or
jne
cmp
mov
outsb
adc
pushf
rolb
in
mov
add
push
rorb
xor
xor
icebp
mov
push
and
dec
jns
or
pop
jmp
jbe
sbb
jo
divl
daa
loopne
jle
sub
inc
pop
push
or
frstor
cld
push
push
loope
inc
out
cmp
enter
push
adc
xchg
sub
pusha
pop
pusha
mov
jns
push
lods
and
lock
jno
inc
jno
movsl
jbe
push
or
jnp
mov
mov
sub
add
out
ret
or
cwtl
adc
int
push
in
adc
add
or
xlat
or
out
xor
popf
in
sarb
dec
cmp
or
mov
das
adc
cmp
rorb
xlat
outsb
fcoml
inc
cmp
adc
lock
xor
mov
jne
or
and
inc
pop
xchg
or
cmp
aas
movsb
nop
subl
das
push
dec
lods
inc
push
cltd
or
or
or
filds
jne
jno
pop
fsubr
cwtl
pop
xchg
movsl
adc
fiadds
movsb
sub
mov
mov
cmp
and
into
shrb
sub
sbb
ljmp
insb
push
sub
or
inc
mov
iret
shrl
adc
stc
mov
sbb
in
adc
cmp
stos
mov
es
pop
inc
fdivl
nop
xchg
add
out
fwait
dec
jl
inc
adc
xor
cmp
mov
cmp
cmp
insb
pop
cmp
adc
pop
addb
jo
loope
xor
or
popa
in
adc
sbb
repnz
hlt
sbb
dec
mov
pop
xor
push
ja
inc
aas
clc
and
add
mov
lcall
push
inc
pop
inc
inc
xchg
inc
push
fmull
jle
or
push
jg
jbe
out
in
jg
pop
add
or
lret
add
orl
add
clc
shlb
cs
cmp
xorb
pop
enter
xor
mov
sub
test
call
mov
bound
test
and
loopne
or
enter
in
rcl
dec
loop
lock
loopne
and
inc
mov
lcall
mov
add
bound
adc
in
add
and
mov
pop
add
adc
mov
or
orl
sub
icebp
rorl
dec
pop
outsl
mov
xchg
add
sub
sahf
incb
xchg
jb
fcos
nop
out
sub
push
push
in
cltd
call
roll
fdivrs
sbb
fcoml
aaa
jne
or
or
cld
pop
std
sbb
jge
sub
dec
sub
add
stos
movsb
cld
lock
xor
inc
mov
movsb
cli
aad
add
pop
sbb
inc
sbb
push
fwait
dec
test
push
xor
cmp
sbb
push
dec
stos
jmp
sub
daa
push
add
pop
xchg
mov
adc
pop
push
inc
jp
sub
bound
mov
add
shrb
sbb
rorb
inc
lret
adc
mov
cmp
adc
xor
sbb
xchg
inc
rcrb
sbb
sbb
mov
and
push
sti
add
pop
mov
sub
aad
sbb
fucom
add
fwait
sub
pop
lcall
sub
and
lcall
pop
inc
sub
fidivrl
sub
sub
jecxz
nop
out
sub
xor
adc
scas
or
ficoml
and
inc
aad
sti
sbbb
sbb
push
pop
dec
jle
pop
or
pop
inc
fwait
adc
clc
outsb
mov
cmp
push
xor
js
out
and
cmp
fneni(8087
xorl
or
cs
std
bound
lods
push
loopne
inc
pop
mov
aam
jne
jle
and
push
in
movb
dec
out
xchg
mov
sub
or
mov
inc
fs
or
dec
push
pop
outsl
insl
xchg
push
cmpl
xchg
adc
xchg
aam
in
call
cmp
cmc
xor
mov
ficomps
mov
dec
cmpsb
adc
call
xchg
enter
nop
push
mov
mov
xor
sbb
scas
add
lea
push
mov
xchg
xchg
jmp
addr16
dec
in
pop
push
and
xchg
xor
inc
js
push
orb
jmp
shl
cmpb
inc
pop
lcall
add
and
decb
incl
movb
push
mov
clc
sub
cmp
pop
jl
pop
je
aam
or
clc
sbb
dec
ret
rcrb
mov
ficoml
cmp
and
or
call
cmp
adc
ret
ffree
subb
iret
lea
insb
xchg
test
sub
add
orb
jae
push
jns
jl
mov
or
or
cli
dec
add
out
add
mov
shlb
cld
hlt
std
xchg
loopne
or
test
rorb
enter
push
push
cmp
mov
pushf
dec
les
movsl
mov
fdivrl
add
inc
xor
mov
hlt
mov
mov
push
mov
lods
or
push
xor
push
les
icebp
and
test
ret
add
pop
or
in
repnz
inc
cmp
jb
pop
pop
arpl
inc
sbb
shrb
dec
inc
arpl
or
ret
mov
push
rolb
add
ljmp
pop
add
xor
and
jmp
cmp
jne
xor
xorl
xor
push
aaa
cs
mov
fildl
fmuls
fcomps
int
xchg
mov
js
pushl
inc
cmp
testb
push
sub
mov
jg
push
jne
sbb
test
mov
fnstcw
test
test
add
daa
cmp
faddl
ret
xchg
icebp
mov
jmp
dec
out
ret
es
orl
orl
xchg
sub
sbb
cmp
jo
pop
cmp
sub
adcl
repnz
popl
adc
adc
push
sbbb
fsts
ret
or
dec
or
dec
test
push
jecxz
rcrl
jl
cmp
push
mov
adc
jo
test
xchg
push
lods
jecxz
sbb
aam
jb
mov
loope
andl
add
sub
mov
jmp
sbb
mov
or
call
or
push
lea
iret
mov
sub
pop
and
clc
cmp
data16
xchg
mov
pop
inc
mov
push
test
or
inc
xor
lods
push
int3
xor
mov
popw
push
cs
inc
and
push
inc
push
or
xor
mov
arpl
mov
inc
or
nop
sahf
xchg
mov
int3
cmp
inc
jmp
cli
add
jb
or
cmp
add
push
xchg
jp
test
ljmp
jb
sbb
jl
or
cwtl
daa
mov
cmp
sete
movsb
hlt
pop
int3
push
testb
push
cld
loop
aaa
xchg
sub
dec
xchg
and
loope
cmp
icebp
jle
push
loop
dec
mov
ret
jge
jmp
pop
call
imul
int3
je
or
ja
out
dec
loope
or
jge
pop
push
push
outsl
fnstcw
jg
adc
ja
mov
ret
cmp
dec
outsl
mov
popa
jge
and
xor
jl
cmp
inc
les
testb
les
cli
xor
out
push
push
inc
lds
sbb
adc
xor
pushf
pop
xor
xchg
jne
and
fpatan
scas
xor
je
jnp
and
cmpsl
xchg
in
ss
mov
imul
ss
lock
inc
sbb
cmpl
xchg
pop
decl
or
adc
dec
adc
test
je
popa
xchg
or
or
lods
or
mov
push
ss
and
push
push
call
icebp
dec
and
sbb
jmp
push
cmpl
or
inc
pop
cmp
mov
popf
lock
test
in
add
mov
or
rcrb
jb
mov
add
pop
fs
or
call
imul
jmp
mov
test
add
push
mov
adc
jp
pop
xor
or
mov
cmp
fs
nop
push
cli
sub
fcomp
xchg
cmpsb
mov
adc
lds
jmp
pop
and
mov
or
or
mov
je
cmp
js
push
rclb
jo
lods
adc
cmp
ror
pop
mov
inc
push
mov
push
leave
lahf
popf
stos
mov
mov
in
pusha
pop
dec
dec
and
aas
pop
cmp
je
jmp
adc
out
xlat
sub
popa
outsb
out
das
mov
dec
add
jle
mov
add
cmc
lret
adc
inc
xor
inc
adc
rclb
mov
mov
push
xor
movl
adc
and
orb
fs
pop
pop
loopne
or
popa
and
les
or
mov
enter
add
add
jle
adc
icebp
arpl
test
pop
sbb
xor
mov
scas
sbb
ret
fadds
or
dec
xor
loop
das
add
pop
cld
mov
cmp
lgs
es
inc
sub
lock
sti
cmp
ret
icebp
xor
adc
inc
mov
pop
int
ret
pop
lock
pushf
fs
in
and
pusha
xchg
mov
push
push
icebp
mov
addl
stos
push
loopne
jne
push
sub
mov
cmp
out
aaa
mov
inc
or
inc
mov
xor
lock
subl
es
lock
cmpsl
test
and
loop
inc
cmpsb
lock
lcall
pop
push
cwtl
call
mov
or
add
mov
aaa
in
sbb
call
jns
and
sarb
call
mov
add
inc
sub
inc
push
cs
mov
adc
pop
or
dec
add
sub
push
sub
mov
mov
dec
add
inc
or
mov
cwtl
mov
repz
pushf
cmpsb
movsb
test
cwtl
jp
subb
mov
orl
xchg
sti
xorb
ss
pop
jbe
adc
fnsave
push
adc
inc
sbb
sahf
mov
rcll
test
pinsrw
adc
add
pop
ret
rcll
out
push
fxch
fst
adc
xlat
push
rorl
ret
ret
pusha
inc
dec
shr
shrl
shlb
push
ret
push
pop
fsubrp
mov
fdivs
pop
lods
das
push
into
xor
add
loopne
cltd
nop
cmp
xor
negl
jl
mov
shlb
add
dec
or
mov
and
add
xchg
xchg
out
push
idivb
pop
call
mov
cld
adc
pop
movsb
jo
imul
call
push
push
adc
jmp
cmp
movsl
pop
bound
cmp
popa
les
inc
stos
xor
push
icebp
mov
mov
out
cmp
fcompl
loop
cld
dec
and
inc
mov
xchg
lods
mov
rcll
inc
jecxz
push
sbb
adc
aam
pop
je
addr16
mov
je
pop
inc
push
add
cmp
or
jmp
adc
orl
or
test
and
dec
insb
pop
popa
mov
adc
dec
jmp
mov
scas
scas
faddl
out
sbb
or
pop
pop
mov
and
push
add
jno
fidivl
push
mov
inc
sub
rorl
subb
ret
jno,pn
dec
inc
and
dec
fcoms
sbb
push
or
je
adc
cmp
push
jns
cmp
dec
xsha256
cmpsb
adc
hlt
push
pop
add
inc
adc
push
mov
jp
push
push
lea
xor
push
and
pop
inc
adc
add
mov
pop
pushf
fdivrs
in
popa
cmpl
pop
sub
dec
bound
push
aam
js
js
mov
sbb
push
icebp
cmpb
loopne
cmpb
inc
lock
jne
add
dec
lret
mov
jae
test
shll
adc
pushf
es
mov
mov
lods
sbb
idiv
cmp
jb
push
adc
jae
and
js
or
xor
and
inc
loop
dec
xor
scas
insb
mov
inc
adc
cmp
and
adc
lock
jl
mov
push
cmp
or
mov
inc
xchg
orl
add
mov
lcall
aad
pop
lods
shll
add
or
mov
jecxz
fisubs
push
add
jmp
inc
popf
pushf
and
inc
xor
jle
add
insb
lock
inc
frstor
adc
lahf
test
mov
loopne
sub
push
mov
aam
and
pop
xor
mov
lret
push
pusha
push
mov
lock
mov
and
xor
insl
xor
or
xor
por
ds
mov
jmp
movsl
jbe
fisttpll
mul
nop
pop
aam
xchg
test
add
les
add
adc
pop
mov
pop
cltd
mov
adc
movl
push
mov
adc
je
inc
or
jae
pop
pop
sbbl
push
jae
arpl
out
repnz
push
je
mov
or
push
or
jg
insb
jne
or
cmp
push
push
sub
sub
movsb
aaa
sub
sub
add
and
adc
push
add
aaa
js
xchg
mov
cmp
bound
add
xor
xchg
test
or
out
push
or
pop
outsl
dec
out
cwtl
mov
adc
inc
xchg
sub
and
fiadds
sub
push
addr16
cmpsb
bswap
dec
mov
cli
ss
icebp
je,pn
push
inc
cmp
jmp
inc
mov
xchg
shrb
je
adc
cmp
into
mov
or
pop
xor
sbb
jo,pt
lock
sub
loopne
cwtl
xor
xor
rcl
and
push
test
daa
pop
rcll
lret
movsb
inc
ficompl
inc
xor
xor
pop
add
sbb
cwtl
or
dec
loopne
adc
pusha
jg
fisttps
or
mov
mov
outsb
cmp
mov
add
push
stc
mov
and
add
push
cmp
dec
movsb
mov
loopne
rcl
rcr
nop
adc
add
add
cmp
or
cmp
fstpl
pop
ja
push
mov
pop
pusha
sub
or
rcrl
or
inc
and
add
dec
shll
push
xor
je
jl
mov
jl
fsubr
mov
cld
andl
add
inc
int3
lods
int
gs
inc
mov
xorb
inc
and
add
rcrb
dec
cmp
sarl
gs
mov
add
loopne
add
sbb
pushl
or
xchg
add
test
js
or
xorb
or
insb
push
or
push
cmp
xor
push
and
ret
mov
pushf
insb
mov
xor
cmp
cld
inc
adcl
push
clc
adc
and
inc
mov
dec
jo
ljmp
xor
shll
sub
dec
dec
pcmpeqw
or
pop
andl
pop
push
or
add
and
jecxz
inc
popa
add
insb
dec
adc
fildll
jmp
cmp
decb
xor
movhps
add
jne
sbb
shl
sar
lret
or
mov
dec
add
push
ja
aas
push
insl
add
jne
mov
adc
loopne
movswl
enter
cmp
mov
push
inc
dec
ficompl
mov
or
inc
push
pop
add
ja
jl
rclb
jne
aaa
mov
test
in
push
in
das
or
sbb
and
popa
inc
inc
jo
dec
mov
ljmp
add
or
add
push
out
int
xchg
pop
jne
lea
add
or
adc
pop
xchg
lret
lret
fimull
push
clc
out
test
inc
mov
cmpsl
jg
cld
inc
push
sub
cmp
mov
add
or
adc
pop
mov
rcrb
repnz
out
add
std
dec
jb
iret
cmp
mov
dec
ljmp
clc
bound
add
imul
xor
insl
sub
rolb
ret
roll
mov
xchg
mov
mov
sub
mov
clc
dec
jne
stc
lock
xor
xchg
loopne
je
icebp
jne
fwait
jl
cmpsl
xor
ja
fwait
jnp
cmovp
sub
pop
sub
add
sub
insb
stos
sub
and
ja
pop
cli
mov
ljmp
or
ret
adc
cltd
fstl
shrb
xchg
mov
stos
shr
jns
test
jne
lret
clc
insl
mov
push
jmp
jbe
cmp
or
jmp
fldl
scas
or
jmp
addr16
dec
xchg
jmp
int
aas
cmpsl
mov
rolb
mov
mov
inc
or
and
jno
push
icebp
sub
pusha
mov
jae
cltd
dec
add
pop
or
test
adc
adc
das
stos
jecxz
mov
test
std
xchg
add
or
mov
adc
xor
je
mov
push
mov
je
pusha
rolb
push
mov
pushf
mov
add
ds
push
and
mov
and
scas
lock
add
xchg
sub
and
ret
or
cwtl
rcrb
jnp
push
sbb
mov
add
nop
gs
je
push
cltd
test
fs
xchg
inc
insb
insb
push
push
dec
popf
mov
or
in
sub
cmp
pop
idivl
loope
inc
movsb
pusha
mov
je
cmp
je
negb
mov
jne
mov
das
mov
mov
and
iret
je
inc
call
lea
clc
lret
lock
push
sub
inc
dec
add
lds
xchg
jmp
lea
loope
mov
inc
leave
add
pavgb
jne
lock
mov
lock
cmpsl
pop
cmp
lock
cmpsl
sbb
xor
jns
push
adc
movsb
repz
adc
sbb
aaa
movsb
add
jne
out
adc
mov
jbe
cld
cmp
jno
add
add
push
mov
das
cmpsb
mov
stos
lea
rorb
ret
pop
cs
pop
loope
cltd
push
aad
inc
xchg
lock
shll
pop
leave
inc
push
je
and
mov
add
sbb
sbbl
fwait
pop
or
inc
test
xor
roll
mov
test
ljmp
push
arpl
sub
test
out
inc
adc
mov
je
or
dec
inc
sahf
mov
inc
stos
mov
jns
insb
shrb
jge
jne
dec
jmp
push
pop
xchg
sbb
xor
ljmp
adc
outsl
xor
addr16
push
aas
popf
testb
xor
adc
call
xchg
fidivl
xchg
mov
cwtl
aam
push
mov
mov
inc
movsb
out
add
sub
pusha
loopne
je
sbb
xor
xchg
sti
jns
js
push
and
dec
push
lea
push
pop
cwtl
push
adc
push
mov
lea
fists
dec
push
lret
push
or
add
icebp
sbb
lods
mov
test
or
dec
xchg
or
and
xor
lock
rcrb
pusha
inc
test
in
mov
lea
mov
fs
mov
mov
jo
or
and
pop
inc
inc
jmp
cli
pusha
pop
mov
sbb
ret
ficoms
dec
push
adc
ja
pop
filds
fmul
inc
std
mov
mov
add
push
pop
cmp
add
push
int3
je
push
mov
push
xchg
jbe
scas
xor
sbb
pop
loopne
or
or
xchg
ja
cli
inc
pop
adc
mov
negl
jge
sbb
jg
adc
test
push
cmpb
test
inc
mov
sbb
ret
pusha
pop
rcrl
aas
inc
jmp
sbb
mov
adc
or
and
pop
xor
or
xor
popa
ret
loope
push
pop
into
jecxz
nop
nop
mov
lock
inc
fs
adc
loopne
cmp
xor
xchg
push
xchg
lret
pop
stos
lock
inc
verr
adc
jo
add
std
sub
cmp
inc
push
inc
pop
sbb
rolb
ret
push
cmp
pushf
fsubr
fs
add
es
pop
adc
wrmsr
add
out
mov
and
add
mov
repz
lret
pop
sbbb
push
ljmp
icebp
jno
add
xor
pop
mov
xor
sbb
out
je
aaa
lea
rorb
loopne
mov
cmp
es
out
jo
push
pop
pop
push
js
or
mov
cmpsb
xchg
sahf
cmp
push
xchg
popa
cwtl
bound
inc
pop
lock
cmc
mov
aam
lahf
orl
jecxz
das
inc
cmp
dec
mov
out
ljmp
add
ret
pop
cmp
inc
jge
imul
inc
jne
test
inc
popf
daa
jae
in
imul
mov
je
or
inc
popf
or
adc
dec
incl
push
pop
lea
push
push
rclb
dec
push
pop
icebp
mov
jle
sub
ret
push
push
dec
mov
sub
clc
xchg
in
push
mov
test
subl
sbbl
xchg
adc
inc
sub
push
in
imul
add
add
mov
dec
lock
les
std
and
xor
js
inc
scas
orb
add
pushf
xchg
jmp
rol
pop
adcl
xor
lcall
lock
xor
call
movsb
adc
roll
das
xorb
or
push
push
les
xchg
jae
xchg
adc
lcall
call
dec
pop
loope
push
es
xor
pop
cmp
rdmsr
rcl
xor
fstpt
fisttpll
mov
xchg
out
mov
addl
inc
adc
jo
movups
push
mov
insb
out
mov
jnp
pop
mov
test
hlt
xchg
icebp
xor
pop
mov
push
lea
push
test
and
dec
xchg
mov
jo
mov
mov
rolb
push
push
pusha
mov
lret
int
cmp
fbld
bound
ret
jno
inc
sub
and
std
data16
add
ficompl
rclb
xor
or
cmp
inc
lods
fs
je
xor
or
imul
cmp
cmpl
push
add
lret
push
xor
or
test
sbbb
pop
jnp
addl
adcl
ss
sahf
sbbl
xchg
dec
jb
andl
mov
loopne
mov
mov
jo
fidivl
dec
or
push
mov
mov
lock
mov
loop
lea
in
out
in
adc
adc
xchg
mov
rcr
xchg
cmpsb
lods
pop
mov
adc
ret
pop
pop
pop
pop
ret
sti
jge
inc
idivb
mov
test
and
adc
mov
mov
jl
andl
test
pop
sbb
mov
push
pop
cltd
add
or
adc
pop
mov
fsts
fistpll
or
imul
test
movsb
mov
rcll
or
xor
or
cmpsl
shr
je
xor
loop
lret
cltd
xor
aad
xor
push
mov
iret
test
adc
into
pop
bnd
dec
mov
sbb
mov
or
sbb
adc
mov
adc
push
in
jecxz
cmp
jmp
add
rorb
dec
adc
fdiv
inc
adc
push
inc
aam
cmp
adc
inc
push
add
movsb
sahf
xchg
fmul
rolb
sbb
pusha
cmp
addl
pop
movsb
push
xchg
xchg
pop
fbstp
testb
push
orl
out
mov
cs
adc
or
mov
in
fisubrs
inc
or
lods
inc
cmp
cmp
cmp
mov
imul
pop
testb
clc
fdivs
je
mov
daa
rcrl
and
xor
push
sbb
or
fdivrs
jp
dec
mov
inc
dec
mov
mov
data16
loopne
inc
std
ss
mov
mov
fsubs
push
fbld
int
mov
sbb
sub
shlb
push
nop
fildl
xchg
dec
orb
xchg
mov
leave
and
cmp
inc
mov
rcr
mov
shll
add
sub
or
call
mov
jp
xchg
aas
push
push
test
popf
pop
xor
je
xor
frstor
fistpll
add
loop
sbb
lods
cmp
jne
mov
adc
or
ljmp
or
cmp
push
or
xchg
push
or
mov
mov
ret
adc
and
jmp
and
inc
or
xor
or
into
lods
ret
xorb
pushf
data16
cmpsl
jns
jnp
sahf
push
aam
mov
rcrl
jmp
pop
jo
adc
sbb
or
mov
call
mov
or
call
adc
pop
mov
mov
push
subb
jmp
repnz
test
nop
push
out
fmull
push
lea
mov
dec
mov
cltd
negl
jp
pop
mov
fisubrl
mov
jbe
aaa
adc
or
in
jmp
push
ret
add
addb
pop
mov
xchg
add
or
in
adc
mov
or
pop
xor
add
and
jecxz
pop
mov
xchg
pop
cwtl
stos
sub
test
and
sub
sub
pusha
cmc
pop
pop
xchg
jno
xor
gs
fmulp
mov
adc
and
test
inc
cmpsb
daa
add
les
add
or
shlb
pop
pop
mov
cwtl
push
adc
xchg
aaa
push
loope
xor
shlb
mov
sti
ret
xchg
fsts
loope
add
or
aaa
aam
mov
aam
incl
sub
mov
push
mov
lock
ljmp
inc
je
es
popf
sbbb
fcompl
xor
cmp
jnp
jo
inc
sub
sbb
sbb
mov
in
mov
or
jae
adc
jecxz
push
fiadds
add
add
add
push
sub
orl
jge
dec
bound
andl
mov
dec
fiaddl
cmp
idivl
jp
test
les
mov
test
jmp
xchg
xor
pop
fisubl
cmp
adc
add
cld
and
testl
dec
add
mov
xchg
mov
mov
insb
mov
or
and
xor
sarb
shlb
add
ret
cmp
inc
add
dec
jp
pop
and
aas
lcall
jge
xor
stos
cmp
jae
addl
pop
testb
mov
rorb
cwtl
in
jge
movl
aas
faddl
shr
inc
add
add
push
into
dec
adc
or
sbb
push
or
xor
sbb
stos
pusha
insb
std
mov
sbb
mov
lret
dec
int
test
ret
out
add
inc
ljmp
push
aas
xor
jge
cld
push
cmp
xor
outsb
mov
adc
mov
xchg
idiv
je
push
add
pop
adc
push
scas
test
inc
hlt
sarb
xchg
jne
pop
jns
loopne
and
pusha
movsl
leave
mov
lods
andl
not
je
push
in
negl
jle
push
push
insl
adc
add
xchg
xchg
lock
xchg
xor
addb
or
rorb
push
sub
xor
mov
and
or
push
lea
adc
push
outsb
fucomi
subb
je
add
movsl
testl
mov
mov
cmpb
and
fsubrp
ud0
mov
inc
daa
ss
add
add
inc
jne
mov
cmp
je
add
add
xor
dec
sub
add
or
test
adc
movsb
lea
push
nop
add
and
xor
inc
push
sbbb
jne
sub
mov
jnp
mov
ret
cld
xor
add
jbe
mov
sbb
dec
ss
subb
incl
jmp
push
xchg
pusha
orl
jo
dec
in
push
sbbb
pop
mov
inc
jo
add
inc
addr16
cs
fldl
push
mov
scas
or
or
dec
mov
xchg
lret
push
sbb
call
out
cld
test
cmpb
mov
inc
imul
sbb
mov
insl
push
scas
xchg
and
into
cs
andb
lock
mov
cmp
lea
sbb
mov
ljmp
cmp
xchg
sub
sbb
push
jbe
aad
adc
pusha
pop
shll
mov
popf
pop
sub
xor
fs
mov
bound
add
and
or
adc
mov
mov
xor
pop
dec
testb
mov
mov
jecxz
mov
data16
sub
pop
sub
dec
dec
adc
mov
lret
cltd
push
nop
je
testl
cmp
xchg
inc
and
in
sbb
call
inc
mov
pop
or
or
jbe
ds
cmpb
loope
or
or
gs
sbb
xchg
jns
lods
or
jmp
or
jmp
sub
adc
lret
sub
mov
sbb
nop
push
inc
mov
add
fnstcw
xorl
mov
push
add
jle
xchg
fldl
js
mov
fisttps
mov
push
and
mov
xor
push
mov
lret
adcl
movsb
inc
mov
mov
cmpsb
add
les
jbe
xchg
repz
mov
addb
or
jae
push
push
fsubrl
imul
sbb
sbbl
cltd
in
lods
jmp
pop
pop
push
push
aam
loopne
push
or
add
es
xor
nop
xchg
mov
ja
xchg
sub
mov
dec
add
sbb
or
test
push
gs
inc
pop
cmp
into
testl
repz
or
push
jae
cmpl
mov
push
rolb
adc
rorl
xor
mov
dec
pop
lods
push
insb
lahf
lret
jp
mov
mov
in
jge
add
sbb
push
ror
in
rcl
mov
sti
sub
jo
inc
cmp
mov
out
pop
les
push
cmp
sub
inc
insb
xor
fldt
pop
in
mov
jns,pt
dec
pop
or
push
cs
jae
xor
xchg
mov
pop
xor
fsts
or
and
dec
rcrb
push
push
mov
dec
es
in
inc
dec
pop
add
mov
fcmovne
shl
add
ret
testb
lcall
or
jbe
xchg
call
xchg
jne
fs
mov
push
ret
outsl
jl
xchg
movsl
adcb
outsb
mov
bound
sub
sub
sub
xchg
pop
mov
adc
dec
mov
decb
or
mov
mov
sbb
lock
lcall
cmp
push
jmp
cmp
xor
adc
adc
push
xor
inc
add
test
faddl
inc
sbb
xchg
popaw
adc
xor
outsb
dec
cmpsb
jbe
loop
or
push
cmp
adc
cli
add
out
mov
or
lods
push
mov
ret
and
hlt
daa
out
inc
inc
mov
sub
adc
je
shlb
movaps
add
jle
fisttpl
adc
add
subb
xchg
test
test
sbb
test
add
add
add
mov
mov
adc
dec
movsb
inc
cmp
test
clc
aaa
call
sub
call
in
movsb
add
js
loopne
push
adc
add
pusha
data16
in
aaa
mov
mov
movl
push
adc
inc
mov
adcb
adc
fiadds
out
mov
dec
pop
sbb
cmp
sbb
lock
dec
sbb
add
int3
sub
push
addr16
and
pop
adc
mov
or
and
test
pop
push
pusha
daa
nop
push
sarl
mov
and
cmpsl
push
fwait
sbb
dec
stos
xchg
rcll
cmp
nop
or
push
cmp
rcr
fisubrl
pop
mov
das
cmp
push
ljmp
inc
push
inc
push
popa
push
rorb
and
xor
adc
rol
sbb
sub
push
int3
les
xor
test
mov
cmp
nop
sub
in
xchg
xchg
xchg
push
jno
and
mov
or
popf
mov
push
lret
daa
jmp
dec
jno
xchg
icebp
cmp
jne
adc
jge
mov
mov
and
and
scas
xchg
add
xor
dec
dec
xchg
mov
jmp
add
fwait
out
les
clc
or
xchg
or
leave
jecxz
pop
and
iret
mov
lea
pop
xchg
dec
notb
ret
ret
pop
movsb
imul
push
mov
pop
fdivrs
repz
sbb
cs
call
mov
push
pushl
std
jns
pop
add
and
jg
pop
add
movsl
push
inc
adc
or
rcl
push
push
cmp
sbb
dec
fsub
add
leave
enter
aam
cmp
fcompl
test
mov
enter
inc
in
adc
aaa
sbb
pusha
push
xlat
fldl
lret
inc
xchg
push
ret
fs
pop
imul
and
shlb
cwtl
out
popa
add
clc
inc
push
sbb
popa
pop
test
jno
mov
mov
cmpsb
hlt
fldenv
jmp
adc
dec
in
mov
jp
xchg
sbb
fldenv
dec
jae
dec
pop
inc
mov
cld
sbb
sbb
mov
test
popa
push
std
mov
sbb
sarb
and
or
movsb
in
jl
movsb
xor
or
jmp
jle
xchg
xor
shll
dec
cmpsl
xchg
push
hlt
inc
xor
lret
out
add
xor
adc
push
xor
pop
lea
push
mov
push
sub
xchg
les
outsb
or
daa
cmpsl
mov
xor
or
rolb
sbb
inc
or
stos
xchg
popf
int
push
lahf
dec
in
sub
dec
push
push
sahf
cmp
or
inc
push
sub
invd
in
cwtl
mov
xlat
sbb
fcoms
push
cmc
mov
shlb
inc
jb
cmp
mov
je
and
dec
repnz
pop
ret
push
ret
stos
pop
seta
movl
imul
or
jo
pop
adc
lock
pop
adc
mov
sub
cmc
mov
and
cli
xor
fiadds
cmp
rcl
aas
mov
into
xchg
add
aam
fsubrs
xchg
xlat
les
sub
out
push
out
add
mov
add
jg
cmp
pop
cmp
xor
jo
sub
pop
dec
ret
pop
in
pop
push
xor
clc
test
push
loopne
xor
incl
xchg
cld
inc
sbb
dec
inc
js,pt
and
movsl
pop
inc
inc
fs
jp
fs
push
aas
mov
xor
push
jmp
pop
in
imul
dec
cli
int
lret
mov
add
into
das
adc
into
adc
cmp
dec
loope
push
xor
dec
push
popa
mov
dec
lahf
jne
ret
insl
sub
push
aam
add
add
push
or
xlat
xor
ja
pop
scas
inc
sub
test
push
jo,pt
jne
into
mov
clc
andb
orb
addb
add
repz
xor
jl
push
mov
call
inc
pop
sbb
add
std
mov
cmpl
inc
fnstsw
incb
or
jb
and
and
mov
lods
shll
push
adc
jg
sti
daa
adc
pusha
push
pop
jne
es
push
stos
add
shl
pop
sbb
and
pop
push
cmpsb
cwtl
push
shlb
fcompl
jge
xchg
movsb
jg
rcrl
pop
punpckhbw
add
ret
jl
loop
and
sub
addr16
cmc
dec
or
negl
outsb
sarb
jbe
cmp
inc
mov
inc
sahf
push
inc
push
add
and
or
inc
imul
jo
mov
and
test
sbb
cmc
add
adc
inc
dec
pop
inc
push
gs
les
jne
mov
or
mov
jnp
enter
sbb
inc
cmp
aam
movb
push
adc
nop
repnz
adc
das
sub
xor
xor
fists
mov
mov
les
les
sbb
xchg
dec
clc
mov
pop
sbb
and
clc
push
cmp
sbb
cmp
es
xchg
xchg
loopne
in
add
xor
faddl
sbb
gs
arpl
jne
sbb
jl
jecxz
add
fimuls
sbb
rorl
int
clc
pop
mov
inc
fs
sbb
pop
jge
test
lods
push
xchg
mov
es
cli
xchg
adc
mov
loopne
arpl
call
cmp
stos
push
in
adcb
call
and
or
sub
sarb
je
cmp
je
ror
hlt
lds
adc
mov
mov
mov
fwait
push
push
fnstcw
sti
and
add
addb
dec
dec
mov
sub
je
or
push
cmp
add
push
push
and
and
jle
mov
sarb
gs
adc
push
ret
es
and
cld
lds
cwtl
movl
lcall
pop
leave
dec
je
xlat
mov
dec
adc
inc
jmp
sub
cmp
aad
xor
faddl
pop
and
jmp
adc
mov
add
dec
push
add
cs
and
nop
cmp
adc
lea
push
mov
add
sbb
popa
in
mov
adc
mov
es
enter
mov
add
dec
or
andb
les
dec
imul
sub
aam
inc
sub
add
push
adc
pushf
mov
out
dec
fisttpl
dec
or
je
adc
fbstp
loopne
lret
add
nop
sbb
and
xor
add
inc
cmpsb
nop
and
sbb
pop
pop
push
loop
es
dec
and
xchg
xchg
or
xor
ljmp
and
push
xor
es
cld
xor
lea
setne
add
test
lods
pushf
mov
mov
xor
mov
sub
movsb
repnz
nop
inc
lahf
xor
pop
mov
test
pop
scas
xchg
and
sub
inc
adc
xor
enter
cmp
sbb
in
jno
ret
sub
add
xchg
or
and
dec
inc
fwait
inc
xchg
and
ds
push
sub
nop
dec
add
out
mov
inc
stos
add
or
dec
xchg
adc
or
outsl
push
in
lock
sbb
inc
mov
mov
inc
rorb
iret
test
stos
lcall
dec
jae
lods
lods
js
push
lods
cmp
out
pop
sahf
add
ret
fwait
and
call
cmpsl
push
xchg
mov
push
add
jns
or
aam
push
sbb
sbbl
adc
and
rcpps
push
movsb
xchg
call
pop
sbb
add
lret
imul
ret
add
ret
jecxz
push
sbb
jo
mov
push
movsl
bound
rcrl
pop
das
enter
or
dec
push
cs
mov
pop
xchg
out
push
mov
cs
jecxz
cmpsl
add
loopne
loop
inc
cmpsl
sub
movsl
or
mov
dec
dec
sub
mov
repnz
or
fnstenv
loopne
mov
inc
xlat
or
jnp
test
stc
lret
in
push
in
scas
xchg
jbe
pop
in
call
out
and
cmp
pop
stos
and
testb
mov
out
cmp
xor
mov
mov
adc
es
pushf
sarl
fdivp
or
push
jno
icebp
adc
and
fmull
icebp
or
daa
push
lcall
dec
fdivr
lock
loopne
push
cmp
pop
mov
cld
and
in
or
lock
sub
mov
in
cmp
inc
retw
mov
mov
add
xor
cwtl
mov
jno
push
or
push
xchg
push
pusha
sub
xchg
sahf
mov
std
int3
or
jne
pop
fsubrl
insb
dec
or
repz
imul
aaa
ss
out
cmpsl
and
lea
sub
add
dec
xlat
mov
rol
push
mov
pushf
jb
push
push
and
add
mov
mov
loop
dec
xchg
mov
nop
add
push
es
cltd
sbb
xlat
add
lret
inc
xor
sbb
js
adc
loopne
jg
ljmp
mov
push
inc
cs
add
loopw
in
adcb
add
push
sub
mov
and
lds
jg
jl
cmp
jae
mov
push
sarl
inc
shl
pop
cmp
mov
call
dec
push
push
adc
orb
imul
or
mov
dec
adc
lret
stos
inc
test
adc
aam
xchg
sti
pop
push
xchg
mov
stos
sub
dec
loop
loopne
jl
sub
mov
outsl
shlb
mov
add
call
sahf
imul
leave
or
lods
jge
stc
jge
and
sbbb
xchg
add
shll
and
les
js
and
and
movsb
inc
lods
xchg
or
push
addl
cmc
pop
cli
and
insl
imull
imul
ds
pushf
clc
fwait
add
pop
xor
mov
pop
jbe
jecxz
push
mov
mov
sbb
xchg
ljmp
sub
faddl
cmp
sub
push
push
cmp
push
test
ljmp
add
adc
or
imul
mov
pop
pop
mov
add
imul
push
xor
adc
or
pop
fstps
subb
xor
cmp
inc
loopne
xchg
add
or
push
mov
or
imulb
mov
jnp
sub
shlb
mov
out
shll
push
leave
push
xor
insl
sub
push
lret
xor
das
sbb
pop
cmp
and
add
pop
fstpt
add
push
xchg
jno
shlb
adc
jge
dec
add
inc
insb
mov
add
dec
dec
das
jns
and
push
push
xchg
daa
inc
mov
push
sub
add
add
inc
mov
xor
pop
xchg
adc
xchg
pop
push
stc
add
test
push
leave
push
push
cmp
inc
lea
add
mov
cmp
push
cmp
mov
push
pop
and
push
fildll
inc
int
xor
inc
faddp
xor
xchg
jbe
mov
or
mov
mov
adc
lea
in
pop
push
inc
loop
pop
arpl
repnz
cmp
adc
and
or
mov
pop
into
or
jmp
dec
xor
sub
sarb
jecxz
adcl
inc
fdivrl
fists
repnz
jnp
push
aaa
cmp
inc
dec
jecxz
push
jnp
push
pop
add
mov
mov
and
xchg
xchg
pop
dec
ljmpw
push
mov
push
mov
push
push
push
dec
add
arpl
testl
inc
adc
mov
dec
in
stos
lret
and
add
adc
test
cmpb
add
loopne
lods
dec
add
cmp
rcll
fdivs
andl
push
inc
push
mov
fisubl
loop
loop
jl
iret
or
test
popa
adc
aaa
mov
lods
pop
mov
movsl
adc
adc
in
and
mov
push
jo
jb
fbstp
lea
dec
jne
jno
lea
mov
lret
xchg
jb
outsl
or
xor
lcall
mov
mov
outsb
rorl
xor
add
cmp
jecxz
movsb
adc
sub
out
add
neg
add
push
movlhps
pop
push
xchg
jnp
sbb
sbb
pop
pop
into
pop
pop
mov
pop
xchg
rcr
cmp
in
imul
inc
imul
push
jp
sub
movsb
sub
adc
jle
mov
cli
pop
orl
stos
pop
jbe
in
push
pop
push
xor
pop
scas
add
pop
dec
push
movsl
roll
dec
imul
push
mov
sub
repnz
sub
fs
movsl
add
inc
and
cli
lea
mov
orl
cmpsb
orb
adc
es
dec
cmpsb
push
pop
negb
mov
cmp
jo
pop
mov
xchg
js
dec
cmpsb
cmpsb
sub
gs
mov
fs
or
jecxz
dec
es
inc
or
popa
and
sbb
subl
ja
mov
inc
mov
adc
xchg
popa
pushl
mov
mov
js
jb
and
inc
imul
inc
std
jne
das
mov
adc
es
push
in
lods
cmp
shlb
fidivs
push
ret
sub
call
addr16
das
jg
sub
jo
jnp
sbb
andps
mov
and
add
cltd
adc
inc
fs
lock
jbe
call
mov
inc
testb
sub
stos
fidivrl
lods
sbb
je
ljmp
or
fimull
clc
roll
dec
sti
add
ljmp
cld
clc
loop
sbb
mov
mov
mov
jmp
insb
lods
inc
xchg
outsb
sub
sbb
jo
and
sbb
orl
pusha
pop
add
sub
testb
inc
cmp
jb
xchg
fcoml
xchg
mov
mov
repz
cmp
or
rolb
push
sbb
sub
cwtl
gs
mov
rorb
mov
dec
mov
and
cmp
push
cld
push
xor
cld
iret
mov
dec
jle
ficomps
testb
imul
gs
sub
mov
shrb
jnp
xchg
rcrl
leave
ss
push
sbb
fistl
bound
dec
pop
mov
inc
xchg
loop
rolb
push
pop
pop
lds
out
sti
jl
test
es
lds
scas
cmp
adc
xchg
addl
mov
and
mov
addl
mov
test
dec
add
jmp
cmp
daa
ljmp
aas
lahf
sbb
out
in
in
mov
shll
push
les
sub
dec
mov
dec
lret
stos
stos
adc
inc
clc
lret
out
mov
cli
pop
sub
movsb
in
in
sub
xor
xor
cmp
inc
lods
inc
rorb
xor
add
test
pop
and
pop
add
add
nop
fcmovnb
add
jge
push
mov
jno
inc
add
iret
push
clc
aas
inc
movsl
sub
ret
cmp
xchg
int3
add
decl
add
and
jno
stos
or
mov
aaa
push
ss
lods
fiadds
pop
dec
inc
mov
xor
or
mulb
std
pop
sbb
adc
rclb
cmp
loopne
sub
jb
idivl
mov
sub
icebp
sub
or
inc
mov
subb
addl
arpl
add
in
cmc
pusha
push
andb
ss
sbb
call
repnz
xor
push
subb
jmp
mov
push
push
mov
jg
adc
push
or
pop
push
into
inc
mov
dec
testl
hlt
cli
xor
cld
ja
cmp
add
iret
add
push
dec
cmp
add
pop
add
mov
adc
iret
rcl
or
push
call
adc
mov
push
mov
cmp
jnp
cmp
or
ss
pop
lea
sti
rep
cmpsl
lea
xor
or
xor
sbb
cmp
jae
add
sub
add
sbb
cmp
movl
jnp
and
jne
test
jl
lods
and
jae
push
push
mov
jae
xlat
push
and
push
mov
mov
push
loopne
adc
push
imul
inc
inc
sub
lret
xor
adc
pop
cmp
daa
push
fcomip
retw
adc
sbb
fsts
pusha
inc
xor
pop
inc
xchg
push
mov
fistpl
cmp
push
adc
adc
add
lahf
pop
xor
sbb
inc
push
cmp
repnz
outsl
add
mov
add
inc
clc
dec
inc
mov
jl
pop
loop
sbb
pop
xchg
hlt
cmp
andb
or
mov
jmp
lods
rorl
push
arpl
and
cld
sub
and
jmp
movsl
add
outsl
repnz
pop
lods
dec
dec
inc
js
mov
and
inc
rcrb
clc
pop
test
add
mov
push
lret
mov
loop
jnp
jp
decb
cld
push
adc
call
lods
dec
aad
jne
out
adc
mov
add
mov
call
hlt
fistps
mov
push
cmp
mov
lods
arpl
adc
jecxz
aad
mov
mov
ljmp
push
mov
push
push
or
push
jge
dec
rclb
jbe
adc
push
mov
adc
int3
sub
arpl
and
add
in
pop
push
sbb
sbb
mov
sbb
push
sbb
mov
dec
xchg
and
sarb
dec
jne
aam
mov
lods
and
push
pusha
push
bound
scas
jmp
jge
movsb
loope
inc
sbb
or
int3
es
call
ljmp
xor
and
je
or
shlb
or
bound
negb
adc
or
or
pusha
jge
xchg
stos
jno
add
sub
cmp
ret
xor
jl
push
bound
and
xor
pop
orb
adc
or
push
mov
fidivrs
jmp
jo
dec
mov
mov
xchg
in
sarl
test
dec
pop
ja
mov
jle
ret
imul
push
dec
inc
sbb
adc
int3
adc
add
jge
rolb
sbb
add
lret
xchg
rcl
jns
dec
std
add
inc
adc
mov
dec
dec
aad
add
shll
add
add
pushf
mull
movsb
lret
insb
loope
push
or
adc
rol
fsubrs
xchg
or
cmp
cmp
mov
adc
add
sbb
cmp
push
insl
cld
shll
or
push
sub
sub
pusha
cmp
clc
jmp
cmp
jbe
or
add
add
inc
ret
add
cmp
ret
ss
add
jecxz
addl
push
aam
jp
repz
mov
add
xchg
adc
or
xchg
aam
add
lea
pop
movsb
pop
inc
pusha
test
mov
or
and
add
lods
ja
lea
mov
fimuls
ja
imul
push
movsl
cwtl
sbb
pop
pop
cmp
imul
jl
pop
in
mov
add
lea
mov
data16
rorl
push
aam
xor
and
push
inc
add
and
enter
stos
rcrb
cmpl
xor
rclb
sub
xchg
push
pop
cmp
add
sub
mov
add
mov
loopne
sub
xchg
je
dec
call
adc
shlb
and
xor
jecxz
test
pusha
jnp
lods
ljmp
arpl
dec
icebp
push
mov
jne
sub
lret
outsb
data16
pop
cmp
pusha
jno
je
push
cmp
jae
cli
adc
pushl
mov
pop
add
xor
lcall
cmp
jae
adc
inc
or
jp
and
cwtl
or
push
shrb
add
xor
or
icebp
jno
inc
decb
test
icebp
add
pop
aam
inc
inc
sub
mov
sbb
sbb
xchg
push
sub
sub
adc
dec
jmp
repz
inc
and
cs
rcrb
test
jmp
xchg
movsb
inc
pop
mov
or
sub
push
enter
scas
xchg
mov
inc
sbb
jmp
insb
and
shlb
push
sbb
or
shl
sub
outsb
xchg
inc
and
cmp
mov
push
add
ja
daa
outsb
pop
in
xchg
mov
fisttpl
arpl
ja
mov
nop
and
jnp
dec
enter
fldt
dec
mov
cmp
or
push
sbb
jmp
cmp
je
jae
and
jb
xchg
daa
pop
seto
add
imul
inc
loop
cld
add
or
xor
adc
add
and
leave
ja
fidivrs
xor
je
pusha
test
jo
jmp
pop
jecxz
cltd
sub
add
add
bound
push
in
cmc
dec
xchg
insb
imul
pusha
pushf
sub
mov
pop
pop
mov
call
and
int
xor
inc
aas
push
nop
inc
xchg
xor
inc
push
nop
inc
dec
and
and
push
nop
inc
push
and
nop
inc
mov
enter
fsubl
or
pop
enter
cmp
and
enter
std
mov
das
jmp
push
cmpb
pop
push
lret
push
std
insb
leave
push
jne
cmp
and
mov
mov
and
and
dec
enter
je
ljmp
cmp
or
out
gs
pusha
push
push
push
mov
mov
das
pop
sbb
sub
sbb
lea
lock
adc
stos
jl
lock
int
mov
fbstp
or
movl
adc
mov
dec
xchg
mov
add
or
mov
and
and
lret
addl
push
fsubl
pop
mov
pop
cs
rcll
pop
pop
pop
inc
mov
jnp
push
mov
cwtl
push
sbb
test
jmp
movsl
xchg
cmp
mov
push
push
and
sbb
push
cmpl
mov
or
fisttpll
sub
mov
nop
dec
pop
mov
adc
and
dec
jl
hlt
es
push
orl
mov
sub
cli
push
mov
mov
stos
push
fidivrl
nop
mov
loop
or
push
pop
popa
cmp
mov
sub
ret
test
stos
fcomps
push
and
mov
inc
test
ror
mov
sub
gs
pushf
dec
ret
ret
jge
lods
cvttps2pi
jns
sbb
push
inc
gs
punpckhbw
data16
pop
pusha
jge
loop
dec
xor
cwtl
mulb
xor
in
mov
test
sarb
pop
xor
popa
movsb
adcb
mov
add
outsb
cmp
jne
and
mov
arpl
sub
je
sub
in
daa
add
and
mov
test
sbb
mov
jmp
sub
je
aam
jmp
mov
xlat
sub
es
or
outsb
or
not
cli
insb
pusha
and
imul
jg
out
add
push
lds
push
mov
jmp
or
or
add
lret
test
frstor
lock
dec
sub
mov
rorb
lock
jmp
ss
push
xchg
js
or
sti
jg
pop
rcrb
addr16
not
test
jle
mov
ret
sbb
cltd
pop
imul
push
enter
dec
xor
aas
sbb
sbb
shr
mov
mov
ds
pop
inc
mov
mov
inc
sbb
inc
out
popf
sub
or
jns
mov
add
mov
mov
or
jae
aaa
dec
fcomi
ss
dec
cmp
jmp
add
and
roll
dec
mov
xchg
inc
mov
push
or
or
inc
mov
fsubrl
insb
push
xchg
or
push
arpl
mov
and
aad
jmp
push
dec
add
and
or
xchg
xor
and
cmp
and
cmpsb
push
cmp
mov
sub
fidivs
fsubrl
shr
sbb
hlt
pop
and
outsl
leave
addl
cmp
incl
and
call
jnp
loope
lock
xchg
je
push
in
pop
rorb
jbe
repz
std
cld
hlt
int3
sub
push
add
lock
and
pushf
pop
notl
and
dec
inc
jns
cmp
pop
cmpsl
cmp
ret
mov
int
mov
push
scas
and
or
add
and
mov
jg
pop
push
push
mov
cmp
jl
cmp
jle
cmp
push
jp
or
pop
push
aad
xchg
pushf
cmp
mov
add
cmp
or
jge
mov
pop
and
cmp
jl
clc
sub
adc
pop
mov
push
mov
int3
add
lock
test
or
mov
cs
add
repz
mov
test
xchg
push
xorl
lahf
test
push
mov
out
mov
mov
sar
or
enter
inc
mov
shlb
jmp
lock
or
in
add
popf
mov
pop
ss
xchg
pushl
vminpd
rolb
pusha
add
cmpsb
inc
mov
insl
or
sbb
xchg
xchg
inc
inc
dec
ret
push
in
and
es
and
aam
nop
mov
je
cmp
rol
push
pop
lret
lods
loopne
jl
dec
inc
test
push
mov
jns
sbb
in
or
loopne
mov
add
in
clc
or
hlt
dec
gs
mov
or
mov
inc
mov
add
pop
test
xor
out
pop
cmp
gs
test
add
xchg
les
cs
or
sbb
mov
pop
xor
mov
dec
or
aaa
dec
xor
mov
lea
popf
mov
push
jmp
sbb
cmp
sbb
xor
pop
adc
and
cltd
pusha
mov
inc
cmp
test
out
scas
or
or
pushf
and
inc
negl
sub
or
or
sbb
mov
and
cld
pop
or
repz
push
pushw
pop
pop
pusha
lahf
pop
or
or
or
add
xchg
sarb
cmp
mov
ret
scas
mov
es
inc
inc
jge
ret
jbe
mov
cmp
jmp
mov
pop
dec
pop
cli
jl
pop
add
sbb
andb
cwtl
rolb
insb
adc
sbb
jne
jo
inc
gs
and
add
aas
pop
rcll
mov
pop
inc
push
dec
dec
and
mov
push
add
push
dec
ja
leave
push
and
lods
xchg
inc
pop
add
pop
gs
mov
dec
adc
movsb
std
mov
pop
or
nop
pop
rclb
ret
sbbb
sarb
sub
jle
and
cltd
inc
scas
fs
jno
sahf
add
xor
jmp
inc
adc
test
xorl
push
xor
imul
shlb
ud0
jle
pmulhuw
cmp
cmp
and
and
add
and
add
fwait
adc
pop
xlat
insl
stc
cmpsb
push
inc
jmp
inc
jl
fucomi
mov
gs
xor
mov
mov
test
dec
popa
and
cltd
jo
out
inc
lds
in
imul
nop
adc
stos
das
mov
or
les
sub
inc
mov
adc
or
aaa
adc
or
les
cmc
add
insl
or
xchg
add
call
mov
or
push
ret
xchg
fcoml
shrb
and
scas
pop
hlt
in
mov
jno
mov
loope
fildl
mov
mov
clc
and
daa
je
pop
nop
lcall
jg
or
adcl
mov
mov
push
xchg
mov
clc
mov
ret
adc
cwtl
add
xor
or
and
cs
push
jle
dec
add
and
jecxz
loope
out
in
adcb
jmp
xchg
insl
inc
shll
jne
push
repnz
jmp
and
cmp
cmp
add
adc
adcb
rolb
in
push
push
add
push
insb
addr16
dec
add
fdivrs
and
mov
add
daa
aas
sub
lds
push
movsl
push
call
jno
xor
cmpsb
rcll
mov
pop
ja
out
adc
push
inc
inc
jnp
stos
and
aad
xorb
mov
icebp
push
inc
nop
mov
test
push
pusha
or
fdivrs
xor
mov
cmc
push
das
gs
mov
sub
jle
movsb
scas
add
push
mov
mov
repz
loopne
lea
rcl
sbb
jne
or
inc
push
sbbb
sub
push
sbb
xchg
sbb
push
push
add
rcll
mov
or
push
sarb
add
hlt
jg
add
mov
mov
in
sbb
jl
fmuls
jmp
lcall
orps
adc
lock
movsl
loop
xor
pop
mov
sbb
jecxz
stc
sub
ficoml
xor
cmpsl
lods
ret
ret
add
adc
pop
jne
push
push
xor
test
or
pop
stc
iret
and
shrl
or
in
add
mov
inc
adc
repnz
mov
add
call
pop
dec
popa
call
jbe
loopne
mov
pop
data16
aaa
jne
mov
inc
push
imull
pushf
xchg
push
sub
add
pop
mov
inc
inc
mov
daa
add
adc
or
mov
add
repz
test
nop
mov
lea
fsubrs
cltd
insl
pushf
jmp
xor
out
mov
dec
mov
pop
push
scas
sbb
push
andb
call
jmp
or
out
push
lea
nop
sbb
adc
and
add
push
xchg
mov
jo
push
adc
test
out
jmp
in
nop
sub
jle
movsb
loop
add
sbb
jae
jae
sahf
push
adc
push
sahf
lret
push
inc
sbb
movsl
ja
or
cmp
sbb
clc
xor
sub
or
and
add
incl
sub
es
fisubs
movl
testl
sbbl
int
or
call
mov
mov
mov
stos
push
pop
je
fldl
pop
push
fnstsw
xorb
and
in
adc
fbstp
sub
aaa
adc
adc
jne
push
out
jns
divb
or
jne
or
jne
or
cmc
dec
jg
and
out
lret
andl
mov
dec
cmp
prefetch
dec
scas
mov
pop
and
mov
or
shll
mov
jmp
les
mov
aam
arpl
test
lea
fstl
jecxz
push
int
movsb
fsubs
or
mov
popa
ret
sbb
xlat
pop
inc
es
rcr
xchg
adc
jb
lahf
jg
cmp
xor
push
push
imul
adcb
push
sbb
push
cmc
xchg
xor
call
pusha
test
add
pop
mov
pop
pop
mov
test
jge
pop
or
pmaxub
cmpsl
rorb
fcmovbe
lcall
jp
and
xor
adc
ret
mov
js
cmp
adc
adc
or
sub
mov
or
jae
nop
jo
bnd
jmp
imul
je
sub
dec
sub
push
jbe
shll
ficoms
adcb
je
xor
nop
pop
push
js
lock
inc
popa
inc
adc
push
cmp
push
xor
jmp
pop
push
push
add
push
sub
enter
mov
sbb
cwtl
push
push
sub
mov
repnz
add
or
bound
mov
add
and
sbb
bnd
out
fwait
xor
sub
pop
loopne
mov
add
add
adc
je
jmp
repz
or
sahf
pop
sub
ja
push
clc
jmp
adc
mov
lods
adc
int3
test
jno
jo
or
jno
adc
add
lods
and
arpl
imul
push
or
jno
sbb
ss
es
pop
ds
fs
add
xor
pop
stos
xor
fldl
add
repnz
iret
fmull
int3
sub
or
fmuls
push
or
sbb
jo
rcrb
adc
ss
iret
paddusw
imul
xor
and
mov
repnz
dec
adc
aam
pop
adc
adc
dec
dec
rclb
mov
add
lea
xchg
jg
addl
cld
push
daa
cmp
and
sbb
inc
xor
or
repnz
push
rorb
or
cld
les
push
mov
pop
push
loop
fcmovnb
pop
mov
cli
or
mov
push
int
lcall
and
aam
pop
push
insl
popa
xor
and
dec
add
mov
sti
and
or
inc
inc
adc
and
add
add
xor
or
call
pop
mov
ffreep
mov
cmp
jl
je
mov
add
shrb
les
lcall
pop
add
xchg
sidtl
add
pandn
test
aad
and
lahf
adc
pusha
lret
dec
push
sub
int
add
add
adc
mov
movsb
pop
mov
in
inc
in
pop
orl
mov
add
rclb
adc
or
mov
cmp
xchg
subb
in
pop
mul
mov
mov
mov
cmp
adcl
lods
xor
imul
rcll
ljmp
xchg
call
or
add
mov
xchg
fmuls
outsb
pop
rcr
icebp
cltd
jmp
out
out
loope
fdivs
sub
mov
and
imul
sub
hlt
ss
mov
aaa
imul
clc
xor
cld
repnz
add
push
aad
jge
shr
aam
mov
and
dec
enter
push
scas
xchg
mov
push
pop
jle
and
pop
mov
mov
lahf
clc
adc
inc
cwtl
int3
cmp
or
sub
or
lock
pop
das
or
adc
add
je
fdivrl
and
sub
push
dec
lret
jnp
push
lock
orb
dec
inc
stos
rolb
movsl
push
aas
add
ja
push
insl
repz
mov
enter
adc
dec
cltd
insl
mov
adc
ret
pop
ficompl
push
xor
jae
cvtdq2ps
or
hlt
ljmp
push
push
dec
xchg
pop
inc
inc
daa
adcl
cmc
dec
test
mov
xor
ret
push
cmp
lea
lea
push
pop
xor
or
xor
dec
aad
add
xor
cmpsb
aad
fwait
dec
mov
pop
bound
sbb
dec
push
inc
outsb
and
in
ret
xor
sub
test
pushf
rcrl
into
imul
in
dec
in
out
insl
aad
orl
mov
sbb
mov
jb
or
test
push
mov
pop
lea
push
xchg
icebp
or
mov
xchg
mov
cmp
stc
xor
adc
push
or
dec
in
shll
shll
sbb
mov
mov
mov
pop
movsl
inc
pop
imul
imul
popf
xchg
jecxz
shrb
outsl
xchg
inc
insb
adc
or
sbb
dec
test
sub
jg
push
mov
movsl
jno
sbb
adc
sbb
les
and
sub
stos
xor
movsl
jmp
scas
adc
push
inc
stos
lods
mov
das
xor
add
xchg
adc
add
cmp
inc
inc
mov
enter
orl
insl
popf
cmp
fs
addl
loopne
or
inc
cmp
ljmp
lock
daa
and
sub
les
xorl
sub
cmp
stos
mov
loope
mov
cmp
inc
repnz
adc
lea
ja
negb
or
and
dec
iret
gs
xchg
sbb
lret
push
jle
sbb
negb
jne
cmp
mov
adc
rclb
ljmp
sbb
push
pop
flds
nop
dec
mov
and
and
pop
push
stos
xchg
jl
insb
mov
test
adc
bound
add
ret
decl
mov
shl
clc
test
sti
pushl
jns
mov
cmpsl
out
push
mov
add
sbb
and
pusha
sbb
pop
mov
addr16
repz
fstpl
xor
mov
rorb
jecxz
movsl
sbb
shll
and
and
lock
fists
dec
add
ret
dec
dec
jp
sbb
jne
outsb
sub
mov
adc
mov
push
mov
and
xor
lea
jmp
scas
inc
and
ret
lea
lcall
lods
adc
fadds
stos
xor
test
inc
subl
and
add
int3
push
popa
ret
or
pop
ret
jo
adcb
push
mov
js
push
icebp
call
adc
insl
stos
popa
and
lcall
imul
lods
pop
add
inc
les
add
aam
mov
dec
stos
shrb
xor
das
xlat
ljmp
lret
jne
inc
fcompl
xor
and
mov
or
sub
sbb
lcall
stos
xor
cld
adc
and
sbb
adc
cmp
adc
icebp
add
rcrb
dec
insb
push
mov
mov
ret
lods
push
scas
and
or
sbb
std
imul
fldcw
push
adcb
add
rcr
add
pop
add
ret
data16
inc
aam
in
rolb
jle
lahf
sbb
fsubrl
orb
xor
jge
pop
aas
inc
out
push
jle
leave
pop
lea
and
cmp
ds
jmp
mov
sbb
sub
popa
pusha
imul
pushl
inc
les
add
jo
xor
inc
les
leave
add
mov
leave
adc
and
loop
aad
push
or
rol
and
push
test
iret
push
test
sub
repnz
pusha
jp
add
inc
push
or
mov
or
les
sbb
inc
mov
dec
nop
push
cmp
imul
push
pushf
pop
and
and
pusha
lods
mov
add
or
xchg
dec
mov
or
or
enter
and
fldcw
xchg
xchg
sbb
sub
movsb
insl
jne
jp
xlat
xorb
push
adc
scas
dec
pop
xchg
and
and
sub
inc
dec
es
and
push
and
jnp
sub
loop
or
imul
je
push
xchg
movsl
ficoml
pop
xchg
sbb
cmpsl
adc
inc
sbb
and
jo
lret
sbb
cmc
sbb
daa
sahf
pop
or
xchg
sarb
mov
sub
push
add
push
outsb
push
pop
gs
cmp
rcrb
stc
leave
rcll
jl
js
mov
cmp
addr16
and
push
gs
cwtl
popa
adc
cmc
insl
xchg
out
and
and
arpl
xchg
and
lcall
adc
inc
push
loop
mov
repnz
sub
and
dec
and
cmp
daa
daa
push
adc
mov
push
cltd
inc
adc
pop
scas
pusha
sub
cli
int3
aad
or
push
sarl
sbb
mov
push
mov
insb
imul
das
push
xor
push
lcall
inc
sub
scas
xchg
and
or
popa
lock
jb
adc
js
dec
es
sbb
jo
pop
lret
sbb
or
mov
lods
shrl
jne
pop
dec
mov
inc
outsb
sub
jb
adc
sbb
popf
push
and
sub
inc
insl
add
out
and
push
dec
jp
xor
cld
jnp
fsubl
loopne
jmp
jl
pop
cmp
mov
loope
push
or
add
inc
inc
addr16
clc
adc
xor
shll
rolb
fldcw
mov
cmp
xor
sub
subl
insb
ret
inc
mov
push
xor
inc
sbb
dec
sbb
rorb
hlt
add
add
or
jmp
cmp
and
lcall
xlat
popa
in
enter
int3
jne
test
pop
shrb
sbb
inc
stc
test
mov
push
inc
and
add
sbb
push
aaa
and
sarb
xchg
fldenv
and
add
lock
out
adc
sahf
nop
jo
adc
inc
jmp
outsb
add
adc
cmp
add
test
sub
mov
outsl
loope
hlt
into
pop
push
push
sub
jbe
mov
mov
mov
or
in
js
xor
add
ja
push
pop
mov
add
dec
lret
aam
cmpsb
inc
lock
jecxz
xchg
inc
xor
xchg
out
call
push
add
in
sub
es
mov
rclb
push
inc
test
cld
sub
pop
or
fcmovbe
jb
mov
add
or
xor
jmp
ret
dec
xor
mov
test
shll
and
dec
lret
shlb
and
nop
inc
hlt
jmp
mov
bound
pop
adc
int
sub
sbb
mov
jnp
cmp
inc
xor
mov
clc
mov
jmp
add
rclb
pop
pop
rolb
ret
pop
cmp
out
rolb
and
es
cmp
je
pop
pop
push
ret
cmp
shll
add
movsl
xchg
outsb
int3
push
ljmp
xchg
push
les
stc
fisttpll
jne
jbe
std
jmp
fnstsw
add
or
fnstsw
test
je
and
rcll
pop
add
xor
aam
push
adc
fldl
xchg
mov
pop
sub
sbb
sbb
fstpl
and
insl
clc
push
je
push
adc
ja
fldz
out
imul
addl
add
in
and
sub
loope
fsubrp
add
lcall
mov
clc
pop
cmp
jno
add
icebp
sub
and
xor
push
shrb
test
lcall
out
subl
aaa
add
rcll
push
adc
xchg
mov
mov
inc
sbb
xchg
out
cs
ss
xor
push
sahf
pop
sub
push
push
push
sbb
xor
fistl
jmp
push
js
push
sahf
jl
push
xorb
pop
dec
push
fisubs
and
int3
mov
in
xchg
imull
adc
fcoml
les
push
mov
das
sbb
fmull
xchg
jo
in
jp
inc
aas
stc
cld
pop
mov
sbb
add
es
stc
repnz
add
adc
negl
and
stc
and
push
sahf
pop
jmp
sbb
insb
and
ds
inc
adc
pushf
adc
and
and
lret
or
repnz
out
jb
lret
sub
hlt
xor
and
dec
sti
add
pop
and
cmp
stc
and
push
sahf
ds
in
wrmsr
pusha
xor
sub
ss
inc
pop
push
jecxz
mov
pop
je
xorb
inc
fidivs
jo
lods
xor
leave
push
push
pop
add
shlb
enter
test
in
push
push
and
stc
dec
mov
lret
jbe
and
dec
orb
les
jns
leave
cmovb
dec
push
mov
xchg
xorb
daa
dec
nop
xor
xor
mov
fs
cmp
jns
les
or
in
add
call
clc
xor
adcl
sbb
lret
adc
adc
mov
ss
pop
daa
jns
mov
andb
pop
popf
in
xchg
sub
pop
cmp
push
cwtl
xor
pushf
lods
ss
movsl
orb
repz
es
lea
dec
adc
pop
push
outsl
iret
repz
adcb
out
cmp
testl
sahf
out
bound
xchg
cmpsb
out
sahf
out
enter
iret
repz
or
sbb
cmp
repz
adcl
fsubr
cli
or
sbb
sub
mov
push
jno
or
out
or
and
sub
mov
ljmp
mov
pop
push
add
mov
pop
out
pop
ss
pop
add
popf
pusha
push
add
sbb
pusha
ss
push
mov
jo
mov
sub
adc
aam
add
test
ljmp
add
mov
adc
push
sarl
call
flds
mov
popa
test
adc
mov
mov
fndisi(8087
enter
fs
sbb
mov
jb
hlt
push
and
sahf
fs
add
movsb
ret
mov
or
stos
aaa
out
enter
push
adcl
insb
add
push
das
cmp
add
pop
adc
and
adc
inc
icebp
adc
add
stc
or
arpl
sbb
call
push
sbb
add
push
xchg
orb
call
push
xchg
inc
mov
ror
dec
push
roll
xchg
sub
call
inc
nop
cmpsl
or
cmp
sbb
enter
mov
dec
je
sbb
mov
xchg
inc
loop
lock
outsl
inc
mov
push
mov
pop
ljmp
daa
jnp
jp
cltd
add
sbb
or
out
loopne
pop
orb
jbe
call
call
out
add
call
sub
or
addl
hlt
adcb
pop
push
inc
pop
loope
push
adcl
jle
xor
add
mov
sbb
movsl
lock
add
push
rorb
add
mov
outsl
mov
adc
push
sbb
test
stos
insl
mov
push
lods
in
jmp
clc
clc
das
push
in
add
roll
mov
mov
fs
or
pop
add
nop
cmp
add
inc
xchg
lahf
pop
or
adc
add
push
push
enter
inc
push
push
and
cmc
dec
cmpl
adc
sbb
lock
add
and
ficompl
sub
call
in
call
xor
mov
loope
add
adc
jmp
push
push
mov
mov
inc
or
add
xor
adc
sbb
out
add
les
adc
adc
test
stos
cmpsl
mov
lret
stos
cs
mov
lock
xor
push
lds
xor
sbb
mov
mov
push
mov
mov
test
add
adc
adc
cmpsl
inc
repnz
test
arpl
les
add
jns
jno
inc
add
add
or
leave
adcb
fsubrl
into
pop
mov
mov
inc
or
je
cmp
mov
fwait
sbb
dec
mov
or
add
or
loopne
mov
xchg
sbb
add
test
xor
mov
cltd
sbb
lods
mov
or
adc
lods
cmp
sbb
bound
rolb
stos
mov
lods
call
clc
lcall
test
cli
mov
loopne
lcall
stc
pop
scas
xchg
mov
and
dec
and
mov
xchg
add
pop
aam
adc
sbb
cmp
lods
pop
pop
mov
nop
adc
mov
sub
mov
mov
cli
orb
aam
leave
or
mov
dec
add
jg
pusha
and
adc
or
xchg
pop
pop
lods
mov
and
add
mov
sti
add
inc
pop
mov
adc
add
lcall
xchg
add
sbb
pop
nop
orl
and
and
sbb
pop
mov
mov
adc
lea
mov
adc
xchg
popl
and
js
test
mov
ret
adc
push
push
ret
movsb
sub
add
push
adc
in
test
sbb
adc
pop
pusha
push
aad
and
mov
jg
ret
lds
mov
sub
jae
rclb
pop
daa
dec
jp
jne
inc
mov
mov
pop
add
sub
adc
adcb
and
pop
add
xchg
sub
inc
ret
out
shll
add
add
inc
sbb
shll
arpl
jmp
sub
sub
or
jnp
pusha
mov
cmp
adc
add
roll
test
pop
cmp
jne
pop
addl
dec
cmpsl
xlat
or
mov
popf
fidivrl
add
test
pop
test
mov
fisubrl
dec
mov
nop
iret
daa
inc
adc
aaa
arpl
lods
test
sbb
sbb
mov
dec
and
shr
xor
sub
out
or
lahf
and
mov
cltd
or
orb
test
shll
sub
mov
inc
xchg
adc
sbb
sbb
jg,pn
cmp
push
push
push
loopne
add
sub
out
je
data16
inc
adc
add
sbb
lods
lock
rcl
pop
sub
dec
shrb
mov
pop
int
add
xchg
xor
scas
repz
jl
cmp
jp
mov
addr16
int
es
or
add
andb
pop
mov
adc
arpl
add
dec
mov
add
nop
mov
cmp
loopne
or
and
jp
add
jo
pop
dec
iret
in
xor
push
adcl
lret
leave
cli
xchg
mov
mov
repnz
fsubs
push
pop
das
sub
andb
xor
mov
adc
push
dec
xchg
ret
push
cmp
pop
stos
add
xor
jp
add
test
gs
pop
xor
xor
in
loopne
dec
lret
xchg
inc
fwait
inc
pusha
push
test
nop/reserved
pop
aaa
push
push
js
jno
imul
aaa
add
mov
pop
and
lea
xor
das
jmp
fimuls
cs
cltd
cli
inc
jb
sub
stc
mov
in
loopne
and
rolb
cmp
dec
xlat
jmp
enter
loopne
fistpl
dec
shrb
or
sbb
sub
and
aad
inc
stos
fwait
add
xor
pop
dec
stos
lods
sbb
lcall
jle
fdivr
dec
loope
inc
add
push
inc
pop
inc
pop
pop
mov
pop
or
scas
loopne
xor
movsb
aad
push
xchg
leave
movsl
cltd
jle
sub
adc
and
push
dec
or
jle
add
sar
mov
cmp
mov
jl
xor
jmp
sbbb
jl
or
sbb
popa
jp
adc
cld
jg
push
cmp
cmp
je
mov
mov
push
add
inc
jmp
movb
mov
hlt
pop
and
push
pop
cltd
idiv
adc
sbb
pop
mov
in
ljmp
jno
call
mov
fdivrs
xchg
and
push
pop
sub
icebp
and
adc
fiaddl
xor
xchg
jbe
test
test
add
lock
push
push
xlat
iret
fadds
dec
mov
or
push
in
je
in
in
in
hlt
incb
test
and
xlat
add
cld
bound
dec
fsubl
cmp
lock
push
popf
xchg
rolb
mov
inc
lock
js
setge
pop
cmp
mov
sub
stc
in
clc
movsb
bnd
icebp
pop
push
les
cmp
mov
push
dec
sub
pop
push
inc
inc
in
push
sbb
adc
arpl
das
sbb
sbb
pop
xchg
mov
aam
push
rdtsc
enter
xlat
add
mov
sbb
test
in
gs
test
dec
pop
sahf
inc
push
push
and
mov
push
sub
lods
fcoms
icebp
ss
pushf
pop
mov
or
cmpsl
pop
lock
and
in
dec
test
xchg
aam
cmp
out
push
gs
mov
or
shrd
inc
adc
lds
repnz
adc
ljmp
xor
imul
in
fnstsw
push
pop
push
push
sbb
dec
es
cltd
les
stc
sbb
push
shrb
dec
enter
rclb
xchg
push
sbb
out
leave
test
pop
dec
inc
pop
sub
in
nop
push
fsub
fs
mov
jbe
pop
fsubs
fs
aam
and
ficomps
xchg
out
xchg
aam
shlb
and
in
push
or
shll
loop
bound
test
add
out
dec
push
and
add
loopne
negb
gs
fldl
leave
es
sub
aaa
test
das
and
cmpsb
pop
push
dec
sub
popa
enter
add
and
rclb
push
enter
leave
orl
pop
xor
arpl
mov
sbbb
cmp
jo
mov
adc
movsb
pushf
xchg
add
out
dec
dec
cmp
push
test
call
mov
call
xchg
sub
loopne
push
int
and
xor
outsb
in
sub
lret
adc
sub
adc
mov
idivb
pop
jecxz
mov
sub
pop
cmp
mov
jno
sbb
xor
xor
adc
add
sbb
xchg
in
and
jmp
mov
sbb
or
fcompl
push
jecxz
test
inc
movsb
fmull
mov
insb
fildl
adc
jecxz
mov
push
mov
pop
push
mov
add
sbb
add
pop
gs
mov
fwait
xor
add
inc
loop
sub
cwtl
add
mov
enter
sysret
push
add
shl
int3
mov
movsl
sbb
cwtl
cli
gs
sbbl
rorl
leave
aam
push
or
ret
insb
pusha
or
push
add
test
mov
add
gs
aad
aam
mov
sahf
cli
mov
fbld
push
xor
fisubrs
ret
mov
push
pop
insl
push
out
mov
shr
mov
adc
shr
or
cmp
sbb
and
xor
sar
cmp
push
adc
test
xchg
jb
mov
pusha
jmp
std
jbe
jns
add
sbb
add
pop
jmp
mov
sbb
mov
ss
faddp
sahf
inc
in
neg
sub
es
bound
xor
push
sbb
in
mov
and
dec
xor
push
sub
loopne
pop
in
add
add
sbb
ret
popa
jl
and
add
cmp
lods
push
push
ffreep
mov
jo
jmp
inc
and
push
inc
mov
sbb
gs
imul
sub
jg
or
rcrl
test
lret
xchg
dec
ss
mov
sub
mov
mov
es
and
pop
mov
in
sbb
sub
adc
punpckhbw
sbb
es
pop
dec
and
mov
mov
adc
xor
loopne
cli
mov
into
cmp
push
mov
or
jg
sti
jge
hlt
sbb
outsl
cwtl
fsubrl
cmp
ja
dec
push
pop
clc
or
pusha
adc
xchg
into
adc
mov
dec
fsubl
push
mov
pop
mov
pop
mov
std
inc
inc
hlt
xchg
test
adc
daa
movsl
imul
xchg
adc
shlb
jg
cmp
cld
out
xor
push
jo
jbe
rorl
movsb
add
or
stc
movsl
add
sbb
cmp
cmp
loopne
adc
sub
mov
psraw
or
ljmp
xor
loope
jns
cmc
add
xor
push
inc
push
imul
push
mov
scas
xchg
rclb
xlat
lods
in
incl
inc
rolb
dec
js
cmp
je
daa
cmp
sbb
cmp
cli
insb
mov
xor
jmp
jl
or
test
inc
mov
add
adc
mov
fwait
rcl
mov
or
adc
push
stc
imul
in
stos
cmp
or
adc
sub
xlat
fiaddl
sidtl
movsb
dec
shrb
pop
rorb
stc
mov
adc
fsubl
in
into
les
das
add
xor
loop
pop
add
sub
jmp
js
pop
cmp
adc
adc
fdivr
jecxz
js
jns
or
push
mov
subl
push
roll
or
sbb
mov
rorb
cmc
mov
pop
int3
and
xor
and
std
sbb
bound
leave
add
repz
pop
sahf
cmpsl
imul
or
jmp
jae
pushf
imul
sbb
outsb
call
dec
cwtl
sbb
sahf
neg
aaa
push
xchg
sete
inc
cmp
or
sbb
shl
add
adc
in
adc
iret
or
fistps
push
mov
cmp
xor
popa
fdivrs
inc
push
push
or
or
loope
xchg
and
and
sub
jne
ja
pop
push
fisttpl
insl
cmp
int
test
iret
ja
stos
pop
adc
or
lret
insb
cmp
pop
cmp
jb
cmp
dec
cmp
lret
push
cmp
sub
jb
es
sbb
adc
pop
push
jle
cmp
ror
add
sub
outsl
dec
sbb
pop
add
add
movsb
jge
rclb
popl
inc
dec
sahf
adc
jge
or
inc
add
and
in
sub
cld
cmpb
cmp
cmp
sbb
mov
xchg
or
imul
push
jle
roll
mov
jl
mov
movsl
mov
cmp
jne
pusha
mov
xor
and
add
jle
add
pop
xor
pop
push
test
sbb
out
push
or
inc
mov
jle
add
and
mulb
insb
pop
or
mov
adc
mov
push
add
in
stos
adc
or
add
add
jo
jo
push
sbb
mov
in
in
mov
push
jecxz
xor
es
cmp
lds
xor
in
xchg
mov
and
and
call
jae
fwait
push
add
adc
lods
fldenv
push
data16
fwait
pop
in
mov
mov
xchg
and
pop
mov
stos
in
int3
mov
or
sbb
lods
sub
jmp
lock
dec
jecxz
nop
setb
or
stos
adc
dec
sbb
aam
sbb
add
pop
or
mov
add
inc
and
lea
dec
test
mov
imul
mov
sarb
ss
test
jne
xor
push
shlb
mov
and
in
cmp
or
aam
ret
iret
adc
mov
mov
nop
iret
test
push
lret
adc
jae
jnp
and
dec
mov
les
inc
scas
add
inc
add
lahf
imul
lods
subl
cltd
in
std
mov
sbb
aam
xor
push
push
cmp
dec
insb
xor
rorb
adc
push
loopne
jle
lret
gs
xor
sub
mov
mov
adc
je
insl
xor
jne
or
mov
xor
inc
jp
mov
cwtl
add
xchg
jo
xor
add
mov
leave
lods
cmp
pop
xor
mulb
xchg
push
imul
outsl
test
pop
in
push
push
inc
inc
xchg
mov
adc
andb
pop
mov
sub
divl
xchg
popa
rorb
push
and
cs
ljmp
dec
push
add
cmp
adc
aaa
lods
fiadds
adc
cmp
add
adcb
or
xorb
sub
mov
xor
pop
mov
cmp
shlb
movsl
add
mov
or
addl
mov
fdiv
dec
cmp
aam
or
or
mov
jge
test
sub
jne
in
pushw
testb
jae
mov
mov
mov
rcrl
inc
dec
mov
add
jmp
xor
pop
mov
int3
mov
out
ffree
fcmovb
mov
clc
scas
add
add
fdivl
lret
xor
daa
mov
stos
sub
jno
inc
cmp
sub
or
gs
sub
test
and
ret
es
pop
loopne
scas
push
outsb
lds
ret
bswap
ret
mov
mov
cmp
or
push
pop
outsb
mov
push
shrb
adcl
and
sbb
jne
or
mov
sub
rcrb
inc
xchg
push
xor
test
add
add
xor
cltd
add
add
xor
das
or
or
xor
adc
in
rorb
xchg
sub
clc
sbb
loope
sub
loopne
in
cmpl
inc
movsl
nop
add
xchg
push
js
jmp
cmp
jno
movsb
lods
jl
or
pop
js
xor
inc
adc
add
test
sbb
add
das
inc
jo
std
mov
pop
or
xchg
push
sbb
sbb
or
int
ds
and
pop
adc
addb
ret
aaa
sbb
pop
loop
mov
push
aas
ds
je
pop
or
add
test
outsb
mov
push
cmp
xor
mov
inc
imul
lods
enter
into
adcl
cmp
sbb
mov
add
xchg
fimull
inc
add
pop
dec
jbe
cmp
movsb
adc
mov
xchg
add
fldenv
loopne
sbb
gs
cmp
adc
push
pop
lock
cltd
lcall
dec
int
inc
orl
jg
xor
or
loopne
adc
push
imul
scas
je
add
dec
rorb
imul
dec
jmp
sub
or
popf
sar
and
add
jne
pop
sbb
or
xchg
jns
push
enter
les
icebp
out
push
inc
sub
push
mov
movsbl
fwait
cmp
or
cmp
jns
inc
mov
sbb
aad
pop
and
add
iret
mov
and
faddl
sub
sbb
push
or
mov
sahf
inc
mov
inc
dec
test
leave
test
inc
or
mov
arpl
or
adcl
fiaddl
sbb
mov
and
sbb
push
inc
repz
aad
adc
cmp
cmp
jbe
insl
sub
or
xchg
inc
icebp
cmp
pop
push
or
dec
push
jb
mov
hlt
adc
js
bound
push
push
pop
xchg
mov
fmulp
addl
sahf
ja
fs
sub
add
movl
lods
dec
or
aas
jb
xor
pop
test
sub
push
xor
shrl
mov
stos
sub
push
aam
lods
xchg
mov
mov
clc
punpckhbw
or
and
sub
shll
sti
iret
arpl
std
sbb
dec
cmp
mov
inc
test
inc
mov
sbb
inc
dec
mov
or
xlat
cmp
mov
aaa
rcll
push
jb
es
cmp
cmp
dec
or
js
mov
cmp
xchg
pusha
sub
mov
push
adc
xor
adc
movsl
clc
adc
adcl
loopne
dec
xchg
movsb
cwtl
shlb
dec
loop
sbb
jo
ret
addl
xchg
dec
pop
sbb
xchg
lds
dec
xor
mov
sbbl
mov
aaa
jmp
ret
add
xor
adc
insb
mov
inc
push
cmp
outsl
push
jecxz
inc
jle
sarb
and
sbb
and
sub
popa
cmpsb
shll
test
fdivrp
mov
cs
and
or
pop
dec
js
sarb
or
imul
mov
sar
or
fsubs
push
dec
outsb
push
pop
and
and
ror
adc
pop
sub
xor
std
and
or
movsl
outsb
mov
push
stos
sbb
jns
jnp
fmull
clc
push
imul
insb
pop
push
xlat
adc
and
sub
mov
jns
xchg
add
sub
cmc
enter
or
sbb
stos
add
sub
int
inc
ret
aad
and
adc
dec
adcb
arpl
jge
lock
cltd
jbe
in
sub
mov
add
mov
push
ficomps
icebp
sbb
daa
sub
cltd
lcall
pop
fwait
jecxz
movsl
lods
sub
aaa
test
out
jne
mov
pop
xor
adc
xor
or
push
adcb
cmp
adc
sub
enter
dec
push
add
dec
pop
cmp
loopne
and
adc
add
test
les
je
dec
push
push
sub
int
add
leave
nop
addl
or
or
addl
jmp
ljmp
push
pop
jb
jmp
addl
and
insb
xchg
xor
stos
cmc
or
dec
or
pop
in
adcl
mov
and
pop
add
lds
imul
and
dec
adc
out
push
mov
lret
imul
jne
push
mov
jmp
xor
add
test
sbb
push
out
xor
in
movsb
loopne
mov
leave
pop
sbb
xchg
fisubs
cld
cltd
mov
les
das
pop
and
add
sbb
mov
add
or
mov
out
pop
push
and
scas
loop
add
inc
mov
mov
xchg
sbb
fwait
sarl
enter
incl
xor
ja
add
sbb
mov
or
push
fdivrp
insl
dec
clc
test
inc
cmp
pop
cmp
sbb
addr16
dec
andb
pop
push
add
push
or
pop
xor
or
push
or
add
fs
mov
movsl
int
dec
dec
repnz
mov
xor
xor
xor
movsl
test
data16
push
mov
or
cmp
repz
cmpsb
in
mov
stos
insb
adc
add
sub
bound
inc
into
stc
mov
pop
xchg
inc
or
jo
lock
mov
cmp
ja
cmpb
lods
cmp
cmp
sub
mov
mov
mov
insl
inc
in
stos
mov
pusha
out
mov
sbb
push
pop
cmpl
jle
mov
and
dec
lcall
pop
jl
inc
cmp
jb
jmp
in
negl
sbb
xor
jmp
mov
adc
mov
inc
push
ljmp
adc
sti
sbb
adc
fcoml
xor
jb
xor
pop
push
nop
mov
sbb
inc
jmp
sbb
dec
sbb
push
lea
add
xorb
fmull
push
dec
data16
or
das
dec
in
std
and
jae
jp
add
fs
in
mov
orl
and
mov
mov
inc
jno
and
adc
sbb
stc
sbb
js
mov
mov
adc
dec
mov
ret
daa
add
mov
std
adc
loop
enter
aam
push
outsl
in
adc
js
mov
inc
jne
and
sbb
cmp
shrb
inc
arpl
xchg
or
adc
mov
xor
sarb
or
xor
push
mov
and
pop
call
dec
push
ja
push
pop
movb
icebp
push
inc
sbb
xchg
fists
add
fldcw
mov
daa
out
fdivr
or
sub
mov
xchg
lods
inc
cmp
xchg
sub
pop
add
and
pop
jne
loopne
xchg
repnz
jle
mov
dec
mov
fidivrs
or
adc
lea
mov
push
jge
push
fmull
adc
add
xchg
mov
add
pop
rclb
iret
adc
aas
lret
test
mov
jno
out
cmp
lea
test
ret
pop
and
push
je
mov
cmp
push
push
pop
test
popf
cmp
dec
cmp
hlt
pop
mov
cmp
add
scas
cmpl
popa
sti
adc
xor
pop
inc
jmp
popa
push
aad
pusha
loope
lea
call
fcompl
push
add
pop
pop
lea
xorl
js
add
andl
fildl
mov
lret
enter
sbb
les
cmp
mov
mov
cmc
incl
inc
scas
inc
nop
push
cmc
fsubrl
add
sub
fwait
add
faddl
inc
mov
clc
mov
pop
xor
xorb
mov
or
mov
mov
nop
rcr
or
push
ret
sahf
inc
pop
mov
or
das
xlat
mov
aad
jne
xchg
or
sub
inc
push
jae
pop
leave
adc
bound
pop
pop
mov
adcb
pop
xor
cmp
lcall
imul
test
mov
add
lods
pop
or
fisttps
dec
inc
sahf
testl
xchg
sbb
call
and
fwait
loop
mov
pop
loope
addb
dec
adc
popa
xor
jne
in
xchg
xchg
xchg
adc
pushf
cs
cmp
dec
adc
push
adc
mov
shl
sub
dec
jo
xchg
mov
cmp
dec
mov
icebp
xorl
cmp
in
mov
inc
jo
mov
sbb
sbb
inc
xor
xchg
pop
aaa
jno
pop
mov
sti
aam
inc
pushl
add
lods
cmp
mov
sti
ss
mov
cltd
dec
cmpsl
xchg
push
sub
mov
jbe
mov
outsl
mov
insl
inc
or
fldt
push
cwtl
push
push
out
push
push
inc
and
inc
add
or
hlt
inc
jbe
pop
jo
popf
shl
test
jl
push
xchg
addr16
arpl
or
xor
sbb
and
rcrb
and
cmp
or
incl
sub
push
mov
adc
mov
mov
int3
dec
adc
flds
lret
xor
ret
pop
dec
adc
xor
mov
and
test
lods
jo
xchg
pop
and
xchg
xor
test
cmc
add
psllw
outsl
mov
xor
movsl
inc
sub
pop
cmp
push
push
movzbl
or
dec
movsl
push
test
mov
enter
out
push
mov
inc
mov
pop
and
mov
cltd
sbb
inc
xchg
ds
mov
sub
xor
gs
add
adc
data16
xchg
mov
mov
popf
or
shlb
jne
add
sub
test
addr16
es
sbb
ret
pop
jb
jmp
push
sbb
es
int3
mov
adcl
or
cmpsb
icebp
in
ljmp
movl
jbe
loopne
mov
or
inc
xchg
imul
mov
int3
add
pushf
pushf
rolb
inc
dec
add
add
cmpsb
fadds
or
xor
lods
xchg
push
into
jne
mov
xchg
rcrb
xchg
xor
xchg
or
mov
and
fistps
nop
data16
xor
or
adc
add
pop
add
xchg
dec
jecxz
sub
cmp
mov
cmpsb
pop
inc
adc
add
pusha
dec
or
les
adc
sbb
clc
or
push
or
xor
add
stc
push
and
loope
xor
popf
es
lock
jge
and
out
jo
int3
mov
xor
fcompl
adc
sbb
mov
in
sbb
int
dec
aam
dec
cmp
subl
and
inc
cmp
js
icebp
xor
js
in
ss
into
popf
or
mov
xor
xor
bound
dec
cmp
sahf
test
ljmp
cmpsl
add
daa
in
xchg
mov
dec
pop
sbb
imul
mov
mov
push
or
sbb
xchg
dec
adc
sbb
xor
aaa
andb
lret
lret
jge
push
pop
fs
in
mov
popa
xor
in
std
ss
and
fdivrl
insb
adc
int3
xor
movsl
push
push
movsl
mov
imul
loopne
arpl
sub
out
aad
adc
and
test
inc
outsl
inc
push
push
ret
mov
cli
mov
add
pop
mov
daa
jbe
push
jmp
test
repz
push
cmc
bound
pushf
jne
cmp
ljmp
push
push
loopne
mov
cmpl
dec
pop
outsb
cvtdq2ps
jo
je
aas
xchg
mov
jge
push
pusha
dec
jmp
ja
je
loopne
dec
cli
popa
jno
fcoms
adc
or
addr16
add
sbb
lock
inc
xor
add
stc
inc
sub
pop
xchg
andl
movsl
push
int
sbb
push
mov
jmp
dec
add
std
ficoml
addr16
sbb
push
outsb
dec
orl
xorb
sbb
jo
mov
test
es
jmp
xchg
push
outsb
xor
jns
dec
push
out
inc
push
pop
adc
or
mov
call
jecxz
and
je
xchg
and
fcomps
in
or
sbb
fadds
push
sbb
shlb
loope
jecxz
adc
sub
mov
jecxz
mov
cmp
out
inc
cmpsb
xor
popa
jmp
mov
popa
adc
xchg
in
call
cwtl
enter
jmp
js
or
mov
or
or
and
jg
xor
adc
rorb
mov
loop
aam
cmpb
das
mov
jne
repnz
and
sub
xchg
mov
and
add
mov
mov
mov
ds
push
outsl
cmpl
xor
js
xor
jmp
and
and
push
sbb
sbb
add
cmp
adc
add
es
xchg
cmp
sahf
out
mov
ljmp
xor
add
sub
lods
xor
push
rorb
mov
and
divb
add
xor
adc
cltd
rolb
mov
ds
test
orb
dec
rcr
dec
xchg
xchg
shrb
mov
ficomps
cmp
and
in
and
inc
mov
sub
push
adc
adc
push
push
push
call
or
inc
push
xchg
inc
mov
rcll
sub
andl
add
cmpsl
cmp
aas
addb
jmp
mov
nop
je
inc
or
inc
sbb
jmp
push
jmp
add
mov
mov
or
cmp
mov
in
dec
xor
add
sub
push
add
add
fs
pusha
ljmp
cmp
xor
mov
dec
mov
mov
xchg
insl
push
push
enter
xor
cmp
dec
enter
sub
mov
stos
adc
adc
and
lock
leave
aad
fistps
cmp
xchg
aas
push
cmp
adc
mov
inc
sbb
lods
xor
enter
mov
xchg
int3
mov
shr
push
push
and
aas
xchg
adcb
and
add
mov
lahf
rolb
vmread
push
outsl
imul
fsub
push
adc
or
insl
shl
mov
shl
aad
fmul
pop
rcl
jnp
dec
pusha
sub
mov
push
sarb
mov
inc
mov
inc
cld
cmp
pop
fdivrs
jne
pop
jp
es
imul
cmp
or
flds
cmp
pop
lret
or
outsb
jbe
loop
mov
lret
sub
or
test
rcrb
mov
push
and
mov
sbb
cmp
cmpsl
popf
mov
adc
adc
dec
jg
lahf
in
add
add
inc
bound
and
cmc
loope
scas
inc
cmp
mov
xchg
rcrb
aas
xchg
loop
hlt
or
cmp
inc
aam
xor
mov
ss
cmp
stc
sbb
int3
std
in
add
sub
xchg
push
cld
mov
enter
xor
add
mov
fwait
or
pop
pop
cld
loope
fwait
sbb
movsl
movsw
push
jecxz
add
cld
movsb
mov
std
aas
es
mov
shr
mov
inc
xchg
ja
fisttpll
cmp
jle
movb
subb
aam
and
orl
mov
and
roll
dec
push
jnp
loop
pusha
cmpb
mov
pop
mov
faddp
ss
push
xchg
daa
xchg
add
jb
and
fcoml
cld
je
push
push
ret
ret
pop
inc
or
cmp
inc
lods
lahf
fdiv
and
or
push
xchg
add
call
adc
test
icebp
imul
pop
addb
mov
or
subl
cmp
fs
add
and
or
cmp
aad
pop
add
push
into
pop
xor
push
ret
inc
or
or
ss
pusha
fwait
push
and
cmp
push
or
pushf
push
lock
fdivp
inc
test
or
ficompl
and
add
mov
and
ds
js,pt
jb
jb
push
add
add
jb
jb
push
pop
or
mov
jmp
or
jmp
or
jno
jmp
mov
jmp
por
jmp
adc
pop
mov
jmp
adc
dec
adc
dec
adc
mov
pop
jmp
sbb
xor
mov
sub
jmp
sbb
and
mov
pop
jmp
and
or
jp
mov
adc
fimull
push
add
outsb
add
mov
add
push
je
push
mov
mov
push
cmp
jns
out
dec
push
pop
fs
out
sahf
out
jl
xchg
nop
xchg
lcall
jns
mov
mov
out
int3
rcl
fistpl
in
out
hlt
stc
fnstcw
jns
or
add
and
decl
or
adc
adc
push
pop
sbb
sbb
sbb
push
pop
and
and
aas
push
cmp
sbb
pushf
bound
loop
sbb
mov
xor
mov
subl
xchg
dec
push
cmp
movsb
cmp
xor
cmp
jle
mov
popf
insb
js
cmc
jmp
and
dec
push
push
lret
xor
mov
pop
pop
fidivs
test
aaa
adc
call
sbb
lock
mov
shl
or
pop
adc
inc
sbb
test
inc
xor
mov
inc
cmp
jbe
test
ror
pop
sbbl
adc
lods
sahf
or
ds
ror
cld
dec
pushf
test
add
jge
daa
and
filds
nop
jmp
inc
push
push
sub
inc
pop
jae
pop
pop
sarl
mov
pop
shrb
fxch
dec
movsb
cmpsb
lock
pop
rcl
sahf
mov
mov
incl
sbb
cs
adc
push
push
dec
push
or
inc
and
fwait
and
push
dec
xor
inc
lcall
mov
dec
nop
scas
sub
adc
mov
mov
addr16
add
aam
sbb
aas
adc
or
test
or
jnp
push
inc
or
test
add
jle
mov
dec
adc
pop
mov
adcl
push
push
pop
push
sub
mov
mov
push
out
out
dec
fwait
mov
add
mov
sub
sub
call
cmpsl
inc
mov
ds
and
xor
jge
popa
int3
addl
jge
adc
call
pop
mov
dec
jle
push
adc
add
adc
dec
lahf
scas
test
loopne
mov
and
in
inc
mov
xchg
adc
inc
adc
mov
xlat
add
push
neg
jp
mov
ficoml
xor
sub
outsl
dec
lea
gs
movsl
pop
out
push
pop
ss
adc
andl
jne
jb
jne
xchg
inc
in
test
dec
shlb
or
loopne
or
fistpll
js
push
xlat
loope
outsb
push
push
imul
sbbl
fisttpl
mov
jne
jno
pop
sbb
fidivrs
clc
xor
inc
data16
pop
mov
in
jo
ja
loop
sbb
sarl
inc
pop
mov
sbb
mov
jge
movups
push
faddl
xor
fs
je
dec
sahf
enter
inc
lahf
cld
ss
lret
lock
jbe
or
je
xchg
clc
in
in
push
pop
rol
into
xor
or
into
jb
push
push
mov
idivl
or
aam
inc
fs
inc
dec
cmp
test
xor
inc
test
cmp
lock
sub
pop
mov
mov
mov
in
js
mov
mov
and
sarb
dec
js
adc
inc
inc
lock
imul
mov
mov
je
sbb
adc
xchg
sub
xor
outsb
daa
cltd
or
or
jb
and
or
add
mov
cs
xor
push
cltd
lcall
cmp
test
or
shr
stc
inc
mov
mov
and
lock
xchg
lea
ds
and
or
cmc
add
add
pop
shrb
lret
lret
jmp
incl
aam
mov
out
add
popf
fadds
xor
ror
loopne
enter
dec
pushf
xchg
and
xor
push
in
jg
or
daa
lods
xchg
pcmpeqw
dec
push
add
data16
icebp
xorl
mov
jl
dec
adc
jge
jmp
add
jmp
fdivl
jl
pop
xchg
cmp
jne
and
cmp
xor
fcoml
arpl
dec
enter
adc
and
add
mov
outsl
enter
mov
add
les
bnd
push
mov
xor
gs
cld
decl
add
movsb
dec
cmp
push
cmpsl
addl
inc
ss
sbb
inc
sahf
xchg
add
loopne
in
xor
ficomps
int3
mov
pusha
dec
ds
sbb
repz
add
in
cs
and
enter
addb
adc
add
dec
sti
adc
sbb
adc
add
xlat
or
mov
movups
mov
pop
shrb
pusha
pop
pop
cwtl
xchg
stos
aad
pop
push
inc
popf
add
pop
mov
add
sub
jecxz
ljmp
rcrl
cmp
mov
push
popa
or
mov
popf
xor
lret
fimuls
pop
or
pop
rorb
push
or
dec
je
or
mov
out
sbb
sbb
push
mov
add
sbb
sbb
cmpsl
xchg
mov
out
test
je
add
xchg
mov
inc
and
add
in
int
fstps
xor
mov
xchg
daa
faddl
or
mov
push
add
add
cmp
or
test
fdivrl
dec
mov
scas
cmp
pop
cmp
push
mov
pop
add
ss
adc
sub
mov
mov
ret
mov
add
mov
push
addb
jno
arpl
arpl
js
clc
dec
mov
test
xorb
pop
sbb
js
inc
jne
test
cmc
xchg
shlb
cltd
jmp
or
jo
dec
xlat
xor
push
inc
lret
fmull
xlat
pop
xorl
dec
cmpsb
push
lahf
push
jae
lcall
jmp
js
dec
or
scas
dec
mov
or
xchg
dec
ss
push
lds
xchg
pop
inc
in
leave
and
add
aas
scas
add
js
mov
add
push
les
popl
pop
je
add
jle
lods
cli
iret
mov
cli
sub
pop
jne
insb
and
or
je
or
and
inc
cmp
jl
movsb
shll
xchg
mov
sub
push
addl
cli
sbb
popf
xchg
jnp
jnp
push
push
in
or
out
call
hlt
lock
push
lret
or
or
popa
cmp
and
sbb
je
jge
icebp
adc
dec
xor
adc
lods
jne
lods
mov
cmp
call
push
add
dec
shl
pop
push
loope
push
inc
sbb
shrl
xchg
xlat
dec
xor
sbb
pop
ja
dec
fists
add
or
gs
lahf
pusha
xchg
mov
xchg
cld
jnp
pop
mov
nop
test
dec
es
sub
adc
arpl
lcall
inc
iret
add
push
into
sbb
sbb
dec
pop
adc
adc
push
mov
icebp
or
xchg
pusha
or
pop
jb
fmull
xor
nop
xchg
sbb
mov
push
push
sbb
or
pop
insb
lea
cmp
imul
sub
adc
movsb
rcrl
leave
adc
and
mov
push
ficoms
mov
mov
cmpsb
mov
sbb
cmp
ficoms
and
mov
xor
shl
inc
add
inc
adc
inc
repnz
push
mov
pop
inc
pop
inc
pusha
inc
dec
rorb
insb
xchg
push
push
fnstcw
pusha
adc
js
sub
loopne
lret
lret
add
jns
aaa
mov
lahf
xchg
lret
dec
cwtl
pop
fs
pushf
outsb
xchg
outsb
xchg
nop
mov
xchg
imul
mov
and
fadds
iret
push
jno
testl
add
ljmp
push
js
jmp
add
outsl
and
femms
mov
test
addb
imul
xchg
je
jl
xor
in
and
dec
testb
push
cmp
jl
sub
repnz
inc
pop
lea
xorl
cmp
je
dec
fmull
cmp
jno
lea
or
sbbl
pop
lock
fildl
jno
jmp
and
inc
sti
lods
sub
inc
pop
fadds
and
jnp,pn
rcrl
jl
jmp
out
push
sbb
sbb
sahf
mov
adc
xor
and
mov
in
mov
inc
gs
adc
mov
ret
jmp
rol
loope
in
mov
in
dec
fisubl
shl
int3
sbb
lcall
and
lock
nopl
push
fmull
les
outsb
sbb
push
fwait
fs
sub
imul
or
call
mov
test
cmpsb
xchg
fistpll
add
cmp
jge
xlat
pop
mov
cmp
jl
xlat
jle
mov
ret
lock
inc
pop
pop
inc
sbb
sahf
mov
or
imul
sahf
mov
add
sub
mov
into
ds
shl
mov
lock
outsb
adc
and
add
cmp
daa
fisubs
rclb
pop
inc
mov
push
stos
sub
fcmovnbe
mov
mov
sahf
mov
loop
jge
and
scas
cltd
mov
adc
mov
ljmp
mov
lcall
shll
jne
mov
or
or
add
mov
mov
or
lret
mov
int
xchg
mov
lock
int
sbb
fs
pop
add
les
add
cmp
dec
push
pusha
ss
iret
js
or
inc
add
jo
add
les
cmp
mov
jge
les
push
cmpsb
xchg
xchg
in
or
mov
push
dec
pop
push
shr
pop
mov
push
sub
xor
fidivs
jle
aas
jne
push
mov
adc
mov
insl
pop
pop
scas
fwait
xchg
sub
cmpb
cltd
inc
push
dec
movsl
jns
lods
inc
xor
sub
loop
cmc
sub
loopne
sub
mov
push
aaa
jns
enter
push
dec
call
jno
shlb
inc
out
sbb
into
adc
add
ret
addl
mov
adc
or
mov
mov
sbb
pop
jp
fbstp
mov
pusha
xlat
jmp
inc
xor
test
test
imul
adc
ds
jne
xor
jp
and
ret
and
mov
in
cmp
push
add
inc
add
adc
mov
add
mov
sbb
loope
scas
cltd
or
frstor
adc
jne
mov
shlb
or
orl
mov
xor
dec
pusha
sbb
xchg
les
cmpb
aad
add
repnz
cmp
pusha
lret
add
sbb
xorb
sub
add
gs
pop
adc
outsl
test
mov
mov
fiaddl
movl
push
add
ret
sub
ret
inc
jle
mov
jge
push
decl
mov
imul
dec
aas
pop
or
or
out
addr16
pop
dec
pop
pop
add
test
mov
or
arpl
xchg
pop
repnz
testl
sti
in
mov
sub
loopne
sub
in
and
and
cmp
shrb
imul
mov
xchg
ret
popf
jb
mov
jl
jbe
fs
lea
mov
lea
and
jns
js
cld
and
add
sub
popf
mov
testl
inc
iret
jae
cs
test
cmp
dec
iret
jmp
xor
js
sbb
pop
push
jg
push
xchg
dec
fadd
clc
jnp
rcr
and
inc
out
inc
jle
lock
rorl
aas
mov
stos
cmpl
lahf
rolb
dec
xor
inc
sbb
sbb
test
arpl
sahf
int
movsb
adc
xchg
in
movsb
imul
ret
loope
adc
inc
mov
mov
ret
divl
mov
xchg
adc
mov
pop
lret
out
and
adc
jb
sahf
pop
xor
imul
test
or
add
sbb
push
push
mov
push
pop
pop
xchg
mov
and
mov
sub
inc
lea
cmp
inc
sbb
mov
push
pop
cmp
rolb
inc
push
fnstcw
mov
sbb
xor
xor
add
dec
lock
andb
clc
inc
jp,pn
push
leave
xchg
cmpb
add
insb
or
xchg
aas
push
jo
rolb
dec
xor
test
stos
jo
and
fwait
xor
mov
mov
push
inc
xor
or
or
push
icebp
lcall
fstl
fldz
fcomp
fnstsw
cli
adc
sub
sub
fsubr
pop
faddp
push
inc
cwtl
jbe
fstpl
ds
or
nop
fbld
mov
out
jb
jecxz
imul
push
push
sbb
cs
incl
inc
push
mov
pop
hlt
xlat
movsl
aas
in
hlt
pop
hlt
jl
cmp
cmp
sub
lock
cmp
push
adc
jne
inc
add
gs
ljmp
mov
xor
das
pushf
mov
add
dec
call
movsl
cli
inc
ljmp
imul
rcr
cmp
faddl
dec
inc
sahf
and
inc
jae
lea
gs
inc
bound
xlat
sarb
push
xor
ret
push
dec
mov
jne
push
lods
enter
sahf
push
addl
in
in
or
push
adc
pop
mov
in
and
pop
ja
sub
sahf
mov
fcoml
ret
lret
in
jp
mov
jo
movsl
andl
lock
imul
cmpsl
or
insb
cld
push
int3
jp
cli
mov
or
in
dec
in
xorb
lahf
mov
and
loope
das
clc
jg
icebp
mov
decl
mov
push
cld
dec
stos
xchg
add
popa
or
lock
inc
pop
pusha
pop
pop
sbb
pusha
lods
inc
mov
cmpsb
pop
push
data16
xlat
cmp
or
mov
test
enter
sbb
addb
push
adc
movsb
mov
pushf
nop
out
insl
push
in
out
mov
or
xchg
push
sub
popf
fdivrs
fildl
push
cmp
cmp
adc
rcrl
imul
and
or
jo
mov
cmpl
push
nop
ret
xchg
xchg
mov
mov
mov
icebp
jecxz
popf
mov
jge
cwtl
les
sti
and
ss
movsl
mov
sub
add
test
mov
fldt
cwtl
add
jb
or
aaa
xchg
shlb
add
popa
pushf
dec
xchg
push
push
flds
or
popf
mov
inc
inc
sbb
repnz
cmp
jb
push
or
int
inc
daa
dec
pop
jb
adc
or
or
lret
push
leave
mov
add
adc
inc
cmpsl
rcrl
push
push
pusha
xor
pop
jg
stc
add
cmp
aas
or
cmpsb
mov
testl
jecxz
imull
jecxz
or
pop
cmc
jne
mov
push
inc
sbb
test
add
mov
in
jb
inc
jae
jo
inc
mov
inc
or
inc
ds
xor
add
call
add
sbb
add
sbb
cmpb
pusha
or
push
mov
pop
pop
mov
push
pop
push
mov
mov
lahf
inc
imul
pop
pop
xchg
and
xor
pop
xor
inc
loopne
movsl
test
mov
pop
repnz
or
cmp
jo
imul
sub
nop
push
sbb
js
addb
aam
loope
mov
lock
fisubl
xor
sbb
push
jmp
cs
mov
and
js
dec
repnz
les
sbb
inc
dec
or
mov
adc
outsl
or
jmp
pavgw
add
and
or
pusha
pop
ss
lods
sub
add
enter
mov
mov
pop
and
jno
mov
or
cmpsb
push
push
das
insb
mov
jae
scas
mov
out
sub
popa
pop
jbe
hlt
lcall
lods
divl
icebp
xchg
and
add
repnz
dec
pop
inc
push
pop
pop
int
testl
push
dec
push
call
addr16
mov
pop
ret
adc
jmp
nop
into
xorb
mov
test
hlt
xchg
and
stc
imul
sbb
jo
pop
adc
mov
jo
sbb
dec
loop
pop
push
sbb
dec
push
or
and
add
add
push
je
rorb
jo
jb
push
pop
repnz
mov
jle
ljmp
cmp
in
xor
mov
test
sub
jbe
and
pop
cmp
sahf
mov
test
adc
mov
call
shlb
add
push
or
jns
dec
js
adc
jo
and
jle
dec
mov
in
cmpsb
pop
mov
ror
test
adc
xchg
and
lock
add
popa
nopl
lock
jge
mov
xor
add
inc
faddl
cmp
fildl
jns
mov
pop
adc
mov
sub
mov
cmp
nop
out
fmuls
or
je
or
sbb
dec
mov
fcmovne
inc
jmp
ret
jbe
add
xlat
and
mov
inc
push
xchg
test
in
inc
add
mov
loopne
sbb
and
aam
adc
movsb
lods
mov
faddl
pusha
add
adc
in
leave
or
ud1
dec
movsl
shlb
mov
sub
dec
or
adc
adc
call
add
repz
rolb
cmp
loop
jne
loopne
testb
cmp
xor
push
adcb
or
in
test
push
dec
adc
jbe
cwtl
ret
test
repz
sbb
xor
mov
push
mov
and
push
add
push
pusha
addb
dec
enter
dec
lock
enter
jge
dec
inc
sbb
sub
jg
les
jnp
push
imul
test
xchg
mov
rorb
outsl
add
pop
test
xlat
mov
inc
push
add
inc
mov
mov
cmp
pop
push
adc
andl
icebp
test
sub
add
mov
arpl
pop
add
push
test
test
add
and
sub
push
cmp
lahf
lock
cmpsl
push
sbb
mov
inc
add
ja
dec
popa
mov
xchg
push
pop
cmpsl
cmpb
pop
test
sub
adc
pop
cltd
or
scas
mov
add
push
test
pushf
mov
pop
nop
xchg
cmp
jp
or
sbb
xor
rorl
cltd
ret
pop
sbb
push
das
orb
xchg
repnz
push
xchg
mov
adc
mov
or
and
je
push
mov
dec
mov
push
cld
inc
xchg
xor
cmp
dec
and
push
xor
add
xor
dec
xor
dec
add
mov
push
lret
mov
jmp
xchg
add
pop
movsl
test
inc
inc
jae
fisubrs
pushf
jb
lret
test
push
incl
push
cmpsl
add
in
test
xchg
add
and
or
mov
loope
incb
stos
clc
and
jecxz
lods
mov
push
add
lahf
lods
mov
imul
mov
outsl
jae
testb
dec
enter
in
fsubrs
dec
fdivrl
lcall
aad
mov
or
iret
ss
dec
sbb
and
xor
dec
dec
xor
sbb
add
mov
push
arpl
push
js
das
lcall
fistpll
pop
or
and
pusha
subb
push
jg
bound
or
es
push
adc
xlat
sahf
jmp
add
shrb
addb
inc
or
in
fimuls
push
imul
push
push
xor
mov
or
mov
int
mov
xchg
pop
sub
adc
lsl
xchg
lret
sub
adc
or
adc
or
xchg
push
fdivs
call
lods
dec
shrb
xor
fcomp
aam
lods
pop
mov
jnp
push
ja
mov
adc
adc
mov
add
leave
orb
pusha
pop
add
pop
inc
stos
xor
sub
pop
loop
sub
sub
int3
dec
mov
or
dec
loopne
jp
insb
inc
sub
push
leave
bound
aas
and
fmuls
xor
pop
rcr
mov
xchg
and
hlt
jo
adc
or
inc
orb
clc
dec
aaa
add
fcoml
add
adcl
inc
cwtl
scas
cmp
rcrl
inc
mov
pop
adc
icebp
jmp
cmp
sub
ficoms
daa
fisubl
mov
mov
ret
dec
loopne
mov
les
mov
push
or
mov
ss
push
in
test
jl
push
add
std
rclb
scas
inc
and
je
mov
push
sub
mov
inc
mov
movsb
jl
shrl
mov
pop
jmp
dec
enter
add
pop
jle
xchg
lret
adc
jo
pushf
cmp
sub
mov
or
inc
imul
xor
jne
fdivrl
sti
sbb
mov
mov
xchg
or
xchg
cld
cmpsb
test
push
mov
imul
aam
rcrl
popf
test
adc
mov
fisttps
mov
xchg
mov
je
orb
call
dec
adc
sbb
push
add
je
sub
pop
cmc
mov
dec
loopne
jp
mov
pop
push
fnstenv
sub
sbb
push
shlb
test
add
ret
mov
mov
add
or
cmp
fcompl
call
in
mov
sub
ss
and
push
jl
test
or
test
andb
sbb
pavgb
push
mov
and
add
je
mov
cmp
sub
mov
xor
pop
xchg
fildl
daa
clc
push
xor
inc
cmp
jge
shlb
ljmp
add
mov
lods
pop
test
sub
ret
sub
or
xor
adc
pop
add
pop
add
add
xor
sbb
inc
lcall
les
loope
add
pop
insb
sarb
dec
adc
or
and
test
jno
jl
adcl
cmp
or
inc
ss
dec
adc
insl
jl
add
add
or
pop
dec
mov
adc
xor
xlat
hlt
or
or
loop
cmpsb
jb
mov
gs
hlt
dec
outsl
sub
sbb
aaa
incb
test
mov
mov
or
je
idiv
mov
and
jne
mov
adc
fld
sbb
add
in
negb
ss
jne
mov
lea
or
and
push
cmpsl
test
pushf
cld
or
cmpsb
adc
test
insl
je
fimull
add
or
cs
loope
pop
mov
add
out
call
add
call
push
sarb
fbstp
dec
mov
js
in
mov
popf
jl
or
mov
inc
das
gs
mov
shrb
inc
hlt
push
enter
sub
loopne
sbb
int
pushf
nop
jmp
mov
rcrl
jle
fbld
lods
movl
int3
mov
mov
pop
mov
mov
lea
stos
mov
jno
cmp
test
repnz
in
rcll
insb
movsb
mov
js
mov
cmp
popf
adc
sub
pop
es
mov
int
out
jle
incl
sub
pushl
lock
pop
cmpb
stc
dec
add
inc
mov
adc
jo
enter
dec
cmp
and
loop
mov
jle
movsl
push
push
clc
push
cwtl
std
out
xor
mov
sub
add
jmp
and
xor
inc
fnstenv
sub
mov
stos
cli
adc
or
push
push
cmp
and
in
or
jne
rcrl
mull
fidivl
enter
dec
pop
or
xor
mov
or
mov
push
cld
xchg
fidivs
cld
clc
or
jno
lock
add
mov
cltd
dec
xor
ds
sarb
inc
movzbl
and
das
jl
or
lret
inc
mov
inc
sbb
jl
push
lea
jp
in
test
je
xorb
lods
inc
sub
movsl
cltd
add
testl
mov
lea
push
fdivl
mov
mov
push
and
pushl
pop
inc
pop
add
jb
mov
sbbl
in
sbb
sbb
hlt
aam
xchg
add
cwtl
or
adc
sub
nopl
xchg
pop
or
jo
sub
cmp
pop
adc
pop
and
push
rorl
insb
inc
xor
lock
mov
jnp
cmc
jmp
and
push
xchg
cmpsl
ret
icebp
jbe
mov
pop
sahf
test
mov
xchg
cmpl
lret
or
insb
adc
push
adc
dec
imul
fcompl
test
lcall
and
lods
jmp
es
jle
cld
fisubrl
xchg
fistl
mov
xor
aad
inc
mov
arpl
faddl
bound
fsubrs
cld
xchg
jae
mov
test
or
adc
in
sbb
loopne
push
stos
inc
in
mov
pop
test
hlt
mov
lock
dec
fwait
rorb
icebp
pop
out
mov
pop
cmp
xor
and
xchg
je
inc
and
push
fadds
mov
jns
and
inc
loopne
and
mov
pop
das
push
dec
inc
shll
test
ret
daa
push
mov
pop
add
jne
cwtl
loop
mov
mov
add
mov
in
loopne
push
sahf
lret
add
loopne
inc
popa
inc
dec
xor
push
int
add
push
adcb
shr
jecxz
movsb
data16
xchg
dec
jno
mov
adc
das
xchg
sbb
and
mov
and
xor
mov
das
mov
sbb
mov
es
out
daa
cmp
and
daa
xchg
insb
push
push
out
dec
dec
lret
mov
and
push
add
pushf
mov
hlt
mov
dec
movsb
pop
fucomip
repz
out
or
jmp
sub
and
cmpsb
cmp
fidivs
sub
adc
aam
inc
or
ja
xchg
mov
ja
push
sbb
lcall
fsubr
sub
outsl
sub
mov
jmp
cmp
pop
mov
nop
mull
xchg
and
test
sub
adc
clc
mov
xorl
sbb
xorb
inc
adc
adc
pop
or
cmpw
hlt
and
or
dec
xchg
mov
js
jne
jl
add
ret
rcl
jl
and
sub
pop
sub
addr16
or
inc
fcoms
popf
inc
ljmp
or
insl
fwait
mov
xor
push
add
jmp
lea
fdivrl
pop
cmpsl
mov
jo
frstor
pop
cmp
xor
in
cmpsb
pushf
jge
test
rclb
mov
jb
sbb
adc
lcall
adc
ja
push
ret
cmp
leave
sti
imul
mov
bound
shll
inc
inc
jmp
inc
fs
rolb
sub
and
push
cmp
xchg
pop
pop
cli
sbb
mov
mov
push
jmp
test
or
orl
std
or
sub
movsl
test
popf
fimull
je
mov
je
adc
aaa
dec
jmp
dec
jno
sbb
test
xchg
popf
push
icebp
inc
shrb
inc
xor
jmp
add
adc
je
xlat
push
add
imul
clc
movsl
jo
and
mov
dec
loope
aaa
aam
pop
in
mov
inc
cli
ss
in
and
sub
and
jp
adcl
mov
shrb
xchg
mov
movsl
dec
lcall
push
jp
adc
adc
in
mov
call
jne
movsl
adc
gs
test
mov
xor
mov
loopne
xor
cs
cmp
mov
and
mov
test
pop
les
dec
push
add
or
outsb
out
stos
jnp
in
aam
add
sub
insb
sbb
or
and
push
stc
les
imul
or
sub
push
dec
clc
or
dec
imul
pop
jl
imul
outsl
jle
ret
popa
sub
sbb
xlat
mov
enter
xchg
iret
js
add
push
hlt
inc
faddl
cltd
push
mov
add
xor
out
push
sbb
push
push
sub
mov
mov
cmp
bound
cmp
addl
mov
jge
nop
int
or
add
dec
add
inc
test
or
cmp
push
loope
mov
xchg
imul
cmpsb
pop
call
mov
mov
ljmp
dec
xor
test
scas
test
dec
pop
cmp
xor
nop
cmp
dec
test
push
loopne
test
js
and
icebp
push
stos
jo
mov
xlat
xor
dec
sbb
cmp
out
jo
ds
cmp
data16
or
push
into
jbe
and
repnz
test
jl
repz
sti
mov
sub
jle
fadds
lcall
jle
xchg
mov
sbb
or
scas
imul
jb
repnz
aaa
in
arpl
push
rolb
aas
mov
xchg
lds
lret
or
mov
divps
movsl
adc
rorb
add
xlat
pusha
jle
dec
lock
xor
shr
xor
adc
cmp
fcompl
pushf
push
not
mov
adc
test
xchg
lods
fwait
push
movl
fmull
cmp
jbe
add
jmp
add
mov
or
out
and
or
inc
push
xor
pop
xor
cmc
xor
and
aaa
stc
xchg
adc
ss
cld
sub
and
mov
mov
sbb
sbb
rolb
push
add
es
hlt
mov
mov
push
xor
mov
bound
push
cmp
inc
enter
lods
imul
and
cmp
adc
sbb
iret
jne
push
stc
movb
or
jb
cwtl
setp
sub
stc
mov
xor
push
dec
shr
xchg
and
add
or
inc
incb
mov
push
pop
imul
xor
popf
dec
push
adc
push
sbb
fcomps
or
loopne
sbb
pop
pop
outsl
call
out
leave
mov
adc
popf
es
add
jae
pop
ret
rolb
out
pop
adc
pop
stos
xlat
mov
or
sub
js
stc
dec
cmp
cmp
push
sub
dec
xor
xchg
mov
dec
adc
cltd
int
loopne
pop
insb
iret
xor
sub
adc
dec
inc
clc
pop
sub
add
push
sbb
rolb
rolb
jns
ficomps
push
pusha
popa
xchg
pusha
xor
repz
mov
test
sti
sub
sbb
nop
out
or
and
and
jmp
and
xchg
loopne
cmp
sub
xor
js
and
fldt
lret
push
adc
add
inc
sbb
and
mov
cmp
xor
push
shrb
pop
dec
subl
add
cmp
push
ds
xor
mov
les
or
inc
or
iret
sti
push
and
mov
add
jne
mov
or
mov
and
xchg
push
jp
push
fldenv
in
cmc
or
or
xorb
aam
cmp
add
pop
cmp
pop
mov
out
sbb
lret
les
xchg
jl
lea
push
push
sahf
pop
das
jmp
ss
or
sbb
push
movsb
xor
stos
call
aaa
cmp
dec
adc
pop
adc
sbbb
mov
jge
cmp
iret
les
push
enter
clc
dec
subb
and
xor
test
shlb
adc
cmp
aad
push
sub
sub
push
mov
lods
popa
sub
cmp
js
push
dec
enter
sbb
or
outsb
mov
cmp
pop
push
stc
mov
test
bound
mov
cmp
and
iret
pushf
mov
test
mov
sbb
mov
dec
test
cmpsb
test
icebp
jne
add
rcll
lods
mov
icebp
pop
jb
add
and
cmp
xor
jo
dec
cmpsb
jno
add
xchg
in
sbb
inc
sbb
sub
fdivrl
ficompl
adc
adc
and
rorb
enter
fldt
cmpsb
jb
xor
mov
call
div
sub
inc
andb
adc
sbb
pop
test
sahf
iret
jbe
js
jne
insl
or
daa
xor
pop
nop
daa
pusha
push
jl
push
or
pop
cwtl
sub
cltd
sub
mul
dec
add
add
mov
xor
movsb
push
mov
sub
lret
cmp
repnz
dec
lock
nop
xchg
mov
ljmp
sbb
mov
into
sub
mov
jge
or
dec
and
xor
je
les
sbb
xor
int3
hlt
test
add
xchg
sahf
add
imul
jne
ret
sub
jmp
push
mov
jmp
inc
inc
ja
repnz
push
enter
fidivl
push
push
dec
sbb
jge
jae
push
gs
shrb
add
adc
and
ret
push
pop
push
xchg
mov
pop
std
or
inc
push
push
mov
or
in
rorb
xor
in
mov
cmp
mov
test
loopne
inc
push
xor
loopne
ja
addb
daa
add
into
jge
imul
cmpsb
pop
sbb
cmpsl
call
mov
orl
int3
test
cwtl
or
fucom
hlt
and
fwait
aaa
and
iret
mov
pop
int
ljmp
jo
or
out
or
and
ret
mov
lret
jge
jl
inc
ljmp
decb
push
lea
push
rol
into
and
and
inc
ljmp
add
sbb
inc
cltd
enter
imul
test
dec
adc
fldl
rorb
testl
push
sbb
or
adc
or
or
and
or
dec
test
fs
dec
cmp
popa
mov
adc
test
cmp
fstl
popa
testl
test
inc
lcall
xchg
stos
dec
dec
xchg
adc
sub
adc
jge
push
outsl
adc
cs
adcb
scas
js
sbb
js
mov
xchg
cli
sti
stos
ja
dec
je
or
and
sub
pop
adc
in
jae
pop
aam
dec
ret
xor
sub
lcall
mov
pop
ret
nop
push
lods
jcxz
in
push
jecxz
add
xor
adc
dec
stc
mov
inc
and
mov
es
sbb
push
fstpl
jecxz
adc
lds
call
in
and
outsl
mov
call
clc
push
in
sub
xor
or
mov
in
pop
hlt
dec
push
and
fwait
cmpsb
push
and
inc
out
int3
and
xor
popf
push
sub
mov
mov
notl
hlt
push
insl
and
popf
or
pusha
out
mov
filds
or
push
fildl
sti
js
push
cmp
push
adc
ds
addb
fsubrs
adc
or
dec
lahf
cmp
lcall
and
cmp
lock
shrb
hlt
clc
sub
push
jo
jne
adc
cmc
lea
push
cmp
cmp
jmp
push
clc
add
dec
insl
push
mov
xchg
add
adc
sub
xchg
cs
icebp
and
add
and
push
add
xlat
cmpb
daa
aad
icebp
mov
xchg
jns
pop
repz
shrl
daa
std
in
sub
and
movsb
add
add
rol
std
push
mov
xor
mov
jmp
and
xor
mov
and
push
push
adc
dec
jl
adc
fsubs
ret
dec
xchg
jl
xor
xchg
adc
int
sbb
dec
enter
inc
xor
cs
dec
dec
xorl
or
shlb
or
push
jne
push
xchg
stos
cltd
icebp
test
sarb
test
lea
and
rolb
mov
xchg
push
fnsave
rclb
xchg
pusha
push
and
push
and
xchg
sub
and
push
xchg
sub
push
jo
rclb
lret
or
sub
jnp
add
dec
pop
popa
adc
jbe
test
packssdw
sbb
fs
mov
cmp
inc
cld
xchg
nop
lcall
pop
ret
push
push
add
push
ret
dec
add
add
cld
cmp
or
rclb
sub
imul
push
dec
mov
notl
dec
push
movb
adc
and
add
lods
dec
sub
loopne
push
mov
loope
mov
sub
stos
in
lock
sbb
ja
adc
pop
cmp
add
jmp
js
repnz
push
hlt
ja
mov
inc
adc
cmp
or
in
inc
add
or
pop
ret
dec
jp
dec
cmp
movsb
inc
pusha
cld
nop
mov
jne
insb
add
aaa
sub
and
negl
lret
orb
push
lret
mov
lret
push
push
mov
sbb
pop
xchg
pop
push
outsl
shll
push
inc
push
rclb
xchg
movsl
xchg
cmp
aas
mov
fcom
cmp
mov
enter
adc
add
push
mov
jnp
inc
xor
add
mov
xorl
inc
xor
test
test
vhaddpd
push
in
xorl
imul
les
or
rcrb
cwtl
js
inc
push
aas
push
adc
push
imul
or
xchg
or
dec
adc
cltd
mov
shlb
push
fwait
loope
jmp
inc
loop
lods
jb
adc
js
es
scas
and
or
popa
nop
jnp
les
add
es
pop
inc
in
mov
pop
insb
enter
mov
or
cmpsb
xor
in
add
je
push
das
push
push
dec
enter
pusha
or
or
push
push
es
testl
nop
cmc
jo
pusha
shll
mov
push
or
push
add
push
test
jge
addb
add
add
add
or
jbe
cltd
xor
popa
int3
call
and
inc
push
mov
rol
mov
mov
jo
ret
ds
gs
push
pop
dec
mov
mov
pop
inc
cmp
xor
xor
test
add
xchg
mov
dec
jmp
xchg
jnp
mov
adc
rcrl
and
iret
push
adc
outsl
or
or
and
std
jns
add
or
pusha
mov
or
adcb
and
sarl
pop
sbb
xor
push
loopne
sub
add
jp
sbb
xlat
imul
xor
push
xor
add
das
in
pop
mov
jecxz
arpl
and
stos
or
ss
ds
int
lods
loopne
push
hlt
dec
cmc
ret
arpl
xchg
mov
mov
test
mov
rol
add
mov
mov
dec
pusha
and
adc
rcl
mov
mov
jl
loopne
xor
cmp
and
or
cmp
insl
adc
sbb
orb
fisubrl
popa
and
pop
insb
mov
cwtl
inc
loope
xchg
xor
mov
or
jge
popa
subl
filds
mov
rol
mov
ror
xor
call
sti
shr
xor
sub
jnp
xor
shr
xor
add
add
inc
add
dec
add
mov
lcall
iret
or
jae
or
call
not
and
xor
add
add
aam
sub
adc
out
bound
pop
lds
repnz
cli
fisubrs
lahf
add
xor
and
and
xchg
push
aam
sbb
xor
test
repnz
push
imul
pop
pop
inc
sti
outsb
push
or
xlat
ret
rcl
add
subl
add
xor
xor
call
sbb
call
and
push
sub
ljmp
int
ret
shr
add
push
xchg
or
cmpsb
mov
xor
in
imul
shl
in
push
cmp
bound
rorb
cwtl
add
pop
aaa
mov
lock
sbb
cltd
call
xor
loopne
loopne
in
movsb
jb
call
cmp
loopne
xor
imul
fdivs
pop
xor
out
push
testb
cmp
addb
iret
fidivrs
push
in
push
xor
and
and
out
iret
mov
stc
mov
out
into
add
and
push
cli
xor
push
test
add
cmp
mov
inc
jo
ret
push
jo
call
adc
adc
dec
pusha
lcall
xchg
adc
push
loop
std
loopne
cs
add
add
pop
push
loopne
lods
jbe
call
mov
inc
fisubl
add
and
add
dec
in
shll
fdivrs
inc
dec
shll
fs
call
inc
shrb
lret
inc
inc
popa
mov
mov
xchg
shrl
clc
jo
cli
stos
add
adc
aam
lcall
inc
nop
and
insb
int
sub
shr
rolb
push
subb
sub
sub
xor
shlb
rorb
and
inc
sub
dec
enter
loopne
call
xor
rolb
inc
push
xor
add
sahf
dec
xor
add
jae
push
dec
cs
and
xor
cmp
adc
dec
xor
inc
or
add
sahf
push
sub
imul
cmp
dec
push
sbb
inc
pop
push
mov
movsb
mov
push
push
jns
imul
or
dec
or
inc
int
enter
xorl
sub
cs
popa
xchg
movsl
mov
enter
or
sub
dec
sahf
roll
nop
cmp
adcl
dec
fs
dec
dec
lahf
xchg
xchg
dec
icebp
stc
stc
stc
mov
pop
add
mov
mov
jb
shll
adc
adc
lods
xor
sbb
jo
adc
mov
repz
add
and
cmp
adc
dec
daa
test
push
out
aas
pop
add
sub
mov
adc
xchg
pop
incb
icebp
add
lea
in
add
sub
or
aam
pop
sub
notb
mov
add
jmp
mov
and
or
or
or
mov
adc
mov
lods
lea
mov
inc
jae
mov
inc
sub
movsl
xor
loopne
lea
jmp
aad
sub
sub
pop
add
ret
dec
or
mov
dec
jne
pop
clc
daa
push
inc
push
loope
lock
jg
or
mov
push
dec
mov
jbe
or
and
movsb
cli
adc
in
sub
jae
push
sub
mov
pop
fadds
rep
or
push
std
dec
pusha
mov
or
outsl
mov
mov
outsl
pop
loopne
ror
daa
lods
mov
or
xchg
ljmp
mov
call
adc
xchg
sbb
pop
cmp
and
dec
lea
aam
sbb
dec
dec
or
push
inc
lcall
lock
rorl
rcrb
or
rorl
xor
lock
rorb
sbb
add
inc
movsl
add
aas
mov
out
mov
or
xchg
dec
sbb
push
add
fldcw
icebp
popl
jmp
loope
push
aam
mov
pusha
or
and
lock
stos
or
push
inc
cmpl
pop
xor
in
adc
and
test
rcll
sbb
dec
loope
inc
dec
xchg
or
add
ret
in
and
dec
xor
int
jns
inc
pusha
test
pusha
or
push
cmp
sub
sbbl
add
push
cmp
outsl
inc
or
xor
lods
lea
cs
sub
add
xor
push
jo
add
inc
sub
jno
pop
ret
dec
and
adc
xchg
push
sub
adc
pushf
sbb
xchg
pop
filds
xchg
inc
mull
mov
movsl
inc
daa
mov
sub
out
push
mov
mov
sbb
push
xor
lret
sarl
jp
cmp
inc
cmp
sub
lds
and
pop
inc
andps
sbb
test
sub
std
add
mov
xchg
loopne
xor
xchg
fildl
and
jle
es
shrb
adc
lods
xchg
and
push
cmpsb
es
add
enter
loope
mov
or
pop
loopne
and
jle
and
addr16
loope
xorl
add
repnz
push
xor
inc
sub
outsl
outsl
or
cli
inc
ljmp
into
outsb
mov
xchg
xchg
push
jmp
gs
xor
repnz
sub
push
nop
inc
or
lahf
and
sub
mov
ss
lods
xor
rclb
dec
repz
jmp
adc
mov
push
and
sbb
xor
push
dec
loopne
pop
add
jo
mov
pop
cmpsb
jnp
popa
cld
mov
jnp
mov
xchg
jle
and
inc
test
sub
jo
mov
xor
sarb
jns
pushf
mov
jmp
inc
xor
dec
sub
cmp
std
xor
or
testb
pop
outsl
in
inc
dec
jb
mov
and
insb
loopne
pop
inc
mov
push
xchg
mov
inc
cmp
popf
mov
fldl
cli
pusha
or
inc
jmp
mov
xorl
scas
loopne
lock
mov
add
insl
imul
ja
push
mov
pop
add
or
add
jle
dec
mov
inc
or
dec
js
xor
sub
mov
leave
test
loopne
fmuls
push
inc
imul
inc
into
cmp
and
jmp
iret
mov
dec
rclb
fildll
fcoms
inc
std
pop
xor
js
jno
pop
cmp
push
xor
xor
push
es
and
pop
lcall
xor
xchg
test
cmp
ret
pusha
xchg
mov
cmp
mov
bndstx
and
adcb
mov
add
dec
out
imul
jbe
xorl
pop
hlt
mov
mov
dec
gs
scas
jl
or
movsb
cs
push
add
movsb
xchg
mov
filds
xor
ret
push
push
jl
cmp
pop
dec
aas
or
jbe
push
cmp
cmp
cmp
mov
mov
ficompl
sub
fimuls
or
xchg
xchg
cmp
xor
add
shrw
addr16
pusha
lahf
gs
mov
push
stos
mov
xchg
in
push
icebp
inc
add
mov
inc
xor
sti
das
cld
pop
add
push
mov
std
mov
push
push
add
sbb
adc
cmp
push
mov
sarl
jb
jmp
inc
or
dec
loopne
and
cld
jp
bound
les
and
push
add
mov
pop
nop
mov
add
xchg
lods
jbe
mov
cmp
mov
fidivl
xchg
dec
mov
mov
jl
add
push
sbb
lods
sub
mov
lds
inc
push
sub
inc
xlat
insl
test
sahf
ljmp
jne
inc
or
mov
mov
and
pop
or
adc
push
ret
inc
sbb
orb
fildl
or
xor
fsubs
xchg
lods
mov
insb
cltd
jle
adc
or
xchg
lcall
shrb
pop
inc
mov
inc
jb
ss
roll
dec
sbb
sarl
call
lret
jbe
sub
add
test
outsl
add
movsb
push
pop
add
cs
push
call
ljmp
sbb
sub
adc
cmp
push
sub
add
sahf
lock
push
cmc
dec
bound
xchg
dec
push
out
mov
add
inc
push
push
scas
sub
hlt
sub
inc
pusha
mov
daa
push
sar
sub
sahf
lret
add
xchg
inc
xor
out
xchg
loopne
lods
enter
sub
mov
clc
push
xor
and
sbb
insl
add
inc
cmp
add
push
push
or
pop
cli
mov
and
jbe
or
inc
sub
inc
add
xchg
xor
sbbb
xor
mov
ja
dec
pop
cmp
xchg
jno
add
arpl
sti
lea
sub
inc
sub
sbb
mov
test
icebp
push
mov
jb
lea
scas
mov
jp
add
jne
or
or
and
xor
dec
inc
arpl
clc
push
pop
inc
aaa
inc
push
std
mov
pop
bound
stc
ja
adc
push
cmp
jb
push
or
mov
push
mov
inc
mov
jns
jp
inc
add
sahf
test
push
add
fistpll
or
pop
push
jmp
or
xor
cwtl
les
test
and
cmp
insb
das
dec
xchg
adc
fiaddl
adc
sub
nop
lods
cs
sti
sub
ret
dec
lahf
mov
mov
xor
xorb
jmp
insb
mov
inc
dec
xor
loop
cmpsl
cmp
jmp
jae
mov
enter
cmc
xchg
lret
nop
pop
ret
inc
add
test
jo
loopne
adc
xor
add
out
pop
enter
fmuls
mov
or
sbb
lret
sbb
ficomps
inc
cmp
mov
movb
out
lock
mov
sub
movzbl
ret
pop
stos
pop
cwtl
xor
mov
jmp
adc
xchg
or
sub
lret
add
jnp
in
xchg
mov
or
jmp
pop
fwait
xor
add
add
imul
pushl
add
fnstcw
jge
je
pop
mov
mov
jle
dec
or
pop
pop
lcall
cld
mov
sub
mov
pop
adc
jl
adc
aaa
ret
push
xor
push
cmp
or
ret
ja
or
pop
adc
push
aaa
iret
scas
jecxz
rorb
add
push
out
inc
fsubrs
cmp
sub
pop
xor
icebp
push
cld
cmc
xor
pop
ret
push
das
sub
mov
sti
or
push
jl
rolb
enter
divl
mov
shll
aaa
ss
adc
push
arpl
or
mov
sub
ja
ret
and
cmovbe
dec
push
fsubs
jbe
xchg
pusha
cmp
mov
incl
inc
cmp
inc
sbb
pop
mov
decb
das
mov
add
xor
in
inc
movsb
addr16
dec
js
pop
pop
xor
in
pop
or
nop
popa
mov
mov
mov
mov
xchg
push
in
aam
loope
and
add
fs
imul
jmp
add
xadd
add
lret
mov
adc
fisubl
movsb
mov
push
jg
rorb
test
jmp
jp
jge
shrb
iret
push
push
mov
mov
lcall
add
adc
sub
push
pop
add
sub
sahf
gs
cmp
pop
add
out
or
sub
add
cmp
push
or
add
xchg
cs
sar
insb
push
icebp
push
jp
inc
jp
aas
adc
cmp
clc
rorb
pop
sbb
xchg
outsl
dec
push
mov
sahf
adc
cld
scas
jl
xchg
push
test
xor
pusha
int
push
les
xchg
int
push
je
add
dec
or
adc
sbb
nop
mov
inc
sti
adc
ret
cmp
stos
icebp
sbb
sahf
sub
subb
xor
es
cmp
push
roll
adc
inc
mov
loope
adc
add
imul
or
sbb
sbb
inc
push
xor
and
cmp
iret
add
push
or
repnz
jae
xorl
cmp
or
jecxz
push
jb
mov
ficoms
add
sub
ljmp
add
xchg
jo
popa
je
jmp
mov
pop
xor
pusha
test
leave
xorb
add
jae
sar
mov
dec
mov
push
pop
xor
mov
xor
push
shll
aaa
inc
adc
xchg
fldenv
cmp
arpl
loope
jp
pop
aaa
mov
loopne
pop
add
enter
fldt
jl
push
int3
mov
or
js
dec
fstpt
inc
add
mov
jmp
das
or
int
push
mov
inc
mov
mov
xor
adc
out
inc
fs
add
fistl
cmp
insb
das
push
push
dec
mov
push
ret
lret
sub
add
sbb
gs
sahf
pusha
cmp
loopne
in
aam
push
loop
inc
jmp
dec
cmp
sbb
fwait
popa
or
mov
bound
fsubs
daa
lds
sbb
inc
cmp
or
lock
mov
add
xchg
xor
fsub
sarl
test
adc
sbb
dec
sti
sbb
mull
inc
pop
mov
ret
andl
bound
pop
jo
jmp
rorb
and
inc
push
or
sarl
in
add
push
push
adcb
lcall
pusha
sub
fsubrl
cmpsb
or
outsb
mov
dec
add
test
push
adc
dec
or
mov
mov
adc
repnz
or
or
ja
popl
add
sub
pop
outsb
sbb
int
in
adc
jecxz
dec
mov
stos
je
sub
add
repz
adc
inc
or
loope
and
push
and
add
pop
inc
mov
adc
aam
adc
outsb
popa
fdivl
push
gs
ds
mov
adc
dec
pop
xchg
test
inc
mov
out
xor
pop
push
xor
js
sub
xchg
bt
sbb
sbb
mov
popa
push
mov
ret
or
inc
pop
xor
mov
xchg
inc
scas
rcll
mov
or
or
fs
cli
jge
jbe
sbb
das
cmpsb
push
push
dec
cmp
xor
add
cmp
mov
or
mov
mov
or
loope
js
pop
mov
add
jnp
pop
push
pop
push
push
push
sbb
sahf
cwtl
push
push
cltd
push
fsubrs
pop
cmp
adc
mov
lcall
mov
cwtl
mov
push
lods
test
pop
inc
in
jnp
sub
mov
cmpl
jne
sbb
jno
pushf
fsubl
and
pop
push
orl
inc
add
fidivl
dec
pop
xor
and
hlt
dec
aas
jo
out
cmp
jle
mov
and
sub
dec
fmuls
mov
cmp
fstpl
inc
cmp
in
ficoms
arpl
pop
ret
lcall
into
sub
cmp
add
pshufw
xchg
or
add
mov
cmp
inc
sahf
stos
ds
jno
jmp
jne
repz
pop
nop
sbb
sub
sbb
pop
arpl
fidivl
shl
dec
insb
mov
or
repnz
insb
inc
or
ret
mov
jo
or
sbbb
movb
push
sub
cltd
cmpsb
or
or
stos
jmp
inc
jo
jne
addl
into
or
insl
insb
aas
inc
add
out
or
rclb
and
cmp
jb
aam
pop
paddb
sbb
add
add
mov
out
lret
jne
and
hlt
mov
add
xor
clc
adc
jle
jecxz
adc
sub
cmpl
je
decl
hlt
xor
sub
aaa
sbb
adc
mov
cmp
push
push
cmp
sub
mov
add
add
sbb
aam
adc
add
add
add
sub
sub
mov
gs
push
or
in
js
and
aad
push
loopne
shlb
add
test
mov
pop
mov
push
add
pop
push
aam
sub
loopne
jae
dec
dec
pusha
mov
shr
out
cld
cmp
jnp
dec
ret
adcl
in
push
dec
or
sti
mov
jne
jg
add
xchg
shll
dec
hlt
add
inc
mov
negb
dec
cmpsb
push
lock
jo
and
dec
repz
cmp
adcl
dec
imul
push
test
mov
or
or
inc
mov
sub
cmp
dec
aaa
adc
aad
or
cld
push
lahf
mov
mov
add
push
push
sbb
adc
dec
adc
or
sub
pop
push
xor
into
hlt
cltd
xlat
pop
mov
sbb
mov
add
mov
in
mov
lea
testb
or
es
jb
sbb
or
inc
inc
outsb
lock
fiaddl
pop
cmpb
leave
jmp
pusha
pop
adc
lea
push
sbb
adc
or
enter
lock
bswap
lret
into
jne
ds
andb
sbbb
or
stc
jmp
ret
notl
xor
lret
inc
aas
push
jnp
sqrtps
pop
xor
sub
ljmp
xchg
ficompl
jns
adc
or
sub
push
das
call
jne
push
xchg
daa
pop
jnp
add
cmp
push
sbb
pop
orl
aad
xlat
cmc
ss
aaa
les
jae
dec
sarl
xchg
xor
pop
jl
dec
push
push
dec
sbb
sub
inc
sbb
mov
test
and
cmp
or
lods
sbb
sti
jnp
cmc
sub
cmp
ja
andl
inc
sbb
pop
sbb
leave
push
or
push
ret
loopne
mov
cltd
mov
shr
push
and
xchg
or
xor
xor
fisttpll
decl
add
sbbb
fs
xlat
clc
sbbb
cs
jmp
or
adc
repnz
and
or
mov
or
and
enter
mov
ret
int3
add
sarb
and
add
jne
lock
lea
jle
rolb
fdivl
ret
test
xor
lods
mov
jb
test
mov
pop
lcall
push
je
jmp
scas
imul
decb
xchg
inc
push
std
cld
adc
push
inc
std
inc
imul
cmp
xor
jne
mov
adc
mov
cmp
push
inc
popa
cld
or
cld
sub
mov
xchg
sqrtps
dec
rorl
adc
mov
mov
or
ret
cld
pusha
dec
adc
les
js
les
add
data16
jmp
xchg
mov
push
loopne
cmp
insl
inc
jnp
and
ljmp
or
mov
push
cmp
cld
push
add
xchg
xchg
shl
adc
or
or
dec
test
lock
adc
xchg
jno
adc
fistpl
sbb
add
scas
push
or
je
and
scas
int3
and
aas
sahf
adc
fistl
dec
inc
in
bound
cmp
pop
push
shrb
jne
mov
jbe
dec
jmp
add
stos
push
mov
loopne
lods
divb
or
push
sub
sub
enter
test
mov
cld
cmp
jmp
adc
xchg
cmpsl
add
dec
addr16
jge
pop
cmp
push
mov
or
inc
pusha
pop
in
jle
mov
loope
cmp
dec
pop
shll
je
xor
cltd
dec
jne
jle
cltd
pop
fiaddl
mov
dec
ja
in
jmp
sbbb
pop
push
push
fs
adc
test
ret
addb
test
inc
push
pop
pop
cwtl
out
nop
mov
and
mov
adc
inc
cmp
and
xor
adc
push
dec
xor
call
ss
dec
addb
shrb
loop
add
ja
mov
mov
push
ds
jae
outsb
sbb
and
rolb
xor
dec
adc
fldcw
jle
dec
pop
sub
xor
sti
sbb
sub
push
xchg
or
hlt
sbb
pop
xor
imul
jo
test
hlt
loope
ret
push
dec
push
xchg
or
sahf
add
dec
push
sbbl
mov
sbb
enter
dec
or
and
mov
adc
lds
pop
in
cmpl
mov
js
in
dec
jnp
xor
mov
mov
adc
gs
iret
inc
and
push
out
jb
and
mov
es
jmp
xchg
mov
in
push
mov
adc
pop
fsubl
mov
mov
mov
je
insb
mov
mov
leave
add
fs
lcall
add
push
push
test
pop
sub
mov
shr
inc
fimull
jbe
je
mov
cmp
dec
or
les
lcall
in
pop
clc
sub
sbb
push
shll
les
and
push
jb
xor
bound
jnp
adc
cmp
jge
adc
lods
pusha
ret
xor
call
cmp
push
bound
mov
ss
push
mov
add
inc
mov
dec
jne
fisubrs
dec
testb
stos
in
insl
xorb
mov
dec
dec
adc
push
dec
xor
dec
lock
fs
dec
adc
loopne
sbb
mov
movsl
or
sti
repz
inc
or
pop
je
jmp
or
pop
test
ja
dec
sub
mov
jmp
jns
xor
or
inc
sbb
add
movl
repnz
cli
jg
jmp
sbb
orl
icebp
and
jnp
and
bound
dec
mov
xor
push
inc
dec
scas
pushf
outsb
cmp
leave
dec
inc
outsb
pop
sbb
pop
pop
and
pop
push
sbb
and
and
inc
jae
dec
add
adc
inc
das
adc
jo
and
aas
and
or
and
test
fnsetpm(287
or
adc
loop
inc
orb
or
push
imul
jmp
dec
push
add
fbld
mov
jb
push
mov
lahf
pushf
push
mov
jl
dec
mov
adc
xchg
divl
add
cmpsw
and
cltd
adc
pop
xchg
mov
clc
insb
mov
push
xor
pushf
cmp
xchg
cmp
mov
test
xchg
push
sub
and
scas
lods
xchg
sub
mov
and
insb
test
je
ja
dec
je
dec
add
jno
add
arpl
jne
imul
das
sbb
aaa
int3
mov
nop
pop
lret
jle
mov
rcrb
movl
cmp
nop
inc
add
les
rorl
or
jle
rcrb
inc
js
js,pt
xor
dec
mov
addr16
call
push
xchg
sbb
stc
xor
ret
jmp
dec
jle
inc
pop
mov
add
xor
mov
add
cmp
cmp
lods
pop
adc
add
and
clc
lock
fcomip
jg
fs
test
movd
movaps
outsl
xchg
enter
shlb
jle
xor
int
add
lret
je
sti
mov
push
mov
jl
and
lret
or
aaa
mov
or
mov
mov
adc
jnp
mov
jg
adc
add
adc
push
add
adc
mov
popf
pop
add
imul
roll
add
shl
mov
jo
addps
int
add
ja
fcmovb
sbb
sbb
and
je
imul
cwtl
movsb
popf
cmp
imul
jp
cmp
dec
stos
add
daa
or
test
out
lds
push
mov
andl
adc
xchg
adc
pop
call
aam
pop
xor
aas
sub
sbb
ret
jge
mov
dec
and
jge
pop
sbb
insl
lods
pop
pop
fldl
imul
call
jb
pop
inc
mov
fmul
icebp
out
cmp
mov
xor
fnstcw
mov
adcl
jmp
loopne
add
or
jle
and
je
rep
mov
dec
inc
dec
pushf
xor
rorb
sbb
lea
daa
pop
adc
aaa
jno
xor
outsb
or
test
add
cmp
imul
push
insl
xorb
mov
add
out
clc
jb
push
out
stc
repz
push
pop
and
mov
add
dec
pop
pop
mov
jle
int
test
pop
push
sti
incl
rep
jmp
int3
mov
xor
jb
insb
add
jns
data16
xor
hlt
push
js
clc
mov
push
pop
and
scas
frstor
cmp
adc
inc
add
add
adc
dec
gs
push
movl
cmpsb
inc
add
add
mov
or
push
rorb
aas
iret
repz
test
cwtl
mov
sahf
out
in
inc
in
call
sahf
out
lock
hlt
clc
xchg
jno
clc
cld
mov
push
andl
fldenv
jmp
add
out
rcrl
pop
sti
sbb
insl
and
push
fcompl
jbe
push
lea
jl
cld
or
scas
loopne
or
subb
mov
lea
xchg
daa
in
xchg
xchg
xchg
stc
sub
inc
cmp
push
mov
jl
mov
out
add
push
ficoms
push
out
push
add
nop
dec
dec
lea
dec
rcrl
add
push
sahf
sahf
out
mov
inc
dec
push
out
out
pop
fs
aaa
sbb
out
sahf
sbb
sbb
adc
out
adc
or
int
nop
out
add
nop
inc
sub
out
or
aaa
push
push
mov
pop
nop/reserved
jp
dec
lods
pop
out
and
jbe
movsb
mov
cmp
pop
jecxz
or
mov
mov
fildll
lods
rep
or
idivl
bound
jmp
and
out
push
sbb
cmp
xchg
push
dec
add
xor
inc
aad
cmp
mov
inc
inc
mov
jle
mov
jmp
jp
je
mov
fildll
lcall
jne
mov
incl
jns
adcb
mov
mov
js
mov
fistpl
mov
sbb
je,pn
cmpsl
sub
xchg
shlb
mov
call
call
hlt
or
popf
iret
or
push
hlt
sbb
or
imulb
lock
pop
cmp
sub
loop
lods
hlt
fcomi
rcrb
arpl
in
outsl
jne
xchg
inc
dec
call
nop
cs
and
sarb
xchg
inc
mov
stos
pusha
mov
lcall
call
mov
or
adc
jne
add
and
xor
or
mov
lods
dec
popa
xor
inc
inc
jb
mov
adc
rorl
add
xchg
nop
in
das
and
mov
jge
incb
inc
inc
cmp
cmp
iret
pushf
and
add
adc
jns
jns
inc
arpl
dec
adc
repnz
cmp
lret
das
adcl
pop
or
pop
add
add
xchg
js
add
adc
mov
lcall
aaa
add
and
and
lcall
hlt
cmp
sarb
andl
rclb
call
mov
add
cmp
ret
insl
adc
pop
jnp
mov
or
dec
leave
sbb
or
or
inc
sbb
cmp
mov
mov
adc
ret
cmp
pop
mov
data16
lret
jne
sbb
cmp
jg
jmp
adc
or
testl
out
andl
pop
movl
mov
cmp
pushw
and
seta
je
inc
test
adc
pop
jo
je
add
repz
aaa
or
mov
test
ret
hlt
leave
xchg
and
scas
or
jae
hlt
repnz
inc
push
xchg
or
jne
lea
sub
dec
jp
add
sbb
orb
mov
shll
jne
insb
ja
shrb
je
sub
push
out
inc
cmp
jecxz
jmp
pop
cmc
cmp
jg
cmp
ja
adc
mov
movb
and
xor
gs
mov
mov
ljmp
dec
cli
or
add
jmp
or
mov
inc
jl,pt
lock
scas
jbe
mov
fcmovu
xchg
inc
nop
sub
add
jmp
pushf
call
dec
mov
mov
dec
dec
mov
inc
cmp
jb
lret
ret
das
fisubrs
jne
dec
ret
cmp
or
add
dec
ror
add
mov
cmp
adcb
xor
cmc
xor
in
jg
xchg
icebp
ljmp
jge
cmp
jb
lea
cld
outsb
mov
cli
and
int
jg
shlb
push
cld
jne
mov
push
cmp
jne
dec
rcr
cmp
jne
call
addb
fsub
or
divl
adc
push
dec
jmp
adc
jmp
jns
sahf
cmp
std
jmp
cld
cld
es
cltd
ret
pmaxub
xchg
ret
adc
scas
jb
push
inc
hlt
in
cmc
push
movb
shr
stc
mov
or
mov
adc
jo
add
shl
inc
or
adc
shl
inc
inc
mov
aam
orb
cmp
scas
pop
cmp
iret
and
lret
in
dec
lret
pop
aad
mov
nop
pop
mov
or
dec
dec
xor
or
or
rcrb
andl
sbb
inc
addl
pop
rorl
jmp
lea
jno
movl
xor
jb
loope
cwtl
sub
iret
mov
adc
cmp
jg
add
jl
jmp
mov
mov
dec
sub
push
xorb
jns
push
push
push
popa
repnz
xchg
fadds
test
mov
jmp
push
mov
sti
and
xor
inc
push
push
pop
div
and
and
cmp
es
sbb
test
pop
clc
je
sbb
or
lods
pop
mov
pop
adc
push
mov
add
pop
mov
sub
cmp
adc
xchg
mov
adc
pop
mov
out
sub
imul
cmp
loope
xchg
imul
xchg
mov
and
gs
outsl
adc
xor
push
arpl
movsb
out
cmc
rcll
add
push
rolb
sub
xchg
mov
pusha
mov
push
dec
dec
or
jl
or
lods
push
mov
aaa
es
or
xlat
pop
pop
cltd
pusha
mov
sbb
xor
or
cmp
inc
rorb
cmp
jo
outsb
pushl
orl
jmp
adc
jne
sub
pop
inc
jl
mov
or
out
adc
cmp
push
xor
sub
mov
pop
in
or
and
adc
mov
adc
pop
jne
dec
add
add
lds
sbb
xchg
and
dec
test
add
lret
sub
jmp
fidivs
lret
sub
cmp
and
mov
xor
cmp
jae
fisttpl
loopne
daa
movsb
xor
lock
mov
fldl
push
je
fs
and
cltd
pop
cs
cld
ss
fcos
and
mov
sbb
rorb
or
cmp
in
jne
jbe
add
inc
mulb
or
and
lods
ss
into
mov
lods
mov
test
xor
sbb
inc
das
mov
mov
pop
aaa
js
push
xchg
cmp
sub
dec
loop
add
popf
adc
sub
sub
popa
push
sub
add
cmp
loop
mov
cmp
icebp
pop
cmp
jp
jge
stos
mov
pop
add
mov
dec
or
adc
jmp
jno
jbe
push
repz
or
push
push
data16
and
ljmp
jne
idiv
inc
fs
xchg
cs
adc
sbb
sub
push
adc
adc
pop
shrb
mov
mov
inc
inc
data16
or
outsb
fmull
dec
push
or
rcl
loop
fstpl
cmp
mov
and
sbb
adc
ds
pop
mov
lret
dec
jmp
es
sbb
cmp
dec
cmp
push
es
push
jmp
das
xchg
shll
out
inc
scas
sub
int
iret
push
cmp
jno
lock
xchg
sub
push
xchg
ds
cmp
inc
lea
decb
loop
adc
fcoml
sub
add
add
inc
or
push
inc
dec
ret
pop
leave
add
or
sub
inc
jbe
add
sbbl
push
or
or
addb
dec
adc
sbb
ret
or
dec
shlb
test
daa
adc
fidivs
sub
in
adc
push
xchg
inc
cmp
insl
jne
add
int
hlt
je
inc
cmp
jb
lea
xor
ja
fs
xchg
xchg
fisubrl
in
add
xchg
lcall
adc
test
jb
fadd
dec
add
and
xor
mov
daa
lock
mov
lods
mov
popa
jnp
and
ja
add
repnz
mov
add
mov
sbb
scas
pop
cmp
jmp
pop
and
adc
push
dec
enter
push
inc
sub
pusha
push
push
mov
dec
rolb
jns
cwtl
xor
or
stos
jcxz
mov
data16
add
or
jo
xchg
sbbl
push
sbb
mov
test
fimuls
shlb
call
jge
or
dec
and
mov
loop
mov
stos
test
add
iret
mov
cld
std
add
xchg
dec
insb
add
pop
ss
in
and
or
test
lea
mov
lret
je
inc
stc
xlat
rcrl
adc
adc
ja
sbb
jno
loopne
xor
push
daa
test
and
add
ja
mov
test
cmpl
push
pushl
jp
sbb
shrb
pop
data16
lods
fwait
jle
push
xchg
fdiv
xchg
aad
push
adc
addr16
xor
pop
call
int3
push
pusha
and
ds
pop
ret
shrb
jbe
icebp
or
pusha
jb
pop
add
shld
fiadds
jb
fcoml
movsb
pop
xor
repnz
mov
mov
mov
fcompl
repz
fwait
test
fsub
in
or
xor
jno
jmp
call
xor
sub
mov
pop
je
push
pop
push
push
shlb
push
sub
rorb
fsubrs
ljmp
sbb
sub
notb
mov
xor
ja
mov
popf
pop
cwtl
outsb
roll
test
js
jo
adc
loop
das
loopne
out
add
push
ret
and
jl
je
fisubrs
sbb
ss
mov
push
iret
jp
and
xlat
test
mov
xchg
push
add
push
sub
and
cmpsb
fdivrl
xchg
rcrl
cld
mov
xor
inc
mov
adc
sbb
mov
movsl
sbb
cltd
testb
orl
dec
and
imul
sbb
pop
push
pushf
pop
rcrb
in
and
mov
jp
outsl
gs
and
cli
fstps
icebp
mov
jb
mov
fistpl
int3
add
pop
stos
test
cmp
jne
or
dec
loopne
xchg
mov
adc
iret
add
inc
mov
adc
push
push
mov
sub
js
adc
nop
sbb
rcl
lods
shrl
xchg
mov
dec
mov
push
cmp
pop
movsb
mov
mov
jo
in
mov
mov
lods
xchg
sbb
mov
and
push
pop
push
jle
inc
cwtl
xor
incb
repnz
pop
jp
mov
cmp
xorl
push
daa
mov
sbb
mov
adc
adc
adc
shlb
in
add
xchg
jnp
mov
jmp
xchg
and
xlat
andl
mov
das
or
pop
jg
push
jl
insb
mov
mov
mov
pop
mov
out
add
cmp
inc
fstp
test
add
adc
enter
mov
add
add
inc
movsb
cmpsl
push
mov
or
xlat
ss
pusha
jmp
xor
hlt
cmp
fcoml
cmp
sarl
into
jbe
dec
dec
bound
and
in
lock
adc
adc
fwait
mov
notl
cmp
idivb
xor
rcr
in
dec
dec
or
cwtl
dec
mov
adc
push
push
pop
jle
inc
mov
outsl
pushl
cmp
je
movzbl
add
sub
je
sub
data16
ret
lea
repz
imul
jo
pop
add
jb
cmp
add
daa
popa
and
xor
add
fs
out
sbb
nop
out
add
lcall
flds
add
iret
enter
xchg
jns
sbb
pop
push
pop
jb
inc
sahf
dec
push
or
or
add
sbb
dec
or
cmp
xchg
sub
or
lret
sbb
or
add
in
lcall
cmpb
cwtl
and
enter
ja
mov
rsqrtps
cmp
movsl
adc
pusha
adc
sbb
adc
adc
adc
add
dec
in
repnz
add
enter
adc
adc
sbb
inc
ficoms
addr16
cmp
push
push
pop
rcrb
pop
xor
sbb
lcall
in
sbb
add
sbb
sbb
inc
sbb
sbb
cmpsb
repnz
jb
sbb
test
cmp
enter
sbb
add
push
inc
push
pop
pop
and
pop
and
add
add
sub
cmp
mov
in
movl
incl
xchg
aam
mov
std
add
cmp
je
out
out
lcall
rol
lea
enter
aad
cmp
mov
out
fwait
out
xchg
inc
outsb
or
add
call
rcll
repnz
adc
sahf
xchg
add
inc
jmp
sbb
inc
or
sbb
nop
cmpsb
repnz
in
in
jns
pop
insb
in
cltd
mov
nop
addr16
sahf
out
out
inc
push
inc
push
jge
sbb
xor
cmp
lock
enter
icebp
add
mov
repnz
and
in
std
repz
std
jnp
aam
hlt
hlt
rorl
pusha
hlt
fwait
pusha
iret
enter
cmc
inc
add
sbb
jg
testb
cmp
cmp
rolb
sub
clc
clc
cltd
seto
jb
stc
inc
stc
lock
in
jns
cli
cli
iret
lret
pusha
sti
sbb
stos
cld
xchg
mov
je
cld
push
vmwrite
mov
xor
in
sahf
sub
adc
aad
or
ret
or
or
ss
lahf
push
in
pop
mov
pop
cmpsb
dec
xchg
or
imul
mov
std
sti
in
in
fisubrl
mov
stc
daa
xchg
sti
orb
out
repnz
outsb
call
mov
inc
sub
sbb
pop
jmp
jmp
inc
pop
xchg
pop
in
add
cli
popf
cli
sbb
js
out
out
jno
sbb
out
cltd
push
lock
cli
push
cli
imul
stc
repz
rolb
cltd
sar
xchg
or
push
stc
stc
xchg
inc
pop
dec
fstpl
testl
negl
fwait
in
xlat
enter
adc
mov
mov
clc
cmp
lret
sti
sti
cltd
add
pop
mov
insl
push
in
or
clc
mov
sbb
out
dec
and
lcall
mov
loop
loop
xchg
inc
pop
xchg
mul
pop
shl
and
jg
nop
or
mul
sbb
out
inc
pop
and
out
inc
andb
sbb
sti
imul
ljmp
negb
pop
and
mov
xchg
imulb
inc
add
insb
out
out
pop
push
jno
jno
idivb
cmp
pop
and
add
push
push
adc
loop
shl
jno
cmc
and
mov
xchg
cmc
sbb
pop
bnd
pop
dec
cmc
cwtl
xlat
movsl
test
fwait
jbe
jne
and
seto
clc
jecxz
stc
sub
mov
popa
imul
cmp
pop
pop
jne
or
sub
push
hlt
sbb
lock
data16
hlt
divl
fstpt
jge
jo
sti
in
or
adc
iret
movsl
imul
loope
loope
mov
repz
dec
pop
and
scas
repz
xor
inc
or
imul
mov
mov
and
push
sub
bnd
jmp
je
dec
xchg
repnz
inc
add
sbb
arpl
cmc
and
pop
je
dec
add
and
xchg
inc
add
sbb
outsb
sub
js
divb
dec
and
xchg
icebp
jb
test
xchg
fcompl
lret
cmc
cmc
cmc
and
icebp
jecxz
mov
aam
ffree
lock
push
jns
sbb
inc
jb
sbb
jne
pop
repnz
xor
scas
jne
and
test
xchg
fldl
dec
cli
imul
add
sub
out
ret
mov
inc
ds
add
repnz
add
ja
int
stos
add
jp
push
addl
sub
adc
jne
or
loopne
cmp
dec
add
sahf
insb
loop
sbb
dec
add
dec
cmp
je
fsin
pop
ljmp
sub
push
cmp
fwait
insl
mov
pop
mov
test
sahf
out
cs
lahf
data16
jle
mov
pop
pxor
repz
dec
pusha
insb
cmp
fnstcw
lea
icebp
dec
rol
les
imull
inc
dec
outsb
rorb
sbb
push
shrl
or
int3
in
push
test
jg
clc
das
add
test
pop
aam
lock
movsl
add
jge
push
or
stos
addl
pop
mov
push
enter
or
adc
inc
xchg
mov
or
cli
bound
push
movsb
lcall
xchg
mov
sbb
fdivrs
fmuls
test
testb
rep
cli
sub
subb
loopne
sub
sub
add
or
adc
test
mov
sub
push
sub
jp
mov
sahf
jge
es
pusha
add
adc
mov
mov
in
inc
je
lret
sbbl
rolb
js
cltd
sahf
test
lcall
mov
mov
jne
insl
or
popf
test
test
pop
mov
and
and
dec
inc
jle
pop
inc
inc
inc
inc
loopne
movsl
xor
cmp
mov
jmp
jb
cmp
imul
or
and
gs
sbb
in
push
sbb
cmp
dec
outsl
cmpsb
or
add
test
sbb
repnz
je
pop
or
add
sbb
pop
cmp
enter
add
xor
orps
push
push
mov
xchg
sahf
movsb
sarl
pop
loop
movsb
push
inc
jmp
xor
pop
sarb
fimull
inc
rolb
mov
xor
add
mov
pop
cmc
int
adc
or
xchg
mov
adc
stc
aad
sub
jecxz
lret
lods
mov
adc
jne
mov
mov
inc
inc
cmp
push
push
jmp
sbb
or
dec
outsb
out
jns
mov
jg
popa
out
dec
mov
fcoml
pop
push
cmp
in
lcall
push
xchg
cwtl
ja
and
mov
scas
push
add
adc
pop
add
jno
out
push
sub
dec
fmull
ret
add
adc
enter
out
and
std
testb
pop
pushf
cmp
clc
in
sub
or
je
xchg
ret
roll
shr
stos
add
testb
incb
cmpsl
pusha
or
sahf
add
mov
or
rcrl
test
adc
dec
jne
add
mov
mov
inc
and
adc
adc
pop
add
test
in
iret
aam
incb
xor
das
mov
repnz
cmp
mov
mov
incl
inc
decl
jne,pn
xor
test
shlb
mov
aaa
jbe
push
cltd
pop
idiv
fld
in
lret
pusha
or
mov
out
mov
and
adc
rol
dec
dec
bnd
cmp
jae
dec
out
lods
add
lret
mov
jbe
adc
xor
mov
dec
int3
test
pop
sub
adc
mov
movsb
pop
out
flds
jg
add
gs
sbb
add
call
or
sbb
sbb
dec
dec
je
push
push
jne
test
jmp
mov
pop
insb
adc
pop
mov
mov
mov
decb
push
movsb
stc
es
mov
inc
pop
cmc
sbb
and
cmp
das
sbb
test
lea
and
rolb
xchg
std
filds
pushf
cltd
sbb
fildll
shl
stc
mov
xor
add
mov
cltd
pusha
pop
inc
repz
dec
jp
push
adc
xchg
les
fisubl
mov
inc
popa
movsb
mov
stos
inc
jne
adc
mov
cmp
jle
sub
sub
insl
sbb
fnstsw
or
aas
jge
sub
push
push
cltd
pop
idiv
pusha
mov
pop
xor
xor
xchg
inc
out
cmp
gs
push
xorl
jmp
sbb
mov
mov
inc
test
imul
push
mov
dec
add
scas
inc
adc
fs
jbe
insl
mov
orb
sbb
pop
ficoms
rclb
insb
sub
inc
sbb
jecxz
repnz
sbb
and
adc
sbb
or
add
xchg
test
and
pop
cmp
in
xorl
loop
adc
sti
bound
fs
sbb
aam
sub
insl
pop
add
les
loop
je
pushf
push
mov
sbbl
loope
aas
fdivp
inc
push
jmp
jge
pop
je
sbb
aas
push
enter
fs
jg
pop
push
lcall
adc
arpl
insl
outsl
mov
jl
mov
pop
je
dec
inc
mov
jne
mov
cmp
out
mov
or
lretw
sahf
adc
loope
push
cmp
sub
popl
daa
xchg
or
and
push
icebp
jle
mov
or
sbb
out
aaa
subl
inc
out
dec
inc
push
or
stc
pop
mov
movsbl
adc
lcall
push
push
mov
icebp
adc
jp
and
add
lret
sub
push
je
mov
push
movsb
ss
nop
xchg
cmc
cmpl
xor
insl
adc
sub
add
push
push
cld
ret
cmp
sbb
push
adc
mov
loopne
adc
adc
or
out
call
addb
push
stos
das
bound
out
mov
xchg
icebp
xor
add
ljmp
ret
xchg
rorb
adc
sub
push
pop
or
push
es
fdivs
sbb
xchg
sbb
loop
into
ds
pop
sub
mov
aam
add
fadds
cmpsb
decl
inc
jg
cwtl
icebp
inc
or
lea
xchg
xor
xor
jne
jg
and
iret
inc
inc
cmp
je
cmp
mov
cli
orb
imul
add
outsl
adc
lods
fidivrl
dec
je
popa
sbb
sbb
sbb
ss
pushf
es
inc
iret
mov
test
mov
incl
fdivr
jl
rcrb
sbb
ljmp
jnp
lcall
mov
pop
cmp
cwtl
xor
mov
or
mov
out
sbb
or
xchg
dec
insb
ret
add
push
sti
and
rolb
adc
dec
sub
cld
mov
mov
addr16
test
rorb
adc
test
mov
and
cmp
je
ret
add
mov
push
and
shll
faddl
sub
mov
jno
add
push
pop
es
shlb
call
imulb
add
sbb
fistpl
lods
sbb
dec
movsb
jb
shll
push
pop
jns
in
in
pop
lret
mov
mov
sahf
das
fildl
add
xor
ror
add
into
xlat
pop
push
rcll
mov
sub
and
jmp
and
lcall
movsl
add
add
push
jmp
das
dec
jmp
movl
jne
adc
push
sbb
addr16
and
pop
cmp
push
ljmp
push
imul
in
xchg
call
popa
pop
sbb
movsl
dec
add
faddp
rorl
out
sbb
push
adc
push
les
mov
lahf
jge
rcll
push
mov
and
ret
push
aaa
push
roll
xchg
stos
sub
call
push
inc
or
or
pushf
idivb
sbb
inc
push
jmp
cmp
in
mov
inc
or
mov
inc
outsb
clc
test
pop
mov
jl
in
orl
jge
loope
add
cltd
das
and
mov
clc
xor
pop
add
pop
or
es
scas
call
aas
jmp
adc
lods
pop
dec
test
mov
add
jmp
jne
add
xor
cmp
and
dec
sahf
jmp
jle
dec
jnp
add
push
xchg
inc
inc
adc
inc
adc
mov
ret
fcoms
movsb
icebp
shrb
clc
testb
mov
sahf
into
in
inc
cltd
or
mov
pop
loopne
lock
lock
aaa
negl
mov
mov
and
mov
subl
cld
jmp
pop
arpl
sub
ret
pop
xchg
push
jno
push
bound
fs
jmp
or
push
pop
adc
lcall
jae
les
cmp
push
cmp
insl
arpl
scas
sub
movsb
cld
adc
mov
mov
xor
daa
or
or
or
ja
idiv
inc
adcb
xchg
or
into
dec
in
push
in
and
jbe
js
adc
push
cmpb
adc
mov
js
adc
jne
mov
inc
das
adc
push
pusha
jbe
lods
xor
jg
insl
or
jecxz
xor
call
jp
cmp
mov
js
insl
clc
and
ja
popf
sahf
enter
sbb
shl
jmp
push
push
cmp
daa
test
sbb
or
xor
pop
sub
push
mov
jmp
mov
imul
inc
dec
jg
pop
sbbl
add
cwtl
mov
sbb
or
adc
jbe
fs
push
xchg
add
push
xor
push
sbb
imul
adc
xchg
cmpb
jbe
loope
pusha
cmp
mov
test
push
xor
fsubl
dec
fs
cmp
lock
xchg
faddl
ror
jo
popa
push
hlt
push
jge
cli
inc
mov
sbb
outsl
jmp
xorl
xorl
fdiv
push
mov
fstpt
cmpsb
cld
add
sbb
and
inc
cmp
jo
pop
data16
repnz
rcrb
mov
inc
fisttpll
loopne
fidivrs
jg
adc
mov
cmp
adc
or
icebp
enter
push
jmp
shlb
mov
sbb
pop
call
dec
pop
xchg
lock
fadds
in
pusha
or
add
call
enter
sbb
sahf
inc
pop
gs
sbb
sub
xor
or
incl
pop
notb
sub
mov
mov
imul
enter
push
test
gs
add
ret
inc
adc
or
xchg
xorl
mov
adcl
xchg
shlb
jecxz
insb
push
push
fdivs
lea
loopne
out
into
or
sbb
and
call
pop
mov
pop
cltd
or
and
xor
add
jecxz
stos
xchg
sarl
je
out
test
xor
push
dec
or
pop
mov
testb
push
fs
dec
mov
lock
sti
sbbb
bound
lea
dec
xchg
lock
es
or
mov
pop
cmpsl
cmp
psubb
inc
pop
fcomps
inc
push
and
add
push
cmp
inc
mov
out
add
add
jle
sub
mov
and
and
repz
cwtl
cwtl
mov
push
call
loopne
cli
sbb
inc
dec
sbb
sarl
inc
daa
dec
sub
or
add
adc
test
cmp
push
mov
out
jbe
lods
lret
test
sub
in
mov
in
push
mov
sbb
cld
lods
cmp
push
or
mov
and
popl
jo
lods
cmp
add
inc
clc
push
dec
pop
test
push
movl
cmp
xor
sarb
inc
and
idivl
adc
loope
mov
adcb
push
nop
in
sub
loopne
lock
dec
xor
or
and
pusha
enter
cld
sub
test
or
cmp
mov
push
or
sbb
andl
mov
inc
bound
pop
cmp
lock
pop
add
shl
or
inc
stos
add
push
insb
inc
pop
sub
mov
push
add
testl
daa
or
dec
dec
sbb
add
pop
test
mov
rcrb
outsl
lock
outsb
test
mov
push
idiv
lcall
movb
outsl
and
lea
sub
mov
ja
sub
and
xchg
or
mov
faddl
int
xchg
or
aam
cmp
push
repnz
push
insl
mov
xchg
popa
sub
sbb
cmp
push
cmp
adc
nop
fildl
testl
mov
add
push
orb
mov
mov
movsb
lods
jmp
and
je
and
mov
adc
aad
inc
jp
mov
mov
dec
rcrb
mov
lahf
jbe
ja
add
lea
sub
ja
lret
orb
jmp
cmp
push
and
and
push
sbb
shr
pop
inc
retw
or
fisubl
cli
sbb
or
ja
mov
lea
mov
jg
or
ja
subb
jo
stos
lea
jp
sub
xchg
add
push
mov
xchg
subb
sub
cmp
push
lahf
mov
mov
cld
test
repz
cld
jecxz
aas
jmp
sub
adc
xchg
or
mov
mov
mov
jmp
push
sub
fsubl
mov
pop
xchg
inc
cmp
std
jne
lock
xor
jmp
sub
stos
xor
cmp
out
push
sbbb
jge
xorl
out
dec
inc
loopnew
or
fiaddl
jnp
lods
and
xor
dec
mov
adc
mov
mov
jb
or
push
mov
fs
jbe
fsub
push
add
add
xor
js
mov
push
inc
rolb
cli
push
sbb
or
push
call
call
jne
mov
test
rcll
cmp
pop
leave
inc
jg
pop
lods
inc
lea
or
js
jmp
dec
mov
xchg
add
sub
hlt
push
sbb
fs
andb
cmp
lods
and
jbe
mov
inc
shrb
push
push
inc
push
cld
std
dec
jge,pn
add
jb
mov
xor
inc
jmp
inc
jle
push
jg
sub
adc
mov
inc
mov
inc
inc
inc
dec
mov
repz
inc
imul
insl
idivb
add
mov
mov
push
inc
movsl
lods
xor
inc
push
mov
inc
cld
or
inc
dec
jne
test
movsb
mov
hlt
pop
cltd
add
gs
jnp
test
xor
pop
and
cwtl
test
sbb
cmp
call
daa
add
adc
adc
pop
push
clc
rorl
or
and
mov
fisubs
rorb
loopne
add
sbb
ja
out
add
pop
loopne
cld
aas
sbb
dec
sbb
jbe
inc
xchg
cltd
ss
out
cmp
popa
sbb
cmp
sub
xlat
cli
push
test
movsl
lods
lods
insb
jns
lock
xor
mov
ss
or
insb
mov
cmpsl
adc
ja
mov
or
pop
sub
jmp
xor
add
mov
mov
fwait
xlat
add
pusha
push
jne
push
sub
jmp
adc
jno
es
jno
inc
inc
sbb
xor
imul
or
cmp
mov
xlat
lret
cmp
std
test
sub
and
pop
movl
jnp
mov
cmp
mov
push
stos
daa
js
pop
pop
sbb
mov
int
jo
ds
popf
inc
mov
out
pop
pop
sbb
jnp
sub
inc
inc
sbb
sub
inc
xchg
int3
mov
sub
and
jnp
nop
adc
aam
pop
cmp
push
push
jne
lea
ficomps
ret
pushl
out
jle
or
iret
mov
clc
pusha
or
fs
in
push
push
mov
cmp
mov
add
or
sbb
xor
in
mov
push
add
xchg
adc
mov
mov
lea
cmp
or
andl
cmpsb
or
movaps
idivl
sbb
or
dec
add
push
sbb
sbb
sarl
dec
xor
cmp
stos
je,pt
push
mov
stos
add
mov
cmp
daa
push
mov
jno
pop
jbe
test
dec
dec
pop
xchg
push
sub
jle
loope
or
sbb
jo
loope
and
add
sarb
je
jmp
push
sub
jno
and
scas
jbe
pop
mov
sbb
xchg
mov
push
push
pop
loopne
cmp
sarb
mov
push
mov
xor
pop
scas
sbb
xorb
ljmp
dec
loopne
add
mov
cmc
cld
mov
cs
add
int
cmpsl
out
call
mov
addb
inc
nop
loope
sub
push
push
push
mov
pop
or
aas
push
decb
loope
pop
xchg
idivb
add
pop
xorb
pop
dec
repnz
orl
inc
pusha
or
daa
sbb
enter
or
lods
add
push
cld
popf
or
cmp
out
add
and
repnz
mov
mov
orl
les
in
dec
add
popf
mov
jg
xor
in
lret
fnstcw
fimuls
inc
sub
dec
xchg
mov
add
lods
push
clc
rorb
push
dec
jl
ret
dec
push
add
lods
add
aas
cmp
movsb
pushf
ljmp
in
and
ja
or
jo
or
mov
xor
not
movsb
rcr
movsl
xor
sub
xor
mov
mov
rep
ret
shl
sbb
lods
in
push
movsb
sbb
cmp
in
push
inc
inc
dec
xor
inc
pop
cmp
sbb
pop
sbb
adc
jmp
add
jbe
aad
lahf
insb
and
pop
cmp
je
jle
xchg
pop
sbb
in
popa
lea
sub
dec
add
subl
inc
xor
lock
sub
cs
fnsave
jle
das
xchg
xchg
lret
pushf
cwtl
xchg
pushf
cmpl
jbe
mov
lcall
je
lods
cmpsb
and
daa
test
cltd
jno,pt
test
dec
and
dec
cmc
ja
mov
mov
and
mov
jge
jb
mul
inc
mov
or
mov
mov
mov
push
pop
xchg
sbb
xchg
mov
enter
sbb
pop
das
mov
ret
inc
sbb
jp
xchg
pop
repnz
sub
andl
mov
lea
addr16
and
sbb
mov
xchg
arpl
std
lods
lods
mov
sbb
or
fcoml
lods
popf
aam
sarb
clc
mov
in
popf
enter
rolb
mov
test
fisttpll
add
sarl
enter
dec
cld
adc
cmp
pop
aam
xchg
or
inc
mov
push
nopl
jno
test
loope
cmpsb
test
mov
and
pop
movsb
popa
push
push
pop
xchg
in
xorb
loopne
test
pop
sarb
pop
dec
cmp
pusha
adc
inc
shl
add
or
bts
jmp
mov
cld
aam
loopne
or
mov
jae
js
bound
pusha
loop
jae
adc
inc
lea
push
aas
push
adc
mov
or
daa
pusha
mov
jns
mov
xchg
or
push
and
jns
out
adc
add
mov
pusha
adc
mov
push
add
push
and
cmp
mov
out
push
pop
nop
hlt
movups
add
dec
mov
or
mov
sahf
out
push
movsb
lods
mov
les
pusha
adc
xlat
mov
inc
lock
push
or
or
mov
aaa
cmpsb
mov
mov
cmp
adc
pop
cs
push
xchg
lock
fwait
or
inc
jmp
dec
js
push
xchg
push
or
and
and
cli
dec
cwtl
test
dec
scas
add
and
jne
and
fidivrs
es
rorl
jge
inc
mov
andb
lods
mov
push
movsb
lret
test
mov
xor
arpl
lea
adc
add
es
pop
xchg
js
inc
and
adc
addr16
inc
and
add
add
add
sub
or
mov
push
fisttpl
testl
lea
adc
sbbl
mov
or
mov
addl
daa
and
adc
inc
orb
std
push
pop
xor
lret
or
inc
or
sbb
cmc
je
insl
dec
sbb
pop
dec
adc
and
jno
sbb
jl
or
lret
cmpsb
adc
inc
add
sbb
sbb
pop
andb
jne
jo
mov
or
push
adc
and
daa
sbb
add
push
jmp
add
adc
loop
pop
pusha
add
cmp
add
xchg
or
push
mov
lds
cmp
or
dec
sbb
icebp
pop
sbb
outsl
push
decb
xor
shll
mov
ret
lds
shr
mov
mov
mov
ja
enter
xchg
out
ffree
pop
sub
and
sub
clc
fadd
loopne
lods
push
mov
es
fistps
push
mov
xor
push
push
inc
inc
and
push
pusha
in
inc
lock
out
rolb
inc
and
test
push
jp
daa
xchg
inc
clc
les
adc
jno
mov
inc
mov
add
mov
adc
or
adc
or
push
dec
jg,pt
push
pop
add
mov
fmull
das
jecxz
bound
mov
inc
cmp
outsb
adc
add
pop
push
pop
aad
and
shl
inc
imul
inc
dec
push
add
mov
xor
hlt
sub
ret
sub
and
je
pop
imul
mov
js
or
xchg
inc
mov
xchg
or
ja
or
test
xor
cld
dec
loopne
push
dec
or
inc
test
fdivl
jecxz
and
adc
loop
push
test
xor
adc
add
xlat
ljmp
jbe
push
inc
andl
call
xlat
xor
in
or
inc
ja
mov
pop
sbb
sbb
adc
pop
divl
in
or
inc
inc
push
icebp
pusha
ds
mov
lods
clc
dec
xchg
fdivrs
push
push
sti
mov
addr16
aam
adc
ljmp
jns
cmp
sbb
adc
loopne
test
push
loopne
cli
add
add
inc
push
jp
mov
xor
je
sbb
aas
mov
xchg
add
adc
add
push
sub
push
push
push
lock
sbb
mov
adc
inc
subl
jo
data16
lods
imul
faddl
mov
push
mov
pop
dec
rorl
xchg
dec
mov
lea
push
jg
sbb
bnd
js
ret
sahf
or
aaa
dec
xor
sti
shlb
lods
in
or
aam
xchg
lret
in
fadd
fmuls
in
ds
cmp
out
adc
mov
sub
out
mov
test
sbb
xchg
dec
dec
leave
movzwl
test
adc
xchg
out
in
or
orb
sarb
adc
dec
icebp
jnp
adc
imul
cld
jbe
ficompl
jl
dec
icebp
mov
loopne
dec
sbb
sar
pop
mov
cmp
cmc
outsl
or
bound
mov
add
sti
or
aam
jae
pop
fdivr
fsubs
outsb
adc
sub
dec
or
je
or
and
je
sbb
pushf
mov
or
add
setg
jb
dec
sbb
sub
sub
loopne
cmpsl
xor
or
aam
mov
aas
mov
and
lock
lret
pusha
xchg
loopne
or
ja
movsl
mov
mov
xchg
or
orb
jbe
movsl
hlt
hlt
stc
ss
push
sbb
add
mov
test
outsb
loope
insb
cmp
pop
ret
mov
sub
adc
fsubrl
xchg
ss
or
xor
jns
mov
jg
dec
xor
sbb
xor
fnstcw
arpl
or
imul
jae
cmc
jne
js
rorl
aaa
test
xchg
movsb
mov
xchg
clts
jbe
lea
pop
icebp
adc
rorb
push
sbb
jle
outsb
leave
mov
pop
push
or
nop
push
ret
mov
int
inc
mov
fdivr
cmpsl
adcl
mov
lock
test
je
push
movsb
inc
in
jae
scas
testl
mov
jge
pop
das
mov
adcl
pop
jo
clc
ds
dec
and
in
pop
leave
sub
or
or
sub
in
sub
sbb
fildl
add
xlat
imul
inc
cltd
add
push
insl
cmp
je
xchg
add
jo
rcr
notb
lret
clc
gs
addb
cmp
je
add
pushf
push
test
sti
ss
fstpt
or
pushl
lods
aas
push
fistl
push
loope
jge
lcall
mov
inc
ss
pushf
mov
sub
xchg
int3
push
xorb
add
push
pop
je
xor
or
pop
push
sbb
dec
add
sub
dec
jo
add
add
push
inc
mov
into
add
addr16
pop
xor
lret
je
cmp
je
test
arpl
popa
fsubrs
enter
cmpb
sbb
lds
test
mov
add
je
pushw
movsb
dec
andl
jb
rcrl
lds
jecxz
add
pop
or
add
ret
mov
mov
jne
mov
jmp
cmp
jle
sbb
out
pop
insl
cmpl
lock
lds
int
or
mov
adc
call
cld
adc
and
lock
inc
hlt
dec
sub
cmp
adc
or
faddl
and
mov
fstpl
push
pop
xchg
cmp
inc
call
push
cld
sbbl
and
xor
mov
inc
inc
sbb
add
push
push
jne
jae
addr16
decb
mov
test
bound
add
adc
push
pop
data16
push
adc
in
push
lret
stc
scas
call
push
xor
dec
je
adc
outsb
cmpsb
or
jmp
out
or
jle
aaa
int3
je
cltd
sub
dec
sub
add
push
pop
jl
jae
add
rolb
jecxz
adc
lds
cmpsb
jmp
inc
ds
mov
je
test
jmp
clc
or
jne
and
lea
fstps
or
push
inc
ljmp
push
push
adc
push
pop
push
lock
xchg
clc
sahf
add
out
adc
lret
mov
dec
jmp
pop
xchg
sub
inc
cmp
ljmp
and
addb
jmp
lcall
add
inc
jmp
cmpsl
ljmp
loope
or
mov
mov
xchg
cwtl
std
ss
add
sub
icebp
xchg
dec
mov
test
lcall
xor
sub
push
je
fwait
sbb
sub
push
test
cmpsb
and
mov
call
sub
sub
pop
sub
shl
push
jp
test
dec
fdivrl
lea
or
into
jns
pop
stos
lcall
jbe
dec
push
cs
popa
sbbl
jne
push
pusha
pop
jno
aaa
cmp
add
add
fistps
rcll
xchg
add
lret
lea
sub
xor
pop
jg
or
sbb
lea
clc
sti
sub
pusha
rcll
pop
icebp
pop
or
sarl
je
mov
xlat
adc
adc
cld
out
movsl
daa
pop
mov
xor
sahf
mov
sub
movsb
cmp
xchg
dec
daa
sub
sub
mov
es
hlt
xchg
stc
cmp
roll
cmp
jno
push
scas
inc
and
xchg
push
mov
mov
pop
rolb
andb
rol
test
sbb
cmc
mov
xor
mov
insb
or
adc
push
sysret
push
xchg
sbb
pop
mov
iret
push
jo
lods
and
rolb
js
lcall
mov
push
mov
ljmp
bound
cmp
jb
push
movsl
add
fstpt
or
jl
push
pop
dec
xor
lds
push
jne
push
aas
out
sbb
lds
mov
pop
ret
repnz
enter
mov
les
mov
xor
test
pop
popa
cmp
sub
jmp
push
and
mov
pop
jne
sbb
jmp
push
cmp
or
insb
xor
lock
inc
jge
pop
dec
lahf
imul
or
pusha
pop
aad
inc
inc
loope
push
xchg
or
or
lea
xor
add
adcl
ss
jmp
dec
es
out
jbe
or
adc
enter
push
adc
add
push
or
fdivl
add
sbb
into
insl
imul
cltd
sub
mov
shr
mov
imul
mov
movsb
icebp
and
outsb
dec
inc
jbe
xor
dec
mov
xor
push
pusha
mov
call
cmp
sar
dec
cmp
jbe
push
pop
xor
pop
adc
cmp
jne
loopne,pn
fildl
mov
shr
lea
not
and
decb
jne
or
sbb
lea
xor
pusha
cmp
pop
add
push
imul
mov
dec
rcrb
addl
pop
jg
movsb
push
jecxz
sti
mov
shlb
and
sti
add
fdivrs
add
dec
pop
cmp
ficoms
mov
imul
addr16
xor
pop
push
cs
xorb
cmp
mov
shr
not
and
add
in
jne
sub
ffreep
mov
fmuls
das
mov
xor
sub
pop
dec
add
xchg
imul
add
add
outsl
enter
fisubrs
lea
mov
sbb
add
inc
adc
dec
or
shlb
adc
mov
call
inc
mov
mov
mov
lret
xor
pop
mov
inc
dec
or
jmp
dec
adc
push
mov
or
sub
inc
xor
adc
lcall
pop
adc
and
add
sbb
std
and
shl
add
scas
jp
outsl
das
sti
push
push
call
aas
gs
push
or
outsb
cmp
adc
in
popa
sub
dec
inc
adc
inc
dec
jmp
pusha
add
and
pushl
push
push
lea
push
mov
add
sbb
mov
add
mov
fildll
enter
jnp
adc
dec
adc
jnp
jl
je
adc
jp
or
or
pop
or
das
fisttpl
inc
lods
mov
cltd
test
jge
lock
data16
outsl
push
jg
movsb
mov
js
add
repz
test
icebp
mov
ljmp
xchg
add
jae
movsb
adc
fistpl
mov
jmp
orl
incl
lds
pop
push
insb
loope
push
mov
ret
add
rolb
sub
stc
mov
imul
inc
clc
pop
xchg
fs
add
repz
sub
or
hlt
or
add
sub
mov
push
jge
xlat
int
cwtl
xchg
sbb
js
xor
sub
shr
push
fdivs
sysenter
pop
les
nop
in
adc
jge
inc
lods
or
adc
out
mov
cld
lock
call
stos
mov
lret
je
clc
add
movsb
jp
add
sub
sub
cmp
sahf
bsf
pop
hlt
inc
inc
mov
lock
cmp
jne
or
icebp
stos
popl
and
stc
jo
xchg
les
sbb
sub
and
pop
mov
rorb
xor
icebp
out
or
adc
shlb
jno
ret
int3
inc
xchg
fstps
mov
adc
add
mov
int3
push
pop
xor
clc
xorb
mov
aam
stc
sbb
clc
rolb
push
cs
es
add
cmp
nop
dec
or
int
add
push
jns
push
nop
std
jl
into
add
repnz
lods
std
lret
lods
adc
pushf
sar
dec
mov
ljmp
hlt
add
pop
mov
sbb
jg
shll
mov
pop
cmpsb
repnz
pop
push
pop
adc
add
lcall
adc
and
js
push
ja
and
sub
adc
inc
insb
xor
out
and
int
inc
push
mov
sub
jl
mov
inc
or
das
outsb
in
cmp
inc
dec
insb
pop
xor
push
sar
add
jp
movsb
pop
add
adc
xor
xor
insb
sahf
loope
cmp
dec
je
xchg
jecxz
xor
push
mov
push
or
fcmovu
ja
push
push
dec
ficoms
add
pusha
dec
xor
adc
dec
out
dec
cmp
icebp
mov
sahf
jbe
inc
cmp
mov
mov
mov
cmp
lods
decb
lret
pop
into
mov
pop
sbb
xchg
push
addb
addr16
mov
mov
ret
jp
ret
pop
and
inc
cmp
fmull
aas
push
push
push
jge
sub
out
cmp
push
jo
ret
lret
cltd
inc
int3
stos
dec
or
out
fldcw
push
nop
cmp
and
sub
xlat
fcmovb
adc
fiaddl
pop
int3
mov
sbb
jne
leave
jae
cmpsb
jmp
jnp
add
xor
cmp
fimull
aaa
arpl
jo
mov
mov
and
loope
loop
sbb
xchg
push
pop
lcall
sti
mov
cld
cmp
je
mov
in
cli
and
ss
jo
mov
dec
pop
iret
ret
or
ret
mov
dec
or
lods
xchg
test
jne
push
jno
jmp
fisubrl
mov
repz
mov
and
jne
mov
out
clc
test
and
leave
inc
test
inc
push
push
and
mov
sub
icebp
sbb
fdivrl
push
add
xor
add
xchg
and
push
cmp
push
pop
and
rcrl
pop
mov
or
jg
decb
jne
add
and
test
jmp
dec
mov
push
pusha
dec
bound
dec
push
and
jne
sarl
adc
jp
imul
mov
mov
js
or
pop
xor
fisubl
sbb
cmp
adc
or
push
or
dec
sarl
lock
or
inc
or
dec
or
push
mov
fsts
sub
push
out
push
call
outsb
pop
cmp
xor
pushf
lock
sbb
dec
jne
cmp
pop
mov
push
ds
add
leave
sbb
push
imul
fnstcw
sbb
loopne
fnsave
jo
pop
jb
or
xorl
inc
inc
sahf
add
adc
or
cmp
xor
jbe
test
mov
aam
clc
jae
sti
out
xor
dec
jecxz
fs
jp
addl
or
adc
xor
sub
jnp
sbb
xor
add
das
xor
shlb
dec
mov
xchg
inc
xlat
lcall
pop
cmp
adc
inc
inc
cmp
cmp
mov
out
cmp
push
mov
xorb
mov
repnz
xchg
or
push
and
std
push
xchg
shlb
or
sub
adc
add
add
adc
movsb
es
xor
push
cmpsl
fcoms
mov
fisubrs
mov
sub
std
lahf
mov
adcl
mov
adc
pop
pop
jne
push
lods
rcll
pop
mov
std
arpl
add
adc
test
mov
dec
call
loopne
push
mov
inc
inc
add
scas
push
or
pop
int
cmp
lods
cmpsl
pop
jl
or
push
fidivrl
xchg
lds
hlt
and
aaa
xor
push
mov
add
push
sar
es
test
loope
jle
out
xor
mov
insb
ds
sbb
hlt
inc
inc
dec
jne
daa
outsb
test
into
sub
xor
and
sbb
jns
inc
pushf
add
add
push
pop
jo
add
test
aam
sub
pop
ljmp
dec
mov
sbb
mov
lods
adc
shll
jmp
lret
movsl
cmp
int
in
int3
lret
subl
xor
pop
add
cmp
mov
jle
inc
rorl
subb
add
test
enter
dec
adc
sbb
pop
ja
add
movsb
mov
movsb
mov
dec
out
lretw
hlt
repz
dec
xor
adc
ret
adcb
lods
or
insl
push
ret
pop
add
imulb
xchg
arpl
adc
fsubrl
mov
pusha
rol
lea
nop
add
leave
lods
dec
leave
lods
dec
cmp
nop
fldt
repnz
sbb
addr16
add
js
nop
inc
pushf
fistpll
insb
jne
imul
mov
sbb
mov
mov
jbe
sbb
jg
fadd
add
jae
inc
fisubs
xor
xor
lcall
or
cmc
dec
gs
inc
jmp
int3
sub
inc
lcall
xor
pushf
xor
ret
jne
cmp
jns
in
nop
add
cmpsl
cli
leave
movsl
ljmp
add
fs
push
jns
mov
sub
xor
push
int3
inc
lahf
call
enter
xchg
stos
mov
push
and
call
add
stos
stos
stos
stos
negb
lret
and
or
pop
xor
or
call
or
xchg
orl
in
iret
out
add
mov
mov
test
mov
push
dec
rorb
aas
test
mov
jb
mov
leave
add
out
cmp
cmpsb
ret
push
hlt
xchg
xchg
push
push
jb
inc
lods
in
inc
sahf
inc
sub
and
and
call
in
jns
leave
lods
add
sub
xchg
dec
scas
nop
rcrb
lock
mov
jb
xor
leave
add
lret
and
pop
test
test
jo
adc
fwait
mov
int3
test
lock
mov
outsb
adc
push
cmc
or
or
bound
mov
insb
mov
sahf
cmp
inc
mov
xchg
xchg
adc
mov
ss
ss
push
jne
cmp
aaa
and
push
jg
xchg
sub
or
cltd
js
lock
lret
arpl
add
scas
daa
clc
xchg
ret
push
or
or
push
mov
inc
or
fwait
leave
and
xchg
rcll
xor
dec
xchg
mov
sub
in
or
popa
mov
inc
pop
jo
or
scas
sub
push
nop
popa
jmp
mov
mov
or
pusha
pop
jae
test
inc
add
inc
and
dec
push
adc
ret
js
mov
rcl
jmp
mov
test
testb
cmp
dec
or
adc
insb
xlat
and
adc
cmp
outsb
jecxz
in
jne
cmpsl
jne
sahf
add
hlt
call
mov
aaa
inc
cld
push
or
aaa
and
mov
cmp
adc
add
add
enter
or
xchg
pop
mov
out
mov
shll
enter
jno
mov
add
and
dec
xor
mov
or
add
cli
inc
shll
mov
inc
mov
or
xchg
push
push
and
xchg
icebp
add
adc
cmpsb
xor
jg
fisubl
add
jecxz
incl
push
pop
sub
sbb
dec
enter
mov
movsl
xchg
test
je
push
or
xchg
add
add
das
xchg
fldl
pop
loopne
fldl
rorl
push
or
sbb
out
push
mov
gs
and
jns
insl
leave
pop
jmp
jo
push
insl
mov
rorl
mov
pop
xchg
dec
xchg
cmp
das
cmp
fsubrs
sbb
je
add
and
sbb
sub
xor
lea
mov
cmp
adc
mov
fldenv
mov
or
sub
inc
loope
rcrl
stc
fwait
add
add
lea
inc
add
jno
mov
lret
xchg
adc
add
fmulp
push
test
cld
lock
hlt
jns
jns
lock
adc
pop
push
call
push
fsubrl
fstl
push
shrl
push
dec
shl
jne
fsub
mov
das
and
inc
lock
dec
fcmovb
cmp
push
in
push
cmc
iret
repz
incb
ret
jl
mov
out
jns
pop
sub
xor
jo
add
mov
mov
imul
sub
negb
sbb
mov
jg
add
call
push
sbb
jle
push
dec
in
xor
jle
cwtl
and
push
inc
clc
add
hlt
mov
jb
push
xchg
jmp
inc
faddl
and
adc
sub
popf
and
or
aas
test
in
sub
fmull
cmpsb
inc
jp
addl
test
jne
push
push
adcl
dec
sbb
cmp
inc
xchg
and
sub
cmpb
js
or
push
cmpsb
or
sbb
xor
mov
cmp
stos
add
lods
jae
out
mov
mov
push
or
adc
xchg
nop
call
jb
pop
push
test
add
in
sarb
and
and
xor
cld
mov
jne
scas
pop
mov
mov
push
rol
xor
add
pop
add
jne
dec
sbb
scas
mov
loopne
sar
lea
notb
scas
inc
loope
and
leave
cmc
daa
add
pop
mov
mov
or
mov
push
out
test
inc
pop
inc
inc
stos
push
xchg
sbbl
fdivrs
or
xchg
pop
ja
adc
sbb
mov
push
xchg
std
lods
popa
iret
mov
adc
ror
jb
int3
shl
enter
sbb
dec
fldpi
xchg
xchg
dec
push
pop
or
inc
lret
in
add
sbbl
xor
jle
movsl
ror
jg
cmp
hlt
cmp
test
stc
or
mov
popa
cltd
inc
sbb
int
sbb
mov
push
mov
mov
outsb
pop
dec
je
or
inc
cli
cmp
jmp
xor
lahf
sti
sub
jp
dec
cmp
inc
sub
pop
arpl
pop
and
ss
cmp
xor
pop
inc
jne
cmp
insb
sub
repnz
xor
int
add
fidivrs
push
movsl
test
lds
ret
imul
lods
cmp
andl
sbb
ret
mov
dec
test
xchg
inc
mov
lea
lahf
lret
in
sbb
mov
xor
imul
add
jo
addr16
dec
xchg
icebp
push
mov
xchg
add
inc
mov
sti
push
mov
cmp
popf
lea
lret
mov
popf
in
mov
fwait
jne
gs
pop
adc
gs
add
in
cmp
mov
xor
cmp
push
adc
testl
int
adc
mov
mov
or
ret
cmp
xchg
dec
fcmovbe
jns
jbe
out
mov
add
jmp
in
add
inc
cld
cmp
pop
push
push
mov
sbb
xchg
pop
enter
mov
dec
nop
dec
fisubrl
loopne
sub
mov
adc
std
insb
into
je
test
pop
insb
outsb
xlat
inc
loopne
mov
sbb
std
mov
movsl
sti
jecxz
xor
and
push
xchg
fisubs
lock
aaa
addr16
xchg
sub
xlat
das
lock
pop
jns
enter
std
sar
repz
mov
testl
fldt
in
push
add
jno
push
and
popa
add
gs
stc
cmp
sti
mov
call
lds
sbb
push
in
cmp
cmpsl
pop
out
push
mov
fsubrs
lds
xor
daa
fmull
roll
sub
cmp
lds
sub
jge
push
fnstsw
pop
cltd
sub
imul
mov
push
sbb
daa
jle
orl
icebp
push
push
mov
nop
cmp
mov
mov
fs
std
xor
fldcw
inc
lea
inc
add
movsl
xor
shrb
aas
dec
arpl
dec
xor
roll
arpl
mov
cmp
mov
iret
push
arpl
cmp
ret
js
inc
mov
mov
std
call
cmp
subl
test
test
xchg
dec
pop
mov
ljmp
mov
in
mov
push
popa
mov
fmull
dec
data16
push
sub
pop
enter
jmp
popa
dec
jmp
dec
inc
mov
push
cmc
lods
push
push
jmp
mov
std
pop
lock
pop
dec
jno
xor
push
sub
jmp
mov
adc
and
ror
popf
loopne
nop
ret
sub
mov
test
aas
mov
test
enter
jge
in
gs
lock
dec
sbb
fistpll
mov
les
insl
adc
jbe
push
movsb
adc
fisubrs
movl
loopne
adc
cwtl
cmovge
or
jp
jne
fdivr
sub
gs
das
push
dec
pop
jno
push
sbb
push
cmp
xor
std
std
std
bound
dec
push
loope
js
lret
or
test
xchg
movb
aaa
fsubrl
mov
mov
sub
in
pop
nop
insb
movl
sti
inc
and
sahf
cmpsl
push
cwtl
ss
and
push
xor
mov
or
pop
mov
rcll
adc
and
push
sbb
aas
aam
xchg
lock
pop
pop
leave
fs
lret
mov
subl
sarb
and
cmp
and
loopne
add
jae
sahf
lret
xlat
adc
sub
cmp
ja
test
add
shll
and
push
jecxz
jo
in
pop
pop
repz
xchg
loope
fcomi
shrl
xlat
jo
xchg
int3
lock
and
xchg
ljmp
dec
push
lock
aad
cmpsb
lods
repz
add
test
jb
xor
mov
in
inc
enter
movsl
call
cmp
call
pop
cmc
ret
cmc
lret
or
lret
or
ficoml
test
adc
and
cmp
lret
or
enter
or
int3
les
adc
enter
lods
and
or
stos
outsb
mov
xchg
sub
mov
lret
or
ja
cmp
cltd
movsb
sbbl
sub
sti
xchg
pop
push
cltd
pushf
inc
in
push
and
test
es
aad
inc
push
dec
inc
lcall
test
cmp
add
xor
mov
std
leave
jle
jb
test
pause
lret
and
mov
cmc
sbb
jns
test
in
cmpsl
xchg
pop
incl
decb
cld
enter
xor
lods
jb
mov
daa
stc
pushf
or
js
pop
repz
xchg
pushf
dec
scas
mov
and
mov
sbb
xchg
pop
or
lds
dec
inc
scas
icebp
mov
movsb
jb
imul
dec
add
icebp
cltd
fs
enter
dec
push
sbb
bound
or
je
dec
jmp
adc
or
repz
test
enter
test
leave
push
and
pushf
and
leave
pushf
nop
nop
nop
dec
add
and
xchg
arpl
orl
dec
push
dec
pop
je
mov
adc
dec
rolb
aam
aaa
out
mov
pop
push
roll
cltd
cmc
inc
shrb
ret
ss
mov
test
test
inc
cmpsl
enter
sti
and
and
nop
sbb
and
adc
and
inc
or
push
push
pusha
jo
movsb
push
or
dec
lcall
lods
adc
cltd
pop
sbb
cli
or
xchg
jne
or
and
or
mov
mov
lret
lret
pusha
fsubr
lret
lcall
sub
add
or
movsb
add
adc
push
cmp
rep
ss
neg
push
lcall
or
lock
add
inc
mov
push
xchg
icebp
or
mov
jecxz
push
adc
pusha
or
adc
fwait
int
outsl
push
in
iret
testl
and
icebp
dec
jl
lahf
dec
push
pop
outsl
inc
or
jbe
movsl
push
jns
jle
sbb
ja
xor
dec
jg
and
pushf
out
or
dec
shr
cmp
xchg
and
lret
sbb
mov
ret
dec
mov
and
fwait
or
mov
sub
add
int3
or
xchg
push
clc
ja
cs
sub
mov
lcall
fsts
clc
in
lock
pop
insb
ret
loope
movsb
jge
jne
ret
rclb
mov
adc
jnp
xorb
jp
or
mov
jbe
int
jmp
pop
jae
int3
test
pop
add
into
xor
in
cld
mov
mov
dec
inc
mov
lods
loopne
sbb
push
enter
and
mov
jne
jne
mov
add
aam
and
icebp
divl
xchg
sbb
adc
pop
mov
lods
dec
mov
inc
sub
cmp
sub
and
inc
not
jns
out
mov
or
cmp
fbld
jne
jecxz
test
push
push
mov
sub
int3
add
xor
pushf
inc
xchg
js
test
mov
into
ds
ret
jl
adc
movsl
jmp
push
inc
mov
jg
inc
inc
shlb
mov
test
pop
divb
xor
loop
ret
insb
scas
pop
aaa
mov
sbb
inc
xor
ret
gs
cli
cltd
and
jne
lea
popa
add
imul
or
les
mov
push
mov
in
iret
insl
jb
je
jmp
bound
and
xor
repnz
orb
jbe
imul
cs
inc
and
jb
outsl
lret
sub
das
orl
mov
adc
add
inc
push
mov
inc
sub
pusha
dec
mov
xor
es
mov
cmp
xchg
lret
lahf
and
mov
lahf
or
push
adc
data16
fisttps
jle
loop
inc
or
daa
out
int
push
add
je
hlt
daa
clc
inc
push
ret
xor
pushl
testl
es
ss
jecxz
sub
sub
les
scas
fwait
aam
cmp
cs
dec
bound
iret
inc
push
andb
clc
xchg
xor
pop
push
xchg
or
hlt
ds
sahf
pop
adc
or
mov
fists
shr
mov
fs
bswap
jnp
mov
inc
push
pop
push
push
out
fcos
out
inc
shr
rcr
shr
rcr
or
jne
div
pop
dec
adc
inc
fnsave
mul
pop
jb
cmp
or
cmp
or
jns
pop
divb
sbb
adc
add
fcmovu
fcmovu
lret
mov
outsb
adcb
addr16
adcb
inc
add
jno
inc
jnp
jmp
add
mov
repnz
int
cli
or
movb
cltd
inc
or
mov
mov
push
mov
cmpsl
xor
adc
push
and
cmc
mov
push
lea
mov
cli
cmp
add
sbb
or
clc
in
sub
dec
or
pop
cmp
sbb
pusha
jl
subl
roll
outsb
xchg
pusha
dec
lods
leave
call
jne
mov
push
dec
and
cmpsb
cmp
daa
cmp
add
arpl
jecxz
mov
lret
dec
ret
cmova
push
dec
fcomps
dec
loop
cli
xchg
add
cmpsl
add
jle
jne
lea
test
mov
and
push
push
push
mov
into
push
inc
lods
push
sub
test
ret
cmc
sti
sbb
les
add
lea
xchg
and
and
dec
or
mov
add
mov
or
jne
int3
add
sbb
inc
int
push
pop
mov
mov
dec
mov
rorl
push
jo
and
sub
push
pushf
inc
stos
xchg
fwait
aas
cmp
sbb
and
das
add
rclb
xchg
inc
aaa
addb
add
cmp
js
dec
repz
xor
ficoms
cmp
enter
iret
add
add
add
and
and
int
inc
sub
stos
add
jo
jmp
push
xor
mov
std
imul
add
push
gs
loopne
lods
adc
cmp
or
xor
sbb
lock
lods
inc
rorb
add
xchg
hlt
hlt
les
add
stos
cltd
mov
scas
sub
mov
fwait
pop
cmp
in
sub
loopne
and
lea
and
add
add
xor
test
movsb
mov
pop
ret
and
ret
or
sbb
pusha
fs
call
das
je
mov
fmulp
or
cld
iret
sahf
push
sub
or
xor
push
adc
xor
pop
sarb
ret
icebp
jmp
xor
jo
and
mov
rcll
xorl
sbb
pop
inc
shlb
mov
jl
push
out
cmp
je
ss
repz
repnz
faddl
aam
mov
pop
addr16
outsb
or
or
or
cld
pop
adc
cs
and
scas
and
mov
ss
sbb
xchg
sbb
mov
push
mov
popa
add
or
nop
mov
jmp
lods
hlt
icebp
repnz
jo
pusha
xchg
push
jo
mov
jo
std
je
cmp
out
mov
sub
inc
fisttps
push
or
add
xchg
dec
push
roll
inc
out
xor
mov
dec
sbb
mov
pop
jne
inc
popa
insl
jg
sub
push
inc
aam
mov
or
push
dec
sbb
dec
push
pop
sbb
outsl
xor
or
jb
fstl
sub
or
pushf
loope
mov
push
or
rol
inc
adc
xchg
push
and
adc
xor
add
push
xor
pop
ja
sub
sub
adc
and
pop
add
cmp
dec
pop
dec
and
jle
pop
add
test
fwait
or
test
mov
mov
jns
push
pop
mov
and
push
push
call
imul
or
ficompl
shll
out
test
push
and
in
xor
inc
movsb
push
and
jne
rcr
cmc
addl
sar
add
pop
push
outsb
and
int3
add
sub
add
test
in
cwtl
lock
sbb
or
and
leave
loopne
ja
and
andl
cmp
sbb
loop
sub
fs
in
mov
sbbl
pop
orl
sbb
cmp
lea
nop
cmc
push
scas
push
cmp
mov
jb
inc
lock
popf
sbb
sbb
push
sbb
into
pusha
les
add
mov
outsb
jae
sub
dec
or
dec
rcrl
push
or
add
cmp
icebp
imul
outsb
or
daa
and
mov
in
hlt
add
pop
add
push
aaa
push
cmp
push
and
inc
ljmp
inc
jp
xchg
or
repnz
divl
loope
xor
je
push
or
push
insb
jne
fnstcw
cmp
mov
fldl
mov
popa
in
or
pusha
jle
shl
push
mov
scas
sbb
enter
js
pop
xchg
cld
fnstenv
sbb
sub
sbb
jle
or
push
xchg
push
dec
mov
dec
pop
dec
or
outsb
sbb
xchg
aad
push
pop
fdivrl
fwait
xor
psllw
push
shlb
in
add
mov
ret
adc
or
je
jge
pop
fs
dec
mov
mov
jne,pn
cmp
rol
inc
mov
packssdw
fcoml
mov
cmp
jge
and
divl
pop
mov
mov
adc
mov
mov
sbb
push
push
popa
pop
dec
or
sbb
stc
and
hlt
pop
add
and
pop
aaa
xor
adc
shlb
push
rorb
in
add
fdivr
fdivl
mov
and
das
call
addr16
add
jnp
dec
pop
movsb
mov
adcb
sbb
jecxz
or
cmpl
js
and
cmp
adc
jbe
cmp
and
cmp
js
cmp
insl
loopne
dec
int3
mov
inc
or
add
and
sub
or
dec
jno
insb
cmovno
jo
sub
ja
xor
cmp
data16
jo
imul
lock
or
push
push
jmp
push
pop
inc
pusha
mov
sbb
push
pusha
jmp
inc
fisubl
jp
and
mov
cmp
jbe
push
xchg
flds
fdivrl
push
in
lods
add
sub
mov
lret
adcl
in
push
jmp
popa
addb
pop
je
cmp
push
inc
xor
mov
cs
mov
lcall
popa
mov
insb
imul
dec
add
pop
push
add
in
test
cmpsl
lods
add
out
mov
jb
or
movl
and
push
add
adc
out
stos
rcr
adc
lods
mov
incl
push
or
mov
push
jle
rcrl
cmp
sub
int3
add
inc
mov
push
mov
outsl
add
or
divl
or
xchg
or
xchg
add
inc
jg
add
cs
lods
ja
cmp
adc
testl
jecxz
rorb
jb
and
adc
add
pop
add
inc
pop
je
popf
dec
lea
pop
mov
cwtl
mov
or
and
xor
xor
pop
push
adc
push
inc
inc
sti
stc
add
push
xchg
addl
sub
sbb
add
inc
mov
cli
cmp
and
leave
andl
fnsave
dec
into
inc
add
xor
inc
into
mov
loop
pop
add
or
scas
in
pop
pop
and
mov
pop
pop
sbb
sbb
imul
sbb
push
mov
adc
pop
dec
pop
mov
and
and
add
cmpb
pop
inc
stos
mov
aas
jae
mov
jbe
dec
shl
test
sub
cmovle
push
mov
jl
popa
lock
mov
jge
bound
dec
mov
adc
jecxz
or
add
or
subl
adcl
es
lds
push
mov
sbb
inc
or
adc
or
or
lea
call
sub
jne
lods
loop
cmp
dec
inc
inc
or
popf
ss
jne
repnz
cmp
and
clc
sub
push
sar
mov
mov
hlt
ret
mov
xor
push
pop
clc
push
dec
jo
push
js
aad
lea
add
cld
es
lcall
sub
mov
les
pop
pop
push
cwtl
or
loope
inc
sti
or
call
int
pop
or
lock
data16
fdivs
fnstenv
xchg
dec
clc
mov
mov
rclb
sub
push
push
pop
push
dec
push
test
add
mov
jae
or
add
jl
sub
or
push
sbb
cmp
and
xor
inc
mov
jo
or
in
js
rorb
push
push
fs
sub
pop
mov
add
add
les
cmp
mov
add
pop
pop
sbb
lea
sbb
rcl
add
nop
and
dec
andb
and
push
cmp
daa
adc
or
inc
cmp
sbb
enter
jle
mov
mov
mov
std
sbb
push
push
mov
push
pop
test
pop
decl
push
mov
add
out
mov
lock
add
rcrl
lock
add
pop
or
jae
sarb
or
inc
adcl
dec
xchg
xchg
dec
repz
push
or
and
pop
enter
xchg
andl
testb
mov
scas
add
mov
out
pusha
aas
push
aaa
xor
ds
dec
inc
lods
lret
inc
clc
cmp
cmp
sub
mov
mov
push
add
ret
add
loope
pusha
sbb
rcl
notb
insl
rclb
adc
inc
insb
xchg
mov
cmp
sbb
dec
out
mov
xchg
push
rorb
xor
out
lcall
push
push
xor
and
pop
and
push
in
lret
lods
loope
lock
test
mov
mov
shrl
in
out
mov
test
adc
loopne
or
xor
add
push
roll
incl
enter
adc
enter
add
cs
ret
enter
pop
xchg
data16
ret
sub
in
cmp
lahf
mov
or
dec
inc
dec
jecxz
or
dec
outsl
in
mov
lock
rcll
xlat
or
mov
popa
push
mov
stos
cmpb
jae
xor
adc
add
fisttpll
push
add
cmp
ret
add
jmp
pushl
add
jl
xor
push
jne
and
add
rcrl
fdivrl
cmp
aam
out
or
inc
inc
cs
in
adc
jl
subb
in
sbb
test
sahf
lret
xor
xchg
and
popa
xchg
jo
out
sbb
loope,pt
xor
push
cmp
test
sti
fnclex
push
xor
js
punpckhdq
movsb
aad
xchg
or
pop
jno
mov
add
sti
or
add
mov
or
mov
and
andb
fistl
xchg
add
xchg
roll
pop
xchg
test
or
insl
mov
dec
in
out
or
int
xor
out
das
and
cmp
lcall
adc
insl
lock
cwtl
push
push
insb
push
rolb
pop
enter
push
inc
push
push
inc
aaa
pop
push
add
dec
add
sub
xchg
aam
lods
pop
mov
cmp
ret
cmp
popf
ss
shr
add
jmp
or
mov
lret
push
mov
mov
sub
cmp
mov
pushf
sbb
jmp
sub
cmp
ret
xor
data16
sbb
sub
sub
fsubr
push
and
mov
aas
jne
test
cld
add
cltd
call
sti
scas
sti
addr16
cmp
jne
sub
adc
outsl
jo
sbb
mov
in
jae
adc
shlb
adc
insb
and
or
rorl
or
mov
inc
push
add
xchg
movsb
inc
mov
aaa
jmp
enter
push
mov
inc
xor
push
mov
imul
inc
and
sub
jl
cmp
jg
inc
jmp
int3
in
mov
xchg
hlt
pop
xchg
jbe
jne
imul
add
add
sub
cmc
aas
sbb
and
inc
sub
test
cli
rcr
int3
add
fsubs
popa
sbb
adc
mov
imul
mov
xor
fsubrl
xchg
hlt
mov
xor
jne
push
rcr
fidivs
cld
and
add
cmpsl
ja
orl
or
mov
or
add
sbb
dec
xor
mov
push
sbb
mov
add
inc
pusha
lods
push
repnz
negl
inc
out
sub
je
add
jno
addb
jmp
mov
cmp
out
and
je
testb
je
divb
sbb
in
sub
lods
fldt
scas
mov
loop
push
push
sub
sub
mov
pop
inc
and
jb
jle
sbb
sub
inc
pop
or
jg
or
cmc
jg
add
or
insl
data16
je
sarb
dec
gs
test
cmp
jl
dec
and
add
fs
pop
subb
adc
std
sbb
pushl
stc
sbb
mov
cmp
mov
or
cmp
push
out
jmp
adc
sbb
dec
je
sub
mov
adc
dec
cmp
rcrb
push
int3
cmp
push
push
jne
inc
sbb
jecxz
push
or
or
sbb
sbb
mov
cs
add
cmpsl
andl
inc
sbb
mov
xor
or
push
push
lret
adc
xor
mov
mov
ret
inc
jecxz
sub
add
add
push
jl
push
jl
dec
add
mov
or
add
add
mov
les
sbb
add
insb
jns
sti
jp
lea
inc
sbb
pushf
sbb
mov
and
cmp
add
bound
push
push
adc
int3
adc
xchg
scas
dec
sahf
xchg
andl
jae
and
cmp
jl
pusha
mov
mov
mov
sub
sbb
int
mov
xchg
gs
sub
fdivrl
cs
call
inc
mov
arpl
fwait
fldln2
and
jl
gs
add
dec
js
fiaddl
push
js
mov
mov
ja
sub
mov
loope
fdivs
aaa
inc
mov
sbb
inc
push
clc
push
addb
and
sbbl
push
jp
outsl
mov
cmp
or
fisubrs
hlt
rcrb
jle
dec
lock
or
inc
or
sbb
je
sbb
fmuls
inc
mov
test
mov
xor
js
xchg
enter
or
adc
jge
lock
lods
pusha
fs
and
and
mov
test
pop
mov
mov
pop
adc
sbb
cmp
inc
push
cs
js
call
rcrb
movsb
push
xlat
sbb
lods
ret
inc
push
scas
cmpsb
cmp
push
cmp
out
jge
lock
adc
sbb
mov
imul
pop
cmp
adc
mov
fisubl
or
inc
imul
insl
loopne
add
or
cld
call
call
pop
out
pushl
add
adc
repnz
pause
icebp
and
cmp
test
popf
sbb
cmp
out
rclb
rol
repnz
test
je
addr16
scas
pop
movsb
filds
push
sbb
dec
shlb
mov
jmp
cmp
or
je
or
imul
sbb
mov
movb
testb
cmpsb
add
adcb
dec
adc
or
jg
push
lret
xchg
sbb
xorb
and
mov
pop
call
dec
int
pop
adc
adc
adc
pop
mov
icebp
pop
mov
rolb
mov
mov
and
fcoms
adc
or
sbb
cmp
inc
xor
dec
sub
test
fiaddl
aaa
mov
fsubrl
mov
xorl
sar
aaa
roll
jmp
push
icebp
enter
jmp
mov
arpl
mov
mov
jbe
xchg
jns
pop
lahf
inc
cld
sub
or
ja
imul
or
nopl
pop
je
pop
add
shl
and
leave
inc
sbb
mov
xchg
adc
sbb
or
cmp
or
shl
lods
push
jb
dec
adc
bound
testb
jae
push
cmp
jl
mov
inc
mov
aas
inc
jle
adc
dec
add
jns
mov
lea
testb
jne
clc
push
mov
aaa
jo
aad
into
rep
adcl
cmpsl
sub
movsb
sub
jl
bound
or
add
mov
xlat
xor
in
dec
and
jo
dec
push
ret
adc
xor
leave
mov
icebp
stos
push
sarw
scas
mov
add
gs
add
cltd
sub
or
mov
dec
sbb
adc
lods
mov
loopne
and
dec
push
jne
out
sbb
pop
xlat
sti
mov
jne
jmp
frstpm(287
or
jo
jae
push
arpl
ljmp
cmp
out
sti
inc
dec
xchg
icebp
mov
sbb
fisttps
mov
xor
inc
cmp
jecxz
dec
jl
push
filds
sbb
pop
xchg
push
pop
xchg
stc
in
pop
push
mov
sbb
sbb
push
jle
add
jo
cmpb
clc
dec
push
push
pop
inc
push
lock
xchg
dec
push
sbb
popl
jo
jl
in
sub
fstpt
adc
adc
and
mov
pusha
jbe
add
push
test
xchg
loopne
sbb
dec
in
daa
jg
adc
orl
call
lret
pop
hlt
add
icebp
nop
scas
loopne
push
xchg
cmp
xlat
or
rcl
shlb
testb
in
mov
stos
add
and
negb
std
jb
or
pop
cwtl
lock
test
out
xor
cmp
notl
movsl
xlat
dec
ljmp
xor
jp
shll
xor
xchg
enter
inc
lret
xor
adc
jl,pn
repz
push
adc
or
push
or
mov
fmuls
mov
pop
cld
nop
adc
xlat
je
cmp
adc
cmp
jb
ds
loop
testb
loopne
and
dec
inc
add
sub
or
jge
push
negb
inc
jmp
inc
movb
and
les
adc
jno
cmpl
sub
pop
adc
or
inc
push
push
or
in
push
arpl
icebp
shr
imull
das
xor
hlt
into
cmp
or
mov
add
pop
aam
jno
mov
aam
jmp
shlb
mov
cmp
fstpl
pop
jmp
jecxz
inc
add
pop
or
pusha
je
sub
scas
push
mov
or
cld
or
imul
mov
sub
fs
pop
sub
sbb
sarb
je
xchg
cli
adc
jbe
inc
push
jbe
pop
mov
or
or
out
int3
pop
std
popa
mov
fdiv
cmp
jmp
popl
lods
ds
inc
xchg
mov
pop
mov
or
cwtl
push
sbb
mov
dec
stc
pop
inc
out
xchg
std
mov
dec
and
sbb
sbb
sbb
push
add
pop
dec
cmp
push
mov
mov
xor
je
rcrl
xor
jo
jbe
jecxz
cmp
leave
xor
out
jne
ret
pop
push
lcallw
subb
adcb
mov
push
lds
cmp
inc
andl
adc
fldl
sbb
sbb
cmp
cmp
sub
xor
cmp
cmp
cmp
cmp
inc
inc
and
inc
cmovs
jb
dec
push
push
pop
pushf
pushf
pushf
pop
add
pushf
pushf
pushf
pushf
insb
jo
js
xor
fs
dec
ficoml
mov
xchg
cwtl
dec
es
fs
mov
xchg
test
sub
sub
xorb
add
fisubrs
add
lock
ret
xor
mov
push
mov
or
clc
inc
fiaddl
rcrb
add
roll
test
mov
enter
pop
inc
or
adc
xor
inc
add
enter
inc
ret
add
rclb
ffreep
fwait
repnz
dec
jne
out
dec
daa
mov
jle
mov
jb
mov
mov
stos
insl
fnstcw
mov
push
jp
jp
push
call
inc
cmp
es
stc
xor
xchg
jo
andl
insb
mov
push
lahf
add
gs
cli
dec
mov
aam
add
pop
and
push
sub
dec
or
add
pushf
fiaddl
jne
int3
mov
xor
inc
movsb
xchg
adc
mov
call
adc
daa
pop
and
and
mov
and
and
or
das
jno
and
je
and
fiadds
push
ret
pushl
add
cmp
fmuls
in
pusha
pop
cs
push
popf
adc
pop
int3
cmp
rcrl
inc
mov
fistpll
bound
shlb
sbb
cmp
in
add
je
push
pushf
scas
xchg
mov
inc
push
js
imul
cmp
xlat
test
jge
xchg
add
or
add
add
js
push
pop
in
lahf
add
cmp
xor
fsubp
add
lret
adc
int3
add
sbb
rcll
xor
add
pop
fstpt
and
ret
pop
or
adc
or
push
hlt
ret
rcrl
xor
fcomps
leave
in
jmp
dec
addb
js
les
aas
dec
dec
aaa
mov
sbb
cmp
add
add
cmc
and
push
call
andb
fcoms
icebp
fs
or
adc
outsb
and
inc
sub
popl
xchg
js
inc
pop
mov
adc
xchg
jle
or
sub
lods
jb
push
mov
pusha
mov
jmp
fsubrs
adc
sbb
cmp
enter
mov
xadd
and
andl
ret
aas
dec
popa
add
xchg
or
mov
aam
and
pusha
pop
sub
mov
sbb
insl
dec
mov
in
shll
xchg
xchg
mov
cmp
mov
out
sub
xchg
or
add
or
add
loopne
in
mov
or
cmp
push
insl
inc
xor
adc
ljmp
pavgb
push
lea
shl
dec
xor
and
out
cmpsl
std
dec
xchg
sar
mov
or
sti
add
pusha
sbb
ret
negl
adc
insb
jne
aad
mov
cmpsb
push
adc
and
push
adc
shll
popf
add
mov
inc
sbb
xchg
inc
insb
xchg
sub
test
dec
push
dec
shrl
mov
and
inc
fs
dec
sub
lea
jmp
addl
pop
jbe
inc
movsb
cmp
dec
ss
mov
and
inc
xor
mov
cmp
pop
cmp
in
lods
mov
loope
fidivl
push
xor
push
hlt
mov
loopne
add
pop
test
jmp
mov
enter
scas
sub
cmp
ja
sub
add
cmp
fsubs
mov
lret
xchg
pop
sub
pop
push
iret
xchg
or
adc
sbb
inc
inc
pop
adc
lea
push
add
inc
jo
out
inc
jno
int
loop
lods
jnp
movsl
sbb
xor
pusha
fcoms
push
inc
dec
ss
cmp
or
rorl
jns
xor
sarl
or
dec
cmp
test
mov
and
add
scas
or
or
jo
jae
push
add
aaa
sbb
ljmp
push
cmp
jne
insb
xor
and
mov
incb
push
or
sbb
out
inc
ret
jnp
jno
push
push
jmp
sub
cmp
dec
icebp
or
pusha
push
je
out
loopne
sbb
pop
xchg
pusha
jns
cmp
sbb
clc
ja
mov
jb
inc
sti
lods
adc
mov
inc
mov
sbb
xadd
inc
dec
add
mov
adc
repz
mov
jmp
xchg
mov
cmc
mov
sub
sub
jg
fwait
cmpsl
mov
mov
adc
cld
shr
cli
or
inc
mov
inc
fmuls
mov
sub
mov
fsubrs
sub
subl
inc
pop
pop
mov
mov
cmp
jecxz
jnp
jmp
mov
lock
pushl
femms
dec
in
movsl
dec
add
nop
add
dec
icebp
int3
inc
cmp
mov
push
orl
pop
mov
inc
pusha
fisubl
or
lret
cmp
mov
push
dec
leave
bound
pop
add
and
aas
mov
push
stc
pop
xchg
cmp
fdivrs
adc
into
xchg
push
pop
cltd
mov
xchg
sub
addb
adc
xchg
test
mov
mov
jmp
imul
mov
fstps
jmp
inc
dec
clc
loope
leave
cli
or
mov
sub
test
jns
je
add
scas
lock
jmp
or
and
push
sub
mov
jns
pushf
aas
lea
mov
push
mov
inc
pushl
lods
adc
dec
sub
ja
fdivrs
push
jo
pop
jne
ljmp
or
inc
jne
div
or
cmp
and
fucomip
insb
cld
pusha
ss
cmpb
shll
xlat
js
jb
or
or
js
add
and
mov
mov
movsl
fs
mov
or
js
mov
sbb
mov
push
jo
jo
sub
and
cmpsb
lock
and
cmp
or
mov
mov
mov
in
lcall
sbb
inc
jmp
and
mov
popa
add
popa
add
unpckhps
pop
or
jp
and
sbb
or
sbb
mov
xor
inc
add
jg
xlat
inc
inc
xor
push
pop
ficoml
dec
test
add
xor
in
outsl
pop
mov
push
and
push
out
push
mov
sbb
add
fidivrl
shlw
ret
flds
mov
ljmp
and
push
mov
out
pushf
cli
inc
rorl
sahf
in
fstp
int
mov
jl
js
or
nop
nop
rcl
add
add
push
inc
xor
nop
cmp
jmp
nop
divb
dec
push
sbb
into
sub
add
or
or
mov
cmp
faddl
notl
test
pop
mov
xor
arpl
dec
loop
repz
cmp
push
movl
pop
xor
dec
bound
fistl
adc
jge
addr16
pop
stos
push
add
inc
test
sub
mov
push
cmp
mov
inc
bound
pop
adcb
jge
mov
pop
sarl
pop
xchg
mov
and
cmp
mov
jns
ret
mov
pop
mov
adc
lods
addb
mov
lcall
pop
inc
add
lock
and
adc
add
mov
inc
sbb
sbb
xorb
jmp
push
and
sbb
dec
je
inc
cmp
shlb
int
mov
test
add
js
pop
sbb
push
ja
add
add
or
mov
movsl
jecxz
sbb
enter
inc
repnz
std
jge
adc
adc
hlt
adc
push
sub
nop
pop
pop
icebp
clc
subb
test
push
xchg
pop
dec
inc
and
sahf
cli
push
dec
jmp
inc
jmp
icebp
xor
jecxz
sbb
mov
loop
and
mov
sub
mov
nop
mov
pavgb
cmp
and
pop
add
sbbb
push
sub
pop
ud2
sub
movsb
dec
jnp
stc
or
push
cmp
sub
sbb
push
cmp
cmova
mov
push
mov
jmp
rorb
and
dec
cmp
popf
lret
test
sti
enter
negl
jns
sti
int
mov
subb
int3
jne
mov
dec
jge
gs
push
dec
pop
mov
les
pop
cmp
cmp
or
and
dec
mov
adc
xchg
adc
sbb
jp
pop
sub
push
sbb
dec
jl
push
orb
inc
pop
push
testb
or
add
dec
jbe
insb
jbe
and
mov
mov
loope
inc
and
push
xchg
fldenv
mov
aas
repnz
das
adc
mov
rcrb
inc
or
mov
jl
jle,pn
fisttps
fwait
or
mov
mov
sbb
or
add
stc
inc
inc
dec
inc
add
mov
mov
or
ds
data16
mov
jmp
dec
lcall
and
cmp
cwtl
add
inc
sbbb
sbb
jne
and
and
fistpl
and
leave
adc
into
test
mov
jmp
push
sbb
or
or
sbbb
add
dec
rolb
std
outsl
icebp
pop
jo
pop
mov
xor
pop
sub
je
push
popf
or
cpuid
cmp
loop
iret
adc
scas
and
data16
pop
imull
add
push
mov
and
test
adc
into
inc
push
dec
jae
hlt
js
decl
or
dec
xchg
outsb
or
test
push
or
adc
sub
push
out
test
pop
push
mov
xchg
ret
cs
fadds
and
cmp
or
nop
in
out
inc
les
not
xor
loope
jb
fsts
xor
and
shr
leave
in
inc
dec
add
jmp
adc
xor
imul
cmp
test
adc
or
add
dec
xor
push
mov
fs
xchg
test
or
or
pop
bound
jmp
pop
in
idivb
incb
jmp
sbb
lock
and
jl
in
rorb
and
jecxz
outsb
inc
pushf
jge
add
or
rorl
cltd
adc
cmpsb
jle
fimuls
and
call
and
jge
popf
sbb
xor
mov
and
adc
add
fbstp
xchg
cs
pusha
mov
pusha
loope
pop
sub
pop
add
inc
jecxz
movsb
repnz
adc
fnstsw
sbb
pusha
insl
jnp
icebp
orb
addr16
inc
jg
dec
inc
testb
xor
cmp
cmpsl
repnz
sti
add
add
scas
out
test
fisttps
lahf
xor
das
sbb
or
sub
push
mov
jle
scas
leave
aam
pop
testl
lods
inc
ret
pop
xorb
mov
jb
sbb
jmp
push
and
inc
add
aaa
xchg
in
adc
flds
add
mov
or
or
pop
or
sub
test
movsl
shr
ret
inc
aas
les
cmp
push
or
mov
adcb
xchg
popa
testl
ja
add
movsl
out
dec
inc
aam
cmp
push
aaa
sbb
ja
fs
fcompl
fnstsw
sbb
insl
subl
jnp
jmp
sub
dec
push
in
lods
sub
jmp
sub
push
fstl
fsts
sbb
test
int3
in
mov
div
add
xor
sbb
pop
cmc
jnp
jp
clc
push
loope
pop
inc
mov
fstpl
lods
or
cli
mov
stc
into
jbe
or
or
pop
push
push
mov
inc
cmp
xchg
jbe
sub
repnz
or
dec
jecxz
mov
mov
mov
dec
into
jbe
mov
insl
in
push
pop
orl
fs
shl
sub
push
negl
jmp
inc
mov
push
pop
movsb
int3
mov
std
xor
adc
or
cmp
out
ljmp
out
add
cmp
mov
push
add
xchg
fwait
and
add
and
das
adc
add
add
xor
pop
out
cmp
lfs
xchg
insl
push
movzbl
and
pop
push
lea
xchg
mov
je
sub
pop
inc
xchg
sbb
js
add
or
adc
lahf
sbb
rcrb
add
adc
or
and
pop
sub
sub
add
pop
sbb
pop
push
out
push
pop
repz
repz
adc
sti
mov
mov
add
inc
and
in
inc
loope
pop
add
shlb
or
mov
ret
xchg
or
sbb
dec
sbb
cmpb
scas
adc
mov
mov
shl
xchg
es
add
imul
add
or
into
cmp
insl
orl
rcr
mov
sub
xor
inc
aaa
mov
adc
int3
popa
sbb
mov
jns
xchg
sahf
fnstsw
inc
test
popf
adc
lods
stos
add
pusha
data16
pop
std
adc
mov
mov
push
cld
mov
add
or
popf
data16
jmp
sbb
cs
rcll
or
sahf
push
pop
mov
lock
pop
cs
or
gs
je
and
add
mov
cmpsl
pushf
inc
fsubl
ljmp
adc
mov
popa
mov
add
into
dec
fldenv
ret
dec
mov
das
pop
out
mov
sbb
push
xor
test
fbstp
jne
dec
pop
or
mov
aad
icebp
sbb
in
das
hlt
shll
push
or
cmpsb
imul
push
or
push
xchg
jle
icebp
out
mov
push
jne
iret
scas
mov
sbb
xor
push
scas
cmp
jl
sbb
sub
xchg
sub
ljmp
or
xchg
dec
aad
push
ffree
rorl
mov
test
inc
fsts
and
test
adc
xor
scas
sub
mov
push
push
mov
fistpl
cmp
sub
fwait
sahf
adc
pop
sbbb
inc
adc
push
mov
aam
or
jle
call
fdivp
jb
mov
push
xor
fs
dec
inc
and
inc
je
sbb
jmp
loopnew
inc
xchg
scas
push
fsubl
out
mov
mov
ret
or
and
cmp
mov
mov
out
shr
mov
sbb
adc
mov
jbe
pop
push
mov
call
pop
and
jle
fidivrs
sub
shlb
xchg
or
pusha
xor
rsm
test
insl
push
mov
movsb
in
jns
pop
sub
sbb
mov
repnz
por
add
push
sub
mov
push
dec
adc
test
adc
imul
lock
sbb
mov
dec
pop
or
pop
gs
or
movsl
inc
sarb
xchg
out
psubq
xchg
cmp
rcrb
fcomi
jg
adc
adc
enter
icebp
or
add
loope
xchg
or
xor
adc
stos
jmp
pop
xor
icebp
es
test
loope
mov
jle
mov
push
cmp
inc
inc
adc
or
adc
bound
js
in
cli
dec
dec
dec
mov
mov
adc
fiadds
mov
dec
push
or
test
and
scas
out
sub
push
adc
mov
push
daa
pop
loope
sbb
lcall
add
fcomps
mov
stos
stos
and
pop
xor
lahf
push
aam
xor
inc
orb
rcrl
adc
mov
dec
jns
dec
fbld
inc
lea
pop
mov
loopne
adc
mov
pop
and
aam
loop
rolb
adcl
orl
push
cltd
insb
mov
and
mov
out
mov
inc
insl
xor
push
mov
add
test
pop
xor
je
and
cli
sbb
dec
fcompl
cmp
sub
jb
incb
jae
jnp
dec
sub
adc
jns
loop
roll
pop
and
cmp
jge
push
enter
push
out
and
hlt
ljmp
sti
cmp
dec
dec
stos
or
cmp
bswap
sbb
test
aam
xor
dec
addl
loop
sbb
xchg
xor
sub
xchg
cmc
iret
and
push
cld
not
add
popf
test
xorb
pop
dec
dec
sbb
ds
push
or
jne
inc
and
lock
inc
ss
adc
test
out
lock
or
cmp
jl
mov
dec
int
mov
test
mov
out
pop
xor
pop
hlt
test
mov
dec
add
push
rolb
mov
push
pop
test
add
cli
xchg
pop
push
movq
bound
pop
xor
decl
sub
mov
jns
nop
xchg
mov
inc
lock
sbb
push
push
aam
xchg
loope
cld
xchg
leave
inc
mov
mov
stos
loope
pop
cmp
imul
mov
jmp
sub
ffree
xchg
mov
gs
xor
mov
test
rcrb
and
mov
add
nop
data16
ret
jge
xor
add
sub
popa
nop
jle
shl
out
roll
xchg
and
or
nop
rcrb
adc
mul
es
movsb
sbb
ficompl
lock
add
xchg
in
in
push
xchg
mov
push
and
or
and
adc
enter
sub
cmp
das
jns
adc
adc
in
dec
adc
mov
sbb
sbb
jl
xchg
inc
push
mov
dec
pop
inc
mov
xor
push
adc
into
mov
sbb
mov
lcall
pushf
imul
popa
inc
add
nop
das
frstor
and
add
or
cmp
in
pop
mov
or
jmp
xor
or
xchg
movsb
aas
out
ret
out
enter
cmp
ja
push
dec
jmp
mov
adc
fs
mov
push
cmp
rolb
push
add
xchg
sub
or
pop
mov
jmp
dec
mov
incb
sbb
mov
jmp
cmpsl
sub
lods
jbe
mov
movsb
lods
push
sub
cli
bound
cmp
jle
push
inc
jle
cmp
push
xor
sarl
push
mov
in
jbe
lods
pop
mov
add
pushf
push
cmp
lock
sub
push
push
orb
sub
dec
enter
mov
mov
data16
push
pop
jge
out
jnp
into
pop
cmp
test
push
dec
loop
nop
add
jne
push
jae
enter
imul
sbb
mov
and
xor
mov
or
into
lea
mov
out
push
sub
mov
or
mov
dec
loopne
dec
cwtl
sub
scas
push
and
scas
mov
xor
cmp
test
mov
and
call
add
shll
test
nop
mov
add
rcrl
js
loope
inc
sbb
add
testl
mov
jmp
fisubs
push
sbb
pop
stos
dec
sub
xor
adcb
cld
test
subl
cli
and
sub
mov
rolb
or
mov
jmp
mov
jmp
push
cwtl
or
mov
push
mov
and
hlt
cmp
mov
inc
mov
cmp
jge
neg
add
adc
sub
jl
fcompl
cmp
aad
mov
sbb
pusha
insl
adc
ret
jge
jle
fsubr
in
mov
xor
jne
adc
ficoml
cltd
adc
inc
out
les
subb
jge
mov
mov
mov
adcl
cmpsl
popf
push
rorl
test
add
mov
dec
mov
mov
lcall
sub
xchg
mov
push
xor
and
and
and
jne
and
shlb
andl
adc
lret
lahf
sbb
ja
scas
push
sub
ja
mov
pop
mov
pop
loop
out
push
movb
testl
stos
fs
jne
or
jne
test
into
dec
jg
into
jne
inc
or
cmp
ficompl
jne
hlt
int3
add
jne
adc
mov
add
add
cmc
pop
and
inc
add
test
mov
and
jp
scas
mov
dec
cld
jp
or
mov
ja
mov
add
xor
mov
sub
sub
dec
sbb
stc
jg
add
xchg
aad
adc
push
test
js
inc
dec
add
xor
shll
adc
add
or
shr
insb
and
push
out
jge
sbbb
jg
or
aaa
and
pop
adc
inc
mov
les
add
notb
mov
outsl
mov
adc
shrl
shl
shr
or
das
dec
lods
jge
shl
call
push
aam
aam
shrl
push
das
int3
mov
mov
rolb
and
or
sub
pop
jge
lcall
add
ficompl
shlb
in
cmp
sti
pop
test
in
fiadds
push
call
mov
mov
jnp
les
sbb
jo
adc
mov
add
ja
orb
push
sbb
cmp
sub
add
lret
into
sbb
scas
push
xchg
rclb
addr16
and
les
and
add
xchg
or
push
lret
das
sub
add
jo
fiadds
sub
data16
add
adc
les
bound
inc
push
pop
roll
xchg
xchg
add
pop
test
sbb
push
jo
jns
out
call
jp
jne
out
out
popf
lods
call
or
add
push
sub
mov
popf
imul
or
add
fildl
movsb
lods
arpl
pop
jb
inc
inc
or
inc
mov
mov
shrb
inc
mov
rorl
outsb
pop
cmp
or
dec
in
push
stos
and
dec
pop
push
xchg
xchg
pop
jnp
adc
inc
cs
or
ss
lods
jge
push
cmp
je
or
out
mov
dec
cmp
adc
cmp
je
mov
cmp
pop
jne
dec
mov
inc
inc
mov
adc
stos
mul
pop
add
fcompl
addr16
xor
out
testl
jae
push
add
outsb
filds
jecxz
adc
xchg
testb
or
test
shrb
xor
sbb
xor
cld
imul
notl
pop
jno
sub
and
xchg
fmul
add
inc
add
xor
cwtl
add
and
jo
fimull
mov
arpl
mov
rorb
push
cmp
call
int
dec
dec
add
addr16
mov
push
pop
je
or
jge
setg
sub
cli
cs
loop
aas
sub
or
loopne
sub
mov
jmp
cmp
jle
sub
ficoml
xor
mov
divb
es
sbb
loop
add
lcall
jmp
sub
add
dec
cmpsb
xchg
sahf
sub
daa
cmc
js
pop
xor
fisttps
mov
out
inc
dec
inc
out
push
call
es
pop
fs
out
mov
cld
xor
push
or
movsb
cmp
sub
add
or
add
sub
jle
clc
add
pop
les
xor
test
or
or
and
jo
mov
rcl
push
lods
add
dec
pop
insb
push
cwtl
sub
sahf
add
ja
jge
loopne
ds
jbe
ds
sahf
xchg
dec
adc
jge
scas
add
adc
lahf
adc
pop
xor
lods
pop
xor
ret
cmp
xor
or
sti
out
fsubl
inc
add
xchg
mov
or
dec
sbb
das
sub
xor
push
mov
in
inc
xor
sbb
push
icebp
popa
ret
jge
xchg
imul
arpl
fpatan
iret
in
jmp
mov
jge
or
je
xor
adc
cmp
add
inc
and
lret
lret
mov
push
out
xor
mov
or
sar
or
add
lea
outsl
loope
add
add
enter
mov
mov
aaa
lahf
cmp
pop
push
xor
and
enter
dec
dec
ljmp
push
pushf
imul
loopne
das
xor
leave
and
add
mov
and
enter
or
dec
fwait
pusha
mov
inc
neg
sbb
jecxz
fdivr
das
jle
lock
ret
daa
xor
or
jne
pop
cmp
inc
inc
adc
sahf
add
mov
or
inc
cmp
ss
sbb
adc
push
and
add
add
or
fldl
add
ja
sub
mov
or
dec
sub
push
movswl
les
lea
faddl
int3
data16
xchg
jbe
add
icebp
ss
add
shrd
cltd
push
addb
pop
cmp
fbstp
jge
sbb
fdivl
clc
mov
or
cmp
mov
stc
inc
add
dec
jmp
or
xor
mov
cmp
or
dec
dec
or
call
js
loopne
mov
sbb
inc
test
or
add
ret
mov
mov
neg
inc
out
and
add
outsl
push
ret
sarl
jg
gs
lods
insb
jb
push
sub
or
fidivrl
push
xor
loope
mov
lock
or
inc
shll
push
or
fdivrl
add
jbe
cmpsl
inc
sbb
push
shll
lock
jg
lods
jb
fs
pop
jnp
dec
dec
inc
dec
pop
or
jae
and
lcall
add
daa
subl
adc
add
cmpsb
stc
mov
jno
in
or
es
and
test
or
cmp
and
add
adc
loopne
jb
sbb
push
or
add
pop
xchg
sbbl
and
pop
or
push
sub
inc
sub
not
jge
loop
inc
daa
mov
jne
jl
push
sbb
mov
popa
push
add
sub
xchg
pop
xor
addr16
ficompl
mov
push
xchg
add
sbb
adc
into
testl
or
fs
jne
xor
xchg
sbb
push
cmp
sbb
inc
lret
jbe
adc
xchg
push
dec
xchg
lea
mov
push
push
push
insl
roll
pop
insl
cmp
cld
cld
jl
sahf
sub
or
mov
cmc
rcrb
shr
loop
adc
push
mov
and
jo
jns
jge,pt
out
or
gs
or
pop
data16
repnz
cmp
inc
popa
je
inc
je
dec
xchg
cld
cmp
push
jmp
xor
jmp
mov
shrl
sub
cmp
xchg
fcoms
popf
or
cmp
push
or
icebp
push
enter
and
movsl
or
adc
call
jne
sub
dec
add
push
pop
clc
fstps
or
add
out
ja
inc
push
jns
adc
add
or
sub
shrb
nop
pop
xor
xor
out
mov
push
xor
xor
icebp
and
inc
mov
cmp
inc
arpl
pushl
xchg
cltd
sar
lds
jmp
jbe
mov
cmpb
jne
jp
dec
inc
nop
mov
rcl
mov
xchg
ror
adc
add
hlt
xor
cmp
das
movsl
cmp
inc
dec
rorb
mov
pop
pop
lahf
xor
xchg
ss
aad
cld
lahf
sbb
dec
dec
push
sub
and
repnz
jne
and
popf
loopne
mov
sub
push
push
xor
shll
push
fwait
pop
cmpsl
sub
sub
push
cmp
or
aaa
dec
sub
imul
cmp
xor
pop
jmp
mov
xorl
xor
mov
cmpl
xchg
lret
or
push
cmp
or
dec
push
mov
mov
arpl
pop
sbb
shrb
push
jp
pop
call
cmp
sub
mov
test
popa
movsb
ret
xor
das
jmp
ds
mov
je
mov
jge
mov
add
pusha
mov
adcb
cld
push
inc
cmp
iret
or
mov
sub
dec
mov
js
mov
pop
xor
jl
cmp
icebp
jae
mov
icebp
mov
mov
or
adc
je
shlb
dec
sbb
and
sub
adc
dec
inc
push
jmp
or
jmp
shr
xor
testb
sub
or
adc
js
shrl
orb
sbb
in
jae
test
shll
insb
pushf
cmp
inc
xchg
add
hlt
call
popf
mov
fildll
inc
xor
movsl
xorb
mov
jne
in
push
dec
or
das
aas
in
jae
jb
je
insb
pop
mov
or
test
enter
push
or
mov
xchg
jbe
in
mov
cld
cwtl
adc
ret
pusha
push
dec
fs
xor
mov
or
jecxz
push
push
adc
imul
loope
and
mov
cmp
sbbb
int
push
cmp
adc
add
or
xor
out
test
xor
faddl
movsl
rclb
js
shll
add
cmp
jge
notl
popa
pushf
push
cmp
jecxz
jbe
mov
dec
and
in
and
adc
sub
outsl
mov
arpl
add
and
xor
cmp
push
adc
daa
sbb
inc
jmp
mov
les
sbb
sub
das
popa
ret
outsb
xor
stc
inc
inc
test
fnstenv
push
insl
mov
push
cmp
add
outsb
and
enter
aam
push
jl
adc
pop
movsl
lret
mov
outsb
mov
add
jne
inc
xchg
out
mov
pop
jmp
adc
cmp
fidivs
addb
in
adc
dec
mov
mov
mov
push
shlb
fsubl
dec
ret
pop
mov
nop
andl
mov
mov
sub
sub
xchg
icebp
or
movsb
cmp
mov
adc
inc
loope
scas
dec
cmp
adc
popa
jnp
rorb
mov
ljmp
sub
mov
jecxz
push
mov
cli
push
mov
nop
adc
and
loope
adc
mov
xor
sbb
inc
and
add
sbb
int
loope
pop
incl
aaa
xchg
and
lea
pop
leave
enter
pop
or
add
fs
and
sub
mov
insb
shll
sbb
xchg
dec
jo
shll
and
fwait
mov
sub
pop
xchg
loopne
jmp
pushf
mov
xchg
and
xor
or
adc
inc
mul
jno
pusha
jne
pop
jge
les
cmp
push
inc
enter
inc
icebp
xor
push
stos
imulb
sub
jo
xchg
out
movsb
add
lret
pop
add
adc
es
cmp
shr
add
or
xor
clc
ja
pop
add
shr
shr
or
cwtl
jns
das
mov
add
add
or
bound
scas
push
bound
imul
sub
or
mov
fildl
cmpsb
movsb
adc
inc
js
push
je
mov
ds
add
fiaddl
sub
pop
sub
lret
add
sbb
popf
dec
testl
cli
mov
or
or
mov
addl
adc
or
xor
mov
inc
adc
dec
fwait
inc
test
adc
xchg
jb
call
out
rol
pop
adc
movb
lods
rcll
shr
adc
add
mov
push
cli
inc
fbld
or
shl
andl
adc
aad
int3
xchg
cmc
fldl
adc
clc
stos
cmp
pop
pusha
imulb
or
test
adc
lret
test
je
je
mov
push
or
push
adc
and
dec
inc
cmp
fsubl
fcmovb
clc
or
add
sub
insb
in
add
push
mov
sbb
push
add
mov
pop
call
cmpsl
push
mov
sub
jne
add
call
movsb
pop
ljmp
and
dec
and
outsb
inc
inc
and
aad
cli
push
cmc
mov
push
insl
call
dec
xchg
dec
divl
je
frstor
mov
inc
in
and
les
adc
add
xchg
movsl
add
mov
add
pop
xchg
dec
cmp
lock
dec
fcos
xchg
jl
cmpb
jl
xor
cmpb
push
dec
loopne
idiv
mov
test
sbb
xchg
adc
pusha
and
push
rorl
adc
push
adc
shrb
push
mov
push
push
and
aam
iret
ds
inc
adc
cmc
mov
cld
aam
pop
or
pop
xchg
inc
cmp
sub
and
inc
inc
push
test
roll
sahf
nop
clc
mov
jbe
jbe
dec
add
imull
stc
and
enter
cmp
loope
into
adc
xchg
stos
adc
add
rcrl
gs
add
je
movsl
inc
add
mov
pop
cs
pslld
mov
or
pop
push
jle
movsb
pop
imull
lea
or
jns
adc
dec
jge
rorb
shrl
add
aam
pop
jmp
push
in
xchg
cltd
pop
and
je
pusha
push
into
pop
stos
lods
mov
in
pop
hlt
xchg
dec
jge
inc
inc
div
fcomps
fiaddl
sbb
sbb
inc
inc
js
jns
sbb
adc
adc
xor
enter
fcoms
test
cltd
push
inc
and
fnstenv
fcomi
sbb
sbb
sbb
and
adc
cli
leave
dec
jns
js
mov
daa
pop
pop
pop
mov
int3
pushf
jae
orb
sbb
ret
ret
adc
and
shr
test
stc
mov
into
mov
and
not
cld
lock
je
testb
or
add
iret
and
push
test
adc
call
in
lea
mov
pop
add
pop
pop
add
call
xchg
adc
ds
cmp
push
or
into
jbe
jns
sub
add
test
pop
pusha
scas
xchg
into
mov
add
push
lret
inc
notb
xlat
hlt
fs
das
pusha
insb
sbb
xchg
or
jns
mov
push
pop
and
rcrb
cmp
jle
in
pusha
cmc
stc
gs
mov
inc
xor
pop
dec
cmp
insl
ljmpw
ss
dec
pushl
push
jo
enter
jg
or
inc
jge
inc
add
addl
or
jne
sub
mov
testb
sbb
push
sub
leave
je
outsl
or
xchg
lahf
mov
mov
mov
push
xor
adc
es
mov
je
in
mov
add
out
push
cmp
ja
add
cmp
adc
cmp
jne
shll
lcall
mov
xor
idivl
pop
add
nop
jp
dec
add
dec
in
or
push
cmp
add
ret
ja
js
adcb
mov
mov
pusha
xor
pop
pop
jne
push
es
scas
sbb
das
test
or
jmp
mulb
je
iret
push
pop
mov
mov
cmp
push
loopnew
mov
lret
and
xchg
or
pop
dec
xchg
lea
repnz
fdivs
enter
add
cltd
jnp
xor
pusha
adc
jmp
mov
test
mov
mov
jo
xchg
ljmp
aam
add
outsb
xlat
mov
jno
cmp
push
lea
pop
inc
jp
inc
mov
xlat
pop
aam
cs
xchg
xor
xorl
push
xorb
sbb
in
or
arpl
jae
adc
arpl
inc
test
add
mov
sbb
add
add
adc
ror
out
sahf
cmpsl
push
rcl
rcl
aad
out
sahf
xlat
fcomp
inc
sub
jg
lock
data16
movb
jmp
or
dec
rcrl
dec
in
shlb
cmp
test
aaa
add
orb
mulb
adc
push
inc
push
sbb
pop
push
aas
and
sahf
rorb
test
pushf
sahf
push
bound
inc
out
divb
in
cmp
frstor
icebp
adc
idiv
pop
idivl
push
xor
push
test
shrb
testb
add
adc
push
push
sbb
add
xor
mov
imul
xchg
mov
jmp
sbb
sbb
dec
lea
and
adc
sar
inc
js
mov
shrl
add
pusha
popf
test
pop
addl
adc
outsb
outsl
loopne
sub
mov
xor
inc
adc
sar
fisubs
addr16
add
dec
pushf
push
jp
jecxz
les
inc
add
decl
adc
insl
insl
xchg
push
or
aam
inc
roll
hlt
sti
ljmp
idivl
out
mov
mov
and
lea
pop
sbb
test
xor
pop
lcall
ja
gs
ss
add
add
push
leave
jns
lods
mov
inc
mull
in
je
in
ljmp
dec
adc
call
and
inc
jnp
cmp
test
shl
ret
js
mov
push
lea
adc
in
mov
dec
xchg
mov
sub
or
and
movsb
mov
add
ret
movsb
sub
faddp
mov
push
addl
mov
cwtl
push
jl
loop
test
ret
and
rorb
nop
loopne
jle
jle
jne
adc
adc
enter
jecxz
or
add
cld
or
and
hlt
rorb
push
dec
add
push
push
lret
adc
jo
inc
xchg
dec
test
push
or
shlb
insl
clc
in
out
mov
xchg
mov
or
dec
inc
push
pop
inc
sub
add
lock
repnz
lock
or
imul
inc
xchg
out
cli
div
adc
or
jb
xor
pop
adc
mov
xchg
ret
mov
notb
mov
adc
mov
test
ret
push
repnz
mov
or
mov
and
cmp
push
fnstenv
xchg
mov
push
dec
xor
inc
mov
nop
ret
sbb
pop
jnp
add
push
mov
repnz
mov
sub
loop
out
int3
shll
mov
jb
inc
cmp
sub
ret
andb
or
sbb
mov
push
in
or
push
lea
jne
fdivrs
aam
mov
jo
inc
inc
test
dec
ss
ret
push
sub
inc
sbbb
dec
pusha
add
xor
pop
mov
mov
xchg
cmpsl
call
fcmovu
mov
xor
pop
insl
aaa
dec
push
mov
inc
add
lods
rolb
inc
jl
and
xchg
push
inc
out
sbb
call
notb
negb
test
dec
gs
lock
out
or
add
enter
adc
or
lock
push
adc
add
inc
pushf
xchg
movsb
jne
sbb
das
inc
pop
push
in
bound
inc
push
dec
into
mov
adc
push
stos
aaa
add
sub
insb
sbb
movb
pop
data16
mov
push
add
push
nop
cmp
in
test
das
cmp
sub
mov
sub
or
fldcw
mov
mov
pop
shr
pop
add
or
xchg
nop
jb
push
shll
test
jne
sbb
neg
xor
pop
jle
inc
imul
adc
and
imul
pop
inc
mov
fmuls
lea
xlat
xor
push
and
call
je
push
adc
sub
ret
sbb
out
push
sti
aas
aad
icebp
and
xchg
mov
repnz
dec
fldenv
add
sub
into
or
imull
or
test
in
cmp
stos
sub
movsb
xabort
mov
add
enter
cmp
cmp
push
shlb
add
add
mov
sbb
jne
cmp
shll
xor
or
mov
inc
xchg
insl
pusha
inc
pop
inc
in
dec
push
jg
aas
nop
dec
mov
dec
cmp
jge
sub
cmpb
or
dec
sub
movb
dec
cmp
dec
cmp
add
dec
add
add
fadds
mov
repnz
mov
add
sub
jb
int
pushf
adc
xor
ret
and
add
push
loopne
dec
inc
add
adc
inc
or
pop
imul
add
test
lcall
lds
outsl
jmp
and
push
mov
sub
xchg
cmp
aam
or
xchg
jbe
jmp
mov
cmp
push
or
add
or
je
dec
fcomps
scas
add
adc
push
add
pop
pop
mov
mov
stos
push
pop
ss
xchg
adc
or
jae
in
popa
push
pop
pop
sbb
pop
mov
mov
iret
xor
adc
test
mov
mov
rcrl
add
mov
ret
mov
prefetchw
inc
adc
and
and
int3
inc
push
pop
dec
push
imul
add
cmpl
lcall
lret
sub
add
scas
movsl
or
je
dec
pop
cmc
and
xchg
adc
xlat
aam
mov
dec
pop
lahf
push
add
mov
cli
and
fabs
jo
and
and
sbb
inc
jge
xor
pusha
inc
mov
pop
jb
mov
adcl
mov
mov
cld
add
push
and
je
ja
jo
enter
inc
stos
and
mov
addr16
into
xchg
sub
aam
out
mov
in
stmxcsr
adcl
pop
test
pop
ss
or
add
or
int3
dec
xor
adc
xchg
add
jbe
jle
pusha
mov
lret
je
and
sbb
inc
jg
inc
in
in
into
into
mov
stos
and
sub
idivl
ja
pop
nop
pop
cwtl
pop
dec
pop
dec
andl
mov
or
pop
add
test
nop
das
incb
cld
nop
cmp
pop
lcall
add
leave
lahf
pop
test
mov
fadds
enter
test
and
pop
mov
and
inc
leave
adc
or
mov
jmp
cmp
test
lret
cwtl
aad
ret
testb
push
scas
xor
inc
sbb
push
andl
sub
mov
pop
shll
dec
xor
movsl
orl
xchg
lea
and
push
insb
jo
or
pop
cmp
stos
sub
cmp
int
rol
ficomps
push
sbb
movsb
mov
daa
nop
add
lds
sub
fadds
out
jge
addr16
pop
outsb
lret
lret
or
cmp
clc
xchg
add
bound
nop
push
mov
sbb
xor
test
adc
out
push
adc
cwtl
orb
cmp
inc
jmp
adc
dec
inc
mov
jb
add
outsb
sub
ds
je
pusha
mov
rorb
icebp
mov
inc
int3
call
xchg
and
sbb
nop
inc
lds
out
dec
or
jo
jbe
out
loope
into
sub
mov
dec
shrl
or
or
pop
lret
or
cmp
xor
mov
cmp
add
repz
adc
sbb
jb
shlb
dec
inc
jmp
test
test
and
imul
push
sbb
fs
lea
sbb
fldl
cmpb
pushl
inc
repnz
test
je
test
push
xor
mov
out
je
and
fldenv
call
loopne
xchg
inc
cwtl
pop
mov
push
out
fs
xlat
outsl
jge
sbb
int3
adcb
test
xor
inc
and
shlb
adc
daa
dec
rcr
push
hlt
imul
pusha
xchg
dec
inc
sbb
sahf
dec
pop
xchg
clc
aas
add
xchg
and
popf
pop
jge
lea
jae
lret
pusha
push
pop
or
pop
push
imul
mov
xchg
adc
push
adc
xchg
stos
addl
cmp
add
sub
xchg
popa
movsl
popa
movsl
xorb
or
push
adc
popa
add
call
sub
mov
jae
addb
lds
jmp
push
push
xlat
xchg
pusha
adc
jb
fs
push
sub
fsubrl
adc
xchg
lods
fsts
add
popa
sar
sub
adc
jmp
xor
test
inc
hlt
or
push
addb
notl
add
add
lods
xchg
aam
ret
sub
pushf
jmp
xchg
cmp
or
daa
add
sub
inc
popa
jecxz
pop
inc
mov
fmull
outsb
out
outsb
or
push
cmp
or
into
xor
rolb
xor
add
pop
add
orl
pop
sbb
add
push
in
lods
data16
mov
and
sbb
dec
sbb
dec
rorl
push
and
add
arpl
fimuls
or
cwtl
xchg
or
call
or
sub
inc
or
pop
jl
mov
sbbb
lea
jmp
push
push
ss
cltd
adc
and
ret
js
arpl
repnz
lock
dec
mov
loope
in
jae
fsubs
out
sub
shrl
push
jmp
dec
loop
jp
fs
fisttps
xlat
cmp
ss
push
dec
and
call
mov
sbb
sbb
sbb
inc
js
or
cmpsb
push
sbb
out
sbb
pop
pop
add
adc
shrl
sub
add
inc
mov
sbb
mov
push
xchg
and
push
mov
mov
push
and
add
jl,pt
inc
hlt
xor
sub
sub
push
shlb
add
sub
ja
aad
xchg
pop
testb
imul
sbb
inc
inc
fs
fstpt
push
push
mov
das
or
sbb
xchg
filds
dec
cmp
mov
dec
jnp
inc
adc
xor
imul
addb
nop
js
jns
xor
gs
add
lcall
adc
cmp
or
gs
sbb
add
add
data16
mov
add
mov
dec
pop
xchg
ret
dec
cmp
pop
or
mov
sub
sbbb
pop
scas
nop
loopne
sub
loope
and
mov
mov
loopne
clc
out
cvttps2pi
aam
test
aaa
push
stos
mov
scas
mov
lods
rcll
cs
fsts
sub
mov
mov
insb
and
xor
inc
jge
lahf
xor
jmp
fstps
icebp
lahf
xorl
xchg
mov
fadd
fidivl
test
in
mov
sbb
mov
inc
xchg
push
je
mov
lcall
add
mov
pop
cli
pop
or
dec
in
test
mov
xchg
lock
arpl
sub
push
mov
add
sub
fdivl
daa
call
fildl
icebp
leave
loopne
mov
data16
jb
mov
xchg
aad
cmp
jecxz
jbe
adc
mov
push
xchg
popa
sbb
mov
xor
loopne
dec
xchg
not
adc
in
shrb
shlb
push
mov
movsb
add
mov
test
push
or
or
fs
lock
ret
or
sbb
ss
popa
inc
call
or
enter
pop
or
mov
fmuls
xor
xor
mov
sbb
insb
nop
inc
jne
sahf
addr16
push
and
sub
jl
jge
and
les
outsl
sbb
push
adc
insb
sbb
jne
cmp
sub
and
adc
pop
les
lret
out
jae
pop
dec
mov
push
pushf
or
mov
lds
dec
nop
xor
call
dec
sbb
jg
in
push
mov
and
sub
dec
sub
jg
sub
xor
and
or
and
lret
mov
sbbl
fsubr
loope
sbb
aam
or
movsb
les
test
insl
cmp
xchg
in
insl
cmp
or
imul
adc
cmp
mov
sbb
mov
dec
pop
lret
adcb
in
jge
inc
in
sub
cltd
call
mov
arpl
jno
fstpl
add
add
jp
subl
sti
jnp
addb
cltd
xchg
das
fstps
add
push
aad
sbb
and
sbb
imul
jmp
dec
enter
or
aaa
pop
add
pusha
jb
idivl
pop
sbb
push
scas
arpl
repz
xchg
mov
cmp
or
imul
shlb
or
dec
test
mov
addb
sub
pop
or
adc
leave
and
sbb
adc
cltd
fs
cmp
cltd
fs
inc
inc
dec
fs
xchg
dec
push
mov
out
or
sbb
jle
push
xchg
test
add
add
add
nop
add
aam
add
pop
adc
enter
cmpsb
test
aas
hlt
test
lock
test
enter
xchg
sbb
fadds
in
repz
mov
sbbb
adc
in
enter
scas
adc
xchg
mov
in
dec
mov
sbb
mov
mov
int3
mov
push
add
sbb
mov
and
push
push
or
movsl
str
inc
rol
aaa
call
jp
mov
jl
popf
dec
mov
mov
aad
nop
push
fs
or
pop
shl
inc
cmp
inc
pop
les
mov
push
push
sbb
in
outsl
cld
add
pop
rorl
mov
cmp
mov
or
sbb
in
pushf
dec
and
mov
or
leave
mov
enter
dec
mov
addr16
add
jo
inc
jo
cs
orb
lock
mov
adc
inc
mov
insl
xchg
popa
gs
add
ret
sbb
inc
xchg
xor
push
push
and
into
scas
dec
adc
pop
scas
in
int
cli
test
fmull
or
or
outsb
sub
mov
out
sub
push
ja
sbb
adc
addr16
and
out
cmpb
or
movsb
dec
clc
out
lea
mov
sbb
or
mov
cwtl
cmp
fcom
mov
push
mov
mov
lock
mov
test
lods
mov
pushf
pushf
pushf
pushf
mov
pushf
pushf
pushf
enter
adc
in
ret
adcl
xchg
daa
mov
testl
sub
sets
pusha
and
shl
in
popl
nop
push
inc
scas
imulb
inc
cmp
sbbl
nop
and
fcoms
lods
add
loopne
mov
mov
xchg
push
insl
fmull
add
pop
das
mov
subb
jl
inc
xchg
int3
sub
inc
pop
lea
push
pushf
bound
xchg
int3
das
unpcklps
insb
xchg
mov
jge
or
push
jb
xchg
mov
movsb
inc
sahf
loopne
loopne
fsubl
test
mov
movnti
pop
dec
in
std
fisttpll
add
sub
std
insl
or
enter
inc
pop
fsubs
int
fucomp
roll
xor
inc
rorl
sbb
pop
add
xorb
push
popl
dec
push
xchg
sahf
dec
bound
enter
xorl
stc
xchg
out
sbb
dec
push
pop
mov
cltd
pusha
inc
xchg
scas
jo
and
es
js
pushf
sbb
movsl
and
test
xchg
das
mov
shlb
sub
push
bound
cmovno
xchg
insb
mov
sbbl
dec
sub
and
push
adc
outsl
in
xchg
call
imul
xor
pop
mov
shll
xchg
mov
and
inc
stos
movsb
add
inc
ret
shll
aam
stos
dec
adc
repnz
inc
cwtl
sub
insb
inc
stos
call
cmc
setae
dec
cmp
das
nop
xchg
lock
rorl
jns
jmp
insb
push
and
pop
and
cltd
pop
or
lret
xchg
popa
mov
or
or
sbb
enter
or
xchg
leave
add
push
jo
daa
in
aaa
mov
pop
lcall
lcall
add
mov
xchg
in
xor
and
rolb
in
loope
fwait
xchg
gs
data16
inc
jns
or
inc
jns
xchg
add
adc
mov
out
sub
push
mov
fcompl
cs
dec
pushf
ret
and
mov
imul
fcoml
movsb
or
test
or
aam
enter
in
aam
inc
dec
xor
xor
inc
jae
mov
test
dec
movsb
sub
es
nop
decb
popf
std
inc
inc
add
push
bound
add
cs
aam
sbbb
adc
jno
xchg
xchg
inc
sbb
js
in
xchg
cwtl
pusha
cmp
dec
sahf
push
in
inc
loopne
cmp
fmull
cmpb
mov
jno
push
subl
adc
xor
arpl
jecxz
add
push
pop
or
push
jns
enter
leave
leave
leave
insl
mov
int3
enter
leave
leave
sarb
mov
cwtl
mov
pushf
addr16
dec
mov
dec
xchg
pop
shlb
movsl
push
das
dec
dec
push
imul
adc
inc
lds
mov
add
push
je
fmuls
adc
lock
mov
xchg
xchg
test
lcall
adc
popa
xchg
fs
jnp
mov
pop
mov
mov
test
sbb
add
mov
push
test
or
fcompl
add
es
adc
and
subb
leave
or
movsb
sbb
inc
aad
arpl
sbb
rcr
push
mov
popw
loopne
push
cmp
add
add
ret
mov
inc
sub
mov
loope
jno
push
bound
insb
sub
pop
shrb
in
mov
dec
sti
call
movsl
sub
xor
push
ret
xor
adc
aas
cmovnp
mov
push
shlb
int3
mov
adc
fcoml
shrl
cmpsb
mov
pop
test
lods
mov
mov
in
add
shrl
rorb
or
test
xchg
test
push
rcl
mov
lret
aam
adc
imul
mov
add
cmp
popa
xchg
ret
jae
inc
sti
xchg
sbb
or
lea
lds
test
cmp
sbb
icebp
pop
test
std
add
or
shrl
adc
push
and
popa
add
adc
nop
ror
aam
and
mov
cmp
adc
int
push
mov
pop
xor
fadds
fcomp
dec
sbb
test
and
jp
mov
int
cmp
dec
lcall
mov
push
shrl
stos
andl
adc
and
out
stos
mov
sbb
push
inc
pop
out
push
push
insl
enter
lods
sub
subb
imul
ss
fadds
lods
pop
jno
lods
cmp
and
test
add
icebp
lds
mov
imul
test
push
out
insl
or
and
pushf
dec
and
shlb
test
fdiv
mov
lret
lock
xchg
mov
pop
mov
mov
adc
test
xchg
cmp
sub
push
shll
shl
sub
stos
daa
idivl
mov
addr16
push
loopne
faddl
aas
xor
lds
mov
test
or
mov
cmpsl
test
stos
or
insl
fdivrs
or
cmpsl
push
xchg
sbb
lret
sbb
ret
insb
std
jnp
test
pushf
std
inc
pop
inc
nop
dec
ficoml
mov
int
insl
xchg
xchg
es
cwtl
mov
jb
and
lods
cld
mov
mov
xor
in
adc
or
cld
mov
adc
add
push
mov
daa
and
mov
mov
mov
pop
mov
call
inc
mov
nop
dec
add
popa
lea
or
push
cmpsl
or
enter
ret
test
pop
cld
mov
aaa
movsb
data16
sub
movl
cmp
shlb
mov
loopne
loop
xchg
popa
mov
mov
shll
xchg
pop
inc
inc
shrb
cmp
jne
mov
mov
adc
test
mov
ret
adc
cltd
fdiv
adc
push
test
adc
nop
aad
adc
movsl
mov
dec
mov
mov
mov
or
dec
rorb
xchg
aam
out
adc
inc
cmpsl
pusha
out
adc
mov
test
pop
enter
mov
ljmp
push
inc
bound
adc
push
mov
or
xor
fsubl
mov
mov
nop
cmp
mov
inc
cwtl
mov
faddl
push
and
pop
mov
pop
test
pop
cmp
adc
push
add
popl
mov
iret
loopne
mov
shrd
cmpsb
ss
cwtl
adc
jmp
mov
test
mov
add
std
stc
or
mov
mov
xor
insb
xchg
pop
inc
or
iret
roll
in
in
loop
push
movsb
xchg
mov
push
filds
sub
mov
pop
popf
mov
pusha
xchg
xor
mov
inc
xor
sub
xor
dec
xor
inc
lods
bound
leave
jmp
addl
mov
test
jmp
and
and
mov
mov
pusha
adcb
adc
mov
invd
adc
jl
and
pop
pop
adc
xchg
push
jno
iret
push
add
cmp
mov
xor
imul
imull
mov
adc
mov
int
nopl
fbld
stc
sahf
mov
inc
mov
sbb
xchg
add
xor
jecxz
xchg
xchg
mov
in
add
xchg
add
add
or
and
test
cltd
or
repnz
or
sbb
out
add
sub
data16
and
pushf
inc
rol
in
add
push
inc
in
mov
and
jecxz
loopne
cmp
cmp
fsubr
or
xchg
pop
out
insb
mov
in
inc
ficoml
push
out
shl
stos
sbb
mov
jmp
xchg
lock
dec
fstpl
fsubs
cmp
aam
inc
in
repnz
nop
lea
push
inc
mov
subb
sub
jecxz
stos
popa
inc
cmpsb
add
je
jo
inc
xor
mov
xlat
push
addb
insl
xchg
fisttpl
dec
pushf
dec
jb
cwtl
pusha
mov
xchg
test
mov
pop
pop
les
testl
enter
loopne
or
imul
lds
cmp
pop
popa
adc
movsl
and
sbb
lea
dec
sbb
push
iret
pop
icebp
les
sub
out
lcall
fadds
cmp
xor
cmp
out
and
sbb
test
into
inc
test
mov
jge
pop
add
inc
cs
rolb
push
mov
add
and
std
add
and
mull
aam
add
adc
dec
cs
dec
and
rcll
pop
inc
jg
ss
mov
cmpsl
in
aam
add
sub
nop
cmp
fsubrs
pop
xchg
sbb
dec
call
aad
cmp
sub
enter
or
les
or
dec
push
mov
cmp
enter
rcrb
call
repz
enter
adc
in
or
nop
ja
adc
add
lock
or
mov
xchg
mov
gs
sbb
xor
push
adc
dec
cmp
dec
sbb
mov
jne
dec
sbb
inc
cmp
or
sub
cmp
add
cmp
out
and
inc
ror
adc
test
push
and
mov
das
or
xchg
sub
mov
aas
rcrb
push
movsl
aad
in
add
fmul
jne
pinsrw
sub
sub
int3
imul
int3
push
dec
pop
mov
orb
sub
xor
call
mov
ret
test
into
pop
mov
push
cmpsb
fiaddl
insb
gs
fucomi
jbe
sbb
pop
mov
push
ret
subb
test
nop
arpl
dec
inc
test
add
adc
sbb
vsqrtps
inc
xchg
adc
inc
or
mov
leave
and
roll
nop
dec
call
fs
sti
add
cmpsb
ss
icebp
xor
call
jno
cwtl
pop
xor
test
sub
adc
shrl
rorl
cmpsb
inc
inc
fmull
push
rcl
inc
enter
in
in
adc
and
dec
jb
and
cltd
ss
adc
sbbl
mov
add
fcmovbe
push
jno
sbb
sbb
in
test
es
jbe
scas
add
fsubs
adc
add
and
and
xor
bound
xor
xchg
es
scas
sub
xor
mov
mov
call
movb
xor
jl
xor
sbb
cmp
mov
fwait
cmc
mov
adc
xor
and
pop
nop
and
mov
and
inc
int
daa
cs
xchg
inc
ficompl
dec
pop
and
add
pop
pop
xor
xchg
push
mov
in
sub
test
das
test
xlat
mov
lock
inc
in
push
fadd
shrb
jns
dec
pop
les
int3
adc
sbb
in
push
clc
mov
nop
add
shrb
addb
rclb
or
imul
rclb
cltd
scas
pop
and
sub
or
push
ret
sbb
push
stos
lea
mov
jae
and
loope
cwtl
push
leave
ret
add
cmpsb
xor
adc
sbb
imul
aas
dec
xor
mov
mov
push
dec
arpl
insl
add
adc
push
mov
xchg
push
fcom
ficoms
clc
inc
in
pop
popl
jno
fsubr
cld
push
push
or
xor
inc
adc
addl
jo
sti
clc
mov
xor
fldl
pop
enter
ficoml
hlt
cltd
cmp
cmp
push
and
iret
aam
fisttpll
adc
xor
test
int3
and
jge
sbb
sub
ffree
sbb
jne
repz
inc
fsubrp
jae
mov
and
inc
pop
sub
xlat
xor
jmp
mov
pop
movsb
dec
cwtl
roll
loopne
adc
popa
shrb
rorl
cmp
and
fmull
imul
and
test
add
mov
adc
push
fadds
xor
fistpl
imul
sbb
cltd
fs
mov
push
push
icebp
dec
adc
inc
pop
insl
xor
insb
push
xor
add
out
and
insb
adc
xchg
adc
inc
fsubr
loopne
mov
mov
ret
mov
jp
mov
xor
in
adc
pop
repnz
in
ljmp
fmul
or
insl
nop
cmp
xor
daa
push
repnz
mov
mov
aas
xor
lcall
jb
jp
xchg
rolb
dec
sti
mov
fisubrl
sub
fbstp
jo
pop
and
add
sub
mov
pusha
or
repnz
push
add
xchg
pop
mov
add
xchg
mov
push
xchg
in
or
and
sbb
loop
add
dec
adc
pushf
pop
les
cmp
leave
fsubl
or
incl
xlat
push
sbb
xor
lock
int3
cmp
popa
dec
fistl
jp
rorb
into
shll
jae
pop
adc
sbb
fs
repz
outsl
sub
cmp
sub
mov
inc
inc
sti
sbb
add
repz
dec
addb
test
dec
pop
jae
add
cmp
mov
push
loope
aam
lahf
repnz
aas
jns
fsubrl
mov
push
cmpsl
ret
or
shr
inc
mov
pop
push
sbb
test
mov
mov
ljmp
add
fistpl
or
jnp
mov
add
jg
jns
and
shlb
leave
jg
mov
mov
mov
jns
mov
jle
test
cs
je
jo
test
cmp
push
ljmp
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
push
ja
ljmp
pop
jmp
arpl
addr16
insl
outsb
outsl
jo
jb
je
jbe
js
jp
xor
xor
ss
cmp
sub
daa
adc
mov
rcll
xchg
adc
push
or
or
outsl
cmp
adc
adc
push
dec
repz
insl
cmpsl
mov
dec
repz
push
push
dec
outsb
je
jb
outsl
arpl
mov
in
gs
out
sbb
push
dec
imul
cmpl
push
gs
xor
cs
insb
cld
adc
popa
and
popa
je
outsl
outsb
push
mov
sbb
subl
xor
jnp
xchg
adc
add
pop
sub
cmp
call
inc
outsl
jb
js
je
jb
lock
jae
cmp
or
outsl
add
add
add
repnz
push
gs
push
je
imul
jne
jb
mov
outsb
mov
mov
dec
xor
xor
idiv
mov
cmp
dec
and
negb
pop
jns
add
das
das
adc
push
dec
push
ja
add
push
insl
bound
daa
dec
outsl
jbe
pop
mull
dec
arpl
push
jo
sub
jnp
clc
inc
jne
jne
dec
jne
xchg
mov
stc
push
roll
jb
insb
dec
popa
jb
push
daa
enter
insb
adc
out
scas
cmpsl
xchg
popl
pushf
jae
jg
addr16
push
jne
lock
fnsave
xor
jae
fwait
sub
push
scas
clc
sbb
cmp
jle
dec
js
push
jne
xchg
popf
jae
outsl
pop
dec
inc
ds
popa
das
jo
sbb
pop
fistps
push
sbb
mov
popl
add
inc
push
imul
inc
ja
add
orb
cmp
jg
dec
sub
sub
sub
imul
test
sub
pop
pop
aam
cmp
fcomi
cmpsl
jnp
jge
jg
cmp
inc
test
mov
cmpsl
imul
pop
fmull
testb
and
adc
push
inc
insb
jae
cs
xlat
je
push
fs
mov
inc
cmp
je
mov
xor
bound
and
jb
jbe
dec
push
push
mov
sbb
dec
dec
inc
sbb
fwait
loope
data16
add
xor
sbb
rcrl
jo
imul
insl
pop
push
shr
xor
push
fistpl
and
mov
and
fs
addl
and
scas
data16
push
mov
push
insb
xorb
inc
mov
fidivl
daa
mov
jne
pop
mov
dec
insl
and
insl
push
xchg
or
fildll
cs
xor
ficoms
dec
shlb
lcall
mov
add
xchg
and
adc
notl
mov
sbb
jp
or
pop
es
and
mov
je
inc
and
jnp
and
push
ds
mov
daa
rcl
mov
add
data16
outsl
mov
push
add
loopne
daa
sub
clc
fwait
inc
and
das
arpl
cmp
arpl
dec
popa
sub
lret
xchg
mov
fiadds
inc
xchg
xchg
loopne
insb
imul
inc
xorl
pusha
js
inc
gs
mov
add
pop
xor
ret
sub
push
fistps
push
xor
push
ss
or
xor
jns
fs
xor
hlt
pop
es
add
dec
add
xor
dec
aaa
ja
test
outsl
outsl
ss
test
fs
sub
jbe
add
inc
cmp
addr16
push
mov
cmp
inc
gs
cmp
lds
call
xlat
outsl
push
or
arpl
jmp
lcall
xchg
cmp
popa
add
pop
insl
in
ljmp
imul
lds
mov
pop
or
rolb
jno
rclb
pusha
mov
push
leave
nop
inc
insl
imul
call
aad
sub
xorl
pop
xchg
cmp
mov
push
and
pop
push
cmp
xor
addr16
jae
xor
xor
fsubl
loopne
jo
sub
cmp
pop
pop
test
push
sub
lret
inc
sub
mov
dec
jmp
jo
jbe
push
and
cmp
cwtl
ja
ds
loop
out
inc
inc
and
dec
cmp
outsb
inc
test
jg
lcall
loopne
jae
fwait
inc
add
lahf
jbe
push
rol
das
lret
jno
loope
stc
icebp
pusha
inc
mov
clc
ret
movsl
add
xorl
jae
jae
push
loop
imul
addl
gs
jnp
add
add
xor
mov
outsb
mov
jae
je
or
dec
pop
add
add
cmp
jae
imul
mov
adc
adc
add
sarb
inc
add
and
push
sub
scas
clc
pop
pop
or
aaa
ds
push
pop
hlt
and
or
sti
lcall
js
or
sub
out
fucomip
into
add
sbb
addb
add
xchg
test
add
neg
cmpsb
flds
push
cmpb
push
and
sub
jb
int3
push
jg
fcmovne
jo
add
js
inc
add
loopne
je
clc
xlat
push
stos
int3
js
jo
rorb
sbb
dec
xchg
lea
mov
nop
xchg
cmc
xchg
dec
cs
xchg
loopne
mov
imul
jmp
dec
sub
xor
dec
sub
pushf
jo
pop
add
and
dec
jo
or
pop
data16
mov
pushf
adcb
adc
mov
pop
arpl
bound
inc
sub
dec
add
dec
push
xchg
adc
addl
adc
mov
and
rolb
add
loopne
roll
add
subb
add
mov
add
push
mov
sbb
add
add
inc
sbb
out
aas
sub
add
incl
mov
mov
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
mov
jmp
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
ret
inc
enter
int3
int
iret
rcl
rcl
aam
xlat
fcomp
fcmovu
loopne
loop
jmp
in
out
call
in
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
std
incl
inc
roll
incl
inc
test
dec
mov
xchg
sarl
aam
pusha
lcall
int3
fisubl
outsl
ja
add
cs
jae
jb
bound
dec
icebp
popf
mov
stos
inc
ss
popa
outsl
mov
fimull
jne
daa
outsl
lcall
dec
mov
outsl
js
push
push
inc
push
dec
sbb
dec
and
popf
mov
out
mov
dec
mov
stos
aam
mov
in
dec
imul
pop
jns
inc
mov
imul
into
push
and
inc
jb
jns
daa
scas
inc
mov
mov
gs
cmp
bound
mov
xchg
fs
sub
pusha
les
push
mov
mov
jns
outsl
pop
sbb
push
pusha
inc
jbe
push
jnp
jbe
push
push
lahf
mov
jecxz
jns
and
mov
push
dec
clc
jle
dec
fiaddl
cmp
push
or
rcll
and
cmp
xchg
mov
push
push
jae
cmp
and
pop
pop
cmp
call
movsl
jae
addr16
subl
gs
movsl
push
mov
xchg
mov
inc
or
add
out
push
push
dec
testl
dec
divb
xor
cmp
fildll
dec
jge
loope
mov
jg
imul
call
lds
dec
xchg
sbb
xchg
jg
popa
mov
ret
pop
jl
mov
jg
sub
inc
aad
push
or
cmc
fcomps
das
je
outsl
xchg
daa
negb
ret
daa
popw
pop
cmp
sahf
jl
cmp
cmp
push
das
push
fcmovnbe
cmp
inc
jl
push
jle
jbe
imul
addr16
sub
sub
inc
stc
mov
and
cmp
mov
dec
pop
stos
jb
pop
pop
cwtl
jb
sbb
push
jb
lods
xor
adc
xor
int3
lock
lret
lods
or
add
sbb
and
nop
mov
jo
sub
test
sub
or
inc
iret
repz
add
clc
add
loopne
enter
cmp
mov
jp
dec
adc
inc
jnp
cmpsl
xor
test
ss
repz
push
xchg
nop
add
test
jge
repz
das
idivl
adc
pusha
idivl
cmp
pop
pop
push
push
push
lods
inc
push
jns
shll
sahf
out
dec
cmp
push
xor
jns
out
and
adc
add
incl
sarb
jns
cmp
clc
incb
sahf
out
sahf
mov
inc
xor
out
cmp
add
std
lock
repz
movsb
jl
out
ds
sub
in
rcrb
sub
push
aam
lcallw
xor
bound
outsb
push
xor
data16
add
pop
loope
insb
cmpsl
pop
push
jae
movsl
fdiv
insb
fs
sbb
je
into
xor
xor
imul
sub
add
ss
jle
jle
push
insb
pop
xchg
or
jae
insb
inc
gs
pop
sub
sbb
dec
inc
sti
sbb
dec
xor
inc
dec
dec
dec
push
push
ret
push
dec
inc
dec
add
pushl
stc
dec
dec
inc
add
adc
sub
stc
incl
loope
lods
nop
outsb
fdivr
incl
popa
into
mov
mov
xor
jnp
inc
loop
mov
ds
pop
adc
pushl
or
cli
jb
xchg
jge
arpl
mov
and
cmp
adc
dec
scas
jp
adc
fisubrs
push
mov
and
cmp
dec
imul
decl
dec
out
inc
mov
mov
sub
cmpl
sbb
pop
jns
ds
xor
jmp
incb
int3
dec
dec
xor
dec
popf
pxor
xor
lret
aaa
push
div
jmp
clc
incl
and
cmp
cmpsb
das
xchg
pop
and
xchg
lret
incl
mov
loopne
cmp
inc
mov
xchg
push
pop
mov
mov
inc
pop
ds
dec
je
lods
in
aas
test
cwtl
iret
adc
push
pop
adc
dec
pop
repnz
and
inc
sub
lret
es
mov
jle
add
push
dec
scas
or
push
shrb
push
push
inc
inc
or
outsb
jbe
and
inc
pop
out
mov
inc
test
test
aaa
xchg
or
imul
jae
aam
dec
push
dec
push
ja,pn
ljmp
push
into
mov
inc
adc
or
sbb
adc
dec
sbb
push
push
cmovle
inc
add
dec
dec
or
jecxz
sbb
inc
inc
adc
sbb
and
pop
dec
xor
dec
fldt
sbb
or
pop
pop
or
jbe
idivb
add
add
inc
inc
ltr
add
out
pop
sub
adc
sub
sub
ds
inc
mov
std
mov
inc
add
daa
daa
add
or
lods
sbb
or
xor
adc
or
cld
sbb
aaa
adc
das
add
jnp
mov
sub
pop
and
pop
ds
inc
out
xor
pand
out
jnp
cmp
cmp
cmp
and
sbb
cmp
or
sub
cmp
aas
inc
sub
jge
or
add
dec
dec
mov
lcall
das
pop
cld
dec
mov
add
push
or
cs
es
test
add
jbe
push
mov
pop
or
pop
and
ss
inc
ds
adc
xor
jge
sub
inc
adc
add
das
sub
xor
cmp
push
pop
dec
and
addps
int3
or
pop
je
or
inc
jle
xor
sbb
dec
push
sub
adc
or
add
cmp
xor
xchg
push
push
mov
pop
mov
jbe
inc
and
es
pop
push
gs
es
mov
aaa
and
adc
xor
adc
inc
pop
push
and
adc
fimull
and
sub
or
shll
add
and
loope
pop
sub
inc
mov
adc
adc
mov
push
inc
pop
adc
dec
nop
dec
cwtl
in
push
cmp
xchg
pop
adc
sahf
daa
jo
push
lods
push
out
cmp
mov
enter
iret
repz
rcr
push
cmc
std
sbb
and
mov
jg
push
sub
mov
dec
pop
push
push
xor
loopne
iret
inc
adc
push
and
shlb
sub
inc
hlt
inc
scas
or
cmp
xor
ss
data16
sub
cmp
outsl
insl
mov
inc
pop
lahf
inc
popa
outsb
bound
jmp
popa
and
add
into
insl
dec
bound
xor
and
push
fiaddl
and
scas
jnp
sahf
out
and
in
jns
cmpsl
jge
aas
push
sub
xor
sahf
out
movsb
stos
fists
inc
imulb
dec
push
sub
aas
mull
xchg
mov
stc
into
sbb
lods
sub
adc
sub
mov
pushf
sbb
les
inc
dec
push
rcl
sub
pusha
pop
pop
xor
jl
push
jmp
sub
cmp
sbb
xor
push
stos
xor
pop
add
inc
jbe
jle
ljmp
sub
and
or
cmp
push
dec
sub
ss
jmp
sub
jecxz
fisttpll
pop
and
push
cmpsb
mov
in
jns
ss
ss
fcoms
jb
mov
push
pop
inc
add
insl
inc
inc
jb
xor
pop
sbb
lods
push
pushf
xor
and
push
pop
ss
addb
lods
sub
sub
pusha
punpcklbw
adc
inc
and
inc
or
add
inc
jp
sbb
sub
cmp
and
mov
scas
iret
or
inc
movsl
and
imul
ja
ja
aam
divl
ss
cld
ss
pop
or
out
pop
or
adc
pop
pop
push
add
sbb
mull
hlt
pop
subb
scas
xor
cmpsb
xor
jmp
and
daa
or
pop
sbb
out
outsb
jae
lods
jl
dec
cmp
or
or
adc
and
dec
int
and
push
inc
pop
das
push
mov
pusha
mov
push
daa
shlb
sbb
fnstsw
ds
adc
sbb
sbb
and
out
pop
or
pop
dec
ss
and
shll
stos
pop
adc
jo
inc
push
rcll
add
push
sbb
dec
cld
pop
sbb
mov
ss
or
mov
pop
cwtl
sbb
or
mov
sbb
mov
mov
movb
adc
xor
pop
sub
sbb
in
movups
sarl
push
push
mov
pop
ss
add
test
add
push
iret
daa
in
pop
xor
or
lods
sbb
add
pop
add
adc
mov
insb
sti
inc
out
cmp
dec
or
dec
les
lods
mov
aas
pop
jmp
push
scas
sbb
sbb
mov
sbb
sbb
adc
pop
inc
add
cmp
lds
and
rolb
insb
jne
or
cmp
subl
loope
testb
pop
shrl
ss
mov
pop
adc
dec
push
mov
sbbb
mov
adc
scas
jo
jecxz
or
add
xchg
xor
bound
inc
daa
popa
and
add
and
lods
inc
insb
add
daa
test
or
push
add
in
sub
push
pop
cmp
adc
adc
push
pop
pop
or
subb
movsl
add
das
jo
xlat
stc
aaa
dec
sbb
sub
icebp
adc
xchg
mov
inc
daa
pop
or
xor
inc
imul
adc
idivl
fcoms
das
dec
xor
push
and
push
push
sbb
push
cs
sbb
adc
adc
adc
ss
cmp
or
and
add
mov
subb
pop
jl
mov
or
std
jns
popa
jne
push
lds
dec
out
dec
out
jae
insl
popa
imul
push
sbb
push
pop
outsl
jo
test
fiadds
push
ja
pop
in
loop
xchg
adc
push
in
pushf
out
push
inc
fsubrl
pop
jae
push
aam
add
in
pop
aaa
add
pop
les
mov
pop
cmp
and
add
dec
loop
lahf
dec
and
add
sahf
or
out
pop
xor
je
sub
inc
ret
push
xor
xor
sub
xor
adc
mov
add
add
xor
sub
adc
call
pop
rcll
adc
inc
push
and
into
mov
or
inc
or
dec
mov
pop
loope
mov
sbb
iret
scas
loop
lock
sub
or
push
jge
addl
sbb
pop
mov
sub
add
adc
ret
cmp
xor
popf
adc
pop
xor
jb
jne
push
dec
add
adc
out
jb
outsb
aaa
daa
sub
push
adc
push
mov
sub
and
lahf
jl
add
or
aaa
es
aaa
add
dec
pop
test
out
adc
pop
mov
pop
sub
imulb
xor
outsl
jb
bound
xchg
fildl
jnp
push
push
je
and
sbb
push
adc
inc
mov
push
fdivr
divb
jae
and
pop
push
push
or
dec
ja
test
int
and
mov
push
jo
jl
aaa
js
aaa
and
push
push
das
xor
xor
dec
and
inc
inc
pop
outsb
pushf
lds
pop
stc
pop
sbb
pop
inc
fidivrl
fldl
sub
sub
and
dec
loop
pusha
sub
je
fs
fsubrl
jae
push
icebp
dec
mov
push
cmc
inc
jb
add
fldt
xchg
into
cli
jg
mov
pop
add
xchg
and
pop
orl
pop
inc
add
test
adc
mov
cs
dec
xorb
xor
and
mov
ss
das
inc
aaa
and
das
xchg
mov
and
pop
push
cmp
jo
push
mov
pop
adc
mov
inc
dec
sbb
aam
dec
fld
das
ret
or
sbb
dec
les
mov
cltd
mov
aaa
aaa
mov
adc
dec
xor
subb
pop
insl
xchg
daa
pop
adc
pop
sbb
fstps
aam
adc
or
ret
push
leave
shlb
dec
or
ret
inc
push
cmp
push
push
inc
ss
or
cs
inc
dec
or
add
add
int3
mov
jecxz
imul
cmpsl
aaa
xor
mov
aas
push
outsl
inc
mov
popa
mov
xchg
cmp
mov
wrmsr
inc
std
push
xor
mov
jno
xor
aad
enter
es
adc
or
adc
or
outsb
in
fabs
xor
daa
test
mov
sbb
adc
inc
inc
or
inc
ss
daa
fiaddl
pop
dec
push
xchg
inc
insl
pop
pop
or
inc
fisubs
inc
push
dec
popf
daa
fisubl
ss
or
sub
sbb
adc
sub
xchg
loop
cli
pushf
push
inc
out
adc
call
into
mov
loope
loop
sub
int
jecxz
gs
sahf
in
rcrb
add
daa
xlat
out
mov
pop
push
and
rol
ljmp
fs
jo
and
data16
pop
inc
jo
mov
push
push
cld
add
fcomps
pop
push
adc
jo
mov
not
ret
leave
push
mov
dec
outsb
sbb
jno
mov
add
inc
cmpsb
cmpsb
xor
test
xor
mov
das
mov
loop
or
xor
mov
sbb
pop
adc
arpl
jae
xchg
mov
push
test
push
sub
sub
test
ss
pop
pop
push
cmp
mov
sbb
and
daa
pop
cmpsl
push
jecxz
imul
adc
sbb
cmovg
mov
cmp
dec
sbb
mov
pop
inc
daa
xchg
dec
sbb
jnp
mov
and
push
jnp
rorl
dec
inc
mov
sbb
mov
mov
pop
mov
gs
adc
fisttpl
in
inc
add
and
enter
dec
sub
mov
mov
and
push
pop
xchg
jo
inc
push
test
call
or
push
test
dec
jmp
push
jecxz
daa
push
daa
daa
sbb
push
mov
adc
inc
ss
sub
and
add
inc
data16
fisubl
inc
or
jne
mov
jno
add
sub
bound
sub
mov
and
cmp
aas
sub
pop
cmp
es
pop
mov
or
cmp
xor
data16
sub
loope
lcall
loop
bound
jle
pop
push
es
mov
sahf
cs
jmp
dec
jg
scas
adc
shrb
movsl
test
shll
sbb
fdivp
gs
adc
adc
and
xchg
add
loopne
sub
adc
mov
adc
fsub
xchg
out
sbb
imul
pop
xchg
cltd
or
es
fdivl
dec
ret
add
mov
pop
pop
shl
sub
pop
ja
sbb
and
cmc
mov
sub
das
sbb
bound
push
xor
xor
mov
fstps
popa
popl
test
movsl
inc
aaa
fsubs
notl
and
push
pop
fs
out
adc
push
dec
lds
lods
lea
cmp
push
jmp
cmp
sbb
lcall
outsl
xchg
inc
push
push
enter
pop
es
in
add
sbbl
xadd
fcmovne
push
rcrl
mov
or
rcl
push
or
into
xor
andl
loopne
push
xor
dec
pusha
cltd
xor
jo
arpl
ja
or
pop
test
cmp
or
xor
rcrb
out
cmp
xor
pop
ss
enter
addb
push
scas
mov
push
push
cmpsb
lods
push
pop
ret
or
lret
nop
aas
adc
pop
cmp
shlb
add
jbe
inc
daa
pop
testl
inc
dec
sub
dec
cld
jno
push
cmpb
pusha
std
rcrb
fwait
push
gs
ss
sub
inc
sbb
pusha
fdivrl
pop
rcrl
sub
dec
or
in
sbb
xchg
mov
inc
insb
push
adc
bswap
mov
inc
or
or
iret
clc
inc
inc
and
femms
adc
mov
test
or
push
push
pop
sarl
insb
push
pop
mull
fldenv
fadds
icebp
aaa
add
or
xchg
add
aaa
subl
xor
dec
ljmp
imulb
je
jo
insb
gs
pop
jp
mov
fs
mov
dec
loope
xor
cs
adc
setnp
cmp
pop
sbb
imul
idivb
inc
add
push
jb
sbb
insb
ds
inc
jg
adc
data16
and
dec
mov
push
mov
lret
inc
pop
push
jb
int
xrelease
push
test
pop
push
inc
xchg
icebp
xor
fsub
rdmsr
je
in
and
pop
add
lahf
sub
push
dec
dec
std
test
pop
pop
mov
shlb
mov
mov
dec
ljmp
ljmp
mov
ja
mov
lods
push
lcall
movsl
enter
push
push
mov
inc
push
insl
ss
adc
cli
mov
jmp
mov
jle
sub
mov
mov
mov
ds
pop
sbb
idivb
jle
jo
fsubs
sbb
mov
xor
dec
xchg
pop
shl
dec
push
jbe,pn
or
adc
cld
inc
and
xor
data16
lcall
jle
adcb
pop
or
push
aam
jb
insb
ret
fisubl
outsl
leave
dec
cmp
push
dec
imul
out
mov
sub
mov
and
jo
cmp
add
lock
iret
leave
jae
cmp
inc
sarb
cmp
mov
dec
ds
lock
nop
inc
mov
insb
inc
js
aaa
lret
cmp
mov
add
stos
test
dec
out
dec
pop
int3
ret
mov
adc
pop
test
mov
dec
pop
jnp
cmp
xor
pop
icebp
sub
sub
xor
inc
xor
inc
push
xor
pop
and
popa
add
jne
std
pop
mov
cmp
insb
push
outsb
add
rcl
test
and
pusha
sub
movsl
pushf
and
dec
jp
test
push
or
push
jb
sti
outsl
sub
jo
xchg
bound
je
bound
mov
daa
loope
mov
rclb
xor
fsubl
daa
sub
xchg
movb
jnp
xor
sbb
das
fisttpl
das
and
out
mov
es
dec
inc
enter
lock
push
push
sbb
mov
mov
mov
add
fsubl
cmp
addr16
daa
pusha
orb
sarb
push
pop
lock
xchg
mov
cmp
adc
add
dec
or
mov
adc
in
pop
adc
inc
add
inc
adc
inc
sbb
xor
jns
mov
add
rclb
fimull
push
sub
loop
rclb
and
and
xor
or
movsb
das
incl
xchg
push
pop
sub
cmp
out
fidivl
mov
mov
sti
pop
add
iret
push
rcr
dec
mov
pop
or
push
mov
adc
cwtl
int
in
jns
stos
pop
pop
pop
xchg
jns
cltd
jbe
int
mov
xchg
mov
xchg
roll
or
push
fwait
in
sahf
lahf
lea
aas
pop
roll
fstpl
movsl
mov
fisttpl
push
mov
les
fsubl
shrb
outsb
loope
pandn
insl
repz
enter
inc
mov
shll
sysret
loop
ljmp
js
aaa
pop
pop
mov
scas
std
and
jl
cmpsl
adc
scas
pusha
dec
cmp
mov
fsts
xchg
pop
mov
call
mov
jno
les
push
aam
repz
cs
sbb
sub
jp
jnp
sarl
fisttpll
sub
dec
repz
rcrb
push
iret
dec
push
inc
fistl
mov
lods
popa
jnp
repz
rorl
fdivp
mov
aam
loope
sub
aaa
cmp
pop
jmp
sahf
out
outsb
push
addb
rcl
sahf
idivb
push
pop
das
sti
cmp
push
cwtl
idiv
leave
inc
iret
xchg
mov
mov
xchg
xlat
test
sar
sbb
rorl
addl
mov
mov
jo
and
mov
fidivrs
mov
cmp
push
lahf
out
fisubl
es
jns
xor
adc
xlat
xchg
aaa
xor
mov
sarl
push
add
movsl
call
lcall
lods
sarl
fbstp
addb
sbbl
test
and
xor
dec
repz
xchg
iret
mov
add
movb
gs
repz
cmpsb
int
ss
out
push
jne
mov
hlt
iret
repz
add
mov
int3
out
mov
adc
jns
or
aad
pop
dec
mov
outsl
clc
sbb
scas
sub
adc
and
and
rcrb
push
push
mov
xor
adc
adc
pop
pop
mov
popa
push
or
scas
int
mov
leave
xor
aas
pop
in
bound
push
pop
mov
xchg
push
ljmp
pop
inc
mov
int3
push
and
pop
sbb
enter
adc
stc
repz
or
adc
daa
enter
or
add
add
rorl
addr16
mov
push
jae
popa
inc
fdivl
push
test
cmp
lea
inc
sbb
fdiv
or
or
aaa
push
dec
mov
pop
mov
aas
jae
inc
jnp
dec
fisubl
push
fidivrs
jae
dec
cmp
pop
mov
lcall
popf
jbe
ljmp
push
push
add
push
inc
cmpsb
cmc
cs
imul
push
dec
pop
je
jo
pop
jmp
aaa
push
fisttps
ficoms
inc
jnp
fs
push
repnz
gs
pop
jecxz
outsb
inc
jbe
mov
into
ror
pop
retw
or
or
dec
add
test
sbb
mov
in
adc
dec
add
nop
cmp
in
push
push
mov
push
ds
push
daa
das
adc
fucomp
lods
ja
popa
insl
jo
ss
insb
je
stos
cld
std
in
addr16
jo
jae
es
outsl
and
cmp
insb
fistpll
cmpb
sub
and
scas
out
pop
mov
push
or
stc
pushl
xor
xor
xor
xor
cmp
cmp
push
xor
dec
lcall
push
add
xor
ss
add
pop
mov
dec
adc
and
daa
add
lock
sub
or
stos
pop
xor
outsl
xor
xchg
pop
add
dec
pop
das
and
xchg
sahf
xor
add
mov
int
movsl
es
pop
or
push
fdivrs
dec
xlat
cmp
cmp
or
dec
sub
arpl
addb
sub
push
aas
dec
notb
push
or
cmp
add
dec
dec
inc
cmp
sbb
daa
iret
cmp
sub
sbb
sbb
inc
or
add
and
daa
dec
inc
addr16
fwait
add
pop
pop
cmp
inc
daa
dec
pop
and
sub
repz
xor
fiadds
dec
fbstp
dec
jnp
in
or
sub
sub
or
or
and
add
pop
or
sub
pop
rcrb
outsl
add
cs
jmp
adc
or
add
mov
and
cli
cmpps
dec
lcall
ljmp
adc
sbb
inc
push
ja
inc
jge
arpl
pop
or
pop
fcoms
pop
in
xor
or
jb
fldt
aaa
in
inc
in
mov
cmp
xor
jae
adc
push
and
jo
jne
jns
sub
lods
mov
dec
xor
lea
or
daa
add
insl
mov
stos
bound
mov
cmp
daa
push
js
xorb
das
fisubrl
pop
divl
iret
mov
arpl
loope
adc
ret
adc
jno
push
lds
sub
popa
mov
test
daa
pop
xchg
lds
das
dec
iret
fiaddl
test
adc
mov
js
adc
pop
inc
push
cmp
cmp
xor
and
xor
push
lock
mov
scas
lods
loopne
imul
daa
lahf
push
jo
loopne
xchg
outsb
ficompl
addb
pop
int
xor
adc
out
arpl
pop
aam
xor
adc
popa
popa
int
mov
and
movl
fisubrl
lcall
fwait
push
and
pusha
push
ret
sub
dec
pusha
mov
sbb
add
sub
js
xchg
xor
jl
jl
icebp
lock
fadd
add
outsb
imul
bound
mov
ss
jns
ja
sub
or
addb
int
daa
or
cmpsl
xchg
insb
pop
push
ja
mov
pop
adc
inc
ret
aad
and
pop
add
xchg
push
stc
stc
pop
adc
in
sub
push
sbb
add
inc
pop
es
pop
adc
cmp
das
sub
pop
sbb
pop
daa
sbb
pop
ret
nop
popf
lock
lock
dec
lcall
neg
or
and
sbb
jo
xor
sub
and
adc
daa
jno
lea
dec
lret
sub
inc
imulb
fildll
fisttpll
fwait
cmp
pop
cwtl
adc
adc
fwait
or
adc
lds
bound
shrl
bndldx
pop
inc
add
das
sub
inc
daa
dec
test
adc
adc
adc
test
push
mov
clc
jle
and
mov
dec
inc
loopne
je
or
jmp
adc
test
xchg
enter
cli
xchg
mov
pop
pushf
push
push
ss
xchg
loope
sbb
inc
jb
sub
call
mov
or
dec
or
data16
add
cmpsl
cmp
xor
mov
cs
add
adc
jo
cmpsb
adc
adc
add
cmp
test
push
inc
cmp
push
mov
push
stos
cli
dec
push
dec
scas
push
or
cmp
push
mov
mov
lods
pushf
push
add
arpl
or
xor
dec
cmp
add
movsb
ss
jnp
adc
cmp
sbb
or
sbb
bound
sbb
cmp
ror
fs
mov
push
dec
mov
dec
xor
xchg
xor
adc
cmp
in
icebp
fstp
rorl
addb
or
add
adc
dec
sbb
jl
fldl
cmp
inc
pop
das
stos
xor
push
xor
inc
mov
fsubl
jmp
cli
mov
es
add
cmp
push
inc
push
push
xchg
roll
and
sbb
xor
out
pop
repnz
cmp
adc
sbb
pop
icebp
pusha
outsl
lcall
or
cmpb
push
loop
jno
lahf
add
or
sub
pop
xorb
xchg
inc
ret
mov
cmp
daa
adc
ljmp
movl
sub
cmpl
inc
xchg
xor
or
test
mov
push
xor
bound
notl
aaa
or
pop
out
sahf
out
and
out
sahf
push
andl
lahf
out
xor
cltd
or
xchg
ss
add
add
ss
int
pop
or
adc
sbb
insb
mov
and
sub
xor
inc
mov
jge
fidivs
mov
mov
int
mov
popa
xchg
sbb
sub
add
or
adc
ss
dec
and
add
add
data16
push
push
dec
str
ss
cwtl
or
and
das
incl
or
nop
or
add
jae
push
mov
aas
inc
pop
pop
cs
and
ficomps
inc
adc
adc
loopne
mov
or
scas
dec
xor
pop
pusha
sbb
lods
mov
jo
push
jo
mov
cld
jbe
fs
jmp
push
jo
xor
add
push
loopne
out
pop
dec
or
or
jae
inc
es
pop
adc
push
add
add
ds
xor
ljmp
add
adc
cmp
sbb
pusha
jg
inc
pop
xor
or
pop
sbb
dec
sbb
sbb
cmp
add
ljmp
sbb
sbb
sbb
and
pop
cmp
add
pop
sub
xor
pop
hlt
add
xor
or
aaa
and
add
jg
in
out
ds
sub
sbb
ss
sbb
push
sbb
fbld
mov
push
sbb
xor
ds
sub
mov
pop
pushl
and
inc
dec
pop
pop
xor
sub
sbb
aas
add
inc
pop
inc
aas
pop
or
pop
inc
sub
sysret
push
dec
sbb
inc
dec
cmp
add
and
add
sbb
data16
add
mov
cmpb
fcomps
xor
or
roll
xor
push
pop
cmp
and
add
jmp
push
pop
push
push
dec
movb
sbb
sbb
push
das
adc
and
mov
add
sahf
add
ss
lock
xchg
push
dec
das
xor
jb
sbb
mov
stos
das
pop
inc
pop
pop
pop
sub
push
dec
sub
bound
dec
inc
pop
mov
jecxz
adc
sbb
adc
loopne
xchg
pop
mov
xchg
rol
add
pusha
bound
jns
xor
in
push
aas
jge
push
push
cs
sub
leave
sti
out
push
push
inc
push
dec
inc
dec
push
dec
add
xor
call
fists
clc
sbb
inc
sub
inc
xchg
inc
pushl
jno
sti
shlb
ret
icebp
adc
pop
movsb
cmpb
aad
sbb
cwtl
stos
pop
fadds
pop
incl
and
jge
push
je
mov
andb
fwait
rol
fwait
in
inc
mov
bswap
mov
jmp
dec
fsubrl
stc
jbe
push
ds
insl
pushl
test
daa
add
repz
movb
aad
arpl
push
sub
adc
or
aaa
inc
lcall
cs
insl
sub
adc
mov
leave
ret
incl
call
sbb
mov
call
cltd
test
pushl
push
push
shll
ja
daa
mov
mov
movsb
sbb
mov
fmuls
lret
rep
cs
arpl
test
add
decl
insb
push
movsb
mull
jno
addr16
push
scas
addr16
cmp
dec
jmp
mov
fwait
stos
flds
pop
push
es
jns
sub
jae
popa
or
lcall
push
dec
inc
or
jnp
imul
daa
sub
dec
xor
ljmp
inc
data16
cs
cmp
push
inc
fs
aas
dec
aaa
cmp
xor
imul
pop
pop
sub
jbe
call
movsb
cmp
and
cmp
jge
imul
dec
sub
adc
subb
pop
and
clc
ss
jae
aaa
adc
mov
xor
fadd
push
scas
out
sub
and
xchg
shrb
pop
movsb
aas
sub
ja
fcoms
xchg
lcall
fstpl
daa
pop
daa
inc
dec
push
push
adc
popa
pop
fstl
and
sub
cmovbe
sarb
and
dec
and
lret
out
mov
push
inc
add
xor
xor
das
mov
cmp
inc
add
inc
popf
mov
jne
inc
inc
xor
and
aaa
inc
push
inc
stc
imul
xchg
pop
cmovb
pop
or
insl
ss
cmpsl
ss
add
pushl
mov
push
sbb
iret
test
out
pushl
add
mov
js
push
bound
sbb
lea
inc
nop
sbb
scas
bound
or
loop
dec
push
push
mov
inc
sbb
mov
aas
fdivl
loop
push
arpl
mov
data16
shll
pop
outsb
addl
iret
mov
call
mov
pop
and
or
adc
add
or
popf
or
mov
les
push
aam
mul
sbb
adc
or
adc
outsb
shl
push
add
xchg
je
mov
in
popa
sub
out
push
sbb
mov
xor
cmp
in
sarl
mov
cld
push
shlb
stos
fadds
or
loop
lock
mov
gs
dec
sbb
dec
push
mov
rcrb
inc
sbbl
dec
cli
mov
popa
andb
jnp,pt
lret
rcll
jge
pop
test
or
mov
adc
push
jns
xchg
or
enter
sub
pop
mov
aaa
sbb
adc
xor
fidivl
pop
push
adc
sub
jno
jle
sub
sub
adc
sbb
inc
icebp
icebp
pop
popa
in
push
sbb
add
cmp
outsl
lcall
pop
in
fmul
cs
xor
lds
or
or
inc
ret
mov
xor
or
addr16
outsb
outsb
je
xor
js
cmp
repnz
jbe
jae
popa
insl
gs
cmp
mov
cmp
mov
xchg
cmp
adc
aad
mov
push
ljmp
or
pop
out
push
xor
mov
outsl
insb
push
popa
je
jae
xchg
push
popf
insl
cmpsl
push
xor
mul
fisttpll
push
inc
pop
or
negb
add
add
fstl
or
pop
push
mov
in
pop
push
or
pop
xor
dec
stos
xor
dec
or
adc
loopne
aas
push
mov
ljmp
add
sbbb
push
inc
outsb
cs
jg
inc
inc
out
and
jae
xchg
and
fisubrl
push
in
lds
cmp
push
imul
jbe
test
pop
orl
imull
scas
lds
sbb
push
lret
ret
sbb
scas
js
repnz
push
daa
inc
push
push
add
mov
nop
push
adc
fsubs
outsb
dec
popa
dec
lret
sbb
jge
divb
jb
pop
adc
incb
jne
cmp
movsl
xor
xor
fistl
dec
movb
jno
xor
or
sbb
jg
push
add
cwtl
bound
cs
nop
jns
sbb
sub
call
adc
push
aaa
or
bound
cmp
cs
jo
mov
or
cmc
bound
outsl
imul
jbe
mov
lds
add
test
sub
pmullw
jb
adc
ja
jp
cmc
aas
lods
out
xchg
pusha
pop
inc
stc
xor
scas
pop
aad
jo
pop
arpl
xor
test
adc
pop
ja
leave
test
mov
sbb
or
push
dec
cmp
xor
add
flds
popf
sbb
inc
add
das
and
fildll
dec
jmpw
mov
adc
int3
pop
das
dec
sbb
lds
add
mov
ss
add
push
and
mov
xor
sbb
inc
div
jbe
push
mov
je
test
lahf
pop
dec
add
push
xchg
push
adc
adc
aaa
mov
push
mov
jnp
fwait
inc
xchg
mov
push
jp
pop
inc
inc
push
int
fiadds
pop
pop
sub
and
pop
xchg
es
mov
dec
pop
dec
mov
and
pop
movsl
cmp
shll
mov
ljmp
push
aam
orl
push
mov
aam
adcl
xlat
clc
fistl
lods
xor
pop
dec
nop
sbb
subb
pop
inc
jge
add
mov
jo
sbb
pop
mov
ret
pushf
inc
sub
sub
insl
vmread
or
xor
or
or
add
cmp
les
and
add
aaa
shlb
gs
lods
push
pop
movsl
pop
inc
insb
fs
jg
popf
add
jae
push
dec
dec
je
popa
cmp
jmp
dec
outsl
and
jbe
insb
push
movzbl
punpckhwd
mov
outsb
push
je
scas
push
dec
sub
pop
inc
insb
std
ja
add
push
push
inc
dec
push
inc
pop
push
dec
inc
cmp
mov
sbb
cwtl
dec
xlat
jb
gs
inc
pop
or
inc
push
fwait
pop
daa
jmp
pop
or
dec
jb
pusha
and
dec
cmp
pop
ret
inc
adc
in
rclb
adc
sbb
xchg
shrb
jb
sbb
orb
insb
push
add
xor
sub
cmp
fisubl
rolb
jns
jb
test
inc
push
adc
push
fldz
push
rorl
dec
xor
xorb
xchg
mov
inc
push
push
sarb
pop
dec
cs
mov
insb
dec
sbb
adc
stos
xchg
jp
inc
or
dec
test
ss
adc
mov
cltd
add
jge
and
sbb
and
mov
dec
inc
add
sub
in
stos
cmpl
cmp
lcall
pop
sbb
sub
sbb
aas
pop
lret
test
insl
or
adc
enter
mov
dec
pop
daa
and
adc
mov
sbb
xor
mov
repnz
pop
sbb
rorl
and
stos
mov
je
pop
mov
pop
imul
scas
and
dec
push
jb
arpl
ds
inc
das
mov
daa
xchg
add
dec
inc
and
out
shll
cmc
inc
das
mov
out
xchg
inc
cmovo
jnp
inc
adc
cmpb
aas
mov
in
mov
nop
jo
maxps
dec
add
in
roll
add
jmp
outsb
dec
test
les
cmp
jae
fsubl
aas
add
idiv
out
test
addr16
movsb
or
daa
neg
pop
xchg
cmp
sub
inc
das
pusha
inc
add
rcrb
pusha
cmpsl
fistps
add
daa
leave
jae
int
or
mov
pop
insb
add
or
xchg
les
in
out
push
push
inc
aas
mov
stos
pusha
jg
dec
outsl
cwtl
xchg
stos
sbb
inc
mov
cmp
mov
xchg
sub
insb
iret
call
push
out
ficoml
mov
push
loopne
push
les
add
mov
out
sahf
out
pop
mov
sti
cmp
push
pop
xor
cld
pop
xchg
mov
jnp
divl
pop
sahf
pop
pop
ds
pop
repz
cmp
mov
add
xor
out
pop
enter
mov
jae
iret
cwtl
jl
push
js
and
int3
push
add
adcb
jno
dec
inc
lahf
push
and
testb
dec
aam
ss
jns
mov
sbb
pop
leave
repz
dec
cmp
repz
aaa
in
add
xor
jge
jo
out
push
mov
push
add
pop
jg
leave
aad
ja
mov
pushf
ja
add
xchg
or
xchg
dec
shlb
or
inc
rorb
jns
sbb
xchg
subb
dec
push
push
pop
dec
outsl
xchg
popa
sub
add
inc
nop
or
mov
mov
sbb
sub
outsl
cmp
pop
ss
add
pop
dec
inc
push
mov
lods
fs
xchg
pop
scas
add
subb
xchg
or
dec
xor
pop
enter
cmp
nop
or
xor
or
adc
adc
pop
pushf
mov
push
lds
out
mov
xor
xor
in
pop
pop
fdivs
fildll
and
in
mov
clc
xchg
push
shrb
pop
sbb
mov
push
repnz
add
pop
imul
adc
aam
ret
push
mov
fs
mov
imul
pop
jg
xchg
stos
sbb
pop
xchg
or
push
jg
enter
ja
pusha
sbb
inc
pop
enter
je
sbbb
mov
fildll
fists
subb
leave
xlat
mov
add
loopne
or
pop
push
dec
push
adc
dec
xchg
fsubs
cmp
out
fsubrl
sbb
add
or
nop
xlat
add
sbb
or
push
aaa
addr16
dec
sahf
dec
ss
sbb
imul
adc
daa
add
push
repnz
push
add
lahf
mov
xor
push
mov
nop
push
adc
lret
fimuls
hlt
push
fcoms
push
add
lods
xchg
push
pusha
xchg
or
mov
cs
and
cmp
in
shlb
sub
cmp
or
sbb
sbb
push
adc
outsl
jg
test
xchg
daa
lahf
negb
pop
nopl
mov
ja
push
push
push
mov
js
repz
xchg
js
unpckhps
imulb
bound
pushf
pusha
jp
and
test
or
in
xchg
bound
enter
popa
enter
jmp
mov
or
mov
jo
xchg
cmp
fs
jo
arpl
in
inc
jno
arpl
arpl
testl
and
add
stc
or
and
out
sbb
push
mov
leave
mov
aaa
mov
and
pusha
aaa
pop
ja
fadd
mov
add
xchg
outsl
js
inc
mov
add
and
test
fs
and
out
mov
lods
adc
jg
outsb
leave
xchg
cmp
pop
mov
insb
ja
add
jg
addr16
add
cs
int3
fsub
sbb
pop
and
jmp
jge
and
push
push
sbb
outsl
sub
jb
enter
push
or
pop
insb
mov
jl
mov
ss
les
or
cwtl
aaa
add
repz
cld
xchg
dec
xor
cmpsl
add
sub
mov
inc
xlat
add
or
push
sahf
iret
ljmp
or
mov
sub
loope
in
pop
adc
or
lahf
cmpsl
jge
imul
aam
jmp
xchg
adc
cmp
sub
or
mov
cmpsl
or
in
sub
dec
cmp
lods
push
leave
mov
add
sub
shlb
push
ljmp
aam
jb
xchg
add
sub
add
loopne
cwtl
imul
loopne
fadds
aam
in
out
dec
scas
orb
mov
cmp
addr16
lea
add
or
sbb
inc
pop
aam
xor
in
scas
or
add
es
sub
cmpl
outsb
clc
fs
adc
xlat
and
mov
pop
pop
leave
add
mov
pusha
dec
repz
daa
cmp
jo
xor
xlat
cmpsl
sbbb
insb
push
xchg
imul
insb
cmp
cmpsl
inc
adc
mov
das
or
ja
inc
ret
lds
cld
outsl
mov
or
pop
jb
dec
and
pop
push
cmp
xlat
data16
push
filds
pop
das
repnz
in
mov
mov
pusha
es
imul
pop
in
insb
or
push
lock
or
dec
cmpsl
stc
xor
dec
ret
ja
and
fucom
jns
lea
dec
repz
out
xchg
iret
repz
sub
pushf
rcr
cmpsl
stc
cmp
cmpl
out
iret
sarl
jl
adc
cmp
out
mov
or
push
stc
cmp
rep
mov
fiadds
out
sahf
cmpsl
sub
xlat
cld
out
lcall
into
icebp
iret
repz
sbb
pusha
xchg
shr
push
sahf
out
lcall
cmp
sarl
push
sahf
cmpsl
stc
xor
lahf
out
imull
xchg
xchg
mov
iret
repz
xchg
std
xor
jns
xor
mov
stc
push
mov
jne
adc
inc
leave
jl
imul
pop
mov
lahf
jmp
mov
inc
int
jns
nop
push
fstpl
xchg
push
jns
sti
cmp
xchg
popa
sarl
test
repz
iret
in
and
cmpsl
stc
cmp
jg
aad
xchg
cmp
movsl
adc
sarl
testl
ds
mov
ljmp
out
or
stc
cmp
out
sub
dec
ret
repz
cmpsl
negb
test
out
mov
mov
mov
push
and
out
sahf
fstps
push
stos
xor
out
out
cmpsl
fisubl
test
jns
iret
repz
jge
dec
repz
pop
stos
push
push
fwait
push
stos
and
repz
fisubl
lods
xchg
jbe
sahf
out
xor
mov
iret
repz
jo
pop
push
jg
es
jns
mov
mov
lahf
out
cmp
in
mov
aaa
mov
cmp
insb
mov
push
popf
loope
mov
cmp
cmpsl
int3
xorb
cmp
out
lcall
jne
repz
shll
cmpsl
stc
cmp
xor
mov
jl
ret
push
ds
jns
imull
lods
lock
mov
cltd
hlt
pop
cmpsl
fnstcw
sahf
out
dec
lret
mov
mov
scas
into
inc
sub
iret
iret
shlb
dec
rolb
scas
fimull
lcall
lock
mov
add
jno
iret
in
jbe
pop
add
push
add
js
sbb
out
pop
mov
addr16
repnz
add
push
in
fcmove
jge
fisttps
dec
pop
mov
paddq
fstps
enter
aas
push
sbb
pop
dec
pop
int3
xorl
stos
incl
and
enter
and
clc
cs
insb
jae
testl
and
xor
shlb
loopne
pop
enter
pop
mov
sarl
ss
pop
cmp
outsl
jo
loopne
push
popa
out
inc
jge
leave
lds
xchg
arpl
test
rolb
pop
in
fmuls
mov
in
and
lahf
sub
lods
mov
pop
lds
adc
mov
imul
jmp
inc
pop
into
in
dec
in
ss
aas
or
es
hlt
call
inc
es
cli
leave
mov
test
sbb
mov
out
pop
inc
int
mov
ljmp
jno
pop
xlat
aaa
pop
insb
jbe
popl
push
daa
mov
mov
sub
xlat
push
push
fcompl
lret
into
push
inc
mov
or
arpl
add
jb
push
lahf
cmp
dec
ja
or
push
inc
pop
fwait
adc
shrb
sub
and
int
sub
push
aas
in
pushl
loopne
je
jg
push
jb
popf
cs
lret
pop
xchg
adc
inc
ja
aas
add
sbb
movl
mov
out
mov
in
or
push
inc
loopne
push
add
das
outsl
xchg
cmp
push
movsb
insb
inc
dec
and
adc
adc
xchg
jns
jns
pop
aam
push
push
out
mov
rolb
mov
sub
lods
aas
enter
sarl
push
scas
push
jns
out
and
jp
push
imull
popf
sahf
push
add
jns
inc
xchg
in
jns
outsl
and
je
shrl
push
lds
xchg
pop
in
adc
les
je
leave
sub
push
mov
in
scas
mov
inc
movsb
push
enter
mov
stc
inc
out
iret
inc
jp
dec
jp
inc
pop
jo
mov
outsl
add
jl
cs
cmp
in
sbb
mov
jno
arpl
enter
jl
xchg
dec
nop
pushf
mov
mov
xor
jns
pushf
lcall
xchg
cmp
pop
jge
add
test
jge
mov
mov
nop
into
hlt
add
mov
jnp
sbb
inc
sub
push
add
sahf
out
sahf
add
add
add
jns
push
jne
pushf
and
int3
aas
or
jge
imul
xchg
insb
jle
jle
cmpsb
in
in
push
scas
pop
pinsrw
xchg
dec
mov
aam
out
sbb
movl
xchg
add
jl
jl
in
sbb
inc
mov
dec
push
pop
cmpsb
add
iret
repz
push
test
jb
xchg
lahf
cmpsl
pop
jb
jb
mov
fdivs
jb
loop
repnz
sbb
jb
add
jge
fldz
es
subb
mov
pop
inc
cmovge
outsb
pop
leave
jae
addb
jns
mov
pushf
loopne
xadd
enter
inc
repnz
add
adcl
enter
pop
nop
addl
push
mov
pop
jmp
lock
add
add
cmp
mov
push
test
ds
je
mov
daa
cmp
or
add
in
stc
jg
jbe
jns
sbbl
push
push
inc
push
lds
inc
inc
jg
repnz
sahf
ret
xchg
cmpl
lock
movsb
iret
xchg
push
and
cmp
jg
jg
cmpb
inc
jb
jg
xorl
mov
sub
xchg
test
inc
push
and
cmp
test
out
add
in
daa
mov
adcb
in
in
andb
cmpb
in
xchg
or
or
out
sahf
leave
or
xchg
cmc
adc
push
adc
adc
adc
sahf
out
es
jns
out
push
sbb
push
repnz
shlb
xor
sbb
dec
xchg
sub
xchg
dec
mov
xchg
or
xchg
dec
inc
or
lcall
in
adc
add
xor
mov
pop
andb
and
das
cmp
cmpsl
in
cmpsb
in
mov
push
xchg
scas
and
xor
pusha
scas
leave
and
test
jb
pop
enter
sub
lock
cmpl
mov
jp
pushf
jmp
mov
xchg
cmpl
lea
insl
test
lds
inc
pop
js
inc
mov
iret
andl
mov
add
in
call
push
push
hlt
aaa
xchg
mov
inc
mov
test
and
pushl
pop
out
mov
push
cmp
mov
add
fwait
push
insb
mov
fs
test
nop
push
in
mov
adc
xchg
mov
push
pop
test
rcrb
mov
les
mov
add
pop
or
pushf
in
mov
mov
pop
jbe
fstl
addps
add
xchg
mov
mov
jbe
pop
inc
fxch
in
subb
je
ja
addb
enter
test
enter
repnz
xchg
lea
push
jne
addb
xchg
add
daa
daa
in
in
xchg
cmc
and
xchg
js
mov
xchg
adc
lea
xchg
pushf
add
andl
mov
je
fs
decl
and
lods
mov
mov
mov
mov
repnz
hlt
mov
repnz
mov
or
adc
mov
mov
sub
cmovle
dec
push
or
dec
dec
or
or
dec
dec
dec
dec
push
add
dec
dec
add
add
xchg
jl
cmpsl
and
mov
insl
mov
in
pop
xchg
je
adcb
les
and
lret
leave
and
xor
jb
mov
ja
outsb
daa
pop
leave
xchg
push
insl
add
and
nop
sets
push
iret
mov
xchg
xor
lret
mov
mov
aas
out
jns
jecxz
jmp
push
repz
iret
in
enter
add
cmp
pop
and
push
jbe
das
xchg
out
add
ljmpw
jno
scas
daa
daa
fisttpll
push
jno
mov
mov
cltd
mov
cmp
or
xadd
mov
push
cmovle
add
test
inc
outsl
push
cmp
imul
inc
pop
pop
fiadds
mov
push
into
shl
dec
cwtl
es
adc
sbb
shr
mov
dec
outsb
das
in
hlt
cld
jmp
jns
flds
movlps
sahf
xchg
and
or
cmp
or
bound
mov
mov
add
daa
daa
pop
leave
enter
cmp
daa
daa
in
add
inc
repnz
sahf
push
lea
jb
lea
lea
dec
lea
inc
mov
bound
jns
out
pop
orl
sahf
out
sahf
or
inc
and
or
or
fnstcw
jmp
lea
mov
and
dec
mov
push
cmp
punpckhbw
lahf
pop
adcb
nop
sets
frndint
aam
mov
and
ret
ja
mov
jb
inc
mov
sbb
testb
xchg
inc
enter
lods
xchg
fcoml
push
fldl
xchg
sbb
mov
push
xchg
pushf
inc
mov
pop
lret
inc
jb
in
xchg
insb
iret
pushf
jbe
into
leave
ds
xchg
dec
pop
push
jmp
xchg
testl
xchg
pop
aam
xchg
cmpsl
in
or
sub
in
and
xchg
scas
je
sbb
jb
pop
mov
mov
leave
dec
mov
lods
xchg
dec
xchg
and
pop
nop
seto
nop
mov
daa
nop
dec
das
nop
aaa
nop
and
inc
aas
nop
xlat
or
nop
dec
add
cwtl
and
in
jbe
out
lea
nop
daa
pop
pushf
pop
mov
in
jns
xchg
clc
repnz
pop
hlt
add
or
inc
xchg
dec
add
popf
pop
and
jge
mov
dec
xchg
xchg
sahf
xchg
test
in
xchg
mov
xchg
sub
mov
jecxz
or
js
xchg
xchg
das
lock
xchg
dec
adc
xchg
xchg
xchg
xchg
xor
push
xchg
xchg
xchg
xchg
xchg
pop
xchg
imul
clc
mov
lods
mov
dec
dec
ftst
out
cli
fnstcw
dec
in
or
and
jae
dec
pop
push
add
fwait
mov
xchg
mov
fucomi
sbbb
add
fst
add
xchg
xchg
fcmovne
xchg
xor
inc
xchg
dec
xchg
push
pop
cmp
repz
add
out
xchg
vmread
mov
mov
in
add
or
outsb
popf
dec
ja
ret
adc
je
adc
popf
out
mov
cmp
cmp
xchg
push
add
jb
push
fstpt
jmp
imul
str
mov
das
sti
xchg
add
repz
out
or
ud2
and
sub
xchg
jg
mov
popf
pop
xchg
push
xchg
mov
jae
ja
xor
jbe
ds
push
xchg
iret
inc
mov
pushf
ja
sahf
fcmovne
lock
addr16
xor
xchg
ljmp
xchg
pushf
dec
mov
lahf
ja
pop
sahf
xchg
out
xchg
jb
dec
jae
mov
add
daa
pop
leave
mov
ror
leave
rep
psubsw
add
syscall
push
xor
cwtl
jg
adc
xchg
cwtl
rcl
and
and
cwtl
cwtl
cwtl
mov
push
add
push
cwtl
pop
cwtl
stc
sbb
fs
cwtl
mov
jns
jl
test
dec
outsb
fnsave
pop
ud2
pop
or
dec
dec
dec
dec
or
push
add
add
add
jns
out
movsb
sbb
out
mov
aaa
jns
int3
pop
aam
and
repz
daa
in
and
in
cmp
and
cltd
inc
inc
es
dec
sub
mov
mov
arpl
cmp
packssdw
inc
outsl
cltd
setns
pop
movsb
or
inc
es
mov
jbe
mov
fbld
inc
pop
xor
lcall
sbb
or
sbb
pop
imul
lcall
lcall
mov
addr16
nop
xchg
or
aas
scas
cmp
xchg
mov
jnp
stc
je
mov
inc
das
aaa
jns
pop
sbb
iret
mov
jb
sub
pop
jne
xor
xchg
lcall
outsb
sbb
and
push
push
nop
push
pop
test
jmp
fwait
enter
movsb
xchg
loopne
jb
xchg
lahf
push
leave
jae
ja
cmpsl
push
dec
fildl
shlb
fldl
xchg
fsave
addr16
add
mov
xchg
xchg
push
adc
fildl
nop
pushf
sbb
mov
push
pusha
ja
pop
out
in
xchg
xchg
pushf
stos
jns
out
jg
mov
movb
pop
cwtl
std
mov
xchg
out
hlt
es
cs
out
outsb
add
add
in
jns
dec
push
pop
in
sahf
out
or
jbe
cmp
in
jle
xchg
or
xchg
push
sahf
sahf
adc
adc
dec
and
fstps
repnz
cli
lar
into
repz
add
daa
pop
xchg
fiaddl
scas
pop
sub
or
cmpsb
cmp
pop
add
stc
loop
push
scas
push
jo
dec
repnz
push
js
roll
mov
fsubl
fldcw
repnz
add
mov
lahf
clc
inc
lahf
repnz
lahf
add
out
jne
pop
cmpsl
lahf
lods
pop
mov
pop
pop
stos
aam
fisubrs
orl
jmp
rclb
add
test
aas
das
jno
pushf
dec
ljmp
and
lahf
mov
dec
dec
add
adc
rcrl
stc
sahf
sbb
mov
mov
push
leave
addr16
mov
jb
mov
add
xchg
out
jo
pop
mov
add
je
pop
sahf
cmpsb
pop
scas
iret
repz
ds
or
into
mov
nop
out
xchg
mov
xchg
and
lods
ja
mov
repz
add
inc
mov
dec
mov
mov
sarb
cltd
jne
paddsw
jns
ja
shlb
add
ret
daa
pop
and
dec
adc
lea
adc
je
enter
stos
sub
daa
pusha
in
and
idiv
repz
repnz
add
add
cmp
inc
pmuludq
faddl
and
lods
pop
mov
daa
and
pop
andl
mov
mov
lods
add
push
mov
leave
leave
leave
leave
rcr
out
repnz
scas
repnz
iret
repz
adc
pop
push
or
or
repz
or
or
cmp
repz
or
dec
iret
imul
jbe
andl
mov
and
movsb
lods
loop
inc
stos
jmp
lods
scas
pop
sbb
jb
movsb
das
or
movsb
jno
inc
mov
push
xchg
pop
repnz
pop
cmp
mov
scas
adc
push
scas
call
enter
mov
scas
pusha
leave
leave
add
test
leave
leave
leave
xchg
lcall
jno
pop
mov
mov
jp
and
psrld
imul
aaa
add
movsl
leave
add
loopne
movsl
mov
sbb
insb
scas
aaa
pop
xor
jl
and
nop
scas
inc
movsl
dec
push
mov
or
mov
jg
inc
dec
enter
movsl
jle
inc
mov
setbe
add
mov
or
add
scas
popf
shll
pop
cmovg
mov
addr16
cmpsl
xchg
daa
daa
inc
hlt
cld
add
out
jns
ja
aas
pop
add
add
sahf
xchg
cmpsb
pop
les
cmpsb
fmull
mov
cmpsb
inc
dec
xchg
fs
and
fucom
xchg
lsl
mov
mov
ror
into
fisubrs
mov
add
or
pop
adc
lods
and
cmpsl
xchg
mov
leave
inc
aas
popa
popl
ja
verr
andb
scas
cmpsl
loopne
xchg
and
cmpsl
in
repnz
lahf
or
enter
or
test
jo
sbb
push
iret
int3
cmpsl
lret
sub
daa
cmpsl
ss
jb
pop
xchg
add
jb
dec
sbbb
jbe
push
pop
test
mov
mov
lar
decl
dec
mov
popf
fsubl
jecxz
jmp
ja
fcmovne
mov
in
push
test
jb
aaa
test
and
fs
fs
in
jne
in
mov
mov
xchg
add
leave
jae
incl
in
and
sub
xor
filds
popf
fistl
pop
jg
mov
aas
into
pop
push
jg
stos
jb
jp
add
es
mov
out
fcmovne
add
out
jb
mov
into
pop
lidtl
add
cmp
jae
fimuls
out
inc
dec
mov
fcompp
mov
stos
psubusb
push
add
ss
lahf
out
test
mov
add
inc
cmp
aaa
jb
paddsb
iret
add
leave
leave
jae
int3
cld
add
stos
stos
jns
iret
mov
add
cmp
in
sysret
lahf
cmpsl
stos
xchg
dec
mov
mov
repnz
rclb
mov
sbb
cmc
dec
push
lods
push
nopl
add
mov
lods
jns
ja
dec
push
push
add
iret
mov
jne
or
mov
sub
cmp
bswap
iret
fidivs
ret
fucomi
out
out
push
lods
lahf
push
push
mov
push
pop
clts
add
lods
jns
stc
sbb
lods
lods
push
lods
sahf
out
jns
lods
cs
adc
out
jns
inc
adc
push
cltd
fimuls
push
pop
movd
lahf
sbb
adc
dec
push
xchg
mov
add
out
push
push
sbb
addr16
into
leave
shlb
fbld
out
fmulp
xchg
push
pxor
add
pop
scas
push
dec
xsaveopt
jns
scas
pop
scas
pop
scas
daa
scas
das
push
pusha
rorb
or
push
and
addr16
sbb
pop
pop
bound
pushf
pop
mov
xchg
repnz
and
lods
scas
mov
inc
fidivs
or
lds
test
int
out
jne
pop
mov
add
pusha
mov
or
in
or
add
adc
jne
aaa
mov
enter
scas
clc
scas
int3
mov
xchg
sbb
cmp
xchg
scas
xor
cmp
outsl
ja
decl
popf
dec
and
mov
stos
imul
daa
jp
cmp
paddusw
scas
dec
scas
cmp
xchg
and
mov
add
dec
lock
push
push
push
mov
or
in
repnz
cmpsl
out
jne
dec
pop
lsl
adc
inc
mov
xchg
out
jns
mov
nop
in
dec
cs
mov
loope
or
inc
fwait
aam
add
pushl
inc
fwait
mov
out
into
inc
dec
pop
push
mov
pop
mov
bound
dec
push
push
pop
fiadds
pop
jp
jg
mov
popf
iret
movsl
shrd
jns
mov
mov
mov
push
daa
daa
fucom
aad
add
or
fisttpll
mov
mov
push
xchg
push
add
cmp
repz
and
ja
cmp
add
push
out
jns
or
push
push
stc
adc
or
mov
push
addps
or
setnp
pop
jo
cmp
into
iret
loop
pushf
pushf
fsubp
out
pmulhuw
cs
mov
push
pop
xchg
or
push
fistpll
xchg
pushf
in
mov
rclb
icebp
xchg
adc
dec
dec
outsb
xchg
mov
jl
popf
dec
dec
dec
dec
movsl
lods
fbld
and
clc
adc
daa
dec
das
imul
rcrl
fninit
por
mov
in
inc
daa
sbb
aaa
push
sbb
aas
inc
dec
push
mov
inc
mov
and
rclb
cltd
dec
ds
rcll
sbb
mov
sub
xchg
enter
or
cmp
sbb
inc
mov
pop
inc
mov
pop
mov
nop
xchg
xchg
xchg
mov
mov
xchg
xchg
lcall
jb
cmp
out
mov
inc
mov
mov
mov
mov
repz
push
xor
lret
lret
mov
outsl
inc
mov
mov
fxch
lret
push
mov
mov
mov
push
daa
out
jo
js
adc
or
dec
outsl
ret
fwait
pop
leave
add
pop
stos
pop
mov
dec
jb
mov
mov
repnz
mov
mov
mov
repnz
cs
ss
dec
mov
push
mov
jno
repnz
jl
lahf
xchg
repnz
mov
cmp
repz
mov
repz
shlb
jecxz
ds
repz
and
repz
sub
adc
cmpsl
fwait
cmp
pop
sub
cvttps2pi
das
sahf
xchg
das
aaa
cs
aas
mov
inc
or
outsb
mov
insl
mov
fucom
jns
test
das
lea
xchg
mov
mov
mov
mov
jmp
xchg
jl
fiadds
fdivp
or
movb
cmp
sbb
and
sub
dec
dec
outsb
and
dec
data16
dec
dec
dec
cwtl
mov
shlb
and
jmp
mov
repz
and
sub
fucomi
in
dec
adc
inc
cmovns
sahf
xchg
xchg
xchg
test
jb
cmp
rorl
fabs
mov
iret
jae
push
icebp
bsf
pop
repz
fsubrl
xor
pushf
cmp
leave
arpl
iret
leave
repz
iret
mov
push
sub
repnz
std
cmovbe
andl
mov
sahf
sub
mov
mov
xchg
call
inc
push
fsubrl
xchg
out
mov
iret
mov
fisttpll
in
in
xchg
add
mov
mov
shrl
mov
fcmovbe
in
gs
pop
ja
repz
cs
fwait
push
add
mov
add
add
rcr
pop
call
aaa
jns
pmaxub
mov
adc
pop
pop
sub
adc
repz
cmp
dec
adc
pushf
cmp
arpl
jns
pushf
cmp
leave
test
cmp
repz
iret
leave
repz
jmp
repz
out
repnz
mov
jmp
leave
xor
push
push
es
rcr
in
mov
insl
cs
out
jns
jne
jge
sahf
out
jns
lea
xchg
or
iret
cmp
movsl
push
or
repz
jmp
push
ds
mov
leave
adc
fstpl
out
es
adc
lar
jns
jo
pop
cmc
sbb
std
jae
inc
sar
ficoml
into
repz
sbb
inc
aas
sbb
in
shr
daa
enter
sahf
negl
sub
iret
push
pushl
push
add
xor
dec
dec
inc
dec
aas
push
shrl
dec
mov
pop
sub
mov
add
push
rol
popf
pop
and
push
insb
into
jno
cmp
out
mov
test
ret
jnp
jb
and
ret
int
cmp
ret
outsb
adc
fs
insb
je
xchg
out
jns
test
pop
xchg
xchg
or
cmpsl
aas
scas
mov
mov
leave
jae
cmp
xacquire
outsb
mov
cmpsl
adc
imul
push
mov
ret
mov
jg
outsl
mov
sbb
shlb
add
or
push
mov
ret
or
daa
daa
daa
mov
xlat
out
idiv
push
insl
xchg
lods
decl
iret
cmpsl
jns
xchg
adc
les
cmovno
in
add
insb
repz
fmull
xchg
jl
add
leave
mov
repz
mov
mov
fcmovne
pop
xlat
add
cltd
in
out
shlb
and
into
inc
lcall
jns
xchg
out
inc
dec
pop
push
cmp
fnstsw
pop
out
adcb
repnz
xchg
pop
popf
mull
leave
leave
inc
enter
jns
leave
loopne
dec
shl
in
jb
adc
sbb
cmp
xor
iret
xchg
shll
and
xchg
aaa
mov
dec
fisubl
call
and
add
mov
shr
mov
aam
leave
sub
scas
in
or
iret
or
das
xchg
mov
leave
pop
mov
rcrl
push
add
jb
cmp
jne
jbe
jl
sahf
add
jbe
xor
push
add
syscall
lock
in
gs
fdivrp
movl
in
in
enter
enter
rcr
in
enter
enter
pop
pop
pop
pop
je
jg
mov
xchg
enter
pop
mov
enter
pop
pop
pop
int3
enter
enter
push
loop
clc
push
push
incb
leave
push
in
in
push
push
sbb
in
sbb
sbb
out
in
push
adc
jns
sbb
das
cmp
cmp
cmp
xor
pop
iret
repz
xor
jno
jl
iret
repz
xchg
xchg
aaa
repz
repz
cmp
cmp
cmp
icebp
in
daa
fistps
ds
jg
pop
cmovb
inc
iret
jae
jns
push
and
sub
aaa
cmp
repz
inc
dec
dec
dec
in
jbe
pop
arpl
outsb
jns
sahf
out
test
leave
rorl
push
movsl
mov
mov
rcr
fmul
scas
pop
scas
cmc
sub
jo
bswap
pop
fisubrs
xchg
lret
pop
lret
pop
das
getsec
lret
scas
ljmp
lret
call
jb
xor
iret
push
jp
iret
jae
addb
xlat
outsb
pop
lcall
in
add
inc
xor
inc
adc
inc
jg
pushf
pushf
or
loopne
lock
imul
rcrb
in
in
clts
or
sbb
xchg
in
sub
sahf
xor
add
xlat
push
int3
and
js
aas
pop
int3
arpl
pop
imul
lods
adc
into
or
test
fsubs
fnstsw
mov
dec
dec
into
fidivs
bnd
int
ja
in
or
pop
int
push
mov
loopne
in
int
cmovae
mov
das
das
pop
int
int
cmp
cmp
cmpsb
rcll
mov
jns
shrb
adc
iret
repz
repz
sbb
sbb
jns
mov
or
adc
sbb
pop
daa
iret
dec
sbb
sub
repnz
dec
push
and
iret
mov
ja
orb
iret
sbb
daa
cwtl
das
mov
xchg
or
scas
push
and
add
fisttpll
adc
iret
jg
cmp
dec
push
fcmove
pop
iret
dec
iret
jns
inc
mov
jp
add
cmp
in
fwait
push
push
cmpsb
pop
fmuls
leave
mov
add
xchg
dec
mov
push
rorl
fisttpll
call
ds
iret
dec
or
adc
jns
out
adc
pop
repnz
jae
sbb
push
cmp
xchg
outsb
movhps
push
insb
jns
test
cmpb
cmp
push
and
scas
es
mov
inc
pop
rcrb
or
jb
imul
jno
enter
sbb
negl
sahf
add
push
aas
jbe
cmp
das
and
cs
cmp
out
sahf
out
pop
dec
or
movsl
inc
push
sahf
or
lea
setge
iret
cmp
jns
mov
push
add
daa
aam
fucomip
push
or
sysret
pop
repz
into
icebp
xor
or
push
push
bswap
repz
and
sub
aaa
adc
shl
cmp
adc
enter
rcl
jns
cmpsl
mov
xchg
add
dec
hlt
in
movsl
shrb
or
fstpl
movsb
push
rcl
rcrb
sub
bnd
add
push
shll
push
adc
add
xchg
xchg
out
sbb
sub
xor
ds
pop
dec
iret
jae
cmp
push
pop
adc
outsb
pcmpeqd
cmp
sahf
xchg
mov
loope
sahf
shll
fsubp
adc
push
int3
rcr
push
jb
aaa
inc
mov
clc
sarl
sbb
add
push
push
push
sbb
cmp
iret
repz
das
cmp
dec
sahf
ja
inc
push
push
or
cmp
mov
jl
xchg
out
sahf
out
popf
adc
xchg
mov
push
cs
in
sbb
fisttps
pmaxub
adc
cmc
sbb
pop
pcmpeqb
in
pop
or
push
pop
mov
sahf
ja
and
and
and
dec
sahf
out
and
sahf
out
arpl
jns
popf
cmp
repz
mov
fadd
push
xor
iret
leave
in
jbe
btc
out
xor
std
or
fs
cmp
stos
stos
or
mov
adc
nop
add
mov
xchg
adc
sub
cmp
sbb
call
jmp
mov
ds
cmp
sbb
aas
test
pop
inc
movsl
rorb
inc
aaa
out
pusha
or
push
out
popf
cmp
add
add
sahf
out
sahf
add
or
cmp
jns
or
aaa
or
or
daa
adc
dec
aaa
jns
adc
and
xchg
inc
inc
push
addr16
das
push
loopne
mov
pop
imull
cmp
out
and
jb
pop
jb
pop
jo
orl
repz
jo
pop
xchg
sub
mov
aas
movsb
loope
in
into
aas
xlat
sbb
data16
int3
xor
and
add
mov
push
inc
cmp
xor
repz
repz
sbb
out
sahf
out
call
sahf
out
sahf
aam
int3
enter
jns
rcrb
test
jns
iret
mov
sbbb
pusha
push
push
dec
or
and
add
add
jno
push
hlt
ret
cmp
inc
enter
and
mov
inc
inc
mov
inc
aam
std
imul
call
cmp
adc
cmp
push
add
adc
shlb
pusha
cmpb
stc
enter
fisttps
mov
cld
mov
jle
test
shll
cltd
sbb
mov
idiv
jae
inc
mov
mov
in
call
mov
adc
push
ficompl
mov
inc
mov
xchg
xor
fcomp
loopne
jb
jle
testb
pop
inc
mov
dec
mov
add
or
and
inc
xor
clc
mov
cli
inc
aaa
push
adc
pop
xlat
incl
xchg
mov
fsubrs
pop
das
bound
add
add
sahf
negl
les
or
or
adc
out
adc
cmp
rep
adc
cmp
sbb
hlt
in
sbb
sbb
out
cmp
fsubr
and
and
cmp
cmp
ljmp
mov
jl
push
les
jecxz
cmpsb
aas
rcrb
mov
cs
push
add
pop
or
jnp
cs
pop
dec
mov
outsb
or
inc
add
adc
test
push
es
mov
xorb
xor
out
icebp
addr16
push
push
mov
mov
adc
lcall
aas
pop
stos
sbb
outsb
daa
div
fwait
cmp
testb
scas
mov
cmpsb
fidivrl
xor
jg
out
fidivs
and
sub
mov
xor
mov
mov
adc
out
sub
sbb
jecxz
push
js
mov
scas
stc
mov
clc
add
xor
out
or
adc
mov
push
pop
lock
mov
push
and
push
or
add
mov
cld
adc
cmp
jns
hlt
sbb
adc
rcrb
repz
repz
mov
and
iret
repz
movsb
es
es
jl
aas
clc
mov
out
jg
movups
lods
cmpsb
outsb
daa
xor
mov
outsl
and
inc
cmp
in
and
and
jg
repz
pop
js
mov
out
cmp
repz
xor
andb
out
rorl
ja
mov
jae
into
repz
dec
das
push
dec
insb
cmp
add
mov
and
pop
enter
inc
pushf
or
ds
push
ret
mov
adc
xchg
pslld
mov
leave
sbb
scas
mov
ret
inc
and
sahf
mov
sub
inc
rcrb
and
decl
jmp
inc
jno
xlat
xchg
inc
push
add
inc
stc
mov
adc
mov
mov
dec
pop
js
inc
outsl
loopne
jmp
xchg
test
mov
cmp
jmp
jl
mov
popf
sti
jmp
stos
push
inc
mov
repnz
test
pop
stos
clc
ljmp
cli
inc
jmp
aam
imul
loope
jp
iret
inc
gs
xchg
push
cmpsb
scas
mov
or
gs
or
addl
cmpsl
xchg
cmp
xor
dec
cmpsl
in
cmp
lcall
cmpsb
lock
mov
popa
sar
mov
fsubs
stos
xchg
clc
repz
add
mov
subb
fwait
xchg
and
and
jmp
int3
add
sti
aas
jno
or
mov
pop
fs
cmp
dec
lea
aas
ret
shrl
mov
icebp
aas
rorb
and
cmpsl
out
aas
inc
cmpsb
mov
insb
scas
add
aas
xor
aad
mov
std
std
into
popa
test
call
ja
stos
in
das
dec
pop
loope
les
aas
xchg
les
jne
int
mov
addr16
mov
push
mov
xchg
aas
and
loop
mov
jp
popa
push
pop
sarl
jl
mov
pop
aas
xlat
out
das
lea
mov
inc
inc
aas
movsl
jmp
jg
sub
jge
mov
mov
fstl
arpl
int3
and
call
cmp
jp
and
cmp
sub
jmp
mov
cmp
cmp
mov
lcall
mov
jecxz
cmpsb
add
movb
aaa
fldt
cmp
jno
shlb
out
dec
nop
pop
cmp
jmp
fisubl
xor
push
lahf
inc
pop
mov
sub
dec
in
ss
push
ljmp
pop
add
rcr
jge
call
mov
xchg
cmp
push
andl
dec
dec
bound
outsl
std
orl
pop
ficomps
frstor
jo
iret
pop
pop
inc
cmp
sub
push
dec
push
dec
dec
xchg
jnp
cmpsl
lcall
xor
ja
popa
push
out
mov
les
decl
movsl
arpl
mov
mov
push
movsb
mov
aad
mov
rclb
mov
sub
mov
sbb
dec
jno
repz
test
ficompl
jmp
mov
hlt
movl
imul
std
in
leave
mov
add
fldcw
arpl
or
pop
adc
in
pusha
aad
jno
mov
aaa
incl
add
std
test
movsl
cli
test
xor
leave
mov
mov
fdivs
jne
filds
or
shrl
push
ficoms
push
xlat
enter
call
popa
sarb
and
mov
cltd
xchg
mov
mov
or
or
out
mov
jmp
or
adc
stos
sbb
cmp
inc
fdivl
jno
add
aad
mov
mov
movsl
in
lahf
pop
sbb
pushl
aam
call
xor
and
or
sbb
push
sub
insb
fs
add
hlt
push
imul
insb
sbb
xor
decl
insb
jnp
add
shl
adcb
cmc
fnstenv
adc
mov
jl
mov
bound
ficoml
gs
aam
pop
popa
mov
into
pop
jg
cli
cmp
mov
inc
movsl
fisttps
fadd
shll
ljmp
imul
mov
sarb
add
in
add
pop
dec
or
subb
push
stos
inc
add
adc
or
and
jbe
test
or
mov
popa
into
push
stc
ficomps
leave
fldcw
and
xlat
call
cmp
mov
cmp
lods
insb
mov
in
mov
mov
add
cmp
ljmp
fildl
push
fdivl
or
test
fs
ds
or
decl
iret
push
in
decl
xchg
daa
scas
add
mov
pop
jge
xchg
shlb
add
inc
push
imul
push
test
ss
sbb
push
imul
aam
loopne
rorl
int3
dec
frstor
ljmp
mov
mov
mov
aad
mov
call
xchg
shll
push
repnz
pushl
icebp
addr16
cmpsb
fldl
mov
dec
ss
fisubrl
or
scas
testb
pushl
pusha
jp
inc
ret
out
pusha
fists
addr16
mov
jns
imul
andl
shrb
jmp
rclb
or
add
mov
or
mov
or
add
ljmp
sar
pop
cmpsl
call
ret
shlb
scas
ficomps
ret
es
jmp
pushf
mov
insl
add
ss
jmp
addr16
jb
push
add
adc
mov
jnp
sbb
xchg
or
out
fdivrl
fisttpl
aam
roll
call
icebp
clc
mov
push
int
mov
mul
ja
outsl
ja
mov
out
call
jo
ud0
cmp
pop
or
adc
sahf
gs
clc
sar
imul
mov
loop
mov
push
addl
mov
cmp
cmpsl
notl
pusha
rorb
imul
lret
shrl
or
inc
ljmp
pusha
mov
fidivrs
cmp
call
sbb
mov
lret
pushl
and
sarb
sub
push
mov
jp
mov
dec
popa
les
sbb
ljmp
xchg
sub
aaa
mov
or
sbb
add
sub
push
cs
dec
xor
daa
iret
mov
pop
cmp
sub
pop
js
adc
add
inc
jns
out
push
xlat
fcomp
fcmovu
out
sahf
out
fstp
loop
jns
out
in
call
sahf
out
in
in
repz
sahf
out
sahf
cmc
div
clc
stc
cli
ret
jns
cld
daa
adc
aas
push
adc
adc
inc
mov
push
movl
fs
dec
bound
rol
into
add
fisubs
insl
bound
inc
pop
stos
std
ss
je
push
aam
das
xchg
cltd
out
and
inc
dec
notb
dec
dec
inc
jns
xor
pop
inc
cmp
idiv
incl
xor
aaa
cmp
popa
arpl
cmp
arpl
or
aam
fildll
xor
bound
not
sahf
fs
push
inc
jbe
pop
insb
imul
jbe
gs
fs
xor
inc
mov
and
in
add
push
inc
push
and
dec
or
popa
or
add
push
gs
je
dec
pop
or
jbe
add
push
inc
aas
ss
imul
and
gs
aam
xchg
inc
push
adc
sub
mov
mov
push
pushf
imul
cs
rcrb
dec
insb
or
adc
aaa
je
aaa
pop
push
movq
inc
push
inc
mov
pusha
aas
or
add
jae
addps
cmp
das
inc
dec
mov
pop
inc
aas
and
inc
inc
mov
inc
pop
jnp
cmp
inc
je
jo
inc
inc
add
shlb
mov
gs
mov
iret
int
push
dec
cmp
pop
insl
inc
xor
sbb
mov
pinsrw
jne
jno
lods
mov
popa
mov
mov
pop
xor
xor
mov
sahf
add
or
add
out
fldl
push
clc
xchg
into
pop
dec
leave
or
jo
lea
mov
xchg
inc
cmp
inc
adc
add
lret
aam
in
push
or
jo
gs
outsl
orb
and
mov
push
xor
lahf
and
fwait
mov
mov
imul
adc
lahf
xchg
add
js
out
jb
rcll
push
dec
popa
jo
or
lahf
dec
push
sbb
outsl
outsl
test
mov
stos
sbb
mov
mov
in
cmp
push
loop
xor
inc
cmp
arpl
add
mov
cmp
mov
mov
xchg
push
loopne
push
outsl
insb
jns
cmpsb
or
and
inc
jb
push
mov
gs
inc
outsl
arpl
adc
mov
push
push
bound
ja
inc
push
shll
addr16
pop
dec
pop
jg
push
dec
add
mov
jecxz
jb
xchg
mov
xlat
add
rcl
outsl
inc
add
push
add
push
xchg
jg
xorb
iret
inc
or
push
lods
xor
mov
cmpsb
pop
inc
dec
or
test
sar
inc
mov
daa
rorl
aas
adc
jo
sbb
aas
adcb
sbb
inc
dec
xchg
cmc
sub
jns
arpl
xor
cmp
pop
pusha
add
insb
insl
aaa
adc
jne
push
pop
mov
push
dec
inc
xchg
fistl
enter
xlat
push
jno
mov
mov
add
or
or
sbb
rcrb
mov
movl
jbe
pop
add
fdivr
loopne
adc
dec
adc
ja
add
pusha
add
fcmovnu
jae
or
add
add
in
add
pop
pop
push
or
or
or
sub
push
adc
push
adc
adc
push
adc
outsb
xlat
decb
add
pop
sbb
adc
adc
adc
add
inc
mov
shll
or
mov
add
jo
add
and
add
sti
add
data16
add
les
add
pop
shlb
xor
add
pop
fdivl
imul
ds
xor
adc
pop
add
jmp
jno
xor
inc
mov
adc
xor
cmpb
mov
out
add
or
aaa
adc
mov
add
pop
pusha
jno
and
adc
inc
or
and
adcb
sub
inc
pusha
add
adc
mov
adc
es
add
subb
ja
adc
pusha
inc
lods
push
adc
pop
popa
jno
and
adc
xchg
mov
or
xor
adc
loope
icebp
cwtl
and
mov
mov
adcb
sub
or
js
ljmp
cmp
lret
rcr
push
ret
xchg
and
sub
lods
out
mov
std
cmpsb
xor
aas
imul
fdivrl
mov
cli
fistps
pop
les
fsts
dec
add
mov
mov
cmp
ja
out
cmp
xor
and
shll
jg
inc
cmc
iret
xchg
inc
jl
repnz
dec
or
adc
pop
inc
inc
in
addb
pusha
add
std
or
ljmp
add
lds
cld
cli
and
mov
fiaddl
jg
fnstsw
ficompl
cmpsl
xor
mov
std
jmp
lahf
mov
movsl
jecxz
pop
mov
popa
fsubr
push
stc
or
xchg
jg
or
insb
ljmp
or
push
push
xchg
add
repnz
inc
lock
scas
jle
fcmovnu
clc
cmp
fisubrl
in
mov
orb
int3
lcall
fs
jg
shll
pop
pop
mov
popl
movb
xchg
sbb
decl
scas
adc
mov
xor
lods
scas
xchg
test
aam
and
sbb
call
mov
and
roll
fwait
movsb
jmp
push
lret
push
out
in
and
ss
push
in
aas
repz
cmpsb
pop
outsl
icebp
mov
pop
lock
std
or
pop
mov
daa
test
ljmp
push
out
outsl
loope
loope
rorl
decl
int
arpl
push
out
or
push
in
ljmp
sahf
pop
clc
sti
jg
jno
lock
jg
inc
icebp
xchg
std
sarl
xor
cmp
mov
jmp
sbb
push
add
out
pop
jb
mov
mov
in
push
mov
sub
pop
mov
jl
rorl
adc
push
jo
jg
hlt
push
add
stc
loope
mov
push
in
div
sar
andl
aas
icebp
testb
mov
incl
xor
jns
mov
in
repnz
jno
pop
sub
jg
scas
cld
or
mov
inc
sbb
paddb
inc
mov
dec
adc
cld
push
lock
lods
jp
testb
sbb
into
fcomps
sbb
sbbl
push
xlat
cmp
test
loopne
cli
adc
aaa
xchg
in
add
aaa
fldln2
fwait
inc
adc
loope
fisttpll
out
aas
std
cli
push
jg
cmp
sub
inc
scas
inc
mov
lcall
jg
je,pn
sub
jg
imul
mov
mov
inc
es
gs
jns
enter
fsubl
or
push
pushf
push
scas
xlat
sub
cmp
sti
punpckhbw
cmpsb
orb
mov
pop
xor
mov
sti
das
jmp
xchg
pop
clc
pop
hlt
sub
movsb
add
add
lea
jg
gs
std
xorb
jg
add
decl
outsl
adc
ret
das
pop
pop
pop
shlb
out
ljmp
sbbl
jno
or
sarb
std
pop
les
cli
mov
outsb
adc
xchg
mov
inc
arpl
lcall
inc
sbb
scas
sbb
push
scas
loop
jge
push
shrl
mov
push
mov
adc
and
std
inc
push
fcomps
xchg
jo
and
out
test
jae
push
iret
sti
cmp
ficoms
aam
jmp
and
fadd
or
mov
nop
enter
add
cld
call
js
cmp
scas
lods
hlt
cmp
fistl
mov
adc
push
movsb
xchg
or
mov
clc
add
lods
xor
jg,pn
cmpsl
scas
popa
in
pop
fisttps
dec
xchg
mov
xlat
pushf
cld
aas
clc
jge
jnp
sbb
outsb
mov
sbb
jecxz
inc
adc
jmp
dec
jb
adc
xchg
and
push
push
jo
pusha
imul
in
lcall
sbb
das
adc
cmp
xchg
mov
cwtl
pop
stos
inc
ljmp
xchg
and
jae
incl
jle
jg
mov
lahf
cld
sub
aas
stc
add
out
gs
jno
fidivrl
mov
adc
pop
cld
addl
adc
and
loopne
push
cmp
fmull
enter
jecxz
scas
incl
jmp
sub
in
pop
mov
sub
mov
dec
incb
fisubrl
aas
shr
mov
or
cld
inc
or
sti
lds
pop
jg
add
jg
mov
aad
pop
in
divb
xchg
movsb
mov
iret
push
pushl
push
sbb
stos
icebp
pop
incb
jno
sti
fcomip
call
push
inc
jecxz
sbb
sarl
adc
loopne
cmp
mov
sar
adc
lahf
xor
out
push
in
inc
imul
dec
push
in
fildl
fsubrl
lock
and
pop
pusha
inc
sbbb
mov
add
mov
repnz
and
mov
adc
clc
or
push
rcrl
rolb
pop
inc
jb
fistpl
adc
call
jno
pop
nop
jmp
inc
sti
arpl
daa
std
or
sbb
mov
inc
cmpsb
popf
push
loop
sbb
or
aas
cld
js
aas
divb
iret
dec
xor
fsubr
fistps
lds
fidivrl
jg
mov
add
dec
mov
sub
fstpl
xor
lahf
les
sbb
sbb
cld
addl
jmp
shr
stc
mov
lahf
outsl
int3
push
sbb
rcrl
pop
test
bound
popa
out
out
outsl
xchg
inc
test
in
jge
popa
push
test
or
jbe
outsb
hlt
sti
fsubs
shl
dec
jp,pn
adc
lahf
mov
cwtl
dec
incl
or
out
lcall
icebp
push
cld
clc
mov
mov
test
mov
pop
jg
pop
shrb
rcl
jg
adc
mov
xor
pop
rcr
dec
mov
gs
pushf
lea
jp
jnp
mov
adc
inc
lds
push
pop
adc
imul
xor
dec
or
inc
pop
xor
rorb
mov
lods
test
pushl
lcall
mov
pop
inc
cmpsl
enter
mov
into
test
xchg
movsb
insb
jnp
pushl
and
xchg
fidivrs
jg
inc
push
clc
insb
test
aas
repz
outsl
lock
test
cld
paddsw
pop
stc
out
mov
clc
push
std
mov
jmp
test
mov
mov
push
mov
fsubrp
dec
sahf
enter
fcmovb
inc
adc
inc
loopne
test
fisttpl
out
rolb
pop
or
or
fidivrs
les
ss
lods
movsb
or
repnz
clc
dec
cmc
mov
jl
fisttpl
subb
cmpsl
lret
dec
fistps
in
cmp
jmp
mov
std
push
test
pop
lock
jmp
hlt
dec
mov
xlat
inc
loopne
incl
jg
mov
sub
fildll
pop
mov
sbb
cld
daa
jp
std
adc
cltd
or
mov
ret
stos
pop
test
incb
lock
pop
pop
div
cld
mull
adc
and
sbb
stc
lahf
loope
jae
jmp
mov
mov
pushl
out
xchg
add
out
icebp
mov
loope
mov
cld
and
sbb
fbstp
pushf
dec
lds
push
inc
sub
loopne
js
cmpsb
cmp
call
xor
decb
shrb
decb
dec
adc
call
sbb
cltd
add
mov
mov
cmp
int
add
push
pop
aaa
std
lock
cltd
nop
fisttps
inc
sbb
mov
mov
aas
icebp
ret
arpl
ror
sbb
aaa
inc
mov
adc
mov
sub
mov
pop
clc
scas
xorb
ja
and
dec
xchg
stos
or
add
xlat
jmp
mov
xchg
fldenv
iret
fdivrl
xchg
lcall
xchg
mov
repz
movsb
pusha
shlb
xchg
sarl
pop
out
jg
jno
ret
fs
cwtl
scas
xchg
cmp
inc
sbb
aas
mov
iret
push
dec
jge
pop
clc
xchg
cmpsb
ljmp
ds
inc
mov
pushl
in
sbb
xchg
imul
jmp
outsl
jmp
test
lcall
std
mov
daa
jmp
faddl
mov
add
xor
push
imul
pop
stc
push
dec
out
fstpt
daa
std
mov
mov
enter
sub
addb
push
out
daa
icebp
push
lahf
sti
inc
pop
imul
push
xchg
cmpsb
scas
les
pop
xor
mov
xchg
decl
fildll
fsubrl
dec
add
and
add
stos
rorb
sti
push
sti
pop
inc
dec
push
mov
jbe
int3
or
cmp
aas
pop
int3
pop
iret
and
add
sbb
push
xchg
rcr
push
dec
cmp
mov
dec
out
cmc
ret
ret
pusha
inc
lods
inc
andb
dec
sub
fldl
lcall
push
xor
or
js
pusha
daa
push
cmp
hlt
les
cltd
mov
outsl
cmp
xor
incl
je
adc
xchg
dec
lret
mov
mov
out
cmc
addr16
aam
xor
xchg
fcos
incl
data16
push
mov
pop
mov
push
xchg
stos
fnstsw
repz
dec
fcmovnu
cmp
nop
lea
out
mov
outsl
nop
or
rorb
aas
lcall
sbb
pushl
daa
jae
out
or
iret
mov
lahf
jle
xchg
inc
push
orps
jmp
repnz
or
scas
push
insl
dec
sarl
shll
dec
loop
mov
jae
push
mov
jo
xchg
jl
call
or
adc
inc
sbb
out
jnp
nop
push
inc
ret
inc
sbb
inc
mov
pop
daa
pushf
push
cmp
mov
push
shll
fisubrs
hlt
fmul
push
push
jmp
pop
mov
decl
dec
dec
mov
rorb
cmp
jo
enter
jae
insb
hlt
jg
das
rclb
decl
pop
jno
insl
dec
xor
dec
xor
ljmp
sbb
arpl
insl
clc
xlat
mov
call
orb
push
sti
cmp
dec
int
adc
pop
lods
adc
cltd
fcoms
and
enter
inc
pop
icebp
stc
mov
es
push
xchg
xor
add
push
mov
insl
stos
or
orl
inc
shll
cmpsb
mov
pop
dec
sahf
xor
ret
or
outsb
adc
incl
dec
xchg
je
sbb
ret
pop
pusha
dec
je
cmpsb
push
arpl
jb
push
test
pop
xchg
xchg
push
mov
fistpl
ja
cmp
in
imul
pop
add
sbb
fistl
decl
or
mov
push
sbb
pop
out
add
xchg
mov
icebp
loopne
inc
lock
jmp
shlb
sub
lds
cwtl
loope
lret
mov
add
inc
push
mov
xchg
lods
out
hlt
jecxz
pop
daa
movsb
push
pop
add
pushl
mov
es
dec
and
imull
or
ljmp
fs
call
arpl
add
mov
in
mov
clc
mov
sub
int
ljmp
cmpsb
movsb
xor
inc
in
inc
cwtl
roll
insl
jmp
scas
mov
addr16
lock
mov
nop
cmpsb
hlt
sub
test
decl
adc
jb
mov
mov
add
movsl
push
data16
incl
cltd
push
cmp
pop
insl
lret
mov
sbb
pop
mov
pop
mov
lcall
insb
and
mov
mov
scas
dec
movsl
adc
xchg
add
jg
jns
in
ss
inc
decl
cmpsl
dec
fisubrl
cmp
fldt
jge
hlt
push
cmp
imul
pushl
mov
dec
scas
aas
stos
call
int
fistps
psubq
lahf
push
ljmp
adc
pop
pop
push
fdivr
stos
pop
fdivrl
lods
sbb
mov
les
mov
sbb
sbb
scas
xor
cld
decl
sub
test
dec
andb
leave
jno
pop
es
sub
fists
cld
icebp
push
mov
das
sar
xorl
adc
inc
ljmp
mov
movsl
add
jl
mov
sub
push
sbb
and
hlt
popa
clc
add
fs
sub
incl
mov
dec
inc
fcmovbe
adcl
js
out
push
lret
inc
xchg
lcall
incl
hlt
outsb
dec
inc
enter
fmull
cli
pop
mov
cltd
dec
dec
add
mov
jae
adc
ljmp
cmpl
mov
in
mov
xchg
mov
pop
xorl
scas
aaa
and
sar
push
insl
xchg
daa
repz
lahf
dec
subb
test
push
push
pop
test
neg
jmp
sbb
stos
iret
add
cli
cli
fcoml
cmc
or
mov
fbld
fdivrp
in
dec
mov
loop
clc
cmp
push
aad
ljmp
ljmp
data16
jmp
inc
ret
xchg
int
sahf
pusha
popf
aaa
mov
fistpl
aam
in
dec
cmc
inc
call
push
add
mov
mov
push
addb
push
out
dec
adc
dec
jo
call
sub
and
inc
in
outsl
movsl
mov
popf
mov
mov
xlat
sbb
mov
sarl
pushl
cmp
mov
and
dec
xor
out
aas
mov
cmp
imul
xchg
pop
hlt
aam
aaa
mov
leave
xchg
mov
adc
sub
mov
jle
call
call
xlat
pop
in
pop
xchg
loope
sar
fwait
ret
and
scas
clc
out
xchg
lahf
sbb
adc
pop
cmc
ljmp
outsb
daa
jl
xor
xor
dec
xor
adc
incl
dec
loopne
ret
push
ds
cmp
or
pushf
sub
cmp
shl
stc
insb
mov
jb
call
inc
jne
mov
xchg
and
pop
insb
adc
pusha
push
movsb
or
repnz
out
sbb
hlt
lcall
bound
push
addr16
mov
push
pop
insb
shll
fsubr
stos
jg
jmp
sub
sbb
out
fimull
sub
rclb
repnz
push
fldt
dec
lcall
inc
imul
insb
ljmp
mov
or
and
icebp
inc
push
orb
adcb
call
call
pop
icebp
scas
cld
push
fisubs
inc
ljmp
push
jne
or
sbb
inc
frstor
or
ss
sbbl
fcos
inc
roll
and
fsubrp
in
push
inc
jno
dec
aam
or
pop
pop
inc
clc
mov
push
and
jle
xchg
xor
popf
pop
mov
filds
jecxz
jne
sbb
clc
push
mov
cmp
fcomip
incl
test
loop
xor
insl
outsl
adc
les
mov
bound
inc
dec
jae
dec
fs
push
idivl
outsb
ret
and
rcl
mov
pop
pop
fldl
jmp
repz
sbb
add
sbb
cmpsl
jmp
ja
ret
call
cmp
xor
repnz
sbb
mov
repnz
or
ljmp
jns
push
fmuls
pop
es
xchg
xor
roll
nop
data16
adc
aad
daa
pop
clc
lcall
sub
add
fstpl
cmp
decl
fidivrl
jae
test
roll
xchg
cmp
ljmp
pop
aad
les
xchg
lea
sahf
mov
cmp
sti
je
cmp
sti
sub
fldl2e
pop
addb
scas
test
lcall
jecxz
pushf
or
sub
xor
push
sti
shl
sti
ret
jmp
call
cmc
mov
adc
sbb
push
cltd
adc
ja
jnp
sbb
dec
dec
pop
decl
cwtl
sbb
sbb
repz
cmp
test
dec
stc
cmp
jl
xlat
stos
test
dec
mov
mov
sbb
pusha
push
addr16
mov
cmp
and
incl
push
int3
mov
adc
or
ficoms
jno
rcr
cmp
leave
push
sbb
repz
xchg
call
les
mov
sub
push
daa
and
pop
stos
pop
push
xchg
test
ljmp
sub
arpl
fbstp
or
js
and
cltd
xor
mov
push
sub
mov
jmp
xchg
inc
sbb
cmpl
je
jo
subb
cli
jnp
stos
aaa
jb
jle
and
lcall
mov
mov
das
add
mov
sub
mov
xchg
mov
and
lcall
adc
stos
pop
stos
ss
jle
push
pop
mov
cltd
lods
sub
and
int
sbb
test
sub
xchg
dec
mov
cmpsl
jge
sbb
bound
imul
testl
out
mov
ljmp
lret
mov
sbbl
sbb
aas
jle
incl
adc
adc
dec
push
add
shrb
out
das
adc
decl
cltd
mov
sub
gs
cli
pop
mov
adc
pop
push
enter
or
or
lcall
xor
push
or
movaps
xchg
jmp
pop
loop
inc
pop
fdivrs
mov
fsubrl
rcrl
dec
jge
sbb
insl
nop
adc
pop
in
push
mov
sub
inc
push
cld
inc
mov
stos
jle
vpaddb
jecxz
mov
mov
ljmp
xchg
lcall
addl
mov
cmp
mov
popa
sub
xchg
mov
fnsave
call
in
add
lret
xchg
adc
into
test
mov
lcall
inc
and
pop
jecxz
xchg
inc
adc
lret
in
js
lahf
cmp
cmp
push
cld
jp
cmpsb
mov
dec
pop
mov
pop
icebp
cmp
lcall
enter
inc
ds
nop
pop
sbbb
imul
ljmp
clc
aad
jl
push
pop
xchg
sub
test
test
inc
test
inc
mov
fcmovbe
or
fcomip
into
loope
jo
push
rclb
shlb
out
fisttpl
cltd
movl
hlt
aam
xchg
xchg
push
push
icebp
push
movsb
xchg
mov
jg
xor
cmp
mov
out
sarl
mov
jbe
movsb
out
out
shl
out
sbb
lcall
loopne
xor
xor
dec
repz
int3
shr
push
pushf
das
mov
imul
add
leave
decl
mov
shrl
das
mov
mov
mov
outsb
inc
pusha
sahf
mov
ljmp
xor
cli
lods
lock
imul
sbb
pushf
je
les
xchg
xchg
pop
shrb
out
rol
lret
pop
stos
pusha
push
outsl
xor
add
daa
mov
xor
test
sarl
adc
lcall
push
test
dec
sub
movsb
mov
inc
mov
push
cmp
decl
pop
mov
fidivs
std
mov
nop
inc
cmp
adc
jge
mov
sbb
shlb
pop
filds
arpl
sub
fdivs
and
pop
dec
lret
daa
sarl
jnp
add
iret
or
loope
push
sub
adc
int3
icebp
lods
xchg
push
xchg
jmp
out
inc
gs
decl
aam
scas
sahf
mov
mov
sub
scas
mov
pushl
lods
cmpsl
movsb
mov
aam
leave
popa
inc
ret
sahf
xor
lcall
fcomip
mov
mov
insb
pop
sub
subb
pop
mov
cmp
rep
imul
xchg
mov
es
fiadds
sbb
sub
fwait
enter
or
cli
mov
repnz
inc
lea
ss
vucomiss
mov
pop
inc
dec
jle
adc
js
sbb
mov
inc
inc
or
in
lcall
arpl
hlt
mov
inc
ljmp
imul
xchg
cmp
mov
cmc
gs
push
lds
sbb
cmp
adc
arpl
sub
out
jg
scas
xor
outsl
pushl
ret
mov
mov
mov
leave
test
cmp
outsb
cwtl
push
sbb
fnstenv
pop
pop
das
dec
out
test
or
test
jl
ds
fcomip
cmp
ljmp
adc
into
fxtract
es
nop
negb
in
decl
xchg
jae
add
xchg
lock
clc
dec
pop
jno
roll
sbb
hlt
jl
cs
ljmp
or
movsb
idivb
jo
les
fisubrs
sub
add
incl
sbb
adc
sbb
inc
inc
fnstcw
xor
xor
and
call
sti
cmpsb
in
adc
jne
and
ja
inc
xchg
mov
call
cld
mov
push
arpl
mov
lods
out
movb
pushf
adc
push
mov
outsl
push
pop
movsl
fidivs
or
jne
jp
pop
sbb
fmul
push
cmova
outsb
iret
mov
icebp
pushl
mov
cmp
repz
int
xchg
and
in
or
dec
fcomip
fisttps
pop
bound
push
lods
aas
push
das
xor
push
test
decl
mov
int3
outsw
sbb
in
jne
xchg
addr16
jle
and
mov
mov
dec
fldl
and
decl
les
faddl
out
stos
ja
inc
xchg
inc
or
push
pop
cltd
aam
xor
adc
ret
sub
cmp
call
out
imul
pop
push
and
push
xor
add
insl
popf
inc
ljmp
mov
mov
xchg
jecxz
push
sbb
subl
or
jmp
out
out
leave
push
test
cltd
xchg
sub
sub
cmpsl
shll
xor
push
push
inc
sub
jae
test
call
xchg
nop
sub
and
mov
fs
jnp
lcall
test
mov
aam
sbb
stos
repnz
ror
popf
or
pop
jge
pop
xor
stos
std
bnd
in
pop
fs
sti
in
cmc
mov
mov
movsl
outsb
es
mov
xchg
rcll
ds
hlt
pop
cltd
ret
pop
test
jmp
sbb
icebp
adcb
or
mov
pop
xchg
add
xor
clc
pushl
sbb
push
enter
fisttpll
pop
cmpsb
hlt
jno
cmpsl
icebp
pop
cwtl
cld
ljmp
add
sub
cli
shr
lock
cmp
sbb
movsb
or
mull
loop
cmpsb
call
xor
jmp
outsb
mov
stos
and
scas
aam
decl
or
jo
gs
cmp
movsb
dec
into
in
pop
or
daa
incl
cld
dec
dec
dec
xlat
icebp
roll
inc
cli
jo
xchg
popa
and
mov
mov
popa
sub
inc
popa
inc
push
std
shlb
xchg
mov
add
ljmp
xchg
mov
dec
enter
add
shll
sahf
daa
lcall
lcall
jno
andl
jg
fistps
xor
cmp
pushw
adc
mov
jmp
imul
push
mov
and
sub
movsl
xor
mov
aas
jle
adc
stos
cmp
ljmp
inc
imul
push
inc
test
lock
loopne
insb
jns
pop
ljmp
call
pop
xchg
scas
push
mov
push
jle
lret
jg
mov
test
negl
pushf
stos
fdivs
pop
dec
bound
call
cmp
mov
sbb
inc
notb
lahf
shrb
imul
dec
decl
lock
mov
mov
arpl
xchg
jno
mov
incl
adc
adc
add
hlt
ljmp
cmpsb
mov
aam
mov
add
ja
mov
push
inc
and
sbb
lret
aad
aas
ss
jmp
lahf
pop
mov
xchg
in
mov
xchg
lds
cmp
icebp
cwtl
pushl
mov
cs
dec
icebp
repnz
divb
push
xor
adc
jmp
mov
into
pop
lcall
jns
sub
and
mov
jl
loopne
hlt
pop
sub
incl
sbb
aad
push
cmp
arpl
int3
adc
nop
rorl
outsl
iret
mov
aaa
rolb
scas
mov
and
lea
and
add
mov
sub
in
ss
popf
sub
repz
jns
call
arpl
aaa
fs
cmpsb
rcrl
dec
jo
andb
lret
lcall
sub
jb
lods
repnz
jge
sbb
cli
mov
pop
test
popf
xchg
nop
insb
out
adc
lcall
xor
fbstp
ffreep
in
inc
iretw
cmp
mov
sar
decl
jge
mov
jmp
mov
inc
add
mov
mov
mov
mov
jmp
and
pop
test
and
cwtl
add
push
mov
push
outsb
jno
jecxz
ljmp
push
fisubs
notb
inc
jnp
xlat
ss
adc
decl
push
imul
popa
xor
daa
insb
push
cmpb
push
xchg
dec
ljmp
sub
insb
sbb
sti
ljmp
xchg
xlat
xchg
mov
sbb
lcall
in
dec
cmp
pop
push
jne
pop
test
dec
or
gs
out
xor
ds
ja
stos
icebp
mov
hlt
pushf
mov
in
sahf
adc
incl
decl
divl
dec
push
xchg
push
pop
loope
mov
inc
mov
cmp
in
and
or
jne
stos
inc
xor
imul
es
ljmp
pop
cltd
in
add
pushl
mov
negl
pop
in
mov
inc
pop
xor
xor
xor
inc
mov
sub
cmpsl
cmpsb
sub
add
ljmp
cmc
mov
imul
mov
adc
call
jbe
add
fs
inc
lcall
xor
std
out
adc
inc
jae
pusha
bound
loopne
dec
aam
bnd
icebp
ljmp
sbb
mov
out
dec
and
and
stc
push
shrl
xchg
mov
push
mov
rorl
sbb
clc
fisubrs
fidivrs
jmp
push
add
dec
lahf
or
cmpb
sbb
add
ja
push
je
cld
sub
pushl
clc
sahf
mov
repnz
mov
adc
jmp
mov
sar
aam
sub
pushl
jle
les
test
leave
lods
add
fidivrl
or
fwait
insb
cld
lods
xor
push
push
adc
icebp
mov
insb
mov
test
clc
hlt
mov
sub
out
ljmp
clc
aaa
adc
xor
mov
and
negb
jnp
inc
incl
jo
push
dec
sbb
repz
stos
ret
and
jg
lods
mov
add
out
jnp
and
popa
imul
imul
mov
decl
pop
cmpsl
adc
sub
jmp
iret
pop
push
inc
cld
dec
cmp
mov
in
call
stos
lret
sti
mov
mov
xlat
or
in
push
or
jg
jmp
test
lods
mov
adc
mov
mov
movsl
ljmp
loopne
xchg
mov
pop
ds
dec
ss
mull
fs
mov
ds
sbb
jecxz
lret
nop
les
sub
repz
or
xchg
call
cmp
mov
mov
inc
mov
lods
andb
cmp
sub
sar
lcall
or
inc
addl
sub
shl
pop
or
pop
sbb
xor
das
jb
jmp
xor
aam
push
sbb
add
fcmovne
stos
les
dec
pop
mov
out
mov
xor
pop
stos
add
xchg
clc
dec
cli
push
ret
adc
es
cli
lcall
fs
jb
int3
in
pop
insb
push
lods
clc
xor
incl
roll
jecxz
mov
xchg
js
repz
loope
loop
xchg
out
rcrl
aam
stos
push
mov
lcall
add
cmp
cmp
hlt
fidivl
pop
mov
out
and
cs
xchg
xchg
sbb
cmp
test
repnz
or
mov
in
pop
add
out
int3
call
jnp
mov
sbb
dec
push
sarl
cwtl
sbb
adc
repz
cmp
adc
xorb
add
cmpxchg
jle
bound
cmc
dec
xchg
clc
xchg
jp
dec
jae
decl
cmp
xchg
push
out
cmc
sbbb
pop
or
sbb
adc
fbld
fs
dec
xor
ret
cwtl
mov
outsl
repnz
imul
xor
loope
and
enter
inc
ljmp
xchg
testl
inc
imull
incb
stos
insl
push
ror
jmp
stc
lret
cli
sti
mov
pop
pop
xchg
adc
int
mov
pop
gs
mov
call
popa
or
jae
ds
loopne
fstpt
lods
xchg
vmwrite
mov
enter
stc
sub
int3
sub
and
out
fisttpl
scas
into
repnz
ud0
add
ljmp
xchg
daa
mov
loop
ljmp
push
inc
sub
fwait
je
adc
lcall
cmp
jl
ficomps
jmp
add
push
punpcklwd
mov
movsb
stos
adc
lcall
pusha
je
cmp
xchg
or
sub
dec
call
push
outsb
in
ret
xchg
aas
ljmp
aaa
int3
mov
lret
or
cmpsb
fiadds
adc
lret
incl
or
sbb
xor
xchg
xchg
pop
jecxz
xor
testb
fbld
test
or
lock
call
or
bound
fidivrs
sti
jg
push
leave
ja
push
sub
pushl
mov
imul
ret
cmp
ljmp
cld
stos
dec
inc
dec
xor
adc
or
jg
push
cld
mov
jge
out
lcall
test
in
add
mov
mov
out
jb
out
mov
lods
leave
mov
pop
lock
xor
aam
push
sub
imul
ret
pop
push
clc
fcoms
add
cmpsl
test
jmp
imul
sub
inc
iret
adc
xor
pushl
lock
sbbb
push
sti
mov
lock
pushf
je
adc
jmp
std
xor
jmp
nop
inc
in
and
jg
fisttpl
je
push
fdivl
movsb
ret
das
add
ja
pop
mov
mov
mov
nop
in
inc
push
data16
loope
jg
mov
mov
lea
push
fidivrl
push
fisubrs
pop
sub
dec
cli
aad
popa
xchg
ljmp
lcall
lret
add
cli
cld
add
pop
aam
test
cli
insb
mov
push
mov
outsl
cmp
test
test
test
fsubl
rorb
addb
incl
xor
fstps
mov
mov
mov
add
sti
addr16
ds
outsl
shr
xchg
dec
shll
popa
push
inc
popa
inc
jbe
add
mov
aam
jmp
lret
jne
add
xchg
mov
cmpsb
push
lcall
pop
fs
scas
scas
inc
out
stos
dec
adc
scas
cli
in
jns
jg
cmp
fwait
inc
adc
pop
cmp
jne
and
call
xor
in
adc
es
arpl
xchg
aaa
std
lcall
cli
or
add
rcll
aad
push
pop
jmp
jle
movsl
scas
mov
and
ds
sub
test
es
sbbb
addl
ds
test
pop
leave
jbe
cmp
add
ja
mov
push
jo
mov
rcrb
in
fcomip
ljmp
mov
mov
lcall
int3
sub
xor
sub
sub
xchg
call
mov
mov
scas
mov
add
sti
adc
xchg
cwtl
jl
xchg
cmp
inc
repz
dec
push
inc
inc
cmp
shlb
icebp
mov
jae
imul
xchg
sar
decl
inc
jbe
xchg
lods
int
xlat
loope
pop
adc
inc
ss
scas
into
movsl
dec
add
dec
lcall
pushl
orb
lret
push
adc
gs
hlt
push
mov
into
in
and
lcall
nop
and
cmpsb
xchg
pop
rorl
xor
bound
xchg
pushf
push
and
dec
cmpsb
mov
mov
lret
test
pushf
sbb
lock
jmp
popf
loop
jp
lahf
jmp
mov
fistps
pusha
popa
test
lods
fldl
cmc
fwait
xor
or
in
sbb
add
test
dec
xor
adc
cld
jp
mov
jmp
jmp
adc
or
xchg
add
call
push
inc
jns
jl
push
mov
adc
scas
fsubrs
push
lcall
xor
bnd
arpl
jg
icebp
clc
push
mov
dec
cmp
lds
lahf
mov
iret
andb
add
mov
add
and
inc
in
lods
sub
ljmp
negb
pop
icebp
ljmp
jle
inc
jp
push
or
popl
fs
pop
aad
sti
mov
and
enter
call
mov
push
dec
mov
inc
cmc
push
movsl
movsb
cmpsb
int
cltd
add
or
mov
push
scas
adc
xor
cmp
xchg
aas
ja
and
in
cmp
or
iret
in
inc
insl
push
daa
shl
add
sahf
jbe
sbb
aaa
mov
decl
pop
in
or
add
fadd
or
lret
cmp
cmp
test
insl
sbb
dec
inc
add
popa
rcr
cmc
stc
jle
imul
idivl
in
adc
inc
daa
sti
mov
lcall
imul
cmpsl
fnstenv
enter
ja
push
mov
stos
aaa
lock
out
cmpsl
inc
mov
iret
jne
cmp
xchg
shlb
fistpl
adc
insl
and
jl
bound
cmpsb
and
push
adc
je
xchg
cmp
pop
inc
dec
popa
and
incl
xchg
xor
test
or
add
out
lret
cs
inc
jge
cli
ljmp
or
lret
out
adc
push
insb
ljmp
out
cli
fwait
ds
jge
mov
iret
inc
dec
test
and
lock
add
jge
fucom
or
inc
inc
dec
into
repz
pop
nop
idiv
cli
push
out
enter
jecxz
call
jg
mov
stos
dec
push
popa
aam
mov
aam
fsubl
inc
jne
jp
jge
pop
cmp
in
xchg
aad
adc
mov
cmp
stos
mov
fmuls
pop
test
decl
jg
adc
jge
push
mov
dec
in
jle
mov
xor
ljmp
ret
adc
test
jecxz
jae
insb
xchg
loope
xchg
mov
cld
mov
popa
fsubr
aam
xchg
loope
and
adc
cmp
std
test
imul
lcall
mov
mov
sbb
call
mov
movsb
mov
fs
ficoml
and
ljmp
ljmp
ljmp
mov
and
rorb
outsl
push
imul
loop
incl
sbb
adc
fcmovu
rorb
sub
push
ljmp
call
pop
lods
adc
or
adc
xchg
movsb
cmp
fnstsw
sub
dec
xchg
int
into
scas
sahf
pop
cmpsl
xor
mov
sti
imul
ret
pushl
jb
xchg
icebp
inc
cmp
push
pop
loop
xor
cmp
lcall
mov
jg
es
jmp
jbe
into
fsubp
data16
std
and
push
xor
xchg
mov
pop
test
scas
xchg
sub
mov
xchg
in
movb
dec
sbb
pop
cs
loope
jbe
enter
mov
mov
sbb
sub
mov
movsl
out
dec
dec
add
xchg
mov
inc
outsb
jb
out
je
aas
or
or
aaa
lds
test
lods
gs
mov
adc
fdivr
movsl
cltd
jbe
jbe
mov
or
outsl
jmp
jns
int
adc
adc
xor
inc
mov
adc
fcomip
push
xchg
cmc
pop
out
push
les
cmp
lahf
and
jle
icebp
loopne
ds
dec
push
cmp
pop
std
rol
cmp
push
sahf
xchg
sub
imul
ret
inc
push
in
dec
mov
or
ss
scas
fiaddl
cs
cli
jmp
out
cli
pushl
jno
subb
pop
adc
mov
jo
jb
in
mov
push
rcl
inc
mov
cmp
sub
incl
enter
jecxz
imul
mov
shlb
fildl
call
cmp
cmp
and
fistpl
push
mov
cmp
outsl
mov
aad
idivl
lcall
repnz
mov
jmp
mov
jle
pop
mov
leave
lock
xor
pushl
pop
movsl
es
mov
lods
leave
das
lret
lock
fbstp
scas
movb
dec
lcall
cmpb
icebp
mov
and
ljmp
adc
call
mov
or
ficompl
fdivrs
jecxz
sbb
ljmp
and
testb
cs
daa
add
push
xchg
add
data16
pushf
jg
leave
xor
imul
ljmp
ud0
decl
lret
frstor
sbb
inc
das
dec
in
aam
aaa
xor
push
xchg
ds
call
stc
out
sahf
push
movsb
inc
ret
jno
cmpb
cwtl
insb
nop
sbb
mov
inc
notl
cmc
mov
sub
ljmp
das
hlt
adc
jmp
ret
movsb
mov
fdiv
cmp
dec
ljmp
aaa
pop
mov
decl
test
loope
test
push
jg
cs
icebp
mov
and
sbb
jb
decl
inc
sbb
or
js
mov
ds
loopne
or
ja
mov
add
mov
xchg
mov
mov
jmp
jp
hlt
dec
lds
imul
fwait
sbb
pushl
mov
fistpl
subl
push
jmp
xor
pop
cmc
cmp
jmp
dec
add
xor
mov
jmp
js
testl
jg
jmp
xchg
mov
popf
fdivrl
int3
push
jge
jg
or
in
dec
adc
imul
pushl
sub
dec
jno
jl
mov
je
stc
mov
daa
lcall
icebp
add
stc
jp
dec
lods
mov
sub
imul
push
scas
loopne
mov
sub
xor
insl
add
inc
adc
inc
sahf
xor
push
jne
add
cmc
subl
add
pushf
aaa
xchg
outsl
cli
incl
cmp
mov
push
mov
lret
mov
test
mov
jecxz
cmpl
mov
jle
xor
mov
outsb
iret
repz
fdivr
lcall
inc
or
testb
mov
sbbl
lods
imul
sti
nop
xor
dec
stos
and
pop
inc
fdivr
mov
mov
add
out
jne
jbe
xor
sbb
xor
ja
inc
clc
jmp
outsl
xor
fldl
jge
lahf
xlat
stos
daa
inc
sub
inc
popa
out
clc
and
inc
les
idiv
fnstcw
shlb
cmp
xlat
jg
and
sbb
jmp
xlat
insb
push
push
gs
or
addb
test
push
std
jl
std
mov
jns
cmp
push
jle
push
add
ret
xor
inc
push
ja
pushl
mov
cltd
cmp
repz
add
or
int3
push
push
pop
sub
lcall
xor
or
xchg
push
cli
dec
scas
dec
push
sbb
ret
adc
pop
inc
enter
call
mov
int3
test
pop
add
das
mov
test
fnstsw
adc
lcall
decl
fwait
outsb
cmpl
jl
jnp
pushf
jge
cmp
das
lcall
inc
scas
cli
pop
loopne
lcall
adc
or
ret
gs
jo
arpl
dec
or
call
in
xchg
push
in
xchg
pop
inc
jo
sub
stos
call
lcall
sti
call
mov
jae
int
cmp
pop
test
jecxz
pop
cltd
imul
mov
rorb
fucomp
jmp
inc
push
jnp
fwait
sbb
jg
push
or
and
movsb
ss
adc
mov
out
mov
jno
ljmp
cmp
in
fsubrs
xor
es
mov
out
xchg
aas
cwtl
xor
jno
inc
mov
jmp
sbb
pop
xorl
add
cld
sbb
cli
adc
pop
sbb
jmp
div
cltd
aaa
sub
cmpl
jo
sar
test
incl
jp
lods
sub
mov
sbb
sbb
ljmp
xchg
js
xchg
inc
fnsave
cmpsb
jno
bt
repnz
aas
pop
fcoml
insb
and
mov
cwtl
fdivrs
cwtl
call
xor
pop
xchg
jbe
dec
filds
dec
xor
push
mov
incl
dec
push
adcb
lock
insl
outsl
shlb
shll
sbb
mov
leave
mov
jg
out
push
mov
xchg
aam
sbb
ljmp
stc
imul
or
pop
imul
inc
or
cmp
in
daa
pop
cmp
call
mov
jmp
stos
inc
stos
xor
sub
test
call
pop
ficoml
movb
lahf
dec
sar
xor
sbbb
add
ljmp
fbld
sub
ljmp
sbb
lds
dec
das
in
dec
pusha
jo
fcoml
push
cs
mov
sbb
psubsb
sahf
aam
test
je
mov
in
jmp
mov
mov
shll
shrl
or
and
mov
xchg
xor
mov
leave
jb
ficomps
pop
dec
push
stos
test
jns
call
outsl
faddl
insl
arpl
dec
jne
pop
rorb
lock
ljmp
and
movhps
xchg
out
sbb
bnd
lcall
xor
sbb
inc
cmp
cmp
clc
xchg
mov
cwtl
fwait
mov
dec
add
mov
push
aas
mov
out
add
or
loop
fldl2t
incl
cmp
inc
push
stos
mov
ret
sbb
ja
xor
xor
sub
rorb
lea
sarb
sub
and
dec
repz
aam
cmp
sub
icebp
xorl
push
xchg
inc
aad
fs
fcomp
jp
pop
jp
and
mov
add
or
cs
js
cmp
cmpsl
andl
pop
sarb
negl
mov
xor
aad
push
add
jp
mov
scas
sahf
pop
incl
pop
sbb
or
sbb
fisubrl
dec
mov
push
push
filds
cld
mov
jle
lods
add
dec
jbe
push
addr16
push
cltd
pop
andl
cmpsb
mov
adc
push
push
popa
daa
dec
lret
adc
nop
leave
push
fmull
or
mov
cmpb
pushf
in
cwtl
jge
cmp
lahf
inc
je
clc
pushl
sub
outsl
push
rolb
dec
xchg
push
aad
jle,pn
pushl
fwait
sbb
rol
inc
mov
in
jmp
std
clc
out
shl
arpl
ds
adc
ljmp
inc
pusha
inc
push
in
xchg
cmp
sub
les
xchg
repz
cmp
dec
gs
shl
ljmp
xlat
imul
loop
cmp
or
inc
inc
les
push
lods
dec
out
in
fisttpll
push
int3
cmp
incl
mov
aaa
rcrl
icebp
sub
fdiv
es
jne
daa
push
sub
lcall
hlt
xchg
push
mov
cmp
jecxz
sti
and
mov
dec
dec
cld
mov
leave
xor
xlat
insb
push
pusha
push
sarb
xchg
pop
add
xchg
xchg
imul
cmpsb
icebp
in
jl
mov
pusha
mov
mov
call
xor
in
add
push
add
and
mov
call
movsb
xchg
jp
cmp
repz
out
shl
jb
xor
jbe
pop
shlb
rcrl
push
je
in
xchg
into
xchg
stc
sub
lods
jno
jp
sub
mov
rclb
leave
xchg
sbb
ljmp
and
dec
mov
jl
jns
push
mov
inc
outsl
dec
push
fildll
in
dec
sbb
idivl
loopne
dec
pop
adc
movsb
jg
das
sub
inc
sub
push
pop
mov
nop
sub
jecxz
jmp
pop
or
jne
mov
pop
mov
mov
decl
pop
out
dec
fidivl
or
inc
mov
cmp
clc
hlt
mov
outsl
and
push
test
pop
ljmp
filds
sub
mov
jbe
clc
cmp
push
lret
es
stc
not
std
ja
dec
xchg
cmp
pop
or
pop
fistpl
shrl
xchg
popa
inc
call
lahf
bound
pop
lock
das
mov
incl
jle
adc
sbb
cmc
mov
decl
sti
lods
add
adcb
loop
shr
and
pop
dec
jmp
sbb
mov
scas
ficomps
mov
stos
hlt
pusha
mov
mov
push
inc
pop
push
in
mov
jmp
dec
and
push
repnz
and
cmp
inc
inc
in
xchg
inc
jnp
add
lcall
test
aas
push
test
mov
push
repnz
pop
fwait
inc
mov
lret
dec
push
dec
xchg
call
xchg
aas
imul
mov
ret
pop
mul
sub
xor
nop
cli
imul
stos
add
and
lcall
jae
ds
pop
shlb
or
into
sbb
inc
sbb
jle
call
xchg
jb
leave
xchg
jg
lods
mov
out
mov
jecxz
mov
or
fstl
hlt
jge
test
ret
jae
popa
add
outsb
mov
lcall
mov
pop
inc
sbb
ficoms
sub
or
push
mov
sub
push
je
pop
jmp
out
mov
rolb
lahf
stos
sbb
add
dec
mov
jbe
gs
rclb
cmc
mov
addl
movl
sub
push
call
loop
cmpsl
push
jge
iret
pop
dec
dec
adc
xchg
and
repz
inc
clc
es
jo
fstl
pushl
aaa
xchg
cmpsb
loopne
jns
ss
in
pop
notb
test
mov
lcall
pop
test
je
hlt
mov
push
subb
scas
jmp
cmp
mov
add
je
add
pop
pop
sbb
cltd
out
add
into
and
incl
mov
dec
repz
mov
and
sti
and
xchg
mov
ljmp
and
xchg
stc
aad
lahf
adc
mov
pop
jb
adc
mov
icebp
sub
ljmp
xchg
or
dec
shll
orl
or
xchg
mov
add
out
outsb
jl
inc
lea
cmpsl
imul
mov
push
test
call
daa
arpl
xchg
xlat
repz
mov
lods
push
cs
push
int
lret
mov
shl
push
jb
dec
mov
inc
xor
cld
popf
mov
test
sub
movsb
lcall
das
divl
xor
orb
popf
imul
sub
mov
jg
inc
jp
jle
cwtl
cltd
fists
dec
inc
inc
popf
lret
outsb
icebp
cwtl
test
sbb
repnz
mov
ss
xlat
pushl
scas
xchg
mov
jmp
lea
loope
mov
jnp
dec
inc
cmp
sub
lods
dec
jmp
cwtl
lcall
stc
add
mov
xor
sbb
mov
adc
push
test
jg
push
in
fiadds
sbb
insl
pushf
jg
jae
pop
aam
loop
or
outsl
cmp
ljmp
adc
adc
sbb
xchg
call
shlb
pushl
js
ud2
pop
lahf
loope
hlt
sar
cmpsl
pop
testl
inc
xchg
popf
daa
add
call
or
cmpsb
mov
insb
push
and
insb
test
cs
mov
pushl
mov
mov
outsb
ds
ljmp
cmp
mov
inc
daa
fwait
movsb
arpl
incl
sub
mov
int3
cmpsl
mov
pop
jl
mov
bound
jecxz
out
and
fisttps
add
imul
sbbl
in
cmp
pop
out
sbb
adc
jmp
or
in
sbbl
aas
mov
jno
adc
xor
lcall
leave
fcoml
lea
jecxz
sub
xor
ss
js
inc
aam
inc
arpl
lahf
inc
and
dec
mov
inc
test
xchg
aaa
fmull
sub
jle
outsb
aam
jnp
pushf
xor
rorl
aaa
cmp
cmp
jne
mov
je
aas
ror
cmp
jle
jp
mov
test
lret
pushl
add
push
test
pop
sub
cmp
lods
sti
jno
ljmp
loope
jmp
sub
push
xchg
jecxz
sub
testl
in
test
and
xchg
pop
ja
inc
xor
mov
fs
lcall
ja
sbb
rcll
xchg
xor
mov
ljmp
pop
lock
pop
jae
jecxz
jl
push
fcmove
leave
jl
mov
incl
inc
inc
push
aaa
adcb
int
cld
out
xchg
das
or
jecxz
aaa
or
sar
insl
inc
test
icebp
out
push
adc
cmp
incl
ret
insl
mov
mov
aam
mov
xor
in
ret
push
hlt
lcall
push
adc
xchg
sbb
scas
fcoms
jp
inc
fs
lcall
push
jg
dec
cmp
pop
and
sbb
outsb
mov
jecxz
push
repz
cltd
addr16
cli
pop
xor
jmp
insl
push
lret
xchg
push
shlb
stos
test
rcl
xor
push
test
pop
cmpsb
xor
test
jg
lcall
jp
pop
xchg
jb
test
cs
test
rorb
incl
mov
test
outsb
jbe
stos
sarb
ret
in
into
and
cmp
pusha
scas
push
call
xor
mov
out
movsb
movsl
sub
or
cmp
loopne
lcall
jge
mov
imul
pop
arpl
ljmp
push
cwtl
enter
iret
lock
pushf
ret
push
cmp
adc
pop
jae
incl
pop
imul
fsubrl
adc
mov
adc
cld
lret
cwtl
cwtl
aad
popf
cld
pushl
outsb
ja
or
imul
shlb
dec
js
xor
or
ss
imul
add
dec
xchg
in
das
sar
stos
push
mov
mov
mov
shlb
std
fwait
call
sbb
adc
sahf
xor
jp
in
inc
adc
in
push
and
ret
aas
mov
fcomip
les
fldl
es
pop
push
and
sub
xor
mov
cmp
call
out
ret
jmp
test
pop
popa
cmpsl
mov
or
mov
xchg
inc
sbb
pshufw
cli
jns
and
mov
in
dec
mov
shlb
xlat
mov
iret
es
adc
adc
xchg
ror
stos
xor
xchg
and
mov
out
clc
push
jne
mov
rorb
cli
lds
ss
mov
adc
std
xchg
fisttpl
xor
fcomip
iret
dec
in
jo
pop
mov
jge
cmp
and
aam
xchg
mov
fwait
decb
int3
mov
fs
ficompl
mov
mov
sbb
mov
dec
movsb
sub
add
in
shrb
jb
rcrb
dec
lods
mov
jbe
jle
scas
lock
call
insl
fisubrl
dec
or
mov
add
push
pop
xchg
jmp
mov
lret
cltd
nop
cltd
stc
push
lock
nop
pop
stos
sbb
sbb
ja
jg
and
rolb
pop
cmp
divl
lcall
sarl
or
mov
ret
cli
js
jle
out
dec
enter
lcall
or
add
jecxz
push
cmc
pop
add
sahf
xchg
idiv
imul
jle
call
jbe
jb
int
jecxz
lds
xor
sti
sub
add
aad
mov
mov
mov
mov
pop
jp
jl
mov
movsb
sbb
aam
dec
add
xchg
data16
into
decl
lods
cmp
hlt
divb
cmp
or
in
aas
mov
dec
and
pop
lret
clc
xorb
add
mov
sub
mov
movsl
in
dec
xor
mov
sub
cmpsb
pop
jle
xor
mov
jp
adc
in
ljmp
jge
fistl
psubb
ljmp
inc
frstor
sbb
leave
inc
jp
mov
lcall
jmp
cmpsl
rcll
xchg
xor
fists
xlat
bound
sti
push
mov
loop
jecxz
jb
xor
or
fisttps
jge
pop
cmp
jge
xchg
adc
rclb
sti
decl
push
push
aad
fwait
mov
push
pop
out
pop
mov
aas
cmp
jmp
lods
mov
cmp
adc
jmp
add
stos
mov
incl
or
jnp
ja
inc
jbe
xchg
cmp
cmpsl
jne
mov
adc
pushf
or
ljmp
les
aas
test
ds
push
fs
fndisi(8087
xchg
rcrl
loop
fsubrp
idivb
fwait
mov
adc
fisubs
mov
mov
or
and
mov
dec
ja
test
or
adc
or
cli
fimuls
fldl
sub
aad
adc
add
outsb
push
jg
pop
into
lea
adc
rcrb
std
inc
push
mov
mov
xor
out
std
pushl
aaa
mov
dec
pop
sbb
ja
mov
fsin
call
pop
xchg
mov
loopne
jae
pop
mov
xchg
sar
push
jns
xchg
mov
mov
ljmp
data16
clc
test
add
mov
and
inc
lock
dec
adc
mov
and
gs
inc
inc
dec
xor
push
mov
loop
cmp
jp
sahf
add
sbbl
pushl
ret
mov
lea
addr16
sbb
lock
cmp
stos
xor
cmp
ljmp
mov
aad
mov
sbb
xchg
mov
push
push
jns
adc
jg
mov
pusha
rclb
add
decl
mov
xor
fwait
rorl
sbb
loope
fcomip
call
jne
andl
rorb
fwait
cmpsb
repz
adc
mov
incl
fildll
popf
xchg
pop
test
or
jle
push
pop
lcall
add
jmp
inc
dec
xchg
inc
mov
sarb
js
mov
xchg
mov
repnz
into
push
jmp
cmp
jmp
and
push
push
mov
inc
fmull
lds
insl
and
jbe
dec
jmp
jb
pop
mov
insb
xor
imul
mov
in
test
aam
xor
cmp
aam
sbb
inc
cmp
push
int
movsl
xchg
test
dec
sub
pop
or
mov
xorl
shr
add
or
mov
jg
sarl
clc
xlat
cmc
mov
rcll
or
cmp
mov
add
sbbb
mov
fimull
push
ljmp
wbinvd
mov
add
xchg
push
loopne
mov
add
xchg
fisubl
int3
lods
outsl
sbb
fsubs
aas
add
pop
xadd
fimull
mov
and
call
sub
dec
in
daa
stos
ror
jo
and
xor
addr16
dec
cmpsl
mov
or
add
pop
call
cld
mov
aas
inc
jge
cld
jl
inc
lock
int3
ficompl
jne
xchg
xchg
fdivs
sub
mov
pop
cmp
pop
push
mov
sub
mov
mov
inc
jmp
in
or
jle
imul
pop
test
push
in
jo
fistpll
inc
test
call
xchg
dec
inc
dec
dec
inc
test
lods
sbb
mov
jb
pop
push
pop
push
fwait
movsl
iret
mov
jnp
fildl
dec
push
lret
sbb
daa
push
outsb
in
inc
cli
sub
incl
mov
xchg
push
jge
sbb
dec
inc
inc
mov
mov
or
sbb
mov
in
dec
mov
loope
aam
xchg
push
sti
sbb
incl
mov
repz
cld
dec
das
lea
loop
in
xchg
push
pop
xor
ljmp
cli
lret
fwait
dec
add
fcmovne
test
sbb
mov
jg
xchg
clc
imul
iret
inc
mov
ljmp
into
adc
pop
movsl
dec
data16
daa
xor
lcall
mov
push
sbb
ljmp
lock
cmp
clc
jg
shl
dec
test
and
aad
pop
mov
and
stc
xchg
jmp
js
jecxz
xchg
pop
or
popf
cli
sahf
push
xor
cmpsb
jne
mov
xlat
into
std
sahf
lcall
adc
das
loopne
jb
cltd
mov
loop
push
and
sbb
mov
call
js
mov
xchg
cmp
das
pop
push
ljmp
aaa
scas
fwait
cwtl
addr16
decl
or
aad
es
jo
mov
jmp
shrl
aas
lret
inc
lods
mov
xchg
ret
or
imulb
cmp
fisttps
loop
or
inc
mov
fmuls
lods
cmc
add
jg
pop
xchg
push
aaa
in
pop
sbb
repnz
out
bswap
dec
adc
adc
loop
jmp
add
test
push
js
mov
cli
sbb
pop
xor
cli
ljmp
sbb
push
movsl
cltd
in
add
ljmp
fstpt
xchg
mov
popf
repnz
stos
sbb
push
clc
decl
jno
sub
int3
cs
repnz
call
adc
adc
xchg
sbb
ljmp
ds
call
push
fsubr
add
mov
aad
clc
mov
in
dec
and
inc
and
mov
in
pop
adc
in
pushl
ficompl
mov
push
xor
mov
loope
repnz
jmp
push
mov
out
add
loop
jae
pushl
pushf
out
mov
adc
es
pop
xchg
sar
lcall
popf
mov
cmp
mov
in
mov
add
mov
out
ds
mov
cmp
jg
sub
inc
adc
lods
mov
sub
pop
or
adc
add
push
dec
xchg
dec
cmp
fildll
xlat
std
mov
and
sbbl
in
pop
pop
and
fs
scas
push
mov
pop
add
call
xchg
mov
out
mov
ret
shlb
mov
lcall
and
sbb
and
add
mov
xor
or
pop
std
call
xchg
sub
sbb
pop
imul
mov
or
hlt
jg
leave
adc
pop
jns
cmc
inc
jge
dec
rcl
adc
xchg
adc
pushf
pop
into
pop
pop
lret
lock
lcall
jmp
js
call
mov
xor
ret
mov
rolb
shl
jae
lods
mov
pop
xor
pop
jl
rcll
push
cld
incl
out
dec
test
push
inc
nop
sahf
jg
pop
dec
fsubrl
xchg
test
lock
incl
enter
xchg
shlb
adc
in
lret
xchg
or
jno
mov
cmc
and
ljmp
add
cmpl
div
inc
xor
std
jecxz
mov
xchg
or
out
cmpsb
scas
aaa
lret
icebp
outsl
and
mov
inc
cld
nop
mov
fwait
push
incl
cmpsb
outsl
jp
sarl
dec
cmp
push
lods
mov
and
dec
inc
xor
jo
lret
call
dec
rorl
xchg
pop
das
sub
sahf
scas
loope
stos
in
mov
cmp
or
sub
call
pop
in
dec
test
sub
jae
das
jg
sub
fisubrl
out
cmp
jle
adcb
sub
call
imul
cs
push
popa
stos
ja
ret
cs
insl
shlb
lcall
fcomip
shl
push
cmp
cwtl
inc
jp
lock
lods
jne
ss
into
dec
aaa
adc
aam
xor
mov
sbb
mov
lcall
mov
inc
sbb
std
pop
das
pop
hlt
jo
fisubs
xchg
cltd
jge
push
es
aas
cltd
sub
lcall
cld
mov
inc
and
in
dec
mov
int3
repnz
lds
cld
call
pop
aam
rorb
hlt
push
lret
jae
fdivl
lcall
jecxz
mov
sbb
inc
add
loope
jo
in
mov
icebp
lcall
jbe
scas
lcall
cmp
inc
das
dec
out
addr16
add
fildll
ror
pop
mov
ja
fdivr
xor
decl
imul
sbb
mov
push
jae
push
pop
loopne
mov
cmp
adc
lret
fildll
lcall
and
fldenv
inc
pop
or
mov
push
push
add
lods
fnstcw
xchg
incl
aad
pop
add
andl
adc
mov
decl
mov
adc
fnstenv
dec
mov
push
pop
rorl
sub
xor
pusha
mov
mov
mov
push
mov
add
jne
clc
xchg
push
cs
sub
lods
dec
outsl
inc
out
pushf
jl
fnsave
inc
pop
loopne
or
push
dec
stc
xchg
jbe
xor
fisubl
in
enter
insl
out
sub
ds
mov
and
lcall
xchg
mov
incl
cmpsb
push
pop
popf
in
sti
int
inc
add
adc
outsl
and
dec
mov
cld
das
push
ret
mov
insb
ljmp
fldenv
and
pop
xor
push
lock
xchg
mov
sbb
push
xchg
icebp
fwait
daa
cwtl
out
pop
push
pop
in
notb
push
dec
lods
in
call
sbb
mov
pop
shll
jne
sbb
push
das
cmc
xchg
sbb
and
arpl
out
sub
and
clc
orl
jecxz
sbb
aas
push
rclb
ljmp
test
xorl
xchg
dec
shlb
jmp
outsl
and
add
in
test
add
inc
jmp
jmp
xor
daa
jle
push
pushf
mov
arpl
adc
jge
gs
pop
jno
sbb
call
cmp
pop
movsb
add
imul
and
mov
push
xchg
popa
jg
fwait
into
das
push
sub
or
pushf
inc
dec
call
inc
xchg
bound
pop
mov
repz
movsl
into
sbb
into
pop
daa
dec
les
call
sub
icebp
js
mov
lea
mov
jp
aaa
shl
pushf
clc
inc
jl
jbe
add
test
cld
call
xor
ljmp
adc
ljmp
mov
jbe
xchg
cwtl
aad
int
mov
cmp
xlat
mov
cli
aam
inc
push
jmp
mov
ljmp
gs
js
mov
xlat
sub
ss
xor
jnp
cmp
hlt
pop
xchg
pop
lds
pushl
ja
mov
leave
aas
adc
out
cmpsb
test
outsl
clc
jg
pop
popa
fdivrl
lock
inc
and
lret
mov
int
cs
adc
mov
decl
sbb
sbb
jg
cmpb
xchg
out
stc
jge
mov
mov
incl
xchg
popa
or
sub
or
jl
xchg
mov
fwait
ljmp
mov
fidivrs
push
sbb
imul
xor
jp
jne
jmp
xchg
sarb
inc
xchg
mov
cmp
stc
in
and
insl
outsb
out
repz
jb
mov
cmpl
mov
jnp
rclb
jecxz
xchg
mov
cmc
cmpsl
cmp
in
push
mov
vpunpckhqdq
jo
hlt
dec
ficompl
add
pop
std
call
xchg
pop
out
jo
shrb
jo
mov
sbb
mov
pop
sbb
sar
mov
xor
les
inc
outsl
sub
xchg
add
mov
mov
lcall
das
or
nop
or
repz
out
dec
leave
inc
scas
call
push
pop
sti
mul
cmp
sti
dec
xchg
xor
sub
or
dec
xchg
popf
dec
outsl
add
out
call
jp
adcb
jp
pop
sbb
push
negl
mov
es
incl
popf
into
pop
mov
mov
add
ret
mov
sbb
xchg
ret
jp
ret
decl
addr16
mov
or
cmp
push
int3
in
fistps
inc
jg
and
or
xchg
xor
sub
fidivl
pop
mov
addr16
aad
dec
lahf
pop
mov
jmp
jg
sbb
jecxz
and
ja
push
repnz
daa
repnz
add
out
cmpsl
out
xor
xor
xor
add
ret
outsb
mov
fcomip
scas
arpl
jb
rcl
dec
movsb
or
or
push
addr16
mov
rcrb
xlat
adc
push
adc
mov
push
incl
scas
adc
sbb
add
inc
adc
fcomip
push
setle
lcall
pop
dec
repz
incl
jns
jnp
and
sub
aam
adc
lahf
cmp
jge
mov
mov
pushl
sbb
test
add
mov
mov
and
clc
mov
mov
imul
adc
ss
pop
loopne,pn
mov
scas
mov
pop
stos
pusha
addr16
pop
je
dec
mov
mov
test
repnz
mov
dec
jns
mov
aam
ds
sub
pusha
stc
inc
movsl
hlt
call
loopne
shrb
mov
call
xchg
sbb
fcoml
shll
jne
dec
enter
or
cltd
mov
call
hlt
push
sbb
pminub
push
out
daa
mulb
testb
rcll
xchg
add
nop
bound
std
inc
jle
xor
sbb
leave
fsubrs
cmp
incl
push
jae
cmp
scas
mov
sub
mov
mov
decl
out
and
lds
rol
add
inc
ret
jecxz
pushl
add
inc
shll
pop
je
adc
scas
adc
fsts
decl
int3
aaa
imul
ljmp
jmp
pop
mov
sti
inc
data16
pop
xlat
fdivs
sbb
push
inc
jne
xlat
mov
frstor
sub
lret
lret
jno
sbb
cs
jp
testl
rcl
repz
sar
pop
mov
xor
das
inc
cmp
cli
in
loop
cld
xor
lahf
inc
cmp
decl
rcll
jnp
dec
mov
and
mov
inc
pop
add
lcall
movsl
fsubrs
arpl
push
pop
lock
cmp
push
jl
push
push
and
mov
popa
jnp
push
jns
dec
cmp
out
fmul
push
stos
pop
xor
in
lods
fisubrs
cmova
incl
lds
sbbl
mov
jnp
ret
inc
testb
aas
add
lods
loope
mov
stc
sar
jmp
lea
in
mov
call
cmpsb
pop
outsb
test
jle
sbb
add
cld
call
mov
movsl
shl
push
dec
scas
adc
fsub
pop
fcomp
outsl
scas
jg
test
dec
outsb
aam
out
call
das
sub
push
xor
push
ret
dec
xor
or
pmaxub
and
scas
xchg
pop
or
push
les
push
test
call
mov
pop
dec
xchg
rclb
mov
push
fidivl
decl
mov
mov
inc
int
and
lcall
pop
sub
cwtl
cltd
movsl
pop
xchg
fsubrs
add
cmc
adc
jmp
loopne
inc
loope
scas
jb
daa
ljmp
jmp
sbb
xchg
loopne
push
sarb
callw
dec
lea
movsl
cwtl
xchg
pop
mov
mov
cmp
jmp
gs
cmp
xchg
xor
mov
stos
fxch
test
faddp
pop
inc
insl
pushl
cld
jmp
stos
test
pop
mov
xchg
lds
aas
cmp
fwait
imul
loopne
adc
sbb
sub
sti
sub
jmp
cmpsb
movsb
fwait
jbe
out
mov
sub
cmp
sarl
xchg
sbb
sub
inc
cmpsb
nop
lret
mov
inc
jg
nop
mov
outsl
les
rol
out
jae
dec
ss
cmp
andb
fmull
xchg
pusha
sbb
mov
imul
decl
roll
cmp
scas
in
bound
cmpb
jle
and
sarb
mov
mov
pop
cli
sub
mov
mov
nop
std
rcrl
ljmp
xchg
cld
sub
add
xor
mov
cmp
mov
cmp
cmp
not
sbbl
sbbb
inc
ret
repz
dec
in
scas
cli
mov
les
add
sbb
add
mov
aad
sbb
or
je
sbb
addr16
add
roll
or
push
rcll
shlb
pusha
push
push
sahf
cmp
mov
lret
ss
push
push
and
mov
daa
pop
cmp
daa
push
movsl
dec
in
sbb
mov
das
fwait
add
call
sub
loopne
cli
data16
adc
loop
pop
sbb
testl
lcall
push
mov
rcll
enter
divb
cli
pop
add
pop
mov
cld
call
jg
push
outsb
and
cltd
cwtl
les
jb
or
gs
and
pushl
mov
adc
popa
repz
popa
js
es
xor
in
cmp
xchg
sub
scas
mov
incl
ljmp
cli
pop
jl
cmpsb
xchg
mov
iret
dec
jno
out
decl
xchg
jmp
in
add
xor
int
pushf
cmp
jae
add
in
enter
js
jge
out
shlb
in
mov
jmp
stc
jle
mov
fidivrl
jnp
aaa
add
or
loop
mov
test
mov
test
leave
loope
popa
push
push
imul
or
lret
sbb
jmp
jp
or
mov
cld
push
sbb
adc
mov
xor
lcall
mov
dec
lods
pop
loope
ljmp
dec
mov
enter
or
add
adc
push
cmpsb
cmpsb
mov
scas
xchg
incl
dec
mov
imul
cmpsl
lret
adc
iret
in
ljmp
pop
adc
or
mov
dec
enter
decl
xor
sub
mov
sub
pop
ss
and
add
adc
pop
dec
popf
cmp
ret
lcall
imul
xchg
inc
pop
das
jp
pop
and
inc
lcall
outsl
inc
fstpl
andb
and
outsl
push
lcall
mov
fldcw
orb
test
inc
repnz
sub
jno
iret
mov
in
inc
and
loopne
xor
decl
call
push
jo
or
pop
mov
test
sub
jle
pushf
sbb
popa
fldenv
fdivl
adc
addl
cmpb
jb
xchg
jecxz
cmp
aad
mov
push
pop
lahf
jo
cmp
cmpsb
fdivp
out
leave
cmpsl
daa
push
inc
ret
ljmp
outsb
xchg
leave
mov
loope
sbb
cmpsl
xchg
sub
into
jg
addl
int
pop
jae
stc
sub
rcrl
jnp
das
jno
out
dec
movsb
xor
popf
in
jne
mov
dec
push
cs
jg
mov
pop
jg
and
inc
pop
adc
jbe
fnstenv
add
sub
adc
dec
pop
scas
or
sub
pop
mov
out
xor
jg
imul
sbb
les
clc
add
adc
jmp
mov
out
mov
addr16
mov
imulb
and
lcall
jmp
call
inc
scas
cwtl
jbe
jle
xchg
inc
xor
add
mov
push
sbb
inc
std
cli
pusha
bswap
adc
jecxz
mov
adc
out
js
pop
scas
sti
jmp
ret
lcall
push
les
push
push
mov
dec
jb
mov
fsub
dec
cmp
lcall
sahf
addr16
loopne
sub
in
aaa
jmp
mov
sbb
inc
outsb
insl
jle
adc
inc
data16
enter
adc
cmpsl
dec
aad
mov
iret
mov
fists
test
and
and
js
dec
mov
adc
mov
hlt
pop
push
aad
ret
inc
mov
sahf
or
push
push
and
xchg
loop
jle
mov
mov
pushl
adc
cwtl
sub
testl
adc
sub
icebp
ret
mov
sbbl
push
adc
ljmp
inc
adc
dec
lcall
std
mov
stos
cmpsl
xchg
pop
fwait
xor
sub
clc
cli
call
dec
in
popf
js
lds
leave
insb
push
das
cmp
mov
xor
pushl
add
aam
xor
add
arpl
ljmp
insb
js
cltd
xlat
test
ret
xor
shlb
sbbl
in
pop
jg
cmp
sarl
scas
aaa
hlt
call
in
push
xor
clc
add
cs
sub
inc
xor
mov
cwtl
mov
leave
jl
mov
jbe
out
pop
dec
pop
xchg
mov
xor
out
cmc
pop
aaa
mov
ret
insl
inc
and
frstor
fcmovnu
icebp
jl
dec
push
cmp
fiaddl
jnp
mov
sub
cmp
pushl
mov
and
cmp
xchg
in
fmul
adc
loopne
decl
jb
pop
xchg
fstl
inc
mov
mov
cmp
mov
adc
or
into
cmp
jno
or
insb
xor
rclb
push
add
js
jg
incl
outsb
rcrl
push
mov
fsubs
out
mov
cmp
cli
mov
pushl
and
lret
jb
mov
dec
xorb
sub
push
faddl
push
push
incl
sti
ds
popf
mov
mov
stc
dec
in
sbb
jno
jg
mov
pop
pushl
dec
mov
jae
ja
test
insl
and
sub
fldl
aaa
std
call
out
in
jno
mov
loop
jno
dec
outsb
pop
inc
data16
aas
hlt
xor
call
push
test
xchg
iret
out
subb
mov
aas
mov
or
faddl
in
decl
out
cs
imul
cmove
sarb
cwtl
ja
cld
jbe
jg
subb
jae
sub
loopne
loope
sub
decl
xor
fstp
scas
out
jno
jmp
ljmp
sub
fsubrp
adc
xlat
xor
inc
popf
xchg
push
inc
sub
hlt
mov
cmp
mov
notl
sahf
add
or
push
in
jbe
inc
push
hlt
fistpll
jle
mov
insb
inc
xchg
ss
jmp
pop
movsb
ljmp
xorl
pushf
inc
sub
lret
decl
push
into
test
andb
test
mov
push
rol
dec
fsubs
popa
jae
xor
pop
mov
js
leave
aas
in
je
das
les
call
and
or
add
cmp
mov
sbb
lcall
dec
add
mov
mov
push
mov
in
mov
jecxz
stos
jle
call
cmp
dec
lds
repnz
insl
add
pop
fnsave
aam
pusha
add
test
jge
adc
ret
add
xor
stos
inc
js
mov
shrl
jbe
call
addr16
cmp
sbb
rcrb
inc
inc
sbb
fists
or
jg
call
icebp
dec
ficompl
gs
mov
arpl
ficompl
mov
jp
add
lret
mov
inc
and
cltd
rcr
adc
aad
int
add
add
sub
sti
dec
pop
fs
fsubl
data16
out
stos
and
fildll
outsl
mov
mov
xchg
out
shrl
idiv
jmp
imulb
mov
enter
pop
mov
jnp
cs
aad
ja
call
test
out
xchg
xchg
mov
es
lock
les
in
lods
decl
push
xor
inc
lds
sbbl
fisttps
jno
incl
jae
and
stc
cmp
in
les
mov
insb
push
ljmp
or
out
sub
bound
nop
fnstsw
scas
dec
pop
or
push
out
jp
mov
mov
jbe
je
in
mov
cld
and
sub
pop
push
xor
pop
adc
rorl
int3
fdivl
pop
stos
push
repz
or
testl
add
call
out
fs
ds
pushf
pop
in
xchg
dec
imul
out
xor
mov
cmp
stos
daa
xchg
fxch
jle
daa
sbb
jmp
faddp
push
cs
cmpsl
xchg
mov
insl
xor
sub
pop
xor
call
jno
pop
rcr
mov
stos
push
scas
xchg
test
push
xchg
and
insl
lahf
jno
data16
lds
jns
pop
push
jp
mov
dec
cmpsl
push
imulb
ret
mov
cmp
cmpb
ljmp
xor
ret
mov
or
roll
mov
out
in
or
cmp
imul
sub
xchg
mov
call
inc
lret
xchg
arpl
cmpb
mov
insl
movsl
pop
jno
aad
pop
pop
out
fdivr
pushl
jl
imul
int3
mov
fsubrl
mov
sub
arpl
push
clc
cld
or
pushl
cld
int3
fdivrs
int
pop
arpl
call
dec
arpl
in
subl
jecxz,pn
sbb
pushf
jb
ja
adc
inc
std
pop
pushf
lahf
or
outsl
pop
lock
stos
cli
mov
dec
adc
pop
dec
cmc
inc
mov
push
lock
push
dec
xchg
jmp
out
push
imul
dec
icebp
ljmp
fs
fdivrl
cmp
add
mov
jae
iret
jnp
incl
popf
aam
xchg
out
dec
mov
cmpsb
scas
popf
addl
and
xor
mov
das
outsl
push
or
into
inc
push
cmc
repz
imul
cli
insl
fcomip
or
jo
in
gs
inc
ret
sbb
push
cmpsl
pop
xlat
inc
fldenv
jge
les
decl
popf
xor
out
or
cmp
mul
imul
inc
mov
jmp
aaa
push
pushl
into
or
dec
ds
inc
push
lock
and
lcall
fimuls
je
icebp
mov
mov
daa
mov
cmp
fdivr
arpl
mov
cli
adc
lods
imul
fisttps
out
jbe
test
mov
lahf
fidivs
inc
fcomip
jp
jo
fsubrs
or
loop
ret
roll
jbe
in
add
adc
enter
sar
fistps
testb
push
out
add
adc
or
xchg
xor
decl
repz
out
push
add
inc
jbe
mov
inc
int3
or
out
sbb
lcall
pop
sti
mov
push
enter
pop
xchg
imul
xchg
dec
add
fcomip
incl
or
ljmp
clc
adc
jl
jmp
not
mov
sbb
mov
adc
sbb
jge
dec
push
ljmp
fidivrs
adc
outsb
adc
imul
pop
cmpsb
loope
popa
xlat
cmp
jecxz
dec
incl
cmp
sub
ja
cmpsb
xchg
and
ret
cmp
sahf
sahf
jbe
xor
call
cmp
in
xchg
fwait
jp
fldl
xchg
pop
add
mov
jne
icebp
incl
lods
xor
xor
mov
inc
ret
inc
push
lret
sbb
or
or
nop
jg
incb
inc
adc
inc
js
fstps
ret
pop
adc
incl
int3
xchg
dec
xor
fwait
xchg
notb
adc
and
pusha
mov
dec
xor
fidivs
jle
pop
fisttpll
xchg
insb
cmp
jno
xchg
shl
mov
scas
insb
into
xor
add
pushl
lcall
pop
mov
pop
cmc
push
sub
xchg
aam
scas
insl
mov
push
mov
mov
out
jns
pusha
add
aas
mov
cltd
imul
mov
imul
clc
in
cltd
sub
lods
out
arpl
dec
dec
or
sti
and
sbbb
aam
cmp
outsw
or
pushf
adc
cmpsl
cmp
pop
loopne
ret
decl
push
fdivr
ret
jecxz
sub
repz
lcall
ret
jge
jmp
pop
imul
mov
jb
xchg
sbb
pop
dec
gs
test
iret
repnz
decl
dec
xor
cmp
xlat
pop
mov
jne
scas
dec
and
ljmp
sbb
dec
in
test
mov
xchg
mov
dec
scas
cli
ljmp
cmp
ret
dec
xor
xchg
dec
push
mov
fdiv
inc
insb
jns
imul
jg
incl
xor
movsl
stos
lea
inc
pop
xlat
fbstp
or
jmp
ret
xchg
xor
sar
and
mov
repz
ja
lret
mov
decl
and
aam
fstps
arpl
into
dec
insb
push
cwtl
decb
decl
lret
pop
inc
jo
mov
std
addr16
shl
fwait
jge
jns
enter
dec
sub
cmp
lcall
push
fwait
dec
mov
int
jo
enter
scas
mov
cmp
and
push
clc
mov
lods
icebp
mov
pop
push
mov
inc
jmp
mov
imul
adc
outsb
sub
or
sbb
lcall
mov
and
and
das
add
das
in
fldl
pushl
pop
pop
cwtl
fidivrs
stc
mov
add
cmp
bound
mov
aad
xor
call
test
in
icebp
test
sti
movsl
daa
jns
sub
incl
lret
call
and
mov
enter
sbb
fdiv
fisttpl
pop
mov
call
dec
lcall
in
sub
movl
mov
dec
fucomip
ret
mov
inc
test
sbb
inc
stos
and
inc
stc
imul
mov
sbb
mov
push
cmpsl
xchg
shlb
mov
aam
pop
insl
sbb
push
scas
mov
inc
fmuls
insb
sbb
and
das
mov
cmp
inc
arpl
inc
dec
push
mov
nop
and
xchg
loop
cmp
pop
push
jae
cmp
test
pop
and
and
in
in
pop
in
aaa
cmp
sbb
xchg
adc
sbb
jb
add
sbb
xchg
add
pushl
xlat
or
pop
jmp
and
or
outsb
fcoml
jl,pn
outsl
cld
ljmp
fs
xchg
inc
push
adc
out
gs
push
mov
cltd
cmc
jmp
int3
js
cltd
test
inc
dec
jne
imul
lret
das
add
jecxz
add
xchg
pushf
es
mov
das
andl
fiaddl
mov
bound
in
call
or
test
outsl
or
inc
decl
aam
dec
cmpsl
out
jbe
jecxz
out
push
xor
stos
xchg
xchg
push
xchg
inc
pop
decl
out
push
adc
jg
pop
mov
sbb
ljmp
sbbl
pop
mov
shrl
test
pop
bswap
pop
test
inc
mov
fcomps
or
incl
and
mov
lahf
adc
cmpsl
xchg
scas
xchg
nop
fbld
lea
mov
mov
lcall
push
and
and
loop
inc
mov
pop
dec
jle
xchg
jle
mov
addr16
shrb
mov
insb
fnstcw
mov
push
loopne
shll
mov
stos
or
outsb
cli
jge
scas
xchg
jb
std
decl
pop
shlb
scas
cmp
mov
mov
jecxz
sahf
test
lcall
mov
cmp
mov
pop
dec
sub
call
cltd
call
daa
mov
add
mov
jecxz
shl
xchg
mov
scas
popf
add
decl
in
cmp
and
cmp
inc
jae
sbb
outsb
adc
cltd
pop
cltd
mov
js
insb
popa
cmp
xorb
push
pop
push
dec
std
ljmp
lds
and
lret
repnz
lcall
mov
mov
in
mov
movsb
jbe
jno
pusha
ds
cli
or
push
pushf
or
cli
arpl
cld
push
aam
outsb
arpl
sub
bound
pop
out
mov
xor
ljmp
inc
movsb
cmp
aas
xchg
stos
pop
push
ror
je
jg
push
push
adc
mov
ljmp
dec
mov
adc
loopne
jbe
jg
les
mov
xchg
cli
sub
out
aam
jae
roll
addl
mov
repz
das
jno
stos
in
out
gs
stos
movsl
mov
pop
jg
ljmp
hlt
dec
sbb
mov
insb
mov
testl
and
pusha
lret
adc
aaa
shrb
xchg
inc
loop
xchg
imul
cld
ja
mov
cld
iret
rcrb
ficompl
gs
shlb
pop
mov
adc
sbb
dec
push
mov
cmp
ja
idiv
jmp
insb
jge
roll
xor
xor
imul
movb
inc
xchg
loop
push
dec
xchg
aam
out
mov
pcmpgtd
out
pop
or
pop
lds
ljmp
ret
xchg
bound
lret
inc
pop
mov
in
mov
cwtl
add
and
pushl
adc
push
outsb
movsb
sub
mov
dec
inc
cld
out
push
mov
scas
enter
incl
stc
lea
xor
or
xor
rcll
fcompl
xor
and
lcall
aam
mov
ja
dec
cmp
cli
xchg
scas
dec
and
xchg
cmp
fs
add
mov
lcall
test
out
mov
pop
mov
mov
arpl
push
adc
push
xchg
les
pop
lret
adc
push
mov
mov
pushf
loopne
adc
std
stos
iret
call
hlt
and
mov
mov
adc
lret
push
mov
cld
arpl
dec
adc
rorl
inc
xor
aad
imul
mov
mov
lret
sti
fsubs
rorb
outsl
call
cmpsb
xor
scas
jge
or
dec
cmp
aas
in
adc
or
mov
es
incl
push
subb
or
inc
and
or
rcrb
fstpt
in
sub
js
add
mov
pop
lock
mov
sub
call
mov
xor
ss
ljmp
mov
and
test
dec
xchg
sti
data16
jle
decl
ss
xchg
mov
stos
jl
out
subl
test
push
inc
mov
ljmp
sub
adc
fwait
out
pop
shlb
call
pusha
dec
inc
mov
xchg
xchg
jge
sbb
mov
cwtl
notb
adc
xchg
clc
ljmp
dec
fmulp
sub
into
test
ficoms
insb
xchg
ss
jae
xlat
dec
sub
call
std
adc
dec
lods
popf
adc
adc
pop
xchg
in
repz
in
aas
and
pop
pushf
push
icebp
inc
push
jns
clc
add
sbb
add
and
in
pop
cli
push
mov
and
xchg
mov
xor
adc
ljmp
xor
sbb
cmpsl
xor
sbb
cmp
int3
and
mov
push
mov
pushf
orl
shl
cmp
push
push
jne
rclb
push
loop
fisttpl
hlt
call
and
mov
jns
outsl
andl
pop
dec
roll
mov
fildll
fistps
jae
jno
mov
imul
mov
addr16
stos
push
shlb
jne
imul
ss
jg
xchg
inc
out
adc
xchg
add
push
or
jg
test
mov
decl
subb
shlb
cmp
in
stos
push
push
arpl
pop
mov
push
cmpsl
or
cmp
add
or
fldenv
pop
movsl
mov
cld
fmull
repnz
or
xchg
pushl
data16
ficomps
or
mov
inc
rorl
in
dec
or
sub
mov
jae
or
roll
add
and
mov
fistl
inc
mov
pop
xlat
fwait
dec
rcrl
push
xchg
jmp
and
mov
addr16
mov
testb
add
jg
mov
lock
pusha
ss
in
scas
mov
sbb
or
mov
fistps
add
mov
adc
stos
or
dec
je
pushl
into
es
pop
add
pusha
mov
shll
jae
lods
and
lret
fucomip
ljmp
push
dec
test
sbb
cli
les
out
sub
jmp
ljmp
shrl
in
dec
adc
vcvttpd2dqx
in
mov
je
movsl
dec
jmp
jno
or
shl
jmp
stos
lret
mov
xchg
mov
add
mov
jmp
push
cli
mov
insl
ss
repnz
dec
or
lcall
adc
dec
rcrl
cmc
daa
xchg
mov
inc
stos
pop
ja
cmp
call
adc
or
cmpl
xor
jmp
pop
sub
cmpsl
out
inc
cmp
dec
jmp
adc
mov
sbb
mov
pop
inc
mov
out
or
into
mov
and
push
pusha
pop
mov
cmp
xchg
rcrb
incl
mov
sub
les
jo
repz
push
je
loop
stos
adc
cs
pop
mov
dec
clc
cld
decl
das
dec
push
lret
cmp
inc
mov
in
in
cmpsb
imul
push
xor
incl
jle
out
lods
divb
rolb
pop
xor
push
mov
stc
pop
jl
xchg
xor
push
jmp
shlb
pop
aas
pop
add
pop
xor
loopne
lcall
enter
enter
iret
pop
outsb
dec
test
insl
jg
add
bound
push
out
add
push
adc
xor
and
ljmp
fsubs
scas
mov
scas
nop
clc
jmp
int3
negb
jmp
aad
pushf
xchg
out
ljmp
adc
out
outsb
fldl
ds
lahf
ret
inc
scas
rorb
xchg
cmp
lcall
pop
cmp
out
xor
daa
dec
das
mov
filds
fbstp
jne
les
adcl
mov
jns
cmp
adc
sbb
jg
cmc
xchg
dec
insb
jg
inc
call
inc
test
in
xor
cmp
cmp
lea
pop
jle
bound
lret
push
mov
mov
push
fists
hlt
leave
mov
fisttpl
aam
hlt
push
lret
add
les
or
jecxz
xchg
imul
loope
and
add
addb
and
mov
cmp
mov
hlt
decl
adc
sbb
mov
and
push
orl
dec
insl
mov
fmuls
xor
pop
pop
sub
pop
aam
mov
fcomp
pusha
push
sub
and
jns
insl
stos
addr16
test
mov
pop
mov
cli
sub
ljmp
pop
test
insl
das
push
pushf
jg
jecxz
jb
adc
lock
adc
out
clc
ficomps
stc
arpl
add
push
pop
les
insl
sub
cld
add
xor
and
jl
std
icebp
mov
inc
je
enter
sub
pushl
cmp
mov
call
ficompl
mov
cmp
sub
push
fs
adc
ljmp
xlat
or
and
or
pop
aam
lock
dec
mov
lods
push
clc
aas
jo
xchg
jp
jecxz
push
push
mov
lret
jbe
data16
sub
dec
daa
outsl
inc
push
sbb
inc
cmp
xor
int
cmp
jge
lea
lcall
shll
loopne
mov
in
sbb
aad
jle
mov
jno
pushl
scas
push
push
cmpsb
mov
dec
test
add
sbb
dec
lret
fisubl
mov
jl
call
clc
call
jb
fimuls
decb
jmp
ds
ds
cmpsb
sbb
clc
fistpl
test
dec
or
and
pop
cwtl
pop
int
iret
out
hlt
addr16
inc
in
or
dec
pusha
sub
dec
mov
xchg
jg
sbb
dec
push
jecxz
sub
incl
inc
lock
inc
xchg
daa
push
xchg
mov
insl
push
das
incl
adc
sub
and
loop,pn
jp
pop
sbb
popf
stos
enter
ja
cli
lcall
cmpsb
addl
int
out
inc
shll
clc
xor
call
push
dec
and
adc
cld
cmp
inc
pop
and
sbb
push
mov
push
and
jg
dec
jecxz
xor
jecxz
mov
loop
sbb
aaa
jo,pn
cmp
push
repnz
sub
insb
xchg
jge
or
inc
sbb
jnp
popa
push
cs
ljmp
and
pop
mov
mov
inc
or
and
pop
lahf
mov
in
mulb
repz
mov
sar
cld
pushl
pop
fs
ret
cli
sbb
pop
rcrl
mov
std
cmp
sbb
fmull
push
jge
mov
mov
addr16
xchg
jae
dec
shlb
incl
push
mov
or
stc
sbbl
pop
ss
scas
xchg
cmp
popf
mov
ljmp
cli
outsl
mov
inc
insl
and
nop
imull
jnp
xchg
mov
call
and
adc
test
out
cmp
cmp
jb
push
push
or
mov
call
inc
push
shlb
fsubrs
mov
add
xor
xchg
jle
das
push
xor
pop
outsl
mov
ljmp
loope
cwtl
inc
lcall
push
out
cli
jns
lock
outsb
enter
jno
add
fsubl
lods
loopne
xor
adc
decl
cs
push
jne
jg
icebp
shlb
movsl
dec
pop
cmp
dec
pop
cli
in
repz
or
or
mov
fs
imul
push
jle
mov
js
mov
mov
incl
pop
test
mov
cmp
sub
sub
pusha
sub
xor
fdiv
or
push
mov
mov
dec
cmpsl
cwtl
adc
std
pop
ss
mov
stos
movsl
add
jmp
adc
ds
shlb
mov
push
xchg
ss
sbbb
mov
pop
jmp
xor
mov
lock
push
aaa
fwait
mov
pusha
jae
fwait
jns
or
and
push
mov
pushl
mov
cmpsb
orl
mov
pop
in
dec
es
fwait
xchg
ljmp
test
jne
sbb
push
sar
pushf
outsb
repnz
jns
shlb
lcall
dec
test
icebp
push
fisubs
and
fneni(8087
inc
and
fsubrl
cmpl
jmp
add
bound
ljmp
push
inc
fsubr
mulb
call
aaa
stos
push
dec
leave
mov
mov
addr16
je
xor
cmc
push
mov
mov
mov
incl
inc
mov
inc
jge
outsb
pop
insb
sub
insl
xor
ret
cmc
cmpsl
push
mov
push
jne
testl
add
cli
fisubrs
and
cli
pop
aas
push
insl
add
out
testb
cmp
add
push
lods
ljmp
clc
decl
inc
je
mov
lea
xchg
and
aam
cmp
mov
push
xchg
aas
xchg
add
push
pop
fidivrs
and
adc
mov
popa
iret
cmp
dec
test
mov
sbb
mov
sbb
dec
lahf
cmpsl
fsubrs
xchg
leave
in
add
and
xor
push
loope
push
or
fldenv
das
fstps
xor
sbb
and
push
dec
xchg
add
stos
jmp
jg
sti
jb
shl
mov
lods
gs
decl
rorl
mov
clc
shlb
test
std
jg
xor
movsl
cs
cmp
test
mov
stos
xor
test
or
lods
icebp
xorb
sub
loop
push
pop
adc
jae
dec
mov
jo
xchg
inc
sub
ljmp
fsubr
mov
idivl
enter
cmp
mov
in
dec
cmp
inc
push
movsl
sbb
clc
call
es
or
je
push
sbbb
cli
bound
ds
hlt
out
inc
xchg
ljmp
adc
adc
mov
mov
xorl
clc
adc
into
and
jmp
scas
in
sub
jecxz
mov
jge
inc
lods
push
repz
push
ljmp
xor
cmp
or
xchg
adc
mov
ljmp
pop
add
shrb
fbstp
divl
lcall
fldl
je
test
fwait
imul
cmc
inc
jo
sahf
scas
sbb
std
lcall
xlat
andb
adc
dec
test
xchg
stos
ds
arpl
add
leave
fildll
push
lods
into
push
faddl
inc
rcll
or
xor
jmp
test
js
push
ljmp
jl
xchg
or
inc
xlat
or
test
inc
cmp
lock
xor
pop
or
incl
push
mov
xor
dec
mov
xchg
repz
mov
pop
hlt
pushl
sbb
inc
sub
pusha
jp
add
jmp
ljmp
or
sbb
and
arpl
xor
add
mov
pusha
dec
clc
adc
cmp
dec
popf
out
adc
jmp
mov
xor
mov
mov
xchg
call
inc
adc
decl
ljmp
cmp
loop
ljmp
lods
sbb
jns
adc
inc
push
sub
movsl
in
xor
shll
and
stos
rcrl
ljmp
xlat
mov
fmull
mov
mov
xchg
jb
xchg
lcall
mov
dec
icebp
xchg
aad
loopne
hlt
mov
xor
mov
in
pushl
inc
mov
mov
sbb
mov
inc
ljmp
sti
ds
fistpll
and
stos
das
in
scas
stos
mov
cwtl
mov
push
adc
mov
and
aaa
roll
mov
sub
and
cli
or
mov
les
add
pop
ljmp
dec
or
push
sbb
pop
lahf
jecxz
and
jp
hlt
leave
mov
dec
add
mov
sub
rolb
fisubrs
sub
lea
sbb
lcall
inc
call
ss
scas
xchg
repz
xor
cmp
mov
shlb
mov
enter
test
adc
adc
fld
add
out
cli
mov
cli
je
aad
stc
int3
mov
fisubl
aas
push
mov
pop
xchg
test
decl
fistpl
loopne
dec
out
pop
adc
mov
ret
xlat
mov
mov
ljmp
sub
sbb
push
jecxz
sub
in
mov
pop
imul
incl
idiv
mov
adc
lds
dec
jge
iret
sub
jg
insl
cld
mov
mov
dec
outsb
in
ljmp
pop
pop
jg
lods
hlt
or
mov
sbb
sahf
cmp
jg
and
lock
add
push
clc
cmp
mov
mov
dec
repnz
mov
sbb
cmpsl
sbb
stos
movsb
ret
leave
insl
out
lcall
mov
aad
adc
mov
add
arpl
aam
fsqrt
insl
in
jno
scas
nop
adc
rcr
int
sarb
outsl
add
lds
lock
mov
push
mov
testl
jg
pushl
add
jne
dec
rorb
xchg
lods
mov
sbb
jne
add
fwait
mov
loop
sub
jg
xlat
mov
add
inc
insb
inc
cmp
cld
js
jmp
xor
jne
lock
ljmp
aas
push
add
out
nop
out
int3
xor
cwtl
mov
mov
jae
inc
push
cmp
mov
push
fs
sbb
sbb
popa
pop
test
xorl
jmp
pop
inc
push
fidivl
mov
push
jmp
rcll
lcall
mov
mov
jmp
mov
dec
dec
push
mov
or
jmp
sbb
outsb
out
iret
sar
jmp
jb
mov
daa
mov
sub
mov
adc
xchg
mov
cltd
pushf
jle
push
push
insl
incl
pop
insb
xor
jle
sahf
jecxz
test
cmp
sbb
decl
mov
out
pop
shll
pop
adc
test
pop
pop
out
sbb
inc
out
mov
sysexit
pop
xchg
sbb
scas
sti
jle
shl
add
andb
arpl
add
data16
outsb
loope
mov
adc
xchg
add
std
cld
xor
decl
push
adc
aam
lret
cld
mov
pop
les
imul
cmp
mov
and
xchg
scas
imul
nop
pop
fwait
push
scas
movsl
loopne
push
js
push
pop
bound
clc
sub
lock
cmp
cld
inc
cmp
dec
test
adc
andps
insl
cmp
push
rcr
xorl
dec
jp
inc
out
mov
scas
mov
or
xchg
insl
xchg
cmp
mov
mov
jge
pop
adc
mov
jae
loopne
cmp
mov
adc
insb
sbb
xorl
add
pop
or
lcall
hlt
das
stc
cmc
fsubl
fs
shlb
imul
ss
ljmp
sbb
xlat
popf
jo
dec
inc
lcall
dec
mov
pop
movsl
pop
push
push
les
jmp
inc
add
lret
loope
jecxz
rcr
xchg
sbb
cld
mov
cmp
add
pop
into
jle
notb
jns
inc
xor
xor
ljmp
jecxz
enter
xchg
in
imul
lock
aad
lahf
mov
cmp
push
xchg
inc
xor
cs
cmp
jmp
adc
ljmp
out
push
adc
pop
aam
adc
jo
lock
inc
cwtd
mov
adc
in
inc
jecxz
loope
sub
cmc
loope
pop
stc
dec
stos
mov
jb
idivl
pushl
stos
add
jmp
pusha
gs
cld
push
sbb
fdiv
stos
jns
fisttpl
jne
push
dec
ds
push
dec
aam
sti
xchg
mov
leave
add
int3
ss
xchg
push
pushf
xchg
sahf
inc
xlat
lret
adc
lods
decl
mov
mov
pop
inc
sbb
and
movsl
jmp
rol
pop
daa
daa
addr16
decl
test
dec
mov
out
pop
or
inc
lock
es
lcall
pop
neg
xchg
test
inc
std
dec
lods
jmp
pop
test
xor
jmp
xor
insb
xlat
scas
or
sbb
cwtl
clc
into
and
fldt
pushl
cld
loop
roll
xchg
or
fucomip
daa
pop
cwtl
push
ds
cmpsb
jae
inc
mov
ds
ljmp
decl
sub
popa
cmp
fbstp
ljmp
and
fistps
orb
and
xor
and
ljmp
in
in
sub
or
and
cld
push
hlt
dec
pop
xor
fsubs
mov
fsubrp
mov
cmpl
rcrb
fmuls
xchg
test
jmp
rorl
jns
or
cltd
jb
addl
or
sub
mov
incl
cmc
jo
out
sbb
or
mov
xchg
fwait
jge
pushf
cmp
add
dec
in
mov
xor
xchg
mov
cmp
lcall
or
push
dec
sahf
addr16
fstl
dec
dec
mov
popf
mov
cmp
sub
mov
lods
ret
sub
inc
jmp
loop
loope
push
mov
jg
sbbl
inc
loopne
insb
adc
jecxz
outsb
daa
mov
ja
xor
jmp
rorb
xor
jnp
test
lret
or
dec
jne
btr
inc
push
or
loope
jmp
jns
nop
fldl
or
mov
ret
icebp
xchg
mov
outsb
cld
scas
hlt
rcrb
lcall
lcall
jno
cmpsw
and
sbb
mov
jl
inc
nop
rorl
or
push
icebp
in
sbb
mov
lret
cs
inc
xchg
mov
ljmp
repz
xor
les
test
add
inc
adc
gs
jnp
sbb
pop
push
sbbl
or
fstpl
divl
stos
pop
pop
cli
jp
test
jge
xorb
jmp
mov
out
sbb
push
test
ja
int
loopne
sub
ljmp
cmp
jae
enter
lcall
icebp
test
popf
xchg
call
add
fdivs
inc
and
aad
and
mov
and
and
out
jg
incl
lcall
and
sub
lret
adcl
ljmp
pusha
imul
jb
cmp
sahf
cmpsb
rcll
cmp
stc
or
sbb
cmp
lcall
cltd
mov
arpl
fwait
cmp
cmp
enter
jecxz
push
xlat
jmp
jle
jo
imull
sub
imul
lret
insb
mov
jg
js
push
sbb
xor
int3
mov
iret
mov
add
adc
jle
fstpt
sub
rcrb
shlb
cmp
ja
mov
lds
outsb
ficoms
jnp
and
fwait
jae
lds
jb
pop
in
adc
mov
fldcw
lcall
inc
scas
xor
decb
daa
int3
lcall
push
cwtl
cmp
call
out
fldl
test
jmp
mov
mov
sbb
jecxz
loopne
icebp
mov
push
insb
je
loop
sahf
inc
mov
inc
sub
xchg
mov
orl
subl
in
adc
cmc
and
bound
xchg
adc
jbe
mov
pushl
out
es
loope,pt
sub
jno
int3
push
imull
xchg
sub
lods
pop
jo
add
shl
sub
jno
ret
lcall
pop
mov
je
ret
sub
in
or
in
fcomp
cli
mov
jb
cmp
xor
xchg
or
lret
ljmp
cmp
push
sbb
nop
pusha
aas
rcrb
adc
ljmp
jnp
loop
test
jmp
and
pop
sti
mov
std
dec
add
mov
negb
ret
ss
fmuls
jo
clc
ljmp
or
std
iret
or
sbb
pop
pusha
fidivl
mov
rcrb
jmp
ljmp
cmp
pop
jne
sub
and
push
push
fs
and
adc
incl
jb
dec
sbbl
std
inc
xchg
lcall
adc
leave
aas
aad
fs
test
xor
lods
out
mov
test
jge
pop
pop
in
push
mov
sbb
cltd
insl
mov
inc
pop
imul
call
dec
add
lret
data16
mov
movsb
or
fstpl
cmovp
jbe
xchg
lods
orl
and
dec
mov
leave
xchg
das
add
jecxz
pop
cmpsb
pop
stos
call
popf
jge
idiv
pop
or
test
aam
pop
lods
or
pop
les
or
loop
cmc
out
add
jb
js
jg
bnd
mov
inc
sbb
dec
mov
add
pop
fadds
fstpt
xchg
or
out
ficomps
inc
add
add
dec
in
int
ret
clc
sarl
adc
imul
int
mov
mov
movsb
es
les
pop
lock
xor
jle
ljmp
add
or
add
orb
nop
xlat
aad
movsb
das
inc
mov
and
dec
adc
mov
or
mov
inc
or
jnp
xchg
add
stos
jno
lret
ss
stos
addb
inc
ljmp
bound
imul
cld
outsb
dec
and
jne
jo
imul
jnp
fisubrs
ss
add
adc
push
mov
inc
add
mov
testb
js
scas
dec
sub
xor
inc
imul
push
fisubl
daa
sbb
mov
dec
gs
divl
outsl
outsl
insb
push
push
outsb
popa
jo
push
dec
or
mov
sbb
rolb
test
push
nop
add
cmp
xchg
and
insl
cmp
cltd
and
insb
push
xchg
movsl
dec
jne
ret
adc
inc
arpl
inc
and
addr16
pop
inc
lea
xchg
add
push
popa
add
inc
mov
cmp
inc
jns
sarb
fisubrl
jb
jbe
leave
loopne
cmp
push
es
xor
sbb
add
jecxz
orb
sbb
call
std
and
test
loopne
lmsw
mov
and
inc
jl
loopne
inc
ss
sub
imul
aas
xchg
cmp
insb
stos
sub
mov
inc
or
mov
pop
push
outsb
lea
inc
imul
mov
or
adc
inc
loope
popa
out
or
inc
inc
and
fisubs
movsl
or
sarl
sub
inc
insb
jne
ret
out
addl
xchg
mov
mov
mov
mov
jl
dec
xorb
push
fildl
or
inc
push
movsb
jo
pusha
pop
push
mov
mov
in
loope
cs
jne
subl
shrb
mov
arpl
ret
das
das
push
jns
mov
inc
jae
xor
xchg
adc
xchg
mov
ret
mov
push
push
hlt
fs
inc
loopne
and
in
xchg
cmp
mov
lds
int3
adc
popa
loop
bound
pop
inc
sub
jo
packuswb
and
pop
pop
mov
stos
inc
dec
sbb
sbb
and
ja
adc
push
cs
mov
movsb
push
jo
fistpll
sub
push
push
mov
or
xor
push
push
or
in
ret
test
pop
or
outsl
popw
push
test
insl
push
shlb
lret
mov
xor
jge
inc
xchg
popa
and
jbe
cmp
das
ljmp
pop
mov
pop
dec
inc
dec
pushf
xchg
or
inc
mov
test
mov
jb
pusha
cmpsl
and
cmc
mov
std
xchg
jo
mov
xor
js
call
mov
adc
movsl
stos
pop
push
adc
and
mov
fidivrl
and
inc
popa
cmp
jo
jp
or
push
jg
insb
or
mov
cmp
adc
jae
mov
rcl
or
xor
adc
outsl
jns
dec
mov
mov
dec
push
ss
jae
gs
and
pop
pop
imul
int
insl
outsl
jns
inc
je
cmc
ss
pop
mov
or
sub
addl
sub
and
insl
adc
add
push
es
cmp
mov
add
xor
pushf
add
or
test
pop
stos
stos
loope
lods
and
add
cmp
push
xchg
or
mov
pop
add
cwtl
push
cs
cmp
push
pop
or
test
pop
or
and
pushf
jo
push
loopne
jne
inc
fmuls
add
or
fbld
jecxz
mov
xor
and
cmp
mov
xor
add
mov
mov
test
sbb
outsl
and
mov
fsubl
imul
xorb
inc
scas
pop
imul
outsl
add
add
cmp
shrb
arpl
fisubl
xorl
sub
sarb
dec
fnsave
jne
lods
data16
push
xchg
movsb
mov
std
movsb
jp
add
fs
pop
adc
loopne
add
jnp
xor
mov
pusha
jp
inc
sbb
addr16
repnz
andl
mov
andl
aad
popa
sbb
inc
test
sub
shlb
pop
out
dec
lock
xchg
daa
int3
outsb
lds
sub
scas
pop
mov
ljmp
loopne
insb
mov
jae
outsl
jbe
jb
and
leave
and
cmpsl
push
loope
out
jo
inc
inc
ficoml
arpl
arpl
sahf
jbe
inc
imul
mov
pop
mov
js
insb
push
inc
insb
cmp
jp
jle
jge
add
nop
rcll
inc
jae
jno
mov
nop
adc
loope
ljmp
pop
and
pop
js
inc
pusha
push
and
xor
sbb
add
int3
mov
rol
lds
xchg
out
pop
out
jnp
xor
push
pop
xor
add
addr16
enter
fs
push
adc
and
ficomps
jns
jecxz
mov
or
dec
outsb
dec
push
popa
or
repz
cmpsl
ss
sar
pop
add
add
mov
cmpsb
xor
sub
dec
imul
imul
push
or
add
adc
in
sub
ds
rcr
loopne
icebp
adc
and
add
jl
sub
in
bound
or
bound
add
inc
jb
add
insb
inc
jae
or
fcmovu
fiaddl
daa
roll
add
push
repz
mov
ljmp
jo
das
mov
and
and
stos
cmp
rclb
loopne
or
xchg
mov
loopne
imul
roll
cmp
mov
lods
inc
sbbb
pop
mov
push
arpl
loope
lret
mov
bound
mov
or
sub
sub
inc
fildll
ja
rolb
sub
data16
mov
mov
or
inc
adc
div
jne
xor
hlt
xchg
insb
mov
mov
cmp
gs
xchg
mov
jo
dec
push
repz
xor
pop
xchg
jge
and
inc
js
enter
push
inc
push
xchg
andb
in
xchg
jge
pop
and
sbb
adc
dec
sub
xchg
ja
add
sbb
cmp
and
xor
cs
push
adc
cmp
insb
sub
clc
ret
lcall
pop
fs
adc
add
dec
insl
fs
dec
cmovs
adc
arpl
jg
jo
sbb
outsl
jo
inc
and
inc
inc
lods
lds
dec
dec
sbb
pop
scas
pop
push
lds
lds
roll
mov
or
lds
aad
add
icebp
fisttps
pop
outsb
or
lea
pusha
and
addr16
lods
nop
bound
add
scas
fnstenv
jo
pop
lods
pop
push
xchg
lods
pop
lods
psrlq
cmp
data16
fs
pop
mov
cmp
subl
push
sub
lods
out
mov
fildl
lahf
lret
jecxz
aam
arpl
les
add
iret
or
mov
sub
test
mov
js
push
push
inc
out
adc
ljmp
scas
xchg
rclb
lods
pop
xchg
dec
xchg
or
push
xchg
sbb
dec
jae
inc
loope
or
push
push
jl
xchg
push
pop
pop
mov
and
pop
dec
jo
add
jmp
sti
int
imul
sbb
das
adc
pop
int3
sub
add
or
mov
add
loopne
ret
mov
add
push
lcall
cmp
hlt
or
inc
cltd
pop
ficoms
cmp
pop
jbe
jb
cmp
out
push
adcb
sar
es
or
adc
fcompl
xchg
cld
movsl
sbb
add
cmpsb
insb
xorl
dec
push
or
fstpl
pop
pop
and
add
and
mov
dec
popa
adc
sbb
negl
dec
out
dec
in
push
into
push
out
inc
cs
mov
enter
push
sub
add
rcrb
pusha
dec
test
inc
notb
push
lahf
clc
pop
out
or
jno
inc
pop
add
sub
jmp
add
inc
add
call
or
pop
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
xor
inc
add
insb
inc
add
