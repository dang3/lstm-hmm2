fcomp
decl
xor
add
mov
or
adc
add
jg
push
mov
mov
push
push
call
test
jne
pop
pop
ret
push
push
fwait
jmp
rcrl
mov
test
je
cmp
std
mov
pcmpeqd
lea
jae
sub
movzwl
je
add
fnstsw
pop
pop
xor
andb
fcomps
shlb
pop
lcall
push
push
xor
push
mov
adc
hlt
fdivrl
fisubrs
les
adc
incl
sbb
clc
imul
add
push
mov
push
push
push
xor
je
push
push
push
push
idiv
data16
in
sbb
clc
add
pop
sbb
inc
pop
shlb
nop
jne
pop
pop
pop
lcall
repnz
add
or
inc
or
jle
dec
push
xadd
dec
test
jg
mov
mov
push
mov
mov
call
ret
pop
add
fdivr
inc
push
push
mov
pop
mov
mov
les
insb
and
out
ja
mov
dec
add
punpckhdq
sbb
das
dec
sub
push
mov
out
pop
mov
mov
and
xor
jnp
nop
adc
adc
push
lea
push
sbb
repz
jae
sbb
add
pop
xor
or
xchg
dec
cltd
adc
jns
orl
mov
push
xchg
dec
add
push
cld
jg
mov
cmpl
jne
push
addb
add
cmp
adc
push
jae
or
sbb
hlt
push
and
imull
sub
jo
pusha
mov
adc
mov
rcrl
and
mov
add
push
or
inc
lock
add
cmp
lret
lds
jp
or
and
cmpb
push
mov
push
xor
push
mov
sub
sub
pop
aam
or
cmp
add
stos
push
shll
add
ss
adc
jle
or
mov
movsl
mov
adc
xchg
push
push
fiadds
stc
inc
into
nop
or
leave
mov
push
shrl
mov
xlat
cmp
pusha
nop
fidivrs
les
add
push
insl
lock
hlt
pop
dec
adc
movntq
fs
push
or
pushf
pop
enter
dec
add
xorb
sbb
repz
add
mov
pop
push
xchg
push
aam
xor
mov
mov
and
daa
sbb
inc
mov
pusha
xor
push
push
dec
push
mov
pop
in
enter
push
or
mov
jle
push
mov
dec
add
inc
mov
sbb
lret
add
or
cmpsl
and
adc
test
jbe
clc
rcl
sbb
sub
push
mov
and
jne
xchg
cld
mov
jns
or
addl
add
pop
cmpsb
mov
pop
ret
xor
adc
icebp
add
repz
push
sub
fcoml
add
and
inc
in
ds
jl
jle
les
inc
les
leave
lcall
cmp
jae
clc
mov
sub
push
and
dec
lea
mov
je
in
ljmp
iret
and
add
and
inc
xor
push
cmp
int
add
and
add
or
lret
hlt
add
iret
popa
inc
ja
je
fists
out
sbb
lods
sarb
dec
inc
vmptrst
cld
push
int3
push
add
call
inc
mov
inc
pushf
cmp
xchg
lea
loopne
loopne
adc
push
and
repz
pop
out
pop
movsb
sbb
inc
hlt
nop
test
gs
sub
dec
hlt
mov
or
adc
mov
pop
sub
mov
add
inc
xor
push
pop
push
and
in
ret
or
or
je
in
xor
xor
mov
addr16
pop
push
push
stos
add
xor
dec
or
xchg
bound
popf
push
adc
inc
xor
fwait
push
mov
insb
xchg
push
jl
in
dec
jg
dec
or
test
push
adc
add
sbb
pop
inc
add
push
mov
add
adc
mov
jb
sub
fstps
pop
sbb
sub
addps
icebp
daa
cmp
sub
and
jmp
lea
nopl
cmp
mov
pusha
push
push
es
clc
int3
insl
push
push
push
add
add
sub
in
mov
jle
cmp
mov
push
pusha
sbb
dec
jbe
sete
test
test
mov
sub
les
fs
and
movsb
arpl
dec
into
push
jl
inc
push
iret
xor
adc
movsb
scas
sub
pop
int3
xchg
cmpsl
ljmp
cmp
and
or
push
aad
stos
pusha
lds
popl
punpckhbw
rolb
push
or
rcrl
jle
je
and
xchg
inc
adc
insb
xor
test
and
aaa
or
push
adc
shlb
push
sub
mov
andb
mov
mov
xor
arpl
popa
push
or
std
sub
jo
push
ljmp
jp
ret
mov
fs
scas
dec
push
cmp
and
add
mov
and
adc
sbb
std
or
sub
fists
push
loopne
repnz
fdivrs
push
sub
dec
cs
test
mov
jle
mov
mov
aad
sti
mov
mov
dec
cmp
lods
cmp
int
inc
jle
rcrb
xor
jo
lcall
push
add
fdivrp
adc
leave
mov
dec
inc
movb
lock
stc
mov
or
sbb
push
mov
lods
mov
and
out
xor
push
sub
mov
jecxz
mov
shrb
adc
icebp
dec
hlt
xlat
mov
cmp
mov
jge
jo
push
push
cmp
dec
cmp
push
or
bound
adc
fs
or
movhps
pop
pop
call
push
data16
rorb
lock
aaa
shrb
mov
rorb
loopne
cmpl
je
adc
push
mov
pop
push
xor
inc
std
mov
push
push
sarb
lea
scas
cld
mov
sub
add
addr16
ljmp
mull
call
xchg
sbb
clc
push
xchg
adc
adc
mov
jle
or
js
fldcw
cltd
das
insb
or
jg
xor
mov
mov
jmp
mov
jl
lahf
mov
repz
adc
add
dec
dec
sub
adc
ret
enter
aaa
push
adcl
jge
cmp
sbb
xchg
or
icebp
jns
jl
movsb
in
or
push
or
in
mov
fisubrl
pop
leave
mov
push
lods
aas
dec
dec
icebp
mov
or
pand
cmp
jmp
cmc
add
adc
and
pop
pop
jmp
shl
mov
int3
cli
addl
filds
push
push
jne
sti
xlat
xor
cmp
sbb
iret
outsb
add
pop
mov
fwait
pop
adc
bound
mov
pop
lret
add
sbb
shl
xchg
cmp
jmp
jg
inc
sahf
add
and
cmp
jne
or
loopne
mov
sub
loope
adc
mov
inc
icebp
inc
lods
sbb
push
in
imul
cmp
je
sub
cmp
je
ljmp
leave
in
or
sbb
das
inc
adcb
push
pop
mov
test
mov
daa
xchg
rorl
mov
add
mov
sbb
inc
add
js
push
lcall
mov
rol
or
adc
push
sub
aas
rcr
cmpsl
call
adc
adc
call
inc
cmp
jl
add
jg
xlat
ret
pop
repnz
jle
push
pop
push
sbb
fs
jne
cmp
mov
jbe
test
xor
and
js
push
imull
mov
pop
adc
or
stos
xor
add
or
cwtl
push
jle
xchg
std
push
mov
ret
jne
movzwl
in
xchg
or
mov
je
push
xchg
into
push
sbb
and
jmp
mov
lea
add
inc
test
jne
sub
push
sub
inc
sbb
mov
aam
adcb
sahf
addb
les
push
icebp
cmp
lcall
mov
insb
jne
das
mov
jecxz
pop
dec
es
lea
push
sub
pop
jb
iret
cmp
jg
inc
in
push
mov
push
jge
xor
mov
cmp
jl
repnz
fistpll
cmp
cmp
insb
pop
pop
ret
mov
pop
sbb
push
pop
adc
movd
aaa
adc
pop
shll
add
push
or
lahf
push
or
or
movsl
lahf
test
lock
pop
mov
sbb
rol
or
xchg
xorl
aaa
adc
lea
mov
rcr
adc
pop
cmp
ret
push
orb
scas
mov
pop
hlt
std
sbb
jge
push
call
cs
push
test
pop
nop
lahf
xchg
mov
mov
mov
cmp
pop
fsub
sti
mov
mov
lea
push
mov
sarb
movl
push
cmc
aaa
ds
ja
add
jmp
insb
fcoml
add
push
mov
mov
add
clc
cwtl
jl
inc
jo
mov
test
add
add
or
movhlps
ret
icebp
mov
sub
cld
push
cmp
or
jle
pusha
pop
insb
jge
sub
add
inc
movl
mov
pop
ret
aad
push
or
mov
jbe
jno
pop
xchg
dec
push
rclb
les
fcmovb
loopne
cmp
jo
push
push
iret
or
call
jp
repnz
sbb
notl
mov
or
lret
mov
adc
cmp
ja
push
clc
lea
push
mov
aaa
rclb
sti
jmp
je
push
cmpl
mov
dec
movsl
pushf
adc
add
mov
mov
adc
adc
add
loopne
jg
shr
pop
and
xchg
pop
enter
push
enter
cmp
outsb
notl
or
out
pusha
fcoms
push
push
jge
decl
outsb
les
fmull
lods
lea
push
push
xlat
or
sbb
or
xor
adc
enter
rclb
mov
pop
mov
mov
gs
xchg
jecxz
dec
sti
shlb
add
jnp
mov
popf
mov
jp
scas
pop
mov
push
mov
dec
dec
push
pop
clc
mov
fs
cmp
je
cmpl
in
out
push
jl
mov
push
jne
push
imul
jns
push
mov
test
push
and
cmpb
das
and
fcomi
out
push
stos
push
hlt
push
push
jge
or
mov
xor
insb
mov
inc
push
or
inc
or
out
daa
lock
negl
and
cmpsb
lahf
pop
pop
cmp
loope
ret
aas
push
lcall
dec
sub
rorb
lret
jb,pn
sbb
adc
mov
dec
xchg
test
xor
dec
nop
or
rcrl
loope
pop
inc
invd
ljmp
lds
loope
mov
push
push
call
lret
mov
pop
fldt
pop
push
push
sub
mov
js
clc
jl
sub
sub
push
pop
mov
mov
mov
mov
and
data16
xchg
mov
iret
inc
push
and
clc
xchg
sarl
jge
pop
mov
inc
add
adc
lods
mov
lea
lds
hlt
pop
popa
mov
test
jo
sbb
xchg
push
add
jo
cmp
push
loop
pop
jle
mov
cmc
jmp
jl
cmp
cmp
sbb
or
es
ret
fistpl
sbb
int3
movsl
jg
add
push
adc
rcl
cmp
scas
das
xor
cltd
inc
adc
ret
mov
enter
adc
mov
mov
or
add
and
or
ret
push
jae
push
pop
push
aas
js
sbb
push
or
inc
lds
scas
cmp
cli
inc
jb
push
push
lahf
dec
sbb
lock
hlt
cmp
xlat
xor
nop
sbb
movq
fsubs
pop
repnz
mov
cmp
loope
add
rorl
popa
mov
les
shlb
lock
pop
push
jl
cmp
je
mov
enter
adc
push
sbb
lods
adc
adc
mov
mov
aas
insl
roll
push
jge
pop
je
pop
pop
jle
aaa
insl
out
xor
sub
jmp
mov
std
pop
stos
and
repz
mov
push
add
or
fdivs
pop
pop
mov
lret
ficoms
pop
pop
or
xor
loope
pushf
xor
cmpsb
lods
leave
shrl
addps
flds
insb
adc
pop
xor
mov
pop
pop
aas
sti
fldl
mov
xchg
sub
xchg
or
and
push
mov
sbbb
movsb
mov
scas
dec
cmp
dec
and
int3
dec
jmp
push
lea
sub
roll
iret
negb
je
roll
jbe
int3
mov
pop
mov
scas
mov
ja
mov
sbb
mov
or
xor
mov
dec
adc
std
lods
mov
jne
xor
push
push
outsb
jb
testb
or
sbb
rcl
push
lea
mov
inc
cmp
ds
inc
in
cmp
mov
test
lret
mov
aas
mov
xchg
das
leave
xchg
or
mov
pmulhuw
rcll
xor
shl
cmp
inc
push
push
cmpsl
mov
movsb
adcb
ficompl
les
and
pop
das
leave
xchg
nop
and
jg
pop
in
xchg
sbb
pop
sbb
sbb
sub
or
add
mov
push
lock
or
sub
dec
in
or
popa
lods
inc
pop
mov
push
and
mov
lret
out
divb
add
ja
sysexit
sub
loopne
and
je
or
jge
fwait
scas
or
jne
push
add
or
test
push
shrb
ret
sbb
adc
stos
push
adc
out
dec
repnz
insb
cmp
lods
fisubrs
inc
pop
sbb
and
jle
lock
testb
addr16
jmp
ret
pop
add
jne
inc
pusha
addl
sarb
rcr
jle
repz
shll
xlat
stos
mov
jns
cmpb
aas
cld
mov
ja
je
push
sub
sub
pop
adc
pop
cmp
push
in
pop
mov
jecxz
xchg
jne
jle
jbe
repnz
ds
mov
xchg
mov
movb
mov
pop
adc
or
movsb
jge
pop
inc
dec
adc
outsl
rorb
mov
in
repnz
std
xchg
jmp
dec
divl
shll
shrl
rorb
std
jnp
xchg
cmp
push
mov
sub
mov
or
pushf
push
fstps
leave
and
mov
loop
cmp
fbstp
iret
pusha
rorb
jp
cld
cmpsw
cmpsl
jg
push
lea
adc
flds
push
push
mov
sbb
adc
sbb
xor
stos
mov
loopne
std
fidivs
lds
mov
fldcw
sbb
xchg
fisubrs
jg
out
movl
xchg
push
push
int3
out
lret
mov
stc
sbb
enter
sub
sub
daa
je
xchg
mov
popa
aaa
in
cmp
repz
mov
loop
sahf
cmpsl
stc
push
cmp
xchg
add
cmp
pop
adcl
mov
add
pop
or
jae
jo
or
movsb
fstl
loope
outsb
pop
pop
mov
and
sahf
in
push
je
fistps
adc
mov
sbb
dec
ljmp
adc
xchg
xchg
xchg
inc
xchg
sahf
add
maxps
stos
push
dec
mov
sub
push
pop
push
lea
push
ficoml
add
push
lea
mov
xchg
push
and
out
aam
in
pusha
les
pop
sahf
nop
push
pop
or
cld
xchg
aas
enter
add
movl
sbb
jbe
add
bound
stos
testb
mov
add
fiaddl
gs
inc
cld
xchg
in
daa
loope
call
test
fdivrl
add
add
lock
mov
xor
cwtl
movl
pop
jne
pushf
adcl
and
mov
or
push
xor
or
mov
or
cmp
mov
jle
mov
adc
aas
cmp
movsl
mov
xchg
and
pop
stos
dec
sbb
add
shlb
sbb
mov
lock
call
dec
out
sbb
rcl
or
xchg
inc
xor
es
sbb
or
jbe
out
dec
dec
sub
push
sub
add
jle
push
sub
sub
xchg
shrb
inc
sub
and
dec
and
xor
jecxz
add
push
mov
mov
sbb
dec
in
push
nop
nop
rcpps
add
test
loopne
sbb
pop
cmp
je
lea
in
ret
push
inc
xchg
pushf
loope
pushf
fidivl
test
mov
sahf
pop
mov
call
lret
lahf
in
sbb
pop
in
xchg
subb
mov
xor
adc
add
test
mov
jne
imul
mov
repnz
push
push
pusha
lock
xchg
in
jmp
lods
jnp
lods
lods
ss
data16
push
mov
mov
loop
mov
dec
mov
push
push
xor
je
add
inc
dec
addb
inc
inc
inc
cld
pop
sbb
sub
cltd
sub
sar
add
arpl
xchg
js
mov
xor
sub
and
jmp
mov
add
sahf
inc
add
mov
shlb
dec
push
and
mov
xchg
imul
push
xor
jbe
push
pop
sub
fadd
push
out
out
repz
sbb
push
adc
xor
cmp
inc
or
jle
inc
xor
sub
nop
push
sub
mov
arpl
mov
addl
pusha
mov
jmp
and
orl
jecxz
push
sbb
push
jg
push
ret
imul
addb
adc
cwtl
mov
mov
rolb
or
adc
je
rcrb
mov
jecxz
popf
orb
ret
pop
movzbl
jle
pop
mov
into
jnp
mov
cmp
addr16
cmpl
cmpsl
clc
push
cwtl
push
into
adc
lock
and
loopne
lods
xchg
sbb
lea
sub
aas
add
movl
repz
shll
push
push
and
push
add
mov
mov
push
jo
lret
push
mov
mov
sbb
test
das
sbb
cmp
loop
loope
xlat
loop
pop
sbb
in
cmp
clc
or
cmp
je
cmp
push
or
lahf
sbb
mov
mov
repz
lea
lock
lock
jmp
pop
in
movl
push
push
cmpsl
adc
rcrb
mov
mov
inc
jecxz
push
popa
mov
mov
out
fisubrs
jb
dec
xchg
js
mov
xchg
push
cmp
dec
inc
push
orb
sbb
mov
jle
mov
and
scas
int3
mov
mov
ss
push
int
xor
stos
sbb
pop
and
sub
mov
incl
jne
push
mov
stc
mov
inc
xchg
jno
sti
into
pop
fsubp
pusha
and
or
stos
or
push
sub
cwtl
shufps
movl
imul
mov
jno
in
rorb
loope
push
test
cmpsl
add
les
pop
jns
lods
and
xchg
adc
mov
mov
adcb
nop
add
incl
mov
or
mov
dec
sbb
dec
ljmp
mov
sub
addb
xor
lods
dec
inc
inc
lahf
push
rclb
ret
xor
pop
push
pusha
xchg
push
sub
test
jge
decl
jmp
push
nop
cmp
sub
push
push
lea
aam
fcoms
jl
sub
cmp
add
push
push
xor
push
ret
add
cmp
nop
jmp
jmp
addl
or
push
and
inc
xchg
je
add
inc
pop
lcall
addl
sub
mov
dec
sbb
je
icebp
into
ret
add
push
mov
add
in
dec
aad
push
push
push
and
jo
dec
repnz
sbb
cltd
loopne
mov
push
sbb
dec
mov
sbb
test
aaa
outsb
add
aas
inc
lcallw
cmp
fdivrs
lock
fldl
fmull
add
adc
adc
mov
scas
inc
sub
xchg
dec
jo
cltd
push
push
lahf
in
sub
adc
push
mov
lock
sub
fdivs
es
add
add
pop
les
dec
test
push
push
imul
push
lds
dec
inc
jne
pop
push
jp
sub
test
enter
fstl
daa
mov
or
dec
xchg
icebp
cmp
push
add
push
fadds
ljmp
shrl
xchg
xor
and
push
loop
ret
push
cmp
sub
dec
pop
xchg
or
dec
jb
es
and
arpl
fsubrs
cmpb
inc
xor
jno
adc
push
enter
in
shll
inc
punpcklwd
outsl
jecxz
mov
addb
push
xchg
push
push
lds
pop
cmp
mov
cs
cld
add
ficomps
dec
mov
jns
mov
lock
push
stos
push
or
incl
out
or
inc
test
fs
mov
int
dec
push
mov
bound
push
push
and
xchg
add
fsubrl
pop
cmp
mov
xor
adc
sub
insb
push
mov
fmull
test
push
movsl
outsb
dec
push
push
push
lods
test
sbb
ss
shr
mov
or
add
fildll
inc
inc
push
sbb
js
push
pop
push
call
popa
jno
sub
dec
popa
dec
sub
or
xor
out
xchg
sub
inc
out
add
push
pop
mov
xchg
sub
xor
add
je
xorl
adc
xor
loope,pn
cmp
lret
jl
mov
cltd
and
push
sar
push
adc
and
fstpl
daa
test
jl
dec
add
dec
mov
adc
add
mov
bound
mov
dec
bound
imul
sar
mov
shr
add
mov
sbb
out
aad
rclb
repnz
push
lahf
dec
mov
in
jle
fldenv
imul
jmp
enter
mov
call
stc
add
out
ja
mov
push
enter
lea
jg
xor
sbb
divl
jg
aas
adc
cmp
jne
push
dec
jecxz
lds
dec
enter
ret
fidivrs
jmp
scas
pop
cmp
jo
sti
lea
or
inc
lods
sbb
ljmp
in
sbb
xchg
dec
call
js
inc
out
mov
pop
dec
push
dec
test
adc
xor
cmpsl
sbb
sub
push
sub
and
or
out
dec
test
mov
pop
pusha
push
ljmp
adc
fisubrl
int3
sbb
push
aas
sub
je
test
jl
cmp
popf
cmc
lcall
add
aaa
sbb
jl
sub
push
mov
sbb
loope
int
pop
scas
add
jl
insl
arpl
mov
fidivrs
cmp
fisttpl
mov
adc
sbb
xchg
sbb
and
push
xor
add
popf
imul
imul
jno
jae
dec
sub
scas
cmc
jbe
jge
jmp
mov
pop
fldt
js
pushf
adc
nopl
faddl
xor
fdivl
sub
xor
mov
cld
jge
loopne
stc
shll
mov
test
sbb
jle
loop
mov
mov
mov
jns
mov
push
fcoms
jmp
into
add
cmp
bound
cli
push
adc
rorb
out
fidivl
pusha
cmp
mov
mov
loopne
fcomps
clc
add
mov
pop
movb
js
push
lret
jge
ret
lret
mov
push
test
shll
in
movsl
or
push
add
and
cmp
rcrb
mov
and
call
xchg
fidivrs
cwtl
mov
je
jmp
cmp
add
and
and
xchg
xor
aaa
add
fistl
add
adcl
movsl
jno
or
pusha
movsl
loope
xor
jo
mov
lahf
mov
sbb
add
nop
movl
add
xchg
mov
lea
or
inc
xchg
xorb
mov
pop
lods
pop
fmull
mov
mov
mov
cltd
loopne
call
pushf
test
add
js
iret
lds
or
loope
test
inc
mov
cmp
enter
xor
sbb
int3
lock
pop
clc
mov
hlt
sbb
mov
or
dec
cmp
push
ret
decb
pop
in
or
add
push
pop
orb
popa
and
test
je
rcll
xchg
push
jmp
mov
push
lahf
sbb
push
push
lock
jae
xchg
or
pop
inc
jg
mov
cltd
outsb
pop
xchg
fstpl
out
and
inc
mov
movl
adc
test
push
cmp
adc
jl
mov
adc
push
push
dec
xchg
sbb
mov
mov
xor
jl
mov
jbe
mov
stc
push
lahf
jae
and
nopl
loopne
add
mov
sbb
xor
rorb
push
fiaddl
inc
dec
mov
xchg
lahf
or
es
push
jle
push
pop
in
arpl
push
mov
lret
mov
or
ret
lahf
or
xchg
sub
rolb
inc
and
hlt
or
add
sub
clc
push
sub
clc
setb
jno
jg
insb
push
mov
sub
cmp
setae
lcall
and
add
mov
sbb
cmp
lret
mov
outsb
or
sbbl
pop
pop
jae
mov
push
add
inc
push
mov
fs
push
aad
subl
dec
push
movsl
push
es
pop
pop
sbb
lahf
and
jecxz
rcll
lods
jecxz
aam
filds
xor
push
pop
cmp
xor
jnp
inc
push
fmuls
sbb
and
jp
add
rcr
mov
add
inc
rorb
xor
push
push
inc
push
add
jb
and
cmpsl
aas
inc
dec
enter
jg
mov
add
jp
test
mov
lret
or
pop
adc
sbbb
xchg
lock
clc
push
ja
movzbl
int3
dec
movsl
or
push
add
mov
jmp
add
icebp
sti
mov
add
add
adc
sub
adc
enter
xlat
dec
jo
call
addr16
int3
pop
pusha
or
inc
and
dec
popa
and
js
mov
or
sbb
push
and
inc
xor
mov
movl
mov
dec
add
xor
pusha
jmp
les
pop
push
mov
jg
push
add
lea
mov
mov
xlat
cmp
add
cmp
add
fstpl
inc
push
mov
cltd
adc
mov
sbb
popa
adc
push
mov
sbbb
and
add
mov
add
jle
xor
pop
pop
or
leave
sti
sahf
add
push
push
insl
rorb
xor
std
mov
inc
mov
in
test
xchg
push
and
inc
lea
sbb
out
aaa
add
mov
lds
xchg
pop
sbb
mov
sbb
out
mov
mov
mov
test
or
sub
mov
jmp
dec
ja
sbb
push
adc
subps
push
pop
and
xchg
mov
int
xorb
dec
add
push
push
rolb
in
cwtl
xchg
push
dec
push
pop
xchg
mov
jnp
xor
jecxz
aad
nop
and
leave
es
cmp
stos
add
pop
cld
imul
cld
jne
push
push
sub
shl
cs
and
mov
scas
hlt
pop
push
test
push
sti
subb
cmpsb
std
fsubs
rorl
out
jb
jnp
push
xchg
or
enter
insl
jp
movups
dec
add
popa
cli
push
dec
cld
shll
push
aad
leave
or
lods
jp
xchg
mov
sub
arpl
nop
mov
mov
and
lock
sbbb
dec
and
mov
push
cmp
xor
cmp
and
lea
loope
mov
inc
out
adc
push
dec
add
loopne
fcmove
push
push
mov
out
inc
or
int3
cld
sub
push
inc
pop
sbb
add
in
mov
push
mov
or
enter
dec
push
add
popa
jg
ss
add
add
fcmovnu
int
mov
push
fcomps
pop
xchg
pop
enter
lret
lods
sub
adc
fisubrl
fisttpl
and
adc
shll
adc
enter
xor
negb
dec
cmp
and
inc
push
add
cmp
fnsave
adc
loope
mov
pop
push
lods
cltd
repz
pop
call
dec
ret
xchg
int3
mov
fwait
mov
adc
jno
push
cwtl
lret
pop
add
movsb
loopne
addb
add
push
mov
fs
pushf
cld
or
cmpsb
adc
add
mov
in
adc
push
mov
loop
sbb
incb
pusha
out
mov
mov
inc
es
pop
push
clc
iret
jmp
pop
add
jne
adc
push
sub
push
das
clc
sbb
add
data16
mov
pop
leave
xchg
pop
pop
sub
push
stos
pop
insl
mov
jne
xchg
arpl
inc
in
loop
adc
and
sub
adc
mov
scas
movsb
pop
dec
xor
mov
mov
cld
and
aam
jl,pn
enter
sbb
jnp
push
mov
in
sbb
mov
cmpsl
sbb
mov
dec
adc
sbb
aaa
add
ja
neg
and
adc
dec
popf
andl
cmp
mov
js
insb
mov
inc
mov
ja
insb
dec
sbb
insl
push
das
xor
xor
mov
xchg
cmpsl
mov
fisubrl
push
adc
movsb
push
pop
movsb
sub
iret
sbb
dec
cmp
daa
and
inc
mov
xchg
push
mov
nop
cmp
mov
mov
shr
pop
mov
or
cs
stc
aas
sub
icebp
inc
jae
mov
push
push
cs
xor
mov
jle
bound
mov
add
cmpsb
push
seto
divl
sbbl
push
push
popf
jo
std
stc
cmp
mov
jl
xchg
data16
icebp
cld
or
adc
push
bound
lods
sub
adc
push
std
xor
adc
sbb
pop
jp
or
jge
jne
jle
or
push
push
test
dec
dec
or
push
pop
cmp
sub
pop
inc
pusha
js
pop
mov
adc
add
xor
ja
bound
or
mov
mov
je
dec
rol
movsl
or
add
stc
adc
jg
pop
push
xor
xchg
add
sbb
xorb
pop
add
or
cmp
pop
jne
das
push
jbe
xchg
or
or
dec
addr16
mov
popa
xor
mov
inc
mov
jne
outsb
aaa
enter
cmpsb
sbb
push
out
xchg
xchg
iret
cmp
or
inc
outsl
roll
xor
andb
push
adc
jne
fmull
pop
mov
or
cmp
sub
sbb
inc
mov
mov
movb
sub
dec
push
xchg
push
jmp
sub
popa
adc
shlb
fstpt
inc
repz
mov
cmp
and
adcb
inc
sbb
dec
add
cmpb
add
or
sub
and
leave
sbb
push
rorl
pop
push
dec
push
add
and
adc
push
mov
cli
mov
xor
mov
sub
sub
sbb
push
mov
pop
jne
ljmp
cmp
jmp
sbb
jne
pushf
sbb
mov
jle
xor
pop
cmc
and
test
and
mov
bound
es
loope
xor
pop
xor
and
sahf
mov
and
rol
bound
dec
and
inc
test
icebp
pushf
pop
lahf
mov
mov
jmp
pusha
cmp
sub
mov
or
es
orl
mov
mov
loope
jmp
mov
sbb
ret
fbstp
mov
and
add
je
xor
cltd
insl
mov
cmpb
les
inc
outsl
fbstp
iret
lret
fadds
or
pushf
or
sub
add
shr
add
sub
cmp
out
imull
or
push
xor
ja
mov
lcall
lea
fidivl
stc
mov
pop
rolb
faddl
mov
or
leave
repz
cmpsb
mov
lods
pop
and
adc
cs
mov
inc
rcll
pop
pop
pop
adc
or
mov
dec
jl
loope
sbb
sub
mov
xchg
or
movsb
fnstenv
add
dec
stos
mov
inc
and
leave
add
xor
iret
lret
add
pop
jb
repnz
or
push
xor
insb
sbb
pusha
or
add
inc
and
or
ficompl
aas
icebp
xchg
int3
add
adc
js
sbb
aaa
add
iret
lret
js
sub
mov
pop
ljmp
dec
mov
sbb
push
xor
lods
pop
and
pop
add
xchg
cmp
and
pop
pop
out
cmp
and
push
test
inc
dec
or
cmp
xor
pop
dec
push
add
movsb
testb
xchg
xor
and
adc
es
xor
or
xor
data16
inc
cmp
cmp
push
iret
inc
cmp
inc
mov
nop
fnstsw
add
or
cmp
les
push
sub
call
add
mov
sub
pop
xor
into
in
mov
push
sub
or
insl
dec
jge
push
jge
push
lret
or
or
jne
movl
push
int
and
cmp
es
cmp
sub
cmpsb
inc
mov
loope
cmp
rcrl
mov
movsl
jno
mov
in
cmp
test
inc
pusha
pop
add
inc
mov
cmp
ljmp
pop
sub
mov
push
daa
mov
add
dec
jg
rorb
mov
inc
movb
loope
in
loopne
mov
outsl
add
sti
out
adc
enter
in
adc
clc
int3
mov
fnsave
mov
ret
test
push
jl
cmp
and
loop
je
nop
call
or
pop
mov
mov
mov
push
rorl
imulb
push
xchg
ret
mov
imul
add
mov
popf
test
shlb
movsl
lock
adc
movsb
test
inc
or
jmp
hlt
push
pop
test
mov
andl
add
test
pusha
xor
push
shlb
je
mov
pop
pmaxsw
mov
fs
outsl
sbb
clc
mov
insl
pop
ljmp
add
into
mov
push
jp
add
sub
dec
inc
cmp
out
or
jl
push
mov
fwait
int
xor
scas
mov
lds
inc
cmp
fdivrs
adc
lahf
insl
and
sub
fs
test
or
cmp
push
push
rclb
push
jp
into
lea
enter
inc
aad
out
sub
pop
xor
ret
push
movsl
negl
imul
cwtl
hlt
test
or
dec
pop
push
push
or
int3
popa
add
jge
shlb
or
and
jns
inc
mov
add
xor
fs
and
pop
add
stos
lock
push
adc
dec
push
adc
or
scas
mov
notl
js
add
sbb
push
adc
adc
popa
ret
lds
xlat
cmp
push
inc
outsl
cmpsb
add
fists
push
mov
das
rcrl
das
popf
orb
push
xchg
and
or
sub
pop
pop
imul
hlt
je
aam
movsb
ret
sar
or
pop
shr
mov
pusha
nop
cmpsb
xor
movsb
lret
add
pop
sti
pop
mov
push
jno
or
xorb
nop
lock
out
push
adc
adc
or
loop
jns
xchg
fadd
cmp
sub
nop
test
adc
shr
pop
xlat
adc
xor
adc
xor
sub
and
add
in
sub
es
enter
and
inc
aad
adc
sub
fistps
cmp
xor
mov
dec
rorl
adc
dec
sbb
insb
xor
pop
stos
inc
enter
lcall
and
xchg
loope
mov
pop
inc
or
enter
add
sub
cmpb
sbb
sbb
subb
adcl
adc
cmp
and
out
or
push
pop
repnz
cwtl
push
and
add
inc
testl
xor
xchg
lods
cs
fs
sub
in
sbb
add
pop
leave
orl
jl
std
je
and
dec
jns
sbb
mov
out
pop
mov
adcl
cmp
pop
add
sti
loop
outsb
lds
mov
pop
aam
sbb
xor
pop
lock
xor
and
inc
fisubrl
movsb
mov
dec
xchg
mov
mov
sarb
push
xchg
in
das
pop
aas
add
sbb
int3
mov
cmp
sbb
and
addr16
xor
sbb
mov
sbb
in
sbb
xchg
cmp
leave
add
leave
jmp
sub
xchg
addb
cmp
mov
rorb
ret
cmc
out
cmp
nop
stos
add
daa
push
aad
bound
fistpl
sub
push
ret
push
in
cmp
jb
cmpsb
dec
pop
imul
imul
sbb
mov
inc
cmp
imul
and
pop
push
xchg
stos
inc
push
sub
mov
aad
cli
out
adc
pop
or
cmp
scas
add
cmp
int
pop
out
movsb
jmp
or
mov
mov
fstl
ret
mov
mov
adc
mov
and
or
aas
xchg
pushf
jg
push
es
imul
test
xchg
outsb
xor
cmp
and
mov
imul
cs
pusha
adc
out
ret
jne
enter
repz
xor
jae
push
cmpb
or
cwtl
mov
sti
push
mov
insb
push
test
dec
xor
push
fsts
xchg
xor
push
adc
jns
es
rorb
das
xchg
sub
mov
mov
stos
mov
dec
pop
push
push
xchg
xchg
fwait
enter
movsl
push
adc
mov
shrl
jnp
jne
out
adc
in
nop
dec
mov
leave
push
add
aas
mov
stos
and
clc
and
or
jge
adc
aaa
fsubrs
pushl
adc
lcall
adc
scas
and
jle
clc
jg
loop
sub
or
movsb
stc
orb
xor
or
push
mov
inc
orb
int
xor
pop
pop
jne
push
or
rolb
jns
movsb
sti
or
xor
pop
jmp
push
pop
mov
xor
in
inc
cmp
or
adc
mov
sub
and
or
insb
inc
fstl
nop
cmp
and
aaa
jno
push
sub
xchg
pop
loop
or
inc
add
frstor
mov
lods
lods
lcall
cli
push
or
addb
mov
sbb
enter
or
test
in
ret
movsl
js
push
mov
sbb
jno
or
test
test
or
test
mov
inc
sbb
in
les
pop
push
sbb
popa
jae
cmpl
jecxz
leave
inc
pop
jecxz,pt
ret
int3
dec
add
ss
test
dec
jae
xchg
add
pop
and
mov
mov
lods
add
jg
scas
mov
jecxz
je
test
ss
cmp
adc
add
mov
mov
fimuls
arpl
outsl
pusha
add
dec
and
push
popf
add
test
mov
loopne
jl
dec
sbb
sbb
inc
pop
pmulhw
sub
in
int
pusha
or
inc
dec
repnz
call
add
mov
dec
add
gs
loope
sbb
add
push
test
and
jo,pt
int
lods
add
mov
xchg
xlat
pusha
push
push
fsubrs
jecxz
xlat
jo
fiadds
movsb
pop
fcomps
incb
jle
mov
mov
xor
call
push
sbb
aaa
ss
pop
push
add
adc
hlt
subb
sbb
adc
cmpsl
sub
inc
hlt
jg
sub
sbb
jae
lods
adc
das
outsb
popa
loopne
mov
push
mov
imul
push
cmp
sbb
lods
and
stc
mov
mov
or
mov
inc
pusha
pop
pusha
ja
js
sbb
stos
sub
dec
mov
jle
imul
hlt
mov
lahf
add
add
mov
mov
rorb
sbb
fimuls
cmp
cmp
adc
aam
orb
movb
lea
add
shrl
push
lock
mov
and
addb
add
xor
into
sbb
xor
cmpb
add
sbb
adcl
mov
xor
or
push
add
add
mov
or
mov
jmp
mov
mov
adc
sub
int
test
xor
aad
cltd
push
adc
push
aam
mov
xchg
add
int
in
ret
fiaddl
outsl
push
mov
dec
push
adc
and
loopne
jmp
sbb
push
test
cmp
add
mov
dec
xor
sub
sbb
jecxz
or
push
inc
das
jl
jmp
cmp
dec
adcb
push
mov
cmp
push
fstpl
andb
cmp
sbb
push
shlb
or
add
bound
loope
je
testl
push
divl
mov
and
xor
cmp
test
xor
ss
push
push
test
inc
jne
insl
mov
stc
cmp
out
ds
pop
cmp
mov
adc
push
push
mov
dec
sub
push
and
pushf
and
and
pop
or
xor
adc
sbb
fdivs
cmpps
inc
add
jns
js
sete
mov
xchg
andl
daa
movsl
ficompl
sub
insb
lea
out
adc
dec
pushf
add
push
push
and
rcrl
adc
and
ret
mov
jne
mov
test
ret
mov
stos
jmp
orb
add
push
add
clc
xor
pusha
jo
outsl
popa
sahf
add
test
jg
pop
jmp
xor
sub
cmc
inc
out
adc
jp
push
push
fistpll
xor
es
cmp
and
mov
inc
in
push
push
mov
inc
push
add
dec
dec
iret
scas
or
dec
loope
xor
fwait
ss
and
out
and
out
sbb
lds
mov
push
push
sbb
jl
ja
push
push
and
dec
loope
repnz
adc
imul
dec
xor
pop
aas
aaa
sub
add
std
push
rorl
les
jmp
xchg
adcl
setge
sub
push
sub
jle
sub
xor
sbb
sbb
cmp
sbb
dec
lock
inc
add
xor
cmc
or
and
dec
pop
inc
sub
push
or
xchg
bound
xchg
and
loopne
int3
inc
mov
push
sbbb
adc
mov
inc
sbb
mov
scas
test
or
ljmp
lds
pop
add
adc
push
fwait
movsb
dec
mov
inc
mov
mov
je
mov
pop
dec
pop
push
jle,pt
stos
inc
out
dec
sbb
or
shlb
or
cmp
push
jno
lret
or
not
mov
cmp
and
push
movsb
jns
cld
and
add
adc
ss
xor
bound
call
push
andl
pop
or
sbb
or
nop
test
xchg
mov
cs
fisttpl
loopne
inc
push
push
icebp
fcoml
jns
and
sbb
adc
sbb
push
push
out
fcmove
xchg
sbb
push
cltd
sub
and
add
sbb
pop
push
mov
jno
xchg
cmp
xchg
outsl
mov
sub
or
sbb
jbe
inc
mov
add
push
dec
or
push
mov
adc
or
shll
pop
sbb
loope
lcall
push
sub
mov
or
xchg
fnstsw
xor
cmp
xchg
push
je
and
mov
in
fsubrl
sbb
sbb
mov
dec
stc
mov
cwtl
movsl
mov
rcrb
or
mov
sarb
daa
jne
and
mov
stos
pop
mov
jg
imul
xchg
mov
test
je,pn
push
mov
inc
incl
rol
popa
dec
dec
mov
pop
xchg
add
inc
or
or
or
mov
jg
mov
shll
xor
hlt
cmp
jne
jl
test
cld
repnz
ja
bnd
cld
push
push
push
loop
jbe
cmp
int3
loope
imul
stc
aaa
testl
mov
mov
loop
call
sti
adc
xchg
sub
mov
loop
sbb
jae
data16
dec
mov
lea
adc
add
cmp
ljmp
lds
rorl
push
push
imul
inc
pop
call
out
or
adc
test
sub
sub
cmp
sub
xor
out
or
pushl
mov
inc
pop
push
inc
jl
mov
cmp
int
inc
clc
jg
mov
sbb
sbb
test
bsr
jae
nop
or
fsubrs
insl
out
out
fwait
lods
inc
add
and
movsb
cmp
add
pop
inc
test
sbb
outsl
int
jb
es
mov
mov
mov
sar
bound
dec
lea
pusha
cmpb
push
bts
lahf
add
mov
cmp
push
rclb
adc
inc
shlb
add
sub
filds
mov
sbb
mov
fstpl
add
cmp
push
cmp
mov
pop
cmp
cmp
jge
and
sbb
pop
cmp
add
adc
jo
cli
xchg
xchg
mov
push
movl
pop
xchg
push
es
outsl
jno
lcall
pop
push
inc
loopne
loop
pop
sbbb
aas
js
pop
push
adc
sahf
jl
mov
push
jg
push
add
ds
rol
repz
push
ret
enter
cs
loopne
shll
dec
cld
sub
loope
add
dec
add
mov
inc
push
inc
mov
out
jo
loop
xchg
push
mov
hlt
sub
push
ret
out
or
push
pop
ret
xor
je
push
popa
sub
fisttpl
sub
push
lods
jo,pn
fimull
pop
shl
mov
loopne
jmp
hlt
add
hlt
push
adc
xchg
sbb
xchg
pop
push
adc
sbbl
cmp
and
je
mov
sbb
adc
xchg
inc
imul
mov
pop
sub
push
push
mov
adc
stc
loopne
push
sub
cmc
out
outsb
or
shlb
inc
insl
inc
jle
cmc
mov
lcall
or
aas
dec
inc
addb
jle
or
loopne
js
push
call
push
jns
ret
mov
or
lahf
xorb
pop
enter
outsb
ret
mov
xchg
scas
pop
cwtl
xchg
scas
sbb
and
and
xlat
add
cmp
adc
imulb
push
ret
dec
xlat
popa
jne
adc
sbb
jecxz
adc
add
dec
and
or
sti
sbbb
pop
mov
jl
mov
and
adc
cmp
insb
or
mov
lock
inc
inc
inc
mov
cmp
jne
loop
mov
pop
pop
outsl
test
pusha
mov
loopne
add
lret
or
shll
push
ret
or
das
mov
mov
mov
xor
shlb
aas
addl
int
cmp
cmp
add
xchg
lret
push
outsb
push
add
and
sbb
xchg
rcll
fidivs
lods
shrl
mov
push
pop
mov
pop
hlt
push
rolb
jae
lea
jbe
or
mov
sbb
int3
and
inc
pop
pop
mov
ret
add
rol
loopne
inc
pop
pusha
sbb
xorb
sbb
mov
orb
movb
inc
or
orb
add
adc
inc
imul
mov
addl
loope
xchg
sbb
lcall
adc
add
je
sub
stos
mov
movsb
pop
stos
add
add
or
cmpsb
push
mov
loope
pop
push
pop
jb
add
xchg
or
sub
mov
in
mov
ret
or
or
aas
iret
mov
lcall
test
push
mov
lock
arpl
add
inc
pop
cli
sbb
test
push
cmp
mov
sub
test
or
and
push
lds
push
inc
loope
jmp
xchg
shrl
jl
daa
mov
stos
cmpsl
lret
popf
movsb
add
fsubrl
rcrb
shlb
pop
sub
jmp
inc
subl
sbb
setge
add
sbb
movl
cmpps
push
roll
jmp
push
and
add
mov
mov
fldt
jmp
sub
jne
loope
or
lock
push
js
add
jmp
ss
mov
enter
xor
and
cmp
xchg
push
add
pop
push
push
sbb
mov
xchg
xchg
jle
push
dec
add
notl
and
push
add
sub
cmovle
lea
mov
or
cmc
adc
dec
xchg
mov
xor
xchg
jmp
or
imul
aam
ret
push
xchg
jecxz
mov
pop
xor
push
dec
cmp
adc
sbb
xchg
adc
adc
sub
repz
pop
repnz
push
test
cmp
mov
push
jns
mov
mov
sti
shlb
cmp
addr16
push
ds
and
add
xchg
loopne
mov
ljmp
lods
fisubrs
sub
jb
gs
add
xorl
sti
je
popf
xchg
inc
popa
jge
popa
es
mov
xchg
into
add
sbb
or
pop
add
sbb
add
xor
push
std
movsb
setle
push
sbb
jnp
fldenv
sahf
sub
xor
mov
inc
add
adc
cwtl
sbb
les
adc
xchg
rcll
mov
stos
xchg
push
in
add
pop
loopne
pop
jne
cld
cmp
mov
lds
mov
add
mov
push
mov
inc
add
sub
ret
push
inc
adc
pop
and
push
roll
cmp
push
push
aad
pop
pop
sub
jecxz
mov
ret
outsl
push
add
sti
jns
add
xchg
cli
and
imul
cmp
and
pusha
dec
sub
push
cltd
dec
jmp
test
rcrl
ffreep
stos
or
adc
insl
or
pop
in
xor
pslld
mov
push
jmp
in
sub
or
movl
add
xor
sahf
movsb
xor
push
add
xor
stos
jno
ficompl
push
add
mov
xchg
lahf
ds
cmp
insb
ds
sbb
mov
pop
jae
aas
push
adc
mov
aas
and
xchg
mov
sub
xor
and
jle
rcrb
cmpb
add
inc
test
jb
and
or
jno
out
pop
rorl
stos
out
es
adcl
adc
roll
aaa
stos
push
adc
jecxz
inc
sbb
stc
and
dec
inc
mov
push
mov
and
arpl
les
xor
inc
add
ret
enter
dec
divb
push
push
sbb
push
inc
cmp
nop
cmp
and
add
sub
sub
sub
jl
popf
movsb
je
mov
push
dec
push
dec
ds
dec
add
shlb
popf
and
sub
add
cmp
stos
xor
insl
sub
push
test
and
and
push
rol
outsl
adc
sub
push
insl
cmp
cmp
cmp
das
inc
loopne
mov
in
popa
cmp
call
cmpsl
ret
orl
dec
movsb
push
fimuls
push
mov
arpl
js
sub
movsl
jle
add
mov
or
sub
and
push
inc
lods
mov
add
xchg
pop
clc
addps
inc
xchg
and
inc
add
xor
xchg
lock
lea
lcall
lcall
inc
sub
mov
movsb
insl
sti
inc
fisubrl
adc
bndstx
scas
flds
test
sbb
divl
push
stos
pop
imul
push
mov
and
sti
adc
test
or
mov
jg
mov
mov
js
mov
scas
push
mov
pusha
push
inc
or
mov
mov
and
rorl
jl
dec
xlat
lret
or
pop
mov
or
leave
xor
cmp
vpunpckhbw
inc
mov
lret
push
push
mov
jo
cmp
pop
and
pusha
arpl
test
test
jge
xlat
std
xor
inc
dec
push
loopne
fildl
dec
scas
or
inc
dec
xor
sub
dec
stc
and
xor
sub
mov
pop
inc
mov
adc
stos
movsb
mov
add
push
or
or
ret
dec
inc
xchg
lock
ljmp
add
dec
add
test
je
lea
test
push
aas
add
rcr
fildl
sub
lea
scas
add
xor
pop
cmp
jb
pop
pop
adc
fwait
js
nop
je
push
dec
sti
cmp
sub
inc
sub
and
inc
pop
add
add
push
ror
jl
mov
test
aas
mov
mov
sub
imul
add
in
in
test
xchg
mov
cmpb
jno
mov
sub
or
jge
lret
fisubl
jo
or
push
xchg
add
cmp
loopne
aam
sahf
fists
and
or
fbld
sub
sub
lea
add
sarb
pop
push
push
push
push
xor
decb
push
push
push
push
test
outsb
test
adc
lcall
xchg
push
add
add
push
movb
mov
rol
xor
mov
pop
ljmp
and
andb
add
sub
or
js,pn
jg
ja
sbb
mov
stos
pop
add
cmp
adc
js
lcall
dec
js
add
imul
and
test
push
mov
scas
dec
jno
mov
xor
jmp
sbb
sub
andb
push
push
or
xor
mov
lea
jmp
mov
jnp
dec
sub
test
int
mov
or
jge
pop
pusha
sarl
and
adc
sbb
mov
sub
outsb
jb
xchg
push
push
je
jo
mov
ljmp
outsb
or
adc
imul
mov
xor
or
pop
lret
mov
mov
and
in
testl
add
sbb
cmp
jg
ret
add
cmp
js
jo
push
call
xchg
or
sub
adc
icebp
popa
mov
mov
mov
shll
lock
push
and
pop
imul
lock
es
push
and
mov
test
adc
add
inc
in
mov
xorl
mov
cmpsl
lds
inc
out
jne
fiadds
jge
inc
jl
addl
out
dec
pop
das
pop
add
cmpsl
add
fstps
sbb
sub
and
filds
std
scas
pop
mov
mov
cmp
je
push
jle
dec
pop
or
push
inc
sbb
sahf
push
xor
sbb
mov
adc
mov
push
not
xor
in
mov
sub
push
rorl
mov
push
push
mov
sbb
pop
nop
pop
orl
outsb
mov
inc
cld
xor
idivb
sahf
out
cmp
add
rorb
xchg
inc
sbb
or
stos
xor
call
dec
jmp
xor
aad
sbb
cmp
int3
adc
rolb
xor
ja
inc
mov
add
outsl
pop
xchg
xor
adc
mov
dec
shlb
mov
roll
cmp
push
add
mov
fsub
lock
push
or
icebp
pop
adc
pop
lock
push
jbe
js
aas
xor
aam
push
dec
cwtl
fadds
cmp
pop
push
clc
sbb
pop
pop
ss
pusha
cmp
and
adc
pop
ret
cmp
ret
fwait
cmpsb
imul
adc
add
jo
fildll
push
rolb
cmp
inc
or
inc
inc
cld
xor
xor
push
bound
addl
imul
movl
mov
fdivrp
and
cmp
dec
sar
ret
mov
add
nop
dec
lock
cld
adc
or
dec
in
lea
adc
cld
inc
sbb
fistl
stc
xor
stos
push
out
xchg
je
pop
fsts
push
jnp
cmp
jae
je
sbb
aaa
mov
bound
jg
roll
movl
inc
je
les
pop
mov
loopne
pop
or
jae
push
loopne
pushf
and
push
into
add
sub
xor
sub
or
sub
cmp
sub
push
test
test
inc
add
inc
jge
mov
ret
jge
movb
cmp
ret
dec
imul
or
cld
sub
and
or
cmp
adc
call
cmp
lea
jne
push
push
mov
push
adc
lock
mov
mov
push
dec
push
cmp
mov
js
lfs
jb
cmp
test
fsubrs
jae
movsb
cli
clc
dec
test
call
mov
loope
jo
mov
in
pop
movl
xchg
and
pop
push
add
jb
inc
fcomps
and
add
pop
add
jg
xor
push
mov
mov
dec
push
xchg
mov
ret
adc
out
out
outsb
mov
movzbl
xchg
loopne
pop
ja
adc
movsb
sarl
pushf
or
stc
and
or
add
ret
xchg
sub
push
add
or
pop
in
lods
mov
aas
and
inc
add
jns
push
inc
js
and
repnz
mov
adc
push
mov
mov
add
mov
xchg
out
push
sub
cmp
ret
lahf
xlat
lea
sbb
jg
push
push
into
in
test
and
xor
in
sbb
pop
mov
aaa
test
mov
in
dec
inc
das
je
sarl
jne
je
push
sti
in
je
or
jne
mov
inc
je
mov
pop
inc
jl
lea
dec
cs
sahf
inc
ss
inc
sbb
cmp
or
popa
lea
jmp
inc
cmpb
ret
lcall
sbb
and
add
or
decl
hlt
add
sub
inc
jmp
inc
mov
push
js
inc
mov
push
movsb
loop
fimull
mov
pop
fstpl
inc
sbb
sub
cmp
mov
or
push
orb
je
js
jg
push
mov
mov
adc
and
inc
jecxz
adc
and
loopne
dec
and
sbb
fdivrs
cmp
stos
jne
cmp
xlat
and
mov
jl
jb
dec
adc
je,pt
sub
movsb
cmp
adcb
ret
dec
push
sub
inc
lsl
add
cmp
jl
jne
aam
cld
push
push
movsb
sbb
sub
mov
mov
mov
das
enter
cli
and
add
fld
or
mov
cli
inc
cmp
jb
cmp
ja
pushw
shlb
xor
outsl
fdivrp
jmp
cmp
jb
cmp
ja
and
ljmp
cmp
fwait
xchg
fldcw
rolb
cmp
cmp
push
cmp
add
fdivs
sbb
mov
add
mov
outsl
pop
test
cs
sub
add
jmp
adc
sbb
cwtl
aas
xor
and
lcall
leave
add
mov
je
add
test
stos
jne
ret
push
test
mov
and
mov
fildll
mov
jmp
push
pusha
aas
xor
ret
cmp
jne
adc
dec
test
loopne
call
mov
or
insb
and
xor
loop
jmp
xchg
xchg
lret
cmp
orl
dec
adc
add
adc
and
test
je
sahf
fists
je,pn
test
jne
into
sub
or
add
jmp
cmp
xchg
orl
mov
add
inc
push
push
notb
or
mov
lret
push
pop
jmp
add
push
inc
sbb
sbb
inc
dec
outsb
jle
add
and
add
int
ret
int3
mov
adc
in
call
add
jbe
fidivrs
in
pop
ja
ret
fimull
jg
aam
call
inc
repnz
cltd
pop
push
cmc
cmp
pop
sub
pop
imul
cld
inc
mov
adc
aam
ret
ret
xorl
xchg
jle
sbb
pop
jl
xor
cltd
clc
shl
sahf
add
cmpb
sbb
inc
imul
shrl
repz
sti
ljmp
mov
pop
add
repz
sbbb
sub
je
scas
aam
sti
sti
shrb
push
das
mov
or
mov
mov
imul
mov
jge
mov
inc
and
fcmovbe
pop
cmp
inc
fs
subb
dec
out
add
jg
test
fcomp
inc
fiaddl
push
ret
sub
and
jo
leave
or
cmp
inc
movsl
cmp
aam
test
add
vandnps
mov
sub
add
loopne
mov
sub
cmc
lret
decl
dec
and
adc
je
cmp
je
lret
or
jecxz
add
push
lock
es
lcall
or
fcompl
cmp
pop
jmp
fadds
dec
push
xor
decl
or
mov
cmp
or
mov
add
sbb
je
add
cmp
je
xchg
add
out
les
inc
addb
add
ja
hlt
mov
into
mov
push
mov
mov
mov
xchg
jmp
xchg
test
cmp
je
push
rcll
dec
jo
stc
roll
push
xchg
out
out
bound
test
push
out
pop
in
xchg
mov
inc
push
xor
xor
nop
cmp
adc
sub
cmc
sbbb
je
sbb
pusha
jb
mov
push
dec
add
pop
jb
mov
loope
add
jl
xor
pop
clc
pop
push
idiv
pushf
cmp
je
lea
mov
mov
popl
mov
mov
push
repnz
cltd
cmp
push
push
lahf
mov
insb
pop
inc
mov
jge
fsubs
mov
jb
mov
repnz
inc
int
lea
mov
adc
js
test
push
lods
jg
mov
lds
or
inc
or
jg
inc
jno
hlt
and
push
lea
jge
pop
jnp
xchg
mov
enter
add
stos
xchg
inc
movsl
xor
sub
or
or
xchg
jne
inc
pushw
sub
andl
cmp
inc
dec
xchg
or
out
pop
leave
push
jo
jg
lahf
xchg
and
push
and
movsb
mov
sti
ja
dec
and
and
add
sti
sub
or
cld
ss
xor
cmp
shl
adc
mov
out
and
aam
pop
xor
cmc
or
mov
inc
and
dec
cld
sub
sbb
adc
cwtl
mov
sahf
clc
fistps
push
xor
mov
mov
mov
pop
cmp
cli
pop
jae
test
pop
out
gs
movb
jne
filds
cmpsb
mov
add
sbb
xor
cmp
jne
adc
push
imul
iretw
cmpsb
iret
cmpl
dec
stos
mov
scas
inc
mov
add
sarl
add
mov
fildl
addb
jmp
push
addb
jae
shlb
cmp
mov
sbb
pop
cmp
inc
mov
lods
and
inc
jne
pop
movb
inc
bound
cmp
jns
mov
xorb
jbe
ret
add
mov
shll
mov
xor
out
sub
dec
mov
push
ficomps
mov
sub
mov
je
inc
or
repz
jne
stos
and
and
sub
sbb
das
clc
jmp
mov
push
xchg
push
sub
mov
inc
shll
jmp
lock
cmp
je
cmpb
cmp
jne
movb
sbb
cmp
outsl
gs
cmp
adcl
js
inc
inc
inc
inc
mov
fidivs
inc
repz
addr16
test
adc
mov
xchg
scas
pop
xchg
sub
sahf
add
xchg
cli
int3
xchg
inc
mov
out
icebp
adc
push
stos
out
mov
cmp
or
imul
mov
pop
lods
push
ffree
inc
inc
mov
int
aam
sarl
pop
cmp
rorb
adc
incl
xchg
and
js
inc
jo
cmp
inc
popf
adc
insb
jne
and
pop
add
inc
dec
cmp
rclb
test
or
jmp
cmp
xchg
enter
je
or
je
push
pop
jne
shll
push
aad
sbb
rorb
push
not
adc
sub
dec
mov
in
lcall
xchg
outsb
lods
mov
subb
in
dec
sub
xor
out
aas
xchg
cmp
or
rorl
add
nop
dec
sbb
aam
sub
lea
idivb
push
cmp
outsl
jne
push
out
cmp
std
push
lea
xchg
dec
pop
xchg
xchg
loop
inc
and
or
or
sub
mov
or
dec
xor
mov
xor
cmp
hlt
jb
dec
adc
mov
or
cmpsl
test
ret
roll
jl
cmp
mov
sub
sarb
push
jge
cmp
or
mov
mov
int3
insl
loope
fcoml
and
insl
mov
lret
add
pop
add
sbb
mov
push
inc
loop
popf
pop
scas
cmp
repnz
push
ds
or
enter
in
add
rcrl
and
push
sub
push
inc
ret
sub
jo
dec
mov
decb
mov
pop
add
or
lcall
adc
mov
xchg
test
push
push
fdivrs
les
dec
mov
dec
dec
bound
into
mov
cmp
adc
or
lret
dec
or
mov
sbb
sub
sbb
push
add
lock
sarb
add
je
push
push
or
mov
insl
mov
adc
movsl
in
ficoml
or
xor
sbb
sbb
pop
push
pop
dec
in
stc
push
cmp
jle
mov
je
xchg
inc
inc
or
dec
xor
pop
push
ds
xor
daa
pop
sbb
mov
mov
sbb
in
dec
ljmp
or
mov
cmpb
push
je
pop
jo
nop
in
add
push
inc
mov
adc
pop
in
pushf
or
xor
pushf
mov
dec
data16
sub
xor
fs
push
ret
dec
nop
in
push
xor
adc
pop
push
adc
fs
cmp
dec
fwait
imul
jb
pusha
push
fistpll
xchg
and
sub
jle
or
popa
lock
dec
into
pushf
push
mov
test
or
xchg
test
and
out
call
cmp
das
adc
imul
les
mov
sub
sub
inc
popl
xor
cmpsl
cmp
in
movhps
inc
fldt
sub
pusha
xchg
sub
fidivs
lods
rcll
ljmp
into
fimull
shrb
cmp
adc
add
outsb
sub
and
loopne
push
cmpsl
dec
or
push
pop
jmp
jns
add
ljmp
sbb
pusha
pusha
jbe
fidivrs
adc
into
pop
mov
cltd
insb
xor
mov
xor
hlt
adc
js
sbb
in
stos
sbb
aam
mov
fidivl
fisttpll
and
pop
dec
popa
enter
mov
out
jne
xor
pop
sbb
sbb
push
mov
sbb
les
pop
pop
jecxz
and
popa
or
sub
pop
leave
int3
mov
ret
or
pop
jecxz
mov
pop
cmp
dec
faddl
jno
cmp
jl
sbb
or
adc
les
pop
lahf
jbe
outsb
aaa
push
cmp
jne
push
push
xorl
dec
or
push
ffreep
imul
push
inc
push
push
adc
sarl
inc
adc
ds
push
mov
es
cmp
and
mov
pop
les
add
pop
ret
xor
es
sbb
add
je
xor
leave
mov
lock
jmp
sub
scas
movl
sahf
xor
inc
dec
xor
adc
ret
mov
jbe
dec
shll
cmp
and
jae
sbb
jle
mov
popl
jmp
in
pop
jno
sbbb
inc
fcmovnbe
fs
mov
or
jbe
nop
std
add
sbb
jge
loopne
lret
imul
add
add
pop
aam
orl
sub
xor
js
loopne
push
stc
test
and
rcll
or
adc
stc
int
jecxz
hlt
and
cs
push
or
lods
or
rcrb
lods
int
lret
pop
pop
dec
icebp
xor
cmp
push
xor
jo
mov
ror
dec
or
aas
lret
test
or
or
add
inc
inc
or
xchg
jnp
sbb
add
dec
push
dec
pop
imul
sub
icebp
mov
hlt
stos
jb
adc
sbb
neg
mov
enter
pushf
jg
inc
js
sbb
adc
push
xor
xchg
push
jo
pop
jge
jmp
lods
and
mov
and
jae
shll
shlb
mov
mov
cmpsb
inc
push
push
test
sbb
push
mov
mov
dec
arpl
icebp
clc
xor
and
loope
mov
mov
xor
mov
and
add
mov
sbb
xlat
mov
and
and
out
mov
enter
add
rorl
jg
or
bound
pop
popf
scas
add
xchg
cs
xlat
push
test
or
pop
enter
adc
push
sub
dec
dec
mov
inc
decb
and
adc
lahf
lock
cmpsb
out
or
fsub
xchg
pop
lea
sti
mov
mov
rcr
add
cld
lods
je
add
jne
cmpsl
add
and
fstpt
imul
addr16
cmp
xor
cmpsb
xor
push
aam
dec
loop
loopne
jl
cmp
test
add
imul
xor
add
je
and
pop
add
push
lock
or
sub
or
xor
jp
add
arpl
mov
cmp
xor
adcl
scas
mov
dec
mov
xor
test
cltd
fwait
xorb
mov
sbb
loopne
push
add
sbb
or
add
mov
sub
cmp
push
xor
push
repnz
add
inc
test
lahf
add
cmp
addb
sub
add
and
loopne
pushl
sbb
inc
push
sub
loop
add
or
and
pop
xor
adc
dec
add
aaa
mov
mov
iret
adc
mov
int3
sahf
sbb
ss
aas
fcomps
push
iret
int3
push
xor
sbb
adc
and
ss
movsl
or
enter
add
fs
aam
push
addr16
pushf
dec
or
mov
and
outsb
and
fcmovnu
sub
or
test
mov
test
or
add
insl
inc
or
xor
shufpd
cmc
or
inc
ficoms
loop
jp
dec
subb
push
mov
roll
inc
xchg
cmp
sub
mov
adc
fimuls
mov
sub
or
add
mov
push
jbe
shlb
into
mov
int3
xchg
push
ret
cwtl
dec
insb
ret
push
fwait
lea
adc
ss
popa
cld
lea
add
inc
sub
or
cmc
roll
jl
add
pop
mov
int3
lea
call
popl
dec
sbb
mov
arpl
xchg
adc
or
jnp
inc
and
push
sbb
xor
stos
push
and
mov
push
les
call
xor
sub
push
into
add
loopne
push
dec
adc
fldl
jp
xchg
lahf
xchg
ret
sub
sbb
mov
stc
leave
xchg
xor
jo
loopne
jg
adc
lods
test
popf
lahf
xor
sub
std
test
inc
and
in
and
adc
inc
push
pop
movsl
and
pop
sbb
sbb
loope
pop
pop
add
add
clc
add
and
pop
xor
lret
cmp
add
dec
add
push
mov
pusha
cmp
xchg
ss
negb
mov
roll
mov
and
cmp
sahf
out
lret
sbb
and
sbb
adcb
pop
adc
or
sbb
and
cmp
andl
arpl
cmp
lcall
xchg
xchg
popa
sarl
lret
xchg
faddl
pop
and
sbb
sbb
pop
xchg
js
dec
sub
jb
in
adc
push
xchg
and
ret
and
or
cld
pop
test
add
add
cmp
add
mov
cld
jns
enter
adc
pop
aam
or
shll
adc
lods
sahf
mov
js
xor
and
in
adc
lock
cmp
test
adc
xor
out
lahf
cmp
clc
xor
jne
dec
mov
and
or
shlb
or
adcb
add
shll
and
cmp
out
test
push
call
add
push
rcrb
and
ffree
sbb
push
jmp
push
xor
jecxz
in
mov
xor
add
inc
rcr
aas
scas
repz
in
cld
xor
cmp
pop
sete
sbb
loopne
out
pop
xchg
out
push
xor
adcb
inc
and
adc
cmp
adcl
hlt
out
cli
xchg
sbb
sbb
cmp
add
and
adcb
rcll
mov
mov
sbb
leave
daa
sub
and
sub
mov
and
push
out
and
sub
add
leave
sub
stc
out
add
inc
sub
mov
mov
or
inc
out
mov
sub
and
and
mov
sub
fadds
adc
and
scas
das
mov
lods
push
pop
jne
mov
xchg
aad
dec
mov
push
test
sub
mov
dec
push
add
rdmsr
sub
cld
test
add
adc
sub
mov
push
sbb
negl
pop
mov
pusha
bound
dec
insb
and
sub
pop
enter
cmp
in
mov
cmc
adc
inc
xor
dec
pop
xor
dec
test
add
js
stos
pop
dec
mov
mov
shlb
sbb
pop
stos
mov
insl
cltd
pop
push
and
sbb
es
fdivl
cmp
fnsave
dec
mov
mul
sbb
add
mov
dec
pop
sar
cmp
gs
xor
dec
mov
call
push
ss
adcb
aaa
js
pusha
inc
or
fprem
pop
dec
xor
sub
or
cmpsb
add
and
daa
inc
adc
jecxz
das
add
jne
sub
test
cs
mov
inc
inc
jnp
mov
push
mov
rclb
add
dec
mov
test
test
sub
push
clc
cmp
mov
dec
out
xor
mov
pop
repnz
jmp
sbb
int
mov
sbb
mov
fs
and
test
push
or
push
inc
inc
xor
nop
cmp
ljmp
and
dec
or
adc
and
test
jbe
xchg
ret
mov
xchg
and
jmp
lret
in
inc
pop
icebp
adc
inc
aas
mov
sub
testl
xor
inc
pop
inc
cmp
fidivrs
add
add
xorb
jmp
pop
mov
mov
pop
push
shll
or
mov
clc
je
or
push
repz
cld
mov
jge
inc
mov
add
mov
or
sub
push
adc
mov
push
int
shll
shlb
sbb
xor
lret
mov
mov
cs
and
sbb
push
sbb
nop
outsl
popf
pop
and
dec
xchg
push
cwtl
add
sub
cmpsb
mov
push
lea
ljmp
mov
orl
arpl
adc
add
nop
adcb
sub
adcb
push
pop
movsl
sub
pop
push
pop
xchg
jne
fiadds
sete
inc
or
pop
filds
jnp
sbb
aaa
sbbb
movsl
sbb
nop
sbb
push
add
and
dec
stc
and
dec
push
or
sbb
jl
sbb
pop
sub
jge
xor
add
jae
gs
orl
jnp
or
decb
cmpsl
rclb
add
out
stos
pop
test
test
sbb
imul
push
push
mov
stos
xchg
insb
ja
nop
or
shlb
shrl
popa
push
insb
jne
gs
or
shrl
daa
sbb
push
or
push
add
lock
lret
xor
and
ret
sbb
int
pop
dec
or
mov
loop
mov
pop
adc
pusha
jg
xorb
push
insb
loopne
inc
mov
adc
inc
loopne
fldt
adc
push
adc
insb
inc
inc
scas
pop
cltd
stos
data16
add
pushf
out
jns
or
dec
sahf
mov
sahf
mov
add
mov
inc
es
imul
and
test
inc
mov
cmp
pusha
loop
inc
pop
and
loopne
rcrl
pop
bound
call
popf
pop
fiaddl
aaa
xor
or
push
dec
add
lahf
cmp
xchg
notl
jne
adc
sub
cmp
mov
inc
adc
xor
and
fldcw
jg
fs
or
jmp
push
cltd
pop
xor
and
add
inc
push
mov
adc
call
mov
shll
sysret
fcmovb
inc
outsl
pop
cmp
daa
or
adc
or
xchg
out
xor
or
xor
push
lods
in
pop
inc
or
sub
adc
sbb
jmp
test
add
pop
aad
and
mov
pop
inc
mov
outsl
cs
lock
clc
xchg
movb
js
arpl
adc
in
scas
mov
in
lret
lds
push
pop
dec
cmp
xchg
lods
lods
add
loopne
fistl
out
sbb
jnp
jbe
rorb
orl
pop
and
add
les
fwait
loopne
mov
or
push
lea
ror
es
adc
or
cld
cmpl
das
lcall
xor
rcr
ljmp
lret
cmc
sub
push
jmp
lea
mov
test
call
inc
mov
lea
cmpb
je
decb
add
adc
pusha
and
call
out
and
sbb
adc
inc
jg
jge
cmp
orb
push
push
dec
int
mov
mov
mov
test
xor
mov
ds
stc
and
pop
xchg
add
pop
jecxz
jnp
push
pop
sub
in
sbb
and
cmp
push
push
int3
xchg
jmp
push
aam
xor
les
popa
sub
mov
mov
add
sbbl
aaa
mov
or
xchg
push
or
inc
mov
mov
fwait
rcl
mov
mov
int3
ljmp
adcb
xchg
imul
sub
xchg
into
gs
pop
and
outsl
and
leave
adc
pop
pop
and
addl
js
push
movsl
mov
cmp
cmp
adc
and
adc
in
mov
mov
adc
and
inc
pop
mov
push
dec
xchg
push
push
jmp
lahf
inc
gs
test
adc
and
add
gs
jp
jnp
in
in
enter
dec
cmp
aas
cmp
pop
sbb
jb
inc
adc
or
out
dec
call
jmp
sbb
lea
adc
push
sbb
xor
xchg
loope
fsubs
aas
mov
movzbl
mov
or
mov
push
push
pop
and
add
cmp
cwtl
cli
test
insl
mov
jne
lds
add
and
push
sbb
inc
jle
outsb
add
movb
push
in
jmp
movsb
dec
pusha
mov
jo
jecxz
sahf
cmpl
xor
lcall
es
ret
add
or
int3
cmp
jmp
xchg
push
sbb
sbbl
ret
lods
daa
iret
iret
xchg
addb
bsf
pcmpgtd
pop
cmc
movb
lds
fimuls
addr16
inc
jg
xor
pop
push
jae
daa
push
or
dec
and
nop
in
or
or
roll
sti
xlat
or
xchg
push
loopne
fsubr
loopne
inc
bnd
lods
fisttps
add
dec
mov
outsl
inc
sbb
adc
sub
imul
rcrb
lods
clc
cmp
sub
xor
cmp
mov
addr16
test
lods
daa
pop
adc
push
mov
dec
pusha
sub
cmp
jg
in
mov
add
lea
je
aam
mov
add
movl
sbb
daa
inc
xchg
loop
out
pop
jg
addb
inc
popf
imul
xor
add
push
bound
aas
sbb
adc
cmp
je
adc
add
inc
pop
xor
fists
sub
adc
enter
cs
lahf
icebp
or
test
sbb
add
test
add
cmpsb
adc
jg
sbb
nop
stc
pushl
xor
dec
xchg
or
mov
movb
mov
movsl
clc
mov
jno
add
adc
xor
cmpsl
push
push
ret
les
xor
icebp
add
das
mov
xor
push
jbe
pop
sti
pop
mov
dec
push
sbbl
push
pop
subl
mov
and
add
shll
jbe
and
sbb
pop
xchg
dec
in
inc
or
cmp
call
xchg
outsl
mov
cmp
fistps
in
xor
add
add
mov
in
and
flds
add
push
pop
rclb
push
imul
enter
mov
and
sbb
enter
xchg
cmp
mov
outsb
out
xchg
push
push
jle
adc
ja
les
xchg
jo
or
or
or
ds
cmc
dec
mov
enter
imull
xor
pop
pop
jl
push
movsbl
jmp
inc
test
ds
mov
lcall
and
mov
pop
xchg
clc
dec
push
clc
sub
inc
iret
push
adc
push
leave
xor
pop
inc
jl
cmp
add
sub
xor
pop
cmp
fld
push
movsb
in
sbb
cs
push
scas
shlb
je
push
and
les
lock
push
mov
test
fdivp
out
or
sub
insb
add
adc
push
inc
push
or
arpl
sub
cmp
sbb
push
cmp
and
xchg
dec
add
mov
jl
pop
mov
clc
inc
cmp
push
xchg
jne
push
or
fadds
jbe
stos
push
pusha
mov
jbe
pop
test
jge
pop
stos
nop
cmp
xchg
adc
and
pop
xchg
pop
enter
jle
cmp
jae
mov
movsl
xchg
add
inc
jbe
push
add
sar
andl
jo
pop
fidivl
mov
pusha
pop
jbe
clc
dec
mov
lahf
mov
push
sub
enter
jmp
je
xchg
xchg
sarb
add
jns
insb
cmp
xor
xor
ret
cld
flds
or
es
fstps
and
mov
xor
adc
mov
jle
stc
mov
push
pop
add
inc
or
sub
and
and
sub
lods
dec
outsb
mov
jecxz
jo
fnstenv
mov
mov
mov
mov
sbb
in
rolb
scas
mov
inc
icebp
mov
bnd
push
int3
test
inc
cli
fstpl
pop
lea
adc
push
dec
sub
and
pop
rorb
sbb
pop
pop
or
out
js
sbb
lea
push
je
inc
cmp
cmpsb
scas
sarb
add
add
push
mov
movsb
push
rorb
or
push
push
outsb
cmp
mov
or
adc
add
push
xchg
je
push
ss
iret
sbb
xor
dec
in
mov
psubq
or
push
imul
inc
dec
adc
jo
and
and
mov
mov
je
fsubs
orl
dec
loope
xchg
aas
lea
fidivrl
in
mov
sub
mov
shlb
and
daa
mov
flds
sar
hlt
fmull
test
jl
xor
push
mov
mov
pusha
test
out
push
add
sarl
sbb
cmc
mov
sub
or
es
fimuls
and
icebp
lret
test
mov
ret
std
movsb
add
inc
push
inc
push
xor
insb
push
stc
aad
add
dec
shlb
dec
and
cmp
shlb
xor
lods
cwtl
nop
push
mov
and
or
mulb
call
mov
ja
leave
add
push
push
jp
push
fcmovnu
aam
in
mov
add
dec
sub
jg
pusha
jns
sbb
mov
jge
cmp
dec
insb
stos
addr16
outsb
in
cmpsl
dec
movsl
in
mov
sbb
add
cmp
test
adc
xchg
dec
test
mov
xor
pop
nop
ret
dec
lock
mov
pop
cmp
mov
sbb
inc
jmp
add
loopne
or
jl
stc
cmp
or
or
fstpt
mov
add
es
jne
mov
in
dec
push
push
ret
aas
test
fwait
mov
xor
mov
cmp
jge
push
pusha
jle
mov
push
push
mov
addb
adc
pop
clc
jg
mov
xor
fcom
or
push
fcoms
lret
mov
xor
cld
mov
add
ret
testb
loope
or
inc
test
mov
fdivl
xor
adc
aad
fwait
mulb
adc
add
stos
out
sbb
adc
jmp
mov
aam
cwtl
insl
pushf
fs
mov
ret
jmp
psubb
push
xchg
decl
push
or
and
rcl
lods
in
inc
cmp
inc
or
int
xor
std
push
jmp
cmpl
sub
addl
xchg
dec
in
dec
pop
push
repz
rclb
adc
pop
shrb
rolb
or
jae
xchg
adc
mov
lahf
cmp
and
cmp
cmp
xlat
dec
es
sub
inc
sbb
pmaxsw
mov
inc
dec
sub
fadds
insb
and
sbb
add
out
out
jns
rcl
fiadds
out
decb
faddl
add
lds
add
lahf
mov
add
xor
loop
cmp
mov
pushl
ljmp
cmp
stc
ljmp
jo
push
push
loop
arpl
jno
leave
sahf
dec
lods
outsb
addr16
ds
xor
jne
push
mov
push
jmp
add
lea
pop
ret
push
add
cmp
stos
sbb
stos
fidivrs
cmpl
xchg
into
mov
cltd
jp
or
push
sbb
js
test
daa
xorb
ja
add
and
dec
push
mov
je
test
sub
add
xor
add
popl
rcrb
mov
rcrb
mov
sahf
add
or
push
push
inc
xor
dec
xchg
inc
adc
fiaddl
jbe
sbb
or
into
dec
jo
or
push
dec
scas
movsl
out
adc
in
adc
nop
cmp
or
sbb
gs
out
mov
pop
mov
fiadds
int3
adc
int
or
mov
push
ds
nop
sbb
or
and
xchg
hlt
stos
mov
push
mov
lea
sub
icebp
inc
rclb
pop
insb
cltd
orb
cmc
sub
sar
inc
lea
lea
push
push
mov
add
sbb
adc
lods
popf
push
xchg
mov
push
inc
call
lock
and
push
push
push
cmp
jbe
mov
ds
cmp
hlt
adc
adc
sti
call
adc
jb
jmp
push
add
push
jle
ret
fwait
movsl
arpl
add
dec
xor
shrb
adc
bswap
sub
call
mov
in
xchg
sahf
mov
and
pop
adc
adc
bndstx
sbb
pusha
pop
jo
mov
xor
pop
adc
add
test
repz
push
arpl
inc
inc
aam
sbbb
push
rolb
nop
ficompl
rolb
push
jge
adc
mov
mov
shrl
faddl
in
int3
add
or
mov
pop
and
orl
cld
mov
mov
mov
add
inc
roll
hlt
adc
add
adc
jb
jmp
inc
cld
jne
cmp
pop
movsb
inc
push
mov
push
cmp
mov
int
aaa
outsb
sub
push
mov
push
mov
xor
cmpsb
adc
fdivrp
mov
dec
test
ficompl
mov
xor
mov
add
cmp
mov
add
push
dec
mov
add
lea
lcall
add
dec
mov
sbb
fcos
int3
inc
pop
jg
pop
jmp
test
cmp
int3
jmp
sub
sbb
ljmp
loope
pop
push
call
stc
pop
and
sbb
or
cld
xchg
ret
and
and
inc
dec
loop
lea
or
or
scas
push
sub
add
add
jl
imul
test
push
adc
push
div
jmp
push
int3
sub
loop
jo
imull
mov
loop
cmp
scas
pop
sbb
test
test
mov
xor
aaa
mov
clc
xor
pcmpgtd
out
adc
popa
push
insl
mov
sbb
test
rcll
aam
jmp
std
roll
or
enter
xor
or
ljmpw
push
adc
lea
sbb
xchg
fadds
cmp
cmp
add
jle
mov
adc
push
jmp
pop
cmp
mov
push
push
cld
pop
rcll
test
in
je
add
push
xor
js
mov
sbb
push
clc
jmp
pop
mov
lds
or
or
in
or
stos
ds
test
aam
in
push
jno
inc
cld
pop
inc
in
mov
mov
xor
or
and
jge
dec
in
or
ds
aam
fadd
out
jmp
js
mov
adc
cmpsb
dec
pushf
add
lea
adc
add
push
adc
imul
ficoms
test
mov
int3
xor
or
lea
dec
iret
xor
jp
pop
push
insl
testl
or
cmpb
push
cmpsb
dec
in
std
aam
stos
inc
mov
push
scas
aam
test
add
fstl
push
inc
clc
push
sub
mov
cmp
adc
adc
inc
inc
cmp
cmp
pusha
mov
mov
push
repz
adc
add
adc
mov
movsb
inc
push
add
and
adc
lock
add
movsl
and
or
adc
outsl
lahf
jg
xchg
mov
adc
mov
shl
add
inc
add
add
jmp
icebp
push
ficoms
ret
inc
lahf
push
imul
mov
loopne
xlat
mov
mov
jg
bound
mov
nop
jns
dec
add
enter
out
das
nop
pop
or
inc
and
inc
ficoms
mov
push
je
jnp
lock
data16
fsubrl
fs
call
fdivrs
add
pop
insl
mov
sub
dec
or
dec
cld
les
sahf
clc
sub
inc
sbb
adc
mov
dec
test
and
sbb
xchg
sbb
adc
js
lahf
pop
ret
ljmp
hlt
mov
or
or
cs
pop
push
mov
lods
rcrb
add
and
test
loop
inc
jmp
jle
or
cmp
ds
push
push
fstl
mov
mov
call
jns
clc
test
popf
sbb
lock
push
adc
test
fisttpl
repnz
and
and
or
fildl
sti
das
add
push
fadds
or
jl
add
mov
fucomi
dec
inc
add
or
fldcw
nop
es
mov
jp
add
dec
adc
jbe
mov
inc
add
fdivs
bound
inc
push
je
mov
dec
add
into
mov
push
push
in
and
sbb
pop
or
mov
loope
cmp
loop
mov
mov
pop
mov
inc
nop
mov
mov
cs
and
push
add
lahf
inc
mov
pop
inc
cmp
test
call
push
cli
lcall
js
dec
cld
mov
rclb
jp
mov
sahf
call
std
pop
mov
ja
jmp
inc
dec
cmp
and
xchg
stos
mov
xor
lea
das
and
push
out
test
sbb
fiadds
jo
ss
adc
adc
mov
push
xor
and
mov
iret
fidivl
adc
cmpsl
lock
adc
dec
jmp
aad
test
je
xor
cld
dec
inc
hlt
imul
push
rolb
repnz
int3
out
sub
jnp
pop
and
push
jnp
sub
pop
inc
ljmp
dec
adc
add
mov
pop
push
xor
adc
enter
or
imul
inc
pop
xor
loop
push
loopne
sahf
out
and
mov
xor
and
aas
dec
test
mov
rolb
es
fisubrs
sbb
lods
rcll
or
xchg
and
inc
cmp
xchg
add
fs
cli
cmovno
adc
pushw
add
lods
orb
add
pop
ret
mov
jns
fldenv
adc
stos
adc
int
lahf
in
jge
jl
xchg
lea
data16
je
ljmp
push
push
std
inc
out
jmp
lea
in
sti
fwait
into
pop
in
inc
hlt
push
push
rcrl
cmpsb
push
jbe
adc
sub
dec
pushf
add
dec
cwtl
hlt
lds
rolb
ficoml
inc
dec
jl
outsl
sbbl
jns
sub
or
popa
idivb
in
pushf
mov
xor
dec
cmp
or
jb
push
sub
jo
cli
insl
mov
inc
lock
sbb
xchg
cld
adc
shrb
xchg
je
outsl
pop
mov
imul
ret
pusha
push
movsb
cmp
gs
loope
js
mov
xor
mov
or
dec
popl
add
add
addl
or
fbstp
or
orb
xor
outsb
pop
call
mov
mov
mov
xor
daa
and
fisttps
push
stos
fisubl
mov
sbb
cmp
xor
cs
iret
xor
add
inc
cmp
dec
and
int3
and
cmp
gs
rolb
in
push
or
xor
imul
lret
inc
test
adc
in
testl
mulb
fiadds
dec
iret
mov
ja
fildl
fs
xchg
jmp
test
lods
ss
push
mov
imul
mov
jbe
or
pushf
push
cli
inc
sub
xor
push
cmc
aad
cmp
jne
sub
dec
push
call
lods
fstpt
je
inc
add
add
loop
jne
mov
mov
insb
daa
jl
aam
pop
xor
outsl
clc
adc
xor
sbb
push
and
lods
xchg
lret
dec
fldenv
sub
fs
push
jle
rcl
lock
jbe
pop
and
rcr
xchg
xchg
lds
adc
jbe
imul
addr16
cmp
jge
xor
js
cmp
jae
shlb
dec
sbb
dec
sbb
aas
ret
jo
pop
add
jg
sbb
les
adc
call
mov
inc
mov
pop
sbb
popa
jp
loopne
or
push
mov
or
adc
and
mov
jae
and
mov
aaa
and
push
or
sbb
imul
xchg
mov
dec
inc
lods
cmpl
aas
inc
jae
push
push
adc
jne
push
mov
mov
je
data16
insb
cmp
and
mov
cmpsl
xchg
add
les
call
in
dec
lea
icebp
or
dec
xor
cmp
mov
push
dec
push
outsl
andb
jg
scas
inc
adc
call
rclb
pop
fmuls
inc
lea
test
aas
mov
cltd
fs
adc
lock
adc
xor
mov
pop
xor
ja
adc
out
jge
pop
push
pusha
jb
pop
and
mov
repnz
add
or
popf
sub
or
decl
sub
add
rolb
out
and
pop
mov
int
and
xor
or
fidivl
adc
loop
sbb
push
and
mov
sbb
pop
loope
icebp
or
scas
push
loopne
arpl
mov
loopne
arpl
sbbl
pop
push
and
adc
sub
push
loope
mov
loopne
add
fwait
jmp
lea
mov
push
rclb
push
lret
pop
sub
adc
ss
mov
push
xor
test
jbe
stos
inc
adc
cmp
or
jne
daa
daa
clc
bound
cmpsl
ss
cmp
mov
mov
pop
add
jecxz
fwait
dec
pop
call
out
dec
jne
jo
sub
out
lahf
xor
add
sub
sbb
flds
jbe
or
and
pusha
movsl
jo
repz
lcall
sbb
mov
mov
dec
subl
add
sbb
insl
or
shll
push
dec
out
or
test
mov
mov
jae
sbb
mov
sub
fcoml
or
stos
mov
sub
adc
jne
rcrl
out
sbb
mov
push
cmc
push
pop
sub
xor
orb
add
jbe
cwtl
or
and
xor
adc
add
pop
bound
add
out
xchg
xlat
or
or
jp
lea
bound
jb
aaa
mov
add
scas
hlt
mov
mov
jg
add
xor
push
jge
cmp
daa
iret
test
inc
clc
mov
lret
and
mov
sbb
pop
nop
dec
push
xchg
fcomp
pushf
pop
dec
jb
fisttpll
xchg
lret
push
jns
add
in
xchg
into
je
jge
xchg
lret
push
into
rcll
int3
jle
add
and
ret
shll
mov
cmp
fisttpl
loop
sbb
pop
inc
push
test
adc
xchg
adc
aas
js
push
sbb
bound
js
scas
adc
outsb
inc
adc
cmp
mov
jl
jmp
es
dec
jmp
sub
inc
clc
jmp
jl
jmp
out
cmp
pop
call
cmp
test
lea
and
loope
aas
orl
mov
xchg
cli
mov
or
ret
jae
push
xor
cmp
ja
mov
mov
aas
pop
or
inc
es
or
push
xchg
mov
mov
inc
xchg
sbb
or
rorb
enter
sbb
or
xor
sahf
pop
inc
push
or
push
aaa
mov
add
filds
imul
mov
mov
inc
cmp
push
popf
sar
test
mov
sbb
and
mov
das
or
pop
add
push
adc
nop
add
pop
and
andl
mov
mov
pop
adc
ss
test
outsl
repz
xchg
icebp
adc
pop
pop
or
out
mov
add
fldz
dec
fistpl
pop
rolb
inc
cmp
push
leave
and
jae
inc
push
push
je
mov
sarb
xchg
or
lock
cmp
ss
jo
and
bound
adc
add
lock
jb
sbb
add
adcb
addl
jmp
fs
add
mov
push
or
dec
inc
inc
stos
push
sahf
popa
xor
jns
add
add
push
movsb
push
xorl
lcall
mov
ret
pop
add
xor
in
add
sub
xor
jo
aam
out
and
outsl
test
or
fdivs
inc
mov
fdivrs
dec
testl
iret
jge
pop
inc
outsl
pop
dec
fdivr
incl
jbe
lea
jmp
pop
sub
pop
sbb
shrb
jmp
add
subb
out
inc
mull
rcr
sbb
jae
xor
loopne
xchg
in
xchg
test
ret
mov
rclb
hlt
ffree
addb
mov
dec
pushf
sub
lea
and
xchg
call
sbb
cmp
mov
test
inc
or
fcoml
cmp
ja
sbb
xchg
loopne
cmp
sbb
js
inc
and
loopne
dec
push
pusha
cmp
mov
push
dec
jae
dec
cmp
adc
pop
pop
push
push
push
call
rclb
test
pop
lcall
imul
jmp
lcall
sub
outsb
shr
rorb
loope
pusha
addl
ret
xchg
out
mov
cmp
push
mov
xchg
pushf
cmpsl
mov
bound
mov
sub
xor
sub
lds
mov
or
movsl
mov
xchg
vmaxss
inc
pop
and
adc
aas
push
mov
sub
rclb
sbb
enter
sbb
add
jmp
iret
mov
push
and
in
scas
enter
push
out
repnz
xchg
pop
call
adc
or
mov
jg
inc
cmpsb
sub
and
xor
test
stc
and
jne
mov
ss
push
mov
jno
mov
test
push
test
popa
lods
push
xor
pusha
dec
xor
rolb
je
imul
sub
xchg
sahf
xorb
mov
cwtl
mov
xor
das
mov
inc
pusha
insb
jb
test
add
std
int3
and
movsb
lea
pushf
test
lea
jle
loopne
push
push
xor
imul
mov
jmp
shlb
int
mov
cmpsl
loope
dec
mov
push
sahf
ret
mov
mov
sub
test
cmpsl
shr
mov
inc
mov
and
shrb
sbb
or
ja
dec
xlat
add
push
roll
pop
mov
or
cmp
xchg
push
push
mov
push
fsubrs
rol
cmpl
fs
xor
sbb
or
or
mov
out
cmp
adc
xor
push
inc
dec
fiaddl
out
jb
test
push
sub
add
sub
push
mov
xor
xchg
pusha
aam
jno
fsts
je
dec
insl
jge
add
add
push
sbb
adc
ja
and
and
insb
inc
je
pop
dec
lods
movsb
jbe
jmp
stc
adc
xor
sbb
mov
sub
test
add
inc
fimuls
pop
paddd
add
and
insb
in
outsl
std
jmp
cltd
sub
pusha
or
loopne
sub
jle
push
cltd
rolb
pop
test
jmp
sti
sbb
cmp
or
adc
js
fmuls
or
push
jbe
loop
into
cmp
shlb
mov
test
sub
jecxz
dec
call
mov
outsb
mov
add
inc
bound
sub
mov
cmp
jae
mov
adcb
adc
adcl
inc
ds
cmc
ljmp
flds
jmp
clc
ret
or
clc
jae
lea
ret
decl
push
cmpb
jne
cmpb
jne
lds
sti
inc
pop
lcall
fcompp
call
insl
dec
neg
sbb
and
add
sbb
lret
int
and
inc
ja
adc
xchg
out
cmpb
cmp
cwtl
outsb
xor
add
inc
add
mov
js
sbb
fyl2x
push
movsb
add
and
push
test
sbb
imul
roll
cmpsb
inc
xorb
gs
roll
loop
cltd
jbe
push
cli
inc
jmp
xor
mov
jmp
pop
dec
dec
xor
pushf
mov
mov
push
ljmp
add
out
inc
in
xchg
add
inc
adc
in
insb
fldt
cmpsl
ds
xor
aas
push
sarb
cmp
jns
jo
loop
pop
mov
jg
push
insb
and
insl
mov
lods
or
mov
int
lock
jecxz
leave
xor
into
in
xchg
in
cmpl
int
fimuls
outsb
jmp
mov
pop
adc
pop
adc
pop
and
icebp
push
pop
mov
pop
add
sbb
dec
xchg
or
lret
push
nop
aam
bts
xor
sbb
pop
inc
mov
aam
or
rcl
mov
push
mov
sahf
xchg
xchg
es
into
jmp
or
jecxz
call
inc
jb
push
jae
ljmp
sub
into
fsubrs
lret
pop
push
sbb
dec
test
test
addr16
ja
insb
push
lea
sbb
and
ret
aas
hlt
push
and
lahf
testb
xchg
or
xor
out
dec
adc
mov
sbb
adc
loop
jo
add
pop
mov
cwtl
lock
je
or
fimuls
dec
add
hlt
push
mov
into
and
add
sahf
cmp
mov
jb
push
push
inc
out
movb
push
cmc
pop
sbb
fildl
jb
sub
mov
xchg
pop
push
lea
and
into
jge
movsb
add
das
and
lea
mov
lea
aam
lea
js
adc
sub
add
or
jno
lea
imul
push
mov
jge
mov
in
out
fisttpll
push
push
push
orl
xlat
inc
mov
fidivrl
sbb
cs
pop
aaa
inc
jp
sbb
adc
dec
aaa
dec
jmp
adc
add
pop
test
mov
cs
insb
mov
ret
lcall
in
push
push
popf
mov
ret
jp
add
in
clc
sub
add
nop
rcrl
inc
imul
imul
and
push
sbb
lret
int3
jmp
dec
mov
jg
push
repz
inc
xchg
pop
pop
jno
push
dec
push
or
xchg
adc
enter
lret
imull
pop
xor
fldl
fstpl
sub
mov
pushf
xchg
sbb
or
pop
mov
adc
or
xchg
sarb
je
cltd
nop
js
movsb
or
and
mov
pop
out
jl
pop
jae
xor
add
adc
setge
ljmp
or
add
push
ljmp
aas
adc
shlb
cmp
sub
cld
xchg
sub
enter
into
std
test
hlt
adc
push
aas
scas
jmp
es
dec
or
je
inc
aaa
xorb
es
mov
je
or
xor
pop
sbb
adc
mov
dec
sbb
push
add
mov
push
mov
push
test
or
fidivrl
push
pop
call
popa
test
sub
leave
cltd
and
ret
pop
jae
push
sbbl
add
push
lds
xchg
push
scas
push
or
rep
enter
popa
sub
or
push
sti
bound
popa
xchg
es
dec
adc
sbb
rcll
mov
and
and
add
and
inc
cmp
mov
movsl
and
sub
orl
leave
mov
add
cmp
sbb
push
ljmp
call
pop
push
leave
push
inc
and
das
pop
imul
mov
mov
outsb
pop
xlat
arpl
ret
ficoms
outsl
roll
nop
leave
das
xor
push
jg
mov
mov
rorb
je
mov
jp
push
sub
insb
or
push
clc
sbb
adc
movb
mov
sar
pop
or
push
or
mov
and
test
cmpl
push
inc
lods
dec
inc
and
push
movsb
dec
pop
test
xchg
gs
loop
lock
in
cli
add
push
xchg
mov
jl
mov
out
sub
pop
cmp
loop
mov
hlt
js
hlt
pop
test
ficoms
mov
sub
jo
xchg
jmp
rorb
out
aaa
aaa
sub
mov
ficoml
cmp
mov
pop
push
loopne
or
sub
pusha
and
and
add
jbe
test
inc
xor
mov
out
mov
inc
cli
outsb
or
adc
dec
sub
test
cs
pop
test
shr
jae
push
add
cmp
mov
add
test
mov
adc
ret
adc
sbb
mov
cmp
inc
fisubs
add
jb
cmp
cs
sbb
adc
xchg
push
addr16
jae
outsb
sbb
mov
sbb
aaa
add
xchg
add
adc
in
fmuls
mov
pop
int
xor
add
mov
in
ja
adcl
cld
adc
and
xchg
mov
cmp
ret
pop
dec
or
mov
xor
xor
sbb
lret
push
push
sub
mov
xor
icebp
cmp
rsqrtps
or
push
jbe
pop
add
push
pop
mov
mov
cmpsl
xchg
js
add
mov
mov
fbstp
jl,pt
push
jg
cmpb
mov
lock
xor
daa
scas
cmc
dec
or
or
add
in
adc
ret
popf
push
sbb
lds
inc
and
outsl
cmp
pop
sub
push
or
xor
addl
xchg
cmp
pop
mov
push
adc
xor
jmp
pop
mov
and
xor
inc
adc
sub
sbb
xchg
ja
test
xchg
mov
sbb
pop
add
imull
add
fwait
out
xorl
lret
div
inc
sbb
add
popa
lea
xchg
vmovapd
or
in
inc
in
test
sbb
addl
or
pop
push
or
cs
xchg
jmp
mov
cmp
or
mov
push
call
clc
adc
pop
jmp
adc
cmp
rorb
shr
mov
and
orl
push
push
repnz
inc
addr16
lock
pop
call
outsb
dec
jne
and
xor
push
repnz
push
push
mov
pushf
xchg
mov
add
xchg
dec
leave
pop
enter
xchg
mov
sub
xor
add
mov
push
dec
pushf
andl
cmpb
dec
movsb
outsl
add
jne
push
in
cmp
push
iret
cwtl
and
and
xchg
push
repnz
xor
lods
mov
mov
mov
push
in
jmp
cmpsl
or
mov
dec
and
jmp
dec
dec
add
test
dec
adc
imul
or
adc
jne
and
clc
dec
mov
add
pop
push
add
cmp
inc
xor
dec
pop
dec
sahf
mov
add
push
pusha
xor
sub
sub
test
out
mov
in
mov
xor
mov
mov
lds
imul
pop
pop
pop
push
inc
iret
cmp
jne
inc
push
pop
jmp
add
adc
sub
std
push
add
mov
or
rcll
lock
or
jecxz
xor
mov
push
in
inc
or
std
push
les
xchg
es
pop
push
jl
shlb
pop
add
ds
mov
pop
lock
inc
bt
loopne
sbb
fdivs
loope
inc
adc
shl
dec
sbb
mov
and
push
xlat
sbb
and
xchg
cmp
push
sbb
adc
adc
cmp
sbb
imul
adc
jmp
hlt
loopne
push
jl
jnp
xchg
ja
mov
mov
pop
push
dec
sub
adc
pusha
pop
es
add
jg
mov
std
mov
inc
push
xor
pop
mov
jmp
fldcw
sub
cmp
in
mov
pusha
push
lods
sub
es
jne
push
add
jns
js
cmp
push
push
dec
add
pop
xor
mov
fwait
push
test
sbb
sub
repz
and
mov
push
xchg
adc
pop
adc
mov
cmp
push
and
xchg
pusha
mov
arpl
in
push
pop
cmp
fcoms
add
test
repz
imul
imul
int
repnz
and
pop
adc
adc
sbb
mov
push
bound
into
push
push
add
and
push
mov
add
and
popa
pusha
add
jl
fs
and
lret
in
and
mov
dec
sbb
cmp
add
and
sbb
arpl
aam
add
cmpsl
dec
jo
jbe
addl
repz
inc
sbb
aam
or
inc
add
pop
aad
sbb
cmp
pop
sub
push
cmpsl
or
add
je
mov
push
inc
dec
loope
cli
jmp
xchg
mov
cmpsl
fld
negl
jne
push
lock
adc
xor
lea
fidivrs
xchg
xchg
sbbl
cli
push
call
push
in
mov
add
loope
xchg
mov
dec
movsb
imul
cwtl
pop
imul
pushf
ja
orb
push
mov
add
sar
add
adc
push
xor
ret
pop
mov
pop
shl
sti
aaa
and
pop
repnz
cmp
pop
sbb
and
lea
cs
sbb
or
and
and
xor
test
and
inc
imul
xor
adc
and
inc
push
and
iret
mov
cltd
lods
cmp
mov
sbb
sbb
adc
add
mov
mov
imul
pop
adc
scas
or
aas
pop
test
pop
cmpsb
jno
dec
stos
pop
mov
xor
mov
add
adc
sbb
lcall
xchg
pop
jno
imul
and
add
sub
mov
dec
sub
adc
and
loope
sbb
dec
sbb
xorb
roll
mov
add
cmp
lods
sub
inc
inc
sub
and
add
stos
dec
and
jmp
js
rclb
test
lahf
jge
movsl
js
pop
sahf
cs
loop
pusha
adc
fimuls
adc
or
sbb
dec
les
fmuls
adc
mov
and
pop
sbb
jge
test
and
jge
xchg
orl
leave
push
clc
sbb
dec
call
pop
cmp
xchg
push
rorb
cmp
lock
jns
test
scas
mov
dec
aam
hlt
or
pop
int3
ljmp
sub
push
pop
outsb
push
xchg
sbb
shll
fmul
cmpsl
pop
xchg
mov
jo
sahf
in
inc
loopne
xor
mov
inc
and
arpl
int
adc
stc
sub
daa
aam
call
mov
add
jmp
lret
fwait
mov
or
add
fldcw
adc
mov
andps
int3
leave
stos
test
inc
xor
enter
jne
sbb
int3
movsl
mov
pop
incl
es
or
add
push
and
cwtl
push
adc
popa
sub
add
mov
mov
push
test
popa
push
movsb
mov
scas
push
pop
imul
add
xor
sub
loope
add
int
sub
and
or
jae
and
andb
mov
lret
aad
mov
jno
gs
loope
int3
mov
and
leave
and
sbb
jle
je
add
pop
sbb
pop
xchg
lret
mov
ret
adc
add
cmp
push
push
test
test
addl
mov
jp
mov
into
dec
clc
sub
jb
jne
cmp
or
divb
pop
push
sbb
mov
push
cld
jp
lret
xor
mov
add
das
dec
and
ret
popl
mov
push
push
pusha
xchg
sbb
sub
adc
or
pop
sahf
or
push
insb
jmp
xchg
mov
lock
cmp
test
push
popf
jne
pusha
jle
adc
jge
movsb
mov
loop
jle
xchg
pushf
jmp
adc
inc
lods
cli
dec
adc
pushf
hlt
xor
or
jae
outsb
dec
andl
sbbl
xchg
mov
pop
mov
dec
lcall
sahf
xchg
and
add
add
xchg
and
testl
mov
stc
stos
mov
push
lods
rol
xchg
cmpsl
nop
out
cltd
ds
or
xor
inc
add
mov
mov
into
sbb
mov
xchg
je
xor
movl
push
push
das
pop
dec
pop
shlb
cmp
or
in
insb
add
int
cmp
push
sbb
mov
mov
cmp
jne
out
xor
or
sub
cmp
pop
mov
cmp
sub
fsts
jns
add
into
mov
add
es
sbb
mov
test
call
xchg
out
and
or
and
add
push
or
dec
dec
repz
add
push
call
pop
in
clc
push
and
nop
cld
ficoms
orb
inc
or
push
fs
pop
ds
and
gs
inc
ljmp
xlat
adc
test
aam
add
mov
sub
inc
xchg
jno
movsl
mov
push
mov
push
movsb
fsincos
les
jge
js
adc
fs
add
dec
lock
mov
movsb
adcl
stos
popa
mov
sbb
adc
out
lret
fs
notl
jg
xor
jl,pn
push
add
inc
shrb
sub
add
cmp
xor
sub
imul
push
xchg
and
pop
cmp
adc
mov
or
adc
sarl
add
mov
xchg
or
rcrl
push
mov
cld
cs
push
jne
mov
add
inc
push
push
push
js
and
xor
push
pop
inc
mov
movsl
test
stos
adc
mov
mov
mov
cltd
dec
push
popa
fisubrl
movb
add
sub
xchg
sbbl
push
add
inc
sahf
add
decb
inc
mov
int
push
push
mov
imul
xor
stos
fld
aam
pushw
adc
shlb
pop
mov
jb
sbb
add
cmp
jae
mov
mov
pop
add
pusha
sbb
xor
cmp
sub
arpl
push
push
push
das
je
or
or
push
fadds
adc
jg
pop
lods
push
dec
mov
push
jnp
in
or
add
push
insb
cmp
xorb
inc
xchg
xchg
jle
push
nop
pop
or
pop
push
or
pop
add
aad
mov
or
fldt
pop
mov
mov
mov
dec
hlt
je
dec
aam
leave
lcall
mov
or
sub
lock
add
mov
enter
push
xchg
lahf
test
pop
shll
inc
xor
mov
loopne
adc
sub
mov
sbb
mov
mov
lahf
add
jne
sub
movsb
inc
inc
sub
in
inc
fsubs
lea
and
jb
arpl
add
cmp
jb
sbb
or
and
insl
insb
gs
mov
and
dec
inc
add
lock
push
jno
test
mov
mov
inc
sbb
movb
cmp
ds
es
pushf
adc
adc
fcompl
sbb
or
pop
or
push
add
mov
mov
sub
inc
push
sbb
pop
dec
dec
or
xor
mov
or
mov
xor
pop
clc
mov
mov
shlb
repnz
sub
jno
or
rorb
xor
inc
pop
inc
rolb
adc
rorl
push
sbb
repnz
orb
adc
leave
xor
xchg
xor
aas
loop
inc
xchg
repz
dec
stos
push
daa
sbb
sbbb
sqrtps
rcrb
shrb
or
mov
inc
inc
xlat
jbe
dec
or
mov
mov
in
and
fbld
les
or
arpl
lcall
inc
lock
nop
in
rcrl
push
mov
fwait
add
adc
dec
jb
push
pop
jp
sub
mov
xchg
frstor
arpl
inc
sbb
mov
pusha
imul
and
leave
or
xor
sbb
jbe
sbb
andb
push
lret
sub
dec
mov
push
outsb
add
jns
std
lret
pop
mov
in
nop
add
push
mov
add
xor
push
rorl
loop
jl
sbb
in
in
sahf
dec
sbb
inc
push
add
mov
push
xchg
insb
jnp
dec
inc
cmp
dec
pop
and
adc
push
repnz
fldenv
dec
fwait
mov
outsb
jmp
sbb
cmpsl
test
test
bound
cmp
and
loop
push
and
sbb
xchg
cmp
dec
xchg
dec
ficomps
inc
sti
adc
nop
dec
lcall
nop
add
dec
cmp
push
leave
jae
and
add
sysret
add
lock
mov
inc
push
movsl
hlt
add
lcall
and
add
enter
push
sbb
pop
vpminub
enter
xor
sub
xor
or
xchg
add
add
add
inc
sub
and
and
lret
pop
sub
xor
xor
xchg
add
test
inc
sub
dec
or
push
sbb
fs
cld
insb
hlt
add
add
sbb
mov
movsl
xor
sahf
mov
jno
mov
mov
sbb
xchg
xor
xchg
aam
sbb
cwtl
pop
add
dec
mov
in
cmp
and
fsubrs
mov
push
jp
movl
sbb
sahf
sbb
in
popa
dec
mov
jbe
mov
pop
sbb
cmp
pusha
rorb
and
lds
movb
leave
push
push
dec
je
pop
insb
adc
lea
mov
test
xchg
xchg
cmpsb
or
sub
pop
rclb
sub
xchg
int3
adc
out
les
push
add
int3
ja
nop
fisubrs
adc
pop
ja
paddq
sahf
xchg
and
imul
xchg
data16
sub
or
sub
or
or
imul
pop
sub
and
xchg
data16
sub
add
sub
add
add
imul
cmc
aas
sub
or
jno
jmp
xchg
shlb
and
cmp
add
add
add
pop
in
sbb
mov
sbb
sbb
and
mov
mov
movsb
int
add
sbbl
adc
enter
scas
mov
push
fucomi
inc
sbb
inc
jmp
orl
push
sbb
sub
push
les
int
and
jbe
lea
movsl
xchg
sbb
sbb
adc
pushf
dec
and
add
sbb
jae
bound
and
movsl
jns
and
xor
sbb
and
in
mov
out
je
push
push
xor
aad
dec
adc
enter
int
andb
or
xor
pop
pop
lret
call
mov
sub
inc
and
or
or
xor
sbb
pop
enter
add
inc
ljmp
mov
jl
inc
aam
sub
movsl
fiadds
push
push
shrb
push
push
and
dec
pop
lock
add
add
inc
call
std
rorb
inc
inc
aas
sbb
daa
jmp
fldl
iret
pop
xor
pushf
les
imul
test
sub
scas
sbb
cmpsl
or
leave
xor
pop
lock
mov
jae
fwait
sbb
shll
pop
add
add
leave
sbb
sbb
sahf
stos
jmp
add
sbb
loope
cwtl
inc
push
ret
jno
mov
or
mov
or
or
add
inc
cmc
mov
push
or
rorl
sub
cwtl
pushf
insb
inc
sub
xor
mov
bound
mov
sub
sbb
sbb
sbb
adc
jmp
adc
jb
jge
stos
cs
add
and
xchg
inc
or
sub
sub
adc
or
pop
mov
and
lea
sti
dec
or
push
nop
push
es
fildl
mov
adcb
cld
ret
cld
pop
fwait
cmc
add
ss
dec
bound
ljmp
pusha
imul
sbb
push
sbb
mov
sbb
add
imul
jo
les
adc
aad
cmp
xor
or
mov
fstl
push
jbe
add
dec
mov
in
insl
push
add
xchg
jo
xchg
dec
dec
add
mov
xlat
insl
xchg
andb
xlat
rorb
aam
adc
sbb
mov
add
pop
cmpsl
push
add
movsb
sub
in
js
ds
cmp
and
mov
cmp
into
add
dec
ss
and
jmp
mov
and
rcrb
rorb
pop
add
test
sub
push
lret
test
cwtl
mov
ds
inc
add
das
lret
add
mov
mov
pop
inc
push
lea
shlb
jg
jo
push
fists
mov
in
push
jne
jo
sbb
xchg
out
or
or
dec
insb
xor
mov
aas
shr
lea
lea
sbb
cmp
pushf
jmp
sbb
push
lahf
and
push
orl
pop
lods
and
cmpsl
cmp
je
sbb
mov
add
testb
push
dec
cmpsb
int3
movsl
test
shl
cmp
jae
push
seta
sarl
adc
push
cmp
push
xchg
mov
insl
arpl
cli
pusha
sbb
adc
push
mov
cmp
movsb
push
int
cmp
xchg
push
jae
ret
xor
adc
dec
pop
inc
pop
setg
add
cltd
inc
outsb
pop
fs
add
add
rol
push
jo
pushf
mov
and
push
daa
push
and
cmpl
movsl
push
test
adc
push
test
cmp
xor
add
insb
jmp
mov
adc
dec
dec
or
xchg
cmp
jne
inc
mov
ret
dec
cs
or
push
movsb
inc
lods
mov
inc
push
dec
and
add
dec
in
mov
adc
in
inc
and
sbb
sub
push
daa
add
jo
sub
dec
adc
pop
sub
adc
dec
adc
stos
or
xor
xorb
je
lret
push
imul
outsl
test
sub
inc
or
xchg
sub
pop
pop
ja
rorb
sbb
jl
mov
and
mov
test
sub
lret
das
js
add
push
and
pushf
pop
insb
push
cld
jo
and
sub
gs
mov
and
push
fs
xchg
fisubl
mov
pop
sbb
push
or
dec
ret
mov
or
xchg
test
cs
test
jle
or
push
or
rorl
inc
add
dec
int
lcall
jmp
sbb
in
int
add
cltd
push
pop
pop
mov
pusha
sbb
push
iret
cmp
sub
movsb
xlat
xor
aam
xor
mov
shr
xor
pop
push
in
sbb
or
cmpsl
mov
pop
clc
push
fcmovnbe
fadds
addb
xor
daa
push
imul
cmp
pop
sbb
sbb
fdivl
push
movsb
repnz
sbb
filds
xchg
pop
push
sbb
xchg
mov
jge
out
add
xchg
sbb
pusha
push
sbb
cmp
and
pop
pusha
sti
add
push
pusha
mov
aas
push
pop
inc
in
inc
cmp
test
sub
xchg
sbb
lret
jp
dec
lahf
test
test
mov
dec
mov
adc
jo
jle
mov
push
dec
insb
push
clc
mov
and
dec
mov
outsl
rclb
movsb
hlt
dec
adc
cmp
sub
or
in
inc
gs
xor
xchg
fistps
push
sahf
push
mov
and
sbb
xor
stos
dec
adc
cmp
mov
jmp
mov
cs
jns
es
dec
add
inc
stos
and
adc
cmp
add
xchg
xor
cmpsb
lret
ljmp
adc
lods
mov
dec
cmp
xchg
clc
jl
mov
pop
and
dec
stos
inc
aam
popf
fists
jnp
dec
jne
aas
leave
xor
cmp
rcll
or
sbb
xchg
ret
sti
adc
inc
pop
shl
dec
gs
sbb
gs
icebp
iret
pop
and
add
push
push
nop
mov
inc
test
aaa
add
pop
xchg
push
mov
leave
fs
jno
push
xchg
pop
or
or
pop
scas
add
mov
sbb
add
jle
and
inc
xchg
adc
jle
test
dec
adc
je
adc
nop
pop
neg
mov
add
aas
or
adc
lock
jns
andb
jmp
ret
adc
leave
push
add
sub
inc
rorb
and
add
inc
ficoms
xor
pop
pop
xchg
js
and
testb
pop
sub
es
jge
mov
cmpsb
cmp
mov
add
fcoml
movsb
rorb
or
jp
cmp
push
ror
adc
fiaddl
cli
add
sub
xchg
bound
sbb
push
pop
push
or
aas
jno
jl
or
arpl
mov
roll
sub
lea
jne
nop
add
add
je
push
inc
mov
dec
mov
cmpb
dec
adc
mov
push
push
popa
movsb
fstpt
adc
jns
cmpsl
xor
xor
mov
push
subb
push
and
xor
arpl
arpl
ret
jp
pusha
lock
mov
inc
mov
pop
add
add
movsb
out
mov
add
into
xchg
sbb
cmp
prefetchnta
cmp
aam
mov
jns
dec
popf
test
sbb
imul
and
pop
cli
xor
xchg
xchg
inc
mov
enter
jno
sbb
adc
mov
aad
scas
xor
cld
adc
loopne
aam
lods
adc
sbb
sub
or
push
adc
mov
sti
imul
mov
outsb
mov
loopne
mov
insl
mov
xchg
sbb
cmovae
sbb
pop
cwtl
add
shrl
xchg
js
xor
lds
dec
mov
sub
lret
and
movsb
mov
aam
idivl
add
sub
popa
xor
mov
imul
adc
push
imul
add
sbbl
jne
into
loop
cmp
adc
cwtl
fimuls
and
outsl
cmp
dec
nop
add
or
int3
xchg
dec
inc
push
push
push
stos
mov
adc
adc
cli
testl
or
jno
jmp
sub
add
mov
or
mov
and
xchg
test
cmp
sub
int3
mov
dec
mov
addr16
mov
add
sub
or
adc
pop
leave
add
sub
dec
and
adc
push
rcrb
icebp
nop
rorb
push
cmp
adc
or
push
push
push
xor
mov
loope
add
cmp
inc
jg
and
fisttps
lock
sbb
ret
inc
pop
jb
aas
adc
push
or
adc
inc
and
add
orb
jnp
pop
inc
rolb
pop
sbb
sbb
cs
sbb
jnp
sub
pop
jmp
add
inc
pop
mov
sub
dec
cs
inc
jae
add
push
nop
jnp
filds
pusha
jb
jg
pop
lret
xorl
call
fstpt
xchg
mov
imul
push
add
mov
adc
cmp
shl
jecxz
pusha
outsb
xchg
pop
subb
aaa
sbb
xchg
adc
cmp
js
or
inc
mov
or
loopne
cmp
andl
movsb
adc
fs
jg
je
sbb
or
inc
xor
pmulhw
xorl
je
xchg
mov
xchg
pop
mov
test
adc
cmp
jns
rcll
mov
xor
sbb
and
hlt
lods
push
jmp
xor
xlat
xlat
and
leave
sub
mov
ds
cmpsl
mov
and
cltd
je
loop
shl
ret
aaa
and
and
roll
ret
sub
cs
mov
push
xchg
sbb
imul
push
sub
outsl
push
add
mov
xchg
inc
mov
mov
mov
push
imul
mov
mov
and
shrb
push
bound
negb
pop
fldcw
enter
mov
sub
pop
xchg
xchg
cltd
add
push
mov
add
xchg
or
sub
out
sti
inc
loop
mov
add
add
fnstenv
sub
test
fisubl
test
aad
and
stos
sbb
push
inc
pop
sbb
and
call
aaa
movsb
push
shrd
ret
das
add
testl
adc
pop
push
call
js
jo
aaa
add
insb
mov
dec
loopne
rorb
xlat
xchg
outsb
cmp
push
push
int
and
test
imul
mov
mov
add
or
orl
push
imul
pop
addb
ret
sbb
cld
imulb
je
mull
fisttpll
popa
add
or
pop
aad
push
lcall
push
xchg
adc
mov
lock
mov
mov
xor
dec
repz
xlat
cmp
daa
push
cltd
push
dec
push
sbb
or
fisttpl
push
test
test
inc
stos
test
repz
add
push
pop
sbb
or
shrl
stc
pop
jmp
sub
lahf
shll
push
xor
mov
xor
cmp
mov
sbb
add
inc
pop
xor
lahf
push
and
xor
mov
add
push
jmp
push
imul
scas
pop
jnp
subb
in
jmp
xor
fldt
test
dec
mov
inc
adc
push
mov
add
pop
rorl
or
pop
test
aam
nopl
pop
push
sbb
sbb
adc
rcl
dec
lods
fimull
add
fldcw
sbbb
repz
adc
adc
stc
mov
aam
sbb
je
push
into
repz
and
les
in
lock
or
and
cmc
or
and
sbb
movzbl
push
mov
push
je
loopne
fdiv
push
xor
sub
arpl
add
call
push
pop
mov
adc
nop
pusha
popa
call
out
xchg
leave
fs
or
adc
pop
cltd
xchg
inc
or
sbb
add
inc
fisttpl
add
lods
push
hlt
adc
cmpsb
push
add
loope
sbb
or
loop
sbb
inc
sub
and
in
inc
push
loope
cmp
xor
or
jmp
add
subl
xchg
addl
and
dec
push
sbb
andl
inc
lahf
inc
cmp
out
dec
test
dec
das
loop
dec
je
mov
push
lret
in
hlt
mov
adc
or
mov
adc
push
dec
pop
pop
adc
push
cmp
pop
scas
sub
push
inc
push
inc
xchg
lods
call
or
ds
sub
scas
xor
je
dec
cmpsl
test
push
push
xchg
psrad
xor
add
and
mov
adc
movsb
ret
clc
adc
xchg
xchg
fcomp
fs
shlb
jo
adc
push
aas
push
js
dec
add
and
cmp
mov
xchg
cmp
bound
sub
cmp
jae
scas
cltd
cmpsl
test
nop
sbb
add
addr16
mov
pop
add
movsl
ret
push
movsb
or
jb
movsb
pop
xchg
push
sub
push
and
cmp
sub
cmp
adc
hlt
filds
movsl
push
dec
mov
push
dec
loop
subb
mov
es
sbb
in
inc
ljmp
add
call
cmp
mov
fists
imul
push
fwait
sbb
add
pop
and
iret
push
imul
sbb
adc
in
dec
aam
mov
xor
dec
pop
adc
es
or
add
subb
popa
cmp
hlt
jne
add
pop
cmp
adc
in
int3
inc
inc
push
push
sbb
add
push
sbb
push
dec
push
push
add
outsl
pop
push
mov
push
push
scas
fwait
es
addl
xchg
sbb
cmp
xor
inc
push
dec
jle
add
inc
pusha
mov
popf
or
movl
push
push
xor
in
mov
cs
adc
adc
and
sbb
jmp
cmp
jnp
or
mov
cmp
push
lret
ud2
jge
add
jns
idivl
sub
inc
mov
bnd
test
adc
add
cltd
enter
mov
jmp
fs
xchg
ljmp
jle
push
mov
aad
add
jne
cmpsl
pushf
or
mov
push
mov
insb
leave
push
call
jge
xchg
jo
inc
loopne
fsubl
cmp
dec
mov
push
push
nop
loope
arpl
and
std
jne
mov
jl
loopne
sub
sbb
pushf
adc
and
jle
aam
mov
out
mov
inc
dec
movsl
adc
and
imul
mov
mov
mov
mov
popf
inc
sbb
mov
ret
add
outsb
xor
mov
rcrl
cmpsl
or
add
push
mov
jg
sbb
sbb
push
sar
xor
xchg
push
je
xchg
sub
jmp
mov
pop
test
fs
fists
stos
add
cmp
dec
mov
nop
add
adc
or
jbe
xchg
outsb
push
cmp
jae
ficomps
add
lea
adcl
or
cmp
inc
add
jge
jns
mov
test
shlb
pop
push
or
and
push
mov
and
mov
loopne
mov
ja
lahf
cmc
and
ret
roll
ds
xor
and
inc
add
jns
xor
pop
pop
or
push
addb
pop
sbb
inc
pop
stos
or
cmpsb
adc
int
adc
xchg
xor
add
add
or
sub
mov
mov
inc
and
inc
push
push
loop
add
mov
into
cmpsb
cmp
adc
and
jo
aas
adc
movsl
ljmp
add
pusha
test
test
ds
dec
dec
outsb
inc
dec
add
sbb
sub
int
dec
aam
push
push
lcall
push
incl
addl
out
sub
out
push
sub
aaa
mov
mov
inc
push
inc
inc
sbb
xor
ljmp
iret
cmc
mov
sbb
push
sub
test
jmp
sbbb
aad
clc
movsl
push
cmp
jbe
mov
xor
sub
or
add
xchg
lock
sbb
add
cmpsb
lret
and
cs
push
lods
shr
sbb
pop
mov
inc
out
cmp
xor
addb
sub
fists
andl
add
movsl
bound
push
cltd
xchg
std
push
pop
push
fistpl
mov
mov
mov
test
les
mov
or
icebp
movsb
and
test
push
fwait
pop
les
mov
pop
hlt
jle
push
cmc
or
and
mov
sti
mov
repnz
xor
pop
aas
rorl
mov
movsl
les
and
imul
cmpsl
inc
dec
fs
ja
sub
js
pop
sbb
outsb
imul
sbb
mov
das
mov
sbb
int
inc
mov
jle
mov
movl
pop
inc
call
add
add
and
shl
lcall
and
fstl
push
pop
imul
or
xor
push
pusha
sub
or
mov
dec
in
lea
jno
cmp
fnsave
add
jecxz
xor
cmp
add
xor
dec
mov
lret
lret
outsb
adcb
inc
add
pop
shlb
pop
add
sub
cmp
sbb
fnstenv
mov
push
push
pop
in
js
jl
hlt
arpl
xchg
add
aam
and
imul
adc
pop
xchg
andb
and
sbb
loopne
push
cmp
sahf
scas
dec
loop
imul
sub
in
dec
inc
add
or
test
mov
cmp
pop
inc
dec
in
push
sub
or
sub
pop
push
pop
test
jl
sbb
leave
xchg
imul
jl
sbb
js
and
aam
shlb
lcall
andl
push
inc
pop
pop
dec
and
add
or
xchg
int
dec
ficoml
sub
inc
and
hlt
add
and
and
ss
movb
jmp
pop
cmc
rorl
inc
dec
jns
and
inc
adc
shrb
in
dec
mov
test
mov
cltd
outsb
cmpsl
scas
aas
mov
add
mov
add
add
or
sbbb
inc
push
mov
mov
sbb
and
neg
seto
xor
rolb
imul
cmp
sbbb
mov
xor
or
add
push
dec
jmp
leave
and
mov
aam
xor
scas
fwait
sub
add
fst
push
mov
mov
jno
add
push
dec
ljmp
xchg
cmp
mov
pushf
add
movnti
dec
sub
adc
lea
and
xchg
orb
inc
mov
or
pop
xchg
cmc
mov
call
push
jbe
stc
inc
or
ret
adc
mov
les
or
in
cmp
xchg
mov
sub
dec
call
popa
hlt
dec
lea
xchg
push
mov
movl
add
xchg
sub
imul
lret
in
jne
movsl
or
or
pusha
cmp
or
insb
lahf
push
cmp
sub
pusha
dec
aas
imul
adc
xor
sbb
cmpsl
add
cmp
push
popa
movsl
nop
push
iret
adc
push
and
std
sub
lcall
add
cli
xor
jnp
lea
adc
lret
fimuls
jnp
out
push
fimuls
sti
xor
es
cmovl
inc
aad
stc
test
filds
push
inc
cmp
xor
inc
lahf
inc
add
pushf
sbb
test
xor
xor
dec
popf
aam
mov
sub
cli
in
adc
xchg
xchg
mov
add
out
shrb
fiaddl
punpckhwd
call
icebp
and
mov
ret
adc
rclb
jb
mov
add
adc
aas
ds
push
lock
lea
jo
aad
and
or
add
js
xorl
push
cmp
inc
inc
sbb
shrb
sub
je
enter
push
jne
lea
rorb
xchg
xchg
mov
xor
xlat
push
add
jmp
inc
fs
imul
inc
add
mov
push
mov
loope
push
pop
insb
cmpl
xor
sbb
les
imul
xchg
mov
or
mov
test
pushf
pop
gs
popf
add
push
sbb
loop
dec
shlb
jmp
or
xor
fiadds
sbb
xchg
dec
sub
add
xchg
es
pushf
and
sbb
xchg
daa
push
mov
adcl
sti
arpl
xchg
pop
orl
sub
dec
lods
loop
sbbl
xor
or
xor
mov
lcall
stc
adc
add
lret
stc
incl
cmpb
inc
push
mov
cmpb
call
inc
and
sub
rcrl
and
push
cmp
push
sub
push
aaa
mov
std
push
or
rolb
mov
aam
sti
mov
inc
sbb
jno
xchg
or
cmpsl
sbb
mov
mov
test
lea
adc
setle
mov
add
mov
hlt
mov
or
add
or
aaa
or
test
jl
inc
lods
or
dec
mov
pop
cmpsb
cmpsb
inc
push
mov
pushl
dec
sub
popa
lcall
jl
inc
or
shll
roll
add
cmp
ret
imul
hlt
push
sbb
dec
add
mov
xor
loopne
aam
or
ret
mov
arpl
mov
mov
add
cmpsl
shl
adcb
ljmp
sbb
push
inc
xor
or
dec
ret
jp
xlat
call
int3
scas
inc
xor
cmp
pop
out
pop
in
sbbl
pop
je
loopne
dec
pop
add
or
push
sub
nop
xor
mov
ss
sbb
pop
dec
nop
push
pop
mov
leave
add
push
test
lcall
rcrl
jge
pop
adcl
jns
pop
in
and
gs
and
pusha
aam
mov
mov
leave
shlb
push
pop
and
and
push
and
push
cmp
and
adc
lahf
imul
add
nop
adc
rorb
and
adc
inc
push
inc
adc
mov
inc
add
dec
lock
mov
add
rcr
loopne
dec
je
mov
jb
jo
fistl
push
add
and
lret
sbb
aaa
or
inc
xor
pushf
or
daa
insl
push
push
scas
pop
and
stos
and
sbb
cmpl
in
sub
sbb
xchg
push
xchg
cmp
pop
and
addb
inc
xorl
outsl
mov
icebp
sbb
jno
sbb
pop
rclb
stc
lock
push
sbb
xchg
sbb
push
push
inc
call
jne
test
dec
push
daa
sub
fcompl
dec
loopne
rorl
pop
xor
aad
cltd
push
xor
enter
sub
mov
rclb
and
ds
fwait
pusha
add
cmp
push
push
dec
xor
and
push
sub
xchg
dec
push
sub
inc
inc
inc
fwait
add
add
lcall
xor
sbb
mov
mov
sub
and
push
nop
add
add
mov
fimuls
pop
daa
sub
adc
jg
inc
and
mov
xchg
gs
mov
leave
aam
jbe
in
pop
xchg
es
cmp
cmp
or
fs
inc
inc
sbb
xor
adc
push
addr16
jns
push
lods
insl
and
mov
out
push
and
push
sbb
xchg
mov
les
lods
xor
sub
jge
push
inc
xor
xchg
xor
aam
sbb
sub
in
pop
inc
pop
cld
lods
loope
insl
pop
orb
sbb
iret
add
inc
adc
pop
sbb
call
hlt
adc
lea
dec
rcrb
adc
rcl
sbb
sbb
lea
js
mov
push
fildll
adc
movsb
ret
xchg
xor
test
adc
or
xorb
sbb
add
add
cmpsb
pop
test
in
data16
pop
mov
push
imul
pop
push
mov
adc
and
xlat
lods
add
movsb
adc
pop
mov
or
add
mov
or
adc
inc
inc
push
mov
and
stos
inc
sbb
out
inc
leave
dec
pop
test
xor
es
xchg
sub
insl
jecxz
sbb
int
adc
add
xor
mov
push
or
rclb
jae
and
add
inc
orb
cmp
push
adc
jns
sub
js
sub
pusha
xchg
nop
and
push
jo
sbb
ja
sti
sysret
and
sbb
call
add
sub
in
pop
inc
test
sub
pop
inc
insb
test
mov
mov
jg
or
cmpsb
add
inc
pop
jmp
imul
dec
int
dec
mov
mov
lock
scas
push
adc
pop
rolb
in
mov
test
jno
setle
push
push
and
or
jb
mov
leave
add
sahf
popf
push
add
push
cmp
add
pop
nop
inc
cmp
push
or
in
adc
push
jo
push
and
or
sub
stc
cmp
adc
mov
sbb
sbb
das
or
mov
jne
rcrb
icebp
push
and
pop
dec
sbb
out
pop
adc
orb
pop
enter
adc
ja
aaa
mov
adc
push
imul
sbb
xchg
or
in
cmp
pop
lret
and
mov
fnstenv
and
sbb
xchg
add
mov
dec
cmp
and
shlb
push
enter
cmp
or
pusha
adc
js
outsl
push
inc
and
push
and
dec
and
mov
lds
int3
mov
clc
dec
or
push
pop
fs
jg
inc
insb
or
in
jl
or
push
or
or
fisttpl
sub
push
xchg
out
test
test
es
rclb
scas
and
dec
and
loop
inc
popa
subl
jo
ret
pusha
dec
sbb
pop
mov
addb
cmp
jg
ja
rolb
lods
fld
adc
sbb
int
pop
jo
or
push
or
enter
xchg
nop
sbb
mov
cmp
test
adc
or
mov
mov
push
push
inc
sahf
inc
push
add
push
insb
pop
sub
dec
xchg
es
add
push
fnstenv
out
int
call
das
add
push
inc
push
sbb
push
pop
add
push
adc
push
mov
inc
xchg
pop
push
add
sub
jge
popf
test
std
dec
sub
adc
push
decb
xlat
ss
fisubrl
mov
inc
enter
pop
pusha
enter
xchg
or
int3
test
xchg
dec
add
push
sub
cmp
add
ret
and
test
aam
mov
movsb
aam
jecxz
addb
fdivr
xchg
pop
nop
add
add
aad
xchg
das
int
push
js
jecxz
adc
in
push
sub
cmp
sub
cli
inc
mov
cmp
je
nop
out
in
addr16
xor
dec
and
xor
test
adc
mov
xor
inc
mov
sbbl
jmp
dec
shrb
test
icebp
inc
shll
inc
andl
push
test
fs
outsl
xchg
sbb
push
or
jnp
ret
out
repz
push
cmp
hlt
push
push
mov
sbb
xchg
in
dec
and
xor
xchg
je
add
sub
sbb
shl
mov
cmpsl
pop
mov
pop
or
jmp
push
xchg
orb
sub
or
sub
or
or
sub
xor
jo
jo
or
lods
sbbb
xchg
sub
and
lds
cmpsl
rcll
pop
movsl
rolb
push
push
cltd
es
mov
add
and
and
mov
lods
mov
xchg
and
pushf
out
jne
mov
mov
xchg
je
dec
xchg
jle
mov
push
jb
push
rclb
sub
jb
add
xchg
fcom
rolb
es
sbb
xchg
sbb
jae
add
sbb
add
nop
sub
push
push
test
mov
and
and
and
mov
add
es
sahf
daa
fsubrl
enter
add
test
or
mov
mov
dec
divl
sarl
xor
add
sub
jmp
pop
adc
and
and
sbb
dec
lahf
pusha
pop
push
dec
pushf
jbe,pn
movsb
cwtl
xchg
cmpsb
dec
adc
fsubrs
inc
push
inc
cwtl
aam
rorb
dec
test
xor
subb
lods
adcl
sbb
mov
adc
in
xchg
jle
pusha
cmpsb
lods
ret
lock
add
cwtl
mov
jl
ret
xchg
mov
jne
push
dec
sbb
inc
mov
and
push
add
enter
xor
adc
adc
sbb
sbb
push
mov
lods
add
pop
cwtl
cmp
cmp
sub
inc
cmp
or
cmp
punpckhdq
jno
fsubl
cmp
push
pusha
xor
cmp
sbb
cs
cmpsb
adc
frstor
arpl
cmp
xchg
cld
inc
mov
sbb
bound
lcall
xchg
push
mov
sbb
push
sub
adc
imul
inc
bound
mov
mov
in
inc
inc
sbb
out
adc
and
lea
pop
testb
inc
fs
ss
addr16
movl
inc
loopne
adc
outsl
inc
push
rolb
repnz
addb
add
xor
aas
lods
sbb
adc
ds
dec
pop
and
cmp
push
repnz
repnz
arpl
sub
cmp
mov
add
les
sahf
inc
lea
cmp
sahf
or
push
xor
dec
jmp
enter
in
stos
into
loop
rorb
cmpsl
insl
sub
or
push
mov
dec
push
aad
push
add
pushf
das
or
pop
push
and
dec
and
loopne
movsl
loope
pop
mov
push
adcl
jne
add
inc
arpl
cmp
mov
lcall
add
jo
imul
add
sbb
or
jb
popa
push
fwait
enter
pop
pop
add
inc
clc
and
pop
and
and
and
adc
adc
fwait
mov
add
icebp
sub
mov
push
pop
jl
cmpsb
pushf
sbb
leave
movsl
pop
sbb
test
add
sub
add
in
in
sti
push
inc
outsb
inc
jge
add
push
push
push
shrb
add
call
inc
sar
cld
push
aad
mov
mov
dec
in
dec
leave
add
inc
push
xor
imul
lea
push
pop
fildll
dec
lcall
dec
or
dec
pop
push
and
rolb
cmp
pop
popa
in
fcompl
pusha
push
and
rclb
or
stos
add
lods
inc
fs
inc
add
sub
ret
adc
pop
sbb
push
xor
add
fmuls
inc
dec
cmpsb
in
and
or
cmp
mov
call
dec
dec
mov
add
dec
inc
repnz
lods
push
ret
dec
pop
xchg
andb
into
sub
mov
movsb
fstp
inc
lcall
lods
push
pop
sbb
push
dec
dec
clc
bnd
jno
push
or
cmp
add
sbb
or
pop
mov
jp
dec
lcall
sub
dec
sub
push
sbb
cmp
inc
adc
and
inc
loopne
fadd
push
mov
or
sbb
cmp
xor
push
mov
sub
or
mov
bound
nop
cmp
pop
shrl
out
orl
mov
enter
and
push
rcll
outsl
or
push
test
add
outsl
adc
lock
mov
in
lods
divb
xor
add
imul
pop
xchg
fmuls
and
enter
push
test
push
add
push
test
fadds
sub
inc
sbb
call
clc
popl
push
in
mov
fs
add
sub
shlb
xor
fdivrs
cmc
adc
jo
xchg
and
fs
push
xchg
mov
cltd
add
jo
jecxz
sbb
lds
leave
jne
aam
xchg
fidivrs
sbb
aad
mov
push
repnz
pop
int
lret
xor
or
pop
push
fisubrl
sti
lret
ja
lock
inc
outsb
lea
sub
xchg
sahf
mov
push
and
ret
out
sub
gs
out
fs
sbb
mov
cmp
imul
js
inc
adc
loope
or
xor
shlb
xchg
loopne
leave
pop
dec
pop
cs
roll
and
jns
adc
lods
ficoml
sub
jl
xor
or
xor
adc
add
pop
xor
mov
xor
mov
sbb
dec
sahf
stos
in
add
in
add
xchg
jl
je
je
mov
shlb
mov
sub
xor
push
inc
jb
pop
pop
push
pop
sbb
pusha
mov
mov
sub
jo
int
dec
enter
cld
testl
aas
pop
jle
sub
push
lods
or
jmp
leave
adc
adc
int
push
cmp
jae
call
out
pop
adc
sbb
mov
repz
push
pop
cmp
sub
push
push
out
fucomp
pop
inc
jne
mov
adc
xor
aas
jge
aam
repnz
and
iret
stc
and
scas
inc
out
rep
insb
insl
mov
fdivrl
lea
add
test
pop
es
dec
mov
ficomps
jbe
cli
test
add
or
xor
cmc
sbb
xor
inc
mov
mov
jle
jmp
push
adc
rolb
repz
jo
push
mov
inc
stc
or
push
sub
inc
push
mov
or
jmp
movsb
pop
test
cs
add
ret
push
push
jmp
data16
divl
push
dec
loope
or
sub
fildll
sbb
jl
add
adc
add
push
sbb
and
add
pushf
nop
push
addb
sbb
xor
shrb
mov
stos
cmp
and
rorl
inc
loope
fldenv
mov
push
icebp
test
mov
and
inc
insb
ret
cmp
mov
sub
stos
dec
cmp
and
sub
dec
sbb
ljmp
jo
shr
es
push
lods
push
sbb
push
sub
inc
sub
mov
jnp
pop
lret
and
add
pop
adc
add
push
pop
test
adc
pop
adc
ss
sub
and
or
and
xchg
imul
mov
cmp
xchg
sbb
popa
xor
and
push
or
cltd
push
pushf
test
xchg
mov
ss
das
mov
adc
movsb
repnz
push
add
mov
arpl
fwait
sub
or
leave
in
or
or
test
sbb
cli
cltd
addr16
or
sub
inc
push
test
lahf
shrb
mov
mov
adc
or
sub
and
mov
inc
mov
adc
mov
stos
adc
test
fnsave
push
dec
push
push
adc
out
push
add
xor
les
push
out
and
aas
mov
add
aas
lods
fs
xor
inc
ret
inc
xor
repnz
jo
pop
mov
mov
push
inc
pop
xchg
mov
jle
cmp
jae
mov
cmpsb
aad
or
or
jg
and
sbb
std
jl
aad
jo
clc
lret
push
sti
std
lcall
imul
xchg
fiaddl
ja
sti
std
iret
sub
and
or
xor
inc
sub
insb
add
mov
sarb
push
add
rorl
inc
mov
adc
inc
dec
int
add
insl
sti
fcoms
xor
sbbb
push
pusha
sub
in
or
ss
push
adc
rcr
push
sub
repnz
add
nop
test
xchg
lea
add
sbb
xor
in
add
add
add
add
add
pop
push
pusha
mov
dec
mov
jo
add
int
lcall
xor
inc
pop
add
push
cli
cwtl
ror
pop
adc
popf
sub
or
sbb
lds
out
aam
sbb
adc
popa
movsl
inc
or
and
test
jb
ljmp
and
stc
sub
ss
insb
cmp
pop
loope
mov
mov
pushf
adc
mov
mov
adc
lret
mov
fstpt
punpckhwd
push
sbb
insb
mov
inc
jns
pop
push
or
add
dec
jl
shlb
movsl
dec
inc
or
fiaddl
cmp
adc
adc
in
inc
xchg
inc
mov
xchg
pushf
addb
inc
or
test
push
xlat
adc
inc
xchg
adc
mov
adc
lret
mov
lea
push
arpl
inc
push
add
mov
and
cmp
fsubs
ja
int3
dec
dec
jnp
aaa
adc
rorl
lea
ret
mov
test
or
jbe
test
push
pop
js
adc
push
and
or
lahf
jmp
fcompl
adc
cmp
out
andl
adc
mov
ret
pop
repz
mov
fcomp
aam
mov
mov
jne
mov
mov
popf
xchg
jne
aam
fdivrs
push
sbb
lods
push
xor
in
in
pop
inc
push
cwtl
fs
cwtl
adc
flds
pop
xor
sbb
cmc
loop
adc
sarb
pushf
dec
or
add
inc
push
rorb
cwtl
out
inc
sarb
scas
lock
push
jg
xor
test
movb
nop
sub
cmpsl
dec
jno
hlt
loopne
aam
push
loopne
push
pop
ret
jo
adc
push
fisubrs
jl
sub
add
clc
aas
ret
pop
lock
subl
sbb
push
pop
mov
movsb
push
test
imul
lock
pop
rcr
mov
mov
aaa
pop
push
mov
or
adc
je
cmp
je
cmp
in
push
xchg
std
je
cmp
je
push
mov
rorl
mov
loopne
push
fwait
mov
testl
insb
pop
shll
mov
loope
das
jmp
add
push
ret
push
mov
aas
jnp
inc
and
dec
inc
hlt
inc
and
mov
rcr
roll
or
lods
dec
adc
mov
xchg
cmpb
movsl
lods
rolb
jecxz
jne
add
icebp
cmp
je
adc
leave
call
ret
addb
pop
jbe
jbe
add
cwtl
pushf
repnz
and
xor
sub
add
xlat
add
jge
cmp
nop
xchg
mov
daa
or
dec
scas
push
and
mov
push
movsb
std
push
pusha
loopne
sbb
sub
movsb
add
test
faddl
push
test
add
push
stos
sbb
pop
lcall
sbb
dec
inc
mov
jo
or
inc
and
add
das
or
pop
or
mov
cmp
clc
test
in
ficoms
jo
test
and
jne
add
pusha
mov
je
xchg
push
testl
and
in
push
mov
les
iret
pop
je
push
dec
icebp
mov
addl
mov
cmpsb
mov
sbb
nop
mov
pop
xor
push
cmp
cmp
xchg
mov
movsb
movsl
pop
jge
mov
sbb
sbb
sbb
sub
dec
fldenv
mov
xor
pop
sub
xor
mov
cmp
psubb
dec
leave
pop
pop
cld
and
loopne
push
or
je
xchg
nop
xchg
call
or
inc
inc
sub
cmpsl
add
xor
adc
enter
mov
enter
test
push
ret
and
inc
xchg
mov
pop
pop
sub
ss
and
push
mov
add
enter
arpl
adc
or
dec
push
ja
cmp
and
ljmp
sbb
xchg
adc
or
cmpsb
push
fsubl
add
aad
push
mov
mov
push
adc
clc
push
inc
mov
cwtl
cli
test
mov
inc
add
int
push
mov
push
fdivrl
inc
sub
inc
push
push
addb
mov
jo
inc
xchg
pop
mov
sbbb
push
inc
in
enter
sub
ficoms
fsts
sub
cwtl
dec
ficoml
enter
inc
lds
xchg
xor
aam
dec
adc
xor
dec
xor
mov
xor
push
rolb
pushf
xchg
testb
xchg
inc
sub
pop
mov
ss
xor
or
arpl
mov
xor
sub
mov
sub
shrb
push
lea
sub
dec
sbb
inc
push
sub
mov
sub
js
add
daa
into
ret
mov
inc
pop
add
jns
int
push
xor
aaa
lcall
lods
pop
xor
sbb
inc
dec
jg
mov
jge
fs
add
xor
lods
stos
inc
pop
nop
and
sbb
mov
in
gs
sub
mov
dec
call
shrd
inc
shlb
jne
mov
in
daa
and
icebp
adc
push
adc
fs
daa
outsl
mov
cmpl
mov
push
pop
mov
mov
sub
insl
mov
sub
fstl
lret
sbb
aam
xchg
sbb
xchg
addr16
lahf
sahf
outsb
pusha
jnp
pop
lea
cmpsb
or
cmp
flds
xor
dec
push
sbb
cmpb
xor
xor
push
loop
xor
xchg
scas
sbb
pop
cmp
inc
lcall
popf
xor
dec
mov
push
push
test
jp
mov
and
mov
push
mov
cmp
jae
or
push
cmp
shl
imul
inc
dec
stos
mov
outsl
xchg
rorl
mov
or
dec
push
inc
imul
adc
inc
pop
push
insb
jg
sbb
adc
fs
or
arpl
add
push
pop
test
jnp
rolb
mov
lea
adc
push
inc
add
cmp
clc
pop
ja
mov
xchg
popa
aam
inc
or
xlat
xchg
mov
icebp
mov
xchg
orl
fsubl
pusha
sbb
cld
push
mov
jl
xchg
pop
add
sub
inc
sbb
pop
addl
stos
adc
add
ret
and
xorb
pushl
sti
inc
daa
lea
adc
test
loopne
cwtl
cltd
cmp
std
and
inc
fs
sub
push
sbb
ds
sbb
out
dec
or
ret
sbb
sar
je
loope
rcr
push
add
push
outsb
insb
test
imul
leave
les
add
fisttpll
ljmp
or
inc
cmp
clc
jg
jge
jne
cmp
jne
inc
in
xor
lods
add
mov
xchg
adc
inc
xchg
sub
pop
sbb
push
je
sub
dec
xchg
test
cmpb
cmp
push
mov
fwait
xchg
test
push
xchg
add
imul
jno
dec
add
adc
mov
lods
jecxz
jmp
push
xchg
jle
mov
sbb
push
mov
cs
jp
push
dec
es
addr16
test
and
jo
js
inc
stos
or
inc
mov
mov
or
test
lahf
nop
pop
aaa
mov
pop
pop
mov
add
int
imul
mov
add
jmp
xor
inc
subl
pop
adc
mov
rorl
adc
or
out
xchg
scas
xchg
ss
xor
or
pop
bound
push
xor
stos
cli
or
mov
int
lock
ret
jg
add
push
lea
test
cmpl
dec
out
sbb
cli
push
sub
push
push
push
xchg
divl
mov
mov
push
push
push
mov
mov
sbb
inc
adc
xchg
jo
out
sbb
and
loopne
pavgb
push
enter
test
push
in
popf
shr
jge
and
sbb
sub
or
sbb
cmp
push
stos
sub
inc
shrb
cmovle
sahf
push
je
fucomip
scas
adc
adc
inc
dec
add
pusha
jmp
adc
push
rcrl
or
loopne
dec
cmp
xchg
sub
or
sti
in
addb
mov
xchg
push
cmp
xlat
movsb
lods
push
pop
addr16
stos
or
ljmp
add
inc
ret
push
jb
cmp
and
inc
jg
addb
push
es
aaa
dec
testl
iret
jp
jo
and
jnp
sbb
sub
rol
add
xchg
inc
pop
fstl
cmp
pop
andb
scas
pop
imul
das
adc
mov
sbb
mov
cld
mov
cmp
jne
sub
mov
cmp
adc
push
xor
fsts
les
inc
mov
test
jo
push
or
xchg
rcrb
inc
aad
mov
pop
cmp
adc
jg
pusha
pop
ret
test
pop
or
jmp
inc
sub
das
pop
aam
add
and
adc
stos
jl
mov
mov
dec
in
aas
rcr
or
dec
mov
push
outsb
das
push
pop
out
ret
dec
push
xchg
fiadds
push
enter
js
hlt
lea
push
in
loopne
jle
sti
gs
mov
insb
add
imul
add
and
jno
push
jecxz
cmp
repnz
sub
gs
adc
stos
loopne
rolb
push
add
rcrl
in
and
bound
shlb
fcomps
jo
mul
std
test
inc
add
dec
mov
or
xchg
push
rorb
inc
or
inc
fdivl
pop
mov
pop
mov
dec
inc
mov
adc
jns
sti
push
or
in
xchg
push
gs
sub
sub
cmp
das
cmp
push
add
in
cmp
push
lcall
xorb
and
adc
mov
xchg
rorb
inc
dec
xor
lods
fisttpl
push
aas
pushf
xlat
or
roll
push
push
sub
cmp
jmp
movl
add
out
adc
nop
cld
pushl
leave
pop
je
xor
dec
pop
daa
push
push
test
jo
adc
inc
bound
jle
inc
dec
loopne
jle
sbb
daa
cmp
and
add
dec
pop
test
adc
sbb
add
sbb
fadds
jne
cmp
daa
xor
stos
es
xor
push
inc
fisttpll
cmp
ret
add
inc
lret
out
test
sbb
es
or
add
fcoml
mov
jno
inc
add
inc
xor
push
inc
add
xor
jnp
and
bound
push
xchg
add
or
add
inc
or
pop
or
test
cmp
pop
xor
test
lds
cwtl
dec
fistpl
mov
or
jecxz
imul
xor
sub
xor
adc
out
sub
mov
scas
clc
push
rcrb
pop
inc
add
adc
popl
add
adc
xchg
test
adc
test
ret
nop
sub
pop
daa
sub
mov
mov
pop
add
ret
scas
mov
orl
clc
lods
inc
mov
movsb
sbb
mov
adc
sbb
and
sbb
add
xor
loope
out
or
imul
mov
jne
cmp
mov
std
jb
sub
jmp
push
dec
movzwl
dec
pop
cmpl
lods
xchg
ret
lret
jl
in
mov
push
push
or
lock
inc
lcall
inc
sub
sbb
dec
shll
sub
nop
mov
sbb
mov
xor
pop
jl
add
lds
ljmp
in
add
stos
jns
push
dec
push
push
push
rorl
in
or
inc
cmp
lahf
jmp
mov
mov
cmp
xchg
jg
jle
push
push
or
fimuls
or
iret
and
mov
shlb
add
xor
sub
and
sub
pushf
dec
push
and
cmp
les
add
lea
stos
std
sbb
add
or
aas
loope
push
push
pop
add
sbb
fists
cmp
pusha
movsl
test
test
mov
fidivrs
xchg
inc
sarb
jno
lock
into
rolb
adc
ds
les
mov
dec
loopne
push
lds
inc
dec
xchg
mov
push
mov
and
and
or
xchg
xor
cmc
xor
gs
ja
pusha
cmp
mov
xor
adc
inc
add
bound
push
js
test
and
es
lret
ss
pop
and
int
sbbl
adc
inc
inc
cmp
das
inc
xor
sub
orl
add
nop
sbb
push
fidivrl
roll
imul
mov
mov
add
in
lahf
push
push
push
xor
ror
sub
cmp
push
sbb
in
mov
push
dec
xor
adc
push
jo
or
pop
jmp
mov
dec
movsb
mov
jbe
adc
pop
adc
rorb
arpl
pop
aas
mov
mov
inc
xor
inc
out
mov
push
test
push
sub
fsts
cmpsb
sbb
sbb
mov
pop
jb
outsb
adc
dec
je
push
push
xchg
mov
pop
cli
adc
add
push
add
push
ss
sbb
or
add
movsb
pushl
add
push
mov
cmp
es
mov
sbb
cmp
xor
jno
enter
in
ss
cmp
out
out
and
add
loopne
adc
xor
cmp
mov
gs
inc
loop
xchg
or
in
insb
add
mov
dec
hlt
mov
mov
pop
lea
mov
add
inc
repz
dec
subl
cmpb
jne
adc
fldenv
xor
ja
pop
adc
add
stc
xor
lahf
sbb
add
push
or
imul
aam
dec
test
or
or
dec
cmp
add
pop
xchg
lahf
arpl
stos
movsl
adc
pushf
sbb
lret
jl
adc
or
xchg
mov
pop
cmp
mov
add
mov
xchg
sub
loop
lret
shlb
mov
lcall
mov
sub
sbb
in
and
xchg
sbb
add
jge
and
sub
fs
push
inc
mov
jecxz
pusha
push
dec
jecxz
inc
sub
insl
sbb
and
push
push
in
add
or
adc
test
cmc
or
lret
or
mov
push
cmpsl
fsts
or
xor
fwait
push
dec
xor
push
ret
push
sub
sub
pop
mov
stc
inc
nop
mov
and
xor
movsb
inc
pop
xor
jg
nop
cmc
add
fsubr
std
or
fdivs
push
mov
pop
push
jg
sub
jne
mov
incb
add
lock
mov
pop
notl
pop
mov
leave
and
aam
and
imul
push
repz
jg
enter
xchg
sub
shlb
ficomps
push
es
xchg
mov
and
sbb
sbbb
cmp
xchg
or
sbb
js
aaa
push
add
pop
or
and
inc
push
dec
inc
sbb
leave
inc
push
dec
inc
dec
add
push
lcall
push
jl
js
mov
sub
arpl
and
test
sbb
push
fbld
dec
sub
jmp
mov
icebp
cmpsb
pop
fstps
pop
and
add
push
and
and
mov
popa
leave
in
push
pop
mov
std
in
push
sbb
xor
and
push
xchg
bound
add
fld
enter
pop
mov
dec
pop
leave
inc
xor
sbb
mov
push
rcll
jl
add
js
pop
movsb
xor
or
mov
or
jo
mov
bound
iret
push
mov
lcall
jb
in
sub
dec
and
jb
dec
add
cmp
and
mov
arpl
in
movsb
inc
inc
dec
mov
mov
pop
pop
aad
std
sahf
inc
mov
dec
in
mov
dec
mov
dec
scas
add
xchg
sbb
dec
push
stos
movsb
pop
ret
xor
mov
adc
into
push
mov
test
mov
adc
jmp
fwait
pop
jb
pop
add
or
add
pusha
add
or
cltd
adc
nop
adc
cs
add
out
hlt
addb
loopne
cmp
sbb
jne
push
mov
sub
out
aaa
mov
push
mov
dec
cmp
push
nop
out
pop
fs
pop
mov
fs
xor
and
sbb
jl
fwait
xor
sub
popa
das
iret
and
sub
sbb
iret
cmpb
push
xor
sbb
pop
dec
dec
or
inc
aas
out
faddl
fimull
pushf
lock
xor
sbb
xorl
int3
xor
add
ror
and
inc
sub
pop
jmp
cli
addb
add
paddsw
push
pop
movsl
enter
add
sbb
or
arpl
lock
imul
popa
stos
js
vrcpss
pop
and
add
inc
outsl
or
xchg
add
insl
mov
imul
int3
sub
xchg
aam
repnz
cmp
and
mov
mov
and
js
mov
and
pop
add
roll
or
inc
add
jmp
cmp
xchg
xor
inc
jp
sbb
and
jo
add
dec
loopne
sub
ja
mov
ret
or
adc
rorl
in
jle
add
shlb
and
adc
push
or
adc
push
loopne
aam
or
cmp
and
pop
cmp
arpl
sub
cmp
sbb
and
jecxz
frstor
decb
cwtl
out
pop
jnp
ret
jle
mov
mov
cmp
fimuls
in
mov
fs
add
xlat
adc
or
popa
add
rcr
sbb
cmp
xchg
add
notl
mov
sub
pushf
cmc
jl
lea
push
lea
mov
sbb
das
adc
push
clc
cltd
inc
jg
mov
mov
push
pop
clc
xorb
fistps
dec
push
mov
mov
push
js
cmpsl
add
inc
push
push
lcall
repz
mov
pop
loopne
js
or
pusha
jl
pop
repz
pop
mov
adc
xchg
xor
or
pusha
sub
outsb
cvtps2pd
push
inc
fisttpl
or
cwtl
dec
insb
sbb
mov
ret
pushf
jns
push
shl
out
push
xchg
sbb
xchg
cwtl
jo
int
out
rol
div
ljmp
clc
adc
pop
mov
dec
stos
loope
push
push
out
and
xchg
lcall
into
mov
fdecstp
or
into
inc
ficompl
leavew
dec
dec
sahf
xor
sbb
dec
xchg
test
test
pop
enter
pop
inc
pusha
adc
mov
cltd
mov
rclb
or
stos
lret
inc
push
mov
inc
fcoml
xchg
or
mov
push
xchg
movsl
bswap
or
adc
int3
push
mov
lcall
dec
test
adc
jns
pop
lahf
mov
imul
and
or
xor
add
and
mov
pop
push
sti
flds
flds
cmp
mov
rcl
xchg
fmulp
lret
leave
and
and
movsb
push
sbb
sub
fmuls
push
sbb
fsts
inc
sbb
sub
mov
adc
stos
testb
repnz
mov
pop
pop
into
pop
cli
ffreep
add
jnp
adc
call
cmpl
popa
sbb
ds
cmpsb
sub
cwtl
jl
push
add
push
or
add
cmp
cwtl
inc
lcall
mov
jl
cmp
pop
lahf
std
xlat
pop
rcll
jp
pop
mov
inc
jecxz
mov
push
and
cld
add
add
sahf
test
loop
mov
adc
mov
inc
adc
fdiv
ret
xchg
popa
insl
jmp
les
and
push
loopne
jo
rorl
jbe
sbb
push
lea
iret
rol
dec
rol
add
cmpsl
sub
cwtl
ret
push
mov
push
xchg
push
push
push
and
adc
mov
adc
xchg
daa
fadds
or
bound
mov
adc
call
xlat
mov
and
ds
mov
ret
and
push
mov
add
jecxz
outsb
mov
push
xchg
aam
test
cltd
cmpl
xchg
sbb
lea
loop
mov
sbb
rcll
mov
dec
cld
xor
into
dec
jnp
or
leave
ficoml
inc
ret
test
push
pop
int3
and
adc
loop
xchg
and
scas
das
push
inc
sbb
pop
inc
push
dec
mov
stos
push
sub
js
pop
or
sbb
inc
imul
mov
js
jne
push
push
cld
mov
push
or
cmp
je
outsb
and
clc
inc
mov
in
aam
xchg
lcall
jg
adc
fdivrp
adc
adc
add
mov
pop
jmp
xchg
add
xor
adc
popf
jg
push
inc
fcomps
insb
dec
or
icebp
mov
iret
sub
xor
inc
lock
iret
mov
dec
sub
sub
xchg
inc
sub
sbb
iret
insb
dec
cs
add
mov
dec
ret
and
xor
mov
ja
jno
loope
push
mov
xchg
xchg
mov
cmpl
jno
jbe
cmp
pop
xchg
sbb
clc
fwait
mov
inc
add
sbb
push
orl
mov
lret
pop
push
mov
scas
lret
call
hlt
addl
pop
shrl
std
push
cmpl
or
inc
movsl
or
xor
cmp
jbe
loopne
mov
sarb
clc
mov
mov
clc
rorb
xor
out
mov
inc
int3
test
lods
add
fmuls
push
loopne
lea
push
push
jge
jl
adc
fnstenv
mov
cld
push
in
or
adc
adc
cmp
pop
cwtl
adc
adc
sub
aam
jbe
adc
leave
xor
pop
and
jl
pop
or
jecxz
sbb
in
or
cmpsb
fs
mov
dec
xchg
lock
jmp
insl
fndisi(8087
push
and
call
add
jne
push
inc
test
and
push
insb
and
imull
mov
in
pusha
aaa
inc
sti
mov
jnp
add
fs
sbb
cmp
cmpsl
add
sub
popa
outsb
das
add
push
push
add
jle
cmpsl
orl
aad
sub
stc
insb
inc
adc
mov
inc
imul
mov
pop
push
inc
mov
in
adcb
aam
lds
jl
push
mov
xor
and
adc
or
or
cltd
jp
mov
jmp
testb
inc
add
cmp
pop
rcrb
mov
dec
cld
or
dec
mov
mov
out
movups
lods
iret
rcl
cmpsb
decl
push
out
pop
sbb
loopne
xor
add
sub
lcall
orb
outsb
pop
in
lock
push
add
je
push
or
xor
ds
cmp
xor
add
adc
xchg
js
push
pop
aas
mov
int3
cmp
xor
inc
addr16
and
mov
out
push
pop
fstps
ljmp
int3
stos
or
adc
aam
cmp
mov
sbb
loop
jg
adc
add
daa
push
mov
jl
subl
je
mov
insb
movsb
lock
jb
mov
cwtl
sbb
mov
push
push
mov
sub
jne
xor
and
push
mov
add
sbb
rolb
lods
std
push
inc
int3
add
pop
repnz
mov
and
rolb
lock
loop
inc
inc
and
mov
cmp
sub
push
stc
pop
mov
mov
aam
and
sub
push
sub
push
movl
dec
add
inc
or
mov
cwtl
pushf
cmpsb
movsb
cmc
ret
pop
mov
fs
cmp
add
shlb
add
sub
pop
ss
pop
push
sbb
inc
push
push
cmp
add
cmpsl
adc
adc
and
push
dec
mov
add
adc
or
mov
pop
pop
ret
shl
stos
outsb
xchg
lods
mov
fxch
fst
sub
in
jnp
xlat
push
rol
lock
and
cmp
inc
dec
rcrb
sarb
inc
mov
aad
push
dec
into
jae
push
loop
cmp
imulb
xor
add
bound
mov
dec
mov
dec
cmp
pusha
in
adc
cs
imul
dec
add
inc
lods
push
lcall
inc
das
fs
cli
es
xlat
sbb
out
push
idivb
mov
mov
mov
pushf
sub
jo
imul
pop
push
pop
mov
dec
adc
fwait
add
jbe
cs
push
inc
push
rorl
nop
test
sbb
inc
decl
movzwl
mov
mov
shl
cmp
rcrb
loop
cld
addr16
push
and
or
setb
jb
imul
adc
adc
inc
adc
ja
inc
cmpsb
testb
aas
es
cs
dec
jns
jmp
adc
leave
data16
in
pop
andb
dec
push
xor
lret
push
xchg
mov
push
pop
xchg
xor
test
scas
mov
movsl
test
push
mov
adc
pop
push
and
xor
cmp
sti
xor
jge
push
xor
and
jge
in
call
pushl
adc
loop
outsl
sahf
ret
cmp
loopne
push
dec
sbb
sub
push
pop
cmp
daa
bound
je
push
pop
scas
jbe
mov
add
mov
or
aaa
mov
or
sarb
bndstx
lea
aaa
dec
push
or
popl
mov
jge
inc
adc
rolb
add
call
add
movsl
std
int
push
dec
sub
jns
mov
add
add
mov
mov
cwtl
jno
mov
jmp
mov
dec
enter
arpl
andl
lods
pop
call
leave
mov
mov
lahf
dec
mov
cli
cmp
sahf
cmpsb
cmp
loop
ret
or
mov
and
mov
in
or
es
xor
mov
enter
inc
lahf
arpl
jl
pop
rol
jl
pop
adc
nop
mov
ret
mov
rorb
add
pushf
push
sbb
mov
pop
fsubrs
in
push
jmp
cmp
or
dec
aad
and
hlt
clc
xchg
dec
jo
aam
mov
push
push
pop
xor
and
jl
and
xchg
add
popl
cld
push
mov
adc
jl
negb
mov
fisubrl
jne
mov
stos
int3
xchg
inc
pop
pop
push
frstor
pop
je
mov
sbb
in
loopne
shlb
and
push
cmp
xor
jmp
fadds
pop
cmp
xlat
mov
clc
pop
sbb
divl
pop
push
pusha
mov
ret
adc
mov
push
js
addb
cmp
sar
or
jb
mov
mov
movl
mov
push
enter
dec
mov
insl
jne
cs
add
repz
push
push
jae
arpl
cmp
jne
push
push
je
inc
or
lret
repz
jg
push
or
and
jle
adc
sub
xchg
pop
xchg
scas
or
inc
sbb
xchg
jecxz
push
cmp
fcoml
rcll
dec
push
mov
popf
push
iret
rcr
pop
cmp
je
mov
pop
or
push
popa
or
or
clc
jne
enter
inc
dec
fsubrl
movsl
dec
jb
fistpll
xchg
je
outsb
jg
xchg
sub
pusha
xchg
add
rorb
mov
movsl
mov
fwait
xchg
or
jnp
push
iret
jo
div
cmp
jmp
push
inc
sahf
xchg
inc
mov
mov
lcall
push
push
outsl
and
mov
xor
sbb
push
pop
jl
mov
push
push
les
mov
xor
mov
jnp
jae
movsb
orl
fmull
stc
fldenv
fists
or
dec
loopne
adc
les
pusha
jg
inc
cmc
cmpsl
mov
pop
je
iret
dec
push
xlat
sti
or
sbb
dec
and
outsb
xchg
rclb
jns
add
mov
subb
and
ds
mov
cltd
test
imul
push
out
leave
mov
sub
or
dec
mov
sub
clc
test
sub
in
add
das
adc
mov
dec
rcrl
add
cmp
xor
shll
fs
inc
shll
fdivrs
aas
xchg
data16
call
cmpsb
cwtl
notl
adc
outsb
sti
or
push
mov
xor
xchg
inc
mov
ss
scas
sub
xor
and
pop
les
divl
aam
adc
push
and
add
xor
or
xor
mov
roll
in
fadds
inc
push
fs
sbb
fs
push
fs
push
fs
push
imul
test
push
adc
sub
add
cmp
jne
adc
in
clc
adc
and
testb
pop
cmp
jne
mov
xor
rcll
outsl
jecxz
or
dec
pcmpeqw
imull
adc
mov
mov
sub
test
dec
adc
mov
dec
gs
lret
sbb
repnz
iret
fs
mov
out
sub
sbb
ror
test
pop
push
xchg
add
sbbb
bound
add
shrb
and
jb
mov
imul
jl
mov
add
lcall
cmp
push
pop
lock
out
rclb
xor
jae
add
in
sbb
push
pusha
mov
decl
add
pop
fsubl
push
rol
ljmp
and
push
pop
add
ds
jmp
pop
jge
loope
outsl
pop
jne
lea
add
or
jmp
bound
adc
pusha
daa
sahf
ror
adc
push
jns
and
inc
sbb
iret
mov
cmp
fnstcw
adc
inc
cmp
pop
mov
das
or
movsb
cmp
in
add
repnz
out
add
iret
cmp
push
mov
stc
xchg
mov
add
imul
out
movsb
xor
fnop
add
push
mov
push
adc
fsubrl
pop
mov
or
or
stc
lock
pop
xchg
je
icebp
jne
ds
mov
xor
jnp
ja
fwait
and
arpl
into
scas
mov
sub
loope
enter
andb
adc
outsb
jne
pop
jns
je
ret
adc
jne
stc
int3
shrb
test
mov
inc
fs
cmp
add
clc
and
stos
cmc
dec
rorb
jg
mov
mov
rclb
or
jmp
sub
movl
insb
inc
push
pusha
jp
aad
adc
lea
cmc
lds
or
cmp
inc
dec
hlt
pop
mov
add
daa
or
adc
fidivrs
jmp
pop
xor
nop
fcmovnu
clc
push
or
jb
mov
jg
push
or
mov
xchg
mov
dec
push
mov
xchg
mov
xor
xchg
je
pusha
push
add
add
int
cld
or
scas
jo
pushl
push
and
sbb
fimull
dec
xor
lock
dec
sbb
js
rcrb
and
sbb
pop
add
pop
mov
add
pop
fs
inc
inc
push
pusha
pusha
insb
inc
fs
insb
push
cmp
movsb
push
jp
lcall
ds
ret
inc
arpl
ja
and
dec
jo
mov
mov
lret
in
je
cmp
je
mulb
sbb
jo
roll
mov
and
jbe
and
iret
je
xor
lods
into
out
push
into
push
push
lock
lds
push
sub
inc
pop
xchg
jmp
lea
pop
fmull
leave
add
push
addb
xchg
out
jne
lock
adc
fs
mov
sahf
pop
in
cmpsl
addb
negl
push
push
adc
into
imull
adc
sbb
and
mov
int
mov
mov
sbb
add
add
push
std
rcrl
rorb
into
lea
fimuls
ret
movsb
sub
cs
push
mov
inc
xchg
push
cmp
test
push
je
je
loopne
cmp
testb
or
add
movsl
push
mov
and
mov
orl
and
test
ljmp
sbb
adc
addb
jbe
scas
inc
pop
jo
notb
xor
sbb
out
sbbl
adc
bound
jns
insb
mov
push
clc
push
push
jge
jne
enter
xchg
xchg
cs
movsl
dec
xor
mov
cmpsb
call
fisubrl
lock
outsb
or
mov
xchg
call
rol
mov
xchg
popa
mov
push
sbb
pushf
cwtl
fisubrs
add
sub
fimuls
mov
sub
pusha
loopne
je
sbb
pusha
or
xchg
div
push
lock
and
dec
push
lea
push
pop
cwtl
push
adc
movsb
jo
pusha
add
ret
xor
dec
push
or
cmpb
sbb
lods
mov
xor
add
adc
test
xchg
pop
push
push
cwtl
jge
loopne
cmp
les
out
xchg
pop
xor
pop
jo
lds
aas
popa
lock
add
fs
adc
neg
mov
jb
mov
pop
arpl
pusha
dec
jnp
and
sbb
adc
inc
ss
sub
inc
and
cmp
push
out
addl
loopne
jmp
call
je
push
jp
aad
add
sbb
inc
or
jne
inc
and
pop
loopne
or
xorb
addl
es
adc
es
jg
adc
test
insl
or
pop
jo
daa
add
add
push
pushf
xchg
cmp
or
mov
adc
inc
push
add
ds
pop
pop
xor
test
or
push
or
test
pusha
cmp
popa
ret
loope
push
pop
into
jecxz
nop
nop
mov
lock
adc
loopne
cmp
ds
mov
out
xchg
lret
aaa
sub
insl
enter
xchg
lea
imul
lods
mov
inc
adc
fildl
sbb
or
jle
gs
adc
cmp
ret
mov
xorb
aam
mov
push
cs
or
add
xor
xchg
shl
out
fisttpll
adc
pop
mov
out
pop
in
mov
xchg
cmp
xor
mov
movsl
add
idivb
je
push
es
mov
xchg
push
pop
loopne
mov
or
pop
push
js
out
jo
push
cli
or
mov
mov
sti
cmp
mov
sbb
fsubrl
mov
test
in
cltd
js
jb
mov
and
fs
or
push
sahf
mov
xchg
ljmp
pop
and
and
cmpsl
mov
pop
or
test
frstor
daa
jae
xchg
out
mov
push
sahf
push
push
je
or
cs
or
in
ret
adc
cmp
sar
xchg
arpl
push
sbb
xchg
xor
out
imul
push
pushf
inc
dec
cmp
out
movsl
xchg
sub
sub
das
jno
add
mov
pop
xor
or
aaa
pusha
add
push
fstpt
add
adc
sub
imul
stos
sbb
adc
jl
or
sbb
pop
lods
jp
out
pop
add
ret
sti
and
and
xor
cmp
or
jno
xchg
ret
add
jmp
xchg
jne
mov
push
pop
cmpsl
sbb
sbb
xor
bsf
jmp
cmp
mov
sub
or
loopne
rclb
sub
jmp
sbb
and
push
lds
aas
mov
leave
in
ret
xchg
std
decl
adc
cs
roll
xor
ja
lcall
mov
inc
xchg
out
ss
dec
push
addl
add
mov
inc
jnp
pop
pushw
push
jo
bound
push
mov
pop
cmp
test
xor
push
xor
popa
xor
push
or
push
call
push
and
xchg
in
or
mov
or
add
add
pop
add
push
std
outsw
repz
and
fbld
mov
xchg
in
sub
sub
push
jb
fdivrl
dec
push
cmp
leave
inc
repnz
or
test
cltd
adc
notb
sbb
js
add
cmpl
rolb
xor
and
push
les
mov
and
mov
cwtl
ss
adcl
addr16
inc
xchg
pusha
push
cld
sub
stc
andl
pop
sub
shlb
outsb
jl
aas
sbb
outsb
inc
jmp
pushl
ljmp
call
inc
lea
in
out
ret
xorb
scas
push
or
push
push
pop
mov
or
xor
adc
pop
push
dec
sbb
jns
test
int3
mov
add
mov
jl
andl
movsb
push
in
adc
pop
and
push
popa
jmp
cmp
outsb
inc
sbb
loopne
jecxz
push
cmpsb
jns
fistpll
jl
dec
xor
sub
push
dec
outsb
mov
mov
ret
adc
xor
cmp
xchg
lahf
add
cmpsl
shrl
mov
jae
lds
test
or
xchg
or
adc
inc
mov
fdivrl
adc
test
push
mov
cli
push
shl
mov
cmp
das
icebp
xor
jl
mov
pop
or
pop
sub
adc
je
pop
sbb
adc
cmp
sbbb
jmp
add
sbb
adc
mov
push
inc
adc
ret
adc
inc
push
and
sbb
je
push
add
or
xor
pop
fldl
mul
insb
cwtl
aam
enter
mov
repz
cmp
movb
inc
test
sbb
or
test
add
jne
aaa
pusha
fstl
stos
xchg
xor
add
and
sbbl
or
jbe
or
add
xchg
jno
mov
add
pop
and
xor
and
xor
into
jne
loopne
or
shrl
mov
xchg
add
adc
mov
sbb
xchg
and
mov
ss
push
adc
inc
lret
xchg
mov
lahf
es
lret
pushf
mov
mov
xor
xchg
mov
mov
ds
out
movswl
add
and
cmp
add
insb
and
or
add
push
xchg
or
jb
push
ja
ret
mov
test
ret
dec
xor
or
insb
scas
xchg
mov
stos
cs
cmp
fbstp
add
shll
ret
mov
add
xor
pop
mov
call
movhps
scas
jb
add
mov
loopne
inc
movl
xor
push
cmpsb
push
loope
data16
jne
daa
sbb
inc
mov
push
outsb
cld
nop
jmp
jg
add
dec
fcompl
insb
inc
cld
pushw
pushf
pushfw
inc
xlat
adc
mov
or
aad
test
fst
lods
dec
rcl
mov
mov
sarb
add
mov
push
sahf
out
pop
ret
insb
mov
mov
mov
cmp
pop
pop
jl
repnz
push
pop
cmp
push
jne
addb
mov
das
pop
aad
cwtl
add
pop
cmpl
mov
mov
adc
fdivl
ret
lea
jp
cs
andl
add
or
stos
mov
leave
pushf
jmp
add
xor
ljmp
bound
sbb
xchg
cmp
mov
or
dec
mov
lahf
push
cmp
adc
add
xchg
sbb
in
je
lock
or
mov
int3
xchg
mov
andl
jo
dec
adc
pushl
mov
xor
and
cmp
xor
into
add
adc
xorb
mov
aas
push
lea
mov
xchg
je
test
sub
movsl
aam
dec
push
mov
stos
mull
subb
mov
xor
push
add
ljmp
sbb
pop
and
pop
popa
cmp
and
test
sbb
test
sbb
cmp
in
push
or
jae
in
cmp
xor
jo
add
sbb
sub
add
in
scas
lock
negl
dec
push
push
push
mov
jge
insb
add
pop
add
mov
push
inc
gs
xchg
adc
sbb
movsb
addr16
xor
adc
sbb
aas
leave
clc
and
cmp
pop
fdivl
mov
loope
in
mov
and
cwtl
and
jle
and
pop
rclb
test
mov
push
xor
and
adc
sbb
pop
adc
shll
aas
xchg
inc
xlat
sarl
add
push
out
add
pop
js
fiadds
push
cld
mov
mov
in
out
repz
cli
jge
movl
shr
inc
add
mov
cmp
ret
add
or
pop
rcll
pop
inc
sbb
outsl
shll
stos
pusha
insb
std
mov
dec
ret
mov
int
das
or
fldenv
xor
loopne
or
adc
and
lock
add
aas
lods
lock
mov
sbb
xchg
out
movsb
xor
push
push
pop
es
ja
adc
sub
shlb
xchg
jne
add
jns
push
outsl
jmp
and
in
idiv
cmc
sbb
jle
push
push
push
add
push
inc
xchg
xor
stc
push
inc
sbb
xor
sub
in
or
shlb
push
mov
hlt
fisubrl
inc
add
xlat
or
pop
lea
adc
push
insl
mov
xorb
pop
mov
cmp
movsl
rorb
outsl
loope
dec
jge
fimull
cmpb
mov
ud0
mov
sub
hlt
in
add
movb
int3
and
or
add
pop
adc
mov
pop
dec
sub
ss
xor
add
push
add
pusha
enter
push
add
push
sub
fisttpl
mov
lea
in
push
mov
mov
aaa
gs
in
or
std
push
dec
lahf
ficomps
lcall
jmp
add
mov
add
sub
jg
mov
jo
dec
in
add
or
mov
jge
jo
push
jbe
jb
fmuls
cwtl
push
fmull
cmc
push
adc
push
cmp
je
add
adc
aad
jb
repnz
adc
xor
fadd
jb
adc
jg
or
xor
lods
jecxz
or
mov
aad
jne
mov
sbb
punpckhdq
in
lea
popf
shlb
push
add
mov
fstpl
push
adc
push
push
or
sub
and
add
fs
popa
sub
inc
fnstcw
or
cmpl
pusha
mov
lods
push
cli
cmp
jbe
sub
fwait
mov
adc
push
jnp
mov
push
insb
lods
sub
das
das
push
sbb
outsb
mov
jl
negl
cmpsb
inc
clc
lret
mov
push
push
sbb
test
push
inc
inc
mov
mov
dec
or
adc
cmpsl
push
cmpb
loope
xorl
xchg
rcrl
test
jo
sbb
xor
bound
add
jmp
or
xchg
xor
dec
jae
lret
add
dec
les
fcoml
int3
out
pop
testl
jge
test
mov
testl
ret
lock
movsb
jle
xor
xchg
fldl
insl
or
jl
add
xor
or
mov
adc
mov
and
insl
jne
insb
es
popa
xchg
mov
push
stc
push
sub
mov
int3
jae
push
push
pusha
cwtl
add
pop
es
out
dec
int3
jl
movl
lret
push
fmull
aas
lods
mov
jle
xor
jge
xchg
jmp
pop
add
push
sub
dec
mov
rorb
bound
aas
filds
es
mull
mov
or
aam
mov
jae
cmpl
mov
push
rorb
xorl
and
mov
xchg
int
and
dec
pop
lods
push
inc
ret
mov
push
mov
nop
lret
xchg
idivb
add
xor
sub
pop
aaa
adc
dec
jnp
orl
int3
sti
sub
loope
add
xor
aad
xchg
bound
or
and
add
xchg
push
push
mov
inc
in
mov
jns
dec
pop
or
xor
xchg
mov
pop
xor
fsts
or
pop
pop
dec
gs
jbe
push
adc
push
adcl
add
mov
xchg
add
dec
add
ret
divb
lods
leave
or
cmp
xchg
adc
pop
jp
cmp
loop
push
and
mov
out
sbbb
jne
ret
sub
dec
loopne
and
sti
dec
ja
je
or
je
lods
or
sub
xchg
scas
andb
cmp
stos
std
and
out
push
or
ds
cmp
js
jne
mov
push
lcall
sub
jmp
cmp
dec
repz
push
xor
cmp
inc
mov
lds
mov
pop
and
movzwl
dec
xor
push
clc
mov
pop
enter
jmp
arpl
lock
mov
es
clc
push
jo
pop
inc
mov
push
add
gs
dec
imul
adc
mov
ret
push
pop
shlb
or
adc
es
aam
pop
fs
cli
and
mov
andl
pusha
add
mov
or
push
rolb
test
xchg
mov
dec
imul
je
sub
sub
push
pop
push
adc
scas
test
inc
push
adc
stos
mov
mov
lods
mov
and
or
push
adc
std
loop
sub
jno
insl
or
shl
sub
lcall
divl
inc
or
adc
imul
inc
adc
and
and
xchg
sub
int3
gs
ss
xchg
cli
push
fmull
lods
dec
jns
pushf
dec
sbbl
cli
mov
mov
xchg
pop
test
pop
fcoml
or
cwtl
xor
adc
sti
je
or
lret
xor
sbbl
mov
pushf
rcr
pop
loopne
ret
aam
je
add
fcomp
dec
in
sbb
ret
ss
and
push
addb
fstl
sahf
lret
inc
xchg
add
dec
stos
xor
xchg
xor
popa
sbb
movzwl
push
gs
lcall
or
popa
add
dec
sti
pop
inc
idivl
push
lea
adcl
mov
inc
enter
sbbb
dec
push
and
mov
and
movsb
cltd
call
cmp
jns
int
call
ret
add
mov
push
fdivr
outsb
divb
outsl
inc
cmp
pop
jge
leave
dec
sub
and
or
in
out
mov
xchg
fcoml
in
cmp
nop
call
imul
movsl
aam
movsb
cmp
inc
or
aas
mov
sbb
sarb
test
outsl
push
addr16
popf
xchg
loopne
dec
push
adc
mov
idivl
pop
adc
leave
push
jmp
sbb
js
ret
fisubs
shll
cld
sbb
gs
add
cmc
inc
sub
cmp
ret
popa
out
xchg
cs
push
xlat
mov
adc
dec
scas
mov
jmp
xor
or
and
adc
sbb
ret
xchg
in
jp
push
dec
inc
shrl
aam
push
nop
hlt
sub
call
mov
sbb
shrb
adc
rcrb
xor
pop
sub
les
cld
and
clc
fistps
or
daa
jnp
cld
xor
inc
enter
test
or
mov
addl
dec
lcall
pop
in
cmp
int3
mov
cld
data16
out
mov
xlat
jp
lret
jo
and
sub
sub
sub
sub
pushf
je
and
enter
cmp
je
sbb
mov
loopne
pusha
movl
mov
and
sub
stc
fwait
aaa
in
mov
add
adc
dec
sub
sbb
imul
hlt
cmp
xor
add
sbb
rclb
xchg
mov
in
lret
aam
fsubs
inc
adcl
pusha
movsl
mov
movsb
loope
add
mov
jp
out
or
push
aas
xor
test
addb
jo
push
in
add
fmuls
and
shl
call
lret
loopne
dec
pop
incl
repnz
in
std
decl
in
xor
dec
pop
stos
pop
lcall
mov
add
xchg
dec
cli
jne
pop
jp
jno
mov
movsl
cli
mov
sbb
into
mov
clc
lea
rolb
push
adc
dec
inc
dec
mov
and
sbb
xor
loopne
push
sahf
loopne
lock
pop
stos
push
add
add
dec
and
inc
adc
xchg
add
fidivl
mov
add
aaa
pop
rcll
int3
push
push
xchg
push
rcrb
cmp
add
or
fs
inc
loopne
push
inc
imull
or
call
ret
inc
cmp
filds
add
call
jns
hlt
fwait
cmp
js
daa
or
enter
or
jg
imul
js
and
mov
sti
inc
mov
push
js
jne
es
test
push
add
in
or
push
mov
out
imul
test
lock
mov
cs
lret
xchg
cmovnp
mov
arpl
push
or
mov
movq
dec
xchg
xchg
cmpsb
imul
sub
sbb
ror
and
push
inc
rolb
and
mov
in
add
out
jbe
push
dec
jecxz
dec
adc
xor
xor
push
sbb
sub
xor
adc
add
add
mov
mov
mov
arpl
jnp
adc
sub
dec
sbb
push
sbb
push
sbb
pop
movb
pop
xchg
ret
mov
push
adc
inc
xchg
sub
js
dec
sbb
fisubrl
stos
xor
inc
jne
scas
push
and
sbb
cmp
cmpsl
std
fs
sub
ss
inc
adc
pop
sbb
fs
imul
xor
cmp
sub
loopne
add
pop
inc
add
imul
jnp
std
nop
adc
and
jl
pushf
les
out
mov
hlt
sbb
pop
fidivs
push
sub
test
or
rorb
in
aaa
stos
or
adc
adc
data16
pop
xchg
mov
es
stos
lods
orl
roll
mov
inc
add
cli
call
push
test
clc
push
cltd
inc
lcall
pop
shll
add
imul
adcb
popf
xchg
cmpsl
cli
into
cmpsl
push
sub
add
and
add
push
subl
dec
dec
cli
add
pop
je
or
push
cmp
int3
mov
es
dec
or
mov
sub
xor
adc
and
cld
cs
clc
stc
leave
movsb
aaa
mov
lcall
cmp
or
xor
fcoml
inc
mov
xchg
sbb
xchg
int3
jbe
sub
fiadds
and
pop
ss
push
mov
loopne
pop
pop
movsl
and
mov
and
pushf
push
adc
and
jns
push
les
inc
mov
aam
clc
push
cld
push
sbb
test
repz
jbe
shr
push
jmp
jmp
and
sbb
xchg
lods
inc
xor
jecxz
popa
mov
jno
mov
pushf
push
movsbl
rcrb
gs
cwtl
shl
or
sahf
je
dec
and
or
lahf
out
push
sub
mov
mov
sbbb
xchg
test
xchg
mov
jle
clc
es
add
aas
push
mov
gs
mov
and
and
sbb
xor
mov
jge
add
lea
fists
cmp
ja
dec
jle
sbb
push
pop
mov
in
push
push
sub
repnz
dec
xchg
mov
adc
mov
and
fcoml
sub
jl
sub
mov
sub
cmp
nop
cmp
or
aas
sub
mov
or
and
fwait
inc
and
pop
cltd
xchg
lods
repz
cli
fmull
cmpsb
nop
dec
add
sahf
and
xchg
xchg
xchg
or
mov
sbb
sbb
int3
xor
push
pusha
add
mov
push
dec
jmp
push
btc
dec
push
push
mov
jge
jecxz
rol
leave
and
inc
cmpsl
xchg
insb
ds
xchg
mov
rcrl
and
lcall
aad
filds
cmp
dec
jge
sub
adc
call
dec
adcb
inc
das
inc
cmpsl
push
enter
xchg
add
sub
or
sbb
inc
js
mov
pop
jmp
pushl
sub
push
scas
lods
adc
mov
add
jecxz
outsl
lret
dec
loopne
mov
shlb
test
mov
xchg
loopne
push
or
sbb
add
push
movsl
sub
sbb
inc
ficoms
sbb
stc
pusha
or
dec
fdivr
sbb
out
push
xlat
inc
mov
cmp
fsub
mov
inc
jecxz
mov
dec
mov
add
loopne
sub
int3
xlat
orl
xlat
xchg
lea
pop
pop
stos
xor
mov
and
out
loopne
inc
jl
filds
in
push
in
scas
dec
mov
call
sub
cmp
inc
push
and
testb
insb
std
std
mov
sbb
daa
or
xchg
leave
xchg
fdivp
jl
arpl
push
fiaddl
adc
jne
repz
adc
jae
out
mov
lock
pop
jns
daa
sub
jne
pop
add
mov
ret
out
pop
mov
jnp
push
inc
in
jno
or
sbbl
mov
sbbl
and
add
int3
or
jne
ljmp
cmpsl
aaa
dec
or
rcll
jno
sub
imul
pop
add
dec
sub
adc
lods
jge
push
mov
adc
add
add
jge
dec
ret
stos
in
push
pop
dec
shll
mov
mov
xchg
dec
fcompl
add
sbbl
and
out
mov
push
sbb
test
ss
push
int3
mov
cmp
jge
push
fidivrs
inc
adc
stos
and
mov
add
sarb
adc
jbe
push
out
inc
sahf
adc
jae
mov
mov
jl
cmp
jae
stos
and
mov
cld
das
or
out
pop
cmp
jne
pop
adc
push
pusha
xor
hlt
pop
adc
jg
icebp
cmp
cmp
fwait
aad
pop
push
or
insb
cmp
push
loop
dec
jo
adc
push
or
sub
sarb
andl
push
mov
outsb
add
add
call
imul
in
or
mov
test
mov
add
cmpsb
je
or
dec
scas
or
cmpsb
decb
add
aad
mov
adc
jo
rorb
push
dec
or
dec
pushf
push
or
insl
loopne
xchg
jle
push
fsts
imul
loopne
inc
adc
sub
lahf
push
scas
adc
or
mov
xlat
pop
or
sub
jns
clc
leave
xor
sbb
mov
xor
push
xor
daa
decl
pop
lret
and
or
sbb
pop
jp
cmpsb
fsubp
sbb
jne
mov
add
test
imul
insb
call
imul
pop
sub
scas
push
imul
lock
jns
add
dec
jne
jge
sbb
call
sbb
test
inc
sub
xchg
test
mov
sar
gs
cmp
jbe
mov
lods
sar
push
xor
push
lds
and
sbb
pop
cmp
and
add
pop
iret
cmp
or
push
popa
pop
and
stos
movsl
sbb
addb
aaa
fs
mov
fs
dec
cltd
dec
pop
repnz
mov
clc
push
fs
dec
test
pop
push
push
push
stc
add
mov
add
dec
stc
add
test
ds
xchg
pop
push
cmp
jo
add
mov
mov
inc
push
cmp
push
sbb
push
pop
iret
sbb
xor
jmp
arpl
push
add
push
leave
inc
ljmp
test
mov
adc
in
xor
in
pop
and
mov
iret
mov
xor
daa
sub
fwait
inc
enter
in
pop
pop
mov
fs
xchg
add
push
xor
or
inc
dec
xor
icebp
push
adc
add
push
xchg
push
mov
inc
push
cmp
jb
dec
jmp
ret
cmp
dec
adc
push
adc
sub
incl
rdmsr
or
cmp
add
ja
push
push
push
dec
pop
andb
mov
inc
or
mov
ret
test
adc
xor
or
mov
dec
xor
push
addb
cltd
les
testl
cmp
int3
adc
cmp
into
xor
cmp
add
xchg
xchg
test
addb
jl
or
inc
or
out
or
cmp
adc
pop
fadds
mov
xor
jmp
mov
or
je
mov
iret
or
pop
clc
adc
inc
xchg
mov
leave
dec
inc
mov
add
adc
shlb
and
test
enter
jecxz
ret
lea
push
xchg
ret
dec
lea
mov
dec
int
shl
inc
loope
push
ret
adc
push
add
sbb
add
xorl
mov
mov
mov
sub
cmp
or
mov
mov
movnti
xor
add
inc
adc
fcmovnbe
dec
fcoml
loope
dec
sbbl
sub
fucomp
imul
cwtl
sbb
lret
loopne
jecxz
sub
std
add
sbb
dec
add
pop
inc
sbb
sub
add
pop
loopne
pop
jae
jno
test
nop
rcll
xchg
loop
mov
inc
repnz
icebp
add
sbb
addb
arpl
ss
dec
fdivr
pop
loopne
addr16
add
and
andb
xor
mov
sbb
cmpsl
loopne
imul
mov
push
add
fcmovu
aaa
mov
xor
call
cld
pop
pop
dec
data16
sbb
mov
push
sbb
add
add
sbb
cmp
mov
mov
fsubrs
jge
dec
xorb
insb
pusha
mov
xor
nop
pop
ret
push
mov
mov
loopne
jp
xor
and
ss
jne
pop
mov
ds
mov
mov
mov
adc
sbb
add
gs
ror
sub
cmp
out
add
mov
push
sbb
mov
and
add
add
pop
in
or
in
mov
cmp
pop
adc
mov
push
es
stos
mov
add
xchg
cmpsl
cmp
jbe
or
jl
das
lock
inc
and
push
dec
jge
ljmp
cld
clc
loop
call
icebp
cld
sub
lods
lods
lret
mov
inc
icebp
cld
inc
xchg
repz
inc
and
jae
lods
jbe
sub
lea
ret
push
jno
roll
push
and
or
mov
cld
iret
test
dec
dec
stos
mov
repz
or
movsl
add
jmp
shrb
lea
movsb
fadds
lret
dec
push
mov
push
mov
adc
sarl
cli
push
movsl
loope
mov
cmpb
jg
neg
sbb
inc
je
cmp
inc
je
imulb
mov
shrb
fcomps
in
mov
jl
fadds
push
push
jecxz
sbb
test
or
xor
push
push
mov
daa
orb
mov
mov
jl
test
jg
push
cmp
pop
jp
or
addb
or
jns
test
orl
test
push
and
jle
dec
add
jmp
daa
arpl
xor
jbe
inc
sbb
out
or
push
movsb
pop
fxch
shll
push
xor
sub
out
jno
addr16
pop
insl
jbe
ja
cwtl
sub
mov
lret
outsl
movsb
fsubl
sub
in
push
sub
cmp
in
inc
enter
cmp
into
je
cmp
and
add
enter
leave
jno
clts
push
in
jge
cmp
xorb
add
aas
stos
adc
sub
data16
push
js
sahf
mov
xor
decl
mov
add
scas
or
and
cmp
push
lods
fisubs
add
movsl
sub
mov
into
jo
nop
jle
add
adc
push
mov
or
jnp
out
jge
lods
icebp
mov
imul
adc
data16
cmpsl
mov
inc
addb
xorl
push
add
mov
xchg
inc
sub
and
sbb
mov
mov
push
push
mov
arpl
mov
out
test
pop
and
lahf
cmp
test
adc
int3
push
xlat
popa
inc
icebp
ret
rorl
in
xchg
lret
int3
je
cmp
jae
add
cmp
add
push
roll
add
mov
inc
js
mov
inc
or
movsl
fs
adc
inc
xor
mov
add
add
mov
sub
xorb
ss
popa
ds
insb
jbe
push
jecxz
rep
bound
in
inc
jb
sub
jmp
push
jg
mov
cmp
not
and
push
or
sbb
cmpl
mov
adc
pop
push
adc
dec
shrb
jae
push
push
pushf
cltd
xchg
sbb
mov
icebp
mov
jle
repz
adc
mov
loopne
adc
popaw
and
insb
je
inc
sub
sbb
and
mov
icebp
mov
cmpsb
add
orl
xor
addb
ljmp
popa
xchg
pop
mov
xchg
hlt
pop
popf
adc
cmp
xor
lock
xchg
and
nop
adc
and
and
push
push
insl
sahf
gs
add
mov
out
push
pushf
jo
imul
mov
clc
insb
pop
jl
addl
inc
hlt
cmp
ss
sub
mov
popf
mov
test
shr
mov
jl
lods
push
and
andb
cmp
stos
cld
sub
sbb
add
fidivrs
xor
inc
jmp
or
repnz
and
xor
push
cmpsb
push
pop
sti
cmp
push
cld
clc
pop
je
rorb
lret
pushl
xor
add
jnp
pop
adc
push
push
lret
cmc
xchg
popl
fdivrs
push
test
or
xchg
xchg
insb
call
xchg
inc
add
jg
pop
add
cmpsb
orb
jbe
dec
push
mov
loop
inc
jo
xchg
push
jne
mov
out
jae
ljmp
mov
push
sbb
lock
rclb
in
sahf
lods
and
inc
adc
mov
push
sbb
push
and
add
lods
sahf
add
mov
bound
mov
cmp
aas
imul
sarb
dec
jne
cld
loopne
mov
inc
popa
lods
mov
bound
bnd
rorl
add
mov
push
rorb
jo
add
push
push
cmc
stos
pop
push
xchg
mov
jge
je
andb
outsb
mov
dec
or
testl
inc
sub
fsubs
cltd
cmp
jl
sub
inc
dec
push
sbbb
sub
subb
mov
jo
inc
test
push
adc
and
popa
jl
mov
sarb
and
jo
dec
mov
into
call
mov
leave
repnz
vminss
and
mov
jmp
lods
ljmp
sub
adc
add
xlat
nop
and
inc
sub
shrb
cmpl
add
and
pop
inc
test
testb
cmp
mov
pop
loop
and
or
add
pushf
xchg
dec
xchg
ret
or
loope
rcrb
insl
push
adc
roll
test
push
pop
cmp
in
decb
cmp
inc
sbb
das
add
or
outsb
jecxz
inc
clc
cmp
je
imul
add
rol
add
cmp
jecxz
clc
jbe
or
add
push
or
shr
jbe
lret
dec
inc
dec
or
dec
pusha
in
adc
sbb
sub
jecxz
xchg
sbb
add
inc
xchg
push
adc
sub
mov
inc
mov
stc
pop
inc
pusha
xchg
hlt
sbb
dec
cmp
and
add
sti
orb
lea
mov
fimuls
aaa
jmp
cmp
pop
dec
out
and
pop
sbb
js,pt
mov
jl
pop
in
mov
add
lea
jmp
lea
mov
jne
mov
scas
testb
inc
pop
loopne
shll
cmp
pop
sbb
adc
lcall
or
xor
mov
xor
mov
loopne
imul
enter
mov
enter
adc
add
and
adc
shl
or
xor
ror
pop
mov
testb
bound
jmp
push
shrl
arpl
dec
add
aas
aad
mov
cwtl
outsb
sar
lea
jp
xchg
ficompl
mov
ret
aad
jae
jb
pushl
jo
dec
adc
js
clc
push
pop
jmp
xor
jae
cmp
add
xchg
and
push
shl
adc
in
adc
adc
mov
std
or
cmp
push
add
out
sub
push
sub
mov
jo
mov
jns
mov
dec
icebp
xchg
push
mov
mov
inc
dec
xchg
pop
add
dec
ljmp
add
and
mov
enter
stos
jne
lret
xchg
pop
sbb
cmpl
add
dec
imul
adc
clc
daa
or
cmp
sbb
or
popf
dec
push
add
mov
outsb
pop
in
lea
in
nop
or
arpl
ja
or
cmp
addr16
fcoml
sub
sub
sbb
aas
daa
add
sbb
jb
movsb
cmp
cmp
push
adc
lods
sbb
call
add
or
daa
mov
jecxz
sbb
jbe
xor
xor
adc
sbbb
jnp
filds
jb
xor
add
add
popa
push
adc
jae
mov
dec
xchg
mov
add
or
test
jp
das
ficomps
mov
mov
and
popa
scas
and
and
out
mov
aas
and
and
enter
pop
enter
insb
and
pop
enter
enter
lods
es
sub
daa
nop
add
and
sub
nop
add
inc
sub
in
add
mov
jb
pop
das
jmp
push
in
mov
inc
push
add
and
cld
add
or
xor
mov
mov
sub
push
pop
cli
popf
lea
inc
movsb
enter
shl
pushf
or
jmp
push
out
mov
add
cmpsl
sbb
jnp
mov
pop
stc
sub
movsb
adc
xchg
pop
outsl
sub
and
mov
or
or
sbbb
lcall
lcall
ret
imul
push
or
jns
pop
sbb
adc
add
rorl
adc
loope
pusha
pop
adc
sbb
ja
rcl
xor
ja
ja
inc
mov
leave
sub
add
adc
inc
sarb
js
xor
add
mov
adc
mov
aam
shrl
xchg
jl
les
sarl
dec
fldt
push
and
xor
xchg
sbb
inc
adc
inc
mov
lods
data16
add
push
add
cwtl
xor
js
ds
pop
adc
mov
cwtl
aad
shlb
pop
add
jb
mov
sub
and
lock
sbb
cmp
cmp
add
outsl
andl
xorl
jne
push
push
lcall
rol
mov
mov
or
xor
xor
lock
cs
lret
dec
mulb
mov
rorb
adc
fcoml
add
jns
cmp
cmp
push
das
mov
decl
dec
add
dec
roll
add
int
pushf
sbb
call
or
test
in
inc
mov
dec
jno
sbb
std
lock
je
les
inc
cs
cltd
xchg
sbb
cld
mov
into
mov
push
cmpb
cs
xor
loope
rep
hlt
int3
or
sti
mov
rcrl
scas
sbb
adc
ds
jmp
leave
lds
xchg
push
scas
jmp
cmp
out
insb
sub
cld
cmc
inc
je
jo
fwait
je
lock
js
in
mov
lea
xchg
cs
cmp
xor
push
push
shlb
dec
cmp
jg
loopne
dec
enter
cs
inc
push
jmp
imul
fcomps
mov
popa
inc
sbb
dec
inc
mov
sbb
pmulhuw
add
jno
jo
or
cmp
sbb
pop
jmp
cmp
xchg
or
and
or
push
and
cmp
add
test
cmpsl
push
mov
mov
pusha
xor
dec
cmp
jmp
add
add
lods
push
pop
or
popa
js
test
enter
and
push
pop
adc
pusha
sub
xchg
inc
push
xchg
loopne
aam
push
adc
daa
or
inc
enter
scas
or
mov
jmp
push
cltd
add
mov
lock
adc
adc
jns
xchg
int
adc
data16
mov
push
cmp
dec
testl
in
enter
xchg
hlt
and
cld
pop
push
and
add
jmp
push
pop
stos
add
xchg
jbe
xor
xchg
inc
testl
or
sub
in
cmp
jmp
and
hlt
or
sahf
xchg
add
cld
xchg
out
and
dec
cmpsb
sub
test
js
push
loope
dec
out
and
or
dec
mov
or
and
lock
lods
sarl
and
dec
mov
push
jo
psllq
add
lcall
mov
cmp
jl
cmp
jle
cmp
push
and
or
pop
inc
cmp
aas
lods
mov
jmp
cs
pop
cmp
and
jge
mov
pop
and
cmp
jl
lock
enter
adc
pop
add
mov
cmp
or
mov
mov
pop
shlb
andb
fmull
add
iret
rolb
shufps
nop
mov
mov
cmpsl
bound
lock
enter
test
add
repz
mov
jmp
xor
test
mov
jge
add
popa
add
sarb
inc
pop
dec
test
movl
xchg
cmpsl
mov
inc
jle
jo
jne
ficoms
cs
adcb
sub
lock
imul
sbb
or
xchg
xchg
pop
dec
adc
and
iret
jne
mov
js
aas
pop
add
filds
mov
mov
loopne
nop
cli
ja
sbb
jp
jle
int3
movsb
fldl
and
fst
roll
mov
push
sub
stc
sub
rcr
sbb
test
fistl
mov
fisttpl
jecxz
add
pushf
fists
jl
push
push
lock
in
je
mov
mov
loopne
outsb
sbb
lock
setae
aad
leave
fadds
xchg
push
lea
mov
fisubrl
adc
push
lret
popl
jnp
je
mov
adc
arpl
dec
inc
arpl
pop
mov
or
mov
aad
mov
xor
and
scas
adc
das
sbb
add
fiaddl
push
adc
ss
adc
or
push
pop
pop
fldenv
jns
fs
or
out
sbb
and
cmp
test
pushf
scas
mov
lods
loopne
dec
int3
lea
fwait
lds
xor
inc
mov
inc
mov
clc
enter
ret
jno
mov
je
adc
icebp
push
push
jne
push
add
lods
out
xor
call
int3
push
arpl
xchg
pop
shlb
or
scas
loope
or
jae
mov
pop
imul
aaa
pop
inc
cltd
imul
xchg
sub
jle
push
sti
imul
loop
rclb
ret
subb
dec
inc
cmp
inc
xor
inc
and
xor
push
imul
sbb
and
or
push
mov
arpl
cmp
or
out
sub
push
dec
decb
lock
adc
xchg
jbe
jmp
movsb
ret
add
push
por
sub
in
push
and
and
ja
cmpsb
sar
in
pop
xchg
add
sub
loope
mov
mov
jecxz
sub
dec
pop
fucomi
test
popa
icebp
jae
cmp
std
push
test
repz
xchg
adc
inc
adc
add
xchg
popf
jnp
xor
mov
cmp
jnp
jmp
cmp
jmp
and
daa
adc
sub
out
and
adcb
add
or
sbb
test
jo
pop
xchg
pop
fadds
mov
adc
out
mov
fwait
movb
fsubrl
push
cmpl
in
xor
inc
cmp
mov
sti
lar
adc
dec
inc
cmp
pop
loopne
dec
in
and
daa
je
cmp
data16
adc
and
lcall
lods
pop
jle
jecxz
inc
push
nop
inc
sarb
xchg
pushf
inc
mov
add
xor
and
cmc
mov
shlb
pop
dec
add
or
jne
and
jne
push
inc
mov
in
dec
into
sbb
imul
movsb
or
push
inc
repnz
and
mov
pop
insb
pop
inc
movb
and
push
push
lods
cli
or
fs
inc
mov
sub
int
add
shrd
mov
fisubl
adc
adc
mov
adc
repz
insl
dec
jb
cmp
imul
sbb
inc
insl
pop
cltd
ror
add
sbb
data16
sbb
lods
std
clc
inc
jno
insb
jmp
mov
cwtl
adcl
add
mov
add
xorb
push
pop
dec
pusha
mov
sbb
push
xor
or
insl
jg
add
or
jle
enter
mov
loope
push
repz
ds
insb
push
or
push
mov
inc
and
scas
sub
push
mov
test
jno
hlt
pop
pop
inc
mov
push
push
cli
adc
or
push
iret
mov
jl
and
ret
std
hlt
jg
mov
sub
pop
das
lcall
push
sub
xor
sbb
push
ret
orps
xchg
mov
adc
push
repnz
mov
add
pop
cmpsl
add
sbb
sub
lea
xor
test
pusha
pop
mov
add
push
ljmp
cmp
ljmp
mov
pop
pop
mov
lret
adc
shrl
xor
outsb
ds
add
mov
mulb
dec
or
jns
jb
rolb
mov
dec
loop
jge
mov
add
or
mov
cmpsb
push
inc
mov
addl
aaa
pop
or
or
dec
sahf
sbb
cli
jae
movsl
jbe
pop
mov
jle
ja
mov
add
xchg
sahf
ds
push
mov
push
or
add
sbb
arpl
stc
push
pop
and
push
ret
jmp
fadds
jae
dec
mul
test
pop
out
sub
xchg
or
mov
sub
mov
imul
dec
mov
mov
outsb
mov
or
pop
mov
lea
jle
push
or
bound
lock
or
xchg
push
ja
in
push
adc
fwait
rclb
test
add
stos
sub
add
fisubrl
mov
add
lret
sahf
sub
ret
add
jae
dec
mov
je
xor
xor
jle
js
es
popa
and
push
xor
dec
push
dec
lcall
pop
jle
pop
add
int3
sbb
add
test
hlt
call
pop
push
fsubrs
dec
push
pop
je
fldl
rcll
fstpl
adc
dec
in
ss
dec
iret
outsl
fistl
inc
add
bnd
push
repz
cmp
divb
or
jne
or
add
repz
jne
or
scas
leave
rcrl
out
into
fstpl
andl
push
inc
pop
in
js
jl
lock
enter
ja
mov
and
fcmovnbe
push
ds
mov
mov
subl
lret
lea
fstl
or
scas
mov
dec
push
lea
movsl
mov
sub
push
out
cld
adc
nop
mov
clc
popa
testb
pop
sti
sub
sbb
dec
jae
in
dec
push
lea
mov
jne
bound
mov
aam
lods
pusha
adc
insb
lea
jl
add
aam
pushl
xchg
jo
sbb
in
cmp
push
or
mov
mov
or
pminub
out
or
inc
movsb
cmc
nop
and
lods
and
movsb
jo
cli
dec
hlt
pusha
pop
adcl
add
jle
xchg
fmull
or
js
jnp
sub
push
popf
mov
add
xchg
jle
enter
push
jbe
dec
xchg
push
rsqrtps
dec
repnz
xor
mov
imul
in
adc
cli
push
mov
jg
sub
aaa
test
cmp
or
push
dec
stos
je
mulb
imul
popa
test
sub
jl
das
or
sub
adc
loope
test
mov
pop
shlb
pop
adc
bnd
xor
sub
mov
and
lock
and
and
sbb
add
xchg
dec
gs
push
or
push
enter
xor
xor
shll
bound
adc
ds
pop
nop
ret
push
jno
cs
inc
xor
lods
push
lods
pop
notl
add
lods
pop
bound
jne
imul
fs
jno
shlb
add
sbb
lods
jmp
xchg
mov
imul
dec
enter
pop
enter
mov
add
adc
xor
int3
sbb
leave
enter
mov
aaa
add
mov
fmuls
mov
or
sub
sbb
fsub
push
inc
sub
cmp
inc
dec
xchg
adc
add
mov
add
push
imul
ror
enter
xchg
sarb
mov
test
mov
pop
pop
pop
mov
mov
inc
pop
test
push
cltd
cmpsb
cmpsb
and
add
test
or
or
shrb
add
push
jmp
imul
lods
addl
dec
fidivrs
add
mov
lahf
or
pusha
or
add
ds
cmp
jle
nop
pop
or
insl
ficoml
add
jge
xor
scas
push
fisttps
push
adc
jle
and
nop
sbbl
cmp
sahf
sarb
sbb
pusha
add
add
data16
inc
add
cmp
pop
mov
or
hlt
cmpsl
adc
push
call
aad
add
cli
add
xchg
inc
incl
popl
mov
adc
mov
sub
push
test
loopne
add
add
mov
mov
je
push
jns
movsl
inc
add
add
test
fdivrs
mov
adc
aas
or
cmp
push
push
and
enter
in
out
movsl
dec
and
cmc
push
push
mov
pop
sub
mov
dec
jb
cmp
ljmp
into
subl
mov
dec
xor
gs
inc
pop
dec
popl
fsubl
cmpl
pusha
loope
add
jnp
fnstsw
mov
cmpsl
pushf
push
cmp
scas
pop
bswap
jl
pop
call
aad
push
xchg
and
ret
xlat
dec
lea
adc
ret
or
in
jne
xor
popf
cmp
push
cmp
jnp
loopne
sbb
arpl
mov
mov
lds
call
sbb
inc
add
jmp
call
pop
sbb
les
mov
into
adc
add
in
and
mov
mov
add
pop
jle
sub
call
lret
pop
fimull
adc
xchg
repnz
ffreep
jns
or
fsubrl
and
dec
jne
cmp
inc
cmp
inc
outsl
popa
pop
push
adc
rolb
in
inc
or
lods
sbbb
or
cmp
scas
out
jno
cmp
ret
daa
shll
mov
addr16
sahf
xchg
ljmp
and
iret
xchg
jecxz
xchg
jecxz
push
movsl
je
test
sub
mov
les
mov
add
pop
sbb
js
ds
lods
xadd
mov
hlt
out
ds
enter
mov
lea
xor
adc
push
mov
mov
das
pushf
shlb
pusha
call
inc
sbb
cld
outsb
repnz
or
mov
iret
pop
xchg
add
in
test
and
dec
clc
ljmp
dec
clc
out
xor
enter
add
stc
inc
nop
xchg
sbbb
and
pop
pushf
mov
push
loop
orb
popa
call
imul
fmuls
enter
jl
addl
push
xchg
pop
push
jle
lds
or
and
outsb
loope
aam
push
cmpsl
xchg
jle
jne
loopne
add
stc
mov
xor
xchg
imul
notl
push
mov
in
popf
and
icebp
add
pusha
cmp
in
stos
inc
jae
stos
shll
push
in
ret
lahf
push
lahf
adc
inc
pop
fnstsw
nop
and
xchg
daa
xchg
mov
pop
imul
aam
arpl
xor
add
cmc
push
lea
mov
pop
add
push
rcrb
inc
lahf
mov
adc
add
cmpsl
adc
dec
movsl
shrb
add
lds
pop
addb
lahf
or
stos
push
mov
ret
ret
scas
push
into
fistpl
in
outsb
fwait
in
lock
mov
xchg
cmp
cmp
inc
insb
incb
les
lcall
shlb
adc
imul
addr16
cmp
loope
jnp
adc
clc
sub
xchg
daa
mov
push
out
outsl
adc
dec
sbb
test
jp
fldl
xchg
add
mov
fstpt
jp
xchg
scas
add
xor
cmc
aas
ja
lcall
pop
sbb
sub
arpl
hlt
pusha
adc
xchg
mov
xchg
jo
mov
mov
lods
cmp
xor
cmp
repnz
adc
inc
stc
push
mov
and
jns
out
mov
jl
jmp
popa
jne
pushl
pop
mov
push
sbb
jo
mov
push
xchg
ret
lods
ja
fwait
mov
test
call
push
mov
pop
and
jge
outsb
ljmp
pop
lea
jl
mov
popa
push
xor
or
pop
pushf
push
mov
lock
jmp
ret
dec
push
add
mov
add
mov
les
adc
arpl
inc
cwtl
adc
and
or
cmp
lcall
nop
xor
outsb
xchg
clc
xchg
mov
mov
gs
xor
add
shl
sub
les
pop
into
xchg
push
xor
push
movsl
movsl
lock
popa
push
push
out
dec
aam
dec
sub
jmp
sub
cmp
push
addr16
rorb
lahf
mov
push
subl
mov
mov
insl
lahf
and
outsl
cmpl
push
jmp
in
dec
mov
jge
and
decb
ljmp
push
dec
cmp
scas
add
or
scas
push
and
icebp
or
mov
pop
fmull
or
pcmpeqw
mov
repnz
mov
mov
lea
cmp
movsl
inc
fdivl
daa
jne
inc
outsb
adc
push
rorl
xor
cld
out
cs
pop
pop
cmpsb
push
test
dec
or
add
mov
jno
adc
jmp
jnp
dec
ficomps
xchg
xor
filds
decb
test
bnd
or
cmp
sbb
sub
je
out
inc
mov
out
inc
add
xchg
lret
dec
sbb
repnz
jmp
ljmp
in
add
mov
cs
pop
mov
lahf
adc
adcl
clc
or
mov
loop
xor
pushf
sub
cli
lods
cltd
in
add
and
nop
add
inc
jne
sbb
adcb
movsb
and
dec
stos
aam
sbb
push
mov
je
into
xchg
mov
xor
les
and
lods
xchg
cmpl
mov
add
or
push
add
xchg
jno
es
pop
xor
add
xor
xchg
add
add
stos
or
outsb
adc
cmp
pushf
pop
pop
dec
sahf
xchg
lret
lods
or
mov
addl
pop
enter
adc
rol
jb
mov
outsl
or
movsb
inc
movsb
or
xchg
mov
mov
push
adc
pusha
sub
cs
sbb
xchg
cmp
xchg
out
inc
inc
dec
iret
cmp
xchg
dec
push
pop
hlt
mov
pop
sub
mov
pop
pushf
sbb
pop
xorb
add
inc
dec
mov
mov
filds
sbb
dec
pop
or
inc
lock
je
push
cmp
lea
inc
mov
cltd
sti
pop
and
mov
push
xor
xor
xchg
subb
cmc
sub
and
pop
sub
add
cmp
cmp
out
sbb
mov
test
leave
ja
inc
dec
mov
daa
imul
cli
adc
dec
lret
xor
and
cwtl
and
sahf
fstps
sti
push
sub
into
mov
test
dec
adcl
cmp
movsl
and
xchg
add
xchg
jp
clc
add
push
insl
and
aad
or
mov
out
mov
fwait
mov
pop
and
xor
add
mov
push
cmpb
ret
add
cld
xchg
jns
lret
pop
insl
test
mov
sbb
rorl
dec
mov
jb
addr16
add
add
movsl
mov
jge
nop
cwtl
or
add
lea
and
stc
add
cs
xor
out
inc
add
inc
mov
bound
enter
mov
dec
dec
je
push
mov
inc
and
nop
pop
add
push
dec
xchg
inc
inc
les
inc
pop
rol
cmpsl
loopne
mov
pushf
ret
sbb
fcoms
cld
mov
loopne
js
shr
scas
sbb
add
test
fisttpl
and
add
mov
rcl
faddl
add
call
repz
xorl
push
je
out
aad
sbb
jbe
xor
inc
test
outsb
mov
push
nop
in
jne
xor
mov
movsl
daa
mov
cmpsl
in
icebp
sbb
mov
mov
repz
mov
and
rcll
sbb
lock
fstps
sbb
imul
adc
push
cltd
xchg
and
xchg
insl
or
sub
sti
xlat
xchg
mov
inc
mov
ss
or
adc
and
stos
mov
push
jl
or
in
cli
fidivs
out
mov
pop
jne
imul
push
clc
pop
arpl
push
sub
jb
pop
in
ss
call
out
mov
or
or
enter
push
sbb
xchg
inc
loopne
sub
je
ret
aas
jle
jbe
push
mov
or
dec
sti
mov
stc
and
repnz
inc
ret
or
inc
jmp
pop
cmp
aam
and
push
insb
mov
push
add
ret
adcl
jle,pt
aaa
imul
test
pop
and
jbe
mov
xchg
hlt
xchg
repnz
cmp
jb
pop
fcompl
or
xor
pop
or
or
and
push
decl
inc
cmp
jae
sbb
or
mov
pop
push
dec
add
push
mov
mov
ret
xorl
or
popa
xor
inc
add
pop
les
push
sbb
test
shrb
push
add
jmp
shll
imul
in
inc
imulb
data16
nop
dec
test
popa
repnz
add
push
mov
xchg
incb
adc
pop
mov
xchg
mov
xchg
loope
out
pop
and
leave
stos
or
cmp
sbb
mov
and
mov
fadds
add
sbb
mov
or
adc
pop
adc
orl
jae
pop
cmpsl
loope
sbb
push
pushf
dec
add
inc
mov
mov
inc
es
or
addl
data16
sarb
mov
sbb
in
call
ret
push
adc
es
mov
shlb
mov
mov
lods
icebp
add
ds
insb
mov
adc
or
cli
inc
mov
je
cmp
inc
mov
push
pop
cmp
jne
js
push
adc
les
rorb
aaa
cli
xchg
inc
pop
jne
jmp
mov
pusha
push
dec
xor
test
mov
xchg
sub
or
xor
or
jmp
mov
test
inc
in
jmp
rclb
dec
cmp
shl
pop
mov
or
rol
pop
or
xor
dec
cld
or
or
cmp
je
jmp
adc
pop
or
push
jge
lret
xchg
or
sahf
and
cmp
mov
fmul
imul
inc
insl
cmp
xchg
es
pop
les
push
ja
pop
xor
and
xlat
add
mov
lock
push
imul
push
ja
adc
jmp
out
iret
test
into
cmp
nop
push
push
aad
mov
adc
or
inc
push
incl
mov
imul
in
mov
shlb
test
inc
sbb
jg
rcrb
or
or
push
push
fildl
cmpsl
cmp
inc
adc
out
add
mov
sbb
call
sub
push
insb
popa
fbstp
fists
sbb
add
loopne
les
jmp
and
add
sbb
sbb
shll
or
push
fldl
dec
xchg
loopne
or
jno
insb
sub
call
insl
sbb
clc
and
insl
clc
push
out
mov
subb
or
out
out
cmp
add
cwtl
mov
push
jmp
mov
and
jnp,pt
push
and
sbb
stos
insb
idivb
and
add
dec
mov
and
push
pop
flds
jge
int3
inc
shll
je
add
and
clc
sub
popf
pusha
mov
xor
mov
dec
unpckhps
push
incb
sub
pop
mov
sub
or
adc
sbb
jae
add
xchg
repnz
cmpsl
or
mov
jno
push
sarl
fildll
mov
pop
pop
adc
jmp
push
jmp
ds
shll
xchg
lahf
pop
sub
sbb
push
xchg
push
sub
sarb
or
std
mov
es
push
jnp
inc
sahf
xchg
mov
inc
add
xchg
lret
in
jns
sub
push
cmp
das
jg
lock
ja
xor
mov
inc
cmp
and
xorl
enter
push
pusha
aaa
repnz
push
sbb
push
nop
and
and
repnz
xchg
adc
jne
adc
out
adc
lock
inc
call
mov
fxch
mov
fwait
sbb
dec
push
fcomps
sbb
jae
push
sbb
or
add
sbb
mov
push
mov
mov
sub
add
sbb
adc
or
sbb
cmp
fisubrs
repnz
enter
push
or
fsubr
repnz
and
jne
outsb
fsubrs
sbb
jne
sub
sub
sub
push
js
daa
in
aaa
adc
mov
aaa
in
xchg
add
sbb
fldcw
dec
mov
push
leave
or
in
loopne
rcll
hlt
aas
in
xchg
fisttpl
aaa
mov
mov
adc
push
lea
sub
jbe
push
xchg
mov
push
xlat
sub
xchg
ja
xor
mov
sbb
push
push
pop
dec
and
push
inc
mov
js
popf
insb
push
lcall
repz
mov
fsubr
jns
out
cmc
add
adc
xor
jns
out
jne
xchg
mov
mov
rcr
in
sti
cmp
sarl
sbb
xor
cmp
repz
pusha
jno
xchg
iret
repz
mov
in
pop
mov
cld
push
add
or
add
fdivrs
scas
add
jmp
inc
push
test
decb
inc
xchg
mov
or
sub
push
dec
mov
jmp
xor
rolb
sbb
in
adc
and
add
mov
das
or
je
dec
add
and
xchg
call
add
in
lock
lret
roll
and
imul
xchg
pop
popa
xchg
cli
rolb
pop
mov
mov
and
sbb
push
mov
dec
adc
pop
pusha
push
sub
and
lcall
adc
loopne
push
jnp
addr16
mov
push
dec
and
and
sbb
xchg
js
and
and
cltd
shlb
pop
inc
mov
adcl
mov
into
daa
push
mov
add
ficoms
dec
xchg
iret
push
adc
sub
rcr
mov
les
call
sbb
addl
es
stos
add
push
mov
xor
rcll
inc
adc
add
xchg
and
add
and
lock
push
mov
in
into
mov
mov
dec
mov
mov
and
jle
outsl
add
mov
xchg
cmpsb
xor
lahf
xlat
out
add
pop
jo
add
cmp
mov
cmp
or
ja
loopne
mov
add
call
call
mov
xchg
add
decb
adc
xor
or
xor
ret
sbbl
mov
mov
or
repnz
rol
rol
pop
addr16
ss
pop
mov
or
loop
out
inc
cmp
jo
sub
loopne
jnp
test
cmp
xor
insl
add
mov
add
xchg
add
nop
add
mov
jge
sub
cmp
push
or
nop
or
sbbl
push
add
or
inc
and
add
xor
xor
leave
cmp
jl
or
sarb
mov
and
add
adcl
push
push
cmp
push
movsl
stc
lock
jno
stos
pop
pop
sub
add
shlb
cmpsb
xor
jb
mov
out
push
dec
scas
in
adc
shll
sbbb
stc
outsb
hlt
mov
adc
or
dec
pop
shl
xchg
adc
sbb
cmpsb
fs
outsb
mov
in
dec
sti
lock
jl
dec
sub
rol
add
and
add
rorl
lock
dec
stos
and
xor
push
mov
leave
shll
iret
adc
xchg
push
pop
sub
jns
and
push
in
sub
mov
mov
adc
cwtl
dec
xor
and
fs
in
lgdtl
add
inc
cmp
add
fmuls
inc
jl
dec
xchg
and
inc
xchg
incl
mov
add
inc
or
outsb
jb
pop
adc
or
insl
int3
add
stc
add
aam
mov
daa
popa
aad
or
in
mov
popa
xor
shll
or
test
add
and
js
add
or
dec
and
mov
ljmp
adc
jb
call
add
pusha
inc
out
pop
xor
add
sbb
add
aaa
inc
cmpsl
mov
push
cltd
insb
cmp
sbb
ljmp
movsb
adc
jae
jge
sbb
loope
inc
cmc
add
jae
ss
test
mov
inc
test
fwait
rolb
add
add
in
imul
stos
arpl
cltd
lahf
sbb
mov
dec
scas
adc
test
push
ret
mov
push
mov
adc
or
xor
xor
mov
push
and
and
adcb
cmp
sbb
addl
mov
push
mov
push
inc
sahf
and
add
rcll
and
inc
or
ret
mov
sbb
sub
push
push
sbb
sub
sbb
cli
inc
loopne
roll
push
cmp
push
sub
aaa
or
jecxz
sbb
or
stos
sub
sub
mov
adc
pop
lods
mov
inc
and
sub
mov
les
and
lret
add
add
js
stc
adc
or
jmp
push
inc
dec
mov
xchg
add
inc
and
push
mov
mov
in
mov
sarl
es
pop
in
push
mov
sub
mov
bound
mov
mov
pop
or
out
enter
scas
adc
jmp
push
cmpb
insl
dec
xor
sbb
adc
out
cmp
movsb
inc
xor
or
add
and
dec
inc
mov
enter
roll
daa
jns
das
mov
dec
push
push
inc
dec
pop
jmp
jae
adc
fmuls
daa
cltd
dec
mov
push
test
pop
mov
movsb
adc
fdivrs
or
bound
push
arpl
adc
mov
cld
sub
fs
xor
mov
sbb
gs
ret
sbb
adc
fcmovbe
mov
fisttpl
xor
mov
das
out
cld
jb
sub
insl
rep
mov
or
add
subb
or
fadd
push
sbb
jnp
add
pop
lret
pop
push
adc
push
int3
xchg
cs
push
pop
fldenv
adc
test
push
push
enter
and
enter
lods
push
imul
inc
inc
lcall
imul
xchg
mov
sbb
lret
adc
dec
pusha
out
popa
sub
testl
mov
sbb
adcl
adc
or
enter
push
cmp
jge
in
adc
imul
sbb
jl
xchg
mov
add
pop
add
adc
inc
jp
sbb
jl
jb
push
or
fdiv
xchg
les
adc
dec
dec
gs
test
test
xor
jbe
dec
popl
xlat
cwtl
add
xchg
add
imull
push
add
fmull
add
add
shll
and
jmp
push
lock
aaa
cmc
leave
inc
mov
dec
push
push
orb
push
callw
mov
sub
int
call
mov
imul
or
mov
xchg
jp
jno
jp
inc
jmp
stc
mov
ret
push
sbb
dec
outsb
mov
xor
sub
cmp
mov
or
shr
and
cli
inc
jl
or
sbb
popa
jp
ljmp
int
adc
cmp
cmp
je
mov
mov
push
add
inc
cli
adc
jmp
movb
mov
push
cltd
pop
idiv
mov
xor
pushf
repnz
dec
lock
push
je
stos
pop
inc
fmul
xlat
shll
push
adc
push
jno
inc
or
loopne
push
test
pop
js
xor
std
add
pop
fwait
dec
movzwl
shll
jmp
orl
dec
or
push
mov
push
lock
hlt
incb
es
or
add
iret
cmp
mov
lcall
cmp
daa
cmp
lcall
jne
dec
or
jo
push
cmp
cmp
xorb
enter
adc
popf
adc
imul
or
in
out
mov
dec
out
rolb
mov
lret
jp
mov
mov
pop
adc
repz
or
in
es
jne
lea
nop
fadds
dec
js
fstl
stos
or
test
sub
sub
mov
stos
imul
test
imul
and
mov
ljmp
xchg
adc
mov
pushf
mov
inc
enter
push
xchg
rcll
push
lods
adc
jg
push
pop
cmp
adc
test
and
ss
adc
xlat
pop
les
pop
push
pop
lock
mov
cmp
jo
mov
scas
sub
adc
popa
fimull
jns
inc
lcall
js
push
in
sbb
push
jl
leave
enter
push
lret
outsb
pop
xorb
push
int
sub
sbb
inc
xchg
divb
in
sbb
out
or
sbb
mov
les
push
and
out
sub
jns
jae
adc
cwtl
ss
leave
and
push
ja
mov
shr
mov
and
push
sbb
pop
jns
test
cmp
mov
jno
add
in
mov
out
mov
jns
es
mov
or
jns
stc
andl
stos
aaa
push
sub
pop
inc
int
mov
inc
adc
fisubs
push
daa
xchg
pushf
pusha
cwtl
dec
jb
leave
leave
nop
pop
mov
dec
or
js
es
dec
cmp
leave
leave
insl
push
lods
shld
test
fs
leave
and
test
mov
inc
lods
fcoms
ja
inc
inc
lods
sub
sahf
add
fucom
ja
mov
sbb
push
movsl
sbb
and
aaa
push
in
sbb
cmp
outsb
mov
iret
adc
das
push
inc
and
pop
push
sti
inc
fcomps
xor
push
rcrb
bound
pop
push
mov
mov
sbb
rcr
or
sbb
jecxz
cwtl
jno
pop
movsb
sbb
and
mov
xor
scas
fildl
mov
pop
int3
xor
push
mov
in
jecxz
data16
xor
icebp
out
icebp
test
sbb
call
jnp
outsl
in
ds
pop
or
test
jp
shrb
adc
test
push
negb
sbbl
or
outsl
call
loope
test
repz
sbb
lret
cmp
mov
in
je
lret
jno
cmp
push
shll
shl
loopne
ds
push
lahf
push
lods
or
push
ret
or
aad
lcall
inc
add
push
push
insl
inc
or
pop
cmp
addr16
shl
push
cmc
lods
les
cmp
adc
in
call
aam
inc
jb
mov
daa
cwtl
sbb
mov
rcrb
mov
xchg
pop
jl
add
bound
addr16
daa
add
sub
std
and
je
mov
test
and
sbb
mov
fbld
and
or
adc
xchg
xor
adc
pop
pop
or
js
add
cmp
inc
test
cmp
sub
sub
adc
cmp
mov
ss
dec
xchg
movsb
nop
jp
nop
sbb
or
pop
and
add
push
sbb
aaa
inc
lds
das
jmp
pop
addr16
ds
mov
mov
movsl
mov
in
and
pushf
add
xchg
jl
mov
xor
movsl
or
push
in
int
icebp
addr16
mov
fmuls
inc
inc
dec
lcall
out
pop
fisubrs
pop
xchg
or
add
pop
pop
test
mov
dec
mov
stos
ss
sub
or
inc
mov
push
mov
cmp
rorb
push
push
outsb
loop
mov
sbb
arpl
cmpsl
mov
outsb
addr16
mov
push
in
pop
pop
inc
or
cwtl
cmp
cmp
gs
loopne
cmp
jge
push
iret
xor
mov
pop
ja
fmuls
add
pop
xchg
pushf
push
xor
pop
dec
jge
bound
push
leave
sbb
adc
push
mov
lcall
push
mov
les
pop
xchg
pop
mov
fiadds
jb
push
jnp
mov
pop
cmp
mov
lock
cmp
rcrb
or
loope
sbb
or
loopne
xor
jl
or
addl
into
or
sub
es
int
pop
cmp
outsl
or
cmp
lret
pop
test
iret
xor
or
push
or
cmpsb
pusha
adc
pop
push
add
cmp
push
cld
cmp
cmpb
cli
pminub
cmp
adc
loopne
push
sbb
sub
cmpsl
int3
jl
cli
or
adc
arpl
sbb
sub
push
out
cmp
lret
mov
push
out
add
inc
cwtl
push
ficoms
iret
push
xor
cltd
pusha
ss
aam
push
je
cmpsl
loopne
xor
lea
xchg
push
aaa
test
rcrb
loopne
js
pop
dec
sbb
int3
rcll
push
lret
rclb
test
add
adc
xor
sub
aad
pop
push
jmp
cs
sub
ss
adc
testb
xor
cmp
ret
or
cmpl
or
push
push
pushl
fsubl
push
adc
shlb
push
sbb
ret
lea
call
mov
ffreep
adc
lcall
pop
mov
scas
fcomp
or
cwtl
fs
fmulp
repnz
inc
test
add
cmp
repz
xchg
in
mov
or
or
daa
mov
test
das
shr
mov
int3
push
cmp
aas
test
jno
xor
les
cmp
and
inc
cmp
mov
add
push
cwtl
scas
loopne
pop
or
mov
mov
push
das
pop
or
sbb
push
sub
and
lret
aam
aad
inc
fcoml
lds
loope
test
scas
and
shrb
or
in
inc
fildl
xor
add
mov
mov
test
push
cs
mov
adc
lret
rorl
cmp
scas
pop
mov
push
cmp
dec
cmp
push
inc
cmp
xor
ljmp
in
es
sbb
scas
adc
pop
cs
iret
call
call
int
lcall
insb
mov
sahf
sarb
gs
ret
mov
or
mov
cmp
or
jmp
testb
adc
sbb
test
cmp
sub
and
stc
or
loopne
adc
sbb
rolb
lock
jle
test
ds
and
in
cld
aas
je
cli
adcb
in
cmp
sub
ret
or
adc
dec
add
cmpsb
xchg
mov
lea
xor
cmp
in
jns
adc
sub
cmpsl
pop
cmc
dec
add
in
aam
add
xor
add
mov
mov
fwait
add
mov
dec
ret
rorb
adc
fwait
sar
and
insl
dec
add
loope
or
push
pop
jle
jo
lret
clc
outsb
pop
pop
stos
adc
jne
ss
add
lods
and
jmp
addl
add
mov
add
mov
pop
add
fs
notb
add
mov
and
pop
adc
jecxz
mov
pop
stos
stc
sub
inc
add
out
enter
les
popa
lods
div
imul
pusha
or
inc
divl
cmpb
fwait
or
outsl
add
test
stos
push
mov
and
cmp
cmp
xchg
push
inc
stc
mov
mov
shlb
or
push
sub
lea
sub
sti
in
mov
push
aad
xor
mov
mov
cltd
addl
dec
loope
and
aam
push
add
cmp
ja
cmp
fnstenv
in
addr16
in
pop
add
mov
lods
aad
in
mov
popf
xchg
mov
push
and
cmp
mov
clc
add
mov
xor
adc
and
xor
or
pop
loop
push
and
add
or
aaa
push
mov
mov
inc
add
dec
push
jg
mov
test
rcll
cltd
sub
daa
inc
test
mov
dec
xorb
and
sti
loope
mov
adc
cmpl
jnp
and
sub
sub
mov
lret
es
testb
cwtl
pop
sub
xchg
aam
and
pushf
sbb
or
or
or
shrb
push
xor
sarl
jle
adc
cltd
inc
adc
add
shrb
or
sbb
push
mov
sbb
or
ljmp
mov
mov
insl
pop
lret
enter
lcall
jne
jbe
fmull
addl
xchg
adc
clc
inc
sbb
andb
push
daa
orb
mov
cmp
in
movsb
mov
lret
adc
push
or
or
pop
es
push
dec
add
or
cmp
xor
jb
lcall
je
push
out
jae
mov
jecxz
mov
rcrl
inc
xor
add
jmp
imul
mov
int
inc
jne
fidivrs
push
vmovshdup
call
mov
xor
enter
pop
jle
adc
pop
pop
xchg
lock
leave
sbb
or
pop
xchg
jae
inc
and
je
fnstcw
inc
rcrb
push
and
icebp
leave
jecxz
lcall
insl
push
and
daa
cmp
lahf
flds
pop
mov
mov
bts
adc
arpl
or
out
jmp
ljmp
cmp
in
arpl
cmp
fcomp
test
push
fsts
inc
je
enter
jnp
lods
dec
ret
push
cmp
xchg
int3
and
mov
out
inc
andb
push
pop
push
xchg
or
orb
scas
pusha
and
insb
pop
inc
inc
or
cmp
add
mov
xlat
in
dec
mov
add
dec
ret
or
dec
jge
leave
rorb
jnp
push
sub
jne
sahf
mov
dec
adc
dec
add
dec
sbb
mov
mov
or
lods
xchg
out
cmp
mov
cmp
cwtl
pop
or
fs
and
sub
lret
ffree
rcr
data16
cmpb
pop
cmpsl
aad
sbb
adc
push
xor
pop
jne
or
mov
pop
cmp
test
repnz
sub
sar
sub
and
inc
push
inc
mov
int
adc
dec
xor
add
push
cmp
pop
cmpsb
fimull
and
jl
fwait
push
shlb
jnp
dec
or
je
mov
add
add
push
add
fs
mov
mov
cmpsl
loopne
pop
and
cmc
ret
nop
fildl
and
xchg
jecxz
mov
xchg
sub
sarb
mov
dec
cli
and
cmp
mov
pop
mov
pushf
cmp
adc
clc
aaa
inc
mov
enter
imul
fucomip
and
jns
fs
push
cmpb
push
jne
movsbl
ljmp
dec
fldenv
dec
and
mov
adc
add
cmpl
pop
dec
scas
and
xor
or
pop
call
subb
testb
cwtl
inc
sub
sbb
mov
js
xor
mov
jo
mov
popl
fisubrl
add
sub
add
xchg
or
xor
nop
and
and
into
and
sbb
xor
push
sbb
and
cmp
repnz
cmp
sub
dec
enter
push
or
fstpl
mov
movsb
enter
xor
add
aam
shl
or
adc
pushf
mov
xor
and
cmp
sbb
mov
je
mov
nop
frstor
rolb
cmp
cmc
cmp
fisubl
xchg
adc
out
jecxz
adc
or
xchg
add
sub
jo
sahf
xchg
add
loop
popf
sbb
cmpsl
sbb
jns
push
dec
sbb
cwtl
or
adc
or
pusha
aaa
mov
inc
enter
rclb
mov
add
mov
lret
sbb
cmp
scas
inc
pop
or
sti
scas
push
inc
sbb
lahf
add
push
or
addl
add
cmp
fstps
pop
nop
cmp
xor
cmp
aam
dec
push
scas
inc
pop
rcrl
push
xchg
orb
les
loope
cmpb
mov
inc
sub
jle
enter
cmp
or
dec
mov
aas
cld
and
cmp
test
mov
pop
adc
subl
pop
add
sub
enter
imul
add
sbb
leave
jno
add
add
xchg
loope
and
push
or
and
mov
and
loopne
jno
push
push
xor
add
sub
xor
xor
test
movsl
and
orl
adc
mov
adc
icebp
sub
push
mov
mov
mov
push
mov
adc
icebp
push
addr16
mov
rep
ja
add
loop
jo
addr16
sub
push
sub
mov
and
mov
jl
pop
leave
adc
mov
or
leave
push
in
fwait
push
sub
pusha
cltd
sbbb
dec
mov
xor
lcall
adc
inc
in
lods
pop
je
push
push
sbb
stos
repz
shl
shll
daa
add
or
xor
pop
xor
pusha
sub
sti
sbb
testl
pop
adc
or
mov
scas
pop
mov
in
insb
mov
loop
jmp
lods
dec
rcrb
pusha
or
sub
inc
addb
xchg
adc
adc
testl
sub
test
lea
mov
or
inc
inc
adc
daa
inc
push
icebp
inc
pop
fstps
push
stos
mov
push
les
pusha
test
xchg
ret
icebp
cmp
ret
scas
stos
add
dec
sub
adc
push
mov
xchg
xor
shr
jno
xor
movsl
cwtl
xchg
push
mov
sub
dec
orb
push
adc
mov
adc
dec
push
subl
adc
fldenv
add
imul
lcall
sbb
dec
xchg
jne
and
push
inc
ret
call
jne
data16
add
sub
scas
cld
stos
insb
xchg
aaa
inc
add
leave
mov
or
cld
push
dec
adcb
orb
cmp
subb
sbb
mov
xchg
add
cs
xor
cwtl
imul
push
and
insb
push
add
xchg
dec
shrb
cmp
jmp
dec
xlat
fisttpll
loopne
inc
bound
incl
loopne
push
shll
sub
fcomps
ljmp
jbe
divl
jne
gs
cmp
pop
test
ja
xor
in
insb
mov
mov
movl
decl
adc
je
mov
dec
xchg
mov
pusha
outsl
flds
or
ds
cmp
push
inc
dec
js
or
fcmovb
into
xchg
pop
out
pop
push
mov
clc
xchg
lds
push
or
js
jg
sbb
dec
dec
leave
arpl
pop
mov
inc
lods
pop
arpl
mov
test
insb
push
sub
push
fwait
add
insb
shl
dec
cmovp
mov
loope
insl
ja
imul
adc
dec
jg
add
sbb
xchg
sbb
in
and
out
js
push
sub
cmp
sub
je
or
ss
push
mov
dec
sub
xchg
dec
lock
mov
in
cmp
jb
jmp
xchg
cmp
xlat
pop
add
xor
inc
or
xor
jne
mov
orl
mov
or
cmp
or
loopne
sub
mov
xor
add
xorb
lods
lods
and
js
add
stc
cltd
sbb
mov
sbb
gs
adcb
scas
or
cmpsb
movsl
lea
and
push
das
dec
enter
test
xchg
insb
jae
hlt
rolb
es
add
fildl
or
fsub
testb
mov
pop
das
adc
or
or
lahf
pusha
mov
pop
rcrb
les
and
pop
adc
lea
cs
punpckhdq
inc
adc
testl
push
sub
xor
arpl
add
pushf
into
pop
xchg
add
push
or
rolb
pop
call
xchg
stos
les
jne
pop
imul
or
xor
sub
add
dec
xchg
jmp
or
add
scas
add
test
jnp
push
hlt
inc
pop
mov
cmp
push
dec
add
pop
inc
adc
add
cltd
scas
mov
push
jbe
push
cmp
pop
fimull
sub
sbb
cmp
cmp
fwait
push
test
mov
cs
mov
enter
loope
cmpsl
popf
xchg
faddl
lea
lods
mov
test
push
add
push
enter
adc
add
push
std
ret
adc
mov
test
push
jb
inc
lea
aad
ret
adc
or
daa
test
insl
xchg
cmpl
mov
les
std
inc
push
and
insl
cmp
and
scas
cmpl
incb
fdiv
pushl
mov
jmp
popa
push
add
inc
xchg
js
fs
popf
inc
addl
sub
adc
rcrb
adc
dec
lea
or
subl
mov
inc
sbb
icebp
add
mov
xor
iret
xchg
shrl
jae
inc
jmp
pushl
rorb
sub
pop
movsb
and
fcompl
and
inc
loop
pop
mov
xchg
jns
lds
cld
pushf
je
mov
or
fs
or
adc
rcr
in
and
rclb
mov
adc
xchg
or
mov
and
or
xlat
int
inc
dec
cmp
inc
add
rorb
xchg
xor
jae
ret
loope
push
mov
loopne
fildl
cwtl
in
cmp
shll
pop
inc
movb
sub
mov
loopne
xor
lahf
mov
adcb
addb
in
ljmp
mov
loope
mov
aaa
leave
mov
xor
xor
call
or
ja
cmpsb
xor
jbe
cmp
push
jmp
xchg
adc
cwtl
and
sbb
sub
jge
push
cltd
inc
je
fcompl
jne
xor
test
sub
push
jge
pop
std
cmpb
call
out
sbb
sbb
push
adc
std
mov
or
sbb
cmp
jmp
lret
out
insl
adc
andl
out
cmp
add
arpl
shll
in
sub
icebp
lahf
inc
out
pop
adc
push
push
out
mov
push
inc
fadds
popf
pop
jns
pop
scas
cmp
jbe
push
in
rcrb
xchg
sbb
or
dec
std
jae
and
sbb
dec
jecxz
jge
or
jle
or
enter
mov
loop
pop
adc
cmp
push
dec
adc
xor
mov
adc
push
add
imul
inc
push
fs
rcll
dec
adc
imulb
xor
adc
jmp
mov
sarl
fidivs
inc
mov
ret
push
sbb
xchg
testl
or
in
in
cmpsb
push
test
call
mov
out
loopne
fmull
scas
pop
and
cmp
inc
mov
sti
popf
push
pop
push
cmp
wrpkru
dec
imul
or
xor
pop
xchg
push
les
pop
icebp
mov
lret
xor
sbb
pop
into
inc
hlt
push
pop
ret
idivb
addl
pop
mov
sbbl
add
inc
cmpsb
mov
xchg
mov
pop
mov
xchg
cmpsb
sbb
mov
cmpb
outsb
roll
dec
mov
imul
mov
push
lcall
sbb
je
sub
sbb
xchg
stc
jge
aas
adc
movl
xchg
movsl
and
adc
enter
mov
shlb
popa
pop
adc
xchg
lea
sub
or
sub
xor
or
dec
shrb
outsl
ss
add
cmp
sub
sbb
or
psubsw
lock
call
xchg
dec
push
dec
js
xchg
push
and
adc
and
jl
aaa
adc
and
xor
jae
add
mov
mov
rdmsr
or
aad
mov
sbb
cmp
inc
leave
sbb
and
or
cmc
lret
lock
push
mov
jnp
jmp
ss
or
inc
push
mov
jp
mov
adc
add
push
ss
pop
pop
and
call
in
in
jle
icebp
adc
mov
shrl
and
icebp
or
pop
cmpl
les
hlt
jne
mov
and
push
add
jg
fs
fwait
jecxz
lods
arpl
inc
xor
fdivl
and
and
pop
jbe
xor
or
sbb
iret
xchg
or
clc
adc
outsb
pop
cmp
sbb
push
sub
inc
std
pushf
test
arpl
in
orl
lcall
mov
jae
or
fwait
dec
int
les
push
and
xchg
out
xor
sbb
jae
dec
push
nop
movsl
xor
sub
mov
mov
add
add
jbe
inc
mov
and
gs
enter
mov
pop
dec
shl
ret
pop
pop
mov
and
sub
jae
dec
dec
repz
aam
fwait
clc
test
out
lds
push
adc
cmpsb
push
pushf
push
cmc
and
mov
lock
adc
jmp
test
mov
movsl
jecxz
outsl
push
stos
ret
mulb
xor
bound
pop
inc
adc
ret
in
cmp
daa
jmp
jne
and
fwait
inc
insb
xor
aad
jle
mov
jne
adc
push
nop
orb
mov
or
sbb
pop
mov
adcb
add
inc
adc
inc
fsubrl
jmp
jmp
push
loopne
cmp
mov
jmp
mov
add
into
mov
or
push
xchg
sbb
push
sub
sbb
pop
loope
inc
imul
or
loope
inc
dec
mov
sbb
adc
in
dec
loopne
dec
mov
or
cmp
push
addb
cmpsl
imul
decl
xor
xlat
add
fcomps
rcrb
inc
fdivr
rolb
jne
loopne
jecxz
lea
dec
decl
or
mov
into
mov
insb
pop
pushl
mov
cwtl
loop
xor
call
add
imul
daa
cmp
pusha
rorb
cmp
lret
repnz
xor
in
and
inc
negb
push
jns
ret
inc
xor
incl
xor
push
hlt
iret
fdivp
bound
fdivs
mov
dec
xchg
mov
sub
xlat
in
push
push
xchg
aam
es
je
jbe
push
cmp
push
mov
mov
cmpl
sub
hlt
xor
jmp
pop
pop
mov
push
sbb
mov
fstl
out
pop
dec
cmp
fnsave
cmc
add
testl
push
adc
pop
clc
jne
loopne
loop
push
shrl
cmp
mov
mov
xor
mov
ss
xchg
clc
push
rolb
jns
and
inc
pop
mov
aad
stc
dec
loope
gs
call
mov
add
loope
outsl
fwait
rorl
pushf
rcrb
push
int
xlat
sbb
inc
mov
cmp
rorl
push
dec
mov
inc
inc
scas
repnz
lret
cmp
das
push
mov
clc
xlat
push
imul
mov
or
jo
sbb
and
sub
mov
mov
adc
jae
mov
add
push
add
out
or
inc
or
add
test
movsb
xchg
pop
mov
rcrb
fadds
or
call
iret
push
js
popf
les
les
inc
xor
inc
shrb
jno
stos
sti
or
sub
pushf
dec
push
setno
mov
jmp
sbb
adc
or
test
xchg
nop
sub
ret
sti
fldt
sub
xlat
sbb
in
test
pop
xchg
add
pop
int
push
pop
sti
cmp
pop
mov
aas
dec
lods
dec
ss
mov
jge
jg
or
push
cmp
jbe
out
jb
or
and
adc
in
adc
shr
mov
mov
sarb
jo
vmread
push
mov
dec
fdivrs
js
push
stos
sub
in
or
insl
shl
shrb
rorb
lret
pop
jo
hlt
sahf
dec
mov
sub
sarb
lock
mov
inc
mov
inc
and
ficompl
inc
push
jl
cmp
insb
mov
jp
pusha
cmpsb
in
jo
mov
xchg
fwait
cmp
mov
push
pop
jp
popa
lea
push
shlb
out
movsb
mov
lret
sub
or
add
in
or
in
push
mov
mov
cmp
inc
jle
fcoml
daa
in
cli
push
stc
adc
loopne
add
movsb
jb
mov
push
scas
inc
cmp
fsubrl
imul
push
loop
hlt
lret
ret
or
cmp
and
adc
rorb
mov
inc
in
mov
int3
std
ret
lret
xor
repnz
in
lock
mov
jno
or
sbb
add
outsl
outsb
lock
pop
pop
mov
sti
rep
movsw
mov
xchg
push
cld
movsb
mov
push
fidivrs
or
mov
shr
mov
inc
mov
mov
jle
movb
and
sub
pop
jne
dec
mov
lret
or
fldenv
idivl
lret
add
movsbl
xor
mov
pusha
pop
mov
push
in
cmpsb
pop
stc
add
jb
and
mov
paddb
push
test
and
sbb
cmpsb
push
movsb
pop
xchg
arpl
int3
and
adc
jge
mov
inc
and
mov
clc
lods
dec
outsl
xchg
cmc
imul
sbb
pusha
and
jle
or
insl
test
mov
cmp
imul
and
or
mov
mov
cmp
pushf
mov
xor
mov
or
push
mov
iret
mov
mov
pop
mov
cmp
lds
add
mov
lock
mov
rclb
clc
dec
lahf
sbb
int
jle
inc
ljmp
lds
xchg
es
mov
push
movb
pushf
pushf
pushf
pushf
add
push
pop
outsb
lahf
pushf
pushf
or
or
jnp
or
jbe
outsb
outsb
outsb
or
jno
jmp
push
jmp
por
outsb
outsb
outsb
adc
pop
adc
pop
adc
push
adc
dec
outsb
outsb
outsb
outsb
adc
dec
adc
aas
pop
jmp
outsb
outsb
outsb
outsb
sbb
xor
jmp
sbb
outsb
outsb
outsb
outsb
sbb
and
pop
pop
jmp
outsb
outsb
outsb
outsb
and
or
jmp
and
fisttps
orps
push
mov
mov
and
mov
sbb
jle
add
out
sahf
out
sbb
sub
sahf
out
sahf
cmp
dec
push
push
jns
out
pop
pop
imul
js
addb
xchg
xchg
fwait
mov
jns
scas
mov
mov
ret
sbb
add
and
or
push
decl
adc
adc
push
pop
sbb
sbb
sbb
push
pop
and
and
aas
loope
mov
inc
push
leave
inc
push
aas
sbb
jge
and
sbbb
nop
les
or
push
jmp
sbb
adc
sub
fsubrs
or
ss
loope
and
pop
and
push
lock
xor
and
incl
aaa
cmp
and
fsubrl
aad
add
add
insb
jbe
cmp
adc
rol
lret
inc
bound
mov
cltd
fimull
pop
add
ss
xor
push
into
or
push
sahf
inc
enter
add
dec
add
test
enter
cwtl
jge
fnstcw
jns
jne
push
addr16
in
cmp
jmp
adc
mov
sub
outsb
movsbl
sub
adc
mov
mov
pop
hlt
jmp
cmc
pop
jno
loopne
popa
cmp
loop
ret
test
or
adc
test
cmp
or
push
mov
dec
je
jnp
js
dec
repnz
mov
out
push
push
lock
shlb
dec
jg
and
mov
xor
dec
out
dec
add
je
push
scas
imul
ljmp
sbb
xor
ds
test
and
ss
fucomi
mov
lcall
push
jns
adc
jne
jge
lahf
push
push
push
pop
loopne
push
add
dec
xor
mov
movsb
inc
sbb
pop
sub
sub
jmp
scas
add
sbb
jne
ficomps
jne
imul
aas
inc
sahf
sub
push
cltd
sub
sub
rcrb
or
lea
out
push
mov
gs
xor
adc
cwtl
sbbb
lcall
or
loope
nopl
or
je
push
xor
xchg
lock
rolb
adcb
mov
adc
test
cmp
push
sub
adc
fnstcw
jp
adc
push
push
add
rorb
setne
pop
insl
sub
mov
mov
push
test
sub
mov
insb
orb
mov
scas
or
fists
lock
mov
xchg
xchg
je
push
push
xchg
add
push
rol
pop
adc
push
add
test
adc
sub
adc
dec
leave
cmp
or
andl
inc
mov
je
dec
icebp
mov
cmp
sub
dec
rcll
adc
mov
stos
pop
pop
add
xchg
cmp
cwtl
mov
cmp
fwait
shrl
loope
pop
repz
or
fstl
sub
jmp
les
add
leave
jl
arpl
and
inc
add
das
inc
mov
icebp
cltd
shlb
leave
hlt
popa
int3
sbb
in
rcrb
int3
enter
xchg
test
add
pop
flds
pop
jge
xchg
and
mov
xor
icebp
andl
sub
stos
adc
cmp
jbe
cmpsl
push
bound
sbb
or
xchg
push
xor
or
jecxz
pop
icebp
jne
aam
sub
pop
ljmp
sti
mov
into
insb
test
cmp
sbb
xchg
pop
push
repnz
testb
dec
std
imul
test
shrb
loop
je
nop
push
rorl
add
jmp
loopne
cmp
out
add
push
or
mov
sub
cmp
mov
sbb
loopne
dec
leave
and
shl
and
pusha
rcll
daa
iret
add
and
enter
cmpsl
int3
or
and
and
add
sti
xor
push
lock
negl
rcrb
ret
inc
inc
insb
xor
inc
or
les
lock
and
xchg
pop
push
inc
mov
or
pop
push
add
sub
ljmp
subb
arpl
and
cmp
stos
pushl
mov
push
xor
xor
bound
add
inc
mov
xor
pop
or
sbbb
and
inc
sub
dec
es
imul
push
outsb
orb
es
and
mov
and
jmp
jbe
and
popa
je
cmpsl
jnp
xchg
pop
and
add
in
mov
test
cmp
mov
ja
sub
push
add
inc
mov
repz
pop
add
lods
mov
mov
xor
and
iret
fdivrl
pop
push
add
cmpsl
mov
and
xor
pusha
or
add
xor
xchg
fisttpll
xor
add
jbe
sub
test
add
and
sbb
mov
push
popf
mov
cmp
dec
add
inc
ret
dec
push
xor
fldl
rorb
sub
inc
cmpsl
in
inc
inc
xor
or
add
add
sti
je
dec
lret
mov
dec
mov
ret
jne
stos
pop
jbe
add
rcll
jmp
rorb
insl
xor
pusha
ret
cmp
call
rolb
leave
mov
lods
dec
gs
notl
push
ljmp
repnz
incl
mov
outsl
cmc
insb
or
pop
jne
xchg
lods
push
or
or
je
out
invd
ljmp
mov
pop
jns
inc
jnp
inc
sub
int3
pop
dec
mov
mov
sub
lock
sbb
push
in
inc
or
dec
call
xchg
xchg
sbb
mov
xor
shlb
xchg
ret
mov
mov
inc
jbe
cmp
negl
es
cmp
push
cmp
subb
and
mov
lret
push
int
push
add
adc
ja
mov
dec
xor
jl
mov
aam
sbb
ret
and
pop
adcl
cwtl
pop
and
adc
push
and
and
pop
push
sbb
sbb
sbb
and
jnp
out
and
sbb
orl
cmpb
js
cmpsb
push
pop
daa
inc
dec
sub
adc
add
push
jmp
xor
adc
divl
std
pusha
or
jp
repnz
xchg
and
or
xchg
xchg
lret
or
sbb
cmp
and
push
or
and
adc
mov
add
pop
mov
jl
adc
pop
cmpb
scas
dec
sbb
add
ds
mov
or
adc
dec
cmp
movsb
dec
push
xor
cmp
jle
mov
or
sub
or
pop
jl
add
pop
mov
js
xor
xor
push
js
xlat
in
xchg
rcrl
pop
movsb
xor
add
add
ds
or
pop
cs
xchg
mov
jmp
clc
movsbl
mov
and
push
pop
icebp
jbe
xor
add
push
xchg
push
push
push
inc
mov
movsb
icebp
jnp
and
or
ds
inc
add
stos
popa
cld
xor
inc
repnz
inc
and
in
pusha
inc
fs
mov
movsb
cmp
pop
insb
jo
pusha
adc
es
pop
adcb
cmp
nop
add
je
repnz
inc
xchg
lahf
cwtl
pushf
and
inc
jbe
fs
mov
frstor
dec
gs
lret
mov
aaa
jmp
lret
inc
shlb
add
adc
mov
cwtl
dec
cmp
sbb
push
cld
inc
xor
popf
inc
test
in
inc
loop
xor
add
wrmsr
pop
gs
push
mov
test
and
stc
xchg
fstps
and
xchg
je
inc
cvtdq2ps
or
or
incl
cmp
jl
sub
lea
cmp
mov
fmull
rorb
or
dec
jnp
push
sbbl
fstpt
test
out
cld
jmp
dec
cli
loopne
lods
sub
inc
and
jne
cmc
xchg
pushf
push
sub
int3
jmp
out
push
mov
xchg
xchg
mov
jp
mov
les
and
and
jge
inc
mov
nop
outsl
daa
adc
jmp
rcrl
sbbl
sbb
lcall
outsl
mov
hlt
push
and
daa
push
fcoml
fldt
js
or
sbb
sbb
push
fwait
or
mov
rorb
je
mov
call
movsb
cmp
xchg
fs
push
add
cmp
idiv
add
int3
repnz
mov
and
es
lea
add
push
fistpl
sbb
xchg
xor
mov
inc
pop
daa
dec
inc
outsl
ffree
cli
xor
fimuls
xor
sbb
pop
add
pop
loopne
rcr
pop
sub
mov
js
movsb
adc
adc
inc
add
je
cmp
jne
push
inc
pop
inc
push
inc
push
and
mov
push
push
push
andb
dec
outsl
push
jl
pop
add
clc
mov
and
or
mov
pop
sbb
push
test
dec
mov
add
cmpsl
xor
cli
inc
in
add
adc
dec
sub
lock
dec
jns
call
cwtl
lret
es
je
int3
push
or
lret
lahf
lret
adc
xchg
clc
jmp
xor
and
pop
adc
cmp
daa
jnp
or
imul
int3
mov
cmpsl
outsl
adc
jae
jb
lea
stc
call
clc
lret
pop
inc
negl
mov
xor
sbb
clc
test
dec
aas
jne
push
cmc
fistl
mov
bound
scas
and
in
cltd
rclb
mov
popa
movsb
out
inc
sti
dec
sbb
ss
cmp
pop
xlat
in
and
mov
cmp
push
push
imul
mov
sub
mov
ret
fadd
sbb
mov
add
clc
or
pop
or
aaa
pusha
mov
or
and
mov
jne
push
add
adc
jmp
inc
fwait
ret
jge
rorl
mov
cmp
xor
add
mov
je
push
xor
mov
xor
or
rolb
mov
mov
shll
cwtl
aad
outsl
add
ljmp
pop
or
jne
pop
test
lods
dec
xor
inc
adc
mov
push
aas
into
and
or
pop
js
lods
mov
ret
mov
mov
sub
sbb
or
cld
xchg
sbb
or
cltd
popf
add
rorl
xor
mov
inc
call
loopne
fnstcw
inc
and
and
add
ds
fnstsw
jne
mov
scas
xchg
mov
movsb
push
into
or
in
cmp
rolb
pusha
push
sbb
hlt
js
imul
or
ss
dec
lahf
adcb
cmpsl
mov
das
cwtl
and
or
jb
add
xorb
mov
jmp
or
in
xchg
and
dec
xchg
push
mov
mov
adc
out
insb
rol
pushf
fcmovnbe
jmp
push
jp
pop
insl
dec
mov
in
cmp
add
jne
out
push
insb
cmp
add
push
fcoml
in
add
mov
divl
pop
xchg
ud0
ret
pusha
pop
xchg
mov
cmpl
cmp
cwtl
push
or
mov
daa
jne
jne
push
sbb
jecxz
pop
jp
pop
in
mov
xlat
or
cmc
mov
stos
nop
std
inc
mov
aas
push
sub
dec
and
push
outsl
aad
dec
inc
aaa
aaa
cmpsb
or
jle
hlt
sti
and
xor
sub
ljmp
jmp
inc
inc
lret
and
add
fistpll
lds
aam
insb
push
add
xchg
or
add
pop
imul
mov
xchg
xor
and
push
mov
insl
mov
push
iret
out
loopne
adc
daa
or
push
bnd
and
push
xor
sub
xor
push
and
mov
aam
fiadds
inc
cmp
enter
add
and
add
push
stc
pop
adc
inc
jnp
inc
push
sub
xchg
sbb
jge
cmp
stos
cwtl
push
mov
pusha
shrb
push
pop
mov
xchg
fdivs
js
dec
or
mov
fstl
lcall
pop
clc
faddl
fstl
fldz
fcomp
fnstsw
or
push
mov
jmp
cmp
or
fstpl
insb
pop
inc
inc
pop
enter
or
rcrb
mov
xor
aam
inc
and
dec
add
jo
pop
sbb
xor
rolb
lock
xchg
mov
cmp
inc
in
pop
ss
add
sbb
mov
fcmovbe
nop
xor
in
sub
mov
aas
sub
add
sub
mov
fistpl
lcall
lods
in
shlb
test
mov
add
cmp
lea
mov
lret
xchg
xchg
lods
mov
xor
push
pop
push
in
pop
sbb
mov
imul
add
add
inc
dec
addr16
in
sub
aaa
push
jp
xorl
out
out
sahf
mov
fimuls
cwtl
clc
imul
je
int3
dec
pushf
cmpsl
jns
shr
dec
or
out
aaa
sub
xor
xor
dec
or
jno
hlt
push
inc
cltd
cli
adc
add
xchg
dec
outsb
mov
std
and
dec
push
iret
rclb
data16
adcl
jo
hlt
inc
adc
xlat
mov
es
inc
or
cwtl
xor
sar
xor
scas
and
or
mov
mov
lret
pop
mov
loope
jmp
or
nop
and
cwtl
sub
push
xor
inc
ficomps
movsb
mov
jnp
shl
inc
cli
inc
xchg
cmpl
mov
mov
xchg
add
pop
mov
or
das
ret
inc
mov
fxch
sti
out
ss
mov
pop
sub
add
movsl
sti
cmp
mov
test
push
add
or
inc
jae
add
aaa
add
jb
ss
fs
mov
push
cmp
sbb
pop
inc
cld
sbb
repnz
cmp
jb
push
or
int
inc
daa
dec
pop
jb
adc
or
out
lret
push
leave
mov
lock
xchg
add
adc
mov
mov
dec
adcl
mov
xor
ret
mov
mov
mull
mov
nop
sub
das
sbb
cmp
and
mov
in
push
lock
inc
and
adc
sub
loope
push
inc
aad
test
push
cltd
sub
pop
adc
fistpl
jnp
cmpsl
andb
xor
mov
jbe
dec
adc
and
add
sbb
jno
add
mov
push
pop
hlt
push
int
xor
adc
inc
pop
sbb
push
dec
mov
test
adc
jge
cmp
jne
js
mov
pop
mov
lods
add
and
add
das
sub
xor
mov
cmp
and
or
outsb
mov
hlt
cwtl
ja
jns
dec
les
or
and
jl
mov
je
xor
push
jmp
orb
mov
sbb
cwtl
cmp
dec
add
push
push
cmp
inc
xchg
or
xlat
and
sub
sub
add
aam
inc
mov
or
fsubs
lret
adc
movl
repz
or
or
xor
jb
idivl
pop
or
jae
push
out
add
insb
popf
inc
dec
pop
jbe
push
dec
mov
roll
aas
dec
push
push
ret
decl
push
xchg
es
call
jne
mov
fucomp
jns
aaa
push
imul
dec
mov
or
pop
dec
xor
sub
mov
cmpsl
lods
rorl
xchg
or
cld
xor
fstl
inc
in
roll
or
adc
jbe
adc
mov
inc
sub
or
lret
mov
loop
pop
shrb
lods
daa
mov
sub
mov
sbb
or
or
or
dec
movsl
mov
scas
icebp
pop
sarl
loopne
inc
jb
push
push
js
mov
or
push
cmp
stos
mov
push
lret
fldcw
lods
std
push
and
js
pop
add
mov
in
adc
movsb
test
and
in
call
inc
mov
lcall
xchg
inc
lock
push
mov
xchg
dec
je
dec
mov
pop
outsl
mov
outsl
add
enter
mov
lock
inc
loop
lock
and
jno
and
pop
sbb
out
adc
mov
xor
add
jnp
or
xorb
pop
pop
arpl
add
mov
inc
adc
dec
inc
dec
push
mov
lea
pop
lock
mov
xchg
xor
xchg
repnz
in
dec
stos
fsubrl
pop
xchg
pop
and
insb
mov
daa
mov
bound
mov
add
dec
sahf
fstl
xlat
imul
jbe
or
fdivrs
andb
insl
lret
dec
and
lock
xchg
mov
aam
imul
or
repz
add
pop
or
xor
jb
jno
inc
addr16
sbb
sub
jo
pop
sarl
xlat
cmp
inc
mov
pusha
xorl
inc
aam
sahf
daa
pop
xor
sbb
sub
cltd
push
sti
mov
cmpsb
addb
lods
add
fmuls
lods
imul
test
jb
int
add
lock
leave
scas
call
dec
xchg
push
inc
imul
dec
sarl
and
std
jb
adc
in
je
xorb
in
dec
fsts
add
xor
movsl
push
sbb
cmp
add
pop
inc
push
cmpsb
jb
adc
daa
push
push
jl
or
mov
call
hlt
pop
xchg
and
loop
insb
push
mov
icebp
adc
push
push
sub
icebp
mov
lods
jns
or
fsubrs
pop
adc
adc
add
xor
adc
push
cmpsl
mov
test
and
dec
add
add
xchg
scas
or
add
das
lcall
or
fs
sti
xchg
inc
add
inc
sbb
loope
enter
add
cmpsb
add
mov
push
ds
rcll
pop
push
xor
dec
lods
adc
jae
or
imul
inc
scas
jno
push
dec
sub
inc
add
js
or
fimuls
aad
outsl
xchg
test
idivb
adc
bound
dec
bound
lods
add
push
call
add
pop
lea
sarb
mov
addr16
mov
add
push
mov
jb
or
aaa
jae
xchg
mov
pop
loopne
in
jne
es
xchg
xor
in
push
cmpsl
add
jo
inc
loopne
mov
sbb
sub
addb
pop
xor
sbb
mov
add
rorl
jle
loop
mov
ret
loopne
data16
iret
or
pop
lds
lods
inc
mov
shl
add
push
fcoml
cld
mov
push
jp
in
popa
pop
push
loopne
xchg
adc
dec
aam
pop
adc
push
push
aam
xor
add
in
push
dec
das
xor
push
push
es
scas
and
inc
cltd
xchg
mov
mov
adc
fnstenv
in
cli
sub
mov
push
sbb
adc
push
fimull
add
das
insl
shll
mov
shr
or
xlat
add
lret
add
pusha
pop
hlt
or
test
or
daa
les
movsb
mov
mov
push
pop
inc
jae
add
adc
adc
movsb
sbbb
in
sbb
sbb
lock
mov
dec
ja
cli
test
push
sti
or
or
push
or
mov
fisubrs
adc
lea
pop
xor
aam
ss
aaa
mov
jmp
mov
fimull
sti
inc
or
sbb
and
pusha
dec
jns
dec
push
fs
mov
lock
add
push
mov
sbb
addb
cmpb
or
addb
mov
xor
pop
pop
and
adc
imul
mov
daa
sbb
sbb
add
xchg
test
test
push
jo
add
sub
mov
inc
push
sbb
adc
jle
push
aas
push
lret
icebp
jmp
cmp
xchg
jo
shrb
cwtl
lock
test
push
outsl
movsl
insl
pop
dec
lcall
mov
push
push
lods
verr
outsb
jl
clc
xor
sbb
push
out
push
mov
mov
or
movl
mov
jb
enter
pop
push
pop
adc
xorl
pop
mov
push
movsb
pop
or
test
jmp
cld
and
and
pop
gs
jp
inc
dec
in
js
mov
cwtl
sub
fmuls
or
dec
sub
fwait
push
test
cli
sbb
insb
jp
sub
idivb
add
push
cwtl
add
push
les
int3
lea
inc
data16
cmp
test
sub
dec
xor
and
lea
add
nop
xor
cmp
sbb
add
ret
push
push
jbe
push
je
and
pop
and
mov
loopne
cvtps2pd
es
lods
popa
push
push
in
mov
or
loopne
movsb
addr16
mov
clc
jg
push
inc
adc
pop
dec
sbb
out
or
dec
jge
mov
test
je
mov
inc
pop
lea
or
push
inc
les
sub
jle
xlat
dec
inc
insl
xorb
outsb
adc
push
jns
add
mov
loope
dec
mov
outsb
lret
lret
cmc
movsl
test
addl
je
mov
std
movzbl
mov
cli
mov
add
push
and
lds
mov
xor
and
adc
jb
jl
pop
mov
rcrl
sub
push
add
add
jns
push
cmp
cmc
sbb
pop
lods
fbstp
sarb
or
sub
je
adc
and
and
fs
cmp
cmova
inc
fcmovnb
xor
and
or
ret
cwtl
adcl
jbe
pop
inc
mov
dec
cmp
mov
jl
daa
scas
ret
cmpsb
push
mov
dec
add
jecxz
test
jecxz
clc
jl
push
mov
xor
sbb
pop
call
mov
cmc
or
hlt
rorb
push
aaa
and
insl
add
jne
jne
mov
push
sbb
or
jle
cmpsb
adc
cmpl
mov
xor
sbb
inc
fs
add
xorb
mov
clc
xor
push
cwtl
and
mov
ret
lods
lods
rcrb
cmc
ret
enter
mov
pop
clc
pop
push
js
test
mov
or
hlt
stos
add
inc
lea
mov
jl
xchg
xor
xchg
mov
or
ror
lock
fwait
aad
jecxz
js
cmp
jo
inc
dec
das
sub
or
push
mov
cs
cmp
aas
es
xor
mov
repnz
and
arpl
inc
lcall
not
sti
mov
lea
pushf
mov
adc
inc
incl
daa
add
mov
test
push
sub
mov
mov
loope
fcmovnbe
cmp
fwait
sti
cmp
decl
or
les
sti
aaa
mov
test
in
adc
jge
cld
pop
cmpb
sbb
es
xor
mov
insb
push
push
xor
lea
bound
push
aam
add
adc
popf
adc
adc
enter
pushf
push
adc
push
lods
mov
sbb
mov
fcom
cmp
or
mov
dec
sub
es
aam
ja
cmpsb
xor
insl
push
sub
mov
pop
or
test
jbe
xchg
fs
jmp
and
fadds
xchg
cld
cld
or
rep
mov
jge
mov
sbb
adc
mov
xor
cmpsl
stos
dec
mov
lock
or
push
add
jnp
mov
push
stos
xchg
mov
popa
outsl
out
fildll
xor
and
popf
xlat
je
popa
cltd
andl
cmp
adc
sub
fmuls
xor
loop
inc
xor
mov
push
mov
nop
je
cs
pop
inc
pop
cmp
jg
pop
jl
data16
loop
sbb
mov
icebp
lret
pop
or
adc
sub
imul
testl
or
insb
adc
inc
sbb
stos
sbb
roll
pop
pop
in
mov
xlat
pop
loop
and
jl
push
ds
in
pop
pop
mov
jge
ret
or
pushf
push
aad
sub
jb
xor
test
and
loopne
pop
scas
push
mov
ss
jb
mov
jecxz
loope
cmp
push
hlt
sub
stos
sub
inc
sub
pop
dec
xorb
mov
bound
lock
push
inc
pushf
add
jp
jmp
sbb
ret
lret
fdivs
ret
and
push
push
inc
sub
cs
rolb
mov
ljmp
les
push
test
in
pop
out
les
shrl
jno
aad
nop
outsb
inc
lock
ja
rcrb
cmp
jnp
mov
movsb
cwtl
cmpsb
int
add
repz
or
inc
mov
rolb
aam
mov
je
sub
cli
sahf
pushl
jo
out
inc
add
mov
xor
mov
add
fs
jns
loopne
add
nop
adc
call
sub
add
mov
adc
mov
push
fcmovbe
and
and
mov
pop
pop
sbb
xor
or
xor
and
adc
stc
sub
add
add
lea
ret
sti
lea
rorl
mov
xchg
hlt
pusha
cmp
cwtl
dec
dec
daa
nop
frstor
ss
mov
ja
pop
stos
subl
addr16
xchg
addr16
dec
movsb
pop
jb
lret
inc
in
push
sub
xor
iret
or
imul
cmp
fistpll
add
pushf
js
xchg
xorb
lock
imul
or
or
push
adc
sub
fsubr
aam
iret
lcall
sub
jmp
rorb
pop
les
dec
or
xor
imul
and
ficompl
xchg
xor
aaa
jne
add
ss
inc
jle
jb
adc
shlb
hlt
adcl
pop
adc
add
mov
insl
mov
mov
lds
aam
mov
fs
ret
adc
dec
in
flds
scas
add
cmp
jg
mov
into
inc
cmp
or
push
add
ja
mov
and
scas
pop
adc
pop
or
ja
cmpsl
mov
ja
pop
adc
xor
dec
hlt
cmp
jge
mov
jbe
push
jg
pop
imul
je
dec
push
ret
push
or
leave
std
push
arpl
sub
jne
inc
inc
jmp
inc
fs
movsl
mov
or
lea
push
add
add
sbb
add
lds
xor
loopne
and
test
inc
dec
repnz
xlat
ret
iret
or
sub
sahf
shll
cmpsl
jmp
push
mov
cwtl
and
add
adc
or
jo
aam
in
dec
je
dec
pop
add
push
push
xor
pushw
popf
cmpsb
pop
and
mov
pop
jae
pop
pop
in
mov
push
xchg
mov
xor
xorl
shr
popf
inc
cmp
movsl
adc
mov
movsb
jle
sbb
jmp
push
mov
push
inc
mov
fwait
sub
push
lods
mov
aas
sub
aad
fdivr
orb
xor
add
push
mov
fmul
cli
and
les
jmp
enter
fs
cmp
adc
add
inc
jo
pop
inc
inc
daa
add
test
mov
push
sbb
mov
clc
or
je
mov
or
lret
shl
mov
cmp
dec
or
push
sahf
nop
pop
cs
and
mov
and
aad
mov
mov
int3
push
cmc
push
mov
js
pop
or
push
stos
sti
ss
push
sbb
enter
shrb
push
adc
cmp
mov
or
dec
sbb
sub
nop
mov
jo
hlt
mov
push
xor
out
sbb
inc
or
mov
pop
repnz
in
inc
cmp
cmp
jnp
stc
sub
add
dec
adc
aad
imulb
cmp
cmp
xchg
xchg
bound
test
imull
jbe
sub
pop
inc
mov
push
pop
add
leave
add
jne
dec
cmp
or
bound
xchg
lea
stos
in
cltd
scas
mov
movsl
aad
mov
fisubrs
push
ret
or
inc
cmc
lahf
setne
push
jp
fs
sahf
mov
jmp
fwait
je
cmpsb
jbe
test
jne
push
loop
pop
jae
xchg
dec
xor
test
xchg
lea
xchg
add
sub
jl
adc
mov
sub
or
ret
int3
inc
fxch
mov
out
dec
add
pop
or
and
je
fcomps
fmull
decb
add
sub
icebp
push
and
shlb
test
jl
xchg
in
in
dec
sub
push
shll
fcomps
sub
push
xor
inc
adc
dec
ja
or
xchg
push
jle
cltd
lea
add
adc
or
test
fsts
mov
mov
pop
inc
pop
mov
movsl
cmp
js
jl
mov
xchg
lret
cmpsb
xor
mov
stc
and
cli
jno
or
shr
xor
adc
rorl
lods
mov
cld
lahf
mov
pop
lea
test
add
xor
call
add
aaa
jmp
mov
cld
add
mov
xchg
pushf
pop
or
add
inc
push
adc
loope
out
adc
test
dec
inc
push
dec
dec
lock
pusha
shrl
xor
insb
inc
rorl
in
psllw
daa
add
adc
xchg
loopne
jecxz
xchg
imulb
xchg
fisttpl
test
push
aaa
mov
push
dec
int
inc
in
inc
mov
or
adc
imul
pavgb
push
out
scas
push
loop
or
or
lret
or
jb
push
mov
andb
aas
scas
sub
cmpsl
mov
xlat
cs
add
sti
push
push
test
faddl
sbb
and
mov
xor
fcmovb
or
mov
inc
pop
cmpsl
mov
push
je
mov
shll
call
loop
add
add
sbb
pop
les
add
xor
cli
ret
in
sbb
mov
push
pop
out
sbb
shl
add
or
push
es
les
mov
inc
inc
cmp
dec
pushf
je
push
sbb
xor
xchg
lret
cmpl
nop
lea
xor
xor
ret
adc
enter
daa
add
push
dec
es
pusha
fisttpl
xchg
mov
fcomps
sbb
jecxz
pop
stos
fld
std
popf
out
mov
rclb
add
push
or
and
lock
push
push
jmp
sbb
xchg
orb
xor
sub
iret
out
sub
jns
add
dec
fdivr
lret
jae
pushf
dec
les
aam
test
out
push
jo
cmp
es
jnp
and
pop
add
call
add
push
mov
push
test
mov
iret
lods
sbb
or
rcll
cmp
lret
mov
cmp
aas
and
push
mov
jmp
jno
or
xchg
xchg
and
push
or
add
sub
xor
cmc
lcall
cmc
add
cmp
xor
pop
push
sbb
adc
pop
into
outsb
push
sbb
sub
jl
mov
push
xchg
pop
cmp
adc
sbb
inc
cmp
push
inc
xchg
fs
out
fs
outsb
mov
cmp
inc
push
adc
sbb
adc
in
and
jmp
mov
or
outsl
and
leave
movsb
adc
dec
aad
je
bound
inc
sub
and
xchg
sub
mov
sub
bound
push
aam
inc
fwait
or
mov
push
add
insb
and
hlt
lods
sbb
inc
push
mov
dec
addr16
add
jns
mov
dec
push
and
sbb
pop
lea
leave
lret
lods
js
mov
loopne
and
in
daa
push
dec
inc
add
fs
inc
out
addl
dec
adc
adc
mov
rcrb
sbb
les
jae
push
push
fistpl
pop
das
rclb
push
sbb
jmp
outsb
and
or
cmp
stos
in
xor
adc
mov
jl
mov
cmp
insl
repz
fmul
insl
add
xchg
lmsw
andb
xchg
adc
or
call
jo
and
xor
jns
daa
jl
inc
push
in
xchg
push
cwtl
sub
flds
or
xor
dec
pop
pop
push
xor
insl
sub
push
test
inc
push
stos
mov
daa
lods
dec
fdivs
lods
stos
or
jbe
lret
out
rolb
adc
sub
mov
mov
xchg
bts
sub
xchg
or
lods
mov
andb
xchg
hlt
jge
add
dec
pop
xchg
inc
add
pop
xor
add
sub
pop
adc
sbb
in
loop
and
mov
inc
pop
cmpsl
pop
testb
sub
sbb
and
pop
cmp
loopne
or
mov
xchg
sbb
mov
leave
cwtl
fstpl
test
arpl
dec
sbb
push
inc
fcoml
in
mov
sbb
stos
push
pop
mov
add
in
mov
in
xchg
imul
icebp
adc
push
scas
imul
and
loopne
dec
pop
enter
add
ret
inc
adc
cmpsb
fisubrs
push
shll
xchg
lret
call
and
push
or
fucomip
pop
test
and
sbb
and
add
push
adc
push
into
fcmovbe
adcb
cld
push
jg
mov
outsl
adc
cmp
add
mov
iret
adc
mov
cmp
push
sub
rcr
and
push
into
push
jno
push
movsl
push
shrb
scas
and
movsb
hlt
dec
lock
push
xor
jmp
pop
aad
stc
and
aad
add
ret
ret
inc
shl
rcll
cmp
data16
subb
jno
xor
add
pop
xchg
stos
andl
lahf
lcall
in
xchg
aaa
test
lahf
js
ret
adc
or
leave
xor
or
xorps
sysenter
cwtl
lahf
add
test
cmp
or
fwait
in
movsl
add
seta
mov
jp
or
leave
add
cmp
addl
push
daa
inc
sub
mov
cmc
js
mov
mov
mov
or
and
cmp
xorl
mov
sub
jb
cmp
jp
and
inc
aam
jecxz
or
js
sbb
push
lcall
push
stc
pop
cmpsb
rol
stc
adc
fsubs
xor
jne
inc
or
sub
or
mov
pop
push
stos
faddl
cli
mov
push
lret
fstpl
ds
psubsb
lods
and
adc
cmp
or
add
dec
push
test
mov
xlat
hlt
fstl
push
push
and
push
pop
shlb
rclb
nop
out
ds
pushf
sbb
jp
add
movsl
push
and
daa
xchg
add
and
scas
push
addr16
in
pop
inc
cmpb
test
rcl
mull
or
sti
pop
jmp
lahf
sbb
in
add
sbb
and
push
test
adc
cmp
insb
mov
dec
dec
add
push
and
ljmp
mov
inc
adc
jecxz
lahf
nop
jle
mov
jle
push
add
push
or
push
and
into
sub
inc
lea
push
sub
push
add
outsb
pop
das
xchg
push
addl
mov
adc
and
movsb
jnp
hlt
das
insb
and
shlb
addl
sub
movsl
add
gs
or
ljmp
jecxz
dec
inc
outsl
mov
mov
sub
xor
xchg
and
movsb
add
stos
sbb
xor
stos
sbb
sbb
inc
dec
dec
sub
mov
scas
add
push
push
dec
ds
dec
loopne
dec
xor
dec
jl
adc
push
xor
test
xor
mov
mov
test
dec
sbb
outsl
pop
and
jl
pop
pop
sbb
xchg
sub
dec
fnstcw
ds
clc
and
push
bound
mov
movsb
invd
aas
cmp
rolb
mov
sbb
inc
xor
les
ds
mov
outsl
xor
pop
movb
cld
je
inc
pop
push
mov
dec
push
mov
ret
pusha
push
xor
int3
mov
sub
and
fcmovb
or
arpl
insb
push
mov
sbb
fistpll
nop
sbb
pop
and
push
ret
pop
int3
gs
cmp
adc
add
add
xor
loopne
sbb
inc
sub
sbbb
adc
push
xchg
test
xor
xchg
mov
cmp
or
jb
add
add
rclb
push
and
jo
jl
sbb
push
push
inc
imul
xor
and
add
adc
push
imul
or
pushf
xor
jo
inc
xor
and
push
lock
in
inc
xlat
xchg
xor
cmp
cli
addr16
es
push
hlt
gs
scas
pop
lret
or
sarl
push
adc
mov
push
push
pop
mov
or
lcall
mov
mov
xor
gs
fwait
mov
lret
lret
and
sbb
sub
ja
xchg
sbb
mov
shll
inc
pop
in
out
in
push
pop
push
outsl
sub
inc
push
pop
push
jo
xorb
push
jbe
shrl
filds
js
pushl
push
or
xor
pop
mov
lret
pushl
stos
mov
push
adc
push
adc
or
popf
pop
inc
popf
and
ja
inc
xchg
js
hlt
push
in
orl
or
or
les
and
mov
mov
sti
je
push
jge
push
movsb
xor
sub
and
jbe
mov
jmp
inc
sub
cmpl
adc
sub
les
js
push
inc
dec
insb
inc
lcall
movsb
inc
rorb
mov
sbb
cmp
mov
sbb
iret
cmp
int3
adc
dec
xor
in
add
mov
add
push
lcall
pusha
or
movsb
cmp
xchg
neg
aam
mov
fadds
shrb
cmp
je
bound
jecxz
add
push
mov
pop
xorb
push
add
shll
ret
or
add
or
jbe
dec
add
gs
test
push
dec
inc
push
cmp
fstps
hlt
stos
adc
fs
xor
adc
mov
bound
inc
push
or
mov
movsb
pop
dec
xchg
repnz
sarb
or
stos
lcall
sbb
adc
mov
into
jp
ja
push
pop
rclb
dec
fsubrl
shlb
mov
dec
fcoms
lea
jae
addb
and
bnd
cmovp
cs
mov
xcrypt-ofb
cmpsl
jmp
inc
loopne
repz
add
add
jb
aad
push
sbb
sbb
inc
int
xchg
mov
mov
xor
enter
imul
addb
icebp
ret
or
outsb
mov
hlt
dec
cmc
xor
xchg
imul
jge
inc
stos
fnstenv
inc
sub
mov
mov
dec
xchg
cli
add
enter
dec
ret
adc
push
cmp
push
add
mov
or
or
out
push
add
or
fdivp
add
cmp
mov
pop
in
test
xchg
push
add
jo
jae
mov
aad
movl
pop
adc
jno
insb
push
dec
push
in
xor
fbld
pusha
mov
rol
mov
ror
xor
shr
xor
es
jg
push
rol
xor
shr
xor
add
add
add
mov
lahf
push
orb
inc
fs
or
mov
push
or
and
xor
add
mov
mov
aam
sub
xor
inc
add
cmp
aas
pop
mov
cwtl
repnz
mov
fisubrs
jge
xor
shrb
fiaddl
cltd
xchg
aaa
adc
cmp
mov
repnz
push
sub
dec
movsl
sarb
or
notb
not
ret
rcl
add
add
push
roll
add
call
imul
xor
call
sub
inc
push
xor
ljmp
shll
push
rol
out
add
push
xor
pop
dec
fcomp
loopne
xor
jae
loopne
in
aam
lret
call
bound
cmp
jns
punpckldq
push
cmp
sbb
add
les
xor
adc
mov
xor
rol
in
call
lcall
xor
dec
in
in
loopne
rorl
cmp
pop
cmp
pusha
and
in
xorl
xor
or
int3
aam
mov
or
pop
adc
clc
and
and
loopne
or
out
into
add
and
shrb
inc
adc
addl
insl
addb
pop
inc
inc
jo
ret
push
jo
rcll
add
mov
cwtl
pusha
lcall
mov
adc
push
loop
sti
rcrl
mov
add
add
pop
bound
jbe
call
insb
fisttps
or
clc
jp
push
and
rclb
mov
inc
xor
xor
fs
call
test
lock
inc
adc
clc
popa
mov
xchg
popf
push
sub
clc
jo
cli
stos
or
and
adcb
imul
cmp
cmpsb
inc
in
in
int3
pop
push
hlt
inc
shr
rolb
and
cli
xor
stos
mov
sub
jge
shlb
shlb
rclb
sub
and
add
loopne
call
clc
lahf
jo
add
xorb
push
xor
dec
cld
dec
xorb
push
dec
jns
rorb
add
pusha
inc
push
push
xor
orb
dec
cmp
add
inc
push
data16
leave
and
add
push
mov
sub
int
add
or
imul
jb
or
pop
pop
and
add
fs
pusha
adc
pusha
enter
xchg
movsl
mov
fcoms
stc
rorb
adc
sbb
roll
sub
cmpsl
in
orl
adc
fs
dec
dec
sbb
test
stc
and
ljmp
mov
xchg
inc
mov
dec
negb
dec
or
or
fcoml
cmpsb
imul
or
in
add
and
adc
add
aaa
push
adc
pushf
test
ret
aas
pop
add
sub
mov
int3
add
cmp
jb
inc
lea
add
inc
aaa
sub
pop
cmp
lcall
pop
xor
or
mov
pop
mov
sub
sarb
and
rorb
or
or
mov
xor
jno
jbe
jae
mov
sub
or
jp
aas
lea
mov
add
sub
sub
pop
out
out
sarb
mov
ret
dec
or
mov
push
mov
dec
jne
pop
and
js
inc
mov
xchg
sub
mov
cmp
jbe
or
fs
adc
je
inc
add
jae
push
pop
fadds
or
or
mov
ljmp
outsl
mov
dec
pusha
outsl
pop
loopne
ror
mov
mul
xchg
test
mov
aaa
mov
jb
jo
mov
xor
pop
sahf
xor
cmpsb
rorb
enter
push
outsl
leave
dec
sbb
jge
lds
adc
inc
add
inc
adcb
and
adc
mov
xchg
jecxz
leave
push
sbb
and
mov
dec
jb
xchg
fistpl
pop
add
dec
rcrl
and
mov
shll
mov
pop
and
sub
mov
int
cmp
or
fwait
addb
mov
and
inc
or
lock
push
mov
rclb
es
shl
jl
cmpsl
and
insb
nop
andl
or
push
adc
test
fimuls
popa
xchg
xchg
mulb
add
dec
add
insb
ja
inc
shll
ret
cmp
push
cmp
sti
inc
dec
mov
dec
adc
clc
dec
sbb
xor
and
mov
aaa
add
or
pusha
ljmp
imulb
and
sub
cmpsb
mov
dec
fldcw
mov
adc
or
in
or
inc
push
cmp
cmp
pop
mov
sub
dec
std
add
outsl
aam
inc
imul
xchg
cmp
cmp
adc
nop
lcall
int3
test
cmp
mov
shl
or
fwait
negb
cmp
sub
cmp
movsl
adc
repnz
or
and
add
test
notb
aam
pop
incl
xchg
and
addl
adc
sbb
hlt
pop
push
cmp
cmpsb
sub
or
arpl
ss
or
mulb
add
jge
in
mov
and
mov
cmpl
jecxz
mov
push
ret
sub
jp
sub
das
pop
ljmp
mov
xor
loopne
gs
and
mov
xor
subl
and
aaa
test
and
xchg
xchg
adcb
add
repz
andb
pop
push
in
lods
inc
jecxz
and
and
push
inc
lcall
pop
and
and
dec
mov
add
and
sbb
jnp
mov
or
push
clc
test
add
pop
dec
jle,pt
jno
lods
or
mov
loopne
push
pop
jmp
cmp
push
pusha
dec
sub
inc
std
xor
or
testb
xchg
outsl
in
dec
dec
loopne
mov
and
insb
loopne
stc
inc
aam
push
rclb
jmp
sbb
or
scas
xor
call
mov
lock
or
pushl
js
xchg
push
arpl
mov
dec
into
cld
lods
mov
and
std
xor
push
cmp
push
int
xchg
cs
sbb
rclb
push
push
leave
clc
mov
jne
jl
fwait
pushf
mov
sub
sub
rclb
sub
into
or
sub
push
cli
jl
pop
or
jo
je
cmp
jbe
jns
sub
push
sub
fs
mov
jns
fnsave
and
outsl
ret
or
das
xchg
xor
adcb
nop
dec
sahf
push
and
sub
cmpl
cmp
pop
clc
repz
test
dec
or
add
repnz
movsb
orl
ja
mov
andl
inc
push
dec
or
scas
bound
cmp
cmp
lcall
add
sub
nop
sub
push
je
and
fsubrl
add
cmp
cmp
cmp
add
or
mov
rolb
push
push
jle
pop
shrb
out
adc
cmpsl
jne
add
mov
or
cmp
mov
push
dec
loop
mov
jbe
cmpsl
in
mov
stos
add
jae
push
xchg
mov
scas
cmp
jmp
pop
pop
cmpl
push
push
dec
or
inc
sahf
sbb
and
imul
inc
or
add
sbb
xor
dec
jb
js
dec
and
pop
mov
add
xchg
dec
shlb
dec
and
mov
add
sbb
sbbl
fisttpll
pop
enter
scas
and
lahf
fimull
and
jmp
and
ja
sub
sub
addl
out
iret
xchg
clc
cmp
inc
jne
or
cmpsb
adc
test
lods
jns
lea
and
out
jne
imul
adc
add
add
loope
std
xchg
mov
push
shl
fdivrs
push
add
roll
pop
add
orb
das
sahf
push
adc
push
push
and
add
xlat
push
mov
fdiv
outsb
sub
adc
fdivrl
jbe
rolb
lcall
addl
in
pop
add
push
inc
push
ret
lds
cmpl
mov
add
push
push
inc
bound
ret
or
enter
fimuls
cmpsb
jbe
adc
push
sbb
dec
pop
sbb
cmp
cmp
fstl
sbb
clc
add
insb
cmpb
fldcw
push
test
adcb
ja
repnz
testb
test
inc
add
je
xchg
popa
insb
adc
aad
sbb
inc
subb
cmpsb
adc
in
xchg
jbe
xor
dec
pop
inc
loopne
loope
ja
js
subl
outsl
cmp
test
sbb
inc
inc
lea
jbe
pop
decl
push
dec
cmp
jbe
call
inc
xchg
sub
test
ret
cmp
pop
ficomps
lcall
out
loop
cld
inc
push
add
sub
push
fstl
fs
imul
xor
ss
cmp
mov
lret
shll
adc
ja
jae
ss
jb
lock
push
test
loope
aas
jo
and
dec
sub
push
neg
ror
mov
inc
mov
out
hlt
pop
or
pop
push
jmp
inc
into
pusha
shll
loope
rcl
xchg
shll
xchg
xor
test
cmp
ss
and
sbb
fdivs
hlt
dec
xor
xchg
lahf
mov
test
jl
negb
inc
dec
xor
rclb
pop
rorb
pushf
push
or
lods
int3
in
shlb
xor
mov
mov
add
daa
adc
stos
cmp
sub
lock
adc
mov
push
or
lods
or
sbb
cmp
cmpsl
jl
lea
cli
sub
outsb
adc
add
mov
mov
mov
adc
mov
pop
cwtl
xor
mov
jne
dec
fistl
or
jnp
addl
mov
jg
stos
sbb
mov
xchg
dec
out
frstor
or
stc
cmp
cwtl
push
pop
mov
add
cmp
lods
subl
cli
lahf
fmull
je
inc
jno
icebp
pusha
pop
and
pop
push
jae
rolb
adc
pop
and
aam
push
inc
cmp
jl
pop
sub
emms
or
sarb
shlb
push
xor
mov
push
push
popa
loopne
lock
sbb
cmp
lea
rcrl
lods
out
or
mov
sub
loopne
subb
fsubrs
mov
ret
push
das
add
lods
push
push
push
jl
pop
es
sub
cld
shrl
sbb
add
shrb
sub
movsb
aaa
imul
and
mov
movsl
add
sbb
data16
or
notl
ret
daa
shrl
cmp
sbb
push
jmp
lea
stos
inc
mov
dec
sbb
in
push
les
sub
comiss
push
insb
cwtl
add
data16
inc
cwtl
outsb
push
test
inc
xor
mov
or
out
add
or
fmull
sub
add
add
mov
and
dec
shr
shl
add
and
shl
xor
mov
mov
and
fdivp
fdivrl
mov
add
push
jno
cli
js
not
xor
jp
jge
xor
adcb
inc
inc
cmp
or
xor
mov
addr16
loope
fisubrs
dec
mov
je
mov
and
xor
pop
or
fs
jno
test
or
push
jge
sub
jno
or
add
ss
push
or
xor
push
sub
add
and
or
sbb
cmp
mov
xchg
dec
call
jmp
mov
dec
and
pop
je
sbb
add
arpl
call
mov
mov
shrb
shlb
cmc
mov
jle
push
jno
xor
stos
xlat
out
imul
loope
push
sub
xor
sub
jbe
es
cmp
adc
aam
sbb
loop
addl
adc
sbb
sahf
and
push
orb
test
dec
sbb
xor
adc
loop
push
pop
pop
invd
or
test
nop
dec
sub
and
sub
mov
nop
xchg
nop
cmpsl
or
or
lret
dec
cs
mov
ficoms
adc
fs
or
or
cmc
popa
or
adc
fldcw
lds
pop
test
hlt
cmp
dec
movsl
dec
idivl
inc
mov
mov
mov
add
mov
jp
mov
shlb
xchg
rolb
xor
int
cmp
inc
push
arpl
aam
pop
mov
add
jle
lret
rcrb
and
jg
inc
add
jbe
ss
xor
push
js
jl
xor
call
das
bound
int
ret
cmp
add
sub
add
adc
out
xor
shlb
scas
daa
fsub
mov
add
cmp
test
pop
push
ret
push
inc
test
jno
pop
arpl
pop
jecxz
or
test
inc
popf
pop
lret
mov
pop
insb
mov
sbb
sbb
mov
mov
sub
or
test
add
cmc
imul
cltd
inc
pusha
roll
fiadds
clc
adc
cmpsb
icebp
xchg
xor
divb
pushw
sbb
mov
popa
and
gs
push
movsb
pop
pop
pop
ret
mov
pop
adc
or
clc
orb
pop
jmp
rorb
pop
imul
push
or
sarl
in
add
pop
sbb
push
mov
xorb
ss
mov
xchg
lea
push
sub
insb
and
adc
dec
lods
sub
sub
mov
mov
cmp
mov
or
and
sub
fisubrs
insl
and
cwtl
xchg
jmp
pop
jmp
dec
mov
stos
inc
push
cmpsb
inc
ss
fwait
inc
xchg
lds
mov
inc
or
or
hlt
push
ret
jmp
and
push
cmp
mov
arpl
pop
adc
push
gs
cmp
ds
inc
ja
mov
mov
mov
outsb
dec
out
inc
clc
adc
js
and
xor
lret
xor
adc
mov
xchg
mov
sbb
cmpsb
jo
push
mov
mov
mov
jne
push
or
or
mov
loopne
je
xor
dec
sbb
cs
mov
dec
xchg
sbb
jbe
jp
xchg
push
aas
mov
mov
pop
icebp
loope
inc
faddl
daa
mov
inc
add
pop
push
loope
jb
out
add
jecxz
roll
mov
pop
push
rcll
ror
add
sbb
jae
jp
cmp
push
or
inc
inc
push
cltd
pop
pop
adc
cmp
sbb
mov
loop
add
push
shr
test
js
sysexit
push
clc
mov
sub
jne
pop
mov
fisubs
mov
inc
inc
roll
sbb
add
sub
push
mov
imul
ret
out
jae
xor
and
repnz
cmp
jle
inc
and
cmp
add
stc
mov
mov
xor
xchg
dec
inc
cmp
in
scas
insb
sbb
les
sbb
jne
popf
pop
mov
push
add
pop
pusha
xor
mov
loopne
push
das
add
pop
push
inc
shrb
dec
pop
jmp
jne
repz
das
enter
pop
or
in
and
or
fst
movsl
in
xlat
lret
mov
or
push
push
insb
adcb
ljmp
sbb
lods
insl
jge
mov
pop
rclb
push
mov
call
dec
or
push
sub
inc
jo
jne
add
int
addl
mov
inc
cmp
shl
movsl
popa
clc
or
nop
stos
mov
notb
pop
xor
inc
lret
sti
aam
lret
jne
and
lahf
cld
imul
push
icebp
insb
ljmp
stos
pop
sbb
jo
sub
std
xchg
cmc
pop
jbe
sarl
sbb
jbe
mov
fdivr
add
cli
testb
je
cmp
mov
or
and
fs
cmp
mov
ret
sub
shll
adc
add
dec
loopne
out
add
mov
sub
rcr
popa
sbb
cltd
lret
adc
pop
sti
repz
adc
dec
add
push
push
cmp
sbb
push
pop
mov
push
add
jo
es
loopne
jae
loopne
adc
and
icebp
jmp
jle
or
mov
ret
imul
adc
in
push
push
idivl
loopne
jne
jg
add
and
es
hlt
pop
cmp
dec
pop
mov
jnp
sti
sub
mov
fisubrs
mov
jo
and
clc
jp
push
pop
je
shlb
jg
inc
hlt
lods
push
mov
shlb
dec
sbb
or
inc
mov
adc
mov
or
mov
jo
xchg
xchg
push
add
xor
in
dec
push
push
sbb
mov
scas
and
pop
andb
cltd
lretw
xlat
pop
mov
and
scas
rcrl
std
add
mov
mov
rorl
sbb
mov
push
es
add
repnz
icebp
jb
or
inc
fiaddl
pop
cmpb
cld
inc
outsb
pop
leave
jmp
lea
push
sbb
sahf
dec
pop
sbb
inc
lock
or
inc
jnp
lret
sub
sub
lea
cmp
pop
std
or
adc
stc
jmp
ret
testl
sbb
inc
aas
push
jnp
sqrtps
pop
xor
dec
dec
cld
pop
push
insb
sub
and
and
or
adc
sbb
or
int3
out
std
cwtl
or
stos
sbb
xor
xor
into
movb
xchg
lahf
jo
notb
jb
mov
pusha
and
fdivs
cmp
out
je
jne
push
test
lods
push
adc
aam
mov
test
push
arpl
sbb
xlat
mov
sbbl
inc
add
jae
fisttpll
clc
shrb
aad
jno
leave
pop
pop
insb
shlb
popa
sbb
jae
pop
push
lcall
push
add
sbb
pop
pop
in
sti
sahf
rcrb
pop
sub
shlb
adc
rolb
pop
sbb
pop
push
or
cmp
movsb
mov
inc
jo
loope
mov
sbb
jo
cmp
es
pop
push
mov
push
fists
mov
je
inc
in
and
pop
nop
inc
or
dec
jae,pn
loopne
lcall
adc
xchg
test
rcr
pop
lret
jmp
or
pop
jmp
dec
rorl
mov
or
dec
adc
jae
or
add
test
ja
sub
pop
dec
push
cltd
cmp
sub
push
add
jae
mov
sub
sarb
add
dec
pusha
jo
add
pop
test
movsl
or
imul
mov
fnstenv
push
or
cmp
je
add
popa
or
adc
in
xor
cmc
cmpsb
out
mov
or
mov
arpl
loopne
ljmp
fadd
dec
xchg
sbb
jb
dec
enter
add
mov
cltd
adc
aad
mov
popf
sti
xchg
dec
mov
xor
rcrb
adc
and
scas
add
das
push
inc
sub
and
repz
add
cmp
cmp
push
scas
cli
sbb
jbe
jns
push
push
xchg
stos
cmpl
test
pusha
mov
inc
add
subl
push
mov
inc
enter
shrb
mov
cmp
jmp
xor
jne
xchg
fcmovbe
jge
and
pop
cmp
mov
movd
add
or
lods
jle
repnz
dec
dec
pop
dec
in
mov
roll
xchg
add
pop
jmp
arpl
xlat
inc
xchg
push
push
add
rolb
add
dec
clc
add
in
fidivrs
int
and
mov
jnp
xchg
aaa
and
mov
add
inc
cmp
outsl
je
je
xor
adc
popa
push
and
stos
pop
ds
push
outsl
cmp
jb
fbstp
rorl
out
add
ja
add
lods
add
clc
jae
mov
adc
sbb
add
in
nopl
sub
lods
jle
iret
mov
inc
je
sar
mov
cwtl
repz
pop
mov
push
inc
sbb
jmp
jo
dec
pop
mov
push
nop
or
dec
loopne
clc
pop
out
sbbl
push
pop
pop
ret
fildl
or
or
andb
pusha
xchg
out
insl
call
aam
gs
pop
mov
dec
jnp
cmp
hlt
adcb
movsb
in
pop
or
js
inc
push
out
jb
mov
pushf
push
das
jmp
in
pop
mov
xor
lods
scas
pop
inc
xchg
mov
push
or
cmp
loope
pop
push
jbe
shlb
and
mov
push
lret
mov
loopne
inc
aam
and
fs
movsb
jbe
push
push
cmp
push
add
inc
inc
inc
adc
pop
jb
cmp
das
pusha
popf
adc
pusha
lahf
adc
out
shll
mov
or
or
aam
not
dec
ret
mov
je
sub
jl
jge
push
imull
pop
rorb
daa
pop
xor
push
cld
cmp
push
sarb
mov
push
push
mov
addl
mov
fisubrs
xchg
ja
add
jb
in
push
and
insl
add
jg
sbb
push
push
mov
cmp
adc
dec
adc
js
sbb
mov
movsl
or
cmp
and
jne
je
jmp
sbb
loope
or
push
dec
sub
loop
cmp
or
jns
sub
mov
sbb
clc
and
jp
pop
js
cmp
push
orb
add
push
pop
aaa
loop
xor
imul
inc
cmp
mov
inc
push
ficoms
and
fdivl
add
push
mov
dec
inc
fdivrl
and
push
or
gs
sbb
ret
mov
nop
pop
inc
sub
ret
movsl
pop
and
aaa
xchg
adc
push
inc
test
xor
pop
rcl
in
mov
sbb
or
je
cmp
sbb
out
shlb
mov
ds
sub
xor
subb
add
push
pop
in
es
pushf
jnp
jge
repnz
inc
imul
push
push
jge
das
lods
ret
adc
xchg
sbb
xor
fwait
pop
cltd
adc
or
xchg
cmp
push
inc
daa
dec
sbb
or
cmp
sbbb
xor
clc
ret
cmp
cs
insl
jno
sarb
les
xchg
orl
pop
sub
clc
xchg
jno
add
push
loope
fwait
adc
rorl
pop
xchg
js
jbe
adc
mov
jle
out
push
je
movl
push
jp
lahf
int3
inc
mov
mov
rorl
or
out
adc
inc
js,pt
inc
popf
xchg
popa
nop
repz
test
cmpsl
add
sbb
sub
mov
int3
add
or
cltd
xchg
cmpl
pop
xor
sbbb
cmp
fistl
mov
and
clc
jg
mov
test
movd
pcmpeqd
fsubp
sub
push
clc
jae
xor
test
xor
cli
rcl
lret
inc
test
mov
dec
les
clc
jge
repz
cmp
or
loop
popa
sbb
in
xchg
ret
adc
jnp
mov
testl
or
xorb
mov
and
mov
in
out
xchg
repnz
roll
add
mov
mov
jo
addps
int
mov
mov
fcmovb
sbb
sbb
inc
pop
jmp
movsb
cltd
in
shlb
sbb
jmp
das
jnp
ja
les
and
rolb
js
sbb
stos
les
xor
push
loop
mov
call
xchg
adc
pop
or
xchg
pop
clc
lods
cld
xchg
xor
out
or
ret
jge
adc
or
js
lea
in
imul
mov
sarb
testl
and
mov
outsb
dec
lock
add
adc
scas
nop
es
fisttps
jno
jl
scas
sbb
aam
mov
mov
cmp
pop
mov
divb
je
sbb
push
adc
inc
out
inc
adc
push
inc
inc
roll
mov
cmp
loope
jg
test
jo
add
cmp
jne
nop
adc
adcb
adc
adc
popf
dec
cmp
xchg
and
mov
pop
sbb
cmp
je
cmpsl
hlt
loopne
lock
mov
scas
sbb
call
mov
or
popf
mov
xor
in
push
lock
and
inc
pusha
cwtl
sub
imul
arpl
mov
das
stc
mov
xchg
jmp
push
or
inc
or
mov
push
loopne
push
pop
add
push
xchg
inc
cmpsb
lock
adc
aas
mov
mov
push
pushl
adc
adc
mov
push
inc
cmp
pop
xor
inc
loopne
push
call
sub
stos
push
inc
inc
ficoms
push
adc
mov
add
pop
and
andl
sbb
mov
pop
mov
inc
inc
cmp
cmp
pop
sahf
push
mov
push
pusha
add
push
lahf
leave
repz
xchg
dec
adc
in
xor
push
add
push
push
lret
push
add
es
or
les
roll
or
sahf
sub
adc
adc
mov
mov
cmpl
and
push
or
xor
inc
hlt
cmp
ds
repz
mov
add
mov
fnstsw
mov
cmp
xchg
adc
loope
shlb
dec
leave
sbb
or
or
inc
pop
cmp
inc
jo
sbb
lcall
inc
inc
cmp
aam
inc
mov
cwtl
sbb
sahf
je
add
jnp
rcrb
push
mov
movl
inc
ss
adc
sub
call
dec
jg
xchg
sbb
seta
pop
sbb
or
xcrypt-cfb
cmpsl
out
and
add
cmp
loopne
ret
push
js
sbb
and
jo
push
mov
shrb
jae
sahf
inc
jge
cmc
aad
leave
lret
and
int3
adc
and
inc
xor
push
and
sub
mov
rol
jp
push
sahf
push
push
cmp
ja
inc
xor
inc
cmp
mov
push
add
inc
cmp
jge
filds
movsl
incb
mov
test
movb
sbb
neg
mov
jge
outsl
inc
push
cli
or
add
jmp
or
mov
inc
jmp
mov
test
loop
or
cld
jb
out
cmp
add
test
mov
dec
mov
mov
dec
dec
mov
inc
push
or
push
repnz
ret
adc
push
test
mov
jo
add
jmp
cmp
inc
adc
arpl
jbe
cmp
pop
arpl
movsl
add
leave
mov
push
cmp
jb
lea
into
mov
mov
ficoml
or
add
aaa
out
mov
cld
jne
mov
push
cmp
jne
xor
repz
jne
call
in
or
or
iretw
jnp
icebp
jb
jmp
adc
push
dec
jmp
adc
icebp
cmp
iret
jmp
std
std
jmp
cld
cld
xor
in
int3
ret
pmaxub
leave
popa
adc
dec
jb
push
es
jp
movb
inc
and
repnz
hlt
or
and
xorl
push
inc
adcb
shll
or
testb
sub
add
test
or
dec
cmp
mov
popf
cmpsl
lock
inc
ljmp
push
dec
std
or
sbb
sbb
or
adc
cltd
dec
push
push
lcall
sarb
loopne
or
dec
sub
arpl
sbb
nop
cltd
cmp
jo
adc
into
insl
jne
imul
decl
jg
add
mov
mov
dec
sub
js
sbb
push
dec
andb
sahf
popa
nop
and
xchg
and
sbb
jae
push
xchg
mov
xchg
and
clc
fmuls
inc
push
push
pop
div
jb
push
pop
adcb
mov
cmp
clc
mov
shll
or
lods
pop
sbb
pop
adc
push
mov
add
pop
sbb
icebp
inc
add
sub
push
rolb
mov
jl
and
scas
add
push
arpl
and
xchg
or
mov
mov
mov
jecxz
inc
sub
sbb
push
ret
add
loopne
ljmp
sbb
adc
outsb
or
data16
jl
or
or
push
dec
loop
mov
cmpl
adc
rcl
dec
cmpsl
int3
je
fstl
call
inc
jmp
cmp
jne
orl
jmp
and
jne
sub
les
add
test
and
cmp
xchg
or
add
push
insl
fmull
mov
scas
repnz
orb
adc
or
int
adc
dec
add
add
lds
sbb
push
cmp
adc
lret
or
test
sbb
lret
sub
jmp
roll
je
mov
sub
cmp
ja,pn
xor
mov
pop
incl
adc
sbb
loopne
daa
movsb
or
adc
add
rcl
push
and
dec
test
push
je
mov
mov
push
inc
clc
push
mov
imul
add
inc
loop
mov
test
jne
test
jne
clc
cmc
sub
push
xorl
push
nop
cmp
sub
jbe
inc
testb
pop
push
add
je
xor
and
mov
push
into
mov
ret
inc
das
in
rolb
jmp
inc
xor
pop
pop
aaa
push
push
xchg
cmp
add
cmp
add
icebp
jmp
push
mov
fildll
xorl
sub
daa
push
push
std
push
push
pusha
loopne
stc
shlb
xchg
jg
loopne
data16
jge
stos
mov
daa
pop
add
mov
cs
xchg
hlt
mov
pop
sub
test
mov
jbe
setp
or
add
popa
and
push
loop
jne
idivb
cmc
sub
rcrb
adc
or
or
adc
sbb
rcrb
in
arpl
dec
cmp
popf
je
test
in
xor
push
adcl
shrb
icebp
mov
dec
sbb
adc
psrld
lret
addl
sbb
add
inc
out
sbb
es
push
bound
iret
call
push
jmp
xchg
sbb
add
pop
dec
adc
out
sbb
jno
lock
leave
xchg
int3
jl
push
dec
push
dec
pop
mov
clc
ja
inc
les
rcrl
cwtl
lret
ret
dec
or
fildl
jmp
and
js
or
es
pop
add
or
push
jo
adc
jb
rcl
sub
pop
jae
fwait
or
dec
pop
xor
jbe
jno
add
or
xor
and
or
or
or
adc
fidivs
sub
call
int
pop
push
sub
add
das
ror
loopne
je
inc
cmp
jb
lea
push
adc
push
xor
dec
mov
adc
mulb
inc
cwtl
or
xchg
icebp
xchg
xor
dec
es
orb
mov
es
loopne
mov
adc
popf
inc
fnsave
push
out
adc
xchg
js
push
or
sbb
adc
insb
xor
push
pop
fs
pop
pusha
mov
andl
ja
xchg
add
lcall
push
mov
pop
add
cmp
call
pop
sti
xchg
mov
cmpsb
cli
idivb
push
add
scas
fsubrl
popa
sbbl
xchg
and
mov
aad
push
and
and
ret
daa
xchg
add
xor
and
or
rolb
sbb
mov
loop
mov
inc
incb
sub
imul
cld
std
add
lcall
push
push
push
jo
outsl
shrl
imul
in
push
stos
mov
je
lahf
pop
shrb
dec
cmp
inc
mov
adc
stos
insb
insl
sbb
loopne
xchg
mov
push
shrl
pop
scas
adc
and
dec
fisubrl
cmp
popa
sti
out
pop
pop
lea
cmpsb
sub
insl
push
es
jle
push
push
sub
xchg
aad
push
popf
dec
loopne
jnp
sbb
adc
push
test
vmovupd
shr
popa
cmp
mov
pusha
jb
pop
add
pslld
and
roll
sti
xor
or
in
xor
repnz
fcompl
push
pop
or
and
pop
jecxz
push
jmp
and
inc
imul
xor
inc
mov
jl
pop
je
push
adc
inc
pushf
mov
ss
or
das
rcrb
push
out
mov
mov
cmp
mov
mov
mov
mov
jmp
xlat
xchg
xor
pop
fmuls
js
jo
fsubr
out
mov
out
add
cmp
jb
xor
mov
push
je
sbb
ss
jp
and
insb
insl
call
test
mov
cmp
je
cmpsb
fcoml
lret
ret
movnti
mov
clc
and
xchg
xchg
sub
les
lods
sub
jo
in
inc
test
add
xchg
mov
sub
xor
sub
jae
nop
add
pop
sbb
add
fscale
and
int3
jmp
mov
lret
mov
cld
fmull
lret
imul
dec
push
and
xchg
xchg
sub
add
lods
sbbb
and
test
xor
cmpsb
cwtl
add
or
pop
add
out
pop
mov
add
cmp
sub
push
inc
jne
mov
mov
sbb
je
push
jbe
dec
adcb
mov
adc
or
mov
sbb
push
mov
filds
out
xchg
push
and
lcall
xor
jae
sbb
xchg
xor
lock
inc
mov
cmpsl
cmc
sarl
and
dec
rolb
mov
into
or
out
scas
pop
sti
dec
add
pop
push
inc
int
test
adc
adc
add
mov
shll
adc
cmpsl
pop
mov
cmpb
jne
and
subb
xor
mov
sahf
fcoml
jle
push
sahf
andb
jnp
daa
lcall
mov
fwait
mov
jmp
rorb
mov
ffreep
aam
and
xchg
sbb
mov
mov
or
cwtl
dec
out
pcmpgtw
push
pop
jle
inc
sbb
pop
mov
cmp
je
movzbl
add
sub
xchg
adc
sub
lea
repz
pop
clc
adc
imul
inc
inc
sahf
xchg
add
add
add
adc
adc
and
out
mov
jle
add
seto
add
enter
push
test
sbb
pop
push
pop
sahf
dec
push
jns
add
or
or
sbb
inc
dec
or
inc
sahf
xchg
add
or
and
sbb
pop
or
in
lcall
lcall
add
xor
push
push
ja
and
and
push
rsqrtps
movsl
mov
pusha
adc
sub
adc
push
and
and
ds
add
adc
pop
adc
ret
repnz
adc
adc
adc
inc
fmulp
cltd
adc
add
sbb
push
push
push
pop
mov
sbb
out
rcrb
sbb
in
sbb
call
sahf
sbb
sbb
sbb
cmp
sbb
jb
sbb
add
repz
sbb
cmp
push
inc
push
lcall
iret
pop
pop
jne
add
add
sub
cmp
mov
addb
add
cmp
xchg
lea
mov
xchg
das
repnz
push
in
push
in
jno
repnz
sub
sarb
sarl
aad
cmp
inc
sahf
add
xor
out
pop
adc
push
push
add
push
repnz
outsb
call
adc
dec
dec
cwtl
jmp
sahf
xchg
sub
or
sbb
sbb
out
pop
insb
nop
cmpsb
in
in
in
cltd
mov
in
inc
in
sahf
inc
push
nop
addr16
out
jge
jae
inc
push
sbb
pop
lock
lock
pslld
in
repnz
std
repz
push
and
std
hlt
hlt
enter
rorl
pusha
hlt
fwait
mov
cmc
cmc
inc
jg
xchg
idivl
sub
clc
clc
aaa
jb
push
clc
cltd
adc
inc
jns
seto
lock
cli
cli
in
in
iret
sti
sbb
xchg
fwait
lret
cld
cld
cld
je
fwait
and
cmp
repnz
std
xor
sbb
enter
adc
ficompl
shr
rcrb
add
cmpsl
les
or
shll
ret
cmp
es
jecxz
inc
fsubp
add
sti
in
in
pop
adc
mov
stc
daa
xchg
sti
mov
or
out
out
cltd
push
jno
sbb
call
xchg
mov
or
jmp
jmp
jmp
sbbb
in
repnz
push
cmp
cli
out
out
scas
xchg
add
out
cltd
push
lock
cli
push
cli
dec
in
rcrl
psubusb
repz
sar
jb
pop
push
stc
jb
imul
fstpl
pusha
pop
xchg
cmpsb
div
negl
fwait
cmp
sbb
xor
add
stc
xor
xchg
out
clc
cmp
lret
sti
sti
and
sbbb
in
mov
or
xchg
pusha
sbb
jge
dec
and
adc
cld
sub
xor
pusha
loop
mov
repnz
mul
pop
shl
les
jg
push
push
cmp
out
imul
cltd
out
mov
inc
repnz
mull
testl
imul
ljmp
negb
mov
adc
mov
insb
out
out
lret
and
sub
inc
imulb
xchg
inc
pop
pop
and
add
lret
and
pop
pop
lcall
mov
cmc
inc
pop
dec
pop
jae
pop
dec
repz
div
jns
push
mov
add
add
int3
inc
clc
clc
jecxz
in
adc
popa
cmp
sub
cli
cli
jno
inc
pop
lret
xchg
hlt
pop
jne
and
sbb
das
pushw
data16
hlt
cmp
idivl
jo
sti
pop
pusha
orl
or
cmp
loope
gs
loope
push
mov
adc
loop
scas
repz
popa
leave
mov
test
xchg
cmpsb
in
repz
and
and
adc
xchg
pop
push
sbb
jmp
leave
and
mov
mov
sbb
dec
in
in
cmc
scas
adc
and
repnz
orl
sbb
mov
mov
add
divb
icebp
mov
inc
xlat
jb
test
dec
push
cmp
cmp
inc
jb
sbb
add
pushf
mov
ffree
lock
or
push
jno
imul
je
dec
push
lock
scas
inc
add
sbb
inc
repnz
fldl
ss
loop
ja
dec
lcall
jne
movsl
xor
cld
in
cmovno
push
add
add
mov
cmp
add
push
fwait
push
jnp
and
xchg
adc
jne
adc
add
and
add
sahf
and
jmp
jge
iret
xor
movsl
fsin
das
jmp
inc
add
push
dec
inc
ss
insl
mov
dec
sarl
push
mov
mov
sahf
out
inc
and
data16
xchg
inc
sahf
inc
mov
int
jns
xor
cmp
dec
add
jns
repz
cmpb
out
and
or
add
mov
mov
jnp
fs
fs
and
add
adc
push
inc
lods
clc
jle
rolb
test
sbb
filds
jb
test
mov
jae
or
je
int
imul
push
adc
shll
and
push
aad
push
mov
repz
mov
divb
sbb
dec
loopne
movsb
add
jge
push
or
test
jo
push
and
mov
es
aas
and
xor
cmp
lea
adc
lea
call
fcmovu
jo
fistpll
cmp
mov
mov
mov
and
add
pop
sub
cs
add
iret
sub
mov
repnz
or
add
roll
mov
test
or
sbb
pop
xchg
and
dec
mov
mov
and
push
add
mov
aad
lock
jle
xor
fxch
add
mov
pop
add
cmpsl
cld
mov
add
or
loopne
and
je
rep
mov
dec
or
cmp
ljmp
nop
in
pop
je
or
and
sbb
andl
movb
dec
add
sub
in
rcrl
out
aas
jae
loopne
nop
lea
faddl
push
jecxz
repnz
add
lds
xchg
imul
adc
sub
xchg
addr16
cmp
sar
add
fmull
imul
pop
aas
and
inc
inc
adc
cmp
frstor
enter
jbe
mov
mov
pop
inc
push
inc
lret
icebp
and
iret
pop
cmpsb
push
dec
orl
xor
jl
and
pop
sti
add
repnz
je
pop
sub
in
dec
roll
sub
inc
inc
push
jnp
sbb
cmp
enter
add
lock
mov
mov
and
ds
pop
cmp
pop
dec
aaa
je
cmp
lock
xor
and
sbb
fimull
pop
stos
add
clc
add
sbbl
xor
cmp
mov
or
and
adc
adc
stc
int
pusha
mov
sub
jl
shrl
ss
mov
push
adc
or
cmp
sbb
test
dec
outsb
out
jns
mov
sbb
bound
sub
pop
inc
mov
inc
add
nop
add
repz
dec
inc
mov
fucomi
add
cmp
dec
in
loopne
inc
add
jbe
push
pop
cs
pop
lret
clc
adc
enter
or
cmp
ret
jmp
sub
add
testb
out
fnsave
add
and
cmpsl
inc
push
mov
pop
fimuls
jne
aam
xlat
dec
icebp
adc
add
inc
adc
roll
sbb
cmpb
dec
xorl
cmp
notb
mov
adc
add
cmp
movsb
pop
push
sub
andb
lcall
out
dec
pop
pop
mov
push
pusha
fadds
arpl
call
daa
test
rep
and
add
es
mov
inc
arpl
fadds
enter
push
mov
lea
mov
dec
inc
stos
out
cwtl
and
mov
or
scas
adc
cmp
push
dec
add
lret
movl
imul
mov
jnp
iret
jnp
or
add
push
lock
iret
loopne
mov
mov
call
call
hlt
je
out
hlt
clc
clc
cld
insb
aas
inc
xchg
inc
lea
add
fnstcw
jmp
and
sbb
test
fcoms
sti
and
vpunpcklwd
xor
jl
cld
or
or
and
std
cld
out
rclb
addr16
neg
adc
jo
daa
stc
fsubrs
push
pop
nop
aam
mov
and
fiaddl
jl
outsb
dec
gs
out
add
sub
ret
out
push
add
nop
dec
dec
add
cmpsl
imul
ficomps
or
push
test
pushf
movsb
mov
aaa
sbb
sahf
out
sbb
sbb
out
sahf
out
adc
or
jns
or
inc
movsb
loop
or
push
call
pop
rclb
add
jp
cmpl
imul
jecxz
jg
fmull
mov
mov
incl
inc
decl
jne,pn
pop
pop
dec
dec
cmp
repnz
in
ljmpw
xor
jbe
push
cltd
pop
idiv
dec
mov
pusha
or
push
or
idivb
and
aaa
dec
mov
mov
xor
jmp
leave
enter
cmp
jae
dec
out
lods
adc
callw
mov
jbe
adc
xor
mov
dec
or
test
mov
mov
pop
sub
ret
ret
hlt
add
cmp
je
ja
mov
push
xchg
lods
dec
sbb
add
test
sub
mov
sbb
dec
dec
je
dec
push
pop
push
push
stos
or
mov
lcall
pop
insb
adc
dec
repz
push
dec
repz
xor
pop
decb
push
out
lret
cmp
push
xor
xchg
sbb
push
das
sbb
popa
add
inc
add
mov
and
inc
xor
mov
test
push
pop
add
sub
jae
push
pop
push
test
adc
fisubrl
pop
jecxz
mov
inc
sbb
push
sbb
ljmp
cmp
js
clc
push
imul
sub
insl
or
aas
jge
mov
push
cltd
pop
idiv
fwait
mov
ret
push
xchg
es
xor
cmp
dec
adc
popa
cwtl
sbb
jmp
shrl
sbb
jle
add
aas
mov
fs
cld
adc
fs
lods
pop
sub
jmp
jl
mov
sbb
shll
or
or
pop
insb
sub
sbb
sbb
and
and
dec
jae
adc
jbe
addl
add
insl
aad
jns
adc
cmp
or
add
sarb
pop
sub
loopne
nop
inc
jp
jno
inc
xor
sub
cmp
mov
cmpsb
push
mov
in
push
pop
xchg
push
cmp
mov
jge
pop
je
sbb
nop
cmp
jl
fs
std
mov
xor
decl
lret
jno
mov
mov
dec
rcrl
pop
je
mov
inc
add
dec
jne
mov
gs
out
shl
xor
stos
cs
lretw
push
sub
inc
sub
lcall
pop
popl
or
xchg
mulb
pop
es
insl
xchg
xchg
inc
scas
sub
xor
inc
jns
xchg
pop
stc
pop
push
stos
add
adc
lcall
inc
insl
jmp
push
pushf
test
pop
add
inc
adc
and
sbb
and
mov
push
sahf
je
lods
mov
mov
xchg
ret
add
sbb
xchg
adc
dec
sub
dec
jge
loop
clc
dec
sbb
sub
push
cld
mov
lock
aam
loopne
idivl
adc
or
out
xchg
in
jns
add
mov
push
aas
out
std
pushl
jbe
dec
ljmp
lcall
mov
rolb
jg
loope
xor
push
pop
mov
push
push
mov
lock
and
in
adc
icebp
sub
add
fadds
pusha
decl
inc
jg
hlt
pop
push
or
dec
gs
mov
cwtl
insl
xchg
and
sub
in
pop
mov
fdivl
clc
mov
mov
inc
inc
cmp
je
xchg
sbb
fs
xorb
adc
add
test
mov
jle
dec
je
popa
sarl
xchg
out
push
imul
add
mov
add
mov
incl
fdivr
lods
cltd
dec
dec
push
fcoms
inc
sbb
loope
or
loopne
xor
int
inc
dec
lret
pop
sbb
or
neg
lods
mov
push
lret
mov
or
inc
add
or
add
lret
mov
das
dec
push
sbb
and
stos
popa
mov
add
movl
or
mov
lret
insl
insb
js
xor
ret
cmpsb
icebp
rclb
test
lock
sbb
daa
je
mov
lock
mov
idivl
mov
dec
imul
sbb
adc
push
pop
inc
int
or
jb
fs
add
je
pop
add
dec
add
frstor
test
cmovs
push
xchg
xchg
addr16
sbb
mov
add
fildl
adc
pop
fcom
pop
addr16
iret
add
shl
lea
popa
bound
jl
and
jmp
dec
or
fadds
push
jmp
das
dec
jmp
popf
push
nop
push
dec
sbb
pop
into
sub
mov
jo
orb
mov
bound
in
sbb
push
in
dec
ret
pop
xchg
rol
in
scas
test
push
xchg
inc
mov
or
gs
mov
mov
sbb
dec
sbb
and
inc
shl
clc
jne,pn
outsb
xchg
cmp
je
mov
gs
loopne
jne
mov
imul
mov
andb
rorb
mov
sbb
stos
inc
sarl
and
ja
mov
addb
and
inc
inc
dec
xor
pop
mov
xor
or
movsl
shll
movsb
cltd
pop
add
jne
ficoms
clc
xor
sbb
testl
pusha
js
imul
es
inc
jmp
aas
xchg
xchg
pop
cmpsb
jno
adcl
lahf
jmp
or
sbbl
jne
add
mov
add
add
aam
pop
and
xchg
cmp
lahf
pusha
jmp
xchg
imulb
push
add
sub
dec
and
sbb
jmp
icebp
rep
mulb
pop
mov
ret
hlt
sbb
adc
inc
cltd
add
inc
test
loopne
inc
loopne
outsb
jecxz
jecxz
stc
push
dec
xor
jle
mov
add
xchg
jmp
pop
arpl
xchg
push
jno
rolb
rorb
xchg
fs
mov
pop
jge
pop
lret
fstps
inc
add
xorl
mov
lock
movsb
and
lods
or
adc
orb
cmp
or
sub
in
dec
mov
roll
cmp
shrl
scas
mov
js
adc
push
pop
dec
dec
cmp
jge
and
or
mov
add
loopne
popa
out
push
push
repz
movlps
fdivr
bound
shll
sbb
in
loopne
xor
call
add
sbb
into
gs
clc
ret
adc
in
stc
xor
popf
cmpsb
mov
fistps
int3
or
pop
xchg
xor
push
aam
or
xor
std
push
aam
push
cmp
xor
enter
fucomi
in
push
mov
jmp
mov
xor
cltd
mov
or
pop
sahf
std
into
das
add
data16
mov
and
test
push
add
sbb
adc
adc
imul
popa
jbe
in
mov
push
push
sbb
xor
jo
arpl
imul
cmp
lea
imul
jmp
sub
xchg
adc
loopne
rol
adc
adc
sbb
fsubr
jge
cmp
loopne
or
cwtl
adc
movq
imul
subl
ja
jbe
adcl
or
ds
mov
fistl
sbb
ret
sub
push
dec
mov
or
jp
subb
cmpsl
dec
pop
mov
mov
jg
adc
dec
sbb
pop
lcall
mov
mov
cmp
push
pop
xor
rclb
rcrl
je
pusha
cmp
call
insb
cmp
in
lock
mov
xor
mov
mov
sbb
jmp
jl
push
mov
sub
push
incl
mov
jnp
sub
sub
test
mov
jnp
xor
or
lock
ss
in
fnstsw
add
ret
hlt
popa
adc
dec
les
jb
xor
mov
adc
jecxz
cli
mov
int
push
lea
loopne
cmp
dec
loope
fisubrl
and
xacquire
xchg
inc
lock
mov
add
xor
push
pusha
add
mov
arpl
je
add
iret
imul
ljmp
mov
cmpsl
fildl
mov
stos
push
sbb
mov
imul
sti
sbbb
add
lods
push
mov
dec
xchg
arpl
js
es
xlat
test
mov
call
cmp
fdivrs
adc
and
add
push
cmp
and
sbb
aas
add
ret
jne
cmpl
push
bound
push
add
add
aas
int3
call
call
ficompl
call
and
dec
sub
push
pop
test
or
push
daa
sbb
mov
mov
lods
lret
insb
jl
loop
fcompl
pop
sub
xchg
or
xor
and
mov
push
or
add
lahf
xchg
sbb
dec
push
push
dec
out
lods
cmp
add
inc
mov
in
pop
test
push
movl
cmp
xor
mov
dec
inc
sarb
ds
popa
movsb
add
mov
cli
adc
loope
orb
xchg
push
mov
mov
loopne
lock
roll
pop
and
mov
jp
lret
cld
sub
push
shlb
or
or
mov
les
adc
or
sub
add
daa
adc
inc
sbb
xchg
lret
fbld
rorl
jae
cmc
jle
shl
or
and
fmuls
ret
mov
or
aas
pop
sub
mov
inc
dec
jne
int3
repz
mov
bnd
shlb
lea
add
call
test
in
inc
cmp
fdivrl
cmp
ret
ljmp
pop
mov
movb
insb
ret
out
and
adc
xchg
and
mov
push
sub
hlt
xchg
or
add
dec
xchg
pusha
xor
jge
cmp
ficoml
push
push
ja
adc
aaa
popa
sub
js
lcall
push
add
pop
inc
inc
cld
push
or
and
cld
xchg
orb
mov
mov
movsb
lods
jmp
and
je
and
mov
pop
outsb
adc
aad
jmp
mov
dec
inc
xchg
mov
lods
leave
sub
mov
cmp
xor
and
sbb
lret
test
ret
jae
ljmp
jmp
add
cld
xor
pusha
ret
inc
mov
adc
mov
jg
insl
pop
mov
ja
inc
add
inc
xchg
pop
push
pop
inc
lods
add
xor
or
lret
clc
xlat
xchg
lahf
cmp
cmp
push
add
dec
cmp
pop
mov
push
cld
inc
rorb
mov
or
add
pop
fstpl
push
xchg
into
shll
faddl
jb
jns
inc
cmp
std
jne
loopne
das
sarl
jmp
sub
stos
pop
mov
jmp
mov
sarb
inc
add
inc
and
sbb
mov
add
cmp
mov
mov
or
xchg
add
lock
out
into
std
fisubl
push
dec
mov
cmp
dec
bound
push
add
xchg
jbe
and
xor
inc
push
sub
mov
xor
mov
jb
push
call
inc
adc
scas
in
lea
mov
inc
ret
jp
push
inc
pop
leave
inc
pusha
aad
cli
stc
bound
leave
xor
cmpsl
mov
aaa
jmp
mov
into
sub
mov
fs
test
out
mov
cmp
cmpsl
add
inc
ljmp
in
bound
outsb
incl
xchg
rcr
add
jb
mov
xor
sub
push
les
mov
pop
mov
mov
inc
mov
inc
inc
inc
dec
jne
mov
inc
mov
ds
xchg
add
shll
incb
loop
push
inc
push
mov
or
dec
jne
adc
movsb
mov
div
xchg
or
jmp
outsl
ret
loop
cmp
or
push
call
out
inc
inc
and
iret
mov
xor
mov
or
and
mov
aam
sub
inc
sub
loopne
mov
lret
push
lret
jge
xchg
arpl
or
inc
adc
nop
insb
cmp
and
sub
xlat
cli
dec
test
xchg
mov
mov
pusha
shll
and
fs
into
xchg
fstpt
or
insb
sbb
pop
xor
enter
clc
jle
lret
pop
sub
jmp
xor
push
inc
mov
mov
xor
add
sbb
ss
push
out
rcl
pop
arpl
xchg
jno
jne
pop
sbb
bound
insb
mov
lcall
in
push
inc
and
dec
pop
add
aam
jp
leave
cmpl
in
push
and
pop
movl
mov
dec
jnp
or
fcompl
push
sbb
ss
sbb
loopne
pop
pushl
xor
xor
mov
sbb
das
adc
sbb
sub
int
mov
pushf
subb
and
rcrb
cwtl
rorb
addr16
aam
pop
cmp
xorl
inc
in
repz
out
jle
or
iret
mov
clc
push
sbb
fs
lods
adc
mov
cmp
xchg
inc
add
bound
mov
jne
sbb
xor
in
inc
mov
scas
add
xchg
ljmp
add
jb
sub
aaa
cmpl
mov
pop
ret
movaps
idivl
sbb
or
dec
add
rcl
int
and
dec
xor
xchg
jo
aam
sub
inc
testl
shl
or
pop
in
sbb
jns
inc
in
icebp
pop
jbe
xchg
mov
lock
loope
test
sub
xor
add
bound
data16
rcll
adc
ficomps
jno
pop
sbb
aam
sbb
and
push
push
pop
loopne
cmp
rol
sbb
mov
ret
mov
arpl
cmp
inc
sbb
inc
mov
push
add
and
ss
stos
add
sub
cs
fwait
mov
lret
call
pop
sbb
cwtl
cmp
shlb
inc
nop
loope
imul
jbe
inc
mov
xor
mov
mov
jbe
cs
xor
pop
test
inc
cmp
dec
and
aam
xchg
pop
xor
cwtl
and
sbb
push
xchg
insb
out
jne
insb
push
cld
push
jo
andl
cmp
addl
test
jecxz
mov
movsb
xchg
push
test
cmpsb
popf
cmpsl
in
cld
mov
xchg
test
insb
jg
pop
flds
xor
cmp
outsl
mov
dec
sub
push
push
xchg
addr16
push
add
sub
movsb
and
xor
push
push
movsb
pushf
nop
fisubrl
jge
push
and
jae
orl
loop
xor
fimuls
xor
not
movsb
lcall
iret
adc
sbb
jne
or
jmp
and
jb
pop
rcrb
sub
cmp
jb
pop
inc
inc
dec
sbb
xchg
and
mov
push
in
cmpsb
ud0
push
dec
jbe
lcall
jmp
jbe
and
pop
cmp
je
ja
icebp
lret
jle
or
mov
xchg
mov
sbb
test
add
orl
adc
jp
rcll
lret
cmp
ljmp
gs
sbb
jmp
jbe
mov
int3
xchg
es
adc
iret
cmpsb
and
daa
test
es
ja
dec
orb
ja
mov
aad
mov
xchg
mov
xchg
xchg
lret
push
inc
mov
and
mov
mov
gs
xchg
sub
scas
dec
mov
nop
and
xor
xchg
add
das
inc
adc
mov
dec
das
jns
add
mov
mov
lea
mov
das
mov
cmp
xor
push
fimull
loopne
fcoml
jg
push
mov
mov
clc
or
pop
pop
popf
enter
shrb
pushf
popl
jp
pop
add
sarl
hlt
aaa
dec
cld
adc
sub
mov
pop
xchg
mov
add
dec
in
fdivs
pop
setg
inc
std
xchg
nop
pop
sbb
shlb
cmovo
push
js
jmp
jge
imul
test
mov
das
mov
fildl
xchg
add
insb
or
daa
jbe
jmp
mov
shlb
es
mov
sub
js
daa
nop
adc
aam
call
sub
aas
push
push
jb
inc
loop
jle
aam
outsb
sub
push
aam
xchg
out
jns
testl
cwtl
jno
inc
dec
jl
mov
lahf
xlat
inc
loope
push
jmp
jg
push
adc
pop
jo
dec
cmp
pop
mov
test
test
sarb
or
jb
xorb
jns
mov
and
sub
xor
and
jns
inc
dec
push
sbbb
pop
add
or
lahf
cwtl
lods
sbbb
cltd
lea
adc
arpl
test
mov
pop
loop
push
push
cs
push
jl
test
bound
mov
jmp
jge
pop
call
movl
test
cld
cli
dec
mov
or
idivb
loop
dec
cmp
subb
jge
inc
mov
neg
test
int3
mov
int3
stc
adc
test
push
cmp
jo
movsb
data16
inc
sbb
add
cli
and
and
mov
stos
and
add
cmp
jb
lea
addl
inc
mov
xchg
out
and
js
sbb
and
test
fwait
xor
or
orb
adcb
call
cmc
je
into
dec
push
add
cmpsl
or
nop
push
dec
push
add
ljmp
or
daa
adcb
jge
jmp
xor
push
add
inc
or
pop
and
push
movl
add
jmp
adc
rol
xorl
xor
inc
jbe
xchg
sbbb
je
xor
xor
cmp
or
jecxz
sbb
in
xchg
enter
outsb
cmp
cmp
popa
xor
out
loop
and
xchg
xchg
pop
cmpsl
loope
aam
mov
push
sub
loope
divb
jle
popa
xor
test
ja
enter
lock
call
sub
loopne
mov
mov
lret
fdivrs
idivb
and
out
sbb
and
imul
adc
mov
push
inc
mov
sub
pop
sub
and
adc
jno
cld
adc
cmp
mov
pop
loopne
mov
loope
adc
add
xor
test
test
mov
mov
xchg
cmpsb
lea
inc
lret
sub
sbb
lea
inc
cmp
lea
add
test
push
mov
pop
cmp
jne
int
jo
mov
jmp
inc
and
cmp
or
cmp
jmp
dec
sbb
push
dec
rorb
incl
and
sub
dec
in
xor
inc
ss
shrb
popa
add
push
push
cmp
mov
push
addl
mov
pop
test
dec
loopne
or
push
dec
or
test
sub
sbb
aaa
jecxz
sub
sub
push
out
test
insb
test
lcall
inc
cltd
adc
inc
xchg
jne
jbe
push
inc
loopne
jo
pop
mov
test
in
add
jbe
or
inc
ret
in
ja
std
sub
cld
loopne
divl
in
xchg
inc
or
xchg
stos
mov
mov
dec
xchg
into
jmp
sbb
sub
mov
ljmp
jns
or
mov
push
and
loopne
in
adc
add
add
inc
pusha
jp
mov
dec
sub
and
loope
popa
mov
repz
or
mov
add
push
mov
fstpl
inc
inc
add
mov
shr
rsqrtps
and
out
sub
repz
or
mov
orl
rorl
add
mov
pop
mov
mov
sbb
adcb
push
push
jg
sbb
mov
or
nop
xor
scas
jno
dec
sti
sub
or
lods
mov
cmp
ret
cmp
jne
xor
mov
inc
add
cmp
push
sbb
rcrb
cs
leave
movzwl
test
in
or
pushf
xchg
mov
ret
mov
sbb
or
mov
imul
test
outsb
ficompl
jl
dec
icebp
mov
fcmovnu
and
test
push
clc
add
mov
sbb
cmc
pop
mov
out
xchg
inc
jb
mov
cli
mov
or
clc
fsubs
mov
sub
dec
or
je
or
sbb
mov
adc
in
fldpi
pop
or
add
cmp
dec
sbb
mov
adc
adc
ret
mov
adc
negl
jnp
data16
mov
out
xchg
rorl
lea
sbbl
ja
movsl
mov
mov
dec
es
out
or
in
sbb
jae
adc
je
or
inc
insb
je
xchg
loopne
push
lock
test
outsb
loope
insb
cmp
jbe
sub
sub
adc
mov
mov
pop
or
xor
in
in
mov
dec
xor
jns
xor
gs
mov
or
imul
int
cmc
jne
js
dec
xor
loope
xlat
je
push
mov
push
loopne
mov
push
jbe
mov
andl
rorb
push
sbb
jle
inc
je
sub
sahf
adc
or
add
ds
mov
push
xor
mov
fdivr
popf
push
mov
test
fsts
dec
nop
and
nop
push
xchg
iret
jae
testl
jl
aaa
jne
jo
cmc
mov
adcl
pop
shrb
and
in
pop
and
xchg
or
sbb
xchg
push
mov
sub
in
sub
xor
mov
add
imul
leave
add
push
insl
cmp
xchg
xor
hlt
xor
negl
imul
push
dec
sbbl
ss
mov
ds
pushf
add
mov
fucomip
mov
push
mov
pushl
adc
les
add
setp
add
pop
jno
mov
inc
mov
add
mov
cmp
xor
add
cwtl
ret
out
cmp
clc
pushf
mov
out
test
pop
sub
sub
lods
insb
cli
add
add
sbb
addr16
pop
loope
mov
clc
outsb
je
test
fwait
sbb
enter
int3
dec
aas
add
xor
cs
add
test
push
jo
fisttps
movsb
or
add
les
dec
dec
push
sbb
adcb
jmp
pusha
pop
fstl
into
ret
jg
jne
jmp
dec
sti
mov
jne
mov
jmp
cmp
jle
sahf
jecxz
popf
insl
cmpl
dec
or
mov
scas
cwtl
mov
adc
push
mov
movsb
mov
xchg
xor
adc
imul
mov
mov
xchg
sbb
xchg
lea
stc
mov
push
pop
test
roll
sbb
dec
out
aas
nop
addb
add
popa
stos
inc
adcl
add
push
enter
mov
lret
out
addr16
decb
mov
test
pop
je
in
jecxz
movsl
loope
js
pop
data16
push
cmpl
lret
mov
jne
sub
push
and
inc
push
cli
mov
imul
or
test
int3
je
cltd
nop
rorb
add
ss
jl
cmp
pop
inc
jae
adc
fiaddl
mov
jecxz
nop
pop
xchg
inc
xchg
push
jge
inc
sbb
dec
div
dec
sbb
lret
pop
mov
or
jne
and
lea
or
ja
xchg
push
inc
je
mov
xchg
icebp
fwait
aam
push
jae
mov
loopne
adc
cmp
push
nop
xchg
clc
sahf
fsubrl
incb
lret
mov
dec
jmp
pop
xchg
sub
inc
pop
cmp
push
cmp
add
inc
les
cmpb
shlb
fisubs
sbb
cmovl
stos
loope
or
jp
inc
fldcw
test
repz
ftst
mov
sti
add
sbb
sub
icebp
int
jg
push
jmp
sub
sub
push
test
xor
sub
cmpsb
and
and
aam
cltd
sub
sub
push
hlt
or
pop
shl
push
jp
cmpsl
inc
push
ja
dec
fdivrl
fsubrl
lea
aad
popa
sarb
adc
imul
xor
push
fadds
stos
mov
jne
jno
mov
lock
cmp
push
lcall
sub
loop
nop
popa
jle
sbb
mov
sbb
add
cmpsb
lret
or
lea
push
or
or
push
and
mov
jl
testl
push
xchg
sar
push
or
adc
daa
pop
mov
mov
dec
insl
mov
mov
add
jbe
sub
movsb
cmp
adcb
js
fists
test
mov
and
test
mov
lret
dec
repz
mov
xlat
ss
cmp
or
push
mov
inc
addr16
test
add
mov
scas
inc
mov
push
mov
pop
cmp
pop
sbb
pop
and
decb
cmp
push
pop
test
ret
repnz
cli
or
adc
ja
and
rolb
js
lcall
mov
add
cmp
movsb
nop
add
jb
push
sbb
or
push
js
inc
jl
push
pop
ror
fstl
push
aas
out
data16
xor
xor
add
mov
rol
jle
jge
inc
lods
adc
test
shl
xchg
test
popa
cmp
ss
fsubrl
outsb
push
popl
dec
or
jmp
addb
push
cmp
js
nop
sbb
adc
cmpsb
inc
lahf
imul
adc
sbb
adc
aad
scas
inc
arpl
adc
inc
orb
jo
jp
adc
data16
ss
mul
push
dec
jne
dec
jbe
push
or
and
imul
add
jmp
add
mov
jb
dec
sbb
rclb
push
sub
jns
pop
inc
jo
es
sub
cld
shr
mov
imul
mov
inc
int3
clc
rclb
insl
push
dec
or
jbe
sar
lahf
push
xor
mov
ljmp
imulb
inc
cld
pushl
sar
dec
cmp
jbe
push
pop
mov
arpl
or
subb
jae
mov
shr
lea
ljmp
pop
mov
mov
sbb
adc
mov
xor
mov
push
dec
pop
add
cmpsb
mov
ljmp
or
jbe
inc
inc
ret
jmp
inc
lods
mov
add
push
popl
std
pop
shlb
and
sti
add
cmp
cmp
cmp
jle
mov
imul
and
cmp
je
insb
jno
mov
cmp
shr
testl
add
xor
fbld
dec
cmp
das
mov
sub
push
jle
pop
dec
add
cmpsb
gs
push
jle
jmp
das
and
outsl
outsl
test
mov
mov
inc
adc
dec
xchg
jns
or
dec
pusha
mov
fs
ret
std
mov
inc
mov
mov
mov
pop
lock
call
inc
dec
or
jmp
jns
jbe
dec
adc
cmp
jl
lea
mov
cld
enter
fstpt
adc
and
sbb
pusha
sub
cmpsl
inc
sbb
aas
mov
or
loope
add
scas
jp
push
call
aas
mov
imul
gs
push
or
add
andl
inc
mov
dec
adc
add
imul
cmc
and
pushl
push
push
sub
lea
and
mov
mov
fildll
enter
imul
insl
pop
jl
xchg
aaa
sub
cmp
or
mov
pop
or
das
mov
inc
inc
mov
cmp
jne
sbb
mov
outsl
push
scas
cmp
lea
outsl
js
add
movsl
addr16
negb
xchg
test
or
lcall
dec
stos
xchg
push
stos
xor
push
sbb
test
push
and
ds
jmp
orl
add
insl
add
pop
or
pop
push
mov
ret
insl
pusha
shlb
icebp
movsl
add
rolb
mov
imul
mov
rorl
or
hlt
or
cmpsl
bound
idivb
int
add
mov
xchg
xchg
movsl
sbb
cli
ja
sub
shr
paddb
sub
dec
clc
incl
jge
inc
int3
or
adc
out
xlat
fnsave
xchg
inc
cld
lock
call
movsl
lock
jne
jne
je
clc
add
orl
sub
cmp
sahf
inc
bsf
jge
inc
inc
mov
lock
cmp
inc
jne
jo
ljmp
ljmp
andl
or
adc
pop
xchg
adc
sub
and
pop
mov
rolb
pusha
dec
cmp
out
or
adc
lock
jno
ret
int3
inc
xchg
fnstcw
repz
movhps
rcl
gs
push
mov
int3
push
cmpsb
add
pop
xor
mov
xchg
inc
stc
sbb
clc
notb
nop
es
add
cmp
inc
or
lcall
add
push
jns
add
add
repnz
jg
push
movsl
adc
pushf
sar
dec
mov
xor
mov
hlt
lea
mov
pop
jg
or
mov
lcall
pop
shlb
sbb
es
movsb
iret
js
and
inc
mov
js
test
inc
test
imul
or
insb
xor
inc
mov
and
inc
and
clc
jl
or
sub
or
mov
sub
pop
xor
push
sar
dec
shlb
pop
and
dec
clc
adc
cmp
dec
xchg
xor
dec
je
fbld
mov
fadds
roll
ja
dec
ficoms
add
mov
loope
lea
mov
pop
ret
mov
mov
mov
push
cmp
sub
bswap
mov
push
cmp
rdmsr
sub
jns
dec
dec
fcmovbe
add
add
add
js
xlat
add
pop
and
loopne
push
inc
cmp
push
push
push
jge
or
out
adc
mov
or
in
or
lock
stos
dec
or
or
and
and
or
jne
add
mov
cmp
jb
push
jne
mov
addb
jne
jmp
jnp
add
push
xor
aaa
outsl
add
push
sub
testl
addr16
xor
sub
pop
lcall
cmp
je
mov
mov
mov
in
cli
and
xchg
xchg
scas
inc
mov
dec
pop
cwtl
rcrl
jne
mov
and
cmp
inc
sub
nop
and
out
in
stos
jp
repz
mov
and
jns
jle
jne
mov
push
pop
outsb
leave
inc
test
push
mov
sahf
inc
push
pushf
mov
sub
icebp
push
lock
and
mov
dec
add
dec
push
dec
xchg
sbb
iret
push
cmpl
sahf
cmp
pop
and
jo
push
decb
jp
adc
jne
mov
sub
cmp
jp
mov
dec
pusha
dec
bound
dec
push
and
push
clc
into
xor
ds
sub
jp
fidivrs
mov
inc
mov
or
mov
or
ss
pop
cmc
push
or
dec
cld
or
pop
add
push
push
push
mov
seto
or
sub
fisubrl
dec
adc
add
in
xchg
mov
and
lods
test
lea
ds
or
jne
cmp
jp
push
ds
xor
js
push
leave
xchg
repnz
cmp
cmp
loopne
or
or
pop
or
jae
add
add
and
add
inc
mov
push
push
das
cmp
jg
push
mov
test
inc
sbb
into
pop
imul
and
mov
pop
push
add
test
push
push
call
addl
inc
popa
pop
cld
in
cmp
cmp
sub
add
push
mov
dec
push
mov
fidivs
xchg
pop
test
repnz
jae
fcoms
adc
push
out
addl
push
mov
inc
add
push
and
add
popf
mov
dec
jo
pop
fsubs
lahf
pushl
adcl
push
popa
push
divl
ret
daa
xlat
out
pop
jne
push
imul
pop
mov
pop
mov
push
les
loope
arpl
xlat
push
fadd
inc
mov
js
shl
inc
push
or
pop
mov
jge
lds
les
sub
pop
call
mov
lahf
outsb
push
fldt
int
inc
mov
add
sbb
sbb
jg
xor
pusha
cmp
jle
inc
je
inc
inc
push
add
jge
jne
daa
into
sub
aas
xor
and
shrb
jae
nop
xchg
adc
lods
sub
lahf
cmpb
mov
call
dec
aam
hlt
mov
add
mov
push
inc
xchg
cmp
jecxz
nop
xchg
arpl
mov
fcoms
adc
call
lock
jmp
jl
loopnew
imul
lods
mov
into
je
push
and
loopne
mov
jle
cld
rorl
subb
test
scas
mov
xor
jl,pn
adc
pop
mov
add
sbb
xor
loopne
and
movsb
mov
add
xor
adc
sbb
cmp
cmpsb
insl
push
ret
pop
add
lods
sbb
sbb
xchg
arpl
stc
fsubrl
mov
pop
rol
lea
add
leave
sub
nop
fistl
repnz
sbb
fidivrs
add
mov
inc
sahf
push
inc
pushf
fistps
xor
adc
sbb
pop
and
popf
mov
or
adc
and
sbb
or
cmp
lcall
xor
and
loope
adc
and
les
std
xchg
push
lcall
aaa
int
ret
test
shll
enter
cltd
mov
xchg
jp
sbb
inc
call
xor
test
sub
aaa
push
xor
or
dec
lahf
call
enter
sub
inc
cs
xor
inc
call
and
pushf
cmp
test
xchg
in
scas
dec
outsl
and
call
push
pusha
xchg
enter
mov
mov
repnz
adc
fimuls
cld
fwait
push
stc
inc
cmp
inc
pop
mov
push
test
lret
add
xchg
mov
shll
and
call
pop
in
cwtl
sarb
push
push
hlt
xchg
xchg
push
lods
movsb
xor
add
sbb
xchg
cltd
add
xor
xor
call
in
or
mov
mov
xor
cltd
in
rolb
mov
out
loop
in
sbb
pop
xor
or
les
test
popa
mov
mov
icebp
adc
xchg
xchg
cmp
lcall
pop
sub
or
add
mov
cmpsb
imul
xor
daa
movsl
es
inc
mov
ss
jmp
sub
mov
nop
jo
pop
push
dec
lea
xor
add
cltd
lret
scas
lret
mov
mov
xchg
ret
test
loope
jne
sub
or
movsb
je
sarl
push
loop
adc
dec
xchg
push
xor
mov
popa
pusha
fwait
and
jo
or
scas
mov
lods
loopne
xor
lods
das
mov
testl
sub
lea
xor
push
push
lods
dec
adc
push
inc
cwtl
xor
mov
push
xchg
lea
aaa
cmp
add
add
add
fwait
push
cmp
and
sahf
shll
xor
adc
push
xor
icebp
bound
xchg
mov
lock
movsb
hlt
add
xchg
iret
insb
je
fadds
mov
out
push
fisubrl
add
add
jnp
dec
into
mov
dec
add
mov
lock
add
add
mull
or
pop
call
pop
inc
add
std
imul
cmp
aaa
inc
cld
push
add
adc
inc
push
add
rolb
enter
shr
add
or
movsl
push
das
fdivs
test
int3
icebp
mov
lret
int3
and
not
and
sbb
mov
pop
sarl
sub
add
dec
pop
inc
dec
shll
cli
sti
cld
std
mov
xor
dec
inc
inc
and
xorl
sub
xchg
mov
cmpsb
inc
lret
je
xchg
lods
shlb
add
dec
fisttpl
sub
sbb
dec
inc
fisubl
add
dec
in
inc
je
dec
je
push
or
pop
imul
insb
inc
fmul
fcmovu
pusha
jl
mov
pop
loopne
xor
mov
fldl
or
fldl
or
sub
mov
icebp
movsb
jge
repz
push
xchg
neg
mov
leave
pop
jmp
jo
fbld
in
push
dec
pop
mov
mov
cmp
das
cmp
lcall
je
dec
je
add
and
sbb
imul
adc
shl
sub
test
cmp
fcomps
mov
fstps
pop
or
mov
jmp
rcrl
addr16
pusha
stc
fwait
add
inc
add
jno
jns
lock
lret
xchg
adc
inc
mov
cld
lock
hlt
pop
pop
xchg
idivl
in
pop
push
call
lock
fstl
push
and
sbbb
lock
aad
ret
adc
das
and
inc
lock
cmp
pop
repnz
sti
push
add
sarl
or
mov
ds
jns
xchg
mov
aaa
inc
push
dec
andl
add
shll
jmp
fnstcw
cmp
inc
inc
or
loop
in
dec
push
lods
lock
insb
leave
fs
sub
hlt
lods
push
loop
push
ds
xchg
jle
pop
and
sbb
sbb
jnp
push
inc
or
aas
inc
fidivl
push
xchg
jmp
inc
fsubr
mov
ret
add
fstl
popa
push
jmp
test
add
pop
push
inc
jp
addl
cmp
and
ret
and
push
push
adcl
out
jle
out
xchg
or
add
test
loop
jo
xchg
xchg
fldl
pop
mov
mov
jb
pop
cs
call
xor
mov
lods
std
mov
testb
jne
xchg
mov
pop
sbb
xor
lock
pop
add
gs
cmpsl
sar
testb
jne
dec
sbb
pop
sar
std
in
xchg
mov
dec
ret
and
inc
scas
add
cmp
inc
mov
nop
mov
adc
mov
pop
movsb
inc
or
aas
popf
xor
shlb
and
pop
ds
ja
movsbl
inc
xchg
jl
pop
push
xchg
std
lods
and
fmuls
mov
leave
rorb
mov
jb
shl
cwtl
inc
pop
enter
into
movsbl
push
dec
scas
push
pop
or
add
or
xor
add
clc
sub
mov
cmp
inc
test
lods
in
stc
or
popa
cmp
lea
sbb
lods
es
gs
call
insl
and
insb
xchg
mov
push
cli
fldt
dec
lods
pop
call
push
inc
sub
aad
pop
and
sbb
call
jne
xchg
lret
testl
xor
mov
pop
inc
bound
sbb
cmp
push
int
xor
cmpsb
rol
jne
js
or
cmp
pop
fs
mov
cmpsb
inc
movsb
leave
jmp
mov
and
pop
cmpsb
lea
xor
jne
cmp
in
jp
mov
push
loope
stc
lods
mov
ds
cmp
lds
fs
add
or
bound
into
nop
sti
push
inc
cmp
or
ret
popf
in
mov
repnz
inc
ret
lods
test
pop
inc
ret
cwtl
add
cltd
and
mov
cmp
xchg
jno
data16
stc
mov
cmp
adc
idivl
je
stos
mov
sub
sub
pusha
sub
jns
sbb
xchg
add
mov
sahf
add
fiaddl
cld
in
jl
xchg
push
hlt
std
sub
mov
mov
mov
ds
pop
mov
loopne
nop
and
mov
fisubrl
cwtl
pop
jo
jo
sti
and
je
imull
pop
rol
add
shll
fsubrl
adc
int
std
scas
inc
sti
or
xchg
xchg
jecxz
xor
mov
sbb
add
std
aaa
addr16
daa
sub
xor
std
jno
push
jnp
adc
ret
mov
cmp
xor
and
roll
insb
add
rcl
jno
adc
popa
or
cmp
gs
cmc
jle
popf
mov
call
ds
xor
mov
jns
stc
into
std
push
mov
jno
imul
daa
pop
aad
fwait
cmp
movq
ret
rcll
pop
fbstp
lea
cmpsb
lret
lock
out
imul
mov
mov
cmp
mov
inc
cltd
cwtl
aaa
cmp
loopne
dec
pop
fdiv
push
push
stos
push
in
jecxz
iret
std
mov
ja,pn
pop
mov
std
stc
lods
push
dec
out
imul
add
cltd
xor
jne
sahf
aad
test
sbb
push
sbb
and
xor
ja
sub
sbb
inc
adc
pop
adc
andb
cmp
mov
sbb
jns
call
lods
pop
cmp
push
xchg
xchg
xlat
lahf
loopne
mov
lods
daa
inc
repz
xor
aad
mov
cmp
jge
push
fdivrp
or
ds
rolb
pop
pop
jne
into
hlt
sub
test
sub
cmpsb
mov
dec
mov
je
cmc
rcll
sar
push
pop
test
or
aaa
mov
push
sub
sub
or
dec
xor
adc
and
xchg
int3
cmp
addr16
push
js
addl
mov
dec
test
lret
add
cs
iret
sbb
std
dec
orl
je
in
je
aad
bound
mov
movsb
movsl
arpl
adc
hlt
ds
cmp
test
inc
lret
jne
cmp
xchg
sbb
pop
addr16
or
das
jae
in
std
das
push
dec
lret
mov
jl
je
xchg
jo
jb
std
std
loope
push
xor
dec
sub
out
ret
adc
enter
das
add
pop
xor
aam
and
nop
sub
pop
mov
pop
mov
cmpsb
daa
hlt
cmp
xor
mov
pop
imul
adc
adc
dec
inc
push
inc
add
push
and
adc
in
and
inc
xchg
cmp
repz
inc
out
lret
insl
xor
dec
js
test
rorb
lock
gs
inc
mov
mov
mov
push
aaa
jnp
mov
movsb
test
sbb
xchg
mov
and
add
cmp
add
es
loopne
xchg
sahf
lret
cmp
push
mov
pushl
lret
and
mov
or
mov
sub
add
mov
subl
xchg
int
ljmp
dec
xchg
int3
lock
and
ljmp
dec
push
lock
fstpl
in
movsl
pop
add
xor
cld
inc
mov
inc
enter
movsl
call
cmp
call
js
cmpsl
mov
push
cmpsl
mov
and
and
or
adc
and
mov
cmp
xor
addr16
popf
out
xor
ljmp
and
sub
mov
mov
cmp
cltd
movsb
sbbl
sub
cltd
pushf
inc
mov
pop
mov
lods
test
es
aad
inc
push
dec
inc
lcall
pushf
fdivrs
add
xor
loopne
fistpl
scas
mov
test
pause
lret
and
mov
cmpsl
sbb
jns
test
add
incl
decb
cld
mov
test
inc
lods
jb
xor
fnstsw
pop
repz
mov
mov
and
mov
sbb
xchg
pop
or
mov
mov
lock
dec
inc
out
mov
mov
adc
leave
mov
jecxz
dec
mov
mov
push
sbb
bound
or
je
dec
sti
leave
adc
or
movsl
test
test
enter
test
leave
push
and
pushf
and
leave
pushf
nop
nop
nop
dec
add
and
xchg
pushf
outsb
cltd
mov
pop
icebp
paddsw
sbb
pop
je
int
push
and
add
cmpsl
stc
mov
dec
lds
ret
push
mov
les
test
gs
lret
lea
insl
imul
sub
or
into
jne
sub
push
sbb
gs
add
test
mov
mov
add
bnd
dec
push
inc
add
dec
pop
inc
pop
sbb
sbb
movsb
add
and
mov
mov
push
cmp
sbb
add
popa
push
lds
fsubrs
dec
mov
ret
sbb
outsb
jb
push
inc
adcb
test
and
cltd
fimuls
add
jl
dec
xchg
jb
cwtl
inc
mov
push
mov
mov
movsb
mov
xor
outsl
mov
test
loopne
mov
mov
bound
ret
cmpsl
mov
sub
or
or
and
scas
push
ret
fsubs
pop
sub
add
les
mov
push
mov
shll
fucomip
stos
ret
iret
bound
mov
sub
mov
jno
lahf
rcll
or
les
cld
ljmp
out
mov
pop
movb
mov
movl
add
pushf
xor
adc
lock
push
gs
mov
mov
dec
rcll
push
jmp
pop
xchg
xor
dec
sbb
and
pop
dec
ret
repnz
sbb
out
pusha
clc
cmp
mov
push
je
hlt
daa
clc
inc
push
cwtl
push
push
inc
sbb
jae
testl
cmpsb
jmp
ss
pushf
imul
inc
aaa
test
cmc
xor
mov
lods
add
enter
mov
bound
push
js
mov
inc
jo
pop
adc
orl
cs
lsl
jmp
push
pop
push
push
sahf
std
dec
inc
shr
rcr
shr
rcr
or
jne
div
pop
dec
adc
fildll
inc
inc
mul
pop
jb
cmp
or
cmp
addr16
out
or
xor
and
adc
rolb
dec
fcmovu
lret
sub
fxch
arpl
pop
or
insb
testb
ja
add
das
push
ret
adc
xbegin
mov
movb
mov
movb
add
add
push
aad
push
nop
sbb
inc
add
mov
in
push
and
cmp
or
movsl
sub
sub
or
inc
inc
mov
pop
xchg
test
sbb
add
adc
add
les
je
dec
pop
bound
xorb
jne
mov
xor
ds
sbb
push
lock
adc
mov
or
dec
xchg
xchg
mov
fwait
cmpsb
cmova
dec
sbb
xchg
dec
add
les
daa
fidivrs
jne
jno
jecxz
lea
jb
pop
or
rcll
lret
inc
je
sbbb
add
push
sub
test
mov
jne
inc
sahf
divb
add
lea
xchg
adc
popf
out
adc
pusha
cmp
cwtl
inc
add
mov
mov
xchg
sbb
iret
push
pop
mov
push
fnsave
push
inc
jge
and
into
push
inc
jb
pusha
jl
mov
orl
push
pop
loope
push
ret
test
push
test
scas
xchg
add
je
aaa
xlat
sar
shlb
cmp
add
sahf
push
pop
popl
dec
js
xor
inc
inc
xor
pop
mov
fidivrl
ja
add
add
sbb
sbb
in
and
or
mov
add
push
push
xor
lea
sbb
add
push
in
cmp
jp
mov
xchg
loopne
or
cld
shlb
or
sbb
sbb
lods
arpl
push
or
test
cmp
push
rol
cltd
hlt
mov
sub
mov
sbb
cmp
in
sub
loopne
and
lea
and
add
add
arpl
mov
hlt
inc
shrl
or
and
orl
adc
jecxz
fdivrp
iret
mov
adc
jmp
fcoms
shl
push
adc
test
lret
xchg
ret
inc
stc
xor
movsb
mov
clc
inc
iret
xor
ss
dec
xor
sub
in
and
lahf
addb
int3
inc
or
test
ss
out
cmp
je
out
and
adc
lahf
push
aam
xchg
pop
addr16
outsb
or
adc
push
rorl
sahf
and
scas
and
and
cmpsb
mov
or
sbb
sub
je
outsl
add
pop
xor
iret
push
mov
push
inc
push
or
adcb
sbb
repnz
aam
dec
mov
fmull
push
cmp
sbb
cmp
ljmp
jb
inc
fists
ret
and
jmp
add
cmpl
mov
dec
sbb
adc
cmp
mov
adc
and
push
push
mov
movsb
sbb
dec
or
jp,pn
hlt
or
jb
inc
sub
mov
pop
or
icebp
popf
lahf
mov
enter
pop
inc
sub
loopne
popa
lock
cs
mov
xor
lcall
inc
leave
rcrl
xchg
sbb
sub
fcomps
arpl
and
mov
addr16
pop
mov
pusha
arpl
lret
pop
rcrb
imul
or
ficompl
dec
inc
cwtl
out
imul
ret
mov
scas
or
and
pop
and
push
lret
dec
cwtl
test
jo
xor
add
add
sub
dec
pusha
adc
aas
add
gs
adc
dec
insl
mov
or
mov
or
and
leave
and
adc
xor
push
outsl
in
mov
sarl
call
cmp
or
int3
inc
sbbl
pop
xchg
inc
scas
or
dec
cmp
mov
test
cmp
and
cmp
xchg
call
mov
fs
roll
pop
leave
push
add
xor
or
fwait
adc
fucom
dec
mov
inc
rcrb
push
cmp
cmp
lret
div
imul
and
and
hlt
add
pop
pop
cmp
mov
test
mov
push
arpl
adc
aad
push
sti
or
repnz
mov
or
fxch
js
and
jne
scas
shll
int3
mov
pusha
pushl
mov
pop
andb
lret
clc
mov
adc
jmp
xchg
push
je
or
or
push
je
dec
je
stos
jmp
mov
jmp
dec
pop
dec
or
dec
or
push
hlt
aad
loopne
sahf
pop
fdivrl
fadds
dec
mov
cmp
les
mov
add
xchg
mov
add
add
mov
lcall
ret
dec
mov
mov
mov
jne
sbb
inc
mov
cmp
adc
mov
lret
jge
mov
mov
mov
xor
adc
xor
mov
int3
or
mov
fs
push
dec
jmp
and
dec
shrb
and
insb
test
aaa
mov
and
xor
push
adc
lods
jecxz
push
cmp
test
or
add
dec
int
clc
pop
je
jmp
xchg
mov
add
sbb
imul
pop
xor
add
pop
mov
sti
movsl
mov
jne
cmpl
adc
cmp
bound
out
or
cmp
and
leave
sub
cmp
inc
xchg
and
xor
movsb
mov
bound
xor
mov
popa
jmp
ret
cwtl
shl
and
and
or
iret
inc
lea
dec
ret
rcll
imul
sbb
call
and
mov
lahf
outsl
into
int
cmp
test
push
xchg
add
push
in
mov
clc
lock
dec
mov
lret
adcl
popa
mov
or
xor
ret
push
pop
push
xor
inc
pop
rolb
ret
repz
mov
jp
aaa
and
or
insb
mov
and
imul
dec
add
cmc
subb
lods
in
xor
dec
push
out
mov
jb
aad
je
add
add
dec
xor
adc
fdivs
test
xlat
cld
or
mov
inc
and
cmp
push
rcl
ret
jnp
jb
push
rorl
adc
add
sub
inc
leave
pop
xor
or
out
inc
adc
inc
push
xor
movsb
add
test
xchg
and
jne
xchg
add
inc
mov
fcomps
aam
cmp
ss
jmp
xor
enter
nop
inc
inc
nop
loope
icebp
adc
add
fsubrl
inc
pop
je
pop
mov
jb
je
jecxz
movlps
rorb
mov
adc
lods
shr
movsb
dec
stc
lds
cld
pop
xchg
xchg
rolb
popf
sub
inc
sub
and
inc
sub
jp
inc
mov
add
xor
inc
pop
xlat
cmp
iret
mov
pop
add
adc
inc
loope
inc
jg
pop
and
xor
cmp
and
mov
pop
or
mov
mov
test
xchg
push
mov
les
add
jp
inc
sbb
aas
jae
mov
loopne
dec
shl
push
dec
or
into
ss
lods
sbb
subb
sub
out
adc
add
push
push
orl
or
mov
xchg
and
mov
and
push
sub
in
mov
jo
pusha
cltd
outsl
cmp
call
in
cwtl
jne
shrb
cmp
popf
ss
dec
inc
inc
or
jne
repnz
jae
cli
or
sub
push
sar
int3
adc
in
imul
and
loope
pop
clc
rorb
push
cld
and
sbb
cmpsb
push
cmpl
pop
push
inc
aaa
inc
insb
pop
addb
xchg
add
out
in
out
inc
pop
sti
or
sub
out
int
sub
sub
bswap
jo
rcrl
or
ret
xor
jbe
add
xchg
scas
jg
inc
push
pop
push
dec
push
push
adc
xchg
clc
or
or
add
fwait
outsl
cmp
or
push
and
cmpsl
sbb
cmp
inc
mov
outsb
add
jge
mov
cmp
mov
mov
nop
hlt
stos
inc
cmp
mov
cmpsl
mov
sbb
adc
rorb
rorb
outsb
lock
and
jle
and
andb
cmp
daa
adc
and
sar
sarb
jg
popf
pusha
push
xchg
xchg
push
lcall
rcrb
push
push
mov
inc
pop
xor
dec
jp
push
fs
mov
xchg
jg
mov
add
out
add
shrl
dec
cs
in
and
repz
mov
inc
or
inc
adcl
inc
add
xchg
inc
loope
mov
addl
lahf
or
orb
movb
push
pop
sbb
ret
dec
sbb
mov
popf
mov
push
iret
cli
or
inc
in
push
aaa
xor
ds
insb
sahf
aad
add
clc
push
shrl
add
or
je
arpl
aaa
and
sub
inc
jb
jl
popf
jbe
scas
pusha
notb
movsl
or
or
dec
pop
mov
orb
mov
xor
shlb
and
out
push
xlat
cs
fwait
xchg
cmpsb
cmp
adc
loope
xor
sahf
lock
mov
add
or
adc
push
loopne
or
xor
not
push
shll
lods
inc
loope
incl
enter
aaa
cmp
mov
and
jb
rcrl
add
pushf
add
and
sub
into
xchg
push
fwait
push
sub
mov
imul
movsb
shlb
and
xchg
dec
idivl
adc
and
inc
push
cmp
jo
test
je
dec
inc
xchg
or
ret
dec
adc
orb
cli
loop
add
loope
cmp
dec
roll
inc
jmp
loop
push
sub
fcoms
lds
aad
or
or
lock
out
inc
add
stos
ss
neg
xorl
lock
push
rclb
pushf
cmpsb
jnp
xchg
out
or
push
adc
imul
aam
xor
clc
loopne
xchg
add
xchg
mov
dec
sar
sbb
adc
push
mov
xor
jae
jns
xor
cmp
add
test
xchg
xorb
int3
daa
add
jmp
pushl
mov
sub
daa
int
ds
push
push
jae
adc
add
fstps
add
mov
repz
daa
mov
add
adc
pop
sahf
lret
cmpsl
insb
loopne
dec
xor
push
mov
test
gs
out
xorb
adc
lret
xlat
cmp
sub
clc
adc
pop
sub
loop
pop
in
ljmp
inc
or
adc
imull
push
push
dec
adc
push
and
dec
in
xor
push
pop
outsl
data16
clc
jl
inc
or
jbe
jle
pushf
sub
push
outsl
ja
mov
cmp
jo
mov
mov
hlt
mov
or
mov
jo
loopne
loope
mov
dec
test
into
and
cs
mov
call
sbb
fcomi
xlat
mov
sahf
mov
add
sub
xor
imul
mov
in
lock
pop
dec
enter
add
mov
jle
adc
enter
add
jp
or
test
nop
push
adc
inc
jmp
fs
mov
negl
ja
xchg
mov
test
aam
hlt
push
add
hlt
add
inc
or
sbb
clc
fsubl
and
mov
rorb
clc
lock
mov
ljmp
inc
xor
loopne
push
push
aam
adcl
shrb
insl
out
out
xor
mov
lock
cmpsb
or
mov
fadds
out
pop
int3
and
dec
sbb
enter
or
test
sbb
inc
push
mov
jl
push
loope
out
js
xor
push
push
clc
mov
pop
mov
and
push
adc
rolb
inc
popa
pop
mov
hlt
sbb
cmp
xor
push
push
aas
add
jmp
faddl
or
pop
and
or
loope
sti
add
or
sarb
sbb
fxch
fnstcw
add
sub
sub
adc
sub
les
and
out
push
sbb
push
pop
push
push
cli
enter
xlat
mov
ret
call
mov
jmp
adc
outsl
jo
lret
add
mov
imul
push
js
add
fimull
push
xchg
out
push
in
fdivr
dec
adc
push
xchg
mov
cmpsb
inc
fwait
cmp
inc
test
mov
push
jecxz
adc
dec
push
pop
int3
inc
loope
or
inc
or
mov
pop
imul
xor
jle
xor
cmp
inc
jmp
das
sbb
pop
dec
xchg
push
ret
cmp
imul
pop
add
cmc
aas
sbb
inc
or
sub
in
pop
bswap
xchg
rcr
fsubs
popa
inc
scas
rolb
push
fstpt
inc
push
jo
test
xor
pop
rcrl
idivb
xor
xor
jne
push
ja
cld
and
cmp
ja
stos
mov
mov
and
or
xor
push
pop
shll
mov
fwait
sbb
movl
mov
sbb
mov
movsb
pop
addl
xchg
mov
ficomps
adc
xorb
push
cmp
and
lcall
add
repnz
lods
divb
in
sub
or
cmp
dec
dec
sbb
dec
inc
loopne
lret
cmp
push
push
sub
int3
rcrl
add
sbb
xchg
or
popa
ds
jg
add
mov
mov
inc
or
sarb
fadds
jle
cmp
jl
stos
sub
add
movsb
sbb
fimull
inc
add
mov
insl
hlt
jmp
push
pushl
jmp
xchg
xor
dec
in
cmp
jo
pop
and
adc
out
jmp
adc
inc
jmp
sub
push
in
xor
inc
lods
ret
cmp
dec
jmp
pop
xchg
cmp
dec
mov
jne
inc
sbb
sbb
fdivrs
cmp
call
loop
xorl
dec
inc
sub
lcall
pop
or
sbb
push
cld
and
push
pop
ja
cmp
and
inc
or
or
lea
add
adc
clc
les
push
jl
push
es
push
or
add
add
ret
sub
jnp
jg
aas
add
add
jnp
and
lods
sbb
pushf
sbb
mov
and
sbb
pusha
bound
push
push
adc
mov
fcompp
stos
ret
or
pop
jg
cmp
push
pop
push
fs
pop
lahf
xchg
jl
mov
leave
ss
leave
xchg
or
fstl
add
call
fneni(8087
fsubs
and
sub
fstps
push
test
ljmp
adc
mov
push
mov
fcoml
or
loope
dec
stc
pop
outsb
sbb
mov
rcr
adc
ss
inc
inc
push
dec
dec
or
clc
cmp
jl
scas
push
sub
mov
inc
loopne
sbb
gs
pop
cmp
jle
dec
or
lret
cmp
insl
add
or
sbb
and
lock
mov
mov
mov
adc
mov
rolb
sub
adc
or
jcxz
lock
cmpsl
pusha
sbb
enter
add
popl
aam
outsb
add
rolb
jle
pop
inc
outsb
cmp
inc
push
pop
cmp
inc
or
movsb
push
mov
sbb
lods
cltd
sysret
inc
pushf
loopne
and
jno
jo
aaa
clc
orb
testb
lea
push
or
dec
inc
or
or
test
js
enter
push
or
cld
test
mov
repnz
psllw
pusha
ja
add
shlb
loope
aam
dec
imul
movsl
mov
repz
mov
sbb
sbb
test
jbe
in
je
clc
pop
test
push
or
andb
inc
jae
sub
pushf
cmp
or
cltd
mov
xchg
je
mov
cltd
neg
add
cmp
rdtsc
addb
iret
shl
sub
and
hlt
test
dec
dec
xor
push
adc
lret
cmp
jo
repnz
rorb
or
adc
xchg
int3
shlb
jecxz
jb
add
mov
subb
adc
or
or
sbb
sub
pop
add
inc
xor
sbb
subl
in
fsubrl
and
jne
mov
and
jne
dec
xchg
enter
sub
cli
inc
cs
arpl
mov
jmp
cwtl
js
jns
pop
jle
sbb
add
and
cmpb
sti
mov
in
pop
pop
je
pop
push
sbb
cmc
and
or
mov
and
mov
andb
cld
ret
bound
aad
xchg
aad
ret
inc
cmp
jae
push
cmp
jl
mov
inc
ss
add
dec
adc
add
add
or
xor
add
and
mov
cmp
ror
popa
xchg
into
push
ljmp
jb
pop
inc
mov
xor
sbbl
inc
add
mov
stos
cld
pop
je
dec
dec
add
and
or
sub
stos
insl
leave
mov
icebp
cmp
scas
mov
lret
repz
daa
pop
adc
sub
xor
xor
mov
test
lods
mov
int3
inc
push
repz
xor
fs
jne
xchg
sbb
xchg
xlat
jns
mov
es
frstpm(287
add
ss
rcll
jl
push
out
gs
adc
jmp
mov
loope
push
in
mov
jle
xchg
xchg
lock
mov
or
jne
and
sub
inc
mov
clc
add
or
fimuls
push
or
aam
mov
jecxz
test
jle
add
mov
mov
daa
jne
dec
inc
sbb
nop
in
push
lock
xchg
inc
es
pop
lock
cmp
jl
hlt
mov
and
outsb
jle
aam
adc
or
les
or
cmpsl
and
pusha
jbe
add
test
sbb
decl
inc
sbb
mov
dec
jg
jno
xchg
mov
mov
call
js
jmp
lret
pop
hlt
mov
jecxz
xor
mov
lret
or
rolb
pusha
nop
fisttpll
mov
or
push
mov
xchg
pop
and
ret
faddl
inc
icebp
xchg
out
push
pop
test
adc
lds
out
sub
add
push
ljmp
and
or
out
jl
call
or
or
mov
out
inc
xor
jbe
inc
lret
jl
push
scas
mov
push
mov
ljmp
add
push
push
or
jae
adc
mov
mov
mov
xlat
je
cmp
pop
repnz
shll
testb
mov
testb
addl
or
cmp
jge
push
jmp
inc
addr16
fidivrl
sbbl
je
js
cmpl
sub
pop
adc
daa
or
pusha
lds
sahf
push
adc
pop
push
xsha1
cmpsb
or
std
shr
jmp
jmp
xor
and
adc
and
inc
std
aam
and
outsb
test
pop
mov
fs
push
fstpl
wbinvd
in
es
jmp
add
cmp
xor
pop
inc
sbb
scas
insb
mov
mov
mov
push
jno
push
xor
test
xor
sub
out
pop
sub
sbb
into
je
xchg
cli
adc
in
pop
pusha
mov
jbe
pop
mov
or
gs
out
mov
adc
mov
popa
sbb
lods
xchg
or
std
testb
mov
mov
push
sbb
sub
enter
sbb
inc
sub
adc
loopne
test
jmp
inc
mov
mov
sub
imul
push
adc
cmp
ljmp
shlb
inc
ljmp
jecxz
cmp
leave
xor
out
mov
shrl
jnp
lret
mov
or
daa
or
iret
or
sbb
out
or
mov
sbb
sbb
jb
and
sub
jo
jb
xor
cmp
shlb
inc
inc
pmulhuw
in
dec
dec
push
push
cmp
mov
pusha
cmp
cmp
push
or
cmp
and
mov
mov
adc
mov
nop
xchg
cwtl
dec
xor
and
mov
xchg
test
sub
push
add
adc
je
pop
add
push
imul
loopne
in
bound
push
mov
or
mov
imul
adc
sbb
int
adc
sbb
clc
and
and
xor
and
sbb
mov
pop
pop
inc
push
pop
mov
jo
add
mov
daa
push
cmp
rclb
pop
ret
add
dec
jne
out
dec
xchg
lret
add
jmp
or
push
cli
or
add
orb
popa
cmp
xor
jb
sbb
jne
push
jp
push
push
imul
pop
pop
jmp
mov
dec
bound
repnz
mov
inc
movsb
incl
mov
jmp
jl
aas
pop
out
jne
mov
or
and
inc
adc
mov
mov
hlt
adcb
xchg
out
out
inc
ja
scas
xor
pop
cmp
jnp
xchg
xchg
ss
je
sub
test
dec
faddl
push
sahf
ret
aad
loopne
and
lcall
inc
push
add
fmuls
in
pop
sub
push
popf
fprem
cwtl
aam
mov
lock
scas
or
jp
sarb
pop
cmp
outsb
push
jae
orb
arpl
add
je
push
pushf
or
cmp
jnp
push
dec
and
loopne
test
and
mov
cmp
or
call
ret
gs
and
ret
test
cmp
jmp
pop
mov
add
add
cmpsb
inc
sbb
outsl
sbb
fidivrl
pop
in
xchg
mov
repnz
push
mov
add
popa
hlt
bound
push
lret
pop
and
jmp
jl,pt
js
adc
or
jmp
mov
or
orb
dec
lahf
ret
pop
push
adc
xorb
or
loopne
test
add
ja
mov
andb
pop
hlt
or
fcoms
enter
std
enter
or
xchg
add
outsb
int3
inc
das
bound
mov
pop
ret
jl
loop
shrl
add
insl
insl
jb
push
mov
push
mov
jmp
enter
inc
popa
lea
xor
aad
add
and
cwtl
or
xorl
jle
arpl
xchg
add
sub
pop
repz
mov
sbb
mov
fxch
gs
test
js
imul
clc
fbstp
push
cmp
pop
aam
cld
pop
repz
inc
lahf
and
push
fisubs
jne
sti
mul
xor
imul
jecxz
add
push
mov
push
mov
icebp
push
and
out
sti
fwait
or
add
sar
mov
mov
popf
daa
or
mov
mull
fdivs
jne
aad
lea
iret
in
adc
jne
xchg
rclb
std
sub
popf
add
mov
ss
xchg
inc
insb
adc
ljmp
jne
push
inc
pushl
mov
mov
mov
push
xor
mov
ret
jnp
cmp
popf
pop
addl
pop
mov
subb
and
addr16
fldln2
loopne
mov
pop
cmp
in
lods
mov
sbb
mov
mov
rcrl
hlt
mov
sbb
stos
jmp
mov
mov
cmp
add
xchg
fsubs
push
cmpsl
notb
mov
push
clc
loopne
call
jmp
push
dec
inc
mov
add
push
add
cmp
lea
shlb
mov
jnp
rorb
ret
pusha
fcoms
push
inc
mov
out
imul
aas
add
cmp
out
dec
or
add
int
push
test
push
or
push
add
jo
inc
mov
cmp
mov
add
gs
aam
je
xor
jle
add
inc
cmpsl
notl
jmp
inc
js
add
dec
call
push
je
dec
add
or
sub
shl
cmp
sbb
std
cmp
cmp
mov
je
adc
xor
mov
sbb
dec
add
xchg
sbbb
out
test
adc
lret
iret
sbb
jmp
xchg
jmp
mov
mov
andl
aaa
dec
and
push
cmp
mov
xlat
pushl
adc
cli
or
inc
mov
outsl
cmpsl
mov
adc
cmpl
fmuls
push
icebp
xchg
push
push
and
inc
push
inc
add
push
cmp
jmp
adcl
or
pushl
pop
add
in
in
and
movsl
dec
add
loop
add
xchg
xlat
repnz
inc
lods
push
orl
dec
imul
inc
inc
sbb
or
cmpsl
sarb
xchg
push
bound
pop
add
nop
or
mov
mov
xchg
dec
dec
stc
pop
mov
adc
cmp
add
addr16
js
push
xchg
sub
add
and
addb
test
mov
enter
pop
lock
lcall
insb
cs
mov
std
xor
imul
fmull
jns
je
rcll
push
jo
lret
jmp
or
mov
add
mov
pop
or
jbe
test
xorb
xchg
sub
setns
inc
ja
xor
xor
fdivrs
jne
ljmp
js
inc
push
ss
jne
divl
fidivrs
in
clc
test
xor
inc
inc
cli
inc
cmpb
mov
and
sbb
cmp
subb
mov
clc
les
pop
and
call
fs
mov
and
je
aaa
push
loopne
loope
xor
rorl
add
sub
cs
shll
cld
mov
scas
incl
dec
loope
lret
mov
mov
mov
xor
aaa
arpl
cmp
xor
pop
adc
push
adc
jmp
popa
and
cmp
imul
lahf
ljmp
test
mov
pusha
adc
sub
jmp
sbb
push
pop
pop
inc
sti
ljmp
mov
xor
push
xchg
or
xchg
cwtl
mov
push
mov
imul
sub
and
pop
rolb
push
pop
mov
push
mov
out
lock
push
pushf
cli
sbb
push
jnp
mov
mov
xor
xor
in
adc
jg
xor
push
in
push
aaa
xor
cmp
sub
push
or
xor
adc
sub
inc
fstl
cli
pop
orl
or
aaa
fstps
adc
push
mov
out
add
pop
mov
fldenv
inc
out
push
gs
push
adc
repz
pop
cmp
mov
jg
rclb
xchg
fnstcw
dec
hlt
adc
fdivrs
addr16
pop
pop
test
mov
push
add
sub
adc
rol
sub
adc
mov
sbb
and
adcb
pop
mov
cld
pop
xchg
xor
inc
and
jg
mov
call
mov
clc
je
add
test
hlt
fmull
cltd
into
push
and
lock
outsb
push
dec
xchg
mov
cwtl
clc
mov
mov
lods
jbe
outsb
je
mov
jmp
push
and
mov
enter
jl
testb
jmp
inc
add
js
pop
sbb
dec
mov
jmp
mov
dec
sub
dec
and
enter
test
ds
mov
mov
push
call
leave
xchg
andb
jg
test
stos
rcrl
dec
inc
imull
testb
xor
inc
jmp
icebp
xor
jmp
jge
mov
out
cmp
loop
jle
mov
fsubs
ret
insb
loop
ret
push
jp
sub
movsl
cmp
or
cmp
cli
sbbb
xchg
inc
adc
xorb
pop
add
aas
rcrl
push
cmp
mov
leave
cmp
inc
push
cmp
mov
popa
out
adc
shlb
das
cmpsb
ret
sarl
mov
mov
adc
mov
sub
sti
adc
cwtl
mov
movl
cmp
mov
dec
push
dec
sub
push
sbb
adc
pop
cmp
xchg
je
test
sbb
daa
ret
sbb
pop
mov
sub
inc
mov
push
lret
sub
std
push
testb
jmp
mov
sub
and
test
dec
mov
jnp
push
clc
aas
repnz
dec
outsl
or
das
adc
inc
cli
jb
es
dec
into
jl
inc
add
pusha
adc
out
xchg
mov
or
push
jecxz
add
xorl
pop
or
gs
and
add
mov
sbb
or
insl
xor
inc
data16
add
jno
pushf
shlb
or
adc
add
add
inc
jbe
push
and
test
mov
or
ror
or
roll
adc
fnstcw
mov
sub
int
pop
xlat
dec
out
or
or
pop
icebp
test
inc
push
dec
hlt
mov
daa
xor
push
popf
pushf
pop
sub
je
push
popf
add
mov
ds
cmp
stos
testl
push
data16
call
add
push
mov
clc
mov
leave
das
add
inc
add
jne
sbb
lretw
mov
js
or
or
jb
xchg
or
and
or
adc
push
mov
dec
add
and
test
and
in
or
add
or
sbb
nop
pushf
and
shl
not
xor
loope
xor
and
cmp
enter
add
jmp
add
and
js
nop
fwait
test
inc
cmp
test
adc
cmp
cmp
test
xor
bound
xchg
inc
mov
mov
je
sbb
or
sub
sbb
outsb
divl
adc
lock
and
mov
cmp
add
jl
and
jecxz
jbe
xor
xchg
jmp
call
adc
xor
das
insb
or
or
xor
sub
add
sbb
sti
jle
test
and
add
fstps
aas
pusha
mov
lcall
pop
sub
xchg
addr16
rorl
jecxz
pop
fstp
mov
pusha
pusha
pop
je
pusha
insl
stos
sbb
lret
xchg
inc
pop
push
or
hlt
es
adc
scas
cmp
cmpsl
sti
add
add
test
pop
and
xor
mov
js
scas
aam
loop
push
xor
dec
je
add
dec
jne
lods
stos
mov
jmp
push
mov
push
pop
push
stos
add
pop
testl
andb
xorb
sbb
jmp
push
and
xchg
fsubr
imul
mov
flds
fldenv
pusha
fstpl
push
or
shrb
mov
sbb
cwtl
push
cmp
insb
call
icebp
mov
insl
in
sub
fimuls
add
adc
or
xor
lret
cmc
cs
cmp
mov
mov
aam
xchg
shlb
fs
aaa
sbb
fwait
adc
mov
sbb
mov
and
les
sub
sub
leave
sbbl
fwait
rcrb
nop
psubusw
inc
test
int3
adc
div
add
mov
sbb
pop
add
mov
add
clc
call
loop
fstpl
mov
cli
mov
cli
add
shl
or
pop
ljmp
stos
jmp
mov
js
repnz
push
add
or
hlt
insl
cld
stos
repnz
les
dec
into
ss
insl
sbb
push
mov
sbb
jp
dec
in
jo
loopne
push
inc
lock
pop
mov
pop
push
push
sahf
jmp
pop
movsb
addb
add
aam
std
repnz
and
sbb
or
and
inc
lods
add
in
pop
add
add
sbb
jle
push
add
mov
fidivs
add
and
push
lock
test
ficoml
push
xchg
push
or
out
loopw
push
push
push
mov
add
movzbl
adc
inc
add
sub
or
test
cmp
je
inc
loop
or
sbb
daa
loopne
or
adc
filds
fisubrl
mov
and
daa
cltd
mov
pushf
sub
add
subb
pop
or
rorb
xchg
push
add
and
or
sti
fsubrp
fwait
jno
mov
scas
inc
and
jo
popf
in
pop
add
or
pop
xchg
mov
or
dec
or
sub
mov
mov
fcompl
in
add
pusha
mov
sti
pop
in
mov
lea
push
or
in
or
sar
lods
add
jb
les
xor
add
push
mov
sbb
push
sahf
frstor
js
inc
jnp
adc
adc
add
sbb
data16
cmp
ret
jo
add
sub
int3
pop
test
push
inc
cld
adc
mov
cs
pop
into
mov
shrl
push
rolb
xchg
icebp
lock
or
in
gs
xchg
mov
call
add
ljmp
addl
push
adc
cmp
add
into
jnp
fsubrs
mov
cmp
dec
ss
sub
ljmp
jnp
imul
pop
push
dec
in
or
mov
mov
test
or
or
stos
inc
add
or
std
add
fwait
push
out
mov
push
pop
in
fsts
and
inc
sbb
xor
loopne
push
cld
push
add
fidivl
sub
ljmp
ror
sub
dec
aad
sub
fwait
mov
ffree
mov
adc
cmp
loop
and
int3
add
mov
push
or
insl
or
push
mov
cld
xchg
hlt
or
sub
inc
es
test
and
pop
movsl
fstpl
and
or
call
enter
mov
jo
js
jne
mov
popa
hlt
insb
jg
or
shlb
inc
push
ret
xchg
scas
push
inc
xchg
mov
pop
jle
mov
dec
test
mov
adc
cld
mov
jbe
out
add
mov
add
jno
pop
inc
xlat
jbe
dec
mov
mov
adc
xor
jle
mov
shr
push
andl
adc
pop
pusha
popf
sahf
xor
push
mov
movsl
movsb
nop
test
push
lods
sbbl
add
push
push
enter
push
shr
dec
jmp
cmpsb
push
cld
adc
jb
xor
add
adc
xor
pop
pop
test
jo
mov
inc
mov
sub
punpckhdq
xchg
or
outsb
jne
mov
or
add
fists
adc
enter
or
add
loope
mov
inc
lcall
in
adc
pop
push
push
pop
pop
xor
xor
aad
das
lods
hlt
arpl
sub
in
rorb
push
rorb
inc
adc
pop
ret
and
dec
pop
xchg
les
sub
xchg
cwtl
dec
or
movsl
add
popf
or
insl
and
loopne
sbbb
add
jmp
aas
sub
push
mov
cli
sti
add
cmp
add
daa
mov
pop
test
mov
cs
or
jl
mov
or
enter
test
xchg
xor
push
shll
pop
aam
xor
push
ret
mov
cltd
and
add
pop
xchg
in
cltd
roll
mov
dec
xchg
loopne
vcvtdq2pd
mov
pop
pusha
sub
inc
shl
dec
sub
daa
mov
movsl
mov
loop
rolb
adcl
pop
sub
repz
push
cltd
insb
pop
and
psubd
jle
and
into
loopne
insb
sub
test
out
jo,pn
xor
repnz
or
dec
aaa
inc
and
and
cli
sbb
test
xor
adc
shlb
mov
add
dec
mov
sub
jns
push
mov
pop
and
add
fadds
loopne
add
in
pusha
sbb
or
dec
add
fmull
inc
adc
in
xor
add
aam
or
movsl
cmp
mov
movsl
xor
push
sub
or
push
inc
jmp
and
and
push
cld
not
les
jge
pop
popf
je
mov
and
pop
ds
les
andb
test
mov
jl
test
mov
pop
fabs
xchg
sub
sarb
je
mov
ss
lds
mov
dec
add
mov
hlt
test
leave
adc
data16
sub
sub
cmpsb
lea
sub
cmp
cmovb
mov
das
mov
cmp
cmpsl
fs
push
pop
xor
pop
adc
cli
xor
inc
lock
dec
and
add
xor
jecxz
jmp
inc
mov
sarb
sbb
push
imul
inc
jo
push
inc
mov
adc
jo
jo
jecxz
mov
push
or
mov
sub
xor
lea
and
mov
add
sbb
add
xor
jge
aas
sbb
subb
scas
shl
or
cmpsl
loopne
add
and
or
cmp
mov
push
push
call
clc
fwait
jp
and
inc
sbb
add
or
sbb
sbb
jb
cld
add
sbb
add
in
add
add
sbb
sbb
fs
clc
or
sbb
dec
jl
push
xchg
cmpb
and
and
mov
add
mov
push
in
imul
leave
push
adc
imul
add
movsb
mov
pushf
std
xchg
xor
dec
dec
jne
mov
pop
jp
nop
and
cmpsb
lcall
js
push
cmp
in
jne
inc
jmp
mov
sub
test
or
xchg
add
and
ret
lods
mov
sub
cmp
ja
push
dec
jmp
mov
jle
lea
imul
jmp
xor
clc
mov
call
or
mov
push
enter
cwtl
cmp
mov
jmp
sub
lods
jbe
mov
adc
add
cmp
jle
jbe
inc
jle
cmp
push
xor
outsl
and
mov
mov
sub
push
jbe
mov
jo
pushf
push
cmp
fs
sub
jmp
lcall
sbb
mov
ret
push
fwait
or
mov
cmp
inc
fistpl
pop
cmp
mov
mov
jbe
nop
add
jne
xchg
negl
stos
dec
jae
imul
sbb
mov
cmp
jmp
and
xlat
mov
call
dec
loop
dec
pop
out
out
testl
and
cmp
sbbl
orl
and
mov
scas
mov
dec
or
sub
cmp
mov
mov
sub
mov
lods
mov
je
mov
adc
mov
pop
in
dec
pop
cmp
adc
add
inc
imull
mov
dec
mov
jmp
fiadds
inc
cmpsl
mov
xor
xorb
shlb
sbb
and
sub
mov
rolb
or
sti
or
jecxz
add
pushf
jmp
push
mov
pop
mov
jno
or
xchg
hlt
cmpsl
push
adc
jne
xor
rolb
push
push
cwtl
jge
neg
shll
mov
dec
adc
mov
lcall
test
cmp
cli
sahf
mov
sbb
lods
test
cmp
mov
jge
mov
popf
fnstsw
lock
xor
jne
add
nop
rcll
inc
xabort
jo
out
dec
test
add
xchg
pop
push
inc
mov
call
popf
fdivrp
dec
sbb
jb
mov
loopne
and
mov
or
dec
or
sbb
out
decl
icebp
mov
ret
and
mov
into
nop
fs
mov
inc
add
sbb
jns
mov
ja
ja
int
popa
shlb
lods
pop
es
dec
jl
pop
add
inc
int3
jne
loopne
add
enter
les
test
fwait
pop
scas
inc
into
jne
inc
or
cmp
pop
jnp
and
xor
hlt
int3
add
jne
or
xor
aaa
hlt
shrb
test
rcrb
and
add
les
movsb
push
mov
sub
add
icebp
dec
lock
push
lock
ja
in
push
add
sahf
sub
sub
xor
stc
jg
add
xchg
xor
gs
dec
pusha
test
js
mov
aam
gs
mov
add
or
shr
js
push
add
or
push
out
fucom
and
bound
or
ja
push
cld
adc
inc
mov
les
pop
jne
adc
mov
das
dec
call
insl
fadd
loopne
shr
or
mov
sahf
dec
in
or
aam
shrl
xor
push
push
ja
inc
loopne
and
cltd
mov
dec
shll
dec
cmp
add
ficompl
inc
adc
sbb
sti
pop
push
adc
inc
pop
in
fiadds
push
call
pop
or
mov
or
jb
test
and
mov
nop
dec
ja
orb
sbb
cmp
into
nop
jp
sub
pop
mov
jmp
scas
xlat
mov
dec
and
or
movsb
int3
movsl
and
test
int3
cmp
insb
int
xorb
lret
das
mul
popf
adc
negb
jns
sbb
movups
cmp
and
ret
or
adc
inc
and
xchg
add
lds
mov
pop
idiv
sarl
add
push
mov
cmpsl
stc
cmp
fs
shrb
mov
or
repz
push
js
xchg
gs
inc
add
mov
jne
pop
jne
cmp
add
add
or
mov
lcall
rorl
sahf
pop
cmp
and
test
pop
push
xchg
imul
jg
adc
inc
cs
or
mov
adc
mov
gs
or
cmp
xor
mov
dec
cmpb
je
mov
cmp
pop
orb
jne
dec
mov
inc
inc
mov
out
add
add
out
call
sbb
add
push
pop
jae
sbb
xchg
dec
clc
cmp
rorb
mov
rorb
fs
xor
ret
cmc
and
cmp
dec
or
mull
pop
jno
and
es
sub
xchg
mov
xchg
xchg
pop
rolb
xor
shr
sub
xchg
sbb
cmp
mov
and
or
add
test
jmp
cmp
mov
je
setg
cmpl
out
clc
add
inc
add
cld
mov
mov
aas
sub
movb
fmuls
add
mov
test
pop
adc
adc
push
ficompl
cld
loop
xorb
mov
mov
sbb
loop
lock
ljmp
clc
or
jmp
sub
add
sbb
lock
imul
add
xor
adc
out
cs
data16
jne
jns
les
sub
call
pop
idiv
add
ret
or
sub
add
cwtl
aam
pushf
loop
sub
push
adc
insb
inc
inc
jmp
pop
sub
dec
mov
xor
adc
inc
jg
push
push
xor
adc
addb
mov
mov
shlb
cwtl
jmp
sbb
push
ret
jbe
xchg
dec
adc
push
add
sub
adc
lahf
ret
fcoml
lods
jecxz
and
xor
shlb
pcmpgtd
add
shll
sbb
mov
add
mov
mov
add
loopne
mov
add
popa
mov
sub
xorb
lds
push
call
jge
adc
testl
xchg
lret
sub
cmp
shll
jge
xlat
or
and
xchg
rclb
pop
adc
add
sub
adc
lret
lret
xchg
or
mov
nop
jge
and
push
subb
or
sar
lea
test
mov
add
xchg
xchg
into
dec
cmp
inc
sub
cld
push
lds
iret
push
add
push
xor
enter
test
loopne
js
push
cmpsb
movsl
icebp
dec
add
fdiv
mov
leave
and
add
cmpsb
movb
pusha
and
gs
je
rolb
dec
and
dec
fwait
mov
aad
adc
neg
sbb
jecxz
out
pop
aas
mov
jg
ret
daa
xor
or
jne
pop
cmp
mov
add
mov
or
pushf
shl
xor
inc
xor
adc
popa
andb
adc
outsb
and
add
ja
sub
inc
ret
push
sub
xchg
push
and
add
push
movswl
les
loop
pop
cmp
data16
mov
jbe
add
js
cld
add
shrd
int3
sub
sbb
out
pop
pushf
ss
jl
cmpsl
outsb
mov
xor
incl
insl
ss
stc
inc
add
dec
jmp
test
cltd
pop
xchg
clc
sub
inc
mov
sub
jo
in
js
inc
decl
jl
jo
dec
push
or
pop
cmp
add
push
shrb
lock
xor
jo
inc
cmp
pop
and
sub
ja
add
sbb
js
jg
mov
sub
in
push
sub
or
fisubrl
sbb
lock
mov
lock
fnstenv
xor
sbb
mov
ret
loop
add
jbe
or
loop
shll
jnp
lods
scas
add
dec
jae
ficompl
inc
dec
pop
or
pop
inc
inc
into
or
sbb
or
orl
push
mov
mov
mov
inc
sub
je
int
dec
cmp
jmp
mov
loopne
mov
test
cmp
and
sub
sub
inc
inc
push
mov
call
pusha
imul
inc
sub
and
ss
jge
mov
jne
fwait
pop
or
jl
popaw
add
mov
push
mov
pop
xor
sbb
into
or
dec
add
add
dec
adc
repz
mov
cmp
aam
and
and
pop
lock
pop
push
shrb
or
in
jne
cmp
push
lahf
les
inc
lret
jbe
adc
movsl
adcl
cmp
rolb
mov
mov
enter
push
insl
xor
mov
insl
cmp
mov
inc
mov
cld
jl
fiadds
mov
mov
inc
sbb
sbbl
inc
shr
adc
in
loop
mov
je
jp
jns
jge,pt
in
pop
dec
jle
gs
or
pop
data16
pop
aam
sbb
in
lret
inc
popa
je
inc
je
stc
add
lds
xchg
xor
es
jmp
add
mov
inc
sub
mov
cmp
push
or
cmp
and
xor
test
lcall
call
lods
std
call
dec
add
push
pop
clc
fstps
or
adc
out
sbb
mov
push
ljmp
rcll
sub
mov
add
sbb
or
notl
lea
cmp
jne
pop
ds
adc
mov
inc
ja
dec
sbb
push
or
test
sbb
cmpb
jne
jp
jne,pt
mov
or
push
xchg
jp
rol
pop
data16
sub
add
hlt
jno
hlt
adc
push
cmp
jmp
je
adc
pop
rcl
sub
xchg
pop
pop
adc
lahf
test
sub
out
pop
cmp
popf
ret
or
int
jne
jl
aaa
int3
rcrb
or
aaa
and
xchg
into
sub
push
fcmovu
movb
or
cmp
and
or
les
ds
sub
mov
pop
cmp
pop
jp
mov
adc
sbb
or
pop
cmp
pusha
mov
cmpl
lods
lret
or
push
jne
sbbl
js
popa
jae
push
jle
pop
add
adc
xchg
jbe
enter
jp
pop
call
stos
shrb
or
xorb
sbb
pop
inc
imul
add
mov
sub
fs
cld
pusha
mov
cmp
adc
jno
push
dec
or
or
jnp
sbb
mov
stos
cmp
out
pop
cmp
xorb
inc
mov
mov
xor
je
aaa
mov
adc
xchg
sbb
sub
adc
dec
jne
push
push
jmp
or
jmp
shr
xor
testb
sub
or
adc
sbb
dec
negl
int
aad
in
jae
test
shll
insb
pushf
cmp
inc
xchg
add
hlt
dec
add
negl
adc
xorb
mov
jne
in
inc
lea
mov
orl
adc
ss
fisubrs
mov
or
ret
arpl
add
int
insb
pushf
dec
dec
jbe
in
pop
xchg
push
cld
mov
dec
in
shll
dec
and
add
sarb
rcrl
jecxz
push
xor
add
add
scas
xor
push
ss
mov
mov
aaa
pop
hlt
mov
cmp
or
subb
push
test
pushf
addr16
dec
inc
dec
jecxz
jae
dec
push
xchg
adc
movl
push
add
ret
push
xor
mov
inc
xlat
add
jge
notl
cmp
cmp
push
pop
in
jb
cli
jb
orps
push
das
add
inc
ret
sti
call
sub
push
arpl
add
cltd
les
pushl
cmp
add
jmp
jecxz
and
mov
movsb
scas
push
and
adc
in
xor
stc
inc
inc
test
test
sub
xor
push
push
cmp
mov
movd
dec
cmpb
inc
or
sub
js
mov
fldl
mov
sbb
xor
jbe
xchg
adc
test
cmp
add
adc
repz
mov
cmc
int3
pop
inc
repnz
mov
push
xchg
push
ret
fsubl
movsb
push
sbb
test
adc
adc
lock
movsl
push
sbb
add
sub
cltd
mov
mov
dec
movsb
cmp
shlb
das
sub
jmp
gs
or
xchg
rorb
std
or
int3
lods
ljmp
jmp
sets
adc
int3
call
add
adc
or
cmp
adc
add
sbb
mov
lods
or
and
pop
ljmp
loopne
jb
lea
cwtl
stos
fs
xchg
push
sbb
ret
nop
subl
sub
or
push
and
adc
adc
cmp
add
pop
xor
jmp
hlt
dec
inc
dec
pushf
ja
sti
and
les
or
inc
and
push
idivb
mov
sbb
mov
jge
adc
push
loop
jne
js
mov
js
js
imulb
or
cmp
lret
ret
cmp
cli
popl
dec
cmp
lea
or
adc
shll
repz
add
or
mov
add
shr
incb
pop
or
mov
add
add
or
bound
scas
sahf
sbbb
mov
mov
cmp
push
mov
mov
or
add
int3
cld
jmp
orl
dec
fstp
inc
inc
sub
add
inc
dec
add
add
testl
cli
mov
scas
and
adc
adc
add
cs
jp
add
cltd
repnz
rorb
mov
ret
push
dec
test
iret
or
dec
cmp
out
incb
loope
inc
jbe
pop
stos
sub
and
pusha
dec
icebp
jmp
cmp
ficoms
cwtl
add
adc
iret
mov
lock
andl
sbbb
sbb
leave
mov
add
pushl
stos
idivb
sbb
sub
or
test
test
aam
mov
lret
je
clc
call
test
sbb
loop
pop
cmp
test
and
movsb
jecxz
push
cmp
push
adc
icebp
sbb
pop
je
mov
cmp
shlb
negb
add
jne
and
pop
call
fwait
add
sub
jne
add
call
pusha
push
ljmp
inc
adc
adc
sbb
aam
out
mov
push
movsb
pop
and
cs
fisttpll
rclb
push
jle
or
add
mov
in
test
pop
mov
or
cmp
lret
mov
pop
adc
push
dec
cmp
cs
xchg
jl
cmpb
jl
xor
adcb
fwait
cmp
dec
xor
push
add
adc
adcb
rorl
lds
adc
cmpsl
and
push
push
mov
push
push
and
pop
nop
iret
ds
push
mov
xchg
aam
lret
jne
aam
pop
or
cmp
sub
sub
and
adc
add
call
jbe
dec
add
out
aad
stc
and
enter
add
adc
into
jne
mov
jle
flds
and
shll
pop
inc
fisttps
test
je
mov
dec
jo
or
ljmp
pop
data16
or
add
pop
pop
mov
pop
rorb
jne
bound
mov
movsl
xor
lods
outsb
rorb
cmp
add
aam
sub
push
cmp
xor
adc
pop
movsl
xchg
jg
xor
or
inc
jnp
jmp
neg
sbb
sub
mov
sbb
fwait
sbb
sbb
adcl
jl
sbb
push
push
inc
and
fldcw
fcomi
sbb
mov
sbb
sbb
outsl
xchg
dec
jns
inc
xor
not
push
hlt
pop
pop
pop
and
or
test
shll
jae
lods
rcl
ljmp
shrl
dec
mov
call
push
idiv
and
scas
aam
lock
je
negb
clc
dec
das
shlb
add
adc
cwtl
push
sbb
mov
ljmp
dec
mov
pop
dec
jecxz
lods
pop
add
es
inc
adc
dec
sbbl
es
xchg
ds
or
push
loop
jnp
or
into
jbe
jns
aas
test
dec
adc
ljmp
mov
inc
cli
jae
add
push
or
adc
das
push
pushf
add
push
cmp
sbb
and
sahf
mov
mov
cmp
aam
and
cmp
sub
orb
in
or
cs
int3
cltd
mov
and
pop
cmp
dec
pushl
dec
fidivs
add
mov
jg
test
adc
pusha
pusha
inc
in
ror
rclb
leave
jne
jmp
testb
loope
rorl
call
or
je
dec
clc
punpckhbw
mov
jmp
es
mov
je
movsb
and
out
lcall
jb
cmp
ja
add
cmp
adc
cmp
push
sti
push
shlb
push
shll
leave
adc
mov
jb
idivl
pop
mov
dec
add
push
adc
push
adcl
ja
dec
cmp
pop
jmp
push
xor
pop
pop
add
or
into
jg
insl
test
sbb
or
jmp
not
scas
mov
fdivs
push
and
xor
push
imul
adc
push
push
cmpsl
pop
push
xor
inc
ja
imul
mov
sub
jne
cmp
cltd
outsl
hlt
movb
add
push
ret
aas
inc
std
out
outsb
in
jmp
mov
test
jns
sarb
jg
movsl
add
scas
pop
sbb
mov
jno
cmp
popf
push
lcall
test
pop
sub
xchg
and
hlt
xor
pop
xchg
xor
orl
test
xor
sub
adc
push
in
or
cmpl
mov
xor
sbb
orl
mov
adc
jle
mov
add
jg
mov
push
sahf
out
sahf
rcl
rcl
aad
ss
out
xlat
fcomp
fstpt
lahf
add
lcall
rclb
sub
addb
data16
imul
cmp
cmp
push
pusha
jno
push
mov
incb
or
adc
push
lock
add
or
aas
pop
sub
inc
out
xchg
divb
in
mov
call
pop
idivl
faddl
cmp
das
or
idiv
sbb
push
push
mov
bound
ret
pop
adc
push
lea
sbb
pop
les
fldcw
adc
jmp
pusha
decl
sbb
dec
lea
sar
inc
pop
and
cmpl
fsubrs
or
fisttpl
mov
jne
and
out
loop
push
jmp
mov
pushf
loopne
fisttps
inc
call
outsb
outsl
push
adc
mov
lock
xor
sti
add
es
out
or
add
jl
or
inc
pop
in
push
dec
movb
inc
rcll
inc
add
hlt
test
aam
mov
mov
pop
testl
into
and
jle
js
lea
pop
sbb
lcall
mov
fbstp
icebp
nop
xchg
ja
add
adc
add
push
lods
mov
addr16
stc
mov
in
inc
pmulhuw
ljmp
loopne
inc
or
xchg
addb
mov
sbb
mov
test
jl
pop
mov
outsl
repz
test
rolb
push
mov
ret
nop
pop
sbb
or
mov
dec
xchg
mov
add
dec
push
inc
ja
lea
movsb
sub
cmp
pop
fcoms
sub
fdivp
push
addl
mov
jge
jl
imul
test
rol
cld
pop
mov
jle
jle
or
adc
jne
fmull
mov
add
sbb
outsb
cld
or
and
out
mov
clc
hlt
rorb
push
push
push
lret
jae
and
inc
rclb
or
leave
lods
or
ss
shrl
fildl
push
in
out
xchg
mov
test
js
or
dec
inc
dec
sahf
dec
sub
add
lock
inc
repnz
cmp
xchg
inc
cli
cli
inc
cli
test
sub
repnz
add
and
nop
push
ljmp
push
mov
xchg
mov
sbb
adc
nop
lock
ret
addb
push
clc
adc
pop
out
cli
leave
mov
xor
mov
rolb
dec
inc
adc
push
dec
data16
rolb
lock
jb
xor
push
imul
cmpsl
add
dec
mov
xor
pop
fdivrl
loop
out
cmp
xchg
mulb
jb
sbb
sbb
mov
repnz
shll
test
xor
lods
or
dec
mov
fdivrs
aam
fldcw
test
dec
ss
popa
cmp
bound
int
dec
jl
mov
xor
adc
call
cmp
lret
push
cld
lea
fcmovu
mov
mov
cmpsb
test
enter
lods
rolb
mov
add
mov
sbb
hlt
xchg
add
sbb
test
jb
sbb
sbb
test
movsb
xor
lock
out
or
add
fs
jge
mov
pop
movsb
adc
cmp
jl
dec
leave
jne
jne
sbb
mov
loopne
mov
subl
mov
adc
adc
cwtl
sub
sub
in
and
scas
adc
inc
add
inc
mov
push
add
clc
btr
push
nop
cmp
cmp
shll
test
jle
out
adc
in
dec
andb
inc
push
xchg
pop
shr
inc
loop
gs
or
adc
shll
test
jne
sbb
neg
fstpt
loop
jle
inc
imul
dec
je
and
imul
addr16
loop
xchg
fsub
pop
add
xor
push
and
outsb
mov
insb
cmp
jecxz
adc
sub
ret
sbb
out
pop
sti
aas
aad
icebp
and
xchg
mov
repnz
dec
fldenv
add
sub
into
or
imull
or
test
in
jb
stos
sub
movsb
xabort
mov
add
enter
sbb
mov
cmp
push
shlb
add
add
mov
sbb
jne
cmp
shll
inc
lock
in
into
or
mov
inc
ljmp
jmp
jmp
nop
dec
mov
dec
cmp
jge
and
adc
or
add
dec
cmp
jae
mov
add
in
incb
sub
orb
pop
add
test
pop
repnz
jp
jp
jne
dec
mov
jb
int
mov
push
inc
adc
dec
and
add
push
add
es
movsl
jge
in
add
mov
add
add
imul
add
fisubrs
inc
mov
mov
mov
vorps
push
add
inc
mov
or
fisttps
jmp
mov
xchg
push
or
add
or
je
add
cmp
add
imul
add
and
sub
ret
outsb
xchg
adc
xor
push
fimuls
ss
test
lret
push
sahf
orl
pop
cmp
xor
into
pusha
scas
add
rolb
xor
sar
pop
and
pop
pop
cmpsb
mov
in
add
ret
jne
or
or
jns
mov
mov
cld
rcl
push
pop
jae
or
or
dec
movsl
test
add
add
mov
add
lahf
add
mov
shlb
pop
pop
out
inc
pusha
adc
xlat
dec
pop
adc
sbb
ja
jnp
and
and
and
mov
test
ret
pop
sbb
cmp
xchg
add
lea
shll
fldcw
mov
cld
addb
je
ja
or
push
xor
add
dec
inc
jo
xchg
pushf
movsb
xor
ret
inc
cmpsb
dec
add
or
pop
mov
mov
add
inc
cmp
test
adc
sbb
add
add
xorl
into
out
stc
mov
mov
xor
repnz
push
inc
jg
into
into
and
mov
and
mov
pop
sub
push
pop
nop
movsb
sarl
cwtl
pop
mov
cmpb
sarb
aam
stos
pop
add
xor
push
cmp
sub
jns
outsb
or
test
xchg
addr16
add
add
inc
mov
addb
test
and
lcall
inc
dec
xchg
sub
sub
loopne
sbb
sbb
loope
jb
lret
ret
xor
out
decb
scas
sbb
mov
and
mov
loop
add
jae
test
add
popa
pop
fmul
cmp
cmpsb
lock
mov
adc
push
and
vcvtsd2si
sahf
xchg
sbb
push
es
faddp
push
sbb
push
rcrb
xlat
jle
add
push
daa
or
and
inc
aas
xchg
adc
jge
addr16
mov
xor
ljmp
xor
or
icebp
insl
add
push
mov
and
lock
sbb
jle
or
xlat
mov
push
adc
pop
cltd
orb
add
inc
jmp
adc
call
sub
add
add
in
gs
out
je
lods
aaa
pop
adc
rorb
jle
push
lret
inc
inc
int3
call
movsb
fcompl
jle
rolb
xchg
inc
fsubrs
inc
popa
repz
xor
xchg
adc
bnd
jmp
jmp
mov
mov
push
or
or
sbb
cmp
add
mov
or
xchg
test
loope
pop
dec
push
test
and
popa
call
push
lods
test
add
lods
mov
xchg
in
jmp
pop
sbb
cmp
pushl
dec
jle
mov
pop
mov
inc
repnz
push
xor
mov
sbb
and
add
popf
mov
push
loopne
shlb
cwtl
pop
mov
cs
or
mov
pop
xor
push
test
fisttpl
mov
mov
loope
adc
hlt
cmpsl
sbb
stos
fisttpl
push
es
inc
sbb
clc
call
sub
inc
rcll
fs
mov
in
mov
loope
shrb
push
pop
inc
cmovno
push
imul
adc
or
xor
and
xor
fists
push
rorl
test
nop
cmpsb
nop
dec
sbb
adc
adc
cmp
das
aas
aaa
add
push
mov
add
xor
lds
jmp
push
push
xlat
xchg
lcall
and
adc
in
or
lods
fsts
clc
fimull
push
inc
or
pop
insb
adc
mov
iret
dec
inc
stos
dec
je
add
pushf
inc
and
scas
xchg
push
jne
push
inc
das
sub
lods
movsb
sarl
cmp
xchg
push
lock
pop
imul
rorb
push
or
test
sub
add
stos
push
fmull
push
add
or
push
clc
xchg
rolb
xor
add
pop
add
or
test
add
adc
or
sub
mov
cmp
xor
aad
mov
cwtl
fwait
or
add
inc
divb
sbb
xor
int3
ret
call
mov
add
jl
loope
fdivrs
mov
xchg
dec
lea
ss
cmp
push
int3
fsts
js
mov
bsf
repnz
mov
dec
mov
push
lods
out
push
and
movsb
lahf
mov
pop
mov
dec
loop
dec
jmp
lea
idivb
pop
jae
ss
push
js
shlb
mov
mov
mov
jo
imul
mov
sbb
cwtl
sub
fcompl
sbb
hlt
and
sub
add
or
mov
sbb
sub
je
adc
shlb
ret
xor
mov
fwait
push
and
push
adc
lock
xchg
cmpsb
inc
hlt
xor
sub
scas
adc
or
push
adc
add
adc
test
outsl
xor
testb
push
push
mov
mov
pop
cs
add
jbe
dec
cmp
orl
xor
add
and
arpl
pop
cmpl
xor
lock
pop
sub
mov
push
iret
inc
add
dec
test
adc
pop
sbb
or
sbb
andl
sahf
add
lock
pop
popa
in
ret
movsl
pop
inc
and
mov
xorps
push
jg
jmp
loop
loope
pop
add
and
xchg
loopne
clc
and
out
cvttps2pi
mov
push
xchg
pop
jne
mov
pop
inc
xorl
mov
sub
ffreep
push
rcl
push
cmpl
test
jns
fsts
dec
leave
cwtl
nop
xor
lahf
pop
shrb
or
mov
sub
fidivl
ficoml
test
adc
pop
sbb
pop
shlb
xchg
fucom
popa
pusha
sub
add
add
fimuls
lock
dec
or
jmp
loope
jl
push
mov
out
aad
repz
or
sbb
ss
mov
fcoml
jb
or
nop
xchg
lock
cmpsb
insl
orl
clc
fs
mov
cmpb
mov
xchg
in
aad
cmp
jecxz
ja
sub
mov
and
or
dec
js
les
sbbl
cmp
dec
les
loopne
mov
clc
inc
dec
cmp
and
xchg
shlb
or
pop
dec
fisubl
test
dec
fwait
sub
dec
jne
cltd
nop
imul
movsb
sbb
scas
rorb
mov
jl
add
in
in
fcomps
or
or
ret
repz
xor
enter
fadds
jae
dec
jle
add
or
inc
repnz
jl
cld
int3
push
inc
bound
add
mov
jle
aas
jl
inc
xor
in
aam
jg
stc
xchg
cmp
jb
fxch
sub
cmp
add
mov
push
jae
pop
xor
ds
lret
push
in
das
mov
shrl
push
xor
sub
ret
push
ss
add
pop
push
xchg
sub
es
mov
call
sub
pop
add
hlt
andb
or
test
in
leave
or
and
push
dec
andl
call
sbb
les
dec
adc
stos
fst
in
jo
dec
pop
xchg
in
jg
pop
mov
lock
scas
adc
fmuls
in
inc
sbb
push
rcr
adc
fwait
js
push
stos
cmpb
add
push
jb
xchg
in
in
scas
imul
and
stc
lods
pop
hlt
add
jmp
dec
subl
ja
inc
test
push
add
aam
or
sar
jbe
je
fidivl
test
aad
popa
in
push
inc
gs
jmp
dec
or
aaa
rolb
and
cmp
xor
inc
add
pushf
mov
pop
pop
loopne
daa
shll
cltd
aam
fs
cmpsb
sub
inc
or
mov
cmp
xchg
cmpsl
in
sbb
sub
inc
addb
cs
leave
mov
add
adc
xchg
dec
adc
and
dec
xor
xor
cmp
dec
xor
and
dec
outsb
and
add
addr16
test
inc
add
loopne
fildl
rol
cmp
int3
rcrb
loopne
and
imul
popf
push
clc
jmp
pop
xchg
lock
icebp
mov
lock
jne
mov
hlt
add
jmp
inc
es
and
scas
in
add
adc
fwait
aam
add
sbb
jb
movsb
es
or
mov
jl
imul
fbstp
and
test
pandn
adc
fmull
mov
mov
mov
inc
adc
push
pop
fisubl
adc
and
sub
mov
es
jns,pn
call
js
sub
xor
and
es
std
clc
jg
sub
sbb
cwtl
sbb
dec
mov
aam
fidivs
loopne
or
loopne
outsb
in
sbb
pop
rorl
sahf
test
ret
andb
pusha
enter
pushl
iret
lods
adcl
and
cltd
rcll
rorl
add
stc
in
xchg
push
push
test
inc
and
stos
lahf
imul
cmpsb
mov
in
add
dec
call
call
add
fsubrs
push
push
sbb
sbbl
out
lock
dec
repnz
add
les
jg
shlb
fs
push
in
or
call
ss
adc
cmp
nop
mov
adc
loope
nop
mov
xchg
cli
test
mov
mov
cwtl
ficoml
fmuls
out
mov
out
testb
sub
jae
sbb
pop
cmp
dec
shlb
mov
lock
out
popa
les
add
in
loopne
mov
fcomp
aam
jno
adc
mov
push
mov
sbb
jno
nop
pushf
fmull
shrd
mov
pushf
pushf
enter
push
popf
aam
and
popa
stc
movsb
push
pop
repnz
xchg
sbb
stc
mov
call
dec
ret
add
movb
xor
test
dec
stos
pop
enter
mov
out
fmul
enter
dec
dec
cld
notb
rcr
lock
sbb
push
or
mov
stos
push
push
js
lds
xchg
or
inc
pop
and
loopne
mov
inc
rcl
xchg
loop
cmp
iret
cmp
insb
lret
mov
rorb
adc
inc
adc
mov
jp
rep
fcomp
movsb
and
or
int
inc
loopne
fmul
mov
push
es
mov
pop
add
jb
cmp
fisttpll
test
enter
jns
xchg
flds
subl
cmp
xchg
push
in
cs
inc
inc
mov
or
xlat
mov
jmp
fisttps
pop
insl
adcb
lods
pop
pop
or
or
pop
lahf
add
addb
inc
pusha
ficoml
jo
jl
out
mov
fisttps
adc
mov
sarb
sub
adc
insl
fisubl
cltd
pusha
inc
add
xchg
jo
adc
cmp
aad
xchg
add
pop
or
lret
test
lock
mov
cmp
mov
and
scas
adc
lods
inc
sub
leave
adc
cwtl
and
sbb
in
lock
insl
and
push
and
movsl
xchg
inc
xor
cwtl
jg
dec
fildl
test
lds
insl
or
rcll
cmpsl
subb
add
in
jecxz
mov
test
xchg
outsl
pop
jb
mov
push
psrad
add
fsubr
lcall
fwait
in
sahf
hlt
jl
push
pop
adc
pushf
cmp
movsl
mov
ret
xchg
fidivs
sbb
in
nop
fwait
lock
push
or
das
mov
push
sbb
lods
in
js
mov
sub
xchg
push
pop
pop
imul
mov
fsubl
shlb
decb
test
xchg
scas
int3
lea
mov
and
stos
mov
add
sbb
or
jecxz
inc
xchg
js
popf
or
push
cmp
nop
or
or
cmp
nop
inc
or
or
push
or
sub
cmp
xlat
mov
sub
call
pop
push
sub
mov
and
sbb
or
lahf
test
addb
xchg
sbb
insb
shlb
push
xor
xchg
dec
mov
pop
adc
dec
sub
or
les
sub
jb
call
adc
int
mov
pop
mov
fcompl
jl
repnz
mov
xor
mov
in
cmc
or
mov
cwtl
cmpsb
mov
int3
and
stos
movsb
xchg
xor
nop
decb
popf
es
and
mov
mov
cmp
pop
adc
lock
clc
inc
add
mov
push
push
push
or
test
mov
cmpsb
mov
test
int
fsubr
push
enter
mov
mov
jno
or
imul
test
inc
test
xchg
out
out
ret
xor
std
int3
sbb
pusha
jae
inc
sti
movsl
outsb
and
movsl
adc
xchg
sub
jmp
jns
push
xchg
sub
mov
and
icebp
js
inc
lods
imul
xchg
xchg
xchg
xchg
int3
enter
xchg
xchg
xchg
mov
xchg
xchg
xchg
xchg
cwtl
mov
cmp
nop
dec
outsl
movsb
push
roll
inc
mov
adc
movsl
add
or
cmpsb
sti
sub
xchg
and
rolb
push
and
jne
sarb
xchg
rcrb
test
movsb
xchg
nop
xor
aas
pushf
sbb
es
lods
xchg
jb
lds
mov
mov
enter
pop
xchg
cwtl
mov
nop
nop
cmpsl
jne
sbb
xchg
repz
sub
lods
jne
or
test
push
lds
mov
dec
pop
pusha
jo
fidivl
sbb
in
in
cmp
push
movsl
test
adc
jmp
sbb
dec
in
shll
xor
jo
fdiv
add
sbb
ret
xchg
xor
sub
rcl
push
mov
push
dec
stos
add
and
stos
lahf
pusha
sub
sbb
add
xor
test
jmp
nop
add
call
inc
or
add
outsl
loope
inc
and
push
pop
aam
inc
cmp
push
out
les
icebp
bound
aad
xchg
mov
mov
and
adc
add
xor
roll
pop
fdivrl
mov
orb
mov
aas
imul
rorb
dec
int3
dec
or
stc
enter
mov
mov
dec
loope
dec
mov
push
in
cltd
fsub
call
test
fdivs
sub
xchg
and
or
mov
mov
call
pushf
std
xchg
mov
xlat
jb
adc
cwtl
push
and
sub
and
adc
mov
cltd
fisubl
jecxz
nop
dec
mov
or
scas
and
push
arpl
push
inc
in
sbb
inc
push
mov
mov
nop
scas
in
cmp
dec
and
loope
xchg
in
mov
xchg
xor
xor
rclb
les
pop
jnp
aam
inc
sub
fcmovu
sub
adc
sti
inc
inc
out
shl
int3
xchg
dec
lods
imul
arpl
aam
bound
arpl
inc
stos
call
sub
fadds
inc
lea
loope
inc
or
lock
or
mov
sbb
mov
pop
pushf
inc
fimull
add
push
mov
mov
les
pop
adc
je
mov
ret
push
fsts
lods
ffreep
adc
aam
das
dec
dec
inc
push
clc
aad
je
xchg
adc
pop
cmp
adc
in
add
sti
es
iret
dec
mov
sti
sar
cmp
lea
cmp
mov
push
lahf
push
mov
dec
loope
xor
aaa
sbbl
enter
or
xchg
nop
mov
lret
flds
jmp
pushf
add
mov
aaa
test
fdivrl
push
fsubr
mov
in
int3
enter
sub
mov
or
in
pop
xor
dec
jb
and
mov
mov
lods
test
pop
call
das
aas
rolb
jg
test
dec
jg
insb
out
ficoml
lcall
fs
rcr
inc
push
sbb
nop
iret
pusha
out
out
mov
adc
ffree
shll
cltd
push
pop
mov
xor
mov
fsubr
push
fistpl
shrb
inc
mov
mov
pop
lret
rcll
iret
dec
enter
or
pop
mov
dec
or
inc
mov
inc
lods
pop
shll
mov
arpl
mov
mov
inc
xor
lds
inc
lock
icebp
mov
mov
inc
pop
arpl
ret
xchg
imul
adc
movsl
xchg
jl
fwait
mov
mov
stos
inc
xor
add
lea
adc
or
in
pop
movsb
in
adc
push
pusha
aas
popa
push
bound
or
outsl
add
inc
movsb
arpl
outsb
fwait
js
filds
xor
jmp
pop
mov
fistl
cmp
lods
mov
xchg
cwtl
add
enter
loope
sub
and
fists
add
test
movsb
inc
add
inc
fisttps
cmc
and
ror
adc
and
or
mov
adc
dec
and
fiadds
lahf
rorl
or
push
push
cmp
fistpl
xchg
ljmp
lcall
add
or
iret
pop
xor
cmpl
or
pop
mov
ret
test
fldl
sub
mov
push
lods
ret
or
lock
mov
add
mov
and
lds
push
pop
outsb
in
mov
and
fs
test
int3
push
push
shll
fadds
push
xchg
enter
fcoms
pop
push
les
ret
mov
loopne
sub
or
popl
test
aam
push
roll
or
les
mov
scas
jo
pop
pusha
leave
sbb
sarb
or
outsl
lea
xor
mov
or
push
stos
or
test
rcl
in
aas
jne
pop
add
call
jecxz
push
imul
xchg
sbb
or
jle
or
adc
add
rolb
jnp
xor
test
adc
xor
vpmacssww
rol
pop
nop
pop
push
adc
adc
mov
in
xor
mov
pop
pop
int3
pop
les
fst
pusha
shlb
scas
cmp
mov
inc
mov
mov
jno
cmpb
mov
mov
mov
pop
call
mov
insb
js
xchg
fisttpl
push
mov
addb
add
mov
or
les
add
pushf
or
fs
shlb
movsb
sbb
or
ret
inc
lods
sahf
push
in
inc
mov
rorl
repnz
pop
jg
iret
inc
add
xor
xchg
adc
aam
fs
sub
std
mov
cs
sub
mov
and
fisttps
negl
adc
out
and
pop
push
fidivrs
jo
arpl
mov
adc
insl
cmp
cmp
dec
sub
or
loop
lock
insb
leave
aas
les
cwtl
leave
sbb
push
neg
out
mov
xchg
pop
jb
out
fsubr
out
aas
xchg
push
mov
loop
nop
addl
add
or
leave
mov
adc
sbb
movsb
lret
jne
int
push
mov
cmp
lret
and
and
lock
mov
test
lods
add
jmp
movl
cmp
pusha
in
cmp
xchg
dec
fwait
js
push
andb
mov
cltd
in
cwtl
pusha
xchg
dec
leave
push
in
push
dec
push
fcoms
push
enter
sbb
clc
int3
enter
pop
jb
pop
int
pusha
int
loopne
imul
push
xchg
test
arpl
pop
xor
enter
or
jecxz
out
aam
fbstp
shr
xor
and
sti
enter
or
adc
and
jb
and
push
nop
outsl
sbb
aaa
adc
in
jae
sysenter
fsubrl
cwtl
adcl
lods
bound
and
add
mov
stos
lock
add
pop
test
in
cs
add
test
imull
xchg
xchg
fcomps
push
or
adc
inc
inc
mov
andl
faddl
andl
outsl
nop
or
xchg
add
scas
sbb
fdivrl
std
stos
dec
sub
pop
push
fs
bound
fildl
cmp
adc
leave
loopne
mov
inc
sub
or
sbb
leave
nop
out
cmp
ret
jmp
or
out
mov
sbb
xor
xchg
stos
or
scas
rcrb
stos
pop
jmp
sub
rorl
xlat
cld
sub
shll
push
inc
call
popl
pop
lea
cld
adc
in
and
dec
shrb
call
add
sarb
clc
cltd
mov
mov
or
sbb
clc
xchg
in
xorb
mov
adc
jne
xchg
xor
mov
je
or
mov
je
mov
shl
fadds
sbb
dec
clc
mov
xchg
sbb
sbb
xorl
test
fdivs
push
test
push
loopne
scas
les
es
adc
push
shrb
fs
aam
data16
mov
mov
and
fcoml
bound
sub
test
add
or
sub
in
adc
adc
or
push
orb
pushf
jmp
mov
inc
or
or
lds
sbb
inc
pop
xchg
and
nop
mov
in
add
adc
sbb
lcall
sbb
mov
inc
xchg
and
test
or
jne
adc
test
mov
dec
add
popa
ss
push
jo
add
lcall
xor
fcomp
lock
mov
filds
xor
jns
call
in
xchg
test
mov
lahf
mov
decb
fwait
mov
xchg
fcmovnb
and
ficompl
ss
jl
insl
pop
insb
cltd
fs
dec
hlt
pop
push
fs
dec
es
dec
add
add
xchg
xor
xchg
movsb
cwtl
inc
pusha
fmul
and
rclb
stos
sbb
add
enter
cmc
les
and
orb
jb
test
dec
inc
cmovl
leave
mov
js
dec
je
and
dec
cwtl
aam
push
aam
xor
xor
dec
xor
sbb
and
adc
mov
je
loopne
jecxz
mov
test
and
mov
loopne
xor
aad
push
push
xchg
pop
and
pop
xchg
int3
sub
adcb
and
mov
out
mov
mov
mov
arpl
sbb
test
and
imul
cltd
pop
add
jno
add
movsl
sbbb
mov
xor
sbb
and
mov
or
xchg
add
pop
ret
loope
mov
fdivs
sub
outsl
rorb
pop
bnd
mov
mov
or
dec
xlat
add
rolb
test
and
enter
add
clc
fistl
mov
add
cltd
int3
dec
cmpsb
pop
or
fcmovnb
inc
and
adc
push
sbb
and
mov
sub
mov
pop
sbb
lods
test
xor
or
push
adc
sbb
cmp
add
add
es
sub
mov
sbb
pop
ret
ret
pop
test
push
or
pusha
mov
add
ljmp
jne
and
nop
add
xor
orb
lock
mov
jbe
fcmovne
push
mov
push
loope
or
add
loop
ja
rorl
sub
xchg
jo
jb
test
sub
pop
ffree
test
adc
adcl
popf
div
lock
adc
jo
mov
add
cld
repz
xor
sub
push
adc
lret
jno
stos
popa
adc
and
pushl
mov
out
adc
test
shl
jbe
rcl
aam
aam
xor
dec
sub
add
xchg
jbe
arpl
stc
fdivrp
xchg
dec
sbb
dec
xor
and
sbb
cli
push
repnz
or
cld
cli
scas
fs
xor
and
cmp
xchg
sbb
xchg
dec
cmp
and
in
and
sti
adc
mov
je
sti
mov
add
and
shll
jae
nop
dec
cmpsb
or
mov
aad
sbb
mov
ficoml
push
cs
roll
loop
mov
call
inc
push
movsl
lea
rcll
inc
imull
fs
je
insb
scas
mov
fidivrl
pop
pusha
sub
insb
adc
jo
add
sbb
jo
mov
cltd
ds
rorb
add
adc
pop
sub
ss
cwtl
push
andb
in
add
in
inc
faddl
pusha
jmp
mov
jl
pusha
fdivr
or
dec
ds
push
fisubl
pop
xor
shlb
pop
lods
movsb
adc
add
xchg
testb
cmp
and
nop
test
mov
xchg
and
insl
push
repnz
mov
adc
xchg
pop
or
rcrb
and
rcll
push
jb
ja
std
movl
add
jo
dec
push
sub
jl
enter
subb
subl
clc
cli
xor
xchg
jmp
filds
jne
push
mov
cmp
mov
nop
mov
sub
imul
or
and
nop
xor
push
in
xor
mov
imul
xor
xor
mov
mov
addr16
out
dec
sbb
mov
xchg
loope
adc
push
stc
xor
ret
scas
pop
stos
cmp
pop
loopne
out
movl
push
int3
xlat
inc
add
push
or
jns
iret
shll
lock
add
pusha
mov
push
xchg
mov
jb
mov
add
adc
mov
dec
dec
push
inc
decl
fnstsw
jo
or
cmp
dec
mov
fistpl
or
lret
or
jnp
mov
add
and
dec
pushl
sub
rcll
mov
mov
jns
adc
into
adc
js
je
jns
out
jo
push
lcall
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
mov
push
push
or
pop
popa
bound
jmp
addr16
insl
outsb
outsl
jo
jb
je
jbe
js
jp
xor
xor
stc
fnstsw
cmp
das
daa
adc
mov
rcll
xchg
adc
push
or
jo
decl
cmp
adc
add
sarl
clc
clts
movb
divl
mov
je
jb
outsl
arpl
pusha
addr16
fs
out
sbb
push
dec
imul
push
sti
jne
push
gs
xor
cs
push
stc
iret
adc
popa
and
popa
je
outsl
outsb
push
push
cmp
jns
pop
lock
rdpmc
add
mov
add
pop
sub
cmp
lods
and
jb
js
je
jb
std
insl
mov
cmp
or
outsl
add
add
add
insb
repnz
push
gs
pusha
jb
xor
popa
mov
popa
jb
mov
inc
imul
dec
xor
xor
std
push
aam
cmp
cmp
jnp
sub
dec
and
jns
add
das
lock
gs
jbe
pop
push
insl
bound
daa
dec
outsl
jbe
dec
arpl
jo
push
jo
sub
addr16
out
popa
mov
dec
jne
xchg
mov
inc
jo
imul
jb
push
inc
into
mov
into
mov
pushf
jae
popl
fcompl
into
ja
inc
push
jne
xor
mov
daa
push
cmpsl
cwtl
mov
push
jne
dec
js
out
mov
push
jne
xchg
pop
dec
rcrl
push
popa
das
jo
or
mov
lock
cmp
inc
ud0
add
adc
xor
sbb
pop
adc
push
sbb
and
cmpsl
and
sub
sub
cs
movsl
cmp
cmp
adc
ljmp
rcrl
cmp
jge
jg
cmp
pushf
lcall
addr16
out
mov
pop
or
adc
divb
pop
push
inc
insb
jae
scas
jmp
fs
mov
test
jmp
out
es
xor
insl
and
jb
jbe
aaa
cmp
dec
dec
push
push
sbb
inc
sbb
fimuls
inc
and
add
xor
aas
aad
sbb
push
jo
imul
mov
pop
mov
je,pn
jo
mov
and
mov
and
push
popl
ds
int3
mov
je
or
xorb
mov
int
inc
popa
and
daa
mov
jne
loopne
data16
xor
and
insl
push
sbb
mov
inc
cs
xor
and
jne
dec
mov
rol
lcallw
out
es
or
add
xchg
push
and
or
imul
sub
or
fs
cli
jb
bound
inc
jo
inc
push
and
push
ds
fidivrl
int
push
mov
loope
push
daa
sub
test
das
arpl
cmp
roll
arpl
jge
das
andl
inc
in
inc
xchg
xchg
insb
imul
imul
int3
or
push
addb
mov
shll
xchg
shl
jns
push
fbld
ss
cs
lock
adc
jbe
shll
hlt
nop
or
es
dec
add
add
cltd
mov
in
ja
outsl
outsl
ss
stc
or
fs
jo
cli
jbe
add
inc
test
xchg
push
mov
jbe
push
gs
loopne
lds
mov
xlat
outsl
push
or
pop
scas
xor
lcall
bound
cmp
idivb
ljmp
imul
push
jo
imul
mov
jno
rol
pusha
aad
push
push
leave
nop
fs
sbb
call
data16
adc
jns
add
pop
fsubs
push
and
pop
push
pusha
test
sub
addr16
jmp
jae
xor
fcompl
roll
pusha
jo
sub
cmpb
adc
push
sub
lret
inc
pop
add
sub
pop
dec
jmp
lods
jge
cmp
push
and
cmp
lods
vmovd
pop
inc
inc
and
fisttpll
and
jg
jmp
xchg
ss
pop
loopne
add
test
push
rol
das
lret
repz
repnz
jno
icebp
pusha
inc
mov
clc
ret
movsl
add
rcrl
xorl
push
adc
mov
imul
out
ret
add
add
xor
fldl
jg
js
jae
sbb
jae
je
pop
dec
pop
add
add
mov
xchg
sub
stos
mov
jb
xchg
adc
pop
movsl
jge
adc
add
add
add
add
pop
icebp
lcall
cmp
pop
or
aaa
ds
push
pop
hlt
and
divl
push
js
or
sub
add
sbb
addb
fiadds
xchg
test
add
aaa
mov
pop
daa
push
cmpb
addr16
push
push
and
sub
jb
int3
push
xor
ja
mov
cmpsb
shr
dec
icebp
adc
push
stos
int3
js
outsl
xor
jo
dec
rorb
sbb
add
lea
leave
and
nop
and
xchg
xchg
bound
es
flds
push
or
xor
xchg
push
inc
ds
pop
pop
dec
cmp
test
and
loope
adc
cmp
loope
adc
data16
adc
adcb
pop
push
mov
mov
adc
or
stc
nop
or
and
in
dec
add
xchg
add
mov
adc
add
dec
push
or
add
mov
mov
dec
cmp
add
add
shrl
lods
popf
cs
add
rolb
mov
aaa
add
pop
insl
add
and
decl
add
addb
xchg
lea
call
xchg
xchg
cwtl
cltd
lcall
mov
cmpsb
cmpsl
test
stos
stos
lods
lods
scas
scas
mov
pushl
mov
mov
mov
ret
enter
int3
int
iret
sar
call
rcl
aam
xlat
fcomp
fcmovu
loopne
loop
in
out
call
in
out
out
lock
xchg
push
repnz
cmc
div
clc
stc
cli
sti
cld
std
inc
inc
sbb
sub
add
shll
mov
push
insb
aas
decl
inc
dec
sbb
push
pop
outsl
ja
or
aas
das
inc
cs
jae
jb
bound
dec
jecxz
sbb
ss
popa
fisubrs
mov
inc
arpl
mov
cmp
pop
lea
dec
mov
outsl
js
push
push
inc
push
xchg
ss
mov
inc
sahf
fidivrs
jae
insb
gs
mov
dec
mov
push
test
aaa
insb
in
dec
imul
pop
jns
inc
mov
imul
popf
or
inc
jns
daa
pop
addl
push
jns
gs
rol
mov
test
jne
push
lcall
insb
push
sarb
pusha
les
push
mov
arpl
push
inc
jbe
test
push
push
lahf
adc
fs
and
add
cld
pop
lcall
push
adc
mov
sub
mov
lahf
lock
inc
or
pop
fisubrl
jae
cmp
dec
loopne
mov
pusha
insb
call
movsl
jae
addr16
subl
gs
dec
scas
jo
mov
xchg
arpl
push
push
add
mov
push
dec
testl
dec
in
loope
push
outsb
mov
lds
fildll
dec
jge
ret
adc
jg
imul
call
mov
xor
inc
in
nop
lods
sbb
popa
insl
or
fadd
mov
sub
push
lea
jmp
mov
outsl
xchg
daa
xchg
in
mov
test
cmp
cmp
cmp
cmp
push
das
push
mov
jnp
sub
es
jle
in
insb
sub
sub
addr16
sub
xchg
pop
push
cmp
jns
pop
jmp
cmp
inc
cmpsl
add
dec
mov
pop
cwtl
jb
sbb
push
jb
pop
addr16
imul
push
cltd
loope
mov
ds
push
and
and
cltd
es
jo
sub
push
aam
push
lahf
sub
or
inc
add
push
clc
add
loopne
enter
jns
mov
jp
dec
adc
inc
idivl
imul
in
test
ss
sarl
push
xchg
nop
push
mov
lret
je
inc
or
stc
cmp
xor
data16
push
fs
cmp
pop
mov
xor
out
pop
push
push
push
mov
test
push
sahf
testl
out
lret
xor
and
sahf
out
and
add
incl
sahf
out
sahf
mov
fucom
jns
sbb
incb
mov
cwtl
jo
inc
inc
cmp
cld
std
lock
cmp
repz
lcall
jo
ljmp
aam
pop
pushf
mov
lcallw
jo
push
dec
jns
push
xor
aad
ljmp
jge
js
outsl
pop
cmpsb
bound
fs
sub
jno
je
test
push
lahf
push
lods
pcmpgtw
xor
add
jle
popf
xchg
push
insb
xorb
dec
jae
insb
inc
gs
mov
sbb
dec
inc
dec
xor
incb
dec
push
push
ret
push
dec
inc
dec
add
dec
dec
inc
add
lcall
inc
push
das
adc
sub
adc
inc
outsb
fdivr
incl
popa
into
mov
mov
pop
jnp
std
adc
outsb
mov
ds
pop
adc
clc
in
stc
lret
sbb
jb
xchg
jge
arpl
cmp
adc
dec
mov
jp
adc
fisubrs
and
iret
mov
xor
iret
imul
adc
inc
inc
mov
mov
sub
fwait
jns
pusha
pop
ss
sbb
pop
jns
ds
xor
incb
mov
xor
dec
popf
pxor
xor
lret
aaa
push
div
inc
sub
dec
xchg
cmp
push
int
das
xchg
pop
and
xchg
lret
sahf
icebp
mov
call
loopne
cmp
inc
mov
xchg
push
pop
popa
push
or
scas
int
mov
ds
leave
loop
mov
xchg
dec
xchg
ret
ljmp
mov
iret
adc
out
mov
pop
pop
repnz
or
xor
and
es
push
hlt
flds
sbb
mov
push
dec
push
push
adc
or
outsb
jbe
and
mov
das
inc
ret
add
push
gs
fwait
ret
icebp
add
imul
scas
push
aam
dec
push
dec
push
cs
push
into
mov
adc
pop
dec
add
pop
pop
push
or
outsl
xchg
sbb
pop
adc
push
pop
dec
sub
pop
push
sbb
dec
cmp
pop
pop
push
push
pop
pop
imulb
std
cmp
sbb
dec
pop
inc
pop
or
jb
mov
adc
ss
push
cmp
xchg
add
pop
jle
fucomp
adc
sub
push
push
pop
inc
pop
push
pop
pop
add
inc
inc
mov
out
fiadds
sbb
pop
aas
or
sbb
sbb
inc
cmp
out
mulb
lods
push
sbb
or
dec
sbb
push
ljmp
add
and
push
dec
sub
adc
and
dec
cmp
pop
push
std
cmp
add
inc
push
daa
and
sub
sub
in
divb
inc
and
and
adc
sbb
dec
aaa
add
sbb
dec
adc
daa
dec
daa
push
or
inc
addb
mov
and
push
push
inc
or
lret
pop
aad
pop
pop
dec
or
push
shl
push
add
test
push
mov
fiaddl
push
push
push
cmp
inc
pop
pop
in
mov
lock
pop
pop
pop
mov
push
adc
ss
or
dec
sti
or
pop
dec
sbb
sbb
pop
dec
pop
fidivl
in
das
sbb
xor
xchg
push
push
or
and
dec
es
fimull
int3
or
or
or
clc
xchg
mov
xor
sbb
pop
pop
and
js
sub
popf
stos
add
cmp
add
rolb
cmp
sarb
pop
push
gs
es
dec
adc
ds
inc
inc
inc
sub
inc
or
cmp
xor
pop
inc
push
pop
in
add
cmp
in
add
cmp
and
push
mov
pop
inc
and
mov
pop
sbb
lds
pop
adc
dec
nop
dec
cwtl
in
push
jnp
mov
adc
faddp
xor
push
loopne
stc
xor
iret
lock
push
adc
xor
jl
cmpsl
xor
pusha
push
cmpb
fists
jg
push
mov
shlb
popf
out
lock
pop
xor
dec
and
xor
adc
mov
hlt
push
scas
pop
ss
pop
mov
pop
and
pop
push
ss
jp
cmp
outsl
insl
add
pop
and
outsb
popa
sub
jmp
popa
push
pusha
push
or
popl
inc
imul
outsb
or
bound
xor
and
push
or
xchg
pusha
push
jo
imul
push
loopne
push
push
xor
jns
out
nop
shl
push
fcomip
cmp
push
jo
mov
and
out
cmp
and
push
lock
cmp
mov
adc
push
pop
sub
pushf
pop
inc
les
pop
push
push
je
mov
scas
cs
add
pop
aam
xlat
inc
add
cmp
sbb
mov
adc
js
inc
cmp
stos
jbe
mov
dec
pop
or
div
sbb
sbb
nop
ss
jmp
sbb
fisttpll
xor
or
push
int
iret
fistpl
cmpsb
push
cmp
xor
push
jmp
jb
push
arpl
cmp
add
cmp
adc
popf
pusha
sbb
inc
xchg
arpl
and
push
dec
pop
push
fbstp
cwtl
or
es
sub
sub
js
aas
push
inc
lea
aaa
push
jp
clc
fisubrl
in
pop
push
pop
cmp
ds
pop
shll
out
pop
xor
push
faddp
cmp
or
or
jge
dec
inc
ja
push
pop
xchg
mov
cld
xor
out
pop
ds
jo
cmp
add
mov
push
push
xor
cmp
outsb
scas
adc
pop
inc
pop
add
pop
xor
push
pop
rcrb
mov
pusha
out
jl
and
or
mov
cmp
pop
cs
adc
push
cmp
inc
add
xor
push
cmp
rol
push
daa
cmp
push
and
adc
loopne
jmp
push
cltd
pop
xor
sub
in
mov
ss
pop
ret
inc
cwtl
and
stos
pop
cmp
imul
adc
pop
push
cvtps2pi
mov
mov
dec
rcrl
push
cld
dec
sbb
adc
loop
outsl
ds
ss
xor
add
jns
lcall
or
cmp
stc
insl
xchg
inc
xor
enter
push
xchg
push
push
sbb
or
push
aad
or
mov
clc
pop
pusha
dec
and
pop
in
fstpl
adc
es
pusha
adc
sbb
cmp
mov
push
pop
sbb
pop
add
iret
daa
sub
jp
dec
xor
or
cmp
stos
lods
pop
push
lods
dec
pop
inc
pop
push
popa
mov
pop
xor
cmp
shll
and
lret
les
test
mov
mov
or
add
adc
sub
add
pop
or
popa
cmp
jne
stos
add
aas
push
lahf
and
into
xchg
dec
sahf
or
ss
adc
xlat
dec
dec
add
dec
jbe
addl
repnz
aad
adc
and
inc
adc
pop
xchg
inc
cmp
cmpsb
cmp
or
sub
or
sub
inc
cmpsb
push
mov
and
or
cmp
inc
daa
pusha
addr16
test
cmp
sub
adc
xor
or
or
movsl
mov
stc
xor
jmp
sbb
into
inc
dec
adc
pop
icebp
cmp
cmp
daa
push
pop
xor
pushf
pusha
cmp
push
adc
sbb
pop
xchg
fistl
cmp
sbb
cmp
sub
mov
push
push
aas
cmp
cmp
pop
push
sbb
cmp
and
test
mov
mov
ds
mov
sub
lods
pop
or
mov
dec
inc
mov
popf
dec
out
jae
insl
popa
imul
dec
mov
jo
pop
outsl
jo
mov
test
fisubs
push
ja
or
in
xchg
adc
push
in
cmp
repz
outsb
faddl
aam
xchg
out
add
int3
fisubrs
ja
mov
clc
sub
das
add
dec
add
xchg
and
or
jnp
cmp
out
je
sub
das
inc
addr16
inc
sub
add
xor
outsl
push
mov
inc
adc
pop
or
ficoml
pop
inc
adc
inc
fidivrl
adc
cmp
pop
inc
cmp
mov
hlt
add
xor
bound
sti
fs
sub
mov
xlat
mov
xchg
push
fwait
xor
push
js
dec
jge
push
inc
shlb
pop
ret
pusha
into
xor
cmp
imul
pop
fs
outsb
daa
push
shlb
les
stos
or
add
pop
lea
mov
lret
outsb
aaa
sbb
push
sub
lods
add
and
pop
sbb
pop
nop
or
pop
or
enter
inc
test
je
fadd
aaa
pop
pop
out
pop
pop
inc
cwtl
jne
das
dec
ret
out
jmp
movsl
orl
insb
outsl
jb
bound
mov
add
pop
push
push
je
adc
daa
jae
popa
mov
pop
je
aas
jg
das
shll
daa
push
das
and
std
cmp
js
add
add
and
jg
push
inc
pushw
aad
push
jo
fcompl
je
push
adc
jns
out
sbb
out
sahf
out
andl
cmp
add
dec
cltd
or
xchg
dec
shll
cwtl
pop
mov
fwait
or
or
adc
mov
jns
and
sub
xor
inc
fnstsw
data16
mov
mov
mov
add
sbb
sub
mov
insb
add
das
or
insb
ds
adc
pop
add
int
mov
add
dec
str
add
stc
das
and
pop
incl
and
push
push
das
xor
xor
dec
divb
mov
icebp
pop
mov
xlat
sub
pusha
or
sti
adc
sbb
mov
dec
sub
xor
je
mov
push
add
xchg
mov
jns
push
outsb
gs
loop
xchg
jb
sbb
imul
scas
aaa
jbe
add
nop
lock
les
lock
pop
je
sbb
dec
pop
xor
mov
sti
or
or
cmp
cmc
inc
adc
clc
das
sbb
stos
mov
mov
mov
es
dec
push
add
xchg
inc
ret
pop
xchg
mov
shrl
or
sbb
dec
jle
inc
insb
mov
mov
push
sbb
xor
ss
mov
push
mov
mov
adc
dec
push
xor
fnstcw
and
mov
or
and
push
adc
enter
fisttpl
ljmp
cmp
lea
dec
adc
jecxz,pt
inc
pop
pop
adc
pop
pop
lea
aaa
mov
xlat
or
movl
mov
lea
xchg
and
inc
insb
push
jbe
rclb
push
inc
sub
jns
push
add
mov
pop
in
addl
mov
xchg
or
or
sbb
push
push
mov
in
cmpb
push
pop
inc
fildl
lret
mov
sbb
adc
cmp
xor
loopne
sbb
lock
and
pop
push
push
sbb
inc
pop
inc
cmp
roll
lds
out
jbe
push
pop
out
testb
or
sub
das
or
aas
inc
sub
and
test
cli
dec
or
add
cmp
dec
inc
mov
int3
pusha
push
jo
shlb
and
nop
push
push
inc
mov
push
int3
xchg
in
fsts
rcrb
es
loopne
or
add
je
dec
and
ret
lea
loop
dec
push
pusha
jne
cld
cmpsl
push
jo
push
add
xor
clc
add
or
call
inc
xor
movsl
lea
inc
inc
cmp
inc
inc
rolb
xor
xchg
icebp
stos
xchg
ror
pop
subb
fs
dec
cmp
pop
cmp
cmp
pop
mov
adc
sbb
xchg
xor
and
in
or
sbb
inc
cmp
jnp
lahf
mov
inc
test
jns
shlb
adc
and
push
loop
nop
sarl
fwait
add
cmp
sbb
cmpsl
cmpl
push
lret
nopl
or
pop
cmp
xor
in
and
xor
pop
sbb
push
and
mov
sbb
dec
sub
or
inc
ss
pop
or
push
mov
gs
push
ss
and
inc
push
mov
inc
adc
bound
sbb
pop
subb
je
ds
jb
das
mov
and
gs
add
dec
xchg
sbbb
adc
jle
pop
add
gs
and
pop
call
sbb
jns
add
add
dec
mov
push
ss
insb
xor
sub
dec
mov
lahf
and
add
cld
ds
ror
or
addb
cs
push
fisttpl
push
xchg
addl
and
mov
scas
and
cs
pop
and
dec
add
push
ss
and
daa
ss
mov
daa
cmp
xor
cmp
xor
daa
dec
push
daa
sub
or
or
cs
and
pop
daa
pop
xor
test
or
sub
loope
cmp
inc
popa
clc
pushf
jle
or
fistps
push
sub
rol
xchg
pop
daa
scas
mov
or
ss
cmp
push
scas
sbb
lods
jmp
pop
pop
test
jge
mulb
test
and
adc
and
or
ficoms
and
xchg
push
adc
cmp
loopne
into
dec
cmp
out
push
push
imul
popf
xchg
cltd
or
mov
mov
es
mov
pop
xor
push
shl
sub
outsb
ja
sbb
cmc
mov
std
and
push
insl
sbb
ljmp
rcr
sub
test
add
movsl
push
pusha
push
testl
out
push
pop
fsubrs
adc
dec
lds
jno
and
lods
rolb
cmp
aad
pop
sbb
cmp
and
sbb
lret
arpl
sub
cmp
add
std
pop
inc
dec
fistl
push
rorl
push
mov
mov
es
addb
in
aam
add
les
sbb
push
les
arpl
pop
lret
jg
fisubrl
dec
lods
pop
and
pop
sub
lock
inc
push
sub
add
and
cs
test
push
push
pop
and
enter
movq
or
subl
mov
sub
es
inc
ret
addl
ljmp
inc
popa
inc
jl
cs
cli
outsb
cmp
notl
sbb
sbb
add
pop
xor
xchg
cs
das
dec
cli
movsb
ds
cmp
ds
jbe
push
js
sbb
inc
daa
xor
add
inc
add
clc
adc
xchg
movsl
inc
fs
cmp
add
xor
arpl
adc
push
xchg
dec
es
mov
xor
push
inc
sub
mov
add
push
push
push
lods
xor
lcall
icebp
jmp
add
aaa
mov
ds
add
stos
add
mov
imul
es
push
imulb
je
jo
repz
cli
add
je
ja
fs
or
stos
pop
jmp
mov
das
cmp
adc
inc
jb
xor
push
dec
pop
fwait
out
push
movsb
jae
push
adcb
add
sub
sub
push
xor
inc
xor
nop
aaa
push
cmp
adc
repz
mov
aas
and
push
nop
mov
jl
mov
push
rolb
push
push
orb
jecxz
inc
fdiv
pop
pop
inc
or
add
pop
les
dec
push
dec
dec
or
adc
pop
shlb
mov
mov
pop
sbb
pushl
ljmp
mov
ja
mov
lods
pop
dec
movsl
enter
push
push
mov
roll
ss
adc
cli
mov
sub
sub
clc
mov
cmp
mov
adc
ds
pop
sbb
insb
push
mov
mov
dec
fsubs
jmp
sbb
pop
test
xor
dec
xchg
pop
shl
lds
in
dec
push
adc
adc
mov
aaa
aaa
xor
mov
cli
cmp
mov
fimull
inc
sub
in
jb
subb
outsl
push
dec
in
mov
jae
pop
mov
cmp
leave
sub
sbb
sahf
cmp
or
clc
and
out
cmp
cmp
inc
sahf
dec
dec
sahf
enter
dec
pop
and
cwtl
inc
mov
insb
inc
js
cmp
scas
cmp
mov
test
loope
out
pop
int3
rorb
pop
sbb
call
mov
imul
cmp
xor
clc
outsl
incl
xor
inc
xor
xor
inc
xor
inc
push
xor
scas
adc
jne
jle
adc
adc
add
loopne
addb
js
add
adc
jo
jne
notl
nop
add
inc
dec
jp
push
push
jb
mov
scas
or
cmpsl
bound
je
bound
rclb
pop
or
loopne
fsubs
push
add
rclb
add
mov
pop
push
ja
rorb
in
or
das
and
shlb
es
sbb
stos
inc
xor
push
lahf
out
mov
sbb
mov
iret
mov
add
outsb
daa
sub
ja
sbb
inc
dec
xor
clc
outsl
sbb
lock
inc
sub
cmp
sbb
in
jo
rclb
mov
inc
fdivs
neg
fidivrl
pop
and
inc
pop
xor
pop
jns
lock
and
pop
fimull
subl
test
push
mov
dec
mov
pop
pop
in
das
cmp
or
add
dec
dec
sahf
mov
jl
lcall
xchg
int3
inc
int
pop
sahf
lods
sti
xor
stc
es
int3
setl
dec
sbb
outsl
cwtl
inc
cmpsl
xor
pop
addr16
data16
mov
xchg
push
insb
mov
cltd
iret
add
movsl
inc
push
dec
fcomi
es
push
push
pop
int
fwait
mov
mov
mov
xchg
idivb
xchg
aaa
shlb
bound
cmpsb
sarl
mov
add
cs
mov
mov
das
mov
cmpxchg
jae
std
add
sti
cs
jge
mov
scas
frstor
mov
inc
dec
or
dec
pusha
dec
sbb
sti
sahf
loop
push
mov
cmp
cmp
mov
sbb
idivl
sbb
cld
mov
sti
std
ja
cmp
add
loop
iret
repz
imul
dec
repz
dec
lret
dec
ds
mov
pop
mov
repz
mov
mov
sbb
mov
push
mov
fdivp
or
push
and
inc
out
sarb
mov
push
imul
sahf
stos
mov
adc
out
nopl
pop
dec
push
cwtl
div
jo
idivb
jbe
push
cmp
movsb
mov
test
int3
dec
in
jg
sarl
cs
ss
jo
sbb
int3
mov
push
adc
pop
cmp
adc
or
dec
xchg
es
idivb
jne
cmp
idivl
popa
push
pop
mov
mov
jle
push
pop
je
stc
cmp
xchg
mov
add
out
cmp
add
out
and
jl
repz
jecxz
push
and
cmp
out
mov
clc
cmp
repz
sub
stos
lret
out
icebp
sbb
dec
repz
xchg
jns
cmpsl
and
jae
ja
jge
mov
testl
or
jmp
aad
pop
dec
sbb
scas
sub
adc
and
and
rcrb
push
push
mov
xor
adc
pop
data16
add
mov
lds
push
mov
rolb
loopne
mov
adc
lahf
negb
push
and
pop
sbb
enter
adc
jg
pop
xchg
inc
repnz
iret
pusha
or
jbe
pop
adc
add
roll
repnz
dec
setnp
scas
gs
lcall
jae
fisttps
stos
out
lahf
aas
inc
push
out
out
adc
lea
inc
sbb
cmpsl
mov
addr16
roll
test
cmp
sbb
sbb
xlat
push
out
mov
and
out
add
mov
orb
or
ljmp
inc
dec
add
push
inc
fsubp
push
cmpsb
push
insb
pop
push
dec
pop
je
scas
jne
sti
jns
push
fistps
loop
out
or
das
push
repnz
mul
sbb
inc
imul
pop
ja
push
pop
retw
outsb
xor
dec
or
dec
mov
es
push
pop
push
xor
mov
mov
leave
and
push
add
ds
dec
pop
das
adc
jo
xchg
ja
and
pop
insb
je
push
addr16
mov
outsl
jae
es
outsl
and
mov
sub
aas
dec
adc
or
sahf
mov
push
cmpsb
mov
mov
lcall
xor
xor
xor
xor
cmp
cmp
movsb
stc
int
push
xor
xor
cmp
push
add
mov
out
sub
out
daa
push
push
push
xor
or
out
sub
or
stos
xor
add
les
loopne
pop
fcompl
dec
das
and
sti
xor
sahf
jp
inc
movsl
es
dec
pop
add
dec
jp
sbb
push
push
mov
pop
ds
and
lahf
bound
pop
push
jbe,pn
sbb
and
aas
add
out
sbb
dec
pop
push
adc
sbb
xor
imul
xor
sub
pop
and
sbb
and
outsb
push
inc
pop
pop
push
or
dec
pop
xor
in
push
loop
push
cli
xchg
data16
pop
orl
push
mov
daa
sbb
pop
mov
and
inc
loopne
je
sbb
mov
sbb
fdivs
jbe
imul
xor
add
icebp
push
cs
push
push
or
dec
repz
dec
jnp
mov
xor
ds
call
enter
or
das
sub
push
dec
push
push
jbe
mov
pop
or
xor
daa
lods
xchg
dec
and
subl
arpl
ds
call
xorl
bound
das
inc
inc
lods
lea
mov
sahf
aaa
mov
push
dec
aaa
lahf
mov
add
scas
ljmp
pusha
and
mov
loop
xorb
inc
sub
sub
lods
daa
and
inc
adc
mov
das
notl
lods
ss
iret
and
sarl
lea
adc
jno
stos
loop
dec
jno
imul
popa
daa
pop
icebp
push
and
xchg
push
loope
pop
dec
out
cmp
test
push
pop
push
repnz
or
sub
lret
or
cmp
or
cmpsl
push
das
mov
fiaddl
cltd
sub
js
lahf
pop
xchg
cmpsb
pusha
adc
outsb
popl
push
inc
mov
pop
int
addr16
pop
lea
addr16
jg
sti
add
rcr
push
sbb
sub
pop
fs
jbe
insl
addl
pop
mov
mov
mov
fwait
cmpsb
xor
aaa
outsl
mov
sbb
dec
arpl
adc
pop
push
ljmp
mov
xor
add
es
jl
aaa
jo
mov
movb
mov
imul
pop
dec
and
push
cmp
xchg
out
and
outsb
sbb
dec
js
fildl
jo
pop
ja
cmp
mov
mov
pop
icebp
sbb
shrb
aad
data16
and
lea
in
sub
adc
and
cmc
xor
and
and
add
bound
adc
cmp
das
pop
mov
lahf
imul
dec
dec
js
inc
out
sahf
or
cwtl
lcall
into
adc
push
loope
lods
jo
push
fcompl
and
das
cmp
push
jp
daa
fs
and
pop
addr16
addr16
push
dec
pop
pop
push
dec
and
mov
pop
and
add
sub
movsl
pop
sbb
xor
inc
test
xor
pop
je
mov
test
xor
cmp
and
jecxz
push
cmpsb
pop
xchg
or
inc
mov
cmp
aam
mov
sbb
push
fcomip
pop
pop
or
ret
or
daa
lock
icebp
jbe
or
sbb
rorb
ss
dec
sub
sub
daa
loopne
gs
loopne
nop
loope
and
pop
or
outsl
add
sarb
aam
mov
imul
add
and
fidivl
xchg
push
fildl
or
cmp
push
ja
adc
repnz
push
and
or
testb
cmp
pushf
push
lods
mov
icebp
ss
dec
fcoml
pop
pop
add
fs
xor
cwtl
cmp
cli
outsb
shrb
mov
jnp
aad
push
insb
mov
aam
adc
bound
insb
mov
adc
lcall
mov
mov
xor
lods
ret
cmp
mov
dec
rclb
sbbb
sbb
push
cwtl
sbb
sbb
data16
inc
adc
inc
hlt
adc
push
or
shrb
mov
gs
mov
or
and
xchg
test
mov
adc
jp
int3
push
inc
push
sbb
pop
lret
mov
aam
adc
and
mov
adc
test
add
mov
xchg
popa
hlt
adc
jg
inc
sub
cmp
and
ljmp
inc
mov
pop
mov
das
jo
daa
and
cmp
imul
movb
pop
or
stos
xor
cmp
lds
lods
aaa
mull
imul
dec
mov
cmp
adc
out
inc
dec
aaa
popf
rolb
cld
cmp
push
inc
push
dec
sub
shl
jb
jo
movsb
nop
ds
jb
push
xor
imul
mov
mov
xor
jl
cli
or
pop
adc
add
push
push
push
add
jmp
cmc
sbb
add
cli
push
pop
dec
add
inc
push
dec
add
sbb
or
pop
jo
pop
dec
xor
push
cmp
sbb
pop
or
pop
dec
sbb
call
daa
push
xor
dec
sub
push
inc
sbb
pop
push
push
ds
add
dec
dec
pop
ds
pop
decl
cmp
xor
add
das
sub
adc
fmuls
dec
lret
sbb
idiv
xor
push
push
ss
pop
cmp
dec
pop
add
cmp
pop
xor
or
xchg
mov
push
adc
dec
inc
and
pop
push
das
add
pop
adc
decl
push
pop
push
sbb
dec
xor
inc
add
dec
push
es
push
sbb
adc
push
and
notl
pop
push
jmp
jmp
mov
inc
js
push
ret
jnp
adc
ret
mov
adc
push
cmpsl
sar
orb
mov
sub
add
inc
push
jbe
add
pop
dec
xor
mov
dec
dec
cmp
call
or
scas
adc
xchg
mov
inc
out
push
sbb
add
mov
dec
inc
dec
inc
pop
push
sbb
les
dec
cmp
dec
adc
push
outsl
inc
mov
and
bound
mov
ljmp
inc
or
xchg
fadd
push
lret
add
xor
mov
enter
dec
or
jb
add
push
push
inc
dec
inc
or
ret
mov
dec
jle
call
add
mov
push
inc
sub
jae
into
mov
inc
es
es
push
ds
cmp
fistpll
push
daa
inc
cmpsb
pop
in
sub
ds
sahf
les
aas
inc
movsb
dec
call
pop
aaa
jbe
iret
aaa
pop
es
push
ja
negb
adc
cmp
inc
push
inc
and
pop
xor
pop
push
movlps
push
aas
ds
das
mov
inc
aaa
jno
sti
shlb
ret
icebp
adc
pop
movsb
xorb
aas
xchg
aad
sbb
cwtl
stos
pop
fdivr
adc
pushl
and
jge
push
je
mov
andb
fwait
rol
fwait
in
inc
mov
mov
or
sub
sub
fsubrl
decl
ds
insl
xor
jg
mov
inc
xchg
cmpsl
aad
arpl
push
addr16
ljmp
sub
and
cs
insl
sub
adc
or
or
cs
ret
ljmp
xchg
mov
data16
mov
call
cltd
test
jmp
movsb
sbb
insb
aaa
push
dec
ja
daa
mov
mov
mov
sbb
dec
stos
fmuls
lret
repz
ljmp
push
outsl
arpl
test
add
mov
mov
movsb
mull
js
addr16
push
scas
addr16
cmp
dec
movsl
jg
push
push
mov
fwait
stos
flds
dec
loopne
push
jge
pop
aaa
insb
outsb
addr16
aas
jno
jae
xor
pop
jp
inc
ja
push
sub
outsl
daa
jnp
sar
dec
push
jo
cmp
es
push
cmp
push
sub
xor
mov
and
bound
cmp
dec
or
pop
sub
inc
sub
xor
jne
push
daa
jecxz
ljmp
add
jns
imul
je
popa
sub
adc
push
xor
mov
cmp
inc
add
inc
mov
inc
inc
xor
and
aaa
inc
push
inc
pop
mov
in
jbe,pn
ss
cmovb
jmp
lret
add
pop
cmpsl
ss
loope
int
and
xchg
dec
sbb
mov
clc
and
add
mull
std
push
dec
inc
lods
push
repz
push
or
xor
lret
orb
pop
or
bound
pop
lahf
cmp
sbb
sub
push
scas
sti
outsb
dec
fdivrl
inc
inc
mov
shr
lcall
inc
es
push
iret
jbe
sbb
pop
pushf
ljmp
jle
or
cmp
or
mov
popa
jl
adc
mov
loop
inc
les
cmp
pop
push
sub
pop
adc
pop
and
rorl
loopne
int
add
xor
xor
jb
outsb
add
pop
mov
in
push
pop
adc
inc
adc
sbb
mov
xchg
add
les
push
sbb
mov
push
aam
loop
mov
les
or
and
sbb
or
adc
rorb
sub
or
pop
sahf
push
sbb
cmp
push
call
sbbb
mov
jbe
push
mov
pop
jmp
jge
pop
pop
addb
lds
jns
and
popf
rcrl
or
aaa
pop
mov
lods
xor
sub
pop
push
mov
pop
push
sub
jno
lret
outsb
iret
pop
daa
cmp
adc
fs
rorb
inc
in
push
sbb
or
inc
push
pop
popa
cmp
outsl
sbb
lcall
xor
pop
xchg
push
adc
popf
or
or
mov
push
pop
inc
pop
push
addb
add
in
push
les
movsbl
in
xor
js
xor
jae
popa
cmp
addr16
insl
gs
cmp
ret
outsb
add
and
inc
aad
fistl
xor
insl
loop
or
and
push
add
shrl
mov
push
fiadds
sbb
popa
je
push
xchg
insl
fwait
sbb
xchg
cmp
inc
fs
adc
cmp
mov
cmp
push
inc
or
and
mov
mov
add
push
pop
add
dec
dec
es
andb
dec
inc
les
xor
xchg
add
dec
arpl
mov
mov
ljmp
cs
pop
add
insb
movsl
cmp
ret
mov
push
sub
stos
sub
xchg
ds
inc
and
fsubs
xor
lds
push
sbb
lret
inc
push
add
pop
mov
mov
adc
and
push
sub
nop
dec
inc
stos
inc
aaa
push
add
test
andl
popa
dec
lret
inc
pop
mov
jb
pop
repz
or
pop
inc
jne
mov
jb
movsl
xor
dec
and
cmp
icebp
and
push
test
pop
arpl
inc
in
ret
jl
cmp
cmp
test
lods
inc
push
inc
and
fcmovnb
pop
adc
daa
xor
dec
pop
jbe
test
call
enter
aas
mov
js
hlt
mov
jbe
jo
sbb
mov
jo
cmc
stos
push
outsl
imul
stos
cs
data16
xlat
sub
fdivs
mov
test
pop
push
pushf
dec
cmp
push
aas
pushf
fcom
rclb
das
xor
sbb
arpl
test
pop
imul
aas
mov
inc
jb
push
dec
cmp
add
push
dec
test
inc
push
push
sbb
push
iret
sub
sub
data16
cmp
and
dec
dec
ja
gs
inc
outsl
sbb
xor
outsb
ja
pop
movsl
push
lcall
sahf
shrb
push
xor
adc
inc
div
mov
test
dec
pop
inc
andps
jo
inc
pop
daa
jb
ja
scas
imul
lcall
sub
pop
jnp
aas
or
fiadds
pop
pop
sbb
loopne
pop
inc
pop
or
pop
mov
dec
pop
pop
and
pop
dec
pop
movsl
xor
mov
dec
pop
repz
push
shrl
xlat
sbb
aam
aam
cmpl
lods
pop
sbb
subb
loop
pop
inc
mov
dec
dec
mov
sub
and
and
imul
pushf
aas
add
sub
inc
dec
shl
andb
or
and
notb
cmp
cltd
cmp
and
dec
das
cmp
outsb
sub
gs
pop
lods
mov
pop
inc
insb
fs
push
cmp
cmp
dec
jae
lods
cwtl
cwtl
call
test
jae
in
or
or
mov
inc
push
punpckhwd
inc
out
and
dec
outsb
push
je
scas
cmp
push
insb
pop
inc
insb
xor
sbb
ret
push
push
inc
mov
pop
sub
adcb
int3
push
pop
cwtl
dec
or
gs
jns
outsl
and
inc
push
fwait
pop
addb
dec
jb
shll
mov
popa
mov
out
or
jb
jo
rclb
xor
and
call
pop
and
push
and
push
addb
inc
pop
adc
xorl
jns
jb
ficomps
adc
adc
mov
push
leave
loope
dec
inc
xor
mov
or
aas
movsl
push
addb
insl
es
add
maxps
inc
pop
mov
subb
cs
xor
bound
cwtl
push
sahf
sbb
aaa
push
add
inc
aaa
inc
cmpsb
mov
test
jne
adcb
pop
and
shlb
add
dec
ja
or
push
inc
stos
int3
xchg
cmc
into
test
push
mov
sub
inc
or
or
sub
pop
pop
lret
pusha
sub
adc
sbb
add
stos
adcb
pop
insb
or
add
outsl
sub
outsb
loopne
mov
lods
mov
inc
jl
dec
repnz
lods
mov
dec
sbb
push
scas
lea
dec
jg
popa
mov
xlat
outsl
or
idiv
je
inc
add
rolb
pop
imul
std
mulb
inc
out
dec
push
add
sarb
xor
inc
das
cmp
dec
add
mov
dec
xchg
dec
inc
xadd
cmc
inc
jle
adc
mov
inc
xor
outsb
insl
pop
jnp
adc
cmpb
aas
mov
jo
wbinvd
movsl
push
dec
add
jae
jle
add
adcb
pop
aaa
jbe
push
inc
pop
cmp
aas
jbe
addr16
add
test
addr16
mov
mov
movsb
or
daa
add
jne
jnp
sub
inc
das
inc
add
outsl
ror
cmpsl
ja
mov
add
iret
test
daa
test
mov
in
test
mov
jns
sub
pop
cld
add
mov
jg
dec
scas
jbe
fildll
sub
inc
dec
scas
in
inc
cmp
dec
scas
in
xor
in
scas
sub
push
xchg
ret
dec
pop
adc
sub
mov
out
mov
loopne
push
les
add
mov
dec
repz
aam
mov
out
sub
pop
xor
cld
pop
cmp
push
mov
pop
sahf
pop
pop
sahf
out
out
pop
pop
push
mov
lcall
enter
cmp
out
mov
jl
push
push
movsb
and
es
add
or
mov
dec
inc
lahf
push
and
sbb
aam
sarl
mov
movsb
stc
pop
leave
add
add
sbb
or
add
mov
jo
out
push
mov
add
pop
jg
push
or
mov
pop
mov
pushf
ja
add
popa
and
in
in
dec
outsl
or
test
inc
shll
loopne
pop
das
dec
push
push
pop
dec
mov
or
outsl
add
inc
inc
pop
leave
inc
or
inc
sub
mov
in
outsl
fildll
jbe
outsl
cmp
ss
dec
adc
in
xor
dec
inc
or
jb
push
mov
pop
scas
add
push
adcb
leave
mov
add
xor
xor
and
int
pop
lods
xor
movsl
loopne
pop
or
push
push
sbb
pop
push
lds
scas
add
pop
leave
mov
outsl
out
cmp
enter
nop
and
xor
cltd
enter
jns
mov
mov
fs
dec
in
mov
pop
or
cmp
rolb
mov
add
es
push
insb
pop
jl
adc
imul
fs
subl
stos
sbb
jg
jg
push
xchg
lock
mov
pop
enter
sub
fs
mov
outsl
inc
je
sbbb
xchg
or
leave
add
and
mov
and
pop
nop
sub
fs
jmp
sbb
push
adc
scas
add
cmp
pusha
mov
mov
mov
xchg
int
add
cmpsl
xor
push
or
sahf
mov
aaa
cld
sub
push
es
pusha
daa
repnz
in
add
mov
and
inc
das
clc
sbb
dec
cmpsb
lahf
mov
popa
fimuls
mov
push
adc
hlt
push
fdivs
dec
lret
push
mov
adc
xchg
mov
mov
sbb
push
xor
nop
es
cmp
pop
cmp
daa
sub
cmp
testl
sub
pop
insb
js
push
push
outsl
add
loope
mov
enter
out
ds
jnp
push
lods
bound
or
ss
push
bound
cwtl
in
push
lock
push
mov
or
or
fmuls
cmp
pop
test
bound
xlat
or
jbe
cwtl
nop
popa
mov
daa
xchg
xchg
aad
xlat
or
shll
arpl
in
arpl
fimull
arpl
testl
and
ss
sub
dec
cld
add
fs
jl
loopne
sbb
mov
rorl
or
shrl
ja
add
push
cmpsb
xchg
aaa
xchg
outsl
sub
andb
xor
fsubs
out
dec
sahf
add
mov
dec
repnz
lahf
gs
push
repnz
pop
add
aad
mov
mov
jg
addr16
nop
or
add
fadd
dec
cs
add
sub
bsf
out
dec
mov
mov
push
pop
pop
bnd
pop
cmpsb
mov
ss
ret
push
les
add
pusha
push
xchg
imul
cmpsl
add
fcmovb
mov
inc
xlat
loopne
lods
add
xor
daa
dec
out
scas
in
mov
lahf
or
add
xchg
in
sahf
imulb
pop
adc
or
imul
sarl
aam
fs
aam
cmpsl
and
mov
cmc
cmp
cmpsl
push
sub
or
or
pushf
push
fs
xchg
push
in
pop
or
movsb
pop
test
lcall
sub
xchg
shl
xchg
sub
add
loopne
mov
imul
rcr
inc
jo
aam
in
dec
scas
xorb
mov
add
cmp
lea
add
inc
pop
or
pop
inc
out
addr16
scas
ss
or
add
int
in
jl
fsubrl
dec
rcll
clc
adc
or
push
xor
fimull
imul
xlat
lcall
sub
jo
mov
push
pop
insb
push
and
out
push
rclb
or
ss
dec
in
les
imul
imul
lods
pop
adc
ja
cld
outsl
out
sbb
movsb
pop
add
pop
in
dec
enter
push
cmp
xlat
test
push
data16
jnp
xchg
pop
das
push
mov
inc
sahf
cmp
cwtl
mov
mov
addr16
rorl
lock
fwait
insl
cli
gs
subb
jl
out
ficoml
xchg
iret
sarl
repnz
sahf
out
cmp
in
xor
sahf
out
jae
test
jns
sbb
pushw
jo
mov
outsb
ds
repz
jb
or
lahf
out
pop
cmpsb
icebp
inc
jo
jns
iret
repz
adc
push
idivl
out
mov
sahf
xor
out
push
pushf
shl
je
jns
iret
repz
jnp
xor
out
jecxz
jbe
push
out
ds
subb
fdivrp
sahf
sar
dec
js
lods
fdiv
cmp
repz
mov
or
jae
iret
out
repz
negl
jnp
fstl
jl
jns
iret
repz
push
xorl
jle
iret
repz
sbb
push
pop
jecxz
andb
adc
adc
sahf
add
pop
out
cmp
test
dec
repz
jo
clc
push
out
xor
out
out
jb,pt
popf
shl
mov
fists
mov
ds
repz
or
lcall
imul
xor
iret
rcrl
nop
popa
out
out
repz
xchg
movb
jne
iret
repz
test
xchg
cmp
jns
xchg
jle
inc
xchg
mov
in
inc
xchg
jnp
xchg
frstor
cwtl
ret
push
cltd
imul
out
lcall
out
int
pushf
inc
imul
lcall
sahf
pop
repz
iret
shlb
jmp
mov
mov
mov
out
sahf
out
mov
out
cmp
inc
movsb
subl
jge
pop
in
fsubs
pusha
jns
out
rolb
test
insb
xchg
stc
cmp
out
and
sarl
frndint
sub
out
lods
out
lods
push
iret
enter
cmp
out
jl
mov
xchg
cmpsl
stc
cmp
jge
mov
cmp
pushw
mov
sbb
cmp
icebp
stc
cmp
repz
pop
std
cmp
repz
cmpsl
fwait
out
shll
repz
cmp
movb
repz
jno
int
jns
divl
les
sahf
data16
pusha
enter
lret
jge
dec
jmp
lret
push
jae
int
xchg
iret
out
jge
mov
push
shlb
push
cmc
sarl
iret
lds
push
imul
dec
adc
out
fdivs
rorb
sbb
jb
push
popf
mov
leave
push
push
addr16
daa
iret
shll
add
jb
mov
ja
or
pop
paddq
pop
in
imul
loopne
nop
pop
jb
inc
adc
sbb
imull
jns
mov
jb
cmp
cs
fcmove
and
jae
mov
push
hlt
jae
outsl
jl
fwait
mov
aaa
rolb
enter
dec
xor
scas
mov
mov
pop
push
addb
outsl
ja
out
mov
outsb
scas
jg
jb
rorl
push
jbe
push
js
jns
dec
mov
pop
fmuls
jp
inc
in
es
push
fbstp
push
in
mov
cmp
ss
mov
arpl
popf
lods
into
mov
test
fcoml
fnsave
fnstsw
mov
mov
dec
sub
lret
scas
in
mov
and
lock
push
adc
jge
out
or
inc
call
icebp
inc
fnstcw
aaa
pop
popf
out
mov
int3
jbe
fcoml
daa
in
jns
or
mov
or
sbb
repnz
dec
hlt
hlt
inc
add
enter
cmc
xchg
cmc
lahf
daa
cmp
stos
out
pushf
ja
ja
sbb
push
pop
lret
add
and
or
mov
movsb
adc
rolb
outsb
push
mov
push
aas
adc
pushl
inc
inc
jg
inc
add
mov
aam
iret
lds
jb
popf
cmpsl
push
aas
xor
and
in
push
negl
mov
pop
nop
sub
daa
xchg
lahf
or
inc
inc
inc
push
add
or
pop
das
outsl
dec
repnz
arpl
test
jns
sub
scas
movsl
dec
cs
xchg
or
int3
in
scas
movsb
lds
in
pop
in
jbe
cmpsb
xor
out
inc
and
in
push
jp
jp
push
jno
add
or
or
jp
sahf
xlat
fstl
add
in
test
xchg
pushf
pushf
pushf
aam
in
ss
insb
addr16
mov
xchg
mov
pushf
sbb
in
dec
enter
and
hlt
sbb
popf
out
scas
daa
adc
insb
or
jns
xchg
pop
dec
jl
in
mov
mov
or
mov
jge
pop
enter
insb
inc
mov
or
jge
cld
shlb
mov
pop
punpcklwd
add
stc
fs
adc
aad
xchg
push
test
mov
jle
pop
adc
cltd
xchg
add
pop
and
das
dec
jle
dec
dec
cs
xchg
or
das
inc
in
or
jg
and
clc
sbb
insl
outsl
in
mov
insl
in
push
add
add
outsb
add
jnp
lahf
push
pop
and
rcll
push
xchg
leave
xchg
cmp
dec
bound
sbb
in
enter
or
sub
sbb
sahf
orl
cmp
movb
ss
jl
add
push
fisubrs
xchg
out
test
mov
enter
outsb
incl
mov
sub
enter
outsl
inc
outsl
push
outsl
cmpsl
xchg
mov
and
xchg
xchg
xchg
jle
mov
sahf
insb
rcll
fabs
out
mov
xchg
jmp
movd
pop
and
sub
lock
add
cmp
incl
xchg
cmp
ss
pop
jo
mov
add
fcmovne
or
add
dec
fucomip
and
cmp
das
vmwrite
adc
xor
pop
ds
pop
sub
mov
cmp
inc
test
push
lock
int3
cmpl
ljmp
add
mov
clc
cmpl
and
in
lds
test
sbbl
dec
in
mov
out
or
mov
and
test
test
in
ret
test
das
jb
jb
and
cmp
jb
inc
jb
jb
fildl
test
xchg
pop
mov
mov
dec
dec
leave
or
in
loope
xor
aam
iret
hlt
fdivl
dec
and
out
xchg
jae
repnz
jae
jae
jae
repnz
jae
jae
jae
jae
repz
jo
or
xchg
cmp
repz
or
or
repz
mov
mov
iret
enter
ficoms
ds
repz
adc
adc
out
push
adc
inc
mov
xor
cmpsl
je
sbb
insl
pop
leave
pop
jo
xlat
xchg
nop
cmpb
jb
lods
add
aam
dec
fsubs
xchg
jl
into
outsl
add
mov
ja
pop
push
jbe
jae
scas
loopne
jns
xchg
aaa
je
pop
jb
push
lret
dec
es
jbe
dec
mov
sub
inc
mov
in
je
add
daa
and
sbb
push
nop
js
js
xchg
pushf
call
mov
sub
jbe
loopne
stos
mov
jbe
das
lock
clc
jbe
jns
cmp
ja
adc
xor
inc
pop
fidivl
inc
adc
inc
fcoms
dec
xchg
out
pop
out
push
pushf
fildl
movsb
fildll
pop
xor
push
mov
lahf
jg
inc
inc
add
mov
outsl
lds
test
add
push
mov
adc
fstps
add
mov
cltd
and
mov
movsb
dec
cmpsb
mov
sarb
cld
xchg
xchg
dec
and
sub
and
subb
dec
pop
cmp
jns
mov
pop
add
cmpl
movsb
or
outsl
dec
repnz
lcall
leave
push
lock
pop
mov
inc
jb
xor
and
in
inc
jp
add
sbb
imul
fisubrl
mov
xchg
addr16
iret
mov
les
mov
leave
sub
cmp
mov
mov
adc
pop
push
and
in
mov
jnp
jnp
pop
pop
pop
push
jnp
jnp
xchg
add
sbb
mov
lds
int
aad
nop
inc
mov
clc
jnp
mov
leave
pop
enter
ret
loop
inc
push
hlt
fmull
xchg
cmp
dec
fiaddl
dec
nop
icebp
add
pop
jno
call
jns
xchg
nop
fistpll
movsb
jl
jl
jl
mov
les
aam
mov
jl
jl
jl
jl
mov
add
or
adc
outsb
mov
and
sub
setae
or
xchg
or
or
xchg
xchg
xchg
xchg
pop
push
add
xchg
add
add
mov
and
dec
addr16
in
jbe
xchg
je
adcb
or
movsl
push
add
and
test
add
jle
jle
push
das
xchg
add
cmpsl
jb
cmp
addr16
insl
inc
into
lock
fistpll
daa
test
daa
iret
mov
popf
push
push
movsl
lods
popf
cmp
jns
or
xchg
pushf
dec
pop
and
test
or
jns
cmp
jg
iret
xor
cltd
push
push
xor
push
mov
or
add
xchg
push
setnp
in
or
lret
or
or
pand
mov
fimuls
dec
ret
add
add
lock
inc
mov
or
add
or
out
clc
pop
or
cmp
scas
push
or
push
or
cmp
sub
out
dec
mov
out
jns
push
add
sub
add
sahf
xor
cmp
orb
xchg
dec
push
cmpb
orb
out
mov
fcoml
fcmovne
leave
fabs
jmp
dec
sahf
add
add
es
iret
enter
cmp
fcoml
movsb
jo
loope
jb
mov
andb
mov
addl
pop
cld
xchg
sbb
cltd
dec
addb
addb
sbb
sbb
sbb
xor
pop
xchg
loopne
xchg
out
stc
addr16
and
sub
into
lock
mov
iret
jae
fstpl
mov
push
mov
rorl
sbbl
loope
daa
or
pusha
cwtl
test
adc
mov
cltd
jl
cmp
iret
addb
test
cltd
add
or
flds
imul
cltd
scas
les
mov
cld
add
sarb
ret
xor
add
rcr
and
lcall
push
mov
and
mov
pop
cmp
inc
test
das
sub
cmp
add
lock
fcomps
dec
jb
and
pop
pop
or
cwtl
test
pop
pop
mov
test
pop
leave
push
cmp
mov
sub
lea
xchg
dec
push
add
cmp
pop
pop
cs
xchg
xchg
addr16
nop
xchg
je
dec
pushf
jg
lret
addr16
xchg
out
js
xchg
sbb
xchg
daa
pop
leave
lods
push
pop
data16
jns
ja
lock
stos
filds
sub
sar
add
fsub
xchg
xacquire
jns
std
xchg
mov
mov
mov
js
jns
mov
inc
mov
into
push
and
gs
jo
enter
jnp
xchg
leave
leave
pushf
cmpsl
mov
daa
iret
ror
push
or
or
jns
cmp
add
inc
mov
mov
mov
enter
mov
pop
mov
jns
xchg
mov
dec
sahf
fucomi
out
addr16
mov
jae
mov
es
xchg
fstpt
outsl
mov
into
inc
mov
push
mov
push
pop
cmp
xor
add
movsb
xchg
enter
mov
scas
daa
iret
repz
pmaddwd
call
mov
inc
cmp
inc
mov
push
xchg
dec
mov
mov
jl
inc
cmpsl
mov
push
loope
mov
mov
xchg
add
testb
mov
inc
mov
inc
outsb
repnz
add
in
dec
xchg
add
pop
mov
aaa
jns
insl
push
jb
or
js
cmp
or
in
and
dec
andb
loopne
mov
dec
repnz
dec
jb
in
sbb
iret
and
sub
test
jge
push
rcr
and
pop
jb
hlt
ja
xchg
out
in
data16
pushf
dec
and
add
mov
push
mov
daa
mov
mov
popa
mov
iret
in
enter
mov
xchg
pop
mov
jmp
jmp
sbb
or
adc
sbb
movsb
leave
repz
lcall
cmp
push
add
pop
gs
xchg
xchg
xchg
insl
jne
test
lea
movsl
pop
mov
pop
lods
mov
ud2
pop
xchg
xchg
xchg
xchg
or
or
xchg
xchg
xchg
xchg
push
add
sahf
xchg
add
mov
jns
sbb
sbb
sbb
jns
in
in
out
leave
rorl
and
std
add
sahf
and
and
nop
insb
pop
or
sub
jns
nop
pop
nop
cmpsb
addr16
mov
popf
outsl
pop
pop
movsl
push
add
lods
nop
pop
setb
nop
out
jo
xlat
loopne
call
fsts
add
cmpsl
push
addr16
cmp
xor
adcb
push
aas
fidivrs
out
pop
pop
imul
push
xchg
aas
xchg
js
or
or
daa
dec
mov
push
test
jns
js
mov
xchg
das
adc
loopne
sub
cwtl
dec
jmp
and
add
repz
add
add
testl
clc
mov
xlat
cwtl
xchg
pop
adc
mov
ja
stos
adc
outsl
mov
je
xchg
pop
rcl
roll
icebp
iret
icebp
scas
mov
jns
stc
add
sahf
out
daa
xchg
repnz
test
cltd
add
sbb
xchg
filds
outsl
in
repnz
test
add
out
cmp
das
jnp
xor
xchg
out
mov
lds
scas
cmpsb
xchg
nop
test
ss
fcoms
in
pushf
mov
stos
cld
fidivrs
ja
xchg
xchg
xchg
cmp
stos
pusha
xchg
mov
in
ja
mov
ljmp
mov
jg
mov
iret
leave
repz
add
sub
mov
xchg
sub
aas
push
mov
xchg
cmpsl
push
dec
stos
pusha
dec
dec
dec
dec
push
leave
repz
js
add
pop
pop
and
swapgs
jb
jb
int3
aam
in
test
out
xchg
and
mov
xchg
pop
jns
sahf
outsb
lsl
ds
mov
cmpsl
pop
packsswb
fmull
imul
mov
cltd
pop
pop
test
add
out
cmp
leave
rcr
or
jns
loope
jmp
fsubp
das
mov
push
push
adc
cmp
jae
adc
adc
jmp
sbb
cwtl
pushf
or
outsl
dec
xchg
out
gs
sahf
out
lea
jne
jge
repnz
jns
pop
jns
xchg
xchg
and
push
incb
scas
or
inc
inc
ss
scas
cs
pop
lahf
add
xor
adc
xlat
sbb
in
insb
xor
cwtl
das
das
pop
loope
cwtl
aas
pop
cwtl
push
jne
repz
sbbb
outsb
xchg
mov
pop
jo
xchg
fsubp
pop
out
jne
out
pop
testb
push
mov
push
cltd
pop
mov
push
xchg
leave
jae
mov
cltd
jb
cltd
pop
cltd
fs
dec
pop
fdivrl
scas
stc
outsb
jb
lahf
lcall
cmp
jo
out
pop
rorl
or
out
mov
push
pop
out
xorb
xor
sbb
setp
lcall
pop
lcall
arpl
lar
lcall
inc
pusha
lcall
jo
mov
mov
daa
iret
add
aaa
jns
mov
add
sbb
daa
lret
pop
rcrl
fistpl
leave
repz
jecxz
or
or
mov
fwait
adc
mov
repz
fwait
push
push
add
out
fiadds
mov
add
add
dec
pop
adc
lcall
mov
sahf
fildl
iret
add
daa
lock
fwait
repnz
out
add
inc
je
enter
mov
fisubs
adc
jb
loope
sbb
sbb
pushf
cmp
xchg
mov
add
fistps
in
add
and
xchg
pushf
into
or
lcall
stc
sbb
cmp
sbb
movb
popf
popf
sbb
sbb
popf
popf
popf
popf
lret
lret
lret
pop
mov
jne
mov
popf
mov
or
cmp
rep
or
jb
rorl
ds
fcomps
adc
adc
xor
push
push
pusha
js
dec
sub
sahf
enter
das
mov
adc
jb
mov
push
addr16
and
mov
repnz
or
mov
jne
loopne
inc
xlat
sahf
mov
and
testb
lahf
mov
and
lahf
and
stc
loop
pop
xor
ret
inc
dec
rsqrtps
and
mov
leave
leave
leave
or
nop
pop
fadd
lahf
addr16
fwait
dec
movsl
mov
mov
les
mov
addr16
adc
mov
and
or
mov
adc
sbb
xor
daa
cmp
or
repnz
shlb
sbb
mov
and
jle
mov
lahf
mov
fldt
jg
cmp
movl
mov
out
push
cmp
inc
pusha
rorb
or
push
sbb
push
inc
pop
mov
mov
push
mov
push
out
jns
jb
adc
in
in
dec
mov
xchg
lcall
mov
mov
pop
int
jl
mov
aad
pop
frstor
sbb
xchg
add
addr16
mov
repnz
xor
mov
pop
inc
mov
xchg
outsb
repnz
mov
adc
cmp
iret
dec
dec
es
mov
mov
fcmovu
loop
nop
ja
pop
pminsw
or
repnz
sarl
inc
pop
cmc
adc
daa
xchg
mov
jno
or
out
or
mov
or
sbb
sub
insl
xor
add
out
push
lar
xchg
push
inc
push
push
pop
mov
in
xor
nop
ja
in
repnz
add
mov
fimuls
test
push
ja
movsb
pop
and
jg
dec
and
push
mov
in
push
call
mov
das
mov
iret
shr
addr16
pop
leave
jae
cmp
movsl
into
inc
xor
sbb
cmp
cmovnp
add
movsb
test
dec
orb
stc
aaa
movsl
push
outsb
jae
jbe
lcall
pushf
mov
ror
or
das
sbb
aam
fsubl
inc
sahf
pavgb
sahf
pop
sbb
add
repz
add
cmpsb
push
add
inc
ja
push
pop
sbb
add
or
pop
xchg
xchg
xchg
xchg
cmpsb
pusha
cmpsb
push
movsb
fldt
cmpsb
cmpb
pop
ud2
repz
cwtl
ds
mov
pop
test
mov
mov
rcrb
enter
mov
xlat
mov
jl
mov
push
pop
inc
jmp
cmpsl
pop
or
push
or
or
aas
push
daa
or
xchg
sbb
sbb
rcr
jo
cmp
push
daa
dec
daa
call
cmpsl
iret
repnz
push
push
add
outsb
sysret
mov
push
stc
pop
enter
notl
clc
addr16
in
and
and
push
dec
test
dec
test
sarl
clc
inc
test
mov
xchg
xchg
xchg
out
int3
shlb
xchg
xchg
pushf
enter
and
dec
clc
test
add
or
push
mov
mulb
cmp
dec
inc
xchg
ja
xchg
mov
push
add
out
dec
dec
enter
sbb
jns
add
xchg
pop
sarl
adc
add
sbb
or
dec
sub
cmp
iret
adc
je
pop
in
pop
mov
mov
pop
push
xchg
xchg
dec
es
iret
add
iret
leave
repz
clc
repnz
add
or
push
fildll
mov
push
add
xchg
das
outsb
push
aas
jnp
subl
stos
xchg
stos
fwait
aas
mov
loopne
stos
iret
mov
push
cwtl
aam
mov
pop
adc
scas
stos
das
lock
repnz
adc
sub
or
and
sub
mov
aaa
outsl
out
push
repz
js
sbb
daa
iret
add
nop
sets
daa
iret
repz
or
add
bswap
lods
jns
mov
fldt
mov
lds
lods
sbb
addr16
dec
psllq
xchg
push
pop
xchg
add
dec
outsb
pop
leave
test
lcall
hlt
shrb
sub
lock
clc
lods
leave
insl
in
sbb
ss
cmp
dec
push
push
push
or
sahf
out
or
bound
xchg
pop
fucom
push
or
leave
xor
jp
dec
adc
in
fldt
dec
mov
ret
rcr
sti
psubusw
add
or
mov
nopl
inc
fs
daa
daa
daa
andl
daa
call
sahf
xchg
xchg
push
js
sbb
sbb
mov
pop
jns
iret
jae
pop
jmp
push
and
lahf
mul
incb
mov
and
mov
xchg
lahf
test
mov
inc
inc
loope
push
xchg
dec
and
add
nop
inc
mov
jae
inc
inc
mov
fcoml
leave
mov
mov
mov
pop
mov
mov
mov
mov
jl
and
lcall
lret
cltd
push
cmp
cmp
mov
mov
insb
in
mov
xchg
xchg
sbb
sahf
out
push
add
add
sahf
out
pop
or
adc
or
push
mov
dec
xorb
outsb
mov
jbe
push
shll
out
in
in
fcmovne
mov
fdivl
shll
mov
loop
in
mov
mov
mov
or
mov
cs
mov
mov
mov
dec
mov
mov
mov
in
add
data16
mov
mov
out
fiadds
lcall
sbb
jns
out
shlb
and
and
and
and
sahf
out
icebp
and
out
iret
shll
or
push
pop
or
jns
and
sub
sub
inc
pop
cmp
cmp
dec
inc
mov
je
xchg
jl
lret
push
aaa
imul
pop
addb
adc
mov
scas
mov
and
and
mov
mov
mov
xchg
xchg
outsb
mov
add
push
repnz
mov
mov
cmp
cmp
pop
jb
cmp
cmp
cmp
cmp
notl
repz
and
mov
out
cmp
andnps
outsb
repnz
jae
aas
iret
in
in
orl
mov
leave
repz
sbb
iret
leave
enter
adc
sbb
leave
repz
aaa
jbe,pt
mov
daa
inc
pop
iret
leave
in
ja
jg
sub
iret
leave
repz
ret
cs
shll
repnz
cmp
ss
push
xor
leave
repz
aas
inc
cmovg
cmp
js
push
pop
mov
mov
or
cwtl
mov
jae
test
add
jnp
cmp
lret
push
add
mov
cmp
mov
xor
out
jb
dec
repnz
mov
in
jbe
lfs
in
sahf
pushf
pop
loopne
add
and
iret
xor
pushf
pushf
cmp
push
pop
add
popf
cmp
addr16
je
out
xchg
or
iret
repz
lret
jns
fcoms
jecxz
sti
add
adc
add
iret
bsf
cmp
iret
xor
push
and
jae
cmp
sbb
daa
iret
jae
push
pop
sbb
repnz
jge
and
sahf
add
lret
lret
mov
mov
sub
pusha
and
pusha
sarl
call
push
xor
rclb
push
ja
mov
push
dec
sahf
add
js
and
dec
sahf
pop
mov
dec
sahf
or
jns
pusha
mov
sarb
rorb
adc
loopne
mov
out
adc
call
push
pop
and
clc
mov
cs
dec
out
dec
sbb
sub
sbb
sbb
shl
add
je
inc
das
and
mov
mov
cmovae
push
mov
jmp
mov
repnz
xchg
add
fucomi
sahf
cmpsl
push
lods
jbe
cmp
loope
mov
shl
aaa
aad
pushf
faddl
or
adc
sbb
pop
and
sahf
sub
xchg
dec
dec
mov
sahf
pushf
push
pop
mov
repnz
daa
ja
push
xchg
cwtl
stos
aas
and
leave
leave
mov
add
sahf
pushf
pushf
pop
fucom
in
cmc
mov
daa
cmp
sbb
outsb
xchg
rorb
xor
xchg
cs
jl
pop
arpl
into
leave
repz
add
jnp
daa
daa
iret
jae
push
mov
cmp
mov
jbe
jb
into
fisubs
push
sub
add
shll
enter
rcrl
pop
xorb
push
dec
cmp
iret
jae
add
iret
jae
xchg
jg
add
xchg
lahf
xlat
cmpsl
add
scas
mov
mov
fdivrs
jecxz
jbe
ljmp
sahf
pop
outsb
lahf
ret
pop
jl
cmp
and
ret
ret
add
ret
outsb
mov
xchg
insl
xchg
add
pop
and
add
pushf
pushf
pushf
test
mov
xchg
jecxz
jmp
mov
mov
ret
jns
xchg
fistl
nopl
add
ficoml
cmpsl
pop
iret
leave
repz
popa
jbe
imul
xchg
fimull
push
fisubrl
mov
fildl
pop
iret
jg
pop
cmp
filds
add
and
and
pop
mov
das
sub
addr16
pop
sbb
pushf
pop
pinsrw
dec
dec
xor
iret
jo
xor
enter
test
jb
cmp
ja
jl
and
js
sti
push
lds
adc
sbb
iret
shrl
syscall
daa
push
repnz
xor
cmp
repnz
lds
je
jg
das
jg
in
mov
lds
lds
das
mov
rol
das
das
das
das
loop
in
add
das
das
das
das
push
sbb
and
das
movsb
fldt
das
cmp
inc
pop
nop
leave
in
in
sbb
sbb
leave
leave
leave
leave
sbb
push
adc
adc
push
sub
ja
cmp
sub
push
and
xor
jbe
adc
xor
xor
daa
dec
setb
cmp
cmp
cmp
repz
leave
ds
repz
repz
inc
cmc
sahf
testl
or
iret
repz
inc
and
inc
dec
sahf
out
arpl
jns
jns
xlat
cmovnp
test
psllq
jae
dec
mov
mov
push
push
rcr
jns
jb
out
std
or
jns
sahf
cmpsl
pop
adc
push
cmp
xor
dec
enter
popf
fists
lahf
popa
mov
popf
nop
enter
mov
push
add
iret
mov
enter
hlt
jbe
fsub
cmovs
pop
push
leave
out
and
leave
pusha
push
add
dec
dec
sahf
pshufw
pop
lock
jb
enter
push
adc
iret
cmp
push
pop
and
sub
and
aam
push
leave
push
sbb
jns
leave
inc
js
sbb
aaa
repnz
mov
and
fimuls
inc
cmp
pop
call
push
inc
jl
mov
leave
call
clc
leave
pop
xor
xchg
loopne
mov
addr16
mov
jl
dec
pusha
adc
pop
and
add
xchg
out
ds
lret
push
clts
jo
mov
sahf
ja
mov
nop
pop
inc
iret
repz
or
mov
or
fsub
add
adcb
push
sarb
jg
outsl
or
adc
lret
xchg
insb
ds
xlat
or
cs
cmovae
dec
lret
push
mov
xchg
xchg
lret
pop
arpl
pop
mov
mov
cltd
in
mov
scas
pop
scas
mov
repz
in
lds
rolb
fisttpl
leave
repz
out
icebp
or
leave
in
fs
int3
adc
iret
leave
xor
adc
cmp
cmp
push
jns
ja
jne
push
sbb
out
sbb
daa
fisttpll
sbb
mov
jns
leave
repz
fcomps
and
aaa
jnp
cmp
psubw
fimuls
daa
sbb
sub
jl
sub
js
cmp
xor
jo
int
add
test
iret
or
cltd
dec
ds
dec
add
call
and
rolb
into
into
ds
mov
dec
syscall
or
mov
into
scas
outsb
sbb
jb
into
jne
sbbb
sahf
out
sahf
adc
jns
out
adc
adc
in
in
int
fsub
sbb
sbb
movlhps
std
ret
iret
out
femms
push
cmp
out
sbb
and
daa
iret
and
inc
push
es
sahf
aaa
leave
andl
pop
iret
add
cmp
repz
jb
jp
cmpb
iret
add
aaa
jne
inc
add
ja
shlb
sub
enter
out
in
frstor
pop
dec
cmpsl
lret
iret
pop
loope
mov
out
add
imull
add
prefetch
cmp
rorb
shlb
shrb
aas
out
sahf
ja
push
or
or
in
inc
push
mov
cs
cmp
mov
add
repz
mov
leave
leave
rcr
call
jb
xchg
repz
rolb
rcll
rcrl
sarl
jb
enter
roll
dec
rcll
push
iret
sbb
test
rcl
cs
mov
fwait
loopne
repz
jecxz
xor
out
xchg
out
xchg
and
adc
sbb
es
jns
enter
ds
add
push
pop
pop
invd
push
jae
or
mov
iret
repz
or
dec
mov
mov
invd
adc
cmp
daa
daa
lret
loope
andl
testl
jnp
or
sbb
jns
out
xor
jns
out
and
imul
dec
sahf
and
jg
jns
lcall
xchg
out
mov
cmp
sbb
ljmp
js
and
lahf
aam
dec
icebp
jbe
cmovno
das
dec
aam
aam
out
and
push
insl
pop
js
out
in
or
cmp
leave
repz
mov
enter
icebp
aam
cld
aam
aad
arpl
push
adc
sbb
lret
aad
das
ds
jne
dec
jns
xchg
out
sbb
bnd
out
push
and
mov
and
and
sahf
lods
mov
ret
sahf
out
sub
jecxz
sub
sahf
cmp
out
sub
das
cmp
leave
push
xor
cmp
sahf
out
jbe
pop
sbb
pop
lahf
sub
dec
addr16
cmp
es
stos
add
inc
lahf
mov
xor
push
xchg
and
push
adc
sbb
mov
add
aas
inc
push
adc
adc
sub
test
xchg
dec
or
aaa
popf
cmp
pusha
cmp
push
add
jns
out
sbb
sahf
out
pop
or
or
aaa
or
repnz
scas
adc
push
adc
mov
xor
in
jbe
push
addr16
das
push
xorps
pop
imull
push
and
mov
out
jb
pop
andb
mov
orl
pop
popf
pushf
cmp
xchg
sub
cmp
into
aas
xlat
sbb
sahf
sbb
data16
out
and
add
jns
out
push
push
inc
cmp
xor
jns
out
sub
sbb
repz
add
call
cmp
repz
fcom
ror
out
iret
repz
mov
sahf
test
cwtl
nop
push
mov
je
pusha
push
push
clc
cmp
repz
inc
sub
or
xchg
adc
js
sbb
or
or
and
fscale
pop
sub
push
dec
push
sbb
inc
test
or
sub
testb
add
in
andb
fisttps
mov
cld
test
cs
inc
jle
test
shll
xchg
pop
stc
lcall
iret
mov
in
call
ja
jle
adc
push
ficompl
mov
cmpsl
in
fidivl
rcr
fsubp
stc
jb
jle
icebp
dec
les
aaa
inc
scas
imul
andl
mov
xor
fdivrp
out
scas
pop
push
outsb
cli
inc
daa
pop
jle
ud2
add
add
push
pop
das
cwtl
test
fnstcw
pop
add
add
out
xor
aas
out
aas
les
or
out
sahf
cwtl
or
adc
out
adc
repz
adc
iret
repz
hlt
in
sbb
jns
out
sbb
sahf
push
cmp
in
mov
in
test
inc
or
js
ljmp
in
decl
cmp
mov
push
les
xlat
mov
push
sub
call
pop
icebp
sahf
icebp
aas
je
inc
pop
call
ja
jbe
add
or
add
dec
xchg
nop
cmpsb
cwtl
int3
dec
loopne
ds
xorb
push
aad
dec
pop
push
push
pop
out
imul
cmp
lcall
stos
sbb
xlat
pop
mov
test
cs
cmp
repnz
arpl
push
inc
sub
mov
shrb
out
and
stc
add
inc
icebp
push
js
ja
push
sbb
sbb
icebp
or
inc
push
and
cmp
push
xor
je
pop
add
push
pop
lock
popa
cmc
xchg
out
in
push
push
lock
jnp
lret
aas
pop
or
cld
adc
sahf
out
push
hlt
sbb
adc
ror
repz
sbb
push
rclb
cmp
repz
mov
mov
repz
rep
and
leave
xchg
test
and
out
jg
movups
ss
lea
xor
es
mov
xor
sbb
cmp
xorl
pop
cmp
jns
out
pop
js
mov
in
repz
repz
xor
add
imul
lcall
push
stos
xorb
insb
addr16
add
inc
pop
enter
and
cli
or
or
ret
seto
repnz
adc
in
jl
mov
leave
sbb
into
sbb
sar
decl
and
sahf
mov
sub
inc
rcrb
and
sbb
addl
xlat
xchg
inc
push
in
incl
inc
stc
mov
adc
mov
decl
js
inc
ljmp
loopne
jmp
xchg
test
mov
cmp
inc
mov
popf
sti
jmp
jle
push
inc
mov
repnz
test
pop
stos
clc
scas
adc
inc
jmp
aam
decl
cli
imul
loope
jp
gs
xchg
push
cmpsb
scas
mov
sbb
mov
or
addl
cmpsl
xchg
cmp
xor
dec
cmpsl
in
cmp
sahf
xchg
pop
lcall
lock
mov
popa
sar
mov
fsubs
movsb
ljmp
mov
subb
fwait
xchg
and
and
int3
lods
aaa
add
sti
aas
jno
or
mov
lcall
cmp
dec
lea
aas
ret
shrl
mov
icebp
aas
rorb
and
inc
cmpsl
out
aas
inc
cmpsb
mov
insb
scas
add
aas
xor
aad
mov
std
std
into
jmp
adc
stos
in
das
dec
pop
loope
les
aas
xchg
les
jne
int
mov
xor
fisubs
xchg
cmp
push
mov
xchg
aas
or
mov
mov
popa
push
pop
sarl
jl
mov
das
lea
mov
inc
filds
movsl
jmp
jg
sub
jge
mov
inc
rcr
push
arpl
int3
and
pushl
call
cmp
jp
and
cmp
mov
cmp
std
xlat
cmp
mov
lcall
sbb
add
movb
aaa
fldt
cmp
jno
shlb
out
dec
nop
lcall
cmpsb
xchg
andb
mov
cmpsl
push
lahf
inc
pop
mov
sub
dec
in
ss
decl
imul
faddp
jge
call
jmp
mov
xchg
cmp
push
andl
dec
dec
gs
std
orl
pop
ficomps
push
xchg
clc
add
cmpsb
fmuls
aas
pop
in
stos
pop
inc
inc
je
inc
inc
push
dec
movsl
jb
cmp
jnp
cmpsl
fbstp
ja
popa
push
out
mov
les
hlt
push
pushl
movsl
arpl
mov
mov
push
movsb
mov
aad
mov
rclb
mov
jle
sub
mov
sbb
dec
jno
repz
test
ficompl
jmp
ljmp
mov
hlt
movl
imul
std
in
leave
mov
add
insb
push
jmp
cmp
or
pop
adc
in
pusha
aad
jno
mov
inc
aam
mov
std
test
movsl
cli
test
xor
leave
mov
insb
fdivs
lcall
pushl
filds
or
shrl
push
ficoms
push
xlat
enter
mov
and
mov
cltd
xchg
mov
mov
or
or
and
or
pushl
adc
stos
sbb
data16
inc
fdivl
jno
add
aad
out
mov
mov
movsl
in
lahf
xor
mov
js
stc
incl
cwtl
push
loope
or
insl
or
pop
arpl
push
push
imul
insb
sbb
xor
dec
add
in
xchg
push
insb
jnp
add
shl
adcb
cmc
inc
fnstenv
adc
mov
mov
bound
ficoml
gs
aam
scas
ljmp
pop
popa
mov
into
pop
cmp
mov
inc
movsl
fisttps
pushl
movsb
sti
hlt
shrl
imul
mov
sarb
add
jmp
sbb
or
cmp
add
daa
adc
or
and
pushl
aam
mov
push
stc
ficomps
leave
fldcw
and
xlat
pop
cmp
incl
pop
mov
shlb
mov
lcall
mov
cmp
ljmp
rcrb
adcl
jae
or
test
fs
ds
or
or
push
in
lcall
scas
add
mov
pop
jge
xchg
shlb
add
inc
push
imul
dec
xorb
sbb
push
imul
aam
loopne
rorl
int3
dec
frstor
fistpll
stc
out
mov
pop
aad
mov
call
xchg
shll
push
repnz
jg
addr16
cmpsb
fldl
mov
dec
ss
fisubrl
or
scas
testb
pusha
jp
std
incl
out
pusha
fists
addr16
mov
jns
imul
andl
shrb
ss
pushl
rclb
or
add
mov
das
es
lds
or
add
mov
cmpsl
call
ret
shlb
fldcw
ret
es
pushf
mov
insl
add
ss
jmp
addr16
incl
jb
push
add
adc
mov
jnp
sbb
xchg
or
out
fdivrl
fisttpl
aam
roll
clc
mov
push
int
mov
mul
ja
lcall
inc
mov
out
cli
jo
ud0
cmp
pop
or
adc
sahf
gs
mov
scas
clc
sar
imul
push
js
or
push
addl
mov
cmp
cli
jmp
cmpsl
notl
pusha
rorb
imul
sub
pop
fldenv
filds
aaa
roll
test
jg
mov
jmp
add
mov
lret
mov
cmpsb
mov
sarb
sub
push
mov
fldenv
jp,pn
mov
dec
popa
les
sbb
xchg
sub
aaa
mov
or
sbb
add
and
push
pop
repnz
fistpl
xor
pop
inc
cmp
push
ja
push
inc
add
xlat
test
inc
push
xlat
fcomp
out
sahf
out
fcmovnu
fstp
jns
jns
loop
in
call
jmp
sahf
out
sahf
repz
cmc
div
clc
aaa
sahf
out
stc
cli
sti
cld
daa
add
sub
aas
push
push
inc
cmpsl
lods
sub
xor
pop
movsl
push
pop
jnp
dec
es
inc
push
dec
bound
lods
add
inc
sbb
bound
outsl
es
inc
push
popa
je
push
bound
aas
and
inc
lds
inc
jns
ljmp
and
aas
pop
inc
cmp
pop
bound
xor
aaa
cmp
popa
arpl
cmp
arpl
insl
adc
xor
bound
in
sub
popa
push
inc
jbe
pop
insb
imul
push
subb
insb
gs
push
dec
inc
cmpsb
ficomps
or
xchg
dec
dec
mov
lock
icebp
popa
pop
rcl
lock
fs
push
mov
gs
je
scas
ss
rcl
xchg
jbe
sbb
mov
inc
aas
xchg
insl
and
je
js
in
adc
push
adc
push
dec
adc
adc
inc
addl
add
xchg
insb
popa
jns
mov
dec
insb
jmp
popa
xchg
cmp
je
lock
inc
insb
aaa
aas
inc
push
inc
add
and
or
adc
jae
repz
daa
int
inc
mov
aas
or
mov
mov
fwait
lea
mov
inc
es
sub
xor
je,pn
jo
cmp
add
ds
mov
scas
add
std
call
int
push
dec
push
adc
sbb
xor
cmpsb
dec
mov
sbb
sbb
ja
outsb
jne
push
push
ret
push
popa
mov
dec
jge
addr16
pop
ja
add
add
or
fcomps
outsl
add
addr16
clc
xchg
pushf
push
jo
insl
add
iret
mov
push
rorl
aas
aaa
mov
dec
int3
push
add
gs
ss
inc
andb
cmpsb
or
lahf
mov
shlb
pop
bound
sbb
xlat
sbb
and
lahf
xchg
adcb
out
jb
lods
inc
lock
sub
cmp
popa
jo
lahf
xchg
rcl
lahf
push
outsl
outsl
test
add
adc
jge
push
jno
adc
in
push
andl
xchg
add
add
cmp
adc
and
xchg
sarl
jo
push
add
push
outsl
insb
jns
add
mov
sub
stos
dec
push
xchg
addr16
push
arpl
insb
psadbw
xchg
sbb
inc
push
bound
jge
fimull
xor
mov
pusha
xor
popf
cwtl
in
dec
xor
lods
jmp
xor
add
lcall
ret
inc
add
nop
outsb
and
push
shlb
lods
inc
outsl
test
sbb
inc
dec
adc
outsb
dec
sub
push
cmp
lods
inc
push
lock
jo
sbb
push
call
inc
push
inc
dec
and
loop
bound
outsb
arpl
lcall
in
pusha
mov
insb
insl
aaa
push
or
push
pop
sub
insl
mov
xchg
fisttpl
subl
lods
mov
daa
subb
mov
mov
les
pop
push
add
push
add
adc
pop
fs
mov
jmp
add
and
adc
out
sbb
fistl
mov
add
or
pop
pop
push
or
or
or
js
decb
or
or
adc
adc
push
adc
or
pop
sbb
adc
adc
adc
add
push
lods
fnsave
pop
adc
outsl
dec
or
inc
add
jo
add
and
add
add
les
add
lock
mov
rcrl
shlb
incl
jge
call
xor
adc
jmp
and
xor
inc
mov
adc
xor
cmpb
lods
and
mov
inc
add
cmp
adc
add
jbe
jno
daa
add
arpl
adc
inc
cmp
and
inc
pop
add
jecxz
adc
or
add
cmp
cmp
incl
lods
push
adc
pop
popa
jno
and
adc
mov
mov
lock
loope
icebp
or
push
or
mov
sbb
addb
loopne
scas
fiaddl
or
js
ljmp
adc
cli
sub
rcr
push
ret
xchg
jmp
jae
sub
std
cmpsb
xor
aas
imul
fdivrl
add
mov
mov
adc
xchg
mov
inc
dec
test
mov
cmp
xor
out
cmp
xor
and
fistpl
jg
inc
add
std
push
iret
xchg
inc
jl
repnz
dec
or
adc
pop
inc
inc
xchg
inc
leave
push
add
adc
pop
std
or
add
lcall
cld
cli
and
mov
fiaddl
jg
fnstsw
ficompl
cmpsl
xor
mov
test
pop
lahf
mov
cli
aad
std
movsl
jecxz
pop
mov
lods
test
push
stc
or
xchg
jg
or
insb
sub
addr16
out
or
ljmp
push
push
xchg
add
repnz
inc
lock
scas
jle
fcmovnu
clc
cmp
cmpsb
fisubrl
in
mov
orb
int3
lcall
fs
scas
push
mov
pop
pop
mov
popl
movb
xchg
sbb
scas
adc
pushl
scas
xchg
test
aam
and
sbb
sarl
and
rcr
incl
fwait
movsb
jmp
push
lret
push
out
in
and
ss
repz
cmpsb
pop
outsl
lods
in
icebp
mov
pop
lock
std
or
pop
mov
daa
test
aaa
dec
jg
jl
out
outsl
loope
loope
rorl
mov
int
arpl
mov
jp
push
out
or
push
sahf
pop
clc
sti
jg
jno
lock
jg
inc
icebp
xchg
std
sarl
xor
hlt
and
xchg
jmp
sbb
das
fcomps
add
pop
jb
mov
mov
push
mov
sub
pop
mov
jl
rorl
adc
xlat
gs
jg
hlt
push
add
stc
loope
aad
outsl
jg
mov
sar
andl
aas
icebp
testb
mov
jg
pop
xor
jns
mov
in
repnz
jno
pop
sub
jg
ljmp
cli
push
inc
sbb
paddb
inc
mov
clc
jb
adc
push
lock
lods
jp
testb
sbb
into
fcomps
sbb
sbbl
loopne
xlat
cmp
test
loopne
cli
adc
aaa
xchg
in
add
es
or
dec
fisttpll
out
aas
std
cli
mov
push
push
idivl
cmp
sub
inc
scas
incl
cmpb
jg
je,pn
sub
jg
imul
mov
mov
inc
es
gs
dec
jns
enter
or
push
pushf
push
scas
xlat
sub
cmp
sti
punpckhbw
cmpsb
orb
clc
sub
sub
cmp
dec
inc
push
sub
xchg
pop
clc
pop
hlt
sub
movsb
add
add
lea
jg
gs
std
xorb
jg
pushl
outsl
adc
ret
das
pop
pop
pop
shlb
mov
sarb
sbbl
jno
or
sarb
std
pop
les
cli
ss
jmp
mov
inc
arpl
stos
mov
and
insl
add
leave
push
scas
loop
lcall
jge
push
shrl
mov
push
mov
adc
and
sbb
xchg
jo
jg
and
out
test
jae
push
iret
sti
cmp
ficoms
aam
sahf
imul
fcmovnu
rorl
insb
stos
arpl
add
cld
call
js
cmp
scas
lods
push
cmp
fistl
mov
adc
push
movsb
xchg
or
mov
stos
dec
lods
xor
lock
ds
cmpsl
scas
popa
in
pop
or
mov
xlat
pushf
cld
aas
clc
jge
jnp
sbb
outsb
mov
sbb
jecxz
inc
adc
mov
adc
clc
ljmp
push
push
jo
pusha
imul
pusha
jg
incl
das
adc
cmp
xchg
mov
cwtl
pop
xchg
ftst
jbe
xchg
push
cli
jb
and
jae
shrb
jmp
jg
mov
lahf
cld
sub
aas
stc
add
out
gs
jno
fidivrl
lock
clc
mov
pop
cld
addl
adc
and
int3
mov
push
enter
jecxz
scas
sub
loop
sar
in
pop
mov
sub
mov
dec
incb
fisubrl
aas
mov
push
sbb
push
inc
or
pop
jg
add
pop
iret
mov
jg
mov
aad
test
in
pop
mov
lock
mov
iret
push
jbe
lock
std
stos
icebp
pop
incb
jno
adc
push
inc
mov
jecxz
sbb
sarl
adc
loopne
sar
adc
jbe
mov
clc
sti
push
sti
imul
dec
push
in
aas
mov
shlb
loope
fsubrl
lock
and
pop
fadds
clc
xchg
pushf
mov
incl
in
or
and
mov
adc
inc
aas
inc
push
push
rcrl
rolb
pop
inc
jb
fistpl
adc
call
sub
pop
pop
nop
mov
inc
pushl
sti
arpl
daa
std
or
sbb
mov
inc
cmpsb
popf
push
loop
sbb
or
imul
xor
mov
decl
dec
xor
fsubr
fistps
lds
fidivrl
jg
jmp
stos
pop
add
dec
mov
sub
jge
xor
push
les
sbb
sbb
cld
addl
mov
jg
sbb
mov
lahf
outsl
int3
push
sbb
jg
xchg
pop
test
bound
pop
outsl
pop
loopne
push
in
jge
popa
push
test
jbe
jg
ljmp
sti
fsubs
shl
dec
jp,pn
adc
lahf
mov
or
out
lcall
sub
shl
cld
mov
in
mov
pop
jg
pop
shrb
rcl
jg
adc
xor
pushl
fisttpl
sub
jmp
lea
jp
jnp
jecxz
out
cld
adc
inc
lds
push
pop
adc
imul
or
inc
pop
mov
xor
rorb
and
add
cmpsl
push
sbb
mov
pop
inc
cmpsl
enter
lcall
iret
inc
mov
into
test
xchg
movsb
insb
or
and
xchg
fisubrs
lcall
test
aas
cld
out
fcomi
fistps
outsl
lock
in
jmp
stc
out
mov
clc
push
std
mov
jl
icebp
or
out
jne
or
cmc
mov
push
mov
fsubrp
dec
sahf
push
loop
dec
inc
push
pop
fcmovb
inc
adc
inc
loopne
test
out
rolb
pop
and
fisttps
mov
or
dec
ss
div
leave
inc
lods
movsb
or
repnz
mov
or
call
fistps
cmpsl
lret
pop
in
cmp
jmp
mov
int
cmpsb
insl
pop
lock
jmp
hlt
dec
mov
incl
inc
aas
mov
jg
mov
outsb
call
loopne
addr16
sbb
cld
daa
jp
std
adc
cltd
stos
pop
test
or
mov
ret
nop
cmp
das
incb
lock
pop
div
cld
idivl
fs
sbb
stc
lahf
loope
jae
jmp
shrl
je
jge
aas
mov
push
fbstp
out
xchg
add
out
icebp
mov
cld
and
lock
mov
cmpsl
popf
sti
mov
fisttps
aaa
ja
push
test
jmp
call
xor
scas
mov
push
adc
mov
and
sbb
mov
push
sbb
mov
cmp
int
add
push
pop
aaa
push
cltd
nop
test
add
sbb
xchg
fimull
in
jmp
int
jmp
arpl
adc
mov
sub
jbe
mov
clc
loope
loope
mov
lahf
jp
dec
dec
scas
jo
xlat
sbb
fbstp
xchg
sarl
fdivrl
xchg
lcall
decb
js
pop
imull
sarl
pop
out
xchg
xchg
cld
jno
ret
cmp
inc
sbb
iret
aas
push
dec
jge
pop
clc
xchg
cmpsb
ljmp
ds
inc
mov
in
sbb
xchg
imul
jle
bswap
jmp
outsl
jmp
std
mov
daa
jmp
faddl
mov
pop
mov
outsl
pop
std
jg
add
pop
stc
push
dec
out
fstpt
mov
enter
daa
xchg
pop
add
test
out
daa
icebp
push
lahf
sti
inc
pop
imul
push
xchg
cmpsb
scas
les
pop
xor
mov
xchg
mov
fildll
faddl
or
add
add
sti
push
sti
int3
les
push
mov
push
pop
mov
cmp
int3
pop
iret
aas
and
add
pop
add
in
arpl
pushf
jecxz
stos
int
push
mov
call
mov
add
dec
and
xchg
mov
pop
and
lcall
inc
testb
xor
inc
repnz
jmp
stos
jo
inc
pushl
fwait
dec
xorl
lea
movsl
mov
xchg
gs
mov
push
in
ret
and
and
mov
daa
push
add
inc
mov
rol
lds
mov
mov
xchg
mov
rcr
in
jo
pop
int
fdivl
push
jl
mov
scas
in
adc
xor
push
sti
scas
xorl
decl
dec
mov
mov
lcall
insl
pop
mov
inc
xchg
push
insl
loopne
cld
xchg
fildll
movsw
xor
cmpsb
dec
cltd
icebp
lods
push
xchg
ljmp
xchg
cmp
int3
ds
jne
scas
ds
mov
shll
sbbl
xchg
xchg
aad
sbb
mov
rorl
out
cs
aas
xor
dec
out
lods
gs
fwait
lock
aas
push
les
inc
push
dec
imull
adc
sahf
mov
testb
mov
cmpb
or
xchg
dec
xor
ljmp
insl
xorb
mov
mov
rorl
into
and
pop
sbb
ljmp
cmp
sahf
lcall
clc
out
enter
je
cltd
mov
jg
jae
clc
call
xchg
mov
jmp
sub
loopne
inc
int3
or
pop
test
cwtl
aas
cld
aaa
jmp
push
enter
xor
jne
js
mov
subb
pop
out
je
push
mov
cmp
ljmp
imul
adc
fwait
test
call
sbb
icebp
incl
int
cli
ja
out
inc
pop
stos
stos
and
dec
push
repz
cmp
inc
ror
push
lcall
add
xchg
adc
dec
into
jecxz
mov
shrb
add
incl
lea
mov
cmc
cmpsb
bound
pop
fisttps
mov
stos
or
cmpsb
rol
lret
jo
movsb
mov
pop
mov
aad
mov
add
mov
mov
stos
fs
data16
dec
incl
js
test
inc
sub
mov
dec
adc
mov
mov
xor
cmp
push
cmpsb
mov
shll
push
inc
mov
mov
lcall
insb
loope
rorb
fldl
fstpt
out
leave
pop
fldcw
das
jno
mov
jno
jmp
pusha
sarl
iret
cmpsl
pop
frstor
add
fldenv
pop
leave
xor
push
pop
xrelease
aaa
or
rcll
dec
setge
hlt
jg
inc
push
outsl
cmp
cmp
in
push
repz
jmp
inc
adc
movsb
rorl
mov
shlb
ja
cmp
ja
inc
incl
aam
clc
fcmovnb
call
inc
push
test
inc
sub
xor
ljmp
dec
movsb
lret
cld
rcll
sub
push
test
or
dec
dec
rorl
lods
xchg
repnz
iret
shll
repz
out
cmpsb
das
mov
cmpsb
icebp
push
movsb
push
lcall
cmp
push
jl
mov
mov
add
insb
mov
dec
cs
ljmp
xchg
lods
pop
push
cmp
push
adc
pop
and
dec
lcall
call
pop
jmp
cmp
adc
bound
icebp
xor
fnstenv
cwtl
ljmp
pop
add
or
adc
and
mov
mov
fisubrs
or
jno
test
cltd
mov
je
mulb
mov
pop
cmp
out
push
ljmp
ljmp
dec
and
bound
inc
cmp
mov
jg
ljmp
mov
pop
pop
sub
pop
mov
les
xor
mov
clc
cltd
jg
dec
sbb
push
or
cmp
mov
mov
or
stos
ret
push
xor
sub
xchg
iret
mov
sarl
xor
cmp
push
inc
mov
xchg
sarl
add
sub
pmovmskb
jl
addl
jmp
pop
xchg
push
call
jge
sbb
inc
iret
mov
add
leave
mov
fwait
out
mov
es
decl
or
testl
dec
and
fs
js
pushf
ljmp
push
jns
lods
pop
xor
push
jmp
or
add
rol
sbbb
incl
lahf
rcr
mov
add
jnp
xchg
loope
cwtl
dec
fs
cmp
fs
hlt
add
push
mov
fcoml
pop
xor
imulb
pop
mov
call
outsl
bswap
imulb
cmp
test
sbb
pop
dec
mov
fbstp
jp
ret
mov
and
cmp
sub
push
lcall
fistl
in
sub
jae
cmp
xor
xchg
cmp
jns
fmul
nop
jge
push
das
gs
xchg
jae
loopne
sbb
xor
test
cmp
pushl
addr16
lret
mov
stos
jnp
jb
mov
stos
mov
jecxz
lcall
rcrb
aaa
jno
leave
mov
inc
xor
jne
mov
or
push
les
arpl
mov
inc
subl
int3
repz
cld
insb
pop
nop
add
movsb
sbb
inc
xchg
int
add
sub
adc
cmp
iret
mov
fldt
mov
xchg
ljmp
insb
sbb
es
sbb
ja
cmp
mov
movsb
jo
mov
fsubp
jo
jge
xchg
cltd
and
push
loope
dec
dec
aas
jns
aam
dec
cmp
fdiv
jmp
jns
cmp
jae
mov
cmp
in
xor
lcall
ss
bound
outsl
adc
scas
xchg
lcall
loopne
pop
test
iret
icebp
jle
pop
cld
pop
dec
cmp
aaa
inc
xchg
in
sbb
aad
mov
jnp
push
add
and
dec
je
mov
add
mov
stc
arpl
push
lods
dec
inc
insb
sub
pop
lods
mov
cli
jbe
repz
mov
mov
push
fildll
xchg
or
subl
pop
jmp
stos
ljmp
pop
out
pop
insl
mov
stc
dec
lock
bound
jge
push
sahf
popf
sbb
xorb
fcoml
mov
inc
mov
jbe,pt
xor
or
filds
sub
pop
es
xchg
lcall
js
pop
mov
outsb
jbe
addl
ret
clc
or
pushf
jbe
sub
loope
lcall
xchg
xor
add
fistpll
ljmp
lods
out
sarb
sub
in
movsl
cmc
pushl
icebp
sub
pop
jb
in
das
scas
shrl
clc
add
mov
pop
pop
mov
rolb
adc
in
push
std
dec
lds
fildll
fiaddl
cmp
mov
push
scas
dec
int
pop
mov
pop
cmpsb
test
push
xchg
jmp
dec
adc
pop
loopne
xchg
pop
jp
push
sti
pop
movsl
xor
sub
fcomps
jmp
sbb
shl
mov
mov
push
nop
daa
out
test
scas
stc
mov
pop
nop
pop
mov
call
pop
aad
sbb
push
xchg
inc
imul
push
mull
and
dec
insb
lret
jmp
or
add
push
add
call
pop
dec
ja
dec
mov
out
mov
lahf
out
daa
outsl
mov
xchg
cli
decl
mov
dec
sarl
cmp
fidivrs
adc
ljmp
mov
les
or
xlat
jae
call
mov
and
sbb
fimull
dec
in
xchg
push
out
addr16
imul
pop
cld
cmp
ds
mov
mov
mov
lea
add
lock
push
sub
jmp
int3
sub
dec
mov
cmpsl
cmp
push
inc
ret
shlb
and
test
call
adc
addr16
repnz
and
inc
xlat
nop
mov
lods
pop
xchg
and
sahf
bound
xor
mov
xorb
fwait
icebp
dec
xor
rorl
xchg
repnz
xchg
inc
sbb
jnp
stos
daa
rcr
ds
cmpsb
movsb
mov
iret
data16
sub
test
and
push
mov
pushf
push
rolb
push
cmpsl
jmp
or
mov
cmpsl
inc
inc
testl
les
mov
testl
push
stos
sub
out
fistpl
inc
xchg
test
icebp
call
inc
cltd
push
pop
shlb
jae
std
movsb
rcrb
mov
fsubs
jo
daa
cmp
jl
sub
xchg
popa
sahf
xchg
add
call
movsl
ret
mov
sub
mov
insb
nop
push
out
cli
sub
cmp
sub
cmp
lcall
mov
pop
sbb
hlt
mov
xor
iret
lock
das
cld
xchg
inc
call
add
adc
cld
loope
insl
loop
ljmp
rorb
jecxz
leave
adc
push
icebp
pop
sbb
pop
icebp
decl
shr
decb
outsb
add
outsb
sbb
addb
aas
inc
add
rclb
mov
jg
xchg
mov
pop
rcl
pop
add
repz
xor
jg
cmpsl
jb
sti
icebp
jae
ror
data16
jo
nop
rcll
cmp
ja
jmp
inc
loop
into
testb
pop
mov
sub
sar
aad
or
lcall
aad
call
dec
push
nop
cmc
push
inc
cmpsl
pusha
mov
inc
out
jge
shrl
sbb
out
push
or
insb
xor
sbb
aad
inc
insb
and
loop
stos
xchg
mov
gs
jo
mov
rclb
mov
inc
add
cmp
lods
adc
or
scas
fmul
clc
movsl
into
push
test
mov
in
sub
adc
stos
into
bound
cltd
xchg
stos
and
divb
call
push
daa
sahf
pushf
and
imul
adc
push
sub
movsl
rcrb
cmp
lcall
repnz
add
xor
stos
in
popa
scas
iret
rclb
add
daa
mov
rolb
push
test
push
test
hlt
mov
push
sti
xchg
mov
incl
andl
outsl
inc
push
add
xor
cld
xlat
inc
or
and
loope
mov
decl
enter
lods
xchg
ljmp
sti
jne
int3
and
push
fisttpl
jnp
imul
bound
sub
outsl
jp
inc
and
pushf
test
daa
stos
xchg
sbb
mov
aas
in
push
jl
fstpt
xlat
adc
add
out
xchg
push
cmc
stos
pop
dec
pushl
repz
xlat
inc
jo
hlt
xor
js
outsl
sbb
cmp
mov
push
jmp
mov
lcall
insl
inc
insb
push
adc
movb
mov
and
rcl
sbb
jmp
jge
andl
mov
lods
outsl
cli
cmp
xor
arpl
xchg
xorl
adc
mov
cmpsb
aas
push
jbe
hlt
inc
stc
cmp
ja
stos
or
and
inc
daa
movsb
idivb
lahf
cltd
dec
jo
shll
arpl
push
inc
sub
pop
jecxz
lods
lds
or
mov
mov
mov
das
fs
or
xchg
loopne
and
mov
mov
sahf
lret
call
rol
xor
divb
mov
ja
inc
iret
jo
das
leave
mov
incl
sahf
hlt
xchg
add
or
hlt
insl
pop
sbb
xchg
push
adc
jl
ret
call
mov
lret
rcrl
dec
jb
push
or
cmpsl
sbb
jge
xor
incl
hlt
dec
xlat
das
cs
aas
pop
push
xchg
lcall
test
add
dec
xchg
sbb
mov
test
push
popf
fwait
xchg
xchg
std
inc
jmp
dec
mov
add
movsl
call
rol
test
jl
shl
lods
call
mov
or
sbb
mov
pop
or
mov
scas
pop
imul
lock
leave
gs
mov
hlt
ljmp
inc
and
fwait
xchg
lods
mov
popf
push
bound
lret
or
pop
imul
sbb
ret
xchg
push
mov
xlat
fisttps
lock
lcall
inc
decl
dec
and
ss
int
xor
dec
jne
int
push
fs
mov
lret
mov
loopne
movsb
clc
mov
dec
or
cld
pop
repnz
xchg
sarl
xorb
jp
inc
cmp
movl
push
and
sbb
int
stos
pop
aam
in
lcall
lcall
cli
cmp
mov
or
mov
cmc
cmp
add
and
jp
movsb
mov
pop
xor
sahf
mov
cmp
push
das
lahf
test
ljmp
pop
mov
pop
dec
pusha
popf
sub
and
mov
test
nop
decl
loop
mov
test
push
xor
subb
pushf
xor
xor
sub
addb
icebp
pop
test
pop
inc
xchg
mov
sbb
negl
dec
jp
cli
in
int
cld
out
pop
cmc
movsl
jbe
fisubrs
sbbb
mov
mov
xor
fisubs
mov
es
clc
adc
shrb
adc
mov
push
add
xor
mov
inc
loop
scas
inc
sti
lods
dec
xor
adc
pop
and
dec
les
fwait
out
xchg
fwait
jno
movsb
mov
sub
or
mov
lods
pop
sub
sbbb
ljmp
lcall
adc
jne
aas
jne
jmp
fstpt
in
jle
inc
sub
xchg
xor
push
mov
or
movsl
mov
ret
cs
jns
mov
and
jg
lock
adc
push
dec
xchg
sbb
mov
xchg
fnstsw
mov
call
xchg
sahf
leave
jecxz
mov
sti
outsl
sub
or
jo
push
adc
pushf
fs
cmp
mov
lods
inc
fistpl
cmp
add
cwtl
push
out
mov
mov
incl
push
icebp
mov
mov
or
scas
mov
daa
mov
jmp
insl
jbe
inc
pushl
icebp
cmp
pop
daa
dec
sub
pop
pop
movsb
mov
xchg
decl
mov
imul
enter
inc
or
insl
mov
sub
hlt
call
jo
bound
jne
rorl
cmc
xor
push
fdivrs
call
rcr
sub
sub
dec
inc
mov
ja
arpl
mov
jecxz
notl
hlt
inc
adc
pop
cltd
or
test
jmp
jne
inc
inc
sub
lret
test
cwtl
mov
sub
push
rolb
sarb
xor
ljmp
lock
pop
out
aad
out
lock
and
hlt
subb
push
arpl
sub
jne
pushl
outsb
push
cli
hlt
jl
sbbb
hlt
aas
mov
and
out
fs
or
adc
push
data16
movsl
sbb
movsl
push
add
pushl
mov
sbbb
add
mov
ret
ss
mov
or
lea
fs
inc
cli
xor
mov
cwtl
incl
mov
sbb
add
sub
xor
and
sbb
add
sar
call
push
loope
test
shlb
mov
inc
xor
test
aad
repnz
ret
pushl
incl
cwtl
dec
mov
imul
fcomps
add
dec
lret
or
pop
cmpsb
sbb
jmp
lahf
jle
inc
dec
sarl
imul
ficoms
cmpsl
js
ret
fldl
je
jmp
xchg
cmp
mov
clc
lahf
sub
cmp
jbe
add
and
cmp
mov
and
clc
inc
loop
pop
mov
xor
out
xchg
jg
push
pop
cmpl
out
loopne
mov
movsl
addr16
mov
gs
cmp
fwait
pop
hlt
decl
sub
inc
sub
sub
dec
xor
ljmp
inc
lods
out
in
fldt
jg
fistps
mov
xchg
les
mov
jecxz
je
popf
inc
lahf
adc
pusha
leave
daa
stos
or
jns,pt
repz
cmp
leave
test
insb
call
and
xchg
mov
mov
ret
push
xlat
sub
ret
and
mov
movsb
lcall
icebp
pop
or
shll
pop
sub
out
cmc
decl
or
dec
movsb
rorb
xchg
ret
in
lea
stc
jmp
adc
pop
incb
jl
pop
out
jl
ljmp
sbb
icebp
int
aad
cld
adc
loopne
das
stos
adc
mov
in
call
jns
clc
ljmp
jg
add
adc
mov
cmpsl
jg
gs
push
adc
fnsave
pushl
faddl
rcrl
add
adc
and
gs
or
pushl
scas
add
hlt
outsl
pop
fcoms
je
movsl
clc
lcall
jl
repnz
fstps
js
fisubrl
mov
je
decl
aam
and
in
xchg
sbb
das
or
and
int
je
lcall
lahf
and
push
xor
dec
push
imul
mov
arpl
sbb
jnp
mov
push
cmpsl
xchg
incb
call
inc
fisubl
mov
lds
cs
fcom
loopne
ljmp
lods
lcall
push
ja
lock
loopne
int
mov
mov
cmpsl
ss
cmp
sbb
mov
hlt
sahf
jo
dec
nop
pop
adc
pop
cmp
cmc
jb
mov
int3
pop
xor
out
push
cmp
xlat
scas
jg
xor
int
sbb
push
xchg
inc
xor
xor
fbstp
mov
cltd
loop
xchg
mov
ficoml
in
cmp
jae
xchg
cwtl
or
mov
cld
popf
nop
mov
mov
lods
loop
pop
push
lds
mov
lret
scas
or
add
js
push
jmp
sahf
sbb
mov
lds
inc
mov
into
stc
ja
lock
mov
loopne
dec
and
mov
sub
mov
dec
subb
test
psrlq
cmp
sarl
xchg
bound
sbb
sub
mov
cmpsb
das
or
addl
shll
cmp
jnp
xor
out
adc
negb
jle
cmp
insb
test
pop
mov
js
mov
test
xor
pushl
out
popf
pusha
mov
sub
mov
popa
inc
aas
jg
push
pusha
cmp
aas
mov
call
jl
pop
into
or
jmp
xchg
fs
xor
fiaddl
fnstcw
das
jg
stos
cli
dec
xchg
jl
popa
jg
mov
repz
push
out
cmpsl
inc
jae
inc
imul
xchg
popf
and
mov
or
mov
dec
ljmp
mov
out
add
push
mov
cmp
test
mov
xchg
mov
neg
out
mov
push
and
frstor
subl
push
sub
fsubrs
icebp
xchg
dec
imul
int
mov
pushl
sub
xchg
xor
inc
and
mov
dec
or
decl
test
mov
in
jge
xchg
subl
insb
lcall
or
mov
inc
stc
lahf
sbb
lea
mov
xor
je
cwtl
imul
in
insl
mov
std
cs
int
adc
inc
push
mov
call
jg
sahf
jmp
mov
pop
sbbl
mov
out
sub
pushl
fs
cmp
mov
mov
jg
incb
cmp
mov
lock
and
test
lds
insl
fcomip
notb
mov
aad
stc
xor
js
and
pop
es
xchg
add
call
mov
roll
insl
mov
inc
fdivrl
pusha
xchg
inc
test
cmp
cld
flds
jl
sub
mov
aas
out
lods
pop
sahf
cmc
mov
stc
int
xor
inc
frstor
mov
xor
pop
xchg
pop
imul
shrb
iret
push
push
pushl
push
jb
iret
lahf
test
push
dec
das
mov
xor
pop
mov
ret
in
sbb
pop
mov
es
out
mov
mov
push
push
scas
ror
loopne
jg
dec
cmp
cld
test
out
addr16
mov
movsb
mov
aaa
std
pop
stos
or
or
xor
es
lahf
cmp
inc
in
repnz
mov
pop
test
in
sub
lret
hlt
mov
push
add
cmp
jg
cmpb
test
push
jp
nop
push
idiv
mov
ljmp
mov
lret
sub
cmpsb
lret
in
or
lods
inc
add
jmp
push
xchg
shrb
mov
neg
test
out
mov
pop
dec
or
xor
push
in
adc
enter
lcall
enter
sbbl
sbb
pop
inc
imul
idiv
ljmp
xchg
fidivs
loop
fiaddl
push
pop
jo
xchg
mov
imulb
dec
sbb
call
fwait
imul
pop
addr16
dec
inc
dec
shr
movsl
mov
std
fwait
cmp
dec
dec
mov
mov
jg
icebp
jo
or
jl
rol
push
les
sbb
orl
adc
xchg
cmp
and
pop
mov
pop
cmp
in
fcmovb
mov
ret
and
test
xor
push
jecxz
inc
fwait
jg
or
push
xor
lock
fmull
and
or
das
loop
and
call
adc
test
and
fs
loop
daa
xchg
inc
pop
ljmp
leave
push
mov
pushl
xchg
dec
test
ret
aaa
and
add
pop
mov
add
push
arpl
shrb
test
fdivs
leave
addr16
cli
push
jl
push
scas
sbb
imul
inc
pushl
and
insl
xor
xlat
xor
call
scas
fsubl
dec
jg
and
std
les
xchg
repnz
loop
icebp
bound
inc
xor
push
lcall
call
out
ds
fimull
sub
mov
mov
aam
and
adc
mov
cmpsb
test
frstor
enter
mov
jo
pop
jmp
add
stc
xchg
dec
mov
out
sub
inc
test
push
enter
xor
sti
fwait
into
ljmp
push
int
mov
push
lret
sarl
mov
xor
out
mov
mov
aad
fs
xor
mov
sbb
sub
adc
in
adc
call
cmp
sahf
outsb
and
les
push
and
mov
repnz
loopne
into
push
sbb
ljmp
xchg
and
lcall
aaa
mov
inc
pushl
sbb
hlt
and
xchg
fidivrs
imul
aaa
loope
fisubrl
mov
xor
arpl
sti
inc
and
fcomip
or
adc
scas
mov
cmpb
inc
lods
aad
cwtl
pop
ljmp
icebp
dec
inc
ljmp
xchg
test
xor
inc
sub
cmp
pushl
xchg
out
adc
push
incl
push
xchg
icebp
out
mov
cmpsb
cmpsb
fnstenv
push
int
jg
mov
incl
or
adc
outsb
pop
loopne
push
pop
int
cld
mov
incl
jl
inc
adc
cmc
pop
xchg
hlt
mov
mov
xchg
ljmp
add
ljmp
inc
mov
mov
mov
cs
or
xor
aas
fwait
jnp
std
movsb
cmp
and
push
incl
pop
fbld
sbb
jecxz
mov
mov
push
sar
lcall
xchg
xor
shlb
mov
pop
loop
in
sbb
adc
mov
into
sub
pop
jecxz
shl
icebp
xor
dec
fsubrs
mov
pusha
cmc
cmp
incl
push
push
sub
in
insb
mov
dec
int
cs
add
sub
push
push
lds
mov
popa
das
stos
mov
clc
pop
mov
mov
cmp
sub
jb
jns
addr16
lret
lock
das
stos
mov
mov
xchg
sub
imul
inc
call
mov
xor
lret
fsub
fs
jmp
xor
add
jg
mov
sbb
adc
cmpsb
xchg
clc
les
jecxz
pop
pop
pop
pop
pop
add
inc
push
test
call
cmpsl
xlat
arpl
adc
out
push
fs
mov
inc
les
in
mov
call
stos
fisttpll
and
sub
and
fwait
or
int
mov
add
fistpll
dec
test
or
push
mov
mov
push
dec
mov
insb
inc
dec
mov
decl
cwtl
scas
movsb
imul
xchg
sbb
popf
cmp
leave
pushf
jbe
sti
push
or
mov
pop
pop
lret
pop
outsb
xchg
loop
rcrl
adcb
inc
aaa
inc
aam
dec
in
jle
and
jge
lea
adc
pop
enter
das
clc
mov
fmuls
cmpsl
call
jns
lcall
lcall
movsb
dec
pop
mov
sub
cs
int3
add
fisubrs
or
dec
mov
outsl
or
sub
repnz
insl
xor
mov
xor
popa
mov
add
pop
add
add
mov
divl
outsl
loop
aas
bound
imul
jmp
xlat
test
cmp
cmpsl
ss
jp
ret
inc
push
popa
popf
leave
sbb
scas
xchg
mov
push
clc
add
aam
and
out
push
cmp
shll
push
adc
inc
dec
call
push
and
dec
xlat
push
rclb
push
mov
mov
pop
pop
cmp
lcall
dec
mov
xor
subps
fnstsw
daa
inc
scas
popa
jle
xchg
sbbl
xchg
out
pushl
adc
push
cli
mov
pop
cmp
jbe
fisubl
aas
addb
pop
mov
decl
test
inc
dec
clc
adc
fsts
arpl
cmpsl
sbb
add
mov
cmpb
movsl
nop
dec
or
ds
ds
lds
jno
cmp
aaa
adc
jecxz
lcall
pop
iret
imull
les
gs
inc
nop
push
scas
cs
xor
call
test
jae
aaa
push
push
xchg
loop
daa
shlb
repnz
out
mov
movb
mov
fnsave
sbb
jmp
cltd
jl
repnz
lock
adc
mov
jmp
test
jg
rcll
jno
fadd
out
xor
mov
test
in
xor
incl
push
cmp
daa
orb
push
mov
cmc
adc
mov
push
mov
cld
jmp
imul
js
aaa
sbb
fiaddl
xlat
data16
jno
mov
test
ljmp
fdivrl
into
lret
data16
decl
daa
mov
hlt
push
xchg
adc
cmp
ds
adc
in
enter
fldenv
jne
sbb
sbb
cmp
decl
mov
lret
mov
rcrb
mov
jbe
xchg
mov
cmp
call
pop
xchg
mov
iret
or
xchg
loope
jg
int3
cmp
adc
imul
sub
out
in
sub
xchg
imul
int3
sbb
roll
mov
pop
in
mov
decl
mov
out
mov
pop
push
pop
and
insb
or
sarl
jns
mov
and
fdivr
call
push
in
out
icebp
jbe
dec
or
push
push
sbb
call
into
xlat
inc
xchg
or
pushl
decl
dec
xor
fimull
cmp
pop
jmp
mov
xor
hlt
add
mov
mov
jnp
mov
stos
shl
aaa
std
fucomp
and
mov
pop
inc
dec
add
lcall
sbb
ret
pop
cmc
popa
jge
call
jmp
and
cmp
and
push
jo
jo
jne
jp
ljmp
or
cs
in
scas
stos
ret
loope
shlb
cmp
xlat
dec
and
sbb
cmp
fldl
das
mov
ds
jmp
mov
jnp
pushf
int3
mov
dec
fwait
scas
in
sarb
xchg
lret
cmp
aad
mov
cmpsb
or
inc
mov
scas
xor
leave
mov
int3
or
aas
cmc
push
iret
lock
push
mov
movd
xchg
ja
sub
jl
pop
jg
pop
lds
insb
push
jbe
das
addr16
ficomps
mov
and
ljmp
pop
aad
cli
cmp
sub
jno
inc
mov
adc
addr16
pop
push
pushl
cltd
or
fnstcw
cmp
push
shrl
inc
out
dec
inc
dec
mov
inc
cmp
call
loopne
pop
lret
fiadds
mov
sti
ljmp
xchg
cs
dec
roll
mov
xchg
xchg
fmul
xchg
fimuls
popf
cmpsl
jl
hlt
fwait
loopne
insb
add
cld
incl
or
or
scas
or
jnp
dec
pop
push
push
pop
lret
pop
test
mov
push
sahf
mov
mov
test
jl
enter
sbb
sahf
aad
push
lea
nop
ljmp
and
mov
sbb
pop
jmp
lcall
inc
scas
imulb
push
stc
lcall
xor
and
pop
repnz
jp
sar
ljmp
ret
mov
divl
rcr
std
mov
in
and
lods
push
adc
jmp
pop
jecxz
jb
fwait
call
dec
sbb
sub
fsubrl
or
mov
hlt
decl
popa
cwtl
xor
pushf
out
inc
cmp
fisubs
fmull
gs
pushl
rcrb
mov
mov
add
jecxz
mov
sub
or
sbb
or
mov
inc
sub
lcall
add
pop
cmpsl
testb
hlt
shlb
sahf
inc
cltd
ss
je
jae
pop
mov
lcall
lcall
mov
cmp
mov
leave
adc
ljmp
dec
fwait
popa
sahf
xchg
pop
sub
mov
les
inc
xor
insb
xor
call
cs
nop
sti
adc
add
flds
fnstenv
popf
inc
insl
and
cmp
loope
add
in
fsts
daa
xor
clc
divb
mov
in
add
pushl
push
mov
jae
into
mov
inc
push
cmp
adc
xor
out
sbb
lcall
push
in
popa
dec
fsts
testl
fsubs
cmp
stos
aam
call
and
call
mov
outsl
out
loope
into
cli
cwtl
jns
jnp
mov
sub
xchg
outsl
add
sub
scas
clc
incl
dec
xor
lea
jp
push
pushf
fmull
stos
fstpt
imul
std
fcomip
lret
ljmp
outsl
push
movsl
cmp
jecxz
cwtl
dec
stos
ljmp
iret
jmp
lret
mov
ret
adc
cmp
scas
or
add
and
aas
push
aam
scas
ljmp
or
mov
dec
sbb
call
pop
xchg
scas
or
clc
stc
stos
xchg
inc
pop
cld
call
xor
inc
or
test
sbb
push
daa
lock
sbb
dec
xor
rcr
fnstenv
mov
pushf
mov
push
sbb
out
clc
cmp
jb
imul
lods
xchg
je
pusha
movsl
cmpsb
xlat
push
mov
sbb
outsl
call
cld
jno
sbb
xchg
jge
or
jecxz
jno
sbb
pop
jl
lcall
les
rclb
mov
out
fisubs
das
jl
xor
insl
cld
push
sbb
xchg
dec
pop
aam
jg
or
mov
imul
aas
jb
jp
lcall
jo
xor
cmp
scas
arpl
mov
lods
enter
sub
cli
xchg
sbbl
inc
add
leave
ffree
imul
aas
fs
hlt
daa
mov
call
dec
push
inc
and
cmpsb
dec
aad
jb
mov
sub
jmp
mov
incl
jb
pop
jl
shlb
adc
rclb
mov
cmp
push
pop
iret
inc
sub
jne
pop
enter
test
pop
mov
jg
cmp
add
inc
pop
cld
cwtl
mov
cmpsb
enter
sbb
pop
mov
dec
enter
mov
xor
jge
push
dec
add
jle
subl
mov
movsb
ljmp
jle
mov
sbb
dec
xchg
js
and
cmpsb
jl
inc
in
pop
subb
jmp
addr16
fs
cmpsl
scas
mov
xor
lret
lret
jg
int3
addr16
jmp
or
stc
mov
sbb
shl
push
js
mov
pop
cli
jmp
pop
loope
subl
pop
cmp
pop
cli
fs
incl
sub
call
jge
dec
inc
stos
mov
stos
hlt
fldlg2
daa
out
fcoms
ljmp
bound
add
and
ret
iret
lret
mov
xchg
jp
into
xor
mov
fcmovnu
lcall
mov
out
daa
ficomps
imul
push
mov
dec
popf
sub
lods
add
xchg
adc
cmc
fsubr
aad
lock
sbb
aas
xchg
add
cld
jmp
cmp
sbb
mov
push
mov
cmpsl
pop
scas
xchg
jbe
mov
into
jo
movb
call
fcoms
iret
iret
mov
jmp
xor
rclb
lods
cs
fucom
cmp
mov
inc
inc
pop
cmp
mov
aas
jne
mov
fidivrl
fbstp
sbb
push
out
or
sub
andb
dec
xor
push
mov
mov
or
inc
push
inc
je
decl
lret
mov
cltd
ljmp
sbb
jne
lcall
sarl
xor
pushl
dec
jns
into
mov
or
push
xlat
jecxz
pop
ficomps
pushl
cmp
test
imul
ja
imul
cmp
test
hlt
push
call
sub
or
test
or
xor
jge
sbbb
inc
mov
cmpsl
adc
xchg
cs
dec
mov
insb
aam
fdivrp
fildl
sub
jns
cmp
mov
cmp
jle
insb
pop
cmpsb
mov
add
repnz
iret
pop
mov
outsb
ljmp
and
testl
sbb
xlat
inc
scas
lods
mov
adc
test
jb
push
decl
and
out
adc
fildl
cmpsb
xchg
jle
xchg
and
ljmp
idiv
jmp
inc
add
pop
sbb
mov
or
scas
push
push
fdivp
mov
lods
rorb
decl
mov
sub
testb
sbb
xor
add
decl
test
icebp
mov
xchg
test
sbb
arpl
nop
inc
popa
clc
inc
mov
cmc
or
jo
lds
rol
aad
push
lcall
movsl
inc
scas
push
and
push
arpl
adc
loopne
jmp
scas
cli
ljmp
pusha
sti
inc
sbb
xchg
dec
mov
pop
pop
xlat
fldcw
aam
mov
lcall
popf
jmp
sbb
or
std
lods
sbb
popf
mov
rclb
popa
mov
mov
call
jno
inc
dec
stc
and
or
pop
rcll
fsubs
popa
sbb
pushl
adc
mov
decl
sbb
dec
lods
push
cmpsb
mov
mov
frstor
cld
sarb
xchg
xchg
mov
inc
cmpsb
in
inc
mov
lock
xchg
insl
imul
xor
or
dec
inc
test
or
pop
fcompp
nop
outsl
outsl
jg
pop
scas
mov
popf
fadds
lahf
xor
arpl
dec
lcall
mov
xchg
xchg
mov
je
jle
out
cvtdq2ps
mov
test
or
fdivrl
ss
or
nop
xor
mov
cmpsb
xor
arpl
xchg
cmp
in
and
pusha
test
test
fs
outsl
xor
cmp
repnz
outsb
aam
pop
hlt
imul
cmp
mov
in
jae
pop
pushf
fabs
loopne
out
mov
and
negb
fdivr
ljmp
jmp
mov
ret
je
lods
imul
xchg
ret
ss
mov
mov
lods
lret
sbb
aam
pushl
cltd
sbb
add
cmpsb
shlb
or
lods
jo
push
imul
lcall
dec
push
popf
xchg
push
mov
add
xchg
mov
addl
sub
ljmp
into
push
xchg
xchg
mov
add
pop
sahf
mov
push
in
push
fwait
adc
mov
cmp
sub
cld
cmp
push
arpl
push
loopne
jmp
pop
or
add
inc
adc
lret
mov
mov
arpl
into
negl
ljmp
call
push
sub
fpatan
loop
imul
inc
js
inc
mov
scas
add
scas
dec
bound
bnd
push
loopne
jl
mov
pop
int3
pushl
std
incl
mov
xor
icebp
mov
psubsw
mov
add
pop
or
icebp
jmp
pusha
in
das
ja
mov
pop
outsb
sbb
pop
test
lcall
dec
jecxz
aad
xor
call
fnstsw
push
jne
cmp
jmp
sub
popf
insb
jmp
xchg
sub
add
pop
in
repz
lret
lcall
in
mov
fdivs
jl
mov
pop
push
into
sti
xchg
sahf
call
pop
dec
xchg
or
clc
xor
and
pop
sub
pop
adc
enter
dec
sbb
mov
mov
push
pop
popf
mov
lea
sub
xchg
pop
addb
inc
push
imul
add
into
fnstenv
pop
loope
pop
int
ljmp
popa
into
cltd
addl
nop
jb
sahf
fldcw
out
or
into
sub
push
pop
ficoms
mov
jmp
call
jnp
sub
mov
pop
push
aaa
jl
mov
jbe
lret
lahf
xchg
sbb
dec
outsl
lahf
dec
test
std
scas
pop
decl
call
sub
test
loop
dec
mov
mov
inc
cmp
ret
sbb
adc
jmp
popf
sub
rol
push
ret
ljmp
nop
popf
xor
inc
pushf
cld
sub
cmpsb
cs
inc
ljmp
test
or
xchg
pop
push
sub
fcomip
aam
popa
out
fiadds
insb
adc
pop
inc
in
add
ds
fnclex
fcompl
mov
xchg
int
cmp
enter
jne
and
cmp
or
xchg
mov
out
push
xlat
es
pop
subl
cmpsb
ss
in
nop
sub
ljmp
test
push
insb
or
sub
popa
arpl
mov
scas
in
scas
int
pushl
dec
mov
pop
mov
adc
filds
lds
ret
pushf
inc
rcll
jmp
in
div
scas
add
sti
fwait
lret
dec
xchg
js
jp
pop
inc
xor
incl
adc
xor
sbb
pop
das
xchg
pop
std
cmp
xor
ss
pop
into
mov
aam
inc
cli
out
pushf
decl
xchg
cmpsl
xor
sbb
in
addr16
incl
js
mov
lret
data16
inc
stos
lcall
or
push
cmpsb
outsl
and
inc
jb
cmp
int
fldcw
push
push
daa
xchg
mov
xor
out
call
cmp
ljmp
sbb
loop
sub
mov
hlt
jg
imul
arpl
pop
icebp
incl
repz
lds
sarl
dec
in
lods
mov
mov
rcr
lcall
loop
idivb
test
add
imul
jae
mov
add
xchg
sar
ljmp
mov
in
mov
pop
test
popa
jns
or
call
cltd
push
mov
xchg
mov
sub
adc
mov
in
cmp
in
add
xor
sub
sub
or
or
shr
dec
insl
je
aaa
decl
dec
bound
fwait
dec
fwait
cmp
movsl
mov
je
cmp
icebp
aas
jmp
arpl
movsl
daa
mov
push
mov
stos
iret
push
lahf
jmp
sub
addb
pop
stos
adc
mov
pop
inc
cli
notl
jmp
jne
jle
xchg
xchg
movsb
cld
pop
daa
jb
cmp
cmp
inc
roll
xlat
dec
inc
icebp
or
inc
push
in
rolb
ss
pushl
sbb
or
out
and
push
adc
xor
or
and
pushl
mov
jecxz
shlb
repz
arpl
jno
dec
inc
pop
stos
fs
mov
incl
scas
jae
mov
in
push
push
and
imul
jmp
clc
adc
icebp
sbb
add
addb
inc
mov
add
mov
mov
inc
mov
fnsave
fwait
out
adc
test
scas
pusha
cld
jg
jle
inc
in
stos
dec
xor
and
shrd
imul
jle
mov
mov
add
data16
test
jo
push
add
call
repz
ja
pop
pop
xor
rcrb
lock
in
shl
leave
movsb
pop
mov
push
aas
test
or
jg
fwait
clc
sbb
mov
aam
in
push
fnstcw
pop
int3
pop
hlt
insl
xor
dec
inc
incl
inc
mov
into
int3
xor
pop
in
inc
pop
in
imul
cli
aas
lcall
jbe
out
test
in
leave
add
adc
lcall
xchg
adc
sbb
clc
jnp
roll
in
xchg
sahf
mov
pushl
pusha
mov
inc
div
cmpsl
dec
arpl
dec
mov
in
pop
ljmp
sbb
jmp
dec
xor
imul
leave
mov
popa
movsb
push
nop
mov
lret
imul
xchg
push
movsb
xchg
push
imul
dec
test
pushl
sbb
loop
scas
out
lods
jnp
dec
or
mov
clc
into
pushl
outsb
xchg
sbb
or
inc
in
out
add
loopne
daa
call
jnp
dec
or
scas
call
pop
adc
pop
mov
cmp
pop
add
jmp
push
negl
mov
dec
jge
and
add
mov
clc
dec
js
jns
inc
dec
jb
jmp
sbb
outsb
add
pop
out
inc
cltd
sub
repnz
out
jle
sub
add
ret
sar
pushl
out
fstps
add
xor
cmpb
lcall
out
enter
dec
js
xchg
xor
and
gs
movsb
mov
decl
mov
or
ret
cmp
imul
pop
out
aas
lods
shrb
jmp
fisttpll
lcall
cltd
loope
repz
and
jg
pushl
inc
inc
mov
lahf
pop
aad
sbb
cmp
dec
in
inc
xor
push
shll
int3
xchg
jle
lcall
mov
mov
pop
or
or
sub
aam
ret
jl
lock
push
clc
pushl
mov
and
pop
xchg
push
dec
andb
pop
clc
hlt
cwtl
xor
pop
scas
movsb
push
mov
and
ljmp
inc
mov
jmp
aaa
lods
pop
mov
lahf
and
popf
mov
aaa
pushf
push
imul
inc
and
ljmp
sarl
jnp
sti
mov
andb
int
pop
rcll
cld
cwtl
push
pop
jecxz
jge
mov
call
dec
js
mov
inc
push
push
cmp
aad
dec
imul
scas
in
incl
lret
gs
add
sti
or
inc
push
xchg
adcl
jp
arpl
push
insl
dec
cmp
dec
add
sub
loope
fistpl
jns
push
dec
punpckhbw
imul
adc
ljmp
jmp
xchg
inc
xchg
pop
cmp
mov
fxch
cli
out
cli
call
fs
xor
sbb
mov
jnp
mov
jo
adc
lods
xchg
cltd
decb
xor
xor
sub
or
jg
sub
cmp
popa
jb
adc
jmp
inc
test
xchg
dec
jecxz
call
clc
ffreep
mov
xor
inc
sbb
test
rol
mov
insl
pusha
sbb
call
jmp
sub
xchg
inc
lds
into
sub
imul
fisttpll
dec
push
andb
movsl
lds
in
mov
scas
mov
subb
repz
in
arpl
pop
mov
fs
ljmp
loopne
fcomps
xchg
mov
mov
pushf
sub
dec
fists
mov
lcall
fcomps
nop
addr16
mov
js,pt
ret
sbb
arpl
cmpsb
shl
out
pushl
sbb
loope
jno
ret
mov
push
sbb
insl
adc
testl
inc
cmp
pop
jb
mov
adc
mov
adc
fdivr
inc
jno
mov
dec
loope
fwait
testb
fstpt
sbbl
inc
in
and
add
inc
out
jo
mov
cld
xchg
mov
lods
jmp
clc
mov
cs
cmp
jnp
mov
aas
test
lcall
and
xor
std
jle
mov
in
mov
aaa
mov
lret
pushl
add
cmp
rcr
add
push
inc
xchg
test
fwait
pop
mov
dec
movsl
or
or
das
rcr
mov
and
insb
sahf
das
mul
shrb
xlat
push
lock
ss
call
insl
cmpsb
outsb
iret
insl
daa
sub
pop
sbb
lds
pushl
inc
fisttpl
jo
int3
jnp
iret
xchg
sbb
push
push
dec
in
and
enter
call
cmp
ficompl
push
daa
shlb
sbb
rcrl
jns
pop
and
jp
pop
inc
mov
mov
pusha
call
fwait
sbb
xchg
push
cld
xor
mov
into
dec
jg
cli
lahf
ljmp
inc
das
jmp
test
sbb
insl
sub
outsl
lret
sti
xor
add
imul
sub
dec
pop
pop
pushf
test
test
movsl
scas
jae
test
jmp
cmp
dec
dec
outsl
mov
sbb
leave
cwtl
test
test
add
cmp
data16
pushl
es
inc
imul
das
mov
push
sbb
ret
loopne
aaa
rcrl
jl
and
push
aam
mov
and
clc
call
sarb
mov
mov
mov
insl
push
push
test
jmp
xorl
cmp
xchg
xchg
mov
pusha
cld
jmp
xor
cmpb
sbb
cld
filds
cmp
cmp
test
jg
inc
sub
jnp
cltd
in
pop
jae
mov
mov
adc
lods
mov
dec
inc
xor
incl
inc
aad
push
inc
jl
repnz
xlat
xor
pop
sub
pop
inc
pop
loopne
in
or
xchg
aaa
jmp
dec
das
push
cmc
add
clc
xchg
incl
stc
add
out
enter
push
leave
add
mov
pushl
jae
mov
xlat
push
cld
mov
push
ret
testb
inc
aad
rcll
xchg
adc
jg
pushl
test
dec
std
mov
cmpsb
pop
mov
mov
xchg
pushf
cs
jecxz
push
psraw
cmc
gs
sahf
gs
lret
add
jg
dec
je
dec
dec
ret
jne
movsb
loope
cmpsb
and
mov
iret
in
mov
fldenv
scas
clc
ljmp
adc
dec
orb
xchg
pop
adc
decl
or
mov
stc
dec
call
xchg
push
jno
outsl
or
pop
fmull
aaa
lea
decl
call
in
int
mov
xchg
les
push
cwtl
cmc
jle
in
and
pushf
dec
pop
mov
push
ljmp
shrb
xor
mov
jno
in
js
loope
mov
or
out
cli
lcall
dec
or
iret
nop
int3
enter
jno
test
out
and
call
out
xchg
and
push
cmp
andb
dec
adc
or
mov
ficoms
ljmp
rorb
test
ficomps
pop
pop
mov
loop
sbb
mov
jl
adc
cmp
out
push
lret
aaa
push
sbb
cmp
mov
int3
test
aam
out
js
pushf
mov
mov
inc
pop
xor
add
aas
incl
call
adc
xchg
rcl
mov
cli
add
fldl
jbe
sbb
loope
cmc
fsubrs
shrl
xor
ljmp
add
fincstp
or
push
popf
inc
xor
ljmp
stos
jno
pop
push
or
xchg
or
negb
sub
lock
scas
ljmp
test
call
incl
adc
cmp
xbegin
fadd
push
pop
sbb
data16
cmp
std
int
jmp
and
push
adc
dec
mov
xchg
in
lcall
fdivrs
ja
cmp
std
out
ficomps
mov
ret
jmp
imull
aad
std
jmp
clc
inc
adc
les
ja
xchg
gs
pop
sar
jg
cs
sbb
add
repz
std
push
pop
mov
shll
mov
adc
mov
push
cld
xchg
fadds
pop
mov
clc
in
mov
fimull
ret
dec
xchg
xor
sahf
stc
xor
insl
mov
outsb
push
movsl
or
je
sub
lret
ror
inc
xchg
and
mov
lea
imul
push
iret
add
fucomip
fstpl
stos
dec
push
in
sbb
inc
push
ror
lcall
subb
mov
inc
test
scas
mov
pusha
xchg
mov
out
data16
push
roll
sbb
mov
xor
jmp
dec
sahf
loopne
mov
sahf
aaa
test
scas
popf
pop
fisubs
loope
imul
std
std
lcall
add
in
lret
popa
add
call
xchg
cwtl
mov
xchg
inc
mov
push
adc
lds
pop
mov
test
jmpw
add
jp
arpl
jns
filds
fnstenv
pop
repnz
fidivrl
add
sub
andl
bound
cmpl
sub
orl
xchg
sbb
int3
push
xor
mov
les
fs
in
daa
daa
mov
and
mov
in
jbe
fildll
filds
cmp
popf
dec
lods
iret
push
sub
cmpsb
pop
lods
pop
lock
sub
filds
incl
add
lahf
sub
add
jae
in
test
cli
out
shrl
push
mov
out
ret
mov
mov
cld
loope
leave
lods
sbb
mul
pop
insl
mov
lcall
jle
loope
adc
or
push
loop
adc
stos
cmp
mov
fistps
mov
push
rcr
and
mov
inc
or
clc
shl
or
push
scas
sub
cmp
or
sbb
pop
jmp
pop
orl
in
pop
stos
sub
movl
mov
pop
jge
leave
jmp
jne
mov
or
hlt
fwait
cli
repz
jg
or
pushl
call
mov
push
cli
shlb
aam
jge
mov
out
imul
adc
or
mov
mov
inc
xchg
ds
scas
cs
mov
mov
scas
jnp
cmp
cld
jmp
leave
aad
pop
inc
pop
fidivrl
jecxz
xor
jmp
ljmp
adc
push
jnp
stos
and
adc
popa
cmp
iret
int3
add
fldcw
mov
jb
xchg
sar
fprem
sti
push
outsl
sub
dec
inc
sub
mov
xor
stos
pop
xchg
mov
pop
enter
inc
jno
icebp
lcall
inc
enter
shr
inc
imul
rcrb
in
mov
sbb
lret
jmp
cwtl
cld
incl
lods
fsqrt
int3
xchg
xchg
dec
adc
ljmp
cmp
and
incl
xchg
fists
mov
incl
push
and
aam
jg
pushl
js
xor
js
mov
clc
cltd
mov
jmp
inc
into
pop
cmp
frstpm(287
or
icebp
sbb
loopne
pop
out
js
mov
jmp
cmp
cld
cmp
cmpsl
lret
inc
cmp
ficoms
loope
mov
test
decl
sahf
pop
xor
in
add
jle
dec
ja
sbb
jnp
cmp
ljmp
pusha
jae
xor
mov
mov
cs
mov
jl
and
xor
xchg
cltd
pop
mov
pop
sub
in
cmpsl
outsb
push
int
scas
mov
lret
sti
push
decl
and
sti
push
shl
jg
mov
dec
mov
repz
fildl
call
das
shrb
dec
cmp
movsb
mov
aas
scas
jmp
rcl
data16
ljmp
pop
adc
pop
out
dec
ror
push
scas
push
int
mulb
push
push
push
sarl
pop
popa
into
xchg
outsl
cmp
and
mov
and
adc
sub
inc
add
jg
mov
arpl
pusha
sbb
sub
ds
jae
adc
sub
pushf
dec
call
pop
inc
mov
loopne
ljmp
rcrb
jnp
xor
fdivrl
std
repz
dec
push
shrb
jmp
inc
jo
clc
push
add
jg
and
or
dec
mov
in
jg
das
dec
xchg
das
stos
fidivs
mov
pop
andl
dec
pushl
lea
mov
xchg
in
pop
push
cld
imull
movsb
addr16
icebp
scas
jp
and
call
fisubrl
xchg
mov
or
lds
xlat
xlat
pop
jo
cld
sbb
pop
js
jp
sbb
add
and
stos
ss
add
pop
and
clc
adc
gs
dec
lea
fwait
mov
in
orl
cmpsb
jg
call
sbb
icebp
int
andl
repnz
rcrb
loopne
inc
iret
sbb
rolb
xor
dec
test
adc
mov
pusha
aad
std
leave
jno
inc
xchg
sub
cmp
mov
push
inc
push
xor
lcall
mov
xor
std
jno
dec
iret
mov
xchg
inc
lcall
subl
xchg
adc
xor
push
mov
arpl
sbb
rorl
mov
mov
mov
push
pushl
into
stos
dec
rorb
xor
jne
hlt
jmp
mov
orb
pushl
and
cld
aaa
pop
add
cwtl
out
xor
ret
or
cmpsl
test
lcall
lahf
outsb
mov
bndldx
lret
pusha
aaa
inc
add
mov
subb
fdivr
inc
sub
imulb
mov
xor
xchg
lds
jge
fidivrl
incl
call
pop
xor
pushf
int
fisubs
pop
sub
cmp
subl
jmp
add
lods
push
pop
shrl
inc
lret
ljmp
push
add
and
in
cmpb
fisubrs
ret
imul
mov
orl
or
push
dec
add
ljmp
dec
ljmp
jnp
sbb
and
mov
sahf
pop
ret
shlb
pushl
je
adc
dec
lahf
push
sbb
push
cmpsl
ja
or
shll
lcall
mov
rorl
xlat
cmp
jl
xor
add
mov
sbb
fadd
lcall
xor
cmpsl
push
jb
movsl
push
push
xchg
xchg
mov
ljmp
pop
outsb
fsubrl
inc
movsl
lea
and
dec
push
mov
test
inc
pop
shrb
sti
aas
ljmp
add
mov
xor
jecxz
cmp
fstpt
mov
jmp
inc
add
mov
lcall
test
insl
test
jae
sti
push
leave
sbb
mov
fldcw
mov
jl
pop
push
aas
mov
outsl
inc
das
dec
ret
loopne
pusha
dec
test
or
ljmp
dec
das
into
in
ret
cmp
xchg
jns
pop
mov
inc
xor
jmp
mov
fstpt
adc
push
mov
mov
xchg
inc
jle
je
mov
cwtl
cs
ljmp
clc
lcall
pop
lock
lock
daa
xor
adcb
lahf
lods
fildll
mov
pushl
xor
pop
scas
loope
mov
or
pop
pop
pop
mov
jbe
mov
pushl
xor
imul
cmc
mov
data16
ret
xchg
iret
ret
inc
lods
mov
or
jmp
mov
sar
scas
adc
inc
cmp
xchg
inc
adc
lcall
fidivrs
push
push
inc
insb
sbbl
add
lods
pop
jns
loope
jae
push
cld
ljmp
mov
fidivrl
dec
mov
movsl
addb
shll
loope
xchg
daa
mov
xlat
and
push
add
jmp
jno
mov
inc
jae
adc
data16
lcall
fnsave
jns
shll
lret
adc
out
adc
popf
test
js
jg
jge
inc
mov
das
lahf
push
sarl
and
sub
dec
jne
add
inc
or
out
sbb
mov
je
adc
add
dec
sbb
lret
xchg
sbb
js
aas
fwait
sub
mov
xor
scas
xor
popa
mov
xchg
out
mov
pushl
leave
leave
decb
push
sbb
cmp
loope
sbb
sub
inc
imul
jge
jp
pusha
inc
clc
repnz
jb
or
lds
mov
lock
lds
das
test
lret
jmp
and
mov
repz
scas
push
cwtl
push
cmpsb
inc
mov
ds
jno
sub
in
xor
decl
aad
lcall
pop
ret
xor
imul
addb
or
push
std
incl
cmp
lods
cmp
jp
gs
hlt
mov
inc
push
add
lods
dec
ljmp
adc
mov
sub
jnp
mov
sub
xchg
jecxz
clc
mov
pop
cmp
mov
cld
dec
cmpsb
sbb
cmp
mov
pop
scas
bnd
mov
iret
je
cmc
ljmp
fistl
cld
or
push
sarl
ret
sarb
call
cwtl
sbb
xor
mov
and
lds
cmpb
push
incl
test
cmc
and
add
push
lahf
and
jl
jb
in
pushf
cmp
clc
pushl
or
int
sbb
int3
xchg
sub
add
sbb
les
cmp
outsl
es
cmp
inc
sub
or
xchg
fldt
push
and
add
mov
stos
and
or
and
xchg
lock
dec
and
ret
ljmp
orb
arpl
and
hlt
mov
mov
int3
push
ret
mov
clc
daa
inc
aam
loope
mov
xor
shrb
sub
or
push
xor
fcomip
incl
aam
xor
jmp
pusha
xchg
sub
clc
nop
rorl
cmp
daa
cmp
rorb
cmc
push
outsl
inc
xor
push
cmp
add
fidivs
incl
mov
cltd
mov
test
sub
decl
inc
jge
push
pop
pop
fnstcw
ret
punpckhwd
pushf
inc
fildll
lcall
out
movsb
xlat
sti
xchg
shlb
or
dec
adc
pop
orb
mov
or
jns
push
fimull
mov
cmpsl
mov
call
cld
popf
movsb
setl
add
ss
lcall
cwtl
mov
cmp
adc
xor
mov
push
pop
arpl
mov
ljmp
xchg
jnp
stc
pop
hlt
cmp
sbb
adc
add
stos
fdivrl
fistl
pop
xor
pop
cmp
shll
pop
mov
ljmp
iret
push
bnd
sub
loop
xor
mov
pop
call
add
cmpsl
mov
sub
into
mov
mov
aam
jge
stc
sar
dec
xchg
inc
sub
dec
or
imul
sti
add
xchg
pop
hlt
scas
mov
ret
lods
insl
bound
jg
jl
outsb
jp
int
aam
dec
fs
call
xor
out
xchg
jge
xchg
push
dec
lods
mov
inc
mulb
pop
sbb
incl
pusha
sbb
in
nop
xchg
negb
push
push
sub
and
ljmp
enter
pop
mov
sbb
jl
sub
fisubl
dec
push
test
inc
xlat
arpl
inc
push
in
xchg
ret
mov
les
push
and
out
aaa
fld
sub
cmpsb
ljmp
out
pushf
fmull
inc
mov
rorb
xchg
xor
test
lcall
aaa
std
ret
pop
jp
push
adc
dec
push
lea
call
xor
popa
adc
loop
imul
das
and
jp
dec
jne
jp
pop
push
loop
mov
push
in
mov
arpl
inc
or
lock
incl
cs
xor
cli
js
mov
daa
mov
pop
pop
cmp
test
sub
lret
ret
xor
pop
mov
adc
addl
fistps
call
inc
mov
push
pop
cmpxchg
sub
mov
and
ljmp
mov
aaa
xchg
sub
or
andb
outsl
daa
stos
cmpsb
decl
jo
mov
sub
inc
jae
and
add
clc
push
call
lret
push
sbb
dec
adc
lret
dec
push
jmp
movsl
mov
scas
ljmp
sub
and
pop
or
mov
out
xor
cld
fmul
mov
or
lods
imul
and
lods
push
das
xor
xor
jmp
mov
adc
sbb
sbb
frstor
mov
jge
fsubrp
incl
inc
inc
fisubs
sub
shlb
push
pop
lock
jle
or
pushl
inc
push
and
dec
sub
cmp
dec
sbb
lret
push
and
test
ds
pop
lock
out
and
cld
pop
jne
rclb
adc
std
testb
pushl
dec
lods
outsb
pop
sub
in
inc
popa
push
xchg
mov
xchg
and
jmp
sub
xchg
sti
push
jne
hlt
mov
inc
dec
add
mov
push
xchg
xchg
cmp
jg
lret
repnz
push
jecxz
xlat
lret
mov
sbb
jnp
cld
pop
cmp
adc
jnp
jb
insb
fidivs
hlt
popf
or
mov
push
faddl
arpl
ficomps
cwtl
xlat
xlat
pop
call
clc
decl
dec
call
orb
sti
sub
push
push
dec
push
test
lcall
push
pop
mov
pop
daa
lret
sub
push
les
cmpsb
push
add
test
or
ljmp
fidivl
xchg
xchg
xor
xchg
mov
sbb
cmp
call
jle
mov
mov
mov
adc
mov
adc
push
movsl
scas
fcomip
pop
lods
ljmp
xchg
ret
push
loopne
ret
cmp
sub
jg
or
fs
cmp
arpl
aaa
pop
test
jp
pop
out
fnstcw
mov
or
lcall
ja
mov
in
insl
add
pop
cs
mov
nop
cmp
cmp
cld
pushl
loopne
xchg
jp
dec
push
cld
pop
ret
pop
adc
addr16
push
aam
sar
pushl
pop
mov
jae
dec
mov
pop
push
imul
out
push
or
ljmp
aam
and
mov
xchg
xchg
int3
lret
adc
sahf
or
lret
pushf
sbb
lret
loope
das
adc
cli
mov
push
sbb
hlt
call
sarb
fdivrs
xchg
fimull
inc
loope
ret
inc
ljmp
ljmp
xorb
fwait
dec
std
mov
push
sbb
in
add
cltd
outsl
shrb
std
mov
not
and
mov
loop
push
jmp
int
out
fmulp
fcompl
call
add
dec
jmp
mov
pop
pop
andb
cld
in
xor
jmp
test
mov
pop
shrl
je
sti
sbb
or
ljmp
and
out
insb
or
push
add
jo
loope
adc
outsl
cli
jmp
xchg
mov
jno
pop
cmp
sub
cltd
mov
add
sti
stos
std
out
sar
ficoml
out
imul
rolb
insb
mov
pop
mov
and
call
ret
lock
iret
cmp
dec
add
ja
orl
das
jge
or
gs
add
aas
arpl
test
shl
pop
inc
pop
ret
cmp
adc
sub
add
imul
lret
mov
aad
inc
arpl
lret
clc
lds
ja
inc
jle
jns
fiaddl
add
ljmp
lret
sub
sub
decl
or
fcmovnb
cmpsl
sbb
add
dec
lret
cs
aad
pop
sub
lcall
jg
jg
test
outsl
jg
jo
mov
lock
out
mov
xchg
mov
arpl
outsl
fwait
daa
pushf
or
pop
loopne
cmp
add
test
push
in
outsl
rcrl
jp
lea
lock
popf
inc
dec
adc
faddl
lahf
inc
cs
sub
jp
dec
xchg
fbstp
call
scas
or
ds
inc
sub
cmp
mov
push
dec
push
adc
xchg
push
jmp
jo
and
outsb
or
or
push
dec
lods
cltd
fmuls
cmp
push
mov
push
jp
xchg
ret
es
test
out
cmp
call
xor
or
add
dec
sub
jp
pop
fwait
pop
sub
dec
mov
sbb
mov
lods
jg
pushl
jne
call
adc
decb
out
stos
pop
sbb
pop
xchg
mov
movsb
or
call
jb
imul
aad
push
or
push
mov
inc
cmpsl
xor
repnz
jg
icebp
dec
call
xchg
mov
imul
aaa
cmp
lret
sar
incl
jbe
push
idivl
sbb
push
push
cmpsb
mov
mov
orb
lods
xor
xchg
pushl
hlt
cs
cs
or
test
fs
movsl
mov
adc
mov
mov
addr16
dec
jle
jae
mov
mov
test
xor
mov
inc
insb
in
out
loop
in
pushl
pop
add
ret
jns
popa
or
mov
out
mov
jmp
jmp
inc
and
fucom
test
cmp
push
pop
and
in
cmc
in
jl
test
push
fcomip
ljmp
mov
jns
push
push
and
addr16
ljmp
cmpsb
dec
sbb
add
vaddsd
int3
inc
cmp
das
sbb
repnz
xor
pushl
daa
adc
and
ss
mov
repz
inc
les
push
mov
hlt
jns
incl
cmp
inc
mov
push
sbb
xchg
dec
add
or
inc
enter
jle
dec
push
adc
movl
imul
xchg
sub
jmp
jmp
mov
adc
sbb
call
xchg
cs
mov
ss
test
lret
decl
test
push
in
inc
call
mov
dec
push
cs
xchg
int
incl
xchg
inc
xchg
mov
in
pop
jnp
std
xchg
inc
mov
repz
mov
fistl
cs
xchg
jp
movsl
push
add
push
xor
ljmp
shlb
icebp
inc
dec
xorb
lcall
int3
xchg
stos
xor
cmp
subl
mov
push
cmpsl
lods
xor
insl
sub
mov
std
test
push
imul
or
lea
dec
add
in
decl
dec
lods
inc
pop
rclb
add
bnd
fiadds
ficoms
stos
fbstp
decl
lret
rorb
testb
mov
icebp
pusha
lock
pushl
xchg
repz
jnp
sti
test
jbe
xor
les
mov
xor
jp
mov
movsb
leave
rcrb
adc
scas
pop
push
clc
test
call
pushl
and
xchg
push
lcall
pop
and
es
cwtl
rcrb
mov
out
xchg
inc
cmpsl
in
jge
or
ret
push
or
dec
cmp
orb
repnz
fistpll
mov
pop
cli
jg
cmp
fdivs
xor
insb
adc
leave
sub
sub
test
out
ds
xor
sbb
gs
lock
out
mov
aad
jmp
dec
cld
decl
mov
jmp
cltd
mov
cwtl
inc
mov
adc
cmc
nop
pop
in
call
push
pavgb
sub
out
xchg
adc
sub
mov
mov
mov
imul
stc
xchg
fisubl
out
dec
lret
inc
inc
ret
ss
ret
gs
rcll
push
data16
mov
decl
mov
dec
sub
sbb
cmp
loopne
pushf
dec
jo
jns
push
call
leave
lcall
push
mov
fcomps
aad
jg
aad
rorb
push
cld
decl
push
push
les
push
cli
mov
jbe
das
mov
insb
dec
xchg
call
push
aas
add
and
in
in
push
xor
pushf
testl
repz
dec
xchg
loopne
pusha
pop
fidivrl
xchg
subb
jl
mov
pop
int3
or
add
mov
into
cmpsl
dec
push
pop
cmp
out
inc
imul
xchg
xor
test
sbb
mov
jmp
test
scas
push
and
pop
sbb
loop
pop
mov
push
insl
adc
scas
cmp
notb
pushl
cmpsb
repnz
xchg
hlt
fstps
in
ja
sub
shrl
sbb
jae
das
fidivrl
mov
shll
fs
scas
inc
add
std
nop
dec
mov
push
cli
into
sbb
leave
pusha
ja
jmp
jmp
sarb
lcall
xor
decl
xchg
mov
lds
xor
movaps
sub
or
insl
sbb
mov
flds
and
mov
pop
sbb
test
and
cmp
sub
add
lcall
addr16
mov
fwait
cmpsl
lret
add
mov
gs
pop
jmp
xchg
in
setle
iret
ror
incb
push
retw
or
in
adc
js
push
push
arpl
daa
jecxz
fwait
jge
xor
push
or
jp
and
movsb
mov
push
shlb
jl
or
call
out
push
mov
rorb
sahf
cli
adc
das
addr16
lahf
add
mov
mov
stos
pop
cld
cli
adcb
and
arpl
cmp
xor
ljmp
mov
aaa
ljmp
lods
pop
jle
sbb
mov
fiaddl
mov
repnz
or
ficompl
jno
cld
das
sub
in
mov
or
mov
lcall
aaa
mov
mov
jge
mov
xor
xor
imul
jg
lcall
and
xchg
lds
cmpsl
lea
stos
out
xor
mov
out
push
pop
cwtl
push
stos
jecxz
add
or
push
mov
push
int
outsl
ja
les
ljmp
ds
stos
mov
sub
and
stos
imul
out
xlat
outsb
mov
dec
jg
gs
dec
loope
inc
sbb
adc
repz
fucomi
mov
int3
jb
bound
out
lahf
and
outsb
cmc
mov
dec
mov
mov
outsl
mov
jbe
mov
jb
loope
xorb
decl
sub
stc
into
add
mov
sbb
inc
arpl
or
ljmp
cli
inc
mov
mov
fidivl
add
cli
jg
sbb
mov
ret
pop
push
jp
pushaw
jl
lock
lock
fs
incl
sub
lret
fisttpll
enter
jg
mov
mov
out
dec
xor
jo
mov
fcomps
sbb
ljmp
ret
mov
cltd
out
out
out
and
mov
fstpt
sub
xor
jg
clc
and
or
aaa
jle
fucom
rcll
jae
pop
push
fistl
sti
mov
in
cmp
mov
sbb
out
adc
movsl
leave
sbb
jmp
repnz
hlt
mov
push
xchg
pusha
push
inc
mov
andnps
mov
shl
cwtl
call
sbb
js
and
or
cmpsl
pop
pop
sbb
dec
imull
incl
loopne
xchg
jbe
add
cmp
mov
hlt
shll
cmp
cli
mov
jmp
or
fdivrp
sbb
sbb
mov
pop
adc
jl
popa
loope
dec
js
push
shr
nop
ret
sbb
leave
das
jl
sub
xlat
sub
pop
dec
cmp
decl
int
fadd
cmpsl
loop
pop
aam
jb
xor
jnp
mov
fdivrp
jge
xchg
xor
sbb
xlat
push
push
pop
fs
arpl
jge
mov
repz
incl
cli
loope
sbb
enter
rol
sub
dec
dec
icebp
sbb
push
xor
call
movsb
cmc
idivb
rorl
jo
clc
mov
xor
ret
ljmp
adcb
idivb
pop
enter
or
sbbb
push
sar
incl
mov
mov
push
gs
test
add
shlb
jp
in
hlt
jmp
inc
out
xor
loopne
adc
stos
sub
or
mov
jmp
adc
fwait
cmp
cld
sti
pop
pop
xor
xor
sub
ljmp
test
lea
repnz
jae
loope
insl
or
pusha
outsl
xlat
or
outsb
mov
decl
fwait
into
movsb
mov
cmp
fwait
inc
mov
test
cmpsl
xor
pop
xchg
sar
mov
and
in
out
mov
js
incl
pushf
xor
sbb
add
aad
jp
xacquire
xchg
mov
test
hlt
jmp
std
dec
je
cwtl
cmpsb
test
or
sbb
ds
xchg
mov
dec
mov
call
dec
aas
mov
popa
dec
or
lods
sbb
test
cwtl
mov
mov
mov
xchg
scas
hlt
jle
or
push
cltd
and
mov
incl
lods
push
mov
and
repz
test
leave
in
jbe
lods
mov
ljmp
mov
in
mov
push
lcall
pushl
outsl
dec
mov
xchg
pop
les
and
sahf
cmp
push
push
movsb
in
cs
jbe
jmp
jns
es
push
dec
and
std
cltd
mov
insb
scas
or
insl
mov
inc
incl
pop
arpl
sub
inc
push
push
stos
and
inc
jno
int
lock
dec
add
jmp
jns
lahf
pop
cmp
xor
sarb
inc
aas
xor
add
sbb
enter
int3
fistl
mov
and
test
inc
ljmp
aad
pushl
imul
dec
cmp
out
add
fisubl
jo
fdiv
push
lds
mov
ja
mov
jae
jmp
orl
jecxz
adc
stos
test
pushl
inc
sar
or
sub
or
loop
loop
gs
jnp
stos
xor
fwait
sarb
mov
rcrb
out
les
and
push
sbb
pusha
dec
stc
das
fwait
sub
and
loopne
cmp
daa
and
daa
mov
jecxz
addr16
fldt
lcall
out
shl
push
imul
iret
lds
mov
pop
xor
pusha
jp
xlat
imul
push
bound
jmp
test
push
lock
test
or
push
jns
aad
movsb
pop
outsl
and
push
jg
cld
xorl
and
lret
sbb
jb
xchg
adc
cs
decl
lock
xchg
mov
stc
jb
mov
sub
mov
or
int
movsl
push
mov
rorl
in
mov
lcall
sub
incl
and
jb
inc
je
stos
xor
lret
mov
lds
and
push
int
scas
call
lret
andl
mov
fildll
in
push
xlat
iret
incl
adc
mulb
pop
mov
pop
daa
xor
jmp
in
into
call
mov
or
push
insl
dec
jp
insb
dec
inc
adc
in
clc
xor
sbb
dec
adc
hlt
lcall
cmp
dec
icebp
lahf
jle
lods
outsl
mov
jge
fldl
call
rorl
into
fcoml
pop
inc
loope
sub
cmpsl
dec
out
mov
js
cmpsb
jns
xor
lret
pushl
lods
adc
inc
jno
enter
mov
lcall
xchg
pusha
pop
inc
jl
into
data16
lahf
cwtl
das
sti
jp
push
lcall
dec
addr16
mov
sub
sti
outsl
outsl
pop
or
sahf
sub
jle
inc
sub
icebp
push
sub
popf
pop
fbld
into
sbb
lahf
int3
leave
mov
sbb
pusha
mov
out
mov
or
fldcw
xchg
jmp
jmp
dec
adc
outsb
add
repnz
mov
adc
ds
push
shrb
add
jmp
cmc
gs
pop
out
ret
cmp
xor
inc
sub
xchg
aaa
mov
sahf
imul
addr16
and
sub
leave
imull
adcl
bound
icebp
sarb
inc
fnstcw
inc
mov
filds
ljmp
cmp
shlb
or
adc
fs
push
out
clc
in
cltd
clc
or
xor
test
fwait
dec
inc
rolb
mov
sub
loopne
hlt
add
cld
out
mov
sti
add
mov
sub
inc
scas
cli
jmp
jnp
or
push
or
lods
js
add
sbb
out
adc
jmp
decl
clc
adc
std
inc
and
and
and
cmp
in
jge
test
push
call
andb
leave
out
lea
pop
dec
xchg
cmp
dec
jnp
jp
lock
pop
hlt
pop
mov
int
les
fidivl
std
sub
sbb
add
clc
dec
incl
call
sbb
hlt
cltd
dec
xlat
repnz
add
mov
notl
lcall
mov
dec
fdivl
sub
jl
mov
pop
or
ja
sar
mov
jnp
sub
outsl
pop
sub
fsts
xorb
mov
cli
in
and
xchg
imul
fbld
xlat
movsb
and
push
pop
fdivrl
lock
movb
xchg
jmp
dec
and
inc
push
ucomiss
mov
shrb
lahf
mov
and
mov
fwait
int
xchg
pop
loopne
inc
xlat
cmp
jmp
out
dec
adc
cli
mov
add
and
jg
vmwrite
add
data16
popf
adc
inc
lock
loopne
jle
inc
scas
loopne
test
xchg
lock
lret
push
xchg
and
fisttpl
jb
xchg
lret
sbb
repnz
dec
test
inc
int3
sub
fisttpll
lods
dec
mov
dec
add
jmp
jmp
sub
sbb
and
into
adc
fwait
sub
cld
sub
lret
shlb
mov
adc
js
scas
stc
push
out
pop
cmpsl
movsl
mov
push
popf
push
push
dec
pop
gs
or
mov
sbb
dec
cmp
push
testl
pop
jecxz
add
push
aas
mov
popa
dec
and
stos
hlt
xor
iret
dec
cmp
pop
push
inc
fs
pop
std
ljmp
push
jbe
testl
repnz
mov
pushl
decl
pushf
add
xchg
xchg
xchg
mov
ds
cmp
sbb
outsl
cli
lcall
cli
xor
push
and
lods
in
jns
fdivl
pop
and
icebp
jmp
int
cmc
inc
ret
pop
or
cmpsb
sub
and
lock
or
lcall
fistpl
roll
test
aam
iret
idivl
jge
arpl
adc
jmp
or
inc
sub
mov
xchg
mov
jg
inc
jl
dec
jnp
lcall
push
and
dec
xor
cld
mov
lods
iret
lods
popa
loop
scas
jne
or
cmp
fs
cmp
xchg
fisttps
es
jne
arpl
ljmp
icebp
add
add
cmc
decl
mov
pop
cmp
je
fsubrl
jl
mov
xchg
decl
mov
inc
push
icebp
add
sbb
jle
or
dec
xor
cld
stos
inc
pop
cmp
mov
loope
cld
and
in
sub
push
jle
inc
sarl
pop
mov
xchg
xorl
push
lock
loopne
sbb
leave
mov
je
or
xchg
ficoml
pop
std
in
mov
adc
adc
add
ss
pop
das
mov
mov
decl
and
lods
es
fs
mov
lods
lsl
lahf
pop
sub
mov
fdivrp
jg
incl
add
inc
sub
inc
adc
in
xchg
mov
or
call
jmp
inc
add
in
gs
pop
xorb
or
push
mov
jecxz
lcall
pop
sti
addr16
or
cltd
ss
out
mov
sub
cltd
and
cmp
dec
into
push
cli
mov
mov
xchg
data16
adc
movb
and
lods
daa
mov
xchg
and
sbb
ud0
cmp
sbbb
xchg
das
jecxz
pop
popa
inc
rol
adc
push
mov
add
xchg
mov
cmp
adc
shr
push
push
and
dec
pop
orl
and
xor
mov
test
call
add
and
int
stos
outsb
adc
pop
sub
sub
mov
jle
call
dec
test
imul
insb
cmp
gs
jge
sub
daa
iret
fsubs
in
push
daa
shlb
mov
scas
test
sbb
cmc
dec
mov
or
out
jae
cmp
decl
scas
mov
imul
fisubrl
ret
dec
idivl
es
push
dec
fisubs
jne
lods
push
shl
add
js
les
pushf
mov
xchg
iret
js
xchg
in
loop
ljmp
dec
mov
roll
inc
mov
les
ljmp
bound
popa
pop
fdivrs
adc
xchg
mov
or
hlt
call
pop
aad
push
inc
out
push
adc
cmp
adc
mov
ffreep
arpl
add
pop
rol
and
push
scas
subl
jnp
lods
in
push
lcall
mov
jne
or
ds
pop
scas
and
pop
mov
icebp
mov
inc
aas
lods
clc
lea
cmp
fidivrl
mov
repnz
jmp
jbe
jbe
popf
xchg
dec
mov
mov
aaa
sti
cmp
into
sub
loopne
decl
and
push
sbb
xor
sbb
outsb
or
adc
lods
inc
jmp
decl
in
dec
mov
das
and
gs
dec
sbb
dec
jb
cltd
dec
lea
lods
gs
fldl
fadds
xchg
jne
jl
cmp
cmpsb
lods
orl
imul
call
ss
test
test
and
sahf
pop
dec
stos
pop
push
dec
xchg
in
movsl
jmp
in
cli
mov
std
mov
xchg
ljmp
loope
notb
loopne
jbe
popf
jmp
mov
push
bound
imul
cli
sbb
mov
fnstenv
in
pop
ljmp
mov
call
loopne
repnz
push
push
ljmp
fcoml
in
shlb
clc
in
or
dec
call
mov
xchg
add
pop
or
loope
inc
fistpll
sbb
mov
call
cmpsl
inc
and
rcll
cwtl
insl
xchg
xor
push
jp
mov
xor
decl
lock
and
mov
mov
cmp
pop
hlt
jmp
add
test
push
jbe
lock
xchg
lods
int3
add
jne
incl
imul
scas
adc
ret
mov
pop
sub
enter
jno
pop
jg
call
lret
xchg
jbe
push
andl
fldpi
cmp
push
mov
cs
lock
pop
add
push
mov
add
js
nop
test
sar
add
clc
je
xor
repnz
cmp
decl
arpl
and
mov
push
arpl
cmp
mov
cltd
inc
cltd
out
dec
push
lcall
jmp
stos
sahf
mov
dec
mov
mulb
cmp
out
cli
call
movsb
fcoml
int3
aaa
jmp
pop
fwait
lcall
cmp
add
popf
jo
sub
int3
outsb
fstl
orb
outsl
ljmp
rolb
lret
cwtl
xlat
mov
mov
sub
mov
divb
mov
cmp
lahf
adc
ficomps
inc
sub
ror
decl
outsb
dec
pop
push
outsl
ficomps
pushf
inc
insl
and
and
add
lcall
adc
lds
fwait
dec
jg
dec
aam
cmp
dec
adc
insb
cmp
and
jnp
mov
jmp
pop
jl
stos
inc
push
aam
enter
movsl
pop
mul
xlat
fs
test
xor
mov
or
ds
outsb
repnz
sysenter
push
or
fstl
jg
daa
out
mov
idivl
or
aam
fadds
js
cmp
mov
loopne
xchg
ficoms
sub
push
repz
cmp
pop
pop
xor
ljmp
mov
push
sub
fistl
mov
jg
out
loope
dec
and
or
std
in
inc
notl
push
ret
cmc
test
push
lcall
lcall
addb
in
out
mov
stos
inc
sub
adc
or
adc
dec
lcall
mov
jl
lds
sahf
outsb
popf
dec
ds
add
lcall
int
cmp
repnz
stc
add
mov
movsl
xchg
addb
cmp
xrelease
jg
cld
imulb
into
sbb
insl
jbe
fs
mov
aad
ds
nop
dec
xchg
jns
rolb
mov
ss
shlb
cmp
ljmp
out
jg
cmp
cltd
cmpsb
mov
popl
pop
nop
vpcomb
inc
mov
xor
jmp
cmpsb
and
lods
test
xchg
and
sti
pop
pushf
out
xor
mov
xchg
pop
fdivr
ljmp
repz
and
scas
sbb
jge
inc
clc
add
xchg
xchg
test
add
inc
sbb
ds
sti
and
fstps
ljmp
shll
je
mov
lret
dec
les
das
cmc
jb
adc
jmp
and
das
rcll
data16
mov
xlat
jns
addr16
lods
adc
inc
in
push
decl
push
aaa
dec
or
nop
fs
clc
pop
test
sub
ljmp
out
sub
fcomip
test
push
jb
inc
and
adc
rolb
or
or
rcrb
loope
bound
adc
pop
lods
fisttps
xchg
fdivr
jmp
mov
pop
mov
lock
aaa
movsb
inc
mov
cmp
movsb
scas
outsl
and
ss
mov
ds
sbb
or
dec
je
pusha
das
sub
xchg
lea
adc
xlat
pop
sbb
sarl
xor
roll
add
jmp
fistl
into
mov
mov
inc
xorl
lcall
sbb
cmc
or
leave
add
jno
stos
jmp
sub
lcall
cmc
push
nop
xchg
or
gs
fstps
sub
decl
jbe
mov
xor
add
adc
test
pop
dec
inc
sub
movsb
adc
decl
or
sub
sbb
dec
or
lds
fucomp
xor
cmpsl
lret
decl
cltd
fiadds
and
inc
es
jp
in
int3
push
fwait
and
cmp
inc
mov
rorl
std
add
push
dec
std
inc
or
js
loopne
jl
dec
dec
mov
jmp
jl
xor
cwtl
sbb
divl
cwtl
or
test
adc
pop
xchg
xor
mov
mov
das
sar
xchg
add
cmp
lret
add
incl
pop
aas
call
movsl
mov
jo
lods
lds
fwait
add
in
rclb
cld
sbb
sbb
cwtl
lea
lahf
das
jge
cwtl
ss
sar
push
add
adc
aaa
scas
cli
pop
imul
hlt
flds
add
mov
add
fnstcw
xor
int
xor
mov
inc
stos
inc
inc
data16
ljmp
imulb
shr
ja
jg
fdivs
jge
sub
out
cli
ljmp
xchg
out
ror
cmp
popf
pop
cmpsb
shlb
or
adc
incl
std
ficoms
cltd
or
scas
jne
adc
clc
xlat
cmp
outsl
jg
inc
mov
leave
out
addr16
pop
decb
inc
in
out
int3
adc
push
dec
cli
loop
lods
and
pushf
clc
cmp
les
lods
jns
in
daa
sbb
mov
jge
pop
fs
inc
aaa
lcall
mov
dec
scas
rol
push
pushf
and
jp
jo
lods
jb
jbe
mov
aam
cmp
inc
xchg
or
repnz
pop
popa
jle
mov
je
es
push
mov
ds
jg
push
inc
movsb
mov
jmp
sub
inc
add
sub
out
roll
jns
mov
stc
push
decl
xor
dec
ljmp
lods
inc
inc
add
inc
outsb
rcll
pop
dec
jge
pushl
icebp
dec
sbb
cmp
mov
mov
pop
test
sub
lcall
adc
and
dec
setle
sub
sub
cmp
jbe
adc
push
roll
dec
fcomi
sbb
enter
ret
lret
pop
jmp
sbb
in
lcall
xor
and
jle
arpl
pushl
ljmp
dec
lods
xchg
mov
insb
lds
jmp
and
jmp
aaa
repnz
ljmp
push
das
dec
adc
add
bnd
inc
inc
or
mov
icebp
sbb
mov
ror
jmp
lahf
clc
aam
fucomp
pop
pushf
cmp
sbb
loopne
and
dec
leave
jp
jmp
lods
or
in
in
test
movsl
push
outsb
xchg
xor
jnp
lcall
jns
xlat
es
mov
pop
jns
push
ret
iret
call
aaa
fcoms
insb
mov
pusha
cli
ret
jl
inc
iret
int3
dec
cs
sub
sbb
out
xor
jno
ret
data16
inc
dec
stos
pop
je
add
mov
inc
into
loopne
mov
xlat
xchg
sbb
cmp
test
pop
rol
fistl
sbb
or
sahf
ss
incl
cmp
fs
cmpsb
out
in
xlat
xchg
push
adc
cmpsb
sub
int
lret
pop
andl
cli
popa
cltd
ret
add
std
mov
filds
jnp
mov
popa
push
loop
js
inc
std
xchg
decb
adcb
and
incl
movsb
mov
ds
mov
jae
stos
mov
out
pop
in
pop
test
iret
push
sub
aaa
cmp
adc
sbb
in
faddl
int3
in
mov
cltd
iret
cmp
mov
jns
mov
sub
dec
push
dec
adcl
or
fistpll
es
inc
add
cmpb
imull
and
aaa
leave
aad
ljmp
jno
xlat
inc
and
pop
mov
dec
xor
loop
adc
xor
add
dec
mov
jmp
aas
sti
mov
pop
or
mov
out
aad
into
shr
aam
loop
xchg
inc
adc
jo
or
decl
xor
lods
mov
or
call
sub
mov
sar
call
push
adc
mov
xchg
mov
mov
sub
mov
stos
fstpl
add
ljmp
mov
out
xchg
xor
push
sub
add
mov
jno
mov
xchg
fwait
leave
fwait
xchg
push
mov
jl
in
jl
xchg
mov
adc
imulb
jmp
mov
pop
and
fnsave
out
shrl
mov
stos
adc
loope
es
shll
mov
xor
mov
jmp
arpl
fcoml
pop
xor
jg
sbb
stos
jl
sbb
and
jl
jns
decl
push
xor
repz
mov
lret
int
ret
inc
loopne
lock
int3
push
call
xor
cld
subl
mov
cwtl
mov
test
mov
adc
out
xor
mov
sub
cwtl
cmp
xchg
ja
add
gs
ljmp
sar
mov
mov
xor
inc
sahf
xlat
dec
stos
int
test
jl
std
and
jb
es
xchg
and
jg
pop
adcl
mov
out
cwtl
sub
jmp
mov
mov
mov
sub
pop
enter
lret
sbb
or
jo
xchg
jmp
ss
pop
xchg
mov
cmp
iret
repnz
or
sbb
sbbl
xchg
add
loopne
cltd
gs
mov
mov
mov
jmp
mov
inc
fs
outsb
jg
aaa
sahf
fsubrs
ret
xor
mov
test
xchg
aas
cltd
in
and
incl
mov
cmpsl
cmp
ss
faddp
sub
adc
pushf
cmp
fimuls
pop
sahf
lret
jmp
cmp
jae
call
adc
or
ss
sbb
jl
incl
ss
incl
in
jne
les
and
xor
sub
mov
in
mov
xor
sbb
dec
imul
stos
ljmp
sbb
scas
xchg
mov
xor
and
mov
mov
arpl
aas
popa
cmp
decl
mov
icebp
and
adc
fsts
lock
jmp
stos
rorl
sti
jae
or
cmp
mov
pop
and
scas
lcall
in
dec
clc
xchg
imul
adcl
xor
dec
inc
rcl
push
test
adc
pop
cmp
mov
xchg
cmpsl
add
aad
jae
leave
pop
test
push
data16
adc
mov
test
mov
into
lahf
out
gs
dec
push
add
rorb
fnstsw
and
push
mov
test
add
mov
cmp
adc
out
xrelease
ljmp
cld
dec
movsl
push
data16
or
in
xlat
dec
in
push
ja
fs
ljmp
push
dec
jp
pusha
dec
clc
or
ds
or
call
inc
sbb
int3
repz
gs
push
inc
jl
mov
test
jl
or
sbb
imul
sahf
cltd
push
int3
icebp
dec
dec
aaa
rcl
enter
in
in
cltd
pop
inc
mov
ja
popf
xor
or
sub
xchg
leave
adc
scas
inc
or
mov
add
addr16
xchg
xchg
lock
pop
dec
fisubrs
sub
inc
sbb
jmp
cmc
popf
cld
test
sub
sbb
popa
pop
xor
cmpsl
adc
inc
push
mov
aad
jae
mov
jbe
sar
xchg
or
xchg
ja
mov
sbb
push
add
push
sbb
imul
lret
jns
lret
divl
xor
fidivrs
and
ljmp
dec
leave
insb
shrb
imul
daa
outsb
in
lcall
shr
inc
fwait
cs
jae
pushl
std
out
sub
cmp
lret
mov
call
and
incl
mov
cmp
inc
fs
sbb
fistps
icebp
in
gs
clc
decl
jo
insl
rcrl
mov
loope
out
pusha
sub
movsl
icebp
decl
fs
and
jne
jp
es
dec
jbe
orl
pop
lcall
add
add
ret
aad
sbb
lahf
pop
sbb
pushl
scas
dec
addr16
fnop
insb
testb
test
ffreep
stos
stos
out
fistl
xor
xor
repz
pop
sbb
mov
push
cmpsb
idivl
test
jg
ljmp
lahf
test
jbe
sbb
inc
push
addl
icebp
push
fsubl
icebp
adc
insb
ljmp
imul
add
cmp
pop
mov
leave
mov
add
outsl
adc
push
dec
fiadds
stc
xor
dec
inc
outsl
in
iret
movsb
xchg
and
push
add
mov
call
mov
xor
cmp
sbb
xlat
push
jno
cmpb
push
and
mov
test
imul
cmpb
xor
cmpsb
jle
cltd
fdivs
sbb
gs
enter
imul
dec
mov
lret
fists
std
push
xchg
xchg
mov
icebp
jmp
jg
dec
sub
cmpsb
jmp
dec
jmp
xorl
imul
scas
cli
or
push
push
aam
mov
sbb
pop
outsb
shl
pop
mov
sub
ss
push
fisubl
pop
sbb
pusha
or
shlb
daa
and
push
pop
incl
mov
and
inc
std
inc
push
push
jmp
or
sbb
loop
in
lahf
xchg
cmpsb
lods
mov
popa
lods
and
push
in
inc
inc
dec
dec
pop
jne
sti
insl
cmp
mov
iret
movsb
subb
adc
enter
clc
xorl
cmp
fadds
cmpsl
or
imull
popw
sbb
enter
call
test
movsl
adc
inc
es
push
aam
cmpsb
sbb
repnz
rcl
push
xchg
jg
call
repz
fistl
imul
jge
dec
jnp
rorl
jo
lahf
dec
lods
mov
mov
out
xchg
fcoml
hlt
js
inc
pushl
pop
push
imulb
push
into
hlt
lods
rorl
mov
dec
addl
jnp
adc
mov
hlt
loopne
lahf
or
jns
mov
stos
aad
cmp
nop
test
jl
jge
xor
sbb
xchg
or
xor
mov
push
fbld
push
into
ret
and
test
sbb
add
mov
push
imul
lahf
jecxz
hlt
popf
pusha
mov
sub
xor
pushf
out
mov
or
sbb
push
imul
loopne
mov
jns
pushf
mov
lds
push
cld
lcall
mov
push
ljmp
xor
lods
or
push
js
divl
adc
pop
je
and
push
mov
cmp
jmp
mov
jmp
inc
pop
and
scas
mov
loope
inc
jns
les
dec
pop
dec
lret
adc
jp
inc
mov
pop
rep
rcl
jbe
jp
pop
out
out
cmp
incl
jae
cltd
or
dec
jp
or
inc
lds
or
into
mov
add
lods
jg
dec
rorl
into
aad
pop
pop
into
mov
push
inc
daa
adc
decl
lock
add
adc
mov
in
sahf
mov
push
adc
push
mov
xlat
sbbb
jg
dec
or
cld
sbb
adcb
jmp
add
and
push
push
and
push
dec
out
push
inc
or
add
pop
mov
lret
sbb
and
add
mov
rcrb
adc
je
aaa
and
cs
jo
imul
or
rcrb
ss
add
mov
mov
and
fcomps
xchg
or
js
scas
dec
sub
xor
inc
imul
adc
data16
sbb
mov
dec
gs
divb
outsl
outsl
insb
push
push
outsb
popa
jo
push
push
test
push
sub
mov
jne
sbb
push
enter
push
or
cmp
lret
adc
cmp
xchg
lock
movsl
dec
mov
push
js
arpl
inc
inc
jo
xor
leave
add
push
popa
and
cmp
jns
jmp
imul
andb
cmp
push
cwtl
or
ljmp
outsb
jecxz
inc
test
dec
call
std
and
inc
daa
pop
jo
lidtl
inc
jl
loopne
fwait
cmp
and
dec
outsb
imul
pusha
cmp
insb
stos
sub
cwtl
sub
sahf
sbb
mov
push
outsb
faddp
ret
inc
imul
fcom
xchg
mov
adc
cmpsb
jo
xor
or
inc
mov
push
fisubs
push
in
loopne
mov
push
fwait
adcl
and
xorb
jne
xchg
mov
dec
popa
mov
fldt
mov
add
push
fildl
xchg
inc
push
pop
mov
mov
mov
in
jo
pop
push
jne
subl
push
arpl
and
das
push
jns
mov
inc
jae
sbb
xchg
flds
push
hlt
fs
lock
std
ret
sbb
dec
dec
cmp
int
xor
adc
popa
jno
mov
pop
inc
fldenv
or
dec
push
imul
push
fsubs
dec
sbb
sbb
ret
dec
adc
add
adc
push
mov
arpl
fistpll
sub
mov
pop
inc
ja
inc
mov
xor
popa
inc
adc
sbb
pusha
pop
or
outsl
popw
sub
push
shlb
lret
mov
sbb
mov
and
mov
ljmp
add
inc
or
pop
dec
inc
dec
into
ret
mov
or
inc
mov
push
mov
push
adc
lahf
push
jecxz
push
or
fs
xchg
mov
xor
js
je
shlb
mov
or
push
stos
pop
push
or
hlt
sbb
and
and
inc
popa
sbb
jo
jp
xchg
jg
push
test
sbb
adc
adc
xor
cmp
aam
or
mov
outsb
adc
outsl
jns
daa
fsubrs
mov
dec
push
inc
mov
mov
sbb
pop
stos
aad
data16
outsl
jns
inc
je
jp
inc
push
inc
inc
out
fiaddl
mov
inc
test
and
sbb
jno
insl
out
shl
adc
or
ds
mov
add
xor
dec
test
test
push
nop
inc
adc
sahf
mov
xchg
mov
ret
pop
dec
or
test
test
sub
xchg
and
pushf
mov
jne
inc
fmuls
add
xchg
aad
fbld
jecxz
pop
mov
adc
push
jbe
inc
or
add
pop
fcoms
cmp
jnp
lea
inc
inc
dec
outsl
nop
push
orl
pop
or
imul
sbb
inc
scas
pop
xor
and
outsb
push
outsl
add
add
sbb
arpl
insl
xor
ret
inc
sub
xor
push
rcl
cmp
dec
out
pop
adc
gs
jne
lods
xor
sbb
sub
arpl
std
movsb
jp
add
cs
pop
adc
jo
adcl
mov
sbb
jp
mov
movsl
inc
sbb
mov
and
outsb
sub
sbb
andl
aad
popa
sbb
inc
test
sub
mov
imul
pop
out
dec
clc
pop
jo
daa
int3
outsb
lds
pop
mov
cmc
pop
ja
dec
xchg
je
and
pop
addl
jb
and
adc
push
stos
jo
out
jo
inc
inc
gs
mov
pop
sbb
inc
imul
mov
pop
mov
sbb
pop
idivb
insb
push
inc
push
pop
mov
jge
add
subb
adc
xor
pop
mov
and
nop
adc
jo
jne
jne
insl
adc
adcl
inc
push
push
mov
xor
sbb
sbbl
in
dec
xor
sub
xor
push
pop
xor
and
outsl
shlb
loop
loopne
sub
push
push
adc
movsb
loopne
cmp
outsl
int
mov
icebp
ja
jnp
or
dec
outsb
dec
push
mov
push
or
out
ss
sar
pop
add
add
mov
rcrl
sub
cmpsb
xor
or
mov
mov
push
adc
mov
lcall
or
mov
mov
inc
jb
and
lods
add
xor
xchg
jl
outsl
bound
adc
push
inc
and
roll
out
inc
jb
inc
cmc
das
mov
insb
inc
jae
or
sbb
inc
shll
fidivl
ret
add
push
repz
pop
cmp
sbb
in
mov
loopne
rclb
fcompl
or
xchg
mov
loopne
imul
nop
jne
repnz
gs
mov
push
mov
scas
ret
inc
mov
fidivl
dec
pop
or
push
cmp
mulb
mov
das
nop
mov
test
pop
test
and
in
inc
fildll
xchg
push
rolb
inc
mov
enter
cmp
sub
and
cmp
je
andl
sub
idivb
and
cwtl
fidivs
push
insb
mov
testb
push
gs
xchg
xchg
add
add
ret
lret
repz
jge
fimuls
dec
pusha
and
dec
xor
push
enter
andb
mov
or
in
and
in
mov
imul
inc
xchg
pusha
pusha
jno
ja
push
inc
movb
test
out
pop
data16
call
subl
mov
push
lcall
mov
sub
adc
pusha
jnp
push
lds
fs
dec
sub
xchg
arpl
jg
jo
inc
push
sbb
sbb
and
mov
or
lds
or
and
or
mov
cmp
outsb
xor
xchg
mov
jbe
cmp
pop
pusha
dec
dec
icebp
icebp
fbstp
mov
outsb
inc
loope
or
jmp
lea
enter
xchg
lods
push
lods
or
add
xor
clc
add
pop
push
jmp
mov
or
lods
psrlq
inc
mov
cmpl
loop
mov
aad
lea
aaa
pop
dec
dec
test
jl
shrl
lahf
mov
aam
arpl
mov
js
and
jbe
inc
inc
push
mov
fsubs
test
add
std
lret
push
push
inc
out
adc
ljmp
cmc
push
mov
pop
dec
push
inc
jmp
dec
push
inc
sub
aad
jae
cmp
add
jne
pusha
mov
mov
pop
imul
jo
add
jae
bound
fwait
fwait
sbb
dec
jp
cmp
sub
inc
test
add
rorb
xor
mov
sub
iret
ret
and
xchg
sahf
add
cmpsl
sub
add
and
cmp
movsl
adcb
aas
aas
mov
or
add
jo
add
adc
int3
movsl
rorb
lcall
jo
mov
and
add
and
jb,pn
popa
adc
fcoml
outsb
daa
add
sub
into
mov
rol
out
inc
cs
loopne
roll
mov
dec
das
testb
rcrb
jb
push
xlat
out
cmpsb
mov
lahf
xchg
jo
and
mov
add
pusha
mov
lea
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
and
inc
add
insb
inc
add
add
