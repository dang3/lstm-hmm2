divl
in
mov
mov
clc
js
add
add
int3
cmpsl
std
in
pushl
add
call
test
jne
pop
ret
push
push
sbb
mov
test
je
aas
mov
dec
adc
movb
lock
sti
in
decl
dec
movzwl
lea
jne
sbb
xor
jmp
and
neg
sbb
and
in
jbe
mov
mov
call
push
mov
mov
add
sbb
daa
or
add
les
mov
rclb
addr16
push
enter
and
jg
lock
push
push
push
mov
push
into
pushf
add
jge
jmp
jmp
stos
adc
push
push
sahf
jp
push
testb
clc
test
ds
jmp
pushl
sar
dec
sub
ret
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
ljmp
movsl
push
mov
andl
push
cmp
enter
add
mov
punpckhwd
add
sub
bound
inc
in
or
push
push
outsb
iret
negl
inc
cld
add
outsl
mov
add
incl
sti
inc
add
add
call
jle
add
mov
mov
mov
mov
lock
add
sahf
or
sbb
pop
dec
push
or
out
or
in
lock
add
xchg
add
push
loop
inc
adc
mov
insb
mov
out
leave
sbb
xor
dec
sbb
int3
sub
outsb
sub
adc
push
push
cwtl
in
add
mov
add
int
mov
fchs
fsubrs
cmp
cld
mov
sbb
push
push
lods
push
pop
inc
add
fdiv
fistpl
fldt
inc
add
test
mov
ds
je
pop
add
pop
mov
push
cmp
loopne
cmp
rcrb
cmp
pop
add
add
push
loop
icebp
cmp
add
push
add
sbb
pusha
les
xchg
dec
sarl
mov
add
sub
in
mull
pop
pop
sub
xorl
pop
sahf
or
add
mov
lcall
call
clc
push
push
cli
mov
add
in
inc
inc
mov
jmp
scas
adc
push
mov
pop
jge
mov
jns
fwait
mov
push
or
cmp
inc
inc
iret
xor
hlt
dec
push
and
cmp
jmp
sahf
cmp
fisttpl
mov
adc
int3
push
pop
mov
jecxz
inc
sub
jb
mov
divb
rorl
into
adc
rolb
and
jnp
mul
inc
cmp
jae
xchg
cmp
fdivs
adc
mov
add
and
push
ja
scas
sbb
add
lcall
push
mov
and
insb
xor
lock
adc
pop
cwtl
mov
pop
push
jle
in
and
cmc
cli
cmp
pusha
push
sub
pop
mov
test
mov
cmp
scas
jnp
lock
add
call
mov
clc
add
cld
jb
adc
popf
sbb
fwait
loopne
cmp
jno
add
sahf
out
push
sub
inc
mov
xor
sub
mov
iret
sub
jo
push
shl
jnp
pop
add
push
or
rolb
sbb
and
and
loope
xchg
mov
cmp
subl
and
or
and
out
push
or
inc
pop
cmpl
and
std
repz
je
mov
fwait
je
movsl
sbb
cmc
bound
add
xchg
punpckhdq
mov
push
xlat
pop
mov
daa
mov
int3
push
xchg
mov
ret
sbb
inc
jmp
push
cmp
jecxz
jnp
aad
sub
xor
sbb
cmpb
scas
sbb
push
xchg
loop
sbb
sub
lds
shlb
adc
in
in
sbb
outsb
push
shrb
inc
sub
push
test
sbb
inc
dec
movsl
cmp
movsl
inc
add
movsl
jns
inc
pmulhw
ficompl
jmp
nop
and
out
dec
push
sbb
and
or
adc
adc
xor
push
roll
sbb
pop
sbb
add
mov
fwait
or
adc
int
aaa
in
outsb
pop
sbb
sarl
enter
dec
xor
or
push
nop
dec
and
js
sbb
push
or
outsl
push
lods
jae
push
mov
xor
cs
pop
pushf
mov
nop
inc
xchg
push
sbb
out
rolb
mov
push
push
push
mov
movzwl
scas
ret
xchg
mov
test
mov
push
pop
push
push
adc
filds
add
mov
add
and
jge
cltd
or
notl
mov
sub
jae
divps
and
data16
inc
cmp
sub
lahf
lcallw
push
mov
sti
pop
jle
movsl
cltd
mov
push
adc
pusha
or
xor
lahf
lret
inc
mov
lret
xorl
lcall
mov
or
loope
notl
dec
mov
hlt
je
cmpl
or
push
jg
lret
mov
fdivs
je
add
cmp
loop
add
insl
imul
popf
lea
jno
adc
ficoml
bound
aas
xchg
push
mov
out
js
jp
mov
inc
or
mov
add
dec
je
inc
or
push
fwait
and
insl
mov
mov
xchg
xchg
xchg
cmpsl
and
push
jo
and
out
addr16
pop
xchg
cmc
mov
das
push
stc
or
xchg
and
mov
xchg
iret
mov
out
dec
popa
push
hlt
bound
xor
or
jno
push
mov
sbb
jp
sub
insl
icebp
hlt
imulb
xchg
jns
add
ljmp
mov
xchg
or
lock
mov
jne
pop
mov
sub
jle
shl
push
fs
je
sub
sarb
je
lea
or
push
inc
sub
and
jp
in
pop
jecxz
adc
mov
mov
xor
or
push
push
mov
xchg
mov
rolb
add
pushf
xor
sub
mov
xlat
mov
test
jne
fs
inc
cmp
jl
jmp
pop
or
or
pop
push
mov
push
ret
push
pop
jmp
pushf
sub
in
sub
jl
or
pop
ret
mov
xchg
xor
enter
into
adc
loop
sbb
pop
iret
scas
or
and
mov
mov
ret
jg
mov
sub
jmp
push
incb
sbb
add
add
push
dec
push
andl
loop
sbb
nop
mov
cmp
jl
push
mov
cmp
pusha
adc
push
lcall
pop
mov
pop
pop
ret
push
data16
loopne
sub
shr
addr16
mov
dec
mov
fsubp
dec
outsl
scas
stc
test
jne
pop
ja
fcompl
adc
or
pop
dec
inc
jg
imul
add
pop
or
jne
js
sub
pop
cmp
mov
jge
subl
adc
xchg
cwtl
cmp
je
jno
mov
add
sub
sbb
dec
rcll
push
pop
lea
push
mov
imul
divl
add
jmp
mov
addr16
addr16
adc
inc
leave
ret
mov
pop
dec
icebp
cmp
cmp
push
add
cs
fsubrs
or
sbb
push
clc
std
or
sbb
cwtl
call
pop
adcb
mov
or
stc
jne
mov
into
jmp
xchg
in
add
daa
sbb
push
repnz
inc
repz
jle
cmpb
adc
pushl
cmp
push
dec
xor
sub
pop
popaw
fdiv
pusha
lock
pop
pop
arpl
adc
or
xor
out
jo
dec
add
fcoml
adc
pop
cwtl
rcl
insl
mov
cmpl
iret
test
movsb
mov
jle
imul
aam
cmp
push
push
dec
mov
cmpsl
sbb
sub
push
pop
pop
and
ss
push
push
popl
adc
push
outsl
les
pop
pop
xchg
mov
loopne
je
lcall
or
push
loope
lea
icebp
inc
ret
mov
imul
mov
add
addl
sarl
adc
adc
cmp
sar
xchg
mov
fs
cmp
je
cmpl
jnp
push
jl
adc
push
jne
push
push
imul
and
pop
jmp
fcoms
sbb
pop
cmp
mov
dec
cmp
leave
push
inc
sub
mov
or
sbb
enter
fcoms
add
adc
fcompl
ds
inc
clc
jg
inc
fimuls
movb
push
jne
mov
shr
mov
and
jae
lds
jo
push
stc
cmp
cmp
or
shlb
adc
rolb
xchg
xchg
ret
outsl
or
xchg
sti
lcall
xchg
outsb
xchg
jb
das
inc
pop
and
sub
cmp
adc
xchg
or
inc
cmpb
adc
test
jmp
mov
push
push
call
outsl
std
push
mov
sub
add
int
or
pop
pop
sbb
gs
push
cli
pushf
mov
push
push
sbb
out
fdivrp
mov
mov
mov
repz
ret
mov
lods
mov
push
push
mov
ret
inc
in
mov
push
or
jae
pop
xor
dec
clc
cmp
sbb
mov
jmp
cli
lahf
cmp
xor
cmpl
jle
push
cmp
jmp
scas
mov
pop
mov
mov
jle
inc
mov
cmpsb
ret
shlb
push
out
cmp
adc
cmp
inc
cmp
push
sub
lods
sbb
push
mov
and
pop
mov
jbe
inc
add
out
aaa
or
adc
adc
test
sbb
pop
push
ljmp
pusha
les
dec
aaa
fimuls
jge
bound
hlt
mov
mov
push
or
lock
or
fs
cmp
xchg
or
stc
or
adc
push
insb
pop
jge
sarb
pop
loop
sarb
xlat
xlat
sahf
and
enter
les
xor
xchg
and
add
xchg
mov
add
or
mov
add
push
mov
push
daa
fnstenv
mov
jmp
loopne
cmp
unpckhps
and
js
aaa
fcoms
lea
push
mov
out
inc
mov
pop
pop
jmp
mov
pusha
orb
movl
adc
or
ficoms
sbb
loope
mov
pop
sbb
pop
stc
testb
je
or
std
jno
shll
rorb
std
ljmp
inc
mov
enter
add
mov
or
test
xor
adc
fidivl
nop
cmp
cmc
push
pop
rolb
scas
mov
inc
and
lcall
or
sbb
test
mov
or
shrl
ret
push
push
rcrb
mov
mov
lods
fcmovnbe
fidivl
sbb
and
fucomip
repnz
sbb
sbb
sbb
scas
lock
add
push
stc
lods
popa
cmp
pusha
push
sub
into
adc
pop
lock
xchg
cmp
ss
out
lods
mov
adc
dec
xor
add
adc
scas
fsubrl
pop
mull
dec
or
mov
test
cmp
ja
testl
stc
movups
and
test
add
inc
pop
sbb
push
cmp
mov
lcall
push
cltd
pop
testl
mov
inc
cmp
push
jle
push
jb
jmp
push
test
mov
dec
sbb
adc
and
mov
mov
sub
cwtl
push
jbe
call
jmp
enter
and
cmpsb
mov
and
jmp
sub
dec
je
push
xchg
in
std
adc
in
jge
adc
sub
ss
mov
jo
pushf
jmp
or
cltd
ret
int
addr16
jbe
jp
jecxz
pop
jne
jp
lea
jmp
add
add
ss
or
call
xchg
push
add
mov
scas
adc
or
or
clc
adc
push
mov
xchg
xchg
mov
loope
fimuls
loope
xchg
and
push
sbb
jg
or
push
sub
stos
in
pushl
js
inc
push
in
in
mov
adc
divb
mov
adc
jmp
es
push
cmp
je
cmp
and
jmp
inc
sbb
leave
adc
adc
mov
add
fstpl
imul
shlb
scas
push
and
push
jmp
jno
pushf
and
jmp
data16
sbb
mov
mov
repnz
and
iret
repz
das
inc
pop
push
repz
loop
mov
push
fs
push
cld
sbb
cld
cmpsb
cld
jo
jnp
mov
fstl
push
outsl
dec
adc
and
pop
mov
hlt
clc
movb
add
or
mov
scas
add
loop
das
dec
push
roll
and
and
push
pop
push
lea
push
sbbl
mov
push
lea
js
lret
dec
cmp
mov
cmp
inc
les
pop
or
ds
add
scas
dec
and
sub
push
movl
push
mov
mov
push
sbb
lea
cmovs
testb
jo
and
imul
call
cmp
add
cli
sti
push
fs
ja
ja
mov
sub
in
xor
mov
sbb
into
lock
xor
sbb
pusha
and
push
ss
push
jl
inc
jmp
cld
add
jle
add
jg
push
add
mov
sti
push
pop
sub
arpl
in
out
dec
mov
adc
dec
mov
js
adc
cmp
sbb
jae
jbe
xlat
xchg
loop
adc
stos
stos
rclb
mov
and
push
mov
fsubl
ret
pop
mov
imul
xor
push
push
shl
pop
push
inc
cmp
xchg
adc
nop
jnp
push
push
push
mov
inc
popf
iret
mov
aas
loopne
cmpsl
out
stc
push
push
push
xchg
push
pop
fcoml
xor
movsl
and
sahf
mov
imul
pop
jo
lret
lea
je
mov
pop
mov
stos
jo
mov
push
or
das
gs
and
cmpl
add
mov
sbb
clc
push
push
in
addb
hlt
dec
pusha
adc
lods
loopne
mov
xor
xchg
push
adc
sbb
clc
push
xor
jne
push
mov
pushl
mov
adc
dec
insl
test
mov
ss
dec
or
jmp
pop
cmp
je
dec
call
pop
sub
cltd
sub
sar
add
bound
in
in
aaa
daa
dec
dec
in
cmp
push
mov
add
fwait
cmpsb
fnstenv
adc
dec
cmp
daa
jns
rcrb
pop
mov
push
add
inc
leave
mov
pushf
or
adc
mov
repz
mov
stos
add
sbb
pop
pushf
jmp
or
push
jle
mov
push
mov
mov
inc
js
dec
mov
mov
neg
sbb
and
and
cmp
add
fs
andl
inc
mov
inc
xchg
xchg
jbe
add
mov
lcall
or
jno
lahf
push
insb
mov
sbb
push
mov
clc
push
lea
cmpsb
inc
mov
sbb
and
test
aas
mov
sbb
adc
call
dec
push
call
out
mov
push
in
test
and
mov
push
sbb
pop
loope
mov
je
push
mov
inc
lock
test
imul
or
push
repnz
shll
push
popa
hlt
add
jo
mov
daa
ds
sub
mov
jge
add
jge
or
jne
adc
dec
je
mov
cmp
xchg
sbb
cwtl
pop
push
add
mov
jg
jmp
mov
jge
pop
push
andl
push
pop
ror
rorb
in
push
es
mov
mov
popa
pop
lds
sahf
or
aas
js
push
push
sub
jl
dec
test
cmp
hlt
movb
add
lock
iret
lret
fldz
bound
sbb
lock
cmpsb
cld
mov
dec
aas
mov
aaa
push
and
inc
add
aam
cmp
xchg
pop
fs
add
outsb
sarl
or
test
inc
pop
loopne
out
mov
and
popf
push
jge
out
adc
xor
pusha
mov
jns
mov
test
and
and
fidivrl
jnp
pop
lea
inc
dec
push
cli
je
cmp
pop
jbe
scas
pop
pusha
mov
sarl
mov
cmp
mov
shrb
int3
fmuls
push
sub
or
nop
jns
push
jo
jp
push
enter
cmp
hlt
lret
adc
jl
pop
insb
movsb
rolb
andl
daa
cmp
cmpsl
test
and
xor
push
mov
lods
cmp
scas
jo
or
dec
lock
addr16
push
pop
sbb
sub
push
cli
xlat
call
xor
adc
sbb
push
mov
hlt
mov
push
pop
ret
jno
mov
repnz
ret
aaa
faddl
inc
sub
sub
inc
aas
int
xchg
imul
pusha
fmull
mov
cmp
cs
cmp
enter
add
idivl
ret
sbb
outsb
rcrl
leave
lock
xchg
pop
jno
or
pop
or
popa
dec
pusha
rcrb
push
ds
rorb
fmull
push
push
xor
lahf
or
jae
and
and
iret
je
mov
jae
arpl
or
bound
dec
push
add
push
xorl
dec
sub
mov
lods
cmp
xlat
iret
xor
call
dec
dec
or
sbb
mov
es
andb
loope
inc
faddl
js
ret
cmp
in
push
mov
das
adc
and
leave
or
in
inc
push
or
xor
mov
sbb
sbb
addb
adc
pop
mov
repz
je
cmpb
mov
jne
test
je
cwtl
pop
roll
mov
jmp
stc
nop
shl
subb
fadds
push
cmp
mov
jmp
adc
pop
cmp
orps
cmpsl
dec
jmp
nop
push
bound
xchg
pop
or
lods
mov
pop
inc
shlb
mov
sub
loopne
push
pusha
push
cmp
inc
push
in
adc
push
xor
push
cmp
outsl
and
sbb
xchg
adc
sub
inc
loopne
pop
sbb
out
jo
out
pop
int
fsub
nop
xorb
and
adc
or
mov
jp
cwtl
adc
mov
addr16
sti
ljmp
aas
mov
cltd
mov
add
sar
push
fnstenv
push
adc
jl
dec
xchg
aaa
nop
popa
inc
cld
cmpsb
lock
call
mov
mov
out
push
jo
fcomip
sti
push
pop
push
adc
dec
jmp
xor
idiv
jle
mov
fwait
mov
aas
mov
or
adc
pushl
aaa
dec
pop
cmp
push
jbe
adc
jmp
out
movsl
sbb
pop
insb
cmpsl
int
mov
add
in
in
leave
mov
sbbl
mov
adc
or
notb
or
pop
pusha
push
ljmp
movsb
sti
sub
clc
je
mov
lcall
inc
lcall
add
and
xor
test
mov
mov
jg
ds
mov
or
xchg
arpl
jge
lret
test
jle
cmp
lahf
xor
mov
add
xchg
subl
add
sti
int3
stos
loop
movl
cmp
iret
outsl
dec
jae
dec
sub
jge
jmp
mov
out
adc
mov
fildl
pusha
or
add
sti
and
xor
xor
mov
fdivrp
mov
dec
sub
mov
mov
pop
add
pop
add
fisubrs
cmp
add
inc
mov
jge
je
into
clc
fcmovbe
ret
enter
jmp
outsb
mov
mov
sahf
lods
jmp
mov
or
jl
dec
call
sbb
or
shrb
test
push
in
js
lea
push
or
jmp
push
adc
sbb
dec
push
and
cmc
add
pop
jge
into
adcl
xchg
fnstenv
push
inc
pop
and
jne
push
jmp
cli
xor
cmp
cld
jle
add
push
push
push
pop
sti
dec
push
movd
pop
aam
loopne
addr16
aam
mov
inc
aam
mov
add
cmp
and
test
call
ja
cmp
xchg
fmulp
gs
mov
pop
or
mov
dec
push
jne
inc
in
and
jne
insl
test
cmp
xchg
adc
mov
pushf
loopne
mov
cmp
mov
sub
and
xchg
pop
and
mov
add
notl
shlb
push
mov
es
push
lea
push
mov
push
mov
rorb
sub
pop
mov
push
jns
dec
adc
pop
push
mov
fidivrs
xchg
decb
dec
add
push
mov
or
and
or
aas
loope
mov
in
pop
adc
add
or
push
jg
jg
push
mov
jp
push
in
cmp
xchg
push
sbb
dec
inc
dec
or
mov
lahf
mov
push
fs
int3
and
push
push
pop
ret
xchg
iret
pushf
add
mov
pop
out
mov
ret
mov
les
mov
mov
repz
inc
adc
push
inc
ret
mov
xor
leave
testb
stos
push
or
inc
scas
in
and
or
orl
sub
push
and
cmp
jno
xor
pop
pop
shl
insb
movsl
mov
pop
cmp
cld
add
push
leave
clc
lods
sub
clc
setb
xor
add
test
jne
mov
sarb
dec
sub
sar
xchg
pop
das
jp
dec
dec
adc
pop
add
pop
testb
adc
mov
je
sub
pop
mov
imul
dec
fsts
mov
mov
nop
lock
hlt
mov
sub
adc
add
shrb
inc
sbb
int3
cmp
and
cmp
repz
jb
jge
dec
mov
push
addr16
imull
call
inc
push
push
shlb
add
push
jbe
lret
mov
loope
pop
push
dec
daa
std
jbe
inc
daa
fdivrs
lods
adc
xlat
mov
add
cmp
or
pop
pop
outsb
ljmp
clc
or
and
push
je
mov
je
push
je
lahf
push
mov
shr
hlt
pop
or
das
and
sub
sbbl
addl
push
std
xor
or
movl
push
mov
adc
movl
les
dec
mov
mov
lock
rclb
pop
bound
mov
mov
scas
lret
pop
aam
into
and
lods
sub
daa
xor
add
dec
enter
sub
lretw
add
pop
push
in
aas
xchg
pop
inc
subb
xchg
ret
test
int
ljmp
adc
gs
mov
mov
jne
push
xor
in
sbb
sbb
or
divb
jmp
jbe
arpl
inc
or
xor
xor
push
fstps
sbb
push
jg
pop
mov
inc
xchg
addl
xchg
test
in
shrl
test
xchg
call
and
in
inc
aas
add
push
add
jmp
push
sbb
daa
repnz
add
ror
inc
stos
add
sbb
fsubrl
dec
add
sub
sbb
adc
xor
mov
pop
mov
mov
int
xor
mov
inc
insl
cmp
pop
pushf
lcall
xor
int
lret
xor
mov
mov
call
xor
pop
aad
push
inc
ds
pop
dec
inc
mov
sbb
dec
pop
shl
sbb
in
xor
imul
add
inc
fdivrs
mov
push
xor
xor
push
loope
rorb
xchg
out
int3
movsl
add
cwtl
adc
jg
mov
orb
into
xchg
mov
jne
adc
xchg
lods
sbb
mov
or
xor
push
cmp
xchg
mov
add
cltd
in
pop
or
stos
push
inc
and
rorb
add
stos
and
lea
add
cmp
xchg
iret
outsl
mov
jne
push
test
pop
mov
orl
pusha
scas
add
leave
mov
add
add
dec
ja
movsl
mov
cmpsb
cs
popf
cmc
push
xchg
inc
pusha
mov
mov
jp
mov
nop
add
cmp
dec
outsb
sbb
stc
mov
mov
sub
push
sub
pop
adc
add
push
mov
pop
call
orb
pop
inc
adc
lret
ss
int3
ret
mov
repz
leave
mov
loopne
mov
or
adc
or
push
cmpsl
add
shl
push
sahf
adc
push
sub
out
jo
pushl
fdivl
cmp
dec
fadd
sbb
test
icebp
inc
adc
push
push
or
fnstsw
pop
aam
inc
or
in
adc
sbb
loope
push
in
mov
call
mov
push
adc
push
mov
jmp
movsb
dec
je
cmp
lretw
mov
push
scas
adc
fdivrl
lock
jmp
adc
and
or
lcall
pop
into
repnz
push
fcomps
and
mov
push
call
or
mov
mov
aas
pop
push
movl
lods
cmpsb
adc
jmp
inc
pop
add
push
mov
repnz
repnz
or
or
sbb
subl
sbb
fcomps
bnd
xor
inc
mov
mov
and
popf
fsubrp
jo
dec
push
add
leave
or
cmp
or
mov
lahf
rcrb
and
addl
fidivl
pop
lds
in
mov
add
mov
add
repz
dec
pusha
sbb
bound
jns
mov
pop
adc
mov
in
jge
xchg
cmp
lock
sub
aad
and
pop
ja
stos
loopne
fnstcw
aas
dec
mov
push
sbb
mov
lods
jecxz
jmp
loope
add
xor
jbe
xor
xchg
add
adc
sbb
aaa
daa
and
lcall
loope
xchg
xor
roll
inc
adc
cmp
in
aam
repnz
jne
pushf
pop
adcl
or
sub
rcrb
shl
into
push
lcall
mov
rorb
xchg
lret
or
test
iret
scas
ljmp
mov
scas
mov
je
push
mov
lahf
add
sbbb
lea
push
shlb
fstps
sbb
xor
es
or
pop
adc
inc
ja
and
repnz
pop
fisttpl
mov
and
adc
faddp
inc
and
cmp
xlat
xorl
mov
ret
or
popa
and
pusha
push
test
js
mov
lea
and
addb
add
adc
or
lret
das
test
dec
inc
cmp
lret
fchs
loop
ja
and
jecxz
cmpsb
in
mov
lods
xchg
and
adc
add
sti
xlat
cmp
fnstcw
fnsave
repz
jb
lea
adc
mov
lcall
daa
cltd
or
loope
add
fcoml
in
aam
pop
hlt
into
sub
sub
repnz
je
sar
aas
adc
sbb
push
sub
daa
pop
ljmp
dec
dec
leave
dec
sbb
and
call
jo
test
out
icebp
sub
jo
push
cld
inc
mov
jl
jae
pushf
jne
ds
dec
push
aaa
xor
push
inc
repnz
add
mov
xlat
xor
outsl
pop
push
cmp
inc
adc
push
sbb
xor
add
or
mov
jecxz
pop
or
push
addl
pcmpeqb
add
add
mov
pushw
adc
pop
push
sub
or
insl
sbb
push
sub
lret
outsl
adc
push
pop
sub
in
insb
push
mov
das
fimull
fnsetpm(287
dec
dec
mov
push
outsl
push
ret
pop
icebp
adc
js
jo
dec
out
mov
inc
push
xor
adc
inc
test
pop
popa
arpl
cmpsb
or
jo
adc
cmp
fs
or
pop
aaa
jl
mov
push
fnstsw
cmp
ret
loope
outsl
ja
dec
nop
mov
inc
and
idivb
jo
jle
jmp
insl
add
fcomps
inc
inc
sahf
cmp
je
test
dec
out
ja
jle
clc
rorb
add
mov
in
push
mov
sub
pop
into
int
inc
dec
rorb
bound
or
dec
dec
enter
lds
loop
sbb
jne
orl
and
sub
inc
jno
push
outsl
outsl
mov
inc
push
je
and
gs
lret
push
xchg
es
pop
outsl
lea
inc
dec
out
mov
pop
jae
test
and
or
dec
aaa
cs
or
or
and
push
inc
pop
dec
movl
or
push
push
cli
inc
xor
cli
add
repz
sahf
lret
xor
fadds
push
and
lret
test
add
in
arpl
add
sti
leave
mov
dec
std
je
xor
jns
jne
sub
bnd
or
dec
leave
mov
cli
ja
pop
vpmulhw
testl
call
or
sbb
test
out
cwtl
pop
pushf
pushf
pop
push
adc
inc
rorb
inc
sahf
inc
fbstp
lods
adc
add
push
movsb
fstps
adc
js
lds
sbb
add
and
cld
push
or
mov
pop
sbb
ds
cmp
cwtl
push
jns
data16
add
adc
fcoms
addl
xorb
jg
mov
les
das
adc
out
push
inc
adc
push
into
xchg
cmp
fildl
and
fcoms
sbb
arpl
add
inc
add
push
sbb
sbb
add
xchg
cmp
pop
call
cmp
cmp
mov
jecxz
pop
push
push
push
mov
inc
pminsw
mov
pop
adc
adc
addb
and
fcomps
adc
fsubl
adc
push
std
in
gs
daa
sbb
push
gs
and
pop
adc
mov
je
rcr
or
les
adc
mov
mov
in
mov
cmp
sbb
push
inc
sbb
cmp
notl
insl
jnp
divl
pop
in
push
andl
icebp
orl
push
mov
xor
or
movups
inc
jl
pop
xchg
icebp
adc
das
test
pop
subl
movsb
hlt
mov
sub
pop
add
lods
pop
mov
lret
mov
jmp
or
xchg
sub
sub
sub
pop
push
mov
xchg
bound
jge
std
lds
outsl
push
leave
and
xchg
cs
sbb
mov
pop
push
sbb
push
js
pop
mov
cs
pop
test
sbb
mov
sbb
jne
push
ja
sbb
shll
leave
int3
cmp
test
mov
sarb
dec
inc
cli
xor
es
jl
movl
push
jp
push
repnz
dec
adc
cmp
or
push
pusha
mov
sbb
sbb
aaa
loop
xor
clc
push
push
jl
lret
mov
outsl
lahf
jne
xor
test
or
push
js
enter
push
js
js
xchg
imul
push
and
mov
aad
lds
sbb
ljmp
out
xor
ret
dec
mov
xor
rcll
cmp
jns
rclb
rolb
mov
add
pop
push
testl
mull
mov
pop
sbb
stc
jp
into
ret
mov
mov
push
neg
mov
pop
hlt
test
pop
out
add
nop
nop
pop
add
outsb
test
lods
cmp
test
je
ret
cmpsl
and
popf
or
test
test
add
or
mov
pop
cltd
aad
scas
fiaddl
or
adc
sub
sar
inc
mov
out
sbb
push
and
ja
mov
xlat
movsb
sbb
add
cmpsb
flds
repnz
add
ror
pop
and
pop
insl
inc
ljmp
inc
movl
push
pop
sub
bound
sub
notl
cwtl
shrb
sahf
cmp
into
add
xor
push
sub
dec
push
lods
cli
sub
push
jmp
test
add
add
cmp
movsb
sub
or
inc
fiadds
mov
lret
orb
adc
and
xor
lds
and
imul
leave
repz
cmp
push
arpl
or
mov
inc
int
imul
aaa
call
popl
sarb
repnz
or
sti
or
sub
push
add
mov
dec
in
inc
pop
test
movsb
repz
loop
pop
hlt
setne
mov
sbb
pop
repz
sti
aas
push
push
push
aas
inc
divb
or
pop
hlt
jne
push
push
push
mov
lock
mov
sbb
call
adc
shrb
xor
pop
rclb
jbe
out
dec
and
mov
xchg
xchg
mov
and
scas
xor
mov
push
and
shll
sub
dec
imul
push
sbb
pop
inc
push
dec
mov
add
sete
cld
shll
jne
push
daa
jo
mov
push
sbb
gs
and
add
pop
add
push
addb
push
push
movsl
sub
add
dec
fwait
push
jo
rcrb
add
cmpsb
imul
sbb
add
push
xor
inc
jo
mov
dec
or
mov
cmpb
or
and
jge
lcall
sbb
and
ds
sub
sub
jmp
xor
fsubl
iret
out
inc
ror
dec
arpl
pop
ds
or
mov
lret
sbb
ss
or
fwait
lret
push
add
movsb
fisubrs
and
inc
adc
adc
cmp
lcall
adc
fstpt
jne
and
push
cltd
sbb
iret
add
fs
bound
dec
out
repnz
les
mov
js
pop
into
scas
jbe
test
xchg
xor
add
mov
or
lahf
push
mov
pop
mov
movsb
cmp
pop
into
sub
adc
gs
hlt
jb
sub
push
mov
mov
mov
std
inc
jle
xor
add
dec
lock
push
mov
rclb
push
mov
lahf
mov
mov
pop
mov
or
ljmp
imul
cli
scas
rol
pop
cmp
or
xchg
les
add
sbb
push
cmp
leave
jb
mov
ret
jge
mov
pop
insb
and
test
rcrb
test
add
mov
sbb
nop
add
lds
mov
push
pop
lods
ja
scas
sub
clc
jb
xrelease
test
add
andb
dec
jge
mov
push
out
sub
xor
mov
push
aam
mov
dec
test
cmp
jbe
stos
jle
movq
jno
mov
inc
add
push
inc
add
in
cmovle
rorb
sbb
mov
add
mov
sahf
xchg
into
dec
and
mov
cld
icebp
in
shlb
xchg
es
add
lret
jmp
pop
loopne
jno
lds
cltd
aam
jmp
mov
lret
dec
test
sti
daa
inc
mov
nop
and
lret
into
lock
sar
out
push
addr16
adc
shll
sbb
or
lea
add
cmp
jae
push
xor
sbb
fdivs
push
pusha
cwtl
shl
and
daa
sub
cmpsl
inc
fmull
add
add
mov
mov
jmp
cmp
dec
hlt
jge
sbb
enter
add
mov
outsb
and
fsubs
or
jmp
push
iret
popw
cmp
ljmp
pusha
pop
test
incl
inc
jecxz
and
push
cmp
jg
inc
push
or
and
dec
jge
sub
jmp
call
mov
mov
hlt
mov
mov
lahf
and
push
in
or
imul
push
pop
movsl
js
push
popf
pop
or
nop
or
pop
or
aas
cmp
sub
push
nop
mov
inc
popf
pop
cmp
sbb
aas
pop
jns
fcoms
jb
imul
jge
xorb
sbb
sbb
js
mov
ret
mov
cmp
mov
cmpsb
mov
movsl
int
xor
jo
mov
and
and
xlat
sbb
mov
cmp
or
pushf
jge
or
addl
pop
mov
mov
mov
xchg
js
add
sub
xchg
mov
hlt
jo
dec
adc
mov
shll
push
sti
lret
ljmp
push
mov
rclb
jge
mov
or
sbb
inc
push
push
pop
popa
sub
mov
push
sti
mov
outsl
pop
sbb
lds
xor
push
je
pop
cmp
test
sbb
cmp
int
lret
es
or
test
add
movsb
jb
lea
clc
cmpb
repnz
daa
pop
aad
mov
test
or
xchg
repnz
mov
sub
ljmp
ljmp
xor
pcmpeqw
mov
cmp
push
ret
add
scas
dec
mov
push
adc
lods
lods
stos
pusha
or
pop
jo
push
je
fadds
or
imul
push
adc
adc
xor
push
lahf
lock
mov
pop
adc
inc
push
negl
orl
adc
fs
cltd
clc
pop
dec
js
adc
adc
scas
inc
xor
int3
test
pop
adc
je
inc
cmp
mov
push
pop
popa
cli
pop
jg
test
mov
add
inc
add
stos
test
fs
push
jmp
pushf
push
call
sbb
push
insl
xor
popf
mov
cmp
mov
add
in
push
push
popf
cmp
cmp
test
imul
add
cld
xchg
stc
sub
adc
jbe
sbb
mov
adc
hlt
dec
je
push
in
xchg
adc
jmp
push
adc
xor
push
adc
pop
adc
adc
jne
mov
mov
adc
lret
push
sti
sbb
push
jmp
in
adc
mov
push
dec
mov
rcrl
pop
adc
xchg
mov
mov
xchg
fdivs
adc
movsl
mov
mov
add
push
push
inc
pushf
fs
add
pop
leave
pop
dec
adc
inc
insl
sub
sbb
fwait
add
hlt
push
push
xor
repz
adc
movsb
fisttpl
stos
into
lods
add
add
jbe
loop
pop
and
std
popa
push
inc
cwtl
adc
add
call
into
push
int
call
lock
inc
insb
dec
add
mov
and
das
in
push
out
xchg
lahf
cmp
push
lcall
sbb
push
xor
gs
jl
je
sub
gs
adc
adc
into
inc
xor
adc
mov
push
add
scas
es
insb
hlt
mov
lahf
mov
repnz
sbb
test
leave
inc
les
lods
pop
test
mov
loope
enter
loop
mov
xor
repz
cmc
jle
clc
xor
mov
ror
ja
popa
jmp
push
add
adc
int3
xchg
dec
lcall
xorl
sub
shlb
push
mov
ds
repnz
mov
pop
jmp
pop
test
jp
jb
push
dec
iret
out
or
jmp
push
or
ss
push
add
pop
fidivrs
pop
adc
jl
gs
xchg
push
or
mov
push
or
outsl
mov
test
fnstenv
mov
sbb
push
mov
pop
lock
xlat
outsl
sub
fldl
mov
and
add
adc
add
sbb
xlat
add
iret
add
jns
mov
jbe
jns
add
sub
pop
jmp
inc
cmp
dec
lock
push
scas
mov
pop
bound
pop
popa
in
adc
push
dec
adc
cmp
sub
push
roll
fchs
mov
popa
ffreep
cmpsl
push
arpl
test
push
negl
das
add
or
sub
mov
pushf
xchg
or
pop
pop
lods
dec
xchg
cmp
or
stos
and
sbb
cmp
cltd
aas
insb
jno
aad
pushf
jae
mov
les
push
andl
push
lock
inc
ret
pop
pop
aaa
jne
push
mov
cli
popa
aad
in
faddl
lea
pop
aaa
or
dec
shl
lret
jo
addb
mov
mov
inc
shrl
mov
mov
pop
lret
pmaxub
or
mov
test
sub
dec
cmp
pop
mov
xor
or
sbb
xlat
rcl
cltd
fcoml
adc
hlt
or
mov
mov
jmp
stos
add
int
push
pop
leave
pop
out
lea
sub
add
rcll
or
mov
mov
mov
iret
add
jae
sahf
pop
and
inc
enter
aam
sysret
insb
and
fcompl
and
jmp
sahf
or
add
imul
ret
sub
adcl
test
adc
loopne
orb
xchg
adc
stos
push
ljmp
mov
mov
sub
jne
movsl
cltd
out
pop
xor
push
dec
inc
adc
fildl
xor
cld
xor
push
lock
pop
inc
ficoms
xchg
mov
add
push
das
add
or
in
lea
loopne
push
add
fiaddl
cmp
pop
cld
sub
mov
imul
jo
fimuls
ret
jg
adc
lock
pop
xor
cmp
loop
outsb
or
shr
subb
adc
sub
add
iret
push
push
sbb
sbb
add
push
xlat
mov
mov
dec
jp
mov
test
or
push
mov
stos
xlat
test
cltd
mov
enter
rorb
sbb
cwtl
hlt
rclb
push
dec
pusha
dec
cli
or
push
add
sub
inc
sub
sbb
pop
dec
mov
or
or
arpl
sahf
rcl
insb
into
mov
push
inc
pop
add
movsb
test
out
inc
imul
aam
add
lock
add
mov
push
call
ret
fbld
cmpsb
outsb
imul
pop
cmp
sbb
ficomps
push
push
sbb
subl
movzwl
aad
cmp
xchg
push
lcall
and
sbb
clc
dec
mov
jle
jbe
adc
push
sub
push
jmp
inc
jp
insl
mov
mov
push
aam
jmp
inc
jl
fcompl
sbb
add
add
sub
jecxz
punpckhwd
push
test
pusha
and
push
mov
lret
add
sbb
call
leave
mov
mov
cmp
je
push
lea
push
dec
or
add
inc
arpl
ss
clc
push
sbb
mov
fs
sbb
pop
mov
or
adc
sarb
jmp
xor
push
aas
push
adc
call
pop
rolb
imul
sub
inc
mov
clc
add
hlt
push
in
inc
mov
jbe
in
mov
xchg
jp
je
ficoml
ret
fistpll
mov
pop
insl
adc
mov
push
push
je
rcl
and
lock
xchg
sbb
mov
or
shlb
jbe
clc
call
movsl
push
push
xor
push
push
cmp
je
add
aam
push
xchg
cmp
add
fiadds
push
in
aas
xchg
sbb
fnsave
push
aas
movsb
mov
bound
int3
sub
jbe
cmp
or
ret
jmp
or
cmp
lods
push
icebp
insl
in
mov
fsubr
push
push
adcb
inc
lahf
imul
push
test
loopne
in
sbb
cmp
out
cli
scas
cmp
dec
rorb
sahf
into
gs
scas
in
ds
adc
dec
sbb
push
and
imul
addr16
cmpsl
mov
arpl
xor
add
pop
and
or
and
sub
push
push
fstpt
adc
andl
ret
add
mov
jle
jb
pop
cmp
inc
sbb
xor
cs
jmp
jns
cmp
insl
fistl
cmpb
mov
jb
cmp
int3
js
lea
in
cmp
je
cmp
je
dec
sbb
lock
jne
add
cmpsb
mov
rclb
into
call
xor
outsb
or
add
sub
outsb
pop
mov
cmp
xor
adc
mov
pop
clc
add
cmp
or
hlt
add
test
mov
andb
enter
sub
jne,pt
xchg
out
adc
xchg
push
loop
sbb
mov
mov
or
cmpsl
jp
xchg
push
jns
jnp
aad
mov
cmp
subb
lcall
cld
add
imul
pop
aam
leave
ret
pop
add
and
add
adc
stos
lods
jg
icebp
cmpb
or
ja
int3
sub
jae
mov
sbb
inc
aaa
popa
test
daa
push
ret
mov
call
add
push
add
push
sbb
xchg
mov
add
cwtl
cmpsl
std
push
pop
push
inc
adc
imul
add
sbb
sbb
ret
jmp
cld
mov
fstpt
cmpsb
in
xor
filds
push
push
add
mov
cmp
gs
je
cmp
jne
mov
scas
ja
jns
or
push
dec
inc
lock
mov
pop
dec
xor
push
movsb
jne
jmp
testb
pop
lds
lcall
push
aam
sbb
cli
cmp
jbe
jle
dec
fstl
inc
cmp
fs
dec
inc
jmp
inc
add
fsubs
rorb
add
jne
xor
pop
mov
push
cmp
jmp
ret
dec
or
cmp
ficoms
cmp
cmp
je
mov
lea
test
cmp
sbb
and
pop
in
jnp
daa
inc
xor
inc
cmpl
push
pusha
jne
cmp
notb
cmp
mov
enter
gs
je
insl
adc
sub
jb
or
mov
les
shrb
enter
sub
cld
add
push
cmp
aad
es
xor
adc
cmp
xchg
or
outsl
int
mov
pop
cmpsb
inc
sub
popa
loop
jne
push
sahf
gs
push
test
mov
sbb
movzwl
pushw
mov
aaa
imul
rol
sar
cmpsl
pop
shl
add
jmp
cwtl
aas
insb
sti
and
mov
hlt
add
mov
in
aaa
je
fs
jne
xor
lods
inc
dec
lock
test
std
pop
mov
dec
or
add
pop
jae
mov
jmp
ret
dec
inc
orl
test
mov
push
sub
lea
cld
loop
subb
jmp
outsb
xor
sbb
rolb
sti
mov
inc
jg
or
jge
jae
jae
inc
aaa
or
jle
es
sub
mov
out
sub
and
pop
cmp
jl
pop
jle
pusha
sub
or
jbe
jp
jb
jl
jle
push
adc
ja
pop
or
je,pn
test
jne
je
dec
lock
and
xchg
je
je
cmp
and
adc
movb
pusha
daa
std
mov
adc
rclb
sub
inc
adcb
shlb
inc
push
push
mov
inc
and
daa
mov
adc
jno
mov
push
mov
push
mov
call
jp
inc
es
cmpb
or
stos
xchg
jp
add
push
movl
sub
mov
std
icebp
pushl
push
cmpsb
imul
mov
xor
mov
add
lret
push
das
mov
mov
call
cmp
pusha
sub
xchg
push
lea
adc
lods
push
sub
jge
hlt
mov
cmpb
add
movb
or
inc
lea
xchg
loop
call
cmp
in
clc
sub
pop
loopne
cmp
mov
or
in
loopne
inc
imul
mov
inc
lea
pop
cwtl
lods
push
dec
xor
lock
roll
stos
dec
daa
mov
add
or
inc
arpl
imul
shll
addl
xchg
std
jo
cmp
je
test
mov
pushf
push
adc
jmp
adc
sti
mov
push
jo
jp
or
pop
push
shlb
mov
dec
add
das
push
arpl
or
addl
xor
mov
or
cmpsl
pop
mov
aam
xor
pop
mov
push
adc
clc
add
inc
inc
jbe
ljmp
lidtl
in
xor
mov
sbb
push
mov
jg
scas
push
or
push
movsl
inc
sahf
push
cmp
lock
mov
hlt
sub
pop
pop
add
inc
xchg
xchg
add
pop
adc
dec
mov
jne
test
or
ds
shlb
inc
lds
inc
lcall
jb
cs
andl
sbb
pop
cmp
cwtl
and
add
sbb
fadds
mov
xchg
sbb
push
xchg
cltd
push
enter
mov
xchg
ret
insl
repz
push
add
fsubrs
lods
pop
into
push
mov
push
add
and
and
sbb
xchg
sub
mov
lahf
jne
cmp
and
addb
and
xor
xchg
xchg
sbb
mov
ja
das
or
jne
iret
sbb
inc
sbb
mov
cwtl
rorl
or
and
cmp
and
and
and
mov
enter
test
mov
adc
outsb
cltd
ret
loopne
inc
and
mov
lcall
add
aam
pop
call
xor
loope
inc
lea
mov
xor
loop
add
sub
in
fsubl
jne
add
xor
push
shlb
sub
mov
cmp
jne
cmp
push
fdivl
jne
mov
je
lods
cmp
jnp
das
movl
cmp
das
bound
jbe
bswap
into
cmpl
sbb
cmp
cmpl
add
push
imul
fcomp
sbb
jo
inc
lods
jmp
cmp
je
mov
cmp
inc
mov
inc
ss
roll
in
loope
jge
pop
and
aaa
inc
and
ret
das
mov
inc
das
hlt
push
in
and
dec
imul
subl
aam
fsubr
cmp
in
test
push
dec
sub
dec
push
add
inc
fsubp
inc
es
mov
push
call
xor
jbe
xorb
jp
sbb
or
je
incb
jae
jmp
ret
incl
aas
je
lea
cmpb
cmp
jne
push
fnstsw
les
aam
adc
jmp
push
sbb
cmp
mov
mov
inc
incl
add
jp
data16
into
ss
insb
test
movsb
push
mov
lret
lds
xchg
sub
mov
cmp
sbb
sub
clc
je
jmp
add
xor
fidivrl
push
and
or
add
insb
or
push
enter
lahf
cmp
cmp
das
ret
or
inc
push
sbb
aad
sarl
pop
sbb
dec
ret
push
stos
gs
xor
add
enter
adc
or
int
dec
cmp
add
mov
jne
aaa
leave
mov
test
mov
jbe
dec
add
mov
mov
sub
xor
iret
in
cmp
inc
mov
das
int
cmp
mov
add
or
sub
inc
clc
push
push
push
sbb
lods
add
shl
push
push
jmp
insl
das
mov
ret
rolb
lods
sub
xor
add
sub
jae
lret
mov
inc
and
sub
mov
xchg
xchg
mov
sub
xor
in
mov
sbbb
cmp
fistps
into
push
push
sbb
pop
ret
dec
rolb
stc
sti
jnp
je
int
xor
or
call
addl
enter
lcall
push
pusha
mov
cltd
push
or
or
js
aam
push
jb
jnp
enter
shll
in
pop
dec
dec
std
cmp
push
push
std
imul
sub
ficomps
push
cmp
xchg
sahf
insl
pusha
mov
jne
mov
lds
or
ret
mov
cmp
xor
in
dec
and
push
loopne
mov
mov
add
pop
inc
dec
movl
nop
cmp
js
or
fadd
mov
loopne
mov
test
or
inc
loope
pop
lock
inc
repnz
hlt
gs
fldl
sbb
pop
xchg
mov
jmp
repnz
add
lcall
dec
js
lahf
add
dec
xor
cld
into
xchg
or
out
jne
cmpsl
andb
cmpsb
fildll
add
fadds
aaa
je
mov
jmp
lcall
hlt
cmp
cmp
sbb
dec
rclb
jnp
in
sub
cmp
inc
jl
and
jg
add
fucomi
ud0
add
mov
jge
mov
lea
mov
fcompl
xor
shll
xorl
js
lods
fisttpl
push
add
adcl
and
cmp
mov
rolb
insl
sbb
push
push
andl
mov
pop
imul
inc
fsub
in
in
mov
shl
cli
mov
addr16
push
xchg
out
xchg
repz
cmp
lods
sbb
xor
jg
push
xchg
push
jmp
add
xor
xor
jne
mov
mov
sbb
push
adc
mov
push
mov
clc
stos
test
push
adc
pop
repz
shlb
jbe
lret
xor
lcall
out
bound
jns
lods
cmp
or
fmull
add
push
mov
xchg
cmp
ss
cmp
xchg
jo
lock
add
add
sub
pop
imul
rcr
loopne
inc
sahf
add
loopne
push
mov
dec
repnz
jne
imul
sbb
xchg
out
cmp
adc
cltd
inc
mov
ret
push
jns
popa
adc
pop
or
scas
outsl
lock
dec
cld
mov
adc
mov
sub
ja
lods
pop
fld1
sub
pop
pop
sbb
adc
or
ror
imul
outsl
inc
jmp
push
pop
mov
pop
rorb
mov
or
add
add
mov
add
pop
imul
adc
dec
sbb
push
xor
pop
dec
roll
cmp
jno
hlt
mov
lods
pushf
or
test
ja
add
clc
inc
mov
cmp
sti
or
pop
ret
jae
xor
push
cld
mov
mov
dec
dec
stos
xchg
pushf
add
xchg
loopne
push
push
mov
loopne
jl
add
xor
mov
popf
pop
or
xor
hlt
aad
jecxz
push
fmull
in
dec
mov
xchg
or
or
xchg
js
sar
mov
push
lahf
pop
faddl
and
inc
scas
imul
mov
shrb
inc
or
stc
lahf
cmp
pop
or
adc
addr16
mul
jmp
push
lock
dec
cmp
and
lret
dec
add
push
in
jecxz
xor
les
clc
or
add
lea
mov
lds
add
mull
daa
mov
orl
and
fimull
sti
les
add
sar
mov
push
ljmp
das
jb
imul
sbb
adc
and
lea
orl
cs
jo
cmp
int3
cli
push
rclb
pop
xchg
icebp
mov
ljmp
xchg
xchg
xchg
mov
leave
sbb
stos
xchg
ficomps
lret
loop
pop
sub
adc
arpl
push
insb
add
popf
xchg
je
and
xor
nop
cmp
or
cltd
add
int3
jecxz
or
adc
cmp
xchg
jb
and
jo
add
adc
mov
pop
out
xchg
add
push
and
fstl
jle
gs
dec
inc
push
ja
xchg
arpl
pop
inc
push
or
out
mov
rorb
xchg
jbe
imul
push
pop
cmp
fildl
adc
jbe
push
lahf
shl
jbe
pop
pop
mov
or
jp
sub
mov
and
sub
mov
xchg
es
lods
or
pop
cmp
and
inc
dec
cmp
pop
mov
lcall
mov
icebp
inc
imul
int3
pusha
shlb
out
and
sbb
outsl
and
ja
dec
adc
in
ret
pop
push
inc
cwtl
mov
sbb
xor
sbb
lcall
adc
or
adc
or
lods
sti
cmc
pop
test
xchg
sbb
les
fistpl
mov
jb
dec
adc
sbb
or
and
dec
mov
or
ret
mov
ret
sub
push
adc
ret
scas
cmp
jne
push
je
adc
repz
jmp
inc
outsb
lahf
ret
push
sub
or
js
pop
jmp
clc
bnd
inc
cs
fdivr
data16
mov
cwtl
pop
push
out
or
inc
xor
dec
or
ret
ja
addl
xor
rcrb
pop
sbb
scas
jle
sbb
nop
pop
pop
adc
idivl
add
shlb
aam
sahf
aaa
pop
adc
hlt
inc
or
add
bound
adc
clts
inc
aam
pop
test
adc
out
scas
jecxz
add
adc
jo
adc
inc
fisubl
cs
push
add
nop
push
add
xor
sub
sub
sarl
pop
dec
jne
fistl
inc
cmp
incb
cmc
pop
pushf
sbb
mov
lods
pusha
adc
loope
mov
jnp
int
sbb
or
add
repnz
pop
xor
push
add
push
push
adc
inc
ja
sbb
and
add
xchg
mov
stos
or
pop
or
or
ffreep
pop
mov
imul
jns
gs
lret
mov
xor
loopne
push
mov
sti
bound
in
sbb
or
sub
sbb
sbb
mov
cltd
out
jge
dec
pusha
lds
lods
clc
jo
push
scas
push
cmc
pop
iret
repz
test
pop
cld
movb
xor
lock
push
sbb
jo
in
mov
data16
sub
sbb
and
aad
push
push
pop
movsb
sbbb
push
rcl
and
inc
push
pop
pop
mov
int
stc
jl
movb
adc
enter
and
xor
int3
xchg
in
cmp
sbb
lds
jns
add
test
dec
test
ljmp
cs
bound
mov
pusha
dec
orb
mov
lea
or
mov
lea
mov
test
inc
dec
and
jo
call
and
mov
cmpsl
lcall
dec
add
or
movsl
pop
push
inc
add
inc
xor
jne
cmp
cmp
xchg
cmp
out
cltd
imul
cli
xor
xchg
sub
or
and
enter
push
shll
push
dec
clc
inc
push
ljmp
icebp
pop
push
imul
daa
je
sbb
sub
adc
sbb
fsubrs
sbb
imul
sbb
sbb
xor
sub
or
fs
mov
sub
or
mov
enter
push
pusha
or
pusha
movsb
and
cwtl
xor
push
xchg
and
mov
push
shrl
das
push
mov
sbb
in
jecxz
cmpsl
inc
xor
adc
add
into
stos
push
add
add
inc
add
inc
lret
xchg
clc
add
sub
je
imul
cmp
in
mov
pop
cmpsl
cmpsl
popf
lods
xchg
push
add
lock
insl
nop
js
xor
movsb
and
into
shrl
outsb
dec
pop
imul
xor
sbb
lcall
xor
or
cmp
push
mov
or
inc
ss
xchg
sbb
sub
out
xchg
xor
ret
inc
add
inc
xchg
push
mov
jmp
loop
enter
fbld
add
push
jmp
pusha
movsl
sahf
add
mov
arpl
xor
adc
push
addb
xor
xchg
enter
push
jmp
cltd
bound
scas
dec
aaa
pop
cmpsb
dec
push
jno
sbb
sahf
fdivrl
jno
push
dec
push
push
inc
mov
icebp
adc
dec
dec
adc
push
push
cmp
mov
mov
rorb
push
fcomip
mov
fisttpl
cmp
jne
inc
clc
and
std
add
adc
add
pop
sbb
jl
or
mov
pop
cmp
dec
mov
popa
xchg
push
scas
dec
in
lea
mov
pop
inc
sahf
pusha
mov
in
lahf
bnd
repnz
into
xor
pop
fdivs
xor
sbb
test
xchg
mov
ffree
add
call
mov
xor
and
fadds
inc
adc
dec
mov
adc
or
mov
jge
pushf
add
pop
push
test
addl
mov
push
in
outsb
in
xchg
sahf
jecxz
aam
push
mov
inc
mov
test
and
add
andb
or
addr16
in
loopne
adc
or
out
repz
call
lcall
mov
nop
mov
xchg
icebp
xchg
fmull
fsubl
pop
push
mov
dec
lret
cmp
lcall
mov
sbb
aaa
cs
bswap
jbe
insb
lock
xchg
mov
mov
dec
or
rorl
jmp
or
ljmp
pop
add
mov
xlat
decl
cmp
sbb
jno
clc
sbb
jmp
sub
push
push
shl
imul
push
lds
imul
mov
insl
loope
jne
scas
je
push
popa
mov
shlb
je
inc
insl
cmp
ljmp
lahf
xor
sub
fistpl
test
mov
or
aad
sbb
ja
mov
sahf
arpl
dec
mov
sbb
movsl
rcl
test
add
in
int3
mov
sbb
sub
lods
mov
sbb
lret
loopne
jo
inc
push
add
out
lret
pop
vrcpps
push
mov
jae
repz
mov
adc
daa
dec
popa
sbb
lock
xor
shr
add
out
add
lock
gs
sbb
jb
cmp
inc
add
cmp
clc
mov
jae
push
jo
leave
or
mov
dec
out
sbb
adc
scas
call
inc
sub
in
sbb
dec
movsl
inc
inc
jle
test
adc
mov
pop
jbe
sti
or
add
push
int
push
je
mov
and
sbb
insb
and
mov
ds
pusha
rclb
xchg
inc
push
jle
fbld
movsl
mov
pop
les
loopne
ret
mov
clc
int3
dec
jl
add
popf
inc
dec
pop
xor
shlb
icebp
pusha
jl
mov
jmp
cs
test
inc
movsb
push
cld
ja
add
mov
ret
mov
cld
and
add
or
fbld
sub
lret
sbb
aam
sbb
push
pop
lds
pop
adc
pushf
cmp
je
add
add
and
add
adc
sub
arpl
fs
dec
or
or
dec
inc
or
pushf
rolb
lds
cmpsl
add
dec
sbb
push
add
mov
mov
mov
xor
repz
cld
test
xlat
lds
mov
inc
js
cmpsl
add
push
and
xchg
lcall
jns
push
orl
sbb
jb
push
pop
mov
jne
ret
xchg
xchg
fisttps
rclb
std
add
push
cmpsb
ja
adc
aaa
mov
je
mov
movsbl
inc
adc
mov
ficomps
dec
cmpb
xor
dec
jp
or
pop
iret
pushf
cmpsb
jp
push
add
mov
adc
add
jmp
movb
pop
dec
sub
mov
movsb
testl
clc
mov
sub
lea
push
lea
push
inc
push
lret
aam
sub
pop
add
xchg
or
test
mov
jecxz
pushf
in
xor
push
arpl
pop
ret
jmp
mov
out
or
fadds
out
mov
and
cmp
adc
inc
mov
ljmp
movsb
sub
jmp
movl
xchg
push
push
mov
loopne
pop
dec
dec
mov
ss
jb
cmp
inc
stos
decl
pop
cmp
jne
push
or
mov
xchg
push
push
scas
xchg
adc
insb
xchg
lods
adc
or
adc
jle
mov
adc
cmp
add
inc
dec
lock
aaa
xor
ss
je
nop
lock
xor
inc
cmp
push
xchg
push
push
push
and
pusha
mov
xchg
mov
orl
fisubl
and
xor
inc
jge
adc
dec
call
push
pop
dec
mov
add
mov
and
or
test
sub
pusha
pushf
fs
push
and
je
cs
dec
in
subl
shrl
adc
imul
movb
mov
pop
fs
mov
je
inc
flds
jecxz,pn
cmp
jbe
cmp
jbe
mov
sbb
mov
add
ja
adc
push
mov
mov
fld
inc
push
inc
sub
push
sbb
adc
cmp
add
adc
and
or
cmp
mov
pop
inc
outsb
sahf
cs
adc
and
es
mov
pop
stc
notl
lahf
mov
lea
add
cmc
inc
lea
gs
andb
sbb
test
cwtl
ret
call
cmpsb
insl
loopne
enter
or
jle
mov
test
loopne
cmp
es
inc
jmp
add
or
xchg
lret
shll
sub
mov
sbb
pop
push
xlat
mov
dec
inc
loope
mov
fwait
stos
insl
loopne
xor
stc
fdivrs
xor
mov
cmp
lea
rol
jne
mov
adc
xchg
je
loop
pop
test
arpl
push
sbb
and
and
jge
cwtl
filds
test
cmp
jb
ret
cwtl
sbb
and
push
cmp
jbe
sar
sbb
sub
or
clc
rorl
test
and
shl
lahf
sub
notb
pop
add
cmpsl
sub
divl
pushl
call
lea
cmc
jg
mov
add
daa
fstps
shll
dec
sbb
sbb
adcb
mov
adc
test
mov
xchg
dec
jmp
leave
sbb
and
sub
notb
xor
or
fcmovnu
adcl
push
mov
mov
mov
mov
sbb
add
or
push
mov
xor
mov
mov
or
mov
mov
or
inc
loop
or
pop
mov
cmc
pop
cld
push
adc
inc
lea
loop
jle
lea
cld
ficoml
mov
out
inc
int3
lea
rclb
dec
inc
shll
or
shrb
xor
daa
in
or
incb
push
mov
pop
fdivrl
mov
dec
pop
popa
cmpsb
push
mov
dec
cld
add
jle
jl
inc
stos
lea
cld
jmp
aam
fisttpl
push
je
psubsb
inc
out
jae
in
xor
push
sbbl
orl
or
fiaddl
dec
xlat
sbb
push
add
sub
pop
jae
int
xlat
inc
sbb
arpl
sahf
and
jo
push
cmp
lahf
sbb
adc
in
pop
mov
shll
xchg
jbe
fld1
mov
mov
and
dec
or
js
jb
adc
int
mov
mov
movsb
pop
loop
movsb
xor
mov
push
dec
sub
lock
add
cmpsb
jb
clc
add
iret
lods
and
shlb
add
ficompl
pop
hlt
insl
lods
xor
or
cmp
movl
mov
loope
dec
mov
movb
cs
faddl
sbb
inc
ficoml
sbb
adc
sbb
sbb
sub
adc
mov
fwait
inc
stc
jmp
or
in
fildl
sub
sbb
xor
sahf
movsb
inc
mov
and
push
inc
xchg
or
fs
cltd
lahf
xlat
push
inc
adc
push
cmpsl
lret
push
dec
or
jmp
mov
dec
jg
daa
mov
xchg
fsubrp
idivl
cmp
cmp
into
or
pop
add
add
add
testb
adc
mov
stos
std
jmp
sbb
jno
jo
push
je
or
cli
adc
sub
add
ret
add
popa
fldenv
rcr
pop
mov
repnz
std
ret
lock
test
cs
adc
or
out
sub
into
or
sti
or
jmp
pop
lock
mov
and
rolb
in
clc
add
adc
pop
out
cmpsb
cmp
jge
enter
pop
push
xchg
mov
test
xor
push
int3
les
mov
fcmovb
test
jge
mov
pop
xchg
das
jmp
test
testb
add
xor
jl
cmpsl
inc
adc
sbb
add
or
sahf
push
pop
push
push
or
and
dec
push
imulb
add
out
in
jge
push
push
aas
les
mov
sub
add
ret
add
jno
sbb
mov
cmp
push
mov
push
xchg
fs
movl
ljmp
add
pop
sub
aam
and
push
push
xor
sbb
mov
flds
mov
mov
pop
pop
mov
sbb
fcoms
popf
push
push
pop
pop
dec
jecxz
sub
rolb
xorb
insl
push
incl
into
cmp
je
movups
jbe
adc
bound
insb
lds
cmp
xchg
jnp
and
pop
rolb
fmul
pop
mov
mov
cmp
jae
orl
dec
or
mov
ja
jle
push
inc
sub
jp
sarl
cmpsb
cmp
jecxz
cmp
jb
test
test
xor
push
fildl
pop
rclb
mov
pop
mov
mov
mov
mov
cmp
repz
movsb
push
addb
or
mov
cmp
mov
sub
lock
fidivl
adc
mov
sbb
pop
inc
sub
mov
xchg
fdivrp
in
adc
ret
mov
dec
pop
add
ss
xchg
xchg
push
inc
sbb
lock
push
enter
sbb
stos
ret
cmp
sbb
int3
aad
xor
mov
jno
xchg
imul
add
push
test
loop
sti
or
mov
jns
out
sar
out
and
inc
mov
jmp
aaa
icebp
imul
jns
cs
scas
sub
ret
lock
add
lret
push
pop
xchg
stos
cli
push
int3
mov
rcrb
jecxz
mov
fcoms
mov
test
sub
adc
xor
aam
mov
ja
cld
push
je
and
or
cwtl
fsubrs
sub
pop
cmp
out
negb
sbb
ret
push
xchg
test
movsl
sti
pop
and
enter
and
cmp
xchg
xor
fistpll
and
lea
jae
xchg
mov
push
fisttps
or
mov
lea
xchg
push
push
inc
cmp
and
fdivs
dec
mov
andb
data16
or
adc
pushl
mov
rcr
xlat
jmp
xchg
lea
or
pop
cmp
sub
into
rorb
mov
sarl
int
cld
jle
mov
testb
jp
sti
js
mov
jnp
lods
cs
and
xorl
imul
jp
push
in
sbb
cmp
jne
mov
mov
pop
rolb
xlat
xchg
int3
test
mov
lret
stc
enter
jne
lret
dec
ss
imul
jo
inc
std
push
add
inc
xor
dec
loop
cmp
and
sbb
ss
push
pop
inc
pop
add
cmp
je
mov
sbb
mov
cmpsb
cs
inc
dec
cmp
jnp
pusha
invd
xchg
adc
jo
or
js
fs
jmp
jl
jmp
ret
test
cmp
inc
nop
lock
mov
cmp
add
cli
fiaddl
scas
add
jb
testb
orb
or
adc
mov
or
cmp
ja
mov
cmp
xor
push
xchg
ficompl
push
lods
icebp
sub
jne
push
shll
lods
mov
mov
or
mov
je
dec
inc
scas
pop
or
iret
hlt
pop
ret
mov
lea
orl
jns
xor
call
mov
iret
add
fwait
std
aaa
mov
jae
dec
adc
jmp
cmpl
inc
cmp
mov
repz
in
jb
cmp
imul
xor
clc
sub
scas
cld
mov
push
jmp
sub
sub
sub
movsb
sbb
lds
mov
adc
popa
jge
inc
fs
xchg
scas
pop
int3
xchg
aam
pop
hlt
push
push
mov
jb
xchg
call
add
adc
push
lea
and
mov
and
and
lods
add
lods
push
addb
clc
or
push
add
inc
add
sub
or
inc
mov
push
cmp
pop
add
leave
enter
in
or
adc
add
in
pushf
sub
movsl
sub
mov
les
pop
add
mov
mov
ljmp
xor
popf
mov
jo
cmp
shlb
and
jo
adc
and
testb
test
sub
jne
cmp
sbb
fsub
test
push
ret
xor
aad
add
sub
cmc
enter
add
push
add
mov
and
push
sbb
sub
loopne
jae
sbb
push
xchg
jmp
jbe
movups
or
call
or
adcl
ret
cmp
fwait
mov
faddl
into
sub
fwait
fwait
test
push
rorl
test
cmp
mov
in
clc
push
mov
imul
lods
cld
jo
mov
add
xchg
outsb
rorl
mov
xchg
add
jb
imul
mov
pop
outsb
cmp
cmpb
sbb
leave
mov
pop
add
inc
movsb
call
imul
aad
sahf
icebp
jb
adc
fwait
mov
shlb
adc
push
andl
adc
or
aam
sub
js
jns
pop
rorb
lret
and
and
cmp
es
in
jnp
mov
or
idivb
lea
mov
test
cmp
xor
icebp
ja
aas
adc
cmp
jbe
sub
add
dec
inc
jns
fwait
cmp
clc
jne
mov
push
test
cmp
or
sub
lea
out
add
lock
stos
es
push
dec
ljmp
pop
adc
or
clc
hlt
hlt
cmp
add
and
inc
pop
pushf
or
add
dec
pusha
xor
pop
subl
mov
cmpsb
inc
sbb
flds
jne
push
js
fistl
loopne
adc
loopne
fnstenv
mov
subl
push
in
int
sub
add
or
add
in
mov
xlat
cld
clc
pushl
jnp
call
lea
mov
cltd
loope
xchg
or
adc
imul
xchg
or
add
rol
xchg
loopne
neg
pop
add
cmp
push
mov
jecxz
adc
and
je
jo
pop
mov
xchg
or
inc
enter
push
pushf
mov
mov
mov
inc
mov
add
adc
inc
adc
xchg
adc
sbb
stos
test
inc
add
push
ret
xor
push
jo
iret
in
pushf
mov
pop
or
mov
adc
jbe
xor
rclb
adc
add
mov
inc
std
fcoms
cmp
cmp
aam
sbb
cmp
adc
jbe
push
or
dec
hlt
nop
adc
dec
stos
shrb
jne
mov
dec
sbb
int3
clc
add
lret
fnstsw
mov
jbe
imul
inc
jne
sub
mov
das
push
jmp
jmp
pop
push
xchg
lods
jne
push
push
cmp
rolb
jae
add
mov
lea
cmp
data16
push
loopne
in
add
push
cmpsl
lahf
push
mov
inc
sub
outsb
cmp
mov
loope
cmp
mov
fs
jmp
movzbl
rclb
push
mov
add
test
fsubrl
push
movb
imul
jl
sbb
inc
push
scas
test
mov
cmp
push
test
pop
push
pop
push
pop
hlt
and
insb
movsb
adc
add
mul
seto
fsubrl
enter
addr16
sub
jmp
adc
or
jae
rol
ljmp
out
shl
cld
push
push
jmp
push
stos
shl
xor
or
push
rorb
dec
js
jns
lea
mov
mov
hlt
mov
in
jmp
test
xchg
add
lret
jge
mov
cwtl
test
adcl
negb
es
das
les
add
outsl
dec
test
inc
pop
js
jne
aas
mov
shr
or
add
insl
or
jbe
cltd
add
filds
aaa
cmpsl
xchg
push
stos
mov
jne
push
push
xchg
ss
xchg
push
push
std
pusha
stos
pop
or
pop
sbb
sbbl
lds
sub
inc
test
inc
ficoml
xor
add
loop
mov
test
adc
push
adcb
push
cmp
icebp
fstl
push
and
test
sarl
cmpb
movsl
aad
je
test
adc
shl
int
cmpl
enter
jmp
mov
add
insl
mov
das
out
mov
xlat
jo
jmp
enter
popa
scas
loope
inc
mov
out
and
sub
je
inc
shrl
mov
sub
push
addb
cs
adc
hlt
push
cmpb
into
jmp
imul
xchg
push
push
aam
cld
xchg
xchg
insl
and
adc
or
mov
fnstsw
mov
jb
addr16
inc
dec
pop
jnp
sbb
pusha
push
cmp
sbb
push
cmc
clc
lret
std
dec
lea
call
mov
mov
ret
mul
add
pop
add
or
popa
xchg
aam
push
sarb
mov
adc
dec
inc
cwtl
sbb
test
jno
jo
inc
stos
mov
jp
je
add
pop
pusha
je
inc
movsl
les
lds
push
adc
lds
push
das
leave
or
add
out
xchg
jp
lea
sahf
mov
jo
daa
sbb
mov
notb
add
add
adc
xchg
mov
and
add
lods
and
out
add
test
addr16
movsl
rorb
inc
sbb
int3
sub
les
shlb
mov
xchg
push
addr16
loopne
dec
arpl
xor
nop
add
cmpsb
loopne
test
xchg
popf
sbb
xchg
fsubr
mov
inc
xlat
adc
push
addl
movsb
jecxz
pop
ljmp
inc
mov
or
hlt
je
xchg
call
sahf
mov
call
insb
lcall
in
jl
shll
fidivrl
out
jbe
mov
adc
test
je
mov
inc
aad
dec
loope
mov
xchg
mov
adc
shlb
popl
or
outsl
pop
clc
add
clc
jno
or
add
add
icebp
or
adc
cmp
repz
sbb
add
sbbl
sti
xor
xchg
sbb
aas
and
and
adc
and
fisttpl
jbe
mov
rol
test
outsb
and
and
in
adc
aam
test
xchg
push
movsb
std
jne
dec
fcompl
mov
sub
cmp
xchg
in
jg
loope
xchg
and
cltd
test
outsl
loopne
jo
pop
or
adc
jb
xor
pop
push
and
dec
aas
sbb
rorl
jmp
mov
mov
rcrb
sub
in
test
adc
std
pop
pushl
jmp
mov
aam
xor
insl
popf
xor
push
mov
mov
push
add
adc
add
lds
out
adc
mov
notb
lcall
xchg
mov
arpl
mov
inc
fcompl
int
dec
add
jmp
lea
fadds
dec
xlat
clc
inc
jmp
icebp
in
bound
add
movsl
lahf
fld
or
xor
sub
mov
add
or
cmp
insl
push
je
dec
adc
push
lods
outsb
pop
lea
lods
mov
enter
das
push
out
mov
jbe
mov
adc
rclb
push
js
flds
inc
cmpsb
and
imul
popf
xchg
sbb
xchg
pop
nop
jecxz
rclb
cmp
mov
push
cmp
inc
dec
int3
cmp
jae
sub
sub
xchg
loopne
adc
insb
push
cld
mov
cs
adc
ljmp
push
mov
fsts
cmc
xchg
shlb
fucomi
clc
push
inc
mov
adc
aad
cmp
fstpt
add
cmpsb
js
dec
dec
mov
mov
mov
xor
aam
pop
mov
or
sti
mov
push
pop
or
orb
jb
stos
xor
adc
push
add
xchg
jle
sub
orl
jmp
rclb
int3
add
pushf
mov
add
push
test
ja
or
adc
cld
pop
insl
enter
pop
adc
addl
rcll
cmp
jne
or
add
add
scas
push
and
dec
sub
add
test
sbb
lds
inc
mov
sub
xchg
cmp
bound
pop
mov
push
test
ror
or
and
adc
orl
imul
rorl
inc
inc
or
or
mov
mov
rolb
pop
cmp
mov
cwtl
adc
and
leave
or
mov
fnstcw
dec
xchg
lock
xor
sub
stos
les
add
mov
push
pop
pusha
inc
and
pushl
jmp
out
data16
dec
lret
cltd
jle
jno
add
pop
repnz
cmp
mov
mov
aam
cmp
dec
dec
pop
mov
push
push
out
or
out
push
push
mov
aas
bnd
mov
jl
cmp
jne
fidivs
add
jb
push
jae
lea
push
sub
add
and
add
pop
mov
xor
and
mov
pop
ret
mov
daa
add
adc
nop
pushf
adc
inc
inc
xchg
cli
xor
sbb
sbbb
push
rcrb
cmp
scas
ljmp
jmp
push
or
mov
mov
and
ret
mov
pop
out
test
add
pop
jae
inc
add
ret
mov
lret
add
and
mov
mov
stc
jne
xchg
into
movsb
clc
and
cmp
mov
cmp
push
dec
stos
loope
pop
adc
mov
test
cwtl
or
iret
jp
ljmp
loopne
and
lods
fisttpl
add
inc
sbb
push
cmp
lret
push
adc
rcrl
pop
push
jmp
sbb
enter
lock
push
pop
mov
mov
pop
in
or
or
xchg
adc
adc
pop
aam
fwait
lcall
xchg
sbb
or
or
or
push
or
cld
dec
sbb
xchg
add
sbb
mov
mov
mov
or
add
cmpb
push
push
or
or
xor
sbb
cmp
fisubl
jecxz
lret
inc
rolb
adcl
cli
sub
and
data16
cmp
jmp
pop
and
push
pop
push
inc
or
add
mov
jbe
sbb
aam
imul
or
adc
jmp
mov
leave
mov
shlb
lea
cli
ja
cmpb
adc
ret
push
xor
cmp
jl
inc
pop
aas
pusha
sub
aaa
into
test
daa
jno
or
mov
xorl
jecxz
sbb
je
xchg
push
addr16
rcrb
lea
ret
inc
pop
push
adc
out
dec
pop
in
jno
and
or
push
jne
jle
mov
fwait
add
sbb
add
jns
sub
sbb
pop
adc
adc
pop
dec
xchg
and
imul
sbb
xor
pop
or
push
add
and
push
inc
inc
jbe
mov
add
aaa
fldl
nop
cli
cld
push
mov
push
mov
jbe
or
les
or
pop
aad
xor
gs
shlb
push
lods
xor
dec
loopne
dec
mov
lahf
sbb
testb
mov
inc
aam
xchg
daa
mov
lock
or
js
inc
pushf
stos
lock
test
dec
inc
and
inc
call
or
minps
pushl
cmc
add
test
xor
fmull
aad
cmpsl
add
rcll
mov
jge,pn
xor
sbb
mov
push
cmpb
jne
inc
mov
cmp
xor
push
mov
cmp
inc
jbe
clc
jne
push
xor
out
mov
aaa
sbb
inc
lret
sbb
xor
push
xchg
dec
out
push
js
jle
arpl
sub
cmpsl
xorb
cmp
and
lock
in
adc
inc
or
sbb
pop
loopne
jle
pop
sbb
gs
fchs
inc
loop
xor
shll
fs
in
in
jmp
mov
xchg
repnz
orl
mov
mov
pop
leave
int3
rcrl
pop
mov
cmp
movsb
add
mov
std
and
jmp
in
movsbl
out
push
es
sub
call
scas
cmp
and
inc
adc
jns
sub
xor
inc
sahf
xchg
ja
add
enter
int3
add
or
test
ja
xchg
movsl
sbb
sub
lahf
je
push
adc
push
and
rcrb
jns
pop
adc
insb
pop
sarb
pop
and
out
aas
loop
jno
xor
xchg
cmpsl
fadd
enter
orl
sbb
mov
or
push
mov
push
clc
push
ja
push
lea
rorb
jmp
iret
loop
jle
cli
test
pushf
xor
sub
push
xchg
sub
outsl
stc
xor
jmp
imul
shrl
je
jle
fdivrs
add
pop
xchg
mov
push
fldl
xor
xchg
clc
or
push
bound
xchg
xchg
cltd
daa
push
add
int
outsb
mov
jmp
xor
fsubl
jns
dec
or
push
pushl
mov
or
add
jmp
or
fimuls
dec
sahf
popf
lcall
faddp
cmp
push
lcall
inc
sti
pop
pop
ret
push
mov
and
arpl
stc
nop
mov
loopne
pop
clc
hlt
imul
aas
clc
push
adc
add
aaa
push
adc
pop
pop
add
mov
lea
les
or
add
pop
add
pusha
pop
jo
dec
fcomps
or
test
mov
add
mov
addr16
sub
insb
aaa
lret
mov
and
lock
loop
add
sub
aam
mov
adc
pop
add
pushf
mov
add
mov
push
inc
push
add
ds
out
cmp
int3
hlt
inc
lods
sub
xor
jge
dec
js
roll
ret
pop
or
rcll
and
ljmp
call
into
or
cmp
and
inc
shlb
flds
mov
xor
cld
call
cmpl
movsb
add
add
and
jl
lock
lods
add
outsb
adc
ss
rorb
movl
adc
and
add
insb
xchg
mov
iret
cs
xor
fucomp
push
sub
data16
lock
std
mov
mov
add
mov
daa
adc
and
pop
add
pop
adc
adc
orb
xchg
xchg
lock
iret
mov
lds
out
or
ljmp
dec
bnd
test
fisttpll
push
mov
add
adc
xchg
out
stc
jmp
pop
push
mov
xor
data16
inc
jg
cmpsl
in
adc
add
and
or
jae
xor
lods
fdivrs
push
std
int
mov
mov
adc
add
leave
rcl
inc
shll
cmp
test
adc
push
fsubl
test
mov
push
mov
lods
inc
pop
daa
fwait
sub
insb
fmuls
fsubrl
or
pop
mov
jns
shrb
add
push
push
mov
lcall
test
aaa
inc
sub
in
pop
in
das
js
xchg
sbb
popa
add
enter
and
pop
enter
xchg
in
xor
mov
testl
ret
imul
or
test
lea
mov
sub
mov
lar
sbb
mov
mov
cmpsb
add
into
xor
fiadds
jae
sbb
lea
adc
xor
push
dec
jns
add
add
imul
push
fnstcw
pop
ret
push
inc
push
push
jbe
cwtl
fwait
test
inc
pop
cwtl
dec
ret
pusha
loope
sub
lea
jno
add
inc
outsb
and
call
inc
mov
push
ret
xor
xchg
inc
mov
or
mov
lds
sarb
stc
inc
les
loope
xchg
dec
je
loope,pn
je
subl
or
es
loop
mov
sbb
pop
call
fisttps
or
sarl
bound
jl
aaa
fadds
shlb
and
inc
inc
add
add
cmp
adc
ret
pop
inc
mov
loopne
ljmp
or
pop
outsl
cmp
push
xchg
mov
xor
push
arpl
inc
testb
xchg
add
andl
imul
test
pop
rorb
inc
sbb
lds
push
xchg
pop
xor
or
sub
pop
hlt
dec
jp
and
es
cmp
call
imul
inc
iret
into
rolb
xchg
ljmp
imul
xor
cmp
or
mov
push
add
ret
pop
inc
jne
popa
into
dec
pushf
fnstcw
je
or
add
pop
push
push
mov
cmc
cmp
je
push
cwtl
ficoms
addr16
lds
adc
adc
add
push
inc
imul
inc
sbb
or
mov
daa
ret
out
inc
into
leave
add
loop
push
pop
popa
and
dec
pop
out
mov
mov
jno
les
dec
mov
lock
mov
les
in
add
sarb
mov
inc
mov
loopne
je
nop
dec
sti
out
sti
mov
call
push
and
cltd
loopne
and
jne
sub
lcall
loopne
sbb
ds
cmp
mov
mov
das
aad
insl
fstpt
adc
rorl
gs
inc
cs
or
aam
add
mov
jl
loope
jge
repz
mov
stc
shll
mov
adc
sbb
cmp
cmp
cmp
jb
mov
mov
inc
add
add
dec
jne
into
sub
ss
add
sbb
in
sbb
stos
add
ja
rclb
shrb
or
cmp
insb
inc
add
rolb
lods
hlt
pusha
add
loope
pop
lds
or
push
fstpt
xor
cs
mov
push
outsb
add
sbb
dec
add
scas
push
mov
pusha
add
jmp
xchg
adc
pop
mov
pop
dec
fcomip
nop
jne
mov
and
movsb
data16
cmp
push
inc
shlb
test
fidivl
icebp
adc
fisttpll
jecxz
mov
notl
mov
pushf
clc
mov
add
imul
stos
jg
cmp
shlb
test
pop
jne
jge
cmpb
adc
test
push
push
mov
push
ss
and
cmpsl
call
dec
fsubl
lea
iret
sbb
mov
jbe
or
push
out
es
sub
push
loop
or
aaa
das
and
or
dec
add
mov
mov
movsl
loopne
push
addr16
je
or
test
leave
xchg
push
push
adc
imul
jp
or
push
mov
jbe
mov
mov
push
jb
xlat
add
bswap
arpl
pop
pop
push
and
ret
mov
call
push
jb
add
dec
cmp
mov
sarb
and
fistl
adc
xor
sub
mov
add
inc
jbe
lods
push
into
jno
das
mov
insl
mov
and
ljmp
xor
fstpt
cld
add
mov
inc
js
loope
jnp
xchg
mov
xchg
xchg
xchg
push
inc
adc
mov
fcoms
xlat
daa
sbb
jb
sub
cs
movsb
sub
test
jl
cs
setge
mov
push
int
fadd
mov
xlat
jecxz
aas
stc
cmpb
loop
fcompl
cmp
arpl
and
in
pop
jb
jno
fwait
jg
scas
popa
mov
mov
mov
xlat
xor
or
pop
jb
sbb
cmpsl
popl
mov
jno
nop
or
mov
sub
sub
mov
test
fisubrl
dec
jl
lcall
je
and
insb
arpl
popf
fisubrs
cltd
out
out
fstps
in
sub
dec
sbb
adc
xchg
or
pop
and
and
lret
dec
sbb
ret
dec
arpl
outsl
mov
xlat
sbb
cmp
add
in
jb
add
add
dec
push
sub
xor
push
dec
sub
xor
cmp
push
cmp
or
in
jb
or
xchg
lret
push
js
insb
push
pop
test
rcrb
adc
mov
call
in
outsl
pop
int3
rcr
in
pop
add
mov
dec
mov
or
push
shr
mov
aam
scas
hlt
push
movl
add
pop
mov
xchg
outsb
sbb
dec
push
add
cmp
test
xchg
sbbb
xchg
and
sbb
stc
movsl
mov
mov
leave
orb
enter
and
pop
push
xchg
enter
or
adc
insl
jg
cltd
xorb
mov
jg
push
cmp
cmp
nop
inc
cmp
xor
in
inc
xor
in
inc
push
and
adc
inc
push
cmp
or
pop
push
xchg
adc
push
pop
jno
xchg
lea
leave
sbb
cld
incb
mov
xchg
and
orl
push
pop
out
push
push
jo
nop
add
es
int
mov
mov
movsl
movsb
or
push
mov
js
loopne
out
xchg
add
jne
shll
push
loope
mov
cld
ror
inc
pop
sub
xchg
andl
cmovo
fsub
mov
push
dec
and
jg
lds
jg
push
orb
mov
mov
cmp
adc
mov
mov
add
inc
cs
pop
sbb
cld
dec
fisubrl
sbb
cmp
ja
and
mov
mov
insb
or
and
loope
out
popa
jo
push
push
push
test
jl
inc
mov
test
xor
sbb
lcall
add
dec
and
inc
or
jmp
lea
fisttpl
lods
sub
pop
jo
jno
loope
xchg
mov
add
cmp
add
popf
mov
shll
add
add
xchg
hlt
mov
jl
or
pop
xchg
or
jb
in
push
or
ljmp
mov
inc
xor
outsl
loope
testl
add
mov
mov
jecxz
sub
mov
roll
cmp
push
js
test
test
inc
sub
adc
bound
cmp
pop
cmp
mov
sbb
mov
mov
xchg
add
and
shlb
sbb
mov
add
out
xchg
push
fcmovb
ss
xor
loop
add
das
xchg
jge
add
pop
sub
pop
mov
mov
fwait
mov
mov
dec
sub
ljmp
sub
pop
or
lods
sbb
js
std
push
cmp
cld
push
test
xchg
adcl
xchg
add
repnz
sldt
sbb
add
test
jbe
out
daa
movsb
jns
cli
shrl
and
add
imul
test
je
sub
into
push
or
and
loop
les
lock
sti
inc
jae
ljmp
iret
xor
fwait
sbb
push
mov
leave
adc
ljmp
inc
adc
std
div
cmp
clc
lods
mov
test
jmp
jp
outsb
or
push
pop
ljmp
js
ret
inc
orl
pop
push
mov
or
rep
subb
xorl
shl
add
push
idiv
sar
mov
pop
jne
cmp
jae
push
imul
cmpl
jmp
mov
sub
and
stos
adc
lcall
push
sbb
pop
add
mov
out
ljmp
dec
mov
sbb
ds
js
lea
daa
mov
sub
sub
sbb
or
mov
adc
sbb
fimull
or
subb
out
inc
pop
pop
mov
inc
and
mov
popa
lea
adc
and
sbb
and
xor
or
cmc
and
rorb
push
adc
inc
dec
fwait
push
cmp
lea
inc
or
cmp
pop
and
xor
push
pop
and
mov
andl
fisttpl
into
push
mov
inc
inc
repnz
pop
mov
jmp
aas
add
out
pop
shrb
sbb
cli
int3
ret
mov
pusha
push
cmpsl
push
or
inc
sub
or
lea
sarl
mov
repz
add
xchg
lock
gs
sbb
mov
lds
movsb
adc
psubsw
or
xor
sbb
xlat
mov
mov
or
cmp
pop
cmp
add
add
adc
xchg
add
divb
sub
dec
pop
ret
push
xchg
imul
aam
jp
push
push
mov
adcb
lea
mov
ror
or
ret
and
sbb
hlt
inc
or
icebp
lods
sub
xor
mov
stc
adc
faddl
xor
and
mov
sub
push
adc
insb
out
or
push
jo
popa
mov
cmc
pop
pop
add
sbb
dec
add
inc
push
in
ret
cmp
jne
xor
xor
inc
inc
sbb
cmp
xchg
xchg
cmp
ja
sbb
or
pusha
adcl
add
cmp
or
pop
inc
mov
adc
das
mov
add
lret
adc
sar
xor
dec
mov
push
loopne
mov
ja
pop
inc
dec
push
mov
mov
mov
es
mov
sarl
pusha
push
pop
div
and
mov
xchg
cmovae
inc
lret
pop
mov
xchg
add
add
add
sbb
add
sub
xchg
imul
cld
cwtl
mov
mov
inc
push
mov
mov
jecxz
orl
mov
inc
cmp
js
or
pop
mov
jp
mov
nop
nop
and
xchg
inc
subb
and
shll
or
inc
sbb
test
jg
lret
mov
je
add
orl
jle
shl
inc
cmp
ss
jo
cmp
addl
sub
pop
leave
cmp
movsb
mov
sbb
and
inc
sub
vmovlps
nop
lock
neg
sub
adc
loope
mov
dec
lds
icebp
das
jecxz
add
leave
add
mov
out
ljmp
push
inc
or
lock
mov
sbb
mov
dec
xor
orl
negl
test
adc
inc
jno
scas
dec
pop
fldcw
or
inc
xor
inc
inc
daa
inc
adc
pop
repnz
hlt
imul
push
or
push
push
mov
xlat
lods
repnz
arpl
and
popa
imul
lock
xchg
ja
orl
dec
ret
mov
out
jmp
das
or
test
into
mov
ret
xor
rcl
inc
popa
pop
sti
stos
clc
mov
pop
cmpsb
loopne
call
sbb
shrl
mov
call
or
xchg
addb
rol
push
add
sbb
popa
and
jbe
xorb
addr16
sub
js
mov
jne
xorl
sbb
insl
and
push
addl
and
int3
test
mov
stos
push
xor
adc
mov
pop
enter
jns
add
sarl
xor
sub
in
call
dec
movzbl
jmp
inc
or
daa
mov
cmpl
sbb
adc
push
jb
test
in
or
sub
fidivrl
add
mov
inc
sahf
xchg
hlt
adc
or
hlt
mov
pop
or
jnp
sub
xchg
mov
mov
mov
cmp
pop
mov
idivb
xor
jp
test
je
test
xchg
jg
or
add
or
mov
es
mov
pop
inc
xchg
fistpl
aam
xchg
out
pusha
aaa
outsb
pusha
in
mov
fcmovnbe
fcmovnb
lea
out
and
clc
aad
add
aaa
in
xchg
repnz
xchg
mov
into
fmull
test
rcll
loope,pn
iret
jmp
mov
popf
sub
pop
or
push
movsb
loopne
cmp
popa
and
lods
xchg
adc
scas
xchg
nop
nop
jo
popa
inc
cmp
sub
outsb
je
lds
push
cli
add
dec
insl
mov
cltd
clc
jns
jecxz
push
lcall
cld
jns
sbb
pop
fs
shrb
test
pop
mov
sub
into
in
jb
cmp
push
pop
or
xchg
push
movl
adc
mov
add
orl
add
outsb
in
or
pop
add
mov
add
nop
shlb
pop
shll
inc
ret
or
shr
mov
inc
adc
add
jg
jmp
mov
ret
cld
aas
adcb
push
xor
dec
push
je
dec
jne
or
arpl
jae
in
adc
dec
xchg
add
adc
inc
cs
or
lahf
cwtl
sti
pop
dec
sahf
inc
aaa
add
dec
sub
call
std
sbb
add
push
jmp
cmp
pop
mov
sub
cwtl
xor
jne
sbb
pusha
cmp
or
dec
ret
push
movsl
mov
sbb
jns
jp
loope
push
xor
push
push
lcall
ja
repz
add
adc
daa
fadds
or
mov
push
inc
xor
push
mov
adc
add
push
imul
inc
das
or
mov
ja
push
imul
sub
xor
or
out
ss
cmp
jb
inc
mov
dec
cmp
addl
mov
add
mov
lcall
mov
push
push
dec
cmp
and
dec
popa
mov
push
mov
ds
inc
mov
mov
sub
inc
loop
xor
xor
xchg
sbb
pop
push
xorb
jle
pop
into
addl
cmp
or
fldcw
repz
inc
sub
sti
je
mov
outsb
xor
inc
add
pusha
cmc
cmp
inc
pop
and
or
mov
jno
test
push
fwait
jns
mov
jno
or
add
and
decl
and
in
dec
shll
xor
cmp
push
pushf
push
pop
rcll
pop
add
test
gs
sbb
ficoml
je
adc
xchg
or
jecxz
inc
pop
test
xchg
fs
mov
fwait
and
and
xchg
xchg
sbb
push
sub
inc
movb
lcall
nop
or
mov
pop
adc
or
lods
jl
lea
mov
push
decb
fisttps
add
xor
or
sub
add
pusha
and
jl
add
jecxz
pushf
and
call
add
lret
mov
cmp
add
pop
sub
sti
sbb
pop
adc
add
fs
adc
xchg
cltd
xor
inc
xor
orb
test
sbb
cmp
pop
pop
and
adc
sbb
xchg
loope
icebp
cmp
iret
aad
cltd
inc
inc
outsl
push
push
arpl
xor
mov
mov
and
dec
lock
pop
roll
js
inc
xchg
jae
or
js
or
lcall
mov
or
inc
push
cmp
ds
mov
add
mov
cltd
clc
cmpsl
aad
jge
pushf
xor
or
sbb
enter
mov
sub
xchg
addl
imul
or
push
mov
addl
and
testl
mov
xchg
ljmp
or
xor
xor
xor
add
add
test
pop
sub
pop
fisttpl
inc
cmp
ljmp
mov
mov
adc
add
pop
cmp
imulb
stc
clc
cmpb
outsb
add
fsubl
sbb
je
lock
push
mov
rorb
push
cwtl
cmpl
adc
inc
fiaddl
mov
fcompl
jo
pandn
jge
push
add
pushf
jle
jecxz
dec
sbb
add
xor
add
adc
dec
mov
insb
je
jae
lea
fsts
in
push
cwtl
pop
loopne
jbe
pushf
outsb
xor
sbb
aas
pop
push
decl
xchg
cmp
xchg
enter
inc
sti
shrb
clc
mov
shlb
out
inc
add
lret
xchg
repnz
rorb
jp
mov
stos
push
lahf
adc
and
add
popa
add
jne
adc
cmp
or
pop
sbb
cmpl
bound
lods
push
pushl
inc
push
das
mov
test
or
repz
pushf
sbb
sub
ja,pn
mov
sbb
mov
pop
dec
or
adc
mov
and
pop
pop
dec
les
adc
lea
enter
inc
movsb
push
push
xcrypt-cbc
cmpsl
adc
sbb
lods
add
pusha
movsb
cmp
movsb
sbb
add
pusha
sbb
inc
xchg
std
call
leave
xorl
nop
lret
adc
cwtl
pop
push
or
pop
cmp
push
add
adc
aas
testb
je
sbbb
xor
int3
clc
outsl
stos
hlt
inc
mov
add
adc
and
mov
lock
lahf
cmp
sahf
int
push
xchg
mov
adc
or
sbb
push
pop
jne
add
dec
adc
inc
pop
out
pusha
sub
mov
sbb
jl
pop
or
push
test
sbb
adc
or
lcall
push
mov
out
sbb
xchg
or
mov
leave
and
in
sbb
sbb
push
bound
test
sub
mov
lods
or
mov
or
mov
bound
sbb
mov
or
out
lea
or
cmpsb
xchg
addl
dec
jb
lcall
and
lea
mov
pushf
mov
outsl
inc
stc
jnp
insb
jmp
add
rorl
pop
push
or
loopne
cmp
sbb
dec
sub
addb
add
and
sub
pop
lea
test
fldcw
jl
jge
or
or
or
adc
out
mov
mov
mov
adc
mov
mov
sbb
inc
icebp
push
nopl
aad
out
insb
jo
roll
push
inc
enter
or
test
dec
jae
sub
dec
cmp
fstpl
jg
sbb
add
cmpb
or
sbb
sbb
outsb
push
inc
jb
dec
rorl
add
mov
in
or
push
ja
nop
cmp
addr16
xor
mov
ss
sbb
rolb
add
or
or
fstpl
mov
pop
xor
aaa
inc
js
pop
fists
inc
or
pushf
lret
dec
push
xor
mov
movsb
mov
das
sub
sbb
in
movl
ds
mov
pop
mov
mov
js
dec
dec
clc
xchg
sbb
mov
pop
cli
adc
or
sbb
xor
dec
in
mov
adc
adc
mull
sbb
push
add
inc
or
cmp
or
adc
push
loope
xchg
add
push
lret
or
cmp
xchg
pop
decl
pop
sub
nop
aaa
cmp
xchg
sbb
les
or
addr16
mov
xlat
xchg
push
mov
xor
push
test
lock
sbb
lds
or
sbb
pusha
sbb
sbb
and
out
push
test
testl
and
or
lods
xchg
xchg
out
add
sbb
les
push
sbb
xlat
and
jbe
fsubl
xchg
mov
repz
lea
dec
dec
pop
cmp
inc
sarl
mov
adc
add
mov
cmp
lock
mov
and
mov
jo
not
aaa
lea
bound
pop
jg
inc
push
adc
push
insb
or
push
add
or
dec
jl
leave
pop
and
jge
test
js
ss
inc
mov
sub
sbb
add
add
fwait
loope
xor
lea
or
cmpl
fxch
sub
outsb
insl
nop
add
rclb
test
and
xor
add
sbb
dec
push
add
fs
mov
sub
cmp
xchg
cmp
dec
push
inc
mov
push
clc
stos
add
cmp
or
adc
and
ja
sub
and
xor
movsl
mov
pop
js
lret
add
and
stos
push
xchg
test
add
xchg
insb
adc
inc
lea
push
jp
outsb
sub
push
fildll
pop
fiaddl
lcall
test
and
sbb
mov
mov
or
xchg
sub
dec
inc
mov
cmpsl
or
shrb
mov
ret
or
dec
and
sbb
pop
or
push
test
and
inc
rorb
mov
pop
mov
xchg
lret
enter
xchg
cmp
outsl
jmp
fcomps
sub
cltd
insl
loopne
sahf
and
call
xchg
shlb
adc
movsb
fwait
rcl
jae
mov
adc
sahf
cwtl
insl
enter
xchg
inc
mov
mov
jb
mov
sbb
mov
sbb
or
out
pop
xchg
js
pop
shll
sbb
sub
out
sbb
icebp
or
sub
cwtl
xchg
sbb
into
sti
nop
pushl
or
lods
inc
mov
and
cwtl
adc
subb
ss
add
icebp
sti
xchg
subb
jae
pop
sub
into
dec
ret
fs
sub
pop
rol
and
push
je
lods
jl
dec
jnp
sbb
enter
pusha
pop
scas
pop
jb
push
roll
push
add
cs
inc
movsb
mov
stos
outsl
fadds
add
rol
inc
cltd
sbb
leave
ret
xor
xchg
lods
mov
sub
stos
dec
dec
daa
and
mov
and
sbb
mov
xor
pop
adc
test
outsl
pop
jmp
ds
push
dec
inc
jo,pn
fwait
sub
inc
add
xchg
xchg
cmp
inc
cmpl
xor
adc
and
rcl
sub
sbb
ret
push
test
popa
and
push
pop
sbb
adc
cs
mov
es
xor
or
mov
daa
mov
iret
push
idivb
or
sbbl
les
les
aam
mov
lea
xlat
adc
dec
leave
mov
movsb
xchg
sub
and
xchg
lods
mov
adc
pop
cmp
movsb
add
sub
inc
inc
lcall
enter
pop
push
imul
mov
test
enter
sbb
cmp
dec
inc
aas
data16
sub
push
hlt
xor
xchg
and
add
ret
pop
sbb
in
xchg
xor
and
scas
and
sbb
cmp
xor
pop
xor
rcrb
cmp
mov
xchg
sub
xor
xchg
pop
sbb
cmp
and
je
pop
imul
jo
push
push
sub
jbe
sub
sbb
or
push
add
sub
ljmp
sub
jno
out
xor
in
push
mov
inc
push
push
xor
setg
dec
leave
and
leave
and
inc
mov
jne
mov
push
mov
and
sbb
cmp
mov
inc
orb
pop
shrb
adc
jmp
push
or
sti
push
scas
dec
adc
sbb
pop
jb
lahf
push
aaa
lods
jl
mov
mov
repnz
mov
ds
out
or
cmp
das
xchg
push
add
pop
enter
cmp
orl
nop
mov
daa
and
stos
sbb
cmc
mov
pushf
sbb
and
xor
inc
xor
and
mov
add
xchg
sub
clc
push
add
mov
cmp
fisubs
cld
shlb
mov
clc
dec
leave
mov
or
jns
and
inc
fldenv
out
popf
or
pushf
add
cmp
mov
mov
les
mov
sahf
or
pop
test
inc
add
loopne
add
test
stc
push
fists
xor
and
inc
push
xor
push
xor
adc
pushf
pop
add
cmpsl
fldt
jmp
pusha
xor
inc
inc
sbb
or
jb
jne
inc
sub
insb
pop
in
aad
aad
sbb
lock
inc
xor
push
jns
sub
and
push
inc
js
pop
and
push
test
dec
inc
loope
dec
cs
cmp
pop
push
insb
dec
pop
mov
inc
pusha
jne
mov
lea
push
xchg
test
es
dec
pop
nop
add
test
add
jp
aas
inc
push
and
sub
xchg
mov
loopne
cmc
inc
sbb
cltd
inc
gs
and
iret
mov
mov
xlat
pushl
xchg
xor
xor
adc
lods
mov
jp
sbb
cli
fwait
or
roll
mov
std
test
jne
and
out
movsl
loopne
cmp
aaa
add
cmp
xchg
lret
add
pop
push
add
push
pushl
aaa
pushl
call
in
sub
leave
jge
lahf
bound
cwtl
mov
leave
pop
jp
cmc
push
add
in
jmp
pop
aam
sbb
dec
pop
test
in
sub
add
sub
push
xchg
sbb
adc
movsl
sub
dec
xor
inc
xchg
adc
inc
cmpl
out
mov
lcall
jb
dec
loopne
repz
xor
add
or
sbb
cmp
and
sbb
inc
fnsave
add
mov
xor
dec
or
sub
iret
scas
or
pop
add
add
mov
pushl
daa
in
pusha
push
push
pushl
adc
mov
inc
sbb
loopne
lcall
push
jmp
xchg
pop
pop
imul
addb
sub
cmpsb
and
lods
jp
xchg
les
movsl
adc
sbb
cld
adc
addb
jne
add
popf
sbb
insb
sub
push
or
sbb
rorl
iret
xor
sbbb
add
adcb
dec
ds
sbb
loopne
jne
lcall
mov
pop
mov
xchg
incl
sbb
sub
jl
in
add
push
sbbb
xor
push
mov
cs
fstps
mov
cmp
mov
sub
movsl
fdivl
fdivs
mov
adc
insl
in
mov
insb
fadds
push
and
jecxz
cmp
and
sub
imul
insb
pop
jmp
rorb
xor
inc
pop
ficoml
jno
rcll
repnz
lahf
add
inc
dec
cs
aad
mov
push
dec
loop
inc
inc
pop
pop
rolb
jecxz
rolb
and
repz
or
stos
xor
mov
mov
inc
and
and
cmc
sub
xor
inc
add
iret
and
xor
xor
pandn
shlb
mov
aaa
adc
daa
cmpl
sarl
loope
pop
stos
mov
ret
cmp
sub
out
mov
cmp
cmp
pushf
adc
les
rcrb
loopne
and
sbb
fiadds
push
mov
les
mov
pop
jb
and
jb
mov
jne
out
scas
mov
dec
and
jp
dec
fcoml
push
sbb
loopne
mov
mov
pop
fiadds
push
push
in
imul
in
jnp
in
fwait
mov
fcomps
cltd
movsb
imul
xor
je
movsb
pusha
adc
xor
sub
dec
jb
cs
sbb
xorl
mov
imul
cmp
cmp
lea
sbb
jl,pn
inc
shrl
xchg
xchg
push
and
cmp
shrl
mov
inc
and
lock
dec
cs
mov
andb
jmp
push
aas
scas
mov
lea
and
jl
insb
inc
mov
push
pop
inc
ds
sub
in
lods
xor
mov
popfw
mov
mov
stc
and
andl
and
cmp
icebp
jns
xor
and
adc
stos
pop
mov
enter
pushw
mov
sbb
pop
and
dec
dec
pop
mov
xor
pop
in
or
xchg
lock
inc
mov
rcrl
dec
pop
mov
leave
sub
cmp
mov
jecxz
or
movsb
mull
mov
add
cmp
fs
or
mov
imul
cmpsb
jae
dec
test
mov
sub
sub
fs
dec
push
rcll
nop
dec
lds
mov
pop
sub
and
popf
push
xchg
cmc
in
dec
pop
mov
add
mov
pop
or
popf
je
jns
jle
or
mov
ljmp
xchg
push
int
add
in
push
dec
dec
pop
and
outsb
fsubl
adc
pcmpeqd
outsb
rorl
or
adc
xorl
pop
lcall
stos
rorl
xchg
push
cwtl
and
inc
dec
jmp
sub
dec
sbb
xor
dec
cmc
std
icebp
push
dec
adc
xchg
lea
stc
aad
fnstenv
sub
in
mov
fmull
mov
inc
int3
not
xor
lahf
fists
outsb
shl
dec
dec
push
fs
test
sbb
shrl
push
sub
or
dec
xchg
mov
mov
and
aam
push
lret
je
jle
stos
add
add
nop
push
lcall
cmp
mov
or
cld
sbb
adc
mov
out
pop
test
jl
cmp
and
add
jae
pop
add
in
pop
or
cmp
dec
push
lods
cld
or
dec
pop
js
cld
into
sbb
ficoms
mov
dec
push
add
jb
test
cmp
jae
ret
cmpl
outsb
adc
sbb
inc
call
sub
in
xor
and
jno
into
sub
sbb
mov
push
inc
inc
or
or
mov
movsb
cmovae
sbb
jl
xchg
jp
dec
pusha
mov
lods
nop
hlt
mov
push
sub
cmp
dec
dec
inc
nop
push
fdivs
fisttpll
push
push
add
jp
adc
cmc
in
dec
xchg
xchg
xchg
dec
lret
add
sub
or
inc
je
and
lds
mov
sahf
leave
mov
push
gs
movsb
fldlg2
and
xor
pusha
mov
mov
add
test
push
sub
push
je
add
xor
add
dec
aad
adc
mov
add
mov
dec
lret
rcrb
push
aas
push
popf
filds
dec
jne
jns
sbb
stos
lock
inc
lret
add
in
inc
call
mov
pop
orb
and
or
xchg
insb
hlt
lret
ret
sarb
or
shrb
call
jmp
popf
nop
sub
and
adc
add
push
je
movsl
stos
push
add
popa
mov
popa
mov
push
cmp
fwait
rclb
inc
aas
cmp
jmp
mov
rcrb
movb
pop
icebp
nop
xchg
add
add
xor
sbb
inc
arpl
movl
mov
cmpb
sub
add
cwtl
xor
mov
inc
fldl
push
pop
add
jae
sbb
pop
add
cmpsl
pop
sub
insb
jo
in
mov
pop
dec
dec
sbb
fstps
mov
lods
mov
inc
inc
add
and
and
int3
fld
aaa
sub
lock
push
ret
insl
mov
xchg
add
mov
pop
sub
xor
dec
test
fs
lahf
xor
testb
bswap
push
pop
mov
jle
and
xlat
fiadds
inc
cmp
xchg
add
mov
and
jno
jns
and
ss
inc
xor
cmp
push
jno
or
push
pop
sti
pop
test
xlat
mov
dec
insb
sub
push
jge
shlb
jo
lea
je
and
add
mov
or
xor
dec
scas
andb
dec
lea
fwait
cltd
adc
rcrw
cmp
mov
jo
add
lock
jp
movsl
cwtl
pop
fistpl
loope
pop
pop
sbb
xchg
sbb
and
and
mov
adc
fsubr
xchg
inc
push
shlb
adc
cmp
xor
or
dec
dec
and
loope
cmpsl
xchg
andb
add
push
pop
mov
xlat
inc
pop
pop
adc
sbbl
xchg
adc
xor
inc
sbb
in
cmc
mov
je
mov
sub
test
dec
mov
adc
mov
add
divl
pop
add
movsl
mov
les
cmpsl
dec
stc
cld
add
cmpsb
xor
sbb
mov
das
pop
xlat
or
or
daa
push
mov
daa
fisttps
xor
inc
lods
push
adc
mull
dec
test
sub
add
fsubrs
out
or
mov
cmp
rcrb
xlat
adc
dec
in
ja
jl
cmp
sbb
jecxz
mov
mov
and
or
or
je
push
inc
cmpsl
or
sti
iret
ret
cltd
imul
hlt
jne
push
fiadds
or
sub
pop
pop
xchg
xor
xchg
je
daa
cmp
popa
push
push
or
xchg
pop
jnp
mov
add
fwait
and
subb
std
adc
repnz
xchg
test
mov
cmp
add
pop
call
pusha
nop
xchg
int3
adc
jae
lret
adc
pop
mov
sbb
inc
scas
pop
xchg
les
mov
xchg
rorb
loopne
sbb
push
icebp
das
imul
loopne
outsl
sub
ret
add
sbb
add
lods
les
loopne
and
and
sbb
or
jecxz
mov
fcoml
sbb
xor
sbb
popa
jmp
pop
pop
data16
adc
adcb
movsl
insb
subl
and
or
xor
mov
leave
push
add
mov
repnz
rcrb
lret
iret
loopne
dec
mov
xchg
mov
popf
inc
push
stc
lock
pause
clc
and
inc
in
ret
and
sbb
adc
fistl
sub
add
pop
and
nop
lock
and
and
cs
test
call
rclb
pop
xchg
or
je
ss
in
mov
pop
cltd
imul
mov
test
test
ds
dec
sub
sbb
mov
hlt
loopne
inc
xor
hlt
hlt
mov
mov
jb
dec
pop
ds
mov
lea
sub
or
test
lods
loope
xchg
pop
xor
jae
mov
mov
jge
pop
inc
outsl
dec
push
pop
sar
mov
sbb
pop
mov
sbb
test
inc
xchg
jg
push
pop
adc
mov
push
add
dec
aaa
adc
sbb
popf
leave
dec
fbstp
push
push
mov
pop
mov
sub
mov
dec
popf
sahf
mov
dec
jmp
push
sbb
sbb
push
lea
xor
aas
push
imul
cmp
mov
xor
sbb
es
pop
adc
xor
movsl
fldl
push
mov
adc
bound
mov
loop
mov
add
push
push
add
fstpl
add
jo
popl
divb
sbb
rcl
outsl
add
inc
xor
dec
insb
mov
es
push
scas
dec
push
lahf
xor
lcall
lret
inc
negb
insb
and
sub
and
dec
or
dec
mov
shl
sub
jne
or
inc
lods
sbb
cmp
add
pop
imul
mov
dec
mov
xlat
sahf
stc
movsl
sbb
push
jmp
mov
inc
clc
xchg
ljmp
lcall
imull
fildl
and
and
adc
fdivrs
movsl
mov
lea
movsl
add
mov
lcall
aad
test
mov
push
arpl
xchg
cmp
dec
push
push
mov
push
add
and
gs
clc
mov
sub
sub
push
ljmp
sbb
sar
movsb
push
jg
cmp
jo
pop
lea
or
pop
imul
jl
or
pop
lahf
and
pop
cli
pop
dec
push
add
cmp
jne
add
test
dec
mov
jp
xchg
test
add
and
push
push
repz
xchg
or
inc
inc
into
xchg
push
lea
shrl
dec
push
add
or
in
jle
sbb
mov
jle
cli
or
pushl
lea
movsl
mov
test
faddp
mov
movsb
mov
pushf
adc
fimuls
pop
imul
pushl
lods
aam
add
add
push
mov
mov
sbb
lds
add
mov
add
es
mov
sahf
adc
test
mov
jecxz
aad
adc
jno
and
je
or
sub
arpl
mov
lcall
pop
cmp
negb
jge
jb
adc
adc
in
inc
push
lods
jo
or
jnp
lods
in
imul
jecxz
aas
or
dec
push
icebp
inc
test
movsb
jecxz
lock
sub
add
inc
cmp
mov
or
pop
aas
jns
mov
mov
or
sub
pop
cwtl
inc
add
dec
cmp
imul
pop
sbb
leave
jbe
cmp
and
sbb
xlat
or
adc
push
stos
adc
dec
in
sub
fiaddl
push
lea
adc
cmp
es
ds
mov
cltd
js
inc
std
les
fadds
sarb
pause
jbe
out
popa
jp
sbb
mov
xor
pushf
stos
add
dec
rclb
and
rcr
mov
dec
cli
inc
xchg
push
je
js
pop
aad
mov
pop
sbb
add
inc
and
and
rcr
call
dec
pop
dec
xchg
dec
push
jmp
es
mov
fs
jmp
push
add
mov
sti
mov
push
and
frstor
adc
lea
in
and
sbb
test
sbb
adc
cmp
rolb
push
lcall
mov
lret
sbb
adc
rclb
test
dec
mov
dec
dec
scas
add
sub
ret
add
test
in
shll
dec
add
inc
in
mov
sub
lcall
push
or
inc
sbb
aas
push
mov
push
adc
dec
cmp
dec
mov
dec
in
aam
arpl
das
add
xor
xor
imul
push
data16
mov
mov
call
outsl
inc
or
push
movsl
adcb
lods
pop
aam
loopne
cmp
push
pop
xor
mov
xchg
pop
or
test
pusha
push
push
stos
push
pop
xor
sub
stos
sbb
and
scas
pop
add
xchg
xor
iret
aas
loopne
mov
xor
rclb
add
push
loopne
or
dec
mov
roll
mov
push
roll
mov
cmp
subl
es
popa
lds
inc
sub
mov
jne
cmp
pushf
and
adc
dec
and
sbb
xchg
xor
ds
ret
les
jae
fisttpll
test
push
xchg
pop
fdivs
fstps
xor
fldt
loopne
jle
sub
inc
push
or
addr16
cld
push
push
loope
inc
pushf
out
cmp
inc
sbbb
xor
adc
xchg
sub
jle
pop
pop
mov
jns
and
dec
xor
jno
sub
mov
jbe
popa
push
or
test
lods
ret
and
fiaddl
loopne
in
or
add
loop
ret
or
int
mov
add
mov
lods
jge
add
xchg
xor
add
fldcw
lea
sub
pop
jne
mov
js
mov
push
repnz
sbb
and
adc
lock
imul
push
jo
or
mov
pop
cmp
add
sbb
or
shrb
insb
mov
push
es
nop
orl
test
jo
jbe
add
mov
in
das
xor
dec
iret
pop
sub
dec
cmp
adc
into
shll
xchg
xchg
cmc
mov
pop
lock
jb
das
lods
repnz
mov
sub
adc
sbb
outsb
shlb
xor
stc
xchg
rorb
dec
sbb
popa
testl
icebp
scas
xchg
das
push
inc
pop
push
nop
xchg
das
xorl
fadd
or
adc
add
push
jmp
pop
add
pop
jmp
pop
pop
cmp
out
jbe
es
pop
ret
test
cmpsb
push
call
test
pop
pop
pop
imul
cmp
dec
pop
sbb
loop
jge
mov
sahf
sqrtps
add
inc
dec
movlhps
sbbb
pop
push
mov
lock
mov
or
jne
push
into
lods
stos
and
pop
test
sahf
iret
mov
mov
sub
sub
popf
fisubrs
je
shlb
push
pop
test
mov
adc
pop
lock
xchg
cld
fs
popf
push
enter
sbb
add
xchg
out
sbb
in
xchg
mov
mov
add
dec
mov
mov
nop
mov
pop
xchg
scas
sub
or
insl
pusha
dec
jle
lea
and
add
push
or
sub
and
add
adc
call
sub
xor
fadds
mov
cs
sub
jne
xlat
jl,pn
and
dec
dec
push
jns
and
mov
and
inc
sbb
stos
idiv
cld
inc
negb
xor
xor
xchg
push
or
pusha
jmp
fs
pop
adc
cmpsb
mov
inc
sbb
xor
adc
cmp
pusha
enter
out
mov
lcall
cmp
jne
loopne
subl
popa
fldenv
cmp
pop
sub
push
xor
push
sbbb
sbb
cmp
xor
adc
fildl
xor
adc
lea
or
jecxz
jns
push
inc
pop
xor
inc
cmpsb
in
fiadds
je
push
in
lea
shl
sahf
dec
and
fwait
jp
dec
pop
iret
xor
mov
arpl
sub
mov
xor
and
fbld
sub
lods
leave
sarb
pusha
sub
pop
pop
or
repz
xor
sub
and
jecxz
dec
adc
ss
cltd
cmp
and
inc
scas
pusha
xchg
inc
jbe
pop
push
lea
jle
test
lea
adc
add
loop
cmp
sbb
inc
daa
pop
inc
xchg
xorb
das
addb
xchg
enter
fstl
xor
loopne
aam
insb
call
xor
jecxz
push
in
movb
sub
and
dec
mov
inc
fs
scas
fmull
inc
dec
stc
das
add
lea
push
mov
jmp
push
xchg
xchg
in
lcall
pop
push
xchg
mov
in
mov
mov
inc
push
inc
fsubr
cmp
add
xchg
hlt
pushf
ss
daa
sub
aam
cmp
cmp
mov
rorl
aaa
jne
js
adc
bound
stc
pusha
js
rcll
pop
ljmp
in
rolb
push
cmp
xor
jle
les
inc
lea
cmpb
inc
xlat
rcl
pop
shlb
pop
and
sbb
pusha
inc
clc
ljmp
sbb
movb
push
xchg
sub
cmp
pop
jl
or
mov
imul
mov
dec
jbe
fdivl
mov
fimull
adcl
xor
add
das
xchg
jmp
cmp
mov
ret
pop
dec
sub
jmp
jne
cmp
adc
or
aas
mov
int3
stos
push
sti
or
sbb
sarb
mov
popa
movsl
mov
test
hlt
push
mov
or
rorb
enter
lea
insb
in
ss
jmp
dec
loop
xlat
adc
pop
pop
sub
or
push
jb
jg
mov
cli
push
je
pusha
or
jl
dec
js
mov
push
xor
pusha
loop
clc
and
test
loop
lret
sti
mov
test
xor
dec
inc
cmp
jb
pop
pop
adc
or
mov
pusha
xor
imul
cmp
pop
ret
mov
push
dec
add
pop
je
test
in
call
jmp
cmp
jne
xor
inc
pminub
push
mov
sahf
jnp
and
adc
cmpb
cld
add
je
out
loop
dec
test
inc
add
mov
dec
shl
push
add
aas
sbb
and
jnp
int3
jo
mov
aam
insl
or
push
mov
je
adc
mov
lea
and
pop
pop
pop
add
movups
cmp
les
mov
je
mull
loop
movsb
inc
es
lret
mov
in
test
int3
jno
cmp
daa
push
adc
jge
jg
sbb
push
and
ja
adcl
sbb
scas
dec
and
rol
loop
add
jmp
push
sub
pop
rcrb
inc
sub
adc
icebp
mov
and
andb
divb
or
leave
pop
inc
jbe
addb
scas
xchg
mov
cmp
incl
fildl
jbe
xchg
bswap
lcall
fildll
or
inc
sbb
sub
rcll
aaa
test
mov
loope,pt
xchg
xor
lds
and
fdivs
push
mov
add
loopne
shrl
and
adc
andl
fiadds
sub
xor
push
mov
mov
sub
roll
fstp
adc
sbb
stos
mov
sub
int
adcb
push
or
jne
dec
mov
xor
fcom
push
out
add
sbb
inc
mov
jl
adc
mov
jae
bound
cwtl
jns
sub
push
adc
dec
cwtl
icebp
fmul
and
test
fsubl
pop
fcomps
inc
add
sub
cmp
xchg
arpl
hlt
gs
push
inc
sbb
cwtl
cmpsl
push
lds
mov
lea
into
imul
mov
pop
and
dec
adc
repnz
mov
push
adc
push
ja
add
jno
add
les
cmpsb
nop
lcall
jb
pop
push
scas
xor
mov
ret
inc
mov
or
push
sahf
xor
out
movsl
mov
movsl
xchg
shlb
int3
les
xchg
rcl
dec
or
mov
in
xchg
imul
jl
or
scas
into
stos
imull
mov
dec
cmp
push
paddusb
add
pop
int3
push
and
inc
aaa
xchg
sbb
lcall
pop
cmp
dec
and
push
sub
dec
mov
xor
fimuls
push
movsl
jo
mov
enter
adcl
cld
pop
fadd
nop/reserved
xorw
mov
inc
add
loop
mov
fstpt
push
mov
mov
mov
enter
out
pop
push
mov
add
xchg
int
rclb
mov
xchg
sbb
or
adc
or
inc
jecxz
and
push
sahf
lock
ss
sbb
ljmp
es
loop
movsl
adc
mov
loope
lret
adc
mov
mov
lahf
std
push
fidivl
popa
mov
lods
cmp
clc
rcl
push
call
jl
aam
fsts
imul
nop
sub
fnstsw
into
jle
jl
adc
sbb
push
lods
pop
sbb
push
and
pop
and
lret
ja
or
jecxz
sbb
pop
mov
or
ret
or
mov
pop
add
xchg
push
popf
pop
ss
mov
test
fs
mov
xor
sbb
mov
sub
push
iret
idivb
lahf
popf
in
pusha
pop
pop
ret
pop
cmp
je
jmp
bound
xlat
sub
popa
mov
and
loopne
pop
jle
sub
push
mov
in
sub
mov
dec
ret
sbb
and
and
pusha
inc
imul
cmp
mov
mov
pop
insl
add
cmc
jb
mov
and
pop
pop
inc
decb
les
pop
or
push
mov
mov
or
pop
loop
inc
push
dec
enter
add
jg
lods
or
in
loopne
sbb
mov
test
xchg
lods
mov
lcall
add
push
cmp
cmp
cli
adc
xchg
lods
or
add
push
xchg
xor
loope
inc
scas
xor
inc
mov
cmp
sbb
ficoms
lock
pushf
stos
int3
andl
or
push
push
push
adc
testb
cmp
push
icebp
jge
divb
add
stos
push
loopne
push
mov
push
mov
jp
sahf
or
inc
or
inc
mov
dec
inc
mov
jl
subl
je
or
push
mov
add
lcall
push
mov
cwtl
call
xor
cmp
add
sbb
mov
adc
hlt
std
adc
push
sbb
lret
and
loop
stos
pop
mov
inc
jmp
jg
rorl
xchg
adc
nop
ret
inc
xchg
rorl
call
or
lock
sub
push
mov
sar
das
out
dec
add
inc
or
mov
cwtl
xchg
cmpsb
pushf
mov
push
xor
add
lahf
sarb
pop
gs
sbbb
fmuls
push
ss
pop
test
jnp
outsb
adc
add
mov
iret
add
push
int
subb
les
push
adc
or
or
pop
pop
ret
rorl
sub
int3
pushf
idivb
xlat
push
rorl
dec
cli
pusha
inc
dec
shlb
cmp
loopne
cmp
lahf
ret
push
push
fdivs
jne
jbe
arpl
je
aam
jne
push
nop
les
lock
mov
testl
test
dec
add
dec
or
add
out
gs
sbbb
inc
xchg
out
pop
mov
jge
mov
fnstcw
inc
push
cmpsb
sub
and
test
pop
inc
push
mov
adc
jmp
cmp
pop
rcl
push
pop
dec
rcrl
mov
test
cmp
ficompl
push
clc
fcompl
loop
cld
faddl
mov
xchg
xchg
shrd
int3
test
gs
sbb
adc
jo
or
jle
jo
je
pop
inc
push
mov
and
xor
cmp
or
je
jp
lock
fcoml
cmp
sub
dec
or
mov
dec
pop
sub
insb
adc
and
pop
mov
add
movsb
pop
dec
mov
add
ss
rorb
add
loopne
push
xor
adcb
push
mov
adc
or
cmp
pop
mov
xchg
ret
dec
inc
push
sbb
push
xlat
shlb
je
outsb
or
add
mov
cmpsb
adc
inc
out
rolb
out
inc
adc
loope
push
push
lea
pop
je
inc
aaa
dec
adc
add
pop
cmp
adc
xor
es
or
in
inc
sbb
sub
mov
out
enter
mov
pushf
sbb
icebp
ds
loopne
lock
jne
shr
push
lret
mov
shll
mov
dec
sub
mov
leave
sar
cmp
jb
push
adc
shlb
xor
dec
or
pop
mov
pop
xor
xchg
loop
insb
mov
call
lahf
mov
inc
push
mov
ja
icebp
movsl
add
sarl
inc
rorl
cltd
ret
mov
inc
cmp
orb
into
pusha
cmp
cli
jg
mov
sbb
or
mov
push
sub
les
shr
cmp
pop
jl
in
js
or
popf
sub
icebp
add
jmp
mov
push
call
icebp
aad
rclb
xchg
adc
or
stos
je
cmp
dec
pushw
push
frstor
push
xor
sub
popf
and
aam
mov
mov
pop
add
insb
lock
inc
adc
sub
add
mov
xchg
pop
mov
sub
jl
jnp
mov
pop
mov
jmp
sbb
data16
mov
subb
fwait
stos
push
pusha
push
mov
in
loop
fs
xor
and
aam
sub
lret
and
xor
push
insl
xor
sldt
push
mov
cmp
lock
popf
jmp
add
fstpl
popa
jle
fisubrl
add
mov
rclb
or
fidivrl
outsb
ljmp
jg
add
and
add
icebp
mov
xchg
push
mov
je
push
cmp
inc
or
jae
iret
xchg
push
mov
jne
add
repz
mov
push
je
inc
mov
jg
push
or
and
hlt
fisttps
jle
cmp
push
push
sub
call
add
sbb
out
or
or
popf
pop
cmp
sub
cmp
sub
es
mov
mov
push
xlat
lret
xchg
jge
out
push
or
nop
sbb
add
and
arpl
enter
sbb
or
fadd
add
sbb
xchg
jmp
push
iret
dec
inc
add
lret
push
mov
mov
ljmp
jmp
xor
aaa
mov
or
xchg
je
sub
repnz
sub
sbb
pop
and
sbb
push
gs
adc
add
xor
xor
and
sbb
jnp
jae
push
push
mov
xchg
stos
inc
clc
sbb
adc
popf
xor
pop
and
or
dec
loopne
adc
addr16
out
mov
mov
mov
outsb
cmpsl
enter
mov
push
xchg
aaa
rcrb
sub
dec
in
in
aad
mov
mov
fs
xchg
cmp
dec
adcl
dec
fstl
pop
or
mov
mov
repz
pop
orb
mov
lcall
cmp
pusha
imul
sbb
jl
mov
pushf
lahf
lahf
call
cmpsb
cwtl
sahf
add
dec
sti
or
bound
int
movsb
roll
test
inc
mov
xor
addr16
scas
sub
fidivrl
inc
and
pop
mov
rcrb
jae
adc
int
adc
and
add
sbb
cltd
popa
mov
pushl
popf
nop
xchg
push
add
fadds
add
nop
sbbl
sbb
nop
add
fs
push
cmpsb
mov
jbe
xor
xchg
push
pop
ret
jmp
and
or
lcall
rcr
sbb
adc
push
mov
jne
repnz
cmp
jne
and
test
xor
ds
divb
shrl
dec
pcmpeqw
rorb
or
adc
mov
call
pop
imul
mov
cs
lods
add
dec
adc
fbstp
mov
cmp
sbb
rorl
xchg
jne
cs
cld
push
add
or
or
xchg
xchg
add
ja
fidivl
loopne
aas
clc
jne
mov
jb
mov
sbb
shr
mov
add
cmp
dec
inc
sbb
ret
inc
or
sub
xchg
adc
pop
sub
xor
fwait
insl
cmp
loop
shl
mov
or
push
mov
insb
xor
movsl
inc
sbb
stos
mov
inc
lock
push
rol
ljmp
sbb
ja
add
repz
push
push
push
jnp
jne
lea
add
xlat
popa
vmovdqu
adc
cmp
shrl
notb
mov
out
test
pop
andl
add
fnstcw
adc
adc
adc
pop
mov
cmp
in
sub
add
repnz
out
sti
cltd
in
add
iret
cmp
pushf
orb
pop
cmp
stc
cmc
mov
inc
gs
fcmovnbe
xchg
out
fnop
lods
je
dec
add
mov
shll
adc
or
clc
loopne
xchg
and
xor
clc
push
stc
lods
xchg
loopne
je
icebp
jne
fwait
jl
cmpsl
xor
ja
fwait
jnp
cmovp
sub
inc
sub
jne
shrb
sub
push
push
add
push
lods
aam
mov
cmp
xchg
fucomp
jbe
je
ret
adc
shrb
ljmp
jns
xor
test
xchg
jbe
add
rorb
mov
mov
loop
jmp
cmp
subl
inc
jo
int
or
xchg
dec
add
pusha
arpl
or
imul
cmc
or
pop
jno
cmp
es
add
or
add
pop
or
inc
or
adc
add
sub
pop
jno
lret
jle
gs
nop
sbb
xlat
test
add
xchg
jo
enter
add
cmpsb
push
cmpsb
rcl
mov
cld
xchg
xor
xchg
je
pusha
push
or
push
and
fs
xor
jnp
xchg
and
sbb
rorb
dec
loopne
arpl
out
or
inc
inc
cwtl
notl
cmpl
xchg
and
sbb
or
or
mov
je
enter
pop
fs
pusha
mov
xor
push
loope
add
cltd
add
push
mov
pop
testl
je
cmp
jg
divb
mov
in
mov
mov
and
loopne
pop
cmp
je
xor
insb
sbb
mov
lock
push
sub
dec
icebp
push
xchg
inc
pop
xchg
jmp
lea
pop
fdivrl
enter
leave
add
push
imul
jne
lock
dec
js,pn
into
adc
lock
dec
inc
cs
lock
das
mov
jmp
jmp
adc
ja
jbe
adc
mov
sub
push
out
jp
dec
ss
out
adc
mov
jbe
cld
cmp
sub
add
add
push
mov
das
cmpsb
mov
lea
mov
cmpps
pop
cs
pop
loope
cltd
pusha
pop
mov
lock
xor
movsl
pop
leave
inc
and
and
cmpsl
into
rorl
mov
loopne
testb
and
jne
sahf
add
jb
xchg
adc
flds
ja
test
je
test
ljmp
add
adc
and
and
inc
pop
adc
pushf
ret
mov
xchg
addr16
sbb
jns
nop
push
adc
jo
daa
ds
jge
jne
jp
cli
jo
xchg
or
mov
ror
orl
call
or
push
aas
jne
arpl
xor
xchg
insl
lds
fsubs
cltd
je
xchg
stos
insb
jbe
jbe
fistl
fidivrs
test
sub
push
test
sarl
sub
pop
loopne
je
sbb
lret
sbb
add
pusha
xchg
data16
or
cwtl
dec
push
lea
push
pop
cwtl
push
adc
test
add
rcr
loop
bound
lret
push
or
dec
sbbb
dec
lods
add
adc
scas
imul
outsl
or
and
push
sbb
add
pop
adc
lock
push
cmpsl
adc
fs
add
xchg
leave
inc
sub
pop
adc
pop
arpl
and
add
fcoms
sub
imul
mov
adc
ja
fmul
inc
xchg
loopne
sub
xchg
push
pop
cmp
mov
push
aad
arpl
or
mov
dec
sbb
pop
loopne
or
sbb
cli
dec
lods
adc
inc
clc
fidivrs
sbb
jg
adc
test
push
cmpb
adc
adc
cwtl
jo
or
pusha
pop
inc
daa
inc
sbb
lods
subl
or
push
mov
adc
push
daa
pushf
and
pop
xor
test
or
push
or
test
pusha
cmp
popa
ret
loope
push
pop
into
jecxz
nop
nop
mov
lock
inc
fs
adc
loopne
cmp
fnstsw
xor
xchg
push
xchg
lret
pop
stos
lock
inc
verr
adc
jo
sahf
imul
sub
cmp
inc
push
dec
pop
shl
or
fs
cmp
or
jmp
and
mov
ds
mov
clc
inc
test
push
add
jno
shlb
shlb
add
data16
mov
jo
lret
data16
adc
mov
ja
popa
pusha
cmc
mov
xchg
mov
push
pop
jp
lods
je
pop
mov
aam
sbb
adc
out
jo
push
jmp
adc
scas
mov
xor
sahf
cmp
push
xchg
popa
cwtl
bound
outsb
push
scas
xor
adc
mov
aad
mov
cmp
test
push
sub
mov
add
icebp
aas
mov
xchg
mov
adc
aas
jne
xchg
movsb
jmp
dec
push
push
push
push
je
xor
das
fistl
jne
mov
or
pmaddwd
lea
push
push
pop
add
sub
stos
cmp
mov
cmp
push
add
push
bound
ret
xchg
dec
das
jbe
mov
xor
or
or
xchg
inc
adc
aas
adc
mov
sub
imul
add
push
imul
cmp
aad
nop
or
icebp
popa
add
and
stos
out
shll
cmp
orb
daa
mov
xchg
mov
adcb
insl
popa
shll
jno
dec
add
sbb
xor
sub
hlt
rorb
mov
xor
imul
negb
icebp
and
inc
in
push
pop
sub
test
mov
inc
rcll
xor
pop
js
xchg
loope
decl
xchg
fidivrs
push
xor
bswap
int
repz
mov
cmc
sub
mov
inc
mov
movsl
jne
arpl
cmpsb
addl
add
jp
rcll
adc
push
and
aam
test
fs
pop
sub
push
loopne
or
xor
mov
shl
imul
lea
push
lods
push
sub
loopne
pop
jmp
xchg
fimuls
add
push
jb
jb
pop
out
push
lret
mov
add
push
xor
pushf
and
fbld
mov
sub
sub
fstpt
in
nop
cld
jle
neg
sbb
push
cmp
ret
js
enter
inc
xor
push
xor
sbb
les
addl
outsl
inc
push
sub
iret
sbb
push
test
or
and
mov
daa
dec
and
xorl
xchg
xor
sahf
pop
inc
sbb
dec
jl
andl
jne
pop
mov
rclb
inc
js
inc
jo
or
xchg
cmp
sbb
outsb
in
mov
mov
jbe
add
loop
lea
and
ret
out
into
inc
mov
ss
push
inc
das
shll
aaa
mov
pop
lcall
clc
sub
pop
pop
pop
pop
jge
sbb
ret
roll
jns
jb
inc
add
and
or
inc
andl
adc
aam
pop
sbb
and
cmpsb
and
xor
inc
or
pop
jl
mov
cmp
movsl
sbb
push
push
sahf
push
xchg
dec
outsb
mov
andb
scas
rcll
push
es
arpl
mov
lahf
add
shrb
and
adc
aad
xlat
stos
js
and
mov
dec
loop
mov
pop
js
inc
mov
sub
adc
test
push
mov
jge
push
inc
clc
bnd
dec
cmp
sbb
push
or
inc
loope
mov
adc
loopne
pusha
movsb
push
in
shr
pop
movl
dec
insb
dec
jno
jecxz
dec
adc
pop
repnz
inc
push
inc
adc
inc
xchg
pop
push
inc
push
pop
fadds
pusha
add
call
inc
mov
addl
push
sahf
sub
pop
fbld
pop
xchg
pop
xor
jecxz
cmp
or
gs
dec
or
mov
test
js
or
je
stc
pop
lea
or
mov
cmp
cmc
jp
cmp
cmp
add
pop
js
ret
testb
in
fiadds
dec
or
mov
jle
mov
xchg
pusha
dec
mov
xor
and
xor
add
pusha
or
in
pop
sbb
ror
xor
mov
mov
xor
ss
mov
mov
insb
push
loopne
lret
outsl
nop
out
mov
sbb
test
shlb
add
insl
addl
jp
ret
jge
mov
leave
and
cmp
and
lea
jmp
xor
jb
add
lea
ret
or
mov
push
loope
insl
mov
lock
dec
xor
cmc
mov
mov
ret
filds
adc
cmpsl
mov
lods
cmp
jne
imul
mov
outsb
sahf
pop
cmc
pop
and
or
push
test
ljmp
mov
add
sbb
sbb
loope
inc
inc
mov
pop
nop
jmp
xchg
xchg
mov
sbb
lods
ret
or
pushw
pushf
xchg
inc
xlat
adc
push
aam
mov
mov
cmpb
movsb
adc
pop
push
outsb
push
imul
cmp
jle
xchg
push
pop
andb
jbe
mov
jmp
and
add
int3
popf
and
adc
inc
sbb
push
das
sbb
dec
mov
sbb
dec
mov
shlb
jmp
fisubrl
scas
insl
sbb
or
cmp
xchg
mov
dec
xor
inc
imul
add
test
lahf
mov
add
or
pop
xor
add
enter
xchg
cwtl
push
mov
sub
out
and
push
repnz
push
lods
push
addl
pop
enter
add
loopne
js
xor
pavgb
std
gs
loop
int3
cmp
inc
movsb
adc
lock
daa
add
dec
pop
js
or
lcall
and
out
pop
cmp
scas
lea
push
add
jmp
jns
adc
push
push
sti
jo
test
test
lahf
mov
out
mov
cmp
cvtps2pd
inc
into
sub
incl
sub
or
inc
adc
mov
loop
aas
nop
push
mov
aad
mov
sbb
cmpsb
push
push
inc
pop
inc
jbe
jg
xor
cmp
das
adc
fwait
sub
sbb
sbb
mov
push
xor
movsl
fdivrl
push
or
jae
mov
pushf
xorb
xor
add
push
jg
movsl
repz
jbe
test
push
popf
mov
data16
idivl
dec
add
loope
mov
fdivrl
add
add
cwtl
movsb
xor
add
cmp
push
adc
push
jge
adc
sbb
add
inc
jb
sub
cmp
pop
jp
inc
shlb
mov
or
js
and
sub
lret
add
push
mov
xor
push
fidivl
add
and
pop
bound
sub
fisttpll
add
add
cmpsl
mov
inc
cli
push
cld
repz
fldt
movb
inc
in
cli
mov
movl
and
rep
shr
inc
add
das
push
xor
dec
adc
cmp
inc
sbb
ret
add
sbb
xchg
push
or
pusha
insb
std
lret
fcom
ds
sbb
mov
hlt
or
negl
cmp
insb
out
js
push
aam
sub
xor
push
inc
loop
push
rol
mov
rcrb
clc
inc
sbb
sbb
push
push
pop
adc
cmp
push
mov
push
push
mov
xchg
jne
test
cmp
fwait
mov
mov
jnp
jge
lock
sbb
cmp
sub
adc
outsb
xor
xor
adc
sbb
mov
imul
andb
lods
jne
inc
xor
stc
loopne
jmp
cld
jecxz
dec
sti
cmpl
sbb
in
mov
addl
insb
sbb
adc
mov
loope
arpl
jg
call
lret
sbbb
mov
mov
mov
inc
jne
sbb
je
mov
push
dec
cmp
ss
movsb
add
or
adc
inc
inc
mov
add
push
pop
xchg
xor
scas
mov
pop
mov
aam
push
lea
or
sub
cvtpi2ps
push
xor
jns
or
sbb
dec
sub
imul
add
or
xchg
cmp
rolb
mov
bound
dec
in
pop
sbb
or
ret
cmp
ja
mov
orb
ret
cmp
scas
loop
repnz
pushf
iret
stos
push
push
add
xor
orl
cli
aad
add
xor
push
ds
ss
mov
dec
mov
sbb
cmp
ret
push
sbb
sti
dec
xor
lea
mov
ret
popa
push
ret
gs
adc
push
push
adc
adcl
jge
push
pusha
jae
ret
and
loopne
inc
cmp
mov
test
or
pop
and
push
mov
pusha
pop
cmp
inc
or
decb
idivl
ljmp
out
pop
and
dec
loop
mov
scas
sub
popl
push
pop
testl
out
aas
sarl
cmp
and
in
adc
sbb
sub
or
mov
pop
aaa
dec
or
mov
xchg
ret
or
dec
cltd
cs
aaa
sbb
gs
or
jmp
or
mov
cmp
ficompl
lret
roll
addb
jl
aam
inc
popf
push
or
mov
les
je
add
mov
sti
cltd
shl
inc
div
add
test
sbb
je,pt
cmp
xor
or
dec
sbb
add
xor
loope
mov
dec
lret
push
adc
xor
jae
mov
cmpsb
add
insb
dec
add
loope
xchg
jl
dec
jmp
pop
or
enter
jg
jae
push
push
or
dec
pop
es
jl
lods
xor
mov
sub
pop
push
push
xorb
in
sub
cltd
rcl
int3
xor
rolb
aas
mov
add
push
mov
pop
mov
in
mov
or
mov
aas
inc
push
inc
cld
dec
pop
and
mov
sbb
outsl
push
ficoml
popl
sbb
push
mov
push
rol
addb
pusha
add
insl
negb
inc
and
dec
pop
lods
push
pop
hlt
addr16
imul
lret
push
dec
jnp
mov
sub
xchg
sbb
mov
adc
dec
les
push
sbb
mov
mov
sti
sub
jno
sbb
xor
outsl
xchg
cmp
inc
test
or
xorb
cmp
cmp
push
stos
pop
cmp
lret
or
dec
push
mov
lret
fcoml
dec
push
jbe
push
push
into
or
shrl
lods
pop
dec
out
sbb
out
adc
xorl
dec
pop
add
xor
fcmovnb
loopne
add
negb
or
fs
cmp
test
pop
movsb
push
into
mov
movsb
adcb
mov
jl
lods
mov
pop
andl
ret
outsb
call
sti
dec
ja
je
or
je
pop
mov
je
sub
mov
scas
add
dec
pop
cmp
cmpsl
ljmp
or
add
or
lcall
imul
jmp
cmp
adc
repz
adc
or
add
pop
xchg
inc
sbb
movsl
xor
mov
ret
dec
pushf
jbe
cmp
negl
shr
cmp
cmc
lock
mov
mov
ret
and
inc
imul
inc
neg
add
or
sbb
das
adc
pop
or
add
jmp
pop
imul
andb
adcb
shrb
loopne
das
cltd
and
sbb
push
inc
icebp
lret
add
les
inc
xor
mov
cli
aaa
jo
punpcklwd
subb
dec
je
sub
add
push
cmp
movsb
add
outsb
add
add
mov
nop
adc
aad
cwtl
xor
test
mov
daa
or
push
adc
lock
adc
in
pusha
movsl
and
mov
aas
repnz
stc
cs
in
cmc
mov
adc
dec
enter
sbb
add
int3
sub
push
aad
xor
and
sub
mov
push
dec
sbb
jp
test
xor
inc
push
sarl
smsw
mov
sbb
fsubrs
fdivrl
notl
add
sub
sarb
neg
lcall
pop
mov
sbb
push
sub
dec
ljmp
rorb
adc
sub
call
call
xor
jb
aaa
loopne
xchg
mov
xor
xchg
fdiv
xor
notb
and
inc
inc
inc
testb
es
cmp
sete
jmp
inc
cmp
jne
add
mov
mov
xchg
add
jno
jns
mov
add
add
add
loopne
das
adc
fwait
out
les
adc
and
fcomps
inc
enter
adc
pop
xchg
dec
xchg
ret
ret
pop
movsb
imul
push
cwtl
and
xchg
dec
and
fdivrs
repz
sbb
cs
call
mov
push
cmc
mov
push
test
jns
rolb
loopne
loopne
aam
test
pop
jge
jmp
push
insb
loopne
push
hlt
mov
call
cmp
in
stc
xor
dec
aam
aam
cs
dec
cmp
ret
inc
cmp
push
test
or
in
je
add
rcr
add
adcb
push
xlat
cvttps2pi
xchg
xchg
pop
movsb
jmp
jl
and
shll
cmp
insb
sti
sar
popa
dec
push
pusha
inc
rolb
cltd
push
xchg
inc
inc
cmp
xor
addr16
adc
pop
sarb
hlt
adc
cmp
sti
fst
arpl
xchg
mov
pop
inc
mov
cld
sbb
sbb
movb
add
cwtl
pushf
popa
push
std
mov
sbb
sarb
and
or
jo
jl
movsb
xor
or
jmp
jle
nop
xchg
mov
sbb
xor
shll
icebp
test
enter
mov
dec
cmp
lcall
pop
adc
pusha
cmpsb
mull
mov
mov
push
mov
sbb
push
stos
out
mov
inc
pop
push
xor
inc
enter
push
mov
int3
sub
add
push
add
push
lret
cmp
sub
dec
les
push
shrb
add
mov
cwtl
mov
sub
pop
vxorps
pop
xchg
xchg
or
sub
cmpsl
dec
push
and
or
add
jmp
les
cmc
inc
mov
and
and
mov
sub
or
mov
aaa
aad
imul
sbb
and
fwait
and
sbb
adc
test
roll
xor
scas
push
mov
lret
xorb
xchg
lret
jge
pushf
loope
add
and
mov
scas
add
or
push
dec
jae
xor
xor
xor
cld
dec
in
pop
cmpb
adc
mov
dec
pop
incl
cs
ret
mov
pop
leave
fwait
cltd
decl
in
xor
inc
rolb
and
repz
and
push
mov
sbb
mov
and
dec
add
cmpsb
xchg
in
movsl
pop
loopne
pop
ret
in
iret
and
dec
or
sbb
cmp
and
ficomps
testb
dec
push
and
ret
add
cmp
nopl
dec
xor
rolb
add
cmpb
add
in
fldt
lea
jo
lea
inc
xchg
mov
mov
int3
add
mov
in
outsb
test
call
sub
xchg
hlt
jl
call
push
adc
mov
rolb
das
lock
add
jne
add
aas
inc
dec
or
mov
pop
add
jg
inc
imul
and
call
daa
out
or
pop
andb
cmpb
je
inc
or
loopne
jmp
lods
aam
insl
cmpl
test
inc
push
sbb
inc
call
lock
test
or
movsl
jne
adc
movsb
dec
sbb
inc
es
xchg
adc
movsl
mov
inc
adc
adc
mov
cld
xor
sub
xchg
mov
push
xchg
mov
push
insb
cwtl
loopne
jl
mov
out
dec
ret
lock
fildll
and
sarb
rcrl
sbb
xchg
or
and
push
inc
mov
out
in
movsl
lods
push
fidivrl
cli
stos
and
dec
adc
and
js
sbb
mov
pop
dec
cmp
sbb
lods
jnp
xor
rcl
cmp
enter
or
imul
adc
jge
or
fiadds
mov
les
xor
lahf
mov
fiaddl
testl
mov
dec
push
xchg
sahf
rolb
mov
ss
push
pop
call
in
push
movsb
sbb
dec
adc
push
xchg
mov
or
mov
pop
jl
pop
xchg
loopne
test
add
mov
and
cli
adc
or
stc
mov
les
mov
pop
jns
out
pop
fidivs
sbb
xor
test
or
aaa
stos
xchg
mov
mov
enter
sbb
xchg
mov
shr
inc
stos
es
into
hlt
je
xchg
js
xchg
xchg
push
sub
add
lahf
add
pushw
jmp
adcb
shll
mov
pop
stc
fs
rcrl
cmp
push
sub
push
mov
push
jmp
adc
xor
es
clc
cmp
xchg
sar
ss
jbe
sti
add
push
fistpl
dec
dec
dec
hlt
add
pop
je
or
adc
loope
push
cmp
jle
or
add
stc
or
inc
rcr
repz
test
push
mov
lret
gs
mov
js
cmpsl
lds
imul
mov
dec
and
add
inc
iret
inc
sub
dec
mov
lods
daa
outsl
lret
add
pop
and
shlb
inc
push
add
dec
push
add
hlt
adc
and
cltd
mov
mov
mov
push
adc
push
nop
and
out
popa
rcr
push
pop
inc
fisttps
mov
push
sbb
mov
cmp
addr16
mov
or
dec
push
push
iret
iret
pop
sub
mov
sub
adc
cmpsb
mov
fsubr
dec
or
je
dec
repnz
add
int
pop
adc
and
sbb
in
xchg
pop
popa
adc
and
nop
sub
sbb
nop
and
fprem1
xor
push
mov
mov
and
mov
and
and
stc
mov
mov
mov
sub
lea
jmp
or
xchg
add
push
jbe
pop
push
pop
mov
sbb
adc
sub
xchg
and
fsts
jnp
xchg
or
and
rcll
xor
leave
lahf
xchg
mov
adc
cmp
xor
cmp
push
push
add
repnz
xchg
lahf
xchg
fnstcw
fsubrs
push
mov
xchg
in
xchg
cld
lods
mov
dec
enter
add
lret
or
lret
lret
and
rorb
orb
daa
cmp
sbb
rcll
in
decb
push
cmpxchg
dec
add
orb
mov
and
stc
cmp
mov
lcall
mov
repz
adc
pop
test
lods
adc
mov
enter
adc
es
call
pop
inc
dec
lret
add
sub
sub
adc
pop
fcmovnbe
add
or
sbb
cwtl
sbbl
xor
push
jg
shll
filds
sbb
mov
adcb
mov
push
mov
adc
pop
loop
stos
lods
add
mov
push
ja
push
iret
ffreep
add
pop
sub
clc
inc
rclb
cmp
sete
add
mov
add
sarb
lds
jl
push
in
jns
inc
iret
or
in
add
push
inc
or
inc
or
add
enter
mov
add
add
lds
les
jl
cmp
jae
add
inc
xor
dec
mov
push
shl
adc
cmp
jne
jg
test
pop
dec
sub
cmc
sbb
lods
mov
jp
rcl
add
push
les
incb
inc
jmp
push
sbb
sbb
push
sbb
sbbl
lods
les
pop
mov
cmp
or
movsb
or
push
and
or
sahf
or
jmp
mov
or
sub
add
jmp
sbb
add
xchg
pcmpgtb
mov
jno
and
das
jmp
xor
hlt
xchg
adc
fldenv
push
add
fbld
lods
add
mov
mov
or
add
daa
cmp
jecxz
sub
cmp
lret
aam
imul
pushf
jbe
movsl
pushf
mov
lock
and
push
insb
xcrypt-ecb
cmpsl
or
ljmp
call
mov
leave
dec
ja
jne
dec
insl
mov
push
pop
andl
dec
shrl
pop
inc
in
dec
push
insb
call
imul
sub
fidivs
push
sti
xchg
in
cmp
jns
push
add
rclb
mov
adc
aam
rclb
scas
mov
cmpl
notl
cli
add
shll
add
xlat
inc
push
leave
push
xor
mov
push
sub
add
xorb
insb
stos
dec
nop
fstpt
testl
inc
mov
push
lock
lock
add
les
mov
pop
sbbb
xchg
pop
sbb
add
repnz
push
push
jb
movsb
call
push
loopne
and
or
push
and
jle
dec
push
stc
add
test
push
in
dec
push
hlt
out
repz
cmp
jo
add
mov
cmp
out
or
lock
push
and
xchg
mov
rcrl
leave
inc
and
jbe
push
add
test
xchg
sahf
add
lea
in
push
add
das
and
dec
mov
scas
sbb
testl
xchg
inc
sub
or
mov
sbb
xor
add
sbb
int3
rorb
inc
sub
movsl
add
fdivrl
mov
adc
incl
push
inc
incl
aas
ja
push
inc
pop
add
dec
call
dec
cli
je
mov
pop
adc
dec
inc
mov
dec
insb
stos
je
push
jb
add
arpl
push
cmp
cli
les
xchg
mov
push
and
incl
push
jle
das
inc
mov
cmpsb
lret
push
jmp
sbb
cmp
xorb
inc
sub
add
sub
mov
jne
andl
out
fisubrs
sbb
jmp
dec
mov
data16
xchg
add
sahf
and
push
clc
or
cmp
into
inc
jb
dec
ficomps
fadds
or
adc
cmp
add
enter
inc
out
popa
jnp
jo
dec
mov
dec
leave
mov
in
test
or
adc
add
xor
pusha
mov
pop
xor
add
test
arpl
das
lods
outsb
loop
add
or
sbb
in
fisttps
cmp
lret
cmp
enter
adc
adc
sbb
pop
fdivrl
pop
ret
gs
imul
push
add
sbb
push
pop
inc
sbb
add
and
and
xlat
aam
and
andl
jbe
in
mov
push
pop
push
loope
jge
cmp
scas
cli
fisubrs
sub
or
mov
push
mov
xchg
hlt
dec
xchg
aam
and
cmp
lods
add
inc
adc
dec
adc
out
mov
jl
lea
aas
push
push
mov
add
inc
or
mov
xor
lods
fstl
adc
push
adc
adc
or
xchg
mov
loopne
add
lcall
inc
pop
addr16
or
mov
clc
decb
pusha
js
rcrl
sub
or
cld
pop
add
cld
daa
jns
movb
adc
pushl
addr16
les
mov
or
js
xor
and
inc
arpl
xor
loope
jo
fildl
ret
mov
xchg
add
icebp
mov
in
inc
sub
pop
cld
mov
xchg
lret
sub
or
sub
inc
xor
cwtl
subb
add
pusha
andps
sbb
sub
sbb
test
jo
lock
cmp
and
je
mov
add
stos
mov
hlt
add
cli
adc
and
push
adc
cmp
add
push
clc
sarl
shl
movsb
std
pop
mov
cld
lock
call
movsb
cld
sub
mov
adc
ss
or
and
sbb
mov
add
gs
fs
std
push
cmp
divl
mov
aaa
int3
dec
dec
and
xchg
pop
orb
jmp
loope
pop
cwtl
pop
pusha
dec
add
mov
dec
mov
mov
mov
pop
mov
cld
push
xor
jmp
jmp
inc
je
adc
inc
mov
inc
mov
push
jp
xchg
mov
cltd
push
leave
scas
lret
push
cmp
mov
xchg
pop
or
adc
fcomps
out
inc
push
fsubrs
push
pop
nop
sti
jl
test
stos
imul
adc
push
add
mov
ret
mov
stos
ds
orl
mov
fwait
xchg
or
sbb
loop
jle
dec
add
jmp
or
push
xor
jbe
inc
sbb
out
add
push
add
lret
shll
push
xor
aaa
mov
push
sub
push
leave
xchg
or
sahf
sub
adc
test
lret
lret
xor
xor
cmp
inc
aam
call
pop
jmp
and
test
dec
popf
add
sub
pop
or
and
movl
je
add
loope
push
sub
inc
movsl
sub
cmpsb
sub
leave
mov
fs
decl
push
cmp
jno
stos
or
imul
sub
and
xchg
adc
mov
pop
inc
jg
or
add
pop
inc
cwtl
rclb
push
sbb
nop
sbb
fidivrl
cmp
or
out
jbe
jns
adc
mov
inc
push
repz
and
adc
test
xor
add
sbb
jae
subb
pop
movb
jns
and
adc
ret
subl
add
lret
xor
sbb
popa
rcl
jne
inc
imul
call
inc
popa
cmp
imull
pushf
lea
or
je
cmpsb
sar
add
cmp
cmp
push
inc
add
sub
xchg
pop
adc
cmp
xor
test
adc
adc
pop
xchg
xchg
pop
push
xor
loopne
sub
push
cmp
mov
popf
jne
pop
cmp
loopne
jmp
popa
lea
divb
bound
cmp
adc
adc
jmp
sub
jae
shl
and
inc
mov
jo
add
arpl
mov
adc
mov
xor
in
pushf
jae
ja
pop
in
and
xlat
push
and
lock
add
pop
push
loopne
adc
push
ret
mov
data16
inc
sub
daa
lods
adc
push
mov
loopne
loopne
iret
xor
cmp
flds
and
cmpsb
xchg
testb
jbe
xor
mov
cltd
dec
mov
rorl
mov
lods
cmp
jne
scas
sub
rolb
fbstp
andl
fs
std
push
mov
arpl
fs
sarb
push
and
add
mov
subb
enter
popa
mov
leave
xchg
mov
shl
xor
xchg
and
loop
sarl
cmp
mov
stos
cld
sub
jp
jmp
cmp
sti
gs
leave
xor
pop
mov
test
inc
rolb
test
ja
popa
xor
mov
lret
loop
ds
mov
mov
push
push
push
cmp
rcll
dec
aam
or
shlb
jmp
call
and
rclb
out
push
loope
mov
fcoml
dec
test
movsb
in
add
js
jmp
ret
jns
maxps
jno
jbe
out
cmp
push
jno
xchg
add
aam
push
sbb
test
mov
adc
arpl
jne
push
push
and
add
add
add
cmp
cmpsb
int
xchg
js
dec
push
xchg
shrb
jl
scas
mov
cmpb
jne
adc
decb
mov
pop
sbb
popa
push
xchg
xchg
adc
xchg
cmp
adcb
mov
stos
push
std
lock
mov
jge
je
mov
inc
test
xor
notl
outsb
rolb
xor
out
mov
cmc
mov
xor
test
icebp
and
or
insb
cmp
push
les
and
dec
jo
adcl
mov
test
ret
push
mov
mov
push
add
mov
add
push
leave
adc
cmp
sub
xchg
sbb
jb
mov
adc
sbb
xchg
xlat
add
jge
shlb
push
add
es
addl
and
push
shll
sub
mov
mov
testb
je
push
push
xchg
enter
or
inc
sub
jle
clc
adc
pushf
fldl
sbb
popa
insb
loope
add
jp
insl
push
adc
rorl
push
pop
cmp
cmp
ret
cmp
sbb
or
push
aas
cmp
dec
or
pop
add
ljmp
mov
sub
sar
cmp
jbe
faddp
pop
inc
or
add
jmp
push
mov
aam
js
mov
inc
pusha
in
inc
ret
das
mov
add
jecxz
xchg
sbb
add
inc
xchg
push
dec
mov
in
mov
sbb
mov
push
dec
cmp
adc
stos
or
inc
mov
jbe
fiadds
add
lock
cmp
adc
mov
fdivp
push
sub
outsl
out
and
adc
in
push
inc
cmp
stos
rcll
pop
fs
loope
xlat
jl
pop
in
mov
into
stos
or
and
lea
mov
pop
daa
enter
jae
dec
add
std
fs
mov
inc
aad
adc
popa
lea
cmp
sbb
popa
jb
add
mov
rcrb
mov
shrb
clc
mov
cmp
sbb
or
call
sbb
nop
adc
roll
cmp
pop
adc
jno
testb
pop
sbb
enter
mov
sbb
dec
add
jne
sub
clc
test
add
cmp
mov
sbb
adc
push
mov
aad
jae
jb
pushl
inc
sbb
mov
push
sahf
add
jmp
xor
jae
jb
stos
jbe
and
add
xchg
and
push
and
lret
rorb
pusha
and
or
addr16
xor
inc
ja
mul
sub
lods
sbb
bound
es
in
jns
lods
dec
int
imul
and
test
lods
jmp
mov
push
imul
cmp
scas
push
cli
lcall
and
enter
jo
pop
repnz
mov
xchg
pop
sbb
insb
and
dec
mov
add
sbb
icebp
daa
or
repnz
sub
sbb
push
jmp
add
fcmovne
mov
adc
movl
arpl
dec
or
and
ja
adc
or
fisttpl
xchg
pop
fldt
cmp
ss
or
sbb
cmp
dec
dec
adc
and
cmp
incl
faddl
fiadds
cmp
data16
js
dec
das
addb
or
loope
or
std
adc
xorl
jne
push
xor
and
in
je
pusha
cwtl
add
push
add
add
add
push
nop
test
xchg
adc
inc
add
lret
and
mov
adc
lcall
mov
sub
mov
outsl
or
add
enter
inc
aas
and
and
and
and
mov
and
es
sub
cs
in
add
inc
sub
in
add
mov
cs
sar
jnp
aam
xor
in
add
add
inc
push
jb
xor
sub
xor
or
xor
mov
mov
icebp
inc
xchg
xchg
lea
cmp
xchg
push
out
xchg
and
jmp
gs
or
pusha
push
loope
mov
cmpsb
or
push
adc
adc
add
pop
adc
xor
jge
fadds
mov
add
inc
ret
adc
inc
adc
xor
int3
xor
inc
dec
adc
jb
push
mov
pop
adc
lea
add
and
or
adc
stc
mov
jae
pop
mov
pop
pop
pop
cli
sarb
and
ss
adc
leave
and
or
popa
adc
cs
sbb
ret
addr16
sarb
loop
mov
or
dec
ds
jge
add
adc
popa
sbb
xchg
adc
jo
frstor
aad
adc
je
adc
cwtl
adc
push
jl
push
js
lods
andl
push
push
add
js
rolb
pop
mov
mov
rorb
xchg
or
out
and
add
subl
imul
lock
aad
test
or
clc
inc
or
add
sbb
jo
test
shlb
add
push
xchg
bound
or
es
sbb
and
inc
jp
sbb
adc
es
sbb
js
cmpsb
in
mov
and
xor
inc
mov
adc
sysexit
ficomps
mov
pop
js
ja
jne
andl
lock
je
daa
add
and
xchg
pop
orb
jbe
inc
sbb
rcrl
shll
sbb
sbb
mov
js
dec
xchg
adc
pop
add
cmc
rol
loop
and
xchg
fidivrl
jge
das
or
add
push
movsb
rorb
fucomi
fmuls
or
xchg
adc
inc
jmp
cmp
mov
cmc
dec
movl
pop
or
sub
mov
popa
sar
pop
lock
orl
and
inc
into
das
das
jno
mov
sti
jg
dec
fstpt
in
neg
test
jle
test
lcall
mov
setae
mov
adc
pop
mov
mov
lock
push
cmp
mov
lret
sbbb
hlt
dec
sbb
rorl
inc
cmp
rolb
sbbl
inc
into
int
add
inc
add
clts
jae
fcomi
das
and
loope
repz
add
cmpl
loop
push
das
or
clc
aam
xchg
inc
push
inc
and
xchg
and
push
xchg
outsl
insl
test
adcb
push
in
loope
adc
add
adc
and
les
inc
inc
loop
and
enterw
or
push
mov
sti
jno
mov
push
pop
sbb
jb
movsb
clc
and
sub
and
adc
addl
cmp
adc
arpl
inc
cmpsb
repnz
sbb
or
jge
in
out
adc
pop
test
pop
std
xor
cmp
cltd
stos
and
lock
and
xor
sbbb
and
insl
sub
push
ds
jmp
addr16
and
lock
mov
lods
sbb
lahf
xchg
shlb
scas
fs
and
stc
test
test
lock
ljmp
pop
push
mov
cmp
jl
cmp
jle
cmp
push
jp
or
pop
push
mov
je
stos
mov
je
xor
outsb
jg
mov
jge
mov
pop
and
cmp
nop
mov
je
cmp
je
data16
mov
lcall
push
and
enter
mov
jecxz
clc
cwtl
or
daa
fsubrs
testl
into
fistl
dec
sbb
inc
pop
aaa
out
mov
outsl
mov
cmp
jl
roll
mov
loopne
adcb
jmp
loopne
or
in
add
cmp
mov
jge
pushl
xor
or
inc
or
xchg
dec
mov
dec
fadds
push
dec
adc
mov
add
sbbb
les
sbb
and
adc
movsl
dec
mov
xchg
shrb
scas
inc
fcoml
sarb
xor
fwait
push
xchg
sub
or
pushf
pop
sub
fiadds
mov
mov
in
clc
test
xchg
pop
pop
pop
mov
mov
inc
sub
push
dec
enter
pop
dec
pop
cmc
adc
push
jb
push
mov
test
push
mov
dec
pop
jne,pn
add
xor
mov
cmp
push
or
mov
xchg
cmpsb
pushf
lea
or
test
sbb
cmp
push
sbb
nop
cmc
pop
pop
adc
sbb
push
push
pusha
outsb
pop
in
inc
aad
in
inc
loope
or
sub
gs
push
jmp
popf
dec
xchg
adc
sub
inc
sub
in
mov
inc
das
sbb
fisttpl
pop
pop
fadds
add
pop
adc
cmp
sbb
push
pop
pop
pusha
idivl
and
js
and
cmp
jp
add
ret
scas
cmp
ljmp
mov
adc
pop
xchg
cmp
mov
add
icebp
jbe
sbb
adcb
js
insb
mul
add
test
jo
in
bound
and
cld
je
pop
add
mov
jns
xchg
or
cmp
and
push
or
outsb
lea
leave
push
inc
pop
mov
imul
adc
not
out
xchg
sbb
jne
nop
pop
rclb
ret
sbb
jecxz
pop
cmp
inc
int3
jle
and
cmp
mov
sbb
test
fbstp
mov
les
mov
pop
sub
xor
or
or
xchg
dec
add
cmp
xchg
repnz
popf
jbe
jmp
outsl
por
inc
and
add
lret
add
and
packsswb
add
fwait
adc
clc
fisubrs
mov
jmp
fsub
roll
inc
jl
fucomi
mov
cmp
popf
or
arpl
push
rorb
and
push
fdivs
daa
es
imul
addl
test
inc
sub
and
sbb
shrb
roll
dec
fs
push
adc
push
mov
pop
fwait
mov
lahf
add
stos
or
sub
rorb
xchg
push
iret
inc
sub
sahf
fsubr
or
push
test
xor
mov
adc
sbb
or
fildll
or
mov
clc
and
ss
or
je
cmp
xorl
pop
push
xor
movsl
push
push
hlt
adc
pop
mov
jmp
dec
clc
adc
cwtl
bnd
xor
adc
je
adc
push
jle
dec
add
and
sbb
push
jns
inc
inc
and
divl
and
mov
in
mov
repnz
jmp
and
data16
jne
repz
and
js
sub
xor
push
insb
addr16
flds
xor
jnp
add
pop
adc
and
push
jnp
xor
dec
shll
stc
mov
mov
push
loope
cmp
jnp
or
pop
xchg
les
add
mov
in
push
ret
in
fcomps
pop
popf
mov
fsub
add
mov
cmpb
inc
push
add
push
and
fildll
in
xor
push
mov
loopne
jmp
mov
fiaddl
out
clc
js
rcl
sbb
es
xchg
cmpsl
inc
mov
sti
push
and
test
pop
test
xchg
sbb
lods
or
sarb
mov
mov
hlt
jg
mov
sub
mov
mov
or
pop
or
sbb
loope
cli
push
cmc
cmpxchg
loop
sub
xor
cld
xchg
cmc
mov
adc
rclb
decb
push
ret
jo
adc
out
sub
jne
push
push
add
outsl
iret
arpl
and
shrl
or
add
adc
push
or
jns
mov
mov
cmp
push
dec
int
jmp
add
mov
cmc
add
mov
loopne
clc
inc
push
and
xchg
and
add
call
lret
pop
mov
mov
fnstsw
lcall
mov
and
repz
and
pop
or
jmp
test
mov
arpl
fcomps
int
inc
mov
call
add
daa
push
subb
outsb
lret
lock
adc
fdivrl
or
pop
gs
lea
nop
ret
jge
adc
and
push
xchg
or
mov
mov
push
adc
nop
push
ja
fst
out
jmp
in
nop
and
jg
sbb
or
dec
cmp
pushl
push
adc
dec
sahf
lret
sbb
push
inc
sbb
inc
or
div
mov
cmp
clc
xor
xor
sub
push
es
add
dec
loopne
inc
xchg
and
in
subl
out
ficoms
and
mov
gs
adc
add
push
push
cltd
aaa
cmc
int
sub
push
mov
mov
adc
movsl
push
pop
je
fldl
jne
pop
cmpl
in
sub
push
cmp
sahf
filds
adc
jne
push
divb
or
jne
or
jne
or
pop
sbb
out
popa
scas
or
or
or
and
jle
movsb
dec
pop
mov
jo
mov
popa
push
inc
inc
loopne
pop
pop
xsave
mov
aam
arpl
test
add
jle
lea
fstl
jecxz
fsubrs
lcall
mov
xor
ret
xor
lea
std
mov
rcr
sbb
mov
adc
jb
sub
inc
add
push
jae
add
sbb
dec
arpl
pop
cmc
sbb
add
jbe
pand
push
fucom
add
aam
adcb
rcrb
mov
adc
test
sti
movsl
dec
movsl
sti
jbe
fisubs
movsb
pop
add
xor
and
add
inc
sbb
sub
mov
mov
filds
fisttps
or
fmull
or
test
mov
mov
xor
mov
or
add
pop
mov
jbe
sbb
loopne
sub
and
adc
and
in
aad
dec
mov
in
mov
in
dec
push
js
add
and
adc
das
push
cs
push
stos
je
and
fcoms
cmp
inc
call
adcb
shr
xchg
mov
inc
sub
out
cmp
adc
xlat
cmp
lods
sbb
xchg
sub
xorl
lahf
pop
xchg
imul
push
test
push
push
xor
push
enter
pop
pusha
test
lret
addr16
mov
test
inc
xchg
movb
mov
repz
xchg
cmp
mov
out
mov
or
repz
mov
push
or
jno
mov
enter
fwait
nop
popa
adc
repz
xor
inc
xor
sub
pop
adc
enter
xchg
out
add
enter
insl
fmull
int3
adc
xchg
imul
fs
fmuls
xchg
mov
or
leave
enter
mov
adc
imul
xor
call
inc
xchg
adc
rolb
imul
dec
mov
adc
xchg
mov
sub
jp
add
dec
and
addb
mov
sub
add
mov
call
loope
adc
stc
or
loopne
mov
pop
cld
ffreep
mov
adc
pop
mov
cli
or
cli
inc
cltd
sub
in
push
jp
sub
mov
scas
shrb
sti
cmpsb
jmp
jg
movsb
push
and
add
movsb
xor
add
add
xchg
add
movsb
pusha
inc
sub
loop
mov
mov
cmp
pop
jecxz
jl
enter
xor
and
adc
inc
test
add
add
mov
or
test
add
add
xchg
inc
dec
iret
adc
jnp
add
test
push
push
movsl
cli
sbb
test
push
or
mov
add
in
dec
jb
out
or
js
rcl
jmp
mov
in
add
add
adc
push
mov
pop
inc
push
das
ret
cmp
lods
dec
pop
test
sbb
fmull
imul
jo
or
sbb
and
ljmp
shl
xchg
inc
call
scas
xor
test
das
movsb
fwait
lods
xor
or
xor
adc
rcl
out
or
mov
dec
jne
xchg
push
and
scas
cmp
pop
loope
adc
mov
mov
leave
inc
sbb
loope
cmp
stc
inc
add
sbb
push
test
into
mov
int3
jo
push
loopne
rorb
loopne
mov
cwtl
mov
push
pop
jle
push
sbb
or
push
add
daa
mov
clc
lods
cmp
fimull
jecxz
mov
cmp
in
lock
lcall
push
adc
add
cmp
lods
imul
push
add
jg
nop
inc
pusha
xchg
inc
mov
lea
xchg
or
imul
fmulp
loope
sub
push
sub
inc
adc
sub
mov
loope
pop
xchg
movsb
addb
decb
fcoms
sti
ret
add
adc
pop
xor
test
sub
or
pop
mov
stos
dec
shlb
push
pop
fstpl
mov
jo
stc
outsb
add
insl
sub
lock
pop
add
cmpsb
sbb
jnp
aad
out
fcoml
clc
pop
inc
dec
dec
adc
adc
mov
add
sbb
jo
mov
pushf
ror
loop
subb
lods
addb
insl
aad
dec
rorl
addl
xor
pop
mov
sub
clc
add
and
push
add
xchg
xlat
add
call
dec
mov
cmp
mov
pop
and
mov
mov
fsubs
add
push
nop
in
inc
mov
subl
stos
sub
popf
xchg
ljmp
xchg
or
push
xchg
sub
dec
sub
test
sti
inc
inc
and
cmp
mov
imul
sti
ret
jnp
mov
mov
add
dec
add
xor
movsb
jmp
movsl
adc
jo
push
test
mov
insl
add
xor
popf
push
and
in
mov
xchg
xor
xchg
setge
cmp
cmp
and
mov
popf
jnp
push
arpl
push
xchg
fldl
dec
inc
jae
rol
xor
cmc
mov
adc
lock
add
inc
sub
test
imul
sbbl
test
jle
mov
out
ds
loop
sbb
sbb
sbb
jns
shr
mov
add
cs
dec
iret
push
inc
repz
cmp
lods
add
push
imul
sub
jne
sbb
pop
int
cwtl
add
mov
loopne
mov
pusha
leave
pop
add
ljmp
adc
mov
sub
push
bound
adc
loop
mov
push
lret
flds
mov
xor
inc
loopne
dec
add
sub
shll
cltd
xchg
push
pop
clc
test
xchg
icebp
cmp
aaa
cmpsl
out
dec
sahf
xchg
lock
adc
add
scas
stos
push
and
and
dec
popa
sbb
dec
fwait
js
enter
pop
cmpsb
xchg
jge
mulb
cmp
xor
or
adc
filds
mov
push
dec
add
ret
dec
dec
xchg
jbe
stos
jp
movsl
jne
cmc
xchg
nop
adc
xor
outsb
sub
push
adc
and
fistpll
sub
repz
fcom
je
cmp
fcompl
pop
sub
push
pop
mov
mov
xchg
add
dec
addr16
mov
add
adc
adc
add
hlt
jp
push
icebp
call
sbbb
aad
add
mov
jg
bound
cs
sub
test
xchg
mov
or
pusha
aam
cs
mov
shrb
das
lret
divl
and
sarl
sahf
jne
das
movsb
inc
fcompl
xor
mov
xor
xchg
xor
nop
pop
xchg
push
loopne
int3
sbb
out
movsb
cmp
push
adc
mov
push
mov
and
test
iret
adc
in
add
rol
add
scas
mov
pop
sbb
addl
mov
or
stos
push
inc
daa
xchg
push
in
push
jmp
and
inc
xchg
es
in
or
je
pop
aas
aaa
cmp
pop
xchg
xchg
dec
dec
insl
aas
inc
push
mov
mov
and
sbb
inc
lods
sub
stc
mov
imul
xchg
lock
jmp
jo
pushl
pop
les
sbbb
inc
cltd
jo
movsl
psrad
cmpb
js
xchg
add
cmp
xchg
mov
outsb
jmp
ja
add
call
sub
repnz
pop
push
test
js
out
fldt
pusha
inc
push
or
cltd
ror
aad
xor
fisubrl
mov
shll
inc
xchg
movsb
repnz
dec
nop
push
repnz
or
push
pushf
pop
mov
pop
xor
pusha
lods
shr
hlt
or
push
cmp
or
and
mov
or
gs
or
xor
inc
movsb
mov
or
or
xorb
push
adc
in
xor
pop
sub
add
and
add
adc
call
int
sahf
mov
nop
pop
fmul
xlat
sub
sbb
aam
je
mov
xchg
sbb
sbb
mov
adc
inc
sbb
and
sub
pop
cmc
sbb
adc
or
loop
mov
mov
add
sbbl
int
addr16
clc
and
add
mov
and
mov
xor
add
mov
scas
mov
and
nop
pushf
je
arpl
aaa
xchg
lcall
adc
inc
push
xchg
cmpl
imul
and
daa
iret
dec
insb
test
and
fiaddl
xchg
xchg
and
sub
sbb
orl
repz
scas
mov
loopne
movsb
pop
cli
jle
lods
add
sub
in
or
mov
sub
shll
fsubrs
pop
sbb
or
and
test
push
xchg
leave
or
in
popa
mov
adc
fisubl
jb
es
cmp
adc
inc
test
mov
sub
mov
cmp
jne
or
sahf
in
into
mov
mov
inc
or
popf
fbstp
testb
adc
mov
or
ret
imul
dec
popa
out
cmp
adc
std
jnp
pop
rclb
faddl
insl
jmp
in
ret
add
add
add
lock
test
or
cmpsl
sbbb
dec
and
mov
pop
loopne
add
sbb
cmp
mov
inc
mov
dec
addb
pusha
add
mov
xchg
xor
xchg
test
testb
push
xor
cmp
std
and
jmp
std
add
push
push
packsswb
sbb
xchg
popaw
in
int3
and
mov
jne
mov
pop
push
dec
push
add
and
rorb
or
or
inc
mov
fnstcw
add
cmp
inc
xor
cmp
and
adc
rcrb
sub
push
add
inc
sub
and
add
jnp
flds
hlt
ss
call
adc
mov
dec
mov
in
enter
jnp
cmp
jne
or
sti
std
push
push
mov
mov
popa
cmp
adc
imul
add
add
andl
sub
add
jbe
xor
push
jecxz
xchg
rolb
mov
inc
adc
cwtl
shll
jp
sbb
xchg
add
or
xor
adc
ss
in
sbb
inc
xlat
jne
insb
insb
inc
std
cmp
inc
cmp
jae
fs
inc
inc
xchg
jecxz
adc
fstps
orps
adc
sbb
inc
adc
gs
loope
add
and
add
mov
mov
mov
mov
push
xor
mov
or
push
cmp
pusha
add
mov
fimull
mov
inc
test
push
xor
fimull
pop
cld
jne
cmp
lea
mov
lahf
outsl
mov
mov
add
adc
jmp
imul
and
sub
mov
sub
test
fiaddl
xchg
jno
ds
clc
dec
ljmp
or
push
sbb
and
jo
mov
push
jne
sub
adc
mov
dec
sbb
dec
shlb
icebp
call
filds
cmp
jne
cmpl
cmp
pusha
clc
std
dec
push
repnz
lret
jl
stos
dec
in
and
xchg
call
testl
std
and
cs
dec
mov
or
inc
rcll
and
icebp
adc
dec
cmc
push
push
sub
fwait
rol
xchg
rclb
dec
sub
xor
insl
sbb
add
or
sti
fnstenv
fxch
adc
in
inc
adc
in
call
mov
sbb
or
mov
dec
mov
test
inc
jl
popa
test
sbb
add
das
imul
je
and
jp
je
insl
sbb
sub
lcall
push
and
je
stc
aas
adc
out
fcmovnu
adc
sbb
pop
dec
mov
push
cmp
inc
jbe
adc
fldz
out
cmp
sbb
xchg
sbb
pop
fsubrp
mov
leave
loopne
bnd
sub
xchg
clc
orl
popl
or
and
add
movsl
pop
and
push
shlb
add
aas
mov
xor
fildll
dec
je
add
and
loopne
shlb
inc
loop
data16
jmp
push
add
ss
jmp
push
jbe
cmp
pop
jmp
push
jmp
add
in
push
or
jge
push
mov
mov
fdivl
xchg
or
sub
pop
stc
push
jmp
push
jmp
ds
sbb
fscale
cmp
xor
pop
bound
mov
push
mov
sbb
fstl
and
or
sub
rolb
sub
aas
or
repnz
lea
btr
loopne
xchg
dec
das
push
movntps
aas
add
push
in
jl
movsb
or
ficoml
mov
shrl
cmp
adc
and
outsb
call
cld
push
ss
mov
adc
mov
xchg
lahf
popf
mov
push
fnstenv
sbb
pusha
sbb
sbb
aaa
repnz
cwtl
and
xor
xchg
movsb
xor
or
mov
xor
push
lods
add
shr
pop
mov
push
fwait
in
push
clc
sbb
lahf
bextr
fsts
xor
shrl
into
push
and
push
sbb
sbb
outsb
fmul
insb
stc
and
or
aas
sub
xchg
clc
add
mull
adc
mov
enter
xchg
sub
sbb
fldcw
dec
mov
push
leave
xor
enter
or
pop
dec
adc
and
sub
wrmsr
add
cmp
xchg
or
push
enter
insb
aas
loope
jl
and
sub
nop
inc
cmp
aaa
adc
movsb
sbb
cmp
or
push
push
pop
jl
pusha
mov
xor
clc
cs
or
push
sbb
xor
jns
out
orl
int
hlt
add
and
iret
repz
aas
dec
pop
imul
iret
repz
cmpsb
mov
shrb
iret
repz
decl
sbb
out
cmp
pushf
dec
sahf
jnp
mov
push
je
out
push
pusha
daa
aaa
jno
enter
push
and
cmp
add
push
lahf
pop
mov
jnp
add
mov
insl
ret
sbb
adc
shlb
jo
pop
fstpt
push
adc
mov
or
imul
sub
inc
mov
sbb
ret
imul
add
add
nop
push
push
jne
pop
aaa
mov
ret
add
add
mov
imul
bound
cmp
ja
fistpl
fs
ss
or
jno
arpl
adc
push
xor
js
sbb
aad
cmp
lods
dec
and
cld
sub
push
xor
add
fs
sbb
loopne
cmp
mov
ret
movsl
or
and
sarb
mov
cwtl
lds
or
out
or
mov
icebp
push
xor
inc
into
lods
push
sub
bound
mov
addr16
or
mov
rolb
roll
aam
jb
xchg
stos
jmp
and
push
add
gs
ss
xchg
psubsb
int3
movsl
fld1
andb
push
xlat
mov
mov
push
int3
dec
movsb
cltd
shll
add
mov
sbb
lock
fisubl
xchg
jnp
or
cmpl
out
adc
mov
mov
popa
xchg
lret
call
sub
pop
dec
pop
ds
or
add
addl
mov
sbb
pop
shlb
dec
mov
nop
sub
daa
and
xor
in
adc
or
pusha
enter
adc
sarl
insb
sub
jb
in
mov
rorb
xlat
sbb
stos
nop
mov
mov
fs
cltd
add
push
and
xor
mov
mov
sub
xor
inc
scas
push
movsl
cmp
push
or
jns
repnz
sarl
ret
sub
xchg
pop
leave
or
jno
add
andl
push
push
shl
loope
or
sarl
andb
push
sarb
push
xchg
jb
sub
xor
push
mov
loop
popa
and
andb
in
xchg
addr16
rcrl
inc
jnp
mov
push
and
pop
and
adc
sub
xchg
out
jnp
dec
push
or
dec
sar
jnp
xchg
cmpsl
mov
rcrb
ret
cmpsl
or
xor
mov
out
ret
jl
pop
test
add
adc
leave
lock
push
add
ffree
push
sub
test
mov
iret
and
dec
and
mov
cltd
adc
and
adc
dec
or
adc
cmpsl
jo
test
mov
push
popa
cmp
add
cmovl
jns
aaa
jp
add
iret
add
adc
mov
test
jmp
adc
add
pusha
inc
icebp
inc
or
je
xor
sbb
xlat
cmp
add
add
mov
mov
or
popa
add
mov
add
mov
and
mov
fs
test
shll
dec
lods
cmpsl
and
add
stos
daa
adc
or
jne
cmp
push
sbb
inc
add
mov
addb
enter
add
cltd
dec
pop
adc
add
les
xor
or
lods
push
push
rcrl
push
and
xchg
daa
std
pop
mov
inc
adc
shll
or
jne
mov
and
mov
pop
adc
nop
or
or
push
scas
or
scas
nop
addr16
cmp
add
and
mov
add
or
add
mov
inc
and
test
pop
push
in
add
or
call
xor
sub
lea
lea
mov
mov
add
insb
nop
jl
test
add
xchg
pop
push
xor
loope
inc
shll
dec
ret
cmpsb
shrl
sub
and
inc
repnz
in
mov
sbb
inc
lods
test
adcl
cmc
mov
push
lds
icebp
adc
inc
sub
sub
outsl
cs
test
or
push
dec
mov
jno
movaps
add
popa
pop
lods
pop
xchg
insb
shlb
cmp
mov
jecxz
add
dec
sbb
add
xor
xchg
sbb
das
add
and
inc
add
sbb
aam
add
ror
dec
inc
sbb
aaa
loopne
out
lods
jmp
mov
mov
xchg
cmp
aaa
fistl
or
adc
mov
sub
ret
test
mov
pop
lea
pusha
mov
cmpb
inc
inc
cmp
orl
sbb
addr16
inc
pop
mov
adc
iret
out
aaa
jno
adc
fwait
jne
jge
cmp
push
pop
add
lock
and
in
orb
or
and
and
mov
push
xchg
mov
mov
test
ljmp
and
loopne
cmpsl
movsl
aaa
or
movb
imul
lcall
dec
loope
pop
data16
dec
pop
inc
rorl
push
int3
and
pop
add
pusha
fadd
sbb
call
pop
cmp
call
and
movsl
and
inc
ljmp
or
jl
mov
jne
fldl
fucomi
push
push
xor
and
xor
push
ret
or
xchg
fildl
sbb
sub
ss
jns
sbb
and
jp
add
cmp
lds
call
sub
push
inc
addl
xchg
push
jge
mov
lock
push
aam
push
jmp
in
adc
test
ja
pop
xor
push
bound
aad
inc
cmp
or
jmp
popa
gs
jno
push
add
adc
pop
and
hlt
fwait
push
ja
add
pop
jg
cmp
jne
push
mov
and
pop
xchg
std
adcb
pop
sbb
hlt
add
scas
popa
popl
mov
lcall
mov
ja
hlt
dec
add
lea
xchg
loope
movsl
test
inc
xchg
xor
mov
add
add
or
loopne
push
shr
mul
dec
js
mov
sbb
imul
iret
testl
stos
or
int
cmp
sbb
es
iret
addr16
adc
mov
push
ret
xorb
lods
aas
loop
shlb
outsl
add
test
inc
adc
jmp
xor
jno
dec
enter
fadds
adc
add
mov
mov
idiv
mov
decb
adc
jl
xor
jmp
cmp
jl
or
sub
pop
jle
adc
jle
xor
jle
and
jg
cmp
je
mov
mov
push
add
inc
jmp
movb
mov
add
scas
cmp
fs
cltd
idiv
and
sbb
ljmp
jno
cld
or
push
sub
cmp
decb
push
sbb
mov
push
sub
fcmovnbe
movsl
sub
and
mov
xchg
jbe
jae
test
or
cmpsb
add
fcoml
sub
mov
mov
or
push
in
je
in
in
in
hlt
incb
test
and
xlat
or
lret
cmp
bound
dec
fdivl
cmp
ret
inc
fcoml
or
and
inc
inc
pop
adc
or
inc
mov
rol
lcall
std
or
repz
pop
push
les
push
pop
inc
adcb
outsb
add
cmp
mov
les
and
pop
jmp
pop
xor
test
mov
push
add
xchg
clc
enter
test
je
pop
add
or
push
daa
int
sub
gs
dec
sub
test
xchg
inc
push
push
and
mov
lods
fcoms
clc
ss
pushf
adc
scas
inc
adc
cmp
jmp
add
jg
push
das
movsl
aad
lret
sbb
rep
mov
sub
or
xor
adc
ret
loop
mov
je
lods
jns
gs
xorb
add
js
mov
sub
or
mov
jb
in
imul
mov
add
sarl
mov
sbb
jae
adc
xor
sbb
in
fsubr
nop
push
fsubrs
mov
inc
push
jge
pop
ja
dec
lahf
mov
aam
and
push
sub
mov
inc
dec
aam
shlb
and
push
fs
and
inc
loopne
rolb
add
out
fwait
sub
in
push
gs
frstor
jns
sub
fs
dec
add
add
inc
es
sub
add
cmp
push
es
mov
add
nop
dec
pop
mov
movsl
or
sbb
js
pop
dec
add
jo
lods
cltd
fs
imul
test
jl
ret
je
mov
fucomp
push
inc
mov
cmp
imul
xor
xor
xchg
mov
add
jge
dec
pop
mov
dec
imul
mov
mov
fsubrs
mov
sbb
add
scas
xor
inc
shrl
xor
nop
jo
sub
pop
xor
push
pop
xor
cmp
dec
std
push
mov
imul
push
pop
dec
in
movsb
fcompl
and
clc
add
fmull
lock
insb
fildl
adc
fildl
mov
mov
lods
test
push
push
push
pop
cmp
pusha
xchg
sbb
pop
push
rol
mov
in
jl
mov
sub
sbb
jae
roll
or
inc
lcall
pop
add
shl
int3
add
scas
imul
xchg
or
loop
test
insb
pop
or
cmp
sbb
enter
or
cmp
push
mov
xor
movsl
or
pop
mov
sbb
push
inc
push
fbstp
mov
mov
les
cmp
test
inc
mov
mov
pop
pop
jge
es
mov
xor
pop
adc
or
adc
mov
xchg
add
nop
insl
enter
ss
add
rorb
lods
popf
shrb
or
lea
lahf
js
rcl
data16
shlb
daa
and
pop
dec
pop
addb
pop
adc
xchg
ret
mov
movsb
hlt
mov
cmp
jmp
sub
add
ljmp
mov
data16
mov
sbb
and
mov
orl
addl
add
jmp
add
adc
add
shlb
add
inc
or
push
push
jo
dec
mov
mov
ds
repnz
sub
imull
movsl
jmp
pop
jg
push
movsl
leave
jp
dec
cmp
imul
dec
jmp
test
sarb
jg
pop
fdivr
mov
das
jmp
jmp
and
and
push
fsubl
in
add
jns
push
punpckhbw
in
lock
sub
pop
adc
imul
mov
pop
adc
shlb
daa
push
das
inc
jo
clc
sub
das
add
outsl
xchg
fsubrs
cmp
ja
bound
mov
inc
pusha
adc
inc
flds
xchg
into
adc
adc
in
movsbl
and
cs
jo
pop
imul
sbb
inc
inc
hlt
movl
fcoms
push
iret
popl
add
scas
cld
xchg
mov
add
pop
test
rolb
push
rcrl
jmp
or
imul
dec
jle
aam
xchg
inc
jmp
pop
pop
daa
xor
mov
cwtl
cmove
jge
cmpsl
mov
push
xchg
test
cmp
jmp
sub
and
dec
mov
rcrl
add
push
orl
shl
adc
cmpb
cmp
jle
xor
cmp
sub
push
sbb
movsb
lcall
xor
jmp
inc
shr
add
add
jbe
pop
xchg
dec
and
and
mov
mov
ret
add
push
add
jne
push
jmp
cmp
push
mov
testb
imul
mov
test
sub
cmp
push
adc
and
adc
aam
repnz
aam
or
xchg
cmc
inc
pop
fistps
push
clts
jo
and
fsubr
adc
les
fmul
int3
inc
dec
jle
popa
adc
and
movl
mov
aaa
push
int3
lds
xchg
cli
and
je
cmp
cmp
sbb
add
cmp
jge
fadd
cltd
lods
cmp
repnz
ljmp
push
push
sbb
xor
adc
adc
pushf
or
and
xchg
bound
adc
push
xor
int3
and
or
aas
test
stos
cmp
sahf
add
and
js
mov
adc
sbb
xchg
movsb
addb
push
lcall
mov
hlt
mov
cmp
and
rorb
xchg
sub
inc
cmp
mov
add
push
test
ds
adc
add
orb
loope
dec
cmp
and
mov
popa
aam
sbb
adc
adc
sub
mov
dec
xor
mov
xchg
sub
lock
test
dec
aam
jmp
daa
dec
cmp
fstps
xchg
cmp
or
lods
jp
rorl
mov
shll
aam
cmp
xchg
sub
push
cmp
inc
cmp
in
cmp
sub
cmc
lahf
push
scas
pop
pop
cmp
adc
xor
mov
sbb
push
adc
subb
push
and
adc
xchg
ss
imul
and
add
adc
add
dec
sub
rorb
inc
jne
cmp
lods
push
rclb
inc
jbe
inc
ss
in
aad
movsl
add
jle
pop
add
mov
push
test
add
dec
jecxz
push
jne
mov
mov
lods
dec
cmp
or
dec
ja
push
fidivrl
jb
and
xor
mov
addb
test
push
and
shlb
and
adc
inc
dec
ret
bound
xchg
adc
push
loopne
mov
jbe
add
jo
movsl
shrl
das
imul
cmp
mov
dec
jns
ret
dec
or
xor
mov
mov
jno
add
xlat
aad
faddl
leave
nop
pop
and
loopne
or
lods
and
call
add
push
inc
movsb
and
mov
add
pop
movsl
in
les
mov
sti
xchg
jg
nop
dec
add
or
sbb
or
xchg
orl
pop
dec
jbe
xchg
fwait
mov
sbb
sub
cmp
dec
mov
xchg
xor
xor
aam
push
adcl
mov
inc
rcll
ret
adc
shrl
adc
fsubs
push
xor
sbb
mov
or
xor
mov
ds
out
push
mov
rcl
jbe
jno
mov
adc
add
and
lea
aam
adc
jp
inc
dec
jno
ret
push
jne
mov
cmpsl
gs
pop
and
cmpb
inc
and
add
clc
imul
movsl
subl
cmp
mov
adc
gs
inc
dec
dec
xor
stc
and
xor
adc
or
pop
mov
mov
push
add
pop
xor
push
xchg
popa
mov
lods
loop
add
xchg
mov
mov
orb
push
int3
add
mov
lods
and
cmp
xchg
sub
or
pop
mov
xchg
mov
fwait
mov
pop
pop
sub
add
xchg
and
or
push
push
dec
call
daa
push
adc
xor
jbe
loope
mov
je
cmp
icebp
cmp
jne
bound
js
test
or
pusha
ljmp
test
orb
xchg
rclb
pop
in
pmaxub
aas
mov
out
lds
mov
push
add
and
pusha
ja
cltd
jb
or
imul
pop
js
dec
shll
dec
and
add
addb
push
and
clc
outsl
or
addl
cmp
mov
dec
sbb
lods
and
mov
or
sub
cmp
roll
sub
push
lret
std
add
jae
mov
and
call
mov
rclb
mov
jmp
aaa
out
std
sub
jno
mov
and
idivb
clc
xchg
gs
push
fsubrl
cwtl
loope
xor
mov
adc
hlt
iret
jle
xorb
sub
lea
add
sub
mov
pop
mov
add
in
push
adc
movsl
arpl
mov
sbb
pop
push
pop
iret
aad
sbb
mov
mov
bound
mov
xchg
xchg
adc
enter
pusha
pop
sub
xchg
aam
lock
loopne
scas
push
aad
lods
and
pop
push
pop
aad
lock
push
sub
pushf
add
fwait
add
jne
rolb
mov
xchg
int3
xor
movlps
sub
test
les
dec
sub
imul
imul
sub
xchg
addl
inc
sub
sbb
test
icebp
cmp
push
pop
mov
mov
push
cmp
ret
jo
and
pop
adc
or
push
push
adc
xor
fnstsw
cmp
jo
or
add
popa
push
cs
lcall
jb
and
and
repz
and
rcll
or
push
dec
aam
xorl
sbbb
jno
int
pop
call
sub
je
pop
or
test
pop
lret
push
mov
inc
adc
pop
xchg
pusha
or
inc
dec
add
insb
loope
insb
sti
sbb
movsb
mov
cmp
enter
lret
pop
sub
push
addb
mov
push
and
cs
mov
cmp
cmp
lret
add
stc
push
lock
in
push
lea
sbb
mov
push
add
mov
aaa
pusha
pop
add
orl
loope
fcmovu
arpl
mov
outsb
les
movsb
stos
xor
fbstp
dec
fadds
mov
sahf
fidivs
movsb
or
cmp
jmp
xor
enter
es
sbb
shlb
push
xor
cli
cmp
adc
shrb
jae
movsbl
sbb
mov
repz
or
inc
mov
popa
add
insb
jmp
pop
or
or
ss
rsm
push
dec
iret
nop
or
in
and
into
or
cmp
or
sbbb
or
fcoml
inc
bound
js
pop
jbe
or
mov
or
adc
cmp
or
or
xchg
add
mov
pushf
pop
dec
xor
sarl
sarl
and
inc
sub
psrad
xchg
and
cmp
lods
fisttpl
int
adc
pop
inc
ds
mov
adc
dec
movsb
roll
out
shll
cmp
or
repz
xor
push
dec
ja
adc
ret
adc
ret
addps
fstpl
jmp
adc
and
xor
mov
xchg
mov
or
lods
int3
xchg
out
mov
pop
mov
push
lods
adc
adc
in
lods
xchg
cmp
pop
adc
pop
push
add
cmpsl
or
dec
ja
add
rorb
sbb
adc
ja
in
add
or
push
sbb
rclb
adc
les
xlat
sub
jb
cmp
dec
js
in
mov
jnp
push
push
pop
or
jbe
adc
pusha
sub
xor
sbb
xor
adc
push
int3
adc
or
xchg
push
mov
and
pop
lret
je
push
xor
ret
imul
dec
jmp
aad
cmp
xchg
fstps
mov
pop
sub
cmp
adc
pop
push
insl
jmp
cmp
mov
add
xor
adc
out
fldt
or
fdiv
xchg
jno
leave
out
data16
and
or
sub
fs
mov
sar
mov
pop
push
in
and
add
adc
mov
fsubrp
int3
pop
add
add
push
mov
jp
sub
push
jbe
or
enter
and
xor
and
or
ss
and
mov
adc
and
data16
cwtl
orps
fmull
imul
or
push
xlat
es
imul
push
test
loop
mov
push
adc
dec
cltd
sbb
sbb
scas
inc
push
push
mov
pop
jb
iret
fstps
nopl
rclb
daa
int
sub
cmp
jnp
and
mov
mov
sbb
jg
int3
dec
je
push
leave
mov
dec
and
sub
and
add
cmp
adc
je
cwtl
test
cmpsb
in
ljmp
or
lods
or
add
jo
subb
sub
mov
sarb
push
cltd
mov
mov
mov
rcrb
les
into
mov
dec
es
test
dec
jo
mov
jo
imul
xor
mov
stc
or
mov
push
mull
inc
je
jge
inc
add
shrl
mov
adc
addb
add
adc
lods
mov
inc
add
xor
ljmp
pusha
movsb
mov
shr
int3
mov
jne
jg
orb
and
push
sbb
nop
add
sbb
push
popa
add
add
addl
adc
cmp
add
push
adc
fs
or
sub
pop
ret
insb
dec
mov
jne
cld
rclb
add
cmp
sbb
or
mov
into
mov
or
or
xchg
clc
sti
addr16
inc
pop
jo
add
lods
cld
lret
mov
add
and
negb
sub
cltd
sbb
mov
inc
cwtl
loope
add
mov
sbb
scas
lock
and
add
inc
leave
push
pop
jb
xor
lahf
xchg
sbb
call
mov
enter
incl
xor
ja
add
sbb
mov
and
fdivrp
insl
dec
test
sbb
gs
cmp
pop
ljmp
sbb
jp
mov
cmp
in
out
push
or
pop
ret
xchg
push
or
add
xchg
sbb
int3
or
ds
movsl
int
dec
dec
stos
mov
mov
pop
pop
ds
sbb
xlat
ja
and
jg
sbb
repnz
popa
mov
inc
jmp
mov
gs
into
outsb
sbb
push
pop
inc
mov
mov
mov
dec
pop
bsf
or
ja
sbb
loopne
push
or
sub
and
dec
cltd
xabort
subb
movl
sub
js
push
pop
aas
test
push
cmpl
cwtl
aam
popa
add
test
jle,pt
push
pusha
in
inc
cmp
jb
jmp
xchg
cmp
ret
fdivs
rolb
ds
sub
inc
push
ljmp
loope
sbb
dec
out
ret
sbb
push
adc
mov
stos
mov
jae
inc
call
ljmp
mov
pop
xlat
sbb
loopne
dec
shl
cmp
inc
and
je
adc
mov
pop
jl
or
out
cmp
test
push
int3
jle
pop
das
dec
test
xchg
js
mov
bnd
pusha
add
cmp
or
ja
adc
or
sub
mov
lds
dec
mov
adc
out
sbb
and
rolb
pop
pushf
adc
or
outsl
xor
cs
push
loop
inc
push
arpl
mov
shl
dec
push
push
gs
inc
cmc
xor
fucom
push
dec
mov
aam
stc
push
fadds
pop
mov
data16
imul
or
xor
sub
hlt
ret
push
cmp
pop
mov
adc
aas
roll
es
xor
push
fs
add
pushf
lahf
pop
pushf
pushf
ret
std
je
push
inc
adc
push
dec
dec
add
add
and
ret
loopne
ljmp
std
pushf
lret
insl
sub
imull
movsb
adc
cmpl
jge
pop
xchg
mov
push
xlat
stc
mov
stos
sub
insb
add
cmp
fisubrs
rclb
mov
lret
test
mov
cmp
mov
roll
push
cmp
int3
mov
xor
xor
in
bound
popa
and
mov
fsubl
xchg
notb
rorb
aam
dec
mov
push
into
mov
jmp
scas
cmpl
daa
loopne
jb
xor
popl
frstor
and
or
fisubs
les
mov
mov
mov
add
pop
lea
clc
dec
mov
aad
mov
pop
jecxz
andl
sub
lea
lds
mov
push
les
push
add
dec
aam
pminub
rolb
cmc
incl
add
enter
mov
movsb
and
and
add
faddl
mov
xchg
aam
jl
or
cmp
aam
bound
dec
push
in
sbb
fadd
pop
pop
push
push
ret
sahf
inc
add
or
jp
inc
xor
ret
and
push
das
inc
sbb
movsb
insl
in
in
gs
in
loopne
arpl
imul
sbb
sbb
movsl
sub
enter
ret
add
imul
addr16
orb
ja
and
in
out
push
aam
lods
dec
addr16
test
call
or
enter
lret
call
push
mov
and
push
add
loope
adc
sub
cmp
inc
or
mov
or
sbb
adc
push
sbb
pop
dec
adc
cmpsb
repz
dec
mov
and
adc
out
dec
pop
dec
sahf
orb
cs
insb
pushf
and
mov
mov
dec
push
fstpl
xchg
shl
cmp
jecxz
cwtl
inc
dec
push
adc
pop
adc
inc
in
movsb
sti
xchg
jl
pushl
orb
inc
inc
out
andl
pop
daa
xchg
dec
sub
sbb
les
movsb
xor
lcall
sbb
push
rclb
out
push
push
inc
cmp
xchg
and
adc
and
popf
das
adc
inc
imul
out
popf
sbb
rolb
add
inc
andl
iret
mov
jne
push
call
adc
fs
or
shll
pop
mov
in
or
and
adc
fldl
daa
popa
xchg
fcoml
jns
lcall
or
jmp
mov
call
inc
sbb
cld
xchg
xchg
test
mov
iret
dec
add
or
in
movsl
push
test
jmp
call
push
mov
faddl
dec
and
cmpsl
inc
pop
jmp
sbb
xchg
cmp
inc
or
xor
ret
pop
pop
cmp
test
adcl
jno
js
cmpsl
push
add
pushf
cmpsb
mov
or
out
add
test
jb
pusha
add
lds
inc
add
int3
and
enter
orl
fdivl
pop
rclb
js
lock
jo
or
lea
loopne
pop
iret
mov
jbe
js
add
or
adc
cmp
dec
pushf
pushf
pushf
mov
add
faddl
mov
add
test
push
movsl
xchg
push
data16
inc
add
addl
or
inc
arpl
and
je
loope
and
adc
fcomip
jne
inc
mov
mov
inc
or
or
inc
rcll
adc
popa
or
lods
push
push
sbb
repnz
push
adc
and
push
adc
or
lret
jge
push
push
sbb
mov
mov
push
add
push
add
jns
lahf
movsl
dec
mov
adc
sub
or
outsl
je
and
jmp
int3
out
enter
ret
inc
int3
shlb
and
xchg
scas
jne
pop
and
sbb
pop
and
shll
inc
xor
lcall
and
adcl
xor
add
push
mov
out
les
and
sub
push
daa
movsb
mov
sub
cmp
icebp
add
inc
mov
pop
out
inc
hlt
push
or
push
aam
shl
push
call
push
sub
inc
push
push
sbb
aad
sbb
daa
or
push
pop
fs
dec
test
das
rep
popa
std
ss
and
mov
xchg
dec
fmul
xor
fdivrs
lcall
or
out
aad
add
adc
lods
test
inc
sbb
pop
addb
lea
push
ret
jnp
mov
xchg
aam
test
test
dec
scas
xchg
std
repz
mulb
mov
mov
aaa
jge
movb
cmp
jae
shlb
insb
std
ja
sbb
imul
aas
idivl
ja
je
popa
andb
jnp
jbe
mov
sub
pop
dec
call
sbb
pop
mov
movsb
cli
push
pushf
idivl
mov
or
jnp
dec
sub
push
push
push
inc
push
and
mov
add
dec
add
neg
pop
mov
mov
cs
out
mov
sub
jmp
xorb
or
jne
cmp
sarb
add
pushf
sbb
xchg
add
int3
daa
adc
jo
mov
add
mov
call
leave
pop
inc
pushf
or
and
aaa
jns
add
inc
movl
sbb
into
pop
clc
mov
shlb
sbb
push
mov
enter
loopne
cmp
jmp
add
and
or
arpl
in
ljmp
sbb
fidivrl
dec
insb
sarb
shrb
xor
jg
push
inc
sub
adc
cmp
add
mov
push
inc
aaa
xchg
in
inc
ss
les
inc
xor
add
jne
add
shll
lods
inc
adc
enter
test
or
push
ret
fidivrl
sbb
mov
push
mov
aaa
sarl
mov
jle
add
jp
mov
es
js
sbb
pop
xchg
nop
call
and
mov
jne
mov
dec
or
jmp
mov
jge
ljmp
mov
por
subl
adc
sbb
movsl
mov
cld
inc
jnp
andb
push
sub
loope
addl
fiadds
sub
repz
xchg
or
call
or
xor
fwait
xchg
mov
pop
dec
mov
out
jmp
jmp
push
out
in
cmp
add
sub
sbb
lret
jle
push
push
push
push
call
cmp
inc
push
dec
mov
sub
push
andl
sahf
mov
add
jmp
loop
rorl
jecxz
add
shll
inc
rcl
dec
jmp
add
push
or
test
adc
inc
jecxz
or
cmc
shll
add
add
push
lahf
mov
les
mov
movsl
adc
jp
lcall
push
mov
dec
cs
mov
add
or
push
push
jmp
movsl
mov
jne
add
or
dec
fcomip
incb
stos
int
sub
cmp
or
mov
aas
push
mov
inc
mov
nop
ja
rolb
dec
rolb
dec
add
shr
push
push
and
test
adc
mov
push
push
push
sub
xor
js
xchg
enter
sbb
mov
scas
push
or
insl
shl
rol
cmc
fdivp
mov
mov
pop
dec
inc
or
push
xor
cli
mov
adc
adc
mov
add
cmp
out
cmp
pusha
popa
negl
adcl
cmpsb
sbb
cmp
mov
or
push
jne
outsl
push
push
cmp
out
sub
ljmp
std
mov
sbb
sub
or
je
icebp
ja
mov
inc
mov
sbbb
cli
cmp
adc
adc
in
add
jg
loopne
add
aam
inc
cmp
push
inc
pop
push
mov
inc
cmp
push
dec
movb
or
cli
xor
cmp
mov
imul
stc
inc
cmp
mov
sbb
lret
add
cmp
and
cld
mov
iret
inc
inc
into
adc
add
jae
pop
fwait
stos
pop
pop
mov
sti
pop
ss
jle
movsl
movsw
push
cld
movsb
mov
or
lods
or
sti
cmpsl
pushl
or
or
mov
inc
inc
cmp
jle
cli
repnz
ffreep
subb
jmp
lea
or
jg
push
add
jl
pop
adc
push
mov
out
pop
lret
add
movsbl
xor
cmp
xor
stos
ss
push
inc
xchg
out
shrb
adc
and
push
cld
inc
cwtl
jnp
je
push
push
jo
shrl
xor
sub
jp
and
mov
pop
xchg
jo
rcrl
push
xchg
jne
outsl
outsl
jge
clc
xor
mov
or
subl
or
fs
or
mov
sub
cmp
jl
adc
sbb
repz
mov
ljmp
js
cltd
cmpl
mov
mov
loope
sbb
cmpsb
adc
ja
add
adc
inc
ret
push
adc
mov
mov
sahf
xor
js
ja
adc
mov
sbb
fildl
dec
push
add
leave
leave
leave
add
leave
pop
or
or
jnp
out
out
or
jbe
jmp
or
addr16
out
por
jmp
adc
pop
adc
push
out
out
adc
dec
adc
dec
adc
aas
out
out
pop
jmp
sbb
xor
jmp
out
out
sbb
es
and
pop
out
out
pop
jmp
and
or
jmp
add
fimull
push
les
mov
movsb
or
sbb
push
lods
out
cld
mov
cmp
repz
mov
ret
lret
repz
repz
fucom
out
repz
in
icebp
idiv
add
add
push
jns
out
and
sub
sahf
out
inc
inc
dec
push
lahf
std
ja
push
or
add
and
or
or
test
decl
movups
adc
adc
push
pop
sbb
sbb
sbb
push
pop
and
and
aas
inc
gs
push
or
pop
enter
jle
cwtl
test
inc
add
xor
pop
nop
or
shl
loope
jg
add
idivl
mov
je
pop
jne
jge
or
xor
mov
jae
into
push
push
shr
xchg
sbb
pop
loope
aas
xchg
cmpsb
xchg
shll
sahf
sub
inc
mov
sub
sub
mov
jecxz
mov
inc
cmp
jbe
dec
mov
ret
push
cmp
adc
dec
inc
inc
inc
rcrl
lea
pop
sbb
push
jmp
inc
push
or
lods
push
gs
pop
pop
jns
mov
mov
push
sub
sub
insb
imul
mov
xchg
add
and
add
and
cmp
dec
or
lret
loope
xchg
inc
enter
inc
sub
push
clc
cmp
sti
add
add
nop
addr16
sub
adc
jo
adc
les
sbb
push
dec
je
push
inc
sahf
inc
mov
add
push
sbb
arpl
cmc
inc
mov
mov
xchg
mov
add
sbb
add
dec
or
add
daa
je
mov
mov
adc
and
leave
pop
add
ret
xor
blcmsk
or
in
dec
xor
lahf
shll
and
fmuls
jmp
orb
addr16
sahf
adc
cmpsl
in
add
xchg
call
xor
sbb
shl
jno
pushl
fldenv
sub
dec
insb
fstl
sub
adc
xor
xchg
mov
test
pop
mov
xor
andl
xchg
aaa
repz
test
sahf
ss
cli
pop
aaa
loope
inc
pop
loopne
filds
cmp
or
das
sbb
or
xor
insl
idiv
jmp
mov
jne
and
add
outsl
sub
add
fdivrs
jo
ss
pusha
jo
movl
in
movsb
mov
test
inc
add
fcompl
cmpsl
loopne
pop
pop
loopne
lock
mov
mov
xchg
push
testl
shlb
je
dec
sahf
push
sbb
jo
lahf
cld
push
clc
popa
fadds
inc
xchg
fcomp
into
mov
sbb
push
xor
cmp
adc
ficomps
or
add
add
rorb
inc
dec
or
pop
dec
inc
lcall
inc
loopne
cmp
xor
aad
sbb
dec
inc
pop
outsl
and
icebp
aam
lods
je
fnsave
xor
movsb
repnz
or
insb
pop
mov
adc
and
subl
xchg
dec
ds
pop
ret
and
xchg
sbb
jo
push
xchg
and
cmp
clc
add
ret
or
mov
test
and
push
js
andl
dec
mov
add
xor
pop
or
loop
sbb
adc
pop
add
test
inc
sub
mov
sub
add
or
stc
sahf
test
pusha
push
xchg
fistl
add
inc
or
xchg
in
jp
addl
lods
or
pop
ljmp
xor
pop
mov
out
or
add
mov
sbb
mov
push
jg
push
jmp
cli
and
push
adc
push
pusha
dec
addr16
in
inc
enter
gs
mov
adc
leave
scas
icebp
sbb
adc
xchg
es
xchg
and
pop
push
stos
push
cs
scas
pop
jecxz
out
lods
rclb
sub
test
jl
das
add
cmp
lret
xor
inc
test
fadd
add
aam
incl
sbb
cs
sbb
mov
add
pop
adc
arpl
sar
cs
addr16
sbb
sti
push
divb
punpcklwd
daa
push
in
rolb
mov
pop
dec
aas
pop
popa
adc
popf
popf
xor
xor
xchg
fmull
or
nop
ret
leave
mov
daa
xchg
or
xor
pushf
sub
or
loopne
adc
add
repz
push
cmp
lods
aaa
add
test
ret
std
sub
push
nop
loopne
mov
adc
fsubs
adc
dec
fdivrl
and
add
outsl
loopne
mov
pop
mov
adc
add
imul
pop
xchg
nopl
pop
inc
xchg
jp
cld
sub
repz
subl
inc
jbe
out
add
add
or
insl
xchg
xchg
cmp
lods
push
aad
or
shlb
mov
nop
xchg
push
and
test
jne
das
imul
andl
jmp
and
adcl
icebp
scas
cmp
dec
adc
leave
push
mov
pop
in
xchg
loop
in
inc
arpl
or
mov
decb
jnp
xchg
or
ds
inc
cwtl
cmp
loop
jnp
in
cmp
inc
rolb
and
les
enter
sbb
fwait
sarb
mov
es
in
cmp
nop
xchg
inc
call
push
cmp
lock
hlt
inc
push
push
mov
enter
add
or
movsb
jb
adc
mov
pop
and
orb
adc
out
test
sbb
fs
or
inc
incl
xor
lock
aaa
loope
lar
pop
pop
add
ret
cltd
mov
sub
or
jbe
or
sbb
or
xor
jl
sub
lea
cmp
mov
add
fldl
push
or
nop
out
mov
sbbl
push
mov
outsb
std
jmp
lcall
inc
and
ret
adc
outsl
lock
jecxz
pop
jl
jmp
out
ret
adc
ret
xchg
sbb
mov
push
sahf
mov
ret
mov
cmp
je
data16
jge
inc
insl
dec
in
rcl
or
push
shl
push
mov
in
rcl
rorb
stc
sub
mov
pop
das
sub
daa
insb
je
js
pusha
pop
mov
sbb
gs
jmp
fwait
ss
xchg
fsts
sub
or
lods
sub
sub
jns
mov
cmp
push
sbb
add
cs
jge
push
mov
hlt
cmp
jl
cmp
jle
mov
dec
movsl
add
sbb
pop
in
inc
xor
leave
xchg
movsb
adc
mov
xor
mov
cmp
ret
pop
add
push
sub
push
add
ds
movsb
lock
add
adc
adc
js
add
pop
das
sbb
inc
pop
inc
cmpsb
push
jbe
pop
movsl
push
xor
lahf
or
mov
push
bound
pusha
cmp
cmp
push
js
cli
inc
push
adc
mov
sahf
or
jg
dec
xchg
sbb
nop
fdivrl
into
pop
and
sub
and
insb
dec
aad
mov
or
repz
sub
dec
outsb
popa
mov
ficoms
or
cmp
mov
pop
pop
mov
dec
ret
jmp
and
sbb
sbb
xchg
push
pop
rcll
xchg
std
bound
xchg
idivb
jns
pop
xchg
adc
call
movsl
lahf
inc
or
mov
sbb
push
in
repnz
in
push
jg
test
xorb
cld
inc
lock
je
xor
jne
push
js
and
lret
mov
adc
cli
add
jle
mov
xchg
mov
mov
fisubl
popf
lods
inc
mov
les
push
pop
mov
out
xor
xorl
adc
cltd
mov
add
jno
sub
inc
jne
shlb
adc
rcrb
jmp
xchg
imul
scas
xor
push
jmp
sbb
push
sub
add
or
jne
xlat
jmp
inc
pop
pop
pop
enter
mov
xor
rorb
cmpsb
test
cmp
xchg
cmpl
push
mov
lahf
into
sub
mov
dec
add
dec
or
sub
mov
add
rcll
add
aaa
pop
xor
repz
lods
sbb
loope
scas
cltd
or
frstor
adc
adc
and
ja
xchg
mov
aas
push
push
cmp
or
popa
nop
xchg
or
and
jo
xor
repnz
inc
pop
sbb
or
xor
cmpsl
mov
ss
jae
add
imul
xor
and
or
adc
sbb
mov
sbb
mov
jle
aaa
jne
sbb
std
decl
gs
mov
sub
add
add
pop
lea
xor
cmp
cwtl
jl
add
sub
and
cmp
add
xchg
ja
xor
mov
push
sbb
stc
in
pop
mov
adc
mov
and
and
into
cmp
jl
jbe
or
xor
jne
aas
fldl
aam
jl
cmpsl
mov
scas
pusha
insl
sbb
add
pop
les
and
lds
cmpl
rolb
or
lods
sub
push
pop
cmc
add
push
push
cmp
and
cmp
adc
ret
lds
pop
push
jg
inc
xor
inc
and
sub
push
mov
add
mov
push
loope
sub
mov
stos
sbbl
mov
lahf
shr
sbb
xor
shl
lods
mov
test
push
in
arpl
xchg
fcmovu
sahf
pop
loope
popf
loopne
push
ret
and
add
in
and
repz
push
aaa
enter
jp
pusha
int
push
mov
push
push
jne
inc
leave
fstps
push
sub
jne
sbb
or
test
nop
addr16
xor
inc
pusha
sub
arpl
movsb
xor
mov
sbbb
dec
pop
jnp
lea
inc
inc
or
daa
push
dec
fmulp
inc
push
inc
enter
pop
sbb
lea
push
xor
cmp
cmp
push
enterw
int3
xchg
mov
pop
sbb
xchg
aad
lock
cmp
pop
fwait
sbb
xchg
mov
fsts
add
mov
clc
cmpsl
jle
mov
cmpl
ds
movsb
cmp
and
cmpb
xor
es
js
mov
faddl
fstl
fldz
fcomp
fnstsw
addl
int3
fldl
fsubr
pop
faddp
cmp
push
ds
and
inc
mov
jno
or
inc
or
xchg
into
inc
pop
mov
or
push
push
repnz
push
fadds
mov
pop
hlt
inc
pop
es
hlt
pop
hlt
dec
push
push
cli
jl
cmp
jl
ret
push
lea
jge
jmp
loop
push
xor
lock
ja
xor
mov
ret
lea
mov
in
gs
sub
movl
sbb
pop
mov
jnp
cltd
mov
add
or
xchg
inc
sahf
and
rorl
add
aam
nop
sarb
in
xchg
je
fsubs
and
jne
inc
jecxz
stos
int
mov
je
inc
mov
insl
fcomp
fadds
pop
adc
inc
or
ja
push
aaa
mov
fldl
inc
push
popa
data16
test
jp
mov
mov
test
mov
repz
in
loop
inc
les
fimuls
enter
loopne
jge
rcll
int3
loopne
shr
dec
mov
inc
cmp
cmp
in
out
inc
addr16
push
pop
pop
std
pushl
inc
and
dec
push
xchg
sub
inc
cmp
dec
lock
rclb
movl
inc
es
add
fldt
xor
data16
xlat
inc
pop
test
fistpll
cmp
dec
lcall
inc
add
sub
movsb
cmp
dec
out
and
insb
or
or
xchg
dec
lahf
inc
push
lods
fistl
push
dec
mov
mov
or
sbb
movsb
aam
push
or
and
or
jo
mov
cmpl
je
ret
xchg
xchg
mov
mov
xchg
jno
jecxz
popf
mov
jge
and
dec
fsincos
push
adcb
sub
add
imul
data16
mov
jo
add
push
loopne
fwait
aaa
add
popa
push
aad
add
or
sub
push
sbb
add
push
or
push
imul
aam
sbb
add
div
dec
repnz
mov
lods
adc
mulb
dec
sbb
push
loope
sbb
sbb
xchg
test
pop
adc
sub
arpl
mov
insb
pushf
xor
push
push
mov
pop
dec
and
imul
out
or
pushf
add
mov
mov
mov
sub
push
sub
jae
or
or
in
lods
xchg
mov
call
gs
or
movsb
or
xchg
data16
pusha
rcl
pusha
push
pusha
or
dec
out
add
clc
sbb
jmp
add
jno
pop
push
pop
sbb
jne
mov
pop
rsqrtps
ret
jge
cmp
ret
and
or
mov
mov
rcrl
pusha
or
inc
add
dec
loope
xchg
adc
pop
adcb
aam
inc
js
pop
push
pop
ja
jg
idivb
pop
sbb
pop
xor
push
inc
pop
xchg
ret
xchg
adc
repnz
pop
mov
push
lds
dec
or
or
sarb
jno
lret
mov
ja
jae
andl
lds
push
pop
adc
fcomps
ret
stos
cmp
movsl
pusha
sub
addb
shrl
pop
mov
xor
xchg
push
push
out
add
iret
movsb
push
data16
loop
mov
jb
out
jg
and
imul
mov
jbe
push
xor
adc
insl
test
cltd
inc
mov
jbe
mov
add
cmpsb
mov
xchg
popa
pop
fpatan
sahf
test
bound
cmp
dec
mov
les
faddl
mov
jle
xchg
or
inc
cmpsl
call
or
add
or
insb
xchg
out
adc
pop
mov
and
mov
addb
mov
push
xor
inc
loop
pop
shrb
sub
iret
call
mov
xor
shll
inc
mov
lock
mov
jb
adc
int
sbb
out
mov
pop
inc
mov
inc
fbstp
mov
pop
xchg
ret
cmpxchg
and
ljmp
sub
out
in
ljmp
mov
xchg
add
cmpsl
cmp
push
add
jmp
add
daa
nop
int
test
add
and
or
stos
adc
test
in
xchg
loope
enter
lock
enter
daa
ret
rcrb
xlat
inc
pop
jne
sbb
daa
daa
roll
bswap
rcrl
push
ss
pop
dec
js
mov
in
outsb
or
mov
inc
xchg
push
mov
fwait
mov
aam
push
add
loope
test
int3
jnp
dec
dec
xchg
sbb
lea
andb
inc
shr
mov
cs
bound
sub
sub
frstor
pop
pop
or
add
push
jmp
imul
fmull
add
cmp
or
add
inc
daa
hlt
pop
repnz
ficoms
or
dec
or
mov
push
or
sbb
jo
add
rcll
ds
add
cmp
dec
jo
jnp
xchg
cmp
xor
push
inc
sub
sub
in
test
lret
aam
jo
cwtl
jbe
xor
inc
adc
mov
pushf
push
mov
aas
jo
loope
movsb
cmp
nop
pusha
dec
mov
dec
decb
shl
mov
jge
push
in
dec
inc
xor
jg
add
movsb
test
inc
jmp
inc
stc
into
popf
testb
xorl
mov
rorb
outsl
jecxz,pn
mov
xchg
pop
test
ficoml
adc
xchg
test
aad
repz
je
push
adc
stos
test
jmp
popa
jmp
fs
rolb
ret
sbb
push
xor
xlat
call
xchg
shlb
sbb
xchg
lock
and
push
shlb
dec
rcr
lock
mov
and
xor
sub
add
pop
test
test
arpl
adc
push
adc
jnp
inc
add
shll
hlt
push
xchg
pop
or
push
sbb
or
jae
push
jp
or
mov
dec
rcll
lock
xchg
pop
lret
sbb
scas
mov
jle
push
adc
push
xchg
mov
mov
cltd
shrb
insb
xchg
cmova
or
pop
add
test
in
cli
shll
mov
mov
adc
xchg
dec
loop
sub
call
movsl
roll
cmpsl
pop
xor
repnz
cmp
mov
push
das
push
jg
add
sbbb
jae
nop
rorl
pop
xchg
pop
jmp
cld
xor
inc
xchg
or
push
incl
sbb
or
in
jnp
pop
add
add
sub
dec
or
mov
add
fnsave
jge
fistl
ds
cs
add
ret
jecxz
mov
adc
cmp
lahf
mov
lea
or
jge
orb
imul
testl
fsubrs
shlb
dec
ret
mov
in
ss
push
or
sub
bound
xchg
test
add
mov
lea
incb
fistpl
cmpsl
dec
js
das
xchg
pop
dec
push
inc
inc
sub
xor
inc
inc
dec
xor
mov
test
insl
push
call
xchg
in
or
es
push
adc
mov
scas
add
lret
dec
sub
mov
inc
or
ret
ret
imul
add
mov
push
mov
add
int3
cmp
pusha
jo
aas
or
xor
dec
int
cmovo
push
inc
inc
pop
or
andb
cmpsl
adc
sub
xchg
push
inc
mov
xlat
pop
cmpb
fadd
aam
std
arpl
ja
push
or
adc
pop
out
cwtl
add
dec
repnz
pusha
pop
add
pop
imul
push
sub
and
sub
xor
mov
add
or
pushf
mov
jno
inc
cmp
sahf
adc
mov
dec
lcall
xchg
loopne
and
and
jo
push
xor
mov
dec
out
clc
stos
mov
js
rcll
arpl
cmpsl
xchg
jo
shlb
inc
loop
push
pop
data16
lcall
mov
mov
icebp
jmp
cmp
sub
inc
sub
sub
xlat
jl
stos
movsl
mov
popa
aad
sbb
les
jmp
push
pop
xchg
in
mov
xchg
dec
rclb
or
out
aam
rcrl
push
adc
push
sub
jb
jge
movsl
test
mov
fisttps
dec
mov
fmuls
inc
mov
enter
inc
or
and
lahf
cli
lret
adc
int3
mov
cmp
push
fcomps
outsl
mov
arpl
insl
inc
cli
add
imul
sbb
push
idivl
mov
mov
stos
hlt
andb
mov
and
dec
add
jo
sbb
xchg
cmp
cmc
cmp
inc
fmuls
dec
nop
sub
sub
cmp
and
loopne
pop
nop
mov
sti
add
nop
lahf
push
je
push
or
loopne
mov
cmc
inc
push
xor
jp
in
arpl
dec
wbinvd
call
sub
pop
daa
jo
rcl
les
clc
ret
adc
mov
data16
or
mov
lcall
cmp
adc
mov
popf
inc
in
and
mov
add
and
inc
test
testb
test
push
cmc
dec
and
gs
dec
sahf
hlt
push
cli
push
ret
ss
loop
mov
loope
sbb
test
dec
dec
mov
inc
sbb
add
add
xchg
and
adc
mov
lods
pop
test
sub
nop
mov
test
inc
push
add
pop
or
mov
jnp
test
test
lds
sarl
add
pusha
sbb
les
xor
nop
add
clc
movsb
push
insb
add
daa
in
cwtl
dec
mov
cmp
sbb
inc
inc
adc
push
sub
mov
inc
add
and
pop
mov
mov
mov
xchg
or
lcall
dec
xlat
hlt
xor
orb
jge
mov
hlt
andl
aaa
cmp
pop
incb
test
xchg
cvtdq2ps
add
nop
sub
jne
mov
sub
xchg
lahf
jo
cmpsb
add
mov
lea
ret
push
pushf
push
lds
add
dec
rcll
or
test
movsb
mov
jg
jbe
cmpsl
movsb
or
pop
inc
clc
xchg
test
mov
fwait
imul
fcoml
jl
ss
sbb
pop
js
xor
js
mov
mov
adc
jo
gs
adc
gs
push
or
push
mov
jo
test
inc
pushf
nop
push
push
mov
add
cmpb
iret
iret
in
lods
or
movl
outsb
mov
mov
sbb
lea
stos
push
add
jo
mov
daa
or
mov
inc
fdivrp
in
rcll
lea
pusha
or
xchg
dec
cmp
popf
adc
add
or
sbb
lcall
jnp
sti
aaa
mov
test
in
jo
ds
mov
ds
or
xchg
push
jp
pop
ljmp
pop
sbb
enter
adc
and
loop
cmp
addr16
dec
cmpsl
test
push
cwtl
std
repz
notb
cmp
fsub
or
fimuls
push
cmp
cmp
jae
mov
mov
stos
in
mov
xchg
popf
adc
push
push
cmp
ret
or
jne
sarl
movsl
std
sbb
jne
enter
pop
mov
mov
mov
xchg
movsb
mov
push
inc
das
push
pop
push
stc
sbb
cld
clc
or
inc
bswap
pop
cmp
std
mov
mov
push
std
cmp
rolb
roll
cld
add
dec
or
push
add
inc
push
lea
call
jnp
adc
aaa
call
push
mov
adc
in
int3
push
imul
lea
cmp
pcmpeqd
mov
push
fimuls
loop
out
push
jns
jno
pop
inc
pop
cmp
rorb
mov
pop
add
dec
mov
pop
sbb
ret
push
jmp
mov
pusha
mov
and
push
mov
test
adc
mov
xor
or
inc
xor
push
sbb
mov
std
out
das
jnp
nop
dec
and
sbb
push
inc
jp
test
add
fwait
icebp
jbe
test
cmc
jb
pop
mov
es
jg
and
dec
jne
enter
cwtl
sbb
xchg
lret
add
xor
imul
xchg
jle
lea
fadds
adc
sbb
test
xor
xchg
xor
and
xor
sub
mov
test
cld
xchg
xor
outsl
jns
or
xchg
sahf
out
sbb
mov
push
push
jne
in
mov
jp
push
hlt
push
push
bound
fisubrs
adc
out
xchg
out
add
pop
mov
push
mov
add
jo
push
fcomp
or
jns
push
mov
inc
lcall
jmp
das
rclb
push
xor
iret
mov
pop
mov
mov
add
loop
je
lea
in
das
dec
push
inc
jmp
je
andb
ss
sub
call
in
loopne
xor
xchg
mov
fcom
push
cmp
into
add
push
rclb
add
push
dec
adc
mov
mov
xchg
mov
das
xor
and
and
or
inc
js
push
pop
mov
les
pop
xor
and
add
out
aam
or
adc
mov
jge
lret
ret
push
add
and
out
addr16
pop
dec
movsb
call
fdivrl
bnd
sub
rclb
mov
gs
dec
adc
adc
sub
xlat
mov
push
xchg
lods
inc
push
inc
or
lahf
cmp
sub
or
mov
xor
push
and
or
enter
mov
lock
cltd
rcl
sbb
xor
pop
mov
or
inc
imul
dec
adc
clc
mov
xorl
jno
fcoms
aas
loop
ffree
stos
mov
fwait
adc
cmp
cmp
test
pop
sub
inc
add
xor
push
hlt
addb
nop
jo
mov
jmp
mov
stc
outsb
dec
clc
les
cmp
lret
fsubs
sub
inc
test
js
inc
fdivr
cmp
aad
ret
jg
mov
imul
dec
cmp
or
push
add
fisubrl
jl
xchg
lea
rcll
cli
pop
cmpsl
mov
jmp
out
pop
jne
dec
and
aaa
mov
ljmp
sbb
jb
sbb
adc
mov
rcrb
xor
pop
ret
cmp
leave
jg
stos
je
imul
bound
shll
inc
inc
jmp
pushf
push
fisubrs
and
lea
inc
cmp
push
mov
add
sbb
mov
and
loopne
inc
js
push
test
mov
sub
xlat
cltd
adc
mov
or
mov
xor
imul
stos
arpl
pop
mov
add
insl
ret
xor
push
add
popf
push
add
icebp
push
push
iret
test
ret
and
or
cs
sahf
in
rorb
test
xchg
dec
cmp
inc
in
and
xchg
cmpsl
aam
inc
dec
loope
pop
in
mov
lcall
pop
and
dec
cmp
xor
ror
dec
dec
xlat
pop
and
sub
push
dec
dec
xchg
lcall
push
lcall
mov
xor
dec
and
cwtl
cwtl
adc
cwtl
fsubl
cmp
shlb
adc
push
cmp
inc
xorl
lods
and
stc
insl
mov
pop
les
enter
sub
outsl
fsubrs
jnp
in
aam
push
and
cmp
ret
jae
jo
add
lds
mov
imul
push
sub
push
dec
clc
or
je
pushf
insl
pop
adc
sub
outsl
jle
test
lods
ret
sbbb
inc
scas
mov
nop
int
mov
xchg
movsb
mov
sahf
mov
mov
mov
pusha
xchg
lahf
mov
aaa
xor
mov
push
sbb
sub
mov
push
adc
out
test
mov
sub
push
test
repnz
das
addl
jge
insb
push
xor
dec
xchg
cmp
aaa
inc
inc
xor
and
mov
loope
add
pop
mov
lahf
je
xchg
js
aam
mov
jne
imul
xor
test
jle
pop
cmp
pusha
ret
xchg
int3
xchg
adc
pusha
or
int3
out
fldenv
mov
xlat
xor
lods
jnp
adc
xlat
fsts
punpcklwd
sbb
dec
pop
sub
shrb
push
fistpl
les
data16
dec
cmp
in
iret
lcall
ret
jne
jbe
imul
insb
inc
loop
adc
jle
cmove
xchg
jo
inc
imul
adc
pop
adc
dec
dec
sti
hlt
sbb
mov
clc
or
inc
cmp
push
mov
mov
jmp
inc
add
pavgw
rorb
cmp
dec
add
movsb
push
pusha
call
out
or
cmp
test
jnp
push
or
bound
jb
pushf
jnp
inc
test
not
loop
test
jg
lock
test
movl
cmp
cmp
jbe
add
add
mov
xor
dec
xor
test
out
and
or
inc
push
mov
test
xorl
add
aaa
inc
add
stc
jle
test
dec
dec
add
insb
xor
or
xor
lret
adc
mov
test
out
adc
scas
mov
add
or
fcoms
push
xor
int3
and
lock
test
cmp
enter
sub
cmp
inc
imul
mov
js
sbb
iret
jne
push
or
push
test
push
jb
call
add
ret
iret
sbb
enter
int
add
daa
add
push
jb
ret
mov
addb
mov
xor
xchg
aad
dec
pop
sbb
mov
jecxz
in
dec
push
adc
xchg
aas
sbb
push
cmpsl
and
mov
push
lret
cmpsb
pop
pop
ret
xchg
out
adc
aas
int
mov
adc
popf
cmp
xor
and
call
mov
adc
pop
jp
pop
int
arpl
hlt
inc
and
inc
pusha
jle
or
cmp
mov
movsb
mov
or
sbb
out
sarl
and
pusha
and
inc
add
add
js
xorb
lods
fidivrs
cmp
pop
pop
add
rcr
pop
out
xchg
enter
lods
cld
push
or
push
or
and
stc
lock
push
push
jmp
and
les
adc
mov
jns
or
adc
or
jbe
loope
xchg
xchg
push
push
mov
inc
xchg
push
jl
test
fiadds
mov
push
scas
pop
add
pop
andb
jo
cmp
inc
icebp
adc
dec
and
mov
push
or
add
test
outsb
addr16
jge
mov
lret
nop
push
or
mov
mov
adc
jnp
or
or
xchg
mov
mov
inc
push
adc
ljmp
test
xor
out
xor
xchg
data16
jb
mov
inc
push
mov
mov
xchg
or
sub
dec
ret
push
sub
adc
inc
js
adc
pop
sub
jo
daa
int
es
popa
icebp
cmp
mov
lret
mov
aaa
jns
clc
and
je
call
aas
inc
xchg
lea
dec
outsl
test
loop
cmp
add
xorb
cmp
pop
lods
jbe
inc
sub
cmp
add
push
push
add
sbb
sbb
imul
stc
lret
jo
mov
cmp
xchg
cmpsl
add
cltd
xchg
mov
nop
add
mov
sbb
jl
mov
push
mov
mov
cltd
in
and
sub
sbb
cwtl
fisttps
xchg
test
lret
movl
mov
into
or
or
daa
mov
insw
xchg
push
cwtl
sub
jns
scas
sbb
mov
nopl
mov
nop
int
movsb
test
push
cmp
test
jae
mov
lock
lods
dec
add
out
gs
sub
jmp
and
mov
bound
mov
dec
xchg
daa
push
push
push
or
pop
enterw
or
ss
xor
rorb
mov
dec
or
mov
mov
mov
sub
mov
orl
sub
inc
shll
jbe
out
xchg
sarb
movsb
add
adc
mov
fcom
aad
sub
aaa
fs
mov
jl
xchg
sub
adc
add
inc
pop
and
dec
mov
mov
icebp
add
mov
add
rcll
ja
imul
and
aam
add
into
std
jmp
icebp
pop
fwait
and
sti
push
pop
cmpsb
jne
loop
and
imul
stc
or
leave
les
orl
sbb
and
mov
adc
lcall
jns
sub
mov
cmp
dec
mov
mov
lods
aas
xchg
fwait
in
frstor
inc
movsb
rcrl
adc
mov
inc
adc
sbb
or
movsb
leave
add
sbb
jmp
shll
and
add
test
and
dec
cmpsl
int3
imul
movsb
repz
jecxz
fadds
pushl
push
xor
and
movb
adc
xchg
jnp
movsb
inc
cli
fs
and
pop
adc
ret
adc
and
bnd
loope
in
dec
add
jge
data16
cmp
nop
add
adc
dec
jecxz
lcall
cmp
je
jp
dec
adc
inc
dec
push
shrb
xchg
cmp
je
jbe
inc
mov
sti
stos
adc
ja
dec
je
or
ds
imul
mov
shrb
jmp
orl
daa
add
shlb
nop
pop
mov
add
nop
dec
jecxz
dec
push
in
push
icebp
push
cmpsl
jno
fs
cmpsb
lret
xor
jmp
pop
and
jne
or
movsb
push
cs
dec
mov
fstpl
cmc
in
movsb
inc
xchg
mov
daa
call
xor
pop
mov
or
or
sub
adc
or
mov
lods
ss
push
or
xchg
dec
add
fsubl
loop
sbb
mov
mov
mov
adc
push
inc
add
xchg
insl
cmp
add
and
sbb
add
clc
jbe
subl
cwtl
inc
push
fidivl
js
push
push
in
push
xorl
mov
fildll
sbbb
movsb
rorl
push
test
xchg
es
clc
push
inc
mov
xor
hlt
add
adc
nop
sub
push
sub
inc
pop
daa
int3
sub
inc
fwait
inc
jge
test
push
add
push
xchg
mov
pop
les
pushl
mov
ds
rcrb
push
fs
xchg
push
inc
mov
movsl
loope
or
push
stos
fwait
or
inc
xor
mov
sub
add
lea
push
pop
ss
sti
mov
push
push
out
aam
xor
or
dec
inc
jno
std
in
mov
inc
movsb
out
addr16
add
std
pop
mov
mov
out
fsubl
sub
and
sahf
mov
mov
jl
adc
lds
lods
jl
xor
push
ss
or
fbstp
pop
push
or
dec
ja
cld
xor
lret
andl
jbe
add
xchg
stos
test
mov
jp
sub
test
mov
inc
add
jnp
jp
mov
cmp
arpl
mov
or
sub
and
or
popf
out
and
int3
lock
popa
fsubrl
and
rolb
or
push
xor
sarl
mov
cmpsb
subl
add
sarb
lret
or
imul
push
movsb
add
mov
in
cs
jmp
roll
sbb
xor
cld
or
mov
jns
jg
and
add
dec
data16
xor
sbb
repnz
pop
inc
or
or
xchg
add
xor
das
lock
dec
push
movb
and
mov
jne
adc
lods
dec
js
xor
popl
cmp
sub
ss
lock
out
into
sbb
pop
cmp
shlb
repz
add
mov
lea
popf
mov
inc
aaa
int3
rclb
lret
mov
push
inc
add
icebp
mov
loopne
hlt
addb
xor
pusha
sub
ss
mov
in
fs
mov
shrb
sbb
or
repz
pop
push
jecxz
lret
loope
push
test
sti
popf
mov
push
push
hlt
dec
xor
push
push
lock
jmp
rorb
xor
fidivrl
imul
adc
adc
push
mov
nop
or
jae
mov
lock
inc
dec
push
inc
adc
and
lds
clc
push
in
adcl
push
fmuls
test
or
dec
cmp
mov
xchg
mov
je
push
inc
shl
pop
pop
push
adc
push
mov
add
and
xorb
jbe
cltd
jmp
sbb
push
mov
mov
and
sbb
stos
adc
sub
loope
imul
add
loope
sbb
add
jnp
mov
jl
mov
iret
cmp
cmp
mov
or
inc
inc
in
add
pop
das
stc
or
nop
push
push
stc
pusha
or
gs
or
loop
mov
mov
and
jp
pop
add
les
mov
xorb
adc
xor
repnz
push
push
xor
out
loopne
sbb
cltd
add
adc
fimuls
push
popa
int3
call
cld
into
dec
inc
add
scas
push
cmpsb
enter
psllw
loop
xchg
mov
adc
pop
js
xchg
cmc
xor
add
subb
add
inc
or
hlt
jge
adc
frstor
jge
fstps
or
rorl
cmpsb
adc
pop
iret
mov
arpl
pusha
jno
sub
movsl
or
cli
test
fldl
mov
sub
pusha
xchg
or
xor
enter
adc
mov
inc
loopne
inc
push
add
add
sbb
in
push
stos
jno
mov
mov
inc
int
in
pop
mov
es
adc
mov
xor
imul
add
mov
stos
icebp
cs
mov
push
rolb
dec
mov
ret
imul
int
sub
mov
mov
test
faddl
inc
sub
add
pusha
sti
rcl
dec
pop
inc
rclb
call
int
cmc
cmp
out
addl
or
fdivp
adc
add
cmp
and
push
shlb
stos
test
ret
sbb
or
imul
out
in
jo
pop
lea
jo
in
jg
popf
or
mov
dec
pusha
mov
rol
mov
ror
xor
sar
pop
icebp
out
add
es
mov
rol
xor
shr
xor
add
add
add
sub
fnstsw
fs
or
jae
or
jnp
call
and
xor
add
add
aam
sub
adc
sbb
scas
push
iret
xlat
in
push
mov
ror
mov
fisubrs
jge
xor
aam
cli
and
and
xchg
push
aam
cmpsb
in
test
xor
rorb
aaa
push
test
or
push
or
and
not
ret
rcl
add
add
jo
add
add
call
fsubr
rcl
sub
or
call
sub
xchg
xorl
ljmp
int
xchg
shr
add
push
xor
fsub
in
dec
rcrl
xor
in
movsb
jb
xor
in
shrb
cmpsl
sbb
lahf
push
cmp
inc
push
push
punpckldq
push
dec
pusha
inc
push
bound
pop
mov
pop
or
mov
xor
jo
cs
cltd
call
cmpsb
mov
in
xor
call
adc
pushf
cmp
pop
cmp
pop
dec
rcl
aam
sti
mov
push
or
int3
xor
add
in
fisubl
pop
push
xor
and
and
out
iret
or
in
jl
add
and
xor
push
test
addl
or
mov
inc
jo
ret
push
jo
fisubs
add
mov
call
inc
pop
iret
jl
adc
push
loop
mov
jle
inc
mov
filds
cltd
push
inc
fadds
pop
jbe
sub
push
call
ret
add
add
and
add
or
cmp
imul
rcrb
inc
mov
aam
mov
xchg
shr
inc
clc
jo
cli
stos
adcb
aam
aaa
cmp
int
dec
dec
sub
enter
in
pop
pusha
fs
inc
shr
rolb
inc
add
cli
xor
xor
xor
shlb
rorb
or
loopne
in
imul
in
lahf
jo
add
adc
add
and
data16
xchg
and
imul
inc
and
insb
int
leave
and
xorl
and
xor
pop
adc
movsb
test
rol
push
or
pop
je
out
fs
pop
xchg
or
mov
xchg
pop
pusha
xchg
in
pop
scas
movsl
mov
or
arpl
rolb
dec
pushf
loop
adc
fs
andl
inc
pusha
cmpsl
jl
imul
enter
stc
mov
adc
pop
dec
mov
or
dec
jb
cmpsb
imul
jns
push
cltd
sbb
jo
adc
in
add
ret
test
or
orb
fld
jg
aas
pop
add
sub
mov
movb
inc
xor
pop
push
push
incl
sub
add
sub
mov
sbb
testb
enter
pusha
mov
jmp
das
sbbb
and
or
push
add
mov
adc
cltd
insl
fcmovu
aam
cmp
mov
ds
and
mov
lock
adc
add
dec
repz
mov
push
sub
pop
add
ret
dec
or
mov
dec
jne
pop
add
adc
mov
mov
xchg
sub
mov
cmp
jbe
nop
mov
cmp
ret
addl
fwait
ds
jae
push
pop
fadds
movsl
and
sub
stos
or
mov
ljmp
inc
fs
pop
push
sar
mov
not
int
push
xchg
or
xchg
ljmp
mov
sbb
fbstp
mov
push
gs
or
inc
add
xor
fwait
add
jns
push
push
dec
cmp
inc
add
dec
int3
jmp
mov
lea
jmp
dec
fdivl
mov
cmpsb
sub
repnz
or
and
jo
ret
and
roll
ret
in
sbb
mov
pusha
or
mov
inc
jmp
xchg
inc
mov
xchg
mov
mov
addb
lods
or
add
sbb
dec
push
stos
or
push
jl
or
pusha
or
pop
mov
andl
test
ret
int3
in
cmp
addr16
add
dec
adc
cs
add
xor
arpl
lret
push
repz
cwtl
loope
dec
xor
push
and
sbb
ljmp
push
inc
ss
shrl
lret
cmp
pusha
ljmp
mov
sub
and
dec
xor
sbb
sub
ljmp
ret
dec
addb
or
rcl
ds
and
sub
pop
inc
andl
dec
adc
idivb
push
mov
push
and
in
test
pop
push
mov
add
ret
add
mov
fisubrl
push
scas
mov
cmp
sub
pop
add
cmp
pmullw
push
insb
stos
mov
adc
and
add
and
lock
test
xchg
loopne
add
add
clc
int3
rorl
es
adc
add
pop
push
adc
mov
enter
mov
cmp
imul
in
dec
cmp
or
xor
adc
pop
out
cmpl
insb
mov
or
pop
xor
repnz
lret
pop
clc
ljmp
mov
ret
xor
xor
imul
jno
mov
push
inc
fstpt
add
arpl
lahf
test
sbb
fmull
pop
xor
push
jmp
bound
rorl
dec
and
add
sahf
fldenv
clc
push
movzbl
inc
add
push
out
addl
loopne
sbb
and
adc
inc
mov
fdiv
cli
or
lahf
mov
clc
jge,pn
call
push
adcl
cmp
imul
divb
push
ljmp
mov
mov
jp
and
insb
loopne
or
add
pop
xor
pop
inc
mov
dec
js
sub
inc
cmp
dec
test
or
addl
cmp
ret
pushl
aaa
add
push
add
mov
jle
pop
sub
lret
mov
js
sub
cwtl
inc
add
jg
or
dec
mov
lret
in
lcall
add
sbb
push
push
push
dec
addr16
adc
mov
js
fisttps
mov
ret
aaa
push
daa
dec
jbe
adc
sub
push
xchg
dec
cmp
xor
scas
cmp
jno
pop
cmp
xchg
shlb
bound
mov
push
dec
or
jge
xor
out
add
es
push
mov
in
in
and
xor
push
xor
mov
cmp
push
dec
push
dec
out
mov
out
jge
xchg
jbe
xorl
mov
adc
in
mov
sti
or
movsb
cs
addr16
movsb
jge
add
fs
filds
xor
jo
frstor
mov
or
aas
or
pop
mov
in
add
sbb
cmp
mov
repz
or
push
or
add
xor
cmp
sub
fistl
push
pcmpgtd
ret
aad
add
nop
push
adc
mov
add
inc
add
mov
mov
cmp
cli
popl
push
inc
pusha
and
hlt
pop
mov
dec
push
dec
test
sarl
jb
pop
inc
aam
sub
push
push
adc
stos
pusha
mov
sbb
sub
mov
sbb
mov
ds
movsl
jecxz
dec
pop
mov
push
insb
or
loope
xor
xchg
movzbl
dec
sub
idivb
cli
xchg
mov
int3
fs
jmp
in
push
jne
cmpsb
cmpsl
adc
inc
mov
mov
scas
fs
cmc
stos
fs
icebp
ret
pop
inc
or
push
lock
sub
xchg
sbb
pop
xor
add
jmp
pop
and
adc
and
mov
dec
dec
popf
adc
adc
js
pop
inc
mov
mov
jb
ss
sub
hlt
or
sub
lret
jbe
sub
add
add
mov
adc
push
lcall
add
fstl
ljmp
xchg
add
fsubl
shlb
push
add
pop
das
inc
push
cmc
mov
ret
dec
bound
leave
arpl
inc
jno
add
test
xchg
jbe
push
push
scas
xchg
incl
cmp
pushf
adc
rcl
ss
popa
pop
lea
jmp
ss
jo
sub
das
add
mov
cmp
adcl
lods
push
xor
and
xchg
shl
sub
xchg
inc
add
repz
lods
push
sub
cli
inc
and
and
lret
ficoml
inc
pop
inc
add
test
xchg
sbb
pop
adc
fisubl
xor
dec
pop
mov
lods
ret
xchg
aaa
inc
cmp
cmc
je
cmp
ret
jmp
and
dec
sbb
loop
or
push
mov
insb
pop
jb
add
lea
cmp
mov
pop
scas
bound
dec
ds
jb
jg
dec
inc
jl
inc
and
pop
inc
aaa
inc
mov
into
mov
push
ret
bound
stc
ja
add
jne
push
cmp
jb
mov
push
mov
push
sub
clc
mov
jp
or
inc
and
or
push
adc
js
in
mov
pop
push
jmp
mov
mov
add
jecxz
mov
and
das
dec
into
adc
xorl
ret
dec
imul
dec
xor
mov
mov
cmp
jae
xchg
or
cmp
movsl
or
and
lods
outsl
cmp
shlb
dec
jnp
push
or
add
add
and
add
loopne
cld
and
mov
out
adc
mov
mov
inc
cmp
sbb
cmp
mov
outsl
jmp
mov
sub
mov
bound
add
sub
out
xchg
movzbl
pop
cwtl
xor
mov
jne
xlat
xchg
adc
add
jmp
or
rorl
enter
xchg
or
iret
adc
shl
pop
push
dec
add
aaa
imul
add
imul
sbb
mov
cmp
je
mov
mov
push
call
xor
call
js
sbb
cmp
jl
pop
ret
test
aam
or
ja
inc
test
adc
aaa
ret
push
xor
cmc
insl
push
bound
adc
and
test
jmp
mov
xor
sbb
jecxz
push
ss
imul
int3
or
xor
xor
xor
ret
push
das
jae
or
jl
xchg
or
pop
in
and
cwtl
ret
push
xor
and
mov
rcrl
jb
les
fiaddl
and
cmp
sbb
jnp
ss
cmp
sub
sub
and
sub
js
xor
das
inc
lret
inc
loop
inc
pop
jmp
pop
mov
xor
outsb
pop
or
add
or
dec
mov
filds
insl
ficoms
and
loope
and
add
mov
fildll
out
mov
shr
shl
add
add
xadd
add
lret
mov
or
add
mov
movsw
movsb
mov
push
aam
mov
test
jp
push
jge
ss
push
fidivrs
pop
add
ja
add
sbb
pop
add
sub
cmp
aam
jecxz
dec
and
mov
pop
or
or
daa
pop
fs
adc
das
sub
push
test
inc
sbb
incl
fs
lock
mov
pop
add
call
dec
xlat
xchg
pop
in
lret
or
pushf
enter
enter
mov
mov
push
mov
xor
cmp
mov
sti
jl
lcall
rcrl
popf
add
mov
sarb
icebp
or
adc
es
iret
add
push
cltd
cmp
stos
push
ljmp
sub
xor
es
jb
pop
jo
and
add
sub
js
mov
and
jns
xorl
mov
hlt
and
test
or
add
push
insl
push
aad
adc
xor
cltd
add
mov
jae
and
cmp
test
jne
inc
nop
sub
xchg
or
sbb
inc
in
mov
lret
clc
mov
ficoms
adc
loopne
xchg
jo
mov
sub
or
cmp
add
pop
cmp
pusha
or
push
dec
out
or
movsb
pusha
sub
mov
mov
in
xor
movsb
add
xor
lcall
in
fsubrs
sub
add
ret
jle
fld
pop
mov
push
aam
add
push
jbe
cmpsb
jnp
or
jmp
push
js
jbe
addl
das
xchg
sub
dec
cli
cmp
mov
cld
cmp
xlat
add
icebp
cmpsl
adc
or
out
lret
test
pop
dec
stos
shrb
cmp
aam
mov
pusha
mov
lock
push
ret
adc
call
jbe
loopne
fsubl
in
inc
inc
adc
jbe
cmp
xchg
and
lahf
mov
ficoml
mov
sbb
jae
loope
dec
pop
int3
lcall
sbb
jmp
inc
jns
mov
orb
dec
faddp
xchg
xor
dec
roll
and
adc
sbb
nop
negb
mov
popa
and
adc
mov
xor
add
mov
xorb
loopne
jmp
rorb
or
jecxz
out
sarb
sbb
subb
pop
adcb
test
popa
rcl
push
mov
mov
sub
lods
and
push
adc
dec
inc
lock
mov
mov
and
repnz
ds
pop
or
ja
or
add
outsb
sbb
int
xchg
jecxz
add
sbb
aad
popf
cs
repz
lds
pop
loope
or
sub
mov
push
push
fs
and
mov
inc
mov
add
push
fnsave
xor
adc
cmpsb
inc
add
mov
test
and
clc
inc
xchg
andb
mov
xor
mov
sbb
sbb
push
mov
mov
push
adc
lds
sbb
or
rcr
clc
or
test
daa
rorl
sub
mov
pop
xchg
pop
push
in
push
das
xor
inc
sahf
jno
cld
loopne
dec
pop
icebp
cmpl
sbb
daa
je
add
shlb
mov
out
jecxz
shl
add
mov
pop
push
popa
insl
jne
cltd
push
push
push
adc
and
inc
nop
jnp
pop
push
cltd
jmp
xor
sbb
fcompl
mov
mov
lock
out
cwtl
and
lods
test
mov
adc
lret
mov
cmpl
jne
sbb
jo
icebp
push
cmpsl
mov
sbb
inc
add
add
cmpsb
sbb
sbb
mul
inc
cmpl
xor
out
cmp
jle
jle
or
and
mov
jnp
inc
cmp
insl
inc
cmp
lock
jne
in
inc
test
aaa
push
jne
push
es
pop
mov
loopne
or
mov
loopne
das
test
pop
gs
stos
xor
inc
clc
sub
jne
repz
or
or
in
push
add
je
in
cs
insb
mov
cmpsl
outsb
push
fimull
push
inc
or
pop
push
js
or
jo
jne
jp
or
jnp
add
shlb
ds
or
inc
es
cmpsl
push
sub
inc
jo
pop
rcpps
sub
enter
push
mov
test
cwtl
mov
lods
inc
insb
mov
adc
rorb
push
stos
lret
jne
aaa
ss
cmc
movl
push
call
mov
mov
std
pop
incl
stos
sub
push
sarl
sbb
std
das
rorb
sub
aaa
sbb
adc
pop
ss
mov
add
sub
bound
cmp
xchg
jmp
sub
jnp
movsb
push
cmp
jne
push
adc
add
and
out
ds
mov
sub
int
sbb
adc
inc
es
lret
xor
push
aad
inc
mov
push
ret
inc
mov
sbb
xor
push
aam
adc
sub
loopne
loop
pop
shlb
and
insb
or
jmp
out
jge
cltd
loope
pop
dec
ret
adcl
sbb
jne
jg
sbb
rolb
leave
push
cmp
and
adc
pop
mov
sti
and
fidivrs
inc
or
jo
push
adc
movsb
and
push
pop
test
or
pop
imul
sub
mov
push
test
sbb
or
inc
pop
add
mov
cmpb
cli
cmpsb
and
inc
or
add
popf
mov
mov
add
push
push
sbb
jp
and
pop
or
push
push
es
push
adc
sar
jbe
mov
sbb
add
incl
loope
scas
shl
mov
rorl
sbb
mov
cmp
sbb
or
cld
push
mov
inc
fiaddl
pop
cmpb
aas
nop
sbb
leave
jmp
lea
push
sbb
or
adc
loopne
or
lret
into
jne
data16
sbbb
or
adcl
fdivp
jge
add
sbb
jmp
push
xchg
push
rorl
or
inc
outsl
insl
pop
sub
adcl
mov
mov
pop
cmc
pop
sub
cmp
jne
push
xchg
ret
pop
inc
aam
inc
mov
testb
and
or
xor
es
xchg
aaa
les
jae
jmp
and
lods
sub
paddd
fstps
push
mov
dec
sbb
pop
and
push
add
enter
and
aam
sub
and
pushf
aad
cltd
or
ljmp
sbb
or
or
cmp
ds
cmc
sub
inc
pop
addl
gs
sbb
push
or
mov
jns
aaa
dec
mov
pop
sbb
and
ret
fstl
or
mov
or
cvttps2pi
sarl
and
orb
or
cs
adc
pop
mov
repnz
in
adc
xor
mov
add
out
and
or
adc
and
add
rcll
and
add
mov
mov
mov
add
sbb
ret
sub
pop
add
pop
add
or
jle
xor
adc
xorl
push
je
jmp
pusha
lret
inc
lcall
jecxz
nop
std
cld
push
inc
test
adc
ds
pop
push
fucompp
cmp
jo
jne
cltd
inc
bound
pusha
out
cmp
push
push
mov
imul
lcall
sbb
mov
sub
mov
out
mov
push
push
es
push
lahf
dec
mov
xor
shrb
and
or
andl
add
jae
and
cmpsl
popa
decl
js
and
cmp
add
or
adc
in
push
jge
addb
fisttps
loopne
cmp
insl
loopne
ljmp
or
sbb
mov
push
sub
inc
imul
adcb
push
aam
mov
fisttpl
sub
lock
fcoms
xchg
insl
call
std
cmp
adc
es
xchg
and
sub
lcall
jmp
repz
mov
cmp
jmp
jne
xorl
mov
mov
mov
divb
faddl
sbb
test
sbb
int
adc
enter
jle
or
out
xor
test
dec
out
adc
push
push
pop
sub
ret
fcomp
pop
in
jle
and
test
pop
mov
aas
adc
inc
cltd
pop
fidivrl
scas
arpl
fs
xorb
jmp
loopne
dec
add
inc
xor
pop
jecxz
lret
movsb
mov
sub
clc
lods
mov
and
mov
jmp
mov
dec
or
notl
ret
inc
cmp
arpl
and
xor
adc
push
rol
icebp
inc
stos
pop
jp
mov
add
addb
fwait
pop
push
mov
sub
in
insb
adc
push
ds
jae
push
rol
push
adc
add
dec
subb
xadd
fwait
clc
jp
icebp
pop
lret
adc
add
inc
je
sar
jo
sub
es
mov
out
leave
rorb
shlb
dec
shrb
dec
push
xchg
movsl
inc
dec
cmpb
push
sbbl
js
leave
sbb
ret
dec
or
invd
jb
dec
ds
lds
adc
or
sbb
push
adc
data16
dec
jnp
shlb
push
repnz
adc
adc
inc
push
addl
add
jmp
in
es
pushf
cs
mov
lods
add
shrl
xorb
xorl
and
pop
into
jbe
jns
cmp
push
mov
and
stos
imul
mov
and
int3
pop
jl
movsb
jbe
pop
call
and
nop
push
add
mov
inc
inc
inc
ret
adc
cmp
in
pop
clc
lods
push
inc
mov
daa
shll
mov
outsb
lock
cmp
je
mov
addl
sub
enter
push
in
pop
rorb
adc
push
arpl
scas
xchg
add
and
xorb
sub
in
or
xor
in
fiaddl
out
jne
mov
lcall
pop
xor
cwtl
loopne
lods
push
dec
adc
pop
rcrl
mov
dec
and
sbb
inc
or
pop
je
jmp
or
mov
dec
sub
adc
rorb
sbb
jns
pusha
xchg
mov
add
add
ds
add
cmp
int3
jg
jmp
push
mov
push
out
add
push
xlat
es
xor
icebp
jnp
les
inc
cmp
mov
fisubs
imul
sbb
pushf
es
mov
mov
dec
inc
pop
pop
sbb
sti
sbb
add
gs
sarb
xor
jae
push
subl
or
sub
or
ret
sub
mov
mov
or
or
bound
mov
add
dec
push
push
outsl
xor
fwait
cltd
push
jnp
and
xor
push
stos
cmp
push
xchg
es
jb
push
pop
in
mov
fwait
mov
pop
dec
push
push
testl
pop
test
mull
inc
mov
cmpsl
add
sbb
mov
clc
data16
pop
test
mov
xchg
sub
pushf
cmp
push
sbbb
test
cmp
and
scas
sub
mov
lret
shlb
jp
pop
loop
shll
dec
je
movsl
jmp
bound
pop
adc
pusha
jne
das
pop
arpl
xor
dec
sbb
mov
stos
adc
shll
int3
mov
mov
push
shlb
add
push
dec
ljmp
push
inc
sbb
vpsadbw
jo
rclb
jle
rcrb
jl
inc
js
cmp
repz
add
shrb
icebp
mov
addr16
and
jecxz
stc
and
jle
ljmp
and
or
scas
js
outsb
ljmp
or
fstpt
and
mov
and
clc
jg
fs
test
out
or
movq
movaps
push
clc
jns
insl
aaa
jae
xor
jle
xor
cli
rclb
dec
mov
je
mov
insb
fists
mov
lret
or
jg
notb
xchg
jnp
mov
test
and
mov
aam
ret
repz
adc
push
add
adc
add
out
push
add
mov
in
and
pusha
addsd
out
std
out
imul
add
sbb
sbb
inc
pop
int
nopl
xchg
push
imul
daa
inc
or
loopne
sub
xchg
xor
scas
sbb
test
mov
mov
adc
dec
and
aam
pop
addr16
dec
xor
outsb
rcrl
les
clc
ret
jge
mov
jge
xchg
pop
enter
pop
sbb
sbbl
pop
xor
out
or
and
dec
cmp
mov
fmul
xchg
push
sbb
ljmp
fnstenv
add
hlt
rorl
jmp
inc
dec
mul
or
rorl
je
push
out
push
rep
mov
dec
ljmp
fxch
or
test
adc
andb
test
shrb
dec
adc
std
cmp
mov
insl
cmp
push
roll
cs
adcl
jb
repz
mov
pusha
sbb
pop
and
cmovs
mov
push
pop
into
cmpsl
test
aas
sbb
aam
stc
or
rep
jmp
test
jmp
mov
fxch
insl
mov
test
mov
sub
sbb
shll
sub
cmp
pop
mov
jl
mov
or
scas
adc
mov
push
dec
add
dec
push
pop
push
movl
outsl
inc
sub
add
cmp
jnp
jo
push
jns
iret
dec
mov
mov
call
sahf
in
in
lock
hlt
dec
pushf
out
clc
clc
cld
mov
fdivr
mov
add
fldenv
cmp
jmp
and
sub
nop
inc
pop
sti
push
andl
inc
and
mov
ret
push
lea
jl
cld
or
repnz
cld
out
xor
dec
jb
in
fimuls
mov
xor
pop
nop
inc
push
push
push
nop
fiaddl
jl
mov
push
fnstenv
inc
xchg
lret
push
out
push
add
nop
dec
dec
addr16
add
ljmp
xor
push
in
push
hlt
cld
add
iret
mov
rorl
daa
xor
sbb
cmp
repz
sbb
adc
cmp
repz
or
fwait
and
iret
add
inc
inc
or
push
pop
insb
xor
push
mov
add
rdtsc
push
adc
ja
mov
sahf
pop
out
and
pop
rolb
mov
nop
nop
es
cmp
movb
mov
fists
mov
not
push
mov
jnp
xchg
and
push
sbb
cmp
add
loopne
push
xchg
or
addr16
stos
repnz
mov
inc
inc
mov
sti
push
mov
jmp
jp
je
mov
mov
push
cmp
jne
mov
incl
test
loop
add
rorl
or
xor
fidivrl
inc
daa
jle
sub
cmp
je
cmpsl
push
outsb
mov
xor
stos
mov
dec
insb
rolb
or
std
lock
popf
shrb
subb
sbb
mov
fucomi
add
cmp
in
outsl
jne
movsb
test
push
mov
aam
sbb
mov
in
jmp
push
pop
add
push
xchg
inc
pop
mov
aas
mov
fists
pushl
adc
mov
push
jne
inc
cmp
cs
sub
mov
ficoml
mov
inc
mov
xor
mov
push
adc
popf
or
and
add
or
adc
and
hlt
dec
test
pop
inc
inc
cmp
cmp
cmpsl
sub
or
jne
out
add
sbb
cs
fwait
dec
adc
cmp
lret
adc
inc
aam
adc
mov
xor
or
imul
push
mov
pop
mov
cs
daa
inc
and
scas
mov
imul
hlt
cmp
popf
xchg
xor
daa
dec
add
add
lock
sbb
ret
imul
or
dec
leave
sbb
or
push
mov
pop
cmp
mov
mov
push
inc
push
rol
inc
inc
cmp
aam
lret
jne
sbb
jg
shl
shl
jmp
jnp
xor
push
aad
inc
adc
movl
add
fwait
in
movb
rorb
cmp
and
xchg
dec
aaa
xor
add
xchg
ret
add
in
and
fisttps
or
orl
clc
mov
stc
adc
xchg
hlt
daa
mov
adc
lcall
xchg
pushf
sub
jne
dec
repnz
cmp
ret
adc
jmp
lds
push
shrl
and
sahf
insb
ja
test
jbe
cli
sub
js
fnstcw
dec
pop
jecxz
jmp
movsl
mov
cmp
ja
inc
into
sarb
push
sub
fmuls
sbb
dec
cli
or
add
jmp
or
mov
inc
ds
jbe
sbb
loop
pushf
cmp
jb
push
fbstp
sub
add
jmp
mov
dec
mov
mov
dec
dec
mov
inc
cmp
jb
icebp
outsb
loope
lret
ret
adc
cs
jp
jne
outsb
push
jmp
pusha
mov
adc
mov
dec
or
push
add
xor
fcom
lcall
mov
sub
jb
lea
pop
and
clc
outsb
mov
push
push
cmp
jne
mov
push
cmp
repz
std
jne
es
jne
sub
adc
or
sbb
ret
adc
push
dec
stc
jns
fsubrp
inc
adc
jmp
std
std
jmp
addr16
cld
cld
ret
pmaxub
adc
adc
mov
jecxz
scas
jb
push
push
movb
rorl
shr
repnz
hlt
or
and
pop
jle
sahf
push
mov
jmp
pop
dec
fdivrs
enter
mov
aam
js
addb
add
iret
adc
and
xor
pop
inc
in
lds
push
add
sub
xor
or
mov
push
and
add
and
add
adc
push
xchg
pushf
orb
cmp
jo
lea
jno
movl
xor
mov
sub
and
je
adc
add
dec
jl
jmp
mov
mov
dec
cs
jno
xorb
js
push
push
push
popa
mov
xchg
enter
mov
jmp
push
mov
sti
and
jecxz
jle
push
push
pop
div
movb
mulb
pushf
sbb
test
pop
clc
jo
sbb
or
lods
pop
mov
pop
adc
push
mov
clc
pop
and
cmp
adc
addl
mov
push
adc
pop
or
imul
pop
xchg
imul
inc
mov
orb
mov
push
xor
push
arpl
movsb
jecxz
cmc
rcll
add
push
rolb
sub
xchg
mov
test
xor
jp
xchg
add
in
mov
or
lods
push
mov
icebp
movb
jle
cmpl
or
push
mov
xchg
xor
inc
rorb
cmp
jne
orl
dec
fucomp
add
add
sub
cmp
addr16
inc
add
and
cmp
cmpsl
add
push
xor
dec
ja
mov
mov
push
or
stos
jl
or
adc
or
adc
repz
jne
dec
add
add
lds
test
lret
mov
dec
test
dec
mov
jmp
lcall
je
mov
sub
cmp
cs
and
ja
xor
dec
adc
sbb
or
jb
movsb
push
adc
adc
sbb
xor
dec
test
push
je
dec
push
or
lock
fimull
pop
rol
pop
cld
inc
adc
frndint
das
mov
inc
cmc
mov
sbb
push
add
xor
or
outsl
or
jbe
inc
or
arpl
je
dec
pop
je
std
mov
add
ret
add
into
mov
popa
int
cmc
das
in
rolb
sbb
movsb
or
pop
aaa
shr
cmp
cmp
popa
cmp
jmp
push
mov
lret
add
mov
fisubl
sub
sub
adc
rorl
icebp
add
jne
imul
movhps
lea
stos
mov
shr
and
in
rcl
dec
or
loopne
test
adc
mov
jno
jbe
push
cmpsb
adc
or
dec
jp
andl
iret
data16
jne
div
test
jmp
enter
rcrb
push
mov
adc
mov
cmp
lods
pop
shlb
push
adc
aas
mov
inc
inc
data16
adc
fdivrl
and
shll
adc
sbb
cmp
and
push
pop
mov
loop
inc
xor
inc
mov
mov
ds
mov
lret
or
call
add
mov
mov
sub
cmp
push
aas
adc
mov
push
jmp
xor
mov
leave
jne
cltd
iret
push
cmp
dec
cmp
xchg
sub
push
dec
push
movsb
ret
xchg
ds
clc
stos
and
adc
int3
decb
lcall
bound
shrb
add
inc
addb
ret
pop
frstor
xor
js
loopne
jb
sub
or
fwait
cmp
sbb
xchg
addb
dec
adc
int3
or
enter
sbb
pop
clc
out
jmp
adc
repz
inc
mov
xchg
add
jmp
sti
sbb
call
je
int3
stc
sub
in
push
in
push
test
ja
push
dec
ss
sbb
adc
inc
adc
enter
mov
or
je
mov
dec
add
and
xor
dec
xor
mov
daa
lock
mov
lods
mov
pop
jnp
and
ja
add
repnz
mov
or
mov
sbb
cmpsl
stos
pop
jge
inc
mov
jmp
pop
jae
xchg
mov
adc
push
dec
enter
push
inc
sub
pusha
push
incb
dec
sbb
add
dec
cltd
xor
or
stos
jcxz
leave
jae
add
data16
add
or
jo
xchg
sbbl
push
sbb
mov
test
fimuls
shlb
call
jge
or
dec
and
mov
loop
mov
inc
incb
sub
xor
push
leave
sub
std
add
mov
clc
push
push
push
pop
ss
movsb
and
or
test
lea
mov
lret
je
inc
stc
xlat
rcrl
adc
adc
ja
sbb
jno
loopne
xor
push
or
imul
decl
and
pop
pop
test
mov
add
imul
mov
les
sbb
addr16
fsubr
xchg
aad
push
adc
addr16
aaa
push
pop
decl
int3
push
pusha
and
ds
or
push
call
pusha
jb
pop
les
es
fiadds
jb
imul
mov
mov
jl
or
and
out
jecxz
push
sub
mov
aaa
nop
inc
push
outsb
push
xor
mov
inc
jae
mov
push
pop
je
push
inc
mov
shlb
ss
sbb
add
ljmp
sbb
ja
sbb
push
mov
mov
js
addl
test
push
pop
pop
cld
fadds
sarb
jno
sub
sub
push
inc
je
and
xor
xor
sbb
ss
jp
mov
imul
cltd
fdivr
daa
popa
xchg
push
add
push
cmpsb
fdivl
push
outsb
inc
jle
int3
sbb
xor
repnz
mov
movsb
jnp
push
jno
and
cmp
sub
inc
movsl
in
dec
idiv
adc
add
xlat
fbstp
adc
imul
cmpl
sbb
add
fisttpl
mov
jle
xchg
fnstsw
and
cltd
add
and
push
push
mov
cmp
mov
add
adc
imul
cmp
add
add
or
mov
adc
inc
arpl
or
dec
mov
adc
cmp
dec
inc
mov
xor
pop
jne
adc
rcl
rolb
xchg
sbb
cmp
mov
cld
cmpsl
mov
add
cs
mov
mov
sbb
adc
mov
push
xchg
loope
cwtl
cld
add
pop
cmp
scas
add
dec
pop
in
add
cwtl
jne
mov
push
push
jne
outsl
and
mov
sbb
mov
jle
push
jbe
out
call
pop
add
cmp
push
movsl
pop
jg
cmpsl
pop
push
mov
jp
and
jns
in
xor
push
icebp
rcrl
ss
pop
out
or
and
or
push
inc
cs
in
and
fmuls
sarl
adc
out
mov
pop
push
inc
jns
add
dec
enter
add
push
push
hlt
ret
in
cmpsl
fcomp
push
cmp
pop
jne
cmp
xchg
and
pop
adc
xor
mov
sahf
fmull
mov
push
adc
mov
gs
loope
int
mov
jmp
cmpsb
push
and
inc
popa
mov
xchg
shlb
mov
and
rcrb
dec
or
cwtl
jg
cmp
dec
mov
and
jle
testl
add
sub
je
fisubrl
clc
add
lahf
ret
lea
repz
pop
mov
test
mov
inc
cmpb
dec
add
and
xor
add
adc
add
jge
fs
cmp
je
lcall
flds
add
enter
push
test
sbb
pop
push
pop
sahf
dec
push
jns
add
or
or
sbb
inc
dec
or
inc
sahf
xchg
add
or
and
sbb
pop
or
in
lcall
lcall
add
xor
push
push
ja
and
and
push
rsqrtps
movsl
mov
pusha
adc
sub
adc
push
and
and
ds
add
adc
pop
adc
ret
repnz
adc
adc
adc
inc
fmulp
cltd
adc
add
sbb
push
push
push
pop
mov
sbb
out
rcrb
sbb
in
sbb
call
sahf
sbb
sbb
sbb
cmp
sbb
jb
sbb
add
repz
pusha
roll
cmp
push
inc
push
pop
and
pop
pop
jne
add
add
sub
cmp
push
xchg
insl
mov
iret
cmp
xchg
shlb
lcall
call
push
in
jno
repnz
sub
rol
lea
add
aad
cmp
mov
out
fwait
out
ret
xor
enter
add
call
adc
dec
dec
cwtl
jmp
jb
sub
and
or
sbb
or
in
in
in
and
repnz
add
mov
out
out
inc
enter
out
sbb
pop
inc
push
imul
in
cmp
icebp
icebp
cmp
sahf
xchg
pslld
out
std
lret
mov
pusha
iret
pushf
lcall
fwait
pop
in
sbb
mov
jb
cmp
div
pop
in
repnz
cmp
cmp
push
fsubs
dec
clc
clc
clc
cltd
adc
add
inc
stc
inc
stc
lock
mov
iret
cli
cli
iret
sti
push
jns
sbb
sti
stos
cld
cld
rclb
cld
push
out
adc
std
xor
cmpl
adc
cmpsl
mov
xchg
roll
xor
rol
add
rol
xchg
fldcw
pop
cmpsb
push
inc
es
and
jecxz
mov
std
sti
in
in
and
adc
sbb
out
mov
or
out
outsb
dec
push
jno
call
or
pop
orb
cltd
repnz
repnz
in
add
inc
popf
cli
sbb
js
out
out
out
cltd
and
add
xchg
pop
leave
das
cli
push
cli
sbb
jmp
sub
sar
push
leave
push
jb
stc
stc
cmpsb
jb
imul
stc
idivl
pusha
pop
xchg
div
pop
fwait
xor
add
stc
push
xor
out
clc
cmp
rclb
sti
cltd
sbb
outsl
in
cld
inc
cld
adcl
add
sbb
gs
and
jo
ret
cld
sub
inc
or
loop
icebp
testl
shl
xchg
xchg
mov
divl
sbb
out
push
jno
sbb
out
inc
testl
negl
sti
imul
ljmp
negb
jns
cmp
notb
adc
cmp
test
mul
inc
repnz
testb
push
cmp
bnd
or
jno
cmc
mov
adc
pop
xchg
cmc
jb
imul
cmc
pop
dec
cmc
pusha
pop
xchg
cmpsb
div
idivb
flds
cmp
cmp
sahf
clc
clc
jecxz
stc
test
cmp
les
hlt
inc
repnz
jne
xor
push
hlt
sbb
shll
data16
hlt
test
push
jo
sti
xchg
dec
sub
push
ds
fsubrs
loop
dec
push
push
loop
sub
xchg
cmp
repz
rclb
test
mov
loop
repz
repz
andl
push
test
jmp
jmp
shll
xchg
repnz
or
sub
dec
in
cmp
lea
jns
jne
add
and
push
push
adc
mov
divb
cmp
icebp
test
icebp
cmp
imul
pushf
dec
push
add
jecxz
rcll
sbb
popf
lock
stc
adc
and
jne
push
pusha
leave
mov
mov
push
lock
test
ss
push
jmp
add
outsb
add
sub
out
sti
cmp
inc
ds
add
iret
enter
add
add
jp
or
adcb
adc
adc
or
or
dec
add
sahf
rcr
xchg
mov
push
pop
inc
ficoms
icebp
ss
jg
fldl2e
push
inc
add
pop
push
call
lahf
out
insl
push
dec
pop
jp
ficoms
mov
insb
mov
pop
dec
cs
repz
pop
mov
iret
repz
pop
int3
pop
xor
sbb
mov
insb
mov
pop
scas
pop
and
jns
push
repnz
push
push
addb
push
sarb
push
xor
mov
push
das
inc
adc
loope
lret
bt
aam
add
push
cs
shlb
push
push
mov
in
push
or
cli
dec
arpl
xor
or
adc
or
lea
fdivs
fistps
cmp
mov
ja
and
add
adc
dec
and
insb
sub
lret
xchg
sbb
cmp
add
sub
pop
xchg
adc
icebp
lea
jecxz
add
jl
test
fisubrs
movsl
dec
adc
xchg
insl
or
nop
jo
cmp
and
inc
cltd
push
add
cmpsl
mov
test
aam
cltd
mov
in
lcall
cld
add
and
adc
andl
adcl
mov
jp
jecxz
shrb
pop
inc
inc
inc
inc
pop
or
jle
push
cmp
mov
mov
jb
adc
mov
pop
inc
push
inc
and
mov
add
or
mov
in
popa
faddp
add
dec
adc
cmpsb
or
adcl
jo
je
pop
roll
sub
inc
inc
pop
cmp
enter
adc
mov
add
xor
orps
push
or
or
push
push
cmp
pop
dec
xchg
hlt
and
ja
icebp
and
xor
repz
mov
jmp
mov
add
xchg
fs
mov
jo
sub
sub
add
cmc
clc
or
adc
mov
adc
push
stc
jecxz
jo
aad
lret
mov
ljmp
jp
inc
cmp
es
sbb
outsb
out
xor
sbb
sbb
bound
push
mov
pop
pop
push
inc
cwtl
ja
xor
pop
subb
popa
mov
clc
pusha
inc
sub
enter
icebp
cmp
add
mov
repnz
xchg
clc
lods
add
or
pop
je
sahf
inc
loope
dec
fwait
add
jmp
stos
add
testb
movb
sbb
lret
nop
aaa
adc
mov
fsts
inc
aaa
cmp
mov
hlt
mov
test
push
leave
adc
mov
inc
loop
jns
jo
fists
cmp
insb
mov
enter
or
test
fcoml
fbld
mov
mov
mov
incl
inc
decl
jl,pn
xchg
jne
loop
repnz
das
cmpsb
sbb
cmp
cmpl
outsb
pop
decl
or
push
pusha
or
push
jl
std
dec
or
mov
dec
mov
mov
incb
mov
bnd
cmp
jae
dec
stos
xchg
sbb
cli
xchg
pop
jae
sbb
mov
dec
loope
loop
fsubr
mov
pop
sub
pmaddwd
push
pop
leave
add
mov
dec
test
sbb
add
adcl
call
in
mov
dec
or
sbb
dec
dec
je
push
push
adc
lock
into
icebp
popa
sbb
xchg
insb
dec
repz
jecxz
mov
clc
mov
xor
pop
sti
cltd
cmp
decb
push
test
mov
inc
xor
xchg
out
mov
cmp
das
shll
sbb
lock
add
mov
filds
sbbl
mov
lock
push
pop
add
popa
int3
pop
int3
adc
test
dec
mov
push
adc
ficoml
mov
inc
sbb
add
inc
aam
push
and
cmp
mov
jmp
cmp
inc
enter
ja
insl
or
pop
jo
jl
jge
push
push
cltd
pop
not
in
add
inc
out
jge
int
push
xchg
inc
out
cmp
pop
mov
fucomi
jmp
or
mov
xchg
add
mov
sbb
push
lock
imul
xchg
mov
test
insl
mov
sbb
call
pop
sub
or
je
insb
sub
add
dec
ret
sbb
sbb
sbb
mov
mov
inc
or
add
fistl
cmp
pop
jg
mov
push
sti
ss
sub
or
xor
inc
xchg
inc
jp
xor
cmpsl
clc
sbb
jae
cmp
push
pusha
data16
adc
xchg
push
ja
push
sarl
loope
push
jmp
jge
add
pop
je
sbb
jl
add
popl
cltd
insl
mov
jno
mov
mov
push
enter
in
jmp
xor
dec
inc
add
dec
jne
mov
inc
adc
inc
int3
jmp
inc
popaw
and
inc
lret
test
adc
xchg
pop
popl
sub
lods
sti
mov
pop
xchg
or
les
inc
mov
jne
subl
jns
cmp
subl
push
adc
lcall
mov
pushf
mov
adc
jp
push
test
lea
inc
fidivrl
ret
push
lods
mov
mov
test
push
movsb
xchg
xchg
mov
cmp
fimull
jge
add
push
push
hlt
mov
sub
push
adc
out
lods
push
push
loopne
adc
adc
or
jnp
out
out
call
mov
out
xor
push
cmpsl
pushl
cmpsl
int3
dec
ljmp
mov
xchg
rorb
dec
mov
push
pop
loopne
xor
add
xchg
xor
rcll
hlt
dec
js
adc
or
stos
jecxz
adc
adc
mov
mov
add
fbld
push
push
inc
jg
cmp
je
gs
xchg
popa
sub
enter
pusha
pop
pop
mov
fiaddl
jg
add
iret
inc
inc
cmp
je
xchg
mov
imul
fs
orb
sbb
add
fidivrl
and
fmull
dec
je
popa
sub
mov
sbb
imul
pusha
fbld
incl
mov
mov
hlt
push
mov
push
inc
jecxz
xchg
sbbl
inc
int
inc
pop
int3
lret
pop
sbb
popa
mov
insl
pusha
shlb
cmp
push
add
add
push
flds
mov
movl
ja
nop
hlt
mov
addr16
test
stc
adcl
or
mov
pop
cmp
je
mov
ret
add
dec
imul
int3
pop
jo
or
add
push
subb
inc
int
dec
add
fs
pop
addb
cs
ja
cli
frstor
sub
cmovs
add
hlt
or
inc
push
push
dec
sahf
sbb
mov
add
adc
xchg
dec
mov
add
jmp
adcl
je
push
or
dec
xchg
jne
jmp
dec
or
pop
repnz
cmp
cs
dec
jmp
inc
scas
roll
dec
sbb
into
sub
mov
pop
adc
sbb
iret
shll
stos
mov
cmp
lahf
movb
in
pop
call
bound
add
lcall
in
out
sbb
and
or
adc
adc
add
stos
shll
push
jns
and
test
push
orb
movsb
cmp
inc
stos
mov
mov
or
fs
out
push
in
and
inc
jbe
inc
sti
push
jmp
cmp
ja
xor
or
cmpb
jne
inc
inc
shlb
sar
mov
aam
lods
ja
or
shrb
subl
movsb
cltd
pop
imul
mov
xor
pop
jb
xchg
and
push
je
shr
es
inc
jmp
aas
adc
push
sub
cli
mov
mov
scas
pop
inc
mov
mov
jb
cmp
jmp
xchg
add
jp
or
addr16
ljmp
adc
xchg
pop
fldz
push
xor
nop
dec
aam
adc
jo
test
and
ss
mov
mov
lcall
pop
inc
and
adc
add
pusha
hlt
add
and
loopne,pt
ja
inc
or
push
cmc
xor
clc
outsb
mov
mov
inc
das
ret
insl
push
arpl
jmp
pop
arpl
xchg
mov
xor
push
jno
fs
test
inc
hlt
pop
xchg
pop
iret
or
add
sub
movsb
mov
sub
cmpsb
cmpsb
les
cmp
ljmp
shl
pop
or
pop
xchg
test
stc
ret
sbb
in
push
outsb
xor
cld
xor
daa
fcompl
or
into
popa
ror
mov
es
adc
imul
push
add
inc
sub
and
push
mov
icebp
or
rol
add
mov
and
test
xor
mov
ljmp
call
sbb
and
lods
xorl
inc
pop
pop
mov
dec
fs
popf
sahf
enter
adc
shrb
arpl
int3
imul
or
pop
sub
xlat
leave
mov
jmp
mov
cwtl
cmpsb
popa
or
adc
dec
lock
lcall
arpl
and
inc
cmpsl
test
ret
repnz
gs
imul
int3
push
xchg
sbb
fs
add
out
sub
push
sbb
out
sbb
mov
ficoml
test
mov
dec
js
mov
sub
aaa
icebp
push
sub
inc
push
rclb
imul
jo
andl
cmp
hlt
inc
or
movnti
lds
jge
fiaddl
xor
ja
lods
addb
mov
outsl
js
add
popa
ret
mov
fistl
dec
sbb
xor
cmp
ret
js
cli
repnz
dec
outsl
pushf
xchg
xchg
xor
adc
in
shll
mov
lcall
arpl
icebp
test
mov
jmp
rolb
sarl
adc
cmp
call
add
pop
hlt
fadds
icebp
add
mov
xor
mov
pop
shrb
jbe
push
inc
cli
lods
jne
shl
sub
push
pushl
mov
fs
in
sbb
call
popa
mov
push
adc
gs
push
insb
andb
fs
fldl
jns
sbb
push
ret
loope
adc
leave
ret
sbb
mov
jecxz
imull
subl
loopne
out
add
loop
into
push
sbb
pop
sbb
call
dec
test
or
jae
xor
xchg
call
adc
aad
fdivl
iret
xor
push
dec
or
stos
pop
mov
sbb
push
scas
stos
sub
mov
push
push
imul
sbbb
add
dec
xchg
int
enter
es
push
add
mov
cmpb
mov
sub
push
les
cmc
pop
fdivrs
addb
and
add
leave
cmp
loope
and
imul
or
ss
lock
sub
dec
add
aas
js
push
or
cmpb
push
call
das
and
cmpsl
cld
sbb
xchg
lock
or
and
add
xor
add
test
or
lock
mov
cmp
ja
push
push
adc
xor
push
pop
sub
push
jbe
xchg
out
xor
adc
jg
push
xor
mov
pop
pop
pop
pop
sbb
sbb
jg
popl
mov
inc
scas
mov
ja
push
mov
add
pushf
jbe
xor
sarb
xor
call
mov
xchg
fmulp
adc
adcb
pop
jo
sub
loopne
cmp
imul
or
mov
push
mov
cld
sub
dec
je
and
or
out
xor
adc
mov
adc
fsqrt
or
push
sbb
pusha
cmp
fistpll
mov
add
shl
or
pop
mov
shl
add
daa
add
lahf
cli
ljmp
dec
jne
lea
or
clc
xchg
jns
cmc
mov
dec
jle
sbb
jb
call
xchg
pop
loope
jo
mov
xor
stos
sbb
test
jg
hlt
mov
and
push
push
les
or
sub
outsb
cli
ja
sub
or
in
xor
or
mov
lret
shll
ret
insl
je
dec
cld
ficoml
push
push
out
ret
xor
fdivs
dec
sub
pop
lock
push
pop
add
in
inc
inc
cld
sbb
dec
and
clc
mov
push
orb
mov
jmp
and
je
and
sub
nop
mov
cmp
adc
aad
jmp
mov
mov
out
leave
sub
mov
cmp
and
cmpsl
sbb
lret
add
jmp
cmp
push
add
and
jmp
popa
test
rolb
inc
ret
sbb
pop
and
inc
insl
sub
and
mov
les
or
insb
or
ja
mov
mov
call
or
aaa
inc
push
xor
jne
dec
add
pop
cwtl
sub
jecxz
cmp
test
dec
mov
pop
and
into
mov
or
adc
outsb
fucomip
mov
lods
jmp
stos
dec
lods
mov
repz
sub
cmp
fmull
mov
std
jne
lret
mov
sbb
fldt
or
enter
add
iret
rclb
inc
push
call
xor
pop
or
dec
cmp
mov
mov
mov
popf
movsb
pop
xchg
repz
xor
cmp
out
into
std
fidivl
push
jmp
fs
imul
and
pop
rcl
xor
test
mov
test
test
jae
cmp
jbe
jg
add
test
push
push
cmp
adc
inc
pop
leave
inc
jo
cli
adc
xor
mov
js
jmp
lea
loopne
sub
cld
jmp
out
out
pcmpgtb
mov
cmp
lods
inc
and
ljmp
pop
test
shrl
inc
jecxz
filds
xorb
xor
inc
nop
out
pusha
push
push
push
lahf
faddl
lea
mov
inc
mov
inc
inc
inc
dec
jne
mov
mov
outsl
xchg
jl
sbb
xchg
xor
mov
sarl
popw
inc
push
mov
adc
jne
fsubrs
movsb
mov
fdivp
push
es
add
jnp
test
mov
or
xor
es
loope
dec
or
dec
loopne
adc
cs
pop
push
loopne
nop
popa
loop
push
push
pop
dec
inc
sub
pop
sbb
aam
xor
sahf
mov
xor
mov
and
push
dec
inc
push
push
in
aam
inc
int3
cmp
jo
je
ljmp
or
addl
fs
push
or
sbb
enter
aaa
sbb
lret
pop
sub
jmp
xor
add
mov
mov
add
sbb
ss
push
push
inc
jo
out
arpl
xchg
aad
pop
add
sbb
mov
stos
dec
jb
jmp
xchg
and
and
jo
add
add
jae
lret
mov
mov
dec
pop
movl
inc
lock
mov
fisubrs
adc
or
push
sbb
and
pop
sbb
loopne
pop
cmpsl
sub
inc
mov
into
int3
std
call
xor
mov
movsb
rolb
sub
inc
xchg
int3
mov
fidivl
cwtl
sarb
aam
pop
cmp
adc
push
cwtl
mov
jne
add
xor
aaa
out
jle
out
cs
or
push
cmpl
add
lds
add
pop
cmp
daa
add
sub
jl
dec
or
sbb
or
in
pop
add
mov
enter
mov
adcb
mov
mov
xchg
fidivs
cmpl
push
pop
pushf
jnp
rol
adc
movsl
sub
or
xorl
inc
sbb
loopne
popa
ret
dec
xor
jecxz
xchg
sbb
je
push
mov
dec
add
push
adc
test
pop
in
or
pop
jbe
ret
adc
orb
add
ret
jo
test
sbb
jo
loope
adc
or
cwtl
or
mov
add
jbe
jmp
push
xchg
dec
or
or
mov
mov
jge
movsl
xchg
mov
stos
add
mov
rcl
subb
fsubr
daa
mov
jns
sarb
or
lds
sbb
inc
mov
or
add
fldt
rorb
xchg
sbb
cld
jmp
and
je
enter
aaa
daa
xchg
call
aas
sbb
cwtl
sub
or
loope
sub
push
push
push
mov
outsb
ja
jmp
test
andl
xchg
mov
mov
orb
pop
cmp
inc
jns
pop
ret
cwtl
and
and
sbb
sbb
jne
sti
lret
insb
push
cld
lods
adc
and
jo
sti
mov
test
icebp
sarb
movsb
xchg
mov
imul
cmpsb
insb
in
xlat
adc
insb
jg
imul
push
outsl
rcrb
or
and
inc
sub
andl
ja
inc
ret
dec
push
mov
fs
and
pushf
cmp
jns
or
frstor
lcall
xor
not
movsb
xlat
push
or
xchg
adc
xor
popa
sub
enter
mov
or
clc
nop
add
cmp
sub
cmp
inc
pop
cmp
add
cmp
mov
daa
jle
pop
sbb
or
mov
jmp
lds
and
xlat
out
sti
jbe
and
pop
cmp
je
jle
or
add
popf
push
mov
sub
lds
jge
pop
adc
inc
pop
or
mov
jnp
ljmp
repnz
jle
mov
lret
pushf
cmpl
out
in
xchg
es
adc
pop
cmpsb
and
daa
test
mov
jno
xchg
dec
push
mov
mov
mov
ret
imul
mov
xchg
es
mov
dec
push
cwtl
mov
es
aaa
inc
mov
push
rorl
sub
inc
mov
addb
das
push
cmp
cld
shll
rcrb
sub
andl
enter
ja
adc
test
inc
inc
or
mov
lret
in
and
fmul
lret
xchg
fcomps
int3
lretw
lret
lret
out
mov
popf
enter
jecxz
lret
movsl
shrb
push
outsl
add
add
dec
fistpl
mov
dec
cld
adc
jecxz
test
sub
aam
add
in
loopne
sub
lahf
lea
test
adc
mov
push
xor
add
sbb
jne
pop
jno
movsb
or
or
pop
jmp
jge
daa
lock
jnp
mov
adc
push
mov
add
or
bts
jmp
int
or
mov
es
mov
jae
ljmp
push
add
js
lahf
push
cmp
hlt
aas
add
stos
cmp
js
or
pop
mov
add
lahf
in
imull
in
mov
lahf
out
sahf
sarb
mov
push
add
or
jmp
push
jno
call
test
adcb
clc
fimuls
nop
xchg
push
mov
inc
dec
je
adcb
and
inc
ds
repz
push
pop
fs
xchg
add
jnp
sub
nop
or
add
adcb
pop
cmpsb
and
test
cmp
cmp
xor
add
dec
cmpsb
popa
dec
xchg
push
adc
inc
jmp
push
js
sub
les
jle
or
test
adc
dec
test
or
negb
rol
sbb
fisttpl
or
inc
mov
incb
mov
sub
adc
test
int
pop
clc
push
jo
aam
es
inc
sbb
pop
adc
cli
and
pop
loopne
lds
xchg
and
mov
and
inc
ljmp
and
mov
and
dec
lods
jge
dec
sbb
hlt
fdiv
mov
cmp
mov
int3
and
daa
test
mov
daa
and
dec
sbb
orb
sbb
jbe
aam
or
inc
or
je
into
dec
push
dec
dec
dec
adc
push
add
add
cmp
cmp
imul
movl
xor
dec
add
push
cmpsb
rol
sub
pusha
and
jne
or
push
adc
mov
testl
pop
jbe
push
aam
adc
test
test
or
aam
jo
push
or
mov
add
cmp
dec
add
cmc
gs
sbb
sahf
and
add
mov
js
push
sub
in
testb
test
ja
enter
adc
je
movl
nop
xbegin
lock
mov
pop
adc
sbb
hlt
jecxz
jmp
mov
mov
push
inc
and
xor
lock
jnp
or
xor
pop
ljmp
daa
xchg
adc
jno
adc
jno
xor
pop
or
inc
sbb
imul
ficoml
shll
dec
clc
add
adc
add
xchg
por
mov
inc
sub
sbb
mov
mov
fiaddl
xchg
subb
stos
push
push
test
jecxz
pop
push
push
das
jmp
inc
loopne
inc
inc
es
cmp
cwtl
lea
push
or
push
or
and
push
sbb
sbb
add
shrb
mov
js
cwtl
mov
jl
or
push
mov
xchg
inc
or
test
add
popa
or
or
dec
or
pushf
dec
loope
and
push
sub
mov
sbb
cli
mov
adc
cs
mov
inc
cltd
adc
dec
fnsave
inc
enter
push
es
sub
or
in
test
inc
std
mov
mov
adc
pop
negl
sub
stos
jbe
in
push
fs
push
mov
nop
clc
dec
xchg
imul
jle
push
push
jne
xchg
mov
hlt
dec
ljmp
jns
js
and
ficompl
or
push
sub
pop
add
cli
add
add
add
adc
add
add
and
push
push
les
ret
scas
jno
add
loopne
es
push
push
lock
sbb
frstor
mov
or
pop
testb
add
adc
or
or
dec
inc
add
jmp
sbb
ljmp
mov
lcall
ret
cmpl
jge
jo
les
xor
movsb
mov
bound
je
push
ret
loopne
sbb
fbstp
ds
rorb
popf
in
mov
jb
hlt
fadd
fcomps
cmp
xor
push
sbb
dec
push
add
xchg
sub
cmp
in
leave
mov
jl
push
leave
test
in
or
cld
cmp
clc
or
or
andl
adc
ljmp
lea
rcrb
jl
xor
loope
cmp
mov
cvtps2pd
sub
out
test
pop
sbb
pop
sar
pop
mov
inc
es
push
inc
sti
mov
push
bound
lret
in
jmp
clc
stos
clc
sbb
call
jnp
jae
je
or
sub
je
sbb
scas
pushf
pop
or
add
xchg
lret
and
sarl
or
adc
test
push
sub
or
push
int3
aas
mov
add
sub
push
imul
add
or
or
ja
movsl
dec
enter
add
push
sahf
out
sbb
pop
hlt
stc
nop
je
or
or
out
je
insb
je
lock
and
roll
push
mov
sub
jbe
sbb
adc
and
sti
xchg
ss
or
xor
mov
into
enter
xor
movsl
sbb
add
fs
lcall
incl
outsl
cmc
movsb
sbb
jne
js
stos
xor
pop
xlat
je
mov
jge
push
xor
cmp
lea
and
or
sbb
jle
inc
je
pop
notb
fadds
push
ret
add
loope
movsl
mov
fdivr
push
cmp
and
stos
dec
nop
and
jae
dec
testl
popf
jbe
xchg
mov
aaa
jne
das
mov
mul
lock
testb
pop
and
in
or
fmuls
mov
fstps
sub
es
sub
cmp
daa
add
mov
cmp
stos
mov
push
insl
cmp
xchg
sbbl
cmpsl
loope
add
aam
dec
dec
lret
add
cmp
fdivs
dec
pushl
test
sti
test
push
mov
push
int
pushl
fwait
rclb
add
jno
loop
cmp
hlt
mov
pop
lret
inc
mov
rorl
lret
cmpb
add
test
je
push
cmp
xchg
push
cmp
clc
push
sbb
pop
cli
test
pop
fnstenv
outsb
jo
add
add
pushf
into
add
addr16
lods
cld
inc
inc
push
push
outsb
je
test
ss
sub
aas
add
pop
insb
xor
test
mov
je
data16
pop
push
add
orb
adc
mov
xchg
jb
lds
pop
pushf
or
addb
mov
call
push
add
lahf
mov
faddp
pop
jne
mov
jne
mov
jmp
cmp
fnstsw
insl
cmpl
incl
sub
aam
mov
xor
int
or
mov
scas
fstpl
out
call
cld
adc
sti
mov
mov
ret
dec
sub
es
pop
mov
mov
test
lea
dec
mov
movsl
push
pop
xchg
sub
lods
push
sbb
add
cmpb
jne
sbb
add
push
push
aam
test
outsb
mov
add
out
addr16
inc
setl
decb
jbe
mov
adc
pop
cltd
les
push
pop
data16
xor
enter
push
lret
je
inc
jecxz
jne
push
cmpsl
ljmp
cltd
ss
pop
fidivrl
sar
popa
mov
aaa
int3
je
cltd
and
gs
dec
dec
sub
pusha
aaa
push
pop
jl
jae
je
add
rolb
jecxz
aam
mov
nop
pop
fimull
scas
jecxz
mov
or
sbb
lahf
cmp
rorb
lret
pop
mov
or
outsl
lods
cmp
jne
and
lea
mov
push
inc
test
and
and
cmp
aas
xor
or
xchg
clc
sahf
add
mov
outsb
rcrl
xchg
sub
inc
cmp
add
ret
into
or
cmp
jg
shlb
xor
ss
push
mov
jmp
dec
or
push
add
fisttps
fdiv
sub
xor
test
jecxz,pn
mov
xchg
add
sub
jl
and
sub
push
test
sahf
and
mov
adc
adc
cltd
sub
sub
pop
shlb
in
mov
mov
mov
lea
sbb
sub
add
sub
push
mov
xor
lods
leave
ret
fdivs
jno
rcr
aaa
cmp
or
pushf
push
shll
nop
popa
jle
sbb
mov
push
mov
and
cmpsb
xchg
lea
sub
loope
sbb
push
and
imul
je
das
or
push
xchg
popl
or
adc
daa
pop
mov
addb
mov
sub
movsb
cmp
mov
jno
adc
pop
mov
mov
mov
inc
add
sarl
orb
ss
sbb
or
or
mov
add
stc
adc
test
mov
movsl
fisubs
xor
mov
insb
or
iret
rcrb
push
lea
adc
gs
inc
pop
sbbb
fmulp
rcrb
roll
loopne
pop
add
lcall
mov
fstl
daa
push
mov
mov
nop
test
fiaddl
push
push
insl
decl
cmp
cmc
push
lock
pop
popf
or
add
cmpsb
xor
aas
out
ret
cmp
inc
xor
pop
or
sahf
lock
push
in
inc
mov
aad
pop
cmp
divb
cmp
pop
mov
outsb
push
xchg
lock
jne
jecxz
push
push
and
je
xor
xchg
popa
sub
imul
cmc
or
or
add
mov
sbb
movsb
lea
and
mov
testl
add
movsb
sub
push
pop
ss
jnp
cwtl
jae
or
mov
adc
enter
or
clc
sub
mov
fdivl
mov
ret
shll
add
popa
and
scas
mov
sub
cld
shr
mov
js
inc
shrb
test
and
shlb
or
fdivrs
xor
or
enter
fimuls
mov
or
clc
incl
jne
sar
dec
cmp
jbe
push
pop
in
sbb
and
or
subb
dec
jmp
pushl
mov
shr
lea
not
and
decb
jne
scas
cli
fsubl
sbb
lea
xor
pop
cmp
pop
add
mov
add
push
or
pop
inc
inc
jl
and
push
or
sub
jmp
clc
and
std
pop
mov
shlb
and
sti
add
mov
dec
pop
cmp
out
lret
pop
aaa
fcmovu
mov
imul
xor
inc
sbb
pop
jp
xchg
dec
shll
cmp
fdiv
shr
not
and
rorl
jne
sub
jmp
lea
cltd
repnz
xor
mov
mov
add
mov
cltd
or
add
cli
fimuls
xchg
lea
mov
inc
add
pop
dec
or
adc
negl
ss
mov
mov
inc
mov
mov
pop
mov
xchg
sbb
lods
push
or
pop
mov
inc
dec
or
jmp
dec
adc
push
mov
or
fidivs
add
inc
xor
mov
dec
mov
pop
scas
or
and
add
je
and
adc
adc
pop
shl
add
scas
fidivs
push
call
aas
gs
push
or
mov
andl
add
decb
adc
sarb
pusha
add
and
inc
mov
hlt
jne
push
push
mov
sbb
clc
test
inc
das
das
int
mov
mov
add
adc
jge
fisttps
cmpsl
insb
jl
push
cmp
cmpsl
sbb
or
mov
pusha
test
loopne
ret
mov
xor
ds
adc
jne
data16
cwtl
outsl
push
fst
shrb
addl
adc
dec
ret
les
cmp
xorl
mov
inc
sahf
xor
jecxz
cmc
outsl
and
adcb
fwait
orl
mov
lds
mov
xor
outsl
push
popa
je
add
rolb
mov
ret
imul
cmpsl
test
nop
add
push
mov
jne
or
add
pop
aas
lret
sbb
popa
cltd
out
push
sbb
lea
test
inc
inc
sub
roll
adc
jmp
insb
in
dec
clc
fsubrp
fucom
adc
adc
or
adc
out
mov
cld
lock
call
jmp
add
je
clc
add
pushf
rorb
movsl
add
sub
jecxz
popa
push
sub
fs
pop
mov
fistps
inc
inc
mov
lock
dec
dec
inc
sbb
cli
clc
jne
or
lds
not
and
and
les
push
xlat
sub
sarb
mov
fsubl
cld
or
icebp
scas
inc
jnp
clc
mov
and
pushf
jle
clc
cmp
ret
int3
inc
mov
cmp
xorb
popa
pop
pop
push
cmp
stc
add
mov
int3
push
or
add
mov
imul
test
nop
es
add
das
movsb
add
nop
dec
or
sbb
add
push
jns
and
adc
sti
xchg
pop
adc
pushf
sar
dec
mov
add
cs
fstpl
mov
fadd
lea
jbe
jg
mov
jle
mov
in
lcall
movsb
shlb
iret
fisubs
jo
js
and
and
out
loopne
mov
sub
pop
pusha
test
adc
inc
insb
inc
inc
pusha
scas
xor
test
and
and
clc
adc
dec
aas
jl
int
or
sti
and
dec
insb
pop
xor
or
sbbl
jp
movsb
incb
popa
dec
sti
mov
cmp
xor
orl
dec
movl
orl
fistps
cmp
dec
faddp
ds
adc
fwait
jo
mov
or
mov
mov
fcoml
imul
dec
in
jb
into
mov
cmp
jns
rclb
add
sbb
ja
inc
ja
jp
insb
stos
add
ret
lods
pop
and
inc
addb
hlt
cmp
push
push
push
jge
mov
dec
stos
push
rcll
jae
clc
in
or
stos
mov
or
or
cmp
and
decb
xlat
lcall
cs
jnp
out
push
jne
mov
fimull
fnstenv
jmp
jnp
add
jo
mov
xor
aaa
arpl
ss
and
cwtl
cmp
fsubs
add
lahf
mov
sub
pop
lcall
cmp
imul
pushl
sbb
in
cli
and
insb
clc
loope
mov
dec
pop
iret
jne
sbb
mov
cmp
ss
cmc
cli
xor
add
out
mov
fsts
dec
mov
and
jne
mov
repz
cld
test
and
leave
inc
test
inc
push
mov
adc
pushf
mov
sub
icebp
sbb
fdivrl
add
dec
add
xchg
adc
iret
push
scas
push
icebp
push
and
addb
mov
jne
or
jae
in
hlt
and
jmp
jp
mov
sub
bound
dec
push
and
mov
clc
into
xor
push
lcall
adc
iret
xor
push
int3
inc
pop
mov
xor
or
cmp
mov
push
out
or
dec
call
or
inc
or
inc
or
push
mov
in
lret
mov
mov
mov
outsb
add
call
lods
sahf
aad
shrl
push
lea
dec
js
sbb
dec
jne
cmp
or
push
ds
orl
xor
out
sub
cmp
filds
push
nop
in
jb
or
xorl
ds
add
or
push
inc
test
jle
and
pusha
add
sti
clc
add
xor
and
jp,pn
test
shlb
add
mov
add
ss
jnp
jg
and
leave
fimuls
movb
test
cmp
and
jnp
flds
scas
and
inc
inc
cmp
cmp
popa
ret
sub
add
push
mov
adc
lret
push
and
inc
push
out
repnz
int
fcoms
add
push
push
loope
push
in
shlb
or
xor
xchg
inc
add
mov
jmp
push
dec
or
mov
test
mov
lahf
pushl
adcl
push
xchg
clc
in
pop
je
out
pop
jne
push
in
adc
adc
pop
sub
sbb
sbb
pop
mov
fwait
js
jl
lcall
dec
inc
pop
or
jmp
movsl
or
push
hlt
inc
mov
cmpsl
pop
jl
jns
mov
xor
mov
hlt
and
insb
int3
push
test
imul
iret
jns
or
je
popa
sbb
nop
pop
dec
int
pop
mov
sbb
enter
or
scas
add
pop
dec
cmpl
ret
push
push
sub
adcb
cltd
addl
mov
lret
and
js
dec
pusha
xchg
lret
lods
aam
int3
xorb
hlt
mov
shll
jmp
in
cmpl
pop
scas
das
sbb
call
jge
jmp
movzwl
or
int3
test
xchg
push
lods
in
je
cmp
dec
loopnew
mov
jle
cld
rorl
sbbb
je
out
out
test
mov
iret
in
lcall
xor
ja
jle
inc
mov
mov
into
dec
add
sbb
adc
test
cmp
lods
or
dec
fcmovne
pop
add
mov
or
jne
sbb
add
dec
fmulp
rorb
lods
ljmp
ljmp
hlt
faddp
pop
roll
in
out
push
inc
pushf
shlb
sub
stos
imul
data16
or
pop
int
add
sbb
jg
sbb
leave
add
cmp
xor
ss
scas
cmp
mov
xchg
inc
push
sbb
jmp
int3
pusha
add
les
movsb
rorb
std
movsb
xor
ret
jne
in
movsb
in
push
enter
lcall
inc
call
test
mov
cmpsb
repnz
sub
test
cmpsb
cwtl
orl
xchg
dec
gs
enter
and
mov
inc
inc
push
lods
push
call
in
lods
dec
lods
dec
and
daa
xchg
neg
lret
adc
cmp
scas
dec
sbbb
outsl
lahf
call
push
pusha
lahf
sbb
and
mov
ret
int
add
fimuls
cld
stos
push
stc
addl
rolb
xchg
lret
mov
shr
pop
and
in
jle
adc
test
push
hlt
xchg
lahf
push
and
in
sbb
add
add
adc
and
in
pop
xchg
or
add
add
or
or
out
xor
loop
in
xor
mov
lahf
les
sbb
in
sbb
jb
test
test
inc
cmp
icebp
adc
mov
or
enter
cmp
adc
lcall
int
sub
test
pop
cli
adc
ficomps
push
ds
in
aaa
mov
mov
lea
and
jo
mov
sub
jbe
push
data16
cmpsb
mov
sub
loope
js
mov
arpl
push
or
cltd
pop
clc
xchg
or
sub
push
mov
mov
and
xchg
or
adc
xor
mov
add
or
mov
and
cmp
inc
adc
sbbb
push
lods
inc
mov
das
mov
or
mov
imul
test
je
dec
insb
popa
inc
xor
shr
lds
repz
adc
aam
xlat
out
fsubr
fsubs
push
adc
and
rcll
cmpsl
xor
add
hlt
hlt
out
je
stc
mov
aaa
inc
cld
push
or
add
aaa
pop
add
dec
mov
adc
testl
push
pop
loopne
xor
mov
sbb
and
not
and
and
mov
or
sbbb
dec
sarl
clc
add
dec
shll
call
cmp
or
mov
ja
push
movb
in
fcoml
cmpsb
xor
mov
imul
je
pop
sbb
add
push
pop
sub
sbb
and
lea
add
add
movsb
mulb
je
dec
je
push
or
xorl
add
mov
outsb
ds
loopne
fldl
or
fldl
or
and
mov
push
mov
and
mov
push
jns
insl
pop
push
leave
pop
jmp
jo
insl
neg
outsb
push
dec
mov
mov
negl
inc
pop
sub
das
sub
xchg
dec
je
add
and
sbb
je
or
sti
fldenv
lcall
xchg
out
fistpl
mov
add
cmp
sub
ret
jmp
rcrl
stc
pusha
or
fstps
inc
add
cmp
adc
adc
lock
pushf
cmpsl
repnz
test
xlat
sub
in
inc
adc
faddl
xchg
pop
push
fdiv
fsubrl
fstl
push
addl
pop
sbb
jne
das
and
inc
sub
pop
xor
push
jp
cmp
iret
mov
cmp
adc
mov
add
xor
and
cmpsb
adc
insb
dec
inc
sbb
test
or
push
mov
mov
loop
jg
push
cli
push
or
fdivs
ds
adc
lea
xchg
inc
jle
dec
call
pop
push
inc
clc
mov
pusha
loope
sbb
fildl
inc
faddl
addr16
adc
and
or
aas
test
or
clc
push
fmull
mov
inc
jp
cmp
test
jne
push
push
pop
xor
fldcw
dec
push
jns
and
add
bound
or
add
and
rclb
mov
cltd
gs
mov
fs
xor
pavgw
mov
outsl
ret
xor
xchg
in
adc
mov
mov
leave
aad
add
or
inc
jecxz
xchg
lods
lret
das
dec
test
or
lret
test
int3
cmp
rcl
pop
jb
add
cmp
movb
pop
dec
pop
mov
push
pop
mov
lea
pop
add
incb
jl
or
mov
add
jne
dec
sbb
in
xchg
icebp
loopne
sar
lea
testb
push
ret
xlat
mov
add
mov
mov
jae
xchg
and
loopne
mov
in
test
inc
pop
loopne
hlt
addr16
std
mov
or
adc
push
stos
arpl
cmp
adc
lods
dec
shll
or
inc
inc
mov
mov
xchg
ror
lock
repnz
cwtl
data16
mov
xchg
dec
push
pop
or
inc
lret
in
add
addl
add
cmpsl
pop
iret
mov
cmp
mov
imul
sar
mov
mov
popa
lds
mov
xor
arpl
enter
mov
fwait
outsb
pop
dec
je
or
inc
xchg
cmp
jmp
xor
lahf
xchg
sub
jp
dec
cmp
inc
sub
pop
imul
insb
mov
sbb
inc
jne
out
orl
movsl
push
pusha
sub
mov
push
aad
cmp
push
int
imul
mov
dec
push
pop
lods
cmp
popf
adc
and
sub
insb
mov
and
sbb
fmull
cmpsb
scas
cmp
jg
in
rcrl
push
mov
fs
cmp
xor
add
dec
sub
adc
xchg
cmp
pusha
je
mov
sbb
sub
cmp
lea
popf
lods
push
sahf
iret
in
mov
pop
pop
mov
cwtl
add
fnstcw
push
sub
stc
mov
push
adc
add
testl
mov
test
enter
fidivl
movb
mov
mov
out
add
inc
repnz
pop
imul
push
hlt
std
rclb
xchg
xchg
sub
cmp
shr
mov
rcrb
push
sub
jno
inc
arpl
pop
pop
pop
out
imul
xor
mov
rorb
add
mov
xchg
pushf
enter
in
mov
jno
jecxz
xor
rcll
or
and
adc
std
aaa
lods
dec
mov
addr16
lock
sbb
dec
sahf
fdivr
adc
pop
ret
loopne
lds
mov
test
in
push
iret
mov
shlb
aas
inc
xchg
popa
and
sti
and
call
stc
call
jb
enter
push
mov
out
in
std
push
mov
lds
jb
jge
mulb
arpl
insb
jbe
std
inc
mov
cmp
nop
std
lds
das
data16
sub
mov
xchg
std
out
imul
mov
push
lods
jb
dec
test
bound
daa
orl
sub
mov
mov
pop
fs
test
mov
xor
jae
test
lods
mov
shll
vpmullw
add
jecxz
jmp
test
lods
xchg
mov
inc
pop
inc
fwait
jne
cmpsb
inc
adc
popa
insb
dec
call
sbb
dec
mov
jno
call
ret
pop
nop
std
xor
jmp
jns
xlat
mov
std
jp
leave
sub
frstor
in
mov
sbb
cmp
mov
ds
cs
or
cwtl
sub
sub
or
push
test
sub
dec
imull
jmp
add
mov
sar
lock
cs
std
xor
push
sub
jge
push
sbb
jmp
pusha
adc
and
pop
int3
cmp
jge
sub
jmp
pop
dec
in
ss
test
enter
cld
lods
insb
test
lock
adcl
dec
cmpl
pop
push
aad
je
pop
bound
and
push
movsb
adc
js
pop
add
imul
lret
jne
cmp
adcl
xchg
sbb
repnz
mov
std
les
dec
pop
dec
or
and
movsb
ret
dec
std
add
loope
sub
inc
das
add
loope
xchg
aaa
fsubrl
jo
add
add
mov
push
inc
add
push
mov
lea
out
enter
ss
mov
dec
test
add
add
mov
cmpb
fmuls
xchg
loopne
cmp
jecxz
mov
push
cmp
aas
lret
and
inc
mov
inc
sbbb
icebp
or
lock
pop
pop
loope
cmp
pop
push
xor
ret
or
outsb
jae
lock
xor
and
dec
dec
push
lock
sub
push
and
add
mov
pop
xor
push
pop
push
test
and
add
test
test
add
call
mov
xchg
sbb
pop
int3
test
pop
int3
test
xchg
imul
pop
and
mov
int3
test
cmp
and
les
out
xor
stos
and
nop
test
in
nop
push
mov
xchg
lret
repz
xchg
outsl
dec
gs
inc
popa
pushf
inc
xchg
sbb
pop
enter
repnz
pop
lods
test
lret
sbb
xchg
pushf
add
test
and
jno
adc
cmp
popa
sbb
or
push
pop
pop
dec
movsl
jb
arpl
push
cmc
loope
iret
enter
insl
and
push
xor
pop
in
inc
leave
sbb
fwait
mov
clc
mov
leave
jmp
test
pop
inc
ret
xchg
adc
mov
pop
pushf
pop
repz
xor
xchg
cmpsb
and
shll
mov
and
dec
mov
sbb
mov
cmp
daa
xchg
movsb
stc
dec
repz
or
gs
movsb
bound
dec
repz
inc
xor
adc
test
test
test
test
pop
and
mov
pushf
pushf
nop
enter
nop
nop
pushf
sbb
xor
stos
jno
or
xor
dec
push
mov
push
and
pop
je
jmp
cli
out
popf
sahf
testb
add
roll
cmp
loope
xor
arpl
cwtl
nop
xor
xor
xchg
shr
popa
sbb
adc
imull
cltd
nop
sbb
jg
adc
and
push
pusha
jo
and
add
push
jo
pop
lods
adc
and
inc
or
jg
inc
into
or
and
or
cmp
test
lret
xchg
loop
or
sub
adc
add
jmp
test
rep
ss
neg
pop
movsl
jmp
sub
push
add
cli
push
add
test
shlb
xchg
xchg
or
xor
pop
or
or
cmp
push
add
loopne
mov
outsl
push
push
dec
adc
push
and
icebp
dec
out
test
inc
or
sub
jle
sbb
ja
adc
jg
and
scas
loopne
or
adc
lock
enter
cmp
lods
lret
sarl
clc
or
or
rorb
mov
and
call
mov
aas
shl
and
sub
mov
push
clc
ja
ss
sub
cmpsb
mov
add
sub
adc
in
xchg
ss
lock
rep
jge
jne
insl
mov
adc
aaa
in
out
jp
test
or
mov
push
lret
bound
rol
cmpsl
jmp
pop
jae
dec
inc
sub
cmp
or
inc
jnp
in
cld
pop
lcall
rcll
push
and
mov
inc
xor
pop
push
or
divb
inc
shlb
pop
aam
fdiv
push
xor
add
xor
ja
lea
jno
cltd
cld
cmp
sbb
gs
mov
or
inc
rolb
outsb
mov
mov
mov
mov
sub
xor
jo
sbb
subl
into
ds
js
cmpb
adc
mov
lahf
cld
push
mov
or
sbb
fsubrs
outsl
mov
jmp
jno
test
je
divl
adc
loop
lcall
aaa
mov
sbb
or
cmp
dec
mov
adc
jle
popa
add
pop
xchg
lcall
mov
sbb
sub
jmp
bound
test
adc
fcoms
cmp
orb
gs
push
add
cltd
inc
pusha
sub
mov
mov
sbb
mov
pop
jg
mov
mov
in
or
adc
xor
jmp
xchg
or
pop
or
loope
inc
or
dec
sbb
call
dec
adc
ffreep
cmp
or
in
add
je
hlt
daa
mov
inc
push
inc
sbb
jae
mov
or
jmp
ss
jecxz
add
sub
test
adc
jp
dec
xor
andb
scas
mov
jae
push
ds
clc
xchg
mov
inc
nop
loopne
push
or
xlat
shr
mov
push
mov
fs
pushf
sbb
sahf
inc
out
int3
jnp
pop
push
push
inc
shr
rcr
shr
rcr
or
jne
fnsave
out
fincstp
repz
dec
adc
inc
mul
pop
jb
cmp
decb
or
cmp
or
xor
and
clc
jns
adcb
or
fcmovu
fidivrl
lret
iret
xchg
mov
pop
adcb
add
mov
xorl
test
jmp
pop
adc
jg
clc
mov
movb
inc
or
or
movb
call
push
jno
push
pop
mov
mov
adc
pop
add
pop
jae
cmp
mov
xor
add
sbb
or
or
mov
clc
out
sub
pop
xchg
mov
ret
adc
mov
jge
jae
nop
pusha
andl
out
leave
popf
jne
mov
call
js
xor
lock
adc
jp
or
bound
dec
push
inc
adc
rsm
sbb
insb
lcall
aam
movsb
dec
sbb
mov
inc
cmp
jg
adc
jne
lea
les
jb
pop
mov
aas
push
in
lods
or
push
or
jae
push
sub
test
and
outsb
ret
cmc
jne
sbb
fists
jl
incb
jbe
and
pusha
icebp
and
int3
sbb
cmp
and
add
and
js
mov
lcall
into
add
jl
mov
push
mov
cld
sbb
adc
sahf
lds
add
push
mov
xchg
pop
push
sub
add
adc
adc
inc
fs
stc
inc
xor
jo
adcb
sbb
push
dec
lcall
add
mov
add
jbe
iret
add
add
add
jns
test
adc
sbb
or
stos
add
push
add
out
push
push
and
add
push
jge
or
and
add
insl
popf
cli
cmp
or
add
movsb
shlb
sub
data16
xchg
cmp
ret
andl
jge
int3
inc
cmp
push
gs
xor
cltd
sahf
mov
mov
sub
jmp
pop
cmpsl
call
int3
push
repnz
in
and
pop
mov
add
addl
xor
cs
ret
add
ds
cmpsl
jbe
add
ds
pcmpeqb
cmc
pop
mov
iret
jle
sub
or
xor
outsl
test
adc
adc
loopne
xor
in
sub
out
ret
icebp
incl
pop
rorl
and
adc
shll
ret
pop
popf
jne
int3
ret
add
ss
test
push
out
cmp
je
ss
jns
shlb
xchg
pop
sbb
add
outsb
or
cld
daa
add
inc
pop
mov
and
and
scas
and
imul
pop
out
add
std
sbb
shlb
ljmp
push
mov
into
inc
fimuls
insb
clc
dec
dec
nop
mov
push
ds
xchg
lods
hlt
icebp
repnz
pushf
pushf
scas
add
xchg
enter
orb
or
fwait
mov
call
outsb
or
add
xchg
sub
inc
cmp
roll
and
xor
mov
dec
sbb
pop
jne
inc
popa
insl
jg
add
xor
add
push
dec
sbb
dec
ljmp
ja
out
xor
mov
sbb
jb
fstl
sub
or
pushf
or
push
push
xchg
push
mov
or
mov
mov
dec
mov
lock
ret
in
pop
ja
lret
jno
cs
cli
aam
fcmove
lock
dec
pop
test
pop
sbb
pop
lock
les
dec
adc
cmp
sub
dec
addb
ja
push
pop
mov
or
imul
fcmovnbe
dec
dec
push
push
or
and
add
ret
push
push
jl
xor
inc
and
inc
movsb
sbb
scas
or
jne
sti
add
push
loope
popf
sbb
pusha
lcall
js
sub
mov
xor
or
mov
imul
jle
lret
int3
cmp
xor
sbb
loop
sub
fs
in
mov
sbbl
pop
orl
sbb
cmp
lea
xchg
push
scas
push
cmp
mov
jo
inc
lock
popf
sbb
sbb
push
sbb
int3
pusha
les
add
xchg
outsb
jae
sub
dec
or
dec
rcrl
push
or
adc
push
mov
outsb
or
daa
and
mov
in
hlt
add
pop
push
adcb
cmp
les
dec
ffree
push
jg
fildll
dec
lock
pop
mov
push
or
jne
flds
jne
fisubs
mov
or
pusha
clc
mov
xorb
mov
pop
mov
add
pop
xchg
aas
rol
mov
sub
fisttpll
jmp
mov
push
mov
pop
dec
or
ret
or
push
xchg
pop
fidivrl
adc
sti
inc
idivl
push
les
push
in
rcr
adc
das
cwtl
fwait
or
je
out
pop
sub
dec
mov
mov
jne,pn
ja
mov
sbb
inc
mov
popa
sub
adc
and
cld
push
jbe
sbb
mov
xchg
add
enter
inc
idivl
fisubrs
pop
sbb
push
or
imul
pushf
and
cmp
test
aaa
xor
add
aam
push
adc
fs
push
imul
pop
mov
pusha
lcall
orb
adc
xchg
insb
in
das
les
je
inc
in
cmp
sbbb
inc
cltd
or
cmp
add
rcrb
fsubr
jne
cmpl
ja
mov
add
and
or
pop
cmp
add
hlt
mov
out
inc
mov
push
push
cmpsb
cmp
dec
jb
pushf
xor
mov
xchg
sbb
sbb
inc
test
adc
jo
imul
push
addr16
clc
into
loope
rcll
mov
cmc
sbb
cmp
dec
and
mov
adc
pushf
cmp
jbe
jg
or
enter
add
rcr
inc
jmp
movsl
sub
mov
lret
adcl
popa
cltd
mov
or
xor
pop
push
cs
or
sub
mov
mov
add
enter
inc
loopne
pop
lds
mov
xor
add
mov
dec
add
lret
add
sub
stc
lahf
push
aam
es
push
out
mov
xchg
xchg
or
mov
pusha
mov
adc
fdivs
pop
repz
and
cmp
pop
ficompl
push
push
jb
push
fdivs
sbb
pop
inc
mov
push
inc
pop
push
xchg
or
les
and
sub
sbbb
test
lret
jl
jne
xchg
add
inc
call
dec
xchg
fsubrs
push
cmp
ss
jmp
xor
pop
adc
rorb
inc
xor
push
adc
add
add
inc
pop
je
pop
es
into
movsb
sahf
jb
je
loopne
and
and
or
mov
scas
mov
jmp
add
adc
andl
icebp
xchg
xchg
leave
roll
or
sub
inc
clc
cmp
loopne
and
inc
mov
mov
mov
xor
inc
pop
loope
pop
add
rolb
arpl
sub
adc
sub
mov
cwtl
mov
mov
or
inc
xchg
push
insb
xor
and
jmp
push
ret
sub
dec
adc
pop
push
sbb
inc
xor
or
mov
mov
stos
sbb
clc
hlt
aas
jae
mov
cmp
dec
shl
vmwrite
mov
push
ss
stos
pusha
inc
imul
jno
daa
and
dec
mov
or
push
daa
subl
and
in
loope
jne
add
push
jl
and
mov
or
or
leave
xor
js
out
jmp
or
push
jne
in
mov
cmp
cmp
mov
inc
inc
or
jne
repnz
sub
push
sar
jp
and
hlt
arpl
orl
sbb
clc
dec
loopne
or
gs
push
pop
cmp
sub
sbb
ret
jmp
sbb
addb
fs
sub
mov
add
cltd
inc
ret
cmp
rol
ljmp
or
loopne
imul
mov
mov
lcall
push
xchg
les
pushf
mov
push
push
pop
push
dec
add
mov
or
add
call
ret
in
jmp
add
mov
mov
or
or
or
push
and
aaa
test
cmp
inc
mov
aam
loope
in
js
dec
into
addl
push
sbb
push
and
pop
pop
add
out
mov
xchg
movsb
jl
inc
or
jge
pop
sbb
subl
xchg
pop
aaa
clc
add
nop
and
mov
andb
and
and
daa
into
sub
mov
cs
sarb
jg
popf
jle
loopne
ficoms
adc
rol
mov
jo
push
mov
dec
movsb
sub
bound
add
dec
jp
cmp
mov
add
out
add
flds
flds
cs
imul
inc
add
and
mov
or
jns
inc
sti
jle
incl
hlt
inc
adcl
sub
xchg
pop
repz
push
cmp
push
adcb
sub
jmp
xchg
xchg
fildl
testb
mov
adc
mov
aas
fwait
cmpsl
adcb
mov
rorl
mov
inc
idivb
add
loopne
lock
sub
mov
xor
dec
movl
pop
sub
mov
jmp
scas
pop
sbbl
notb
jae
dec
adc
aaa
sbb
out
mov
shrb
sahf
or
mov
fs
out
push
xlat
cs
push
divb
sti
xor
push
in
lret
movsb
loope
lock
andl
sbb
dec
shrl
in
out
mov
test
adc
loopne
or
xor
add
push
rcrl
adc
xchg
mov
sub
jno
sbb
enter
add
adc
jb
rcrl
xorl
dec
add
ret
sub
mov
cmp
inc
inc
xchg
pop
ljmp
repz
in
mov
icebp
and
cwtl
roll
jle
mov
stos
xlat
or
into
bound
or
mov
imul
push
vphaddudq
add
ret
pushl
add
jl
daa
and
push
jne
and
add
sarl
mov
mov
je
push
inc
inc
cs
in
adc
jl
subb
in
test
xor
dec
mov
lds
daa
xchg
mov
ss
push
add
bnd
xchg
cmp
adc
js
je
cmpsb
xor
pop
mov
loop
and
pop
rol
iret
lcall
or
pop
or
or
jno
add
sti
or
add
mov
and
inc
sub
push
enter
rolb
jb
or
sbb
loopne
pop
subl
mov
mov
repz
add
lods
mov
fsubr
fadds
movsl
in
mov
mov
dec
mov
mov
icebp
cmpsl
or
cs
sbb
les
loopne
dec
ds
and
cmp
or
inc
dec
add
and
icebp
lret
pop
mov
into
mov
cmp
cmp
dec
mov
aas
add
jmp
jmp
mov
lods
mov
fimull
sub
adc
leave
subl
mov
jnp
dec
mov
sbb
aam
sarb
ret
xor
cmp
xor
mov
sub
aam
fsubr
push
and
sub
dec
push
test
push
mov
int3
pop
ja
pop
jecxz
xlat
call
or
sub
mov
jmp
adc
outsl
jo
popf
lret
pop
jae
adc
fidivrl
or
cs
pop
jmp
lcall
or
pop
jmp
sarb
sbb
push
push
push
jge
aaa
nop
sub
leave
enter
movsb
xor
jl
aaa
dec
pushf
xorl
push
icebp
imul
and
adc
inc
jmp
xchg
ret
scas
hlt
pop
call
jbe
jne
imul
enter
push
inc
sub
jecxz
push
pop
dec
rcr
fsubs
popa
in
int3
add
pop
adc
lock
jle
inc
push
mov
shlb
adcb
jge
push
mov
cmp
cli
lds
push
ja
cld
and
out
imul
adc
add
pop
test
pop
xchg
or
add
stc
call
imul
repnz
andl
add
je
mov
and
ret
jmp
orb
push
out
add
add
pop
or
ret
sbb
sub
divb
or
xchg
loopne
xchg
or
jo
dec
dec
inc
loopne
daa
cltd
inc
insb
stc
sub
pop
jmp
push
andl
int3
dec
and
sbb
dec
or
cmp
inc
or
aaa
pop
adc
insl
and
idivl
add
jge
xchg
sub
inc
das
mov
lahf
cmp
test
cmp
jl
movsb
pop
adc
sahf
adc
fwait
sub
xor
add
mov
imul
push
pushl
dec
shrb
lods
xchg
xorb
pop
in
sahf
in
and
or
adc
shll
out
lods
jmp
sahf
sub
test
and
ret
sub
sub
mov
imul
push
and
and
psubusb
inc
sbb
cmp
xor
or
adc
arpl
cmpl
and
lahf
add
arpl
mov
adc
xor
sbb
imul
push
and
mov
inc
or
bswap
rclb
pop
sbb
lock
das
add
push
jl
push
int3
mov
es
lret
loop
cmp
outsb
or
jg
and
pop
sti
aas
add
cmpsb
and
call
sbb
xor
and
bound
jl
jecxz
push
push
adc
inc
out
aas
sahf
push
xor
sahf
out
pop
jg
xchg
adc
cs
lcall
pop
jl
mov
cwtl
xor
subb
sbb
fucom
cmp
fildl
xor
inc
sbb
cmp
or
push
xchg
lock
icebp
movsl
jo
push
gs
add
mov
loope
and
sbb
in
dec
dec
lea
xchg
aaa
mov
pusha
xor
sbb
clc
or
test
or
shrb
loope
in
mov
enter
push
fsubs
ficomps
cmpl
dec
or
push
add
inc
or
sbb
push
fwait
sub
jg
sub
dec
shlb
fldz
out
pop
mov
cmp
lods
bswap
or
bnd
mov
and
and
or
insl
pop
xchg
sub
pop
mov
rcl
and
ja
cmpl
cmp
inc
push
out
into
cmp
movsl
and
jge
or
call
ret
or
clc
sbb
lock
rorb
ja
mov
push
nop
mov
pop
lret
jle
adc
push
or
dec
or
cwtl
dec
shrl
popl
mov
das
sbb
cld
sbb
shll
icebp
mov
add
xor
or
and
add
fcoms
shld
jbe
dec
sbb
popa
xor
test
jbe
in
je
cli
inc
test
push
xlat
cmpl
lods
add
inc
and
jl
jmp
inc
ljmp
or
enter
je
xchg
je
mov
enter
sbb
jmp
outsl
sub
or
iret
shl
add
add
mov
popa
jmp
test
add
stc
cmp
cmp
mov
es
call
sbb
mov
adc
jno
jo
imul
jmp
add
xorb
cs
jo
jo
jno
push
add
testb
jmp
xor
inc
xor
xor
jo
lret
out
hlt
push
sub
ja
add
and
mov
icebp
enter
ds
inc
adcb
fildl
arpl
mov
dec
sub
jns
popa
loop
shrl
test
mov
mov
filds
pop
enter
je
pop
push
and
dec
push
push
add
jmp
lcall
sub
push
lahf
inc
mov
pop
push
jb
movsw
fisttpl
cmp
jae
push
cmp
jl
mov
inc
or
dec
adc
mov
lahf
pop
jns
out
fisttps
lock
jne
clc
push
xor
cld
lods
je
jo
push
ljmp
pop
pop
or
adc
add
xorb
push
or
push
stc
in
dec
dec
xor
test
dec
movsb
jp
leave
mov
pop
mov
mov
mov
int
mov
push
lret
pop
sub
or
or
incl
sbb
adc
lods
jo
adc
mov
test
mov
or
xlat
jmp
fidivl
jns
jne
jmp
fstpt
mov
mov
or
push
arpl
das
sbb
adc
and
mov
lock
add
dec
xchg
pop
jle
xchg
les
jl
mov
pop
cmp
jp
jecxz
inc
sub
adc
pushf
ret
bnd
adc
out
push
and
push
jle
inc
cmp
add
add
jp
mov
sbb
inc
push
lock
sbb
rolb
hlt
negl
jg
mov
jg
or
outsb
adc
jle
aam
je
enter
and
mov
jbe
add
loopne
pop
lahf
sub
sbb
dec
in
xor
ja
fnstenv
call
push
mov
into
push
lret
pop
hlt
mov
push
xor
lock
rolb
push
nop
icebp
or
popa
mov
pop
scas
pop
push
sbb
pop
std
mov
mov
and
xchg
icebp
adcb
pop
test
or
cmp
popa
ret
notl
repnz
inc
sub
sub
out
xchg
adc
shrb
and
add
jbe
inc
lret
jmp
jp
mov
push
mov
and
jne
ljmp
shrl
xor
out
mov
mov
cwtl
and
nop
adc
xlat
je
adc
aas
loopne
cli
repnz
shll
testb
jno
pusha
xchg
sub
data16
iret
add
push
jo
jge
push
jmp
mov
mov
inc
movb
test
jb
je
cmpsb
xor
xchg
clc
jb
cmp
in
push
xchg
adc
rclb
lret
adc
in
push
inc
push
lret
push
dec
xor
pop
das
xor
mov
negb
adc
pusha
in
adc
push
push
sub
inc
out
push
pop
test
mov
inc
mov
pop
mov
pop
es
jmp
add
inc
mov
sbb
cltd
pusha
dec
loope
adc
movsb
mov
push
push
movsl
test
mov
mov
jecxz
adc
sub
sbb
fisttpl
or
cmp
or
mov
lea
lea
or
adc
out
int3
mov
mov
sbb
out
paddsb
mov
popl
jns
mov
xor
push
dec
je
sub
sbb
jp
pop
loopne
cwtl
push
xchg
mov
clc
add
mov
int3
js
std
dec
and
or
sbb
push
rcrb
push
mul
or
mov
mov
rorb
push
pop
std
pop
call
pop
filds
inc
cmp
xor
out
jle
sbb
shrb
inc
jnp
mov
pop
mov
push
rcrl
inc
int3
adc
or
mov
dec
test
cmp
addl
adc
fldl
sbb
sbb
cmp
cmp
sub
xor
cmp
cmp
cmp
cmp
and
inc
inc
cmovs
jb
dec
push
push
pop
pushf
pushf
pushf
pop
add
pushf
pushf
pushf
pushf
insb
jo
js
xor
fs
dec
ficoml
mov
xchg
cwtl
dec
es
fs
mov
xchg
test
sub
sub
ss
xor
push
sbb
mov
ret
xor
mov
push
mov
or
clc
inc
fiaddl
rcrb
add
roll
test
mov
fs
enter
pop
sbb
mov
push
jo
add
xchg
dec
inc
ret
pop
mov
shlb
add
dec
jne
out
push
imul
sbb
sub
mov
xchg
pop
add
cmp
pop
gs
cmp
inc
fnstenv
push
adc
cmp
es
imul
push
lods
xlat
movsb
push
rcrl
dec
int3
dec
mov
repnz
xchg
add
add
or
aam
pop
fiaddl
jne
cmp
inc
sbb
sub
fists
sbb
pop
pop
and
and
inc
jle
cmp
add
ds
das
cmp
xchg
in
sub
ja
loope
push
scas
rol
mov
or
add
inc
sbb
sahf
add
add
fmuls
add
mov
mov
dec
pop
ret
int3
sbb
mov
mov
ret
add
negb
xor
dec
rolb
jle
je
push
pushf
insl
mov
xlat
leave
lea
inc
push
dec
and
loopne
test
or
pop
int3
ss
dec
add
sub
orb
in
popf
and
mov
repz
or
repnz
cmp
int3
add
push
add
arpl
cltd
dec
jecxz
cltd
outsl
pop
popa
xor
fwait
mov
and
mov
aam
adc
push
adc
subl
xor
or
jp
jg
pop
mov
jmp
jbe
jbe
or
xor
jnp
push
adc
clc
shlb
lret
roll
int
add
jo
test
andb
jo
iret
lcall
pop
popf
nop
ja
cmp
outsb
or
mov
loopne
mov
mov
mov
adc
neg
inc
clc
and
jb
push
mov
push
add
mov
outsl
jmp
ret
jp
pop
lea
xor
mov
psubb
lods
ljmp
xchg
inc
pop
add
xor
fiadds
notb
sti
js
inc
cmp
fcom
push
xchg
fsubrp
sbb
sbb
dec
jnp
dec
pop
xchg
daa
mov
dec
shrb
jns
inc
jle
mov
push
xorb
aas
add
shlb
cmp
xor
add
aad
std
or
movsl
sub
jne
xor
push
push
test
push
and
out
sar
push
mov
sar
mov
or
or
loope
sti
add
pushf
imul
fisttpll
aad
inc
or
or
and
lods
popa
rclb
or
stc
out
cmp
add
mov
inc
sbb
ret
mov
push
adc
ljmp
adc
outsl
inc
pushl
mov
jns
xchg
popf
pusha
dec
sub
add
int
push
sahf
cmp
pop
addl
pop
outsb
xchg
lret
ss
mov
or
inc
adc
mov
pop
lea
jbe
stc
or
lods
mov
adc
divl
xor
push
hlt
mov
add
xor
stos
jmp
sbb
fcoml
leave
incl
out
lret
add
shrb
movsl
mov
mov
jge
push
xchg
adc
cmovle
sbb
cli
nop
cmp
push
jo
adcb
out
inc
or
loop
lods
jnp
int
lahf
mov
pusha
fcoms
push
inc
xchg
aam
orl
sahf
mov
dec
sub
push
jp
add
cmp
mov
leave
incl
cmpsb
int
mov
insl
mov
test
subb
rolb
jno
add
clc
jecxz
mov
cltd
cmp
or
mov
and
jle
cmp
sub
paddq
mov
mov
out
inc
int
push
incl
sub
push
loopne
adc
iret
test
mov
pop
sahf
stos
cmp
pop
cmp
sbb
fisttps
cmp
sub
aam
adc
lock
mov
sbb
dec
sub
sbbb
jl
rolb
inc
lret
mov
jmp
xchg
jge
jbe
mov
andl
out
rclb
cmp
cli
pop
pushl
adc
cli
or
inc
mul
in
adc
mov
adc
mov
mov
fsubrs
sub
and
lods
sub
inc
pop
inc
add
push
cmp
jmp
adc
mov
dec
incl
xchg
pop
gs
mov
push
in
movsl
dec
add
cmp
addb
pop
push
cwtl
sub
adc
lods
push
xorl
pop
mov
inc
inc
sbb
or
cwtl
adc
push
jb
bound
pop
add
xor
aas
mov
roll
stc
pop
jbe
and
mov
add
out
add
xchg
push
xchg
sub
les
inc
addb
test
mov
rcll
pop
fcmovu
pop
pop
lock
scas
sub
gs
shl
fs
std
sbb
adc
loopne
andb
fisttpll
mov
jns
je
add
push
jo
lret
jmp
or
popa
aad
pop
and
push
fiadds
aas
lea
arpl
pushl
lods
adc
xchg
inc
ja
pop
lcall
ljmp
cmp
adc
sub
mov
xor
jnp
add
mov
sbb
sbb
scas
inc
cmpb
pop
cwtl
fdivrl
mov
jg
or
dec
shll
pop
inc
add
popa
mov
cltd
or
and
xor
inc
pop
push
and
mov
scas
or
add
loope
ret
push
sub
or
je
or
xchg
adc
stos
sbb
arpl
push
sbb
mov
lea
or
rcr
jne
sbb
jno
popf
mov
andl
dec
or
out
jmp
movhps
ret
jp
test
aaa
and
push
es
int
cwtl
mov
mov
adc
inc
add
inc
xor
mov
adc
daa
push
inc
mov
add
jge
mov
popa
push
dec
movsl
fdivrl
sbb
dec
mov
mov
cwtl
sub
sbb
mov
sub
and
add
push
pop
inc
test
mov
out
pushf
cli
add
pop
inc
mov
or
inc
js
or
into
jo
aam
xchg
sbbb
add
push
jmp
xor
mov
cmpl
and
insb
js
ja
into
sub
aam
test
orb
dec
or
in
test
fisubrs
add
shlb
pop
notl
mov
pop
mov
gs
inc
out
push
arpl
jno
repz
pop
cmp
jecxz
andl
add
cltd
fstl
dec
mov
in
stos
call
addr16
pop
push
test
sbb
and
fwait
xchg
ficoms
or
test
clc
andl
dec
es
mov
in
xchg
dec
and
adcb
push
pop
pop
out
push
pop
lods
pop
lods
pop
pop
dec
cld
push
xor
jg
add
jns
add
clc
je
loopne
test
push
add
lcall
lcall
lock
ficoml
xchg
js
push
test
hlt
mov
cld
mov
push
push
or
popf
push
and
je
xchg
in
enter
jl
xchg
test
add
xor
in
js
pop
sbb
push
add
popf
sub
add
pushf
xchg
inc
bound
sub
add
test
test
xchg
adc
inc
cmpsb
mov
xchg
shll
outsb
adc
and
test
int3
jae
dec
mov
push
or
jmp
rclb
sbb
xor
jecxz
jo
dec
int3
mov
loop
jle
rcl
lcall
dec
nop
xchg
ret
and
xlat
add
pop
movsl
cmp
and
pop
add
sbbb
push
or
or
xchg
pop
or
rclb
fwait
jnp
je
xorb
cmp
mov
repz
fistpl
cmp
mov
lods
shrl
loope
adc
cmp
daa
andb
mov
repnz
inc
jne
sub
ficoml
cmp
and
es
xor
jo
mov
pop
jb
nop
dec
inc
dec
pop
mov
jno
imul
mov
push
aam
inc
leave
gs
dec
cmp
dec
and
sbb
inc
mov
mov
inc
arpl
sbb
mov
xor
inc
adc
adc
shrb
ds
jbe
pop
fs
jbe
mov
mov
push
or
and
mov
int3
cmp
ret
popf
idivb
repnz
das
adc
scas
adc
shll
hlt
in
into
jl
push
jle
inc
inc
lahf
add
adc
sub
or
add
dec
inc
add
popf
jbe
inc
mov
mov
in
push
inc
and
les
mov
hlt
jmp
pop
in
mov
mov
std
fsubr
adc
mov
in
adc
sbb
icebp
jne
and
loop
lcall
ror
or
shlb
cmp
lea
or
jmp
sub
mov
sbb
add
dec
lods
rolb
icebp
pop
push
hlt
push
pushf
pop
mov
xor
pop
inc
push
je
push
popf
ds
cmp
iret
adc
mov
scas
and
sbb
pop
testl
jecxz
adc
and
icebp
and
push
lcall
mov
je
inc
or
test
push
js
dec
loope
pop
add
lock
and
cmp
mov
xchg
jbe
ret
lret
and
add
xor
in
or
and
nop
nop
and
shll
dec
nop
fcmovne
outsb
xor
adc
or
outsb
jb
jmp
and
dec
add
sbb
test
lock
test
adc
or
add
dec
xor
out
add
xor
sbb
or
pop
bound
jmp
pop
in
idivb
incb
jmp
sbb
lock
and
jl
in
rorb
and
jecxz
outsb
inc
pushf
jge
add
or
rorl
jns
sub
jle
clc
or
or
pop
aam
sub
jge
je
xor
mov
and
adc
add
fbstp
push
or
pusha
mov
pusha
loope
pop
sub
fsubs
lods
dec
and
mov
repnz
adc
fnstsw
mov
jnp
pusha
pusha
fldl
cmp
sbb
call
outsl
add
pop
inc
testb
push
es
adc
lret
sub
add
add
loop
out
test
fisttps
std
or
das
shl
aaa
and
or
sub
xchg
push
sbb
mov
in
push
jmp
testl
fcmovbe
lret
pop
xorb
divb
sub
and
inc
add
adc
add
inc
flds
fsts
mov
inc
jp
or
pop
push
push
mov
mov
push
sbb
cmp
inc
xor
inc
dec
cwtl
cmp
xorl
jnp
popa
adcb
xchg
jbe
push
xor
lret
jp
add
pop
jp
push
inc
aam
xchg
loopne
xor
push
aaa
sbb
or
mov
add
les
sub
sub
in
into
xor
push
push
fimull
push
or
sbb
or
test
int3
adc
ds
repz
inc
jae
test
cmc
jnp
jp
clc
ss
inc
cmpsl
mov
fstpl
mov
call
stc
into
jbe
test
loopne
or
or
jnp
push
mov
inc
lods
or
xlat
mov
sub
repnz
lods
sbb
cmpsb
push
sar
repnz
out
and
dec
into
pop
not
insl
in
and
or
pop
orl
fs
shl
jle
mov
push
sahf
jmp
pop
comiss
and
add
std
adc
adc
or
and
mov
and
es
inc
pop
pop
add
addb
mov
jg
addr16
sbb
pop
sub
dec
add
and
mov
or
les
push
fcmovu
mov
xchg
mov
movzbl
sub
add
jecxz
ret
or
mov
adc
je
je
jl
push
dec
rorb
push
xor
adc
mov
inc
dec
jg
add
adc
jae
and
xor
inc
pop
sub
add
hlt
pop
sbb
loope
loopne
shrl
pop
adc
add
ja
ret
fsubrp
fwait
jno
mov
gs
or
push
add
or
sub
sbb
mov
pusha
xchg
jo
adcl
in
sub
xchg
stos
mov
push
mov
inc
movsl
mov
add
add
cmpb
cmp
scas
ss
inc
sbb
or
push
mov
jbe
sub
pop
inc
cmp
daa
cmpl
add
jle
inc
jo
popa
sbb
or
cmp
fnstsw
adc
push
jns
xor
pusha
mov
mov
mov
std
test
mov
jno
inc
add
pop
cld
or
jge
sub
pop
lahf
enter
dec
imul
cmpps
sahf
push
cld
push
inc
xchg
shl
jne
sti
jo
gs
gs
ljmp
xchg
mov
cmpsl
pushf
mov
add
ljmp
push
xchg
out
push
pop
or
test
fadds
into
aaa
lret
jbe
es
pop
stc
jbe
jecxz
sbb
push
push
xor
test
bswap
imul
mov
nop
adc
sbb
shll
xchg
rorl
inc
test
dec
pop
add
or
push
out
mov
daa
inc
and
mov
sbb
add
or
push
add
testb
sbb
sub
shr
jp
sbb
loop
pop
sub
dec
add
mov
fstl
push
inc
and
test
fcmovu
loop
inc
fsts
adcb
rcr
push
mov
or
add
inc
adc
fldt
loopne
fcmovne
fwait
sahf
adc
xchg
and
sbb
aam
add
cmp
or
jle
call
call
fldpi
xor
pop
adc
in
lock
sahf
in
scas
and
inc
je
sbb
adc
test
popl
xchg
negl
jb
mov
or
mov
cmp
mov
hlt
cmpsb
repz
out
add
pop
mov
cmp
ljmp
xor
andl
xor
pop
fsubrl
call
dec
loopne
adc
psadbw
adc
out
stos
test
insl
push
mov
movsb
lds
loopne
sub
arpl
jmp
enter
push
and
xor
jae
bound
test
adc
imul
cmc
push
sbb
dec
mov
gs
pop
movsl
sub
mov
or
inc
shlb
aam
loopne
sti
jbe
xchg
fisubrs
xor
paddusb
jno
fildl
gs
mov
adc
enter
add
loope
insb
dec
adc
in
sarb
add
adc
pop
xchg
jl
xor
mov
dec
aas
gs
pop
jle
mov
or
xchg
hlt
dec
cmpw
inc
inc
mov
add
mov
js
mov
cmp
sbb
mov
orb
mov
loopne
adc
push
or
test
and
pusha
mov
sar
sub
push
data16
sarb
cmp
mov
adc
lcall
dec
hlt
pop
and
mov
stos
stos
sbb
call
pop
pop
mov
mov
push
sub
mov
xor
add
rcrl
add
gs
mov
pop
dec
jns
dec
xchg
loopne
lea
pop
or
mov
subb
inc
shl
mov
pop
in
pop
pop
dec
or
loop
rolb
shlb
repz
aaa
idivl
pop
and
mov
out
mov
dec
jl
loopne
insb
sub
dec
xor
icebp
mov
lea
xor
repnz
js
adc
jb
cmp
sbb
lods
jg
pusha
sub
adc
jb
pop
and
incb
jae
dec
mov
dec
sub
jns
mov
movsb
pop
and
add
test
loopne
add
hlt
ljmp
sti
cmp
dec
dec
add
fmull
inc
and
pushf
or
stos
test
aam
inc
xchg
xor
cmp
mov
movsl
xor
or
clc
out
and
push
cld
not
cmp
in
popf
je
and
and
sahf
inc
pop
ds
push
or
adc
cmpsb
jbe
jne
shl
and
mov
and
loope
inc
loope
out
mov
jl
data16
adc
xchg
aam
inc
mov
out
pop
cltd
inc
jno
in
mov
jno
add
addb
push
mov
inc
pusha
lcall
sub
cmp
cmovg
bound
movsb
xor
pop
xor
pop
add
dec
lds
xor
inc
lock
rol
mov
insb
inc
or
add
xor
sbb
sbb
out
addl
mov
dec
add
or
fcompl
pop
andl
add
xchg
out
mov
mov
and
mov
add
cmp
lods
cld
add
inc
sbb
jge
pop
and
nop
sub
sub
push
jmp
cmp
pusha
jo
and
or
pop
or
in
add
loop
stc
and
mov
pop
push
bound
pop
pop
xchg
jns
scas
sub
jne
pop
inc
leave
adc
or
adc
pop
add
adc
adc
cmpl
or
adc
cld
xchg
out
or
sbb
je
sbb
in
adcl
sbb
or
xchg
aam
fidivs
leave
push
adc
lock
push
or
test
mov
call
pop
add
inc
adc
nop
xor
aam
push
mov
mov
lcall
cmp
in
jne
inc
jmp
mov
sub
and
or
xchg
add
dec
int3
mov
sub
cmp
ja
push
frstor
frstor
mov
mov
cmp
rolb
and
mov
call
call
adc
jmp
adc
mov
rorb
jmp
andl
mov
cltd
cmpsl
mov
subb
dec
adc
ljmp
inc
jle
push
inc
jle
cmp
push
xor
pop
pop
mov
sub
inc
orl
xchg
sub
jbe
bound
pop
mov
push
cmp
fs
jp
jmp
mov
dec
sbb
mov
jae
mov
ret
ret
retw
sub
inc
mov
push
into
shll
pop
cmp
loop
scas
jnp
out
aam
add
in
push
dec
dec
dec
jae
imul
sbb
enter
sub
lcall
outsb
arpl
cmp
mov
dec
decb
iret
or
sub
dec
add
call
dec
cwtl
or
sahf
jne
aas
push
and
adc
sub
cmp
mov
jle
sub
mov
call
pushl
mov
shll
test
nop
leave
or
leave
sub
loope
cmp
dec
pusha
pusha
ud0
add
testl
rolb
rcl
fdivp
pop
mov
dec
addl
jmp
cld
push
sbb
and
call
mov
stc
push
adc
jle
push
or
jecxz
add
pushf
xor
push
fsubr
or
pop
mov
imul
push
mov
dec
mov
inc
pop
or
pop
jne
movsb
stos
test
pushf
xor
mov
push
cwtl
jge
neg
add
mov
imul
sbb
xlat
test
cmc
cmp
mov
mov
pop
stos
pusha
jge
sub
int3
cmp
cmp
jge
jle
add
sub
xor
sub
mov
adc
push
add
push
mov
inc
out
dec
test
icebp
pop
mov
sarl
push
jmp
and
iret
add
mov
test
add
mov
add
adc
mov
mov
mov
outsl
fs
sbb
jbe
call
push
xor
and
and
and
adc
es
or
fs
cmpsl
imul
adc
sbb
mov
xchg
mov
or
xchg
aad
mov
es
cwtl
clc
les
int3
jne
shr
repnz
les
test
ss
inc
into
jne
inc
or
cmp
mov
data16
xor
hlt
int3
add
jne
adc
shufps
mov
test
rcrb
inc
xor
lea
add
lea
or
jl
popa
add
sub
call
dec
lock
repz
ja
outsl
and
add
sahf
xor
mov
sub
sub
adc
idiv
jg
add
sub
cmp
or
js
mov
nop
shll
loopne
adc
hlt
lods
add
or
shr
loopne
pop
or
or
push
out
jne
sbbl
jg
or
adc
or
icebp
jge
mov
les
divb
popa
aad
adc
mov
fwait
lods
ss
fcom
insl
fadd
loopne
shr
or
mov
push
imul
sahf
dec
fwait
aam
shll
mov
xor
push
mov
enter
fimuls
jo
and
fiaddl
cmp
add
ficompl
shlb
or
pop
xor
or
in
fiadds
push
call
lds
fidivl
shlb
vdivpd
push
fmull
mov
ret
stos
xor
dec
add
inc
out
aam
cmp
sub
push
lret
lret
into
jmp
cltd
bound
push
xchg
shlb
inc
dec
and
les
lret
test
xor
xchg
ja
in
add
jmp
sub
add
in
faddl
sbb
add
insl
and
push
lods
mov
or
call
adcl
mov
imul
add
js
lcall
or
jle
lods
push
insl
add
mov
daa
subl
mov
test
pop
jne
cmp
dec
pop
pop
push
add
scas
xchg
shrb
or
mov
rorl
dec
pop
cmp
in
adc
or
push
inc
cwtl
dec
pop
push
xchg
xchg
adc
mov
cs
or
ss
clc
jg
sti
cmp
je
or
out
mov
dec
cmpb
je
mov
add
sbb
sbb
add
or
mov
pop
inc
sub
out
add
jp
sbb
push
push
pusha
test
mul
adc
outsb
xchg
push
fisttps
les
jno
pusha
or
pop
adc
shrb
dec
or
lahf
xor
test
std
cmc
xor
dec
push
dec
mov
xchg
mov
push
add
add
outsl
push
adc
xor
jmp
xor
add
enter
call
test
add
xchg
mov
mov
mov
shlb
call
rorb
or
add
dec
ret
ss
xchg
daa
mov
jge
mov
dec
setg
sub
out
clc
add
mov
and
sbb
loop
aas
sub
movb
lea
sbb
es
cmp
jle
sub
ficoml
xor
mov
divb
es
sbb
loop
add
lcall
jmp
sub
add
pop
and
sub
cmc
and
fcmovnb
xchg
ret
dec
add
mov
mov
adc
jns
les
sub
inc
fs
ficomps
movsb
repnz
or
mov
add
and
add
jne
mov
jp
cmpsb
inc
add
pop
adc
test
dec
mov
and
repnz
test
rorb
rcll
mov
adc
inc
lock
insb
push
cwtl
mov
ja
hlt
add
loope
shlb
jle
dec
adc
jge
mov
sub
adc
lahf
adc
pushl
cmp
mov
enter
jo
add
xchg
push
sbb
test
or
pop
add
pop
adc
rcl
mov
xor
sbb
jmp
ret
sbb
lcall
jge
adc
testl
pop
xchg
fstps
in
xchg
or
out
adc
je
popa
jge
rorb
fcoml
movsb
pop
add
lea
js
add
mov
lret
lret
or
sub
adc
test
sbb
lahf
lods
or
sar
lea
jle
add
xor
jae
add
enter
imul
das
testb
xor
push
sbb
enter
xor
loopne
js
push
mov
sahf
and
call
into
inc
xor
leave
and
add
mov
addr16
and
enter
mov
dec
jecxz
and
fwait
mov
pop
aas
mov
jecxz
mov
jg
ret
daa
xor
or
jne
mov
cmp
sahf
movbe
mov
or
out
scas
test
movb
adc
popa
and
and
or
push
add
xor
sub
mov
mov
push
cltd
push
sub
adc
cmpsb
add
jo
push
movswl
movd
les
pop
retw
push
nop
mov
inc
mov
cmp
add
mov
add
dec
sub
js
lods
enter
out
pop
pushf
dec
cmp
ss
mov
push
cmpsl
clc
mov
or
jg
outsb
cmp
xchg
stc
inc
add
dec
lret
cltd
pop
shr
out
xchg
clc
sub
mov
push
shrl
or
cmp
jo
incb
push
push
xor
inc
or
or
insb
add
adc
sti
xchg
inc
out
and
mov
pop
sbb
js
jg
clc
push
add
in
push
sub
or
inc
adc
neg
cmp
mov
lock
adcl
or
push
nop
dec
jl
xor
jbe
mov
mov
dec
mov
jg
lods
jb
imul
mov
dec
inc
dec
pusha
and
xchg
pop
or
or
lods
jo
lcall
inc
imul
adc
jae
stc
test
inc
test
dec
add
sub
mov
add
inc
xor
jbe
push
sbb
shll
les
loop
sbb
ret
jb
push
lock
mov
mov
and
sub
pusha
mov
pop
xchg
add
inc
inc
and
inc
adc
inc
daa
jp
jge
mov
jne
and
adc
outsb
push
cs
push
mov
push
inc
sbb
or
fmuls
out
into
mov
and
adc
pop
nop
test
inc
or
mov
roll
in
fs
jne
cmp
scas
xor
cmp
inc
lret
jbe
push
dec
test
adc
inc
add
cmp
mov
stos
sub
jmp
adc
push
insl
push
jmp
insl
cmp
push
lret
sbbb
jl
ja
lahf
xor
mov
mov
cmc
sarb
pop
incb
or
insl
or
loop
mov
jbe
sbb
jns
testb
cmp
clc
gs
or
je
data16
fwait
fwait
repnz
popa
je
inc
je
jnp
and
out
xor
xchg
or
stc
xor
push
in
add
cmp
and
aad
mov
or
sbb
cmp
mov
repz
loop
adc
adc
call
jne
fmull
insl
push
pop
clc
fstps
add
pop
xor
out
or
sbb
cmp
enter
add
shrb
hlt
sbb
jo
add
pop
push
or
clc
inc
mov
or
je
dec
out
sub
inc
sub
inc
ja
roll
test
clc
jmp
repz
jmp
jbe
mov
cmpb
jne
jp
dec
aad
mov
rcl
mov
xchg
roll
sub
add
hlt
sbb
xchg
cmp
das
movsl
cmp
aam
rorb
mov
pop
cmp
ss
aad
cld
lahf
pop
dec
fisttpl
push
sub
and
hlt
sbb
pop
popf
mov
and
leavew
mov
hlt
addl
mov
aaa
sub
fcompl
gs
mov
je
mov
sub
dec
dec
mov
pop
jp
cs
inc
mov
adc
jmp
insl
sar
pop
cmp
xor
mov
cmpl
pop
lret
sbbl
data16
popa
jae
jne
mov
sbb
daa
pop
add
imul
push
movsl
call
xorb
and
aad
dec
pop
les
or
fcompl
mov
mov
jge
sbb
add
pusha
cld
lock
sbb
mov
gs
inc
cmp
test
jl
or
int
lock
mov
pop
repz
pop
cmp
sbb
lea
mov
in
nop
mov
adc
add
xor
rclb
cmp
or
mov
hlt
jmp
or
jmp
sahf
jle
test
or
ljmp
addl
test
aam
notl
add
and
test
jae,pn
cmp
dec
shll
or
add
sbb
inc
pop
cmpsl
adc
add
xchg
lret
adc
es
gs
push
sbb
mov
mov
sbb
mov
js
jne
xor
mov
mov
or
adcl
add
add
jne
sub
fdivl
push
mov
push
cld
cwtl
adc
dec
fs
add
jg
mov
add
cmp
push
adc
sub
push
dec
shlb
iret
mov
cwtl
lock
cs
xor
les
add
mov
ret
sbb
sahf
movb
mov
lea
and
push
xor
cmp
pop
xor
xlat
inc
mov
movsb
push
loopne
cmp
jge
notl
mov
and
cltd
sbb
sbb
mov
cs
fisttpll
insb
mov
call
sub
mov
lock
fiadds
arpl
and
xor
cmp
sbb
inc
jmp
arpl
rol
sub
or
cmp
das
popa
ret
outsb
xor
stc
inc
inc
test
fnstenv
push
jle
push
push
in
xchg
mov
push
outsl
sbb
pop
xchg
mov
mov
jmp
cmp
sbb
es
push
out
push
or
push
xchg
lea
pop
jmp
xor
mov
mov
mov
addb
in
adc
iret
push
sub
aaa
pop
leave
mov
push
or
adc
imul
sbb
xor
jge
push
dec
call
add
mov
mov
sub
mov
dec
mov
cmp
sub
das
inc
xchg
sbb
cwtl
dec
movb
btr
les
adc
jmp
mov
sub
leave
jae
mov
add
inc
mov
push
push
mov
faddl
jecxz
adc
movsl
add
xlat
sbb
inc
and
inc
or
push
int
pop
jmp
xor
pop
leave
dec
sti
mov
add
fs
add
lret
mov
mov
dec
and
sbb
jo
mov
lods
jo
push
lock
or
xor
jmp
jmp
popa
mov
and
inc
test
push
divb
inc
xor
insl
push
jno
pusha
cmp
adc
sbb
jo
adc
sbb
lock
jno
push
add
sarl
sub
pop
adc
add
mov
jmp
adc
es
add
or
xchg
or
imull
clc
ja
jno
shr
shr
or
mov
add
add
or
bound
scas
push
bound
in
stos
mov
cmp
sbb
mov
fildl
sub
adc
xchg
je
aaa
mov
adc
fnstcw
inc
dec
and
ds
inc
dec
add
lea
mov
shll
cli
mov
adc
ss
inc
stos
or
mov
cs
sub
xor
mov
or
cltd
repnz
and
inc
inc
dec
push
jbe
test
dec
enter
stc
or
jbe
out
decb
inc
jbe
nop
sub
and
mov
fdivs
call
cli
cld
add
adc
iret
shl
andl
lock
mov
mov
es
dec
aad
test
add
decl
in
mov
clc
stos
imulb
or
sysret
xchg
test
test
adc
scas
subb
lret
je
dec
call
test
sbb
loop
cmpsl
cmp
test
and
movsb
adcb
jae
out
icebp
sub
lods
mov
negb
add
popa
sarb
call
sbb
sub
jne
mov
testl
into
inc
add
adcb
dec
movsb
or
and
enter
jns
adc
add
adc
dec
es
frstor
jmp
jle
cmpsb
mov
cld
inc
push
ja
xchg
sbb
or
pop
cmp
and
cmp
leave
inc
xor
mov
cmp
lock
jl
cmpb
jl
xor
fdivl
cmpb
idiv
sub
mov
insb
xor
add
subl
inc
add
stos
cmc
pop
inc
adcb
inc
push
push
mov
push
push
xchg
mov
pop
nop
iret
adc
inc
adc
fstps
and
adc
or
push
loopne
sub
and
adc
call
jo
shlb
insl
adc
add
and
sbb
adc
enter
out
or
mov
daa
hlt
test
adc
push
fcmovu
mov
std
jb
and
shll
mov
je
mov
dec
jo
or
int3
aam
inc
fwait
mov
or
pop
pop
sbb
ret
push
js
lds
movsl
xor
or
jne
mov
xor
xchg
mov
pop
jmp
push
in
xchg
and
mov
scas
pop
adc
push
xor
in
lock
hlt
xchg
jge
inc
inc
div
fdiv
fiaddl
dec
mov
mov
sbb
inc
sbb
inc
js
sbb
xchg
sbb
adc
adcl
push
push
cmpsb
and
xchg
fistl
sbb
adc
sbb
and
adc
adc
dec
jns
sarb
fwait
dec
jne
pop
pop
pop
insl
mov
int3
nop
jae
or
jae
orb
ljmp
shr
mov
adc
mov
idiv
and
mov
cld
lock
je
divb
subl
mov
push
bound
fimull
call
pop
adc
jno
in
xchg
lcall
outsb
call
dec
shl
cs
or
push
mov
cmp
sbb
aas
cmpsl
sub
sub
test
ds
dec
xchg
into
mov
daa
push
ds
mov
cld
cmp
fs
pusha
adc
setle
jns
mov
push
pop
and
pop
and
mov
jle
adc
in
pusha
popa
mov
cmp
subl
dec
int3
push
cld
and
insl
ljmpw
aaa
dec
rorb
jo
fidivs
jg
in
mov
jl
jge
mov
adc
jbe
inc
fcmove
jne
sub
testb
cmp
push
scas
and
pop
sub
leave
je
aas
mov
pop
inc
clc
inc
mov
mov
out
es
mov
je
lcall
mov
push
cmp
ja
add
aam
out
out
adc
cmp
jne
jge
xor
adc
mov
ret
mov
ss
add
mov
push
add
rolb
lea
dec
mov
add
pop
inc
or
sbb
insl
test
push
into
scas
sbb
adc
xchg
ret
jmp
neg
je
mov
push
push
addr16
mov
lretw
dec
mov
adc
mov
pop
icebp
or
lea
mov
xchg
cmp
jne
dec
test
sub
push
xor
xchg
test
sbb
dec
cmp
pop
pop
in
jmp
mov
inc
push
push
mov
xchg
jg
std
scas
mov
sub
pop
xlat
pop
mov
cmp
sub
orl
cltd
lea
sub
inc
jp
xor
sub
xchg
push
aam
addl
adc
or
mov
test
or
cltd
push
add
shll
cmp
inc
sbb
add
pop
inc
inc
js
adc
add
mov
pop
jle
dec
sahf
mov
xchg
ror
push
rcl
jns
out
rcl
aad
xlat
and
lahf
out
sti
fstpt
rclb
mov
lcall
add
inc
sub
jne
mov
test
mov
or
orb
mov
push
add
inc
push
add
fistpl
aas
jne
mov
push
add
inc
divb
in
out
push
mov
push
icebp
adc
sti
sbb
pop
das
or
push
jnp
push
fwait
adcl
bound
adc
popa
add
add
push
lcall
mov
imul
pop
pusha
scas
jmp
sbb
sbb
sub
dec
lea
sar
inc
add
pusha
mov
data16
add
neg
into
inc
push
xlat
loop
out
loop
rolb
aaa
lock
scas
adc
sub
fwait
mov
push
mov
mov
sub
mov
add
jb
xor
adc
les
mov
or
or
dec
lahf
push
or
or
adc
add
hlt
mov
ljmp
testl
into
and
lea
gs
or
sbb
imul
andl
sbb
ja
add
mov
inc
pushf
pop
mov
xchg
out
pmulhuw
ljmp
loopne
inc
or
mov
or
cmp
hlt
add
push
in
repz
test
rolb
push
mov
iret
ja
push
lea
dec
xchg
mov
or
or
push
push
ss
cs
hlt
movsb
sub
cmp
pop
sarl
repnz
sub
mov
xchg
cwtl
mov
jge
jl
aaa
dec
pop
pusha
ret
and
rorb
or
jle
jle
adc
outsl
jne
lea
inc
test
shrl
add
jg
into
sar
or
and
hlt
rorb
les
adc
push
lret
imul
movl
ret
cltd
lods
ss
shrl
outsl
fwait
inc
fucomip
out
xchg
mov
or
dec
add
add
xor
inc
lods
lock
movsl
test
negb
cli
inc
cli
div
and
add
js
inc
cmp
or
orb
call
mov
out
xor
adc
adc
push
aaa
ret
inc
jo
dec
push
clc
shlb
leave
loopne
frstor
sub
mov
rolb
icebp
xchg
mov
int
jmp
inc
mov
lock
popa
push
dec
cmpsl
add
pop
sbb
sti
push
repnz
pushw
sub
loop
xchg
mov
push
xchg
testb
and
mov
sbb
in
pop
mov
adc
xchg
adc
xor
sahf
fisttpl
pop
sbb
fsubrs
rcrl
aam
inc
inc
test
shll
movsb
enter
push
or
or
lods
dec
or
inc
dec
mov
sub
adc
sahf
mov
push
cld
lea
fcmovu
adc
mov
pop
pop
inc
inc
push
xor
inc
add
icebp
adc
inc
inc
and
out
sbb
clc
sbb
xchg
add
sbb
xchg
mov
negb
xchg
inc
inc
sahf
test
mov
and
repnz
add
inc
inc
xor
lock
jmp
add
jne
sbb
fnsetpm(287
loopne
dec
mov
fidivrs
mov
add
sub
fcomps
sub
insl
movups
movb
inc
mov
push
add
adc
jg
push
nop
cmp
cmp
mov
pop
jle
out
adc
gs
add
stos
lock
shr
dec
inc
loop
pop
add
or
orl
cmpsb
mov
loop
fcomps
xor
fiadds
je
fildl
call
jmp
loopnew
fadd
xchg
pop
or
lea
push
and
icebp
rcrb
push
adc
xor
mov
out
xor
packuswb
and
xchg
mov
stos
call
rorb
mov
add
sub
cmpsl
sub
into
out
enter
nop
dec
or
cmp
push
stos
jbe
mov
mov
clc
js
add
pop
and
mov
cmp
movsl
xor
notb
jae
add
negl
das
roll
sahf
jne
cmp
sbb
testb
lock
inc
or
aam
inc
in
pushl
dec
mov
dec
cmp
jge
mov
push
std
sub
cmpb
or
add
dec
cmp
cmp
mov
add
add
fadds
dec
jb
pop
add
dec
test
repnz
mov
add
or
mov
lods
pushf
adc
lret
or
add
push
add
sub
ret
adc
xchg
testb
add
out
adc
movsl
add
test
mov
mov
vorps
sub
sub
and
push
or
adc
fisttps
jmp
repz
int3
mov
or
add
and
pop
pop
push
ret
cmp
scas
add
adc
push
add
adc
mov
push
ret
les
lods
push
or
jae
jo
jbe
test
lret
movsb
repnz
and
cmp
xor
into
pusha
jg
push
fs
mov
and
sahf
flds
mov
and
shll
or
pop
mov
adc
add
movsl
popf
loope
inc
push
pop
jae
or
or
sub
adc
and
or
or
mov
add
clc
adc
jl
or
mov
mov
or
xlat
or
dec
pop
lahf
push
add
lcall
xchg
mov
and
fs
js
adc
cmp
pop
rol
addl
pop
xor
cld
sub
xchg
xor
xorb
and
ja
or
inc
stos
cmpb
jg
sub
into
xchg
sub
and
sub
cld
or
jne
out
mov
pop
dec
pusha
dec
mov
bound
rcrb
mov
or
add
xor
int
or
adc
xchg
into
jle
pusha
sarl
mov
xor
inc
jg
xchg
xchg
out
into
into
into
mov
pop
and
pop
sub
mov
pop
nop
pop
imul
cs
or
pop
inc
adc
add
sbb
pop
lcall
add
leave
lahf
pop
test
mov
or
or
add
test
jl
mov
and
je
and
xor
sbb
lcall
sbb
lret
jmp
or
xor
xchg
jo
xor
push
scas
mov
inc
and
aad
or
outsb
mov
popa
or
dec
jae
rolb
lods
pop
fmul
cmp
rolb
xor
adc
cmp
and
mov
pushf
outsb
push
or
pop
dec
sahf
jle
xor
rol
pushw
ficomps
adc
sbb
push
push
ficompl
and
daa
or
hlt
sbb
and
adc
jge
inc
mov
ljmp
pop
or
ret
cmp
dec
icebp
xchg
rorl
push
imul
jno
sets
aam
xlat
test
out
push
adc
subl
cwtl
orb
adc
sub
jmp
mov
fmull
hlt
inc
push
jb
or
fs
insl
jmp
je
sub
adc
mov
cmp
jbe
inc
inc
nop
jb
mov
call
jle
xchg
popa
out
enter
imul
sti
dec
add
mov
jo
vmread
jns
jmp
or
ds
or
gs
daa
push
or
lock
js
ss
outsl
mov
or
inc
jns
sbb
pushf
repz
sbb
add
jo
fwait
rolb
mov
mov
mov
adc
pusha
pusha
imul
inc
jo
sbb
andb
pushl
inc
or
and
test
je
test
push
inc
ja
divb
push
push
mov
aam
adc
jno
pop
popf
xchg
mov
push
loopne
js
movb
push
enter
out
jge
shrl
xor
movups
cli
mov
sbb
push
mov
mov
push
hlt
and
mov
pusha
xchg
dec
inc
lods
lret
sbb
clc
inc
dec
dec
pop
incl
and
jge
lea
inc
nop
and
xchg
pusha
push
pop
push
imul
add
enter
inc
add
mov
xor
fbstp
sahf
mov
inc
cmp
xor
lcall
cmovo
xchg
mov
ds
aas
hlt
cs
add
mov
xlat
scas
sbb
sbbl
daa
jmp
adc
adc
inc
push
rorb
mov
addr16
xchg
sub
popa
sar
sub
adc
jmp
xor
test
inc
hlt
or
push
subb
jne
push
inc
add
add
lods
mov
pop
ret
and
pushf
dec
jmp
xchg
addr16
mov
out
and
fisubrl
mov
adc
adc
mov
fmul
ret
pusha
outsb
fadd
outsb
or
push
sbb
or
into
xor
xchg
rolb
xor
add
pop
add
orl
add
or
push
in
std
or
jns
cmp
dec
sbb
dec
rorl
push
and
add
arpl
fimuls
or
cwtl
xchg
or
call
or
sub
cmp
inc
or
pop
jl
mov
sbbb
lea
sbb
push
push
ss
adcl
js
gs
dec
pop
insw
lock
dec
mov
loopne
in
jae
fsubs
test
mov
push
jmp
dec
loop
dec
nop
movsl
scas
xchg
fisttps
jae
ss
shlb
or
js
mov
mov
or
mov
jo
imul
inc
js
sbb
sub
mov
or
pop
push
das
std
and
or
mov
sub
add
insl
loop
les
nop
mov
jb
loope
lcall
ret
xor
fwait
push
and
push
adc
sti
lock
out
inc
hlt
xor
test
shrb
or
push
adc
push
mov
xchg
pop
imulb
lods
fldl
sbb
inc
inc
or
xor
push
push
mov
nop
addr16
sbb
pop
pop
cs
xchg
cwtl
or
aad
jbe
aas
loope
and
add
call
ss
push
pop
push
lock
pop
xlat
pop
inc
pop
subb
mov
jo
mov
test
adc
scas
mov
mov
sbb
enter
inc
mov
testl
dec
add
pop
sub
or
pop
inc
vmptrst
and
push
xchg
cwtl
add
adc
cltd
dec
add
or
add
mov
loope
and
pop
pop
adc
mov
fwait
test
sub
and
aaa
push
dec
or
enter
pop
fbstp
loope
jmp
cs
fists
pop
ret
sbb
fsubrp
test
jns
mov
aam
fstps
icebp
lahf
mov
or
or
add
jmp
cmp
fcomp
into
outsb
lods
pop
adc
test
cmpsb
pop
add
ja
sub
push
jge
bound
sub
push
add
stos
or
mov
or
dec
in
test
dec
jo
test
sub
push
mov
add
sub
mov
daa
call
cmpsb
insl
inc
inc
gs
fadd
clc
fs
mov
data16
insb
mov
xchg
in
aad
popf
or
jbe
adc
mov
dec
xchg
popa
fmuls
xchg
int3
cwtl
pushf
xchg
pop
xor
bound
push
in
lock
xchg
or
in
inc
add
xor
lock
loopne
inc
bswap
adc
sarb
jb
mov
push
or
xorb
andl
add
add
adc
adc
dec
leave
aas
es
add
lds
and
xor
cmp
xchg
adc
sbb
jne
cmp
xor
inc
inc
adc
imul
dec
jno
dec
and
push
fucom
push
cld
int3
insb
mov
mov
lock
xor
mov
cmp
cmp
movzbl
aam
fisttpll
andb
and
sub
cmp
sbb
mov
or
or
sub
mov
cwtl
add
fwait
nop
mov
call
imul
pop
dec
lcall
in
xchg
in
dec
dec
in
xor
outsb
push
pop
mov
in
movups
pop
dec
in
jo
rcll
fadds
in
dec
fildl
dec
and
pushf
xorb
imul
cltd
call
mov
or
mov
adc
in
add
and
push
sub
clc
cmpsl
in
ds
es
mov
jl
push
or
fxch
nop
orl
and
xorb
jmp
dec
in
sbb
or
aaa
adc
call
and
mov
loopne
sbb
dec
lds
cltd
ss
mov
inc
dec
pop
mov
call
cmpsl
add
iret
addb
sub
pop
or
adc
leave
and
sbb
adc
cltd
fs
cmp
cltd
fs
inc
inc
dec
fs
xchg
dec
push
and
outsl
or
sbb
cld
jl
xchg
mov
rol
and
or
enter
and
rcr
add
lods
ljmp
adc
cmpsb
cs
movsb
inc
in
cltd
jbe
stos
pop
aad
fwait
aam
push
ret
sub
push
adc
add
adc
jns
xchg
xchg
mov
in
mov
xchg
inc
andl
dec
ja
xchg
pop
xchg
sub
add
xorl
adc
icebp
cmpsb
add
rcr
or
lahf
imul
mov
mov
cmp
mov
jge
jbe
gs
push
cwtl
cmp
int3
aad
or
cmp
adc
cs
inc
mov
jo
fmull
inc
pushf
mov
cwtl
jbe
jo
inc
enter
inc
sahf
stos
or
in
adcb
mov
hlt
dec
pop
mov
das
nop
fsubrs
mov
test
in
inc
insl
inc
add
jns
add
inc
add
mov
sub
mov
in
nop
inc
mov
push
in
mov
mov
in
test
ret
push
jl
inc
fidivl
or
mov
jp
xchg
pop
test
mov
mov
test
fnstcw
sahf
test
imul
nop
add
cmpb
dec
rorb
pop
and
daa
sub
in
int3
mov
pop
repnz
jb
fcom
and
mov
mov
dec
pusha
lea
inc
lds
lock
cmp
out
shrd
jb
mov
mov
rol
int3
stos
inc
jne
rcl
adc
xchg
jno
dec
sahf
or
cmp
mov
add
cmpsb
adc
sbb
cwtl
mov
rolb
jl
mov
pop
and
pop
or
jno
xor
inc
fmul
cmp
in
add
inc
push
scas
push
pop
mov
pop
das
add
or
rclb
lock
nop
or
incb
imul
outsl
lea
push
jnp
jl
addr16
das
unpcklps
inc
adc
or
fsubs
mov
xchg
mov
and
insl
add
sbb
mov
ret
addb
and
pop
fisttps
jae
xlat
ret
add
xor
inc
adc
stos
jno
add
sbb
sbb
xor
dec
outsb
shll
stc
push
pop
pusha
cltd
fs
add
pop
je
adc
mov
test
cwtl
push
aad
mov
js
test
and
jmp
sbb
xor
aad
test
xchg
pop
or
les
in
add
das
dec
pop
cs
pop
stos
pop
in
xor
mov
push
mov
dec
call
mov
fmuls
push
pop
int3
fisubl
enter
add
aaa
xchg
test
pop
dec
add
dec
sbb
shrb
mov
nop
ljmp
in
sub
ss
inc
stos
add
sbb
outsl
in
pop
xchg
mov
fmull
xchg
cmp
xchg
cmpsb
adc
sbb
mov
or
adc
cmp
in
sbb
inc
push
cmp
or
dec
push
cmp
or
or
mov
and
add
in
aaa
call
inc
cltd
ja
adcb
add
mov
push
inc
or
nop
loopne
shrl
loope
cmp
sub
pusha
or
xchg
xlat
imul
cmp
sbb
push
pop
inc
ret
dec
sub
xor
jns
cwtl
lcall
sub
fwait
daa
cltd
mov
mov
adc
lods
inc
fcoml
pop
jl
push
cmp
xchg
fwait
gs
lds
add
inc
inc
es
push
jne
loopne
fcompl
movsb
stc
jl
repz
incb
dec
es
pushf
std
mov
in
lods
cmp
jnp
lock
lea
pushf
mov
push
sub
mov
xor
insb
or
inc
icebp
mov
imul
lods
dec
mov
cmp
jne
std
movsl
faddl
jns
scas
aam
mov
and
push
pusha
aad
aas
push
jno
subl
adc
enter
inc
add
mov
xlat
enter
push
clc
lods
aaa
xchg
xchg
xchg
fisttpl
xchg
xchg
xchg
sarb
mov
cwtl
mov
pushf
addr16
dec
outsl
pusha
jmp
rcl
mov
cmp
cmp
test
dec
push
clc
or
mov
sub
das
xchg
and
push
fwait
loop
mov
inc
in
xchg
imul
jecxz
mov
inc
sub
fcoms
dec
xor
xchg
nop
xorb
add
movsl
lods
lods
test
mov
mov
pop
mov
mov
sbb
jae
and
out
xchg
xchg
in
mov
sub
sti
sbb
xchg
push
rcl
cs
xchg
test
cmp
enter
fneni(8087
fisubl
inc
add
in
mov
adc
mov
inc
fisubrl
xchg
dec
dec
jle
insb
pop
mov
inc
mov
in
push
xor
call
fcoms
shr
ret
ret
in
push
mov
lods
les
push
aas
movzbl
dec
pop
stos
test
int3
out
push
sbb
in
call
rcr
icebp
sbbl
sub
loopne
xor
push
push
pop
cmp
inc
in
adc
test
xchg
xchg
cwtl
jle
xor
adc
insb
dec
lea
push
dec
xor
fistps
dec
cmp
cmpsl
insl
fdivr
dec
rclb
enter
adc
pop
adc
xchg
mov
dec
enter
ror
cmp
push
fcmovnbe
sub
imul
fsubl
aam
inc
test
sbb
dec
add
popf
pop
mov
push
fnstsw
fmuls
pusha
push
add
or
movsl
mov
aad
mov
mov
cmpsb
add
mov
in
addl
les
sbb
add
js
xchg
sbb
mov
fsubrs
out
stos
adc
mov
xchg
inc
and
xor
xor
cmpsb
orb
add
in
test
sub
sbb
push
test
add
push
inc
lret
loope
lds
movsb
shrl
jecxz
jmp
xchg
mov
ja
movsb
int3
into
aaa
mov
xorb
and
in
and
dec
addr16
lods
in
xlat
rcl
adc
and
dec
adc
scas
popa
sub
jmp
rorb
mov
xchg
fmull
lea
mov
or
scas
jne
test
xchg
or
fmull
adc
adc
fs
scas
or
stos
or
and
push
stos
push
and
pusha
push
inc
jnp
mov
cmp
pop
mov
sbbb
insb
std
andl
push
pushf
std
mov
adc
mov
adc
or
insb
xchg
test
and
dec
xor
push
jecxz
std
loope
cld
enter
cmp
adc
sbb
mov
fdivrl
sbb
daa
mov
push
inc
adc
xchg
sbb
lret
xchg
mov
lds
shrb
lea
xchg
xchg
in
dec
mov
pusha
aad
mov
les
ljmp
add
ss
cs
fidivrl
movl
sbb
pop
enter
jg
loopne
mov
push
aam
xor
xchg
shrb
bound
mov
insb
adc
or
or
fwait
xor
xchg
mov
loope
or
rolb
jno
cmp
xchg
inc
cmpsl
mov
mov
and
sub
pop
push
xchg
fnsave
xor
cmp
and
out
mov
inc
xchg
test
scas
in
out
mov
loopne
inc
mov
jno
inc
sarb
or
jb
mov
popa
popf
outsl
mov
add
seto
dec
and
mov
xor
and
push
mov
mov
sub
bound
pop
push
sarb
mov
xor
mov
adc
push
adc
mov
gs
jb
cmpsb
lock
mov
jo
adc
adc
or
mov
mov
and
aad
push
push
mov
or
dec
and
adc
je
jne
mov
mov
js
mov
jae
mov
mov
add
dec
mov
inc
icebp
xchg
subl
pop
adc
dec
xadd
inc
sbb
imul
pop
inc
fdivr
shlb
int3
pop
sbbb
fwait
or
or
cmp
jno
mov
add
loop
adc
aas
pop
test
cmc
dec
dec
outsb
mov
jno
dec
sahf
mov
rolb
sub
push
and
and
jmp
in
push
mov
std
lcall
sti
lock
out
dec
or
sub
pushf
cmp
adc
repz
sbb
sbb
filds
xchg
jae
mov
xchg
cmpb
cmp
push
jns
dec
add
adc
lret
add
add
push
push
in
sti
cmp
adc
mov
push
sbb
mov
out
xor
sbb
sbb
pusha
sub
and
or
sub
in
xor
inc
add
shlb
push
jecxz
loopne
fsubr
subl
out
movsb
dec
pusha
adc
insb
mov
inc
or
sbb
test
shrl
pop
pop
adc
pop
xchg
pushf
stos
xchg
adc
inc
call
adc
pop
push
cmpsb
jge
cmp
lea
mov
adc
dec
xor
jl
enter
inc
xchg
gs
xchg
outsb
xor
jo
ss
inc
jne
xlat
push
jb
sub
addb
inc
pop
dec
es
cwtl
pusha
fs
xchg
dec
mov
cltd
in
mov
pop
jb
stos
movsl
test
or
mov
sbb
dec
pop
ret
rorb
call
les
and
xchg
mov
adc
das
adc
xorb
mov
repnz
mov
ret
fmul
gs
mov
cmp
clc
lock
sysenter
lds
adc
in
ljmp
inc
xchg
push
shll
dec
ficompl
adc
into
or
adc
cmp
mov
fdivs
adc
pusha
and
cmp
sbb
arpl
call
call
push
stos
insl
out
fcomps
add
add
fs
push
sti
or
es
or
out
and
nop
inc
fists
jae
mov
enter
push
sbb
or
jge
add
bound
mov
jo
inc
in
aam
xor
pop
cmp
std
add
inc
xor
sti
or
test
and
adc
xchg
lret
and
filds
rclb
or
jg
leave
sub
aam
add
xlat
push
or
std
xchg
enter
invd
xlat
add
xchg
data16
push
enter
rorb
pop
call
sbb
arpl
sbb
or
mov
shlb
scas
xchg
les
jns
cmc
aam
mov
and
leave
les
inc
mov
test
inc
lret
sub
mov
or
imul
push
loopne
or
mov
cmp
or
push
inc
or
adc
or
inc
insb
stos
jne
pop
cmp
shll
sub
jb
int
pop
sub
test
xchg
movsb
inc
mov
dec
push
ja
lds
sbb
test
mov
lea
faddl
in
iret
or
insl
push
call
lds
cwtl
push
insb
hlt
sti
orl
mov
cmpsb
dec
push
arpl
xchg
shlb
icebp
fadds
aam
cmpsb
sbb
in
xchg
dec
jb
adc
or
or
ss
and
enter
add
es
cld
fcmovnu
aam
mov
sub
insl
jp
movsl
mov
sbb
cltd
jbe
adc
scas
add
fisubl
inc
fsub
adc
cmpsl
jne
sub
xchg
dec
xor
xor
insb
mov
mov
sbb
jb
or
mov
shlb
sub
cmp
mov
xor
fwait
push
push
int3
cltd
fadd
push
dec
cmp
mov
mov
jne
aad
adc
push
adc
push
dec
push
loopne
stos
in
xchg
dec
xor
adc
xor
and
fs
leave
and
mov
cltd
nop
push
jmp
sub
rolb
call
clc
and
and
loopne
mov
cmp
push
push
inc
xchg
cld
stc
aad
pop
or
leave
adc
sbb
lea
sub
je
lds
nop
add
adc
xchg
jne
lds
sbb
push
inc
dec
pop
pop
or
insb
xor
aas
in
sub
push
or
lock
xlat
adc
les
push
mov
and
sahf
je
push
xchg
test
fadds
movsl
mov
or
arpl
insl
int3
add
test
movsl
test
and
rorb
les
ljmp
rolb
enter
add
fcomps
test
enter
jb
aam
nop
stos
rcr
lods
push
push
fcomps
push
test
add
lea
and
sbb
adc
dec
dec
gs
loop
dec
rcrl
repnz
cltd
mov
mov
and
and
cmpsl
and
sbb
inc
add
sbb
and
les
pushf
fisubrs
inc
mov
fcom
cmp
lock
xchg
cmp
arpl
cmp
fdivl
inc
shll
cld
pop
inc
push
dec
mov
inc
adc
or
or
xchg
inc
xor
gs
cmp
in
test
push
ja
ja
imul
jb
stos
call
mov
fstpl
call
lock
daa
rorl
mov
jne
xor
test
sbb
in
and
xor
cmpsl
jmp
sbb
add
test
push
insl
pop
fistl
das
rcrl
push
xor
pop
fmul
mov
inc
dec
adc
xchg
out
mov
jl
pusha
xchg
dec
je
scas
mov
aad
enter
pop
enter
mov
dec
adc
pusha
dec
ret
push
fdivs
cltd
mov
xlat
push
enter
fs
test
dec
inc
insl
pusha
fs
rorl
cwtl
cmpl
imul
xchg
inc
adc
js
and
enter
inc
fsub
push
out
leave
ret
andl
adc
in
inc
mov
add
cs
and
and
xchg
push
xchg
pop
fadds
add
push
cmp
inc
mov
xchg
call
icebp
mov
aam
imul
xor
add
out
imull
call
add
negl
mov
pusha
or
negb
pop
test
lods
push
repnz
dec
or
push
push
dec
in
push
rorb
in
fcmovnb
loope
or
jb
in
sbb
mov
and
and
lahf
test
cmp
sub
outsb
and
fs
add
repz
jle
mov
fs
push
insb
push
ja
or
or
out
adc
les
sbb
sub
bound
push
mov
cmpsl
stc
sbb
stos
lds
jl
lds
loopne
in
std
push
sbb
mov
in
shrl
inc
fnstcw
sub
push
inc
les
jb
insl
negl
cltd
and
out
inc
adc
xchg
push
test
inc
gs
mov
ljmp
cld
fldl
addr16
fistpl
or
jnp
mov
add
out
fxam
and
shlb
leave
or
adc
decl
mov
jns
mov
jle
test
repz
push
and
or
push
out
add
add
adc
pop
ds
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
push
ljmp
push
push
in
sub
pop
popa
bound
gs
ljmp
insb
insl
outsb
outsl
jo
jb
je
jbe
js
jp
xor
xor
sub
mov
pop
das
mov
gs
xchg
adc
clc
push
or
jo
decl
cmp
adc
push
push
and
dec
repz
js,pt
inc
pop
add
cmp
and
outsb
je
jb
outsl
arpl
mov
in
gs
out
sbb
push
dec
imul
cmpl
push
gs
xor
cs
push
pop
bound
and
popa
je
outsl
outsb
push
lock
jbe
xor
pop
lock
mov
sbb
add
pop
sub
cmpb
sahf
cwtl
aaa
imul
adc
js
je
jb
gs
cmp
or
add
mov
out
jb
add
add
add
je
push
pop
pop
xor
popa
mov
popa
jb
mov
jbe
dec
push
outsb
dec
xor
xor
out
jle
sub
insl
insl
cmp
dec
xlat
mov
cmp
add
das
das
adc
cmpsl
jge
push
dec
push
inc
inc
gs
insl
and
dec
outsl
jbe
dec
arpl
push
ficomps
sub
addr16
dec
jne
xchg
xchg
push
mov
inc
jo
imul
rcll
inc
insb
into
cmp
out
adc
xchg
cmp
fdivl
outsb
jns
jg
addr16
ja
inc
push
jne
xor
pop
xor
and
daa
push
scas
clc
sbb
jne
dec
js
push
jne
out
jae
xchg
pop
dec
inc
ds
inc
imul
das
jo
or
in
xchg
fcomip
mov
push
adc
ud0
add
sbb
push
pop
adc
les
mov
insl
lahf
and
mov
es
sub
sub
sub
cs
movsl
cmp
cmp
ds
inc
das
stos
ret
pop
pop
xchg
pusha
mov
jg
cmp
jge
jg
cmp
inc
bound
jo
test
cs
and
push
mov
dec
movl
fcoms
insb
jae
cs
dec
mov
mov
inc
int
add
jo
in
pop
fwait
in
insl
and
jb
jbe
dec
push
push
sbb
or
dec
dec
inc
sbb
and
or
xor
xor
sbb
cltd
push
scas
push
jo
imul
insl
pop
mov
je,pn
jo
xchg
pop
fdiv
lret
je
sub
and
add
cmp
ds
scas
mov
je
or
xorb
inc
popa
cltd
insl
xlat
sahf
and
daa
mov
jne
pop
fidivs
insl
and
insl
push
xchg
inc
cs
xor
lock
or
dec
rolb
jnp
lcall
mov
add
xchg
and
movsl
mov
mov
sbb
jp
imul
or
fs
add
mov
je
cs
or
fldenv
dec
in
ds
xchg
xor
popf
jb
loopne
sbb
and
mov
adc
cmpb
sub
arpl
cmp
arpl
dec
popa
sub
mov
popf
mov
inc
xchg
insb
imul
out
xor
sbb
or
push
lcall
mov
sbb
pop
xor
loopne
dec
jno
jns
push
fistps
dec
mov
cs
loopne
and
xor
shll
hlt
and
or
pop
dec
add
add
xor
fdivs
outsl
outsl
ss
adc
fs
jo
cli
jbe
add
inc
or
sahf
inc
xchg
push
mov
in
pop
push
gs
sarl
mov
jle
outsl
push
or
mov
imul
push
cmp
sbb
bound
cmp
adc
jno
insl
in
ljmp
imul
scas
loopne
imul
inc
sbb
inc
jno
rolb
push
leave
nop
enter
inc
insl
imul
int3
fnstsw
adc
repnz
add
add
mov
push
and
pop
sub
cmp
addr16
push
cmp
push
jae
xor
fdivl
addb
pusha
jo
sub
add
adc
data16
lret
inc
sub
pop
dec
jmp
pop
sti
pop
cmp
push
and
cmp
pop
mov
fstpl
pop
inc
inc
and
mov
cmp
jg
lcall
iret
sub
add
fimull
sub
rol
das
lret
jmp
fisttps
push
icebp
pusha
inc
mov
clc
ret
movsl
add
addl
jae
push
loop
or
outsb
imul
into
in
test
add
add
xor
repnz
js
jae
aaa
mov
pop
dec
pop
add
add
clc
cmp
sub
push
imul
add
add
mov
sti
out
add
push
add
add
add
mov
cmp
pop
or
aaa
ds
push
pop
hlt
and
out
imul
pusha
push
js
or
sub
jg
cmp
add
sbb
addb
mov
push
xchg
test
add
outsl
mov
pop
daa
push
cmpb
into
in
fsts
and
sub
jb
int3
push
imul
mov
jbe
push
stos
int3
js
mov
xor
int3
rorb
sahf
dec
dec
sahf
sbb
in
dec
dec
mov
mov
loop
lock
es
inc
pop
push
inc
or
mov
pop
adc
loope
add
dec
cmp
test
cs
cmp
test
pop
data16
les
dec
adcb
sub
int3
ficomps
pop
jo
lods
mov
loope
jb
push
and
sub
push
leave
and
dec
add
pop
jb
pop
test
or
adc
pop
jb
add
adc
and
push
add
add
add
add
mov
ja
cmp
cmp
adc
or
add
or
out
lcall
add
test
decl
nop
xchg
xchg
xchg
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
mov
cmpsb
cmpsl
test
ljmp
scas
mov
mov
mov
mov
mov
mov
ret
enter
dec
lret
int3
int
iret
rcl
rcl
aam
xlat
fcomp
fcmovu
loopne
loop
in
out
call
ljmp
icebp
repnz
cmc
div
clc
stc
cli
sti
cld
push
test
cmp
add
mov
push
add
dec
mov
xor
sbb
push
pop
outsl
ja
iret
or
inc
cs
jae
jb
bound
inc
lea
dec
dec
stos
inc
pop
and
clc
ss
popa
mov
repnz
mov
mov
lea
dec
mov
outsl
fisubrl
push
inc
push
mov
into
movsb
inc
sahf
insb
gs
mov
dec
push
ljmp
aaa
insb
in
in
in
out
pop
jns
inc
mov
imul
ds
and
inc
jb
jns
mov
pop
enter
mov
mov
mov
frstor
arpl
push
cmp
outsb
pushw
push
rorb
mov
or
test
imul
pusha
inc
jbe
push
push
sbb
jns
and
arpl
xchg
es
fprem
popl
cmp
push
push
adc
mov
dec
lahf
mov
inc
mov
cwtl
xchg
pop
pop
push
push
jae
cmp
cmp
out
push
adc
movsl
jae
addr16
adc
fdivrl
adc
and
mov
notl
dec
testl
dec
cmp
mov
jnp
filds
dec
jge
pop
jno
aas
jg
mov
shl
imul
bound
fistpll
ret
push
inc
outsl
jae
inc
imul
and
push
shlb
jbe
bound
jg
sub
push
or
scas
mov
mov
pop
loope
aaa
daa
xchg
mov
popw
out
dec
jnp
cmp
cmp
add
ds
push
das
push
sub
divl
in
es
jle
sub
sub
addr16
out
imul
sub
seta
cmp
jmp
cmp
and
add
cmp
pop
cwtl
jb
cltd
push
scas
sbb
push
jb
imul
outsb
fnsave
xor
lret
sbb
sbb
and
arpl
pop
es
jo
sub
mov
jl
lahf
fs
sub
mov
hlt
push
call
cmp
les
in
repz
sub
sti
push
aam
negl
mov
loopne
push
test
sarl
jl
je
jnp
iret
repz
lock
imull
out
dec
int3
adc
push
push
mov
sarl
das
push
clc
push
dec
dec
push
ret
imul
inc
or
repz
cmp
sub
in
fdivp
and
data16
adc
mov
lahf
decl
iret
repz
shrb
repz
or
incb
test
iret
repz
pusha
inc
xor
sub
sahf
out
ds
std
in
loopne
mov
sahf
out
xchg
insb
inc
sbb
cld
repz
rcl
mov
pusha
xor
pop
sbb
aam
mov
lcall
fisttpl
outsb
push
xor
movsl
add
cmpsl
pop
push
outsl
pop
cmpsb
bound
fs
jns
sub
sbb
je
ljmp
dec
sti
push
lods
pcmpgtw
xor
add
jle
push
mov
cmp
inc
inc
dec
jae
insb
divl
pop
flds
mov
sbb
decl
push
dec
inc
dec
xor
inc
dec
dec
dec
push
push
loop
and
inc
mov
add
dec
dec
inc
add
adc
pushl
or
sub
adc
incl
popa
into
mov
mov
int
mov
adc
outsb
mov
ds
pop
in
stc
pop
jae
pop
clc
lret
sbb
jb
pop
enter
jge
arpl
cmp
adc
dec
scas
jp
adc
in
sbb
xchg
fisubrs
and
cmp
dec
jmp
iret
imul
lret
add
inc
mov
mov
notb
lret
sub
fwait
ss
sbb
pop
mov
ds
xor
incb
int3
dec
dec
xor
dec
popf
pxor
xor
decl
lret
aaa
push
div
inc
sub
dec
xchg
cmp
cmpsb
das
xchg
pop
mov
adc
xchg
icebp
mov
cld
or
loopne
cmp
inc
mov
roll
pop
mov
ds
dec
xchg
scas
lods
psraw
and
xor
into
pusha
sti
adc
mov
pop
and
es
mov
add
push
dec
push
pushf
push
inc
or
outsb
add
jbe
and
fldl
dec
xor
inc
fstpl
mov
jbe
inc
loop
repz
jne
push
inc
dec
push
dec
push
idiv
dec
sub
mov
pop
adc
push
xor
inc
pop
adc
decl
inc
dec
push
push
xor
push
push
das
cmp
cmp
sbb
ss
adc
mov
push
inc
cmp
pop
pop
inc
xor
dec
adc
push
jb
fbstp
or
das
add
add
add
pop
xor
sbb
adc
outsl
mov
push
pop
or
pop
aas
adc
push
pop
adc
ja
fistl
push
add
and
lods
and
add
and
in
jg
ss
ljmp
and
dec
pop
sub
sti
sahf
loopne
cmp
pop
pop
inc
xor
push
dec
adc
jnp
pushl
lcall
inc
cmp
or
or
aas
inc
or
inc
pop
pop
pop
pop
sbb
or
js
decl
push
push
pop
push
sbb
or
inc
add
insl
sbb
add
dec
xor
jl
fisttps
mov
pop
aad
das
pop
or
push
and
xor
je
lea
and
sub
das
pop
dec
das
pop
adc
test
out
testb
push
adc
or
sbb
repnz
jge
adc
sbb
xor
dec
sub
push
or
and
je
push
dec
xor
int3
push
sub
xor
cld
dec
pop
popa
jle
xor
inc
pop
adc
sbb
mov
js
mov
imul
popf
push
push
mov
jb
mov
sbb
and
fdiv
inc
add
jae
xchg
cmp
nop
sub
aas
adc
push
aas
dec
or
cmp
mov
push
dec
dec
aas
dec
cmp
sub
pusha
daa
clc
inc
xor
inc
sbb
pop
and
xchg
sbb
push
inc
inc
jg
sub
movsl
inc
pop
jnp
inc
pop
adc
dec
nop
push
sbb
in
push
cmp
imul
shlb
jne
jg
sub
lea
xchg
push
lahf
daa
mov
idivl
sub
outsl
jg
push
fdiv
imul
sub
loop
adc
loope
sbb
addb
pop
hlt
ss
das
pop
cwtl
xor
rcrl
and
dec
ss
dec
jp
lods
ds
aaa
cmp
outsl
insl
mov
inc
add
adc
push
push
jmp
popa
orb
sahf
imul
cvttps2pi
push
or
sarl
movntq
out
sub
out
sahf
jnp
mov
cmp
repz
push
push
jno
repz
imull
xchg
sti
xor
iret
les
sub
sub
add
adc
pop
pushf
adc
les
push
cmp
pusha
or
scas
cs
lods
inc
push
das
add
xlat
dec
add
cmp
ret
cmp
ss
adc
js
stos
ret
aad
inc
jbe
mov
cmp
sti
popf
pop
or
push
and
inc
dec
adc
div
mov
push
dec
and
push
pop
cmpsb
ss
sub
dec
fdivrs
jmp
dec
sub
sbb
push
ss
dec
cmp
inc
inc
jno
or
dec
inc
jb
ds
pop
dec
or
push
fbstp
fld
lods
sub
xor
inc
pop
xor
push
or
xor
jp
adc
cmp
pop
dec
sub
ja
mov
das
xor
sub
mov
out
adc
mov
jae
xchg
adc
push
adc
xor
pop
inc
out
pop
das
inc
xor
insb
ret
jmp
mov
scas
jge
pusha
xor
hlt
popa
dec
jo
outsb
scas
push
dec
pop
in
inc
pusha
dec
jo
sub
daa
mov
xor
dec
xor
jo
popa
sahf
push
cmp
add
pusha
sub
push
adc
cmp
out
dec
das
pop
shll
cmp
cs
xchg
loopne
daa
cmp
cld
jne
into
xorl
and
cltd
jne
push
xor
jo
rcrl
inc
pop
and
pop
push
add
js
jle
push
sub
enter
cmp
push
jl
pop
add
pop
imul
push
data16
xor
dec
sub
mov
xchg
push
add
add
psadbw
cmp
cmp
xor
shlb
xor
divl
clc
adc
insl
and
adc
pusha
pop
pop
push
xchg
call
xor
adc
in
or
aaa
push
mov
dec
xor
mov
orl
xchg
cmp
adc
test
inc
aaa
sbb
lods
pop
and
dec
push
mov
lret
cmp
cmpsb
inc
xchg
add
pop
or
insb
fdivs
push
and
and
loop
fs
js
push
mov
inc
je
inc
cmp
cmp
aas
add
and
mov
pop
inc
jle
in
dec
dec
add
or
cmp
fwait
inc
xchg
inc
mov
dec
inc
push
das
jl
mov
pusha
push
sahf
adc
in
jbe
int
loope
lcall
sbb
mov
or
inc
fidivrs
push
sub
add
inc
repnz
ss
bound
inc
ficompl
and
add
fistl
cmp
sub
push
sub
add
push
or
adc
insl
jp
add
add
dec
adc
push
dec
pop
mov
inc
daa
adc
dec
adc
lods
pop
daa
sbb
dec
int
rcll
push
movl
scas
jle
call
cmp
dec
cmp
sbb
dec
xor
fbstp
inc
push
aas
pop
pop
loopne
cmp
cmp
imul
or
add
rol
jb
xor
dec
sub
scas
pop
js
sub
pop
adc
and
mov
decl
insl
popa
imul
cs
outsb
bnd
jo
pop
outsl
jo
pop
adc
jl
sbb
push
ja
pop
repz
push
inc
adc
push
cmp
out
sahf
ja
cs
push
sub
fwait
xor
add
and
mov
ja
pop
cmp
and
push
lock
das
add
dec
add
or
repz
loopne
push
mov
je
sub
pop
andb
out
or
or
lfs
mov
lea
cmovle
scas
xor
and
shrb
std
popf
lds
aas
sub
push
pop
inc
sbb
pop
sub
lds
push
push
xor
xor
mov
or
sub
mov
xor
ds
mov
jge
out
push
pop
or
insb
daa
int3
xchg
cli
pop
mov
in
rolb
mov
inc
inc
or
push
popa
ret
adc
pop
fs
fisubs
daa
add
cmp
fnstsw
rclb
mov
adc
add
js
mov
add
and
out
jl
pop
subl
test
pop
out
pop
xchg
jmp
daa
dec
mov
pop
test
mov
add
insb
and
jae
gs
push
push
jo
bound
scas
js
mov
mov
dec
push
push
add
cs
and
sub
jae
pop
jbe
stc
pop
sbb
add
mov
out
sub
imul
push
icebp
push
sbb
and
dec
xor
mov
xor
je
popw
xor
jae
push
rcl
and
ret
push
jb
int
je
add
push
daa
cmp
and
lods
outsl
pop
insl
mov
cs
xor
xchg
pop
repnz
cmp
pop
inc
add
push
mov
jo
scas
addb
test
dec
cmp
add
dec
dec
cmp
mov
adc
pop
inc
sub
das
jecxz
push
and
dec
inc
sub
addr16
pop
mov
sbb
sbb
ss
inc
dec
mov
popa
jbe
add
push
cwtl
inc
lret
adc
adc
or
jle
adc
jnp
dec
push
into
adc
outsb
adc
inc
aaa
xor
insb
lock
and
jae
adc
repnz
into
test
daa
and
sbb
pop
push
jbe
sub
inc
das
inc
dec
roll
pop
push
dec
pusha
push
jno
or
out
adc
push
and
cmpb
pop
jmp
repnz
sarb
mov
lods
inc
inc
push
sub
mov
ret
push
sbbb
push
std
or
push
cmp
andps
cmp
cmc
xor
push
loope
in
push
aaa
adc
pop
dec
push
lods
vmread
mov
push
push
jo
sbb
getsec
test
in
popf
repz
cmp
adc
inc
inc
cmp
xchg
lret
push
pop
adc
add
push
das
sub
inc
adc
adc
into
or
mov
push
daa
xor
pop
pop
ljmp
outsl
adc
loopne
and
add
sub
push
adc
js
push
adc
pusha
mov
mov
adc
push
push
sbb
xor
or
sub
cmp
cmp
mov
daa
cmp
pop
jae
add
sub
adc
mov
js
push
pop
push
jo
sbbl
add
filds
sub
cs
adc
faddl
or
inc
insl
jo
or
cmp
daa
pusha
mov
das
dec
cwtl
pop
or
pop
dec
outsb
xchg
mov
dec
fadds
leave
aam
cmp
add
daa
scas
push
cmpsl
dec
mov
dec
sub
add
popa
test
pop
aad
cmc
and
pop
mov
mov
jno
inc
xchg
pop
js
adc
inc
lcall
es
push
js
popa
fisubs
pop
xchg
cmp
clc
adc
cmp
adc
out
popf
loope
cmpsl
mov
dec
mov
sbb
cmp
mov
cmp
xor
adc
rcrb
add
mov
pop
mov
and
fisubrs
sub
adc
inc
pop
sbb
jecxz
out
test
push
fsubs
and
xor
push
cmp
pop
pop
cli
inc
idivl
pop
movaps
ficompl
dec
push
xor
inc
adc
jne
adc
push
mov
inc
pop
xor
das
outsb
inc
adc
and
pop
cmp
enter
int3
sub
and
add
cmp
inc
sub
ds
mov
push
push
loopne
jmp
outsl
xchg
inc
fs
aaa
pop
subb
xor
pop
xchg
or
jg
push
adc
push
add
pop
push
inc
push
push
push
or
pop
or
sbb
or
xor
cmp
xor
sbb
sbb
int3
ds
pop
jo
subb
sbb
push
pop
inc
sub
or
xchg
and
fs
jnp
inc
dec
jg,pt
lret
jae
sbb
insb
sbbb
push
adc
or
adc
adc
lcall
adc
jae
add
sti
inc
pop
dec
cmpsl
hlt
cmpsb
pop
dec
sbb
cwtl
xchg
mov
xor
jp
ficoml
sbb
call
aaa
loopne
inc
fcoms
stos
das
adc
add
or
adc
sub
insl
addr16
mov
fnstcw
pop
or
adc
movsb
loopne
mov
adc
jge
mov
mov
in
cmp
nop
dec
mov
imul
cmp
dec
jnp
mov
adc
jbe
cmpb
out
adc
inc
adc
or
dec
nop
and
xchg
out
pop
xor
mov
sub
aam
adc
adc
pop
es
cmp
adc
loopne
cmp
pop
loop
cmp
and
mulb
aad
adc
pop
and
adc
or
and
inc
dec
pusha
pushf
jge
cmp
adc
fsubrl
fbld
adc
js
inc
xchg
cmp
pop
sub
loope
sbb
and
lock
sub
insl
pop
lods
mov
xor
test
xor
adc
pop
pop
xor
shrb
ss
fsubs
notl
and
jns
mov
int3
and
inc
dec
sbb
cmpsl
mov
insb
cmp
test
addr16
imul
test
pop
setge
inc
jl
mov
mov
iret
faddl
dec
xchg
pavgb
nopl
push
decl
xchg
inc
pop
push
wbinvd
or
xor
cmovb
or
push
sbb
inc
or
imull
or
scas
push
push
in
jg
sbb
dec
pop
mov
jnp
push
arpl
inc
loop
into
test
push
adc
fnsave
pop
daa
and
dec
or
pop
cs
push
dec
cmp
icebp
jle
es
add
sbb
sub
loopne
push
pop
daa
dec
pop
dec
data16
sbb
mov
das
add
xor
sub
xor
rcrb
inc
xchg
lods
popa
pop
push
push
adc
outsl
cld
and
cmp
xlat
push
aas
sbb
je
stos
popa
adc
cmp
dec
inc
mov
push
push
cmp
dec
nop
push
fnstcw
aaa
jbe
add
add
aaa
mov
mov
ja
pushl
fisubrs
je
jo
insb
gs
test
inc
ja
fs
imul
cmp
cltd
rcrb
sbb
pusha
das
inc
int
popa
stos
cmp
jmp
or
inc
and
aas
adc
pop
inc
inc
add
push
push
dec
push
ret
data16
push
adc
push
imul
push
ja
test
xor
out
cld
adc
sub
ss
int
push
pop
fwait
pop
clc
popa
test
inc
popa
add
push
fisubrs
inc
cmp
ss
pop
add
popf
sahf
mov
push
dec
dec
jne
push
ret
aaa
shlb
mov
mov
daa
jmp
lcall
push
and
mov
add
adc
mov
mov
lods
pop
dec
movsl
enter
sbb
push
mov
inc
push
insl
ss
adc
cli
mov
sub
mov
fnstcw
sub
mov
sbb
in
pop
enter
ds
pop
sbb
xor
mov
add
lahf
jo
fsubs
sbb
cld
lcall
mov
pop
dec
xchg
pop
shl
dec
push
jbe,pn
mov
add
jg
out
enter
and
xor
aaa
xor
stos
mov
stos
cmp
xlat
data16
movsl
mov
cmp
push
insb
inc
jb
insb
ret
fidivrl
mov
daa
pushf
outsb
dec
mov
jns
pop
jl
insb
sub
in
sub
cmp
jns
sahf
dec
sub
sbb
dec
repz
or
cld
and
and
fmul
dec
movups
mov
inc
push
mov
xor
je
xchg
scas
dec
pop
aam
dec
dec
popa
in
and
outsl
stos
out
push
push
dec
les
xor
sub
xor
inc
sub
sub
xor
inc
xor
inc
pop
xor
inc
xor
jne
out
jne
jbe
adc
add
sbb
das
js
loopne
bound
xchg
add
sbb
sbb
stc
dec
or
lock
out
push
jb
into
ret
jo
aaa
bound
je
bound
adc
mov
mov
cmp
adc
add
adc
and
sbb
shrb
ret
xchg
lods
adc
jae
ficoml
or
bound
adc
xlat
das
and
and
add
out
inc
push
mov
mov
out
enter
sbb
repnz
lret
xchg
mov
daa
push
inc
inc
xchg
add
lods
dec
nop
pop
outsb
sbb
aas
dec
aas
push
xor
add
loope
ja
aam
in
adc
int3
push
inc
es
or
jb
sti
outsb
in
push
out
add
inc
adc
inc
clc
addr16
lret
dec
pop
pop
mov
mov
pop
lret
adc
adc
nop
sarl
addr16
into
or
in
das
jmp
je
adc
add
add
cmp
dec
mov
insl
scas
add
xchg
mov
pop
subl
inc
xlat
pop
add
push
adcb
pop
mov
fcomps
pop
cltd
fidivrl
cmp
inc
mov
push
mov
xchg
movsb
cmp
inc
idivb
cmp
les
mov
outsl
stos
mov
stos
lret
jge
jg
mov
lret
es
sub
mov
stc
mov
out
cs
sbb
push
sub
js
iret
in
movsb
ja
bsr
daa
xor
pusha
insl
ja
pop
hlt
popa
scas
add
push
lds
testb
in
push
mov
push
sbb
xor
mov
mov
inc
ss
lret
pushf
push
sub
cs
push
cmc
mov
sahf
ret
cmpsl
stc
test
int
cmpsl
pop
add
js
in
in
repz
mov
push
xchg
daa
in
push
dec
les
adc
xchg
aaa
cmp
inc
jge
iret
repz
mov
sbb
pop
repnz
jle
pop
in
add
push
adc
cmp
push
lcall
sti
cmp
pop
imul
mov
sbb
in
xchg
fwait
xlat
les
xlat
out
out
imul
gs
sahf
mov
or
mov
and
jge
jnp
add
mul
mov
mov
push
sbb
push
fwait
sahf
ja
cmp
das
je
cmpsb
push
sahf
data16
push
cld
aad
mov
lahf
out
ret
push
mov
addr16
mov
iret
jae
dec
loopne
sahf
fmuls
push
and
ret
mov
les
ss
xor
mov
in
push
nop
cs
stc
cmp
repz
int
sub
out
sahf
cmpsl
push
jl
mov
sahf
fcomip
adc
add
out
loopne
xchg
das
decl
jg
aad
pop
dec
sbb
scas
dec
test
sub
adc
and
rcrb
push
push
mov
xor
adc
mov
pop
pop
mov
scas
in
bound
int
mov
leave
loop
and
push
pop
inc
std
mov
lahf
add
idivb
in
push
push
mov
and
pop
sbb
pop
enter
cmp
adc
or
adc
jg
or
add
or
nop
add
push
cltd
imul
fwait
outsl
pop
pop
adc
mov
addr16
pop
inc
xor
popa
pop
aas
sbb
and
inc
push
sub
add
frstor
inc
sbb
lods
jo
addr16
push
jnp
cmp
jae
fisubl
into
test
ficoml
out
jge
jae
dec
cmp
dec
dec
mov
insl
push
ljmp
cmpsb
dec
add
stos
mov
push
inc
cmpsb
push
insb
pop
mov
push
dec
pop
je
jns
mov
fisttps
jp
das
jno
outsl
mov
xchg
outsb
addr16
scas
test
jbe
iret
push
ret
inc
lds
retw
dec
ret
push
or
dec
mov
ja
filds
dec
push
loopne
es
out
mov
push
add
push
ja
cmp
mov
adc
mov
or
das
adc
fwait
test
cmpsb
nop
es
insl
jo
notl
insb
je
push
addr16
jo
jae
in
sbb
outsl
and
cmp
adc
sub
push
cmpsb
mov
aad
push
or
cmp
xor
xor
xor
fwait
jge
xor
xor
xor
xor
cmp
push
add
ds
pop
or
or
dec
sti
mov
add
sbb
aas
push
push
pop
adc
bound
dec
or
ljmp
test
inc
dec
shrb
sub
test
ret
es
or
pop
mov
cmp
andl
mov
dec
push
push
adc
fidivs
inc
pop
jbe
mov
mov
push
or
cmp
movl
sarb
bndldx
push
aaa
or
js
xor
mov
xor
daa
adc
aaa
mov
ret
xor
aaa
sbb
jnp
jno
adc
test
sub
rolb
jbe
adc
xor
pop
lock
mov
es
orl
stos
pop
and
or
das
add
or
les
xor
das
insb
mov
sub
pop
and
jbe
mov
push
daa
add
daa
mov
xchg
inc
push
mov
mov
aaa
add
cmp
push
call
lods
jbe
fsubs
add
jo
aaa
ret
aaa
movsl
mov
addr16
ss
push
lahf
xchg
jmp
xor
fisubl
daa
mov
stos
push
loop
andb
aaa
fisubrl
jge
and
ss
das
divl
jl
mov
outsb
daa
popa
dec
jg
pop
dec
insl
adc
daa
insb
mov
imul
popa
daa
pop
push
mov
das
dec
mov
clc
and
aas
adc
cmpsl
sbb
sbb
pop
or
dec
mov
imul
and
das
mov
fidivs
cltd
daa
aaa
or
or
sub
add
or
lods
mov
ds
and
jg
jecxz
add
les
sbb
movb
adc
fildl
inc
mov
mov
push
imul
add
outsl
lret
inc
sbb
pop
test
xchg
clc
add
adc
or
inc
adc
jmp
jmp
add
xchg
imul
pop
xor
mov
push
pop
and
pop
cmp
xchg
adc
adc
outsb
cmpsl
call
clc
xchg
adc
dec
add
cmp
stc
or
shl
das
pop
or
ja
pop
jle
icebp
jb
sbb
and
dec
adc
pop
cmp
das
push
je
repnz
sbb
xor
sub
mov
mov
push
xor
pop
adc
addr16
es
inc
add
loope
cmp
push
adc
loopne
mov
sbb
bound
dec
push
adc
in
inc
fcoms
mov
or
inc
sub
sub
fdivl
adc
mov
xchg
das
pop
inc
rol
and
popa
inc
fcomi
inc
dec
sub
or
mov
adc
mov
sbb
divl
push
dec
cmp
das
inc
es
loop
jg
ret
icebp
mov
push
aaa
push
pop
out
xchg
lret
inc
adc
dec
sbb
js
dec
and
inc
jo
fs
cld
adc
push
or
or
les
lods
jbe
or
lcall
and
sub
test
inc
clc
repnz
sub
aad
aam
cmp
das
push
ljmp
sahf
sahf
push
or
sub
push
movsb
lods
pushf
in
inc
cmp
push
ds
dec
int3
sub
das
add
pusha
add
imul
cmp
fiaddl
mov
sbb
jno
aaa
sbb
aaa
adc
jb
sbbb
xchg
sub
loop
push
mov
inc
push
push
sbb
xor
xchg
inc
adc
mov
xchg
popf
dec
mov
sub
pop
add
adc
data16
test
and
loop
jp
sub
stos
xor
xor
insb
rorb
ljmp
xor
adc
jb
mov
sbb
adc
fnstcw
sub
js
and
mov
adc
push
ja
sub
jb
jno
std
add
adc
dec
mov
pop
sbb
dec
dec
cmp
sub
adc
dec
pop
cmp
mov
dec
fistl
adc
or
push
test
pop
add
cli
stos
xchg
xchg
xor
shrb
inc
xchg
xor
push
xchg
xorps
mov
push
pop
sbb
and
stc
cmp
repz
stc
xor
cmpsl
dec
cltd
or
xchg
mov
add
add
pop
or
or
adc
adc
sbb
int
mov
and
sub
xor
inc
mov
mov
gs
mov
mov
popa
fldcw
xchg
sbb
sub
add
or
adc
data16
jl
add
add
int
push
dec
str
data16
or
and
das
incl
les
test
arpl
adc
pop
pop
cs
and
ficoms
push
test
lds
scas
inc
xor
push
pop
iret
inc
or
push
pop
jmp
movsl
mov
shrb
xchg
jo
cld
jl
imul
xor
xor
add
mov
push
pop
es
push
sti
jl
xor
pop
adc
lock
pop
pop
push
add
add
xor
outsl
popf
or
push
pop
cmp
aas
xor
or
inc
adc
sbb
cmp
push
dec
ds
push
and
pop
pop
dec
push
adc
inc
push
ss
pushl
pop
and
and
adc
add
pop
or
xor
push
pop
add
sub
adc
mov
push
hlt
dec
es
lret
sub
pop
adc
cmp
es
jg
cmp
and
push
mov
pop
and
cmp
cs
adc
mov
pop
aaa
push
cmp
adc
das
push
pop
ss
aaa
dec
sbb
pop
dec
push
push
add
push
xor
push
dec
add
cmp
push
and
and
inc
sub
push
dec
xor
xlat
addl
rcll
enter
arpl
in
test
dec
mov
push
or
fsubs
lds
dec
mov
pop
decl
push
cmp
dec
pop
push
push
dec
es
xor
pusha
and
xor
inc
push
rcr
dec
mov
lds
rolb
test
cmp
out
dec
inc
sub
add
push
adc
imul
pop
jmp
xchg
push
push
dec
in
push
outsl
inc
dec
add
pop
mov
das
adcl
inc
adc
mov
es
lret
add
push
cmp
inc
pop
andb
add
daa
inc
lods
cld
loope,pn
clc
push
push
dec
push
fcoml
inc
push
dec
inc
xor
leave
dec
add
xor
outsl
xor
sub
mov
xchg
inc
aaa
jno
sti
shlb
ret
icebp
adc
pop
movsb
cmpb
aad
lcall
cwtl
stos
pop
fadds
pop
adcl
test
and
jge
push
je
mov
andb
lcall
in
inc
mov
bswap
mov
jmp
dec
fsubrl
stc
jbe
push
ds
insl
xor
jg
mov
inc
xchg
cmpsl
aad
arpl
push
addr16
ljmp
adc
or
cs
insl
sub
adc
or
or
cs
ret
sub
pushl
mov
data16
mov
call
cltd
test
das
sar
push
push
shll
ja
daa
mov
mov
movsb
sbb
dec
stos
out
cli
fmuls
lret
rep
cs
arpl
test
add
mov
mov
movsb
mull
jno
addr16
push
scas
addr16
cmp
dec
movsl
jg
call
push
mov
fwait
stos
flds
pop
and
or
pop
imul
ja
arpl
decl
cmp
je
pop
push
push
add
sub
jnp
daa
and
aas
dec
cmp
inc
popa
js
call
sub
jb
bound
dec
or
xor
and
jp,pn
push
inc
push
push
push
dec
decl
jae
xor
cmp
or
cmp
or
xor
inc
inc
cmp
outsl
push
push
pusha
push
inc
pop
pop
sbb
dec
out
jp
sbb
dec
or
dec
xor
aas
sub
pop
push
inc
mov
in
dec
pop
push
bound
or
or
hlt
call
xchg
adc
xor
cmp
cmovnp
dec
sbb
sbb
call
add
sub
cmp
push
cmp
pop
sahf
cmp
xor
pop
daa
pop
sbb
xchg
fldl
aas
dec
aas
and
sti
cs
push
sbb
pop
dec
add
cmpsb
and
fidivrs
pop
push
aaa
push
xor
inc
add
xor
jb
dec
xor
push
inc
add
inc
jns
pop
ja
inc
inc
xor
and
aaa
inc
push
inc
mov
fiadds
pop
cmovb
mov
ss
cmpsl
ss
pusha
les
push
sub
jo
pusha
sbb
pop
cmovae
or
insb
adc
mov
loopne
push
push
ret
jnp
add
or
adc
jo
scas
bound
test
int3
push
xacquire
push
ffree
mov
pop
push
mov
jns
jle
orb
fucomip
adc
imul
bound
leave
jle
push
dec
inc
inc
sbb
push
adc
ret
mov
cwtl
push
push
mov
cmp
sub
adc
js
xor
loopne
int
pop
lods
sbb
mov
xor
jb
fldl
jmp
adc
sbb
pop
out
push
adc
lods
pusha
aad
adc
sbb
jp
pop
mov
fs
loope
push
sbb
mov
cmp
pop
sub
push
sub
mov
gs
cmp
pop
adc
pop
rorb
inc
push
mov
mov
lds
sbbb
iret
push
mov
push
mov
adc
std
jge
adc
and
mov
add
mov
aaa
adc
adc
rorb
mov
pop
dec
push
inc
cmp
insl
hlt
pusha
cmp
js
and
divb
aas
fs
dec
adc
pop
fbstp
adc
inc
push
icebp
push
sbb
push
adc
pop
inc
xchg
push
adc
sahf
or
inc
dec
cmp
add
mov
iret
dec
xchg
push
mov
adc
popa
das
mov
rcll
sbb
jbe
daa
bound
xor
and
or
js
xor
jae
popa
insl
das
pushf
xchg
mov
cmp
pop
mov
add
and
dec
pushf
xchg
aad
mov
and
pushl
insl
loop
adc
push
jecxz
scas
pop
out
jbe
icebp
pop
popa
lcall
je
sbb
or
xchg
insl
fmulp
mov
adc
push
pop
sub
rcr
pop
imulb
cmp
dec
dec
or
pop
push
gs
out
adc
cmc
and
and
inc
sbb
cmp
scas
es
xor
push
dec
ficompl
daa
rol
dec
xor
lods
pop
cmpsl
adc
adc
add
fidivrl
das
add
push
xor
dec
push
or
and
jae
push
push
mov
sarl
fmull
les
out
ss
pop
or
stos
pop
cmpsl
mov
jecxz
add
lea
addr16
dec
getsec
sub
pop
test
and
xchg
jo
testl
cld
addb
or
sbb
mov
nop
push
aas
add
inc
aaa
fadds
dec
in
mov
lea
stos
pop
push
xor
push
push
ja
jb
pop
jae
adcl
pop
inc
jne
sbb
xor
or
rolb
and
clc
nop
pop
cmpsl
push
sub
or
test
or
test
lds
dec
inc
int3
sti
push
arpl
pop
pushf
sbb
push
pop
jbe
test
call
enter
aas
mov
cmp
das
fs
jo
sbb
push
lahf
or
mov
push
outsl
imul
adc
xor
hlt
pop
and
xor
xchg
mov
cmp
xlat
aas
or
inc
jp
decb
add
cmp
das
scas
inc
sub
push
lea
sbb
pop
adc
cmp
aas
aas
mov
push
shrb
aam
xor
pop
xor
xor
lret
inc
rolb
mov
inc
xor
ss
aas
adc
push
sub
popf
sbb
and
inc
outsl
push
aam
aam
fidivs
addr16
pushw
dec
xchg
scas
pop
xchg
add
xchg
xor
xchg
xor
add
je
push
adc
xor
jl
add
jb
xor
mov
pop
pop
pop
pop
aas
ja
fprem
adc
and
pop
adc
mov
pop
dec
pop
int
sub
sub
das
inc
jle
inc
mov
sub
dec
pop
movsl
popa
insl
outsl
jae
dec
pop
repz
push
xor
cmp
icebp
popa
sub
mov
xor
push
sub
mov
pop
inc
jl
inc
add
addl
sbb
or
icebp
fwait
or
scas
push
add
sub
inc
dec
mov
cmp
mov
pop
inc
and
inc
cltd
mov
xchg
or
add
cmp
bound
in
mov
rolb
outsl
inc
aaa
loopne
mov
imul
stos
lods
xor
add
jb
mov
dec
and
sub
popa
inc
outsl
mov
push
dec
outsl
and
cmp
add
mov
inc
push
punpckhwd
sarl
adc
and
pop
pop
insb
cmp
add
push
inc
dec
push
inc
pop
push
dec
inc
dec
addr16
dec
xlat
jb
rol
xchg
lods
js
unpcklps
pop
or
push
mov
jb
add
inc
repnz
aas
and
test
dec
pop
loopne
lret
jne
inc
adc
enter
push
movups
pushf
mov
adc
and
add
push
stos
add
loopne
divl
mov
or
and
in
popf
and
sub
jo
inc
add
or
dec
or
or
add
call
sub
popf
pop
inc
dec
jl
lods
mov
xor
les
sub
aad
cmc
xor
push
add
iret
push
and
sub
or
jg
in
and
add
sti
inc
xor
and
mov
andb
adc
push
mov
jnp
cmc
ss
pop
ret
and
push
aaa
pop
sub
ss
pop
pop
mov
push
outsb
dec
sbb
stos
mov
fisubrl
cmp
and
dec
adc
fisubrl
andb
inc
pop
outsl
or
pop
fbstp
pop
adc
adc
mov
dec
pop
pop
movsl
andb
add
testb
outsl
sbb
insb
into
mov
pop
push
push
dec
insl
mov
testl
mov
cld
insb
dec
add
dec
adc
inc
xadd
cmc
inc
dec
mov
outsl
addr16
psubq
sti
sahf
adc
cmpb
aas
mov
jo
movaps
insl
pop
pop
inc
dec
add
adc
or
add
test
mov
push
inc
pop
cmp
cmp
ret
fdivrl
add
test
pop
jnp
mov
dec
movsb
dec
daa
cmp
mov
push
push
lods
in
outsl
ror
andb
repz
jg
daa
mov
repnz
lock
inc
daa
fcomp
push
outsl
mov
insl
outsl
and
cmp
inc
daa
aas
int
arpl
nop
sbb
dec
data16
dec
inc
inc
dec
scas
in
cmp
dec
scas
in
sub
lods
in
scas
and
jecxz
sub
pop
xchg
push
pop
jo
out
mov
and
add
call
sarl
xor
adc
ds
shrl
fmull
sahf
out
je
cmp
int3
pop
repz
shll
ds
cmp
cmp
pop
pop
pop
push
pop
inc
jl
iret
repz
sub
adc
pop
rcrb
push
jo
and
or
add
adcb
imul
pushw
jl
xor
and
sbb
push
rolb
int3
pop
or
add
xor
jns
into
dec
add
jo
mov
imul
mov
in
add
pushf
jg
stos
sbb
or
push
mov
sub
xchg
mov
mov
inc
pop
xor
dec
clc
sbb
filds
das
mov
xchg
pop
dec
ret
push
xor
add
inc
or
jns
adc
inc
dec
repnz
pop
outsl
dec
cs
out
pop
enter
cmp
push
js
je
dec
test
insb
add
pop
scas
add
sbb
push
pop
outsl
xchg
ret
out
xor
in
dec
xchg
xor
pop
in
pushf
xor
xor
pop
dec
shl
dec
push
xchg
push
pop
pop
pop
scas
or
pushl
out
jb
and
xor
jae
inc
pop
pop
pop
xlat
mov
xor
fildll
mov
and
fs
sbb
lock
pop
adc
mov
lock
sbb
nop
pop
xor
pop
mov
ficoms
aam
adc
fs
add
dec
xchg
inc
mov
jg
add
inc
pop
ja
bound
sub
xor
dec
pop
sbb
movsb
xchg
in
nop
pop
mov
rcrb
popa
sub
add
and
pop
jb
js
and
pop
cwtl
sbb
or
add
and
ret
push
lock
pop
pop
scas
add
jl
or
xor
shlb
cmpsl
add
rcrb
cmp
rcl
and
add
xchg
add
pop
insl
mov
mov
jo
cmp
pop
dec
push
push
daa
xchg
ja
ret
add
bound
cmpsb
ljmp
out
pusha
popa
jge
jl
into
push
push
mov
xor
sbb
xchg
xor
push
mov
dec
mov
sahf
cld
pusha
vprotd
sbb
add
sub
pop
js
out
insb
popa
cmp
dec
sbb
jl
divl
nop
adc
rcrb
ret
push
push
push
push
outsl
jg
add
xchg
pop
or
test
imul
bound
dec
pop
inc
lcall
adc
arpl
pop
add
or
push
mov
and
and
cwtl
pop
les
bound
xlat
or
pop
adc
or
mov
out
aad
xlat
or
xchg
loopne
pushf
fs
cld
fs
loop
shrl
arpl
or
mov
movsb
arpl
testl
push
loopne
add
repnz
add
insb
fs
shlb
inc
mov
cwtl
ja
add
subl
dec
xchg
lock
sbb
gs
pop
mov
pop
xchg
dec
sahf
or
add
mov
dec
scas
in
fdivrs
jns
daa
xlat
addr16
add
cwtd
nop
int
sbb
and
add
mov
adc
bound
jmp
fdivp
push
xchg
push
pop
addr16
outsl
add
xchg
ja
ss
cmp
ret
loopne
pop
lock
sbb
and
aaa
dec
leave
adc
add
or
and
pop
fcmovb
mov
add
test
lods
fs
add
iret
daa
mov
out
adc
daa
or
mov
sub
jge
ret
repz
push
pushf
pop
push
push
dec
mov
cmpsl
push
mov
movsb
pushf
mov
xchg
mov
or
jmp
pop
mov
enter
or
push
xchg
insb
clc
push
aaa
imul
lods
xchg
lcall
push
testl
add
add
imul
call
lods
fsubrs
sub
adc
out
add
js
lahf
addr16
nop
push
push
mov
push
sub
daa
or
push
enter
and
dec
or
sub
insb
push
cmp
pop
and
outsl
push
imul
mov
cmp
test
xlat
sarb
xor
mov
hlt
xor
cwtl
insb
xchg
cmp
out
adc
inc
or
pop
in
imul
xchg
ja
popf
sbb
inc
sub
pop
cmp
jns
rorl
dec
outsb
fs
xlat
sub
xlat
xor
filds
pop
lds
enter
es
fsub
aas
or
or
stc
fisttpl
ss
out
pop
jne
add
jbe
mov
mov
jns
or
fmull
push
jns
sahf
out
cmp
in
jp
pusha
jl
out
jnp
fdivr
and
roll
jle
into
out
lcall
jl
ja
loope
jge
push
movsb
out
cmp
lcall
xor
jns
out
xchg
mov
push
or
cmp
sub
ja
jmp
sarl
dec
xchg
xorb
lcall
cmp
sarl
jo
ret
jns
cmpsl
stc
test
mov
repz
xrelease
lods
in
out
sahf
out
xchg
pushf
mov
sbb
mov
sahf
out
push
loope
mov
int
fucom
out
popa
mov
push
mov
mov
mov
lea
push
std
cmp
pop
clc
adc
lcall
mov
add
xchg
scas
out
cmp
cmp
xchg
dec
repz
test
mov
out
ds
xchg
test
jns
ja
push
jb
fimuls
sarl
inc
cltd
and
iret
mov
push
push
cwtl
lock
lods
and
mov
push
stc
sub
pushf
and
pop
dec
repz
xorb
int
imul
pop
movsb
mov
decl
ds
lret
push
cmpsb
sarl
pop
xchg
rorl
sahf
out
test
stos
int
test
jns
popf
fsts
stos
into
push
fdivrs
lahf
repz
stos
jbe
lods
clc
push
arpl
cmp
roll
icebp
insl
scas
repz
cmpsl
mov
jbe
jns
iret
leave
sub
mov
and
dec
test
mov
out
jge
iret
lret
ss
mov
cs
repz
xchg
mov
xor
data16
mov
out
aad
rcrl
imul
pop
ret
dec
repz
out
out
popa
les
sbb
gs
repz
fldcw
pop
jl
leave
fxch
dec
int
xor
cmpsl
mov
out
fwait
int
scas
shrb
shrl
dec
popa
repz
or
adc
addr16
jns
and
mov
add
mov
inc
repnz
push
add
xor
xchg
jns
out
dec
int
aad
mov
cmp
xor
jp
adc
fbstp
fcmovbe
xchg
out
pop
paddq
mov
inc
aas
pop
xor
wbinvd
and
std
imul
nop
and
xor
ss
push
pushf
dec
push
mov
mov
nop
and
inc
sub
push
loope
xor
mov
daa
out
mov
jg
pop
mov
push
mul
inc
pop
enter
mov
dec
ss
loopne
sub
dec
outsb
dec
inc
lds
loopne
fs
loopne
scas
mov
leave
jg,pn
sbbb
aas
in
xchg
arpl
mov
outsl
fmuls
mov
cs
dec
jl
test
movsb
fdivr
mov
or
mov
dec
mov
mov
bound
fimull
loopne
fs
pushf
or
pop
jmp
shl
and
insl
out
out
ss
dec
mov
adc
inc
es
cld
enter
iret
adc
add
fisubrs
ja
push
jp
ret
pop
push
sarl
add
aaa
pop
cmpsl
mov
inc
movsb
push
daa
mov
and
pop
mov
add
fdiv
in
push
dec
pop
add
inc
or
cs
push
psllq
test
lahf
fs
ja
jmp
test
inc
imulb
adc
sarb
sbb
int
pusha
outsl
add
and
shll
push
aas
mov
incl
jg
jbe
enter
pop
iret
dec
mov
leave
and
xchg
ja
dec
or
push
add
test
js
pop
pushf
repnz
pop
inc
or
je
aaa
jae
add
mov
jbe
dec
dec
jns
jb
and
jns
jns
mov
ret
in
dec
imul
cmp
les
iret
repz
push
jl
fists
cwtl
andl
add
push
add
inc
mov
add
neg
dec
repnz
jnp
mov
outsl
lods
rcr
and
add
hlt
scas
daa
adc
leave
add
pop
cs
xchg
xchg
dec
jnp
jbe
push
repnz
add
jbe
jnp
push
daa
leave
leave
xor
jb
add
add
rcrb
rorl
push
mov
inc
ds
push
jl
add
jl
leave
inc
mov
repz
cwtl
scas
mov
loopne
inc
add
inc
enter
jge
mov
enter
dec
jge
cmp
pop
cmp
jl
jl
cmp
sbb
add
jno
repz
add
xchg
jl
cli
cmp
popf
jl
or
nop
std
je
jle
cmp
dec
adc
daa
xor
in
sub
xor
jl
icebp
xchg
in
cld
inc
add
push
les
lea
jb
jge
jge
jge
xchg
mov
mov
repz
xchg
daa
iret
add
push
cmp
cmp
cmp
dec
cmp
nop
and
mov
sbb
cltd
in
xchg
jle
jle
jle
mov
minps
in
jbe
pcmpeqw
pop
jae
dec
cmp
add
mov
bswap
in
in
call
add
and
jg
addl
gs
dec
adcl
add
xlat
push
dec
insl
test
in
inc
outsl
test
add
mov
ret
lock
mov
add
push
daa
jecxz
and
sbb
xchg
xchg
pushf
xchg
rclb
adc
and
dec
inc
push
or
add
inc
fwait
movb
repnz
dec
xorl
pop
sbb
xor
lcall
andb
ss
pushf
xchg
sbb
out
vpmulhuw
testl
cmpsl
fwait
xor
add
jmp
inc
out
xchg
pushf
in
cmpl
dec
cmpl
lret
lret
mov
scas
or
add
fstpt
repz
out
icebp
or
cld
push
pop
orb
out
sahf
out
sbb
out
sahf
xor
inc
adc
adc
pop
push
push
js
adc
ss
test
out
xchg
scas
push
add
rolb
fisubl
enter
and
andl
leave
inc
fwait
in
cmp
dec
shl
add
inc
addr16
xchg
mov
inc
incl
xchg
jb
xchg
aam
in
jb
add
xchg
and
sub
adcl
repz
add
mov
jb
shl
das
jle
sub
xchg
cmp
shll
xchg
out
push
push
add
mov
mov
jbe
inc
pop
mov
inc
das
add
loop
fildll
fdivrl
add
cmp
fstl
loopne
add
notl
mov
es
mov
out
sbb
push
pop
aas
fidivs
dec
cmp
hlt
mov
mov
mov
inc
mov
and
test
and
push
push
leave
xchg
pushf
rclb
and
mov
mull
xchg
mov
mov
mov
push
leave
inc
push
addr16
mov
fmulp
dec
js
cwtl
mov
cltd
xchg
rcl
push
scas
add
paddusw
xchg
mov
pushf
dec
or
daa
xchg
mov
xchg
cmp
das
mov
imul
inc
inc
pop
push
jb
mov
mov
mov
xchg
xchg
xchg
in
das
das
das
das
out
xchg
xchg
and
xchg
add
jbe
cmp
push
jb
jp
in
and
cmp
jns
lock
fnstsw
mov
inc
sbb
add
xchg
add
leave
push
adc
incl
adc
sbb
scas
movsb
cmp
leave
stos
xchg
addr16
mov
pop
mov
pop
pop
popa
mov
jno
jns
pop
pop
pop
pop
orl
pop
pop
mov
mov
pop
rorl
leave
leave
dec
mov
pi2fd
leave
leave
leave
leave
or
or
leave
leave
leave
leave
or
push
add
add
add
xchg
iret
dec
xchg
cltd
or
cld
pop
mov
jp
mov
mov
cmp
mov
add
ja
stos
mov
fmull
inc
mov
ja
clc
arpl
into
inc
fimuls
out
in
inc
outsl
inc
nop
daa
or
adc
aas
pushf
cmp
jbe
push
push
inc
dec
cltd
sbb
push
mov
testl
push
or
movsb
dec
and
add
dec
xchg
xchg
push
or
xlat
cs
out
out
stc
scas
popf
fmull
idiv
dec
or
pop
mov
jns
or
or
xchg
imull
comiss
femms
cmovle
or
mov
pop
fisttps
fstps
aas
jmp
mov
add
pusha
xor
pop
or
push
es
adc
push
cmp
fimull
aas
xchg
inc
pop
push
mov
mov
push
pushf
test
leave
jb
fs
xchg
xchg
mov
push
out
rcrb
loope
add
dec
sahf
pop
ja
divl
lea
lea
mov
in
xchg
push
outsl
pop
lea
mov
jb
lea
jnp
xchg
xchg
push
push
pushf
pop
cmpsl
repz
repz
repz
enter
loope
and
xchg
pop
mov
lea
js
add
mov
push
mov
dec
push
or
das
push
mov
xchg
incl
cmp
xchg
add
iret
in
rcrb
push
rcr
fcmovne
repz
call
and
jl
or
xchg
inc
flds
arpl
or
inc
pop
cld
jns
test
daa
sbb
cs
and
add
xor
ds
iret
add
xchg
test
cmp
pop
jle
jns
fdivr
xchg
xchg
out
in
hlt
pop
mov
add
outsl
lahf
scas
sbb
add
xchg
xchg
in
xor
in
in
decb
xchg
daa
nop
xchg
das
nop
mov
nop
aas
nop
inc
aas
dec
nop
in
enter
push
nop
pop
nop
addr16
xlat
sbbl
nop
in
jbe
dec
xchg
lods
out
mov
pop
pop
and
add
xchg
in
jns
daa
daa
cmc
std
xchg
cs
and
xchg
sub
repnz
ja
lock
addr16
cwtl
filds
jb
lcall
jb
mov
xchg
fcoml
out
repnz
std
xchg
test
xchg
iret
or
jb
enter
cmp
inc
mov
pop
xchg
gs
jo
jnp
iret
enter
xchg
xchg
xchg
lahf
or
cmpsl
or
jb
jb
lret
jmp
sbb
jb
add
stc
movsl
and
xchg
sub
movb
xchg
lcall
jae
push
add
lcall
jns
ja
cmp
push
rcr
in
add
cmpsl
sbb
jb
fcmovne
dec
xchg
push
pop
pop
xchg
mov
ss
das
jne
mov
adc
rcrb
xchg
adc
xchg
insl
fimull
xchg
mov
cmp
push
inc
cmp
outsb
test
movb
cmpsb
aas
dec
insl
jmp
loopne
xchg
xchg
add
outsb
push
adc
lock
mov
clc
ltr
xchg
and
filds
xchg
or
outsb
repnz
ud2
sub
icebp
in
or
cmp
repnz
pushf
arpl
pop
dec
sahf
xchg
out
jl
hlt
pop
das
imul
es
ss
xchg
or
incb
xchg
mov
inc
ret
xchg
pushl
xchg
mov
pop
sub
fbld
fisubl
jae
ja
mov
xchg
xchg
mov
xor
into
mov
dec
push
ficomps
in
js
add
add
pop
pop
push
scas
xor
leave
test
fistpll
enter
cwtl
jne
jge
leave
repz
test
leave
popf
movsl
cwtl
dec
lods
cwtl
mov
cs
das
das
mov
cwtl
aad
in
fistpl
ud2
or
in
in
or
push
add
add
add
sahf
out
sahf
fstpl
in
in
sbb
sahf
out
cmc
sbb
cmp
iret
rcrl
or
repz
pushf
sbb
sbb
icebp
cmp
es
cmp
inc
repnz
enter
test
cmp
push
add
int
xchg
xchg
xchg
cltd
cltd
cltd
pop
das
xchg
out
fisttpll
mov
cmp
and
mov
xchg
lcall
fisttpll
inc
cmp
mov
scas
jbe
sbb
repnz
jle
xchg
jne
movzwl
mov
rorl
aam
fucomip
cmc
lcall
or
push
leave
sbb
fwait
enter
iret
push
push
add
pop
fwait
leave
bound
pop
mov
jns
stc
jg
enter
sbb
testl
lea
inc
rcrb
outsb
pop
faddl
pop
loopne
call
and
pop
or
adc
pusha
jns
xchg
inc
xlat
xchg
jmp
out
nop
daa
shrb
push
pushf
out
in
loopne
arpl
cmpsl
or
xchg
in
jns
shlb
cmp
pushf
sysret
dec
sahf
fsts
pop
mov
leave
jae
ds
add
addr16
int
cmp
iret
repz
add
pushf
pushf
xchg
lahf
cmpsl
or
or
jns
out
iret
or
sahf
xchg
adc
adc
xor
xchg
out
negl
mov
sahf
xor
outsb
cmovae
dec
add
jno
push
stc
mov
scas
pop
sbb
sbbl
fbstp
jns
fistl
push
pop
cmp
pop
scas
stos
sahf
pusha
cmpsb
xchg
fcoml
push
add
call
xchg
pushf
adc
inc
lahf
mov
movsl
and
mov
aas
pop
pop
movsl
sarb
jge
out
dec
enter
cmpsl
or
inc
cltd
or
les
jecxz
cmp
pop
push
lcall
fcompl
add
pxor
loopne
add
cs
hlt
mov
hlt
and
das
sbb
dec
pop
or
leave
sub
mov
pop
jmp
mov
xchg
cmpsl
pop
js
push
or
nop
pop
cwtl
ds
or
test
mov
into
scas
shlb
enter
jmp
add
sahf
out
fimuls
add
sbb
daa
cmp
mov
pushf
push
xchg
cmp
dec
outsl
ja
cmpb
dec
popf
test
xor
movsl
xchg
xchg
daa
adc
inc
jg
je
enter
fisubs
and
leave
or
jcxz
cwtl
sub
out
mov
cmp
iret
adc
cmp
enter
mov
add
les
mov
mov
inc
mov
add
shll
nop
clc
pusha
stos
push
add
add
in
stos
jo
mov
stos
mov
add
repnz
int3
mov
in
mov
lahf
clc
mov
or
jns
out
or
das
cmpsl
out
sahf
or
jle
jb
enter
mov
in
and
mov
mov
jmp
adc
and
mov
mov
out
mov
pop
movsb
repnz
jno
femms
pop
pop
movsb
inc
scas
adc
adc
mov
shrb
cmp
mov
pop
movsb
insb
movsb
je
jl
mov
dec
test
push
pop
mov
movsb
pushf
movsb
movsb
shrd
or
scas
jb
roll
orb
jb
mull
push
mov
loopne
cmp
sbb
adc
and
inc
mov
iret
add
inc
movsl
aas
jae
nop
jl
test
jne
addr16
scas
enter
jns
push
push
jb
mov
andb
inc
mov
mov
mov
dec
cs
out
push
out
repnz
idiv
xchg
cmp
push
and
outsb
sbb
lsl
cmpsb
popf
mov
add
out
jb
test
adc
dec
mov
btc
mov
pop
lret
xchg
mov
cmpsl
sbb
dec
mov
str
cmpsl
and
jns
cmpsl
push
cmpsl
out
pop
cmpsl
push
cmpsl
jae
jle
pop
or
shlb
lret
or
leave
xor
pop
mov
mov
cmpsl
add
or
inc
leave
out
jg
mov
das
fcmovne
xchg
mov
lahf
aaa
test
test
bswap
repz
dec
pop
push
add
xor
lar
dec
adc
in
test
mov
xchg
leave
jae
mov
add
insl
pop
lds
iret
xor
in
in
lock
test
in
inc
sub
addr16
ds
lea
xchg
aaa
mov
pop
mov
mov
test
insb
ja
pop
leave
jae
shll
test
cmpsl
loopne
add
out
fdivl
stos
push
pop
in
push
aam
testl
sub
dec
stos
mov
dec
mov
mov
out
push
pop
mov
nop
outsb
cmp
test
psllq
mov
pop
add
mov
movsb
fwait
cmp
mov
inc
pop
ss
outsb
enter
and
test
nop
mov
mov
jp
mov
add
dec
mov
stos
push
leave
xchg
sbb
push
iret
jle
movsb
insb
and
mov
jne
test
das
dec
jns
iret
mov
pop
popa
push
add
imul
test
leave
test
mov
shrl
insb
mov
inc
cs
stos
xchg
cld
mov
cwtl
mov
iret
sbb
adc
lods
cmp
repz
cmp
inc
dec
repnz
push
into
pop
lods
or
mov
leave
push
nop
cwtl
push
iret
test
outsb
daa
daa
mov
pop
mov
cmp
pop
push
or
imul
mov
enter
xchg
lods
shrb
xor
or
adc
iret
jae
adc
sub
int3
hlt
jbe
xor
cmovo
and
dec
mov
or
cltd
in
mov
add
lods
xchg
push
outsl
xchg
mov
test
lods
out
and
sarb
mov
lret
orl
pop
repnz
sbb
adc
jge
daa
stos
scas
cmpsl
bnd
pop
pop
jg
fdivp
xor
mov
or
jo
mov
sbb
add
push
decl
scas
mov
enter
scas
jb
jp
fstpl
xchg
outsb
daa
mov
jbe
in
loope
jmp
pop
in
and
add
cmp
in
and
cmp
dec
mov
or
adc
pop
gs
ja
enter
xchg
mov
dec
pop
mov
lsl
test
xchg
cvtdq2ps
inc
stos
scas
scas
incl
and
push
or
push
and
dec
mov
or
inc
mov
jb
mov
aaa
repnz
dec
mov
mov
lahf
xchg
mov
jo
mov
in
jbe
pmuludq
cld
pop
add
iret
fwait
cmp
in
mov
push
push
sbb
repnz
movsb
add
or
and
mov
cmova
push
shl
iret
add
pop
add
fcmovne
leave
leave
outsl
ja
iret
repz
or
cmp
lahf
cmpsl
mov
and
pop
shrb
mov
mov
cld
addr16
add
mov
jo
adc
sbb
int3
test
push
jg
mov
mov
in
jbe
pop
lahf
pusha
vmwrite
orl
jns
xchg
push
or
push
fisttps
or
dec
scas
xchg
add
aam
fmull
fsub
pmaxsw
dec
dec
inc
sahf
btr
pop
cmp
dec
dec
push
push
pushf
dec
dec
dec
dec
movsb
mov
retw
scas
mov
xor
popf
cmp
inc
push
dec
push
jns
out
xchg
sbb
iret
cmp
mov
and
dec
daa
and
mov
lahf
add
lcall
sbb
and
xor
xor
xchg
leave
leave
inc
jae
addl
jmp
mov
mov
mov
jns
and
or
repnz
in
out
testb
mov
adc
mov
cmp
stc
sub
push
mov
mov
pushf
mov
mov
orb
push
push
lcall
or
out
sahf
mov
iret
shlb
mov
fidivl
adc
mov
add
mov
mov
pop
adc
jns
add
repnz
push
dec
mov
mov
mov
repnz
jb
jp
test
nop
mov
mov
mov
mov
repnz
mov
mov
lock
das
repnz
mov
mov
mov
cmp
adc
push
pop
pop
daa
and
repz
and
and
cmp
repz
pop
and
pusha
imul
sub
repz
or
cmpsl
fwait
cvttps2pi
sub
push
test
add
mov
sub
push
stc
inc
pop
lea
mov
cmp
es
and
out
cmp
push
cmp
jmp
pop
and
mov
mov
mov
insl
jle
xchg
xchg
out
xchg
mov
add
rcr
dec
cs
syscall
mov
mov
addr16
leave
inc
repnz
add
fidivl
fisttps
dec
mov
add
iret
aam
filds
leave
cmc
add
jns
cmpsl
fwait
ud2
and
iret
jae
cmp
pop
inc
dec
adc
repnz
adc
repnz
iret
adc
xchg
push
pushf
cmp
iret
jae
sbb
iret
repz
daa
iret
jae
fsubrp
pop
hlt
incl
or
inc
outsl
enter
mov
push
mov
push
jb
lcall
in
push
mov
cmp
cmp
push
adc
dec
adc
fsubrl
jne
jge
fwait
mov
xlat
cmc
sbb
xchg
fcmovne
in
add
pop
sbb
cmp
imul
xchg
jns
mov
shl
sub
mov
sub
cmpsb
jp
sbb
mov
add
cmp
jb
pop
adc
jg
popl
aaa
movd
das
lahf
push
cmpsl
pop
scas
jns
out
mov
mov
iret
cmp
push
or
push
sbb
lds
mov
aas
dec
dec
sahf
ja
push
adc
pop
rcrb
jns
fimuls
push
adc
pop
pop
jne
adc
dec
push
stc
sbb
and
nop
xchg
int
mov
sbb
enter
leave
repz
dec
into
add
leave
in
repnz
outsl
shlb
inc
mov
jp
pop
add
outsb
pop
leave
clc
leave
movsl
xlat
lods
xchg
add
fcmovne
mov
mov
bswap
cmpsl
push
jbe
xchg
jl
lret
nopl
cmp
add
or
xchg
adc
add
mov
inc
xchg
xlat
dec
dec
dec
push
xchg
add
add
dec
es
xchg
xlat
sahf
xchg
xchg
fisttpl
push
mov
cmp
or
ret
rcr
loope
incl
mov
cltd
xor
das
ret
mov
mov
lock
inc
cmovg
daa
push
xchg
pand
leave
leave
jp
mov
popf
lcall
and
dec
mov
in
fucom
in
cmc
dec
xor
jmp
sub
xor
cmp
adc
and
addr16
cmp
xchg
dec
outsb
daa
imul
out
addl
dec
scas
add
in
xlat
into
add
leave
repz
out
enter
pop
add
rorb
leave
repz
xor
test
and
les
into
neg
outsb
mov
test
add
mov
jns
leave
leave
iret
xlat
filds
iret
icebp
ss
add
or
adc
leave
inc
dec
xor
ja
jns
xchg
fstpt
push
inc
jb
cmp
push
push
mov
mov
nop
fdivrl
cmp
ret
pop
out
pop
jo
psrlq
fildl
jecxz
or
shl
mov
movb
jmp
inc
xchg
sahf
xchg
out
push
add
pop
leave
jae
je
add
xchg
fisubrs
lods
fistpll
aaa
jns
syscall
mov
xchg
mov
in
out
mov
movb
and
xor
pop
cmp
iret
in
in
inc
push
pop
push
in
jle
mov
xchg
in
in
lahf
stos
mov
rol
in
in
loope
in
pop
pushf
pushf
pushf
je
sbb
pushf
pushf
pushf
sbb
pop
push
repz
pushf
pushf
adc
xchg
xchg
iret
sub
enter
out
sahf
and
xor
xor
out
inc
xor
pop
out
sahf
out
gs
sahf
out
sahf
jnp
xchg
xchg
cmp
cmp
repz
dec
sahf
ja
push
ds
jns
in
cmovb
jmp
xchg
hlt
decl
or
inc
adc
inc
and
dec
daa
daa
mov
ss
pop
dec
push
bound
cmp
insl
dec
js
dec
dec
dec
sahf
push
orl
dec
scas
fistpll
mov
in
leave
iret
clc
leave
ror
sbb
add
push
push
add
sbb
jb
sbb
and
das
lret
xchg
and
inc
lret
pop
lret
in
lretw
jl
pop
xchg
jb
xchg
lret
iret
popf
lret
repz
mov
lret
leave
push
adc
aam
fists
ljmp
sbb
jns
out
or
sbb
push
sbb
sbb
sub
aaa
pop
inc
iret
repz
sahf
and
push
and
leave
leave
repz
and
test
jns
fisttpl
movsl
cmp
out
mov
mov
iret
jae
fsubrl
out
repnz
xor
xor
or
outsb
daa
out
sbb
xor
push
sub
xor
leave
repz
aas
cmp
cmp
leave
repz
cmp
cmp
imul
orl
mov
xchg
mov
daa
iret
inc
mov
int3
push
sbb
aam
pop
mov
bswap
pop
nopl
add
xchg
repz
das
getsec
int
leave
addr16
aas
int
int
or
jns
daa
push
push
jp
add
add
in
push
scas
int
mov
push
pop
lcall
es
jmp
enter
push
daa
fs
mov
loopne
enter
int
pop
leave
repz
push
or
leave
leave
leave
adc
and
or
xor
or
adc
into
lcall
arpl
jns
sub
fiadds
je
xchg
out
orl
xor
and
into
dec
dec
outsb
mov
inc
repnz
mov
xchg
sahf
out
adc
add
decl
pop
pop
add
aaa
jns
push
mov
iret
cmp
repz
inc
pop
dec
or
cmp
repz
jp
cmp
mov
cmpsb
rcll
mov
jns
shrb
adc
iret
repz
repz
sbb
sbb
rcrb
adc
push
pop
setle
sub
jns
dec
push
and
out
dec
outsb
ja
orb
das
test
mov
cltd
dec
ss
fmull
and
jp
add
add
rcl
loope
repz
add
push
fwait
or
fcmove
pop
sarl
sbb
jb
rcll
jp
repz
fwait
push
push
cmpsb
cmp
es
pop
mov
add
push
popa
sahf
mov
roll
pop
pop
fst
call
jns
sahf
repz
rorl
rclb
in
in
sahf
adc
pop
leave
repz
inc
sbb
push
repnz
popa
push
push
insb
in
pop
outsb
movq
and
lea
and
out
sahf
scas
es
repnz
iret
sub
fcmovbe
add
pop
enter
shlb
add
sub
pop
mov
inc
fsubrl
repnz
fcompl
rcrl
sarl
mov
add
out
repnz
pop
pcmpgtw
jo
push
add
mov
scas
addps
add
pop
movsb
or
xor
cmc
lldt
mov
mov
sysret
pop
and
jns
stc
adc
sub
aaa
aam
aam
and
js
aam
pop
aam
aam
mov
xchg
aam
pushf
out
iret
push
add
sbb
add
leave
jae
dec
fisttps
fdivs
daa
push
stc
add
outsl
or
popf
cmp
adc
sbb
aaa
jns
out
push
sub
xor
daa
daa
iret
dec
add
cmp
daa
iret
repz
push
push
pop
addr16
jns
pop
outsl
adc
mov
xchg
js,pn
cmp
pop
cmpsl
sbb
lret
imul
sbb
dec
inc
push
stc
add
fistpl
add
femms
addr16
sbb
push
sbb
dec
das
jns
sahf
ja
push
or
or
jno
or
xchg
jb
setb
popf
test
cmp
jae
mov
jecxz
iret
repz
ljmp
xlat
push
sbb
cmp
push
adc
aaa
iret
repz
aaa
and
dec
out
in
es
arpl
and
outsb
es
test
leave
repz
sub
mov
xchg
iret
cmp
fmull
xor
fsubr
jbe
mov
out
repnz
aaa
push
xor
dec
ds
mov
cmp
aaa
and
arpl
sbb
add
xchg
cwtl
sub
inc
inc
imul
movsl
insb
cmp
mov
push
add
aas
inc
push
push
pop
add
pusha
pop
cmp
aas
cmpsl
xchg
push
imul
test
push
pusha
aaa
outsl
dec
sahf
ja
aaa
cmp
push
add
cmp
repz
add
add
iret
repz
or
or
sub
or
fucomi
imul
daa
adc
adc
leave
leave
in
movsb
and
outsb
mov
push
addr16
das
push
xorps
mov
push
and
cs
pop
andb
cmp
addl
sub
jbe
leave
cmpsl
mov
into
aas
xlat
cwtl
pop
shl
sbb
data16
addl
ret
iret
repz
cmp
jbe
xor
cmp
repz
and
adc
jns
cmpsl
stc
cld
call
out
sahf
out
ror
enter
jnp
sarb
cmp
rep
cwtl
nop
mov
push
js
fs
push
sahf
out
sahf
inc
inc
cmp
sbb
jl
lock
cmp
cmpsb
test
fcomps
jo
adc
and
add
popa
ljmp
and
and
add
test
add
cmp
ss
movsb
add
cmpb
cmpsb
fisttps
mov
lret
inc
jle
test
shll
in
adc
pop
mov
mov
sbb
in
call
dec
and
adc
push
ficompl
mov
pop
fisubrl
xor
fcomp
loopne
jb
jle
pop
pop
cmp
movl
roll
or
add
jmp
inc
and
xlat
add
cli
inc
aaa
push
ja
pmovmskb
add
mov
test
insl
add
pop
add
les
dec
or
into
loopne
mov
dec
repz
or
les
repz
xchg
adc
stc
cmp
repz
sbb
in
out
sahf
cmpsl
sbb
jns
dec
push
sub
enter
int
cmp
and
ljmp
jns
jp
sub
mov
push
cmp
lahf
sbb
mov
cmpsb
aas
mov
jl,pn
dec
icebp
xchg
push
add
popa
add
pop
aam
inc
pop
mov
js
and
in
scas
xchg
adc
cmp
jae
xorb
inc
inc
lock
addr16
push
push
mov
es
pop
jle
adc
push
movb
aas
pop
mov
xor
daa
idivl
mov
and
das
call
stos
insl
stos
pop
jg
out
push
ljmp
inc
sub
mov
stos
shl
movl
aas
call
adc
shl
lret
xor
cmp
sbb
sbb
add
add
lock
sbb
jnp
and
push
and
ficomps
icebp
cld
lock
add
iret
cmp
push
fsubl
das
jnp
out
push
or
or
adc
iret
rcrb
in
enter
iret
repz
rcrb
push
mov
repz
pop
test
movsb
and
and
and
test
mov
and
clc
mov
push
ss
xor
xchg
push
mov
add
stc
es
cmp
orl
and
jg
repz
jnp
push
pop
js
mov
imul
add
dec
repz
fisubrl
cmp
xchg
out
sbb
mov
bnd
das
push
dec
push
inc
ljmp
pop
pop
das
dec
inc
pop
enter
enter
inc
pushf
or
in
jl
ret
mov
adc
stc
and
and
sbb
into
sbb
inc
rorl
and
sahf
mov
sub
inc
rcrb
and
sbb
addl
xlat
xchg
sti
incl
add
inc
stc
mov
adc
mov
decl
js
jg
outsl
loopne
jmp
xchg
test
mov
cmp
inc
mov
popf
sti
jmp
stos
push
inc
mov
repnz
test
pop
stos
clc
scas
adc
inc
jmp
call
repz
loope
jp
iret
inc
gs
xchg
push
cmpsb
scas
mov
or
addl
dec
pop
inc
in
xchg
cmp
xor
dec
cmpsl
in
cmp
sahf
xchg
pop
lcall
lock
inc
push
movsl
mov
popa
sar
mov
fsubs
stos
xchg
clc
repz
mov
subb
addr16
lcall
push
pusha
les
add
sti
aas
jno
or
mov
pop
fs
dec
lea
aas
ret
shrl
call
mov
icebp
aas
rorb
and
cmpsl
out
aas
inc
cmpsb
mov
insb
scas
add
aas
xor
incl
in
xchg
mov
std
std
into
popa
test
ja
stos
in
das
dec
pop
loope
les
aas
xchg
les
jne
int
mov
addr16
push
mov
xchg
aas
and
loop
mov
pushl
popa
mov
popa
push
pop
sarl
jl
mov
das
lea
mov
inc
inc
aas
movsl
jmp
jg
sub
jge
mov
inc
rcr
push
arpl
int3
and
pushl
call
cmp
jp
and
cmp
mov
cmp
ljmp
call
or
mov
jecxz
cmpsb
add
movb
aaa
fldt
cmp
jno
call
and
xor
dec
nop
pop
cmp
fisubl
xor
push
lahf
inc
pop
mov
ljmp
xor
push
scas
into
imul
faddp
jge
call
mov
xchg
cmp
mov
mov
dec
dec
gs
std
orl
pop
ficomps
frstor
inc
pop
push
pop
or
adc
jmp
push
dec
jnp
rcll
xor
jmp
out
mov
les
hlt
push
xor
xchg
fs
xor
fdivrl
jmp
rclb
mov
sub
mov
sbb
dec
pushl
repz
test
ficompl
jmp
mov
hlt
movl
imul
stc
std
in
leave
mov
add
insb
push
arpl
psubd
or
outsb
cmp
imul
pusha
aad
jno
mov
inc
aam
dec
std
test
movsl
cli
test
xor
std
jmp
leave
mov
insb
fdivs
jne
filds
or
shrl
pushl
ficoms
push
xlat
enter
mov
and
mov
cltd
xchg
mov
mov
mov
add
and
or
adc
stos
sbb
data16
incl
jbe
jno
add
aad
mov
mov
movsl
in
lahf
xor
mov
cmp
pop
js
stc
in
test
xchg
sbb
decl
insl
or
pop
arpl
hlt
push
imul
insb
sbb
xor
dec
add
in
call
add
shl
adcb
cmc
fnstenv
adc
mov
mov
lcall
ficoml
gs
aam
pop
popa
mov
into
pop
cmp
mov
loop
mov
dec
adc
ret
movsb
sti
hlt
shrl
imul
fldcw
inc
mov
sarb
add
in
add
pop
dec
or
cmp
add
incl
daa
adc
or
and
test
or
mov
popa
into
push
stc
ficomps
dec
fldcw
and
xlat
pop
cmp
mov
cmp
lods
insb
mov
in
mov
pushl
mov
lcall
ljmp
fildl
push
fdivl
or
test
cmp
push
or
or
push
in
decl
xchg
daa
scas
add
mov
pop
jge
xchg
sar
jmp
add
inc
push
imul
xorb
sbb
push
imul
aam
loopne
ljmp
rorl
int3
dec
frstor
fistpll
mov
mov
aad
mov
call
ljmp
push
repnz
addr16
cmpsb
fldl
mov
dec
ss
scas
and
fisubrl
or
scas
testb
out
inc
ret
out
pusha
sar
fists
addr16
mov
jns
imul
andl
shrb
ss
jg
xchg
ja
int3
add
mov
das
es
lds
or
das
mov
cmpsl
call
ret
shlb
scas
ficomps
ret
es
pushf
mov
insl
add
ss
jmp
addr16
jb
push
incl
add
adc
mov
jnp
sbb
xchg
or
out
fdivrl
fisttpl
aam
roll
clc
mov
push
int
mov
mul
ja
outsl
ja
fcomip
mov
out
cli
jo
ud0
cmp
pop
or
adc
sahf
gs
clc
sar
mov
mov
loop
mov
push
addl
mov
cmp
cmpsl
jg
test
rorb
imul
scas
fcompl
scas
bound
filds
aaa
pusha
mov
mov
fidivrs
mov
jmp
mov
lret
mov
cmpsb
mov
sarb
sub
push
mov
jp
jmp
mov
sbb
xchg
sub
aaa
mov
or
sbb
add
sub
inc
pop
xorb
xor
popf
cmp
pop
jo
pusha
push
jne
cmp
or
out
sahf
out
xlat
fcomp
fcmovu
sahf
out
sahf
fsubp
jecxz
out
sahf
dec
in
jmp
sahf
jmp
in
repz
cmc
jns
out
div
clc
stc
cli
sub
out
cld
pop
adc
push
adc
or
je
dec
and
and
cmp
les
dec
bound
jbe
inc
mov
bound
inc
push
sti
int
dec
popa
je
push
fadds
in
fistpll
and
cmp
sub
pop
inc
jno
xor
pop
inc
cmp
sti
jg
pop
bound
xor
aaa
cmp
popa
arpl
cmp
arpl
or
push
outsl
sub
xor
xor
xor
sti
imul
push
inc
jbe
pop
insb
imul
cmpsb
insb
les
push
dec
inc
fs
testb
or
adc
inc
and
xchg
pop
fiaddl
or
sbbb
push
je
lods
test
jbe
or
inc
aas
sbb
xor
and
daa
push
jle
gs
inc
dec
dec
js
push
add
addl
sbb
xor
insb
inc
lds
push
dec
or
jns
xchg
cmp
inc
xorb
insb
aaa
jbe
cmc
lock
inc
push
push
aas
lods
fadds
add
sbb
fcoms
cltd
and
jae
insb
xchg
daa
pop
add
and
sbb
mov
inc
inc
mov
inc
pop
jnp
mov
jo
inc
inc
add
shlb
mov
gs
mov
iret
int
push
dec
cmp
pop
insl
inc
xor
sbb
mov
pinsrw
jne
or
mov
mov
pop
xor
xor
mov
sahf
add
or
add
out
fldl
push
clc
xchg
into
pop
not
or
jo
popf
pop
inc
cmp
aam
inc
adc
add
lret
cld
push
add
or
pop
outsl
xor
leave
xor
lcall
test
mov
or
rclb
inc
xorb
vmread
frstor
rcll
dec
popa
jo
cmp
mov
outsl
adc
mov
fdivs
adc
push
lds
xor
pusha
xor
nop
test
pop
cmp
arpl
cmp
mov
jo
push
dec
adc
push
xchg
sbb
outsl
insb
jns
das
aad
or
inc
jb
push
mov
mov
cmpsl
mov
arpl
inc
mov
test
test
push
bound
ja
inc
jbe
push
shll
mov
dec
ja
dec
xor
pop
das
adc
int3
lcall
push
add
add
xorb
sub
iret
or
xchg
adc
lods
xor
pop
inc
dec
andl
xor
cli
or
aas
adc
aas
adcb
outsb
rclb
inc
push
inc
cmc
sub
bound
outsb
arpl
and
xchg
cmp
pop
push
jnp
cltd
pusha
in
insl
mov
add
aaa
inc
jne
push
rcll
adc
push
xorb
mov
mov
push
sub
inc
and
add
inc
add
inc
push
pop
sub
sahf
adc
xchg
jp
and
jno
rcrl
cmp
or
xchg
or
std
inc
iret
out
sub
inc
mov
pop
xchg
ljmp
pop
push
xor
in
aas
cs
cli
lret
xor
xchg
cmp
dec
aam
jmp
xchg
sarl
and
or
stc
inc
cmpsl
xor
movsl
les
push
test
decl
jg
mov
das
xchg
xchg
pop
arpl
xor
cmp
sub
push
arpl
ljmp
mov
or
mov
loopne
mov
or
int3
mov
ja
bound
mov
fists
and
adc
push
in
xchg
adcb
int
rclb
mov
mov
jmp
cmp
jno
xchg
lods
cmp
es
ljmp
decl
push
mov
bound
in
cmpl
outsl
ja
jmp
rolb
inc
push
or
ljmp
jmp
xchg
jbe
dec
dec
sti
std
mov
mov
mov
fcmovnb
push
fs
hlt
ret
xchg
icebp
mov
or
pop
cld
js
push
inc
push
jle
in
inc
lods
dec
jne
dec
cmp
mov
cmc
fnstcw
lods
sbb
call
xchg
or
jge
mov
xchg
xor
mov
pushl
jno
sbb
imul
cltd
xor
loopne
cltd
inc
sub
arpl
mov
les
jmp
int
and
negl
sub
push
incb
fldcw
out
out
jecxz
imul
es
insb
jecxz
mov
test
jns
pop
stc
pop
movsb
mov
out
call
cmpsb
mov
mov
repz
xor
in
and
push
jl
adc
cmp
cmc
pop
movsb
xor
repnz
pop
orl
pushl
ficoms
lea
adc
cmpsb
daa
push
or
outsb
jmp
mov
data16
ljmp
pop
ficomps
push
cmp
or
fldt
cmc
xchg
dec
sub
jmp
mov
imul
adc
mov
or
push
pop
call
std
cwtl
aaa
adc
decl
xchg
xlat
in
and
pop
insl
fcoms
mov
jb
pop
mov
inc
push
adcl
or
and
pop
repz
add
cmp
add
lock
jmp
test
adc
mov
jnp
pop
imul
cltd
scas
jmp
jmp
scas
jns
pushl
idivb
jle
push
or
jmp
jge
fsubl
pop
fcmovnu
ret
insl
icebp
sub
mov
gs
imulb
dec
inc
stc
pusha
test
das
std
stc
sub
push
adc
push
push
cmp
jg
decl
xchg
cmp
mov
cmpsl
or
lea
jg
jmp
pop
fsubrs
pushf
or
push
fnstsw
es
jge
mov
mov
out
fcoml
xchg
mov
and
lcall
sub
push
lret
and
inc
cmc
rorl
mov
imulb
dec
movsl
xchg
lods
icebp
fdivrl
lret
xchg
adc
lret
xlat
lea
negl
sub
hlt
outsb
inc
mov
out
lahf
push
adc
xchg
xor
mov
ds
sbb
sbb
push
out
lea
lods
xor
mov
mov
mov
jg
cli
xor
incl
and
outsl
into
mov
push
mov
fldenv
ja
test
std
and
dec
lods
jmp
cmpsb
adc
dec
movsl
fisubrl
fdiv
fstps
mov
push
dec
clc
decl
cmp
add
sub
pushl
roll
dec
in
inc
in
lret
push
xlat
sub
mov
mov
lcall
sbb
mov
inc
fisubrl
push
gs
xor
outsl
sbb
jno
inc
lock
out
in
mov
fdivp
mov
sbb
mov
mov
sbb
mov
push
clc
lods
es
loop
frstor
mov
and
mov
adc
adc
adcb
cltd
and
inc
testb
loopne
jl
mov
icebp
jp
inc
pop
mov
shr
inc
ljmp
flds
xchg
repz
xor
xchg
lret
popa
shll
cmp
decl
in
cmp
lahf
and
in
cld
add
adc
cs
lret
ja
call
push
cmp
fadds
mov
outsl
sub
jg
sub
sub
popa
ret
pop
cmp
mov
pop
enter
inc
add
or
mov
cmp
adc
or
sub
adc
xor
and
and
pop
in
pop
push
mov
ljmp
xor
pop
mov
sub
data16
mov
lret
adc
popa
add
call
sub
mov
pop
dec
push
push
add
dec
mov
xor
adc
jmp
test
sarl
imul
enter
add
pop
mov
and
mov
inc
inc
fnstenv
xchg
fldenv
shrb
imul
sub
mov
add
xor
jno
mov
pop
pop
and
pop
popa
testl
iret
xchg
mov
mov
mov
in
push
repz
rol
dec
sti
xchg
je
inc
jg
dec
std
xchg
mov
push
clc
and
jo
xor
cltd
xor
xchg
mov
xchg
cmp
pop
sti
out
cmp
jo
pop
test
ljmp
or
lcall
out
sub
dec
lahf
ljmp
sbb
pop
dec
pop
es
fsubs
push
nop
adc
jno
faddl
sub
test
jg
setle
in
xchg
xchg
sarb
add
fsubrs
sahf
fwait
add
push
or
push
out
cli
jmp
xlat
gs
sbb
int
aaa
and
mov
lods
outsb
mov
fistpll
adc
xor
mov
jbe
cmp
pop
push
hlt
sub
xchg
dec
inc
mov
decl
dec
mov
loop
push
shl
dec
or
adc
data16
push
js
loopne
mov
ds
ljmp
in
adc
push
in
sbb
mov
sbb
pop
decl
mov
cmpsl
add
in
cmc
jne
fiaddl
jecxz
lods
push
call
andl
jg
mov
mov
call
mov
out
leave
sub
xlat
sbb
aaa
mov
in
addr16
mov
mov
lret
bndstx
jnp
call
pop
rcr
and
inc
inc
inc
add
and
bound
dec
mov
lret
sahf
jg
jl
cmp
or
call
incl
inc
cmp
dec
and
testl
mov
jmp
fildll
cld
cmc
pop
add
lock
lcall
add
xchg
lret
sub
fldl
lds
lds
push
imulb
daa
es
fnstcw
loopne
scas
cmpsb
mov
mov
roll
ljmp
orl
in
cli
arpl
pop
loopne
js
add
aaa
std
mov
arpl
int3
shll
movsb
dec
inc
in
xlat
push
in
or
andb
sub
push
xchg
xchg
xchg
loop
jns
loopne
decl
hlt
cmp
call
enter
imul
jo
ljmp
push
and
je
dec
popa
js
xchg
dec
sub
sbb
sahf
mov
pushl
test
fpatan
arpl
jecxz
inc
mov
mov
int3
pop
jle
dec
pushl
loop
sub
add
cmp
or
pop
mov
pop
pop
push
ljmp
pushl
in
ficoml
js
lahf
mov
lds
orl
ljmp
push
adc
xor
jno
and
jge
adc
xchg
ss
pop
mov
xchg
arpl
notl
es
not
add
fldenv
popa
mov
push
adc
pop
rol
neg
jo
fdivs
adc
ds
pop
mov
and
mov
lcall
pushl
ret
fistpll
push
jns
adc
jae
daa
cmp
lcall
or
test
cli
and
popf
testb
jno
addr16
pusha
push
lds
dec
adc
or
out
inc
or
mov
inc
jne
jbe
decl
mov
inc
push
mov
mov
leave
sbb
push
push
sub
xor
scas
cli
ljmp
xchg
out
lret
dec
int3
inc
fldcw
fs
ds
enter
cmp
pushfw
imul
and
test
mov
sub
cmpsl
lock
mov
js
pop
insb
mov
lock
sbb
incl
insb
cmp
sub
sub
xor
mov
pop
pop
mov
clc
xor
fldcw
lcall
popf
xchg
jne
lock
lret
add
xchg
and
out
es
jnp
loopne
seto
sar
jmp
add
inc
inc
fldl
mov
cwtl
and
push
jg
lcall
rolb
pop
cmp
daa
cld
stos
std
test
in
lret
cmp
lock
jmp
pop
repnz
cmp
inc
fidivrl
ja
pop
movsb
mov
incb
sub
fistps
aas
rcrl
adc
lcall
mov
addr16
xor
int3
or
mov
pushf
sbb
mov
jmp
or
inc
jmp
and
pop
cmp
repnz
das
inc
jecxz
inc
push
out
js
mov
incl
cmpsb
push
lret
lods
mov
push
xchg
stos
and
pop
test
mov
and
decl
aaa
dec
jle
lds
pushf
xor
mov
int3
pop
cld
add
ljmp
inc
push
movsb
cmc
sarb
clc
idivb
push
sbb
clc
sarb
jbe
push
les
fwait
cli
pushl
mov
loopne
ret
and
ljmp
jge
fdivrl
ja
scas
sub
sub
mov
push
jne
subb
adc
push
ret
lcall
lahf
sub
or
int3
mov
das
clc
jg
sbb
arpl
sub
nop
mov
int3
mov
cmp
das
xor
repnz
pop
xchg
cmp
in
lret
out
sbb
dec
dec
jne
fs
mov
incl
aas
gs
lea
push
cmp
lahf
adc
sbb
cmpsb
loopne
jle
or
dec
dec
mov
loop
cmp
pop
test
adcb
mov
imul
lahf
cmpsl
int
jle
movsb
lret
mov
cwtl
sbb
ret
or
test
add
iret
pop
in
jb
jno
push
stc
iret
fdivrp
stc
cld
ss
std
sub
js
movsb
xlat
inc
xchg
in
mov
or
dec
les
push
decl
scas
rcrl
jo
sbbb
jnp
ja
push
lcall
addb
jmp
push
inc
cmpsl
cmpsl
or
pop
in
pop
mov
loop
js
stos
je
imul
lret
jb
decl
imul
cwtl
lods
sub
in
outsb
fcmovne
adc
pop
std
pushl
enter
xor
push
jmp
lret
mov
mov
sub
or
andb
lcall
add
js
adc
xor
fildll
mov
fldt
xchg
cmc
and
or
add
mov
cwtl
gs
call
sbb
insl
hlt
cmp
into
test
in
lcall
jg
cmp
fstpl
aad
cwtl
xlat
fs
sbbb
or
std
pushl
cld
lret
pop
dec
dec
inc
stc
lock
jns
addr16
and
loopne
mov
inc
cmpsb
sbb
fcomip
cmpsb
mov
test
adc
negb
enter
jmp
jp
sub
pop
push
sbb
pushf
loop
loopne
jnp
movsl
icebp
lcall
push
or
dec
pusha
pop
pop
and
xchg
dec
and
add
xchg
xchg
pop
sub
lcall
pop
mov
and
xor
inc
mov
inc
adc
loop
mov
jg
popf
orb
repnz
movsb
push
test
or
mov
dec
sub
fadd
imul
test
ja
fstl
rol
cmp
in
xchg
push
mov
mov
stos
sbbl
cmpb
cmp
jg
loopne
stos
setae
or
inc
ret
pushf
mov
add
les
or
xor
andl
push
popa
xor
cmpsb
aaa
fldl2t
stos
pop
mov
sbb
repz
out
mov
std
dec
pop
or
mov
in
jb
fnstenv
insb
push
insl
insl
lods
mov
jle
lock
xchg
jnp
gs
xchg
mov
xor
movsl
data16
push
dec
sub
std
lock
call
jae
sbb
iret
xchg
push
into
shll
in
jge
out
dec
mov
cmc
call
xchg
dec
mov
addr16
or
cld
cmp
das
mov
adc
lcall
and
dec
inc
lods
sar
imul
loopne
les
outsl
rcr
pushl
insb
inc
xor
sbb
rcll
xchg
pop
cmpsl
les
mov
sub
sbb
mov
or
mov
fs
std
mov
cmpsl
push
outsl
outsl
in
pusha
mov
mov
push
mov
mov
xchg
adc
pop
lret
xor
rorl
ljmp
call
popf
shr
dec
sbb
mov
idiv
mov
jo
add
sub
incl
arpl
dec
push
push
subl
jp
clc
cmpsl
adc
dec
in
pop
js
inc
pop
sub
cld
ljmp
std
mov
jg
jmp
inc
xchg
es
call
adc
lds
out
mov
pop
sub
xor
mov
in
shrb
gs
call
xchg
ljmp
shr
fidivs
mov
fs
fisttps
pop
scas
mov
push
push
mov
dec
cmp
imul
sub
push
xor
cmp
mov
mov
mov
lahf
mov
mov
scas
loope
pop
mov
enter
mov
xchg
lret
lahf
incl
xor
pop
hlt
lods
arpl
sbb
outsb
mov
lods
mov
pop
xor
out
cmp
jmp
fldenv
push
sub
loopne
outsl
daa
in
cmpsb
jp
adc
add
pushl
arpl
std
sbb
mov
not
pop
fwait
add
popl
push
mov
cmp
outsb
pop
mov
into
push
sahf
add
dec
repz
shll
mov
dec
mov
inc
fldl
lcall
scas
fisubl
loope
lcall
cmc
pop
dec
push
lds
pop
sbb
xchg
and
out
mov
mov
das
les
repz
mov
xchg
or
jecxz
mov
aas
adc
fcomip
ljmp
mov
push
cmpsb
xchg
xor
sub
mov
idiv
faddp
mov
mov
sarb
jmp
call
cwtl
gs
imul
outsl
ljmp
in
sbb
loop
cmpsl
mov
aam
xchg
stos
adc
stos
test
mov
fstps
xor
data16
dec
pop
popf
aad
sbb
aaa
ljmp
dec
inc
jmp
sahf
popa
out
rcll
push
or
incl
or
cmp
sub
dec
mov
repnz
out
sbb
mov
mov
push
jge
cs
sbb
orl
pushl
inc
test
lcall
js
insl
sbb
inc
nop
scas
add
or
jmp
test
mov
es
cmpsb
lret
mov
int3
push
push
cltd
repz
incl
or
scas
mov
shl
sti
sbb
aad
lock
ljmp
outsl
pop
mov
aad
outsb
les
ja
jbe
ret
out
in
push
ljmp
mov
push
push
jo
sahf
xchg
outsl
popf
xchg
cli
or
in
call
data16
shrl
mov
mov
mov
rcrl
push
addb
fwait
mov
incl
rclb
lahf
mov
adc
sbb
inc
jno
cmp
ljmp
ficompl
test
add
sub
fsubl
pop
subl
cwtl
jmp
xchg
pop
outsb
test
mov
lods
or
loope
decl
lock
movsb
mov
mov
in
push
fcomip
jmp
inc
mov
std
mov
cltd
mov
xor
in
xor
pop
xchg
mov
mov
jmp
add
mov
add
xchg
adc
push
sbb
in
adc
push
ret
sbb
inc
add
mov
jo
cltd
dec
push
dec
xor
ja
mov
js
mov
lret
ljmp
cmpsl
cmpsb
cmp
sarl
mov
dec
rorb
test
mov
xor
lcall
movsl
jg
in
daa
mov
jg
rol
movhps
mov
or
jmp
xor
movsl
or
xor
mov
sahf
push
insl
scas
cmp
push
sub
xor
loope
sub
fiaddl
xor
popf
test
arpl
push
imul
pushl
stc
mov
mov
push
movsb
hlt
test
lock
adc
fnstenv
lcall
fwait
sub
and
mov
push
fisubrs
push
rcll
lret
call
add
lret
sub
add
adc
sub
inc
cld
mov
fsubl
mov
adcl
int3
mov
lods
mov
xlat
loop
cmpsb
ffreep
cmpsb
sub
push
pop
icebp
xchg
adc
decl
sub
dec
sub
aad
add
cs
mov
inc
mov
scas
sub
mov
cmp
arpl
xor
and
pushl
push
inc
bound
adcb
xor
ss
jns
push
adc
pop
aam
outsb
mov
incl
mov
mov
push
sbb
xchg
stos
jg
mov
jbe
call
stos
mov
repnz
lret
out
dec
pop
jecxz
daa
cmp
lcall
movsl
jno
roll
mov
inc
leave
dec
enter
out
addr16
mov
test
outsb
cmp
mov
cld
ljmp
test
push
js
testl
xchg
or
incl
push
ss
stc
leave
xor
xor
mov
test
fwait
out
or
cmpsb
out
add
ret
inc
adc
xchg
mov
mov
mov
ljmp
lcall
jno
in
dec
adc
call
jne
decl
mov
xlat
out
scas
lods
ret
pop
out
fstpl
add
mov
scas
mov
ljmp
inc
mov
cmovge
mov
fwait
std
mov
add
stos
call
jp
xlat
shrb
fiadds
int3
sbb
xchg
pop
fisttpl
jg
imul
mov
lcall
add
icebp
cli
mov
movsl
xor
ljmp
test
adc
lcall
dec
jge
add
pop
adc
inc
push
scas
mov
lods
lcall
das
inc
xchg
das
dec
jb
inc
mov
sbb
test
scas
and
mov
adc
call
test
pushf
in
adc
add
inc
pop
xlat
enter
ljmp
insl
fnstsw
or
push
ljmp
imul
pop
adc
rorl
cmpsb
sbb
int
stos
push
das
ds
decl
lds
fistpl
cmp
xor
sahf
cwtl
sub
movsb
fwait
xor
call
cld
mov
jne
icebp
gs
cmp
mov
xchg
dec
notb
decl
dec
pop
rcrl
les
das
jnp
pop
ds
out
rcl
lds
popf
stos
dec
cltd
aad
adc
lahf
cmp
stc
jno
aas
push
hlt
mov
dec
jnp
mov
jmp
cmp
or
adc
sar
ds
sub
insb
xchg
cld
sbb
mov
ljmp
pop
mov
popf
cmpsl
push
into
ret
fistpl
lds
xor
pushl
jno
sub
sbbb
test
mov
inc
jl
es
lret
add
arpl
or
sbb
pop
lcall
call
inc
mov
dec
cwtl
rorl
mov
fcomip
in
or
push
testl
imul
and
aad
fistl
ret
cmp
stos
jns
xchg
test
jns
imul
pushl
hlt
repnz
imul
sbb
int
xchg
sti
push
rorb
sub
ljmp
stc
lahf
shlb
mov
enter
xchg
dec
ja
push
into
adc
decl
mov
mov
xor
daa
push
pop
in
add
mov
xchg
and
cs
call
push
sbb
divl
mov
jg
xchg
push
cmpsb
xor
add
and
js
mov
mov
sti
mov
xchg
adc
lock
push
xchg
and
test
clc
dec
shr
inc
sub
call
cmp
mov
sub
mov
into
jnp
inc
pop
mov
bnd
mov
cmp
loopne
clc
imul
cmp
aad
mov
or
mov
inc
das
hlt
movb
call
push
jg
incl
aam
jmp
jb
jb
ds
jne
iret
cli
xor
mov
pushl
jns
movsb
in
iret
pushf
push
mov
popf
sbbl
out
aaa
adc
cmp
mov
pop
dec
or
fs
sbb
xor
mov
notb
jmp
in
stc
bound
shll
cmp
lret
xchg
pop
shl
aad
sahf
cli
push
shrb
and
or
cli
ljmp
dec
mov
or
push
fs
mov
push
jne
ss
mov
cmpl
inc
pop
and
ljmp
xor
fwait
lahf
andl
outsb
pop
jmp
xchg
ss
mov
fwait
push
mov
push
cmpsl
repz
aaa
pop
xchg
aas
add
subb
je
mov
inc
jecxz
pop
adc
cli
into
cld
sub
mov
jnp
ja
jno
jge
inc
les
clc
out
cli
lahf
add
xor
aam
fwait
jl
xchg
das
ja
clc
or
call
adc
mov
add
test
cmp
adc
jno
cmp
cmp
inc
mov
jg
dec
dec
enter
int3
mov
jmp
test
cmp
in
mov
jmp
divb
jo
jmp
and
das
jo
pop
daa
ds
lods
dec
arpl
dec
dec
frstor
xchg
in
bound
dec
sub
inc
sbb
xchg
lock
fimuls
jmp
mov
mov
andl
pop
bound
pusha
movl
stc
arpl
push
pop
xor
mov
leave
jmp
ljmp
ss
imul
fisubs
adc
stos
and
out
jle
push
outsb
ljmp
push
mov
and
add
clc
push
mov
cld
mov
dec
lods
dec
test
pop
cmp
call
lods
push
sbb
push
js
dec
or
jnp
mov
mov
mov
xchg
decl
enter
int3
ss
xor
push
call
rclb
ljmp
mov
pop
loop
sbb
dec
inc
sbb
loope
or
mov
out
repz
stos
pop
aas
rorl
pop
adc
sub
lcall
imul
and
ret
mov
lods
mov
ds
outsb
cmp
fbstp
xchg
sbbb
pop
lcall
out
inc
ja
xchg
cmp
loop
sub
dec
popf
iret
xchg
insl
ljmp
xchg
insl
pop
push
es
mov
lahf
jge
pop
call
inc
lods
rcrb
mov
sbb
adc
in
inc
inc
sub
ds
mov
sti
jp
cmc
jg
push
xor
mov
imul
stc
andb
out
call
dec
sub
je
jmp
adc
jge
ret
lret
or
ja
jl
insl
test
cld
mov
sub
lds
push
xchg
aas
ss
sub
cli
insl
adc
pushl
dec
jne
jg
pop
outsb
adc
xorl
ds
jge
cltd
push
rcl
jmp
xor
jae
push
addr16
adcl
fdivs
push
push
test
lds
fcomip
mov
or
inc
mov
and
cmc
outsb
std
inc
lcall
lcall
int3
bound
pop
lcall
mov
lds
pop
sbb
mov
xchg
fcomip
xor
nop
cmp
mov
sub
pop
jbe
std
loope
into
cs
out
in
pop
clc
es
lcall
mov
inc
mov
push
shrb
ss
mov
jns
out
call
les
cltd
loope
cmc
cld
pop
lcall
ljmp
sar
out
jp
cmp
mov
call
xor
mov
clc
jmp
rclb
pop
fs
sub
push
mov
daa
jp
repz
lods
pop
cmc
call
cmp
sbb
adc
addr16
in
and
scas
and
incl
enter
in
pop
xor
adc
pop
sub
insb
lds
aad
les
cmpsb
xor
inc
or
rcll
ss
loope
jmp
jmp
rcrb
add
jbe
mov
aas
dec
add
rclb
ds
incl
test
xor
bound
pop
jle
mov
popf
xor
sbb
call
repz
outsb
lret
push
mov
jae
add
es
jmp
jb
cld
pop
mov
movsl
jbe
push
es
in
dec
xchg
bound
and
pop
call
movsb
pop
jmp
mov
cltd
adc
in
repnz
popf
adc
mov
popf
mov
and
mov
inc
xor
push
pop
pushl
inc
add
mov
iret
sti
syscall
stos
ds
fwait
cmc
push
xor
sbb
mov
lods
ds
pushl
lret
mov
les
fadd
and
jo
adc
outsl
cld
ljmp
and
push
fisubrs
fimull
push
sti
mov
aad
outsl
or
dec
decl
bound
lret
xor
sbb
xor
xchg
mov
decl
into
mov
shll
lods
push
cltd
aaa
and
or
data16
js
mov
popa
cmc
push
hlt
jne
sti
push
ret
inc
imul
adc
shll
lcall
popf
and
mov
mov
rcll
and
cmp
lcall
decl
bnd
aam
adc
aaa
cmp
pop
sbb
mov
ljmp
pushw
mov
pop
push
outsb
pop
pushf
loope
cmp
int3
aam
jg
mov
dec
xor
cmp
std
into
or
jbe
jmp
fwait
mov
cld
lcall
sbb
test
dec
mov
adc
sub
dec
je
cld
call
push
mov
adc
cmp
jmp
out
inc
push
add
call
repnz
push
push
mov
lcall
mov
sbb
cmp
je
inc
rcll
push
cmp
pop
fsubl
lods
push
sub
xor
push
or
aaa
aas
sub
in
mov
dec
cld
pushl
cmp
or
push
mov
fs
scas
mov
xchg
xchg
and
loope
inc
clc
call
push
sbb
aam
sti
sub
pop
stos
sub
lcall
inc
ljmp
dec
cs
repz
mov
icebp
adc
lock
push
mov
decl
push
jl
lods
mov
divl
mov
call
cmp
jg
mov
adc
mov
jecxz
rcll
pop
dec
mov
pop
xor
mov
outsb
rcrl
cld
sub
inc
jbe
or
xor
fucom
mov
push
gs
call
flds
pop
shlb
inc
push
stos
jbe
or
int3
mov
lock
call
jb
dec
out
jp
lahf
jbe
es
push
adc
std
cs
xchg
mov
cmc
mov
mov
lea
ds
mov
int
jp
mov
dec
scas
fidivrl
inc
cmpl
aas
repnz
lahf
sarl
jno
xchg
call
out
hlt
xor
cmp
iret
std
sbb
int3
pop
fsubs
out
mov
lcall
pop
dec
cltd
add
xchg
call
call
and
loopne
nop
das
lahf
push
xor
inc
cmp
repz
mov
adc
pushl
mov
dec
lahf
push
pop
out
and
sbb
cltd
loopne
lahf
xor
dec
in
jl
test
sub
pop
loop
adc
pop
lret
cmp
in
mov
incl
push
add
cmpsl
add
je
xor
pop
bound
jnp
je
sub
sub
imul
sbb
mov
out
int3
and
fucomip
shll
hlt
mov
outsl
cmp
cmp
pushf
fbstp
add
add
jle
lods
sar
mov
xor
or
jnp
gs
call
inc
data16
jg
hlt
test
comiss
jbe
pop
sbb
aad
dec
sbb
stos
fiadds
cld
or
jmp
repz
push
add
jae
dec
ja
push
push
mov
enter
mov
cmp
mov
adc
insl
enter
jl
call
test
sarl
sbb
ja
xchg
iret
dec
inc
fcompl
cmc
cwtl
add
decl
mul
mov
sub
fcompl
jg
mov
sbb
hlt
ret
cmp
jg
or
inc
push
jg
enter
push
test
rorb
xor
dec
cmp
nop
lret
inc
das
sahf
xchg
incl
int
cmp
xchg
push
ljmp
xchg
inc
mov
inc
bound
incl
mov
sub
in
adc
pop
push
cmpsb
lret
cli
pop
pushf
imul
gs
inc
shrb
out
sbb
mov
pop
mov
addr16
fldt
mov
push
test
cmp
add
outsl
cli
ficompl
jnp
movsl
repz
rol
jg
popa
push
aas
arpl
icebp
mov
lods
and
pop
dec
insb
in
subb
jg
imul
cmp
movsb
and
mov
loop
sub
test
aam
jbe
call
dec
cwtl
mov
or
mov
adc
xchg
call
cmp
jmp
sbb
scas
xor
aas
xchg
adc
add
lcall
xchg
out
jo
pop
dec
incl
arpl
mov
add
mov
push
clc
test
repnz
popa
fdivl
dec
test
jmp
fiaddl
adc
adc
xchg
jmp
sbb
loop
xchg
adc
jbe
std
inc
nop
and
cmp
mov
and
out
add
das
sar
mov
repnz
sub
ss
adc
arpl
sub
je
out
inc
call
cmp
pop
addr16
mov
out
out
rolb
adc
cltd
jo
mov
addr16
in
cld
ja
sbb
loope
mov
pop
lea
add
mov
jb
out
ss
inc
ds
jp
negl
xor
sbb
cmp
jmp
mov
rcrl
insb
daa
cmp
mov
sbb
mov
push
mov
lcall
orl
insb
lret
int
xchg
pop
stos
cld
stos
cmp
inc
pop
ret
inc
sti
call
loopne
and
adc
loope
push
mov
cmp
mov
jg
in
dec
inc
adc
ds
js
dec
lret
in
push
pop
dec
fmul
dec
sti
ljmp
scas
std
ret
sub
and
xchg
jne
xor
pop
add
aad
testb
xchg
fcmovnu
sbb
xchg
jg
not
lret
and
iret
insb
mov
sbb
mov
aam
pop
imul
xor
xchg
inc
jge
insb
sahf
imul
sbb
mov
xlat
insl
dec
pop
lcall
call
xchg
pop
loopne
lods
lock
pop
adc
cmc
rcll
fcomip
decl
mov
dec
push
sub
movsb
fldcw
xchg
mov
xchg
bound
call
out
xchg
test
stc
jecxz
lods
imul
das
lock
repz
cmpsb
addr16
ljmp
mov
mov
insb
inc
mov
data16
insl
test
fsubs
add
aas
inc
out
mov
out
inc
pop
pop
and
out
movsl
in
dec
test
fisubl
lcall
jno
adc
jg
notl
fmul
add
mov
pop
dec
fisubs
dec
insl
pop
push
lods
ret
pop
outsb
dec
lcall
sbb
or
cmpl
sub
mov
ljmp
imul
ja
iret
sti
enter
sbb
mov
fsubl
sbb
add
imul
jmp
pop
jo
push
ja
cli
inc
ror
mov
add
cmp
fcompl
sahf
ds
push
xor
cli
xchg
jl
iret
lds
gs
xor
xor
rcr
mul
dec
jmp
dec
loopne
fadds
out
xchg
clc
ljmp
sbb
mov
lock
out
adc
cwtl
sub
dec
incl
xchg
jb
popa
push
pusha
sub
or
sbb
adc
lcall
xchg
mov
fbld
dec
rcll
fidivs
push
and
pop
jmp
ljmp
lcall
fs
shrl
lock
clc
call
imul
inc
test
mov
mov
mov
clc
vunpckhpd
and
test
sub
cmp
push
addb
lret
ret
fcos
call
mov
xchg
mov
shl
mov
lret
or
adcb
mov
call
mov
jnp
pusha
jge
mov
sub
call
adc
push
jae
or
call
jae
lea
adc
data16
xchg
add
pushl
add
jbe
shrl
bound
sbb
ljmp
mov
xchg
dec
std
jecxz
dec
sbb
jne
iret
mov
mov
icebp
arpl
call
sbb
fisubrl
shlb
stos
mov
fcmovb
adc
scas
iret
jmp
in
std
fistpll
pop
mov
mov
sub
xor
lcall
and
lcall
sub
mov
jbe
rorb
das
lret
scas
cs
pushl
or
jnp
pop
outsl
mov
xor
xchg
lock
mov
cmpsl
out
adc
cmp
inc
dec
loop
subl
cmp
int3
add
and
jae
and
cvtpi2ps
or
out
jne
lcall
xchg
sbb
and
sarb
incl
dec
adc
xor
decl
jbe
cltd
push
jmp
pop
lea
inc
std
push
dec
inc
jle
orb
sahf
out
decl
loop
out
push
mov
and
jb
xchg
sbb
inc
mov
fsubrp
and
xchg
mov
add
subb
call
ljmp
jle
xor
test
fildll
push
pop
ljmp
mov
jp
out
je
addb
add
fmul
das
ret
jl
fwait
add
call
mov
inc
xchg
aad
or
lods
out
inc
mov
xchg
mov
cs
xchg
cs
decl
clc
test
lods
xlat
pop
fdivrs
pop
shrb
pop
lret
sbb
inc
push
xor
xor
incl
fdivp
mov
shl
dec
jnp
xor
jae
imul
push
rol
push
pop
sub
jnp
data16
jb
in
loopne
dec
mov
subb
ret
dec
popw
std
out
clc
shl
cmp
or
lock
inc
dec
sub
aad
ljmp
sbb
int3
push
sbb
xchg
fldenv
incl
js
into
dec
mov
mov
fdivp
jae
add
fstpt
mov
mov
decb
xchg
pop
mov
fstpt
push
mov
jecxz
call
xchg
popa
sbb
mov
or
int3
in
ljmp
or
incl
inc
or
negl
cmp
arpl
cmpsl
cmp
xchg
ljmp
lock
test
inc
mov
xor
xor
jbe,pn
mov
pop
lods
pop
xchg
mov
call
cmp
and
mov
loope
sbb
xor
out
shl
push
push
sbb
incl
jl
sarl
shrb
cmpsl
dec
and
out
fstps
enter
or
xlat
js
fildl
push
cmc
popf
add
jne
push
dec
aaa
ljmp
cmp
xor
cmp
into
fs
mov
push
arpl
test
cs
jmp
out
mov
cmp
mov
js
or
out
sar
mov
setg
dec
sbb
outsl
inc
sbb
iret
aad
pusha
inc
jl
in
ja
or
or
fnstsw
jecxz
int
mov
or
incl
lahf
leave
inc
rorb
je
pop
out
test
in
mov
xlat
sbb
add
cli
add
lcall
mov
mov
push
pop
mov
fcomip
jbe
mov
cwtl
decl
test
xchg
hlt
hlt
test
mov
mov
loope
mov
fadd
call
test
movsb
mov
cmp
and
fistpll
push
adc
inc
mov
outsl
pop
out
jnp
xor
pop
mov
sbb
sub
jbe
hlt
mov
add
jg
fdivrl
jp
mov
mov
or
and
fidivrl
xor
pop
addr16
pushl
shlb
jg
push
lock
jne
stos
ss
insb
cltd
jge
out
jne
scas
sti
repz
sub
icebp
ljmp
pop
je
call
stos
insb
sub
xchg
mov
pop
sti
push
imul
cmp
pop
stos
xor
pop
mov
ds
loope
lcall
les
decb
inc
push
mov
mov
pusha
sbb
mov
loop
clc
jno
mov
push
jle
ds
filds
jg
cs
ja
jmp
mov
cli
movsl
push
lds
mov
shll
mov
sub
dec
cld
std
xlat
or
cmp
das
push
cltd
outsl
je
push
mov
jmp
fucomi
xor
mov
sti
je
mov
lcall
aad
sbb
push
cmp
js
negb
pushf
cld
xorl
push
gs
fdivl
xor
dec
insb
or
out
cli
sub
sbb
add
in
jmp
jmp
clc
cld
jge
jmp
mov
insl
je
mov
jecxz
jo
bound
push
mov
mov
cmpsb
decl
stos
pop
sub
int
in
mov
mov
xchg
fnstsw
inc
stos
add
dec
rcrb
js
test
cltd
lahf
repnz
fsubr
les
aad
sbb
mov
pop
lock
cmp
sub
stos
fxam
sub
jmp
out
cs
mov
call
push
mov
and
jle
or
repnz
inc
push
in
push
mov
insb
push
mov
mov
adcb
jns
out
fbstp
and
pop
or
ss
xchg
cmpb
or
mov
out
push
cmp
pushl
in
fwait
cmp
orb
adc
fwait
incw
lret
jmp
fimull
mov
mov
mov
leave
mov
pop
lock
mov
jp
insl
xchg
fcmovbe
imul
mov
call
negb
cld
arpl
test
imul
push
mov
cmp
jg
iret
out
mov
mov
pop
mov
cmc
and
push
imul
repnz
cli
incl
lock
cmp
mov
adc
ljmp
inc
dec
cmp
jmp
dec
out
and
lds
mov
clc
js
and
cmp
xchg
icebp
mov
push
mov
cmpsl
cli
lea
sbb
push
jmp
sbb
jmp
pop
loop
sbb
mov
movsb
pushf
in
mov
call
inc
fcomps
sahf
xlat
sbb
ret
cwtl
xor
cmp
add
inc
lahf
xchg
dec
pushf
out
and
pushl
imul
mov
je
bnd
cmpsb
inc
jp
pop
imul
sub
ljmp
mov
cmp
adc
adc
inc
cmp
xchg
push
cmp
stos
scas
mov
loop
adc
jle
add
dec
es
popa
mov
inc
push
sbb
cwtl
jle
jge
aas
jl
push
sbb
push
repnz
mov
fistl
rdpmc
jb
adc
call
mov
js
sbb
into
lods
rolb
scas
test
xchg
mov
decl
push
sub
adc
pop
test
push
out
sbb
mov
push
mov
pop
or
mov
xchg
ds
daa
int
mov
mov
out
decl
faddl
test
cmp
jecxz
cmpsl
out
stos
inc
test
ds
mov
push
or
mov
es
lds
popa
ds
call
lcall
push
addb
repnz
loope
shr
aad
call
dec
mov
add
out
fldenv
mov
call
fildl
add
jae
adc
cmp
sub
or
push
xlat
pop
js
jne
or
xlat
mov
in
in
mov
aad
js
and
inc
in
lcall
and
test
mov
jp
lret
pop
rol
fcmovnu
ljmp
xorb
or
call
sbb
xor
adc
daa
and
inc
cs
in
bswap
or
adc
ljmp
cmpsl
repnz
fs
mov
lret
xor
fdivrl
xchg
inc
add
add
ljmp
jge
xorb
or
movsl
cmp
or
mov
pushl
mov
aam
xor
and
mov
sarb
jl
adc
test
fcomip
fstpt
aam
cld
dec
outsl
loop
mov
jns
in
jae
xchg
pop
mov
push
in
incl
add
mov
out
adc
cltd
nop
and
test
xchg
push
imul
push
lds
sbb
jno
inc
dec
dec
xor
adc
ljmp
pop
ret
fs
mov
insb
mov
stos
pop
pushf
mov
stos
in
cld
cmp
mov
sbb
mov
mov
dec
dec
lea
or
loop
adc
test
leave
ds
add
add
and
jns
mov
mov
jmp
mov
rorb
aam
push
cwtl
cmp
das
sub
jge
mov
mov
fistpll
ljmp
popl
mov
adc
sub
iret
test
dec
inc
sbb
xor
mov
cli
fcmovbe
push
mov
addl
fcomip
ljmp
mov
mov
pop
jg
push
aas
mov
jge
movntq
out
jmp
inc
test
out
mov
std
adc
or
cli
dec
out
adc
stc
pushl
lods
or
call
pop
cltd
cmp
ror
mov
pop
push
jg
xchg
push
call
add
lock
push
dec
adc
adc
pushf
cltd
divb
lods
push
mov
mov
jmp
pushl
push
fists
loopne
mov
fcoms
mov
cld
jne
pop
fiaddl
clc
pushl
sbb
cmc
xor
pop
or
adc
je
mov
and
out
lock
mov
stos
rcl
aam
fbld
push
mov
sbb
jg
test
mov
movsb
pushf
pop
mov
mov
pop
sub
in
adc
decl
add
aad
add
xchg
bnd
nop
out
sbb
lcall
mov
add
cli
lahf
cmc
pop
xor
aad
bswap
out
out
decl
lock
xor
stos
adc
cli
or
movsl
out
adc
cmpsb
lcall
cmp
data16
and
aaa
jle
pop
mov
into
jnp
inc
shll
pop
lea
movsl
pop
jle
sbb
ljmp
and
push
cmp
cltd
scas
or
ja
jno
dec
cs
fildll
mov
xor
mov
pop
lcall
popa
and
in
and
jo
or
lea
mov
xchg
push
lcall
lods
sub
fs
sub
dec
loop
mov
and
sub
sbb
incl
imul
movsb
jg
sub
or
dec
xchg
mov
movsb
push
jmp
cwtl
mov
adc
sti
sti
cmp
aam
ja
rolb
bound
ja
clc
jmp
roll
test
addl
mov
sbb
xchg
push
sbb
divl
lcall
mov
aaa
hlt
push
popa
out
out
cmp
pushl
and
jl
push
jbe
sti
jle
imul
fiaddl
int
cmpsb
lcall
mov
sti
cmp
dec
icebp
cmpsl
xchg
pop
xchg
or
daa
lds
lcall
dec
jmp
pushf
out
outsb
orl
dec
addl
push
shlb
ret
mov
sub
stos
pop
lahf
les
dec
cmp
sbb
jne
jp
cmp
or
xor
and
push
mov
jne
lret
decl
outsl
in
inc
or
cmpsl
sbb
and
push
outsb
mov
and
xchg
xor
lcall
sub
pop
fsubp
jl
mov
push
adc
sbb
xor
add
mov
call
dec
pop
frstor
ljmp
fdivrs
ljmp
inc
ret
mov
inc
xchg
call
add
fsts
pop
in
adc
mov
jns
add
movsl
insl
jmp
into
mov
sub
faddl
addr16
xor
dec
cmp
inc
jae
mov
data16
cmp
test
mov
jecxz
inc
sub
ss
pushl
les
shll
push
mov
int
movsl
push
stos
pop
mov
jg
popf
sbb
sahf
jo
xchg
decl
cmpsb
and
add
imul
mov
pop
ljmp
pop
cmpsb
out
ljmp
into
repz
lcall
cld
adc
sub
push
stos
xchg
add
ret
inc
xor
mov
mov
jmp
dec
inc
cld
mov
in
insl
cwtl
cmpsl
mov
lahf
fdivrs
inc
lahf
movsl
pusha
jge
jmp
pushl
rclb
aam
pop
or
dec
add
push
push
jg
sub
stos
lcall
jge
mov
incl
ret
aam
cs
repz
xor
inc
add
scas
jo
adc
push
jl
call
sbb
repnz
xor
inc
adc
call
jnp
and
xlat
push
popa
jns
daa
clc
dec
mov
add
pop
pop
cli
loope
in
xchg
nop
call
movsl
push
xchg
jae
mov
fcomip
mov
push
popa
jb
stos
and
xchg
add
xchg
sahf
decl
dec
push
xor
std
scas
icebp
pop
mov
icebp
mov
inc
ljmp
daa
in
shl
mov
movsl
decb
push
test
shrb
pop
or
mov
das
cli
jmp
ja
cmpsl
adc
sbb
arpl
incl
cmp
incb
leave
into
mov
add
push
insl
loop
xchg
mov
dec
shll
stos
aam
ret
jg
stc
inc
aas
mov
xchg
sub
incl
in
je
and
dec
inc
int
ja
xor
jle
push
inc
loopne
out
mov
pop
mov
es
scas
stc
lock
ja
aad
cmp
fwait
sub
in
cmpsl
mov
jmp
pushf
adc
fcomip
jecxz
xorl
cmp
mov
mov
daa
rcr
adc
fiaddl
cmp
nop
imul
jp
xchg
nop
clc
imul
lcall
adc
lea
sub
fwait
push
dec
and
mov
jmp
pop
lock
push
ret
push
xor
int3
aaa
outsb
push
dec
hlt
pushl
ljmp
sub
outsl
sub
xchg
test
jnp
mov
in
repnz
push
or
sbb
inc
mov
pop
into
aas
add
in
int3
jns
mov
ljmp
sbb
mov
mov
dec
loop
lret
xor
loopne
lcall
mov
mov
mov
cmc
cmp
lods
lods
pop
popa
ds
call
hlt
xor
push
and
popf
xor
pop
call
pop
mov
pop
pop
fists
xor
ss
pusha
xor
nop
cli
out
xor
cmp
sub
jb
sub
lcall
decl
insb
int3
out
mov
arpl
fwait
stos
push
mov
out
gs
rorl
fwait
jmp
lret
gs
lods
jo
xor
lcall
sbb
arpl
sub
mov
mov
decl
add
xor
mov
dec
imul
das
add
out
stc
pop
popa
fisttps
in
scas
add
ja
sub
sub
decl
mov
mov
ljmp
incl
jb
push
pushf
push
out
insl
fnstcw
imul
mov
or
cs
fs
js
and
mov
insb
out
pusha
mov
sbb
dec
jg
movsb
cmp
jmp
jecxz
mov
xor
cli
idiv
adc
push
daa
sbb
pop
dec
addl
cmpsl
clc
fstp
mov
mov
popl
mov
dec
loope
fsubr
sti
cmc
mov
xchg
adc
add
repnz
inc
imul
scas
cwtl
iret
dec
arpl
or
fbstp
mov
and
sub
in
sub
iret
push
push
ljmp
cmp
das
jne
and
filds
insb
adc
jbe
int3
push
cmp
cmp
ljmp
lcall
and
xchg
fwait
add
cs
popa
test
jmp
jmp
mov
xor
jo
and
outsb
mov
subb
subb
call
gs
int3
sbb
push
fnsave
mov
and
std
outsl
call
cmpsl
lods
xlat
out
mov
adc
repz
lds
xor
stc
jns
mov
adc
dec
subb
ljmp
sarb
mov
push
jo
mov
jp
pop
cvtss2si
outsl
or
push
loop
icebp
outsb
add
lds
push
gs
fdivs
daa
mov
jge
ds
icebp
fistps
inc
fs
pop
sbb
cltd
cmp
pop
cld
call
cmp
fimull
loop
aas
testl
add
or
pop
outsb
je
ljmp
pop
mov
sbb
outsb
xchg
mov
loopne
push
imul
xchg
cmp
xchg
inc
mov
int
movsb
cmpsl
adc
xchg
or
cmp
mov
cld
loop
dec
in
dec
nop
lea
lcall
inc
mov
inc
in
in
js
jl
lock
xor
pushl
adc
lret
imul
leave
fs
jne
pop
scas
push
inc
sahf
xor
xor
xchg
incl
pop
idiv
inc
mov
or
je
ja
test
testb
out
into
movsl
cmp
int3
lcall
loope
shlb
jo
sub
loopne
icebp
pushl
insl
adc
mov
fs
lods
inc
lea
xchg
into
outsb
roll
loopne
movq
sub
xor
fidivl
out
jle
xchg
stos
leave
sahf
xor
push
mov
push
cli
sbb
notb
jno
or
xchg
mov
int3
filds
lahf
cmp
lods
push
lock
cli
incl
mov
std
push
into
sti
push
mov
sub
sahf
ficompl
dec
xor
xchg
fldenv
js
sbb
rolb
jle
lcall
pop
rclb
lods
in
mov
sub
jmp
push
mov
fcomi
xchg
cmp
inc
repnz
test
adc
outsl
lret
fwait
mov
shr
xchg
ret
lcall
stos
mov
mov
fstpl
pop
call
mov
ljmp
and
xchg
cmpsb
sbb
push
jg
test
iret
jnp
jmp
ret
out
leave
es
sahf
mov
mov
jmp
pop
iret
mov
gs
sbb
dec
call
mov
cmc
mov
fwait
mov
rorb
rorb
cmp
sub
xor
test
push
insb
adc
jecxz
jg
out
test
jge
mov
cltd
mov
or
xor
and
xchg
into
incl
and
ss
add
xlat
sbb
xchg
mov
les
aas
into
dec
aas
push
out
jmp
and
mov
loope
or
adc
inc
outsl
pop
imul
stos
mov
or
in
cltd
push
push
jg
mov
scas
test
xchg
sbb
mov
xor
jmp
fnstsw
addr16
sub
mov
aam
xchg
mov
mov
xor
fstps
into
lahf
mov
out
cmp
fsubp
push
pop
mov
cmpsb
xor
in
cld
mov
push
leave
sub
pop
mov
popa
mov
mov
pushl
out
cwtl
insb
cltd
sahf
and
cld
sbb
rclb
mov
push
pop
hlt
sti
cwtl
aas
in
sub
sahf
test
and
jnp
jecxz
inc
mov
dec
cmp
cmp
xchg
mov
cmpsl
mov
shrb
fisubs
push
sub
jno
cmp
pop
std
dec
push
fmuls
cmp
bound
sbb
adc
adc
ljmp
out
push
sub
jo
sub
iret
and
xchg
mov
cmp
fisttpl
mov
pop
scas
or
jae
hlt
aad
fldt
fwait
jne
outsb
fdivr
pop
cmp
fcomps
ss
mov
je
mov
out
sub
popf
out
movsb
dec
mov
fcompl
lds
adc
sahf
mov
jnp
test
cmp
aas
mov
and
pop
scas
push
xor
dec
js
ret
xchg
imull
out
out
push
sbb
cld
cmp
jae
fists
clc
jle
sub
testl
fbstp
ss
adc
lock
sbb
xchg
in
adc
mov
pop
in
pop
icebp
push
jb
mov
mov
scas
push
scas
xlat
addr16
push
cltd
mov
ja
ljmp
inc
enter
cmp
jnp
fs
movl
and
ljmp
or
gs
pop
enter
ss
cmc
stos
aaa
outsl
add
add
or
fidivl
pop
cwtl
clc
scas
in
jge
and
xor
decl
roll
nop
fldenv
sub
pop
vpaddd
mov
mov
pop
call
hlt
orl
test
mov
xchg
sbb
test
or
push
decl
pop
lods
sub
rol
xor
sub
add
dec
mov
cmp
or
push
sbb
jmp
xor
lock
and
push
es
stc
les
out
movsb
jmp
insb
xchg
ljmp
pop
xorl
test
adc
jbe
sbb
inc
push
cwtl
int
jo
scas
mov
mov
jmp
scas
adc
xchg
xchg
push
push
sub
mov
xor
scas
push
or
mov
aas
jmp
pop
lret
sub
decb
loopne
adc
insl
call
shrb
mov
jmp
cmpsl
jbe
adc
inc
ret
fs
dec
xor
into
sbb
dec
fwait
js
add
xchg
out
jnp
mov
std
and
pop
inc
cld
jns
cs
mov
push
sbb
cltd
clc
or
xchg
mov
adc
std
in
adc
aas
xchg
mov
cmp
jno
xor
xchg
xchg
jg
cmp
add
cwtl
jp
js
jbe
fs
mov
filds
mov
cmp
add
sub
and
sub
mov
or
incl
ljmp
adc
enter
push
dec
xor
pop
xchg
scas
fwait
notb
ljmp
decl
xchg
leave
dec
lds
sbb
mov
fdivrs
mov
adc
out
jmp
pop
rorb
repz
mov
jnp
imul
dec
lods
fcoms
ljmp
jmp
mov
xlat
adc
rcll
je
mov
mov
adc
mov
cmp
ds
jns
icebp
adc
stos
inc
imul
cmp
or
sbb
adc
dec
sub
repnz
and
push
mov
jle
cmp
es
and
mov
mov
fs
fldt
repz
push
test
push
or
test
dec
ljmp
pop
andl
push
jne
inc
ret
inc
fstpl
xchg
rcrb
pop
sub
sbb
mov
stc
push
outsb
das
xchg
sbb
scas
out
jl
adc
insb
andb
clc
test
fildll
sti
je
loopne
pop
mov
fdivr
xor
jno
sar
sub
jecxz
repz
lock
jns
roll
cmpsl
fs
lcall
xchg
push
notb
hlt
popl
or
aaa
dec
or
fidivs
push
out
pushl
stc
js
aam
loop
push
shlb
xlat
add
loop
mov
pop
mov
pop
push
inc
jmp
sti
add
sbb
pop
mov
and
bound
jle
popa
push
test
decl
cmpsb
scas
rol
xor
sar
sbb
lock
loop
scas
push
outsl
outsl
add
mov
sub
mov
decl
mov
repz
xchg
data16
ss
dec
fstpl
adc
or
decl
mov
lock
push
call
push
sub
je
mov
out
lcall
int3
aad
cmpl
scas
or
cmc
adc
ja
sub
imul
dec
mov
lea
fwait
dec
or
cmp
add
push
aas
lods
test
sub
jp
call
mov
adc
hlt
push
lods
lahf
lds
adc
enter
mov
scas
push
pop
out
fcmovb
iret
dec
pop
and
mov
std
jmp
das
and
stos
fisubrl
jecxz
adc
pushl
mov
dec
lcall
aas
sub
ret
jmp
sub
xor
jbe
sbb
push
mov
lret
mov
mov
inc
jnp
gs
ljmp
sbb
jo
mov
mov
jnp
add
mov
ficomps
les
lret
in
neg
push
inc
test
ret
popf
sub
in
xor
insl
test
push
inc
xchg
arpl
insb
iret
lcall
stos
bound
sbb
adc
mov
aaa
mov
fcompl
add
pop
sbb
add
insb
les
adc
je
les
push
and
and
jmp
and
mov
loope
out
push
push
jle
cwtl
sub
lcall
lea
cmp
or
add
stos
lods
inc
and
push
pop
popa
jmp
inc
in
pushl
outsb
inc
out
frstor
xor
out
out
push
in
mov
jmp
mov
test
daa
mov
negl
cs
add
ljmp
jp
cmp
in
adc
test
mov
fwait
pop
jge
adc
push
add
lods
stos
movsb
mov
add
icebp
or
rcll
xor
push
inc
mov
jg
cs
insb
mov
aam
dec
cmc
mov
or
push
dec
mov
lods
mov
loop
adc
sbbl
inc
mov
out
mov
mov
lcall
or
add
or
push
int
xlat
ljmp
mov
jmp
imul
mov
aas
or
pushf
ja
imul
decl
aad
add
or
inc
cli
je
ret
hlt
fs
call
add
jnp
out
or
xor
cmp
pop
push
push
movsb
decl
mov
mov
imul
mov
shlb
cli
pop
dec
jg
ja
add
jle
leave
test
in
push
sahf
sub
pop
or
les
and
mov
push
lahf
sub
not
cmp
aas
inc
enter
and
add
decl
rolb
sbb
test
inc
ljmp
and
xor
dec
pop
xor
mov
jg
sub
mov
fdivl
call
pushl
cld
std
or
or
pop
arpl
sub
lahf
jmp
inc
lcall
lahf
jge
bound
cmp
jp
loopne
fucom
das
mov
divb
call
xchg
jl
mov
pop
addr16
push
jno
les
into
fldt
fcomps
sub
mov
call
fdivrl
xchg
popa
stos
fwait
and
push
stc
and
shlb
lcall
hlt
xlat
push
sbb
pop
data16
jne
xchg
pop
fisubs
push
iret
pop
rcrb
imul
jo
pop
icebp
incl
mul
fcmovbe
sahf
and
aas
int
add
je
in
cmpsl
mov
lcall
repz
dec
mov
std
lock
int
add
and
int3
inc
mov
jns
enter
mov
mov
push
and
js
shll
lcall
shr
push
push
cmp
loop
push
and
push
cmpsl
add
sub
sub
mov
pushl
dec
cmp
sub
idiv
push
jo
adc
rcr
cmp
push
pusha
lcall
decl
inc
adc
push
jbe
push
and
mov
add
cmpsb
jmp
jmp
test
mov
in
js
or
les
push
es
cmp
jg
mov
rorb
mov
xor
out
int3
add
jle
xchg
fistps
mov
inc
fmuls
pop
push
std
mov
cld
ljmp
lcall
adcb
mov
fdivs
push
xor
jle
push
cmp
mov
test
fimull
ljmp
cmp
out
dec
xor
inc
sbb
push
push
cmp
out
ret
das
cli
pop
out
idivl
sbb
cmpsl
dec
xor
mov
and
daa
sar
ljmp
shll
xchg
pop
sub
lods
pop
jnp
push
push
add
sbb
rclb
jmp
insl
jne
xchg
imul
cmp
jae
sub
addb
mov
jmp
mov
js
xchg
mov
imul
pushl
loopne
or
cmp
and
mov
test
jle
jmp
mov
shlb
dec
xchg
shrb
outsb
mov
das
out
stc
pop
dec
cld
sbb
adc
das
sar
rol
idivl
sbb
push
out
cmp
sbb
inc
pushl
or
xor
jmp
jl
mov
stos
cmp
dec
jle
pushl
jb
and
mov
sbb
ja
push
pop
xorb
movsl
call
je
dec
fimuls
ja
and
outsl
dec
or
mov
aam
sub
pushl
test
or
dec
pop
pushf
push
cmp
adc
iret
into
inc
mov
mov
call
ljmp
jns
or
xor
inc
outsb
add
jne
scas
lcall
incl
sub
test
xor
mov
rclb
mov
fimull
movsl
out
pop
lret
jg
pushl
mov
pop
cmp
push
pop
jnp
addr16
push
adc
inc
inc
mov
pop
sub
pop
push
decl
adc
add
cmp
incl
cld
sbb
test
mov
xchg
sarl
xor
imull
pushl
aam
xchg
pop
sbb
mov
adc
dec
mov
mov
adc
mov
sub
cmpsb
pop
popa
std
stos
jecxz
movsb
xchg
mov
icebp
and
mov
dec
jne
das
add
ljmp
fldz
xor
or
inc
addr16
jg
sub
cmc
pop
adc
andb
dec
movsb
cmp
fimull
call
pop
cld
mov
pop
sub
mov
push
xchg
cmp
jg
push
cs
rorb
push
adc
in
jmp
push
or
incl
mov
aad
sbb
enter
sbb
sub
sub
call
imul
push
ret
jno
lea
push
sbb
inc
dec
stc
out
aaa
add
pop
pop
or
incl
mov
sub
add
mov
lcall
jg
dec
jmp
push
adc
out
inc
cs
ljmp
sti
scas
xor
add
inc
mov
call
scas
xchg
dec
push
xor
ret
jmp
ret
arpl
mov
stc
subl
and
ljmp
pop
pop
inc
mov
xchg
mov
dec
and
in
nop
lret
das
pushl
int
sub
insb
and
mov
mov
mov
sub
add
add
jg
decl
les
lcall
xchg
mov
sbb
call
fsubrl
pop
repnz
and
icebp
out
push
inc
enter
jne
mov
inc
sbb
sub
jmp
imul
fisttpll
push
cld
dec
adc
cmpsb
inc
sti
adc
mov
sub
pop
subb
mov
jbe
into
mov
ljmp
sar
fnstenv
jno
xor
adc
push
mov
sbb
test
mov
std
incl
call
sahf
adc
das
fimuls
dec
addb
fsub
aam
adc
dec
mov
incl
fwait
aam
leave
and
pop
fs
sub
mov
add
jns
out
cli
jns
cmp
in
push
rclb
repz
lret
repz
adc
call
mov
cli
ja
std
mov
dec
mov
fwait
leave
daa
and
sbb
inc
or
jecxz
cs
enter
sub
cmp
bound
and
jp
mov
lcall
filds
sbb
mov
dec
or
inc
xor
mov
pushl
subl
fnstcw
rolb
xchg
dec
jp
push
cmp
jmp
push
test
cmpsl
sub
push
clc
or
jno
and
mov
loop
or
dec
sbb
xchg
push
push
jp
dec
xchg
pop
fnstenv
gs
fcompl
dec
lods
sbbl
lahf
in
inc
adc
dec
pop
cmp
xchg
mov
repnz
ljmp
jbe
mov
sahf
das
adc
pop
out
ja
fnstcw
cmpsl
adc
ljmp
movsl
add
sub
add
ja
div
outsl
and
int
adc
pushl
jp
xchg
sub
adc
cmp
xor
jmp
dec
jnp
adc
cli
xchg
sarb
add
mov
test
xlat
xchg
lods
push
jg
sbb
stos
and
scas
pop
mov
inc
jge
fs
nop
cmp
pushw
push
rcll
inc
sub
mov
lds
fsub
adc
call
push
push
push
add
mov
pop
outsb
cld
in
scas
es
or
dec
daa
adc
dec
mov
fdivr
jmp
lods
cmpl
test
sub
inc
arpl
mov
pop
clc
dec
cs
stos
cmp
sbb
add
push
mov
test
mov
add
mov
cmc
push
and
out
mov
imul
xor
std
jae
mov
stos
fcomi
nop
lahf
pop
stos
lret
xor
imul
jg
pop
test
adc
cs
lret
sti
dec
xor
movsb
pop
imul
ljmp
cmp
popf
add
lcall
sub
or
pop
cmp
sub
incl
aas
daa
pushl
and
pusha
xor
fiadds
dec
test
out
scas
loope
lea
pop
ljmp
jb
mov
adc
movsb
call
lcall
call
jecxz
jge
push
imul
int
push
inc
int3
dec
xorb
decl
and
movsl
lret
fninit
stos
dec
push
test
jg
xchg
push
jecxz
jmp
mov
jmp
xor
js
adcl
roll
rol
xlat
lahf
call
inc
lods
mov
lcall
xor
xor
negl
insb
and
out
fwait
je
push
dec
lcall
hlt
aad
pop
neg
push
outsb
adc
lret
add
in
shr
call
xchg
lret
ret
and
sub
lods
xor
mov
sub
fstpl
mov
xor
inc
and
notl
push
stc
sbb
call
pop
mov
ds
cmp
lea
mov
xor
shr
lahf
fsubr
cwtl
test
pushl
jmp
subl
adc
jnp
push
arpl
jg
inc
cli
decl
and
xchg
pop
into
push
sbb
sub
sbb
push
out
mov
mov
sbb
loopne
mov
push
or
fistl
arpl
xor
xchg
incl
fdivp
je
cmc
mov
cmp
ret
repnz
mov
add
xchg
mov
cmc
dec
icebp
push
call
push
pusha
mov
dec
popa
addr16
adc
sub
jp
fsubs
xor
lods
mov
call
jmp
sub
sub
mov
clc
mov
mov
jg
cmpsb
mov
dec
cmpsl
mov
jnp
scas
enter
sar
mov
arpl
ficoml
jg
call
dec
xor
xchg
xor
rcll
sbb
jbe
lahf
int
sti
sarb
and
mov
pusha
inc
jo
jae
insb
js
outsl
push
sub
cmp
lahf
lods
call
mov
cmc
jg
call
ljmp
xchg
lods
mov
ss
mov
ljmp
cld
or
xchg
repz
cmpsl
ljmp
add
fisttpl
mov
dec
push
add
jmp
mov
ljmp
mov
adc
cmp
mov
push
mull
pushf
test
jae
jg
lcall
inc
rcll
sahf
jl
mov
mov
pusha
hlt
mov
enter
ret
filds
dec
add
jg
nop
jb
push
adc
xchg
adc
xchg
scas
cwtl
mov
sub
arpl
sub
decl
jae
mov
notb
outsl
lds
add
cltd
out
xor
mov
mov
mov
sub
mov
fimuls
mov
cli
mov
add
xchg
cmp
in
adc
adc
lret
fwait
dec
fwait
stc
shl
ss
dec
mov
or
scas
outsb
outsl
and
incl
hlt
adc
xor
popa
outsb
fisttps
outsb
js
sbb
bound
jmp
jg
cmp
clc
sub
pop
int3
jnp
push
mov
insb
andl
dec
jbe
mov
ljmp
stos
ret
dec
jge
bound
data16
pop
jno
sbb
aas
rcl
lcall
dec
sbb
dec
mov
mov
aam
lods
cmp
sub
jg
out
dec
ds
imul
pop
add
xchg
xorl
xchg
test
or
filds
pop
int3
fwait
cmp
stc
shll
clc
jg
scas
iret
cltd
xor
scas
and
idivl
sub
outsb
int
xchg
mov
shr
sub
ljmp
cli
mov
bound
in
cmp
pop
mov
or
call
shr
pop
or
jecxz
ret
int3
push
aam
imulb
shl
lds
mov
decl
jmp
cld
sbb
pop
push
int3
test
fwait
and
add
xchg
sti
mov
jmp
pop
testb
or
mov
pop
mov
mov
jmp
jg
ljmp
dec
inc
cld
into
enter
lock
mov
or
mov
incl
cmp
mov
cltd
fsubl
pop
fwait
xchg
lock
jg
xor
sbbb
fadds
dec
or
ret
jmp
xchg
decl
pop
lret
add
cmp
push
into
mov
clc
jle
idivb
sub
sub
lcall
sahf
dec
or
pop
stos
lahf
lds
insb
jb
mov
in
loopne
add
adcb
and
add
xchg
aas
test
mov
iret
jg
sub
lock
cmc
test
enter
jecxz
shrl
call
les
lock
andl
fstpt
and
incl
incl
jo
inc
pop
dec
mov
pop
cmpsl
test
fs
movsl
push
jbe
test
incl
hlt
sbb
sbb
movl
mov
sarb
xor
ljmp
outsl
xchg
test
js
nop
test
loopne
jb
in
jle
sbb
xor
inc
shrl
push
mov
mov
subl
sub
movsb
pop
aas
sub
das
outsb
mov
incl
cli
cmc
add
rcrb
inc
cmp
ret
xchg
scas
imul
insb
pop
xchg
sub
mov
call
call
lds
lods
jl
sub
cmc
addl
cli
dec
lahf
adc
xor
jle
mov
mov
sbb
popf
fs
shll
cmp
fcmovnu
in
xor
pop
pop
cld
jmp
aaa
or
cltd
sub
adc
loop
cld
int3
add
or
inc
add
fs
cmp
add
in
adcb
incl
dec
mov
orb
push
outsb
cmpsl
bound
jbe
fdivrs
iret
jbe
jmp
ljmp
or
and
ljmp
test
dec
pop
out
cld
ficomps
std
or
adcl
mov
hlt
adc
shrb
jg
lods
addr16
mov
in
sbb
mov
xlat
sbb
ljmp
pop
inc
into
adc
mov
hlt
nop
sub
jge
jmp
sbb
je
mov
mov
mov
xchg
fisubl
out
push
int
daa
or
imul
dec
xorl
cltd
ret
or
pop
xchg
lcall
out
daa
loopne
and
cmpsb
insl
fimull
mov
hlt
adc
xor
je
call
in
mov
add
testl
xor
cmp
leave
push
jmp
cltd
mov
jno
pop
xchg
dec
in
jo
dec
aam
fnsave
cmpsb
lret
push
das
out
push
xchg
ljmp
in
add
je
leave
xor
xor
std
cmc
stc
mov
adc
push
sti
push
cld
and
pop
push
ficoms
dec
mov
aaa
or
and
dec
fwait
call
add
sahf
je
xchg
insb
insl
cmpb
pop
icebp
jg
mov
imul
popa
clc
xlat
add
in
test
clc
stc
jle
pop
std
add
jmp
add
cmp
mov
jbe
movsb
movsb
or
xlat
call
inc
push
and
cmpsl
mov
stc
sub
jmp
xchg
mov
sub
pushl
jge
pop
fisttpl
inc
icebp
cmc
push
leave
ja
js
mov
push
repz
clc
cmpsb
dec
imul
rcll
jo
je
daa
imul
push
inc
sub
jns
das
jnp
mov
jecxz
fstpl
sbb
call
xchg
pop
mov
sbb
fsubr
and
pcmpgtb
scas
clc
jg
dec
mov
popa
cmp
pusha
cld
adc
pmullw
pushf
cmp
idiv
call
jp
repz
ja
lahf
pop
outsl
or
ja
or
push
ret
pop
pop
sub
int3
push
lret
xor
stc
push
and
inc
call
jb
jl
jl
inc
lret
ja
xor
leave
out
cmc
lcall
int3
pop
shll
dec
sahf
mov
stc
or
cwtl
mov
decl
out
jb
and
push
andb
cli
incl
outsb
jnp
into
popf
sbb
fwait
gs
and
imul
dec
mov
dec
fcomip
outsl
mov
test
inc
cwtl
fnsave
jg,pt
mov
scas
xlat
xchg
cmc
repz
xchg
insb
sbb
cld
inc
lahf
add
pop
mov
mov
cmp
mov
js
notl
jbe
lret
aaa
pop
mov
pushl
or
aaa
aas
std
xor
mov
jno
mov
mov
and
cwtl
ljmp
daa
sbb
add
lcall
int3
aaa
mov
scas
in
stos
or
jmp
cmp
jnp
dec
leave
push
jmp
mov
push
ds
test
pop
addr16
ret
mov
cmc
jg
pushl
ljmp
sbb
mov
xchg
imul
mov
hlt
inc
pop
push
mov
and
inc
jo
mov
lcall
sub
cmp
es
aad
jns
jge
fbstp
enter
lods
lret
lret
xchg
lret
or
mov
lea
gs
sub
xchg
lods
ja
lcall
jbe
mov
mov
fstps
mov
jmp
mov
lcall
jno
push
fimuls
lds
cmp
and
pushl
sar
idivl
inc
sub
mov
in
xor
inc
in
into
decl
cmpl
add
cwtl
add
es
dec
xchg
dec
jecxz
fiaddl
decl
in
cmp
test
cmpsb
loope
cmpsb
ds
rorb
andl
mov
cli
lcall
xor
outsl
arpl
lea
std
xchg
mov
adc
out
xchg
movsb
cmp
out
xor
jb
xor
jb
inc
dec
mov
ja
mov
jle
outsl
jg
or
cmp
incl
ds
inc
icebp
push
stos
pop
mov
xchg
movsb
xor
pop
scas
or
clc
aaa
leave
mov
inc
push
ss
cmpl
fdivrl
mov
sub
cmc
in
in
ljmp
sub
mov
sub
ja
mov
js
sar
out
clc
sbb
scas
push
cmp
jecxz
fucom
mov
pop
xor
incb
lcall
hlt
bswap
adcb
jmp
fisttpll
cmp
fucomip
xchg
mov
jle
scas
lret
sub
adc
scas
or
out
jl
push
add
lret
ficoml
mov
lea
dec
cmp
mov
frstor
inc
inc
pop
lods
inc
lods
push
pop
fisttps
xchg
pop
pop
pop
xor
dec
inc
sbb
lcall
add
mov
scas
mov
push
push
repz
cmp
jnp
shl
fistl
ret
incl
xor
ret
jl
add
mov
adc
shll
je
hlt
xor
or
mov
les
xor
xor
cld
pushf
push
xor
jae
into
sbb
inc
test
cld
mov
test
add
xchg
and
inc
mov
fbstp
rol
jne
mov
rolb
mov
in
jp
xlat
add
mov
pushl
testb
mov
js
popa
and
adc
aas
out
loope
jo
sbb
cld
decl
adc
xor
mov
jb
jg
mov
pop
fdivs
loope
or
xchg
jl
jge
loopne
or
loop
sti
fisubl
movsl
lcall
xor
sbb
dec
inc
cld
xchg
sbb
dec
xchg
outsb
jg
test
nop
mov
mov
sete
sti
ljmp
outsl
xlat
sub
jns
sub
or
call
loope
pop
sti
sub
aas
mov
xchg
and
outsb
out
lcall
cmpsb
jp
push
xor
call
in
out
aas
jecxz
cmp
call
jb
sub
push
fists
stc
ss
out
cs
cmpsb
sub
add
decl
outsl
int3
incl
imul
xchg
jne
sbb
sarl
test
call
iret
mov
repz
mov
movsb
and
mov
pop
scas
insl
lcall
mov
addr16
push
pop
cmp
pushf
pop
pop
push
cld
and
mov
scas
inc
push
mov
xchg
or
cld
lcall
scas
test
cli
fdiv
cli
and
inc
sub
lea
rorb
mov
push
jae
push
inc
daa
out
js
sub
jmp
add
bound
je
cli
in
and
arpl
mov
pop
dec
jno
jg
fisubl
inc
stc
fisttps
cli
push
adc
adc
decl
rcr
mov
outsl
fidivs
xor
dec
push
jp
lds
xor
sbb
sbb
cmp
cld
cmp
jecxz
mov
ljmp
pop
in
nop
and
jl
xchg
std
jg
xchg
std
insb
mov
and
insl
add
lcall
decl
adc
push
sub
mov
je
mov
mov
notl
mov
outsl
clc
call
cmp
mov
jmp
inc
cmp
xchg
xor
jno
out
jp
inc
aad
push
jle
cmp
mov
sub
js
jbe
jg
incl
push
adcb
sub
sar
fistps
notl
cwtl
and
movl
pop
or
lods
push
inc
lcall
sahf
xchg
xchg
leave
icebp
sbb
push
xorl
incl
jo
pop
mov
ss
push
daa
inc
sub
out
shrl
pop
inc
aaa
in
mov
jecxz
ss
sub
call
dec
add
cmovl
xor
sbb
inc
mov
and
pusha
mov
dec
shlb
daa
inc
aaa
push
and
je
xchg
lds
jb
sub
lcall
lods
shrb
xchg
lcall
out
data16
ss
movsl
ret
or
add
sbb
call
imul
sti
sbb
mov
scas
ficompl
js
movsl
xchg
bound
cmp
repz
lcall
fisttps
aam
int
adc
pop
shrb
mov
mov
decl
out
test
mov
mov
mov
sbb
mov
outsb
xlat
das
test
call
mov
iret
movsl
or
push
fnstenv
addr16
in
test
sub
mov
loop
mov
fwait
lcall
or
jg
jge
adc
or
jnp
mov
scas
clc
mov
popf
xchg
mov
decl
mov
in
push
or
xorb
imul
leave
mov
das
sub
fdivr
loopne
adc
dec
and
add
aad
jle
add
add
add
add
add
or
pop
pop
push
or
or
or
or
or
fistl
adc
adc
adc
push
adc
jo
mov
movhps
push
adc
adc
adc
add
data16
mov
or
rolb
sti
dec
popa
add
add
adc
add
les
add
push
xor
js
adc
imul
lcall
add
add
push
adc
pop
and
xor
pop
or
inc
mov
adc
xor
cmpb
xchg
enter
xor
mov
pop
or
shrb
mov
xchg
mov
ret
or
or
xor
sbb
shlb
scas
pushf
into
pushf
add
jmp
mov
pop
scas
cmp
adc
fwait
incl
lods
push
adc
pop
popa
jno
and
adc
xchg
mov
or
xor
adc
loope
icebp
mov
add
pop
mov
xorb
scas
add
inc
lock
or
js
ljmp
movsb
inc
cli
sub
rcr
push
ret
xchg
and
sub
lods
out
mov
std
cmpsb
xor
aas
imul
fdivrl
add
mov
mov
loopne
mov
inc
inc
push
lock
nop
mov
cmp
adc
cmp
xor
and
jmp
inc
cmc
iret
xchg
inc
jl
repnz
dec
or
adc
pop
inc
inc
xchg
scas
or
xchg
pusha
add
std
or
mov
cld
cli
and
mov
fiaddl
jg
fnstsw
ficompl
cmpsl
xor
mov
dec
fdiv
incl
mov
movsl
jecxz
pop
mov
pop
fsubr
push
stc
or
xchg
jg
or
insb
sub
jmp
out
or
push
push
xchg
add
repnz
inc
lock
scas
jle
fcmovnu
clc
cmp
fisubrl
in
mov
orb
int3
lcall
fs
in
dec
scas
mov
pop
pop
mov
popl
movb
xchg
sbb
ljmp
sbb
lods
scas
xchg
test
aam
and
sbb
sarl
xor
gs
roll
fwait
movsb
jmp
push
lret
push
out
in
and
ss
repz
icebp
mov
pop
lock
std
or
pop
mov
daa
test
aaa
dec
decl
push
out
outsl
loope
loope
rorl
mov
int
arpl
push
out
or
cld
lock
push
sahf
pop
clc
sti
jg
jno
lock
jg
inc
idiv
pushl
jg
xor
hlt
and
xchg
jmp
sbb
decl
xchg
add
pop
jb
mov
mov
xor
mov
int
inc
fwait
sbbb
mov
dec
jp
push
gs
dec
rcrl
stos
hlt
push
add
stc
loope
mov
sar
push
mov
fildl
icebp
testb
mov
lcall
pop
xor
jns
mov
in
repnz
jno
pop
sub
jg
scas
cld
or
push
decl
sbb
cld
andb
outsl
sbb
jb
adc
push
push
movsl
lods
jp
testb
sbb
into
fcomps
sbb
sbbl
outsl
fcmovne
andl
aas
loopne
cli
adc
aaa
xchg
in
add
inc
sahf
fisubs
or
dec
fisttpll
out
aas
std
cli
push
push
ljmp
outsb
push
idivl
cmp
sub
inc
scas
inc
mov
jg
je,pn
sub
jg
imul
mov
mov
inc
es
gs
jns
enter
pushl
cmp
pushf
push
scas
xlat
sub
cmp
sti
punpckhbw
cmpsb
orb
mov
or
cmp
cmp
js
jmp
inc
push
sub
xchg
pop
clc
pop
hlt
sub
movsb
add
fildl
add
lea
jg
gs
std
xorb
jg
add
outsl
adc
ret
das
pop
pop
pop
shlb
out
sar
scas
cli
cmp
lock
or
sarb
std
pop
les
cli
mov
mov
mov
arpl
stos
mov
and
insl
add
leave
push
scas
loop
jge
push
shrl
jmp
mov
push
mov
adc
and
sbb
xchg
jo
and
out
test
jl
imul
rcr
lock
sbb
cmpsl
sahf
imul
fcmovnu
rorl
ljmp
nop
enter
add
cld
call
js
cmp
scas
lods
hlt
cmp
cmp
fistl
mov
adc
push
movsb
xchg
or
mov
stos
dec
lods
xor
outsl
pop
cld
ds
cmpsl
scas
popa
in
pop
or
mov
xlat
pushf
cld
aas
clc
jge
jnp
std
sbb
outsb
mov
sbb
jecxz
inc
adc
mov
adc
adc
call
inc
pusha
imul
add
mov
cmp
xchg
mov
xchg
ftst
jbe
xchg
and
mov
shrb
shlb
out
aas
stc
add
out
gs
jno
mov
call
adc
pop
cld
addl
adc
and
ds
cmp
fmull
enter
jecxz
scas
jg
jg
sub
in
pop
mov
sub
mov
dec
incb
outsb
mov
aas
mov
or
cld
inc
or
in
pop
cmpsb
push
pop
jg
add
jg
mov
outsb
jg
aad
test
mov
mov
iret
cmp
jg
push
jbe
push
sbb
stos
icebp
pop
incb
jno
insl
lcall
sub
push
inc
jecxz
sbb
sarl
adc
sbbl
sar
adc
lahf
xor
ds
and
cmp
dec
push
js
mov
aas
mov
fsubrl
lock
incl
ss
and
clc
xchg
inc
rcrl
sbb
das
mov
push
and
mov
adc
inc
aas
push
xchg
jg
rcrl
rolb
pop
inc
jb
fistpl
adc
call
jg
jge
pop
pop
nop
mov
inc
sti
arpl
daa
std
or
dec
ds
mov
inc
cmpsb
popf
push
loop
sbb
or
imul
xor
dec
fsub
pushl
fsubr
fistps
lds
fidivrl
jg
stos
clc
mov
cmp
out
fidivrl
xor
lahf
les
pop
stc
sbb
sbb
cld
addl
sbb
loop
in
stc
mov
lahf
outsl
int3
push
sbb
pop
lods
pop
test
bound
pop
outsl
xchg
incl
loop
jge
popa
push
test
jbe
outsb
hlt
sti
fsubs
hlt
fcomip
shl
dec
jp,pn
adc
lahf
mov
or
out
lcall
mov
shl
cld
mov
adc
stos
decl
loopne
shrb
rcl
jg
adc
xor
pop
rcr
cmp
decl
sub
jmp
lea
jp
jnp
jecxz
adc
incl
ds
pop
adc
imul
or
inc
pop
xor
rorb
ljmp
jmp
xor
subb
iret
mov
lock
inc
cmpsl
enter
mov
into
ret
incl
insb
or
and
xchg
fdivp
mov
insb
test
aas
repz
mov
lock
in
jmp
stc
out
mov
clc
push
std
mov
jl
icebp
or
pushl
mov
xchg
pmullw
mov
push
mov
fsubrp
dec
sahf
enter
fcmovb
mov
clc
incl
faddl
xchg
lcall
jne
jge
pop
cld
or
dec
ss
lods
movsb
xchg
mov
add
mov
jl
and
call
cmpsl
lret
aaa
push
std
cltd
pop
in
cmp
jmp
mov
adc
lock
jmp
hlt
dec
mov
xlat
inc
mov
aas
mov
jg
mov
sub
addr16
incl
cld
daa
jp
std
adc
cltd
or
mov
mov
ja
nop
cmp
das
incb
lock
pop
pop
div
cld
idivl
fs
sbb
stc
lahf
loope
jae
jmp
sub
je
jge
paddsw
mov
add
out
icebp
mov
loope
mov
mov
popf
sti
mov
fbstp
push
xor
es
push
or
jge
out
adc
insb
cmpsb
cmp
call
xor
decb
mov
das
push
adc
mov
and
call
mov
iret
nop
inc
xchg
mov
cmp
int
add
push
pop
aaa
std
mov
dec
dec
inc
sbb
mov
mov
aas
icebp
ret
sbb
push
jnp
int
jmp
sbb
adc
shrb
mov
stos
mov
loope
loope
mov
lahf
jp
adc
xlat
push
fbstp
xchg
fldenv
iret
imul
push
cmp
repz
jecxz
pop
gs
out
push
dec
into
sarl
pop
out
jg
jno
ret
and
cmp
push
sbb
iret
push
dec
jge
pop
clc
call
sbb
mov
ds
inc
mov
in
sbb
xchg
imul
add
push
icebp
jmp
outsl
jmp
std
mov
daa
jmp
faddl
add
lock
mov
test
bound
add
push
imul
pop
stc
push
dec
out
fstpt
mov
enter
pop
lds
add
cmc
out
daa
icebp
push
lahf
sti
inc
pop
imul
push
xchg
cmpsb
hlt
ljmp
xor
mov
xchg
mov
fildll
fsubrl
dec
add
sub
inc
or
add
push
sti
pop
inc
sub
mov
push
cmp
adc
mov
int3
pop
iret
and
push
pusha
cmpsl
push
add
addb
in
out
incl
add
add
inc
filds
cs
dec
pop
and
push
push
scas
insb
push
inc
or
idivl
add
add
jb
lret
fs
stos
addb
inc
inc
jae
pop
jle
or
adc
je
aaa
ja
fstl
jo
imul
neg
mov
ds
add
adc
push
inc
adcb
adc
shlb
out
rorb
sbb
lahf
and
inc
jb
popf
leave
adc
insb
push
jg
inc
xorb
subb
push
ret
mov
std
out
and
inc
imul
daa
sbb
pop
cmp
push
dec
gs
pop
clc
ss
mov
sub
popa
jo
push
or
daa
mov
rclb
outsb
sbb
cwtl
mov
or
dec
dec
jne
push
xor
sarl
pop
inc
scas
and
scas
ret
aaa
push
popa
es
push
inc
adc
orl
jns
call
incb
popa
jb
add
jecxz
ret
ficoml
dec
ljmp
push
add
test
cmpsl
jo
outsb
cmp
xor
jo
or
add
inc
jl
loopne
sub
fwait
cmp
outsb
imul
insb
stos
sub
nop
fisttpll
sub
ficomps
outsb
flds
sbb
ret
dec
inc
xor
jae
cli
arpl
les
inc
cmp
push
fisubs
fwait
rolb
mov
pop
ja
cld
push
ds
insb
jne
addl
popa
fs
andb
push
xor
or
inc
sbb
fcmovu
sub
fildl
inc
iret
inc
push
pop
cs
mov
pop
sub
sarl
jne
addr16
xchg
jo
subl
xchg
sub
jb
subl
cmp
mov
inc
jae
adc
adc
mov
and
ret
inc
jecxz
lock
test
std
dec
cmp
cmp
jae
pop
int
int3
adc
popa
pop
jno
mov
inc
flds
movsl
rclb
push
jo
packuswb
imul
pop
mov
inc
dec
sbb
stos
pop
insl
adc
push
add
leave
ljmp
arpl
fiaddl
mov
imul
mov
dec
ja
inc
or
add
adc
pusha
popl
mul
inc
or
outsl
popw
push
xchg
sub
shlb
sbb
inc
insb
cmp
jmp
popa
and
das
push
mov
dec
jae
pushf
inc
or
add
stos
pop
dec
inc
dec
or
push
into
ret
mov
mov
or
dec
jb
gs
test
push
jecxz
repz
xchg
lods
aaa
mov
je
ja
mov
inc
inc
jg
hlt
inc
or
pop
push
cmp
push
je
mov
cmp
or
arpl
es
bound
fildl
jg
sbb
test
xchg
fcoms
vpunpcklwd
rcl
or
jle
mov
pop
test
mov
xor
fmul
dec
push
pop
clc
sbb
gs
aad
nop
cmp
sbb
pop
stos
aad
inc
lock
xchg
inc
je
add
jp
push
inc
inc
out
sti
shrl
test
push
inc
sbb
lods
sub
mov
sub
shlb
dec
jnp
sbb
out
shl
or
clc
fidivrl
mov
add
insb
push
adc
jns
inc
xor
outsl
icebp
stos
or
addl
and
in
add
push
xchg
or
jnp,pn
and
inc
mov
push
cmp
xlat
adc
or
or
stc
pushf
push
jne
jo
push
inc
inc
fmuls
push
add
fists
or
stos
gs
jae
xor
mov
jo
sub
popa
add
test
cmp
jnp
push
inc
sbb
test
mov
aaa
sub
mov
cmp
dec
addb
push
outsl
shrb
add
add
sbb
stos
pop
pop
or
dec
jbe
sub
sarb
and
xor
dec
gs
jne
cltd
ror
stos
xchg
or
mov
sub
mov
dec
sub
fs
pop
push
das
push
loop
inc
and
or
mov
sbb
enter
jmp
pop
pop
pusha
mov
popa
push
add
mov
fcomps
or
jge
push
popa
sbb
negl
outsb
adc
dec
shr
adc
popa
mov
jno
cmp
dec
ret
pusha
and
xchg
in
sub
dec
cli
pop
inc
cmc
pop
ja
je
and
push
adc
xor
jb
and
ret
jl
inc
in
xor
jo
inc
inc
and
arpl
insl
mov
inc
imul
dec
push
xor
fcomi
test
pop
mov
inc
insb
notl
jle
xor
mov
call
stos
mov
stc
xor
shld
jno
aad
xor
fcoms
aas
ljmp
js
inc
dec
loopne
inc
sahf
push
and
shlb
mov
testl
pop
and
xchg
movsl
push
movsb
sti
push
or
push
push
xor
push
mov
xchg
cmp
xor
shlb
jne
inc
lock
lock
jo
inc
push
push
adc
push
pop
ja
pop
mov
jns
je
sub
outsb
dec
adc
jnp
ss
rorb
cld
insl
lcall
dec
add
mov
mov
imul
add
pop
shll
adc
mov
fisubrl
inc
push
addb
pop
pushf
dec
inc
rcll
in
inc
sar
inc
or
pushf
das
inc
jb
push
js
shlb
out
inc
xchg
shrb
bound
mov
test
dec
roll
mulb
cmc
das
and
inc
jb
push
jb
inc
jae
pop
pop
inc
sahf
inc
leave
inc
rol
add
imul
iret
push
repz
jo
fs
push
sbb
add
rclb
push
icebp
mov
mov
adc
imul
push
nop
jo
mov
dec
sbb
mov
test
add
or
and
mov
in
mov
push
adc
mov
sbb
aad
adc
sahf
enter
outsl
test
push
or
or
sub
fisttps
inc
pop
pop
xchg
cs
mov
sub
rcr
push
jmp
sbb
and
jb
cmp
je
fdivl
hlt
xchg
push
ss
add
push
pop
inc
mov
xchg
add
rcl
push
sbb
ret
lret
mov
add
and
dec
mov
xor
mov
or
shrl
push
mov
fs
dec
sub
cwtl
xor
adc
jne
push
cs
subb
fcompl
add
push
insb
fsubl
mov
enter
mov
push
xchg
push
sub
lods
add
mov
pop
and
sbb
push
test
mov
and
arpl
lret
inc
lds
test
inc
and
aam
adc
dec
or
push
rcl
fcomi
inc
pop
xchg
nop
scas
push
push
sbb
lea
test
adc
out
mov
mov
add
jno
ljmp
pop
orl
sbb
cmp
adc
bound
jnp
push
lods
cmpsl
fs
int3
lret
xor
inc
add
cmpsl
js
js
int
jp
stos
cmp
mov
outsb
sub
outsl
and
aam
sbb
push
lods
or
ret
push
cmpsl
call
add
and
add
andl
push
xchg
cld
add
in
or
cmovno
lcall
popa
or
jnp
push
imul
jbe
dec
dec
enter
ljmp
subl
xchg
dec
push
movsl
cmp
sbb
xor
out
int3
ror
jno
add
data16
xchg
add
jmp
mov
negl
inc
mov
adc
icebp
pusha
push
mov
inc
mov
add
pop
jmp
and
add
pop
inc
or
fmul
iret
xchg
jle
aas
dec
add
add
mov
pop
lret
out
testl
pop
cmp
adcb
or
repnz
inc
repz
loope
scas
pusha
push
add
xchg
rcrl
test
mov
dec
loope
sub
imul
add
sbb
andl
jb,pn
popa
adc
sbb
idivl
bound
push
rclb
inc
cs
adc
cmp
out
rcr
rcrb
pusha
dec
xchg
mov
push
lahf
add
es
out
roll
and
ret
add
orb
add
add
add
inc
add
call
or
pop
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
xor
inc
add
insl
inc
add
add
