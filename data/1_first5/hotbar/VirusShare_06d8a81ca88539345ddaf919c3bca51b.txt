divb
in
mov
mov
mov
inc
add
add
ror
int
in
jg
shlb
or
and
push
je
and
out
je
push
call
push
add
sub
push
ret
in
divl
jne
mov
or
call
xchg
push
push
sbb
stc
out
aas
mov
test
je
cmp
movl
cmp
jae
dec
movzwl
lea
jne
sbb
xor
jmp
and
neg
fidivrs
and
pop
pop
mov
or
call
push
push
sarl
stc
shrl
jp
lock
jge
add
pop
push
push
push
push
xor
mov
mov
movsl
std
in
pop
scas
cmp
inc
cld
add
jmp
test
jne
pushf
or
push
rcrb
sahf
push
mov
push
xor
fidivl
fcoms
cmp
adc
mov
ret
mov
jmp
jmp
pushl
jbe
adc
lea
or
lock
dec
test
jg
mov
or
add
cs
add
ret
std
imul
xchg
add
mov
inc
push
adc
add
inc
pop
push
fcmovnb
les
mov
push
mov
xor
pop
mov
mov
mov
call
pushl
fwait
mov
mov
or
data16
sbbl
sarl
push
lahf
add
xchg
notl
andl
mov
push
sub
mov
hlt
cs
addl
add
sbb
lock
fcomi
sub
dec
shlb
in
or
mov
mov
xor
hlt
or
pop
cmpsl
push
repnz
in
cmpsb
cmp
lea
fwait
popa
xor
push
call
sub
add
out
push
sbb
push
insl
loopne
xor
test
mov
lea
mov
adc
daa
mov
push
dec
or
add
iret
jbe
ret
ja
pop
xchg
sbb
fdivrs
xchg
sub
ret
test
push
xchg
mov
call
addb
das
xor
push
dec
and
add
dec
inc
pop
xlat
push
sbb
test
or
sbb
fildl
scas
bound
sahf
add
stos
lcall
push
fst
popf
jp
fdivrs
fs
mov
jge
jl
add
pop
add
mov
jge
push
push
sub
jnp
push
dec
pop
push
insl
sbb
add
loopne
lds
iret
bound
das
pop
mov
pop
pop
ljmp
mov
mov
cmp
or
jge
lcall
add
mov
mov
xor
mov
inc
sub
pop
ret
arpl
sarl
dec
lock
sar
pop
jo
popf
pop
inc
sub
inc
clc
sub
enter
inc
add
in
orb
jmp
fs
pop
or
movsl
push
xorl
sbb
in
incl
adc
jg
mov
adc
add
or
dec
cmp
add
cs
movsl
add
jmp
enter
push
jmp
dec
sub
push
mov
sar
imul
cld
aad
jge
ja
adc
pop
dec
clc
add
push
fimull
ret
pop
in
inc
andl
sahf
leave
les
pushf
add
loop
lds
js
mov
mov
cmpl
or
push
fucomp
sub
cmp
jge
dec
cmp
add
or
add
pop
cltd
sub
shr
enter
mov
or
inc
ret
cwtl
and
push
test
cmp
jl
cmp
jne
mov
incb
add
xor
jbe
mov
adcl
rolb
inc
add
lea
add
adc
lea
xorl
xor
insl
int3
pop
hlt
into
mov
aam
sbb
jnp
sub
push
cmp
cmp
cmpsl
mov
pop
adc
cld
fsubrs
mov
sbb
jmp
lock
or
test
jle
cmp
mov
inc
xor
rcrl
ret
or
inc
icebp
and
sbbl
push
push
xchg
jno
sbb
aas
adc
jle
jmp
loope
mov
inc
sbb
inc
push
pop
sub
xchg
or
cli
insb
andl
fucom
fadds
ret
and
adcb
inc
xor
and
inc
enter
push
inc
push
orb
xchg
mov
push
xor
push
push
hlt
inc
push
sbb
out
cmp
jle
mov
loop
or
out
add
push
mov
mov
or
and
cmp
sub
pop
lret
or
addr16
add
jb,pt
pop
add
xchg
and
enter
ret
lea
mov
cmp
je
cmp
aaa
cmp
clc
push
push
push
jg
xor
rcrb
ja
jmp
xchg
rolb
call
insb
or
cmpsb
imul
cld
pop
cmpsb
out
cmp
jo
inc
sub
adc
add
out
ret
aad
aaa
fcompl
loopne
loope
mov
or
pop
lods
cli
or
or
cmp
push
mov
int
in
decl
jne
push
push
push
push
andb
js
push
mov
mov
or
push
lods
push
sahf
pusha
pop
pop
push
imulb
sarb
jne
cmp
in
mov
and
add
nop
adc
into
dec
jne
scas
cld
stc
out
mov
adc
mov
out
fisttps
lods
fstpt
stc
jae
mov
sub
mov
xlat
cmpsb
std
jns
jnp
mov
clc
cwtl
push
jge
in
adc
sbb
lret
in
or
and
dec
lahf
in
dec
out
push
icebp
cmpsb
ffreep
ja
stos
or
push
mov
lock
pop
and
jl
movl
or
add
push
lea
dec
jnp
and
push
xor
js
pop
xchg
insb
sahf
dec
push
out
cmp
add
imul
push
add
inc
ret
imul
dec
inc
or
clc
push
dec
dec
xchg
push
aas
int3
popf
jns
cli
out
lea
push
add
push
mov
leave
loope
loope
sub
mov
loop
push
mov
mov
loopne
scas
push
bound
mov
in
add
push
jmp
cmp
loope
aas
add
pusha
cmp
je
xorl
mov
or
jne
imul
cmpsb
mov
pop
mov
cltd
leave
fadds
imul
insl
push
jb
cmp
test
ficomps
and
pop
ds
loope
test
cmpsb
in
out
aam
ja
push
pop
dec
or
movsl
mov
jle
pop
shll
mov
jbe
mov
cmp
adc
enter
jge
xor
iret
mov
or
inc
sbb
in
fmull
movsbl
sub
add
or
sub
mov
push
ret
push
adc
jle
mov
mov
push
imul
jne
add
sbb
int
lock
push
xchg
and
sbb
mov
jl
sub
push
int3
les
xor
aad
add
lcall
adc
sub
adc
mov
inc
aaa
push
lock
inc
lods
push
inc
and
mov
xlat
sbb
je
dec
je
push
adc
aam
fsubrp
or
adc
inc
shll
mov
lret
or
nop
pop
fs
sahf
adc
push
mov
xor
aad
call
mov
push
mov
sub
push
cmp
mov
xor
fcomps
mov
inc
and
mov
aam
and
mov
cmp
pop
cmc
andl
sbb
test
xchg
mov
test
mov
stos
jae
out
test
mov
ss
roll
or
scas
aad
mov
add
jnp
cmovge
shr
sbb
lret
push
push
movsl
or
or
movzbl
js
and
adc
popa
add
retw
push
in
dec
call
jl
pushl
ljmp
shrb
andb
testl
test
lea
pop
fldcw
mov
notb
add
xchg
pop
movsl
push
jle
push
fcomps
popf
sub
adcl
clc
repnz
sub
adc
cwtl
mov
sbb
or
out
add
sbb
adc
inc
shll
pop
sbb
and
sub
insl
sbbl
jl
ret
pop
loopne
mov
adc
test
out
add
adc
mov
pandn
mov
sub
or
fnstsw
mov
dec
jle
mov
push
pop
mov
nop
cmp
les
in
repnz
or
into
shl
push
or
mov
je
inc
mov
xor
scas
mov
or
push
xor
mov
ficomps
sub
add
inc
repnz
push
adc
or
jmp
push
xchg
fdivrs
out
cwtl
dec
adc
adc
and
cmp
adc
lahf
xor
lea
adc
negb
xlat
push
push
or
mov
xor
dec
sub
dec
bnd
xchg
inc
subl
or
xchg
xor
xchg
sub
pop
sbb
add
pop
mov
in
or
out
scas
mov
ljmp
push
and
out
mov
xor
mov
push
cwtl
sarl
cmp
jne
push
pop
movsl
push
cmp
or
inc
pop
or
in
or
lea
mov
in
inc
loopne
jp
add
in
mov
addl
push
pop
imul
pushl
imul
inc
adc
loope
pop
orl
xchg
xor
jo
cmp
les
fstl
sbb
inc
pop
pop
add
cmp
xchg
pushf
cmp
xor
mov
jnp
aam
jge
decl
inc
movb
je
out
out
add
in
xchg
lock
lock
mov
faddp
add
aam
imul
cmpsl
mov
je
mov
cmpl
icebp
loopne
adc
adc
xchg
in
push
and
push
loopne
mov
or
and
add
add
fldt
pop
sub
testb
int3
in
jnp
mov
and
test
add
icebp
push
arpl
xor
push
cmc
les
je
filds
jp
test
mov
pop
in
push
and
fistpl
fistpl
in
ffreep
jae
ret
je
push
out
and
mov
sahf
inc
and
mov
mov
mov
cwtl
cwtl
xchg
out
lret
lods
mov
mov
push
xor
mov
nop
xchg
lock
inc
pop
sub
nop
add
xchg
add
adc
lods
or
lods
lods
add
mov
mov
nop
sub
dec
pop
add
pop
adc
inc
jns
jecxz
outsl
mov
mov
mov
popf
popf
negb
adc
sub
cld
push
mov
lcall
outsl
stc
push
fcoml
dec
out
xor
out
sti
loopne
dec
imul
ss
pop
push
imul
fidivl
xchg
shlb
adc
enter
adc
movsb
leave
jae
pop
rclb
cmpsb
dec
rol
les
pushf
pushf
clc
cmpsb
in
in
pop
mov
xchg
sbb
leave
xchg
xchg
in
int3
leave
xchg
cmp
sbb
int3
fs
aaa
clc
arpl
ret
sbb
inc
sub
enter
fwait
fs
sahf
sbb
shrb
inc
xor
mov
cmp
les
in
mov
pop
test
dec
inc
mov
jle
data16
out
pop
pusha
xchg
and
mov
mov
cmp
dec
pop
mov
pop
pop
testl
cwtl
arpl
test
shrb
inc
inc
jo
pushf
push
sbb
insb
sub
xchg
out
sbb
shlb
jne
mov
loope
test
mov
imul
push
hlt
push
addb
sub
mov
push
xor
sbb
rolb
add
push
add
or
enter
lock
imul
pop
or
jle
inc
push
jl
insb
add
in
andb
pop
mov
nop
and
outsb
and
fisttpll
movsb
and
push
dec
punpckhwd
aaa
adc
dec
scas
je
sti
or
push
divl
test
clc
out
pop
test
sub
fs
shll
pop
sbb
and
insl
or
add
popa
cmpsb
xor
lret
xchg
mov
xchg
or
std
and
pushf
push
adc
adc
loope,pt
mov
mov
or
jl
or
lea
push
leave
aad
lock
or
push
jmp
push
fldenv
pop
jmp
adc
adc
jle
imul
test
scas
cmc
inc
or
adc
add
ror
sbb
sub
or
sbb
mov
push
push
sbb
daa
sbb
lea
or
or
xor
push
lock
mov
in
lret
adcl
fdivs
aaa
adc
test
adc
inc
adc
leave
orb
jno
shll
loope
add
sbb
repnz
into
adc
pushf
cmc
ss
adc
push
sbb
xchg
mov
push
cmpsl
add
add
cmc
gs
cmpb
rolb
fs
lret
insl
or
add
pop
push
lock
movsl
mov
mov
fistpl
jne
loopne
add
add
stc
shr
push
ds
push
sbb
push
in
push
dec
pop
push
out
cwtl
sar
mov
lret
adc
cmp
pop
add
push
sahf
les
rolb
and
nopl
xchg
je
stc
ret
push
scas
xor
testl
sbb
and
clc
add
scas
std
fisttps
add
rclb
cmp
or
pop
push
adc
xchg
mov
pushw
mov
inc
jb
sub
and
xchg
addb
mov
add
sbb
or
testl
push
push
call
mov
xorb
cld
adc
and
fstpt
sbb
push
test
hlt
je
push
push
enter
pop
ljmp
push
or
mov
movsl
lock
add
cld
int3
inc
sbb
clc
adc
std
mov
mov
jne
or
add
sahf
sub
dec
push
push
cmp
add
push
dec
add
and
mov
leave
adc
and
bound
adc
dec
xlat
and
pop
sub
pusha
jo
mov
and
scas
movsb
std
daa
cmp
mulb
sub
add
incb
xchg
in
js
push
cmp
and
sbb
fsubrs
int
icebp
aam
stc
scas
sub
pop
and
push
sub
push
ljmp
sub
push
test
pop
pusha
cwtl
xorl
xor
ret
test
movsb
ljmp
outsb
sti
in
or
stos
add
imul
xchg
inc
pop
add
sbb
cmp
fadds
rorb
rclb
lods
sub
and
aaa
sub
stos
mov
mov
aas
loope
leave
pop
mov
inc
sbb
xchg
inc
cmp
test
cmp
lret
push
test
cmp
outsl
xchg
ficomps
mov
test
add
jl
mov
or
sbb
mov
je
lock
push
mov
sti
lahf
mov
mov
mov
cmp
mov
push
add
rolb
loopne
sahf
xor
cmp
out
jmp
mov
ljmp
sub
mov
jg
stos
dec
mov
jo
pop
enter
enter
xchg
idivl
fadds
inc
das
daa
pop
dec
mov
cmp
insl
sbb
xor
xchg
mov
testb
inc
xchg
inc
xchg
addl
mov
xor
out
sbb
sub
cmp
inc
cmp
gs
and
testb
xor
stc
nop
pushf
or
pop
hlt
xor
bound
xor
push
adc
sbb
add
push
orl
repnz
adc
pop
rcrl
cmp
cmp
sbb
and
xor
add
or
and
mov
and
hlt
push
stos
clc
lret
mov
xchg
js
bound
in
adc
sbb
jns,pt
cwtl
dec
mov
push
adc
mov
imull
test
pop
pusha
and
push
pushl
clc
dec
push
inc
xchg
out
sub
scas
mov
and
sbb
mov
xor
ret
push
je
ss
mov
sub
adc
adcb
cmpl
push
push
lea
pop
cmp
mov
add
mov
adc
fiadds
adc
add
cltd
sub
mov
lock
sub
movsl
push
mov
test
or
cmpb
cmp
jne
xor
movb
mov
loopne
jmp
cmp
push
mov
mov
pusha
cmp
add
jle
or
jge
mov
bswap
sub
add
adc
xchg
adc
loopne
adc
mov
outsb
outsl
push
add
add
add
scas
ret
inc
repz
cmpsl
adc
outsl
clc
cmpb
push
push
adc
test
xchg
add
aam
lods
push
or
jne
or
sub
cmp
adc
dec
cmpl
call
cmpsl
lds
or
into
loopne
adcb
clc
or
movsb
mov
mov
cmp
mov
das
xchg
setne
or
jmp
mov
mov
pop
negb
adc
pop
out
jne
or
pop
in
out
je
subb
push
in
sti
loope
fsub
add
ret
pop
inc
das
mov
xor
loopne
mov
pop
in
faddl
sbb
loopne
and
push
xchg
int
xchg
out
cmpsb
push
jne
or
ret
fcoml
inc
shrb
mov
pop
mov
mov
not
add
incb
cs
lahf
je
and
sarl
insb
xchg
inc
in
sbb
mov
loop
out
inc
out
inc
je
adc
xchg
push
add
imul
xchg
mov
mov
mov
xor
lock
test
jno
mov
leave
jmp
sbb
dec
sub
jecxz
mov
clc
jg
mov
or
aad
fwait
add
or
enter
inc
int3
cmp
mov
or
jle
push
add
les
mov
mov
cmp
pusha
cli
test
movzwl
jnp
or
jge
push
dec
dec
je
sub
jmp
jge
imul
push
mov
mov
ret
jmp
push
xorb
int3
int3
ror
sti
mov
dec
xor
adc
dec
mov
push
pop
push
add
loope
insb
fs
ljmp
dec
jae
ljmp
lock
sbb
mov
xor
inc
mov
sarl
push
push
pop
or
cmp
in
sub
aaa
popa
cmp
jle
cmpsb
jae
ret
ret
and
sbb
pop
mov
add
cld
fstl
mov
pusha
ds
mov
ja
add
cmp
pop
mov
mov
push
test
mov
cwtl
xor
mov
testb
push
mov
sub
outsb
loopne
xor
xor
push
add
push
jns
inc
fbld
jne
ds
jecxz
xchg
loopne
xchg
in
shrb
fcoml
jne
jo
jo
sti
or
push
adc
cmc
or
in
jb
out
insl
inc
push
pop
in
stos
add
mov
xor
pop
ficoms
js
bound
add
mov
jne
fisttpl
ss
add
jns
add
int3
mov
bound
adc
dec
mov
fmul
ds
ds
inc
cmp
std
xchg
xchg
mov
and
call
mov
mov
nop
es
dec
call
add
and
daa
jo
fmull
jle
faddl
mov
mov
push
loopne
pop
xchg
adc
scas
cld
loopne
andb
addr16
ljmp
in
call
xor
out
and
aam
enter
or
rcrb
push
cmove
and
add
loopne
aaa
enter
mov
loopne
in
sub
in
mov
dec
add
dec
rcll
fidivrl
scas
dec
cmpsb
jbe
mov
movsl
push
pusha
insl
mov
mov
scas
jecxz
les
in
add
fisttps
arpl
inc
mov
and
clc
dec
push
adcl
setle
jb
ds
test
push
push
cmpsb
sbb
rcll
mov
jp
je
fs
iret
or
ffree
add
popl
repnz
in
call
push
inc
fisttpl
mov
loopne
icebp
jge
repz
mov
or
push
add
shll
mov
and
pop
mov
adc
or
dec
fisttpl
movhps
sub
push
nop
mov
push
and
mov
adc
and
sub
rolb
sbb
mov
popf
dec
mov
adc
int3
pop
pop
pop
mov
cmp
adc
aam
fcoms
fcompl
or
mov
insl
shlb
mov
jbe
je
pushl
call
mov
and
shr
movzbl
push
adc
push
ret
push
sbb
icebp
aaa
xchg
dec
cmc
mov
imul
outsl
mov
pop
jae
xchg
cmpsl
jle
sbb
popf
cmp
xchg
fdivrs
xchg
add
sbb
fidivs
sub
sbb
xchg
xor
xchg
push
xor
data16
imull
je
push
add
mov
mov
cli
cmp
out
xor
loop
add
jle
push
cli
dec
enter
inc
push
push
mov
cmp
jg
mov
lret
clc
inc
adc
aaa
dec
enter
inc
add
ret
pop
xchg
cmp
mov
sbb
push
enter
call
aas
jb
sbb
mov
ds
ss
push
sbb
xor
aaa
outsb
sub
fsubrl
addl
in
sub
jl
mov
push
jne
sbb
sub
sbb
push
fcompl
pop
jmp
mov
push
std
add
inc
ret
outsb
insl
in
and
sbb
ss
shlb
mov
add
sub
jne
fmull
imul
fmul
test
js
xor
mov
les
cmp
jae
mov
add
push
inc
hlt
lea
ja
dec
test
in
pop
push
call
push
mov
je
insb
rcr
add
fiaddl
pop
std
or
mov
cmpsb
lock
imul
add
loopne
fnsave
jl
in
cmp
jg
aam
subl
sbb
sbb
roll
popf
jecxz
test
shll
into
popa
nop
add
add
fisttpl
pop
xor
add
fwait
adc
cli
lea
ljmp
xor
testb
push
test
adc
cmp
pop
xor
jo
mov
insl
fcmove
add
mov
mov
addl
aam
mov
test
lahf
inc
js
adc
adcb
out
test
mov
pop
pop
push
inc
pop
std
mov
leave
js
inc
dec
hlt
jg
js
mov
hlt
or
je
inc
mov
shrl
pop
movb
daa
push
inc
inc
push
xchg
add
xor
add
inc
add
push
jno
mov
push
xor
ret
jl
inc
mov
fmuls
xchg
daa
rorl
lock
jns
idiv
cmp
jl
repz
sahf
fldpi
push
or
ljmp
adc
ret
pop
xor
xchg
popa
movl
jae
adc
mov
mov
pop
adc
or
xchg
bound
les
mov
mov
mov
sarl
mov
testl
and
je
aaa
mov
xor
mov
ret
je
mov
js
mov
jbe
leave
mov
pusha
mov
push
aaa
push
mov
sub
mov
js
or
popa
mov
adc
add
inc
and
sti
and
dec
call
jl
xor
push
adc
adc
inc
popf
mov
mov
pextrw
or
fadd
je
push
and
movb
xor
xchg
xor
nop
fcmovne
jae
dec
dec
sbb
jb
jnp
mov
sbb
adcb
xchg
jmp
adc
jb
mov
imulb
clc
jne
cmp
je
jbe
movb
xor
mov
or
and
sbb
mov
push
mov
add
data16
xor
out
test
sbb
or
jo
daa
inc
insl
xchg
sarb
cmp
xchg
or
mov
mov
adc
insb
jp
or
test
imul
push
push
adc
js,pt
push
movl
lods
xor
inc
push
ss
or
or
push
mov
push
lods
subb
sbbl
push
push
roll
js
push
leave
cmp
daa
js
or
inc
lret
jmp
mov
mov
add
dec
sar
fldpi
sahf
fbstp
nop
dec
sub
push
cmp
add
incl
add
ficoms
test
push
lods
clc
mov
jb
lret
push
enter
add
inc
jo
pop
push
test
inc
mov
dec
cmp
fdiv
call
pop
hlt
sub
or
std
mov
lcall
je
scas
mov
divb
shrb
enter
orl
ret
insb
cld
cmp
lea
or
add
push
test
adcb
mov
adc
int
add
or
faddl
mov
push
jno
push
ret
sub
xor
popf
dec
add
cmp
inc
add
mov
insl
mov
xlat
xchg
adc
shl
mov
cwtl
pop
adc
jnp
and
fs
cmp
dec
add
xor
mov
jle,pt
or
and
sbb
adc
fdivrs
push
das
push
cmp
andl
shll
inc
or
imul
lods
sub
pop
or
sub
jb
add
jns
xchg
rolb
xor
or
xchg
and
aaa
insl
add
and
movsb
push
in
ss
jno
sub
pop
enter
sub
and
jno
shlb
xlat
dec
mov
sbb
stc
or
scas
popf
call
cltd
mov
movsl
jb
fsubrs
lret
hlt
jno
add
lods
mov
cmpsl
in
mov
inc
push
and
push
or
adc
lods
jno
pusha
cmp
mov
mov
dec
xchg
pop
clc
mov
push
repz
sbb
sub
mov
pop
pop
mov
shr
push
loopne
mov
xchg
sbb
inc
jmp
push
jmp
push
and
xor
pop
and
ljmp
in
xor
push
jne
outsl
and
mov
mov
shll
enter
adc
scas
icebp
pop
mov
test
dec
push
push
xchg
fcoms
xchg
bound
sub
fldl
xchg
add
inc
out
mov
in
inc
xor
into
lcall
mov
movsb
inc
pop
mov
jmp
push
loop
adc
jbe
xchg
inc
dec
add
mov
sub
loope
lret
cmp
mov
nop
cmpb
lock
test
cwtl
gs
mov
scas
and
add
leave
jae
cmp
lret
adc
mov
dec
ljmp
dec
adc
fidivl
push
lea
mov
add
iret
dec
clc
imul
and
adc
or
sbb
pop
xchg
lods
mov
mov
iret
mov
add
int3
cmp
sbb
pusha
fldt
stos
jns
inc
pop
pop
dec
mov
pop
push
push
in
push
pop
adc
lea
fisttpll
xchg
or
cmp
in
adc
pop
inc
sbb
cmp
sbb
sbb
sbb
aaa
add
pusha
inc
cltd
push
jmp
pop
cmp
shll
or
xchg
push
cmp
push
mov
sbb
enter
test
dec
mov
adc
shrb
cmp
out
fwait
popf
cmpl
cmp
push
sbbb
in
sbb
clc
sub
ret
jne
clc
mov
add
cmp
mov
jle
push
adc
pop
inc
outsb
stos
sbb
mov
ja
test
sub
pop
js
add
popa
pop
sbb
push
jbe
es
pop
or
jmp
cmp
jg
mov
lret
pop
mov
jne
sub
dec
je
ret
or
sub
test
ret
sbb
dec
ss
hlt
std
std
or
dec
jl
adc
mov
shlw
dec
aaa
push
or
xchg
loopne
dec
adc
pop
jne
lods
xor
mov
jmp
push
add
push
mov
xor
push
mov
push
inc
xchg
adc
fildl
sub
mov
pop
push
test
mov
icebp
xchg
xchg
pop
sbb
dec
mov
shl
loope
xchg
js
and
push
or
add
daa
pop
pushl
shlb
sbb
rcrb
dec
lea
adc
mov
push
sub
mov
sarb
jmp
cmp
je
cmp
pop
imul
lods
shlb
adc
cli
fucomip
out
mov
sbb
fstpl
imul
jmp
sbb
and
jmp
and
jmp
xchg
mov
pop
scas
test
rcrl
sahf
out
bound
and
jns
out
test
jns
pop
push
aas
aaa
cltd
inc
sbb
mov
mov
add
pushw
and
dec
cmc
scas
shrl
insb
fstl
lea
enter
adc
sub
in
jecxz
mov
fmuls
mov
popa
movb
in
cwtl
inc
lahf
push
push
or
xchg
dec
sub
ficoms
ljmp
inc
push
mov
mov
adc
push
lea
push
push
push
push
add
push
lea
sbb
dec
cmp
jmp
inc
cmpsb
add
dec
mov
inc
test
cltd
imul
lahf
sahf
mov
push
inc
enter
lea
movl
push
xor
add
imul
adc
inc
pop
inc
and
jns
jecxz
ficoml
mov
dec
ficoml
jmp
lods
popa
cmc
dec
pop
push
push
loopne
jl
inc
xor
add
lods
mov
or
cld
xchg
cld
adcl
or
lods
pushf
arpl
add
aas
lret
inc
sub
stos
xorl
push
loopne
pushf
push
push
xchg
jp
xchg
adc
jno
jle
ss
and
pop
iret
sub
and
mov
cmp
adc
negl
ss
or
testl
idivl
sarb
mov
pusha
add
xor
dec
and
ret
adc
inc
repz
xchg
pop
daa
sub
adc
rcrb
call
call
jno
adc
xor
loope
xorb
sarb
push
loop
xor
mov
test
aas
mov
xor
pop
sub
mov
mov
scas
aam
cmp
push
push
push
cmp
js
cmp
fnstenv
icebp
pushf
jl
sbb
pop
dec
pop
rolb
mov
lea
pop
pop
sub
jl
lcall
push
jg
xor
adc
lret
adc
fisubs
xchg
pop
stos
clc
push
add
push
aam
das
test
mov
in
clc
loop
popa
and
jne
int3
push
imul
aam
jl
mov
xchg
or
add
jle
outsb
pop
lock
sbb
inc
and
push
push
add
cmp
sub
stc
fdivr
ret
xchg
ret
repz
adcb
add
xor
adc
jne
push
sub
xor
pop
clc
or
adc
jo
xor
mov
iret
je
lea
push
loopne
add
mov
aaa
lret
jo
or
lcall
mov
jne
call
push
or
add
dec
xor
sub
clc
mov
rcll
es
shrb
les
rcl
mov
ficomps
dec
loopne
or
mov
push
adc
dec
lea
ffreep
cli
push
dec
push
push
sub
cmp
fisubrs
sub
sub
in
cmp
jmp
sub
cwtl
push
sub
in
cmp
push
mov
insl
fstpt
add
mov
inc
adc
dec
cmp
dec
and
inc
shll
dec
insb
add
cmp
sub
mov
js
mov
push
xchg
cmpsb
adc
pop
inc
sbb
xchg
fcomps
jns
cs
lock
sub
jno
fistps
cmp
dec
inc
and
add
jp
dec
dec
mov
lock
bswap
in
and
dec
dec
cmp
pop
mov
adc
push
push
fdivs
mov
shrb
lock
cmpsb
push
fimull
leave
and
push
push
inc
pop
mov
sub
fbstp
sbb
push
aaa
enter
cmp
ljmp
mov
adc
sub
aaa
add
je
push
mov
or
aaa
and
es
inc
test
dec
cld
adc
pop
xchg
jo
pop
jo,pt
outsb
stos
and
rcll
in
adcl
sbb
ljmp
pop
ret
jl
mov
mov
adc
adc
ja
push
jo
int
sbb
push
cs
push
int
xchg
lds
xchg
cwtl
popf
cld
adc
rcrl
dec
mov
std
push
les
add
int3
ss
cli
xor
cmp
je
cmp
mov
pushf
in
sti
sbb
repz
pop
add
and
xchg
inc
lret
mov
pusha
inc
ja
and
shll
loop
test
xor
aas
add
sbb
push
jne
mov
std
test
jmp
or
pop
repz
xor
push
fs
movsl
fldz
xor
push
mov
movb
test
lock
cld
aas
mov
cmpsl
mov
xchg
or
sub
add
sbb
lock
hlt
mov
adc
jge
fisttpll
mov
mov
push
cmpsl
popf
scas
dec
or
adcb
fsubl
enter
leave
push
adc
fcoml
push
test
or
sub
push
adc
enter
jp
rcrl
jp
push
imulb
mov
mov
xlat
cmpsl
shlb
add
add
mov
mov
loope
inc
sub
xor
cwtl
imul
or
into
sbb
push
push
pusha
push
mov
lea
and
mov
stc
mov
pop
push
sbb
sbb
cmp
mov
push
lret
jl
mov
andb
jbe
movsb
pop
sbb
xor
in
adc
and
jge
int
push
rcrb
mov
das
test
sub
sub
jmp
inc
fldl
ret
cmc
fmull
lods
cmpb
int3
dec
ret
push
push
push
add
mov
movsl
mov
add
popf
sbb
inc
xchg
cli
popf
cmp
dec
inc
fiadds
out
mov
sti
add
lods
int3
sub
jno
insb
inc
idivl
lcall
ds
sbb
and
addr16
sbb
pushf
outsb
int
adc
mov
fmuls
or
call
add
repz
or
adc
ss
test
jmp
mov
pop
xor
and
rorl
pop
test
adc
sub
cmpb
loop
jg
xor
je
push
pop
cmp
push
mov
push
xor
jmp
ljmp
sub
sub
push
push
jnp
iret
decb
adc
xor
and
pusha
aad
mov
pop
mov
inc
lock
add
sbb
push
cli
or
push
icebp
jo
pop
gs
lcall
pop
xor
jnp,pn
push
call
jmp
fsts
popa
push
sbb
xchg
inc
sub
fbld
adc
xor
sbb
jo
daa
out
jo
sbb
out
shrb
add
adc
inc
xchg
pop
sbb
mov
js
push
jge
orl
pop
jl
mov
cltd
mov
mov
cmp
push
or
dec
adc
sbb
sub
dec
push
add
sbb
jge
mov
ljmp
idiv
push
mov
mov
mov
aaa
outsb
lea
xor
idiv
cs
mov
add
jg
mov
mov
xor
jo
or
dec
mov
mov
xlat
dec
cmc
inc
xchg
or
out
inc
cmp
xchg
add
sbb
fstpl
push
pop
insb
xor
clc
arpl
sub
sub
clc
je
popf
hlt
pop
add
lea
cltd
idivl
fistl
jp
xor
mov
daa
pusha
js
or
popa
jg
fs
or
xchg
sub
mov
test
movsl
fisubrl
jbe
lahf
xor
not
lahf
sbb
dec
int3
loope
call
jl
outsb
sti
pop
xchg
sub
cmp
or
or
js
decl
out
insb
mov
hlt
testl
test
jns
faddl
xor
lock
sub
xor
mov
fdivrp
mov
sub
mov
icebp
xchg
out
mov
test
int3
mov
mov
out
push
pop
cmpsb
inc
idivb
xchg
pop
jl
jmp
cmp
or
mov
and
clc
fidivl
jmp
add
movsl
shrl
cli
aaa
out
mov
push
pop
mov
pop
jne
loopnew
jg
pop
movb
push
or
loope
dec
outsb
mov
inc
pop
mov
decb
rcll
stos
movsl
aad
shlb
inc
hlt
adc
push
ds
adc
je
addr16
push
mov
sbb
bound
mov
and
jne
pop
jmp
out
aad
xchg
loopne
bound
and
sub
pop
pop
into
pop
leave
pop
clc
inc
movsl
mov
cwtl
xchg
adc
pusha
stos
sub
shlb
lods
add
add
imul
xor
sbb
mov
xor
fdivs
fcompl
sbb
loope
pop
iret
shll
imul
jns
aaa
jnp
and
cmp
loope
jne
sti
mov
push
std
lea
adc
push
fldenv
pop
leave
pop
xor
loope
push
movsb
dec
jne
loopne
push
mov
xchg
push
pushf
lea
push
mov
push
adc
mov
lea
add
or
fnstsw
push
rcll
or
add
xchg
imul
jecxz
dec
adc
dec
imul
andl
push
setp
sbb
or
push
add
lcall
adc
popa
add
push
and
roll
scas
sbb
leave
add
push
sbb
lahf
sub
sbb
fs
and
int3
pop
and
into
mov
pop
in
out
pop
cmpl
dec
sbb
xchg
orb
mov
and
inc
cli
inc
repnz
inc
push
roll
cmp
das
sbb
leave
or
and
xor
add
mov
ss
pusha
dec
cmp
pop
scas
xchg
pop
adc
fdiv
inc
cmp
aaa
add
add
push
mov
add
mov
clc
setb
test
rorb
outsl
in
adc
xor
dec
adc
data16
pop
or
aaa
mov
fmull
push
fldenv
negl
gs
add
imul
mov
ss
mov
hlt
jno
cmpsl
mov
call
sub
lods
fwait
scas
sbb
rcl
scas
jge
fldt
inc
scas
xlat
das
push
jp
push
inc
mov
int
add
in
arpl
rorb
push
js
lods
test
sbb
ja
push
mov
cli
out
adc
clc
mov
sub
pusha
sbb
mov
sar
bound
xchg
add
sub
jecxz
int
add
fstpt
jmp
test
mov
xchg
adc
xor
mov
movl
dec
cld
pop
loop
add
cmp
cmc
add
out
insb
sbb
pop
pop
dec
push
or
nop
and
xchg
pop
das
inc
xor
shrb
sbb
xchg
pop
leave
mov
push
add
and
inc
in
push
dec
jp
push
mov
std
int3
sti
mov
add
mov
push
push
and
int
pusha
pop
add
xchg
jne
add
lret
in
les
call
xchg
test
insb
push
push
ror
or
add
imul
les
pop
fmuls
jo
rcrl
dec
lcall
sbb
mov
insb
aam
inc
xlat
or
aam
add
aaa
pushl
dec
push
movsb
std
add
push
cmp
les
test
fcoml
rorb
rcrl
sub
test
add
test
cmp
jle
and
mov
lret
call
sub
and
push
mov
and
push
mov
mov
das
jno
adc
loopne
push
scas
push
notb
mov
add
and
cmp
push
push
mov
outsb
ljmp
jp
push
hlt
push
pop
push
jb
xchg
push
or
push
add
push
mov
pop
push
push
add
adc
sti
pushf
inc
call
mov
loope
pop
sbb
fimuls
lods
add
xchg
clc
jmp
mov
push
cmp
enter
and
or
mov
and
adcb
push
adc
push
xchg
pop
pushl
push
cmp
mov
pop
fadds
cmp
aas
mov
xor
xor
ret
je
lahf
mov
mov
test
je
std
ja
or
loop
dec
mov
jmp
dec
mov
sub
pop
dec
insb
js
push
mov
mov
jae
dec
add
ss
pusha
shlb
mov
int3
xchg
sub
mov
sub
lcall
cmp
jge
mov
mov
mov
cmp
sbbb
jl
or
cmp
jle
call
jne
inc
mov
push
iret
add
fsubr
sbb
sarb
fcomps
or
je
insb
nop
mov
aam
jne
and
sbb
push
adc
xor
enter
dec
dec
mov
cmp
in
mov
adc
in
jo
sub
inc
sete
adc
loope
dec
sbb
mov
xorb
push
xor
outsl
or
push
xchg
stos
push
or
sti
xchg
fdecstp
cmpl
dec
out
mov
mov
jge
add
rclb
enter
sub
or
mov
scas
push
bnd
imul
xchg
adc
shl
dec
add
sbb
fcompl
add
pop
loop
cmp
add
push
js
das
sbb
pop
cmp
lods
pop
pop
jl
pop
aaa
adc
push
dec
lock
add
jmp
ret
movsl
inc
outsl
xor
adcb
xor
mov
push
sbb
jl
adc
movsb
bound
cld
test
sub
mov
out
fcoms
ss
inc
ror
rcr
mov
push
jmp
test
mov
xchg
mov
add
mov
ret
sti
add
jmp
mov
push
or
and
mov
mov
jne
repnz
xchg
in
sbb
pop
pop
or
pop
adc
clc
mov
int
andl
ret
jmp
lock
xchg
or
in
repz
in
push
lret
adc
dec
xor
fdiv
in
and
mov
xorl
cmp
arpl
xchg
cmpsb
sub
adc
add
and
lock
loop
dec
jle
mov
mov
add
xchg
jle
jge
or
add
adc
shlb
inc
jge
xchg
popf
xchg
or
sbb
adc
in
xor
xchg
les
mov
xchg
daa
push
test
test
mov
imul
aam
dec
or
clc
sub
or
dec
cmp
lea
mov
cli
xor
push
hlt
add
fsubl
adc
dec
clc
cmp
leave
sub
shrb
pop
inc
dec
push
add
add
inc
lret
inc
cld
sub
lock
cmp
add
jge,pt
cmp
in
mov
aaa
hlt
mov
divl
xchg
sub
add
into
push
push
add
push
outsl
inc
aaa
jo
or
and
or
xchg
fstpl
dec
jp
add
add
in
negb
dec
call
jge
adc
test
inc
in
jg
lock
cmpb
fstpt
das
aad
shrb
pop
clc
jg
mov
cwtl
add
lsl
sub
xchg
ret
inc
aas
or
idivl
sub
jbe
or
stc
xor
or
sbb
push
or
cmpsb
xorb
pop
movsl
rol
push
push
mov
inc
incl
or
push
xor
xor
icebp
mov
in
stc
jbe
movzwl
mov
add
push
lods
cli
pop
test
push
lea
push
mov
in
push
in
pusha
gs
push
rcll
push
cmp
in
jbe
pop
push
mov
subb
sbb
jo
mov
pop
mov
jo
roll
fistpl
mov
xchg
loop
ret
xor
cmpsb
nop
add
xchg
push
ffreep
xor
add
cmpsl
mov
pop
rolb
loop
mov
iret
in
cmp
dec
or
mov
cmovne
mov
ror
int
adc
pop
adc
mov
add
mov
ljmp
xor
add
xor
push
sub
call
ljmp
int3
outsb
pop
imul
xchg
push
leave
ret
xchg
push
test
push
or
inc
inc
aad
icebp
cmp
xchg
cld
lea
andl
mov
adc
dec
mov
xchg
pop
sub
or
or
pop
inc
pop
sbb
out
addr16
movl
fnstcw
xchg
dec
sub
adc
mov
andl
push
mov
hlt
push
xchg
arpl
dec
xor
int
mov
mov
cmpsb
ret
xchg
push
push
add
repnz
push
movsb
pop
mov
or
jns
cwtl
xor
adc
notl
cmc
xor
ss
loopne
inc
and
jbe
xchg
test
xchg
adc
inc
add
mov
adc
int3
jmp
push
push
pusha
inc
and
add
shl
sbb
movsb
out
ss
add
not
mov
mov
fisubrl
sbb
mov
ljmp
inc
sbb
mov
adc
sbb
push
xorb
rorl
cmp
sub
jae
sbb
inc
pop
jns
stos
and
mov
or
bnd
aas
xor
jns
in
aad
dec
jo
jg
call
stos
adc
push
adc
or
pop
push
xchg
out
mov
dec
dec
aad
jne
cmpb
lret
mov
jnp,pn
jmp
dec
inc
mov
jle
cmp
mov
mov
inc
push
mov
add
mov
or
cltd
rorb
adc
ss
inc
in
aaa
push
or
sub
mov
lea
cmpsl
adc
dec
and
fptan
inc
cmp
cmpsl
sub
inc
cwtl
movl
sti
loopne
mov
cmpsl
add
test
inc
adc
lahf
repnz
dec
jl
pop
sarb
lea
movsb
sub
test
orl
push
xchg
add
sub
ja
pop
add
jl
dec
sbb
pop
shl
fstps
push
cld
push
jae
sbb
mov
gs
sbb
inc
or
lcall
or
sub
sub
add
int3
push
dec
shll
mov
addb
lea
test
mov
mov
adc
adc
and
movsb
pop
lea
lea
jmp
int
cmp
jae
sbb
mov
addr16
mov
xchg
test
or
mov
in
sbb
or
addb
lret
sahf
lods
pop
nop
cmp
cmpsb
movsl
pop
lahf
cmp
mov
int3
test
lret
xchg
mov
rorb
aaa
rcll
leave
lea
nop
xchg
or
nop
or
mov
adc
inc
divl
nop
sbb
aad
movsl
lods
nop
push
rcll
jo
xchg
cltd
mov
fists
or
or
push
shrl
jg
sbb
push
mov
insl
cwtl
std
jecxz
jno
pop
mov
push
push
sahf
mov
xor
popf
push
dec
xchg
add
add
test
int3
add
jne
repz
or
aam
les
adc
lods
pop
sbb
fistl
or
lret
fwait
mov
ret
and
or
ljmp
mulb
incb
loopne
mov
pop
call
jae
pop
pop
push
cmpsl
mov
xchg
mov
push
cwtl
sub
js
pop
loopne
imul
out
push
hlt
lret
in
lea
loope
sub
add
push
mull
mov
pop
popa
xchg
xor
repnz
push
rcrb
dec
js
and
dec
inc
nop
xchg
pop
push
add
and
mov
or
xor
mov
lahf
dec
orb
roll
pop
jl
jne
ljmp
push
cmp
push
and
add
pop
rcll
or
xor
rcl
mov
and
or
xchg
mov
add
call
ret
mov
add
sub
push
push
mov
pop
repz
mov
sub
mov
pop
push
dec
into
mov
mov
dec
jbe
adc
movzwl
outsb
mov
pop
pop
mov
fsubl
xchg
mov
mov
lods
xor
xchg
ret
adc
mov
fisubrs
mov
test
push
jle
dec
adc
rorl
push
adc
inc
or
and
cmpsb
stos
push
and
mov
adc
jo
popa
xor
add
test
test
cmpsl
push
arpl
pop
ljmpw
pop
outsl
mov
jae
loope
cmc
mov
cmp
inc
add
cmpb
outsl
in
movsb
fdivrs
fbld
sbb
adcb
fists
test
adc
xchg
in
loopne
clc
add
movsl
jbe
js
mov
sbb
mov
adc
hlt
cmpsl
xor
lea
fs
mov
ljmp
lea
push
mov
adc
rcr
in
sbb
add
pop
aam
aaa
pushl
fcomps
ss
mov
mov
xchg
cmp
fiadds
ljmp
inc
mov
xor
adcl
mov
loopne
mov
mov
sahf
mov
sahf
adc
dec
pushw
sarb
test
or
cli
xchg
ret
lea
adc
mov
jbe
mov
pop
jg
lret
xlat
mov
add
iret
push
mov
ss
pop
cmp
cltd
dec
fsub
add
pop
mov
gs
movsb
xchg
shl
push
les
rclb
push
mov
sbb
daa
pop
loopne
loopne
and
fimuls
orb
shll
out
lret
test
mov
xchg
pop
int
or
clc
stos
lods
mov
scas
rorb
mov
and
mov
pushf
ja
or
lret
loopne
add
lods
cvtdq2ps
jmp
push
arpl
jb
dec
call
enter
gs
andb
jns
insb
jmp
jno
and
imul
je
inc
mov
add
xchg
xchg
lret
pushf
lea
into
mov
imul
add
aam
dec
in
mulb
mov
insl
stos
adc
fmull
push
movsb
notb
inc
cli
add
stos
xor
iret
add
insb
inc
cmp
jne
pop
push
or
cmpsl
hlt
mov
cmp
arpl
inc
pop
in
push
jl
outsl
dec
or
mov
jg
dec
and
sarb
cmp
dec
push
cmp
fidivrs
mov
mov
fdivrl
mov
inc
adc
mov
outsb
jo
movsl
or
inc
lds
orb
sahf
loopne
and
inc
ffree
add
push
jne
pop
xchg
shlb
aad
lahf
icebp
mov
and
shlb
andb
push
jg
dec
fcomps
mov
cltd
pop
jae
or
leave
pop
stos
push
and
dec
faddl
imul
xchg
inc
popf
pop
pop
or
mov
push
push
mov
or
and
sti
xchg
jmp
push
iret
sub
xor
fcoml
rcrl
inc
aad
rcrb
or
or
inc
icebp
sbb
sbb
stc
divb
imul
pop
pop
or
rcrb
jno
jge
sub
cmpl
lcall
add
push
pop
cmp
je
cwtl
orl
xor
xorl
or
sbb
xor
dec
clc
cwtl
xchg
xchg
xor
test
and
pop
add
push
test
jne
cmp
and
enter
aam
jge
mov
xchg
outsb
dec
and
add
sbb
and
pop
rcll
push
mov
sbb
fdivr
pop
sub
inc
add
rclb
mov
test
fsubrl
mov
sahf
int3
sub
jl
pusha
adc
mov
mov
or
test
sbbl
sub
loopne
sub
push
fcoms
aas
aam
xor
sbb
das
mov
sbb
xchg
das
jo
es
jns,pn
icebp
and
sub
pusha
sub
inc
aaa
mov
stos
fwait
cmp
insl
into
int3
xor
lds
cmpsb
dec
or
push
cld
jp
dec
hlt
push
xor
mov
add
pop
insl
faddl
rclb
sbb
and
mov
imul
add
mov
enter
push
sbb
call
cmp
leave
mov
or
or
mov
jne
add
push
push
pop
pop
adc
cltd
mov
sub
mov
xchg
scas
sbb
sbb
add
xor
inc
cmp
fistps
cld
outsl
fadd
in
jp
fidivs
pop
pop
fdivl
mov
mov
sti
inc
or
fs
mov
or
sbb
mov
push
inc
and
xchg
outsl
pushf
loop
inc
fcompl
cmp
cmp
mov
inc
in
push
xchg
cmp
push
out
cmp
cmpsl
sbb
and
jmp
jae
les
jmp
bound
scas
or
movsb
mov
sbb
xchg
pop
out
mov
cmp
jge
or
or
pop
fsubs
sbb
test
xor
add
dec
test
jbe
mov
js,pn
push
jnp
or
ret
imul
in
xchg
popf
cmp
cli
fisttpl
rclb
xor
and
into
sub
aad
pop
orl
les
fidivl
das
sete
push
push
movl
dec
jb
jge
daa
push
pushw
mov
das
add
mov
dec
orl
or
add
fnstenv
gs
jb
shlb
pusha
cmpb
lock
xor
loopne
bound
inc
flds
loopne
cli
push
sti
mov
push
mov
lret
jg
rcrb
aad
push
sub
mov
pop
gs
or
lret
repz
sbb
or
sub
lret
ds
push
incb
aad
mov
fwait
xor
mov
push
dec
hlt
sub
push
arpl
or
add
mov
pop
jb
push
pop
jne
push
adc
imul
rol
popa
push
in
xchg
ljmp
inc
dec
mov
outsl
xor
repnz
cs
clc
punpcklbw
scas
and
cmp
ja
add
adc
add
xchg
or
dec
stos
into
ret
jb
mov
lret
cwtl
clc
out
sub
push
iret
int3
lcall
bound
mov
push
ret
pusha
repnz
mov
mov
lds
push
pop
std
iret
and
popa
mov
mov
or
rclb
push
add
icebp
inc
inc
ret
in
movsl
loop
mov
cltd
xchg
fimuls
or
mov
int3
xchg
add
or
call
jne
jne
popf
lds
and
ret
rcr
sub
scas
sub
pop
push
xorl
shlb
mov
cmovle
fldl
das
dec
xchg
fiadds
mov
push
lods
add
push
xchg
add
inc
push
mov
or
add
aad
or
leave
test
rcrb
adc
sahf
or
or
pusha
adc
scas
fadds
or
cmpb
addr16
ds
ret
push
mov
xchg
nop
loope
xor
push
clc
je
cs
xchg
jg
mov
sub
lea
push
lea
push
inc
push
leave
enter
fwait
push
bswap
je
and
or
push
dec
fisubl
jmp
outsl
xchg
lret
cmp
jl
push
mov
mov
int3
xor
sarl
pop
sub
lcall
and
cmp
jne
repz
add
pop
cmp
add
push
shll
mov
out
sub
lock
jle
cmp
je
sub
pushf
sbb
mov
push
jns
push
fmull
add
fnstenv
loope
sahf
adc
push
sar
addl
jecxz
mov
sub
pop
ret
jmp
sub
adc
cmpsb
dec
jmp
push
mov
lahf
in
xor
mov
fldcw
fisttps
js
dec
or
in
push
mov
xorl
dec
adc
mov
push
or
in
or
sbb
cmp
neg
and
or
movb
inc
stos
xor
call
mov
pop
inc
or
adc
inc
add
popa
mov
pop
bound
rcrl
fwait
add
divl
subl
or
or
push
jl
ret
or
jne
xchg
fwait
inc
or
inc
pushf
xchg
pop
add
sbbl
cmp
je
sbb
aas
cmp
or
push
mov
fbstp
pop
insb
jne
mov
xchg
mov
repnz
popa
cld
fildl
xchg
add
inc
or
pop
pushl
add
cmp
mov
mov
out
in
inc
out
pop
push
push
xchg
add
daa
add
test
push
sub
dec
and
or
ret
cmpl
cmpsb
dec
or
push
shrb
push
sbb
cmpl
jb
loope
mov
cmp
pop
adc
adc
ss
inc
cmc
scas
cltd
push
stos
jne
loope
js
popa
adc
cmpsb
and
mov
cmc
das
mov
notb
cltd
das
clc
push
push
leave
push
cmp
adc
leave
fs
mul
seto
out
jecxz
xor
enter
imul
and
push
jmp
jae
cmpsl
mov
push
xor
test
push
dec
mov
ficoms
orl
or
mov
inc
mov
add
jns
fadds
or
fnsave
loopne
pusha
sub
mov
lcall
add
dec
adc
mov
je
rcll
pushf
fcmovb
cmc
cmp
cmp
lds
cld
sub
inc
or
jno
and
adc
pop
jbe
lods
cltd
push
and
adc
and
rol
data16
mov
adc
js
test
outsb
sbb
mov
icebp
inc
inc
add
js
cmp
cld
cmp
std
lcall
jmp
adc
add
and
sbb
callw
mov
mov
pop
test
loop
cmp
scas
adc
push
je
adc
or
daa
xchg
lock
and
lock
cmpsb
jbe
cs
lock
jne
ds
xlat
daa
inc
into
js
push
jb
jb
jo
add
test
lock
sub
loope
pop
add
jne
or
cltd
aad
add
aaa
cld
jmp
lock
ret
out
push
test
je
cli
jmp
fidivs
jmp
jno
cmp
push
inc
cmp
jae
and
push
subl
xor
cmp
xor
pop
sub
or
subl
loop
jne
and
adc
orb
jge
mov
pop
push
ss
push
fucomi
jb
mov
xor
adc
cwtl
ss
test
mov
sbb
push
mov
mov
shl
inc
adcl
cmp
xor
dec
movsl
or
or
lret
je
add
aas
and
or
mov
cmc
in
jo
insb
or
and
addb
fwait
xor
mov
jne
mov
and
ja
jp
lds
dec
mov
mov
dec
mov
inc
shl
jmp
push
jle
test
dec
jns
mov
mov
fistpl
fcomps
or
or
inc
and
jae
xor
pop
enter
ja
cwtl
incb
mov
jmp
mov
or
mov
hlt
cmpsl
fisttpl
push
mov
xchg
inc
sbb
jg
mov
push
push
icebp
adc
sub
pop
pop
adc
mov
shlb
and
dec
sub
adcl
mov
fs
mov
mov
adc
sub
dec
add
js
push
pop
stos
pusha
add
push
or
push
add
inc
aad
xor
cmp
lea
or
clc
add
mov
jl
inc
cltd
mov
int3
add
mov
shl
push
clc
je
movsl
popa
xor
xchg
push
push
xchg
jmp
and
adcb
out
rclb
push
jl
icebp
mov
mov
sub
test
mov
jnp
jne
lar
and
dec
js
push
push
xchg
adc
insb
loope
imul
mov
add
and
mov
inc
jp
push
bound
push
in
inc
loopne
dec
adc
push
push
jbe
insb
mov
neg
push
mov
ret
mov
adc
pop
out
jne
rclb
testl
inc
mov
dec
inc
jmp
mov
int
enter
xor
dec
push
inc
cwtl
add
fs
xchg
add
aaa
xor
loop
aad
sti
faddp
pusha
and
out
adc
ret
xchg
push
jp
push
cmp
nop
inc
les
movsb
xchg
in
xor
xchg
popf
pop
pop
imul
jns
mov
and
jns
shrb
push
orb
xchg
inc
repnz
ud1
mov
dec
orl
xor
mov
or
rcll
push
sub
lock
add
movl
int
inc
out
sarb
add
mov
push
or
lods
dec
add
ret
lods
pop
inc
adc
testb
push
jae
mov
dec
imul
sbb
pop
add
mov
and
fcmovb
push
push
movsl
sbb
in
adc
aam
sbb
dec
js
jl
andl
cmpsl
jge
repz
mov
lds
and
add
bound
fs
or
andl
pusha
mov
cmp
push
xor
pop
mov
fwait
and
push
pop
or
mov
push
aam
dec
orl
pop
sub
in
cmp
push
je
jo
and
popf
leave
in
subb
sub
ret
adc
mov
inc
push
add
test
aad
mov
mov
repz
or
mov
dec
lret
test
dec
xlat
mov
pop
add
js
test
sub
or
je
orl
xchg
call
adc
pop
bnd
fimull
push
jmp
je
sbb
xlat
mov
js
push
cmp
or
cmp
pop
fs
and
je
rclb
sub
sbb
repnz
popf
dec
fldl
add
mov
cmp
add
sbb
add
jno
push
jb
jp
xor
dec
or
mov
rolb
insb
sub
cmc
adc
dec
lahf
cld
lea
fldl
mov
mov
mov
sub
and
xor
push
and
ret
sub
xor
add
inc
fidivs
add
adc
insl
imul
inc
push
cmp
xchg
lea
pop
push
faddp
xor
cmp
stos
push
popf
jg
or
dec
and
sub
clc
push
iret
mov
inc
sbb
pop
xchg
pusha
lock
add
push
mov
repz
adc
xchg
inc
or
push
mov
pusha
inc
lea
pop
insb
xor
pop
das
xchg
fsub
pop
xchg
or
sub
sub
rcll
sub
dec
sub
leave
lea
xorl
mov
adc
addr16
or
mov
sub
push
dec
xor
js
and
sub
sub
cmpsl
fadds
push
cmp
aaa
cmp
mov
pushl
lods
mov
add
add
mov
jg
movsb
sti
adc
pop
sub
sbb
jmpw
xor
lcall
inc
dec
popa
jo
loopne
sub
mov
xchg
cmc
popf
addr16
repnz
lea
push
cmp
jnp
cltd
sbb
insl
aaa
xor
cs
inc
mov
loop
incb
pop
jns
jns
rolb
or
hlt
dec
and
inc
or
cmpsb
mov
cltd
push
mov
arpl
cmpl
rdtsc
push
adc
mov
sub
push
mov
rol
mov
test
lea
push
push
pop
push
lock
cltd
in
pop
push
xchg
sub
mov
lock
or
mov
nop
int
sbb
stos
je
sbb
in
addr16
sbbl
loope
xchg
loope
mov
mov
ret
mov
inc
insb
inc
test
add
pop
sbb
mov
mov
xchg
pop
aad
rolb
mov
lahf
xchg
inc
mov
pop
jnp
es
xor
daa
std
cmp
outsb
subb
loopne
test
inc
add
ret
in
add
and
addr16
or
mov
inc
cmc
daa
stos
cld
jmp
mov
rolb
and
call
jl
pushl
mov
test
inc
and
xor
adc
add
scas
lock
cmp
test
adc
jbe
out
jae
sbb
adcb
imul
add
jae
arpl
inc
mov
daa
mov
add
mov
add
scas
adc
or
inc
inc
add
mov
jb
ja
popa
dec
jnp
push
stc
test
push
in
and
xchg
jo
pop
adc
movsb
inc
cmp
mov
pop
divb
pop
sub
dec
fisttpl
icebp
sar
js
adc
in
movb
cld
cmpsl
test
inc
hlt
inc
hlt
arpl
sub
js
pop
mov
adc
pop
push
ret
pop
jmp
rcll
xchg
cmp
inc
jo
shll
and
or
or
int
sub
dec
dec
push
rcll
imulb
pusha
pop
dec
scas
mov
xor
xor
sbb
insb
add
jmp
notl
jo
inc
insb
pop
dec
jno
mov
bts
movb
rorl
mov
inc
or
xchg
sub
mov
loope
inc
inc
push
fadds
test
sub
lock
dec
sbb
adc
pop
add
mov
lcall
cwtl
cmp
les
mov
inc
mov
loopne
cmp
mov
mov
xchg
rolb
roll
or
pop
sbb
lods
sbb
jne
and
push
mov
cmpsb
in
jae
or
xchg
pop
pop
imul
int3
mov
pushf
ds
jae
in
and
pop
ss
aaa
mov
clc
push
lea
shrb
lret
hlt
adc
cmp
loope
pop
cmp
inc
mov
and
add
push
imul
inc
dec
mov
push
icebp
xor
mov
jle
sbb
mov
mov
movsb
mov
adc
dec
xchg
inc
loope
ja
add
nop
inc
incl
test
sbb
nop
out
lods
sarl
clc
inc
push
sahf
cs
pop
or
sbb
mov
out
negb
fadds
shl
adc
mov
rol
inc
cmp
lock
daa
in
add
add
xchg
or
xor
xchg
push
xchg
cmpsb
pop
neg
xchg
and
sbb
loope
es
xchg
in
push
cwtl
xor
xor
jmp
ss
push
xor
or
cmp
loopne
xchg
xor
stc
lcall
mov
or
jo
test
mov
xor
xor
addr16
insl
and
fimull
cltd
mov
xlat
push
adc
mov
dec
sub
adc
and
rcl
sub
pop
adc
scas
mov
mov
rcrl
pop
cwtl
or
jno
mov
jmp
xor
push
pop
jecxz
test
addl
js
cmpsb
jmp
js
add
jg
in
cmpb
xor
sti
add
xchg
jle
xor
dec
or
sbb
jl
ud0
shlb
notb
inc
je
or
test
xor
pusha
cmp
mov
mov
jne
inc
mov
push
cmp
pop
sbb
adc
or
lcall
fsts
pushf
pop
and
pop
test
cmp
push
test
pop
bound
popf
icebp
add
cmp
js
jo
int
push
andl
pop
push
inc
or
push
icebp
add
test
jno
push
pushf
cmp
sub
fsubrs
mov
cmp
pushf
adc
jle
cmp
jae
mov
push
jno
and
aam
out
shlb
adc
jne
push
dec
scas
lods
enter
std
push
or
jns
xor
push
aas
cld
mov
outsb
out
add
test
daa
mov
mov
aas
adc
nop
cmpsb
cmp
dec
rclb
dec
cmp
cld
insb
push
push
push
cmc
inc
sahf
dec
pop
xchg
sbb
xor
dec
adc
add
cmpsb
arpl
push
das
xchg
sbb
sbb
sbb
pop
mov
adc
mov
movsl
jge
push
inc
inc
sbb
xor
push
out
lods
pop
push
adc
inc
add
das
pop
or
adc
popf
jmp
and
push
lods
or
sbb
add
or
mov
roll
nop
cld
ljmp
aas
sub
jo
mov
adc
add
or
and
std
mov
mov
mov
jbe
push
push
movsl
je
enter
and
nop
sbb
rorl
sbb
cmpsl
and
call
inc
fiaddl
cmp
mov
rolb
lods
popl
roll
mov
add
mov
dec
data16
les
pop
inc
enter
ja
fistps
push
ljmp
xchg
xchg
sbb
sbb
add
out
push
cmp
aaa
sub
push
add
shlb
inc
xor
mov
adc
push
push
pusha
pop
and
mov
mov
add
mov
mov
pop
fisubs
lret
inc
add
fisubs
inc
adcb
dec
fmuls
sbb
pop
add
dec
rcrl
add
push
cmp
scas
mov
xchg
sbb
xlat
dec
in
jno
lea
lea
push
mov
ret
test
and
pop
imul
and
cmpsb
imul
leave
int3
imul
loope
jno
mov
test
mov
shlb
push
aas
mov
test
mov
andl
and
inc
daa
jo
xchg
je
xor
or
test
ret
pop
mov
mov
and
sub
sub
es
or
incb
inc
inc
xchg
and
mov
push
jl
into
mov
fs
repz
cmp
xchg
mov
out
je
lods
call
add
daa
int3
and
mov
stc
popa
or
repnz
sbb
xor
add
mov
sub
loopne
xor
adc
or
out
dec
sbbb
push
sti
setge
xchg
jg
outsb
mov
xchg
mov
shlb
aas
pop
in
pop
sbb
xor
pop
fiaddl
fidivs
pop
cs
fstl
cmp
dec
xlat
scas
sub
jno
jl
popf
jb
adc
ja
dec
popl
mov
sbb
dec
push
movl
stc
inc
inc
inc
adc
daa
es
js
inc
xorl
aad
in
inc
out
dec
cmp
ljmp
add
add
xor
sarl
adc
add
sbb
xor
jecxz
cmpsb
fiadds
add
ss
push
jp
mov
or
jnp
shl
or
inc
adc
outsb
mov
xchg
test
arpl
xor
push
icebp
xor
jo
xor
dec
jne
pusha
mov
mov
clc
adc
sbb
shr
and
jmp
adc
test
pop
mov
dec
mov
aam
dec
insl
and
jp
int3
pop
aaa
lock
push
xor
repz
mov
in
mov
das
xchg
sub
mov
xchg
jge
sub
arpl
or
js
cmp
movl
xchg
daa
xor
std
sub
enter
push
lea
cli
jb
mov
or
or
ret
faddl
mov
jmp
lea
repnz
sbb
pop
ja
xchg
push
mov
xlat
je
jp
push
out
dec
orl
add
xchg
test
ja
push
nop
xchg
or
push
jns
cmp
and
jl
aas
mov
inc
stos
imul
rolb
cmc
push
push
lods
or
sub
cmpsb
cmpsl
xor
aad
or
jb
pusha
icebp
and
cmp
testb
jle
mov
fmul
data16
test
out
je
pop
clc
lods
sbbb
push
xor
mov
mov
sbb
nop
and
sub
xorb
sub
jno
and
fmuls
and
jmp
inc
cmp
inc
lea
push
cmp
cmp
mov
adc
test
cmp
dec
push
fcomps
push
lods
adc
xchg
jns
pop
cwtl
aaa
push
iret
into
cld
push
std
mov
fcmovnbe
jmp
cmp
je
loopne
mov
aaa
js
rol
sub
inc
jae
and
inc
add
adc
cld
inc
add
add
jmp
xor
adc
jnp
and
dec
lcall
lea
sarb
fs
add
ret
popa
add
cmp
incl
inc
adc
mov
mov
sbb
mov
iret
push
pop
aaa
jne
jmp
mov
xor
dec
mov
rcll
push
loop
mov
stos
adc
notb
push
or
movsb
and
lret
loopne
sub
inc
mov
cmp
scas
add
push
loope
ss
les
jae,pt
inc
sub
mov
test
mov
pop
add
dec
movl
add
inc
sub
push
push
and
sub
incb
mov
lret
ja
mov
adc
bound
dec
pop
enter
imul
push
mov
pop
test
mov
ret
adc
push
dec
loopne
adc
adc
sbb
and
ret
fdivrs
ja
jge
mov
divb
inc
cmp
jl
pop
test
lods
and
movl
nop
out
dec
add
jno
lods
ja
xor
addr16
mov
push
pop
mov
inc
decl
loopne
sti
dec
jo
enter
insb
mov
xor
xchg
aam
xorl
sbb
mov
mov
cmp
imul
or
add
js
sub
cmp
aad
arpl
inc
mov
add
fmull
out
clc
movsl
insl
pusha
xchg
push
incl
fimull
popf
mov
inc
cmp
cmp
cmp
je
push
mov
xor
es
cmpsl
data16
leave
jo
andl
sbb
and
push
inc
imul
movsb
pop
cmp
in
mov
in
xchg
test
call
xor
or
dec
push
movsb
jns
or
mov
test
sub
imul
mov
shlb
push
es
cmpl
and
movsl
mov
mov
jae
int
push
push
push
imul
inc
sub
daa
mov
test
add
cmp
add
and
adc
or
int3
aam
inc
dec
aaa
lods
or
shrl
xchg
fmull
sbb
sub
fs
mov
inc
dec
mov
push
mov
outsl
lock
cmpsb
mov
test
je
sub
cmp
js
cmp
test
push
inc
pop
adc
pop
pop
dec
je
mov
sbb
sbb
inc
enter
pop
fcoml
mov
jbe
cmp
mov
dec
aam
dec
inc
ljmp
inc
or
rorb
adc
sub
pop
push
test
in
cmp
push
adc
and
push
sub
data16
lea
cli
sbb
or
sbb
adc
pop
adc
sub
xor
adc
shrb
outsl
ja
pushf
mov
mov
dec
and
ja
cmp
cmp
push
adc
roll
adc
push
and
sbb
ljmp
jecxz
xor
adc
in
mov
and
aad
inc
imul
lock
dec
cwtl
stos
and
sub
sub
push
fsubrp
sub
inc
xchg
jns
je
pop
mov
aas
leave
mov
filds
stos
mov
xor
cli
insb
cmp
pushf
dec
ss
mov
orl
sub
add
xor
mov
jne
jb
jl
push
out
cmp
jge
xchg
stos
inc
xchg
movsb
lea
pop
cmp
aaa
xchg
cmp
stc
subb
add
dec
and
sbb
sbb
cmp
xchg
ss
and
dec
inc
in
sbb
or
insl
sub
pop
andb
adc
xchg
mov
inc
rcll
jecxz
pop
xchg
inc
fidivrs
dec
out
pop
or
adc
je
mov
dec
push
xchg
adc
cmpl
addw
inc
pop
loopne
mov
add
and
aaa
fistps
lcall
dec
add
push
sub
sub
js
mov
fwait
vpcmpgtb
add
nop
addr16
pop
xor
or
dec
pop
add
sbb
leave
and
pop
add
push
test
pop
faddp
stc
pop
test
and
pop
fcomps
push
dec
sub
pushf
adcl
mov
sbb
jnp
xchg
push
arpl
adcb
sub
aad
push
aaa
xchg
data16
jl
sub
xchg
add
xlat
xchg
pushl
enter
cld
pusha
mov
lock
int3
js
pop
das
jmp
xor
sbb
jge
or
aaa
das
adc
sub
adc
cld
sub
fstps
or
cmp
and
dec
aad
inc
mov
jp
mov
subl
mov
mov
lret
mov
je
out
mov
adcb
xor
adc
xor
xor
sbb
nop
out
xchg
sub
cmp
lea
in
xor
and
push
loop
or
or
and
popf
adc
xor
sbb
leave
xorb
inc
xor
ljmp
and
cmp
sbb
mov
cmp
int3
jno
xlat
and
nop
inc
sub
adc
mov
xlat
out
mov
lret
call
pop
loop
cwtl
imul
orb
push
les
rcll
sbb
inc
das
jecxz
bound
pop
or
notl
mov
adc
outsl
mov
pop
add
push
adc
je
lret
push
cmp
mov
cld
xchg
adc
rcrb
pop
sub
or
xor
mov
ja
sub
jae
sub
lret
iret
test
add
out
jae
or
lret
mov
cli
pop
inc
push
and
mov
jbe
adc
outsl
loop
push
jmp
sub
pop
and
inc
test
xor
jbe
ja
hlt
sub
popf
dec
testl
mov
loopne
add
cli
push
sub
lahf
pop
cmovle
adc
fnsetpm(287
jb
and
jae
or
add
adc
fldl
inc
pop
mov
and
or
mov
xchg
jne
jnp
mov
ljmp
loopne
cmpl
xor
daa
xchg
inc
push
in
lea
xchg
testb
repz
pop
xchg
xchg
stos
shll
adc
dec
test
shlb
fildl
test
jo
cltd
push
xchg
or
and
in
sbb
jnp
sub
dec
mov
xlat
notb
popf
push
dec
imul
xor
cmp
dec
push
dec
or
popf
xchg
mov
sub
ljmp
and
add
xor
sahf
lea
aad
mov
push
outsl
ret
push
test
inc
or
popa
adc
sbb
iret
mov
jno
movsl
dec
and
add
test
mov
xor
cwtl
pushf
sbb
mov
movsl
pop
sub
sbb
mov
cmp
add
popf
sub
cmp
in
cli
push
repz
in
divb
mov
hlt
adc
ss
or
mov
lcall
outsl
pop
xlat
test
jbe
rcrb
pop
jge
hlt
pop
testl
adc
push
cmpsb
or
shrl
hlt
dec
xchg
or
or
aam
mov
pop
or
icebp
jno
jns
mov
and
push
xor
mov
fadd
ljmp
sarl
shl
push
cmp
repnz
push
sbb
into
clc
push
push
push
pop
push
xchg
mov
xor
lds
sahf
or
push
imul
jg
lock
in
sbb
push
cmp
lea
cmp
mov
pop
pop
lret
mov
nop
andl
fs
add
sbbl
leave
pop
rcrb
inc
push
xchg
add
and
xchg
and
and
and
push
mov
ret
cmp
es
cmp
lds
sbbl
leave
adc
daa
xchg
sbb
pop
mov
jmp
stc
andb
test
and
mov
shrb
inc
cs
inc
push
pop
sub
sub
cmp
sub
push
xor
sub
icebp
or
insb
pop
mov
xchg
aaa
arpl
pop
fcomps
repnz
mov
push
push
sbb
xchg
jl
inc
imul
test
push
xor
pop
and
in
fcoml
xor
icebp
fs
inc
out
mov
sub
outsl
xchg
xorl
jle
dec
mov
pop
adc
dec
adc
pop
rcl
jo
ja
push
or
pop
movsb
jns
lcall
jns
and
fidivrs
push
adc
movsb
adc
and
and
test
add
arpl
add
mov
add
xor
out
pop
imul
mov
inc
pop
or
aad
inc
pop
or
push
loope
xlat
sbb
or
iret
ss
push
mov
push
push
inc
add
je
testb
or
and
fisttps
cmp
les
lret
pop
popa
or
push
les
push
rclb
mov
lock
add
adc
jmp
shl
std
xor
pop
insb
or
icebp
fcmovu
push
pop
clc
loopne
add
push
push
fadd
lds
add
mov
jl
lcall
fsts
pop
adc
mov
dec
add
jne
pop
pop
cwtl
pop
or
data16
dec
lock
test
out
mov
data16
push
hlt
dec
sub
gs
call
or
pop
pop
dec
cld
dec
push
pop
push
xor
pop
push
push
xchg
xchg
mov
dec
adc
test
shlb
adc
xor
xor
mov
xor
pop
les
adc
or
icebp
or
or
or
and
es
sti
mov
sbb
push
out
or
cmp
cmp
je
inc
xlat
adc
hlt
dec
stos
cwtl
xor
sarl
mov
dec
add
add
sub
into
cmp
push
inc
icebp
mov
int3
lcall
inc
add
cs
js
add
ja
dec
nop
xor
in
lahf
ret
je
daa
loop
or
add
test
popa
call
mov
orl
imul
mov
pop
push
cmpsb
inc
fisubl
fcomps
fs
lret
enter
sbb
mov
rol
rorl
add
in
mov
les
fisubs
inc
fidivrl
push
pushf
shll
mov
or
pop
xor
jbe
popa
pop
orl
add
daa
push
clc
jle
dec
rclb
ja
adc
iret
xor
fdivs
push
ds
push
addb
inc
ljmp
push
inc
or
repnz
jo
addb
hlt
inc
add
bound
adc
nop
xchg
push
call
jnp
inc
jne
push
loopne
shr
out
subb
jge
mov
mov
clc
pop
adc
push
sbb
hlt
add
aaa
add
scas
in
add
adc
jle
push
add
push
andl
movl
mov
push
pusha
mov
pop
sbb
adc
pop
jp
lds
dec
xor
lods
push
sbb
pop
dec
adc
in
push
lea
movsb
mov
rep
adc
xchg
mov
lods
adc
inc
dec
daa
xchg
stos
jmp
adc
xchg
movsl
mov
mov
scas
mov
push
ret
add
pushf
fstpt
lret
arpl
ffreep
mov
mov
jne
or
int3
sbb
adc
daa
jecxz
and
lea
rolb
add
aas
lret
dec
adc
incb
cs
cmp
mov
push
dec
jo
adc
sbb
mov
and
dec
sub
inc
inc
inc
in
cmp
rorl
mov
scas
insl
ja
dec
push
inc
jmp
mov
and
dec
insb
aaa
or
shll
bound
pop
pop
mov
mov
lahf
test
mov
add
add
push
add
jl
scas
movl
xchg
xchg
sbb
mov
jg
sahf
or
add
add
sbb
stos
mov
xor
pop
inc
mov
mov
jae
and
mov
adc
sbb
sbb
mov
mov
mov
mov
and
mov
mov
cmp
or
cmc
nop
pop
add
or
je
and
adc
sbb
loope
pop
push
test
pop
cmp
mov
dec
fs
dec
in
ja
jecxz
aas
imul
or
pop
or
loope
test
into
ret
pop
mov
add
in
inc
or
clc
jg
adc
cmp
jle
cld
jae
inc
add
outsb
mov
subb
ret
and
adc
cmp
loopne
ret
cmp
add
mov
faddl
outsl
rorl
sub
cmovle
stc
xchg
sub
add
fldcw
pop
mov
lret
jp
cltd
push
mov
sbb
jmp
xor
lock
mov
js
scas
pop
xchg
and
outsb
push
loopne
mov
repnz
dec
inc
push
mov
dec
sub
mov
lods
add
sub
leave
cmpsl
stos
pop
cwtl
sub
mov
aam
stos
xor
mov
test
add
cmp
rcrb
add
mov
push
arpl
add
pop
xor
dec
add
adc
sub
mov
fimuls
call
shll
fldt
add
pop
mov
add
test
mov
lea
fistl
mov
and
pop
or
xchg
xchg
inc
or
mov
sbb
das
or
sbb
lret
adcb
insb
sti
push
ficoms
pop
jmp
scas
jo
inc
scas
enter
mov
jno
movsl
push
push
push
push
addb
dec
inc
push
push
cld
jno
adc
pop
dec
andl
add
lods
out
rcrl
mov
and
cmpsl
pop
mov
xor
popa
repnz
lea
jmp
loopne
stc
or
data16
adc
subl
cld
add
or
aaa
adc
adc
loopne
mov
sbb
mov
sbb
jne
and
call
pop
xchg
adc
push
xor
cmp
fimuls
mov
mov
mov
mov
xchg
sbb
out
xor
mov
push
loopne
inc
inc
mov
enter
clc
popa
adc
sbb
adc
inc
lea
iret
pop
dec
inc
bound
xor
es
or
call
adc
or
mov
inc
js
pop
mov
dec
jnp
push
inc
daa
adc
outsl
lret
popl
add
fidivl
jo
daa
cwtl
sbb
jo
sbb
movb
dec
popf
inc
jnp
xchg
cltd
mov
mov
stos
nop
bound
sub
scas
cmp
pop
and
pop
in
dec
xchg
cmp
lea
pop
push
push
xor
fcmovnb
push
test
push
daa
push
stos
orl
sbb
xchg
stos
sub
call
scas
je
sahf
incl
sbb
xchg
push
sbb
lds
iret
leave
push
fsubl
inc
push
jl
sbb
inc
cmp
mov
and
add
int
test
shlb
nop
inc
pop
or
or
inc
movsl
adc
mov
lahf
xor
in
or
push
sub
stc
test
add
dec
dec
dec
xor
add
std
sub
xor
icebp
test
and
stos
nop
popf
insl
adc
mov
or
das
je
fmuls
and
imul
pop
jb
aas
add
lods
xor
data16
in
fidivrl
adc
aas
pop
dec
test
fisttpll
cmp
insb
andl
mov
js
dec
add
fistpll
fistpll
jmp
mov
data16
adc
xor
rcrb
sub
inc
js
sub
mov
pop
loop
movsl
out
or
inc
lea
jbe
imull
and
push
mov
test
xor
mov
loopne
js
fcmovu
cmp
dec
fisubrs
adc
xor
lea
xor
mov
fs
inc
dec
jo
cs
or
sbbb
push
inc
out
loop
cmc
adc
lods
dec
sub
mov
pop
fs
push
inc
push
fldcw
add
cmp
loopne
xor
or
pop
dec
int
adc
lds
or
orb
nop
mov
push
push
ja
sbbb
cld
or
sbb
add
dec
pushf
outsb
mov
adc
in
imul
xor
jmp
mov
add
cmp
push
push
sub
ss
inc
icebp
push
inc
lcall
sbb
fs
bound
push
xor
ret
push
pop
and
push
outsb
pop
mov
add
jo
fwait
mov
addl
cmp
shlb
je
js
add
outsl
movsl
jns
mov
outsl
into
adc
push
movl
cwtl
popa
cmp
or
push
mov
xor
movsb
arpl
test
gs
pop
adc
rcl
insb
pop
je
sbb
xorl
add
sti
mov
push
sbb
aas
sbb
adc
scas
mov
add
test
and
cmpsl
loop
ljmp
mov
xorb
jne
in
push
cmpsb
mov
in
aaa
add
pop
cmp
insb
js
rcrl
push
sbb
mov
add
push
jge
push
and
push
mov
add
stos
in
outsl
int
lds
je
je
adc
dec
dec
fs
cs
add
dec
add
or
dec
add
enter
add
xchg
inc
jo
xchg
adc
outsl
pop
push
pop
sbb
testl
mov
les
rcll
sbb
repz
sbb
mov
add
adc
jno
cltd
arpl
mov
mov
inc
xor
adc
nop
dec
nop
dec
xchg
rorb
add
aam
push
xorl
imul
lea
sub
push
inc
test
inc
mov
mov
add
pusha
mov
xchg
mov
int
pop
dec
jmp
rorl
stos
mov
or
or
clc
inc
outsb
hlt
int
test
add
or
adc
adc
enter
movl
in
jo
shr
repnz
pusha
icebp
or
mov
aaa
int
movb
jno
xor
mov
or
sub
push
adc
jle
fs
or
pusha
dec
push
mov
sarb
jge
mov
sub
xchg
push
or
sbb
jp
test
loopne
sub
lea
jb
jle
cmp
or
pushl
dec
mov
cmp
inc
jno
insb
arpl
dec
mov
add
mov
add
dec
xchg
sbb
mov
sub
sub
dec
sbb
push
mov
mov
cmp
lods
jnp
loopne
and
adc
je
adc
cli
or
push
ret
push
and
lds
inc
and
and
ljmp
or
add
les
lea
pop
dec
or
push
imul
and
je
adcb
jnp
dec
add
movsbw
inc
jg
xchg
mov
cmp
jne
xchg
fucomi
and
or
or
fwait
dec
add
xor
inc
adcb
sbb
mov
pop
add
inc
hlt
mov
hlt
push
inc
rol
out
push
jg
rolb
pop
pusha
roll
dec
cmp
adc
jo
dec
lods
pop
js
je
and
ficoms
fidivrl
sbb
imul
lret
xor
xchg
mov
push
aas
ljmp
inc
fucomi
add
cmpsl
push
repz
add
leave
sbb
or
les
cmpsl
and
xor
sahf
add
dec
mov
inc
popf
or
jb
mov
shll
inc
gs
jnp
outsb
ret
push
sub
xchg
addr16
jp
dec
sbb
je
std
lock
dec
mov
test
inc
or
mov
test
neg
mov
test
and
add
or
pop
push
popa
sub
movsb
neg
out
popa
sarb
in
add
push
jecxz
leave
xchg
pushl
push
push
add
mov
ret
mov
bound
mov
sbb
and
inc
ret
xorl
sub
dec
push
call
sub
push
pop
jg
sbb
fs
xchg
sbb
sub
xor
dec
and
add
mov
dec
xlat
cli
mov
daa
jne
cwtl
xchg
mov
outsl
xor
das
push
jg
and
adc
mov
test
rcrb
xchg
aam
mov
sbb
jecxz
jb
inc
xor
mov
dec
in
adc
mov
imul
add
bound
hlt
leave
and
scas
wbinvd
repz
sbb
sub
clc
cmp
adc
or
xchg
leave
inc
or
test
pop
fnstcw
pop
pop
and
jae
call
mov
cmp
andb
push
mov
repnz
push
in
test
mov
mov
mov
pop
mov
jle
sub
scas
mov
add
movl
mov
mov
pop
scas
xchg
lock
rorb
pop
js
popf
xchg
or
int3
out
xchg
icebp
add
push
push
push
nop
pop
jp
push
out
mov
add
mov
inc
cmp
adc
pusha
fbld
insb
and
mov
and
stc
imul
xor
call
cwtl
mov
movl
jo
inc
or
cmp
inc
dec
inc
adc
mov
sbb
dec
xchg
mov
shrb
add
pop
adc
test
addl
addl
icebp
sub
sbb
das
jmp
and
sub
cld
or
jne
movsl
add
and
and
add
sarl
or
adc
mov
in
subb
jp
push
push
and
movsb
mov
aam
hlt
adc
sub
lret
jmp
aam
clc
sub
dec
stc
add
push
add
push
push
push
push
es
and
jne
pop
xor
mov
push
mov
cmc
push
cmp
add
icebp
push
jne
mov
nop
call
sub
aas
nop
xor
cmp
jne
and
jnp
push
mov
push
rolb
bound
cmp
fsubl
cmp
mov
cmp
and
push
gs
rclb
jo
pushf
push
mov
mov
repnz
xchg
xor
ficoml
adc
lret
mov
push
fiaddl
dec
jmp
and
in
inc
inc
jmp
cld
jmp
push
test
fadds
xchg
testb
push
movsl
cs
xor
jbe
inc
cwtl
cmpsl
popf
add
lcall
adc
aas
pushf
lea
inc
add
je
pop
add
fs
mov
lods
fnstsw
mov
or
sbb
pushf
cmp
jle
addl
js
add
xor
jo
jp
xchg
xchg
jbe
icebp
mov
mov
popf
enter
adc
aam
dec
sbb
jnp
push
nop
pop
dec
push
outsl
mov
loopne
dec
sbb
adc
cmp
lds
cmp
push
test
loop
xchg
popa
add
push
fs
mov
mov
sti
mov
lcall
sub
dec
xor
pop
add
movsb
rclb
add
inc
fsts
dec
cmpsl
or
cmp
int3
push
rol
or
pop
push
push
stos
into
cmpsb
mov
mov
mov
xchg
pop
or
push
inc
mov
lahf
addr16
out
negl
and
lds
push
arpl
cltd
adc
adc
adc
push
xchg
mov
mov
add
das
mov
std
push
cli
pop
shll
ljmp
lahf
lock
jb
xchg
inc
jne
lcall
ja
les
mov
add
dec
fists
jo
and
push
sbb
ss
mov
sbb
in
lea
adc
cmp
and
iret
loopne
cmpsb
push
push
mov
and
jo
xor
jg
push
xor
sbb
pop
or
mov
clc
jo
arpl
mov
scas
xor
mov
pop
mov
mov
orl
mov
adc
pop
add
adc
ds
leave
push
add
test
orl
mov
xchg
test
in
lock
roll
or
enter
or
pop
hlt
jmp
and
dec
ljmp
adc
sub
jl
mov
sub
addb
xor
outsl
mov
add
xchg
mov
mov
scas
add
pop
dec
pop
xor
and
les
mov
cld
jmp
sbb
es
lahf
add
cmp
je
inc
push
int3
pop
jl
and
push
cmp
lods
sub
dec
out
lock
dec
out
jmp
jae
rolb
je
gs
outsl
loop
das
cmp
or
insb
push
inc
push
sub
pop
daa
xchg
cmpsl
push
push
out
cmp
jbe
cmpsl
mov
or
jnp
loopne
adc
lcall
fiaddl
js
xchg
or
adc
mov
ret
cmpsb
push
stos
and
aas
mov
andl
lods
pop
inc
nop
lret
lret
or
stos
jnp
xor
inc
mov
loope
dec
add
lods
ret
xor
das
dec
mov
add
xchg
clc
into
cld
add
es
xchg
jae
lea
shll
add
dec
popa
add
jmp
test
adc
push
loopne
or
imul
loopne
rcll
sub
fiaddl
and
stc
pop
pop
sub
push
sbb
adc
xchg
mov
adc
cmp
push
jo
jle
add
cmpw
sbb
cmpb
sub
push
pop
add
in
scas
jmp
pop
push
pop
mov
add
sar
inc
jmp
push
je
sbbb
mov
jns
and
pop
jns
call
add
xor
adc
orl
test
jne
xchg
dec
jl
int3
test
jl
sub
jmp
std
outsl
jg
out
cld
lcall
dec
movzwl
cmpl
push
enter
adc
rorl
out
and
gs
add
add
imul
pop
and
sub
pushf
lock
mov
and
jae
xchg
dec
in
cmc
dec
push
inc
pop
pop
in
inc
xchg
add
push
ret
adc
pop
mov
sysret
or
dec
loopne
pop
and
leave
movb
and
stos
bound
dec
cmp
jne
jb
fs
push
loope
lock
add
add
cli
pop
dec
pop
push
pop
push
dec
lods
sbb
add
shl
and
dec
es
jle
mov
js
sbb
sbb
repnz
loop
and
movsb
or
push
imul
icebp
add
popf
dec
out
inc
add
adc
or
xor
addl
sub
imul
add
push
mov
scas
clc
fldl
xchg
jne
adc
movsb
and
stc
jo
or
pop
add
adc
movsb
push
nop
xchg
xor
dec
add
lock
into
mov
aaa
mov
adc
xor
xor
push
data16
or
fwait
mov
lret
in
out
mov
inc
iret
mov
lock
test
jle
sub
jmp
fiadds
mov
cld
jmp
push
mov
dec
nop
and
add
mov
mov
shll
xchg
mov
xor
push
outsl
pusha
sub
xor
adc
popa
dec
repnz
and
push
add
sbb
jne
inc
pusha
xor
and
add
push
add
dec
mov
pop
dec
daa
rcrb
add
jp
cmpl
pop
je
or
in
aaa
in
adc
test
hlt
imul
mov
and
shl
push
cmp
mov
test
jecxz
sbb
mov
adc
sbb
jl
jne
dec
sub
inc
hlt
ret
call
lea
out
pusha
push
ret
pop
inc
lret
test
pop
jne
imul
dec
movsl
shrb
or
cmp
push
and
and
scas
push
sbb
icebp
and
cmp
movsl
aad
lods
adc
push
or
scas
xor
xchg
sbb
idiv
fists
dec
pushf
nop
mov
cmp
jnp
and
loopne
dec
scas
and
xchg
mov
lock
inc
pop
sbb
aam
lock
inc
dec
or
mov
psubw
or
das
mov
push
lds
jle
lods
or
cli
dec
inc
fnstenv
stos
xor
adc
shlb
lock
nop
aaa
lahf
in
or
adc
addb
inc
mov
push
leave
push
xor
sub
jmp
push
ret
test
inc
sti
dec
xchg
test
add
dec
jmp
dec
ja
clc
ret
dec
or
jae
sub
lea
jle
xor
push
inc
aaa
mull
pop
lea
jmp
push
push
das
mov
inc
inc
pop
pop
push
sbb
test
testl
sbb
xor
adc
pop
dec
fisttps
sub
ljmp
pop
in
inc
fimull
xlat
push
inc
push
dec
or
sub
pusha
adcl
jl
pusha
add
xchg
xor
inc
add
mov
inc
mov
add
push
sbb
daa
add
or
mov
push
sbb
mov
sub
adc
dec
nop
lods
inc
mov
xor
nop
cmp
pop
sub
push
ficompl
mov
dec
clc
push
dec
mov
loope
sub
push
or
inc
add
jmp
repz
sbb
dec
inc
fcmovbe
fimuls
sub
mov
mov
pop
dec
mov
sbb
inc
inc
shrl
in
push
scas
xlat
pop
xchg
js
repz
cmp
xor
xlat
sbb
push
push
xorl
push
stos
sbbl
or
and
push
test
jecxz
pop
pop
fwait
ljmp
dec
test
push
dec
mov
add
push
cmp
push
fdivrp
push
sbbb
jmp
movsb
xor
pop
jae
pop
cmpb
cmc
insl
adc
add
xor
pop
jge
clc
mov
add
rolb
int3
into
rclb
add
xchg
push
pusha
add
push
push
iret
push
clc
mov
pop
mov
sub
pop
dec
mov
dec
pop
clc
push
mov
repz
cmpl
jo
pop
sahf
movsl
inc
mov
or
loop
movsb
adc
or
push
insb
xchg
sub
dec
xorb
push
int
ret
fmuls
dec
shr
inc
fisubl
es
mov
sahf
data16
push
fidivrs
inc
mov
jo
mov
or
push
adc
fdivl
push
sub
enter
push
icebp
fistps
sbb
ficoms
repz
movsb
lret
cmp
xor
jle
cld
out
dec
cld
out
jmp
add
loop
and
movsl
sub
dec
es
xor
pop
pop
in
fisubs
lea
xchg
mov
sub
add
jae
push
and
and
faddl
push
xor
ret
sub
cmpsb
cmp
cmpsb
cld
daa
test
leave
in
or
xor
mov
lods
jno
mov
dec
mov
mov
push
push
push
pop
repz
push
xor
pop
mov
adc
rclb
cmp
pop
rcrb
cmc
cmp
and
xchg
call
adc
mov
cwtl
jmp
push
jg
lods
clc
repz
cmp
outsb
or
out
pop
arpl
aaa
add
rolb
bound
ret
push
out
mov
pop
sub
arpl
xor
mov
ljmp
outsb
push
or
add
leave
cmpsb
cmp
test
or
xor
push
inc
or
cmpsl
jns
jns
xor
and
in
sbb
pushf
and
cmp
test
ret
dec
adc
mov
xor
xor
shrl
xor
jne
adc
mov
dec
mov
dec
pop
cltd
mov
inc
ja
test
xchg
or
cmp
dec
pushf
inc
inc
dec
dec
xor
sbb
or
jns
cmp
or
adcb
adc
pop
and
test
xor
dec
sub
subb
mov
or
enter
mov
lret
lea
xor
nop
jo
insl
push
cli
and
mov
mov
stc
addr16
cmp
or
pop
popa
mov
scas
and
in
push
orb
push
pop
or
jae
aaa
ljmp
call
push
fcom
push
fs
test
lock
addr16
xor
les
inc
add
pop
test
das
je
push
sub
insl
iret
rclb
and
into
sub
lods
xchg
inc
rorl
int
loopne
lock
mov
lods
fs
push
test
rorl
lea
addl
insl
sbb
inc
lods
sbb
mov
lea
jae
push
jb
sub
sub
leave
xor
xor
or
sub
sahf
lods
es
mov
imul
mov
shll
push
add
mov
cld
cltd
pop
shlb
push
cmpsb
out
cwtl
mov
popf
or
push
or
mov
adc
inc
daa
push
mov
insl
pusha
add
xorb
int
push
and
icebp
or
les
mov
add
movsl
dec
sub
push
push
nop
xor
lea
movsb
or
or
in
adc
loope
pushf
xor
inc
mov
adc
cmp
push
or
xor
inc
mov
inc
add
pop
adc
mov
cld
bound
shrb
push
xchg
adc
cmc
rolb
or
adc
jg
popa
stos
enter
and
movb
xchg
push
es
adc
cltd
xchg
or
sub
or
leave
xchg
mov
and
testl
test
test
ds
shlb
mov
fsubrs
sbb
in
xor
pop
pop
test
or
addl
out
lods
or
imull
div
add
movsb
sbb
add
insb
dec
sbb
jns
test
jecxz
inc
xor
jp
xchg
xchg
push
sub
loop
jne
lea
mov
movsl
pop
cmpsl
add
orl
xchg
sub
dec
and
push
mov
int3
insl
lahf
sub
lahf
hlt
push
xor
rcll
push
shrb
sti
sub
icebp
in
lods
andl
sbb
mov
and
pusha
mov
push
fwait
mov
inc
lock
adc
repnz
ss
outsl
and
sbb
fucomp
pop
cmp
mov
and
shlb
inc
pop
jae
jne
nop
sub
fstps
dec
cmpsb
and
push
dec
lcall
aam
inc
cmp
xchg
jp
hlt
jge
in
popf
cld
icebp
mov
cs
sub
stos
in
in
mov
mov
enter
inc
aas
movsl
sbb
mov
lods
cltd
xchg
xchg
mov
or
rol
push
jo,pt
add
fdivrs
rcrb
imul
test
mov
insl
inc
rcrb
dec
flds
test
jb
or
pusha
mov
test
insb
int
cs
pop
xor
and
das
mov
mov
sub
push
dec
sub
pop
dec
sbb
movsb
sub
lret
shl
push
sub
xchg
fisubs
cmp
push
xchg
popf
orb
movsb
scas
jecxz
les
pop
push
xchg
bound
sub
inc
hlt
adc
or
add
pop
sub
sub
loope
mov
in
inc
mov
outsl
bnd
inc
out
adc
lcall
mov
stos
jecxz
rcll
in
cmp
add
push
xor
add
addl
xor
and
dec
mov
mov
imul
push
pop
inc
jo
push
pop
dec
movsb
push
or
mov
mov
dec
add
add
lds
movsb
xor
ret
xchg
add
lret
sti
pop
aaa
ret
push
pop
rcrb
adcl
sets
push
lods
or
js
or
inc
cli
xchg
out
push
push
or
jno
cmp
int
cmp
inc
pop
and
inc
jns
jp
add
push
and
mov
sarb
sbb
lods
sub
or
out
dec
push
ret
pop
adc
xor
outsl
stos
ret
cmpsl
add
lcall
test
loope
add
movzwl
add
pop
dec
movsl
loopne
pop
sbb
mov
movsb
shll
fstp
pop
aaa
or
inc
sbb
inc
or
jae
lret
pushl
rcrb
jnp
xchg
push
fisttpl
xor
lods
jns
cmp
jne
sbb
popa
mov
push
cmp
insb
push
jnp
or
adc
jo
cltd
push
push
jp
mov
insl
mov
xor
jno
popf
add
xor
bound
mov
add
mov
mov
sbb
inc
jg
cmpsl
data16
xor
insb
les
or
or
mov
movaps
movsl
imul
or
insl
out
gs
xlat
sbb
push
xor
outsl
or
sarl
rol
push
inc
pop
mov
mov
mov
jb
adc
loopne
repnz
cmpsb
int3
sbb
pop
jle
loopne
nop
repz
in
pop
loope
inc
clc
inc
loop
mov
xchg
sub
inc
ret
add
or
insl
adc
in
and
lcall
les
mov
aam
outsb
inc
clc
xor
jbe
jno
push
mov
mov
pop
pop
movnti
mov
adc
sbb
adc
aam
scas
cmp
and
pop
xor
pushf
pop
add
faddp
push
mov
xor
mov
das
xlat
pop
jo
sub
jae
cltd
insb
xor
arpl
aam
dec
mov
and
ss
push
or
repnz
test
pop
insl
sbb
bound
out
adc
sbb
inc
jmp
cmpsb
outsl
push
pop
add
repnz
lahf
inc
add
sbb
adc
and
pusha
push
lds
cwtl
xor
adc
adc
daa
stos
jno
jecxz
test
pop
popa
add
sub
xchg
sub
loop
jl
es
lods
jb
out
adc
sub
scas
jns
das
mov
sbb
icebp
push
xor
xchg
sbb
rorl
sbb
cli
inc
sub
dec
sub
daa
pop
pop
push
nop
popa
xchg
xor
xor
popf
arpl
xchg
loop
filds
sbb
stos
das
pusha
stos
dec
ds
inc
es
push
mov
sbb
ja
xchg
ss
mov
aaa
hlt
insl
pusha
or
xchg
movsl
pusha
inc
loop
push
dec
adc
cmp
icebp
lea
push
jmp
aaa
add
out
mov
jns
dec
inc
sbbl
mov
sub
cmp
sbb
out
and
add
aad
cmp
inc
push
outsb
sbb
xorb
outsb
pop
push
outsb
xchg
pop
nop
stos
and
or
or
or
ds
jo
jmp
and
mov
and
add
mov
add
insl
xchg
sbb
sarl
out
add
pop
push
or
nop
xchg
add
clc
in
push
pop
mov
push
icebp
add
subb
rcll
inc
mov
jge
fucomip
pop
nop
or
push
push
mov
mov
mov
into
add
aas
movsl
xor
out
push
xor
push
mov
or
ss
scas
jp
int
inc
push
adc
push
and
stos
movsl
push
sbb
enter
jmp
xor
add
and
sbb
enter
adc
je
xchg
dec
dec
mov
das
mov
inc
and
mov
sub
adc
sti
add
ret
xchg
add
sbb
dec
cmp
testl
sub
or
mov
cmpsb
sbb
xor
lds
mov
stos
mov
test
cmp
pop
mov
mov
shr
push
sbb
and
js
mov
inc
inc
or
pop
or
cs
ret
adc
inc
xor
lahf
mov
in
jne
and
or
loope
sub
test
xchg
sbb
adc
inc
dec
mov
jg
aam
inc
in
push
adc
mov
aam
or
pop
in
add
inc
mov
add
fcmovbe
adc
pop
inc
frstor
adc
and
or
sti
push
icebp
jl
jmp
jecxz
aaa
sbb
nop
mov
adc
incl
mov
mov
pusha
and
inc
or
into
inc
push
popa
ss
or
or
mov
cmp
sbbl
outsb
push
adc
fisttpll
dec
xor
inc
mov
je
cs
sbb
dec
mov
mov
and
loopne
add
call
popa
push
mov
xchg
enter
cmpl
stc
or
or
dec
pop
stos
in
mov
push
jae
in
jnp
les
xchg
out
inc
cmp
es
hlt
adc
sbb
je
or
and
or
pop
add
push
jle
jne
sub
out
das
fcomps
mov
push
adc
sub
adc
jg
mov
cmp
int3
rcrb
pop
dec
sbb
test
scas
ss
mov
sbb
add
push
shl
xor
cmp
je
or
adc
push
pop
loop
popa
pop
ret
mov
add
and
mov
insl
fs
icebp
or
into
nop
sahf
imul
jnp
mov
lods
mov
mov
jnp
jbe
sub
sub
or
adcl
add
push
pop
push
push
push
sub
ds
pop
lret
fs
mov
cmpxchg
inc
push
push
fnstcw
out
inc
sbbb
sub
pop
andl
mov
xor
ret
pop
sbb
jecxz
lret
cwtl
pop
mov
testb
inc
jl
xchg
sahf
pop
subb
daa
push
or
inc
stc
jb
inc
xor
and
mov
rclb
outsb
in
sub
setp
pop
aas
push
add
xchg
or
sbb
or
call
and
cltd
into
cmp
call
mov
outsl
aam
pusha
add
das
fnsave
and
das
mov
sbb
or
rorl
lock
mov
pop
xor
iret
push
sub
lea
push
lods
or
add
sbb
sbb
adc
sbb
push
leave
ret
fwait
cs
hlt
inc
add
xchg
adc
mov
add
test
push
roll
mov
cmp
sbb
mov
cwtl
push
fucom
pop
fcoml
fcom
adc
mov
ret
adcl
outsl
es
ret
mov
test
or
fwait
lret
dec
pop
mov
fisubs
jmp
into
test
push
aas
and
addr16
stos
jne
pop
adc
ret
xchg
loop
add
push
and
lahf
fistpl
sarb
fbld
jbe
dec
push
pop
or
or
aam
xchg
or
add
xor
mov
ret
popf
dec
les
cmpsl
xchg
xor
xor
xor
mov
inc
adc
bnd
mov
pop
in
pop
ret
adc
jne
and
sbb
or
clc
xchg
fwait
sbb
cltd
or
add
pop
popf
adc
cmp
pusha
push
pop
mov
xor
in
jb
inc
and
test
jmp
push
jbe
movl
lods
inc
push
ja
inc
movl
call
adc
pop
sti
push
and
add
and
scas
jge
pop
cmp
and
sub
cmp
fiadds
test
push
cmp
fidivl
adc
sbb
push
mov
mov
sbb
or
xchg
lds
adc
adc
loopne
push
cmp
outsl
adc
sub
adc
push
mov
push
rcrb
add
pop
adcl
in
fisttpll
int
mov
pop
in
data16
insb
pop
add
lea
fsubs
data16
mov
sbb
pusha
stos
cmpsb
xor
adc
mov
pop
decl
fstl
sbb
shll
rcrl
mov
jle
push
mov
and
jmp
xchg
xor
jle
vmovddup
adc
cmp
push
cmp
jle
cmp
fisttps
push
cmp
cmp
cmp
mov
mov
and
inc
jmp
repnz
movw
xchg
ljmp
hlt
sahf
cld
les
dec
fwait
inc
or
fs
pop
idiv
xchg
test
rolb
adc
xor
mov
sbb
lods
ficoml
cmpsb
or
bound
cmp
in
jnp
icebp
test
mov
add
test
sub
dec
outsl
call
mov
popa
or
hlt
repz
lea
mov
xorl
arpl
sub
and
aaa
dec
xlat
or
mov
movsl
or
cmp
jb
adc
and
xchg
lret
adc
inc
sub
push
xor
mov
cmp
push
cmp
mov
int
xor
xchg
xor
sarb
mov
add
orb
insl
lock
dec
jb
push
dec
jb
popf
rorl
dec
or
pop
mov
pop
pop
pop
pop
or
roll
or
mov
pop
leave
and
shlb
or
add
dec
and
daa
and
ss
push
push
rclb
insl
or
in
or
jno
jbe
andb
je
mov
add
sarl
xor
pop
mov
pop
adc
adc
mov
dec
xor
pushf
xchg
bound
sbb
arpl
data16
inc
nop
mov
push
sub
rclb
and
xchg
and
or
xchg
shlb
pop
cwtl
push
lcall
rcl
dec
and
dec
add
xchg
popa
and
push
pusha
push
sahf
popa
ret
mov
fs
rcr
jne
push
or
jecxz
rcl
adc
int3
add
inc
subb
ficompl
push
lock
and
sbb
fdivrs
and
sbb
sub
sub
sbbl
test
jg
ss
mov
sbb
stc
adc
in
pop
test
push
outsb
and
xchg
sub
loopne
mov
push
fstl
and
ljmp
push
inc
pop
mov
sub
dec
adc
bound
push
fsub
cmpsl
std
cmp
mov
test
hlt
mov
cmp
push
add
add
orb
je
popf
adc
add
adc
or
orb
leave
adc
and
mov
pop
add
adc
pop
add
or
add
hlt
inc
or
adc
test
mov
xchg
sbb
dec
test
loopne
push
inc
push
shrl
cmp
dec
insb
pop
mov
and
xchg
jge
xor
lret
mov
jo
adc
loope
mov
stc
fwait
inc
repnz
jae
pop
xor
out
stc
add
push
rol
je
mov
sbb
push
mov
mov
pop
push
and
sbb
sbb
push
add
js
add
push
adc
sbb
icebp
or
add
fimuls
enter
jne
lea
add
cmc
add
xor
push
icebp
xchg
fsubl
mov
lock
repnz
shrb
lods
mov
cmpsl
cmpsl
cmp
or
aam
lds
adcl
add
push
stos
das
in
add
sub
lock
enter
fistl
sbb
pop
or
and
or
cmp
or
in
mov
add
ljmp
jbe
lea
mov
add
outsl
add
jp
sbb
add
pop
sub
arpl
addr16
sub
popl
repz
and
sub
shlb
and
pop
add
sbb
sar
inc
push
call
push
fsubs
mov
out
cmp
adc
stos
push
js
lock
aad
pop
push
loopne
adc
pusha
or
pop
les
sbb
in
aad
mov
push
popa
stos
out
ret
cmp
jne
stc
push
insl
lea
ret
adc
into
push
popa
xchg
mov
subl
add
adc
pop
xlat
and
fildl
lea
cltd
xchg
xor
loopne
adc
inc
push
icebp
pop
adc
daa
fadds
sub
xor
enter
add
repz
pop
clc
or
push
xchg
dec
add
push
adc
dec
cmp
stos
loopne
pop
pop
adc
test
add
push
imul
or
adc
xor
notl
out
je
adc
aaa
inc
xchg
inc
push
fdivl
mov
add
mov
loop
mov
inc
and
push
pop
fldcw
and
shl
add
sub
inc
add
inc
inc
jl
dec
loop
test
xchg
testl
sub
das
add
push
mov
inc
push
ss
inc
inc
push
std
ret
out
and
popf
push
mov
xor
mov
aaa
je
mov
out
sarb
add
jge
js
jne
sub
insb
movsb
pop
inc
sbb
or
xchg
movsl
sub
push
dec
call
mov
dec
fldl
loopne
les
clc
inc
fidivl
enter
movl
pop
push
push
fldl
push
sbb
mov
add
fstpl
and
fsubrl
in
mov
fstpl
xor
pop
cmc
decb
fbstp
mov
jo
jnp
xchg
add
and
add
dec
clc
loope
fsubrp
pop
aaa
push
cmp
push
inc
repz
insb
jns
repnz
sbb
mov
in
ret
jb
dec
ss
test
iret
and
cwtl
jbe
mov
dec
add
dec
pop
ss
lods
outsb
testb
or
xor
fwait
scas
aam
nop
mov
ss
sub
adc
or
shll
jbe
imul
mov
jge
or
neg
subb
clc
add
test
pop
loop
pusha
pop
xor
insl
dec
mov
popa
bound
popa
movsl
jo
xorb
shrb
add
jnp
ja
and
lock
mov
js
bound
fcmove
ret
and
dec
pop
push
rcrb
sbb
jp
add
add
push
pop
cltd
push
pop
fnsave
jnp
sbb
add
or
add
ret
push
daa
and
mov
jb
pop
add
leave
shld
add
ja
jb
clc
lahf
add
ss
push
inc
mov
push
add
push
je
lods
roll
or
add
mov
std
ds
leave
adc
mov
push
adc
push
push
pusha
pop
addb
int3
or
or
cli
adc
push
push
push
fiaddl
dec
pop
pop
dec
leave
adc
dec
arpl
dec
pushf
push
mov
fmuls
dec
push
sub
cmp
mov
shlb
shlb
push
testb
notb
add
adc
sub
pusha
call
sbb
sub
dec
inc
cmpw
jne
mov
cld
mov
adc
inc
inc
cld
cmp
sti
mov
jmp
push
push
jl
mov
mov
aad
repnz
cmp
or
push
loopne
enter
push
cld
mov
push
push
push
clc
jmp
push
push
pop
in
jnp
mov
xor
xlat
int
mov
push
orb
inc
xor
jb
roll
sbb
ds
mov
ret
lcall
add
sbb
insb
aaa
jle
sbb
inc
add
cmp
sbb
mull
jnp
fwait
jp
std
and
je
mov
add
enter
jbe
xchg
ja
xor
movsl
adc
push
movsl
jnp
fld
sub
cmp
loopne
cld
rcll
pop
js
sbb
fxch
pop
movsl
sahf
pusha
adc
dec
adc
test
pop
pop
and
xor
pushf
shr
jmp
push
or
movsb
std
mov
test
pop
xchg
xchg
lock
xor
movsb
xchg
pop
nop
in
aaa
mov
pop
sub
rcrl
pop
js
test
or
rolb
pushf
stc
es
push
test
mov
lret
xchg
add
lock
pop
xlat
andl
add
inc
sarb
push
add
push
lods
mov
adc
pop
sbbl
fisubl
pop
je
arpl
ds
fwait
pop
ret
pop
add
dec
cmpsb
add
aam
mov
ja
jne
nop
xchg
sbb
cmp
push
rclb
xor
push
xor
or
jno
aaa
fwait
repnz
mov
xchg
xor
int
fs
ret
test
mov
jb
xchg
push
ja
in
or
and
mov
sbb
pop
fidivl
xor
sbb
fstpt
pop
sbb
cmc
loopne
repnz
cmpsb
repz
in
push
je
imul
or
test
pushl
sbb
add
jecxz
push
rep
nop
push
int3
test
add
movsl
push
sbb
or
loopne
subl
push
jo
hlt
dec
push
sbb
mov
adc
pop
movsl
pop
aam
int
orb
loopne
cli
movsl
psrad
aas
icebp
xor
movsb
ret
mov
or
std
push
lods
inc
pop
rclb
test
push
ja
xor
add
mov
push
jmp
pusha
jmp
jno
outsb
daa
mov
jge
ljmp
icebp
and
xor
out
jle
inc
mov
fs
add
add
sub
jg
je
dec
je
add
sbb
dec
jne
dec
mov
push
push
in
push
xchg
or
dec
pushf
or
jge
cmpsb
push
push
sarl
or
mov
sub
push
test
in
mov
push
xchg
out
cmp
jnp
cmpl
mov
inc
mov
cmp
hlt
push
push
push
in
inc
push
andb
adc
push
cmp
nop
fs
enter
leave
inc
or
push
pop
push
push
stos
mov
out
sub
push
adc
fs
xchg
or
nop
inc
push
cmp
xchg
inc
push
cmp
lods
enter
xor
or
dec
fs
enter
sarb
xchg
call
inc
push
cmp
subb
lock
and
mov
call
fs
xlat
insb
loope
jmp
decl
gs
repz
adc
cmp
repz
pop
orl
mov
iret
repz
rcr
out
sti
add
nopw
sub
jns
dec
push
pop
imul
jge
fwait
xchg
sbb
stos
jo
inc
aaa
push
pop
aam
call
imul
xchg
shl
lret
ret
dec
dec
lock
mov
and
pushf
xor
nop
sti
fwait
ret
dec
je
xchg
int3
repz
cmpl
pop
int3
hlt
fisubs
rol
jno
or
xchg
xorb
mov
aam
fwait
jmp
jl
mov
shrb
lcall
test
es
push
and
out
fcompl
test
test
mov
fmull
fisttpll
add
lods
pop
faddl
dec
or
push
mov
pop
movsb
and
xor
sbb
loope
int
sbb
in
fs
test
adc
mov
test
and
mov
adc
pop
roll
sbb
mov
dec
mov
cmp
cmp
cmpb
jge
jge
movsb
pop
push
cmp
push
push
hlt
cmpsl
sub
shl
add
dec
out
dec
mov
adc
fcompl
xchg
fistpll
mov
shll
sub
ja
or
and
insl
xchg
lea
daa
jns
or
push
xchg
je
push
add
cmovnp
enter
add
cmp
sarb
sub
adc
cltd
fadds
shrb
pop
dec
cmpsb
cwtl
nop
xchg
adc
rclb
or
mov
pop
jnp
cmp
or
mov
orl
test
cmp
cmp
xlat
pop
push
adc
imul
mov
jge
cmpb
or
mov
xchg
pusha
mov
pop
xchg
mov
push
inc
xchg
and
stos
pop
enter
out
in
mov
mov
mov
pop
adc
xor
jp
rcll
hlt
adc
mov
push
lea
fildl
push
mov
dec
leave
sub
int3
mov
mov
dec
mov
mov
add
cmp
mov
add
icebp
push
dec
jp
jmp
fisttpl
fidivl
imul
cwtl
fwait
dec
mov
out
cmpsb
xor
push
cmp
push
and
cmp
push
das
mov
fisubrs
insb
push
pop
jl
rcrb
jp
mov
cmpsb
and
mov
dec
inc
mov
insb
mov
push
jle
icebp
xor
es
and
mov
xor
sbb
dec
lcall
dec
lcall
dec
lcall
dec
lcall
ss
sbb
add
popa
mov
add
popf
mov
test
jl
mov
hlt
stos
mov
test
into
mov
addl
push
insb
xlat
incb
mov
mov
sbb
repz
sbbl
cmpsl
cmp
enter
or
push
pop
ret
in
vmread
ljmp
pop
decb
loopne
rolb
imul
mov
sbb
gs
add
fs
stos
ror
sbb
in
push
cltd
sbb
and
mov
mov
or
dec
jns
sbb
js
lea
inc
rcrb
sub
sbbl
sbb
es
test
xor
test
and
jge
or
xor
addl
cmp
inc
mov
push
mov
cmp
pop
push
mov
cmpsl
mov
mov
mov
xchg
push
xchg
sahf
xor
rcrl
xchg
sbb
add
popf
pop
rorl
mov
lea
test
rorl
pop
test
adc
sub
cmp
int3
lods
addr16
xchg
cmp
mov
sub
xor
movsb
jo
jp
aas
push
adc
inc
test
es
imul
es
and
bound
in
aaa
loope
orl
dec
enter
ss
push
cmp
nop
adc
push
sbb
push
inc
or
pop
sbb
inc
and
ret
inc
mov
in
adc
sbb
push
push
outsl
into
ret
sub
xchg
jo
scas
movsb
adc
add
jno
pusha
and
inc
inc
mov
dec
pop
pop
mov
test
and
xlat
shlb
inc
adc
lock
adc
outsl
mov
jmp
push
sub
ljmp
stos
mov
in
sub
mov
dec
fcoml
movsb
mov
dec
dec
popf
and
and
and
push
cmp
pop
sbb
push
mov
test
sbb
iret
ja
lods
mov
lret
and
movsl
shlb
sbb
pop
sub
test
jne
or
pusha
mov
xor
clc
test
push
popa
or
mov
sbb
xor
push
nop
pop
and
or
xor
mov
fimull
aam
or
xor
and
jl
sbb
and
add
loop
call
imul
pusha
nop
sbb
push
and
push
xchg
ret
push
arpl
push
in
in
mov
jne
inc
aas
jo
and
mov
or
cltd
outsb
dec
repnz
mov
cmp
mov
js
gs
jl
add
enter
scas
jne
test
or
dec
sahf
inc
sahf
nop
push
call
lcall
dec
sahf
fsubl
adc
adc
inc
repz
or
add
xor
add
and
pop
mov
jns
adc
push
inc
test
adc
push
mov
pop
push
enter
fidivl
sbb
mov
in
push
adc
int
negl
lods
fwait
push
mov
scas
pop
xchg
lods
sbb
test
mov
pop
imul
enter
push
mov
imul
cltd
nop
data16
mov
mov
and
mov
orb
ret
adc
imul
inc
cmp
mov
nop
dec
dec
fs
pop
cmp
mov
inc
test
sbb
nop
adc
push
outsl
inc
sbb
cwtl
xor
int
pop
pop
push
inc
popa
sub
pop
int3
adcl
inc
mov
addr16
dec
adc
adc
mov
movsb
pushf
xchg
pusha
nop
jno
mov
lods
shlb
test
out
mov
and
je
movsb
cltd
or
add
or
pop
sbb
leave
inc
sbb
popa
push
fwait
popa
xor
xor
or
sbb
and
les
inc
pop
lret
xor
pop
inc
mov
addb
inc
xor
loopne
outsl
imul
or
push
rorl
repnz
test
push
and
cld
icebp
sbb
inc
xor
jo
out
adc
dec
cs
roll
sub
sbb
jge
faddl
add
mov
or
lahf
movb
lods
add
mov
shlb
cmpb
adc
outsl
or
aad
sub
sbb
divl
adc
sub
inc
or
push
mov
or
data16
sbb
adc
mov
or
imul
mov
test
jle
sbb
setb
inc
icebp
push
popf
sub
push
mov
xor
loop
mov
dec
sub
pop
fmuls
xor
leave
push
mov
ret
cmp
fdivrl
and
push
mov
arpl
inc
ret
loope
mov
mov
adc
enter
adc
mov
inc
pop
dec
repnz
sub
mov
mov
or
rcrl
aam
sbb
fstpl
or
fs
fiaddl
imul
pushl
in
popa
add
push
xchg
mov
xchg
cltd
aaa
cmpsl
xor
jl
ror
mov
sahf
jge
pop
dec
xchg
orb
nop
pop
and
fwait
and
mov
adc
and
push
sub
test
and
and
movsl
pop
and
jl
andl
sub
push
pop
es
sub
pop
daa
push
fs
sub
mov
sub
and
lods
enter
xor
pop
insb
sub
dec
dec
movsl
pushf
shrb
dec
movsl
pop
loopne,pn
dec
cmp
mov
lea
mov
in
dec
dec
xlat
addb
and
je
dec
pop
adc
insb
mov
notb
clc
pop
inc
push
cs
or
popa
xor
fisttpll
loop
dec
popf
das
cmp
rorl
or
shlb
inc
lcall
movsb
cltd
sub
or
mov
movsb
cltd
nop
fs
push
and
movsb
cltd
nop
and
lcall
mov
pop
cwtl
push
or
movsb
nop
sbb
sbbb
sbb
xor
shlb
sbb
mov
int
sbb
pop
mov
dec
dec
rclb
movsb
loop
sbb
sahf
cmp
adc
rorb
mov
rcr
push
js
in
orl
add
les
andb
stos
pop
shll
mov
aaa
gs
xor
cld
rcl
int3
movsb
adc
icebp
fdivrs
sbbb
jle
cmp
or
and
bndstx
dec
cwtl
mov
jns
push
imulb
pop
jecxz
repnz
pop
and
scas
aam
xor
shll
sbb
pop
or
and
pop
jg
test
cmp
xor
fimull
and
push
jmp
xchg
cmp
cmpsb
adc
sub
and
sub
inc
inc
fnstenv
cmovns
ret
ss
dec
inc
and
pop
mov
inc
cmp
popf
mov
push
inc
or
cmp
shlb
cmc
xchg
pusha
jl
mov
push
movsl
daa
xchg
lock
decb
call
jae
cmp
lcall
cmp
adc
inc
dec
test
cmp
rcrl
stos
add
popf
ljmp
push
jo
fs
add
test
repz
lods
imul
outsb
addr16
mov
movsl
ja
test
cmp
sub
test
aam
mov
std
add
addr16
jmp
in
add
mov
stc
aad
mov
ror
pop
lret
mov
add
jl
fidivrs
test
arpl
pop
inc
adc
mov
je
inc
xor
repnz
cmp
inc
andl
sub
push
cmp
cmp
outsl
sarl
push
push
clc
or
push
jbe
add
sub
ret
or
call
xchg
mov
mov
lcall
jb
adc
and
xor
pushf
lea
and
inc
cmp
loopne
cmp
sbb
push
lock
jbe
mov
xchg
cmp
jne
inc
add
mov
jl,pt
dec
lods
or
push
addb
mov
mov
test
push
or
iret
jne
mov
sub
add
pop
shl
cmp
jae
inc
adc
cmp
loopne
sub
call
jmp
rorl
add
or
scas
in
cmpsb
adc
mov
ret
adc
inc
and
test
jecxz
inc
add
sbb
adc
daa
inc
add
dec
jnp
roll
xchg
mov
mov
or
jne
mov
xlat
aad
pop
inc
js
dec
or
ds
jne
call
mov
push
loopne
sbb
imul
adc
rcll
add
in
ds
pop
adc
lret
jo
sbb
push
sbb
and
mov
add
dec
pop
inc
jbe
xchg
pop
push
jo
jl
sbb
cmpsb
sbb
sub
fmuls
xchg
data16
daa
ret
xchg
sbb
pop
push
jmp
shl
adc
inc
enter
imul
xchg
jae
sti
decl
add
ds
jl
or
je
adc
jg
je
mov
inc
jmp
movzbl
movb
movsbl
shr
mov
aaa
pop
mov
and
mov
nop
inc
mov
addl
xchg
clc
mov
test
jo
cmp
pop
cltd
ret
inc
pop
nop
bound
mov
mov
loop
cmp
test
push
mov
hlt
pop
adc
fiadds
pop
dec
push
mov
jnp
adc
shrb
lods
rorl
orl
in
mov
push
xor
outsb
inc
ss
add
mov
pop
cmc
ss
mov
sbb
xchg
lock
pop
addb
cmpb
je
dec
fisttps
in
add
in
push
mov
pushf
inc
lret
popl
wbinvd
jae
xchg
inc
pop
pop
cmp
sbb
fadds
xor
adc
jne
stos
lret
pusha
push
jnp
push
add
enter
je
cmp
cmp
addr16
dec
and
jecxz
outsl
loop
add
mov
sbb
mov
push
mov
mov
add
sbb
data16
xlat
fildll
outsl
test
ficomps
testb
pop
jp
inc
xchg
imul
inc
mov
jbe
xor
jno
xchg
dec
arpl
int3
push
dec
loopne
rorb
mov
flds
loopne
xor
sub
dec
imul
nop
sbb
sbb
mov
loope
push
push
dec
push
xor
bnd
jne
out
scas
mov
cmp
or
adc
popf
xchg
aad
orb
fistpll
ret
pop
lock
xchg
rolb
pop
add
pop
sbb
sub
or
jg
outsl
sub
jle
dec
sub
mov
xor
xor
cli
call
sbb
mov
xor
and
jmp
cmp
add
lret
xor
mov
sbb
flds
xor
fs
ss
loop
mov
dec
add
dec
loope
xchg
jl
cmp
lea
cmp
add
pusha
adc
xchg
roll
in
insl
orb
pop
clc
fnstenv
inc
mov
pop
popl
sub
dec
pop
dec
sub
or
nop
lods
dec
add
sbb
test
xchg
sbbb
leave
cmp
adc
jbe
sub
sbb
fadds
sbb
aad
xchg
sar
test
inc
mov
or
add
aam
inc
mov
out
mov
sub
cmp
inc
gs
sub
or
sbb
dec
add
pop
loope
sbb
jbe
test
fcomps
cmp
aas
cvtdq2ps
xorb
shrb
movsb
es
adc
pop
stos
fstpt
jecxz
cwtl
cli
jne
dec
mov
xchg
or
fmuls
xchg
cld
or
xchg
test
inc
rol
xchg
fldl
out
out
out
pop
push
test
fistps
lea
aaa
xchg
and
jle
cmc
xchg
jno
in
movsl
adc
sub
loope
dec
add
out
dec
pop
jl
or
addl
fcoms
adc
andb
dec
fmull
and
sub
cmp
rorb
dec
in
popa
fmuls
inc
dec
hlt
push
inc
sbb
add
add
and
stos
add
nop
add
fsub
or
cmc
inc
movsl
js
fstpt
mov
pop
stos
int3
enter
lock
sbb
cmp
lea
sarl
xchg
int3
repz
roll
mov
aaa
add
add
dec
push
add
and
cltd
or
add
or
bound
fistl
clc
jge
nop
test
adc
cmp
andb
sbb
sbb
xor
add
cmp
dec
xor
or
push
jne
pusha
push
jmp
inc
push
stos
add
and
dec
loopne
mov
mov
cmp
cmpsl
je
stos
mov
aas
pop
aaa
push
enter
push
rorb
cmp
notl
push
sub
and
add
jns
inc
sub
mov
cmp
enter
je
push
les
push
adcl
sub
call
adc
shl
shrb
in
mov
inc
or
in
loopne
add
or
test
push
add
sarb
mov
jmp
add
aam
dec
xor
sub
test
clc
loope
add
je
in
dec
add
sbb
xor
dec
adc
fistps
sub
cli
mov
xor
jne
je
mov
jbe
sarb
sarl
out
test
js
out
xlat
sub
sti
clc
jne
mov
adc
push
fadds
adc
cmpsb
xor
fsubs
adc
mov
sbb
jmp
cmpl
dec
adcl
enter
nop
rolb
add
push
enter
xor
mov
xor
xor
rclb
nopl
ds
notb
lea
dec
je
in
cmp
inc
jne
nop
sub
imul
pop
fsubrs
add
push
dec
xchg
add
cmp
daa
cmp
mov
or
scas
dec
shrb
xor
or
dec
popf
shll
xchg
call
rdtsc
xor
enter
fst
loopne
sbb
mov
xor
lods
bnd
or
aad
or
lret
clc
inc
das
je
aad
xchg
mov
dec
lea
lea
jns
jnp
and
into
outsl
das
mov
push
sahf
fcompl
lcall
cs
idivl
cmp
test
jne
es
pop
mov
pusha
clc
jb
jne
jno
ret
jle
add
mov
sbb
or
add
dec
or
dec
subl
lret
pop
sub
push
push
andb
cmp
sub
mov
addr16
sbb
icebp
mov
lea
jmp
call
add
rclb
mov
adc
in
decl
cli
mov
push
js
push
cmp
dec
mov
cmp
jle
test
arpl
pop
les
sahf
mov
enter
pop
pop
inc
add
inc
or
xchg
mul
cmp
push
xor
pop
jecxz
or
add
seta
movl
pop
out
jl
jle
mov
pop
jecxz
in
ret
ret
pop
pop
adc
mov
xor
stos
jo
fists
add
dec
je
int
pop
pop
push
fldl
hlt
dec
es
mov
fildl
hlt
cmp
adc
jne
out
jns
daa
bnd
adc
hlt
jne
or
sbb
out
jne
or
push
mov
sbb
xor
popa
subb
mov
and
mov
aad
loopne
adc
inc
sbb
add
popa
imul
xchg
adc
clc
int
inc
cld
mov
push
jl
mov
lea
fstpl
mov
dec
hlt
pop
lea
add
es
mov
sti
push
lcall
push
aaa
aam
sub
daa
mov
xchg
xchg
stc
sub
sub
shrb
hlt
int3
jae
mov
jnp
xlat
or
cmc
int3
dec
dec
sbb
lea
mov
pop
aas
or
clc
adc
in
les
or
add
sub
fdivr
add
shrb
loopne
data16
jb
adc
mov
add
jl
pop
mov
cli
and
shrl
imul
ss
xor
mov
inc
loopne
or
sbb
add
lea
adc
xchg
insl
mov
movsl
pop
call
jne
jmp
orl
dec
popa
cmp
pusha
pop
enter
xchg
test
in
sbb
mov
fs
insb
push
fs
push
jne
iret
push
repnz
xor
adc
and
pushl
pop
add
icebp
sub
out
mov
fsubp
xchg
xchg
mov
jo
js
scas
mov
jg
data16
js
data16
jae
mov
mov
loopne
or
fmuls
or
fldl
ror
inc
sbbb
pop
sbb
sbb
inc
test
lods
xchg
or
shlb
test
sarb
sahf
and
sub
or
push
enter
outsb
jmp
push
or
jb
clc
nop
adc
xor
mov
push
mov
rcr
inc
sbb
xor
lods
or
lcall
data16
and
imul
push
xchg
movsb
push
loope
mov
cmp
imul
insb
orl
mov
jnp
pop
cmp
push
in
push
adc
push
cmp
ret
bound
xorl
pop
sbb
fildll
cld
adc
dec
test
bound
mov
pushf
mov
or
add
pop
jns
pop
ret
dec
xorl
out
inc
xor
mov
test
pop
jnp
das
adcb
sbb
xor
int
push
dec
ror
inc
out
pop
fs
sbb
cmp
sbb
xchg
inc
adc
mov
mov
pop
inc
adc
push
sbb
loope
leave
and
lds
sub
xor
adc
push
sub
and
scas
xchg
pop
xor
push
sbb
lcall
and
daa
adc
inc
push
inc
and
sbb
sbb
mov
adc
pop
cmp
dec
pop
movb
lods
mov
and
inc
arpl
and
cmpsl
daa
and
add
fiadds
aaa
cmp
enter
push
lea
ret
das
add
push
dec
imul
mov
mov
inc
push
push
mov
je
inc
lcall
lods
inc
dec
arpl
xchg
pop
xor
dec
push
out
sbb
imul
rcl
push
mov
inc
inc
add
jo
shl
shll
or
mov
js
xor
and
js
inc
scas
jae
jg
dec
cld
jae
je
push
xchg
xor
mov
lea
mov
xchg
inc
mov
push
fmul
loopne
into
xchg
ds
sbb
adc
cld
inc
jns
js
adc
negb
adc
mov
test
leave
mov
push
or
or
test
sub
out
sub
add
adc
xchg
jge
repnz
hlt
fld1
mov
push
shrb
popf
cmp
add
rorb
xchg
mov
adcl
jne
jno
in
adcl
pop
loope
mulps
pop
inc
rorb
arpl
addl
fbstp
test
es
jecxz
inc
pop
mov
mov
pop
push
lock
inc
add
fmull
test
pop
inc
std
xor
sbb
and
cld
sbb
pop
popa
mov
roll
idivl
mov
sbb
dec
inc
fcomp
push
lcall
dec
adc
fisttpll
mul
pop
pcmpeqd
rolb
mov
rcrl
sbb
cmp
dec
jnp
out
sub
xchg
add
aaa
push
rorb
dec
sbb
orb
int
fs
aaa
mov
test
addl
push
xchg
sub
jne
pop
adc
iret
shrb
or
mov
push
jne
mov
incl
mov
jle
xor
int3
pop
cmp
imul
pop
pop
lock
xor
and
push
pop
lret
adc
lret
inc
cmpsb
pop
add
daa
fcoml
and
mov
and
jne
ja
xchg
adc
xorb
out
and
or
cld
ja
inc
je
push
ret
je
adc
insl
cmpsb
fisubl
stos
cmp
add
jle
addb
or
sub
adcb
xchg
mov
jecxz
sbb
out
push
pop
add
cmpsb
or
inc
jecxz
test
aam
add
loope
push
add
jbe
sub
mov
and
bndstx
cmc
mov
das
cltd
pop
jmp
out
je
je
lods
xor
call
adc
fisubrl
mov
xor
rcll
inc
sub
xchg
jne
inc
popa
sub
push
fnsave
inc
or
or
and
or
xlat
shr
xchg
mov
mov
lods
adc
xor
push
jno
arpl
aam
xor
xchg
shrb
test
pop
aad
inc
std
push
sub
mov
or
mov
sbb
popf
add
adc
mov
add
pop
mov
sub
adc
mov
pop
inc
or
es
push
or
dec
aad
xchg
fiadds
sub
or
fnstsw
add
push
mov
and
lret
mov
pop
adc
ds
cmp
in
add
lret
test
aaa
and
lea
and
sarb
dec
xchg
jno
push
push
popa
mov
ret
fisubl
js
push
je
movsl
ja
mov
fisttpl
xor
cmp
je
or
and
jb
rolb
sbb
sete
mov
clc
adc
int3
push
cmpb
ret
mov
jne
jae
movsbl
mov
add
sbb
mov
add
sbb
aaa
sbb
pop
jmp
enter
incl
jg
lea
and
dec
inc
sub
dec
jmp
shl
mov
incl
or
add
inc
cmp
jl
cmpl
test
scas
xor
cltd
and
add
sar
add
xor
xchg
adc
clc
jl
jae
xor
ss
cmp
jecxz
ds
add
jne
enter
cli
lret
shr
xor
mov
mov
dec
jne
add
mov
xchg
or
scas
cmp
lods
cmpsl
mov
add
push
mov
inc
lret
ljmp
jbe
enter
jo
shld
lea
jmp
sub
inc
adc
roll
push
and
idivb
cs
push
inc
ljmp
cs
jle
insb
aas
mov
fcmovnb
pop
pop
pop
mov
test
addr16
testl
add
dec
jne
imul
enter
test
loope
rcl
cmp
pop
aam
repnz
xor
repnz
add
movsb
dec
push
ret
or
inc
adc
notb
dec
mov
movsl
fs
es
dec
orb
sub
or
adc
or
movsl
mov
scas
ficompl
sbb
push
cmpsl
push
xor
in
push
xor
pop
or
andl
leave
or
repnz
in
sbb
fs
add
sbb
loop
pop
repnz
sub
and
add
push
sub
bound
mov
sahf
jecxz
lock
pop
push
jmp
imul
pop
mov
cs
or
inc
or
lods
cmp
lods
jmp
fmull
mov
in
pop
add
jmp
push
in
nop
in
add
in
dec
dec
add
call
les
pop
add
push
sbb
dec
mov
and
xchg
sub
loopne
dec
jnp,pn
inc
pop
call
sbb
pop
pop
mov
cmp
xchg
adc
lds
ss
jns
lret
jg
push
jnp
cmpsl
add
lds
fldcw
out
push
and
inc
ds
sub
push
jmp
add
mov
add
in
insl
mov
and
shl
shl
dec
je
push
pushl
scas
inc
pusha
xor
push
push
mov
fwait
cmp
mov
cmpsl
xor
jnp
mov
fistl
in
in
cmpsb
mov
adcb
loopne
and
lcall
pusha
mov
push
inc
mov
xor
nop
test
rorb
dec
or
rolb
push
dec
push
xchg
inc
ret
out
mov
mov
test
mov
add
int3
dec
bound
xchg
scas
pop
mov
loop
mov
mov
rolb
or
xchg
sbb
xlat
push
shll
adc
aad
lret
mov
ret
add
jno
in
ss
mov
push
pop
aam
jle
lcall
shrl
push
std
jne
loop
sbb
or
aaa
mov
daa
adc
add
mov
sub
jmp
cmp
sbb
ret
xchg
pop
mov
fwait
adc
add
add
int3
pop
mov
dec
int3
add
fwait
cmp
add
sti
icebp
aas
push
pop
cmp
mov
mov
jecxz
pop
lock
je
dec
fdivr
adc
cmpsl
call
out
pop
roll
das
rcl
adc
bound
sti
push
bound
xor
and
sbb
in
mov
mov
pop
mov
test
gs
mov
sub
iret
xchg
cmc
mov
xor
xchg
and
adcb
sbb
dec
aam
add
insb
and
mov
testb
cmp
jl
cwtl
loopne
fdivrl
pop
jge
inc
call
add
xor
mov
sbb
mov
push
daa
movsbl
add
sbb
insb
call
cli
or
scas
push
decl
mov
aas
inc
test
mov
sbb
test
sbb
lret
movb
mov
push
test
repnz
or
add
sbb
shlb
cmp
dec
cmp
mov
xchg
mov
repz
xchg
je
dec
push
roll
jg
inc
and
test
add
test
aaa
cli
test
aas
cld
les
jp
jmp
xor
lock
mov
js
jge
mov
sub
test
adc
add
cmc
add
enter
mov
sbb
inc
mov
lret
sbb
call
mov
rcrb
cmp
je
pop
int
add
fcos
mov
pop
sbb
or
xchg
mov
xlat
std
lock
mov
loopne
loopne
or
cmp
mov
adc
das
xchg
nop
imul
mov
or
add
jle
jl
hlt
mov
inc
push
dec
mov
mov
mov
push
xor
adc
add
movzbl
mov
roll
sbb
js
jl
dec
cmp
addl
insb
ljmp
iret
push
std
scas
mov
incb
mov
add
out
pop
or
mov
nop
bound
nop
add
or
jmp
pushl
xor
mov
inc
call
jne
pop
push
stc
icebp
and
stc
lret
pop
fwait
jb
sub
pop
ljmp
add
inc
mov
xor
mov
sbb
cmp
and
test
arpl
or
push
adc
test
add
in
test
in
icebp
jae
mov
sub
insb
xchg
sub
cmpsb
ds
inc
cmp
adc
inc
in
jecxz
adc
push
enter
popa
aas
and
ja
pushf
jne
call
lret
push
scas
fadd
pop
clc
and
mov
and
push
popa
imul
push
rorl
loopne
xor
adc
xor
in
lods
das
mov
jae
push
inc
mov
and
adc
add
jno
or
mov
and
fadds
add
cmpl
push
shrl
cmp
in
lds
mov
push
jns
add
xchg
mov
xor
shll
lcall
cwtl
pusha
aaa
sbb
mov
stc
sub
ss
rcr
lret
lea
enter
iret
jbe
xchg
aad
mov
jbe
mov
inc
xor
add
ret
imul
and
insl
mov
pop
pop
mov
mov
das
push
cli
sbb
adc
mov
lea
mov
sbb
test
jno
ret
or
cmp
ja
jp
push
add
lea
imul
push
call
push
push
pop
pusha
cmp
push
jmp
cmpsb
or
and
push
test
sbb
adc
mov
jmp
ret
and
enter
inc
int
cltd
jbe
add
xchg
jne
fldcw
inc
or
pop
sbb
push
fcmovnb
call
push
js
push
call
xchg
xchg
cmpsl
mov
lcall
or
sub
pushf
popa
xor
push
cmp
dec
ds
xchg
in
cmp
push
std
pop
adc
inc
cmpsb
mov
fists
add
rorl
or
int
mov
test
out
nop
pop
fcomps
mov
add
inc
fwait
or
jb
movsl
sub
addr16
add
movb
adc
jnp
cmp
int3
sbb
xchg
pop
movsb
notl
cmp
inc
sbb
inc
adc
adc
cs
sbb
and
loope
jp
insb
jae
add
mov
add
and
nop
adc
stos
sub
movsb
fsubrp
jecxz
mov
int3
loopne
mov
pop
shrl
cmc
sub
out
test
subb
xor
iret
pop
add
mov
inc
or
push
mov
shrb
inc
nop
pop
push
adcb
pop
xor
in
adc
fmull
mov
adcl
cmp
sbb
mov
loope
mov
adc
loopne
insl
cmpsb
cld
and
dec
sti
cmp
dec
mov
mov
push
je
sbb
call
add
jnp
test
data16
scas
add
push
aam
push
and
inc
loope
shrb
sbb
adc
jno
cmp
test
out
lock
outsl
fdivl
mov
je
inc
pavgw
hlt
nop
mov
dec
add
cmp
in
push
test
jl
mov
mov
mov
xchg
movsl
shlb
out
jg
cmp
mov
jge
loope
jp
push
push
dec
fwait
movl
aas
push
stc
xchg
rolb
or
cmp
rorb
in
faddl
js
pop
fdivl
test
inc
add
push
or
testb
in
or
sub
add
cmpsl
int3
sarb
mov
adc
xchg
mov
test
mov
lcall
add
add
test
sti
addr16
inc
ljmp
and
into
and
push
lcall
popf
dec
lea
pop
jns
out
int3
test
inc
or
jmp
sub
loopne
lcall
inc
loopne
rcrl
and
add
enter
inc
aad
dec
jmp
ja
pusha
fs
dec
jmp
push
dec
mov
adc
inc
scas
push
imul
sbb
movsl
sarb
xor
push
push
cmc
and
out
mov
dec
add
xchg
jne
xor
popa
aad
push
sbb
psrlq
into
mov
push
pushl
mov
dec
cmp
jle
pop
cmp
jbe
out
xor
ljmp
jmp
push
pop
push
sbb
mov
pop
cmp
add
sub
adc
mov
nop
cmpsl
or
push
mov
data16
std
mov
xor
sbb
pop
clc
jne
mov
push
cmp
adc
shrb
gs
jmp
pop
mov
leave
xchg
movsl
xchg
addb
test
rclb
xor
fcomp
cmp
jmp
push
imul
dec
ss
and
adc
push
call
cmp
sbb
and
and
add
add
fwait
jno
and
call
xchg
popf
mov
jns
pop
es
add
mov
testl
cmp
jae
inc
jmp
stos
mov
cmp
and
enter
lock
testl
xor
shrb
loopne
subl
bound
fisttpl
rcrl
pop
mov
mov
xchg
stos
push
sarb
push
pop
adc
xchg
mov
cmp
add
andl
sub
xchg
jge
fs
xor
add
xchg
and
add
insb
dec
cvttps2pi
sub
call
out
mov
xor
sbb
inc
testl
jae
in
pusha
inc
shlb
mov
jmp
sti
xor
icebp
into
mov
es
adc
xchg
pop
sub
iret
andb
mov
and
mov
sbb
ds
pop
jne
or
pushf
adc
xor
test
push
push
jo
mov
loope
adc
mov
insl
push
cs
shrb
sub
xchg
lock
adc
push
cs
or
adcb
push
fimuls
mov
xchg
sub
sahf
add
sub
cmpsb
dec
xor
xchg
push
push
or
lahf
movsl
jae
aaa
and
and
sbb
stos
or
rcll
mov
xchg
mov
shrb
mov
lea
sbbb
sbb
or
add
cmp
sub
or
rorb
dec
testl
mov
popa
push
or
push
push
xchg
imul
jno
push
xchg
dec
pop
sbb
lds
add
fstl
sbb
mov
or
and
jnp
mov
xor
dec
or
mov
jne
cmp
test
test
or
les
into
mov
push
daa
call
lahf
fistl
sarl
lea
or
jb
adc
mov
xchg
aam
fcompl
or
push
gs
aam
xchg
xchg
in
sub
in
ret
ret
mov
in
ret
ret
sbb
rcr
sbb
cmpsb
push
sbb
outsb
popa
mov
insb
cmp
pop
jp
xchg
mov
stos
cmp
loope
jo
jb
sub
add
or
mov
sub
adc
cs
inc
mov
lock
sub
mov
aaa
or
or
ror
shll
sbb
shlb
mov
pushl
or
jl
push
inc
push
push
je
xchg
add
xchg
adc
fcoml
and
aam
jle
fsubrl
popa
das
jmp
pop
jecxz
sub
pop
fsubrl
call
mov
adcb
mov
xchg
repnz
mov
cwtl
mov
les
xchg
or
fisttpl
iret
movsb
dec
cli
xor
stos
nop
lock
pop
movsb
das
cld
dec
cmp
mov
push
stos
or
jl
cwtl
cmp
dec
adc
pusha
outsb
mov
imul
insb
lock
push
cmp
jb
cmp
xchg
cmpsl
popf
push
adc
cmp
lcall
jnp
dec
lods
push
push
dec
je
add
push
lock
je
insl
pop
mov
stos
or
adc
cmpsl
push
inc
adc
add
mov
movb
je
mov
imul
in
xor
sti
mov
filds
or
mov
cmp
repz
fists
cmp
je
cmp
jne
mov
sbb
add
mov
push
inc
mov
pop
dec
cmp
jns
or
cmpsb
push
jmp
testb
je
negl
js
or
sbb
aam
in
cmp
jbe
loopne
pop
adc
cmp
je
sub
inc
jmp
inc
and
pop
push
xor
pop
mov
cld
push
adc
add
xchg
hlt
test
jp
add
js
sbb
add
les
cltd
add
push
jl
push
xor
pusha
sub
mov
pop
cmp
add
sti
cmp
imul
cmp
bound
pop
les
clc
je
mov
arpl
sub
mov
test
xchg
sub
xor
gs
jge
mov
add
inc
cld
rorb
sub
je
pop
pop
dec
or
xor
add
arpl
and
and
jno
dec
push
mov
pop
mov
mov
aaa
jae
movl
pop
inc
shrb
shl
add
jmp
shlb
mov
sti
and
cmpsb
and
or
or
adc
push
test
jns
test
jne
xor
lock
subl
dec
push
mov
or
push
outsb
pop
jae
mov
jmp
dec
shlb
out
ss
xor
sub
mov
mov
or
mov
push
add
or
xor
jbe
lsl
xchg
inc
jg
or
scas
or
cmp
push
xor
and
outsb
fsubl
jle
sub
sub
and
pop
or
jl
popa
adc
jle
pusha
bound
cmc
add
pop
aam
cmp
jbe
sbbb
push
and
pop
arpl
pop
add
and
adc
je
test
jne
pop
and
dec
adc
mov
clc
add
push
xor
mov
mov
adc
movb
inc
in
xor
push
sub
sahf
and
xchg
test
xchg
mov
data16
mov
inc
and
dec
add
adc
fsubr
daa
addb
mov
or
inc
fs
clc
loopne
add
daa
sbb
call
inc
push
lcall
jbe
clc
push
call
inc
popf
push
mov
insb
and
push
push
mov
mov
dec
aam
mov
or
push
fcom
int3
mov
inc
subb
and
insb
mov
popf
mov
lea
data16
mov
sub
dec
sarb
movsl
lods
fdivl
mov
mov
inc
sahf
rorb
push
push
imul
test
pop
sbb
imul
jg,pn
pop
push
jecxz
fidivs
cmp
push
xchg
jbe
push
stc
inc
xor
mov
add
or
cltd
test
jecxz
addl
jp
mov
ja
sbb
cmp
mov
jns
jno
imul
add
imul
dec
xchg
xchg
ja
fcmovu
add
mov
sbb
imul
lahf
xrelease
dec
sbb
and
nop
mov
jecxz
push
int3
loope
faddl
iret
orb
xchg
pop
cltd
or
jp
inc
test
cltd
lods
xor
fisubl
pop
stos
in
insl
push
push
inc
iret
ret
out
mov
es
hlt
pop
push
movl
push
adc
jmp
pop
mov
xor
push
lahf
mov
add
jbe
inc
add
lods
push
ss
mov
enter
mov
mov
xchg
aam
add
int3
add
xor
mov
cmpsl
add
lds
nop
cmpsl
andl
jecxz
or
push
add
pop
sbb
push
outsl
outsb
je
pushl
std
loopne
adc
mov
cmp
add
jnp
outsb
fsubr
jae
pop
push
xor
or
push
mov
dec
sbb
add
cmp
pop
ljmp
dec
lea
xorl
jb
pop
sub
lcall
inc
xchg
out
cmp
fbld
ficompl
mov
mov
icebp
add
inc
inc
mov
popa
jo
cmp
pop
and
push
into
test
cmp
or
or
out
and
fcoms
movsl
rorl
adc
outsb
cltd
mov
aaa
push
ret
idiv
pop
je
test
dec
push
inc
inc
and
xor
push
fs
mov
or
shll
adc
mov
xor
xor
cmp
xor
lea
call
adc
cmp
pop
or
inc
push
fdivrs
shl
and
inc
push
sarb
rorb
xor
sbb
sbb
inc
push
mov
lock
in
mov
xor
mov
loop
inc
and
stc
je
fdivs
aaa
les
add
add
leave
add
pop
xor
call
mov
mov
add
das
push
ret
and
pusha
loop
jp
pusha
jb
loopne
decl
in
adc
roll
btc
daa
push
adcl
rcl
mov
mov
xchg
sbb
das
push
and
push
mov
orb
add
or
push
ljmp
push
clc
mov
mov
jl
push
cmp
mov
arpl
push
movb
push
popf
test
push
cmpsl
inc
pop
xchg
addl
xchg
add
xchg
xchg
sbb
sbb
xchg
or
and
lea
or
jg
inc
loope
fnstsw
pusha
stos
adc
and
or
pop
xchg
cmp
push
xor
push
enter
mov
pushf
sbb
loope
mov
idivb
faddp
add
cmp
pop
cs
insb
loopne
fmul
insb
gs
sub
push
sbb
push
pop
lret
cmp
add
test
jmp
testl
mov
cwtl
cmpl
dec
push
cmp
ficomps
push
lret
test
and
jne
add
pop
jecxz
ret
jb
mov
out
xor
insl
jnp
das
das
mov
sbb
loopne
and
mov
dec
arpl
enter
cmc
cmp
cmpl
loopne
mov
sub
xchg
fcmovu
mov
or
xchg
lret
jmp
bound
and
sbb
push
cmp
mov
add
lret
ljmp
fmuls
jne
mov
daa
shrb
push
cmp
mov
sbbl
dec
jno
mov
loope
xchg
xor
repnz
test
dec
cmp
adc
lret
push
push
adc
mov
leave
repnz
ficoms
roll
jnp
pop
mov
fcmovnb
mov
xchg
jne
mov
icebp
cmpsl
inc
dec
movl
insl
ret
in
loopne
fsubs
sub
dec
xlat
push
shlb
aas
je
cmp
push
pop
jne
aam
flds
cmpsb
and
enter
imul
jne
pop
call
sbb
imul
in
stc
jbe
adc
jle
pop
jne
jmp
xor
sub
mov
sub
or
jmp
dec
and
xor
xchg
push
mov
lea
xor
add
je
pop
in
and
addb
pop
jo
pusha
pop
je
sti
lds
jno
and
shl
imul
adc
insl
into
mov
jae
scas
jg
mov
and
xor
adc
mov
enter
xchg
leave
jecxz
sti
mov
sub
decb
adc
cmpl
andb
pop
fimuls
sub
mov
sbb
jb
pop
pop
pop
fs
add
or
inc
bound
or
or
clc
adc
rorb
push
add
sbb
pop
ret
lahf
adcl
pop
loopne
mov
lcall
dec
adc
fildl
aas
add
inc
sbbb
push
mov
xchg
dec
in
out
adc
or
add
jno
xchg
xlat
push
push
push
push
pop
in
mov
pusha
or
xchg
lret
pusha
or
sub
adc
add
cmp
sub
loopne
addb
adc
xor
or
add
cld
test
mov
push
shll
dec
cmpsb
out
sarb
in
aas
jmp
push
inc
mov
adc
push
adc
insl
adc
push
add
push
popa
mov
push
in
push
or
inc
adc
sub
cmp
int
adc
sub
and
test
fsubrs
push
insb
or
or
cmpsl
or
add
daa
mov
lret
push
dec
cmp
es
xor
cs
lret
in
scas
sbb
ljmp
fisubrs
mov
scas
mov
pop
cli
sub
sub
pop
jmp
or
stos
mov
je
into
or
xor
or
sti
and
add
inc
popa
or
sbb
and
push
and
xor
insl
test
jbe
cmc
sti
sbbb
mov
or
xor
sti
mov
add
es
sti
pop
stos
mov
out
addr16
pop
push
mov
mov
pusha
jae
sub
loopne
rep
dec
push
in
cmp
test
sbb
sbb
cmp
adc
pop
xor
lret
je
xchg
dec
sub
in
and
push
mov
je
rorb
cmp
jne
ss
pop
fwait
mov
in
in
mov
add
adc
adc
shlb
adc
and
cmpb
sbb
out
out
test
nop
mov
cmp
je
push
and
mov
pop
cmpsb
pop
adc
orb
cmp
inc
cmp
test
pop
add
inc
jecxz
sub
std
adc
or
add
xchg
dec
sbb
push
sbb
adc
ds
add
movb
lea
dec
imul
add
in
jecxz
mov
xor
shlb
or
or
push
rclb
sbb
cmp
out
mov
ret
mov
out
sub
mov
je
or
inc
ds
cs
int
int3
jae
js
imul
push
bound
addl
add
add
nop
out
add
adc
ret
push
adc
rorl
mov
mov
and
cmpsl
jno
scas
insb
cmp
negb
mov
mov
pop
jno
mov
dec
cltd
mov
pusha
ljmp
jne
push
scas
mov
add
push
inc
cmpsb
in
inc
add
in
pop
jo
addb
movsl
sbb
push
add
jne
xchg
leave
inc
cmp
lea
pop
loope
adc
inc
hlt
mov
lock
clc
cli
hlt
aad
arpl
push
aas
test
loop
inc
inc
mov
cmp
ljmp
hlt
mov
enter
jne
je
pop
jb
daa
and
imul
add
scas
mov
jecxz
mov
mov
pop
call
mov
ret
and
int3
cli
add
pop
jg
loopne
pop
jmp
popa
lea
test
test
xchg
outsl
orl
sarl
and
push
pop
cmpsb
imul
mov
jne
shrl
mov
push
rclb
hlt
pop
add
test
xchg
add
inc
mov
push
or
jle
out
fisubl
loope
adc
pusha
lods
xor
jb
xchg
push
cmpb
mov
add
fnop
adc
add
pop
filds
lahf
notb
fsubl
xor
xchg
and
sub
or
sbb
cld
mov
sub
icebp
cmp
fdivrs
dec
push
in
push
adc
pop
sbb
mov
sbb
push
fcmovnbe
nop
ja
in
push
test
pusha
es
sbbb
adc
bound
and
xchg
mov
mov
jge
testl
sub
push
push
out
adc
push
popa
cmp
adc
add
dec
push
adc
ljmp
test
nop
inc
bound
mov
loope
jmp
mov
adc
sbb
sbb
mov
orb
add
mov
icebp
je
mov
or
dec
jne
jns
jo
adc
add
jmp
jb
dec
inc
in
sbb
lahf
or
jg
jbe
push
sbb
ja
jmp
mov
xchg
in
xchg
cmp
cmpl
test
out
sbb
adc
stos
fiadds
repnz
aam
loope
dec
cld
mov
fsubrl
and
jg
push
cmp
ja
lock
lock
call
ds
push
out
mov
mov
add
subl
push
test
xlat
push
fwait
es
mov
mov
or
pop
dec
test
icebp
je
fdivs
loope
mov
incb
jl
jmp
push
pusha
pop
pop
orb
enter
jmp
add
sbb
lret
lds
mov
cmpl
mov
insb
movl
sbb
sbb
test
push
xchg
sarb
sub
xor
daa
push
lea
mov
push
js
fsubs
and
mov
int3
add
jg
fadds
cmp
mov
and
jmp
add
lock
inc
push
xor
mov
jns
and
inc
ds
call
test
push
push
xor
inc
jbe
mov
jne
jmp
push
mov
cmp
add
lea
add
push
lret
movsb
mov
int3
or
test
ret
or
ret
pop
pop
adc
aas
sbb
mov
cmp
push
sbb
je
cwtl
hlt
sub
push
clc
xchg
jno
aas
in
pop
outsl
sbb
out
adc
pusha
xchg
pop
xor
mov
push
lods
add
and
inc
mov
cmpb
inc
push
sahf
inc
add
test
inc
ljmp
add
daa
insb
movsb
xchg
lea
or
jae
sbb
add
leave
sub
notl
stc
cmp
mov
cmp
ret
cs
push
or
popf
sbb
ja
add
pushf
pop
imulb
jnp
add
and
push
loopne
sar
adc
mov
cmp
repnz
fwait
mov
xor
add
adc
jge
pop
lock
jle
jne
nop
mov
jne
inc
dec
nop
push
add
rcl
adcb
mov
jle
dec
add
mov
xchg
fidivrl
test
push
and
pop
ret
pushl
push
iret
jmp
pop
ja
cmpsl
sub
testl
or
in
rolb
or
movsl
add
loopne
xor
xchg
js
ljmp
add
stos
fs
or
inc
inc
data16
sub
sub
ret
pop
iret
stos
mov
mov
dec
popf
push
faddl
xor
movsl
mov
add
dec
loopne
and
or
bound
movsb
jnp
cmp
mov
add
sub
jns
sbb
call
push
push
push
dec
es
cmp
or
mov
xor
scas
sub
xchg
jne
ja
pop
push
sub
or
jo
mov
cld
sbb
jmp
or
push
roll
stos
ficompl
cmpsb
add
cwtl
add
cmpsb
or
cmc
ret
insb
jbe
add
push
sub
sub
stos
sub
jns
loopne
adc
add
xchg
pop
xor
cltd
xchg
divps
adc
into
push
test
subl
or
outsl
iret
or
pusha
cmp
adc
pop
add
ss
jne
cmp
jns
xlat
or
popa
adc
pop
mov
dec
sahf
dec
in
push
incl
pushf
testb
adc
jbe
push
and
xlat
mov
push
pop
sbb
inc
lcall
scas
adc
adc
out
push
mov
add
cld
rcrl
pop
inc
sub
and
inc
adc
cmpsb
jge
pop
ret
add
xchg
bound
add
dec
pop
cmp
adc
dec
sbb
sbb
mov
add
cmp
and
mov
pushf
and
mov
inc
add
sbb
xor
sahf
xchg
mov
das
arpl
arpl
add
xlat
or
mov
add
jo
in
cltd
test
mov
cltd
test
lea
jbe
in
pop
pop
loope
or
xchg
pushf
and
enter
sub
test
movsl
stos
mov
lret
rol
and
popf
or
loope
inc
and
push
adc
popa
dec
aam
sub
pop
push
rclb
inc
in
outsb
std
out
adc
dec
popf
fadds
outsl
aaa
xor
jns
push
fcoms
jo
in
sub
jo
xchg
jne
mov
sub
test
hlt
lret
jge
fnsave
pop
sarb
add
push
in
hlt
xchg
mov
pop
leave
mov
clc
sbb
mov
lds
and
fstpl
inc
push
and
lea
or
movsb
mov
adc
inc
cli
and
dec
shl
cmp
push
mov
addr16
and
icebp
pop
sbb
inc
sbb
mov
push
mov
jmp
sub
push
mov
inc
movsl
jmp
or
cwtl
cs
and
sarl
and
int
add
inc
mov
ret
or
pop
mov
sarb
adc
repz
and
and
sub
loop
push
or
dec
push
shrl
cli
popf
sub
and
fsts
ret
insl
mov
mov
xchg
mov
sub
mov
xchg
jnp
inc
cmp
dec
adcl
inc
or
and
nop
jbe
sahf
sbb
xchg
pop
push
add
ja
push
sub
dec
aam
mov
and
and
rclb
aaa
sbbb
inc
aam
out
sahf
xchg
je
inc
scas
push
push
adc
rclb
sbb
mov
sbb
gs
aaa
ret
outsb
insb
lret
fisttps
pushl
repz
push
jnp
pop
sahf
jmp
jge
push
jecxz
jmp
push
push
sarl
jbe
mov
xor
inc
push
xchg
jle
repz
push
rclb
sub
mov
mov
jo
xor
out
cmpl
pop
adc
or
push
lods
inc
mov
jo
sbbb
inc
mov
pushf
mov
cmpl
fdiv
adc
jne
adc
imulb
mov
mov
and
add
lea
mov
pushf
dec
xchg
add
xchg
jne
mov
dec
in
je
add
dec
lods
or
mov
data16
inc
shlb
loop
or
push
xor
xchg
mov
dec
inc
pop
inc
cltd
jmp
nop
or
nop
xchg
push
xchg
add
fcoml
mov
sub
loopne
outsl
add
daa
out
push
cli
mov
dec
xor
push
fiaddl
jg
jmp
adc
push
xchg
call
clc
adc
mov
lods
scas
jge
bound
xchg
mov
mov
adc
cmp
xchg
adc
ror
add
add
sbb
adc
hlt
push
inc
jbe
xchg
ds
mov
and
std
insb
jle
pop
add
pop
aas
mov
push
sahf
inc
loopne
mov
push
popf
inc
rcrb
bound
xor
fistpll
cmc
ror
aam
sahf
pop
jbe,pn
test
neg
jne
ret
mov
nop
push
fdivrs
add
clc
je
mov
jo
ror
add
sub
push
mov
dec
adc
jno
cmp
sbbl
mov
cmp
jne
cmp
push
inc
mov
inc
fsubr
adc
call
adc
xor
loopne
sbb
les
add
rcrl
je
cs
test
inc
mov
add
and
and
inc
imul
stos
mov
out
es
push
xor
and
mov
incl
cmp
pop
cld
fs
dec
cmpl
adc
add
jb
jmp
mov
inc
insb
jl
hlt
adc
hlt
xchg
cltd
push
jo
fmull
sbb
cltd
pop
push
inc
mov
dec
movzbl
fs
add
out
dec
loop
cltd
push
or
xlat
push
or
push
repz
enter
imul
je
sub
aam
or
push
mov
mulb
jg
push
or
stos
iret
adc
ljmp
jle
pop
fidivl
jmp
test
fwait
lock
inc
sbb
and
ret
xchg
popl
out
pop
es
test
mov
xchg
jne
jge
popf
das
or
pop
push
mov
scas
add
jle
test
and
test
push
jl
or
adc
scas
mov
sarl
mov
pop
jbe
sub
pop
xor
addb
mov
sub
mov
movsb
push
pop
or
add
fstl
ljmp
inc
push
inc
push
rorb
push
fbstp
cmp
jb
mov
push
dec
jae
pop
mov
dec
cwtl
cmp
dec
cmpsb
jbe
push
cs
cmp
shrl
xchg
sub
jp
adc
jp
inc
inc
cwtl
push
and
hlt
shl
xor
mov
mulb
fdivs
je
hlt
sub
dec
lods
push
roll
out
xor
mov
dec
add
push
test
cld
ja
shlb
dec
pop
shll
sbb
popa
aas
pop
sbb
and
sbb
daa
mov
mov
push
aas
inc
pop
jmp
cmp
loop
cld
jne
ret
outsb
pop
dec
sub
xchg
pop
push
test
jg
mov
adc
test
push
add
je
xchg
inc
xor
adc
mov
adc
adc
dec
xor
insl
jmp
in
add
lret
xchg
rcr
mov
out
cmp
ss
ds
cmp
cs
shll
add
xor
ficoms
mov
icebp
ds
dec
clc
mov
pushl
aas
test
inc
jb
xor
adc
nop
xchg
inc
push
jmp
gs
push
adc
adc
dec
jb
adc
cltd
fs
lret
adc
adc
mov
xor
sbb
or
das
addb
add
les
add
enter
pop
fcompl
cmpw
je
or
lret
icebp
rolb
out
fstl
adc
js
mov
std
or
xor
add
leave
lret
out
sbb
int3
pop
pop
call
stos
sti
movsl
imulb
jo
cltd
push
mov
ror
mov
pop
inc
inc
mov
test
lret
push
sbb
bnd
in
add
jl
inc
and
das
jmp
cmp
mov
sub
dec
sti
jge
cld
cmp
bound
rcll
adc
cmp
fmuls
movsb
cmpb
jb
adc
popf
push
in
mov
lea
mov
and
dec
rorl
mov
cmp
sbb
xor
adc
sub
adc
pushf
out
loope
mov
sub
pop
jnp
xor
add
xor
add
sbb
aaa
cmpsb
cld
imul
jne
sub
xor
movb
pop
mov
addl
sbb
std
and
subb
pop
adc
lret
mov
xor
pushf
jmp
inc
add
popl
lods
ss
push
popf
xor
mov
in
push
fidivs
aam
jne
sub
jmp
fcoms
clc
push
stos
push
mov
movsb
add
adc
add
jns
aam
jg
out
adc
mov
inc
or
adc
push
loope
fcmovnbe
pop
mov
fnsave
testb
push
js
mov
push
inc
sbb
mov
mov
clc
xchg
test
aam
adc
loop
xor
push
adc
rcl
aas
pop
jne
jl
jnp
ret
inc
test
in
jns
inc
fwait
stos
mov
mov
adc
decb
mov
in
or
scas
mov
out
pop
loope
xor
xor
cmp
test
cs
jg
icebp
outsl
js
add
iret
pop
xchg
repnz
pop
loop
mov
xchg
pusha
or
dec
push
je
or
movsb
push
inc
sbb
mov
imul
or
arpl
movsl
jl
mov
fstps
sbb
dec
popa
test
mov
pop
loopne
and
push
push
dec
pusha
stc
idivl
inc
jo
add
test
orb
test
cmp
or
sbb
jmp
inc
sbb
push
jmp
mov
push
lcall
aam
push
lahf
hlt
rorb
xchg
into
out
and
add
les
clc
jno
mov
or
jecxz
es
sub
adcl
les
imul
ss
lock
sub
push
cmp
sbbl
or
lea
push
int
lret
repnz
cmp
nop
popa
jmp
js
nop
mov
adc
and
jno
mov
inc
test
pushf
into
mov
xchg
repz
add
jg
out
push
test
dec
adc
roll
push
push
mov
mov
jp
ljmp
sbb
into
add
jo
jb
sub
and
fadds
mov
outsl
pop
rorl
mov
adcb
insb
loope
sbb
std
jo
xchg
decb
pop
jae
les
scas
jp
xor
adc
inc
sub
std
jbe
mov
stc
mov
inc
pop
sub
xchg
lret
scas
dec
aad
bound
mov
ljmp
lahf
mov
inc
xor
cltd
not
xor
in
push
or
movsl
xor
and
adc
imul
shll
cmp
ret
sbb
or
adc
mov
shl
mov
add
jo
sub
add
shll
lods
mov
xor
mov
lds
mov
xor
mov
cmp
mov
push
xchg
shl
push
add
push
shrb
dec
mov
adc
imul
stos
add
adcl
mov
xor
inc
imul
out
pop
adc
cmp
add
fwait
adc
fisttpll
aad
test
cltd
mov
mov
mov
mov
lock
loope
cltd
pop
cwtl
stos
lock
xor
push
push
sbb
xchg
jns
xorl
into
inc
sub
jae
mov
adc
test
bound
add
das
sub
xchg
push
subps
daa
xchg
mov
cmpsb
pop
ds
repnz
jne
std
push
mov
mov
push
mov
ss
sub
ret
hlt
insb
jecxz
les
adc
daa
dec
or
lcall
insl
loop
adc
clc
pop
add
adc
ret
test
push
add
xchg
add
addl
cld
and
adc
lea
rcrb
push
and
pop
roll
lahf
fs
jmp
or
test
es
xor
add
jmp
mov
int
or
push
mov
adc
sub
mov
or
inc
jmp
enter
inc
orl
mov
shlb
ret
ljmp
repz
lret
adc
or
cmp
inc
cmp
jbe
fimull
push
adc
idiv
push
aam
push
fs
aaa
gs
fmull
fcoms
shrb
sbb
mov
xor
pop
add
add
test
and
jl
dec
fistl
fs
xchg
cmc
in
sarb
les
out
hlt
movsb
or
inc
lcall
push
and
and
pop
pusha
add
notb
stos
or
loope
xchg
xor
out
dec
inc
mov
std
add
jb
or
dec
add
push
or
pop
shll
xchg
pop
lods
sti
add
xchg
or
das
lods
or
leave
pop
add
mov
jb
repnz
mov
movsb
lea
cmp
rorb
add
cmpl
and
mov
and
dec
jb
xadd
mov
mov
mov
movsl
xchg
pusha
pop
fistpl
mov
push
cltd
jecxz
push
and
or
xor
addb
cwtl
xchg
add
out
sbb
and
mov
sbb
or
repz
add
xchg
movsl
mov
xchg
lds
lods
xor
test
add
shll
sbb
cs
rcrl
sub
mov
inc
sub
into
pop
dec
ja
test
add
mov
cmp
je
cmp
xchg
insl
outsb
or
pushf
sbb
mov
sbbl
subb
adc
cltd
insb
sub
and
cmc
std
cmp
sbb
sub
pop
adc
and
in
daa
je
push
cmp
adc
push
or
cltd
mov
fldenv
add
jb
xchg
push
pushf
sbb
jae
push
xchg
dec
sbb
andb
jl
sbb
jae
sub
jmp
in
lea
test
xchg
push
fsubrs
add
sti
mov
add
xor
shl
adc
push
inc
push
mov
xchg
cs
outsl
insb
push
ficomps
adc
pop
or
fidivrs
je
cmpb
lret
adc
push
or
cmp
arpl
dec
test
dec
int
imul
mov
push
test
xor
sub
or
sub
cmpsb
xchg
add
xor
add
add
js
mov
dec
movsb
and
enter
jbe
fs
lret
clc
hlt
hlt
inc
cmp
xchg
jns
or
push
pop
mov
nop
pop
pop
push
and
push
cmp
add
cmp
call
jae
pushf
or
lods
and
inc
pop
sbb
push
js
fldt
clc
shl
cld
loopne
fnstenv
mov
add
sbb
xor
repz
cld
fsubs
inc
popa
cs
dec
inc
mov
scas
out
or
inc
push
cmp
add
inc
mov
push
in
cltd
lahf
into
clc
es
or
lock
inc
in
imul
xchg
adc
xchg
incl
dec
sub
mov
hlt
neg
sbb
and
sti
mov
bound
mov
push
sub
push
adc
push
icebp
inc
mov
xchg
in
into
adc
popa
xchg
pushf
test
js
inc
add
add
adc
and
test
je
faddl
inc
push
loopne
addr16
fildl
lods
jnp
and
leave
test
insb
fistpl
xor
aam
add
cmpl
jne
cmp
jbe
out
in
adc
or
jne
push
lds
dec
add
dec
push
lock
cmp
fwait
aad
std
lret
shrb
das
data16
push
fbld
popa
inc
cmc
jmp
rcl
mov
jno
adc
sahf
jecxz
inc
pop
or
sarl
sbb
cmc
dec
fists
push
shr
sbb
cs
in
inc
imul
mov
call
add
jge
lods
das
lea
push
push
xchg
je,pn
pop
jl
xchg
fisubs
pminsw
mov
js
and
cmpb
testb
ss
cltd
outsl
push
cmp
loop
add
xor
data16
mov
gs
add
cmpsb
sbb
xchg
push
pushf
mov
jnp
lock
test
add
or
mov
adc
inc
mov
adc
or
sbb
dec
adc
inc
pushl
andl
leave
ret
pop
or
xchg
fidivrl
movsl
clc
nop
aam
mov
push
push
ja
cmp
paddusb
add
daa
inc
fsts
push
inc
add
aas
arpl
mov
andb
dec
popf
mov
sbb
pop
xor
or
adcl
add
call
xor
jnp
sub
out
lods
mov
cmp
push
inc
cld
push
test
lds
push
icebp
cmp
test
imul
or
jne
pop
sub
pop
mov
lock
inc
or
mov
es
push
lahf
xor
movsl
repnz
adc
xchg
adc
inc
cmp
mov
jmp
je
mov
hlt
dec
mov
fs
andl
push
and
or
xor
adc
loopne
cmp
aam
scas
mov
or
movl
push
jae
and
stc
mov
pop
jbe
add
mov
jp
in
or
dec
or
cld
xchg
push
inc
cmp
dec
loopne
int3
add
aam
cmp
cmpsl
push
push
cmp
pop
add
xchg
popf
push
sar
push
add
push
jmp
xor
fadds
mov
add
aas
add
sahf
adc
push
out
mov
icebp
dec
sub
sbb
sbb
repnz
test
int3
ds
mov
scas
adc
mov
test
cmp
add
mov
dec
hlt
imul
lea
bound
mov
or
dec
add
jle
pop
lock
faddl
cmp
add
xchg
shr
sarl
jge
dec
mov
call
pop
iret
loop
arpl
test
cmpsl
cmp
fdivl
or
xor
out
pusha
cmp
faddl
cmpsl
pop
lcall
add
sbb
push
je
roll
ficompl
mov
gs
push
jge
leave
enter
cmp
add
or
and
xorb
add
adc
and
sub
mov
pop
push
mov
mov
push
push
and
ret
or
insl
les
mov
mov
int
inc
dec
push
xor
dec
sub
in
sub
mov
mov
add
push
aam
je
mov
loopne
sbb
or
lods
pop
fsubs
popf
sbb
faddl
cwtl
dec
adc
jle
enter
ja
mov
adc
jb
mov
or
or
mov
roll
xor
add
push
fisttps
push
or
pop
fdivrs
cmp
leave
fldenv
push
push
add
or
icebp
pushl
dec
pop
xchg
pop
fisttpll
sub
or
and
push
push
sahf
rorl
loopne
add
fisttps
jne
cmp
sbb
mov
repnz
sub
sbb
sti
jb
mov
xchg
out
mov
pop
or
fsub
add
lea
mov
pop
add
pop
jo
into
xor
test
sbb
add
popf
pushf
outsl
jno
mov
xor
sub
into
adc
jns
and
test
sbb
je
dec
adc
add
lea
ja
cmpb
jne
jp
imul
jne
out
add
or
loopne
adc
faddl
jb
stc
push
daa
or
ja
mov
lea
lods
inc
dec
sbb
pop
push
push
jnp
addr16
or
dec
mov
test
je
iret
lea
aaa
add
dec
mov
jge
cs
jae
leave
jmp
push
inc
sub
xchg
mov
ss
xor
push
sar
push
xchg
or
sbb
cmp
lsl
sarl
mov
dec
jp
xchg
jmp
dec
mov
enter
pop
push
push
dec
jno
sbb
adc
loopne
out
mov
je
mov
sbb
xor
decl
sbb
adc
pop
sbb
adc
jp
mov
inc
mov
mov
call
filds
pop
mov
xchg
enter
fcomps
sahf
jne
lret
cmc
inc
popw
push
lea
cmp
jle
xchg
repnz
xor
ss
pop
popf
pop
ja
fimuls
or
mov
jmp
and
or
cmp
fsub
add
sub
add
add
xor
push
fcoml
mov
inc
pop
lahf
mov
test
add
xor
mov
mov
outsl
mov
je
lea
dec
or
adc
inc
cmpl
dec
jmp
movsb
pop
xchg
data16
movsl
pushl
xor
pop
fcmovbe
inc
and
data16
shlb
aaa
push
sbb
add
dec
inc
aaa
adc
jns
adc
ret
sub
inc
clc
jmp
push
je
dec
lods
imul
in
les
orl
xor
dec
adc
repz
incl
add
rclb
adc
add
outsb
xchg
movsl
incl
mov
xor
mov
ror
or
add
mov
dec
mov
push
mov
daa
bnd
mov
lcall
inc
cmp
cmpb
ret
push
jae
lea
daa
fidivs
push
sub
sbb
inc
push
lds
mov
xor
loope
test
inc
dec
pop
es
dec
and
push
or
cmp
sub
cmc
loopne
jge
cmpsb
jge
sbb
leave
pusha
pop
cld
cs
mov
cmpb
xor
fnstenv
ja
testl
cmp
cmp
sub
sbb
sbb
lret
xor
mov
dec
xlat
movb
adc
cltd
mov
lcall
fdivs
sub
sub
out
mov
sti
sub
pop
ret
push
out
insb
adc
dec
imulb
divb
dec
dec
shl
imul
lods
jmp
mov
rorl
lcall
jge
pop
and
jne
mov
jbe
mov
push
cs
add
test
cli
repz
lock
lea
jbe
or
lret
js
sbb
out
int3
or
xlat
push
scas
mov
push
aad
xor
or
jge
mov
jnp
inc
mov
adc
adcl
movsb
shl
fimuls
sub
int
or
xor
jp
je
xor
popf
mov
xchg
cmp
push
jmp
gs
and
xor
mov
cmp
jb
inc
mov
adc
movsb
mov
jo
sahf
mov
mov
cmp
sub
push
inc
or
mov
hlt
ds
es
xchg
or
jo
jns
mov
xchg
popa
xor
sahf
mov
add
clc
js
mov
std
cmc
imul
xor
push
enter
enter
stc
push
out
adc
arpl
jb
nop
xchg
enter
push
imul
adc
and
movsl
sub
sbb
pop
in
lea
xor
outsb
or
jbe
xor
in
setb
std
push
testb
add
push
rcrb
mov
add
or
xor
aad
shlb
cli
jo
lds
cmp
cmp
and
mov
push
call
roll
lcall
sbb
fcoml
cmp
orb
or
fsubrp
mov
sbb
dec
cmp
cmp
push
rcl
out
adc
out
ret
shlb
cmp
divb
sbb
ret
dec
sub
aas
testb
je
divb
pushl
xchg
dec
scas
ljmp
sbb
sub
pusha
jo
adcl
xchg
xchg
ss
or
inc
es
das
in
and
movsl
pop
adc
add
and
lea
popa
push
push
cmp
call
jecxz
dec
and
cwtl
push
lret
cwtl
and
xor
sub
mov
mov
mov
inc
sub
push
add
xor
pusha
sub
jle
fmuls
sbb
in
mov
lods
out
movsb
jne
mov
orl
test
mov
imul
pop
adc
or
mov
dec
sub
mov
sbb
push
push
pop
add
fadds
xchg
shlb
mov
test
or
in
add
sbb
lods
cmp
sub
xchg
mov
aas
add
pop
xchg
lret
in
mov
lahf
mov
mov
mov
test
fcmove
insl
int
into
shrb
push
dec
add
inc
das
jb
lcall
and
and
push
jge
cmp
shlb
adc
test
mov
mov
mov
push
iret
add
jne
or
inc
xchg
arpl
mov
out
adc
mov
popa
shlb
lret
add
dec
lock
mov
clc
ret
sub
dec
rcl
out
xor
xchg
push
adc
add
mov
cmp
jl
es
xchg
jmp
push
ja
lcall
push
scas
cmp
fimuls
cmpl
mov
stos
adc
adc
push
out
mov
push
or
or
dec
or
ja
ret
push
sbb
or
incl
pop
push
mov
dec
dec
pop
cmp
ret
or
leave
push
cmp
sub
jmp
cmovge
imul
jb
movb
dec
pop
xor
push
cwtl
pop
dec
jnp
cmpsb
out
ss
add
xor
or
idivb
test
push
addl
pop
push
hlt
out
jo
int
insl
lahf
add
pushf
inc
daa
jae
unpcklps
pop
fwait
ret
mov
popf
movsl
inc
push
pusha
pushf
jo
push
out
fistpll
xor
push
push
or
enter
pop
jp
or
movzwl
test
je
test
lahf
add
or
jo
jo
jo
rorb
mov
mov
xchg
ret
dec
xlat
mov
sbb
push
cmpl
push
add
inc
dec
std
mov
and
das
jmp
cmp
lcall
shl
push
push
clc
push
push
pop
std
inc
adc
js
fdivrl
sub
push
mov
mov
mov
lds
cmp
fidivs
jne
es
mov
sbb
or
pop
mov
js
and
jl
rclb
jle
js
fisttpl
push
push
loope
jl
cld
sbb
push
push
mov
stos
add
aam
add
ds
mulb
loopne
or
popf
in
pusha
pop
pop
and
jno
int
push
lahf
xchg
aad
xchg
and
mov
add
jle
mov
mov
xor
or
sbb
xchg
xchg
and
in
sub
addb
loopne
sub
sub
in
xchg
push
pop
sub
sub
inc
mov
pop
or
inc
rdpmc
dec
pop
inc
stos
or
ret
push
mov
dec
push
out
sub
shl
daa
inc
outsl
mov
cmp
and
movsb
add
call
dec
cwtl
call
xchg
sbb
repz
push
addr16
jl
cld
push
adc
cld
js
mov
mov
mov
add
and
clc
or
push
sbb
test
or
add
inc
out
sub
dec
roll
and
loopne
aad
jne
mov
and
rcll
sbb
popa
in
xchg
mov
lret
icebp
mov
xor
loopne
and
and
loope
out
jge
mov
add
mov
movsl
jne
mov
sarl
scas
cmp
inc
adc
mov
adc
out
ds
lods
sbb
inc
addr16
std
into
sbb
gs
mov
lea
mov
cli
jne
cs
and
pop
jmp
jg
xor
cltd
jo
lahf
roll
xlat
inc
mov
lock
sub
push
std
mov
add
inc
or
mov
mov
jle
adc
cmpsl
or
push
ja
fimuls
sbbb
loop
push
jbe
gs
push
push
clc
scas
xor
and
push
mov
jbe
xchg
push
push
dec
push
cmp
inc
add
mov
adc
inc
loope
repz
add
dec
pop
pop
in
and
mov
mov
into
jmp
fidivrl
into
out
push
loope
roll
dec
xor
pop
mov
lock
cld
push
cmp
cmp
mov
xor
outsb
das
outsl
push
xor
icebp
rorb
sti
and
mov
adc
jl
mov
mov
jle
rorb
je
lea
shl
subb
cmpsb
jg
xlat
or
jmp
cmp
adc
lret
iret
push
aad
aam
shrb
mov
xor
es
add
jmp
and
jne
push
and
add
hlt
mov
sbb
mov
mov
popf
dec
data16
in
xor
jg
or
cs
inc
jb
adc
add
or
or
xor
add
adc
sub
inc
jle
add
aam
outsl
add
mov
xchg
xor
jbe
jmp
and
sbb
adc
add
push
sub
pop
mov
adc
xchg
mov
lahf
in
sbb
imul
pusha
fs
add
test
push
add
inc
movsb
inc
setl
sub
sbb
dec
sbb
cmp
jo
lret
cmc
addr16
mov
pushl
sub
push
pop
mov
sbb
shl
push
dec
shlb
and
roll
push
cmp
rol
push
xchg
inc
in
mov
sub
mov
push
lds
sarl
xchg
jp
adc
movsb
push
push
xchg
push
dec
enter
sbb
jecxz
xor
mov
daa
es
mov
in
inc
sbb
pop
loop
mov
cld
push
and
cmpsb
out
adc
xor
sti
add
mov
cltd
xchg
daa
mov
rcll
jne
andb
pop
stos
inc
and
popf
fdivrs
or
inc
mov
push
and
jne
sti
movsl
stc
rclb
or
sub
mov
or
jne
or
jne
std
pop
push
cs
nop
cmp
cwtl
dec
add
mov
mov
add
mov
lock
cmp
outsl
add
add
lea
sbb
lret
ds
clc
inc
sbb
xchg
fcoms
loopne
repnz
cld
test
pushf
notb
popa
inc
add
in
mov
js
dec
add
xchg
sarb
push
je
xchg
push
ret
or
movsb
inc
mov
sbb
cmp
push
xor
xor
cmp
sub
adc
jmp
mov
inc
inc
adc
pop
push
push
jo
mov
test
mov
pop
lea
or
adc
or
rcrl
mov
sbb
addr16
imul
jmp
scas
lcall
xchg
fbstp
dec
lock
mov
jg
and
pop
lea
pushf
pop
sbb
data16
mov
mov
cmp
orb
enter
inc
mov
insl
cmp
daa
mov
mov
ja
pop
sub
loop
dec
jb
addl
rorl
push
rol
adc
rorb
andl
andb
dec
xchg
sub
cli
rolb
push
jne
dec
fldt
dec
cli
or
pop
sub
sbb
push
lcall
push
in
mov
xor
outsl
sbb
test
or
sbb
pop
sub
scas
aaa
jo
jg
dec
push
mov
aam
push
inc
and
xor
cwtl
inc
or
cmp
je
cmp
add
in
push
or
cmp
or
jne
addb
xchg
test
test
fsubs
sbb
xor
jmp
loopne
xchg
cmp
shlb
aad
push
jnp
push
imul
mov
pop
mov
cmp
jl
mov
mov
es
out
push
xor
arpl
pop
sbb
in
push
mov
and
cmc
push
sahf
cmp
mov
and
sbb
aam
faddl
or
mov
clc
subb
mov
imul
adc
or
lea
clc
pop
sub
jno
mov
mov
push
ja
mov
mov
adc
mov
pop
ds
bound
cltd
sbb
adc
out
fcoms
shl
nop
mov
add
jbe
mov
mov
push
xor
xchg
xchg
pushf
insb
adc
inc
dec
rorl
mov
es
cld
or
sub
js
push
inc
mov
sbb
mov
dec
push
xor
bound
roll
sbb
mov
aam
adc
cmp
push
pusha
dec
shll
je
int
push
ss
xor
fdivl
or
outsb
andl
cmpsl
mov
sub
insl
mulb
aad
mov
sub
sub
xor
sbb
pop
cmp
loopne
push
pop
nop
in
jle
movb
sbb
mov
adcl
subl
jae
popf
nop
xchg
push
fadds
sbb
je
sbb
add
nop
add
movsl
mov
mov
in
pop
mov
sahf
inc
test
lret
jo
movsb
or
push
test
cmp
push
push
mov
sbb
push
adc
push
mov
inc
sbb
cmp
jo
adc
mov
lods
mov
sub
xor
pop
adc
xor
add
xor
add
mov
test
test
stos
insl
cld
xor
xchg
add
xchg
cli
inc
mov
pusha
lcall
add
jne
push
add
movswl
adc
sbb
sti
sbb
xchg
test
ret
pushl
sbb
or
push
test
adc
push
imul
xor
push
lock
je
repz
push
cmp
push
clc
in
mov
fcoms
insl
repnz
clc
inc
sub
push
push
push
inc
add
shl
ret
imul
add
xor
dec
add
je
das
mov
xor
das
xorl
ficomps
jl
insl
addl
jne
orl
mov
adc
imul
int
xor
test
mov
xchg
add
jge
or
test
das
add
lods
push
test
stc
fldl
in
cmp
sar
lds
add
lods
cmp
cltd
std
fwait
loope
sub
sub
mov
sbb
out
inc
xchg
les
mov
movsl
sti
dec
sub
xchg
sub
jnp
push
jne
mov
sub
sbb
sarl
mov
and
push
cmp
pop
sub
xorl
inc
xchg
ja
fwait
pop
jle
or
hlt
cld
cmpsb
imul
jbe
or
add
cltd
add
cmp
mov
and
add
push
testb
inc
rcl
dec
bound
push
sub
mov
sbb
into
dec
and
cmp
push
inc
movsb
sbb
cmp
cmp
push
popf
lock
mov
dec
xor
cli
out
fidivs
test
cmpb
lods
pop
mov
push
cwtl
add
sbb
xchg
dec
push
xchg
mov
pop
dec
push
adc
jle
or
movsb
jns
adc
or
push
xchg
fdivrl
sti
insl
adc
adc
xor
aad
stos
mov
and
fldcw
inc
xchg
enter
in
pop
nop
repnz
push
js
mov
outsb
outsb
rorb
dec
jb
sbb
lea
je
mov
gs
sar
xor
and
mov
and
push
and
mov
adc
pop
out
orb
int3
lock
push
mov
inc
inc
lock
inc
rcr
notl
and
ret
jne
or
cmp
je
je
enter
pop
fs
orl
inc
mov
out
adc
aaa
movsb
xor
sbb
jnp
call
push
xchg
inc
jne
in
inc
pushf
cmp
cli
je
popf
add
xor
mov
scas
pop
repnz
inc
adc
lea
xchg
push
push
hlt
sti
push
sub
inc
adcb
and
orb
or
dec
add
inc
xchg
add
adc
outsb
dec
adc
enter
jnp
lock
and
cld
lock
iret
sub
dec
jmp
push
adc
push
pop
adc
loope
ja
adc
sbb
push
pop
jg
test
sarb
in
push
mov
jg
leave
add
add
push
and
xchg
mov
aaa
sub
sub
xor
stos
dec
movsb
cmp
xor
pop
add
push
flds
push
push
aam
pop
jle
mov
and
test
or
inc
and
shlb
inc
sbb
sbb
pop
pop
mov
lock
sbb
je
and
jbe
clc
mov
cmpsl
adcb
and
push
sbb
xor
jns
in
insb
outsl
pop
mov
jno
test
popa
cmp
add
inc
lcall
add
adc
std
jle
std
je
push
aas
jne
outsb
fmul
mov
add
add
stos
mov
fldt
pushf
and
add
out
jbe
sub
sub
mov
cmp
sbb
test
adc
push
and
add
loopne
dec
push
lea
or
adc
out
adc
pop
sbb
adc
dec
push
or
out
add
xor
lock
jl
rorb
fcoms
add
les
xchg
negl
add
pop
popa
add
or
xchg
add
addl
clc
pop
arpl
mov
push
inc
aad
es
ret
sbb
and
dec
xchg
fdiv
or
cmpsl
sbbl
pushf
or
outsb
push
das
out
cmp
push
pop
add
push
xlat
cltd
pop
pop
push
or
jne
xchg
jne
cmp
fdivs
xchg
test
ljmp
dec
movsb
push
ret
jge
int3
mov
jg
sbb
xchg
in
mov
sbb
adc
inc
call
jge
dec
ljmp
or
es
orb
or
pop
out
xchg
mov
jmp
pop
movsb
xchg
xchg
in
adc
push
movsl
mov
dec
mov
pop
sbb
pushf
dec
adc
int
push
aam
push
adc
xor
inc
stos
sub
xchg
adc
dec
and
jo
push
lea
and
push
push
cli
sub
sub
test
pushf
xchg
inc
xor
dec
inc
in
sub
mov
push
push
push
out
mov
jbe
cmp
adc
fiadds
mov
pop
ret
mov
cmpl
cltd
hlt
inc
or
hlt
sub
mov
sbb
pushf
mov
rolb
je
push
les
testl
pop
jo
mov
rcrb
adc
push
jae
jbe
lcall
xor
xor
xchg
ret
cmovge
or
pop
mov
movsl
add
mov
jl
mov
dec
mov
jecxz
xorl
and
push
movsb
loopne
adcl
add
jl
add
xchg
std
cmp
pop
dec
dec
or
repnz
sub
mov
mov
mov
xor
lret
sub
out
mov
popa
aaa
cmp
and
sbb
cmp
repnz
movsl
push
mov
hlt
sub
mov
outsb
jne
jae
out
push
dec
sub
dec
repz
and
aam
fimull
divl
push
xor
popf
out
insb
in
adc
mov
lea
cmp
movsl
cs
gs
mov
cmpsl
ja
sub
sahf
cwtl
push
aam
jp
hlt
insl
es
mov
sbb
and
or
pop
jnp
and
or
push
fstpt
push
test
and
imul
stos
sbb
or
push
and
pop
mov
rolb
popf
mov
jg
adc
mov
lret
adc
add
lret
push
or
sbb
sbb
jo
sbb
out
xor
mov
out
inc
mov
sbb
mov
push
cs
inc
inc
das
pop
or
pop
mov
push
and
daa
addl
ss
xor
push
xchg
pop
pop
in
dec
push
adc
je
or
or
loopne
mov
imul
and
inc
and
inc
addb
xor
call
add
sahf
push
mov
mov
daa
loopne
push
xor
sub
ja
scas
xlat
fnsave
xchg
test
and
xor
push
or
or
inc
push
or
push
dec
push
pop
cmp
mov
adc
add
push
cltd
xchg
or
sbb
lods
add
pop
inc
add
aam
fldt
sbb
xchg
jnp
push
nop
sub
add
test
push
outsb
ss
int
mov
inc
xor
xor
push
xor
sub
adc
jg
lock
add
fwait
xchg
cmp
pop
cmp
dec
loop
add
adc
xor
pop
sub
lret
push
xor
mov
push
push
push
sbb
roll
sbb
add
cmpsl
std
decl
jnp
cmp
cwtl
lret
ss
aas
mov
inc
push
dec
pop
fcmovb
sbb
sub
sub
inc
in
adc
jmp
cmp
mov
aaa
lods
jle
cmp
inc
cmc
js
aas
outsl
and
es
pushl
mov
loopne
jne
cmp
pop
add
push
orb
push
fmull
or
dec
push
inc
xor
cmp
nop
ret
int3
dec
ret
or
es
pop
pop
mov
inc
negb
dec
push
sub
mov
jl
andl
push
adc
in
ret
iret
insb
sub
mov
cltd
adc
jne
jl
outsb
inc
jae
daa
xchg
dec
jnp
jecxz
cmp
mov
push
push
call
adc
test
inc
xor
stos
xchg
adc
fistpll
ret
icebp
add
mov
popf
scas
test
mov
adc
adc
stos
les
xchg
cmpsb
shrb
sbb
push
ret
jp
adc
cmpsl
dec
jl
and
or
mov
xor
icebp
jne
je
push
pop
fisubrs
mov
xor
js
push
add
inc
push
jbe
pop
ljmp
aaa
cmp
das
pop
bound
xor
or
xchg
or
fsubrs
add
add
mov
movsl
add
pop
pop
sub
movsl
divb
aam
orl
pop
lock
push
sub
inc
xor
je
and
jle
mov
mov
cmp
cmp
cmp
dec
ja
imul
ret
inc
sbb
mov
fdivl
cmp
dec
or
dec
jl
loope
xor
push
and
scas
mov
adc
rolb
adc
mov
lods
push
push
leave
ds
test
pop
adc
xchg
cmc
lods
mov
mov
dec
fstl
sub
add
enter
mov
aas
mov
inc
bnd
leave
add
push
pop
lods
in
push
popa
add
sarl
aaa
add
adcl
imul
push
push
pop
and
adc
adc
or
or
adc
and
cld
push
addb
xchg
test
clc
add
scas
nop
cmp
add
push
cmovle
mov
pop
fcoms
rolb
mov
pop
and
mov
or
push
xchg
xor
jnp
or
mov
mov
cmovo
inc
mov
jns
sub
fcomip
fcoms
mov
add
fsubrl
jmp
mov
ret
or
mov
mov
jp
es
mov
imul
push
push
jg
mov
rolb
jge
mov
cmpb
jbe
mov
fstps
mov
ljmp
mov
push
lahf
mov
enter
or
add
or
cmp
iret
pop
jmp
jecxz
push
xor
andl
push
movsl
push
leave
scas
add
jl
dec
xor
mov
add
inc
sbb
add
subb
xchg
fcoms
adc
inc
mov
or
rolb
sub
daa
js
lock
push
sarb
adc
or
mov
jmp
adc
js
adc
add
outsb
jo
xor
inc
aam
je
sub
mov
mov
shrb
or
add
sbb
test
stos
cmp
and
popa
arpl
bound
fcoml
mov
mov
cmpsb
sbb
push
mov
cmpsl
testl
pop
jae
fsts
add
push
insb
js
or
inc
ret
orl
cwtl
sbb
call
cmp
data16
mull
movsl
fsts
aas
je
xor
add
imul
or
add
pushf
inc
xchg
mov
enter
movsl
std
mov
adc
sbb
lea
sbbb
jle
pop
mov
mov
scas
jne
pop
add
push
add
cmpsb
fcoms
insb
xchg
mov
add
add
and
repz
cmp
aas
pop
xchg
sub
es
jbe
or
cmpl
cli
push
lea
test
mov
jmp
jge
mov
xor
shr
inc
add
gs
pusha
pop
call
loopne
adc
cmp
pop
out
add
cmc
xor
mov
insb
std
popl
push
inc
call
sub
or
adc
add
and
mov
mov
out
in
mov
jae
movsl
mov
movsl
dec
mov
es
sbb
jne
pop
jnp
popa
sbb
push
arpl
jecxz
jne
pop
adc
inc
lock
shl
push
xchg
adc
pop
jns
add
inc
and
lret
push
int
push
ja
testb
sbb
xor
shrl
or
push
mov
or
ljmp
int3
xchg
cmp
or
xor
sub
in
xor
bound
xor
loopne
push
adc
test
orl
jmp
push
fisubrl
pop
out
mov
adc
int
insb
or
mov
int
adc
xchg
pop
imul
loopne
add
inc
scas
fadds
out
or
xor
sbb
jle
out
mov
je
cmp
add
imul
push
jne
ss
call
add
cmpb
jl
add
jmp
push
jnp
xorb
push
push
pop
mov
inc
push
out
lds
dec
xor
cmpb
jle
add
inc
xor
dec
push
push
idivb
addr16
pop
push
xor
or
in
js
ret
jbe
es
js
js
mov
cmpsb
add
or
cmp
jo
cmp
nop
test
dec
jnp
mov
adc
inc
jo
into
sub
sahf
xchg
lock
mov
or
push
or
xchg
lret
push
lea
addr16
add
pusha
or
rorl
dec
jle
cmp
add
xor
cmp
call
jne
cmp
es
pop
sahf
notb
push
mov
push
and
lea
cwtl
add
sbb
sub
push
xchg
and
and
sbb
inc
fcomps
ret
and
int
mov
fistpl
or
insl
shlb
fisubrs
dec
jl
dec
dec
mov
push
adc
xor
int3
imul
lods
les
xchg
sbb
test
ficoml
movb
push
xchg
adcb
into
adc
loope
testl
jo
cmp
dec
es
fldenv
enter
dec
mov
test
sbb
dec
pop
ljmp
pop
pop
sbb
pop
or
adc
mov
sbb
ret
mov
mull
std
js
add
and
inc
adc
addr16
lret
add
add
sbb
mov
mov
je
add
inc
sub
adcl
fwait
sub
testb
in
rorl
jle
xor
or
loope
neg
ret
pop
xchg
jle
jmp
mov
cmpsb
add
mov
adc
imul
mov
xlat
scas
jno
xchg
pop
and
lock
jo
push
mov
es
mov
sti
js
movl
enter
inc
or
rcr
orb
add
pop
fwait
add
les
push
xor
sbb
cmp
sbb
addr16
adc
cmp
sahf
jb
testl
xorl
lret
add
add
fcoms
jbe
and
sti
inc
clc
pop
sub
daa
inc
insl
xorl
sbb
cmp
call
fidivrs
adc
add
mov
xor
mov
femms
fisubl
rcl
adc
fcomps
lds
aaa
sbb
aad
mov
mov
xchg
inc
push
lea
loopne
cmpsl
shr
and
adc
pop
das
in
adc
daa
jp
add
lret
mov
test
arpl
cmp
call
fsubrl
sub
xchg
pop
add
loop
cmp
jge
test
pop
cs
mov
push
addl
daa
adc
add
shl
jg
fisttps
ret
cltd
adc
inc
mov
bound
or
and
push
and
test
push
sbb
lea
jp
cmpsb
jne
ret
outsl
mov
xorb
sti
dec
ja
je
or
test
jbe
je
or
sub
sub
sti
das
adc
pusha
mov
push
or
pushf
stos
das
cmpl
movsb
xchg
mov
js
jne
sahf
popa
pop
inc
push
arpl
xor
jmp
int
cmp
je
push
adc
adc
push
xor
fnstcw
pusha
inc
mov
int3
lds
add
push
mov
mov
push
lcall
cmp
xor
push
andl
mov
mov
lret
icebp
and
sahf
dec
sub
lcall
inc
mov
fs
sar
sbb
push
sub
adc
in
xchg
mov
or
xchg
and
leave
inc
gs
jmp
ljmp
pop
inc
or
call
pop
or
ret
cmpsb
sbb
sub
dec
je
sub
adc
rorl
xor
sbb
adc
adc
cld
inc
outsb
fcmovnbe
pop
inc
or
in
mov
call
daa
or
xchg
fisttpll
ret
push
adc
inc
push
mov
nop
inc
dec
mov
sbb
fnstcw
insb
adc
pusha
jmp
dec
pusha
xor
or
divl
add
fs
pop
jp
and
push
mov
sub
adc
movsb
cmp
nop
aam
loopne
inc
jo
mov
jne
cmp
fldl
rol
inc
sbb
dec
inc
lds
mov
test
imul
fsubl
dec
or
ret
pusha
mov
ds
icebp
clc
and
orl
scas
and
or
push
add
movb
sbb
push
xchg
out
pop
pop
add
dec
imul
aad
mov
push
jg
dec
sub
je
push
push
lret
adc
or
mov
imul
fcompl
add
les
inc
xchg
xor
dec
mov
cmpl
cmp
cmp
xlat
xchg
pop
repnz
scas
inc
add
add
add
sub
adc
add
mov
push
dec
leave
test
enter
lahf
dec
xor
faddl
in
add
pop
mov
and
jecxz
iret
sub
inc
sbb
push
scas
js
lods
mov
jae
cmpsl
ret
push
sub
in
dec
sbb
nop
push
xor
int
testl
pop
cmc
dec
lcall
dec
sbb
pop
sub
out
jp
clc
xchg
push
inc
mov
je
out
loopew
mov
dec
fidivrs
xor
leave
add
pop
aas
and
adc
roll
sahf
push
dec
aam
movntps
pop
mov
sbb
xchg
pop
adc
in
xchg
push
dec
lret
pusha
xchg
dec
adc
pusha
adc
inc
sbb
mov
test
int3
lods
or
sbb
sbb
int
jne
iret
sar
dec
arpl
stos
std
decl
or
scas
mov
push
cmp
mov
or
adc
rol
fidivl
jge
clc
push
movsb
push
icebp
jle
add
sahf
and
or
mov
xor
js
inc
sub
cmpb
loope
cltd
insb
loopne
and
jb
data16
push
daa
push
mov
xor
add
es
jl
in
push
xchg
jge
xor
xchg
and
call
adc
idivb
hlt
or
scas
mov
data16
inc
pop
mov
xor
jo
sbb
push
dec
push
movsb
inc
jns
and
test
outsl
shlb
adc
xchg
xchg
jb
mov
mov
sbbl
insb
movl
stc
adc
xchg
or
lea
loope
sbb
sub
loope
ja
mov
mov
sub
sub
aas
mov
fs
add
pop
andb
sub
mov
and
push
or
inc
ja
or
jo
imul
ret
fistl
test
jl
pop
adc
or
add
js
mov
mov
in
fld
add
mov
int3
cmpsl
jp
popa
and
pop
add
inc
jp
adcb
push
mov
push
inc
mov
je
rcl
add
and
rcll
mov
daa
in
subb
xchg
push
insl
icebp
add
sub
dec
sahf
imulb
repz
pop
movsl
cltd
inc
xor
xor
aaa
push
xchg
loope
pop
aaa
in
mov
xchg
dec
cmp
inc
movsb
xor
push
mov
ret
pop
mov
movsl
mov
mov
lret
clc
add
pop
push
mov
test
sbb
mov
ficomps
add
mov
jo
xchg
mov
and
out
sbb
mov
test
adc
cmp
xor
push
and
pusha
popa
mov
bound
push
sub
adc
cmp
adc
push
dec
mov
repz
sub
xchg
push
mov
adc
jne
cmpsl
cmpsb
jo
xchg
jp
mov
mov
outsb
mov
iret
inc
push
inc
pcmpeqb
add
and
mov
pop
pop
or
cmp
mov
sub
or
mov
sbb
pop
push
xchg
ds
xor
jnp
test
movsb
or
sub
add
push
push
xor
lahf
fld
pusha
sub
pop
pop
jl
pushf
insb
enter
jne
xor
adc
mov
imul
adc
dec
inc
push
pop
and
and
popa
imul
test
in
or
inc
mov
cmp
mov
je
sti
jge
xor
cs
idivl
sti
or
jl
adc
test
cmp
comiss
inc
xchg
jmp
cmpl
push
imul
sbb
mov
add
rolb
sbb
cmpsb
pop
in
adc
pop
cmp
imul
add
inc
out
xor
adcb
jnp
cmc
add
push
shr
xor
xchg
inc
sti
push
mov
pop
push
js
xor
ja
jno
jg
ret
xchg
into
jle
sti
push
inc
stos
add
mov
dec
stos
and
lcall
mov
fwait
jmp
aam
notl
sub
cli
test
rcr
in
add
and
lret
sub
or
rcrl
imul
push
das
xor
dec
dec
push
mov
ljmp
sbb
add
and
je
mov
or
and
jle
por
dec
mov
cmpsl
loope
push
in
pop
les
xor
dec
ja
int
in
addr16
cmp
lods
repz
inc
add
insb
jp
loope
lock
mov
loope
jmp
push
loop
push
fcomp
mull
or
or
in
xor
or
lock
add
lret
mov
xchg
jge
or
add
or
and
or
punpckhwd
daa
subb
jg
xor
push
lret
cmp
je
ljmp
mov
popf
icebp
fcomps
fnstcw
dec
pop
addb
mov
xlat
jo
stos
dec
adc
push
or
sti
and
cmpsl
mov
jbe
pop
inc
sub
mov
pop
je
roll
mov
je
cmp
enter
imul
or
inc
subl
div
into
fsubs
cld
jae
mov
mov
sub
arpl
adc
or
call
scas
ret
mov
push
fstpl
inc
fsubrl
push
cmp
dec
and
sti
xor
mov
jnp
cmpb
xor
movb
jbe
xchg
orb
fsub
inc
mov
stos
loop
jp
cld
ss
inc
adc
and
gs
or
lea
dec
cmp
add
add
cmc
lret
and
cltd
push
nop
pop
orl
adc
cltd
loop
gs
push
sbb
in
adc
or
push
fisubl
dec
or
je
adc
incb
or
xchg
out
xor
push
inc
adcb
fwait
mov
nop
data16
and
sbb
xor
sub
mov
xlat
sub
add
lea
fwait
rcrb
xchg
sub
jae
inc
mov
cmp
add
jge
xchg
sub
jae
mov
xor
xor
lods
xor
dec
xor
les
fs
cmp
inc
shlb
jle
mov
cmp
mov
ss
inc
jne
movl
ret
ror
ja
jns
cmp
jle
fs
jg
jmp
push
das
inc
push
movsb
xor
js
add
cltd
int
cltd
jg
push
inc
and
jge
and
fiaddl
dec
insb
cwtl
jno
rolb
or
mov
loopne
sbbb
push
testb
mov
push
mov
mov
rclb
pop
rorl
call
addb
add
rcll
mov
adc
mov
push
popf
jno
test
and
imul
ret
jo
pop
pop
push
sub
push
mov
loope
arpl
jb
jbe
adcb
mov
mov
movsl
movsl
push
sbb
push
sub
jb
sbb
mov
imul
lea
cmp
sarb
push
loope
sub
push
movsb
cld
and
push
loope
sbb
pop
call
jle
pushf
inc
cmp
dec
jns
or
add
orb
stc
mov
add
fdivl
pop
push
into
loop
cwtl
icebp
test
mov
imul
push
push
xchg
call
mov
stos
in
jle
dec
aaa
and
in
push
testb
mov
mov
sbb
cmp
mov
push
negb
and
xor
loopne
add
push
ja
mov
js
ds
loop
cmp
xor
mov
jne
cmc
add
cmc
pop
imul
xchg
push
cltd
std
ljmp
sbb
push
sbb
popf
add
sub
dec
pop
sub
adc
or
jne
fs
push
int3
mov
add
call
popf
pop
pop
mov
aaa
add
or
loopne
and
scas
pop
mov
push
pop
in
int3
inc
dec
movsb
inc
add
add
or
rcrb
sub
imul
mov
shl
pop
rolb
pop
out
jne
mov
or
shl
cmp
in
or
add
cs
loopne
sub
ret
add
add
xor
push
xchg
push
fidivrs
mov
add
leave
arpl
mov
pop
push
push
cmp
add
add
je
popa
das
xchg
out
lahf
adc
jl
mov
and
test
mov
add
dec
or
fstl
stc
add
pop
cmp
jne
sbb
push
push
aaa
add
and
mov
lods
sbb
scas
mov
add
add
jp
add
push
xlat
push
push
jbe
push
jns
lock
pop
add
mov
push
xor
orl
adc
jns
lahf
mov
or
push
xchg
scas
in
inc
js
dec
sub
push
and
or
cmp
pop
jae
subl
nop
pop
rcl
push
jp
or
sbb
je
lods
cmpb
test
in
jo
jnp
mov
adc
subb
call
les
cmpb
adc
push
mov
sbbl
jns
inc
mov
and
ret
lock
xlat
sub
jge
adc
lret
decl
sbb
xchg
cmpl
andl
das
notl
movhps
nop
fs
or
call
loop
adc
mov
pop
and
mov
ja
lock
mov
lcall
lods
test
sub
gs
test
cmpsb
adc
sub
push
add
sub
jne
shlb
push
push
enter
jge
xor
adc
push
xor
pop
push
or
mov
mov
jmp
mov
cmp
jbe
shll
cmp
push
xor
cmpb
rcr
push
imul
push
shll
je
stos
jno
mov
xchg
inc
lock
add
bound
add
jns
mov
xchg
and
adc
adc
inc
sbb
xchg
add
mov
push
inc
add
mov
add
mov
cmp
sub
jo
add
mov
sbb
mov
cmp
push
cmp
push
pop
rol
bound
lods
add
jle
mov
mov
xchg
jno
adc
mov
clc
inc
or
sub
add
addl
xor
nop
pop
dec
nop
pusha
and
push
aad
push
nop
adc
stos
pop
fildl
add
repz
add
lods
and
lock
dec
or
scas
pop
enter
std
aaa
aas
ja
push
sbb
inc
add
mov
or
ljmpw
cltd
and
jg
loop
xor
fisttpl
and
add
inc
and
add
or
scas
les
or
rol
test
push
cmp
mov
stos
aam
je
sbb
jbe
jb
lock
mov
arpl
push
push
roll
fwait
sarl
insb
fstl
xor
repnz
mov
push
jbe
mov
fwait
sub
es
inc
adc
ret
sub
iret
cmpsb
jno
jl
push
adc
sbb
adc
int3
mov
rol
inc
enter
popf
loopne
xor
dec
mov
aas
push
push
pop
mov
xor
ss
jo
daa
inc
jmp
dec
leave
mov
sbb
addr16
push
pop
sbb
adc
add
pop
ret
jne
scas
inc
or
cmp
adc
sbb
jae
or
jecxz
and
cmp
adc
addl
sub
push
mov
pminub
adc
rorb
jne
aad
add
in
lods
xchg
push
push
dec
stos
or
sbb
jp
jmp
sub
sti
push
adc
sub
sub
lock
push
test
or
sti
and
pop
xlat
mov
fs
adc
cmp
icebp
es
pushf
add
inc
add
stos
jo
fmull
adc
cwtl
loope
cld
addb
jae
call
fcoml
pushf
mov
add
sub
addl
add
stc
hlt
test
sbb
sub
or
test
sbb
sub
aaa
ljmp
adc
mov
dec
test
adc
je
repnz
aaa
mov
dec
push
js
sbb
sbb
add
push
jge
mov
xchg
jo
dec
dec
pusha
lock
xor
pushl
and
adc
hlt
dec
xchg
xchg
mov
sbb
js
push
hlt
test
in
inc
imul
xor
scas
icebp
push
out
push
dec
push
enter
xchg
adc
inc
add
sarb
cwtl
and
push
push
and
or
pop
and
or
test
adc
or
pop
or
and
bound
add
je
dec
mov
adc
mov
inc
push
add
cmpsl
in
test
jl
push
clc
adc
lock
xor
jge
mov
push
cs
cld
adc
adc
mov
cld
sub
pop
pop
mov
fldl
pop
loopne
and
jbe
sub
lea
jle
push
shlb
cmp
jb
popa
push
pop
pop
cmp
inc
outsl
je
cmp
lock
cmp
popa
outsl
xchg
adc
leave
nop
sbb
cmp
or
dec
hlt
mov
pop
mov
jg
dec
in
loopne
inc
xor
dec
inc
dec
jle
inc
or
push
add
inc
push
inc
inc
sti
jl
test
xor
xchg
jg
cmp
jg
nop
das
faddp
jg
mov
sub
mov
push
cltd
pop
adc
test
clc
outsl
fcmovnb
push
inc
incb
sarb
and
rcl
sub
push
imul
xor
and
es
cmc
andl
xor
push
icebp
inc
inc
xchg
sbb
imul
push
inc
add
in
movsb
stos
arpl
int3
in
sub
sub
xor
cmpsb
repz
sbb
xor
dec
movsb
or
and
mov
sbb
cmp
add
rcl
jg
jno
movl
movsb
add
jae
inc
movsl
imulb
add
loopne
and
decl
jno
jne
jl
xor
or
push
bound
sub
dec
ret
or
xchg
push
xor
xchg
mov
pushf
push
mov
repz
add
popf
add
test
movl
push
mov
lret
inc
sub
shll
push
pop
jns
jmp
iret
inc
adc
movl
xor
pop
mov
daa
xchg
fwait
jmp
sbb
push
and
jnp
cmp
push
gs
movsb
ds
cmp
adc
add
cmp
pop
inc
sbbl
inc
cmp
out
and
inc
in
scas
jl
lcall
push
mov
mov
xchg
insb
add
inc
dec
add
shlb
mov
mov
xchg
or
popf
xchg
and
or
xchg
xor
jge
xchg
fstl
je
pop
cmp
sub
daa
sbb
push
push
push
cmp
mov
sbb
cmp
icebp
sti
rep
inc
inc
xor
fnstsw
or
sbb
cmp
jae
or
sbb
add
cmp
sbb
andl
outsl
xor
sub
jne
push
push
in
cld
jae
push
push
mov
cmpsb
xlat
jge
xor
push
and
push
mov
clc
pop
loopne
adc
pusha
sub
inc
xor
loop
pop
sub
sub
and
push
jecxz
aas
mov
inc
lock
mov
mov
or
les
adc
loop
fists
xor
sub
or
into
add
mov
nop
and
mov
repnz
cmp
inc
scas
push
iret
test
xor
das
mov
lret
xchg
mov
jae
sbb
mov
push
push
push
mov
add
sub
xor
mov
cmp
and
mov
add
push
xor
dec
adc
hlt
lock
inc
pusha
cld
addb
or
dec
gs
popf
push
push
test
movsl
sub
call
fdivrl
call
adc
decl
mov
xchg
push
push
xchg
dec
daa
lock
xchg
push
in
xor
in
scas
lods
sbb
mov
adc
adc
add
loopne
add
push
rolb
and
roll
sbb
push
mov
sarb
dec
jne
lcall
mov
jg
in
cmc
add
push
loope
sbb
jb
js
add
nop
dec
and
add
cmp
dec
ss
mov
pushf
sbb
or
jns
incl
sub
mov
stc
sub
pusha
loopne
dec
sub
js
es
or
clc
adc
and
inc
xor
adc
add
or
jnp
call
fwait
jb
inc
and
shlb
add
add
and
add
test
adc
jnp
xor
and
inc
stos
inc
loope
or
push
mov
and
sbb
mov
cmpsl
add
xor
dec
adc
xor
sub
in
inc
cmp
xorb
test
cmp
jbe
pop
les
adc
popl
hlt
sub
sar
divl
mov
add
rcrb
cmp
mov
or
xor
ret
sub
jecxz
es
shlb
in
jbe
mov
les
inc
inc
jmp
xchg
add
call
rcrl
or
ret
xor
fstpt
sahf
ja
test
mov
insb
sub
rcr
or
push
iret
test
pop
xchg
push
int3
rcl
mov
cmp
and
ds
push
and
icebp
mov
ret
and
shr
loop
jo
xor
stos
or
jl
adc
dec
xorb
pop
fwait
push
ret
notb
outsb
int3
aam
je
push
cmpsl
sub
or
lcall
lcall
andl
push
mov
inc
or
sbb
sti
sbb
pop
add
ret
and
aaa
int3
add
jne
pushf
sbb
lret
adc
and
lods
in
dec
pop
or
push
pop
mov
dec
or
inc
pop
enter
pusha
mov
sbb
adc
fisubrs
orb
push
shll
mov
stc
jne
loopne
ret
fsubrs
incb
inc
mov
pop
cmp
and
sbb
jae
jb
jae
das
inc
cmpl
inc
rcrb
jae
mov
add
pop
push
pop
push
cmp
ret
push
push
push
dec
icebp
sbb
push
xchg
mov
and
inc
test
inc
inc
test
adcl
or
dec
sub
in
jo
cmp
add
adc
jbe
and
inc
sbb
cltd
mov
cltd
ljmp
jnp
mov
add
push
fwait
and
xchg
or
jne
fs
or
jg
sbb
or
insb
and
dec
push
jmp
adc
daa
or
jbe
cmp
add
dec
ja
mov
add
sbbw
dec
outsb
xchg
adc
pop
enter
dec
and
adc
or
pop
fwait
dec
mov
mov
fsubs
or
sbb
fwait
lods
dec
mov
jae
jmp
mov
sbb
cmp
xchg
lret
add
xchg
daa
je
dec
adc
xlat
or
cld
or
test
sbb
push
inc
mov
pop
pop
fsubs
sub
cmp
cwtl
jne
cmp
or
dec
pop
mov
add
add
sbbb
mov
nop
xchg
mov
push
add
mov
test
movsb
mov
cmpsb
or
sti
pop
and
lods
mov
push
or
nopl
mov
and
xchg
and
mov
and
and
jg
sub
and
sbb
xchg
xchg
sub
cs
into
bound
or
push
cmp
xchg
mov
mov
xor
push
pop
jb
add
and
js
add
aas
xor
or
xor
mov
mov
xchg
rcrl
lea
mov
rol
leave
fnstsw
or
or
in
pusha
cmp
pop
add
in
inc
or
sbb
adc
xor
add
sbb
daa
or
add
sbb
int
cmp
in
fidivs
loope
jne
xchg
adc
push
ds
nop
jae
rorb
sub
jne
mov
push
inc
inc
cmp
insb
mov
or
pop
jge
aam
mov
ja
dec
cmp
mov
and
xor
adc
daa
dec
push
sbb
xchg
scas
dec
repz
inc
mov
shl
dec
sti
xor
fimuls
enter
cmp
roll
int3
loopne
in
mov
mov
mov
test
add
push
shrb
movsb
pusha
lcall
mov
xchg
dec
jne
xor
inc
pop
pop
hlt
mov
aas
pop
mov
divb
push
push
jns
push
cmp
mov
xor
push
push
cmp
addr16
push
jmp
mov
add
cmp
push
inc
or
loopne
sbb
dec
sub
inc
in
imul
sub
icebp
cmpsb
ss
dec
pop
lock
sub
or
push
lock
sub
divl
push
push
movb
iret
inc
loopne
lahf
enter
and
jns
mov
dec
arpl
inc
jecxz
sub
jns
xchg
popl
je,pt
and
shlb
loopne
lcall
mov
es
or
adc
and
xorb
inc
push
mov
cmp
sti
lods
cmc
xor
or
out
jno
push
add
pop
adc
xchg
adc
lock
add
fwait
or
jne
push
cmp
and
insb
sbb
mov
xchg
sbb
jl
xor
fs
popf
jmp
xor
out
lret
adc
push
inc
add
mov
test
sbb
insb
test
bound
xchg
or
cmp
mov
jb
mov
sbb
sub
loope
or
pop
loop
test
or
pop
sub
lcall
xor
add
mov
lret
add
popa
sub
sbb
andl
mov
and
pop
lock
movsb
imul
lock
sbb
mov
add
rcll
xor
pop
push
push
pop
adc
xor
std
inc
push
mov
loope
arpl
or
push
lods
andb
mov
pop
mov
mov
add
stos
popf
cmp
sti
in
sub
push
pop
and
adc
loopne
or
sbb
fmuls
call
add
xchg
push
les
push
adc
rclb
jne
xor
mov
nop
inc
scas
in
push
push
cli
aam
push
lret
mov
jl
jo
jnp
dec
push
cwtl
rclb
lods
or
inc
and
imul
push
sub
cli
aam
xchg
stos
sarb
fcomp
fwait
addl
xchg
cld
mov
imul
stos
xlat
aad
mov
push
add
push
jge
cmp
and
push
push
push
dec
sbb
or
loop
cli
jb
or
pusha
sub
push
push
pop
clc
jl
mov
xor
pop
hlt
adc
cli
clc
mov
test
jbe
jmp
es
setg
outsl
subb
and
movsl
push
addb
add
rolb
insb
sbb
mov
and
pop
test
scas
pop
imull
inc
and
ljmp
jo
rolb
movq
cld
sub
push
xor
adc
or
fldl
mov
cvttps2pi
fsubrl
loopne
sbb
xchg
data16
mov
or
inc
pop
mov
lea
sub
add
xchg
pop
push
cwtl
std
clc
lods
push
mov
adc
or
or
dec
ja
cmp
stos
mov
mov
sub
inc
add
dec
mov
lods
arpl
divl
adc
jb
push
cwtl
add
call
call
push
es
push
mov
into
xor
sarb
fnstenv
push
outsl
inc
push
fs
outsl
clc
orl
push
push
lds
fwait
outsb
jnp
mov
in
push
and
inc
ja
pop
mov
in
in
xchg
push
movsl
outsb
dec
ret
sub
aad
and
pusha
arpl
repnz
mov
or
lock
cmp
loopne
ret
push
jmp
loopne
and
popa
dec
icebp
xor
add
int
inc
sbb
loopne
dec
lcall
and
add
pusha
pop
ss
xor
inc
out
enter
ss
les
aam
int3
test
dec
sub
xchg
imul
push
insl
push
push
lea
pop
adc
test
mov
dec
inc
push
mov
test
aaa
into
push
out
xchg
je
mov
jo
dec
push
mov
or
mov
repz
jo
xchg
ret
xor
sbb
test
aam
out
and
bound
xchg
sub
push
loope
sbb
cs
sbb
or
pusha
ret
sbb
cwtl
arpl
das
xor
cmc
out
loope
cltd
push
addl
rclb
movsb
outsb
sbb
jno
lods
into
scas
or
push
xchg
or
mov
lock
mov
mov
loopne
data16
push
xor
imulb
push
aam
icebp
pop
push
mov
push
outsl
mov
mov
movsb
ds
push
adc
add
push
lahf
mov
xor
xlat
gs
pop
outsl
insl
jp
das
inc
jb
mov
ds
fadds
adc
xchg
pusha
lahf
movsb
dec
jmp
and
rorb
sub
mov
cmp
pop
pushf
mov
or
lahf
mov
jo
in
adc
xchg
lds
add
mov
pop
lahf
and
nop
addb
int3
inc
push
test
insb
push
dec
inc
lret
add
sbb
xor
scas
gs
movsb
int
and
or
cmpsl
add
pushf
addl
insb
xor
fmuls
sti
add
adc
adc
xlat
push
push
inc
cmpsl
stos
xor
mov
repz
popa
shll
addb
jnp
cli
push
jo
aas
xor
jo
mov
and
add
push
mov
test
fimuls
sub
and
add
divl
mull
or
ds
fs
rclb
push
and
hlt
inc
mov
sub
adcb
add
mov
xor
outsl
mov
push
cmpsl
imul
push
sbb
mov
add
les
lock
movsl
das
inc
out
add
shr
ss
push
es
sbb
enter
xlat
sbb
mov
mov
in
mov
fistl
mov
adc
mov
enter
fdivrs
stos
iret
add
imul
movsl
test
insb
and
test
cli
sub
adc
in
xor
adc
push
xchg
add
pop
sub
loopne
xor
xchg
lcall
sti
push
push
sub
mov
data16
xchg
stos
loope
dec
add
in
cmpb
cmp
clc
pop
push
or
dec
in
pop
or
call
add
insl
jno
test
dec
lret
xchg
xchg
imull
cmp
inc
clc
mov
ss
xor
nop
ljmp
jbe
popa
cmp
dec
and
xor
sub
pusha
imul
sub
xor
or
lret
out
mov
enter
or
rolb
jo
mov
and
int
popf
pop
in
inc
imul
mov
sub
lods
adc
das
add
outsl
inc
clc
and
adc
adc
xchg
inc
pushf
pop
out
jne
push
pop
sub
or
inc
jbe
xchg
movsb
test
lret
in
xor
add
adc
lahf
jp
pusha
cld
mov
adc
sub
push
stos
popf
pop
mov
scas
fmul
inc
test
and
adc
clc
mov
sub
rorl
fnstcw
popf
mov
enter
je
movsb
sarb
pop
lock
sbb
lea
nop
jo
movsl
cwtl
xor
inc
in
lods
jmp
data16
xlat
sahf
mov
mov
bound
mov
pop
sbb
jle
aaa
je
jnp
sub
mov
js
sahf
sti
mov
mov
rcll
jne
fmuls
sub
sub
pop
mov
xor
ljmp
scas
outsl
push
pop
out
pop
ret
cmpsl
mov
pushf
xchg
mov
and
dec
add
negw
xorb
sbb
push
dec
outsb
xor
cmp
lcall
or
mov
xchg
mov
sbb
incl
push
inc
mov
adc
loope
addb
pop
add
sar
insl
mov
xor
push
jbe
and
dec
outsl
shl
cmp
jno
jmp
cld
test
xchg
lods
mov
or
loopne
sub
adc
push
ud1
incb
sbb
add
adc
and
push
pop
cmpsb
push
adc
and
pop
popf
cmpsb
outsl
xlat
push
push
repz
adc
mov
push
lea
or
mov
adc
sub
push
movsl
dec
lock
and
dec
mov
enter
pop
lods
mov
sbb
add
andl
push
fisubs
push
ret
push
lods
pusha
sbb
xlat
adcb
fwait
and
mov
call
mov
jge
jbe
mov
loopne
xchg
test
incb
ret
sub
mov
fsubr
pop
xlat
lret
lret
xchg
data16
out
rorb
pcmpeqw
mov
mov
xor
fnsave
int3
test
movsl
fldcw
push
ret
adc
dec
and
jno
xor
lea
mov
incl
dec
jg
adc
mov
inc
inc
inc
push
jl
loop
jmp
push
js
jae
inc
stos
dec
cmp
jb
cmpsl
pop
sub
mov
lods
or
jb
xchg
lock
subb
jge
and
dec
xor
in
repz
push
cmpl
add
xor
mov
add
out
jo
mov
and
push
mov
mov
mov
pop
and
mov
xchg
je
js
xchg
or
add
sti
mov
mov
je
or
jecxz
stos
push
mov
rorl
pop
fsubl
rcrl
loope
jp
pop
hlt
lock
repz
ds
jle
xor
or
sbb
cmp
cmpb
mov
pop
stc
push
call
pop
or
cmpl
adc
andb
pop
ss
outsl
xor
cmp
jbe
push
stos
sti
lea
cltd
gs
push
and
cltd
ret
cmp
jb
add
xchg
lods
adc
cmp
push
cmp
movsb
scas
sbb
push
aaa
ret
ljmp
jne
scas
dec
jno
pop
pop
sub
dec
or
xchg
pop
call
loope
int3
mov
jae
insb
arpl
mov
push
adc
xchg
xor
fcmovbe
sub
in
in
push
jo
loope
in
push
push
xchg
rcl
sbb
or
add
fsubrs
push
xor
popa
push
pop
add
loopne
add
mov
or
lahf
push
push
and
mov
xchg
add
loop
fdivl
out
push
loop
inc
lods
adc
bnd
ss
adc
mov
shr
filds
add
push
rolb
push
mov
and
jb
xor
dec
jno
mov
adc
mov
addb
scas
cltd
mov
scas
popf
mov
jp
or
cmp
push
or
inc
pop
rolb
push
jns
cmp
sarl
mov
pusha
add
xorl
ja
mov
push
lcall
adc
jg
jae
mov
and
xor
xor
add
sbb
std
pusha
mov
and
mov
movsb
test
decb
cmpsl
adc
inc
mov
aaa
clc
jge
divb
outsb
lock
sub
repz
xor
xchg
adc
cmpsb
mov
jb
pop
leave
sbb
iret
sub
or
adc
daa
cmp
lock
mov
mov
lods
push
rcrb
jo
push
das
aas
movsb
mov
out
cmp
xor
not
pop
std
sub
out
pop
xchg
jp
je
cli
ljmp
je
data16
sub
push
aam
dec
scas
jle
call
cmp
jg
outsb
adc
int
add
cmp
or
outsb
add
inc
sub
jge
push
jle
cmp
jns
xchg
push
ficompl
jp
outsb
and
mov
lock
mov
daa
pop
clc
pusha
xor
inc
test
fisttpl
jb
jmp
notb
jge
cmpsb
dec
cmp
cmp
xor
mov
sbb
xor
mov
inc
inc
jmp
inc
jo
add
addr16
and
or
cld
lock
pusha
iret
add
ret
xor
and
movsl
push
or
cmpb
add
jae
inc
or
adc
sub
jge
lret
jmp
pop
cmpsb
xor
add
dec
fs
or
push
sbbb
pop
pop
jge
mov
sub
mov
dec
seta
jle
mov
mov
cmp
movsl
outsl
push
out
sbb
andl
and
adc
push
mov
scas
add
push
sarl
imul
lret
xchg
lret
mov
xchg
les
aam
in
add
je
fldcw
adc
add
mov
insl
adc
jo
jl
push
inc
movsb
adc
mov
add
stos
pop
push
push
inc
adcb
in
jns
adcb
test
add
mov
add
push
in
and
jl
rolb
push
imul
xchg
popa
aaa
imull
andl
enter
or
or
popa
add
jo
push
or
jge
push
test
adc
rorb
int
rclb
divl
jo
xchg
rcl
push
add
and
je
das
sbb
adc
add
movsb
add
add
nop
cltd
xchg
ret
mov
iret
cmp
lea
add
cmp
fldl
cmp
jle
inc
inc
js
mov
and
pop
outsl
push
mov
mov
dec
std
add
mov
xchg
mov
or
test
xlat
mov
pusha
and
dec
add
push
pop
push
pushf
xchg
nop
push
scas
cwtl
scas
mov
mov
xlat
clc
cmc
dec
insb
mov
xchg
push
jg
xorl
fsts
mov
rol
add
lahf
push
xchg
mov
mov
adc
orb
xchg
jae
xchg
add
xchg
movsb
sub
fistpl
fcomps
push
aas
mov
test
push
and
test
add
mov
mov
cwtl
add
push
hlt
push
into
dec
cmc
xchg
or
loope
les
push
xor
imul
xchg
imul
or
sarb
decl
inc
ss
mov
incl
adc
je
cltd
test
scas
test
gs
pop
cmp
loope
xor
js
loopne
shrb
lea
pop
out
int3
xor
popf
sub
mov
inc
push
stos
push
add
cmp
push
test
inc
sbb
xor
and
rclb
push
sbb
or
jp
loopne
pop
ljmp
or
inc
dec
jmp
mov
sub
mov
pop
fadd
dec
jnp
mov
or
sbb
mov
mov
call
nop
or
inc
add
cmp
testl
cmp
jno
xor
insl
lea
mov
mov
rolb
aaa
jl
rol
call
aad
mov
adc
mov
mov
add
or
inc
test
outsb
nop
lcall
mov
shr
cmp
jbe
add
jmp
add
fcompl
cltd
sar
add
add
add
inc
xchg
and
mov
test
mov
adc
dec
mov
xchg
inc
in
fistps
push
int3
xor
pop
mov
push
mov
loope
mov
cwtl
stos
das
mov
test
add
cmp
add
sub
push
das
fisubs
pop
scas
and
push
pop
or
les
leavew
int3
add
dec
cli
aad
add
sbb
filds
mov
jl
mov
shrb
or
cmp
repnz
test
xor
sub
lahf
shlb
fmull
ror
sub
or
xor
aaa
orl
jb
push
mov
push
xor
sub
sbb
cwtl
arpl
and
pop
xorl
aas
jg
and
stos
inc
sbb
jl
aaa
je
leave
mov
jmp
mov
popf
rclb
loop
sbb
call
insb
mov
ds
add
popf
in
inc
jge
add
inc
rcrb
int
inc
mov
push
sbb
xchg
xchg
or
test
or
add
and
dec
cmp
inc
fisubrl
ja
les
xor
dec
mov
scas
sub
xchg
mov
push
mov
aas
mov
add
mov
ret
call
repz
push
sbb
or
push
lcall
mov
pop
xchg
adc
outsl
lods
dec
loopne
inc
clc
jle
in
push
add
dec
cs
fnsave
push
add
jmp
insl
inc
rorb
add
stos
dec
jne
add
fsubrs
xchg
or
rsqrtps
dec
negb
cmp
sbb
or
int3
stc
fmuls
arpl
mov
cs
notb
je
mov
sbb
int3
add
ret
lock
sbb
push
femms
sarl
inc
sbb
out
popa
clc
pop
mov
inc
xor
adc
enter
jmp
pop
dec
adc
out
rorb
pop
mov
dec
inc
adc
je
adc
dec
sub
test
test
enter
nop
sbb
int
push
pop
js
dec
in
adc
xchg
sbb
jle
dec
mov
in
inc
xchg
push
push
lock
ds
mov
push
ds
pop
mov
pop
adcl
shrl
enter
push
sub
fsubrs
mov
jne
push
or
jno
dec
test
test
add
or
bound
fcom
sub
push
mov
pushf
pop
jmp
aaa
xchg
ret
icebp
xor
scas
jb
push
dec
movsb
roll
cmp
dec
xchg
ja
and
sbb
xlat
mov
es
add
filds
mov
mov
push
push
xor
clc
sub
mov
sbb
push
push
pop
imul
stos
incl
adc
out
pop
insb
mov
mov
negb
pusha
lret
mov
cltd
mov
in
arpl
loop
or
add
xchg
dec
je
push
jns
arpl
insl
lock
xor
into
dec
scas
mov
push
jno
push
movsl
adc
int3
ret
pop
stc
sbb
mov
fistps
addl
cltd
push
popa
enter
lcall
vpshab
jmp
mov
push
call
xchg
dec
ds
inc
jge
add
add
pop
jg
into
push
sti
push
add
xor
popa
dec
imul
pop
test
dec
jne,pn
inc
push
sbb
or
inc
or
ret
lret
push
add
aam
jmp
das
cmp
pop
cwtl
cli
or
ljmp
cli
xor
cli
cmpsb
mov
add
test
testl
lock
pop
mov
push
and
lret
mov
push
stos
add
adc
popf
adc
cld
push
mov
push
push
xchg
aaa
add
fsubs
je
lods
rcll
inc
xor
insl
add
add
fistpll
subl
insl
enter
add
adc
repnz
dec
push
mov
mov
mov
push
rcll
sub
mov
rdmsr
mov
sbb
add
or
popa
jl
movsl
sub
jnp
arpl
out
pop
sbb
ret
add
pop
cltd
mov
addr16
sbb
push
in
and
inc
sahf
mov
or
add
sub
inc
fwait
sub
cmp
and
imul
xchg
cmp
sbb
pop
inc
pop
lea
mov
jmp
mov
clc
push
cmpb
adc
dec
mov
jns
es
js
push
bound
xchg
and
adc
pop
mov
sub
xchg
lods
lea
lcall
cmp
pop
je
aaa
add
dec
inc
cmp
cmp
push
rolb
pop
shlb
jne
les
pushf
idiv
repnz
mov
mov
ficoml
mov
repz
mov
mov
or
sbb
inc
or
cwtl
roll
mov
mov
sbb
adcb
sub
sub
cltd
sbb
cli
testl
rolb
push
add
or
push
jl
push
xchg
mov
arpl
dec
adc
or
adc
aaa
inc
dec
adc
loopne
xor
call
lret
cmpl
hlt
jle
push
pop
sti
mov
push
jne
jo
sub
push
cmp
cmp
in
dec
jbe
push
mov
ds
and
pop
cmp
shrb
sbb
xor
pop
pusha
leave
lret
or
addl
xor
and
and
sub
loope
test
xchg
cmp
inc
js
dec
ds
xor
in
add
mov
pop
mov
cltd
push
mov
lret
push
cmp
hlt
xor
and
add
pop
imul
push
fildl
add
or
mov
add
push
loop
rcrl
sbb
and
push
stos
dec
lea
add
orl
popa
or
add
repnz
adc
incl
or
mov
fs
mov
or
adc
test
mov
enter
cmp
push
dec
test
pusha
mov
nop
xchg
subb
in
in
movsb
pushf
lods
mov
int3
mov
repnz
in
cld
rclb
sub
inc
xor
fmull
cmpb
xchg
inc
lea
cwtl
andl
mov
mov
jl
mov
popa
stos
subl
das
push
mov
add
lcall
mov
dec
aad
ss
mov
and
aas
mov
pusha
xchg
mov
add
icebp
inc
adc
ss
sbb
mov
dec
xchg
push
mov
xchg
jl
xchg
dec
enter
in
je
popf
add
fs
js
adc
adc
shlb
sub
divb
add
jae
inc
or
mov
xchg
addr16
dec
inc
mov
mov
imul
test
mov
push
cmp
jmp
or
push
jge
je
sbb
cld
lahf
jae
scas
aas
cmp
jne
push
mov
fcmovnb
cltd
pusha
loopne
cmpsb
fs
sbb
sub
xlat
imul
jmp
outsb
ss
addl
mov
add
ljmp
movsb
mov
inc
push
iret
mov
add
sbb
jmp
xor
push
inc
sub
mov
inc
addb
lds
jo
sub
into
movsb
adcl
mov
subl
adc
aaa
cmp
push
push
test
sarb
inc
sub
jne
test
rcrb
mov
jg
or
jo
push
mov
cmp
jno
or
ret
sub
loopne
cmp
lods
push
adc
mov
dec
shlb
popf
push
add
dec
lock
lret
sub
in
mov
clc
cmp
and
das
jge
dec
inc
or
jl
out
test
pop
clc
js
sbb
add
dec
and
pop
sbb
imul
dec
push
xor
jmp
jge
add
push
dec
loop
fwait
mov
cmp
pusha
inc
jo
ret
mov
and
rcl
push
inc
hlt
jmp
mov
push
mov
sbb
mov
loopne
cmc
rcrb
or
movsl
loop
push
add
lods
adc
sub
cmp
repnz
sub
pop
lret
sbb
inc
inc
mov
adc
inc
mov
jl
or
mov
rclb
gs
pop
icebp
out
adc
imul
sbb
xchg
add
pusha
push
push
xlat
inc
mov
repz
iret
xchg
iret
push
push
ja
and
inc
push
sub
or
clc
mov
add
insl
fsubrl
test
in
xchg
jmp
stos
inc
loop
pop
xor
pop
jg
or
subl
sbb
cltd
pop
leave
fldenv
addb
pusha
or
les
ss
jnp
dec
cmpsb
dec
sti
in
repz
stos
in
mov
add
add
leave
jne
loopne
mov
mov
sahf
imul
add
popf
les
jo
les
inc
xor
cmpsl
adcl
mov
rcll
sbb
imul
aas
scas
je
xchg
push
push
xchg
mov
mov
inc
mov
repz
dec
or
nop
cmpsl
mov
cltd
sbb
lret
andl
or
add
aaa
test
xor
enter
hlt
mov
icebp
lock
faddl
adc
sub
add
aaa
add
cmpsb
movsl
push
push
movsl
mov
inc
hlt
fstl
cld
xor
loopne
arpl
xor
fldl
pop
fistpl
fsubr
pop
faddp
andl
sbb
mov
adc
popf
sub
mov
cs
and
inc
insb
adc
add
xchg
lods
and
nop
jne
sbb
mov
cmp
lret
sbb
mov
leave
pop
test
pop
les
adcl
push
add
fdivrs
sub
mov
clc
xor
out
mov
add
filds
sub
sub
add
sbb
push
or
lds
add
mov
cmp
or
and
sbb
clc
dec
xlat
fsubs
vphsubbw
mov
xor
aaa
cmp
call
push
cmp
mov
int3
dec
sbb
cmp
lock
push
xor
jnp
mov
jne
push
fistps
in
sub
mov
add
ret
fimuls
divb
jmp
mov
cmp
jge
and
xor
clc
movsl
movsb
dec
sbb
es
xchg
inc
int
push
insl
cmpsb
mov
adc
inc
mov
gs
and
adc
cwtl
cltd
pop
aaa
push
imul
sbb
mov
pusha
popf
cwtl
insl
test
jg
cmp
add
cmp
loopne
stos
sbb
adc
push
pop
pusha
xchg
pop
mov
loopne
or
imul
inc
add
adc
push
pop
xchg
add
ficompl
or
jns
mov
mov
wrmsr
mov
adcb
cld
mov
bound
pop
dec
mov
mov
pop
bound
leave
inc
pop
arpl
xchg
jmp
pop
sub
push
insl
mov
sbb
nop
fisubrl
adc
mov
pop
ret
dec
cwtl
add
pushl
add
ljmp
dec
or
jne
pop
mov
rcrl
mov
aam
test
mov
mov
inc
adc
mov
movsb
sub
mov
imul
and
lock
adc
push
loop
fcomi
mov
ja
jle
loopne
xchg
test
add
fisttpll
in
and
and
pop
fmuls
push
adc
adc
das
faddl
test
cmp
mov
add
adc
xchg
rorb
or
dec
ret
inc
stos
out
cmpsb
xorl
fsubs
mov
test
fcoms
les
push
push
js
push
outsb
rcll
add
dec
sbb
scas
fnstenv
insb
add
push
fmull
popa
xchg
cmp
adc
and
loope
fsubl
push
xlat
sub
or
push
lods
fildl
dec
inc
mov
rolb
pop
dec
sub
sub
mov
xor
enter
jle
inc
cmpl
adc
sbbb
mov
fisubl
je
bound
adc
cmp
pop
fcoml
adc
push
pop
dec
add
push
mov
sub
call
pop
das
push
rclb
test
pusha
mov
push
cs
clc
pmuludq
loop
dec
adc
pop
and
add
repnz
jg
xchg
repz
sub
shrb
arpl
sbb
icebp
lock
or
iret
fwait
stos
aad
rorb
jle
int
add
ret
mov
jne
mov
xchg
add
out
enter
mov
in
sub
shrl
jl
ss
mov
ret
inc
arpl
mov
mov
xchg
sub
clc
mov
mov
mov
jmp
mov
xchg
or
shld
push
add
or
inc
push
pop
je
subl
push
lods
jmp
aam
bound
addr16
mov
mov
add
mov
pop
add
cmp
es
clc
xor
inc
rolb
movb
push
pop
scas
adc
adc
clc
add
rcrl
scas
leave
add
pushl
dec
xchg
adc
lods
mov
adc
sub
adc
mov
sub
push
sbb
int
pop
push
dec
pop
stos
aas
cmp
jo
ret
push
xchg
push
or
mov
inc
lods
mov
pop
dec
dec
shll
in
cmp
sub
push
add
pop
or
sub
enter
adc
xchg
sbb
or
xor
jecxz
lods
xor
loopne
or
or
test
popa
mov
imul
sbb
jle
shlb
movb
and
mov
in
xor
sbb
jmp
cmpl
ljmp
sbb
int3
or
subb
inc
adc
mov
cwtl
sub
push
mov
fs
or
cmpxchg
sub
in
and
cmpb
sbb
xchg
dec
lea
push
popa
inc
add
pop
lea
sbb
pop
sbb
jl
jl
nop
adc
loopne
adc
push
mov
push
enter
add
inc
push
inc
xchg
xor
inc
sub
and
ljmp
push
pop
imul
push
fdivrl
sub
lds
dec
jno
jno
ljmp
inc
ds
push
ds
jl
cmp
mov
xor
mov
dec
xchg
mov
in
aas
or
xor
inc
cmp
shlb
push
imul
push
cmp
xor
jne
dec
rcll
enter
clc
cltd
sbb
cs
cmpsl
outsl
pop
sbb
sbb
add
or
popa
cmp
pushf
dec
or
cmp
lock
add
dec
push
test
lret
mov
rclb
test
out
and
movsb
inc
sub
adc
push
mov
and
mov
insb
lahf
into
sub
loope
jno
cmpsb
dec
js
aam
in
push
fisubs
imul
dec
cmp
lods
les
inc
xor
loope
test
icebp
les
cwtl
inc
fs
loopne
in
in
les
or
jbe
inc
or
mov
add
add
stc
insl
sub
icebp
jne
es
sbb
ds
sahf
xchg
xor
fadds
lods
xchg
leave
daa
in
testl
adc
sahf
pop
mov
ret
enter
and
shl
xchg
jbe
lds
push
stos
mov
pop
jmp
xchg
mov
mov
jb
and
add
push
push
test
xor
sbb
sbb
rcrb
loopne
xchg
cwtl
xchg
rolb
xor
xchg
leave
loopne
inc
push
addr16
cmp
inc
sahf
add
xor
mov
add
cmpsl
testl
sti
sbb
or
dec
shrl
std
lcall
mov
dec
aaa
sarb
xchg
adc
imul
and
pop
stc
push
and
jp
xor
pop
stc
pop
push
push
jne
push
push
sub
stos
cmc
mov
in
or
dec
orl
pop
dec
xchg
pop
call
movsb
inc
add
testl
push
inc
sub
jmp
jp
jo
add
adc
dec
js
test
sub
push
add
jle
jge
inc
test
stos
test
stos
dec
pusha
cmpsl
dec
pusha
add
incb
pop
push
lods
or
cltd
call
jo
or
xlat
ror
push
push
sbb
xor
sbb
or
hlt
sub
xchg
loope
or
fdiv
lods
mov
in
in
or
call
dec
test
jo
stos
pop
inc
in
cmp
in
mov
adc
les
push
jecxz
adc
add
roll
sub
jmp
and
rolb
jb
in
scas
jecxz
fld
mov
roll
dec
add
test
leave
sub
jg
sbb
ss
cmpsl
imul
mulb
mov
shlb
cmp
push
arpl
cmpsl
sub
lahf
push
lret
cli
pop
loopne
nop
lock
push
dec
je
sub
inc
loopne
jbe
fisubrs
sbb
push
mov
ss
and
mov
cwtl
dec
pop
loopne,pn
pop
inc
fcoms
xor
cmp
sub
inc
cli
push
jg
dec
adc
add
addb
add
mov
cltd
es
add
fld
adc
and
inc
rcrl
or
push
xor
imul
loop
inc
mov
adc
push
jl
inc
inc
add
shrb
pop
inc
jmp
pop
cmp
inc
inc
cmp
xlat
mov
aam
mov
imul
imulb
dec
test
push
mov
idivl
and
popa
mov
in
inc
sbb
xchg
jge
loop
fnstenv
in
fidivs
out
add
and
cmp
mov
jnp
dec
xor
loopne
cmp
push
add
dec
and
jl
lahf
jge
sub
push
xor
add
jne
adc
mov
testl
cmp
inc
inc
cmpsl
shlb
dec
push
sub
xchg
xor
adc
pop
sbb
insb
push
and
jbe
inc
xchg
pusha
pop
clc
andl
dec
xchg
aaa
dec
xchg
add
pop
lea
inc
les
loopne
push
fsubp
mov
push
lcall
push
mov
push
popa
leave
sub
pop
or
xor
mov
cmp
dec
add
lods
xorb
mov
and
add
testb
adc
and
adc
add
cmp
ret
dec
lahf
or
sub
mov
or
pop
aaa
adc
push
push
dec
cmp
xlat
xor
push
enter
cli
std
sbbl
jge
or
jns
dec
sub
cmp
jo
sbb
fdivs
sahf
adc
or
add
or
sub
add
je
add
adc
and
add
sbb
sub
adc
fisttpl
jecxz
adc
je
stos
test
int3
pop
adcl
pop
jno
enter
inc
xchg
lock
cmpsl
flds
cmp
pop
test
inc
aaa
add
cmp
movsl
mov
lock
aaa
or
mov
sar
add
test
push
andl
pop
loope
pop
adc
add
cmp
or
adc
enter
push
sub
jl
sbb
sbb
add
in
and
push
sub
sbb
leave
push
inc
fbstp
scas
dec
push
jecxz
inc
mov
xlat
mov
dec
fadds
pop
and
imul
cmp
mov
movsb
push
ds
xor
xor
pop
rolb
mov
inc
pusha
xchg
mov
lea
mov
xor
add
data16
je
sub
inc
or
add
je
js
and
mov
pop
cmp
jl
xor
lret
into
dec
inc
cmp
jns
dec
fadds
rorb
cmp
pop
in
aaa
shll
dec
push
cmpb
es
push
out
push
punpckhdq
jl
shrl
pop
cli
icebp
dec
mov
loope
ret
sbb
or
std
dec
xchg
mov
push
pop
je
push
mov
cmp
pop
jae
pop
xorb
inc
cmp
or
push
iret
mov
xchg
xor
loopne
cmp
inc
and
pop
jne
add
jge
sbb
scas
sti
push
jmp
push
sbb
aaa
inc
shll
dec
int
xchg
ret
xchg
stos
xor
bound
pop
push
jne
jl
jo
faddp
inc
mov
dec
push
inc
jecxz
lds
lret
xor
push
mov
jbe
lea
shl
lods
rcll
pop
sub
movsl
xchg
sahf
push
rorb
les
xchg
and
mov
add
sbb
pop
mov
xor
or
stc
jbe
loopne
scas
pop
push
pop
sbb
nop
imul
adc
js
add
xorl
loopne
pop
mov
and
aaa
inc
andl
mov
inc
fs
or
mov
nop
push
fldl
lods
or
and
ret
sub
pusha
push
rorb
je
inc
mov
dec
and
subl
sub
cmpsw
aas
mov
adc
push
mov
mov
jle
std
add
mov
je
mov
aas
ret
xchg
mov
adc
ds
lock
adc
je
js
cmp
in
je
lret
mov
lock
sub
sbb
or
xor
insl
popa
lods
les
out
insb
dec
sbb
cmp
lods
or
sbbl
inc
adc
sub
add
addl
sub
mov
xchg
adc
mov
cmp
push
xor
push
cmp
and
data16
aam
jbe
aas
jne
xor
xchg
test
mov
testl
push
or
fisubl
push
cmpsl
ret
out
mov
adc
add
push
dec
cmpsl
test
inc
aaa
mov
add
sbbl
pop
fdiv
je
shl
rcrl
ret
add
in
add
mov
jmp
adc
cmpb
jne
movsb
aad
add
push
mov
ss
xchg
mov
dec
sub
add
adc
mov
in
je
adc
or
hlt
mov
mov
dec
inc
push
imul
add
loopne
and
push
adc
xchg
shrb
xchg
and
adc
mov
in
aad
cmpsb
shl
clc
push
dec
jge
jl
add
pop
push
and
call
cld
mov
and
mov
movl
dec
or
dec
in
mov
cmp
rorb
sbb
aaa
fiaddl
and
and
dec
sub
mov
inc
add
fs
mov
shlb
jne
inc
or
mov
lods
xchg
test
and
jl
movsl
out
pop
and
adc
mov
push
adcl
mov
arpl
add
fs
stos
ljmp
fwait
rcl
mov
dec
push
jecxz
pop
xor
nop
cmp
lods
int
mov
icebp
jnp
or
movsl
popf
inc
mov
sti
ss
addl
aad
cmp
test
cmp
and
adc
pop
bound
cmp
dec
rcr
sub
lock
push
or
xchg
shlb
mov
adc
shrl
cmp
dec
push
push
mov
imul
fiaddl
xor
jle
rcrl
lock
push
adc
mov
sub
adc
xor
jae
ljmp
add
xlat
into
popa
jmp
fstps
out
push
scas
dec
inc
stos
loopne
loop
push
dec
in
adc
inc
inc
or
loope
mov
add
fwait
jo
or
and
mov
insb
mov
xchg
jmp
dec
add
or
ja
add
movsl
adc
xchg
add
sub
adc
mov
ret
jp
pop
push
cmp
mov
test
or
and
add
fsubrs
ffreep
addb
fucomi
add
test
js
aam
je
mov
xchg
mov
inc
jle
adc
add
call
add
dec
clc
mov
push
mov
ss
out
or
sub
and
or
sbb
test
inc
in
sub
or
jg
cmpl
add
outsb
loope
test
and
jecxz
jecxz
adc
dec
pop
add
jl
movl
mov
popa
ret
cmpl
mov
gs
lahf
sub
sub
sub
fcmovnbe
and
xchg
enter
scas
ds
or
adc
cmp
sti
jmp
loop
jmp
inc
lahf
mov
aas
rorb
add
xchg
cmp
sahf
and
push
push
aad
mov
sub
adc
xchg
push
ret
mov
push
or
pop
jno
push
test
popf
daa
xor
dec
mov
cli
lea
add
adc
dec
inc
mov
mov
mov
outsb
loope
add
cs
cmp
in
bound
imul
push
dec
test
jecxz
push
mov
dec
push
xchg
or
mov
lods
in
or
pop
addl
inc
xor
dec
mov
pop
jne
add
push
pop
xchg
jno
fs
scas
sti
jne
shl
jb
push
push
sub
addb
cwtl
xchg
inc
inc
or
jo
mov
enter
loopne
xor
xorb
movsl
int
lock
or
inc
push
xor
xchg
test
inc
sbb
nop
push
mov
icebp
iret
clc
xlat
daa
sbb
dec
bound
jns
and
in
inc
fwait
pop
or
loopne
push
inc
adc
mov
sarb
loope
mov
dec
add
adc
xor
pop
sbb
push
fistpl
scas
sbb
xor
mov
push
push
ss
add
lea
jmp
push
mov
movb
imull
push
in
add
inc
mov
inc
mov
pusha
add
add
push
push
pop
leave
and
push
enter
jae
dec
push
adc
clc
sbb
jne
fsubs
mov
test
mov
sbb
dec
or
push
or
push
sbb
add
push
push
push
xor
pop
push
sahf
aam
push
and
jb
add
or
cmpsb
pusha
mov
adc
push
add
inc
or
or
sbb
sub
je
xor
jp
or
sarb
add
push
push
dec
push
cli
push
in
jo
xor
adc
in
jo
sbb
sbb
std
daa
popa
mov
sbb
mov
orl
mov
dec
mov
push
scas
fs
scas
push
test
inc
mov
cmc
clc
lock
add
jae
or
aad
add
jbe
enter
hlt
fstp
push
xor
add
inc
or
adc
xorl
pop
adc
es
nop
mov
mov
mov
or
mov
push
imul
in
push
lock
jl
push
dec
jmp
push
shl
testl
lock
data16
jg
inc
sbb
sarl
shlb
mov
nop
inc
or
xor
adc
cmp
lock
scas
push
stc
and
jge
movsb
adc
leave
bound
mov
lods
scas
adc
push
xor
adc
test
dec
in
inc
push
iret
jo
and
jne
insb
sbb
dec
mov
test
dec
call
mov
movsl
fwait
subb
mov
test
cmp
in
in
lret
add
jo
and
inc
sub
test
jno
jbe
cmp
add
jmp
in
push
enter
lea
adcb
push
in
shlb
inc
push
mov
rcrl
jmp
push
pushf
cmp
or
pop
enter
scas
fsubrs
dec
mov
add
xchg
sub
adc
ljmp
clc
iret
push
ret
mov
fsubrl
xor
mov
mov
mov
mov
mov
mov
lea
imul
add
rclb
mov
ljmp
jb
outsb
push
out
xchg
out
imul
test
mov
int
jno
xor
add
lods
loopne
jg
mov
adc
mov
fsubs
mov
cmp
jno
xor
or
xorl
cmp
shrb
sub
add
je
xlat
add
jb
rcrb
xor
sub
add
mov
mov
xlat
cmp
or
mov
stos
mov
xor
or
int3
or
mov
lret
push
pop
push
rorl
sub
push
pop
mov
adcb
hlt
stc
shrb
test
xlat
mov
push
into
inc
pop
adc
sbb
push
xor
or
pushl
inc
imul
fsubl
mov
jnp
jnp
mov
shl
push
fsubs
jl
dec
xorb
or
and
rorl
sub
adc
rep
push
subb
xchg
lahf
mov
test
loopne
sub
ss
sub
pop
or
test
pop
in
mov
sbb
in
je
stos
cmp
xchg
push
push
sahf
mov
jo
inc
into
repnz
xor
mov
jns
ds
pop
jns
pop
cld
mov
test
push
pop
push
mov
fidivrs
inc
mov
sbb
mov
or
or
rcl
sar
call
and
push
or
push
shl
push
mov
movsb
mov
mov
or
mov
stc
stos
add
adc
cmp
mov
enter
lfs
sub
shl
push
in
add
push
faddl
notl
daa
in
js
lret
pop
add
jecxz
shlb
cmp
scas
push
push
scas
inc
sub
clc
sar
pop
repnz
in
dec
jo
push
and
xchg
popa
js
enter
clc
push
add
clc
sbb
nop
rcl
enter
ret
dec
inc
cmp
xchg
cmp
scas
mov
adc
mov
add
mov
mov
repz
push
jne
clc
sbb
sbb
movsb
cmp
pushf
pop
or
sarb
mov
shr
nop
and
and
ja
data16
scas
or
or
adcb
rcrb
add
mov
imul
insb
or
mov
dec
rclb
out
int3
jne
movsbl
dec
sub
xorl
std
clc
adc
jbe
push
paddb
cmp
cmp
mov
adc
or
lret
mov
cwtl
jo
jo
les
inc
cmp
dec
xor
or
push
push
cmp
loope
inc
rorl
and
pop
sub
inc
add
jle
test
test
mov
cltd
pop
sbb
mov
cmp
jl
icebp
pop
add
pop
xchg
pushl
sub
movsb
push
fs
push
fildl
add
xchg
sbb
pop
cmp
out
cmp
push
add
hlt
push
inc
addl
and
pop
and
push
mov
pop
dec
ja
dec
add
pop
cmp
xor
add
sarb
cmp
stos
lcall
jb
add
jb
or
or
jnp
mov
jmp
or
jno
jmp
push
jmp
mov
jmp
adc
pop
adc
pop
adc
push
mov
jmp
adc
dec
adc
aas
mov
jmp
sbb
xor
jmp
mov
jmp
sbb
and
pop
xchg
mov
mov
jmp
and
int3
imul
inc
and
inc
verw
loopne
xchg
mov
dec
adc
repz
cmpsl
jge
mov
mov
fnstsw
in
cmc
std
add
sahf
out
adc
sahf
out
sahf
xor
cmp
dec
jns
out
dec
push
pop
pop
arpl
jns
out
insl
jb
jl
out
sahf
addl
pop
into
add
add
push
pop
or
and
idiv
jg
or
adc
adc
push
pop
sbb
sbb
sbb
push
pop
and
and
aas
push
xchg
mov
arpl
mov
add
test
rcrb
lods
cmp
in
and
mov
or
cmp
cmp
xchg
out
imul
or
shlb
aam
stos
shr
sub
out
pop
mov
fsubs
addl
push
xor
dec
mov
lods
jbe
aaa
xor
mov
or
decl
sbb
adc
pop
mov
cmp
loope
pop
inc
xor
xchg
inc
cmp
mov
lea
and
sub
sbb
cs
lret
and
adc
adc
movsl
mov
fsub
jbe
cmp
cmpsb
xor
mov
test
call
xor
inc
jmp
xchg
fadds
add
pop
or
iret
and
sbb
loop
faddl
add
adcl
jns
mov
test
mov
dec
rcrb
cmp
jae
sbb
ljmp
pop
das
inc
mov
inc
jge
push
adc
data16
sub
inc
pop
push
push
push
rclb
xor
pop
xor
fisubrs
xchg
loopne
sbb
insb
pusha
pop
in
pop
cld
add
push
outsb
add
adc
pop
add
sbb
xchg
sbb
call
stos
mov
add
xchg
jno
shll
adc
fbld
adc
pop
mov
pop
xchg
aaa
in
mov
call
add
jb
movsb
ret
push
push
movsb
and
dec
adc
rorb
pop
push
inc
push
xchg
mov
xor
je
pusha
xchg
push
mov
ror
jg
lcall
xor
fld
ret
or
call
xor
add
add
add
jne
jne
fsts
pop
iret
or
insl
push
and
and
not
and
xor
add
add
div
ds
sub
jge
fsubr
add
or
mov
ror
mov
sti
jg
data16
aam
cli
and
and
mov
push
rcrb
test
xor
or
add
fs
fcmovbe
lcall
mov
movsl
or
push
or
xlat
and
mov
into
add
add
dec
roll
call
jb
rcl
call
pusha
nop
xor
fwait
xchg
subl
sub
ljmp
rol
rcll
add
movsb
imul
fsub
in
mov
cmpsb
in
aam
xor
dec
in
shl
in
sub
dec
fwait
push
cmp
data16
add
or
cmp
loopne
cwtl
mov
aaa
fadd
xor
call
rorb
add
call
enter
cmp
dec
shll
pop
cmp
aam
jl
pop
xor
test
inc
jl
or
cmp
cmp
pusha
cwtl
cmp
add
sahf
xor
test
jge
and
call
xor
or
add
and
xor
pusha
xor
push
xchg
lock
and
xor
add
push
ret
push
jo
ficoms
or
les
pushf
xor
or
filds
sbb
addl
jne
mov
pop
pop
dec
inc
sbb
lods
dec
fadds
pop
fs
lcall
insl
and
ficompl
aas
outsb
lret
push
clc
jl
push
and
add
shlb
and
cmp
xor
fs
call
test
mov
mov
out
aam
xchg
fisubrl
arpl
add
cli
and
xchg
mov
rcl
cmp
and
call
in
mov
shl
rolb
subb
ss
or
push
xor
inc
or
inc
or
cmpsb
sub
dec
loopne
or
loopne
call
or
or
imul
lcall
adc
add
sub
inc
sbbb
js
scas
pushf
and
pop
add
xor
fs
and
nop
out
push
pop
inc
mov
cmp
enter
xchg
pop
ret
ficoms
scas
push
add
or
and
scas
inc
pop
inc
push
cmp
int3
pop
cltd
add
pop
fs
leave
in
movsb
pusha
shlb
or
xchg
sub
or
mov
mov
lds
add
aam
dec
xchg
dec
shll
or
fxch
pop
in
adc
pop
push
mov
ucomiss
inc
dec
xor
dec
shll
loopne
mov
or
adc
mov
sbb
and
push
mov
es
mov
dec
xor
cld
aaa
popa
out
pop
add
sub
mov
and
inc
inc
add
lret
jb
xchg
cli
add
lea
scas
add
insl
or
cld
sub
pop
xor
pop
stos
rcl
sbb
decl
outsl
ss
scas
mov
stos
lret
loop
lods
add
add
rorb
or
or
adc
push
popa
jne
add
pop
jbe
imulb
or
test
mov
pop
movsb
sub
loopne
lea
push
rolb
mov
subl
sub
pop
mov
ja
lret
dec
mov
jne
pop
cmpsl
and
das
scas
loope
mov
jl
test
or
enter
clc
aaa
jbe
or
or
fs
fists
mov
add
jae
push
in
add
mov
rolb
rep
or
add
in
mov
sbb
lret
fs
ret
ja
mov
fdivp
ror
mov
hlt
push
shr
xchg
or
mov
cli
pusha
loope
add
lea
push
inc
push
stc
shlb
movb
mov
rol
add
movl
jl
faddl
cmpsb
cmp
jbe
adc
notl
add
push
fadds
sbb
jge
sub
cmp
es
xor
inc
jl
push
add
gs
stc
ja
inc
ljmp
rolb
cmp
ja
and
les
cmp
add
xchg
dec
sbb
sbb
lock
inc
rclb
inc
inc
xchg
xor
add
adc
push
and
sbb
add
pop
gs
or
or
or
cmpsb
scas
mov
xchg
xchg
pop
mov
aas
cmp
xor
and
test
pop
pop
and
mov
mov
push
mov
mov
inc
fcmovnb
cmp
push
rcr
inc
pop
cmp
aaa
stos
xchg
icebp
adcl
insb
stos
insl
out
sahf
push
jbe
je
adc
call
push
pop
test
xorb
lock
lret
xchg
and
adc
push
cmp
lcall
mov
mov
shll
mov
xlat
mov
add
sbb
cmp
hlt
lret
out
fists
lret
sbb
add
push
mov
adc
ds
iret
cmp
sbb
test
cltd
leave
inc
jle
and
cmp
xchg
add
sbbb
mov
xchg
les
and
loopne
jno
xchg
push
jbe
adc
push
inc
jnp
and
add
cmp
inc
ret
xchg
adc
sbb
jle
adc
adc
jo
mov
jl,pn
arpl
inc
dec
inc
rcr
mov
mov
and
jle
mov
cmp
add
cli
es
lea
cmp
fdivrs
or
jne
or
js
shlb
dec
xor
adc
sahf
js
sbb
inc
push
aad
pop
pop
hlt
mov
inc
mov
or
std
push
outsl
or
icebp
jl
dec
sub
mov
jge
test
jae
ds
jb
xor
nop
pusha
and
cmpsb
dec
daa
lods
test
push
test
mov
mov
jge
add
daa
and
adc
js
sbbb
sbb
pop
mov
pop
call
inc
in
ss
or
sbb
ret
mov
inc
mov
and
mov
sub
or
xchg
lahf
cltd
ja
fs
jne
push
cmp
jbe
mov
add
fwait
and
mov
ret
sub
add
push
imul
imul
or
dec
les
jbe
ss
es
pop
add
ficomps
sub
mov
dec
test
push
sbb
adc
push
sub
mov
mov
bound
push
test
xchg
add
ljmp
and
push
pusha
jo
cmp
pop
add
jecxz
rcll
mov
scas
push
lcall
jo
fwait
clc
popa
adc
out
mov
dec
aas
push
add
mov
out
pop
rolb
dec
jmp
adc
inc
mov
mov
add
jnp
dec
or
jo
inc
sbb
lahf
fs
cmc
fldl
and
enter
sbb
imul
cmp
dec
andl
ja
loopne
movsb
mov
nop
push
ljmp
push
jmp
push
adcl
sete
jle
push
popl
mov
pop
js
dec
hlt
mov
fsubrs
sub
xor
add
clc
je
xor
ss
loopne
xor
adc
adc
push
or
fsubrp
lods
fs
push
dec
dec
scas
insb
push
out
xor
lods
enter
lds
sbb
in
testb
mov
lods
cmpl
adc
mov
push
mov
push
insb
adc
or
mov
push
aam
mov
fcmovnb
or
fsubrl
push
adc
push
or
xchg
cmc
repz
adc
lea
cmp
dec
jo
je
dec
ret
push
add
pop
clc
xchg
mov
pushf
jle
push
push
push
cmc
adc
repz
pop
adc
cmp
push
cmp
aam
push
mov
jg
adc
rorb
sbbl
mov
dec
cli
push
xchg
sub
mov
jnp
mov
sub
or
cwtl
mov
inc
and
inc
daa
rcrb
push
scas
dec
or
inc
pop
jmp
xchg
push
orb
mov
and
test
daa
stc
sub
lods
mov
orl
mov
sahf
adc
scas
jg
mov
mov
and
and
gs
mov
ss
cmp
and
data16
cli
add
adcb
aas
adc
aam
or
lock
xor
xor
lods
cmp
call
or
pop
shll
inc
inc
pop
inc
inc
cmpsl
imul
sub
and
or
stc
push
or
add
mov
cld
mov
jo
adc
jbe
divl
dec
nop
jb
fnstenv
das
out
enter
out
adc
ds
sub
fstl
shll
lret
adc
pusha
and
cltd
jae
adcb
sbb
cltd
cld
cmpl
test
aam
push
adc
and
insb
sbb
lds
push
xlat
nop
mov
inc
inc
pop
pop
xor
fsts
sbb
pop
push
jl,pt
cmp
mov
adc
je
inc
mov
data16
cmp
or
cmpsb
inc
bound
push
lock
pusha
je
scas
sub
in
ficompl
push
hlt
jecxz
inc
push
ss
push
push
or
notb
xor
mov
pop
xchg
popf
xchg
add
ljmp
daa
nop
mov
sub
adc
xor
and
xor
mov
inc
jle
lret
jae
mov
scas
mov
xor
or
push
dec
adc
inc
in
pop
jnp
sub
js
push
pop
xchg
pop
lcall
call
cmpl
das
cmpb
inc
xchg
add
inc
lret
dec
clc
inc
mov
ret
mov
pop
cmp
bound
stc
xchg
inc
pusha
sbb
cmp
ds
xor
cmpsb
pusha
lds
pop
or
mov
mulps
jmp
cmp
mov
or
movsbl
div
mov
push
xor
sub
dec
sbb
loope
cmp
inc
dec
imul
int
mov
xor
imul
and
mov
dec
scas
push
xor
scas
fs
pusha
je
roll
cmp
pcmpeqd
jge
jnp
test
push
test
and
push
mov
or
out
sub
mov
and
and
push
outsl
mov
jg
mov
xor
and
das
cmp
mov
cmp
push
enter
scas
jb
mov
sub
xor
je
push
or
push
out
sbb
rcll
in
add
add
or
xchg
add
mov
inc
and
inc
xor
je
dec
je
hlt
inc
dec
sbb
jmp
push
and
and
andl
icebp
sub
dec
pop
loopne
in
cld
inc
fidivs
xchg
cmp
fistpl
cmp
xchg
outsb
lcall
ret
lods
push
sbb
xchg
jne
lock
jl
inc
push
cltd
or
mov
jle
out
mov
out
sbb
or
ja
inc
js
jle
jecxz
lea
nop
lods
cwtl
les
cld
outsl
cli
lahf
lea
push
mov
nop
and
test
xchg
push
movsb
xchg
or
mov
fildl
icebp
sbb
jne
xchg
fstl
js
rorl
or
mov
arpl
sbb
jle
cmp
fisubs
cmpb
mov
adc
mov
ret
cmp
je
cmp
push
xchg
xorb
or
push
push
xchg
sbb
sbb
jge
sub
xor
xor
mov
sbb
fimull
sbbl
std
and
scas
sub
or
add
mov
jp
fcomp
add
or
pop
lea
add
ret
std
scas
add
mov
pop
fidivrs
mov
push
push
or
inc
lods
lretw
xchg
lods
cmp
lods
cmp
movsb
xchg
mov
inc
push
lods
xchg
test
push
in
repnz
xchg
push
xor
ret
pushf
add
js
in
push
adc
movzbl
push
push
xorb
je
ds
pop
repnz
test
push
inc
pusha
cmp
xor
add
pop
cmp
inc
push
mov
test
aaa
pushf
les
adc
hlt
pop
clc
mov
lea
daa
jmp
push
jg
je
cmp
lods
shrl
push
cmp
jge
add
adc
mov
push
inc
cmp
lea
cmp
mov
adc
xor
mov
aam
mov
in
repnz
add
lock
clc
jg
xor
cld
fbstp
mov
add
push
add
add
repnz
push
aaa
add
lcall
pushl
in
dec
je
add
adc
cmp
dec
or
mov
shr
cmp
mov
mov
or
mov
sub
xor
inc
icebp
adc
xor
ljmp
dec
or
cmp
and
cli
sub
sub
adc
je
dec
je
push
add
out
loop
sarl
adc
repnz
movsl
out
aas
mov
inc
add
jmp
sub
in
pop
push
cld
incl
push
mov
test
je
cmp
jne
sbb
fimull
mov
adc
shrb
mov
jmp
or
inc
inc
adc
clc
xor
inc
sbbb
inc
jmp
sbb
cmp
incl
imul
cmp
addb
add
push
adc
xchg
or
fiadds
mov
add
or
cmp
mov
stc
push
or
add
adc
push
aam
inc
or
lock
cmp
je
cmpsb
mov
pop
jbe
inc
test
jmp
daa
pop
pop
push
or
cmp
add
mov
or
mov
mov
and
mov
outsb
gs
jae
bound
ficompl
jmp
mov
sub
pop
dec
testl
arpl
adc
cmp
je
cmp
push
cmp
je
cmp
jne
inc
jne
clc
into
add
adc
sub
inc
pop
or
pop
inc
mov
add
mov
je
ret
mov
lea
cmp
jne
add
loop
cmp
jne
adc
cmp
or
loopne
inc
add
pop
push
push
inc
sbb
call
mov
mov
jp
jl
or
jg
push
ficompl
mov
jmp
and
push
jmp
sub
aaa
aaa
inc
jl
inc
jg
aaa
jp
add
int
fld
out
dec
mov
sub
mov
dec
je
sahf
mov
jle
scas
les
outsl
adc
test
mov
and
mov
pop
or
mov
lcall
sbb
xlat
xorb
push
out
mov
add
and
adc
outsb
xor
push
call
mov
jl
pusha
mov
jg
jbe
mov
push
fs
imul
mov
inc
mov
roll
adc
sub
aaa
lcall
xor
dec
sub
gs
loopne
pop
inc
xor
jne
push
jge
adcl
mov
imul
xor
xor
fsubs
inc
cmpb
push
xorb
mov
ret
adc
cmp
in
inc
inc
push
out
jmp
xor
les
sub
xor
mov
push
add
dec
jb
andl
fisubrl
in
ja
pop
ucomiss
or
fdivrs
push
cmp
out
adc
xor
mov
in
adc
enter
cmp
adc
je
roll
cmpsb
pcmpeqb
add
mov
mov
push
clc
int
mov
arpl
mov
pop
or
ja
loop
adc
cld
sub
sti
or
or
stos
sbb
mov
mov
sbb
imul
adc
cmp
sbb
xor
leave
or
sub
in
fadd
xchg
mov
sbbb
adc
xchg
add
add
test
sbb
and
adc
sub
inc
dec
or
jp
stos
mov
les
mov
xor
mov
mov
cwtl
or
icebp
inc
pop
mov
je
push
mov
adc
fucomip
add
push
push
lock
sub
jge
jne
add
push
int
je
add
push
and
rclb
sbb
loopne
or
adc
loopne
movsl
mov
adc
xor
inc
dec
push
sbb
in
sub
mov
movsb
sub
sub
and
pushw
mov
cwtl
adc
leave
rcrb
pop
inc
aad
xchg
xchg
push
adc
data16
mov
jmp
push
rolb
mov
fdivl
mov
lds
out
jl
ss
and
nop
dec
jge
mov
sahf
adc
push
jo
imul
mov
mov
jmp
sbb
add
add
mov
int
movsb
xor
or
inc
call
push
movb
xor
and
dec
std
dec
xor
arpl
push
cmp
ljmp
lcall
cmp
lods
aam
pop
inc
imul
jmp
sti
push
add
push
out
xor
pop
sub
fldcw
cmp
inc
ret
and
push
ds
cmp
outsb
mov
sahf
xchg
inc
or
push
or
xchg
or
adc
lahf
and
push
push
push
mov
lea
enter
sub
or
jle
leave
or
jmp
shlb
jmp
rolb
push
jmp
std
add
jns
cmpb
jne
mov
cmp
or
test
test
dec
sbb
push
sbb
icebp
mov
scas
jmp
or
ja
dec
movsb
xchg
or
ret
sbb
or
mov
aas
add
lods
ret
test
xlat
mov
inc
adc
rcrl
mov
rcr
dec
cmp
mov
insl
dec
and
xchg
test
mov
jb
lods
push
add
enter
es
adc
call
add
adc
inc
lock
mov
xor
push
jb
aad
mov
pop
repnz
cmp
add
ret
pop
adc
sub
push
addb
shll
repz
xchg
in
mov
insb
jl
jnp
mov
dec
pop
lret
dec
and
popa
es
clc
mov
sub
sub
test
shlb
inc
pop
rorl
push
adc
ret
jns
insb
outsb
ss
je,pt
inc
jo
push
jecxz
sbb
scas
fistps
shlb
cmp
hlt
add
xorl
push
es
cltd
and
mov
jl
fisttps
xor
imul
sbb
scas
test
jbe
movb
cmp
xchg
jne,pt
inc
jo
cmp
or
push
fimuls
push
or
jl
or
jns
cmp
das
mov
rclb
in
sbb
cmp
inc
dec
call
cli
std
mov
enter
call
out
popa
int3
roll
xchg
loop
inc
xchg
sbb
addr16
les
mov
xchg
jmp
sbbb
aam
pusha
pusha
mov
xor
cmp
or
mov
cltd
xor
popa
push
inc
test
leave
and
push
fwait
xchg
lret
sahf
or
ret
adc
xchg
jle
mov
push
jae
cmp
add
xor
lea
lcall
xor
mov
push
jmp
push
sbb
add
mov
jbe
shlb
ret
push
sbb
adc
xor
push
or
fsubrl
push
mov
inc
movsl
xchg
hlt
pop
mov
pop
mov
xchg
iret
xchg
jmp
adc
aas
push
xchg
mov
mov
lea
jne
dec
and
and
xor
inc
je
dec
adc
adc
and
arpl
shlb
dec
inc
push
dec
cld
minps
mov
mov
cmpb
add
imul
pop
inc
push
scas
push
inc
mov
mov
das
dec
sub
jg
fmul
or
dec
pusha
add
in
xchg
push
and
pusha
js
test
push
dec
add
push
mov
subl
push
or
jmp
ret
mov
filds
mov
je
and
xchg
lods
xchg
adc
mov
jne
jg
inc
jne
fimuls
push
add
movsb
push
pusha
inc
rorb
in
pop
dec
aas
add
xchg
dec
mov
add
add
into
int3
iret
incb
out
add
sbbl
add
mov
pop
add
inc
fsts
repnz
xchg
pop
add
add
jmp
cmp
jne
xor
jbe
sbb
jecxz
xor
movsl
xor
jns
dec
cmp
sbb
bound
out
data16
inc
dec
or
iret
sub
mov
je
mov
add
jns
enter
pop
scas
adc
xchg
push
sub
aas
mov
pop
sbb
pop
js
jb
push
test
mov
enter
pop
sub
pop
push
adc
jp
dec
xchg
mov
inc
or
in
jmp
dec
dec
dec
inc
mov
in
call
jnp
ret
rcrb
addr16
stos
pop
js
adcb
fadds
imul
cmc
in
sbb
cmc
jno
sbbl
into
or
add
fists
mov
fwait
xor
or
xorl
sbb
je
bnd
lods
jecxz
gs
dec
dec
jecxz
dec
xor
je
push
clc
adc
push
sub
or
ret
mov
int
lret
push
dec
stos
mov
xor
mov
sub
mov
in
into
add
outsb
xor
pop
mov
cmpsl
xor
lock
loop
or
jmp
bound
mov
mov
push
mov
mov
dec
cmp
pop
mov
xchg
insb
lock
fldl
enter
add
or
mov
jno
or
pop
or
mov
push
sahf
fs
aaa
int
mov
movsb
xchg
movsb
push
out
xlat
test
call
xchg
jo
adcb
int
cwtl
or
icebp
push
push
dec
cmp
cmp
sbb
push
int
test
push
and
shll
cmp
stc
inc
add
loopne
rcl
movsl
or
movl
mov
ret
mov
push
or
or
sub
and
adc
test
adc
push
inc
mov
sub
fwait
or
enter
popa
das
mov
mov
and
jno
lea
ss
cmp
orl
fdivl
js
idivl
aam
loopne
in
cltd
sub
sbb
jns
out
sbb
push
imul
or
sbb
sub
leave
call
sbb
sub
pop
pop
test
add
cmp
mov
or
jo
dec
test
add
ret
or
out
adc
jmp
sub
inc
adc
arpl
fmul
addb
out
dec
jmp
adcl
pop
pop
ds
cs
loope
add
ss
xchg
dec
add
sarl
sub
call
xor
pusha
and
sub
mov
xor
jmp
mov
dec
mov
loopne
and
cmp
cmp
add
iret
insb
inc
sub
fs
jo
inc
arpl
mov
imul
sarl
andl
ret
outsl
mov
xor
or
jnp
jecxz
pusha
cmp
dec
dec
les
daa
pushf
and
out
or
inc
xchg
adcb
loop
cmpsb
mov
adc
xchg
mov
repnz
test
fistpl
cmp
sbb
les
inc
subb
and
pop
jmp
mov
lcall
sbb
push
or
popf
xchg
adc
add
inc
sbb
ss
lock
push
xor
adc
pusha
je
adc
sbb
or
decb
daa
xor
dec
or
cmp
inc
or
ror
pshufw
push
jns
add
or
aaa
cmp
aam
sub
jo
sbb
int
and
mov
dec
mov
ja
pop
rcll
cmc
arpl
outsb
nop
loopne
iret
fwait
xchg
or
fmull
inc
leave
lret
push
dec
sub
subl
add
pop
sub
adc
js
int3
fstl
ret
adc
ja
popf
mov
adc
add
addr16
mov
sbb
xor
mov
jg
cmp
pop
dec
inc
mov
or
inc
jo
xor
lea
cmc
mov
dec
aad
test
xor
jne
pop
pop
mov
dec
pop
mov
push
pop
daa
sub
inc
jne
pop
push
sahf
pop
shrl
lods
mov
adc
adc
mov
movb
inc
or
push
or
lock
pmullw
ds
jge
push
adc
dec
or
cmp
push
jmp
lea
adc
jmp
xchg
push
push
in
pop
dec
cmp
mov
cmpl
mov
mov
fisubl
hlt
dec
and
jne
in
add
orb
push
add
dec
add
and
or
lock
in
insl
popa
and
cmp
and
adc
loopne
mov
js
add
push
arpl
sub
addb
loopne
call
add
dec
aad
adc
cmp
jecxz
in
mov
ds
mov
or
lock
jmp
jne
repz
adcl
xchg
mov
xchg
push
pop
inc
add
adc
xchg
jl
addr16
in
jae
cmp
pop
xor
fisttpl
xchg
or
jo
mov
loopne
sbb
push
push
xor
aaa
nop
stos
add
sbb
xor
add
and
jge
xchg
fidivrl
ret
rep
adc
data16
and
sub
arpl
dec
sbb
in
adc
sbb
ds
push
jmp
out
mov
xor
mov
pop
add
scas
stos
pop
jg
jbe
das
pop
sub
sar
icebp
sub
movsb
cmpsl
pop
sbb
mov
cmp
ja
xor
and
sub
daa
push
leave
sub
or
js
decl
xchg
jbe
xchg
jle
je
lods
stos
push
rcll
rcrl
pop
adc
hlt
sub
jo
pop
mov
test
or
inc
jmp
inc
daa
cmpsl
loopne
js
sub
lock
xor
cmp
mov
ret
lds
out
mov
sub
xchg
jne
mov
js
adc
sub
cld
or
adc
push
and
add
mov
loopne
cmp
insl
loopne
jle
add
cld
add
jb
orb
call
sarb
push
xchg
scas
cld
data16
fisttpl
sub
aad
dec
dec
pusha
lock
inc
jg
into
mov
pop
jo
movsb
or
out
and
inc
xor
cwtl
pop
add
push
cmp
movsl
xchg
pop
adc
or
or
mov
out
and
test
jbe
cmp
dec
mov
inc
dec
xor
popa
pavgb
dec
and
inc
rclb
add
aas
xor
mov
xor
inc
sbb
pushf
stos
imul
add
js
data16
cmp
addr16
es
lds
and
aas
pop
out
ret
cmp
pop
in
mov
pop
add
inc
jle
or
push
lods
mov
adc
aam
add
pop
es
scas
inc
jmp
inc
push
stos
stos
gs
xchg
inc
ss
aam
fs
clc
notl
test
loope
adc
inc
inc
test
lea
add
mov
inc
sbb
clc
dec
xor
inc
pop
adc
or
shrb
mov
cld
sbb
rolb
add
adcl
sti
aam
pushf
in
mov
jb
and
inc
push
jmp
jae
aaa
adc
push
lret
cwtl
add
les
dec
test
add
or
push
inc
adc
ds
pusha
cld
inc
je
sar
xor
out
jecxz
inc
in
add
jge
xor
sub
pop
lock
dec
imul
and
mov
pop
cmpl
subb
clc
stos
and
je
loopne
mov
ret
push
stos
lret
inc
inc
ds
cmpsl
push
xor
mov
pop
movsb
mov
ret
push
mov
inc
and
aaa
pop
jae
enter
test
popa
push
jl
pop
dec
push
adc
rclb
es
pushf
dec
enter
mov
sub
mov
sub
or
mov
add
or
fs
test
add
push
je
cmp
jbe
push
popf
pusha
rorb
stc
call
loop
push
lret
sbb
pop
push
movl
pop
ret
mov
lcall
mov
or
or
ss
cli
pop
inc
daa
or
test
lods
jbe
inc
inc
adc
inc
cs
inc
adcb
filds
push
test
data16
add
push
push
push
cmp
inc
das
lock
xor
jne
mov
jmp
xor
dec
aas
scas
push
cld
or
inc
jo
ljmp
add
pop
add
and
lea
push
cmpsl
loop
shlb
jno
jmp
inc
push
adc
push
popf
jp
lods
lods
xchg
outsb
data16
test
dec
cli
sub
push
mov
ficoml
pusha
xchg
pop
or
popf
std
xchg
insl
dec
shll
mov
sbb
push
and
and
mov
cmpsb
mov
fwait
mov
cwtl
outsb
mov
jne
mov
adc
fiadds
xchg
jae
jmp
jge
inc
shlb
push
xor
pop
div
hlt
add
movsb
mov
or
dec
jbe
mov
lea
divps
xchg
jmp
lods
push
dec
addl
inc
cmpsl
aaa
cmp
jo
adc
rcpps
add
in
in
and
mov
pop
sub
outsl
stos
sub
push
mov
cmpsl
sbb
push
dec
jb
fsubrl
mov
and
inc
push
pushf
mov
testl
lock
sbb
sub
add
or
imul
fdivrs
nop
shrb
fucomp
and
shrl
ret
jo
shlb
hlt
fwait
scas
adc
sub
sub
jne
bound
adc
out
adc
cmpsl
cmp
mov
test
rorl
jp
clc
int3
add
add
imul
incl
jb
cmpl
pop
add
push
cli
add
xor
fld
outsl
mov
sub
mov
mov
jne
hlt
sarl
add
or
xchg
fsincos
xor
stos
mov
dec
ljmp
ret
or
push
jg
dec
inc
add
shrb
xchg
mov
push
cmc
out
mov
daa
mov
adcl
inc
push
shlb
icebp
out
imul
or
test
test
xor
xor
or
add
mov
jb
pusha
cmp
ficomps
lds
jno
and
sbbb
psubusw
cs
fwait
pop
add
and
clc
jg
fs
jno
add
movd
movaps
jnp
push
enter
shlb
jle
xor
add
lret
je
or
jge
repz
or
jg
mov
ljmp
and
in
fisubs
mov
aam
ret
or
adc
push
hlt
adc
mov
pop
ficompl
xchg
repnz
addr16
ret
mov
add
ljmp
addps
int
add
out
adc
loopne
push
dec
sbb
cmp
pop
pop
test
inc
lds
shr
and
ret
mov
lea
aam
pop
sarb
xor
xor
pop
add
add
xorl
fdivs
mov
lret
or
popf
lcall
lret
sub
nop
inc
fcmovb
ret
adc
std
cld
gs
shl
inc
hlt
gs
lods
pop
and
stos
mov
add
mov
arpl
shlb
push
inc
dec
pusha
ret
pop
or
adc
mov
test
loope
jb
pop
incb
ficoms
cs
lods
ds
inc
sub
sbb
in
clc
ja
mov
jbe
lcall
inc
cmp
jne
inc
cmpb
out
addb
or
xor
rorb
inc
and
adc
insb
addr16
fimuls
push
or
mov
arpl
ret
daa
sub
loope
xchg
andb
mov
addr16
ret
imul
mov
or
mov
xchg
int3
jo
nop
xchg
xor
xor
sbb
mov
or
mov
sbb
cli
add
dec
xchg
xor
rol
add
push
mov
test
adc
adc
cmp
xchg
push
rcrl
shrb
jns
add
push
xor
mov
inc
pop
sbb
push
jne
inc
adc
ret
mov
push
push
movb
les
ret
sbb
pushf
pop
addr16
lock
sbb
sbb
ret
push
sbb
pop
test
mov
sub
mov
shlb
or
inc
xor
adc
mov
addr16
movsb
jnp
out
jbe
je
jp
leave
icebp
sub
into
movl
loopne
xchg
imul
pushf
push
or
mov
dec
fwait
inc
fwait
pop
cmp
jmp
jae
add
out
idivb
cs
add
jl
mov
or
cmc
add
daa
call
test
push
dec
add
or
popa
rorl
jle
xor
ja
and
int3
stos
push
sbb
xor
sbb
ret
sub
inc
cmp
or
jmp
arpl
cmp
int3
sbb
add
ja
imul
loopne
lock
or
fists
sbb
or
movsb
fldt
fidivs
dec
movsl
or
sarb
shlb
aas
pushw
add
mov
xor
inc
data16
push
xor
das
jnp
push
ret
add
je
jae
adc
pushf
push
enter
sub
jecxz
lock
jne
das
jo
pop
inc
adc
dec
pop
ret
add
jmp
in
jae
pop
aaa
pop
loop
icebp
mov
and
rolb
shrl
pop
or
shlb
jbe
jmp
adc
cwtl
xor
packsswb
pop
movsb
pop
inc
inc
push
sub
adc
or
cld
jne
and
pop
cld
aad
and
jo
hlt
les
out
outsb
jne
out
jmp
add
ljmp
int3
testb
je
inc
mov
cmp
mov
leave
es
loope
or
cmp
jne
dec
jmp
inc
cmpsl
dec
es
jl
or
lret
jne
inc
aaa
push
lds
mov
mov
loope
jne
adc
adc
mov
push
push
pop
xchg
hlt
push
call
dec
push
rolb
or
loop
std
int3
mov
mov
mov
roll
cmp
cli
xlat
and
mov
cmp
mov
repz
pop
and
arpl
fdivl
jne
test
or
sbb
out
into
cmp
jb
rep
jmp
mov
cmp
jb
jnp
jae
outsb
add
cs
fs
loopne
push
mov
mov
and
inc
push
and
ficoml
adc
sub
inc
add
add
pop
shr
lods
adc
sbb
push
dec
add
dec
cmpsb
nop
inc
xor
xchg
sbb
or
push
lods
repz
repz
movsb
pushf
xchg
mov
inc
mov
mov
call
jns
in
lock
hlt
clc
bound
out
clc
cld
shlb
mov
clc
sbb
mov
xlat
jmp
and
or
or
into
nop
inc
pop
pusha
sbb
and
loop
mov
sbb
lea
jl
cld
jl
daa
mov
cld
out
insb
addr16
lods
neg
adc
sbb
daa
in
xchg
xchg
xchg
stc
sub
pop
nop
xorb
cmp
push
movsb
push
int3
fiaddl
jl
mov
out
add
push
ficoms
push
out
push
add
nop
dec
dec
addr16
dec
mov
fs
iret
repz
mov
or
push
xor
inc
repz
cmp
push
arpl
sbb
repz
sbb
sbb
adc
repz
or
or
dec
enter
inc
jl
adc
push
xchg
test
aaa
sub
xchg
cmpsb
push
add
pop
punpckhbw
xchg
daa
ja
daa
dec
aaa
pop
push
pop
jbe
push
sbb
gs
mov
pop
inc
cmc
sub
push
fimuls
dec
orb
mov
and
iret
insl
xchg
adc
fidivs
sub
in
outsl
inc
cmp
fists
popl
mov
dec
movsb
pop
cmp
push
lcall
test
inc
iret
mov
dec
es
jmp
lea
mov
or
cmp
inc
and
popf
push
lea
xchg
daa
fildl
mov
pop
outsb
aad
and
inc
cmp
pop
or
xchg
cmp
xor
popa
imul
adc
xor
imul
add
enter
jp
dec
pop
outsl
out
pop
jmp
punpckhbw
or
test
movsl
inc
mov
aam
sbb
xchg
inc
and
pop
sub
cltd
pop
std
jb
and
and
jp
dec
cmp
pop
pop
cltd
mov
jecxz
push
sbb
js
dec
adc
fcoml
dec
push
jle
xchg
insb
sbb
arpl
fndisi(8087
add
push
jbe
sub
inc
aaa
pop
shrl
xchg
cmp
pushf
mov
cmp
into
lea
cmp
andb
add
jmp
sub
dec
jnp
and
sbb
push
adc
or
add
out
mov
jne
pop
fcompl
call
jns
jl
jle
push
or
add
imul
and
push
or
add
aam
adc
les
jne
fldenv
pop
adc
pop
push
xchg
stos
shlb
inc
cmp
mov
cmpsb
mov
mov
inc
pop
ljmp
fdivs
mov
shr
mov
adc
pop
sub
sahf
adc
imul
jb
jle
pop
dec
pop
and
push
fistpll
xor
clc
fwait
ss
pop
das
mov
aaa
ss
loop
nop
fidivs
or
repnz
and
add
xchg
push
or
push
xchg
adc
inc
fstpt
inc
les
orb
call
fsubrs
cmp
xor
push
push
sbb
jne
xchg
ljmp
mov
push
mov
insl
mov
fimull
inc
rorb
repnz
dec
pop
mov
add
add
mov
in
js
xchg
mov
cmp
rcrb
std
jne
scas
add
repz
or
add
jg
sub
sub
loopne
js
push
ljmp
in
insb
cltd
testl
adc
jmp
push
sub
push
fmull
mov
dec
jecxz
fs
or
lahf
inc
mov
or
pop
cmp
xor
fs
pop
sbb
sbb
roll
ja
add
inc
dec
mov
dec
fists
mov
push
sub
push
negb
pop
add
or
or
shrb
ja
jp
rorb
cmp
out
push
sbb
or
pusha
xchg
cld
jb
jp
sub
push
clc
jbe
add
pop
cmpsb
pop
add
adc
addl
popa
jmp
push
mov
add
jmp
test
jne
test
scas
adcb
cmp
xorl
orb
lods
cld
jbe
jle
mov
cmc
je
cmpsb
notl
mov
pushf
pop
hlt
pusha
push
dec
lock
ret
xor
negl
cld
rolb
pop
out
inc
and
testb
les
xor
add
arpl
lods
mov
into
adc
nop
in
mov
popa
call
ljmp
mov
pusha
dec
sti
mov
orb
adc
dec
or
aas
pop
and
or
shlb
or
pop
data16
outsl
push
xlat
pusha
sub
pusha
insl
xchg
roll
mov
or
hlt
or
mov
or
leave
inc
dec
push
rolb
jns
xor
push
test
shl
inc
adc
cwtl
rcr
outsb
jl
mov
pop
adcl
dec
test
jmp
cmc
or
rclb
jge
xor
pop
rclb
aam
insb
xchg
push
pop
add
fs
frstor
rcl
js
mov
ret
rorb
repnz
and
pop
rolb
cs
dec
jne
jmp
add
push
xchg
adc
cs
cmp
dec
cmpsb
dec
jne
ret
jmp
cmp
es
pop
pop
inc
sahf
xchg
push
pop
and
pop
mov
mov
data16
mov
movsl
stos
ds
test
pop
andb
push
shlb
decb
into
lock
and
neg
sub
cmp
jne
mov
push
mov
std
jne
es
jne
outsb
stos
cltd
cmpsl
call
aam
mov
icebp
cmpsl
add
jb
jmp
push
inc
incl
dec
mov
jns
pop
inc
adc
jmp
std
push
out
jle
xor
cld
cld
jmp
fldt
mov
in
adc
adc
inc
inc
inc
ss
add
inc
ljmp
pop
ret
mov
lcall
in
xchg
aam
and
xorb
shrb
dec
and
mov
pushaw
sbbl
push
jp
popa
xor
inc
cmp
or
xchg
roll
addb
inc
add
adc
adc
mov
lahf
or
and
or
leave
adc
in
push
pop
pop
loopne
and
pop
pop
lds
es
or
pop
or
mov
lods
and
mov
pop
add
xlat
add
push
cli
push
mov
pop
jne
fwait
dec
loope
fmuls
add
or
and
add
mov
push
and
mov
mov
ret
sub
push
push
push
push
inc
test
and
lret
loope
or
add
push
divb
out
fs
jno
add
dec
add
lea
push
inc
frstor
add
cmp
mov
adc
add
and
arpl
add
sar
sbb
or
lret
ret
loope
cld
and
push
jb
daa
call
adc
jmp
mov
push
xchg
movb
gs
push
fbld
push
mov
mov
xor
jns
ss
and
xchg
test
int
cs
hlt
mov
test
dec
mov
xor
stc
push
mov
push
fimull
pop
xchg
call
or
adc
push
xchg
clc
or
add
add
push
xor
shl
fmuls
cs
sti
jge
not
and
sub
add
pop
mov
sbb
out
mov
lock
rcrb
adc
imul
adc
dec
inc
pop
mov
add
test
xchg
sub
xor
pop
push
ja
jne
xor
cltd
insb
pop
mov
push
lcall
xchg
jmp
add
icebp
jg
incb
mov
inc
je
mov
lea
neg
mov
lock
mov
or
add
jmp
or
mov
inc
inc
cmpsl
mov
loope
sbb
roll
mov
pop
add
mov
sbb
fdivr
inc
cmp
jb
jno
jge
orb
add
data16
pop
pusha
add
cmp
ret
cs
sbb
adc
clc
lods
subl
xchg
adc
add
add
sbb
add
jmp
fsubs
mov
mov
mov
divl
lret
in
imul
stc
addl
xor
jo
xchg
fst
rolb
or
mov
shl
jne
pop
fiaddl
push
ficoml
and
ljmp
jecxz
daa
repnz
repz
mov
aam
xchg
pop
dec
cmpsl
add
inc
mov
inc
lret
sbb
mov
loopne
mov
pop
ljmp
ret
in
mov
iret
dec
lea
jl
and
outsb
sahf
sarb
fbld
cld
rclb
pop
dec
mov
and
inc
arpl
xor
pop
mov
imul
inc
jmp
cmp
sbb
jmp
adc
jne
sub
sbb
xlat
ret
cmp
adc
fimull
and
cmp
movsl
lret
adc
clc
js
inc
jns
out
or
and
adc
adc
pop
mov
fidivrs
pop
lods
adc
mov
push
aam
xor
or
mov
and
je
lret
or
dec
pusha
je
lea
push
sbb
sub
jo
inc
leave
and
orl
push
jp
push
jbe
push
add
and
dec
movsb
and
call
jecxz
push
lea
in
aad
push
adc
shl
cld
std
mov
nop
dec
inc
cltd
sbb
mov
push
adc
add
sbb
push
popa
insl
xor
dec
in
xor
cmp
insb
les
jmp
push
in
push
stos
mov
lds
sub
sbb
push
pushf
adc
jmp
aaa
ja
inc
loope
add
add
lock
and
hlt
mov
inc
mov
dec
jne
fs
add
add
bound
iret
add
push
inc
pop
insb
xor
adc
xor
add
xlat
lds
push
inc
push
inc
lods
sub
push
adc
orl
cmp
andb
sbb
sbb
dec
mov
je
adc
mov
push
or
imul
inc
cmpsl
fisttpll
xor
jno
enter
mov
xchg
and
push
adc
cwtl
sub
movsb
pop
outsl
inc
mov
jno
or
int
mov
adc
mov
pop
nop
jb
lea
push
adc
or
in
mov
xchg
adc
add
cmp
mulb
dec
js
clc
gs
xor
push
clc
mov
es
imul
inc
mov
mov
xor
jg
mov
lret
daa
or
pop
jne
or
jno
sbb
inc
dec
lds
or
pop
jmp
iret
movsb
mov
dec
xor
pop
or
mov
mov
push
xchg
es
or
in
in
outsl
inc
stos
mov
int3
movsl
xorl
test
push
mov
pcmpgtb
push
outsl
mov
push
shrb
add
jmp
mov
clc
xor
jo
stos
push
mov
fistpl
or
push
inc
sar
hlt
push
in
inc
xchg
insl
xor
inc
jecxz
inc
sub
pop
test
xor
or
inc
fdiv
lret
cmp
add
incl
ss
inc
mov
pop
fisubrs
xchg
fcomps
rcrl
clc
or
sti
or
gs
out
inc
xor
adc
and
sahf
data16
adc
add
or
push
into
dec
clc
ljmp
adc
loop
and
or
dec
in
mov
xlat
jle
mov
les
ja
cmpxchg
jp
mov
pop
or
mov
js
pusha
mov
and
push
push
dec
xchg
dec
pop
cld
dec
add
imul
jge
arpl
popa
orb
add
outsb
sub
in
inc
mov
imul
or
mov
pop
dec
add
insb
push
inc
loopne
push
jne
pop
addl
xor
das
decl
cmp
pop
imul
sbb
mov
jbe
sbb
push
mov
sti
ljmp
pop
mov
aad
xchg
sbbb
popa
push
rcll
mov
pusha
adc
shll
ret
and
and
dec
ficoml
or
std
push
dec
loopne
dec
test
test
push
pop
sub
mov
inc
mov
jne
and
mov
adc
fdivrl
into
add
add
sbb
inc
adc
jnp
out
or
repnz
add
ja
sbb
adc
clc
mov
es
fldl
and
sub
pushl
sbb
rolb
dec
dec
inc
imul
aaa
popf
fcoms
mov
jg
sub
mov
mov
jle
adc
inc
adc
adc
cmp
adc
adc
cmp
dec
xchg
fcom
pop
iret
sub
sub
je
loopne
js
mov
mull
pop
add
clc
adc
fs
mov
adc
inc
je
testb
mov
mov
stos
cmp
push
or
call
movsl
jmp
dec
je
add
or
jmp
cltd
rcrb
fstp
jnp
outsl
jno
push
sbb
add
jmp
push
xor
push
push
fisttps
or
adc
cmp
jg
test
push
stos
push
lea
push
inc
cmp
vcmpunord_sss
rcll
add
xor
arpl
xchg
cmp
shlb
push
push
push
addr16
sub
mov
addr16
add
dec
or
loopne
call
mov
xchg
popa
jb
push
repnz
push
test
je
mov
add
cmp
and
dec
sub
iret
mov
cmovp
mov
popa
dec
or
mov
pop
pusha
mov
mov
add
dec
loopne
mov
ds
rol
filds
iret
or
js
xchg
push
setb
leave
add
ja
rcr
xchg
add
jmp
rorb
add
dec
jno
xor
jae
push
jmp
sub
push
push
pop
dec
loopne
scas
adc
or
push
fsubrs
adc
inc
js
imul
jae
pop
daa
lods
orb
jae
sub
inc
add
pusha
jne
adc
sbb
jp
ret
push
push
test
lock
js
fs
pop
adc
loop
pop
lea
add
sub
rolb
in
xchg
cmpsb
dec
or
test
or
fst
fsubrl
add
xor
je
mov
mov
sbb
dec
and
add
cmp
mov
pop
jle
call
aaa
push
pusha
ss
cli
or
lea
cs
xchg
and
dec
js
movsb
mov
push
scas
mov
cmp
add
mov
push
decl
das
ds
dec
cmpsb
pushl
sub
xchg
je
push
add
adc
push
inc
xor
lcall
dec
push
pop
sub
repz
mov
cli
push
push
dec
outsl
out
fs
pop
rcrb
imul
cmp
popf
rcl
lret
push
push
add
sbb
jmp
inc
lods
movsl
stos
in
push
or
insl
or
cld
dec
xor
sarl
ret
adc
add
dec
jmp
push
out
inc
in
data16
push
inc
cmp
je
imul
mov
stc
xchg
clc
push
mov
stc
mov
stos
xor
fs
cmc
mov
notb
imul
add
sbb
jge
insl
xchg
mov
imul
pop
mov
jle
inc
dec
or
je
xorb
ret
add
push
xchg
mov
out
jbe
mov
jmp
dec
or
mov
cltd
pop
inc
mov
push
dec
movsb
adc
ja
rcll
clc
or
stos
xlat
je
cmc
push
in
test
sub
jb
insl
push
jbe
sub
dec
pop
sets
inc
imul
push
ret
cmp
push
mov
nop
jae
in
push
add
jnp
or
sarl
mov
add
mov
dec
inc
mov
movsb
lret
inc
dec
inc
xorb
add
xchg
add
clc
mov
pushf
out
lds
jbe
jmp
push
add
cmpsb
sbb
xorb
scas
dec
and
mov
mov
adc
or
add
js
dec
ss
add
popa
rol
pop
es
push
test
cmc
jmp
dec
and
ss
mov
aam
push
push
mov
jl
jge
cli
loop
lods
or
icebp
adc
adc
aam
pop
lret
movsb
sbb
lods
into
dec
add
daa
mov
fmul
outsl
jne
push
push
and
sbb
inc
aam
sbb
sub
in
call
clc
push
and
dec
or
cmp
pop
jns
jbe
add
imul
fadds
insb
dec
ret
div
lcall
push
xchg
pop
sarb
stc
and
jge
jnp
sbb
cld
jmp
adcb
loopne
mov
jge
sahf
adc
in
push
test
mov
push
jae
test
lcall
dec
lcall
or
mov
ret
clc
cmp
cmp
daa
dec
inc
pop
pop
pop
inc
adc
lock
test
push
popf
lea
dec
jmp
pop
jae
and
mov
in
add
jl
cmp
stc
xlat
repnz
jle
pop
xor
or
cs
fsubrl
mov
clc
xchg
add
inc
ja
xor
in
xor
xor
into
je
fcmovne
lea
pop
jne
mov
fdivrs
xchg
jnp
enter
popa
jp
lea
pop
jnp
add
lds
out
repnz
jnp
scas
orb
dec
and
sbb
mov
xchg
repnz
push
jne
mov
mov
and
push
cmpsb
sahf
push
in
xchg
push
push
leave
jl
and
mov
negl
push
lea
in
nop
je
and
push
les
test
sub
incl
lahf
out
sahf
sub
sbb
or
mov
sbb
ds
sar
push
cmp
stos
loop
in
pushf
mov
mov
add
and
inc
pop
icebp
push
dec
lcall
mov
mov
push
outsb
add
jne
mov
out
sahf
testl
enter
lahf
shl
clc
mov
xchg
or
push
adc
nop
inc
lods
orb
ret
push
pop
nop
adcl
pop
cmp
add
hlt
sub
jecxz
dec
push
or
je
mov
movsb
mov
out
jmp
testb
sbb
pop
lock
sbbl
mov
rol
cli
add
pop
dec
add
add
inc
mov
and
sub
push
sbb
stc
xchg
dec
xor
lret
add
popa
adc
xchg
mov
and
test
add
jne
out
js
mov
dec
adc
mov
cmp
pop
pop
mov
xor
xor
repz
lock
pop
popf
push
ret
or
push
andb
jmp
negb
je
movsl
cmp
push
lods
cld
in
push
fstl
mov
aad
sub
sub
lret
sbb
xor
or
sbb
cmpb
xchg
insl
fsubs
mov
inc
mov
add
fadds
add
pop
cmc
rolb
cmpb
aam
push
rcll
aam
cmc
imul
test
or
push
std
adc
sbbl
pop
mov
add
sbb
movsb
hlt
add
inc
cmpb
lock
sub
add
rcrl
ss
mov
les
je
rolb
dec
jb
push
mov
ss
sbb
pop
jmp
loope
fucompp
insl
xor
sub
std
add
jo
add
sbb
add
or
adc
mov
xchg
push
and
clc
mov
sbb
sbb
or
dec
stc
repnz
or
jo
repnz
and
ret
mov
rolb
in
add
add
push
pushf
or
aas
sub
xor
mov
das
das
das
das
sbb
subb
pushf
popl
mov
jno
mov
testl
mov
ja
sbb
cwtl
cltd
sub
aad
jge
inc
enter
adc
subb
sbb
fsubr
dec
js
std
push
lcall
push
int3
adc
popa
or
push
xor
push
in
or
add
rol
add
xchg
ss
mov
pusha
decl
test
andl
ljmp
ret
sub
xchg
iret
xchg
rorb
fcoml
fcomps
int3
mov
xchg
clc
or
test
mov
mov
mov
cmp
mov
add
hlt
fistpll
insl
xlat
sbb
aam
aaa
dec
cld
xor
loopne
rclb
ror
pop
in
xchg
int3
jno
insl
push
jne
push
and
test
jecxz
in
das
adc
sbb
push
add
test
sub
pushl
pop
cli
add
mov
mov
inc
push
leave
sbb
adc
add
add
and
push
push
or
das
lock
dec
or
xchg
xchg
push
mov
and
shrb
lahf
jge
pop
imul
mov
mov
adc
jbe
push
lock
stos
rolb
push
jne
imul
or
or
clc
or
sbb
push
scas
movsb
jbe
add
push
adc
or
or
loopne
pushf
mov
xchg
insl
test
dec
push
shlb
loopne
jbe
push
push
jne
xchg
pop
call
dec
ljmp
sbb
stc
shl
add
pop
mov
mov
addb
outsb
mov
mov
push
pop
stos
and
cmp
sbb
add
and
cld
out
jmp
push
frstor
or
cmp
adc
mov
mov
test
push
or
pop
push
in
sbb
add
lret
gs
shl
sarb
test
in
mov
cmp
and
or
test
ror
xchg
sbb
sarb
leave
xchg
call
addr16
xchg
loopne
cmp
out
or
sbb
lahf
mov
mov
cmp
sar
lahf
lea
pusha
and
pop
ja
or
mov
xchg
xorb
push
sarb
add
sar
pop
lods
movsb
add
jbe
xchg
push
sub
jo
mov
or
lret
movsl
mov
loopne
sbb
pusha
xchg
mov
lcall
or
sbb
into
dec
pushf
mov
or
add
setg
jb
sbb
or
push
add
xor
sti
mov
adc
push
sti
add
or
mov
clc
adc
push
imul
cs
dec
lock
ja
movsl
mov
mov
leave
test
pop
orb
jbe
movsl
hlt
hlt
stc
rcr
push
add
push
sbb
xor
test
insl
and
jo
test
test
ds
jle
sub
scas
pop
ret
sbb
pop
and
fnsave
jne
js
add
movb
inc
xor
movsl
sbb
adc
out
inc
fs
sbb
sbb
imul
sub
js
rolb
add
pop
and
dec
and
btc
in
lods
dec
arpl
add
or
fdiv
sub
pop
jle
inc
je
xlat
add
or
add
fcmovb
and
ret
ret
adcl
mov
mov
adc
cmp
mov
push
arpl
push
or
nop
jbe
xchg
mov
ljmp
push
or
dec
and
in
subl
mov
mov
es
add
xchg
mov
adc
es
push
xchg
or
addr16
cmp
sub
inc
inc
push
insl
cmp
jl
xor
jmp
xchg
pushf
sub
sbb
dec
mov
repnz
sub
and
clc
cmp
dec
mov
test
cmp
or
pop
pusha
or
aaa
pop
sub
lds
dec
sub
aaa
inc
cli
inc
stc
jo
xlat
mov
mov
cmovns
sbb
dec
ret
inc
seta
stos
mov
ret
lea
cmp
pushf
mov
sbb
movsb
imul
dec
shrl
add
pop
gs
inc
mov
mov
add
addr16
insl
je
hlt
xchg
pusha
je
or
sub
cmpsb
or
ss
ss
jo
pop
lret
xor
mov
fildll
mov
xor
sbb
xchg
daa
sub
adc
xchg
mov
sbb
or
and
mov
add
jp
fcoms
mov
mov
adc
jge
movsb
addr16
mov
jmp
cmp
jle
mov
out
mov
cmp
scas
jo
jno
cmpsl
ja
pop
fs
stos
pusha
and
insb
adc
mov
sar
push
shr
push
push
insb
dec
lods
or
or
inc
cmp
adc
adc
insb
mov
loope
jne
push
push
xchg
sub
inc
sbb
cmpb
mov
mov
push
xrelease
imul
dec
add
cmp
call
enter
cmpb
jne
xor
cmpsb
adc
stos
mov
lea
hlt
sub
and
jae
pusha
cld
xlat
add
jo
inc
pop
adc
lods
push
adc
fwait
dec
loope
popa
roll
sub
mov
cmp
inc
mov
rcll
mov
adc
ss
dec
dec
sub
push
cltd
je
sbbl
add
jo
fcoms
push
push
add
fidivrl
jno
xor
pop
mov
jnp
or
sbb
push
lock
and
mov
or
or
and
jnp
fmul
lea
or
or
and
push
inc
les
cltd
push
popf
call
sbb
shll
clc
repnz
loop
mov
sahf
add
mov
xchg
add
jmp
in
mov
test
pop
inc
into
adcb
sub
rorb
mov
add
inc
jmp
movsb
mov
rclb
jmp
dec
out
mov
add
repnz
sar
or
imul
std
push
sub
add
sub
mov
push
sub
adcb
mov
sbb
or
decl
inc
fcomps
inc
sbb
in
jle
cmp
cmpb
sub
std
or
push
cltd
cmpb
nop
mov
inc
mov
dec
test
xor
add
xor
lcall
addl
add
jle
aam
mov
add
sbb
jl
dec
adc
cltd
push
jge
jle
sub
cmc
hlt
loope
lret
in
jg
jmp
add
es
aas
jmp
pop
int
out
adc
fldenv
sbb
addl
outsb
push
xchg
xchg
movsl
pushf
cmp
les
std
out
mov
mov
mov
pop
sbb
and
cmp
xlat
inc
movsb
adc
mov
dec
jne
rorb
xchg
mov
mov
testl
xor
lcall
out
lcall
dec
mov
mov
es
xor
mov
pop
mov
or
or
adc
mov
arpl
stc
pop
popa
xchg
addr16
adc
int3
int3
sti
or
mov
adc
xchg
negb
les
pop
aad
or
lods
cld
add
cmpsl
or
movsb
add
aas
push
xor
mov
sbb
inc
scas
in
pop
notb
fwait
cmp
test
push
es
je
add
and
clc
adc
pop
or
test
cs
idiv
add
fmuls
shrb
and
pop
movsl
and
mov
jb
into
mov
add
pop
add
add
and
rclb
cmp
pusha
lods
dec
test
cmp
sahf
les
lock
mov
pusha
add
mov
inc
cmp
arpl
xchg
ljmp
cmp
es
addl
fsub
push
rolb
or
mov
ljmp
and
out
pop
call
lahf
xchg
test
jp
add
sbb
mov
ljmp
cld
push
cmpl
dec
or
adc
adc
outsb
mov
add
out
loopne
push
loopne
loopne
mov
dec
loopne
xchg
aad
xor
ljmp
imul
or
xchg
xchg
inc
mov
cwtl
mov
jl
add
pop
or
and
rol
rolb
pop
mov
test
dec
jmp
clc
pop
inc
mov
mov
jb
mov
ret
push
inc
inc
push
cld
add
sbb
data16
xor
call
dec
insb
add
add
jmp
push
cmc
pop
and
mov
ret
mov
mov
pop
hlt
cmp
xor
push
mov
clc
pop
push
das
push
ret
test
xchg
lock
mov
or
pop
push
xor
sbb
ss
add
dec
mov
lahf
jge
cmp
sub
lea
into
rorb
mov
sar
jge
fstps
adc
mov
sbb
je
jne
clc
pusha
push
add
in
xchg
push
pop
mov
pusha
sub
sarb
push
add
pop
adc
js
cmpsb
rcl
lock
inc
xor
cmp
lods
sti
inc
mov
sbb
inc
and
out
jb
rcrb
jnp
shl
test
std
and
mov
xlat
xlat
push
xchg
imul
jo
pop
leave
inc
sub
mov
aam
mov
shrl
add
icebp
add
popa
sbb
icebp
pop
or
sub
lahf
inc
push
fpatan
mov
inc
push
loopne
cmp
sahf
pop
push
ret
xchg
call
ret
in
nop
jmp
xchg
xchg
adc
mov
dec
sub
lock
push
imul
ret
push
test
and
lahf
notb
mov
sub
add
pusha
mov
xor
push
mov
sbb
popf
icebp
xchg
cmc
dec
mov
test
lock
push
or
dec
push
arpl
stos
subl
inc
mov
xor
xchg
and
outsl
inc
inc
or
out
pop
jmp
pop
add
xor
aas
sbb
lcall
sarl
mov
xchg
pop
sub
push
cld
mov
adc
dec
in
sti
sbbb
ss
decb
xchg
and
dec
sub
inc
mov
mov
mov
jg
in
test
mov
into
and
leave
addb
nop
dec
add
or
or
subps
push
andb
adc
and
rcrb
sbb
pop
in
or
popf
jmp
mov
addb
lock
sub
subb
jae
mov
loop
mov
lret
test
push
mov
sbb
pop
aam
pushf
xor
jg
add
add
add
add
add
mov
pop
fxam
mov
test
cmc
xor
push
jmp
mov
pop
jp
and
dec
ret
xor
pushf
rol
lcall
cmpl
jne
push
fdecstp
mov
cmp
iret
das
nop
outsb
sbb
or
test
xchg
push
imul
les
into
lcall
shlb
mov
jne
adc
push
cmpsl
sub
je
jb
pop
sub
or
mov
enter
test
fiadds
popf
fwait
out
ja
cmp
jbe
cli
pop
adc
or
addr16
pop
orl
lods
sub
test
mov
cmovo
scas
sahf
pop
shl
jmp
adcl
lahf
pop
mov
jns
and
fistpll
out
dec
pop
shrl
xor
and
in
push
push
adc
mov
push
sub
pop
add
fdivs
mov
xor
sub
inc
adc
fs
cltd
leave
cltd
imulb
and
hlt
adc
mov
push
jns
xchg
push
inc
shl
xchg
loop
fistpll
insb
jne
jbe
jne
jbe
or
pop
and
mov
mov
shrb
cmp
mov
xchg
xor
jg
pushf
pushf
je
jb
inc
cmp
es
push
add
jb
jmp
pop
leave
dec
rorl
mov
xor
and
int
imul
insl
pop
mov
and
and
cmp
lret
movsl
and
and
sahf
test
lods
push
das
push
mov
xor
call
push
mov
adcb
dec
ud1
cltd
jg
fsubs
sbb
push
daa
iret
fidivrs
in
test
insl
and
mov
ja
call
inc
inc
push
mov
push
leave
cmpsb
fildl
cli
mov
mov
mov
repnz
inc
mov
shrb
lret
ja
dec
sahf
lret
call
and
xchg
mov
cltd
add
or
inc
adc
popf
cmpsl
shll
lods
pop
ja
gs
addr16
mov
lahf
inc
sub
lods
lret
xchg
sbb
das
mov
inc
jb
faddl
lods
and
enter
lods
mov
dec
fmuls
loopne
inc
and
shlb
enter
sub
fcompl
aam
in
or
mov
fdivrl
push
enter
mov
fdivs
outsb
lods
inc
and
adc
aam
sti
es
in
jne
in
push
inc
dec
bound
xchg
lods
xchg
jbe
jne
pop
mov
lods
dec
call
addl
jp
pushf
mov
or
inc
xor
add
fistps
pop
dec
in
icebp
scas
inc
add
lods
push
and
cmp
sbb
adc
add
inc
cmp
jbe
jbe
fisttpl
and
sub
xchg
aam
mov
ror
dec
lea
mov
aas
clc
xchg
ret
xlat
gs
add
fwait
repnz
push
mov
mov
jne
mov
pop
sti
push
and
adc
mul
das
mov
or
ret
jle
or
or
test
js
dec
add
jp
enter
xor
int3
jp
aad
cmovno
jmp
mov
and
lods
pop
add
dec
dec
xchg
ss
scas
movsb
add
jbe
cmp
jne
or
or
je
cs
out
ljmp
rcrb
xchg
or
push
nop
sbb
sarl
add
xchg
sbb
jbe
out
add
add
mov
mov
inc
clc
pop
add
jmp
sub
xor
or
and
js
push
or
or
adc
call
outsl
xor
inc
push
shr
sbb
and
or
sbb
mov
fsubl
aam
or
inc
pop
xchg
or
adc
ja
test
sub
mov
mov
inc
out
pop
inc
push
add
dec
popa
sahf
or
out
inc
ret
add
mov
mov
andb
test
jmp
out
cli
cmp
xchg
and
adc
add
movzbl
add
and
pop
mov
push
mov
andb
pop
mov
dec
bound
xor
mov
jbe
loopne
ficoms
push
pop
rclb
ljmp
ucomiss
sub
push
push
mov
inc
cld
mov
dec
and
int
decl
dec
push
sbb
lods
jmp
adc
and
dec
nop
mov
adc
mov
lahf
aam
lret
int3
leave
sub
mov
or
rorb
sbb
mov
fwait
les
or
inc
jmp
jmp
cmpsl
roll
jb
push
jo
push
pop
pop
clc
mov
in
jo
jg
xor
mov
push
lret
xchg
jnp
mov
mov
cltd
inc
mov
xor
outsl
repnz
push
or
sbb
jno
loopne
movl
push
subb
jmp
mov
shll
cltd
or
cmp
jne
movl
inc
or
in
outsb
mov
adc
sahf
adc
sti
jmp
sub
or
cmp
les
add
dec
rolb
mov
cmp
inc
push
fisubrl
notb
cmp
test
sbb
push
mov
mov
lock
incl
cmp
into
jb
or
movsl
cltd
je
jmp
loop
call
mov
push
and
pop
popf
xchg
enter
js
aaa
les
rolb
cmpsl
mov
jae
cmp
jbe
and
shl
jne
jmp
and
inc
push
leave
inc
imul
imul
and
mov
aaa
jmp
outsb
setge
enter
sbb
fs
test
cmp
or
lcall
push
ljmp
fadd
shlb
inc
in
jge
inc
cmp
xorb
ja
movsl
adc
sti
dec
sbb
enter
or
out
std
xchg
xchg
out
dec
jne
mov
rolb
xchg
stos
lods
sbb
sbb
shll
mov
mov
xor
push
mov
inc
dec
jne
cld
cmp
stos
mov
jmp
adcb
lret
jnp
cmpsl
cmp
adc
push
enter
jle
push
adc
jo
addl
mov
adc
mov
push
pop
xor
cmp
sbb
mov
imul
or
inc
push
cmpsb
pushf
sub
xor
out
pop
add
mov
cmp
adc
insl
test
push
mov
fidivrl
and
add
inc
inc
mov
lods
add
sbb
das
mov
andb
les
or
pop
popfw
push
cmp
clc
add
andl
inc
cmp
inc
jmp
xor
or
mov
fwait
xlat
add
cmp
out
jno
adc
jno
es
mov
jmp
mov
int3
sbb
cmp
sub
add
mov
or
fsubs
std
and
mov
ljmp
xchg
ret
xor
xor
faddp
sub
cmp
sbb
mov
lea
push
test
lock
mov
enter
jnp
ret
and
adc
subb
add
movsl
sub
cmpsl
rolb
pusha
inc
add
pop
test
push
scas
rclb
repnz
ret
je
sarb
andl
and
pop
sbb
adc
dec
mov
mov
adc
int3
inc
mov
das
inc
mov
xor
sbb
xor
jno
inc
inc
sbb
sub
fwait
xchg
add
sub
and
add
sbbl
mov
cmp
cmp
add
mov
aam
inc
mov
lea
jg
pop
mov
or
pop
cld
js
bound
mov
aad
adc
mov
adc
dec
jge
cmp
xor
and
bound
fisubrs
push
mov
mov
mov
addr16
stc
test
sbb
push
sbb
mov
sbb
sbbl
and
js
add
push
sbb
jo
adc
add
dec
jecxz
add
leave
mov
pop
add
lods
fsubrp
mov
rorl
ret
or
or
cwtl
testb
test
sub
adc
and
pushf
arpl
in
xorl
xchg
push
push
push
pusha
out
cmp
mov
fdivrl
push
mov
cs
push
aas
mov
mov
or
inc
movl
inc
add
aad
mov
inc
or
add
jo
sbb
jg
sahf
mov
pushf
mov
push
mov
shlb
push
bound
repnz
mov
imul
dec
sbb
orb
faddp
call
mov
pop
dec
pop
sbb
cwtl
ss
cmpsl
mov
sub
js
imul
mov
pop
push
mov
aad
push
mov
and
sbb
lock
dec
sti
cs
pop
sti
iret
push
adc
jns
xor
jns
mov
or
sbb
pop
jb
cmp
js
pop
jb
dec
pop
cmp
dec
and
jle
add
sbb
jmp
cwtl
pushf
mov
push
dec
mov
jmp
jbe
and
popf
or
sbbl
jp
add
xchg
mov
mov
insl
jg
mov
push
xorl
mov
sbb
enter
out
mov
in
mov
push
ljmp
and
push
xchg
xchg
lret
pop
jo
les
pop
xchg
push
jo
cmpl
leave
test
push
adc
pop
push
and
fsubr
hlt
cmp
add
fiadds
and
add
cmpsb
mov
js
or
stos
cmp
xchg
mov
xor
sub
fistpl
js
push
xor
cmc
jge
inc
pop
xchg
arpl
lds
jne
push
rcll
cmp
add
and
xchg
sbb
or
mov
xchg
and
pop
sub
and
adc
jnp
inc
fisttps
scas
add
mov
punpcklbw
js
cmp
inc
adc
mov
adc
pop
pop
hlt
mov
pop
popl
mov
push
mov
inc
or
mov
rcr
lsl
sbb
or
and
in
sub
bswap
pop
pxor
push
push
sarb
jg
loop
fists
pop
je
mov
inc
adc
and
inc
push
sbb
loope
pusha
jo
mov
dec
jne
rcr
sub
int3
je
andb
mov
jg
adc
divb
xor
cmp
dec
push
sbb
add
jne
ss
mov
inc
inc
cli
pop
pop
ret
sub
sub
push
mov
bound
push
inc
dec
cli
shr
add
outsl
or
sbb
push
insl
out
pop
loop
test
ret
decb
neg
loop
dec
sub
or
pop
testb
dec
popf
adc
adc
or
xor
inc
dec
subb
mov
mov
push
or
shll
enter
pop
and
push
fistpl
or
push
jo
icebp
orb
mov
popl
mov
push
test
mov
pop
cli
sbb
nop
mov
lock
add
sub
jmp
mov
mov
fmull
enter
xorl
add
or
sbb
faddl
add
inc
jb
inc
adc
mov
mov
push
fldl
or
add
rcl
inc
repnz
adc
sub
mov
mov
in
jno
ja
imul
xchg
cmpsb
ss
jl
popa
xchg
pop
inc
fs
jns
sbb
mov
and
pop
stc
sbb
dec
pop
pusha
mov
add
and
sbb
push
jns
outsl
adc
adc
test
add
push
push
sahf
mov
sarl
fld
dec
sbb
cld
and
jl
rcrl
stc
cmpsl
subl
int3
test
adcb
fwait
xchg
jmp
decl
iret
hlt
jmp
mov
mov
jne
pop
pop
adc
aam
lahf
in
pop
js
and
push
mov
push
pop
or
lock
push
xorb
or
cmp
add
loop
nop
sbb
out
fisubrs
push
cmp
ror
pop
repz
idivl
test
outsb
push
ja
adc
cmpsb
jge
mov
and
movsb
out
aam
mov
and
inc
push
and
mov
ss
xor
js
add
push
sahf
sub
arpl
js
fildl
mov
sti
adc
inc
inc
sbb
push
cltd
inc
sbb
inc
faddl
out
insb
adc
popa
push
jmp
lea
adc
clc
in
arpl
inc
ficompl
jmp
xchg
mov
lahf
clc
and
ret
and
push
push
test
jmp
adc
inc
mov
sub
or
mov
adc
pusha
inc
sbb
mov
test
mov
xor
data16
sub
je
mov
in
rcrb
jo
pop
xor
jne
lea
mov
mov
jle
add
les
mov
push
mov
shll
fucomip
stos
rclb
iret
bound
mov
iret
add
xor
pop
or
jne
sub
xchg
popf
fstpt
fadds
mov
inc
mov
jb
enter
pop
jb
mov
lods
std
leave
faddl
jne
movsl
pop
mov
mov
test
lods
and
and
mov
add
hlt
and
push
shr
lea
cmpsb
outsb
jno
mov
mov
idivb
mov
or
out
or
mov
xchg
out
enter
xor
or
in
mov
js
dec
and
sarb
mov
lods
pop
lret
or
repnz
mov
or
sar
jo
lock
pushf
mov
jne
int3
pop
cmpsl
pop
or
add
xlat
dec
pop
sbbl
subb
jno
add
mov
inc
loopne
pop
cld
fnstsw
add
add
sub
sub
add
loope
mov
pusha
push
add
call
xchg
shl
call
pop
dec
or
inc
xor
orb
mov
cmp
jne
inc
sub
pop
aad
pusha
mov
outsb
lahf
mov
push
cmpb
movl
testl
pop
pop
jnp
pop
inc
push
fimull
mov
imul
cmpsb
shl
jne
js
ds
mov
andl
orb
add
ret
gs
js
mov
outsl
stc
xor
lea
lret
pop
test
scas
sub
arpl
push
clc
mov
jns
pop
mov
or
out
ret
push
jle
push
or
movb
test
push
inc
lea
xor
in
pushf
sub
ret
inc
dec
dec
lock
int
push
dec
lds
sub
inc
icebp
mov
cwtl
add
pop
cmp
jne
xor
shll
stc
mov
jecxz
mov
add
jle
push
push
cmp
or
xor
mov
out
mov
rcl
jns
daa
mov
stos
pop
and
add
xor
mov
cld
roll
add
push
push
push
lahf
mov
push
arpl
enter
mov
mov
dec
aaa
dec
nop
jno
or
mov
or
mov
inc
out
add
imull
and
push
xlat
inc
loopne
mov
adc
mov
mov
jbe
fisubrs
into
nop
cmp
mov
lcall
std
and
or
push
mov
into
adc
cmp
jnp
add
mov
xlat
push
xor
addb
xor
in
or
push
add
push
mov
arpl
jp
in
mov
dec
mov
mov
mov
add
add
aaa
movsl
pop
pop
sub
pop
mov
or
jl
fwait
repnz
stos
dec
push
mov
mov
pushl
fistpll
bound
roll
add
imul
es
mov
inc
fildl
cmpsl
add
cmp
add
clc
push
les
sub
add
mov
xchg
mov
daa
add
daa
push
mov
sbb
add
sti
xor
aad
aas
shlb
push
ret
movsl
jb
hlt
sbb
mov
adc
mov
xor
outsb
adc
adc
ss
lock
repz
and
xchg
mov
jp
paddw
xchg
adc
adc
fwait
cmovne
or
add
sub
pop
js
bound
push
jns
xchg
aas
dec
add
cs
rorb
lret
xor
inc
jl
jmp
dec
xchg
add
jns
cmc
roll
sbb
push
pop
lcall
cltd
inc
pop
imul
sbb
or
inc
mov
jg
int3
cmp
jnp
sub
test
jne
pop
mov
test
cmpsl
rcrb
fisttps
add
dec
shrb
call
lods
sbb
jle
mov
adc
mov
mov
dec
lahf
jl
or
fstpt
sbb
mov
je
in
push
push
push
push
mov
xor
inc
or
mov
lcall
sub
enter
dec
aas
inc
jp
jmp
int
fs
lret
inc
sbbl
dec
add
adc
scas
add
xchg
mov
adc
pop
mov
sub
or
mov
mov
in
adc
lea
push
mov
push
dec
pop
sub
das
push
sub
roll
fmul
push
or
push
jl
repz
pop
cs
testb
ror
fstpt
inc
adc
adc
push
lcall
push
clc
nop
mov
jecxz
or
out
in
push
les
pop
dec
sub
int
cmp
out
out
popa
mov
xor
loop
or
movsl
mov
inc
xor
mov
push
mov
outsb
sub
mov
aaa
lods
lods
pop
fsubs
xor
lods
push
cmpsl
or
inc
ret
and
shrb
out
push
pop
pop
aam
or
fxch
stos
imul
xor
int3
mov
xor
xlat
popa
push
add
stos
daa
ret
or
jbe
aaa
sahf
or
jmp
xor
add
add
xchg
arpl
sub
test
movsl
mov
int3
cmp
xlat
scas
mov
xlat
int
mov
mov
xlat
jge
rorl
xlat
xchg
adc
and
sub
xlat
sbb
jmp
in
sbbl
sbb
int
inc
nop
loope
getsec
add
mov
cltd
inc
cmpsb
test
inc
xchg
adc
ljmp
sbbl
testl
and
mov
xor
fistpl
cltd
movsb
repnz
int3
es
pushf
add
sub
xchg
or
fcmovnbe
pop
pop
push
sbb
sahf
pushf
push
cmp
incb
fisttpll
mov
dec
and
cmp
out
add
mov
mov
shll
xor
lods
mov
jb
sbb
mov
mov
mov
int
xchg
mov
inc
je
cmpsl
and
in
cmp
sahf
add
push
and
and
dec
xorb
xchg
leave
jne
iret
lea
arpl
push
jb
leave
iret
movsb
test
push
leave
inc
test
sbb
xchg
pop
outsb
ret
lret
loope
rorb
sbb
hlt
adc
out
pop
dec
imul
add
push
jns
and
sub
jae
ss
pop
sub
or
sbb
push
out
daa
loope
faddl
pusha
popa
test
je
or
sbb
jnp
js
loopne
add
fadd
xor
and
adc
push
inc
or
pop
pop
push
shlb
aaa
or
mov
or
movb
in
mov
push
sbb
icebp
push
scas
sti
or
or
sbb
lahf
add
sti
mov
push
jmp
jg
mov
add
push
mov
icebp
mov
sub
dec
xlat
xor
dec
add
dec
cmc
dec
push
divl
dec
movsb
or
add
movsl
xchg
mulb
testb
sar
adc
inc
cltd
cmp
and
inc
ret
cld
aaa
dec
dec
mov
push
cmpsl
je
mov
sbb
shlb
adc
inc
sbb
sbb
sub
push
mov
add
jmp
pushf
add
or
repz
pop
xchg
ja
or
shr
je
cld
fwait
loope
jge
std
outsl
push
push
dec
adc
push
and
out
lcall
adc
lahf
out
outsl
inc
or
jbe
jle
iret
lahf
out
dec
outsl
ja
jo
mov
push
mov
adc
dec
jne
pop
dec
in
jnp
pusha
ficoms
pop
ffreep
and
sar
lea
lea
inc
out
mov
mov
fidivl
add
dec
cli
add
sahf
xor
jp
jle
lahf
ljmp
ret
mov
ljmp
shrb
lret
ret
mov
shr
push
push
ret
fadds
icebp
mov
sbb
sbb
in
pop
inc
loope
or
jae
jns
shll
jmp
jmp
or
addr16
es
bound
or
sarl
pop
jmp
ds
inc
mov
push
bts
jmp
mov
inc
xor
sbb
cmpsb
stc
add
xor
sbb
and
call
or
inc
jne
cmpl
in
incl
cmp
je
cmp
and
shll
ret
notl
or
ljmp
loope
inc
cmpsl
test
dec
pop
push
lock
outsl
fadd
push
cmp
lret
mov
and
add
test
mov
test
mov
add
pop
daa
cld
and
aas
adc
mov
pusha
sbbb
sbb
repnz
pop
or
shrl
pop
andl
or
stc
mov
mov
mov
adc
inc
fs
popa
aas
jle
nop
pop
subl
xor
cmp
and
leave
sub
mov
cmp
or
pop
pop
mov
and
mov
add
sbb
orb
pop
loop
mov
rolb
adc
mov
scas
sub
lock
test
rolb
stos
xchg
jmp
inc
or
sbb
push
sbb
pop
pop
ljmp
cmp
mov
xchg
fiaddl
out
mov
add
fsubr
inc
js
imul
lods
gs
jmp
outsl
xchg
mov
sub
push
jbe
add
gs
sbb
mov
lock
out
jne
mov
add
incl
inc
and
sbb
mov
pop
jne
out
add
out
dec
adc
add
xor
add
std
adc
popa
mov
out
cs
adc
repnz
add
xor
push
mov
push
xor
push
xchg
sub
and
jp
imul
mov
xchg
je
or
jne
dec
xchg
pop
sbbb
xor
call
dec
add
sub
mov
aas
movsl
adc
fildl
inc
cs
je
adcl
jne
jnp
mov
and
and
sbbl
push
ljmp
outsb
or
xchg
jne
push
insl
and
cld
add
sbb
subl
push
or
push
push
popa
idivb
test
es
push
aas
adc
push
cli
push
ss
and
ja
inc
std
jb
sbb
xor
sub
xor
jle
idivb
mov
lods
or
clc
sub
or
pop
clc
insb
pusha
arpl
int3
mov
sub
push
je
jb
xor
and
sar
cmp
lea
add
add
and
mov
sub
push
daa
orl
mov
in
rcrb
shlb
xor
sub
mov
out
shlb
into
js
push
je
lods
add
lock
sub
lea
adc
fldenv
or
push
cmp
or
or
out
dec
mov
and
mov
ljmp
push
pop
push
int
sarl
loope
lea
daa
mov
or
dec
jg
out
mov
incl
or
movb
xor
out
xchg
pop
dec
inc
cmpsl
sbb
cmpl
push
push
mov
out
push
pop
call
imul
add
mov
push
out
jl
fimuls
or
fnstsw
sbb
movsb
or
aas
ss
push
or
add
arpl
scas
add
faddl
add
cmp
mov
xor
aas
cmp
or
rolb
roll
cmp
jb
scas
daa
les
out
nop
cmp
pminsw
jle
insb
stos
pop
add
jp
orb
push
or
fmuls
mov
or
pop
ret
add
addr16
add
push
pop
nop
movsb
inc
out
mov
cmp
or
add
add
sbb
adcb
dec
jmp
inc
jne
mov
xor
out
push
testl
sub
mov
dec
push
pop
jmp
lea
lods
inc
push
xchg
cmc
push
jnp
lock
ds
aaa
xor
mov
mov
jne
sub
ret
aam
adc
daa
dec
in
insb
lock
push
mov
movl
xchg
xchg
add
jmp
push
pop
aam
mov
test
pop
js
mov
push
outsb
addb
inc
aam
xchg
dec
and
cwtl
cwtl
jge
or
maxps
dec
out
mov
stos
inc
adc
test
not
mov
adc
jmp
push
stc
push
sub
xor
inc
and
mov
mov
dec
lock
repnz
adc
jne
xchg
and
mull
dec
mov
pop
mov
out
repz
mov
or
mov
add
push
lret
mov
pusha
dec
imul
mov
jae
dec
aam
dec
jb
ret
mov
sbb
push
sbb
lea
pop
pop
push
sub
push
lock
nop
popa
cmp
jecxz
or
sub
xchg
int
dec
jbe
pop
mov
add
or
xchg
fistl
imul
sub
or
xor
arpl
in
xchg
xchg
das
push
push
jb
pop
iret
and
sbb
addr16
lret
push
add
jnp
incb
insb
fs
enter
loopne
daa
jg
cmpsb
push
cmp
xor
xor
add
into
jnp
xor
or
or
fwait
gs
xor
push
xor
idivb
inc
adc
stos
in
cs
cmp
inc
dec
ds
inc
ja
sub
dec
inc
js
dec
push
sahf
lret
push
push
outsl
adc
and
in
aaa
popa
inc
adc
fnclex
sub
dec
mov
in
adc
movsb
dec
sbb
inc
popa
xchg
ja
pop
sub
adc
xchg
adc
ret
cmpl
shlb
jne
mov
pop
add
xchg
jbe
leave
and
das
inc
mov
push
nop
rcll
mov
adcb
push
shr
jmp
loopne
push
es
movb
andb
push
clc
stc
aad
or
or
xchg
push
pop
lea
fisttpll
lock
xchg
sbb
sbb
mov
lock
and
pushf
add
aad
mov
insb
mov
adc
ja
jo
loope
sarl
pop
out
pusha
bswap
dec
cmp
cli
sbb
adc
not
sbb
mov
cmp
jge
inc
push
sbb
clc
outsb
scas
cmp
jne
test
js
addr16
int
arpl
sub
add
jo
sbb
insb
data16
push
cmp
out
inc
inc
scas
adc
mov
add
jo
inc
adc
lods
sbb
in
out
jecxz
out
inc
fcmovnbe
loopne
xor
lret
sahf
mov
mov
test
dec
test
andb
fwait
loopne
sub
sbb
push
or
mov
inc
jns
clc
xchg
mov
dec
ja
sub
sub
sbb
pop
sub
adc
or
mov
adc
les
ds
sahf
clc
lock
loop
pusha
mov
insb
pop
lods
and
or
push
dec
rcll
dec
mov
xor
loopne
andb
adc
pop
lea
adc
test
or
xchg
add
aad
mov
sbb
addr16
je
mov
sbb
add
fdivs
or
enter
add
lock
je
jb
mov
pop
xchg
fadds
ret
sub
cmc
add
jmp
neg
jle
rcl
add
out
sub
or
fcoms
jnp
out
fisttps
push
lock
mull
lsl
jmp
push
loopne
ficomps
push
inc
shr
rcr
shr
rcr
or
sub
jno
mov
repz
dec
fs
outsb
lahf
jo
out
jb
cmp
or
cmp
or
cmp
add
sbb
adc
push
push
sub
or
ficoml
aam
test
fxch
pop
ret
adc
xchg
stc
je
sbb
inc
rdmsr
sbb
pcmpeqd
insb
add
and
inc
jmp
das
xor
in
sub
sbb
repz
mov
cwtl
pavgw
into
rolb
xchg
or
inc
jp
mov
lock
jb
sarl
sarb
pop
mov
rcrl
xlat
sahf
stos
in
loope
cmp
jecxz
scas
sub
add
and
and
inc
pop
les
les
inc
imul
xlat
mov
mov
xchg
jne
add
mov
push
jae
or
js
inc
clc
into
jmp
insl
loopne
push
push
outsl
xor
sbb
cmp
xchg
shlb
clc
loop
and
test
jmp
dec
and
push
pop
ret
mov
nop
lret
stos
mov
inc
and
add
xor
jmp
pop
push
dec
inc
aaa
sub
push
pop
lret
js
xor
jo
add
cmp
sub
sub
inc
adc
out
ja
mov
and
jmp
push
mov
sbb
mov
pop
xor
pop
inc
cmp
mov
add
pusha
push
and
cmp
lock
fiaddl
sbb
roll
dec
inc
decb
dec
adc
mov
loope
shrl
fs
adc
xchg
push
or
add
add
rcr
and
jo
ret
push
ficoms
enter
sub
or
add
add
rolb
test
pop
cs
dec
fcoml
lods
fadds
lock
mov
mov
sub
loop
sub
mov
movsb
add
sar
imul
jno
inc
push
movb
cwtl
jne
add
je
mov
push
push
mov
les
pop
lcall
cmp
push
loop
mov
cmp
xor
dec
out
inc
in
add
stos
mov
xorl
or
or
cmp
or
add
push
imul
inc
cmp
xchg
es
adc
add
sub
sbb
sbb
adc
cmp
sub
push
fisttpl
sbb
add
push
sub
push
push
or
pandn
rorb
or
pop
and
adc
outsl
push
dec
in
sbb
or
fdivrl
adc
sbb
push
rclb
arpl
imul
dec
movsl
fsubs
xor
int
add
inc
inc
fidivl
dec
xor
push
jnp
mov
pop
roll
movb
sub
out
lock
out
cmpb
jecxz
aam
push
sub
outsl
mov
cmp
jg
inc
jmp
mov
ds
or
lds
jbe
in
and
cmp
imul
fisttpl
jge
aas
sbb
enter
mov
in
sarb
fmuls
sbb
clc
xlat
sub
dec
je
mov
mov
inc
pop
fadds
xor
icebp
xor
shll
inc
jne
push
xor
test
jne
push
adc
cld
and
add
jo
out
or
pop
mov
push
adc
outsl
dec
js
stc
gs
cmp
jge
inc
mov
xor
jae
add
jae
addr16
push
and
mov
popf
and
sbb
scas
add
sub
add
and
stc
xor
aas
sarl
pop
inc
rclb
mov
dec
psubd
push
sbb
pushf
xor
and
or
sti
test
test
jl
js
mov
xchg
ljmp
lcall
loop
push
push
gs
and
ja
mov
sub
adc
dec
mov
test
cltd
add
push
dec
or
pop
lock
push
pop
enter
insb
orl
add
arpl
add
addl
cmp
or
sub
shlb
xor
insb
xchg
lock
ja
pusha
imul
sub
and
lods
mov
pop
imul
inc
mov
test
mov
or
adc
adc
adcl
cmp
mov
mov
in
clc
pop
or
sbb
in
mov
je
xchg
cli
adc
mov
pop
subb
xor
lea
or
out
andl
cmp
out
cmp
jmp
popl
inc
xor
ljmp
out
mov
pop
xor
loopne
push
js
xor
xadd
push
mov
jl
adc
sahf
lock
inc
mov
div
xchg
and
pushl
add
jno
pop
sub
mov
loop
mov
test
pop
push
push
xor
test
movsb
pop
inc
ljmp
push
inc
cmp
ds
sbb
dec
sbb
push
push
push
inc
sbb
out
pusha
ss
insb
enter
push
rcll
push
or
adc
push
les
xor
aad
jp
shld
popf
sub
or
mov
stc
dec
xchg
cmp
cmp
jmp
mov
jne
arpl
pop
mov
add
sbb
aas
cmp
mov
cmpl
sbb
dec
mov
sub
push
pop
out
xchg
dec
out
andl
xlat
sub
pop
pop
pop
aad
or
xor
addb
test
or
cmp
push
sub
int
loopne
push
les
jae
push
jmp
clc
movd
adc
cmpl
movups
lods
cmpsb
jl
femms
push
or
or
into
add
xor
sahf
push
popf
mov
gs
adc
push
sbb
lods
movl
mov
call
shrb
xor
inc
cmp
ret
xchg
adc
inc
xchg
adc
push
push
lea
or
dec
push
push
pop
and
jle
sarl
lret
inc
das
adc
push
test
sbb
xchg
or
aam
or
sbb
sar
insb
xor
xor
inc
jmp
adc
popf
inc
and
leave
lcall
mov
pusha
bound
jo
add
sub
jl
mov
adcl
mov
mov
inc
push
push
nop
imul
mov
test
imul
and
daa
test
jecxz
dec
cmp
mov
mov
cmp
push
push
or
push
mov
cs
mov
hlt
add
sbb
dec
popa
or
inc
jne
sub
adc
pop
ret
orb
dec
shlb
ss
cmp
mov
push
push
hlt
add
test
loop
je
push
inc
stos
pop
and
sbb
sub
mov
adc
adc
jmp
mov
stos
popf
or
xchg
scas
mov
mov
adc
mov
das
cwtl
cmp
jle
sub
cmp
xor
add
decl
push
jmp
dec
push
in
and
sbb
jbe
pushf
add
jl
ret
loopne
out
negl
lock
ret
test
sbb
sbb
mov
sub
insl
xorl
mov
pop
jge
cmp
add
movsb
fstpt
mov
movsb
jne
enter
out
dec
jae
imul
sbb
sub
push
jmp
and
scas
shr
outsb
mov
dec
decb
lods
leave
pop
push
sub
and
cmp
dec
cwtl
in
pop
aaa
es
pop
cs
and
or
pop
stc
sub
cmp
mov
push
movsl
jbe
sub
mov
push
inc
stos
loopne
je
mov
mov
jge
in
mov
cmpsl
mov
pop
sub
inc
inc
cmp
testl
testl
sbb
inc
jmp
sahf
dec
dec
or
cmp
xor
pop
es
repnz
and
or
insb
decl
stc
push
adc
jg
cmc
jecxz
ds
inc
jmp
cmp
and
push
pop
pop
xor
push
div
dec
mov
dec
test
jno
mov
mov
xchg
cmp
ljmp
dec
adc
adc
clc
mov
sbb
xlat
test
cmp
out
fwait
or
mov
add
lods
pop
call
jnp
jle
inc
ret
sub
xor
jne
add
ret
adc
inc
pop
adc
jmp
call
add
mov
je
lock
pushf
imul
mov
mov
push
sarb
add
test
lea
enter
les
lods
mov
out
xchg
inc
movsl
cmpsb
or
jne
mov
addr16
out
mov
and
xchg
jo
inc
imul
jae
lret
sti
mov
push
or
mov
sub
ja
mov
out
inc
jg
or
inc
testl
out
jne
out
or
mov
ljmp
pop
cmp
inc
add
push
scas
addr16
mov
test
add
jbe
pop
push
or
clc
cwtl
xchg
test
push
pushf
fstpt
inc
add
test
mov
loope
in
push
lock
cld
sub
add
dec
inc
imul
add
mov
ja
shlb
sub
in
incl
cmpl
insl
mov
pop
xchg
sbb
or
mov
test
jg
add
sbb
lahf
nop
mov
sub
or
shll
shr
aam
or
shr
sbb
test
or
push
sahf
pop
idivl
or
jg
or
and
mov
mov
movb
je
xchg
and
or
jl
mov
out
jg
insl
fadd
loopne
shr
or
mov
sahf
dec
mov
mov
outsb
mov
fistl
mov
mov
adc
andl
or
shrb
lock
js
xchg
jo
ficoml
pop
sbb
loopne
pop
ljmp
jmp
out
jmp
or
lods
mov
fldenv
and
lds
pushf
mov
mov
mov
loope
jl
dec
hlt
loopne,pn
int3
int3
jmp
xchg
or
cmp
mov
and
outsl
push
dec
into
jmp
lods
jne
imul
and
inc
int
sbb
mov
push
sbb
pop
adc
jne
push
lret
das
sub
test
sbb
repnz
sub
movups
and
hlt
jo
mov
mov
mov
inc
mov
inc
mov
mov
add
out
inc
fldl
inc
add
pop
ds
repz
movsb
std
call
out
pop
or
jo
sub
push
mov
or
add
testb
adc
sbb
mov
movsb
icebp
ss
push
push
idiv
add
xor
sbb
cmp
ficomps
cmp
mov
sbb
int
or
inc
int
pop
test
test
adc
push
cmp
pop
or
add
in
xor
push
mov
aas
jne
add
pop
stos
mov
adc
cld
dec
sbb
dec
sub
popa
in
ret
rolb
or
rcl
repz
jb
push
push
or
push
or
xchg
mov
in
pop
pop
imulb
es
lea
jno
and
mov
loopne
cld
in
or
lea
shlb
fwait
mov
in
jbe
imul
gs
push
push
call
pop
mov
add
insl
mov
inc
mov
mov
xor
mov
psubsb
sbb
xlat
jmp
sar
or
inc
ljmp
mov
pusha
stos
cmp
iret
jmp
sbb
faddl
dec
cs
xor
mov
dec
push
rcrl
adc
mov
loope
mov
add
and
lock
int
dec
xor
push
adcl
std
es
and
jmp
ret
scas
push
xchg
loopne
gs
decb
xor
dec
pop
xchg
mov
mov
push
inc
pop
push
add
in
loopne
cmovp
or
or
mull
sbb
enter
cmp
or
jne
inc
loope
push
lea
call
dec
cmp
leave
sar
mov
xor
aam
aas
or
testb
add
movsb
dec
adc
fstp
call
mov
subl
dec
nopl
xor
cmp
cltd
lods
loop
dec
push
xor
pop
ret
test
ret
insb
pusha
dec
outsl
or
ljmp
mov
and
cmp
pop
pusha
rorl
lcall
push
push
divl
mov
inc
xor
and
xchg
push
sub
cmpsl
mov
jp
and
inc
mov
andb
iret
mov
testl
mov
mov
sub
unpckhps
hlt
mov
inc
or
cmc
andl
push
fcmovb
lea
test
pop
xor
xlat
add
xor
jle
fsubs
in
push
or
sti
sbb
js,pt
inc
call
jmp
push
pop
cmp
lret
dec
inc
outsb
cmp
adc
hlt
in
inc
xor
or
inc
pusha
jns
cmp
pusha
enter
inc
mov
lea
rcll
add
je
dec
or
or
mov
pop
add
lea
mov
and
fstps
jl
mov
int
lods
pop
sbb
test
loopne
out
sbb
mov
inc
mov
out
add
fcoml
xchg
mov
rol
cs
enter
add
pxor
mov
repz
push
jmp
sub
mov
mov
pusha
and
mov
dec
je
rcl
or
sbb
add
fcompl
xor
loope
sbb
jb
fldcw
mov
inc
mov
sbb
inc
dec
xor
imul
mov
mov
shll
dec
std
xchg
lret
ss
loope
enter
xor
jae
subb
mov
cmp
jne
bts
adc
add
mov
push
adcl
adc
aad
gs
xchg
and
pop
lahf
dec
add
loopne
imul
cmp
ret
sub
sub
add
add
add
dec
dec
dec
int
andl
jbe
fs
jl
or
pop
jns
adc
fiadds
into
sub
adc
sbb
mov
pop
pushfw
std
aam
jle
add
test
sub
and
pushf
xchg
inc
and
popa
add
mov
push
mov
push
lea
or
inc
push
add
shlb
test
stos
in
and
mov
push
or
add
lods
mov
push
es
inc
xchg
adcl
in
mov
es
call
mov
add
jmp
pop
pop
mov
pop
mov
movl
stos
and
xchg
aas
push
jae
adc
movsb
mov
adc
ja
xchg
add
lcall
jne
adc
sub
pop
adc
mov
fimuls
shrl
cmp
cmp
je
xor
dec
inc
and
sbb
js
in
cmpsb
or
jmp
and
push
and
push
mov
push
loopne
fdivr
xchg
cmp
pop
adcl
push
mov
add
cmp
mov
ret
call
or
orl
sbb
dec
jecxz
add
xor
add
out
or
cli
adc
add
or
mov
adc
mov
xchg
or
pushw
ss
int3
add
mov
push
inc
mull
add
mov
bound
cltd
push
mov
inc
pop
mov
pop
pushf
push
xchg
and
out
pop
fcompl
pop
mov
loopne
mov
and
cmp
xchg
dec
jae
fstpt
add
inc
andb
loop
sub
test
lea
jmp
xor
rolb
sbb
fdivrs
mov
mov
mov
inc
mov
jmp
lahf
push
test
sub
cmp
jg
insb
pop
jl
jmp
addl
js
pop
fs
add
sbb
or
stos
popa
add
push
push
adc
push
jo
add
add
adc
xchg
aam
sub
mov
pop
adc
inc
or
mov
sub
jl
pop
adc
push
lds
leave
cwtl
pusha
cmp
jno
xlat
and
sub
dec
add
sbb
push
dec
test
lock
lret
xor
outsl
stos
popa
jge
mov
add
add
inc
xor
loopne
push
stos
adc
movsb
push
pop
pop
pop
icebp
fisttps
inc
adc
gs
cmp
push
pushf
imul
sub
mov
push
or
add
sarl
sub
push
bound
add
data16
pop
jmp
push
or
or
adc
idivb
pop
les
and
pop
mov
adc
adc
sbb
or
and
rcrl
jo
cmpsl
testl
jle
fwait
arpl
data16
push
mov
or
scas
cmpl
gs
or
or
or
cwtl
movsl
cwtl
data16
push
jne
push
aas
out
mov
pushl
leave
inc
push
or
enter
or
dec
arpl
inc
mov
xchg
jno
shlb
sub
jmp
push
std
js
ss
jne
push
push
clc
mov
dec
jnp
jne
pop
push
xchg
add
popa
pcmpeqw
loope
loopne
movsb
mov
or
rolb
pop
mov
in
arpl
jo
and
lea
mov
std
lods
pop
adc
lcall
movsl
stos
mov
mov
or
movsb
cmp
cmp
cmpb
or
outsb
outsl
mov
push
sub
imul
dec
or
fcoml
and
cmp
imul
js
mov
imul
outsb
movsl
fadd
or
cmpb
pop
sub
cmp
ror
or
jne
mov
clc
push
or
scas
rcll
or
or
push
xor
jbe
push
mov
or
outsb
dec
xchg
jbe
into
jmp
nop
or
or
xor
pop
cmpl
dec
je
jae
mov
push
mov
mov
mov
ret
or
and
or
loopne
mov
sbb
pop
lds
in
xchg
mov
cwtl
add
adc
sbb
pop
or
mov
loop
pusha
jne,pn
sbb
rol
inc
mov
xor
jo
adc
add
cmp
mov
mov
pop
popf
lcall
ja
jle
push
icebp
or
int3
cmp
pop
jmp
cwtl
les
test
dec
sub
test
aaa
sub
ljmp
cmp
add
orl
loope
jg
loopne
dec
adc
dec
adc
add
cmpl
cs
shlb
dec
sbb
cmpw
add
dec
bound
inc
loop
jno
push
push
sub
pop
push
out
mov
dec
mov
jb
sbb
sub
ljmp
adc
sbb
add
mov
test
lahf
push
push
push
movups
xor
add
or
add
xor
mov
dec
adc
in
mov
or
daa
push
push
ljmp
mov
add
inc
and
imul
cmpsl
mov
jmp
adcl
mov
stos
popa
jmp
test
shlb
ret
neg
push
add
lret
cmc
cmp
mov
clc
call
or
xor
add
push
push
xlat
gs
mov
push
cmpb
cmpsl
cli
rclb
in
movsb
mov
mov
mov
sbbl
mov
notl
push
and
gs
or
stos
inc
cmp
or
xor
sub
clc
or
sub
and
stos
cmpsl
push
fsubrs
mov
jno
push
mov
lock
imulb
or
mov
mov
inc
andb
mov
dec
mov
in
ja
mov
aaa
and
cmp
lahf
daa
pop
rcrb
xchg
cmp
mov
out
sbb
jo
addl
dec
jl
out
rcr
or
in
add
inc
cwtl
pop
popf
add
call
or
adc
xchg
ljmp
and
arpl
stos
or
rcrb
sbb
test
adc
inc
mov
cmp
inc
dec
pop
dec
or
xor
or
mov
and
push
push
addr16
mov
adc
enter
jns
daa
xor
jae
dec
in
and
mov
cmp
add
sub
add
fists
xchg
sbb
push
or
push
xchg
xchg
xchg
xchg
or
adc
outsb
mov
sbb
sbb
dec
dec
dec
dec
sub
xor
pop
add
cmp
inc
and
inc
cmovs
pushf
pushf
push
push
pop
add
daa
pusha
fs
daa
jo
js
idivb
and
sbb
cltd
fs
test
xchg
dec
xchg
cwtl
pushf
fs
dec
mov
and
mov
xchg
dec
enter
xor
sarb
leave
and
loopne
call
in
aam
and
dec
xor
clc
cld
add
cmp
add
add
add
shll
adc
leave
sbb
and
xor
and
sub
xor
and
xor
cmp
leave
adc
inc
gs
dec
fs
imul
xchg
dec
es
pop
pop
pusha
lods
add
je
rcrb
adc
push
adc
cmpsb
dec
mov
and
test
xor
mov
xor
imul
movsb
mov
and
xor
sbb
sbb
and
and
cmp
cmp
mov
xor
inc
rorb
dec
enter
mov
mov
pop
mov
sbb
xchg
adc
xorl
bound
rolb
or
pop
adc
push
mov
xor
lahf
push
or
nop
aam
or
pop
push
outsl
enter
pop
add
fcoms
fsubrp
xorl
lret
and
xchg
add
or
or
and
pop
out
jb
aas
mov
shll
dec
xor
adc
or
inc
outsb
and
shr
add
es
and
cmc
xorl
test
js
or
mov
in
test
adc
push
jae
bound
jo
fcmovbe
aam
insl
insl
loop
mulb
shll
and
or
sub
adc
clc
incb
bound
or
jmp
inc
cmp
outsb
and
mov
and
aaa
out
jae
jecxz
sbb
add
or
cwtl
or
adc
pusha
xchg
lock
or
mov
out
aaa
jge
je
cmp
mov
flds
and
pop
adc
pusha
mov
pusha
loope
pop
or
xor
inc
jecxz
test
fstp
jne
push
movsb
ds
pusha
fldl
cmp
not
xchg
sbb
outsl
mov
ret
setbe
testb
sahf
lret
mov
adc
sti
add
mov
out
test
fistpll
push
dec
cmp
xchg
sub
mov
rclb
shl
mov
or
sub
push
and
and
or
into
adc
testl
mov
add
xor
icebp
lcall
jmp
push
and
or
push
or
arpl
aaa
inc
flds
fstps
jmp
fisttpll
xlat
adc
fsubp
inc
push
hlt
adc
fildl
movsl
jbe
in
pop
sub
jl
push
divl
or
mov
adc
xor
hlt
ds
or
lock
mov
aaa
sbb
and
cmp
add
or
mov
mov
hlt
dec
jmp
sub
pushf
sbb
pop
sub
jmp
sub
push
mov
loopne
fldcw
inc
test
into
adc
call
imulb
cld
sub
mov
rorl
mov
push
nop
mov
inc
mov
mov
and
inc
or
cmp
xchg
jge
ffree
repz
add
push
add
pop
push
push
in
inc
shll
cli
bnd
imul
mov
repnz
dec
push
movsl
jge
test
scas
imul
insl
in
call
jbe
dec
cmp
sbb
nop
loopne
fchs
mov
push
push
pop
ss
nop
pop
jmp
pop
cs
icebp
pushf
nop
adc
pop
scas
sbb
loopne
cmpsb
mov
es
sub
cmp
aam
add
filds
push
add
sbb
and
pop
mov
lret
add
xchg
inc
outsb
inc
lods
mov
adc
loop
shrb
xor
ret
or
aam
cmp
je
or
sbb
sbb
or
mov
cld
sbb
add
hlt
hlt
pop
cltd
and
jmp
sub
pop
or
stos
and
inc
sbb
or
mov
ret
cmp
sbb
pop
fstpl
jp
lahf
mov
cmpb
and
ret
fidivs
lock
add
xor
push
or
fisttpll
mov
or
hlt
mov
pop
xchg
push
sub
cmp
pusha
in
fwait
dec
cmp
lock
mov
add
or
ret
call
jae
fadd
mov
or
sbb
mov
jbe
push
das
adc
outsb
dec
add
int3
mov
pop
pushf
arpl
arpl
out
sbb
mov
xor
nop
mov
or
sbb
jnp
xchg
hlt
and
add
andl
sbb
mov
sbb
dec
lret
into
sbb
mov
xchg
mov
call
clc
xor
sbb
xor
stos
push
fcmovbe
or
mov
jge
adc
or
sbb
rcll
cltd
and
decb
mov
clc
push
and
pop
cmpb
add
or
adc
ret
imul
enter
or
cli
out
fld
fucomp
pop
fldcw
pop
mull
loopne
out
mov
xor
test
outsl
jne
orl
mov
icebp
das
pop
pushf
ficoml
gs
or
shl
pop
and
or
push
or
jmp
loop
push
out
mov
push
sahf
jge
push
pop
je
aad
xor
push
ficoml
nop
cld
es
adc
push
push
push
movsb
imul
push
sub
aam
loope
ljmp
jo
fstsw
movswl
sbb
loop
or
inc
xor
icebp
and
rorb
data16
or
insl
or
and
fsts
dec
cwtl
or
sub
call
test
fcoms
pop
and
sbb
adc
pop
mov
nop
call
je
jo
movsb
fldpi
xor
loopne
lcall
add
mov
je
sbb
sbbb
shll
xsaveopt
dec
sbb
mov
mov
ret
loope
inc
popl
or
movsl
pop
mov
and
jno
iret
test
pusha
dec
rclb
clc
or
add
pop
jnp
jo
sub
icebp
xor
js
inc
cmp
cmp
subl
mov
cmpsb
es
mov
xor
inc
add
rcrb
add
mov
and
add
test
cld
sub
inc
mov
pushf
xlat
int3
pop
inc
add
in
inc
notl
add
adc
fiadds
imul
subl
lret
je
test
add
mov
sub
adc
jbe
sbb
insb
xor
js
adc
aas
mov
or
push
or
jle
or
or
add
loope
push
or
or
int
add
dec
test
push
rcrb
and
insl
pop
inc
or
push
mov
mov
pushf
pop
dec
imul
dec
push
or
sub
or
outsb
add
mov
aas
dec
push
mov
loope
adc
daa
testb
mov
loopne
test
jbe
jl
mov
rcr
jne
xchg
lock
stos
jp
pop
pop
dec
insb
jmp
sub
cli
clc
and
sbb
mov
inc
and
lret
pop
add
xor
scas
cmp
add
inc
lea
pop
mov
lret
inc
movb
rolb
ljmp
not
test
andps
or
pop
repz
outsb
inc
pop
pop
and
mov
out
sbb
mov
inc
adc
iret
and
insl
push
jbe,pt
dec
mov
add
push
outsb
int
or
or
cmp
sbb
dec
cmp
mov
loopne
insb
jmp
sub
push
orl
mov
xchg
pusha
add
sahf
jns
shrb
and
sarb
mov
mov
add
or
add
add
xor
mov
or
adc
jge
inc
stos
inc
es
movsb
sar
popa
or
adc
dec
xor
cmp
mov
cmp
ss
loopne
mov
daa
push
iret
rcl
sub
sub
pop
pop
or
bound
mov
jno
push
shlb
push
ds
push
or
test
xor
out
mov
xchg
test
push
mov
cmpsb
pop
in
sub
js
push
and
sbb
mov
mov
dec
jns
mov
pop
dec
lea
or
ret
movsb
push
rcr
inc
lods
and
sbb
test
jmp
push
lods
sub
dec
pusha
push
aas
xor
dec
or
inc
rcrl
dec
xor
push
aam
add
cli
mov
mov
jb
pop
pop
push
push
jb
mov
repnz
incb
mov
xor
cmp
and
scas
shll
shl
hlt
push
sub
lock
aas
mov
mov
mov
mov
and
mov
cmp
dec
push
or
ss
test
inc
add
inc
popa
sbb
push
push
mov
roll
pcmpeqw
daa
andl
rcll
out
je
add
in
lea
push
jecxz
mov
and
mov
and
lea
dec
and
inc
xchg
inc
sti
rorl
jecxz
enter
pop
in
dec
or
fiaddl
bound
xchg
xchg
ficoms
lret
jne
fcoml
mov
jae
jns
or
mov
push
cmp
xchg
test
adc
adc
sbbb
mov
push
mov
in
dec
je
pop
and
add
sbb
adc
dec
jp
addr16
lret
loopne
xor
and
sub
add
jbe
jne
cmp
enter
jb
mov
xor
mov
sub
inc
mov
mov
rcr
or
pop
xor
mov
sub
pop
sti
scas
push
xchg
cmp
insb
inc
cs
jg
xchg
or
ss
cmp
je
or
decl
out
mov
dec
cmpb
je
mov
cmp
pop
jne
dec
mov
shll
inc
divb
xchg
ss
and
fcompl
filds
cltd
arpl
add
xchg
mov
outsb
push
inc
jmp
inc
adc
mov
add
adc
or
movaps
push
xor
bnd
mov
push
add
adc
les
sub
add
adc
xchg
icebp
mov
fadds
mov
shrb
xlat
rcrl
add
fdivs
or
jle
aad
sub
inc
pop
ret
sahf
dec
loopne
push
pop
sbb
rorb
sub
dec
xor
popa
lock
les
sub
mov
popf
rol
outsl
xor
cmpl
mov
hlt
sbb
push
push
add
jle
push
cmp
pushf
cld
mov
adc
or
sbb
xchg
add
lods
ja
add
fiadds
daa
add
and
cld
loopne
icebp
push
jmp
es
je
loop
inc
sub
das
pop
insb
loopne
mov
fadd
inc
add
push
xor
mov
xor
or
add
xor
jp
testb
pop
lock
fimull
imul
adc
sub
loope
cmp
mov
adc
dec
das
ficompl
pusha
inc
lahf
shlb
fs
and
jg
ret
jmp
xchg
jmp
push
or
add
adc
bound
and
push
inc
or
adc
shlb
ret
inc
cmp
pop
push
add
sbb
shll
push
jmp
addb
lods
jne
xor
add
data16
push
fadd
pushf
insl
shrb
jge
mov
add
jl
nop
stos
inc
fcoml
lret
shl
inc
and
lea
xchg
xor
mov
fdivs
call
dec
mov
enter
sbb
xchg
sahf
dec
jl
inc
mov
cld
push
and
dec
out
rorb
lret
andl
imul
inc
lea
loope
or
xor
ret
nop
js
mov
jmpw
xor
cmpb
jbe
sub
push
inc
xor
add
mov
pop
sbb
js
inc
popf
push
dec
sub
leave
and
add
insb
lahf
mov
push
xchg
scas
and
adc
enter
inc
inc
mov
fistpl
fstpt
test
jg
ret
mov
or
jne
bound
xor
aam
es
icebp
sub
cli
in
call
xor
mov
mov
sbbb
je
fisubs
or
mov
xor
shlb
mov
push
hlt
nop
or
call
dec
scas
and
pop
xchg
and
inc
xor
pushf
ret
inc
sbb
xor
add
dec
jge
daa
inc
fs
cld
add
add
cmpsb
clc
hlt
shrd
sbb
fs
cmp
jge
sbb
shlb
xor
xor
inc
es
cmc
pop
and
xor
out
and
mov
cmp
cmp
or
rorl
pop
rcpps
insb
xor
add
fcmovb
push
nop
lcall
nop
sbb
dec
pop
in
mov
imul
or
js
jg
jb
xor
out
xor
mov
vaddsd
shl
fimull
jl
push
push
shll
pusha
cmpsb
outsl
dec
xchg
inc
cmp
mov
push
lock
pop
push
or
sarb
add
mov
jns
pop
jnp
inc
dec
pop
or
or
dec
and
or
cmp
cmp
add
in
add
lods
ja
dec
frstor
es
hlt
nop
mov
fwait
adc
adc
sbb
movw
add
add
inc
rcrl
jle
in
push
sbb
push
push
jmp
lock
and
sahf
and
bound
adc
xor
neg
call
inc
or
or
ret
loopne
push
hlt
aaa
push
lods
lds
js
xor
inc
mov
push
mov
push
add
add
xchg
mov
repnz
je
loopne
roll
and
add
lret
cmpsl
jl
into
roll
or
insb
cmp
sbb
mov
or
mov
sub
clc
sbbb
xchg
or
cmp
nop
dec
adcl
xchg
pop
aam
and
or
test
or
in
push
push
orl
dec
out
mov
cld
jl
loopne
jge
adcb
popa
push
mov
inc
push
add
add
sub
popf
jmp
xor
lea
sahf
clc
gs
push
xor
or
pop
data16
daa
aaa
in
add
movb
sti
lds
inc
je
dec
ss
xor
ret
add
dec
jmp
mov
sub
add
int
inc
aaa
je
sbb
or
pop
inc
hlt
jb
popa
cmp
or
inc
sub
rcrl
xorl
sbb
arpl
add
xchg
repnz
mov
inc
xchg
rcll
push
aaa
lock
test
and
imul
sbb
pop
fldenv
push
adc
cmp
adc
mov
sti
and
testl
pusha
push
xchg
sarl
push
fwait
lea
mov
jmp
jbe
or
cs
push
into
mov
add
add
loopne
cmp
notl
add
mov
inc
mov
test
or
and
mov
sbb
push
and
xlat
aam
jecxz
sti
adc
lea
xchg
cmc
cmp
loope
adc
daa
lods
sub
dec
inc
add
mov
push
ljmp
sub
push
push
and
leave
test
int3
inc
shll
std
lcall
push
add
and
cltd
nop
cli
inc
data16
mov
xchg
mov
cmp
fistpl
or
cmp
dec
test
or
mov
ljmp
mov
inc
mov
lock
xchg
adc
test
xor
rcr
mov
cmpl
rcll
push
or
push
or
mov
push
mov
sbb
or
mov
cld
ja
inc
adc
imul
jge
rcrb
sar
pop
add
adc
or
enter
mov
jb
dec
and
test
xor
sub
and
out
cli
mov
lret
je
dec
je
dec
push
push
jmp
add
mov
or
jmp
cmpb
mov
or
lcall
rclb
fistps
and
insl
lods
sub
jp
icebp
pop
ret
shll
add
sbb
push
jo
sub
int
adc
push
sub
cs
add
es
pop
mov
adc
das
jne
adc
fistpl
cmp
je
mov
cmp
mov
pusha
and
or
roll
test
lahf
and
add
pop
mov
adc
xor
lret
adc
fiaddl
into
test
or
xor
bound
jnp
dec
inc
sarb
xor
pop
sbb
lods
imul
sub
adc
xchg
sbb
loopne
cwtl
sbb
or
addb
call
add
or
or
or
les
movsl
xchg
adc
push
clc
shr
add
loop
or
or
cmp
leave
shr
or
mov
icebp
in
pop
jae
push
adc
test
and
add
mov
fwait
mov
add
add
fs
mov
xchg
jp
push
add
fidivrl
dec
inc
sbbl
inc
jl
in
sbb
cmp
movsb
leave
les
or
dec
pop
pop
adc
scas
sbb
and
aam
push
out
dec
fidivrs
ja
mov
adc
xor
repnz
into
clc
or
xor
mov
lea
add
xchg
push
pushfw
stc
test
fxch
push
insl
mov
nop
sub
sub
decl
mov
cmp
sub
and
xchg
xor
addr16
push
fiaddl
xlat
lock
cli
ficomps
adc
xchg
xchg
xor
push
insb
adc
xor
mov
mov
fsubrl
add
lret
dec
sti
xor
dec
push
call
incl
insl
mov
xchg
or
mov
pop
call
data16
sub
mov
scas
sbb
outsb
cmp
std
fs
dec
sub
loope
xor
bound
sbb
add
je
repnz
jp
cltd
bound
fwait
mov
inc
enter
outsl
stos
pop
loop
dec
inc
aaa
xchg
inc
push
xor
adc
pop
add
test
xchg
jne
inc
push
sbb
dec
leave
inc
jbe
decl
xor
js
aas
xorl
push
jns
and
gs
add
add
test
rclb
and
bound
mov
mov
jo
mov
stos
jb
pusha
sbbb
loope
or
mov
subl
or
rcrl
pop
mov
movq
clc
add
push
outsl
inc
mov
or
cmp
clc
and
xor
push
stos
sbb
mov
test
clc
sbb
inc
mov
xchg
mov
scas
mov
pop
out
add
aam
sbb
add
pop
je
add
bound
ret
mov
xor
str
cs
js
mov
push
lds
hlt
mov
mov
pop
inc
jno
mov
sub
push
add
sub
sarl
call
inc
ds
push
jbe
fcomps
add
call
ss
rcrl
nop
into
xor
and
add
push
int
sbb
cltd
dec
sarl
lock
stos
rol
call
pop
in
mov
cmp
jle
inc
rolb
jmp
dec
loope
sbb
aaa
adc
dec
cmpsb
sbb
mov
es
mov
jge
cmpsb
jmp
adc
cmp
cmpb
je
insl
pop
subb
push
incl
adc
push
pusha
push
fstl
and
or
push
mov
push
insb
jmp
add
push
sub
ficoml
push
xchg
fidivl
orb
and
aaa
jne
cmpsb
cmp
lret
sub
jmp
enter
std
jne
cmp
jne
gs
negb
jmp
dec
add
iret
add
jbe
into
adc
rorb
xor
cltd
or
adc
out
roll
leave
add
jl
js
je
mov
iret
adc
sbb
xorb
movsb
and
mov
jge
or
popl
xchg
pop
sahf
jne
movsw
and
int
or
push
mov
add
add
lahf
and
dec
or
adc
nop
add
clc
or
or
lea
mov
push
mov
lcall
jmp
dec
jge
inc
inc
push
neg
neg
sbb
jns
add
sub
inc
addl
mov
addl
sbb
and
push
adc
rcr
mov
xor
shl
sbb
adc
push
divb
adc
sbb
or
dec
jns
mov
dec
jne
pop
pop
pop
fildl
jp
or
adc
mov
rcl
ljmp
shr
add
test
cmpsl
jg
rclb
jmp
enter
andl
cld
je
outsb
xor
push
repz
add
addr16
dec
or
aaa
icebp
inc
into
add
push
pop
lods
jae
aam
dec
adc
adc
dec
lahf
push
enter
incl
jo
mov
je
push
xor
sarl
jbe
cli
sbbb
xor
xchg
push
xchg
pop
dec
and
push
daa
aam
or
push
rcrb
inc
sub
outsb
cmp
add
cmp
js
jg
sarb
mov
or
cmp
jo
pop
gs
or
push
add
cmp
dec
fst
jb
and
inc
ss
mov
aaa
dec
sub
pop
rolb
sub
inc
jns
push
out
cltd
movsb
cmp
cld
mov
enter
fcmove
jne
pop
cmp
inc
jmp
sub
add
rcr
popf
push
inc
mov
mov
sbb
or
or
or
imul
sbb
or
mov
je
adc
fdivrp
mov
cmp
jb
cmp
ja
add
cmp
adc
notb
loopne
or
shll
leave
adc
pop
adc
add
jl
les
je
adc
mov
mov
shll
push
push
and
push
mov
sub
aam
fcmovu
mov
sti
aas
cmpsb
mov
mov
push
movb
jmp
or
inc
sbb
aaa
scas
dec
shrb
pop
sub
sub
mov
or
popf
inc
push
inc
add
xor
add
mov
xchg
and
js
xor
pop
mov
ljmp
mov
push
sub
push
mov
jbe
inc
jb
mov
fdivrl
dec
push
andb
sbb
cmp
into
push
add
add
add
cmp
add
fwait
mov
xchg
cmpsb
push
imul
jmp
lcall
inc
imul
pop
pop
xchg
lea
sar
dec
ja
ja
dec
movswl
xchg
inc
stos
cltd
lods
fildl
es
dec
mov
lods
mul
mov
cmp
mov
je
inc
call
rcrl
adc
adc
jmp
sub
addr16
xor
and
mov
push
loope
stos
or
jb
jl
pop
mov
decl
jle
repnz
mov
adc
adc
mov
mov
mov
and
scas
std
and
lea
inc
xor
lods
push
cmpsl
add
into
sahf
cmpb
mov
js
cmp
idivl
hlt
xchg
icebp
iret
leave
out
mov
inc
call
jnp
ljmp
loope
rorl
add
and
lea
rolb
loop,pn
sub
sahf
inc
mov
push
lea
xor
sub
pushf
or
outsb
stos
fcoml
imul
add
movsb
pop
sahf
push
pop
xor
cmp
lods
shll
inc
insl
pusha
shrw
cmpsl
insb
xchg
mov
mov
pop
push
lcall
and
cmpsl
jne
rorb
addl
decl
popa
add
rolb
rol
nop
popf
loope
pop
or
and
rorb
lods
sti
sub
sbb
push
lret
rcrl
inc
mov
js
mov
jle
int3
jg
neg
shrl
loope
shr
or
mov
cltd
rcrl
dec
mov
jp
mov
lock
dec
and
jnp
repnz
jb
div
add
inc
pop
sahf
cmpsl
cli
div
rcrl
pop
js
jbe
mov
lcall
fcmovb
test
pop
test
add
or
cli
adc
and
sub
scas
mov
dec
aas
sbb
cmp
mov
push
fidivl
aad
mov
fldenv
enter
jg
or
lret
enter
rcrl
mov
in
sbb
push
sbb
dec
scas
inc
repnz
push
push
sbb
loop
out
inc
arpl
sahf
jge
out
mov
add
enter
imul
fwait
sbb
aam
daa
adc
mov
push
cli
or
jp
jae
dec
mov
shlb
fdivrs
aam
xor
jbe
dec
test
xchg
jge
adc
push
mov
ret
add
mov
adc
dec
xor
fmull
or
sub
add
add
mov
add
add
insl
test
sub
int3
jg
add
out
add
xchg
add
add
inc
adc
xor
adc
jg
or
xor
enter
lock
inc
mov
stc
jge
add
mov
nop
mov
movsb
jmp
add
pop
add
jne
jae
xchg
pop
fnsetpm(287
loopne
sub
and
pusha
mov
test
add
sbb
sub
xor
insb
sbb
div
mov
adc
inc
add
inc
mov
stos
ljmp
add
pop
outsb
call
xchg
sub
mov
mov
mov
and
rcrb
jb
cli
pop
inc
sarl
fsubrl
fdivs
mov
and
imul
mov
imul
cs
dec
loopnew
fmuls
leave
outsb
pusha
lea
push
and
mov
push
in
out
add
neg
movsl
out
jbe
in
pop
sti
add
lock
sar
sub
ja
into
inc
les
enter
xor
push
sbb
rclb
jbe
movsb
clc
lock
inc
dec
enter
fnsave
mov
sahf
mov
and
dec
int3
push
add
test
call
add
xor
add
add
sub
or
into
or
mov
inc
ljmp
jmp
mov
rcrb
jmp
cmp
jge
or
lahf
sub
cmpb
or
add
dec
cmp
imul
inc
dec
add
add
fadds
inc
inc
mov
call
ret
jp
jne
dec
sarb
or
adc
cmp
in
out
mov
mov
lret
mov
add
push
mov
nop
adc
test
mov
mov
mov
or
cmpsl
mov
dec
adc
and
ret
lcall
add
push
mov
mull
or
push
push
pop
rorb
jne
or
hlt
mov
or
add
rcrl
xchg
add
pop
jne
or
push
pop
scas
je,pt
sbb
ret
mov
cld
mov
ret
or
movsl
add
xchg
adc
or
pop
and
add
test
fistpl
mov
mov
iret
xchg
xchg
lret
lret
into
pusha
inc
cli
xorl
and
pop
pop
fidivl
pop
cwtl
cli
mov
ret
xchg
mov
loopne
sahf
inc
ret
or
mov
sbb
loopne
add
push
rolb
imul
or
or
jo
dec
push
add
add
push
gs
je
das
push
mov
jae
mov
pop
or
pop
add
insl
add
adc
cmp
jne
and
mov
loope
test
add
es
out
and
push
cmpb
cmc
or
ret
imul
jns
inc
push
jo
loop
clc
mov
mov
test
sbb
shll
push
scas
orl
mov
inc
subl
add
movb
daa
mov
loopne
mov
rorb
xchg
lock
loopne
sbb
repnz
test
adc
int
add
or
adc
into
mov
xchg
into
mov
mov
sbb
and
sbb
leave
repz
inc
jg
into
into
dec
inc
or
adc
sarb
push
pop
loopne
ficoms
pop
or
cwtl
insl
test
or
sbb
stos
push
jmp
and
and
push
fs
mov
pushf
hlt
add
leave
sti
cmp
out
adc
push
into
enter
movsb
and
mov
into
mov
and
mov
jp,pn
and
cmpsb
leave
adc
sub
lock
roll
aad
mov
cmpsl
fsub
movsb
lret
ljmp
mov
out
adc
cmp
pop
mov
add
loop
cmpsl
cmp
loopne
mov
lahf
xchg
mov
or
enter
xor
scas
sub
sub
push
lock
scas
outsb
pusha
outsl
adc
rcrl
in
ret
jl
add
testb
add
je
jnp
sbb
cs
add
test
jle
rclb
sbb
push
nop
insb
jno
aaa
xchg
clc
das
sbb
je
dec
mov
mov
jb
outsb
cmp
je
mov
or
mov
repnz
pop
adc
jg
or
or
cmp
jbe
dec
sbb
cmp
sub
jmp
push
mov
movsl
sbb
sub
fisubrl
push
lods
add
push
leave
mov
mov
mov
ret
mov
into
das
add
stos
les
and
in
and
inc
popa
test
dec
aam
add
scas
mov
fcompl
adc
loopne
jp
or
cmp
add
scas
pushl
mov
and
push
push
mov
push
mov
aam
movsb
mov
cltd
fsubs
fmul
orb
or
pop
cmpl
ret
sahf
mov
lret
xor
jb
pop
pushf
push
rclb
cmpb
or
aam
loope
movsl
ljmp
insb
or
fisubrs
sub
popf
inc
push
aaa
sbb
dec
js
add
mov
movsl
mov
or
pop
cmp
test
stos
add
popa
in
sub
mov
clc
xchg
pop
aaa
test
cmp
lock
pop
stos
sahf
mov
cs
mov
les
bound
dec
sub
adc
fwait
in
in
fsubp
adc
xchg
mov
loope
aaa
ljmp
lods
xchg
push
pop
mov
add
call
xor
push
ret
or
mov
push
jge
pushf
inc
push
dec
adc
inc
cmp
pop
test
adc
or
mov
in
jge
cmp
adc
icebp
mov
dec
loope
gs
sbb
popa
in
je
in
push
push
add
clc
cli
sbb
add
jg
mov
jp
fadd
js
movsb
xchg
sti
jo
mov
addl
pop
mov
push
lods
dec
loop
rol
xor
addr16
xchg
enter
insl
cmpsl
mov
add
loopne
push
pop
nop
out
push
out
mov
test
cmpsb
mov
push
jle
push
jmp
dec
fs
movsb
fisttps
fucomp
add
jp
cmp
jmp
int
subl
push
js
push
adc
add
push
sbb
adc
xchg
aam
loopne
sbb
inc
insl
push
test
pushf
iret
pop
cmp
push
cmp
push
mov
sub
add
loop
sub
sbb
add
push
es
dec
xor
shl
decl
jno
lods
push
jg
scas
sbb
or
sbb
out
btc
aas
pop
cmp
pop
mov
xchg
add
push
iret
imul
pop
mov
cs
inc
and
test
inc
fs
and
repnz
loop
cmp
pop
inc
push
sbb
mov
cmpsb
js
pop
syscall
push
or
sub
fcomps
xchg
gs
jmp
lods
loope
mov
cld
ret
add
in
pop
dec
pop
js
les
invd
loope
nop
sahf
test
push
sub
and
movsl
loopne
call
cmp
and
jmp
loopne
pop
mov
sbb
pop
clc
addr16
xor
outsb
pop
rorb
dec
in
push
push
xlat
mov
inc
jle
mov
test
push
jmp
inc
adc
popf
mov
push
xor
add
clc
cltd
mov
push
add
or
jnp
mov
sar
xor
sbb
dec
pop
push
inc
sub
pop
and
mov
and
pop
mov
adc
xchg
pop
inc
sub
rol
push
sarl
stos
aas
test
ret
cmpsl
or
add
mov
es
sub
sahf
xor
shlb
insb
add
jecxz
shrb
and
adc
test
dec
or
cltd
push
or
add
push
inc
rcrl
test
pusha
mov
lods
push
mov
sbb
push
stos
test
int
add
shlb
ds
jmp
mov
sub
pop
jecxz
sbb
mov
push
sub
or
insl
cld
mov
loopne
movsl
jnp
rcrl
xor
and
andl
jo
jo
mov
roll
pusha
imul
inc
add
jmp
stos
sub
cld
mov
inc
or
or
adc
add
pop
or
jmp
in
mov
cmp
arpl
adc
scas
sub
fstps
adc
mov
inc
das
cmp
and
sbbb
pop
adc
pusha
mov
push
mov
xchg
mov
mov
xchg
sahf
adc
in
sub
sbb
mov
call
or
cltd
push
mov
aas
push
sbb
jo
popf
inc
push
xchg
xchg
xchg
rolb
sbb
pop
addb
add
aam
pusha
loopne
dec
enter
bound
push
popa
sub
mov
xor
subb
push
mov
or
xchg
shr
std
data16
xor
inc
and
push
and
nop
insb
jmp
push
pop
loope
pop
mov
adc
imul
xor
stos
pusha
jne
pop
sub
xor
or
popa
xor
sub
push
arpl
imul
fidivrl
flds
ja
mov
jo
fsubrp
sub
add
inc
imul
add
jb
xchg
jge
cmp
sbb
loopne
les
jg
sub
inc
mov
sbb
cmp
ja
jbe
inc
pusha
or
jge
das
push
aaa
pop
in
xlat
cwtl
xchg
lret
pushf
xchg
pop
add
mov
pop
sbbl
push
call
jp
repnz
test
jg
adc
in
ds
shl
lcall
xchg
icebp
imul
shll
inc
jmp
mov
cmpl
lock
mov
fadds
add
jbe
mov
mov
lret
push
cwtl
inc
clc
rcrb
adc
in
ljmp
and
jmp
adcb
inc
lea
subb
stos
inc
or
push
outsb
sub
or
fs
cmpsl
and
pop
fs
int
sub
test
or
xchg
mov
dec
xlat
sub
cld
push
inc
inc
loopne
pop
cmp
cmp
cmp
mov
data16
jmp
mov
mov
sbb
cmpsb
mov
hlt
xor
adc
jg
mov
push
cld
jae
push
cmpsb
xchg
or
imul
cmp
bound
mov
jp
ja
ret
inc
xor
mov
mov
dec
testl
imull
and
xchg
mov
in
sbb
es
cltd
and
jmp
testl
ret
or
inc
loop
sub
mov
ret
arpl
cmpsb
loopne
test
popf
ds
movsl
mov
adc
and
and
adc
inc
sbb
push
mov
test
lds
std
data16
rcll
sbb
sub
mov
mov
push
add
sbb
test
pusha
inc
stos
bound
mov
adc
or
popf
xchg
add
js
sub
addb
push
add
add
push
pop
cmp
stc
inc
dec
sbb
cmp
loop
es
sbb
sbb
lcall
mov
loopne
test
push
in
push
sbb
fistl
push
mov
push
or
pop
jg
cli
mov
sub
jmp
pop
jl
or
mov
repnz
mov
xchg
addl
rolb
mov
loopne
and
add
sbb
test
sbb
int3
add
pop
stos
test
jp
les
sahf
sbb
scas
mov
mov
shl
aaa
loope
fsubs
insl
cmp
pop
inc
rclb
js
test
push
lods
push
xchg
sbb
jmp
loope
mov
and
cltd
ret
cmpl
dec
cmpsb
pop
adc
cmp
jae
inc
mov
lret
cmp
adc
cmp
shlb
or
out
mov
xor
cmp
insb
arpl
hlt
add
mov
jmp
pop
pop
push
xor
nop
inc
outsb
fadds
jae
push
pop
outsb
pop
mov
shl
movsl
push
inc
cmpl
sub
cmp
femms
pop
push
dec
ret
movsl
and
out
rcrb
sbb
lods
lock
inc
scas
inc
fisttpl
sub
data16
and
fcomps
or
xlat
inc
in
jmp
inc
dec
add
adc
or
push
test
mov
dec
fiaddl
or
xchg
addb
shrb
ja
clc
add
fnsave
sbb
push
add
mov
sub
and
adc
insb
inc
data16
push
xorb
cmp
test
je
cmp
aam
adc
lods
fnstenv
push
xchg
and
lds
cmpsl
test
cmp
or
cltd
mov
xchg
je
mov
cltd
neg
add
cmp
movsl
xor
arpl
add
inc
jb
pop
mov
push
ss
ss
add
jno
push
popa
sbb
std
repnz
sar
sbb
rolb
push
adc
and
cmp
aas
xor
xor
dec
sbbb
icebp
jne
push
mov
jo
fcoms
jmp
xor
pop
add
cmp
add
pop
je
adcl
push
xchg
lret
hlt
or
push
sub
mov
std
pushl
lds
enter
or
inc
mov
icebp
mov
cli
arpl
mov
and
add
sbb
stos
add
xlat
xchg
jle
in
xchg
orb
lea
lahf
lock
or
inc
aam
or
je
inc
movsb
add
insb
inc
mov
rolb
pusha
hlt
push
rorb
cli
push
jb
bound
mov
cs
mov
loopne
jl
mov
adc
fwait
orl
cmp
cwtl
sub
add
and
rcrl
into
sbb
pop
and
mov
jb
addl
pop
sbb
or
adc
and
sub
jle
stos
insl
inc
push
jl
enter
xor
cmp
ret
sub
ljmp
sub
scas
xor
mov
insl
cltd
das
or
add
adc
add
mov
ror
enter
pop
jecxz
rorl
stc
jbe
sbb
mov
es
add
add
and
or
mov
push
mov
jnp
mov
mov
mov
mov
outsb
aam
lods
lahf
ss
adc
jle
lahf
jbe
xchg
les
sub
es
data16
adc
sub
sbb
xor
jmp
js
or
and
jg
dec
inc
in
jg
add
mov
add
adc
imul
inc
pop
add
repz
test
mov
or
negb
dec
hlt
adc
jnp
pop
jle
out
call
lea
add
in
clc
and
lods
mov
and
sbb
pop
add
push
jge
call
sbb
adc
orl
jg
jmp
adc
lods
pusha
add
mov
and
es
or
adc
cmp
loopne
push
popf
out
dec
fadds
cmpsl
push
jnp
setle
gs
lret
pop
pushf
and
mov
jle
push
jae
scas
addb
or
push
mov
push
inc
or
lock
inc
nop
gs
sub
stos
add
mov
inc
lret
pop
xchg
sub
sti
imul
loop
insb
and
lcall
add
sub
fidivrl
sbb
cwtl
arpl
pop
mov
pop
clc
aaa
enter
je
cmp
adc
cmp
jb
ret
iret
mov
testb
out
inc
push
rcrb
add
sub
pop
mov
jnp
fmuls
jmp
inc
sbbl
je
cmp
jo
inc
aad
jns
jb
cmp
jbe
clc
adc
js
push
push
or
outsb
cmpsb
lock
in
push
rcll
xor
rcl
call
and
ljmp
shrb
cmc
and
or
push
mov
push
je
mov
add
fidivrl
shlb
pop
es
sbb
sahf
test
imul
pop
lret
imul
mov
pop
sti
subb
push
xchg
mov
mov
xlat
in
push
mov
sbb
sub
add
add
fstl
hlt
lods
arpl
aad
cli
mov
sbb
pop
shll
and
inc
stc
aas
add
adc
add
add
aas
xchg
bnd
jne
add
xchg
sbb
in
add
and
aas
xor
pop
enter
fisubrl
aaa
pusha
xor
adc
mov
cmp
adc
push
dec
shlb
mov
add
lcall
andb
je
pop
and
fld
fnstenv
fists
fildll
mov
dec
lock
jbe
pop
idivb
jmp
cwtl
mov
xor
push
inc
rolb
popa
loop
jmp
cmp
enter
fidivrl
adc
ret
fstps
int3
adcb
inc
pop
or
mov
and
in
pusha
xchg
inc
adc
xchg
mov
xchg
nop
mov
mov
mov
loope
clc
cmp
pusha
leave
xor
xchg
xor
jne
ret
jg
or
add
fcompl
adc
addr16
or
insb
mov
dec
sarl
xchg
lock
pop
lock
insb
push
les
nop
sub
das
nop
mov
jo
add
xchg
or
adc
mov
sbb
or
dec
xchg
mov
dec
jnp
xchg
call
dec
push
cltd
fmuls
jne
shlb
sbb
bound
cld
fmuls
fs
int3
pusha
cld
xchg
cld
push
cmp
push
jne
add
fcmovb
sub
mov
sub
int3
push
ljmp
popa
in
adc
add
pop
setne
or
dec
xchg
mov
je
roll
xchg
push
jae
rcrl
enter
add
inc
lahf
iret
inc
push
jb
xor
dec
in
or
enter
loopne
adc
ljmp
jge
or
lock
jp
mov
ret
jnp
adc
add
push
sbb
mov
dec
lock
insb
adc
pop
in
or
xchg
cwtl
repnz
stos
mov
clc
adc
ret
fsubr
inc
in
bound
dec
pop
mov
call
add
adc
xchg
adc
rorl
inc
push
js
or
sub
cli
xor
lods
jbe
fcomps
xor
popa
out
or
sbb
inc
fadds
cld
xor
inc
cwtl
inc
push
movsb
call
in
fadds
mov
int3
movsb
lcall
js
add
mov
movsl
cmp
pop
enter
pop
cmp
jg
rorl
mov
call
cmp
nop
adc
les
xchg
jbe
test
and
rclb
stos
in
jb
lcall
stos
push
ret
jb
cmc
inc
adc
xor
adc
sbb
mov
pusha
fs
dec
es
push
cltd
fs
jl
mov
addl
adc
jo
xor
fstpt
lea
xchg
out
mov
sub
adc
mov
xchg
shlb
roll
popf
mov
push
adc
icebp
jmp
xor
push
lods
xchg
fxch
sahf
mov
sbb
xchg
inc
cli
sub
ja
and
mov
xor
pop
shll
add
sti
push
and
jl
push
push
fcmovnb
add
jle
cmp
mov
cwtl
add
les
cmp
jbe
clc
add
xor
sub
and
or
int3
orb
icebp
outsb
inc
sbb
cmpb
enter
add
sbb
aam
push
jo
insb
adc
xchg
in
sbb
or
jge
sub
fidivl
insl
mov
popf
lock
lea
out
scas
or
sub
mov
sbb
orl
mov
in
sbb
jp
and
adc
dec
or
mov
fs
sbb
inc
cmpsb
in
sub
in
sbb
and
dec
rorb
inc
jbe
fsubrl
jle
jne
jne
test
in
push
jne
xlat
sbb
cltd
imul
fsubr
aam
and
mov
sub
inc
and
dec
mov
clc
pop
in
adc
adc
add
sbb
dec
push
andb
ljmp
in
jnp
push
pop
push
cmp
and
imul
je
fadds
imul
roll
cmpsb
push
xchg
fisttps
pusha
jp
push
incl
adc
ret
fists
pop
cmpsl
push
call
jl
lahf
inc
test
movsb
fs
pop
xchg
adc
push
es
cmp
dec
pop
dec
fsubl
aas
pop
add
mov
push
sub
mov
and
dec
fs
hlt
mov
or
or
clc
lods
add
mov
cwtl
adc
push
jno
mov
jne
jg
int3
and
and
popf
jge
cmpsl
ss
popf
push
and
dec
adc
popa
mov
xchg
add
lods
add
stos
and
sbb
in
add
loopne
push
adc
adc
aad
and
or
mov
sbb
adc
insb
and
and
loopne
insb
mov
or
in
or
dec
jb
or
add
and
sub
dec
push
ljmp
pop
dec
pop
sub
out
lea
test
fisubrs
sbb
fiaddl
mov
push
je
fdivr
add
mov
pop
shll
or
test
stos
push
jb
push
pusha
and
xlat
faddl
dec
mov
jns
movsbl
xlat
and
clc
inc
mov
ret
test
jns
pop
fcompl
jbe
pusha
add
cmp
pop
cmp
and
adc
in
pop
shll
fadds
add
sbb
fcomp
aam
fs
es
fmull
inc
cmpsb
fmuls
das
faddl
or
jns
sti
call
sub
es
aam
fs
inc
fcom
sub
movsb
mov
xchg
sbb
inc
mov
or
jl
sbb
mov
cwtl
je
sti
daa
jnp
ret
fsubrl
scas
fwait
sbb
leave
sbbb
sub
movsl
test
sti
adc
jbe
mov
loop
pop
or
movsl
aam
xchg
push
insb
sub
xor
sbb
dec
or
or
pop
jb
and
or
pop
leave
and
cmp
jo
loopne
enter
jb
xor
or
outsb
push
adc
add
and
test
cmp
sub
or
or
sub
or
mov
adc
insb
int
inc
cwtl
and
cwtl
adc
sub
nop
test
testb
adc
push
ror
xor
aaa
adc
imul
mov
popa
in
jnp
cmp
sub
sbb
ret
sbb
push
dec
push
dec
sub
mov
and
sub
sti
fadds
fdivs
movsl
movsb
adc
inc
push
pusha
sub
les
and
push
movsb
sub
add
adc
test
rclb
sti
mov
call
insb
mov
xchg
aam
jnp
movsb
in
sub
and
sbb
leave
ret
adc
adcl
pop
pop
sub
jge
das
rcrb
ljmp
mov
sbb
test
sbb
mov
test
arpl
leave
push
pushf
or
jno
insb
adc
sub
jmp
push
lds
push
mov
push
mov
scas
xchg
shrb
pop
cld
inc
cmpsb
or
jmp
nop
ret
ja
das
sbb
iret
fs
mov
addb
das
and
xchg
ljmp
jno
dec
pavgb
xor
push
mov
arpl
enter
orl
xchg
test
inc
or
adc
sbb
cmp
or
or
fs
adc
cmp
dec
adc
push
jb
xor
pusha
xor
or
xor
mov
lods
in
pop
and
dec
inc
xor
test
mov
fisubrl
cs
aad
cs
stc
xchg
mov
loopne
mov
sarl
inc
fs
push
and
fmuls
dec
xor
mov
je
mov
roll
jne
mov
push
test
mov
xor
es
pop
into
mov
repnz
add
mov
mov
inc
xor
cmpsb
add
insl
lock
dec
inc
fmul
jne
or
adc
and
or
and
add
orb
xor
mov
push
mov
pop
cmpsl
mov
cwtl
in
scas
nop
lock
inc
dec
mov
pushf
aaa
and
cmp
stc
cwtl
and
lea
sbb
leave
adc
or
lock
sub
ss
add
loope
jno
aam
inc
adc
mov
imul
mov
sbb
and
fimuls
int3
pslld
enter
in
mov
test
sbb
inc
int3
and
maxps
iret
enter
adc
mov
and
mov
in
fistpl
jmp
adc
and
adc
and
add
fsubl
insb
mov
add
lods
push
loop
push
fadds
inc
jmp
enter
out
adc
repz
push
and
pop
cmp
sbb
in
loopne
xor
call
xorps
ljmp
ret
and
cmp
loop
lcall
xor
movaps
fcoms
aam
adc
sub
mov
les
rcrl
mov
call
inc
rcll
cmpb
mov
cmp
cwtl
adc
xchg
nop
pushf
adc
nop
mov
lret
test
inc
adc
fcmovb
mov
xchg
sub
enter
inc
clc
xor
dec
push
faddl
aaa
test
test
sbb
mov
inc
mov
dec
popf
and
lods
mov
scas
sbb
push
and
movsb
fdivr
loopne
movsl
xor
rcrl
sub
mov
fnstcw
repz
shl
fsubs
inc
sub
sbb
imul
call
in
aam
orb
fldt
mov
or
inc
testl
stos
pop
fcoml
pop
add
pusha
jmp
lock
aas
dec
add
mov
loope
enter
sbb
inc
push
mov
cmp
sub
repnz
adc
jp
add
cwtl
testl
adc
or
xchg
xor
xchg
mov
dec
mov
jo
xchg
cmp
ret
dec
inc
ss
adcl
lea
adc
mov
cmp
lea
mov
cli
notb
cmp
xchg
mov
or
inc
pop
das
test
das
mov
mov
mov
leave
cmp
lock
dec
jns
shrl
dec
or
arpl
push
mov
xor
enter
mov
jnp
sub
jne
dec
lock
pop
popa
test
test
sbb
rorb
popf
cmp
sahf
xor
add
mov
cmp
loope
nop
inc
data16
sti
or
aad
daa
movsb
pop
push
call
dec
inc
sbb
mov
mov
popa
adc
inc
cmc
mov
sbb
or
sbb
adc
fwait
mov
mov
jb
test
call
push
in
or
flds
and
pusha
cmp
jl
inc
sub
add
nop
and
insb
and
icebp
inc
and
inc
in
movsb
sbb
lahf
call
dec
xchg
imul
adc
insl
int3
inc
aam
or
pop
mov
addb
push
aam
pop
or
pushf
and
inc
push
mov
jnp
dec
inc
push
jb
in
loopne
inc
adc
xor
test
cmp
dec
repz
enter
rorb
and
jbe
popf
ja
push
adc
clc
rolb
xor
movsb
lea
adc
fdivrl
add
add
bound
insl
add
shrb
pop
fisubrl
shlb
push
pop
int3
gs
sub
adc
pop
in
cltd
test
jge
daa
in
inc
aad
aam
dec
rcrb
and
mov
in
dec
push
cwtl
gs
ret
les
mov
shlb
les
lds
rol
xor
divl
lock
nop
inc
in
pop
gs
adc
pop
sbb
stc
adcl
rorb
add
push
xchg
pop
rclb
push
xor
or
addb
in
sub
in
mov
ja
inc
adc
push
push
cmpsl
aad
pop
dec
insl
sbb
jne
and
fiaddl
mov
lods
in
test
jne
cmp
test
lds
aas
mov
mov
ret
push
shll
dec
xchg
or
fiaddl
in
sbb
cltd
pop
sub
test
and
aam
add
or
push
lods
fs
and
gs
mov
dec
outsb
pop
add
sahf
xor
fsubl
rcrb
push
and
mov
dec
test
and
sbb
aad
enter
in
scas
in
int
leave
pushf
cwtl
xor
fsubs
cmp
inc
lcall
mov
pushf
mov
sbb
dec
insl
cmp
adc
stos
push
iret
testl
or
and
xchg
add
mov
lods
fadd
lods
sbb
mov
or
rcl
leave
push
roll
xor
inc
and
mov
js
adc
push
fbstp
add
adc
mov
inc
mov
cmpsb
pop
xchg
adc
mov
js
pop
or
add
sbb
adc
sub
imul
mov
gs
and
jo
adc
leave
and
push
jb
xor
push
or
lods
push
adc
jno
lods
enter
pop
int3
xor
push
jns
xor
sub
mov
movsb
jge
add
mov
adc
mov
test
aam
iret
or
jl
mov
call
push
rcl
dec
push
shlb
je
leave
aad
sub
scas
fsub
mov
iret
fcoms
or
push
inc
push
mov
push
sbb
sar
sub
pop
js
cmc
push
lods
call
xor
rorl
inc
outsb
and
fs
sbb
insb
xchg
cli
jo
adc
mov
jge
ficoms
add
push
fs
fnstsw
xor
insl
add
mov
push
pop
push
out
push
movsb
adc
jae
rcll
and
mov
lret
pop
inc
adc
test
or
dec
jno
jo
push
pop
rcrb
push
pop
enter
and
shlb
mov
jp
idivl
subb
xchg
jp
or
leave
add
insb
adc
mov
sti
fs
and
adc
cltd
push
cltd
fs
sbb
cltd
fs
and
cmpsb
pusha
xchg
dec
sub
xor
daa
fmuls
push
adc
and
mov
inc
ret
or
cmp
shrl
jne
mov
fwait
inc
enter
push
sbb
jbe
movsb
cmp
inc
or
stos
inc
pop
add
scas
mov
dec
and
mov
dec
je
lea
inc
add
movsb
add
mov
pop
pop
sbb
and
inc
pop
or
or
jne
inc
or
jge
adc
inc
fs
outsb
push
in
lods
test
xor
sbb
push
or
ret
sub
int3
ja
adc
fiaddl
bound
in
pop
in
mov
jle
add
and
sub
push
es
and
mov
cmpsb
movsl
sbb
enter
jle
add
ret
cmp
add
sbb
pusha
mov
aas
or
inc
int3
dec
les
les
int3
rcl
pop
stc
mov
cs
jecxz
push
mov
daa
fsubs
repz
xor
sbb
jns
imul
inc
mov
and
shrl
ret
stos
movb
rcrb
adc
mov
or
inc
lcall
sbb
jmp
mov
cmpsb
inc
in
fildll
jbe
lods
xchg
mov
or
call
nop
add
jecxz
je
or
popl
and
mov
loopne
mov
cmp
movsb
ja
mov
aaa
addr16
fdivs
rorl
dec
mov
sub
fs
cs
ja
dec
xor
scas
mov
inc
ret
mov
or
mov
test
test
lcall
int
imul
mov
shll
xchg
mov
ret
push
mov
mull
xor
add
mov
enter
das
push
inc
call
xchg
out
add
aam
cwtl
lods
and
sti
sti
ret
pop
push
addr16
scas
or
fdivl
cwtl
cwtl
and
sbb
insb
jbe
mov
fdivs
push
daa
adc
mov
pop
lods
jo
push
leave
fcoms
sub
mov
sbb
enter
xchg
lea
or
pusha
inc
xchg
clc
push
sbb
sub
addr16
xorb
test
fisubrl
in
inc
mov
jmp
dec
push
cwtl
sbb
leave
xor
in
jns
inc
sub
andb
add
lea
pop
nop
pusha
rcr
mov
je
lock
ret
sbb
xor
push
dec
xchg
add
lods
in
ja
add
imul
rorb
aad
push
add
inc
mov
and
inc
arpl
xor
jg
sub
in
mov
cmp
add
lods
loopne
sbb
mov
roll
inc
add
mov
or
and
pop
or
repnz
daa
jg
call
or
leave
mov
sbbb
fsubr
pop
mov
das
aam
movsb
shrl
mov
stos
sbb
out
lahf
in
mov
mov
adc
pushf
jo
int3
rcrl
inc
add
mov
insl
mov
inc
gs
movsl
mov
shlb
fcoml
inc
aam
mov
imul
push
notb
sbb
outsb
das
push
dec
pop
dec
adc
dec
imul
bnd
mov
pop
rorb
ret
or
add
test
sbb
or
xor
mov
fcomp
adc
lahf
pop
or
and
rorb
or
cmpb
adcb
add
cwtl
mov
add
and
xor
push
test
and
xor
add
and
lods
insb
pushf
or
xor
dec
movsb
lods
add
orb
inc
inc
es
ss
pushf
cltd
fs
dec
insb
lods
push
fs
dec
mov
dec
es
push
jl
dec
es
fs
mov
cwtl
nop
mov
fs
dec
mov
dec
and
cmp
sub
in
decb
imul
out
test
fcoms
mov
enter
mov
ljmp
cltd
bndldx
mov
mov
stos
sbb
add
mov
sbb
pop
xor
jl
test
mov
enter
movsb
jb
and
and
cmc
push
cmp
aam
sub
fs
fsubrs
in
mov
adc
leave
mov
mov
gs
lods
mov
in
addb
and
pushf
js
pop
xchg
xchg
xchg
fcmovnbe
bswap
les
lods
movsb
pushf
sub
mov
xchg
mov
test
and
fcoml
pop
sbb
pop
imul
xchg
mov
pop
mov
cmc
push
jbe
xor
push
in
orb
imul
sub
dec
inc
test
xchg
push
lods
xchg
inc
jmp
cmp
stos
inc
sti
xor
or
pop
ja
inc
lea
gs
aam
adc
and
dec
adc
ret
inc
jo
jmp
sbb
mov
pop
add
movsb
and
cs
xchg
sub
xchg
shlb
sub
cmpsl
test
sbb
add
pusha
adc
into
fwait
movsb
pop
stos
imul
mov
pop
dec
push
lods
push
add
pop
sub
and
ror
enter
mov
inc
mov
xlat
lret
xor
and
movsl
dec
repnz
idivl
fs
push
movsb
dec
adc
sbb
adc
cmpsb
or
int
jecxz
in
dec
dec
dec
dec
mov
or
push
mov
dec
loopne
shll
sub
dec
dec
mov
fsts
shll
sub
adc
flds
mov
and
adc
push
insl
dec
add
adc
mov
cmpl
push
fildl
pop
shlb
push
adc
sub
mov
adc
fnsetpm(287
clts
and
xchg
fidivrl
outsl
fadds
push
loop
adc
dec
rol
ret
mov
and
rcrl
push
adc
sub
sbb
addr16
sub
jb
nop
mov
nop
ja
or
icebp
add
cltd
ss
fiadds
mov
pop
pop
push
mov
imul
das
xchg
add
fadd
sbb
xor
sbb
sbb
cltd
mov
adc
and
rclb
fmul
les
mov
stc
les
or
mov
enter
test
add
and
fs
imul
ja
and
rolb
aas
xchg
xor
aas
mov
orb
inc
mov
scas
sub
dec
mov
or
pop
mov
ja
jle
fwait
sbb
stos
sub
and
movsb
add
imul
or
push
les
in
nop
inc
add
mov
and
repz
sub
jno
adc
mov
das
insb
mov
imul
jl
or
jge
mov
xchg
nop
movsb
xor
pop
lods
adc
pop
sahf
pop
inc
mov
xchg
subb
mov
std
push
mov
adc
jo
lock
adc
sub
pop
adc
or
movsb
add
add
in
int
movsb
mov
lea
fwait
sbb
dec
or
sub
repnz
fisubl
adc
mov
sub
shrb
rol
sub
cmp
jg
push
dec
outsb
test
in
sti
jo
popa
dec
leave
fists
dec
jb
and
and
adc
sub
movsb
addb
les
push
sub
clc
mov
push
pop
scas
cltd
add
icebp
mov
clc
xor
xor
repz
adc
cmpb
mov
lea
rorb
pop
cwtl
mov
adcl
insl
nop
inc
jo
sub
ret
in
dec
sbb
push
bound
add
cmp
jo
enter
imul
int3
pop
call
insl
inc
push
push
sub
movsb
lods
sub
jno
inc
pop
mov
mov
or
sbb
pusha
inc
fcmovbe
out
mov
pop
cltd
aas
out
sbb
or
sbb
or
jns
ljmp
rorl
mov
sbb
pop
dec
and
mov
test
sub
rorl
cmp
inc
shrb
and
cltd
mulb
adc
and
xor
xor
pop
xchg
mov
and
orl
or
push
jno
push
inc
mov
jb
adcb
inc
int
call
or
inc
push
fistl
xchg
in
pop
mov
adc
mov
adcb
mov
sub
mov
enter
pop
mov
sub
lods
imull
push
jo
pop
dec
push
cmp
xor
addb
adc
adc
pop
and
dec
adc
inc
insl
test
adc
mov
lods
inc
sub
lds
and
xor
add
subb
and
dec
pop
add
test
xor
and
ret
test
mov
add
nop
repnz
push
mov
xchg
jge
adc
sbb
ret
xor
std
add
xor
xor
fsubrl
arpl
sub
add
xchg
adc
push
inc
push
and
insl
mov
push
mov
lcall
lods
jbe
add
dec
cli
inc
adc
sbbb
sbb
inc
dec
ljmp
dec
rclb
scas
test
lcall
inc
sahf
lods
cmp
je
movb
add
ss
xchg
inc
add
in
lcall
pop
push
xor
push
add
leave
je
js
add
xchg
or
leave
and
mov
jns
xor
lds
nop
mov
out
popf
dec
stos
mov
orb
mov
mov
xchg
sub
xchg
loopne
or
add
ret
int
sub
ret
movsb
mov
bound
sbb
sbb
fidivl
lea
dec
and
cmp
dec
inc
nop
test
mov
fstpl
add
ret
adc
dec
test
sbb
xchg
int3
adc
je
jae
dec
mov
and
sarb
les
add
lods
adc
cltd
cwtl
mov
icebp
adc
mov
andb
lea
xchg
mov
jmp
rolb
stos
dec
cmc
or
or
cmp
fstps
mov
inc
or
mov
add
push
adc
pop
imul
pop
cmp
cmp
and
pop
bound
jge
mov
mov
lock
pop
dec
push
push
and
inc
inc
push
pop
mov
clc
sti
xlat
fisubl
iret
dec
dec
push
cld
in
inc
jo
in
hlt
icebp
inc
ds
jb
add
jecxz
sahf
or
lods
xor
inc
or
lods
or
mov
dec
jb
mov
shrl
sub
addb
add
inc
adcb
sbb
movb
fisubrl
scas
xchg
and
cmp
push
ret
jl
subb
push
rclb
rorb
adc
in
jmp
popf
je
call
pop
mov
and
pushf
stc
loop
pop
mov
mov
daa
add
fs
push
icebp
lock
jecxz
add
xchg
test
rcll
nop
xor
nop
imul
add
hlt
sub
or
out
and
push
xchg
in
sbb
dec
sbb
cmp
in
mov
loop
inc
jmp
cmp
es
xchg
es
or
insl
push
int
mov
jl
std
mov
pinsrw
adc
inc
std
add
add
orb
add
add
out
push
out
or
sahf
out
jl
cltd
scas
rcrb
add
push
aaa
push
jae
jg
jns
add
push
inc
add
push
mov
aas
jbe
fprem1
int3
push
ljmp
inc
aas
dec
pop
inc
add
and
add
incl
orb
jnp
mov
add
adc
mov
rcll
xchg
mov
or
outsl
cmp
adc
jp
lret
pop
mov
incl
nop
add
into
pop
adc
test
dec
testb
push
mov
mov
dec
cld
sahf
or
mov
or
enter
push
jnp
popa
pop
lock
rdpmc
add
invlpg
mov
incl
sub
pusha
mov
pushl
popa
and
insb
outsl
arpl
imul
mov
xorb
sub
popa
arpl
jne
jb
outsb
sti
fisubrl
je
add
das
ss
insl
adc
jnp
subb
inc
outsl
jb
js
je
mov
mov
jae
or
outsl
add
add
add
jge
add
jne
les
inc
cs
mov
jb
and
add
pusha
pusha
daa
add
aaa
or
jl
dec
add
xor
fdivr
mov
inc
push
add
aas
push
add
pop
dec
add
sub
mov
insl
xchg
je
je
and
idivl
dec
fisttpl
out
loopne
mov
insl
push
push
shr
loopne
or
bound
repz
sbb
popa
idivb
xor
insb
jp
fndisi(8087
fisttpll
or
mov
frstpm(287
arpl
lret
aas
rcrb
fisubs
out
outsl
jmp
jo
mov
pop
xor
stos
insl
sub
adc
push
imul
push
cmp
jne
inc
push
data16
xchg
mov
ds
jp
sub
sub
jnp
popa
pusha
sbb
daa
lahf
popa
into
jecxz
adcb
arpl
pop
jnp
inc
or
daa
dec
enter
jbe
fbstp
jge
ja
bound
jnp
ficomps
ficompl
ret
arpl
mov
or
push
xor
sub
mov
xlat
xor
filds
push
jo
scas
das
jb
ret
fiaddl
cs
movaps
pop
or
add
fs
mov
imul
jg
popa
sub
cmp
or
outsl
xchg
pop
push
sbb
lahf
aaa
jg
rclb
pop
dec
iret
push
fists
in
xor
loopne
divl
jb
jne
and
jg
out
sub
xor
stos
bnd
icebp
jbe
push
das
rcrl
jae
shrl
mov
cmp
push
cmp
fistps
outsl
aas
or
arpl
sbb
push
mov
inc
jb
push
xlat
aaa
jge
shrb
jecxz
stos
fs
fidivl
imul
shll
sbb
rdtsc
cmpsl
outsl
loopne
sbbb
sub
pop
xchg
sbb
mov
pop
add
pop
out
jnp
in
pop
insl
lret
je
mov
cmp
addr16
mov
loop
subb
ja
jecxz
push
push
sub
lock
cmp
xor
mov
fldenv
pop
add
mov
or
push
inc
imul
insb
jecxz
push
inc
inc
mov
sahf
adc
das
sbb
testl
fcomps
int
jns
mov
sbb
test
sbb
cmp
das
push
pop
sahf
push
sbb
sbb
repz
cmp
jns
jp
push
cld
js
sahf
out
outsb
incl
clc
mov
addr16
jp
ja
pop
sub
sub
push
push
push
out
mov
fucom
xchg
add
pop
mov
jl
insl
out
xchg
push
or
pop
mov
pop
pop
sti
mov
and
jge
fdivrl
push
xor
mov
and
jns
in
repnz
add
das
das
and
ret
pop
mov
out
dec
ljmp
loope
and
decb
cmc
pop
ret
ret
dec
repnz
jnp
jns
aas
dec
inc
out
pusha
xor
mov
mov
sbb
ds
daa
outsl
jo
mov
dec
and
add
inc
inc
das
pop
mov
ss
imul
iret
jns
rcr
mov
out
and
outsb
sti
adcb
inc
pop
xlat
mov
inc
jae
push
imulb
dec
and
sub
pop
jbe
scas
push
dec
fbld
ds
insl
arpl
mov
mov
xor
es
cmp
cmp
ficompl
sub
fs
dec
and
popf
scas
imul
dec
testb
arpl
bound
dec
outsl
jbe
popa
or
arpl
inc
jo
sub
jne
jne
xor
insb
xchg
outsb
xchg
call
jo
imul
fnstsw
adc
into
mov
jae
xchg
popl
jge
into
jg
addr16
popa
je
jb
xor
mov
jae
push
gs
sbb
idivb
push
jne
dec
outsl
outsb
and
jbe
ja
pop
dec
inc
aas
add
imul
out
dec
or
adc
fistpll
dec
add
insb
jae
push
dec
mov
push
popa
insb
jne
inc
add
mov
add
mov
jmp
sub
sub
cs
xor
xor
xor
ss
cmp
cmp
cmp
ds
inc
inc
inc
inc
or
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
push
insb
jl
test
xchg
pop
pop
pop
pop
pop
or
lcall
arpl
addr16
insl
outsb
outsl
jo
add
jbe
js
jp
jl
jle
dec
adc
fs
lcall
loopne
pop
ret
mov
orb
sar
lret
repz
repnz
jno
icebp
pusha
inc
mov
clc
ret
movsl
add
pop
loope
lds
shrb
outsl
fs
xor
imul
aas
daa
mov
gs
xor
cmp
outsb
bound
add
negl
dec
pop
sbb
icebp
cmp
ret
sub
int3
adc
adc
test
add
add
add
add
adcb
and
push
pop
push
sbb
sbb
hlt
and
add
pusha
fidivrl
into
push
add
inc
add
or
fucomip
into
add
sbb
addb
add
xchg
test
add
neg
cmpsb
flds
push
cmpb
push
and
sub
jb
int3
push
je
fcmovne
jo
add
nop
push
js
and
das
push
outsb
imul
mov
push
jo
add
add
aam
pop
adc
fcmovnb
lock
sbb
add
lea
leave
and
nop
and
xchg
xchg
repnz
in
add
outsb
pusha
sub
hlt
inc
scas
jmp
lret
stos
aad
aad
add
lods
mov
enter
pop
scas
xlat
jmp
push
sbb
cmp
cwtl
xchg
pop
sbb
push
inc
sub
cmp
rdtsc
ss
jmp
dec
inc
je
test
adc
notl
fs
push
mov
xchg
je
cs
jae
rcr
add
xchg
je
outsb
data16
push
add
mov
ss
out
je
xor
xchg
outsl
push
push
xchg
daa
pop
lea
inc
sti
iret
mov
outsl
js
push
xchg
fstpt
xchg
push
and
insl
jo
jo
and
and
ficoml
shlb
aaa
insb
les
dec
imul
mov
mov
inc
cmp
dec
inc
jb
jns
daa
fwait
ret
cmpsb
and
ss
jns
lahf
mov
pusha
je
and
imul
mov
and
cmp
mov
inc
pusha
fsubrl
push
jbe
mov
fcmovnu
cmpsb
fdivl
or
jb
and
mov
xchg
pusha
inc
jbe
push
mov
lahf
fs
insl
es
adc
and
lods
jp
pusha
xchg
sbb
mov
pushw
popl
sbbb
mov
jp
cmp
push
pop
or
push
jo
sbb
daa
mov
dec
adc
or
mov
outsb
mov
lods
mov
push
push
jae
or
cltd
shlb
pusha
insb
call
push
clc
addr16
add
fdivrl
adc
insb
adc
cmp
sti
dec
push
push
push
push
dec
testl
pop
mov
aam
enter
pop
or
loope
or
and
imul
lock
sub
pusha
cmp
mov
enter
das
pop
xor
gs
sbb
ret
mov
lea
or
mov
je
outsl
xchg
daa
xchg
mov
popw
insl
sti
cmp
pop
cmp
cmp
ds
and
push
das
push
sub
ret
frstor
push
addr16
jle
cmp
sahf
imul
add
mov
sub
pop
or
sbb
or
cmp
das
push
jb
aaa
in
mov
outsb
cmp
mov
xchg
xchg
pop
pop
jne
push
xchg
stos
addr16
push
jbe
add
das
jo
ss
gs
imul
mov
sbb
fdivl
dec
sbb
sahf
inc
int3
cmp
fs
jo
sub
mov
jl
out
sub
cmp
repz
push
push
dec
cmp
and
ds
repz
or
sub
mulb
push
cwtl
orb
fdivrs
out
push
aam
int3
enter
sahf
out
mov
lods
test
movsb
repz
cmp
mov
mov
idivl
xchg
adcb
push
sahf
out
dec
jl
push
jo
cmp
repz
fs
pop
pop
repz
repz
push
dec
inc
xor
stc
cmp
sub
or
sub
sahf
out
sahf
enter
dec
and
dec
repz
in
les
jo
fs
xor
sbb
lock
lahf
out
sahf
test
pop
sub
in
sub
jl
ja
push
pushf
jo
sub
pusha
lcall
lock
faddl
add
jb
test
and
mov
ss
addl
mov
addb
push
sbb
add
xchg
sub
inc
or
jbe
addl
imul
push
adc
movl
add
add
mov
jnp
or
jnp
push
pop
fildll
or
cmp
or
test
mov
call
xchg
cwtl
cltd
lcall
mov
cmpsb
cmpsl
test
stos
stos
lods
lods
scas
scas
mov
pushl
mov
mov
mov
ret
enter
int3
int
iret
rcl
call
rcl
aad
xlat
fcomp
fcmovu
loopne
loop
in
out
call
in
out
out
lock
test
std
push
repz
cmc
div
clc
stc
cli
sti
cld
std
jmp
or
sub
call
sub
push
test
push
adc
js
popa
data16
add
cmc
pusha
pop
shlb
cmc
out
xor
add
fiaddl
data16
daa
fidivs
add
push
arpl
jecxz
sti
sub
fs
sbb
jns
je
xor
jp
mov
jne
iret
decb
sub
add
inc
adc
mov
dec
and
xor
push
dec
inc
dec
xor
test
cmove
push
shrl
mov
adc
adc
pop
dec
rolb
popa
into
mov
mov
out
xor
jnp
inc
loop
mov
ds
pop
adc
call
or
cli
jb
jge
arpl
pop
in
dec
scas
jp
jno
in
fstl
nop
mov
and
cmp
dec
imul
jmp
iret
lret
add
inc
mov
mov
sub
pusha
pop
imul
ds
xor
mov
int3
dec
dec
xor
dec
popf
pxor
xor
lret
aaa
push
mov
cmc
inc
sub
dec
xchg
cmp
cmpsb
das
xchg
pop
and
xchg
call
lret
sahf
icebp
mov
cld
or
loopne
cmp
inc
mov
xchg
push
pop
xchg
sub
addr16
leave
or
insb
mov
out
leave
ljmp
add
loopne
dec
test
shrl
leave
hlt
std
aas
jl
adc
xchg
dec
add
scas
lods
dec
lock
xor
adc
fistps
into
or
icebp
pop
pop
repnz
fistpl
sub
lret
es
sbb
or
and
shlb
dec
or
daa
and
xor
inc
jmp
fistpl
fdivrs
sub
sub
mov
inc
inc
loopne
and
mov
inc
out
clc
xchg
dec
xchg
pop
and
sti
and
out
into
inc
cmp
outsb
addr16
es
repnz
jae
lret
cmp
and
or
sbb
mov
sub
loope
xlat
bound
jg
aas
fldt
je
aaa
pcmpeqw
sti
sub
rorl
ja
popa
daa
sub
cmp
add
je
jmp
jae
insb
add
push
sub
addr16
sub
jmp
xchg
lret
xchg
cmpsl
lock
fstpt
shll
inc
jb
add
or
pop
jae
xorl
push
stos
add
outsl
test
inc
imul
sbb
divl
jae
insl
div
outsb
js
mov
mov
mov
and
add
sub
jmp
addl
adc
out
fbstp
push
test
aaa
adc
jno
mov
shll
mov
inc
pop
rol
jnp
cmpsl
int3
push
lds
loopne
fdivs
inc
jecxz
or
out
sti
arpl
jns
out
mov
xchg
jg,pn
jg
imul
push
push
or
adc
jmp
pop
hlt
push
out
js
sub
push
lods
mov
cmpsl
out
add
push
mov
cmp
pop
ret
jge
ret
jne
adc
xorl
dec
push
out
mov
shll
imul
add
xchg
cmp
divl
cmp
out
rorb
inc
xchg
mov
sub
insl
ret
dec
dec
fisubrs
and
push
loope
xchg
gs
test
jmp
dec
jp
xchg
or
pop
xorb
jecxz
mov
mov
dec
adc
ja
out
push
cmp
cmp
jle
out
xlat
addr16
je
imul
aas
shlb
pop
arpl
add
movsl
sbb
pop
gs
jne
xor
cmp
and
and
andl
filds
rol
pop
stos
pop
inc
cs
mov
mov
add
outsl
fiaddl
mov
mov
xor
aas
arpl
sub
inc
aad
pop
lret
sub
inc
sub
ja
lods
and
ss
jne
or
cmp
aas
mov
adc
into
mov
pop
aas
pop
jecxz
addr16
push
ds
mov
push
arpl
call
test
and
mov
add
sub
dec
popa
jae
sbb
test
data16
or
dec
add
xor
icebp
jle
or
shll
push
mov
pop
dec
aaa
pop
xchg
jbe
fmuls
pop
jnp
sbb
push
and
jecxz
pop
aad
stos
outsl
subl
sub
pop
sbb
dec
aas
jecxz
test
push
inc
pop
daa
jne
aas
dec
sbb
outsl
dec
push
movlps
fwait
push
sbb
lcall
adc
shl
inc
push
ret
js
clc
mov
idivl
xchg
mov
push
loopne
inc
outsb
out
imul
jb
sub
shll
xor
add
jecxz
mov
out
pop
push
fiaddl
mov
mull
bound
jae
push
pop
mov
addr16
sti
and
xor
bound
pop
js
push
or
outsl
out
dec
inc
mov
outsl
sub
shrl
daa
lahf
mov
mov
ja
jcxz
and
outsl
cmpsl
cs
loope
jmp
add
in
mov
dec
mov
insl
mov
out
inc
push
inc
mov
imul
mov
push
outsb
clc
dec
insb
xchg
inc
inc
add
sbb
jmp
outsb
xor
mov
shrl
ss
mov
dec
sbb
daa
addb
xchg
je
pop
dec
push
jl
jo
jmp
insb
aas
pop
sti
pop
adc
addr16
cmp
sti
sub
sub
cmpsl
cmpsl
pop
pcmpgtd
pop
pop
sbb
mov
and
cwtl
inc
jle
inc
mov
mov
mov
inc
jl
jl
mov
fsubl
imul
push
xchg
cmp
inc
pop
out
mulb
and
addr16
bound
pop
mov
push
das
fnstsw
mov
in
subb
cmp
jns
jae
ja
pop
gs
jl
push
ja
jno
adc
jl
mov
pop
pop
jnp
sbb
jmp
repz
es
ja
into
xor
mov
imull
outsb
cs
push
mov
arpl
lock
mov
jae
jno
negl
insb
sub
shl
dec
outsl
lret
jl
jo
call
cmp
mov
mov
pop
mov
push
mov
roll
imul
push
imul
xchg
jl
repnz
orl
xchg
pop
adc
clc
fdivs
push
add
and
jne
mov
mov
mov
outsl
push
jo
pusha
inc
jle
fistl
fisttps
xlat
aaa
sbb
movsb
adc
inc
divl
jnp
jnp
pop
inc
jns
jae
data16
fs
inc
lock
pop
fisttps
add
jg
sbb
cli
add
jecxz
sbb
mov
test
pop
pop
pushl
pop
std
xorl
pop
data16
rolb
jnp
aaa
push
or
inc
pusha
cmp
mov
popa
popl
je
aaa
es
pop
fildl
adc
xchg
addr16
js
mov
push
add
sub
push
add
push
sbb
dec
push
in
jnp
dec
sub
sbb
ss
in
cli
lcall
jge
in
mul
lret
ss
inc
pop
cwtl
ss
push
imulb
mov
add
outsl
sbb
stc
mov
mov
rcll
cmp
push
out
int
movsl
push
stos
add
pop
push
mov
push
inc
push
inc
jg
push
mov
es
jl
scas
fnstcw
test
push
and
or
fcomp
sarl
add
aas
pop
mov
into
dec
pop
out
push
pop
jns
sub
adc
fisubs
je
and
fistpl
lods
push
int3
sahf
xlat
mov
inc
outsl
jg
push
loope
jnp
sarl
sbb
push
mov
pop
push
push
outsb
dec
fdivp
mov
iret
pop
aaa
dec
and
push
adc
aam
add
insl
ja
outsl
jo
jns
push
mov
pop
sbb
sub
cmpsb
dec
push
add
add
lret
les
sti
aas
mov
popa
push
jae
xchg
xchg
pop
fs
and
ret
sbb
push
gs
insl
pusha
push
popa
jne
or
dec
pop
and
dec
bound
xor
pop
sub
and
imul
jae
push
loop
decl
iret
repz
sbb
push
and
jnp
mul
clc
cmp
add
dec
push
pop
push
lahf
out
sahf
bound
shl
jbe
lahf
divl
popa
or
mov
cmp
aaa
clc
dec
xor
cmp
gs
sub
cltd
pushf
je
cmp
push
push
or
push
push
jo
jb
into
jb
pushf
mov
add
and
jae
sbb
subl
xor
and
and
and
arpl
les
sti
xor
cmp
fs
adc
adc
adc
imulb
mov
outsb
je
adcl
imul
dec
outsw
sub
ja
or
cmp
sbb
aaa
push
movsl
xchg
out
mov
inc
popf
adc
daa
imul
add
sub
sub
push
scas
fdivl
inc
push
ja
push
mov
scas
ltr
jbe
rcrb
cmpl
insl
or
pop
pop
inc
or
insl
xlat
cmc
insb
inc
cli
mov
push
and
mov
aaa
add
xchg
cmpsl
add
sahf
mov
inc
ds
dec
cmp
rclb
mov
idivb
sbb
or
add
rclb
faddl
sub
or
push
push
or
xor
or
push
cmp
mov
ja
out
mov
imul
add
fcomps
mov
ja
and
fs
clc
and
fs
bound
jle
out
enter
aaa
inc
or
sbb
lahf
scas
push
rcrl
mov
scas
pusha
imul
inc
cmp
ret
mov
or
jmp
pop
mov
sub
mov
pop
jo
cmpsl
mov
cmp
mov
outsb
fcoml
ss
sti
mov
loop
mov
mov
dec
pop
add
push
xchg
ret
fs
mov
or
lea
dec
inc
inc
add
push
mov
mov
mov
or
mov
stos
scas
imul
xor
xlat
scas
pop
push
shlb
ret
push
lea
cmp
ret
add
add
shlb
add
and
sub
gs
pop
int
imul
lods
lods
jp
jp
pop
pop
fidivrl
add
mov
iret
aaa
cmp
push
pop
bound
and
rolb
nop
aas
jb
fs
sub
dec
push
add
clc
inc
lods
icebp
lcall
mov
inc
pop
iret
jle
adc
pop
iret
repz
sbb
push
cmp
repz
andl
or
cltd
or
xchg
pop
pop
dec
or
in
xor
or
stos
mov
add
das
adc
mov
insb
jns
and
sub
xor
inc
neg
mov
mov
mov
mov
mov
add
add
shrb
ret
insb
ss
cltd
sub
shrb
xchg
pop
adc
fsts
and
add
fldcw
xchg
rclb
lret
verr
loopne
lea
shlb
push
dec
jl
stc
das
incl
pusha
into
mov
ds
icebp
imul
sub
pop
mov
xor
clc
out
repz
in
cmpsb
pop
xchg
fidivl
inc
push
call
ret
add
das
xchg
push
nopl
push
dec
into
sub
in
adc
sti
ja
and
mov
sti
iret
add
pop
and
sbb
add
pop
or
push
inc
outsl
inc
push
fiaddl
sbb
outsb
mov
arpl
xchg
adc
jne
inc
pop
pop
mov
sub
push
jmp
stos
fs
fnstsw
mov
outsl
cmpsb
sub
jns
sub
jo
movsb
or
mov
mov
pop
xlat
cmpsl
dec
stos
pop
push
jae
popa
insl
dec
shlb
es
mov
mov
das
xchg
hlt
or
addr16
push
push
mov
adc
cmp
or
dec
lods
iret
xlat
mov
sub
arpl
divl
pusha
das
and
cmpsl
push
sub
ljmp
cmpsb
mov
lea
ds
sub
sarl
xchg
stos
out
or
add
imul
add
sbb
jno,pt
jbe
or
aaa
push
add
rolb
fwait
imul
inc
inc
push
aad
fldl
sti
cmpsb
aas
rcrl
sbb
inc
jae
mov
xor
jbe
aaa
fwait
sub
pop
ret
and
and
mov
cmp
or
js
imul
xchg
pop
inc
and
shrl
push
loope
pop
outsl
es
push
add
nop
lcall
sub
mov
mov
mov
ret
lret
fistpl
arpl
scas
bound
pop
push
xchg
data16
sbb
mov
pop
xor
pop
mov
inc
outsb
cmp
outsb
cmp
ficomps
push
sub
push
xchg
inc
jmp
insb
mov
ret
push
add
lahf
sti
test
cmc
add
insb
cmp
add
inc
push
pop
xchg
mov
jnp
jb
aad
aad
xlat
pop
push
ficoms
xor
inc
fstpt
lahf
adc
xor
add
sbb
addr16
jo
cmp
je
lahf
xorl
notb
jbe
add
pop
es
scas
ja
jo
pop
inc
outsl
daa
jl
mov
repz
push
cmpsl
sub
or
pop
xlat
sbb
movsl
xor
inc
dec
pop
clc
fnstcw
and
mov
aaa
dec
iret
mov
adc
scas
fbld
fcoms
adc
mov
aad
ljmp
mov
or
cmp
adc
arpl
imul
push
inc
lahf
bts
aaa
loope
fadds
inc
sbb
inc
mov
add
xor
sub
aaa
es
enter
insl
push
outsl
xchg
pop
das
or
cs
outsl
push
inc
dec
bound
cmp
ss
add
sub
pop
sbb
out
xor
out
call
outsb
adc
add
out
xor
jnp
stos
add
mov
rcll
sahf
xor
add
mov
frstor
fsubrs
mov
les
rcrl
push
jmp
aad
mov
mov
ss
cmp
adc
mov
mov
push
or
xchg
and
adcl
push
mov
fsubs
pop
aas
ja
adc
jae
or
out
lcall
outsb
and
dec
bnd
sub
dec
cmp
es
mov
cs
lret
sub
mov
add
sub
adc
jno
or
inc
cmp
inc
lar
xchg
jb
stos
push
mov
push
mov
push
xor
aas
push
or
push
sbbl
add
jl
orl
jmp
pop
pop
fildl
and
repz
push
stos
adc
scas
lods
mov
push
or
ret
sbb
gs
mov
iret
jp
pop
call
dec
jmp
jae
insb
je
mov
jnp
push
sbb
mov
mov
xchg
aas
nop
inc
push
mov
mov
fists
push
stos
shlb
wbinvd
mov
and
iret
sub
fcomps
nop
push
in
pop
jae
jl
or
gs
int
daa
adc
mov
jl
iret
shll
pop
sbb
iret
sarl
xchg
add
clc
add
inc
call
add
fwait
mov
icebp
outsb
push
and
and
inc
dec
fwait
icebp
fisubrs
push
push
mov
outsb
bound
adc
out
xor
pop
inc
das
mov
sbb
cmpsl
loop
loop
arpl
lret
mov
xchg
imul
inc
inc
lods
aas
add
add
jmp
out
xchg
orb
dec
sub
adcl
sub
pop
xor
xchg
mov
sbb
aas
add
dec
add
lcall
pop
pushf
ret
jge
int3
jbe
mov
sbb
ret
adc
or
repz
push
fistpl
pop
or
test
dec
lds
jnp
aaa
add
das
sbb
adc
enter
iret
outsl
inc
lods
push
adc
lahf
das
shrb
and
sahf
mov
inc
sub
mov
or
or
push
add
pop
push
rcr
xlat
and
xchg
push
addl
mov
daa
movb
pop
addb
repz
addr16
vcvttps2dq
ficomps
xor
std
adc
out
jnp
jge
jbe
sbb
enter
inc
push
and
mov
rcr
cs
add
xor
fists
pop
mov
scas
add
push
insl
pop
push
or
sub
jae
aam
orl
add
sti
xchg
lgs
arpl
bound
ja
js
mov
pop
mov
pop
mov
in
negl
mov
fidivs
cli
push
push
sti
lcall
cs
jecxz
pop
and
fsub
in
cltd
dec
mov
loope
sub
pop
dec
hlt
loopne
xchg
stos
movsb
push
add
xchg
mov
xchg
push
leave
push
or
cmpsb
fs
leave
push
repnz
sbb
dec
pop
and
stos
in
sub
fistl
xor
sub
fimull
in
xchg
in
jb
inc
in
fmuls
xchg
test
xchg
mov
and
mov
in
cltd
dec
pusha
or
push
leave
stos
mov
xchg
pop
adc
push
xchg
dec
and
in
enter
mov
rcll
push
xor
movsl
xchg
shr
loop
cmp
les
mov
xor
jg
shlb
add
and
mov
xor
pop
aaa
jmp
rorl
je
cmp
movsb
insl
and
inc
shlb
loope
ret
je
or
mov
insb
xor
fadds
pop
das
inc
xlat
adc
adc
xor
sbb
out
dec
or
es
pop
inc
adcb
sbb
xchg
jae
mov
test
sbb
push
adc
mov
mov
repz
or
mov
inc
xchg
xor
jne
mov
dec
cmpsl
inc
xorl
mov
mov
add
xor
pusha
aam
aas
push
inc
dec
xchg
out
pusha
jmp
or
push
das
sub
sub
aaa
inc
mov
inc
sti
pop
push
scas
addr16
int
es
inc
lds
lea
inc
adc
pop
adc
hlt
push
scas
cmpsl
lahf
add
xchg
mov
pop
inc
sub
mov
push
and
and
and
popa
and
mov
mov
sbb
aaa
push
call
cmp
das
out
aaa
and
xchg
inc
iret
loope
mov
fadds
rorl
adc
sub
aaa
outsl
sub
shll
sti
push
aas
mov
les
gs
inc
sarb
das
mov
pushl
xchg
mov
mov
sbb
mov
mov
fwait
lret
call
push
sbb
aam
repz
cmp
add
call
mov
jg
jbe
mov
mov
popa
xor
add
arpl
loopne
xchg
xlat
mov
fisttpl
popa
xor
mov
arpl
mov
inc
inc
orl
mov
sub
jnp
add
sub
or
pop
sub
and
push
xchg
fdivrs
inc
es
and
add
xchg
out
aaa
sbb
sti
cmp
addr16
mov
sub
adc
je
or
push
rorb
insl
je
jnp
mov
dec
sub
mov
les
cmp
movsb
pop
sbb
mov
imul
xchg
jae
pop
inc
mov
push
ja
scas
add
add
loope
divl
imul
mov
mov
push
out
mov
xor
xor
mov
loopne
daa
outsb
xor
xorl
dec
bound
sarb
ja
adc
faddp
xorl
popa
jae
js
outsl
jae
imulb
js
fs
pop
daa
sbb
xchg
push
adc
push
clc
fucomip
push
loopne
int3
sbb
add
sbbb
jne
repz
dec
or
add
jae
xorl
in
popa
inc
adc
rorb
les
mov
dec
push
adc
imul
outsb
or
stc
cmp
sbb
addr16
fcmove
rclb
pop
push
pushf
push
inc
or
push
pop
inc
mov
xor
sub
pop
lods
add
xchg
pop
jb
xchg
rolb
adcl
push
jae
imul
pusha
je
imul
das
jmp
xor
scas
push
cs
fsubs
loop
push
fistps
jmp
mov
add
gs
out
mov
cmp
xor
stos
movsb
xor
xor
lock
adc
stos
mov
dec
cmovno
or
pop
cmp
mov
out
add
add
mov
aas
mov
bound
insb
adc
out
cs
inc
sbb
cmpsl
movsb
inc
mov
xor
push
mov
pop
movsl
jno
add
inc
lods
mov
addb
arpl
sbb
imul
xchg
shrb
xchg
cltd
push
jecxz
xor
scas
dec
insl
lock
loop
outsb
sub
in
sahf
cs
cs
cmp
mov
push
sahf
cs
xor
push
repnz
out
es
and
loopne
push
jae
xor
adc
in
fidivrs
inc
xchg
cmp
inc
pop
ret
cmp
jnp
fs
dec
sub
into
xchg
fcmovb
xchg
jmp
jecxz
pop
pop
in
pop
scas
dec
shlb
or
inc
or
loopne
stos
jle
js
xor
fucom
jmp
inc
cmp
xchg
ficomps
dec
or
inc
push
mov
out
inc
and
ss
push
dec
repz
push
fimull
pop
incb
mov
xor
ret
lds
outsb
jb
loop
pop
mov
push
cmpsb
xchg
ja
pop
das
jge
ret
pop
lret
inc
popaw
sub
pop
mov
xor
stos
inc
mov
arpl
sub
arpl
fs
sub
ds
mov
cmp
xchg
dec
dec
daa
jge
fidivs
mov
scas
jnp
out
inc
push
packssdw
inc
jnp
sbb
push
sbb
dec
ss
outsb
jnp
fidivrs
daa
dec
jb
das
xor
pop
dec
es
das
add
pop
out
mov
and
or
xchg
jne
sysexit
mov
cs
sahf
xchg
push
push
mov
mov
push
scas
push
in
mov
insl
push
inc
ja,pn
xor
push
jns
lds
jp
jp
ds
fucomi
loope
fiaddl
jg
dec
das
xor
fisttps
jp
pop
fstpl
mov
dec
xor
loopne
push
into
xor
cmp
push
dec
cs
push
dec
outsl
push
dec
and
pop
data16
add
lcall
sub
dec
dec
out
mov
imul
sbb
lret
fistps
insb
cmpsl
jo
jnp
adc
jnp
add
jbe
jnp
js
aas
add
fldt
dec
lea
test
jae
pusha
adc
xchg
mov
mov
mov
mov
xor
out
scas
mov
sahf
add
ret
xchg
mov
mov
cmp
data16
shlb
dec
adc
pusha
mov
mov
mov
pop
in
pop
push
addl
and
arpl
andb
mov
arpl
pop
shrl
repz
add
mov
addl
push
cmp
dec
dec
daa
jbe
scas
add
sbb
dec
lret
inc
jo
add
sbb
scas
cmp
dec
push
je
mov
mov
shrl
insb
xor
mov
sbb
adcl
xor
pop
mov
mov
and
mov
call
outsl
popa
fs
outsl
mov
test
lods
push
add
pop
je
in
add
inc
fs
or
aas
sub
sbb
andl
sbb
adc
out
scas
js
sub
inc
sbb
push
add
sbb
mov
xchg
push
xor
addr16
xor
push
xor
icebp
arpl
xlat
add
aaa
jb
repz
int3
dec
ja
pop
imulb
mov
jl
fsub
xchg
pop
and
lods
or
push
jo
sahf
out
outsl
jle
fs
pop
mov
mov
inc
insb
xlat
pop
xor
pop
mov
cmp
jo
arpl
xor
notl
push
jae
pop
xor
punpckhbw
cmc
push
stos
adcb
and
pop
sub
pop
repz
inc
lea
xlat
jae
dec
adc
cmp
xor
push
daa
mov
add
lahf
lea
add
xchg
inc
dec
insb
sbb
add
or
xorb
push
sub
inc
fldt
mov
outsl
ret
outsl
adc
sub
pop
adc
sub
push
sub
lahf
sub
test
xlat
add
das
jecxz
shrb
rolb
push
inc
sbb
mov
lcall
mov
mov
and
dec
push
popa
les
arpl
iret
inc
das
mov
and
lahf
popa
sbb
and
imul
movsb
pusha
add
or
repz
xchg
test
push
push
lret
pop
and
push
pop
xor
call
inc
pop
dec
dec
orl
daa
jns
add
das
mov
aaa
iret
fbld
dec
lods
xchg
outsb
dec
arpl
jae
daa
test
dec
xorl
inc
testb
pop
jae
push
das
repz
push
pop
mov
outsl
pop
xor
aaa
sub
rcll
xor
push
fs
mov
add
movsl
fildl
cmp
push
lods
jp
sub
adc
loopne,pn
adc
push
pop
mov
lock
inc
jmp
std
fisubrl
mov
sbb
or
cmp
xchg
mull
imul
lahf
sub
subb
xlat
and
xchg
loopne
or
popa
out
data16
jmp
pop
outsl
clc
out
leave
jmp
sub
inc
das
pop
mov
dec
xchg
push
in
inc
dec
add
daa
sar
dec
nop
and
mov
mov
mov
sbb
ljmp
mov
mov
call
mov
lods
pop
dec
movsl
enter
push
push
mov
inc
push
insl
ss
adc
cli
mov
add
test
cmp
mov
xchg
mov
mov
ds
pop
sbb
or
jle
jo
fsubs
sbb
decl
cmp
dec
pop
dec
xchg
jge
mov
push
pop
add
pop
inc
jbe,pn
adc
adc
outsl
call
hlt
or
xchg
dec
sub
nop
ss
push
ss
pop
jmp
push
insl
pop
pop
dec
inc
mov
rolb
inc
mov
rolb
lds
xchg
cmp
sbb
ret
push
dec
sub
cmp
cs
or
cld
fwait
dec
cmp
in
fdivrl
das
int3
xor
mov
xor
cmp
mov
and
jns
pop
inc
outsl
xorb
mov
or
lcall
ds
inc
mov
inc
cld
pop
dec
xchg
aaa
imul
dec
xchg
fmuls
dec
ret
or
pop
fwait
add
je
pop
xor
shll
cmp
ss
jge
mov
sub
adc
xchg
or
cmp
adc
loopne
inc
mov
jecxz
cmpsb
jp
mov
inc
cwtl
adc
xchg
adc
add
nop
stos
aaa
inc
dec
push
jp
es
mov
data16
aas
daa
bound
je
bound
imul
xor
add
pop
scas
sbb
sub
add
add
aas
aaa
daa
dec
shrb
aas
fsubs
je
aaa
push
out
cmp
jae
inc
mov
adc
xchg
xor
scas
pop
mov
push
xor
rcll
xchg
stos
pop
dec
push
test
mov
scas
cmc
fidivs
sub
and
xor
pop
addr16
jmp
lcall
push
mov
xchg
mov
xchg
jne
jmp
call
bound
and
cmpsb
fst
mov
add
insb
inc
dec
and
xlat
adcb
out
test
lock
sbbl
pop
data16
cmpsb
test
repz
cmp
sarl
cmp
add
bound
dec
adc
je
add
pusha
mov
jbe
daa
xchg
pusha
fsubrs
pop
xchg
dec
ljmp
bound
dec
imul
cmpsb
dec
push
add
cli
xchg
pop
jae
add
cltd
pop
adc
es
xchg
lahf
test
repz
pop
mov
lret
ficomps
inc
xlat
and
sarl
push
push
jbe
cld
xor
jl
sbb
hlt
cwtl
adc
or
cmc
cmpsl
pop
mov
int
fwait
pop
adc
ds
mov
push
daa
mov
fs
es
leave
xchg
inc
out
add
xchg
aam
jnp
cmp
inc
cld
pop
add
sysret
mov
mov
aaa
push
pop
mov
xchg
fnstcw
scas
call
cmpsl
imul
shl
lcall
into
xchg
das
es
push
lea
pop
mov
stc
mov
ds
mov
cs
lods
inc
ds
repz
add
mov
dec
pop
push
push
adc
sbb
push
or
push
fists
out
mov
daa
xor
jg
aad
xor
idivl
sub
pop
push
lea
popf
ficoms
sti
xor
notb
pop
mov
sub
dec
push
pop
push
jae
mov
mov
push
dec
pop
out
out
ret
pop
outsl
push
and
mov
aas
sbb
fiadds
xchg
xchg
xchg
pop
push
fistpll
xlat
or
loope
push
cmp
cs
imul
pop
clc
call
hlt
sahf
idivb
push
std
out
imul
das
push
jmp
es
pop
pop
jnp
fst
push
jg
inc
popa
sbb
repz
shll
mov
xor
sahf
dec
mov
imul
add
lahf
out
fldl
test
mov
nop
sbbl
std
xchg
dec
or
jns
out
dec
jle
ret
in
cmp
repz
push
jge
repz
iret
roll
dec
pop
push
subb
negl
push
cs
out
sahf
push
insb
xchg
mov
clc
pop
xor
jl
push
das
das
iretw
and
jg
dec
sbb
scas
sub
adc
and
and
rcrb
push
fimuls
xor
adc
mov
mov
pop
push
mov
das
jbe
jg
loopne
mov
jbe
inc
mov
and
pop
sbb
ljmp
in
enter
adc
or
adc
aas
pusha
or
bound
pop
mov
pop
adc
dec
mov
movsb
push
dec
cmp
mov
lock
xlat
mov
add
clc
push
adc
iret
or
push
imul
jp
xor
push
js
mov
imul
cmp
xor
dec
addr16
dec
xchg
cmpsl
jp
xchg
mov
and
lods
xchg
pop
fildll
stos
cltd
fisubrl
add
dec
jo
js
rcrb
push
push
dec
dec
inc
outsl
and
test
je
and
adc
fadds
lahf
clc
push
or
push
mov
data16
mov
out
pop
push
ret
mov
cs
decl
mov
fisttpl
es
adc
cmpsl
push
pop
fisubrs
push
rorl
sub
inc
sub
mov
lahf
pop
sub
mov
pop
out
push
hlt
lock
addr16
mov
subl
aaa
outsb
loopne
notb
or
pop
cmp
xlat
cmpsl
jo
pop
pop
daa
fwait
push
jo
inc
lret
sbb
dec
jno
push
mov
inc
push
mov
jecxz,pt
outsb
insl
mov
in
frstor
push
cmp
push
sbb
xchg
fs
arpl
jae
imul
imul
sub
sub
pop
out
mov
data16
jns
mov
sub
push
adc
xor
jae
push
add
mov
add
leave
add
xor
daa
or
lods
sub
daa
xchg
ss
xchg
add
pop
cmp
xor
arpl
push
push
decl
fs
jo
xor
imul
pop
loope
bound
outsb
push
jnp
or
dec
dec
adc
inc
inc
sbb
lods
cmpsl
inc
ret
mov
inc
dec
and
add
lock
clc
ja
addr16
cs
jecxz
pop
fdivs
push
cmp
stos
sub
ret
inc
mov
sbb
or
bound
inc
and
sbb
aaa
mov
mov
push
adc
shrb
or
lea
movsl
test
sub
push
call
push
das
and
pop
mov
cmpsb
sbb
pop
addr16
arpl
testb
jae
and
sub
fs
mov
das
and
pop
or
fisttpl
jo
pshufw
das
or
out
data16
shll
lods
dec
lret
dec
mov
shll
sub
shlb
pop
pop
dec
mov
rcll
mov
icebp
popf
cs
popw
outsl
aaa
lea
mov
inc
jmp
push
xchg
das
ss
cs
inc
das
push
clc
sub
pop
popa
imul
xorb
popl
sbb
test
imul
bound
xchg
fiadds
push
popl
pop
xchg
sub
add
add
repz
lret
jecxz
out
inc
into
inc
inc
pusha
dec
sbb
or
cmpsl
lahf
imul
mov
dec
cmpsl
sub
dec
add
aas
cmp
pop
adc
sbb
cmp
lods
iret
pusha
sub
pop
sahf
and
xchg
add
sub
sub
aas
push
mov
mov
xlat
pop
add
mov
stos
xchg
add
ja
add
push
test
mov
pop
imulb
push
inc
daa
sbb
in
in
cli
cmp
dec
push
or
loop
inc
cmp
ljmp
pop
inc
ss
mov
dec
dec
inc
shrl
inc
aaa
or
addl
jmp
xor
pop
notl
add
and
jnp
pop
fistpl
sbb
loope
jg
add
push
jne
inc
cmpsl
push
call
pop
icebp
push
adc
inc
inc
clc
outsb
add
inc
pop
pop
pop
or
inc
pop
push
or
add
jns
je
add
movsb
mov
icebp
pop
push
xchg
das
push
sbb
repnz
and
rclb
out
cmpsl
cmpsl
es
insl
jo
je
pop
out
std
lea
ds
jo
jae
daa
pop
mov
out
jno
outsl
xor
push
xadd
push
xchg
xchg
adc
insb
pop
sub
or
pop
out
jns
je
jne
or
bound
mov
xor
ja
out
mov
jae
lret
sub
out
ds
movb
mov
mov
mov
je
adc
imul
dec
orb
clc
gs
push
test
jbe
inc
and
xor
mov
push
arpl
nop
mov
testl
out
pop
stos
add
rolb
bound
cmp
dec
jecxz
jg
mov
adc
pop
pusha
mov
push
push
adcb
jmp
test
push
mov
cmpsl
pop
dec
jne
push
pop
daa
fwait
sub
push
test
bound
loop
inc
cmpsl
in
aam
jns
jb
add
sahf
iret
mov
add
mov
push
ret
pusha
or
xor
adc
out
inc
push
inc
fldt
or
aaa
inc
insb
addb
jp
pop
daa
out
pop
mov
sbb
pop
sbb
jb
out
or
mov
jmp
les
add
push
pop
nop
cmp
aaa
incl
dec
inc
dec
push
xchg
add
rcll
je
pop
dec
fidivs
fidivrl
jg
ret
movl
add
pop
adcb
add
add
push
lahf
incl
add
call
sti
shlb
ret
icebp
adc
pop
movsb
cmpb
aad
sbb
cwtl
stos
pop
fdivr
incl
pop
adcl
test
and
jge
push
je
mov
andb
fwait
rol
fwait
in
incl
popf
rorl
mov
jmp
dec
fsubrl
stc
jbe
push
ds
ljmp
xor
jg
mov
inc
xchg
cmpsl
aad
arpl
push
sub
adc
or
cmp
sbb
cld
insl
sub
adc
or
or
cs
ret
sub
xchg
mov
decl
sbb
mov
call
cltd
test
push
push
shll
insb
aaa
push
dec
ja
daa
mov
mov
mov
sbb
dec
stos
fmuls
lret
rep
cs
ljmp
movsl
js
js
test
add
mov
mov
movsb
mull
jno
addr16
push
incl
rep
cmp
cmc
dec
movsl
jg
push
push
mov
fwait
stos
flds
pop
and
ret
js
sbb
mov
pusha
dec
pop
mov
das
sbb
xor
add
pop
daa
daa
dec
in
xlat
daa
push
and
push
pop
inc
inc
inc
push
sar
fildl
and
or
aas
js
insb
cwtl
pop
fisubrl
push
pop
push
or
and
dec
or
or
inc
pop
lahf
ss
sub
pop
gs
subb
fistpll
push
push
mov
inc
popw
push
sbb
aaa
push
cld
xchg
sub
add
daa
push
mov
sbb
outsl
adc
sub
sub
lods
mov
and
xor
inc
pop
xchg
inc
lahf
int
mov
push
pop
mov
mov
int
int3
mov
xlat
jl
sbb
adc
xor
xor
jbe
scas
sar
mov
push
push
inc
cmp
inc
cmpsb
cs
mov
out
sub
jne
sub
and
pop
mov
adc
outsl
pop
or
mov
jae
sub
pop
testl
push
inc
dec
jbe
in
dec
imul
xor
push
cmp
xor
and
xor
dec
jb
rcr
adc
ja
out
push
imul
inc
enter
mov
out
and
bound
mov
test
push
imul
shlb
cmp
or
mov
movsb
outsl
je
mov
popa
stos
rcrb
mov
out
testl
sub
push
loop
rolb
js
ret
dec
inc
sti
int3
int3
or
and
push
fnsave
add
push
add
outsl
fs
out
xchg
gs
jo
jns
iret
inc
mov
and
adc
pop
dec
les
outsl
insl
jne
shrb
jnp
fiadds
les
add
cmp
and
push
inc
je
bound
clc
or
aam
inc
insb
aas
jbe
jg
mov
pop
inc
popa
imul
inc
sahf
loop
outsb
mov
xor
fidivrl
pop
add
gs
fcoms
jnp
ret
orb
inc
or
inc
mov
outsb
xadd
sbb
inc
cmovo
addb
adc
cmpb
aas
js
insl
pop
nop
jo
maxps
loopne
mov
mov
mov
inc
movups
xchg
mov
dec
adc
or
xor
test
das
sbb
dec
insb
dec
add
sbb
jbe
lret
out
hlt
daa
ds
mov
shlb
testl
enter
push
inc
push
jmp
jmp
pop
das
inc
add
fstp
add
lahf
ds
jnp
add
daa
les
or
enter
sub
daa
outsl
inc
xchg
outsb
mov
out
lds
leave
daa
xchg
sub
fs
push
mov
push
fcompl
adc
dec
fsubl
xor
scas
fisttps
inc
test
add
in
and
scas
jl
inc
mov
mov
outsl
jle
pop
lods
pop
jb
mov
and
mov
lret
jno
outsl
adc
outsl
add
mulb
in
lret
dec
add
out
dec
mov
rep
negl
push
sbb
cmpsb
pop
and
jle
inc
mov
lret
in
adc
inc
cs
movl
filds
xor
xchg
rep
sub
js
repnz
enter
js
pop
jb
pusha
movsb
lods
enter
mov
and
lods
sar
or
outsb
addr16
aas
add
nop
int
mov
int3
sbb
pop
push
movsb
das
inc
daa
repnz
in
push
outsb
xchg
xor
aas
es
pop
add
dec
sahf
or
in
iret
lds
nop
push
aam
mov
sahf
mull
cmpsb
int
xor
inc
push
nop
enter
dec
aas
ja
pop
repnz
lahf
aam
cmp
add
test
nop
int
movsb
inc
sub
cs
scas
hlt
ja
inc
cs
aam
lock
fsubrs
cmp
inc
daa
lock
pop
pop
addr16
inc
enter
fstpt
testl
mov
mov
xchg
pop
add
add
bound
adc
insl
shrl
push
sub
push
sahf
outsl
mov
inc
cs
xchg
jo
pop
jnp
mov
mov
daa
add
mov
pop
mov
mov
jae
in
cld
add
das
in
sbb
in
and
jnp
inc
ss
inc
push
test
push
xchg
dec
in
add
jl
stos
shrb
cmp
jnp
jo
pop
int3
mov
mov
sbb
add
roll
dec
in
dec
add
pop
enter
rorb
inc
sahf
or
imul
lret
inc
sahf
or
sbbb
lahf
or
or
xor
pop
enter
cmp
nop
mov
lahf
pusha
enter
ja
mov
lods
mov
iret
test
faddl
cld
mov
fsub
sub
pop
xchg
sbb
pop
cmp
push
shl
fcompl
xchg
fcoms
jg
negl
or
adcb
pop
frstor
test
cmp
in
pop
and
jae
cmpsl
cmp
fwait
nop
iret
test
aam
push
or
dec
push
dec
fisubs
imul
jl
and
repnz
in
mov
iret
test
rcrb
hlt
nop
fbstp
in
and
adc
fiadds
loopne
in
repz
pop
and
and
enter
js
pushf
fadds
cmpsl
js
jae
iret
dec
int3
fdiv
jl
add
fiadds
xor
inc
pop
and
sti
push
and
cmpsl
js
mov
mov
push
mov
dec
add
and
aam
and
repnz
les
adc
and
insl
orl
jae
int
lahf
and
fs
mov
enter
fs
iret
test
les
pop
enter
fwait
sub
pop
js
fadd
adc
stos
jo
ljmp
sahf
jg
test
pusha
push
shl
push
cmpsl
inc
sahf
or
inc
sahf
out
rcr
loopne
mov
into
add
xchg
lcall
addr16
ficomps
insb
xor
push
push
shl
inc
fs
addr16
sahf
or
test
bnd
addr16
out
scas
jbe
lahf
test
and
or
sbb
jbe,pn
xor
iret
test
pop
jo
aas
subb
out
lcall
and
in
push
push
cmpsl
mov
pop
hlt
add
ds
nop
or
and
inc
icebp
mov
pop
sahf
push
and
nop
addr16
rcrb
mov
jns
out
call
and
or
ja
out
and
and
loopne
dec
dec
fcompl
push
inc
jbe
dec
mov
xor
fwait
or
push
mov
pop
pop
pop
add
mov
jns
inc
js
lock
pop
jb
jo
inc
loopne
js
inc
ds
inc
push
push
push
movsb
imul
and
jg
mov
jl
int3
test
addr16
lahf
mov
and
cs
inc
lock
clc
or
aam
fs
sbb
sub
cmp
mov
pop
push
dec
inc
ja
or
or
mov
pop
push
pushf
fdivrp
push
sbb
insb
inc
jmp
mov
jo
and
sbb
loopne
les
sub
inc
fists
addb
int3
shl
push
imul
fiaddl
inc
lcall
lods
lods
add
push
inc
jg
nop
out
pushl
shl
loopne
mov
loopne
dec
inc
ja
enter
pusha
fs
sbbl
inc
pusha
enter
jg
nop
mov
enter
adc
mov
loope
or
loope
mov
sub
daa
and
frstor
lahf
in
inc
dec
repz
inc
adc
lods
sbb
pop
mov
pop
insb
inc
mov
cmpsl
inc
movsl
jbe
clc
add
inc
adc
lahf
imul
fs
sahf
or
pusha
jo
nop
or
fs
mov
jns
in
mov
out
cs
mov
nop
lock
adc
out
cs
mov
dec
enter
pusha
in
pop
pop
and
adc
push
repnz
dec
nop
mov
in
dec
lahf
nop
inc
es
pop
enter
in
inc
lahf
or
in
mov
pop
testl
pop
outsl
aas
js
sub
lcall
testb
ror
fiaddl
cmp
out
clc
or
pushaw
cmp
push
xchg
inc
outsl
enter
xchg
clc
inc
in
leave
repz
push
pusha
enter
push
outsl
jg
lds
or
aad
jl
jb
lock
iret
add
jmp
out
sahf
adc
fxam
out
js
and
inc
call
adc
inc
mov
sub
fwait
push
push
pop
daa
aas
daa
add
mov
data16
pop
mov
daa
nop
xchg
testl
fcmovb
cs
call
scas
mov
mov
xlat
mov
inc
lcall
negb
call
mov
hlt
call
ljmp
or
lods
inc
pushf
or
mov
outsl
mov
fstl
dec
aam
in
push
xlat
data16
xchg
sbb
xchg
push
in
dec
in
pop
dec
cmp
dec
push
push
daa
ret
pusha
stos
mov
orb
or
add
jns
ja
daa
sbb
test
dec
push
jb
push
inc
inc
cmp
xor
push
jb
sub
popa
and
mov
mov
out
ljmp
dec
push
xor
icebp
mov
negl
clc
add
es
push
cmpsl
stc
xor
and
lock
out
mov
mov
clc
out
sahf
ja
out
dec
xor
ds
push
push
jl
in
movsb
mov
sahf
cmpsl
stc
je
pop
cmp
add
push
test
add
repnz
es
xchg
pushf
in
dec
test
xchg
mov
aas
imul
xchg
cmp
sub
nop
add
dec
sahf
out
jmp
add
fidivrs
mov
jg
push
xor
mov
fdivp
push
inc
out
cld
inc
mov
push
push
xor
add
or
push
in
ja
add
sbb
jns
xchg
inc
dec
outsl
xchg
sti
inc
inc
xor
dec
sbb
push
add
add
rcr
in
dec
ret
push
xor
add
inc
or
and
dec
test
in
fbstp
outsl
fisttps
mov
outsl
cmp
or
cmp
pop
and
pop
ret
lods
pop
scas
add
outsl
out
mov
xor
fnstsw
and
fbstp
cmp
add
aam
test
call
sbb
out
scas
add
sbb
ljmp
pusha
and
xor
xor
xchg
in
nop
out
out
out
outsl
xchg
popa
sub
add
sub
or
sub
xor
jbe
into
js
aaa
js
cwtl
repnz
repnz
mov
push
hlt
out
movl
sahf
sbb
lock
leave
add
dec
jg
or
ja
adc
jg
mov
sub
or
mov
or
repnz
cld
fimuls
icebp
outsl
add
mov
fbld
bound
and
mov
fiadds
and
insb
add
cwtl
pop
scas
sbb
push
xor
pop
outsl
js
ret
push
out
dec
fisubs
jae
pusha
cmpsl
or
daa
add
je
orb
cmpsl
in
or
xor
push
aaa
stc
out
pusha
xchg
sub
add
fwait
test
call
and
es
xorb
call
loopne
subb
mov
loope
fimuls
xchg
push
cwtl
aam
jg
push
adc
push
call
addr16
and
xor
aaa
inc
repz
push
xor
pop
sbb
loopne
xchg
mov
ss
js
test
or
repz
mov
pcmpeqd
mov
leave
xchg
lock
outsl
js
in
xchg
outsl
jg
sub
xchg
loop
hlt
jge
jne
daa
testl
cmpsl
jge
scas
push
movsb
clc
push
mov
hlt
scas
mov
testb
and
and
dec
cmpsl
bound
loope
adc
cmc
push
pusha
mov
dec
xlat
or
decl
idivb
add
pop
jne
daa
xlat
or
shl
pushf
xchg
dec
inc
divl
add
test
fdiv
add
fimull
xor
popa
xor
outsl
and
sub
push
mov
xchg
cmp
nop
imulb
mov
divb
subl
stos
pop
nop
divb
call
aaa
sbb
outsl
loopne
and
jecxz
and
pushf
pusha
divl
scas
es
pop
mov
add
mov
call
jg
hlt
ja
loop
fisttpl
sbb
and
jg
in
dec
scas
addr16
add
xchg
or
fs
add
sub
das
and
and
push
jb
jge
mov
inc
aad
lods
aaa
pop
in
jl
sub
sub
pop
cmp
ss
cmp
dec
stc
aaa
add
movsb
or
leave
test
mov
pop
iret
int3
xlat
jo
push
xor
sahf
iret
aad
sub
daa
loopne
xchg
pop
leave
in
pop
cli
daa
or
add
repz
pop
cwtl
push
xchg
add
call
dec
int3
js
or
outsl
mov
xchg
aas
add
decb
cli
cmpsl
sbb
and
mov
decl
xlat
xchg
push
inc
sti
das
outsl
add
or
inc
cs
xchg
movsb
inc
outsb
rclb
push
test
mov
add
cld
push
xchg
mov
pop
andl
push
xor
outsl
out
add
or
inc
lcall
inc
dec
loopne
or
jb
arpl
out
daa
or
add
addb
cmp
std
addr16
or
negb
jl
aas
addr16
fisubs
daa
lods
int
lds
iret
movsb
in
sahf
aam
addr16
gs
in
hlt
std
push
mov
push
dec
divl
mov
push
inc
inc
add
decb
imul
incb
nop
decb
or
rol
pop
repnz
shl
rclb
adc
orl
lahf
fsubl
arpl
clc
out
mov
jl
les
clc
sub
xchg
or
std
lods
push
mov
addr16
test
mov
add
add
jb
test
cmpsl
stc
cmp
stos
shr
and
push
dec
repz
mov
pusha
ds
repz
mov
mulb
mov
out
inc
xchg
dec
repz
mov
pop
mov
arpl
lahf
out
mov
pop
add
or
lea
call
adc
cs
insb
xchg
nop
iret
repz
push
pop
mov
imul
xchg
xlat
out
fidivrs
xchg
es
mov
xor
sti
push
xchg
inc
mov
mov
push
ljmp
ja
jne
push
xchg
push
out
cmp
xchg
fucom
jns
aas
push
ret
add
out
jne
loopne
cltd
jb
imul
lcall
in
fwait
push
imul
pushf
cmp
incb
mov
sbb
push
push
mov
out
sahf
out
lahf
dec
ja
into
out
cmp
add
mov
das
push
mov
inc
subb
xor
out
jmp
out
ds
fistps
cmpsb
jns
out
xor
sarl
push
and
pop
flds
xor
mov
stos
out
addr16
lahf
out
stos
icebp
pop
lods
xchg
fdiv
jns
out
lods
pop
fdiv
cmp
xchg
test
test
sahf
out
mov
mov
pop
mov
stc
cmp
pop
test
pop
mov
dec
repz
mov
mov
cmpsl
stc
cmp
and
sarl
adc
mov
out
ds
pop
mov
mov
xor
in
xor
iret
cmp
out
popa
mov
mov
cmpsl
stc
push
mov
inc
imul
lock
out
hlt
dec
sarb
jns
iret
lock
push
xorl
push
ret
xor
ja
fiadds
outsb
push
out
movsb
lahf
cmpsl
stc
pop
xor
push
int3
jl
out
out
inc
enter
leave
jge
out
push
add
data16
outsb
push
pop
xchg
hlt
int3
cmp
iret
sarl
xlat
add
sub
out
ds
ds
outsl
stos
out
repz
out
shlb
sarl
push
sarb
adc
pusha
out
iret
pushf
fcom
aam
movsb
out
xor
fbstp
iret
sarl
mov
xlat
mov
pop
dec
repz
fmuls
sbbb
ficoml
into
imul
imul
shl
fiadds
xchg
or
stc
xor
dec
aam
jmp
in
aad
lock
dec
mov
repnz
jo
dec
pmaddwd
push
jl
int
mov
mov
repz
flds
insb
add
push
insl
or
add
lahf
int3
cvtdq2ps
or
push
inc
aas
sarl
cmpl
pushf
sbb
pusha
push
scas
rorb
ficomps
push
xor
mov
popf
mov
loopne
aaa
int
mov
lahf
out
pop
mov
cltd
nop
insb
shlb
inc
dec
mov
pop
xchg
aas
cmp
rcr
fdivrs
lds
test
or
pop
call
mov
das
bound
cmp
frstor
aas
movntq
out
inc
leave
and
pop
testb
xchg
pop
mov
fbstp
test
add
mov
stos
or
outsl
out
mov
or
push
inc
outsl
dec
ds
das
push
inc
mov
inc
imul
or
mov
dec
mov
leave
gs
daa
dec
jg
dec
mov
pushf
int3
aas
in
mov
ss
push
inc
pop
sub
ds
jmp
outsl
addr16
and
add
aam
rorb
daa
in
loopne
adc
xchg
das
sub
inc
pop
push
push
fists
adc
adc
iret
or
inc
dec
shlb
mov
lahf
dec
enter
jbe
jno
dec
ja
xchg
pushf
dec
xchg
or
mov
filds
mov
push
pop
int
fs
outsb
jp
jb
pop
jnp
add
je
das
je
or
psubw
jg
jmp
cs
add
fiadds
mov
xchg
pop
inc
leave
xchg
lret
iret
les
push
sbb
jo
push
mov
dec
movb
scas
hlt
add
fisttpll
inc
pop
xor
jmp
push
daa
inc
scas
xlat
fldl
push
xchg
push
push
dec
sbb
mov
in
ja
data16
ja
jne
leave
aas
inc
fbstp
leave
leave
in
insl
fbstp
call
cmpsb
scas
and
sarl
pop
pop
push
js
pop
jb
test
es
and
pop
xor
enter
pop
xchg
mov
jnp
adcl
movsb
mov
imulb
dec
je
insb
push
out
lret
push
cwtl
adc
les
xchg
ss
xchg
adc
mov
mov
addr16
sbb
mov
inc
insl
mov
inc
xor
and
daa
xchg
add
inc
xchg
pop
mov
in
mov
jp
jl
mov
mov
scas
dec
adc
scas
addb
sbb
push
scas
dec
das
inc
dec
cmp
das
cmp
scas
or
add
mov
es
mov
inc
sahf
sub
mov
add
add
adc
in
inc
scas
aam
xor
or
out
fs
jb
inc
jb
mov
leave
inc
mov
mov
pop
push
pop
jmp
push
add
add
mov
or
filds
mov
and
cmpsl
and
jmp
push
daa
xor
ret
outsb
in
dec
mov
addr16
adc
jle
xchg
fildl
daa
push
movsb
mov
in
daa
shl
and
add
fbstp
adc
data16
fmul
je
add
mov
iret
test
dec
scas
add
mov
push
adc
lock
stos
daa
mov
lahf
pop
ja
mov
sahf
pushf
pushf
dec
fucom
in
cmc
mov
std
mov
in
add
mov
sbb
cmp
jo
xchg
dec
mov
jbe
fisttpll
setae
fwait
pop
mov
adc
addr16
into
out
in
in
in
cli
push
add
add
sbb
jns
out
or
or
or
les
cmp
dec
xchg
push
lea
cmp
das
push
push
mov
xchg
xchg
add
add
pop
adc
inc
fstl
push
je
inc
adc
stc
add
jns
push
je
out
xchg
push
xchg
sbb
sub
jb
fmul
in
jg
in
and
push
mov
inc
mov
imul
xchg
and
mov
inc
repnz
dec
or
pop
fsub
mov
std
pop
or
pushf
pushf
pop
addb
call
dec
pop
or
dec
pop
psubsb
xlat
sbb
popl
insb
sbb
cs
xchg
sub
add
cltd
popa
mov
xchg
int
add
add
sub
lds
xorps
and
push
bound
repnz
filds
pop
popl
or
add
in
sbb
sub
mov
dec
mov
nop
jmp
in
xchg
ja
call
mov
xchg
pop
enter
mov
dec
ja
cmp
sbb
daa
js
stos
push
xchg
pop
and
into
aam
and
adc
scas
rcrb
xchg
xchg
in
inc
jb
sbb
push
xor
movsb
sbb
push
leave
cmpsl
add
sbb
nop
xchg
pushf
xchg
xchg
push
dec
iret
mov
scas
mov
mov
push
pop
push
jg
push
add
hlt
cld
xchg
add
push
cltd
jmp
or
adc
das
add
jb
cmp
pop
cmpsl
xchg
sbb
js
dec
test
daa
movsb
mov
loopne
aaa
outsl
pop
jp
scas
icebp
in
orb
cmp
fcompl
xchg
sbb
daa
and
cmpsb
scas
and
adcl
bound
xchg
push
mov
mov
scas
pop
and
outsl
jg
in
adcb
sbb
pop
into
testl
inc
rclb
mov
fdivrl
pop
add
mov
xchg
add
cmpsb
out
daa
pop
in
xchg
stos
in
addr16
sub
daa
aam
pop
jg
mov
xchg
incl
jns
dec
dec
and
add
test
pop
mov
dec
dec
add
pop
scas
inc
es
in
mov
cmpsl
jo
leave
sbb
jl
daa
jns
cltd
mov
lcall
movsl
aaa
push
add
repz
movb
loop
mov
mov
xchg
subb
and
cmp
and
cmpsb
inc
add
lock
and
pusha
and
popf
inc
cmp
ja
and
xor
adc
ja
pop
movd
pop
push
pushf
dec
ds
popl
mov
cmp
xor
rcll
mov
fs
pop
jb
pop
nop
jmp
xchg
or
call
mov
aaa
xchg
jmp
push
pop
jmp
inc
pop
add
dec
mov
mov
push
xchg
mov
xchg
stos
test
dec
lds
popl
and
pop
fwait
dec
pop
push
sub
scas
out
mov
mov
add
xchg
imul
push
in
popf
out
push
cvtps2pd
bound
push
jb
sbb
push
fisttps
sub
push
jo
cli
popl
daa
inc
lcall
inc
pop
ja
pop
pop
cmpsb
mov
mov
aaa
lods
push
iret
aam
mov
jmp
ret
shrb
es
jno
xchg
fwait
or
push
mov
pop
push
pusha
es
jne
mov
mov
mov
aam
test
add
xlat
push
xchg
push
daa
cmp
inc
mov
fnsave
push
add
in
sahf
add
and
flds
daa
test
sbbb
scas
arpl
movsl
adc
fsts
pavgw
jne
xchg
xor
es
pop
add
sub
pop
ja
daa
insb
push
daa
jns
pop
xlat
pop
ja
push
cmpsl
push
scas
lcall
js
push
mov
push
mov
mov
repz
cltd
jo
cmp
es
push
mov
cmp
aas
add
cmp
or
push
daa
lret
ds
pop
sub
push
out
push
fildll
test
dec
dec
add
popf
ja
sub
push
xlat
push
dec
aad
in
sti
fcomip
unpcklps
es
iret
aaa
sahf
dec
push
pop
ja
jae
pcmpeqb
push
add
nop
das
lcall
dec
lods
or
aaa
cltd
loopne
sahf
xchg
scas
faddl
add
lahf
adc
insl
jbe
push
xor
in
loop
mov
scas
sub
jo
xchg
daa
and
pop
mov
push
mov
fsubrs
pop
jmp
ja
mov
push
mov
cmp
sub
fs
sub
xchg
push
inc
repnz
ja
nop
fwait
jecxz
leave
icebp
iret
xlat
mov
repnz
jo
addr16
in
mov
in
popf
je
push
pop
ja
inc
pop
movsb
add
jae
mov
cmpsb
push
leave
mov
out
subb
hlt
iret
cld
pop
add
xchg
cltd
std
xchg
pop
adc
cs
andb
aas
arpl
pop
push
cmpsl
jae
cmp
pop
imul
jns
daa
iret
push
mov
in
add
lods
inc
mov
xchg
out
jns
in
cmp
sahf
out
adc
add
repnz
adc
xchg
inc
loope
mov
inc
pushf
xlat
mov
xor
fwait
mov
pop
addr16
das
scas
iret
pop
fcmovne
in
into
fiadds
push
xchg
add
sbb
mov
push
ljmp
pop
xor
leave
repz
inc
dec
xchg
subb
push
movsb
addr16
mov
xlat
orb
jl
cmp
mov
push
xlat
xor
loope
movsb
pop
dec
mov
push
rcl
pop
xlat
daa
adc
daa
movsl
sarb
jg
xchg
dec
xchg
or
movsl
cmpsl
adc
add
sub
xor
mov
xor
sbb
sbb
daa
daa
ret
scas
movsb
add
mov
das
mov
cmp
adc
cs
push
pushl
push
daa
xor
adc
ror
ja
cmpsb
adc
cs
push
outsl
adc
in
xor
cmp
leave
inc
dec
push
add
cmp
fcmovnbe
jg
jno
or
push
xchg
jg
xchg
dec
mov
push
mov
xor
xchg
xchg
test
out
iret
in
xcrypt-ctr
cmpsl
pop
pop
add
pop
add
daa
das
cmpsl
aas
aaa
cmpsl
jo
adc
or
pop
cmpsl
jmp
xchg
xchg
mov
cmp
adc
shll
cmpsl
cmpsl
cmpsl
cmc
pop
sahf
pop
scas
cld
or
nop
cmp
pop
or
test
mov
sbb
inc
test
test
xchg
lods
push
xchg
cmp
pop
ja
mov
test
pushf
mov
test
lret
lock
push
ljmp
inc
fwait
xor
xchg
xchg
or
sbb
cmp
in
test
pop
adc
mov
push
call
test
xor
sti
push
stos
jns
shll
ja
sub
push
stos
cmp
out
pop
mov
mov
iret
subb
loop
iret
xchg
setp
movl
push
aad
add
xlat
popf
fisttpll
push
ss
movsl
in
jle
stos
pop
out
jns
or
sbb
sahf
and
out
jns
cmp
pop
aaa
jns
push
adc
adc
in
push
insl
jne
xlat
sbb
inc
repnz
cwtl
push
outsb
and
push
stos
out
mov
cmpsb
add
push
xor
mov
and
sbb
jb
push
mov
ret
addr16
and
cmp
mov
inc
adc
das
daa
daa
pop
insb
xor
add
cmp
fiaddl
cmp
mov
mov
jl
test
dec
ja
or
mov
sete
movsb
dec
or
lods
cmp
and
mov
lods
aam
les
cmovle
add
push
jns
das
push
in
cmp
jg
push
aas
test
xchg
jnp
les
or
aas
pop
pop
mov
cmp
or
push
mov
adc
adc
dec
popf
cmpsl
ret
ja
mov
inc
mov
lahf
cmp
pushf
and
vmwrite
cmp
cmp
cmp
sbb
pop
adc
out
push
outsl
sub
add
out
in
mov
ss
lahf
enter
jo
pop
inc
cmp
or
test
imul
jl
xchg
pop
mov
add
scas
push
pop
jb
mov
pop
enter
mov
inc
sbb
leave
mov
jo
cmp
xchg
aas
lock
scas
aaa
sub
cmp
in
push
add
dec
scas
pop
push
add
jmp
mov
iret
test
mov
cmp
or
mov
sub
mov
sbb
shl
decl
mov
push
iret
repz
add
add
add
cmp
push
pop
addr16
cmp
repz
xchg
xchg
mov
sub
or
mov
inc
cmp
shll
fwait
jecxz
outsl
xchg
mov
or
hlt
movb
ror
sub
inc
filds
mov
in
sbb
mov
mov
mov
daa
cmp
je
xor
divl
call
pop
pushl
mov
out
incl
jbe
pushf
cmp
hlt
test
leave
leave
leave
in
mov
mov
sub
iret
iret
in
addb
add
add
testb
xor
mov
push
mov
mov
jne
jge
pushl
rorl
inc
addr16
mov
mov
mov
cs
out
into
push
push
dec
cld
mov
mov
jb
mov
mov
aas
push
outsl
inc
jae
outsb
mov
add
sarb
stos
pop
pop
push
or
stc
sub
or
inc
sbb
jbe
xchg
fwait
mov
fadds
sbb
out
sbb
inc
xor
xchg
inc
pop
in
pop
in
or
nop
pop
scas
hlt
fstps
xor
addr16
lcall
mov
mov
mov
dec
ja
or
push
iret
jae
into
pop
out
addr16
outsl
add
and
outsb
daa
jg
xchg
or
pop
and
mov
inc
push
mov
inc
lahf
int
xor
loopne
lock
add
ja
mov
adc
mov
cmpsl
push
mov
mov
dec
ja
mov
mov
xchg
fwait
in
out
in
mov
mov
jg
mov
inc
cmpb
and
mov
mov
ret
jmp
inc
mov
fldt
and
ja
daa
daa
pop
je
test
out
fisubrs
add
add
xlat
pop
in
mov
inc
fwait
dec
incl
jb,pn
inc
jb
push
cwtl
jae
into
inc
xchg
add
in
in
lods
aas
jl
and
push
call
popf
fadds
adc
inc
cmp
sbb
in
fdivl
aaa
cvttps2pi
jg
mov
jmp
aaa
mov
cltd
mov
cmpsl
mov
andps
leave
dec
int3
xlat
loop
in
stos
pop
leave
inc
adc
mov
mov
inc
leave
in
jbe
mov
arpl
add
test
cmp
cmp
sldt
cs
fmulp
repz
jns
outsb
cmp
das
femms
rorl
out
lock
out
out
adc
inc
bound
outsb
cvtpi2ps
xor
jns
xchg
cmp
dec
push
das
stc
dec
jno
cvtps2pd
sahf
fldt
scas
xlat
xchg
setle
sbb
jns
xchg
mov
lock
xchg
ljmp
sahf
out
xchg
push
add
add
iret
rep
fstpl
pop
inc
or
mov
or
and
sbb
mov
lcall
mov
mov
mov
xchg
mov
decl
cmp
jnp
mov
addr16
out
in
add
xchg
leave
jae
popf
mov
inc
inc
jb
pop
loopne
mov
adc
and
sub
dec
push
add
fmull
dec
dec
mov
add
decl
dec
addr16
aaa
loopne
insl
pop
pop
mov
push
aas
jnp
mov
mov
fsub
paddsb
add
sub
mov
mov
getsec
mov
cmpsl
aas
xchg
dec
mov
mov
mov
outsl
jns
out
test
mov
sahf
xchg
out
pop
rolb
rolb
fsub
mov
cmp
loopne
aaa
or
daa
iret
sbb
push
add
sub
popf
xor
xchg
dec
push
and
leave
in
pop
xchg
cmpb
popf
pop
mov
mov
test
fcmovne
int3
aam
fsub
jb
loop
in
xchg
adc
xadd
nopl
add
das
mov
cmp
inc
rcr
repnz
pusha
dec
push
inc
xor
mov
addr16
addr16
jb
xchg
das
popf
movsl
lods
xchg
xchg
out
clc
rcr
sbb
loopne
xchg
xchg
xor
es
rorl
shrl
ja
addr16
jb
pop
jmp
dec
ja
jno
xchg
jbe
addr16
outsb
push
sarb
fwait
sub
dec
sub
daa
iret
fbstp
fdivl
xchg
aaa
push
je
out
jg
push
add
clts
repnz
repz
lock
inc
inc
ret
cmp
fnstsw
ja
movq
daa
xchg
leave
in
ss
mov
mov
leave
leave
into
loopne
push
push
sbb
or
testl
cmovs
ret
mov
pop
test
data16
mov
mov
iret
inc
mov
mov
repz
push
ret
fbld
jo
xchg
or
js
mov
mov
or
and
les
je
pop
les
hlt
mov
outsl
ja
push
pop
outsb
daa
mov
xchg
jg
test
or
daa
lds
iret
les
pushf
cmp
insl
xlat
out
fisttps
out
jae
dec
ds
adc
vunpckhps
ss
lds
pop
push
in
insl
div
fbstp
cmovno
out
dec
xorps
out
sahf
xlat
popf
insl
idivl
or
mov
mov
push
int3
push
dec
popf
call
out
sub
incl
das
xchg
sub
add
xchg
addr16
jne
lret
add
ja
outsl
pop
mov
add
gs
pop
clts
repz
repz
jne
jge
test
outsb
daa
iret
or
or
pop
iret
leave
mov
push
into
xlat
es
and
cli
jns
inc
jg
daa
push
add
xor
dec
cmp
cmp
aaa
movsb
jl
adc
mov
inc
popf
out
xchg
addr16
daa
rcrb
dec
pop
scas
add
stos
push
aam
add
movsb
fildll
fildll
push
xlat
mov
fistpll
iret
xbegin
test
push
or
jp
leave
pop
inc
enter
enter
dec
pop
xor
orb
add
out
in
pop
addr16
addr16
in
cltd
pop
mov
fucom
mov
test
ror
incl
out
or
add
leave
fcmovne
pop
cmp
pop
dec
cmova
pusha
mov
jle
popf
fsubl
movsl
mov
je
out
add
cmp
xrelease
out
or
iret
repz
or
or
lret
out
or
or
push
lret
xchg
iret
push
xor
lret
xchg
jno
punpcklwd
sahf
add
test
mov
pushf
mov
setl
mov
pop
paddd
lret
pop
cmpsl
cmp
outsb
add
xchg
ljmp
lret
add
xor
pushf
pop
outsl
je
pop
rolb
fistpll
mov
cld
mov
add
or
pusha
stos
dec
aad
lret
scas
inc
inc
push
sub
jbe
addb
lret
cmp
mov
iret
leave
lods
psraw
add
neg
in
enter
int3
or
or
out
and
or
repz
dec
push
or
iret
push
pshufw
cmp
repz
xchg
xchg
adc
cmp
repz
adc
adc
iret
push
mov
es
repz
ficomps
jmp
prefetcht1
push
adc
adc
adc
cmp
cmp
adc
push
or
mov
test
ret
add
pusha
adc
cmpsl
inc
js
inc
mov
or
push
cmp
je
push
notb
dec
or
int
push
imull
nop
push
dec
ja
lahf
aaa
xchg
pop
xorl
dec
fsubs
or
call
pushf
xor
mov
iret
int
mov
inc
jb
pop
repnz
addr16
gs
jg
pop
iret
into
addr16
xor
and
sbb
ret
fisttpl
popa
into
jg
into
jno
jns
inc
mov
or
in
in
or
rorb
mov
rclb
pop
dec
jb
and
iret
xor
pushf
scas
icebp
jbe
push
addr16
iret
jmp
cs
xchg
iret
ja
xchg
xorl
xchg
pop
xchg
into
iret
in
in
push
add
out
add
and
rclb
push
sub
sar
ja
test
rcrb
xchg
xchg
xchg
xchg
rcrb
insb
sarb
mov
je
rorb
dec
movsl
xlat
or
fcomps
jbe
cmp
fsubp
out
psadbw
negl
in
push
rcrl
push
pop
push
push
mov
push
push
or
es
or
cmp
repz
push
xchg
outsb
mov
fisttpll
popa
push
add
add
jns
pop
outsb
pop
xor
cmpsl
call
push
add
or
iret
rcl
pop
or
inc
pop
xor
popa
add
add
inc
popa
lahf
nop
popa
sahf
xlat
pop
rorb
dec
push
push
add
cmp
in
add
cs
add
fwait
push
fistpll
cmovbe
subl
enter
js
pop
mov
xor
add
and
dec
ja
daa
insb
popf
pushf
pop
adc
cmp
les
int3
and
jns
dec
rcll
rcr
or
lea
shll
roll
dec
ja
inc
mov
xchg
add
xor
cmpl
leave
leave
add
xchg
mov
mov
iret
sti
push
je
xor
adc
nop
jmp
cmp
xchg
aam
pop
aam
fs
cltd
push
pushf
aam
cwtl
cmpsb
pop
jmp
mov
movl
xlat
pop
inc
jl
push
imull
adc
mov
rolb
clc
es
inc
into
test
add
mov
sbb
xchg
aad
sbb
and
sub
aad
xchg
push
pop
punpcklbw
push
pop
ja
lock
scas
push
lahf
sbbb
xchg
pop
aaa
jns
pop
add
jns
sahf
or
iret
shll
out
xchg
cmp
aad
js
inc
push
in
in
cmp
icebp
or
pop
iretw
adc
mov
test
cmp
fsubl
sahf
sarb
divl
outsb
inc
leave
mov
addr16
jg
xchg
dec
cmp
push
cmp
in
push
add
clts
decb
inc
sahf
push
xlat
adc
and
in
dec
sub
cmp
push
icebp
in
dec
xlat
aas
push
pop
mov
add
xlat
xlat
push
or
pushl
jb
ja
movsb
lods
in
in
jbe
pop
mov
push
loope
in
scas
push
jecxz
and
pop
not
add
pop
push
mov
fsubrs
pop
push
and
scas
fadd
fildl
cmovg
aas
mov
sbbb
fsubrs
addl
push
leave
imul
pop
mov
add
loopne
mov
cmp
ltr
pop
jb
packsswb
sub
or
xchg
rcrl
or
mov
nop
push
xor
sarl
push
cmpsl
and
hlt
nop
outsb
add
push
ja
sbb
push
mov
pshufw
jae
jp
push
lods
popf
push
jo
add
pop
add
ja
cli
ficompl
cmp
fisubl
xchg
mov
cmp
js
xchg
mov
xchg
jb
scas
fnstsw
add
jno
leave
push
scas
loopne
jmp
xor
stc
add
dec
sahf
out
aaa
or
xchg
adc
add
aaa
jns
pop
add
xchg
xchg
add
or
or
xor
cmp
or
das
or
incb
dec
fstpt
insb
ds
adc
insb
insb
fisttpl
icebp
push
out
ja
leave
leave
add
xchg
jo
rcrb
mov
jb
clts
fsub
add
in
or
lock
add
fistpl
or
insl
inc
cmp
mov
fsubrl
aaa
push
cmovbe
dec
sahf
out
aaa
pop
push
add
push
iret
repz
scas
push
mov
dec
jbe
jne
pop
iret
into
dec
jnp
out
outsb
cs
push
pop
iret
repz
push
adc
repnz
sahf
movups
leave
in
xchg
push
pop
fsubp
fwait
cmp
leave
out
negb
decb
in
xchg
scas
sbb
push
pop
push
push
out
cmp
mov
es
and
jns
xchg
cs
ds
es
sahf
out
fisttpll
sub
sub
jns
out
pop
sub
outsb
out
sahf
out
jbe
jle
stc
mov
setbe
lahf
xor
js
mov
insl
mov
fadds
stc
addr16
pop
gs
das
mov
mov
aas
push
mov
or
int
outsl
add
rcrb
ficomps
xlat
pop
fiadds
mov
insl
ss
jb
jg
add
adc
pop
fbld
mov
daa
mov
jns
outsb
jmp
rcrb
sysret
fisttps
fucomi
in
in
stc
das
add
dec
pi2fd
daa
push
xor
jae
mov
jp
test
adc
adc
jns
test
mov
out
sahf
out
sbb
sbb
sahf
out
sahf
sbb
sbb
sbb
jp
ds
sbb
and
and
and
jns
out
dec
and
and
out
je
subl
mov
fwait
sub
jns
sub
sub
out
fsubrl
jmp
xchg
hlt
add
aas
or
pop
pop
loope
aad
and
lahf
sub
filds
aas
iret
repz
push
daa
pop
es
outsl
and
and
and
repz
cmpsb
pop
mov
mov
cmp
sbb
sbb
repz
repz
sbb
pop
out
ds
adc
loop
adc
iret
repz
sub
fwait
cmp
repz
inc
dec
dec
bswap
jmp
scas
push
dec
pop
pop
push
jle
pushf
pushf
fdivrl
adc
outsb
daa
iret
repz
jg
das
xchg
jns
out
dec
mov
mov
add
loop
loop
fcmovne
stos
in
pop
jecxz
movntq
xchg
wrmsr
add
add
cmp
popf
inc
xlat
push
push
inc
jle
sbb
jg
jecxz
jns
out
or
jg
repnz
sahf
mov
or
repz
push
movzwl
rcll
iret
repz
adc
adc
push
adc
loop
std
pop
jle
in
push
sahf
out
sahf
sbb
sbb
sbb
sbb
sbb
sahf
out
pop
pusha
and
fisttpll
and
das
mov
outsl
mov
in
jbe
movsb
scas
lods
iret
mov
mov
xsaves
rorb
pop
fidivrl
out
push
in
in
adc
js
out
adc
adc
add
lea
sbb
push
pop
in
or
jns
out
or
js
or
dec
pop
in
in
cmp
and
jl,pt
es
nop
das
dec
push
or
xor
xor
pop
sti
jno
mov
push
fildl
out
out
pop
cmp
negb
add
filds
out
push
out
repz
repz
nopl
adc
fcmovne
cs
adc
jae
jb
push
pop
pop
pusha
push
lea
iret
sbb
out
sbb
and
mov
inc
xor
out
je
xlat
pop
push
daa
rorl
add
movsb
sahf
fwait
and
in
in
mov
sbb
leave
leave
leave
leave
and
xor
repz
leave
inc
dec
xorps
cmp
leave
bound
adc
pmulhuw
jbe
mov
in
in
mov
ret
sahf
out
in
rcr
pop
out
out
jns
icebp
cld
and
cmpsb
xchg
iret
enter
test
sub
mov
push
add
inc
pop
dec
sahf
out
dec
push
add
in
pop
insb
je
jl
or
dec
aaa
jns
mov
push
pushf
movsb
dec
lods
push
adc
cmp
mov
sub
pop
scas
push
lock
movsl
adc
in
pop
jmp
out
add
add
add
xor
out
mov
or
push
or
jns
cmp
repz
test
adc
adc
dec
outsb
daa
iret
adc
out
repnz
int3
mov
sahf
or
adc
pop
push
cmp
leave
repz
xor
aas
iret
leave
repz
dec
pop
push
pusha
and
repz
cmp
jbe
xor
and
xchg
fcmovne
lods
mov
sahf
xchg
xchg
ftst
out
cs
cltd
loop
out
add
xor
fstl
jns
pop
add
and
sbb
pop
jmp
cmp
repz
add
add
cmp
addl
or
sahf
or
or
pushf
pushf
cmp
ret
lret
shl
pushf
pushf
pushf
fninit
jmp
pop
loope
leave
repz
add
das
or
fucom
jns
pop
adc
sbb
sbb
jns
and
sub
sbb
xor
dec
cmp
and
push
leave
cmpb
vmread
leave
leave
leave
orb
leave
mov
in
mov
inc
lds
int
or
jl
cmp
xchg
fcmovne
pop
pop
or
push
mov
mov
in
filds
or
push
in
jns
out
push
or
jnp
dec
pop
aaa
prefetch
mov
jbe
jg
lahf
mov
mov
jns
out
aad
loop
in
out
jns
clc
syscall
out
ficompl
repnz
sahf
out
hlt
sbb
add
scas
fwait
mov
push
sbb
and
sub
out
pop
ds
jg
out
lahf
push
mov
mov
sbb
jnp
sub
sub
sub
out
out
mov
jg
cs
out
sahf
das
jne
xorb
repz
xor
mov
leave
lods
mov
les
sahf
rclb
cmp
cmp
cmp
aaa
jmp
out
aas
mov
cmp
cmp
iret
mov
sahf
out
rol
iret
pminub
jns
out
inc
lock
std
inc
aaa
cmp
repnz
pop
lock
and
dec
sub
sahf
adc
add
pop
shrb
in
cmp
dec
mov
jge
sbb
cmpsb
into
mov
lock
jecxz
push
mov
outsl
xchg
push
iret
repz
add
add
ja
cmp
or
test
in
or
cmc
jns
fwait
push
push
push
sbb
out
sahf
out
adc
aas
iret
repz
sahf
adc
adc
adc
outsl
jp
pop
sbb
mov
nop
fwait
pop
mov
fsubrp
in
sbb
push
and
jns
jns
stc
repnz
dec
cmp
bnd
call
rcpps
xlat
pop
repnz
mov
and
ja
mov
push
add
out
mov
ror
xlat
fdivrl
cmp
loop
repnz
iret
jnp
mov
add
push
push
or
cmp
and
dec
xor
cmp
jg
outsl
cmova
pop
push
repz
fistpl
unpckhps
push
cmp
pop
jle
mov
sbb
sbb
ror
inc
hlt
iret
repz
mull
push
loope
push
in
and
out
cmpsb
sub
push
daa
daa
iret
repz
sbb
and
cmp
rep
cmovg
sub
movaps
mov
xor
mov
mov
out
push
add
add
add
jns
out
add
mov
in
out
aas
idivl
lahf
pop
cmc
inc
xchg
out
and
xor
xor
jmp
int
ficomps
dec
cmc
iret
push
cmc
out
pusha
push
push
out
mov
imul
push
or
or
sahf
out
cmp
ficompl
pmulhw
jl
out
lock
adc
idivb
testl
jl,pt
cmp
sub
xor
fsubrp
idivb
out
aas
push
sbb
out
sahf
out
fs
outsl
pop
jns
xchg
xchg
jl
xchg
and
and
outsb
mov
ror
fmul
jecxz
stc
les
loopne
notl
test
pop
and
inc
jg
sbb
pop
dec
test
sub
daa
fldl
mov
lahf
aas
je
outsl
jmp
add
push
cmp
mov
push
add
jbe
sahf
out
addl
out
out
or
push
or
pop
jle
negl
or
jb
adc
in
div
testl
femms
adc
daa
push
adc
xor
push
sbb
sbb
jno
clc
jg
push
test
add
clc
bswap
leave
pushf
fidivrl
clc
dec
sahf
pop
cltd
aas
clc
push
pop
std
mov
or
adc
inc
sbb
sub
cmp
inc
cmovnp
adc
iret
repz
pop
push
adc
adc
popf
jbe
cmp
sahf
out
xchg
sbb
xchg
out
test
jns
out
pop
les
int3
and
aam
and
lret
enter
stc
decl
cli
cli
das
shrb
push
cli
push
add
ds
dec
pop
push
repnz
cmp
bound
ds
fwait
cmp
sub
movntq
cmpsl
push
cltd
shld
cmp
scas
adc
mov
rcr
das
out
nop
popa
jb
jg
cli
cld
cli
enter
or
adc
sbb
cmp
fisubrs
push
pop
xor
out
cltd
mov
popa
sahf
out
sahf
and
and
sbb
dec
lea
cwtl
sti
out
add
addr16
es
inc
inc
decl
mov
mov
sti
inc
sti
add
sbb
cld
das
dec
cld
cmp
mov
cld
and
push
mov
cld
fcmovne
shrl
syscall
cwtl
mov
sahf
scas
or
pushf
je
add
mov
das
lock
sbb
adc
sub
xor
out
sahf
out
dec
push
mov
sahf
lods
sbb
mov
sbb
sbb
daa
stc
std
iret
sbb
cmp
sahf
aaa
pop
push
and
and
sahf
out
orb
sahf
out
sub
jbe
das
sub
sub
cmp
push
das
fdivs
jecxz
mov
xor
out
xor
pop
call
aas
ud0
sbb
or
fmull
cmp
ds
std
pop
in
mov
lahf
push
jne
cmp
out
aas
scas
xchg
std
inc
shrb
loope
xchg
mov
mov
xchg
add
aas
seto
out
outsb
test
mov
push
jns
mov
mov
loope
jmp
out
in
testl
jne
comiss
push
adc
sahf
ja
cmp
cmp
adc
mov
imul
in
jbe
cmp
mov
iret
leave
leave
lods
mov
out
popf
fisttpl
out
icebp
ja
jmp
sidtl
dec
cld
cs
popf
mov
punpcklwd
xchg
out
sahf
insb
sub
sbbb
scas
das
cld
cs
add
sbb
xor
adc
sbb
repnz
xor
lea
mov
cwtl
movsb
lahf
scas
btrl
jb
rcr
dec
mov
aaa
inc
add
popa
test
xchg
mov
mov
add
sahf
add
pop
xchg
in
in
push
pop
lahf
cmpsl
mov
jns
shlb
mov
imul
add
add
fwait
mov
add
sti
pop
repz
xchg
jo
push
aaa
in
shll
jle
inc
iret
test
sbb
adc
push
adc
push
mov
mov
outsb
fisttps
das
testl
jmp
mov
data16
add
es
push
or
add
dec
lods
push
inc
stos
stos
lahf
add
pusha
dec
add
dec
pop
ss
add
lock
pushf
mov
cs
inc
push
adc
push
iret
or
sbb
aad
out
inc
pushf
adc
outsb
pop
inc
or
or
dec
aaa
xlat
push
ficoml
aaa
xlat
add
insl
inc
outsl
das
pop
mov
jbe
push
out
sahf
adc
pop
fmull
sahf
or
or
aaa
or
jbe
xchg
scas
or
daa
in
pop
test
leave
leave
in
xor
addr16
das
push
xorps
cmp
jae
insl
push
and
jb
cs
orl
mov
xchg
sub
in
in
sahf
mov
in
shll
pop
das
cltd
pop
shlb
xor
dec
loope
sbb
adc
adc
xchg
adcb
mov
add
jno
and
push
imul
imul
pop
mov
loope
sbb
testb
add
movsb
add
addr16
mov
andb
fisttps
mov
jb
lahf
loopne
inc
jle
test
shll
mov
mov
add
mov
in
call
nop
pop
jle
adc
push
ficompl
fisttpl
pop
push
pop
fisubrl
xor
fcomp
loopne
jb
jle
andb
movsl
jns
xchg
nop
out
sahf
out
mov
sahf
insb
pusha
push
dec
inc
cmp
sahf
out
cmp
sub
out
sahf
out
and
adc
sarl
or
and
in
and
iret
repz
push
faddl
aam
shlb
mov
nop
into
je
iret
repz
push
pop
push
dec
repz
jns
inc
cmp
sbb
sahf
out
out
and
aam
mov
jns
mov
repz
jo
pusha
push
fmulp
repz
xor
push
or
iret
sarl
call
cmp
mov
pushf
push
je
pusha
sub
add
icebp
and
pop
outsb
pop
fisubrl
cmpb
lock
js
clc
mulb
lret
incl
dec
hlt
xor
jecxz
addr16
sbb
es
push
stos
loope
mov
out
or
imul
adc
xchg
aam
popf
loopne
jo
lock
call
push
mov
push
inc
jg
mov
mov
call
add
mov
inc
sgdtl
push
mov
jg
xor
adc
mov
addb
adc
add
int3
or
in
ror
test
mov
xor
ss
outsl
popl
inc
insl
add
xchg
xor
adc
cs
in
add
jg
adc
outsb
add
stc
pop
mov
jl
out
repnz
adc
es
sbb
into
xchg
sbb
jns
sbb
sbb
push
xor
pusha
and
int
mov
push
adc
ds
and
cmp
fisttps
out
iret
sbb
adc
aam
sahf
out
sahf
rorb
or
adc
pop
inc
sbb
fcompl
cmp
repz
sub
and
jns
repnz
push
and
pushf
out
sahf
adc
and
sbb
clc
aaa
inc
out
subl
pop
outsb
ret
popa
ret
imul
mov
xchg
cld
xor
aas
orb
xorl
fcmovnbe
repz
repz
pop
js
mov
mov
jnp
repz
xor
dec
insl
add
out
fidivrs
push
pop
ja
mov
js
xor
jae
das
push
dec
insb
inc
or
sub
dec
push
repnz
mov
enter
cli
or
or
ret
movnti
adc
inc
lods
dec
push
pop
and
sbb
mov
sbb
rorl
and
sahf
mov
sub
inc
rcrb
and
sbb
jmp
inc
jno
xlat
xchg
inc
push
add
inc
stc
mov
adc
mov
push
decl
js
inc
outsl
loopne
jmp
xchg
test
mov
cmp
incl
fisttpll
jmp
stos
push
inc
mov
repnz
test
pop
stos
clc
scas
adc
jmp
inc
jmp
aam
imul
loope
jp
iret
inc
gs
xchg
push
cmpsb
scas
mov
or
decl
leave
dec
dec
pop
inc
in
xchg
cmp
xor
dec
cmpsl
in
cmp
sahf
xchg
jg
lcall
pop
cmpsb
lock
mov
popa
sar
mov
sbbb
xchg
xor
clc
repz
mov
subb
fwait
xchg
and
sti
iret
int3
jbe
add
int3
add
aas
jno
or
mov
mov
cmp
dec
lea
aas
ret
shrl
mov
icebp
aas
rorb
and
sbb
lds
mov
insb
scas
add
aas
xor
aad
mov
inc
std
std
into
popa
test
ja
stos
in
das
dec
pop
loope
les
aas
xchg
les
jne
int
mov
addr16
push
mov
xchg
aas
and
loop
mov
jp
popa
push
pop
sar
jle
push
jl
mov
das
lea
mov
inc
inc
aas
movsl
jmp
jg
ljmp
aas
jge
mov
inc
rcr
push
arpl
int3
and
call
cmp
jp
cmc
jmp
cmp
mov
cmp
std
xlat
cmp
mov
sbb
decl
rolb
jne
fldt
cmp
jno
shlb
pushl
out
dec
nop
pop
cmp
fisubl
xor
push
lahf
inc
pop
mov
sub
dec
jmp
sub
scas
into
imul
faddp
jge
call
mov
xchg
cmp
push
xor
std
jmp
sbb
gs
std
orl
pop
ficomps
frstor
jb
into
or
inc
add
notb
fmull
xlat
pop
push
add
nop
mov
inc
inc
push
dec
aam
filds
pop
dec
dec
inc
push
dec
inc
aaa
xor
mov
mov
jg
mov
imul
inc
aad
mov
jo
popa
push
outsb
jbe
imul
mov
sub
outsl
js
mov
mov
sbb
and
stos
dec
push
push
cwtl
mov
add
sub
dec
push
and
xor
add
push
inc
dec
push
inc
push
nop
sbb
jo
jb
push
lea
inc
test
lods
xor
gs
gs
mov
cmp
ds
arpl
and
mov
dec
sub
dec
outsl
push
dec
pop
mov
push
push
xchg
xchg
add
je
out
xorb
test
adc
das
pusha
add
push
fs
adc
xchg
xor
aas
roll
dec
mov
inc
or
dec
daa
daa
inc
hlt
out
fisttpl
imul
xor
inc
jg
fdivs
jl
inc
jns
dec
lahf
push
xor
les
push
cmp
mov
data16
jns
add
push
test
or
dec
in
inc
pop
and
sbb
sbb
out
dec
push
dec
dec
and
jae
jbe
push
push
or
dec
test
push
mov
xchg
rclb
mov
mov
popf
and
popa
jne
arpl
or
sbb
outsl
dec
dec
pop
xlat
out
add
push
sbb
add
pop
or
or
inc
xchg
push
stos
jbe
add
rcl
fnstsw
cli
dec
sub
mov
insl
shlb
das
addr16
pop
mov
divl
push
negl
imul
push
arpl
outsl
push
jb
or
or
lds
sarb
push
xlat
push
mov
jp
lock
push
aad
and
gs
push
inc
dec
pusha
push
xacquire
sbb
xor
push
push
stos
mov
inc
arpl
push
push
sub
mov
pusha
out
test
pop
jg
stos
pop
insb
outsl
xchg
insl
add
pop
xchg
loopne
rolb
mov
mov
data16
mov
outsl
xchg
insl
add
outsl
ja
inc
xor
ja
add
xor
ja
xor
inc
mov
push
pop
cmp
bound
push
xor
mov
add
icebp
ja
pop
dec
mov
adc
stos
sub
push
and
fiaddl
stos
enter
push
and
jb
leave
dec
sbb
sub
mov
inc
jg
mov
inc
or
iret
aas
incl
pop
dec
push
lahf
adc
enter
and
movsl
stos
inc
out
xchg
dec
mov
jge
es
dec
dec
xchg
sbb
sub
js
xchg
push
dec
lea
cmpsl
mov
adc
dec
outsl
push
shrb
push
dec
push
push
rorl
push
jne
les
outsl
loopne
loopne
loopne
push
sub
outsl
addr16
cmpsb
iret
ss
lea
push
rol
insl
pop
arpl
outsb
sbb
das
xlat
pop
insl
mov
cwtl
jns
daa
adc
push
jl
dec
repz
out
or
iret
repz
mov
jl
sub
aaa
int3
test
inc
insb
push
out
jns
add
js
nop
add
jns
push
and
lahf
incl
inc
addb
xchg
xor
ja
popa
push
out
mov
les
hlt
push
xor
jmp
mov
mov
push
movsb
mov
aad
mov
rclb
mov
sub
mov
nop
adc
push
jno
repz
test
ficompl
jmp
mov
call
hlt
movl
imul
std
in
leave
mov
add
insb
push
arpl
decl
cli
cmc
or
outsb
cmp
imul
addr16
add
aam
dec
std
test
decl
movsl
cli
test
xor
leave
mov
lods
jecxz
fdivs
jne
mov
fcompl
shrl
cmp
ficoms
push
call
enter
mov
and
mov
cltd
xchg
mov
mov
or
decl
mov
jl
das
adc
stos
sbb
data16
inc
fdivl
pushl
add
aad
mov
mov
movsl
in
lahf
xor
mov
js
out
mov
stc
mov
or
mov
cmp
fs
add
hlt
push
imul
insb
sbb
xor
dec
add
in
xchg
push
insb
jnp
jmp
or
fnstenv
adc
mov
mov
bound
or
adc
gs
aam
pop
popa
mov
into
pop
cmp
mov
inc
movsl
fisttps
xchg
fadd
shll
jmp
outsb
xor
mov
sarb
pusha
fidivl
add
in
add
pop
dec
or
cmp
add
daa
adc
or
decl
and
test
or
mov
popa
into
push
stc
ficomps
leave
fldcw
and
call
pop
cmp
mov
cmp
lods
insb
mov
in
mov
mov
add
pushl
ljmp
fildl
push
fdivl
or
test
fs
ds
or
ljmp
or
push
in
decl
xchg
daa
scas
add
mov
pop
jge
xchg
shlb
add
inc
jmp
pop
push
test
ss
sbb
push
imul
aam
loopne
rorl
jp
adc
dec
frstor
fistpll
mov
mov
aad
mov
call
xchg
shll
inc
fdivrs
push
repnz
addr16
cmpsb
fldl
mov
dec
ss
fisubrl
or
scas
idiv
decl
ss
jp
inc
ret
out
pusha
fists
addr16
mov
jns
imul
andl
call
outsl
and
xchg
ja
int3
add
mov
das
es
lds
or
lcall
sub
mov
cmpsl
call
ret
shlb
sbb
ret
es
pushf
outsl
cli
jmp
insl
add
ss
jmp
addr16
jb
push
hlt
orb
call
mov
jnp
sbb
xchg
or
out
fdivrl
fisttpl
aam
roll
inc
loop
icebp
clc
mov
push
int
mov
mul
ja
outsl
ja
mov
out
cli
pushl
jo
ud0
cmp
pop
or
adc
sahf
gs
clc
sar
imul
ljmp
mov
loop
mov
push
addl
mov
cmp
cmpsl
notl
pusha
rorb
ljmp
ds
push
scas
fcompl
fldenv
filds
cmp
aaa
push
scas
mov
fidivrs
pushl
xor
mov
lret
mov
cmpsb
mov
sarb
sub
ficoms
fldenv
jp,pn
mov
dec
popa
les
sbb
xchg
sub
aaa
mov
or
sbb
or
out
add
iret
push
add
movsl
dec
call
test
gs
mov
inc
cmpsl
outsl
inc
jne
mulb
imul
pop
sub
aam
imul
mov
fistps
jbe
push
jns
or
std
outsb
arpl
arpl
mov
sbb
insl
jns
add
jne
outsl
insl
addr16
xchg
fildl
xor
out
or
push
popf
testb
mov
xchg
push
outsl
ja
mov
js
inc
insl
bound
inc
out
sub
aad
mov
inc
inc
js
in
bound
push
dec
orl
jno
fistl
and
aas
pop
inc
cmp
pop
bound
xor
aaa
cmp
imul
pop
popa
arpl
cmp
arpl
or
xor
dec
popa
add
bound
popa
add
jbe
pop
sbb
jnp
icebp
xor
inc
xchg
notb
inc
or
insb
add
lock
fmull
sub
fbld
inc
rorl
ss
jbe
jnp
push
arpl
popl
add
sbb
ret
lcall
fadds
sub
sub
xchg
inc
sbb
inc
and
xor
inc
fstl
push
rcrb
dec
insb
xor
adc
aaa
je
aaa
push
inc
push
mov
add
ljmp
pop
cltd
and
jae
mov
adc
push
dec
push
mov
nop
lods
stos
aaa
inc
or
fisubrs
xor
ficomps
add
jo
inc
inc
add
ds
jnp
add
mov
iret
int
push
dec
dec
sub
xchg
pop
fistpll
xchg
ja
outsb
jne
lods
mov
and
mov
lret
pop
xor
jne
xor
or
add
ss
push
mov
or
mov
aas
jle
stos
pusha
aaa
cltd
dec
jo
add
mov
dec
or
inc
mov
inc
outsl
pop
mov
add
lahf
mov
fwait
incl
or
xchg
imul
adc
rorb
lds
dec
sbb
adc
push
push
js
popa
jo
lahf
or
add
push
outsl
outsl
test
mov
cmp
jno
lds
and
sub
sub
in
nop
test
pop
cmp
aam
pop
ljmp
xor
sarl
jo
test
xchg
pop
adc
insb
jns
das
mov
xor
popa
jb
test
addr16
adc
push
nop
adc
insb
or
cs
test
clc
inc
push
bound
adc
xor
ret
test
ja
pop
adc
xor
xor
add
adc
mov
aaa
pop
pusha
jl
adc
loopne
push
pop
pop
orb
scas
addr16
sub
and
mov
scas
xchg
fisubl
xchg
movsl
sahf
aas
mov
popa
adc
jg
push
outsl
rcll
and
aaa
hlt
mov
insb
mov
push
loop
aaa
pushf
and
cwtl
mov
adc
dec
lds
daa
push
inc
lds
aas
pop
inc
and
and
and
add
push
inc
sbb
push
fisubs
aaa
adc
or
mov
dec
pop
nop
inc
add
mov
push
clc
or
pop
mov
int
mov
pusha
adc
and
das
add
add
mov
add
in
or
dec
push
and
cs
and
mov
cmpsb
dec
shrd
popa
incl
lea
repz
es
mov
out
ud0
lahf
jge
jmp
repnz
in
push
pusha
ljmp
lret
cli
cmp
sub
arpl
stc
mov
or
push
inc
es
add
dec
xchg
pop
loopne
add
or
or
push
jl
repnz
daa
aam
cmp
add
pop
add
fcoms
add
jg
imul
adc
into
or
movb
sub
mov
fsubrs
js
push
loop
pop
and
rclb
loopne
add
cs
cmpb
popf
add
les
lods
add
loopne
and
jb,pn
dec
push
pushf
shl
and
sti
push
repnz
cs
mov
fs
dec
or
sbb
insl
rcrb
out
aam
inc
dec
add
iret
add
xor
pop
or
fiaddl
clc
add
push
push
mov
add
cs
push
jmp
add
jg
push
mov
lea
mov
lret
xchg
cltd
clc
xchg
dec
jne
pop
mov
sbb
mov
repnz
dec
lea
cmc
mov
ret
mov
jbe
pop
ja
les
push
push
sbb
jo
roll
clc
divl
call
imul
and
cltd
ja
jne
jmp
mov
movsl
mov
punpckldq
mov
test
mov
push
int3
loope
and
mov
xchg
popf
push
mov
mov
mov
or
or
jl
movsl
xchg
es
les
test
add
enter
sbb
movsb
or
clc
cmp
adc
mov
push
adc
mov
imul
and
push
mov
sbb
push
movzbl
or
rcll
cmpsb
std
call
mov
adc
inc
invd
lret
mov
add
adc
mov
sbb
pop
xchg
call
xor
add
add
cmp
sbb
fstps
inc
push
push
movsb
xchg
loopne
pop
fcoms
and
mov
std
inc
call
or
loope
and
sbbb
push
mov
push
dec
ret
mov
sub
leave
sbb
pushf
and
aad
sub
xor
push
mov
jns
inc
imul
add
adc
in
push
sub
push
mov
fcomps
push
sti
subb
sub
dec
add
mov
and
jne
push
imul
imul
cmpsb
loopne
rclb
insl
jo
imul
mov
pusha
adc
cld
add
inc
les
fadds
fs
fdivp
xorb
mov
push
or
pusha
loop
cmpsl
mov
leave
push
out
or
adc
pop
pop
inc
or
add
fisubl
out
mov
push
push
and
xor
scas
loope
imul
or
add
xchg
sahf
jp
dec
mov
push
ret
fs
jmp
aad
loop
push
nop
sbb
das
pop
push
loop
lea
sti
mov
sbb
push
movsl
push
xor
push
dec
push
test
subb
and
es
push
aam
je
outsl
pop
incl
test
movb
dec
adc
add
outsb
jnp
or
jae
aam
lea
into
out
or
lds
dec
mov
sub
adcl
arpl
imul
mov
in
push
pop
pop
aam
je
shll
add
pushf
jbe
add
and
or
rclb
add
movsb
roll
inc
repnz
sub
xlat
hlt
or
cmp
repz
movsl
mulb
sbb
jmp
mov
dec
jge
xchg
sbb
insb
cltd
int
push
aas
adc
xchg
jecxz
dec
cmp
scas
fcoml
and
xor
loop
jo
inc
ljmp
imul
pop
je
call
in
mov
push
push
insb
fdiv
sub
daa
and
xor
mov
lahf
push
mov
lea
cltd
aam
push
cmp
fcoml
xor
hlt
add
or
xlat
mov
add
jl
mov
stos
mov
push
or
xor
in
sbb
jp
add
jp
push
lea
mov
mov
jp
push
or
loop
add
inc
or
and
pop
or
push
mov
pop
xchg
sbb
test
ja
pop
dec
push
pop
rolb
pop
dec
add
call
ret
or
cmpl
lea
in
xchg
subl
pop
push
pop
call
movsb
mov
push
test
sahf
add
in
add
mov
adcb
xor
add
addr16
enter
add
cwtl
or
out
pop
lret
and
rcll
sub
jecxz
jmp
sbb
xchg
sub
adc
jmp
mov
stos
sysret
jl
call
xchg
pop
sub
clc
call
popf
lret
jne
xchg
lea
xor
mov
lret
cmp
add
cld
nop
lods
call
out
hlt
fwait
shll
jmp
inc
add
push
ja
mov
or
add
ss
loope
call
cmp
sub
push
test
shrb
add
ds
ss
ja
pop
mov
xchg
out
push
and
mov
out
icebp
mov
sbb
cmp
in
dec
push
inc
mov
fs
dec
push
push
or
or
sub
in
mov
loopne
push
fs
sbb
inc
mov
mov
and
mov
push
or
in
shl
popf
push
lret
icebp
hlt
fidivl
push
inc
clc
mov
adc
clc
sbb
lret
fwait
mov
lea
popa
add
add
ret
sub
aaa
inc
fisttpll
push
mov
cmc
jnp
in
push
push
jecxz
inc
movzbl
jno
inc
xorb
testl
mov
mov
daa
and
adcb
pop
ret
mov
inc
sarb
popf
or
lds
and
pusha
stos
pop
lods
push
pop
lahf
mov
movsl
bound
xchg
xchg
je
push
push
je
sub
adc
or
insl
std
sbb
xor
jbe
sub
movsl
dec
lds
mov
data16
dec
in
rorb
icebp
push
xor
jl
pop
ss
lret
jmp
lds
push
sub
sub
xchg
pop
mov
ds
shlb
sbb
sbb
sbb
pusha
loop
fdivr
push
sub
ficoml
dec
xor
cltd
push
dec
jmp
fdiv
loop
mov
pop
ja
imul
imul
adc
mov
xchg
mov
mov
cmp
lods
xchg
ficoml
mov
test
andb
adcl
stc
add
and
and
jo
mov
ret
fcompl
jb
call
sahf
les
aas
lds
xchg
sti
je
cmp
cmp
xchg
test
in
xchg
sbb
push
lea
adc
mov
gs
jbe
fistl
push
cmp
push
add
cwtl
ret
inc
add
sbb
or
mov
mov
sbb
sub
daa
rorb
movsl
xor
or
cmp
xchg
add
out
out
sbb
imulb
call
call
loope
hlt
fdivrp
xor
fdivr
mov
pop
loop
ret
inc
add
xor
cmp
add
stos
cmpb
xchg
psubsw
push
dec
leave
xchg
fwait
out
ds
stc
mov
aas
xor
call
or
mov
int3
mov
mov
mov
mov
xchg
push
imul
or
jno
ret
mov
adc
pop
mov
pop
xchg
jnp
xor
lea
xchg
pop
enter
fildll
in
add
mov
pusha
icebp
adc
adc
add
movsb
push
dec
out
mov
lock
fnstcw
fucomp
shll
jle
rcll
es
push
mov
adc
sbb
addr16
adc
cmp
jne
rcll
jne
or
sub
push
mov
rep
push
pop
repnz
aam
inc
cmp
xor
sbb
shlb
imul
and
cmp
mov
push
jb
je
ljmp
ljmp
xor
stos
je
popa
add
xchg
add
and
rcrb
mov
je
mov
cmp
scas
sbb
stos
inc
xorl
add
insb
or
scas
add
lds
add
shrb
jb
adc
xchg
xor
data16
xor
testb
ljmp
rcr
rcl
fiaddl
mov
sbb
jnp
mov
push
loopne
xor
pop
cmpsl
cmp
in
insb
push
sbb
inc
mov
repz
pop
outsl
rcll
sbb
sub
adc
pop
push
enter
push
adc
dec
pop
imul
insb
or
and
pop
add
pop
scas
dec
adc
xchg
add
pop
push
push
push
dec
jo
inc
xchg
sbb
adc
call
adc
cmp
jle
adc
pop
jmp
adc
or
dec
pushl
push
scas
inc
loopne
gs
data16
enter
dec
in
push
add
jmp
xchg
push
and
pop
jmp
xchg
lret
add
sbb
push
ficomps
and
in
xor
xlat
or
xchg
jne
push
or
push
jb
loope
dec
in
mov
in
in
adcb
enter
jno
or
dec
fs
jbe
insb
cmp
mov
push
leave
sub
mov
or
es
or
les
in
arpl
adc
mov
pop
mov
orl
stos
repnz
orb
movzbl
fimuls
mov
mov
mov
cmp
mov
jne
je
in
mov
cmp
in
in
stos
insl
jecxz
mov
add
jge
fsub
inc
add
lcall
cmp
pop
cmp
mov
inc
test
es
cmpsl
adc
mov
fistpll
push
fists
out
popa
sbb
or
sbb
adc
mov
or
xor
lods
lods
push
bound
outsb
cmp
fidivrs
push
jbe
xor
sbb
push
jne
sbb
add
shll
mov
xor
xchg
cmpsb
adc
jmp
push
xor
out
fcomp
inc
aam
jno
test
inc
enter
jp
sub
inc
add
or
les
sub
sbb
test
jae
out
aad
mov
aaa
dec
xlat
push
push
mov
jecxz
repz
cmp
in
aam
jg
lea
call
add
mov
pusha
shr
dec
adc
in
insb
pop
ret
and
ret
add
jg
add
cld
je
push
in
add
jne
jecxz
inc
push
jl
push
jp
loop
test
cld
cwtl
imul
jb
add
pop
pop
mov
add
ss
popa
and
cmp
movb
daa
addb
ss
mov
or
inc
and
or
push
icebp
or
gs
pop
inc
push
xchg
ljmp
push
add
add
out
enter
cmp
mov
sub
sarb
inc
sbbl
jbe
dec
pcmpeqb
es
into
sbb
mov
inc
inc
fbstp
ja
pushf
or
popa
ficoms
pop
and
je
or
mov
or
je
mov
lock
scas
leave
ret
cmp
adc
or
ret
and
inc
and
or
inc
in
inc
cwtl
push
adc
fimull
sbb
push
jmp
mov
fs
push
pop
pavgb
mov
adc
xor
shlb
les
sahf
push
cld
lcall
add
rorl
adc
cmp
ror
test
lods
cmpsb
pop
pop
jmp
mov
push
mov
add
xchg
inc
sbb
mov
les
rorb
jns
lods
jbe
enter
stc
jne
xor
addr16
inc
pop
nop
push
pop
sbb
jnp
xor
push
out
popa
inc
adc
mov
xor
and
cmp
push
loopne
mov
push
ja
push
mov
mov
data16
insb
pop
add
mov
adc
dec
lea
xor
outsb
sar
mov
or
or
shr
pushl
out
jl
or
jnp
mov
ss
stos
std
std
sbb
mov
iret
push
xor
push
mov
xor
cli
rorb
inc
pop
sbb
cmp
call
pop
inc
sbb
test
enter
mov
dec
xor
sub
testb
leave
dec
gs
adc
outsb
pop
jns
dec
mov
jo
cld
sub
nop
movsb
pop
fsub
pop
dec
jg
sub
adc
std
adc
xor
add
pop
and
je
add
lea
xor
push
cmp
in
add
add
dec
mov
repnz
cmp
mov
and
mov
add
mov
push
mov
sarb
sbb
push
out
je
test
mov
sub
lock
pop
lock
cmp
jmp
mov
add
add
mov
dec
cmp
cmc
imul
mov
and
js
xchg
mov
sbb
cmp
inc
aam
inc
push
imul
daa
mov
cmp
cmp
je
iret
xchg
pop
pop
cmp
push
xor
sbb
inc
popf
mov
mov
adc
xor
push
push
jmp
inc
jecxz
push
mov
repz
push
push
call
pop
pop
pop
outsb
movsb
pop
sub
inc
jbe
mov
xor
lea
imul
sbb
sbb
xchg
sarb
pusha
cld
clc
push
or
insb
or
in
enter
outsl
jne
xor
outsb
in
std
jmp
fldt
and
xor
add
lret
push
in
or
jnp
lods
or
or
xor
sarl
xlat
cmp
iret
rcl
mov
lock
jl
adc
pop
sbb
add
mov
enter
movsb
pop
sub
dec
sarl
or
mov
in
test
inc
aaa
sbb
cmp
inc
xchg
dec
and
xorl
cmp
cmp
shl
sbb
cmp
mov
or
jne
mov
jmp
or
push
shll
fmuls
or
or
into
pop
or
fisubs
dec
pop
clc
sub
cwtl
xor
mov
dec
sub
push
inc
pusha
sbb
push
adcl
iret
xchg
and
inc
lds
inc
inc
push
add
call
fldl
cmp
push
aaa
mov
xchg
ljmp
push
dec
test
shll
loop
loopne
mov
cmp
ss
faddp
in
mov
test
ss
loop
dec
mov
mov
jecxz
dec
test
pop
idivl
or
sub
popaw
pop
fsubrs
xchg
stos
push
mov
call
cmp
jbe
rolb
add
jne
or
inc
mov
sbb
push
and
std
pop
dec
xor
jbe
cmp
lock
sbb
push
loopne
dec
shl
xchg
push
push
mov
cli
adc
outsb
popf
fadd
and
xor
pushf
loop
mov
cmp
shr
adc
inc
xor
scas
pushf
sbb
push
add
xchg
test
popa
js
mov
int
mov
mov
add
xchg
mov
or
cld
jbe
in
fldl
jmp
push
sub
cmp
popa
dec
icebp
jecxz
push
sbb
push
loope
cltd
adc
pop
mov
push
jbe
pop
into
call
or
pop
inc
adc
inc
dec
adcl
lret
scas
lods
stos
loopne
sti
push
addb
dec
js
fwait
lea
aaa
pop
fisttpll
addb
data16
xchg
dec
mov
loop
dec
addl
test
js
pop
psubb
pop
push
lea
mov
dec
add
ljmp
xchg
aam
xor
out
dec
test
int
push
xchg
ficoms
aam
outsb
lcall
cmp
cwtl
icebp
das
popa
fsubrl
call
pop
add
fcomps
cld
pusha
pop
faddl
push
or
fcoms
pop
scas
fmull
fwait
jae
js
push
push
and
fisubrl
cmp
les
add
add
lcall
dec
mov
aam
mov
or
jmp
iret
and
or
test
sbb
jb
popa
psadbw
mov
jmp
lods
int3
rcrb
sbb
imul
dec
mov
push
mov
jmp
movsb
das
mov
addps
add
sti
sub
lock
dec
push
hlt
gs
mov
adc
mov
add
jns
ss
clc
and
cmp
sbb
push
and
mov
or
outsb
imul
and
rcll
dec
add
add
pop
adc
sub
inc
sbb
testb
outsl
loopne
mov
or
js
push
mov
sbbb
hlt
aad
or
mov
je
mov
call
pop
sbb
lea
mov
add
mov
or
pop
sbb
pusha
addr16
sbb
xor
push
sbb
pop
jae
jne
into
cmp
jmp
sub
mov
ss
cmp
jne
cmp
and
cmp
je
int3
in
cltd
push
jecxz
decb
fwait
pop
jns
outsl
xorl
sysret
pop
jmp
nop
xor
and
cmp
sarl
mov
das
outsb
icebp
call
shrb
cmp
call
xchg
scas
and
push
jno
aam
setb
push
dec
repz
jmp
jp
je
repnz
sbb
or
or
push
lods
jl
js
negb
xchg
les
push
sbb
out
mov
mov
fxtract
jmp
jecxz
adc
jne
push
or
cmp
test
xchg
add
sbb
xchg
mov
or
popa
pop
sbb
fdivrl
das
shlb
lret
and
xchg
jne
add
fstpt
add
call
in
movsb
jmp
js
test
je
and
test
or
dec
int3
je
testb
cmc
sbbl
cmp
or
and
jbe
icebp
xchg
push
add
mov
dec
add
and
imul
pop
mov
jp
insl
out
push
xchg
sbb
add
sahf
roll
xor
jecxz
sub
cld
test
lea
add
test
xor
or
stos
push
inc
loopne
mov
pop
add
mov
cmpsl
fldl
cld
psubb
sbb
lock
push
ret
cs
lea
adc
sub
orb
mov
mov
xor
mov
icebp
mov
add
into
andb
push
std
sub
push
cmp
fadds
dec
jne
movzbl
stos
adcl
mov
jecxz
pop
mov
test
add
stos
pushl
cmp
add
nop
sbb
sub
outsb
shr
insb
jmp
negb
cli
mov
push
cli
sub
mov
xor
or
and
out
pop
sbb
ja
mov
rolb
mov
pop
rorb
movsb
adc
xchg
inc
ss
out
pop
ret
add
imul
push
sub
call
xchg
or
pop
mov
movsb
inc
call
nop
in
mov
dec
aaa
and
push
push
call
imul
pop
das
dec
aam
movsl
sbb
dec
adc
xchg
dec
mov
stos
inc
je
cmp
push
mov
mov
mov
out
inc
dec
mov
mov
enter
inc
sub
and
xchg
aas
mov
mov
xor
push
add
adc
pop
inc
xchg
test
mov
add
or
or
cwtl
add
or
xchg
mov
and
add
dec
xchg
insl
add
out
xor
add
fcompl
mov
loopne
push
cmp
mov
addl
adc
fstl
xchg
xor
jo
adc
add
and
mov
xchg
pop
mov
in
adc
shr
dec
pop
or
je
inc
pop
mov
mov
pusha
inc
nop
dec
push
rorl
inc
mov
xchg
cli
or
mov
jp
jle
flds
callw
pop
std
je
fucomip
xorl
jmp
cmp
stos
hlt
js
dec
aam
inc
adc
jge
addr16
call
and
pop
dec
adc
adc
pop
xchg
jmpw
movsb
dec
pop
leave
mov
pop
cmp
or
inc
mov
mov
or
xor
psubsb
add
call
jns
jae
jmp
mov
xchg
pushl
cmp
cmpsl
fs
jmp
dec
pop
xchg
loope
or
sbb
xchg
loop
addr16
push
fld
mov
cmp
enter
imul
cmp
xor
mov
sub
dec
dec
jmp
sub
inc
jmp
popa
dec
mov
add
mov
and
or
or
jne
xchg
sbb
xor
cmp
adc
leave
test
dec
aam
enter
cmp
cs
mov
push
loope
xor
pop
and
jge
push
and
inc
fiadds
inc
mov
arpl
incb
jge
push
push
es
cmpsb
add
mov
push
and
aam
fs
into
sbb
je
decl
rorl
into
xor
es
add
mov
iret
movb
add
push
add
push
cmp
aas
movsb
push
or
in
ficomps
mov
rclb
dec
test
xchg
int3
push
xchg
subl
das
sbb
js
movsb
movsb
or
pop
inc
dec
rorb
jbe
push
imull
push
imul
movsl
sbb
jp
mov
adc
scas
call
inc
push
xchg
pop
xchg
fiadds
aad
pop
pop
cmp
movsl
adc
inc
and
or
ror
cmpsl
mov
adc
in
dec
call
test
sub
sbb
rcl
inc
inc
push
cmpsl
loope
or
push
cwtl
cmpsl
rcrl
jbe
inc
test
xor
mov
push
les
pop
ret
mov
or
cmpsl
test
or
cmpsb
adc
cmpsl
or
cmp
and
test
out
pop
mov
loope
jmp
and
mov
dec
pop
shlb
or
daa
jo
nop
ljmp
fwait
or
pusha
popf
idivl
outsl
daa
sbb
je
mov
add
mov
daa
dec
sub
dec
inc
daa
xchg
repz
xor
sub
sbb
add
or
sbb
jmp
jns
je
xchg
adc
mov
daa
adc
ja
shll
daa
pop
nop
add
and
rcl
jns
dec
daa
and
or
leave
or
outsb
xorl
mov
ror
jecxz
add
daa
jmp
cld
or
push
adc
insb
add
and
int3
add
outsb
add
insb
inc
xchg
sar
enter
lahf
imul
add
in
adc
and
dec
or
insb
push
mov
adc
dec
add
jle
pushf
push
pop
jmp
cmp
je
jle
xlat
insl
mov
add
sub
or
lahf
ret
lea
adc
inc
xor
push
jo
push
pop
add
mov
add
pop
cwtl
rclb
pop
mov
add
jno
je
xchg
add
lea
mov
push
inc
scas
test
push
push
cs
addr16
pop
pop
inc
and
or
xchg
or
cmp
cld
add
in
or
fisttpll
cmp
and
add
or
xchg
or
leave
ror
or
push
repnz
push
push
jb
cmp
xor
xchg
stos
mov
pop
adc
sahf
adc
cmp
repnz
int
push
adc
dec
in
stos
add
adc
and
xchg
adc
adc
jb
fs
push
add
pop
pop
in
lcall
sbb
mov
in
mov
mov
push
sbb
test
push
sbb
xchg
out
arpl
xor
sbb
pop
push
push
inc
idiv
pop
and
pop
pop
jne
add
add
sub
rcl
pop
clc
add
and
aas
pushf
movl
xchg
fucomip
add
pop
sbb
cwtl
xchg
push
in
push
in
fisubs
je
repnz
sub
rcl
ret
cmpsl
rclb
xlat
in
in
xchg
cmp
mov
in
addb
call
call
adc
xor
jmp
in
cmp
sbb
dec
adcl
in
in
mov
xchg
aad
in
cmp
mov
mov
out
and
and
out
or
sbb
lock
sub
push
dec
icebp
cmp
jb
je
das
jnp
or
xor
repz
std
hlt
aad
cmp
hlt
xchg
in
iret
in
std
cmc
cmc
cmp
addr16
mov
cmpsb
repnz
mull
clc
xchg
stos
pusha
nop
clc
clc
or
sahf
stc
stc
and
in
mov
sti
xchg
fwait
lret
cld
cld
cld
je
jns
aaa
mov
push
push
nop
shlb
mov
xor
pop
repnz
xor
add
jmp
xor
pop
sub
jb
mov
xchg
push
lahf
shrl
cmc
ja
and
pop
jmp
imul
xchg
pop
leave
mov
cmp
push
pop
push
mov
cmp
xor
mov
aam
stos
or
out
xchg
leave
or
sti
adcb
adc
or
dec
jmp
jmp
push
push
daa
in
cltd
mov
inc
repnz
jmp
inc
or
test
scas
ss
xchg
mov
and
cmp
adc
enter
xchg
sbb
push
cli
stc
xchg
adc
mov
mov
xchg
xchg
xchg
pop
push
and
cltd
jb
or
sbb
xor
sti
sti
sti
xchg
mov
cld
cmp
jmp
inc
scas
jbe
mov
adc
test
mov
inc
xabort
shl
stos
mov
loop
test
scas
ss
arpl
loope
push
and
inc
clc
and
add
add
or
fisubl
out
fdiv
out
nop
mov
sahf
notl
sub
jnp
ljmp
xchg
push
pop
leave
or
pop
in
rcll
sub
pop
push
lret
into
mul
scas
testb
and
push
xor
insl
repnz
repnz
repz
testb
inc
or
mov
out
div
testb
push
ja
xchg
mov
sub
cmp
or
stos
stc
jmp
push
pop
lcall
test
cmc
loope
cmc
adc
push
cli
hlt
or
je
lock
jne
pop
add
xchg
add
sbb
sti
mov
loope
pop
in
mov
loop
dec
pop
jo
pop
hlt
cmp
sub
sbb
dec
jo
imul
mov
repz
adc
mov
or
rclb
mov
insb
repz
repz
or
or
in
mov
in
repnz
or
test
jns
lcall
inc
pop
xchg
stos
xchg
pop
adc
xchg
repnz
cld
icebp
cmc
cmc
push
xchg
adc
mov
and
push
cwtl
icebp
mov
jne
cmp
movsl
stc
mov
jne
xor
movups
mov
out
lock
adc
adc
xchg
cmpsl
icebp
ret
sub
out
push
sub
ffreep
push
pop
stos
adc
insb
loope
iret
enter
cmp
cmp
sub
mov
fcoml
mov
xorb
mov
jne
stc
xor
jmp
dec
mov
xchg
dec
add
movsb
dec
leave
cmp
fisttps
jmp
les
dec
push
nop
push
cmp
inc
fdivrs
adc
aaa
or
push
add
int
sarl
sub
push
jecxz
repz
repz
dec
mov
sbb
fnstcw
in
push
push
aad
in
xchg
gs
iret
repz
dec
outsb
or
mov
lret
cmpl
jl
mov
nop
into
movsl
xchg
mov
or
inc
and
dec
or
lret
test
pop
dec
dec
or
popa
sub
push
pop
xor
rorb
xchg
lods
jle
call
jg
cmp
xchg
xor
adc
cmp
sub
pop
jmp
xorl
pop
or
dec
push
cmp
mov
idivl
xor
xchg
testl
data16
xlat
pop
mov
and
or
xor
dec
pusha
mov
dec
jl
call
dec
jo
ret
adc
rcrb
ror
sub
and
add
push
push
and
repnz
push
pop
fsubl
call
dec
dec
testl
imul
adc
cltd
xchg
push
jmp
xorb
insb
jb
adc
xor
mov
sub
xor
xor
adc
add
popf
adc
adc
les
js
pop
xor
ja
sbb
stos
adc
dec
push
jecxz
sbb
adc
sub
jmp
rorb
cmp
sub
int
jb
mov
and
add
dec
clc
add
shr
inc
add
push
sbb
ds
and
inc
add
and
pop
dec
loope
dec
test
dec
icebp
data16
orl
imul
orl
icebp
or
and
inc
icebp
dec
nop
pushf
ret
test
cltd
sbb
or
inc
mov
and
pop
icebp
fs
mov
pusha
push
add
arpl
icebp
cs
add
cmp
rclb
push
inc
icebp
call
jo
shlb
inc
fwait
xchg
pop
pop
inc
inc
outsl
sbb
lret
je
scas
xor
add
lods
clc
add
or
insl
dec
movsl
xchg
es
sbb
dec
inc
pushf
adc
or
jg
sub
je
dec
nop
into
cmc
pop
andb
loop
leave
lods
and
sub
sti
iret
les
mov
pop
and
cmc
jle
adc
mov
mov
inc
mov
add
pop
cs
cmpsl
cmpl
lds
stc
nop
pop
add
mov
jmp
rcrl
sbb
dec
aaa
xchg
cmc
adc
inc
jb
cmc
outsl
pop
and
xor
xor
fstp
xor
ss
xor
adc
orb
or
and
pusha
je
xor
cmc
aam
or
xor
cmp
fcomp
xor
pushf
pop
and
nop
dec
jne
shl
imul
inc
dec
mov
cmp
dec
dec
dec
dec
sub
sbb
inc
sbb
dec
xor
and
mov
cs
jb
repz
cs
mov
nop
or
add
pop
sbb
jo
xchg
pop
cmc
fisttps
cmc
dec
nop
adc
inc
xorb
cmc
cmp
jmp
add
aam
ds
test
insb
pop
loop
movsb
cmp
cmc
dec
addr16
mov
xor
stc
sub
add
dec
sbb
ds
xchg
pop
shll
rolb
xor
and
cmc
je
rcrb
push
cmc
je
rcrb
leave
or
std
push
adc
and
subb
cmc
xchg
and
pop
pop
adc
outsb
mov
cmc
test
popf
add
adc
push
int
push
or
add
imul
push
repz
cmp
inc
scas
repz
pop
je
repz
mov
sti
aaa
leave
xchg
and
in
lock
and
push
sub
add
jno
or
push
and
data16
mov
bound
add
loope
and
pop
xor
ss
xchg
repz
iret
dec
mov
fmuls
lea
bound
imul
repz
in
aaa
popa
aas
movsb
loope
mov
pop
ret
je
sub
push
pop
xchg
and
fst
fs
jns
loopne
adc
sbb
outsb
cwtl
or
adc
sbb
sbb
mov
fs
jns
into
dec
xchg
cs
jns
sti
movsb
sbb
push
daa
dec
mov
lea
jns
pop
dec
xor
push
jns
sbb
inc
jp
jns
inc
dec
dec
dec
mov
and
and
push
xchg
dec
cmp
sbb
mov
inc
ret
or
mov
loop
adc
jl
adcb
mov
sbb
mov
cmpsb
and
int3
xchg
mov
xor
mov
mov
shl
call
rcll
push
test
and
aaa
or
xor
or
je
mov
pushf
push
repz
mov
js
je
loopne
mov
mov
imul
lahf
call
mov
xor
add
rcl
fisttpll
repnz
cmpsl
fidivs
pop
divps
dec
negl
in
loope
inc
adc
sbb
mov
inc
stos
lahf
mov
aam
sbb
lret
dec
mov
adcl
inc
pop
dec
inc
jno,pn
cmp
push
push
pop
addb
mov
rcll
rorb
outsb
sbb
fs
fnsave
mov
mov
leave
loopne
enter
test
xor
mov
je
fdivl
mov
xor
imul
les
mov
fdivl
clc
ss
mov
or
mov
push
hlt
call
adc
shrb
mov
mov
fbstp
mov
rolb
xchg
dec
stos
xorl
cmpsb
outsl
sbb
dec
orl
inc
inc
sbb
fsubs
xor
nop
aad
cmpl
xchg
jno
sub
push
repz
mov
or
outsb
ljmp
sbbb
cmp
dec
inc
cmpl
mov
ljmp
adc
jno
sbb
dec
orl
loopne
pop
movsl
test
test
push
ds
pop
aaa
or
inc
and
scas
rcl
ljmpw
adcl
aad
js
and
push
sbb
mov
dec
add
or
jo
sub
orl
inc
ljmp
popa
cs
into
mov
imul
inc
aaa
lods
rcrb
mov
das
sbb
dec
cmp
jge
aaa
or
adc
sarb
jno
xor
adc
mov
pop
orl
aaa
or
sbbl
sbb
cmpl
addl
subl
sbb
cmpl
fucomp
adc
and
dec
inc
mov
fnstcw
test
mov
or
or
or
bound
add
ss
jae
mov
pop
cmpsb
mov
and
mov
dec
xor
or
popf
push
out
cmpsb
addl
mov
or
dec
cmp
inc
jo
push
je
mov
orl
mov
fldl
jmp
push
adc
add
sti
lret
xchg
mov
out
mov
cmp
push
jbe
xchg
add
cmp
xchg
imul
pop
xor
nop
mov
rcr
cmpl
sbb
imul
jp
out
dec
push
je
jge
inc
push
xor
adc
sbb
faddl
xchg
outsb
subl
clc
js
fwait
xchg
stos
andl
rclb
or
rolb
mov
xor
inc
mov
andl
int
mov
xor
and
and
and
and
pop
dec
cmp
cmp
dec
jns
pop
lcall
call
fs
call
popa
jo
mov
cli
cmp
cmp
inc
jno
or
mov
mov
sub
aaa
imul
mov
push
les
movb
daa
imul
mov
mov
inc
adc
mov
in
pop
xchg
xchg
mov
cmp
xlat
or
inc
out
push
mov
dec
pusha
inc
pop
dec
cmp
ret
sub
and
mov
push
cmp
lock
insb
enter
ret
mov
or
add
popf
add
test
stos
ja
pusha
xorl
mov
pop
addr16
orl
cmovbe
pop
add
pop
adc
inc
add
add
pop
gs
add
jp
pop
xchg
popa
sbb
add
xchg
xchg
dec
adc
jae
mov
adc
or
fcom
les
test
and
pop
or
mov
int3
sti
mov
xchg
mov
pushf
or
jo
lcall
sub
cmp
in
in
or
push
and
out
dec
mov
dec
mov
mov
movsb
mov
mov
add
jbe
cmp
es
mov
push
fistps
jmp
imul
jb
test
add
stos
pushf
push
or
rolb
push
leave
ret
jne
push
fsubs
cs
or
sub
orl
cmp
addl
shrb
mov
adcl
jg
movsl
loope
and
mov
mov
fs
dec
nop
mov
sarb
xchg
or
out
xchg
dec
sub
add
pop
rcl
mov
shll
xchg
hlt
out
or
push
add
enter
shll
jl
mov
add
notb
and
out
cmp
jl
sbb
out
ror
stos
ljmp
adc
and
sub
push
sbb
call
pop
adc
and
jbe
fimuls
call
mov
dec
out
jge
inc
cmp
or
roll
push
cwtl
movsb
mov
add
dec
jb
orb
push
inc
xchg
ret
dec
outsb
ljmp
pop
push
andb
movsb
jnp
mov
mov
dec
popa
out
jmp
sub
or
push
sbbb
movsb
in
mov
test
orb
nop
mov
or
jle
or
xor
loopne
add
nop
mov
xchg
dec
loopne
xlat
or
fs
push
mov
imul
clc
cs
call
cmp
and
xchg
into
mov
andb
dec
call
sub
inc
pavgb
ret
les
xchg
xchg
and
out
jne
and
test
es
push
mov
inc
pusha
mov
or
mov
jne
outsb
adc
je
or
nop
adc
inc
call
enter
jne
adc
lea
aaa
or
call
fsubl
mov
jne
and
inc
mov
fsubl
push
xorl
fstl
test
aaa
and
xor
push
fnsave
push
test
mov
adc
jne
adc
xchg
jae
lea
and
push
cmp
adc
add
dec
inc
push
xor
fwait
stc
dec
daa
inc
mov
cmp
je
mov
into
imul
rcl
sub
aas
dec
sub
inc
mov
jo
dec
test
and
test
xcrypt-ofb
cmpsl
das
mov
cmp
adcl
es
mov
pusha
addl
cmp
xchg
pop
push
imul
xor
inc
sub
repz
lahf
or
in
clc
pop
and
test
push
arpl
loopne
cmp
adc
aam
out
add
mov
mov
adc
add
add
pop
adc
outsb
xchg
cs
mov
nop
inc
and
addr16
jmp
incl
xor
add
jb
xor
push
inc
call
xchg
shlb
lods
ss
dec
mov
inc
rcr
add
mov
sti
xchg
adc
or
jne
add
movsb
ds
movb
mov
cltd
push
mov
add
cmp
inc
jmp
popa
test
repz
jmp
xor
push
sub
adc
inc
inc
adc
imulb
add
inc
pop
je
or
test
add
imul
test
pop
add
mov
mov
adc
add
divps
lods
mov
xorb
daa
dec
xor
cmp
movsbl
and
cmp
leave
or
add
mov
inc
add
xor
inc
jmp
outsl
je
pop
add
adc
push
xchg
gs
popf
pop
pop
mov
jle
rorb
sbb
popl
adc
mov
enter
sbb
pop
add
mov
xor
loopne
inc
mov
rorb
in
pop
lock
rorl
loope
xchg
mov
push
test
inc
nop
inc
inc
shl
cmpsb
push
orb
jb
cmp
std
inc
mov
pop
fisubrs
jge
push
push
cmp
pop
flds
xchg
inc
jecxz
push
or
adc
sahf
aam
jne
ljmp
jmp
cmp
xor
sbb
clc
adc
push
pop
pusha
sbb
sub
push
sar
inc
push
adc
xlat
sub
and
jns
sbb
lea
jo
jo
push
hlt
dec
sub
dec
fisubl
cmc
inc
adc
sub
cmp
pop
pop
cmpsl
push
add
or
lret
test
add
dec
rorb
ret
lea
push
inc
inc
ja
mov
sbb
pop
add
filds
cmc
add
scas
or
in
clc
mov
stos
rcll
inc
les
sahf
in
or
mov
push
ja
push
imul
cmp
out
out
xchg
es
or
out
cmp
xor
adc
adc
adc
add
out
add
test
lret
mov
lahf
daa
or
lahf
xchg
sub
inc
xor
sbb
das
sub
push
mov
aas
jne
loopne
je
xorl
aad
pop
or
jo
imull
add
dec
jbe
xlat
cmc
fists
aaa
xor
mul
les
xlat
sbb
mov
mov
popa
shl
inc
jb
dec
idivl
imul
pusha
sub
daa
ja
sbb
xor
test
pop
xchg
push
pushw
inc
cmp
inc
mov
jl
xchg
sub
pop
add
pop
xchg
xchg
xchg
jmp
cmpsb
and
add
aaa
xchg
negl
push
daa
cmp
and
jmp
movsb
rcrl
loopne
cltd
loop
test
ficoms
popf
xor
adc
sbbl
daa
pop
pop
shll
xchg
pop
dec
pop
and
inc
je
popf
xor
sbb
sbb
popf
xor
cli
xchg
cmovo
sahf
div
xchg
xchg
xchg
xchg
ljmp
xchg
lret
inc
jno
add
aad
pop
and
out
mov
and
xchg
dec
shl
nop
mov
nop
sbb
push
inc
mov
movsb
pop
adc
xchg
add
rclb
add
ret
push
sbb
in
imul
add
and
cmpsb
ljmp
fbstp
filds
jmp
ljmp
cmp
pop
jno
rclb
nop
push
out
negl
and
sbb
inc
sbb
inc
dec
cmpsb
cmp
notl
sbb
pusha
sub
negl
pusha
add
add
or
add
sbb
roll
imul
adc
pop
mov
nop
int3
not
rolb
mov
jno
fwait
mov
divl
jno
xchg
idivl
rclb
insl
jb
or
testl
xlat
mov
out
jmp
push
nop
outsb
test
cmc
push
pushf
xchg
data16
cmc
push
push
sahf
add
cmp
and
cmpsl
pusha
xchg
sub
dec
hlt
add
mov
cmp
adc
and
fsts
call
dec
aaa
add
add
inc
addl
loop
xchg
js
add
xchg
mov
xlat
mov
inc
sahf
out
mov
push
je
push
mov
outsl
mov
ss
xlat
fsubrs
adc
gs
daa
add
stc
inc
pop
add
push
sbb
push
push
cltd
daa
mov
push
daa
add
inc
gs
aaa
adc
add
pop
push
test
mov
push
call
cmp
sbb
addl
lret
adc
or
addr16
sub
es
xor
mov
adc
inc
jmp
push
mov
std
sub
and
fstl
es
imul
std
stos
add
std
adc
movsl
je
lods
and
movsl
mov
in
adc
lcall
pop
sbb
or
xor
icebp
repnz
push
je
mov
mov
adc
xchg
push
xchg
movl
xchg
movsb
rorl
dec
pop
adc
addr16
mov
add
cmp
inc
mov
or
inc
mov
test
or
mov
aam
add
push
add
cli
ds
dec
hlt
push
fimuls
dec
inc
testb
push
sbb
mov
enter
cmp
pop
cmp
sub
cmpsl
test
and
inc
inc
movsl
xchg
cmp
xorl
cmp
stos
xchg
test
imulb
mov
pop
nop
dec
adc
push
push
or
lret
pop
and
and
adc
test
and
add
jo
dec
cmp
adc
movsl
sub
stos
and
add
dec
inc
out
movsb
int
lods
and
or
cmp
inc
cmp
lds
pop
xor
xchg
and
inc
cmp
adc
imul
sbb
int3
imul
xlat
inc
mov
xchg
test
cmp
mov
sbb
int3
mov
and
shll
divb
std
xor
ds
cmp
xchg
and
pushf
pop
out
mov
cmpsl
mov
fildl
xchg
and
hlt
cmp
jp
test
mov
and
push
mov
or
and
push
xchg
nop
cmp
xchg
xchg
cmp
mov
sbb
push
jmp
inc
sbb
in
inc
dec
inc
cmp
or
dec
call
in
fstpt
and
roll
or
stos
mov
dec
adc
adcb
inc
push
and
adc
inc
cmp
inc
daa
test
inc
rorb
push
dec
cmp
cmp
cmp
mov
or
and
cmp
sub
lahf
jg
cmpsl
inc
mov
xchg
cmp
xchg
sbb
ss
add
push
popf
sbb
ja
push
sbb
mov
sbb
dec
sub
lds
cwtl
dec
or
adc
int3
es
nop
push
xchg
shrb
popa
outsb
out
cmp
pop
cmp
lds
dec
cmp
ficomps
or
and
mov
pusha
cmp
adc
sbb
sahf
inc
int
call
inc
mov
cmp
nop
cmp
popf
mov
mov
add
nop
mov
mov
imul
xor
in
sub
scas
xchg
xor
xchg
sbb
xor
dec
sub
scas
sbb
inc
pop
cmp
cmpsl
xchg
mov
sbb
sbb
loop
cmp
sub
sub
je
sbb
sbb
gs
clc
push
dec
sbb
pop
movsl
or
dec
sbb
cmp
stos
push
xchg
pop
sbb
repz
xchg
int3
fisubs
ja
pusha
cvtpi2ps
fiaddl
pop
loop
xor
les
fucomi
inc
and
push
sbb
pusha
mov
loope
sbb
dec
cs
xor
xchg
call
push
push
lret
push
lcall
or
pop
jb
add
and
xor
adc
push
sub
xor
add
out
shlb
nop
popf
data16
sti
mov
mov
xor
mov
pop
out
data16
xchg
shrb
push
out
data16
jle
out
adc
and
fs
and
pop
xor
dec
inc
testb
mov
or
shr
cmp
inc
das
out
fisttpl
aad
ficoms
add
or
imul
cld
dec
jae
or
dec
dec
mov
mov
pop
inc
push
add
or
and
and
sbb
sbbb
jle
gs
inc
nop
fldt
or
mov
jno
rcrb
inc
inc
add
xchg
or
xchg
push
sbb
mov
insb
enter
jl
nop
sbb
sub
orb
lea
sbb
sub
push
arpl
adc
dec
or
push
jno
xchg
notl
adc
sbb
pusha
inc
adc
fcomps
pop
xor
mov
imul
push
repnz
popa
pop
in
mov
or
cmp
add
pop
lock
or
xor
inc
in
gs
test
cmp
push
pop
jnp
enter
push
mov
loopne
mov
or
cmpsb
mov
rcl
pop
pusha
cmp
push
fcoml
mov
test
aas
pop
mov
push
and
test
xor
dec
xchg
test
loopne
mov
add
push
bound
call
cmp
cltd
nop
dec
gs
mov
mov
sub
scas
pop
push
mov
rorb
es
popa
movlhps
es
pop
ret
or
repz
stos
sub
test
lods
lret
xor
cmp
mov
pop
xor
mov
dec
aam
scas
popa
stc
jb
call
xor
movsbl
das
shlb
call
mov
and
adc
call
repnz
das
xor
clc
lret
xor
lock
call
cmp
loopne
call
or
lds
dec
call
add
lods
andps
movsl
pop
call
popf
pop
call
fs
stc
push
jne
call
test
xchg
das
js
pop
jl
push
sub
mov
test
xor
nop
sbb
test
mov
out
movsb
in
fldcw
fists
ret
movsl
jb
pop
les
ror
mov
xchg
jb
pop
mov
jle
sub
push
test
inc
pop
sub
xor
lret
test
lods
pop
sahf
xchg
adc
add
cs
test
or
loope
xchg
dec
ja
adc
in
mov
and
dec
stos
and
sub
mov
jle
push
cs
xor
cmp
orl
pop
inc
push
inc
frstor
xchg
dec
inc
dec
cmp
xor
movsl
jb
cs
adc
sub
add
nop
add
dec
adc
adc
insb
jb
mov
and
or
inc
lret
dec
xor
cwtl
sahf
mov
pushf
and
mov
and
xchg
xchg
adc
js
adc
cmp
dec
inc
sbb
sbb
push
and
xchg
xchg
mov
mov
sbb
imul
xchg
data16
movsb
inc
test
dec
lcall
imul
mov
inc
mov
and
push
rorb
stos
and
inc
pop
adc
daa
adc
xor
or
mov
xchg
je
adc
jne
jae
add
jae
mov
xchg
and
cmp
orl
es
pop
pop
mov
call
pop
adc
mov
test
adc
movsb
mov
pop
mov
or
mov
mov
and
andl
adc
dec
fldl
and
paddusw
pusha
adc
pusha
aaa
inc
lods
sti
loop
sub
sti
outsb
mov
cli
cs
inc
nop
xor
fsts
mov
outsb
mov
rcrb
mov
inc
sti
stos
mov
jae
sbb
negb
sti
xchg
das
inc
sbb
inc
add
popa
fsubrp
orb
dec
dec
adcb
adc
movsb
jg
xchg
jp
ret
push
mov
xchg
pop
mov
sbb
je
frstor
and
mov
xchg
xchg
mov
adc
andb
jo
shlb
cmp
inc
mov
or
add
fmull
xchg
ret
stc
mov
mov
push
xor
or
push
scas
or
or
jno
add
inc
xchg
nop
push
fs
adcb
xor
andb
sbb
xchg
repz
jp
loop
or
inc
push
movsb
xchg
xor
or
adc
push
jmp
fs
ret
mov
pop
adc
push
stos
mov
adc
push
arpl
adc
outsb
dec
aam
sub
and
inc
frstor
inc
dec
movsl
inc
mov
dec
mov
sbb
mov
pop
fiaddl
pop
mov
cmpb
test
xor
pop
adc
adc
rclb
aad
repnz
in
push
xchg
sub
pop
mov
lcall
inc
push
mov
mov
dec
jmp
xchg
mov
sub
pop
cmpsb
add
lods
pushf
dec
leave
or
push
cmp
pop
sub
cmpsb
cmpsl
inc
pop
je
cs
out
mov
call
mov
mov
stos
dec
push
ret
loopne
rclb
push
xorb
adc
pop
or
xchg
xchg
pop
mov
dec
jmp
sub
pop
rcl
xchg
outsb
cmp
pop
mov
xor
sub
sub
daa
add
add
ret
adc
xchg
repnz
jns
xor
movsl
pop
push
sub
and
cmpsb
pop
adc
dec
pusha
cwtl
mov
sub
xor
pop
and
in
pop
loope
xor
pop
and
ds
sbb
pop
shlb
add
lcall
out
adc
sti
pop
and
cwtl
and
je
ljmp
orb
pop
and
xchg
adc
fstl
and
sti
cs
xor
sti
les
arpl
sti
adc
push
sti
inc
test
jmp
aad
sti
xchg
movsl
add
pop
sub
mov
push
ret
movsl
add
push
adc
inc
addr16
pop
inc
sbbl
adc
pop
dec
sahf
adc
pop
push
pop
nop
roll
xorb
adc
shlb
lds
mov
bound
or
dec
pusha
and
mov
fstl
mov
xorl
and
imul
nop
test
adc
adc
adc
push
inc
or
xchg
cmp
repz
pop
adc
or
movsb
inc
add
adc
jmp
ret
int
nop
je
add
jge
loop
sbb
xor
addr16
sub
add
xchg
negl
outsb
addl
jnp
dec
push
mov
lea
mov
imul
jecxz
xor
sarb
lcall
mov
fiaddl
cmp
mov
rolb
lods
push
inc
ja
insl
testl
notl
subb
mull
xchg
lock
popa
pop
sbb
pop
inc
or
jbe
movsl
loopne
fs
adc
notb
add
mull
mov
imul
lods
push
idivl
stos
sub
jbe
stos
mov
divl
not
sub
mov
pop
add
div
jmp
dec
pop
ss
test
stc
push
cld
add
cmp
inc
or
negb
jge
or
lea
out
push
pop
je
or
add
pop
mov
push
adc
push
and
pushf
dec
dec
inc
and
and
test
mov
jns
jo
mov
call
daa
icebp
lds
sbb
xor
or
adc
cmp
jmp
outsb
addb
mov
add
inc
ror
nop
pop
mov
mov
pusha
fcompl
shlb
fwait
cmp
loope
adc
or
sbb
inc
daa
push
inc
sbb
xor
xchg
mov
jo
rorb
shlb
push
pop
fimull
add
daa
jo
cmp
and
push
inc
aaa
adc
push
addb
push
xor
pop
fstpt
pop
sahf
cmp
add
mov
add
pop
jmp
addl
dec
shrb
xor
xchg
mov
add
arpl
nop
popa
sub
add
shll
insb
inc
ja
sbb
xor
push
rcr
mov
push
adc
mov
jno
push
pop
adc
test
in
push
xchg
sub
adc
mov
dec
imulb
call
rorb
fsts
adc
push
jp
fadds
mov
dec
jge
pop
cld
sahf
jg
push
mov
call
outsl
nop
dec
mov
mov
movsb
xchg
shr
mov
jmp
sub
inc
dec
or
je
mov
pop
pop
inc
push
mov
nop
dec
cmp
and
or
cmp
lods
mov
lock
daa
mov
or
fwait
push
rclb
add
xor
adc
adcl
adc
xor
mov
xchg
lahf
push
mov
xchg
cmp
xor
xor
jne
rolb
inc
sbb
test
jne
sbb
push
add
inc
adc
lock
xor
aam
or
popf
jg
jb
xor
fs
mov
mov
sub
call
arpl
mov
lods
mov
divb
call
out
movl
or
test
pop
pop
pop
xchg
sub
push
cltd
rcrb
test
fs
addr16
and
dec
insb
movsl
hlt
cld
sbb
jb
aam
mov
and
push
add
pushf
adc
add
cwtl
push
inc
pop
loope
pop
push
ss
inc
add
stos
add
and
push
push
jne
sub
add
sti
fwait
repz
adc
push
add
ret
xor
outsb
fdiv
stos
xlat
fwait
push
jnp
sub
sbb
imul
mov
inc
dec
lea
call
icebp
add
fwait
insl
push
or
adc
push
mov
sub
test
mov
and
loope
shl
jge
and
sarl
test
fstpl
ret
lcall
adc
roll
push
push
stos
xchg
inc
sub
or
pop
push
or
push
add
pop
or
adc
xor
stos
inc
movsb
repz
mov
lret
inc
shr
outsb
add
rep
ret
push
or
ss
mov
jns,pn
leave
mov
int
mov
test
jecxz
inc
cmpsb
dec
mov
sbb
cltd
inc
push
inc
sub
inc
inc
lds
cmp
inc
push
jo
mov
adc
dec
inc
test
pop
aad
cmpsl
jmp
lcall
call
push
sbb
or
dec
pusha
or
push
iret
pop
out
jle
cmp
add
and
or
repz
out
sbb
ret
mov
repz
bound
sub
lcall
call
out
push
mov
pushf
pop
push
lods
push
mov
int3
loop
push
inc
push
push
sub
fcomip
cmp
push
nop
movsb
push
push
xchg
out
sahf
out
fs
inc
ss
out
cmpb
push
push
jl
out
sbb
repnz
repz
into
mov
ret
push
pop
into
sbb
incb
add
es
xor
out
loop
sbb
cmp
mov
sahf
out
lcall
cmp
out
call
sub
cmp
repz
pop
data16
iret
repz
nop
sahf
lods
mov
fdivp
fdivp
cmp
decb
ss
inc
pusha
inc
sbb
push
shr
jb
int3
ds
outsb
jle
sahf
mov
daa
rol
loop
idivb
imulb
push
cmp
aaa
je
repz
out
push
push
cmp
adc
mov
mov
push
jbe
add
lods
cmp
push
cwtl
cmpsl
insl
mov
pusha
insl
push
out
iret
dec
test
fidivs
sarl
jbe
les
test
mov
pop
js
sbb
pop
adc
jo
lret
xor
pop
sub
inc
sub
lea
pop
or
inc
mov
dec
push
je
jmp
mov
dec
outsl
push
push
ja
test
inc
mov
xor
push
jno
out
and
mov
xor
push
rcll
jo
xorb
ss
xor
add
mov
add
push
rol
jecxz
bound
out
xor
rep
fwait
lahf
mov
das
mov
mov
outsb
mov
das
dec
inc
sub
push
imul
mov
xchg
mov
outsl
inc
or
or
or
fadds
pcmpeqd
jno
bound
and
imul
xchg
inc
and
sub
jecxz
stos
mov
xor
inc
dec
adc
daa
add
sbb
fistpll
fsubrl
cmp
mov
jg
adc
sarl
ret
je
stos
arpl
mov
arpl
lret
sar
rcpps
push
push
inc
push
inc
pop
inc
outsl
outsl
sbb
or
push
xor
insb
subl
cmc
es
pop
xor
xor
jae
mov
dec
imul
dec
loope
pop
dec
jae
inc
jne
outsb
je
mov
pop
inc
js
pushl
ss
inc
xor
sub
sub
sub
cmp
add
xor
xor
jge
pushl
xor
cmp
inc
stos
xor
ss
xor
cmp
fadd
xchg
jnp
xor
xor
aaa
clc
inc
inc
xor
mov
aam
aas
add
dec
lret
nopl
faddl
mov
dec
orb
js
push
fidivrs
cmp
fildl
xor
or
push
loope
and
inc
aaa
adc
xor
inc
pop
dec
add
mov
jl
mov
cmp
arpl
push
sbb
inc
push
inc
push
dec
and
fsubrl
cmp
ss
pushf
xor
inc
jno
rolb
dec
outsl
mov
xor
xchg
test
mov
in
in
scas
mov
ss
push
dec
hlt
imul
ficoml
pop
push
call
push
inc
out
iret
sarl
xor
sub
out
cmp
in
xor
in
mov
lods
sahf
imul
add
movd
mov
iret
jo
ljmp
xchg
loopne
add
jg
mov
scas
test
and
outsl
xor
jno
ljmp
push
ss
je
push
push
insw
int3
lret
push
inc
cmp
adc
mov
sbb
inc
push
in
cmp
sub
pop
popf
mov
fldt
inc
mov
and
sub
push
sarb
inc
arpl
insb
mov
test
aaa
xchg
and
outsb
ret
lret
xor
mulb
mov
and
xor
rcrb
cmp
add
insb
daa
pop
push
push
out
pusha
pop
pop
add
imul
pop
and
mov
stos
fnstsw
pusha
push
and
jl
jb
and
or
imul
imul
mov
or
je
dec
xchg
scas
imul
push
jo
mov
test
movl
sbb
imul
jp
push
cwtl
movsb
jmp
ret
cmc
cmp
arpl
inc
cs
push
push
push
add
ja
fldenv
fildll
adc
pop
xchg
push
popa
imul
add
fs
cmc
xor
or
sbb
fdivl
pop
pop
add
inc
insl
adc
mov
adc
lock
test
mov
rolb
adc
adcb
aas
mov
xor
aaa
or
or
out
pushf
add
sbb
push
add
and
mov
inc
push
addr16
mov
mov
xchg
pop
cmpsl
adc
adc
fadds
cmp
repz
adc
orb
or
sahf
cmpsl
stc
loopne
adc
sub
mov
das
push
dec
repz
sbb
sbb
sbb
cmpsl
stc
cmp
call
iret
xor
pop
nop
cld
and
sarb
cli
js
jns
stc
iret
repz
jp
push
cld
fdivr
mov
cmpsl
mov
push
or
out
les
sbb
mov
mov
arpl
push
xor
mov
and
cmp
test
push
cmp
xor
mov
xchg
or
add
xor
pop
adc
push
cld
or
in
repz
fmul
les
cmp
pushf
push
xchg
sahf
out
int
out
nop
mov
mov
jl
insb
push
out
pop
mov
sub
repz
inc
inc
cmp
jns
out
xor
sub
and
out
sahf
and
adc
or
lahf
out
or
cld
or
repz
repz
call
repz
mov
nop
jo
xor
lock
int3
mov
jns
out
insb
inc
sub
adc
cmp
out
cld
push
fcom
iret
repz
mov
js
sub
sahf
out
ds
mov
int
jns
cld
add
call
cwtl
mov
cmp
jl
cmpsb
adc
push
inc
mov
enter
cmp
jmp
jnp
inc
les
inc
ret
mov
ja
cmp
inc
xor
negl
lret
sub
adc
add
fidivs
adc
inc
dec
cmp
icebp
push
adc
testb
inc
or
lret
ja
shrb
adc
loopne
push
xor
or
addb
aas
mov
adc
jo
out
cltd
inc
mov
inc
cmp
sub
lds
dec
xor
mov
imul
inc
insb
mov
lds
jno
inc
pop
sbb
sbb
imul
sub
jecxz
mov
and
mov
and
dec
sbbl
call
shrb
mov
pushf
andb
rolb
ret
jns
mov
add
out
pusha
cmpsb
and
call
pop
push
inc
push
xor
xchg
cld
inc
inc
mov
jnp
push
or
mov
add
and
pop
jne
pop
sub
or
sbb
lods
jmp
jne
imul
xchg
fisttpl
or
pop
outsl
mov
and
pop
jb
pop
push
or
ljmp
bound
and
inc
push
push
and
outsb
jnp
insb
das
inc
push
repnz
add
cmpsl
ja
lahf
add
rorb
cmp
jns
fsub
ds
inc
sbb
addr16
mov
mov
ret
test
xchg
inc
sub
aas
mov
das
fcoms
insb
jnp
test
mov
ss
nop
mov
push
sete
int3
push
jo
mov
jbe
mov
int3
jl
adc
fdivs
jecxz
rcr
cmp
cltd
ss
lcall
pushf
setl
lret
sbb
shl
les
mov
or
push
pop
insl
in
popf
jl
in
push
mov
lahf
jg
in
ret
call
bound
lods
xor
mov
and
and
sub
vmptrst
enter
inc
dec
mov
xchg
adc
and
iret
fcmovnbe
fcomps
jbe
in
fldt
jp
insb
adc
mov
imul
imul
adc
cltd
out
sahf
loopne
daa
lock
enter
imul
mov
jo
sbb
sub
mov
push
pop
add
dec
imul
inc
sbb
sahf
or
imul
dec
addb
add
sub
lcall
scas
pop
push
and
and
inc
push
push
adc
lods
push
push
add
push
outsl
ja
xor
mov
add
andl
fisubrs
jecxz
mov
daa
movsb
and
and
add
rolb
cwtl
inc
repnz
outsb
inc
jl
pop
out
lods
mov
ljmp
or
and
arpl
add
cmpsl
fs
push
jb
mov
push
in
inc
add
insl
jo
dec
les
js
pop
outsb
push
add
mov
sbb
out
insl
mov
jae
sbb
in
push
push
jae
push
adc
jmp
push
push
pusha
push
cmp
dec
jb
inc
gs
addr16
out
adc
lock
cmp
push
inc
sbb
addb
add
sub
shll
add
ret
lcall
push
mov
inc
push
mov
pop
inc
dec
lods
loope
push
mov
imulb
cmp
push
jo
jb
jns
sarb
and
aad
inc
shll
add
lods
cmpsl
xor
push
sbb
lock
imulb
push
xchg
divb
aaa
adc
das
mov
or
inc
and
pusha
nop
shll
inc
and
jbe
cmpsl
and
inc
imul
jge
xchg
popa
mov
testl
mov
or
dec
inc
add
add
lods
gs
push
add
cmp
subb
mov
sub
outsb
es
pop
outsb
pop
add
push
scas
xchg
leave
push
dec
scas
xchg
adc
jmp
nop
pop
test
xor
sub
sbb
xor
sbb
xor
push
and
cs
gs
push
adc
imul
and
push
xchg
loopne
ret
adc
sbb
xor
shrl
ret
inc
dec
test
pop
add
sarl
mov
outsl
mov
out
scas
inc
add
jo
stos
xchg
stc
add
pusha
and
xor
add
push
scas
mov
pop
mov
push
xor
dec
dec
pop
add
inc
jecxz
jns
xchg
fs
mov
loope
lds
fistl
gs
lret
inc
push
outsl
arpl
pop
cmp
xchg
push
fsubrs
roll
push
frstor
dec
xlat
or
cmp
mov
xchg
and
or
push
jbe
xor
rolb
insl
imul
jb
mov
sbb
or
adc
push
pop
cmp
mov
inc
jmp
enter
arpl
push
aaa
outsb
dec
arpl
inc
dec
pop
or
aas
inc
cmc
ret
or
pop
lods
sbb
xor
sub
push
push
jmp
sbb
sub
add
inc
jno
mov
stos
iret
add
sar
imul
dec
add
add
sbb
jo
outsl
inc
pop
push
movsb
adc
mov
fs
sub
inc
addb
ds
ficompl
loopne
clc
dec
jbe
data16
pusha
push
jo
jno
cmp
mov
mov
add
scas
cmp
pop
roll
in
ret
xchg
add
push
es
or
sbb
fadds
add
sbb
arpl
fcmove
pop
imul
push
in
inc
cmpsl
add
dec
pop
notb
push
mov
imul
push
push
and
aas
mov
insb
cld
inc
jae
std
or
cmpsl
adc
add
je
popa
add
divb
add
xor
clc
cmp
and
ljmp
pop
imul
push
ret
cmp
insb
sbb
cltd
or
add
sub
inc
jae
pop
ret
xor
sbb
and
fbld
pop
ficoms
mov
push
popa
scas
std
mov
xchg
and
xlat
push
and
inc
cwtl
aam
push
jecxz
cmp
xchg
xor
add
sub
aam
or
mov
push
mov
add
pop
push
call
insb
push
sbbb
push
jnp
ret
pusha
sbbb
ds
iret
icebp
pop
and
add
std
or
adc
jns
sub
and
mov
rcl
pop
add
sbbl
cmpsl
data16
inc
cmp
inc
xor
sti
sub
or
cwtl
pop
push
shlb
fs
pusha
xchg
popa
jmp
mov
mov
mov
dec
shlb
push
or
adc
xor
and
mov
push
adc
mov
inc
jbe
stos
adc
lcall
out
pop
xchg
or
sarl
add
out
lock
cmp
enter
out
iret
repz
test
pop
mov
pushf
cwtl
xchg
nop
mov
jo
pusha
push
pop
repz
repz
inc
cmp
and
stc
cmp
and
cld
in
lock
sub
daa
call
repz
fcom
enter
cmp
repz
mov
repz
repz
sub
sbb
stc
cmp
adc
add
in
hlt
sahf
out
sahf
in
in
int3
mov
jge
in
pop
xchg
push
mov
js
iret
repz
out
inc
sub
and
or
add
loopne
push
adc
inc
es
add
adc
add
jo
push
push
addr16
mov
push
mov
jnp
lcall
xor
testl
cmp
loopne
callw
mov
addr16
add
ja
push
aaa
maskmovq
mull
jp
add
adc
add
fildl
add
test
pop
jg
fs
inc
dec
push
xor
pop
mov
mov
xorb
shlb
xchg
add
cmc
add
ud0
rorl
clc
adc
andl
int
addb
push
mov
xor
or
xchg
mov
add
in
cmp
test
adc
push
mov
inc
outsb
sbb
or
aam
test
sub
dec
aam
xchg
cmp
insl
jbe,pn
and
add
iret
lahf
and
xor
ds
je
jbe
cmp
mov
xor
in
pop
jb
imul
or
push
addr16
xchg
imul
and
cmp
je
dec
sub
add
ja
and
pop
or
add
push
jne
sbb
roll
jae
popaw
insb
into
rcll
in
imul
sti
ss
sbb
jmp
push
aam
ja
inc
add
inc
pop
pop
adc
pushl
add
les
xor
sbb
bound
loopne
pushl
sbb
das
xor
xorb
xor
xor
xor
xor
xor
xor
movsb
xor
xor
pushl
xor
xor
xor
xor
xor
xor
xor
xor
xor
dec
xor
xchg
pushl
ljmp
ss
es
dec
aaa
push
aaa
mov
iret
aaa
call
aaa
out
aaa
std
aaa
adc
dec
cmp
cmp
cmp
cmp
inc
cmp
cmp
cmp
cmp
cmp
cmp
data16
cmp
cmp
cmp
cld
incl
cmp
cmp
cmp
cmp
cmp
cmp
sub
ret
add
add
aas
push
lock
idivl
or
pushl
adc
and
dec
xor
xor
outsb
xor
popf
xor
xor
jg
and
inc
xor
push
xor
xor
xor
xor
xor
xor
incl
xorl
xor
jge
mov
xor
xor
incl
mov
xor
jecxz
call
xor
mov
ss
ss
ss
ss
aaa
sbb
jno
jmp
pushl
mov
aaa
loopne
add
or
cmp
cmp
cmp
cmp
cmp
or
cmp
cmp
cmp
push
inc
cmp
jl
cmpl
mov
cmp
push
adc
cmp
cmp
cmp
cmp
cmp
cmp
pop
cmp
imul
cmp
cmp
pushl
pop
test
jo
test
mov
aas
adc
xor
inc
aas
popa
aas
cmpl
aas
mov
les
into
aas
out
jmp
repz
cmp
pop
xor
xorb
xor
fdivs
fnsave
ljmp
xor
xor
xor
xor
xor
xor
pop
xor
xor
lcall
pushl
xor
xor
xor
xor
xor
xor
xor
xor
pop
xor
jo
pop
pusha
pop
call
xor
xor
xor
or
pop
xor
xor
xor
xor
push
aaa
push
sub
ss
clc
jg
xchg
cmp
cmp
cmp
mov
mov
cmp
cmp
cmp
cmp
mov
xchg
cmp
cmp
cmp
cmp
xchg
aas
inc
aas
pop
aas
ja
inc
test
jbe
pop
push
paddd
loop
xor
pop
xor
push
xor
xor
test
call
xor
xor
xor
ret
xor
xor
inc
xor
lcall
clc
xor
xor
test
mov
pop
pushl
mov
nop
xor
out
in
xor
scas
clc
xor
cmp
mov
lods
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
jp
cmp
adcb
mov
stc
cmp
cmp
cmp
push
lcall
and
cmpb
ds
aas
jmp
lcall
cmp
xchg
pushl
dec
ss
xchg
cmp
cmp
mov
mov
adc
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
mov
pop
xchg
cmp
adc
dec
aas
push
mov
cmpb
aas
mov
aas
lret
aas
in
out
out
jo
and
loop
xor
xor
xor
xor
inc
pop
fisubrl
xor
loop
xor
xor
xor
hlt
aad
xor
xor
xor
scas
std
xor
cmpsb
data16
aaa
pop
pushl
lret
add
or
aaa
and
aaa
dec
clc
pushl
dec
aaa
push
aaa
pop
aaa
imul
xchg
mov
xchg
aaa
mov
aaa
xor
cmp
ljmp
cli
outsl
xchg
outsl
cmp
xor
pusha
cmp
mov
cmp
jecxz
sbb
sbb
push
cmp
inc
cmp
dec
cmp
popa
cmp
jmp
lcall
cmpb
cmp
push
stos
cmp
cmp
xor
cli
decl
fstpt
loopne
in
jmp
out
cmp
repnz
fcomip
scas
jbe
adc
sub
xor
cmp
cmp
dec
cmp
push
cmp
insl
cmp
pushl
js
cmpl
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
ljmp
cmp
and
xor
cmp
pop
cmp
decl
mov
xchg
cmp
mov
jp
jg
cwtl
ds
ds
lcall
jecxz,pt
out
ds
das
aas
cmp
je
jge
mov
movsl
aas
stos
aas
mov
mov
sahf
jo
or
push
xor
insl
stos
cmc
dec
inc
dec
lcall
fidivl
in
call
adc
and
sub
cmp
jb
pop
jmp
xor
xor
xor
xor
xor
xor
mov
cld
aaa
loopne
jl
cmpsl
xor
xor
scas
jno
xchg
xor
xor
xor
out
cli
push
cmpsb
pushl
xor
xor
mov
ret
push
cmc
cmc
aaa
xchg
aaa
fwait
sahf
cmpsb
mov
bound
scas
fldl
rcl
cmp
sbb
sub
cmp
cmp
mov
mov
je
pop
fimull
nop
cmp
cmp
cmp
subl
jle
ljmp
cmp
or
xor
cmp
bound
data16
push
outsb
aaa
jb
decl
xchg
ja
js
jge
cmp
cmp
cmp
cmp
loope
sub
cmp
jle
mov
loope
test
sbb
ds
xor
xchg
aas
push
mov
xor
inc
xor
mov
xor
xor
sbb
and
push
ss
fiadds
cmpsb
cltd
aaa
mov
ret
aaa
jmp
repnz
jmp
sbb
cmp
pop
cmp
jge
mov
cmp
cmp
jbe
jg
loopne
xchg
cmp
cmp
cmp
mov
and
cmp
idiv
cmp
cmp
fdivrs
push
aas
jne
mov
or
push
ss
mov
fwait
xor
xor
dec
or
lock
xor
xor
divl
lcall
jge
pop
xor
fsub
adc
es
dec
ss
outsb
aaa
cld
incl
xchg
movsb
ss
enter
in
and
cmp
cmp
cli
xchg
cmp
mov
push
loopne
ljmp
push
push
jge
ljmp
jo
jne
test
mov
ret
cmp
jg
decb
push
cmp
pusha
data16
aam
fnstsw
jecxz
imul
mov
loopne
js
cmp
cmp
pop
sarb
inc
cmp
cmp
rcll
mov
and
push
cmpb
cmpsl
ds
ds
inc
add
idivl
add
sbb
addr16
loope
aaa
sbb
inc
rol
xchg
xor
incl
pushl
push
xor
aad
out
cmp
or
xor
xor
xor
xor
xor
push
xor
mov
int
in
xor
xorl
add
xor
sar
ds
dec
aaa
pop
aaa
js
mov
stos
cli
fidivl
out
in
aaa
cli
aaa
mov
cmp
cmp
cmp
mov
cmp
cmp
cmp
cld
aaa
cld
pop
cmp
cmp
cmp
cmp
cmp
adc
aas
ljmp
jbe
cmpl
cmp
cmp
adc
and
pusha
aas
loop
loop
cmpb
aas
fdivrl
loop
out
out
pop
rclb
filds
push
adc
xor
jae
cmp
jne
rcl
pushl
jg
xchg
xor
xor
xor
cmp
xor
jo
pusha
shll
ljmp
pushl
adc
adc
sbb
sbb
sub
sub
nop
cmp
mov
push
loope
test
enter
sarb
aam
in
ljmp
jns
scas
xor
aaa
adc
decl
into
cmp
inc
xor
xor
lcall
decb
lods
xor
xor
fdivl
in
test
lods
xor
out
add
int3
xor
cmp
sub
sub
xor
rcll
cmp
inc
cmp
cmp
cmp
scas
push
loope
xor
fidivs
cmp
and
jl
cmpb
cmp
arpl
push
mov
pop
test
mov
cmp
cmp
scas
scas
mov
call
dec
cld
push
add
inc
stos
sahf
or
adc
sbb
and
and
sub
sub
pop
loopne
fidivl
cmp
inc
cmp
jg
icebp
dec
cmp
pop
cmp
cmp
insb
cmp
je
pop
clc
add
jl
cmpb
push
mov
nop
lock
pop
push
push
mov
aas
inc
test
lcall
aas
push
aas
xchg
aas
cwtl
aas
lods
aas
mov
shl
ret
fildll
aam
fdivrs
loopne
clc
jbe
push
or
pop
jmp
xchg
xor
xor
xor
inc
or
pushl
dec
xor
test
mov
nop
xor
xor
fcompl
cmp
mov
mov
xor
pusha
xor
pusha
cmpsb
and
fimuls
xor
cli
lcall
shlb
sahf
int3
shlb
aam
fdivs
fdivl
loopne
in
call
mov
clc
ss
ss
call
aaa
or
adc
adc
aaa
sbb
and
and
sub
sub
aas
cli
lcall
aaa
cmp
cmp
inc
aaa
inc
aaa
dec
jb
aaa
push
aaa
pop
aaa
pop
aaa
pusha
aaa
jo
jl
mov
xorb
aaa
mov
nop
aaa
xchg
aaa
cwtl
ret
dec
into
mov
dec
mov
mov
clc
ljmp
xor
enter
shlb
aam
fdivs
fcompl
in
jno
sbb
out
aaa
hlt
xor
aaa
subb
or
adc
adc
sbb
cmp
fdivrl
call
xor
clc
cmp
pop
sahf
jl
cmpsl
lcall
cmp
cmp
sub
cmp
cmp
cmp
cmp
push
clc
insb
cmp
jl
test
mov
cmp
movsb
cmp
mov
mov
mov
cmp
inc
xchg
test
sub
test
and
mov
in
add
or
stc
sti
popa
pop
sub
xchg
push
push
push
push
add
push
inc
mov
push
pop
dec
cld
cltd
push
inc
push
or
aas
movsl
sub
push
inc
out
xchg
inc
add
fbstp
mov
and
addb
test
pop
adcl
push
add
sarb
push
sbbl
sub
jne
data16
addb
nop
add
push
xchg
sub
sub
adcl
mull
sbb
or
add
or
rorb
pop
mov
mov
jmp
mov
adc
aas
mov
xchg
adc
and
push
cmp
mov
shrl
inc
inc
popa
sbb
clc
add
sbb
movsb
scas
aas
repnz
add
inc
es
ret
push
gs
sub
mov
add
movsb
xchg
mov
add
adc
mov
sbb
call
cmp
cmp
xchg
sbb
movl
push
sub
adc
xchg
mov
or
xor
mov
outsb
cld
push
mov
popl
jl
or
incl
jb
jg
add
hlt
cmpsb
xor
mov
orl
pop
ret
dec
and
push
xchg
lock
xchg
mov
test
pop
ficompl
jbe
call
or
sbb
sbb
mov
sbb
mov
aad
fwait
mov
cmp
add
or
dec
sbb
inc
cmc
jp
adc
subl
jl
and
or
mov
shlb
test
jg
loop
dec
mov
sbb
adc
sub
nop
push
es
xor
mov
jbe
mov
rol
and
and
add
jb
adc
dec
fcmovne
add
pop
std
movsl
sbb
and
add
lret
mov
mov
mov
call
xor
inc
cmp
jne
divb
ficoml
std
adc
adc
jmp
push
faddl
cmp
call
fdivp
adc
inc
xchg
call
xor
sub
mov
or
pop
mov
adc
jmp
cltd
adc
mov
imul
push
lea
push
push
imul
add
sahf
push
pop
and
or
in
adc
loop
sbb
mov
mov
dec
xchg
jbe,pn
dec
bound
cmp
cld
lods
rcrb
pop
fldl
xchg
lock
sbb
fcomps
aas
lea
sbb
pop
clc
fnsave
cmp
mov
and
or
leave
ficoml
ret
pop
adc
mov
xor
mov
push
push
fstps
or
and
adc
push
add
mov
sub
and
inc
imul
push
fisubs
arpl
jecxz
pop
add
and
mov
mov
cwtl
and
lret
xchg
add
imul
push
jecxz
shll
cli
add
call
sbb
addb
cli
mov
push
pop
add
dec
test
sarb
cmp
and
dec
cmp
jne
adc
push
lods
push
outsl
std
adc
loope
add
sbb
std
xor
sub
mov
std
les
std
adc
push
sbb
or
ja
std
pop
int3
jne
js
std
pusha
adcl
leave
inc
jo
mov
xor
jmp
sar
xor
lret
xchg
mov
cmp
or
mov
inc
pop
and
xchg
xchg
pop
and
add
cmp
dec
xor
jmp
data16
sub
cwtl
inc
dec
xacquire
xor
dec
inc
and
lock
arpl
pmaxsw
or
cltd
je
jge
ret
ss
push
mov
xchg
jmp
lahf
jno
sahf
mov
addl
inc
fistl
xorl
cltd
or
pop
mov
fnstsw
fstpt
fdivs
lret
mov
lea
aaa
mov
xchg
push
lods
sbb
mov
je
or
mov
popf
xchg
aam
lods
add
pop
and
cmp
or
stos
add
ss
enterw
mov
push
xchg
addl
call
jmp
add
and
push
cmp
dec
mov
pop
out
mov
push
pop
pushf
pop
adc
adc
push
sbb
dec
sub
rcll
adc
insl
insb
in
xlat
sbb
pop
cli
sbb
sbb
and
lahf
and
ds
std
pop
xor
ds
dec
mov
call
mov
fucomip
or
fmuls
mov
or
fs
jbe
into
aaa
xchg
pop
mov
and
rolb
dec
les
cmp
popa
dec
dec
xchg
jne
pop
cwtl
aad
pop
push
ds
es
cmp
and
pop
mov
push
sbb
call
es
add
daa
fcoml
mov
and
adc
nop
mov
mov
inc
lret
mov
push
add
push
adc
gs
and
add
gs
fwait
ret
cmp
sbb
push
push
add
sbb
insl
add
movsl
sbb
mov
push
xor
das
mov
cmp
sbb
cmpl
or
cmp
push
push
push
jbe
adc
sub
je
push
or
repnz
sbb
mov
je
scas
fidivrl
add
inc
jne
mov
fisttpl
mov
sbb
xor
xor
add
pop
fistl
jns
add
insb
subb
fdivl
ret
insb
push
jae
jb
inc
testl
adc
out
pusha
cmp
inc
ja
mov
ret
adc
insb
mov
mov
mov
inc
mov
fdivrs
cmpsb
sub
fiaddl
add
les
jg
pop
popf
cmp
nop
and
jg
and
cmp
mov
es
dec
pop
testb
sbb
mov
xchg
dec
jg
iret
jnp
xchg
fs
lret
repz
dec
inc
clc
nop
add
sbb
gs
out
jmp
ljmp
lret
std
add
and
out
outsb
cmpb
inc
pop
nop
inc
push
fs
pop
test
push
mov
lret
cmpsl
adc
gs
push
cmpsl
jns
shrl
lock
int3
repz
cmp
or
and
cwtl
mov
xor
jnp
inc
cmp
inc
push
push
push
cmpsl
scas
adc
out
mov
cltd
jle
inc
adc
and
rclb
sub
je
cltd
and
sbb
mov
mov
cmp
cltd
mov
xor
in
cltd
add
stc
adc
inc
push
call
or
pop
pusha
mov
pop
or
xchg
and
call
test
cmpsl
ret
int3
push
add
shlb
sub
sbb
iret
enter
daa
daa
es
shlb
daa
daa
lret
inc
xor
daa
daa
lcall
daa
daa
daa
sbb
movsb
imul
dec
push
daa
daa
daa
daa
inc
enter
sub
xchg
cmpsb
jns
sub
sub
inc
xchg
sub
dec
rcrl
sub
sub
and
xor
sub
sub
lret
sub
sub
adc
movsb
sub
dec
testb
cmp
and
push
or
sbb
adc
or
inc
push
jne
sub
loope
inc
mov
add
inc
stos
cltd
mov
psubb
and
adc
xor
push
rcrb
sbb
pop
cmc
push
lock
push
jp
or
clc
fs
dec
sbb
cmp
sbb
and
push
test
nop
subb
psubsb
cwtl
inc
xchg
outsb
test
jo
orb
inc
push
sub
push
test
and
mov
jge
mov
xchg
adc
pop
mov
sub
orl
jle
or
pop
es
mov
inc
ja
call
cvtps2pi
pop
mov
or
addr16
fldl
sub
and
out
push
add
xchg
push
or
or
stc
sbb
loopne
fs
adcb
or
daa
adc
daa
adc
adc
ret
call
dec
jae
add
mov
movsb
cmp
add
adc
add
repnz
sub
pop
add
pop
mov
dec
and
into
or
cltd
sub
jno
dec
mov
mov
imulb
cltd
xchg
mov
nop
clc
ret
pop
cltd
cwtl
pop
push
call
or
cwtl
lret
cmp
inc
mov
inc
fdivl
cltd
fs
shlb
outsl
cltd
mov
dec
pushf
ss
xor
cltd
xchg
outsb
or
cwtl
pop
mov
xorb
add
xchg
sub
and
mov
test
or
add
sbb
test
pusha
and
mov
cltd
repnz
adc
adcb
inc
cmp
pop
xor
xor
sub
xor
xchg
cmp
shrl
inc
push
pop
aam
pop
shll
pop
shrl
inc
rcl
push
cmc
cmp
push
mov
push
cmpsl
in
xchg
jmp
outsb
adc
dec
rcll
aam
or
pop
ss
test
jb
roll
add
mov
enter
aam
in
add
rcll
push
adc
mov
imul
push
pop
jl
mov
shrl
scas
and
sub
inc
ror
stos
inc
imul
pop
loopne
dec
xor
nop
and
popa
fsubrs
mov
fldenv
fidivs
push
mov
cmp
cmpsb
and
jl
inc
cmp
inc
shlb
leave
inc
pop
and
stos
fcmovbe
fldl
pusha
adc
call
sub
ss
outsb
push
mov
lea
mov
mov
loope
cwtl
sub
stos
pop
jmp
and
push
jne
push
sub
inc
aam
push
push
addl
ss
es
aad
shrl
mov
xchg
shrl
xchg
push
daa
or
pop
or
test
nop
dec
pushf
pop
adc
icebp
and
and
push
mov
rcrb
adc
fstpl
rorb
mov
mov
cs
clc
in
push
add
mov
loop
pop
pop
pop
add
push
mov
or
and
lods
sbbb
movsb
fwait
and
cmpsb
xorb
les
add
and
adc
pop
push
pop
nop
fidivs
popa
mov
inc
andl
ret
js
jae
pop
xchg
pop
push
sub
sub
push
add
pop
loope
adc
into
sti
sub
not
mov
lret
pop
mov
inc
xor
movsl
hlt
pop
xchg
cltd
mov
xor
mov
pop
mov
inc
shr
sub
pop
cmp
leave
repnz
mov
fstpl
push
pop
adc
into
call
mov
dec
adc
fnstcw
outsl
adc
fdivs
lds
pop
jmp
loop
lea
or
movsb
jne
pop
call
addl
pushf
sbb
sbbb
mov
sbb
and
addb
jne
cmp
leave
sbb
iret
imul
mov
dec
jno
cmp
dec
cmc
xchg
mov
mov
nop
andl
aas
lock
jl
fs
xor
pop
inc
stos
add
pop
out
jmp
push
addb
outsl
cmp
xor
stos
adcl
lahf
xor
cmp
xchg
adc
add
xlat
push
cmpb
aas
shrl
or
inc
cmpsb
pop
pcmpgtd
pop
fstpl
frstor
loop
in
int3
pop
int3
fsubl
mov
push
aas
push
call
push
cs
pop
or
mov
loopne
int3
pop
dec
repnz
push
inc
fdivl
fdivl
fwait
pop
or
sub
lret
call
or
mov
add
lret
pop
mov
or
mov
adc
push
mov
cmpsl
sub
mov
cmpsl
inc
out
inc
enter
sub
dec
cs
jmp
mov
add
mov
pop
add
bound
and
sbb
arpl
insb
xchg
loopne
fs
or
je
fs
or
clc
pushf
outsb
xchg
sub
loopne
loopne
or
shrl
loopne
pop
jns
and
mov
les
mov
daa
in
inc
nop
push
js
or
jmp
inc
mov
flds
mov
jmp
and
xchg
cmp
inc
daa
jnp
pop
mov
inc
daa
fwait
roll
fmul
arpl
fstpl
cltd
loopne
inc
xor
sub
adc
cltd
pop
sub
bound
cltd
push
push
mov
sub
dec
inc
mov
fcoml
js
mov
adc
cmpsl
inc
mov
push
stc
pop
leave
sbb
sub
push
push
push
inc
jmp
shll
sub
mov
mov
dec
push
popf
fisttpll
xchg
jl
rcrl
pop
and
clc
cmp
inc
ljmp
enter
mov
fdivr
loope
test
adc
or
lahf
mov
mov
cmc
jle
add
dec
xchg
mov
sub
add
sub
and
and
or
mov
andl
mov
sbb
mov
loope
pushf
adc
inc
adc
call
cmp
mov
popa
insb
xor
pop
pop
mov
pop
ds
mov
in
cmc
das
xchg
lea
stos
fcomi
jmp
or
std
mov
push
pop
push
jns
stos
ret
mov
xchg
and
xor
or
add
pop
push
dec
inc
subl
sarb
jl
addb
mov
adcl
inc
add
mov
mov
icebp
inc
mov
gs
adc
xchg
loope
in
fiadds
movsl
stos
inc
jl
jl
mov
xchg
xor
push
jb
push
inc
mov
sbb
dec
pop
pushf
sub
jge
inc
pop
adc
or
inc
inc
add
or
mov
andl
xchg
mov
nop
pop
ret
popf
jecxz
movsb
jne
xchg
or
shrb
pop
sbb
pusha
or
shlb
and
sbb
xchg
fildll
cltd
inc
sbb
cmp
inc
xchg
jecxz
xchg
pop
pushf
push
cmpsl
ss
inc
xchg
push
fdiv
shrb
push
sbb
out
imul
xor
mov
hlt
xchg
pushf
lods
dec
faddl
movsb
adc
jae
daa
mov
xchg
mov
mov
adc
xchg
push
xchg
adc
inc
and
insl
ret
pusha
inc
insl
ret
push
push
inc
aam
inc
adc
xchg
inc
aam
xchg
lret
jns
enter
aam
dec
sahf
sbb
aam
fptan
in
leave
scas
shrl
sbb
sub
sub
xchg
sbb
push
test
mov
fsubrs
xorb
xchg
lmsw
inc
or
add
or
push
repnz
add
mov
dec
cmpsl
pop
enter
push
mov
jg
je
rorb
inc
fdivrl
and
out
insl
jns
mov
cmp
xchg
jo
insl
add
imul
cmp
dec
xchg
shlb
xchg
fwait
lcall
sub
dec
xchg
movsl
xchg
mov
pop
mov
leave
xchg
lods
les
xchg
movsl
xchg
cmpb
jl
dec
jmp
call
imul
sub
xor
and
and
call
lret
dec
xchg
xchg
test
lcall
in
push
lea
add
adc
test
adc
aam
int
xchg
aam
mov
in
adcb
pop
adc
cmpsb
and
ss
push
cmpsb
mov
cmpsl
or
mov
call
lods
jne
int
repnz
das
sbb
leave
call
inc
fldcw
loopne
jb
lahf
int3
push
add
das
push
out
or
jge
pop
mov
ljmp
jp
aad
pushf
imul
cmpsl
sub
inc
mov
lods
addl
mov
test
aas
push
aam
dec
pop
inc
and
xchg
sbb
and
mov
in
or
pop
pop
inc
loopne
ret
fstpt
gs
push
dec
mov
xchg
mov
push
sbb
gs
aam
aaa
sbbb
mov
clc
outsb
sub
mov
push
das
call
and
in
nop
fistl
mov
sub
movsb
iret
ret
pop
and
xchg
mov
loop
fldt
mov
xchg
push
and
fistpl
movsl
mov
fistpl
add
cmp
ret
push
xorb
lret
or
fstpt
inc
fidivrl
outsb
stos
add
lods
sub
mov
mov
jge
dec
push
fneni(8087
mov
push
rcl
adc
or
push
sbb
cmc
test
fistl
aam
imul
call
lret
or
mov
and
xor
jmp
cmp
nop
add
ja
dec
or
mov
or
test
add
and
filds
add
mov
adc
lea
mov
in
iret
leave
rcll
mov
iret
inc
add
xor
int3
inc
lret
jns
mov
sub
dec
pop
mov
jns
sub
adc
or
hlt
mov
in
mov
aam
jns
jns
int3
mov
mov
das
das
das
pop
test
mov
das
das
mov
jno
das
das
das
das
imul
das
das
dec
mov
xor
and
push
jb
mov
and
cmp
in
mov
nop
sbbl
mov
enter
stos
mov
in
pop
cmp
mov
gs
cmp
inc
push
inc
mov
sbb
and
and
push
jb
addl
idivl
inc
loope
mov
in
mov
inc
push
jb
mov
and
cmp
xchg
sbbl
mov
enter
inc
mov
in
pop
cmp
mov
jb
sbbl
hlt
mov
inc
push
fidivrs
mov
mov
add
sahf
or
mov
xor
das
add
adc
push
and
inc
adc
daa
int
dec
adc
adc
push
mov
sbb
jae
rcrb
mov
int
call
rorb
cmp
dec
xor
inc
inc
mov
inc
inc
mov
dec
sahf
xor
daa
jl
dec
dec
push
cmpsb
push
or
nop
jo
inc
subl
and
mov
aam
sub
rolb
rcll
mov
and
add
pop
js
inc
inc
inc
inc
inc
mov
xor
inc
xor
sub
leave
sub
jb
dec
repnz
popl
pop
aam
push
stos
or
ret
fsubs
inc
hlt
jo
mov
in
lods
and
testl
pop
icebp
ss
add
aam
add
add
adc
push
xor
mov
push
or
movsl
push
push
out
xor
sub
aam
cmpxchg
and
push
mov
jne
xchg
mov
mov
inc
bound
mov
scas
xchg
int3
lcall
pop
scas
cmp
dec
scas
push
dec
scas
movsl
gs
mov
add
les
inc
inc
sub
lret
and
adc
adc
mov
scas
lret
rcrb
xor
dec
add
scas
jl
rclb
scas
mov
mov
and
scas
lret
xchg
dec
cwtl
gs
sarl
pop
xchg
outsb
mov
mov
scas
bound
stos
adc
scas
adc
pop
scas
mov
out
repz
scas
adc
shlb
push
scas
adc
shlb
int3
scas
bound
or
sub
xchg
adc
sbb
aas
andb
cmpsl
pusha
popa
movl
jo
add
sub
and
adc
xchg
and
sbb
pusha
test
xchg
dec
test
cmp
scas
test
mov
jmp
xchg
movsl
cmp
sbb
dec
movsb
lcall
test
int3
mov
es
aam
int3
mov
xchg
ja
mov
test
sub
test
out
sarb
gs
add
xchg
movsl
test
lret
rorb
pop
mov
dec
jbe
xchg
dec
sbb
push
pushf
cmp
sub
ja
stos
mov
shrl
pop
test
or
pop
sbbb
out
test
hlt
xorb
and
xorl
cld
jp
jmp
dec
rclb
cmp
xchg
lock
subl
cmp
push
les
sub
sub
xlat
test
out
pop
jp
test
sbb
cmp
test
bound
sbbb
or
test
lods
pop
test
adc
mov
movsl
test
orl
mov
sbb
andb
loopne
imul
or
adc
shl
test
pusha
xchg
mov
pop
test
stos
pop
test
movsl
jmp
sbb
not
or
xor
lret
test
mov
test
je
je
nop
jbe
or
push
pop
pop
sbb
mov
sub
dec
outsl
sub
movsl
leave
ds
leave
sbb
shr
pextrw
adc
cld
lock
xchg
xor
push
sbb
add
rcl
aam
test
ds
jne
rorb
je
xor
sub
or
push
aaa
xor
mov
dec
test
pop
xchg
test
jmp
add
pop
test
shrb
xchg
movsl
test
fs
test
aam
test
jbe
xor
sbb
test
stos
rolb
mov
xor
or
jb
stos
test
stc
ret
gs
sbb
and
add
sbb
add
push
call
cmp
fmull
mov
mov
xor
mov
push
pop
test
jne
aaa
dec
loop
mov
mov
repnz
sub
mov
test
fldcw
test
lahf
lods
sbb
test
test
pop
test
shlb
test
mov
test
or
mov
sub
test
popa
outsb
dec
pop
add
movsl
jmp
test
cs
test
les
jnp
fmuls
int
test
dec
lods
xchg
sbb
lds
mov
push
test
xchg
and
test
pop
xor
add
jle
mov
inc
mov
add
add
movsb
pop
leave
and
or
pop
cs
mov
adc
adc
mov
push
adc
jmp
hlt
pop
mov
in
enter
xor
shrb
or
clc
cltd
fucomp
leave
fwait
push
shr
imul
or
pop
in
popf
in
xor
fdivrl
loopne
loopne
test
ja
cmpsl
xor
scas
popaw
xchg
mov
repnz
xchg
add
mov
sbb
movsl
popf
push
xchg
or
popf
out
xchg
out
push
cmpsb
ljmp
jmp
mov
jnp
push
leave
lahf
loopne
push
out
lcall
cmp
pushf
mov
faddl
cmp
repz
sub
inc
push
repz
repz
outsb
adcb
mov
or
repz
repz
ds
pop
jb
iret
repz
mov
out
ds
stos
adc
cmp
out
push
pusha
jbe
test
jge
out
into
call
sbb
out
sub
dec
pop
insb
rcrb
pop
cmpsb
add
jb
push
dec
add
push
push
mov
or
dec
sub
inc
ret
fimull
mov
push
push
iret
sarl
mov
cmc
fwait
int
cmp
push
push
clc
mov
sbb
xor
iret
mov
or
adc
sbb
add
mov
repz
js
mov
add
repz
test
adc
adc
cmp
jmp
push
adc
xchg
sbb
sbb
cmpsl
stc
call
or
push
lcall
push
pop
sahf
mov
xor
cmpsl
xor
push
and
js
cmp
repz
sbb
adcl
add
lcall
cmp
push
int3
adc
and
mov
outsl
daa
test
and
sahf
addr16
dec
xchg
push
push
cmp
sahf
out
and
add
xchg
repz
shr
loopne
fcom
iret
repz
int3
enter
mov
mov
movsb
mov
repz
xchg
nop
mov
test
cmp
repz
push
cmp
repz
push
push
dec
dec
iret
repz
inc
inc
cmp
xor
cmp
repz
and
add
cmpsl
stc
call
mov
jns
out
dec
sub
iret
repz
les
iret
repz
xor
or
mov
out
in
shlb
lahf
out
or
int3
test
sbb
iret
jl
xor
jg
push
add
nop
jns
push
lock
mov
mov
test
pop
add
inc
es
xor
and
mov
mov
insb
call
xor
push
push
add
and
je
pop
xor
aam
inc
pushw
mov
push
aaa
add
sbb
outsb
jbe
and
out
rorb
jo
mov
popf
out
or
add
shlb
and
aas
xchg
add
daa
out
push
testb
mov
inc
add
outsl
sarb
mov
mov
mov
ss
inc
pop
add
int
shll
jbe
add
sub
mov
cmp
mov
enter
push
aas
andb
shrl
in
sbb
les
inc
pop
rorl
xchg
outsb
xchg
cmp
insb
dec
pushf
fisttps
or
push
inc
lahf
inc
shll
dec
jle
pop
es
cmp
aas
sti
push
int3
fdivs
repnz
push
push
andb
fsubl
dec
clc
push
dec
int3
jbe
rorl
aam
dec
xor
movsb
fists
mov
add
movnti
imul
test
dec
mov
inc
mov
pushf
add
xchg
add
popf
loopne
pop
cmp
inc
insb
pop
scas
outsb
xchg
cmp
cs
lahf
dec
outsl
sahf
orl
loop
push
pop
movsb
ljmp
test
imul
sub
and
movsl
dec
jl
cmp
cmpsb
daa
jbe
subb
sbb
scas
inc
and
inc
xor
stc
mov
jne
notb
imul
sbb
mov
push
outsl
and
mov
je
add
rcrl
pop
adc
sbb
movsb
sub
jae
bound
push
and
sub
sbb
out
pusha
xchg
mov
outsb
inc
scas
push
fwait
dec
add
inc
ret
add
sub
mov
inc
mov
int
inc
adc
push
push
inc
jecxz
push
ja
aam
arpl
dec
add
adc
arpl
mov
daa
xlat
xor
xchg
xor
add
xchg
lahf
xchg
xor
rcrb
add
lea
inc
arpl
adc
add
lea
arpl
add
arpl
dec
sti
lds
inc
lahf
arpl
pop
dec
arpl
xor
and
movups
or
arpl
inc
arpl
push
lods
inc
inc
mov
push
sbb
dec
xchg
mov
ja
mov
mov
outsl
xor
pop
int3
xor
daa
pop
adc
sarl
cltd
push
pop
inc
xchg
movsb
xchg
cmp
adc
jle
pushf
cwtl
xchg
repz
pause
mov
iret
push
inc
inc
jns
out
cmp
xor
sub
jns
out
and
sbb
sbb
jl
adc
xchg
hlt
xchg
in
push
sahf
out
fsubp
push
enter
sahf
out
lods
test
mov
dec
outsl
je
insb
push
sub
jns
fs
push
dec
mov
fdivrp
sahf
out
and
add
in
xchg
push
enter
jns
mov
jns
out
nop
mov
iret
repz
pop
inc
cmp
lahf
out
and
adc
lock
loopne
cmp
repz
mov
leave
cmp
insb
pop
outsl
mov
adcb
and
shll
test
inc
xchg
lock
int
popf
mov
neg
mov
arpl
xor
sub
add
mov
add
ja
pop
adc
cmp
pop
cs
clc
mov
ds
pop
jg
pop
and
mov
pop
jbe
in
add
lcall
xchg
cs
pop
xchg
mov
inc
aas
test
popa
popa
filds
xchg
add
incl
rolb
xchg
inc
xchg
rol
popf
pusha
je
jge
fnstenv
sti
pop
insl
mov
fidivl
fbstp
lret
push
cmpsb
dec
cmp
xor
adc
pop
ss
nop
ss
sub
ss
push
fwait
clc
ljmp
clc
mov
aaa
lcall
aas
cmp
fstpt
push
cmp
xchg
popa
push
ret
stos
fwait
es
inc
xor
fidivrs
and
loop
dec
test
inc
jnp
cmpl
cmp
adc
xor
cmp
cmp
ds
or
mov
ds
ds
faddl
ljmp
ds
ds
aas
pop
aas
and
sub
xor
aaa
into
pushl
vandnps
jbe
jnp
cmpl
movsb
aas
mov
sarl
imulb
or
testl
xor
cmp
jl
xchg
cmpsb
mov
xor
lods
adcb
sub
xor
add
aas
pusha
push
inc
xor
mov
mov
xor
xor
into
das
xor
cmp
xor
stos
xchg
mov
add
xor
inc
rorb
dec
xor
xor
jg
outsb
cmp
mov
pushf
xor
xor
xor
xor
xor
xor
xor
xor
icebp
xor
xchg
ss
mov
ss
sbb
sbb
xchg
mov
clc
testb
loop
cmp
cmp
add
pop
cmp
ljmp
rcrb
or
cmp
xor
xor
cmp
fwait
fs
cmp
cmp
mov
push
pop
cmp
outsl
cmp
roll
cmp
sbb
cli
outsb
cmp
cld
fnsave
push
idivb
cmp
cmp
push
xor
pusha
dec
push
outsb
ja
add
cmp
cmp
cmp
cmp
iret
cmp
and
jmp
cld
cmp
push
ds
ds
lock
rcll
aas
cwtl
xchg
xor
xor
xor
xor
xor
jmp
sbb
push
xor
xor
xor
xor
xor
fbld
dec
xor
inc
lds
xor
xor
outsb
xor
pushl
repnz
dec
ss
bound
xorl
ss
sarb
fnsave
jecxz
icebp
icebp
push
clc
ss
ss
aaa
or
push
pop
add
out
push
xor
aaa
stos
mov
sub
adc
push
mov
dec
cmp
sbb
ja
clc
pop
cmpsb
test
mov
mov
fcoms
cmp
mov
cmp
cmp
and
mov
cmp
cmp
pop
push
xor
and
cmp
xchg
mov
xchg
jno
mov
cmp
jg
adcb
cmpb
xchg
cmp
cmp
cmp
cmp
aaa
mov
cmp
cmp
push
push
fs
ret
cltd
xor
insl
dec
xor
adc
aas
outsb
inc
cmpl
aas
ret
aas
iret
jecxz
xor
adc
lcall
inc
jbe
cld
decl
jg
lea
xchg
xor
xor
xor
xor
xor
xor
jo
sbb
jg
in
pop
xor
xor
push
jae
mov
or
cmp
insb
and
xor
jg
xor
or
adc
push
ss
ss
ss
xor
ljmp
out
ss
xor
xor
outsb
adc
jne
jle
or
sbb
jl
mov
in
cmp
cmp
sbb
cmp
cmp
cmp
aaa
pop
ret
or
cmp
cmp
cmp
dec
pop
mov
outsb
ret
fnstsw
fisttps
push
lea
scas
in
inc
out
faddl
or
cmp
aas
fistpl
scas
dec
adc
push
jge
push
fistps
divb
data16
mov
aaa
mov
fbstp
jmp
xor
movsb
xor
sbb
xor
xor
xor
xor
xor
xor
xor
xor
or
call
xor
ja
mov
pushf
ss
mov
mov
adcb
into
and
push
sarl
jb
clc
lcall
inc
cmp
push
cmp
jmp
jp
mov
jmp
std
cmp
inc
ds
imul
jnp
out
ds
aas
lods
mov
jl
sbb
mov
mov
icebp
xchg
push
cld
xor
lret
out
out
sub
mov
mov
cmp
imul
inc
cmp
ljmp
cli
cmp
push
xor
xor
sbb
gs
cmpsb
ss
adc
sbb
daa
jp
aaa
ss
leave
clc
ss
aaa
dec
aaa
pop
aaa
divb
push
pop
mov
cmpsb
xor
xor
mov
and
pop
sbb
jae
ret
popa
cld
or
test
pop
sbb
jb
inc
daa
mov
mov
rorl
mov
mov
dec
int3
inc
fcompl
in
xor
add
cmp
push
int3
xchg
sbb
mov
mov
jb
out
ret
sbb
gs
mov
cmpsb
test
mov
sub
lds
loopne
inc
sub
fsubrp
xor
out
xor
or
or
adc
adc
sbb
sbb
adc
dec
jbe
xor
mov
adc
push
gs
inc
aaa
xchg
pop
xor
xor
xor
pop
sub
je
jl
or
xor
xor
rorb
xor
les
lret
xor
xchg
inc
add
xor
nop
push
jbe
xor
dec
call
jo
jbe
push
xor
outsb
jo
std
or
xor
cmp
cmp
cmp
mov
mov
fdivrl
pusha
xor
cwtl
out
push
loopne
or
adc
sbb
sub
orl
xor
xor
xor
xor
ss
cmpsl
outsl
jp
xor
xor
push
xor
or
xor
les
cmpsb
sbb
push
mov
push
jb
xor
incl
lcall
pop
fsubrl
in
call
xor
xor
inc
add
inc
xor
loop
adc
add
iret
sbb
xor
aam
xor
xor
xor
femms
cs
xor
xor
xor
pop
xor
mov
ds
pop
pushl
xor
xor
xor
mov
xchg
scas
pushf
xor
roll
mov
test
lods
xor
xor
xor
into
shlb
pusha
push
add
fimull
mov
jo
xchg
xor
xor
arpl
jecxz
aaa
mov
fcmovnbe
subb
cmp
adc
sub
fdivr
add
inc
cmovno
rolb
inc
jp
pusha
cwtl
add
add
in
fbstp
add
add
or
pop
pop
push
or
or
and
or
or
adc
adc
push
adc
pop
sti
aaa
xchg
add
pop
sbb
adc
adc
adc
add
fimull
add
or
adc
pop
adc
icebp
sub
pop
inc
add
add
and
inc
xor
add
inc
jp
inc
mov
fnsave
xor
jge
jg
and
xor
adc
pop
and
xor
xchg
mov
rcll
bound
js
fs
dec
dec
xor
and
inc
sub
aaa
sub
or
pop
xchg
mov
movsb
xor
mov
xchg
xchg
test
jns
inc
or
xorb
xor
add
adc
add
fisubrs
inc
lods
push
adc
pop
popa
jno
stc
add
adc
mov
or
xor
adc
shrl
icebp
mov
addb
loopne
sbb
mov
fiaddl
or
inc
addb
das
mov
std
or
add
lds
cld
cli
and
mov
lcall
ret
jg
fnstsw
ficompl
cmpsl
xor
mov
test
pop
lahf
mov
xchg
mov
std
movsl
jecxz
cli
pop
mov
stc
or
clc
cmpl
jg
or
insb
sub
addr16
out
or
push
push
xchg
add
jmp
repnz
inc
lock
scas
jle
fcmovnu
clc
cmp
fisubrl
in
mov
mov
orb
int3
lcall
mov
push
pop
mov
pop
pop
mov
incl
movb
xchg
sbb
scas
adc
mov
xor
lods
scas
xchg
test
jmp
aam
and
sbb
sarl
and
roll
fwait
movsb
jmp
push
mov
dec
push
out
in
and
ss
repz
cmpsb
pop
outsl
icebp
mov
pop
push
das
std
or
pop
mov
daa
test
aaa
dec
dec
pop
push
out
outsl
loope
loope
rorl
mov
lcall
int
arpl
push
out
or
lcall
inc
mov
sahf
pop
clc
sti
jg
jno
lock
jg
inc
icebp
xchg
pusha
jg
sarl
xor
hlt
and
xchg
jmp
sbb
mov
mov
out
pop
jb
mov
mov
push
mov
sub
pop
mov
jl
rorl
adc
xlat
gs
jg
hlt
push
add
stc
loope
aad
outsl
jg
mov
sar
andl
aas
icebp
testb
mov
jg
pop
xor
jns
mov
in
repnz
jno
pop
sub
jg
ljmp
cli
push
inc
sbb
paddb
inc
mov
clc
jb
adc
push
lock
lods
jp
testb
sbb
into
fcomps
sbb
sbbl
loopne
xlat
cmp
test
loopne
cli
adc
aaa
xchg
in
add
es
or
dec
fisttpll
out
aas
std
cli
mov
push
push
idivl
cmp
sub
inc
scas
incl
cmpb
jg
je,pn
sub
jg
imul
mov
mov
inc
es
gs
dec
jns
enter
or
push
pushf
push
scas
xlat
sub
cmp
sti
punpckhbw
cmpsb
orb
clc
sub
sub
cmp
dec
inc
push
sub
xchg
pop
clc
pop
hlt
lret
movsb
add
add
lea
jg
gs
std
xorb
jg
pushl
outsl
adc
ret
das
pop
pop
pop
shlb
mov
sarb
sbbl
jno
or
sarb
std
pop
les
cli
ss
jmp
mov
inc
arpl
stos
mov
and
insl
add
leave
push
scas
loop
lcall
jge
push
shrl
mov
push
mov
adc
and
sbb
xchg
jo
jg
and
out
test
jae
push
iret
sti
cmp
ficoms
aam
sahf
imul
fcmovnu
rorl
insb
stos
arpl
add
cld
call
js
cmp
scas
lods
push
cmp
fistl
mov
adc
push
movsb
xchg
or
mov
stos
dec
lods
xor
lock
ds
cmpsl
scas
popa
in
pop
or
mov
xlat
pushf
cld
aas
clc
jge
jnp
sbb
outsb
mov
sbb
jecxz
inc
adc
mov
adc
ljmp
push
push
jo
pusha
imul
add
mov
cmp
xchg
mov
sti
es
sub
loop
pop
xchg
ftst
jbe
xchg
and
add
jae
shrb
jmp
jg
mov
lahf
cld
sub
aas
stc
add
out
gs
jno
fidivrl
lock
clc
mov
pop
cld
addl
adc
and
int3
mov
push
enter
jecxz
scas
sub
loop
sar
in
pop
mov
sub
mov
dec
incb
fisubrl
aas
mov
push
sbb
push
inc
or
pop
jg
add
pop
iret
mov
jg
mov
aad
test
in
pop
mov
lock
mov
iret
push
jbe
lock
std
stos
icebp
pop
incb
jno
adc
push
inc
loopne
mov
jecxz
sbb
sarl
adc
loopne
in
pusha
mov
mov
mov
mov
push
cmp
dec
push
in
aas
mov
sahf
cmpl
imul
push
and
jg
or
push
clc
xchg
pop
cld
jg
pushf
mov
repnz
and
mov
adc
pop
in
loope
inc
aas
push
rcrl
rolb
pop
inc
jb
fistpl
adc
call
pop
lock
data16
pop
nop
mov
call
repz
inc
sti
arpl
daa
std
or
sbb
mov
inc
cmpsb
popf
push
loop
sbb
or
imul
push
aas
divb
iret
dec
xor
fsubr
fistps
lds
fidivrl
jg
das
ss
stos
pop
add
dec
mov
sub
jge
jbe
ds
xor
lahf
les
sbb
sbb
cld
addl
clc
incl
in
stc
mov
lahf
outsl
int3
push
sbb
pop
imul
pop
test
bound
xchg
cmpsl
out
outsl
xchg
inc
test
in
jge
popa
push
test
aaa
cld
jg
jbe
outsb
hlt
sti
fsubs
shl
dec
jp,pn
adc
lahf
mov
or
mov
clc
daa
out
lcall
shl
cld
mov
test
mov
pop
jg
pop
shrb
rcl
jg
adc
jg
xor
pop
rcr
dec
mov
gs
pushf
lea
jp
jnp
jg
jecxz
adc
inc
lds
push
pop
adc
imul
in
decl
sbb
inc
pop
xor
rorb
and
add
cmpsl
push
sbb
mov
in
push
pop
inc
cmpsl
enter
mov
into
test
xchg
movsb
insb
or
and
xchg
inc
mov
insb
test
aas
repz
sbb
lock
in
jmp
out
je
ret
mov
clc
push
std
mov
add
test
lds
aad
mov
push
mov
fsubrp
dec
sahf
enter
fcmovb
inc
adc
inc
loopne
test
out
shlb
std
insl
and
mov
or
dec
ss
bound
or
repnz
clc
dec
cmc
mov
jl
call
mov
lret
pop
in
cmp
int
mov
jmp
mov
pop
lock
jmp
hlt
dec
mov
inc
mov
sbb
xlat
inc
aas
mov
jg
add
clc
out
cmp
or
addr16
sbb
cld
daa
jp
inc
clc
in
idiv
adc
cltd
or
mov
ret
nop
cmp
icebp
scas
cli
icebp
das
incb
lock
pop
pop
div
cld
idivl
jmp
add
fs
loope
or
jmp
sti
pop
lds
out
xchg
add
out
or
mov
loope
mov
cmpsl
popf
or
ret
das
sti
mov
fbstp
push
daa
outsl
das
aaa
fwait
pop
aam
add
cmpsb
cmp
call
fiadds
dec
push
adc
mov
dec
adc
call
loopne
cltd
add
sbb
mov
inc
add
rcrl
mov
aaa
std
fistpll
dec
inc
sbb
xchg
rorl
sahf
mov
aas
icebp
ret
ror
sbb
enter
inc
adc
adc
sub
mov
pop
clc
loope
ficompl
in
loope
mov
lahf
jp
dec
add
xlat
mov
sub
rcrl
and
clc
mov
iret
fdivrl
xchg
lcall
decb
xchg
mov
xchg
adc
into
sarl
pop
out
jg
jno
ret
nop
mov
lock
sbb
inc
call
jge
pop
clc
xchg
cmpsb
ljmp
ds
inc
mov
in
sbb
xchg
imul
jle
bswap
lods
outsl
mov
sbb
mov
daa
jmp
faddl
lds
adc
mov
dec
push
popa
pop
add
pop
stc
push
mov
fstpt
mov
enter
jg
pop
add
fsts
dec
add
add
int3
movsl
data16
sti
push
sti
pop
inc
add
or
aaa
enter
bsf
popf
test
sub
iret
and
pop
icebp
sub
movsb
cmp
pushl
mov
pop
xchg
jbe
jae
leave
loop
cmp
mov
fdivrp
iret
fisubrs
lcall
in
add
cmpsl
xchg
xchg
ret
stos
pop
std
test
mov
incl
jmp
stos
xchg
hlt
imul
jmp
pop
nop
jle
jmp
sbbb
push
fwait
call
cld
js
out
adc
mov
ret
or
push
or
cmp
push
mov
sbb
aaa
push
and
inc
xchg
leave
out
pop
inc
imulb
into
mov
cmp
iret
add
decl
popf
fisttpll
xchg
adc
mov
in
adc
repnz
mov
jmp
mov
icebp
xor
push
iret
lods
and
dec
lods
inc
mov
inc
cmp
dec
mov
inc
outsl
fmuls
cmp
xchg
xchg
pop
sahf
mov
stos
test
push
dec
pop
gs
ljmp
scas
push
push
dec
je
fdivs
adc
jo
insb
out
or
loop
stos
and
mov
sbb
ljmp
rcrb
in
sbb
popa
inc
pushf
xor
pushw
pop
repnz
push
dec
cmp
ljmp
ret
aas
lea
and
push
mov
negl
cli
add
mov
lret
pop
dec
dec
iret
inc
adc
or
ljmp
xor
jg
sbb
mov
dec
sahf
pop
inc
jecxz
pop
and
inc
das
pop
icebp
in
jle
iret
popa
mov
pop
aas
insl
aaa
ljmp
sbb
adc
lods
dec
jns
into
stos
mov
mov
testb
fmulp
mov
jmp
push
cltd
push
cmpsl
inc
add
pop
rorb
lock
mov
inc
dec
cmp
mov
in
pop
sub
push
nop
pop
pop
cmp
push
cmp
sbb
ljmp
xor
cmp
or
lahf
lahf
test
sub
xlat
mov
xchg
pop
dec
std
and
and
aad
ljmp
sbb
xchg
mov
sbb
fnstcw
jmp
addr16
das
mov
cmpsb
sbb
or
int3
sahf
ljmp
adc
mul
sbb
mov
lret
ss
scas
into
and
xchg
sbb
movsl
fwait
pop
incl
add
fidivs
mov
or
hlt
das
cltd
xlat
cmp
jg
and
loope
test
in
je
add
jo
sub
icebp
bound
out
in
dec
xlat
shrb
mov
jbe
xchg
lods
aad
cld
pop
js
enter
or
xor
xchg
or
xor
and
push
dec
int
mov
jmp
pop
or
gs
ret
or
imul
pop
jae
mov
in
fmull
xor
lcall
xchg
mov
pop
cmpsl
inc
cmp
sub
push
mov
cmp
adc
sarl
pop
cmp
rcrl
mov
nop
lret
repz
outsl
jns
cmp
mov
mov
leave
push
ret
push
mov
les
std
mov
push
pushf
loopne
cld
and
jge
dec
push
cmp
dec
in
dec
gs
aaa
in
dec
jne
mov
negl
rcl
lods
push
clc
push
call
loopne
dec
fadd
or
sbb
inc
add
adc
jo
inc
lcall
movsb
test
cmp
xor
pop
pop
sbb
jg
push
in
test
xchg
xchg
cltd
pop
xor
out
je
sbb
sbb
pop
push
mov
lahf
ljmp
scas
sub
cmp
push
push
mov
sbb
aaa
sbb
addr16
jp
jno
xchg
mov
add
stos
bound
cmpsb
xor
dec
int
stc
dec
inc
aad
push
dec
jmp
daa
addr16
enter
lret
pop
jg
imul
in
jne
cmp
lahf
add
add
mov
movsb
add
mov
iret
rclb
outsl
lret
and
sbb
pop
movsl
fildll
je
cmp
jo
test
jp
jmp
adc
mov
dec
mov
scas
cli
add
add
push
mov
call
xor
xchg
sbb
cld
jmp
movsb
je
decl
mov
add
jno
mov
xchg
stos
xchg
xchg
push
pop
jmp
xor
xor
push
cmpsl
stc
dec
mov
test
lods
mov
sub
lcall
mov
jae
jb
jae
push
cmp
add
fxch
lahf
xchg
sti
std
pushl
pop
cld
push
notl
out
fwait
jp
sbb
mov
nop
mov
push
ljmp
add
or
lds
cs
push
in
test
fcomip
inc
sub
sbb
push
testl
loope
mov
fidivs
cwtl
xor
lods
bound
jnp
add
adc
je
mov
stos
nop
push
popa
cwtl
in
mov
stc
cwtl
pop
mov
lcall
ficomps
aas
pusha
push
ja
xchg
dec
jne
inc
mov
xchg
imul
fdivrl
xchg
xchg
leave
mov
test
sub
movsb
and
xchg
mov
call
adc
jmp
mov
pop
sub
mov
fs
jmp
ret
xor
cmpsl
jae
jae
or
pop
cmp
cld
jb
imul
push
cli
ret
mov
mov
or
xor
inc
lock
in
cwtl
daa
out
push
out
int3
iret
clc
mov
ljmp
adc
outsl
je
xlat
test
mov
das
pop
cmp
in
aam
lock
jmp
hlt
sub
xor
lret
repnz
jno
push
loop
movsb
sbb
push
ljmp
lds
jmp
popa
pusha
addr16
fnstsw
ret
cli
inc
jb
callw
loopne
xchg
call
mov
bound
pop
ret
dec
dec
adc
pop
cmpsb
fcomip
or
lds
xchg
mov
int
popa
fwait
enter
fwait
sbb
fst
ljmp
sti
lcall
mov
dec
push
lcall
shlb
cs
daa
lock
mov
aas
or
pop
scas
add
mov
push
sbb
lods
incl
push
repz
or
xchg
repnz
and
pop
xchg
out
ljmp
mov
push
xchg
mov
daa
fsubl
ss
das
jmp
test
rorl
pop
lds
test
incl
dec
aaa
out
scas
lcall
fwait
dec
jne
jbe
push
push
mov
push
xchg
out
clc
call
into
shrl
shlb
add
push
push
addr16
inc
decl
dec
push
les
add
mov
mov
insb
call
ja
sbb
xchg
mov
ds
arpl
decl
icebp
std
sub
inc
cs
jle
mov
repnz
inc
jmp
ds
out
aaa
mov
pop
sbb
cld
pushl
aas
pop
mov
inc
sbb
adc
loopne
decb
pop
cs
cmp
shl
or
or
imul
call
call
xchg
shrl
int3
cmpsl
xor
xchg
fsubrp
jno
arpl
xor
inc
add
lods
pusha
mov
dec
mov
in
fistl
out
dec
adc
mov
ljmp
cli
incl
dec
and
mov
jp
call
adc
mov
enter
cmp
or
movsl
or
sbb
stos
mov
push
jge
inc
jbe
flds
xchg
lret
test
rcl
or
outsb
sbb
ljmp
test
lods
add
mov
jb
gs
xor
rorb
call
dec
jae
cmpsl
mov
sbbl
fidivl
into
stc
fldenv
pushl
mov
les
push
mov
repz
imul
cmp
addr16
inc
jb
scas
clc
mov
pop
dec
lret
std
sbb
add
shll
lcall
rorb
daa
jnp
int3
les
xchg
iret
inc
shlb
mov
sahf
jge
outsl
clc
ljmp
xchg
outsb
inc
fsubl
or
inc
mov
cld
inc
inc
fwait
cmpsb
lcall
and
cld
insl
fs
lcall
sub
pushl
cmp
rorl
outsl
in
xor
dec
in
mov
and
int
jp
jecxz
gs
sub
insl
push
or
rclb
dec
xchg
pusha
fwait
inc
imul
ljmp
clc
sbb
xor
dec
std
mov
pop
add
or
jnp
mov
mov
xchg
jmp
out
jge
stos
hlt
loope
call
pop
aam
mov
or
fistps
cmp
test
sub
push
aad
pop
adc
adc
iret
ljmp
jge
adc
fstps
add
xlat
stc
pusha
pop
dec
jecxz
push
push
jno
popa
pushf
jmp
into
dec
pushf
es
push
ljmp
inc
pop
pop
std
fimull
pushf
jns
fs
push
das
dec
push
xchg
xor
aas
out
and
hlt
jmp
add
leave
xor
shr
idivb
rsqrtps
fs
adc
idiv
fistpll
jb
dec
mov
push
pop
out
data16
cmpb
xor
xchg
and
inc
jle
sbb
loop
push
and
int3
cmp
js
mov
lcall
inc
in
fistps
shlb
and
les
aam
cmp
ss
scas
and
push
adc
push
add
sub
dec
dec
cltd
adc
decl
xchg
jl
nop
aas
push
shll
cmp
scas
ja
sub
pop
mov
ret
jmp
popl
mov
mov
jge
sahf
ljmp
and
mov
fprem1
and
pop
jb
and
lock
mov
clc
push
in
cmovle
mov
lcall
xchg
push
clc
xchg
mov
pop
sub
mov
enter
sub
insl
cmp
call
cli
push
fidivrl
clc
and
sbb
test
cmp
xchg
psubsw
mov
decl
sbb
je
in
hlt
xlat
jmp
lods
cmp
xchg
aas
call
insl
mov
push
decl
pop
aas
adc
repnz
push
jg
xor
or
add
xchg
js
pop
dec
mov
and
jmp
sbb
xor
cmp
pop
out
test
aaa
call
not
pushl
insb
outsb
out
mov
lods
js
mov
ret
test
adc
fs
lcall
aaa
cld
decl
daa
xchg
frstor
xor
xchg
pushf
or
jns
xchg
or
clc
push
int
lahf
in
or
mov
add
out
or
cmp
incl
sbb
divb
push
std
int
and
sbb
lcall
xchg
mov
mov
jns
add
jnp
mov
xor
incl
push
pop
test
out
mov
xchg
stos
mov
jb
int
or
pop
sbb
fs
in
mov
cmp
mov
cld
mov
pusha
cmp
sub
push
pop
cli
adc
xor
push
clc
decl
in
adc
pop
pop
jb
out
in
mov
movl
mov
arpl
cmp
jb
mulb
and
mov
mov
sbb
mov
call
fstpt
lcall
dec
dec
jp
push
int
lods
movb
sbb
jmp
mov
aaa
sub
cmp
adc
sbb
mov
jmp
xchg
pushl
out
in
rclb
sbb
cld
dec
mov
jo
pcmpeqb
and
push
ljmp
xor
add
sahf
inc
or
addr16
xor
jp
lock
cwtl
jne
jmp
ret
decl
idivb
xchg
fsubs
fisubl
sbb
xlat
inc
shll
int
cmp
scas
cli
mov
xchg
movsb
mov
sbb
insl
fnstenv
cltd
fsubr
int3
pop
aaa
decl
lock
xchg
in
mov
and
push
test
adc
add
shl
jl
jg
cmp
cli
daa
sbb
repnz
cltd
js
jae
jnp
sar
sarb
cltd
pushf
push
jb
jno
sbb
adc
dec
pop
scas
mov
aas
mov
or
pop
lds
push
xor
sub
jmp
or
int
repnz
cmpsb
shl
lds
test
pushl
stos
adc
stc
xor
sbb
xor
push
popa
es
cmc
sbbl
cmc
cmp
bound
xor
lret
cmpsl
stos
loope
pop
and
decl
sbb
outsl
out
push
sbb
adc
push
inc
pmaxub
jae
add
xchg
stos
or
fists
icebp
add
xor
mov
push
test
push
lahf
pushl
and
ds
mov
lret
dec
lcall
mov
out
int3
arpl
jnp
ret
add
xchg
or
out
push
lock
push
mov
inc
call
movsb
icebp
mov
ret
aam
pop
cltd
int
pushf
ja
ret
or
shll
jmp
add
incl
push
pop
inc
jl
test
fimull
lods
ja
out
dec
push
mov
xchg
mov
mov
setle
les
push
inc
rcll
pushl
xor
std
jl
lret
sahf
sub
test
mov
inc
cmp
shrl
lock
jp
out
lods
sub
fs
mov
xchg
mov
hlt
sub
pop
jg
add
lock
mov
dec
adc
inc
xor
jae
adc
clc
push
fldcw
int3
add
mov
sub
dec
or
clc
aas
mov
out
aas
push
mov
fdivrp
decl
ljmp
mov
jmp
bnd
ljmp
in
mov
loop
imul
xchg
shll
int
inc
push
popf
mov
decl
inc
leave
mov
sbb
fxch
sub
mov
cs
mov
add
jecxz
xchg
jg
pop
cltd
cld
push
inc
mov
mov
in
fdivrs
push
mov
or
call
cmc
sarb
orl
rcll
mov
mov
jbe
mov
push
add
jecxz
test
loope
xchg
push
lahf
sahf
ss
mov
or
out
sub
cld
adc
incl
cld
lcall
repnz
dec
push
xor
push
aam
fidivrs
fisubl
mov
push
push
jg
faddp
sti
sbb
mov
addr16
mov
mov
pop
icebp
cmpl
adc
jmp
jmp
out
pop
pop
shr
mov
jno
push
mov
dec
jecxz
cmp
adc
dec
xlat
mov
insb
pop
sbb
mov
inc
inc
fmull
sbb
loop
lcall
shll
ret
xor
sahf
adc
sbb
push
or
cld
dec
aad
mov
insl
sbb
dec
jno
add
inc
popa
lahf
sbb
cmp
add
dec
pop
push
fwait
push
por
and
or
cmp
sarl
xchg
lahf
jle
dec
das
sub
mov
test
or
add
jg
inc
inc
call
push
inc
pop
xor
mov
ja
mov
pop
hlt
jg
adc
andl
lods
hlt
loopne
inc
mov
or
fbld
dec
pop
xchg
sub
cs
sbb
shr
jl
incl
pop
sbb
xchg
cmp
jge
pop
aad
sub
jmp
mov
jae
mov
ja
aad
out
inc
sub
mov
push
mov
jl
repz
push
or
or
push
fadds
inc
mov
jb
cltd
pop
jle
loope
pusha
call
fs
inc
lret
outsl
cs
mov
mov
movsb
mov
or
jmp
test
idivl
jp
lcall
cmc
std
push
dec
data16
fsubl
push
and
or
rcrb
cmp
mov
mov
and
loopne
pop
or
jmp
lods
jbe
ret
cmc
adc
andl
test
jl
pushf
loope
scas
ljmp
int
mov
xlat
mov
sbb
mov
push
jae
dec
and
insl
or
mov
xchg
lcall
pushl
out
xchg
into
mov
sbb
push
cmp
cmp
pop
pusha
xchg
push
stos
call
ljmp
mov
imul
cmp
lea
and
sbb
lahf
cli
mov
sub
clc
pop
jmp
fsubp
insl
or
pop
int
mov
push
ds
test
fsubrs
push
jnp
movsb
adcl
stos
mov
jg
mov
cli
adc
pop
push
xchg
cmpsl
mov
je
das
jo
add
movsb
push
xchg
mov
fstpl
mov
and
mov
xor
ret
jecxz
xlat
call
push
cld
jb
movb
cmp
jecxz
out
adc
cmc
lods
lods
incl
mov
sahf
sarl
add
cli
popa
push
cmp
xchg
xor
popa
ljmp
pop
mov
orb
sub
mov
into
js
inc
or
inc
lcall
fcoml
mov
es
adc
sar
cmp
stos
out
sbb
push
jb
push
inc
mov
ljmp
in
ljmp
push
mov
mov
adc
mov
fldlg2
fistpll
jl
call
cmp
mov
inc
enter
out
insl
shrb
mov
mov
mov
mov
pop
pushf
mov
stos
jae
xor
fisttps
shlb
inc
mov
push
xchg
stos
imul
bound
add
daa
jg
out
or
addb
je
jne
cmp
inc
dec
adc
decl
sbb
mov
and
lret
fcom
and
pop
and
sbb
mov
mov
aad
iret
mov
push
in
sub
mov
push
andb
pop
add
incl
xchg
not
sub
stc
repz
cmp
ds
pushl
pop
shl
jp
addl
mov
push
push
inc
mov
mov
push
adc
fcomip
iret
dec
sub
cmc
inc
aad
cmp
lret
mov
mov
decl
cmp
mov
xchg
pop
mov
sub
dec
cltd
xlat
icebp
sub
jl
loop
test
imull
add
hlt
pop
pop
sub
xor
sbb
ret
and
dec
pushl
imul
cmpsb
repz
cmpsb
adc
addr16
outsl
and
ljmp
cli
pop
mov
cmc
add
test
xchg
test
call
ljmp
xchg
fwait
jb
pop
test
sahf
mov
addr16
xchg
enter
jnp
or
test
pushf
loope
icebp
adc
push
hlt
add
rorb
cmpsl
ficompl
xchg
incl
or
xor
sbb
pusha
pushf
int3
xchg
mov
jnp
int3
or
push
xchg
lods
dec
iret
jmp
arpl
jnp
cmp
pusha
inc
pop
jp
arpl
enter
fmull
cmp
jmp
inc
pop
push
call
inc
sub
dec
sub
xchg
dec
mov
sub
call
inc
mov
pop
aas
push
cmp
sub
in
xchg
sbb
mov
pop
dec
dec
popa
push
ljmp
xchg
aaa
movsl
dec
or
ljmp
aad
in
push
xchg
xchg
lahf
lds
inc
add
xor
sbb
adc
mov
jbe
inc
mov
lahf
scas
insl
push
jp
and
mov
push
jne
call
fcomip
aas
sub
div
inc
or
pop
popa
sub
ljmp
sub
jg
mov
xchg
cmp
cmp
scas
dec
mov
sbb
jmp
cmpsl
xchg
jp
jno
xchg
dec
leave
fs
lock
cmp
mov
xchg
call
add
mov
leave
xorb
in
cli
call
or
popf
adc
cwtl
pushf
into
filds
and
iret
lret
adc
jmp
lea
mov
push
fildll
call
pop
and
inc
roll
push
adc
ljmp
ficomps
pop
shll
inc
shll
mov
jmp
hlt
pcmpeqd
shrb
ljmp
xchg
pop
mov
inc
push
inc
pop
rcrb
jge
je
and
jmp
ret
int
clc
cmpsl
test
movsl
dec
out
cltd
iret
leave
jb
push
sahf
stc
push
arpl
jl
mov
btc
aas
mov
repz
cmp
mov
xor
add
insl
call
gs
or
mov
mov
dec
fldl
rorb
pop
inc
cmp
pop
hlt
imul
popa
clc
adc
rol
pop
cmpsl
popa
cmp
pop
in
jo
jl
adc
sbb
ret
std
cld
cli
pop
sub
je
in
popf
int
das
dec
aaa
push
out
push
xor
shlb
sub
dec
nop
in
adc
sub
mov
push
mov
jg
inc
out
dec
inc
ds
popa
cld
call
lock
pop
lret
push
sub
pop
jnp
mov
sti
jg
out
add
enter
imul
call
dec
incl
cs
lods
mov
orl
sub
ljmp
push
cmp
add
call
ljmp
imul
das
and
xchg
ljmp
inc
addl
pushl
xchg
mov
in
mov
loopne
pushf
loopne
lret
pop
mov
cmp
idiv
pushl
ljmp
outsl
inc
bound
mov
in
cmc
push
negl
jge
adc
cmp
enter
ds
xlat
rorl
mov
mov
in
loop
jmp
lcall
jecxz
and
ljmp
fbld
test
mov
es
sarb
jmp
shll
or
stos
sahf
popa
rep
jb
clc
mov
xor
mov
cmpsb
and
pop
sub
mov
mov
faddp
popf
push
psubq
jge
je
pop
data16
fstl
sbb
sub
ret
aaa
adc
push
and
jmp
cltd
push
mov
rolb
shrb
mov
int3
dec
jle
cld
icebp
cmp
jns
incl
imul
gs
push
rcll
jne
test
decl
jge
mov
and
lods
jp
push
es
data16
ljmp
push
ds
stos
data16
repnz
xor
mov
orl
fcmovu
mov
add
xchg
lods
mov
in
and
lea
nop
pushl
inc
jbe
lret
dec
dec
mov
adc
push
lds
mov
adc
mov
sub
mov
jnp
push
sbbl
divb
shrl
cli
imul
mov
jmp
dec
mov
cmpsl
sbb
xor
mov
pop
je
sub
outsb
push
call
in
repz
cld
mov
data16
repnz
ja
fucomi
and
nop
incl
mov
pop
add
jmp
aad
xchg
loope
mov
decl
mov
xchg
mov
test
adc
sar
scas
sbb
jmp
cmp
add
pop
mov
ljmp
pop
inc
dec
adc
ds
adc
dec
je
dec
lds
call
movsl
dec
xor
pop
and
jge
sbb
jmp
mov
daa
and
rol
shll
decl
test
arpl
enter
add
dec
stos
push
dec
inc
push
mov
lds
decl
xchg
dec
leave
add
inc
sub
xchg
imul
in
movb
push
xor
lret
scas
push
mov
push
sti
das
mov
jnp
mov
das
sar
push
mov
mov
mov
shl
xchg
xchg
and
ljmp
sub
push
cltd
mov
jno
cmc
enter
mov
pushf
cmc
mov
jmp
je
je
imul
pop
mov
imul
daa
or
sbb
pop
xchg
call
pop
push
sub
sbb
fiadds
lret
scas
jbe
mov
jl
inc
dec
lret
mov
xchg
mov
rorl
fsubs
movsl
jo
jmp
cmp
jmp
mov
cmp
ds
lret
push
pop
ds
fnsave
vmwrite
mov
rorb
mov
dec
mov
inc
cli
pushl
inc
int
clc
imulb
lret
dec
sub
in
in
mov
xchg
dec
mov
popf
or
ljmp
lret
jbe
xlat
jmp
push
lods
addr16
ret
xchg
xor
icebp
nop
stos
cmp
cmp
pop
loopne
mov
add
daa
mov
dec
xchg
push
or
pusha
in
mov
in
shl
sbb
mov
adc
decl
mov
ret
in
cmp
lahf
pop
jo
in
cmpsb
mov
pop
in
push
push
sbb
call
adc
sbb
scas
int3
stc
fimuls
out
push
lahf
into
cli
nop
sbb
push
pushl
std
adc
mov
mov
push
jp
sarb
and
addr16
int3
aaa
int3
stos
fstl
fistps
mulb
pop
aad
loopne
sbbb
inc
fiadds
push
mov
dec
loopne
ljmp
dec
xchg
sbb
outsb
xor
mov
cmp
addr16
popf
push
pushl
leave
jno
jle
push
imul
fidivrs
dec
xlat
or
aam
jne
ljmp
xchg
ljmp
inc
stc
cmp
fcomip
sti
adc
push
movsl
aad
mov
insb
push
dec
xchg
jno
rorl
cltd
sub
push
sarb
add
inc
scas
cmc
lds
pop
lock
fs
inc
sub
jmp
mov
mov
or
push
movsl
lret
out
loope
loopne
mov
and
and
inc
scas
mov
cmp
dec
add
jle
pop
dec
fiaddl
in
sub
lahf
mov
popa
xchg
hlt
je
jp
jecxz
dec
jl
xor
pop
popf
or
sub
ljmp
cs
mov
data16
pop
into
jl
push
cwtl
mov
jnp
les
decl
pop
js
cld
notl
mov
ret
mov
inc
mov
xor
mov
sub
and
rcr
add
pop
mov
jg
ljmp
insl
int3
lret
pop
imul
pop
jno
lods
mov
push
sub
std
pushl
sbb
mov
jb
sbb
xchg
ja
mov
sub
cs
mov
fwait
inc
loopne
or
xchg
push
mov
add
xlat
cltd
test
dec
stos
xchg
decl
push
pusha
enter
mov
pop
fcomip
jnp
xchg
outsl
jb
sahf
xor
cli
fcomip
ja
subl
inc
shll
push
cmp
decl
lcall
push
mov
adc
jmp
stc
mov
mov
fnstsw
test
fidivrs
xchg
cmc
fiaddl
fmul
sbb
cmp
jmp
pop
push
mov
fisubrs
pop
rdpmc
notb
daa
xchg
or
pushl
popa
sbbb
loope
add
cmpsb
hlt
inc
cmpxchg
add
rorl
decl
andl
int3
leave
jp
dec
test
mov
hlt
in
outsl
dec
jl
cmp
pusha
and
jge
inc
movsb
mov
fs
jno
in
xchg
cmpsl
push
fimuls
and
stos
ljmp
cmp
mov
adc
xchg
and
out
dec
mov
xlat
and
or
shlb
movsl
xor
add
data16
lcall
stos
sub
xchg
and
aas
inc
jg,pn
popf
dec
fidivs
inc
xchg
or
fwait
or
dec
lock
xchg
inc
fsubs
add
stos
fsubrs
sub
xchg
popa
and
mov
lcall
mov
shrl
andb
mov
int
aaa
mov
idivb
lcall
dec
movsb
jmp
push
sarb
ss
lock
lock
mov
ret
scas
sbb
ljmp
movsl
push
cmp
shll
pop
push
fs
inc
mov
xor
ret
ss
pop
addr16
inc
mov
pushf
jp,pt
xor
cld
clc
push
fcmovnu
sbb
cli
ss
js
xor
leave
mov
add
and
out
out
call
cld
out
pop
inc
inc
xchg
pop
dec
aad
ja
pop
jle
pop
mov
inc
or
sarl
sar
cmp
outsl
pop
pushw
adc
cmpsl
add
push
pop
movsl
mov
enter
rorl
decl
shlb
mov
test
cmpsl
cmpsb
ss
jno
dec
push
das
icebp
mov
pop
loopne
ret
mov
mov
cli
xchg
test
rclb
inc
stc
adc
arpl
gs
add
ljmp
fistpll
pop
rcrl
stos
add
mov
icebp
pop
sbb
and
dec
lcall
test
popw
pop
pop
xchg
fists
daa
shlb
insb
arpl
sub
dec
das
xor
xchg
out
shll
mov
decl
out
inc
pop
mov
aam
ss
cmc
das
mov
cmp
add
xchg
inc
push
mov
fistps
rol
cmpb
insl
and
mov
inc
pop
lods
and
or
push
loopne
jae
aaa
movl
ja
jnp
dec
cmp
lcall
pop
cmpsl
adc
inc
add
mov
push
and
out
aas
dec
arpl
daa
mov
aam
ljmp
jmp
cs
andb
inc
lea
add
movsb
das
lcall
inc
cmp
rcll
xchg
xchg
jecxz
int3
je
and
pop
mov
jmp
inc
dec
test
arpl
xor
int
cmp
mov
xchg
icebp
jg
adc
clc
nop
mov
fwait
add
mov
inc
stos
jl
pop
js
and
pushl
xor
mov
bound
out
cltd
insl
cmpsl
xor
cmc
test
mov
pushl
fdivrl
pop
mov
test
shr
les
ja
sub
cmp
sbb
aas
fcomip
les
popa
and
ljmp
je
decl
mov
lods
icebp
clc
or
out
popa
daa
xchg
xor
mov
mov
out
icebp
test
bound
mov
and
add
inc
cld
jmp
outsl
les
or
enter
sarl
mov
mov
in
mov
fisubrs
push
sahf
add
rcrb
ret
insl
mov
pushl
pop
stos
xor
fidivl
xchg
std
rolb
in
dec
imul
divb
cmp
jl
jge
cwtl
jg
cltd
hlt
sub
scas
std
dec
pushf
lahf
cmp
andb
fnstenv
sbb
incb
jns
or
jle
shll
imulb
xor
xlat
dec
push
cwtl
adc
divb
pop
mov
out
inc
loope
mov
cwtl
pop
hlt
jecxz
pop
or
pop
add
sub
stos
dec
cmp
lcall
xor
shll
test
pushf
rorb
cmpl
mov
ja
sub
mov
cld
jnp
cmp
jmp
lods
aas
xor
xor
or
push
lret
jp
ret
jg
pop
or
lods
out
inc
pop
push
imul
shr
push
mov
adc
lods
or
decl
out
mov
push
xor
sub
sub
jmp
jae
lahf
pop
fs
lock
daa
mov
inc
jmp
repnz
sub
sub
jg
or
sbb
outsb
pop
and
lahf
fs
cmc
add
xchg
or
aad
ljmp
sub
sbb
push
sbb
lret
shrl
bound
ljmp
in
loop
std
dec
push
into
movswl
or
and
aaa
and
adc
dec
call
jl
fs
ror
mov
enter
mov
pop
psubusw
and
mov
lcall
shll
mov
pop
xor
lock
lret
testl
stc
jp
jle
push
sarb
rolb
pop
es
dec
mov
or
inc
out
cmp
lock
sbb
dec
jecxz
or
les
js
std
nop
jbe
ljmp
clc
jo
aaa
mov
aam
je
cmpsl
nop
and
push
popf
push
loop
leave
cmp
xchg
xor
fiaddl
hlt
mov
stos
push
cld
push
lcall
jp
dec
ret
icebp
jnp
add
xchg
incl
push
mov
pop
shrl
fistpl
jno
sbb
mov
lret
pop
xor
and
outsl
cli
jge
or
test
iret
js
or
add
incb
push
test
mov
dec
cmp
push
inc
pop
js
jp
ficoms
fsub
lret
mov
lcall
cmp
sahf
jmp
imul
into
loope
js
cmp
sbb
decl
jnp
xor
jmp
shlb
rclb
jle
dec
add
rdmsr
aad
adc
scas
jl
outsb
ret
jo
mov
xchg
or
out
adcb
scas
jns,pt
outsl
outsb
aas
decl
je
outsl
negl
mov
adc
push
insl
rorl
jne
pop
push
pushl
cltd
xor
mov
mov
out
pop
push
dec
xchg
ret
les
call
lds
fs
rclb
sub
pop
and
sti
aas
arpl
xor
in
scas
push
popa
mov
es
inc
nop
dec
mov
jnp
popf
mov
mov
xchg
add
jmp
mov
ds
fwait
das
cmpsb
cld
mov
push
and
aas
data16
mov
mov
pushl
test
and
imul
jmp
fsubl
mov
test
mov
mov
ljmp
and
xor
adc
ficomps
jge
int
cmc
xchg
pushf
add
mov
xlat
call
decl
xor
pop
in
or
or
decb
dec
lret
addl
fcoml
add
pop
negl
cmp
mov
sti
mov
inc
stc
dec
cmc
and
ljmp
data16
mov
imul
adc
pop
das
pop
std
or
bound
mov
test
add
aaa
into
jbe
push
ds
mov
fdivrl
decl
call
pop
iret
dec
cli
add
out
lock
scas
into
mov
sub
sbb
dec
add
ljmp
cmp
jb
inc
mov
jbe
in
mov
in
fbstp
sbb
popf
pop
sbb
sbb
ss
xchg
fs
call
loopne
mov
fistps
cmp
jbe
in
call
jmp
sar
lock
push
mov
mov
repnz
bound
bound
adc
pop
cmp
xchg
or
push
mov
lods
lcall
stos
mov
mov
jge
dec
dec
cwtl
insb
fs
fwait
mov
je
out
arpl
cmp
mov
xor
inc
decl
lock
mov
sbb
daa
push
fwait
push
sarl
and
ljmp
outsl
xchg
xchg
cmc
inc
dec
loopne
repnz
mov
mov
adc
sbb
xchg
pop
std
sub
loopne
pop
leave
aam
adc
mov
lods
push
ja
pop
fdivr
jg
fldt
mov
xor
push
sub
push
gs
arpl
push
stos
bound
adc
sar
incl
pop
stc
ljmp
mov
push
sbb
sub
sbb
cmp
sub
retw
add
jns
outsl
inc
movlps
stc
jno
std
jmp
popa
inc
push
and
mov
mov
lahf
test
mov
pushf
lods
mov
inc
inc
push
xchg
push
and
out
clc
dec
cmp
fwait
mov
popf
jnp
adc
push
pusha
loop
cmp
incl
test
inc
lcall
andl
ret
hlt
lret
cs
or
stos
mov
mov
test
pop
adc
lret
nop
daa
or
lcall
mov
loope
adc
pop
jno
adc
ret
add
outsb
sahf
lcall
mov
push
leave
mov
loopne
push
jbe
flds
add
divl
or
lods
mov
cwtl
inc
mov
mov
hlt
jg
xor
push
push
cmpsb
xchg
cld
js
insl
out
daa
mov
inc
inc
mov
cmp
lcall
rcrl
jno
fwait
push
pop
mulb
sub
dec
mov
sub
dec
add
pop
xor
fisttpl
adc
js
test
xor
cmp
scas
ret
gs
loope
xchg
jns
lcall
inc
fcompl
mov
rorb
das
pop
js
icebp
sahf
xor
mov
sar
xchg
lahf
sbb
cmp
pop
out
loope
xlat
imul
jnp
mov
mov
std
cmp
lock
icebp
adc
push
mov
icebp
xchg
into
cmpsl
jae
fcmovnb
mov
mov
jp,pt
and
in
cli
ss
fs
pop
test
aaa
sub
icebp
mov
call
jl
and
and
mov
out
aas
xor
jmp
lods
int3
call
pop
cmp
std
add
adc
movsb
int
inc
clc
int3
lcall
decl
dec
imul
stos
sub
out
cmpsb
xor
pop
ret
in
pop
aam
test
sub
dec
sub
rcr
in
ss
dec
test
jecxz
into
jmp
and
dec
dec
xchg
inc
add
push
cmp
cli
mov
rol
pusha
incl
or
les
mov
jns
cld
lret
lods
add
addr16
xchg
call
ljmp
lea
cmp
dec
sub
mov
rcll
outsb
pop
fcmovbe
out
lods
out
jae
cmpsl
imul
ret
out
push
pop
scas
cld
push
inc
cmc
movsl
xlat
loope
fs
lcall
pop
mov
cmp
jbe
push
punpckldq
xchg
jae
dec
movsb
mov
insl
and
incl
addr16
pop
cli
outsl
dec
dec
dec
imul
inc
cmp
add
outsl
xchg
jo
xor
call
adc
pop
sbb
loope
scas
sub
pop
outsl
xchg
je
add
xorl
call
test
push
push
mov
push
xor
xor
add
xchg
xchg
pop
pop
jns
incl
les
cmpsb
mov
pop
sub
mov
adc
movsl
aaa
adc
out
dec
mov
arpl
push
jmp
enter
arpl
sbb
push
dec
sub
int
popf
dec
xchg
add
leave
enter
in
jge
and
bound
mov
testb
ja,pn
and
divb
in
mov
js
pushf
rclb
iret
jp
rcll
mov
test
jmp
push
dec
hlt
cli
inc
adc
imull
ret
mov
loopne
fldenv
inc
cmp
pop
pusha
xor
add
dec
xor
popl
mov
fistps
les
inc
dec
cmp
xchg
jmp
addr16
lods
add
push
add
mov
sub
and
or
and
lret
mov
ss
push
popf
rcr
and
mov
decl
scas
or
push
mov
push
imul
or
xchg
sub
ljmp
mov
arpl
repz
mov
inc
pop
mov
lcall
in
ja
incl
icebp
dec
insl
mov
xchg
mov
add
cs
xor
or
out
add
cltd
jmp
adc
outsl
std
lods
and
mov
call
or
in
ficomps
ss
dec
das
mov
mov
in
mov
int3
faddl
dec
lds
push
inc
hlt
sub
sbb
test
inc
jl
decl
daa
cmp
in
fcmovnu
xchg
push
inc
push
fistps
cltd
data16
jle
xor
fbstp
xor
es
sbb
adc
sub
ljmp
mov
pop
gs
sbbb
in
push
and
sub
and
dec
fstpl
mov
fyl2x
inc
mov
outsb
pushl
jge
mov
mov
inc
ja
daa
inc
in
ss
lcall
mov
sbb
std
daa
sbb
addb
js
lods
filds
xor
mov
ljmp
or
xchg
sbb
pop
les
xor
repnz
outsb
cmp
xchg
lods
pop
xchg
push
ja
decl
aas
push
dec
fs
cmp
aam
lahf
outsl
ror
ret
xchg
or
icebp
lods
mov
jmp
decl
adc
add
imul
lods
dec
dec
jnp
xchg
shlb
jle
cli
lcall
lahf
shll
lock
rclb
sbb
inc
es
xchg
lods
xchg
ljmp
jle
mov
sbb
shrb
imul
push
inc
ret
xor
xchg
jb
lcall
xchg
cwtl
bound
jnp
flds
xchg
or
sub
cmp
mov
repnz
mov
fidivl
mov
xchg
js
addr16
and
das
cli
decl
sub
lock
push
inc
dec
icebp
xorl
cli
cmp
adc
scas
xorb
or
std
cmpsl
lret
mov
loop
pop
jae
jne
in
mov
dec
js
fs
inc
or
call
sub
test
add
lods
je
mov
add
dec
pop
mov
movsl
mov
or
cmp
sbb
aas
sub
mov
mov
push
lods
and
fstps
sub
daa
cmp
mov
push
gs
xor
iret
push
mov
int3
sub
pop
add
clc
or
lock
inc
shl
mov
subl
call
insb
test
in
add
sub
jmp
mov
cld
fidivrl
stos
jns
cmp
incl
movsl
cmp
int3
repnz
lea
clc
push
or
mov
push
movsl
add
inc
xor
sbb
jg
fwait
int
push
mov
imul
mov
dec
cwtl
cmpsb
sbb
or
pop
adc
add
sub
jg
insb
sub
ljmp
inc
js
mov
ljmp
adc
arpl
inc
out
add
inc
mov
test
out
sbb
das
push
cs
jae
enter
pop
cld
jmp
mov
inc
mov
call
hlt
lds
lcall
jns
xchg
fdivl
pop
and
inc
ja
in
stos
test
decl
xchg
cmpsb
mul
xchg
lods
js
sarl
or
adc
and
jg
push
xchg
mov
mov
xchg
mov
cmc
or
inc
out
add
arpl
dec
xor
lret
mov
adc
scas
loope
ljmp
hlt
mov
ficompl
pop
stos
pop
lods
repnz
decl
mov
mov
es
int
fisubl
sbb
jg
fisttpl
jecxz
enter
cmp
mov
mov
call
mov
dec
in
cwtl
mov
pop
jg
adc
sub
dec
xchg
cmpsl
add
fldcw
mov
mov
sbb
inc
mov
aas
add
jae
push
iret
gs
lar
lods
sbb
out
arpl
cmc
sbb
call
mov
mov
cmp
push
addb
xchg
xor
jg
push
cld
mov
int3
ja
and
mov
idivl
sti
ljmp
pop
fcmovnbe
or
loopne
adc
fsubrl
or
xor
mov
scas
ja
push
or
jg
shlb
push
xchg
fcoml
jbe
ret
mov
hlt
loope
popa
add
les
jg
and
mov
subb
inc
sub
jle
add
sbb
jbe
jle
scas
jns
insl
shrl
das
dec
int3
push
outsb
and
ds
mov
sub
loop
dec
shll
jl
pusha
adc
cmp
gs
pushl
mov
jg
push
push
pop
iret
ja
imul
jp
cli
ret
push
cli
and
lds
jmp
xor
pop
pusha
push
or
cmp
mov
pop
dec
gs
call
lock
lcall
xchg
cmp
aas
decl
fnstcw
cmp
fwait
aas
lods
mov
or
xchg
adc
in
movsb
cmp
int
ds
lret
xchg
xchg
xor
incl
sti
xor
push
xor
adc
dec
fildll
pop
pop
les
jl
sbbl
dec
ret
mov
cmc
cltd
aam
mov
dec
sub
cmc
fisttps
sbb
sub
push
lock
decl
xor
pop
push
mov
cmc
js
dec
test
lods
insb
pop
rcl
popf
sbb
jmp
pop
lods
dec
imul
push
sti
cwtl
pop
repnz
jns
cmpsl
mov
mov
sbb
pushl
inc
scas
lods
call
in
lea
mov
shll
call
imul
jge
adcl
inc
or
push
dec
int
mov
adc
mov
call
xor
in
out
mov
jg
push
mov
xchg
xor
cli
jmp
mov
addb
fwait
jecxz
fwait
shll
or
mov
mov
pusha
xchg
sbb
out
jmp
out
mov
stc
mov
pcmpeqw
jp
mov
push
idiv
cmp
lock
xchg
outsb
xlat
and
fcmovne
test
jg
icebp
ja
pop
or
mov
mov
dec
jg
adc
cwtl
out
test
pushf
pop
jmp
mov
xlat
es
in
fistpll
inc
mov
movl
dec
jb
ja
xor
dec
mov
in
sahf
sbb
fldcw
hlt
incb
push
xchg
mov
xchg
xchg
jp
or
mov
xor
popf
mov
shr
sub
mov
sti
push
xchg
and
jmp
es
and
leave
or
cmpsl
jecxz
jne
cmpsb
pushl
cmp
daa
mov
ljmp
ljmp
lret
xchg
cmp
mov
push
inc
int
in
ljmp
or
mov
out
sub
dec
nop
popf
pop
cmp
inc
mov
je
mov
in
xor
fs
repz
adc
push
and
or
xor
xor
push
mov
xor
adc
and
hlt
pushl
nop
mov
gs
sbb
mov
sti
mov
sub
incl
jg
jbe
mov
lret
mov
rclb
adc
movsl
pop
mov
rcr
pop
inc
fdivr
jg
or
adc
into
sbb
jp
push
cmpsb
aam
stos
ds
push
outsl
mov
jo
out
sub
or
lcall
xor
pop
push
pop
push
and
test
mov
imul
xchg
loope
ljmp
fldcw
jnp
dec
cli
or
loope
xchg
pop
jo
mov
aaa
pop
mov
fcomip
lea
cmpsb
cmp
aam
stos
mov
mov
push
jmp
jmp
call
icebp
pop
push
mov
add
leave
into
daa
or
xchg
leave
clc
inc
popf
mov
decl
xchg
ret
jp
or
push
lcall
jg
mov
jg
and
into
pop
jl
dec
loop
sbb
arpl
inc
mov
fmuls
jmp
cld
out
icebp
xor
jbe
push
add
xchg
ss
cwtl
mov
lret
es
mov
movsl
stc
cld
addl
movsb
repnz
add
fbstp
mov
sub
icebp
or
gs
add
sbb
push
arpl
fwait
popa
dec
imul
add
and
cmpsl
es
lret
cmp
sbb
insb
xchg
xchg
cmp
arpl
pop
push
push
sti
cmp
xor
sbb
test
imul
inc
cmp
mov
pushf
mov
stos
std
inc
pop
sahf
jle
jo
test
jg
test
incl
std
mov
sbb
ja
jge
imul
dec
ljmp
lcall
or
mov
sub
fimuls
rcll
pop
rcl
xlat
in
adc
into
imulb
sar
push
jge
xor
xchg
pop
mov
aam
jnp
inc
push
sbb
jp
and
dec
sbb
inc
lret
jp
and
pop
test
or
sti
and
jnp
imul
enter
mov
inc
mov
cwtl
mov
jnp
ljmp
mov
and
cmp
fiadds
nop
add
leave
pop
les
sbb
std
out
imul
cmp
mov
mov
leave
push
pop
inc
mov
add
rorl
aaa
call
add
imul
loope
aam
xchg
lods
push
ljmp
loope
sbb
jg
ljmp
gs
push
fwait
and
add
cmp
pop
cmp
mov
call
cmp
xchg
or
dec
jo
cli
mov
pop
addl
inc
pop
push
adc
and
inc
fcompl
incl
mov
xchg
push
das
loope
push
xchg
sbb
fcmovnu
inc
int3
mov
dec
repnz
lcall
incl
call
jp
mov
mov
dec
leave
mov
xor
incl
push
aad
icebp
addr16
sub
aam
dec
jle
xchg
cli
xchg
or
jg
cmp
iret
xorl
sbb
pop
lea
clc
push
cmpsl
aad
jmp
add
pop
into
lds
jmp
dec
push
sbb
jg
in
cmp
cmp
sbb
jmp
int
add
mov
jmp
outsl
mov
lret
fisubrs
fistpll
cmp
jb
lret
popf
push
out
loop
fwait
jmp
lret
mov
stc
call
inc
cmpsl
and
shlb
fcos
lcall
pop
pop
cmpsl
jge
push
sbb
or
das
mov
pop
mov
shll
cmpsl
aas
push
push
ret
xor
dec
std
pop
cmp
sub
inc
imul
dec
cmp
cmp
sar
movsl
and
adc
lds
cmp
and
push
and
sbbb
jp
or
mov
pop
insl
hlt
mov
xorb
mov
lock
push
add
mov
hlt
push
loope
dec
sarb
fimull
shlb
inc
inc
ficomps
mov
rorl
push
sbb
xchg
dec
es
xor
incl
pushf
mov
pop
dec
pusha
inc
imul
outsb
inc
out
loope
adc
or
jnp
or
mov
incl
les
mov
sbb
sub
mov
stc
pop
jnp
mov
fldenv
mov
push
mov
inc
cmpsl
pop
pushf
popa
vmovntps
lods
int3
jns
imul
lcall
or
stos
mov
shlb
out
lcall
xor
pop
movsl
sbb
mov
call
ds
sub
js
dec
insl
ret
mov
shll
jp
mov
ljmp
inc
xor
out
sub
mov
sahf
lock
add
push
ja
fldenv
inc
loope
cmp
fldenv
ljmp
mov
push
xchg
mov
push
loop
push
jae
push
movb
ror
mov
fs
nop
mov
call
jle
test
jecxz
jae
pusha
dec
test
cmp
push
add
xchg
pop
hlt
ja
mov
pushl
cld
popa
inc
sbb
test
lea
lahf
jno
jecxz
add
sub
mov
cmp
lods
fcoms
sbb
sub
sub
push
pop
fisubrs
sub
jmp
inc
jmp
adc
shlb
mov
mov
das
rclb
sarb
pushf
cltd
pushf
aaa
cmp
imul
sub
repz
jmp
xchg
jo
stos
adc
mov
jbe
cmp
mov
insb
addr16
popa
push
fsubl
pop
js
scas
bound
pusha
cmp
lds
movsb
pop
ljmp
inc
adc
movsb
popf
sub
test
mov
test
mov
add
dec
sbb
lret
mov
xchg
icebp
call
dec
adc
pop
je
lods
xchg
push
cli
dec
ljmp
jp
push
arpl
adc
hlt
mov
rdpmc
loop
bsr
xor
dec
imul
decl
outsl
push
out
push
dec
pop
or
jae
scas
cmp
lret
or
sbbl
out
lock
or
test
test
and
sbb
mov
jmp
sub
mov
jae
scas
xchg
lods
mov
rclb
push
ficoml
cmp
xlat
mov
out
mov
jecxz
ljmp
outsl
cli
call
mov
jo
sbb
xorl
xchg
in
pushl
xchg
sub
or
mov
loope
cld
pusha
ss
mov
sarb
in
cli
addr16
adc
leave
sub
leave
scas
idivb
cmpsl
incl
lea
mov
push
ret
adc
scas
mov
jp
aad
ja
pushl
or
fsubl
xchg
leave
mov
xchg
lss
ret
or
pushl
sbb
clc
loope
mov
sub
addr16
pop
jns
sub
test
mov
fisttps
jp
je
pop
fucom
loopne
dec
cmp
pop
mov
push
mov
mov
cmp
movsb
mov
jbe
bound
rorl
mov
mov
pop
rorl
mov
sbb
rolb
loopne
cld
je
xchg
and
push
jb
aaa
loop
stos
jo
pop
cs
std
fsubrs
popf
shl
mov
dec
push
xchg
shrb
hlt
sub
addr16
decl
cltd
jno
ret
mov
xchg
insb
and
loope
cmp
aam
js
xor
out
fists
ds
cmp
dec
dec
in
pop
jns
pop
imul
sbb
repz
xor
pop
ficompl
lcall
jle
aam
ds
and
adc
sub
jmp
sti
push
nop
inc
add
imul
xchg
add
push
jecxz
xchg
orb
mov
clc
and
enter
pushf
insl
outsl
push
cmp
cmp
in
sahf
sahf
inc
sti
lods
das
jp
lcall
call
into
mov
js
push
out
in
jl
leave
xor
pop
and
or
xorb
mov
adc
jge,pt
or
cwtl
subb
mov
imul
xchg
imul
daa
sar
or
inc
pop
sbb
in
cltd
ffreep
insl
aaa
andl
inc
outsb
mov
je
sub
pop
push
xor
jl,pn
cmc
rcrb
sarb
decl
mov
icebp
adc
sbb
sub
lds
xor
push
mov
jmp
add
test
cmp
aad
pop
push
xchg
push
js
cmp
rolb
adc
incl
popa
pop
lcall
test
push
sbb
sbb
xlat
mov
jnp
add
sub
jns
loope
je
dec
test
aad
dec
pop
sbb
cmp
add
jmp
mov
stos
add
mov
jne
data16
insl
int
ss
add
call
pop
mov
out
xor
or
inc
mov
aam
adc
scas
clc
mov
xchg
or
adc
and
nop
mov
pushl
bound
int3
mov
pop
stc
xchg
in
or
cld
mov
leave
clc
adc
jg
stos
mov
dec
dec
add
cmpsl
jge
js
sbb
in
outsl
into
mov
inc
mov
inc
xchg
hlt
clc
insb
jg
inc
add
xor
jg
call
jmp
scas
fcomps
mov
fcmovnu
sbb
addl
lcall
mov
sarb
rorl
lods
mov
mov
enter
std
lcall
aam
pop
fcomp
pop
mov
mov
jge
add
pusha
popa
ljmp
call
jo
rol
pusha
daa
into
cltd
inc
jmp
cmp
imul
xchg
push
xchg
mov
push
inc
and
mov
lcall
call
sbb
cwtl
xor
cmp
xor
push
aam
ss
add
movsl
sbb
jns
fbld
mov
dec
pushf
xchg
std
frstor
hlt
stos
cli
lret
push
fdivp
int
popf
adc
dec
jae,pt
cmp
dec
hlt
adc
scas
mov
xorl
cmp
push
incl
dec
iret
xchg
lods
cltd
adc
pop
pop
jp
push
mov
xchg
mov
sar
jmp
pop
mov
jne
mov
rcrl
in
mov
sub
adc
js
cmp
punpcklwd
mov
insb
rclb
cwtl
pop
sub
push
cmc
push
xor
inc
push
lods
sbb
outsb
addb
mov
movsb
lea
cmp
mov
data16
pop
test
icebp
int3
or
push
stos
shlb
push
xor
pop
dec
fldt
pop
cmp
sbb
mov
lahf
int3
addb
cwtl
ds
cmpsl
in
clc
jmp
les
push
jbe
stc
mov
aas
or
lret
mov
cltd
pop
ds
inc
adc
dec
fldt
in
sub
lcall
dec
cmpsb
popa
and
mov
pop
sub
adc
pmullw
pushl
sbb
cmp
aas
je
in
test
loope
adc
jg
mov
fwait
mov
add
leave
stc
jmp
into
enter
xchg
xchg
mov
call
and
mov
jno
cmp
cmp
pusha
jl
sbb
push
sbb
pop
repnz
mov
push
dec
insl
lods
rcrl
pop
cmp
or
repz
push
jmp
cmp
mov
and
mov
mov
insb
jb
sub
decl
or
xor
dec
das
fisttpl
sub
push
add
call
sbb
jg
pushf
add
mov
scas
jmp
cmpsb
out
mov
inc
fs
imul
stos
cmpb
mov
lahf
push
adcb
mov
push
aas
or
mov
mov
dec
add
fnstcw
mov
adc
enter
pmulhuw
call
jg
lea
and
and
xchg
xchg
cmp
adc
jg
xor
pop
or
pop
and
inc
xchg
adc
pop
dec
call
push
sub
xor
push
jge
cmp
pop
xlat
mov
loope
cmpb
call
sub
rclb
out
and
addr16
mov
mov
lods
cs
lods
adc
scas
pop
jmp
xchg
and
xchg
mov
cmpsl
int3
mov
mov
or
mov
push
daa
adc
int3
fnsave
mov
in
std
inc
jno
dec
aaa
and
sarl
pushl
inc
mov
push
test
add
xchg
scas
mov
mov
jp
ret
and
lcall
or
bound
and
popa
std
test
aaa
lret
pop
push
xor
adc
into
xchg
std
sahf
aam
fcomip
decl
and
clc
and
push
clc
les
jmp
cwtl
movsb
es
pushl
iret
adc
jmp
add
and
inc
sysenter
outsb
inc
lods
xor
insl
adc
std
fisttpl
nop
sbb
push
fsts
xchg
sti
jmp
and
lods
fs
lods
lret
cld
xchg
mov
cmpsl
icebp
ljmp
mov
sti
jne
test
mov
mov
imul
xorb
xchg
fimuls
jmp
jne
jp
pushf
pop
dec
xor
imul
and
inc
lock
call
aad
pop
mov
push
or
movsb
pushl
sarb
movsl
xor
sbb
call
data16
fistl
imul
inc
movsl
sub
or
lock
mov
icebp
mov
add
cwtl
xor
push
mov
add
inc
icebp
add
and
sets
cmpsl
in
mov
xor
sbb
xchg
popa
pop
incb
adc
rorb
inc
pop
js
lock
jl
mov
imul
lcall
push
or
mov
fcom
push
mov
std
filds
push
stos
dec
and
incl
test
cmp
ljmp
pusha
push
mov
and
adc
daa
inc
push
xor
cmc
xor
pop
ljmp
xchg
mov
fcmovb
adc
mov
je
mov
jmp
enter
cmc
cli
xor
ljmp
xchg
stc
inc
mov
out
add
cmc
xchg
mov
lret
xchg
imul
jl
dec
clc
cld
pop
mov
pushf
xor
das
and
shrb
sub
out
leave
mov
add
call
loop
inc
fwait
mov
fsubp
push
dec
jb
mov
cmc
inc
mov
dec
scas
fadd
push
idivl
imul
jbe
push
movsl
mov
inc
out
mov
push
sbb
or
push
imul
dec
ficomps
mov
fwait
pushl
fnsave
leave
repnz
cli
mov
mov
bound
mov
mov
popa
add
out
cli
jge
idivb
mov
aas
add
inc
xor
xchg
out
ljmp
pop
push
bound
aad
popa
leave
mov
popa
pusha
or
jb
iret
aas
aas
jae
das
shlb
shrb
pusha
lret
dec
or
arpl
pop
xlat
movsb
inc
inc
pop
mov
sbb
fildl
mov
jno
cmp
decl
add
cmp
sbb
jnp
dec
pop
iret
fmuls
mov
insb
punpckhbw
mov
nop
push
movsl
inc
mov
dec
es
push
test
pop
shrl
mov
shr
sti
cld
sahf
nop
pop
xchg
or
fsub
aad
sbb
push
sbb
pushl
outsl
lea
push
stos
inc
aam
lods
roll
mov
sbb
xchg
jb
mov
jmp
sti
push
lret
fs
inc
repz
jns
mov
mov
push
or
jl
into
gs
mov
in
ss
and
jns
daa
test
inc
clc
aad
jmp
insl
iret
mov
test
mov
jl
and
sti
inc
push
arpl
ljmp
sbb
inc
adc
rcll
mov
push
mov
orl
mov
push
aaa
lds
mov
adc
lret
jbe
dec
and
lahf
and
xor
add
and
decl
mov
add
xchg
js
out
and
and
lock
repz
mov
adc
enter
dec
fwait
cmp
push
testl
sub
push
into
scas
xchg
push
inc
test
jmp
repnz
cmp
mov
pop
int3
addb
pusha
popa
dec
cmpsl
setge
xchg
sbb
adc
jle
mov
mov
add
clc
jmp
stc
sub
mov
lcall
lret
inc
sbb
mov
jge
popf
rcl
jmp
pop
jb
call
sbb
arpl
xchg
stos
or
push
scas
stc
adc
push
push
mov
mov
call
push
xchg
inc
add
inc
mov
and
adc
outsb
mov
aaa
mov
mov
test
mov
or
push
mov
mov
dec
pop
adc
lock
dec
decl
mov
push
mov
mov
xchg
jno
pop
push
leave
lea
fwait
out
loopne
call
xchg
dec
mov
repz
movsb
cmpsb
jae
push
out
fimull
filds
call
mov
inc
out
ds
mov
imul
fs
and
xor
jmp
push
sub
mov
jne
xor
xchg
mov
inc
insl
std
int3
sbb
aam
inc
cmp
lods
mov
mov
cmpsb
enter
or
or
xchg
jno
adc
aam
inc
stos
ljmp
sar
adc
push
pushf
shrb
rcll
push
mov
mov
enter
test
aas
xlat
bound
push
notb
lods
fwait
mov
or
ljmp
js
adc
mov
mov
icebp
push
mov
js
stos
incl
add
sbb
js
popa
bound
in
mov
mov
xor
sbb
sarl
push
mov
imul
call
repnz
and
mov
and
cli
popf
dec
leave
pop
push
cmp
sub
dec
clc
adc
cwtl
rorl
lds
fnstenv
fcomp
push
pop
mov
sbb
xchg
xchg
xchg
out
iret
shr
mov
push
jmp
mov
icebp
ljmp
mov
jl
jecxz
test
stos
mov
mov
mov
pushl
aad
xchg
movsl
mov
rol
cmpsl
ror
lods
add
stos
lock
jmp
outsb
cwtl
leave
pusha
testb
dec
daa
cmp
rclb
rorb
bound
repz
cli
sub
mov
xlat
mov
shr
loope
fs
enter
jo
iret
add
xchg
add
push
movsl
cmpsl
mov
xor
dec
cld
fbld
cmp
push
mov
stos
dec
data16
inc
clc
adc
add
or
jmp
xchg
ror
fmull
dec
stc
mov
jbe
pop
push
xor
xchg
call
jmp
cmpsb
jo
mov
xor
dec
int
incl
ror
sub
shrl
inc
cltd
add
loope
repz
pop
in
inc
dec
lds
jno
ljmp
ja
in
pop
das
in
loop
inc
xchg
testb
fcompl
jle
fdivr
mov
call
add
ja
cmp
lret
sub
shl
mov
inc
cmpsl
add
cmp
jl
push
mov
xchg
mov
clc
repz
divl
test
rcr
pop
xor
dec
addr16
pusha
adc
jg
pop
jecxz
adc
or
mov
loope
jns
enter
fdivp
lcall
fcmove
push
cmp
mov
pusha
enter
jb
mov
out
in
mov
incl
push
sub
jle
call
push
popa
sub
test
popa
push
div
sub
push
push
push
cmc
jecxz
in
in
inc
xor
jmp
mov
test
mov
ret
xorb
fs
push
sub
mov
fs
push
decl
data16
shll
shl
sar
lds
mov
fcompl
sbb
push
sub
ds
out
stos
sbb
mov
pusha
pop
pop
pop
inc
out
dec
push
adc
dec
fcoms
jmp
fwait
jbe
cs
insb
push
pusha
jp
ds
scas
fidivl
ljmp
inc
call
inc
addr16
loop
outsl
jae
xor
jg
les
int3
adc
jp
mov
loope
pop
fs
lea
or
call
inc
mov
jg
dec
incb
pop
jl
sbb
xor
push
sub
call
int
hlt
and
cs
dec
pusha
push
daa
jecxz
movsb
pop
pop
xchg
pop
cmc
mov
mov
add
inc
hlt
sub
scas
mov
lcall
pop
push
stc
inc
push
jne
out
insb
jle
pop
daa
add
outsb
nop
jmp
or
incl
dec
xchg
into
add
repz
sub
stos
or
lods
es
ljmp
cwtl
mov
jne
enter
imul
mov
dec
nop
inc
xchg
in
xchg
roll
jne
cmp
andnps
clc
sub
xchg
sub
movsl
scas
inc
or
push
mov
mov
stos
inc
inc
sub
mov
push
lods
stos
pop
cwtl
sub
fistpll
or
rcl
adc
call
xor
lea
or
or
cmp
inc
push
xor
mov
lcall
mov
cs
pop
nop
cmp
cmc
shrb
sbb
mov
arpl
shrl
arpl
and
pushf
dec
mov
mov
pop
jae
outsl
cli
ljmp
dec
fsubrs
mov
inc
mov
bnd
dec
mov
ljmp
xchg
inc
xchg
inc
and
sub
fucom
lahf
or
cmp
cmp
repnz
jmp
xor
dec
mov
cmc
call
or
adc
adc
out
push
sub
out
xchg
in
lods
inc
cld
inc
mov
je
ljmp
xchg
test
dec
in
enter
out
dec
xchg
mov
push
dec
add
jle
mov
mov
mov
je
decl
adc
cmp
pushf
xor
sub
xor
dec
in
push
mov
mov
fcmove
cmp
xchg
sbb
stc
jnp
mov
sbb
ljmp
mov
add
shll
enter
add
push
sbb
std
jg
push
int
iret
outsb
ljmp
mov
gs
cltd
sub
jo
out
mov
mov
push
and
insl
outsb
add
jns
push
and
mov
arpl
cld
fcomip
jmp
test
jnp
jbe
fwait
or
mov
popl
cld
aaa
loop
stos
fbstp
scas
loopne
fsubs
arpl
mov
add
int
fbld
mov
mov
repz
fists
lock
jmp
loop
xchg
jle
mov
sub
shll
jb
xor
out
and
sub
mov
decb
negl
dec
shrb
and
xorb
repnz
enter
dec
xor
cld
and
or
cltd
inc
mov
lods
data16
nop
sbb
xor
repnz
jge
sub
push
es
mov
xchg
add
mov
lods
ds
jno
and
inc
pushw
lods
into
jns
fwait
mov
xchg
call
imul
out
mov
repnz
jge
or
pop
addr16
cmpsb
mov
test
addb
aaa
lret
sbb
push
push
scas
aas
shrb
adc
sub
in
mov
cmp
jg
clc
jmp
dec
pushf
mov
nop
push
std
pop
outsl
mov
xchg
call
fwait
cmp
clc
icebp
shr
pushf
cmpsb
adc
jg
fwait
ret
inc
imul
jno
ljmp
sub
xchg
call
std
pop
aaa
xchg
adc
aam
cmp
mov
test
mov
xor
incb
sub
pushf
test
test
decl
rorl
inc
or
repnz
lods
mov
jo
sbb
jmp
inc
out
repz
mov
jecxz
cmp
dec
adc
push
adc
inc
cwtl
jg
mov
jno
xchg
lds
imul
out
fmuls
lcall
dec
out
add
sub
xchg
in
popa
jp
sub
lods
dec
mov
push
cld
rcrb
jecxz
aam
sub
repz
stc
push
or
insl
sub
rorl
mov
adc
and
push
jg
cmpsb
sub
inc
push
and
decl
adc
fiadds
mov
jno
push
imul
idiv
jg
jmp
aad
jae
clc
in
insl
sbb
xchg
and
inc
add
xor
pop
lock
add
push
sub
pusha
fidivl
push
faddl
inc
mov
mov
out
pop
sub
dec
ljmp
ljmp
cmp
arpl
fistpl
and
add
cmp
pop
jbe
decl
in
cmpsb
jl
sbb
and
movsl
data16
jno
xlat
outsl
mul
lock
call
or
pop
push
jae
in
jb
jno
inc
adc
call
or
ret
sbb
sbb
lds
mov
insl
out
pop
aad
add
xchg
or
subb
mov
loope
js
int3
cmp
jmp
loope
scas
lret
jg
dec
and
adc
cmc
and
jmp
add
aaa
jge
in
mov
mov
push
add
or
mov
sahf
mov
mov
cmpb
movb
mov
fistps
jle
iret
fst
mov
fcomps
mov
xchg
call
push
lods
or
mov
sbb
cwtl
das
insb
aaa
or
adc
lods
hlt
jmp
mov
and
push
mov
int3
cmpsb
push
enter
mov
jecxz
mov
mov
cmp
sub
xchg
dec
pop
xchg
bound
sbb
mov
push
mov
xor
adc
mov
jns
popa
or
push
incl
push
std
mov
mov
sbb
jg
mov
push
sti
lahf
loop
push
or
or
cli
sbb
sarb
dec
pop
std
pop
cld
rcl
imul
push
clc
lea
ljmp
popa
jl
inc
out
pop
dec
fmull
dec
push
jmp
pop
xchg
adc
sub
mov
aaa
pop
incl
frstor
out
mov
mov
inc
in
or
int3
mov
mov
lods
testl
cli
cwtl
out
adc
shrb
push
lods
dec
sbb
call
cmpsb
outsl
leave
test
lods
repz
push
push
jo
ja
dec
test
stos
gs
dec
sbb
cmp
leave
mov
mov
mov
fstps
mov
add
jb
xchg
xchg
aam
out
mov
xor
ss
ret
or
inc
push
jg
aaa
std
inc
fs
jl
ljmp
arpl
fldt
shll
testb
add
ja
mov
je
mov
cmp
outsb
je
pushl
sbb
das
call
xchg
test
cmp
push
adcb
xor
jae
jnp
lcall
movsl
push
cmc
mov
xor
aaa
sbb
je
ljmp
std
in
sub
es
in
sub
pop
jge
fwait
cmp
dec
imul
lds
fstpt
pop
lret
dec
test
pop
push
hlt
lds
lret
je
scas
adc
incl
inc
loopne
cmpsl
lds
das
movsb
out
pop
lret
adc
mov
call
fs
add
imul
imul
or
cwtl
scas
stos
cld
lods
call
dec
mov
lcall
sub
cmpsb
js
pop
aam
push
mov
outsl
iret
and
sub
pop
cmp
mov
pop
nop
ss
call
pop
pusha
iret
mov
out
gs
mov
jge
pushf
push
mov
mov
xor
fcomip
pop
jg
fs
dec
nop
or
sbb
lret
fcompl
pop
std
fstps
loop
adc
into
sbb
cmp
imul
lahf
mov
lcall
mov
xchg
lcall
mov
pop
incb
cmpsl
lret
dec
jp
dec
mov
mov
ljmp
loop
cmp
mov
inc
inc
imul
mov
je
test
sbb
cmc
add
call
jne
mov
movsl
adc
jmp
dec
xchg
je
inc
movsb
add
subl
mov
ret
sub
andl
adc
mov
std
jl
mov
lock
mov
jp
push
test
push
insl
lock
mov
test
mov
or
addr16
jg
jns
add
inc
push
xlat
jae
out
push
mull
or
add
fsubl
incl
jecxz
gs
rolb
addr16
adc
mov
xor
dec
mov
sti
push
les
data16
push
add
es
jp
je
adc
jle
in
mov
mov
sbb
rolb
jmp
clc
addl
xor
lcall
inc
lds
sbb
out
dec
or
gs
cmp
push
and
mov
shl
mov
inc
jbe
or
pop
idivl
or
test
arpl
mov
outsl
or
fcomip
ljmp
scas
daa
cli
hlt
push
lods
cltd
mov
aam
xchg
mov
jnp
pop
into
aaa
jo
fnsave
push
movsb
in
mov
xor
pop
push
imul
enter
sub
xchg
insl
popf
bound
lods
ss
sar
jg
cwtl
sbb
fisubs
cmp
arpl
enter
mov
jg
or
lock
dec
insl
xor
push
out
xchg
es
clc
inc
or
pop
jl
add
xor
push
xchg
jmp
jo
xchg
add
pop
fs
pop
cltd
push
sbb
andb
and
aaa
ljmp
incl
mov
jo
loope
adc
arpl
sbb
call
xchg
pop
int3
push
mov
mov
jns
pusha
or
and
mov
add
pushl
int3
or
jmp
shrl
test
jecxz
mov
sub
mov
shlb
adc
decl
daa
test
cmp
pop
pop
mov
imul
addl
clc
lcall
mov
push
jb
in
sub
vmovshdup
pop
pop
push
xor
ljmp
ljmp
dec
cld
in
loope
int
cmpsl
lcall
jnp
stc
in
pusha
add
jmp
out
imul
lods
call
aad
lret
rolb
cwtl
sub
or
jecxz
in
test
cmp
jmp
sub
ss
cmp
notb
jne
test
stc
pop
stos
test
jmp
fsubl
aaa
or
repz
xor
add
push
and
adc
cli
decl
inc
sahf
fcmovnu
dec
in
mov
int3
mov
xchg
sub
jnp
xchg
adc
jg
jmp
rcll
inc
lcall
sub
pusha
lret
in
pop
ficomps
dec
inc
cld
push
push
mov
adc
pusha
sbb
pop
push
xchg
mov
xchg
inc
pushf
ja
push
incl
popf
pushl
outsl
add
or
or
cmp
pop
hlt
fistpll
adc
inc
push
filds
adc
jmp
and
jg
fs
mov
decl
dec
mov
sub
gs
mov
pop
pop
outsl
clc
xchg
inc
fdivp
incl
sti
mov
ljmp
nop
jns
add
push
cli
lds
out
cli
and
cmp
push
jl
je
test
add
mov
das
pushl
fisttpll
je
js,pn
jb
mov
divb
dec
aaa
test
addr16
out
clc
dec
mov
stos
inc
repz
outsl
pop
outsl
jno
push
mov
lret
test
jg
xlat
pop
and
addb
dec
popf
ds
addr16
jge
aas
cmp
clc
in
pushl
test
cs
adc
lds
test
fsubrs
jo
cwtl
insl
outsb
sbb
ljmp
mov
mov
rcrb
inc
popa
into
cmp
add
push
sub
stc
cmp
stc
outsb
push
sar
push
loop
sti
push
jecxz
inc
mov
test
and
out
mov
cmp
repz
mov
sub
or
ds
mov
ja
call
push
loop
adc
loopne
daa
ljmp
mov
je
adc
mov
decl
mov
fcom
imul
stc
and
jecxz
ja
inc
popf
movsl
in
push
and
loopne
std
jmp
xor
ret
test
nop
push
add
adc
icebp
mov
jnp
mov
cli
pushl
fcoml
fnsave
mov
jecxz
cli
enter
push
push
ss
adc
fs
out
xchg
jns
imul
and
cmc
push
jbe
mov
fimuls
stos
xchg
repz
cmp
jg
in
and
leave
cs
inc
call
dec
iret
insl
mov
sar
adc
sub
pushl
push
in
lret
psraw
sti
les
or
pop
scas
aas
cmp
mov
incl
adcl
sbbb
stc
test
xchg
lods
sub
and
aad
in
sub
pushl
and
lds
into
jb
les
in
lods
push
mov
mov
mov
ljmp
hlt
mov
mov
dec
popa
sbb
push
cmc
sub
and
hlt
sub
mov
cmp
cmp
fdivl
sub
add
bound
pop
pop
jl
leave
cld
push
and
fstpt
inc
cld
lock
mov
popf
insb
stc
pop
cmp
pop
aaa
cli
imul
fsubs
jg
incl
cmp
bnd
adc
mov
repnz
push
jae
mov
scas
out
clc
lcall
dec
add
inc
test
pop
iret
mov
pop
xor
jg
jmp
sbb
popa
lds
lret
mov
cmp
pop
aaa
inc
xor
jmp
pop
lcall
lods
dec
push
mov
mov
inc
aad
pusha
ss
xchg
ljmp
repnz
dec
and
imul
pop
xor
ljmp
cld
lcall
icebp
in
pop
rcrb
push
jp
push
cmpsl
or
inc
inc
sahf
je
jg
push
js
pop
ja
push
adc
dec
mov
fisubs
ljmp
pop
stos
mov
aaa
lret
cmp
cld
test
pop
inc
mov
or
loopne
sub
enter
jg
mov
pop
test
lods
push
les
jmp
push
and
incb
cmp
jno
push
mov
ljmp
xchg
push
es
jmp
fucomi
call
loope
add
lds
int3
shlb
push
or
xchg
in
mov
shll
lock
mov
int
dec
arpl
in
cli
incl
xor
and
cmpsl
cmp
or
xor
inc
jmp
lcall
xchg
dec
or
sub
xor
ljmp
mov
cs
xchg
sbb
dec
mov
aas
lcall
insl
push
sbbl
mov
aas
pop
ljmpw
test
data16
inc
int
das
pop
in
mov
inc
jg
fs
mull
dec
mov
fidivl
loope
and
push
pushl
mov
xor
adc
pop
add
xchg
add
inc
fcmovnu
movsb
or
fcomip
lods
fistps
xor
scas
mov
mov
fsubr
divb
out
xor
inc
mov
jl
stos
pop
mov
decl
jmp
int3
add
and
mov
jns
inc
mov
in
jae
mul
push
loopne
es
sbb
dec
pop
lahf
push
out
stos
sub
sahf
in
shl
jg
mov
push
stos
rol
rorl
jae
in
adc
sub
lods
mov
fwait
sbb
ljmp
stc
mov
je
sub
out
push
dec
add
aam
mov
sub
fdivrp
decl
insb
pop
out
push
in
push
and
fstpt
pop
mov
out
xchg
arpl
std
je
ds
repnz
gs
dec
dec
sub
sbb
cmp
mov
add
decl
xchg
mov
loope
imul
pop
jge
ja
test
push
or
dec
outsb
add
dec
pop
cmp
mov
mov
shll
cmp
jmp
in
xchg
xor
mov
outsb
es
ljmp
inc
push
stc
or
jne
imul
jge
test
adc
jmp
xor
hlt
pop
sbb
les
gs
int
fcomip
decl
ret
cmp
in
cld
popf
imul
addr16
or
bound
arpl
mov
jge
fwait
loopne
jb
mov
inc
data16
jg
sti
jnp
dec
int3
xchg
pop
or
jae
xor
mov
xchg
and
dec
cmpsb
xchg
and
shrb
pop
xor
pushl
push
pop
sbb
iretw
push
dec
test
push
jb
pop
xchg
popf
clc
mov
pop
or
dec
jo
jge
stos
adc
inc
loop
push
ljmp
ss
mov
pop
add
or
stos
xchg
fwait
mov
xor
fdivr
addr16
pushl
sub
push
icebp
lret
jno
popf
sbb
test
add
adc
xor
lock
incl
sbb
push
mov
adc
mov
fimull
cmp
sar
mov
cli
mov
in
rolb
jmp
xor
lahf
cmp
fsubs
mov
jno
inc
xor
cs
add
loope
sub
out
cli
call
das
sbb
in
xchg
push
sbb
and
mov
out
jg
aam
test
push
or
adcb
les
mov
and
loope
lcall
pop
jne
inc
xor
int3
aas
in
clc
jg
pushl
sti
imul
in
push
mov
test
iret
std
movsb
mov
sar
outsl
test
xor
mulb
int3
pop
outsb
xchg
jmp
and
sub
ljmp
repz
or
or
fwait
xchg
cmp
popa
sarl
sahf
and
and
push
std
push
cmc
imull
jg
lret
fwait
clc
aad
sbb
std
mov
or
movsb
sarb
mov
sbb
mov
xchg
cmp
sub
push
cmp
in
push
clc
aad
lock
pop
inc
ficompl
mov
decl
cli
mov
jne
sbb
sbb
call
cmpb
cmpsl
pushf
jge
pop
jg
or
idiv
ds
sbb
lcall
in
std
std
les
lock
fmuls
scas
lcall
insl
cmp
pop
fstl
jns
movsl
mov
gs
mov
dec
jp
call
dec
sub
mov
jmp
sti
leave
cmpsl
shlb
int3
outsl
xor
lcall
jecxz
pop
mov
adc
repz
dec
repnz
mov
xchg
aas
outsl
push
sbb
push
cmp
push
push
incl
repnz
xchg
or
ja
cmc
in
sahf
jns
jo
inc
mov
sub
dec
pop
std
cld
xor
jbe
ror
mov
mov
cli
add
inc
dec
and
imul
cmp
xlat
or
sbb
js
push
cld
jg
into
lahf
adc
inc
addb
rcll
ss
cmc
out
dec
int3
mov
cmp
aas
mov
repnz
fs
jl
fsubp
mov
xor
into
adc
incl
addb
lcall
shll
mov
imul
mov
decl
adc
inc
daa
adc
jbe
push
add
pop
push
add
or
jl
mov
cmp
decl
dec
push
dec
pop
pushf
add
cld
cwtl
jmp
cmpsl
movsb
iret
jno
lcall
pop
jns
fcomi
cltd
jl
pop
mov
andl
mov
cwtl
pop
or
incl
fcmovu
cmp
jb
test
push
add
iret
dec
repz
cld
dec
scas
and
cltd
mov
scas
pop
jle
and
xchg
cmp
sbb
pop
jmp
mov
aaa
add
mov
call
jae
xor
clc
push
sub
ret
ja
in
int3
test
mov
cld
push
into
inc
dec
lret
ja
aas
cli
jg
mov
pop
pop
fsubs
sbb
or
test
dec
incl
shrl
in
aad
sbb
loop
leave
test
mov
sub
add
lcall
mov
sti
fldcw
jno
jp
movsl
mov
out
inc
std
incl
cmp
and
pop
or
aaa
push
xor
ljmp
scas
xor
cmpsl
or
push
push
in
add
dec
dec
cmp
mov
mov
push
cmp
jmp
adcl
stos
push
das
cmp
dec
jg
dec
jne
stc
fs
lcall
lods
sub
dec
cli
jno
mov
test
mov
ljmp
aas
mov
cld
decl
xor
call
sub
add
lds
roll
jg
and
cmp
cwtl
insb
xor
hlt
cmp
jg
sbb
dec
test
jge
mov
jns
mov
mov
shrl
mov
sub
push
push
daa
arpl
push
add
in
jmp
in
mov
push
or
push
and
add
enter
decl
mov
gs
rcrl
push
lret
adc
loop
bound
xchg
popf
mov
jle
incl
out
popa
jmp
and
in
repz
dec
pop
inc
adc
pushf
lock
dec
sti
dec
dec
ljmp
xlat
cmp
ret
dec
push
fistps
rclb
rolb
lock
jp
mov
push
call
cli
xchg
adcb
fstpl
cmp
call
fsubl
pushl
jno
mov
add
cmp
outsb
cli
stos
inc
out
outsl
aam
inc
mov
jne
pop
test
lcall
sbbl
fildll
push
add
dec
mov
hlt
mov
imul
inc
jg
ljmp
xor
outsl
mov
fcom
je
cmp
jae
cmp
mov
push
pushl
sbb
mov
xlat
push
pusha
lcall
movl
jno
pop
pop
fnstcw
lcall
lcall
and
cmpl
push
xor
or
push
jl
addr16
arpl
jg
fimull
xchg
xchg
mov
nop
sar
aaa
pop
cmp
fwait
inc
push
arpl
in
xor
je
test
pop
das
push
mov
cltd
leave
pop
cmp
push
xchg
jl
movsb
stos
push
pushl
pop
push
jl
push
xchg
push
subl
xchg
mov
sub
fnstcw
jnp
ljmp
mov
imul
mov
movswl
outsb
fstpt
lcall
and
pop
mov
cmc
xor
repz
mov
jge
aaa
test
pushl
ficoml
xlat
inc
loop
call
jg
xchg
decb
adc
adc
aam
ret
add
pushf
mov
lock
lcall
mov
push
enter
mov
adc
xchg
mov
cmpb
imul
pop
cltd
sbb
call
std
dec
mov
call
mov
xchg
jbe
test
loope
scas
add
dec
outsl
mov
loop
sub
pop
cmp
dec
jmp
jmp
adc
lcall
sbb
ljmp
adc
lcall
pop
mov
mov
mov
fldt
adc
shll
inc
mov
and
lret
or
or
inc
cmp
pop
addr16
shll
push
cli
or
jb
hlt
mov
and
xchg
ss
fs
aas
jne
pop
test
loope
mov
push
divl
fistpll
jl
dec
out
or
mov
jecxz
adc
inc
mov
push
push
jmp
in
sti
and
dec
pop
cs
lea
dec
nop
scas
dec
repz
sbb
add
cli
xchg
inc
hlt
inc
jbe
cmpsl
loop
movsl
lods
mov
les
dec
sub
pop
sub
ljmp
pop
repnz
pop
mov
sarb
mov
jmp
dec
test
cmp
cmp
cmp
call
jp
add
cmp
mov
rorl
incl
lods
mov
add
cmpsl
pop
sbb
or
push
mov
dec
lea
decl
scas
rcrl
inc
ret
xchg
mov
dec
mov
bound
clc
in
adc
rol
sbb
jg
ret
scas
and
fisttps
push
testb
and
lret
lret
pushf
lahf
push
in
fcomps
call
dec
stos
jne
mov
mov
lcall
push
ficoms
aaa
mov
and
test
xor
and
adc
lcall
inc
data16
jecxz
lods
add
mov
jne
pop
push
xchg
not
sub
add
mov
mov
call
cld
cli
out
test
jle
sbb
aam
data16
sbb
or
push
out
call
out
lret
cld
push
sub
and
pop
push
add
stos
xchg
xor
lret
lods
xor
jecxz
dec
add
int
and
pop
fsubs
mov
cli
aam
lock
data16
and
incb
icebp
xchg
testl
pushl
pop
adc
in
sub
addb
xor
jg
decl
pop
xchg
cmp
hlt
inc
or
inc
popf
jne
push
aaa
rol
decl
jbe
lcall
mov
leave
cmp
les
jg
mov
test
fistpl
lcall
jnp
mov
jb
pop
sbb
mov
ret
inc
lock
sarl
xor
xor
mov
fcompl
xchg
jmp
insb
push
mov
push
inc
or
inc
call
jno
xchg
shrl
dec
out
cmp
xchg
mov
jmp
xchg
lds
jmp
leave
aas
and
sbb
add
in
mov
ljmp
dec
push
in
loopne
xchg
repz
pop
inc
xchg
mov
lea
xchg
sti
scas
and
sub
pop
pushf
or
or
dec
xor
or
loop
cmpsb
movsb
imul
int
test
pop
pop
push
out
dec
dec
mov
fildll
xor
enter
clc
xchg
add
repnz
mov
cmp
call
ljmp
iret
mov
inc
arpl
mov
daa
mov
sub
pop
ja
or
call
dec
xor
pop
aam
mov
inc
cmp
std
inc
cmpb
ja
arpl
call
and
push
lea
and
setle
push
ss
and
adc
push
ljmp
insb
mov
test
sub
add
das
xchg
movsl
jmp
mov
int
adc
inc
xor
sbb
sahf
mov
and
ds
test
std
in
loop
push
cld
js
stos
sarl
les
cs
das
xadd
lcall
and
fcomps
test
inc
cmp
insb
ss
push
dec
cli
iret
rcl
mov
je
push
pop
adcb
cmc
sbb
mov
fldl
clc
sbb
dec
gs
pop
jae,pn
mov
and
xchg
imul
cmpsl
mov
pop
fadds
pop
gs
js
sub
push
ds
cmp
cli
push
jg
jmp
xor
scas
stc
dec
push
repnz
test
and
cmpb
incl
stc
pushl
lds
ss
push
jmp
mov
push
inc
jb
scas
mov
stos
push
cmp
sbb
mov
sbb
mov
out
lods
cmp
inc
notb
mov
push
mov
incl
aad
movsl
pop
enter
inc
jnp
movsb
fisttpl
xchg
cmpsb
sbb
loop
jmp
mov
jmp
jmp
sbb
outsb
adc
mov
ja
xchg
mov
mov
dec
add
je
test
or
inc
push
push
adc
inc
out
popf
fdivrp
mov
out
fnsave
adc
jae
adc
into
ljmp
jmp
dec
cmp
ljmp
fbstp
mov
inc
ret
jg
rcr
pop
icebp
lcall
cmpl
out
cmp
jle
sub
mov
hlt
cmp
push
cmc
repz
movsb
aaa
cmpsb
js
pop
pop
int3
in
call
dec
xor
out
repnz
mov
mov
jnp
or
out
push
adc
jge
xchg
daa
pop
sbb
ds
xchg
cmp
sub
enter
pop
cmpsl
mov
cmp
push
mov
popa
jb
sub
cld
test
cs
aad
rorl
cmp
and
cmp
or
mov
out
fildl
mov
and
hlt
sarb
iret
push
mov
js
lcall
mov
push
mov
cmpsl
lahf
xor
jecxz
lcall
roll
stos
jae
xchg
xchg
adc
lcall
jnp
loop
loopne
movsl
das
clc
decl
mov
test
dec
adc
mov
and
test
loop
ljmp
mov
pushf
dec
xor
mov
rorl
jmp
pop
cmp
adc
jp
dec
mov
cltd
out
cmp
pushf
test
xor
cmp
pushl
sti
mov
pop
xlat
iret
dec
mov
in
cmc
cmpb
cmp
pushl
jno
and
loopne
xchg
fldcw
mov
and
mov
call
pop
mov
xor
pushf
hlt
cld
mov
add
add
pop
and
jmp
xchg
aaa
movsl
add
and
adc
xchg
test
cli
push
aas
jb
ss
insl
push
imul
loope
jg
stos
incl
inc
stos
jp
shr
mov
add
out
mov
out
pop
in
fsubr
pushf
inc
ljmp
mov
xchg
add
pop
sahf
test
aam
es
push
pop
decl
ljmp
lcall
push
jle
fcmovnbe
inc
dec
ret
repz
jmp
adc
in
mov
add
xchg
mov
push
fistps
pop
lods
jne
enter
xchg
rorl
incl
iret
jg
cmp
inc
mov
insl
into
push
in
fxch
out
adc
and
cmpsb
sbb
arpl
imul
sub
adc
push
rorb
pop
bound
or
popf
test
adc
or
movsl
mov
mov
add
inc
and
imul
pushf
out
mov
cmp
outsl
into
pushl
jmp
fildll
push
jns
fwait
jns
insl
push
lret
lret
lock
cmp
jmp
dec
jno
jnp
push
mov
out
insl
call
ficompl
dec
in
repnz
jge
mov
xchg
pop
test
xor
jge
lcall
subl
mov
stc
pusha
mov
popf
push
push
dec
jle
insb
add
inc
jle
add
adc
pop
cli
xor
aaa
lahf
lock
jmp
sub
fcomip
int3
inc
cmpsl
repz
out
leave
and
testb
mov
pop
test
pushl
std
je
inc
jp
push
jbe
xor
xchg
out
inc
adc
mov
and
ja
imul
into
ret
jecxz
or
addb
pop
lret
or
shrl
stos
push
cmp
adc
push
popa
scas
jae
arpl
jns
movsl
jecxz
call
xor
add
mov
cld
out
cltd
leave
loopne
popf
push
clc
out
clc
jmp
fldl
xor
jae
sarb
mov
sbb
sbb
call
jo
dec
ds
xchg
lds
sbb
add
mov
adcb
dec
sahf
scas
ficoml
lcall
cmp
xchg
lds
ds
lods
imul
stc
xchg
ret
jmp
jmp
or
mov
sub
je
test
outsb
push
js
and
push
jmp
sbb
mov
inc
push
mov
fimuls
shll
cli
jle
dec
icebp
stc
jecxz
lcall
mov
shlb
js
lret
aas
pop
mov
roll
jne
jns
inc
incl
xor
adc
lock
jg
pushf
pusha
adc
mov
mov
mov
call
pop
mov
mov
int
les
les
mov
incb
in
push
into
and
jecxz
es
mov
jge
push
andl
mov
mov
clc
lcall
push
sahf
xor
hlt
jp
cmp
mov
mov
fsts
mov
jmp
nop
std
jmp
adc
mov
push
out
xchg
lods
hlt
pop
dec
lds
jbe
ret
negb
loope
lcall
mov
cmp
scas
das
sbbl
orb
cwtl
cli
or
es
mov
insl
leave
mov
lods
scas
add
and
add
jecxz
inc
mov
adc
xchg
dec
out
add
outsl
lea
lods
insl
out
push
and
decl
daa
int3
pop
fbld
stos
sub
arpl
push
rolb
gs
notb
pop
fdivr
sub
jbe
test
call
pop
or
or
cld
xlat
ret
loopne
sbbb
daa
dec
out
pop
aam
popf
jg
loop
push
inc
hlt
fadds
push
clc
lock
add
xchg
xchg
outsl
arpl
cli
mov
sub
movsl
out
cmp
xor
push
or
and
and
push
lret
in
mov
ds
pop
xchg
jle
je
sub
sbb
aaa
cld
xchg
mov
in
or
pushl
push
sbb
dec
jmp
mov
dec
lahf
sub
decb
sbb
mov
int
call
push
mov
outsb
pop
inc
ja
vsubps
lds
sbb
mov
lods
push
sbb
incl
sub
das
xor
jg
xchg
push
mov
jle
xchg
add
mov
test
stos
xor
mov
addr16
jecxz
jne
in
jle
nop
outsl
popa
and
jmp
shlb
scas
xor
push
repnz
mov
inc
jbe
cltd
cld
ds
shll
jl
cmp
fsubrp
je
aaa
xchg
aam
inc
cmc
call
call
loopne
mov
test
movsl
mov
movsl
push
or
push
inc
adc
pushl
loopne
mov
jb
into
in
cmp
sub
jg
out
push
test
inc
mov
or
insl
test
xor
cmp
jg
cmc
sti
test
xchg
fidivl
pop
lds
lcall
cmp
xchg
xor
repnz
add
mov
cli
mov
mov
mov
xchg
push
nop
fstpl
mov
ret
lods
adc
insl
mov
shlb
inc
add
aas
jge
outsb
hlt
mov
pop
in
cmpsb
and
jmp
popl
insl
loope
sbb
aam
jle
dec
in
jg
rorb
incl
xchg
mov
or
cmp
inc
out
dec
inc
xor
mov
leave
mov
call
ljmp
call
cwtl
inc
divl
cs
lock
sbb
std
or
sti
insl
mov
out
pop
mov
pop
rclb
mov
call
push
jg
call
mov
adc
sbb
add
add
decl
xchg
push
popa
cmp
lods
sub
testl
xor
or
and
pop
js
incl
and
adc
sub
push
in
cmc
pop
idivl
jne
inc
fwait
xor
clc
add
std
incl
adc
sbb
out
aaa
adc
pop
pop
scas
loope
mov
jmp
sub
mov
rol
adc
jae
fcmovnb
push
loopne
fs
or
mov
lret
out
clc
fucomp
rolb
add
xchg
push
push
sub
gs
popa
fcoms
loop
incl
lahf
arpl
dec
push
test
cmp
mov
decl
stos
and
adc
lahf
push
sbb
cmpsb
jge
shlb
mov
ja
inc
fs
idiv
push
lcall
sbb
jl
insb
add
lock
adc
popa
jecxz
xor
fisttpll
fidivl
clc
push
sbb
fs
inc
xor
inc
adc
shlb
mov
aas
lock
mov
jmp
jnp
sarb
stos
adc
call
ds
rcrl
push
xor
sahf
ss
ss
or
decl
fcmovnb
out
rorb
cmp
sahf
loopne
shrl
jg
std
nop
cld
push
lods
std
imul
mov
call
jle
mov
pop
dec
add
mov
or
cli
cmp
push
xchg
sub
sar
call
or
xor
aaa
inc
inc
mov
movsl
push
and
xor
add
jge
adc
mov
ljmp
imul
dec
test
cs
pop
sbb
jno
add
jl
add
clc
pushl
jl
and
xor
pop
mov
jmp
repnz
ss
dec
jnp
mov
and
cmpb
mov
jnp
nop
mov
dec
sar
sbb
in
xchg
mov
outsb
into
test
sahf
mov
mov
dec
and
jbe
mov
in
jnp
int
pop
clc
pushf
xchg
in
pop
mov
ljmp
movb
dec
loop
jb
movsl
mov
xor
cmp
clc
jmp
stos
jle
rclb
mov
inc
mov
xchg
outsl
inc
or
mov
pusha
sub
push
orl
std
push
idiv
mov
aaa
out
cmp
lods
sub
jbe
mov
lds
icebp
dec
cmp
jl
insl
inc
mov
lock
test
xor
push
icebp
inc
int
xchg
pop
jnp
incl
push
push
cmp
xchg
add
xchg
pop
or
nop
or
fistpl
jmp
or
les
cli
inc
pop
mov
adc
and
std
jle
lcall
cmp
dec
push
outsw
jg
mov
in
fldl
lcall
xor
jnp
cwtl
adc
xor
mov
and
sub
pop
adc
incl
rcrl
mov
pop
push
dec
jge
or
xchg
icebp
das
clc
call
sub
std
faddl
add
dec
xor
lcall
or
scas
cli
movsl
sub
jecxz
enter
pop
outsb
pop
push
arpl
jno
sbb
jg
call
pop
shll
ja
shll
push
cmpb
je
icebp
jbe
insl
int
mov
enter
push
int
test
loope
je
xor
xchg
fstpl
mov
push
mov
ftst
xchg
jl
in
dec
bnd
repnz
ljmp
lds
and
fmuls
loopne
insl
aaa
int3
int3
lcall
jmp
mov
jne
xchg
cwtl
pop
out
xchg
mov
cmpsb
mov
js
imul
jmp
mov
sub
or
out
mov
mov
pop
sub
sub
mov
call
stos
loope
imul
scas
jp
shufps
fs
mov
ljmp
jo
pop
jl
int
scas
rorl
std
pusha
cmp
dec
stos
mov
cmpsl
ljmp
sub
or
cmpsb
mov
sbb
push
sub
fstl
scas
sbbl
pushl
imulb
movsl
mov
pop
mov
inc
and
lcall
push
loop
or
fsubs
push
in
push
xchg
mov
fdivrl
clc
sbb
pushl
add
add
leave
cs
mov
mov
ds
mov
cmp
sbb
and
jno
sub
mov
sub
cmp
mov
sti
inc
push
dec
loope
or
adc
mov
sub
pop
push
sbb
inc
out
imul
adc
cwtl
and
stos
mov
sub
inc
jl
fldl
jb
sbbb
lret
jg
sbb
test
into
pop
cltd
sbb
jp
leave
push
xchg
mov
jp
fwait
adc
loopne
ljmp
adc
mov
mulb
aas
fidivrs
or
add
pop
call
test
in
or
test
sub
test
shrb
xchg
orl
inc
arpl
mov
sbb
outsb
push
or
and
and
gs
in
inc
mov
cmp
decl
or
in
adc
data16
cli
cmp
adc
or
jecxz
std
call
test
push
add
lods
adc
fisttps
jnp
jns
fcomps
ljmp
test
xchg
incl
pop
cmp
ja
xor
daa
mov
in
iret
jo
push
fldt
xchg
ss
dec
cmp
cli
retw
lods
lret
cmpsb
cs
pop
sbb
sbb
ror
push
jle
or
outsb
add
outsl
jg
mov
inc
and
mov
mov
cltd
loopne,pn
or
xchg
ljmp
cli
push
xor
adc
rolb
xorl
out
out
mov
pop
hlt
push
notb
nop
jg
call
nop
rol
push
subb
cmpsb
xchg
mov
ret
sub
js
push
aam
xchg
dec
inc
test
ljmp
call
jl
lcall
sbb
mov
fadd
pop
rclb
push
shl
cltd
mov
xor
sub
shlb
jmp
fwait
add
aad
bound
decl
test
xchg
xchg
and
and
in
push
cld
jns
outsb
xchg
pop
and
int3
cwtl
loope
incl
cmpsl
vshuff32x4
int3
mov
subl
roll
addl
call
pop
adc
mov
in
addr16
push
ficoml
sub
jl
sub
mov
xchg
cwtl
inc
movsb
pop
add
mov
dec
pop
or
mov
and
jp
sbbl
ljmp
loope
cmp
cwtl
dec
jbe
lret
fldl
outsl
fstl
sbb
push
aad
je
ljmp
inc
lret
jns
jg
movsb
rorb
add
aaa
inc
nop
ja
inc
pop
xchg
rclb
mov
lcall
xor
mov
mov
pop
call
repz
mov
dec
dec
mov
cmc
jecxz
pushl
fsubr
inc
mov
push
stos
in
mov
insb
loop
leave
cld
sbb
into
data16
mov
cltd
ja
jnp
test
mov
and
pop
pop
mov
fisubl
dec
lea
pop
pop
cmp
call
pop
test
sub
popa
sahf
cmp
lods
push
loopne
jle
inc
mov
mov
jecxz
jmp
decl
dec
sub
dec
stc
aad
mov
dec
jno
cmp
movsl
jno
dec
repz
mov
jle
in
xor
pop
adc
sub
xchg
test
adc
xchg
xchg
mov
or
decl
push
pop
sahf
sub
lcall
out
mov
pushf
xor
adc
out
inc
sbb
js
mov
call
mov
add
sahf
aaa
sub
pop
ss
pop
push
xor
xor
sbbl
rorl
call
add
pushf
xchg
add
mov
pop
call
add
lcall
in
adc
mov
mov
dec
outsl
flds
lea
add
adc
adc
xor
popf
into
dec
add
sub
lods
incl
enter
or
lahf
sub
pop
xchg
mov
aad
imul
adc
push
lcall
push
arpl
xor
sub
decb
rcrl
loop
pavgw
je
pop
mov
mov
add
fidivrl
test
notb
jle
imull
outsl
clc
cld
out
mov
stos
daa
jecxz
xlat
pop
aas
aaa
mov
movsl
adc
repnz
adc
roll
es
dec
jmp
call
adc
cmp
and
mov
pop
out
mov
xor
push
or
mov
sti
xchg
lods
inc
push
je
lret
and
aaa
pop
in
and
or
fwait
lret
adc
inc
out
push
insl
ret
push
adc
mov
inc
pushl
push
aam
ficompl
sbb
jl
jo,pn
int
test
int3
or
sbb
call
out
xchg
xchg
imul
dec
imul
mov
adc
rorb
scas
add
dec
leave
dec
mov
mov
jno
in
xchg
jae
scas
outsb
add
jg
sbb
jg
jae
inc
adc
mov
test
cmp
jg
decl
mov
xor
lock
shlb
mov
xchg
sbb
aam
fs
ret
call
adc
in
subb
fldt
fidivs
mov
lret
call
repz
push
icebp
test
pop
inc
ds
fwait
xor
lcall
cmp
gs
xchg
addr16
cmpsl
icebp
lcall
test
fdiv
in
pushf
jmp
xchg
pushl
arpl
stos
adc
test
faddp
push
dec
je
mov
sahf
adc
fnstcw
mov
mov
icebp
cmpsb
loopne
cltd
xchg
in
dec
push
mov
call
jns
ficoms
push
jbe
push
sbb
aas
xchg
sbb
pop
cmp
sub
incl
decl
dec
mov
fstl
movsl
push
data16
xor
push
stos
call
ljmp
xchg
inc
mov
inc
jg
js
inc
xor
inc
cli
arpl
cmpsb
sarl
rcll
fs
cmp
xchg
mov
jns
cmpl
outsl
push
movsl
cmp
in
xchg
jnp
into
pop
jle
int
push
test
mov
sub
in
movsl
out
clc
rcrb
in
ret
push
stos
mov
arpl
aad
decl
push
dec
inc
popa
cmp
inc
mov
iret
andl
dec
xchg
mov
sti
out
jecxz
call
dec
out
xor
dec
arpl
mov
pop
fnstenv
push
aam
out
pop
push
cmpb
mov
mov
icebp
pop
mov
gs
push
cmp
fdivrp
mov
insl
or
jp
mov
nop
sub
and
dec
adcb
fstpt
repnz
jno
push
jne
movsb
xor
mov
push
call
out
cli
fstp
xor
das
dec
xor
cmp
pop
add
loop
pop
ljmp
fdivs
cld
sti
dec
push
jo
into
and
es
subb
sar
pushl
sbb
f2xm1
mov
fisubrs
sub
jmp
mov
test
hlt
call
pop
mov
gs
dec
push
add
lcall
out
xor
movsb
adc
and
or
in
xchg
shl
mov
xchg
xor
scas
scas
and
into
mov
clc
or
sbb
decl
mov
inc
movsl
mov
xchg
push
adc
xchg
mov
mov
xor
cmpsb
fxtract
and
jmp
out
repnz
sub
mov
cltd
int3
cmp
ja
sbb
lahf
sbb
mov
ret
stos
divb
scas
dec
incl
mov
stos
add
shlb
inc
and
int
outsb
pushf
adc
mov
loopne
loopne
jp
mov
inc
daa
lods
mov
lret
add
inc
fcmovnu
dec
push
mov
pop
pop
cmpsb
sbb
inc
aaa
push
cmpsb
int3
test
fildll
push
dec
pop
mov
insb
or
scas
mov
shl
jecxz
shr
fsubp
xor
add
mov
cwtl
pop
ja
aaa
pop
add
mov
dec
jns
jle
hlt
test
xor
frstor
push
sub
lcall
mov
insb
sub
rcl
insb
scas
inc
les
mov
push
jo
push
lahf
pop
enter
jmp
add
ret
loopne
mov
fnclex
loop
cmc
aad
and
ja
pop
push
pushl
xchg
dec
pop
sbb
daa
xorl
jbe
xchg
adc
nop
jg
insl
or
int3
aaa
dec
mov
fsubl
aas
cltd
repnz
lock
popw
lds
xchg
xchg
sub
jne
or
pusha
sbbl
negl
mov
cmp
mov
lods
jl
sarb
incl
sub
daa
outsb
push
jmp
insb
popa
and
stc
xchg
pushf
inc
and
xlat
xor
sbb
mov
js
mov
cwtl
adc
push
movsl
sub
sbb
dec
push
cli
fists
cmpsl
stos
ljmp
push
add
xor
div
sub
jle
call
push
cmp
hlt
mov
stc
cmp
cld
iret
paddb
inc
jbe
in
cs
lret
jo
fsubl
mov
mov
decl
pop
push
sub
lcall
or
jg
dec
adc
clc
sar
out
cli
jmp
mov
mov
sub
into
mov
push
hlt
pop
sbb
mov
pushf
mov
inc
repz
scas
into
adc
cmpsl
mov
mov
int
mov
or
push
scas
mov
and
clc
call
lahf
stos
add
push
rol
xchg
cmp
xor
sub
pushf
mov
and
loopne
negl
insb
call
xchg
fsts
dec
pop
pop
mov
adc
in
shr
dec
adc
lcall
outsl
mov
push
out
lret
cmp
jmp
mov
aad
or
outsb
mov
sub
xchg
pop
fsubs
incl
add
adc
mov
shlb
dec
xor
cltd
outsb
or
sub
push
adc
xchg
sbb
fldt
pop
shl
mov
cmp
mov
push
inc
sub
outsl
outsl
sub
mov
aaa
mov
or
iret
jae
dec
cmpl
into
add
call
loopne
lods
stos
cmp
inc
sub
and
jo
push
lds
dec
adc
dec
jbe
jb
xchg
pop
inc
inc
and
xor
incl
inc
out
sub
cmp
and
cmp
pop
decb
icebp
cmp
xchg
cwtl
sar
decl
mov
sub
push
rcll
int
bound
mov
xchg
pop
aaa
mov
mov
test
mov
jp
add
lcall
loopne
push
outsb
xchg
add
rcll
xor
mov
cmp
shlb
mov
idiv
dec
pushf
xchg
popa
insl
xchg
js
inc
cld
scas
jnp
out
out
add
sbb
test
cli
xchg
ljmp
cmp
adc
xchg
jae
test
mov
mov
popf
adc
fisubl
out
add
aam
xorb
fildll
add
ret
outsb
fldenv
cld
das
inc
dec
roll
fwait
cmp
ss
pushl
bound
add
mov
outsb
jmp
loope
add
mov
rcrb
mov
pusha
jg
call
inc
xchg
push
fisubs
sbb
movb
push
lcall
pushl
sub
leave
push
cmpsl
inc
std
xchg
dec
popa
ljmp
dec
jg
decl
filds
les
inc
aad
fistpll
aas
loope
inc
pop
mov
cmp
pop
mov
mov
dec
shl
pop
lcall
xor
lods
sub
adc
sbb
push
push
mov
inc
js
in
mov
or
dec
xor
mov
xor
in
aam
popf
imul
aaa
cmpsb
test
std
pop
lock
xchg
adc
inc
jecxz,pn
xor
mov
pop
ret
lret
loop
mov
jp
jge
xchg
add
inc
insb
push
mov
adc
insl
ror
scas
and
call
stc
or
cmp
mov
repnz
sub
pop
jno,pn
pop
mov
fbld
add
pop
jnp
xchg
pop
push
push
cli
dec
mov
cltd
jo
inc
mov
lock
gs
in
jecxz
pop
or
pop
std
push
push
mov
cmp
lret
and
mov
or
sahf
repnz
xchg
cmp
shlb
jnp
add
jae
cmpsl
and
sub
addr16
pop
cmc
decl
jmp
mov
add
daa
xchg
cli
mov
addl
ljmp
push
adc
and
adc
push
jae
jnp
outsl
mov
xchg
lret
addr16
repnz
jmp
and
fdivl
xchg
das
ss
out
pusha
fdivrs
push
sub
push
int3
jle
ljmp
fidivrl
sti
sbb
je
inc
pop
pop
push
outsb
icebp
adc
scas
dec
sub
push
call
xlat
sbb
jg
sub
pop
mov
shl
inc
sub
pop
std
pusha
fdivrp
jg
sti
xor
add
mulb
push
inc
xor
addb
les
scas
push
fdivr
mov
mov
jbe
xor
sbb
mov
pop
dec
cmp
js
neg
lock
shr
call
jae
ds
lret
ds
jne
cmp
jmp
ljmp
scas
gs
ds
ja
xor
pop
pop
inc
sbb
fucomi
jp
and
mov
ss
in
jae
sub
fiaddl
pushf
mov
mov
inc
int
lahf
mov
adc
push
adc
inc
das
mov
popa
lods
sbb
adc
call
cli
lods
dec
js
popf
rcrl
and
out
andl
imul
shll
ljmp
addl
jmp
out
aam
aas
push
hlt
imul
xlat
vmulpd
aam
mov
test
incl
cld
pop
fisubl
call
stc
xchg
imul
cli
xchg
in
jnp
iret
inc
mov
cmp
call
and
xchg
pop
fwait
fs
pop
fsubrl
leave
dec
jge
push
push
and
pop
inc
popf
push
mov
push
dec
mov
adcl
ret
shll
dec
mov
dec
mov
lods
sub
lahf
add
or
aam
xor
jmp
in
pop
xor
jg
fcomps
sub
nop
in
je
mov
jae
cmp
cmpsl
lcall
sub
inc
mov
xor
mov
inc
jmp
popa
leave
repz
add
sbb
sbb
inc
dec
ret
fisttpl
nop
cld
adc
aas
or
out
aas
cmc
cmpsb
mov
and
decl
dec
push
or
mov
sbb
or
repnz
std
ss
xor
cmp
les
mov
ss
jns
out
mov
scas
sub
fldt
push
add
call
movsb
cmpsb
clc
mov
push
clc
jbe
in
mov
push
in
mov
arpl
lods
nop
incl
ljmp
loope
mov
xchg
nop
fs
insl
aas
lods
xchg
mov
jnp
xchg
or
cmp
and
aam
and
mov
push
mov
sti
add
dec
subl
inc
cld
mov
xchg
rcr
add
push
lods
jb
jl
push
call
je
xor
lods
imul
fistps
aam
pushl
inc
mov
xchg
insl
sub
mov
pushl
dec
mov
das
xor
sbb
push
mov
lahf
sub
pop
mov
dec
cmpsb
jge
mov
clc
seto
pop
out
mov
adc
add
cwtl
pop
xlat
fnstenv
mov
xor
push
hlt
cmp
subl
mov
adc
jg
dec
cmpl
jbe
sbb
or
mov
mov
call
pop
fists
out
mov
outsl
mov
xchg
jl
cmpsb
mov
xchg
jle
push
movsb
xor
insl
and
aad
call
data16
daa
pop
and
stc
into
hlt
cmp
mov
push
cmpsb
sti
dec
mov
xchg
ret
mov
ss
imul
stc
or
xor
or
bound
ljmp
push
lock
lock
lcall
lahf
xchg
addr16
cmpsb
pop
imul
jne
cmp
add
decl
or
in
cmp
inc
mov
push
cmpsl
add
inc
jge
in
lret
call
test
in
add
push
mov
shrb
fldt
jle
ret
sub
xor
or
jmp
cltd
pop
sub
jl
push
iret
call
lods
adc
cmp
xchg
jae
mov
imul
in
xor
fdivrp
incl
lds
mul
insl
test
outsl
daa
jg
iret
cltd
sub
bound
inc
mov
call
ret
sub
fadds
push
ret
es
dec
iret
aad
and
clc
cmpsb
cmp
icebp
out
pushl
test
xchg
cmp
xchg
bound
mov
and
mov
add
cmp
imul
in
pop
inc
mov
cmc
call
jge
cmp
jnp
mov
out
jmp
enter
cmp
jbe
push
ljmp
xchg
adc
pop
and
fnstcw
cmc
fcmovbe
mov
inc
push
mov
mov
mov
cmovbe
pop
cmp
iret
in
and
and
ljmp
jmp
xchg
addl
mov
mov
je
popa
addl
ljmp
inc
jbe
and
loope
test
jmp
nop
sbb
push
std
cmp
sub
int3
cli
mov
lcall
sub
cmc
push
ret
stos
rcrb
jmp
mov
orb
cmc
mov
add
aam
jns
in
rcll
adc
inc
mov
cmp
es
mov
lds
iret
sub
cwtl
ret
or
add
jmp
leave
xchg
addb
pop
mov
icebp
fs
xor
cmp
cmpsb
sbb
int3
jne
adc
cmp
ljmp
inc
sub
cmpb
adc
mov
jg
out
loope
aam
xor
pop
cmp
jmp
xchg
ret
jle
jne
jmp
rclb
add
sub
lds
push
add
push
pop
pop
sbb
incl
sub
orb
xchg
int
mov
inc
pusha
dec
sbb
lcall
clc
movsl
xchg
sbb
ljmp
xchg
xchg
ja
add
decl
je
std
cltd
test
fstp
pop
add
int3
lods
dec
jno
cmp
cmp
xor
out
flds
mov
sub
mov
jge
popf
iret
stos
mov
push
mov
cmp
mov
add
std
nop
in
sub
arpl
incl
lret
rcrl
daa
es
xor
mov
jmp
sbb
inc
out
mov
shlw
add
sub
stos
cmpsb
add
mov
add
int3
sbb
iret
scas
inc
ror
cmp
std
rcll
popf
and
mov
test
leave
nop
mov
mov
scas
cwtl
pusha
loope
jmp
flds
jl
pop
ret
mov
jbe
call
mov
dec
outsb
pop
add
stos
xchg
stc
daa
adc
push
xchg
sbbb
pop
push
aas
cmpb
adc
in
jae
rolb
jmp
mov
test
or
repnz
insb
cmpsl
xor
and
das
imul
adc
ljmp
out
fs
dec
sub
xor
add
inc
out
cmp
lret
or
add
pop
filds
fisttpll
ss
icebp
adc
add
rolb
pushl
fiaddl
jno
sbb
popf
xor
loop
dec
es
insl
sub
repnz
cmp
call
stos
les
cmp
insl
add
mov
sub
mov
testl
push
lret
jb
adc
jg
fstl
adc
dec
sbb
adc
mov
mov
popa
add
dec
jmp
cltd
push
mov
and
loop
fdiv
mov
nop
pop
jae
cmp
lcall
or
pop
push
pop
jp
push
imul
xchg
idiv
fistpl
in
pushf
mov
cmp
lock
std
lcall
push
ja
or
push
xchg
sar
jg
inc
aad
add
into
xor
sub
fistpl
push
dec
ret
jg
sbb
js
xchg
icebp
movl
fists
sub
test
or
lcall
js
dec
cmp
push
orb
jne
inc
stos
jmp
xchg
push
incl
sub
jne
arpl
fistpll
mov
cmp
mov
into
decl
ret
fstpt
mov
in
les
xor
or
add
popa
mov
loopne,pt
out
fsubrs
xor
cmp
int
xchg
repz
sbb
mov
jns
fsub
pop
mov
fcom
push
mov
sub
mov
mov
jecxz
fwait
lcall
iret
dec
cmp
cmp
and
fmull
sahf
rcr
mov
jmp
lahf
dec
shrl
outsl
fnstcw
lods
xchg
cmp
jge
push
stc
sub
inc
adc
dec
lcall
cmp
aam
sbbb
xchg
daa
roll
ret
add
mov
cwtl
mov
ljmp
clc
jl
lods
jns
enter
and
push
fdivrs
and
call
dec
pop
mov
xchg
jg
pop
dec
jo
out
dec
sbb
into
sbb
push
sbb
repnz
decl
mov
repz
cmp
xchg
mov
or
pop
sbb
xor
cld
sbbl
movsb
in
jecxz
repz
out
pop
aas
cli
fistps
pop
pushl
xchg
clc
sbb
lret
into
adc
adc
lcall
bound
mov
mov
int3
add
xor
ret
and
add
rorl
pop
xor
clc
and
push
outsl
cmp
lods
jle
pushf
adc
mov
jmp
pushl
sbb
jl
and
pop
pop
outsb
xlat
push
pmuludq
cmp
jge
push
inc
ret
add
jge
xor
ret
pop
ret
out
in
out
inc
rcrl
cltd
pop
inc
jns
xchg
add
xchg
out
cmp
repz
mov
lret
or
mov
mov
pusha
es
mov
mov
xchg
andb
mov
mov
leave
dec
lret
out
pushl
daa
pop
data16
mov
pop
cmpsl
iret
push
cmp
inc
add
jge
test
mov
mov
and
dec
cmp
mov
ss
dec
push
leave
jmp
pop
shr
jg
ret
jge
and
imul
scas
inc
fwait
lods
pop
jmp
jl
ljmp
dec
adc
inc
jns
rcr
inc
enter
mov
movsb
shll
xlat
fs
jg
or
push
int3
movsl
aaa
jb
addr16
movsl
mov
jle
push
dec
xor
push
or
push
in
jo
loope
jp
incl
aas
push
rclb
xchg
out
shl
gs
fucomi
ficompl
mov
jl
scas
inc
mov
fwait
enter
leave
sbb
add
jg
mov
notl
test
push
js
mov
xchg
clc
stos
pop
mov
mov
or
mov
dec
jg
daa
jno
sbb
adc
incl
push
fs
test
imul
mov
or
jle
pushl
out
cli
fcmovnbe
aaa
mov
pop
cltd
adc
sbb
sub
stos
dec
push
pop
inc
dec
imulb
sbb
arpl
sub
into
mov
inc
dec
sub
pop
and
add
adc
stos
push
fs
mov
jno
jle
jp
les
sbb
decb
imul
outsl
push
push
cmp
mov
das
pushf
icebp
jmp
mov
idiv
lcall
inc
inc
fwait
dec
pop
add
call
inc
mov
mov
adc
or
lds
xor
and
pop
add
adc
and
add
or
xor
xorl
adc
push
xor
push
push
or
sbb
push
lock
lcall
nop
push
mov
push
stc
jle
pop
ja
pushl
add
aaa
rorl
stc
sti
pop
and
xor
or
les
loope
shll
mov
incl
cmp
fneni(8087
ficompl
pusha
int3
inc
addl
dec
in
xchg
jmp
push
stc
push
push
out
xchg
insb
into
dec
cld
inc
sbb
gs
sub
xor
gs
inc
into
jmp
xlat
lret
stos
push
popa
xchg
nop
pop
pushf
movsl
sub
pop
mov
nop
add
jmp
add
adc
inc
inc
mov
loop
sub
inc
sub
jge
lcall
jmp
mov
jne
int
dec
xorl
push
sub
mov
jg
ds
cmp
daa
xor
adc
cmpsb
neg
insl
push
test
cmp
mov
xor
popf
int
mov
or
xlat
fisubrs
jno
jmp
inc
xlat
or
pop
xchg
dec
mov
xor
mov
mov
jmp
mov
lcall
cmc
sbb
loop
push
fs
lret
mov
addr16
push
cmpsl
dec
adc
lret
cmp
fsts
es
pop
cmp
call
jle
and
sbb
cltd
pop
lock
mov
adc
in
mov
mov
jle
callw
in
nop
xor
daa
pop
rcrl
sbb
loop
lret
inc
out
sub
push
xchg
xchg
test
mov
cmp
cmp
sub
call
xchg
cltd
aaa
es
adc
cmp
inc
frstor
incl
xorb
adc
jp
ja
into
outsl
cwtl
mov
icebp
inc
jnp
mov
decl
iret
jl
pop
push
call
xchg
pop
out
inc
dec
push
jle
in
shlb
loope
cmp
insb
pop
ja
fmuls
lcall
repz
pop
inc
mov
xchg
or
imul
xchg
mov
pop
mov
push
inc
rcl
jmp
int3
jno
mov
les
cli
das
stos
testl
adc
jg
imul
test
enter
xchg
std
or
fucomi
fdivr
push
gs
adc
xor
mov
ret
ljmp
stos
add
hlt
jne
cmpsb
pop
and
jo
jb
mov
jg
loopne
jbe
fwait
pop
dec
ss
nop
sub
rorb
ljmp
xor
int3
mov
cmp
outsl
loop
lahf
jnp
bound
and
jecxz
jl
in
das
test
add
mov
lcall
dec
inc
inc
addr16
ret
mov
push
xor
xlat
xchg
jb
add
jo
and
or
jmp
xor
sub
test
adc
adc
outsb
cmc
add
dec
test
out
adc
js
cmp
fldt
mov
sar
pop
cmpsb
outsb
popa
xorb
push
divl
js
cmp
incl
add
push
rdtsc
cmp
cmpsl
rcll
ds
call
repz
fsts
xchg
mov
or
int
or
jge
xor
ret
test
lods
incl
stos
not
adc
mov
mov
adc
outsb
xchg
sti
loop
aas
loope
daa
xorl
add
cmc
xchg
pusha
push
pop
imul
out
iret
bswap
cld
fcos
jmp
outsb
mov
scas
addr16
inc
push
mov
dec
push
mov
arpl
jne
sbb
in
ret
mov
ljmp
ljmp
clc
dec
cmc
lds
sahf
shrb
jle
cmp
pop
dec
cmovae
jl
aam
fdiv
call
test
bound
push
cmc
aas
pop
sti
sbb
aad
std
mov
sbb
imul
add
stos
out
test
ret
pop
push
jnp
mov
sbbb
ret
sub
popl
std
adc
lcall
pop
pop
int
gs
sub
pop
or
leave
inc
jns
das
enter
jle
mov
popf
jl
pop
lock
or
in
jecxz
ds
dec
mov
pop
enter
pop
pusha
mov
inc
pop
pop
loop
add
incl
xor
out
mov
jp
cwtl
mov
push
scas
inc
loope
adc
xchg
cmpsl
popa
loop
mov
jmp
mov
sub
jl
mov
cmp
mov
mov
cmp
push
pop
xor
cltd
mov
lcall
je
or
push
dec
jns
xor
xchg
stc
cmp
out
jecxz
dec
loopne
jecxz
pop
add
scas
iret
dec
outsl
dec
pop
inc
lret
inc
test
or
idivb
lcall
jmp
cld
in
cmc
cmpsb
aas
dec
aas
fisttps
cmp
xchg
mov
ja
jmp
mov
cmpsb
sti
aad
lcall
cmp
jle
in
cmp
decl
pop
ljmp
aaa
jns
inc
xchg
add
pop
outsb
nop
shll
jmp
xchg
xor
xchg
test
pop
mov
sub
jo
inc
es
jbe
mov
out
shll
pop
bound
fiaddl
sbb
sub
ror
aam
dec
push
iret
lea
in
mov
add
adc
xchg
add
sbb
inc
xlat
rcr
movsb
or
fildll
decl
dec
pop
sbb
fwait
cld
fs
dec
dec
pop
int
jmp
and
es
push
rcrl
pop
icebp
call
adc
repnz
test
imul
sub
xchg
test
cmpsl
outsl
xchg
mov
call
jbe
push
scas
push
xor
sub
dec
dec
adc
pop
lea
push
movsb
fldln2
ljmp
push
and
mov
ss
incl
arpl
dec
iret
fildll
jmp
filds
sub
adc
fists
lods
sbb
sub
xchg
add
lahf
xchg
lcall
outsb
dec
lcall
jmp
fs
sub
bound
adc
lock
jmp
insl
call
decl
push
and
dec
push
pop
test
ret
push
les
mov
xchg
call
ffreep
inc
sub
lret
adc
dec
cmpsl
xchg
xorl
pushl
xor
aas
dec
and
test
and
inc
adc
decl
jle
lock
lahf
add
fimuls
sbb
fstpt
pop
sub
stos
pop
negb
arpl
loop
lcall
pop
inc
jecxz
push
pop
add
cmp
ljmp
push
int
fdivrl
mov
pop
mov
or
arpl
mov
xor
mov
dec
xchg
cmp
dec
inc
mov
test
adc
xchg
dec
sti
lcall
adc
outsb
test
lret
adc
inc
stos
mov
push
cmpsb
pop
dec
loop
mov
xlat
add
pop
mov
repnz
cmp
call
lcall
jl
push
rolb
cmpsb
lock
enter
sbb
jmp
lret
cmc
ss
std
sub
es
inc
xor
inc
clc
sub
dec
ficoml
outsl
shlb
loope
jmp
adc
mov
loope
int
rcll
into
ret
mov
or
add
dec
mov
push
mov
push
inc
mov
push
mov
jl
sbb
xchg
mov
pop
in
cmp
adc
push
add
fldcw
stc
mov
push
pop
pop
jmp
cmp
ljmp
xchg
nop
cmp
test
xor
test
das
sar
lods
scas
sub
add
or
push
call
inc
fmulp
xor
push
ljmp
int3
jne
icebp
and
push
add
iret
jae
mov
cli
xor
repz
push
or
sub
out
sub
lcall
xchg
jmp
push
add
fucom
imul
addr16
jo
mov
mov
cld
decl
aaa
xchg
ss
cmc
fidivl
mov
enter
push
pushl
outsb
mov
leave
add
sub
xor
xorb
pusha
fcompl
in
or
loope
or
jmp
shll
xchg
jb
mov
orb
fbstp
jb
sbb
inc
sub
lea
decl
mov
pop
push
mov
dec
pop
xor
jbe
or
andb
pushl
mov
outsl
call
sbb
mov
adc
jne
jae
incb
call
ja
int3
insl
dec
cmpsl
nop
add
lcall
dec
jmp
push
adc
pushl
aaa
sub
sahf
ret
out
pop
test
sbb
mov
xchg
add
lret
jmp
sub
xlat
adc
mov
cmp
or
cli
jns
or
andl
lahf
xchg
jg
pushl
and
sbb
dec
or
mov
fdivrp
jg
sti
push
rol
fcomps
fsubrl
cmp
xchg
mov
movsb
jg
cmp
mov
push
imul
jno
push
stos
mulb
mov
ja
fdivrl
pop
inc
xlat
push
in
mov
sub
mov
adc
and
ljmp
mov
ret
flds
dec
popf
inc
inc
sub
jle
push
jno
pop
movsb
pushl
push
xor
mov
fldt
sbb
and
out
fmull
sbb
pop
arpl
pop
call
in
outsb
xor
push
push
mov
xor
mov
cmp
and
sbb
pop
and
dec
jg
cmp
rcrb
xor
inc
scas
and
stc
aam
std
jp
jl
sarb
dec
lret
lret
mov
jbe
das
push
pop
aaa
icebp
inc
or
jne
jg
push
aas
and
dec
inc
xchg
xchg
into
add
dec
cmc
cli
mov
inc
mov
inc
push
xchg
insl
and
ljmp
insb
xchg
repnz
fsts
btc
jo
push
xchg
jg
decb
les
outsb
or
pop
push
decl
rclb
jg
push
mov
xchg
jae
hlt
sbb
hlt
inc
test
inc
or
in
jnp
xchg
push
pusha
inc
sbb
sbb
repz
setl
cmp
test
popl
movb
lea
loop
xor
cmp
mov
ss
sub
inc
and
divb
mov
int3
pushf
testl
popf
mov
xor
cli
jmp
xchg
push
pop
mov
adc
dec
mov
movsb
lock
push
push
inc
mov
mov
das
and
sub
cs
xorb
test
shlb
decl
daa
js
out
xor
jg
and
pop
pop
outsl
or
xchg
mov
pop
pop
lock
inc
pop
jl
sub
xchg
loope
cmpsl
add
xor
dec
push
or
imul
outsl
mov
jmp
adcb
cmpsb
ret
xchg
cmp
push
inc
cmpsl
mov
in
and
jb
jne
jp
push
mov
pop
mov
test
xchg
mov
inc
cmc
xor
xchg
or
fmulp
mull
cmp
orb
leave
addb
pop
jmp
cld
popa
ret
movsl
ret
push
repz
incl
adc
dec
jmp
mov
push
xor
jno
addr16
sbb
incl
and
xlat
sbb
xor
mov
popf
xlat
fneni(8087
jb
cmp
ret
ret
incl
cmp
mov
pop
pop
test
inc
es
out
daa
cmp
mov
or
rorb
arpl
shl
push
incl
arpl
xor
lds
cmp
hlt
stos
mov
icebp
pushl
cmp
fnsave
jbe
mov
daa
pop
imul
decl
std
pop
decl
add
cmp
and
in
inc
mov
and
in
push
push
incl
xchg
pop
push
xor
daa
push
pop
or
orl
mov
jg
dec
push
gs
pop
pushf
or
mov
pcmpeqb
movsb
dec
mov
imul
push
test
xor
aam
cs
in
fistpll
xchg
and
cli
icebp
sahf
out
out
sbb
outsl
sti
repnz
jb
imul
cltd
sti
dec
adc
data16
push
aam
mov
jge
dec
hlt
jmp
mov
mov
xor
cmp
outsb
inc
mov
scas
out
xor
int
fdivl
arpl
sbb
inc
fbld
ds
imulb
repnz
sti
stos
fs
adc
incl
subb
ret
or
push
cmp
loop
pop
out
xor
xchg
test
push
gs
ljmp
ffree
aas
adc
into
xchg
mov
push
mov
push
out
inc
ss
mov
out
decl
cmc
mov
adc
es
sbb
mov
xor
xor
stc
daa
aad
mov
mov
sbb
gs
mov
mov
jnp
jmp
testl
pop
xor
clc
xchg
js
xchg
jge
and
pop
mov
jecxz
jecxz
cmp
decl
cmpsb
imul
popa
sbb
lret
rclb
lret
push
jg
mov
pop
arpl
fcom
jmp
cld
or
sbb
fdivr
arpl
call
fstps
daa
add
jbe
rcr
jmp
ljmp
xor
or
xchg
xlat
sub
jmp
xchg
sbb
ret
cmp
or
cmp
shlb
lea
pop
std
mov
mov
and
cld
sbb
cmp
ficoms
jle
mov
mov
push
xor
arpl
sti
cmpsl
pop
scas
cli
decl
push
and
sub
cmp
mov
pop
cmp
into
jb
int3
inc
inc
mov
mov
ljmp
clc
fldenv
dec
add
push
mov
adc
out
loope
add
in
add
es
pusha
xor
movsl
push
inc
jg
lods
call
stos
sbb
hlt
sub
push
and
cs
inc
jb
push
and
repz
jmp
push
pusha
mov
push
and
insb
xchg
jmp
rcll
scas
mov
push
mov
fistpll
push
cmp
movsb
sbb
xchg
outsl
roll
std
mov
and
and
repnz
daa
sub
lods
pushf
cmpsl
add
mov
jge
push
push
pop
in
sahf
sbb
lea
xchg
lock
outsl
jmp
cmp
orb
ret
incl
xchg
int3
fcom
fs
mov
push
pmulhw
sar
xchg
inc
xchg
mov
test
dec
adc
mov
rorb
iret
xchg
scas
mov
call
ljmp
loope
sarb
push
inc
imul
or
sub
es
pop
sub
movsb
mov
cs
fcoml
jbe
mov
mov
test
int3
inc
leave
sbbb
push
adc
sub
stc
lcall
mov
data16
sub
lock
or
repz
pushl
imul
fisubrs
jmp
jle
inc
gs
outsb
imul
loopne
xchg
inc
fsubs
lods
jl
dec
cmp
push
fidivrs
pop
out
push
xchg
xchg
dec
mov
in
jecxz
jmp
pop
adc
popa
jae
add
aas
repz
adc
cmp
mov
icebp
call
mov
adc
xor
int3
popa
push
inc
dec
push
jg
and
pop
bound
sub
or
sub
mov
xchg
ss
loop
arpl
jg
lcall
lds
cmp
jbe
adc
loopne
daa
hlt
push
es
repnz
ljmp
cli
outsl
and
mov
mov
enter
sub
xor
cmp
xchg
cmp
dec
sub
punpckldq
stc
test
ja
insl
cld
inc
aas
or
mov
pop
ljmp
inc
push
push
cltd
out
flds
clc
cltd
and
fwait
daa
in
jecxz
incl
pusha
pop
or
nop
cmp
scas
enter
aas
pop
clc
ljmp
or
pop
xchg
adc
in
pop
dec
lahf
dec
outsl
incl
outsl
negl
xchg
xchg
orl
gs
cmp
cmp
daa
and
rcrb
pop
mov
mov
jmp
sbb
pop
ds
add
push
aad
es
xchg
pushf
unpckhps
add
jg
test
push
pop
sub
leave
sbb
or
adc
xchg
lcall
sbb
test
mov
movsl
add
in
sbb
loopne
dec
int
sub
out
cmp
jge
fstl
inc
xor
pushf
add
sub
mov
mov
outsb
cmp
dec
movsl
pop
test
aas
jns
cs
or
mov
loopne
fiadds
push
and
fdivs
fcomip
aaa
jle
lock
push
fisttpl
scas
ror
lret
adc
filds
mov
jmp
cmpsl
bswap
jge
mov
and
shll
lds
cmc
xor
dec
and
adc
dec
in
outsb
sti
into
inc
dec
and
outsl
xor
xor
outsb
lea
xchg
fwait
lods
pop
icebp
aam
dec
mov
call
cmpsb
outsb
fs
dec
xor
dec
les
fisttpl
xor
sbb
or
jmp
xchg
push
mov
pop
adc
int
data16
push
xor
jmp
xchg
ds
add
insl
add
clc
mov
movsl
lcall
ljmp
adc
daa
shlb
mov
mov
loop
xor
cmp
div
imul
adc
sub
xor
or
test
push
das
hlt
cmp
lock
pop
cmpsb
mov
orb
scas
pop
out
std
or
hlt
inc
or
sbb
iret
test
lahf
pop
mov
push
lea
loopne
dec
fildll
push
inc
mov
lds
dec
mov
faddp
ljmp
stc
fstp
aaa
xorb
data16
adc
daa
fisttpl
daa
out
pop
mov
fmul
data16
inc
add
ljmp
push
push
mov
int
push
int
fcomp
pop
lcall
sbb
test
std
and
daa
cmp
stos
and
push
inc
xor
in
or
in
xchg
scas
bound
call
jno
mov
fcoms
js,pt
nop
xor
sub
cmp
icebp
ljmp
nop
xchg
test
clc
das
cli
out
fbstp
mov
insb
pop
push
cmovge
aaa
rcrl
xor
incl
inc
clc
pop
jno
and
pop
adc
xlat
mov
sahf
jns
mov
aas
dec
cmp
inc
jo
lcall
xor
mov
insb
push
pop
popa
xchg
xchg
dec
lods
jns
icebp
adc
add
mov
inc
adc
lcall
and
popf
inc
cli
sbb
push
fs
sbb
movsl
xchg
xchg
and
fstps
incl
jo
repnz
ret
sbbb
push
or
cmpsb
lds
and
ljmp
and
ljmp
or
mov
pop
or
icebp
call
cltd
mov
pop
xorb
fdivrl
ret
xor
in
stos
push
adc
cmpsb
sahf
imul
xchg
aaa
sti
pop
jmp
inc
fidivs
pushf
dec
mov
popf
loopne
adc
imul
lea
push
push
inc
ret
out
pushl
cmc
shlb
jmp
lea
test
inc
pop
dec
push
mov
loope
call
xchg
imulb
jnp
outsl
cmpsb
cli
dec
jb
lret
movsb
imul
mov
sbb
popf
ret
dec
insb
and
insl
mov
mov
jg
pop
loopne
jmp
jge
jns
shrb
xchg
enter
push
cli
fldl
outsl
ljmp
mov
adc
adc
out
sbb
mov
cmp
xor
push
sar
pushl
xor
loope
call
aad
aaa
pop
xchg
icebp
mov
arpl
mov
test
cltd
mov
js
aaa
insl
inc
and
insl
cmp
scas
or
decl
int3
out
int
mov
jo
sbbl
cmp
dec
or
flds
and
cmpsl
mov
inc
cmp
fisubl
adc
addr16
decl
dec
sub
aaa
pop
fstpt
rcrb
pop
push
nop
jb
sbb
mov
cs
mov
xchg
lods
sub
decl
mov
jmp
push
mov
cld
jne
jge
rol
js
xchg
add
push
push
and
add
xchg
rcr
loope
mov
popa
xchg
fs
daa
enter
cltd
ljmp
pop
repnz
leave
adc
and
inc
mov
push
inc
sbb
add
adc
loop
ljmp
mov
adc
lods
dec
and
mov
ret
stos
loopne
cmp
xlat
jecxz
xlat
pop
cmp
inc
mov
ret
out
aam
mov
jg
data16
push
mov
jecxz
in
fcomp
push
sub
icebp
lock
insl
pop
or
and
jno
ljmp
dec
jp
mov
xchg
popf
mov
jg
push
push
mov
jmp
incl
mov
insl
pop
lea
push
cmp
push
test
or
fildl
xchg
je
add
pop
push
pusha
lahf
pop
loop
cmp
jmp
insl
lds
stc
push
popa
loopne
adc
test
pop
xchg
push
mov
aam
mov
mov
cli
in
jmp
push
inc
popf
inc
push
and
lcall
pushl
js
pop
fsts
or
push
iret
rcll
out
mov
or
sub
cmp
inc
test
sbb
xchg
push
sub
rorb
mov
xchg
xchg
aam
or
xchg
cmpsl
add
mov
jbe
fs
cmc
cmp
cmp
sti
inc
inc
pop
jge
ret
scas
imul
pop
or
pop
ds
aas
inc
imul
ss
shll
dec
mov
fdivr
shld
fndisi(8087
adcb
inc
daa
cmpsb
push
xchg
in
adc
lret
xchg
or
std
test
sub
dec
in
sbb
ret
sti
xor
add
or
fldpi
call
jns
push
pop
jle
or
xchg
cmp
pop
pop
stos
cwtl
cmpl
int
and
lcall
lds
jp
add
aam
xorl
test
bound
push
jb
mov
aas
les
aam
mov
and
lcall
jns
sbbl
sbb
shlb
push
xchg
pushf
mov
mov
test
jge
jl
ja
dec
mov
mov
icebp
std
xchg
decl
jg
pop
jnp
or
mov
mov
cmp
mov
nop
mov
or
mov
in
rcrb
jmp
out
lcall
fsubp
mov
mov
scas
add
jmp
adc
sbb
xor
clc
movsb
inc
and
inc
loopne
popa
mov
ds
or
jbe
mov
xchg
lods
into
adc
insb
jp
cld
mov
mov
sbbl
insl
sahf
sahf
les
pop
sub
pop
ffreep
jns
popf
cmp
sub
jge
lods
scas
add
cltd
insl
out
rcr
push
jle
fildll
mov
in
pop
in
call
pop
sbb
add
xor
cmp
adc
mov
pushl
mov
shlb
or
test
xor
mov
cmpsl
aaa
push
in
int3
inc
pushf
jnp
fsts
jno
into
and
cmpsl
lea
stc
add
inc
ret
pop
pop
imul
pushl
dec
mov
cli
jp
jae
cmp
add
cmc
push
fst
pop
adc
jmp
lds
mov
jle
fcmovnu
mov
or
pop
jo
out
ja
lea
or
sti
das
call
popa
stos
sarb
jae
mov
xchg
add
cmp
pushf
insb
out
adc
inc
jns
and
cli
mov
aad
add
sub
repz
adc
push
push
sub
insb
stos
fdivrl
pusha
shrb
fwait
mov
outsl
or
addr16
gs
incl
popf
push
cwtl
xor
jge
pushf
ja
test
ret
jmp
pop
into
fcom
call
sub
inc
sbb
pushf
loope
jmp
sbb
dec
mov
mov
mov
jge
jle
stc
cmp
aad
cwtl
mov
mov
or
stc
sar
mov
sar
jmp
pop
mulb
pop
mov
xor
cmp
xchg
xchg
fcomps
pushl
xchg
repnz
out
out
imul
insl
cmpb
incl
es
pushf
sbb
sbb
or
xchg
dec
dec
cld
mov
mov
fcomip
push
loope
add
dec
push
ret
lea
hlt
add
out
mov
cltd
pop
sar
out
adc
xchg
das
pusha
jno
insl
daa
jle
int
inc
rorl
call
add
dec
sahf
mov
fxch
push
stc
lret
sti
or
iret
out
scas
sub
lcall
outsb
cs
push
mov
xlat
adc
inc
lods
fs
adc
imul
push
sbb
jmp
xchg
cmp
sti
fimull
sbb
xchg
xchg
jmp
mov
cmp
push
decl
and
jg
insl
bound
in
out
stos
add
call
mov
stos
xor
and
loope
lods
push
test
jnp
mov
lods
shlb
incl
sub
sahf
and
mov
les
sub
cmpsb
and
push
mov
sbb
fs
call
sbb
inc
pop
movsb
xchg
inc
lods
dec
jnp
mov
adc
sbbl
loop
in
bound
or
test
dec
fisubrs
ss
dec
cltd
fists
xchg
mov
nop
ljmp
clc
call
ret
jns
jmp
in
xchg
jb
sbb
push
repnz
gs
dec
xchg
sub
scas
cmpsb
add
inc
lahf
or
jbe
inc
dec
cmp
cmp
jge
dec
xchg
out
xor
mov
pop
cmp
push
mov
popa
in
cs
jmp
dec
cmpsb
loope
je
in
mov
mov
sub
cmp
movsb
pop
sahf
fwait
decb
insb
cs
pop
fcompl
lret
inc
loop
insb
xlat
and
dec
jb
dec
xchg
imul
cli
cmp
mov
lcall
pop
dec
mov
pushl
loopne
das
pop
icebp
adc
lods
repnz
lods
cltd
xchg
dec
hlt
incl
pushf
lea
mov
fwait
out
outsb
ficompl
xor
mov
mov
decl
loop
leave
iret
mov
ret
push
jo
cs
jns
dec
insl
inc
xlat
push
mov
jae
ret
das
fldcw
mov
push
dec
cli
push
fwait
lock
inc
xchg
push
pushl
or
mov
push
aam
arpl
sbb
mov
cmp
inc
stos
and
incl
pop
mov
jge
mov
pop
sarl
jmp
sti
test
cmp
mov
daa
hlt
pop
xor
mov
dec
aad
ljmp
and
lea
addl
jmp
mov
mov
jg
sbb
lret
outsb
dec
pop
mov
mov
les
decl
dec
sub
xorb
sbb
decl
pop
mov
in
sub
gs
stos
push
jno
aas
xorl
cmp
cli
into
add
decl
jo
jge
imul
inc
dec
mov
aad
data16
jg
aaa
pop
and
xor
sbb
xchg
sbb
jnp
mov
insl
test
iret
sar
jmp
pushf
cmp
stos
mov
mov
mov
sbb
inc
int
mov
pushl
popa
pop
and
dec
outsb
in
icebp
mov
pop
cmp
xchg
xlat
icebp
das
lret
or
out
and
pushl
mov
add
mov
in
in
lcall
mov
and
outsb
ret
cmp
lds
nop
dec
out
pop
nop
enter
adc
daa
lods
insl
out
or
ljmp
mov
lret
arpl
jb
xlat
push
cmp
je
mov
jecxz
cmc
xchg
out
decl
push
mov
insb
xchg
negl
mov
and
mov
xlat
int3
add
lods
scas
ja
loope
jbe
and
icebp
sub
and
sbb
sti
add
or
ljmp
adc
fstpl
pop
testb
inc
mov
sbb
pushl
sub
sub
inc
loop
add
adc
push
cmc
jbe
adc
loop
ljmp
mov
sub
lret
push
lcall
cltd
fs
lods
mov
mov
pushl
sbb
add
xchg
mov
adc
into
dec
loop
mov
test
jmp
lock
sbb
lods
xchg
hlt
stc
dec
push
enter
cmc
decl
enter
inc
cmpsb
xchg
in
pop
adc
pop
push
stos
lret
jg
mov
mov
fildll
fcoms
xlat
insl
aam
mov
insl
into
loop
xor
sub
cltd
or
and
mov
mov
pop
in
mov
insb
pusha
pop
jge
lock
test
das
cmp
push
imul
lods
xchg
jno
dec
sti
cmp
daa
cmp
dec
jae
inc
jmp
push
call
stc
or
adc
jmp
fcmove
insb
ss
js
xchg
stc
adc
pop
je
sub
ret
pop
stc
int
ljmp
sub
dec
lods
lahf
dec
movsb
inc
ror
shlb
xor
pop
js
jle
mov
xchg
cmpsb
ss
test
fmull
lds
movsl
dec
dec
ljmp
xor
shlb
das
sbb
mov
adcl
xlat
incl
stos
sub
mov
arpl
push
adc
pusha
fldt
lock
std
xor
inc
sbb
lret
cmp
out
mov
lcall
ljmp
cltd
xor
push
mov
outsl
xchg
fcomps
lcall
test
xorl
lret
movsl
outsl
cli
out
adc
fmuls
sbb
jmp
cwtl
pop
or
aaa
dec
cld
sbb
int
incl
cld
ljmp
cmpsb
arpl
inc
out
iret
pop
pusha
add
scas
testl
ljmp
rcrl
in
cld
xchg
sarl
sub
addr16
stos
int3
sub
in
mov
lcall
inc
incb
add
test
mov
rolb
push
sbb
jg
pushl
push
or
fistpll
notb
xor
push
clc
aam
sbb
icebp
pop
enter
orb
loopne
jg
jmp
sbb
test
int3
mov
pop
inc
push
jp
lahf
push
pop
mov
incl
sbb
xor
outsl
xchg
loop
scas
and
and
call
inc
jecxz
outsl
fbld
cmp
xchg
mov
dec
pop
loopne
decl
test
or
icebp
mov
js
pop
dec
call
cmp
jns
mov
xor
bndldx
xchg
pop
lock
divl
mov
sub
sbb
adc
ret
pop
jo
fildll
sarb
incl
lea
lahf
inc
sbb
je
mov
into
cmovs
fists
ljmp
std
call
decl
jl
addr16
jo
sbb
ljmp
push
es
inc
emms
cld
fistps
add
stos
sub
popf
aad
xlat
hlt
sub
sbb
enter
lcall
testl
adc
icebp
out
les
mov
xor
scas
fidivrl
lcall
mov
fnsave
xor
cmp
dec
sub
das
and
dec
pop
mov
xchg
sub
push
ret
leave
cmpsl
push
cs
jnp
into
mov
stos
push
sahf
in
call
cltd
mov
std
mov
lods
pop
popa
cmc
mov
das
jmp
and
fwait
imul
out
pop
mov
mov
jp
int3
inc
fimull
and
fldpi
add
sbb
fnstenv
and
fcoms
lcall
out
pop
nop
push
add
jno
mov
loopne
jne
and
xchg
idiv
ljmp
mov
cmp
idivl
sbb
jns
js
pushl
xchg
into
call
mov
xor
add
mov
xchg
xchg
mov
test
fs
sbb
mov
add
cmp
call
cld
insb
ljmp
incb
mov
xor
add
add
ljmp
sbb
stc
out
add
inc
loop
pop
pop
or
mov
fwait
call
ja
aam
inc
dec
nop
or
cmp
jmp
add
gs
mov
dec
cmpsl
jge
and
popf
dec
cmp
xlat
or
fdiv
sti
rcll
enter
sarl
inc
cwtl
dec
testl
in
mov
lock
es
stos
fiadds
repnz
popa
dec
cmc
mov
clc
incl
outsl
jp
mov
pop
pop
cmp
sub
ljmp
cmpsb
jae
and
in
es
jb
mov
jns
and
inc
mov
sub
mov
cmp
adc
mov
das
add
push
pushf
sahf
mov
sub
lcall
and
in
in
push
or
inc
sub
stos
sahf
sub
mov
incl
sub
jbe
cmovo
mov
xor
jno
arpl
incl
loop
add
push
cmpsb
cmp
jb
mov
jmp
mov
xor
sar
dec
xor
or
or
xchg
incb
je
mov
lods
push
mov
filds
pushl
gs
sahf
lods
push
scas
push
jns
in
pop
stos
outsb
mov
incl
aam
movsb
mov
addr16
push
popf
int3
pusha
or
jecxz
fcomi
cltd
mov
inc
aad
dec
aad
fimuls
adc
out
cmp
aad
and
jl
jae
mov
mov
fsubrl
leave
xor
sbb
cli
pop
lods
pop
inc
adc
out
jmp
sub
jae
adc
mov
push
cmp
xor
or
jmp
mov
das
lret
mov
jmp
repz
xchg
mov
ret
push
jmp
fsts
call
jmp
pop
rol
test
call
add
or
ds
jge
imul
inc
mov
bound
nop
mov
or
nop
lea
jns
movl
enter
stos
jne
pop
lahf
xor
mov
mov
lcall
add
xorl
or
aam
or
sti
into
int
mov
out
or
dec
es
adc
decl
add
cld
mov
pop
addr16
sbb
cmp
insb
popl
mov
call
lcall
add
fstl
add
adc
jne
or
pop
loopne
mov
mov
mov
xor
cld
fldl
push
and
mov
push
mov
push
xor
leave
and
sub
rcrl
cltd
ljmp
xchg
pop
in
push
xchg
pop
insb
mov
nop
cmp
push
ss
sbb
dec
jecxz
jg
lahf
adc
xchg
out
pop
jp
je
inc
sar
ret
adcl
jmp
push
sti
out
aam
mov
xor
cmp
xor
adc
inc
mov
iret
pushl
daa
out
inc
out
mov
push
das
fcomip
cmc
loope
mov
out
mov
jmp
repz
inc
out
pop
pop
add
xchg
adc
loop
pushl
cld
repnz
jne
aad
pop
insl
and
ret
das
outsb
xchg
out
cmp
gs
lcall
xchg
leave
jb
in
shrb
aaa
arpl
mov
in
mov
decl
sub
add
out
stc
in
jl
jl
shlb
stos
rol
xor
pop
movsb
into
pushf
cmp
in
std
mov
icebp
ror
iret
sti
je
sub
pop
cmpsl
decl
lahf
lods
std
xchg
adc
xchg
push
or
pop
jle
pop
daa
movsl
lea
mov
out
sar
ljmp
sarb
and
jno
xchg
dec
adc
jmp
push
jnp
ljmp
lods
insl
loop
lret
inc
and
std
and
add
pop
aas
repnz
std
jge
sub
popf
sbb
out
lock
inc
jmp
mov
sub
push
or
les
xchg
and
pshufw
test
mov
mov
inc
pop
cmp
test
xchg
ret
scas
jl
and
cmpsb
jmp
in
fisubl
xor
cltd
in
mov
and
mov
lahf
mov
mov
ljmp
inc
pop
push
and
add
mov
outsl
lret
out
xchg
or
jg
aad
dec
add
ljmp
xchg
ljmp
sbbb
adcb
jb
shlb
dec
adc
cmp
pop
jne
add
cmp
pop
jnp
lahf
sbb
call
mov
data16
jp
push
aaa
lret
sub
or
pop
sahf
lock
lcall
mov
in
xor
loopne
int
pop
jg
xchg
mov
aaa
cmp
xor
lcall
enter
outsl
lcall
mov
bound
js
cmpsl
mov
leave
cmp
outsl
push
mov
inc
xchg
fldl2e
cmp
pusha
daa
test
jecxz
xlat
add
mov
sbb
pop
insb
dec
sub
add
sbb
movsb
cwtl
movsl
mov
ficomps
ror
sahf
jle
roll
inc
out
data16
int
cmp
pushf
adc
test
scas
dec
shl
ljmp
mov
and
xor
adc
aad
pop
or
push
pop
repz
filds
push
xchg
int3
aam
dec
fmuls
cmpb
inc
mov
ja
in
ljmp
mov
xchg
dec
adc
es
orl
test
lea
out
rclb
and
incl
inc
adc
sbb
jge
inc
or
mov
xor
xchg
adc
jmp
iret
dec
scas
movsb
xchg
loope
or
jnp
ss
jp
bound
xchg
ss
or
mov
orb
icebp
loopne
test
dec
popa
mov
scas
out
cmp
decl
sub
dec
sub
mov
sbb
mov
mov
negl
mov
push
aaa
movsb
add
xor
adc
out
mov
addr16
mov
lcall
cmp
pop
add
jb
cmpsb
insl
rcr
or
pop
lock
mov
adc
sbb
inc
fsubrl
xchg
cmp
call
je
cmp
mov
push
jne
mov
mov
cmp
cmp
inc
xchg
push
popf
jmp
mov
mov
inc
dec
add
cmp
and
lcall
scas
cwtl
and
call
or
lret
loop
xor
push
sub
je
inc
push
mov
mov
add
jmp
mov
jo
and
pop
jl
cmp
ret
cld
jg
rorl
sbb
push
out
adcb
dec
mov
psrad
mov
rcl
dec
stc
mov
mov
fidivrl
int3
adc
out
test
cmp
test
sub
shlb
jae
aaa
cld
call
mov
or
xchg
aaa
addr16
aam
or
sub
and
sub
jg
cmp
js
jmp
xchg
mov
notl
pop
jl
lods
cmpsl
cmp
clc
jle
mov
pusha
fwait
inc
and
mov
inc
jbe
cli
aad
dec
jp
cmp
inc
bound
mov
mov
pusha
hlt
mov
pop
aad
jnp
mov
cmp
jg
decl
loope
rcll
pop
fdivrl
or
mov
fisubs
call
cwtl
fcoms
sbb
and
ljmp
cld
pusha
ss
sahf
cmp
adc
mov
mov
push
fs
or
loopne
jnp
cmp
pop
vmulsd
in
es
stc
insl
rcl
sbb
jnp
mov
dec
mov
xchg
testb
push
or
dec
addl
inc
test
or
or
jno
mov
mov
adc
loopne
js
fdivr
jo
lock
push
add
aam
push
ds
je
ss
in
aaa
std
mov
pop
aaa
setl
jmp
cmp
pop
mov
jmp
addr16
cmp
sahf
dec
addr16
adc
outsb
adc
in
ficoms
pop
and
ljmp
sbb
pop
fld
push
pop
gs
xchg
jo
cmp
std
push
inc
repz
insb
or
dec
adc
mov
mov
push
movsb
out
xchg
lock
addr16
into
jne
rcrw
push
cmp
inc
andl
cs
jecxz
adc
mov
std
mov
or
sti
cmpsl
mov
cmpl
and
mov
mov
cmp
outsl
dec
out
imul
mov
fcomip
pushl
in
sarl
cmpsl
das
cmpsb
or
inc
xor
cwtl
out
adc
adc
mov
push
push
adc
andl
mov
ds
ret
aad
mov
movsl
mov
rorb
test
mov
pop
lahf
pop
or
ljmp
adc
cmpsb
push
jnp
out
cmp
and
mov
jmp
mov
incb
jo
fwait
andb
dec
in
mov
dec
outsl
cmpsb
nop
out
cli
xorb
jbe
inc
xor
ja
std
aaa
fisubs
ret
imul
cli
pushl
xor
repnz
mov
int3
cmpb
lret
mov
call
fldt
jns
in
cmp
repz
sub
nop
fistl
andl
mov
repnz
push
out
lahf
mov
gs
cwtl
scas
js
shr
push
cmp
push
dec
movsl
pop
mov
jmp
sbb
push
sbb
mov
jle
add
push
xchg
ret
mov
lds
std
test
sbb
repz
sub
add
sbb
push
cli
mov
ljmp
xor
sub
mov
lods
scas
xchg
into
lea
xlat
add
pop
cmp
data16
outsb
insb
cwtl
cmpsl
shrb
loope
pop
out
in
ljmp
clc
loop
dec
pushf
push
cmc
push
fsubrl
mov
cmp
push
gs
lds
dec
mov
imul
cmp
or
lea
mov
test
ja
add
enter
fsubrl
insl
fldcw
mov
imul
loope
and
xchg
stos
test
imul
dec
nop
hlt
repnz
mov
std
pop
lock
push
outsl
scas
mov
inc
lock
or
decl
aaa
aas
repz
and
ds
lret
and
and
rolb
data16
leave
add
mov
push
test
dec
dec
adcb
les
dec
mov
incl
mov
xlat
mov
test
pop
mov
pop
dec
or
fbld
adc
pop
sub
cmp
incl
mov
xor
push
inc
idivb
mov
sub
jne
cmp
pushl
fwait
jge
shll
mov
push
mov
inc
xchg
cmc
add
arpl
push
mov
sbb
cmc
data16
pop
in
mov
sbb
push
and
pop
cmc
rol
arpl
inc
jnp
xchg
int3
xchg
xor
ja
dec
testb
dec
sbb
loope,pn
incl
pop
lods
stc
ss
lcall
dec
scas
cli
sub
in
sub
aaa
mov
call
mov
mov
dec
shrl
xor
push
and
movl
sub
js
mov
fsub
pop
out
inc
sub
je
jg
decl
out
mov
icebp
mov
jno
push
and
in
cmp
xchg
in
mov
jne
xchg
mov
sahf
inc
in
mov
test
inc
jg
scas
imul
push
mov
and
jg
jnp
ja
inc
fmulp
add
push
incl
cmpsb
pop
pop
je
adc
jmp
das
les
cwtl
je
movsb
inc
sbb
mov
push
repnz
push
or
out
lret
mov
aaa
cwtl
jg
jmp
test
pop
mov
lock
imul
stos
shlb
jl
call
inc
xor
lea
repz
fidivrs
cmp
lahf
lcall
mov
jmp
fisttpl
sub
mov
sbb
mov
mov
cmp
pop
mov
sahf
push
fsubl
or
lret
inc
lcall
or
or
call
inc
cmc
imul
pusha
xchg
adc
daa
dec
push
xor
addr16
push
flds
daa
pop
lock
fcoms
jnp
inc
mov
inc
in
cmp
and
jl
adcl
test
cmp
movsl
or
mov
mov
xchg
movsb
and
push
mov
xchg
lock
fwait
or
adcb
incl
outsl
sbb
mov
stc
cmp
jl
mov
daa
push
or
adc
pop
out
fsubrl
mov
inc
cmpsl
enter
and
cmp
rorb
ret
pusha
pop
or
inc
and
mov
loopne
jp
les
shll
adc
or
dec
push
xor
js
mov
mov
dec
cwtl
inc
sub
mov
pop
add
xchg
mov
test
cmp
cmpsl
mov
xor
in
aam
dec
test
scas
setge
cmp
cld
ljmp
mov
leave
inc
mov
movsb
adc
aas
xchg
sbb
mov
decl
test
aaa
mov
lea
repz
cmp
icebp
add
add
mov
andb
jmp
push
mov
xchg
das
add
lods
and
out
pushf
xchg
loop
decl
insl
out
add
mov
clc
mov
insb
sub
add
jge
in
sub
jg
incl
in
fidivrs
xor
imul
sbb
clc
xchg
mov
push
mov
mov
pusha
xchg
xchg
ret
add
push
cmp
jbe
cs
lcall
lcall
sub
sbb
jno
cli
dec
frstor
mov
dec
cwtl
cli
popf
jb
inc
lods
jge
jg
decl
fidivrl
repz
xchg
loope
jmp
adc
push
test
incl
and
addr16
jmp
fildll
insb
mov
lcall
add
or
mov
xchg
outsb
cmp
xchg
add
cltd
iret
cld
and
inc
in
loopne
jg
mov
cli
test
sub
int3
popf
popa
jecxz
cmp
lahf
ss
dec
push
pop
iret
xchg
cmp
push
stos
sbb
or
sbb
sbb
add
mov
arpl
sub
xchg
push
sarl
mov
push
cmpsb
add
and
stos
cld
hlt
xchg
xor
sub
mov
pop
jecxz
call
sarl
cmc
scas
insl
or
mov
push
lahf
jo
sbb
ja
mov
incl
jns
sub
pop
int3
adc
inc
or
ja
and
sbb
push
in
sub
loop
ljmp
xchg
push
sbb
in
sub
out
test
cmp
pop
xor
sbb
dec
mov
push
xor
mov
cs
xchg
cwtl
xlat
fisubrs
mov
je
in
dec
jmp
xchg
xchg
ss
xor
push
adc
je
sbb
lock
xchg
dec
incl
out
rcr
into
xchg
ja
mov
imul
cmpb
pushf
inc
jl
and
cmp
jmp
xchg
mov
dec
mov
adc
sub
stc
lcall
movsb
xchg
xchg
test
addr16
out
dec
dec
pop
mov
scas
cli
decl
jbe
fwait
add
pop
pop
rol
repnz
je
sub
out
inc
jno
jmp
ret
or
inc
es
push
fists
jno
xor
sub
sub
stc
cld
pushl
xchg
add
std
flds
out
pop
adc
mov
iret
int3
sub
fistl
outsb
sar
ljmp
mov
inc
nop
push
scas
repnz
loopne
in
lahf
mov
jae
fwait
data16
cmp
sar
or
insl
mov
lods
inc
arpl
fs
jle
mov
and
xchg
jmp
add
xor
call
mov
nop
or
inc
bound
jbe
xchg
mov
jno
ljmp
roll
cmpsl
push
mov
and
jae
inc
add
test
arpl
cmp
das
pushl
sahf
jno
pop
fdiv
sbb
sub
xor
add
mov
jb
push
inc
std
arpl
sti
insb
mov
ret
lds
inc
mov
ret
int
mov
jmp
outsb
int
leave
dec
bound
sub
or
mov
loope
push
stc
fbld
jmp
mov
dec
iret
dec
cmp
inc
jge
cs
inc
jo
xchg
sbb
mov
inc
add
test
cld
pop
leave
mov
repz
out
loop
incl
call
addr16
cld
mov
mov
inc
insl
or
adc
je
int
jmp
ljmp
pop
mov
ds
inc
lods
cmp
or
outsb
xor
sub
or
cmpsb
lds
xor
rclb
pop
xlat
int3
jno
xchg
mov
shlb
adc
jmp
fnstsw
lods
fmuls
cmpsb
push
dec
push
out
and
push
incl
inc
jp
cld
xor
adc
xchg
rclb
popa
lcall
lea
sbb
mov
jmp
push
insb
test
das
out
xchg
push
sub
mov
repnz
pop
outsl
ss
decl
or
bound
mov
jno
movsl
or
jecxz
in
and
pop
cmpsb
push
adc
std
push
fnstenv
xchg
pop
xlat
or
mov
inc
jae
or
sbb
fcomip
loope
nop
add
jmp
push
loopne
fwait
test
and
das
mov
and
cmpl
pushl
lret
xor
mov
push
sub
pushf
imul
pop
clc
cmpsb
jmp
fsub
push
jnp
clc
add
dec
into
cmp
cmp
push
sbb
cmpl
daa
or
ljmp
lahf
pop
repnz
mov
inc
jnp
and
test
daa
leave
pop
dec
scas
ljmp
ljmp
aaa
dec
and
xchg
push
test
cli
jl
jbe
or
push
jmp
mov
les
mov
adc
sahf
xor
imul
mov
jno
jne
sbb
add
inc
add
lock
pusha
push
sbb
cmpsl
in
cmpsb
cmp
inc
ficoms
fildll
lret
insl
fcom
outsl
jle
rorl
out
jl
jno
cmp
push
fcos
decl
test
mov
cmp
rorb
pop
xchg
xor
shrl
sbb
outsl
rcll
push
ficomps
mov
call
testb
daa
movsl
xorb
jb
out
xchg
adc
pushf
dec
push
cmp
pop
pop
popf
pushl
xchg
lods
inc
mov
and
inc
jbe
call
xchg
icebp
or
icebp
jmp
dec
popf
arpl
mov
and
fisttpl
inc
arpl
lods
scas
sbb
jae
lcall
inc
and
mov
mov
aas
sahf
mov
in
sar
cwtl
lahf
pop
popf
jl
jg
lea
pop
aas
aas
mov
arpl
inc
push
add
dec
and
sub
sub
push
in
add
inc
outsb
jle
xor
push
movsb
jg
lock
pop
aas
lret
fadd
jmp
dec
xchg
ds
or
es
lcall
and
pop
pushf
mov
aas
mov
clc
int3
adc
jmp
mov
adc
xchg
in
loopne
cmc
push
push
ss
icebp
das
clc
call
mov
jbe
jge
or
jae
or
ljmp
aam
pop
outsb
mov
cltd
mov
shr
imull
call
mov
es
cmp
in
jl
vmovntdq
or
jecxz
cs
test
cmp
movsl
fstpl
addb
test
out
xchg
fiadds
xchg
imul
ljmp
add
movsb
adc
dec
and
cmp
andb
push
outsb
inc
xchg
lahf
push
es
in
push
cmp
inc
loopne
je
add
mov
fsubrl
and
xchg
ljmp
jbe
dec
int3
mov
fnstenv
out
mov
and
mov
shlb
ljmp
jno
fsubrs
or
jle
ljmp
mov
add
push
mov
cmp
scas
dec
loopne
outsb
imul
stc
mov
call
push
dec
and
mov
scas
in
pop
inc
mov
divb
fdivr
pushl
les
xchg
xor
icebp
fs
and
add
pusha
inc
mulb
jg
add
lret
ficompl
out
andb
xor
jg
out
pusha
cmp
jg
fdivr
sub
pop
and
mov
jg
pushl
and
pop
out
insb
leave
sub
xlat
sub
aas
lret
out
or
rcl
and
aad
xor
xchg
or
hlt
decl
mov
push
push
into
xchg
push
pop
pop
adc
sub
mov
call
mov
ljmp
add
cmpsb
sub
stos
lret
pop
mov
mov
xchg
pushl
dec
sbb
clc
xorb
add
leave
mov
outsb
jge
lret
xor
incl
lods
sub
xor
nop
push
add
xchg
pop
pusha
cli
popf
cmp
pop
add
ja
jge
cmc
push
cmpsl
cmp
inc
fdiv
and
incl
dec
imul
inc
sbb
push
mov
xchg
mov
ret
shl
cmp
clc
call
jae
out
pop
xor
pop
push
lea
mov
nop
and
gs
cld
ljmp
add
lds
mov
es
call
cs
lods
adc
mov
or
aas
sbb
shrb
insb
pushf
xor
push
cmp
ljmp
aaa
shrl
dec
jmp
sti
dec
mov
jmp
sbbb
testb
jg
mov
dec
pop
adc
cltd
cmp
and
xchg
adc
pop
repnz
decl
cmp
jle
outsb
in
data16
fisubrs
and
mov
and
ss
sti
push
addr16
mov
adc
movsb
mov
xor
push
jge
andl
add
ljmp
stc
or
aaa
pop
cwtl
pop
cltd
mov
repnz
jle
sub
fiaddl
pop
mov
jmp
cmc
sbb
out
roll
lcall
or
call
std
mov
mov
pop
popf
xor
mov
fs
outsb
scas
test
jmp
insl
das
das
xchg
xchg
add
test
xor
ret
mov
add
ljmp
cmp
cli
enter
lods
out
sub
sub
ljmp
push
and
mov
mov
cmpsb
push
test
fldenv
movsb
jb
test
stc
adc
icebp
lcall
cmp
popa
jg
insl
cmp
xorl
jne
repz
fildll
mov
rcll
fisttps
bound
int
sub
dec
rcrl
push
inc
jp
movsb
mov
xchg
adc
test
lods
push
adc
cli
incl
pop
shr
inc
pop
mov
test
mov
dec
adc
inc
add
std
jmp
jmp
popf
lods
lret
add
data16
push
inc
dec
inc
stos
jge
xor
pushl
adc
mov
adc
cwtl
js
mov
ds
xchg
shr
dec
push
jle
jmp
push
push
notb
das
out
xor
out
gs
outsl
clc
and
push
les
push
aad
mov
inc
fnstcw
je
mov
cmpsb
nop
sbb
and
cld
mov
pop
mov
jbe
xchg
lock
out
test
xor
icebp
pop
adc
push
pushl
dec
jecxz
dec
cltd
cld
sub
cmp
push
mov
and
sub
mov
dec
lcall
sub
shrb
test
mov
mov
xchg
mov
ljmp
jge
aad
sbb
push
pop
pop
pop
test
add
mov
or
jmp
jl
xor
outsl
or
xchg
and
mul
daa
push
sbb
jnp
inc
movsb
scas
jmp
xor
out
nop
sbb
nop
popa
lahf
rolb
sbb
orb
jg
push
je
sar
and
rcll
iret
lcall
jo
mov
rclb
fldt
dec
rorl
mov
hlt
hlt
mov
cld
stos
or
jno
push
push
je
mov
scas
scas
pop
sbb
dec
dec
movsb
test
cmp
push
mov
sub
add
les
negb
aaa
inc
out
pop
std
push
jecxz
push
jmp
xor
mov
mov
mov
fcmovne
adc
cs
mov
adc
inc
insl
add
xchg
shrb
pop
mov
jmp
dec
add
repnz
and
xlat
jmp
adc
dec
test
inc
add
mov
inc
dec
sbb
jmp
inc
xchg
frstor
pushf
fimuls
js
sub
inc
cmp
sti
in
or
and
stos
pusha
out
aam
movsbl
jmp
lds
loope
cmpsl
lds
and
jne
or
mov
or
nop
and
cmp
inc
push
xchg
lea
lcall
cmpsb
sub
jl
int3
nop
sbb
repnz
out
xor
jl
nop
aas
pop
fldt
rorb
rcr
enter
jecxz
sbb
pusha
imul
jmp
insl
sbb
aas
shlb
lods
scas
fisubs
cli
jnp
int3
leave
inc
lds
inc
aaa
pop
scas
call
xchg
pop
sub
fs
loope
mov
lcall
call
jg
inc
cmp
arpl
sarl
adc
test
or
jmp
ss
lcall
xchg
lods
cltd
or
int
arpl
dec
mov
pop
mov
mov
xor
sbb
aad
mov
cmp
mov
icebp
out
and
orl
jg
xor
sbbb
aaa
decl
outsl
push
inc
loopne
mov
std
pop
arpl
lret
adc
dec
sbb
lock
jmp
cmp
inc
test
cmpl
cmpsl
imul
ja
ljmp
ss
push
adc
and
jae
inc
xor
rorb
add
or
inc
loop
clc
jmp
add
incl
into
sbb
in
inc
cli
mov
test
es
and
decl
xchg
icebp
rcll
ret
in
jbe
faddl
mov
jge
int
fiadds
fnsave
sti
pusha
dec
mov
dec
jae
or
push
in
dec
jg
xchg
jl
mulb
outsb
jp
mov
call
jmp
mov
vpcmpeqb
shrl
mov
imul
and
in
arpl
ljmp
and
mov
sbb
out
xlat
inc
sbb
jmp
jle
lods
add
test
sbb
add
sar
push
sarb
jne
idivl
pusha
inc
sub
in
sti
adc
push
ljmp
or
in
jb
repz
rorb
out
test
ret
jno
shl
cmp
xor
ljmp
adc
and
lcall
dec
xorl
pop
pushf
fwait
mov
push
andl
mov
pop
inc
push
adc
xor
lcall
mov
ret
mov
std
out
xor
push
dec
push
add
push
inc
add
pushl
lret
adc
sub
fadds
sbb
xchg
sbb
push
or
xchg
push
push
jo
jp
js
jae
mov
sub
outsl
push
ja
call
loopne
daa
pop
std
es
movsb
insl
dec
sbb
int3
lcall
mov
es
dec
std
arpl
xor
cld
pop
fcoms
mov
cld
push
jmp
cld
incl
pop
gs
int
or
mov
out
sub
or
incl
imul
mov
jbe
loope
ja
pop
cmp
incl
lods
dec
xor
lds
push
sbb
jg
mov
out
cli
or
and
mov
mov
mov
repnz
rorb
lods
xchg
into
mov
adc
popl
push
jg
movsl
add
sub
scas
mov
in
xor
mov
jne
fdivs
jl
int
mov
xor
adc
xor
std
pop
nop
or
add
dec
inc
or
pop
test
mov
mov
or
mov
call
mov
cmpsl
cmp
js
pop
mov
jbe
add
mov
lods
jno
push
subl
pop
clc
and
call
das
or
jle
jnp
cwtl
sbb
push
aaa
sub
aaa
xchg
push
jbe
imul
ljmp
gs
and
imul
fistpl
cld
inc
call
mov
jmp
adc
ljmp
mov
xchg
pop
scas
std
or
and
into
into
mov
mov
jp
test
loop
decl
xchg
mov
nop
gs
clc
dec
rcl
jne
jp
add
iret
mov
shl
mov
fimuls
mov
stos
int
jge
lds
sub
pop
adc
gs
stos
adc
jge
orps
out
push
sbb
jg
xor
fsubl
in
addr16
add
push
call
dec
repnz
xchg
subb
pop
adc
lret
loopne
xor
fidivl
or
pushl
hlt
or
jne
push
loope
adc
push
cmp
loopne
cmpsb
mov
lcall
mov
mov
bound
fiadds
xchg
push
xchg
lret
daa
test
les
idivb
incl
adc
call
outsl
jnp
mov
pop
shll
fwait
xchg
fbld
incl
pop
jbe
mov
lahf
xchg
pop
enter
rcrl
sbb
mov
mov
mov
cmp
outsb
pushf
insb
mov
int
xor
and
test
jp
cmp
ljmp
mov
movsl
mov
retw
mov
leave
in
xor
mov
fs
jge
aam
mov
addr16
into
xchg
mov
lock
xchg
add
fst
mov
push
fistpll
outsl
sahf
mov
mov
incl
mul
mov
sbb
sub
and
enter
mov
mull
incb
ljmp
sysenter
enter
pop
mov
test
inc
daa
mov
jp
jle
pusha
into
jb
jecxz
xor
xor
out
ficompl
icebp
icebp
popa
imull
and
icebp
das
in
sub
add
test
cmp
sbbb
push
loopne
inc
pop
fs
xchg
mov
pop
mov
push
bound
fidivs
aad
cli
sbb
sbb
lret
stos
lcall
rcrb
sbb
xlat
les
aad
adc
adcb
cld
inc
sbb
sub
cmp
rcr
sbb
lcall
fidivrl
jl
dec
outsb
cltd
in
dec
popf
cmp
fsubs
mov
add
jg
push
and
test
int
and
addr16
add
incl
pop
imul
inc
test
fisubrl
sbb
out
movsb
fdiv
mov
push
mov
aas
fs
cmp
mov
inc
jae
clc
pop
jl
inc
mov
mov
lcall
ja
and
sti
outsb
ret
lahf
jg
ret
sub
lds
mov
push
mov
shll
jl
je
lret
jo
push
push
into
mov
aaa
data16
scas
cltd
inc
jp
jnp
adc
push
call
fsubrs
adc
adc
inc
push
jmp
push
or
mov
jno
lods
add
jp
mov
sti
lret
jb
lret
jmp
lock
es
dec
shl
icebp
scas
pushf
imul
dec
fisubl
test
loopne
lcall
xchg
mov
fstl
xchg
fmulp
bound
xor
sti
movl
popl
fs
add
and
push
pop
push
sub
mov
jle
aad
out
push
pop
dec
ja
sbb
outsb
add
dec
inc
and
xlat
mov
lcall
stc
cltd
jb
imul
jg
cmp
fists
loop
in
test
dec
inc
ret
sbb
push
jmp
cmpsb
out
mov
in
dec
pop
jge
mov
sbb
cmp
fidivl
mov
xor
pushl
clc
rorb
stos
addr16
icebp
cmp
inc
sahf
pop
sub
lock
lcall
sbb
shl
cmpsb
jmp
iret
fidivl
ljmp
cmp
call
das
imul
cmp
or
roll
pop
clc
inc
jae
push
popa
pop
or
aas
mov
and
xor
arpl
jae
xchg
loope
decl
fs
iret
adc
lret
and
rol
cmp
sbb
cmc
inc
aam
push
enter
and
adc
lea
dec
call
dec
ret
mov
scas
push
xchg
push
cli
fisubrs
orb
jecxz
popf
adc
in
mov
incl
fiadds
pop
nop
dec
xchg
rolb
mov
loope
mov
stos
adc
in
mov
jmpw
lods
inc
add
dec
mov
pushl
mov
dec
lock
cmp
out
js
add
sbb
ljmp
mov
push
rclb
int3
dec
inc
mov
dec
test
mov
pushf
ret
xchg
lods
dec
xor
incl
mov
fmull
sub
addr16
dec
ffreep
xchg
or
clc
mov
lds
aaa
cmp
xor
aam
or
mov
pop
rorb
ljmp
insl
sub
jno
aas
dec
cmc
jae
fnsave
sub
hlt
and
outsl
cli
incl
aas
adc
inc
out
inc
dec
pop
cmpsl
or
jecxz
xor
push
movsb
mov
test
sub
arpl
int3
jne
ss
mov
lods
adcl
pop
std
push
push
pushl
pop
ljmp
and
pop
mov
loop
xchg
ret
fld
mov
test
insb
shll
lock
pushl
lds
xor
jmp
repnz
aam
int
daa
ja
jns
and
std
ucomiss
ljmp
push
mov
cld
jecxz
icebp
and
and
fnstsw
scas
pop
cmp
out
aas
jo
ss
stos
push
mov
shll
out
dec
jo
xchg
pop
mov
sub
inc
repz
loopne
or
std
inc
lds
mov
add
leave
or
lcall
ljmp
mov
ret
mov
shlb
pop
xchg
icebp
mov
fists
ret
adc
fsubrl
call
push
mov
xchg
jbe
daa
insb
push
mov
jo
pop
fbstp
sarl
inc
sbb
sbb
pushl
jno
inc
imul
cmpsl
push
or
and
lock
and
fstpl
mov
in
cmp
movsl
daa
jmp
cwtl
pushf
jo
jo
mov
cld
xor
add
push
into
out
pop
push
mov
je
hlt
ljmp
jmp
es
ljmp
or
sar
mov
and
dec
mov
insl
adc
sub
fdivrs
mov
dec
push
xchg
lahf
pop
call
adc
jns
lcall
and
pop
push
xchg
std
pushl
call
mov
xchg
inc
dec
mov
adc
sti
adc
pop
inc
bnd
push
setle
push
insb
or
dec
push
sarl
in
lahf
subl
das
es
push
fmul
cmc
insl
inc
cmp
lret
lods
inc
push
int3
fiaddl
ds
repz
and
incb
xchg
xor
fs
ljmp
cli
daa
test
push
jge
adc
mov
jmp
pop
cmp
int
dec
jae
fwait
js
sbb
mov
out
jecxz
incl
jmp
mov
sub
sahf
pop
xchg
lcall
xchg
repnz
jp
pusha
dec
sub
push
jmp
out
imul
das
adc
jecxz
jle
jmp
scas
mov
data16
mov
xorb
lods
xchg
jbe
lret
test
mov
sbb
fldcw
hlt
cli
incl
unpcklps
in
pop
xchg
push
orl
inc
test
dec
fadds
add
ljmp
out
pop
lock
imul
mov
dec
mov
dec
stc
inc
hlt
out
jg
inc
sahf
xlat
into
xlat
sti
push
jnp
push
repz
ret
fiadds
fxch
sbb
pop
clc
sub
int
nop
fsubl
scas
cwtl
cmp
rorl
lock
inc
addr16
loopne
push
push
xor
pop
sub
rcll
sahf
dec
loopne
cmp
jge,pt
stc
popf
dec
inc
mov
jbe
push
icebp
les
push
lret
test
pop
push
test
add
inc
adc
mov
nop
mov
pop
cmc
es
lcall
ds
and
mov
push
add
pop
xlat
movsb
jl
mov
pop
sbb
mov
xorl
add
sub
pop
mov
xchg
inc
lcall
dec
jnp
pop
xchg
and
negl
mov
mov
xor
mov
push
or
and
aaa
stc
cmp
and
jne
insb
movl
jecxz
icebp
pop
addr16
jmp
dec
xorb
cmp
jecxz
cmp
movsl
shrl
mov
sarb
push
push
out
ja
das
clc
sbb
clc
pop
sti
xchg
aam
and
cmpsb
sahf
sbb
call
or
pop
in
rcl
cmc
gs
fistl
mov
jne
mov
add
ljmp
clc
cmp
jno
pop
jb
and
fsubr
dec
add
xchg
pop
sbb
scas
cli
call
aaa
setae
pop
fnsave
pusha
pop
sbb
mov
enter
movsl
out
dec
xchg
inc
ja
dec
pusha
cmp
incl
sub
mov
ficoml
ds
inc
dec
pop
xor
stos
call
push
mov
inc
test
adc
decl
push
pop
sub
sub
cwtl
mov
ds
adc
decb
in
push
lods
rolb
pop
decb
fistpll
sbb
add
ja
andl
stc
mov
mov
sub
mov
fdivr
pushf
lods
pop
mov
subl
out
addl
cmp
or
call
std
xlat
pop
lret
adc
cmp
xchg
in
add
jae
inc
xlat
iret
adc
clc
out
ss
adc
xchg
sarb
movsb
or
js
xor
jo
ljmp
mov
lahf
xchg
cmp
in
add
ret
inc
in
inc
jbe
outsb
shlb
pushl
sbb
pushf
repz
sub
pop
and
std
fdivp
jbe
xchg
out
sub
call
addl
mov
rcl
dec
and
mov
mov
pop
int3
cmp
jge
push
ss
lods
mov
stos
xor
pop
outsl
iret
mov
mov
pushl
inc
xchg
add
pop
shll
push
cmp
outsl
xlat
cmpsl
cld
mov
dec
xchg
pusha
daa
dec
or
pop
xor
and
mov
ret
leave
mul
popa
rcll
js
mov
fs
test
ljmp
inc
jae
xchg
ljmp
inc
sub
cwtl
popf
adc
push
sbb
stos
stc
lcall
jle
push
xchg
sub
test
cmp
xor
xchg
mov
mov
decl
stos
or
outsb
push
mov
cmp
arpl
insb
cmpsb
dec
out
push
hlt
shrb
mov
or
jno
lock
enter
aad
cli
mov
call
loopne
sbb
inc
mov
fmuls
loope
mov
mov
push
hlt
and
bound
aas
xchg
mov
jp
test
mulb
fldl
jno
mov
push
cmc
cmp
in
jg
jmp
cli
imul
mov
sbb
cmp
scas
jo
pop
cmp
cmp
lods
xor
das
jo
ret
mov
mov
shl
imul
mov
mov
mov
jp
scas
addb
sbb
xchg
pop
imulb
push
imul
mov
adc
mov
xchg
adc
lret
cmp
mov
dec
jmp
lock
xchg
jb
lods
into
shrl
es
popf
fimull
jne
std
jo
jecxz
cmpsb
rclb
stc
push
hlt
fistpl
lods
paddsw
pop
aaa
insl
test
sbb
jb
rcl
mov
decl
js
push
sub
sub
or
xchg
mov
sub
jle
ljmp
outsl
je
pop
faddl
push
mov
outsb
int3
dec
enter
cs
inc
decb
call
mov
ret
roll
push
mov
cmp
ljmp
jle
stc
lret
xchg
mov
jg
dec
mov
jae
inc
ljmp
repnz
cld
fcomip
cmp
or
loop
outsb
clc
pop
or
push
rcrl
decl
pushl
jle
sahf
cmp
pop
stos
or
pop
cmp
outsl
xchg
mov
shl
or
stc
jg
lcall
rclb
sbb
movsl
in
movsl
pop
and
mov
adc
or
ljmp
dec
imul
mov
inc
sub
sub
pop
cld
popa
es
push
or
dec
decl
movsl
sbb
cs
daa
scas
mov
scas
add
mov
popa
out
xchg
mov
movsb
jecxz
add
rcrb
jl
cld
inc
or
mov
jp
jg
out
aam
ja
sarl
cmp
pop
mov
push
aas
xor
iret
rcll
mov
arpl
lds
push
push
pop
sbb
decl
dec
inc
sub
xchg
xchg
or
outsb
push
inc
mov
mov
cwtl
fmul
dec
xor
scas
mov
movsb
mov
stc
movsb
jp
or
jge
jg
xorb
int
push
mov
popa
or
andl
sar
cltd
ljmp
add
adc
repz
mov
dec
sub
adcl
mov
cmp
icebp
cltd
cmc
fs
notb
push
es
nop
fdivrl
outsl
cs
jle
jle
inc
ja
pop
shrb
sbb
ljmp
loope
enter
xchg
xor
mov
leave
sbb
idiv
std
lahf
lds
sbb
leave
addr16
inc
push
inc
daa
sbb
xorl
push
mov
adc
cmp
orl
xlat
loopne
loopne
jmp
sbb
decl
mov
gs
push
xchg
js
mov
xor
xchg
dec
pop
loopne
pusha
xor
ret
les
cmpsb
es
cli
add
pop
call
aam
notb
or
adc
xchg
jns
inc
mov
call
sub
sub
adc
mov
into
loope
aas
ds
cld
cmp
test
out
adc
in
push
mov
and
into
stos
lods
mov
aaa
add
dec
stc
xchg
add
sub
lcall
add
sub
mov
sub
nop
loopne
push
cli
lcall
mov
push
adc
mov
jp
inc
mov
cs
data16
sbb
lods
jg
jp
mov
add
bound
hlt
dec
or
das
cli
push
sbb
inc
scas
jg
sub
cld
jmp
pop
adc
andb
add
aaa
leave
jmp
inc
pop
jmp
mov
or
mov
dec
jo
sti
leave
dec
push
cwtl
repnz
sbb
es
push
cmp
pop
pop
jae
das
fcoms
test
dec
push
jae
test
mov
jp
jge
pop
lcall
arpl
ja
cltd
mov
sbb
inc
xor
jo
addr16
pushl
or
fsub
nop
jns
add
mov
and
push
xlat
in
mov
outsb
inc
jge
cmpl
add
pushl
cld
push
popf
icebp
fsubrs
inc
cs
incb
push
mov
sbb
cmp
outsl
push
bound
incl
sbb
das
lret
test
mov
adc
mov
push
lret
stc
adc
mov
cmpb
scas
fsts
mov
cmp
xchg
call
jmp
out
jmp
fucom
test
nop
or
sar
jp
add
arpl
jns
cmc
call
jecxz
mov
mov
dec
jle
adc
pusha
xchg
or
jg
es
fcomip
mov
in
enter
pop
adc
mov
in
pop
mov
stos
jmp
pop
daa
jl
sub
pop
xor
jns
bound
int3
mov
sub
mov
imul
cmpb
popf
scas
lea
fcmovb
idiv
incl
adc
jl
cmp
xchg
call
sub
mov
mov
out
ljmp
jne
mov
sbbb
rorl
lds
flds
push
add
inc
or
incl
dec
push
cmp
clc
jl
into
or
shlb
lock
add
jg
lcall
dec
pop
pop
outsl
or
mov
sub
ljmp
aaa
xor
inc
out
out
or
out
jecxz
jnp
insb
or
incl
pop
aad
idivl
mov
imul
and
decb
lds
jg
stos
jne
incl
push
mov
jp
je
sbb
negl
jnp
into
in
pushl
jnp
jl
lock
sbb
inc
mov
loopne
mov
cmpsl
xor
sub
insl
lods
das
sub
fdivr
inc
call
cmp
scas
mov
push
mov
adcb
xor
cld
and
xchg
mov
lahf
popa
sub
lcall
pop
js
sbbb
xchg
popa
into
sahf
add
jg
int
decl
into
adc
sahf
add
jne
adcb
jge
loop
cmp
push
add
lds
adc
add
mov
lock
jo
sbb
je
enter
xor
popf
fsubs
adc
int3
pusha
shrb
fcomip
ljmp
fdivl
repz
subb
stc
sub
mov
mov
mov
cld
icebp
inc
cs
and
lahf
nop
xor
or
iret
cmp
orb
mov
aas
mov
fsubrl
mov
cmpsl
jo
sti
sarl
lods
sbb
sbb
decl
lock
adc
add
fimuls
mov
fwait
ds
or
decl
cld
add
pop
and
add
sub
pop
imul
push
lcall
jmp
lods
cli
mov
sti
pop
int3
aaa
add
cmp
xchg
fstp
sbb
push
dec
in
frstor
in
adcb
push
jp
imul
and
stos
rorl
cmc
outsb
xchg
fcos
lcall
dec
insb
aam
dec
leave
sbb
adc
outsl
add
pusha
daa
cmp
insl
sahf
ljmp
push
out
and
scas
add
mov
sub
xor
loope
cmp
addr16
mov
mov
cld
push
movsl
call
fadd
std
dec
sahf
inc
pushl
fadd
insl
out
cli
cmp
stc
dec
roll
daa
in
xor
addr16
sbbb
ret
xchg
incl
mov
ret
icebp
xor
iret
and
xlat
jecxz
xchg
in
repnz
and
sti
aad
ja
repnz
mov
shlb
lea
push
jmp
popf
addr16
inc
mov
mov
sarl
cmp
push
jge
and
push
dec
inc
mov
hlt
and
dec
inc
or
xchg
sbb
xchg
inc
cli
adc
mov
incl
repz
outsl
lcall
cltd
dec
addr16
aam
dec
aaa
into
mov
decl
aas
xchg
call
clc
xor
sub
je
adc
repz
xchg
sbb
cld
sbb
out
int
out
lock
xchg
stc
add
push
std
incl
xchg
pop
pop
xchg
popf
out
jl
xor
gs
push
ljmp
cli
insl
in
jg
pop
out
lods
lods
fildll
sub
int
loopne
dec
movsl
add
mov
xor
ret
call
sub
push
sbb
adc
push
jne
xchg
lret
mov
mov
dec
cmpsl
xor
add
outsb
jmp
fnsave
push
push
js
out
pusha
xchg
fst
sbb
outsb
std
or
inc
mov
jg
into
cmpsl
xchg
and
jl
rcrb
jno
loope
mov
push
mov
mulb
rorb
jbe
xchg
rclb
out
loope
decl
inc
cmp
cld
outsl
iret
inc
adc
add
pop
ss
add
mov
ret
ss
call
xor
push
jns
std
stos
jne
xchg
ljmp
clc
mov
push
sbb
test
cli
xchg
cwtl
or
loopne
lds
mov
xor
imul
mov
mov
fbstp
or
jg
out
pop
jg
push
cld
mov
jl
xor
ja
lcall
jmp
sbb
mov
loopne
or
fs
dec
les
call
test
mov
sbb
cwtl
add
cwtl
xchg
ficomps
arpl
in
xchg
cmp
stos
loope
out
mov
sbbl
or
std
xchg
push
xchg
loope
lods
sbb
xchg
enter
push
or
sub
pop
pop
scas
push
and
jg
mov
push
mov
push
cli
mov
xchg
jg
adc
hlt
decl
lock
cmp
scas
jo
movsl
imul
fisttpll
or
lret
loop
mov
call
xchg
xchg
mov
xor
movsb
cwtl
ljmp
arpl
mov
push
in
inc
mov
lods
xchg
aam
sbb
adc
cli
decl
ret
sub
popa
mov
cltd
repnz
and
lea
les
xor
imul
lea
shll
jg
mov
sbb
mov
mov
jg
mov
cmpsb
decl
mov
rcrl
or
dec
jno
test
lcall
dec
dec
xchg
shll
dec
call
cld
adc
sub
add
roll
mov
aas
in
jg
es
sub
test
jmp
call
cmp
gs
mov
loopne
push
fisttpl
scas
dec
ljmp
jg
xchg
or
call
or
scas
popa
mov
je
jle
jmp
in
insl
mov
jnp
fisttpll
push
jge
mov
add
jae
xchg
jle
daa
dec
call
pop
ljmp
sub
add
lods
int3
xor
nop
lcall
dec
sub
pop
cltd
fldenv
movsl
mov
jae
jp
jb
or
aaa
jp
dec
mov
dec
mov
ljmp
clc
jns
into
dec
test
rcl
mov
ficoml
fisubs
sbb
jnp
decl
pop
jo
adc
sti
dec
cmp
inc
pop
jmp
hlt
into
jmp
jecxz
xchg
repz
fmull
xchg
in
jb
push
and
fwait
pop
push
pushf
loope
dec
arpl
lcall
add
add
out
cli
jnp
cmp
leave
int3
rcll
pminub
jge
call
jp
add
inc
jnp
push
repnz
adcl
mov
pop
fs
inc
call
mov
jnp
in
jb
add
mov
jbe
jae
mov
jmp
outsb
insl
les
sub
xchg
lds
pop
sbb
xchg
sti
shlb
sar
ljmp
sub
push
sbb
aaa
scas
and
fstl
xchg
outsl
cli
mov
xchg
dec
adc
adc
add
fs
outsb
aaa
out
cmp
xor
call
adc
lea
subl
imul
out
cmp
push
popa
xor
pop
loop
and
pop
out
push
lret
mov
filds
jle
decl
pop
or
and
aaa
movsb
shlb
shl
push
inc
push
lret
cmpsl
sbb
jle
hlt
enter
loop
enter
xchg
aad
mov
lea
or
xor
jb
push
in
stos
or
pop
adc
es
mov
mov
inc
mov
inc
jmp
sbb
and
xor
sahf
call
inc
jo
mov
call
shl
aad
testl
push
sbb
inc
call
xor
jno
mov
aas
xor
or
mov
or
and
pop
cmpsl
adc
jmp
mov
mov
pop
jl
lds
movsl
xchg
lock
sub
div
push
pop
stos
ljmp
sar
je
adc
enter
adc
pop
aad
loope
jmp
lds
or
jno
pop
jno
hlt
xchg
decl
pushf
inc
aaa
jne
out
nop
pop
pop
push
jne
jne
and
lahf
xchg
dec
movsb
mov
fsubl
lcall
ljmp
movsl
inc
or
test
sbb
sahf
push
jmp
adc
adc
loop
decl
xchg
xor
mov
out
adc
in
in
mov
xlat
pop
addr16
fildll
mov
dec
jp
mov
data16
mov
in
jne
lcall
stc
mov
cld
clc
cwtl
int3
add
pop
sbbl
mov
inc
mov
loope
cmp
call
rol
dec
pop
fisubrl
xor
pop
int3
subb
fbld
enter
or
xlat
xchg
int3
call
add
loopne
pusha
mov
cmpsb
aas
pusha
in
dec
xchg
push
and
mov
mov
stc
add
shr
cmpsb
inc
cmpsb
adc
decl
or
sub
or
or
mov
imul
and
jnp
pushl
cwtl
rol
out
xor
xchg
loop
enter
std
dec
adc
adc
add
fldpi
decl
sarb
insb
sub
out
orb
rorb
push
ss
push
mov
js
jnp
mov
jg
decl
xchg
test
pop
addr16
sbb
pushl
aam
xorb
adc
inc
jmp
add
push
xor
and
mov
mov
add
cmp
clc
shll
enter
mov
cmp
add
mov
cmpl
push
fs
and
jo
adc
mov
in
mov
das
lahf
add
sbb
popf
pop
aad
std
sub
call
mov
aaa
sub
std
icebp
adc
mov
jecxz
xor
jg
decl
mov
es
pusha
fdivrs
jle
add
add
fistpl
outsb
mov
pop
push
cld
je
push
sarb
in
push
testb
jg
stc
stos
xchg
out
or
pop
sbb
je
and
lcall
xchg
add
pop
inc
mov
and
lcall
pop
sub
loopne
mov
out
hlt
inc
je
adc
dec
cmovo
cmp
imul
jb
aam
shlb
shlb
hlt
insb
ljmp
clc
and
mov
ljmp
fldcw
cmpsb
mov
insb
and
dec
add
jmp
aam
adc
mov
loop
in
xor
jg
adc
sbb
sahf
pushf
iret
dec
insl
in
inc
rolb
mov
fs
sar
call
add
addr16
sub
and
push
iret
lods
shll
push
ret
push
xchg
jae
jb
aas
push
pop
sti
pop
arpl
ljmp
push
jo
rcrb
fbstp
adc
lods
xchg
or
jbe
into
mov
jmp
fwait
stos
cwtl
sbb
ret
xchg
dec
xchg
lock
or
stc
das
inc
mov
sar
std
jecxz
arpl
lcall
add
mov
scas
cmp
pop
and
pop
aam
outsb
rolb
cli
ljmp
or
clc
fcoml
dec
mov
or
add
xor
mov
jl
das
decl
lock
jbe
aaa
test
mov
or
orb
call
or
xor
cwtl
in
adc
inc
jo
insb
aaa
ljmp
jbe
mov
cmp
pop
test
cmp
dec
mov
push
add
incl
xchg
mov
xor
mov
repnz
sbb
xchg
cmp
add
aam
xchg
fs
mov
mov
icebp
decl
sahf
lods
cli
faddl
xchg
sahf
or
mov
lcall
sbb
dec
popa
xchg
lds
add
jbe
or
xlat
pop
lock
fisttps
loopne
inc
mov
aad
mov
push
lods
nop
test
jg
sub
addr16
insb
mov
sbb
adc
inc
mov
enter
pushl
push
mul
loop
push
mov
xor
addr16
adc
stc
fcomps
cmp
inc
mov
jbe
cmpsl
out
sub
test
pushl
and
inc
fidivs
test
inc
push
push
dec
lea
pop
lret
xchg
loopne
std
incl
cmp
cld
pop
add
adc
sbb
ljmp
mov
cs
pop
lret
negb
push
insl
sub
mov
rol
push
mov
aad
ret
imul
lahf
cmpb
xor
testb
push
push
mov
call
lea
fisttps
repz
frstor
pop
sub
sub
add
gs
xchg
or
ds
pushl
mov
add
adc
cmp
daa
rcl
pop
mov
mov
sbb
mov
sub
inc
pop
icebp
int
fbld
or
lret
or
call
cmp
fmuls
aas
cmpsb
pusha
mov
ja
movsl
xchg
push
je
lret
push
fisubrs
inc
jae
or
sbb
pop
loope
lcall
jb
jnp
icebp
pop
mov
adc
pop
sub
mov
jae
insl
mov
fcmovnu
jg
xchg
adc
call
xor
cmp
fldt
aam
jb
xor
add
daa
mov
pop
cmpsl
test
pop
cwtl
aad
pop
cmc
xchg
psllw
ljmp
in
dec
out
mov
aad
pushl
dec
into
fidivrs
ja
aaa
dec
aaa
dec
dec
aas
adc
aas
sarb
sar
dec
push
fscale
jle
mov
nop
mov
fiadds
cmp
mov
into
mov
mov
ret
add
mov
loope
push
es
insb
mov
pop
add
push
sub
xlat
iret
inc
pop
out
adc
icebp
imul
stc
repz
hlt
loopne
out
test
jg
sbb
and
movsb
mov
lret
and
mov
sbb
call
ss
and
mov
cmp
ret
insl
xchg
cmc
cltd
cld
in
call
loopne
cltd
lret
dec
add
or
cmp
and
lods
xchg
cmp
ljmp
clc
add
inc
enter
mov
repz
mov
int3
cld
sahf
jg
decl
les
xor
xor
pop
in
addr16
or
push
mul
sub
sti
jnp
lock
ja
jb
loopne
or
sar
jmp
jbe
push
xchg
int
or
jle
xchg
xor
dec
jg
xorl
cmpsl
int3
pop
jae
add
fisubrl
lcall
iret
cmc
pop
hlt
adc
dec
mov
inc
sub
jno
lret
ret
outsl
dec
fldt
clc
call
out
lea
xor
jne
clc
xor
sbb
gs
mov
add
and
incl
les
jno
xor
ret
inc
rcr
imulb
jns
incl
mov
cmp
mov
rcll
es
pushf
in
in
xchg
ret
mov
mov
inc
add
shlb
jae
out
fcoms
cmp
push
iret
mov
je
std
ljmp
cmp
enterw
push
scas
inc
adc
les
clc
pop
out
aad
sbb
call
and
push
mov
cmpsb
outsb
lret
dec
sbb
data16
push
lods
adc
ljmp
add
dec
xchg
xchg
scas
sub
xchg
scas
shrb
sub
xlat
or
call
out
mov
cmp
cli
push
jae
and
lcall
adc
xor
jnp
sahf
stos
arpl
mov
xor
les
fildl
push
jmp
push
sbb
lods
mov
mov
xor
push
pushl
jbe
push
mov
clc
xchg
push
inc
pop
mov
int3
xchg
sbb
push
rcll
test
call
notb
loop
or
pop
outsb
jge
fsubrl
roll
movups
iret
stos
inc
lcall
ljmp
sti
or
iret
xchg
shrb
mov
fcoms
mov
sti
jo
push
mov
xor
aas
enter
inc
sub
jg
incl
imul
movsl
das
mov
and
dec
ret
mov
sbb
xchg
and
out
jle
lods
sbb
mov
inc
xchg
and
and
enter
rolb
xchg
xchg
sbb
in
std
call
outsl
or
in
xorl
inc
rcrb
lds
outsb
push
sub
jo
call
loopne
push
fmull
ljmp
push
je
pop
iret
push
dec
std
incl
xor
lea
insb
jns
ret
xor
decl
out
lret
shrl
pop
pushf
out
shr
inc
loopne
pop
bound
pop
call
fbld
jo
aam
mov
inc
in
popa
les
push
xchg
cmpsb
add
cmpsl
nop
push
mov
in
js
roll
aas
sub
sbb
pop
loopne
mov
nop
mov
jns
popa
jp
icebp
andb
push
mov
lods
cli
incl
mov
test
inc
sub
xchg
mov
cmp
das
xor
inc
int3
aas
cmpsb
scas
jb
jmp
fidivl
lret
popa
lret
push
ficomps
cld
call
push
xor
pop
push
dec
mov
mov
jno
aad
movsl
aam
xlat
sub
xchg
add
ja
idivl
cmpsl
inc
loop
cmc
enter
repnz
and
stos
xchg
inc
mov
or
jmp
and
loope
in
lret
fwait
jb
pop
hlt
decl
jl
repz
fcmovnb
cmc
aam
stc
xor
in
sub
cmpb
lcall
pop
mov
orb
sbb
add
loopne
or
mov
inc
dec
mov
into
cltd
rcll
repz
jno
add
fcoms
mov
lcall
stos
adc
adc
mov
mov
test
out
push
pop
lock
fisttps
add
sar
lods
outsb
cmpsb
mov
and
cltd
rcll
mov
test
pushl
and
add
daa
xlat
loope
sti
push
mov
ret
jg
fcompl
pop
jge
in
cmp
lcall
mov
sub
pop
push
dec
xlat
xchg
repz
sti
mov
repnz
mov
mov
insb
xchg
test
mov
adc
lret
inc
sbb
adc
je
xchg
mov
cld
sub
mov
fst
ja
xor
xor
sbb
cltd
mov
xchg
lods
and
jg
mov
jb
scas
lcall
inc
lock
shrl
mov
fdivl
lock
jge
xor
push
inc
and
cmp
lahf
adc
outsl
ss
leave
mov
lea
mov
std
es
add
inc
inc
inc
sbb
or
adc
push
sti
dec
and
push
es
inc
out
mov
mov
repz
icebp
scas
or
hlt
xchg
andl
mov
test
mov
out
lds
imul
test
das
inc
es
fcomp
shll
lret
cmp
or
sub
pop
cmp
mov
lcall
popa
mov
mov
jae
mov
mov
xchg
xchg
ja
jbe
incl
shlb
ffreep
sbb
nop
push
mov
mov
lock
movsl
push
xor
outsb
arpl
adc
mov
sti
icebp
fsubrs
orb
call
pop
adc
fists
jae
out
in
cmp
call
int3
scas
stos
ret
push
jle
pop
add
jmp
pop
mov
mov
add
mov
aad
pusha
imul
sbb
push
mov
add
dec
adc
lds
lahf
inc
cmpsb
les
loop
jb
lds
nop
cmpsl
fildll
lret
mov
lods
stos
ficomps
mov
sub
ds
cmpsl
add
ljmp
into
data16
stos
push
xor
or
lcall
scas
imul
cmp
outsl
clc
push
lds
push
push
addr16
cli
dec
push
dec
jae
outsl
and
add
loop
push
ljmp
xchg
and
nop
cli
inc
adc
inc
cmp
xchg
mov
loop
mov
adc
pop
jno
inc
mov
mov
ljmp
xor
jmp
je
inc
test
lret
js
adc
ror
fld
and
incl
arpl
test
lea
dec
sub
sbb
pop
jle
shlb
out
add
int
push
pop
aad
mov
adc
scas
mov
ror
bnd
jno
adc
lret
imul
fcomps
push
int
add
inc
pop
pop
fists
into
jns
inc
mov
push
mov
or
push
in
repnz
sub
insb
and
pop
aas
inc
push
inc
push
jns
ja
std
in
add
popf
test
int
lcall
bound
add
pushl
or
mull
lock
test
shrb
inc
decb
dec
xchg
lcall
dec
xchg
stos
outsb
in
lds
adc
pop
sbb
lcall
pushf
cmpsl
or
inc
xchg
add
jle
sarb
cwtl
cld
mov
dec
pop
int3
mov
push
mov
test
negl
in
push
push
dec
inc
mov
mov
jp
cli
decl
icebp
jl
xlat
lret
xchg
cmp
mov
mulb
sub
pop
mov
xor
jbe
push
fcom
cs
mov
add
xchg
inc
xchg
lret
jmp
mov
ss
cs
adc
ljmp
push
xchg
les
ret
adc
in
mov
mov
xchg
dec
decl
adc
jne
mov
clc
fidivrs
clc
sub
fcmove
notb
push
popf
lds
fcomip
push
bound
fldenv
ljmp
push
xchg
mov
clc
jo
xchg
cmpl
decl
cmpl
ss
fsubr
cmpsb
xor
loopne
add
jge
jle
or
nop
ljmp
xchg
pop
pop
add
xor
call
mov
push
or
mov
imul
leave
jo
or
in
cmp
pop
lcall
jmp
adc
adc
rorb
js
and
and
ljmp
lock
cmovp
fistl
ljmp
scas
or
add
xchg
call
cld
arpl
stos
sub
cs
test
mov
jmp
loop
pop
popa
popf
mov
shlb
std
clc
mov
mov
leave
mov
gs
mov
popf
addr16
cmp
pop
inc
mov
jnp
add
divb
clc
pop
mov
push
lea
adc
sbb
popa
mov
aam
xor
mov
add
mov
inc
push
adc
bound
insl
dec
mov
dec
dec
call
mov
mov
arpl
inc
lret
js
cmp
hlt
sbbl
aam
fsubrp
fwait
jo
stos
imul
xor
stc
dec
jg
add
pushl
lods
or
fwait
mov
lcall
push
dec
push
ds
int
push
insb
mov
mov
mov
mov
cs
fildll
mov
int3
rcll
mov
faddl
cmp
mov
rorl
add
icebp
sti
jge
insb
lock
push
xchg
push
daa
dec
scas
icebp
xchg
cmp
sub
js
mov
ljmp
ljmp
and
ret
dec
lods
pop
lret
fidivl
out
not
add
incl
test
and
push
push
xor
insb
aas
testb
into
shlb
pop
xchg
xchg
fdivr
jg
add
jmp
cmp
ffreep
push
shll
out
sbb
jp
dec
jo
sub
daa
pop
test
pop
int3
sub
gs
or
ja
nop
xor
dec
dec
jmp
leave
scas
lea
orl
stos
pop
ret
inc
loope
test
dec
or
mov
pop
scas
iret
jbe
cld
int
sbb
sbb
dec
ljmp
stc
addb
aam
add
mov
sti
imul
cmpsb
cmp
push
sbb
jge
lcall
and
stos
fwait
push
push
mov
mov
sbb
sahf
xor
imul
pop
dec
ja
cli
les
addr16
test
out
rol
or
dec
addb
decl
mov
mov
mov
xchg
add
aas
inc
push
int
mov
mov
in
hlt
les
add
cld
dec
call
out
jne
push
xchg
ret
unpckhps
leave
insb
push
rorl
fstpl
aaa
test
dec
xchg
pop
shll
fbld
fistpll
lret
incl
scas
or
sbb
push
jb
inc
cli
popa
jne
add
ret
mov
incl
push
sbb
jecxz
cmpsb
sub
push
test
sub
sbb
sbb
ds
hlt
cmp
sub
mov
mov
xlat
dec
xlat
mov
push
lret
ljmp
pop
leave
pushf
dec
addr16
add
mov
lcall
addr16
in
and
std
enter
and
imul
fs
lock
push
lock
call
std
popa
fisubrs
dec
mov
mov
mov
xchg
lcall
call
push
inc
xor
mov
aaa
cmp
insl
das
in
xchg
sbb
cmp
push
adc
lock
enter
loopne
mov
leave
out
dec
loop
xlat
call
nop
jbe
xor
pop
out
sbb
push
push
pop
sbb
mov
lods
mov
iret
fbstp
aam
jmp
ficoml
xchg
and
push
xchg
rcrb
pushl
sbb
not
xchg
pop
shrb
pminub
loopne
pushl
lods
out
dec
stc
cmp
iret
pushf
mov
ret
arpl
fs
mov
cltd
outsl
push
mov
aam
shll
mov
cmp
arpl
or
incl
or
lock
ss
and
mov
je
out
jg
fbstp
mov
push
cs
and
lcall
fdivs
mov
out
testb
xor
arpl
orl
loopne
jge
pop
xchg
xor
cmp
xor
sub
push
push
or
inc
mov
mov
loope
pop
add
sahf
dec
inc
stos
arpl
mov
pushl
sbb
aam
nop
and
dec
shlb
xchg
push
repnz
icebp
jb
jge
inc
inc
cld
jmp
popf
adc
out
int
std
pop
lea
add
sub
mov
fstl
mov
mov
lcall
inc
sbb
push
mov
pop
mov
mull
and
xchg
adc
gs
jmp
pop
insb
sbb
push
mov
mov
push
mov
dec
pop
icebp
jg
mov
aam
insb
outsb
imul
out
das
adc
lcall
push
es
insl
and
sbb
nop
scas
inc
mulb
mov
lcall
xchg
push
pop
pop
orl
lea
sbb
push
xor
sub
pushf
lahf
ss
call
stos
adcl
push
fwait
ret
mov
in
xlat
or
ss
cwtl
mov
incl
daa
outsb
xchg
pop
out
lds
cmpsl
sbb
cmpl
push
add
dec
lahf
lods
call
or
add
pop
lods
sti
pop
push
lcall
sub
fdivl
or
inc
stos
ret
add
mov
imul
aad
out
out
xchg
cmpsl
fildl
jecxz
mov
popf
in
push
adc
lcall
inc
add
in
lret
lea
inc
push
xor
ljmp
cmp
push
dec
mov
mov
mov
add
mov
dec
popl
imul
ljmp
pop
cwtl
cmp
test
or
sub
rcrb
xchg
in
stc
into
and
movsl
push
push
cld
pushl
nop
mov
dec
jmp
mov
cmp
ljmp
lea
in
push
pop
test
out
mov
jmp
gs
sub
mov
dec
rcrl
lret
negl
cmc
in
xchg
xor
rcrl
jmp
push
dec
repnz
inc
test
movsl
scas
nop
xlat
sbb
lock
pop
mov
sbb
xchg
pushl
jnp
cmp
xchg
divb
lea
jnp
sahf
jb
dec
cmp
push
mov
incl
pop
sbbl
add
setb
pop
andl
dec
fnstsw
cli
pushl
mulb
lds
call
repz
xchg
jmp
pop
xchg
or
xor
mov
jmp
divl
add
rolb
ret
rolb
insb
in
into
xor
inc
ja
bound
xchg
cli
sub
push
dec
xchg
mov
ds
mov
lcall
ficomps
dec
lods
dec
repnz
mov
adcl
mov
imul
pop
lahf
xor
mov
cmpl
jnp
or
and
lahf
jmp
ds
lods
mov
cld
xchg
xor
push
push
outsb
mov
lock
decl
push
adc
mov
out
mov
or
sbb
add
or
loope
fcoms
push
xchg
jg
cmp
jmp
movsb
faddl
shrb
or
test
ficoml
pop
xchg
sar
ficoml
addr16
dec
ror
shll
fildl
scas
pop
fmulp
dec
or
cmp
xor
cmp
or
shl
and
addr16
pop
adc
pop
or
mov
dec
mov
jg
xchg
dec
outsb
bound
insb
mov
ljmp
cmpsl
push
pushf
rorb
mov
aam
pop
aaa
cld
xor
orb
xchg
cmp
pop
cld
push
iret
mov
mov
addr16
test
imul
mov
jno
cmp
mov
popa
test
jmp
dec
cs
inc
stos
roll
jp
push
xchg
in
inc
mov
clc
adc
mov
sbb
out
mov
push
es
push
lock
dec
xchg
or
push
xor
int
imul
call
cld
fbld
push
push
mov
cmp
mov
xchg
adc
lcall
cli
test
pop
out
js
and
test
stos
jo
shll
and
incl
lds
pop
mov
ret
jge
cmpsb
fstl
xor
xor
dec
and
pop
imull
nop
xchg
call
cltd
add
xlat
pop
cwtl
jo
xor
jle
and
test
xor
sub
mov
inc
in
insl
shld
add
fsts
pop
mov
pushl
shrl
inc
test
enter
mov
sti
aaa
mov
mov
lcall
sbb
add
mov
icebp
aam
cmpl
dec
cmpsl
incl
scas
repz
jmp
or
bts
jno
mov
repz
add
jae
push
jge
lahf
sbb
dec
add
incl
pop
das
push
cmpsb
mov
cmp
inc
sbb
inc
mov
scas
loop
sahf
ja
cmc
dec
inc
dec
inc
movsb
lds
shll
fnstsw
popa
cs
fisubl
ficompl
fcomip
mov
lcall
sbb
scas
mov
mov
jmp
mov
jle
sbb
bound
sub
stos
scas
sbb
or
mov
pop
pushf
leave
lcall
aad
adc
mov
scas
sbb
lcall
inc
repz
cmp
cmpsb
mov
or
incl
jnp
mov
push
leavew
imul
fistpll
jo
in
call
stos
aaa
in
or
jp
adc
mov
test
jge
imul
mov
hlt
into
test
jp
mov
sub
repz
loop
cli
sub
mov
shlb
out
pushf
sahf
mov
call
iret
adcb
fcoms
mov
int3
sub
mov
jno
dec
lock
and
sbb
shll
mov
and
jge
jmp
jb
pop
int3
sbb
lret
inc
out
daa
pusha
cwtl
cli
push
or
pushf
cwtl
test
sbb
incl
test
fwait
lock
mov
xor
dec
cli
xchg
scas
fbstp
cmpsl
or
test
das
sar
cmpb
jl
adc
ret
adc
push
aas
sub
cli
mov
nop
or
call
dec
or
jns
inc
popf
or
in
inc
push
cmp
sub
iret
cmpsb
lahf
outsb
cltd
fisttpl
mov
adc
dec
mov
jle
aaa
scas
mov
mov
sbb
xor
iret
std
mov
jo
sbb
jecxz
pushl
or
cmp
sbb
and
mov
fwait
and
pop
push
fcomps
in
xor
lods
jmp
repnz
stos
test
jl,pn
dec
mov
imul
pop
cmp
ljmp
int3
stos
or
cmp
push
out
subb
outsl
data16
das
add
adc
jmp
xor
push
jne
xchg
repz
pop
jb
inc
dec
out
add
stos
jge
incl
xlat
push
mov
mov
es
shr
jnp
cmp
sarl
rorb
xlat
pushl
pushl
inc
inc
xchg
mov
and
call
sub
cmp
int3
lret
ljmp
jecxz
test
jl
mov
decl
decb
pop
mov
jae
jmp
es
cmp
subl
lcall
pop
jns
xor
mov
cld
jge
jge
pop
sbb
ror
dec
xlat
mov
ret
incl
pop
push
test
cmpsl
jl
sbbl
inc
aas
jb
inc
add
std
pop
inc
cmpsb
sbb
in
clc
adc
adc
js
sti
loopne
std
inc
push
das
lds
in
fcomip
arpl
jmp
cwtl
jge
jmp
movsb
ljmp
jbe
aad
push
std
jmp
xchg
mov
enter
inc
adc
mov
into
sub
xor
js
sar
inc
shlb
out
mov
dec
pop
outsb
das
cmp
inc
inc
jge
xchg
das
jmp
sbb
sub
push
add
cwtl
loope
and
scas
cwtl
popa
push
mov
jmp
out
out
pop
push
cs
daa
pop
and
add
dec
fcoml
push
jae
out
pop
cmp
jmp
loopne
and
cmp
ret
scas
test
cmp
fnstenv
ljmp
repz
fnstenv
scas
insl
pop
lret
add
mov
dec
adc
fisttps
gs
shll
cmpsb
cmp
jp
mov
popf
sbb
cmp
jge
arpl
adc
decl
clc
adc
inc
fdivr
dec
addr16
mov
mov
xor
leave
mov
pop
jo
cmp
out
aam
sbb
cli
add
setle
movsl
xor
inc
jecxz
lcall
mov
sbb
jl
clc
imul
mov
lock
sbb
pop
sub
sbb
call
lods
fucomp
ljmp
ret
fwait
mov
cs
roll
mov
push
sarb
push
shll
pop
xchg
jecxz
add
mov
and
jb
pop
jbe
cmpxchg
sahf
shlb
test
fisttps
test
shl
xorl
xor
inc
or
sub
pushl
fsubrl
jg
push
pop
in
or
mov
cs
jne
mov
outsl
push
add
jmp
sub
mov
jno
jae
or
je
mov
movsl
int
hlt
aad
adc
jne
scas
call
push
dec
sti
inc
call
sti
mov
enter
and
cmp
decl
ss
cwtl
add
insl
shll
pop
xchg
scas
jb
cs
test
ljmp
movsb
loopne
xor
sub
push
pop
jo
movsb
test
outsl
sbb
daa
inc
add
mov
aad
cmp
add
cld
cmpsb
pop
int3
or
mov
dec
pop
xchg
sbb
push
test
imulb
mov
dec
loope
test
dec
inc
stc
lret
lret
push
adc
decl
add
out
jb
test
xor
inc
lods
mov
mull
decl
arpl
shrl
test
rcr
or
push
test
push
cld
incl
cld
imul
inc
mov
shll
xor
scas
insl
jg
loope
push
clc
xchg
dec
decl
xchg
rcll
cld
jmp
add
lods
push
lds
pushl
jns
or
iret
loopne
adc
cmp
iret
xlat
decl
pusha
loope
pop
sbb
cmp
dec
jae
xlat
and
or
pop
fisttpl
or
or
scas
and
adc
fcoms
xchg
xchg
ljmp
mov
and
jmp
loopne
add
xchg
xor
fsubl
out
add
std
decl
jp
xchg
je
mov
fsubrs
call
repnz
loope
outsl
pop
int3
pop
xchg
loop
sub
mov
lcall
out
rclb
jmp
loopne,pt
scas
in
insl
aas
xchg
shll
scas
cmp
sub
xor
fs
cmp
push
es
sbb
cmp
pushl
cltd
inc
scas
inc
cmp
mov
sbb
arpl
mov
jmp
lds
nop
mov
sub
in
or
shlb
mov
ss
fwait
dec
sub
ljmp
mov
mov
clc
mov
ja
mov
movb
loopne
packsswb
jmp
in
cmp
jg
cmpsb
loop
call
inc
adc
iret
jo
jge
jmp
decl
mov
addr16
mov
sub
aam
mov
jmp
idivb
sub
stc
in
out
jns
sub
sti
xchg
idivl
push
ja
clc
call
inc
aam
negb
ljmp
sbb
push
jmp
test
mov
pop
cmc
pop
mov
pop
test
mulb
das
idiv
decl
jmp
inc
pusha
fimull
cmp
push
xor
inc
mov
pushf
cmp
jns
jge
push
aaa
ljmp
ljmp
outsl
push
xor
in
je
jp
lds
ja
mov
push
push
lret
mov
sub
mov
push
mov
aaa
mov
repnz
push
repz
stc
sub
mov
fildll
jo
test
data16
incl
inc
fistpl
fsubrs
and
or
iret
shlb
imul
call
out
das
xor
mov
dec
xorl
mov
test
jp
or
pop
jg
movsb
xchg
repnz
pop
enter
sub
incl
ds
push
xchg
mov
fyl2x
repnz
lock
movsb
adcb
and
and
aad
out
xchg
push
mov
pop
movsl
fsub
fisubl
dec
dec
mov
scas
xchg
fs
out
fcompl
ja
andnps
pop
inc
xchg
mov
icebp
mov
fwait
push
popa
jecxz
in
movsb
dec
leave
pushf
mov
pushl
adc
gs
inc
add
adc
inc
mov
dec
loope
cmc
push
pop
into
jb
pop
stc
lock
incl
pop
cmp
dec
and
bound
popf
xchg
addr16
push
xor
mov
lcall
mov
stc
pop
xor
cwtl
xor
cs
sbb
or
jmp
std
incl
add
aas
das
jbe
mov
xor
jnp
cld
sub
out
rorl
xchg
insb
mov
xor
and
leave
sub
xor
js
out
jne
ret
rcl
or
out
clc
scas
clc
pushl
sti
adc
cwtl
aas
xor
xlat
pop
xor
shr
andb
incl
aad
add
sbb
bound
jbe
lods
sahf
mov
dec
jg
lods
xchg
shlb
xchg
push
leave
ds
fldl2e
lcall
mov
sbb
out
jg
sub
addr16
iret
jl
cwtl
aam
out
push
mov
cmp
lcall
stos
push
mov
xchg
pusha
add
push
dec
mov
jae
xchg
sbb
pop
ficompl
shr
loope
in
fisubs
call
or
add
outsb
dec
or
pop
mov
data16
scas
das
icebp
movl
decl
xchg
xchg
lea
push
xchg
ficoml
daa
inc
inc
fwait
add
mov
es
ljmp
inc
pusha
loopne
rcrb
clc
imul
loopne
jge
dec
pop
xlat
dec
push
insl
mov
jbe
cld
lea
ret
or
dec
fstenv
lea
inc
outsl
aam
jo
dec
arpl
lock
pushl
ja
or
xchg
jecxz
insb
mov
push
rcrb
jp
es
push
std
push
gs
test
repz
jbe
mov
pop
cmp
test
sbb
xor
arpl
decl
shrl
test
lea
ljmp
aaa
mov
cli
clc
decl
dec
ja
mov
sub
and
and
scas
repz
mov
cmp
hlt
incl
in
loop
insl
adc
push
les
aaa
cmp
daa
push
pop
pop
decl
jle
mov
jge
repz
pop
xchg
es
mov
sbb
out
cmp
inc
test
sbb
mov
call
fisubrs
mov
sub
jnp
idivb
xor
mov
dec
cmpsb
jb
xchg
inc
mov
and
sar
push
pop
mov
jno
sahf
test
mov
and
clc
out
test
cltd
scas
cmp
mov
cmp
mov
add
jmp
sbb
inc
adc
xor
jp
dec
cli
cmc
fnstcw
cmp
out
js
pop
lcall
lret
adc
shlb
pop
hlt
rolb
inc
mov
push
rorl
jmp
fs
add
xlat
mov
or
decl
jmp
pop
lret
std
scas
insb
cmp
cmp
pop
cmc
ljmp
inc
cmpsb
int3
in
data16
aad
mov
sub
insb
fisttps
mov
dec
mov
hlt
lds
hlt
or
je,pn
push
xor
test
add
jmp
xchg
stos
sbb
pop
inc
mov
stos
push
push
insl
mov
in
jbe
inc
mov
pop
push
xchg
fistps
xchg
fildll
loopne
fwait
mov
pop
or
out
icebp
fdivrp
decl
fstpt
inc
shrl
inc
push
es
dec
loopne
call
push
jbe
mov
pop
mov
adc
cli
lsl
or
stos
in
pop
sub
adc
out
push
aam
dec
add
loop
pop
add
ljmp
sti
xchg
mov
inc
push
loop
push
cltd
xlat
pop
jne
jecxz
sub
sub
xor
dec
decl
mov
movsl
das
add
in
outsb
inc
jmp
decb
jb
or
mov
xchg
int3
lea
shlb
sbb
mov
adc
xor
add
dec
mov
lods
sti
push
dec
and
in
adc
add
inc
mov
push
sbb
and
pop
cmp
dec
pop
ror
adc
push
pop
fstpt
sub
mov
sub
lea
cwtl
test
pushf
mov
mov
fmull
xchg
cltd
pop
out
hlt
lret
xchg
cli
inc
push
inc
fnsave
dec
pop
pop
adc
mov
and
ljmp
jg
incl
orl
xchg
cltd
lret
xchg
cmp
jo
insl
lods
mov
xor
inc
jle
incl
mov
cmp
rclb
cld
push
mov
aam
cld
test
negb
push
xor
or
gs
aad
add
mov
inc
cmp
inc
or
jb
idivb
adc
xor
or
aad
and
orb
xor
jg
lcall
ret
je
in
mov
movsl
lds
lods
ds
xor
jge
xchg
mov
aad
pop
jl
inc
add
int3
dec
mov
divb
lea
call
test
sub
fs
rolb
gs
bound
pop
mov
ljmp
clc
adc
outsb
push
push
cli
mov
add
mov
std
in
mov
cmp
stc
add
push
loope
les
mov
sbb
out
sub
cmp
xor
repz
in
es
ret
pop
and
movsl
mov
imulb
mov
mov
pop
cmp
jp
push
int
mov
int
push
cmp
add
pop
lret
in
xchg
rcr
mov
cs
mov
pusha
cmc
imul
ss
jno
movsb
sbb
pushl
xchg
lcall
mov
jecxz
movsb
dec
cmp
popf
data16
jmp
dec
adc
test
das
or
lods
nop
mov
adc
fcoml
imul
jmp
xor
dec
pop
les
das
repz
fwait
inc
cmp
rcll
inc
inc
mov
mov
rcrb
into
int3
sub
mov
pop
cmp
dec
adc
stos
sbb
stos
call
hlt
jns
outsl
iret
dec
in
mov
cmp
pop
mov
jge
clc
lcall
cmpsl
pop
mov
pop
and
and
add
test
mov
decl
lock
mov
fucom
and
cmp
xor
xlat
lcall
scas
or
in
push
push
sbb
subl
lea
mov
xchg
cli
sub
mov
jmp
scas
mov
xor
rol
out
add
xchg
js
ljmp
pop
nop
int3
ret
cli
aam
pop
stos
pop
xchg
xchg
add
rcr
lret
fldt
call
and
sub
je
jns
out
dec
into
inc
pop
in
test
cld
call
adc
icebp
lods
mov
shrb
mov
subb
sub
push
jp
mov
js
ret
mov
dec
jae
je
dec
mov
pop
outsl
dec
mov
aaa
movsl
lcall
ss
mov
push
pushf
and
out
test
inc
push
js
mov
das
mov
jmp
xchg
xor
mov
mov
xchg
test
or
push
mov
scas
sbb
mov
jnp
xorl
fidivs
or
mov
cli
jg
mov
sahf
pop
test
dec
and
pop
jg
mov
push
fwait
out
mov
mov
or
or
into
pop
stos
cmp
lcall
mov
sub
xchg
add
cld
and
adc
jl
cwtl
xchg
sub
push
lcall
add
icebp
clc
cmpsl
lret
shl
pop
int
scas
mov
xchg
mov
orl
fcomip
ret
stc
or
lret
pushf
fbstp
mov
dec
xchg
addr16
jae
into
fs
call
add
iret
mov
icebp
hlt
dec
dec
mov
sbb
call
cld
ss
inc
insb
insb
cmp
jno
fisubl
scas
ret
repnz
icebp
stc
dec
call
leave
push
fisubrl
mov
xchg
jg
push
aam
fcmovbe
bound
mov
pop
xchg
adc
fcomps
dec
or
fstl
xchg
mov
jle
xor
sub
xor
mov
lret
dec
pop
test
cmp
out
popa
out
sbb
gs
ljmp
push
push
dec
mov
clc
xor
loopne
incb
jl
pusha
lods
dec
xchg
dec
orb
test
scas
add
cmpsb
incl
push
add
xor
push
enter
adc
mov
xchg
lods
inc
enter
cmp
insb
hlt
nop
mov
jmp
mov
mov
xor
xor
push
sbbb
call
push
lret
dec
movl
mov
incl
sbb
addr16
mov
lcall
xor
sub
dec
dec
add
add
andl
jp
aas
pop
or
inc
int3
call
xchg
lahf
repnz
mov
mov
out
mov
xchg
mov
lods
cmp
cld
mov
xor
pop
xchg
pushf
adc
ljmp
inc
enter
mov
enter
push
mov
sbb
rolb
test
mov
lea
aad
fcmovnu
popf
int3
ljmp
std
push
dec
sbb
mov
mov
insb
in
xchg
data16
addr16
mov
testl
insl
mov
movsl
jb
rorl
fiadds
sarl
pop
sub
das
push
sahf
pop
data16
mov
cmpsb
sbb
add
scas
aad
mov
inc
inc
push
aam
aam
lcall
leave
popa
cmpsl
orb
cmpb
test
outsb
mov
sbb
push
mov
call
loop
ret
xchg
xchg
popf
dec
xor
das
dec
mov
cld
push
fbstp
dec
jbe
xlat
xor
les
adc
xor
cmp
ret
addb
lods
ja
incl
int
sub
mov
pop
loopne
fidivrl
pop
addb
in
out
xor
arpl
aaa
mov
ljmp
pop
jge
std
pop
cs
int3
insb
mov
inc
sbb
push
dec
imul
xchg
pop
arpl
sub
xchg
outsb
lods
adcl
in
xlat
das
mov
rorb
insl
arpl
lods
call
sub
mov
xchg
inc
sbb
jp
ds
lds
cmp
fidivrl
and
mov
ljmp
xor
repnz
gs
nop
pop
inc
or
push
xlat
xor
adc
sahf
lds
clc
incl
daa
mov
pop
and
int
cwtl
mov
movsl
push
xor
movsl
add
push
mov
icebp
ljmp
fsubs
imul
mov
lcall
lsl
xorb
std
xchg
outsb
push
fs
fs
mov
inc
rcrb
shrl
fs
pushl
std
repnz
sarb
pop
scas
test
push
imul
or
mov
sar
or
cmpsb
mov
xchg
je
add
mov
push
orb
in
inc
je
cmpsl
shrl
or
cmp
in
icebp
into
sar
movsl
jmp
mov
popf
lods
lcall
or
mov
pop
xorl
sub
clc
cmp
in
popa
dec
jnp
xchg
std
popa
aaa
add
adc
pop
decl
mov
int3
pop
or
add
xchg
push
mov
mov
sti
fstps
mov
inc
scas
rorb
jbe
fst
fidivrl
jbe
xor
enter
jg
adc
mov
loopne
pop
test
out
movsb
lret
sub
pushl
mov
jecxz
clc
rcrb
add
repnz
xor
xchg
mov
mov
mov
daa
xchg
decl
pop
push
popf
out
mov
jecxz
push
mov
js
and
xchg
xchg
movsl
negl
shll
sbb
fdivl
insb
scas
xlat
lock
sahf
dec
cmpsl
xchg
xchg
cld
inc
ret
mov
cmp
sbb
lret
mov
nop
push
push
pop
aam
push
xchg
push
mov
scas
mov
test
jg
js
test
es
dec
js
loop
add
pushl
push
ljmp
mov
in
sub
je
push
push
mov
imul
jecxz
mov
sub
loopne
pop
jae
inc
lret
push
mov
xchg
mov
test
icebp
rorl
movl
xlat
mov
mul
je
mov
add
xlat
mov
sbb
jg
and
repnz
and
scas
lods
lods
add
push
sbb
arpl
sub
push
mov
out
jecxz
mov
out
inc
dec
inc
fidivrl
fnstcw
leave
push
mov
jne
mov
pop
mov
pushl
movsb
sahf
xchg
dec
fs
and
leave
insl
in
test
adc
js
mov
push
push
or
add
addl
nop
jbe
lods
rolb
lcall
ficoml
stos
and
leave
js
pushf
call
incl
mov
imul
ret
mov
ljmp
mov
fcomip
incl
js
lods
mov
dec
adc
sbb
mov
push
incl
insl
ficoms
decl
mov
lret
or
mov
sub
push
jmp
adc
mov
adc
mov
sbb
cmc
mov
or
push
mov
and
dec
outsl
or
xchg
cmpsl
call
loopne
inc
mov
or
cmpsb
mov
sbb
dec
pop
js
jmp
decl
mov
enter
adc
sub
and
das
mov
xchg
xchg
js
movsb
and
out
in
out
mov
pop
xor
push
cmp
push
push
adc
lock
cmp
dec
out
pop
mov
push
in
sub
xor
xor
stos
pushf
mov
insb
movsl
add
pop
and
pop
out
sbbl
in
push
js
sbb
inc
into
inc
mov
jns
lods
sub
jne
or
dec
push
dec
in
ja
dec
pop
xlat
arpl
pop
gs
lret
mov
cmp
push
cltd
xchg
mov
out
in
in
pop
sbb
ljmp
adc
gs
out
sub
xor
pop
daa
mov
pusha
jo
mov
sbb
mov
les
push
mov
subb
cmc
mov
sbb
adc
push
mov
mov
dec
movsl
mov
jmp
in
fisubrl
or
jmp
pop
xchg
outsb
cltd
in
lds
pop
mov
imull
mov
shrl
mov
in
out
dec
mov
mov
jge
push
hlt
pushl
hlt
mov
lods
dec
scas
out
xchg
jo
cmpsl
sti
inc
xorl
jmp
sbb
repnz
decl
dec
inc
mov
mov
add
mov
insb
iret
addl
hlt
xor
or
incl
imul
arpl
lahf
push
pop
sti
mov
sbb
jnp
outsl
clc
ja
or
aaa
fiadds
cmpsl
test
xchg
jo
nop
mov
es
call
in
or
pop
jp
ljmp
dec
mov
fisttpll
incl
sbb
or
or
pop
xchg
dec
in
pushl
mov
call
push
incb
in
and
in
into
das
shlb
lock
ljmp
lcall
lock
in
dec
test
aas
dec
call
dec
mov
repnz
jmp
int3
jbe
fcomip
pop
push
mov
inc
jge
sbb
andl
push
xchg
adc
loop
pusha
pop
lods
dec
pop
pusha
jecxz
mov
stos
jmp
inc
and
test
and
outsb
xor
jno
cmp
ds
mov
push
bound
push
mov
jle
rclb
fnstcw
and
loopne
add
push
push
aas
daa
xor
jno
sub
mov
aad
popa
lcall
mov
call
in
and
cwtl
aaa
sbb
pop
je
pop
ds
pop
pop
ds
stos
pop
mov
mov
sub
or
iret
add
in
xchg
gs
mov
jle
clc
sbb
lds
xor
dec
jmp
adc
mov
fbstp
and
nop
sbb
xchg
inc
mov
xchg
push
mov
es
rol
pop
push
sahf
insl
sub
decl
mov
mov
push
or
js
mov
loopne
decl
mov
mov
imul
add
outsb
mov
sub
jge
outsb
cmp
push
int3
in
pop
mov
fimull
mov
in
fisttpl
outsb
mov
add
std
incl
leave
inc
outsl
push
cwtl
jge
shrb
push
fisubs
xchg
push
aas
inc
adc
jbe
fidivl
aas
mov
mov
jnp
jnp
sbb
lcall
shlb
pop
xor
inc
mov
iret
les
cmp
dec
mov
mov
aad
push
imul
sti
aas
mov
push
adc
sbb
jg
idiv
jmp
ljmp
xor
jle
jg
dec
int3
push
iret
pop
sbbl
es
movsl
sti
in
popf
ret
xchg
add
pop
fstpl
hlt
adc
dec
mov
incl
shlb
je
cmp
addr16
ds
in
icebp
cwtl
repnz
adc
data16
test
jnp
mov
iret
out
aad
aad
fimull
pop
mov
adc
sbb
pop
jle
jg
and
cmc
stos
cmp
lret
mov
shlb
test
mov
adc
jg
test
data16
movsb
cmp
jg
movsl
pusha
daa
pushf
sub
daa
mov
mov
aam
je
incb
imul
pusha
cld
cwtl
cmp
mov
dec
ds
adc
adc
incl
push
add
mov
out
inc
test
rorl
lret
jb
orb
ljmp
outsb
sub
lcall
push
jle
add
xchg
outsl
cli
mov
add
ja
loopne
loop
imul
popf
decl
iret
ljmp
jmp
fisubs
xlat
push
inc
aas
mov
call
cmpsl
or
rep
daa
lods
dec
cwtl
dec
sbbl
pusha
dec
dec
clc
mov
scas
sarb
xchg
push
jg
cmc
mov
pop
mov
adc
add
filds
call
jp
jbe
sub
pop
jns
pushl
pop
push
pop
mov
aas
ds
rolb
lds
cmp
pop
int3
idivb
test
or
fst
popf
and
mov
xchg
sti
ljmp
fildll
dec
cmp
in
pop
loop
mov
and
daa
and
ljmp
pop
stos
insb
nop
ficomps
out
jecxz
repz
int
enter
scas
mov
pop
in
test
dec
mov
loopne
pushl
jp
dec
test
sub
out
xchg
jp
mov
add
pop
les
pop
push
adcb
fidivrs
mov
jg
jmp
or
data16
sub
bound
lods
mov
call
addl
cmp
cmpsb
mov
mov
xlat
ja
dec
dec
fdivrp
ljmp
or
cmp
push
icebp
pop
lea
pop
xchg
incl
into
iret
xor
cmp
and
test
add
lods
lret
and
cmpsb
aas
test
pop
lock
mov
adc
call
sbb
and
shll
adc
fisttpll
int
fcoml
std
call
cli
push
cmpsl
mov
aaa
call
or
rolb
jmp
jmp
ja
lret
xchg
insl
sahf
and
lea
inc
xor
cmp
add
gs
stos
das
xor
in
push
push
adc
insl
jmp
xchg
cld
adc
lcall
imul
jge
adc
xchg
xchg
and
out
movsb
xor
call
sbbb
sbb
jb
and
std
or
lcall
or
dec
xchg
das
jae
lret
test
out
cmp
fldl
adc
incl
stos
lods
hlt
cli
and
mov
add
scas
arpl
popa
and
inc
xchg
loope
in
int3
or
test
out
add
pusha
imul
pusha
test
ret
xchg
mov
icebp
adc
xlat
dec
cli
lcall
pop
shll
ljmp
inc
push
insb
cwtl
cmp
jge
sbb
sbb
sti
or
and
cmp
in
add
imul
dec
jb
or
sub
or
pushl
sbb
add
outsb
mov
fsubrs
idiv
lcall
adc
mov
test
and
ret
and
scas
out
sarb
pop
cld
pop
cmp
ljmp
or
pushf
cmpsb
add
inc
call
xor
xchg
jb
fwait
sub
cmp
ljmp
mov
repz
inc
aad
sbb
int
dec
pop
fidivs
add
cmp
lcall
mov
or
inc
ds
cmp
sbb
add
flds
cmp
div
push
cwtl
pop
pushf
adc
jmp
or
add
ror
stos
cmpsb
xor
sti
ja
xchg
imulb
mov
dec
test
lret
xor
inc
rcr
jb
aam
pushf
dec
sbb
cmc
sbb
jb
xchg
inc
call
icebp
fldcw
and
lret
test
lock
jmp
out
inc
dec
mov
in
push
out
mov
fnsave
imul
lahf
jns
jne
sub
rcll
lret
mov
outsb
xor
test
push
call
sub
dec
sbb
call
adcl
loopne
mov
xor
jle
sbb
lods
cmp
dec
and
dec
test
push
mov
ja
and
mov
lcall
lea
fcomip
sub
dec
popf
push
jecxz
inc
push
int3
xchg
cmp
movsb
icebp
neg
and
cmp
lahf
jg
aas
add
fldl
rcrb
adc
mov
pop
sub
lcall
pusha
fs
mov
mov
stc
xor
loop
sti
iret
jmp
es
sbb
add
xchg
sub
mov
inc
inc
std
fnsave
test
cs
aaa
test
cmp
mov
fidivrl
out
loope
jo
mov
sbb
out
test
mov
ret
cmp
incl
inc
jnp
cmp
push
pop
andl
push
and
fdivrl
add
fxam
ret
add
nop
loop
jg
cli
outsl
popf
das
js
fninit
cmc
push
mov
pushf
push
mov
ret
sahf
popa
xorb
pushl
cld
call
dec
fsubs
mov
xchg
outsb
addl
hlt
sub
incl
test
lcall
pop
mov
mov
pop
test
mov
sbbl
out
rolb
arpl
push
push
ss
je
mov
mov
addl
mov
jl
add
jnp
out
mov
inc
mov
shlb
fdiv
out
sbb
mov
sarl
popf
pop
xor
lods
ret
enter
loop
mov
test
pop
and
fidivl
dec
add
push
cwtl
pusha
ds
outsb
ss
dec
mov
sub
sub
jmp
mov
or
xchg
les
mov
jae
gs
fneni(8087
lcall
test
cmpl
shlb
add
add
mov
rorl
cwtl
xor
fildll
sbb
dec
aam
out
idivb
cltd
mov
repnz
and
jmp
call
lcall
cmp
jbe
push
daa
in
sbb
xchg
and
aaa
sbb
aas
or
call
fldcw
mov
je
push
pop
push
adc
inc
insl
cltd
add
and
es
pushl
fwait
mov
mov
imul
int
jne
pop
push
mov
pop
push
ja
mov
jle
pop
xchg
inc
ljmp
sbb
push
xor
test
int
out
xlat
push
jae
xor
rcr
mov
pushl
loopne
jbe
int3
repz
add
sub
fidivrs
stos
sbb
ljmp
adcb
sub
mov
shrb
iret
sbb
sub
int3
mov
mov
push
xchg
test
loope
push
mov
pop
fsubrs
adc
mov
mov
lret
push
gs
incl
int3
leave
dec
xor
ja
cli
jp
and
iret
push
push
jg
pop
lcall
mov
scas
clc
push
leave
jns
lret
jge
imulb
fs
mov
lods
nop
xchg
cmp
sbb
sbb
mov
out
mov
movsl
jns
fcom
movb
xchg
add
sar
mov
cmc
mov
pop
in
inc
daa
add
dec
daa
out
clc
jg
sbbl
insl
xchg
subb
mov
mov
xchg
addl
mov
cmp
outsb
jns
pusha
mov
pop
sbb
xor
or
dec
inc
outsb
scas
lds
decl
and
movsb
jns
cmp
dec
push
adc
nop
mov
fdivrp
mov
jae
push
insb
rorl
pop
ror
gs
cwtl
sub
jmp
ds
mov
pop
and
cmpsl
loope
dec
pop
ror
movsb
add
dec
xlat
or
push
js
xchg
bound
icebp
jb
lea
int
mov
mov
and
xor
shr
pop
sbb
or
decl
popa
adc
lret
pop
inc
mov
ret
xchg
and
lds
rol
push
jmp
jmp
out
stos
adc
dec
add
jg
std
arpl
subl
mov
call
sub
pop
imul
pop
rcll
mov
mov
idivl
call
je
mov
test
cld
jle
or
adc
cmp
dec
sub
sub
in
cmp
and
or
aaa
push
fisttpll
into
hlt
xorb
jmp
pusha
scas
xor
mov
xchg
or
stos
xor
std
sbb
decl
dec
push
adc
cmp
adc
jle
mov
ret
sbb
inc
pop
and
lcall
mov
pop
pop
shrl
outsl
add
xchg
loopne
loope
cli
movsb
mov
mov
pushf
mov
fbstp
jl
inc
pushf
jnp
push
scas
pushl
jg
push
xchg
mov
inc
fs
jnp
stos
inc
fmuls
divl
lcall
jo
pop
jle
rolb
movsl
out
je
test
and
jmp
aaa
iret
adc
jmp
cmpsb
stc
ss
xchg
insb
addr16
pop
lahf
cltd
fbstp
mov
lea
xchg
test
decl
int
jne
pop
test
roll
fwait
outsl
pop
jg
in
sbb
call
push
mov
sub
cli
jmp
push
add
cmp
ds
lods
add
jle
scas
inc
fsubrp
cmp
inc
fcomip
call
pop
pop
cli
dec
add
push
movsb
jo
mov
jg
sti
shll
ljmp
jl
jbe
addl
mov
mov
sbbb
or
jmp
inc
dec
mov
xchg
sub
push
lea
dec
mov
cs
cld
call
std
ljmp
xor
jp
outsl
insl
rcll
je
lcall
xchg
xor
fisttpll
popf
or
fdivp
xor
lea
pop
dec
pop
shlb
cmpsb
bnd
ljmp
sub
push
mov
push
test
lcall
std
inc
jne
jecxz
adc
lret
add
push
insl
rclb
jp
pop
xorb
lret
dec
push
mov
mov
sbb
scas
jg
mov
je
push
aas
mov
sub
xsha256
cmpsb
push
subb
cmp
push
xchg
adc
push
mov
cs
cmc
out
ljmp
or
or
inc
push
push
idivb
out
sub
fldenv
cmpsl
mov
inc
sbb
sub
jmp
jb
push
out
mov
adc
cmp
or
push
repz
lods
out
decl
stos
and
cmp
mov
sub
mov
xchg
sarl
fisubrs
pushl
out
int3
insb
aam
jle
rep
arpl
inc
negl
or
add
xor
repnz
call
hlt
add
push
mov
cmp
push
mov
and
or
xor
ljmp
inc
movsl
mov
pop
out
lret
mov
push
add
ljmp
gs
out
dec
imul
in
mov
mov
pop
cmc
sbb
sub
pop
inc
mov
xchg
dec
cld
lcall
cld
mov
scas
pop
mov
int3
ljmp
inc
sbb
cmc
inc
pop
jge
fs
stc
in
leave
inc
lcall
jmp
in
outsb
mov
orb
fldenv
in
and
daa
push
jg
pushl
test
aas
push
ret
and
sbb
sahf
mov
imulb
fistps
mov
dec
in
insb
cmc
or
pop
pop
jb
mov
fwait
xchg
mov
sub
gs
cwtl
out
xor
inc
in
pop
rcr
add
jno
mov
stos
push
lcall
dec
jg
push
sub
mov
cmp
add
dec
out
dec
int
stos
les
hlt
sub
lods
push
and
lock
ja
push
push
jle
cli
decl
sub
das
mov
cld
jo
mov
push
xchg
cs
jo
sar
lcall
adc
xor
pop
pop
sarl
imul
icebp
or
dec
pop
pusha
xchg
jg
lahf
mov
pop
adc
ror
inc
out
movb
xchg
xchg
nop
pop
lock
and
lcall
mov
ja
xchg
loopne
mov
movsb
mov
jbe
jg
fstpl
jle
sbb
pop
hlt
incl
mov
mov
jmp
mov
pop
out
repz
xor
jmp
xor
dec
mov
fldl
ds
mov
mov
mov
movsb
inc
push
push
xchg
je
push
std
cli
jg
adc
mov
arpl
xchg
je
jnp
filds
add
mov
push
ja
inc
lret
icebp
add
sub
sub
decl
sahf
cmp
jp
inc
js
adc
pushf
divb
outsl
into
ds
call
cmp
pop
mov
movsl
clc
testl
pavgb
jg
out
aam
js
push
test
and
ja
les
imul
and
incl
sub
sbb
cltd
sbb
add
mov
mov
pop
jo
pop
call
rclb
xchg
pop
shll
out
js
jg
xchg
mov
xchg
adc
cmpsb
cmpsb
ret
notb
fsubr
imul
jo
lds
std
mov
std
mov
sahf
pushf
inc
ret
sti
xlat
or
xchg
mov
xlat
shrd
std
xor
iret
cmp
js
pop
sub
stos
lock
je
mov
xor
insl
out
int
incl
or
testb
dec
ss
std
hlt
inc
adc
dec
sub
xor
sbb
decl
push
sarl
sbb
int3
repz
adc
sub
pushl
pop
jb
ret
push
lds
and
mov
sbb
sbb
cmp
push
cmp
fcomps
adc
pushl
add
lock
neg
popf
cltd
and
fstps
mov
cmp
cmpsl
scas
inc
pop
ljmp
lcall
push
dec
dec
inc
push
pop
mov
inc
sbb
mov
lock
insb
mov
js
mov
push
sbb
push
stos
in
pushl
push
dec
xchg
xchg
and
movsb
inc
in
mov
fsub
ucomiss
cli
jle
sbb
addr16
mov
add
xchg
xor
lcall
push
fisttps
xchg
test
insb
cmp
lods
les
xor
mov
push
rcr
nop
es
decl
scas
push
adc
inc
shlb
shll
push
cmp
jno
test
incl
ss
mov
xor
lcall
fisttpl
out
cmpsl
enter
mov
cli
fdivs
fsubs
inc
mov
das
xchg
inc
cmp
jo
add
dec
in
clc
dec
jne
outsb
es
call
jg
inc
das
xor
scas
outsl
sub
dec
pusha
aas
pushf
xchg
jecxz
adc
mov
pop
cmp
nop
pop
fnsave
insl
sbb
jns
ret
xor
xchg
and
sarl
pop
add
sub
pusha
pop
mov
mov
pushf
jecxz
jg
push
into
inc
ss
mov
ds
addr16
inc
mov
and
pop
cmp
ja
call
mov
mov
test
filds
mov
jmp
stos
addl
pop
or
pop
cmpsb
dec
insl
inc
push
lods
pop
sti
test
out
pusha
pop
cmpsb
lods
mov
ror
add
sub
enter
xchg
xchg
mov
pushl
inc
sbb
addr16
pop
pop
inc
repnz
movl
pop
cmp
ljmp
push
push
pop
scas
aam
ss
rcll
xchg
xchg
jp
fsubl
pop
and
add
incl
int3
popf
mov
sub
fwait
inc
dec
mov
jp
loopne
lret
mov
cli
lcall
mov
sbb
dec
sub
mov
jo
ja
inc
test
clc
jb
ljmp
leave
fistl
hlt
mov
out
andl
mov
xchg
arpl
add
es
jae
mov
je
add
mov
xchg
xchg
test
push
sbb
pop
call
pop
mov
sti
fcmovnbe
adc
mov
xor
incl
bound
aad
add
xchg
mov
dec
arpl
mov
sub
fcomip
aam
jno
stos
fstpt
scas
mov
dec
arpl
cmp
pushl
int3
mov
out
dec
bnd
in
sbb
out
xor
cmp
ja
decl
loope
test
mov
mov
clc
dec
shlb
mov
xchg
leave
adc
ljmp
push
mov
cltd
out
lods
mov
and
inc
dec
adc
and
test
inc
mov
xor
popa
xchg
sub
in
dec
bnd
add
fcoms
into
pop
mov
inc
test
adcl
cli
mov
in
ljmp
cli
out
repz
out
mov
push
jecxz
xchg
inc
ss
jmp
in
lods
adc
loop
dec
incl
push
fimuls
daa
xchg
ljmp
in
xor
jo
sbb
cld
in
out
rorb
pop
fnstsw
dec
imulb
xor
data16
out
add
nop
je
mov
jmp
cmp
xchg
lds
divb
add
mov
sbb
fs
incl
mov
lret
test
push
inc
xchg
push
xchg
mov
out
rcrl
dec
lcall
xchg
iret
mov
loop
mov
les
adc
mov
push
mov
fistpll
aaa
cld
cmc
repz
jo
cmp
dec
imul
pop
rol
pushl
adc
stc
jno
pop
push
je
mov
or
jns
pop
shl
sbb
neg
sbb
in
pop
outsl
pop
cmc
jmp
cmc
mov
xlat
fs
test
jbe
inc
sahf
data16
lcall
lea
loop
pop
daa
mov
xchg
ficoml
out
incl
addr16
pop
jl
and
push
lret
pusha
cmpsl
mov
aam
enter
clc
inc
scas
in
push
dec
ret
in
sub
xchg
mov
sub
stos
and
inc
and
lcall
std
jo
jmp
dec
push
adc
loopne
sub
xor
xor
mov
call
xor
mov
dec
stos
mov
dec
fcoml
iret
inc
sbb
xor
loope
mov
das
cld
fnstcw
fsubrp
sub
je
pop
adc
add
jae
outsl
mov
sub
push
mov
pushl
dec
lock
mov
push
mov
fbld
sbb
push
pop
inc
sub
jno
loope
ljmp
jmp
repz
and
pop
mov
xchg
xchg
nop
push
mov
sub
mov
inc
stos
aaa
or
stos
std
gs
ror
cltd
jb
ds
ljmp
pop
mov
adcl
faddp
cwtl
adc
fs
mov
stc
jb
pop
xchg
dec
in
lock
sub
shlb
lea
or
inc
mov
incl
push
or
pop
mov
sub
and
sub
add
rcl
xor
fisubrs
mov
push
lock
pushl
xchg
outsl
cmp
xor
jns
jnp
dec
mov
cmpb
adc
push
push
lea
ja
push
call
pop
jo
pop
mov
rclb
push
jne
xchg
std
jmp
ss
inc
das
cld
cld
and
adc
imul
mov
mov
sub
adc
mov
pushl
xchg
and
push
inc
pop
xchg
orl
das
cmp
lods
popa
leave
mov
insl
fcomip
incl
addr16
scas
lods
hlt
inc
add
lcall
lcall
ljmp
in
andb
lods
loop
shll
ljmp
cmp
push
loopne
adcl
pop
push
cli
mov
scas
pop
test
and
idiv
call
inc
inc
movb
mov
dec
in
stos
das
sbb
push
pop
mov
push
sub
int3
fcmove
insb
xchg
das
addr16
enter
stos
adc
pop
jo
subb
mov
shll
insb
lcall
lods
push
push
add
push
or
test
add
lods
sub
mov
or
mov
fstpl
xor
jbe
push
mov
mov
inc
sbb
daa
or
jmp
adc
sub
add
mov
or
xor
into
inc
cli
repnz
incl
mov
cmpsl
mov
xchg
ret
xor
into
shll
aas
clc
mov
cmpsl
add
jmp
mov
xor
mov
scas
sahf
lret
and
cmp
add
lcall
sub
repnz
push
adc
cmp
fldl
je
hlt
pusha
ljmp
dec
aas
push
jae
mov
pop
adc
leave
incl
cld
incl
cmp
cwtl
movsl
or
clc
mov
imul
xor
aaa
push
dec
out
mov
push
in
add
jns
lret
pop
adc
imul
mov
xchg
scas
clc
incl
pushf
bound
jae
push
stos
pop
mov
xchg
xchg
sbb
aad
pusha
mov
xchg
pushl
adc
sub
pop
movsl
aam
imul
xchg
dec
push
mov
out
sbb
jbe
inc
pop
jmp
xchg
in
mov
or
ret
cli
dec
aaa
lds
jbe
cmc
xchg
repz
mov
jmp
and
or
mov
jle
pop
es
xor
cmpsl
pop
jg
cmp
mov
fdivs
inc
popf
repz
enter
push
or
sub
xor
jmp
jb
and
clc
call
and
lods
mov
mov
cmpsb
pop
arpl
movsl
loop
mov
add
sbb
jmp
push
cmp
xchg
test
insb
sbb
aad
iret
inc
xchg
mov
decl
fistpll
pushf
add
int
orb
sub
cmpsb
outsb
sbb
and
decl
jb
jnp
aaa
cli
xor
cmp
jl
mov
incl
outsl
inc
ret
bound
test
and
aaa
and
push
and
out
clc
syscall
sti
dec
jnp
ret
loopne
jmp
or
fsubl
jno
inc
push
xchg
insl
mov
jmp
push
shll
insl
sub
mov
adc
aam
ljmp
and
data16
dec
pop
jns
std
incl
inc
xchg
push
mov
mov
inc
xchg
inc
and
mov
inc
dec
sbb
decl
movsl
push
arpl
repz
pop
dec
push
aad
mov
lock
testb
in
aaa
scas
cli
call
xchg
adc
mov
outsb
sub
loope
lock
pop
bound
pushf
ret
jb
call
decl
sbb
mov
dec
pop
add
fwait
add
lcall
push
jne
call
mov
mov
out
cmpsb
ret
call
das
dec
mov
rclb
aas
and
inc
in
test
dec
fnstcw
xchg
ds
and
ljmp
xchg
and
mov
subb
dec
arpl
lods
add
into
int3
and
je
jnp
or
sarb
ljmp
jbe
imul
fnstsw
aas
sti
ja
pop
movsb
pop
ljmp
call
hlt
je
add
lahf
testb
pop
nop
inc
out
cli
test
cmpsb
std
insb
std
incl
or
insb
pop
int3
inc
jg
or
sub
test
mov
pop
push
sub
hlt
inc
into
movsb
imul
pushl
addb
xchg
inc
arpl
or
sbb
incb
pop
fcomps
lods
push
insl
scas
in
sbb
pushl
or
ret
mov
addl
nop
inc
fadd
xorb
int
pop
or
mov
call
and
in
push
push
cmp
push
movsb
and
out
incb
or
ja
in
push
xchg
ja
sahf
movsb
and
lcall
pusha
pushl
xlat
scas
lods
mov
ljmp
cmp
or
fsubl
inc
js
mov
xor
aaa
les
jne
jg
lcall
sub
clc
jb
cmpsb
add
jo
pushf
pop
call
mov
sub
cmpsl
dec
int
and
mov
lahf
push
mov
test
adc
ret
mov
mov
pushf
mov
push
jecxz
popf
jbe
das
xor
push
push
jo
sbb
inc
popl
cmp
lret
inc
adc
mov
lods
stc
stos
scas
cmp
push
divl
rcrb
xor
push
scas
in
out
lret
jp
push
sub
inc
cmp
incl
inc
out
filds
sbb
dec
sbb
xor
loopne
xchg
sbb
mov
adc
test
dec
mov
fstp
cmc
mov
mov
aas
mov
dec
insb
xchg
mov
repnz
sub
idivl
adc
roll
inc
std
mov
cwtl
push
lea
insb
hlt
aas
out
cmp
xchg
cmpsb
mov
xchg
jle
mov
mov
xchg
mov
cmp
fistpll
sahf
jae
out
jg
xor
cmp
xchg
call
add
or
xor
inc
inc
inc
push
pop
push
pushf
call
es
decl
mov
lcall
cmpsl
add
push
pop
dec
dec
mov
scas
js
call
ffree
fists
adc
fidivrs
mov
cmp
push
xchg
bound
and
add
ret
cmp
push
mov
inc
decl
je
movsl
sarl
pop
mov
xchg
mov
sbb
push
xor
jmp
test
pop
mov
out
xor
and
cmpsl
mov
xor
out
pusha
jge
dec
scas
fidivrl
ror
mov
scas
cmpsl
popa
sub
hlt
adc
shrb
roll
int
clc
inc
xor
andl
jae
js
pusha
mov
jg
add
dec
mov
gs
aad
lods
add
sub
es
inc
or
outsl
xchg
mov
dec
mov
pop
rcrl
out
cs
dec
hlt
hlt
movsl
adc
pop
scas
jmp
imul
test
and
call
decl
in
xor
sub
jg
mov
jge
clc
sub
cld
dec
inc
fidivrl
push
test
dec
push
sub
sbb
add
iret
mov
and
shll
cmc
jmp
inc
jne
xor
js
sbb
in
jecxz
sbb
fnstenv
clc
add
sub
loope
sub
leave
pop
icebp
lcall
frstor
aam
or
lret
insb
add
std
inc
cltd
aas
fsubl
shlb
dec
test
mov
mov
fbld
faddl
icebp
mov
orl
daa
in
jle
outsl
outsb
or
xor
mov
out
mov
adc
adc
sti
and
jo
sti
mov
je
inc
adc
stos
jno
aam
fcompl
es
push
inc
cmc
adc
jne
cmp
jns
nop
mov
cwtl
adc
scas
scas
pop
or
pushl
lcall
mov
push
enter
push
inc
jae
aam
dec
adc
pop
lods
or
mov
sub
orb
push
data16
push
pop
lcall
xchg
mov
lret
fimuls
hlt
jecxz
lahf
mov
mov
mov
cmpsb
dec
mov
lods
popf
dec
jle
pop
enter
js
incl
popf
mov
inc
push
sub
inc
mov
incl
sub
and
mov
sub
push
cltd
push
add
decl
and
xor
xchg
cmp
scas
xchg
or
into
dec
sub
xor
adc
cmp
daa
fwait
decl
cs
imul
mov
mov
int
arpl
mov
pop
mov
mov
mov
loop
jg
ret
aam
jo
push
and
lods
ss
ja
cli
decl
fisubs
popa
in
shrb
mov
cld
call
jmp
mov
sarl
xor
arpl
mov
fbstp
mov
xor
push
dec
xchg
mov
fisttps
mov
mov
cmp
jmp
dec
loop
mov
negb
mov
push
rcr
inc
fldcw
pushl
mov
xchg
outsl
dec
stos
std
inc
sub
cmp
cld
test
mov
je
test
adc
push
decl
imul
mov
testl
jo
and
sbb
lret
stc
jmp
decl
faddl
add
and
adc
cmc
adc
decl
jae
adc
dec
daa
push
xor
pop
mov
sbb
mov
repz
mov
jmp
test
sbb
adc
pop
ret
push
inc
aas
lea
decl
adc
ss
out
mov
jp
xor
add
lahf
mov
decl
mov
lods
je
mov
sub
xchg
aas
sub
sub
push
jae
std
jnp
movsl
addr16
ret
sbb
imul
popa
mov
arpl
cmc
js
xchg
push
mov
add
call
xchg
or
push
in
out
repz
and
push
cli
aaa
addr16
xchg
idiv
lcall
add
out
jbe
pop
test
or
inc
cmpsb
xchg
jo
je,pt
cmp
mov
lea
dec
adcl
dec
scas
and
xchg
jb
stc
out
and
jp
movsl
dec
ljmp
outsb
cmp
cli
mov
js
dec
push
jae
rcrb
enter
xor
xchg
or
pop
out
fidivrs
pop
jmp
jg
iret
roll
shll
call
daa
icebp
push
jns
mov
leave
rcrb
jmp
inc
sbb
addr16
fdivr
and
dec
xlat
inc
dec
mov
fadds
sub
in
dec
or
ljmp
cmpsb
dec
pop
add
adc
inc
fldcw
add
cmp
lea
in
jmp
das
dec
in
scas
mov
mov
mov
xchg
xor
js
xor
aaa
call
cmpsb
mov
mov
mov
into
jle
lret
lea
mov
sub
and
push
push
out
mov
out
dec
mov
in
xchg
lods
or
mov
mov
incl
sub
out
push
adc
mov
and
clc
dec
icebp
ljmp
lahf
pop
out
test
movsl
andb
outsl
mov
rcrl
jne
fs
ljmp
repz
gs
mov
add
aas
sbb
mov
mov
pop
incl
inc
adc
arpl
sahf
jne
sbb
cmp
cmp
inc
cmp
mov
call
movb
xchg
pusha
jns
dec
push
jne
stc
push
inc
aaa
pusha
loopne
bnd
stc
mov
pop
lcall
popf
enter
call
adc
push
fmuls
jne
mov
inc
call
cli
mov
gs
adc
xor
mov
incl
adc
mov
rcl
bound
les
and
cmp
push
and
ljmp
test
fwait
rolb
add
mov
arpl
repz
or
or
cmc
call
sub
fs
fsts
fsub
cmp
in
insb
jg
movsl
mov
lcall
sub
les
enter
inc
pmaxub
jns
mov
std
pushl
repnz
push
iret
add
adc
in
push
cmc
je
lock
call
dec
test
aad
sbb
mov
out
sbb
pop
or
push
loopne
mov
es
and
push
push
gs
sti
out
mov
aas
jb
jb
lock
incl
lahf
insl
out
loop
pop
xchg
jns
lods
cmp
dec
mov
into
dec
sahf
pop
roll
daa
xchg
push
push
es
cmpsb
divb
jno
rcrl
jmp
cmp
mov
lods
insl
int3
dec
cmp
mov
andl
decl
xchg
lods
shrl
mov
les
push
loope
lcall
xchg
inc
xchg
xor
jg
pop
loopne
clc
outsb
fadds
fmul
xor
pop
rol
ljmp
xchg
repz
adc
adc
cmpb
mov
fwait
sub
add
bound
pop
icebp
loop
sbb
push
jnp
jg
es
stos
add
stos
pop
push
cmp
hlt
imul
cs
mov
jg
roll
and
stos
jo
xor
mov
pop
in
inc
cli
pushl
xchg
pop
test
es
mov
mov
sub
xor
inc
xor
pop
jp
push
std
add
mov
shr
pushl
pop
jmp
xor
rorb
and
js
cld
jecxz
fcmovnu
xchg
add
sbb
cmp
add
adc
jns
inc
pop
mov
xor
test
and
daa
fs
gs
call
shrb
or
faddl
int3
add
adc
aaa
sbb
add
clc
lcall
lret
push
scas
loopne
xchg
in
les
jo
push
sarb
cltd
test
in
jecxz
mov
xor
ljmp
into
dec
and
repz
push
das
lea
movsl
les
jg
xchg
lods
xor
movsb
fbld
pop
fsubs
mov
or
into
repz
in
cmp
mov
shlb
rcrl
fcomip
decl
insb
push
js
les
hlt
faddl
cmp
fcomip
add
mov
add
clc
sub
decl
sti
xor
fldcw
mov
ljmp
shll
mov
ljmp
fbld
movsb
sbb
ret
les
pop
cmp
mov
inc
mov
add
cli
xor
adcb
jbe
dec
xchg
mov
add
push
mov
stc
adc
push
data16
adc
push
pushl
inc
sbb
popf
add
xor
and
jge
sub
jl
inc
sbb
jmp
das
push
xchg
adc
lods
jns
rclb
fsubs
dec
scas
cmp
adc
repnz
fistl
sbb
lret
lds
movsb
lods
mov
sbb
test
sub
pushf
dec
mov
add
roll
inc
loope
adc
popl
jecxz
and
mov
or
call
in
jne
addb
subl
dec
leave
mov
test
loop
fwait
movsl
int3
lods
sbb
ljmp
rclb
xchg
dec
inc
xchg
outsl
and
jg
mov
mov
in
dec
adc
popa
and
int3
lock
fidivl
fcompl
inc
jns
clc
out
out
and
cmp
pop
lcall
mov
pop
cmpl
dec
pop
daa
icebp
mov
lods
popf
jne
bswap
and
jle
mov
ja
add
cmp
cmpsb
xor
insb
roll
int
or
adc
jo
xchg
adc
add
jmp
cmp
cs
out
jnp
mov
mov
mov
push
call
pop
sub
push
mov
sbb
add
push
inc
mov
fnstenv
lret
xchg
cmc
cmpsb
xor
cmp
decl
sbb
test
gs
test
clc
imul
mov
in
mov
stos
in
in
stos
rorb
rclb
or
dec
jle
ja
js
and
push
xlat
ret
xchg
mov
incl
inc
xchg
std
ret
mov
and
jb
jmp
cmp
dec
lret
xchg
rclb
fimuls
push
pop
cmp
cmp
cltd
jbe
xchg
cmp
push
ficompl
lock
jmp
push
and
adc
xchg
lods
xchg
inc
add
add
incl
mov
pop
lock
or
cwtl
out
mov
dec
insb
fldenv
mov
mov
jmp
sbbl
mov
pop
and
xor
outsl
mov
push
and
xchg
push
mov
dec
jns
outsb
or
xor
test
fadd
or
and
pushl
dec
mov
mov
dec
out
cmpxchg
or
xchg
dec
ss
call
jno
mov
sbb
pop
mov
pushl
shlb
test
sti
dec
hlt
fcoms
sbb
jmp
lds
je
mov
cs
jns
sub
ror
out
fstpt
adc
push
xchg
shrl
jle
sub
ja
nop
rorl
jecxz
stos
in
cmpsl
inc
mov
mov
jae
fs
fcmovu
or
call
xor
ss
push
dec
xchg
xor
jg
in
lcall
adc
add
mov
jne
jmp
jg
cmp
add
xchg
dec
adcb
ljmp
insl
jle
mov
cwtl
shlb
adc
fimuls
gs
dec
and
shll
push
or
cmp
xlat
jbe
neg
pushf
or
push
popf
ds
enter
push
mov
es
fbstp
cli
pushl
add
iret
mov
xor
cwtl
mov
cmp
cmp
pop
or
mov
aaa
psubusb
and
mov
popa
or
sar
dec
jmp
mov
bound
xor
enter
or
jmp
int3
call
pushf
mov
test
shl
adc
xchg
mov
scas
fdivrl
and
decl
push
cmp
std
rcll
xor
xor
out
js
add
decb
call
cmp
mov
icebp
xlat
cmpsl
add
aaa
cmp
push
mov
fisttps
push
imul
lret
pop
outsl
in
movsb
push
mov
ret
popa
ljmp
repz
fwait
loop
xchg
cltd
mov
fisubl
shll
inc
fsubr
adc
add
pop
pop
mov
outsb
xchg
fnstcw
sahf
enter
mov
dec
popf
into
ljmp
cmp
dec
and
mov
or
mov
incl
adc
lret
jnp
pop
out
inc
or
jne
fsub
sbb
es
pop
in
lods
popa
cs
pushl
arpl
dec
fadds
jle
sub
andl
or
pop
mov
fildll
jmp
jbe
push
bound
sarb
jl,pt
push
ret
jmp
dec
adcb
mov
ljmp
mov
andl
mov
je
pushw
addl
and
out
lods
cmp
lcall
dec
mov
fdivl
lcall
or
jnp
pop
or
mov
loopne
pop
out
sti
fldl
mulb
lods
mov
ret
movsl
sarb
sub
fcomps
ljmp
mov
in
hlt
imul
sub
adc
daa
add
jecxz
push
aad
add
andl
push
fistps
and
mov
inc
out
xlat
mov
mov
cmpsb
lahf
bnd
dec
pop
hlt
sub
cwtl
sbb
cli
lcall
pusha
or
outsl
out
push
mov
leave
in
and
xchg
insb
in
mov
out
or
shl
sahf
mov
cli
test
xchg
pop
jo
mov
sbb
incl
jae
sub
jle
push
pushf
iret
scas
stc
out
mov
and
jnp
cmpsb
pushl
push
outsl
pushf
idivl
ret
aas
push
sbb
or
xchg
jmp
insb
scas
divb
pop
arpl
mov
stos
push
repz
mov
inc
and
int3
pop
test
mov
or
push
jnp
xchg
incl
sub
and
movsl
push
push
lds
cmpb
and
pushl
pop
aaa
jp
add
and
or
cwtl
popa
dec
or
loopne
call
jecxz
pop
and
or
ret
lock
call
incl
in
inc
aam
imul
call
mov
pop
push
push
mov
std
call
lods
add
mov
jmp
xchg
adc
jmp
out
or
ret
or
popf
cmpsb
mov
push
jne
mov
push
pop
or
cmp
cmovno
jmp
push
cld
fstl
negl
mov
sbb
push
sub
jg
es
jmp
cli
aaa
mov
fucom
mov
insl
pop
xor
das
out
cmp
xlat
addr16
test
mov
adc
jg
inc
ja
ja
adc
rcl
lret
pop
popa
cli
incl
jg
or
cmp
and
sahf
aam
adc
scas
mov
push
or
or
adc
jle
push
mov
loope
decl
jp
push
shll
loopne
jno
mov
aaa
pop
test
and
pop
hlt
ljmp
lahf
xchg
and
sbb
jmp
push
xchg
xor
jmp
clc
sbb
add
mov
ret
xorl
xlat
mov
push
xchg
jns
insb
in
call
mov
jae
adc
scas
dec
xchg
add
cmp
adc
aad
sub
mov
test
add
clc
cltd
adc
test
iret
mov
dec
jg
lods
adc
dec
mov
mov
pusha
xor
fidivrs
sahf
pushf
dec
and
sub
or
push
mov
daa
or
xor
ret
fwait
mov
pop
xchg
push
jnp
jp
ffreep
pop
test
push
xlat
es
cmp
incl
sti
outsb
xchg
rolb
jno
rcl
stos
fs
sahf
adc
movsl
xor
xchg
pushf
out
cmpsb
jge
push
and
sbb
mov
mov
pop
inc
lock
dec
dec
jbe
mov
jno
sub
cmp
aad
ljmp
xchg
bound
pop
xor
or
gs
cmc
adc
sub
decl
or
lcall
clc
jg
pop
add
mov
pop
test
insb
adc
decl
mov
cmp
movsb
jno
jnp
mov
sarb
cltd
or
jg
hlt
adc
pop
dec
lcall
clc
mov
inc
nop
lods
cltd
pop
lods
decl
push
mov
push
mov
mov
jb
popa
ret
mov
push
jne
cli
and
and
cld
call
lds
cmp
mov
ret
shr
cmpl
adc
mov
jmp
sti
in
push
ss
and
dec
test
cwtl
mov
fsub
and
cld
in
lcall
mov
inc
and
fnstenv
jmp
icebp
sub
into
pop
lret
lcall
int3
sub
or
fildl
ret
arpl
push
fcmove
gs
xor
std
ret
pop
cmpsb
push
cmp
loope
lret
insl
lock
in
into
xor
ljmp
cmc
orl
dec
or
gs
fnstcw
lods
addr16
subl
test
lret
sbb
frstor
sub
hlt
in
push
inc
sti
stos
and
pop
add
ret
sub
inc
rcr
inc
lds
addb
add
incl
or
add
bound
mov
add
mov
scas
insl
add
jg
add
pop
xchg
andl
jg
scas
mov
fwait
inc
add
add
dec
addb
in
or
adc
pop
mov
mov
dec
adc
scas
mov
psllw
jg
add
setl
scas
repnz
inc
xor
cld
inc
in
or
jnp
xchg
movsl
push
daa
add
repz
xchg
dec
and
cmpsl
push
and
cs
push
movsb
inc
scas
push
into
push
and
stos
push
and
push
test
and
pop
mov
xchg
imul
lds
add
mov
pop
sbb
jg
sbb
mov
sbb
inc
mov
pusha
sbb
mov
cmpsb
ds
les
push
adc
fs
mov
insb
fwait
out
decl
add
imul
imul
imul
into
mov
jbe
fldenv
lods
xor
pop
stos
pop
mov
mov
ss
mov
jbe
add
jo
mov
push
shll
add
outsl
push
shll
push
jo
push
fidivrl
iret
outsb
or
push
ret
mov
sbb
jns
out
jge
fisttps
aam
xorb
ljmp
movsb
push
add
mov
cmpl
jae
shlb
mov
push
jge
sub
jne
push
aam
clc
imul
add
mov
or
dec
add
sbb
push
data16
inc
xchg
ja
aaa
add
push
push
shlb
lret
insb
pop
rep
stos
aas
add
ja
push
loopne
lods
sti
push
xlat
jne
add
ja
push
pop
fsub
mov
aad
push
xlat
ja
js
push
jns
or
mov
jp
inc
push
fidivrl
sarl
adc
push
fldl
insl
mov
inc
jmp
ljmp
xchg
ret
out
ss
xchg
cs
cs
xor
ja
xchg
xor
xchg
push
setbe
xor
dec
fisttpl
push
lcall
testl
push
pushf
cmp
popf
inc
mov
pop
xchg
popf
aas
push
sahf
inc
push
lahf
inc
lahf
mov
out
mov
push
jecxz
push
imulb
mov
movl
out
iret
repz
stc
cli
sti
lock
iret
repz
std
incb
jecxz
arpl
mov
insb
lea
add
jo
imul
es
add
pop
add
pop
add
int3
data16
pop
push
sbb
fadds
mov
and
mov
add
add
mov
add
add
insb
mov
pop
or
test
test
pop
stos
stos
cmpsl
or
push
sbb
mov
pop
adc
add
fwait
adc
lods
add
pop
jne
fmul
stos
femms
lods
lods
pop
mov
mov
push
scas
add
scas
insl
lods
pop
pop
push
inc
jo
adc
and
pop
sbb
sbb
scas
scas
scas
sbb
mov
mov
jb
add
and
jns
pop
push
mov
push
add
mov
jb
ret
or
and
mov
and
and
mov
and
add
cmp
mov
pop
mov
sub
xor
mov
add
addr16
sbb
mov
ss
and
cmp
pop
roll
pop
aaa
cmpsb
add
aaa
add
inc
mov
xor
pop
addr16
add
out
insl
pop
pop
xor
mov
pop
das
push
cs
xor
add
xor
aaa
in
std
xor
pop
push
push
xor
adc
pop
push
cs
dec
inc
das
inc
inc
xor
incl
adc
push
xor
push
push
popa
jbe
cmp
jl
jge
jno
decl
add
pusha
pop
pushw
dec
dec
cmpb
jo
in
pushl
mov
mov
cwtl
sahf
mov
pushf
fwait
lcall
xchg
mov
test
xchg
xchg
sub
dec
ja
jns
mov
in
dec
push
bound
js
imul
cmp
je
adc
mov
daa
xchg
or
jo
int3
add
add
rcr
pop
scas
aas
mov
push
outsl
dec
aas
out
sti
jle
xchg
pop
push
dec
add
push
mov
mov
push
mov
xor
xor
ja
push
ja
mov
inc
cs
xor
mov
and
pop
jbe
dec
sbb
popf
mov
mov
xchg
jo
cmpl
mov
inc
int
divb
add
xchg
jp
inc
push
popf
inc
mov
std
int3
ljmp
add
xchg
jno
lret
push
bound
mov
mov
inc
push
lahf
inc
inc
push
sahf
mov
gs
add
outsb
add
xchg
xchg
pop
push
rcr
mov
test
push
dec
push
movsb
jae
add
jb
pop
sub
test
push
mov
push
rorb
int
add
add
lcall
outsb
mov
in
mov
add
ja
sahf
jbe
fistpl
imul
sti
or
stos
push
add
and
es
js
aaa
sti
inc
mov
data16
shrl
insb
frstor
push
outsl
ror
push
fisttpl
jle
ds
jno
add
jge
push
jg
fiadds
insl
fisttpll
lock
mov
in
mov
mov
out
lret
loopne
mov
sahf
mov
jb
cmp
fcmovne
out
in
push
jle
or
jecxz
or
mov
fnstcw
aad
push
divb
fildl
adc
dec
movsl
jns
push
adcl
insl
push
sbb
sbbl
test
test
sbb
cmp
in
mov
push
xchg
nop
and
mov
mov
out
xchg
in
xchg
lock
sub
sub
dec
sti
rolb
outsb
out
xchg
das
push
xchg
repnz
fstp
cltd
xor
cwtl
push
cmc
sahf
xor
lcall
or
cmp
pop
movsb
add
cmpsl
push
cmpsb
scas
jo
test
adc
ret
mov
shrb
into
shll
add
int
mov
mov
sarb
repz
rcl
mov
push
inc
jp
ret
data16
add
addr16
adc
std
dec
out
je
add
xchg
inc
dec
daa
push
test
add
and
femms
or
or
out
in
mov
or
es
push
adc
push
add
sti
pop
adc
adc
ds
add
xor
pop
mov
xor
ds
loop
mov
mov
mov
mov
mov
push
add
and
mov
mov
loopne
ds
mov
xor
aad
aas
and
lock
mov
xor
or
push
enter
aas
cmp
lret
jae
cmp
cmp
add
mov
sbb
inc
jbe
cmpsl
insl
mov
cmp
inc
jle
adc
jbe
cmp
dec
mov
scas
ds
jle
aas
addr16
ds
xor
dec
inc
popf
test
scas
add
jge
addb
xor
pop
mov
xor
outsl
ds
lods
stos
test
cmpsl
cmpsl
cmpsb
cmpsl
add
jg
jg
test
mov
sahf
ds
xor
sub
sub
sub
sub
or
ss
and
xor
inc
mov
push
push
push
push
push
imul
push
pop
push
push
push
imul
fs
das
pop
imul
jne,pt
fwait
cwtl
xchg
pusha
xchg
nop
cltd
mov
mov
nop
test
jmp
je
xchg
jns
jle
addl
jb
jae
jo
outsb
pushf
sti
lds
loopne
jge
test
add
popa
jo
mov
out
orb
imul
outsl
push
nop
repz
dec
xor
out
jmp
jae
aas
add
xchg
pop
cmp
test
add
mov
add
ljmp
mov
push
mov
fnstsw
repnz
inc
add
addr16
add
cmpsb
mov
add
ret
push
in
lcall
or
mov
fdiv
push
or
jae
js
pop
into
xchg
add
mov
mov
test
rorb
sub
push
and
out
pop
fistl
call
sub
xchg
push
sub
fcmovne
insb
push
nop
sub
xchg
xor
xchg
xor
insl
lcall
leave
jbe
idivl
mov
sahf
in
fidivrl
shlb
iret
push
lret
mov
xlat
push
std
into
and
out
fldcw
xchg
add
test
jg
jle
jge
and
cmp
push
xchg
and
call
dec
add
pop
add
push
dec
or
adc
div
mov
cmp
adc
dec
or
add
push
stc
pusha
jg
adc
add
or
pop
pop
cmovg
std
pop
repz
sbb
inc
adc
cmpsl
aas
inc
inc
inc
adc
sbb
dec
add
dec
adc
inc
ds
aaa
aaa
inc
add
aas
cmp
cmp
daa
and
sbb
sbb
and
add
dec
ss
xor
cs
xor
sub
sub
jg
test
lods
mov
addb
mov
pop
inc
mov
data16
mov
mov
mov
inc
xor
in
add
outsb
mov
push
or
add
add
and
sbb
cs
pop
outsl
mov
cmpsl
mov
rorl
into
incl
loopne
and
jmp
test
push
es
sbb
outsb
sysret
shrl
pop
mov
add
ds
jmp
xchg
pushf
cmp
in
lock
add
xorps
jg
rorl
adc
pop
aaa
outsl
adc
pop
push
pop
mov
add
xor
sbbl
mov
out
cli
mov
cli
call
pop
les
add
pop
jg
and
add
addr16
xor
mov
adc
jg
sti
jg
add
mov
das
sti
mov
xchg
sbb
cli
jle
mov
inc
loopne
dec
sti
jg
adcl
xchg
adc
push
adc
push
mov
push
adc
jg
cld
jg
mov
nop
cld
mov
mov
roll
std
jg
and
into
jg
jns
and
jg
push
adc
or
xor
and
jle
push
add
inc
xor
and
sub
incl
addr16
inc
lods
decl
rcll
incb
sbb
pusha
data16
popa
xchg
sbb
jg
dec
add
incl
add
lea
jg
inc
insb
or
push
jbe
fsts
pop
add
jmp
int3
push
test
lret
sub
xchg
shrb
je
push
jmp
lods
scas
inc
cmpb
imul
addr16
inc
pop
jle
mov
inc
pop
dec
rcrb
test
pop
add
push
call
inc
pusha
sbb
pop
xor
jg
mov
lea
outsb
xor
xor
jg
das
sub
add
push
adc
jmp
pop
mov
jg
jle
ljmp
notb
stos
pop
push
stos
pop
stos
pop
pop
mov
in
popf
pop
add
daa
aas
aaa
pop
xor
pop
pop
add
pop
xor
push
jle
add
pop
inc
push
lcall
jle
sbb
jne
jle
push
in
je
pusha
dec
xchg
push
bound
add
mov
push
mov
les
arpl
pop
insl
xchg
popa
das
push
mov
aam
out
mov
xchg
push
dec
inc
push
and
incl
jno
and
test
aam
sub
push
inc
lea
into
push
fnstenv
fidivrs
jne
push
push
jne
pop
push
jbe
test
push
jnp
push
jp
dec
or
push
js
dec
jbe
fisttpll
add
mov
inc
call
pop
es
or
jbe
outsb
decl
cmp
jle
and
daa
aam
incl
ss
test
pushl
dec
xchg
dec
ja
xchg
inc
subb
mov
insl
adc
xchg
push
inc
call
dec
mov
adc
outsl
push
sahf
inc
out
mov
mov
mov
aas
popf
inc
push
or
mov
pushf
cmp
data16
push
xchg
xor
xchg
xor
sub
sub
nop
daa
ss
repz
sarb
in
mov
xor
aaa
outsb
lcall
stos
test
sbb
cmpsl
addl
ja
xor
inc
sahf
xchg
rclb
or
pop
cs
add
aam
rclb
ja
iret
or
mov
xchg
mov
test
ja
cmpl
inc
divb
mov
add
adc
inc
bound
out
cmpb
push
insl
sbb
add
outsl
orb
dec
gs
mov
add
negl
orl
lea
out
lds
xchg
xor
call
xchg
inc
and
cmp
lock
cmp
push
jmp
cmp
icebp
or
std
punpckhwd
push
in
add
mov
cmpb
decl
add
pop
testb
dec
push
mov
mov
pop
push
inc
push
call
push
mov
xor
cmp
add
adc
mov
add
mov
incb
add
pop
mov
pop
lcall
or
mov
ds
sub
inc
int3
push
das
pop
cld
jmp
push
shlb
in
push
inc
dec
push
lcall
std
out
or
xchg
btc
or
lcall
or
jo
sub
mov
lds
decl
mov
incl
les
outsb
ljmp
jmp
test
push
call
inc
xor
xor
sub
inc
inc
ret
sbb
or
jmp
sbb
push
xor
xor
scas
jmp
mov
or
mov
nop
mov
mov
inc
xchg
or
mov
xor
push
iret
jle
adc
aad
cltd
mov
inc
loope
adc
test
dec
push
push
incb
dec
add
adcb
pusha
adc
aaa
incl
mov
movsb
xor
mov
lcall
xchg
or
sub
cmp
add
sti
push
std
pushl
adc
push
add
pop
and
or
cld
pop
and
mov
and
in
call
jg
fldl
cli
idiv
loop
sub
sarl
xchg
decl
dec
and
pop
lret
mov
leave
fcmovbe
pop
pop
inc
cmovs
outsl
push
pop
aaa
mov
push
push
push
shll
icebp
push
mov
roll
dec
jnp
mov
sahf
ret
incl
pushl
fisttpl
ljmp
lahf
inc
in
fcmove
jnp
push
inc
inc
pop
inc
pop
out
ss
mov
movsb
out
fldcw
push
stos
push
popf
inc
cmpsb
dec
dec
inc
imul
mov
fsts
add
and
ss
mov
out
push
shrb
rcl
outsb
shrb
es
push
jb
stc
xor
iret
insl
cmp
xchg
adc
daa
outsl
pop
and
dec
cmpsb
imul
int
push
push
call
inc
ljmp
push
ljmp
movsl
and
dec
in
pop
int
repnz
decl
mov
cmpsb
popfw
cmp
aas
decl
fwait
decb
cwtl
xor
and
push
xchg
push
push
aaa
push
lcall
ss
xchg
push
xchg
es
and
imul
xchg
dec
out
push
sub
lcall
xchg
aam
ljmp
and
ds
sbb
xor
mov
push
add
sarb
aad
or
faddl
cmp
push
push
jnp
jp
or
jl
push
imul
jl
push
jge
mov
jg
es
jbe
adc
fidivrl
push
dec
data16
pushw
dec
repnz
repnz
jae
pop
fidivrl
push
mov
repnz
loope
out
add
in
add
int3
outsb
nop
pusha
push
push
leave
negl
pop
add
inc
push
push
pop
add
sbb
adc
push
adc
or
push
addb
jnp
lahf
dec
es
addl
cmp
adc
sysret
jg
and
xchg
out
push
sub
iret
sbb
sbb
jo
mov
cli
pushl
clc
push
idiv
push
sub
jg
mov
icebp
dec
pop
ja
mov
lock
inc
sub
jg
mov
icebp
leave
fucomip
or
je
daa
jg
mov
or
add
loope
xchg
mov
cld
jp
es
xchg
test
cmpb
pushl
add
out
xchg
decl
mov
jg
dec
in
sarb
dec
stos
pop
ja
dec
and
mov
icebp
idiv
inc
lcall
fsub
lahf
inc
mov
push
int3
incl
push
dec
mov
jle
mov
fidivrl
arpl
clc
xchg
aam
decl
mov
xchg
pop
push
pop
or
dec
sbb
mov
adc
lcall
jns
mov
test
mov
push
mov
jmp
xchg
int3
data16
sbb
in
sbb
xchg
mov
loop
adcb
xchg
out
sbb
loope
and
lret
jg
out
mov
inc
xchg
sbb
or
fisubrs
testb
pop
add
stc
inc
or
std
xlat
push
cmovno
or
mov
and
mov
add
push
pop
mov
mov
dec
mov
add
lret
add
rorb
imul
mov
pop
lret
adc
inc
hlt
push
fwait
call
mov
adc
sub
cmp
inc
test
pop
push
imul
add
cmpsb
cmp
and
sub
mov
push
sbb
outsb
or
push
jne
xchg
decl
inc
adc
orl
adc
adc
clc
xchg
mov
push
push
mov
jno
inc
or
lmsw
outsb
xchg
mov
inc
push
gs
jo
icebp
addb
add
insl
dec
push
stos
add
cltd
sub
and
xor
mov
and
sub
jno
adc
ss
push
aaa
xchg
adc
sub
pop
add
sub
add
rcrl
xchg
inc
jmp
lahf
jo
das
ss
cltd
mov
sbbl
movsb
outsl
jb
inc
jge
pop
std
dec
xor
pusha
insl
and
and
adcb
and
fisubrs
mov
push
mov
add
sbb
push
jbe
sbb
loop
adc
and
mov
push
test
pop
and
mov
ret
pop
popf
in
mov
inc
rcll
popa
bound
inc
xchg
adc
jb
xchg
lea
jae
or
add
ficompl
mov
xorl
and
and
clc
pop
pop
or
icebp
addb
jo
les
add
sub
or
pushf
jnp
idiv
sbb
inc
cmc
add
xchg
mov
scas
jo
xor
dec
push
outsl
loop
roll
push
dec
les
pop
xor
dec
fwait
ljmp
pop
pop
sti
loop
dec
insb
out
inc
imul
sbbl
pop
add
icebp
inc
adc
add
pusha
in
insb
jne
adc
sub
in
push
mov
adc
nop
xchg
or
or
shrb
mov
sbb
add
cmpsl
inc
insb
arpl
enter
pop
arpl
push
scas
cmp
add
lds
fiaddl
roll
pop
push
cmp
push
imul
sarl
inc
je
loop
mov
cwtl
sub
ret
add
cmp
jnp
sbb
cmp
jo
je
arpl
in
xchg
sub
pushl
lahf
mov
xor
mov
dec
sub
sbb
adc
inc
push
cmp
adc
xchg
cmp
adc
pop
sbbl
fcoms
mov
test
sbb
sbb
jb
dec
and
mov
jmp
adc
insb
cmp
clc
ret
or
je
mov
mov
bound
iret
invd
aad
mov
insb
pop
and
imul
icebp
popa
and
pop
test
pop
add
sbb
add
and
or
dec
ficoml
mov
and
loopne
pop
jp
dec
sbb
fbstp
dec
jo
push
jae
xor
lea
push
add
mov
mov
fistl
nop
mov
adc
ss
inc
imul
shll
sbb
pusha
insb
test
pop
inc
or
sbb
pop
adc
test
adc
sbb
sahf
popa
je
jne
inc
mov
adc
gs
outsl
jae
push
or
add
push
outsl
mov
ret
xlat
push
jae
mov
xchg
clc
add
shll
daa
xchg
fldenv
xor
and
imul
arpl
mov
mov
sub
aas
sub
xchg
pop
sub
movsl
lods
add
mov
out
mov
insb
lret
sti
cmp
movsl
insl
jnp
push
inc
fnstenv
mov
imul
jo
mov
arpl
test
fdivs
andb
ss
inc
es
lds
push
arpl
mov
and
fcmovne
cmp
jne
sub
pop
fs
or
push
add
rcpps
js
push
jb
mov
inc
inc
xchg
popf
ljmp
jmp
imul
mov
in
lds
mov
ja
insb
stos
sbb
jo
shrb
push
cld
sub
fisubrl
sub
mov
ret
lea
loop
sbb
push
stos
dec
inc
add
xchg
add
adc
outsb
sub
jg
jns
adc
cmp
push
jo
xchg
cmp
and
push
les
xor
dec
std
addr16
and
jb
xor
inc
inc
push
xor
cmp
lods
and
fs
inc
sbb
insl
mov
or
fisubl
pop
inc
je
out
adc
insl
dec
outsb
dec
std
lea
cli
mov
pop
adc
das
xor
sub
push
push
js
add
mov
dec
add
sbb
mov
dec
rcrl
add
or
xor
shll
movhps
mov
or
mov
dec
pop
add
es
pop
add
inc
add
push
inc
outsb
or
add
sbb
and
add
rcr
imul
and
shlb
ret
pop
out
test
pop
or
xor
sbb
insl
subb
je
adcb
inc
loopne
scas
mov
sub
pop
add
scas
dec
xchg
sbb
cli
test
xor
mov
xor
jno
sbb
js
add
adc
xchg
and
sbb
jo
inc
sbb
scas
lcall
or
mov
or
fdivrl
adc
mov
mov
inc
cmp
xchg
lods
dec
mov
arpl
cmp
negb
fs
push
jge
cmp
pusha
inc
out
pushf
xor
dec
js
push
xor
and
aad
lcall
aad
pop
imul
push
jo
popa
cmpl
mov
lock
fsubr
subb
hlt
mov
nop
inc
gs
lea
xlat
adc
push
movsl
xor
mov
adc
inc
mov
jg
nop
pusha
insl
inc
inc
xor
dec
xchg
sbb
out
arpl
outsl
bound
inc
and
mov
mov
inc
ret
lods
outsb
jbe
pusha
lds
test
sbb
adc
es
add
mov
cs
dec
insl
jmp
inc
push
xchg
mov
sub
or
rcrl
daa
dec
cld
addr16
adc
add
enter
test
pop
xor
adc
les
jmp
nop
adc
test
sbb
imulb
pop
adc
nop
fs
mov
cmp
jns
stos
xor
and
cmp
jbe
sub
out
mov
cmp
mov
fiaddl
xchg
or
inc
scas
inc
sub
aaa
sbb
xor
adc
lods
mov
jbe
enter
or
mov
push
mov
jecxz
push
inc
inc
xchg
sbb
mov
sub
push
lret
sbb
daa
lods
or
arpl
jo
jbe
lcall
xor
outsb
inc
test
jp
sub
xor
movsb
pop
inc
pop
jo
aaa
sub
add
inc
rcl
pop
leave
ss
push
cmp
adc
lea
sub
mov
test
enter
and
add
add
jo
add
jg
jbe
rorl
mov
mov
je
movb
ljmp
mov
adc
mov
ja
testb
pusha
ja
fiadds
call
push
cld
push
mov
enter
mov
data16
push
movlps
out
int3
inc
sbb
push
xchg
ja
jp
andl
and
fisubs
adc
cmp
add
mov
add
add
add
pusha
mov
lea
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
add
inc
add
