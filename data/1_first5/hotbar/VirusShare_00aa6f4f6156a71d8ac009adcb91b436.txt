divb
in
mov
mov
rorb
add
add
sahf
int3
das
int
in
jg
shlb
or
and
push
je
and
out
je
push
call
push
add
sub
push
ret
in
divl
jne
mov
or
call
xchg
push
push
sbb
stc
out
aas
mov
test
je
cmp
movl
cmp
jae
dec
movzwl
lea
jne
sbb
xor
jmp
and
neg
fidivrs
and
pop
pop
mov
or
call
push
push
sarl
stc
shrl
jp
lock
jge
add
pop
push
push
push
push
xor
mov
mov
movsl
std
in
pop
scas
cmp
inc
add
cmp
pushf
or
push
rcrb
sahf
push
mov
push
xor
fidivl
fcoms
cmp
adc
mov
ret
mov
jmp
jmp
pushl
jbe
adc
lea
or
lock
dec
test
jg
mov
or
add
cs
add
ret
std
imul
xchg
add
mov
pop
inc
push
adc
add
inc
fcoms
rol
jo
mov
push
mov
xor
sbb
add
push
add
aaa
fwait
mov
mov
or
data16
sbbl
sarl
push
lahf
add
xchg
notl
andl
mov
push
sub
mov
hlt
cs
jbe
xor
sbb
adc
cwtl
mov
lock
pop
imull
dec
shl
in
or
jo
mov
xor
hlt
or
pop
cmpsl
push
repnz
in
cmpsb
cmp
lea
fwait
popa
xor
push
call
sub
add
out
push
sbb
push
loopne
xor
test
mov
lea
mov
adc
daa
mov
push
dec
or
add
iret
jbe
ret
ja
pop
xchg
sbb
fdivrs
xchg
sub
ret
test
push
xchg
mov
call
addb
das
or
push
dec
and
add
xchg
es
pop
xlat
push
sbb
test
or
sbb
push
and
add
push
dec
dec
cmp
je
out
push
out
jmp
mov
mov
pop
pop
fs
pop
lods
mov
aad
add
mov
push
sub
mov
pop
push
insl
and
orb
add
push
iret
bound
fidivrl
inc
pop
pop
ljmp
inc
lock
push
mov
cmp
or
jge
outsl
push
rolb
js
sti
mov
mov
xor
mov
pop
ret
arpl
xor
stos
pop
roll
pop
imul
rcrl
sar
pop
inc
sub
inc
clc
sub
pop
or
xchg
es
cmpl
adcl
xorl
sbb
pop
cmp
cli
js
mov
cmp
jg
mov
pop
and
adc
ret
pop
dec
add
mov
pop
and
jmp
enter
xchg
das
pop
push
sub
push
mov
sar
imul
lea
push
cmp
ja
adc
pop
dec
clc
add
push
mov
inc
loope
adc
in
inc
jno
xchg
adc
in
outsb
int3
clc
scas
cmp
jle
mov
cmpl
or
clc
loope
incl
shr
sub
or
cmp
push
inc
jle
add
pop
cltd
sub
rcl
enter
shrl
iret
mov
movsb
pop
cmp
orb
sub
cli
cmp
mov
push
jne
js
incb
add
xor
pop
mov
jle
add
call
jo
add
testl
inc
add
adc
lea
adc
stc
std
mov
and
xor
into
mov
adc
cmpsl
push
cmpsl
inc
cmp
mov
cmpsl
mov
cld
fisubrs
xlat
ja
lods
lea
stos
mov
clc
cmp
roll
mov
mov
jge
test
jle
insb
or
cmp
mov
inc
mov
stos
pop
pop
inc
insl
cmp
loope
or
push
push
cmp
adc
outsl
add
sub
repz
push
jmp
push
lea
lea
inc
push
inc
add
pop
sub
in
pop
push
cli
push
andl
ret
and
sbb
outsb
hlt
adcb
or
jbe
inc
and
cmp
mov
cmp
and
xor
push
push
sti
rcrl
hlt
das
push
out
cmp
jle
mov
inc
or
xor
cmpl
je
push
cmp
cmp
jae
push
cmp
inc
and
adc
cs
or
or
add
jb
pop
adc
pop
adc
pop
leave
fwait
jle
mov
fcoms
jnp
ljmp
in
aaa
cmp
lock
loop
push
push
push
rcrb
sbb
or
adc
or
cmpsb
push
loope
add
jne
pop
nop
out
loop
loopne
cmp
jo
inc
sub
add
aaa
lret
shll
mov
inc
or
pop
or
cmp
add
add
xor
jno
cmp
jne
push
push
push
push
xor
push
test
push
mov
mov
or
pusha
pop
pop
jle
sbb
xor
mov
daa
in
rcr
jne
cmp
lret
xchg
and
add
sub
xor
frstor
insb
mov
lock
mov
cld
pop
stc
add
out
add
sbb
fstpt
mov
add
repz
testl
xchg
pop
mov
and
push
je
xchg
sbb
test
cwtl
ds
xchg
loopne
in
dec
out
mov
ja
stos
or
dec
adc
je
push
adc
aas
clc
pusha
mov
push
repz
inc
xor
push
ss
push
incb
sbb
out
lea
dec
push
xor
adc
lahf
testb
lea
out
jae
pop
shlb
fldcw
add
add
add
jge
repnz
lea
push
dec
pop
xchg
push
cld
fists
mov
fistps
add
push
mov
jb
push
outsl
dec
xor
mov
push
out
fsubrl
adc
and
push
scas
push
inc
sti
add
or
test
cmp
iret
insb
push
cmp
push
push
cmp
je
shll
adc
or
loopne
jne
imul
mov
imul
adc
fwait
or
xor
jb
ja
adc
inc
fsubl
shlb
xchg
cmp
mov
xchg
paddq
mov
aaa
movsl
iret
xlat
mov
mov
mov
or
mov
call
arpl
cs
jno
lods
imulb
xor
sub
jg
inc
dec
mov
or
cwtl
in
cmp
mov
add
andl
or
sub
in
mov
shrl
ss
push
mov
mov
push
adc
lock
lcall
sbb
int3
ret
mov
push
testl
jae
and
mov
aas
pop
loopne
push
loopne
pushl
push
cmp
icebp
add
daa
lret
call
sub
adc
pop
inc
lods
or
enter
add
sbb
je
dec
je
push
xor
push
pop
jmp
push
adc
inc
pop
loop
sbb
movsb
call
add
mov
inc
adcb
push
rcll
jg
int
mov
push
mov
insb
sbb
mov
sbb
mov
inc
and
mov
jae
mov
aam
and
pushaw
pushf
pop
cmc
subl
sub
and
sub
add
xor
aam
test
pop
jle
or
mov
mov
sarb
pop
or
pop
rorl
xchg
and
loop
xlat
sub
lret
ljmp
out
shr
sbb
fisttpl
or
sub
js
and
adc
arpl
loope
popa
add
jle
in
dec
xchg
ds
and
sbb
sar
inc
pop
xlat
andb
je
or
cmpb
lea
mov
fldcw
mov
sbb
pop
movsl
push
negl
pop
ds
das
adcl
pop
dec
sub
adc
mov
push
sbb
or
sbb
push
adc
lahf
cmp
sbb
adc
fists
cwtl
add
pop
sbb
and
add
js
xor
in
js
jl
ret
adc
jb
pop
adc
test
mov
mov
mov
cld
cmp
jg
jne
dec
sbbb
push
cmp
enter
movsl
cmp
les
or
andl
nop
into
or
mov
je
inc
mov
icebp
into
scas
mov
dec
or
or
push
data16
sbb
dec
mov
pop
pop
pushf
sub
pushf
sbb
pop
aas
push
and
inc
and
or
push
jo
int
in
jae
bound
cltd
adc
out
in
sahf
adc
je
scas
jnp
mov
adc
lahf
xor
jbe
pop
ret
lahf
mov
insl
jnp
pop
aaa
push
push
or
mov
xor
dec
sub
fmuls
subl
popa
xor
xchg
xor
data16
push
divb
lcall
orl
je
and
mov
out
scas
mov
int3
sbbb
ljmp
mov
mov
pusha
push
lcall
jo
jne
push
ret
das
pop
add
pusha
add
and
in
aaa
sbb
push
dec
mov
lods
mov
jnp
add
pusha
jp
push
in
mov
adc
insb
movsl
sbb
pop
repnz
je
jbe
in
sub
in
rolb
daa
jo
scas
and
orb
xchg
xor
test
lds
repnz
ds
pop
pop
jmp
sub
popa
jmp
mov
xchg
mov
push
xor
mov
pop
aas
aam
jge
decl
inc
and
fisubl
xchg
xchg
je
out
out
add
push
push
add
insl
cmp
jb
lock
bswap
scas
mov
scas
adc
mov
mov
and
push
je
icebp
bound
adc
xchg
in
push
and
push
filds
or
frstor
add
add
add
fldt
pusha
mov
testb
mov
incb
or
and
test
add
in
sbb
jo
xor
or
push
mov
jmp
ljmp
sub
mov
push
lock
pop
push
sbb
neg
sbb
pop
les
ret
je
push
inc
out
loop
in
and
mov
gs
sub
mov
enter
cwtl
sahf
inc
and
fs
mov
dec
mov
mov
imul
loopne
xor
in
pop
push
add
adc
push
jb
or
sbb
add
mov
cmp
xchg
pop
mov
add
jge
pop
incb
jecxz
dec
inc
outsl
mov
in
das
sarb
sbb
sub
xor
sbb
sub
mov
test
fcoml
dec
jo
xchg
mul
mov
shlb
loopne
jo
cmp
movsb
sarb
js
mov
adc
pop
adc
push
mov
xorl
cmp
cmp
rclb
xchg
rcl
ret
les
pushf
pushf
leave
jae
gs
mov
mov
xchg
dec
mov
xchg
sbb
xchg
xchg
sbb
push
test
mov
xchg
int3
clc
arpl
ret
sbb
leave
enter
ror
cmp
sbb
shlb
sub
ret
sbb
dec
jnp
mov
mov
dec
leave
jae
mov
sub
test
push
test
add
test
jle
pop
pop
pusha
inc
xor
and
insl
inc
ja
and
cmp
testl
loope
hlt
shrb
add
mov
inc
iret
and
cwtl
sub
jo
inc
sbb
call
test
push
or
dec
pop
mov
es
push
ficompl
push
loop
jnp
and
cs
push
xor
sbb
and
add
ret
xor
add
lcall
pop
add
enter
or
jle
lahf
cmp
mov
in
addb
test
and
outsb
and
ficompl
inc
sbb
movsb
and
push
aaa
adc
dec
sbb
orl
pop
push
mov
mov
mov
jae
or
cld
sarl
sbb
ret
lods
pop
test
cwtl
sub
lret
xchg
and
std
and
adc
adc
popl
daa
add
sbb
fsubl
adc
addb
cwtl
mov
mov
cmpl
and
push
pop
push
jmp
popa
mov
ret
push
or
mov
fiaddl
adc
or
sbb
adc
movsb
adc
xor
mov
insl
pop
sbb
push
sbb
fstl
scas
and
jl
and
enter
or
adc
sbb
jecxz
pop
dec
push
dec
mov
in
mov
nop
aaa
xchg
xchg
add
adc
test
sbb
inc
adc
adc
movsl
jno
mov
stc
loope
add
inc
xchg
mov
adc
cmp
aaa
pop
inc
adc
xchg
adc
sub
push
cmc
mov
push
sbb
push
nop
imul
lret
xor
push
and
iret
sbb
sbb
aas
loop
add
inc
jne
shlb
jno
jb
mov
test
enter
sbb
movsb
dec
out
lcall
xchg
mov
loopne
dec
jo
lea
mov
sbb
lcall
fbld
das
jne
push
pushf
pop
nopl
pop
xlat
sbb
shrd
popa
testl
outsl
jg
cmp
je
or
je
xor
push
push
or
push
mov
adc
xchg
mov
pushw
mov
mov
xchg
inc
xchg
and
pop
loopne
das
jecxz
daa
add
inc
ret
or
inc
pop
add
mov
mov
add
test
mov
dec
in
lret
xorb
and
sbb
lock
cmp
add
sti
cmp
je
push
push
pop
ljmp
test
xchg
add
mov
sub
inc
mov
mov
clc
adc
and
shrl
pop
mov
xorb
jmp
dec
cmp
sub
mov
mov
xchg
insb
push
sar
and
stc
sahf
sub
sub
or
bound
inc
xlat
in
add
popa
and
sub
sub
pushf
fstps
add
movsb
std
div
faddl
cmp
negb
aas
rcrl
inc
incb
xchg
inc
mov
cmc
pusha
shrb
test
sbb
loopne
push
fdivl
jns
inc
stc
scas
sub
pop
bswap
pop
test
sub
sub
pop
leave
aam
inc
imul
cwtl
lods
jno
ss
je
sbb
inc
lret
ret
test
cmp
cmp
or
mov
fstpt
cmp
push
stos
add
adc
jb
pop
add
xor
clc
push
insb
push
daa
movsb
xor
test
pop
insb
adc
push
lods
mov
mov
sub
pop
stos
jo
fsubs
jne
jo
out
pop
and
pop
xor
xchg
lahf
mov
inc
sbb
arpl
dec
adc
inc
ret
jecxz
lret
push
push
or
sub
pop
adcb
push
add
test
test
adc
mov
mov
enter
push
push
cld
sbb
sti
lahf
mov
adc
add
pop
cmp
add
or
adc
xor
push
sahf
xor
and
add
mov
hlt
sbbl
sub
nop
negl
inc
mov
jo
push
enter
int3
ds
lds
lea
pop
xchg
add
sub
pushl
jnp
fidivs
dec
xlat
test
xor
dec
push
mov
fsubs
roll
aad
imul
sub
inc
repnz
cmp
mov
and
xor
stc
pop
pop
and
dec
dec
xor
ficoml
cmpl
cmpsb
cmp
mov
repnz
sub
rcll
and
sbb
jne
and
enter
and
xor
andl
lods
rclb
nop
inc
in
xchg
or
ds
cmp
push
jl
jne
bound
pushf
dec
inc
inc
adc
ds
popf
fstpt
rorb
dec
mov
mov
push
or
xchg
pop
icebp
pop
dec
les
adc
dec
stos
xchg
adc
pushl
push
mov
sub
mov
loop
add
in
and
adc
sub
ret
push
je
nop
sub
adc
les
rcll
cmpl
add
iret
sbb
push
mov
mov
dec
sbb
outsb
loopne
sbb
fld
sti
cmpb
jae
jne
push
sub
xlat
ret
call
sub
fisttpll
jne
inc
adc
or
in
gs
orb
jmp
cmp
push
mov
nop
out
adc
pusha
cmp
loope
nop
sbb
mov
jmp
mov
clc
cmpb
daa
fs
push
loopne
and
push
shrb
push
outsb
scas
push
dec
lret
add
inc
das
xchg
sti
sub
inc
repz
out
jge
and
xchg
orb
enter
or
lret
jo
inc
mov
cmp
mov
test
pusha
xchg
push
les
jge
jo
and
cmp
out
jo
xor
daa
dec
rcll
sbb
mov
xor
mul
dec
xchg
jo
inc
xchg
add
pop
or
setne
or
dec
or
mov
rcrb
into
add
icebp
aaa
arpl
adc
pop
out
jne
or
je
sub
fadd
mov
in
sti
loopne
je
loope
jg
inc
das
adc
mov
or
in
sbbb
push
inc
faddl
jl
test
dec
push
pop
pop
sub
jo
test
mov
lods
cmp
lock
fsubrp
out
xchg
or
xchg
cmp
fsubs
add
call
neg
test
imul
sub
repz
je
cli
pop
ror
dec
sarb
inc
mov
pop
jns
sbb
fsub
push
out
inc
out
loopne
cld
inc
test
and
or
nop
inc
aas
fnstenv
imul
lock
or
loopne
lods
sbb
cld
or
mov
push
pop
or
push
or
jg
scas
fdivl
add
or
enter
add
int3
add
mov
or
es
fisubrl
jle
push
fdivr
or
sub
call
dec
xchg
call
mov
add
mov
jnp
lock
dec
inc
sbb
je
sub
jle
cld
out
jmp
jge
imul
cmc
jbe
push
xor
jmp
mov
xorb
int3
int
mov
mov
xchg
int3
test
push
sbb
in
icebp
inc
xorb
xor
fstl
inc
sbb
mov
lea
rolb
mov
mov
inc
hlt
xor
inc
mov
mov
jle
push
dec
cmp
adcb
push
pavgw
ret
jle
call
in
sbb
lock
push
mov
orb
mov
shll
in
paddusb
cmp
pop
filds
mov
push
push
add
pmulhw
mov
jbe
pop
clc
add
inc
sbb
sbb
movsb
adc
fcomps
sub
mov
stos
insl
std
adc
sbb
dec
test
pop
lea
roll
sub
or
cmpl
push
push
jne
aaa
or
rcrb
pop
dec
xor
mov
in
inc
xchg
in
cmp
inc
ficomps
cld
test
sbb
or
mov
imul
or
sbb
add
mov
or
xor
push
push
add
pop
ljmp
or
inc
pop
or
cmp
std
popa
xor
add
mov
das
jle
popa
cmp
inc
nop
es
dec
xorb
push
imul
pop
fmull
jp
fcompl
movsb
adc
add
pop
sar
in
loopne
pop
cld
loopne
orb
add
test
lds
lahf
call
into
sarl
aam
enter
test
or
rcrb
push
nop
or
push
cmove
or
cmp
push
push
in
addb
cmp
sbb
mov
cmp
cli
in
mov
push
rorb
mov
ret
or
in
adc
scas
in
mov
push
push
in
sbb
inc
mov
scas
sbb
or
jno
testl
nop
adc
and
add
cmp
test
shrd
rcr
jb
push
pop
push
push
call
and
fistl
rorl
test
mov
mov
pop
daa
mulb
mov
rcll
dec
or
cmpb
jge
out
clc
sub
mov
mov
out
or
push
jge
in
arpl
and
pop
arpl
xor
pop
or
sbb
pop
lock
loopne
mov
cmp
addb
and
and
das
subl
adc
mov
mov
jbe
in
mov
int3
pop
cmp
fxch
rclb
sbb
jl
adc
pushf
xor
in
mov
fbstp
rolb
je
inc
in
fdivr
pushl
call
mov
inc
shr
movzbl
push
adc
push
ret
push
jo
ffreep
push
es
add
je
loope
cmpsl
jle
jbe
dec
testl
gs
nop
sbb
inc
add
push
mov
push
or
gs
or
jg
sub
jb
xor
int
out
push
loopne
pop
or
add
mov
push
sbb
xor
fisubs
push
jmp
scas
sti
jle
push
add
lahf
nop
lods
adc
push
push
mov
cmp
jg
mov
xchg
icebp
int
adc
jae
enter
cmpl
std
sbb
scas
mov
aad
js
pop
and
test
xor
fldt
xchg
jno
outsl
ds
lea
andl
outsb
sub
sbb
subl
call
mov
push
jne
inc
sub
loop
jo
push
ret
push
pop
jmp
mov
popa
xor
lods
push
cmp
mov
and
cmp
je
stos
mov
in
in
add
fcompl
shrb
cld
jne
fdivrl
push
push
test
adc
lock
sbb
or
xor
clc
add
inc
cmp
jae
mov
hlt
lea
movsb
jp
dec
ja
dec
add
sub
je
push
mov
je
add
mov
outsl
push
sub
fcomps
hlt
sub
imul
add
adcb
ret
jl
in
cmp
jg
push
push
push
inc
js
push
pop
cmp
inc
and
jbe
xlat
sar
into
popa
nop
add
mov
loopne
push
pop
xor
adc
call
lea
ljmp
cmp
loopne
sub
add
xor
jo
fnstcw
jb
mov
mov
roll
mov
mov
push
sub
inc
js
or
cli
xchg
adcb
out
ret
cmp
cmpsb
hlt
pop
pop
xor
inc
xchg
je
test
js
inc
dec
hlt
aaa
cmp
fidivrl
hlt
or
and
sub
pop
movb
dec
push
inc
inc
dec
rclb
jge
jmp
dec
inc
cmp
push
mov
insb
sbb
in
out
fdivs
pop
push
push
mov
sbb
xor
cwtl
dec
mov
insb
sbb
fdivp
add
pop
push
push
mov
idiv
cmp
jl
repz
jmp
or
and
pop
cmp
xlat
das
xor
ret
inc
mov
inc
or
cmp
jbe
mov
mov
test
pop
or
xchg
bound
xlat
push
sub
mov
push
stc
jns
lods
sarl
push
mov
push
and
add
or
jle
ret
je
mov
imul
lock
aaa
ljmp
xor
movsb
push
dec
fidivrl
sbb
or
fstps
pop
cmp
mov
or
add
jne
or
sbb
sub
jle
push
call
jl
xchg
jecxz
sti
test
dec
sbb
mov
mov
sbb
ret
je
push
pop
pop
and
xor
mov
mov
jae
jb
jmp
mov
ret
and
adc
mov
xchg
jmp
or
jbe
jb
mov
icebp
scas
fs
jne
cmp
je
jbe
movb
xor
lods
std
or
or
and
sbb
icebp
addb
cmp
test
addl
out
les
xlat
imul
daa
push
pop
and
setne
shrb
ret
jne
pop
jo
pop
in
xchg
cld
add
fiaddl
jne
adc
js,pt
aam
add
jo
jg
jo
prefetch
xchg
das
or
es
into
push
cmc
jmp
test
or
sbb
push
adc
add
sub
jp
shll
aad
mov
js
push
leave
inc
lret
jmp
call
bnd
rorl
cmp
jmp
mov
dec
adc
daa
sahf
jmp
cmp
push
test
mov
imul
cld
ficoms
sub
push
push
jmp
sbb
pop
sti
adc
rolb
pop
rolb
add
scas
sbb
inc
push
mov
lock
pop
nop
mov
sub
inc
mov
add
lcall
je
das
test
push
xchg
dec
jno
mov
loopne
enter
jl
add
insb
cld
cmp
ret
dec
push
add
push
test
lds
pop
push
dec
cld
rorb
push
pop
popf
mov
enter
add
std
push
movl
call
sub
dec
enter
movsb
xchg
xor
sub
imull
push
and
cmp
fld
mov
sahf
fsubs
sub
pop
push
adc
pop
enter
xlat
jecxz
sbb
insb
icebp
inc
roll
shlb
in
shl
mov
cmp
jp
fdivs
push
adc
shr
pop
sbb
push
push
imul
sub
push
add
aas
lods
jo
xchg
dec
ret
outsl
dec
mov
adc
lods
sbbl
inc
mov
lds
sbb
mov
in
push
sub
les
push
ss
sub
push
in
insl
fldt
lods
sub
mov
xlat
and
enter
mov
and
aad
jo
es
sub
jl
push
jno
cmovl
pop
dec
scas
jecxz
dec
xchg
call
sbb
cmpsl
jb
sbb
fsubrs
enter
or
test
pushf
mov
dec
leave
inc
jo
fnstcw
into
or
adcl
jb
leave
les
adc
imul
test
stos
out
or
mov
push
sbb
xchg
xor
pop
and
xlat
or
sbb
add
xchg
sub
stos
adc
jmp
je
add
movsb
das
ljmp
in
or
outsl
and
jns
mov
or
push
enter
icebp
mov
or
inc
mov
rcll
mov
dec
push
adc
pop
mov
call
jne
pop
add
inc
bound
xor
fwait
hlt
cmp
xchg
dec
mov
push
mov
jns
xor
push
and
mov
push
push
sub
add
cmpps
das
cwtl
jl
test
pop
bound
in
push
stos
lock
xor
pop
je
sbb
mov
mov
sbb
push
adc
cmp
jg
adc
in
jns
add
dec
addr16
xor
push
lea
mov
add
or
mov
lods
xor
scas
jno
lahf
rcrl
add
pop
pop
cmpsb
mov
mov
in
sbb
add
or
jns
insb
fdivrs
popf
pop
daa
js
adc
dec
cmp
pop
lea
addr16
test
shlb
imul
and
and
sbb
rcr
sbb
sbb
sbb
jne
cmp
push
sbb
sub
outsl
push
push
stos
pop
xor
xchg
mov
mov
and
adc
ja
xchg
notb
stc
movups
and
out
push
cmp
popf
cmpl
outsl
inc
push
mov
push
cltd
clc
cmp
ret
jne
mov
add
cmp
mov
jle
push
xchg
jmp
loop
stos
sbb
and
sti
lods
dec
and
ret
xchg
arpl
pop
lods
push
dec
pushf
push
jbe
ficoms
jmp
cmp
cmp
fucomip
sub
jne
sub
dec
je
mov
adc
in
jge
adc
push
lret
ss
jge
cmp
jmp
mov
mov
and
inc
rorb
leave
jmp
fiaddl
cmp
push
jecxz
jne
out
popa
hlt
or
jmp
push
add
push
mov
xor
pop
or
and
cld
pop
inc
add
mov
mov
lret
sti
divl
or
pop
push
mov
xorl
dec
icebp
mov
mov
dec
mov
loop
loopne
push
or
push
imul
pushl
js
sub
jbe
pop
jbe
mov
fcomps
or
int3
sub
mov
rolb
jmp
cmp
je
cmp
ficompl
push
pop
lahf
jmp
inc
sbb
leave
adc
repz
lcall
cmpsb
sbb
fstpl
mov
cmp
jmp
sbb
addr16
cmp
sbb
je
arpl
pop
or
sbb
jge
in
incl
into
pop
push
aaa
push
inc
push
push
out
sahf
out
jnp
ret
in
add
jns
cmc
xchg
pushf
cmpsl
fcompl
mov
inc
sbb
mov
mov
add
data16
mov
sub
or
xchg
push
mov
lea
adc
xchg
out
fwait
sub
mov
fadd
push
test
add
out
push
int
mov
sbb
xchg
pop
jge
mull
cmp
push
dec
push
mov
das
push
lea
push
lea
push
push
push
push
add
push
lea
fs
dec
cmp
cmp
adc
mov
inc
test
lods
add
dec
or
or
adc
pop
mov
dec
call
add
xor
mov
insb
sbb
mov
imul
lea
aam
sbb
push
xchg
das
imul
cmpb
add
jl
inc
xor
add
into
sub
push
xor
pop
inc
mov
inc
push
push
and
push
fidivs
mov
addl
mov
add
movl
cmp
push
notb
jmp
mov
pusha
and
mov
push
jbe
insb
jne
mov
add
xorb
jne
mov
pop
jne
push
add
ret
data16
jns
inc
add
xchg
adc
test
push
repz
imul
dec
cmp
sub
movsb
in
in
xchg
dec
sar
ret
out
in
dec
and
add
orb
mov
movsl
push
cli
loop
lea
neg
push
int
test
js
repz
dec
bound
push
cmp
sbb
sbb
jl
xchg
xchg
sbb
pop
xchg
adc
mov
lea
jl
lcall
adc
mov
ret
or
push
push
xor
popa
push
loopne
jecxz
push
xchg
pop
mov
popa
aam
push
aam
das
in
jb
mov
ds
mov
add
fcoml
bound
dec
fildl
cmp
rcr
loopne
add
dec
shlb
cmpsl
nop
xchg
aam
pop
movsb
jmp
mov
sub
inc
scas
xor
adc
xchg
cmpsb
int3
cmp
jne
push
sub
xor
inc
sar
pop
clc
js
sti
stos
adcb
je
lea
push
loopne
adc
pop
rolb
mov
jo
ret
pop
add
sbb
cmp
fdivrl
call
push
or
adc
pop
shrb
cmp
rorb
xor
push
les
inc
push
mov
lock
lods
movd
lea
dec
push
push
sbb
cmp
fidivrs
pop
xchg
or
in
dec
jmp
sub
decl
sub
in
cmp
push
mov
add
mov
shll
add
inc
inc
dec
cmp
scas
xchg
clc
dec
adc
xor
mov
lds
push
mov
cmp
vpunpckhwd
insb
repnz
sub
inc
rcr
pop
dec
in
dec
sbb
mov
cmp
or
lea
and
mov
add
and
dec
insl
xor
into
in
and
dec
out
insl
shll
cmp
push
push
mov
negb
pop
adc
decl
dec
popf
jp
fimull
leave
and
jbe
loope
push
push
out
cmp
out
ja
adc
mov
push
out
enter
enter
mov
sub
xlat
adc
mov
scas
add
sbbl
punpckhdq
push
lods
mov
and
adc
aaa
and
dec
jae
push
ret
test
clc
daa
xchg
pop
pop
loopne
fmull
push
dec
das
sbb
jl
in
pop
ljmp
pop
mov
icebp
jg
fwait
enter
cmpl
jne
pushl
out
loopne
pop
or
push
or
adc
je
xor
mov
outsl
cld
adc
add
adc
and
mov
ret
add
inc
adc
inc
shl
xchg
sub
sti
je
cmp
xor
sbb
mov
jno
add
pop
adc
or
mov
mov
xchg
in
inc
push
int
push
or
xor
jg
push
jne
movb
jmp
cmp
jne
cmpsl
enter
movsl
fldz
xor
sub
popa
push
push
movb
loope
stc
insl
dec
aas
mov
cmp
mov
push
insl
inc
pop
ja
mov
sub
cmp
xchg
test
sbb
lock
scas
sti
or
test
and
test
int3
mov
mov
mov
pop
sti
push
push
dec
or
adcb
xor
push
stos
push
mov
adc
fcoml
sbb
push
nop
pop
cmp
iret
push
adc
enter
orb
sub
in
movsl
out
mov
mov
jl
adcb
pusha
xchg
scas
mov
mov
adcl
dec
rcll
adc
adc
lret
xor
sbb
push
cmpsb
adc
lea
and
ss
xor
mov
push
mov
push
jbe
jno
call
push
lret
out
ja
jl
xchg
andb
mov
sbb
mov
xchg
out
dec
imul
mov
test
mov
out
lcall
aaa
pop
inc
ficomps
mov
rorb
inc
cmp
mov
fmull
insb
cmpsl
mov
int3
dec
add
pop
je
push
aaa
movsl
or
cmp
or
ja
jl
cltd
cli
jno
cltd
mov
idivl
out
andl
pop
pop
out
add
jno
insb
inc
sbb
arpl
in
cmp
js
ds
pusha
rorl
fstpl
and
push
cmp
je
or
adc
or
call
and
iret
dec
or
rclb
cmc
jmp
mov
mov
xor
rorl
cmp
cmp
dec
rcll
lea
cld
clc
push
jle
add
and
cmp
cmp
cmp
negb
push
add
push
jne
cs
sub
push
sahf
std
aad
push
mov
adc
sbb
stos
mull
push
insb
repz
mov
jmp
fisubrs
add
stos
add
push
cli
or
push
sub
push
push
popa
cs
push
testb
movsl
mov
xor
push
sbb
push
sub
jecxz
mov
jl
xlat
sbb
in
loope
or
out
jo
into
inc
sub
insl
mov
insb
xorb
or
sub
sbb
add
and
popf
mov
jl
push
cld
inc
clc
mov
cltd
mov
lea
push
sti
js
decl
orl
or
shlb
add
cmp
jge
ds
daa
les
idiv
push
mov
mov
jno
aam
mov
ret
xor
idiv
notl
adc
add
std
test
jg
mov
sbbb
jg
push
ljmpw
lds
scas
mov
test
xor
sub
scas
aas
out
jge
add
adc
push
pop
lock
lahf
mov
or
out
dec
fstpl
push
pop
add
xor
sti
sub
rcrb
jge
je
out
sbb
test
out
movsb
mov
add
fisttpl
fiaddl
movsl
daa
pusha
js
sti
ds
jg
scas
jnp
dec
fs
or
xchg
arpl
mov
leave
jle
cmp
xor
sub
negl
pushf
movb
push
inc
lahf
mov
inc
ljmp
jl
push
adc
sub
cmp
jmp
dec
nop
or
out
jp
into
test
jle
pop
sub
hlt
mov
test
jns
cld
mov
inc
add
xor
xor
mov
fdivrp
movsl
mov
sub
mov
jmp
sbb
pop
add
les
cmp
add
push
lods
mov
cmpb
cld
mov
je
into
clc
fidivl
jmp
push
xchg
cmp
rolb
fstp
cmc
push
pop
mov
pop
jne
pop
pop
movb
clc
mov
push
cmp
mov
mov
xor
push
inc
mov
add
imul
lret
rorb
cld
inc
hlt
adc
lea
adc
adc
sub
in
jne
push
gs
bound
out
sub
xor
in
inc
pop
and
aad
cmp
sbb
loopne
or
push
cmc
bound
out
push
pop
pop
push
sub
jecxz
and
jle
lds
pusha
cs
scas
push
stos
sub
ret
push
mov
add
call
push
and
cltd
add
int3
pushf
push
push
test
or
push
and
mov
fxch
adc
int
sbb
loope
rcrl
or
iret
addr16
dec
jns
and
cmp
clc
loope
mov
inc
jne
sti
sub
lds
adc
mov
push
les
jmp
punpckhdq
leave
adc
jno
test
add
add
add
xchg
push
popf
int
mov
lea
push
mov
push
loope
mov
pop
in
dec
and
mov
push
lods
das
add
hlt
jno
sarl
mov
push
adc
pop
adc
fcmovbe
iret
js
and
andl
shlb
adc
push
add
cmpsb
jle
add
imul
pop
mov
sub
mov
mov
or
add
popl
nop
dec
outsb
scas
sbb
push
pop
push
xchg
sbb
mov
mov
ds
nop
adc
fs
cli
xchg
int3
push
push
pop
in
pusha
cmp
out
pop
popf
dec
daa
add
stc
sbb
jl
aad
sbb
dec
and
lds
inc
push
icebp
in
cmp
jge
orl
and
fs
scas
mov
push
jbe
push
and
shll
sub
aas
outsl
add
xor
inc
inc
push
add
inc
jae
inc
sub
clc
push
sub
clc
setb
test
daa
add
mov
cmp
jo
movsb
je
xor
dec
adc
data16
pop
or
mov
lods
aaa
adcb
jle
loopne
icebp
sub
or
out
mov
pop
inc
add
push
xor
cld
mov
dec
dec
mov
jo
adc
pop
push
push
hlt
jo
add
jecxz
sub
add
mov
fsts
add
shrl
inc
scas
sbbb
das
push
scas
xchg
enter
int
xchg
popf
or
stc
inc
bound
sbbb
sbb
sbb
push
in
pop
or
pop
xor
popa
sub
pusha
sbb
bound
mov
fisubs
mov
mov
inc
inc
in
aas
jmp
test
push
or
add
adc
arpl
movl
popa
cld
mov
dec
jl
je
and
add
or
lock
push
pop
adc
mov
pop
or
jg
inc
xor
adc
xchg
push
push
push
add
jmp
mov
sub
mov
jnp
xchg
jo
add
mov
idivl
aam
mov
and
jb
inc
aaa
adc
xchg
xor
jmp
rolb
xor
cmc
xchg
push
add
push
out
adc
push
shlb
icebp
and
pop
push
and
enter
and
dec
fwait
popf
or
or
pushl
imul
insb
aam
lock
or
aam
mov
jp
lods
inc
mov
jae
imul
mov
sbb
stos
pusha
sarb
sbb
sbb
xor
mov
test
dec
in
call
jo
or
xor
mov
fcmovbe
mov
sbb
mov
adc
push
sbb
out
pop
push
push
mov
pusha
das
call
jo
mov
push
popa
cmp
xchg
loope
aam
and
pop
cmpsb
jo
cmp
fsubrl
in
mov
pop
push
push
outsl
sbb
jmp
sti
dec
jnp
mov
mov
scas
adc
int3
jp
or
push
cmpsl
pop
fs
fcoms
dec
cmpsl
adc
ja
add
push
cmp
mov
shrb
push
mov
add
and
dec
jae
cmp
sbb
xchg
sub
test
or
jne
mov
outsb
pop
je
out
cmpsb
loopne
arpl
sbb
xchg
mov
pop
pushl
push
lret
mov
shl
jmp
enter
andl
dec
cmp
mov
add
addr16
arpl
ret
je
call
fidivrs
test
je
stc
mov
push
dec
mov
jmp
dec
mov
sub
and
mov
lcall
dec
add
jo
pusha
inc
xor
movsl
stos
add
shlb
mov
or
fmulp
js
out
std
cmp
jge
mov
mov
mov
cmp
sbbb
push
add
or
push
pusha
jle
call
sub
fcom
or
push
sahf
or
fsubr
sbb
popf
fwait
and
jns
fdivrs
out
je
xchg
data16
pop
mov
sbb
mov
jno
or
stos
shlb
test
into
cmp
xchg
iret
andb
add
jo
sub
cld
inc
cmp
sete
adc
loope
adcb
inc
sbb
adcl
push
ret
mov
mov
jo
jp
jno
shrb
mov
or
jno
sbb
and
add
subb
bnd
and
fwait
mov
popf
xor
loopne
add
sbb
mov
int3
imul
xchg
mov
pop
push
pop
sbb
sarb
pop
cmp
lods
pop
dec
rorb
jae
add
sti
push
dec
lock
mov
ret
movb
add
ror
xchg
push
in
sbb
imul
outsb
mov
movsb
ss
sbb
call
cld
fnstsw
insb
dec
sub
push
iret
ss
lods
aad
fdivs
push
and
push
sbb
push
xchg
push
or
mov
bound
mov
mov
or
mov
adc
inc
outsl
mov
enter
jne
in
roll
pop
pop
adc
loopne
sbb
clc
mov
fmull
mov
lcall
test
test
in
call
ja
fdiv
in
sbb
sbb
clc
push
mov
sub
jns
pop
pop
arpl
andl
or
je
movsl
imul
xchg
lock
insb
sti
cmpsb
cmp
je
dec
xchg
mov
idivl
adc
mov
daa
xor
insb
shll
shlb
jg
adc
jbe
cs
jb
xchg
or
mov
in
push
lds
xlat
sbb
cmpsl
adc
pop
inc
clc
adc
add
clc
sub
inc
mov
cmp
das
xor
xor
hlt
add
and
mov
push
dec
push
pushl
xor
mov
xor
lret
push
add
add
cmp
pop
clc
dec
xchg
nop
jb
jnp
adc
lods
hlt
das
mov
cmp
jmp
das
hlt
dec
jo
outsb
mov
out
or
in
sub
add
into
push
push
add
push
outsl
or
or
jp
loopne
gs
adc
dec
dec
push
in
imulb
mov
mov
jl
mov
jbe
xor
rcrl
sbb
sub
jg
mov
addr16
aam
loope
and
ret
lahf
std
mov
aad
xor
dec
aas
or
sub
xor
jbe
or
mov
sbb
push
add
clc
sbb
out
mov
pop
daa
pop
push
mov
js
mov
adc
inc
incl
repz
xor
xor
push
jg
icebp
fwait
or
jbe
movzwl
adc
add
xor
pop
test
lea
push
jl
mov
in
push
rcll
in
pusha
gs
sbbb
cmp
jbe
pop
push
mov
hlt
mov
add
adc
add
jo
and
ljmp
cmp
add
xor
sti
mov
inc
push
push
fisttps
in
lods
xor
sbbb
push
mov
pop
rolb
mov
int3
sub
rcrb
mov
add
inc
cmp
pop
xchg
adc
pop
mov
push
retw
add
push
lods
lea
and
mov
jne
xchg
xor
push
sub
shlb
popl
jmp
adc
cltd
mov
xchg
push
aam
inc
arpl
push
cmp
or
sub
sub
mov
ja
sbb
lock
cmpsb
add
mov
jo
scas
movl
jle
or
pop
pop
push
es
push
mov
movl
dec
bsr
push
inc
stc
xchg
dec
sub
enter
sub
pop
and
data16
push
mov
dec
and
xor
push
xchg
inc
push
cmp
imul
cmp
jns
sbbl
xchg
nop
fisttpll
aaa
jns
popf
lcall
push
mov
fstpl
cmp
mov
add
enter
cmp
fadd
mov
lods
jmp
or
and
add
sub
lock
push
sahf
int3
jmp
mov
jb
js
add
dec
fs
adcb
shlb
add
add
lea
dec
jnp
js
inc
insl
xchg
shr
aad
inc
sbb
shrl
add
sbb
call
iret
pusha
pusha
xchg
mov
mov
mov
sbb
mov
sbb
mov
in
cmp
les
das
sub
aas
xor
jns
cmp
jmp
pop
neg
xlat
xchg
sub
pop
daa
cltd
add
push
adc
sahf
dec
pop
push
int
les
test
adc
scas
ret
pushf
into
mov
jl,pn
jmp
cmpl
jg
inc
mull
jo
leave
cmp
jo
fwait
add
rolb
xor
fnstenv
lret
adc
sbb
pop
sub
addl
xchg
inc
mov
pop
push
stos
dec
shrl
pop
insb
add
add
pop
and
cmpsl
add
outsb
cwtl
adc
sbb
in
in
jmp
pop
in
mov
pop
ds
add
nop
add
push
stc
ljmp
add
dec
xor
daa
cmp
push
pop
flds
add
in
scas
dec
call
adc
out
mov
or
fidivrl
ret
adc
inc
or
lcall
mov
lret
and
sub
mov
jp
push
cwtl
push
test
cwtl
xor
stc
popf
sub
lea
test
add
mov
nop
push
sub
pop
or
adc
mov
nop
cmpsl
lea
jmp
mov
xor
cmovle
dec
js
jge
iret
mov
jae
sbb
test
fwait
mov
out
clc
inc
pushf
push
setne
sahf
push
sub
lret
jns
or
fs
push
push
pusha
daa
in
mov
repnz
add
mov
sbbb
mov
push
push
jno
push
and
loop
leave
lea
andb
sbb
xchg
or
and
or
add
test
push
push
inc
add
addr16
push
scas
mov
mov
xor
popa
fists
jb
adc
or
sbb
jns
xadd
sbb
mov
cld
cli
stos
push
add
mov
push
mov
stos
or
xor
shlb
popf
push
rorb
pop
xchg
cmpl
in
shrl
cld
dec
pop
ret
adc
popa
push
das
adc
jmp
sbb
fistl
or
loope
pop
int3
imul
pop
shlb
call
test
inc
xchg
sbb
cmp
pusha
pop
inc
xchg
loope
lods
xchg
scas
mov
outsl
out
bound
clc
out
mov
mov
pop
or
loopne
add
in
push
hlt
add
lea
loope
pusha
or
jecxz
in
lret
and
jge
ds
push
mov
adc
mov
push
pushf
mov
mov
adc
and
leave
popf
push
xor
stos
sbb
push
xchg
mov
push
dec
rcll
xor
scas
or
dec
call
pop
loope
dec
or
push
fnstsw
mov
sbb
rorl
shll
or
jb
and
xor
nop
or
test
sbb
rolb
push
les
adc
mov
es
fwait
xor
xchg
inc
xor
push
mov
mov
inc
or
xor
add
pop
fidivs
js
sahf
jnp
movzwl
jbe
add
mov
ss
ret
mov
mov
repnz
int3
lods
xor
cmp
xchg
mov
add
cmp
add
ror
push
mov
faddp
orb
leave
sahf
xchg
rorl
or
xchg
mov
push
and
pop
push
repnz
mov
addl
cmp
outsl
pop
test
fs
jp
or
xchg
fs
and
aad
lock
dec
push
stos
rcrb
mov
cmp
xchg
ret
sbbb
out
cmpb
fucomp
aas
movsb
fdivrs
fucomip
add
imul
push
sbb
adc
xchg
mov
fmull
inc
insl
movsl
jbe
and
push
movd
push
in
jae
adc
orb
xchg
pushfw
mov
push
add
lea
fs
mov
cwtl
pop
enter
mov
mov
in
push
arpl
mov
loopne
cmpsl
jnp
aaa
pop
mov
mov
cmp
fcmovne
xchg
je
mov
mov
pop
ja
mov
fdivr
insl
sub
fstps
and
mov
or
add
jmp
testb
jae
fs
add
rolb
or
or
inc
lret
jnp
dec
jbe
mov
icebp
inc
mov
inc
inc
mov
cld
add
inc
out
cwtl
das
ss
xchg
roll
std
das
aam
gs
dec
cmp
lret
jmp
push
add
ss
incb
or
cmpsl
add
adc
push
inc
jecxz
popa
into
pop
ja
das
add
data16
lea
cwtl
dec
loop
fstpt
enter
push
outsl
repnz
cltd
gs
mov
push
and
scas
outsb
cmp
pop
loop,pt
andl
cld
dec
jnp
ret
dec
and
lret
out
loopne
jns
dec
pop
push
lods
pandn
push
arpl
call
mov
pop
push
gs
sub
mov
in
push
addl
add
arpl
loopne
mov
cli
xor
movl
mov
sub
mov
lds
dec
rcll
dec
or
fimuls
lock
mov
sub
adc
push
jo
or
sahf
sub
out
push
aaa
inc
pop
push
push
jo
push
rol
movsb
push
add
mov
mov
mov
add
sub
mov
cs
jl
jns
inc
js
in
xor
js
sbb
push
add
push
movb
sbb
xchg
mov
push
loopne
or
lcall
fnstenv
adc
xchg
movsl
cmp
jo
xchg
and
in
test
arpl
pop
loope
adc
pop
pop
scas
sub
shll
stos
loopne
jge
sbbb
pusha
sub
push
adc
dec
push
orb
sbb
je
mov
jno
or
pusha
xor
dec
xchg
mov
add
xor
popf
push
test
pop
pop
or
hlt
or
enter
leave
inc
push
sbb
in
jg
push
jmp
push
pop
in
add
popa
push
xchg
mov
sbb
test
sbb
jnp
inc
xchg
mov
sbb
sbb
stc
xor
xchg
mov
or
rcrb
scas
das
xchg
jno
cmpl
inc
mov
jne
push
pop
cmp
je
xor
mov
movsb
mov
mov
or
sbb
dec
add
fs
cwtl
xchg
data16
dec
adc
stos
pusha
and
push
push
add
lea
push
lods
or
mov
fiaddl
cmp
lea
je
lea
and
add
push
or
cmp
mov
and
cli
bound
stos
enter
mov
xchg
sbb
push
inc
sub
sti
or
icebp
fsubrl
mov
xor
sub
jl
shll
mov
mov
test
test
enter
xor
sub
loopne
sub
fwait
psubusb
aas
aam
xor
sbb
das
rorb
sbb
xchg
das
jo
es
jns,pn
icebp
xorb
sbb
jo
insl
je
xchg
cmpsl
into
int3
xor
dec
test
ja
push
fmull
pop
push
xor
sub
adc
adc
addb
xor
xor
sbb
fsubrl
enter
xchg
pop
popf
call
add
lods
out
mov
mov
add
sahf
add
and
sbb
push
xor
mov
fldl
mov
push
pop
adc
xchg
sub
add
jne
pop
add
gs
jo
mov
outsl
or
jne
pop
pop
fstp
xor
mov
ljmp
leave
fs
nop
mov
clc
into
stos
sbb
mov
push
mov
push
orl
cmp
lea
pop
and
fcomps
aam
incb
imul
cs
out
clc
mov
shrb
call
add
adc
cmp
xor
nop
out
mov
fmul
pop
pop
pop
shll
inc
movsb
push
pop
or
inc
pop
fdivr
mov
movsl
aam
add
std
adc
test
xor
divb
loopne
cmp
mov
lahf
pop
push
mov
mov
pop
and
jae
fisttpl
adc
ret
cmpl
scas
scas
or
pop
test
push
xchg
test
ret
test
dec
ficoml
mov
repz
cld
je
dec
sbb
inc
xchg
xchg
inc
daa
push
mov
mull
inc
dec
mov
mov
test
xorl
add
and
cmp
jne
je
fistpll
popa
xchg
pusha
cmpb
pop
push
mov
mov
jbe
dec
or
cmpsl
and
lret
out
mov
bswap
rcrb
in
mov
lock
cmp
sub
mov
sbb
rclb
mov
cld
sbb
clc
mov
mov
lret
hlt
inc
int3
iret
rorb
cltd
popf
outsl
inc
imul
lods
add
je
push
dec
hlt
sub
push
arpl
rorl
lock
movsl
shlb
push
in
add
mov
das
movsl
mov
movsl
cmpl
cmp
std
mov
sub
sbbb
jmp
push
push
iret
pop
dec
fs
fnstenv
add
shlb
xchg
and
sbb
ret
aaa
sbb
add
push
clc
out
or
push
push
xor
push
cmp
or
rorl
push
ret
xor
or
sbb
mov
pop
mov
jns
stos
mov
mov
or
dec
in
sbbb
cmc
push
push
int3
push
inc
inc
mov
lret
pop
mov
cmpb
pop
popa
loope
in
push
cmpsl
sahf
mov
call
lods
mov
movsb
mov
gs
lock
inc
add
add
hlt
sbb
test
push
mov
pop
dec
inc
testb
loopne
pop
inc
lcall
ret
mov
xor
notl
push
aam
pop
adc
addb
adcb
enter
dec
xor
test
adc
or
ljmp
jnp
jmp
ret
scas
fsubrs
out
push
insb
cmpb
addr16
cmp
ret
push
mov
icebp
mov
sub
clc
je
cmp
sub
xchg
dec
sub
push
add
adc
push
inc
push
and
cltd
jecxz
fwait
push
bswap
cltd
scas
add
ret
xlat
xor
push
fisubl
std
inc
cltd
outsl
xchg
lret
cmp
jl
test
mov
int3
xor
sarl
pop
sub
lcall
xor
cmp
jne
lret
fbld
sbb
push
add
iret
imul
aad
shll
mov
popf
ss
out
stos
adc
mov
sbb
and
iret
leave
loope
push
stc
push
popf
fcmovnu
loope
in
cmp
add
push
push
sahf
adc
push
sar
repz
xor
and
xor
bound
in
pop
adc
push
mov
lahf
in
xor
das
in
sub
movsl
loope
lock
out
push
dec
or
in
and
out
xorl
cli
adc
inc
or
pop
pop
call
push
cwtl
pop
imul
ja
adcl
and
mov
jne
call
cli
mov
inc
out
lock
rol
pmaxsw
push
shll
push
add
jl
cld
adc
sub
divl
add
cmp
fbld
ljmp
ret
or
loop
adc
fwait
xor
int
incl
and
cmp
je
sbb
jbe
push
punpcklbw
cmp
je
sti
mov
popa
pop
pop
mov
push
pop
sbb
jbe
add
inc
or
pop
pushl
test
mov
xor
fsts
push
mov
push
xchg
add
daa
add
test
push
sub
dec
and
cmpl
cmpsb
dec
or
shlb
adc
test
clc
mov
mov
mov
add
shlb
mov
inc
imul
in
scas
cltd
or
jne
ret
adc
dec
or
aaa
sbb
dec
and
mov
aas
dec
mov
hlt
mov
add
js
or
cld
daa
jecxz
push
cmp
je
xor
je
mul
seto
scas
push
filds
enter
imul
dec
aaa
dec
push
jmp
jnp
cmpsl
mov
push
xor
test
jbe
jge
movsb
inc
jb
iret
shl
cltd
push
insb
or
mov
aad
lret
cs
dec
inc
add
xchg
sbb
pop
popa
sub
inc
ja
or
inc
sbb
inc
add
push
sbb
loop
dec
cltd
inc
and
adc
andl
pop
sbb
inc
daa
push
inc
add
mov
or
nop
push
dec
mov
mov
hlt
xor
pop
sub
ds
xor
xchg
cmp
lods
addr16
mov
mov
jmp
push
and
leave
add
nop
cmp
push
in
pop
mov
mov
pop
lock
pop
sub
sbb
cmp
je
sbbb
add
mov
cs
lock
cmp
jne
xor
hlt
add
lret
xchg
adc
ss
add
decb
adc
insb
and
mov
faddp
jmp
jl
ret
fwait
jle
lahf
pop
push
test
je
cli
jmp
mov
inc
jno
test
negb
inc
cmp
jae
add
xor
mov
inc
xor
cmp
add
mov
push
sbb
cmp
jne
and
xor
subb
add
mov
push
ss
push
inc
aad
inc
jmp
repnz
scas
mov
test
dec
cmp
les
sub
lcall
mov
cmp
xor
scas
sub
lret
je
jno
pop
das
movsl
negl
clc
push
push
jne
les
mov
sbb
stos
dec
or
xlat
dec
enter
and
or
insb
in
cmp
jne
sub
fisubrs
ja
lea
cld
xchg
test
dec
mov
roll
rorb
push
jle
add
ljmp
jns
mov
pusha
loope
or
inc
jae
je
subl
shr
addl
or
mov
or
push
or
mov
push
mov
inc
sub
xchg
inc
sbb
jg
push
rcrb
sbb
cmp
mov
cmp
or
insl
stos
shrl
mov
fwait
or
pop
add
mov
mov
sub
jno
or
mov
push
or
addb
jnp
add
inc
aad
push
push
movsl
or
or
clc
sub
lea
push
mov
jl
mov
push
imul
in
push
je
gs
xor
xchg
jmp
mov
ret
and
cmp
xchg
test
js
sbb
inc
push
add
adcb
inc
icebp
dec
push
test
sub
out
push
clc
test
sub
js
push
push
iret
sbb
adc
dec
imul
pop
ret
rclb
add
push
jae
fiadds
jmp
test
mov
add
jne
mov
rolb
push
sub
mov
neg
addl
ret
sub
cli
jp
or
push
adc
js
jne
test
mov
push
push
pop
adc
je
inc
jmp
in
or
int
mov
xor
dec
add
popf
cmp
or
sub
in
ljmp
adc
push
ret
or
rolb
inc
mov
mov
pop
ret
xchg
outsl
xchg
popf
dec
pop
bound
in
push
lods
xchg
mov
in
adcb
mov
cltd
jbe
and
jnp
jno
cwtl
test
xchg
add
jmp
jg
imul
add
sub
lock
add
loope
and
movl
and
add
mov
or
cmp
clc
and
inc
adc
imulb
mov
mov
pop
and
mov
in
pop
add
pusha
or
aam
mov
int
add
cwtl
fmull
sbb
je
outsl
test
sbb
aam
mov
icebp
xor
enter
sub
lahf
mov
push
add
imul
movl
jg
pop
inc
or
mov
push
or
xchg
pop
sub
sbb
enter
pop
cs
in
dec
lahf
or
mov
fmull
sub
into
addr16
jmp
inc
push
scas
leave
ret
cmp
mov
mov
sbb
mov
or
test
mov
cmp
js
mov
and
ljmp
pop
je
orl
push
mov
test
dec
rcll
sub
movsl
or
push
mov
jp
jle
mov
sbb
sbb
sub
mov
jnp
mov
ljmp
push
addb
add
dec
sub
movsb
repnz
popf
dec
fisttpl
push
push
add
inc
rcll
sub
orl
shll
loope
pop
inc
mov
insl
lods
mov
pop
and
mov
pop
popf
xchg
or
int3
cmc
repz
lea
push
fnstcw
sub
sub
or
sbbl
sub
daa
sub
xor
add
cmp
adc
rcrb
dec
outsb
adc
rcll
fisttps
cmp
jbe
call
sbb
inc
ret
pop
cmp
aad
repz
imul
pusha
inc
sbb
test
adc
iret
mov
in
insl
shlb
cltd
xchg
daa
andb
out
fcompl
repz
lret
and
adc
push
pop
mov
and
ficoml
insb
xor
jecxz
iret
sar
or
sub
push
cltd
fsub
call
pop
push
daa
pop
leave
lea
cmpsl
adc
mov
in
push
loopne
hlt
enter
clc
adc
aad
push
iret
enter
push
dec
outsb
inc
les
sub
sbb
add
cmp
cmp
jp
sbb
adc
and
jae
mov
push
push
pop
inc
xor
test
and
and
int
sbb
mov
jmp
mov
jecxz
aaa
push
sahf
js
push
rolb
jp
ret
loopne
mov
loop
push
in
or
popf
add
mov
sub
lods
mov
adc
sbb
daa
aaa
inc
inc
mov
jb
mov
loop
mov
bound
xor
cmpl
and
inc
or
aad
pop
andb
push
stc
pop
xor
pop
and
lahf
adc
and
sub
sbb
fwait
addl
pushf
out
sbb
jg
push
cs
push
pop
fwait
aas
pop
pop
push
movsb
loopne
cmp
in
pop
xor
fimuls
and
sbb
sbb
in
sub
test
ljmp
lahf
push
fdivr
faddp
nop
mov
mov
js
push
ret
fisttpl
test
pop
inc
inc
das
add
mov
pop
sbb
mov
pop
hlt
push
dec
aad
mov
rolb
mov
xchg
and
outsb
cmpb
and
std
lods
es
cmp
cmpsl
and
xor
mov
dec
ret
dec
adc
into
and
cmp
scas
mov
stos
dec
or
rolb
mov
call
clc
adc
das
pushl
mov
sub
test
hlt
mov
adc
add
mov
push
push
adc
sbb
xchg
xchg
enter
mov
sbb
or
test
pop
lods
sbb
add
cmp
jl
test
jno
xor
xchg
sub
test
inc
mov
addr16
jmp
adc
pop
xchg
pop
ja
xchg
fiaddl
popa
xor
push
in
push
push
mov
in
test
push
fcoml
scas
and
test
pop
dec
push
std
lods
mov
mov
dec
sar
js
loop
out
push
push
push
in
mov
mov
lret
hlt
cwtl
or
or
add
xlat
cltd
or
mov
pop
mov
cs
push
add
push
insl
inc
test
mov
dec
hlt
add
push
imul
ret
jo
shll
ss
xor
dec
lcall
jno
orl
stos
nop
or
or
mov
sbb
imul
js
xchg
popa
inc
inc
dec
jmp
mov
lods
test
out
dec
push
sub
adc
jmp
jae
loopne
movsl
pusha
jo
inc
insb
pop
mov
and
loopne
fmull
in
movb
add
mov
inc
pop
ret
sbb
cmp
inc
push
popf
idivb
loopne
mov
xchg
mov
add
add
cmpsl
adc
in
xchg
sbb
pop
sarb
ljmp
inc
or
inc
jno
mov
mov
xchg
inc
or
or
jg
loope
mov
jne
pop
xchg
je
popa
push
push
lock
xchg
fstpt
mov
or
jbe
ljmp
xor
jle
xor
in
sarb
test
fmuls
rcrb
jnp
jl
rorb
pop
cmp
inc
mov
gs
insl
test
push
imul
inc
xchg
mov
push
icebp
adc
enter
out
jle
sbb
add
xor
cltd
xor
sbb
mov
loope
shll
add
cltd
inc
sbb
adc
fists
clc
cld
outsl
mov
clc
inc
push
sahf
sbb
fadds
or
sbb
mov
cmpsb
adc
fmuls
xchg
loope
shl
or
mov
xlat
loopne
pop
rol
inc
cli
inc
lock
daa
in
add
add
xchg
push
popl
or
repz
neg
test
inc
or
cld
sub
mov
mov
xchg
cmp
sub
xor
stos
jle
push
into
dec
xor
inc
incl
scas
es
add
xchg
push
js
inc
push
pushf
pusha
out
or
mov
shlb
js
lds
and
xchg
rcrl
repnz
sbb
adc
fucomip
in
and
daa
and
jno
or
outsb
adc
icebp
xchg
clc
aas
dec
add
add
xorl
xor
add
or
imul
dec
sbb
or
sahf
xchg
cmp
sub
lahf
sbb
cmpb
pop
or
loope
push
adc
cld
mov
out
jnp
orl
push
push
lock
push
jp
inc
je
out
xor
or
push
outsl
adc
cmp
or
shlb
add
dec
loope
add
xor
adc
dec
rorb
xor
xchg
cmpb
out
add
pop
jne
push
mov
pop
ret
push
inc
or
mov
out
mov
popf
mov
dec
stos
and
rorb
pushf
add
movsb
adcl
rcrl
dec
adc
cmp
jbe
sbb
inc
outsl
aas
sbb
sbb
adc
mov
xchg
stc
jae
cmp
jb
cmp
dec
mov
dec
adc
rcrb
mov
add
incl
cmp
lcall
adc
inc
je
ret
add
cmpsb
sbb
addb
dec
call
enter
andb
fildl
insb
pushf
add
pushf
inc
and
inc
xchg
push
cmp
dec
pop
or
push
push
or
out
add
push
aas
adc
push
push
fdivrs
aaa
push
addl
add
sbb
mov
adc
push
aas
ret
aam
out
and
add
shlb
push
test
sbb
jmp
test
mov
mov
imul
icebp
rorb
xorl
fmul
or
loope
adc
rclb
outsl
lcall
push
push
lea
out
arpl
cmp
adc
lea
xlat
jno
and
push
es
fwait
push
push
aam
push
pop
add
pop
mov
adc
in
insl
xlat
push
inc
pop
xchg
or
pop
adc
lock
pop
sti
jb
popf
dec
adc
add
xor
or
or
fmuls
loop
mov
scas
sub
cmp
mov
push
xor
fs
mov
cld
cmpsl
andl
push
ret
pop
xor
and
aas
pop
sbb
inc
pop
push
and
cmpsl
or
les
inc
adc
mov
jp
xchg
orl
in
mov
mov
and
xor
repnz
and
roll
inc
sbb
or
loop
sahf
jle
sbb
sub
pushl
add
dec
shlb
roll
data16
inc
cmpsb
pop
ffreep
inc
or
push
sbb
les
sbb
fcoml
faddl
addb
inc
sub
dec
shl
sub
cwtl
jle
lea
and
stos
jb
dec
pusha
xchg
ret
push
pop
lea
mov
jge
add
add
js
lret
in
dec
add
inc
add
mov
enter
sahf
shlb
sbb
xlat
and
les
popa
and
mov
cmp
je
sbb
incb
pop
sbb
pushl
lea
lea
xor
mov
or
xor
and
imul
enter
test
fimuls
mov
push
sub
lret
int3
pop
aam
and
xchg
push
inc
add
ja
hlt
dec
stc
mov
and
pop
pushf
xchg
add
and
cmpsl
imul
lcall
shlb
sub
cmp
cmc
add
test
mov
sbb
sub
mov
loope
cmc
and
iret
ja
repnz
popf
jmp
cmp
mov
adcl
call
pop
int
daa
and
inc
pop
inc
cmp
in
aaa
mov
rolb
or
xor
out
adc
pop
in
test
mov
push
out
cmpb
push
lock
daa
or
idivb
je
sub
mov
out
hlt
aas
mov
cmp
lods
jo
jg
and
xchg
lret
mov
adc
imul
inc
mov
jne
sub
sub
mov
pusha
add
fisubl
xor
das
cwtl
por
push
add
fwait
popl
xor
jge
int
jns
and
add
pusha
pop
ret
aaa
mov
cmp
add
ss
or
mov
out
pop
and
orl
sub
decl
xchg
xor
dec
push
je
dec
jne
dec
js
sbb
out
clc
adc
push
inc
loope
insb
and
das
lahf
xor
or
add
test
inc
leave
mov
nop
int3
pop
cli
lea
dec
lea
repz
in
cmp
sbb
mov
mov
movsb
popf
les
or
push
cmp
popf
lret
movl
fsubl
xor
fdivr
xchg
gs
mov
lea
cli
jb
adc
loope
xchg
rorb
xor
adc
sbb
or
xchg
ja
xchg
pop
sbb
insl
je
movsb
mov
inc
aas
add
cmpsb
push
lret
mov
inc
and
sbb
jge
popf
popa
test
dec
mov
arpl
adc
adc
add
fs
push
xor
push
push
xchg
pop
adc
dec
inc
ret
xor
add
into
mov
and
cmp
testb
push
add
push
sub
sub
ds
je
lahf
push
sarb
rorb
mov
aam
or
pop
jno
adc
xor
sub
xor
add
lock
les
and
jg
sub
inc
lea
push
and
mov
push
or
sub
loope
out
out
jle
jo
push
jne
cmp
jbe
sub
push
ljmp
pop
mov
into
jmp
sbb
fcomps
popa
dec
pusha
clc
nop
mov
xlat
cwtl
cmp
ret
arpl
clc
jb
fists
into
ret
mov
push
test
pop
push
xorl
cld
dec
test
mov
pop
pop
ret
adc
out
push
xor
jo
cmp
adc
sbb
lock
push
lods
adc
rol
add
push
test
push
xlat
mov
jbe
shr
and
je,pn
aaa
js
in
inc
loopne
stc
cmp
sub
push
xor
addl
adc
mov
bound
cmpsb
stos
xchg
adc
xlat
inc
pop
dec
push
jmp
je
test
testl
mov
xor
jmp
add
dec
xchg
icebp
in
xorb
adc
enter
push
sub
mov
or
pop
pop
ljmp
adc
mov
sbb
push
sahf
inc
cmp
adc
mov
xchg
and
push
mov
cmp
push
and
fbld
idivl
push
mov
mov
cltd
push
push
push
cli
mov
into
cmp
jnp
add
jnp
lds
inc
movsl
jbe
lock
pushf
movl
aaa
sti
jo
add
inc
adc
push
and
sub
dec
push
add
les
xchg
and
sbb
xchg
fidivs
add
push
mov
pop
pop
leave
jecxz
sti
rclb
mov
in
ss
mov
add
sub
adc
cmp
std
push
jecxz
sbb
and
jge
icebp
mov
mov
or
adc
add
insb
sub
ret
test
inc
pop
int
int
gs
dec
add
andl
xchg
popa
push
mov
ja
xor
loop
lds
add
dec
add
lods
jnp
jo
pusha
jo
enter
insb
mov
xor
xchg
push
dec
inc
jge
call
in
jnp
dec
mov
popf
mov
faddl
xchg
jl
daa
mov
xor
push
repz
test
xchg
sub
fs
push
imul
xor
mov
mov
pop
jae
inc
cmp
add
jns
mov
shlb
imul
cwtl
mov
xchg
adcl
std
cmpb
je
push
sbb
stos
popf
pop
push
loope
fiaddl
xchg
xchg
and
in
loop
stos
push
sub
lods
adc
fdivrl
imul
cli
pop
or
nop
out
and
or
jge
xor
mov
imul
or
mov
in
fadds
and
mov
xor
lret
jle
jnp
lods
and
mov
jae
into
and
aas
rorl
mov
daa
inc
in
lret
push
pop
pop
xchg
push
add
daa
jne
div
test
xor
subl
mov
add
mov
inc
test
jl
ss
or
fs
mov
inc
dec
mov
push
mov
popa
lock
cmpsb
mov
fs
je
subl
cmc
mov
test
sbb
out
daa
dec
je
mov
fsubr
sbb
sbb
cmpsb
pop
lock
incl
inc
sub
jns
push
test
cmp
pop
ret
orb
cmp
aam
dec
and
dec
cmp
dec
inc
or
sbb
pop
pushw
sbb
pop
push
popf
cmp
in
mov
or
test
pop
xor
sub
lea
in
aaa
sti
mov
sbb
and
sbb
cld
pop
inc
std
xchg
adc
sub
xor
in
addl
hlt
mov
mov
xlat
push
ret
dec
pop
mov
cmpsl
mov
es
daa
iret
push
or
push
mov
adc
jno
into
test
or
adc
sbb
push
mov
push
xor
mov
sub
imul
outsl
cmp
jg
popf
or
aas
loop
sub
dec
cwtl
stos
imul
jl
push
outsl
arpl
xor
inc
mov
xchg
cmc
jns
mov
in
xchg
pop
mov
xor
gs
inc
aam
dec
test
push
cli
insb
cmp
sbb
xchg
push
xor
rcl
test
or
and
inc
push
pop
dec
test
cmc
adc
push
out
cmp
jge
xchg
stos
dec
sbb
movsb
sahf
xchg
jmp
pusha
jbe
lahf
xchg
cmp
insl
out
sbb
push
push
dec
and
sbb
sbb
cmp
xchg
ss
and
dec
inc
in
push
int
fbstp
sbb
add
sub
adcb
int
push
mov
jecxz
lods
dec
add
inc
fidivrs
shlb
out
pop
or
jp
sbbl
inc
dec
xchg
add
xor
sbb
aaa
cmc
andb
add
inc
sahf
loop
movsb
pop
xchg
and
pop
mov
aaa
fistps
cmp
imul
fstl
add
out
subb
sub
fwait
xorl
lock
push
adc
xor
or
in
push
testl
push
mov
pop
cmpsb
loope
lret
std
aas
in
pushf
pop
pop
test
in
pop
mov
xchg
inc
push
or
cmpsb
cwtl
or
push
and
out
adcl
sub
dec
sbb
in
and
imul
inc
dec
adcb
sub
sub
dec
fisttpll
and
jl
stos
or
shrl
fcmove
or
push
mov
or
jmp
out
subl
lods
loope
rclb
movsl
xchg
mov
cmp
daa
xlat
lea
loop
jne
push
or
aaa
sub
push
add
inc
cld
lods
mov
lods
pop
pop
cltd
adcl
jo
cmp
and
xchg
and
and
inc
jo
mov
mov
mov
and
sbb
adc
rorb
xor
dec
dec
sbb
nop
mov
mov
and
lea
cmp
xor
jo
insl
nop
xor
mov
je
push
push
mov
jb
push
enter
sub
add
add
pushf
inc
aaa
ret
dec
ss
and
cmp
xor
lret
pop
push
adc
jno
pop
mov
inc
push
test
cmp
je
cwtl
xlat
cmp
push
daa
dec
xchg
inc
dec
dec
cmp
jecxz
cwtl
and
add
movsb
outsl
jne
lea
icebp
movsl
cmp
inc
pusha
enter
xor
add
mov
inc
divl
or
sti
stos
je
icebp
adc
outsl
mov
mov
imul
push
cmp
jecxz
dec
rcll
adc
ja
adc
sub
test
sbb
adc
cmp
fwait
pop
push
lods
xor
lret
cmpl
sub
push
xchg
cmpsb
gs
inc
fidivrs
push
adc
cmp
or
in
cmp
push
and
sbb
imul
sub
cltd
adc
loop
and
test
cmc
jbe
mov
mov
mov
jo
mov
push
mov
pusha
adc
fstpl
jb
lock
add
scas
movsl
fldl
inc
pop
mov
in
mov
int
jecxz
adc
mov
lock
mov
mov
and
jl
xor
pop
cmp
xchg
jb
shlb
or
outsl
jmp
pop
iret
jbe
inc
adc
mov
mov
imulb
xchg
or
xor
mov
iret
push
add
jmp
pop
cmp
not
sahf
fwait
mov
xor
cmp
or
adc
cmpsb
jmp
mov
je
and
sub
shll
pushf
push
andb
ja
push
adcl
loope
adc
imul
popa
dec
and
sarb
mov
mov
pop
jecxz
dec
cltd
cwtl
lret
cltd
loope
dec
movsl
pop
sub
pop
sbb
xchg
ret
enter
push
cli
popf
mov
xchg
cwtl
cmp
lret
repz
in
divb
mov
adc
ss
xchg
xchg
mov
lcall
outsl
pop
fcomps
pop
push
pop
jge
roll
push
lea
cmp
xorl
in
pop
push
cmpsb
or
loopne
int3
lret
inc
adc
adc
mov
mov
xorps
lret
loope
shlb
push
sub
or
xor
packuswb
ret
cmp
sub
push
das
cmp
sbb
push
cmp
js
push
push
sbb
jb
push
jecxz
push
dec
push
xchg
adc
jp
lds
push
pop
sti
sbb
or
ret
pusha
fcoms
jnp
fidivrl
dec
test
pop
repnz
inc
sub
int
pop
orl
sbb
dec
and
nop
sbb
and
nop
or
call
and
and
and
mov
pop
jb
and
or
jne
sub
ret
mov
nop
es
shl
dec
lds
push
or
popf
push
hlt
rorb
xchg
daa
xchg
sub
test
inc
jmp
stc
cwtl
sub
and
stos
jae
sub
jb
sbb
pop
sub
mov
sub
xchg
sbb
pusha
pop
push
insb
jbe
dec
add
mov
pusha
xor
arpl
pop
mov
push
push
sbb
mov
mov
inc
das
or
push
roll
mov
dec
mov
and
les
outsl
jne
sub
or
inc
push
repz
dec
mov
add
cvtdq2ps
shlb
push
sti
fcoms
and
movsb
jns
lcall
jns
and
fistpll
movsb
adc
and
and
test
add
arpl
add
mov
add
xor
daa
imul
inc
xchg
inc
or
dec
push
inc
pop
and
adc
cmp
test
and
fisubl
movsb
xchg
add
or
movsb
push
add
aad
in
mov
sti
push
adc
and
jle
or
and
cmpsb
es
cmp
in
ficoms
xor
lock
xchg
loope
pop
jne
xor
inc
popf
push
rclb
sub
lock
add
enter
mov
pop
insb
dec
leave
daa
or
sub
pop
popf
lds
pusha
loopne
add
push
aam
outsl
mov
sbb
push
in
js
mulb
mov
and
jne
add
call
push
test
test
in
cmp
je
mov
and
sub
jne
fildll
mov
or
pop
and
stos
pusha
push
pop
push
xor
loopne
push
push
dec
mov
test
adc
je
mov
push
push
icebp
sahf
cmp
xor
lock
adc
test
push
push
icebp
or
adc
xor
and
scas
sub
pop
lock
sbb
xor
inc
fisttps
push
pop
mov
je
inc
xlat
adc
hlt
jecxz
test
push
mov
and
adc
bswap
push
shrl
mov
arpl
mov
jl
inc
add
les
mov
mov
sbb
dec
test
gs
xchg
int3
jge
xorl
xor
lcall
mov
jnp
jp
xor
adc
cmp
fnstcw
scas
imul
xchg
adc
test
mov
mov
sarb
aad
pop
enter
push
fidivl
les
adc
pop
mov
pushf
cmp
shll
cs
clc
pop
xor
scas
out
or
loop
push
push
addl
jg
testl
ja
cmpb
lock
je
adc
cltd
jp
aaa
sbb
inc
or
push
cmp
clts
bnd
jl
adc
lahf
or
adc
mov
sub
sub
es
push
orl
adc
subb
loopne
sarb
adc
out
cmpl
repnz
fincstp
pop
push
clc
imul
shrb
dec
add
jle
inc
inc
push
push
adc
add
andl
in
inc
jo
movl
push
dec
jecxz
mov
adc
mov
sarb
jno
inc
aas
xchg
daa
xor
cmp
inc
aad
adc
movsb
rcrl
mov
aam
pop
pop
mov
sub
inc
jcxz
mov
mov
mov
popf
mov
loope
clc
lea
jae
jle
ret
sbb
adc
jl
mov
lea
inc
sub
nop
add
fnstenv
add
loopne
les
in
mov
adc
and
pop
cmpsb
dec
dec
mov
bound
mov
and
dec
or
cmpl
inc
dec
subb
push
inc
jmp
mov
jo
cmp
bound
aaa
imul
bound
pop
out
lds
fistl
enter
adcl
loope
icebp
and
inc
add
cmp
pusha
pop
mov
inc
sbb
nop
popf
jg
mov
mov
add
add
movsb
inc
or
popa
ja
stos
mov
test
mov
repnz
sbb
xchg
mov
mov
fiadds
mov
mov
dec
cmpsb
or
sub
add
fisttpll
or
int3
nop
pop
sbbl
or
mov
aas
sbb
push
mov
or
das
or
mov
add
cmp
push
add
xchg
in
fchs
test
dec
push
in
push
sbb
jp
out
jecxz
imul
fsub
cmp
jle
cld
jae
inc
add
outsb
mov
mov
sbb
and
or
mov
cmp
rolb
shlb
pop
xor
fiadds
or
pop
sub
dec
ret
cvtps2pd
div
sbb
mov
lret
jp
cltd
sub
daa
repnz
push
jmp
add
daa
loop
sbb
outsb
push
rolb
sub
inc
inc
or
mov
pop
inc
push
mov
dec
sub
mov
lods
add
aas
push
ror
cmpsl
rcrb
cmc
mov
add
stos
xor
mov
cli
sbb
cmp
rcrb
add
mov
arpl
add
pop
xor
dec
add
adc
inc
mov
inc
fisubs
call
out
push
add
jle
push
movl
jp
pop
xchg
add
inc
add
or
cld
lea
dec
cmp
or
xchg
xchg
inc
or
mov
sbb
inc
or
cs
loopne
inc
adcb
insb
sti
in
push
ficoms
pop
add
lds
inc
scas
loopne
lds
push
push
push
imul
gs
push
push
adc
andl
add
pmaxub
cmp
iret
inc
test
sbb
mov
pusha
pop
lea
dec
jmp
adc
adc
dec
pop
subl
popf
pop
adc
jp
add
dec
loopne
or
mov
inc
mov
jbe
scas
push
sub
and
add
push
fimuls
inc
mov
cmp
inc
xor
mov
mov
adc
mov
push
cmpsl
mov
mov
out
xor
loopne
cmp
lods
pop
adc
adc
push
adc
xchg
mov
inc
lea
inc
pop
dec
pop
popa
push
mov
push
or
xor
and
popf
adc
pop
pop
scas
or
cmp
push
js
inc
add
test
lret
lods
adcb
movsl
inc
lods
fidivl
addb
jo
adc
push
cmp
popa
nop
clc
cwtl
sbb
mov
xchg
inc
notb
outsl
popf
scas
sti
orb
xchg
mov
mov
adc
push
pop
xor
mov
mov
xchg
push
lea
dec
jge
int
push
push
xor
dec
mov
fsubrs
xchg
out
push
daa
mov
sbb
jnp
pushf
movsl
inc
je
sahf
loopne
mov
incl
das
inc
addb
and
add
push
fdivr
js
popf
fs
sbbl
rorl
sbb
outsb
sbbb
jmp
mov
cmpsl
push
or
adc
ljmp
adc
es
lahf
inc
filds
jns
add
push
sub
dec
pop
push
dec
cmp
xor
rorb
add
sub
adc
pop
aaa
xchg
pop
xchg
mov
jp
js
fisubrl
fdivs
pop
add
jb
xor
add
in
call
cmp
rolb
jbe
pop
test
fnsave
jmp
dec
addl
jg
mov
mov
js
mov
fistpll
movsb
pop
mov
callw
xchg
push
push
lcall
dec
adc
test
xor
dec
iret
or
loope
inc
cmp
in
xor
movsb
push
push
lea
xor
jne
inc
js
ficompl
cmp
nop
mov
movlps
enter
pop
sub
adc
mov
mov
and
outsb
stos
xor
add
data16
push
pop
rolb
test
sti
adc
fidivs
xchg
add
test
aas
push
xlat
push
and
adc
xor
inc
or
sub
dec
add
dec
aaa
jb
add
jmp
adc
xchg
and
scas
cmp
push
sbb
inc
pop
andb
jle
lret
jge
enter
popl
cli
push
sbb
add
lcall
mov
add
sar
dec
lret
inc
inc
push
mov
add
outsl
in
inc
cmp
dec
dec
inc
icebp
movsb
sbb
dec
or
xchg
ret
sahf
lods
fcoms
mov
arpl
jge
push
inc
jecxz
fstps
pop
jecxz
mov
xchg
ss
or
xchg
push
lcall
out
mul
sub
jl
adc
sbbl
jo
push
add
adc
subl
mov
cmp
shlb
push
lods
nop
out
bound
lret
movsb
xchg
jge
and
adc
sbb
xchg
cmc
loopne
xchg
addl
xor
out
jae
sub
cmp
xchg
jns
push
ljmp
cmp
pop
xlat
addr16
push
fdivs
mov
pop
cmp
insb
xchg
insb
jo
push
xorb
mov
sti
push
and
mov
into
xor
mov
sub
adc
dec
dec
fs
or
add
dec
and
and
add
inc
test
and
add
jbe
cmp
out
inc
cwtl
xchg
adc
jecxz
jne
dec
in
clc
xchg
push
pop
push
int
mov
test
mov
mov
sbbl
cmpsl
aam
and
mov
cmp
push
and
mov
push
push
or
add
cmp
dec
jae
lea
jno
scas
push
jo
dec
inc
add
xchg
xorl
test
adc
push
add
test
mov
mov
jnp
imul
andb
adc
xor
mov
or
rcrl
add
xchg
out
movl
pop
add
bnd
scas
loopne
jnp
inc
mov
dec
cmp
sbb
subl
push
dec
jp
mov
adc
ret
sub
push
je
add
js
lods
iret
push
fnstcw
pop
das
sti
sbb
pop
subl
sub
mov
scas
mov
inc
mov
in
jb
sub
and
jne
mov
enter
pop
xchg
cwtl
sarl
add
int3
adc
sbb
push
mov
cmp
pop
sbb
sbb
mov
xor
inc
sar
adc
ret
sbb
add
adc
mov
adc
push
mov
nop
lds
loopne
mov
mov
mov
sub
bts
or
imul
fdivl
mul
mov
testb
xor
dec
loopne
movsl
add
mov
fsubrp
push
js
popa
add
movsbw
mov
jno
jne
and
outsb
mov
or
je
adc
fwait
dec
testl
arpl
adc
mov
pushf
mov
cmp
push
inc
fldpi
mov
hlt
push
inc
div
sbb
mov
or
je
mov
in
pop
dec
lret
pop
js
je
lret
pop
mov
pop
insl
mov
pop
add
lock
imul
mov
mov
movsl
jecxz
std
xor
mov
aas
lea
stc
lock
gs
inc
dec
cmp
ss
add
xchg
push
xor
loopne
je
fs
adc
subl
lcall
scas
push
xor
pop
pop
iret
gs
jbe
mov
fwait
and
sub
mov
sbb
jns
std
lock
sub
gs
jmp
inc
pop
push
inc
or
sub
sbb
mov
cmp
inc
mov
adc
add
out
fidivrs
inc
imul
jno
pop
sbb
xchg
pushl
push
push
ja
in
jmp
mov
sub
das
ret
mov
stos
mov
hlt
and
inc
loope
sub
ffree
leave
inc
mov
push
push
rorb
sbb
and
jl
adc
mov
rorb
sub
push
ret
imul
and
test
insb
add
dec
xlat
popa
cmp
mov
sbb
xchg
das
push
lock
and
jno
adc
test
cmp
cwtl
in
adc
mov
das
aam
mov
inc
adc
jecxz
xor
out
add
imul
in
mov
mov
hlt
sub
xor
lcall
shrb
cld
adc
or
sub
andb
adc
lret
test
xchg
in
add
mov
cmp
adc
clc
mov
pop
and
je
inc
and
mov
push
jbe
pop
jae
xor
test
in
loope
jnp
push
dec
pusha
leave
orl
insl
and
lret
enter
mov
in
or
inc
ja
mov
hlt
in
dec
mov
movl
sub
mov
cs
sub
gs
mov
cmp
inc
xchg
jbe
xor
mov
adc
adcb
or
rclb
adc
loopne
mov
pop
cmp
call
adc
add
sbb
insb
and
sub
jno
adc
mov
jns
xor
or
mov
movl
clc
push
popa
cmc
mov
mov
cmp
inc
dec
inc
pop
inc
scas
cmpl
test
int3
shrb
add
pop
int
sbb
add
sbb
addl
icebp
sub
sbb
dec
jmp
and
sub
cld
or
jne
movsl
add
and
movsl
rcll
mov
sbb
dec
xchg
inc
in
subb
jp
push
push
and
aam
hlt
jo
mov
fsubrl
sub
or
arpl
es
clc
sub
dec
stc
add
pop
sub
push
add
push
push
push
push
shlb
loop
xor
in
and
popf
lds
xor
push
roll
xchg
mov
call
sub
cmp
and
push
cmp
jne
pusha
dec
ret
mov
popa
push
je
jns
xchg
xchg
pop
xchg
icebp
test
mov
sbb
cmp
data16
loopne
lahf
rcll
dec
pushf
popf
lds
dec
xchg
sbb
mov
das
adc
adc
pop
shr
cs
sahf
mov
shl
mov
pop
push
sub
test
js
and
lret
mov
lahf
pushf
jmp
push
inc
cwtl
lcall
orl
hlt
adc
mov
pop
in
clc
inc
add
push
pop
add
lret
xchg
ret
lods
fnstsw
mov
mov
mov
idivb
or
cmp
js
add
xor
pop
sbb
jbe
sub
or
dec
popf
enter
jmp
push
inc
lret
dec
clc
sbb
jnp
add
add
mov
dec
sbb
adc
cmp
ss
cmp
mov
push
xchg
pushl
pop
or
inc
sub
movsb
icebp
inc
sub
add
rcll
sbb
xchg
dec
inc
inc
movb
iret
pop
inc
cltd
icebp
imul
addr16
stos
enter
dec
add
xor
outsl
cwtl
mov
and
push
imul
sub
jb
jg
push
push
shll
arpl
movsb
adc
pop
in
insw
xchg
addr16
cli
adc
lock
xchg
cmc
std
pop
dec
jbe
cmp
push
mov
out
cmp
inc
jne
push
jno
add
or
jnp
add
lret
adc
push
push
pinsrw
loopne
inc
faddl
lea
xchg
xor
add
mov
add
add
push
push
jl
mov
xor
jg
sbb
push
push
inc
adc
cmp
push
jo
mov
adc
xor
jmp
clc
add
adc
clc
es
fmull
push
mov
push
movsl
dec
adc
sbbb
jns
fadd
mov
and
das
arpl
rorb
js
xchg
les
dec
in
bound
mov
cmp
addr16
inc
pop
por
and
dec
lods
mulb
jge
mov
jl
adc
jl
movsb
mov
dec
cmp
adc
ss
outsl
mov
jbe
xchg
scas
sub
pop
into
pop
dec
pop
jo
scas
add
jmp
cmp
push
inc
rolb
jmp
sbb
lock
pop
int3
je
ds
int3
pop
loop
and
push
xor
loopne
daa
adc
adc
or
jmp
cmp
push
push
in
and
imul
mov
sub
negl
dec
mov
jle
insb
xor
pop
cmp
cmp
push
dec
jge
inc
jo
and
xchg
mov
cmpsb
test
add
jecxz
push
pop
add
decb
test
jge
push
loope
daa
aas
fstpt
dec
pusha
in
mov
sbb
lret
test
mov
ja
or
pop
add
inc
test
mov
xor
lea
jns
push
mov
addl
stos
jno
scas
adc
push
shll
lea
fldenv
jge
std
popa
sub
aas
push
lea
push
loopne
or
imul
loopne
int
test
test
add
xor
xchg
xlat
adc
jnp
mov
pop
sub
andb
sbb
adc
xchg
mov
adc
pop
mov
pusha
push
nop
stc
jle
add
cmpw
sbb
cmpb
stos
adcb
sbb
push
lret
testl
add
add
sar
dec
mov
push
je
jl
ja
mov
jns
icebp
sbb
pusha
adc
pop
jns
pop
adc
or
add
xor
popf
xchg
je
and
mov
cld
rolb
mov
dec
push
loopne
pusha
sub
jl
sub
jmp
out
jg
and
pop
sti
lcall
dec
movzwl
cmpl
push
adc
dec
outsl
or
loope
dec
dec
add
add
xchg
dec
sti
rcrb
sbb
add
insb
andb
jl
repz
lock
insb
cwtl
jae
outsl
xchg
xchg
dec
inc
addr16
inc
pop
mov
add
add
sbb
bound
pop
sbb
pop
in
or
pop
xchg
pop
and
pop
add
jo
pop
enter
cmp
jne
jb
fs
dec
xchg
add
enter
pop
dec
pop
push
pop
push
dec
aad
mov
jo
cmp
lock
and
lea
jle
int3
roll
pop
push
add
ficoms
sbb
out
in
and
andb
push
push
inc
and
and
sub
orb
or
sbb
xor
push
aaa
pop
mov
popa
sub
adc
and
push
mov
or
adc
rolb
pop
xor
and
adc
shr
inc
pop
mov
xor
lock
cmp
mov
movhps
fwait
jle
adc
push
inc
jg
mov
add
pop
dec
inc
iret
mov
ss
cmpsb
addl
dec
das
in
lret
push
mov
cld
test
lock
jmp
sub
sub
mov
and
or
mov
xchg
shll
lods
popa
adc
stos
mov
jbe
inc
adc
orl
int3
and
push
add
or
jne
inc
pusha
mov
push
dec
inc
and
cld
pop
lods
or
inc
push
pop
dec
daa
xchg
fisubrs
outsb
push
cmpl
pop
je
or
adc
inc
add
andb
dec
or
mov
faddl
cmp
push
lahf
leave
sbb
jl
rolb
in
push
or
xchg
mov
inc
hlt
ds
inc
lea
mov
pusha
push
enter
mov
mov
mov
jne
imul
dec
movsl
shrb
mov
sub
divb
and
and
scas
push
pop
xchg
dec
xchg
mov
add
movsl
aad
lods
adc
in
push
or
scas
xor
xchg
sbb
hlt
lcall
ja
jnp
dec
pushf
nop
sbb
and
mov
jmp
loopne
inc
xchg
repnz
mov
in
add
jecxz
pop
pop
inc
fdiv
imul
push
mov
stc
and
adc
loope
incl
cli
dec
xor
fimull
push
data16
lock
adc
lahf
in
and
adc
cli
and
in
mov
sbb
arpl
sub
lret
nop
dec
sub
sbb
mov
jmp
icebp
sub
inc
mov
jae
sub
sub
les
or
inc
aaa
jmp
mov
sub
mov
push
das
pop
inc
lea
mov
cld
notl
or
xor
adc
adc
adc
ljmp
pop
in
pop
xchg
mov
adc
dec
or
sbb
adcl
test
xchg
scas
jno
test
idivb
insl
xchg
xor
add
sbb
inc
mov
add
inc
sahf
imul
sbb
sub
nop
and
nop
in
pop
aaa
adc
mov
pusha
mov
pop
ret
adc
push
mov
dec
clc
loope
push
add
dec
sub
push
or
push
inc
add
js
or
popa
inc
sahf
sbb
inc
ss
mov
jl
sub
pop
dec
mov
in
pusha
popa
dec
inc
inc
lock
jns
orb
test
jne
and
nop
repz
rcrl
and
xlat
sbb
test
mov
addr16
test
jno
mov
inc
sub
mov
push
loope
fwait
in
test
sbb
fnstsw
inc
and
call
pop
pop
xchg
lock
andl
add
xor
div
insl
daa
jo
push
cmpsb
loopne
adc
push
shr
cmpb
inc
out
fdivl
add
xchg
into
shrb
fs
popa
xchg
push
inc
add
push
enter
dec
pop
xchg
pop
rcll
jo
sbb
imul
rcrl
addr16
cmpl
loope
mov
movsl
inc
mov
adc
call
jge
add
andb
push
add
inc
call
cmc
add
dec
add
mov
aam
mov
mov
adc
movsb
rolb
cmpb
mov
jne
push
sub
movsb
cmp
enter
mov
dec
xchg
popa
xor
or
clc
iret
sub
in
jmp
add
inc
inc
sbb
adc
les
leave
js
pushf
outsb
dec
jnp
pop
mov
rorl
andl
add
out
and
jae
push
and
xor
pop
faddl
xor
test
pop
sub
cmp
lods
or
add
es
cld
hlt
xor
leave
test
or
sub
rclb
insl
fldenv
mov
xor
bound
push
push
pop
jo
add
stos
in
inc
stos
push
and
pop
inc
cmp
sub
mov
and
push
jne
adc
push
fcmovnu
or
lods
cmp
jmp
push
jg
lods
inc
inc
fldt
repz
cmp
out
pop
rorl
push
je
xor
and
out
or
jge
push
pop
sub
or
push
push
pop
subb
mov
push
mov
pop
sub
cmp
rcll
mov
fistpll
in
lds
mov
sub
adc
test
xchg
or
enter
rol
add
lods
and
ret
icebp
mov
pop
or
inc
or
pop
jo
pop
and
imul
mov
mov
dec
sub
nop
inc
cmpb
roll
decl
mov
orb
outsb
repnz
dec
inc
sub
and
push
or
and
icebp
or
iret
lret
mov
sar
mov
icebp
dec
pop
je
lods
dec
mov
test
aam
jecxz
xor
shlb
add
mov
icebp
andb
sbb
or
push
and
push
add
pushf
inc
xor
jne
lea
mov
xor
scas
dec
repnz
pop
sub
xchg
mov
pop
mov
or
adc
xchg
dec
jne
push
testl
and
dec
and
pop
inc
cmpsb
push
loope
lods
sbb
nop
lea
jae
nop
dec
pop
jb
or
or
or
nop
jge
es
jge
test
shlb
jo
add
pop
das
and
adc
pop
cmp
out
pusha
testb
xor
jbe
push
or
mov
inc
dec
or
xorl
mov
pushf
scas
shlb
or
add
add
or
push
or
fwait
add
cmp
adc
push
jp
cmp
cmp
pop
lea
mov
inc
inc
sbb
mov
rcr
adc
pop
cwtl
add
pushf
mov
sbbb
inc
mov
or
or
xchg
add
add
in
negb
push
ret
push
test
adc
cwtl
add
adc
sbb
inc
adc
arpl
adc
fnsetpm(287
rcr
rclb
adc
mov
pushf
ret
popa
xchg
shrb
pop
pop
shrl
pop
mov
sbb
mov
pop
mov
lcall
inc
add
es
lock
sbb
shr
rclb
fldt
sbb
pop
cs
stc
or
imull
adcb
fcoms
xor
adc
mov
divl
movaps
movsl
mov
pop
pop
cmc
js
mov
dec
jmp
mov
cmp
enter
xchg
xor
stos
dec
pop
sub
test
dec
ljmp
push
xchg
push
and
imul
sub
andl
sbb
shl
lret
and
fnstenv
pop
fwait
mov
mov
inc
hlt
push
rcll
and
pushf
pusha
jnp
xorl
in
xor
inc
or
push
jbe
pop
xor
xchg
and
adc
jb
push
dec
inc
dec
ljmp
xor
sbb
add
xchg
sti
mov
cld
icebp
mov
sub
cmp
and
push
rorl
enter
imul
fs
xchg
adc
add
mov
imul
pop
adc
cmp
xor
aas
ret
mov
sub
jmp
pusha
inc
mov
flds
and
jb
popa
test
hlt
or
addps
xor
or
sar
cmp
mov
scas
rorl
adc
dec
mov
cmp
push
inc
arpl
xchg
push
add
sub
scas
cli
xchg
mov
lret
push
cmp
popf
add
mov
lea
mov
sbb
lea
push
les
daa
test
inc
mov
push
sbb
dec
and
add
adc
andb
test
xor
mov
jmp
or
cmpsb
movsb
xchg
repz
test
mov
ljmp
lock
shll
dec
jg
or
inc
jns
pop
jecxz
push
pop
das
test
or
xor
nop
and
test
sbb
lods
pop
inc
and
inc
pop
pop
dec
xchg
fisubrs
inc
adc
sbb
nop
in
testl
je
adc
inc
mov
and
pop
les
inc
cli
adc
cmpsl
ds
movsb
push
dec
in
cmp
dec
inc
ret
fists
loope
xor
cmp
mov
fs
mov
faddl
cmp
push
iret
push
mov
cmp
inc
add
jp
sbb
lods
sub
push
and
mov
aam
js
dec
adc
mov
lcall
push
xchg
sbb
dec
and
add
movzwl
add
addl
fstps
dec
movsl
loopne
sbb
mov
cmp
inc
or
or
or
or
mov
mov
xchg
pop
pop
or
mov
xorb
dec
cmp
sbb
fistl
insb
roll
push
push
jnp
or
insl
inc
shll
cltd
push
and
ret
insl
dec
dec
mov
xor
cs
popl
or
mov
test
inc
push
mov
mov
mov
or
mov
xor
mov
pusha
sub
dec
imul
ds
push
inc
insb
out
push
mov
repnz
push
xor
jmp
adc
cmp
cmp
fsubs
mov
fisubl
roll
adc
or
add
sbb
into
jle
adc
ds
pushf
pop
pop
repz
dec
jl
test
inc
clc
jl
push
adc
and
push
adc
push
pusha
and
arpl
lcall
fisubrl
mov
sbb
mov
fmuls
xor
xchg
sbb
mov
mov
ret
movsb
pop
loope
jp
pop
pushf
pop
add
fidivs
sub
sti
adc
mov
das
in
sbb
mov
pop
jge
jmp
pop
cmpb
mov
mov
jae
sbb
xor
std
dec
push
sbb
xor
sbb
inc
lcall
imul
sbb
cmpsb
fstpt
pop
hlt
adc
add
push
dec
leave
popa
adc
or
mov
adc
adc
dec
push
sbb
adc
mov
dec
bound
pop
jl
es
xchg
fsubrl
xor
fst
icebp
push
sbb
pop
sbb
and
add
das
mov
xor
xchg
and
sub
dec
ds
nop
cltd
xchg
xor
fs
jno
lods
loop
filds
sbb
je
sbb
push
pop
rorb
xor
inc
scas
inc
pop
and
out
nop
sub
insb
mov
aaa
jmp
add
sub
dec
rorl
xor
jmp
xorb
pop
sbb
sub
es
inc
jge
add
push
push
cs
jmp
lods
push
xor
cmp
scas
dec
ss
push
ja
jae
push
inc
sbb
add
and
subl
into
mov
insl
lret
push
imul
push
or
adcb
and
repz
or
adc
xor
cmpsb
js
inc
sbb
cmp
test
je
test
sub
inc
test
ja
fistl
stc
mov
xor
hlt
lock
das
jmp
push
sub
cs
adc
movsb
pop
push
push
mov
loopne
cmp
push
mov
inc
cwtl
insl
sub
mov
jmp
pop
rcr
ja
lds
insl
in
and
cmp
sbb
sbb
fildl
dec
mov
push
and
jne
stos
push
push
aas
jmp
scas
imul
dec
sahf
cmc
add
and
jbe
pushf
add
xorb
cmp
push
xor
dec
call
inc
and
mov
push
or
or
or
xchg
sbb
and
imul
sub
pop
test
jno
ljmp
test
sbb
add
mov
cmpl
adc
push
xor
loopne
ja
sbb
pop
cwtl
add
rcll
or
movsb
test
lcall
inc
pop
or
fsubrs
pop
or
out
int3
pop
xor
jmp
cmp
fidivs
mov
fbstp
sbb
adc
fsubrs
jg
dec
test
add
mov
cwtl
ficoml
jecxz
xor
or
nop
int3
xor
lods
dec
xchg
mov
pusha
add
inc
in
xor
inc
int3
or
sbb
insl
test
aaa
sbb
pusha
sbb
dec
js
sub
cmpsl
rol
and
inc
imul
or
xor
test
add
out
stos
and
or
fstp
cvtps2pi
cvttps2pi
mov
sti
aad
push
pop
andb
sub
and
xor
dec
cwtl
les
push
mov
jno
push
nop
addr16
dec
clc
popa
or
leave
sub
scas
sub
and
cmp
push
clc
add
sub
xor
pop
ds
mov
cmpl
adc
mov
enter
or
sarl
push
jle
adc
das
fcomps
inc
sbb
dec
lahf
push
adc
imul
rorl
or
es
sub
mov
pop
pop
and
mov
cs
add
push
cmpsb
in
jo
jo
fcmove
push
xor
sub
rolb
push
je
and
pop
jnp
push
push
mov
movsl
bound
daa
push
sbb
and
jae
arpl
pop
mov
add
sahf
mov
push
or
xchg
or
add
loope
out
cld
aam
loopne
iret
push
pop
push
push
lret
sub
sub
mov
sub
nop
sbb
push
fnstenv
and
out
or
pop
pop
sub
mov
mov
jns
addr16
faddp
loop
push
sbbl
nop
shlb
add
push
sub
push
je
fldcw
adc
push
fbstp
ja
ret
inc
hlt
test
and
hlt
xchg
setp
sbb
xorw
ret
call
shlb
add
orb
clc
sarb
dec
or
adc
call
push
inc
pop
or
pop
mov
push
jmp
push
rcrl
pop
xor
iret
push
sub
lea
pusha
add
push
add
mov
pop
inc
cmpl
pop
add
pop
lds
push
aad
ss
cs
hlt
mov
test
imul
lcall
jl
add
add
ret
and
inc
dec
mov
in
mov
add
loopne
fcoml
fcom
lea
inc
push
lock
or
enter
shrl
jg
lret
xchg
push
lods
push
fisubs
sbb
fwait
lret
and
xor
mov
addr16
push
and
adc
mov
xchg
and
aam
add
push
or
adc
imul
push
test
std
mov
xor
xchg
mov
and
xchg
inc
inc
sbb
or
sarb
xor
scas
push
lods
ss
mov
add
jecxz
xor
sub
adc
das
add
aam
in
adc
mov
xlat
lea
pop
adc
in
clc
insl
sahf
lret
or
mov
leave
mov
repz
push
or
sti
or
push
cmp
ficoml
fwait
xor
mov
pop
and
decl
adc
pop
push
adc
cmp
sub
ja
inc
movl
or
inc
or
inc
adc
pop
rcr
fldz
and
add
and
cmp
and
or
sub
pop
xor
cmp
flds
scas
fcoml
push
xchg
sarb
push
sbb
testb
and
adc
mov
sub
push
xchg
mov
add
mov
xchg
fsubrs
adc
lahf
adc
sub
inc
mov
inc
push
mov
or
mov
pop
movsb
jg
or
fmuls
sbb
or
ds
data16
lea
fcoml
fsubs
mov
in
sub
xor
adc
pop
mov
adc
sbb
sbb
lahf
test
subl
cmpsb
jno
add
jle
push
jmp
fstps
add
cmp
jl
repz
push
cmp
jle
cmp
jp
push
cmp
cld
sti
dec
cld
cmp
inc
add
add
inc
jmp
xchg
icebp
mov
movl
insb
popa
lret
mov
xchg
repnz
jecxz
and
cltd
pop
idiv
lock
xchg
enter
cld
adc
cmp
inc
movsb
pop
rcr
adc
imul
and
mov
inc
lock
das
addb
add
fstps
add
jbe
scas
mov
cmpsl
mov
outsl
xor
ret
dec
mov
xchg
and
sbb
cmpsl
mov
xor
dec
js
and
xchg
pop
dec
xlat
or
mov
cmp
jb
adc
and
xchg
lret
adc
inc
sub
mov
fs
inc
daa
int
cmp
push
js
inc
fwait
mov
dec
outsb
loop
jo
mov
loope
mov
adc
ror
mov
xchg
pop
insl
iret
cmpb
or
jo
popf
movsb
pop
outsb
ss
sbb
pop
or
nop
loope
and
pop
pop
pop
and
cmp
xor
and
insl
or
cltd
fs
or
add
shrb
jb
cmp
incb
rclb
pop
or
and
pop
mov
popf
je
mov
push
stos
outsl
mov
out
pop
adc
adc
dec
pushf
jno
add
push
data16
push
sbb
jo
push
enter
sbb
add
shlb
sbb
in
jno
add
dec
repz
or
dec
or
dec
leave
mov
les
stos
fs
add
ret
xor
out
fistl
cltd
or
push
lods
inc
jnp
add
lods
or
add
iret
ret
or
aaa
xchg
xchg
inc
push
sbb
or
sub
mov
mov
xchg
popa
mov
inc
mov
inc
push
cmpsb
add
test
xchg
sahf
sub
inc
fwait
in
mov
mov
and
or
fidivl
pop
pushf
pop
xor
adc
outsb
and
leave
adc
and
pop
sub
cs
movl
jae
push
push
ljmp
stos
and
gs
adc
fcomps
add
cmc
push
in
jo
std
cmp
stos
push
add
adc
ret
xchg
fs
or
push
and
add
add
add
nop
push
inc
sbb
xor
shrb
leave
xchg
jb
adc
adc
insb
or
aas
pop
sub
adc
add
sbb
xchg
adc
sbb
xchg
sbb
js
mov
and
stos
loopne
mov
loopne
push
add
xchg
sub
and
xchg
jge
pcmpeqd
lret
mov
sbb
push
loope
push
ret
pusha
pop
sbb
lods
call
shrb
out
les
inc
sahf
rol
sbb
mov
shrl
imul
sbb
adc
dec
push
rcll
and
add
test
enter
adc
add
sbb
and
add
sbb
cli
xor
push
mov
je
shrl
fsub
fsubrs
mov
cmpsl
xor
in
rolb
sbb
inc
outsl
xor
or
add
jb
add
add
dec
aaa
and
push
mov
mov
pop
aad
inc
fistl
sub
dec
xchg
scas
adc
icebp
push
repnz
cld
je
mov
cmp
pminsw
jne
rcrb
nop
es
pop
mov
shlb
or
sub
push
adc
push
ret
aaa
int3
inc
jge
inc
and
inc
jbe
xchg
xchg
or
jbe
and
inc
mov
std
lods
jbe
jb
test
testb
adc
jae
outsb
subl
push
clc
push
mov
pop
les
xor
xchg
gs
orl
pop
in
push
popa
stos
cmp
jne
fwait
mov
test
imull
insl
cmpb
push
popa
xchg
mov
subl
add
adc
pop
xlat
cmp
fildl
lea
cltd
xchg
dec
add
loopne
adc
xchg
push
icebp
pop
decb
daa
fadds
sub
xor
enter
add
repz
push
pop
clc
or
stos
xchg
dec
add
push
adc
dec
cmp
jg
jo
add
adc
lods
popa
push
add
imul
rcrb
pop
mov
outsl
lahf
cwtl
fisubl
or
adc
push
lea
mov
and
add
sbb
and
lahf
dec
push
xchg
rol
inc
xor
iret
adc
jle
ffreep
jecxz
add
insb
cmp
int3
fildl
adc
loopne
inc
adc
es
mov
test
jns
push
xchg
inc
add
mov
inc
push
pop
cmpsl
sbb
mov
xor
in
pusha
xorl
lods
pop
rcrb
or
or
movsl
loop
fmuls
sbb
or
xchg
sub
wbinvd
std
fisttpl
dec
fldl
or
movsb
std
loopne
les
nop
add
andl
fldl
push
sbb
dec
ja
sbb
fstpl
and
mov
mov
push
pop
push
pop
pop
imul
mov
jo
sti
idivb
dec
pop
and
loope
fsubrp
pop
fs
push
or
pop
mov
repz
push
repnz
jl
int3
mov
in
push
in
in
leave
inc
or
push
push
cs
or
cmp
ja
inc
rorb
mov
sub
pop
int3
in
notb
mov
sub
aaa
inc
cmpsl
xor
inc
xchg
sub
sub
pop
inc
inc
dec
sub
xchg
addb
scas
or
ffreep
jbe
shll
stos
adc
dec
arpl
mov
jge
sahf
sbb
je
lahf
cmpb
into
dec
dec
mov
add
xor
insl
dec
or
cmp
mov
lods
jbe
fmul
mov
cltd
jnp
ja
push
and
dec
xor
mov
or
adc
js
sub
and
mov
pop
push
in
and
adc
dec
les
dec
iret
arpl
loope
fcmovne
daa
xor
jnp
xchg
add
imul
mov
int
xchg
xor
clc
add
pop
pop
mov
out
or
lock
sbb
leave
shld
add
adc
jb
ja
lea
push
push
js
pop
push
je
lcall
filds
push
leave
adc
mov
push
adc
or
nop
push
push
xor
sbb
sbb
call
push
push
push
sarl
mov
lods
add
pop
pop
enter
int3
leave
pop
add
cmp
sub
sbb
adc
cmpsl
roll
push
mov
cmovns
ja
cmp
test
adc
add
and
dec
pop
mov
adc
sub
cmp
xchg
cld
pop
or
jle
out
inc
cmpw
jne
fdivrp
mov
inc
cld
cmp
mov
push
jl
mov
aad
sub
test
popl
sti
jg
stc
mov
mov
or
mov
cld
mov
lret
push
push
push
jp
push
push
push
jp
mov
pusha
inc
push
add
ss
or
inc
jle
js
mov
or
xchg
mov
les
aam
icebp
mov
mov
adc
pop
mov
ss
adc
add
sbb
in
jle
ja
sbb
sub
sbb
scas
movl
fwait
jp
lock
pop
andb
mov
add
je
cmovo
jns
dec
pop
or
sbb
jle
movsl
xchg
pop
push
pop
iret
inc
imul
or
pop
test
rcll
xchg
sub
xchg
push
mov
push
popf
push
push
sub
xchg
adc
mov
inc
pushf
into
jne
adc
mov
imul
fadds
pop
push
xchg
lock
rorb
lods
xor
mov
mov
loopne
push
int
adc
add
insb
ret
lods
aad
and
cmp
imul
pop
test
into
gs
lds
dec
inc
lods
je
lret
xchg
or
pop
lock
sub
xlat
cmp
and
lods
push
orb
dec
sbb
pusha
push
jno
lods
mov
pop
adc
cwtl
push
xchg
rcr
and
imul
fldt
ds
scas
pop
ret
pop
pop
dec
cmpsb
nop
add
aam
mov
xchg
ja
and
adc
rclb
xchg
and
xor
or
or
inc
sbb
fwait
lret
xchg
xor
push
mov
lahf
add
dec
rol
push
dec
mov
add
push
adc
lods
and
jb
push
add
in
les
mov
xor
fistpl
jo
add
outsb
pop
add
bnd
mov
add
in
je
js
dec
sbb
add
add
repnz
mov
dec
add
jecxz
mov
xchg
push
repz
int3
test
outsb
inc
push
add
test
or
loopne
jg
andl
or
inc
lret
mov
pop
aam
cmp
dec
pop
mov
psrad
add
ret
mov
movsb
mov
or
inc
pop
pusha
rcrb
test
adc
push
ja
sub
xchg
insb
mov
jno
leave
pusha
jmp
mov
mov
adc
insl
push
icebp
and
jno
imul
add
jg
je
or
xchg
nop
add
cmpsb
std
fcmovnbe
sub
dec
je
add
sbb
dec
lock
jo
dec
jmp
push
out
or
push
dec
loop
or
mov
out
or
jg
out
push
shl
mov
sarb
nop
or
mov
dec
scas
push
and
sub
push
es
mov
cmp
test
inc
arpl
jp
push
imul
cmp
nop
push
jo
mov
faddl
jnp
jb
and
nop
xchg
adc
and
out
adc
push
pop
enter
add
push
push
sbb
mov
push
cmp
pop
push
cmp
nop
subb
add
lahf
adc
push
cmp
inc
push
cmp
mov
xor
add
push
je
jb
and
rcl
push
mov
ret
jmp
insb
cmc
push
decl
gs
rcll
sbb
repz
inc
dec
pop
arpl
cmp
repz
stos
mov
leave
repz
repz
out
sti
out
sahf
out
nopw
sub
aaa
inc
dec
push
pop
imul
xchg
in
movsl
xchg
ss
das
bound
scas
popa
pop
sbb
push
std
aaa
add
scas
fucom
icebp
mov
mov
push
push
xchg
outsb
add
adc
popf
nop
sti
das
je
xor
out
cmpb
lea
scas
int
rol
add
les
imul
orb
movsb
xchg
test
jmp
jl
mov
shrl
xchg
cmp
or
inc
mov
or
ja
fwait
xchg
call
fldz
fcompl
and
cmp
ja
ficompl
xchg
test
loope
movsb
sbb
movsb
mov
arpl
int
pop
adc
sbb
cmp
cmp
mov
jl
jge
lret
out
push
dec
test
lods
adc
bound
cld
add
push
sbb
aas
repz
les
inc
ja
rorb
adc
loope
cmp
jge
out
mov
cmp
push
cld
lock
movsl
out
add
jp
scas
cmpsb
push
cmc
popf
add
pop
stc
ficoms
test
ja
imul
rol
or
mov
mov
mov
xchg
mov
push
ret
gs
push
sbb
das
push
mov
adc
lock
or
xor
filds
or
enter
or
mov
adc
xchg
js
mov
and
decl
sub
pop
fdivs
mov
and
stos
and
or
cmp
outsb
faddl
pop
fcomip
push
mov
mov
xor
je
inc
push
or
or
fs
insb
movb
push
aad
xchg
and
inc
leave
adc
pop
sbb
les
repz
pop
lea
jo
add
sbb
push
add
mov
cmp
pop
xchg
test
shlb
adcb
xchg
mov
mov
cmpb
jecxz
cmc
jb
mov
int3
fiadds
sub
push
xchg
xchg
sarb
dec
div
push
add
mov
mov
xor
or
lods
and
sub
cmp
mov
fwait
pop
cmp
push
sub
jo
test
rsqrtps
mov
or
bnd
xchg
adc
jp
adc
or
mov
xor
sub
push
mov
xor
jle
icebp
scas
jecxz
mov
xor
sbb
enter
dec
xor
das
insb
lcall
jl
dec
lcall
dec
lcall
add
in
jae
add
mov
mov
sbb
mov
cltd
mov
hlt
push
int3
jl
mov
test
add
cmp
orl
lret
cmp
jns
xlat
movsb
inc
xor
add
in
cmp
mov
pusha
mov
mov
sub
or
pushf
js
stos
push
nop
and
in
jbe
test
sbb
ljmp
shlb
sbb
sbb
sbb
nop
stos
shlb
sbb
push
cltd
fs
sbb
in
mov
push
into
push
rorb
adc
sub
or
sbb
sbb
pop
aam
movsb
sub
sub
sbbl
mov
pop
inc
and
jmp
pop
mov
shl
xchg
inc
adcl
pop
gs
pusha
int
mov
mov
xor
cmp
pop
push
ficomps
push
lret
mov
into
pushf
xchg
xchg
loop
push
jle
enter
adc
mov
jb
sbb
aaa
rcrl
jp
xchg
imul
dec
movsl
mov
mov
int3
cmp
sub
sub
orb
cmp
movsb
aas
ret
dec
int3
mov
push
push
inc
cmpsl
pusha
mov
and
mov
nop
mov
aaa
and
and
ss
mov
adc
daa
cmp
sahf
dec
sbb
push
inc
push
cmc
sub
inc
push
pusha
or
sub
cmovp
addl
jo
test
outsl
mov
adc
popa
inc
jno
movsb
roll
ret
arpl
sbb
inc
xor
dec
loop
mov
nop
mov
sbbb
push
outsl
inc
sbb
pushl
jmp
push
sub
pusha
adc
outsl
aaa
je
stos
mov
and
sub
mov
adc
and
rorb
mov
imul
xchg
in
add
pop
dec
cmp
pop
je
mov
int
pop
push
mov
adc
pop
adc
mov
das
xchg
pop
ret
jecxz
sbbl
out
add
pop
sub
test
jne
or
sarb
jecxz
pop
mov
push
fmull
add
add
movsb
pop
sbb
mov
sbb
mov
inc
lods
out
repz
ficoml
test
pop
fwait
jo
mov
inc
xor
xchg
psubw
push
push
les
push
xchg
pop
jno
roll
mov
ret
stos
xchg
jne
adc
in
and
pop
ficompl
adc
insb
enter
inc
rorb
jge
enter
iret
mov
mov
jl
imul
enter
add
loopne
test
or
mov
rcrl
push
call
xchg
setl
pop
repnz
adc
movsb
adc
cmc
adc
push
sbbb
leave
push
add
and
dec
adc
lock
push
es
push
call
int3
push
and
out
and
loopne
cmpsb
push
or
test
pop
sbb
in
jecxz
or
fdivrl
negl
lods
fsubrs
sbb
push
lods
sbb
test
imul
sub
dec
add
nop
fwait
push
mov
rcrb
aaa
adc
sub
mov
mov
and
mov
lock
xchg
adc
lea
test
dec
mov
and
movsb
adc
sub
xorb
xlat
jge
test
push
push
inc
dec
and
int
js
movsb
mov
pop
pop
push
sub
inc
cmp
sub
mov
inc
push
in
test
xchg
mov
test
rcrb
pop
and
je
test
or
pusha
dec
xor
pop
pop
ret
es
add
add
lods
push
arpl
inc
or
or
sbbl
sbb
addl
call
add
aad
imul
test
sbb
popf
in
addl
and
shl
adc
test
mov
or
shlb
jo
inc
xor
jb
jbe
in
and
xchg
dec
in
roll
jne
dec
mov
adc
add
mov
neg
dec
mov
movb
lods
add
mov
shl
and
cmpb
adc
outsl
or
aad
sbb
sbb
divl
xor
push
cmpsl
test
sbb
data16
sbb
adc
mov
or
imul
mov
outsb
addb
jle
sbb
inc
out
and
psllw
jnp
sub
xchg
mov
mov
mov
fsubl
adc
insb
popa
scas
insl
lods
sub
push
xor
shr
adc
ret
sbb
mov
mov
mov
dec
dec
mov
sub
inc
xchg
mov
and
xchg
fdivl
shrl
inc
leave
dec
sub
sub
adcb
inc
jmp
adc
rcl
sbb
sbb
sbb
jbe
or
shrb
sbb
or
sbb
pushl
movsl
push
add
push
sbb
mov
xchg
lcall
xor
mov
sub
dec
dec
roll
push
hlt
push
mov
xor
or
and
add
sbb
das
and
movsb
shrb
adc
stos
sub
push
pop
es
mov
push
pop
daa
push
fs
sub
movsl
cmp
sub
movsl
dec
enter
lods
loopne
in
dec
sub
sub
adc
pushf
fsubrs
fcmovbe
movsl
pop
loopne,pn
push
push
dec
insb
movsb
lea
mov
mov
addb
fwait
test
mov
adc
add
mov
test
pop
inc
push
cmpsb
popl
push
aad
xor
mov
loop
dec
popf
iret
pop
jo
das
not
icebp
inc
cs
fiaddl
movsb
cltd
nop
data16
sub
imul
cltd
nop
inc
sub
fs
push
and
imul
and
lcall
cltd
nop
mov
lcall
xchg
adc
sbb
sbbb
js
test
les
and
aam
lods
add
rcl
push
vprotb
sahf
adc
push
jge
mov
add
test
add
xchg
in
orl
add
les
pusha
mov
dec
out
pop
sbb
cs
push
or
dec
test
lcall
fcoms
push
stos
jnp
push
lds
push
inc
ret
push
or
test
sbb
dec
adc
divb
pop
jecxz
repnz
movsb
add
pop
sub
and
orl
push
subb
pop
rorl
jg
jo
inc
pop
adc
dec
dec
sbb
and
or
jns
mov
int
inc
sub
rorb
pop
icebp
cwtl
popa
add
xor
mov
clc
pop
call
scas
ss
xchg
inc
jbe
leave
add
mov
inc
or
cmp
push
shlb
pop
add
pusha
jl
dec
push
ds
clc
cmp
lahf
daa
lcall
icebp
inc
push
jmp
ss
adc
push
cmp
pushf
fcoms
push
mov
or
test
cmp
pop
sbb
test
sub
addr16
push
or
sub
scas
cmc
addr16
lret
lods
imul
or
popf
pop
cmp
std
mov
jbe
mov
mov
push
jmp
pusha
and
jmp
cli
inc
add
clc
sub
aad
and
mov
jmp
fistpll
inc
fstp
adc
inc
xor
aaa
sbb
cmp
mov
xor
jae
and
sbb
pop
adc
and
pusha
ljmp
clc
loope
push
enter
jbe
inc
mov
jb
mov
pop
pop
adcb
mov
xchg
inc
adc
push
addl
jb
adc
enter
jno
repnz
cmpsl
mov
js
les
jle
mov
push
sbb
xlat
jbe
mov
xchg
cmp
jne
inc
add
roll
ret
jl
xchg
addl
pop
sbb
subl
mov
cmp
jne
mov
inc
sbb
div
lods
repz
jae
inc
adc
adc
and
je
mov
add
or
dec
roll
mov
jmp
out
mov
outsb
push
stos
sub
xchg
inc
or
movsl
xchg
cmc
xor
or
mov
or
xor
pop
sbb
or
mov
add
mov
fcmovu
pushf
cmp
xlat
aad
or
and
lea
jmp
mov
push
out
sub
pop
push
and
ljmp
test
and
leave
sbb
clc
xchg
icebp
or
sbb
sbb
inc
sbb
add
pushl
inc
jbe
xchg
pop
lea
ret
sbb
test
out
cmpsb
sbb
jno
popa
or
or
jmp
xchg
xor
lahf
stos
xchg
adc
jmp
aam
adc
imul
push
mov
cmp
ds
jl
or
ud0
mov
cmp
or
and
mov
movb
movsbl
shr
mov
movsb
test
push
add
pop
dec
add
nop
inc
mov
leave
jne
pop
pop
xchg
cltd
pop
movsl
xchg
je
and
pop
and
dec
or
push
inc
sub
mov
cmp
mov
hlt
ficoms
push
lods
add
push
mov
aas
push
imul
jmp
dec
daa
inc
and
pop
jbe
enter
add
sbb
shll
sti
add
adc
mov
pop
cmc
xor
mov
dec
sbb
mov
xchg
sbb
or
je
dec
and
add
xchg
and
mov
jnp
push
rcll
dec
jmp
aaa
xchg
sbb
sub
lods
fsubr
and
decl
jge
adc
pop
fs
lock
pusha
push
cmp
push
push
shrl
xor
sub
ficomps
aaa
jno
mov
pop
pop
bound
add
or
push
adc
push
lods
push
mov
rclb
mov
data16
xchg
ficomps
mov
inc
je
mov
add
leave
mov
inc
mov
dec
pushf
xchg
adc
fcomps
sub
sub
or
cmp
xchg
test
and
and
leave
inc
or
out
xchg
jl
pop
add
mov
enter
lock
das
mov
loope
test
push
in
lock
dec
mov
pop
sbb
and
and
fcompl
jmp
pop
lock
and
lret
and
mov
repnz
or
or
int3
repnz
std
or
gs
idivl
adc
enter
nop
xor
and
jmp
cmp
inc
add
xor
inc
or
mov
leave
or
aad
lcall
sub
popa
xor
test
jns
lea
cmp
je
pop
xor
and
daa
daa
adcl
addr16
imul
xor
sub
xor
orb
cmp
aam
xor
add
movsb
outsb
xor
rcll
imul
mov
push
cli
dec
lea
sub
dec
xor
adc
mov
scas
shld
addb
pop
or
push
fadds
and
hlt
flds
fdivrs
rorl
rcrb
les
in
adc
js
add
add
jno
sub
xor
jecxz
xchg
subl
pushw
bound
mov
push
addr16
xchg
pop
into
cli
adc
mov
es
or
push
fcoms
and
jne
fsub
popa
add
js
mov
sbb
push
inc
leave
enter
mov
push
scas
sub
pop
lods
pushf
loopne
fcomps
cmp
gs
add
mov
cltd
jb
add
jecxz
imul
je
sub
enter
mov
iret
cltd
insb
sbb
outsb
or
or
and
mov
test
xchg
mov
xor
je
icebp
movsl
sbb
and
in
lock
jle
imull
xchg
icebp
ror
repz
sub
loope
lea
add
or
out
test
test
jmp
mov
repnz
test
dec
fadd
and
and
scas
jne
cmp
dec
in
and
adc
push
mov
push
xchg
cmpsl
mov
xor
jmp
bound
push
lahf
pop
push
cmp
adc
or
pop
inc
in
push
pop
bound
lea
or
mov
lea
mov
ret
xor
xchg
add
inc
dec
and
add
and
and
add
mov
sub
cld
ds
jle
xor
lods
test
and
push
mov
mov
or
cmpb
xchg
outsb
imul
or
add
push
jmp
loop
push
sbb
sub
lock
out
push
mov
loop
mov
pop
stos
lods
sub
mov
mov
push
dec
pop
cmp
test
push
sub
cltd
xor
push
mov
je
push
rcl
in
push
push
je
mov
je
out
dec
icebp
sub
sbb
jmp
in
jbe
test
mov
sub
mov
inc
hlt
in
rorb
sahf
nop
xchg
or
aad
add
loopne
loop
shr
jecxz
xchg
sbb
sbb
jno
and
subl
in
aad
sub
adc
add
rolb
mov
xor
jne
je
inc
scas
xchg
xorb
sarb
test
js
pusha
maxps
inc
test
hlt
add
sub
das
pop
sub
inc
fcmove
divl
ss
iret
test
adc
xorl
mov
outsb
int
jbe
xchg
cmp
imul
test
rolb
mov
filds
divb
jno
adcb
sbb
dec
or
lea
adc
shll
mov
lret
imul
pop
notb
mov
xchg
add
cmp
lock
in
mov
pop
mov
or
dec
cmp
rolb
mov
add
fidivrl
mov
mov
lods
xorps
or
pushf
and
clc
inc
das
mov
rcrb
mov
xor
mov
mov
push
sahf
fcoml
dec
and
adc
shlb
cmpsl
dec
in
cmp
test
jne
es
loopne
xor
movsl
jno
in
inc
dec
add
mov
sbb
add
jg
es
test
je
xchg
and
xor
dec
or
mov
je
add
sub
push
push
stos
add
adc
sbb
xchg
xchg
sarl
addr16
sbb
or
mov
sbb
xchg
scas
push
mov
pop
notb
test
add
pushl
and
push
cmp
dec
mov
mov
jle
test
fsubs
mov
scas
adc
add
jb
clc
mov
mov
inc
push
pop
insl
rcrb
hlt
add
pop
push
inc
sbb
mov
ret
faddl
jmp
fiaddl
addl
dec
mov
shl
jbe
push
push
cmp
add
enter
sbb
outsb
mov
fldl
push
in
daa
adc
test
lea
hlt
mov
mov
sub
aaa
adc
adc
jne
daa
bnd
repz
mov
jne
or
jne
sub
push
iret
or
push
mov
cmp
xor
in
rcll
fcomp
xchg
rcl
pop
adc
cmpsl
or
push
lea
movl
jl
inc
dec
cmp
inc
stos
inc
cld
data16
fstl
mov
hlt
mov
pop
je
pop
hlt
lea
loop
mov
hlt
pusha
mov
xor
cmp
mov
cmpb
and
orl
xchg
lea
sub
xchg
pop
ret
int3
int3
push
and
dec
fldt
sbb
or
stc
int3
movsl
mov
std
mov
mov
jne
inc
cmp
adc
loop
push
add
push
adc
adc
sub
fcomp
loopne
rcrb
ds
inc
lea
jbe
adc
js
pusha
jo
popf
add
mov
jl
icebp
pusha
ss
sbb
push
ss
jl
fnstenv
andl
pop
inc
loopne
or
xor
and
push
xchg
insl
mov
rol
mov
mov
jmp
orl
pushf
xor
pusha
pusha
movsb
sbb
pop
rorb
xchg
fs
jb
pushf
push
jne
or
and
mov
fs
call
dec
ficoml
mov
add
idivl
mov
push
clc
sarb
and
test
jg
outsw
mov
mov
mov
jae
mov
jbe
shlb
or
fmuls
mov
or
or
into
mov
subl
movsb
pop
and
test
les
xchg
flds
stos
dec
pop
inc
fsubl
xor
fsubl
in
insb
add
and
test
inc
mov
fs
push
or
testl
and
mov
movsb
test
fmuls
cltd
call
push
and
or
mov
jbe
xorl
sbb
dec
mov
xchg
mov
sti
jnp
push
in
insl
push
add
push
insb
xor
lahf
scas
mov
push
sub
mov
or
lods
add
push
mov
in
and
xchg
dec
pop
pop
pusha
sbb
jmp
pop
push
pop
ret
push
xor
clc
jecxz
add
push
jmp
xor
inc
in
test
sbb
fisttpl
push
scas
test
divb
add
sarl
andl
xor
pop
fs
dec
sbb
adc
inc
mov
mov
mov
pop
inc
adc
sbb
inc
lret
mov
adc
enter
sub
and
scas
xchg
pop
xor
push
sbb
lcall
and
daa
adc
inc
rolb
ss
sbb
jb
jno
sub
dec
xchg
mov
inc
or
adc
inc
arpl
mov
daa
and
add
sub
xor
fiadds
xchg
cmp
enter
push
lea
ret
inc
push
das
push
dec
imul
jnp
cmp
push
push
mov
je
inc
lcall
lods
inc
dec
arpl
icebp
pop
xor
dec
push
jmp
sbb
imul
rcr
mov
add
add
and
loope
shrl
cmc
pop
adc
cmp
and
js
dec
push
jae
jg
ljmp
jae
je
push
mov
pop
lea
xchg
xor
xor
sbb
fdivr
loopne
fcmovnbe
xor
jo
test
imul
lock
sbb
negl
int
cmp
leave
mov
adc
adc
aas
dec
xchg
mov
stos
mov
or
push
adc
push
adc
add
loop
imul
sbb
jnp
cmp
pop
test
les
sub
ret
xor
je
popf
or
or
in
call
pushf
add
orb
cmp
sub
sbb
pop
js
mov
orl
enter
aam
test
lgs
fisttpl
jecxz
mov
pop
inc
inc
pop
popa
push
lock
data16
sub
dec
pop
inc
std
xor
pop
push
test
fstpl
sbb
mov
testl
cmp
dec
ret
or
sub
mov
mov
inc
sub
stos
cmc
mov
inc
and
pop
pcmpeqd
fwait
add
imul
xchg
mov
sub
xor
imul
leave
fadd
add
insl
sbb
or
push
push
xor
test
push
add
xor
cmpsl
dec
je
cs
push
inc
add
inc
outsl
roll
or
push
jne
pop
scas
mov
ret
inc
cwtl
mov
and
lahf
outsb
mov
jne
mov
ljmp
xor
jo
push
push
adc
popa
mov
jbe
xchg
adc
out
rcll
xor
sbb
adc
roll
ret
add
push
add
shrb
mov
dec
ret
adc
add
add
dec
xchg
mov
clc
lds
js
inc
je
and
pop
push
mov
ja
jmp
stos
cmp
add
add
or
ja
in
les
mov
dec
pop
lock
xchg
clc
cmpsl
xchg
pop
add
inc
xchg
pop
add
push
adc
or
push
or
test
loope
popa
sub
sub
stos
jbe
stos
loopne
jno
pop
call
mov
out
je
je
lock
call
pop
lock
add
or
xor
add
xchg
mov
sub
add
xor
repnz
ds
lods
fnstenv
shr
sbb
push
push
fisttps
push
adc
arpl
nop
aam
xor
xchg
stc
adc
cmp
lods
cmpsb
movsb
addb
mov
call
mov
jl
lds
mov
sbb
aad
sub
addr16
add
jmp
jecxz
dec
int
sahf
inc
das
inc
or
and
fmuls
outsb
and
mov
cld
pusha
cwtl
or
in
inc
sub
push
push
push
push
bound
jmp
add
adcb
inc
push
mov
pop
adc
ds
cmp
in
add
push
add
loope
pop
or
out
mov
mov
aaa
aas
sbb
popa
mov
and
jl
js
push
and
mov
je
out
movsl
ja
or
test
xor
cmp
je
aas
mov
dec
or
jbe
rolb
sbb
test
ret
clc
aas
lods
dec
push
sub
sub
andb
sbb
adc
pop
loopne
js
hlt
jae
movsbl
sbb
cmpsb
stc
movsb
fldl
xor
lahf
mov
sbb
xchg
or
sbb
pop
jmp
jg
mov
enter
ret
incl
incl
add
or
jecxz
or
add
inc
cmp
jl
cmpl
ss
mov
test
cltd
and
popa
xchg
pop
add
sar
add
jae
push
in
hlt
clc
xor
add
sub
cmp
jecxz
sbb
inc
scas
cli
adc
jne
enter
adc
or
fidivs
fs
inc
sbb
insb
pop
pop
sahf
repz
xchg
or
lods
and
push
inc
xchg
loop
pop
ficoml
stc
sbb
mov
rolb
jo
shld
lea
orb
rolb
roll
scas
adcb
sbb
or
lret
mov
cmp
jl
mov
aas
mov
xchg
add
or
mov
js
out
add
movb
jne
out
inc
ja
addb
rolb
or
repnz
jl
out
add
or
sub
mov
adc
jae
jmp
xchg
mov
aaa
test
and
xor
push
orb
adc
insl
scas
push
sbb
ficompl
push
dec
or
push
dec
sbb
mov
add
in
push
xor
sbb
aam
mov
in
ret
sbb
push
repnz
cmc
mov
add
loope
icebp
fs
or
not
and
stos
sub
outsb
dec
or
xchg
xchg
lret
hlt
add
nop
je
add
sub
das
sub
jecxz
lock
pop
push
jmp
leave
loopne
lahf
call
lret
or
jge
sbb
lahf
cmc
out
fsubrs
addr16
outsb
pop
mov
stc
jle
daa
lock
push
dec
dec
push
add
push
push
les
add
clc
mov
jbe
add
push
movsb
jae
dec
mov
add
xchg
cmp
lret
add
jle
push
and
mov
stos
movsb
push
and
stos
lds
jns
lret
push
jo
jnp
test
int3
roll
xchg
pop
push
xor
aaa
lea
mov
sbb
cmp
lea
jo
dec
adc
push
and
testl
mov
xor
ror
mov
movsb
fwait
inc
pusha
pop
cmp
add
add
jnp
sbb
jmp
sbb
popf
frstpm(287
mov
xchg
sbb
sbb
mov
push
cmp
call
dec
xchg
mov
les
test
arpl
das
push
mov
dec
rcl
sbb
dec
push
ret
add
and
jl
dec
push
push
sub
dec
repz
int3
add
fcomps
cs
daa
jno
or
or
rorb
inc
mov
aaa
push
push
test
inc
shll
adc
aam
fs
shrl
jbe
sbb
jl
mov
push
push
lcall
inc
mov
mov
xorb
push
sbb
rcrl
pop
jne
or
jmp
mov
dec
dec
and
push
sti
push
ret
xchg
es
pushf
fwait
sbb
cmp
xor
add
int3
int3
add
mov
les
cmp
cmp
sahf
or
push
pop
cmp
sarl
fldenv
repz
je
dec
pop
test
arpl
adc
test
push
ret
cli
and
xchg
das
lods
mov
pushf
adc
xlat
push
aaa
jge
jo
das
or
jo
and
and
inc
les
mov
fs
xchg
sub
or
lock
les
mov
push
add
cmc
lret
rcr
dec
aam
in
loopne
int3
ja
loope
mov
clc
jl
pop
mov
push
cwtl
loopne
fdivrl
pop
jge
sub
add
js
push
fistpl
push
je
cmp
daa
packsswb
mov
add
test
cli
decl
inc
loopne
jmp
mov
out
test
sub
clc
jo
dec
out
test
les
fsub
sbb
lret
movb
ret
nop
inc
loope
cli
or
shlb
sbb
jle
sub
jnp
shlb
sub
dec
dec
test
cmpsl
pop
aas
push
xchg
xor
push
addr16
xchg
je
add
mov
inc
add
lods
xchg
test
jo
iret
adc
mov
insb
jmp
jne
shlb
iret
cmp
jle
pushf
in
out
sub
add
xor
sub
push
add
call
cmpsb
xchg
cmp
sub
adc
aad
push
push
scas
inc
inc
mov
outsl
jecxz
inc
push
pop
fwait
and
xor
lock
je
bound
ljmp
xchg
mov
mov
jg
mov
mov
and
out
add
mov
clc
xchg
rolb
das
fistl
pop
mov
mov
add
xchg
add
xchg
pop
push
or
fmull
clc
mov
adc
add
movzbl
mov
inc
mov
mov
cmp
push
call
clc
addl
int
mov
cltd
sarb
sub
push
icebp
or
cmpb
int
xchg
add
mov
int3
pop
add
push
mov
nop
and
xchg
nop
add
or
cld
push
leave
push
xor
push
cld
or
mov
inc
call
jne
pop
mov
mov
scas
pushf
mov
into
and
pop
or
sbb
mov
insb
adc
into
push
sahf
pop
add
push
mov
fwait
enter
xor
push
nop
cmp
hlt
rclb
gs
push
add
in
fs
lret
in
mov
push
int
cli
ret
sub
movsb
and
adc
sub
cli
inc
mov
mov
cmp
push
enter
in
pop
daa
fbstp
cmpsb
lret
pop
or
scas
and
sbb
mov
popa
and
push
mov
add
loope
loopne
cmc
test
loop
dec
mov
pop
lahf
popf
inc
xor
and
adc
pop
orl
add
and
and
push
daa
or
sbb
push
sub
test
hlt
test
mov
mov
mov
mov
clc
jns
add
rclb
xchg
adc
lds
jb
cwtl
mov
or
dec
cld
stc
sub
ss
lea
cmp
jbe
add
sbb
cmp
jbe
mov
sbb
sbb
cli
enter
sbb
repnz
into
aas
insl
mov
insb
leave
or
cmp
int3
push
adc
divb
inc
dec
xor
xchg
mov
pop
enter
or
cmpsb
push
cmp
or
xor
daa
push
test
stc
push
incl
push
push
push
cmp
cwtl
inc
push
jnp
and
insl
test
jp
add
mov
shr
test
pop
ret
and
nop
arpl
adc
push
mov
in
lods
test
sub
stc
pop
jge
lahf
cmc
pop
sub
push
add
call
cli
mov
xchg
xchg
jns
sti
lea
jo
mov
loop
push
push
movsl
jns
faddl
add
in
enter
mov
test
mov
cmpsb
mov
or
add
fs
mov
into
push
add
xlat
jnp
xor
jmp
js
test
and
inc
lods
sbb
mov
push
mull
cmp
aas
jb
and
sub
add
mov
adc
mov
movsb
cltd
jge
leave
pop
in
adc
and
int
xor
mov
cmp
sbb
and
jp
insl
pop
loope
add
add
and
or
sub
mov
jecxz
push
mov
and
arpl
shl
xlat
loopne
out
test
xchg
mov
xor
int3
iret
sbbb
out
and
inc
or
jle
insb
and
xor
shlb
and
lock
xchg
mov
jecxz
xor
fnstsw
inc
xchg
adcl
jo
and
and
enter
int
mov
and
movsb
pop
sbb
sarb
or
cmpl
lods
push
stos
and
ret
shrb
jle
add
or
fst
scas
add
push
js
jl
aam
ja
xchg
shrb
add
rorb
stc
add
shlb
popf
movsb
pop
je
inc
outsl
dec
out
out
fdivl
mov
je
or
imul
hlt
es
adc
test
mov
lret
maxps
das
add
mov
add
aam
out
mov
and
adc
dec
fsts
out
fwait
movl
aas
push
mov
and
jge
cmp
mov
jo
cmp
outsl
pop
cmp
adc
inc
add
popa
fs
push
sti
or
or
sub
add
loop
mov
sub
or
push
pop
je
bound
mov
pop
and
es
and
xor
das
popf
cwtl
jp
loop
mov
xchg
ds
addl
mov
add
sub
xorl
add
xchg
lcall
dec
dec
repnz
sbb
jo
out
int3
or
jmp
push
sub
inc
incl
sub
mov
and
aas
add
fisttps
jmp
ret
mov
jmp
push
dec
mov
adc
xor
stos
or
les
addb
xchg
mov
push
push
push
test
imul
out
lock
push
xchg
push
push
ret
lahf
imul
cwtl
jo
mov
push
pushl
and
cmp
fidivs
cmp
jbe
sub
sub
cmp
pop
push
sbb
pop
outsl
and
ret
mov
mov
add
sub
adc
lret
out
xor
nop
cmpsl
or
push
add
sub
bound
xor
jmp
or
pop
clc
jne
mov
cmpl
inc
push
xor
mov
movsb
dec
mov
mov
add
cld
out
dec
cld
rclb
or
adc
fistl
pop
movsb
jg
jmp
push
mov
add
push
adc
mulb
pop
xor
push
call
cmp
sbb
xchg
and
sbb
sub
fisttpll
mov
ret
push
mov
ret
movsb
aam
ss
push
adc
add
rorb
dec
mov
cmp
jae
inc
jmp
add
or
icebp
push
test
lock
push
scas
movsb
push
xchg
fisubrs
sub
mov
add
push
add
cmc
outsb
mov
sub
addr16
sub
enter
dec
movb
sub
push
mov
xor
push
inc
loope
dec
stc
pop
testb
sub
movb
movsb
add
add
mov
test
sub
jnp
ret
add
pop
add
xchg
bound
shlb
push
xchg
out
test
shlb
or
insb
pop
jmp
js
lea
sub
adc
adc
movsl
cmp
sbb
sub
mov
pop
mov
jecxz
daa
ss
pop
jne
inc
or
sahf
test
ret
add
xor
pop
loopne
add
pop
jge
mov
movsl
or
lods
test
mov
or
lods
test
jle
lea
push
or
sahf
mov
push
or
pusha
mov
inc
inc
xor
sub
sub
lock
insb
addr16
dec
xor
clc
adc
rcll
mov
xchg
and
push
or
mov
dec
mov
insb
add
and
sbb
lahf
jo
rorb
shr
sub
cmp
pop
lods
sahf
pop
mov
rorb
xchg
rorb
push
xor
mov
dec
cmp
icebp
jne
xor
xchg
inc
insl
push
push
aam
cmp
mov
cmp
stos
dec
sbb
aam
lahf
add
movsl
addl
add
icebp
aam
cli
add
imul
adcb
mov
notl
cwtl
fidivrl
inc
das
adc
sub
pop
mov
or
enter
xchg
push
or
xchg
enter
ror
and
and
xor
cwtl
push
sub
mov
arpl
fcompl
cmp
sub
sti
sub
les
inc
cltd
push
mov
and
ret
ret
in
ret
int3
pop
ret
jmp
cmpsb
xor
adc
or
jne
movsb
push
jb
mov
ja
negl
xchg
jecxz
jle
pop
sub
cmpl
rcrl
cs
inc
movl
loope
or
andl
test
cld
push
ret
int3
add
shlb
adc
or
stc
pushl
sti
or
aaa
push
push
push
ret
js
push
jecxz
bts
jbe
fdivr
and
pop
jecxz
sub
add
and
mov
orb
jo
std
bound
mov
rclb
or
gs
iret
fs
xor
sub
cld
dec
mov
mov
push
cwtl
jl
mov
and
adc
xchg
push
inc
imul
mov
lock
push
push
cmp
jb
popf
or
or
mov
inc
cmp
lcall
ret
jnp
dec
fs
add
dec
insl
dec
pop
push
sbb
jp
addr16
ss
cwtl
or
je
pop
push
inc
adc
outsb
add
mov
fisttps
pusha
push
in
push
scas
repnz
loop
jnp
jmp
add
mov
mov
mov
fldt
push
filds
or
mov
cmp
addr16
je
cmp
jne
mov
adc
sbb
add
pop
dec
lea
cmp
mov
pop
dec
xor
push
dec
fdivrs
cmpsb
push
jmp
testb
je
testl
or
cld
cmp
jbe
jg
mov
inc
cmp
je
leave
dec
fdivr
sub
inc
jmp
inc
and
or
pop
mov
pop
daa
shrl
xor
int3
test
lcall
clc
mov
cmp
add
sbb
cmpsb
fs
adc
into
cli
jo
inc
jl
lcall
xor
push
sub
cld
inc
dec
cmp
sub
pop
cmp
jo
hlt
adc
sub
les
clc
je
faddp
movb
xchg
mov
mov
mov
xchg
ja
js
sub
ss
push
nop
adc
jge
stos
js
sub
add
inc
cld
shlb
sbb
bound
es
outsb
sahf
push
lds
loopne
jne
mov
sbb
sbb
mov
mov
data16
mov
ljmp
lcall
outsb
inc
shlb
pop
shl
add
hlt
or
adc
aas
insb
sti
and
cmpsb
and
or
adc
push
popa
mov
add
xor
lock
pusha
pop
adc
test
mov
or
push
mov
jmp
dec
shr
mov
cwtl
sub
cltd
andb
push
sbb
ret
mov
push
add
push
xor
sub
or
and
jno
xchg
inc
jg
mov
add
pop
xor
and
aaa
aaa
es
sub
sub
and
pop
or
jl
inc
xor
adc
pop
jle
pusha
push
inc
test
jbe
bnd
aam
cmp
jbe
loopne
pop
push
and
pop
arpl
pop
and
popf
add
je,pn
test
jne
pop
mov
sbb
adc
clc
add
push
xor
insl
loop
add
jae
movb
inc
scas
fcoml
fdivp
push
sub
mov
adc
and
out
lahf
enter
jno
mov
inc
and
inc
add
xor
adc
mov
adc
sbb
add
sbb
jp
sbb
dec
inc
push
je
mov
cmp
test
cli
and
jno
push
lahf
push
mov
sbb
aas
jmp
xchg
pop
jne
rorb
test
push
push
shl
mov
push
inc
mov
insb
dec
jl
and
pop
ret
add
pop
add
cmc
mov
mov
cld
cwtl
push
mov
inc
sahf
rol
das
cmp
push
imul
pop
repz
inc
inc
xchg
mov
cs
cwtl
inc
jg
push
daa
push
jecxz
fidivrs
in
cmp
push
xor
test
pop
mov
adc
push
lock
cltd
call
xorb
jbe
sbb
adc
ret
push
mov
cld
xchg
cmp
and
cmpb
push
andl
mov
jns
pop
lea
adc
ljmp
sbb
xchg
imul
pop
or
jecxz
push
andl
inc
sbb
jae
nop
rcr
cltd
aaa
jp
mov
dec
pushf
inc
subb
cmp
sub
dec
nop
cmp
dec
sbb
cwtl
ret
sbb
popa
xor
push
push
movl
push
adc
dec
or
xor
clc
jb
and
jbe
xor
and
inc
add
sbb
gs
filds
push
mov
mov
nop
sbb
xchg
aam
add
imul
xchg
outsb
xchg
sub
loope
pop
dec
scas
push
sbb
popf
int
aad
cmp
lock
mov
je
pushl
shll
cmp
pop
lea
outsb
fsubr
jae
pop
adcl
pusha
push
cmpl
push
bound
cmp
jne
sub
pop
psubd
lea
push
pop
data16
pop
scas
cltd
adc
sub
enter
jae
inc
push
inc
enter
stc
fbld
jbe
mov
jge
push
gs
add
push
ja
inc
sti
inc
inc
fwait
cmp
add
repnz
pop
pop
sti
loope
rclb
cmp
sbb
push
or
xchg
test
cmc
lock
push
cs
sbb
movsl
xchg
stos
pop
adc
pop
mov
sbb
jnp
dec
data16
pop
je
test
dec
scas
rcrl
push
inc
inc
jmp
xor
push
nop
xorb
fs
cmp
adc
sbb
mov
push
push
dec
mov
popl
incl
cld
pop
mov
adc
ret
mov
andb
jle
mov
add
push
lea
sbb
js
cmp
add
push
sbb
inc
push
add
pop
sub
mov
loop
sbb
add
sahf
mov
rcpps
fdivrs
les
add
push
add
adc
leave
add
pop
jns
addl
pop
fidivs
mov
dec
ljmp
adc
sbb
ret
or
sti
pusha
jb
mov
ret
lea
xchg
lret
adc
roll
ds
mov
jbe
push
adcl
inc
movb
dec
mov
loop
push
dec
mov
push
divl
das
push
and
gs
and
pop
or
sbb
jo
push
ljmp
or
mov
mov
jmp
jno
sti
sub
and
fndisi(8087
mov
inc
inc
push
push
popf
test
xchg
jb
dec
pop
addl
add
jmp
xchg
pop
lods
dec
movsl
out
push
scas
std
xor
mov
ret
jle
inc
loope
fstpl
es
insb
pop
frstor
pop
cmpsb
or
xchg
pop
mov
cmp
andb
xor
push
cld
or
sbb
loop
out
and
cmp
mov
mov
jp,pn
lret
movsl
or
int3
jbe
lods
lods
or
mov
pusha
push
adc
imul
add
out
lods
and
testl
mov
jne
xchg
cmpl
jne
in
cmp
lods
jo
pop
mov
add
shlb
jne
mov
aad
lods
xor
insl
jnp
sti
pop
pop
out
das
movl
rorb
mov
mov
xchg
out
out
sub
movsl
cmc
push
add
jbe
mov
inc
fs
rcr
in
pusha
ret
or
xchg
add
xchg
sbb
sbb
sbbl
inc
je
fstps
cmp
ja
lea
inc
inc
fadds
jne
daa
rcrb
inc
push
push
addl
sbb
add
adc
jg
pop
mov
push
xorl
dec
roll
out
push
cmp
adc
push
adc
sub
mov
add
cmp
xchg
add
std
jnp
loopne
ret
adc
mov
xchg
sub
fdivs
mov
icebp
cmpsl
mov
fwait
loopne
mov
repnz
fsubs
test
dec
xlat
push
aas
je
cmp
imul
and
jne
push
imul
cmp
pop
jne
pop
call
repnz
mov
in
xor
jl
pop
jle
xchg
jne
jmp
sbb
sbb
lret
sub
mov
sbb
mov
push
sub
and
addr16
ret
jne
mov
sbb
loopne
add
je
pop
in
cmp
arpl
stc
mov
cs
pop
je
sti
jno
out
dec
xchg
repz
jmp
pusha
mov
dec
in
arpl
scas
jg
add
mov
pusha
add
std
and
xchg
mov
sub
shl
mov
add
cmpl
jl
adc
xchg
out
and
inc
fldl
shr
mov
push
pop
loopne
mov
push
scas
or
inc
decb
push
mov
or
cld
or
fwait
ret
push
add
inc
and
mov
les
pusha
pop
call
cmp
cvttps2pi
and
push
mov
nop
fcoms
adc
push
adc
in
add
inc
pop
rorb
arpl
xchg
or
xchg
add
ja
mov
push
gs
sahf
xchg
movsl
push
push
push
push
pop
pop
in
mov
pusha
flds
mov
xor
adc
jecxz
push
push
sub
xchg
movsl
xchg
add
sbbl
cs
xchg
js
sbb
mov
lods
fisttpll
daa
jecxz
and
and
pop
rclb
sub
xor
in
add
rcll
lcall
mov
sbb
adc
mov
cmp
sar
push
sbb
or
inc
adc
fildll
add
pop
cmc
test
outsb
in
test
and
push
imul
jbe
or
add
daa
mov
cmp
xor
es
and
xor
test
push
jp
ljmp
sti
xor
or
clc
pop
dec
cmp
outsl
jnp
jp
push
pop
jmp
jecxz
test
mov
inc
push
aam
je
into
or
divl
mov
mov
cmp
or
popa
ret
push
push
sub
mov
repz
lock
testl
sub
int
xor
sti
es
sti
fcoml
or
imul
mov
xchg
mov
mov
sub
decl
cmpsl
test
sbb
mov
lock
push
or
ljmp
xchg
fwait
add
in
and
push
mov
je
mov
cmp
jne
xchg
adcb
adc
in
mov
loopne
inc
jbe
xor
or
je
jg
jo
adc
frstor
sbb
mov
jne
cmp
je
ds
xchg
pop
int3
loope
inc
push
mov
mov
add
pop
sbb
pop
les
push
imul
pop
lock
jb
or
testb
jbe
push
adc
call
jne
rolb
into
and
mov
push
lret
dec
add
cmpsb
add
in
lock
fsubrp
lock
cmp
jne
or
or
push
ror
sbb
mov
call
hlt
adc
sbb
sbb
mov
je
or
daa
aaa
adc
cmp
cmc
nop
data16
aas
js
bound
xor
push
or
or
incl
lock
out
jl
push
icebp
push
and
pusha
mov
jmp
xchg
jle
aaa
jp
push
mov
subb
popa
lahf
pop
mov
cmp
cmpsl
cmp
fstpt
cltd
mov
pusha
je
divb
push
sbb
sbb
inc
or
add
dec
in
xor
add
test
fisubl
jb
xor
outsb
out
pop
pop
inc
cmp
lea
adc
inc
hlt
subb
mov
lock
hlt
andl
arpl
add
cmpb
add
mov
hlt
cmp
ljmp
inc
movsb
pop
enter
cltd
mov
jb
les
iret
cmpsb
icebp
pop
adc
lock
mov
mov
aas
push
fcomp
xchg
into
xor
outsl
mov
mov
add
and
mov
je
orb
sar
push
and
lea
test
push
out
add
orl
int
and
call
lea
cmpl
fidivl
jne
addr16
fnstenv
hlt
test
shrb
je
inc
addb
add
js
insb
add
mov
mov
mov
mov
inc
pusha
scas
xchg
adcb
int
cmpb
jns
pusha
shlb
xor
lock
and
mov
movsl
movsw
orb
xchg
and
test
add
or
sbb
and
sub
adc
adc
in
adc
sub
dec
pop
sbb
push
int
adc
pop
push
test
pusha
es
push
xor
ja
je
adc
jns
loope
bound
adc
and
and
adc
jmp
sub
push
xchg
pop
sahf
xchg
adc
and
mov
push
bound
adc
inc
add
ret
loopne
xor
sub
cmp
mov
aam
ficoml
adc
xor
scas
and
jmp
mov
dec
add
aam
inc
pop
push
gs
adc
dec
push
pop
or
mov
sbb
and
jmp
jne
jns
pop
push
loop
sbb
xor
mov
push
xor
sbb
jg
jbe
lods
loopne
adc
ja
jmp
mov
and
cmpl
and
into
aas
int
bound
adc
out
inc
xchg
iret
in
shlb
and
mov
fdivrs
into
jae
dec
adc
stos
and
xchg
loopne
in
cmp
shlb
add
fldt
mov
add
push
push
mov
jmp
roll
xor
xchg
push
sbb
sarl
int3
lds
fistl
push
mov
fs
fs
sbb
cmc
daa
pop
adc
filds
test
das
dec
inc
cmp
cmpsb
push
testb
loope
pop
pop
je
add
inc
clc
sbb
add
daa
sub
into
inc
popa
adc
mov
mov
ss
cmp
sti
pop
mov
push
mov
mov
sahf
push
xchg
aam
mov
outsl
push
add
jge
xor
lea
mov
inc
out
jge
push
sbb
or
push
out
fmuls
stos
ret
imul
mov
add
cmp
and
sub
jmp
add
lods
dec
clc
inc
push
mov
xchg
mov
and
inc
ds
rcr
add
push
push
xor
xorl
sbb
jmp
push
incl
call
add
push
adc
and
add
fmuls
movsb
int3
or
aas
ret
ret
pop
pop
xchg
or
dec
je
sbb
gs
cmp
sbb
xchg
cwtl
hlt
sub
jno
mov
fdivrs
pop
outsl
sbb
fdivs
pusha
xchg
mov
pop
xor
gs
jp
and
lea
push
stos
inc
adc
jb
es
add
xor
lds
xlat
mov
or
dec
sarl
or
popa
pop
leave
sub
pop
xchg
pop
mov
cmp
cmp
ret
pop
push
push
cs
or
int
data16
pushf
pop
push
mov
insl
pop
mov
mull
add
pop
jmp
push
pop
add
loopne
mov
repnz
fcom
mov
xor
inc
push
adc
jge
cwtl
jle
mov
sub
cmp
pop
ds
add
push
push
push
mov
js
out
mov
jo
pop
xchg
fstpt
hlt
adc
jecxz
ret
pushl
push
fldenv
xor
push
ja
cmpsl
jo
inc
out
add
iret
add
pushf
pop
sbb
jo
repnz
cmp
push
insb
jne
or
adc
push
push
push
dec
sarb
pop
add
inc
inc
data16
testb
pop
iret
mov
pusha
push
pop
mov
jae
movsl
mov
dec
loopne
rdmsr
dec
loopne
xchg
mov
stos
or
inc
inc
xchg
mov
add
mov
repz
push
or
clc
call
and
out
add
cmp
or
loopne
xor
scas
sub
rcrb
ja
repnz
sub
aas
mov
or
mov
and
sbb
sub
cmpsl
mov
stos
cmpsl
inc
sahf
cmpsb
add
cmpsb
pop
pop
jmp
or
loop
lods
pop
js
lret
push
fmul
jp
push
loopne
sbb
push
ret
and
adc
add
xchg
add
cmpsb
rcl
cld
test
push
repnz
leave
cld
adc
int
mov
and
adcb
shll
iret
or
sub
dec
adc
pop
arpl
cmp
add
cmp
pusha
popa
adc
pop
mov
cmp
inc
fbstp
rcr
adc
jbe
push
and
repz
aad
mov
push
pop
sbb
aad
dec
or
inc
sbb
lret
xchg
adc
hlt
add
mov
push
push
pop
cmpb
mov
adc
inc
adc
iret
mov
test
adc
xchg
bound
add
push
adc
or
adc
dec
sbb
xor
das
mov
and
and
loop
adc
add
aam
lock
das
inc
sbb
mov
test
arpl
add
cmp
lock
dec
jo
sub
cmp
aaa
sbb
xor
jmp
mov
jbe
lret
cs
pop
or
das
dec
mov
cmp
sbb
push
stos
imul
dec
mov
add
xchg
pop
lret
ret
or
loope
addb
inc
es
lcall
mov
pop
popa
mov
daa
fsubl
add
cmp
mov
dec
jne
out
outsl
aaa
inc
adcb
lcall
push
lcall
mov
mov
loope
and
js
sbb
add
in
loope
mov
pushf
mov
or
push
nop
or
pop
leave
mov
clc
or
mov
xchg
and
addb
pop
movl
cmp
inc
dec
fwait
or
dec
mov
nop
ficoml
dec
xor
xchg
test
sbb
cmp
push
sub
sbb
fwait
les
inc
sbb
cmpsl
insb
push
inc
and
xchg
xchg
xlat
rcr
fwait
js
xor
cs
and
dec
mov
jnp
mov
and
inc
mov
mov
dec
sbb
mov
or
sahf
ss
adc
push
and
sub
daa
add
dec
leave
out
inc
sub
dec
cli
sahf
outsb
mov
or
push
pop
sbb
adc
incl
ss
jno
inc
cli
sub
xchg
push
mov
jnp
jnp
inc
mov
andl
stos
push
sarl
inc
or
and
rorb
adc
jbe
pop
or
add
outsb
xchg
pop
mov
add
mov
shld
adc
aaa
adc
dec
push
sub
jae
popf
push
push
adc
sbb
out
mov
sbb
add
sbb
inc
push
jl
fmuls
leave
mov
and
call
and
adc
push
shlb
fistpll
adc
rcrb
ret
roll
ss
xchg
dec
dec
dec
rorb
push
and
dec
adc
mov
test
push
loopne
lcall
pop
cmpl
lret
or
inc
fcomps
les
dec
inc
mov
pushf
sahf
outsb
cli
xor
cmpl
jne
adc
insb
out
xor
and
int3
mov
and
sbb
pop
ss
pushf
pusha
adc
pop
fs
aam
ljmp
into
inc
imul
xor
shlb
jge
out
ret
push
iret
push
xor
fsubrs
test
xchg
pop
xor
movsb
jmp
sbb
test
jo
adcb
or
sub
loopne
jmp
dec
sub
push
movsl
aas
loop
dec
xor
insl
lock
pop
jmp
adc
push
xchg
add
jne
pusha
xchg
stos
mov
scas
jge
bound
jbe
add
and
adc
cmp
xchg
adc
adc
mov
sub
push
adc
xchg
bound
jns
inc
jbe
adc
int3
mov
addr16
data16
pop
add
clc
icebp
adc
sahf
inc
loopne
mov
call
fbstp
push
xor
jnp
pop
jbe
lret
pop
sahf
pop
cs
mov
jbe
fdivl
ret
mov
mov
sbb
insb
out
add
data16
xchg
je
mov
lock
jbe
pusha
adc
mov
push
dec
adc
aad
pop
mov
mov
cmp
cmpl
imul
js
ret
add
outsb
mov
fwait
inc
test
pop
lock
or
mov
xor
js
xlat
lcall
add
jmp
cs
data16
pushl
leave
lods
mov
adc
rolb
cli
add
add
lods
dec
mov
mov
sarl
cmp
and
cmpl
mov
iret
jmp
mov
mov
push
push
and
dec
mov
pop
add
jl
push
pop
mov
cli
xor
inc
imul
bound
add
mov
lret
cltd
cltd
push
or
push
xchg
and
mov
pop
sbb
inc
roll
xchg
xchg
mov
jecxz
sub
negb
inc
or
mov
or
mov
or
jmp
test
jge
xor
lea
cmpsl
or
add
mov
lods
xor
inc
ret
mov
sub
mov
pop
push
lds
and
or
sbb
dec
add
cmp
pop
mov
mov
les
inc
add
sar
ljmp
sub
rcrb
jbe
sub
add
mov
das
pop
dec
dec
imul
xchg
push
mov
xchg
push
push
add
rcl
adc
adc
xor
jnp
stc
and
sarl
add
xchg
test
mov
sub
mov
xchg
cmp
cmp
pop
push
pop
xchg
jmp
add
data16
jp
xchg
hlt
jne
adc
mov
sub
add
out
xor
enter
add
mov
mov
cwtl
jp
sbb
pop
jno
inc
lretw
leave
sub
adcl
add
cmp
dec
or
adc
sub
mov
push
dec
mov
pop
mov
jne
ret
mov
push
dec
mov
int3
sub
data16
shr
mov
adc
shlb
lds
mov
and
arpl
lock
push
imul
push
adc
enter
ljmp
adc
inc
dec
or
and
xor
pushf
mov
mov
mov
lods
cmpsl
mov
inc
xor
ds
enter
cmpsb
rorl
xor
addr16
sub
out
inc
inc
mov
sbb
add
xor
mov
lahf
in
xchg
or
adc
and
add
sbb
adc
and
push
adc
adc
adc
adc
push
adc
adc
adc
fcom
inc
rorb
sub
shll
lock
pop
add
lds
adc
jg
dec
jmp
clc
push
mov
cmpw
je
inc
ret
cmp
aad
imul
out
or
mov
icebp
add
or
xor
sbb
or
scas
cwtl
mov
mov
lock
mov
inc
fisttps
leave
dec
jo
pusha
mov
xor
loop
les
add
mov
jmp
in
popf
mov
add
add
cmovae
xor
jo
pop
jmp
cmp
add
pushf
idiv
add
bound
add
or
push
sbb
es
in
mov
sbb
mov
lea
adc
shrl
cmp
cmpsl
push
das
jle
fists
mov
pushf
ret
mov
xchg
add
xchg
mov
arpl
popf
into
xor
add
into
imul
jne
sarl
sti
popf
push
sbb
push
notl
mov
mov
sbb
and
jb
shrl
adc
dec
cld
inc
rolb
lea
push
add
aad
popf
insb
cmp
in
mov
push
sbb
sbb
add
pop
sub
cmpsl
push
mov
scas
je
cmp
mov
testb
ret
inc
mov
call
cmp
mov
lcall
nop
push
mov
and
or
setp
add
jmp
xor
pop
fiadds
dec
cmp
lea
push
mov
fiaddl
or
jnp
adc
adc
dec
mov
je
mov
pop
into
fiadds
xor
xchg
inc
call
and
pop
out
cmpsl
das
inc
pop
push
push
adcl
scas
mov
sub
cmp
xor
and
cmp
outsl
popa
add
ja
in
pop
sarb
push
jmp
or
sub
loop
or
or
dec
push
inc
in
sbb
xchg
adcl
push
scas
or
add
out
lcall
mov
xor
pop
sub
clc
sbbb
loopne
jno
push
push
pop
push
notb
fcomps
add
sub
dec
repz
and
push
out
inc
sbb
shlb
inc
clc
push
pop
aad
cmpsb
push
or
rorb
sbb
hlt
and
fsubs
jno
mov
insb
sbb
xor
cmovge
sub
pop
adc
sbb
sbb
sbb
mov
shll
ret
fs
movb
sbb
int
add
pop
cmp
jp
and
js
xchg
cmc
add
pop
push
es
jno
mov
inc
test
xchg
mov
xchg
repz
add
pop
outsb
out
push
fiaddl
adc
rol
push
push
mov
not
jmp
addl
inc
sub
sbb
cli
ja
jecxz
cmc
les
sub
or
sub
loopne
add
dec
push
or
in
mov
rorl
push
imul
mov
nop
cltd
jge
xor
sbb
xor
jp
xor
bound
inc
out
push
fistl
bound
jl
psubw
xchg
jnp
adc
lret
or
cmp
xchg
scas
dec
shrl
scas
xchg
icebp
push
iret
pop
je
fld
add
pop
xorl
dec
push
ja
or
sbb
aam
jge
mov
jne
cs
dec
loopne
imul
adc
ror
ret
sbb
adc
mov
or
nop
inc
sbb
iret
lds
sarb
pop
out
sub
add
inc
popa
repnz
test
ret
xor
mov
jmp
repnz
pop
pop
arpl
mov
loop
movq
sub
repnz
cmpsb
push
mov
mov
adc
push
stos
add
andl
sub
xor
pop
mov
adc
cmp
pop
clc
jecxz
inc
mov
dec
call
mov
pushf
mov
or
mov
bound
sub
mov
subl
dec
push
cmpsb
lea
ja
lcall
xchg
xchg
leave
fsts
jns
es
adc
rcrl
daa
mov
and
adc
inc
test
and
adc
add
mov
mov
ljmp
pop
mov
or
jne
inc
fs
and
push
cmc
rorb
fimull
jmp
pushf
fstpl
jo
xor
lahf
mov
pop
aaa
cmpsb
or
incl
dec
dec
cmp
js
mov
adc
add
pop
add
push
jecxz
adc
inc
dec
or
or
add
or
xor
pushf
or
ror
add
ja
aaa
ja
adc
test
inc
add
data16
fs
jmp
aaa
movsl
adc
in
or
add
lods
push
xchg
stos
jmp
push
mov
nop
push
cmpsl
das
xchg
mov
or
js
sbb
lock
les
cmp
mov
loopne
mov
enter
inc
orl
ret
push
xorb
shrb
adc
mov
scas
repnz
jae
lea
jmp
cmpl
sub
mov
les
roll
dec
add
cmp
out
mov
imul
mov
in
sub
xchg
jbe
xorb
add
add
or
and
fs
das
add
xchg
push
fistps
cmc
xchg
mov
jg
clc
inc
mov
cltd
addr16
incl
add
aad
pop
and
push
inc
shl
adc
xchg
sbbl
sub
addr16
mov
add
out
add
add
push
or
pop
roll
cwtl
pop
sarl
sti
add
pop
pop
or
sbb
lods
addl
or
mov
hlt
test
pop
mov
adc
call
sahf
pop
test
addl
mov
add
or
pop
cmp
dec
cmc
nop
pop
jo
stc
shrl
xor
aad
jnp
xlat
mov
movsl
sbb
adc
inc
and
or
incl
icebp
inc
sti
push
je
cwtl
xchg
popf
dec
out
inc
cmp
sbb
mov
loopne
ds
xchg
js
add
stc
xchg
lret
or
mov
push
inc
jo
mov
ja
xchg
mov
shll
test
in
dec
ret
ss
mov
in
add
add
xor
add
gs
sbb
shrd
sbb
outsb
dec
scas
jno
or
das
or
pop
add
xchg
and
cli
outsl
lea
cmp
leave
and
add
cmp
pop
sbb
add
inc
push
nop
or
inc
xorl
pop
cmpl
int3
push
or
daa
lea
xchg
push
pushf
lds
imul
push
xchg
sub
sub
outsl
adcb
jno
lea
sub
jmp
in
mov
sbbl
outsl
in
xchg
sub
test
test
or
jb
testb
adc
sbb
sbb
sbb
ja
sti
data16
inc
jnp
cmp
loope
or
or
data16
jbe
add
cmp
jmp
push
jbe
or
je
test
xor
push
jns
mov
mov
in
cltd
push
push
test
cmp
dec
or
sbb
shrl
nop
inc
cld
add
lock
stos
es
sbb
push
fcoml
and
clc
hlt
push
and
hlt
jns
or
lds
cli
mov
pop
cmp
add
cmp
call
pusha
stos
and
fldcw
adc
or
mov
push
push
push
lock
jne
mov
inc
loopne
mov
repz
ss
cld
fcom
dec
or
push
scas
inc
xchg
jno
out
or
ja
pop
or
push
cmp
js
inc
in
aam
xor
jno
or
popa
popa
lea
ret
pop
inc
mov
xchg
lret
movsl
or
pusha
push
js
xchg
add
je
mov
ficompl
shlb
std
fisubs
shl
jo
movzwl
push
jo
js
adc
fistps
mov
dec
jp
push
jb
cmpsl
test
sbb
clc
mov
inc
aam
adc
outsl
xor
repnz
jg
sbb
sbb
mov
xor
sub
fidivrl
insb
adc
inc
pop
and
push
cmpl
jne
mov
jl
cmp
jbe
or
jne
push
ja
sarb
hlt
mov
std
cmpb
data16
push
xchg
push
cs
popa
inc
add
cmpl
mov
shrb
add
cld
mov
cmovns
or
adc
sbb
lds
xor
xor
or
sub
push
mov
jne
pop
orl
cmpsl
rclb
xor
mov
and
inc
pop
js
and
pop
mov
in
test
rorb
js
vmread
sub
and
imul
push
andb
and
and
or
add
jne
and
rorb
bnd
jle
lds
adc
bswap
add
movsl
clc
into
fstpt
pop
in
xor
dec
rcrb
sbb
clc
fsubl
ficoml
dec
cltd
out
ds
add
mov
mov
std
mov
dec
outsb
inc
sbb
pop
fucomip
in
pop
xor
or
cmpl
xor
popf
addl
mov
call
es
loope
aam
rcl
ret
cld
xor
push
mov
rorb
sub
or
pop
ja
pusha
adc
push
test
insb
lock
fwait
and
jmp
jae
xor
xchg
ljmp
xchg
dec
fs
mov
fisttpll
cmp
addr16
je
mov
ljmp
and
inc
xor
adc
les
cmp
jb
and
mov
or
fdivr
mov
push
jae
dec
mov
xor
inc
sub
cs
add
and
and
clc
outsl
push
add
xchg
cmp
cmp
adc
daa
call
inc
cs
decl
cltd
push
push
mov
rclb
outsb
sub
mov
std
ss
leave
dec
int3
inc
sahf
outsl
jmp
mov
add
mov
pop
loopne
cmp
and
cli
mov
jbe
cld
aam
orl
add
call
adc
rcrl
je
jmp
push
xchg
in
aad
cs
jp
dec
mov
fnstcw
or
push
je
push
adc
popa
push
rorb
jle
test
adc
and
jge
data16
pop
dec
dec
call
pop
fbstp
packsswb
adc
mov
and
fdivl
or
scas
xor
and
dec
dec
xchg
ret
add
pop
xlat
push
fcmovbe
emms
add
loopne
mov
orl
fs
cmp
mov
out
mov
or
and
pop
mov
add
rorb
lea
inc
roll
or
sub
mov
adc
push
loop
push
and
inc
push
and
rcr
mov
lds
insl
je
mov
mov
xor
jmp
clc
es
and
out
inc
idivb
int3
out
add
addr16
adc
sub
add
and
cmpsl
add
xchg
adc
and
xchg
out
es
xchg
xor
xchg
mov
das
or
mov
roll
xor
outsl
rorl
lea
mov
xor
or
fdivrs
cmp
ret
fldenv
push
push
add
sbb
jecxz
pushl
dec
or
pop
mov
mov
mov
mov
or
cmp
sub
cmp
pushf
adc
mov
rorl
xchg
add
sti
cltd
cmpl
jb
mov
and
mov
enter
sub
or
cmc
mov
pop
jb
xor
test
sbb
add
popf
pushf
fsubp
loopne
xor
je
xor
sub
popf
jge
sarb
sub
or
js
adc
cld
pop
js
push
jae
lea
ja
cmpb
jne
cmc
push
fidivl
aam
add
pop
sbb
mov
and
pushl
sbb
and
aaa
outsb
inc
daa
daa
pop
js
jle
add
imul
cmp
sbb
pop
push
sub
jle
dec
or
dec
mov
mov
lea
outsb
add
or
add
add
xor
jae
xor
add
inc
sub
dec
and
dec
shr
push
xchg
add
xchg
xchg
pop
sbb
push
adc
add
mov
mov
or
gs
add
and
sahf
popw
cmpsb
pop
push
sbb
adc
sub
out
xor
xor
xor
pushl
adc
add
cmc
sub
cs
inc
mov
shll
dec
and
sub
inc
inc
and
push
push
lods
ss
xor
jne
or
mov
mov
data16
ljmp
movsl
sub
sub
ja
xchg
jb
pop
adc
pushf
cmp
mov
nop
and
je
sub
or
fsub
add
dec
or
jb,pt
stos
pop
add
xor
push
arpl
orl
aaa
mov
addl
pop
mov
cmc
push
or
je
lea
js
fists
or
shrb
dec
out
inc
cmpl
adc
fmulp
pushf
adc
mov
xor
je
inc
and
data16
dec
add
ret
lret
pop
adc
add
lods
xchg
inc
jae
cmp
scas
jmp
push
je
dec
add
in
mov
push
xor
or
or
and
std
incl
mov
orb
jl
add
add
pop
add
xor
push
loop
add
jg
mov
icebp
sbbb
adc
dec
pop
and
daa
bnd
mov
icebp
mov
cmp
push
cmpb
out
fldt
push
jae
lea
push
sub
push
lods
andl
adc
stos
ret
es
ja
lret
dec
cli
dec
pop
ret
adc
pop
pusha
mov
ret
lods
xchg
cmp
enter
adc
ffreep
imul
jg
out
insb
fdivl
cmpb
xor
fnstenv
inc
jmp
push
xchg
mov
cmp
sub
xor
cmp
add
or
inc
mov
and
movb
or
push
xchg
xchg
cmpsl
cli
fdivs
sub
sub
out
push
sti
test
sbb
sub
aad
mov
insb
neg
inc
popa
jns
call
jnp
flds
push
cmc
dec
in
sbb
outsb
rorl
pop
mov
cmp
imull
sub
mov
xor
int3
mov
loop
jo
nop
push
adc
out
test
inc
pusha
ret
push
mov
lret
and
push
mov
xor
push
cmp
fs
aad
xor
mov
sub
inc
shll
xor
adc
sbb
mov
idivl
add
cld
or
movsl
popa
xlat
jnp
or
jge
pop
mov
pushf
cmp
lds
lret
jmp
jecxz
lahf
mov
cmp
jb
inc
dec
insb
xor
adc
adc
jge
add
jo
or
cmp
sub
push
inc
or
mov
jge
add
es
xor
or
sbb
test
sbbl
adc
icebp
ret
jge
out
std
cmc
imul
orl
push
inc
mov
psubw
imul
out
addr16
cmp
xor
cmpsb
imul
inc
pop
push
imul
xorb
mov
and
arpl
pop
in
or
adc
adc
add
jp
push
adc
stos
jbe
movsl
mov
xchg
std
push
mov
add
fisubl
xchg
pushl
lahf
inc
xor
mov
scas
mov
push
cmp
mov
inc
test
and
test
inc
or
pop
xchg
xor
loopne
pop
sbb
cmpl
sbbb
lock
xchg
cmp
add
or
mov
sbb
xchg
xchg
icebp
jnp
add
lret
into
cli
inc
cmp
xor
jbe
cmp
ret
loop
ret
jg
dec
adc
je
mov
cmp
rclb
adc
jg
xchg
js
fsts
jo
adcl
xchg
mov
push
pusha
es
andb
imul
pop
adc
loope
xchg
jg
test
insb
or
ja
pop
inc
pop
or
sub
test
adc
jno
aas
lret
push
imul
pusha
xor
shrb
mov
adc
rorl
orl
cmp
outsl
insl
das
or
add
or
mov
dec
lret
cli
das
test
push
clc
cmp
test
mov
inc
sbb
inc
mov
and
ja
std
sub
inc
xchg
pop
pop
sbb
push
sbb
push
xchg
mov
in
cmp
push
pop
repnz
mov
jae
in
rclb
lds
sub
and
insl
push
dec
sub
mov
les
mov
and
and
and
test
in
jnp
pop
adc
clc
clc
mov
and
fsubrl
mov
sub
mov
jb
adc
fisubrs
les
ret
add
xchg
add
mov
add
test
adc
test
push
in
fildl
pusha
dec
loope
dec
fdivs
popf
lahf
adc
and
push
xor
sbb
adc
inc
cmp
mov
jo
stos
sbb
fs
mov
cmp
and
aad
push
ficoms
cli
add
or
ja
daa
inc
adcb
sbbb
xor
lcall
adc
cmpl
push
add
mov
adc
add
push
or
enter
cld
or
dec
or
ja
sbb
mov
mul
inc
dec
xor
push
pushf
iret
jl
inc
push
push
mov
push
fbstp
add
sub
jecxz
loope
lods
or
pusha
mov
mov
mov
lods
lar
out
push
jne
nop
cmp
scas
adc
cmp
cmp
rorb
and
jbe
mov
test
push
adc
push
sbb
fmull
jge
imul
aaa
pushf
inc
adc
pop
sbbl
fwait
ret
xor
pushf
andl
out
dec
hlt
sub
fimuls
push
or
pop
mov
test
movzwl
test
loopne
sbb
je
test
xchg
or
add
es
adcb
push
loope
mov
xchg
ficomps
adc
cmc
push
cmpl
adc
pop
sbb
scas
xchg
pop
das
jmp
add
adc
mov
cmp
cmpsl
icebp
adc
xchg
mov
jmp
daa
jo
sub
push
movsl
xorl
push
adc
das
push
fidivs
mov
inc
jb
roll
jmp
leave
and
push
jecxz
loope
mov
ret
stos
sub
js
fistl
rclb
add
sbb
push
push
mov
movsl
and
mov
add
or
mov
mov
mov
stos
int
dec
jmp
ds
jo
push
les
add
notl
mov
in
loop
rclb
out
mov
ss
xchg
in
adc
sub
orb
sub
inc
loopne
mov
out
and
sub
pop
dec
pop
xor
sbb
push
pop
or
hlt
inc
in
stos
or
mov
movsb
pop
ret
jge
push
daa
lea
jge
sub
hlt
sub
aas
or
push
test
nop
cwtl
jle
mov
loopne
sbb
cmp
ud2
rdmsr
ja
loope
lahf
cld
push
adc
cld
js
push
notb
mov
add
sti
add
and
dec
clc
xor
and
pop
lret
jecxz
or
sbb
add
cmp
inc
jbe
jne
mov
mov
sbb
shrl
fs
sbb
popa
pusha
lret
mov
jge
das
mov
les
push
mov
rclb
and
loopne
and
addb
mov
cmp
dec
mov
sarl
mov
cmp
jmp
mov
cmpsl
loope
call
pop
jl
int3
mov
fldl
cmp
into
xor
cmp
sbb
gs
aam
push
testl
sahf
into
dec
add
inc
dec
and
sub
int
fmuls
cmp
aad
mov
xor
xor
sub
push
sub
push
stos
movsl
jg
nop
dec
add
inc
or
mov
enter
dec
push
jg
inc
and
push
cwtl
stc
ja
add
pop
call
je
push
daa
mov
xor
xor
pop
push
dec
jge
sub
adc
icebp
cmp
addb
push
aam
clc
mov
mov
adc
or
das
dec
pop
mov
sub
inc
ficomps
into
jmp
into
out
add
roll
dec
xor
xor
jns
pop
sub
push
cmp
xor
in
and
imulb
xor
add
mov
sub
out
jle
cwtl
jl
mov
leave
xor
jb
xor
sahf
mov
aas
lea
jp
push
inc
xor
mov
fiadds
dec
dec
jns
adc
jne
pop
jo
iret
push
shrb
pop
dec
mov
adcl
adc
shlb
inc
add
jmp
loopne
insb
lea
into
mov
rorl
faddl
mov
and
and
aam
push
inc
mov
adc
mov
or
push
out
jl
movsb
gs
scas
push
and
das
inc
jle
add
aam
aaa
mov
pusha
jbe
outsb
jmp
xorl
and
mov
in
add
push
or
sbb
inc
mov
xchg
add
xchg
sbb
pop
fnstsw
mov
lea
test
popa
rcrb
bswap
sub
inc
jmp
inc
push
add
xor
jo
sub
mov
mov
pushl
cmp
jne
sub
xor
sbb
adcl
roll
adcl
daa
bound
fadd
movsl
jnp
xchg
inc
in
mov
jnp
mov
pop
xchg
aaa
xor
roll
rorb
iret
add
push
dec
enter
fadd
dec
xchg
inc
scas
push
push
pop
inc
adc
mov
jg
loope
add
je
dec
sbb
ret
lods
pop
loop
and
mov
les
sbb
test
movb
add
in
rcll
jne
andb
ljmp
cmp
sbb
scas
test
jl
and
jne
imul
or
pop
mov
pop
jne
or
jne
aas
push
xchg
mov
and
addl
cmpb
ljmp
cmp
mov
pop
lahf
cmp
sbb
lea
movb
push
add
or
mov
mov
or
xor
push
cld
notb
cmpsl
mov
sub
sub
in
dec
add
xchg
shr
aad
or
push
xchg
push
fs
movsb
inc
mov
xchg
fdivrl
push
inc
xor
sarb
cmp
lret
mov
sub
ds
push
push
fcompl
fiaddl
pop
push
pop
lea
testl
or
pop
les
xor
sbb
cmp
mov
popf
pop
addr16
scas
lcall
insb
inc
fbstp
mov
pop
mov
jg
imul
sbb
imul
mov
rcll
cmp
jl
inc
inc
push
jmp
cmp
adc
insl
cmp
insl
adc
lret
sbb
mov
sub
dec
adcb
das
inc
mov
inc
jle
testl
rcrb
dec
andb
andl
xor
call
sarl
mov
rolb
stos
xor
jne
sub
xchg
out
rcrb
push
jae
push
add
push
jne
push
push
je
xor
outsl
loope
out
sbb
dec
insb
jne
pushw
mov
or
cmp
scas
aaa
xor
inc
sarb
andb
jmp
mov
push
mov
adc
sbb
adc
cmp
je
push
add
dec
add
jne
add
mov
adcb
and
test
cmpsl
mov
cmp
mov
jg
add
repnz
cmp
add
cmpl
jnp
push
cmp
push
xor
cli
push
pop
cwtl
fdivrl
jl
sti
inc
mov
mov
mov
or
out
aaa
les
lret
jae
pop
movsb
cltd
adc
push
pop
sbb
or
sbb
in
push
cmc
push
and
sub
mov
pop
xor
rcrl
push
test
jecxz
xor
es
pusha
push
jnp
pop
aaa
jecxz
clc
stc
lds
mov
icebp
dec
loopne
adc
or
mov
jb
mov
mov
shr
xor
mov
push
mov
sahf
jge
mov
pop
dec
dec
or
jmp
inc
or
lea
and
add
es
or
lea
insb
aaa
movsb
mov
fcmovb
inc
sbb
and
sbb
lcall
mov
add
jae
push
or
sbbb
shlb
imul
data16
shll
insb
jo
pusha
shll
js
mov
shrb
pop
sbb
mov
add
adc
push
or
or
dec
jnp
les
shr
inc
mov
xor
pop
scas
sub
jo
add
lea
xor
add
loopne
nop
in
mov
or
movb
sbb
xor
and
rclb
xor
add
mov
inc
jl
js
and
xor
jo
xor
add
push
and
push
cmp
or
rclb
push
test
inc
negb
mov
imul
cmp
or
cmp
add
or
push
inc
adc
mov
shrl
cld
jo
fcmovu
sub
cmp
xor
hlt
inc
aam
adc
jmp
xchg
add
push
adcl
sbb
mov
mov
or
lea
add
cmpsb
cli
and
add
repnz
push
sahf
loope
addl
jb
mov
push
cmp
sub
sbb
sbb
adc
es
mov
mov
daa
push
add
lock
out
xor
push
mov
test
or
mov
movsb
jb
mov
sub
and
inc
sub
loopne
sub
add
shl
ret
mov
add
rclb
aam
jl
insl
pusha
and
imul
je
xor
xchg
imull
jne
das
xorl
cld
addl
jl
inc
addr16
jne
orl
clc
jnp
inc
dec
adc
imul
pop
pusha
int
pop
dec
test
aas
jmp
and
xchg
mov
add
das
call
test
sar
cltd
in
cmp
das
add
sti
cmp
sub
sub
sub
add
imul
fcoml
add
mov
stc
push
jne
mov
sub
outsb
sub
mov
inc
icebp
jne
cmp
lds
je
xor
sub
xor
or
push
sbbl
cld
out
cmpsb
imul
lods
mov
or
add
sub
cmp
js
mov
testb
add
or
mov
xchg
sbb
enter
sub
into
dec
aas
icebp
pop
cmp
inc
cmp
sbb
jne
popf
dec
cmp
lock
mov
insl
cmpsl
or
cli
out
fidivrs
pop
dec
adc
add
lods
pop
mov
cmp
cwtl
mov
or
xchg
xchg
dec
push
jle
lods
pop
mov
inc
or
movsb
jo
and
adc
lret
fs
sti
sarb
pop
xor
mov
pop
add
pop
inc
in
cmp
adc
rorb
jp
enter
repnz
jb
sub
mov
mov
dec
aaa
loopne
jb
sbb
lea
push
push
mov
xchg
bound
pushl
and
mov
sbb
fstl
lods
xor
int3
lock
arpl
cmp
testl
xchg
and
adc
lea
or
push
pushf
icebp
mov
je
sbb
fs
pop
fs
pusha
xchg
inc
inc
push
insb
insb
push
push
xor
or
pop
cmp
adc
nop
and
push
icebp
push
xchg
xlat
idivb
je
cmp
je
popf
add
add
xor
or
push
adc
push
mov
fsubl
lea
mov
push
push
hlt
sti
push
sub
inc
and
shrb
jmp
push
jne
inc
xor
movsl
jg
roll
andl
dec
inc
push
outsb
dec
adc
jnp
in
adcb
lock
xchg
xchg
cld
lock
rcl
out
mov
stos
or
push
pop
adc
adc
cmc
jo
add
ja
and
mov
movswl
in
push
mov
imul
lret
add
push
and
mov
cmpsl
loopne
add
ret
push
cmp
cmp
xor
ljmp
flds
pop
pop
sub
add
mov
test
adc
add
or
adc
lret
leave
sbb
add
and
xchg
mov
clc
jle
jae
fisubl
das
jbe
out
jne
adcb
adcl
sbb
sbb
pop
and
sarb
in
insb
push
clc
insl
ljmp
add
mov
inc
xorl
and
popa
movsb
cltd
cs
cmp
xor
leave
je
push
aas
jne
outsb
fsubr
sbb
add
xlat
ss
outsb
cmp
mov
stos
or
fcmovnbe
pusha
pushf
cwtl
xor
mov
clc
outsb
inc
ja
sub
mov
cmp
andl
sbb
iret
pop
shll
push
and
dec
dec
rorb
ficoms
xchg
cwtl
push
mov
mov
sbb
dec
push
or
pusha
fidivs
xchg
sbb
xor
cmp
xor
pushfw
fs
in
fcoms
inc
or
jecxz
mov
loope
inc
orl
add
adc
sub
adc
mov
outsl
lds
pop
arpl
sbb
imul
adc
je
fdiv
lods
cmp
mov
bound
ficoms
push
sub
and
cmp
sub
sbb
adcb
repnz
loope
pop
cmpsl
jne
sarb
flds
aaa
lods
sahf
subb
sbb
push
add
dec
pop
xchg
into
in
ret
jge
int3
mov
stos
mov
lret
lods
adc
sbb
enter
sbb
and
rolb
xchg
adc
or
pop
add
nop
addl
and
pop
cmp
dec
pusha
xor
lcall
adc
push
movl
push
add
insb
mov
adc
and
adc
movsb
data16
xchg
sbb
cmp
dec
fsubl
pop
push
cli
sub
xchg
jp
push
jle
xor
test
dec
inc
in
sub
mov
push
push
push
push
mov
ja
adc
fiadds
mov
mov
cmpl
cltd
test
loope
lahf
loop
int
fmuls
aad
push
arpl
sarb
dec
adc
pop
jb
test
add
mov
xor
push
xor
icebp
rcrb
and
and
pop
leave
rcrb
adc
fdivl
cmovge
or
mov
movsl
add
pushf
mov
jl
mov
mov
xor
sbb
and
push
jo
adc
adc
movsb
add
push
jmp
fnstcw
xor
pop
push
orl
push
pop
out
xchg
mov
orl
xchg
in
mov
andb
pop
cmp
cmp
and
shl
test
fdivp
push
stos
flds
pop
fdivp
sub
sub
mov
jne
test
sub
pop
lcall
xor
or
divl
movsl
dec
repz
dec
and
cmc
sbb
adc
jns
jl
repnz
and
cmp
inc
or
or
or
imul
sub
adc
inc
jne
mov
fsubl
xor
pushf
mov
and
lods
mov
and
or
push
ret
mov
fsubl
xchg
jae
or
add
xchg
add
shlb
popf
inc
jg
adc
adcb
pop
lret
sbb
jle
adc
push
je
xchg
fimull
je
mov
xchg
lock
aam
jnp
filds
push
xchg
mov
sbb
mov
push
or
or
dec
outsb
pop
push
and
push
lods
call
aaa
xchg
arpl
push
xchg
pop
cmp
enter
jge
imul
mov
or
imul
and
xchg
add
cmpsl
test
add
add
push
mov
xchg
jo
lahf
xorb
dec
xor
test
and
insb
popf
cli
ss
addl
or
mulb
jbe
pop
out
xchg
int3
call
sub
pushf
adc
cmp
add
push
sbb
push
sbb
cmovne
outsb
mov
sbb
xchg
cmp
push
jnp
xor
xor
ss
xor
adc
dec
leave
push
jb
cmp
nop
add
ret
ret
xor
add
fwait
xchg
insb
loope
sarb
ret
xchg
mov
dec
adc
js
fisttps
adc
jle
cli
push
push
push
rcll
dec
rcll
push
sbb
jmp
movb
jp
ljmp
jg
inc
cld
aam
add
dec
pop
nop
and
outsl
lds
sub
adc
popl
jmp
push
pop
push
fdivl
jle
xor
stc
inc
cmc
js
adc
xor
imul
and
push
pop
mov
pop
add
push
cmpb
pushf
dec
fmull
out
dec
push
inc
sub
pop
inc
or
and
push
jmp
jecxz
jae
push
lcall
sub
push
sbb
sbb
popa
pop
sub
mov
jl
inc
inc
lock
andl
adc
adc
push
ret
push
in
in
fs
cmp
mov
add
jae
cmpsb
cmp
or
mov
repnz
jo
push
fimull
hlt
add
scas
inc
xor
add
push
fcoml
fistpll
into
mov
inc
in
nop
jo
or
clc
dec
xchg
cmp
pusha
adc
faddp
test
dec
adc
or
ficoms
push
xor
mov
ds
jl
and
clc
mov
sbb
je
push
cmp
sub
xchg
out
adc
pop
push
sbb
jmp
push
cs
adc
push
pop
cmp
adc
mov
mov
xor
cmp
sbb
adc
lret
outsb
sub
mov
or
add
ljmp
nop
or
in
pop
push
add
mov
das
push
sub
or
jle
sub
add
rcr
cs
cmp
jo
imul
ret
fcoms
lock
sbb
mov
push
fdivr
int
or
cmp
jl
loope
xor
xlat
lds
lret
or
adc
jl
inc
dec
dec
insb
loopne
mov
jbe
fisttps
aam
out
addr16
mov
leave
pop
adc
gs
sub
or
pop
mov
sub
or
rolb
xchg
or
test
inc
mov
jo
ds
push
add
inc
push
adc
add
popa
popf
fstl
add
dec
scas
inc
cs
xor
rol
jle
lea
sbb
movsl
push
inc
mov
or
shlb
or
mov
mov
mov
clc
lret
inc
arpl
push
test
rolb
scas
nop
in
or
sbb
icebp
or
or
rorl
stos
push
pusha
and
mov
pop
xlat
mov
data16
cmpsl
cmp
push
xchg
lcall
movl
and
adc
ficompl
dec
sub
adc
xchg
daa
repnz
mov
or
mov
es
mov
insl
dec
fwait
xor
fimuls
push
push
inc
dec
push
aas
push
cwtl
imul
cltd
idivl
push
andb
pop
jne
hlt
jbe
lds
fidivs
in
cwtl
add
jne
lock
int
inc
loopne
outsl
ret
push
push
mov
add
sub
in
or
movsb
fxch
push
mov
push
pop
add
dec
shlb
addr16
xor
mov
addl
aas
movsl
add
in
and
sub
inc
inc
and
rolb
push
cmpsl
or
inc
aaa
adc
popa
movsb
stos
dec
mov
aas
or
sub
jp
imul
pop
clc
xor
fwait
adc
cmp
pop
mov
out
andl
call
xor
pop
sbb
mov
mov
popa
jns
jo
inc
or
sub
hlt
and
dec
sub
inc
sub
lds
push
nop
sbb
sbb
inc
mov
dec
out
xchg
jb
pop
push
or
jae
sbb
sbb
test
loop
xchg
or
fucomi
pop
dec
orl
add
dec
loopne
pop
pusha
push
jge
add
cmp
jg
rolb
mov
mov
add
dec
push
jb
sbb
mov
dec
adc
sbb
in
mov
cmp
cs
cmp
adc
sbb
sub
insb
sahf
pop
cmp
lods
sti
into
add
jg
pop
mov
xor
adcb
push
push
mov
rclb
imulb
addb
pusha
push
pusha
insb
out
add
test
in
jnp
mov
aas
loope
cmp
mov
outsb
add
cmpl
int3
and
add
sti
xchg
movb
pop
inc
dec
dec
cmpsl
scas
jge
xchg
sti
sarb
sub
insb
shr
inc
add
stc
push
mov
dec
adc
adc
and
call
cli
popa
dec
sbb
inc
mov
xchg
pop
cmp
xor
adc
adc
in
popa
inc
dec
std
repz
dec
inc
mov
or
lock
and
dec
cld
mov
mov
es
or
sub
or
push
mov
rclb
arpl
pop
adc
push
lods
les
cld
pop
adc
push
dec
dec
jns
mov
test
or
mov
lret
push
int
les
je
fdivs
call
dec
push
push
icebp
or
pop
mov
xchg
lock
out
arpl
popa
inc
pop
cmpb
pop
js
shll
sub
and
test
pushf
pop
test
jmp
dec
cmpsb
js
and
add
mov
adc
movsl
rol
insb
insb
lds
sub
lods
adc
lds
test
lcall
fdivrs
hlt
test
movb
inc
test
adc
mov
xchg
movsl
xor
je
adc
cmp
arpl
dec
jne
add
mov
mov
cwtl
pop
inc
or
adc
addb
or
add
jmp
push
jne
pop
add
push
and
pop
mov
xchg
mov
loopne
mov
nop
inc
xor
jle
add
xor
ds
cwtl
cmp
jbe
loop
cmpsb
fs
addb
sub
fs
mov
push
jne
repz
or
sbb
sub
jo
cmp
xchg
or
jo
into
je
or
jl
dec
nop
bound
adc
testl
pop
fwait
or
nop
mov
dec
push
or
scas
jb,pn
fiadds
cmp
add
mov
cmovbe
jg
cltd
push
mov
dec
cld
or
xor
sbb
mov
es
dec
pop
sahf
testb
aaa
pop
inc
fbstp
in
lea
pop
add
or
add
fsubl
pop
cwtd
ret
inc
and
inc
pop
ja
sub
mov
mov
dec
pusha
adc
adc
sar
inc
dec
movsb
add
pusha
push
cmp
rolb
mov
push
in
inc
leave
cmc
jnp
mov
arpl
cmc
pop
sub
subb
pop
test
repnz
xchg
adc
into
pop
testl
xchg
aaa
xor
adc
sbb
call
xchg
mov
mov
das
movb
mov
fsubrs
imul
adc
or
cmp
loop
pop
push
fisubrs
jmp
or
jb
add
adc
sub
push
shlb
into
mov
jnp
inc
nop
push
pushf
mov
mov
jl
je
insl
les
lock
fld
jge
mov
push
mov
jle
xor
or
aaa
push
neg
ret
jne
sbb
push
int
fcoml
and
sbb
inc
nop
jne
imul
add
sbb
xchg
pop
pop
mov
jae
push
push
xor
inc
xor
mov
sbbl
sub
pop
mov
lods
push
push
push
or
dec
and
out
push
xor
or
fwait
add
sub
and
lock
dec
int
sbb
daa
bound
imul
outsb
and
sub
jb
testl
xorl
lret
rolb
pop
popa
inc
sub
and
pop
test
push
sub
daa
inc
or
mov
rcll
cmp
push
dec
jnp
ret
push
cwtl
add
lret
mov
loopne
sub
adc
test
adc
cmp
mov
mov
xorb
test
stos
sti
push
rolb
rorb
jnp
sahf
add
in
daa
push
in
or
cmp
add
pop
cmp
cmp
mov
js
or
lea
loop
sbb
fnstcw
push
push
cmp
sbb
add
xchg
add
cld
push
or
je
pop
cmp
inc
shl
adc
adc
fwait
adc
adc
cmpsl
andl
adc
add
inc
pop
xchg
popa
pop
out
push
xchg
jecxz
mov
nop
pop
mov
je
cmpsb
jne
ret
iret
add
jl
mov
cmp
or
in
divb
je
or
je
or
sub
dec
call
das
adc
sbb
cmp
ficoml
push
or
add
add
sbb
sahf
sbbb
pop
jnp
dec
jnp
das
and
jmp
cmp
adc
rclb
adc
sub
adc
add
mov
inc
mov
xchg
jo
push
dec
lock
cli
mov
cmp
call
jmp
lea
test
cld
lds
pushf
stos
inc
mov
adc
add
sbb
or
repz
std
dec
cmp
jmp
and
out
adc
dec
fsubrs
adcb
add
add
inc
push
sub
adc
das
cli
cmp
sbb
je
ret
jle
xchg
sbb
pop
aaa
inc
dec
je
sub
sbb
sub
or
xor
adc
cld
inc
mov
sbb
fstpt
shrl
shl
mov
ret
push
adc
and
int3
pop
fidivrl
movsl
add
insb
adc
stc
xor
pusha
pushf
adc
cmp
push
loopne
test
movl
push
test
jnp
and
dec
jne
cmp
cmp
hlt
jne
push
or
mov
pop
and
fiadds
lds
and
mov
test
pop
fsubl
js
add
xor
out
je
push
xchg
rclb
jmp
cmp
dec
dec
add
mov
jo
push
push
push
or
or
xchg
call
loopne
pop
jo
or
mov
sub
adc
xchg
xchg
je
push
outsl
cmp
or
pusha
lcall
dec
roll
notl
fdivrl
xor
mov
sub
add
sbb
xchg
pop
cmpl
mov
mov
xchg
add
ret
inc
in
push
push
or
mov
ds
jb
inc
leave
push
fs
and
jb
in
shll
adc
cmp
mov
add
out
repz
jge
mov
mov
mov
push
leave
js
lods
call
xor
xor
sub
in
adc
pop
mov
int
push
ret
pop
cmc
xchg
out
cmpsb
fsubrs
fcoms
or
or
jmp
jbe
push
push
or
adc
addb
mov
fdivrs
xor
addb
xchg
xchg
mov
fimuls
mov
mov
inc
test
dec
fs
les
in
xchg
icebp
xor
sub
add
negl
test
dec
inc
sbb
mov
and
cld
lods
or
sbb
fiaddl
ss
mov
mov
test
bound
adc
imul
or
adc
push
cmp
insl
sbb
test
mov
pop
xor
push
movsb
push
iret
pop
fiaddl
jg
sahf
and
or
mov
push
xor
testl
adc
mov
lea
out
inc
loop
js
cmp
stos
jne
mov
or
push
xor
xchg
loopne
repnz
pop
out
xchg
sub
jae
dec
ret
sti
call
icebp
inc
in
divb
or
sbb
inc
or
sbb
pop
stos
inc
pop
mov
jo
or
enter
push
in
sub
sub
mov
test
outsl
in
push
shrl
bound
pusha
dec
sub
dec
leave
outsl
loope
fisubl
adc
inc
movl
pop
mov
orb
mov
outsb
xchg
mov
cmp
loop
dec
lahf
rolb
test
pop
push
add
and
sub
icebp
cmpsl
roll
push
push
loope
inc
pusha
push
xchg
cmp
sbb
or
inc
push
jbe
mov
daa
xchg
sahf
mov
subl
daa
push
mov
dec
shrl
imul
inc
or
fabs
pop
mov
and
xchg
loopne
int3
cmpsl
mov
pop
add
inc
jp
push
sbb
or
call
jle
pop
push
inc
leave
je
in
pop
rcl
add
cmp
fdivrl
es
loopne
mov
jo
cmpsl
ret
xchg
push
sub
dec
sahf
lcall
repz
inc
xor
push
outsb
int
xor
aaa
divps
jo
aaa
in
mov
inc
push
dec
cmp
hlt
cld
inc
bound
or
cmpsl
or
mov
mov
adc
adc
mov
repnz
pop
or
or
or
fwait
push
sbb
mov
cmp
scas
add
mov
or
xchg
add
push
mov
sbb
mov
enter
xchg
mov
mov
adcl
or
arpl
adc
test
push
add
push
sub
adc
out
test
inc
or
push
and
mov
popa
sub
popa
daa
cmpsb
mov
adc
inc
or
jne
cmpsl
insb
adc
xchg
pop
int3
xchg
xchg
shrb
enter
je
ds
clc
leave
sub
inc
cmpps
pop
scas
mov
ret
or
test
sbb
cmp
inc
push
ret
xor
fisubs
mov
jnp
into
fcomi
sub
pop
or
ss
cwtl
dec
das
mov
cmp
mov
xor
enter
jne
xor
add
push
in
push
cmp
and
push
dec
adcl
call
test
nop
adc
jp
cmp
xchg
inc
cmc
jns
adc
jge
lock
cmp
cmp
or
sub
sbb
xchg
inc
das
push
sbb
pop
or
pushf
std
and
adc
iret
js
les
add
aad
and
pop
enter
adc
call
push
xor
mov
and
cmp
cmpsb
pop
add
in
xor
xchg
mov
adc
lods
sub
inc
and
fistl
and
notb
add
pop
jno
sub
inc
clc
inc
movsb
into
jle
push
jecxz
lahf
add
pop
lret
in
lcall
fs
adc
sahf
rcrb
sbb
test
sbb
test
sub
roll
pop
jb
nop
push
sub
add
gs
push
fs
mov
outsl
mov
push
push
mov
xor
adc
sub
xor
sub
and
sub
adcl
out
xchg
lods
das
mov
fsubrs
fmuls
pop
lds
out
pop
out
dec
mov
cs
in
sbb
in
cmp
push
pop
cmp
inc
lock
xchg
jmp
lock
jle
jmp
ret
fcomp
inc
jnp
sbb
jg
cmp
adc
pop
gs
insb
out
pusha
xchg
lock
add
sbb
adc
jae
iret
outsl
dec
and
lock
dec
add
mov
push
repnz
pusha
je
rolb
pop
add
data16
je
cmp
je
ljmp
aad
adc
mov
in
dec
mov
mov
add
dec
adc
push
or
sti
and
inc
in
inc
shll
popa
hlt
das
mov
in
dec
dec
push
repnz
pop
je
add
outsb
xchg
stos
je
cmp
cmpb
sbb
cli
fsubl
data16
xchg
or
jecxz
into
fsubs
cld
lods
inc
cmpsl
push
insl
mov
add
andb
mov
leave
inc
push
jo
push
add
add
outsb
jmp
cmp
pop
adc
adc
outsl
cmp
imulb
mov
push
data16
push
pop
mov
mov
inc
mov
pushf
cld
inc
adc
and
jo
mov
or
cld
insb
fs
cmp
std
out
jl
pop
nop
add
cmc
adc
nop
lret
and
pop
and
mov
mov
adc
andl
push
arpl
fucom
adc
or
fcoms
dec
or
je
adc
mov
scas
sbb
jge
push
xchg
out
push
pusha
add
and
add
and
adc
pushf
sbb
jmp
mov
sub
sub
pop
add
lea
xchg
movsb
loope
xchg
aaa
or
js
rcll
jle
adc
sub
jae
andl
or
movsb
cmp
xor
and
and
cld
and
push
jg
pop
cmp
xchg
jg
xor
add
xor
sbb
ret
lret
nop
add
fs
and
insl
push
dec
andl
ss
les
enter
sub
add
lahf
out
cmp
jb
in
push
daa
jae
sti
je
neg
and
push
push
adc
dec
push
xchg
push
mov
mov
dec
negb
dec
clc
call
stos
inc
pop
add
jmp
sbbl
js
fsts
dec
or
adc
or
mov
repz
ret
movsl
test
pop
dec
adc
sub
push
addb
sbb
cmp
aas
fsubl
cltd
push
sbb
mov
sub
jb
psubsb
adc
push
xchg
cmp
fistps
jl
and
cld
or
sbb
cmpsl
lea
xchg
sbb
fmull
loopne
cmp
adc
fnstenv
and
xor
fwait
dec
je
cltd
xor
addr16
into
das
xor
mov
mov
jp
in
pop
lcall
in
mov
in
and
jge
rcrl
testb
and
or
or
dec
movb
ficompl
pusha
mov
rol
xor
adcl
sub
mov
fld
incl
jne
cmc
push
mov
pop
xor
loope
imul
cmc
cmp
push
sbb
popf
add
sub
xchg
mov
mov
sbb
add
adc
add
mov
int3
sbb
jne
xchg
push
rolb
pop
jge
pop
adc
or
inc
xlat
aaa
add
sbb
loopne
dec
and
loop
scas
pop
pusha
sub
sbbb
pop
clc
inc
mov
rcrb
scas
outsl
cmp
mov
out
or
add
mov
scas
shl
pop
push
lock
lock
dec
xlat
sbb
rcl
or
lret
cmp
push
mov
rolb
adcb
mov
push
xchg
and
add
loop
push
leave
arpl
push
cmp
call
add
shlb
mov
xlat
lahf
adc
jl
scas
gs
lcall
push
shlb
push
mov
add
cmp
jne
sbb
ja
mov
clc
or
add
push
scas
mov
add
cmpsl
dec
jmp
sbb
test
or
push
push
mov
arpl
xchg
lds
push
inc
scas
orb
or
cmp
xor
sub
call
jg
js
dec
sub
push
and
or
jmp
outsb
je
xchg
repz
lcall
mov
and
jge
loope
out
enter
je
lods
test
out
aam
adc
xchg
adc
xchg
cmp
les
mov
pop
push
shrb
ss
xor
pop
jo
cmpsl
add
or
jbe
clc
sub
jge
adc
jo
or
sub
pop
mov
enter
das
fcoml
mov
dec
es
sti
call
loop
mov
lds
and
cmpsl
cmc
and
imul
ja
jg
mov
movsb
xorb
adc
jle
or
adc
sub
orl
sbb
jp
add
lock
ret
xor
or
es
rorl
repz
push
fstpl
add
mov
cmp
jbe
shll
nop
pop
xor
leave
push
xor
nop
pop
or
and
add
xchg
fnstenv
lods
cmpb
sbb
add
mov
add
adc
mov
add
dec
dec
dec
pop
lods
sbb
sar
adc
popa
leave
xchg
nop
mov
nop
mov
orb
push
or
imul
sbb
push
dec
stc
add
test
push
call
insl
dec
sub
jo
add
mov
inc
lahf
mov
push
cmp
push
pop
sub
and
or
gs
jp
test
mov
shlb
lock
sub
sarb
shlb
repnz
pusha
test
loop
inc
jne
fildl
fs
mov
push
aad
repz
lock
test
push
shl
inc
adc
inc
mov
aas
ja
push
cld
adc
mov
push
adc
add
mov
adc
add
out
lock
fwait
mov
jne
andl
nop
inc
and
test
mov
sbb
jnp
shr
imul
sub
jnp
or
lahf
cld
je
nop
out
xor
jbe
jb
pop
xor
sbb
mov
insb
sbb
sbb
or
and
xchg
repnz
jle
cld
push
push
fsubrl
fwait
sub
sbb
icebp
push
sub
shlb
iret
loopne
push
pop
ds
push
cmp
lea
scas
push
push
loopne
dec
add
mov
in
mov
rol
push
repnz
popf
stos
add
add
mov
mov
ficoms
icebp
jo
and
dec
dec
adc
leave
mov
rcl
loop
cmp
xchg
and
push
sbb
mov
shll
negl
mov
in
jmp
sbb
push
add
add
or
inc
jecxz
aam
leave
sbb
xor
jb
mov
arpl
stos
xor
imul
push
dec
stos
rcrb
imul
push
in
inc
rorb
and
inc
testl
inc
shlb
dec
add
and
cmpl
rcrb
sub
xchg
mov
sbb
sbb
call
fcoml
lods
test
stc
dec
inc
arpl
stc
jl
out
and
mov
and
dec
add
push
lds
daa
or
push
adc
scas
pusha
push
imul
push
ret
cmp
sub
aaa
test
add
mov
jl
fwait
dec
insb
add
push
pop
ret
lret
ret
lret
push
test
aaa
mov
or
jns
sbb
add
test
or
add
cmpb
push
mov
xor
sahf
ret
ss
pushl
and
add
jp
xchg
xor
out
aad
cmp
test
push
hlt
test
cmp
jecxz
into
les
icebp
push
cmp
jp
roll
dec
inc
or
lea
cld
push
imul
mov
or
or
lock
sbb
or
sbb
or
pop
js
mov
adc
pop
sbb
hlt
adc
int3
sbb
sub
or
imul
mov
or
xchg
aam
adc
ljmp
stos
rcrl
stos
jl
push
clc
testb
ffree
xor
jge
xchg
pop
fists
call
clc
notl
test
pop
jbe
insb
in
inc
pop
add
mov
inc
and
lea
test
mov
push
ljmp
imul
je
inc
or
xchg
icebp
jbe
adc
cmp
das
rcll
leave
nop
sbb
cmp
adc
pusha
lds
or
jno
shlb
sbbl
popa
inc
xor
lock
cmpb
xchg
aaa
das
cltd
push
add
inc
push
inc
inc
sti
jl
test
jg
cmp
jg
sahf
pop
mov
or
ret
mov
push
cltd
pop
daa
sbb
ret
mov
aas
clc
fistps
mov
push
add
dec
add
jmp
add
rcl
aaa
inc
sub
push
imul
dec
popa
jbe
out
adc
push
es
xor
and
add
icebp
mov
xchg
insl
addr16
mov
movsb
jge
sbb
shlb
push
fdiv
or
jns
pop
sub
xor
xor
cmp
cmpsb
mov
sub
inc
dec
fs
mov
push
data16
and
ret
push
sti
jecxz
push
mov
or
movl
pop
jg
or
inc
add
cmpl
ror
sub
cltd
mov
mov
js
mov
decl
jno
jne
pop
shll
add
bound
dec
outsl
adc
movsb
dec
xor
pushf
push
mov
in
pop
xchg
andb
popf
push
cmp
scas
insl
cltd
and
push
mov
and
cwtl
enter
sarl
push
pop
jp
enter
jmp
cmp
push
fcmovb
cmpb
ss
sbb
lock
test
popf
andb
cmp
and
or
push
mov
push
in
jo
das
push
lahf
add
call
mov
outsb
out
xchg
pushf
mov
mov
inc
and
lods
pop
test
and
xchg
mov
xchg
cmc
or
cmp
push
mov
push
mov
xchg
add
loope
ffree
lods
inc
pusha
mov
out
xor
inc
mov
dec
sub
and
mov
xchg
out
test
jge
je
pop
cmp
inc
jl
popf
sub
out
pop
sub
push
cmp
or
aaa
mov
clc
cmpl
rep
add
xor
popf
mov
pop
or
dec
and
add
insl
jmp
sub
jae
sbb
inc
pushf
pop
js
push
jae
sbb
fwait
sub
mov
adc
pop
push
daa
pop
or
mov
push
mov
mov
push
push
mov
push
imul
mov
pop
xchg
adc
inc
xor
push
adc
xorl
adc
pop
popa
or
addb
xor
mov
mov
imulb
cmpb
or
data16
xchg
lahf
push
xor
push
test
sub
test
scas
jno
xchg
adc
xchg
xchg
mov
dec
rolb
push
iret
test
adc
xor
das
mov
int3
jae
sbb
shlb
lock
mov
push
push
push
jne
inc
popa
mov
pop
rcrb
and
and
sbb
jbe
jle
lcall
hlt
lock
xchg
cltd
test
inc
mov
push
or
sbb
dec
push
push
shrl
push
test
loope
mov
xor
pop
cs
adc
ljmp
add
outsl
push
fmuls
in
gs
xlat
mov
lds
push
lret
mov
cmp
out
mov
add
icebp
addl
roll
inc
push
add
cmp
xor
cmp
jne
lcall
adc
lea
push
inc
scas
push
loope
fadds
adc
inc
and
loopne
rcl
cmp
dec
xchg
lret
adc
pop
sbb
test
adc
lods
add
dec
nop
addr16
xlat
cmpsl
sub
add
add
clc
adc
jbe
sbb
fisubrs
call
xchg
add
psrad
sbbb
mov
mov
mov
add
dec
rorl
and
out
test
rclb
test
pusha
or
push
sldt
lahf
or
xor
dec
adc
mov
inc
cmp
xorb
test
xor
add
or
push
push
ljmp
sbb
rol
add
popf
addb
or
add
and
cmp
cmpsb
add
test
int
jo
and
sub
or
mov
add
xchg
sbb
push
movb
xlat
jb
xchg
add
push
or
imul
ret
sub
rol
insl
pop
add
sahf
ja
test
mov
xor
adc
cmp
cmp
out
fs
xchg
push
andl
cmp
mov
and
jg
cli
clc
pusha
inc
popf
cs
ret
adc
push
add
xor
jmp
cmp
int
mov
aad
and
das
lret
push
ret
ljmpw
mov
push
push
mov
sub
or
add
jl
jno
xor
push
mov
inc
or
jle
fistpl
or
jbe
mov
sbb
iret
jne
or
es
add
icebp
push
xchg
cmp
jge
add
enter
or
xchg
xchg
adc
mov
aaa
test
inc
jmp
stos
push
mov
jo
loope
stc
jne
sub
outsb
sar
ror
les
pop
jp
cmp
shll
adc
mov
xor
lret
pusha
iret
jmp
xchg
jmp
dec
hlt
jae
adcb
mov
jg
sub
ret
movsb
stos
in
adc
icebp
lret
add
jnp
pop
adc
popa
loop
shlb
inc
inc
clc
add
push
inc
mov
les
inc
sub
jb
daa
jmp
adc
and
data16
pop
add
jecxz
mov
std
nop
mov
sub
push
sub
sbb
xorb
loopne
jae
add
adc
add
dec
sti
xchg
insl
push
xorb
mov
pop
enter
pop
enter
adc
cmp
push
and
mov
xchg
add
and
sbb
sbb
push
ds
js
mov
adc
daa
or
cmp
and
cmp
cmp
add
dec
and
ftst
nop
inc
or
mov
outsb
imul
adc
push
jb
push
or
or
insb
bound
xchg
insl
lahf
sbb
cmp
jl
and
imul
jb
insb
cmp
push
adc
popa
movsl
xchg
sbb
pop
jecxz
cld
or
pop
arpl
pusha
loop
mov
mov
cmpsl
jne
outsl
inc
jbe
inc
xor
dec
pushf
je
and
cmp
or
outsb
dec
pop
sub
jbe
pop
rclb
shlb
lret
mov
gs
sbb
leave
nop
js
inc
adc
roll
loopne
jmp
inc
adc
cmp
push
inc
aas
and
lahf
sbbb
and
jb
sbb
and
and
sbb
sbb
cmp
jg
jb
sbb
sub
sbb
sbbb
movsb
sbbb
sub
xchg
mov
cs
or
xorb
cmpsb
mov
in
pop
cmp
inc
push
std
insb
leave
push
jne
cmp
jmp
mov
mov
shrb
lea
and
leave
in
into
cmp
cld
or
std
push
jae
mov
adc
pop
add
sti
fisubrs
or
sbb
jbe
shl
adc
sbb
sbb
xchg
scas
test
and
push
push
loope
sub
jne
hlt
nop
xor
adc
adc
mov
jne
arpl
cmp
mov
popa
je
push
fsubr
mov
subl
adc
outsb
cmp
dec
sub
arpl
mov
xchg
mov
sbb
lds
dec
fldl
or
mov
in
loop
fimuls
roll
enter
ret
mov
shr
aam
js
mov
push
mov
test
sbb
jo
pop
and
icebp
jae
stos
pop
hlt
mov
jb
mov
add
fs
ja
push
mov
or
pop
push
cmp
subl
movb
mov
loopne
cmp
mov
pop
add
inc
or
insb
add
mov
adcl
pop
lock
mov
push
addl
xchg
ljmp
inc
call
push
push
pusha
pop
leave
loopne
adc
inc
jbe
cmp
sbb
fs
pushf
sub
movsl
iret
push
out
jecxz
stc
lock
adc
add
and
out
pushf
xchg
add
jno
loope
es
out
pop
or
adc
insl
push
clc
and
in
sbb
cmp
push
or
pop
or
loopne
lcall
es
adc
and
fisttpl
add
je
xchg
and
jmp
cmp
lret
jl
push
cmp
popf
jmp
inc
push
je
sub
mov
xor
adc
out
lret
push
lret
sar
mov
mov
or
js
test
push
pop
pop
cmp
pop
aas
pop
sbb
add
sbb
xchg
je
inc
lahf
sub
adc
add
jne
test
mov
add
loop
movl
mov
mov
add
fmul
sub
test
mov
or
mov
and
pop
lock
movsb
pusha
or
add
mov
cmp
mov
push
pop
inc
jp
inc
xorl
xor
sub
inc
push
add
sub
pop
lock
rolb
jns,pt
jecxz
cld
nop
aam
arpl
fwait
popf
cmp
push
in
cmc
call
jg
dec
and
inc
or
loopne
outsb
adc
lea
push
mov
cmp
mov
push
rcll
rclb
jae
sbb
shlb
les
aam
mov
jmp
jl
jo
out
jnp
dec
push
xor
and
imul
in
sarb
je
cmc
adc
fadds
xchg
xorb
stc
stos
xlat
aad
fistl
inc
and
js
mov
test
pusha
adc
push
push
dec
sbb
ljmp
inc
adc
lcall
push
xorl
filds
mov
adc
mov
dec
adc
jbe
jmp
lahf
mov
mov
test
sub
dec
orb
inc
mov
insb
ja
sbb
and
pop
test
push
adcb
mov
push
add
jo
mov
mov
popaw
inc
cmpsl
loopne
ret
int
aaa
add
adc
sub
movb
pop
or
dec
loope
scas
insl
mov
std
adcl
push
aaa
rclb
cmp
loopne
lahf
pop
add
sub
sub
pusha
idiv
jge
mov
pop
push
push
or
in
fcoms
jmp
push
cmp
stos
adc
mov
inc
sbb
dec
adc
popa
sub
je
jle
call
push
push
nop
mov
aas
push
ss
push
es
fwait
add
call
mov
jb
icebp
lret
inc
scas
clc
or
and
shl
outsb
adcb
shll
nop
out
enter
lods
add
mov
stc
jae
add
dec
mov
ret
pushf
and
decl
xor
and
xchg
xchg
mov
incl
or
lock
pop
xor
pushf
push
in
mov
ret
or
and
pop
xor
push
push
sbb
loopne
shll
pushf
and
xor
add
pop
ss
mov
jmp
sarb
cmp
xor
rcrb
and
push
add
imul
push
insl
push
push
lea
test
jo
push
mov
imul
adc
mov
sbb
mov
add
popa
int3
sub
add
jnp
and
rolb
or
and
or
icebp
dec
pop
xchg
cmp
or
test
cmp
and
bound
loope
xchg
inc
pop
xchg
aam
sbb
xor
pusha
push
clc
jo
daa
push
lret
ret
out
loope
movsl
cmpsb
sbb
add
mov
lods
mov
sbb
inc
sbb
jno
push
stos
mov
ljmp
push
dec
in
xor
mov
mov
mov
call
dec
loopne
aam
cmpsl
xor
jbe
push
sub
inc
pop
push
mov
push
outsl
mov
and
cli
mov
push
add
push
push
pop
mov
xor
inc
pop
xchg
xorl
sbb
add
call
les
xchg
cmpl
ror
xchg
adc
and
shrb
xor
push
pusha
xor
xchg
lahf
and
inc
dec
pop
jne
inc
scas
leave
adc
add
push
fbld
lahf
and
push
inc
or
push
push
mov
mov
and
nop
subb
mov
mov
jmp
dec
mov
pushf
ss
in
repz
shlb
bound
adc
add
adc
pop
sbb
pushf
test
xor
and
addr16
pop
repz
test
and
push
adc
push
rorl
pushl
cmc
or
pop
mov
and
inc
test
dec
clc
add
js
xchg
push
pop
xor
pop
or
adc
sbb
movsb
ljmp
xchg
ss
int
or
rclb
push
push
and
hlt
inc
mov
pop
shll
push
cltd
inc
add
mov
and
add
jno
in
pop
dec
mov
add
ss
add
adc
stc
outsb
arpl
cmpsb
jecxz
sbb
xlat
pop
cmp
orb
mov
push
mov
cmp
pop
ss
mov
test
call
add
js
push
xor
enter
sub
jmp
in
pop
adc
mov
and
sub
mov
scas
incb
pop
xor
xor
ljmp
push
push
sub
push
loope
xor
or
jno
movsb
stos
loope
dec
pop
mov
testb
in
sbbb
cmp
js
push
or
dec
in
pop
or
call
inc
jns
bound
popf
mov
dec
lret
jmp
adc
imull
cmpl
test
adc
push
icebp
nop
push
push
rolb
popa
cmp
nop
push
push
aad
and
xor
movsb
hlt
loopne
pusha
aam
or
or
sbb
add
add
mov
enter
or
rolb
jo
mov
and
int
popf
pop
insb
inc
imul
movaps
push
mov
aad
das
add
pop
inc
clc
mov
adc
mov
and
xchg
inc
pushf
sbbl
jo
rcrb
push
push
pop
lea
jmp
mov
nop
xchg
cwtl
pushf
add
adc
lahf
sbb
pusha
cld
sbb
lea
sub
push
stos
sub
test
pop
mov
fmul
rolb
mov
or
mov
pop
inc
mov
mov
into
sbbb
movsb
inc
fimuls
mov
movsb
rcrb
push
mov
cmp
int
jmp
movsb
lods
jmp
or
sbb
cmp
in
and
mov
lea
mov
cmc
cmp
dec
xorb
jle
clc
jnp
sbb
mov
push
loopne
cs
dec
or
fmulp
push
mov
mov
push
mov
sbb
push
push
lret
mov
mov
ljmp
scas
outsl
jecxz
popa
inc
push
pop
mov
cli
mov
in
mov
mov
dec
add
nop
xchg
dec
sub
mov
xor
or
cmp
mov
sub
mov
xchg
mov
sti
pop
inc
sbb
addr16
bsr
adc
shl
mov
fdivrl
lock
inc
push
pop
add
mov
mov
cmp
ss
adc
loopne
or
and
mov
stos
cmp
sub
lods
sub
addl
push
adc
rolb
adc
xor
mov
je
push
stos
add
fcmovnb
int
mov
fwait
dec
fadd
adcl
push
push
jns
outsl
xlat
test
mov
push
push
repz
js
ds
mov
sbb
ds
je
shll
push
lock
push
movsl
ds
adc
jmp
sbb
hlt
and
jle
mov
in
pop
lock
or
icebp
push
sbb
xlat
lods
dec
jne
sub
xlat
adc
aam
mov
or
jo
or
clc
repnz
adc
mov
fnstenv
insb
out
loope
jl
ljmp
add
xchg
jne
cmp
pushf
daa
shlb
mov
divb
mov
fcom
cmp
fabs
or
mov
dec
and
hlt
loope
lahf
cmp
mov
push
lret
push
inc
je
mov
outsb
cwtl
cmp
lock
stos
dec
cmp
cmpl
enter
test
fs
lock
sbb
sbb
pop
pushf
imul
xchg
or
repz
add
xor
xchg
push
add
nop
sub
lret
sub
fwait
pop
push
mov
push
imul
pop
push
mov
std
push
sub
dec
push
adc
inc
inc
or
lock
fisttpll
test
stos
push
cwtl
pop
cmp
xor
push
pop
dec
in
push
hlt
add
sub
lock
dec
cmpsb
jo
jae
inc
insl
lea
cmp
cmpb
adc
mov
add
sbb
or
or
out
cmpl
sbb
test
cli
sbb
push
sbb
jbe
push
dec
jecxz
sbb
sti
lea
add
sbb
imul
aam
test
or
mov
dec
add
xor
mov
sbb
mov
jnp
push
ret
xlat
cmpsb
xor
lock
pop
pop
sub
leave
cmp
push
lahf
call
dec
and
das
mov
jae
fiaddl
adc
fiadds
and
fidivrl
jno
jo
sub
sub
push
in
inc
cmp
leave
imul
test
inc
fdiv
cmpb
fsubrs
ret
popa
push
outsb
add
lods
sti
cmp
push
adcb
push
sub
shrb
fsubs
fdivl
push
lods
adc
push
pop
sub
mov
loopne
add
les
loope
lahf
filds
or
pusha
add
inc
clc
pop
lock
rolb
push
mov
and
adc
or
je
mov
or
mov
adc
mov
add
scas
popf
mov
mov
push
test
cmp
xchg
ret
or
inc
push
or
cmp
jb
popf
loopne
sbb
int3
lret
cmpl
ss
repnz
dec
mov
push
loop
and
ja
jns
lock
adc
mov
push
mov
mov
mov
adc
mov
or
rcll
pop
inc
cmp
movsb
test
popf
dec
pop
jp
cmpsl
ss
mov
lods
pusha
add
or
sub
lock
cmp
sbb
incb
mov
sahf
pop
sbb
fwait
pop
int3
xchg
xchg
cmpsb
or
push
xchg
xchg
jns
cmpsl
cmp
pop
xchg
pop
push
or
hlt
mov
xorb
push
enter
das
xor
cmp
pop
std
pusha
fdivl
outsb
jp
je
add
adc
je
data16
test
xchg
incb
mov
push
sarl
ret
jg
add
adc
lret
jbe
fnstsw
add
push
jge
push
jo
repz
jle
xchg
push
cmp
sbb
jp
outsb
cmp
pop
ja
mov
sbb
xchg
sbb
cmp
in
sub
je
push
cmpsb
and
sahf
rorb
mov
mov
or
sbb
sbb
jns
nop
sub
data16
jmp
inc
jo
pop
pop
jns
add
addr16
and
add
mov
lock
fcmove
add
addr16
mov
and
movsl
push
or
jno
mov
aam
sub
scas
mov
or
sti
jl
lods
lret
jmp
pop
cmpsb
push
push
lods
push
leave
fs
add
xchg
push
mov
mov
mov
fwait
jb
rcr
test
mov
jle
mov
mov
or
sarb
and
sub
sbb
pop
ret
mov
push
rcrb
daa
mov
mov
or
add
test
incb
push
sbb
insb
testl
adc
pusha
push
test
scas
push
fisubrs
mov
mov
and
jl
pop
ret
jge
add
loopne
adc
add
inc
movsl
xor
stos
add
lret
in
jns
pop
dec
and
push
add
scas
push
fcomp
adc
mov
in
and
test
dec
xchg
testb
jbe
dec
mov
and
adc
and
dec
mov
add
jns
sbb
or
adc
push
mov
xchg
xchg
lds
adc
mov
push
testl
jo
and
xchg
push
into
je
pusha
in
scas
xchg
out
rcrl
dec
sub
mov
mov
nop
cltd
movd
test
push
push
test
lods
lea
test
addb
addr16
pop
fnstcw
jle
inc
inc
lcall
and
pop
add
mov
mov
and
adc
xor
cmc
flds
and
mov
pusha
popa
mov
or
and
test
js
rcrb
lea
push
xchg
insb
mov
mov
jg
and
dec
adc
push
adc
add
jo
fwait
cmp
repnz
mov
add
xor
pop
xchg
stos
nop
imul
add
push
cmpsl
fldt
inc
aas
mov
test
loopne
dec
push
popa
jne
mov
cmp
pop
pop
jl
push
jno
gs
hlt
push
into
dec
cmc
or
popa
imul
xchg
outsb
and
xchg
xlat
mov
imul
je
mov
insb
call
mov
ss
jno
inc
inc
adc
je
scas
mov
cmp
inc
testb
xchg
and
push
fwait
shrb
rorl
xor
pop
dec
add
mov
jge
and
inc
push
stos
push
add
cmp
pop
mov
inc
out
xor
add
cmp
daa
add
xchg
mov
out
push
xor
push
call
inc
in
cmp
imul
pop
adc
add
inc
fldt
xor
jle
add
jae
cmc
mov
adc
pop
inc
or
push
pusha
and
cmp
xor
mov
testl
fdivrs
lea
lds
add
cmp
dec
xor
loop
add
shr
add
ficoms
sbb
adc
and
loope
rorb
pushl
pop
jl
ret
shr
cmp
jbe
add
jmp
add
pushf
inc
dec
or
test
ret
and
dec
loop
inc
dec
loopne
jg
loopne
jl
mov
addb
sub
sub
adc
mov
mov
popf
lcall
dec
sub
push
xor
mov
enter
dec
or
or
call
sarb
mov
add
xchg
test
and
rorl
das
fsts
mov
gs
rcll
or
or
mov
loop
and
aaa
cmpsb
mov
mov
test
fstl
cltd
movsl
mov
push
mov
jl
dec
fcomps
mov
loopne
fcomps
xorl
popf
addb
add
dec
inc
adc
mov
adcl
jo
fldenv
fdiv
xor
daa
push
or
pop
aaa
xor
jb
push
push
push
xor
push
shll
out
mov
aad
nop
xchg
loope
arpl
or
adc
outsb
cmp
jg
and
stos
jl
cmp
je
pop
negl
xor
mov
or
push
shrb
rclb
das
sbb
scas
cmpb
mov
and
sbb
push
add
adc
xchg
mov
cmp
insb
ret
pop
xchg
and
or
jno
push
imul
mov
scas
dec
xchg
pop
push
call
mov
bound
sahf
inc
les
repnz
in
orb
pop
mov
popl
ds
add
mov
repz
push
out
sub
lea
imull
adc
cwtl
pop
mov
mov
and
push
push
add
fsts
fnsave
push
or
shl
loope
cltd
jmp
insl
add
add
adc
adc
or
leave
or
add
loope
inc
mov
sarb
cmp
int3
xchg
xor
insb
cs
mov
pusha
je
pushf
push
push
sub
int3
xchg
add
add
sbbl
dec
enter
lret
out
mov
sbb
in
lds
adc
jmp
shlb
mov
aam
mov
lods
xchg
cmpsl
enter
adc
dec
sub
xor
outsl
test
mov
push
repz
push
jl
dec
jae
fcoms
mov
fcmovnb
inc
jnp
in
mov
test
in
inc
imul
lods
xchg
mov
push
fcomps
in
test
pop
push
push
inc
mov
adc
ss
repnz
adc
mov
push
lahf
fistpll
sbb
popa
popa
shlb
mov
add
inc
fsubrs
aam
adc
sbb
por
aaa
pop
and
jmp
movsb
shll
fldl
add
add
ja
lods
pop
sub
jo
xchg
movups
pop
mov
adc
push
test
sub
and
ret
jbe
push
push
xor
sub
mov
es
push
pop
inc
push
adcb
or
cmp
pop
insb
adc
sbb
pushaw
cwtl
es
dec
pop
outsl
cmp
fcmovnb
sub
incb
adc
add
mov
cmp
lahf
jb
je
push
addr16
sub
inc
push
dec
das
mov
or
adc
int3
inc
ret
pop
inc
or
sbb
movsl
fabs
or
push
mov
mov
in
or
add
xchg
dec
xor
aaa
and
jns
pop
xchg
jecxz
scas
or
mov
loopne
cmc
andl
lea
stos
mov
mov
push
sti
push
add
or
jg
ljmp
int
push
mov
cmp
jne,pn
inc
and
ljmp
sub
ret
lret
push
add
and
jmp
jge
and
rolb
and
orb
xchg
sub
mov
pushf
xor
cmp
mov
sarl
rcrl
testl
mov
dec
roll
mov
mov
outsb
or
test
mov
inc
and
fistl
inc
xor
mov
add
xchg
leave
cmp
insl
popf
mov
add
insl
cli
push
insb
and
jp
sbb
and
adc
mov
icebp
mov
pop
sbb
inc
mov
lret
neg
inc
or
xchg
or
jnp
arpl
pop
sbb
data16
lock
push
cmp
in
or
stos
jo
dec
push
mov
sub
imul
pop
jns
inc
jecxz
cmp
fwait
mov
pop
divb
pop
cmp
sbb
add
mov
scas
sti
testl
call
aam
push
cmpb
xor
pop
loope
rclb
push
cltd
xor
les
sbb
sub
mov
into
pop
loop
pop
jno
mov
or
iret
cmp
cli
pop
push
add
add
pushf
shlb
pop
je
inc
pop
loopne
fmull
add
mov
add
or
cmpps
ret
fstl
mov
les
addr16
pop
pop
or
xchg
jo
mov
pop
shrl
mov
mov
popa
jl
jbe
jl
or
test
sahf
xchg
pop
sahf
ret
rep
mov
dec
pop
mov
sub
xchg
adc
lods
addr16
inc
les
call
sbb
dec
sbbl
rolb
push
add
loop
push
xchg
and
jl
ret
jle
mulps
adc
aaa
loopne
movsb
push
call
insb
cli
dec
xchg
jno
jle
push
pop
xchg
mov
cmpsl
push
cmpsl
cmp
dec
jbe
push
cmp
mov
push
mov
mov
jno
ret
addr16
inc
pop
cmp
stos
cmp
out
xor
pop
pusha
pusha
loopne
leave
lret
and
add
xor
inc
jb
jmp
push
bound
sbb
imul
mov
arpl
imul
inc
adc
inc
xor
imul
mov
cltd
repnz
pop
adc
add
dec
and
cltd
jno
hlt
xor
pushf
les
mov
rcrl
mov
insl
mov
or
inc
imul
dec
push
or
and
inc
inc
cmp
addb
fs
stos
icebp
test
scas
add
movsb
adc
push
add
lods
adc
pop
pop
mov
cmp
or
mov
cwtl
fwait
mov
test
mov
add
test
dec
lahf
nop
xor
rcl
insb
xlat
add
nop
nop
sub
lods
mov
les
or
pop
pop
pop
push
shlb
int3
push
shrb
jne
fcompl
add
add
sub
push
je
pushf
and
mov
subb
dec
xorb
insb
xor
pop
roll
testb
loop
rorb
mov
push
push
xor
test
mov
push
add
lods
adc
pop
mov
mov
lods
inc
pushf
sub
sub
test
push
mov
xchg
jl
push
lcall
in
andl
xchg
dec
enter
test
lds
rcll
icebp
popa
fists
jmp
add
jmp
sub
or
call
sbb
fwait
xor
adc
adc
leave
dec
adc
push
xor
and
mov
lahf
xor
and
jae
sbb
or
jge
jns
and
lods
cli
mov
cmp
jne
push
mov
aad
lock
lcall
sub
mov
xlat
arpl
jmp
push
adc
out
xor
outsl
into
sub
mov
stc
pusha
rolb
fs
sbb
imul
mov
jmp
xor
inc
sub
movsl
addb
push
mov
inc
in
lock
adcl
outsl
and
sarl
aaa
cmp
pop
test
bound
cs
mov
rcrl
mov
add
add
ret
cs
mov
movsl
lret
mov
out
xchg
push
sbb
or
xchg
les
mov
push
pop
lock
inc
shlb
cmpsb
ljmp
mov
adcl
loopne
xchg
mov
loopne
pusha
aaa
sub
js
xlat
daa
pop
aam
lock
test
imul
xchg
pop
gs
in
mov
push
popa
mov
mov
mov
sbb
fsubrl
push
test
add
or
push
popa
or
rclb
cltd
jge
dec
pop
icebp
mov
or
movsb
je
mov
push
loopne
jo
in
pop
shlb
xchg
sbbb
or
ljmp
inc
jno
sub
pop
and
mov
daa
jno
and
aas
sbb
aam
movsb
rorb
dec
push
loop
insl
mov
divw
or
mov
sub
daa
and
xchg
xlat
pop
jns
inc
shll
mov
push
add
push
sub
stos
or
outsb
adc
inc
cmpsl
inc
sub
imul
add
jmp
pop
inc
mov
dec
sub
jno
mov
or
or
push
jle
cli
je
cltd
pop
lret
data16
or
mov
mov
in
inc
add
jns
sub
les
add
addl
dec
fcoml
pusha
adc
cmpsb
pop
cmp
out
fimull
aam
jle
jl
add
aam
bound
jnp
ljmp
adc
cpuid
movsl
mov
fsubrp
inc
or
filds
mov
xchg
push
push
into
sub
adc
push
dec
cli
repz
scas
or
push
jmp
or
pop
push
std
sbb
scas
or
add
jne
mov
jmp
fstpl
ljmp
aam
and
dec
lds
popa
out
lock
rcrl
lds
ja
fnstsw
add
dec
movsl
push
push
movsl
decl
inc
hlt
fstl
dec
fcomp
fnstsw
call
add
inc
clc
pop
fsubr
ret
sti
pop
faddp
andl
sbb
les
push
mov
xchg
jo
cmpsb
push
mov
cs
pop
shl
rol
cmp
dec
xchg
fs
pop
subb
iret
inc
into
adc
and
pushf
add
add
icebp
les
jge
rolb
pop
out
bound
mov
es
or
popf
insl
lods
inc
inc
add
jmp
lret
leave
pop
inc
shl
xor
push
or
or
and
push
mov
add
xchg
dec
bndldx
fmuls
mov
arpl
xchg
out
stos
ss
pushl
dec
jp
stos
cmp
mov
jg
aaa
push
dec
sbb
ret
outsb
test
jl
sub
ja
scas
or
sub
mov
push
mov
pop
popa
or
mov
pop
fnstenv
cld
xor
dec
hlt
jge
and
ret
add
mov
jmp
roll
lock
pop
sub
and
mov
mov
clc
cmp
adc
rorb
pushf
push
dec
jns
dec
leave
xor
mov
test
loope
adc
pop
add
cmp
xor
movsb
aad
adc
sbb
pop
sarl
or
xchg
mov
shrl
into
inc
add
aas
or
add
push
in
jns
mov
mov
movsl
and
jp
outsb
mov
jmp
or
rol
add
bound
mov
jmp
lods
xor
mov
insl
adc
cmp
adc
ja
data16
dec
xchg
and
dec
mov
adc
or
ret
dec
jge
pop
inc
in
xor
jp
popa
imul
decl
inc
adc
mov
mov
mov
push
xchg
pop
int
hlt
add
mov
push
leave
mov
xor
sbb
repnz
pushf
mov
loope
or
add
mov
sub
jle
or
adc
pop
push
sub
xor
fs
mov
adc
lds
or
nop
clc
test
and
addl
or
leave
mov
dec
dec
push
and
dec
pop
stos
xor
xorb
insl
xor
inc
dec
xor
pop
fcoms
rcl
mov
adc
push
shl
sub
pop
aaa
mov
or
loopne
pop
and
shll
add
xchg
je
adc
inc
lea
les
fsubl
ret
sub
jge
dec
or
fldl
dec
sti
mov
mov
bound
pop
mov
xor
ret
push
sub
add
push
mov
dec
adc
cltd
and
insl
bound
arpl
add
dec
add
push
add
lods
cmpsl
lods
lea
sub
pop
xor
dec
dec
mov
in
pop
scas
push
lret
aas
mov
inc
pusha
pushf
rclb
adc
sbb
clc
and
pop
pop
jae
repz
jns
je
pop
and
lock
inc
lock
clc
mov
mov
jge
gs
push
in
push
hlt
lahf
mov
lock
jns
jae
xchg
cmp
loope
sbb
inc
xorb
orl
pushf
lret
add
addl
push
ficoml
sub
jge
pushw
add
ja
jmp
push
sbb
push
xor
outsl
js
add
push
clc
enter
fmul
jecxz
mov
pushf
lret
pop
mov
push
xchg
pop
push
mov
je
and
imul
inc
push
test
push
das
mov
cmp
jnp
sub
sbb
pop
mov
mov
jns
mov
imul
push
inc
xchg
push
pop
add
loopne
incl
rcr
sub
pop
outsl
subb
mov
pop
std
inc
sub
push
inc
mov
push
or
dec
adc
lods
add
inc
js
mov
dec
bound
sbb
mov
repz
pop
das
or
push
cmp
scas
in
xor
loopne
test
dec
pop
dec
push
andl
sbb
int3
dec
lods
add
in
cmp
sub
jne
or
mov
push
mov
rclb
or
loope
stos
js
adc
les
loopne
sbbl
cltd
test
dec
insb
ret
xchg
sti
movsl
rcll
popa
fdivr
cs
add
and
fidivl
adc
mov
push
cmpl
mov
cmpsb
mov
inc
add
mov
xor
iret
test
adc
leave
les
push
jge
mov
scas
push
jae
pop
fs
pop
inc
pop
sub
pop
xlat
xchg
mov
xor
mov
push
dec
adcl
push
cmpsb
mov
and
fs
dec
test
push
lret
test
je
loopne
push
hlt
and
adc
test
xor
inc
sub
mov
jns
or
cmp
ljmp
cmp
call
mov
sub
add
sahf
dec
xor
mov
stc
inc
push
mov
mov
fmuls
xor
mov
or
push
push
dec
or
xchg
xchg
inc
movsl
scas
xor
aas
leave
mov
cmp
push
in
cmp
orb
inc
push
shll
xchg
aas
xor
addb
jne
or
or
loop
mov
outsl
pop
fldenv
add
add
push
sbb
andl
xor
idivb
sbb
arpl
add
test
mov
mov
lret
repz
stc
xor
inc
andb
and
xchg
and
bound
loope
mov
rcrb
js
daa
imul
mov
in
roll
fcoms
pop
fsubr
aam
lods
imul
xor
dec
cmp
fistpl
adc
inc
pop
test
mov
pop
inc
sbb
in
js
in
fnstenv
pop
sbb
jbe
pop
sbb
xorb
xchg
sbb
andb
adc
cmp
jne
lcall
or
sub
test
enter
push
add
inc
add
add
xchg
sub
test
add
adc
xchg
std
rcr
cs
test
outsl
add
add
jp
cmp
sbbb
or
loopne
clc
jl
or
dec
xchg
cltd
xchg
sbb
sbb
subb
loopne
rolb
ret
leave
loopne
fs
xchg
cmovne
sbb
in
push
les
enter
or
or
testl
sti
sbb
aas
loope
sbb
lcall
inc
add
sbb
lahf
sarb
sahf
add
ds
or
mov
in
sahf
and
cmpsl
push
stc
inc
xor
data16
pop
xchg
push
cmpsl
mov
push
push
sub
stc
cmc
xchg
jb
jb
mov
cld
mov
cmp
adc
jmp
sub
push
jg
sub
jmp
or
or
jecxz
je
xor
call
mov
jmp
xor
movsl
push
push
add
push
hlt
jge
inc
lods
adc
mov
push
and
imul
or
cmc
stos
jne
call
loope
scas
xchg
xchg
mov
sbb
fxch
jle
popa
xchg
sub
or
push
and
fdivrl
sbb
jecxz
icebp
sub
shrl
lahf
roll
roll
scas
cvtps2pd
mov
add
jl
add
pusha
inc
and
sarl
das
or
mov
shrb
pop
in
scas
push
cmp
rol
pusha
or
rcr
and
cmp
int3
sub
or
sbb
sbb
sahf
cmp
clc
imul
adc
inc
and
jecxz,pn
stos
jmp
push
dec
sbb
mov
das
mov
xor
mov
inc
and
cli
inc
insb
mov
js
jo
sbb
call
push
push
ret
sbb
push
mov
xor
cwtl
dec
pop
cs
hlt
pop
inc
fcoms
xor
cmp
sub
inc
cli
push
jg
dec
adc
xchg
jne
inc
jno
add
mov
cltd
inc
sub
fld
adc
and
jno
adc
stc
dec
test
imul
dec
pop
lea
xchg
mov
adc
push
jl
inc
rolb
dec
shrb
pop
inc
jmp
pop
cmp
inc
inc
cmp
fbld
aam
mov
insb
loop
xchg
incb
mov
mov
fstpt
and
inc
sbb
xchg
jge
loop
fnstenv
in
fidivs
out
add
and
pop
inc
mov
dec
xor
loopne
pop
xchg
xor
lea
adc
pop
cmp
and
lret
inc
pop
add
outsb
sub
cmp
add
add
cmp
inc
inc
dec
repz
les
pop
pop
sub
and
push
outsl
out
lahf
dec
add
pop
sbb
jbe
add
andl
mov
xchg
fmul
lock
xchg
mov
mov
loopne
add
pusha
out
add
out
or
sbb
les
std
jbe
or
add
lods
mov
and
sarb
dec
or
and
leave
add
ss
cmpb
mov
sbb
adc
jns
js
orl
sbb
out
loop
jmp
cmp
push
jp
inc
adc
push
push
scas
xchg
xlat
xor
in
sbb
add
jge
jb
sbb
or
cmp
leave
xchg
lret
cmp
push
popa
dec
iret
into
sbb
scas
xchg
out
adc
push
nop
sub
xchg
inc
or
or
cmp
cmpsl
cwtl
js
loope
aad
add
push
fistps
sbb
and
dec
xor
jbe
mov
lret
loopne
xlat
jo
mov
inc
clc
inc
popf
test
inc
aaa
adc
sub
dec
pop
mov
push
jle
and
xor
sar
add
cmp
or
cmp
lahf
or
dec
adc
push
clc
push
push
flds
iret
jno
sbb
fcompl
sbb
push
push
inc
mov
adc
adc
inc
mov
shll
push
inc
mov
ja
adc
xor
jbe
pushf
xor
aaa
inc
mov
inc
add
sbb
test
push
dec
mov
xor
pop
lock
lea
xchg
xchg
or
and
lcall
sub
inc
dec
pop
js
and
pop
jl
subb
lret
into
xor
outsl
push
push
dec
fdivr
jo
jo
cmp
pop
push
jns
dec
sub
dec
push
cmpb
punpckhbw
jl
shrl
pop
enterw
xchg
sub
in
jnp
sbb
in
pop
je
push
mov
cmp
enter
gs
loopne
cmp
or
push
xor
xor
or
inc
mov
in
testb
xor
pop
jne
jns
dec
shl
pop
sbb
nop
notb
add
sbb
in
adc
jmp
int
stos
in
loope
mov
outsl
lock
jne
nop
fmuls
into
jl
inc
mov
sub
mov
push
jge
popa
lret
xor
dec
sub
shl
cs
mov
loopne
cmpsb
mov
je
popa
push
sub
push
cmp
mov
sbbl
inc
xor
or
stc
adc
or
sbb
insl
fisubrl
dec
dec
js
add
or
mov
addb
mov
xchg
xchg
cld
adc
je
lahf
inc
loopne
push
aas
add
stos
or
ret
and
sbb
add
dec
mov
dec
mov
push
movsl
dec
xor
dec
adc
rcll
das
inc
add
addr16
add
push
lods
dec
jle
push
mov
mov
jle
daa
mov
adc
push
iret
aas
aad
xchg
leave
out
fdivrp
mov
lahf
adc
pop
mov
test
pushf
out
dec
lret
leave
xor
das
cmpl
movl
iret
push
or
xor
insl
popa
out
xchg
sbb
or
arpl
lods
dec
pusha
shll
adc
inc
add
outsl
shl
enter
or
jbe
loopne
adc
or
aad
mov
push
xor
push
cmp
sub
test
cmp
aas
jne
aam
add
mov
mov
xchg
add
aam
faddl
imul
scas
or
adc
xor
ret
out
or
xor
shlb
aaa
xchg
nop
dec
orb
mov
xor
sbb
and
and
shll
fdiv
je
lock
and
aaa
push
lret
fcomp
dec
jmp
mov
jmp
subb
adc
push
or
push
jmp
cmp
fwait
aad
notl
divl
bound
push
jp
push
sub
or
mov
mov
inc
push
enter
imul
adc
adc
lcall
fsts
loopne
adc
add
ljmp
cmpsb
jl,pt
sub
jmp
mov
das
loop
adc
jmp
or
inc
add
or
loope
push
pusha
in
mov
movsl
xorb
cmp
shlb
nop
cmpsl
rorb
test
mov
cmp
cmpb
sahf
adc
iret
rcr
das
push
and
jmp
jne
aad
data16
jne
mov
mov
ret
jecxz
push
mov
movsl
call
add
xor
jp
mov
pop
dec
scas
in
or
pop
sub
dec
mov
shll
fwait
fs
and
mov
aad
adcb
cmpsl
dec
xor
rorb
or
xor
pop
xchg
lcall
dec
icebp
or
lods
int
or
xor
ss
sti
ss
or
pop
and
idiv
stos
loope
and
add
jp
push
and
and
lea
pop
and
aas
sbbb
sbb
mov
push
jo
insl
add
aas
push
inc
xchg
and
lods
mov
call
lcall
xchg
neg
cmp
adc
mov
xchg
dec
pop
xchg
xchg
add
sub
mov
roll
jp
mov
cmp
aaa
adc
pop
xlat
add
xlat
cmp
push
xchg
xor
stos
loopne
dec
in
inc
mov
mov
pop
or
andl
push
sub
pop
xchg
jmp
mov
push
adc
rorb
sarb
pop
lock
dec
lahf
xchg
mov
in
or
lock
insl
lret
push
jp
or
push
and
inc
popa
jmp
mov
xchg
outsb
inc
pop
lock
jmp
jge
dec
inc
or
add
popa
imul
inc
jle
call
jno
and
insl
sub
stos
insb
popa
into
adc
enter
mov
stc
or
shll
push
jns
jmp
and
adcb
dec
or
sbb
movsl
jg
cmpl
popf
shrb
mov
pop
and
push
imul
pop
add
jl
and
cmpsl
imul
add
leave
add
mov
lret
jb
cmpl
lahf
sub
xchg
repz
jo
and
xorl
ds
icebp
adc
dec
lret
fistps
jmp
inc
lahf
mov
or
xor
stos
add
jg
xchg
cmp
jl
push
push
push
cmp
add
pop
sbb
repnz
arpl
cmp
shll
xor
hlt
lea
cs
stos
cli
fists
push
inc
pop
pop
push
jns
sahf
shll
xchg
rol
dec
in
lahf
add
inc
dec
cltd
jo
mov
hlt
mov
lcall
dec
jnp
or
imul
shrb
or
pop
push
jnp
mov
add
inc
and
pop
push
cmpsl
pushf
push
pop
or
cmp
add
cmp
or
mov
jecxz
xchg
cmp
add
test
mov
inc
mov
mov
rcrl
test
jne
sarl
in
jno
je
jmp
add
nop
push
lret
fsts
mov
xchg
pushf
mov
push
lds
inc
push
pop
lock
aad
mov
and
test
adc
popf
idiv
push
xchg
aas
insl
push
adc
inc
mov
icebp
push
cli
lea
sbb
jp
push
jns
and
mov
or
xlat
cmc
push
inc
adc
mov
push
jle
add
push
mov
fidivl
pop
add
jge
or
mov
repz
or
push
outsl
sub
sbb
lea
jmp
push
pop
xor
add
in
or
add
and
xchg
dec
scas
add
add
add
push
push
pop
leave
and
push
fadds
pop
leave
jae
dec
push
adc
clc
sbb
jne
fsubs
mov
test
mov
cmp
dec
or
push
or
push
sbb
add
push
push
xor
pop
push
sahf
aam
push
and
jb
add
or
cmpsb
pusha
mov
xor
jno
or
in
or
or
sbb
inc
cmpsl
adcl
mov
jg
or
add
push
push
dec
push
cli
push
in
jo
xor
adc
in
jo
sbb
sbb
std
daa
mov
cmpsb
loopne
mov
orb
pop
scas
fs
scas
push
xchg
cmova
idiv
lock
test
shrl
jae
or
aad
add
rcrl
xchg
adc
mov
xchg
lahf
dec
add
inc
or
stos
or
mov
or
loopne
in
jo
test
mov
fs
inc
push
inc
and
arpl
adc
mov
mov
js
jmp
push
and
lods
and
jecxz
fwait
mov
addb
fsubs
dec
and
and
mov
push
sbb
sahf
lock
add
mov
dec
sbb
lods
aad
or
jnp
adc
inc
mov
scas
add
push
inc
push
jecxz
push
mov
bound
inc
dec
ss
xor
pop
sbb
push
add
lods
adc
xchg
movsb
cmp
and
imul
cmp
sbb
jns
dec
lock
and
mov
add
mov
jbe
xchg
in
push
pop
mov
mov
push
or
in
mov
or
pop
jmp
ds
fs
aam
xchg
pop
inc
jo
adc
lret
and
sbb
or
fsubrs
imul
movsl
xor
cmpsl
mov
sub
test
mov
adc
lret
and
ja
push
aaa
adc
xchg
fdivrs
mov
push
push
lret
or
aaa
fistpll
lds
adc
push
shr
dec
ret
out
xchg
out
mov
nop
dec
cld
jbe
fldenv
in
les
hlt
mov
rcrb
insl
mov
fsubs
xchg
push
or
xchg
push
cmp
movb
or
lock
insb
cmp
jecxz
mov
daa
or
push
pusha
mov
out
test
dec
scas
out
add
sbb
jmp
push
cmp
cmp
xor
mov
jno
js
ja
pop
xchg
dec
mov
or
das
or
testb
xor
or
faddl
cltd
or
adc
pop
push
rorl
and
mov
inc
rorl
sub
ret
fiaddl
jne
pop
mov
mov
ljmp
test
mov
aad
mov
push
inc
add
jmp
ja
or
mov
gs
imull
and
int
inc
jo
fstpt
push
popa
outsl
lea
and
push
mov
enter
test
test
inc
add
popa
add
stos
clc
cs
js
mov
adc
inc
ljmp
lods
cmpsb
mov
test
mov
gs
or
and
out
push
mov
mov
add
pop
movsl
in
in
daa
fdivs
push
sahf
mov
push
movzwl
xor
mov
addr16
add
pop
jns
pop
push
movl
fucomip
test
mov
mov
mov
imul
or
ljmp
shl
and
push
or
push
shl
push
in
jg
pop
mov
mov
or
mov
mov
dec
nop
lahf
dec
cmc
mov
dec
cmp
fs
mov
enter
xor
ss
iret
push
mov
lcall
inc
loopne
cmp
aam
ds
add
sbb
adc
data16
push
in
js
pusha
adc
js
sbb
das
sbb
mov
fwait
sarb
les
or
test
pop
repnz
in
aas
and
xchg
push
or
enter
enter
clc
push
add
clc
shlb
xchg
mov
enter
xor
xchg
cmp
sarl
inc
and
cs
add
in
dec
add
push
push
push
call
sbb
movsb
scas
clc
sbb
sarb
cmp
and
mov
mov
and
pop
out
jle
jmp
cmpb
and
adc
inc
or
cs
jg
push
xchg
movsb
mov
mov
dec
dec
ss
mov
mov
mov
and
sub
xchg
pop
mov
clc
adc
jbe
popf
mov
cld
je
ja
push
sbb
mov
inc
cmp
mov
pop
dec
inc
dec
rorl
hlt
mov
hlt
cmp
shlb
mov
es
lea
cli
fcompl
icebp
inc
fadds
hlt
inc
add
loope
xor
sub
rcr
fldenv
dec
mov
insl
dec
call
dec
push
cmp
pop
or
jl
cmp
loop
std
adc
push
mov
dec
je
clc
push
ret
dec
movsl
pop
lock
xchg
pop
cmp
jmp
cmp
push
add
hlt
push
or
xor
shll
push
rorb
and
jecxz
orb
inc
jle
jnp
xchg
jnp
or
js
cld
lods
mov
sbb
push
add
daa
daa
daa
add
daa
pop
or
or
jnp
or
jbe
jmp
or
fwait
fwait
fwait
fwait
por
jmp
adc
pop
adc
fwait
fwait
fwait
fwait
push
adc
dec
adc
dec
adc
fwait
fwait
fwait
fwait
aas
pop
jmp
sbb
xor
jmp
fwait
fwait
fwait
sub
jmp
sbb
and
dec
fwait
fwait
fwait
pop
pop
jmp
and
or
add
adc
test
adc
mov
mov
jne
push
loop
insl
ss
fiaddl
push
add
sahf
out
cwtl
mov
jns
out
enter
sahf
out
sahf
jmp
jns
jns
add
sahf
out
sahf
push
sbb
and
out
xor
ds
dec
call
out
pop
enter
add
and
jmp
or
or
push
movups
adc
adc
push
pop
sbb
sbb
sbb
push
pop
and
and
aad
push
push
push
pushf
movsl
push
nop
leave
cmp
add
bound
add
mov
mov
sub
mov
data16
sbbb
sub
cmp
cmp
pop
mov
les
sarb
call
add
out
push
mov
push
jge
push
add
sub
fdivl
sarl
cmp
jb
inc
xor
cmp
inc
mov
dec
or
xor
jns
adc
out
sbb
scas
adc
pusha
cs
lret
adc
inc
push
xlat
hlt
fdivrl
mov
jge
jbe
cmp
inc
pop
mov
cmpl
shl
xor
xor
inc
jmp
xchg
ss
sbb
add
clc
add
xchg
js
lock
loop
fldenv
mov
xor
mov
lds
test
je,pt
test
rclb
cmp
jae
rcr
sbb
repnz
mov
jge
push
das
mov
pop
mov
adc
sarb
add
mov
jecxz
repnz
or
add
js
and
or
in
xor
pop
lcall
sar
mov
sti
shr
xor
pushf
sarl
repz
xor
add
add
add
jne
jmp
mov
adc
iret
or
insl
push
or
and
not
and
xor
add
add
in
in
push
aam
sub
jge
fsubr
add
or
mov
ror
mov
idiv
jl
fisubl
aam
cli
and
and
mov
sbb
mov
push
rolb
leave
xor
fs
fisubl
repnz
sub
fdiv
mov
push
or
xlat
and
jle
sbbb
xor
lods
xor
imul
fsubr
int3
dec
in
rcl
call
pusha
mov
push
xor
and
push
cmp
dec
xor
ljmp
int
ret
push
xor
add
pop
dec
shll
xor
fdivl
imul
add
xor
in
aam
bound
in
jns
mov
adc
sbb
adc
add
adc
mov
pop
cmp
aaa
fadd
xor
call
rclb
call
nop
loopne
lahf
cmp
xchg
cmpsb
imul
cmp
dec
mov
pop
aaa
mov
or
cmp
jae
add
cmpsb
xor
pusha
pop
or
and
call
mov
imul
and
xor
add
inc
adc
addl
pop
inc
in
insb
fwait
jge
push
ret
push
jo
ficoms
or
les
pushf
addr16
call
cmp
add
xor
js
inc
jne
mov
ucomiss
dec
fadds
pop
fs
xor
scas
leave
js
call
mov
lret
push
clc
jl
push
and
add
movsb
jmp
imul
add
in
in
or
rol
aas
int3
inc
aam
xchg
fcmovbe
or
sbbb
inc
sub
mov
adc
cmp
sub
shll
in
in
fstps
shl
rolb
add
adcl
sub
push
xor
inc
adc
dec
rorb
adc
dec
loopne
adc
ror
enter
sbb
adc
stos
imul
in
inc
push
xor
dec
int3
dec
xorb
push
dec
xor
shlb
js
in
push
pop
mov
xor
scas
push
mov
aam
lcall
pop
xchg
inc
mov
pop
add
ficoms
add
or
rorb
inc
pop
cs
push
cmp
pop
pop
movsb
cltd
add
inc
pusha
inc
leave
in
loopne
jl
or
sbb
xor
add
fs
xor
adc
fs
dec
xchg
xchg
dec
rorl
stc
stc
pop
loope
lahf
stc
mov
int3
pop
push
in
adc
mov
jb
push
adc
fmuls
adc
xor
fcoml
fisubl
mov
call
and
and
loope
cmpsl
push
mov
aaa
es
push
dec
pop
out
pop
inc
xor
cld
add
sub
mov
fadds
add
inc
loopne
lret
jb
loope
xchg
cli
cld
lea
mov
pop
cld
sub
ret
add
xor
pop
pop
stos
fcoms
ljmp
outsl
ss
mov
xor
or
rol
adc
add
rcr
jne
cs
push
add
test
test
stos
or
sub
loopne
ret
aas
lea
jmp
jg
mov
sub
out
cs
or
jecxz
lret
add
mov
jne
pop
jbe
add
inc
dec
sti
adc
dec
jl
sub
push
enter
mov
adc
clc
aaa
jbe
or
mov
in
adc
dec
or
sub
jae
push
pop
rolb
mov
fsubrs
rep
fimuls
mov
sbb
lret
fs
pop
fdivp
ror
orb
std
mov
hlt
push
shr
xchg
pop
sbb
mov
and
rol
mov
pop
push
mov
movb
dec
js
pop
and
add
movl
jl
pushf
mov
cmp
pop
jo
popa
jbe
fdivrl
leave
mov
cmp
les
shlb
lock
rorb
fwait
sbb
and
andps
add
mov
inc
pop
jle
ja
lea
imul
cmp
ja
sub
fmull
sub
stos
mov
andl
and
or
adc
or
test
in
enter
adc
sbb
xchg
jbe
and
orl
test
test
shll
add
and
mov
push
and
test
adc
icebp
pop
pop
sbb
mov
adc
push
xchg
mov
jno
inc
pop
stos
xchg
icebp
mov
arpl
je
cmc
out
or
movl
pop
sub
and
pop
jge
mov
adc
adc
push
add
mov
xor
dec
imul
add
sbb
push
dec
jb
xchg
sbb
lret
push
sbb
out
fists
ljmp
mov
inc
inc
mov
mov
inc
sbb
adc
xor
or
add
sbb
add
ret
dec
ja
loopne
jge
lods
ljmp
xor
movl
pop
xor
push
sub
add
push
xchg
and
inc
addb
xor
pop
or
pusha
sbb
or
sbb
dec
inc
mov
adc
fidivrl
inc
cmp
jl
nop
sub
sbb
sub
test
sub
pop
mov
cmp
add
out
pop
add
cli
es
lea
cmp
xchg
mov
test
jg
and
or
js
insl
orb
jl
or
call
inc
inc
push
aad
or
int3
mov
mov
or
or
sti
dec
cmp
jl
dec
dec
sahf
cmp
push
js
test
xchg
dec
sti
jmp
and
xchg
nop
pusha
dec
in
imul
mov
test
and
movzbl
lods
lods
or
adc
mov
and
adc
adc
adc
out
mov
or
push
aam
push
sub
fcomps
inc
sbb
add
mov
push
cmp
sbb
les
and
mov
mov
sbb
mov
lods
rcrl
inc
ret
imul
into
loopne
sub
ljmp
and
mov
stos
dec
and
ret
adc
insb
and
mov
pop
or
add
mov
mov
or
add
pop
dec
pusha
pop
inc
mov
add
xchg
xchg
jp
adc
push
mov
push
adc
sub
inc
push
fbld
xchg
mov
int3
test
dec
sti
bound
push
or
jle
rorb
dec
sbb
pop
and
test
adc
cmp
and
xchg
push
or
add
fmuls
and
add
push
out
nop
lock
and
mov
push
sub
scas
add
mov
cmpsl
and
inc
ss
or
ficompl
xchg
mov
add
rcll
nop
imul
fistl
ret
popa
and
out
fstpt
enter
sbb
xchg
sub
ljmp
sbb
mov
pop
ja
lods
adc
push
iret
test
adc
push
jmp
push
adc
filds
test
jle
or
enter
jae
pop
pop
mov
and
loopne
loopne
jecxz
inc
js
sub
je
rol
gs
in
mov
pop
mull
pushf
insl
cwtl
fcomps
leave
call
fistpl
fcomps
jne
push
sbb
and
xchg
ss
mov
ret
ret
ficomps
fwait
add
in
dec
inc
push
mov
sbb
sub
sub
or
dec
ret
inc
push
push
ds
mov
add
aam
mov
popa
enter
in
mov
dec
cmp
lock
xchg
or
repz
adc
int
int3
jo
add
jae
je
inc
call
aam
adc
lea
and
repz
and
jns
and
cmp
push
cmp
xor
pop
and
mov
xor
lods
mov
dec
andl
cmp
cli
push
xchg
sub
loopne
adc
fwait
ret
loope
push
aam
jbe
rdpmc
mov
and
jnp
pop
dec
sbbb
push
or
sbb
adc
jmp
inc
mov
icebp
inc
insl
cwtl
mov
imul
xor
pop
lds
pop
sub
jb
push
movsl
xor
add
adc
es
and
popf
jmp
add
xor
sub
push
cmp
and
rclb
dec
jl
mov
fildl
cmc
add
mov
add
mov
in
dec
push
sub
or
cmp
lcall
inc
pop
inc
pop
ret
movsb
inc
inc
rorl
int
and
pusha
cmp
stc
push
or
cmpsb
test
ret
xchg
jns
mov
loopne
iret
xor
dec
xchg
push
xor
fnstenv
das
inc
push
les
imul
sbb
sub
and
cmpsb
push
sub
cltd
jae
lods
xchg
pop
push
cltd
icebp
loope
and
sub
sbb
dec
arpl
inc
mov
lds
inc
xchg
sub
or
inc
iretw
leave
add
push
and
push
pop
lock
in
xchg
aam
cmp
dec
clc
cmpsb
jmp
hlt
je
inc
mov
data16
lret
xor
and
push
mov
or
xor
lahf
sub
mov
sbb
jno
ss
push
push
jp
notb
and
bound
pop
stos
jmp
ljmp
in
add
mov
sub
adc
jo
mov
lods
add
scas
dec
sbb
pushl
ss
ja
cmp
aad
adc
pop
jnp
sub
dec
inc
loope
stos
sub
push
jo
adc
rcrl
xchg
sub
push
je
mov
call
loop
lret
test
movb
pop
or
and
push
lcall
stc
xchg
inc
pusha
sub
jle
and
ds
je
rorl
mov
xchg
orl
push
adcl
mov
pop
cld
and
pop
into
icebp
mov
push
push
shrb
add
dec
sub
mov
sbb
jne
xor
push
dec
imul
xor
test
push
ficompl
sub
and
xor
or
jo
mov
ss
sarb
dec
pop
mov
xchg
xchg
push
dec
push
cmc
push
out
push
lds
rorb
push
or
out
xchg
and
and
xchg
data16
inc
jg
mov
xor
cmp
mov
fsubrs
cmp
inc
xchg
das
and
scas
fidivs
test
or
xor
das
and
lea
jb
add
mov
mov
and
or
inc
hlt
and
sbb
xchg
outsb
lcall
sbb
andl
adc
arpl
in
push
in
cld
xchg
in
repz
sbb
pop
add
pop
jmp
fnstenv
fistpl
xor
jb
jne
inc
add
sbb
push
cltd
or
je
in
mul
dec
mov
out
sbb
or
jle
push
cmp
sbb
or
mov
mov
ret
arpl
or
jne
pop
or
mov
xchg
lds
adc
mov
or
test
adc
repnz
jg
add
popf
out
jo
cmp
mov
pop
adc
adc
push
jno
out
cs
dec
dec
sbb
int
cmp
add
jbe
call
mov
xor
mov
mov
ror
dec
push
inc
cmp
cmc
shlb
or
rol
jbe
nop
push
inc
xor
sbb
adc
addr16
and
imul
lods
ds
movsb
and
ret
pop
std
xchg
and
cmpb
mov
or
mov
pop
pop
pop
fcomps
fsubrp
inc
fstpl
ret
sbb
bound
or
sub
scas
add
adc
leave
dec
adc
xor
fiadds
adc
push
push
or
mov
cmp
push
adc
mov
xchg
mov
pop
mov
xchg
repnz
ret
push
xchg
pop
push
adc
stc
mov
add
push
xchg
xor
movzbl
popa
mov
or
or
call
repnz
push
cmp
lock
test
mov
int3
xor
add
ss
aam
andb
adc
push
xor
jg,pn
push
hlt
mov
lea
daa
stos
je
cmp
sar
push
adc
sub
push
cmp
jge
mov
xchg
adc
inc
insb
lock
cmp
popf
ficoml
mov
mov
lock
dec
shlb
mov
hlt
clc
clc
cld
test
xorb
mov
cs
add
add
lcall
push
and
aaa
add
test
je
add
sar
pushl
adc
cmp
dec
or
mov
shr
sbb
cld
aas
mov
mov
or
mov
sub
mov
add
adc
dec
or
pop
mov
sahf
add
mov
sub
mov
adc
je
dec
je
push
add
loop
and
aas
sarl
dec
mov
add
dec
movsl
out
lret
sub
testb
mov
test
mov
push
cld
je
cmp
jne
sbb
adc
mov
pushf
cmp
rcrb
roll
xor
add
xor
and
mov
sbb
bound
lret
idiv
inc
inc
imul
and
jb
pop
cld
mov
addb
lahf
dec
rol
pop
je
mov
add
or
stos
subb
cmp
mov
stc
push
or
mov
adc
push
push
sahf
cli
push
lock
dec
add
enter
repnz
jbe
inc
test
jmp
daa
pop
jmp
pop
cmp
adcb
loop
mov
push
mov
test
xchg
imul
jae
repnz
mov
mov
sub
pop
jo
inc
sub
in
nop
xchg
adc
cmp
je
cmp
push
es
outsl
push
cmp
jne
inc
jne
loopne
push
or
and
pop
dec
or
or
es
add
fimull
aas
leave
cmp
jne
add
xchg
pop
sub
sbb
test
dec
ret
or
sub
sbb
sub
addb
fcomps
or
mov
call
fsubrs
xor
cmp
mov
jmp
and
fwait
dec
sub
jmp
inc
jl
inc
jg
call
iret
add
shl
dec
mov
sub
and
and
mov
mov
cmp
fadd
jg
jbe
int
imul
and
inc
sbb
xchg
rcrl
inc
pop
adc
pusha
aad
mov
out
mov
mov
sbb
xlat
dec
add
push
xchg
mov
fsubs
fistpll
mov
jg
pop
sarb
jle
imul
mov
adcb
inc
lods
aaa
jecxz
mov
insb
cmpb
orb
and
inc
xor
fnstenv
sub
add
mov
jge
xchg
mov
pop
das
movsb
xor
sub
inc
cmpb
mov
out
pop
call
add
cmp
in
inc
inc
push
icebp
les
push
out
jmp
xor
dec
sahf
dec
bound
sbb
andb
loopne
add
xor
or
in
pop
shrb
cld
cmp
cmp
mov
ret
sub
lds
loop
je
and
cmpsb
syscall
test
ret
clc
insl
dec
fstpl
loope
and
mov
scas
aam
clc
ficompl
jg
or
into
hlt
add
jne
mov
lock
imul
or
inc
mov
jnp
lcall
adc
cmp
jne
into
sub
or
xchg
sahf
shll
mov
addb
adc
aad
add
out
dec
xchg
cmp
xchg
js
and
mov
jne
mov
cwtl
add
dec
mov
mov
hlt
mov
cli
mov
orb
sub
jle
je
outsl
testl
adc
sub
je
and
js
add
lock
push
add
and
mov
movsl
inc
or
inc
inc
loopne
xor
inc
loop
or
add
dec
sti
sub
insl
fsubl
shlb
or
or
cli
fs
ljmp
mov
cmpb
icebp
jmp
push
rolb
mov
add
xchg
fstl
mov
ss
mov
sbb
shll
mov
xor
dec
jle
ret
mov
adc
xor
mov
call
xlat
xchg
ret
dec
adc
mov
dec
push
movb
xchg
cmp
mov
mov
add
cmp
incl
cmp
pop
loopne
aam
cmp
lods
es
cmp
push
adc
inc
sbb
or
mov
mov
sub
ficompl
cmp
jb
pop
roll
inc
out
mov
out
cmp
outsb
mov
pusha
add
xor
shrl
mov
or
enter
dec
imul
sbb
xchg
outsl
mov
sub
or
movb
in
ss
jmp
jmp
pop
repnz
pop
mov
xor
jns
orb
pop
jne
leave
or
mov
pop
imul
test
aaa
sbb
jne,pt
jo
lods
fnstcw
ja
mov
and
lea
adc
xor
mov
and
dec
push
adc
pop
out
xor
aam
cmpsl
sbb
test
push
pop
jb
shlb
sbb
daa
mov
leave
sub
inc
add
adc
mov
jecxz
lock
in
sahf
xchg
mov
int3
pop
repnz
xchg
adcb
sbb
rcrl
add
pop
adc
push
das
push
addb
shll
shll
outsb
or
mov
stos
mov
mov
dec
sbb
cmp
dec
and
int3
fsubs
in
mov
movsl
pop
push
push
inc
test
adc
mov
pusha
data16
ret
popf
inc
int
sbb
insb
je,pt
inc
jl
pop
add
fsubrl
scas
jmp
clc
add
cmpl
test
rcrl
push
movsb
push
cmp
inc
cmp
or
in
mov
push
in
lock
inc
shlb
addb
adc
adc
mov
jno
add
mov
sbb
roll
or
movsbl
ret
push
xor
jno
jmp
xchg
pop
dec
sbb
cmp
or
popa
mov
nop
sbbb
sub
ljmp
inc
jb
loop
jo
inc
xlat
inc
push
sub
addr16
shl
sbb
or
aam
xor
or
xorl
push
sbb
int3
mov
cmp
jmp
aam
push
adc
leave
sub
mov
lret
sub
fsubrs
fistl
or
add
xor
lea
lcall
clc
xor
cmp
out
jmp
add
xlat
aas
push
dec
call
push
jbe
rcrb
mov
fnstenv
sbb
xchg
test
push
push
jo
mov
or
cmp
lret
movb
hlt
cmp
movl
mov
xchg
sbb
lock
cltd
inc
ljmp
gs
push
mov
jecxz
fdivs
and
add
and
inc
je
dec
adc
push
out
inc
addr16
loope
insl
jne
rclb
cld
call
pop
or
cmp
lret
mov
cli
jb
mov
inc
push
scas
push
inc
addl
mov
hlt
mov
pop
fdivl
dec
sbb
in
dec
fwait
jo
pusha
js
inc
add
cltd
mov
push
mov
push
mov
push
jecxz
arpl
mov
push
fildll
or
out
jo
movsb
cmp
je
and
xchg
mov
movsb
or
push
neg
or
pusha
inc
lds
pusha
sub
in
in
or
add
or
push
xor
iret
test
cmp
in
aaa
movl
mov
mov
inc
sub
dec
pop
xchg
das
rcr
movsl
cmp
jmp
cmp
jne
adc
dec
add
add
push
bound
sub
xor
xor
xor
pop
leave
add
andb
xchg
data16
iret
mov
je
std
leave
mov
into
je
mov
enter
aas
sbb
enter
pop
xor
dec
icebp
pop
sub
sbb
push
jmp
sbb
rorb
xchg
enter
in
shl
adc
movsl
lcall
stos
push
or
dec
pop
fdiv
xor
jb
in
jmp
call
mov
nop
in
jnp
ret
addr16
mov
xchg
mov
xchg
js
jle
dec
inc
aaa
cs
cmc
in
sbb
aaa
sbb
push
cmc
jno
or
cmp
adcl
fists
dec
movsl
ljmp
push
add
pop
je
push
dec
mov
jecxz
sbb
and
add
lods
in
dec
pop
loope
dec
jecxz
insl
je
pop
mov
gs
push
js
xchg
sub
cmp
push
shrb
dec
xor
sub
daa
scas
lea
dec
push
mov
mov
sbb
xor
pop
nop
cmpsl
add
pusha
lock
push
push
sahf
mov
sub
sub
mov
mov
insb
push
fmuls
cmp
xchg
add
pop
xchg
jmp
cs
loop
pop
add
or
in
fs
je
movsl
imul
int
push
out
mov
test
xchg
addb
and
push
xlat
or
nop
pop
popf
cwtl
lock
or
jmp
int
push
dec
pusha
cmp
test
push
mov
add
movl
movsl
stc
inc
or
push
or
movl
add
dec
inc
inc
sub
sbbl
in
add
mov
fwait
or
or
add
xchg
mov
lock
ss
sarb
inc
xor
mov
add
in
fdivrl
imull
cmpb
sub
sbb
push
shl
fistpl
or
in
andl
xchg
add
imul
jnp
sub
push
mov
sbb
sub
push
fadds
dec
pop
fwait
sbb
js
or
sub
push
push
inc
or
mov
or
rorl
out
js
and
pop
and
mov
dec
push
xor
out
dec
push
mov
inc
lcall
clc
lods
gs
push
aas
in
jmp
jle
adc
inc
add
xor
or
jg
sub
shlb
jb
inc
mov
sub
sub
clc
mov
xor
jmp
mov
dec
pop
mov
loopne
and
pop
mov
cmp
add
test
es
xchg
fs
jo
inc
jnp
xor
cmpsb
cmp
les
cmpsl
jge
dec
pop
push
ret
outsl
mov
xor
or
cmp
jecxz
pusha
cmp
dec
dec
les
daa
pushf
and
loope
or
cmp
sbb
fsubrs
mov
adc
xchg
mov
repnz
test
fistpl
cmp
sbb
inc
orb
pusha
add
inc
adc
notb
push
or
popf
xchg
adc
add
inc
sbb
ss
out
out
push
xor
adc
pusha
je
adc
sbb
or
decb
daa
sub
dec
push
mov
movl
pop
jo
add
sti
or
or
aaa
cmp
repz
sub
insb
insl
and
lods
jne
ret
dec
mov
pop
rcll
and
outsb
loop
adc
iret
fwait
xchg
pop
test
adc
inc
or
dec
leave
cmp
push
jge
lods
sbb
popf
subl
sub
sub
in
adc
ja
add
push
and
adc
popf
mov
xchg
dec
adc
add
lock
mov
ret
mov
fisttpll
mov
jg
dec
inc
mov
cmp
push
out
push
dec
pop
and
addl
movsl
addr16
lea
push
and
ret
jne
cmp
lds
mov
push
pop
daa
sub
pop
push
sahf
pop
shrl
lods
mov
adc
adc
cmp
ljmp
push
or
lock
pmullw
ds
jge
push
adc
dec
or
cmp
push
jmp
lea
adc
jmp
xchg
push
xor
pop
dec
sbb
xor
adc
mov
fisubl
dec
fcoms
inc
jne
in
add
andb
add
dec
add
and
test
or
in
insl
popa
and
and
jle
cmp
and
adc
loopne
mov
js
add
push
sbb
sub
addb
loopne
call
add
adc
inc
inc
adc
inc
add
mov
or
icebp
aas
mov
cld
or
lock
jmp
jne
repz
mov
out
push
xchg
xchg
xchg
push
pop
inc
add
adc
xchg
jl
addr16
in
jae
cmp
pop
xor
fisttpl
xchg
andl
flds
js
sub
fcoml
push
and
adc
pop
add
ret
gs
mov
xchg
push
pop
or
ret
rolb
call
or
and
cwtl
shl
mov
out
loopne
adc
ljmp
loop
sarl
aaa
or
shr
add
leave
data16
imul
and
dec
sbb
or
mov
in
inc
add
fistpll
adc
pop
push
inc
mov
mov
pop
pusha
inc
pop
aaa
xlat
sub
jle
in
jecxz
sbb
pop
dec
or
jge
popa
imul
loopne
outsl
inc
add
in
jae
lea
cld
std
ficompl
xchg
pushf
push
pop
es
pop
scas
cmpsb
xor
pop
push
shrl
mov
and
sub
xchg
fsubrs
mov
mov
adc
ja
adc
and
or
lds
insl
in
xorb
xchg
pop
pop
push
sub
cmp
lea
mov
xchg
or
adc
add
add
loopne
cmp
insl
loopne
sub
mov
fadd
pop
mov
insb
pop
mov
mov
popf
mov
add
dec
lcall
sbb
xor
mov
test
aad
push
mov
sub
inc
cli
xchg
or
sbb
cmp
dec
scas
inc
xchg
dec
mov
pop
adc
or
int3
inc
fidivs
or
popf
fs
repz
rol
and
jmp
iret
loopne
or
je
sub
jl
aas
xor
leave
rclb
cld
push
lea
xchg
das
sub
aaa
push
inc
ret
or
cmp
dec
or
lds
add
and
aas
clc
xor
add
add
pop
fcomps
mov
in
call
add
adc
push
inc
jmp
or
jl
sar
in
gs
adc
sub
and
dec
fcmovnbe
cs
clc
imull
push
loopne
cmp
cmp
xchg
adc
dec
outsb
xor
clc
dec
or
cld
pop
jae
ret
mov
inc
push
mov
mov
sbb
add
cmp
das
sub
frstor
cmpsb
out
jb
loopne
xchg
inc
push
inc
push
add
pop
jae
int
add
xchg
les
pop
test
cmp
inc
adc
ds
add
sar
xor
jb
out
sub
add
in
push
xchg
out
push
push
mov
sbb
int
int3
mov
jle
and
mov
cmc
jg
imul
xchg
ret
mov
mov
cmp
lock
into
lret
mov
mov
cmp
ret
push
xlat
pop
and
stos
cmpsl
inc
mov
xchg
push
pusha
mov
popa
dec
xor
loopne
push
adc
in
mov
inc
mov
mov
or
fs
in
sub
in
lods
mov
and
add
add
lds
mov
sarb
cmp
jbe
push
popf
in
add
push
jb
jmp
das
js
and
or
pop
push
movl
ficoms
rcrb
mov
nop
and
or
mov
and
lock
add
and
xor
adc
stos
into
inc
cli
and
aam
in
add
loopne,pt
data16
push
outsb
dec
insb
xchg
or
fneni(8087
lahf
sahf
push
cmp
or
dec
jo
add
jne
mov
ja
dec
adc
mov
sbb
scas
lods
divl
loop
sub
inc
jo
ljmp
add
sub
sub
push
push
mov
push
aas
push
movl
dec
je
mov
dec
add
mov
pop
gs
xor
test
mov
sub
popa
add
cmpsb
dec
fmull
pop
ja
shll
mov
sbb
add
fnstenv
push
mov
out
mov
cmpsb
cmc
cwtl
push
lret
jne
mov
in
xchg
sub
cmp
dec
cmp
inc
push
xor
pop
div
adc
stos
hlt
add
lea
sub
pop
mov
inc
or
xchg
jmp
lods
push
dec
xor
adc
inc
jne
ret
xor
push
adc
xor
dec
add
push
adc
cmp
dec
adc
and
imul
call
pusha
xchg
xchg
xchg
out
mov
dec
sbb
sub
jo
gs
and
in
mov
shr
mov
imul
sarb
jne
or
add
jb
push
fwait
lea
je
outsl
jmp
mov
sub
jo
shlb
adc
sub
or
fidivl
bound
add
or
adc
pop
mov
lret
fidivrl
mov
int3
add
add
nop
mov
imul
or
sarb
test
xchg
call
mov
add
xor
fsts
mov
or
rorl
jmp
dec
mull
cmpsb
loopne
add
or
push
out
fildll
je
rep
mov
dec
ljmp
ret
or
jb
hlt
sub
lds
call
push
lahf
call
je
and
rcrl
or
and
dec
jne
sub
stc
lods
sbb
es
xor
inc
adc
hlt
sarb
or
add
mov
jle
fldl
cwtl
scas
pop
push
pop
and
sbbb
lods
loop
mov
cmp
and
clc
sti
mov
cmc
jg
fs
pusha
jmp
movq
jnp
cld
movapd
push
clc
jae
pop
outsb
fcmovnbe
xor
jle
xor
cli
rcl
lret
fs
adc
or
and
lret
or
jg
ljmp
adc
jnp
mov
mov
ficomps
aam
ret
or
adc
pop
lock
call
add
fadd
roll
jbe
and
shl
mov
shl
pop
enter
push
push
inc
pop
push
pusha
sbb
out
cmp
dec
sbb
pop
jo
pop
test
sar
in
mov
orb
xchg
mov
mov
rolb
pop
add
sti
std
or
add
xorl
test
mov
or
or
int3
jmp
dec
mov
sub
ret
adc
pusha
lcall
mov
sbb
hlt
fldenv
mov
push
pop
mov
dec
aad
dec
and
push
pop
inc
dec
pusha
outsl
loope
sbb
popa
inc
pusha
mov
sub
mov
jmp
push
or
mov
mov
push
sub
add
idiv
ja
mov
cmp
mov
push
in
je
cmp
jne
inc
cmpb
out
orb
shlb
or
adc
add
xchg
or
sub
or
mov
aaa
insb
ret
daa
mov
shr
dec
pop
imul
push
push
push
sbb
adc
mov
rcrb
ljmp
je
movb
mov
js
pop
notrack
xor
pop
push
push
xor
dec
dec
sbb
sbb
adc
xlat
cwtl
cmp
or
mov
adc
and
clc
add
test
popf
push
lea
cmpb
or
xor
ss
xlat
cld
sub
dec
addl
outsb
loop
daa
mov
mov
push
sbb
movb
pushf
js
sbb
pushf
pop
addr16
sbb
sbb
sbb
push
mov
mull
push
cmpsb
enter
movsl
pop
inc
sub
movl
mov
dec
dec
inc
xchg
push
fisubs
pop
mov
dec
adc
sbb
sub
dec
add
lds
imull
dec
inc
testb
or
jnp
sub
or
call
fsubs
popf
or
or
jmp
pop
loope
push
adc
ja
and
xor
lock
adc
in
or
ret
cmp
inc
lock
arpl
mov
sub
cmp
int3
je
jl
pop
sbb
out
sub
je
push
xchg
orb
adc
mov
inc
sub
fdivrl
bound
or
popa
pop
ja
scas
xchg
outsb
mov
dec
shlb
and
add
data16
data16
dec
test
add
adc
pop
inc
je
pop
sbb
mov
jle
or
enter
and
testb
movsb
adc
lock
shlb
jns
adc
jl
mov
xchg
pop
rcrl
push
jmp
xor
loop
icebp
xor
test
push
rcl
add
pop
lret
xchg
shrl
rcr
or
jmp
add
iret
cwtl
mov
rorl
pop
inc
inc
add
sbb
sar
or
cld
dec
jne
insl
cmp
sbb
jmp
ret
adc
outsb
jne
out
jmp
add
ljmp
hlt
testb
je
inc
mov
cmp
mov
leave
es
loope
or
cmp
jne
dec
jmp
inc
lods
dec
js
ss
xor
lret
jne
inc
aaa
push
lds
daa
push
mov
sbb
es
push
outsl
jno
mov
roll
push
or
inc
dec
push
rolb
test
pushf
stos
inc
xchg
dec
sub
stos
jge
dec
push
roll
cmp
add
adc
fsub
mov
stc
xor
pop
and
daa
outsb
push
add
pop
pop
jne
ret
clc
ficoml
pop
adc
add
stc
or
rep
jmp
xchg
jmp
mov
mov
add
test
lea
addr16
sahf
fcomi
push
test
adc
inc
push
and
cld
pop
lcall
add
add
imul
dec
push
dec
add
nop
into
enter
nop
inc
adcb
inc
xchg
mov
neg
out
aam
int3
push
les
lods
movsb
mov
mov
call
call
hlt
cmp
repz
clc
clc
cld
lock
jo
out
add
lock
repz
jmp
or
or
lock
nop
inc
sbb
pop
sti
and
mov
pusha
and
lea
add
cmp
pop
and
std
cld
mov
mov
fsts
xchg
mov
addr16
cmp
in
pop
nop
mov
fiaddl
jl
lret
fisubs
add
sahf
inc
push
out
push
add
xchg
push
mov
push
out
fs
faddp
dec
push
mov
or
push
push
loop
cmp
pop
pusha
push
cmp
repz
sbb
sbb
adc
repz
adc
adc
or
repz
add
adc
pushf
or
ficoms
add
push
add
sub
daa
ja
pushf
adc
lods
inc
mov
mov
pop
cmovb
xchg
js
loopne
fistpll
adc
push
bswap
add
mov
add
dec
lahf
call
pop
inc
lods
push
jae
mov
inc
imul
pusha
or
subl
leave
les
pop
inc
jae
adc
popf
mov
adc
repz
push
pop
and
rclb
add
cmp
inc
jp
sub
sbb
adc
sbb
sbb
ror
add
add
rcrb
sbb
loop
mov
mov
sub
mov
or
push
daa
fwait
pop
push
test
sbb
dec
or
sarb
pop
inc
xor
xor
inc
push
pop
xor
cmp
dec
mov
orb
sbbl
enter
xor
or
pop
xor
stos
or
ret
and
mov
push
inc
and
cs
pop
mov
mov
and
dec
xor
or
mov
jecxz
mov
cmp
xchg
js
loope
cmp
jle
or
sbb
fistl
cld
popa
mov
dec
push
jbe
sub
inc
inc
mov
pop
cmp
pushf
mov
cmp
into
lea
cmp
jl
jmp
sub
in
mov
jne
push
adc
or
mov
mov
jne
pop
cmpsb
push
adc
sbb
add
pop
clc
mov
mov
mov
into
adc
ds
or
pusha
push
cmp
insb
and
add
push
es
jne
insl
clc
dec
addr16
lods
adc
pop
sbb
stos
loopne
cli
inc
int
or
mov
push
inc
pop
ljmp
add
sbb
cmpl
dec
faddl
cmp
call
test
sti
sbb
movsb
push
pop
scas
pop
and
js
in
ljmp
pop
push
loope
xor
ja
pop
fucom
or
add
inc
pop
stc
jle
mov
dec
or
cld
add
lret
fisubs
xchg
xchg
aaa
pop
add
sub
inc
les
mov
cmpsb
outsl
sub
add
addb
bound
orb
test
in
das
adc
jne
pop
push
or
jmp
repz
leave
imul
sbb
fsubl
or
cltd
or
push
pop
and
out
or
add
fucom
sub
sbb
insl
or
sbbl
inc
shrl
pushf
std
xor
pusha
push
push
or
add
roll
jo
js
sub
pop
aaa
push
ljmp
and
sub
jmp
loopne
mov
inc
insl
imul
fsubrl
repz
inc
js
or
pop
pop
pop
not
mov
xor
fs
mov
pop
pop
gs
or
push
inc
mov
add
mov
nop
shl
inc
fcmovb
insl
rcr
addl
clc
shrb
push
ja
cwtl
dec
fidivrs
jbe
lea
adc
sbb
jp
mov
xchg
add
pop
leave
and
pusha
ss
dec
add
push
clc
jbe
add
push
or
and
insb
out
jb
ret
mov
add
popa
aaa
add
add
push
in
cmp
adc
jmp
scas
adcb
test
jne
test
cmp
xorl
ja
sub
jbe
divb
negl
scas
mov
pushf
pusha
push
add
ss
ret
lret
hlt
negl
sbb
mov
in
rcrb
mov
cmp
mov
orb
mov
ds
sub
adc
popa
pop
popa
and
push
shlb
hlt
sbb
lods
int3
je
push
and
push
addb
insl
adc
add
inc
sub
sbb
add
outsb
xor
testb
push
or
rolb
repz
sbb
test
shl
adc
sub
push
sbb
clc
or
lods
cmp
pop
add
add
cmpb
mov
pusha
sbb
int
jge
push
cltd
rclb
or
rcrl
jns
aaa
adc
sbb
and
sbb
je
mov
repnz
cs
add
andb
jle
daa
dec
jne
jmp
push
or
or
pop
adc
mov
dec
es
jne
mov
xorl
or
sbb
sbb
pop
xor
enter
lods
aad
lds
sub
mov
aaa
js
cmp
jno
arpl
rorb
mov
outsb
into
push
or
fdivrl
push
cld
jne
mov
push
cmp
jne
cmp
int
es
jne
call
jne,pt
int
or
lcall
incl
dec
or
sub
repz
jmp
std
push
xor
cld
cld
jmp
fldt
std
lahf
in
adc
adc
inc
inc
inc
inc
out
rolb
or
push
adc
sbb
adc
mov
lret
xchg
dec
mov
push
push
push
sub
ret
sub
dec
and
mov
or
push
loopne
dec
mov
arpl
lea
or
add
adc
add
xlat
outsb
and
adc
mov
or
xchg
xchg
or
or
and
movsb
pop
pop
pop
pop
orl
adc
pop
ffree
fs
lods
xchg
fisubl
fmulp
in
shll
add
xlat
push
mov
pop
add
dec
addr16
sbb
cli
out
xor
pop
jg
add
mov
into
sub
test
xchg
pop
subl
call
push
push
push
jmp
jp
xchg
ja
jae
out
ljmp
inc
fadd
getsec
dec
add
lea
and
cmc
dec
push
ja
or
and
mov
popf
and
jmp
loopne
inc
das
pop
addb
sub
pop
and
or
pop
pop
outsb
loopne
aaa
int3
sub
insb
sbb
jb
shlb
mov
mov
gs
lret
inc
jno
test
xchg
mov
pop
inc
mov
push
rolb
shlb
xor
and
jge
test
int
ljmp
in
hlt
mov
adc
fsubrs
stc
push
xchg
lret
es
pop
xchg
xor
ljmp
or
adc
or
add
push
xor
pop
aam
je
add
sbb
sti
fildll
add
not
and
sub
add
or
sbb
mov
cmp
xchg
lock
sbb
lock
adc
daa
push
add
add
lock
xchg
sub
jne
pop
add
ja
xor
mov
jne
pop
mov
ljmp
inc
or
pop
lret
cmp
ja
mov
inc
je
mov
lea
in
mov
mov
lcall
ret
add
xor
adc
push
and
roll
scas
mov
pop
add
mov
aaa
cmp
mov
inc
cmp
jb
add
cmp
inc
fwait
push
int3
cli
cld
divl
xor
fs
sub
ds
cmp
aaa
or
or
ret
mov
push
icebp
or
mov
push
sub
or
pushf
shl
push
scas
sbb
into
and
xor
iret
subb
stc
addl
mov
jo
and
or
mov
mov
mov
push
jne
cwtl
inc
add
test
cld
cmp
push
xor
cmp
je
xor
out
sahf
adc
and
faddl
dec
lods
or
aam
xchg
pop
addr16
mov
xchg
std
cld
sbb
inc
add
adc
xor
pop
lock
in
mov
ret
or
jl
cmp
lahf
shlb
lret
push
mov
clc
subl
mov
pop
inc
pop
test
jae
cltd
xchg
pop
inc
cwtl
or
jns
xchg
xor
not
clc
pop
pop
mov
inc
jmp
cmp
sbb
jmp
adc
or
out
sub
sub
lods
mov
pushf
jg
and
cmp
mov
xor
ss
ja
js
or
and
adc
adc
pop
mov
jno
fmuls
or
mov
pop
inc
mov
and
je
clc
adc
lret
sbb
je
lea
mov
sub
jmp
and
ljmp
or
test
push
add
mov
sbb
and
sbb
and
push
push
and
adc
shl
cld
std
mov
adc
sbb
sbb
movb
shlb
xchg
xor
add
pop
cmovno
cmp
add
mov
push
in
imul
mov
and
sbb
mov
bound
jmp
dec
or
cld
aaa
jne
mov
rol
lahf
lock
mov
inc
mov
dec
jne
fs
add
pusha
inc
or
shufps
lret
add
pop
insl
push
and
lock
push
or
mov
adc
dec
push
inc
xor
add
xor
fidivs
sahf
test
or
dec
rcrl
adc
shr
sti
nop
mov
insb
sbb
xor
dec
or
push
ljmp
jne
jl
add
fmuls
push
imul
or
loopne
icebp
add
push
and
add
nop
mov
fdivrs
sbb
lea
push
adc
jbe
sub
ss
adc
clc
xor
enter
or
dec
pop
scas
mov
bound
mov
dec
es
and
add
cld
push
pushf
cltd
mov
or
mov
adc
daa
jne
or
add
idivl
pop
mov
jno
adc
or
test
xor
xor
pop
ret
jp
inc
imul
in
pop
nop
sub
inc
int3
mov
jbe
ja
or
loope
loop
out
jmp
mov
add
mov
mov
pop
add
jg
add
jmp
mov
or
stos
push
sub
or
adc
hlt
add
outsb
push
cmpsb
sub
sub
push
loope
xor
add
jp
mov
and
mov
mov
mov
inc
sar
or
mov
sub
adc
push
je
adc
or
gs
jnp
dec
int3
rcrb
cmp
adc
rcr
data16
ljmp
adc
push
jmp
xor
or
ds
jle
mov
les
ja
paddsb
pop
or
mov
cwtl
test
lods
aas
or
push
push
adc
rorb
cltd
jge
adc
pusha
gs
rolb
sub
in
inc
add
jo
adc
clc
inc
imul
adc
sbb
insb
push
adc
pop
addl
fisttps
decl
cmp
pop
insl
xor
inc
push
pop
mov
jbe
xchg
out
hlt
cltd
pop
idiv
ljmp
cmpb
loopne
in
sub
popa
xor
stos
push
push
mov
pusha
adc
rorl
into
xchg
xchg
xor
cmpsb
and
sub
xorl
push
or
push
scas
jp
loopne
dec
pop
push
imul
push
pop
push
dec
daa
cmp
pop
aam
mov
push
loop
sbb
loopne
mov
mov
arpl
add
sub
add
push
in
sbb
inc
adc
or
repnz
add
dec
push
or
ja
jecxz
test
and
xchg
loopne
mov
adc
or
rolb
roll
or
call
dec
ret
fcoms
test
and
ret
fbstp
mov
adc
enter
cmp
xlat
mov
in
xor
or
push
sbb
sbb
adc
mov
xor
push
faddl
idiv
orl
enter
addb
sbb
adc
xor
imul
or
call
ret
jbe
aam
aas
cli
dec
sti
jmp
dec
je
add
or
pop
je
push
neg
sarl
jb
push
sbb
xchg
addr16
add
jmp
sub
push
push
push
and
sti
add
mov
sub
push
ljmp
lea
push
test
push
testb
add
jo
arpl
lock
xchg
lcall
in
push
addr16
jne
mov
addr16
add
cmp
push
dec
mov
addb
jae
push
imul
xchg
sub
xor
cmp
and
rep
or
dec
xchg
xlat
pop
insb
inc
sbb
jns
or
mov
jg
mov
mov
adc
lods
repnz
jle
xor
or
jmp
xchg
jbe
leave
add
add
jmp
rorb
add
pop
in
pop
push
dec
jb
je
push
jmp
sub
dec
xchg
clc
rorl
sub
dec
pop
sub
pop
jp
loopne
fcoml
sub
notl
js
adc
imul
repz
or
mov
orb
jmp
cmp
jae
xchg
cs
sbb
mov
cmp
mov
sbb
dec
loope
jl
push
add
call
test
mov
loop
pop
lea
add
sub
insb
push
push
pop
dec
sbb
inc
push
push
sub
pop
shlb
sbb
add
xor
jl
sub
je
or
dec
and
sbb
shl
std
jns
push
or
clc
mov
pop
jle
rcll
add
push
pusha
xchg
pop
pop
imul
lea
lret
out
popf
cmp
push
sbb
punpckhwd
push
addr16
insb
subb
xchg
push
pop
int
add
decl
das
pop
pushl
pop
add
iret
sub
push
pop
or
push
pop
ja
lcall
inc
push
pop
sub
sbbb
cmc
push
adc
cmp
push
dec
test
sbb
inc
outsl
mov
leave
imul
cmp
lret
push
push
fisubrl
addl
inc
lods
adc
add
lcall
insl
or
cmp
clc
mov
insl
sub
and
sarl
inc
js
adcl
add
jg
mov
cmp
jne
fsts
stc
xchg
clc
push
jle
in
mov
stc
mov
mov
out
lret
mov
fs
in
push
insb
sbb
jge
insl
inc
sub
xchg
cs
call
cmp
movsl
bound
ret
add
add
xchg
fucomip
mov
inc
mov
jmp
dec
or
inc
testb
cwtl
rclb
add
aam
xchg
mov
loope
mov
and
sbb
dec
shrb
or
jno
jb
add
cs
lods
popf
fsts
sets
push
mov
sbb
dec
int
push
mov
in
js
in
push
add
add
enter
popa
imul
mov
lret
inc
dec
adc
or
stos
loope
repnz
test
pushf
lock
add
outsb
and
test
in
mov
nop
test
pop
lea
dec
and
clc
xchg
push
cmpsb
aaa
mov
jmp
xchg
and
jg
clc
enter
mov
cmp
ret
xchg
and
test
inc
and
ds
mov
mov
xchg
mov
lret
ret
jge
cli
push
fcoml
adc
cmpsb
and
movsb
adc
popf
out
lret
movsb
sbb
mov
sbb
xchg
xchg
sub
pop
hlt
test
popa
sbbb
lret
sbb
inc
add
iret
sub
xor
add
jge
sbb
mov
add
adc
pop
jp
pushf
jo
inc
pop
imul
pop
ss
mov
adcb
sbb
mov
xor
popf
enter
inc
push
inc
xor
pop
jp
fisttpl
jmp
adcb
das
sbb
andl
xchg
jo
in
sub
mov
fwait
or
mov
imul
add
mov
dec
call
insl
xchg
xchg
xchg
cmp
cmp
sub
push
arpl
mov
adc
rcrl
lea
dec
push
mov
cmp
xor
lahf
push
or
lock
cmc
fsubrl
xchg
sar
lea
xchg
imul
xor
rclb
xor
je
fnstenv
int3
adc
in
pushf
fstpt
sahf
and
loopne
add
bnd
add
repnz
xchg
inc
jnp
jl
jae
add
dec
sbb
leave
enter
fidivl
xchg
add
push
lods
xchg
cmovne
sub
mov
and
mov
push
les
adc
leave
jge
add
add
jo
push
jns
repnz
add
es
push
in
jmp
push
pop
test
sub
incl
lahf
out
sahf
dec
inc
cmp
sub
popl
sbb
ds
sar
mov
xchg
test
cmp
stos
loop
or
mov
or
xor
pop
nop
and
inc
pop
mov
nop
lcall
pop
rolb
push
outsb
mov
enter
repz
rcr
loopne
lock
jmp
mov
or
xor
loopne
push
jmp
in
adc
lds
mov
outsb
inc
dec
loopne
push
sarb
out
sarb
shll
push
or
sub
xchg
in
je
mov
icebp
lret
add
das
repnz
jne
pop
repnz
inc
sbb
add
add
push
adc
jle
or
mov
mov
dec
imull
int3
testb
jne
push
sbb
mov
loopne
mulb
add
mov
and
inc
sbb
outsb
jne
out
cs
ror
mov
push
pop
shlb
mov
push
xor
push
cmp
xorb
ds
adc
test
clc
stos
rcrl
cld
fsqrt
jbe
je
movsl
movsl
dec
push
fistpl
pop
or
dec
sub
sbb
xchg
mov
into
or
inc
push
push
popa
lock
mov
ss
or
and
test
and
or
fimuls
cmpb
jmp
lods
push
roll
shr
pop
or
mov
jns
sbb
dec
sbb
add
lcall
cmp
cmp
lods
mov
out
sbb
sbb
aas
xchg
mov
push
lock
pop
push
out
call
add
pop
js
js
loope
negb
loop
cmp
insb
mov
dec
je
sbb
pop
std
movb
jmp
insl
test
in
xor
sub
std
add
orl
adc
shrl
push
jo
or
je
clc
mov
or
fmuls
or
repnz
inc
mov
lock
loope
dec
cwtl
adc
dec
xor
mov
add
push
or
mov
or
lods
sbb
mov
adc
cld
or
add
jbe
mov
add
psubusb
test
mov
jnp
push
push
lods
movl
cmp
es
mov
sarb
testl
test
popa
enter
call
lcall
push
ret
imul
in
add
xchg
mov
pop
or
dec
adc
mov
add
add
dec
or
stos
xchg
andl
xor
mov
add
sub
ds
add
arpl
loopne
fcoml
push
push
xchg
fcomps
int3
repnz
xchg
clc
or
xchg
repnz
movsl
shrb
faddl
add
hlt
mov
jae
fbld
cld
xor
jnp
push
ljmp
sub
adcl
xchg
clc
jno
insl
push
jne
loopne
pop
insb
repnz
jmp
cli
xor
mov
addr16
pop
inc
test
mov
pushl
or
add
add
ja
int3
shll
cltd
int3
add
xchg
sbb
test
scas
add
add
sbb
or
dec
or
pop
sbbl
mov
dec
enter
jl
xchg
lret
jge
stos
sub
inc
cltd
stos
add
adc
jbe
push
inc
fisubrs
sbb
scas
hlt
pusha
and
or
inc
mov
sub
sbb
or
cmp
divl
pushf
inc
js
mov
sub
cwtl
movsb
aaa
push
sahf
mov
dec
sahf
jno
xchg
insl
in
sbb
jb
pop
aaa
loopne
call
sbb
push
adc
add
lock
stc
rcrl
xor
mov
dec
nop
rcr
cmp
or
cmp
push
xor
shlb
push
jbe,pn
rclb
dec
push
pop
dec
jmp
ret
add
mov
jl
push
in
or
push
mov
dec
lret
inc
aaa
nop
or
lret
popf
mov
popa
xorl
push
mov
mov
popf
jne
fnop
mov
cmp
nop
in
xchg
cmp
call
lods
outsl
je
dec
call
or
sub
mov
into
pop
add
sbbl
mov
sti
rcrb
lea
jbe
ja
fiadds
xorb
xchg
cld
ja
or
test
push
sbb
pop
sar
pop
leave
rclb
mov
push
loop
rolb
inc
jnp
jo
mov
or
lret
movsl
mov
loopne
sbb
pusha
xchg
loope
aam
sub
add
inc
sub
xor
enter
idivb
pop
or
add
setg
jb
movsl
sbb
add
inc
popa
pusha
dec
popa
xchg
mov
adc
lds
add
mov
loop
fbld
push
imul
ljmp
or
ja
movsl
mov
mov
leave
test
adc
movsl
hlt
hlt
stc
rcr
push
add
push
sbb
adc
test
in
and
loope
aaa
test
ds
xchg
pusha
sub
scas
pop
ret
sbb
pop
and
fnsave
jne
js
add
movb
inc
xor
movsl
sbb
xchg
cmp
incl
cs
sbb
sbb
imul
imul
pop
or
xchg
rcrb
jb
out
mov
test
pushf
dec
xor
or
adc
add
into
shlb
jo
sbb
inc
je
pop
push
imul
filds
cwtl
mov
dec
xor
repz
movsb
cmp
test
mov
mov
lea
and
arpl
mov
call
inc
fimull
mov
add
outsb
sbb
sbb
js
pop
add
push
xor
mov
loopne
sbb
es
mov
push
add
add
enter
repnz
pop
jne
xor
add
push
insl
cmp
sbb
xor
ds
cmc
add
push
pushf
sub
test
add
repnz
xchg
loopne
lcall
cmp
movsb
xor
mov
push
data16
es
mov
stc
push
push
cwtl
inc
iret
adc
or
decl
jmp
mov
inc
lods
cwtl
ds
xlat
mov
mov
dec
movsl
cmc
inc
sarb
rol
xor
addr16
xchg
les
cmp
clc
pushf
mov
or
push
jmp
pop
orb
sbb
inc
inc
mov
mov
jmp
stos
pusha
je
or
sub
mov
ss
push
fwait
pop
loopne
popa
xor
xchg
fisttps
pop
xor
mov
push
and
xchg
cmp
jb
sbb
call
or
and
out
test
push
outsl
add
mov
shlb
add
push
addr16
xchg
hlt
jmp
cmp
jle
jae
mov
xor
cmpsb
lock
pop
push
out
mov
shll
add
or
mov
nop
cmp
inc
cld
adc
mov
leave
imul
popf
lea
mov
dec
mov
aaa
enter
out
cltd
sbb
divb
movsl
push
push
push
pushf
enter
iret
sbb
inc
push
stos
adcl
adc
mov
dec
inc
les
lcall
and
jae
imul
cli
mov
bound
in
jo
inc
daa
add
xchg
les
mov
insb
sub
ret
inc
test
out
push
push
into
xor
jecxz
bound
sub
sbb
adc
dec
sub
mov
or
jmp
xchg
sub
cltd
add
adc
jl
add
or
push
mov
add
fidivrl
adc
mov
xor
jnp
or
sbb
push
lock
adc
daa
pusha
or
lahf
mov
or
mov
jnp
fsubl
mov
mov
sbb
and
push
inc
out
ficomps
push
push
push
jmp
fnstsw
faddl
stc
cmp
fimull
mov
dec
jmp
sub
mov
movb
movsb
in
ja
lock
pop
inc
movb
xor
and
or
fsubrs
jmp
in
push
stos
rclb
push
rcrb
dec
cld
mov
in
ja
sbb
andb
mov
aad
sub
mov
sub
sub
push
mov
test
int3
mov
lock
shrl
mov
test
pusha
inc
clc
or
and
push
and
dec
std
xor
or
push
mov
popa
subl
mov
mov
jp
or
jge
inc
sbb
adc
lret
add
xchg
mov
mov
and
inc
aam
mov
sub
mov
or
adc
insl
loope
add
or
mov
xor
gs
add
cli
adc
mov
adc
xchg
pop
jmp
jge
lods
mov
scas
mov
xchg
and
je
push
or
sub
mov
sbb
out
mov
sub
movsl
daa
pop
mov
mov
xchg
xor
or
add
rcll
add
mov
mov
fdivrs
aaa
xor
or
stc
and
stc
mov
jmp
cltd
push
pop
lcall
sti
push
adc
or
dec
xchg
mov
stos
mov
push
ljmp
ret
outsl
mov
adc
dec
mov
pop
adc
int3
mov
or
or
jne
jle
inc
mov
mov
daa
test
test
xchg
or
jbe
lcall
sarl
pinsrw
jb
inc
aam
xchg
add
mov
cmp
push
jl
adc
or
and
out
jno
push
or
adc
dec
push
push
or
inc
add
fmuls
decb
pop
jb
mov
insl
imul
mov
aam
add
pop
bound
pushf
ret
add
imul
and
pop
push
and
test
test
nop
ret
adc
inc
mov
jb
in
push
hlt
mov
xchg
xchg
cmc
adc
xchg
jo
pop
ljmp
inc
aam
clc
fmuls
out
lock
adc
nop
addb
test
idivl
pushl
insl
and
pop
rcrl
jne
cmp
je
lods
cmp
ja
mov
jmp
pop
cmp
cmpl
lea
inc
adc
jmp
inc
loopne
push
loopne
loopne
push
xchg
loopne
xchg
stc
pop
push
xor
inc
imul
jo
imul
or
es
xorl
add
sub
sbb
pop
sbb
mov
mov
xchg
and
jg
inc
push
jo
adc
ds
jb
inc
test
lret
cld
scas
add
nop
add
popl
push
sbb
les
sub
icebp
jae
sub
add
leave
pop
std
arpl
lods
pop
and
std
sub
mov
xorb
sub
add
and
adc
mov
jmp
push
subl
mov
sub
add
and
mov
and
pop
push
xchg
sub
outsl
ss
js
add
mov
sub
sub
lea
into
pusha
and
pop
inc
sar
sbb
fxch
outsl
mov
mov
or
mov
movsl
jl
add
int3
in
xchg
push
sub
push
sbb
loop
jns
push
add
push
pop
adc
or
cmpsb
shlb
jl
inc
cmp
cmp
lods
sti
inc
mov
sbb
sbb
jle
divb
mov
nop
jnp
shl
test
out
and
mov
xlat
imul
pusha
jo
pop
leave
shrl
mov
pop
sub
add
icebp
add
arpl
icebp
pop
es
sub
cmpsl
inc
fstps
pop
flds
imul
inc
js
push
inc
sahf
pop
push
roll
mov
shrl
cltd
mov
nop
and
sub
insb
int3
push
sbb
dec
xchg
cwtl
pop
adc
test
ds
test
insb
push
lea
loopne
fstps
test
mov
sbb
mov
inc
inc
pop
sbb
mov
es
lock
pop
enter
leave
sbb
insb
add
mov
test
inc
or
mov
or
xchg
add
xor
lcall
pop
mov
outsb
data16
sbb
cmp
jo
push
cld
mov
or
sti
sbbb
adc
push
fs
dec
xchg
xchg
pop
mov
imull
call
clc
sub
pop
jp
mov
and
dec
adc
and
leave
cmp
dec
jo
sbbb
jmp
cmp
sub
shlb
push
xchg
mov
adc
das
rcrl
pop
add
stos
pop
or
xor
mov
rcl
sub
pop
adc
inc
push
adc
add
xor
lds
shl
aaa
cmp
js
stos
rorb
lret
test
push
pop
sbb
js
jp
movb
or
loopne
popl
jle
add
sbb
mov
out
inc
pop
ss
mov
or
mov
inc
sbb
jg
jp
push
jmp
andl
jle
and
or
mov
test
or
cmp
pushl
cmpl
bound
xor
das
pop
pop
jg
mov
into
jo
jo
push
fdivl
movsb
dec
adc
cmpsl
rolb
fstpl
clc
hlt
mov
mov
lds
sub
rolb
sbb
iret
in
push
jae
cli
call
test
test
xchg
loopne
mov
hlt
xchg
bound
es
ja
cmpb
jp
aad
bound
xorl
lods
sub
test
mov
dec
icebp
xchg
push
hlt
pop
addr16
popf
je
leave
fistpll
ja
mov
nop
dec
ds
clc
adc
mov
sub
sahf
dec
xor
xchg
and
shll
mov
pop
popa
push
or
mov
fwait
sbb
lea
push
nop
arpl
mov
jmp
and
mov
mov
popa
mov
repz
lods
mov
cltd
scas
and
hlt
push
xchg
pop
roll
and
inc
int3
jno
icebp
outsb
fistpll
insb
jne
jp
mov
adc
and
fisttps
adc
imul
mov
imul
leave
leave
leave
dec
inc
cmp
lret
sbb
aam
sub
in
in
test
sbb
stos
sarl
loope
xchg
jl
ret
lds
outsb
popf
push
lea
loop
jae
sbb
mov
sbbb
leave
mov
scas
mov
xchg
cmp
cld
adc
mov
adc
fildl
adc
or
adc
test
rorl
shl
pop
aaa
imul
shll
sub
jns
sub
mov
mov
inc
sub
or
aad
and
inc
pop
sarb
lods
pop
leave
cmpsb
inc
sub
in
and
int
outsb
and
push
xchg
lds
mov
js
push
jae
lods
mov
mov
inc
fs
add
mov
outsl
jle
cltd
add
mov
mov
movsl
push
pusha
cmp
xchg
loop
addr16
push
dec
inc
mov
xor
jmp
adc
mov
mov
mov
out
test
enter
add
outsl
pop
xor
inc
mov
push
xchg
mov
cld
push
push
cmc
test
in
jecxz
push
pop
sbb
inc
push
add
push
aas
inc
pop
js
add
into
fdivrl
push
jnp
jb
mov
pushf
push
into
lods
cltd
nop
inc
loopne,pn
lods
shrl
add
cltd
ficomps
pop
push
mov
sub
in
je
adc
push
pop
xchg
mov
mov
mov
dec
sub
dec
fsub
jb
add
aad
lds
cmp
jnp
jo
leave
rorb
dec
push
add
and
mov
lods
jns
and
and
nop
mov
aam
leave
and
cmpsb
ret
in
xor
rolb
rclb
mov
or
aam
and
enter
cmp
inc
mov
aam
idivb
test
pop
inc
cmp
lret
mov
sbb
sbb
sbb
mov
pop
loope
sahf
popf
mov
mov
je
pop
add
cmc
loopne
sub
sbb
sbb
inc
push
scas
dec
out
imul
scas
inc
ds
mov
push
pop
hlt
rcrb
stc
xchg
inc
mov
add
in
fidivs
dec
sbb
dec
adc
xchg
sbb
sbbb
scas
lret
xchg
mov
add
ret
adc
rcll
pop
sbb
mov
jmp
lret
inc
pop
pop
push
inc
jp
mov
das
and
out
ret
mov
or
test
rorb
gs
out
dec
add
hlt
and
sbb
dec
out
cltd
cmc
test
stos
cmp
jmp
mov
dec
rcrb
mov
inc
jmp
dec
fildll
dec
add
add
or
cmp
and
add
inc
add
sub
xor
lret
cmpsb
xor
lea
jo
sbb
rcll
add
xchg
push
sbb
add
push
add
add
mov
mov
fisttps
mov
xchg
mulb
or
add
jo
adc
xchg
lret
or
lock
add
dec
pop
xor
sbb
and
pusha
and
mov
mov
add
adc
push
jle
add
jo
inc
pop
sub
mov
mov
inc
cmp
push
sbb
int3
repz
or
or
add
sbb
push
fcoml
dec
fstp
mov
mov
adc
mov
cmc
hlt
mov
shlb
pop
hlt
push
popf
out
cli
out
or
push
sub
aad
adc
push
sub
inc
add
and
or
cld
dec
dec
out
push
notb
out
int3
arpl
adc
cs
fadds
adc
cmp
scas
mov
adc
sbb
fisttps
aaa
add
xchg
mov
decl
orb
mov
ret
movsl
push
mov
mov
loope
out
addr16
mov
dec
cmp
mov
in
leave
sub
mov
cmp
and
in
sbb
mov
and
jmp
or
loopne
jmp
mov
in
inc
or
shrl
ret
sub
jg
pop
add
push
or
scas
mov
idivl
or
xor
mov
push
ret
jno
push
dec
fists
mov
mov
push
cmpb
sti
imul
xchg
pop
mov
xchg
xor
mov
jne
movl
inc
sbb
cmpsb
sarl
jne
dec
shll
jmp
dec
jmp
add
jmp
pop
push
mov
add
adc
leave
ret
add
shl
lods
fwait
push
fcoms
add
push
imull
rcrl
add
pop
jmp
psubsb
jb
sbbl
mov
in
push
jmp
lock
dec
rorb
push
aad
imul
aaa
inc
push
jne
ret
aas
sar
stos
mov
jnp
jae
cmp
jbe
addr16
shll
jne
xchg
sbb
lods
rcll
inc
push
leave
inc
fwait
lea
sbbb
leave
xor
jo
fwait
orb
push
mov
sub
stos
jmp
cli
fs
cmpb
inc
cmp
js
push
add
pop
movb
sbbb
shlb
inc
bound
loopne
xorb
dec
xor
push
fsub
std
es
pop
dec
test
orb
clc
dec
xor
dec
jne
loopne
pop
jnp
stos
addr16
scas
dec
jle
sbb
pusha
xor
mov
jecxz
xor
push
mov
inc
dec
jne
sahf
xchg
push
push
scas
stos
mov
jmp
rcl
push
addr16
add
jmp
cmp
lcall
cmp
adc
addb
sbb
mov
push
movsl
ret
cmp
adc
and
push
add
test
cmp
leave
mov
push
and
lcall
scas
pop
pop
pop
pop
sbbb
shll
dec
pop
pop
push
cmp
cmp
das
pop
pop
push
xlat
testb
imul
stos
insb
ljmp
lods
and
add
and
dec
mov
or
push
or
mov
add
jl
sbb
rorb
call
jnp
jge
mov
mov
add
mov
ret
cmp
out
imul
ljmp
ljmp
mov
jmp
popf
jmp
and
cmp
xor
shlb
cmpl
and
test
pop
pusha
and
or
jne
jns
push
sahf
or
dec
fimull
fnsave
icebp
nop
push
js
sbb
mov
pop
aad
jecxz
pop
fimuls
test
jnp
xchg
test
clc
xor
in
aaa
sbb
pop
loop
jnp
test
pop
ret
adc
mov
jecxz
jo
xchg
and
mov
sbb
xor
or
sub
mov
or
clc
adc
clc
xchg
addb
cmp
arpl
pop
sub
sbb
xor
fdivr
mov
test
push
addr16
rolb
pop
cmpsb
sbb
das
adc
mov
fiaddl
les
mov
sub
and
rcrb
cwtl
shrb
xlat
cmp
pop
pop
sbb
cwtl
daa
sbb
das
ljmp
jle
jg
je
lcall
js
test
pop
cld
inc
add
add
inc
and
movsb
or
mov
xor
cli
xor
cmp
mov
fstpl
addr16
out
or
mov
pop
scas
lock
add
add
lock
pushf
push
mov
sub
aad
add
mov
lock
adc
pop
push
out
pop
movsl
pop
mov
jmp
pop
push
fwait
sbb
add
or
andb
or
test
dec
mov
mov
or
sbb
pop
or
inc
mov
fisubs
test
push
push
push
pusha
adc
inc
adc
aas
push
scas
addl
sub
lcall
cmp
inc
sub
push
push
mov
pop
and
fadd
std
jo
pop
scas
mov
pop
inc
or
and
push
add
les
shl
and
mov
shlb
push
bound
pop
inc
add
mov
push
imul
dec
fidivl
adc
ret
cwtl
clc
and
or
dec
inc
pop
sbb
sub
test
imul
push
push
ds
adc
js
push
mov
mov
add
mov
mov
lock
out
cmp
sub
iret
push
adc
xchg
sbb
stos
clc
mov
adc
sbb
pop
jb
cmp
pop
jb
pop
inc
dec
pop
inc
test
mov
cmp
jmp
push
adc
leave
test
dec
mov
ds
mov
mov
enter
pop
cmp
lea
mov
ficoml
scas
loop
popa
popf
jge
adcl
sarb
jg
and
lods
adc
mov
mov
add
in
push
rorb
mov
outsl
jo
les
pop
dec
dec
sarl
xor
cmpsl
mov
adc
pop
ds
je
shl
mov
mov
inc
inc
rcll
sbb
ja
mov
imul
add
lret
xchg
loopne
cltd
aad
sub
xor
test
fistpl
das
ds
or
xchg
arpl
cmp
inc
jne
cmp
stos
inc
lahf
xor
cmpl
hlt
xchg
pop
mov
cmp
clc
pusha
lods
adc
xchg
add
rcr
sub
loopne
or
js
push
add
mov
inc
js
sub
vmovd
add
or
cmp
add
in
pop
mov
or
inc
lsl
in
or
rcrl
or
xor
sub
sar
add
out
rclb
jmp
jg
loop
sarl
aaa
fistpll
jg
push
inc
adc
push
jmp
push
xor
jo
mov
dec
jne
shlb
mov
imul
or
or
xor
mov
je
xor
adcb
or
jne
sbb
add
jne
push
inc
outsl
stos
and
inc
cli
pop
pop
ret
fnsave
sub
sbb
shl
je
popf
bound
add
cli
shr
add
clc
enter
aaa
push
popf
cmp
jg
mov
xlat
jl
js
in
adc
xchg
test
outsb
adc
adc
add
push
adc
ret
mov
push
xor
push
or
shll
enter
or
and
push
sbb
fdivs
xor
call
xchg
add
ljmp
add
nop
push
pop
mov
and
sbb
push
add
negb
shrb
lret
or
push
sbb
test
addl
push
or
mov
sbb
orl
xchg
jo
add
xchg
pusha
outsb
mov
push
xlat
cmp
imul
push
fldl
or
mov
rcl
fiadds
mov
popf
pop
dec
enter
bnd
in
jno
xchg
mov
jp
les
out
fcmovnbe
jle
sbb
jmp
and
add
and
pop
mov
imul
push
dec
add
and
sbb
stc
jbe
test
add
sbb
xchg
adc
fbld
lods
jno
imul
in
shl
aad
call
jmp
loopne
or
stc
pop
sbb
int
adc
jmp
pushl
jge
mov
jmp
mov
mov
in
in
fcomps
adc
cld
and
sub
js
and
push
xor
bound
mov
adc
jne
lea
xor
inc
lock
nop
dec
dec
sahf
out
ficoms
pop
push
dec
repz
loope
fcoms
in
into
cmpsl
jge
mov
rclb
pop
stc
es
mov
add
int3
and
and
mov
mov
jb
push
inc
and
mov
fs
jle
imull
pop
ficompl
loopne
pusha
or
mov
cmp
jp
push
push
cltd
jmp
inc
faddl
or
or
jmp
test
and
inc
xor
jmp
sti
iret
mov
xchg
and
ret
and
push
push
test
mov
sub
pop
or
mov
xor
fst
scas
cld
outsl
mov
test
cld
divl
adc
xchg
xchg
and
pop
dec
mov
sbb
jl
add
jg
xor
jle
mov
sbb
sub
mov
sbb
shlb
je
jmp
bound
add
loopne
loop
sbb
popa
out
or
inc
cmpl
sbb
mov
push
aad
adc
inc
clc
adc
loop
ret
or
adc
xchg
dec
cwtl
or
xchg
ds
jl
mov
jbe
xchg
lcall
jne
cmp
outsl
jnp
mov
sub
dec
addb
jmp
movsb
pop
mov
or
data16
jb
mov
pop
and
xchg
std
mov
lods
std
rorb
jmp
jne
xchg
xchg
xchg
add
cmp
adc
xchg
dec
shlb
js
add
xchg
dec
rorb
push
inc
dec
push
stc
test
mov
jno
or
gs
cmp
adc
testb
mov
outsl
or
jge
lcall
mov
jns
mov
enter
shlb
rorb
push
xchg
enter
mov
xchg
out
inc
mov
mov
mov
pop
rol
mov
pop
cs
int3
pop
or
add
subl
xor
sub
iret
es
lock
pop
sbb
sub
popa
mov
jns
idivl
jb
inc
xor
lods
es
adc
adc
mov
fsubl
cwtl
pop
xor
or
inc
sbb
test
sub
dec
cmp
inc
sub
jo
lods
pop
aad
pop
pop
inc
call
ss
cmpb
ret
add
cmpb
xor
mov
mov
cmp
push
outsl
ss
cmpsb
rclb
js
pop
xchg
cmpsl
loop
push
mov
and
and
ret
clc
adc
mov
mov
push
pop
sub
rolb
sbb
inc
in
test
es
inc
push
cmp
mov
pop
mov
rorb
push
or
stos
nop
cmpb
out
xchg
mov
push
iret
and
mov
pop
sti
cmp
movsb
test
stc
mov
push
adc
loopne
push
insb
cwtl
imul
roll
or
les
movsb
ret
and
mov
jg
orb
cmp
sahf
cmpsl
aam
sub
jnp
mov
pop
aam
mov
adc
fcomps
pop
fnstenv
adc
loopne
push
rolb
adc
xor
sbb
add
mov
mov
push
dec
adc
cs
fwait
sub
fwait
cmp
outsb
inc
sbbb
jns
jl
out
scas
mov
and
test
test
add
jae
mov
or
jo
in
sub
xorl
sub
fdivrl
jecxz
inc
fstpt
and
loopne
cmp
add
test
adc
pop
scas
loopne
mov
mov
push
fisubs
adc
sar
and
cmp
je
pop
clc
ljmp
cmpl
mov
xchg
sub
mov
test
stos
test
ficomps
sar
dec
int
mov
xchg
lea
addb
mov
push
fsubrl
pushf
adc
cmpb
insl
inc
lahf
xor
cmp
lahf
js
in
push
jl
lds
sub
dec
outsb
push
inc
scas
xchg
dec
or
scas
add
push
mov
adcb
cmpsb
icebp
xlat
mov
push
xor
mov
cs
mov
jb
je
jle
adc
xchg
sbb
pop
test
neg
adc
neg
ret
lods
or
cmpsl
cmpsl
sub
cmp
mov
daa
movsb
movsl
movsl
lea
enter
cmp
and
mov
mov
mov
lret
mov
lahf
inc
repz
cmpsl
lock
or
mov
sbb
idiv
push
pusha
ficoms
inc
jmp
dec
data16
pop
inc
dec
leave
shlb
test
cs
sti
mov
jmp
dec
and
lods
sbb
roll
mov
xchg
xchg
cs
or
sub
jl
pop
sbb
jmp
dec
adc
scas
adc
sub
out
ljmp
or
sbb
sbb
jnp
fisttpll
mov
incl
sbb
or
mov
sub
mov
mov
mov
iret
jmp
mov
xor
jecxz
les
je
jmp
mov
adc
inc
inc
lea
push
add
hlt
in
sbb
add
jne
cmp
hlt
push
nop
loopne
add
xchg
loope
outsl
nop
sbb
cmpsb
jmp
sbbl
jp
andb
sahf
rcl
dec
push
add
pusha
stos
xchg
je
imul
or
inc
adc
cld
push
inc
daa
pop
mov
mov
pop
lcall
xlat
ret
pop
mov
push
jno
push
or
hlt
sahf
cmpsl
stc
mov
push
fdivrl
rolb
ret
jl
aam
lods
enter
test
pushf
or
add
sbb
inc
mov
and
fsubrs
sbb
xchg
mov
lea
pop
or
pop
out
rolb
aas
jl
xor
call
xchg
seta
mov
test
xchg
xlat
loope
pop
pop
sbb
fisubrl
push
lock
aas
pop
lea
aas
xor
sub
or
aas
pusha
fs
das
les
scas
movsl
push
fnstsw
adc
mov
shll
scas
outsb
inc
aad
ss
outsb
inc
xlat
adc
sbb
mov
outsb
rorl
enter
cmp
xor
and
add
aaa
or
call
call
push
jle
inc
mov
xchg
pop
jb
test
rol
and
pop
rcrl
sti
enter
aad
sbb
adc
push
leave
call
in
add
aad
cmc
push
xchg
fidivrs
and
add
test
inc
leave
add
aas
dec
movsb
bound
in
xlat
stc
decb
out
mov
mov
push
cwtl
mov
cwtl
adc
inc
faddl
cwtl
inc
add
lods
mov
sbb
sbb
in
rcr
mov
lea
cmp
push
mov
and
cmp
push
mov
jecxz
loop
mov
addr16
test
inc
cwtl
xor
jb
test
push
nop
sbb
inc
dec
mov
and
repnz
push
dec
push
or
inc
cwtl
nop
push
nop
dec
dec
nop
mov
mov
pushf
cwtl
jb
leave
add
cmp
add
popa
xor
aaa
insb
lcall
or
hlt
jne
xor
shrb
arpl
cmp
repz
mov
insl
inc
sub
addr16
mov
mov
and
popa
mov
test
add
addl
and
and
xorl
pusha
xor
int3
xchg
lods
aam
or
inc
or
pop
pop
iret
add
add
sub
add
pop
mov
addl
push
sbb
fmuls
jns
xor
aaa
int
or
iret
push
jmp
jnp
jno
das
mov
push
jg
mov
or
sbb
fsts
dec
jne
add
jno
pop
mov
clc
adc
movsl
jecxz
ss
rcrb
or
add
and
xchg
inc
cltd
js
test
mov
orb
sbb
ja
js
sbb
mov
push
sbb
cmp
adc
and
sbb
xchg
test
loope
imul
and
loope
pop
push
loopne
xchg
xchg
dec
sbb
les
loope,pn
shr
je
mov
fwait
pop
outsl
push
push
dec
adc
push
and
and
pop
dec
push
out
fnstsw
outsl
inc
or
jbe
repz
ret
cmpsb
outsl
ja
daa
loop
jg
lea
mov
jo
in
int3
pop
adc
jg
ffreep
lea
lea
inc
out
leave
inc
xchg
and
sub
fwait
mov
shrb
pop
xor
dec
cltd
xchg
movsb
pusha
jp
in
aaa
add
inc
push
negl
cmp
aas
ret
mov
shrb
lret
ret
mov
inc
cwtl
cmpl
popa
mov
rcr
xchg
sbb
sub
mov
push
aad
lret
and
inc
leave
test
loopne
adc
or
clc
xchg
cmp
cmpl
shlb
adc
xchg
loopne
leave
loopne
inc
jns
mov
lock
xor
xchg
pop
test
rcrb
in
mov
pop
mov
ds
or
hlt
push
mov
into
sub
dec
and
dec
test
or
add
mov
push
or
leave
cmp
bts
jmp
mov
cs
sub
push
jbe
fwait
mov
and
lods
imul
decb
js
add
inc
adc
and
cmp
and
cmp
xchg
idivl
inc
inc
inc
add
mov
pop
or
cmp
add
cmp
pop
xchg
sub
rol
push
mov
lret
out
add
xor
test
adc
lods
aas
xor
ficomps
cmp
jne
cmp
mov
add
add
inc
mov
add
inc
inc
or
loopne
cmp
andl
dec
mov
ljmp
mov
adc
or
and
jmp
cmp
nop
pop
subl
sbbl
test
lea
ds
xchg
in
xchg
inc
mov
cmp
jp
push
test
aas
pop
popa
fs
rcrb
xor
pop
roll
add
pop
adc
inc
or
andb
cmp
loop
jae
ja
adc
mov
sbb
and
icebp
sub
rcll
jmp
inc
or
int3
add
push
xchg
add
mov
fists
rorl
test
or
mov
loope
inc
out
movsb
lods
rolb
inc
push
cmc
fsub
sbb
cmp
adc
gs
ret
in
jmp
outsl
mov
jbe
add
sbb
gs
mov
inc
cmp
jg
inc
sbb
and
xor
pop
add
call
js
dec
and
adcl
lods
mov
cmpsb
ss
out
dec
adc
add
in
int3
or
xor
xchg
call
mov
mov
adc
add
push
pop
pop
add
lods
sar
notb
adc
lahf
and
push
push
pop
push
sarl
cld
enter
add
std
or
jne
dec
pop
dec
incb
pop
push
popf
shl
jnp
pop
adc
addr16
add
mov
call
adc
incl
mov
inc
pusha
loopne
pop
cs
je
cmp
in
add
dec
stos
dec
mov
add
mov
and
dec
cld
clc
daa
and
adc
or
aaa
popa
push
pop
jle
in
sbb
cld
add
or
cmp
sbb
or
jmp
or
push
mov
xor
adc
and
push
ds
and
cld
mov
clc
es
fcomi
js
mov
mov
popa
inc
mov
dec
fsubrs
clc
int3
pusha
mov
sub
fbld
sahf
mov
orb
jbe
int3
jae
cs
aas
lea
add
add
push
xor
out
scas
mov
cmp
lea
push
mov
push
jbe
andl
pop
mov
rolb
fldenv
or
push
movsl
rolb
pop
pop
lock
test
add
into
js
push
je
cltd
sub
mov
mov
push
sub
lea
push
fabs
mov
jbe
daa
mov
loop
and
sub
pop
dec
std
pop
adc
xor
and
aas
sbb
push
int
sarl
jle
lea
daa
test
hlt
orb
mov
dec
lock
dec
sub
add
pop
movb
lcall
das
xchg
pop
dec
inc
push
jle
sbb
jb
push
push
inc
add
push
xchg
pop
pop
movsl
pop
call
push
add
mov
ret
mov
xor
cmp
movsb
or
js
pop
sub
add
arpl
xor
faddl
add
and
testb
add
cmp
or
pop
pminub
rorb
and
into
sub
shll
cli
mov
xor
lds
adc
or
ljmp
jp
lret
pop
push
and
push
or
or
or
pop
push
and
cmp
pop
test
lock
sar
shl
add
nop
adc
bound
outsb
jecxz
mov
add
mov
inc
inc
jo
sbb
dec
daa
test
add
mov
mov
test
push
orb
jmp
mov
mov
jmp
lea
sub
cmc
push
jge,pt
cmc
rep
inc
sub
push
insl
or
or
xor
mov
out
cmpl
add
or
je
push
mov
sbb
lods
mov
cld
call
add
adc
out
pop
test
push
pop
sub
adc
mov
mov
mov
movsb
rorb
add
adc
movsb
cmp
imul
push
lcall
push
cmpb
or
shlb
push
shlb
xor
je
inc
movsl
inc
and
push
paddusb
sahf
mov
lock
fcmovnbe
dec
pop
sbb
cmp
inc
adc
out
repz
lea
test
not
push
lret
or
lea
dec
test
hlt
push
test
jb
jae
and
mov
mov
mov
mov
push
dec
mov
orb
xor
jge
sub
push
lock
jecxz
bnd
sub
int
dec
jbe
pop
enter
mov
push
cmp
add
fcoms
ret
fidivl
pop
arpl
in
xchg
xchg
das
push
push
in
xchg
es
pop
stc
sbb
add
jnp
in
push
sbb
inc
adc
push
sub
xor
add
fbstp
jmp
mov
sbb
loopne
in
loopne
inc
sti
cmp
mov
inc
inc
adc
cs
cmp
stc
cs
sub
pop
inc
dec
inc
pop
dec
dec
repz
mov
stos
aas
push
and
lods
out
insb
test
jb
fnclex
sub
sbb
mov
add
fnsave
mov
iret
jmp
addr16
mov
add
movb
inc
add
add
clc
stc
push
pop
sbb
jo
mov
push
leave
test
xchg
in
hlt
jle
enter
adc
and
sub
int3
add
jo
add
ficoml
sbb
testl
sbb
sbb
mov
into
mov
sbb
xchg
jge
inc
push
sbb
inc
clc
cmp
jne
add
xchg
push
test
and
subl
or
adc
add
jmp
data16
xchg
stc
jmp
xor
aas
ljmp
add
mov
out
jecxz
bswap
loopne
xor
add
inc
push
movsb
icebp
gs
ret
or
popa
call
adc
and
inc
pusha
adc
jno
mov
jge
sti
jle
jns
cmp
push
movsl
popa
sub
adc
pop
movsb
push
add
and
aas
clc
or
mov
lock
cmp
pusha
mov
insb
pop
lods
and
or
push
aad
adc
insb
dec
mov
jb
shl
subb
adc
pop
lea
adc
test
push
es
mov
sbb
in
push
shl
popf
scas
mov
lahf
add
jnp
shrb
push
enter
add
js
jb
mov
pop
xchg
fadds
ret
sub
xchg
add
jmp
sti
insb
rorb
rcl
addb
fdivrs
or
lock
mull
lsl
jmp
lock
push
push
inc
shr
rcr
shr
rcr
or
xchg
xchg
cmp
div
pop
dec
test
mul
pop
jb
cmp
or
cmp
or
roll
push
adc
stos
test
jle
neg
inc
lret
scas
enter
pop
ret
adc
ret
sub
je
sarb
xchg
stos
pop
jmp
jbe
and
mov
inc
adc
cmc
inc
in
addb
and
inc
xor
call
cwtl
jbe
xchg
or
xchg
icebp
cmpb
sub
pop
or
pusha
mov
mov
xchg
add
cmp
push
cmc
ljmp
stos
test
xchg
mov
repnz
adc
mov
dec
cmp
notb
adc
inc
and
add
xlat
mov
add
subl
mov
push
repz
xchg
inc
clc
pop
xor
inc
add
push
sbb
and
sbb
cmp
sbb
insl
and
out
mov
xchg
and
ret
ret
es
pop
ret
mov
push
lcall
and
and
add
xor
in
out
fildll
push
push
pop
nopl
imul
add
cmp
mov
sub
inc
loopne
xchg
popa
adc
ljmp
jne
push
add
test
out
cmp
pop
inc
cmp
mov
add
stos
adc
shll
popa
dec
add
push
fs
push
mov
fadds
dec
and
loope
or
pusha
and
or
pop
inc
push
inc
push
or
xchg
lret
movsl
mov
add
lock
adc
cmp
mov
or
pop
outsb
je
add
or
jge
dec
cs
xchg
jbe
and
in
rep
fsub
cmp
inc
and
sbb
sub
sub
mov
movsb
cmpsl
cmc
roll
add
cwtl
push
pop
cmpsb
mov
daa
loop
les
je
mov
sub
or
xchg
sub
mov
xor
sub
mov
imul
inc
push
push
add
mov
xchg
xchg
faddl
add
pop
push
imul
push
add
adc
pusha
iret
call
mov
sarb
ja
dec
fcompl
aam
sarb
push
data16
ret
push
je
mov
js
test
sub
push
mov
sub
push
mov
fcompl
test
int3
cmp
mov
lds
lods
int
mov
jmp
adc
outsl
push
lret
dec
jae
adc
imul
inc
push
lods
mov
xchg
jbe
dec
xchg
fdivrs
icebp
lock
nop
aam
xor
in
adc
inc
inc
fidivl
jge
add
aad
mov
movb
and
enter
jae
push
sub
push
into
sub
push
ljmp
cmp
jg
inc
jmp
mov
mov
data16
jne
imul
bound
fnsave
movsb
dec
push
inc
mov
enter
jno
in
dec
xor
jbe
je
dec
xor
je
mov
xchg
mov
rolb
xor
icebp
xor
pop
aad
and
mov
push
adc
and
add
adcl
push
stos
xor
mov
bound
sbb
sub
adc
jnp
lcall
jge
mov
sahf
jge
jae
add
push
and
mov
aaa
xor
or
scas
add
mov
push
pop
stc
xor
pop
inc
rclb
std
dec
add
mov
cli
and
shl
test
push
pop
pushf
or
shll
lcall
mov
cmpsb
ljmp
mov
jp
xor
sub
and
mov
cld
adc
ja
mov
sub
rol
clc
ret
adc
orl
and
mov
test
js
xchg
adc
and
orl
das
adc
push
gs
and
fildll
pop
cmp
or
cltd
sbb
rclb
pop
notl
stc
loopne
mov
stos
sub
inc
lock
popa
and
xchg
add
or
adc
outsl
xorb
fs
push
fs
and
icebp
jg
into
std
or
and
or
xor
mov
or
je
xchg
cli
adc
lea
lea
or
mov
jnp
out
sahf
pop
jbe
cmp
push
sbb
sbb
fmull
or
faddp
fiadds
loopne
push
pop
inc
mov
adc
adc
push
push
add
and
inc
jle
ret
mov
mov
mov
and
pushl
add
jno
push
cmp
andb
loop
mov
push
push
daa
shl
push
xor
jo
mov
push
dec
mov
leave
ds
arpl
ret
jmp
push
add
out
bound
enter
xlat
insb
enter
js
adc
add
or
jo
outsl
rol
jl
or
sbb
cmpsb
shlb
push
sub
add
jns
mov
pop
push
hlt
cmp
cmp
lret
cmp
and
movsl
pop
mov
xchg
and
pop
adc
test
aas
push
ds
call
add
xor
xor
loopne
repz
mov
jg
jo
scas
call
aam
sbb
in
rol
cmpsl
mov
pop
cmp
sahf
fs
add
sub
mov
xor
insb
je
sub
and
push
or
sub
ss
dec
hlt
push
mov
push
imul
adc
loopne
mov
jmp
imul
pusha
jg
lcall
stos
ret
add
adc
adc
scas
add
and
clc
das
xor
lock
mov
gs
adc
ds
rol
pop
ja
and
push
adc
adc
movsl
fisttps
jp
mov
adcb
add
ret
xor
adc
push
sub
ss
or
push
xor
lock
out
xchg
inc
mov
mov
das
ficoms
push
mov
cmc
pushw
mov
adc
sti
add
mov
inc
fsubr
es
outsl
subb
inc
jmp
mov
cli
popf
pushl
leave
xor
dec
sub
jg
sbbb
xchg
pop
cmpsb
daa
add
sub
adc
cmp
jge
and
inc
mov
push
orb
rorl
nop
decb
fsubrs
cmpsb
mov
or
loopne
icebp
cmpsb
mov
cmp
jecxz
aas
insb
popf
std
sub
push
lods
mov
cmp
andb
or
std
inc
jmp
push
mov
cs
push
or
xchg
aad
rcll
lea
and
cmpsb
nop
out
add
mov
aad
or
and
sub
add
fcoml
dec
sub
or
das
jl
incb
push
mov
movsb
andl
mov
fwait
mov
stos
popf
push
mov
scas
and
sbb
push
pop
mov
cmp
jle
jle
sub
cmp
xor
popf
shl
sbb
jmp
dec
push
in
jbe
cmp
inc
sub
jae
ret
or
cld
data16
ret
test
sbb
sbb
mov
sub
insl
xorl
mov
pop
jge
iret
rcrl
mov
fucomp
jge
negl
movsb
jne
repnz
cs
mov
jae
imul
sbb
inc
popa
cmp
and
dec
jo
xchg
rclb
outsb
js
push
bound
lahf
and
cmp
jnp
lea
push
and
inc
mov
xor
mov
push
movsl
jbe
sub
mov
mov
loopne
je
mov
loop
sub
in
mov
popf
es
insl
ret
repnz
sbb
add
or
loope
testl
fnsave
clc
inc
jmp
sahf
dec
dec
or
cmp
cmp
inc
cmp
and
dec
mov
ja
lock
cmp
or
jecxz
call
push
inc
jmp
cmp
int3
je
pop
xor
scas
mov
dec
push
adc
jne
stos
pop
rorb
aas
enter
stos
xchg
push
fsubrs
cwtl
jge
dec
aam
jb
dec
adc
loop
out
sub
cmp
cmp
mov
mov
pusha
movsl
sub
mov
out
in
mov
or
sub
xor
jne
add
xchg
mov
loope
add
ss
cli
int
call
add
aaa
or
and
add
mov
push
data16
movsl
xchg
cmp
add
enter
ret
cmp
mov
out
addl
jne
pop
neg
sarb
roll
dec
pop
daa
lea
nop
inc
mov
jne
inc
xlat
jae
inc
not
pop
mov
push
or
mov
xchg
aas
into
ja
mov
decb
adc
pop
inc
testl
out
jne
sbb
cs
lock
sub
decl
lret
jne
inc
or
pop
adc
cmp
pushf
and
iret
int3
lcall
and
pop
xchg
nop
fwait
add
cwtl
xchg
test
push
pushf
insl
fildll
push
lea
lcall
test
mov
adc
clc
and
cld
sub
mov
cmp
jb
mov
push
mov
inc
ja
mov
incl
cmpl
insl
mov
xchg
pushf
xor
imull
movsb
mov
sbb
sti
jg
adcl
add
xchg
loop
sub
in
shll
shr
pop
insb
ljmp
ljmp
push
adcb
mov
bound
or
adc
inc
mov
lea
xchg
mov
aaa
or
ljmp
jg
and
shrl
shl
shr
or
mov
mov
adc
sahf
dec
mov
jne
outsb
mov
mov
aam
das
mov
push
sub
push
cmp
sub
jne
xchg
jo
sar
sub
rcr
loopne
aaa
xchg
fiaddl
mov
pop
inc
jo
fiadds
push
out
jmp
mov
in
aad
fisubrl
push
lds
add
dec
mov
mov
mov
and
push
int3
jmp
hlt
push
or
daa
mov
inc
add
outsl
popl
lods
test
ljmp
ret
jne
add
add
add
or
xorb
dec
adc
jmp
sub
test
sbb
sub
repnz
movups
xchg
pop
xchg
jo
mov
inc
mov
mov
inc
sbb
add
out
add
and
push
ret
or
iret
repz
test
enter
push
out
imul
ret
call
mov
or
add
testb
adc
sbb
mov
dec
jecxz
sub
push
outsb
clc
add
pop
int3
sbb
jne
xchg
pop
jno
mov
arpl
cmp
mov
add
xor
add
faddl
or
cmp
pop
test
arpl
pushf
add
or
jne
dec
fld1
mov
push
add
mov
sbb
dec
adc
jo
in
ret
mov
rcl
repz
inc
sbbl
mov
push
outsb
cmp
mov
xchg
std
insl
ret
dec
mov
mov
pusha
xchg
inc
mov
test
pop
pop
lea
adc
fwait
mov
imul
rorl
sbb
push
andl
pop
add
insl
fs
xorl
inc
outsb
test
or
pop
call
inc
outsl
pop
rcl
dec
sar
pop
rorb
lret
mov
sbb
push
jno
iret
jmp
sbb
hlt
andb
loope
cwtl
pop
mov
xchg
inc
lahf
cmpsb
jns
movsb
lods
movsb
adc
mov
test
sahf
add
push
add
or
push
lock
shrl
dec
xor
push
lcall
xor
or
repnz
mov
pop
jmp
ret
jmp
mov
imul
push
xchg
or
jmp
mov
in
sti
cld
add
push
in
add
or
fs
cmp
movsb
iret
lock
inc
loope
push
lea
std
jg
iret
add
leave
sar
mov
aas
or
testb
adc
andl
sub
mov
adc
test
cmp
lret
loope
cmp
pushl
push
mov
mov
sbb
cltd
lods
loop
inc
loopne
inc
pop
ret
test
sub
in
loopne
clc
subb
inc
pushl
mov
rcll
jmp
pusha
cmp
mov
cmp
cmovb
popf
and
pushw
push
sub
xchg
enter
push
inc
mov
add
add
mov
js
mov
mov
add
fists
outsl
adc
push
hlt
mov
andl
test
sbb
outsb
jmp
and
jae
pop
imul
sub
add
mov
enter
scas
fsubs
in
adcb
popa
xchg
inc
adc
fadd
inc
call
jmp
mov
adc
dec
inc
outsb
mov
push
dec
hlt
lea
pop
or
inc
pusha
jge
cmp
pusha
xchg
sbb
lea
addb
jns
lock
movb
rcr
pop
add
cmpsb
inc
mov
shrb
jo
not
mov
incl
cmpsb
int
push
test
push
or
add
jmp
cmpsl
mov
sbb
cmp
test
jne
gs
inc
xor
mov
pusha
cmpsb
sbb
pop
ret
jnp
sub
push
jmp
sub
inc
sub
inc
cmc
scas
dec
mov
jl
pusha
dec
iret
test
arpl
mov
addb
add
pop
cld
jnp
mov
std
sub
jge
mov
mov
inc
mov
sbb
add
xchg
dec
xor
enter
or
out
ret
and
mov
std
xchg
clc
jo
inc
lret
movsb
adc
dec
xor
jae
mov
pushf
loopne
imul
jmp
sbb
push
addl
pop
movsb
lds
xchg
and
out
sub
jne
jge
dec
cmp
ret
sub
clc
and
les
push
xor
jne
push
sbb
shlb
and
jns
add
or
adc
fiadds
into
jg
sbb
movsb
or
pop
data16
mov
test
sub
sbb
and
or
and
add
mov
movsl
sub
push
jne
sbb
adc
xchg
inc
rolb
push
cmp
jmp
mov
lock
dec
test
push
shrb
adc
lock
enter
lods
std
cmpsb
test
inc
push
es
andb
sub
fiadds
mov
mov
test
or
mov
jg
jmp
push
mov
and
mov
sbb
pop
xchg
aas
push
jae
adc
inc
lods
cmp
out
sub
mov
cs
loope
pop
negb
add
ret
mov
fidivrs
adcl
rdtsc
andb
cmp
lret
and
sbb
into
push
xchg
cmpsb
or
jmp
les
test
or
mov
cmp
sub
pop
test
icebp
and
or
lds
les
lock
loope
inc
ss
icebp
jbe
lret
jmp
sbb
mov
addr16
xor
adc
orb
mov
push
fsubl
inc
out
or
xor
inc
mov
mov
fwait
dec
test
xchg
add
add
xor
cmpb
int3
inc
popf
mov
mov
mov
mov
adc
fcompl
push
nop
mov
mov
and
cmp
mov
jns
shlb
or
xchg
push
inc
push
mov
push
adc
pop
xor
es
aaa
scas
lock
je
aaa
inc
insb
pop
cmp
aad
mov
mov
jmp
test
push
and
enter
jl
add
jg
jmp
addl
js
pop
sbb
xor
shr
or
aaa
mov
cmp
cmp
loope
add
mov
jle
ljmp
jb
ret
mov
add
inc
lcall
adc
or
clc
pop
adc
push
inc
mov
dec
ret
pusha
push
sarl
inc
mov
dec
addl
push
xchg
push
dec
lret
push
or
loope
jmp
xor
xor
mov
dec
add
adc
test
rclb
push
into
push
and
jecxz
lahf
les
cmp
and
pop
add
cmp
sbbb
xchg
data16
push
and
testl
jb
daa
or
sub
inc
nop
mov
add
sbb
and
addr16
push
loopne
push
inc
dec
pop
shl
mov
daa
mov
mov
and
inc
jl
mov
scas
add
inc
lods
xchg
sbb
data16
rcrl
push
andl
sbbb
add
push
inc
in
in
push
mov
or
fdivl
push
enter
mov
jo
or
push
out
and
pop
cwtl
push
jne
push
jge
mov
out
int
xor
pop
movsb
dec
rcrb
or
fcoms
cmp
lcall
push
pop
inc
inc
pushf
or
sbb
mov
adc
ret
std
add
test
push
push
push
jnp
xchg
pop
pop
jne
pop
push
pcmpeqw
sbb
add
adc
or
js
or
in
or
mov
xchg
mov
adc
xor
lret
les
push
jmp
cwtl
clc
pop
dec
cmp
mov
in
incb
mov
or
push
dec
icebp
imul
add
adc
adc
mov
imul
dec
or
in
xchg
and
or
cmpsl
shrl
clc
mov
fadd
or
push
sbb
dec
cmpb
pop
dec
and
push
push
jne
jge
push
rcll
test
xor
cmpl
push
mov
or
movsl
sbb
fisubl
or
jmp
nop
or
cmpl
and
adc
push
mov
mov
mov
mov
sub
pop
push
mov
adc
jno
lods
in
mov
jge
add
cmp
test
xchg
push
and
sub
cwtl
or
int3
mov
jo
inc
mov
pop
inc
fnstsw
mov
sbb
inc
mov
or
in
in
out
add
or
bound
adc
adc
icebp
cmovnp
pop
add
loopne
jmp
cwtl
or
les
xchg
das
mov
or
cwtl
daa
push
adc
jmp
jbe
or
push
test
mov
inc
inc
dec
cld
movb
roll
das
out
sub
inc
pushf
xor
mov
ret
add
add
bound
inc
loop
push
push
pop
and
sbb
pop
add
adc
or
stc
jb
ljmp
xchg
inc
stos
sub
call
add
push
orb
mov
xorb
or
clc
jnp
cmpsl
or
add
inc
in
test
pushf
push
jne,pn
arpl
sub
or
add
out
and
inc
fsubs
movsl
out
add
rcr
nop
subl
shl
sbb
aad
je
jl
xor
push
ret
sub
pop
inc
test
cld
pop
in
cmp
jne
cwtl
add
add
xchg
xorb
test
mov
push
adc
jge
mov
rcrb
push
movsb
xor
mov
pop
mov
mov
dec
cs
and
ljmp
fistpl
incb
or
je
sarb
inc
cmp
mov
movsb
push
sub
add
push
mov
dec
jp
sbb
or
imulb
mov
orl
and
sbb
cmp
mov
fdivl
mov
add
in
cmp
lahf
daa
testl
lods
jle
lcall
scas
adc
fisttpll
call
jne
stos
out
repnz
sub
pop
or
inc
mov
add
stos
clc
adc
jle
out
arpl
mov
mov
movsb
dec
mov
sbb
mov
inc
add
enter
xchg
out
lret
adc
sbb
iret
add
jg
cmp
call
les
jae
add
loope
mov
jo
push
push
in
xchg
pop
sbb
addr16
addr16
ljmp
and
add
mov
adc
jo
jecxz
cltd
mov
or
cmp
cmp
adc
in
jbe
ss
in
in
sub
xor
int
loopne
cmp
inc
leave
leave
in
movsb
and
inc
cmovs
leave
leave
push
push
pop
add
jb
fs
jb
je
jl
iret
sbb
add
adc
fs
dec
mov
xchg
cwtl
pushf
dec
es
mov
dec
repnz
xor
enter
leave
and
es
xchg
dec
xor
in
xchg
dec
xor
in
aam
hlt
dec
xor
and
cld
add
inc
jo
inc
add
add
xor
or
adc
and
sbb
and
and
dec
sub
and
dec
xor
cmp
xchg
dec
roll
dec
dec
es
jbe
mov
daa
cltd
fs
pop
pop
pusha
sbb
cmp
jg
pop
add
add
or
add
test
push
rorb
xor
mov
xor
lcall
mov
and
adc
nop
adc
rorb
sbb
xor
and
and
cmp
cmp
mov
dec
rolb
int
xor
dec
int3
add
sub
enter
pop
sbb
mov
adc
add
loope
js
ret
and
and
jmp
or
pushl
je
dec
repz
sub
fcom
sbb
pop
push
or
jle
dec
sub
pop
add
xchg
xor
sub
faddp
jle
xlat
mov
lret
and
sbb
dec
xchg
add
or
or
out
and
mov
mov
or
not
xor
loope
xor
and
pushf
sbb
or
jmp
xchg
fucomi
add
and
rcl
add
test
js
add
fcoms
adc
xchg
test
dec
cmp
fcmovbe
xor
ss
mulb
shll
and
test
rorl
or
sub
or
call
add
pop
orl
lret
jmp
inc
popf
mov
mov
cld
mov
and
jae
mov
sbb
add
or
dec
or
jg
dec
clc
or
or
inc
and
sbb
es
inc
ljmp
aas
pusha
mov
pusha
loope
pop
add
push
jmp
sbb
xchg
push
sahf
sub
pop
fstp
cmp
ds
pusha
fldl
cmp
jmp
mov
loope
dec
jg
testb
dec
in
mov
adc
sti
add
pop
jns
testl
fistpll
xchg
sub
mov
imul
jne
orl
and
adc
or
add
add
out
and
sbbb
or
jnp
jb
sbb
jmp
push
and
or
push
or
std
fwait
adc
inc
push
fstps
jmp
fisttpll
sub
adc
fldt
aam
outsl
loope
push
hlt
adc
push
stos
push
jbe
je
adc
divl
push
sbb
push
cmp
push
xor
test
or
add
push
or
inc
call
loope
push
aaa
sbb
mov
test
out
cmp
pop
add
rolb
fsubr
dec
sub
sub
jmp
sub
jb
jp
push
or
das
add
lods
sbb
test
das
add
sub
dec
add
mov
rclb
mov
inc
mov
dec
xor
mov
push
add
mov
add
sbb
in
or
test
xchg
mov
frstor
jne
repz
mov
push
mov
test
rcll
jg
data16
pop
xchg
scas
cld
aam
xchg
mov
cli
shrl
ficoml
orl
stos
xchg
sub
jle
jp
addr16
push
pop
jmp
pop
data16
lock
icebp
lock
pop
lcall
cmpsb
mov
sbb
jae
push
pop
cwtl
out
add
addr16
jle
push
add
push
sarb
sarl
fistps
and
pop
mov
jmp
push
pop
adc
adc
ret
and
lcall
add
outsl
add
dec
pop
fsubs
inc
cmp
je
sbb
fmull
pop
cltd
cmpsb
imul
and
hlt
adcl
and
je
pushf
sub
cmpsl
add
scas
stos
and
or
sti
dec
and
out
push
cmp
fstpl
inc
popa
add
fsubrp
mov
mov
leave
dec
inc
outsl
mov
and
lock
add
test
popa
inc
js
or
or
mov
ss
jle
or
fildl
sub
xchg
cmp
sub
lock
or
add
or
mov
cmp
adc
jae
mov
and
jbe
shrb
push
das
adc
inc
cmpb
scas
mov
imul
push
xchg
or
jl
push
jno
addb
add
push
or
mov
out
jne
je
mov
xchg
loopne
jecxz
into
shlb
dec
add
push
cmp
add
shufps
mov
stos
xchg
lret
lock
or
sbb
decl
add
push
mov
sub
into
pop
out
addr16
mov
sbb
inc
andb
ret
lea
sub
enter
test
dec
out
fld
fucomp
pop
fnstcw
lahf
add
mov
mov
xchg
orl
dec
pop
and
mov
adc
sbb
shll
push
or
js
mov
adc
add
or
push
out
mov
sbbl
or
or
push
and
jo
mov
sbb
sub
or
sub
push
sbb
hlt
mov
dec
ljmp
xchg
jnp
fnstsw
movswl
shll
inc
flds
and
rorb
xchg
xor
fdivl
or
insl
lahf
and
mov
push
push
mov
or
or
nop
fcmovnbe
fwait
mov
adc
sbb
pop
mov
adc
repnz
jp
sbb
lea
movsb
fldpi
xor
mov
or
sbb
adc
add
sbb
push
lret
dec
sbb
xorb
push
cmp
xsaveopt
pop
insl
test
mov
mov
cmp
or
andl
pop
popa
cmpsl
xchg
out
jmp
and
loopne,pn
insl
mov
push
jg
xchg
int3
or
cmpsb
test
mov
dec
int
mov
jo
and
stos
push
pop
inc
js
test
lock
mov
nop
es
mov
inc
mov
popa
mov
sbb
sahf
adc
push
ja
inc
mov
test
sbbl
push
pushf
add
lcall
dec
sbb
imul
mov
add
jo
fwait
mov
rorb
je
push
cmpb
test
repz
push
sti
jbe
xchg
les
test
pop
js
adc
daa
xor
push
jb
sub
or
loope
push
mov
add
jne
lret
pop
les
inc
std
cmp
stos
or
or
mov
dec
imul
dec
push
or
inc
cltd
lock
add
jle
sub
pop
test
test
sti
into
jne
mov
mov
mul
pop
test
in
sub
jl
mov
xchg
fisubrs
stos
stos
jp
pop
pop
push
movl
jbe
cmp
push
test
rorb
push
mov
push
push
pop
add
popa
gs
xor
cmp
ret
dec
or
sbb
fiadds
mov
pop
mov
lret
push
inc
xor
rolb
ljmp
lret
loop
rolb
cmpl
and
fwait
sti
std
dec
dec
pop
pop
and
mov
out
mov
fsub
iret
loopne
adc
iret
jbe,pt
dec
imul
outsl
mov
add
cs
or
and
clc
sbb
sub
cmp
inc
dec
inc
push
pop
addps
add
lock
sahf
jns
add
sarb
and
mov
mov
or
cmp
pop
pop
clc
in
cmpl
add
xor
daa
or
idivl
pop
or
push
js
sub
inc
aam
iret
inc
mov
dec
xor
cmp
pop
addl
das
das
call
inc
loopne
dec
aam
lock
shl
sub
sub
in
lea
xor
adc
iret
push
ds
push
or
dec
dec
scas
and
aam
out
ret
xchg
and
inc
loope
test
fwait
or
pop
sub
mov
sbb
mov
and
lahf
or
cwtl
pop
jb
xor
push
and
test
lods
daa
dec
fbld
sbb
test
arpl
dec
cwtl
rorl
loopne
rcrl
dec
xor
cmc
and
sbb
add
jmp
pop
push
push
jb
or
add
mov
cmp
push
daa
jo
sbb
cmc
hlt
cmp
sub
push
aas
mov
sbb
xor
mov
inc
ret
frstor
jge
lock
movsb
addr16
das
cmp
test
arpl
arpl
daa
add
shll
sub
andps
cmpl
lock
stos
pusha
out
into
out
add
test
icebp
es
mov
and
mov
sub
mov
and
jge
mov
dec
lods
shl
test
cld
pusha
mov
jo
or
xor
xor
inc
or
fisubs
dec
add
lret
nop
lret
or
inc
lock
and
push
or
cs
or
sbbl
push
xchg
dec
push
in
inc
push
sub
mov
push
jne
in
push
mov
push
pop
dec
sub
pop
mov
push
pop
adc
mov
or
lock
dec
lret
push
adc
mov
or
stc
add
jbe
pop
jne
cmp
js
add
das
xor
es
mov
jle
inc
mov
fmuls
stos
mov
adc
or
repz
nop
mov
fcoms
xor
sti
scas
push
mov
xchg
cmp
insb
idivb
pop
inc
cs
or
ss
cmp
je
or
clc
mov
xor
mov
dec
add
mov
add
sbb
sbb
add
or
mov
imul
add
add
sbb
and
fcompl
fistpll
jb
inc
adc
cltd
dec
enter
outsb
push
and
das
push
inc
leave
into
mulb
inc
iret
test
add
adc
push
jbe
xchg
or
xor
popl
loop
xchg
xor
adc
adc
push
add
adc
cmp
xchg
xchg
xor
sub
rol
fadds
or
sub
rcrl
or
fdivs
or
jle
xor
scas
cmp
ret
scas
dec
loopne
push
pop
sbb
rorb
sub
dec
adc
inc
les
sub
mov
popf
mov
inc
cmpl
mov
aam
shlb
sub
adc
push
pop
xchg
jecxz
adc
or
sbb
xchg
add
lods
ja
push
xor
jmp
sub
add
mov
mov
aad
sbb
mov
cmpsb
push
hlt
mov
mov
inc
aam
das
fsubrl
mov
fadd
inc
add
fs
cltd
popa
cmp
push
lcall
or
rcrb
testb
lcall
fldt
push
push
mov
daa
test
insb
in
jns
and
dec
or
xchg
push
mov
or
pop
gs
cmp
adc
movsl
and
and
mov
iret
ret
jmp
aad
and
scas
jmp
sbb
sub
adc
ja
add
adc
movsb
push
push
adc
shlb
or
lret
sbb
inc
sbb
pop
gs
or
mov
jmp
inc
shll
out
pop
xor
test
push
fadd
xor
xchg
mov
pop
add
xchg
test
mov
stos
cmp
jge
adc
cmp
push
inc
and
jb
xchg
ss
mov
or
mov
cli
mov
enter
or
or
adc
cld
push
and
fstpl
mov
or
jne
jb
sub
imul
lea
xchg
sub
cmp
inc
bound
cmc
mulb
test
sahf
push
add
sub
dec
sbb
test
enter
js
andb
bound
pushf
std
das
fdivrl
sub
leave
and
add
or
sbb
movb
and
mov
xchg
movsb
mov
neg
sbb
mov
adc
and
adc
jg
ret
pop
hlt
es
bound
shll
add
xor
popf
gs
or
dec
subb
pop
fidivrs
daa
and
call
xor
push
jb
add
cwtl
push
inc
aam
fisubs
or
mov
fldt
ja
setns
mov
or
xor
push
add
dec
loopne
push
clc
gs
sbb
rolb
fadds
movb
cmp
xchg
push
adc
fs
cld
add
inc
mov
enter
mov
dec
cmp
jge
mov
jl
movsl
clc
cwtl
xor
mov
mov
xor
out
andb
cmp
push
shr
pusha
cmp
subl
incb
push
adc
sahf
xchg
add
daa
and
ficompl
lock
push
ret
mov
xor
jo
out
shl
dec
nop
in
and
push
ret
in
sbb
js
jg
or
or
jmp
adc
or
shl
fimull
jle
cmp
jl
mov
fcmovb
jb
xchg
xchg
sbb
add
cwtl
push
in
lock
or
add
rcll
dec
dec
inc
dec
pop
rorb
sub
jb
or
sbb
cmp
sarl
in
in
icebp
push
orl
jo
and
and
adc
es
mov
dec
adc
push
loopne
mov
mov
push
inc
cmc
movw
shlb
push
jle
jmp
cmpb
push
sbb
lods
add
jmp
lock
sahf
fwait
lods
inc
enter
cmpl
neg
call
adc
lock
cli
ret
aaa
push
lods
sbb
pusha
addb
inc
mov
aas
mov
push
push
insb
shrl
lock
repnz
je
aad
or
inc
and
jbe
adc
addb
bound
or
push
push
mov
addb
sbbb
jne
push
adc
bound
nop
cmp
pop
sbb
sbb
push
sub
cmp
sbb
enter
push
lock
push
push
scas
sbb
out
dec
out
sbb
add
loopne
jge
inc
or
pop
inc
mov
mov
push
add
sub
add
cmp
sbb
mov
ds
andb
fnstenv
outsb
outsb
mov
pop
or
pop
data16
in
add
imul
lds
aaa
inc
popa
je
inc
je
dec
add
add
cmp
xor
xor
sub
pop
sub
int
mov
sbb
push
mov
add
xchg
and
addb
bound
add
sbb
inc
mov
mov
and
arpl
add
pop
cmp
push
mov
or
sbb
test
and
out
ds
and
insb
daa
push
adc
cmpsb
xchg
cmpb
jne
nop
cwtl
mov
testl
cwtl
push
xchg
sarl
push
fprem
popa
sbb
hlt
adc
test
push
inc
dec
mov
mov
cmp
notl
ljmp
inc
mov
hlt
ja
in
and
mov
popl
mov
sub
add
aam
mov
lea
and
add
inc
test
setnp
jno
dec
sti
push
test
loop
push
pop
pop
decl
xor
gs
sub
and
stos
sub
ror
mov
std
es
pop
ret
push
addb
adc
xchg
movsb
jle
or
mov
and
fidivrs
aam
jbe
add
cmp
push
sub
test
sub
movsb
push
mov
pop
inc
mov
cmp
nop
xchg
adc
and
dec
fwait
xchg
mov
mov
cmpl
mov
rclb
cmp
cmp
mov
push
mov
fsubrl
or
mov
pop
pop
adc
mov
lock
pop
pop
pop
dec
sar
add
jl
cmp
enter
loope,pn
test
jb
adc
test
mov
ss
mov
sbb
dec
je
dec
push
push
or
hlt
jmp
or
jmp
add
inc
out
add
xchg
orl
pop
adc
fistps
dec
ja
imul
sbb
push
adc
pop
ret
rorl
add
psllw
ret
stos
data16
test
leave
js
add
dec
mov
arpl
mov
dec
xor
gs
sbb
loopne
call
sbb
cmpsb
enter
loopne
cmc
int3
push
fidivl
outsl
mov
or
rcrb
fmuls
xor
mov
jle
stos
test
or
jnp
and
adc
fiaddl
into
or
mov
sub
xor
xor
pop
and
stc
push
adc
pop
mov
mov
stos
dec
xchg
or
or
and
pusha
outsb
add
sbb
repnz
jmp
inc
add
add
call
rorl
or
ljmp
add
ja
loop
clc
shr
add
or
xor
add
shr
or
mov
push
push
adc
fistpll
shr
lret
add
mov
testb
test
or
add
mov
mov
mov
cmp
pop
cmp
and
add
jl
adc
movsl
dec
in
sbb
cmp
or
dec
push
inc
lcall
adc
and
sbb
inc
fisttpl
cmp
dec
sbb
adc
adc
sub
xor
inc
sub
call
xorb
push
rorw
cli
and
push
rolb
or
add
mov
cmpb
addr16
aam
cmpsb
and
xchg
or
orl
test
sbb
gs
inc
stos
xor
push
loope
pusha
fmuls
mov
fsubrl
add
cmpsl
std
sbb
jne
mov
sbb
dec
roll
or
cmpsb
or
xchg
or
push
pop
je
data16
sub
inc
data16
lea
outsb
sbb
dec
or
lock
pop
add
orb
loop
leave
mov
sbb
push
inc
test
loope
aaa
push
sub
pop
dec
mov
lea
repnz
sub
ret
faddl
pop
or
cmc
mov
xchg
add
lret
pop
cmpsb
fs
subl
popa
mull
push
stc
and
or
adc
ret
mov
and
jno
or
adc
insl
mov
jo
fdivrl
ja
pop
pop
xor
stos
sbb
pop
and
and
loope
pop
adc
test
xchg
repnz
ret
mov
sub
add
jbe
ljmp
dec
xchg
xchg
dec
icebp
adc
add
sub
push
adc
sbb
mov
and
xor
or
js
or
js
jmp
clc
sbb
mov
and
mov
scas
faddl
out
add
aam
sbb
add
pop
je
add
xor
adc
addb
movsl
xor
cs
dec
cmp
mov
push
std
inc
or
and
subb
sub
push
add
mov
cmp
and
or
ds
mov
sbb
add
call
ss
imul
push
inc
adc
loope
rolb
push
pop
and
add
leave
cmp
xor
aad
enter
cmp
in
mov
cmp
jle
inc
call
ja
shlb
jp
stos
or
cmpsb
sbb
mov
fwait
inc
xor
fucomi
mov
xchg
adc
test
and
jl
xor
ss
add
xor
inc
aam
push
or
xor
rclb
stc
push
test
or
jns
push
in
jmp
add
test
and
push
dec
test
insl
fwait
orb
and
aaa
jne
cmpsb
sahf
and
push
cmp
sub
mov
aas
jmp
mov
adc
lret
mov
jnp
imul
inc
dec
add
addr16
jbe
rclb
rorb
add
ret
or
and
sbb
fprem
out
roll
leave
add
or
je
mov
iret
push
inc
cmpsb
add
adc
inc
sbb
xor
les
bound
enter
ror
xchg
add
movsl
sti
lods
pop
xchg
adc
pushf
jo
subb
mov
lret
arpl
popa
sbb
rorl
jo
orb
scas
mov
push
dec
add
jg
jg
dec
jge
inc
inc
push
neg
neg
cmp
jnp
fcomps
sbb
inc
ss
shlb
sbb
xchg
fwait
mov
xorl
push
push
or
pop
adc
and
fnstenv
imul
push
jnp
adc
sbb
mov
add
or
jns
mov
dec
jne
pop
pop
pop
aam
shll
adc
xchg
test
lods
rcl
ljmp
shr
sub
cmp
adc
shr
pop
push
idiv
and
maskmovq
cld
lock
je
pop
pusha
or
clc
rorb
push
shrl
cmp
addr16
dec
or
fidivrl
pop
add
jae
adc
movsb
into
xor
adc
inc
cli
xor
dec
push
es
pop
or
push
or
aad
mov
into
jbe
rclb
aam
aas
xor
scas
je
hlt
dec
and
adcl
sarb
sbb
dec
inc
push
outsb
rolb
inc
cmp
cmovae
or
jg
popa
add
arpl
insl
or
sbb
adc
jecxz
dec
pop
pop
andb
test
data16
pop
add
push
ljmp
cld
inc
ss
adc
sub
and
pop
adc
popa
xor
out
cltd
movsb
cmp
cld
mov
enter
fcmove
jne
pop
cmp
inc
jmp
sub
add
rolb
inc
push
inc
mov
mov
sbb
or
mov
or
sub
adc
decb
add
es
mov
je
ljmp
subb
jl
out
push
cmp
ja
add
cmp
inc
xchg
jns
ret
cmp
jne
sarl
je
xor
adc
mov
inc
mov
pop
jl
pop
pop
je
dec
push
adc
adc
adc
iret
and
jb
dec
adc
push
and
push
mov
add
imul
or
fdivr
aas
cs
fisttps
push
movb
jmp
or
cmc
push
aaa
and
sti
add
mov
mov
jl
xchg
ret
mov
movw
jb
add
sub
inc
rcrb
les
out
xor
pop
mov
popf
testb
sbb
ret
mov
lods
sti
test
add
test
mov
fdivr
inc
jb
dec
mov
push
and
adc
rorb
adc
push
add
pushf
add
jmp
push
pusha
loop
mov
sub
push
imul
call
mov
imul
lea
sar
cs
mov
dec
into
movswl
xor
mov
neg
push
es
stos
mov
out
jge
cmp
mov
ret
inc
call
cwtl
inc
xorl
push
rcll
dec
sti
add
jmp
addr16
or
cwtl
mov
push
sub
inc
fwait
and
jl
mov
or
dec
jle
repnz
lcall
mov
mov
mov
mov
and
and
lea
out
daa
adc
andl
lcall
mov
mov
addl
ja
cmpsl
cmc
mov
dec
rorl
inc
testl
lahf
push
push
fsubrl
mov
xlat
or
inc
adc
loopne
lea
rolb
xorb
inc
mov
bound
scas
les
dec
or
xchg
pushf
fcoml
dec
or
adc
into
movsb
xor
sub
xor
cmp
lods
sarl
repnz
sub
sub
xchg
mov
xor
pushf
push
mov
jl
lods
fwait
cmpsb
jge
inc
lods
and
rorb
aas
jae
jle
cmp
decl
popa
add
rolb
rol
nop
popf
loope
pop
or
and
rorb
lods
sti
sub
sbb
push
lret
rcrl
inc
mov
fadds
push
dec
mov
jle
cwtl
shrl
sarl
shr
or
mov
dec
mov
pushf
ret
jp
cmc
cmp
lock
dec
and
jnp
repnz
add
cli
adc
repnz
repnz
rol
and
andl
loopne
rolb
es
push
fcom
or
cli
adc
and
fisubrl
popa
push
mov
dec
dec
nop
loopne
mov
push
fidivl
fldenv
enter
pop
and
or
push
pop
lret
enter
sahf
out
inc
mov
mov
dec
sbb
add
push
mov
or
inc
shll
clc
out
icebp
push
dec
dec
jge
out
mov
jb
pop
sub
jnp
adc
dec
in
aam
daa
adc
jne
cli
or
rcrl
fistl
inc
shlb
fdivrs
aam
enter
int3
jbe
dec
sub
movsb
sub
sbb
shlb
add
and
adc
dec
pusha
or
fmull
or
dec
rcll
mov
sbb
fcmovu
add
mov
or
inc
rcrb
cmove
add
xchg
add
idiv
and
xor
adc
mov
into
or
adc
inc
inc
mov
lock
and
repnz
add
inc
js
pop
hlt
lock
or
incb
jne
jne
cltd
add
loopne
pop
roll
sbb
lret
mov
dec
cmc
out
pusha
add
sbb
sub
xchg
sbb
idiv
xchg
mov
inc
add
inc
mov
dec
inc
cmp
jle
inc
aaa
stos
ljmp
sub
and
cltd
and
or
cmp
in
or
rcrb
stos
call
sahf
mov
xchg
cli
fcoms
xor
fiadds
mov
insl
call
mov
imul
call
leave
outsb
xor
mov
pusha
lea
push
js
dec
loope
mov
mov
add
lcall
add
fisubs
lods
jbe
add
into
sbb
or
ja
enter
loop
mov
sbb
sti
je
inc
ss
ljmp
or
lods
add
enter
outsb
fwait
pop
push
sahf
mov
and
dec
int3
addl
cmpsl
sub
test
call
add
add
xchg
add
into
or
mov
inc
ljmp
jmp
pop
add
dec
inc
sub
jge
add
jmp
cmpb
or
add
dec
cmp
repnz
inc
dec
add
add
fadds
and
mov
pop
and
sub
mov
jp
jne
loopne
roll
or
or
add
cmp
ja
dec
sub
add
add
add
push
mov
enter
mov
mov
fisubrl
mov
or
push
fcoms
test
outsb
or
stc
lret
add
or
push
push
das
push
movsb
adc
pop
or
or
imul
fdivrl
pop
scas
je,pt
or
ret
sbb
adc
mov
inc
cld
mov
ret
movsl
shlb
orl
pusha
inc
adc
jae
test
inc
pop
mov
mov
iret
enter
xor
into
pusha
inc
std
rcrl
and
pop
pop
in
cltd
lea
pop
cmpps
ret
dec
inc
prefetchw
sahf
inc
ret
or
push
lea
add
scas
rolb
xor
jbe
jne
or
or
mov
and
movsl
push
or
inc
je
pop
mov
pop
rol
push
je
lret
mov
or
sub
rcrb
add
stc
sahf
jnp
adc
jne
and
mov
lock
test
add
push
add
shlb
ret
cmp
cli
cmp
ret
mov
jl
add
movsl
ret
fldenv
sub
adc
nop
clc
mov
inc
es
nop
test
sbb
pusha
xor
push
scas
addl
push
or
mov
mov
fadds
inc
es
and
out
or
in
clflush
jge
pop
mov
repnz
test
lcall
or
adc
pop
addr16
add
fiadds
mov
sbb
xor
in
lock
inc
jg
into
into
and
mov
fisttpll
sarb
push
pop
arpl
push
outsl
nop
pop
sahf
pop
mov
aam
mov
daa
mov
or
sbb
stos
push
lret
fcoms
loope
pop
xor
push
adc
lock
hlt
add
leave
jge
sbb
cltd
push
pop
addr16
add
movsl
movsb
adc
adc
outsl
pop
test
mov
and
movl
inc
shl
or
cmp
pusha
sub
sbb
mov
push
outsb
jb
lret
int3
popa
push
sub
xor
pop
sbb
add
jno
add
mov
lahf
xchg
xchg
rol
ret
mov
les
sbb
add
clc
cwtl
pop
test
xchg
sbb
inc
and
ds
aaa
mov
mov
rcrl
in
popa
dec
arpl
jge
xor
push
cli
add
je
cmp
cmp
cs
xor
jo
div
gs
cmpb
addb
dec
jo
sarl
cmp
sbb
je
dec
fistl
call
cmp
je
test
icebp
fmuls
sub
icebp
mov
or
cmp
jbe
dec
or
sbb
mov
pushf
pop
out
mov
adc
mov
andl
xor
push
or
aam
sbb
jle
out
addl
push
les
and
gs
test
daa
push
add
push
mov
inc
pop
adc
loopne
cmp
js
add
and
pushl
push
fistl
fists
xor
mov
pop
fnsave
pop
and
shrb
xor
or
shrl
add
adcb
rclb
inc
popf
inc
popa
adcb
test
rcll
add
and
dec
cmpsb
push
xor
sbb
out
ljmp
jne
xchg
fidivl
dec
inc
push
aaa
sbb
dec
mov
scas
push
xlat
mov
ret
add
cmp
ret
pop
add
add
lea
fldcw
fsubs
clc
xchg
pop
inc
aam
popf
jmp
mov
aad
sahf
mov
mov
mov
jp
notl
add
stos
xchg
xchg
ret
jl
add
adc
out
or
push
loope
aaa
movsl
ds
cmc
mov
imul
outsb
adc
ret
dec
mov
push
dec
push
pop
xchg
test
sbb
pushf
inc
and
dec
je
cmp
pop
mov
mov
fiadds
push
mov
pop
shll
sarl
sbb
mov
adc
add
push
clc
cli
neg
xchg
gs
test
sbb
enter
xor
dec
sbb
call
mov
sub
jg
stos
test
pop
call
mov
mov
pusha
sub
sub
jbe
ljmp
sbb
gs
dec
mov
push
fiadds
test
mov
loopne
jmp
dec
fs
movsb
fistpll
add
cmp
in
subl
push
js
push
icebp
das
lret
mov
mov
add
out
dec
sbb
mov
insl
push
xor
and
ja
andl
push
mov
sub
sub
add
pop
and
mov
or
mov
es
dec
hlt
fnstsw
push
mov
je
jg
inc
adc
aam
les
loopne
jnp
cmc
clc
mov
pop
cmp
jbe
cld
and
push
push
push
inc
pop
adc
shrl
shlb
pop
movsl
sbb
and
in
rorb
nop
pop
fs
mov
inc
cmp
repnz
push
and
nop
test
cmc
rclb
lret
lea
add
lret
or
push
addb
pop
sbb
ds
insb
adc
add
sbb
mov
xorb
test
pop
xor
cwtl
dec
cli
in
sub
pop
or
sub
shrb
rcll
push
dec
push
or
out
jmp
push
push
ss
clc
addr16
jo
outsb
repz
or
movsl
sub
in
push
add
in
popa
enter
jmp
add
adc
add
mov
push
add
jg
rcll
clc
xor
sub
jo
dec
pop
inc
add
es
and
push
aaa
enter
inc
cwtl
pop
adc
mov
sub
cmp
xchg
pop
rol
shll
fabs
sub
and
mov
cmpsl
aas
add
add
test
in
adc
incb
push
inc
or
jo
mov
cmp
sub
das
or
lods
testb
dec
push
push
pushf
ret
sub
cmp
push
add
out
sar
ror
int3
jmp
sbb
sbb
xchg
jg
mov
insl
cld
mov
addr16
or
pop
xchg
loopne
addb
test
pop
xchg
les
cmpsl
clc
jo
adc
mov
sbb
inc
add
jmp
lcall
cld
mov
dec
outsl
scas
cld
lret
or
adc
add
dec
test
mov
sarl
int
aaa
adc
into
inc
enter
mov
or
fstps
adc
mov
cmp
and
sbbb
cmp
mov
push
scas
arpl
xchg
int
mov
fwait
mov
push
push
repnz
push
inc
add
or
sub
mov
fisubrl
clc
pop
add
mov
rcll
and
dec
stos
sar
addb
and
push
aam
enter
pop
cmc
pop
sub
add
add
mov
pop
xor
or
push
or
dec
or
clc
std
popa
and
std
data16
xor
inc
and
pop
xor
push
or
xlat
or
sbb
adc
fisubl
xor
hlt
and
mov
sub
mov
loope
pop
xchg
int3
arpl
out
sub
imul
dec
sub
push
outsb
mov
fsubrp
sub
dec
adc
xlat
lcall
inc
imul
add
xchg
jge
cmp
jle
aas
or
movsl
jge
loope
cld
jp
inc
mov
sbb
cmp
ja
push
test
fnsave
add
jle
dec
repz
mov
daa
push
inc
scas
inc
mov
inc
cmp
or
jnp
or
test
jg
add
pop
lock
mov
aas
lcall
mov
pop
lods
xor
push
pop
pusha
adc
shlb
inc
ret
call
xchg
push
into
lock
fadds
in
in
mov
popf
rcrl
dec
mov
xor
dec
add
push
cmp
sub
leave
inc
jo
fstl
or
sub
jb
aad
xlat
inc
lea
loope
xor
xchg
lret
push
push
aaa
push
ret
sub
push
xor
mov
add
pop
fs
out
mov
test
or
dec
inc
imul
sub
fcoml
inc
loopne
pop
cmp
cmp
sbb
mov
xor
push
and
mov
das
pusha
or
sbb
add
jg
xchg
shrb
fdivl
stos
xor
or
imul
cmp
bound
inc
cmp
ja
loope
movd
push
fldt
or
cmp
add
pushl
dec
fbstp
sbb
adc
inc
jns
add
jnp
jmp
mull
in
add
and
or
mov
ret
inc
cmp
xor
xor
lahf
cmpsb
sarb
inc
adc
and
and
inc
or
push
sbb
xor
aam
loop
or
std
data16
push
aas
sub
and
call
jl
mov
mov
or
cmp
ret
xchg
adc
or
sub
mov
pop
dec
xchg
jl
jle
inc
and
push
or
add
add
dec
popa
fcoml
dec
adc
add
cmp
jle
push
cmp
dec
sbb
movsb
cmpsb
fwait
add
sbb
call
push
push
add
mov
inc
jg
data16
or
popf
sub
add
insl
cmpsl
incl
addl
pop
jl
in
mov
movsb
inc
xchg
inc
call
jb
mov
leave
rcl
test
add
cmp
call
ret
loope
add
sbb
fs
mov
ret
push
mov
sub
add
jmp
mov
sbb
into
outsb
outsb
xlat
shr
aaa
loope
fdivs
pusha
pop
push
gs
sahf
je
mov
test
adc
jl
outsl
jbe
lods
pop
sub
push
adc
aam
inc
jnp
filds
add
adc
cmp
ljmp
cmp
jle
cmp
jg
mov
sub
add
xchg
jbe
data16
inc
dec
in
clc
xchg
jg
adc
pop
add
push
cmpsl
xor
cmpsl
and
cmp
pop
ds
mov
lret
adc
mov
das
inc
cmpl
adc
mov
cmp
xchg
pop
or
push
mov
jp
xchg
ret
rorl
jbe
addr16
scas
sub
mov
mov
mov
sti
cmp
adc
or
add
test
xor
inc
inc
push
mov
pusha
loop
inc
cmp
jbe
aam
fnsave
repnz
loope
push
mov
or
jo
or
inc
outsb
insb
sub
es
orb
pop
je
fwait
popf
and
inc
loopne
adc
and
inc
sub
ljmp
push
sbb
mov
je
xchg
je
mov
pop
nop
xchg
sbb
jmp
outsl
sbb
sbb
inc
dec
aas
cli
testb
cmp
xor
dec
mov
xchg
sbb
notl
shll
mov
dec
push
rcll
sub
in
pop
adc
push
xchg
mov
iret
push
dec
je
dec
jne
push
mov
ja
fcoms
jmp
add
mov
xor
inc
cli
add
add
je,pn
xchg
inc
je
push
subl
sub
jne
push
sub
sbb
pushl
mov
or
int
icebp
mov
mov
arpl
mov
xorb
test
jb
jns
cli
push
in
stos
add
xchg
pop
loope
inc
sbb
jne
mov
ret
and
sbb
add
push
xchg
lods
inc
sbb
fsubl
push
ss
push
lock
jb
fs
icebp
adc
add
lea
jae
popf
clc
push
lea
mov
inc
clc
ss
inc
mov
add
outsl
push
je
cmpb
sub
add
and
add
xchg
pop
pop
fisttpll
jnp
clc
cli
dec
cmp
fcmovb
mov
lret
mov
scas
or
xor
pop
sbb
push
xchg
cmp
or
bound
push
fildl
cmp
aad
add
pop
and
sbb
xor
xlat
addl
adc
sbb
adc
sarl
sahf
jecxz
add
xchg
push
rorl
stc
dec
mov
std
hlt
jne
adc
add
push
pop
dec
jmp
mov
sbb
adc
sub
or
pop
out
jle
jecxz
imul
les
push
xor
inc
call
cmp
jne
pop
enter
dec
sub
cmp
dec
push
js
xchg
push
xor
jne
jg
add
adc
adc
add
fmul
scas
and
inc
das
test
adc
into
add
xchg
dec
adc
jp
pop
popa
inc
lock
or
hlt
dec
adc
adc
insb
imul
out
orb
fiaddl
and
mov
and
dec
adc
test
ljmp
or
cmp
fstl
adc
enter
jg
jmp
adc
xchg
movsl
mov
fadds
sub
and
movsb
inc
daa
cli
and
mov
ljmp
jb
ret
jb
or
andl
mov
push
and
fisubs
pushf
and
xor
test
adc
test
pusha
push
jno
and
jns
scas
xchg
arpl
bound
add
mov
or
adc
or
inc
lret
les
outsb
stc
pop
les
push
sub
insl
insb
and
mov
ret
mov
xchg
jns
xor
adc
inc
pop
mov
mov
xlat
je
cmp
das
je
mov
and
mov
testb
and
adcb
or
cmp
xlat
test
add
jge
push
mov
push
sbbl
je
cmp
cwtl
jbe
mov
cmp
jbe
clc
push
push
or
movsb
in
push
add
or
cmp
pop
das
xor
outsb
mov
push
cmp
xlat
repz
push
orl
pop
xor
out
lods
and
mov
pop
es
les
dec
scas
xor
push
inc
pop
pop
sub
push
scas
mov
pusha
int3
sub
mov
mov
xchg
lods
pushf
adc
popa
mov
gs
in
fstl
hlt
bound
xor
sbb
gs
jne
adc
sub
enter
stc
add
push
movsb
push
xchg
mov
nop
jne
add
mov
add
add
and
mov
imul
fldz
mov
xor
pop
fiaddl
adc
pusha
adc
shlb
ficoml
mov
test
mov
and
jnp
test
pop
and
inc
xchg
lock
fldcw
mov
fildll
roll
shlb
xchg
fstps
mov
xor
in
xchg
rolb
mov
or
sub
das
fcomp
out
inc
in
adc
adc
ret
fstps
add
cmpsb
pop
sbb
or
and
in
dec
xchg
inc
pop
or
shr
xchg
mov
xchg
nop
mov
inc
lea
mov
mov
jge
rorb
and
push
push
nopl
cmpsl
xor
jg
or
dec
subl
mov
ljmp
iret
and
sbb
mov
shlb
aam
in
xchg
adc
xor
in
or
or
popa
pop
enter
jne
cs
add
jo
add
mov
mov
pushf
xchg
call
rorb
in
lock
mov
inc
lock
enter
push
fmul
or
dec
fwait
pop
cld
cmp
xchg
faddl
test
lds
mov
imul
repnz
prefetch
adc
xchg
je
lock
sbb
dec
dec
shl
mov
add
rorl
push
xchg
push
lods
jmp
cmpsb
fdivs
pop
ret
pop
ret
push
add
inc
lahf
fdivs
adc
jl
inc
ljmp
jge
pop
jb
adc
inc
xor
inc
dec
and
jge
dec
xchg
add
nop
sub
test
lahf
jl
xchg
push
inc
test
mov
mov
rorb
and
mov
sar
in
inc
in
inc
cltd
fsubs
adc
push
add
push
adc
mov
adc
push
xchg
cmp
add
fwait
mov
cmp
xor
lods
jbe
call
jns
pop
sbb
cmp
mov
pusha
scas
dec
dec
sub
popa
xor
mov
mov
inc
sub
mov
or
mov
pop
mov
mov
cmpb
push
jns
js
adc
push
mov
cs
push
pusha
and
cmp
dec
adc
dec
or
xchg
mov
call
adc
mov
sbb
les
ja
test
outsl
rclb
rol
adc
lcall
push
ret
jb
adc
cmc
push
fisttps
add
xor
cmp
xor
repnz
adc
and
push
xchg
dec
je
jl
ss
add
sbb
push
shll
jb
test
scas
sbb
mov
xor
or
sbb
mov
push
int3
int3
lea
cmc
rorb
call
xchg
sbb
mov
sub
rorl
fucomi
sti
gs
or
mov
lods
ljmp
and
pop
mov
jns
ss
cmp
inc
outsb
sub
xchg
adc
sbb
inc
test
and
imul
cs
fistpll
popa
js
lods
add
jno
cmp
ret
push
orb
shlb
sbb
test
mov
push
test
adc
sbb
jnp
stc
rcr
inc
inc
or
xchg
insb
fwait
xchg
adc
mov
int3
aam
and
addr16
adc
and
mov
fmuls
popf
lock
pusha
push
test
fistps
xchg
popa
fisttpll
pop
push
cmp
sbb
aam
inc
jb
fbld
sbb
add
sbb
jl
imul
cmpsb
dec
movsb
dec
or
stc
cmc
sub
sbb
sbb
test
in
fcoms
loopne
lea
xchg
mov
clc
cli
sti
jne
shll
shlb
mov
imul
push
xor
and
push
lock
mov
test
sub
xor
loopne
mov
push
xor
adc
add
repz
mov
pop
or
or
adc
xchg
xlat
loopne
lock
add
cmpsb
pop
add
xchg
fbstp
xchg
call
or
dec
or
push
push
call
test
fistl
and
rol
and
adc
push
fmull
and
sbb
stos
adc
inc
dec
es
fiadds
adc
gs
dec
fs
loopne
es
ret
xchg
lods
add
or
repz
fnstsw
or
fcmovbe
push
push
push
xor
adc
pusha
xchg
in
arpl
mov
and
or
in
and
adc
in
pop
and
jge
or
lods
add
or
add
icebp
ljmp
sub
sub
mov
mov
arpl
out
stos
and
aaa
add
sbb
inc
test
inc
loopne
pop
and
mov
in
mov
mov
and
xor
cmp
jg
sbb
mov
mov
add
arpl
push
mov
daa
sub
sub
jo
pushf
addr16
enter
fsubrl
nop
ret
icebp
enter
adc
aam
adc
loopne
outsb
and
leave
mov
jg
out
repnz
and
ljmp
and
push
sbb
ljmp
jecxz
imul
xchg
pop
outsb
sbb
std
dec
or
subb
dec
aam
loopne
xchg
mov
fmuls
es
test
nop
inc
bnd
mov
movsb
sti
dec
adc
push
pusha
xchg
aam
aam
enter
rorb
fwait
fwait
dec
sub
test
les
or
inc
cmp
daa
and
popf
and
lods
daa
stc
adc
sbb
in
cmpsb
push
movsb
lock
jmp
mov
lock
push
std
add
sti
dec
push
test
js
inc
inc
or
add
aam
mov
lock
mov
or
cmp
nop
inc
or
or
nop
dec
or
or
mov
sub
add
mov
xor
cmp
in
push
add
rcr
adc
rcrl
mov
jns
sbb
fs
or
or
in
or
or
insl
add
gs
mov
addr16
fsubrs
mov
shrb
push
and
adc
mov
or
test
mov
jne
sub
sbb
cwtl
jl
fld
sbb
push
and
add
adc
lea
sbb
or
mov
sub
ret
push
mov
add
and
int3
xchg
aam
aad
xor
bound
xor
ja
imul
popa
jp
mov
popa
aam
in
or
loop
xor
fdivrs
dec
call
cmp
insl
aam
and
xor
push
enter
add
adc
or
iret
mov
dec
pop
das
rcrb
add
lahf
loopne
mov
insl
and
call
or
in
cmp
push
fsubs
stc
fs
adc
shrb
cltd
sub
subb
push
insl
insl
push
sub
loope
mov
push
addb
or
ja
xlat
mov
push
xor
das
add
in
loopne
dec
sbb
pavgb
pop
push
rorl
xor
cld
test
push
inc
mov
addr16
sub
push
dec
cmp
imul
adc
ss
orl
ret
add
arpl
or
add
add
enter
and
adc
dec
jne
pusha
pop
adc
push
jb
adc
fstpt
xchg
ja
sbbb
cmp
fcoms
icebp
fdivs
jno
and
ret
or
call
inc
cmp
mov
leave
loopne
adc
jns
mov
cmp
fsubr
adc
xor
movsb
mov
cmpsl
mov
aaa
or
or
or
push
sub
adc
mov
test
cltd
jo
pusha
stos
ret
in
in
adc
dec
and
jne
or
stos
icebp
xchg
adc
xchg
sbb
enter
or
mov
enter
or
jns
jno
xor
cwtl
nop
mov
das
dec
imul
cmp
ret
mov
test
loop
jl
lret
ja
mov
push
add
sbb
enter
jle
gs
mov
add
adc
mov
mov
es
xor
js
scas
pop
mov
pushf
stc
dec
push
jo
jb
cwtl
and
lds
add
or
popa
push
mov
fs
pop
mov
out
stos
adc
mov
push
call
jo
or
and
mov
xchg
and
mov
dec
aaa
int3
pinsrw
imul
ficoml
dec
pop
inc
int3
cmpsb
ficompl
pop
aam
mov
fmul
enter
pop
push
cs
mov
cmp
nop
cmp
subb
sbb
test
pop
sbb
dec
xor
add
aaa
cwtl
jge
add
ss
xor
add
outsb
vpmullw
shlb
jnp
pop
lods
leave
or
add
stos
fadds
loopne
pop
inc
lea
mov
scas
cmp
stmxcsr
jns
add
cmp
les
orb
pop
ss
int3
das
rsqrtps
cmp
sbb
aas
mov
in
cmp
inc
cmp
inc
or
or
icebp
adc
cmc
pop
leave
or
iret
mov
jbe
cmpsl
fwait
mov
xchg
pop
nop
dec
es
pushf
mov
test
cmp
cmovle
add
sti
mov
xchg
sub
add
jl
xchg
iret
xchg
xor
sbb
mov
mov
aaa
inc
ficoml
imul
shrl
lods
insl
pop
fnstenv
mov
push
fistps
in
xchg
and
movsb
fdivr
enter
adc
inc
cmp
adc
sbb
mov
jno
outsl
pop
in
jnp
or
inc
ds
call
and
xor
outsb
xor
mov
xor
inc
pop
inc
stos
mov
lock
ret
push
fcoml
jne
in
mov
jns
adc
inc
pop
inc
dec
xor
sbb
test
sbb
inc
enter
in
jne
mov
test
mov
xchg
jb
cmp
and
lea
and
push
jp
sub
test
xor
movsb
setbe
daa
ljmp
or
ss
jo
push
pop
popa
daa
cmp
call
xor
xor
xor
in
js
push
imul
cmp
mov
in
sbb
insl
test
pop
adc
mov
jb
xchg
inc
test
dec
add
dec
lods
in
dec
jns
fdivs
decl
rolb
sarb
lcall
adc
mov
movsl
and
out
jo
hlt
jne
or
jnp
lock
out
test
inc
in
sbb
sbb
arpl
rorb
pop
subl
lods
sar
jge
inc
es
add
or
push
ret
ret
movsb
adc
rolb
sbb
enter
ret
sub
leave
push
add
xor
pop
inc
movl
push
push
or
inc
in
mov
call
call
and
flds
pop
xchg
cmpsl
cmp
dec
push
cltd
add
andb
inc
and
and
icebp
nop
sbb
inc
xchg
mov
fiaddl
adc
fwait
int3
inc
aam
ret
push
adc
adc
insl
push
orb
js
lods
shll
adc
dec
rcll
loopne
jno
dec
push
add
push
loope
dec
dec
dec
repz
push
jmp
cltd
rorb
push
mov
push
add
mov
adc
loope
enter
aam
xchg
xchg
lret
rorb
inc
cmp
add
sar
dec
adc
push
fsubrl
sbbl
rolb
in
sub
int3
gs
mov
das
not
adc
cmp
mov
sub
sub
aam
dec
rcrb
xor
rolb
dec
dec
mov
push
lock
pop
aam
in
dec
jg
test
in
shlb
mov
sub
mov
divl
mov
adc
mov
subl
sbb
stc
pop
fmull
dec
arpl
mov
xchg
pop
dec
cmpsb
push
jne
mov
int3
in
std
xor
je
adc
aad
sti
cmp
or
shll
adc
test
aam
sub
mov
xor
cmp
xchg
fiaddl
lcall
pusha
mov
pop
adc
aas
mov
cmpsl
xchg
mov
dec
xchg
mov
fs
xchg
push
or
pop
jne
and
or
inc
add
push
sbb
jne
fistpl
gs
mov
jbe
mov
mov
mov
inc
dec
mov
mov
cmp
sti
ret
push
mov
rcrl
sbb
mov
and
mov
pushf
cwtl
mov
test
and
mov
jo
pushf
mov
mov
mov
and
pop
inc
orl
push
jmp
xchg
and
add
or
loope
push
dec
lods
xchg
shl
fstl
inc
xor
push
adc
mov
cmp
push
mov
adc
add
xor
or
pop
push
loopne
fdivs
jecxz
mov
adc
or
rolb
mov
xchg
push
add
sub
imul
or
inc
sub
cmpsb
pop
gs
mov
push
or
nop
sbb
es
je
mov
bound
enter
test
mov
xor
in
pop
add
sub
fmull
test
sub
xchg
shl
pop
addl
nop
shr
aas
lds
and
int3
testl
sub
push
or
jo
jno
fsubs
dec
sub
insb
push
roll
call
pop
loopne
push
iret
cmpsb
data16
pop
and
inc
mov
sbb
add
sub
and
push
sbb
in
sbb
fs
sbb
dec
or
push
sub
dec
or
cltd
cwtl
andl
pop
cltd
jbe
es
cltd
push
and
jnp
cs
xchg
or
add
sub
mov
gs
mov
imul
mov
jmp
xchg
dec
mov
lcall
ret
insl
cmp
pop
jmp
loop
adc
pop
std
aad
test
adc
jp
idivl
call
push
sahf
mov
insb
dec
cmp
fs
movsb
mov
push
insl
push
sti
xchg
dec
cmp
pusha
adc
leave
and
and
xor
and
sbb
and
and
dec
inc
cmp
adc
xor
sub
xor
dec
fcoms
pop
pop
aam
cli
push
jmp
cmc
es
cmpsb
dec
shlb
xor
or
xor
mov
pop
xor
inc
inc
or
inc
mov
adc
shrb
dec
and
xchg
pop
call
orl
ja
aam
cltd
sub
mov
pop
sbb
jp
dec
cmpsl
lods
pop
xlat
add
loopne
jl
pop
xor
jne
xor
dec
adc
std
inc
adc
cmp
add
adc
jge
and
push
inc
icebp
mov
je
nop
mov
mov
and
push
mov
cltd
nop
outsl
test
insl
dec
lock
pusha
gs
dec
mov
fidivl
rcr
mov
pop
fsubl
in
int3
cmp
pop
enter
les
rorb
jno
shl
aam
mov
and
popa
xchg
adc
mov
je
imul
inc
xchg
push
push
fs
xchg
push
stos
sbb
sarb
rorb
lds
inc
jae
push
shrb
and
inc
adc
ja
lods
xchg
mov
adc
iret
arpl
push
mov
inc
dec
mov
inc
ror
je
or
inc
xchg
gs
xorb
out
pop
and
scas
loopne
enter
test
arpl
out
xor
and
inc
or
lods
and
pusha
add
test
xchg
push
pusha
sbbb
add
add
leave
test
sbb
imul
nop
test
or
dec
test
xor
mov
and
add
int3
jmp
inc
leave
pop
outsw
in
add
or
cmpxchg
in
fcoms
sbb
or
dec
repnz
jg
add
aam
sti
add
add
mov
arpl
jno
push
stos
sub
cwtl
and
rorb
jbe
sbb
clc
xor
test
xor
inc
sub
dec
adc
js
sbb
mov
les
shrb
mov
addl
lea
xchg
test
sub
sbb
ss
inc
roll
inc
inc
addr16
sbbb
mov
rolb
in
das
inc
xchg
aam
lret
pop
insb
dec
mov
nop
mov
test
push
call
dec
jo
lret
cld
push
je
nop
cltd
insl
lock
push
dec
je
cmp
xchg
adc
je
ror
mov
and
ja
sbb
loopne
fsubrl
jne
sbb
and
test
movsb
sbb
lea
pop
add
idivl
push
lods
jg
mov
test
inc
mov
out
push
dec
mov
dec
arpl
lret
out
sub
stos
sbb
testb
pop
aam
aam
scas
lods
and
or
fiaddl
or
pop
in
movsb
ret
leave
mov
push
in
sbb
out
fildll
mov
das
aam
jmp
movsb
rorl
mov
jg
mov
mov
pop
cmp
outsl
int3
mov
pop
and
pusha
gs
dec
ret
mov
xor
xchg
movsb
inc
int3
shlb
andl
lock
lods
mov
imul
push
dec
push
testb
dec
outsb
das
dec
adc
and
je
mov
xchg
jg
ret
cmp
sub
test
add
leave
mov
or
stos
inc
outsl
adc
sub
mov
and
fcomp
mov
enter
aam
les
pop
adcb
nop
sbb
and
xor
add
and
test
add
and
and
xor
orb
movsb
lods
dec
ss
inc
jecxz
adc
dec
pushf
insb
dec
es
lods
push
mov
cltd
fs
test
cltd
fs
dec
pop
je
fs
dec
mov
es
mov
inc
and
fs
aam
in
add
jg
jl
cmp
decb
jmp
lds
flds
in
shl
jns
xor
mov
fcoms
xchg
dec
enter
mov
sub
mov
mov
cmp
pop
mov
out
loopne
mov
pop
add
sbb
and
xor
enter
inc
test
mov
movsb
lods
xchg
enter
int3
not
fsubs
aam
dec
sub
cwtl
js
fdivs
adc
in
pusha
mov
leave
mov
mov
popa
and
test
pushf
std
and
pop
aam
int3
xchg
xchg
xchg
xchg
les
xchg
movsb
pushf
xchg
mov
test
adc
leave
and
pop
xchg
stos
mov
movsl
adc
xor
in
sub
push
pop
mov
in
push
nop
cmp
enter
sub
inc
test
xchg
inc
lods
sub
inc
sbb
mov
push
adc
imul
inc
mov
inc
aam
xchg
dec
adcl
inc
jo
aaa
cmp
jb
cwtl
sbb
add
xor
jne
pop
jo
xchg
sub
movsb
call
mov
cs
xchg
rcrb
add
fldt
xchg
sbb
jns
xchg
mov
sub
lods
add
pop
sub
cmovs
pop
orb
xchg
mov
and
rcrb
xchg
or
sarb
jns
sub
idivl
or
rcrb
dec
adc
and
dec
xor
and
xchg
cmp
push
pusha
testl
jecxz
push
int
mov
xchg
adc
sub
movsb
jg
dec
imul
pop
sub
push
xchg
pop
popa
shll
test
insb
inc
enter
scas
sub
nop
sub
adc
push
insl
dec
cmp
mov
or
add
push
das
in
xor
pop
std
pop
rorb
pop
aam
lea
out
xchg
inc
cs
invd
push
aas
outsl
cs
fadds
aam
sarb
jl
xchg
mov
or
or
adc
popa
rcrb
xchg
mov
inc
dec
or
shlb
or
jge
mov
imul
pop
fwait
mov
lret
xchg
sbb
or
sbb
xor
pushf
mov
fsts
rclb
rclb
xchg
enter
les
mov
das
mov
xchg
test
jb
and
ss
enter
xchg
dec
pushf
xchg
nop
xorb
lds
shl
ror
aas
adc
xor
enter
stos
loope
push
sub
add
pop
or
sbb
mov
sbb
or
mov
sbb
movsb
adc
mov
and
jns
pop
in
add
cmp
rcll
repz
mov
jno
adc
xchg
mov
das
insb
mov
das
orb
sbb
es
mov
movsb
pop
cli
inc
mov
subl
sub
or
pop
mov
std
push
das
inc
sarl
je
jo
lock
pop
repnz
add
sbb
adc
mov
mov
insl
cmpsl
dec
lea
mov
xor
in
sub
cld
sub
push
pop
in
lods
jbe
sub
movsb
popf
cltd
inc
loop
add
repz
mov
jae
sti
loopne
ret
xchg
leave
fists
cltd
in
and
and
sub
inc
sub
push
movsb
add
jbe
les
aam
push
or
mov
sub
cld
icebp
inc
shll
clc
xor
push
push
in
or
lds
and
add
clc
icebp
addl
inc
in
sbb
mov
add
push
mov
xchg
and
sbb
xchg
adc
and
and
adc
add
mov
rcl
das
scas
ret
xchg
dec
push
hlt
inc
insb
jle
sub
mov
sub
jg
cmp
mov
mov
pop
pop
mov
sub
in
aas
out
sub
jmp
mov
sarl
call
inc
sub
pop
sahf
and
or
xchg
jb
sub
test
cmpsl
adc
test
jno
and
or
adc
daa
dec
pop
outsl
xchg
jbe
mov
sub
rclb
xor
lods
inc
sub
insl
inc
pop
sbb
add
or
fsubrs
inc
mov
leave
add
and
fs
jecxz
sbb
bound
dec
jnp
fs
mov
call
cli
pop
inc
stos
addb
xor
es
xor
aas
pushf
xchg
shr
or
add
xor
sbb
pop
adc
fsts
dec
cmp
and
mov
pop
mov
ret
fsubs
adc
sub
mov
cltd
adc
fiaddl
jmp
sub
cmc
call
jns
xchg
sbb
push
gs
adcb
cmpsb
adc
pop
sbb
js
and
pop
repnz
mov
jmp
or
lds
sub
ffreep
xor
std
xorl
inc
fdivl
add
xorl
inc
sbb
pop
xchg
push
pop
sub
jb
mov
jg
insl
mov
call
or
mov
lods
cmp
outsb
xchg
dec
cli
inc
adc
fidivrl
add
and
leave
xchg
rclb
adc
in
shlb
pop
cmpsb
dec
mov
lods
sbb
icebp
nop
cmp
push
je
cmp
imul
movsb
sbb
mov
inc
mov
divl
sub
sbb
push
or
xchg
cmp
jmp
add
xchg
dec
sahf
sbb
bnd
mov
and
and
sub
adc
sub
jmp
je
sbb
mov
repz
mov
insl
sub
das
roll
int
popa
mov
insb
test
inc
int
pop
mov
jnp
imul
sbb
sbb
enter
mov
inc
mov
xchg
ret
ds
jge
sbbl
sbb
inc
add
dec
test
pop
inc
adc
fxch
and
xor
test
or
xor
cltd
jbe
lods
adc
xchg
dec
mov
icebp
movsb
imul
ret
adc
pop
cmp
movsl
lahf
sbb
mov
orb
bswap
mov
popl
movsb
mov
adc
roll
in
int3
add
dec
jnp
sub
ret
push
imul
jp
push
je
push
jb
out
inc
or
xor
mov
in
push
inc
mov
mov
lock
mov
cld
inc
mov
enter
sti
out
push
iret
dec
push
jns
hlt
adc
and
or
mov
add
jecxz
sahf
or
sbb
leave
mov
and
or
dec
push
sar
cmp
cmp
push
sti
or
add
push
fcomps
jbe
jle
movb
and
repnz
imul
push
inc
lahf
push
dec
pop
rcrb
inc
or
lahf
rorb
jmp
loopne
mov
data16
and
gs
pushf
stc
incl
ret
xchg
ret
push
je
xchg
andb
je
push
push
add
jno
lods
mov
xor
mov
out
cld
mov
orb
hlt
sub
notl
sub
dec
mov
and
cmc
movsb
lea
cmp
in
addr16
jns
inc
jmp
xchg
lds
sete
jmp
or
pop
push
or
push
fildll
mov
jl
pop
mov
adc
mov
jg
les
add
add
out
mov
testl
xor
xor
sahf
out
test
push
popf
out
fisubrs
inc
bound
xchg
jae
inc
push
roll
lret
cmp
add
inc
aas
sub
data16
mov
inc
test
mov
orb
jnp
mov
add
pop
das
mov
mov
adc
or
cmp
rclb
cmpl
pushl
mov
add
into
pop
adc
test
dec
out
cmp
or
test
out
sahf
sbb
aaa
xchg
subb
ja
divb
xor
vmmcall
ds
scas
incl
sub
frstor
ljmp
test
inc
mov
and
insb
outsl
arpl
imul
sub
mov
sub
popa
arpl
jne
mov
jmp
popa
outsb
je
add
das
add
push
insl
adc
push
sub
cs
inc
outsl
jb
js
je
jg
mov
jae
add
or
outsl
add
add
add
ja
sahf
insb
add
jne
les
inc
and
add
fstp
jb
dec
push
add
add
xor
aaa
or
mov
repnz
inc
mov
fdivr
push
add
aas
push
add
pop
pop
mov
and
cmp
mov
push
je
and
jae
push
idivl
adc
out
loopne
cmpsl
insl
push
push
or
jae
out
loopne
mov
lret
repz
popa
fstpl
xor
insb
jp
outsl
in
fndisi(8087
or
mov
fsubrp
imul
addr16
and
outsl
pop
rcrb
jmp
jo
mov
in
loopne
dec
lret
stos
insl
sub
push
push
or
pop
imul
fnstsw
inc
push
data16
shll
out
mov
jp
sub
mov
sub
arpl
andb
lahf
popa
push
cmp
jecxz
outsb
inc
arpl
loopne
pop
jnp
jae
daa
dec
jbe
enter
fbstp
outsb
fidivrl
je
adc
sbb
jo
ficomps
jbe
mov
arpl
insl
mov
scas
xor
scas
js
xor
inc
mov
js
sbb
xor
fidivrl
cs
add
das
xor
sub
pop
or
pminub
jg
ds
or
sub
outsl
xchg
lahf
pop
pop
push
sbb
jg
dec
xor
adc
fbstp
adc
adc
push
xor
xor
lods
cmpsb
in
xchg
jb
jne
in
mov
xor
push
bnd
das
pop
jno
jbe
sbb
inc
inc
shrl
ljmp
push
jo
lahf
outsl
aas
push
lods
roll
iret
arpl
sbb
mov
inc
jb
aaa
insl
jno
lahf
cs
imul
add
imul
shll
jnp
sbb
cmpsl
outsl
pop
pop
loopne
subb
das
xchg
mov
daa
mov
pop
in
jno
add
pop
stos
imul
insl
lret
je
scas
cmp
fisubs
adc
jae
subb
pop
pop
jecxz
ret
ja
push
sub
lock
xor
sbb
xchg
add
mov
push
inc
sahf
imull
and
inc
inc
mov
xchg
cmpsb
jnp
das
sbb
sahf
cmpsl
stc
cmp
sbb
sbb
mov
cmp
out
sbb
test
sbb
dec
repz
pop
sahf
push
sbb
cmp
stc
mov
mov
clc
pop
js
jns
repz
mov
sbb
mov
jp
incl
sub
addr16
jp
mov
cmpl
mov
dec
jb
fcmovne
add
xchg
pop
mov
clc
pop
es
xchg
ja
imul
inc
shll
mov
push
fwait
cmp
dec
add
mov
push
xor
mov
pop
pop
add
and
add
in
repnz
das
das
and
pop
mov
jbe
jge
bound
dec
inc
and
add
loope
decb
jnp
pop
ret
je
dec
idivl
repnz
aas
dec
inc
sbb
pusha
xor
ret
fdivr
ds
daa
outsl
inc
jo
mov
and
mov
add
das
pop
pop
divl
iret
jns
out
adc
out
and
push
outsb
sti
push
arpl
pop
dec
xlat
mov
daa
push
and
imulb
ret
sub
pop
dec
mov
shrl
pop
testl
pushl
mov
jg
dec
cmp
cmp
add
dec
and
jns
add
scas
imul
dec
push
inc
aas
testb
insl
bound
dec
outsl
jbe
dec
arpl
popa
or
jo
sub
addr16
clc
mov
xor
insb
xchg
outsb
xchg
inc
jo
imul
popa
jb
jg
bound
inc
jae
fnstsw
popa
outsb
adc
xchg
into
mov
outsb
jns
jg
iret
fdivrl
addr16
popa
je
jb
xor
push
push
gs
sbb
into
fdecstp
jnp
outsl
outsb
and
jbe
pushf
jae
dec
inc
aas
add
jge
imul
or
mov
filds
fildll
push
push
mov
push
popa
insb
jne
inc
inc
mov
adc
push
scas
call
and
sub
sub
ljmp
xor
xor
ss
cmp
cmp
cmp
ds
inc
inc
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
test
mov
dec
dec
dec
dec
mov
sbb
rcrb
pop
pop
pop
xchg
pusha
popa
sbb
jmp
fs
imul
jo
add
jbe
divb
jp
jl
jle
dec
adc
lcall
cs
fs
pop
add
ret
mov
rorb
ljmp
lret
jno
icebp
repz
inc
mov
clc
ret
movsl
add
xorl
outsl
shrb
outsl
imul
xor
outsl
das
cmp
sarb
daa
push
add
jo
xor
popa
js
addl
test
dec
pop
sbb
out
shl
rol
sub
je
lods
rcrb
add
adc
add
cld
imul
add
and
push
pop
push
or
push
push
add
xor
jbe
and
add
pusha
push
mov
or
cmp
add
sbb
sahf
mov
xchg
push
xchg
test
add
orb
into
in
fnstenv
enter
lret
jb
shrl
push
jo
add
sub
push
jmp
ja
icebp
dec
or
jo
add
js
push
add
ret
nop
les
addl
rorb
add
pop
jb
pop
lea
mov
nop
xchg
xchg
fs
xchg
pop
xchg
mov
mov
movsl
enter
or
shl
inc
scas
mov
rcr
out
add
mov
lods
push
lods
mov
xlat
push
repnz
sbb
pop
jns
sub
pop
sbb
out
fisubs
push
inc
sub
ss
mov
push
dec
dec
inc
dec
inc
push
divl
lret
push
nop
fs
je
pop
loopne
mov
push
jae
dec
bound
je
outsb
cmp
jge
xor
push
jbe
dec
out
je
mov
imul
daa
in
aas
push
xchg
pop
lea
mov
outsl
js
push
decl
add
cs
and
insl
jo
imul
jo
and
and
daa
aaa
jle
loopne
insb
les
dec
imul
fcmovbe
shlb
ds
cmp
dec
fwait
xchg
fdiv
inc
jb
jns
daa
pop
and
ss
jns
mov
ljmp
in
and
addr16
add
cmp
outsb
jle
fwait
outsb
rcrb
jbe
mov
jo
or
outsl
mov
outsl
jb
and
xor
add
jbe
push
push
lahf
dec
xorl
imulb
push
jp
lret
out
cwtl
add
pushw
popl
andb
inc
imul
pusha
gs
push
daa
xchg
push
sarl
and
popa
push
outsb
mov
divb
mov
push
jae
mov
dec
or
cmp
add
hlt
clc
jo
sbb
outsb
gs
inc
pusha
adc
mov
das
mov
xchg
inc
push
push
push
push
dec
negl
dec
push
jne
repnz
push
jbe
enter
fbstp
mov
dec
jge
mov
jle
dec
ret
pop
xorb
imul
call
xor
jg
jae
and
xor
das
gs
sbb
pusha
rcll
outsb
bound
subl
push
or
pop
das
je
scas
idivb
daa
xchg
mov
mov
mov
cmp
out
mov
cmp
or
ds
and
sub
dec
imull
inc
jl
push
addr16
jle
cmpsb
or
sub
sub
add
repz
add
sub
pop
loope
negl
das
push
jb
xor
aaa
and
push
sbb
mov
mov
xchg
xchg
dec
pop
pop
jne
stos
addr16
push
lods
xor
sbb
sbb
jo
mov
push
gs
imul
or
frstor
dec
sbb
pop
or
sahf
inc
pop
sub
and
divl
sub
iret
sti
outsb
xchg
sub
pop
cs
add
cmp
iret
repz
and
adc
jnp
cmpsl
stc
cld
sub
call
cmp
push
aam
int3
cmpsl
mov
mov
dec
jns
lods
test
outsb
mov
negl
nop
nop
cs
push
sahf
mov
repz
repz
insb
push
iret
pusha
pop
pop
push
push
dec
cmp
repz
xor
and
jns
cmpsl
stc
cld
sub
enter
jns
out
dec
and
in
iret
repz
les
iret
repz
xor
sbb
jns
cmpsl
stc
lock
test
pop
sahf
ja
out
adc
sub
push
pushf
jo
jnp
jl
sub
push
and
adc
add
jno
test
add
add
xor
push
jb
dec
mov
sbb
inc
addl
add
ret
push
and
add
ja
sub
sbb
xchg
push
imul
add
insl
or
and
push
add
mov
add
jnp
and
add
push
pop
or
das
cmp
mov
addb
addl
mov
xchg
xchg
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
mov
mov
cmpsl
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
inc
ret
enter
int3
int
iret
rcl
rcl
aam
xlat
fcomp
fcmovu
loopne
std
jmp
jecxz
in
out
jmp
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
std
jmp
push
test
and
add
ljmp
push
sub
push
jno
popa
push
adc
sub
lods
lcall
gs
popa
data16
pop
shl
std
add
xor
add
fidivs
sub
add
push
sub
daa
dec
arpl
inc
insb
fs
jns
jecxz
sbb
mov
mov
les
iret
pushf
jp
pushf
pcmpgtw
xor
push
inc
push
loopne
add
dec
push
push
dec
pop
test
mov
push
dec
inc
dec
cmovns
cld
mov
das
push
adc
sub
adc
sub
into
mov
rclb
mov
out
xor
jnp
inc
loop
mov
ds
in
xchg
popa
pop
adc
clc
lret
sbb
in
xchg
jb
jge
arpl
cmp
jg
mov
in
fstl
mov
and
and
mov
imul
lret
add
inc
mov
sarl
or
push
test
sub
fwait
ss
sbb
mov
jns
ds
xor
incb
int3
dec
dec
xor
cld
dec
popf
pxor
xor
lret
aaa
push
div
inc
sub
dec
xchg
cmp
cmpsb
das
xchg
mov
xor
sahf
icebp
mov
cld
or
loopne
addr16
cmp
inc
mov
xchg
push
pop
xchg
sub
pop
mov
stc
pushl
ljmp
orb
mov
jle
call
lods
dec
lock
xor
aas
mov
pop
or
and
pop
repnz
popa
mov
and
es
mov
fcompp
add
test
ja
mov
push
nop
fwait
pushl
mov
adc
push
loope
or
aad
pop
inc
fildl
sub
dec
fsubs
cmpl
or
cmovg
sbb
or
dec
xchg
pop
xchg
nop
outsb
loopne
pop
fwait
loope
pop
in
imul
cmp
sti
es
jae
push
jp
mov
fcomi
push
push
data16
scas
ret
je
sub
test
xchg
mov
and
adc
shrb
aaa
pcmpeqw
outsl
mov
loopne
push
mov
fildl
daa
je
loopne
sbb
mov
movsl
dec
add
sbb
jmp
xchg
mov
sahf
ror
ret
sbbl
push
fnsave
add
jo
xor
sbb
mov
or
and
imul
jae,pt
loope
jl
insl
jle
fs
popa
rcr
pop
cmpsl
mov
and
push
jle
or
jg
out
dec
mov
adc
mov
fbstp
out
jno
sarl
push
mov
clc
jg
mov
cmova
das
adc
cmp
popa
ret
xor
add
inc
inc
subl
jg
out
shrl
sbb
xlat
jg,pn
jge
and
mov
cmpsl
xlat
data16
fnstenv
adc
arpl
js
sub
shll
aas
cmpsl
call
ja
inc
add
cmp
pop
pop
mov
testl
jne
cmpps
push
imul
sti
arpl
out
mov
lahf
es
es
sti
cmp
or
push
adc
push
cmp
and
lds
jge
add
insl
test
cmp
dec
dec
incl
xchg
gs
scas
sbb
ja
dec
jp
xchg
adc
ja
pop
ds
fsub
bound
mov
mov
imul
push
fmuls
sti
jne
sbb
daa
sbb
call
pop
mov
aas
arpl
daa
pop
arpl
add
sbb
pop
gs
jne
out
mov
and
stc
lret
arpl
pop
mov
and
pop
stos
pop
ret
out
sbb
insl
inc
add
mov
fldt
test
push
mov
dec
cmpb
ja
cmpl
xchg
lret
sub
inc
mov
sbb
out
daa
loope
faddl
xor
xlat
or
jo
add
push
cmp
cld
js
ret
mov
je
jb
adc
jl
push
add
sbb
arpl
mov
xor
push
arpl
clc
mov
pop
mov
dec
popa
adc
inc
jnp
and
jo
out
or
xor
lock
je
jae
pop
outsb
out
out
nop
mov
adc
aaa
mov
testl
shlb
push
or
and
jecxz
stos
scas
mov
subl
sub
sbb
dec
aas
adc
outsl
popa
push
inc
pop
daa
imul
add
dec
dec
sub
cmp
dec
fwait
push
mov
cmp
push
dec
imul
inc
push
ret
inc
and
test
imull
sbb
and
push
addb
js
mov
outsb
push
pop
out
jb
sub
orl
cmpb
pop
sahf
fisubs
daa
bound
jae
hlt
mov
mov
addr16
sti
and
ss
push
insl
cmp
out
bound
or
jge
outsl
out
arpl
pop
pop
stos
and
outsl
jmp
les
mov
lahf
ja
cmpb
mov
shll
jb
pop
mov
push
es
int
jo
mov
out
inc
cmp
inc
mov
push
inc
scas
imul
mov
arpl
dec
insb
xchg
pop
push
jnp
inc
inc
dec
add
shll
outsl
imul
sbb
ss
mov
or
mov
dec
sbb
pushf
lret
inc
pop
je
ret
iret
pop
dec
por
pop
icebp
outsl
insb
aas
pop
mov
scas
fimull
addr16
outsl
mov
dec
cmp
lods
pop
adc
sahf
push
aas
pop
pop
push
aas
loopne
bound
testl
mov
mov
mov
loopne
mov
jl
loop
and
jl
imul
mov
and
addr16
jnp
sbb
push
loopne
sub
ja
mov
adc
bnd
jo
or
mov
fsubl
push
adc
sbb
sbb
jnp
xor
imul
jmp
es
pop
icebp
into
adc
add
push
cmp
mov
outsb
mov
cmpsl
outsb
jg,pn
jnp
push
jecxz
inc
add
loop
cmp
jno
filds
fsubl
insb
sub
lret
jl
out
pop
cmp
bound
or
mov
inc
inc
mov
lea
fidivrs
or
stos
sub
iret
imul
dec
pop
adc
jl
lods
jno
repnz
sahf
jo
repz
adc
mov
cmp
es
addr16
push
imul
add
mov
aad
xlat
incl
outsl
sbbb
xchg
rol
fstpt
dec
xlat
aaa
sbb
jl
xor
inc
testl
pop
jno
xchg
out
inc
jns
jae
jae
sbb
jae
pop
add
dec
adc
mov
negl
mov
add
mov
sub
imul
pop
in
sar
pop
data16
aaa
push
ret
insb
roll
dec
push
aas
popa
pop
popa
sub
xchg
pop
push
mov
es
fcompl
jle
outsl
das
addr16
mov
dec
lcall
sub
adc
inc
xchg
inc
jnp
dec
xor
push
cmp
push
sub
xor
sbb
inc
add
hlt
lret
ss
push
repz
push
push
mov
fimull
push
jl
negl
cs
ds
push
pop
push
push
lds
fstps
push
rol
adc
ja
out
imul
pop
push
iret
push
les
ds
pop
jmp
cmp
and
jbe
xor
pop
add
inc
lds
cmp
inc
pop
or
mov
push
sub
jl
sahf
divl
mov
sbb
push
leave
fucomp
fmulp
jnp
pop
or
adc
repz
adc
inc
and
pop
dec
daa
outsb
mov
iret
pop
sbb
aaa
dec
and
scas
jne
xorl
outsl
jo
jns
mov
inc
inc
fisttpl
imul
add
outsb
rolb
pop
insb
lret
jno
push
pusha
sbbl
sti
aas
pop
popa
push
in
add
and
popa
outsb
arpl
push
gs
insl
pusha
push
popa
jne
shll
jo
pop
and
dec
bound
out
sbb
sub
and
pop
shrb
adc
ficoms
das
push
dec
push
push
jg
jecxz
repz
fildl
jne
jne
jns
fwait
push
mov
xchg
scas
mov
repz
lock
push
or
mov
ds
fs
outsb
jbe
lea
cmp
bound
or
ds
gs
je
cmp
ret
xor
push
push
jo
jb
in
sbb
mov
and
jae
pop
cmp
sbb
and
and
mov
jae
imul
pop
adc
or
icebp
cmp
in
fwait
test
mov
outsb
add
adc
cs
jbe
pusha
imul
sbb
sub
data16
aam
imul
or
shrb
xchg
aas
push
mov
jne
mov
daa
pop
andb
mov
movb
cmp
ja
inc
push
mov
dec
push
verw
rolb
lods
lahf
js
adc
xchg
scas
inc
cmpl
adcl
pop
addb
pop
xlat
sbb
push
sub
cmp
inc
movsb
ss
cmpsl
add
sbb
or
xchg
js
sub
adc
sahf
mov
sbb
dec
outsb
ret
push
sbb
leave
idivb
xor
inc
dec
jp
ror
lea
push
jnp
pop
push
lock
ja
into
or
inc
pop
mov
insl
pop
fdivrp
adc
data16
cmp
insb
into
pop
lret
mov
inc
lret
bound
add
pop
and
mov
fdivl
xchg
inc
loop
lcall
sbb
and
jle
xor
jo
inc
or
imul
movsl
add
aaa
sub
dec
mov
inc
loopne
aam
jecxz
or
inc
cwtl
cs
or
lods
push
push
adc
pop
movsb
pop
arpl
push
call
dec
mov
mov
push
scas
sub
jne
imul
mov
ret
fs
and
xchg
mov
xor
and
outsl
rcrb
inc
scas
mov
adc
add
and
imul
and
testl
cs
and
shrl
add
and
push
movsl
dec
andl
push
cs
xor
imul
sbb
jp
out
jb
push
jp
arpl
insl
das
mov
xor
arpl
pop
cli
add
push
scas
pop
jmp
jb
fs
push
jb
mov
or
inc
jbe
jae
sub
scas
into
sahf
mov
loop
inc
into
out
and
push
mov
or
jbe
push
sbb
mov
and
scas
mov
add
inc
fwait
mov
imul
in
add
fbld
xlat
adc
add
push
lret
inc
sbb
sub
mov
dec
mov
pop
test
aas
mov
mov
fbstp
cmp
das
ret
ret
dec
adc
add
pop
or
out
cmp
inc
jg
push
inc
cmp
inc
imul
data16
pop
xlat
lods
add
dec
or
mov
stos
push
and
jmp
pop
daa
stos
imul
sbb
mov
lahf
fwait
cmp
jns
and
data16
mov
hlt
test
mulb
xchg
arpl
bound
xor
scas
jecxz
pop
test
dec
filds
add
sbb
aam
ja
or
cmpsb
cmp
aam
sub
xchg
cmc
push
cs
jmp
cmpsl
push
or
mov
push
jo
dec
cmpsb
pushf
subl
lea
js
fucomi
sbb
imul
outsb
jae
sbb
sub
or
repz
pusha
push
cmpsl
out
mov
and
imul
inc
push
imul
aas
cmp
stos
add
inc
jae
in
cmp
out
pop
aaa
cmp
rorb
or
cmp
jge
and
xchg
pop
add
or
das
imul
arpl
shrl
pop
imul
lds
js
xchg
cmp
shrl
ret
fistl
test
fldt
or
loope
add
ret
and
es
xor
lahf
arpl
xchg
mov
repz
lcall
xchg
xlat
and
inc
sbb
cmp
pop
push
scas
jmp
cmp
fimuls
push
xchg
test
dec
cmpsl
out
jo
dec
xor
mov
mov
jbe
mov
adc
fadds
popa
pop
cmp
inc
push
pop
xchg
push
or
jnp
jnp
jb
xlat
pop
lcall
inc
fstpt
popa
cmp
ss
xor
add
out
jo
jp
addr16
xor
je
scas
loopne
setg
xor
push
push
addr16
push
sub
es
push
in
cmp
out
inc
outsl
daa
dec
fcmovb
clc
push
pop
ja
arpl
ret
xor
ss
aad
pop
xlat
cmp
icebp
sbb
imul
or
cwtl
inc
shll
push
cmpsb
adc
test
out
gs
mov
out
aad
sbb
scas
fwait
cs
mov
stos
add
adc
lds
addb
jne
arpl
shlb
je
outsl
fs
aas
dec
clc
movsb
test
insb
add
push
hlt
or
add
add
sti
push
add
test
push
enter
scas
insl
push
outsl
das
outsl
xor
cs
inc
dec
ja
bound
scas
popa
adc
iret
shrb
push
pop
dec
mov
stos
push
cmp
jo
sub
cmpsb
sbb
scas
push
pop
outsl
out
lods
adc
setg
pop
and
pop
push
sahf
xor
dec
das
es
insl
jl
dec
call
clc
les
pop
popa
xchg
call
daa
xor
rorl
adc
adcl
xor
add
rolb
loopne
loope
out
mov
push
push
add
inc
sbb
jecxz
add
jae
ret
stos
sub
ret
cs
ja
rorl
bound
ret
and
arpl
push
mov
out
pop
sub
add
pop
add
je
adc
sub
cltd
aam
dec
cmp
outsb
add
cmp
push
ret
and
jnp
cmp
jp
inc
das
jb
daa
sbb
push
fisubrl
add
minps
ret
aas
push
mov
mov
dec
mov
mov
sbb
xor
dec
push
mov
fcoms
iret
jo
stos
scas
outsl
push
mull
shlb
dec
and
push
mov
jp
fdivs
cli
pop
dec
add
bound
popa
xor
jmp
rcll
pop
scas
sub
and
inc
in
sub
ret
nop
out
addl
mov
das
hlt
inc
adc
rcr
inc
add
or
push
in
inc
or
mov
sbb
mov
push
mulps
aaa
adc
xchg
and
sbb
xor
cmpsl
sbb
sbb
int
mov
sbb
sbb
sbb
adc
jmp
pop
and
adc
and
out
fstpl
out
and
inc
cs
push
sbb
outsb
bound
out
mov
cmp
test
dec
sbb
mov
add
cmpsl
arpl
sbb
cs
xor
inc
fs
jo
adc
adc
push
out
jae
inc
sub
lods
push
pop
lahf
add
xor
cmpsl
cmc
test
mov
aam
inc
cmp
aas
dec
sub
xchg
arpl
mov
arpl
cmp
rorb
or
and
mov
pop
out
mov
rol
mov
mov
adc
sbb
mov
or
das
sbb
out
iret
loopne
sub
adc
iret
adc
loop
cld
stos
inc
das
and
add
fistps
or
stos
pop
cmp
pop
dec
sub
lods
xlat
and
xchg
das
aaa
stos
or
bound
inc
jbe
mov
push
bound
push
imul
mov
fiadds
adc
and
xor
pusha
sub
addr16
cmpsb
add
or
jnp
jge
mov
ljmp
repz
jae
xor
fs
pop
jno
lods
xor
das
outsb
aad
daa
icebp
sbb
inc
and
pop
add
insl
pop
sub
test
add
dec
pop
add
mov
dec
pop
sti
push
push
xor
fldt
aaa
bound
inc
ja
pop
pop
pop
or
andl
sti
mov
push
mov
sbb
and
jecxz
and
cmp
cltd
dec
pop
in
loop
push
leave
stos
in
cld
loope
jb
pop
and
in
mov
pusha
xchg
mov
fists
push
xor
mov
je
leave
push
repnz
fldl
sub
fsubrl
cmp
leave
in
xchg
inc
sub
lock
hlt
fsts
xchg
dec
movsb
push
scas
xchg
test
push
repnz
and
adc
cltd
dec
pop
rcl
push
leave
stos
in
enter
xchg
pop
and
stos
sub
xchg
dec
and
test
fcom
mov
cmp
ror
push
xor
xchg
push
clc
rorb
xchg
inc
sbb
je
dec
loop
xor
out
pop
and
sub
xor
inc
aam
inc
sarb
sbb
pop
addr16
rorl
cmp
mov
sub
sbb
loope
movsb
inc
ret
or
inc
sbb
xor
iret
dec
fdivs
adc
xlat
inc
xor
sbb
adc
push
imul
push
dec
pop
jae
sub
sub
and
cmpb
movsb
imul
or
sub
push
dec
inc
xor
push
testl
inc
aaa
mov
aas
mov
or
movsl
and
xchg
sbb
mov
inc
xlat
push
lcall
or
pop
dec
notb
add
ret
das
and
sbb
or
dec
aaa
sub
xor
addr16
xor
push
xchg
mov
scas
or
arpl
jg
mov
lahf
jnp
arpl
xlat
pop
inc
sub
sbb
dec
pop
dec
push
pop
enter
push
mov
mov
push
sti
mov
sbb
mov
ljmp
out
js
popa
les
filds
scas
mov
iret
aaa
outsl
inc
mov
js
scas
mov
das
push
fisubrl
pop
fmuls
rcrl
test
aas
pop
gs
add
or
mov
lods
mov
mov
andb
add
mov
bound
xor
or
adc
sbb
rclb
push
loop
mov
jbe
pop
lcall
shrb
jg
xchg
xchg
add
push
pop
xlat
pop
add
sbb
bound
movsb
insl
pop
lea
ds
pop
sbb
push
pop
add
sub
pop
or
and
add
mov
pop
sbb
cs
xchg
jb
add
pop
inc
popl
or
or
mov
fisttpl
cmp
inc
es
addr16
bound
adc
je
or
test
cmp
xor
sahf
gs
cltd
add
or
cmp
xor
mov
es
jae
and
sub
sub
rcl
inc
divl
aaa
imul
adc
mov
push
jbe
cmp
jnp
xor
xor
daa
outsb
xor
pusha
insb
and
mov
push
push
int3
add
in
ja
adc
ss
mov
bound
jge
or
pop
outsl
dec
js
fs
enter
pop
daa
sbb
dec
mov
stos
invd
xor
mov
add
ret
add
and
xor
push
inc
popf
or
addl
jae
stos
and
sbbl
in
add
into
popa
push
in
mov
or
push
adc
push
inc
imul
mov
repz
div
in
and
push
dec
pop
mov
addr16
cltd
filds
sbb
cmpsl
dec
lods
xchg
pop
inc
mov
pop
mov
sub
lock
and
bound
pop
jb
xorl
js
inc
imul
mov
mov
das
sbb
mov
pop
mov
adc
mov
push
fisttps
jo
pop
inc
ja
addps
push
sub
shrb
push
incl
pop
and
rdmsr
cs
add
rclb
xor
xchg
dec
movlps
das
or
pop
cmp
xchg
imul
popa
lods
adc
push
push
push
outsl
out
push
add
mov
ficomps
insb
fiadds
add
subl
jo
xor
cmpsb
je
push
scas
ret
dec
rcll
xchg
inc
push
inc
jecxz
dec
adc
xchg
push
add
xor
popl
lea
stos
lret
mov
adcl
movsb
mov
inc
imul
mull
ja
dec
es
outsb
cmp
push
out
ret
push
push
push
cmp
scas
lods
xor
repnz
out
es
mov
aad
add
loopne
mov
inc
push
mov
inc
xchg
cmp
inc
jns
neg
pop
ret
fs
dec
sub
orl
je
xor
pop
jecxz
pop
jnp
pop
sub
dec
shlb
or
inc
or
sti
push
lret
inc
jle
js
xor
inc
cmp
xchg
scas
jbe
dec
or
fiadds
and
ss
push
sbb
dec
mov
bound
xor
mov
incb
add
inc
ffree
inc
cs
lret
jb
push
cmpsl
xchg
loop
push
cmpsb
xchg
ja
cli
jo
xor
outsb
sbbl
mov
mov
xor
js
mov
arpl
sub
arpl
fs
lock
inc
iret
syscall
or
fidivrl
push
push
mov
into
sti
pop
js
inc
orb
cmp
pop
imul
pop
pop
mov
push
es
lock
outsb
pop
push
push
xor
dec
js
ret
divl
das
inc
pop
dec
es
das
push
fisubs
add
and
or
out
sti
pop
push
sysexit
mov
cs
dec
gs
sahf
push
outsl
push
push
cli
push
push
insl
sub
out
mov
insl
mov
inc
ja,pn
xor
mov
fimull
jp
pushl
push
fiaddl
jg
mov
das
xor
das
xor
outsl
pop
outsl
dec
xor
js
push
into
xor
adc
test
outsl
imul
or
sbb
lahf
xchg
inc
and
pop
add
lods
mov
lcall
add
aam
ljmp
lock
fsubrl
lret
fmuls
ljmp
ds
sub
and
push
lock
aas
add
xor
dec
jno
mov
mov
sbb
ja
jmp
xor
xchg
out
adc
add
sub
mov
imul
test
adc
je
shrl
mov
and
and
fs
das
or
pop
addl
mov
iret
sbb
das
arpl
cmp
sbb
out
scas
xor
or
xchg
mov
lahf
push
inc
das
stos
pop
mov
jg
mov
add
out
call
lahf
inc
mov
loopne
or
jmp
xor
mov
cmp
mov
mov
jae
outsb
mov
stos
fsubrs
shl
mov
sbb
or
xlat
inc
rorb
add
mov
sti
mov
push
dec
inc
pop
insb
outsl
popa
fs
outsl
aaa
mov
push
mov
or
adc
add
sbb
call
lods
or
in
cmpsl
addr16
push
xor
iret
lods
sub
mov
push
pop
stos
std
jl
mov
push
add
neg
sub
iret
addr16
in
fimuls
sbb
jecxz
arpl
pop
lods
je
addr16
in
cwtl
xchg
scas
repz
pop
pop
pop
push
outsl
mov
bound
xchg
pop
and
sbb
clc
cwtl
xchg
inc
cmpsl
adc
faddp
push
jle
jl
push
xchg
out
cmp
add
fisubrl
dec
ja
mov
int
pop
cmp
jne
jo
arpl
xor
das
rolb
pop
pop
ja
xor
xor
mov
imul
sbb
inc
push
pop
mov
xor
pop
repz
xchg
xchg
jae
and
jae
xor
cwtl
mov
sub
dec
mov
pop
add
sbb
pushl
add
das
push
sub
test
sub
xor
ret
push
loope
push
lahf
mov
lahf
scas
xlat
xor
sub
inc
sub
iret
add
xchg
or
in
nop
aas
jecxz
mov
jbe
les
imul
lods
cwtl
dec
daa
sti
pop
aad
shll
mov
fisubrl
adc
dec
xor
mov
and
loope
ret
popa
fldt
inc
or
xor
pusha
je
int
mov
int3
fs
xchg
or
mov
inc
push
and
push
mov
inc
inc
sub
rcrl
dec
loopne
push
sbb
jns
add
mov
aaa
iret
mov
xchg
cmp
nop
outsb
dec
arpl
mov
daa
popa
ss
pusha
jbe
stos
pop
movsb
push
testb
xlat
fmull
das
repz
aam
mov
outsl
pop
or
aaa
sub
je
int3
inc
push
fs
mov
das
jne
mov
mov
sub
daa
add
dec
xlat
jle
mov
mov
push
add
jmp
add
ss
inc
cmp
shr
add
loopne
test
imul
sbb
sub
xor
xchg
sbb
add
push
and
push
cld
outsl
pop
out
mov
or
add
push
adc
push
sbb
mov
iret
xor
repz
mov
mov
repz
or
xchg
data16
insb
or
pop
or
int
or
adc
adc
sbb
and
fwait
int
sub
xor
inc
mov
mov
jnp
mov
mov
popa
xchg
add
mov
push
shrb
ret
sub
shlb
data16
or
adc
insl
jo
stc
pop
add
xchg
rclb
ss
push
dec
str
int
mov
add
inc
stc
das
incl
nop
call
push
cmp
call
pop
outsl
movsb
push
sub
dec
dec
add
inc
sqrtps
decl
mov
mov
mov
push
and
mov
add
adc
xchg
mov
mov
lods
pop
dec
movsl
enter
jmp
jb
push
push
mov
inc
push
insl
ss
adc
cli
mov
sub
das
mulb
sub
mov
sbb
mov
mov
and
xor
pop
sbb
xor
mov
mov
fsubs
sbb
ret
ljmp
dec
pop
dec
xchg
jecxz
dec
push
sbb
xchg
add
pop
jb
mov
pop
push
and
cmp
jle
scas
loopnew
xchg
push
mov
inc
and
pusha
dec
jns,pn
insb
pop
add
add
aaa
jbe
or
or
push
insb
xchg
mov
xchg
andl
iret
leave
jae
sub
sbb
or
mov
fwait
in
pop
inc
xchg
out
pop
fdivl
pop
int3
xor
jns
sahf
mov
fwait
xchg
out
adc
mov
jl
add
inc
outsl
rolb
loop
xor
or
lahf
mov
add
pop
inc
cmovs
lods
mov
xorl
movb
fistl
je
lea
and
pop
pop
xorb
inc
mov
sbb
jnp
cmp
inc
mov
pop
xor
inc
adc
rcrb
inc
jecxz
add
xor
fisubs
mov
cmp
andl
jbe
pop
push
lock
movsl
and
xlat
push
mov
add
bound
je
bound
imul
pop
jns
inc
aas
mov
add
push
and
push
add
lret
jge
das
aaa
push
fisttps
push
imul
jecxz
inc
popa
aam
lahf
pop
mov
out
andl
inc
fwait
pop
dec
push
or
inc
push
scas
mov
mov
loopne
je
aaa
or
jo
aaa
bswap
or
mov
push
xor
xor
nop
cmpsb
lea
das
inc
mov
push
mov
xchg
mov
call
dec
or
rclb
aaa
xor
pand
push
dec
andl
mov
lahf
push
jl
jae
jb
pop
fistpl
in
inc
decl
mov
adc
fdivrs
push
outsl
xlat
push
sbb
aaa
rclb
fbstp
or
inc
or
jbe
mov
mov
dec
mov
push
lahf
dec
push
adc
inc
aaa
add
or
cmpsb
push
and
cli
mov
mov
rcrl
sti
xchg
jle
jnp
mov
dec
push
push
xor
mov
xor
rcll
and
push
mov
push
xchg
stos
pop
push
movsl
lcall
inc
shlb
push
pop
xchg
aaa
sti
mov
xchg
pop
mov
cmp
fnstenv
and
arpl
sub
mov
jbe
mov
addl
sbb
pusha
cs
incb
xchg
push
lods
push
lret
test
rclb
pop
pop
dec
hlt
scas
pushf
testb
mov
es
xchg
cmp
xchg
add
cmp
xchg
push
cs
dec
pop
push
and
mov
mov
and
ss
negl
push
ror
or
int
imul
repz
pop
stos
inc
pop
pop
xchg
fldenv
mov
push
cmc
dec
push
daa
data16
idivl
sub
aaa
outsl
out
ds
repz
je
mov
adc
out
jns
xor
fiaddl
pop
repnz
mov
mov
mov
lcall
mov
test
ds
jnp
testb
xchg
fsubrp
adc
xlat
pop
xlat
sbb
xor
icebp
jns
cs
movsl
pop
pop
out
cmp
push
mov
mov
sbb
outsb
inc
dec
pop
repz
push
push
jns
es
cmp
aas
repnz
pop
ds
outsb
nop
outsl
int3
inc
mov
push
adc
xchg
dec
rclb
dec
push
insb
jl
out
test
cmpsl
stc
out
shll
and
mov
sahf
out
push
xor
cmpsl
enter
dec
sub
stc
cmp
repz
mov
jns
cmpsl
es
jno
ss
out
and
push
mov
sahf
fprem1
adc
ds
repz
mov
cli
push
push
decl
or
dec
sbb
scas
dec
aam
aad
or
adc
and
rcrb
push
push
mov
xor
adc
mov
pop
pop
mov
scas
in
bound
int
mov
leave
loop
and
push
pop
sub
lahf
add
idivb
pop
sub
adc
push
and
pop
sbb
stc
sarl
enter
adc
repnz
inc
cmp
iret
ds
or
outsb
pop
adc
add
stos
jo
mov
xchg
rcrb
sbb
dec
std
shlb
push
cmp
xlat
adc
loopne
pop
push
and
iret
popf
lock
std
ja
outsb
outsb
jp
in
loop
xor
push
js
xor
stos
pop
inc
imul
cmp
xor
addl
sbb
pop
mov
aad
lods
iret
imul
push
dec
add
adc
jmp
aas
pop
push
dec
out
xor
push
push
outsl
inc
jb
popa
je
or
subl
push
fstpt
sub
pop
inc
mov
sti
inc
fisubrl
out
pop
push
ficompl
cs
decl
xchg
ss
sti
es
mov
sbb
ljmp
shlb
adc
scas
pop
in
daa
adc
and
dec
not
push
mov
push
pop
addr16
jno
fcoml
and
add
outsl
xlat
jecxz
jmp
jo
push
jo
pop
add
inc
jg
mov
dec
xor
inc
or
daa
jecxz
outsb
insl
jno
sbb
xchg
lret
in
jnp
mov
ficoml
mov
test
mov
jb
adc
imul
mov
fwait
mull
sbb
cmova
sbb
loop
lahf
and
dec
cwtl
pop
test
push
adc
orb
add
xchg
xchg
sti
rclb
jae
xor
daa
add
pusha
mov
sysexit
les
push
dec
daa
and
xorl
dec
daa
dec
mov
fs
jo
xor
daa
fists
push
outsl
imul
je
mov
add
pop
sub
add
jo
jg
aaa
mov
jb
loopne
add
jecxz
mov
mov
xor
ret
shll
test
cwtl
and
sbb
pop
pop
inc
dec
movsl
or
push
add
mov
jmp
aaa
fldt
das
das
sbb
scas
pop
sbb
scas
out
push
pop
mov
aad
ja
xchg
pop
addr16
arpl
mov
jae
fs
sub
adc
es
adc
mov
psubq
imull
jo
cmp
mov
pop
das
xchg
es
out
pop
shll
add
lret
dec
add
jge
arpl
or
fildl
cs
pop
dec
add
adc
mov
jne
cs
popw
mov
mov
outsl
aaa
imul
pop
aaa
imul
mov
das
testl
jg
insb
adc
shlb
xchg
das
sub
insl
or
add
das
push
fildl
mov
xchg
mov
inc
dec
push
mov
inc
jle
pusha
push
pop
imul
pop
push
fsub
jecxz
out
inc
pop
push
fmulp
inc
xor
or
add
lahf
push
add
cmp
loope
testl
aas
push
mov
rol
repz
popa
fldl
das
cmovns
adc
sahf
pop
inc
add
inc
dec
fidivl
xchg
aas
adcl
inc
stos
scas
mov
xlat
pop
or
pop
out
add
push
test
pop
outsl
clc
mov
aas
add
sub
or
jp
divl
inc
inc
push
inc
scas
sub
pop
cli
cmp
dec
pop
out
or
push
popl
pop
or
lret
fidivl
mov
xor
add
xchg
sbb
jbe
inc
aaa
ret
pop
outsl
bound
dec
and
pop
mov
inc
and
fdivs
dec
cmp
ret
outsl
dec
stos
arpl
lock
cmpsl
push
pushl
jg
ret
mov
add
inc
aaa
jno
push
dec
pop
pop
inc
dec
es
inc
mov
je
and
fildll
or
out
xchg
nop
outsl
or
das
adc
and
adc
jbe
dec
add
cmp
insb
je
aaa
shr
or
ds
jo
jae
inc
loope
mov
outsl
xor
push
call
xor
dec
mov
pop
sub
fdivrs
out
jns
je
jne
or
adc
sahf
dec
fbld
ja
mov
mov
dec
jae
mov
sbb
mov
cmp
jp
inc
pop
mov
push
inc
xor
xor
imul
adc
iret
jbe
xor
data16
jmp
push
inc
fiaddl
maskmovq
testl
out
pop
stos
mov
mov
icebp
sub
cmp
dec
shll
push
mov
jg
pop
and
loop,pn
pop
into
dec
inc
push
pop
stos
mov
jmp
mov
push
and
pop
aad
inc
inc
pop
daa
fwait
cwtl
ss
add
lods
addr16
add
push
add
aam
jns
add
adc
adc
inc
mov
push
and
rol
ret
mov
rorl
inc
adc
out
or
outsb
or
aaa
inc
insb
loopne
ljmp
mov
rolb
inc
pop
push
or
dec
out
jb
pop
loope
cmp
ds
aaa
add
add
push
pop
jns
outsl
incl
dec
inc
dec
push
xchg
add
inc
loop
and
pop
aas
mov
out
sbb
sub
movl
and
push
dec
into
add
mov
negl
sets
mov
inc
aaa
jno
sti
shlb
ret
cmp
adc
pop
movsb
cmpb
aad
sbb
cwtl
stos
pop
fadds
pop
adcl
test
and
jge
push
je
mov
jb
mov
andb
fwait
rol
fwait
in
inc
mov
bswap
mov
jmp
sub
fsubrl
stc
jbe
push
ds
insl
xor
jg
mov
inc
inc
xchg
cmpsl
aad
arpl
push
sub
adc
or
cs
insl
sub
adc
or
jmp
or
cs
ret
sub
xchg
mov
data16
mov
call
call
and
cltd
test
push
push
shll
ja
daa
mov
mov
mov
sbb
cmp
fmuls
lret
rep
cs
outsl
arpl
test
add
mov
jg
insb
mov
mull
jno
addr16
std
ljmp
scas
addr16
cmp
dec
movsl
jg
push
push
mov
fwait
stos
flds
pop
and
dec
ret
js
sbb
mov
mov
das
sbb
xor
add
pop
daa
daa
dec
in
xlat
daa
push
and
push
pop
inc
inc
inc
push
sar
fildl
and
or
aas
js
insb
cwtl
pop
fisubrl
push
pop
adc
fsubs
outsb
ds
or
inc
pop
ss
sub
pop
gs
inc
sbb
pop
aas
ds
push
pushw
push
mov
pop
push
sbb
xchg
push
js
loope
mov
lahf
daa
inc
add
sub
loop
lahf
jbe
inc
add
shrb
sub
mov
pop
inc
xor
lahf
stos
fdivrs
outsb
cwtl
push
insb
mov
cmpsl
xor
inc
adc
cmp
setg
neg
imulb
push
and
lcall
sar
ret
adcl
fcom
mov
push
fisubrs
xchg
mov
ret
add
pop
or
mov
sbb
daa
or
jno
jecxz
lahf
dec
pop
mov
push
xchg
push
aaa
test
push
rdmsr
pop
dec
rcrl
adc
xor
inc
les
push
adc
jb
lock
sub
out
push
imul
ror
jne
popa
loope
fwait
sub
out
and
bound
xor
add
es
sbb
sub
in
xchg
and
add
movsb
outsl
je
mov
popa
stos
mov
out
std
xchg
sub
sub
sub
push
cmp
mov
js
ret
dec
inc
sarl
xor
jo
movsb
popa
mov
addb
insl
outsl
fs
mov
mov
gs
jo
jns
iret
inc
mov
adc
outsl
insl
jne
adc
lcall
dec
fiadds
les
sub
das
cmp
and
js
je
bound
aaa
and
cmp
pop
jbe
pop
or
insb
mov
inc
inc
mov
lds
outsl
jo
mov
lods
cmc
push
sahf
dec
sub
jmp
mov
movsbl
popf
negb
xchg
inc
or
inc
push
stc
std
fisttpll
shrl
cmc
inc
cmovo
out
imul
cmpb
aas
adc
in
nop
jo
maxps
loopne
cs
add
mov
add
inc
smsw
and
dec
jne
pop
push
inc
enter
les
imul
sbb
cmp
out
ss
add
aas
add
shlb
mull
in
dec
xor
add
inc
push
push
push
jmp
jmp
insb
das
inc
add
fstp
add
lahf
ds
jnp
add
daa
les
or
fsub
in
fsubrs
jo
daa
outsl
inc
xchg
outsb
mov
out
lds
leave
daa
xchg
cmp
je
push
jo
mov
mov
push
and
dec
fsubl
xor
scas
fisttps
inc
test
add
in
and
scas
mov
inc
pushf
leave
mov
outsl
jle
pop
lods
pop
jb
mov
dec
or
sbb
or
jg
lret
rol
adc
in
jne
scas
push
push
pop
addr16
dec
ficoms
nop
xchg
out
lahf
mov
cmp
pop
and
sti
cmp
call
inc
inc
mov
xchg
fmuls
adc
and
xor
inc
lret
xchg
dec
iret
mov
inc
outsl
xchg
js
jb
jae
orb
movsb
mov
int3
fsubs
rorb
int3
out
aad
insl
daa
sbb
aas
out
fs
mov
daa
add
push
int3
jmp
mull
pusha
push
insb
push
mov
inc
add
push
xor
lods
ds
test
jb
push
in
xor
daa
push
hlt
mov
xor
jb
repz
push
push
mov
stos
aas
ja
aam
dec
enter
or
mov
aas
dec
pop
xor
movsb
inc
hlt
nop
sub
lods
outsl
scas
add
ja
fsub
inc
cs
into
sub
push
daa
lock
stc
lods
addr16
inc
enter
jo
cmp
sbb
testl
stos
mov
add
idivb
iret
xor
push
in
negb
cmp
push
in
mov
add
add
mov
in
dec
enter
iret
rcrb
xchg
inc
jo
jo
mov
daa
scas
jns
iret
aam
or
adc
pop
jb
lock
daa
cld
and
aaa
and
push
xchg
xchg
pusha
adc
pushf
cld
jl
decl
scas
iret
lds
aam
bound
in
es
out
or
pop
sbb
sub
shlb
aas
inc
sahf
outsl
insl
ja
rcrb
nop
out
jl
test
in
add
lods
shrb
mov
cmp
jb
xor
orl
xor
ds
jb
pusha
dec
rolb
mov
pusha
test
fidivl
mov
mov
enter
cld
or
or
mov
in
loopne
rcrl
in
cmp
shl
fcoml
fisubrl
or
out
lcall
cmpb
or
cmp
hlt
or
mov
cmpsl
cmp
aaa
and
dec
push
or
pop
cmpsb
pop
fisubs
bnd
jg
mov
mov
mov
iret
test
loopne
enter
add
mov
jb
loopne
xor
test
inc
push
pop
cmpsb
inc
loopne
push
enter
and
repnz
rorb
pop
in
push
push
cmpsl
mov
pop
enter
in
pop
cmpsb
jb
dec
enter
fsubrl
ds
js
inc
push
push
push
enter
xor
js
in
stc
jg
mov
outsb
dec
mov
dec
add
test
aam
pop
enter
enter
jae
clc
and
xor
and
sti
push
inc
xlat
lahf
clc
ja
dec
repz
lahf
and
je
pop
in
push
repnz
dec
lahf
je
enter
aam
and
repnz
les
mov
test
fadd
and
pop
stos
cli
push
cmp
xorps
nop
addr16
jg
test
fcom
hlt
mov
test
nop
out
cs
out
int3
loopne
loopne
das
in
mov
movsl
cmpsb
outsl
inc
and
xor
testl
cmpsb
aam
mov
fldenv
inc
fadds
fs
xchg
jl
xchg
mov
fsts
jb
fmull
inc
mov
ds
sbb
sub
out
sub
jg
pop
enter
pop
insb
sbb
fsubrs
pop
dec
repz
mov
aam
in
pop
stos
aas
push
cmpsl
mov
test
add
adc
sub
fiaddl
cmpsl
jg
lods
cmp
daa
addr16
leave
js
dec
add
or
test
fiaddl
mov
mov
lock
or
push
mov
lock
mov
sarb
lahf
dec
iret
les
inc
jbe
dec
pushf
inc
jl
sbb
lods
rcr
inc
scas
lea
cmpsl
pushf
push
xchg
out
lock
andb
lock
inc
fstl
fs
mov
push
enter
jg
outsb
in
stc
dec
int3
xchg
daa
movsb
lahf
pusha
insl
inc
jo
inc
ja
pop
enter
in
or
pop
adc
dec
enter
sarl
fimuls
sub
lahf
dec
inc
ja
sub
aaa
daa
sar
fisubs
jne,pn
push
lods
fdivrp
push
pushl
mov
cmpsl
jo
faddl
lahf
jo
test
fcompl
adc
cmp
push
fists
imul
dec
roll
lahf
int3
inc
or
or
rolb
push
hlt
mov
or
push
inc
jg
inc
lcall
lahf
push
orl
lahf
or
je
test
add
push
call
xorl
or
inc
enter
inc
mov
cmp
lock
cmp
iret
mov
mov
dec
in
insb
daa
or
lahf
in
inc
and
pop
imul
sarl
loopne
outsl
push
jae
add
jmp
loopne
loop
and
lahf
dec
cltd
lods
lods
add
lahf
or
in
jo
out
cs
fs
mov
in
nop
mov
rorb
mov
aaa
and
push
and
lahf
mov
ja
in
jb
iret
test
in
pop
enter
aam
fldl
or
in
lahf
mov
add
sbb
cs
inc
lock
in
mov
push
xchg
inc
stos
xchg
outsl
aas
mov
dec
sahf
imul
add
sahf
mov
rcr
or
das
adc
lahf
fmuls
in
push
and
inc
jo
push
movsb
das
fmuls
outsl
xchg
clc
push
fs
dec
sahf
jo
clc
outsl
lock
aad
cs
xchg
mov
iret
add
nop
or
flds
clc
push
repnz
and
nop
or
out
outsb
in
pushf
adc
daa
addr16
insb
or
add
sahf
pop
pushf
daa
lods
in
xchg
mov
xor
ljmp
mov
scas
xlat
pop
push
sbb
mov
push
sbb
push
sub
cmp
aas
call
les
incl
lods
pop
adc
ja
mov
mov
add
dec
in
repnz
cld
sub
fiadds
out
dec
dec
call
fwait
pop
push
pusha
daa
aas
movl
addr16
or
add
pop
out
repz
mov
ja
daa
sbb
dec
scas
fs
jmp
scas
in
cmp
in
scas
xor
dec
scas
in
and
aam
push
call
enter
add
push
pop
push
inc
xor
data16
icebp
cwtl
neg
dec
clc
adc
stc
mov
push
xor
lock
out
int3
mov
push
js
out
push
jns
out
sahf
push
inc
out
ds
ja
out
push
js
or
jl
jl
test
push
add
adc
scas
fisubs
jg
add
inc
inc
adc
dec
ja,pt
inc
cld
push
mov
push
ret
inc
lcall
add
nop
cmp
sub
in
mov
xchg
mov
idivl
push
or
fdivr
inc
push
push
incl
mov
jmp
ja
ss
arpl
leave
adc
popa
xchg
dec
inc
dec
outsl
scas
fs
pop
movsb
sti
inc
sbb
adc
add
shr
ret
xchg
cmp
loopne
in
in
outsl
add
insb
and
mov
daa
inc
in
ret
sarb
in
fildll
push
xor
cmp
filds
jb
scas
test
cmp
push
lock
adc
popa
and
push
rcrl
out
int3
sbb
and
xchg
mov
cmp
add
and
ljmp
dec
repnz
mov
scas
add
or
and
xor
push
jno
pop
xor
out
or
repnz
out
out
outsl
add
mov
fildll
loop
rolb
js
lcall
cwtl
add
jns
sub
add
jnp
xlat
add
adc
test
sub
leave
mov
je
negl
loopne
pop
jg
lods
or
out
adc
mov
sub
dec
enter
cld
lock
pop
in
and
outsl
sbb
xchg
and
fisubs
jl
adc
mov
fdivrp
and
push
xor
jbe
fcoms
add
aam
shl
xchg
add
cmpsl
pop
dec
out
sbb
daa
add
xlat
callw
cmpsl
in
push
xchg
aaa
sbb
add
fisubrs
divl
insb
jnp
jmp
push
fsubs
push
jbe
aaa
jmp
call
loopne
popa
popf
pop
mov
mov
sub
test
in
jg
push
jo
add
xor
cmovle
inc
repz
push
repz
jnp
ret
nop
pop
sbb
jecxz
push
ds
dec
add
js
mov
cwtl
mov
mov
divl
fisttps
hlt
adc
outsl
push
mov
mov
push
outsl
jg
inc
pop
cmp
pop
pusha
xchg
daa
cli
push
repnz
mov
mov
push
mov
cwtl
cmc
fnstsw
test
dec
xor
lcall
push
mov
pop
hlt
mov
loope
or
or
ficoml
and
or
decl
testb
aad
xlat
or
pushf
xchg
xchg
insb
dec
shl
push
testl
in
cmc
and
push
pop
cld
cmc
mov
testl
dec
push
push
mov
mov
testl
divb
xor
aaa
adc
divb
call
cmp
dec
divl
sub
outsl
sbb
or
js
cmpsl
push
pushf
nop
adc
xor
fiaddl
dec
mov
pusha
mov
jg
daa
cmpsl
mov
mov
clc
ja
loop
in
addb
xor
jg
in
fiaddl
int3
add
mov
jl
or
adc
bound
clc
and
in
push
mov
das
outsl
add
push
or
pop
mov
cmp
pop
dec
pop
cli
pop
adc
pop
stc
aaa
add
xchg
dec
and
mov
push
in
mov
lods
or
addr16
dec
xchg
add
add
daa
loopne
sub
daa
or
mov
inc
fcomip
sahf
xchg
test
movsb
adc
clc
sti
cmp
mov
fldt
ret
mov
or
aas
sub
push
test
xchg
sub
fdivrs
sti
sbb
movsb
mov
sti
push
sti
outsl
fsubl
inc
cs
fbld
rolb
add
add
xchg
aaa
and
cld
xchg
mov
mov
pop
pusha
and
xor
jl
out
lods
or
add
lahf
addr16
dec
loopne
or
out
les
jb
push
jb
add
pop
rcl
adc
mov
adc
push
mov
aas
arpl
or
idivb
fwait
sub
addr16
push
add
push
inc
mov
push
dec
mull
test
incb
sub
jns
or
jmp
das
aaa
and
outsb
dec
lcall
rcl
lock
or
inc
rcl
adc
mov
push
inc
ljmp
ja
shrb
clc
out
push
or
negl
mov
aam
clc
ja
pop
test
outsl
call
mov
mov
aad
shrb
add
dec
jns
int
shll
jae
xchg
repz
out
in
mov
cmpsl
stc
cmp
pushf
ret
mov
out
sahf
jo
mov
add
cmp
xchg
mov
sahf
out
cmp
repz
call
mov
sahf
cmpsl
stc
cmp
lea
repz
sarl
jbe
es
loope
jns
out
nop
cmp
jmp
cmp
pop
sbbb
jns
pop
mov
cmp
repz
insl
xchg
shl
sahf
cmpsl
stc
sub
cmp
out
or
jns
iret
rolb
xchg
and
iret
repz
add
add
arpl
cmp
imul
push
popf
rcrb
dec
repz
push
pop
movsb
sahf
ja
ds
pushf
ficomps
iret
sarl
inc
loop
lahf
push
out
out
lods
repnz
repz
ljmp
mov
out
ds
ds
mov
mov
mov
cmp
sbb
mov
cmpsb
movb
mov
loopne
cmpsl
jp,pt
jl
stc
sahf
mov
push
lahf
sbb
rcrl
push
stos
mov
push
stos
jbe
cli
xor
mov
lahf
lods
adc
jle
ds
jnp
jns
iret
sbb
repz
dec
jmp
mov
mov
xchg
imul
mov
lahf
iret
sarl
cmc
inc
mov
jmp
lahf
out
lcall
mov
iret
repz
mov
cmp
out
cmpsb
leave
pusha
mov
cmpsl
stc
add
mov
cmpb
enter
cmpsl
stc
out
repz
mov
sahf
mov
push
xchg
mov
cmp
repz
cmp
jns
out
ret
cli
xor
dec
jo
into
add
push
out
jl
cmpsl
out
lds
jns
push
mov
popa
push
enter
sahf
dec
subl
es
mov
fnstsw
lret
fiadds
mov
sarl
enter
xchg
mov
cmpsl
stc
cmp
push
iret
fwait
out
ss
jge
ja
push
mov
xor
pop
push
lods
cmp
out
xlat
cli
sub
stc
out
repz
ds
or
or
cmp
mov
add
out
lcall
mov
faddl
fdivs
cwtl
cmp
ja
push
lods
inc
fidivl
iret
sarl
imul
mov
ds
mov
or
test
test
daa
loopne
iret
imulb
shl
xchg
call
iret
div
jmp
push
sub
mov
xor
push
div
lcall
cli
loope
movsl
std
int
lods
mov
dec
add
xor
add
lahf
cmp
fnsave
int3
nopl
inc
incb
aas
mov
inc
cmp
repnz
popa
nopl
scas
adcl
lea
or
add
pop
aaa
int
mov
jge
inc
pop
mov
outsb
pop
leave
or
addb
adc
aas
pop
xchg
xor
das
fs
fsub
adc
pop
fildll
das
stos
popf
push
cmp
xchg
mov
sarl
aas
pop
cmp
into
mov
pop
and
movl
mov
or
out
aas
int3
adc
mov
sbb
push
outsl
adc
inc
movl
dec
sbb
inc
dec
pop
iret
mov
cmpsl
fmul
and
fwait
xor
and
inc
dec
pop
dec
jg
jb
cmp
dec
aas
in
xchg
outsl
test
scas
xlat
ss
push
inc
pop
or
lods
adc
movq
mov
clc
add
daa
hlt
push
ret
jl
pop
cmp
lods
cmpl
adc
shlb
ja
or
inc
push
push
pop
push
lahf
cmp
enter
inc
js
jns
xchg
xchg
pushf
movsb
or
mov
fists
inc
ffreep
movl
pop
cmp
mov
sarb
hlt
jne
repnz
pcmpeqb
scas
orb
les
dec
leave
sbbl
inc
inc
xchg
pop
inc
leave
or
jne
xchg
inc
shlb
lahf
leave
out
loope
push
dec
xchg
or
mov
add
inc
lds
inc
pop
inc
or
push
or
jmp
xchg
leave
mov
dec
fldenv
add
in
xchg
outsl
pop
iret
ja
pop
mov
mov
xor
in
mov
ja
fildl
outsb
fbstp
mov
mov
cmp
in
pushf
lea
push
mov
js
xchg
mov
push
push
pop
and
cmp
lret
push
inc
dec
mov
out
xchg
mov
fimull
cmp
aam
xchg
rorl
xchg
xchg
add
pop
ja
pop
jb
mov
xlat
popf
popa
scas
xor
push
mov
cmpsl
sbb
and
das
mov
pushf
in
mov
jo
push
fisttps
mov
push
scas
mov
xor
add
repnz
sub
pop
ret
or
inc
mov
mov
jl
add
cmp
push
push
lea
fdivrl
scas
in
leave
aam
xchg
lock
dec
cmpsb
popf
push
dec
mov
je
sarb
pop
ja
xchg
pop
mov
iret
fcompl
out
add
pop
fisubl
or
int3
adc
enter
cmpsl
xor
and
jb
call
sbb
push
addr16
pop
mov
push
daa
push
or
in
outsl
mov
xchg
xchg
xchg
add
pop
roll
adc
pop
xlat
movsl
ja
data16
aaa
dec
cmpsl
cmpsb
test
push
adcl
lea
test
mov
shrl
push
add
jne
popf
fldt
jne
jge
movl
je
dec
dec
mov
shl
popf
xor
push
dec
dec
cs
jo
repz
enter
add
out
and
ds
in
jbe
in
cmovbe
divps
popw
outsb
mov
sbb
pop
xchg
add
andb
jmp
repz
push
fcmovnb
out
iret
repz
or
or
or
repnz
lcall
mov
js
dec
push
add
jbe
scas
push
push
daa
pop
pop
addr16
ret
in
in
xorb
daa
mov
stos
xchg
mov
add
iret
repz
add
add
xchg
or
and
test
imul
xchg
leave
inc
cmp
push
cmpsl
add
cmpsl
in
inc
scas
ja
dec
pop
or
cmp
pop
mov
jb
das
jge
mov
and
nop
stos
nop
mov
fnsave
jb
ret
nop
rclb
mov
out
xchg
icebp
ss
or
sbb
sbb
cmp
aas
add
cmpsl
sub
pusha
sbb
leave
dec
lods
daa
jo
jne
das
mov
scas
test
inc
in
hlt
nop
in
inc
add
into
sbb
xchg
out
in
xchg
xchg
icebp
xchg
cld
xchg
or
sbb
fcmovnb
add
xor
add
bound
push
fists
test
jo
jno
pop
push
aas
mov
xchg
lock
jp
or
repnz
sbb
cmpsb
roll
scas
push
shlb
in
mov
push
add
mov
xchg
inc
dec
leave
add
sbb
sbb
sbb
jns
bswap
aas
nop
inc
push
sbb
nop
and
inc
sbb
xchg
push
mov
and
notl
ja
xchg
dec
enter
cmp
mov
aaa
sbb
xchg
mov
mov
sbb
push
daa
push
sbb
inc
jo
add
mov
sbb
jg
xchg
fildl
pop
mov
xchg
sbb
xchg
js
mov
aam
aas
pop
cmpsl
cmp
dec
jb
sbb
pop
pop
xor
pop
xlat
mov
outsl
into
out
inc
rcll
popl
mov
inc
sub
jb
sbb
leave
stos
push
mov
mov
push
filds
fs
push
je
jbe
das
and
inc
ucomiss
push
jmp
rclb
add
dec
lcall
dec
outsb
pop
int
xchg
inc
lds
ja
addr16
pop
dec
shl
pop
in
push
repnz
adc
paddw
mov
pop
adc
daa
lahf
add
mov
and
cmp
and
mov
sbbb
popf
adcl
push
add
iret
repz
add
ror
pop
in
sti
inc
or
pop
leave
mov
xchg
and
push
ret
mov
mov
sbb
movsb
sub
and
pop
and
xlat
test
movsb
in
es
and
rorb
repnz
cmc
xchg
or
sbb
and
jg
cmpl
push
inc
out
jb
add
fsubrs
xchg
cwtl
mov
int
push
out
clc
mov
adc
and
int
cwtl
je
popa
aaa
mov
test
mov
mov
pop
rclb
and
push
lcall
xchg
pushf
pop
mov
scas
add
mov
fnstsw
out
ja
cmp
icebp
xchg
es
rcrl
fbstp
and
out
push
sets
test
mov
mov
fistps
fs
pop
in
mov
mov
clc
stc
fcmovbe
out
adcb
push
pop
mov
cmp
adc
and
addb
mov
pop
sbb
es
popf
push
popf
add
iret
mov
cs
pop
cld
es
in
in
es
pushf
jbe
jecxz
jmp
scas
inc
daa
pop
jo
mov
cwtl
cltd
push
daa
aas
mov
ret
lret
outsl
rorl
add
out
fucomi
add
hlt
in
pop
sahf
out
setle
or
daa
sahf
mov
inc
jg
adc
inc
lret
adc
and
xor
mov
inc
push
push
mov
ja
pop
ja
pop
daa
jbe
daa
orl
mov
sbb
xlat
cmpsl
cltd
push
scas
movsb
push
lahf
scas
sahf
call
pop
push
leave
aam
fildl
sub
push
xlat
mov
cmp
xor
add
inc
xchg
adc
cmp
pop
mov
outsb
js
out
mov
jns
fstpl
lahf
sahf
lahf
sbb
push
pop
call
shlb
pminsw
vmwrite
sub
or
fstpl
dec
outsb
daa
iret
jnp
push
add
das
jo
fcmovne
repz
add
es
ja
xchg
cwtl
mov
cmpsl
addr16
pop
int3
sbb
in
daa
repnz
or
rcrl
xchg
and
pop
lods
inc
push
xchg
leave
and
int
mov
scas
ja
cmc
mov
mov
fs
mov
into
push
mov
push
pop
leave
jae
pop
dec
ja
test
fwait
bt
out
iret
cmp
mov
add
and
daa
daa
fiadds
push
pop
sbb
ljmp
dec
inc
cmovnp
add
in
fisubrs
ja
mov
mov
cmpsl
push
into
sub
sub
jae
iret
repz
sti
pop
movsb
pop
repz
or
ja
mov
ja
pop
repz
cmp
dec
add
add
cmp
leave
insl
js
orl
cltd
or
scas
das
mov
in
dec
sahf
push
adc
iret
enter
adc
pop
movsl
adc
shr
es
cmp
xor
ljmp
jmp
fbstp
pop
das
push
lcall
rsm
mov
jae
push
addr16
xchg
push
idiv
pop
push
cmpsb
mov
push
add
and
xlat
fcomps
shrb
setb
dec
cmpsb
xor
fnsave
ja
xorb
ss
cmp
push
inc
jb
and
push
shl
inc
jb
sti
cld
push
cmpsl
mov
pop
and
daa
cs
add
add
xor
pop
xchg
xchg
cmpsl
loopne
test
mov
int
das
add
in
test
addl
in
scas
mov
out
inc
scas
cld
xor
in
push
mov
call
les
orb
xor
xor
jo
add
pavgb
call
lock
adc
mov
test
and
loope
cmp
cmp
mov
or
mov
push
mov
mov
out
in
in
add
fucom
in
pop
inc
mov
test
test
xchg
and
mov
das
push
test
pop
je
out
mov
inc
mov
push
add
mov
jns
leave
xrelease
or
leave
leave
in
and
idiv
adc
sete
sub
es
xchg
stos
xor
pop
stos
xchg
popf
out
add
bound
add
jnp
jle
fsubrs
popf
pop
cmpsl
scas
addr16
cmp
adc
in
cmp
rolb
decb
sbb
push
push
mov
dec
mov
jo
outsb
stos
dec
xor
mov
xor
repnz
pushf
stos
cmpsl
stos
ss
fimull
loop
ljmp
repnz
jns
xchg
js
lods
lcall
in
and
mov
out
adc
jo
adcl
fldt
mov
mov
dec
dec
sub
fists
popa
sub
dec
out
pop
imull
dec
incl
lods
femms
push
push
pop
out
jns
pop
or
das
or
jns
xchg
aaa
aas
or
or
dec
push
push
pop
adc
repz
adc
jg
sahf
xlat
insl
pop
unpckhps
xchg
vphaddbw
xchg
lods
xlat
sbb
int3
mov
lods
das
std
repnz
scas
das
fsubl
sub
push
pop
cmp
int
ja
push
xchg
scas
js
shll
scas
scas
in
movsl
inc
jmp
cmp
cmp
scas
push
hlt
xchg
sbb
ss
das
pop
cmp
mov
imul
ja
cmp
xchg
pop
add
ja
or
scas
push
movzbl
dec
or
into
cmp
and
fimuls
pop
repnz
cmovle
add
outsl
jp
pop
cmp
push
aas
ret
jnp
in
rcll
jl
aas
pop
dec
or
pop
cmc
jo
aaa
or
push
adc
adc
pop
out
jo
adc
in
sbb
push
cmp
and
in
xchg
cmp
cmp
cmp
enter
xor
aas
push
add
xlat
outsl
dec
push
add
daa
daa
iret
enter
add
pushf
cmp
test
mov
lea
lret
or
pushl
repnz
sub
xor
loope
xlat
iret
inc
push
pop
jb
add
add
dec
and
incb
lcall
pusha
cmp
inc
fimuls
dec
mov
add
insb
jmp
repz
jp
add
xchg
push
repz
push
mov
inc
pop
cmp
push
loopne
or
inc
xchg
call
mov
jns
out
push
add
add
add
jns
out
add
add
sahf
push
jns
mov
xchg
jp
out
or
ss
add
push
push
repz
std
mov
add
mov
fnstcw
mov
ds
xchg
sbb
sub
repnz
cmp
in
fs
mov
ficompl
iret
pushl
lds
into
mov
and
arpl
or
aam
leave
add
aas
mov
xor
in
pop
in
in
in
in
aad
lds
push
adcb
lahf
addb
addr16
inc
cmp
inc
leave
in
mov
xchg
cmp
incb
xchg
add
leave
inc
mov
xchg
xchg
mov
in
mov
cmp
adc
lods
mov
pop
ss
ds
inc
shll
punpcklwd
insb
mov
inc
inc
lahf
jbe
cmp
cmpsl
scas
mov
ret
out
fisttpll
add
pop
cmp
enter
testb
or
mov
scas
js
push
mov
mov
or
or
stc
or
add
cs
and
gs
hlt
inc
and
insl
inc
mov
insb
scas
roll
scas
jl
pop
adc
sub
mov
mov
je
fildl
ja
fucomi
sub
call
jns
out
xlat
pop
fbstp
outsb
pop
out
maskmovq
or
inc
mov
sub
mov
inc
sbb
nop
cmp
frstor
add
push
mov
mov
lods
xchg
mov
nop
lcall
daa
adc
loopne
enter
dec
or
fcmovu
sbb
das
and
dec
je
test
push
addr16
pop
and
add
rorb
sahf
cmpl
dec
jecxz
mov
daa
mov
iret
in
hlt
mov
out
mov
xlat
mov
mov
mov
call
pop
jo
pop
hlt
loope
rcll
add
flds
dec
mov
cmpsl
push
and
fstps
xor
xchg
iret
add
mov
mov
out
add
das
jg
cmpl
xchg
fimuls
add
sahf
dec
pop
cmp
cmpsl
or
adc
stc
nopl
mov
fisubl
bound
jp
xchg
inc
daa
mov
mov
mov
fstpt
push
rcrl
psllq
movsb
add
fmull
out
jns
iret
or
std
push
or
mov
adc
push
push
setle
js
sub
out
adc
insb
cmp
scas
mov
daa
iret
add
das
jbe
leave
leave
jg
seta
xor
imul
mov
mov
mov
por
in
add
adc
xchg
add
and
aaa
mov
sahf
aaa
xacquire
fs
add
iret
mov
jle
xchg
pop
nop
subl
or
test
leave
movsb
mov
das
pop
xchg
xchg
mov
mov
decl
pop
mov
leave
and
push
push
mov
push
mov
xchg
setl
jbe
fildll
jns
leave
repz
in
pop
jo
out
dec
cli
dec
or
sub
sbb
je
pusha
punpckhbw
sahf
ja
mov
orb
push
add
dec
push
dec
cwtl
xlat
or
adc
lods
adc
push
xchg
pop
pop
push
aas
push
pop
leave
xor
shlb
mov
shlb
cmp
add
mov
cmpsl
push
sub
das
daa
daa
mov
je
jl
mov
mov
insl
xchg
outsb
pop
sub
iret
fidivrl
pop
ja
loop
ljmp
cli
add
pop
add
shl
xor
rcrl
repnz
scas
push
add
movsl
sarb
sar
iret
leave
in
in
mov
popf
pushf
pop
and
fiadds
mov
dec
iret
leave
insl
in
ret
sbb
add
insl
xchg
pop
xchg
sub
push
xchg
dec
dec
dec
outsb
daa
push
subps
sbb
das
popl
xchg
setg
iret
cmpsl
addr16
leave
leave
scas
mov
push
leave
inc
repnz
or
ljmp
mov
addr16
adc
xchg
mov
ret
mov
mov
punpcklbw
int3
pushf
pushf
fsubrl
mov
fwait
add
pop
push
mov
fbld
out
je
jmp
fists
aas
sbb
ja
lret
les
sub
xchg
jns
xor
add
setnp
push
cmp
rcr
popf
or
xlat
mov
les
push
inc
call
fmull
pop
aas
int3
paddq
xchg
mov
lds
cmp
and
lds
cmp
mov
leave
leave
leave
mov
xchg
pop
leave
aas
dec
outsb
mov
jecxz
out
xchg
lds
add
in
sub
aas
shufps
push
popa
pushf
pusha
push
aaa
push
rorb
imul
jae
in
push
fisttps
xchg
cmp
sbb
ja
scas
and
mov
clc
scas
fcmovne
in
iret
mov
loope
add
cld
movsb
adc
pop
pop
adc
iret
jae
mov
and
insl
xchg
inc
pop
dec
outsl
push
stos
cwtl
in
lcall
push
dec
ficomps
iret
xchg
fsubrl
sub
pop
popf
fildll
es
mov
das
lret
repz
cs
rcr
rorb
or
dec
and
push
pop
invd
push
push
cmpl
movsb
fstpt
add
setb
add
fcoms
fmull
fstpt
enter
pop
xchg
mov
mov
or
in
in
mov
or
leave
push
push
push
jle
leave
cmp
push
dec
leave
mov
imul
push
add
icebp
in
push
orl
inc
mov
or
pop
or
daa
sbb
lret
xchg
cmp
pop
rolb
fiaddl
fwait
mov
push
ljmp
out
push
iret
cli
push
or
das
or
pop
leave
out
decl
push
inc
shll
pop
sahf
pop
jmp
add
add
and
leave
cltd
lret
les
mov
mov
or
adc
leave
repz
add
stos
daa
aaa
inc
out
sub
lret
jmp
mov
mov
out
pop
outsl
in
jbe
insl
addr16
setg
cmpsl
bt
mov
pop
sahf
and
leave
cmp
mov
mov
push
sbb
add
and
push
sahf
out
sahf
or
pop
or
pop
out
or
int3
dec
and
sbb
cwtl
pop
mov
mov
xadd
push
fildl
xchg
lcall
addr16
repz
add
scas
test
fwait
pop
or
add
adc
and
sbb
pop
fbld
adcb
int
dec
mov
pop
int
cwtl
addl
out
loopne
repnz
pop
xchg
add
jg
pop
xor
mov
dec
pop
je
sub
add
dec
repnz
int
int
out
inc
dec
jne
sbb
out
outsb
mov
cmovo
dec
add
out
in
sahf
add
push
or
repz
or
leave
repz
cmp
repz
les
iret
adc
repz
ficoml
in
lock
adc
iret
adc
jnp
push
sbb
daa
sbb
repz
xor
cmp
dec
mov
adc
adc
adc
dec
dec
dec
dec
adc
push
or
push
sub
pop
xor
lock
out
iret
iret
jnp
xchg
mov
add
xchg
inc
xor
je
aas
push
xchg
out
push
jns
daa
lods
pop
jl
daa
daa
pop
leave
popf
mov
jmp
push
test
ffree
fidivs
scas
adc
das
add
scas
xchg
outsl
dec
sahf
or
pop
daa
or
push
mov
cmpsl
rcrb
ja
scas
push
dec
and
ljmp
rorb
mov
ja
push
pusha
test
jmp
cmp
mov
pop
mov
cmpsl
pop
sarb
cmp
enter
fsub
cmp
dec
mov
add
pop
xchg
iret
or
leave
lret
and
adc
sub
and
dec
push
and
xchg
jp
adc
iret
loopne
repnz
iret
cmp
rcll
pop
lcall
pop
adc
sar
and
mov
dec
push
pop
dec
xchg
xchg
out
add
out
mov
xchg
push
mov
ja
jbe
cltd
mov
ror
inc
dec
xor
xchg
repz
in
rorl
push
add
add
jns
leave
sbb
push
add
mov
xor
pop
cmp
or
repz
sahf
or
push
or
or
popa
push
imul
dec
adc
repnz
mov
xchg
pushf
inc
ss
movsb
xchg
push
popa
pop
pushf
fmull
movl
repz
shl
ja
loopne
cmp
inc
das
fdiv
inc
mov
add
rcrb
xor
lret
test
movsl
xlat
push
dec
inc
aam
push
lret
test
iret
add
aam
pop
les
outsb
push
fildll
jno
add
mov
or
xlat
gs
outsb
negl
jmp
sub
fs
iret
mov
dec
iret
xlat
pandn
outsb
pop
pushf
out
out
maskmovq
testl
sbb
and
and
push
mov
fcmovne
leave
inc
arpl
shld
fcomps
jmp
cmpsb
addr16
adc
or
sub
pop
jb
and
cwtl
rcrb
push
hlt
xchg
xlat
cmova
incl
push
jg
fldt
sub
or
xor
imull
push
mov
cmp
adc
jmp
mov
gs
movl
and
outsb
xchg
add
jmp
loope
add
or
psubsw
mov
cmova
push
pop
pop
xlat
iret
mov
inc
iret
popa
xlat
push
push
jno
jb
es
pop
add
mov
iret
leave
jns
or
movntq
out
cmp
adc
fsubrl
xchg
sarb
cmp
int3
paddq
mov
mov
jl
xchg
idiv
addr16
inc
jmp
enter
sub
js
xchg
dec
cld
dec
data16
jg
xor
mov
lahf
pxor
push
xchg
push
add
setae
in
idivl
enter
fsts
or
sub
xor
add
addr16
push
ret
test
outsb
fnstenv
leave
sub
push
mov
fwait
pop
movsl
xchg
pop
push
enter
lar
push
pop
sub
fldt
es
ud0
vmwrite
enter
ficoml
mov
aaa
fidivrl
or
mov
es
imul
mov
push
add
imul
dec
mov
ficompl
mov
fidivl
decl
xchg
mov
loope
cmp
push
cmp
push
daa
adc
xchg
cmp
scas
or
or
jnp
test
push
ja
in
xchg
push
or
adc
pop
fcmovnu
add
nop
push
xchg
cmp
dec
xorps
add
int3
test
sub
mov
popf
pop
pop
fisttpll
fisubl
imul
psubd
mov
and
xchg
in
fsubl
xchg
mov
xchg
pop
int3
xchg
fnstsw
add
loop
xchg
nopl
lods
daa
aaa
das
jg
xchg
xchg
fcomip
fdivr
pop
jb
outsb
or
pop
push
add
iret
jae
jb
add
or
sbb
and
or
rclb
dec
adc
mov
fisttpll
mov
pop
push
add
arpl
mov
mov
je
cmp
mov
es
mov
sahf
or
xlat
or
leave
out
or
insl
add
inc
inc
xchg
ficomps
push
mov
push
xlat
fmulp
pop
cmp
add
das
xchg
jae
js
push
popf
pop
dec
pop
lods
jns
pop
stos
iret
mov
dec
andnps
or
pop
fsub
pop
push
pop
gs
out
sahf
out
adc
jge
xchg
pushf
je
test
adc
mov
pop
vpmullw
jns
in
sbb
nopl
in
je
out
cmc
pop
std
mov
out
sbb
add
adc
mov
dec
and
sub
out
dec
xor
out
sahf
out
dec
sub
sub
pop
cs
insl
mov
mov
fildll
xor
insl
pop
lds
mov
sub
pop
cltd
and
dec
fsubrl
jmp
into
adc
push
aas
push
repnz
inc
fistps
jp
dec
jo
loopne
sbb
cltd
fnstsw
xchg
daa
pop
leave
test
andps
fmull
pop
xchg
add
leave
enter
outsl
mov
cmpsl
fwait
mov
push
mov
popf
scas
cmpsl
mov
mov
leave
repz
loopne
jmp
idivb
imull
add
or
cmp
iret
cmp
push
adc
adc
mov
adc
jns
iret
repz
test
push
pop
lcall
sbb
repz
sbb
sbb
out
repz
loope
cmp
rorl
and
repz
daa
and
inc
and
dec
es
daa
push
sub
subb
repz
sub
repz
cs
das
shlb
fucomi
aas
repz
addr16
jg
jecxz
adc
mov
jecxz
repz
inc
es
cmp
repz
push
and
and
cmp
rep
and
or
cmp
and
cmp
repz
scas
sbb
repz
iret
sbb
iret
repz
pop
in
lock
sti
sahf
cmpsl
stc
cmp
push
in
adc
cmp
repz
sbb
sub
scas
fwait
mov
inc
pop
push
jle
jb
jmp
pop
dec
cmovp
pop
pop
data16
sahf
ja
das
jle
mov
push
xchg
or
lahf
add
in
in
push
leave
bound
jno
outsl
call
psadbw
in
pop
in
inc
pop
pop
daa
in
in
pop
sahf
out
sahf
aas
or
or
out
or
cmpb
loopne
jle
in
setle
cmp
repz
repz
mov
adc
ficoml
in
out
xchg
pop
iret
repz
sbb
repz
sbb
sbb
xor
cmp
cmp
and
push
in
jo
js
orl
mov
cmpsb
push
sbb
repz
iret
repz
adc
in
iret
repz
in
adc
adc
ret
repz
movd
or
or
adc
sbb
and
cmp
repz
or
or
sbb
dec
inc
out
out
push
ds
dec
aaa
jns
cmovo
fsubrs
out
push
je
jp
ljmp
mov
mov
fistpl
pmaxub
pop
jo
mov
int
aad
or
mov
lahf
in
mov
in
push
pop
std
out
lea
pop
add
push
adc
sbb
iret
leave
leave
in
aaa
pop
aas
inc
push
sbb
adc
cmpsl
sbb
addb
cwtl
jbe
call
dec
ja
call
push
push
daa
mov
xchg
out
add
jecxz
add
jbe
psubq
jmp
jb
sbb
and
in
sahf
out
adc
popf
cmp
push
push
adc
jb
jb
jp
orb
lcall
jb
ret
and
and
jmp
shlb
ljmp
ljmp
jns
cmp
dec
sahf
pop
push
pop
packsswb
or
je
imul
jae
push
out
dec
sahf
push
orl
daa
mov
fwait
mov
scas
daa
push
leave
addr16
adc
loope
jb
daa
out
ljmp
iret
repz
adc
add
iret
leave
repz
xor
leave
repz
push
or
jns
out
pusha
push
imul
cmp
out
adcl
dec
sahf
ja
push
adc
into
psubusw
out
pop
in
out
sbb
iret
in
pop
cmp
in
pop
adc
pop
sbb
xor
cmp
pushf
cmp
inc
and
and
and
leave
repz
xchg
lahf
rsm
sahf
xchg
xchg
xchg
mov
lret
lds
in
imul
outsl
movsb
push
leave
xor
call
jne
addr16
iret
push
pop
sub
dec
push
add
dec
in
out
sahf
pop
push
add
out
sahf
pop
je
jle
xchg
lcall
mov
jae
jb
lret
jns
daa
loop
ljmp
cli
sbb
out
bndldx
dec
aaa
jns
or
adc
sbb
cmp
and
xchg
inc
pop
maxps
pushf
pushf
pushf
jno
orl
out
mov
insl
lods
das
mov
or
jl
xchg
xchg
test
fidivrs
push
std
or
push
jl
mov
and
fildll
push
or
cmp
repnz
fwait
push
or
bound
mov
jp
outsb
mov
in
test
lahf
fwait
mov
cmp
repz
adc
adc
fcmovne
aam
paddsb
lock
iret
repz
push
fistpl
sbb
cmc
push
add
mov
cmp
push
nop
pop
and
lahf
in
in
cmp
icebp
mov
add
maskmovq
jae
movaps
sub
sub
jae
cmp
sub
cmp
repz
pop
xor
repz
repz
jge
mov
repz
fidivs
xchg
sahf
sahf
ss
aaa
xchg
cmpsb
repnz
cmp
cmp
mov
lahf
icebp
aas
jb
cmp
sahf
out
fidivrs
aas
mov
stos
scas
mov
roll
iret
repz
inc
xlat
inc
in
outsl
daa
iret
inc
icebp
das
or
dec
adc
cmp
repz
adc
add
lock
daa
je
dec
int
dec
adcl
sarb
js
movsl
xchg
jge
jg
pop
repnz
fcoml
mov
jle
mov
push
ja
cmp
push
mov
in
jns
or
or
fdivrl
and
repnz
iret
repz
push
sbb
adc
inc
push
adc
adc
push
popa
insb
pop
sbb
fsubrl
orb
pop
lcall
mov
bswap
push
and
in
repnz
por
dec
ss
icebp
add
jg
or
cmp
inc
push
add
pop
xchg
cwtl
fs
hlt
sbbl
push
add
popf
add
mov
pop
mov
pop
cmp
fcompl
cmc
hlt
jl
mov
pop
or
cmovle
cmc
cmp
mov
push
adc
adc
mov
adc
repz
pop
pop
sbb
out
fidivrs
sbb
repnz
mov
sub
iret
jnp
xor
push
shll
jae
mov
fimuls
jmp
cmp
daa
ljmp
or
cs
and
push
sub
fnstcw
fbstp
cwtl
addl
dec
jg
mov
sbb
div
popf
cmp
repz
add
mov
fidivrs
lahf
out
jecxz,pn
repnz
adc
outsl
jp
pop
testl
negl
cmp
push
push
push
sahf
out
dec
pop
punpckhbw
or
je
out
jle
mov
or
xchg
push
lahf
stos
adc
cmp
repz
rclb
mov
sbb
out
pop
jecxz
out
sahf
adc
ds
pop
stc
and
and
sbb
sbb
mov
out
push
sbb
sbb
sahf
out
pop
aas
and
out
pop
and
in
sahf
out
and
mov
in
popf
out
leave
scas
loopne
rcr
testb
push
or
sbb
test
sub
enter
inc
mov
xor
out
sahf
out
add
push
add
cmp
xchg
pop
push
iret
repz
or
cmp
repz
mov
mov
repnz
ficoms
xor
pop
mov
out
cmp
cli
push
adc
push
adc
and
cli
outsl
cmp
inc
cs
dec
sahf
out
sbb
cli
dec
and
js
cmpsb
cli
xchg
out
adc
push
add
ror
xlat
push
add
scas
push
pop
out
bnd
out
testl
sbb
sti
prefetch
sti
daa
iret
repz
adc
cmp
inc
cmovge
adc
daa
iret
repz
pop
insl
js
out
outsb
pop
sbbl
sbb
sbb
sbb
out
in
mov
and
iret
and
and
repnz
out
cmp
cld
adc
sub
add
add
adc
leave
repz
pop
or
pop
in
cld
pop
test
repz
aaa
femms
fwait
jae
cmp
adc
outsb
daa
iret
adc
call
in
femms
sbb
sbb
cld
or
push
push
sbb
mov
pop
aaa
inc
std
repz
lahf
dec
std
fisttps
iret
repz
arpl
and
popf
cmp
setp
cmovs
pop
pop
sub
xchg
and
xor
enter
decl
add
outsb
mov
out
sbb
xor
das
dec
pop
in
sbb
mov
enter
jns
push
mov
mov
pop
syscall
lcall
mov
mov
repnz
syscall
or
fucomi
in
or
movntq
enter
adc
sub
iret
repz
adc
repnz
lcall
out
cmp
les
iret
fisubrl
sbb
cmp
sahf
in
lock
decl
jne
jmp
push
das
popa
push
and
jns
xchg
insb
ja
orb
cwtl
daa
mov
xchg
scas
pop
das
sub
dec
sahf
out
sub
movsb
fwait
cmp
fidivl
in
pop
jnp
cmp
xor
lock
push
add
cmp
adc
sbb
ds
in
xchg
add
jmp
insb
por
jns
ja
cmp
in
repnz
cwtl
incl
mov
sbb
jl
btc
popf
stos
das
mov
fsubrl
iret
push
ror
fmuls
jecxz
iret
leave
repz
stc
or
add
frstor
adc
das
sbb
daa
push
adc
cmp
xor
cmp
out
outsb
daa
pusha
das
imul
push
pop
jbe
jns
sbbl
pop
sahf
out
in
mov
repz
psubsb
repz
dec
inc
ds
add
cs
xchg
and
arpl
outsb
jae
cmp
sub
test
stc
icebp
sub
pop
cs
iret
fwait
sbb
push
xor
xor
xor
outsb
xor
mov
bsf
cmpsb
js
jb
fisttpll
iret
push
in
jecxz
packsswb
cmp
pop
add
mov
push
add
iret
mov
push
pop
mov
daa
mov
or
mov
pextrw
das
smsw
add
in
add
add
xor
push
or
jl
rcrl
xor
dec
jo
mov
outsb
adc
push
cmpsl
mov
iret
aaa
cmp
cmp
adc
dec
js
and
pusha
mov
add
pop
sbb
sub
mov
out
aaa
mov
add
pop
in
push
rcll
fs
push
daa
xchg
ss
add
add
aas
inc
push
or
les
pop
ljmp
outsb
pop
cmp
dec
aaa
test
add
xlat
xacquire
add
push
rol
push
push
mov
xchg
and
push
pop
or
in
in
or
or
or
outsb
mov
scas
or
daa
dec
outsb
ja
push
adc
and
pop
inc
inc
push
addr16
das
mov
in
jbe
xorps
insl
out
sbb
notl
fildl
pop
andb
iret
add
addl
cmp
mov
fsubrl
cmp
sbb
and
dec
sbb
add
or
sbb
pusha
inc
adc
add
lods
and
add
mov
inc
and
adc
adc
stos
cmp
pop
test
lds
adc
inc
xchg
or
lods
pusha
cmpb
cmpsb
fisttps
mov
stc
sbbl
mov
sbb
cmovo
add
mov
sbb
in
mov
mov
push
add
notb
add
fidivl
rcr
fsubp
stc
jb
xchg
mov
xor
sahf
addr16
out
pushf
and
xchg
nop
jns
out
mov
jns
out
pusha
push
dec
inc
sahf
out
sahf
cmp
xor
sub
jns
out
and
sbb
adc
xor
out
or
and
in
and
repz
push
aam
shlb
mov
movsb
repz
repz
push
fs
pop
push
cmp
jns
dec
mov
cmp
sbb
out
fdivrp
clc
and
aam
mov
mov
mov
cmp
jns
js
jo
pusha
ja
cmp
push
cmp
and
push
iret
repz
or
and
fadd
mov
jnp
mov
pushf
push
je
pusha
or
adcb
icebp
or
add
adc
imulb
sbb
add
mov
pushf
lock
js
clc
mulb
mov
dec
hlt
xor
cmp
cltd
pop
aas
sbb
es
push
test
insl
add
or
clc
pop
and
cwtl
xchg
xorb
addr16
outsl
lock
call
push
mov
mov
jg
mov
cmp
mov
inc
dec
inc
sgdtl
push
adc
mov
sbb
dec
lock
mov
or
and
sti
add
add
fadd
xor
insb
push
insl
jb
testl
inc
outsl
and
test
iret
xchg
sub
mov
js,pn
cmpsb
fiaddl
inc
stc
pop
jg
jl
add
negb
stc
pop
out
insb
sbb
add
out
mov
adc
xchg
es
iret
cmp
xor
ss
repz
jle
cmp
sahf
out
push
and
sbb
push
adc
ds
and
iret
jnp
push
dec
push
fcoms
push
aam
iret
repz
rorb
or
jnp
repz
pop
inc
sbb
fcompl
jns
idivl
adc
xor
sub
push
sahf
out
and
push
and
iret
repz
adc
and
add
clc
aaa
inc
int
xchg
int3
out
clc
shr
cmp
pop
imul
daa
xor
pop
mov
xchg
cld
subb
inc
xor
lea
add
loopne
rcr
fistl
cmp
iret
repz
pop
js
mov
repz
out
cmp
dec
insl
add
jns
out
push
pop
ja
mov
loopne
iret
loopne
jae
das
push
dec
insb
push
xor
lods
dec
pop
daa
jns
pop
mov
cli
or
pop
repnz
or
ret
lar
repnz
adc
pop
and
sbb
jmp
ret
inc
and
sahf
mov
sub
inc
rcrb
and
sbb
cmp
incl
xchg
xlat
xchg
inc
push
add
inc
stc
mov
adc
mov
decl
fistpl
js
inc
outsl
loopne
jmp
xchg
test
mov
cmp
inc
mov
fisttpll
jmp
stos
push
inc
mov
repnz
test
pop
stos
clc
scas
adc
inc
cli
inc
jmp
aam
imul
loope
jp
iret
inc
gs
xchg
push
cmpsb
scas
mov
or
incl
dec
dec
pop
inc
in
xchg
cmp
xor
dec
cmpsl
in
cmp
sahf
xchg
pop
incl
lcall
lock
mov
popa
sar
mov
sbbb
xchg
clc
repz
aam
jmp
mov
subb
fwait
xchg
and
out
aas
xor
xor
int
add
aas
jno
or
mov
clc
aas
pop
fs
dec
lea
aas
ret
shrl
mov
icebp
aas
rorb
and
incl
lds
mov
insb
scas
add
aas
xor
aad
mov
std
std
into
popa
test
ja
stos
in
das
dec
pop
loope
les
aas
xchg
les
jne
int
mov
ljmp
xchg
cmp
push
mov
xchg
aas
and
loop
mov
jp
popa
push
pop
sarl
mov
call
adc
das
lea
mov
inc
inc
aas
movsl
jmp
jg
sub
jge
mov
inc
rcr
push
arpl
int3
and
call
cmp
jp
and
pushl
shrb
inc
xchg
mov
fmull
call
pushl
xchg
test
pop
mov
jne
fldt
cmp
jno
shlb
out
decl
pop
cmp
fisubl
xor
push
lahf
inc
pop
mov
sub
dec
in
pushl
xor
push
scas
into
imul
faddp
jge
call
mov
xchg
cmp
push
andl
push
decl
gs
std
orl
pop
ficomps
frstor
leave
adc
add
add
mov
jo
xlat
add
lock
inc
je
inc
inc
push
dec
addr16
pop
and
dec
dec
inc
push
dec
inc
aaa
xor
insl
fwait
gs
dec
mov
mov
call
push
inc
dec
stos
insl
jbe
inc
jo
inc
popa
push
outsb
jbe
imul
push
sub
outsl
lock
mov
imul
dec
push
sub
outsl
add
cmp
pop
xor
rcl
or
push
dec
pusha
push
or
push
inc
dec
push
inc
push
and
mov
jo
jb
push
sbb
inc
test
lock
dec
inc
gs
gs
mov
jbe
addb
arpl
inc
or
mov
sbb
sub
dec
outsl
push
dec
pop
mov
inc
push
xchg
xchg
add
aaa
lcall
add
rorb
insb
push
das
push
fs
sub
imul
inc
adc
daa
dec
sub
mov
imul
xor
inc
jg
mov
clc
inc
inc
jns
dec
lahf
push
imul
adc
les
push
cmp
lods
mov
push
je
dec
add
xor
mov
adc
dec
in
inc
ds
je
sbb
out
dec
push
dec
dec
lods
std
dec
add
dec
bound
jbe
movsl
cmpsb
sbb
xchg
sub
scas
push
mov
or
inc
cmpsb
dec
adc
fstpt
dec
cli
adc
outsb
arpl
outsl
push
bound
inc
dec
dec
pop
xlat
int3
xchg
add
push
jmp
adc
mov
push
mov
ja
inc
xchg
push
push
in
sbb
imul
imul
mov
fisubl
push
mov
pop
inc
add
loope
jg
idivl
mov
push
push
push
imul
sbb
pop
outsl
push
jb
push
mov
jbe
lds
das
jo
adc
push
xlat
push
inc
mov
push
dec
stos
fcoms
gs
lods
mov
mov
cmp
push
insl
cmc
inc
arpl
push
push
push
pushf
nop
push
pusha
out
or
inc
pop
jg
push
mov
outsl
xchg
fisttpl
mov
movsl
add
mov
data16
inc
add
fisttpl
xchg
mov
pusha
pop
pop
ja
or
pusha
pop
es
inc
pop
stos
mov
push
pop
jno
add
pop
push
pusha
add
sbb
lahf
pusha
mov
scas
mov
inc
sar
cmpsl
push
and
aad
dec
je
dec
lahf
mov
push
xchg
inc
dec
sub
stos
and
leave
dec
cmp
mov
mov
mov
leave
adcl
stos
iret
aas
decl
lahf
sub
nop
lods
mov
inc
adc
or
cmpsl
dec
push
orl
rsqrtps
push
dec
daa
dec
dec
sub
or
out
cwtl
xchg
cmp
cmpsl
xchg
push
inc
in
arpl
dec
outsl
sbb
insl
imul
xchg
clc
pop
push
jne
les
outsl
rolb
loopne
push
sbb
pop
dec
outsl
or
aad
iret
insl
mov
popa
inc
iret
pop
les
addb
fdivrl
inc
das
xlat
mov
dec
jg
repz
and
push
mov
stc
cmp
cmp
lock
out
sahf
shlb
cwtl
or
mov
daa
jl
iret
leave
mov
das
push
mov
mov
push
and
lahf
incl
inc
addb
sub
push
out
mov
les
push
push
xor
xchg
fs
xor
fdivrl
jmp
rclb
mov
jl
jle
sub
mov
sbb
dec
jno
repz
test
ficompl
jmp
jmp
mov
hlt
movl
imul
std
in
leave
mov
add
ljmp
arpl
or
pop
adc
in
pusha
aad
jno
mov
inc
call
add
std
test
movsl
cli
test
xor
leave
mov
lods
jecxz
fdivs
jne
lcall
iret
or
shrl
cmp
ficoms
push
xlat
enter
mov
and
mov
cltd
xchg
mov
mov
or
or
jg
and
mov
jl
das
adc
stos
sbb
data16
inc
fdivl
pushl
add
aad
mov
mov
movsl
in
lahf
xor
mov
js
out
mov
stc
mov
push
loope
or
cmp
fs
add
hlt
push
imul
insb
sbb
xor
dec
add
in
xchg
push
insb
jnp
jmp
or
fnstenv
adc
mov
mov
bound
or
adc
gs
aam
pop
popa
mov
into
pop
cmp
mov
inc
movsl
fisttps
xchg
fadd
shll
jmp
outsb
xor
mov
sarb
pusha
fidivl
add
in
add
pop
dec
or
cmp
add
daa
adc
or
decl
and
test
or
mov
popa
into
push
stc
ficomps
leave
fldcw
and
call
pop
cmp
mov
cmp
lods
insb
mov
in
mov
mov
add
pushl
ljmp
fildl
push
fdivl
or
test
fs
ds
or
ljmp
or
push
in
decl
xchg
daa
scas
add
mov
pop
jge
xchg
shlb
add
inc
jmp
pop
push
test
ss
sbb
push
imul
aam
loopne
rorl
jp
adc
dec
frstor
fistpll
mov
mov
aad
mov
call
xchg
shll
inc
fdivrs
push
repnz
addr16
cmpsb
fldl
mov
dec
ss
fisubrl
or
scas
idiv
decl
ss
jp
inc
ret
out
pusha
fists
addr16
mov
jns
imul
andl
call
outsl
and
xchg
ja
int3
add
mov
das
es
lds
or
lcall
sub
mov
cmpsl
call
ret
shlb
sbb
ret
es
pushf
outsl
cli
jmp
insl
add
ss
jmp
addr16
jb
push
hlt
orb
call
mov
jnp
sbb
xchg
or
out
fdivrl
fisttpl
aam
roll
inc
loop
icebp
clc
mov
push
int
mov
mul
ja
outsl
ja
mov
out
cli
pushl
jo
ud0
cmp
pop
or
adc
sahf
gs
clc
sar
imul
ljmp
mov
loop
mov
push
addl
mov
cmp
cmpsl
notl
pusha
rorb
ljmp
ds
push
scas
fcompl
fldenv
filds
cmp
aaa
push
scas
mov
fidivrs
pushl
xor
mov
lret
mov
cmpsb
mov
sarb
sub
ficoms
fldenv
jp,pn
mov
dec
popa
les
sbb
xchg
sub
aaa
mov
or
sbb
or
out
add
iret
push
add
movsl
and
aam
sbb
mov
inc
xchg
jne
mulb
imul
pop
sub
aam
imul
mov
fistps
jbe
push
jns
or
std
outsb
arpl
arpl
mov
sbb
insl
jns
add
jne
outsl
insl
addr16
xchg
fildl
xor
out
or
push
cmp
or
out
and
dec
dec
inc
js
inc
insl
bound
inc
out
push
jo
jne
inc
inc
inc
js
fadd
mov
push
dec
orl
jno
mov
and
xor
pop
inc
cmp
pop
bound
xor
aaa
cmp
call
mov
popa
arpl
cmp
arpl
or
xor
bound
pop
xor
popa
add
ret
xlat
push
inc
jbe
pop
sbb
mulb
icebp
xor
inc
or
in
cmp
add
ror
lret
add
inc
loope
ljmp
cs
hlt
lods
test
ss
jbe
divb
aad
arpl
popl
add
aas
test
xor
inc
loopne
and
push
lock
aaa
addl
mov
test
mov
push
xorl
sub
dec
mov
je
aaa
roll
fidivrs
inc
push
bound
add
ljmp
mov
and
jae
popa
jne
and
xor
scas
pop
inc
aas
dec
push
mov
inc
adc
xor
mov
es
inc
inc
inc
add
insl
test
adc
ds
imulb
pop
sbb
push
dec
dec
lea
imul
xchg
add
mov
mov
ja
outsb
jne
pop
insl
inc
dec
add
push
xchg
jge
xor
cmp
adc
arpl
add
mov
xor
addr16
push
jns
pop
jo
or
push
inc
imul
aas
std
or
cltd
dec
loopne
push
jbe
je
sbb
popf
sbb
dec
mov
subb
test
lahf
inc
mov
or
sub
push
pop
xlat
arpl
add
mov
daa
inc
jb
pushf
xor
or
lock
popa
jo
lahf
sbb
outsl
test
mov
jbe
push
jno
mov
lds
in
push
or
nop
test
adc
das
aam
arpl
push
mov
cmp
mov
jo
push
inc
mov
push
pop
push
and
push
loopne
insb
jns
das
insb
jmp
loopne
pusha
push
popa
jb
or
sub
test
adc
or
add
push
bound
sub
addr16
test
push
aaa
ja
mov
adc
jae
push
loop
popf
xor
add
ret
push
mov
aaa
pop
sar
sub
sub
mov
addr16
pop
cmp
add
jns
lods
sub
scas
sub
aas
arpl
ret
jg
mov
add
aaa
aam
pusha
das
fcoms
push
loop
aaa
cmp
cmp
cwtl
mov
sub
test
pop
inc
inc
adc
mov
add
push
add
push
xorb
rcrb
dec
aaa
add
push
push
adc
sbb
into
dec
pop
nop
pop
or
push
or
pop
mov
int
mov
shlb
pop
and
pop
add
add
cwtl
outsb
outsl
je
add
xchg
jb
fistl
dec
cld
and
and
cs
pop
shll
dec
shrd
popa
incl
lea
in
bswap
stc
out
mov
out
ud0
jmp
repnz
in
pop
ds
push
pusha
ljmp
lret
cli
push
sbb
testl
lahf
daa
aam
gs
dec
sti
xchg
mov
daa
loopne
add
or
or
outsb
jns
dec
insb
daa
aam
cmp
add
dec
push
adc
add
aas
jl
mov
add
sbb
add
prefetch
pop
xor
push
test
mov
mov
insb
push
adc
or
loop
mov
rcrb
pusha
push
add
fldenv
loopne
add
ja,pn
lahf
or
and
and
lods
xor
cltd
nop
add
jb,pn
es
mov
jge
jns
lret
cs
and
xorl
push
out
rcrb
out
dec
leave
cmpsl
sahf
add
jb
jns
testl
push
orb
orb
dec
dec
cmpsb
adc
and
push
scas
and
lcall
push
hlt
pop
dec
sub
lea
add
adc
pop
or
dec
jne
sahf
sbb
js
pop
xchg
gs
sub
sbb
xchg
cli
stc
jbe
shlb
push
out
xor
enter
sbb
call
std
cvtps2pi
ja
jne
jmp
mov
imul
call
cltd
xor
in
sub
loope
pop
adc
jnp
clc
or
hlt
mov
insl
adc
shr
fwait
and
hlt
jl
les
xchg
mov
sbb
pushf
adc
or
pop
ficompl
clc
add
lret
inc
pop
rolb
mov
lea
xorps
sbb
push
movzbl
call
nop
fadds
mov
mov
popa
mov
rolb
lds
cmp
jbe
mov
add
pop
xchg
aam
adc
call
out
fildl
and
pop
cmp
push
mov
rcll
push
adcb
loopne
popf
pop
outsl
jns
xor
movsl
or
rorb
fistl
sbbb
push
add
outsb
dec
ret
ja
ret
or
fisubrl
push
sub
aad
or
jns
jne
push
inc
imul
add
adc
sub
mov
mov
fcomps
push
imul
or
outsb
xor
enter
inc
dec
and
add
bound
imul
inc
fcoms
and
jo
or
shrb
mov
movsl
adc
sub
xor
cld
add
dec
mov
push
imul
or
enter
ficoms
push
push
fldt
cmpsl
mov
in
push
leave
push
or
dec
loop
pop
mov
cmp
pop
add
out
mov
xchg
dec
or
push
xorb
outsl
push
cmpsl
ret
xchg
test
je
sahf
xchg
in
add
dec
pop
push
ret
jmp
rorb
inc
pop
nop
sbb
aad
stos
pop
cltd
test
mov
lods
and
sub
and
sbb
push
adc
nop
or
or
imul
mov
es
rorl
sbb
aam
je
inc
test
popa
ret
fcmovnb
push
add
sbb
add
push
mov
push
jl
in
aam
lea
dec
out
or
lds
push
mov
pop
mov
rcr
or
jno
push
jne
andl
add
lds
je
rcrl
sub
xchg
in
add
and
and
cmpsl
push
or
mov
popa
pop
adc
add
repnz
pop
cmp
iret
inc
dec
inc
or
mov
cmp
inc
repnz
mulb
jg
movsw
mov
sbb
cmpsl
sbb
int
jge
in
push
data16
add
jae
aas
adc
and
xchg
popf
jecxz
cmp
outsb
fcoml
and
gs
addl
push
enter
insl
andl
push
inc
push
push
insb
fmull
sbb
hlt
sub
insl
and
aad
lahf
push
rclb
shlb
inc
and
mov
mov
adc
sub
or
sub
cmp
add
jl
sbb
aaa
and
lcall
or
stc
jp
cmp
ljmp
ljmp
pop
jp
push
cltd
clc
ljmp
call
or
pop
and
iret
ficoms
pop
xchg
sbb
test
ja
push
rolb
pop
and
ret
call
push
fsubrl
jnp
int
lods
and
sub
xor
mov
call
adc
add
and
add
in
add
or
popf
shlb
and
push
or
scas
add
or
icebp
insl
scas
lcall
rcll
sbb
ja
lods
sub
enter
push
pop
sbb
nop
dec
das
and
mov
jge
loopne
sub
cmp
push
push
call
call
push
mov
pop
jne
xchg
lea
dec
mov
xor
mov
or
scas
add
nop
inc
daa
nop
rol
ss
cmpsb
icebp
imul
adc
add
push
dec
inc
lock
out
mov
pop
enter
cmp
xor
adc
call
lret
popa
inc
mov
add
lods
or
ja
pop
mov
xchg
xchg
jge
mov
dec
call
imull
into
pop
in
dec
push
inc
mov
lods
mov
loopne
stos
imul
mov
push
mov
cs
sbb
movsl
call
and
mov
push
or
in
shl
or
push
xchg
mov
push
sbb
adc
hlt
xor
clc
sbb
dec
cmp
push
aad
mov
es
ret
sub
or
cmp
test
mov
mov
xrstor
jecxz
inc
movzbl
xor
testl
xchg
push
icebp
je
sbb
sbb
push
hlt
mov
mov
push
sub
sbb
pop
push
insb
push
mov
dec
sub
ss
in
xchg
push
in
push
je
sub
fs
push
mov
lods
aas
ret
push
mov
sub
notl
pop
loop
jo
enter
pop
mov
push
pop
xor
orl
cmp
aam
push
adc
ja
inc
xchg
fiaddl
out
pusha
xor
ds
sbb
push
push
mov
sbb
sbb
push
movsl
ret
pusha
loop
fdivr
xor
and
pop
mov
push
mov
push
push
dec
fdiv
dec
pushf
ja
pushf
sbb
in
loopne
and
inc
pop
pop
pusha
push
adc
movsl
sub
call
sbb
cltd
or
cmp
lret
imul
shrb
andb
adcl
stc
andb
and
mov
fcompl
jb
call
dec
les
aas
bound
inc
cmp
cmp
xchg
test
in
inc
add
dec
push
adc
inc
jbe
insl
sub
pop
cmp
arpl
andl
mov
mov
pop
add
fisubs
rolb
dec
mov
fimull
mov
cmp
xchg
add
out
out
push
adc
repnz
ss
sbb
in
jl
fwait
hlt
fdivrp
xor
fdivr
mov
pop
loop
ret
push
sub
mov
xor
mov
adc
mov
pop
mov
push
push
repnz
ds
insb
int3
xchg
aas
xor
push
addr16
sbb
mov
outsb
sub
xchg
mov
mov
ficoml
and
sbb
lock
mov
pop
in
add
lds
enter
pop
sbb
sub
mov
rep
and
test
cmp
movsb
push
xchg
jns
mov
cmp
arpl
mov
shll
jle
rcll
mov
bound
adc
xchg
fnstenv
cmp
jne
mov
out
pop
sub
inc
mov
lds
rep
push
pop
cmp
or
psubd
mov
xor
xchg
mov
inc
sbb
insb
or
shr
dec
outsb
js
mov
je
ljmp
ljmp
or
popa
inc
adc
add
fiaddl
pop
xor
mov
jb
sub
je
mov
push
loopne
das
sbb
cmpb
aam
lret
inc
sub
xor
add
sub
ljmp
ss
mov
push
or
push
int3
mov
xor
into
rcl
fiaddl
mov
sahf
ret
lret
xor
adc
pop
outsb
pop
jp
roll
scas
ss
js
hlt
adc
enter
lret
mov
lcall
adc
push
fcmove
testb
push
adc
push
not
and
and
scas
dec
adc
xlat
add
xchg
push
insb
push
and
xchg
sbb
add
adc
push
jae
and
cmp
push
cltd
in
jle
jmp
jno
pusha
push
adc
dec
pushl
cmp
inc
aad
gs
mov
adc
dec
in
in
movsl
jns
push
push
add
and
inc
lock
mov
inc
ficomps
mov
push
stc
mull
cmp
call
std
nop
dec
in
and
sub
xchg
in
enter
les
dec
lds
push
shlb
pop
adc
xchg
mov
ds
sbb
and
lods
inc
push
push
xchg
rcr
in
mov
fsub
jmp
mov
addb
cmp
xor
stos
repnz
js
scas
cltd
je
inc
push
mov
mov
mov
in
mov
pop
xor
shl
aam
fsub
cmp
push
dec
fistl
mov
jge
fcomps
add
push
and
cmp
mov
imul
popa
mov
in
mov
in
aas
mov
pop
fists
scas
aam
adc
sbb
jne
mov
out
inc
sbb
jne
ja
sbb
lods
push
cmp
adc
fidivrs
bound
inc
xor
push
ds
mov
mov
dec
mov
out
scas
mov
xor
jmp
or
add
push
mov
fcomp
inc
test
mov
enter
movsb
fistpl
sub
movsb
mov
inc
push
fdivs
daa
pop
loope
lcall
adc
xlat
push
push
xor
das
mov
jecxz
repz
cs
mov
mov
pop
mov
jb
add
add
lret
pushf
in
dec
adc
or
add
addr16
adc
push
cmp
cmpsl
mov
push
jne
jl
sbb
or
push
mov
mov
jne
cld
jb
add
or
xorb
ss
or
or
jne
add
xchg
sbb
mov
ret
jns
dec
add
or
pushf
sbb
push
icebp
or
gs
jmp
xchg
lcall
aaa
push
add
add
out
enter
rolb
aaa
movsb
pop
icebp
xchg
cld
mov
js
xchg
xorl
dec
jp
xor
mov
into
mov
pop
inc
inc
pop
ss
xchg
sbb
in
cmp
in
inc
xchg
scas
add
popa
inc
dec
pop
and
je
movsl
out
dec
lock
or
je
mov
pop
sbb
adc
xor
loopne
outsb
xor
addl
jg
xchg
mov
jmp
or
xor
bound
jmp
mov
fs
jp
pop
loopne
mov
adc
xor
mov
push
push
cld
lcall
cmp
popf
rorl
adc
sbbl
lds
mov
push
mov
add
or
sbb
mov
inc
xchg
inc
or
xor
lods
pop
or
jne
xor
addl
inc
sbb
ficomps
xor
cmp
or
test
or
outsl
cmp
push
loopne
cmc
push
orl
lea
and
mov
rolb
cmp
jge
push
repnz
je
sub
rorl
jbe
add
jmp
mov
ja
jl
or
jnp
jl
jecxz
mov
std
std
nop
scas
aaa
movhps
in
cld
cmp
jno
pushf
cli
adc
call
rorl
cmp
sbb
inc
inc
enter
mov
dec
mov
sub
testb
inc
sub
lret
dec
mov
jo
cld
push
and
jb
fmull
add
jno
adc
std
adc
push
ds
clc
sbb
mov
add
fwait
jne
mov
cmp
in
pop
push
movsb
jnp
pop
mov
out
add
mov
aam
xchg
sahf
and
or
pop
nop
jo
push
mov
sub
adc
sarb
push
fiadds
adc
sub
adcl
inc
sarb
push
pop
add
sub
jle
int
mov
add
add
orb
jmp
les
xor
mov
mov
xchg
orl
pop
int3
lods
or
sbb
inc
out
pop
stos
inc
push
push
add
int
mov
daa
mov
cmp
cmp
pop
pop
cmp
jmp
xor
xchg
popf
mov
sbb
mov
push
mov
cmp
cwtl
inc
jecxz
outsw
loopne
mov
push
call
xor
sahf
ds
ret
fildl
jbe
popa
xor
lea
decb
sub
sub
dec
adc
mov
dec
cli
cmp
push
or
enter
xchg
insl
popa
and
jne
xor
adc
std
jmp
and
xor
pop
call
inc
jmp
in
mov
cltd
and
or
or
fidivrl
push
mov
pop
lahf
xor
loopnew
mov
adc
mov
inc
rclb
ret
aaa
ret
pusha
pop
cmpb
fs
aaa
add
pop
sub
test
xor
mov
hlt
or
mov
push
call
in
test
dec
enter
adc
or
call
mov
cmp
js
rcrb
out
xchg
cmpsl
mov
jl
shlb
jne
mov
jmp
or
push
sbb
or
xor
push
or
or
pop
dec
add
lcall
add
or
push
out
cmp
mov
cmp
xorb
inc
push
push
add
call
out
cmpsb
jbe
sbb
dec
xchg
fcmovu
sbbb
ljmp
pushf
inc
notb
shll
push
je
mov
ljmp
mov
test
dec
sarl
cmp
adc
dec
mov
insb
jmp
dec
jmp
xor
push
mov
lea
add
int3
or
out
xchg
stos
mov
push
fucomip
cmp
je
cmp
jbe
cli
mov
cmp
subl
mov
sub
and
std
pop
dec
xchg
mov
or
sbb
pop
ret
or
test
push
sbb
inc
or
or
adc
inc
and
shlb
jae
adc
loop
test
push
getsec
cmp
shr
je
cs
sbb
push
jae
stos
fwait
add
xchg
cmpsb
shll
test
cmp
sub
mov
and
mov
mov
mov
adc
mov
mov
and
aaa
push
mov
inc
das
in
fsubr
jo
push
sbb
sub
sub
and
pop
mov
into
call
mov
or
fwait
inc
adc
pop
aad
pop
push
stos
loopne
mov
sti
push
je
push
dec
nop
inc
lea
dec
jle
scas
or
data16
dec
in
movb
xchg
push
stc
jg
fildll
test
js
pop
push
imul
and
clc
jno
je
jl
enter
and
aam
xor
pop
xchg
jge
push
push
cmpsb
aam
in
icebp
lds
sbb
push
or
clc
cli
call
mov
je
and
cltd
push
push
loope
sbb
pop
xlat
pop
add
scas
dec
je
jae
mov
push
push
and
pop
or
dec
add
or
or
inc
push
mov
and
repnz
adc
aam
in
mov
shrl
or
or
xchg
popf
imul
rcll
push
mulb
mov
inc
cmp
lock
jo
mov
mov
sub
jmp
add
loope
in
mov
scas
sub
sub
lock
dec
push
mov
add
hlt
push
push
adc
mov
pop
add
mov
ss
clc
xlat
or
and
cmp
push
sbb
push
mov
push
mov
or
mov
jmp
adc
and
and
adc
sub
pop
sub
cmp
push
or
lock
add
ret
xorl
adc
add
xchg
out
movsb
call
mov
stos
lea
mov
pop
insb
and
outsb
jne
addr16
insb
arpl
push
idivl
dec
cld
jne
into
cmp
addr16
ss
pop
mov
add
push
adc
xlat
pop
and
or
je
int3
jecxz
adc
or
jns
inc
sub
jmp
test
nop
xor
or
pop
sbb
lods
icebp
pop
sarl
icebp
call
adc
call
inc
shlb
mov
pop
cld
test
jmp
dec
setb
cmp
cmp
mov
jle
and
add
movsb
sbb
call
outsl
pop
inc
inc
inc
lcall
dec
jl
js
cmpsb
pop
adc
fst
js
nop
push
dec
xor
arpl
mov
fxtract
jmp
pop
cmpsl
jae
pop
xorb
movsb
inc
or
mov
cmp
push
add
ret
push
adc
add
out
and
fdivrl
out
out
pop
out
add
add
call
in
jnp
in
movsb
jmp
js
popf
sub
aad
test
or
mov
adc
mov
sbbl
cltd
scas
add
cmp
rcrb
mov
pop
mov
sub
lret
mov
pop
outsb
je
push
stc
sub
fcompl
addr16
xor
pusha
inc
sarb
push
stc
mov
or
jae
xor
pushf
insb
sbb
cld
test
mov
stos
push
imul
inc
inc
loopne
fs
inc
in
xchg
inc
mov
mov
inc
mov
and
pusha
ja
cmp
jg
js
test
lea
add
call
push
jbe
xor
adc
test
mov
cmp
jl
and
bound
decl
or
lds
sbb
inc
inc
dec
jne
movzbl
add
pop
xor
aam
nop
jbe
and
inc
mov
loop
mov
inc
js
shl
lea
or
sub
es
adc
sbb
fdivr
lods
and
adc
cli
sub
add
adc
cmp
mov
mov
lea
inc
xor
inc
pop
mov
dec
jecxz
pop
xchg
mov
inc
ss
js
shll
xor
das
sub
in
dec
push
push
imul
xor
outsl
sti
loopne
nop
xchg
lret
xchg
cmp
int3
adc
xchg
test
fstl
call
dec
xor
das
dec
mov
int
sarb
dec
dec
flds
es
lds
adc
daa
push
push
mov
push
add
notl
lds
dec
cmp
mov
and
mov
enter
lds
add
roll
mov
out
cmp
xchg
adc
pop
inc
xor
add
add
add
push
add
cwtl
rcll
add
rorl
inc
push
rcll
xor
and
or
pop
mov
sarl
add
add
nop
jno
inc
rcrl
imul
addb
rol
cmpsb
or
sbb
rcrl
adc
and
add
adc
je
roll
and
rcrl
in
adc
and
and
rorb
shrb
and
pop
push
inc
pop
popa
pusha
adc
nop
dec
inc
rcrb
orb
clc
mov
cli
or
or
imul
jno
addr16
callw
pop
call
call
not
cmp
dec
aam
inc
fstpl
inc
push
jns
cmp
call
rcl
adc
les
xchg
sbb
jmp
pop
leave
loope
ffree
rcrl
cmp
or
or
add
aad
out
mov
call
clc
scas
and
movsl
int
jmp
std
sub
jb
cmp
jno
jmp
mov
test
xchg
mov
pushf
mov
iret
popa
adc
rolb
fdivl
loopne
pop
push
sbb
cmp
xor
dec
dec
jmp
sub
inc
jmp
adcb
sbb
fcomps
and
push
arpl
cmp
aam
xchg
sbb
aad
inc
div
cmp
or
xor
test
sub
sub
and
repz
mov
pusha
lock
test
cmp
movsb
jne
sbb
fiadds
adc
dec
incb
idivb
push
push
es
cmpsb
add
loopne
outsb
cwtl
movsl
push
and
push
push
fs
into
pusha
mov
jnp
shll
adc
sbb
cmp
es
or
shufps
or
or
es
ja
iret
dec
push
loope
dec
cld
and
or
in
ficomps
loope
xor
cltd
cmp
sub
push
fwait
xchg
int3
inc
pop
push
mov
js
sbb
js
pop
xchg
xchg
add
fstps
cmp
jbe
push
imull
push
cmpsb
sbb
dec
jae
dec
mov
and
cmovle
sbb
add
or
push
sbb
xchg
pop
aaa
dec
sbb
mov
cltd
push
scas
inc
arpl
movsl
adc
add
inc
pusha
inc
inc
and
dec
enter
mov
adc
inc
pusha
inc
jbe
xchg
pop
rolb
sbb
es
pusha
inc
rcrl
fildl
pop
add
push
cmpsb
les
pop
add
jb
inc
das
inc
add
xor
xor
inc
pop
es
and
inc
ss
add
je
inc
dec
es
add
cmp
test
add
lret
je
mov
lret
call
adcl
or
pop
int3
xchg
out
push
dec
inc
stos
inc
dec
out
out
fldlg2
fs
cs
pusha
nop
push
in
nop
je
inc
cmp
or
nop
pop
add
out
out
fisttpl
xor
sub
out
sahf
and
adc
add
add
sbb
jmp
lea
xor
pushf
adc
inc
dec
inc
out
inc
call
pop
nop
add
and
dec
leave
add
jb
cwtl
or
inc
out
jns
out
mov
mov
popf
out
jecxz
sti
data16
inc
cld
or
push
inc
cmp
sub
add
mov
daa
jo
shlb
mov
lahf
addr16
pop
push
andb
adc
mov
insb
test
cltd
adc
dec
pop
cmpb
jmp
cmp
je
mov
add
pop
lret
sub
or
lahf
ret
lea
adc
add
in
mov
or
add
jns
scas
in
add
add
push
inc
lret
incl
jo
cmp
je
xchg
add
sub
push
mov
xchg
adcl
xchg
or
sbb
pop
inc
or
xor
or
in
or
cld
add
sahf
xchg
sub
fisttpll
or
or
mov
out
rorb
xchg
or
and
xor
iret
enter
push
shld
adc
push
pop
adc
or
leave
jae
mov
cmp
cmpl
adc
adc
adc
adc
ror
adcl
pop
fs
push
inc
jb
cmp
pop
pop
and
jns
out
sbb
xchg
sbb
mov
xchg
sub
sbb
mov
sbb
sbb
rep
sbb
push
sbb
cmpsb
in
lds
xor
sbb
jns
push
inc
negb
incl
enter
add
add
sub
cmp
fbld
cld
xor
lcall
pop
jmp
jp
sbb
cwtl
xchg
push
in
push
in
imul
rol
adc
and
xor
mov
out
mov
pusha
and
sub
call
je
call
testl
mov
lds
inc
jmp
jmp
dec
push
mov
in
repnz
ss
xchg
aad
in
cmp
xchg
cmp
push
mov
out
pop
enter
out
or
je
push
imul
in
fmulp
dec
icebp
cmp
das
mov
jnp
or
add
hlt
hlt
jns
addr16
imul
std
sbb
cmp
scas
in
mov
sbb
movsb
test
clc
clc
addr16
sbb
or
mov
cli
add
scas
add
sti
insb
in
repnz
cld
cld
je
cld
push
dec
fdivrp
or
ss
xor
enter
sbb
xor
inc
ret
mov
sub
jb
enter
lahf
shll
pop
std
cmp
jmp
scas
addb
jecxz
xchg
xor
cs
in
stos
xlat
aad
cmpl
aam
or
in
xorl
xchg
scas
inc
repnz
sti
andb
adc
or
dec
jmp
jmp
mov
in
cltd
or
adc
nop
jmp
push
dec
cli
out
out
out
or
lock
rcll
cli
or
aas
repz
jb
repz
sbb
add
stc
dec
in
xlat
imul
mov
xchg
and
aad
cltd
jb
jb
popa
leave
push
stc
sbb
nop
cmpsb
sti
sti
sti
xchg
or
cmp
jmp
push
xchg
stos
pop
mov
jge
add
test
stos
dec
or
xabort
or
sub
dec
loop
loop
stos
xchg
stos
shll
loope
xchg
pop
leave
inc
clc
and
loopne
add
or
scas
ss
fdiv
out
dec
push
and
mov
xchg
adc
push
push
ljmp
and
notl
notl
inc
mov
hlt
imul
jb
or
xchg
into
testb
mulb
pusha
leave
nop
testb
repnz
inc
nop
mov
sub
dec
push
sub
out
int
rclb
testb
fsts
loope
cmp
clc
clc
cmp
jmp
in
adc
cmc
pop
leave
or
fldl
xchg
hlt
or
push
add
lock
mov
jo
adc
shrb
iret
clc
sti
mov
loope
pop
and
loope
jp
setb
pop
hlt
cmp
lcall
in
xchg
adc
repz
and
mov
repz
adc
or
test
xor
mov
push
and
repz
or
daa
test
xor
mov
push
and
repnz
repnz
or
cmp
xchg
cmpsb
icebp
icebp
icebp
das
xchg
in
push
in
adc
repnz
pop
repnz
cld
icebp
cmc
cmc
mov
icebp
mov
dec
pop
dec
adc
imul
stc
stc
dec
dec
push
arpl
je
xor
movups
mov
adc
test
mov
test
jp
jmp
imul
lret
push
push
sub
ffreep
push
inc
scas
xchg
stos
test
inc
cmp
xor
add
aad
pop
mov
lods
or
mov
mov
add
jne
in
mov
lods
stc
xor
jmp
xchg
aam
adc
dec
add
ss
dec
xor
dec
inc
mov
and
pop
add
dec
push
nop
push
jns
ds
imul
dec
push
aaa
or
push
lahf
repz
adcl
stc
xor
cli
push
jecxz
repz
iret
repz
mov
sbb
mov
push
aad
in
xchg
gs
dec
sarb
rep
or
mov
xorb
movsb
popl
mov
cmpsb
mov
mov
and
in
sbb
lea
inc
cmp
and
xchg
sbb
adc
ficompl
pop
lret
nop
dec
push
mov
imul
leave
inc
or
xchg
lods
jle
sbb
jg
push
movsl
repz
push
sbbb
inc
dec
inc
jmp
shll
pop
and
scas
push
mov
ficoms
mov
aaa
cmp
push
mov
sbb
arpl
sahf
test
inc
xchg
mov
lea
daa
sub
push
sbb
ret
adc
aam
or
ror
pop
sub
sbb
push
inc
addl
push
push
and
xchg
es
push
push
sarb
xor
jo
lret
adc
jmp
adc
dec
dec
xchg
movb
in
mov
xchg
xchg
jo
adc
popf
adc
inc
xor
adc
das
pop
xor
adc
fldl
stos
adc
sub
push
or
adc
ret
lret
hlt
psubsw
mov
sub
mov
jb
pop
mov
add
add
gs
adc
inc
add
movsl
add
pop
jno
inc
add
aaa
or
add
xor
add
sub
or
and
mov
sbb
xor
mov
xchg
and
adc
mov
mov
adc
orb
inc
dec
pop
adc
xchg
pop
mov
and
adc
mov
rcrb
cmp
mov
inc
mov
add
sbb
push
int3
xor
gs
sub
pop
inc
popf
fnstenv
js
movsl
subl
xchg
clc
add
or
movsl
xchg
pop
decl
adc
mov
testb
mov
scas
or
iret
cmpsl
sbb
loopw
stos
es
cmp
in
xlat
mov
call
sti
iret
les
pusha
adc
stc
aas
or
xor
xor
xchg
leave
and
mov
shrl
lahf
sahf
aaa
xchg
push
bound
fidivrs
outsb
xchg
adc
sbb
jnp
mov
xchg
push
mov
in
xor
rcrb
arpl
add
mov
xor
ds
test
aaa
lcall
rcll
lahf
in
inc
jb
outsl
pop
and
sbbb
xor
aaa
add
mov
sbb
sbb
out
or
and
and
ja
or
test
adc
and
nop
lahf
xchg
and
push
imul
inc
in
in
sahf
cmp
sub
jb
in
sbb
movsb
push
dec
lret
xchg
cld
push
out
or
jecxz
es
sub
lahf
mov
test
sbb
dec
ja
lahf
mov
les
cwtl
inc
test
dec
xor
xchg
push
lahf
adc
xor
orl
pop
fwait
pusha
adc
fbstp
lahf
inc
sub
and
scas
inc
inc
ds
cmp
imul
sbb
cwtl
and
imul
jns
sbb
push
mov
aam
nop
or
and
or
in
dec
sahf
jmp
xchg
cmpsb
loopne
adc
cwtl
add
push
daa
inc
sahf
loopne
rcrb
mov
sbb
shlb
das
push
xor
mov
adc
rcl
dec
dec
les
push
pop
push
jmp
push
rcl
andl
lcall
inc
mov
inc
cs
data16
mov
lea
or
rcl
mov
mov
inc
cmp
lods
dec
xor
mov
pusha
jb
pushf
mov
xchg
or
ds
leave
sbb
mov
in
pop
and
ficompl
movsb
dec
nop
mov
or
or
inc
inc
ss
xor
rcl
int3
cs
jle
mov
clc
mov
pop
xchg
push
mov
nop
into
add
cmc
pop
add
test
cmpsl
test
jecxz
or
cmpsl
scas
sub
or
decl
in
clc
xchg
add
xchg
push
popf
adc
jno
push
bound
andb
mov
or
add
xor
and
inc
shl
addr16
xor
shl
xchg
daa
lea
loop
or
and
loopne
inc
jp
aam
in
add
loopne
shlb
daa
sub
jmp
stc
outsb
lds
rorb
or
test
xorb
pop
jno
or
adc
loopne
jmp
shr
data16
data16
loope
xchg
and
dec
test
sub
pop
iret
dec
sahf
cmpsl
lods
fcmove
push
bound
pusha
push
cmp
jns
aaa
popa
aas
sbb
or
or
leave
out
sub
rorb
dec
ja
sbb
add
rolb
inc
mov
cmp
movsb
sbb
inc
cmp
shlb
xor
sbb
nop
in
jo
cmp
into
dec
jp
mov
cmp
sti
push
or
xchg
inc
arpl
cmp
pop
push
adc
cmp
nop
cmp
mov
push
shlb
imul
sub
ss
push
xchg
and
lea
fimull
or
dec
mov
jl
rcll
adcb
mov
dec
inc
sub
int3
scas
cwtl
imul
xor
imul
xor
cmp
sub
xor
and
dec
inc
sub
push
xor
xor
lcall
cmp
js
je
loopne
mov
mov
sbb
lahf
call
scas
sub
jns
imul
xor
pop
jno
push
cmp
jl
pmaxub
sub
enter
in
loope
imul
dec
inc
stos
je
sub
cmc
shll
aam
sbb
jb
sub
pop
nop
sub
cmp
inc
pop
sub
sub
xor
pop
sub
adc
mov
sub
inc
xor
rol
sub
inc
sub
sub
leave
loopne
or
add
pop
xor
shrb
outsb
mov
cwtl
mov
call
les
sub
ss
cltd
xchg
sbb
push
mov
int
fs
sub
lret
ljmp
sarl
shlb
or
add
xor
rolb
es
lods
mov
call
mov
fidivl
cmpsb
sbb
dec
sbb
xor
inc
icebp
fsubrs
pusha
cmpsb
and
nop
aad
sub
aas
push
sub
in
mov
or
dec
xchg
cmpsb
sub
sub
ja
cltd
sub
rorl
aaa
out
add
inc
jo
insl
adc
jb
sbb
shrb
std
rorb
pop
movsl
test
sub
push
ds
pop
scas
pop
xor
imul
sub
ljmp
cmp
js
and
cltd
xchg
push
or
mov
jo
add
sub
and
and
sub
rorl
aam
pop
add
jo
cs
xor
sub
xchg
imul
dec
inc
aaa
lods
sub
sbb
shrb
cld
sbb
jge
xor
jmp
je
adc
jecxz
adc
jno
xor
mov
imul
adc
or
cltd
xchg
mov
cmpsb
data16
outsb
lcall
sbb
frstor
mov
sub
adc
js
or
rorl
test
movsl
fnstcw
sbb
lock
mov
or
or
int
jbe
pushf
bound
add
and
jae
add
in
mov
pop
and
sub
mov
or
or
add
mov
xor
push
or
dec
cmp
fwait
imul
stos
mov
xchg
fisttpll
mov
pop
cli
fnstenv
cs
mov
cld
add
sti
lret
outsb
sbb
xchg
sbb
mov
sub
jbe
push
mov
roll
add
cmp
xchg
and
pop
nop
cwtl
imul
in
sub
ret
imul
jp
jge
imul
adc
inc
aad
je
push
inc
les
je
sub
fisubrl
cltd
xchg
test
sub
js
mov
lea
cmpsb
mov
rcl
sub
cmp
mov
xor
int
sub
and
and
and
js
push
and
and
pop
dec
dec
pop
jns
cmp
pop
lcall
fcoml
call
xchg
push
popa
jo
jmp
cli
cmp
cmp
pop
adc
xchg
sbb
inc
jno
jno
ds
add
daa
mov
cmp
aaa
imul
and
dec
sbb
dec
inc
jns
and
daa
icebp
mov
repz
sub
pop
mov
adc
bswap
rorb
mov
out
push
test
add
dec
pop
ret
sub
mov
inc
push
mov
inc
or
jmp
jbe
jne
lret
ret
mov
or
pushf
xor
addr16
popf
test
cmc
push
or
jbe
xorl
mov
mov
addr16
int3
add
jl
dec
inc
xlat
orb
and
dec
xorb
dec
inc
sub
out
gs
cmp
add
add
imul
lcall
sbb
add
or
sbb
or
push
mov
mov
fmull
inc
in
adc
add
sbb
lods
xor
mov
or
add
mov
push
and
or
je
xchg
je
mov
lea
ror
pop
jae
add
push
dec
insb
cmp
dec
sbb
cmp
pop
ljmp
jp
fdivs
jae
popf
push
cmc
push
cwtl
xchg
inc
cmp
push
pop
or
push
sbb
leave
ret
inc
dec
ret
movsl
push
push
out
or
mov
jp
call
or
jl
shlb
aam
in
cli
pop
cmp
dec
adcb
ret
pop
adc
or
jne
test
dec
and
pop
leave
dec
rcrl
es
test
es
pop
add
lcall
clc
xchg
or
push
divb
movsb
inc
hlt
out
or
movsb
add
je
into
jmp
subb
xchg
xor
adc
push
lcall
fstps
popa
dec
movsb
push
stc
or
sub
xchg
loop,pn
push
sbb
jmp
or
mov
jge
jbe
xchg
fimuls
call
out
faddl
mov
inc
cmp
or
mov
jbe
or
shll
je
sub
int3
insl
dec
inc
push
inc
leave
dec
cmp
add
mov
inc
rcrb
mov
xchg
inc
mov
fldl
mov
je
mov
inc
inc
sub
push
faddl
xor
inc
mov
fiadds
and
lahf
xchg
test
mov
inc
xor
add
inc
xor
loopne
sub
cmp
dec
daa
add
outsb
inc
xor
inc
jmp
lods
rol
imul
imul
inc
clc
cs
call
xchg
scas
fnstenv
rclb
call
jne
dec
mov
subb
popa
mov
add
rclb
xchg
nop
and
fs
mov
pusha
push
xchg
rcrb
and
mov
and
push
pop
mov
or
or
pop
inc
or
call
cs
mov
or
xchg
test
and
cwtl
xorb
xchg
mov
adc
push
jb
dec
mov
test
or
mov
mov
cmp
inc
dec
mov
push
orl
das
push
xchg
shrb
test
push
mov
jno
xor
outsb
jae
lea
adc
cmp
adc
add
mov
loop
call
lahf
jle
daa
movsb
add
incl
jl
je
xor
mov
daa
and
pusha
call
push
es
cmp
mov
adc
push
es
pop
ljmp
test
mov
jp
mov
adcl
pusha
addl
pop
enter
pop
xchg
pop
push
jns
push
cmp
loopne
imul
pop
inc
sub
repz
dec
subb
push
sub
and
arpl
lret
loopne
push
es
adc
push
adc
out
dec
movsb
lods
lods
mov
sbb
mov
cs
xchg
inc
inc
pop
adc
ret
cmpsb
stos
repnz
cs
mov
mov
inc
and
cmp
pop
jb
mov
test
add
jb
hlt
movb
ret
push
inc
call
insl
sub
inc
push
ss
lods
incl
fiaddl
shlb
xor
xchg
or
stc
test
or
jp
pop
inc
push
movb
int3
and
ds
sti
fildl
cmp
inc
jmp
dec
jmp
xor
loopne
sbb
push
inc
inc
adc
dec
push
test
add
inc
lret
jo
je
pop
es
mov
test
cmp
movl
shll
mov
ret
fs
stc
add
das
or
add
xchg
xorb
addl
or
je
addr16
nop
and
and
cmp
pop
addb
mov
adc
cld
inc
mov
xor
inc
jmp
xchg
jno
rolb
arpl
jmp
xchg
cmc
pop
pop
fstps
gs
xor
sub
sbb
push
scas
dec
enter
add
mov
inc
mov
add
mov
xor
andl
rorb
or
mov
xlat
push
sub
hlt
lods
sbb
roll
shl
psrlw
sbb
cmp
repz
negl
fisubrs
jge
push
push
or
pop
dec
mov
jns
xor
or
cld
xchg
add
ja
cmp
xor
jle
push
add
and
push
add
ret
push
sar
inc
mov
orl
call
cmp
xor
int
push
hlt
push
sub
lods
mov
inc
adc
sub
mov
sbb
adc
jp
adc
orl
aaa
adc
ret
and
push
xchg
pop
or
xor
sbb
stos
add
sbb
cmc
add
stos
andb
jecxz
add
lods
stos
add
adc
fidivrl
sahf
in
push
cmp
sub
xchg
or
bound
or
push
cltd
shrb
dec
mull
movups
out
dec
lock
xor
inc
das
add
ret
jo
cs
rorb
adc
or
leave
les
xor
mov
rol
mov
inc
ds
loopne
add
ljmp
xlat
mov
mov
cmpl
stc
insl
xchg
lret
lret
or
int3
jae
pop
cs
test
call
push
and
sub
dec
les
push
in
push
mov
sbb
add
cmp
add
adc
xor
lea
push
dec
stos
xchg
test
pop
or
inc
dec
loopne
pop
movsb
and
mov
or
les
daa
dec
xor
dec
ja
pop
cmp
and
or
push
repnz
sahf
ret
lea
nop
mov
lret
in
lock
xchg
insb
leave
adc
and
out
ds
add
pop
add
push
arpl
inc
pop
inc
xor
add
aaa
pop
ret
add
add
pop
shll
xchg
sbb
jno
int3
push
int3
adc
mov
adc
xchg
adcb
lods
es
xor
call
rcl
jns
mov
adc
xor
or
jae
aas
sti
and
adc
pop
jmp
rcl
adc
add
push
jg
push
mov
sbbb
xlat
pusha
pushf
mov
cli
pop
pop
imul
loop
lcall
push
lret
xchg
adc
enter
xor
cmovb
sbb
pop
inc
ffreep
and
jle
call
inc
mov
and
xchg
or
call
cmp
add
jb
jb
sbb
nop
mov
mov
mov
pushf
rol
dec
push
mov
sbbl
mov
dec
xchg
or
test
sub
add
jmp
inc
jecxz
mov
mov
push
jecxz
enter
rcrl
sbb
jns
daa
addb
xor
xor
nop
add
push
ret
or
push
mov
jp
or
push
xor
add
xchg
adc
push
mov
xchg
pop
inc
mov
or
fistps
pop
sbb
xor
and
push
jmp
enter
fdivl
xor
lcall
add
and
xor
sub
inc
push
cmpsb
cmp
roll
add
sub
mov
add
sbb
sbb
mov
pushf
mov
add
out
add
mov
mov
xchg
mov
jge
lea
add
add
jecxz
movsb
xor
mov
sub
inc
sbb
aaa
cmpsb
sbb
loope
push
add
pop
sub
lock
push
push
arpl
inc
cs
loopne
jb
xchg
jo
rorb
dec
adcl
ret
sbb
leave
inc
inc
xchg
xchg
push
inc
dec
adcl
mov
inc
xor
pop
rol
add
fsub
lods
mov
adc
fwait
pop
nop
scas
rcrl
mov
and
in
and
inc
in
nop
and
add
lods
cmp
and
dec
mov
in
sarl
jle
add
add
sbb
cmp
test
fsubrp
and
sub
cmp
je
sub
push
daa
pop
pop
sbb
outsl
and
sbb
jb
xchg
or
sbb
xorb
lea
add
add
and
pop
add
jl
ja
xor
push
popf
fstpt
pop
xchg
addb
mov
push
xor
or
test
sbbb
sub
jne
cmp
xchg
dec
adc
xchg
sbb
into
cmpsb
mov
push
dec
call
in
mov
lock
add
ss
pop
and
xchg
adc
adc
test
jbe
xchg
mov
add
in
pop
adc
jge
fdivrs
mov
xchg
mov
xlat
inc
rolb
je
sahf
out
rcrb
mov
outsl
mov
mov
xlat
fsubrs
lea
inc
inc
popa
add
mov
cltd
sbb
add
addr16
adc
mov
add
dec
inc
popa
inc
addr16
sub
cmp
cmp
push
call
test
addr16
mov
sbb
rolb
add
or
lods
cmp
rorb
cmp
xchg
call
es
xor
mov
sub
ror
or
mov
mov
sub
mov
leave
fnstsw
pushf
es
mov
mov
inc
sub
dec
lods
mov
daa
jl
ss
loop
and
pop
movsb
test
or
icebp
or
icebp
mov
int3
push
pop
orl
cmpsb
jo
push
dec
fstps
dec
movl
dec
dec
pop
mov
imul
out
add
dec
out
insl
dec
dec
and
dec
inc
or
mov
jbe
loope
aam
pop
call
movsb
push
dec
dec
hlt
push
mov
cmp
jns
sub
push
xchg
nop
cmp
mov
mov
xor
pop
jns
inc
dec
ret
and
jns
xchg
rclb
jns
hlt
and
stos
cmp
out
test
and
mov
push
add
aad
into
addb
inc
js
dec
push
call
inc
mov
push
xchg
nop
roll
sub
cmp
adc
call
cmp
stos
dec
jns
int
lods
aaa
push
xchg
sarb
xor
dec
inc
inc
jns
movsb
mov
lds
pop
loopne
jns
xor
xor
adc
scas
adc
arpl
int
rolb
inc
or
movsb
mov
cmp
adc
mov
arpl
loope
inc
jns
std
xor
mov
jns
fadds
cmp
pop
or
adc
enter
jns
fcomi
mov
test
jns
inc
adc
adc
jns
inc
inc
and
adc
or
jns
xor
pop
and
jns
and
xchg
das
test
mov
push
and
jbe
mov
test
cmpb
shlb
mov
lcall
test
enter
inc
inc
andl
push
mov
mov
push
jns
inc
add
or
mov
hlt
adc
jns
test
inc
and
and
aaa
mov
mov
mov
adc
test
sbb
mov
jg
stos
dec
call
andb
xchg
sbb
add
xor
sbb
sbb
fldcw
call
mov
out
mov
sub
int3
lds
test
dec
aam
and
sbb
test
and
mov
push
and
mov
and
ficomps
jecxz
mov
loop
adc
push
aam
adc
pusha
cmp
test
or
sbb
out
cmp
call
and
cmp
and
cwtl
mov
mov
and
pop
addl
jb
stos
inc
insl
mov
mov
dec
xchg
jbe
call
enter
pop
pusha
stos
fs
pop
and
test
push
leave
rolb
cmp
mov
cmp
dec
and
dec
ss
les
loop
sub
inc
stos
fs
leave
nop
pop
clc
cmp
cmp
xor
dec
popf
sub
pop
cwtl
cmp
add
lret
push
xchg
or
arpl
sbb
dec
repz
inc
xchg
or
loope
or
rcrb
xchg
push
fiaddl
pop
mov
cmp
or
call
sbb
xor
das
mov
inc
loop
ret
cs
aas
loopne
and
das
xchg
push
xchg
sarb
call
or
xchg
pop
pop
and
jb
cmp
cs
lsl
hlt
add
push
xchg
and
push
ret
pop
cmp
and
xor
shlb
and
cmp
jg
inc
mov
xchg
das
xlat
xchg
and
inc
das
call
mov
and
fdivr
das
xchg
and
rcl
fs
mov
add
mov
adcb
das
mov
das
mov
sbb
cmp
ret
out
and
add
jae
pop
mov
es
dec
pop
inc
fs
addr16
enter
jae
hlt
sbb
mov
inc
pop
sbbb
leave
jle
and
rolb
pop
nop
mov
mov
pop
enter
enter
and
jp
pop
xchg
or
sbb
shrb
mov
pop
jmp
fsts
mov
cmp
xchg
pop
ss
adc
xchg
sbb
sub
mov
in
mov
xchg
testl
adc
mov
mov
imul
pop
in
xor
mov
adc
xchg
je
sbb
inc
push
mov
lock
or
push
push
inc
in
push
lods
ret
inc
adc
es
jnp
push
cwtl
nop
dec
push
push
adc
mov
push
mov
or
shrb
pusha
cmp
push
popa
inc
push
aas
loopne
test
push
pop
addr16
stos
ret
push
and
sbb
test
mov
rorb
cmp
bound
call
into
jp
outsl
nop
test
mov
popa
inc
orl
push
mov
push
push
pop
adc
mov
jge
dec
sub
int3
je
fldcw
dec
enter
inc
xchg
mov
xchg
test
fnsave
stos
sub
push
test
and
popa
inc
aaa
and
push
xor
popf
pop
ss
jbe
adc
dec
aam
or
inc
lret
pop
ret
repnz
aas
xor
unpcklps
das
push
jge
add
call
maxps
adc
call
xor
clc
repnz
xchg
lret
xor
lock
call
xchg
sar
cmp
fdivr
int
das
jg
and
dec
call
das
pop
decb
movsb
lods
andps
movsl
pop
call
in
xchg
xchg
pusha
call
push
jl
insb
call
je
gs
pop
adc
popf
das
jl
push
std
mov
sbb
cmp
xchg
dec
in
xor
push
cs
adc
in
cli
lret
movsb
imul
and
adc
dec
in
mov
je
out
or
shlb
xchg
mov
push
mov
mov
push
dec
in
push
in
inc
aam
push
mov
hlt
es
xchg
dec
in
sbb
adc
add
mov
leave
or
rcrb
out
leave
gs
loope
adc
adc
sbb
xchg
lret
sbb
and
sub
xchg
lret
xor
jae
jb
pop
cmp
pop
xchg
push
xchg
lret
inc
gs
dec
pop
mov
xor
push
xchg
dec
in
adc
or
pop
add
and
and
mov
inc
mov
insb
and
data16
sbb
jo
xor
sahf
inc
inc
out
cld
pushf
and
mov
jbe
std
je
data16
js
xor
daa
push
adc
inc
xor
mov
xorb
daa
int
dec
test
and
and
cli
cmp
jb
mov
daa
int
inc
test
inc
adc
pushf
xor
mov
cli
mov
rcrb
dec
mov
and
shlb
inc
mov
popf
push
arpl
loopne
add
shlb
xchg
je
aam
inc
add
lcall
inc
inc
mov
sub
stos
insb
adcb
mov
lods
mov
rorl
sbb
push
stos
mov
pop
stos
pop
and
inc
and
scas
mov
adc
stos
mov
mov
inc
mov
aaa
or
add
or
aaa
sbb
dec
xlat
aaa
dec
fdivs
xor
dec
add
cmp
cli
cs
pop
adc
xchg
or
mov
pop
call
cltd
inc
add
mov
inc
push
negb
add
movsl
xor
inc
add
popa
fsubrp
orb
dec
dec
or
adc
movsb
jg
xchg
jp
ret
push
mov
xchg
pop
mov
sbb
je
frstor
and
mov
aad
or
mov
add
andb
jo
shlb
cmp
inc
mov
or
pop
mov
aad
mov
dec
cmp
mov
xor
or
push
pop
push
rclb
or
inc
or
jno
add
inc
aad
push
fs
adc
cs
add
xor
mov
divl
adc
or
and
repz
jp
loop
add
inc
push
movsb
aad
sbb
or
adc
push
jmp
fs
ret
mov
pop
sbb
push
stos
mov
sbb
mov
jne
sbb
lods
mov
outsb
dec
aam
mov
frstor
inc
dec
xchg
inc
mov
mov
sbb
mov
pop
fiaddl
pop
mov
cmpb
test
xor
pop
adc
sbb
rclb
aad
repnz
in
push
xchg
sub
pop
mov
cltd
push
loop
adc
mov
mov
dec
jmp
xchg
mov
sub
adc
lods
pushf
dec
leave
or
push
cmp
adc
cmpsl
sub
out
mov
jo
push
call
mov
mov
stos
dec
push
ret
loopne
lret
inc
orb
xor
dec
adc
adc
cltd
xchg
test
jmp
sub
adc
cmp
adc
jmp
xchg
out
sub
adc
lret
daa
add
add
ret
push
cltd
xchg
repnz
xor
xor
and
cmpsb
adc
cwtl
mov
sub
xor
adc
loope
xor
jb
ds
sbb
pop
shlb
dec
dec
dec
popa
and
adc
out
and
mov
cmp
cwtl
and
je
ljmp
orb
inc
and
xchg
adc
fstl
and
cmp
mov
lods
cmp
or
cmp
arpl
cmp
adc
push
cmp
roll
push
lret
les
cmp
leave
lods
inc
mov
pop
clc
testb
xchg
add
lret
int
nop
inc
gs
addr16
nop
sbbl
ja
inc
gs
inc
dec
lret
ja
adc
nop
shll
push
inc
cwtl
jmp
adc
mov
lds
cmpl
orl
dec
pusha
and
nop
mov
inc
nop
or
xchg
mov
int
pop
pusha
sbb
mov
nop
test
push
lods
loopne
inc
add
mov
rclb
push
mov
mov
or
push
dec
repz
adc
and
or
dec
cs
push
mov
int
je
add
jge
sbb
mov
xor
and
push
adc
or
pop
add
jnp
dec
push
push
daa
mov
cmp
inc
add
stos
xor
add
mov
xchg
imul
ljmp
aaa
rorb
lods
dec
or
ja
imul
imul
outsb
mov
lock
cmpsb
popa
pop
test
add
xchg
pop
pushf
jbe
pop
inc
cmp
adc
aaa
adc
pushf
push
aaa
mov
mov
inc
cmpsl
add
lods
dec
or
sub
ljmp
nop
roll
lock
aam
mov
add
sub
inc
mov
test
imul
fs
add
mov
mov
sub
mov
ret
int
out
je
or
add
adc
mov
add
iret
and
dec
adc
dec
inc
add
and
test
mov
sbb
jno
iret
mov
sarb
bnd
inc
icebp
sbb
fstl
addr16
sbbb
cs
imul
jle
mov
and
dec
out
nop
jp
cwtl
nop
sbb
or
loope
adc
mov
hlt
jbe
addr16
inc
sbb
mov
xor
addr16
fimull
enter
push
pop
ret
add
cmp
sbbl
push
fstl
pop
scas
push
push
imul
push
pop
nop
add
sbb
xor
pop
sahf
cmp
pop
mov
out
add
pop
dec
push
addl
fcompl
push
imul
xchg
cmp
mov
push
pop
sbb
popa
fldcw
sub
jo
add
sbb
imul
sbb
cmp
jo
jns
in
jb
popf
inc
inc
adc
mov
xor
mov
push
out
mov
jns
adc
scas
dec
push
js
mov
loopne
or
sahf
jg
push
pop
call
and
dec
push
mov
repz
imul
test
movsb
fst
xor
repz
add
pop
mov
sbb
repz
xchg
dec
jmp
xor
jmp
mov
pop
and
jo
mov
mov
sahf
flds
cwtl
mov
mov
or
sbb
xor
push
pop
xchg
adc
repz
xchg
aam
sub
lahf
sbb
push
lret
repz
xchg
add
lahf
pop
xchg
pop
pop
fdivl
cmp
repz
mov
mov
mov
sahf
sbb
test
and
push
sbb
hlt
jecxz
push
or
sub
push
mov
inc
inc
out
fwait
jg
mov
sub
testb
popa
push
popf
mov
mov
mov
or
push
call
mov
fdivrs
rorb
xor
and
adc
subl
or
and
stos
mov
cmpsl
insb
movsl
hlt
or
les
mov
inc
sub
mov
add
ja
fistpl
adc
rolb
push
sub
test
subb
ss
test
inc
or
jb
push
inc
adc
sub
add
sub
fwait
mov
ljmp
or
ret
repnz
xlat
fwait
push
gs
pop
inc
jnp
add
sub
dec
mov
dec
out
jb
adc
xchg
fwait
jle
push
dec
jge
adc
jb
and
and
insl
adc
adc
jnp
push
adc
push
jnp
cmp
xor
cmp
lock
enter
roll
mov
sub
ret
sti
lcall
adc
xlat
ret
dec
lods
add
pop
icebp
in
and
stos
xchg
or
or
mov
data16
and
dec
mov
lret
ffree
dec
and
or
xchg
xchg
xchg
xchg
sub
cmp
fisubrs
in
cltd
test
enter
cs
mov
push
xchg
inc
out
push
push
pushf
xchg
cltd
adcl
or
sahf
mov
jmp
xor
jmp
rcrb
and
mov
adcb
jmp
and
xchg
mov
cmp
add
and
sarl
or
sbb
ret
iret
repz
mov
push
stc
cmp
repz
or
sbb
aam
push
mov
pushf
pop
repz
imul
push
mov
iret
repz
inc
push
push
sub
push
nop
out
sahf
imulb
movsb
push
push
xchg
jl
push
jns
jnp
inc
cmpb
push
push
out
cmp
sbb
iret
repz
repnz
fmulp
mov
out
cmp
pop
into
sbb
incb
add
jns
jnp
es
loop
sbb
out
aam
mov
stc
cmp
pusha
sbb
pushf
jl
out
scas
lret
or
repz
shll
sub
pop
iretw
repz
jb
nop
sahf
lods
mov
iret
repz
fsubrp
decb
movsb
icebp
cmp
ss
inc
push
shr
repz
es
jb
jle
sahf
mov
daa
fistpll
ret
rol
loop
clc
adc
sub
cmp
iret
repz
data16
je
fs
push
cmp
iret
jnp
ds
daa
pop
mov
jbe
fldt
jae
jbe
push
cwtl
cmpsl
out
aaa
insl
mov
iret
dec
test
lea
sub
out
add
jbe
push
scas
test
rol
inc
das
mov
mov
out
add
addb
push
xchg
out
jne
movsl
dec
inc
pop
jle
sub
push
sti
fisubrl
or
dec
push
je
loopne
sbb
push
fwait
push
outsl
push
push
pop
xor
mov
mov
dec
lahf
insb
adc
es
jb
mov
and
daa
adc
xor
xchg
or
aaa
outsl
lea
or
or
bound
add
xchg
push
out
mov
and
sub
fidivrl
push
mov
loop
or
das
repnz
mov
decl
sbb
mov
adc
mov
fwait
outsl
inc
imul
dec
add
push
das
push
cmpl
imul
mov
les
sub
aaa
cs
outsl
and
add
daa
add
mov
das
cmp
mov
aaa
mov
ret
push
nop
sbb
je
xchg
std
jmp
dec
inc
push
push
inc
push
inc
pop
inc
outsl
outsl
lret
sub
or
fsubl
jb
inc
nop
cwtl
xor
push
sbb
pop
dec
sti
rcrl
and
pop
dec
imul
call
rcrb
pop
inc
jne
outsb
je
test
rcll
pop
inc
js
sti
fistl
ss
inc
xor
mov
xor
xor
cmp
sub
inc
inc
xor
xor
xor
jge
sti
scas
push
cmp
inc
stos
xor
ss
mov
mulb
cmp
fdivl
cmp
xor
clc
inc
inc
xor
mov
aam
mov
aam
bswap
ret
cmp
jne
test
push
jo
or
pop
xchg
xor
pop
push
movsb
ss
xor
or
push
and
cmp
aaa
adc
xor
inc
pop
dec
add
sbbl
sbb
push
xchg
shll
sahf
inc
push
inc
push
dec
and
in
mov
std
cmp
ss
pushf
xor
add
adc
or
outsl
mov
dec
inc
push
sbb
sub
scas
push
pop
fwait
popa
ret
push
dec
hlt
imul
ficoml
pop
push
call
push
inc
out
adc
repz
out
sub
out
cmp
ds
inc
mov
lods
sahf
add
mov
outsb
lods
and
hlt
scas
test
loope
dec
testl
xchg
add
push
or
das
mov
insb
outsl
xor
imul
movsb
fimuls
gs
je
push
push
lods
jns
push
inc
cmp
dec
xchg
sbb
sbb
jo
rcll
mov
popf
mov
fldt
inc
cs
pop
mov
add
insb
insb
mov
xchg
pop
fadd
jnp
data16
ret
lret
dec
push
inc
adc
add
dec
inc
xor
or
pop
insb
jbe
test
sbbl
pop
add
mov
lock
sbb
setno
lret
inc
out
push
and
outsb
ret
daa
sub
jnp
jg
nop
mov
imul
imul
js
daa
jp
mov
scas
scas
je
dec
fs
mov
push
imul
push
jo
or
sbb
dec
subb
mov
aaa
dec
mov
jmp
xlat
aas
pop
fildll
pop
arpl
inc
cs
push
push
push
add
adc
or
je
outsb
outsl
ss
inc
push
popa
imul
add
dec
cmc
sbb
xor
pusha
nop
fdivl
pusha
mov
mov
inc
inc
and
add
and
add
pop
subl
push
xchg
adcb
and
xchg
pushf
add
sbb
push
adc
adc
jg
dec
add
cmpsl
sub
add
add
push
mov
or
add
jns
addr16
orb
or
add
mov
das
push
adc
dec
shrb
adc
push
sbb
iret
repz
enter
idivl
sbb
push
das
jnp
stc
cmp
pop
nop
cld
and
repz
out
cli
js
jns
stc
jns
out
jp
push
cld
fdivr
mov
cmpsl
popa
in
mov
dec
or
out
dec
sbb
mov
push
xor
mov
and
outsl
push
dec
sbb
push
unpckhps
sbb
out
inc
ds
cmp
test
dec
xchg
or
or
lds
stc
int3
adc
push
cld
or
in
jns
out
int3
les
xor
cmp
imul
iret
jl
insb
push
out
pop
mov
dec
jns
out
inc
inc
cmp
xor
iret
repz
sub
and
repz
repz
adc
or
stc
cmp
or
cld
or
sahf
out
sahf
hlt
call
jns
out
movsb
nop
jo
xor
cmp
out
lock
int3
mov
iret
repz
insb
inc
sub
adc
sahf
out
ds
push
fcom
les
js
sub
repz
repz
mov
outsl
xchg
sbb
add
call
rolb
jl
xor
xor
pop
pop
dec
or
es
pop
ret
add
sbb
mov
dec
push
mov
xor
mov
push
sub
inc
inc
add
and
mov
inc
dec
cmp
mov
dec
call
bound
inc
adc
inc
rcll
scas
add
push
jecxz
gs
xchg
mov
add
mov
mov
lret
and
inc
pop
fimull
sbb
cmpsb
andl
pop
dec
dec
adc
mov
pop
imul
adc
data16
mov
add
inc
decl
add
inc
cmp
add
push
sbb
add
js
shrb
icebp
or
mov
pushf
andb
rolb
ret
jns
mov
add
xor
cmp
aas
push
inc
push
xor
xchg
cld
inc
inc
mov
jnp
out
icebp
inc
mov
add
mov
jne
pop
inc
add
push
stc
sbb
fs
das
or
imul
cmp
arpl
imul
pop
jb
xor
icebp
jo
push
or
cs
daa
add
jo
bound
adc
mov
mov
push
push
insb
das
inc
jns
sub
scas
outsl
jl
add
mov
ja
lahf
loopne
mov
das
loopne
fwait
cmp
sbb
and
mov
addr16
mov
test
ret
sbb
shr
jl
mov
insb
pop
enter
sarb
jg
fdivrs
cmp
mov
les
mov
ret
sete
cmp
pop
enter
jg
jbe
data16
add
and
fmuls
jns
pop
popf
inc
pop
in
rcr
cmp
xor
push
lcall
lret
clc
cmp
test
adc
or
jl
in
lds
push
xchg
sbb
inc
call
mov
adc
or
mov
xor
and
push
sbb
jmp
mov
in
rorl
iret
dec
mov
leave
fcmovnbe
mov
aas
jbe
mov
imul
aam
lods
xor
insl
insb
adc
fs
loopne
jns
ficoml
dec
adc
repz
daa
popf
mov
lock
enter
mov
loope
cwtl
xchg
imul
test
lea
icebp
movsb
mov
sub
inc
imul
push
dec
imul
fadds
ltr
mov
fidivs
push
lcall
or
loope
and
mov
les
push
push
add
push
outsl
ja
xor
pop
pop
test
xor
mov
push
sub
add
jno
fadds
out
daa
movsb
and
pop
arpl
push
inc
repnz
xor
lods
mov
xor
fucomip
cmc
rclb
mov
mov
bound
push
xor
xor
push
jb
outsl
and
mov
insb
jae
arpl
adc
outsb
push
add
push
imul
ss
push
mov
jae
in
insb
push
push
jae
push
adc
xchg
mov
push
sub
xchg
hlt
push
mov
test
add
mov
out
adc
mov
jecxz
inc
cmp
addb
adc
shll
fs
xchg
popa
xorb
jno
add
push
mov
movsb
jo
pop
das
push
mov
mov
push
jo
jb
jns
xchg
mov
dec
imul
xor
roll
push
push
lods
cmpsl
xor
xchg
imul
push
sbb
imulb
push
jnp
dec
aaa
adc
ja
dec
popa
jge
and
call
pusha
inc
and
dec
enter
inc
fiaddl
das
imul
mov
mov
add
pop
add
inc
shll
ja
inc
add
adc
push
fbld
jne
ds
cmp
or
insl
popf
cmp
sub
xchg
mov
jp
push
aaa
cs
es
pop
push
scas
xor
lea
xchg
and
fs
jo
xlat
push
nop
pop
ds
fs
ja
inc
inc
lahf
xor
iret
mov
dec
or
nop
jo
ss
pushf
cltd
inc
cs
jle
loope
adc
jle
and
push
jo
loope
call
rcr
dec
rcrl
adc
ret
inc
gs
loopne
add
add
push
jnp
aas
das
pop
outsl
mov
fdivl
mov
inc
add
sbb
sub
xor
sbb
push
scas
mov
addb
dec
dec
pop
sub
mov
inc
jns
pop
roll
xchg
fs
lds
xor
and
mov
in
and
push
outsl
cmp
xchg
in
xchg
mov
dec
and
roll
sbbb
push
push
popa
in
pop
sbb
cmp
loopne
push
cmp
cwtl
lret
mov
rolb
insl
imul
push
mov
out
add
adc
mov
inc
jmp
fnsave
or
das
push
mov
rcr
aaa
dec
inc
dec
pop
or
aas
push
and
sbb
inc
xchg
popa
out
jnp
push
je
inc
sbb
pop
sub
sarb
push
inc
jp
mov
push
iret
add
jo
add
add
cmp
outsl
inc
pop
push
or
push
and
jo
sub
jo
ds
xor
jl
dec
pusha
push
jo
jno
fldcw
pop
cmp
loopne
arpl
scas
into
pop
roll
dec
adc
in
xchg
adc
loope
ljmp
dec
imul
add
iret
dec
pop
pop
cwtl
pop
add
lret
xchg
into
out
outsl
cmpsl
das
jnp
inc
cmpsl
add
push
mov
addb
pop
imul
push
push
and
in
imul
jns
bound
sbbl
inc
jae
adc
add
je
add
add
jl
out
xor
and
xor
xor
pop
test
pop
loope
pop
push
sarb
into
insb
mov
push
add
mov
mov
mov
imul
fbld
lret
fbld
pop
push
sbb
inc
mov
scas
std
fwait
xchg
imul
pop
and
inc
cwtl
aam
int
icebp
jmp
jecxz
add
adc
xor
in
aam
or
jo
lret
jae
or
add
mov
add
jns
pop
mov
push
sbbb
popa
fsubrs
xchg
push
punpcklbw
popf
cs
and
pop
repnz
add
std
jecxz
repnz
jns
cmp
test
test
incl
xlat
pop
shrb
mov
mov
in
add
inc
cmp
inc
fsubrs
sti
fsubrl
imul
xor
inc
pusha
jmp
pop
pop
sarl
hlt
mov
xchg
add
or
mov
adc
add
push
and
and
or
sub
outsl
adc
daa
sbb
jns
adc
add
repz
repz
out
lock
cmp
enter
mov
jns
idivl
movsb
pop
mov
sahf
out
nop
mov
jo
pusha
push
pop
push
inc
cmp
repz
xor
sbb
pushf
out
adc
in
lock
pop
mov
push
fcom
repz
repz
cwtl
iret
repz
mov
cmp
cmp
repz
and
adc
jns
out
add
in
hlt
in
in
jns
out
int3
mov
sahf
out
outsl
xchg
push
mov
js
push
inc
stc
cmp
jnp
jle
sbb
loopne
adc
fcomps
push
xor
push
push
cmp
shrb
repnz
popf
lods
mov
push
mov
sub
incl
pmuludq
sbb
dec
add
shl
xorb
pop
scas
push
nop
push
repnz
data16
fisubs
push
aaa
adc
adc
maskmovq
testl
lret
jbe
or
neg
outsl
add
mov
neg
cmpsb
jg
fs
inc
dec
pop
add
rolb
cmpsl
mov
add
xchg
xor
scas
lds
daa
dec
pop
inc
push
scas
inc
xchg
dec
pop
dec
mov
inc
jne
sub
inc
inc
subl
orb
addb
cmp
mov
push
pop
jo
add
in
sub
inc
add
ret
cs
xchg
dec
and
and
outsb
cmpsl
jbe
xchg
or
jae
push
aaa
push
pop
insl
xor
sbb
insl
jbe,pn
and
call
xor
xor
ds
sub
and
or
add
outsl
jb
popa
fcoml
imul
mov
jbe
rcrb
cmp
rclb
insb
or
sub
or
pop
or
movups
jne
es
popa
fadds
mov
popa
insb
into
dec
mov
mov
stc
das
sti
adc
sbb
mov
push
inc
add
fcmovnu
add
inc
pop
pop
adc
fistps
fcmovbe
add
les
xor
sbb
bound
loopne
sbb
das
xor
xorb
pushl
add
or
sub
xor
xor
movsb
xor
xor
xor
xor
xor
xor
pushl
xor
xor
dec
xor
xchg
shll
inc
stc
pushl
dec
ss
es
dec
aaa
push
aaa
mov
iret
aaa
call
aaa
adc
mov
jno
cmpb
cmp
cmp
cmp
cmp
cmp
cmp
cmp
lcall
cmp
data16
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
fcomip
out
cmp
cmp
cmp
sub
ret
add
push
lock
idivl
lcall
lea
or
xor
xor
push
xor
pushl
xor
js
popf
xor
xor
xor
xor
xor
paddd
jmp
xor
xor
xor
xor
xor
out
xor
push
incl
xor
xor
xor
xor
xor
fidivl
scas
xor
mov
xor
jecxz
call
xor
mov
ss
ss
ss
ss
aaa
sbb
jno
mov
aaa
loopne
movsb
lods
pop
out
cmp
pop
cmp
outsb
cmp
cmp
cmp
cmp
or
cmp
cmp
cmp
push
cmp
jl
cmpl
decl
cmp
cmp
push
adc
cmp
cmp
cmp
cmp
dec
cmp
cmp
jae
mov
pushf
cmp
fistps
das
jo,pt
test
mov
aas
adc
xor
inc
aas
popa
aas
cmpl
aas
mov
shr
aas
les
into
aas
out
jmp
repz
cmp
pop
xor
xorb
xor
fdivs
fnsave
ljmp
xor
pushl
divb
std
xor
xor
xor
pop
xor
xor
xor
xor
xor
xor
xor
std
ljmp
xor
xor
xor
xor
pop
xor
jo
xchg
xor
xor
jg
imul
inc
xor
xor
xor
xor
xor
bound
push
sub
ss
clc
loop
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
mov
xchg
cmp
cmp
cmp
fcomip
cmp
cmp
xchg
aas
inc
aas
pop
aas
ja
pusha
mov
or
pop
push
or
cmp
aas
clc
lcall
arpl
push
xor
xor
xor
xor
xor
xor
xor
call
cmp
cmpsb
push
xor
xor
lcall
out
xor
xor
xor
xor
test
mov
mov
nop
xor
cli
pop
cld
xor
xor
xor
scas
clc
xor
cmp
jmp
xor
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
das
mov
cmp
jp
cmp
cmp
std
cmp
cmp
sub
xchg
adc
sbb
push
das
cmp
ds
fidivrl
jmp
jg
movd
and
cmp
ss
ss
xchg
cmp
cmp
cmp
iret
cmp
mov
cmp
cmp
cmp
dec
aam
push
cmp
cmp
cmp
cmp
cmp
cmp
das
adc
dec
aas
push
mov
cmpb
aas
sarl
aas
in
out
call
push
movsb
xor
jg
loop
add
jmp
mov
scas
xor
xor
xor
incl
loop
xor
xor
xor
mov
xor
xor
call
push
scas
std
xor
cmpsb
data16
ss
add
or
push
and
aaa
dec
aaa
dec
aaa
push
aaa
pop
aaa
imul
pushl
jl
xchg
mov
xchg
aaa
mov
aaa
xor
cmp
xchg
outsl
cmp
call
cmp
push
mov
cmp
cmp
sbb
push
cmp
decl
add
push
cmp
sbb
cmp
xchg
xchg
cmp
or
cmp
cmp
cmp
cmp
cmp
bnd
adc
sub
xor
jg
cmp
adc
inc
cmp
push
cmp
pop
cmp
jb
js
cmpl
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
sbb
mov
ds
push
cmp
jae
mov
cmp
scas
cmp
jg
cwtl
ds
ds
jecxz,pt
out
ds
ret
ljmp
aas
cmp
je
jge
mov
movsl
aas
stos
aas
mov
mov
mov
push
xor
insl
stos
lcall
sahf
xchg
les
fidivl
in
dec
call
mov
and
sub
cmp
jb
mov
xor
xor
pushl
pushl
je
lcall
xor
xor
mov
jl
cmpsl
xor
xor
lock
xchg
xor
xor
xor
cmpsb
pushl
mov
cmpsb
xor
cmpsb
xor
xorb
aaa
fwait
sahf
inc
call
xlat
cmpsb
mov
bound
scas
cmp
add
sbb
sub
cmp
cmp
xor
mov
cmp
mov
pop
fimull
nop
cmp
cmp
cmp
inc
lds
xor
push
or
ljmp
cmp
bound
data16
push
outsb
aaa
jb
jbe
xchg
pushl
ja
js
jge
cmp
cmp
cmp
cmp
cmp
cmp
pop
adc
xchg
mov
sbb
test
ja,pt
lahf
xor
xchg
aas
push
mov
pop
inc
xor
mov
xor
xor
xor
and
push
ss
fiadds
aaa
ret
lock
aaa
repnz
or
cmp
pop
cmp
lcall
cmp
cmp
cmp
jbe
xchg
cmp
cmp
cmp
lcall
add
cmp
cmp
fdivrs
push
pop
popf
mov
aas
jne
mov
or
cmc
cmc
pushl
mov
fwait
xor
xor
dec
or
or
sub
aas
xor
divl
pop
xor
hlt
xor
adc
es
dec
ss
outsb
notb
lock
mov
enter
in
and
cmp
cmp
cmp
cvtpi2ps
mov
dec
ljmp
orl
jo
jne
test
mov
pop
cmc
add
cmp
dec
cmp
cmp
call
cmp
cmp
cmp
jp
mov
cmp
cmp
pop
pop
cmpl
pop
cmp
mov
incl
and
push
cmpb
cmpsl
ds
ds
ret
idivl
add
sbb
add
sahf
loope
rol
pop
dec
pop
mov
push
xor
aad
out
incl
cmp
or
xor
xor
xor
xor
xor
mov
xor
in
xor
xorl
add
xor
ds
dec
aaa
pop
aaa
js
mov
mov
cli
fidivl
out
in
aaa
cli
aaa
mov
es
ljmp
cltd
cmp
cmp
cmp
cmp
cmp
cmp
stos
lock
cmp
cmp
cmp
adc
jbe
cmpl
clc
cltd
cmp
cmp
adc
and
pusha
aas
cmpb
aas
fdivrl
loop
out
clc
mov
out
pop
rclb
sub
jne
jg
mov
loop
xor
xor
jg
xchg
xor
xor
xor
inc
pop
inc
dec
js
xor
xor
ljmp
jbe
loopne
adc
call
sbb
sbb
sub
sub
nop
cmp
mov
cmp
cmp
cmp
cmp
cmp
jno
test
ljmp
and
jecxz
cmp
aaa
into
cmp
mov
xor
xor
lcall
decb
lods
xor
int3
fildl
xor
xor
add
mov
and
and
sub
sub
xor
cmp
jno
cmp
inc
cmp
dec
cmp
push
rcrb
cmp
mov
fidivs
cmp
cmp
test
lahf
cs
aad
push
mov
enter
add
aam
fdivrs
fdivl
mov
cmp
dec
cld
push
add
or
adc
cld
pop
lods
pop
stos
sbb
and
and
sub
sub
pop
jg
xor
cmp
inc
cmp
cmp
push
pop
cmp
cmp
insb
cmp
je
jl
mov
cmp
cwtl
outsl
ret
mov
sub
xor
inc
mov
push
aas
jg
ljmp
insb
aas
test
xchg
aas
cwtl
aas
lods
aas
mov
shrb
aas
fdivrs
loopne
clc
cmpsl
filds
or
xor
lcall
xchg
xor
xor
xor
inc
xor
xor
es
pushl
cwtl
xor
xor
xor
xor
cmpsb
cmp
pop
xor
mov
cmpsl
icebp
sbb
inc
xor
andb
add
dec
notb
fimuls
xor
ss
jmp
shlb
aam
fdivs
fdivl
loopne
in
call
ss
incl
add
add
or
or
adc
adc
aaa
sbb
and
and
sub
call
xor
cmp
cmp
inc
aaa
inc
aaa
dec
jb
aaa
push
aaa
pop
aaa
inc
clc
pop
aaa
pusha
aaa
jo
je
jl
xorb
aaa
mov
nop
aaa
loopne
icebp
aaa
xchg
aaa
cwtl
into
mov
dec
mov
mov
mov
shlb
aaa
enter
shlb
aam
fdivs
fadd
inc
bound
push
out
aaa
hlt
mov
cld
aaa
hlt
add
or
adc
adc
sbb
add
cmp
fdivrl
call
mov
cmp
pop
lcall
cmp
cmp
cmp
sub
cmp
cmp
cmp
cmp
jne
outsl
add
insb
cmp
jl
test
incl
mov
mov
cmp
mov
mov
cmp
loopne
movsl
and
mov
mov
movsl
movsb
fs
lret
sti
sti
popa
pop
lods
pop
push
aaa
cmpsb
punpcklbw
icebp
push
fnstenv
mov
stos
mov
push
lret
aaa
ljmp
gs
sarb
aas
push
aaa
mov
xchg
out
lcall
push
add
nop
dec
jae
loope
addb
push
pop
xchg
cmp
stos
push
xchg
add
out
jmp
inc
pmaxsw
test
out
andb
inc
dec
add
push
xchg
sub
sub
inc
sub
insb
xchg
cmp
jnp
sbb
or
add
add
lods
inc
dec
sub
or
inc
push
pop
pop
xorl
cmpsb
dec
jns
and
out
add
es
ret
mov
push
sub
mov
mov
daa
pop
add
test
ret
loope
push
jae
movsb
scas
aas
enter
gs
inc
cwtl
insb
or
or
gs
mov
cmp
and
adc
push
push
scas
mov
mov
dec
push
pop
rolb
popa
adc
repz
shlb
sbb
call
jmp
cmp
xchg
sbb
jle
aam
idivb
push
sub
je
pop
dec
fimull
jae
xor
and
jle
cld
sbb
out
aas
add
jl
or
incl
jb
ljmp
xor
mov
sub
and
mov
sbbb
ret
mov
test
std
incb
bound
leave
jbe
call
mov
outsb
sbb
pop
out
add
pop
xlat
push
ljmp
sub
or
add
gs
lahf
jp
or
int3
dec
ljmp
orl
mov
psrlw
xlat
pop
inc
sbb
pop
in
lods
mov
inc
or
mov
rorb
inc
andl
and
xor
pop
nop
lock
push
add
enter
sbb
lock
pop
std
xchg
bound
nop
sahf
add
lret
dec
xchg
je
cmc
mov
xchg
call
jno
inc
cmp
jne
test
push
std
push
adc
inc
pop
jmp
push
jo
add
cmp
call
jns
dec
and
xchg
call
ror
xchg
sub
dec
and
sub
xchg
inc
mov
jnp
fistps
cmpsb
test
add
dec
add
or
pop
add
add
add
mov
or
test
roll
dec
inc
nop
mov
inc
loop
sbb
rcll
lea
movsb
or
das
sbb
jbe
dec
mov
out
cld
xchg
test
push
ret
outsl
push
mov
popf
addr16
pop
sbb
cmp
clc
add
pop
clc
fnsave
cmp
or
xchg
nop
in
test
push
ret
pop
ret
mov
dec
mov
rorb
mov
and
xor
sbb
sub
push
add
loope
adc
jo
adc
sub
adc
ficoml
js
jecxz
pop
add
mov
mov
push
aad
loope
add
fimuls
and
mov
jecxz
add
sub
pushl
cmp
mov
cmpb
adc
cmp
push
mov
aaa
xor
cmp
pop
mov
rclb
test
cmpsl
jge
sub
mov
sarb
sbb
mov
orl
mov
push
mov
mov
mov
adcb
and
fisubrl
adc
push
dec
sarb
sub
pusha
cmp
or
leave
inc
xchg
mov
mov
xor
mov
xor
mov
cmp
mov
cmp
or
fildl
xchg
pop
adc
push
push
adc
xor
push
adc
rol
leave
out
test
enter
push
adc
sbb
dec
rclb
rorb
pop
daa
cmp
add
push
or
dec
repnz
daa
push
adc
sub
lsl
adc
out
cmp
rol
test
ss
fcoms
jmp
rcll
addl
inc
push
jbe
push
sub
and
test
mov
cmp
jle
pop
ljmp
aaa
xor
and
shl
xchg
scas
aaa
mov
xchg
jne
mov
xchg
jne
mov
pushf
mov
and
lods
rol
ret
or
sarb
add
shrb
jnp
jo
dec
pop
jnp
popf
adc
cmp
and
dec
jnp
adc
push
or
push
add
cmp
out
and
push
mov
adc
mov
stc
inc
mov
push
push
sbb
inc
sub
push
dec
sub
call
jbe
mov
mov
xchg
pop
cli
sbb
lret
cld
and
push
std
pop
test
xchg
jne
push
incb
lahf
xorb
ss
mov
adc
mov
fcoms
outsl
ja
call
call
test
jbe
pop
out
push
mov
and
and
push
les
cmp
popa
or
cwtl
cs
stos
nop
sub
and
test
push
test
frstor
fstpl
call
cmp
add
lret
fimuls
inc
fbld
xchg
or
pop
inc
mov
test
les
add
and
mov
adc
sub
push
fwait
stc
add
inc
and
adc
sub
mov
cmpsb
insl
add
add
sarb
gs
mov
ret
sbb
xor
mov
inc
and
sbb
add
push
gs
cmp
or
sub
and
stc
push
add
push
or
sarb
jns
sbb
sbb
or
dec
or
cmp
add
jg
add
inc
fimull
or
push
fisttpl
fstp
mov
xor
xor
add
add
push
adc
fldt
sbbb
and
outsb
cmp
das
insb
push
add
push
jnp
sahf
inc
sbb
cmp
mov
and
prefetcht0
fstpl
jmp
and
inc
inc
nop
shlb
or
insb
fstpt
fisubl
mov
out
add
push
xlat
pop
nop
and
int
sbb
cs
jnp
repnz
mov
es
add
or
dec
push
push
mov
add
mov
insb
fs
push
and
inc
sbb
add
jmp
repz
mov
add
mov
and
roll
jg
and
jns
ja
xor
pop
nop
inc
push
fs
mov
add
jg
add
mov
cmp
loopne
push
call
out
lcall
adc
sub
gs
out
cmp
inc
push
push
push
imul
cmp
jae
xor
test
call
mov
fs
sbb
lods
nop
and
addr16
and
xchg
cltd
mov
or
pusha
and
cltd
shlb
adc
inc
push
call
ret
pusha
mov
pop
or
leave
repz
pop
pop
dec
loope
jnp
cmpsl
ret
addl
dec
and
adc
sbb
addr16
andl
imul
daa
daa
dec
shll
daa
daa
or
shlb
daa
daa
dec
lcall
and
nop
add
sub
cmp
sub
sub
sub
inc
and
sub
cmpsb
imul
sub
sub
sub
xor
or
sub
sub
aam
cmp
and
cmp
mov
sbb
or
add
test
mov
inc
stos
cltd
fcoms
and
or
addr16
call
sbb
push
cmc
pushf
int
pop
cmc
push
lock
mov
aam
jp
or
clc
fs
dec
sbb
cmp
sbb
adc
inc
adc
sbb
psubsb
cwtl
mov
and
testb
push
inc
push
adc
jg
and
mov
add
mov
inc
inc
ja
cwtl
addr16
pop
pop
or
rolb
test
pop
adc
pop
pop
xchg
in
nop
mov
data16
xchg
pop
mov
lods
push
shlb
ret
and
outsb
and
sub
and
ja
andb
test
push
add
xor
add
xor
call
cmp
cmp
dec
inc
sub
test
adc
rcr
adc
ret
call
movsb
cmp
pop
es
xchg
cltd
mov
rcrb
mov
jp
or
add
push
push
mov
das
in
add
mov
cmpsl
adc
add
cltd
sub
mov
and
xor
cs
cld
loope
cltd
cwtl
pop
push
call
test
lret
pushf
push
pop
cwtl
rol
inc
mov
fs
pusha
sbb
outsl
cltd
mov
dec
sbb
xor
cltd
inc
push
adc
or
cwtl
fldl
pop
cltd
pop
cmpb
sbb
aaa
nop
cltd
xchg
sbb
add
inc
bound
sbb
test
xor
cltd
jns
or
xchg
cltd
pop
ljmp
mov
xor
cwtl
cltd
loopne
data16
lcall
rclb
push
push
pop
adc
aam
popf
pop
adc
inc
adc
jp
addl
test
jbe
jmp
outsb
adc
mov
sub
inc
adc
sbb
loopne
inc
mov
jbe
push
rcr
mov
in
mov
loopne
aam
sub
stos
or
push
imul
fiaddl
cmp
mov
adc
test
push
mov
out
stos
mov
sbb
adc
pop
loopne
and
nop
and
adc
push
adc
aam
movsl
inc
adc
adc
in
ficomps
add
je
adc
jl
mov
lret
xchg
add
pop
nop
sbb
adc
and
mov
inc
call
adc
mov
rclb
lea
adc
inc
call
adc
jmp
adc
mov
je
and
push
test
mov
movsb
mov
mov
adc
push
pop
aam
push
xchg
adc
in
jno
xchg
test
or
lods
add
inc
popf
and
or
or
pop
adc
icebp
out
adc
rol
and
sub
xchg
pop
inc
movsb
pop
add
cs
adc
lea
or
les
xor
sub
imul
push
add
xchg
push
and
icebp
pop
enter
andb
inc
pop
inc
or
out
mov
sbbb
rorb
inc
pop
sbb
mov
addl
sbb
cmp
dec
pop
push
or
sbb
add
mov
ret
mov
xchg
pop
push
adc
xchg
xor
aam
popl
rcrb
sub
loopne
dec
out
sub
not
mov
in
fldl
mov
inc
xor
movsl
hlt
pop
xchg
cltd
inc
inc
inc
lcall
inc
inc
inc
cmp
inc
pop
inc
inc
inc
inc
inc
dec
dec
inc
jmp
cmp
fs
pop
mov
inc
cmp
pop
bound
or
push
call
push
add
jo
dec
adc
insb
fldl
fdivrs
fdivs
lds
je
ret
stos
loop
inc
int3
mov
inc
add
cmp
pop
call
and
std
pushf
sbb
push
and
mov
pop
jo
nop
rorb
movsl
addb
cmp
cmp
in
adcb
out
add
dec
mov
mov
cmp
ja
mov
dec
andl
aas
lock
jl
xor
inc
pop
and
sbbb
xor
pop
call
jp
mov
xor
sbb
pop
cmp
mov
adc
push
dec
subl
sub
in
push
mov
cmpsl
push
xorb
cmpsl
pop
mov
pop
pop
fstpl
push
mov
pop
jb
pop
int3
push
push
xchg
fdivl
mov
mov
lahf
mov
call
mov
pop
das
pop
or
xchg
popa
push
sub
int3
pop
and
fdivl
fcompl
pop
mov
jnp
lods
lret
call
test
pop
push
and
lret
mov
test
lock
int3
rcll
lock
out
mull
add
pop
mov
jecxz
pop
pop
int3
dec
fmul
inc
mov
data16
ret
pop
add
bound
and
sbb
arpl
insb
xchg
loopne
fs
or
je
fs
or
clc
pushf
outsb
xchg
sub
loopne
loopne
or
shrl
loopne
pop
jns
and
mov
les
mov
daa
in
inc
nop
push
js
or
jmp
inc
mov
flds
sub
test
jmp
and
xchg
cmp
inc
daa
jnp
pop
mov
inc
daa
fwait
roll
fmul
arpl
fstpl
cltd
loopne
inc
xor
sub
adc
cltd
pop
sub
bound
cltd
push
push
mov
sub
dec
inc
mov
fcoml
js
mov
adc
cmpsl
inc
mov
push
stc
pop
leave
sbb
sub
push
push
push
inc
jmp
shll
sub
mov
mov
dec
push
popf
fisttpll
xchg
jl
rcrl
pop
and
clc
cmp
inc
ljmp
enter
mov
fdivr
loope
test
adc
or
lahf
mov
mov
cmc
jle
add
dec
xchg
mov
sub
add
sub
and
mov
mov
inc
mov
adc
rorb
sub
daa
adc
adc
ret
sub
pop
loop
mov
pop
push
movsl
outsl
push
daa
sub
or
call
and
mov
shrl
xor
call
jecxz
adc
dec
sti
and
stos
fcomi
jmp
add
ret
mov
scas
pop
jnp
dec
cmp
pop
hlt
je
inc
sub
jge
loopne
pop
push
out
mov
mov
adc
test
rcll
andb
loopne
sbb
xchg
inc
push
lret
icebp
push
xchg
inc
mov
stos
inc
adc
and
sbb
jge
inc
jl
jl
ret
sub
mov
and
inc
jno
mov
and
mov
push
popa
pop
pushf
inc
pop
adc
xchg
xor
add
enter
or
jns
mov
jmp
nop
push
js
xor
int
fdivrl
jne
xchg
pop
push
roll
and
pusha
or
push
or
test
adc
push
fistps
add
es
and
jecxz
adc
xchg
fcmovb
imul
pop
das
lods
xchg
push
xor
ss
adc
scas
mov
xor
sbb
hlt
xchg
pushf
mov
les
xchg
fdivl
daa
mov
xchg
or
mov
ss
adc
or
push
xchg
es
aam
sub
aam
sahf
insl
loop
adc
cmp
inc
xchg
lret
fxch
and
aam
pushf
stos
in
fldcw
dec
insl
roll
mov
dec
insl
xchg
or
cmc
rclb
or
xchg
add
repnz
push
add
addb
je
mov
fimull
and
sub
dec
mov
ficoml
xchg
movsl
fwait
ss
je
xchg
cwtl
sub
inc
push
inc
xchg
rol
in
fwait
inc
and
mov
mov
xchg
mov
dec
mov
xchg
mov
push
add
ljmp
movsl
xchg
mov
or
dec
pop
mov
sub
sub
xor
mov
xchg
pop
jp
sub
or
jmp
mov
mov
mov
xchg
loopne
add
and
and
leave
mov
fs
lret
or
xchg
test
push
mov
jne
and
shrl
lea
outsb
shll
fcoml
cmpsl
lret
int
inc
into
sub
adc
push
gs
stos
pusha
add
ds
fldcw
mov
aaa
mov
loope
push
and
mov
aam
repnz
leave
call
adc
push
int
mov
jb
pop
fdiv
leave
sbb
das
push
in
mov
mov
pop
lea
out
push
cmpsl
lods
xchg
pushf
inc
sbb
cmp
jb
inc
xorl
dec
xchg
rcll
aas
mov
lcall
inc
fildl
lcall
in
fistl
push
or
fildl
xchg
mov
adc
and
inc
pop
andb
testb
lds
aad
cmp
enter
enter
push
orl
outsb
fildl
ret
in
add
loop
push
cmpb
sub
mov
iret
leave
mov
ret
dec
or
pop
and
fisttpl
and
lret
push
push
adcb
and
push
pop
loopne
sub
mov
test
je
fisttpl
adc
pusha
sub
mov
out
fidivrl
inc
or
cmpsb
lods
sub
add
test
fdivs
xlat
out
loopne
aaa
out
jns
adc
jl
jno
rcrl
fildl
fldt
call
pop
call
jecxz
aam
test
inc
dec
or
lods
fisttpl
faddl
xchg
add
ja
cmp
jle
dec
or
test
rolb
xchg
cmpsb
mov
outsb
daa
imul
lods
add
mov
or
icebp
adc
fucomip
in
and
sar
cmp
mov
leave
bound
cmp
repnz
jns
inc
lret
mov
and
dec
pop
mov
mov
and
or
add
in
mov
in
fdivrl
pop
jns
jns
mov
test
das
mov
mov
das
das
cmpl
das
das
popa
mov
dec
mov
inc
mov
nop
sbbl
mov
enter
add
in
pop
cmp
mov
jb
sbbl
mov
stos
mov
lahf
mov
sbb
and
mov
nop
sbbl
mov
enter
cs
in
sbb
push
jb
mov
and
mov
nop
sbbl
mov
enter
pushf
mov
in
pop
cmp
jo
gs
pop
mov
cmp
inc
push
cmp
in
pop
sbb
jb
xor
jmp
inc
enter
inc
in
in
mov
and
daa
int
sahf
or
mov
adc
jp
mov
das
add
xor
mov
dec
sbb
adc
adc
daa
int
xor
push
sbb
mov
enter
cli
mov
and
int
and
cmp
jb
mov
enter
inc
mov
and
mov
dec
jl
sahf
xor
mov
add
nop
jo
rolb
add
dec
mov
subb
inc
in
adc
xchg
xor
inc
adc
shr
test
adc
rol
rolb
cmpsl
in
sbb
stc
jb
dec
repnz
cmp
popl
jmp
sub
push
pusha
jmp
add
mov
ret
push
repnz
mov
mov
inc
sti
testl
pop
icebp
sbb
fdivrs
adc
mov
shlb
pop
rcl
mov
jg
mov
push
and
inc
lds
push
jbe
add
cmp
push
push
mov
rcrl
punpckhbw
leave
rol
dec
into
inc
or
rsm
loope
push
xchg
shrb
es
pinsrw
aaa
arpl
hlt
add
hlt
paddusb
inc
les
dec
bswap
inc
pop
adc
and
lret
and
mov
rcrb
xor
pusha
xor
rcl
sub
mov
jbe
push
xchg
or
and
xchg
dec
cwtl
test
jmp
pop
sarl
xchg
outsb
sbb
push
sbb
mov
pop
mov
dec
lret
inc
pop
push
xchg
out
xor
lret
mov
xor
xor
int3
pop
xor
sub
jo
adc
sbb
fsubl
andb
js
add
js
jmp
xchg
jne
and
xchg
mov
push
xchg
or
sub
int3
dec
mov
cmp
test
or
inc
sub
mov
and
push
xchg
mov
sbb
dec
movsb
movsl
sub
push
lcall
adc
mov
es
mov
adcb
test
mov
or
mov
and
sbb
adc
sarb
gs
pop
sbb
into
movsl
sub
inc
mov
and
jbe
aam
test
jo
scas
push
mov
sub
lcall
mov
sub
scas
dec
jge
push
lret
js
insl
pop
push
lret
or
lret
fmull
fimuls
add
js
cld
fsubr
test
xchg
fcoml
ja
clc
push
call
notl
fcompp
dec
lds
adc
movsl
or
out
xchg
or
jns
out
test
movsl
or
pop
lret
and
jnp
sub
xchg
or
rcrb
dec
or
mov
push
ret
adc
je
xchg
or
mov
out
adc
adc
or
pop
or
xchg
sbb
xchg
mov
pop
mov
push
ds
js
sub
xchg
or
shr
dec
push
or
and
rclb
sub
arpl
pop
mov
movsl
aad
push
adcb
or
or
popa
push
xor
sub
icebp
fwait
and
lret
xor
xchg
xchg
fnstenv
mov
mov
rcr
sub
js
je
stos
xchg
movsl
pause
imul
mov
push
inc
rcrb
popa
das
or
sub
out
movsl
sub
or
xchg
or
or
sahf
shlb
jmp
std
push
sbb
sub
or
xchg
sahf
cmpsb
dec
or
push
aad
add
in
xchg
xor
adc
dec
and
xor
outsb
adcb
push
push
mov
sbb
sub
and
mov
mov
stos
cmc
or
gs
mov
add
or
ja
sbb
mov
gs
and
dec
pop
mov
gs
je
mov
sub
and
push
push
lret
shrb
movsl
sub
mov
xor
mov
or
ret
push
lret
sbb
scas
push
or
or
or
push
call
sbb
and
stos
xchg
movsl
or
sahf
jmp
mov
repz
push
test
cmp
bound
sub
pop
loop
cmp
call
inc
dec
pop
or
inc
sub
stos
or
adc
ficomps
mov
sub
movsb
js
push
xchg
mov
sub
gs
cmpsl
xor
sub
dec
dec
scas
or
repnz
or
xchg
adc
mov
adc
data16
or
or
push
xchg
scas
movsl
or
add
lahf
loope
cs
adc
les
push
or
out
pop
movsl
sub
mov
jb
in
xchg
push
cmp
jg
sbb
mov
pop
pop
sub
sbb
pop
fldl
sub
xlat
inc
inc
sub
cmp
loope
mov
in
sbb
shlb
xchg
test
cmp
aaa
xchg
out
test
push
aaa
adcb
inc
inc
push
orb
jnp
cli
lods
mov
mov
in
das
nop
mov
adc
mov
mov
lcall
xor
push
pop
ds
mov
in
xor
lock
mov
push
xor
test
push
cltd
inc
pop
push
and
sbb
sbb
mov
or
push
ja
pop
xchg
cmpsb
cli
sahf
arpl
movsl
cmpsb
and
fnstcw
mov
ds
adc
loopne
push
testb
jns
out
push
sub
mov
int3
faddl
sbb
repz
sub
inc
push
pop
outsb
cmp
repz
xchg
test
enter
repz
outsb
or
push
ds
cmp
repz
jb
mov
int3
out
push
stos
out
sahf
cmpsl
adc
cmp
out
sahf
pusha
jbe
test
into
out
idivl
add
push
sbb
sahf
out
sahf
xor
dec
pop
insb
adc
inc
ja
pop
cmpsb
add
ret
lods
push
adc
and
xchg
aad
pop
mov
push
lea
ret
or
add
out
mulb
sbb
push
push
mov
repz
mov
cmc
add
repz
clc
mov
mov
inc
adc
iret
mov
xchg
adc
add
push
pop
add
mov
sahf
idivl
mov
add
out
sarb
adc
adc
push
ds
sarl
sbb
sbb
xchg
out
sbb
or
cmpsb
add
sahf
iret
push
lcall
and
out
lcall
cmp
sarl
cld
hlt
call
sbbb
enter
dec
inc
aas
push
add
xchg
or
leave
or
adcb
test
xor
cmp
xchg
push
push
iret
repz
cmp
adc
add
xchg
in
loopne
fdivrs
out
ror
enter
jns
out
mov
out
sahf
mov
mov
out
mov
sahf
out
jo
push
sahf
pusha
pop
pop
push
push
dec
jns
out
dec
inc
inc
cmp
out
sahf
out
xor
adc
sarl
add
nop
fmul
test
iret
repz
push
sahf
cmpsl
stc
call
pusha
out
sahf
out
dec
inc
xor
iret
repz
or
mov
shlb
cmp
cmp
int3
or
out
test
push
xor
jg
mov
add
lock
mov
mov
or
inc
es
push
xchg
or
xchg
and
std
daa
stos
push
mov
aaa
xor
push
push
add
jbe
mov
and
xor
jne
shrb
push
stos
push
cmpl
outsl
push
shlb
lods
add
jbe
sbb
cmp
repz
in
sbb
das
sbb
outsb
jnp
mov
add
and
aas
insl
leave
inc
sbb
outsl
add
xchg
dec
iret
xlat
push
mov
inc
add
orb
aaa
mov
add
pop
cmpb
insb
ss
jo
pop
shll
jbe
adc
in
sbb
pop
lds
push
rcrl
daa
push
xchg
aas
mov
and
pop
enter
aaa
inc
pop
dec
jb
popf
rorl
cmp
push
pop
scas
inc
fisttps
inc
sarb
fldenv
inc
lahf
inc
jg
dec
push
dec
pop
xor
aas
pop
enter
push
int3
push
push
and
cmp
cmpsl
mov
fsubl
dec
fadd
test
sub
or
fbld
and
add
movnti
imul
inc
mov
add
mov
mov
pushf
add
fldenv
insb
pop
insb
daa
cmp
pop
stos
outsb
cs
outsb
sbb
inc
outsl
ds
outsl
gs
subps
pop
cltd
jge
mov
rcrb
fsubl
in
pop
mov
cld
adcb
or
scas
inc
adc
mov
sub
notb
imul
leave
cmp
and
mov
movsb
add
push
pop
cmp
add
or
movsl
push
sub
push
xlat
jae
adc
mov
mov
inc
aas
fwait
inc
sub
add
mov
sub
xor
xor
mov
jp
fwait
dec
add
add
push
mov
xchg
xor
sub
mov
adc
push
mov
sbb
push
ja
movsb
dec
sbb
inc
and
orl
mov
imul
daa
xchg
movsb
mov
push
mov
xchg
xor
sub
lods
addl
or
sbb
mov
bound
shll
push
or
add
add
lahf
sub
sbb
arpl
mov
imul
addb
sbb
sbb
mov
add
xor
pop
jae
insb
pusha
push
aaa
add
ja
push
pushf
xor
push
inc
addr16
bound
orb
ficompl
ret
add
push
pop
inc
xchg
movsb
xchg
out
sahf
inc
jle
pushf
cwtl
xchg
sahf
out
sahf
nop
mov
out
jns
push
pop
dec
inc
inc
iret
repz
cmp
xor
sub
cmp
repz
and
adc
enter
cld
xchg
hlt
xchg
in
push
in
cmp
repz
enter
repz
lods
test
mov
inc
xor
push
insb
push
fs
jns
repz
push
dec
mov
push
and
into
idivl
add
in
xchg
push
enter
iret
sarb
iret
repz
mov
jns
out
pop
inc
cmp
stc
cmp
and
adc
lock
loopne
out
sahf
int3
mov
mov
jns
outsl
subl
outsl
ss
cs
add
test
inc
xor
mov
neg
mov
sbb
test
pop
jo
sbb
lret
add
stos
sbb
sbb
pop
aad
test
ds
pop
dec
mov
ss
cld
pop
enter
andl
pop
and
xchg
cs
inc
dec
pop
fcoms
fbstp
js
aas
xchg
xchg
mov
sbb
add
and
rolb
shlb
sbb
fwait
push
sti
inc
xor
rcr
xor
xor
cmpsb
dec
sbb
fisttps
cmp
ss
ss
nop
ss
aad
es
ss
outsl
decl
sbb
cmp
cmp
aas
cmp
sbb
xor
fstpt
push
cmp
xchg
dec
es
lret
cmp
cmp
cmp
cmp
dec
test
sbb
pushl
inc
jnp
cmpl
adc
xor
cmp
cmp
incl
mov
mov
ds
ds
call
ljmp
ds
aas
pop
aas
and
sub
xor
aaa
into
decl
or
push
data16
jbe
jnp
cmpl
aas
popf
aas
movsb
aas
mov
sarl
div
dec
add
aas
clc
sbb
jl
xchg
cmpsb
mov
xor
mov
xor
sbb
inc
xor
mov
mov
xor
sarb
das
xor
fwait
pusha
adc
cmp
xchg
mov
cmp
xor
inc
sarb
pusha
je
inc
fmuls
xor
fisttps
sub
xor
xor
xor
xor
xor
or
pushl
xor
xor
xor
xor
dec
mov
ss
mov
fwait
mov
ss
pushl
sbb
xchg
mov
inc
sbb
add
sub
das
cmp
fnsave
mov
cmp
add
fmuls
es
es
cmp
xor
xor
cmp
cmp
cmp
sbb
rcll
cmp
pusha
je
clc
outsl
cmp
push
pop
mov
pop
xor
inc
fdivrp
aaa
mov
cltd
idivb
jg
cmp
cmp
cmp
dec
push
add
jg
outsb
ja
jle
test
clc
mov
cmp
hlt
cmp
inc
ds
ds
ds
fs
xchg
cs
decl
cwtl
xchg
xor
xor
xor
aas
cld
xor
push
xor
aaa
leave
clc
mov
xor
xor
xor
xor
inc
lds
pushl
xor
outsb
xor
loopne
repnz
dec
ss
bound
xorl
ss
es
or
ss
cld
adc
ss
aaa
or
push
sar
fs
xor
aaa
mov
sbb
mov
xor
add
cmp
xor
scas
push
sbb
pop
cmpsb
test
outsb
xchg
icebp
cmp
cmp
das
mov
cmp
cmp
cmp
cmp
loope
xor
and
es
cmp
cmp
cld
pop
or
cmp
jle
xchg
mov
xchg
or
lahf
cmp
pusha
ret
push
add
call
cmp
cmp
cmp
cmp
cmp
push
scas
test
rclb
push
cltd
xor
insl
mov
sub
das
xchg
jno
stos
dec
aas
outsb
inc
cmpl
aas
insb
dec
and
ret
aas
iret
dec
fsubl
sbb
js
xor
into
xor
jg
mov
jg
lea
xchg
xor
xor
xor
lcall
pushl
stc
xor
xor
jo
in
pop
xor
xor
or
mov
cmp
insb
popa
cld
fistps
xor
xor
adc
push
mov
ss
arpl
stos
add
ss
ss
pusha
jl
test
outsb
adc
jne
jle
jecxz
mov
or
sbb
sub
pop
in
cmp
cmp
cmp
cmp
xor
push
cmp
cmp
aaa
or
cmp
cmp
movl
push
mov
cmp
cmp
scas
in
inc
sar
and
ds
or
cmp
adc
fstpt
inc
adc
fbstp
divb
data16
or
ss
xor
xor
xor
xor
xor
mov
xor
xor
xor
xor
xor
jg
xchg
xor
xor
xlat
xor
ja
mov
pushf
ss
mov
stos
pusha
adc
sbb
into
and
scas
xor
aaa
jmp
sbb
pop
loop
cmp
pop
cmp
cli
push
lcall
divb
cmp
ret
clc
jmp
ds
imul
mov
lret
xchg
icebp
adc
lods
cmp
cmpl
xor
or
out
sub
scas
xor
cmp
dec
cmp
pop
cmp
sub
xchg
or
cmp
xor
xor
incb
xor
xor
xchg
mul
loopne
test
or
pop
dec
es
xor
test
or
dec
add
arpl
sub
add
pusha
out
xor
sbb
jge
xor
mov
stos
and
mov
popa
mov
jle
xor
inc
daa
jp
jb
call
mov
cmp
ret
push
mov
dec
int3
inc
adc
mov
cmp
subb
mov
cmp
ret
sub
inc
sbb
pop
xchg
insb
jb
out
inc
mov
inc
xor
sbb
mov
mov
gs
call
lcall
jo
or
or
adc
adc
sbb
sbb
add
and
sub
ret
xor
mov
xor
push
pusha
xor
xor
inc
movsl
out
es
add
push
lret
mov
mov
nop
xor
loope
cli
xchg
mov
xor
enter
xor
dec
sbb
fdivs
fadd
test
iret
xchg
je
js
nop
or
jbe
xor
jmp
jbe
push
xor
fs
loope
outsb
jo
bound
sarb
pop
pop
unpckhps
dec
add
nopl
mov
pop
daa
cwtl
decl
ljmp
sub
nop
icebp
jg
push
insb
xor
xor
xor
xor
xor
cmpsl
outsl
stos
push
shlb
xchg
mov
xor
xorb
or
push
ret
jb
xor
lcall
pop
push
fsubrl
in
call
xor
xor
addl
add
push
add
iret
inc
adc
sub
xor
aam
shll
xor
xor
xor
push
xor
pop
xor
aas
clc
jg
mov
xor
xor
xor
xor
mov
decl
inc
push
scas
pushf
xor
xor
xor
xor
xor
xor
xor
add
ds
shlb
int3
fimull
mov
ret
cmpsb
mov
push
inc
jp
sub
je
pop
fucom
fcmovnb
clc
or
sub
jbe
sarb
adc
pushl
mov
fdivr
add
inc
call
pop
pusha
fcoml
add
add
add
add
or
pop
pop
push
or
or
or
or
or
fistl
adc
adc
adc
push
adc
outsb
xlat
dec
les
or
pop
sbb
adc
adc
adc
add
inc
mov
shll
or
dec
mov
xor
add
mov
inc
add
add
mov
inc
mov
jb
testl
ds
fbld
add
push
adc
pop
and
xor
inc
mov
and
inc
adc
xor
cmpb
cmp
add
sbbl
les
xchg
xorb
dec
mov
push
xchg
popa
adc
dec
nop
ret
xor
xchg
and
andb
and
add
es
scas
cmp
mov
adc
push
adc
pop
popa
jno
and
and
lods
or
xor
adc
das
stos
and
loope
icebp
mov
mov
mov
and
inc
mov
fiaddl
or
mov
dec
jo
or
decl
bound
add
lds
cld
cli
and
mov
incl
jg
fnstsw
ficompl
cmpsl
xor
mov
test
pop
lahf
mov
movsl
jecxz
cli
pop
dec
and
out
stc
or
xchg
jg
jmp
or
insb
sub
addr16
out
or
push
push
xchg
add
repnz
incl
jbe
scas
jle
fcmovnu
clc
cmp
fisubrl
in
mov
orb
int3
lcall
push
pop
sbb
mov
push
pop
mov
pop
pop
mov
popl
movb
decl
sti
ret
scas
adc
mov
xor
lods
scas
xchg
test
call
scas
and
sbb
sarl
and
roll
fwait
movsb
jmp
push
lret
push
out
in
in
and
ss
repz
cmpsb
pop
outsl
icebp
mov
pop
lock
std
or
pop
decl
dec
aaa
dec
dec
pop
push
out
outsl
loope
loope
rorl
mov
int
arpl
mov
jp
push
out
or
cld
push
push
sahf
pop
clc
sti
jg
jno
lock
jg
inc
icebp
xchg
std
sarl
xor
fdivr
decl
hlt
and
xchg
jmp
sbb
das
mov
out
pop
jb
mov
or
push
xor
mov
int
inc
fwait
sbbb
mov
dec
jp
push
gs
dec
rcrl
stos
hlt
push
add
stc
loope
mov
sar
push
mov
fildl
icebp
testb
mov
lcall
pop
xor
jns
mov
in
repnz
jno
pop
sub
jg
scas
cld
or
push
decl
sbb
cld
andb
outsl
sbb
jb
adc
push
push
movsl
lods
jp
testb
sbb
into
fcomps
sbb
sbbl
outsl
fcmovne
andl
aas
loopne
cli
adc
aaa
xchg
in
add
inc
sahf
fisubs
or
dec
fisttpll
out
aas
std
cli
push
push
ljmp
outsb
push
idivl
cmp
sub
inc
scas
inc
mov
jg
je,pn
sub
jg
imul
mov
mov
inc
es
gs
jns
enter
pushl
cmp
pushf
push
scas
xlat
sub
cmp
sti
punpckhbw
cmpsb
orb
mov
or
cmp
cmp
js
jmp
inc
push
sub
xchg
pop
clc
pop
hlt
lret
movsb
add
fildl
add
lea
jg
gs
std
xorb
jg
add
outsl
adc
ret
das
pop
pop
pop
shlb
out
sar
scas
cli
cmp
lock
or
sarb
std
pop
les
cli
mov
mov
mov
arpl
stos
mov
and
insl
add
leave
push
scas
loop
jge
push
shrl
jmp
mov
push
mov
adc
and
sbb
xchg
jo
and
out
test
jl
imul
rcr
lock
sbb
cmpsl
sahf
imul
fcmovnu
rorl
pop
and
ljmp
nop
enter
ret
inc
in
mov
ss
cmp
scas
lods
hlt
cmp
fistl
mov
adc
push
movsb
xchg
or
mov
cmp
add
ret
fcmovu
ds
cmpsl
scas
popa
in
pop
ljmp
dec
xchg
mov
xlat
pushf
cld
aas
clc
jge
jnp
sbb
outsb
mov
sbb
jecxz
inc
adc
test
dec
jb
adc
xchg
and
push
push
jo
pusha
imul
add
mov
call
imul
daa
xchg
mov
cwtl
pop
xchg
ftst
jbe
xchg
and
jmp
add
jae
shrb
shlb
out
aas
stc
add
out
gs
jno
mov
call
adc
pop
cld
addl
adc
and
ds
cmp
fmull
enter
jecxz
scas
jg
jg
sub
in
pop
mov
sub
mov
dec
incb
outsb
mov
aas
mov
or
cld
inc
or
in
pop
cmpsb
push
pop
jg
add
jg
mov
outsb
jg
aad
test
mov
mov
iret
cmp
jg
push
jbe
push
sbb
stos
icebp
pop
incb
jno
insl
lcall
sub
push
inc
jecxz
sbb
sarl
adc
fdiv
cs
clc
xorl
inc
cmp
push
or
test
loopne
add
mov
fsubrl
pop
pusha
inc
fcomi
push
and
clc
lcall
adc
xchg
pushf
mov
repnz
and
mov
adc
jnp
add
loope
aas
push
rcrl
rcr
addr16
incl
pop
inc
jb
fistpl
adc
call
jno
pop
pushl
repz
inc
sti
arpl
daa
std
or
sbb
mov
inc
aas
cld
jmp
sbb
or
imul
xor
dec
xor
fsubr
fistps
mov
jg
jg
stos
pop
sahf
incl
jbe
dec
mov
sub
jge
xor
lahf
les
sbb
sbb
jmp
inc
and
mov
in
stc
mov
lahf
outsl
int3
push
sbb
or
cmp
mov
sti
jle
xchg
popa
out
out
outsl
xchg
inc
test
in
jge
popa
push
or
cmp
jbe
outsb
hlt
sti
fsubs
shl
dec
jp,pn
insb
add
call
xchg
aad
loop
lahf
mov
or
out
lcall
fisttpl
shl
cld
mov
adc
stos
pop
jg
pop
shrb
rcl
lcall
jg
adc
xor
pop
rcr
dec
mov
gs
pushf
lea
aad
sti
jp
jnp
jecxz
adc
inc
lds
push
pop
adc
ljmp
fisttpll
dec
int
sbb
inc
pop
xor
rorb
and
add
cmpsl
push
sti
iret
mov
lock
inc
cmpsl
enter
mov
into
test
xchg
movsb
insb
or
jg
es
xchg
fidivrs
clc
mov
xor
test
aas
repz
sbb
lock
in
jmp
lock
add
out
sbb
aaa
clc
push
std
mov
sbb
test
jg
lds
dec
push
mov
fsubrp
dec
sahf
enter
fcmovb
inc
adc
inc
jg
mov
loopne
test
out
rolb
pop
or
or
fildl
mov
lods
movsb
or
bnd
aas
fiaddl
pushf
imul
jl
outsl
das
or
jno
lret
pop
in
jg
aad
cmp
jmp
mov
pop
lock
popf
jmp
hlt
dec
mov
xlat
inc
incl
mov
jg
mov
sub
addr16
std
pop
mov
sbb
cld
daa
jp
std
adc
cltd
or
mov
ret
cld
stos
jle
nop
cmp
das
incb
lock
pop
pop
div
cld
testl
mov
stc
lahf
loope
jae
jmp
add
mov
sar
mov
add
out
icebp
mov
loope
mov
fdiv
mov
sti
mov
fbstp
jb
adc
das
cmpsb
pop
mov
jge
out
xorb
int
call
xor
decb
mov
mov
mov
and
call
imul
and
mov
cmp
int
add
push
pop
aaa
std
js
dec
enter
inc
sbb
mov
mov
aas
icebp
ret
xor
or
ror
sbb
aaa
inc
pop
lds
ficoms
shrb
mov
pop
push
inc
mov
loope
mov
lahf
jp
dec
cmp
xchg
add
xlat
rcrl
in
xor
cmp
cmp
repz
js
pop
gs
and
sarl
xor
loop
pop
out
jg
jno
ret
cmp
xchg
inc
arpl
out
aas
xor
push
dec
jge
pop
clc
xchg
cmpsb
ljmp
ds
inc
mov
pushl
in
sbb
xchg
imul
add
stos
sub
outsl
jmp
std
mov
daa
jmp
faddl
add
inc
push
jae
push
pop
mov
pop
add
push
imul
pop
stc
push
dec
out
fstpt
mov
enter
xchg
and
add
fsts
xchg
jl
jo
or
add
push
sti
pop
inc
add
or
push
nop
mov
pop
loopne
adc
hlt
outsl
dec
ljmp
cmp
std
sbb
or
lret
lock
and
ja
test
or
jno
jae
mov
mov
push
xchg
lcall
cmpsl
sahf
mov
mov
pushl
arpl
adc
arpl
mov
fmull
cltd
pop
fdivrp
ljmp
adc
push
out
scas
pop
fisttpll
fstl
pop
daa
push
inc
push
jl
hlt
out
imul
inc
dec
leave
and
cs
jo
gs
add
in
arpl
addb
sub
pushf
incl
iret
in
xchg
fwait
loope
cmp
xchg
bound
cmpsl
xchg
push
in
mov
decl
or
adc
testb
fsubs
loopne
fstpt
sbb
ljmp
pop
xchg
out
xchg
inc
jbe
nop
outsl
subl
xchg
fcomps
movsb
pop
call
push
sbbb
cltd
loopne
fistps
scas
xchg
pop
xchg
push
stos
std
mov
xchg
mov
jle
mov
leave
lods
addr16
and
cld
movb
jns
fmul
jg
cmp
sarl
test
cmp
rcll
pop
ljmp
mov
xchg
mov
test
aas
mov
sbb
push
hlt
inc
ljmp
jle
inc
jae
shll
jg
cmovle
mov
ljmp
aad
inc
cmc
mov
outsl
lcall
bound
mov
mov
add
lds
adcb
inc
aam
call
fcoms
jne
mov
cld
pop
dec
fs
bound
cmp
mov
ljmp
jmp
pop
test
scas
lahf
or
stos
cmpsb
icebp
in
mov
dec
dec
pop
jb
xchg
xchg
push
shll
or
test
fsubs
fwait
gs
sub
lock
lcall
add
jp
xchg
add
or
addr16
ljmp
decl
mul
mov
push
jb
inc
ja
out
lods
pop
lcall
mov
push
insl
sub
add
aad
cwtl
jp
and
pop
or
mov
mov
pop
mov
incb
mov
pushl
stos
out
jbe
push
inc
js
movsb
pop
loopne
jge
mov
call
dec
mov
pop
fnsave
loopne
pop
sub
adc
push
jp
and
adc
pushl
sub
pop
mov
jecxz
js
nop
and
scas
shrl
lds
push
in
dec
sahf
inc
mov
fsubl
imul
ret
loopne
gs
ljmp
cmp
sub
pop
xchg
lds
mov
jno
pop
or
sub
and
pop
aam
lcall
sbb
ljmp
jecxz
sub
and
mov
lods
lcall
imul
pop
jle
sub
push
mov
hlt
and
push
aam
dec
and
pop
les
adc
lods
mov
and
decl
lcall
xor
arpl
or
pop
xchg
jg
mov
lret
lcall
fcom
sbb
into
bound
adc
sub
xchg
push
imul
ljmp
aaa
push
or
mov
fcompl
test
xor
cmp
dec
or
jmp
pusha
es
mov
mov
mov
adc
js
mov
jecxz
add
sahf
inc
jno
push
sub
test
push
xchg
mov
cli
cs
fwait
insb
ljmp
xlat
xor
test
incl
xchg
movd
movsl
mov
push
cwtl
jb
in
loop
arpl
gs
icebp
leave
decl
repz
adc
push
sub
je
mulb
cld
and
out
idiv
lcall
push
loopne
push
stc
lds
mov
mov
xchg
pop
xchg
adc
dec
mov
jmp
movsl
mov
inc
mov
adc
out
xlat
sbb
test
inc
mov
out
xchg
cmpsl
pushf
fildll
sbbb
push
dec
out
mov
scas
mov
jl
das
clc
dec
in
in
and
ljmp
xor
jg
inc
sbb
inc
jo
out
mov
scas
popa
mov
fnstcw
ja
repnz
or
pushl
mov
bound
cs
fsubrl
push
pop
jo
in
sysenter
cs
jg
decl
inc
sub
fneni(8087
xor
cmp
scas
hlt
sbb
mov
sbb
call
into
pop
ret
sbb
push
arpl
pop
pop
and
decl
fcomi
add
push
sub
inc
pop
and
mov
xchg
lods
xchg
adc
out
and
push
es
ljmp
mov
xor
push
lcall
cwtl
rol
mov
adc
aaa
iret
jb
lea
dec
sbb
cld
incl
xchg
dec
jo
stos
adcb
lock
fwait
mov
fsub
lds
ret
out
pop
call
icebp
lods
and
mov
inc
neg
cwtl
stc
jmp
or
inc
cmp
xor
and
in
sbb
sbb
js
dec
mov
xchg
inc
jg
stos
sti
sub
inc
mov
in
rorl
clc
dec
ss
jbe
sub
sar
sbb
mov
mov
mov
scas
cmp
dec
push
inc
int
sub
or
call
int3
daa
push
jle
clc
adc
test
js
jmp
push
mov
mov
lahf
hlt
call
fidivs
mov
outsb
sbb
vpunpckldq
ret
xor
mov
push
or
fwait
je
scas
cmpsl
and
mov
sub
hlt
mov
cld
popa
pusha
paddw
aaa
js
adc
jle
xchg
leave
insl
cmc
jnp
mov
add
push
pop
call
jmp
idivl
lds
push
in
in
sti
cmp
pop
or
aam
or
fdiv
mov
cmp
adc
out
inc
mov
lods
xchg
inc
in
xlat
lcall
or
fisubl
aam
fsubr
pop
cmp
movsl
dec
in
insb
pop
jecxz
sbb
mov
and
outsl
dec
adc
mov
inc
push
pusha
fucomi
ret
mov
sahf
jp
dec
stos
pop
mov
out
adc
xchg
addr16
je
imul
shll
lret
idivb
xor
inc
pop
loope
imul
call
cmp
push
stos
bound
dec
xlat
or
xchg
jg
outsb
pop
jl
inc
mov
sub
cmp
jns
sbb
or
xchg
rorb
pop
dec
xchg
push
addr16
mov
push
and
cmp
out
lds
cld
mov
call
imul
dec
mov
outsl
popa
xchg
pop
mov
cmc
add
incl
xchg
mov
ret
xor
or
je
out
div
cwtl
enter
push
in
jno
inc
mov
arpl
push
aad
mov
test
lea
push
cwtl
jle
xchg
test
decl
int3
jbe
lds
push
in
cmp
or
or
les
fninit
sbb
jmp
mov
adc
in
sahf
fmuls
in
sub
dec
add
filds
loope
pushf
imul
push
cld
in
and
stc
sub
test
movsb
jecxz
test
jge
lods
icebp
fwait
incl
push
mov
lea
or
inc
push
lds
cmp
leave
repz
sub
dec
fmul
call
xchg
nop
mov
jbe
push
jnp
inc
mov
int3
mov
add
push
cmp
clc
lcall
inc
pop
push
cs
inc
cwtl
mov
out
lret
and
sbb
mov
fdivrp
mov
out
cmpsb
outsl
pop
mov
or
adc
inc
int3
or
fs
call
jb
adc
mov
adc
je
sbb
dec
das
push
mov
call
lahf
sub
test
push
subl
out
addr16
or
inc
outsb
ficompl
test
jp
pop
cmpsl
int3
mov
faddp
dec
gs
call
out
aam
xchg
pop
lock
and
scas
imull
pushl
add
or
pop
add
and
xchg
stos
aad
jmp
pop
rcrb
loopne
sbbl
out
jl
hlt
adc
jg
ficoms
push
scas
in
jo
cld
pusha
stc
loope
push
pop
or
repnz
in
aam
sahf
cmp
call
iret
les
call
stc
data16
sub
add
lahf
dec
js
decl
enter
xor
xor
imul
int
int3
subb
repz
mov
std
repnz
sbb
and
fstpt
cmp
pop
ljmp
mov
and
jge
fdivr
jmp
xor
or
or
test
sub
icebp
std
cmc
or
push
shlb
ljmp
mov
xlat
repnz
add
cmp
pop
ds
insl
and
loopne
loop
cwtl
out
daa
out
clc
in
insb
cltd
out
call
push
jge
test
repz
in
out
sub
lcall
pusha
pusha
sbb
pop
cli
mov
aad
mov
inc
dec
add
ljmp
ss
jno
ljmp
sub
mov
sub
mov
push
dec
jmp
pushl
lods
mov
and
lcall
or
stos
je
in
inc
stos
aas
or
xlat
jge
stc
scas
push
push
and
ljmp
jne
mov
jle
push
xchg
pushf
xlat
iret
mov
xchg
or
cltd
clc
and
add
push
incl
lahf
jp
ds
js
scas
mov
xchg
pusha
sahf
jge
pop
pushl
push
int
add
mov
mov
sub
movsb
sbb
jge
shlb
push
out
push
das
cli
inc
mov
mov
push
jbe
fstps
dec
cltd
pop
mov
mov
popf
push
fs
xor
out
or
mov
sbb
dec
mov
pushl
jo
lods
das
clc
pusha
jg
es
push
fcmovb
sarb
test
mov
sbb
mov
test
mov
movsb
sahf
iret
jb
adc
pushl
dec
ret
or
sbb
xor
iret
inc
cmp
xchg
popa
and
dec
sar
incl
push
and
fxch
pop
fcomi
mov
out
leave
ret
sbb
imul
cmp
incl
add
pop
idivb
pop
outsl
jge
mov
jle
enter
gs
cmp
and
mov
test
xchg
lods
push
jo
fwait
imul
fcomps
ret
push
jb
or
cmpsl
addb
fwait
pushl
add
push
clc
adc
xchg
or
mov
dec
dec
mov
inc
sar
decl
aam
sbb
cmp
fbld
sbb
popa
and
adc
xor
decl
mov
jmp
jnp
mov
sbbb
xchg
xlat
dec
mov
loopne
pop
and
sub
jp
fwait
jl
shlb
xor
mov
adc
in
arpl
aas
add
shl
jae
iret
out
lcall
loop
call
sbb
mov
mov
push
xlat
out
jle
cld
imul
and
fwait
movsl
stc
lcall
push
cmp
inc
xor
sti
adc
xchg
sub
fcoml
fnstsw
inc
data16
in
loopne
popa
jg
inc
std
cmpsb
push
pop
xchg
lahf
jns
sub
jmp
jbe
jmp
fsubr
out
dec
sbb
jno
cltd
lea
pop
cltd
mov
xlat
imul
jmp
xchg
mov
aas
dec
inc
sub
jbe
fcomp
fisubl
lods
sub
jg
mov
es
mov
je
sbb
out
shlb
pop
fstl
scas
clc
ljmp
add
jg
test
pop
mov
sbb
daa
add
ljmp
sub
sub
lock
imulb
arpl
call
repz
xchg
dec
int
enter
popf
sarl
pushf
push
cmp
in
cmp
ljmp
pusha
push
push
cltd
out
pop
sbb
mov
fiaddl
mov
dec
sub
hlt
into
dec
mov
aaa
std
decl
cmp
test
mov
sub
xor
adc
jns
fdivrs
ja
mov
mov
add
filds
cmp
pop
ss
int
lock
sbb
xchg
adc
jecxz
mov
adc
nop
cmp
int3
sbb
and
inc
cld
incl
cld
out
mov
outsl
add
ss
mov
inc
sub
call
and
cli
mov
inc
lret
cltd
push
push
pop
and
outsl
movsb
cmc
jb
sub
mov
out
push
push
or
cmp
cmp
sbb
lcall
sub
cmpsl
imul
dec
inc
nop
cmp
inc
ja
scas
dec
jmp
loop
xchg
lret
adc
push
and
test
pushf
push
pop
dec
addr16
hlt
incl
and
jp
jae
xor
popf
jo
ret
cld
andl
in
hlt
std
mov
sbb
mov
lret
add
fldenv
xchg
mov
pushl
mov
xor
lods
imul
lods
call
outsl
xchg
jmp
loop
pushf
add
cmpsl
into
in
loope
call
xchg
hlt
xor
xor
pusha
rolb
mov
pop
adc
in
xchg
cltd
iretw
cld
lcall
mov
xor
inc
cmp
jns
int3
into
in
pop
lcall
push
js
mov
mov
jg
iret
cmpsl
cmp
fildl
pushf
je
dec
mov
sub
inc
imul
decl
outsb
pop
repz
jecxz
inc
in
in
sbb
jns
inc
jne
addl
ljmp
in
out
adc
pop
scas
pushf
inc
cmpsb
sub
jg
ljmp
inc
push
pop
test
or
jecxz
cmc
xor
jmp
mov
push
fs
and
cmp
jge
mov
mov
fsubl
mov
mov
stc
js
out
out
and
xor
call
or
enter
dec
ret
lods
sar
cwtl
jecxz
pop
cmp
mov
pop
lret
daa
sahf
fwait
movsb
jmp
scas
xchg
outsb
fistl
in
outsb
xchg
bound
icebp
mov
inc
xorl
cmc
push
pop
cmp
sub
dec
pop
push
outsl
xor
jg
pop
testb
lahf
or
pop
cmp
sub
test
sub
ljmp
std
mov
aad
add
jne
in
adc
popf
mov
and
fsubs
pop
loopne
xchg
sbb
test
mov
xorb
lahf
mov
cmp
shl
cld
or
sub
or
subb
jae
mov
push
pusha
daa
jecxz
xor
clc
pop
adcb
mov
add
fildll
dec
push
sub
in
cli
push
jbe
test
dec
or
stos
xchg
cs
jmp
call
pop
pop
aas
arpl
push
je
scas
out
lods
or
dec
push
cli
stos
mov
push
sub
xor
lret
xlat
pop
push
mov
xrelease
mov
jmp
mov
add
int3
push
mov
dec
pop
cmp
in
mov
decl
dec
jl
test
jae
sbb
aas
push
fstpl
mov
jbe
shr
xorb
rcrl
xor
call
loopne
jecxz
adc
stos
and
das
jg
fcom
jp,pn
inc
xchg
sub
call
fstpt
ret
xchg
fcmovne
repnz
jnp
add
aas
stc
lock
lahf
xor
inc
out
lods
je
insb
mov
imul
cmpsl
jb
rol
adc
ljmp
cli
pushl
into
xlat
sbb
imul
loope
neg
mov
icebp
inc
push
cli
das
push
mov
movsl
xor
dec
xor
call
cmpsb
in
push
push
push
loopne
int3
sbb
stc
mov
incl
pop
pop
inc
dec
leave
cmpsl
aas
xor
cmp
jb
add
cmp
sub
jmp
dec
in
subl
fnsave
in
inc
mov
or
xor
push
pushl
rcr
das
test
pop
push
inc
mov
pop
inc
insb
pop
jb
pusha
mov
push
dec
cmp
lcall
dec
mov
xchg
push
jo
shlb
insl
sub
mov
or
sar
push
dec
cmpb
or
lods
fisttps
or
loopne
mov
pop
jns
cmpsb
aaa
jg
call
mov
imul
xor
adc
adc
lods
insl
push
jl
pop
mov
or
dec
mov
inc
dec
ret
inc
pop
lahf
lock
movsb
or
movsl
call
call
mov
mov
jnp
out
ds
mov
test
movsl
mov
arpl
decl
ljmp
xor
pushf
cltd
mov
jg
adc
jno
mov
call
lock
jns
add
jl
sub
and
aas
and
int
lcall
das
cli
dec
fdivl
pop
mov
mov
push
inc
cmc
rolb
cmp
imul
decl
decl
ja
shl
jmp
adc
test
fcmovnbe
pop
jl
fstpl
lcall
or
sti
xchg
rcrb
push
je
dec
mov
ljmp
jl
mov
stos
and
out
clc
clc
jmp
mov
test
enter
adc
insl
mov
aam
jge
iret
or
hlt
incl
xchg
mov
fcoml
sbbl
sub
fmuls
mov
pop
sub
ja
push
lcall
mov
mov
out
mov
cmp
repnz
and
cmpsb
fidivs
push
xchg
mov
xor
rcrb
dec
subl
sub
mov
inc
push
inc
push
sub
fsub
ror
repz
lods
cmpl
pop
aam
or
cmc
lcall
dec
es
jae
test
mov
mov
fisubs
sar
jge
xchg
mov
es
xchg
pusha
insb
xchg
jge
mov
in
js
jl
insb
adc
out
adc
push
push
pop
fs
hlt
pop
sti
out
xchg
sbb
lcall
xchg
or
xor
xorl
sub
pop
and
pop
jp
jmp
xor
xchg
rol
xor
xor
adc
or
push
insb
bound
inc
cwtl
lcall
cmp
fstpt
clc
je
inc
cmp
xchg
add
sbb
ret
ja
decl
imul
push
mov
enter
sub
jp
int
arpl
and
dec
fs
das
jmp
cld
in
in
and
std
ret
mov
dec
sbb
sub
dec
das
clc
mov
lret
dec
lahf
pop
lret
movsl
or
xchg
mov
or
dec
inc
or
ljmp
xchg
sbb
into
xchg
dec
mov
dec
mov
cs
lods
pop
jae
inc
xor
repz
pop
push
sbb
ss
jae
adc
rorb
jbe
mov
shlb
ljmp
mov
adc
jl
dec
adc
ss
or
ljmp
add
jns
clc
cwtl
push
cmpb
adc
scas
call
pushf
out
in
rcr
pop
mov
test
ljmp
mov
lock
loope
jbe
ret
shll
test
pop
fxch
ljmp
mov
sbb
jnp
or
lret
xchg
lahf
jo
mov
out
subl
aam
lock
shrl
js
and
repnz
mov
jmp
mov
test
cmp
xor
out
pop
jns
jle
pop
xchg
das
clc
jnp
xchg
pusha
adc
cmp
inc
shrl
sbb
sub
inc
out
sub
xor
call
push
mov
pop
jecxz
outsb
sbb
pop
aaa
mov
decb
cmp
cld
incl
mul
push
imul
inc
cwtl
rorb
xchg
inc
jno
dec
decl
push
mov
mov
mov
lods
scas
sar
jmp
cmp
fdivs
pop
out
cltd
iret
call
imul
je
mov
iret
loopne
decl
adc
bound
fdivl
mov
cltd
mov
mov
idiv
decl
push
sub
jle
movsb
cmp
into
imul
in
jns
xor
insl
mov
outsl
aaa
std
jmp
mov
mov
cmpb
cmp
sub
out
inc
pushf
scas
pop
and
pusha
imul
mov
std
dec
leave
outsb
pop
in
xchg
jecxz
sarb
jns
sub
sbb
out
lret
iret
pop
and
loop
mov
arpl
les
add
jmp
cmpb
xchg
insl
sbb
fsubrl
push
push
andl
addr16
inc
and
rolb
pop
das
sbbb
or
cmp
lods
fwait
sub
sub
push
mov
imul
pusha
jnp
lcall
jp
pop
iret
fldln2
inc
arpl
pop
std
dec
jl
xlat
and
dec
add
jns
adc
fimuls
push
xor
push
cmpsl
sbb
dec
or
jg
fld1
jo
pop
mov
out
in
or
mov
loope
cmpsl
mov
cmp
push
test
sub
cltd
xchg
mov
dec
xchg
cli
fistps
jecxz
imul
adc
scas
push
cs
dec
cmp
jge
inc
mov
add
dec
mov
mov
test
lret
dec
filds
sbb
pop
sub
scas
xchg
ret
addl
mov
and
fidivrs
dec
jge
push
sbb
cltd
insb
mov
into
jbe
daa
push
ss
sub
lods
pop
cs
lods
xor
cli
lcall
dec
sub
movsl
pop
push
inc
adc
mov
call
fcomps
push
xor
imulb
les
jmp
push
lret
outsb
mov
lock
test
xor
mov
sbb
cltd
mov
pop
sbb
mov
dec
cmpsl
mov
lcall
xchg
jae
mov
cld
icebp
jo
fimull
mov
sub
mov
movsl
jp
pop
das
das
or
decl
inc
test
jmp
sbb
scas
pop
pop
pop
sbb
es
push
cld
pushl
int3
popf
push
cmp
lock
and
fidivrl
stos
xchg
and
or
incl
cld
ja
scas
push
push
insb
repnz
or
ret
adc
lret
ljmp
push
test
xchg
inc
push
inc
scas
xchg
pop
outsl
cli
ljmp
mov
ret
xchg
pop
daa
fidivl
cli
xchg
xor
push
stc
mov
mov
xchg
push
push
lret
add
jp
xchg
jl
lret
fs
mov
loopne
in
push
xor
dec
xor
enter
pop
movsl
cmp
mov
jmp
pop
xchg
jno
mov
mov
or
adc
stos
dec
sub
aaa
mov
popl
add
dec
and
lcall
cltd
adc
insl
jno
mov
mov
pop
push
ljmp
or
pop
push
fcoml
inc
jle
out
push
adcl
lods
fildll
xor
lret
jo
cmp
aaa
inc
out
ret
lret
or
push
and
xor
mov
inc
rcrl
add
out
xchg
shrl
aam
mov
test
mov
testl
mov
incl
push
js
test
pop
add
cmpsl
les
add
ficoml
sbb
into
mov
lods
call
jnp
jle
cmpsl
adc
out
iret
adc
aad
jo
and
sub
mov
je
jle
mov
jo
pop
inc
mull
push
stos
and
inc
subl
shl
mov
shll
push
sub
jg
popf
xor
mov
mov
mov
or
int3
inc
aam
std
dec
pop
out
arpl
enter
pop
jge
aas
jns
xchg
aaa
shrb
cltd
fidivl
pop
jno
inc
out
js
and
in
out
scas
shl
xchg
enter
xchg
ds
cmp
jmp
mov
sub
enter
fnstenv
jle
or
popf
jmp
call
push
inc
arpl
or
sub
sub
jnp
fcoms
xchg
jno
je
hlt
lret
fwait
jl
pop
or
mov
outsl
dec
mov
in
add
and
pushl
stc
sbb
movsb
insl
outsl
jb
lcall
cmp
jmp
ja
jle
and
xchg
add
incl
ss
pop
xor
inc
and
add
push
clc
orb
and
ds
add
or
jecxz
ret
xor
sti
and
push
and
mov
cs
std
xor
mov
incl
sub
orl
inc
adcl
lock
cmp
cmp
gs
into
mov
jo
popa
fists
test
cmp
jno
sbb
loopne
cli
incl
mov
mov
jge
xor
fs
stos
push
xor
mov
incl
in
fstp
or
pop
ljmp
jnp
rcll
add
mov
cmp
cwtl
mov
adc
mov
jmp
pop
xchg
push
sub
pushl
lea
jecxz
mov
scas
lahf
call
jne
jp
jmp
mov
nop
sub
mov
popa
xchg
xchg
popf
loope
pop
shll
mov
pop
push
rcl
out
push
add
dec
sub
xor
incl
in
adc
mov
cmc
shll
and
int3
pop
jb
insb
incl
xchg
pop
cmp
pop
xchg
mov
lahf
loope
push
cld
adc
mov
xchg
jmp
dec
sub
pushf
mov
jp
mov
mov
ds
stos
repz
call
sbb
jp
es
add
or
mov
std
pop
leave
lods
incl
sub
daa
je
jmp
lods
shll
shll
mov
inc
cmpsl
jecxz
jge
divb
dec
shrb
jo
mov
bound
jns
mov
xor
jmp
std
inc
iret
push
fnsave
inc
roll
xorb
fldlg2
pop
hlt
mov
push
clc
lcall
outsl
mov
test
push
fwait
repnz
jg
push
insb
jl
push
call
mov
ror
out
mov
je
mov
jp
jb
xchg
cmp
stc
lods
and
mov
pop
cmp
sbb
popa
lea
push
and
fisubrs
rorb
cltd
jg
call
ret
and
push
jne
dec
int
sahf
aas
jno,pn
jb
cltd
iret
mov
imul
mov
and
outsb
popa
jp
out
out
stc
jnp
out
pop
adc
pop
out
adc
dec
sar
lcall
push
dec
add
jbe
xchg
cli
fisubrs
or
ss
cmp
fcomip
cld
ljmp
mov
and
jle
add
movsl
push
decb
in
loop
pop
lock
stc
pop
or
out
jno
mov
fsts
scas
mov
iret
lock
push
cld
ljmp
rorb
jbe
loopne
insl
push
loopne
and
mov
test
mov
mov
and
xor
sub
outsb
adc
jp
dec
and
or
jg
mov
push
mov
leave
stc
push
adc
pop
push
sub
add
adc
clc
int
cld
rep
aaa
adc
stos
jae
cmpsl
cmp
in
jmp
mov
in
adc
inc
ja
add
int
cmpsl
cmp
jo
xchg
fwait
jecxz
cli
in
mov
cmp
adc
or
stos
push
jl
ficoms
mov
push
mov
lret
incl
addr16
mov
and
scas
and
and
cmp
sbb
jp
jecxz
stos
sarl
iret
rolb
ljmp
in
push
leave
pushl
loope
push
mov
add
jae
into
lret
insl
arpl
clc
cmp
decl
cmp
icebp
dec
mov
push
push
das
push
repnz
cmc
ret
imul
out
lcall
pop
and
jne
cmp
mov
and
jp
xor
out
xor
pushl
call
jle
cltd
test
cld
fs
loope
dec
sub
in
jecxz
call
fiadds
adc
sbb
sbb
jle
cmp
loopne
jg
frstor
push
mov
incl
push
pusha
or
mov
add
fdivrl
stos
inc
mov
clc
fs
jge
out
and
mov
sbb
xor
ljmp
in
lret
dec
dec
sbb
stos
mov
pop
dec
cmpb
fisttpl
stos
lcall
and
sahf
lcall
xor
sub
sbb
andb
jmp
lea
inc
dec
insl
shrl
and
jle
xchg
sbb
and
jp
xchg
mov
incl
adc
rolb
mov
imul
dec
xlat
add
imul
dec
mov
lods
pop
jno
inc
mull
and
lods
push
xor
inc
xlat
cmp
add
adc
adc
imul
dec
imul
popa
pop
xlat
call
cmc
cmp
repnz
fdivr
jp
ficoms
scas
iret
cmp
and
xchg
jmp
push
sbb
test
les
pop
cs
and
mov
push
jns
fcom
scas
sbb
call
std
add
and
loopne
pop
test
js
pusha
sub
clc
cwtl
inc
xor
jmp
jno
leave
adc
ss
xchg
inc
mov
scas
jb
and
imul
inc
icebp
inc
jae
add
push
sub
incl
fcmovnbe
cs
aam
or
cmp
div
xchg
mov
sub
ret
jmp
fstpt
in
pop
add
push
xchg
jae
xchg
test
lods
ljmp
cmp
out
mov
ret
add
mov
cmp
scas
cld
insl
dec
mov
ljmp
inc
lret
daa
and
stos
sbb
aam
sub
cmp
clc
cmp
test
push
dec
call
fmuls
ljmp
add
les
jo
mov
sbb
pop
cmc
jmp
sbb
jb
cmp
pusha
xlat
outsb
inc
idivl
mov
ljmp
aad
les
xchg
cld
fdivr
js,pn
push
ja
xor
outsl
cmc
and
or
fildll
pop
lods
sub
fs
cmp
enter
cmp
int
mov
mov
push
rorl
mov
loope,pt
sub
or
cmp
jle
imul
nop
xor
jmp
xchg
inc
cmpsl
xchg
sarb
dec
xor
addb
nop
fnstsw
fidivs
ds
sub
cmpb
shll
pushf
repz
out
scas
in
sahf
mov
lahf
or
mov
sahf
clc
pusha
push
in
sub
lcall
sub
or
or
sub
push
cli
lcall
cwtl
je
sbb
ljmp
cwtl
and
in
dec
add
in
xchg
adc
cmp
push
pop
dec
incl
xor
jno
push
mov
mov
sub
lock
jno
ds
jl
insb
push
xor
jb,pt
xor
stos
sbb
jae
dec
cld
cmc
inc
xchg
imul
jmp
lea
stos
mov
dec
loopne
iret
add
xchg
test
incl
inc
push
pusha
in
pop
mov
dec
in
rcll
jmp
stos
sub
ljmp
imul
fidivl
ds
gs
xor
or
push
mov
add
loop
or
into
andb
sub
insb
es
pop
ja
inc
lods
pushl
int
xchg
mov
cmovns
pop
or
pop
outsl
fucom
dec
or
jbe
jmp
lahf
mov
inc
push
or
out
inc
ret
out
add
xlat
xchg
call
push
push
push
cli
sbb
lods
cltd
sahf
jecxz
mov
push
popf
aaa
dec
idiv
incl
lds
inc
push
xlat
jg
rcll
push
pop
in
push
push
mov
mov
cmp
xchg
jno
sub
push
sub
mov
mov
decl
stc
lods
mul
jmp
mov
into
push
bound
sbb
lods
out
movsl
dec
shlb
dec
decl
fistps
out
sbb
bound
test
fcmovnbe
lcall
movsb
cmp
incl
arpl
xchg
jbe
lods
cmp
pop
addr16
mov
bound
mov
lock
decl
sbb
iret
int
push
pushf
out
sahf
imul
and
xor
lds
jmp
fisubrs
or
pop
or
mov
insb
stos
out
mov
ljmp
imul
test
push
or
mov
je
mov
decl
mov
xchg
out
cmp
popf
or
add
push
jle
cld
movsl
les
jae
adc
cmp
sub
lds
xor
xor
mov
nop
add
cli
push
lock
inc
xor
adc
in
imul
xchg
sar
decb
mov
dec
jge
verw
fbstp
pop
mov
subl
ljmp
inc
pop
xor
lea
ljmp
stos
push
ljmp
stos
xchg
hlt
xor
je
push
sbb
adc
jbe
and
pushf
stc
loop
stos
lcall
adc
xlat
nop
ret
andb
loop
mov
sahf
xlat
enter
dec
ljmp
clc
add
int3
xchg
fnstsw
movsl
cmc
and
ja
mov
adc
scas
jae
mov
jmp
decl
loope
mov
cld
cld
lahf
or
mov
bound
or
cmp
out
cli
jmp
mov
sti
pop
push
popf
mov
mov
mov
imul
loop
jl
mov
push
mov
fs
mov
pushf
adc
adc
jg
lcall
dec
fsub
jge
mov
sbb
or
int3
mov
cmc
daa
sub
mov
pop
fstpt
shll
mov
in
pop
inc
out
fwait
push
stos
jmp
fmuls
push
into
lods
pop
rcr
gs
mov
and
pushl
enter
aaa
xor
add
push
push
pop
inc
addr16
xchg
sub
mov
in
mov
leave
into
or
cli
and
jg
or
call
scas
iret
scas
inc
icebp
pop
push
xchg
push
mov
push
icebp
enter
mov
les
fiaddl
or
dec
mov
push
xlat
outsl
or
push
mov
stos
pushf
mov
idiv
mov
dec
cli
xchg
sub
add
cltd
add
andb
arpl
and
mov
jecxz
push
cmp
cmp
dec
sbb
in
sti
xchg
cmp
je
sub
or
inc
sbb
mov
gs
mov
sub
mov
jl
incl
sbb
jb
pushf
add
ds
icebp
scas
daa
clc
aas
fcomip
jmp
mov
ljmp
daa
movsb
cmp
xchg
ret
sbb
ja
mov
loope
jecxz
out
mov
clc
lcall
cltd
loopne
lret
cltd
imul
inc
test
ja
icebp
push
fs
call
pop
jb
hlt
ja
xor
mov
mov
stos
sbb
insb
fisubrs
and
mov
dec
adc
cmp
and
push
mov
int
add
sub
pushl
dec
xchg
repnz
lods
aad
push
or
or
xor
push
push
and
ljmp
ror
sub
filds
jmp
push
mov
nop
xor
inc
sub
ficomps
jmp
dec
lret
xorl
mov
push
shr
mov
bound
mov
pop
sub
sub
dec
xor
aaa
imul
cmp
movsl
dec
sub
xchg
jle
insb
push
int
adc
rcll
mov
data16
mov
jno
mov
adc
cmc
dec
pushaw
or
cmp
pop
xor
mov
xor
in
cmc
addr16
xchg
mov
pusha
push
xchg
data16
cmpsl
cmp
sahf
adc
inc
xor
out
pushl
jmp
mov
gs
ljmp
adc
stc
or
cli
fimuls
push
xchg
dec
idivl
xlat
jo
sbb
mov
ljmp
pop
jg
jg
sbb
mov
jp
dec
mov
loop
ret
push
fs
pushf
or
xchg
push
sub
and
sub
shrb
daa
or
mov
sub
lcall
cs
dec
in
clc
jnp
jb
mov
cmp
push
push
subl
repz
push
jmp
or
decl
add
push
mov
mov
dec
mov
or
and
push
inc
sub
ret
ljmp
jl
stc
icebp
hlt
inc
mov
xor
ss
ret
inc
adc
lret
ds
enter
decl
jmp
mov
inc
call
std
or
push
ljmp
xor
dec
mov
push
or
mov
adc
jnp
ljmp
and
clc
addr16
mov
jne
call
xchg
sahf
pushl
jne
dec
rcr
je
cld
je
adc
sahf
int3
imul
aaa
cmp
inc
leave
mov
and
loope
jo
shr
pop
pop
mov
cwtl
push
dec
sbb
add
push
jmp
pusha
mov
shl
lahf
adc
cmc
sub
shlb
cld
mov
add
and
xor
decl
jp
dec
in
jg
sti
push
popf
jg
loopne
pop
in
mov
int3
jge
dec
dec
push
ds
dec
cmpsb
js
rcrl
lcall
orb
testb
mov
sub
dec
mov
test
mov
and
sbb
cmp
dec
lahf
mov
lea
jmp
daa
into
mov
adc
adc
or
sub
sub
movsb
cmp
fwait
nop
mov
ds
sub
js
xchg
sub
lahf
jns
rcl
and
mov
aad
gs
pusha
mov
out
jg
cs
adc
ljmp
cmp
insl
push
and
adc
and
repz
jmp
js
pusha
or
fidivs
test
ljmp
sti
adcl
testb
fdivrl
xlat
out
les
fs
bound
je
jecxz
jecxz
cmp
pop
jae
mov
cmc
adc
pusha
scas
je
movsb
sub
push
pushl
and
pop
fnstcw
push
mov
pop
testl
jecxz
movsb
pop
sarb
mov
out
mov
sbb
mov
mov
jmp
das
pop
dec
inc
dec
ja
sahf
das
jbe
pushf
std
mov
pop
hlt
jmp
adc
xor
push
pop
mov
inc
mov
ja
mov
lcall
fiaddl
mov
enter
push
cmp
xor
pop
jmp
xacquire
mov
jns
clc
sti
sbb
lock
stos
popa
fists
push
fimull
vmread
das
pushl
xchg
aaa
jb
cmc
and
and
cmpsl
shrb
imul
es
jb
idiv
incl
inc
daa
test
in
mov
lea
cltd
inc
pop
fmull
aaa
jbe
lcall
and
pop
xchg
xchg
add
call
xlat
adc
mov
sbb
lcall
jo
xchg
push
push
mov
outsb
jmp
xor
sbb
pop
test
xor
out
cli
fwait
js
sub
shlb
push
push
jle
sarb
lods
decl
lock
jmp
jne
cmpsl
inc
mov
fst
add
mov
imul
mov
int3
int
fisubrl
cmp
mov
cmpxchg
rorb
fcomip
add
cmp
and
popa
add
bound
or
dec
pop
mov
stos
idivl
cli
pushl
insl
mov
or
inc
push
push
cmp
jmp
lahf
mov
movsl
out
loope
in
inc
xchg
xor
or
cmpsb
lcall
lds
movsb
mov
sbb
outsb
cltd
and
call
bnd
cmp
mov
dec
or
xchg
inc
and
cltd
imul
fistpl
lcall
lods
movsb
xchg
sti
repz
cs
jbe
movb
js
xor
mov
call
shl
loopne
jns
test
mov
pop
xorl
decl
cmp
icebp
lahf
mov
sub
rorb
sbb
sti
sub
jg
xor
ljmp
sub
pop
sahf
adc
push
mov
add
fistl
testb
add
inc
jl
fisttps
je
loopw
pop
mov
add
test
xor
loop
jl
jg
repnz
icebp
xchg
imul
inc
xor
cmc
divl
repz
add
loopne
fdivrp
pop
std
call
pop
add
jle
adc
and
sti
dec
jne
les
loop
gs
mov
test
nop
pop
jp
dec
inc
test
cmp
cwtl
or
xchg
pushl
mov
cmpsb
test
lcall
je
std
icebp
sbb
out
inc
adc
fadd
les
jl
jno
mov
xchg
xor
inc
pop
decl
outsb
pop
xchg
stc
mov
push
sub
aad
pushf
idivb
enter
adc
negb
jmp
iret
fldcw
bound
pusha
cwtl
xchg
rcrb
dec
xor
and
bound
mov
push
sub
mov
xor
mov
call
dec
push
mov
dec
inc
sbb
jns
add
call
fwait
jbe
movsb
dec
jmp
pushl
adcl
stos
aas
push
and
scas
testl
inc
add
jle
es
pushl
out
pop
add
xlat
mov
or
push
push
nop
mov
mov
decl
repnz
out
test
idivb
mov
inc
jg
add
arpl
enter
scas
push
cld
jg
xor
outsl
leave
pop
and
push
mov
and
mov
stc
mov
outsb
loope
jg
std
shlb
stos
adc
pop
insb
add
mov
cmc
int3
ljmp
mov
push
inc
lds
decl
stos
xor
fcoml
fstps
enter
ljmp
mov
inc
into
pop
bound
mov
push
repnz
sub
pop
lret
cli
decl
jmp
cmpsl
xchg
cmpb
adc
in
jmp
out
mov
out
jnp
jnp
stos
adc
mov
dec
mov
or
mov
pushl
jno
cwtl
cmp
out
sub
pop
mov
out
push
pop
inc
xor
xor
jmp
shll
pop
clc
out
pop
push
loop
and
cwtl
arpl
dec
pop
adc
pusha
add
hsubps
cmp
push
int3
inc
shl
dec
mov
fiaddl
repz
mov
pop
mov
mov
xor
jmp
rclb
or
inc
xchg
stos
cmpsl
lret
mov
xchg
int3
loop
dec
les
dec
inc
ja
pushl
xor
dec
fucom
in
xchg
adc
cld
cmp
sbb
loop
pop
or
xchg
lcall
fwait
dec
inc
mov
xor
xorl
push
mov
popa
test
rcll
lock
push
xor
jg
push
cli
mov
lods
sub
mov
decl
cmp
push
or
repz
lods
sahf
push
fdivl
sahf
data16
adc
xlat
push
xor
test
pushl
test
pop
mov
addr16
cmpsb
mov
adc
fdivrp
mov
mov
out
loop
xchg
rcrb
imul
jbe
adc
dec
push
lds
decl
in
bound
movsb
push
scas
push
adc
idiv
pushl
dec
adc
push
jae
jbe
adc
push
mov
nop
adc
out
xchg
pushl
sbb
lahf
or
xor
xor
or
sub
pusha
lcall
pop
ja
jg
cld
divb
ljmp
fucom
lds
ljmp
test
mov
fiaddl
cmpsb
lahf
push
sbb
incl
fstl
or
mov
push
clc
mov
outsl
clc
mov
pop
sahf
push
cwtl
xor
fwait
sbb
jecxz
jae
clc
mov
or
mov
lods
adcb
and
inc
sub
jo
xchg
lods
fcomip
jno
lea
in
pop
or
fdivrs
ffree
loop
adc
sbb
in
decl
sub
mov
cmp
fwait
push
es
sbb
outsl
hlt
add
inc
cmp
dec
lods
pop
lods
imul
pop
adc
adc
push
cmp
sbb
pop
or
mov
rorb
ret
inc
ficomps
gs
dec
add
mov
mov
icebp
mov
add
mov
stc
mov
pop
mov
cmp
mov
incl
mov
js
push
dec
ljmp
mov
les
xor
or
lods
insb
dec
cmp
inc
cwtl
sbb
cmpsl
mov
add
jmp
lahf
push
inc
sbb
pop
xchg
xchg
test
je
cmp
sbb
mov
decl
lock
and
xor
pop
push
xor
xor
lods
ljmp
sar
fsub
sub
cmc
movsb
xchg
cmpsb
jno
cmp
mov
rclb
jg
mov
adc
loopne
and
out
ret
dec
cltd
add
lcall
loopne
fsubrl
xor
pop
in
xchg
adc
mov
roll
pop
ja
mov
jge
pop
stc
lods
jg
decl
add
cmp
loop
shl
adc
daa
xor
call
cmp
lcall
jle
aam
dec
ss
int
shlb
lds
in
movsb
mov
sub
lock
sbb
imul
xchg
ds
push
ljmp
shll
out
in
loopne
movsb
mov
in
cmp
ja
ss
ficoml
pop
out
pop
push
loope
inc
push
and
dec
xor
jg
mov
fsubr
cli
test
daa
andl
bound
cli
lcall
icebp
aas
cli
xchg
sub
add
mov
push
pushf
cmp
push
pop
call
movsb
push
mov
dec
lret
mov
xor
cltd
lods
in
cmp
stos
pop
mov
add
aaa
add
inc
call
jg
push
sbb
ljmp
aad
jo
sub
adc
sahf
push
fists
sbb
stos
xor
lcall
push
leave
out
mov
inc
xchg
jmp
lret
gs
je
sbb
add
lock
lds
imul
test
cs
push
add
ljmp
addr16
imul
xchg
clc
scas
mov
cmpl
lock
cmp
je
sub
test
xchg
dec
testl
cmc
stos
mov
and
bound
fptan
push
call
verr
nop
xlat
xchg
pushl
inc
add
stos
push
jg
lret
and
adc
jne
popa
popf
mov
fcomip
jmp
test
mov
cmpsb
test
mov
push
jecxz
popf
push
iret
cmp
inc
push
pop
cld
mov
xchg
fisubrs
ret
mov
lcall
sub
scas
lock
pushl
fildl
mov
andl
sbb
mov
std
jmp
and
xchg
pop
imul
xchg
mov
loope
int3
nop
popa
call
jb
ret
pop
dec
in
xor
imul
clc
leave
ficomps
inc
lods
fsubl
rorl
and
dec
cmp
movsl
callw
mov
cmpsb
or
push
gs
ret
inc
call
dec
add
lret
pop
mov
and
leave
jge
lock
pushl
jbe
inc
push
mov
fwait
leave
or
adc
dec
outsb
fsubs
out
cmp
jb
loope
pop
test
push
lcall
inc
leave
jnp
fiadds
ret
jmp
or
dec
out
pop
sbb
inc
mov
adc
psubusw
fdivl
jne
loope
fisttps
jmp
popf
ret
adc
jnp
add
pop
insb
push
pushf
and
jmp
or
xchg
fsubr
fdivrp
jmp
pop
mov
xor
pop
add
in
adc
fwait
sub
sahf
adc
shlb
in
call
lods
pushf
ja
insl
sbb
jae
push
aaa
and
std
mov
movl
pop
iret
push
in
ljmp
mov
mov
xchg
push
outsb
lods
lcall
sbb
and
cmp
push
repnz
pushl
push
test
sahf
xor
nop
mov
or
xor
pushf
dec
sub
hlt
pushl
iret
pop
ljmp
pop
mov
repnz
mov
pop
test
pop
pushl
jmp
sbb
rorb
xor
out
daa
and
dec
hlt
aas
mov
shr
lea
sub
repnz
jns
fwait
or
mov
adc
sbb
lods
sub
dec
xchg
bound
adc
imul
mov
jmp
xor
insb
inc
mov
fwait
cmp
ljmp
sub
jmp
sub
inc
push
mov
push
mov
add
mov
sub
jecxz
pop
incl
push
xchg
push
inc
inc
es
ds
fists
fbstp
rcr
ss
fists
daa
pop
test
inc
popf
std
push
pushl
lret
bound
push
cmpsb
fwait
mov
ss
cmc
and
pop
out
mov
jmp
sbbb
pop
aaa
pop
in
or
or
push
adcb
inc
shrl
fisttps
push
jg
addl
scas
aad
in
lea
decb
push
stos
push
sarb
enter
jns
mov
mov
jne
inc
movsb
imul
psubsw
jb
add
mov
scas
popa
outsb
mov
rorb
rclb
rcll
and
clc
mull
ja
xchg
push
fwait
lock
pop
loope
or
lea
incl
into
xchg
xchg
jo
xchg
or
popf
and
or
adc
push
or
sbb
lcall
dec
andb
popa
loop
dec
jge
aam
les
cmp
cltd
push
ret
jae
add
cli
mov
mov
push
nop
ljmp
inc
loope
lds
sub
cltd
repz
cmc
fnsave
loopne
sahf
incl
shr
mov
adc
xchg
inc
pop
mulps
cmpsb
pop
pushf
pop
dec
adc
mov
xchg
frstor
and
push
fwait
mov
mov
add
fidivs
ret
inc
sub
sbb
sub
ret
lahf
fisubrs
jno
call
pop
daa
inc
cmp
fisttpll
test
mov
orb
add
js
push
add
adc
sbb
stc
daa
pop
imul
incl
inc
sbb
scas
xchg
and
cmp
mov
test
aas
or
dec
push
jae
jo
call
mov
mov
lret
loopne
mov
mov
rcrb
std
jnp
incl
push
ss
das
add
jb
xor
sahf
jne
push
lea
ja
call
sbb
mov
loopne
pop
or
jno
jcxz
outsl
movsb
push
inc
dec
call
bound
test
jl
lock
pop
jo
mulb
std
or
pop
xchg
loop
ss
xor
sbb
xchg
mov
jne
in
push
sbb
push
popf
jmp
clc
mov
or
aad
fstl
shl
repnz
sbb
mov
xchg
adc
cmpsl
pusha
mov
mov
int
and
dec
dec
add
incl
ljmp
pop
popf
inc
daa
adc
mov
lcall
add
or
sahf
push
cmpsl
push
int
out
adc
cld
cmp
in
sub
inc
hlt
jl
push
mov
cld
mov
arpl
ljmp
push
mov
push
sbb
incl
in
rorb
lea
sbb
sahf
iret
dec
enter
pushl
mov
idivb
cmp
test
mov
das
imul
sub
cmp
pop
mov
pop
or
subb
jo
mov
jo
out
mov
dec
mov
mov
jo
lods
outsl
rcrb
or
mov
dec
push
push
outsl
aam
jnp
pop
loop
decl
popf
xchg
add
pop
dec
adc
cmpb
lret
pop
dec
dec
mov
ss
cmp
xchg
aaa
repz
xor
inc
sti
in
xchg
add
test
xor
movsb
xor
imul
movsl
or
pushl
cld
cmp
xchg
jle
push
ljmp
dec
lret
mov
popf
pop
inc
ss
clc
loop
cmc
xor
fs
jle
xchg
xchg
addr16
pop
sub
lahf
lods
icebp
or
clc
push
cmp
jae
and
mov
fdivp
push
adc
push
xor
jae
push
ljmp
popa
and
and
jp
push
iret
das
add
mov
jmp
and
and
push
aad
loop
xchg
sbb
negb
pop
inc
push
dec
jecxz
pusha
mov
pushl
dec
into
insl
imul
xor
fldenv
jo
and
incl
cmp
mov
adc
sbb
shlb
lods
fucomi
cmp
push
insl
adc
incl
enter
add
mov
aaa
in
subl
ss
cmpb
call
les
ja
iret
adc
sub
dec
leave
sbb
jmp
loop
sub
and
out
ret
pop
fdivr
xchg
mov
das
loope
cmp
dec
push
test
std
sub
in
rep
arpl
stc
dec
add
mov
lcall
pop
negb
mov
and
and
mov
pop
jge
loopne
push
jl
sub
std
sub
push
mov
out
mov
mov
fs
push
and
or
fdivrs
jecxz
dec
pushf
adc
lods
adc
inc
adc
decl
dec
xor
jno
sbb
sbb
pop
jge
cmpsl
jle
push
mov
push
push
loopne
popf
push
out
xor
lret
in
out
mov
lcall
insb
xchg
ljmp
ljmp
or
pop
mov
cmp
pop
push
lods
mov
dec
cmp
jmp
sub
leave
cmc
fimuls
aaa
push
mov
mov
pop
ja
adc
mov
add
call
pop
cwtl
mov
pop
shrl
sub
and
jns
jns,pt
push
das
xchg
cld
push
test
imul
pop
xchg
icebp
int
push
jecxz
adc
test
addr16
leave
cltd
xor
in
popa
cld
mov
jge
jg
ljmp
mov
jl
jbe
lret
fcomi
mov
push
lods
call
push
repnz
addr16
int3
call
inc
or
xchg
lock
movsb
pop
mov
mov
call
mov
lds
mov
pusha
pop
and
add
jp
call
mov
pop
stos
dec
push
std
in
test
fwait
stos
cmp
movsb
loop
pop
bound
sub
fiaddl
outsl
clc
pop
icebp
hlt
pushl
ljmp
mov
mov
push
andb
fwait
adc
daa
repnz
inc
pop
xchg
enter
movsb
aas
pop
sub
dec
int
and
adc
jp
cmp
add
sub
sub
lcall
or
call
cmp
xchg
mov
loop
mov
int
mov
pusha
aaa
cld
mov
scas
pop
xchg
test
jbe
fdivl
adc
lcall
jg
push
pop
out
jo
mov
imul
cmpsl
addr16
sbb
xor
jle
add
rolb
aas
ficomps
dec
jno
add
jae
decl
push
es
pop
cwtl
pop
and
or
and
cmp
jne
jmp
mov
jmp
imul
es
test
js
aad
sub
sbb
dec
es
fistpll
nop
pop
es
mov
or
scas
jle
lods
test
and
cmp
pop
xchg
or
flds
pop
add
filds
xchg
ljmp
call
cmpsb
test
jg
test
sub
add
lcall
sbb
mov
mov
add
out
sbb
or
sub
pop
lahf
xor
fcomip
pushl
pop
jle
rolb
xchg
lods
and
je
cmp
cld
or
jmp
test
divl
xchg
adc
out
call
and
nop
data16
aad
loop
mov
mov
xchg
add
je
mov
push
fcmove
push
les
les
pop
adc
insl
or
jmp
push
inc
push
jno
mov
aaa
fwait
lcall
shrl
movswl
lock
lcall
push
jb
mov
arpl
cmp
jg
aas
cmpsl
add
jge
pop
mov
mov
push
jle
push
rep
pop
adc
sahf
insl
xchg
adc
decl
les
into
pushf
mov
and
fisttpl
ja
and
dec
subb
cmp
push
lcall
push
cwtl
mov
mov
sti
fwait
dec
cmp
dec
aas
or
adc
addr16
pop
das
call
xor
cmpsl
or
decl
mov
test
push
and
mov
and
aaa
addr16
mov
cli
ficompl
icebp
iret
mov
or
sbb
call
jge
xchg
sahf
push
dec
pop
xlat
xchg
add
adc
lahf
bound
nop
and
jmp
mov
inc
mov
iret
inc
out
mov
push
xor
sarl
nop
shll
arpl
lret
xchg
faddl
and
lock
cmp
lods
mov
push
repz
sub
adc
cs
mov
mov
mov
call
loopne
ss
nop
sbb
inc
pop
sub
sbb
notb
out
ljmp
jb
sbb
mov
js
xor
add
sub
xchg
push
hlt
push
adc
loop
lcall
push
add
and
jbe
shrl
gs
call
es
iret
les
mov
mov
pop
rcr
adc
mov
decl
sub
sarb
int3
inc
pop
or
lret
bound
mov
test
call
push
out
mov
and
sarl
fcoms
lret
pop
hlt
popf
je
mov
lcall
lcall
mov
adc
inc
loop
cmp
sbb
jne
sbbl
pushl
lea
inc
mov
inc
push
jne
add
gs
or
fst
call
mov
xchg
jge
frstor
dec
xor
stos
ljmp
pop
dec
rol
push
sub
jnp
notb
push
lods
dec
hlt
sbb
xchg
adc
sbb
decl
cmp
mov
adc
clc
sub
pop
and
ja
pop
repz
call
cli
clc
mov
push
fs
stos
cld
sbb
out
lea
pop
inc
popf
popa
lret
fchs
cld
incl
pop
movsb
ja
jbe
mov
js
xor
xchg
push
bound
jg
decl
push
jno
xor
cs
inc
cmp
xchg
ss
movsb
push
pop
xchg
mov
mov
sti
sahf
pop
jb
loop
or
jbe
in
sbb
push
mov
push
sbb
xchg
mov
inc
jo
push
addr16
in
rorl
push
adc
jns
mov
mov
pushf
nop
ljmp
add
mov
mov
or
pop
pop
and
and
cmp
lods
les
add
lcall
or
ret
notl
push
dec
fnsave
sar
cwtl
repnz
data16
movsb
lcall
dec
data16
ljmp
xor
mov
stos
xor
inc
rcr
cmp
pop
pop
xchg
js
arpl
jecxz
inc
repnz
decl
jno
xchg
negl
jmp
lea
xchg
loop
je
push
gs
inc
sbb
cmc
sahf
dec
adc
sbb
lcall
fnstsw
lods
push
mov
cmpsb
and
es
dec
iret
mov
int
ljmp
lcall
mov
and
test
enter
mov
push
sbb
add
loope
jbe
fs
xor
sub
ret
sub
jl
push
jecxz
in
cmpsl
xchg
repz
jg
repnz
xchg
into
push
in
test
sub
dec
push
xchg
xorb
int3
dec
fstpt
fstp
mov
sbb
pop
jmp
sub
xchg
sub
or
insb
dec
in
jmp
insl
push
js
les
cmpxchg
popa
jl
xchg
mov
lret
ljmp
xchg
call
dec
mov
xchg
mov
mov
push
rclb
push
lret
arpl
std
leave
sub
mov
std
jmp
scas
pop
mov
pop
mov
mov
jg
popf
fisubs
lods
scas
int3
push
adc
sub
dec
dec
xorl
lods
sbb
or
cmp
mov
cwtl
push
mov
ljmp
test
dec
mov
lret
stos
fistps
jge
mov
inc
jle
in
insl
push
sbb
aam
cmc
sbb
cmp
dec
mov
xchg
lea
pusha
pop
push
mov
mov
adc
sbb
add
xchg
ljmp
jne
mov
mov
js
pop
inc
jne
movsb
dec
dec
in
pop
inc
and
inc
ds
push
ret
outsl
mov
in
cmpsb
jl
push
sti
stc
divl
popa
into
movsb
push
mov
incl
inc
inc
and
xor
pand
iret
stc
nop
fdivp
sar
cmp
sti
pusha
inc
jo
movsb
fcmovnbe
data16
ljmp
cmc
lock
xor
pop
or
cmp
inc
cmpl
shl
sub
inc
test
test
or
pushl
sbb
and
scas
aad
xchg
dec
popf
xchg
imulb
xchg
test
cmp
decl
sarb
push
and
adc
test
loope
cmp
add
lcall
xchg
mov
push
mov
jns
jns
scas
jmp
es
mov
or
push
dec
push
fsubl
jo
xor
mov
mov
cmpsl
or
sub
xchg
jns
inc
mov
in
sahf
fld1
lods
lahf
int3
inc
idiv
fcmovne
in
push
call
lahf
or
in
mov
ficompl
data16
adc
fs
std
aas
pop
out
lds
sub
push
push
int3
lcall
xchg
lcall
test
pop
jecxz
ljmp
mov
out
imul
gs
std
cli
pusha
pop
ljmp
sub
js
lds
mov
sub
enter
testl
jp
dec
imul
jle
mov
out
cmp
jle
repnz
jmp
ljmp
lret
mov
inc
lock
jmp
mov
aaa
icebp
adc
fcomps
xor
sbb
in
test
mov
xchg
js
push
testb
clc
scas
or
or
hlt
dec
adc
cmp
jl
cmp
insl
iret
xchg
jmp
inc
mov
fwait
adcb
into
ret
pop
les
call
pop
push
adc
push
xchg
jns
jmp
push
lahf
pop
cmp
in
daa
sahf
jo
xchg
mov
dec
pop
push
lods
sbb
jbe
cli
inc
jmp
and
aas
faddp
xor
jno
xchg
sarl
jecxz
push
push
jle
sbb
shlb
mov
jnp
ljmp
fwait
rorl
stos
jno
jle
sub
cs
dec
xlat
xchg
out
addr16
push
mov
test
and
lcall
add
bound
jne
call
adc
dec
iret
dec
mov
stos
jecxz
push
mov
pop
sub
nop
jecxz
mov
das
jb
cmp
in
xor
jmp
data16
fwait
ljmp
add
push
sarb
imul
decl
inc
outsl
push
inc
aaa
rcrl
js
inc
or
shll
mov
mov
xchg
adc
jecxz
pop
clc
sbb
cmp
sbb
xchg
int3
dec
outsb
outsl
jno
mov
inc
mov
lcall
inc
or
mov
outsb
add
mov
sbb
in
iret
icebp
call
addr16
cmp
out
or
add
clc
jb
frstor
std
push
ss
push
jge
inc
jb
inc
lods
xor
cmp
xor
lret
pusha
dec
fsubl
call
push
das
xchg
subl
or
js
mov
mov
mov
dec
cltd
call
jmp
mov
dec
je
pop
inc
sub
and
mov
out
out
sar
inc
cmp
jbe
daa
xlat
aad
xchg
jne
std
cmp
mov
call
xchg
sub
adc
loopne
js
push
lret
negl
mov
pushl
testl
cmpsl
fistpl
xchg
xchg
test
insb
push
pop
aad
mov
or
sahf
dec
mov
dec
inc
or
dec
push
mov
dec
add
sbb
cld
pushl
lret
lcall
jo
pop
std
mov
and
popf
stos
adc
jmp
sub
sub
adc
jmp
lods
mov
ret
pushf
jl
es
loope
aad
jno,pt
outsl
fdivs
arpl
iret
add
sub
pop
icebp
call
in
add
sub
test
sarl
addr16
daa
cld
mov
jg
arpl
push
adcl
lcall
inc
popf
inc
pushf
sbb
testb
mov
pushl
jmp
push
fnstcw
loop
in
fildll
or
xor
lcall
and
test
dec
ds
jb
sub
adc
pushl
iret
xorl
and
xor
add
sub
sub
lea
xchg
sub
mov
add
add
loope
adc
mov
in
push
rcrb
mov
fistpll
repnz
inc
loop
lahf
jecxz
mov
lcall
std
mov
or
push
xchg
inc
test
daa
lret
ret
jecxz
dec
cmp
decl
xor
or
xor
cmp
lds
mov
jg
ljmp
push
mov
in
dec
in
push
icebp
pop
mov
or
aam
jg
ljmp
mov
xor
sub
repz
bsf
mov
add
aaa
cld
cmp
test
lret
aas
jno
mov
daa
daa
sbb
incl
mov
sub
popf
push
or
or
mov
xorl
cmp
nop
push
in
in
mov
push
mov
push
loopne
hlt
xchg
cmp
aaa
inc
in
mov
scas
fnstcw
dec
rcll
dec
dec
xor
cmp
adc
mov
push
data16
test
pop
setl
decl
incl
xchg
sarl
push
lods
mov
rclb
adc
xor
mov
das
lock
cld
mov
sub
ret
addr16
test
ja
lea
inc
sahf
mov
cmp
inc
pop
xchg
jmp
ljmp
sarl
mov
stos
es
sarl
and
jb
jae
lods
jmp
push
inc
push
roll
mov
movsl
inc
mov
and
xchg
mov
push
hlt
test
cli
stos
jl
insb
xchg
push
mov
sbb
add
je
pop
jl
jl
jne
or
mov
lock
std
les
movswl
in
scas
fildll
xchg
roll
xor
cmp
xchg
mov
mov
jns
jecxz
fcomip
lcall
pop
popf
cmpsl
jge
data16
andb
dec
sbb
movsl
xor
mov
incl
or
sbb
ret
dec
iret
pop
stos
lds
ljmp
mov
iret
repnz
mov
xor
cmp
mov
and
addb
pop
or
cld
mulb
jg
sub
mov
adc
xchg
or
mov
cmp
or
popa
aas
push
add
pop
cmc
lahf
dec
adc
xchg
jmp
addr16
lcall
gs
mov
jg
shlb
in
outsb
dec
repnz
test
xor
decl
lock
stos
pop
stc
jge
ljmp
sbb
dec
icebp
jl
xor
mov
xor
or
ret
push
jle
test
push
scas
dec
fwait
into
loop
movsb
dec
ljmp
ds
mov
lea
shlb
mov
mov
fldenv
shll
ss
push
push
ja
fcomi
bound
sahf
jl
loope
push
xor
pop
daa
mov
cli
lcall
pop
sahf
repz
jo
sub
inc
ss
inc
mov
hlt
out
stos
push
popa
push
dec
inc
movsb
cs
mov
dec
clc
shrl
popf
cmp
dec
jmp
and
push
out
and
and
ja
in
sbb
addr16
aad
cmpsl
mov
xor
shll
data16
push
and
out
sbb
mov
pusha
lods
mov
dec
mov
mov
iret
stc
or
push
push
jg
enter
ret
mov
ljmp
pop
les
dec
outsb
test
or
lahf
dec
pop
inc
sbb
add
test
incl
das
in
je
sub
push
inc
subb
inc
and
test
iret
pop
pop
aaa
xor
ljmp
cmp
nop
dec
pop
fnstenv
arpl
pop
loope
adcl
and
int
jmp
or
movl
imul
dec
pop
mul
lcall
addr16
push
std
and
fwait
shll
pop
mov
sub
inc
sbb
popl
cmc
ljmp
sub
divb
cmp
dec
push
lret
jl
inc
arpl
fcomip
decl
and
lds
and
dec
cmp
mov
loope
and
ljmp
addb
jne
push
pop
cmpsb
push
sti
aas
mov
jo
or
push
aaa
std
jp
and
fs
ljmp
mov
push
ret
imul
jg
inc
and
in
addr16
cltd
pop
movsb
xchg
xchg
push
lea
incl
movsl
push
sbb
fsubs
adc
sahf
cmp
call
pop
jmp
jmp
test
jo
cmp
fwait
inc
push
enter
outsb
mov
and
call
jl
sub
dec
sti
rorb
iret
pushf
mov
aad
or
mov
jg
mov
hlt
push
cmp
lds
test
imul
xchg
das
mov
ljmp
mov
push
and
rorb
cmc
xchg
xor
sbb
ljmp
aaa
xor
mov
shl
pop
mov
sub
xchg
inc
rolb
incl
cli
lret
xchg
inc
mov
and
gs
adc
cmp
leave
jmp
pop
xchg
jbe
jecxz
int3
adc
mov
test
adc
sub
fmull
or
mov
pop
or
xchg
mov
mov
adc
lcall
lods
into
inc
xor
jg
sub
and
and
xchg
fwait
pop
xchg
or
int3
out
ljmp
in
mov
xchg
inc
out
adc
mov
es
stos
dec
enter
xchg
or
clc
inc
aam
shl
adc
adc
out
cmpsb
add
mov
lcall
mov
jne
cwtl
xchg
sub
and
fstpl
lret
int3
mov
incl
into
sbb
mov
push
scas
shll
dec
inc
inc
popf
pop
add
fimuls
call
cmp
mov
ret
jae
test
mov
jmp
xchg
mov
and
cmpsb
and
mov
or
cmp
xlat
das
cmp
pop
inc
adc
xorb
inc
pop
in
xor
cmp
cmp
inc
sub
cmpsl
pop
push
divl
repnz
sbb
sub
dec
mov
xchg
nop
mov
jl
cmc
adc
push
add
jg
inc
stos
inc
stc
sub
sub
shrl
push
or
cmp
inc
addr16
lcall
hlt
xor
jns
inc
cmp
mov
jl
cmp
scas
or
in
xchg
gs
jnp
test
pushf
scas
dec
mov
hlt
loope
push
scas
ljmp
sub
pusha
int
das
les
mov
or
jne
and
cli
stc
jo
xchg
xchg
add
lcall
filds
xchg
push
sbb
mov
arpl
push
inc
rclb
push
add
add
scas
sub
pushl
jbe
push
inc
nop
in
pop
js
shrb
cmpsl
mov
jmp
aas
lcall
jg
js
sub
popf
push
test
divl
imul
test
int3
sub
cmp
pop
pop
mov
out
mov
mov
ss
ja
loop
aad
fs
cli
mov
adc
cmpsb
pop
push
mov
mov
xor
cmp
push
and
cmp
out
xchg
ljmp
sbb
hlt
fimuls
mov
pop
pop
ljmp
stc
scas
fiaddl
fildll
lods
jmp
call
ret
or
psllq
xchg
dec
inc
inc
sbb
incl
mov
sbb
push
aam
dec
iret
jmp
in
pop
daa
push
repz
scas
push
cli
decl
nop
jecxz
test
xor
loopne
in
pop
jns
jg
cmp
outsb
inc
mul
inc
js
int
lods
stos
mov
inc
ret
dec
shll
call
and
xor
adc
sbb
ss
xor
loop
mov
cld
cmp
sub
mov
xor
fidivrl
leave
dec
xchg
orb
andb
out
mulb
nop
mov
into
dec
in
cmp
mov
repz
cwtl
cmpsl
pushl
xor
fbstp
jg
mov
enter
faddl
int3
imul
in
ljmp
mov
mov
jne
aam
jbe
ljmp
push
mov
sbb
xchg
je
cmpsb
aas
push
sti
cwtl
adc
lcall
lods
psadbw
dec
pushf
imul
cmpsb
mul
jne
cmpsb
pop
cli
jle
mov
loopne
inc
sbb
push
ret
push
jno
pushl
std
aas
lods
sub
test
testl
movb
push
pusha
cmp
out
cli
push
icebp
shlb
and
adc
nop
rep
jnp
add
add
aas
add
loope
mov
clc
js
xor
sbb
adc
xchg
mov
int
xlat
mov
mov
int3
jge
mov
cmpsb
fsts
pop
push
inc
dec
adc
ljmp
orb
pop
movsb
cmp
in
xlat
sbb
into
inc
inc
sub
lcall
fbstp
sbb
sub
imul
ja
jnp
inc
test
dec
inc
es
inc
js
out
adc
lcall
insl
pop
lahf
push
xlat
mov
fwait
pop
add
jmp
adc
imul
or
pop
data16
ja
lcall
xor
mov
xor
sub
nop
out
clc
fisubs
mov
push
std
cld
pushf
add
mov
lret
lret
mov
cmp
adc
incl
add
ljmp
in
add
cli
xor
pushf
insl
aaa
mov
xchg
or
cmp
test
xor
mov
iret
sub
mov
dec
and
jmp
gs
cli
cmp
sbb
push
sbb
jmp
outsb
lret
ret
sub
mov
call
fimull
imull
mov
lea
lret
test
mov
and
cmp
push
jne
jmp
stos
decl
test
xor
lret
jbe
sub
mov
mov
paddd
xchg
sub
dec
loopne
mov
nop
add
stos
or
and
testb
mov
mov
loopne
scas
test
rcll
mov
decl
dec
and
mov
out
ficomps
inc
in
add
cmp
xchg
sbb
or
dec
sbb
loope
cmp
stc
xchg
jno
adc
push
stos
test
test
pop
cmpsb
repz
cmp
mov
aaa
sbb
mov
mov
clc
add
aaa
andb
pop
cld
dec
ficomps
popf
cmc
daa
sub
roll
std
mov
leave
in
adc
ficoms
hlt
out
sub
mov
add
fisttps
dec
bound
xchg
ficomps
mov
jnp
mov
or
in
dec
or
adc
adc
cmpsb
dec
dec
packsswb
cmp
vpcmpeqw
pop
sbb
dec
lahf
sbb
nop
xor
stc
push
pop
test
in
stc
mov
clc
in
shll
cmp
jns
fidivrs
and
jle
jnp
adc
sbb
out
imul
je
aad
xchg
pushf
mov
lock
scas
stos
or
int3
add
hlt
dec
incl
xchg
les
xor
mov
pop
sub
pop
inc
dec
imul
jmp
sahf
clc
incl
dec
or
out
addr16
push
dec
and
shl
cmpsb
das
call
mov
mov
outsl
call
adc
jae
push
movsl
mov
nop
mov
jo
sub
mov
push
cmp
incl
cmpsb
or
sbb
das
add
out
jmp
pop
push
xchg
test
fidivrl
lock
out
dec
sar
push
lods
mov
ljmp
fimull
push
negb
xor
ja
stos
cmp
mov
cmpsl
popa
das
dec
mov
mov
stos
pop
clc
cmp
mov
adc
inc
jmp
dec
mov
lds
arpl
add
fstps
and
xchg
data16
and
sub
inc
pop
rolb
imul
mov
repz
add
loopne
lcall
sbb
popa
jnp
xchg
loop
inc
jnp
push
jno
outsb
xchg
scas
and
in
in
jmp
ret
mov
inc
popl
and
mov
add
pushl
cmpl
das
mov
loop
and
out
ret
ss
xor
fs
cmp
jnp
div
fcompl
dec
push
stc
pop
repz
lcall
mov
pusha
sbb
int3
xchg
inc
out
push
das
sarl
mov
lcall
inc
sbb
cmp
js
hlt
sbb
int3
mov
jo
js
xchg
jb
mov
or
call
popa
popf
pop
mov
int
mov
aam
aas
insb
sbb
leave
in
fnstsw
xchg
and
decl
lock
femms
mov
ret
sub
pop
je
dec
inc
and
outsl
call
popa
test
call
jns
sbb
pminsw
lea
adc
mov
mov
lcall
iret
mov
gs
push
inc
decb
das
lcall
int3
mov
lcall
andb
cmp
dec
movsb
xchg
mov
jb
mov
adc
dec
loopne
call
cmp
mov
bound
loopne
das
inc
dec
or
jno,pn
sbb
mov
xor
les
mov
gs
inc
ljmp
lods
or
lock
frstor
mov
jp
jno
out
dec
xor
adc
insl
cmpsl
gs
sbb
mov
je
lret
inc
mov
decb
and
push
xchg
push
cmp
jmp
add
inc
sbb
rol
jnp
cmp
sbb
push
mov
mov
inc
ljmp
xchg
fnsave
fstps
fwait
cmpb
pushl
cmp
mov
out
push
push
cmp
stc
pop
test
xchg
push
std
adc
mov
pop
sub
lods
in
aad
gs
push
or
adc
xchg
or
cli
lahf
fs
inc
lock
or
xchg
out
dec
push
cli
imul
xchg
pusha
lret
push
test
xor
mov
js
push
cmp
gs
inc
daa
xchg
mov
mov
inc
xor
lds
es
leave
ljmp
mov
and
add
mov
xor
mov
ljmp
pop
lea
std
xor
mov
or
jns
test
pushl
in
mov
rolb
sbb
ljmp
jl
imul
iret
addr16
or
add
inc
xlat
xlat
cmp
mov
pop
int
out
inc
call
fcomip
sti
sub
hlt
nop
push
and
and
and
mov
decl
xchg
pop
xor
jmp
js
xor
adc
mov
adc
push
dec
test
mov
adcl
xchg
cli
inc
mov
sbb
sbb
sub
incl
add
xlat
in
xlat
imul
in
lea
mov
add
fldl
cli
mov
add
add
rol
push
jecxz
jmp
jmp
mov
add
mov
bound
bnd
test
push
and
adc
out
pop
es
fcomip
cmp
inc
pushf
and
testl
test
inc
add
inc
xor
popf
cmp
mov
jbe
sti
xor
ret
sbb
jno
mov
loop
mov
mov
jg
fimuls
or
cmpsb
lahf
sbbb
inc
daa
lods
aas
popf
lcall
mov
lock
dec
mov
loopw
xchg
je
jo
xchg
out
call
sbb
out
mov
pop
fs
jno
ljmp
add
aam
mov
js
cli
push
add
xlat
enter
loope
adc
jmp
xor
cmpsl
mov
insl
mov
sbb
out
jp
insl
jae
xor
inc
daa
repz
mov
lcall
repnz
movsl
cmp
cmp
add
aas
roll
cld
test
lcall
out
cmp
mov
outsb
xor
or
sbb
icebp
rcrl
mov
jmp
or
aas
in
pop
cmp
push
insb
mov
repz
aam
mov
jg
clc
cmpsb
mov
mov
and
test
sbb
adc
insb
sbbl
dec
pop
rorb
jge
add
inc
mov
xorl
or
and
pushl
insl
shrl
insl
mov
sub
rcr
scas
jo
pop
add
or
scas
inc
pop
cmp
pop
lock
pushl
je
das
fistpll
stos
fs
or
or
sbb
sbb
mov
pop
sub
cmp
adc
lret
test
xchg
mov
cs
idivb
pop
dec
sub
xchg
sub
mov
cs
lret
fisttpl
inc
mov
lahf
in
cmp
mov
repnz
orl
outsl
cltd
popa
mov
pop
call
add
mov
push
psrld
sub
sub
sbb
mov
fcomip
cmpsl
arpl
mov
jp
sbb
xchg
and
xchg
mov
decl
test
addr16
sbb
jb
lods
adc
inc
into
and
pusha
jno
dec
add
add
ja
mov
sbbl
pop
movsb
xchg
inc
jecxz
in
push
add
inc
mov
add
aad
adc
addb
outsl
cli
outsb
adc
and
test
pop
jge
out
jp
incl
push
outsb
sbb
inc
int
in
insl
imul
xlat
lock
incl
mov
cmpsw
in
pop
std
or
xor
jns
mov
inc
mov
loope
lcall
or
push
out
repnz
shlb
shll
aad
inc
outsl
cli
or
xchg
fwait
inc
ljmp
pusha
jne
js
and
cmp
out
repz
xor
xor
add
mov
out
mov
inc
scas
push
jg
pop
pusha
pushl
xor
xorb
pop
xorl
sub
lods
bound
mov
ja
pop
sbb
stos
sbb
mov
lds
mov
dec
mov
sbb
imul
jae
mov
aaa
jecxz
lods
and
jmp
loopne
dec
adc
repnz
mov
mov
out
cmpsl
adc
mov
pop
add
pop
jmp
dec
sbb
dec
jge
inc
push
pusha
addl
scas
push
mov
jle
sbb
stos
mov
xchg
lea
adcb
jge
sbb
mov
pop
les
xchg
andl
mov
scas
popf
daa
adc
inc
push
sbb
cmp
mov
sub
mov
xor
add
push
jmp
push
insb
add
jg
das
pop
xchg
data16
les
std
orb
xor
cltd
xor
mov
mov
pop
jbe
test
fldl
or
decl
icebp
sbb
xor
jnp
xchg
inc
or
cmp
inc
mov
push
or
clc
jnp
test
xchg
xor
xchg
scas
dec
xor
mov
mov
fwait
sub
mov
xchg
outsb
jge
adc
fs
or
cwtl
xchg
ljmp
jmp
or
jge
leave
sub
mov
mov
push
push
push
sub
sub
xor
in
push
in
lods
in
sub
add
push
dec
ds
frstor
push
js
inc
pushl
negl
cmp
sub
insb
test
jne
mov
sarl
jg
xlat
fisttpl
dec
xchg
sub
scas
inc
ljmp
call
loopne
dec
inc
inc
dec
xchg
jne
and
fisttpll
into
mov
pop
lock
shrb
cwtl
imul
jno
repz
xchg
jno
aaa
repz
jne
repz
imull
push
fsqrt
jg
icebp
in
jb
lock
pop
jge
adc
push
leave
mov
mov
cmp
out
push
std
stc
cs
fsubrl
inc
xchg
mov
dec
ljmp
dec
xor
cmpsb
insb
xor
or
add
adc
push
xchg
std
jg
call
inc
pop
dec
dec
loop
jo
fs
ds
pop
mov
xchg
xchg
ja
mov
jecxz
fsubs
cmp
clc
sbb
scas
jae
cmpsl
shll
incl
or
push
xchg
jbe
insb
sahf
add
std
stos
push
ja
sahf
adc
fists
fsubp
jg
incl
sub
es
push
into
adc
dec
adc
cwtl
fs
mov
or
pop
push
pushf
sbb
call
push
fnop
popf
int3
icebp
and
mov
fisubl
xchg
pop
jnp
bound
jnp
out
sub
imul
scas
call
cmpl
adc
push
lds
flds
out
out
ret
lcall
movsl
cmp
bound
mov
dec
xor
and
and
ret
bnd
jmp
mov
sbb
xchg
ret
or
sub
out
mov
clc
jmp
lods
lock
xor
inc
fsubrl
and
adc
shrb
xlat
sbb
mov
movsb
jo
popf
inc
push
add
je
and
pop
jl
sbbb
cli
iret
mov
es
decl
js
xor
cld
shr
bound
repz
jmp
dec
loopne
pushf
pop
sbb
xchg
pop
sar
sub
cmp
inc
or
xchg
aam
add
aaa
xor
fcmovu
and
das
inc
call
rcll
ss
and
js
sbb
popa
decl
lock
dec
fbld
mov
adc
mov
cmp
inc
add
out
stos
sbb
cmp
dec
test
push
ds
xor
inc
std
dec
adc
jg
sbb
in
inc
out
dec
push
out
sub
insl
out
mov
inc
xlat
pop
dec
inc
xor
psrlq
push
sub
sbb
xor
pushl
out
adc
jnp
pop
jecxz
mov
sub
aam
loope
and
jp
fcoml
call
xor
das
aas
stos
jae
mov
sub
mov
mov
inc
adc
leave
mov
sar
incl
mov
lretw
jecxz
js
push
aam
int
cmp
or
pushl
test
mov
mov
stos
cmpsb
lret
mov
in
call
push
loop
and
inc
push
daa
dec
fisubl
cmpl
in
mov
loopne
or
sub
aaa
std
fistl
lods
add
ret
pop
jo
push
sbb
mov
icebp
cmp
xchg
mov
pop
lods
cmp
inc
bound
scas
in
imul
inc
xchg
ret
iret
dec
xor
sahf
dec
mov
xor
aad
adc
scas
or
lret
jno
call
inc
and
jmp
mov
sub
adc
mov
push
sub
mov
je
aas
test
test
outsl
jnp
jb
push
xor
jg
sbb
mov
jae
push
inc
ljmp
clc
mov
movsb
jne
mov
ss
xchg
lcall
and
push
shrb
pop
jle
xor
jmp
stos
and
repz
rcrb
mov
leave
jmp
ror
sti
and
ljmp
mov
leave
push
je
xchg
lods
out
sbb
dec
repnz
or
push
lds
decl
push
xchg
pop
mov
nop
mov
jg
test
ffreep
push
fisubrl
test
int
jbe
fmulp
ret
xor
std
sbb
jle
pushl
pop
adc
push
scas
sub
jns
mov
add
orb
lods
test
fcmovnu
fidivrl
lcall
decl
adc
sarl
ljmp
out
mov
cs
incl
mov
in
inc
dec
and
cmp
pusha
cld
out
ss
fcomps
dec
mov
jmp
mov
xchg
xchg
push
sbb
jns
addb
loopne
xchg
fdivl
fstpl
jg
xor
jo
and
sbb
xchg
jb
rclb
movsb
test
ds
pop
jb
fnsave
loope
stc
push
push
call
aaa
cltd
xchg
mov
lcall
insl
sub
pop
mov
mov
adc
fs
jbe
cmpl
pop
fwait
xchg
jp
cli
repnz
jmp
inc
add
and
xchg
in
bound
imul
xor
pop
xor
arpl
pop
lock
or
andb
rcll
incl
cmpsl
xchg
mov
test
inc
pop
jns
insb
lods
fistpl
les
mov
pop
scas
insb
add
and
lcall
mov
aaa
out
out
sub
cmc
push
cwtl
pop
mov
jmp
jbe
enter
loopne
xchg
fdivrl
mov
pushl
imul
jl
enter
mov
push
inc
insl
xor
icebp
pushl
mov
aad
or
pop
lock
cwtl
popf
inc
inc
out
sbb
lcall
jle
pop
test
and
sub
out
mov
repnz
pop
imul
push
clc
adc
lcall
add
push
enter
cmp
lea
lea
push
sub
out
clc
and
jecxz
iret
push
divb
inc
pop
jp
rclb
scas
push
cmpsl
out
lcall
mov
lret
jl
pop
or
mov
fsub
rep
insb
fs
insb
sbb
mov
cmp
jmp
dec
sbb
shrb
repnz
sub
je
lahf
std
mov
call
xchg
nop
or
xor
addr16
daa
pop
fs
call
jg
adc
or
pop
imul
hlt
repnz
in
std
push
and
xor
fidivs
ljmp
adc
xor
mov
adc
mov
loope
sbb
dec
das
je
jl
insb
notb
xorl
ror
xor
ljmp
mov
ret
lock
cmp
shl
sarb
xor
sbb
or
lcall
into
or
push
data16
push
out
cmp
mov
xchg
and
inc
aad
mov
dec
nop
lock
out
push
push
inc
inc
xchg
xor
ljmp
mov
enter
jo
add
push
mov
and
jge
mov
popa
cmp
enter
xchg
mov
lahf
lods
xchg
pop
push
sub
mov
lcall
int
test
mov
bnd
aas
xor
and
cli
adc
mov
jl
pusha
incl
int
fldz
rcll
aas
out
fimull
mov
xor
mov
pushl
clc
mov
push
dec
icebp
push
sbb
pop
pop
cltd
xchg
lahf
cmp
test
ljmp
ljmp
ret
lods
shrb
fs
mov
cmp
jne
mov
and
dec
lret
inc
aaa
out
filds
icebp
into
stc
sub
cld
mov
sub
call
cmp
repnz
dec
jp
pop
addr16
lcall
ret
stc
push
xor
es
stos
test
sub
aam
sar
test
ljmp
cli
ljmp
jae
jae
pop
adc
inc
push
adc
fdivrl
or
lcall
xor
and
or
ss
jle
xchg
testl
pushf
jecxz
mov
sbbl
call
addr16
push
cmp
mov
insb
sub
push
movsl
cmp
cs
xchg
pop
or
mov
mov
call
je
pop
push
jp
test
and
jge
mov
mov
test
out
xor
ret
lea
inc
adc
cmp
in
adc
adc
cld
call
into
daa
adc
fdivs
jmp
inc
insl
and
adc
mov
pop
lret
push
push
mov
pop
dec
sti
sbb
movsb
push
xchg
push
inc
repnz
out
std
call
jae
repnz
pop
subl
andl
jl
out
incl
cmp
rolb
idivb
mov
dec
loop
cmp
mov
dec
jl
fldenv
push
adc
fisubrs
stos
inc
pop
mov
sarb
sahf
stos
adc
mov
pop
repnz
out
loopne
adc
test
mov
lret
push
add
mov
in
stc
or
fs
frstor
inc
sub
sbb
hlt
data16
dec
mov
ljmp
decl
lock
mov
fldpi
mov
mov
call
or
or
cmp
pop
inc
push
test
stc
inc
leave
mov
inc
pop
call
dec
fisubl
sbb
mov
add
jp
jns
popf
cli
xchg
es
xchg
or
das
repz
decl
push
movsl
mov
outsl
ss
lahf
lods
mov
jo
jl
push
dec
xchg
arpl
icebp
call
push
jne
popa
dec
jl
lcall
punpckhbw
mov
lret
inc
sbb
lcall
xchg
ret
pop
push
add
jae
add
insb
test
mov
aad
mov
in
es
inc
jnp
dec
sbb
orb
mov
mov
mov
inc
mov
mov
inc
popf
pusha
add
and
fcos
jg
bound
mov
int
push
cmp
int
push
jae
repnz
and
call
inc
pushf
sahf
inc
or
mov
sbb
test
sbb
pop
dec
int
mov
mov
xor
ljmp
sbb
mov
xor
decl
add
pushw
pop
repnz
or
andb
pushl
jp
les
adc
adc
popf
addr16
dec
fldt
in
jmp
cld
dec
add
mov
outsb
cmp
pop
jnp
mov
fsubrs
rcrl
or
call
loopne
mov
stos
ja
cmpsb
movsl
int3
sbb
pushf
sbb
pushf
js
lcall
aas
dec
pusha
movsl
fildll
xor
aad
sbb
mov
mov
cli
in
push
inc
mov
mov
push
lahf
and
cmpsb
call
jge
push
iret
mov
movsb
gs
cmp
notl
fidivs
dec
pop
cltd
outsl
sarl
cltd
xchg
rcrb
adc
xchg
cmp
pop
mov
push
incl
aam
test
mov
adcl
imul
fsubrs
enter
sub
mov
push
lea
mov
leave
fldl
rcrl
add
mov
fimull
int
aam
cld
lcall
mov
pusha
or
flds
adc
icebp
in
and
jb
jae
jmp
fcomip
jmp
fadds
out
les
mov
pop
add
xchg
sbb
ljmp
sar
or
push
cli
dec
cld
jp
icebp
leave
mov
rorl
or
adc
push
xorl
mov
dec
hlt
out
mov
lret
adc
pop
iret
outsl
xchg
cmp
mov
out
sub
lock
or
xchg
je
mov
decl
or
xchg
nop
call
dec
xorl
cmpsb
divl
inc
pop
out
or
stos
cli
jns
sbb
dec
std
stc
ss
add
mov
lcall
shll
insl
cmc
xchg
lcall
mov
jg
and
stc
dec
ret
leave
fisubrl
aas
dec
push
inc
lahf
pop
jecxz
aad
mov
call
nop
jae
stc
popf
jb
aaa
shrl
push
xorb
int
in
rep
pushf
fnstcw
ds
xor
into
repz
dec
inc
add
push
test
mov
lods
push
cmpsl
dec
jp
ljmp
add
and
add
mov
jbe
daa
sub
sbb
imul
inc
jecxz
cs
decl
fistps
or
jno
jmp
push
cwtl
sbb
es
lea
sbb
mov
jg
test
mov
insb
hlt
adc
jmp
pop
pop
xlat
call
mov
test
nop
mov
outsb
gs
daa
lods
adc
pop
mov
nop
lret
and
decb
dec
sbb
fwait
push
fnstenv
adc
push
and
call
push
dec
inc
mov
lods
sti
aas
rcll
mov
and
imul
xchg
xor
ljmp
mov
pushf
mov
jecxz
std
scas
sbb
clc
jecxz
jno
mov
sub
fidivl
loope
add
cmpsl
call
fisubl
pusha
dec
mov
pop
stos
jle
stos
jns
mov
decl
arpl
fnstcw
xchg
jg
stc
xchg
nop
jle
add
pushf
mov
or
daa
sub
xor
mov
jmp
cmp
lods
push
and
jne
lcall
mov
mov
jp
dec
mov
push
cmpl
loop
cmp
outsl
iret
outsl
mov
fisttpll
xchg
stc
adc
stc
cmp
in
pop
or
and
sbb
dec
imul
ret
and
jnp
jb
push
jns,pt
adcb
xorb
std
pushf
pop
xchg
xchg
decl
in
jle
push
test
aas
adc
mov
orl
lods
lds
jnp
out
fs
mov
aad
inc
and
jnp
mov
orl
inc
stos
xchg
loop
push
mov
jle
jg
or
std
pop
je
shrl
mov
jmp
mov
xchg
pop
push
jl
mov
or
lods
jl
int
es
xlat
mov
out
scas
sub
outsl
cli
ljmp
xchg
leave
cwtl
pop
dec
out
sbb
and
lret
ljmp
jg
adc
push
mov
mov
jno
dec
inc
inc
cmp
loope
call
cmovl
cmpl
cmpsl
xchg
aaa
xor
sub
aaa
rclb
popf
xchg
mov
call
fstp
ljmp
inc
popf
test
inc
jns
loop
loope
xor
inc
inc
roll
dec
decl
adc
mov
jge
adc
inc
add
jge
jg
lcall
jmp
sub
mov
enter
sbb
jmp
xor
jle
xchg
or
inc
mov
aas
call
in
inc
dec
call
nop
and
orl
xchg
sub
push
fcomps
mov
push
ljmp
xor
imul
cmp
or
xor
aas
fsts
mov
cmp
inc
xchg
inc
xor
fadds
scas
roll
roll
adcl
push
loopne
mov
not
jle
scas
clc
jg
mov
pop
mov
pop
daa
fisubl
add
int3
pop
gs
dec
icebp
movsl
pop
cmp
add
pop
xor
sub
push
lret
cmpsl
idivb
mov
push
xor
xchg
lcall
loope
sub
rcr
mov
inc
out
push
movsb
xchg
xchg
mov
dec
xchg
gs
sub
jmp
mov
sbb
pop
loop
mov
or
adc
call
decl
pop
lcall
inc
jno
out
mov
mov
das
mov
ret
lcall
xchg
outsl
pop
into
sbb
inc
adc
cmp
shl
pusha
pcmpgtd
lods
pop
mov
jmp
push
pop
sub
shlb
es
push
pop
dec
pop
out
loop
hlt
jbe
jg
lcall
lcall
sub
cld
cli
pop
mov
jnp
jle
out
clc
lcall
mov
scas
popf
sbb
xor
add
sub
xor
call
inc
jmp
bound
mov
ret
add
test
mov
pop
adc
xchg
mov
cmp
call
sub
jne
mov
inc
cmp
cmp
rcll
std
je
adc
in
mov
insl
cmp
fcoml
inc
add
insl
loopne
dec
je
push
inc
xor
xchg
lcall
aam
or
cmp
xchg
lcall
cmp
jmp
push
mov
jb
es
sub
mov
test
and
xchg
stos
jae
jns
and
js
add
xchg
loopne
ljmp
adc
mov
call
stos
pop
push
jae
stos
daa
in
fcomip
pushl
cwtl
dec
mov
pop
xor
xchg
xorl
jge
test
lock
jmp
call
out
outsb
push
xchg
test
pop
or
push
cmp
lret
lcall
mov
pop
cmc
lods
ds
mov
mov
mov
jg
cmp
punpckhwd
loopne
out
ret
fisttpl
cmp
bound
pusha
subb
jg
push
imul
pop
and
lods
mov
sub
mov
sbb
hlt
mov
lea
dec
push
fidivrs
and
push
push
xchg
mov
mov
pop
scas
repnz
push
cmp
xchg
cmp
dec
incl
std
mov
std
or
sbb
icebp
pop
xor
xor
call
iret
inc
pop
sub
pushf
jno
cmpsl
pop
shll
stos
mov
out
mov
dec
mov
mov
pop
lock
mov
cltd
sbb
pushf
sbb
or
dec
mov
stos
lret
fnstenv
dec
cmp
pushl
icebp
mov
ret
adc
mov
data16
and
lods
dec
xchg
push
enter
cld
jne
es
incl
pusha
aad
adc
mov
xor
xchg
mov
sti
ret
andb
loop
cli
mov
xchg
ja
rorb
mov
sahf
xor
fdivl
pop
lcall
dec
cld
stos
stc
cmp
pop
and
xor
sbb
loop
std
call
cmc
xor
scas
xor
in
test
fcomps
loopne
sbb
mov
add
insb
adc
mov
sbb
jg
mov
rcll
push
jb
inc
out
push
ss
incl
dec
adc
adc
ret
lahf
push
cmp
daa
adc
mov
lods
repz
es
jmp
mov
imul
xchg
xchg
push
push
stos
push
es
or
cmp
xchg
cli
jmp
mov
sbb
push
nop
mov
cmp
mov
fmuls
lock
sarb
cld
jo
ja
rolb
push
mov
adc
xchg
xor
nop
xor
ljmp
cli
imul
adc
push
sbb
adc
pop
sub
push
ja
pop
cwtl
fdivr
or
aaa
sbb
jle
mov
sahf
fstpt
fs
shl
inc
mov
sbb
jae
push
cld
outsl
cli
test
mov
push
lods
or
sbb
cmpsb
decl
xchg
or
inc
iretw
and
cmpsb
in
jae
push
mov
ljmp
mov
push
mov
mov
sub
mov
js
aas
push
and
push
test
mov
aaa
mov
es
push
adc
and
mov
decl
test
movsl
gs
push
test
and
mov
jnp
fsubl
daa
push
js
dec
insb
cmpsl
in
jb
jl
scas
jnp
mov
leave
icebp
in
andb
jns
int3
or
add
addr16
movsb
ds
and
sarb
push
xchg
in
pushl
inc
mov
xchg
cmp
xchg
fstl
les
mov
xchg
in
and
stos
jmp
and
dec
loopne
add
push
sub
fsubrl
test
fsubs
pop
andnps
cmc
incl
fdivp
mov
or
sbb
lods
jle
cmpsl
or
sarb
cmp
iret
push
loope
mov
mov
cld
testl
mov
mov
lahf
jns
dec
add
leave
push
test
fcomip
incl
mov
insl
mov
inc
shll
fsub
cmp
sub
cmp
add
and
adc
dec
orb
mov
cltd
inc
insb
cltd
mov
jns
cmc
add
jo
mov
ret
sub
popa
popa
push
pop
mov
aaa
add
mov
inc
hlt
mov
ja
xchg
or
dec
lret
into
loop
ss
inc
test
cltd
in
das
mov
push
fs
adc
inc
incl
sarl
cmpsb
pop
pop
jl
data16
int
cmp
cmp
hlt
rolb
jmp
lcall
and
fcom
bound
mov
out
loop
lahf
adc
mov
mov
jg
arpl
repnz
xchg
add
mov
pusha
inc
sub
cltd
jg
insb
lret
scas
xchg
cmp
mov
cmp
pushl
cmpsl
xchg
add
jmp
cmpsb
daa
add
clc
mov
add
sbbb
outsl
pushl
out
dec
cmp
push
adc
ret
pop
mov
rcl
jge
xor
mov
ljmp
clc
fldl
aad
ss
push
xchg
loop
lds
sbb
sbb
idiv
lcall
dec
cmp
sub
insb
jne
enter
sub
cs
lahf
inc
cmc
int3
aam
icebp
out
pop
std
jmp
rorl
add
or
cmp
hlt
in
mov
testb
std
mov
mov
push
lret
sub
sub
cli
jnp
dec
popf
ljmp
adc
hlt
or
ljmp
pop
call
ljmp
movsl
jns,pt
mov
adc
pop
and
decl
pusha
out
pop
iret
pop
fldt
mov
cld
dec
push
sbb
cmp
cmp
mov
inc
xchg
adc
filds
mov
cmpsb
sar
jg
add
movsb
roll
mov
scas
inc
cmp
adc
xchg
dec
call
cs
ds
push
decl
ljmp
push
inc
int3
xchg
call
daa
out
repnz
ror
scas
mov
adc
and
ljmp
cs
pop
adc
shlb
fsin
adc
notb
and
fcompl
incl
stos
popa
inc
push
pop
adc
add
mov
lret
push
fdivrp
test
addb
mov
pushl
movb
rorl
inc
mov
mov
inc
lcall
mov
mov
fisttpll
sahf
fnstenv
mov
fwait
ljmp
ss
inc
adc
jo
movsb
adc
icebp
mov
ljmp
mulb
mov
in
out
cmp
std
aas
or
mov
aas
incl
add
dec
out
adc
enter
xor
add
int
gs
negb
mov
addr16
icebp
and
pop
and
inc
push
ja
mov
jg
push
sbb
aad
stc
call
hlt
enter
lcall
adc
xor
out
clc
rcrb
mov
inc
in
lret
sbb
repnz
mov
dec
cmpsb
inc
push
mov
sbb
addl
ljmp
cmp
jbe
fcmovnu
ret
mov
add
bnd
repz
aas
inc
jmp
cmc
or
pop
daa
lods
and
jmp
xchg
mov
and
lods
push
cwtl
mov
or
inc
outsb
pop
mov
push
mov
shll
ds
popa
lcall
xchg
and
cmpb
add
sbb
mov
pop
mov
loope
push
out
cli
cmc
lods
sub
cs
das
or
mov
mov
lods
lcall
aas
mov
jmp
fildll
mov
or
lcall
or
cmp
jno
mul
pop
rcr
in
cli
inc
xchg
incl
mov
or
mov
loopne
pop
repnz
in
idiv
fnsave
jmp
imulb
shrl
shrl
dec
mov
arpl
cmp
lcall
push
sub
not
mov
dec
cwtl
add
jl
pop
cmpsl
push
and
sbb
push
aas
testl
or
fcompl
jmp
pop
ljmp
fs
push
adc
adc
xchg
mov
insl
xor
jmp
int
pop
cs
or
out
out
jb
push
mov
shrb
mov
dec
add
fadd
jmp
shlb
test
popf
in
cmp
je
fwait
test
add
mov
sar
decl
xchg
push
repz
fstps
jg
movsl
jbe
dec
call
setae
mov
sub
cmc
jmp
les
and
push
inc
fs
ljmp
int3
fwait
adc
sbb
lret
push
lcall
into
imulb
mov
insb
pop
std
jnp
push
cmp
inc
mov
loope
jecxz
ja
push
je
sti
es
jmp
rcr
sbb
insl
pushl
clc
mov
inc
jmp
xchg
xor
xchg
fisubrs
adc
mov
cmp
push
call
mov
loope
jl
push
inc
cld
pushf
aam
lea
cmp
dec
push
inc
aad
mov
push
jp
outsl
ljmp
lock
pop
jg
jle
mov
pushl
loop
aaa
mov
sub
fdivp
aaa
push
pop
xchg
pop
inc
inc
jne
cmp
call
push
cs
dec
mov
cwtl
push
cmp
arpl
cmp
fildl
and
pushl
mov
shll
or
inc
cld
mov
fnstsw
in
lods
icebp
xor
jb
lcall
data16
mov
jp
incb
divl
jno
cmp
dec
push
mov
jo
insl
out
call
jae
cmpsb
add
int
mov
jg
scas
jmp
sbb
jp
cmp
ja
jno
call
sbb
loop
dec
adc
cltd
pop
out
cmp
jmp
push
les
cltd
mov
jns
pop
aad
or
and
cs
add
fucompp
out
decl
mov
jbe
jmp
outsl
fdivrs
dec
and
leave
das
cbtw
js
pop
mov
js
inc
xchg
xor
jns
cmc
sbb
adc
dec
test
loop
sub
insb
mov
mov
mov
lret
call
jb
sub
mov
js
sarb
mov
xchg
shll
dec
call
mov
and
arpl
mov
mov
push
icebp
out
xchg
and
push
mov
jecxz
dec
out
push
push
dec
loopne
lcall
mov
pushl
cli
cmpsb
fdiv
outsb
adc
sarl
idiv
push
or
pushl
insb
popa
mov
pop
mov
test
fadds
pop
test
decl
mov
mov
add
daa
and
std
aaa
push
test
pop
test
aaa
int
stc
cltd
cmp
dec
or
scas
pop
aad
xchg
lcall
mov
inc
leave
scas
pusha
jmp
and
sti
dec
out
rorl
dec
mov
push
imul
jnp
mov
decl
test
mov
or
or
or
mov
shll
bound
out
daa
add
xchg
sub
movsl
add
lcall
add
push
loope
add
aam
adc
cmp
push
out
lcall
pop
icebp
call
loop
lea
aas
xchg
fists
adc
inc
pushf
add
out
xchg
loop
rcrl
xor
sbb
and
pusha
rcr
aas
or
pusha
push
or
xor
push
sbbl
pusha
xor
mov
mov
mov
data16
imul
push
enter
mov
lret
pushf
fsubr
outsl
das
xor
cmp
or
decl
pop
shl
hlt
push
cmp
sbb
xchg
adc
sar
lcall
hlt
mov
inc
mov
xchg
sbb
pmaxsw
dec
out
imul
push
cmpsl
mov
fsubrs
mov
mov
loop
inc
clc
push
push
call
push
inc
lret
jne
jne
shll
cltd
push
jg
mov
mov
test
inc
xchg
incl
sti
cmp
dec
xor
push
mov
inc
out
pop
cmp
aad
incl
rolb
or
lcall
xchg
pushf
xor
add
jg
mov
dec
fldenv
add
or
call
mov
decl
or
jmp
mov
in
and
mov
mov
xchg
push
ljmp
popf
inc
popf
dec
int
loopne
iret
mov
je
xchg
sub
cmp
cmpsb
andl
dec
fwait
out
gs
testl
and
ljmp
incb
add
cltd
cmc
xchg
shr
lcall
fsubp
and
sub
in
sub
push
dec
arpl
inc
outsl
dec
dec
mov
lcall
or
inc
mov
add
shll
dec
test
mov
enter
pop
outsl
mov
dec
mov
je
in
ljmp
repnz
jecxz
insl
fsubrs
or
in
scas
orb
dec
mov
out
push
ss
adc
in
lods
outsb
aaa
test
xchg
mov
pop
xorb
mov
sbb
push
into
test
push
dec
sub
lea
pusha
ljmp
mov
xor
sbb
adc
enter
add
jge
nop
pop
adc
sti
dec
in
jmp
fisttpl
ret
popa
sub
aaa
push
and
pop
cld
mov
mov
xor
or
call
push
push
dec
roll
mov
insl
mov
in
sbb
xchg
cmp
ds
divb
loopne
ljmp
sti
lods
fstp
xchg
add
in
jl
in
test
jmp
jecxz
cs
aas
addl
shrl
xchg
mov
and
jbe
fwait
and
fists
or
sar
dec
sbbb
pushl
push
insb
pop
lret
dec
rolb
addr16
das
int3
jle
add
stos
lcall
lcall
sbb
or
pushf
icebp
mov
out
dec
fucomip
xchg
ficoml
jns
xor
incl
std
stos
sub
push
std
roll
jmp
arpl
sar
pushl
pop
insb
shrl
cvttps2pi
pushf
sahf
shrl
fidivrl
ljmp
lea
je
aam
jge
fs
xchg
out
mov
jo
cmp
pushl
iret
inc
jno
popa
mov
mov
ficoms
cmp
imul
orl
dec
xor
pop
fs
fwait
mov
push
les
cltd
shlb
lock
out
xchg
cmpb
or
pushf
movsl
ljmp
pushf
in
test
xor
sbb
jnp
in
int3
shld
lcall
js
test
and
cltd
mov
adc
and
or
jns
jmp
inc
jbe
ret
push
adc
xchg
aam
lret
sbb
xchg
cmp
mov
jg
leave
loope
jb
push
add
stos
ds
dec
mov
or
lret
push
dec
adc
xchg
flds
bound
fnsave
jae
rep
jg
jle
sub
test
mov
cs
pushl
stc
lret
adc
ficomps
out
subl
mov
cmpsb
mov
loopne
imul
pop
xchg
std
decl
mov
xorl
fimull
ljmp
lds
xchg
jge
outsb
sub
sbb
and
nop
movsl
sar
pushl
js
push
pop
faddl
add
les
xchg
loop
add
and
jg
adc
mov
rcrb
insb
cmp
daa
leave
cmpsb
jmp
pop
movsb
sti
xor
std
jmp
in
in
mov
add
pop
mov
out
dec
xor
test
call
nop
lcall
inc
aam
mov
out
das
movsb
bnd
or
shll
ret
mov
sub
dec
inc
sub
pushl
push
mov
cmp
daa
mov
inc
or
fisubrl
jg
mov
cmp
mov
fdivr
push
test
inc
roll
inc
jg
inc
jo
mov
test
push
jl
clc
mov
mov
dec
mov
decl
push
mov
mov
jo
ljmp
cmp
xor
sahf
call
std
dec
stos
cmp
scas
test
xchg
mov
test
inc
and
subb
in
movsb
int
and
push
cmp
shrl
inc
fnstsw
dec
leave
das
cmp
in
push
add
fbstp
in
pop
xchg
jnp
pushl
pop
jmp
adc
pushf
cltd
xchg
imul
xchg
pop
repnz
ret
xchg
push
ja
push
push
jg
fstpl
fiaddl
outsb
daa
and
lret
cli
sbb
call
jo
into
mov
imull
dec
mov
mov
adc
sub
call
aam
pop
jne
dec
mov
mov
sub
repz
mov
nop
push
inc
pop
and
sub
mov
scas
mov
je
push
push
cmp
lock
std
cmp
fidivl
mov
imull
popa
push
lret
lock
jne
push
push
push
mov
sub
mov
mov
pcmpgtw
jo
fcompl
test
decl
and
jl
push
dec
push
cmc
movsb
sub
xor
mov
cmp
test
incl
sti
add
jno
push
arpl
sbb
stos
movsb
movsl
ljmp
mov
decl
dec
std
sbbb
imul
dec
and
push
pop
mov
adc
shlb
in
mov
dec
jno
fcomip
insb
sahf
movsb
gs
or
mov
sub
push
pop
adc
mov
xchg
push
aad
shll
mov
mov
fidivl
out
lds
jmp
icebp
aam
xchg
stc
loop
mov
mov
orl
nop
adc
inc
test
pop
inc
dec
mov
push
sahf
ret
jmp
cli
cmp
xchg
fidivrs
mov
je
and
adcb
test
cmp
xchg
fwait
decl
lock
adc
pop
mov
mov
test
aam
cmp
lcall
mov
fdivp
movsb
xchg
test
js
mov
ror
jno
fprem
xchg
sar
jmp
ja
push
pop
cmp
lods
ja
mov
ret
inc
push
andb
add
test
ljmp
lods
pop
stos
sbb
nop
xor
das
js
bound
push
movsl
aas
pop
inc
call
sbb
scas
fisttpl
jb
xchg
out
push
pop
sbb
lcall
ret
sub
fmuls
jg
or
insb
pop
jno
es
in
fcomip
push
mov
shr
jp
das
out
data16
jb
mov
pushl
fxch
cltd
popf
cmp
andl
adcl
pushl
adc
mov
int3
xlat
fcmovbe
dec
and
sub
xchg
mov
dec
cmp
cld
jnp
lcall
or
jmp
notb
and
adc
ret
out
incl
inc
xor
lea
loope
rolb
push
aam
mov
cmp
hlt
cld
and
mov
repz
add
pushf
dec
inc
adc
mov
imul
movsb
push
and
shll
dec
mov
inc
mov
lds
sub
out
gs
push
jmp
ror
mov
shr
cmc
add
leave
aas
out
cmp
orb
and
cmpsl
cmp
loopne
aaa
lcall
jg
xor
ja
push
mov
xorl
call
out
sub
mov
inc
jmp
nop
push
jp
push
cmpb
inc
ret
push
js
jecxz
jmp
or
out
hlt
inc
jns
lret
cs
pop
dec
fs
dec
xchg
sbb
jmp
mov
popf
or
loop
lcall
test
cwtl
xchg
pushf
pop
ljmp
cld
lock
stc
ficompl
xor
sbb
xlat
test
lret
inc
in
dec
or
cmpsb
lar
inc
add
push
dec
mov
mov
inc
lods
lcall
mov
xchg
pop
out
leave
out
or
inc
arpl
cmpl
cmpsl
dec
lock
mov
inc
mov
ret
mov
stos
rorl
mov
cmp
add
incl
cwtl
xchg
sahf
mov
pop
movsl
xchg
add
das
pop
adc
pop
cmc
decl
jo
and
insl
ja
mov
pop
inc
pop
push
push
mov
in
call
mov
fdiv
int
shlb
daa
cwtl
popa
sbb
sub
incl
jmp
pop
xor
mov
inc
push
jg
fwait
mov
pop
cmc
incl
mov
sub
pusha
cltd
hlt
or
ret
and
pusha
xchg
cltd
and
xor
jmp
test
add
imul
pop
fldenv
lret
clc
mov
sahf
mov
xchg
cmp
add
mov
ljmp
pop
call
arpl
mov
inc
jne
js
sub
push
mov
ljmp
jmp
les
or
push
xchg
int3
push
in
push
inc
push
or
gs
decl
in
mov
aas
sbb
jle
add
fldenv
inc
aam
adc
cmp
fisubrs
xlat
lock
xchg
add
ljmp
add
movsl
aaa
in
cmp
or
lock
dec
es
aas
stos
pop
add
push
iret
fstp
mov
test
jg
sub
mov
mov
mov
push
xlat
das
out
ffree
sub
pop
push
loope,pt
jp
add
pop
out
add
lds
out
shrb
jb
arpl
jo
or
test
jmp
mov
pop
lock
or
addr16
adc
xor
inc
and
cmc
jo
push
stos
clc
decl
std
mov
mov
mov
adc
mov
jno
and
fdivr
incl
fcoms
aam
insl
nop
fnstenv
mov
dec
out
fldenv
lea
dec
add
mov
lcall
adc
ds
pop
push
idiv
or
ret
mov
push
sub
inc
push
inc
xchg
add
clc
daa
inc
dec
adc
bnd
test
pushl
push
les
outsl
mov
and
push
cmp
mov
test
xchg
pop
sbb
push
js
push
xchg
mov
xchg
jle
fsubp
daa
bound
mov
pop
enter
imul
iret
ja
dec
push
jecxz
sbb
pop
jbe
pop
push
shlb
adc
cld
inc
insb
daa
jno
je
jle
push
and
ret
into
xchg
jg
push
int
daa
lds
xchg
or
mov
mov
and
jl
sbb
mov
jmp
int
inc
mov
dec
clc
and
push
fidivs
cld
cmc
dec
dec
jmp
mov
and
jbe
mov
pop
jbe
ret
clc
lret
and
filds
add
mov
jne
ja
mov
decl
fstps
orb
fists
add
or
sub
sbb
scas
lcall
mov
pop
lods
gs
mov
mov
lods
dec
push
aad
sahf
mov
call
shll
and
xchg
leave
dec
js
in
sub
cltd
pop
sub
inc
add
push
xchg
add
in
fwait
jg
xor
shll
push
xchg
sub
out
out
fdivr
enter
xor
mov
sub
inc
or
lret
mov
pop
cld
decl
xchg
aaa
xor
xor
int
push
scas
lea
lcall
jle
xchg
xchg
sbb
adc
and
aas
divb
add
incl
mov
xor
xor
mov
dec
or
inc
sbb
lcall
inc
fsts
pushl
cld
lods
fld
in
jno
scas
sbb
add
dec
imul
fs
xchg
pop
rcll
fdivrs
lcall
imul
rorb
clc
pop
or
cmp
fisubrl
popa
sub
cli
pop
cmp
jg
sahf
and
repnz
inc
mov
mov
scas
mov
movsl
or
push
sti
push
mov
imulb
bound
and
xor
mov
pop
lock
decl
pop
ss
jmp
out
insb
push
push
es
clc
cld
aaa
mov
mov
lcall
jg
mov
sbb
cmp
push
daa
int
sub
dec
mov
repz
jl
lahf
arpl
inc
cld
push
mov
aaa
mov
fists
or
pushl
aam
fwait
cwtl
dec
inc
lahf
cmp
test
sbb
cmp
mov
push
pop
add
mov
adc
and
out
jno
inc
ljmp
in
add
xor
mov
mov
xchg
mov
es
ret
sarl
cmp
call
popa
mov
pop
add
xchg
mov
movsl
sti
movsb
aad
in
sbbb
xchg
insb
jo
lock
jg
gs
cmp
imul
mov
daa
inc
xchg
fdivrs
cmp
mov
sbb
xor
test
mov
push
sub
sub
filds
or
imulb
test
mov
push
inc
addr16
cmp
push
leave
scas
xor
push
stos
mov
aad
ret
mov
out
inc
imul
inc
in
inc
mov
and
add
pushl
loope
cmp
scas
push
and
mov
jecxz
les
iret
sarl
dec
add
mov
jmp
adc
inc
jo
mov
mov
cmp
imul
mov
adc
mov
pushf
js
jge
imull
insl
cs
mov
cld
pushl
lahf
and
nop
push
mov
enter
or
js
pop
inc
inc
scas
mov
call
jmp
xchg
lods
notl
xor
pop
jecxz
pop
mov
jo
push
push
pop
cs
adc
incl
and
ret
xor
jnp
xor
push
pushl
in
fwait
scas
pop
lock
int
out
int
inc
and
bound
rcrl
cli
pushl
and
in
mov
loopne
das
add
out
dec
ret
jecxz
shlb
add
inc
jg
decl
mov
pop
mov
jne
adc
jbe
pop
sbb
je
push
sbb
cmpsl
dec
std
adc
lcall
jmp
xor
fsubs
outsb
sub
jnp
inc
add
mov
stc
sub
xchg
or
inc
mov
xchg
mov
ret
sti
lahf
pushf
and
fucomip
insl
imul
test
bound
dec
pop
push
sub
inc
rol
lret
das
enter
sbb
and
lcall
xor
push
mov
mov
sahf
adc
cld
pop
dec
lds
out
inc
out
call
out
lods
insl
out
es
outsl
pop
jecxz
jmp
pop
ss
pop
int3
mov
or
adc
jg
incl
jl
jbe
je
mov
cmc
scas
or
lea
cltd
pushf
aam
insb
adc
cmp
test
mov
pop
mov
aam
sub
mov
jecxz
dec
jecxz
pop
push
fnstcw
sbb
cmpsl
xchg
push
stos
loopne
movsb
and
outsb
or
dec
call
call
pushf
loope
xor
lahf
cmpsl
jo
add
test
popa
icebp
lods
mov
pop
push
dec
test
das
sar
adc
push
pop
pusha
cmp
inc
push
into
and
out
sbb
decl
mov
push
jge
mov
loope
push
and
cmp
in
pusha
mov
out
test
fwait
lcall
dec
test
scas
rcrw
out
or
cmp
testl
fst
pop
pushl
ljmp
or
mov
jnp
sbb
push
pusha
sbb
mov
call
jl
je
loope
or
pop
inc
dec
cltd
and
sahf
xchg
ds
enter
test
call
lock
mov
das
add
mov
ret
sub
cmp
rcrl
pushf
hlt
lcall
out
jo
mov
loopne
lahf
dec
js
repz
cmpl
lcall
mov
int
je
push
mov
add
cmpsb
sub
push
hlt
jb
add
scas
jmp
int3
adc
popa
aaa
sub
test
pop
bound
mov
push
pushl
or
cmp
xchg
sub
or
data16
rcl
in
cs
pop
sub
sbbl
inc
jmp
and
test
or
jne
fdivr
add
in
and
aaa
scas
out
mov
loop
xchg
mov
bound
push
rorb
sarb
movsl
popa
jno
and
xor
sbb
mov
cmc
test
mov
push
mov
pop
mov
or
pop
out
call
ficomps
dec
cmpsl
test
xchg
add
add
sub
decl
push
imul
sub
shrb
icebp
jnp
xor
fs
call
add
bound
jnp
sub
cmp
push
out
mov
incl
sarl
xchg
aaa
call
fxch
dec
jb
jp
hlt
mov
test
ljmp
andb
push
cmpb
and
sahf
cmp
jae
std
jp
sub
cmp
outsb
add
lock
and
xchg
mov
cmp
lea
faddl
push
cmp
lcall
dec
xchg
je
int
daa
adc
pop
je
ret
jnp
popf
fs
iret
dec
xlat
testb
icebp
jg
mov
push
xchg
push
jl
sbb
inc
scas
mov
sti
or
out
xor
sub
int3
push
and
in
cmp
popa
jb
cmp
call
out
test
mov
inc
imul
mov
hlt
mov
dec
pop
ljmp
mov
addr16
stos
rolb
inc
push
mov
mov
addr16
push
mov
andb
xchg
mov
cltd
or
out
xor
lcall
call
xchg
or
push
lea
sbb
push
cmpsl
lea
jno
add
call
push
or
lock
pop
ret
test
jle
xor
arpl
push
xor
add
xor
lock
lcall
push
repz
nop
rolb
mov
stos
sti
mov
inc
call
adc
mov
dec
dec
cld
xor
or
ja
orl
adc
stos
pop
xchg
popa
push
push
pop
and
cwtl
ljmp
jle
adc
or
hlt
ljmp
push
dec
fs
adc
aaa
lea
rcr
xchg
adc
sar
ljmp
push
pop
xchg
mov
mov
push
sbb
xchg
mov
jl
insl
aam
pop
or
nop
inc
push
cli
jmp
loop
xchg
leave
push
stos
jmp
xchg
or
call
lods
sub
lock
loopne
js
sti
pop
pop
test
imul
out
fisubrl
into
div
adc
clc
ljmp
jg
sbb
loop
sahf
fcoml
fnsave
or
ljmp
cli
mov
pop
push
outsl
dec
mov
xlat
add
cmp
out
popa
in
out
ljmp
andl
enter
cmp
je
std
inc
cltd
xchg
lock
ljmp
jle
or
jb
scas
or
push
in
adc
and
or
and
incl
pop
stos
xor
mov
fsubrs
incl
cld
jmp
xchg
xchg
or
clc
cld
sbb
fwait
sahf
mov
gs
mov
lcall
sub
pop
xorb
inc
popf
mov
insb
xchg
mov
insb
or
es
push
jmp
inc
outsl
cmp
sar
sbb
negb
stos
mov
push
lcall
jmp
push
mov
jns
add
cltd
mov
xchg
std
fildll
adc
punpckhwd
outsb
incl
cld
fbstp
adc
jnp
vucomiss
add
mov
pushl
inc
int
imull
dec
pop
pop
in
jo
sub
ljmp
add
incl
mov
inc
inc
adc
jae
rcl
insl
call
or
mov
decl
jle
lds
stc
loop
pop
push
popa
inc
fcoms
adc
imul
cmp
push
jnp
lcall
adc
push
clc
push
in
sub
sub
hlt
aaa
pushf
inc
add
call
rcrl
jle
push
cmpsl
jecxz
mov
imul
fmull
dec
stc
lret
outsb
decl
fisttpll
push
xlat
and
mov
mov
xchg
movaps
ds
mov
sahf
adc
clc
jmp
mov
cmp
les
adc
lods
sub
cmp
imul
les
les
lds
xor
adcb
xor
mov
outsl
scas
fsubrs
inc
inc
fsubl
nop
imul
sub
mov
mov
add
icebp
mov
fbld
dec
sub
ret
loopne
jns
mov
sti
arpl
inc
cmp
jmp
jmp
xchg
movsb
rcll
dec
pop
ret
jg
mov
std
pop
or
daa
and
xor
iret
lahf
and
rorl
xchg
sbb
in
cmc
fmuls
call
std
cli
fstps
ds
mov
int
sub
dec
xchg
outsb
or
subb
add
mov
call
sarl
decl
lock
inc
sti
push
sarl
sbb
jbe
rcll
fcmovb
mov
xchg
xor
and
pop
and
repz
incl
dec
mov
sub
pop
mov
jge
bound
or
lods
jb
mov
cmp
dec
stos
mov
jb
xchg
pop
push
stos
int3
add
xor
sub
test
stos
or
je
jmp
push
sbb
enter
lods
mov
xor
adc
mov
push
cs
and
ljmp
adc
adc
and
or
or
mov
loop
aaa
in
ljmp
jmp
in
inc
mov
mov
int3
cwtl
shr
das
fcomps
lret
sbb
pop
cmc
call
in
daa
xor
sub
mov
sarl
mov
divl
pushl
jg
ficoml
sti
dec
mov
and
inc
in
sbb
fwait
adc
add
ljmp
fwait
mov
call
scas
pop
add
xchg
or
leavew
push
int
jnp
cmp
mov
mov
cld
and
ljmp
lret
jns
pop
in
add
lcall
xor
dec
rorl
in
xchg
rorb
ficoml
cmp
and
fcoms
inc
xorl
hlt
sbb
test
lret
je
loope
stc
aad
jo,pt
and
and
std
subl
cmc
fists
xchg
mov
fucomi
iret
adcb
pushl
adc
rorl
bound
sub
sets
and
hlt
decl
add
xor
push
lcall
mov
lods
mov
xor
mov
lea
jbe
and
cld
and
in
call
ret
iret
in
lcall
mov
iret
cld
add
mov
sti
icebp
es
xchg
lods
push
cwtl
js
xorl
mov
sbb
mov
into
lods
insl
pop
and
pushf
pusha
add
mov
incl
add
lea
sub
adc
push
cmc
add
jns
arpl
mov
decl
jns
jae
fnstcw
rol
dec
dec
test
or
jge
push
mov
push
incl
cmp
test
pop
stos
ror
sub
sbb
out
ljmp
mov
lret
mov
sbb
dec
mov
and
sar
jp
imull
movsl
loope
les
add
pop
inc
jo
cmp
jg
in
stc
das
clc
push
and
mov
cmp
in
or
xchg
scas
xchg
aaa
cld
call
sub
pop
jge
xchg
lret
mov
jo
fwait
pop
mov
mov
std
mov
test
push
into
jbe
and
ret
jae
in
mov
or
push
daa
aam
outsl
neg
ljmp
mov
jge
les
push
inc
in
sbb
jno
test
pop
sub
fs
jnp
sub
call
mov
push
and
jl
cmp
jp
mov
inc
xorb
push
cmp
cmp
cli
cvtps2pd
push
and
test
ret
popf
or
iret
adc
fcomip
incl
lods
outsb
ret
fists
and
jb
gs
fs
or
ljmp
xchg
loop
sbb
pop
loope
movsl
adc
mov
sub
pushl
sbb
ja
inc
mov
mov
in
dec
jle
push
pop
hlt
jmp
adc
cmp
xchg
cmp
out
jmp
or
pushf
cmp
lcall
pushf
insb
mov
dec
jmp
mov
xchg
or
test
mov
lahf
leave
lcall
dec
cmp
xor
std
mov
inc
dec
jge
dec
ljmp
decl
inc
cmp
sub
pop
fbstp
fcmovnbe
sti
sub
jmp
push
pop
jnp
lret
loopne
das
xor
mov
mov
lds
daa
xlat
cmp
repz
cmpsl
dec
sahf
lcall
jno
jns
and
xchg
push
gs
pop
mov
dec
ud0
in
int3
repz
xlat
lods
dec
add
cld
xchg
outsl
test
push
scas
and
jl
outsb
cmp
add
outsl
or
out
pushl
lcall
std
int
test
out
xchg
adc
jmp
and
cltd
es
ljmp
mov
or
out
jg
cwtl
lret
or
imul
or
scas
sub
cld
inc
jg
call
or
imul
jno
test
je
popf
in
inc
xor
paddb
sar
decl
jmp
in
or
enter
add
mov
lea
lret
pop
popf
jnp
int3
inc
call
call
or
imul
fiaddl
push
push
xchg
xchg
jno
jmp
xchg
push
xchg
mov
aas
jle
dec
bound
xor
cmp
roll
test
decl
xchg
fwait
jnp
mov
rcrb
cmp
pop
xor
rolb
addl
add
decl
data16
jmp
cmc
pop
xchg
das
mov
mov
xchg
or
mov
mov
or
movsl
ficoms
decl
lods
out
pop
cmp
outsb
arpl
test
mov
mov
xchg
and
call
cld
ljmp
fiaddl
les
sub
and
mov
mov
jns
incl
cmc
mov
test
out
fstl
xor
in
push
testb
in
fs
xchg
mov
xor
das
clc
sti
cmpsb
lret
cmpsl
cmpsl
jbe
sbb
clc
sahf
test
outsb
sub
lret
cmc
jmp
add
hlt
and
cld
mov
xchg
lret
sbb
dec
js
lcall
iret
lds
mov
mov
xchg
sbb
cmp
out
mov
call
add
mov
imul
addr16
dec
xchg
or
test
adc
mov
hlt
xchg
inc
decl
or
flds
jnp
adc
dec
jg
addl
xlat
add
inc
outsl
shl
in
decl
popa
pusha
xchg
aam
mov
fidivl
mov
dec
int3
pop
mov
int
out
cli
mov
xchg
es
cmp
mov
popa
cmp
xor
pop
rorb
xor
xchg
ficoml
cmp
sbb
lcall
jp
lahf
push
fs
or
rcrb
xor
inc
jb
sbb
jecxz
add
mov
push
popf
jg
jmp
sub
xchg
inc
mov
fdivr
mov
cltd
popa
cmp
mov
test
add
pop
int
lcall
and
je
adc
sbb
inc
bound
leave
subb
nop
mov
pushl
push
inc
outsb
jge
scas
les
push
adc
lods
xor
xor
mov
jmp
jno
inc
cltd
insb
addr16
sub
adc
lods
mov
push
jbe
into
lods
pop
and
xchg
adc
and
xor
sbb
pushf
aas
icebp
outsb
cmpb
sub
into
lcall
push
add
mov
add
push
iret
cmp
pop
cltd
rcl
data16
push
push
jmp
mov
inc
imul
cmp
push
jg
mov
inc
aam
pop
push
add
sbb
jmp
mov
adc
stos
jnp
int
hlt
or
mull
pop
popa
and
mov
mov
ljmp
loopne
cmp
sub
mov
adc
cltd
inc
inc
mov
sbb
mov
arpl
mov
push
mov
fdivp
in
filds
mov
push
addb
loop
mov
inc
movb
sarl
add
clc
call
pop
clc
test
roll
call
push
and
ljmp
and
lea
sbb
inc
pop
ret
xchg
movsb
mov
inc
fistl
iret
pop
pop
lods
inc
push
jge
mov
or
push
jmp
xor
and
jmp
jo
xchg
js
stos
mov
mov
mov
leave
dec
rcrb
pushf
fs
leave
scas
cld
sub
pushl
lock
mov
lods
sbb
rcr
mov
lea
cmp
scas
lcall
dec
mov
jmp
rcrb
test
ret
jecxz
aaa
cmp
pushl
xor
test
pop
jmp
jno
cmp
fwait
xchg
mov
xorb
incl
sbb
fnstenv
fisttpl
stos
addr16
repnz
inc
xor
jg
cli
outsb
or
ds
pop
scas
xor
xor
or
mov
stc
xchg
add
push
test
dec
lret
scas
push
clc
fbld
dec
xchg
adc
ljmp
lods
adc
out
mov
movsb
inc
xor
daa
int3
ret
and
mov
sbb
call
jmp
test
mov
pushf
loop
inc
in
jno
xchg
cmovg
mov
or
pop
jp
aam
sbb
jmp
dec
mov
xchg
test
imul
ljmp
js
out
leave
dec
lea
mov
and
ret
sbb
leave
add
jg
fiaddl
fisttpl
sub
repnz
jg
je
clc
mov
inc
mov
aaa
cld
das
lret
add
loop
mov
jbe
push
inc
test
punpcklwd
cmpb
mov
mov
mov
call
incb
push
dec
push
push
mov
cmpsb
lea
lcall
hlt
or
out
je
aad
lret
jns
repnz
out
rcll
pop
jp
add
push
popa
cmpl
cmp
les
cmp
fdivrs
xchg
cmp
call
movsb
fwait
add
mov
imull
mov
cld
mov
iret
inc
or
jg
or
ljmp
pusha
push
lret
sti
mov
push
mov
cmp
enter
push
into
adc
out
jp
ret
call
mov
jae
inc
shlb
or
dec
pop
xchg
out
movsb
cmp
std
nop
sbb
push
stc
aaa
cld
jmp
out
movsl
pop
test
pop
movsl
dec
test
xchg
ljmp
jnp
sub
pop
and
xor
adcb
inc
adc
sbb
incl
sub
daa
lcall
xor
cmp
xlat
jecxz
in
jecxz
int3
clc
addr16
out
cli
ljmp
xchg
dec
clc
cwtl
adc
aad
pop
into
loopne
scas
test
rcrl
jmp
adc
dec
clc
aam
imul
or
incl
jne
daa
mov
cmpsl
repnz
add
xor
push
pop
add
shll
or
incl
fistps
mov
insl
push
les
lret
push
push
dec
je
gs
ljmp
call
jae
pop
fbld
add
clc
xor
push
es
lcall
mov
mov
pop
movsl
scas
jl
cwtl
mov
ljmp
lret
mov
ljmp
or
movsl
aas
push
dec
push
gs
hlt
adc
aad
pusha
push
icebp
leave
or
fwait
dec
mov
insb
adc
ljmp
push
fistpll
sti
inc
jecxz
stos
leave
push
dec
repnz
push
jmp
adcb
cmp
jge
clc
pushl
inc
scas
xchg
and
and
pop
or
lds
fimuls
out
ficoms
call
sbb
mov
sti
inc
ds
sbb
and
mov
in
cld
jge
xlat
xor
decl
mov
cmp
dec
mov
mov
sbb
push
lret
push
xchg
sahf
lret
cmpsb
xchg
lret
movsl
and
jmp
and
out
mov
xchg
sub
fldcw
in
sbb
pushl
insl
scas
pop
pop
xchg
jae
lcall
repz
mov
jg
das
and
push
pushl
andl
jns
fstpl
pop
push
rcrl
decl
insb
test
mov
std
mov
aam
push
xchg
mov
stos
mov
aam
bound
xor
imul
jnp
push
movsb
std
les
in
ja
mov
outsb
inc
add
push
xchg
xchg
or
rorb
jno
ljmp
or
shrl
inc
and
jns
jnp
lcall
jmp
ss
pop
icebp
and
inc
movsb
nop
push
lods
xchg
and
inc
mov
ljmp
shll
notl
push
mov
xchg
dec
fs
adc
incl
inc
test
pop
fnstsw
test
loope
in
in
insl
rol
stos
jmp
jmp
pop
dec
cwtl
push
popf
mov
loopne
jns
iret
pop
xor
lret
loope
mov
jbe
int
jo
and
int
jl
pusha
mov
push
cmpsl
jge
test
call
inc
pop
jae
mov
loop
cmp
sti
pop
jbe,pn
ljmp
cmp
aaa
cmp
push
ja
pushf
sub
sbbb
adc
add
xor
data16
shll
les
ja
ret
andb
ss
rclb
mov
cwtl
ljmp
mov
sahf
inc
cltd
push
test
jb
mov
shll
xchg
push
jmp
dec
push
int3
sbb
in
cmp
jne
inc
dec
in
fiadds
push
pop
sub
in
adc
dec
jg
or
pusha
stos
pop
insl
mov
lock
clc
mov
cmpb
mov
in
sbb
jmp
pushf
imul
test
sub
fldcw
test
fcmove
or
mov
cwtl
adc
stos
aam
je
out
idivb
fcoms
pop
and
add
mov
aam
add
ret
dec
xor
and
scas
clc
mov
fistps
cmp
out
clc
decl
dec
dec
xor
lods
and
adc
out
in
mov
jmp
push
pop
fnstcw
and
sbb
adc
sbb
cmp
incl
aad
add
or
xor
cwtl
and
mov
pop
clc
push
cmp
clc
sbbb
add
mov
push
test
push
nop
jne
xor
mov
pop
inc
pop
mov
cmp
jg
pop
add
cmp
push
lock
xor
mov
iret
imul
jno
lock
mov
xchg
shr
xor
lea
mov
cmp
cwtl
dec
mov
pop
inc
inc
xchg
test
ds
aaa
inc
sbb
xchg
pusha
mov
ficomps
lcall
daa
adc
jmp
xchg
jnp
mov
xchg
test
es
jmp
xchg
or
jge
test
out
incl
mov
sbb
pop
mov
imul
xchg
ss
int
in
loope
incl
pop
sub
inc
adcl
fisubl
push
push
mov
stos
inc
jmp
imul
sub
push
adc
popaw
out
or
inc
xchg
push
jmp
pop
dec
aad
dec
aas
jge
xor
lcall
decl
jmp
sbb
fs
xchg
daa
imul
dec
fwait
xlat
shll
call
add
or
insb
mov
inc
dec
gs
xchg
out
pop
hlt
sub
decl
hlt
test
shr
mov
aad
mov
sub
insb
jns
cwtl
mov
popa
call
mov
push
stos
and
mov
cmpsl
jne
icebp
cwtl
test
mov
or
xchg
adc
inc
movsl
pop
je
sub
cmp
jno
pushl
sti
mov
sti
xor
pop
jb
mov
aaa
xchg
dec
xchg
addr16
mov
adc
fisttps
mov
incl
pop
mov
pop
mov
lret
shll
movsl
scas
pop
mov
jg
xchg
addl
call
in
lods
mov
push
dec
mov
into
aas
push
sbb
leave
roll
lcall
dec
dec
hlt
xor
pop
xor
mov
adc
adc
inc
and
add
add
das
call
push
adc
push
inc
shl
aad
int3
leave
push
mov
sub
scas
out
aaa
ljmp
mov
bound
jo
inc
movsb
cmpsb
jns
pop
dec
fcompl
fmuls
out
xchg
mov
adc
scas
mov
stc
mov
jp
les
inc
ja
insb
cmpps
dec
push
xchg
decl
rorb
mov
adc
adc
stos
or
jne
push
jnp
push
pop
repnz
sub
inc
dec
fidivs
jge
mov
inc
and
popf
roll
lcall
test
jns
pusha
fdivs
mov
lahf
mov
mov
outsl
mov
ret
mov
lret
or
fisubrl
lcall
cld
ror
fcompl
cmp
movsb
or
adc
rcll
jmp
jo
fistpll
in
sbb
and
or
cwtl
mov
inc
cmc
call
loopne
jle
stos
mov
and
xor
in
sarl
in
add
lcall
inc
mov
jo,pn
fwait
pop
int
add
xchg
mov
or
mov
jnp
mov
or
shrb
icebp
incl
sti
jb
mov
mov
and
mulb
mov
pop
push
xchg
les
decl
lock
ficoml
jl
dec
mov
mov
jmp
outsb
test
cmc
dec
jb
jnp
sbbb
cmp
mov
incl
out
mov
xor
sub
mov
pop
pop
mov
dec
call
scas
lea
sub
hlt
sub
pop
adc
sub
pop
data16
lcall
or
cmpb
loop
push
stos
pushl
push
sahf
cld
mov
leave
out
dec
cmc
push
ret
sub
inc
adc
std
pushl
xchg
pop
repnz
xor
add
push
aas
pop
mov
shll
and
in
ljmp
andb
mov
aaa
jp
testl
cs
xor
pop
add
out
lcall
lods
fists
adc
jnp
cmpsb
adc
push
jg
push
std
push
out
and
jle
sub
call
xor
jecxz
pop
lahf
clc
jbe
sbbl
fmull
sahf
ficompl
xor
cmp
xchg
add
add
mov
out
fsubs
mov
fs
jb
cwtl
push
cmp
ret
xor
mov
repz
dec
push
mov
mov
or
mov
cmp
jns
mov
mov
jno
aad
cmc
dec
cli
mov
outsb
leave
fsubrs
int3
inc
mov
push
jne
mov
je
ljmp
mov
jo
push
and
lock
fistps
stc
sub
or
pop
cmp
call
pop
xchg
lea
aaa
fmul
sub
dec
xor
les
adcl
lcall
ret
je
mov
cmc
adcl
aad
mov
pcmpgtb
push
adc
lock
inc
jge
pop
les
negb
cmp
push
decl
mov
mov
andl
movsl
scas
popf
push
in
outsb
mov
call
pusha
cmpsl
pop
sub
or
cwtl
pop
ds
jg
push
xchg
mov
pushf
cmp
jg
push
popf
sahf
push
js,pn
inc
or
stos
in
sbb
xlat
ret
or
push
call
mov
mov
bound
rcr
hlt
pop
add
mov
bound
mov
fcoms
rcll
out
std
repz
pop
or
jbe
scas
jb
xchg
push
aam
mov
call
sbb
fistpl
out
cmp
xor
or
and
pop
jbe
jae,pn
jp
lcall
incl
cmp
pop
dec
and
sbb
ret
incl
cld
cmpsl
push
fiaddl
cmpsl
mov
cmp
inc
xchg
add
mov
ljmp
jmp
and
es
lret
test
jbe
mov
hlt
incl
push
adcb
ss
jb
mov
jecxz
adc
int
ss
jb
or
leave
movsb
inc
repnz
stos
xchg
mov
lcall
scas
mov
pop
pushf
int3
icebp
shl
out
aaa
push
call
in
jg
push
pushf
and
sbb
mov
push
pop
test
rcrb
inc
lret
push
sub
test
inc
sbb
fdivrp
ljmp
mov
mov
jp
jbe
lods
in
jl
rep
shl
mov
mov
cli
push
mov
test
cmpsb
sti
sbb
rcrl
xlat
pop
mov
sbb
pop
loopne
inc
pop
ror
adc
pushl
fwait
inc
xor
outsl
fnstsw
aam
ss
jge
jg
cld
jp
adc
dec
fs
add
mov
fucomp
xchg
imul
decl
xchg
iret
stos
movsb
pop
loop
sbb
push
dec
xor
repnz
add
loop
insb
jg
out
cwtl
pop
fsubl
test
pop
rorl
xchg
xchg
push
and
mov
jo
or
in
xchg
nop
inc
out
jno
adc
pop
mov
or
rcl
jne
js
sub
aaa
ficomps
xor
xchg
incl
sti
roll
scas
mov
mov
push
aad
lcall
mov
ljmp
sbb
sti
xor
repnz
dec
fldl
iret
lea
test
xor
out
inc
lea
fcomps
mov
insl
test
xchg
mov
push
subb
xor
xchg
xchg
sbb
ljmp
clc
dec
test
pop
jl
in
cmp
lret
dec
jmp
jae
addb
jb
iret
sti
popa
mov
jle
aas
push
inc
ret
sub
je
add
fistl
xchg
jno
lcall
clc
movsl
fucomp
and
jbe
xchg
jo
mov
sbb
adc
lret
xlat
cmp
ljmp
js
pusha
in
leave
sbb
push
xchg
test
xchg
movsb
mov
pop
fwait
pop
jg
jg
xchg
call
fcompl
lcall
sub
call
jae
xor
ret
lret
mov
mov
xor
jmp
pop
fwait
add
jmp
and
lods
repz
sbb
lahf
cmp
inc
pop
sub
pop
jle
pop
xor
adc
movsl
push
and
sbb
xor
gs
int
dec
xor
add
decl
fiaddl
mov
xlat
scas
fimull
xrelease
imul
push
cmpsb
mov
or
ja
dec
movsb
enter
lea
stos
rorb
dec
insb
out
sbb
ljmp
clc
mov
pop
leave
inc
loop
dec
mov
ljmp
ficompl
enter
decl
add
sti
es
mov
push
jmp
inc
sahf
test
fbld
adc
incl
orl
ja
xchg
push
scas
mov
jg
pop
xchg
xchg
inc
xchg
test
sbb
and
stos
add
flds
lcall
flds
or
ret
cld
sbb
loopne
inc
fcomps
inc
jbe
xor
xorb
add
jne
xchg
pusha
je
rorl
push
imul
call
stos
ret
xchg
adc
inc
pop
xor
dec
mov
mov
and
add
call
fadds
mov
movsb
orb
inc
pop
neg
les
out
pusha
mov
pop
cli
lahf
adc
pop
dec
loop
push
mov
out
aad
add
pop
shrb
pushl
sub
lret
mov
gs
sub
in
jl
mov
inc
stos
js
lds
jmp
out
call
clc
sbb
jecxz
xor
sti
adc
jge
fcomps
mov
dec
inc
jnp
andnps
xor
sub
lcall
in
ja
push
mov
out
mov
jg
or
aad
outsb
notl
cmpsl
ror
aas
adc
pop
cld
decl
in
sbb
pop
and
jg
xchg
push
out
dec
shl
mov
iret
ljmp
jae
dec
cwtl
in
xlat
pop
or
leave
or
lret
mov
or
test
mov
jg
add
inc
adcb
out
lret
out
std
ljmp
adc
adc
mov
insl
bound
adc
repz
mov
and
xor
xor
xchg
sub
sbb
and
dec
aas
inc
dec
pop
inc
mov
lcall
incb
cmpsl
call
mov
dec
lods
mov
inc
dec
dec
pop
add
imul
incl
insb
and
adc
xor
xchg
hlt
dec
mov
stc
and
iret
xchg
xchg
mov
jmp
jb
and
push
fcoml
insb
xor
dec
add
repz
mov
xor
jne
or
mov
jmp
pushl
in
xor
cmp
loop
jb
pop
sbb
pop
ds
lock
and
lcall
adc
and
mov
jne
or
cld
push
mov
cmp
fs
sub
or
lcall
inc
gs
scas
cmp
xor
fwait
xor
std
fsub
arpl
jl
or
adc
cmpsb
pushl
sbb
les
mov
iret
mov
mov
mov
aaa
scas
shrl
and
adc
imul
int3
test
fisubrs
xchg
or
mov
adc
lcall
cs
and
inc
push
ljmp
xchg
push
pop
fistpl
inc
popf
ss
sbb
scas
mov
mov
push
aaa
cmp
arpl
sub
lods
mov
call
addr16
scas
mov
data16
jne
xchg
add
stos
in
adc
jmp
nop
mov
sbb
push
adc
enter
push
push
and
cmovle
jmp
pushf
adc
js
fs
pop
fwait
pop
icebp
stos
adc
cmc
js
scas
push
jmp
test
loopne
aaa
and
rcll
push
and
mov
mov
inc
mov
mov
pop
jnp
mov
cmp
mov
jecxz
mov
out
out
cs
aaa
cld
mov
mov
cmovns
vmovmskps
lret
loopne
adc
pop
sbb
clc
call
sbb
adc
popa
ja
lret
sti
add
cmp
bound
cmp
add
mov
aaa
mov
push
mov
and
call
fcomps
insb
or
sbb
sub
imul
ljmp
clc
lahf
adc
insb
pop
ret
ficomps
fildll
jne
or
test
cmc
xchg
add
fcompl
movsb
mov
les
repz
ljmp
ret
inc
dec
pushw
jmp
push
sub
add
or
addr16
lea
inc
int
push
sbb
addr16
arpl
cs
inc
mov
inc
sbb
xchg
rcll
cltd
mov
cmp
ljmp
int3
pop
inc
lret
mov
pop
cltd
sarb
fwait
lds
mov
lcall
push
inc
sar
incl
sbb
jmp
lea
dec
jl
mov
jp
btc
mov
inc
and
mov
incl
dec
push
push
aas
or
sti
dec
pop
ja
adc
xor
and
push
or
and
mov
sub
xchg
or
pop
mov
mov
jnp
je
shrl
fistpll
mov
adc
jns
xor
fsubrs
in
insl
jns
ds
out
mov
ljmp
jge
mov
and
mov
pop
int3
mov
lahf
inc
jne
mov
xor
xchg
dec
jmp
push
mov
es
ljmp
cmpsl
mov
add
fstpt
push
or
jl
mov
faddl
xor
ljmp
in
icebp
das
test
xchg
or
subl
xlat
nop
dec
das
mov
and
sahf
dec
and
jo
xchg
cmpl
es
jb
jg
cmp
dec
clc
push
xchg
push
lret
sbb
out
inc
lea
shll
push
insb
dec
ss
js
fsubr
cwtl
fistl
sub
cld
andb
push
xchg
les
inc
aas
mov
adc
in
jns
mov
pop
clc
lret
pop
xchg
sbb
repz
xor
aam
into
cmp
mov
mov
mov
add
xchg
mov
ljmp
ljmp
jns
cmp
mov
int3
outsb
lcall
sbb
cmpsl
inc
out
adc
cltd
push
mov
jg
or
cmp
test
dec
pop
test
pop
jmp
and
lss
sahf
xchg
mov
mov
cs
cmpsl
mov
pop
int3
out
jmp
lret
out
cmp
jb
add
sbb
jae
aam
in
repnz
cs
fistps
pop
jo,pt
jb
gs
decl
imul
lcall
sub
lahf
lock
ljmp
sub
and
in
aas
enter
sub
cmpb
xchg
gs
push
js
and
xor
lahf
in
mov
xchg
mov
std
xor
pusha
int
add
icebp
fs
out
mov
aad
jg
aam
mov
inc
mov
pop
outsb
jg
ficompl
shlb
fists
mov
cmpsb
lea
push
mov
stc
int3
mov
hlt
mov
or
jg
push
lods
xorb
std
xlat
test
add
out
clc
push
inc
rolb
sbb
lret
lahf
popa
adc
movsl
ror
lods
inc
dec
xchg
loope
sbb
sarl
cld
jge
jns
sub
sub
scas
test
incl
cmp
sbb
sbb
pop
push
jecxz
adcb
fdivrs
ss
lcall
push
shlb
gs
repz
data16
insl
in
call
iret
and
incl
loope
xchg
dec
push
stos
dec
dec
push
or
push
cmpl
push
add
ljmp
jmp
leave
pusha
inc
loop
nop
sbb
mov
adc
in
sub
pop
pop
mov
mov
push
adc
mov
xchg
xchg
cmc
xchg
stos
fnstcw
or
sbb
sar
adc
pop
ja
fstpl
mov
dec
push
jg
push
jb
jmp
and
inc
jbe
in
sub
adc
je
mov
pop
out
or
sub
in
dec
push
xorb
movb
mov
fisttpll
ud0
mov
sbb
fmull
stos
test
push
mov
je
imul
in
sbb
incl
dec
fnstcw
jne
cld
dec
lods
jg
out
cmpsb
pop
imul
lds
xchg
movsl
mov
cmp
mov
aam
sub
lcall
jns
cmp
pop
gs
mov
adc
ror
iret
leave
enter
repz
inc
icebp
jnp
sarl
push
jne
xor
cwtl
cmp
cli
jp
in
sub
decl
adc
mov
sub
jmp
xchg
jmp
pop
ljmp
addr16
ljmp
xor
add
push
int
out
mov
mov
push
in
or
adc
test
add
push
sbb
sub
xchg
leave
cmp
rorb
js
mov
dec
adc
xchg
mov
jmp
loope
mov
inc
cmp
xlat
ret
inc
sub
addr16
sahf
xor
ror
out
lods
pop
sbb
imul
loop
enter
jg
cmpsb
packssdw
push
pushf
sbb
inc
in
sub
fildll
insl
popa
scas
mov
xchg
xchg
dec
push
xchg
clc
stos
lcall
das
addb
ja
jl
aas
decl
mov
and
xlat
lea
xor
mov
push
mov
sarb
jmp
add
push
mov
fcomip
xchg
push
nop
faddl
mov
mov
pop
sub
or
cmpsb
mov
cmp
pusha
sub
fdivrs
jo
xor
clc
pop
pop
aaa
inc
ret
add
mov
dec
sub
js
jb
pop
and
popf
mov
inc
xor
out
and
dec
inc
in
push
negl
or
adc
in
mov
inc
jmp
sbb
shll
enter
jle
jo
inc
popf
enter
ljmp
xlat
fucomip
rcll
in
inc
rclb
push
fwait
mov
stc
dec
loopne
lgdtl
push
sub
xchg
int
cmp
das
xchg
ljmp
pusha
sub
inc
pop
ds
stos
iret
push
pop
jp
mov
ja
hlt
dec
add
add
add
stos
cmp
out
cli
push
call
push
mov
enter
fs
mov
jmp
push
mov
decl
out
xor
insl
stc
dec
mov
adcb
dec
mov
decl
adc
dec
mov
incb
outsl
sbb
adc
adc
and
jmp
iret
aas
in
pop
and
dec
or
dec
jge
add
out
cmp
inc
scas
xor
mov
jbe
int3
loopne
mov
mov
pop
cli
ss
add
ret
sbb
fdivrp
fwait
dec
jp
or
lcall
xor
cmc
add
add
adc
xor
pop
xchg
sub
sarl
subb
call
add
xor
fnstenv
les
out
push
int
dec
pop
pop
aaa
pop
out
pop
sbb
jp
mov
loopne
and
sbb
mov
ljmp
hlt
ja
decl
insb
ds
xor
lods
jge
xchg
jne
cmp
es
and
lea
testl
mov
xorb
lods
daa
push
pop
mov
mov
test
sbb
push
mov
movsb
mov
fadd
push
loope
xorb
add
mov
adc
jl
in
lock
in
cwtl
call
add
add
lret
push
cld
lret
dec
gs
lcall
xchg
add
out
subl
jno
lret
in
push
xchg
sbb
repnz
xchg
arpl
pop
lock
xchg
in
popa
or
data16
lret
push
loop
xchg
decl
or
shr
xor
sbbb
push
test
adc
push
sbb
or
call
adc
mov
pop
ljmp
mov
xchg
dec
cmp
add
xlat
popa
push
mov
lahf
cmp
test
pushl
sbb
adc
inc
movsl
movsl
inc
inc
fsubrp
pusha
decl
or
call
sbbl
test
and
test
call
ljmp
shl
lds
out
cmp
mov
cmc
dec
mov
ret
ret
inc
jmp
dec
cli
pop
repnz
inc
shll
test
push
fcomi
sub
xchg
leave
cmp
cmp
lahf
jbe
subb
sbb
inc
pop
ljmp
iret
je
outsl
and
jecxz
xchg
mov
sbb
out
pop
add
mov
sub
sbb
adc
out
jns
xor
push
sti
cmp
sub
lcall
adc
pop
mov
daa
inc
int3
or
pop
pop
mov
lahf
sbb
loopne
stos
mov
pushl
xchg
mov
inc
or
nopl
or
push
ss
or
js
add
sahf
mov
shr
mov
test
or
out
movsb
bound
adc
xchg
insb
cld
pushl
mov
fdivl
dec
jno
xchg
mov
xor
sahf
mov
in
leave
adc
mov
xor
incl
lcall
push
and
dec
sub
sub
sub
ljmp
mov
fmull
mov
xchg
sub
xlat
mov
sti
cmp
jmp
add
inc
pop
pop
pushl
sub
pusha
mov
or
decb
cmp
lcall
scas
xor
aaa
imul
test
inc
xchg
in
loope
fst
cmp
xchg
shlb
inc
pop
out
pop
popa
lcall
pop
int
js
aam
and
xchg
scas
das
imul
inc
repz
mov
jmp
test
sub
sti
or
cmpb
lods
arpl
adc
xchg
decl
lock
ret
jp
push
dec
cld
or
mov
les
jb
out
mov
adc
daa
xor
jns
aam
pop
insl
fcmovnb
lcall
insl
loope
fildll
ret
ljmpw
pushl
and
jmp
dec
push
jp
push
leave
into
lahf
mov
adc
addr16
adc
add
add
lcall
mov
enter
mov
and
mov
std
out
movsl
hlt
dec
roll
ljmp
pop
push
jl
insl
imul
mov
int
ret
pop
jno
negb
addb
add
push
int
push
xor
inc
arpl
dec
mov
test
into
cmp
push
cld
int3
inc
push
test
jb
add
jae
enter
in
inc
push
ret
loopne
dec
dec
mov
ljmp
inc
roll
or
das
adc
icebp
mov
movsl
pop
pushf
pop
test
lcall
lcall
imul
mov
push
mov
jne
or
pop
jmp
cmp
lods
imul
movdqu
sbb
mov
ds
call
and
rcll
loope
mov
jmp
sahf
push
cmp
pop
lcall
lcall
hlt
dec
cltd
out
add
int
addr16
ljmp
int
or
or
lcall
in
jnp
loopne
icebp
mov
xchg
iret
xor
mov
add
jmp
mov
sbb
mov
cmpsb
sahf
push
std
incl
ss
adc
aas
es
pop
jo
in
aaa
cld
dec
push
cmp
ldmxcsr
shrd
and
jnp
ret
sub
rorl
ljmp
and
fldl
mov
pop
cltd
mov
jb
jge
ret
movsl
mov
test
push
cmp
sbb
cwtl
mov
sub
aas
mov
decl
push
out
arpl
mov
stc
mov
stos
insl
xchg
push
mov
xchg
sbbb
ljmp
idivl
xor
jnp
loop
outsl
xor
pop
mov
xor
movsb
mov
add
push
popaw
lcall
mov
std
fimuls
cmp
add
push
jg
dec
mov
xchg
inc
addr16
cld
test
std
cltd
cmc
xlat
std
rdmsr
mov
mov
loopne
outsl
xchg
and
cwtl
cmpsl
insl
mov
into
mov
daa
mov
test
cmp
or
xchg
push
scas
xchg
jo
iret
xchg
popf
lea
in
pop
jecxz
mov
addr16
popf
jne
fistps
mov
mov
jmp
jns
or
sbb
inc
sbb
test
xor
incl
inc
popa
xor
cmc
cmc
rolb
fimuls
cltd
pop
aas
xchg
xchg
xor
xchg
sbb
adc
repnz
xchg
movsb
push
scas
pop
ljmp
incl
sti
mov
or
or
ror
push
loop
push
out
mov
and
outsl
jae
mov
xchg
xchg
icebp
out
rcl
fists
mov
js
pushl
push
jmp
pop
outsl
cmc
rclb
rcl
push
cmc
push
xchg
jno
mov
sti
adc
pop
sbb
push
or
pop
mov
lahf
sbb
ja
sar
lcall
dec
outsb
mov
ror
shlb
jno
inc
repnz
popa
mov
jg
and
add
fistps
dec
leave
shrl
shlb
rol
add
repz
cmp
sbb
mov
push
jecxz
mov
mov
mov
mov
fs
mul
xchg
pop
mov
fcomps
lcall
sbb
cmpsl
xor
and
pusha
addr16
mov
mov
mov
adc
lcall
mov
mov
lds
push
pushf
mov
in
mov
cmc
lahf
dec
aad
jbe
imul
decl
jno
test
jbe
aam
push
mov
icebp
jg
icebp
call
add
xor
cmpsl
int3
mov
add
mov
inc
pusha
ret
cli
lcall
in
aam
repnz
stc
mov
mov
push
jp
push
hlt
lods
mov
sub
lcall
cmpsb
cmc
mov
ss
mov
insl
sarl
nop
pop
test
shrb
or
xor
push
cmpsl
imul
push
test
addr16
push
jmp
push
jmp
mov
dec
bound
repnz
int3
test
test
xchg
fildll
decl
shlb
or
lods
mov
add
lea
pushf
adc
sub
jg
pushl
cmp
push
inc
xchg
out
cwtl
mov
les
movsb
and
in
mov
jge
mov
pop
add
add
or
sub
cmovne
lods
lods
fs
push
sub
decl
pop
shlb
ficoms
nop
jne
dec
and
inc
js
pop
dec
xchg
in
and
fistpll
into
cmc
jg
jno
fsubs
sahf
mov
pushl
sub
cmpb
cwtl
ss
cld
nop
aad
in
call
and
dec
mov
xor
das
push
cmp
mov
mov
cli
pushl
jno
jl
jb
jns
inc
jns
mov
and
mov
lea
push
jmp
or
dec
ficoms
inc
roll
mov
inc
incl
mov
mov
sub
sarb
xchg
or
ljmp
xor
cmpsl
dec
loope
sbb
xor
rorb
js
adc
aaa
cld
and
cs
cmp
clc
aaa
cld
lcall
push
jle
loopne
lret
pop
sbb
movsb
xchg
fldcw
jbe
es
xor
adc
sahf
sub
add
push
push
xor
loopne
push
ljmp
jg
cmc
sti
in
stos
sub
xchg
mov
dec
add
mov
mov
inc
mov
jmp
roll
iret
jnp
jecxz
std
jmp
pop
xchg
imul
f2xm1
loope
test
aas
mov
decl
pop
xlat
scas
hlt
xchg
push
addr16
jb
push
cmp
cmp
call
jns
jge
mov
inc
mov
fs
cli
push
mov
and
mov
stos
sti
stos
cmp
in
sbb
and
or
je
pusha
cmpsl
ss
xor
test
mov
pushl
ffreep
mov
ret
lahf
sub
ljmp
lds
or
outsl
clc
call
sub
jg
rcr
push
icebp
push
or
stc
sbb
cmc
sahf
mov
decl
mov
xorb
dec
sbb
pop
addr16
and
jnp
cmp
gs
int3
stos
add
dec
sub
mov
mov
or
mov
pop
cmc
pushl
sbb
push
repz
mov
outsb
jge
adc
sbb
je
mov
lcall
scas
inc
rol
sub
sub
push
hlt
dec
mov
popf
loopne
les
mov
in
adc
rcl
les
addr16
mov
dec
test
push
aaa
and
mov
decl
dec
loop
sub
test
xor
xchg
test
mov
movsl
cmp
pushl
push
add
pop
adc
insb
pop
pop
cmp
sub
xlat
xor
push
loopne
dec
icebp
sub
and
cmp
cmc
sub
push
lods
rolb
or
add
incl
push
xor
add
outsb
in
cmp
jne
xchg
fs
mov
outsl
inc
fs
mov
icebp
mov
daa
inc
imul
pushf
xlat
xchg
sti
ss
aas
rcll
adc
rcrb
and
mov
pop
dec
ret
call
xor
sbb
push
daa
leave
inc
jg
cmpsb
push
sub
test
sbb
pop
and
dec
mov
ljmp
jp
cmp
mov
add
or
lods
bound
clc
in
adc
ljmp
push
jecxz
and
fdivr
jle
or
mov
out
or
pop
xor
std
mov
ljmp
mov
mov
pop
sbb
mov
lcall
cld
or
push
rolb
xchg
iret
mov
outsb
es
pop
das
es
jg
incl
xchg
jae
sub
sbb
sub
popa
mov
pop
dec
sti
or
loop
out
pushf
jle
jg
iret
push
jg
nop
lret
movsb
repz
shll
adc
xor
gs
vmread
xor
call
jg
push
cmp
mov
or
out
ja
mov
out
push
xchg
insb
outsl
cmp
sbb
call
xor
xor
call
or
push
fistps
ljmp
insb
fimuls
xchg
xor
scas
aaa
cmpsb
dec
shll
lcall
xchg
hlt
enter
test
jne
and
lock
aaa
cwtl
sti
add
inc
or
pop
mov
sub
cld
cld
ret
paddw
push
popf
dec
add
adc
add
or
test
int
icebp
call
mov
icebp
jno
adc
js
jg
inc
xor
mov
ds
jg
lods
movsl
add
cld
add
push
jmp
std
jg
lret
inc
mov
fstpt
pop
aaa
adc
repz
add
mov
int3
sahf
cld
xlat
das
cli
pop
or
lea
mov
cwtl
pushf
or
in
lret
sar
sub
test
stos
cmp
pop
add
movsb
out
and
jb
sub
mov
sar
out
mov
mov
xchg
push
insl
fidivl
mov
popa
or
mov
adc
aad
lret
fdivs
xor
test
inc
shr
pop
cmc
out
jbe
or
or
movsb
jne
mov
movsl
mov
inc
stos
adc
jae
nop
icebp
push
push
jl
push
mov
mov
les
and
jnp
pop
push
repnz
jg
dec
loopne
bound
add
mov
cmp
sbb
out
push
stos
inc
stos
pusha
je
faddp
movb
xor
psubb
or
xlat
pop
mov
incl
cmc
cmp
pushf
sbb
add
aas
inc
or
adc
inc
leave
sub
stc
loopne
idiv
fsubp
ds
sub
daa
shrl
in
mov
mov
in
or
aad
sti
outsl
pop
cmp
pushl
jp
mov
faddl
insb
fstps
jno
inc
mov
into
je
jmp
ffree
lds
cmp
das
or
pusha
sub
sarl
js
shlb
pop
push
test
leave
push
les
icebp
lcall
jmp
cmpsl
sbb
adc
pushf
fbld
enter
jg
fcomip
fucomip
mov
arpl
push
cmp
sbb
dec
adc
decl
les
add
jl
push
ja
cmpl
jecxz
testl
nop
push
mov
pop
and
adc
jmp
sub
pop
js
js
ljmp
popa
iret
test
loope
mov
jecxz
sbb
fidivl
stc
and
outsl
xchg
fistpl
mov
sti
loop
repnz
aaa
pushf
cmpsb
sbbl
or
decl
dec
fnstcw
mov
jo
pop
sbb
xor
pusha
lods
mov
idiv
inc
or
shrb
fucomi
push
iret
and
movl
dec
js
scas
sbb
lcall
shll
arpl
insl
frstor
icebp
cmp
add
cli
adc
jl
cmp
subl
adc
jo
pop
cld
decl
lock
lahf
xor
cmpl
fcomip
pushl
testl
fbld
push
sbbb
sub
filds
or
xorb
repnz
push
je
inc
adc
xchg
mov
mov
imul
cmpps
inc
call
ficoms
cli
cs
pop
mov
add
sub
mov
inc
jecxz
shl
insl
xchg
xchg
movhlps
stc
cli
call
lcall
fldenv
int
in
mov
lret
into
jne
sub
inc
fildll
push
jmp
cmp
mov
decl
sub
pop
hlt
adc
sarl
push
push
inc
shlb
mov
push
fiaddl
pop
sbb
xor
repz
push
in
inc
mov
and
lcall
xchg
scas
or
xchg
lods
adc
mull
push
pop
or
incl
data16
mov
rorb
push
clc
into
scas
add
sub
aad
aaa
jae
ja
inc
call
loopne
dec
pop
leave
pop
js
and
push
lods
out
inc
filds
pushl
das
jl
xor
rcrl
js
jg
lcall
sbb
out
ds
sti
out
aam
rorl
mov
aam
mov
ljmp
imul
std
inc
lahf
int3
push
insl
inc
xor
test
test
sbb
sbb
aaa
cld
jmp
pushf
sub
nop
dec
push
dec
lret
ss
pop
in
andb
adc
sub
mov
out
aam
scas
pusha
xchg
cmp
mov
xchg
and
inc
pop
shrl
lods
inc
cvtps2pd
mov
mov
rcl
cltd
mov
jle
and
add
add
jg
aaa
ret
fimuls
sbb
jg
ljmp
incl
xchg
in
xor
pop
jge
add
jle
mov
add
sub
pop
sahf
jbe
out
cli
ljmp
push
cs
iret
sub
loopne
icebp
lcall
lcall
pop
into
and
mov
clc
add
out
xchg
add
adc
jmp
xchg
mov
nop
dec
mov
loope
rclb
and
push
loop
lahf
fdivs
inc
jbe
push
std
fcomip
add
jnp
pop
lods
xchg
faddl
out
call
in
mov
iret
sub
in
sahf
xchg
pop
test
in
xchg
js
mov
ss
inc
ds
decl
les
es
push
movsl
jg
aad
pop
sbb
out
xchg
testl
icebp
sbb
ret
call
push
in
xor
adc
sub
xchg
ds
or
dec
jmp
jmp
jo
adc
mov
add
cmp
roll
stc
add
pushl
dec
sbb
addr16
or
or
insb
out
add
daa
or
mov
and
mov
jno
dec
aas
cwtl
xchg
imul
sbb
incb
stc
mov
int
call
fldcw
mov
out
ret
and
push
xchg
out
pop
mov
fnstsw
xchg
out
out
mov
imul
or
in
pop
jno
test
push
mov
call
jmp
sub
jne
insl
adc
sbb
popf
and
dec
add
push
icebp
inc
adc
aam
rclb
mov
mov
iret
mov
push
lcall
mov
dec
loop
pop
xchg
sub
or
push
sub
jg
imulb
jmp
push
pop
sub
fnstcw
push
push
xchg
or
sti
sahf
pop
dec
shlb
sub
lock
fwait
ljmp
adc
cli
test
fisttpl
roll
or
cmp
cmp
inc
fadds
jmp
add
adc
dec
or
dec
dec
pop
je
or
mov
outsl
cmpsb
fdivr
inc
lds
add
sbb
sbb
jne
rol
xchg
aad
call
pop
dec
dec
mov
jbe
jge
xchg
mov
xchg
pusha
lea
add
push
pushl
movsb
sti
sub
in
lea
test
jnp
xlat
lods
mov
shl
mov
ja
jmp
mov
pop
loop
imul
dec
mov
das
ss
push
int
imul
mov
decl
daa
sub
inc
dec
cli
xchg
and
push
xchg
mov
cltd
mov
das
clc
incl
xchg
cmp
adc
pop
sbb
and
pop
jnp
fs
pushl
clc
or
fildll
jecxz
push
lret
jp
push
std
xor
push
dec
fsts
cld
out
pushl
rclb
ljmp
add
xchg
lods
pop
rorb
sbb
or
xchg
lcall
xor
sub
mov
push
mov
shl
push
sub
popa
and
das
xchg
or
stos
jmp
inc
cwtl
push
inc
adc
jmp
dec
test
xor
xor
push
mov
dec
ret
int3
dec
mov
xor
jae
pop
hlt
pop
lock
aaa
add
or
xchg
les
lcall
mov
fs
inc
std
cmpsb
xchg
mov
lods
cmp
xchg
xor
push
mov
and
dec
inc
mov
sub
add
decl
fistpll
jae
mov
sub
sbb
nop
lock
dec
xchg
test
js
callw
pushl
std
lcall
mov
fdivs
lods
lahf
xchg
xchg
xlat
adc
rclb
sbb
ljmp
ret
dec
stos
adc
ss
out
mov
addr16
lods
mov
fbld
outsb
cli
enter
pop
xor
jle
mov
movsb
call
sahf
lret
jecxz
call
cmpsb
cwtl
xor
jae
bnd
lret
adc
cmc
mov
std
sbb
adc
sbb
lods
inc
mov
aam
xor
ja,pt
hlt
inc
std
or
ficompl
dec
mov
mov
mov
stos
mov
pop
movsb
jmp
mov
dec
jg
leave
or
jo
scas
call
rcrl
ja
or
data16
sub
decl
and
pop
negb
mov
dec
ljmp
in
cmp
dec
dec
jnp
loope
and
stos
jg
sti
jg
lods
and
and
dec
out
in
dec
lahf
inc
cltd
and
lcall
pop
and
inc
mov
cmc
test
and
xor
adc
insl
xchg
jnp
loope
inc
sub
out
add
sbb
cmp
or
jo
adc
enter
mov
push
lock
outsl
aad
call
cltd
incb
push
cmp
idiv
cmp
in
mov
leave
stos
jno
mov
fidivrl
push
js
sti
out
or
ror
inc
pop
pop
movsb
or
fisttps
push
xor
pushl
fstps
cmp
push
cmp
sbb
mov
xchg
and
push
mov
mov
fwait
push
xchg
jo
dec
fsubrs
std
insl
out
pop
sbb
fisubs
jge
cltd
and
dec
out
xchg
xchg
push
pop
in
jp
cmpsb
and
mov
sub
addr16
lcall
shrb
pop
pop
orl
movsb
jb
and
int
push
lcall
pushl
fwait
mov
push
ror
mov
jo
and
lods
add
pop
inc
sarl
push
push
push
inc
inc
pop
clc
jmp
jmp
aam
xchg
jecxz
not
mov
sar
dec
dec
pop
dec
xlat
add
imul
call
ret
stos
xchg
inc
out
dec
jnp
mov
outsb
lods
cmp
mov
fstpl
xchg
mulb
inc
cli
sbb
sub
decl
jle
jb
ja
xor
fstpt
ljmp
iret
and
sbb
jae
and
jmp
pop
insl
or
nop
insl
cmp
xchg
jg
cmp
andb
lea
call
mov
lret
xchg
int3
push
push
xor
popa
mov
int3
mov
repnz
cmp
call
mov
add
xor
cmc
and
xchg
mov
sarl
out
andl
fldcw
movsb
xor
mov
testb
test
insl
das
sub
popl
mov
ljmp
mov
fmulp
lcall
call
inc
xlat
add
repnz
push
mov
cli
test
push
and
cmp
push
pop
or
dec
out
xor
popf
test
adc
push
adc
inc
or
mov
mov
in
ss
mov
jmp
ret
popf
xor
jno
gs
jmp
mov
mov
mov
mov
push
std
mov
cltd
sub
mov
and
imul
sbb
mov
stos
pop
mov
scas
sbb
pop
iret
dec
lahf
rcrl
repnz
cmp
inc
int3
stc
and
lods
cld
mov
inc
xchg
data16
aas
ret
dec
and
cmp
mov
test
xchg
pop
push
push
loopne
cmp
incl
mov
xchg
mov
out
fisttpll
or
push
popf
rcrl
jmp
ds
lcall
inc
add
jmp
lods
addr16
push
xchg
gs
or
enter
push
or
decl
push
lods
cmp
fildl
dec
popf
cmp
and
and
hlt
in
inc
lret
mov
and
pushf
dec
inc
mov
jne
mov
les
into
repnz
mov
add
sti
stc
adc
mov
lcall
shl
subl
icebp
cmp
and
mov
cmp
nop
jae
pop
gs
xchg
addr16
in
fadds
sub
icebp
xor
call
int3
addb
stos
mov
jno
push
dec
js
imul
call
inc
jp
mov
or
inc
js
lods
movsw
fcomip
push
mov
and
pushl
cld
jnp
outsb
xor
sub
movsl
dec
xchg
movsb
mov
loope
cli
ljmp
mov
loope
push
jle
pop
jb
arpl
or
test
ret
sahf
cmp
jg
icebp
js
ret
mov
push
ficomps
cli
adc
jmp
mov
dec
subl
xor
lods
jns
call
push
pop
shufps
pop
mov
decl
and
mov
add
fs
cs
lret
inc
fcompl
std
lcall
mov
cmp
into
adc
or
ficoms
ljmp
mov
fs
xor
andb
or
fwait
and
js
std
cld
ljmp
mov
add
in
mov
imul
cmp
mov
aaa
mov
pop
push
jbe
jmp
mov
dec
std
pusha
jecxz
push
repnz
incl
sbb
mov
push
and
pop
loop
cmp
int3
je
pop
sar
jmp
xchg
add
mov
xchg
inc
popa
inc
fs
mov
add
dec
inc
insb
mov
ljmp
jbe
jp
mov
and
sbb
out
dec
adc
decl
sahf
aas
pop
pop
add
and
dec
xchg
sub
fbstp
mov
dec
outsb
fstps
jge
aas
in
into
push
mov
pushf
cmc
sbb
pop
sbb
clc
decl
in
mov
push
pop
lods
dec
jb
into
es
mov
jae
ljmp
xor
cmp
jecxz
sub
or
jecxz
lock
insb
and
push
xor
mov
mov
mov
out
lret
and
pop
sub
in
jns
mov
jne
lcall
inc
sbbb
xchg
roll
jmp
ljmp
in
xor
mov
jo
adc
push
daa
jbe
cmp
jg
mov
push
int
decl
mov
fisubl
pushl
out
jmp
and
inc
std
fcomp
cmp
jg
adc
clc
out
idiv
out
inc
nop
mul
cmpsl
cmp
cmpsl
push
push
pushf
mov
fcmovbe
pop
pop
stos
rcll
lcall
jnp
cld
js
popa
lods
adc
mov
call
dec
shrl
pop
call
mov
lock
jmp
mov
clc
xchg
gs
xor
sti
mov
xchg
outsw
clc
push
jns
jmp
inc
bound
jb
xor
fwait
inc
lret
jge
sbb
dec
imul
les
mov
fs
ljmp
daa
cltd
ljmp
or
cltd
sub
repz
sub
dec
out
pop
incl
insb
sbb
xchg
cmpsb
sbb
sbb
testb
lds
push
cld
inc
incl
adc
into
sub
dec
sub
push
nop
fs
cwtl
mov
dec
xchg
jl
ljmp
jecxz
sbb
adc
pushf
or
mov
push
icebp
ds
sub
sbb
in
shlb
pop
iret
mov
stos
sti
call
lcall
cmp
jnp
clc
test
iret
movsl
sub
inc
hlt
fstps
fdivl
stos
inc
cld
or
ljmp
ret
jnp
pop
jg
movsb
sub
scas
sub
sti
fldenv
push
and
idiv
sar
ljmp
aad
rolb
jp
inc
jo
inc
sti
xor
inc
and
into
out
push
xchg
or
jg
dec
xchg
in
icebp
xor
nop
or
xchg
icebp
inc
mov
mov
repz
rorl
ljmp
pop
jmp
pushf
gs
jg
adc
and
push
aam
int3
fisubrl
jmp
loop
mov
dec
pop
lcall
aas
mov
cmp
xchg
fistps
popa
or
cmp
sbb
decl
xor
jmp
mov
pop
dec
sahf
mov
xor
xor
decl
mov
mov
dec
push
mov
cmpsb
pop
mov
jle
mov
adc
ljmp
fidivl
call
cltd
adc
bound
ds
out
push
inc
push
shrl
lret
jmp
repz
leave
lret
scas
pop
lods
sbb
inc
jnp
cmp
push
sub
enter
insb
xchg
idiv
ja
call
out
pop
push
fistps
bnd
jb
outsb
mov
pop
push
imulb
fildll
adc
das
rcrl
pusha
imul
movsl
hlt
and
mov
cwtl
jecxz
lods
and
call
add
lahf
scas
ljmp
or
fdivs
jb
daa
fldenv
into
orl
and
call
imul
pusha
inc
dec
lock
aam
adc
jecxz
mov
in
sbb
or
jge
lock
ljmp
cmpsb
adcb
cmpsb
xor
pop
arpl
in
inc
lcall
fcoml
add
in
jge
or
lahf
ds
inc
in
cld
call
pop
sarb
push
mov
fcomip
sub
xchg
repnz
ret
incl
mov
mov
out
push
aas
les
rcrl
xor
cwtl
scas
xchg
pushl
shll
mov
and
mov
scas
or
add
repz
test
push
js
pushl
scas
aam
inc
scas
js
dec
int3
outsb
sbb
inc
push
daa
testl
xor
dec
bound
push
cltd
sbb
jl
pop
ror
xchg
jmp
sahf
sbb
cmp
push
stos
lcall
push
xorl
hlt
scas
xorb
out
out
xchg
dec
ret
mov
add
loop
decl
mov
lahf
mov
jae
and
outsb
ja
scas
leave
and
pop
jg
fidivrs
cld
jecxz
popf
pop
lods
jle
int3
add
cmp
xor
test
or
int3
test
cwtl
arpl
je
insb
aad
in
cmp
add
mov
xchg
mov
sbb
into
xlat
cli
mov
and
mov
fadds
or
dec
jbe
cwtl
lcall
inc
xchg
xor
jg
jb
push
mov
lock
xchg
mov
and
mov
jmp
pop
inc
or
jmp
push
and
inc
test
xor
ss
fldl
inc
insl
jmp
dec
bound
loop
mov
les
mov
jo
cli
loope
ljmp
fs
pop
cli
push
push
lret
adc
and
sarl
sti
mov
dec
scas
pop
test
sub
xchg
xchg
in
or
inc
aas
inc
sar
lcall
imul
lods
and
dec
lea
add
ficomps
ljmp
pop
or
iret
fscale
or
lods
insl
dec
or
jge
stos
cmpl
xchg
scas
jg
lods
mov
add
fsub
cmp
and
inc
in
fisttpll
push
repnz
ja
aam
xor
pop
mov
inc
shll
dec
jg
sub
jg
pushl
int3
mov
xor
push
pop
lcall
pusha
call
outsl
adc
mov
lret
mov
sub
jb
sub
mov
adc
sub
imul
cmp
adc
xchg
out
daa
mov
idiv
sbb
in
mov
loope
mov
sbb
popf
std
popa
sbb
ljmp
sub
clc
imul
sub
and
test
es
inc
mov
xchg
bound
in
clc
lcall
dec
mov
adc
icebp
leave
inc
fldt
push
sbb
adc
or
sbb
or
xor
push
xchg
mov
mov
fsubrl
arpl
pop
in
stos
and
psubusw
incl
pusha
inc
icebp
dec
andl
jmp
push
jae
cmc
mov
mov
ljmp
add
gs
or
dec
shlb
loope
push
xchg
or
fbld
inc
xor
lcall
dec
ficoml
loopne
cltd
jmp
adc
mov
ja
leave
mov
lcall
call
push
jbe
loopne
xlat
movsb
jnp
cmp
sbbb
mov
insb
xor
xchg
add
lcall
and
dec
mov
scas
jl
inc
add
or
mov
movsb
dec
cmp
adc
xlat
adc
in
int3
test
xchg
loopne
incl
adc
insl
mov
xlat
inc
mov
mov
stos
sar
xchg
inc
adc
or
mov
int
inc
or
xchg
sub
sbb
dec
cmp
in
cmp
lods
pop
icebp
jno
cld
add
adc
jge
dec
mov
gs
dec
lret
mov
sbb
clc
add
lret
push
push
push
out
xor
or
filds
xchg
pop
loope
mov
out
in
cmpsb
stos
inc
mov
inc
les
aad
add
jmp
xor
sub
aaa
mov
cld
inc
and
cmp
jns
xor
jecxz
xor
dec
loopne
mov
leave
pop
and
cmp
test
jmp
loop
jg
mov
ret
inc
or
cmp
js
bound
or
ljmp
mov
pusha
dec
dec
xchg
movsb
scas
mov
pushf
lods
push
push
cmp
cmc
dec
inc
mov
adc
mov
fisubl
lock
data16
jmp
movsb
add
jns
pop
loope
in
inc
xchg
sti
jle
incl
xor
repz
push
bound
cmp
scas
sarb
insl
mov
out
fwait
mov
ja
pop
pushf
cs
repz
pushf
ss
nop
xor
sbb
and
incl
push
incb
jo
sahf
outsb
sbb
fnstcw
mov
in
add
pop
fistpll
pop
xlat
add
nop
stc
clc
xchg
and
cmp
sub
in
fs
scas
hlt
lds
cld
jmp
mov
push
rolb
jmp
enter
in
sub
push
mov
loope
and
ljmp
aam
or
pop
jmp
jns
fcmovnb
sub
inc
cld
mov
push
gs
fcomip
stc
les
xor
pop
sbb
scas
pop
jmp
pusha
pop
inc
test
mov
adc
sub
stos
gs
arpl
adcb
jg
xor
xchg
add
test
ficomps
and
and
sbb
mov
cmpsb
decl
cld
pop
xchg
or
jge
int
orb
xchg
push
pop
mov
jg
fwait
sbb
mov
scas
mov
push
outsl
xchg
dec
pop
adc
add
stos
fdivl
and
jle
cld
incl
shlb
xorps
mov
fdivrl
push
shl
xor
hlt
jnp
aad
cmc
lcall
mov
iretw
push
leave
cmp
ffree
or
cmp
std
sbb
cld
pop
and
fcmovne
in
enter
pop
or
incl
and
shll
lcall
loope
sub
push
in
aad
mov
or
sbbb
jg
push
loope
sbb
iret
mov
xor
adc
les
mov
push
adcl
push
adc
sbb
or
je
jl
rcrl
loope
ljmp
repnz
movsl
ss
pop
in
out
mov
mov
pop
in
push
sub
cmp
decl
fcomps
sbb
fistps
sbb
lods
mov
scas
insb
sub
jmp
ror
jmp
lcall
icebp
rolb
add
cltd
clc
fimuls
jmp
jmp
pop
imul
loope
icebp
mov
mov
cmp
mov
imul
inc
mov
fwait
pop
xor
dec
inc
cmpsl
mov
pop
mov
mov
mov
mov
sar
inc
popa
adc
mov
aas
mull
stc
rcrl
lcall
mov
call
fucomip
sub
push
mov
inc
test
lahf
inc
int3
xchg
xor
push
or
in
popf
mov
decl
les
mov
or
lds
xchg
mov
nop
cmp
jmp
shr
xor
inc
pop
sbb
sbb
mov
mov
aaa
add
testl
gs
int3
xor
shrb
and
das
clc
ljmp
imul
sub
dec
fs
imul
jno
xlat
cmc
ljmp
cmc
repz
xchg
xchg
inc
xchg
sub
out
nop
jle
ljmp
inc
xchg
pushf
test
mov
sub
lds
cmc
negl
std
xchg
ljmp
imul
xchg
sti
outsb
insb
in
xchg
movsb
psubsb
inc
loop
jecxz
add
add
fnstsw
ficoms
jmp
aad
lods
jbe
jl
loope
ljmp
push
mov
lods
int
pop
dec
and
jmp
pop
movsl
stos
decl
ret
xchg
iret
mov
mov
and
lcall
lods
xor
add
pop
xchg
and
cs
lret
addl
popa
cld
ror
in
xchg
xchg
insl
mov
das
sbb
pop
push
adc
in
mov
or
xchg
cmp
repnz
pop
xor
shl
dec
inc
lock
ljmp
push
addb
sti
push
push
andl
in
loopne
decl
and
dec
sub
jb
ss
push
add
inc
sahf
mov
cmp
mov
mov
in
jl
in
das
ret
dec
std
cld
inc
dec
dec
stos
push
rol
ljmp
ret
les
or
jne
out
sbb
pushl
mov
stc
or
ret
inc
push
xchg
jge
cmc
roll
hlt
pop
call
loope
mov
movsb
push
adc
xchg
dec
adcl
sar
out
clc
test
inc
push
mov
sti
femms
inc
repz
aas
mov
mov
call
in
ljmp
jge
sbb
jge
pop
cltd
ds
fsin
pop
mov
mov
adc
lcall
or
sahf
mov
adc
mov
dec
das
ja
ljmp
or
movsl
les
cwtl
sbb
test
rorl
icebp
xchg
lret
sub
jl
lret
mov
scas
pop
fsubrs
mov
add
fcom
sub
stos
cltd
mov
imul
dec
fisubrl
cs
xchg
out
pop
cld
fs
push
cli
cs
mov
pusha
ja
pop
in
push
lret
pop
shlb
outsl
das
jl
mov
ljmp
jb
clc
mov
or
jnp
iret
or
lock
call
fldt
mov
lcall
cmp
inc
mov
xor
mov
mov
or
into
imul
loop
das
and
or
sti
stc
xchg
lret
pusha
push
xor
jp
xchg
pop
addb
test
push
popf
movaps
decl
mov
lcall
in
popa
imul
adc
jmp
cltd
mov
imul
enter
dec
out
xorl
loop
dec
jnp
inc
iret
xchg
xchg
and
jnp
call
leave
bnd
sub
adc
jmp
pop
add
in
xor
into
cltd
lret
mov
mov
clc
outsl
cli
lcall
stos
sbb
out
lea
or
lahf
cwtl
mov
call
inc
call
loop
push
pop
sub
cmpsb
mov
mov
lcall
out
in
pop
in
mov
fs
xchg
sub
pop
sub
std
mov
sub
inc
scas
js
inc
xor
pop
pop
cli
fstl
or
dec
sbb
rorl
pop
repz
test
movsb
insl
push
push
jg
mov
sub
pusha
sti
pop
into
sbb
mov
pop
mov
sub
xchg
or
ret
xlat
cmpl
pop
enter
lcall
cmp
sub
push
jp
push
mov
clc
jl
scas
adc
aad
push
pushl
sub
and
out
call
stos
mov
adc
lcall
mov
xor
inc
xor
sub
aaa
push
ljmp
or
and
sub
lods
cld
flds
ficoml
movsb
pop
jp
je
imul
xchg
jg
dec
sbbb
ret
fmull
xor
insl
movsb
int
popf
mov
sub
incl
fstps
fnstcw
je
jge
insl
lret
add
mov
loop
fisubrl
inc
scas
mov
call
cld
call
testb
dec
fsubl
stc
push
jne
sbb
loop
mov
dec
sti
mov
or
jmp
or
inc
movsb
scas
add
scas
addb
ds
mov
sbb
bound
or
out
jne
xchg
nop
pop
cmp
iret
icebp
sti
add
and
jns
iret
inc
out
loopne
ljmp
call
test
loope
xchg
jo
shll
in
sub
imul
iret
xor
in
call
stc
sbb
mov
dec
pushf
jmp
sub
xchg
call
jmp
mov
lock
sbb
xor
pop
out
push
nop
lcall
call
adc
shlb
fs
mov
ret
in
lret
mov
inc
sbb
push
fwait
adc
or
ljmp
sbb
mov
mov
cmp
jmp
add
inc
mov
xchg
mov
jo
mov
movsb
test
negl
loope
xor
fldt
push
pushf
mov
lcall
aam
pusha
mov
out
mov
sbbl
pushf
pop
aas
ret
test
shl
pop
int
jno
xchg
sbb
inc
les
pushl
incl
cld
pushl
mov
flds
lock
das
popa
inc
aad
loope
decl
jno,pn
xor
adc
xchg
sahf
lods
fcmovnbe
mull
and
sar
jmp
mov
out
in
cs
sub
ffreep
inc
cmp
ja
mov
std
mov
xor
gs
ljmp
cmp
fidivrs
push
adcb
sub
and
mov
out
into
mov
incl
imul
sbb
mov
data16
repnz
rcrb
mov
pop
push
jle
ficoms
dec
mov
es
xor
dec
sbb
or
mov
rcl
lea
jmp
add
mov
adc
or
jno
dec
mov
mov
icebp
call
mov
movsb
or
jbe
cmpb
dec
shrb
int
mov
sub
push
pop
sbb
adc
cmp
int3
incl
xchg
add
jge
imul
sarl
out
xor
push
dec
lcall
insl
cld
ret
ficomps
fucom
cmpl
decl
and
inc
cmpsb
stos
sbb
xchg
cmp
frstor
ljmp
enter
or
shlb
sub
cmc
fwait
hlt
pop
pop
lods
fcompl
jmp
dec
push
shlb
jle
and
mov
movsl
mov
lcall
notl
lods
fxch
jne
xchg
je
cwtl
scas
clc
xor
jbe
and
xlat
mov
int
or
imul
cmpxchg
in
jmp
mov
pushf
push
add
sar
ljmp
jns
inc
sti
pop
push
dec
jb
rclb
test
jmp
ret
outsl
xor
sarb
divl
cltd
push
sub
cmp
js
std
xor
aam
mov
scas
adcb
adc
xchg
push
inc
xchg
stos
pushl
cld
pop
aam
sub
jle
ljmp
lock
or
lret
mov
ljmp
in
xor
aad
lods
sar
out
push
push
xlat
lods
lahf
mov
stos
repz
cmp
loop
out
pop
mov
aad
pop
aaa
cmc
ljmp
mov
pop
clc
inc
and
jae
ficomps
sub
test
hlt
and
push
cmp
arpl
jo
jbe
gs
mov
fcompp
vmovsd
addr16
fdivrp
cmp
pushf
mov
add
push
pop
and
mov
cmpsb
ljmp
cmpsb
js
test
sub
xor
fdivrs
jecxz
add
addr16
mov
jne
mov
pop
sbb
inc
mov
in
test
mov
call
popf
jp
inc
loope
ds
pop
pop
lahf
xchg
mov
sbb
mov
jl
pop
ljmp
mov
pop
mov
pop
push
fisubrl
or
push
js
push
lahf
push
in
pushf
or
push
dec
leave
jmp
pushl
sub
sahf
or
imul
mov
sub
pop
ljmp
ljmp
jmp
pop
mov
pop
push
js
adc
loop
aas
xor
sbb
incl
push
dec
xchg
xchg
mov
sarl
fs
xchg
mov
enter
repz
or
incl
and
sub
mov
movsb
js
add
lcall
dec
adc
lods
scas
xchg
pop
in
out
pop
xor
out
mov
push
xchg
adc
dec
xor
in
xor
xor
jg
and
in
sub
je
hlt
xlat
push
leave
and
imul
hlt
incl
test
es
cmpsb
dec
mov
mov
and
push
insb
call
mov
mov
or
aaa
push
adc
ljmp
push
and
mov
dec
xchg
and
xchg
imul
rcrl
scas
cli
pop
push
sti
hlt
mov
push
adc
mov
fimuls
in
decl
rclb
add
dec
jbe
and
lea
mov
out
insl
in
scas
cmp
popa
or
push
das
pop
sbb
dec
ljmp
adc
daa
test
sbb
leave
push
fwait
push
add
cltd
insb
insb
pop
cltd
ficoml
xlat
mov
mov
mov
sbb
and
xor
mov
call
movsl
hlt
bound
nop
inc
in
jp
push
push
add
iret
sbb
adc
test
cmpsb
cltd
xchg
decl
sahf
in
imul
jae
push
cmp
mov
fimull
sbb
pop
mov
loope
js
sub
nop
int3
dec
pop
out
fildll
jmp
mov
fdivr
lods
inc
imul
imul
popf
or
cmp
int3
inc
lods
sub
loope
mov
jp
stc
mov
mov
dec
cmp
shrl
mov
adc
enter
orb
push
xchg
jl
sbb
cltd
roll
dec
xchg
clc
inc
cmp
xchg
fdiv
negw
sub
pop
ljmp
push
sub
sub
fdivrp
jbe
test
int3
push
mov
ljmp
mov
push
pop
cs
jnp
jno
inc
dec
dec
fbld
ljmp
stc
add
incl
mov
in
sub
aad
xchg
xor
or
mov
das
clc
fcomip
adc
mov
cmpsl
les
stos
clc
ljmp
xor
adc
repz
aad
cmpsb
test
sti
jge
lea
imul
mov
pop
sub
jg
int3
inc
push
dec
aas
fsubr
clc
cmp
xor
dec
divb
cmp
clc
lcall
adcl
subb
in
movsl
jg
pop
xchg
sub
xchg
jmp
cli
pop
or
dec
lea
sub
or
testb
xchg
loope
xchg
fstps
push
cmc
fadds
mov
pushl
lcall
xlat
push
fcomp
adc
imul
cmp
out
std
dec
mov
pxor
push
dec
push
push
xlat
jmp
lahf
sbb
pop
shl
push
adc
push
lret
dec
inc
daa
and
mov
jmp
ljmp
xchg
fs
flds
mov
adc
or
or
xchg
out
ljmp
xchg
imul
xchg
push
xchg
cmp
xor
sbb
imul
xor
mov
test
mov
or
ret
cld
shlb
repnz
or
addr16
cld
mov
bound
scas
into
rcll
sub
pusha
int3
lcall
jle
mov
gs
mov
pop
sub
mov
mov
dec
mov
sub
pop
popf
bound
push
sub
cwtl
leave
mov
pushl
lea
sarl
neg
insl
xchg
mov
dec
or
and
mov
dec
call
push
ljmp
pushl
cmpsl
xor
or
dec
dec
jecxz
outsb
imul
jne
add
les
xchg
lcall
sbb
clc
pop
ja
sub
adc
mov
mov
pop
cmc
jmp
addr16
jae
xor
mov
mov
roll
ljmp
insb
jae
test
lret
orl
inc
xchg
mov
test
sub
or
push
lods
mov
pop
leave
mov
pushl
enter
cmp
lret
insb
das
shrb
popa
orb
into
jnp
dec
adc
decl
movsb
pusha
daa
ficomps
in
in
jp
inc
arpl
out
or
lahf
dec
pop
lea
sub
xchg
pushl
jmp
hlt
fsubl
cs
stos
outsb
cmp
lds
pop
xchg
movd
call
popa
sahf
ret
xor
sub
xlat
lock
add
add
sahf
xchg
jae
out
cmp
jg
js
push
insl
mov
fisttpl
std
gs
std
ds
pop
testl
loopne
jns
jns
push
cli
aas
call
outsl
les
jge
sub
insl
enter
xor
test
in
sbb
xchg
inc
int3
outsl
scas
push
outsl
xchg
decl
rcll
cmpb
pop
jl
lcall
movq
cmp
pop
sub
out
gs
hlt
cmp
xor
xchg
test
or
inc
out
dec
call
mov
stos
lods
adc
loope
lahf
jle
sub
jmp
jmp
pop
sub
cmp
push
les
jl
stos
aam
xchg
test
xor
fisubrl
movsb
pop
sarl
shrb
in
push
cs
lret
ljmp
jmp
xchg
sbb
or
sbb
push
ret
mov
or
aad
pushf
nop
lock
call
scas
jge
inc
outsl
and
push
sarb
out
ljmp
dec
rcrl
notb
lcall
ljmp
xchg
lods
popa
push
repnz
fisttpl
leave
pop
mov
sahf
xor
incl
push
dec
gs
loopne
push
in
mov
cmp
sbb
jno
ret
xor
inc
xor
cld
das
addr16
rep
int3
mov
pop
decl
aad
data16
mov
imul
cs
pop
xchg
cmp
incl
outsb
jmp
mov
mov
loopne
jg
ja
and
or
mov
xor
mov
xchg
jge
es
xor
cmpsl
sub
lcall
sub
adc
int
shll
or
lods
loop
in
mov
cmp
sub
xchg
sbb
pushl
pop
decl
rcrb
mov
mov
add
mov
mov
lcall
pushl
mov
or
jnp
and
and
in
push
in
loopne
xorb
pushl
loope
xchg
stos
cmp
lods
gs
fdivrl
pop
sbb
xor
jne
or
clc
jno
push
aas
and
das
mov
xor
leave
cmpsb
dec
sbb
int
iret
fistps
lea
subb
adc
push
jle
jne
int3
scas
add
stos
cmp
in
push
std
hlt
pushl
jl
xchg
push
push
in
inc
adc
jb
jle
mov
decl
lock
inc
sbb
sahf
test
ja
mov
test
mov
outsb
repnz
bound
jo
inc
lods
push
cwtl
jmp
mov
ret
fcomip
lret
ss
xor
filds
push
imul
jecxz
cmpsl
xor
iret
icebp
mov
fiaddl
scas
sub
int
cmpsb
fisubs
imul
jmp
call
test
pop
ret
mov
sbb
or
cmc
idiv
ljmp
leave
in
push
mull
and
and
dec
and
lcall
out
fwait
inc
mov
movsl
jb
movl
fldcw
mov
xchg
sub
icebp
jmp
leave
imul
pusha
ret
test
mov
xor
out
mov
hlt
push
insb
incl
lcall
add
leave
adc
outsl
fisttps
xchg
dec
ret
mov
sub
addl
mov
cmp
mov
call
pop
pushf
inc
and
sub
std
je
mov
adc
push
adc
out
cli
call
out
push
mov
mov
aas
fcoml
test
fstpt
and
decl
push
shll
sub
sub
setge
sahf
push
lcall
jg
dec
sahf
or
xchg
hlt
int
and
jne
xchg
pop
insb
push
ret
imull
mov
jmp
test
and
jns
adc
std
lret
out
add
xor
cmp
and
cld
stos
ljmp
push
or
fdivrs
aas
jl
mov
loope
mov
outsl
or
mov
lcall
pop
fs
outsb
mov
cmp
mov
sbb
movsl
decl
daa
or
and
mov
cmpsb
out
mov
lcall
pop
cmp
out
inc
cmp
lret
jbe
mov
adc
pushl
sbb
inc
stos
addl
mov
jl
mov
das
outsl
add
call
rcl
sbb
mov
cli
adc
nop
mov
pushl
xlat
pop
and
movsl
test
xchg
cli
repz
mov
push
add
sbb
les
into
push
adc
popf
jae
lret
loopne
sti
pop
test
andl
arpl
mov
jns
decl
adc
jae
jnp
adc
dec
mov
mov
pop
cmp
cltd
repz
inc
adc
push
cmpsb
flds
jge
jl
jg
rcrb
xor
cmp
jl
bound
aam
cmp
mov
xor
stc
mov
sti
cltd
loopne
lahf
in
and
movl
je
ljmp
jge
sub
add
mov
sahf
dec
mov
cmovge
add
lret
lret
and
sbb
and
decl
jecxz
pop
in
ja
sub
mov
inc
jbe
sbb
dec
sub
jo
ja
shlb
call
mov
xchg
lock
mov
and
lods
cmpsb
cld
inc
mov
call
std
int
sub
popa
sahf
push
dec
test
hlt
and
or
loop
fcompl
jo
stc
push
outsl
repnz
jge
ret
mov
mov
sbb
xor
add
mov
call
roll
sbb
sahf
pop
enter
cmp
gs
test
mov
sub
jmp
cli
and
push
pcmpgtw
mov
sbb
xor
push
scas
jmp
push
arpl
mov
repnz
clc
sub
fdivrs
into
es
mov
jmp
out
fbstp
sbb
push
test
or
shll
fsts
rorb
push
ja
incl
fidivrs
or
lahf
ljmp
pop
scas
inc
loop
xor
jns
fstps
cmp
loop
mov
cmp
mov
xchg
xchg
popa
push
lods
into
adc
stc
xor
mov
decl
adc
or
sbb
push
dec
jp
push
ret
mov
aad
or
push
call
sub
scas
outsb
inc
or
stos
mov
inc
adc
adc
movsl
mov
push
dec
cltd
mov
stos
test
lret
stos
add
filds
xchg
lods
mov
mov
mov
lock
or
pop
enter
fiaddl
and
pop
cmp
cwtl
pop
mov
mov
shrl
sub
push
shlb
nop
sbb
movsl
in
incl
repz
adc
mov
ljmp
enter
call
stc
repnz
pop
push
test
cmp
xchg
mov
xchg
fists
mov
jge
test
and
mov
fimuls
in
fisubs
and
loope
push
mov
push
sub
pushl
sti
notl
xchg
sub
mov
dec
fincstp
add
push
xor
mov
pushl
sahf
dec
popf
pop
shlb
xor
cli
jg
lds
jge
inc
add
testb
js
aad
mov
popa
xchg
mov
roll
pop
or
in
push
inc
and
fs
cmp
jge
sbb
add
lret
xchg
and
lahf
inc
jmp
jl
jmp
ja
mulb
ljmp
test
das
fidivs
test
mov
adc
adc
lods
sbbb
incl
cltd
jmp
or
mov
inc
add
or
mov
cmp
xchg
or
decl
scas
ljmp
adc
les
cltd
test
jg
push
pop
pop
cli
test
stos
cs
adc
sub
daa
mov
xor
call
mov
xchg
push
or
jl
add
xor
out
in
std
ja
lds
dec
dec
mov
lret
test
jg
jg
out
shrl
fcomi
jbe
das
mov
fcmovne
xchg
fmul
jne
sub
sub
jmp
jge
mov
dec
aas
xor
push
mov
hlt
inc
aad
sbb
sub
sub
data16
pushl
xchg
cmp
pusha
std
sti
add
inc
xchg
imul
xor
or
stos
negb
inc
pop
add
push
add
cwtl
fmul
scas
or
gs
ds
pop
fsubr
and
dec
dec
cmp
jle
gs
ljmp
out
cltd
lahf
push
pop
fs
cs
xorb
jecxz
cmp
cmp
xchg
xor
jecxz
ljmp
call
sbb
in
xor
icebp
or
add
in
clc
pushl
pushl
push
rcrl
jge
aaa
sahf
ret
jle
cs
mov
aaa
repnz
cmp
lret
inc
rcrl
std
loope
dec
cmp
mov
fists
shr
add
xchg
aaa
xchg
adc
jge
or
xchg
leave
push
cwtl
cmpsl
cmp
decl
negb
cmp
setno
xlat
sub
lcall
mov
cmp
sub
mov
push
insb
mov
push
out
inc
cltd
xor
push
add
add
add
xlat
imul
insl
pop
add
sbb
gs
mov
out
pop
sbb
leave
xor
fdiv
pop
jmp
and
gs
add
cld
je
es
repnz
jmp
add
scas
inc
scas
imul
push
mov
push
js
lods
mov
mov
pop
cli
fildll
aad
xor
add
jl
imul
faddl
xor
jne
daa
daa
dec
out
xchg
push
out
test
add
iret
and
popf
cld
imul
clc
inc
mov
popf
push
mov
arpl
and
xchg
jmp
xchg
xchg
ja
call
sbb
stos
push
lea
sbb
inc
mov
in
pop
push
ljmp
test
jae
lret
aam
fmul
cmpsb
or
jne
js
mov
loopne
sub
loope
dec
inc
movsl
dec
fistpl
pop
and
std
push
mov
or
rol
aam
pop
cmp
lcall
outsb
and
std
jp
mov
dec
mov
ljmp
pushf
aas
pop
mov
lds
in
lcall
mov
lret
mov
imul
fucomi
insl
shlb
fiaddl
mov
out
or
clc
cltd
dec
clc
sbb
dec
inc
push
mov
into
clc
jae
ror
es
pop
idivl
in
popa
cmc
syscall
cmp
incl
xorb
arpl
dec
push
movsl
or
xor
xlat
iret
or
incl
call
jp
mov
int3
lret
rclb
dec
cmpsl
lods
xor
incl
bound
aas
adcb
pop
sbb
in
jb
mov
lea
scas
pop
inc
popa
lods
sub
ljmp
or
add
inc
xorb
fstps
aas
scas
std
sahf
jns
into
jl
jg
pushl
jbe
stc
xor
jge
ss
mov
inc
test
call
cmp
aam
inc
inc
mov
push
fcoml
xchg
sbb
push
test
mov
jmp
psllw
stos
sbb
notb
jle
dec
mov
cmpsb
sub
mov
mov
in
fists
popa
test
sub
mov
inc
nop
and
jg
push
addr16
negl
and
sub
gs
xchg
add
xchg
mov
mov
cmpsb
aam
cmpsl
jbe
jns
or
jo
test
or
repnz
incl
and
stc
ds
push
mov
ja
lods
imul
out
cli
stos
push
sub
xor
sub
into
jae
dec
arpl
ljmp
xchg
aaa
and
xchg
mov
das
data16
adc
dec
xlat
pop
cmpb
add
mov
or
xchg
sub
push
addl
cmp
xor
sub
leave
sarb
add
in
or
inc
dec
mov
lcall
inc
imul
mov
pop
adc
pop
xchg
dec
mov
add
sbb
inc
int
lcall
leave
enter
in
movsb
jg
mov
push
call
std
pop
outsb
into
mov
or
ja
push
shr
cmp
jb
sar
call
mov
jg
and
incl
jg
mov
xchg
ret
pop
dec
xchg
fdivp
mov
xor
stos
mov
mov
shrl
scas
cld
push
push
imul
pushl
ja
popa
in
dec
enter
inc
sub
sbb
cmp
insl
imul
or
mov
pop
xorb
pop
shlb
aaa
xchg
or
decl
mulb
xchg
pop
sbb
add
xchg
aam
mov
decl
cmpsl
mov
adc
dec
movsl
add
or
lea
xchg
shl
sub
and
pushl
movsb
cmp
push
dec
mov
xorl
mov
insl
movsl
xor
xchg
mov
fcomps
dec
adc
ret
pop
cld
rorb
cmp
imulb
push
in
dec
aaa
insb
mov
decl
push
mov
or
fdivs
mov
iret
mov
arpl
bound
call
or
inc
sub
mov
mov
and
or
jmp
fisubs
adc
push
push
xlat
ss
sub
loop
out
cmp
mov
and
int
aas
lods
xchg
jb
stos
push
jmp
push
lds
fstpl
jmp
jge
pushf
mov
scas
sub
push
jmp
xchg
int
hlt
and
cmpsl
xchg
aaa
lea
cltd
xchg
inc
adc
jmp
lcall
xor
insb
popa
call
loopne
or
sbb
push
push
cli
ret
cmp
incl
inc
fstps
sub
repz
dec
ret
and
jbe
inc
pop
add
add
cmp
xor
dec
test
cmp
loope
mov
call
lods
inc
repz
add
aad
pop
dec
outsl
or
xchg
jl,pn
insl
bound
dec
gs
daa
lret
pushl
stos
scas
ljmp
pop
cld
or
or
jmp
ljmp
push
es
jecxz
add
pushf
xchg
fsub
mov
jecxz
in
data16
sbb
cmp
daa
ljmp
xor
ret
jmp
pop
or
mov
out
mov
sub
add
subl
adc
pop
lock
clc
out
pop
icebp
mov
shl
mov
ret
mov
xchg
or
jg
ljmp
arpl
in
xor
aaa
or
and
in
add
sbb
sbb
data16
in
js
subl
loopne
andb
xor
or
pop
std
arpl
mov
cmpsl
scas
xor
cmc
lock
add
lcall
into
mov
mov
in
popf
pop
mov
lea
pop
push
aam
incl
int
sub
xchg
lods
bswap
xchg
fistpll
mov
in
lds
cmp
out
lret
add
dec
pushf
and
cltd
cmp
dec
imul
pop
lock
imul
cmp
or
and
shr
cvtps2pi
dec
cmc
xchg
and
test
mov
leave
not
movsb
jg
popf
fcmovu
rcl
lods
xor
or
inc
pop
push
jl
cwtl
icebp
sbb
push
dec
icebp
or
xchg
pop
fstl
sub
add
popf
pop
lock
xor
ud0
jmp
xchg
jae
mov
cmpsl
fwait
jmp
in
pop
adc
pusha
lcall
sar
pushl
test
and
adc
out
in
les
adc
cwtl
xor
lcall
imul
adc
notl
push
or
jno
ljmp
je
jnp
pusha
sbb
adc
shrd
frstor
out
scas
jp
std
cmpsl
addr16
outsl
xchg
into
sti
pushf
adc
xchg
ljmp
mov
cmp
icebp
push
stos
nop
mov
mov
scas
mov
mov
push
repnz
adcb
sub
dec
and
out
stos
lcall
call
fsubr
push
push
clc
mov
fstpl
jns
sbb
pop
fsubrs
insb
lret
mov
ds
xchg
test
incl
mov
mov
in
loope
mov
xchg
mov
insl
into
fs
sbb
call
pop
imul
jmp
imul
mov
loopne
popf
lret
testl
sub
xchg
cmp
mov
push
cmpsl
insl
rcl
push
push
repz
arpl
jno
adc
popa
mov
push
xor
push
xchg
sbb
cmpsb
pop
ror
inc
pop
sub
aam
pop
decl
xchg
sahf
jae
adc
call
mov
inc
xor
and
sahf
pop
or
std
ljmp
add
pop
dec
movsb
adc
insl
jno
aaa
add
pop
xchg
mov
inc
stos
mov
cmc
rcr
adc
cwtl
shr
xor
jg
push
adc
shll
aad
aas
add
int3
movsb
jg
inc
rcrb
in
cmpsb
arpl
cli
incl
dec
or
ds
ds
jmp
je
mov
adc
dec
into
cmpsb
push
mov
and
mov
jg
jmp
out
xchg
ja
sub
clc
push
sub
cmp
jecxz
or
mov
mov
jae
inc
mov
ljmp
lods
lret
inc
int
cmp
ficoml
pushf
push
repz
jmp
test
or
loopne
test
mov
xchg
cld
jp
pop
xchg
les
aad
fildll
loopne
mov
xchg
dec
xchg
and
xchg
jle
aam
mov
push
jg
adc
hlt
xor
ss
test
cmp
notl
jmp
test
dec
aas
rcl
lahf
cltd
xchg
in
flds
sub
nop
jo
mov
hlt
sub
jl
jne
pushf
sarl
dec
clc
addr16
xchg
sbb
in
mov
and
in
dec
decb
pushl
std
ficompl
ss
clc
and
pushf
shll
adc
xchg
sarl
mov
aaa
std
lds
push
pop
loopne
mov
pop
add
mov
bound
fistps
pushf
dec
xchg
mov
jnp
repnz
mov
rclb
imul
cs
inc
shlb
fndisi(8087
ret
insl
pop
inc
rclb
sbb
fsubrs
jae
aad
into
mov
scas
dec
pop
nop
mov
orl
sub
jmp
adc
mov
xchg
hlt
sbb
shll
push
test
ret
sub
xlat
popf
lcall
jmp
push
jnp
pop
cli
or
xor
clc
dec
lcall
mov
dec
lock
call
push
loope
cmpsl
mov
or
cld
ja
cmp
outsl
in
jb
inc
decl
fs
stos
pop
sub
pop
jo
or
cs
test
loop
fwait
dec
cmp
pusha
mov
outsb
adc
gs
mov
dec
imul
das
mov
int
jecxz
jge
lcall
dec
pop
mov
adc
pusha
call
and
cmp
add
adc
mov
push
clc
clc
aad
test
nop
cli
xor
ja
jbe
aas
aad
loope
add
sub
or
inc
fucomi
or
push
out
nop
cmp
pushl
subb
sbb
outsl
fistpl
jp
fwait
sahf
lret
mov
jg
lcall
add
std
test
data16
and
shlb
push
clc
icebp
jg
lock
jns
mov
push
enter
mov
push
add
lcall
jmp
cltd
mov
dec
stc
or
and
push
mov
insl
or
loope
sub
int
out
les
and
dec
inc
sti
jmp
in
jle
jae
sbb
xchg
aaa
inc
sbb
sbb
fs
lcall
lock
cmpsb
push
xor
inc
pop
ret
cmp
jno
pushf
push
jno
decl
xchg
es
xchg
imul
gs
cld
pushl
jnp
and
jmp
and
push
ds
shr
test
incl
out
xor
or
loopne
mov
xchg
mov
xor
popa
mov
in
ss
fidivrs
cmp
pushl
pushf
stos
je
inc
ret
dec
cli
imul
adc
jg
test
jl
insb
push
or
outsl
xchg
pop
iret
aam
int3
xchg
sbbb
es
clc
push
cs
mov
std
cmp
ljmp
dec
inc
aad
sub
mov
ljmp
pop
dec
cmpsl
mov
push
mov
xor
incl
add
outsl
enter
lea
aas
pusha
dec
push
sub
lcall
cmp
popf
cltd
loope
mov
mov
add
dec
stos
push
jl
cmp
cli
inc
decl
or
push
test
sahf
movsb
mov
scas
mov
test
cwtl
push
rorb
sub
cmp
and
hlt
xchg
ror
js
push
adc
cwtl
fs
adc
outsl
sub
push
mov
in
sub
cmp
pusha
jae
clc
jnp
inc
testl
sbb
call
push
mov
pop
popa
xor
cld
add
out
jae
fwait
xchg
es
and
aas
ljmp
icebp
imul
dec
fs
sbb
leave
cld
ljmp
pop
nop
test
fcomps
test
push
xor
lods
adc
mov
xchg
cmp
fcos
pushl
and
jno
pop
nop
test
out
lret
test
mov
insb
ja
cltd
lret
fisttps
incl
mov
shll
inc
int3
inc
cli
mov
ljmp
jl
sub
repz
xchg
gs
jnp
scas
adc
mov
ljmp
pop
cmpb
call
outsb
mov
sub
subb
and
in
loope
sar
mov
pop
inc
or
out
xlat
push
loop
jbe
cmpl
mov
jp
lcall
scas
inc
dec
inc
insb
dec
fistpl
mov
or
push
sbb
push
ljmp
stos
mov
fidivrl
adc
fsts
xchg
in
mov
cwtl
xor
lock
scas
lcall
xchg
jg
out
in
sbb
jg
push
mov
xlat
push
cmp
incl
gs
arpl
mov
out
js
sub
xor
adc
inc
inc
add
xchg
jge
push
mov
xlat
lret
neg
or
movb
push
cld
mov
decl
sub
and
std
mov
cmp
adc
xor
pusha
cwtl
sbb
jmp
ljmp
test
sbb
out
sbb
cmp
jmp
fldz
xchg
loope
sub
ljmp
mov
and
in
and
iret
pop
cmp
in
and
pop
gs
icebp
add
outsb
jecxz
and
mov
fcomps
test
inc
fs
jp
dec
xchg
push
jp
adc
jle,pt
inc
xchg
lods
decl
sbb
lret
mov
dec
std
ljmp
ret
push
in
call
or
cmpsl
dec
mov
les
data16
or
adc
pop
cld
mov
popf
or
dec
mov
daa
loop
mov
sar
incl
push
aaa
dec
xorb
xchg
jnp
cli
je
adc
jle
jbe
push
das
movsl
xchg
xchg
fistpll
sbb
repz
push
dec
pushf
xchg
std
es
adc
dec
jae
adc
in
lret
call
les
dec
xor
pop
mov
sub
xchg
pop
and
sbb
cmc
loopne
jmp
ljmp
in
leave
mov
xchg
xor
mov
mov
mov
cmpsb
xor
sub
add
lcall
test
jp
mov
add
popf
sub
or
dec
iret
fistl
pop
inc
cld
call
push
lock
insb
dec
mov
sub
andb
insb
sahf
xor
mov
fmulp
sbb
addr16
xchg
pop
dec
xchg
mov
inc
mov
repnz
xor
jmp
popf
ljmp
jo
pop
out
aad
push
jbe
lcall
jecxz,pn
arpl
jmp
enter
xor
push
dec
mov
cmpsb
sbb
mov
xchg
call
inc
iret
aaa
mov
or
push
push
jno
ja
sub
cmp
add
ret
dec
dec
adc
mov
in
call
dec
mov
pusha
shrb
xchg
adc
bound
push
lea
cmp
lret
push
jg
in
call
mov
mov
mov
lret
fldcw
mov
call
std
push
adc
loope
mov
xor
mov
mov
lods
ds
dec
add
or
mov
pop
push
or
ljmp
mov
xchg
inc
insl
rcrl
sti
lock
xor
dec
pop
rorb
aam
stos
and
push
push
out
cltd
pop
mov
out
or
sbb
sbb
dec
pop
es
push
popf
xchg
stc
dec
pop
cmp
sahf
fmul
sub
out
pop
push
aas
jbe
cmp
and
xchg
sbb
cwtl
lcall
lret
adc
inc
add
mov
gs
mov
pushl
fs
in
mov
inc
divb
rcrl
push
mov
lcall
mov
fimull
mov
cwtl
mov
xor
xor
sti
idiv
cmp
decl
ret
lret
call
rcrl
cmp
pop
xor
cmp
add
imul
lret
jne
inc
fdivs
mov
jns
xchg
inc
aad
pop
jo
pop
call
push
mov
ret
shr
xor
js
jbe
inc
pop
or
xor
jmp
adc
cmp
rorl
xchg
adc
jg
jb
in
push
sarb
mov
fisttps
push
stos
inc
lods
mov
or
sti
call
jb
pushf
test
sub
adc
fiadds
and
incl
lock
mov
lret
sarb
push
dec
lods
movsl
and
dec
mov
sbb
mov
xor
push
fsubrp
push
ja
cmc
es
push
lods
cmp
cmp
addr16
jmp
push
jb
ds
roll
xchg
je
fmull
idivl
popf
pushf
xchg
movsb
test
outsl
push
push
or
cli
inc
psubw
ljmp
jb
incl
aas
outsb
addb
add
pop
xchg
xor
shlb
jbe
scas
decl
sbb
fs
xor
jo
cmp
sbb
add
sub
daa
cmp
mov
push
aad
dec
in
popa
pop
cmp
or
inc
sub
push
loope
jl
jmp
mov
daa
lods
dec
cmc
lods
pop
mov
push
outsl
das
inc
js
sub
decl
adc
ja,pn
inc
inc
sti
cld
push
lods
inc
pop
push
mov
sub
loop
lcall
lcall
adc
lret
xchg
mov
jecxz
xor
or
jmp
push
adc
and
movsb
arpl
jne
mov
scas
shll
call
pop
adc
out
pop
mov
xchg
mov
xchg
shlb
out
jo
add
icebp
cmp
xor
je
pop
dec
sahf
in
rolb
mov
mov
inc
scas
ljmp
push
jmp
iret
cmpb
ja
popa
cmpb
insl
dec
in
adc
call
stc
stc
pusha
cmp
add
dec
pop
cld
mov
sub
cs
cltd
xchg
call
jb
rorb
incl
inc
cmp
and
pop
ror
sbb
fisubl
dec
ret
jge
and
sub
jnp
jecxz
sbb
add
int3
mov
mov
ljmp
add
mov
movsl
jnp
add
jl
scas
outsl
cmpsl
adc
lock
cmp
lcall
mov
std
pushl
sub
ss
lret
jns
leave
inc
xor
or
les
pop
fdivrs
ljmp
add
pop
cmp
dec
sub
in
xor
xor
xor
push
mov
add
pop
test
push
repnz
incl
inc
sbb
cli
out
mov
stos
fadds
pop
jnp
rcrb
jmp
jbe
or
jg
outsl
xchg
lret
cmp
adc
jbe
nop
lea
mov
ret
inc
push
mov
push
sbb
fnstcw
inc
pop
jl
ljmp
add
stos
xor
jle
fldt
sub
cmp
fimuls
mov
mov
sub
pop
xor
fdivr
fucom
or
sub
mov
leave
lcall
jle
loopnew
popf
xchg
pop
add
aam
clc
out
aaa
push
xchg
sbb
cmp
mov
jnp
push
or
or
scas
sub
pop
cmp
jle
sbb
add
test
rclb
test
leave
mov
outsb
cmp
cmc
pop
sub
into
push
aad
inc
jb
cmp
adc
and
jns
pop
mov
das
jnp
repz
inc
inc
out
or
enter
xor
lods
cmp
xchg
push
mov
jnp
and
cmpsb
jmp
mov
pop
mov
pop
cmp
or
sub
jo
insl
shrb
xchg
cmp
jl
mov
mov
stos
nop
stc
loope
xchg
xor
addr16
pop
push
mov
jmp
xchg
pop
outsl
imul
mov
or
pop
push
repnz
push
push
int
mov
xlat
cmp
rcrb
sbb
fstp
lods
ja
testb
push
negl
jg
loop
sub
add
test
jmp
jg
sub
repnz
and
fcompl
mov
ficoml
aas
mov
arpl
outsb
add
call
fistpll
std
pop
cmp
push
sbb
sub
les
adc
incl
xchg
sbb
scas
loopne
inc
pop
and
mov
fbld
cld
repz
pop
inc
std
inc
sub
in
pop
mov
in
sub
cmp
inc
jg
arpl
ret
fwait
hlt
mov
jecxz
call
pusha
jne
and
sbb
aad
fs
add
insb
in
and
xor
mov
fistpll
out
outsl
sub
subb
pop
push
stc
xchg
call
adc
das
jmp
cltd
pushf
pusha
mov
push
fdivs
mov
jns
jmp
jg
cmp
popf
pop
xor
loop
and
dec
out
push
sti
and
stos
xchg
add
rclb
decl
movsl
jo
push
mov
mov
popa
or
icebp
out
mov
sahf
cmp
xchg
pop
adc
mov
movsl
lods
mov
xchg
lret
int
cld
pusha
aad
adcb
sub
out
adc
frstor
push
das
movsb
dec
aaa
mov
xor
popa
fcomp
inc
mov
fidivs
adc
sub
ljmp
mov
sbbl
loop
insb
jnp
lcall
dec
mov
push
imul
gs
mov
cld
test
fcmovu
adc
xor
sbb
mov
jg
lds
sub
fmull
loope
in
andb
push
pusha
in
movsl
mov
jecxz
and
push
and
jecxz
add
add
mov
ds
bound
adc
jo
fucomi
call
mov
sub
sub
sbb
add
lods
rcrb
sub
jmp
popf
stos
xchg
mov
mov
jg
ret
sbb
and
pop
adc
xlat
inc
seta
sub
and
aaa
cld
call
cmp
mov
and
xor
adc
incl
push
inc
or
mov
dec
aad
cld
dec
mov
push
sub
jne
jmp
sub
mov
incl
mov
popf
mov
cmp
popa
std
pop
adc
popf
mov
add
jp
inc
jmp
jp
mov
int3
xor
lcall
lods
scas
mov
je
push
ud1
out
xchg
shl
loopne
inc
mov
call
push
mov
test
dec
sub
imul
adc
lds
push
scas
mov
jl
pushl
int
and
out
dec
mov
movsb
ljmp
push
out
or
in
adc
sub
pop
call
push
or
mov
loopne
out
xchg
xchg
scas
ds
ret
adc
mov
clc
incl
mov
roll
cmpsb
xor
dec
push
test
pop
inc
mov
cmpsb
mov
xchg
fidivrs
sahf
jb
cmp
lods
xchg
pop
jl
adc
fs
out
sbb
outsb
outsb
jb
adc
sub
dec
out
mov
fwait
push
or
pop
inc
adc
ss
adc
call
or
inc
cltd
stos
ret
fcom
sbb
enter
xchg
cmp
mov
adc
jmp
xchg
add
addb
sbb
pop
bound
sbb
jle
aam
dec
xchg
loopne
out
mov
decl
lock
pop
mov
mov
mov
mov
test
ljmp
ret
inc
aam
cld
incl
lods
xlat
pop
mov
jecxz
inc
jmp
sub
iret
cli
iret
push
ljmp
mov
je
mov
push
lea
and
jmp
mov
ljmp
out
lods
les
rclb
loopne
jmp
mov
sub
mov
in
push
ret
mov
popa
or
ss
fbld
ss
mov
push
scas
mov
shlb
jmp
insl
mulb
sub
sub
test
nop
adc
mov
mov
mov
inc
push
or
jmp
mull
xor
push
mov
es
cmpsl
pop
incl
and
xlat
sahf
cmpsb
xchg
imul
mov
cwtl
popf
cmc
sahf
movsl
cmc
dec
inc
pop
lret
out
ljmp
or
arpl
sub
fpatan
stos
jbe
inc
ljmp
jecxz
xorb
gs
fidivs
xchg
out
call
and
jg
jo
inc
stc
iret
sbb
ljmp
dec
mull
je
pop
pop
push
loope
adc
ljmp
adc
adc
mov
lcall
stos
rclb
inc
loopne
xchg
aam
lret
clc
adc
mov
pop
bound
nop
mov
cmp
sub
xchg
fnstsw
ja
cmp
inc
gs
mov
mov
and
into
shr
outsb
xor
decl
repz
pop
jge
sub
xorb
jbe
xchg
pop
je
or
mov
incl
idivb
mov
pop
in
mov
pusha
int
mov
inc
lds
pop
enter
call
sbb
cmc
fucom
push
js
mov
rcl
es
cmp
test
lret
jmp
leave
push
and
jecxz
orl
mov
push
sar
push
arpl
enter
outsl
scas
loopne
lock
xchg
sahf
mov
jmp
std
jns
mov
leave
mov
out
jmp
cmp
dec
add
jg
cmc
call
jge
pushf
fnstenv
lret
loop
lds
jne
push
sub
inc
sahf
decl
jnp
jnp
in
shr
stos
in
in
adc
ljmp
xor
inc
insb
mov
and
das
test
mov
dec
jl
fiadds
cmp
call
movsb
test
test
inc
pop
sti
sbb
sbb
imul
inc
xchg
inc
or
lcall
shll
std
stc
sahf
repnz
sbb
test
pushl
loopne
ja
adc
mov
imul
lcall
mov
fdivs
dec
mov
incl
pop
or
jbe
inc
xchg
repz
ljmp
xchg
xchg
dec
pop
jo
mov
mov
pop
push
vmptrld
cwtl
pop
les
pop
add
incl
jne
movsb
rcrb
das
jge
lock
lods
addr16
loop
in
int
xor
cmp
scas
push
push
mov
out
mov
call
pop
in
push
sub
mov
out
popa
es
mov
fcmovnbe
or
jmp
add
mov
gs
pop
push
xchg
stc
xor
jp
ja
adc
shlb
cld
call
sbb
lret
sub
lods
and
adc
mov
in
ss
pop
add
ljmp
adc
xor
insl
mov
push
cmp
sti
fstps
outsb
sub
call
sub
cli
jge
mov
jp
daa
xchg
xor
rol
pusha
repnz
aad
cmpsl
out
cli
imul
xor
cmp
jl
xchg
mov
mov
mov
jmp
sahf
stos
add
mov
fcoms
push
and
mov
psraw
into
imul
pushl
mov
aas
cmc
in
cltd
jmp
cmp
cmp
cmp
cmp
push
fsubr
out
dec
push
lcall
jp
ss
inc
jmp
lods
ret
pushl
mov
lods
sbb
jp
push
cli
mov
fs
ljmp
push
mov
cltd
xor
mov
or
fdivrl
cli
mov
fisubs
cld
call
sbb
jge
push
push
cwtl
imul
movsl
movsb
sqrtps
out
pop
jg
xchg
push
das
and
dec
loop
je
cmp
jp
stos
jns
push
cld
ljmp
jns
mov
jne
push
call
nop
mov
cwtl
sti
mov
shll
xchg
mov
popf
insb
inc
inc
push
lcall
fcomps
adc
mov
add
inc
cmp
cmc
xchg
dec
and
fstpl
lds
sub
jmp
jg
test
aam
stc
mov
test
xor
push
adc
fbld
pop
in
pop
dec
sahf
or
shrl
rcrl
dec
fwait
dec
lcall
das
sti
ja
leave
fmull
jb
cs
pop
filds
cmpsl
mov
orl
lods
xor
and
sbb
mov
shrl
jge
lods
lods
lock
push
in
xchg
dec
lea
mov
lea
fldenvs
clc
jbe
mov
jg
lods
mov
xor
insb
push
jg
inc
push
and
ds
or
mov
in
cmc
mov
inc
out
dec
fnstcw
dec
ja
popa
dec
dec
lahf
or
rcrb
cmc
fwait
int
loop
test
ljmp
sub
mov
fcomip
call
fwait
or
mov
inc
mov
imul
inc
outsl
xor
mov
inc
call
pop
add
xchg
jb
adc
xchg
pop
icebp
cmp
loop
pushl
push
lret
divb
sub
leave
or
sbb
pop
rcrl
int3
dec
push
in
loop
pusha
lahf
mov
jnp
imull
shrl
sub
clc
jo
lods
pop
ret
jp
adc
cld
push
repnz
dec
rcrb
cwtl
jecxz
adc
jg
jmp
nop
and
cmp
adc
lret
cmp
bswap
xlat
inc
rclb
and
jno
inc
jmp
jge
inc
cwtl
lret
loop
jle
pop
sbb
jge
clc
jns
mov
push
popa
std
mov
mov
inc
mov
or
shrb
push
imul
adc
call
aas
adc
jns
lret
inc
sub
int3
sub
push
stc
stos
iret
jmp
mov
incl
mov
push
mov
mov
filds
xchg
out
insb
lds
mov
inc
cltd
jl
xchg
imul
mov
xor
adc
insl
in
aaa
shrl
dec
pop
add
dec
movsb
pop
mov
leave
xor
mov
das
xor
jge
mov
cmp
cmp
pop
sarb
imul
add
dec
dec
and
xor
repz
dec
wbinvd
mov
out
dec
jnp
jae
lret
decl
add
cli
fcmovb
in
ret
xchg
es
jne
movsb
and
inc
shlb
addl
jp
hlt
jno
hlt
mov
icebp
dec
int3
and
pop
mov
xchg
call
pop
push
lcall
in
xor
shrb
mov
cmp
aaa
pop
decb
or
loopne
cmpsb
jae
or
decl
dec
or
jecxz
mov
cmp
nop
sub
int
mov
stos
mov
rcll
fnsave
movsb
cmc
xor
sbb
or
stc
dec
cmp
jg
sub
decl
and
xor
jle
xor
das
mov
pop
mov
push
push
pop
or
cli
ljmp
dec
mov
call
cltd
push
pusha
push
pop
int3
sub
push
ljmp
push
and
cli
mov
mov
jmp
ljmp
ret
arpl
mov
scas
in
repz
outsl
ja
or
adc
das
cmp
mov
fcompl
mov
mov
push
js
testb
cmpsb
aam
into
adc
decl
push
imul
xchg
das
shr
repnz
jns
ds
fwait
mov
or
or
test
adc
hlt
mov
cmc
pushl
std
pop
jne
cmp
mov
dec
or
push
repnz
out
xchg
rol
sub
cmpb
pop
cmpsb
xor
iret
sahf
sbb
sub
vucomisd
dec
jg
into
push
pop
push
inc
pop
stc
dec
dec
cmp
lret
mov
dec
ljmp
adc
std
adc
cmp
idiv
adc
sbb
mov
ljmp
pushf
push
xorl
outsl
or
xchg
leave
movsl
dec
pushf
dec
aas
or
in
mov
insb
pop
xor
cltd
jne
adc
dec
stos
mov
mov
mov
jmp
cmp
into
ds
xchg
jbe
sbb
pop
push
and
dec
ret
xchg
xchg
fwait
incl
mov
mov
push
or
adc
loope
mov
js
mov
cmpsb
mov
jns
in
scas
loope
jae
pop
iretw
push
incl
push
test
push
inc
test
rorb
pop
push
push
sbb
lock
adc
xor
pushl
sub
inc
add
scas
xchg
mov
pop
fcoml
push
jb,pt
push
cmpl
ss
inc
dec
mov
dec
in
loopne
pusha
ja
pop
jl
aam
out
jge
cmovbe
ljmp
lods
leave
repz
scas
cmp
nop
pushl
loopne
in
data16
add
jmp
dec
pop
fdivrs
inc
dec
mov
add
ljmp
gs
jno
mov
cltd
mov
stc
add
push
in
mov
push
cld
jg
mov
mov
cmp
aam
aad
push
fs
int
pop
mov
pushl
test
sub
and
out
and
mov
imul
jo
jo
or
pusha
mov
call
ficoms
sub
ficompl
add
rcr
subl
or
inc
call
ret
mov
sbb
stc
or
jp
ficomps
adc
enter
xor
inc
int
ret
add
adc
jnp
jb
mov
ret
in
out
push
or
decl
sbb
jb
jb
and
imul
push
mov
call
xchg
loopne
ljmp
mov
inc
xlat
rorb
jo
pop
lahf
xor
xchg
insl
jae
dec
ret
xchg
aas
addl
sbb
lock
out
jge
daa
testb
inc
cmc
mov
jp
cmp
stos
or
add
xchg
iret
pusha
and
lcall
mov
push
rorl
xchg
mov
insl
add
enter
lock
out
outsb
push
clc
xor
fcoms
jl
lcall
mov
out
adc
lods
jmp
lea
jg
jge
pop
dec
adc
sbb
fbstp
in
sbb
mov
sub
or
in
decl
push
ja
fucomi
orl
push
adc
sbb
and
aam
or
cld
popa
lahf
inc
lods
lods
and
out
jae
sbb
movsb
xor
sbb
incl
add
mov
inc
sbb
mov
pop
sarl
lods
jmp
mov
mov
xor
lods
jo
repz
int3
ret
jbe
pushf
cld
les
pushl
push
leave
cld
sub
in
xchg
or
fwait
fstp
ds
jne
outsb
fbstp
mov
jg
pushl
outsb
jns
call
dec
aaa
sarb
js
mov
incl
add
andnps
or
lret
mov
rorl
and
call
pop
int
lea
loop
sub
dec
fadds
fs
js
or
jg
test
int3
mov
or
dec
rol
dec
stos
in
sar
decl
jb
adc
inc
iret
and
or
push
cmp
push
ljmp
or
fsubs
dec
mov
mov
enter
inc
xor
mov
pop
mov
les
pop
push
and
pop
ljmp
jno
pop
insb
orb
hlt
xor
pop
enter
sarl
loop
jg
fdivrl
xor
in
lods
sbb
ljmp
pop
fcomps
cltd
xlat
decl
fs
jnp
cs
and
mov
cmp
dec
mov
or
mov
nop
xchg
jne
in
stc
dec
xchg
jb
aad
daa
clc
les
jmp
cmpl
dec
xor
lcall
adc
popa
jge
lea
subb
dec
popf
cwtl
dec
jl
incl
xlat
pushf
sub
sub
or
stc
sub
loop
add
outsl
fnsave
jmp
jmp
jo
mov
adc
mov
mov
sbb
mov
incl
scas
arpl
decb
fstpt
push
inc
sbb
jmp
je
add
sbb
add
xlat
sbb
es
jnp
sbb
dec
js
or
incl
jbe
insl
jns
pop
and
mov
cwtl
mov
inc
sbb
sub
scas
clc
bound
add
scas
fmuls
aaa
adc
repnz
mov
fs
stos
inc
ja
stos
adc
fisubs
imul
mov
mov
xlat
test
push
pop
or
incl
mov
mov
sbb
xor
push
js
int
outsl
shrb
xor
ret
call
xor
inc
clc
mov
gs
call
int
lods
ret
pushl
add
add
inc
push
adc
call
push
jbe
filds
std
enter
popfw
and
insl
into
sub
and
adc
in
mov
lcall
push
or
adc
sbb
out
fisubl
loopne
inc
or
mov
stc
in
pop
mov
inc
bound
fldcw
imul
mov
jmp
inc
fwait
xor
inc
inc
jl
push
mov
in
pop
and
pop
jle
bound
ret
jmp
jno
cmpsb
or
mov
add
push
test
lods
pop
dec
fsubrs
sar
jg
inc
pop
sarl
insb
and
adcb
push
push
push
dec
pop
jmp
xchg
cmp
imul
sub
dec
mov
mov
stos
nop
roll
movsl
jg
xor
insl
ljmp
mov
jo
add
lcall
aam
pop
dec
adc
jnp
mov
push
pop
xor
clc
adc
inc
pop
leave
add
xor
sti
mov
stc
add
movsb
pavgw
inc
call
mov
xor
pop
test
lock
xchg
cli
push
xchg
insb
outsb
xchg
sar
lcall
mov
gs
inc
lock
fistl
jecxz
add
ds
sbbb
xchg
mov
sbb
ret
xor
xor
add
jo
div
lcall
icebp
inc
fimull
outsl
push
mov
fs
ljmp
adc
or
mov
xchg
add
jg
sub
sub
out
mov
jg
pop
icebp
lea
outsb
insb
inc
pop
rcrb
jle
movsl
mov
mov
test
cmpsb
mov
add
cmp
xchg
fdivrl
push
insl
repz
pop
jae
out
sbb
sub
pushl
mov
adc
cli
into
loop
cmp
cld
inc
xchg
lahf
and
icebp
aad
mov
inc
js
pop
lock
aas
push
inc
ja
inc
lcall
xor
scas
push
pop
insb
add
fcomip
inc
out
arpl
lcall
mov
adc
aaa
mov
xor
pop
call
and
lods
lret
repnz
jo
dec
repz
add
mov
ja
jp
or
sti
jp
loope
mov
ss
push
int3
les
lcall
lcall
jecxz
test
fs
inc
shlb
nop
movsb
push
cltd
mov
or
inc
mov
ljmp
popa
sarl
aas
mov
xchg
popf
repnz
jo
negb
call
xchg
lret
xchg
cld
cmpsl
cwtl
jns
sbb
pop
in
lcall
pop
stos
mov
in
sbb
mov
mov
sbb
add
movsl
jle
jge
enter
sbbb
adc
xchg
lret
cmpsl
mov
cli
mov
jmp
pop
int
mov
mov
mov
push
loope
sub
out
add
ljmp
cli
out
or
fwait
data16
aad
sarb
mov
mov
shlb
out
jp
movsb
in
jmp
sbb
and
shll
call
jne
cmp
loope
cli
inc
rcrl
divl
sbb
mov
push
push
and
cli
mov
xor
pusha
in
and
popa
jo
ljmp
push
or
mov
andb
jns
dec
pushl
clc
je
shlb
xchg
push
add
andl
imul
bound
push
lret
sub
ss
ud1
adc
enter
dec
xor
jl
les
jg
es
push
in
pop
mov
pop
into
pushl
outsb
sti
aaa
insl
imul
mov
cltd
sbb
icebp
roll
loop
call
sbb
inc
js
dec
fiadds
and
int3
push
out
adc
mov
xchg
jecxz
out
xchg
inc
in
dec
or
cmpsl
and
lcall
decl
push
push
jl
fildl
xchg
and
or
sbb
fdivrs
ljmp
cmp
pop
scas
jle
mov
test
lcall
pop
in
inc
outsl
pop
mov
repnz
cmp
cmp
das
xchg
xchg
xchg
repz
filds
adc
outsb
mov
and
sahf
mov
aad
ljmp
mov
and
cmpl
fidivrs
or
and
sbb
out
clc
js
mov
add
loope
pop
jno
in
mul
dec
or
stos
or
int
out
mov
imul
pop
stc
fdivr
push
mov
jns
lods
inc
lods
cmp
or
jmp
mov
jb
aas
jle
fwait
je
push
dec
xchg
test
pop
lret
sbb
jae
xchg
out
cld
call
insl
inc
jbe
pop
xchg
mov
mov
icebp
nop
jns
roll
ljmp
test
ds
subl
jnp
inc
incl
dec
sub
cmp
test
pushf
or
jg
hlt
decl
inc
ret
sar
lar
leave
add
cmp
cmp
lock
cmp
popf
xchg
mov
aas
xchg
dec
mov
mov
in
fildl
and
mov
sub
xchg
in
out
lds
dec
in
je
leave
cmpl
pop
icebp
xchg
icebp
dec
sub
leave
mov
aaa
ret
ret
add
stos
gs
loopne
outsl
mov
dec
cld
pop
sbb
lock
bound
sbb
xor
cmp
mov
clc
decl
decb
push
ja
lret
invd
push
repz
aas
cld
mov
jnp
pop
in
sub
ljmp
pop
push
xor
cld
mov
push
testl
push
sub
cmp
lcall
inc
pop
or
sarl
sub
pop
movsl
aas
sub
fmulp
cmc
or
decl
and
lods
push
dec
inc
xchg
aaa
mov
cwtl
in
cmp
daa
jnp
jge
dec
xor
call
push
push
xlat
jnp
out
mov
jl
xchg
enter
pop
cmp
jnp
call
out
aaa
xor
lcall
and
xchg
lock
mov
loop
inc
cli
bound
incl
jne
insl
push
pop
pop
inc
cmc
dec
aad
add
xchg
call
movsl
ficoms
sub
subb
sub
into
mov
dec
shll
jmp
xchg
jnp
adc
daa
mov
inc
dec
divb
adc
sub
jnp
test
mov
inc
mov
arpl
enter
outsb
push
mov
lock
jo,pt
pushf
ljmp
sbb
cmp
mov
stos
adc
lret
xor
fcmovu
cs
inc
aad
xchg
scas
popf
lcall
ljmp
add
xchg
fcompl
shrb
push
lds
jge
inc
adc
les
fisttps
lahf
test
add
lds
cmp
sti
push
fstpt
push
lods
xor
test
bound
in
inc
adc
jg
jl
or
imul
lea
fisttps
stos
fs
aam
addr16
inc
rolb
lahf
adc
push
lahf
pop
adc
sbbl
inc
addr16
lcall
mov
push
xor
pop
sub
cltd
inc
inc
xchg
xchg
mov
sub
fistl
dec
jg
mov
push
and
jnp
loopne
jge
ja
repnz
jg
mov
mov
inc
not
mov
icebp
pop
loop
sahf
push
pop
aad
mov
loop
stos
sbb
daa
aas
add
into
insb
lods
xchg
pop
dec
mov
push
in
jg
loopne
xchg
mov
adc
das
rorl
imul
popf
call
xchg
popf
popa
xor
insb
mov
or
arpl
loope
les
in
movsb
pop
inc
movsb
icebp
xorps
mov
ficomps
inc
lcall
out
pop
scas
cmp
push
cmp
push
loop
cmp
decl
xor
or
aas
jl
loop
leave
mov
lret
and
addb
das
cmp
mov
push
lock
jno
repnz
cwtl
dec
fwait
js
xlat
or
xchg
adc
push
lock
call
in
pop
add
sub
popf
dec
push
aam
hlt
pushl
les
sti
mov
pop
into
cmp
js
lret
mov
cwtl
out
int
pop
cmc
sti
rclb
xchg
add
mov
jmp
cmpsb
sub
das
lods
dec
std
and
xor
xchg
xchg
xchg
mov
pop
aam
lods
mov
out
rorb
lea
xchg
cmp
insb
lock
not
clc
cmpl
pop
add
out
jmp
test
adc
lea
lahf
mov
sub
inc
lds
cld
aam
inc
test
and
cld
leave
es
xchg
scas
xchg
jno
adc
and
inc
les
out
pushl
sbb
dec
loop
rolb
lods
add
jnp
aaa
inc
js
lgs
dec
pop
jb
mov
jno
sbb
inc
gs
push
adc
inc
out
clc
ljmp
test
call
xchg
add
xchg
ret
js
dec
xor
cld
jne
movsb
ljmp
ror
sub
and
xor
icebp
or
xchg
lcall
rorb
xlat
pop
xor
pop
xor
sbb
enter
cmp
popa
mov
ss
dec
cmpsb
dec
popa
rclb
out
scas
inc
in
vpmulhuw
mov
cs
jg
lcall
xor
inc
push
push
popf
inc
fldcw
mov
inc
pushf
mov
jle
and
mov
push
mov
push
lds
repnz
jl
fisttps
in
xor
mov
adc
mov
std
mov
daa
outsl
cmp
pushf
daa
aaa
jecxz
mov
adc
add
mulb
int
pop
jp
jmp
decl
rolb
jns
and
sbb
out
aam
add
movb
test
dec
test
ret
mov
jb
clc
ret
and
mov
into
inc
lret
xchg
add
jne
pop
repz
sbb
xlat
inc
adc
aas
add
lcall
xor
rclb
stos
popa
arpl
loope
jb
and
cmp
movsl
imul
sbbb
mov
xchg
sub
decl
pop
sub
cld
loop
xlat
andl
jmp
mov
adc
clc
pop
imul
in
adc
stos
stos
in
xor
ljmp
div
movsb
lods
dec
sub
adc
cmp
sahf
je
hlt
xlat
xor
aaa
sar
repz
cmp
ret
xor
or
mov
incb
pop
mov
push
mov
es
popf
lret
jecxz
sbb
call
fisubrl
ret
cmp
dec
xor
add
or
sti
adc
jmp
inc
stos
adc
mov
mov
ljmp
adc
mov
decl
das
dec
push
stos
test
mov
cmp
pop
popf
je
cmpsb
sbbb
push
filds
ja
cli
lcall
pusha
cmp
cmp
ss
cld
pop
cmp
lret
cmpsb
sbb
ljmp
cwtl
or
dec
xchg
mov
mov
lods
icebp
shlb
mov
push
mov
mov
outsb
and
push
lods
movsl
inc
sub
lahf
sbb
sub
sahf
pop
pushf
ljmp
cmpsb
or
testb
adc
ficoml
js
cmpb
add
fs
lcall
jmp
scas
or
cmc
fsubs
xchg
pusha
aaa
stos
in
ljmp
jecxz
dec
outsl
nop
or
fcompl
or
add
insb
bswap
imul
inc
ljmp
add
out
jne
hlt
dec
lret
fwait
push
xor
enter
mov
fbld
das
sbb
mov
and
pushl
std
inc
sbb
aam
repnz
adc
cmp
xor
xlat
outsl
js
icebp
incl
gs
jbe
std
mov
sbb
fxch
int3
cmp
pop
aad
decl
sbb
mov
ja
xchg
arpl
add
or
cmpsl
jp
pop
jg
pop
rolb
jmp
inc
aad
sbb
stos
mov
xor
jmp
cmp
clc
fbld
ja
jb
mov
dec
mov
lahf
and
inc
mov
and
xchg
lods
loopne
cwtl
mov
push
jmp
push
pushf
inc
into
pop
loope
dec
jmp
daa
cmp
aaa
loope,pn
xchg
cmp
ret
test
pop
icebp
xlat
fnstsw
push
lea
repnz
and
in
add
mov
sbb
xchg
lret
fisubrl
mov
pop
sbb
clc
insb
cmpsb
and
jecxz
mov
mov
and
decl
clc
imulb
out
xchg
idivb
cmpsl
pop
test
pop
hlt
mov
dec
insb
push
mov
dec
mov
je
cmp
mov
bound
imul
pop
test
xchg
pop
fsts
adc
mov
call
pop
mov
dec
dec
pop
dec
or
jo
leave
and
adc
ret
dec
or
pushl
cld
fs
lods
and
mov
je
jle
test
loop
inc
js
xor
pushl
lock
sahf
ret
cld
lahf
cs
hlt
adc
xor
rol
jbe
adc
pop
mov
cwtl
inc
enter
ret
out
loop
add
jbe
movsb
out
mov
xlat
bswap
jg
mov
pop
rcrl
call
mov
jnp
sbb
cli
mov
mov
inc
outsb
mov
call
add
adc
filds
jnp
lcall
iret
std
or
cmp
cmp
ljmp
clc
pop
cmpsb
adc
sbb
inc
jb
push
and
and
or
mov
sahf
sahf
mov
adc
mov
mov
bndldx
incl
insl
es
sbb
dec
fldenv
sbb
fldenv
test
jg
decl
cmpb
mov
xlat
add
popa
mov
xchg
xchg
push
ret
cld
outsb
pop
in
clc
sbb
les
decb
jecxz
adc
xor
xchg
rclb
push
dec
sub
adc
adc
scas
hlt
sub
mov
mov
mov
inc
xor
pop
push
push
das
pop
or
sbb
sbb
repnz
xorl
sbb
mov
movsb
jb
cmc
loope
mov
ds
push
ljmp
xor
cmpsb
xchg
pop
arpl
notb
jo
js
incl
push
rol
dec
or
shrb
pop
sbb
cmp
daa
xor
xor
or
daa
dec
outsb
mov
push
call
sbb
cmp
ss
sub
dec
mov
loop
xor
call
movsb
adc
fabs
mov
push
aas
fucom
ret
repnz
mov
mov
sub
mov
rcrl
fsubrs
mov
fidivl
dec
xchg
cmp
in
cmp
daa
jae
sbb
pusha
pop
scas
mov
pushf
cld
pop
mov
shll
imul
sub
mov
imul
cmpsl
testl
sbb
outsl
jg
lret
push
ljmp
mov
xlat
sub
mov
sti
cmp
mov
mov
mov
mov
cmpl
ljmp
jl
xor
icebp
addr16
adc
jmp
bound
and
les
test
fwait
ret
sub
mov
testb
xchg
sub
push
call
xor
sti
aad
fistpl
loop
adc
push
xchg
pop
xchg
cwtd
xchg
or
ljmp
stos
iret
sbb
mov
add
out
cmp
movsb
add
pop
pop
jg
pushf
sbb
bts
mov
rcll
mulb
cltd
aaa
popaw
outsb
and
lahf
mov
outsl
mov
push
or
push
or
mov
mov
pop
mov
aas
aaa
fisttpl
dec
hlt
ss
daa
inc
pop
popf
shlb
mov
xor
fdivrp
mov
aaa
mov
pop
xchg
andb
out
inc
sahf
lock
ficoms
jmp
inc
xor
shlb
jmp
cmp
in
mov
cltd
xor
cli
lea
push
pop
inc
lcall
push
and
nop
outsb
je
jae
aas
mov
or
push
repnz
stc
aad
pop
incl
xchg
ljmp
icebp
enter
cwtl
repz
or
pushf
and
loopne
pushl
pop
mov
sbb
stos
mov
lcall
cmp
pop
iret
pop
arpl
mov
adc
sub
sar
decl
lods
pop
inc
mov
enter
dec
in
nop
dec
jmp
arpl
mov
incl
mul
rolb
int
orl
mov
mov
pop
loope
mov
lcall
cld
sbb
or
ljmp
ret
jmp
gs
adc
out
jg
cs
mov
inc
jns
push
jo
push
pushl
mov
ja
xchg
xor
rorl
stos
mov
mov
loope
mov
dec
clc
lock
pushl
test
add
aad
cltd
nop
add
sbb
cmp
dec
stc
lds
pop
cmpsb
fistl
fsubrp
cmc
or
mov
cmpsb
in
sbb
sbb
in
jmp
cmp
jno
pop
mov
addr16
push
push
loopne
xor
cld
call
inc
pop
adc
xchg
inc
sub
or
or
aam
ljmp
dec
jno
cmp
xchg
test
xchg
xchg
mov
and
outsl
int
loopne
or
call
mov
jmp
adc
jbe
pop
shlb
in
shl
test
cltd
add
ljmp
mov
xor
rcrb
push
arpl
dec
xchg
add
push
push
ficomps
insl
jmp
lcall
pop
sar
sbb
xchg
jle
fsubp
std
das
lret
ljmp
xchg
add
mov
push
push
adc
ret
dec
sbbl
jg
incl
or
and
lret
movsl
jecxz
xor
fstps
rcl
jmp
test
inc
or
out
repnz
xlat
pusha
push
pushl
iret
sbb
mov
sub
jno
inc
mov
xor
call
das
sti
popf
xor
aad
mov
movsb
in
aas
icebp
or
clc
push
mov
pop
mov
jge
sbb
lods
ljmp
aam
pushl
nop
inc
inc
mov
ret
insl
repnz
push
add
add
aam
pusha
cmp
cmp
mov
adc
dec
loop
roll
hlt
sub
pusha
xchg
arpl
xor
loopne
stc
dec
and
sub
adcb
decl
addr16
das
ret
adc
sbb
mov
ljmp
cli
shll
enter
les
pop
popa
popf
mov
icebp
ss
fcomip
push
mov
out
or
sbb
ficoms
mov
popf
push
lret
sub
mov
fbld
lahf
jecxz
pop
or
push
fmulp
pushf
aaa
sub
je
mov
cmp
add
add
sbb
scas
adc
out
push
stos
ljmp
jle
mov
imul
fwait
leave
mov
pushl
pop
mov
cmc
lea
and
cli
outsl
pusha
adc
or
leave
leave
mov
call
in
cli
addr16
xchg
pushf
mov
daa
test
pop
push
mov
inc
jg
sbb
fwait
repnz
xor
jg
jle
sbb
inc
cltd
dec
shrb
bound
pop
xor
adc
and
adc
dec
xor
add
insb
jns
jno
test
mov
push
das
cltd
pop
and
inc
shlb
mov
jo
and
out
hlt
call
fcmovnbe
xor
out
sub
push
sarl
clc
in
inc
jne
mov
sbb
xor
sar
ss
mov
inc
lret
xorb
or
push
test
jg
call
cmc
mov
adcl
decl
js
or
push
mov
movsb
divps
outsl
add
pop
push
add
jmp
cmc
cmp
cmc
jl
jle
sbb
jp
ds
mov
or
sub
lcall
dec
imul
sub
test
sti
pop
cld
sub
inc
ljmp
addl
addb
lahf
or
hlt
xor
es
lcall
js
mov
pop
cmp
xchg
nop
xor
jg
and
mov
xor
pushl
leave
push
lcall
add
cmp
cmp
jbe
jmp
mov
mov
out
stos
pop
pop
orb
sbb
pop
mov
add
mov
push
jmp
call
insb
xor
sub
mov
in
jecxz
pop
xor
and
push
lds
xchg
aad
lcall
orl
leave
iret
rcrb
mov
pop
inc
jmp
or
stc
inc
rolb
xchg
and
fdivl
jl
or
popf
inc
pop
mov
incl
int
pop
pop
std
dec
addr16
test
test
fnstcw
pop
cmpsb
decl
add
movsl
imul
xchg
add
xchg
sahf
and
sti
mov
into
ljmp
lret
enter
dec
push
mov
fwait
jnp
adc
aas
in
cmc
jmp
loop
inc
dec
aad
jle
ds
or
test
xchg
xor
popa
ret
pop
ja
pop
out
push
insb
mov
arpl
test
dec
enter
sub
adc
or
lcall
mov
lret
sub
filds
sub
mov
mov
xor
mov
in
mov
in
cmp
sub
cmc
pop
call
pop
repnz
test
sub
dec
jge
popa
fnstsw
inc
or
mov
mov
push
sub
fimull
push
in
pop
jno
adc
and
xor
int3
xchg
add
pop
das
sbb
decl
inc
sbb
pop
cmp
out
mov
js
cli
js
pop
fisttps
decl
sbb
xorl
cmpsl
dec
mov
add
dec
ljmp
call
dec
test
imul
adc
movsl
add
add
pop
xchg
mov
jmp
adc
lret
out
sarb
or
fsubl
stc
mov
mov
lahf
mov
in
jg
mov
outsb
cmpsb
ficompl
pusha
addr16
mov
push
sarl
mov
inc
or
loope
getsec
mov
pushf
decl
es
sbb
xchg
mov
out
idiv
jno
lock
lcall
inc
sbb
xchg
adc
mov
sub
mov
cs
inc
xor
jb
cmp
icebp
popa
je
pop
cmpl
lea
decl
jmp
in
out
jle
mov
outsl
lcall
mov
dec
cmp
daa
sti
faddp
jno
fildll
sbb
in
int3
insl
int
lods
push
out
or
sar
pushl
mov
inc
xchg
xor
notl
jbe
xchg
cmp
arpl
loop
incl
push
out
pop
scas
xchg
mov
mov
imul
lahf
les
hlt
inc
sub
outsb
pusha
jp
sbb
out
rcl
in
mov
sbb
enter
jecxz
es
lock
call
push
dec
mov
push
popf
sbb
fmulp
push
push
mov
ljmp
idivl
mov
mov
sub
sub
pop
enter
cmpsb
je
mov
sub
adc
xchg
mov
pop
sub
stos
mov
add
sub
jb
pxor
lock
ja
bound
fcos
cmp
or
xor
adc
addr16
incl
loopne
fwait
push
mov
jbe
lods
imul
pop
push
pop
inc
ret
push
sub
adc
jmp
push
pop
hlt
adc
loope
inc
mov
xchg
shrl
push
cltd
or
mov
leave
jg
sbb
xchg
iret
sbb
cli
cmc
and
xchg
mov
rorb
mov
inc
shll
pop
das
push
aaa
add
push
cmp
decl
and
xor
jnp
mov
cmp
push
faddp
clc
call
test
sti
push
push
stos
xchg
inc
and
in
inc
or
ljmp
jecxz
outsl
sub
stc
lock
mov
push
mov
ret
data16
mov
ss
and
cltd
cmpsb
pusha
rcr
xchg
push
test
jl
outsl
cmp
mov
shl
std
mov
cmpsb
jb
aad
lods
jbe
ja
stos
lods
out
xchg
stos
sub
out
lahf
jle
imul
jmp
jp
mov
dec
andl
mov
shll
or
pusha
test
xchg
pop
inc
or
pop
fisubrl
decl
xchg
inc
mov
and
shl
sub
push
add
rcrl
pop
push
ds
lret
loopne
sahf
jmp
in
lret
xor
dec
repnz
addr16
inc
cmp
sub
cs
push
and
js
xor
lds
inc
push
bound
divl
ret
call
loopne
mov
push
mov
mov
int
cs
ud0
push
clc
jge
ret
bound
ret
mov
adc
idiv
incl
ja
aam
jp
mov
repz
dec
or
les
pop
mov
push
cmp
jg
mov
popf
sub
mov
sahf
sbb
sbb
into
aaa
push
push
mov
xor
dec
icebp
mov
mov
inc
imul
push
ljmp
add
daa
pop
divl
in
adc
mov
and
or
shlb
icebp
out
jecxz
in
fs
cwtl
jne
mov
pop
popa
cld
pushl
mov
shrl
xor
mov
jg
stos
push
repnz
stos
mov
pusha
xchg
call
lcall
or
sub
in
dec
das
xorb
scas
aas
push
xchg
mov
push
push
add
jmp
lds
fisubrs
mov
push
pusha
stc
push
and
ds
nop
incl
pop
pop
lds
nop
or
cmp
push
inc
adc
sub
decl
lock
fwait
add
jne
sbb
push
adc
sbb
mov
int3
jp
or
sbb
xchg
jnp
lcall
fucomi
stc
or
cmp
cmp
mov
adc
mov
lea
repnz
push
and
in
outsb
adc
inc
hlt
repnz
int3
roll
lea
jnp
cmp
shl
fdivp
cmpsl
ss
rol
bound
mov
test
lret
ljmp
dec
or
fadds
and
mov
sub
mov
lds
push
jmp
pop
fistps
ljmp
inc
test
mov
out
out
lahf
mov
loope
dec
jmp
adcl
mov
push
mov
inc
xorl
call
or
test
stos
outsl
enter
xchg
inc
and
xchg
push
lea
fiadds
out
clc
decl
pop
aad
jg
add
lcall
sub
hlt
jge
pop
std
incl
inc
adc
popf
dec
and
fistpl
mov
sub
ret
sub
pop
std
decl
xlat
rclb
leave
mov
push
jp
jp
ja
fbld
cmp
add
mov
push
cli
push
push
push
mov
shll
std
jmp
les
daa
jns
jle
out
fistl
xor
pushl
cmp
and
jle
lock
inc
mov
enter
dec
loope
incl
jnp
adc
inc
mov
mov
pop
lcall
xor
lret
mov
mov
gs
adcb
bound
shlb
xor
adc
xchg
sbb
mov
or
inc
pop
and
sbb
roll
insl
xor
fadds
mov
imul
mov
loope
lds
cmp
inc
dec
cs
xor
mov
xchg
push
push
mov
ljmp
lcall
cs
xchg
int3
lret
mov
fildl
int3
xchg
mov
dec
sub
mov
jmp
jl
jne
aas
push
mov
shlb
dec
cmp
jbe
call
pushf
adc
xor
mov
fnstsw
fimuls
outsl
stos
fcmovb
inc
xor
inc
lds
ror
cmp
outsl
fbld
jo
out
add
loopne
stos
dec
sbb
shrb
jno
loop
call
cld
mov
xchg
std
repz
ja
arpl
cmpsb
push
pushl
sbbl
je
ljmp
adc
push
out
mov
or
cmp
and
sub
add
dec
test
nop
add
and
push
push
sub
xchg
lcall
add
imul
cmp
negb
insb
fs
insl
xchg
outsl
fstp
icebp
stc
sub
and
das
test
mov
dec
jnp
adc
call
gs
ljmp
stc
dec
test
push
mov
gs
inc
add
fildl
adc
repz
jne
jmp
aaa
mov
cmp
test
jp
or
adc
mov
xchg
decb
mov
lret
jl
sbb
outsl
fdivl
push
xor
xchg
test
ljmp
or
and
inc
sbb
mov
jmp
push
movsb
jmp
mov
push
cmp
decl
mov
cwtl
inc
aaa
jae
fbstp
rolb
scas
sbb
xor
and
pop
icebp
ljmp
add
and
inc
mov
lret
in
dec
push
divl
decl
mov
jns
sbb
loop
jg
in
inc
pop
or
mov
adc
enter
pushl
jbe
mov
rcll
add
jp
pushf
int
gs
ja
cmc
das
cmpl
xchg
test
push
sahf
add
repnz
xor
pop
in
cmp
add
ret
sub
xlat
ficoml
and
jge
shrb
jne
mov
cld
mov
jbe
je
mov
mov
dec
cli
jne
add
jmp
lcall
call
lods
daa
xchg
enter
or
add
into
ret
inc
movsb
cwtl
mov
jmp
add
outsb
fdivrs
push
push
cmp
int
mov
xchg
movsl
cltd
ds
pop
xchg
in
mov
ljmp
sar
mov
flds
sub
cmc
andb
mov
and
dec
std
jmp
adc
cmc
pop
aam
and
pop
in
repnz
xor
pushl
mov
imul
icebp
push
xchg
out
jmp
pushl
pop
and
dec
shlb
lahf
mov
cs
mov
pushf
fwait
xchg
mov
mov
jno
scas
mov
cmpsl
ss
add
ror
xchg
imul
pushl
xchg
sbb
test
aaa
movsb
sbb
cmp
loope
push
push
pop
mov
cmp
push
int3
and
adc
fists
sub
cmpsl
mov
fsubrl
xor
aad
decl
push
aaa
fldt
in
enter
add
pushf
lds
lock
xor
imul
cmp
std
jb
push
pop
dec
xorb
dec
dec
fdivl
push
xchg
adc
pop
ret
pusha
xor
dec
push
test
push
ljmp
dec
or
and
ljmp
fistl
test
cmp
dec
lahf
arpl
mov
ljmp
jbe
and
call
mov
fidivrs
jecxz
mov
mov
stc
mov
pop
and
pop
subl
or
xchg
push
or
lcall
jne
mov
jno
jno
push
mov
mov
pushl
lds
jae
cmpsb
das
or
jno
js
pusha
jno
jne
les
ljmp
mov
loop
pop
bound
mov
shll
jno
jnp
sar
pop
push
pop
cld
add
in
pop
cmc
popa
pop
jmp
gs
loopne
lcall
and
mov
and
cmp
lcall
lret
loopne
cmpl
cs
and
scas
leave
pop
fisubl
pop
lock
cltd
sahf
pop
iret
loopne
int
adc
mov
jo
or
call
adc
cmpsb
lcall
rol
xor
lea
sub
jnp
insl
sbb
push
pop
rcrb
addr16
dec
in
sub
scas
test
fdivs
loop
call
ja
pushl
push
mov
bnd
and
and
push
ret
lock
int
sub
cmp
ljmp
adc
xorl
loop
or
bound
pushl
dec
test
cltd
nop
insb
setno
repnz
incl
fsubl
jbe
leave
ret
add
imul
insb
popf
ficomps
mov
mov
pusha
or
mov
cs
insb
sub
mov
adc
rcll
pop
cs
mov
fs
add
outsb
stos
rolb
jl
sbb
jg
and
xchg
jno
and
add
stos
lret
repnz
ljmp
js
and
out
cmpsl
dec
repz
xor
push
pop
pop
nop
scas
mov
dec
xor
adc
inc
std
mov
pop
movsl
insl
mov
outsb
and
ss
mov
fsts
cmp
mov
test
ret
adc
xchg
js
ja
jmp
xor
inc
cmp
xchg
mov
and
or
imul
add
adc
mov
outsb
pop
xchg
mov
in
sahf
cli
lret
ss
sub
sbb
decl
add
xchg
lret
movlps
addr16
or
jbe
lcall
scas
ss
jmp
add
lret
repnz
mov
xchg
cmp
stos
mov
and
jmp
push
mov
lcall
or
movsb
xchg
ljmp
and
cli
mov
xchg
loop
jg
int
les
xchg
mov
int3
imul
ljmp
cmpsl
fcmovb
ljmp
inc
mov
jecxz
adc
jmp
sub
sub
incl
in
test
jno
roll
jg
cmp
pop
mov
jle
sahf
jle
jmp
push
sarb
je
cmp
stc
jecxz
sub
lcall
push
cld
js
outsb
fs
jl
hlt
call
push
ljmp
mulb
jg
and
outsb
mov
scas
sahf
pushl
or
out
xchg
fs
adc
cmp
dec
push
mov
jg
push
xchg
sarb
movsl
out
idivl
cmp
xchg
xchg
sbb
loopne
sbb
loopne
inc
incl
cmp
jns
pushl
mov
jmp
inc
jge
mov
dec
out
pop
jbe
std
xor
pop
push
xchg
lock
ljmp
loop
sbb
push
xchg
pop
and
add
ljmp
int
cs
in
int
jmp
in
mov
call
pop
push
push
loop
cmp
pop
adc
fimull
push
lret
call
jle
sbb
pushf
fistl
inc
cmp
insb
nop
std
ljmp
mov
fwait
es
mov
mov
ss
cmp
in
lcall
bound
pop
clc
fadds
aad
push
andb
sbb
cwtl
je
pop
cli
hlt
mov
fs
pop
int
or
addb
insb
jle
pop
decl
adc
imul
loope,pn
aas
jg
push
xor
daa
je
adc
jg
scas
xchg
xchg
xor
in
loopne
pusha
shrb
pop
add
imull
inc
xchg
outsl
ja
cmp
arpl
int
je
xchg
addr16
mov
xlat
pushl
aad
rorl
jecxz
or
pop
pop
or
movsl
adc
dec
push
decl
jne
in
cli
pop
jno
sti
dec
stos
inc
jnp
and
das
jmp
cs
jg
mov
cmp
mov
js
xorb
jnp
inc
std
jno
cmpsl
pop
divb
sti
sbb
mov
or
and
cld
ja
lret
mov
jg
mov
rclb
scas
fstpl
jnp
pop
cmpsl
xor
sti
xor
loopne
mov
inc
stos
stos
adc
test
mov
cmp
mov
xlat
pop
xchg
hlt
call
mov
jb
pop
sbb
or
test
push
in
imul
mov
lods
pushf
ljmp
movsb
xchg
push
mov
pusha
std
cmc
hlt
lcall
ljmp
xchg
xchg
jae
xchg
adc
adc
sbb
jne
fucomip
xchg
push
addb
jl
sub
pusha
push
call
cmp
mov
addr16
hlt
call
or
xchg
dec
mov
jns
nop
fucomp
movsl
cmp
pop
pop
gs
sar
call
ds
test
and
dec
sbbb
or
lret
jg
out
clc
js
ss
lcall
hlt
aaa
iret
mov
testb
out
data16
cltd
push
sub
pushl
shl
inc
push
scas
mov
mov
outsl
mov
int3
out
fdivr
xchg
cltd
ret
ljmp
test
aad
adc
sub
inc
out
fiaddl
test
push
inc
pop
popf
cmp
jmp
cmc
testb
mov
inc
insb
sti
fsubrl
fdiv
sahf
lea
jne
lcall
test
sub
dec
inc
dec
pop
push
sub
shrb
fwait
mov
inc
fs
jmp
inc
push
hlt
jle
addr16
xchg
in
inc
mulb
xchg
sti
mov
mov
xchg
mov
mov
push
adc
push
push
in
push
cmpsb
adc
scas
lds
cmp
push
lcall
call
mov
mov
xchg
mov
push
push
popa
jl
pop
or
jno
and
incl
fcmovnb
add
out
out
es
lods
mov
adc
imul
nop
jbe
xor
ss
std
and
adc
sbb
adc
insl
xor
jae
xchg
sbb
add
or
aad
lea
test
rcrl
sub
test
imul
xor
fsubrs
mov
inc
adc
ja
or
and
jmp
jno
xchg
push
xor
pop
sti
jmp
jns
popa
popf
or
out
aaa
jp
call
decl
into
ljmp
xor
popl
inc
mov
pushl
push
fcoml
lea
sub
or
pushf
imul
jge
jg
decl
add
ds
mov
add
pop
out
outsl
fimuls
ret
call
adc
inc
or
inc
push
movsb
and
or
ret
test
mov
ffreep
push
pop
roll
add
lahf
in
fidivrs
xchg
sbb
jmp
pop
cltd
clc
and
pop
mov
push
cld
dec
mov
scas
xorb
inc
lahf
out
loopne
xor
jae
pushl
sbb
pop
or
stos
pop
lret
jnp
jne
pop
mov
aas
dec
repnz
lcall
cmp
call
push
push
cltd
leave
repz
mov
or
pop
sbb
out
das
pushl
sub
xor
inc
movsb
add
jns
push
sub
cmpsl
mov
or
jmp
mov
lock
jecxz
add
cmp
jp
sbb
adc
ljmp
fmuls
imul
pop
and
cmpsb
enter
cmp
mov
cmp
pop
cmp
mov
cmp
ja
icebp
cltd
cmp
das
clc
pushl
adc
sbb
cs
jl
lods
dec
pop
cwtl
dec
fs
call
mov
inc
pop
jae
xchg
cmpsl
mov
dec
cli
aas
mov
popf
movsb
filds
pop
call
imul
hlt
clc
stos
incl
jp
xor
test
adc
cwtl
test
lods
lahf
jl
call
or
xchg
push
test
mov
ret
xor
daa
xor
js
sarl
mov
push
jp,pt
jg
sti
aam
mov
out
jnp
xchg
lds
jg
mov
adc
or
ljmp
into
movl
mov
cmp
sub
mov
lret
lcall
bound
xchg
sub
cld
mov
test
jmp
ret
sbb
mov
call
or
push
sbb
dec
shlb
fdiv
jae
adc
push
sarb
jae
fmulp
mov
jge
pusha
mov
cmp
out
xchg
js
mov
adc
outsl
ret
aad
cmc
jne
xchg
ljmp
imul
dec
mov
movsl
rorb
imul
vmwrite
push
sbb
mov
dec
dec
pop
loopne
aad
pop
dec
inc
xor
add
scas
push
call
shll
call
lock
inc
cwtl
int
push
ja
int3
data16
push
call
fdiv
adc
or
cmp
scas
dec
pop
inc
pop
pop
dec
mov
mov
jg
pusha
fwait
and
test
xchg
push
xchg
inc
or
xor
icebp
inc
mov
mov
add
push
xorl
icebp
push
out
xchg
adc
xor
mov
ja
xor
sbb
mov
jl
sub
xchg
pushf
mov
pushl
call
inc
test
push
xchg
add
xchg
lock
incl
or
sub
xor
xchg
in
cld
aad
push
int
stc
push
mov
or
sbb
pop
pop
ljmp
fistpl
in
lods
aas
cwtl
push
and
cmp
rcll
inc
cld
xchg
sbb
jg
mov
cld
jmp
lock
cmpsb
outsb
mov
outsb
fcoms
cmpsb
and
mov
in
add
jg
mov
dec
and
gs
or
lcall
add
imul
sahf
pop
cld
cmpsb
lds
daa
lret
clc
pushf
mov
insb
jbe
aam
mov
sub
and
adc
shlb
sub
jg
mov
xor
push
sbb
cmp
mov
lock
mov
popa
pop
repnz
sub
repnz
sbb
mov
fistl
jns
hlt
scas
decl
out
xchg
pop
pop
push
xchg
lahf
pop
inc
scas
jp
scas
fsubrl
aam
or
in
pop
push
aas
mov
push
pop
mov
sarb
ljmp
into
pusha
push
push
dec
in
loopne
push
pop
jg
cmpsl
dec
add
fs
and
pop
gs
loop
adc
ss
mov
jmp
and
mov
xchg
scas
pop
imul
imul
inc
inc
test
in
shll
mov
mov
js
insb
sbb
movaps
mov
adc
repz
lret
pop
lret
loopne
cmp
shll
add
jb
sahf
imul
xchg
fisttps
out
push
mov
pop
arpl
test
filds
cmp
push
sub
jmp
adcl
mov
call
cmc
shl
in
bnd
push
inc
xor
notb
dec
lret
aaa
andb
je
imul
adc
bound
filds
push
mov
xchg
cmc
cmc
sahf
call
xchg
sub
fbstp
cld
xor
push
pop
pop
fcomps
fcoml
mov
add
pop
pop
loopne
jmp
and
in
jnp
pop
pop
push
dec
jne
pop
cwtl
into
cmc
mov
dec
idivb
push
movaps
sbb
mov
icebp
hlt
ljmp
mov
sub
loopne
clc
and
push
adc
inc
mov
mov
test
inc
adc
mov
pop
int3
int
push
pushf
pushf
mov
daa
leave
ret
cmp
pushl
testl
adc
adc
push
sub
decl
fimuls
ljmp
add
add
or
ror
inc
cmp
ret
call
sub
lea
mov
xchg
sub
out
stos
test
shrb
xor
mov
sbb
movsb
das
in
or
sbb
push
cmc
cmpsb
fisubl
dec
jg
test
and
mov
jle
xchg
arpl
data16
xchg
call
cld
call
mov
out
test
add
popf
and
nop
cld
call
out
movsl
cmp
incl
pop
fidivs
push
pushf
or
xbegin
ret
or
jmp
fmuls
mov
fadds
push
fdivl
jp
dec
push
je
out
sbb
mov
xchg
xor
int3
shl
rcrl
cs
jmp
into
mov
sbb
pop
sbbb
sarb
push
push
sub
and
lock
mov
aam
inc
shlb
scas
pop
sub
and
int
decl
mov
and
rol
add
bound
pop
mov
mov
inc
insb
add
xchg
inc
or
ss
jl
in
sbb
xchg
inc
push
ljmp
ror
push
or
add
jne
fisubs
push
ss
int3
and
hlt
push
mov
sbb
int3
push
lahf
fwait
pop
pop
mov
xchg
mov
cmp
imul
cmp
adc
mov
cmp
enter
movsl
ret
push
pop
into
lods
jne
rcll
fmull
ud0
ljmp
jne
mov
sahf
pop
ret
push
int3
fldl
xor
stos
push
inc
loope
xchg
js
in
jmp
out
neg
int
adc
mov
xor
inc
mov
pushl
dec
movsb
push
clc
inc
mov
inc
cmpsl
lcall
in
adc
sbb
dec
or
lock
aaa
xchg
clc
dec
int
push
sti
pusha
sbb
pop
xor
sbb
fs
push
or
push
scas
jae
or
mov
mov
and
jbe
aas
subl
xchg
sub
fimuls
lods
mov
cmp
pushl
sub
pop
dec
jmp
xor
xchg
and
sbb
decl
push
test
jnp
cmpl
cwtl
jl
es
ljmp
jg
sbb
shl
jmp
sub
and
arpl
xlat
inc
cli
inc
sub
sahf
dec
or
in
or
cmpsl
test
inc
loope
aam
jmp
dec
xchg
dec
idivb
int3
cmp
out
stc
icebp
lcall
jl
mov
das
data16
repz
mov
movsl
push
and
ds
mov
cld
pushl
cmp
lods
hlt
jne
lods
dec
sub
movsb
cmpsb
fs
insb
sbb
xor
jnp
aam
fldenv
out
inc
dec
inc
mov
xchg
sbbl
out
sub
and
adc
std
decl
imul
dec
cli
jb
adcl
xlat
xorl
sahf
or
pop
fildll
fcomip
jo
cmc
sub
data16
sti
cltd
pop
push
sub
fists
push
jbe
inc
and
bnd
sub
addb
xchg
inc
shl
cli
fcomip
jmp
push
pop
sbb
xor
adc
dec
out
scas
cli
pop
xchg
lcall
ret
and
xor
cmp
insl
in
push
sub
mov
mov
jmp
imull
push
mov
mov
jg
ret
or
push
push
popa
clc
mov
call
aam
sub
dec
outsl
mov
pop
rol
incl
pushf
hlt
sub
es
aas
xor
neg
mov
inc
xlat
adc
ds
decl
loope
pop
idiv
sub
aaa
adc
int
push
mov
ljmp
ljmp
iret
sbb
xchg
scas
mov
and
add
and
rcrb
lret
pusha
scas
rorl
jge
jae
call
inc
dec
arpl
outsb
cs
push
rorb
mov
fwait
jmp
das
lock
jae
loope
lahf
cld
mov
lods
jg
out
adc
mov
mov
mov
add
inc
stos
jg
jp
dec
cs
xchg
cmp
jo
mov
sti
pop
sarl
jge
jmp
pop
mov
adc
out
dec
movsl
push
andb
jmp
pop
cmp
jmp
fstl
daa
out
pusha
sahf
adc
pop
jno
cmpsl
and
push
insb
fstl
cltd
xchg
mov
in
test
xchg
dec
xchg
pop
arpl
sti
aad
dec
and
ret
mov
inc
aam
clc
xor
sbb
mov
cmp
inc
and
sar
aam
pop
pop
mov
mov
or
clc
jp
mov
fwait
mov
add
mov
push
inc
dec
pop
mov
mov
cmp
mov
insb
cmpl
call
or
inc
adc
loop
xchg
daa
out
xchg
aaa
jb
popa
lcall
pop
lock
mov
push
lods
push
stc
test
sub
jp
and
stos
stos
call
cmp
add
sbb
fs
or
ljmp
call
ficompl
sub
iret
fwait
xchg
or
mov
dec
ret
sbb
out
call
dec
jge
xchg
dec
imul
lahf
dec
mov
in
mov
and
jmp
aam
and
sbb
test
addr16
movsl
repz
push
mov
adc
jae
fbstp
fdivr
decl
js
adc
pushf
add
mov
test
mov
jmp
cmpsb
add
jno
mov
fsubrp
inc
adc
xor
jno
push
and
testb
push
adc
call
test
inc
scas
sbb
loope
jecxz
loope
jae
xchg
jnp
jecxz
cli
decl
pop
mov
iret
out
sahf
adc
data16
decl
adc
and
xlat
dec
fcomip
aaa
leave
dec
fs
dec
inc
lods
xor
lods
stc
sar
ja
push
test
lcall
xor
xor
mov
lcall
ljmp
sub
bound
sbb
std
mov
adc
aad
orl
or
and
sbb
mov
sub
inc
es
popf
int
xlat
insb
jmp
inc
pop
mov
fs
and
lods
jmp
pusha
cmc
les
sub
fadds
mov
stos
scas
jne
data16
roll
bound
cmp
adc
icebp
lock
add
push
mov
and
stos
push
in
fsts
xchg
inc
jl
into
imul
sub
out
xorb
lods
mov
ljmp
pushf
shll
in
xchg
adc
xor
dec
sub
jg
int3
jno
dec
adc
repnz
adc
mov
xchg
push
xor
out
push
out
lcall
mov
inc
lock
inc
int3
sti
push
fildl
sarb
aas
xchg
lds
pop
decl
push
call
inc
adc
add
lock
push
mov
and
pushl
subb
mov
or
mov
lret
js
pop
xlat
imul
adc
outsb
adc
mov
push
push
nop
xchg
adc
or
das
rolb
lds
dec
nop
and
cmp
and
in
inc
mov
mov
mov
or
inc
in
lret
add
cmp
ljmp
dec
mov
in
dec
cli
fcompl
sbb
decl
test
mov
ret
lcall
cmp
enter
cmp
incl
rorb
adc
or
cmpsb
jmp
mov
adc
inc
clc
rclb
xchg
clc
pop
ja
leave
and
lock
mov
xor
push
lods
loopne
pushl
cld
adc
pusha
scas
push
dec
sub
fwait
pop
push
xlat
xchg
gs
pusha
xor
mov
stos
pusha
shrl
pusha
bound
out
ret
pushl
mov
icebp
pop
ficomps
push
inc
cmpsb
jne
push
adc
jb
xor
data16
popa
push
and
push
add
bound
das
pop
xchg
push
gs
mov
dec
inc
push
gs
test
lods
pushl
sbb
xchg
inc
in
mov
popa
adc
ljmp
lds
xorb
test
sub
rcl
xlat
cmc
pop
fcomip
out
add
fsubl
leave
sahf
xchg
nop
leave
adc
dec
femms
psrad
dec
add
aad
fwait
es
cmpsb
xchg
mov
mov
xchg
std
cmp
pop
pop
call
clc
sbb
daa
inc
outsl
inc
sahf
fsubl
rolb
call
aad
mov
mov
sub
dec
sub
fwait
xor
loop
out
clc
lcall
fidivl
in
mov
dec
adc
call
decl
mov
push
jb
call
pop
pop
dec
and
mov
fstpt
mov
xor
imulb
inc
and
cmpsb
insb
mov
sbb
gs
lcall
mov
cli
ret
mov
mov
sub
sub
stc
mov
stos
jne
lcall
dec
shll
rcll
inc
sbb
pop
test
sub
pushl
push
inc
mov
xorb
inc
add
pop
xchg
es
in
out
clc
mov
xlat
sub
shrb
sbb
jne
lea
lcall
icebp
je
fs
sarb
pop
adc
enter
push
xlat
mov
ficoml
in
adc
test
call
jl
cmp
jp
sbb
scas
mov
adc
dec
out
js
divb
es
sub
int3
call
loopne
inc
mov
adc
test
outsl
aam
xchg
lcall
cmp
ljmp
lock
xchg
cwtl
push
sahf
sub
pop
pop
aaa
gs
lcall
sub
cmp
mov
fdivrp
cmpsl
cmpsl
pop
xchg
sbb
sbb
mov
ljmp
xchg
xchg
xor
push
push
mov
sbb
cmc
test
push
xchg
mov
lcall
ret
and
push
add
mov
pop
mov
arpl
adc
push
pop
jmp
movsb
xor
int
imul
or
cmpsl
sbb
xor
push
xor
mov
sbb
mov
lock
nop
mov
or
stos
sub
sub
fwait
inc
test
insb
add
jnp
jmp
cmc
add
es
xchg
adc
dec
ljmp
xlat
push
hlt
mov
pushl
leave
mov
cmp
push
out
sub
fdivl
insb
fdivrs
pop
call
fdivl
out
add
in
xchg
icebp
fisubl
movsb
add
call
xor
gs
leave
bswap
mov
cmp
mov
data16
sbb
in
mov
in
incl
sbb
mov
sarl
dec
scas
repnz
push
repz
adc
sub
sar
sub
pop
pop
les
pop
gs
inc
scas
js
iret
orl
loope
dec
push
mov
and
push
jo
inc
and
fidivs
int
jnp
pop
pop
dec
sub
jecxz
pop
mov
sti
mov
jno
js
mov
jmp
push
sub
lret
call
popa
lds
and
or
pushl
ret
jae
fcoml
repnz
scas
jge
sbb
mov
insl
ljmp
nop
mov
pop
xchg
pop
cmp
leave
dec
das
sbb
and
sbb
cmp
repnz
cli
orb
inc
loope
inc
push
pop
mov
sbb
cmc
es
lock
decl
push
jns
cmpsl
xchg
outsl
fimuls
cld
sahf
test
roll
repnz
pop
adc
rcl
push
stc
das
jmp
stos
inc
loope
testl
pop
ljmp
jmp
cwtl
fs
call
int3
imul
fs
std
jle
inc
out
or
inc
nop
and
jb
jmp
push
hlt
add
cmp
bound
mov
insb
in
stc
lret
fstps
loope
in
xor
cmpsb
push
jne
lods
xor
stos
call
inc
cltd
fnstcw
add
lea
mov
pop
xor
mov
aas
xchg
incl
and
inc
out
loope
mov
push
popf
fists
fisubl
lods
insl
dec
mov
cmp
lcall
pushl
sarl
movb
adc
jbe
cmc
pushl
sbb
lock
lcall
mov
imul
scas
ljmp
nop
xchg
push
je
and
outsb
jl
jb
push
call
adc
cwtl
pop
arpl
rcll
and
je
push
int
cmp
orl
pushl
stc
out
pop
mov
inc
add
pop
xor
js
and
scas
test
cld
dec
jbe
or
xchg
mov
scas
inc
push
and
call
add
orl
out
jmp
aam
insl
cwtl
pushl
stos
out
sbbb
outsb
inc
or
cmp
scas
pushl
pop
xor
mov
sub
push
xchg
dec
add
jg
dec
adc
shrb
add
inc
mov
mov
lcall
pop
mov
dec
mov
test
xchg
lahf
ljmp
mov
addr16
add
call
loope
sahf
test
pop
dec
jae
cmp
mov
mov
xor
repnz
xchg
fildll
mov
mov
lcall
push
pop
dec
cmpsl
dec
mov
push
push
nop
add
xchg
insb
pop
xchg
in
cmp
incl
out
mov
popa
mov
divb
das
in
lcall
or
fimull
cmp
dec
push
hlt
fcoml
push
pop
ret
sbb
lret
jns
movsl
mov
imul
dec
xchg
jmp
insl
add
push
fwait
lcall
mov
jmp
or
outsl
jecxz
arpl
jne
std
outsl
mov
movsl
adc
pop
inc
cmp
and
pop
mov
cwtl
out
xor
push
jno
lret
fldcw
xor
sbb
xchg
sarl
es
popf
add
pushl
aam
pop
xor
sbb
stos
lret
incl
mov
hlt
inc
cmpb
xchg
loopne
add
int3
bound
inc
pop
or
jmp
test
mov
xlat
data16
rorl
xlat
mov
ljmp
imul
fnstcw
lds
iret
fildl
push
jae
daa
out
out
xor
dec
mov
pop
jge
les
out
repnz
mov
stc
test
xchg
mov
xchg
xchg
scas
and
mov
jmp
out
push
pop
lock
movd
push
and
shlb
pop
cmp
jg
cmp
cltd
jge
inc
mov
jae
inc
add
in
lods
pusha
jns
decl
adc
mov
cmp
push
xchg
jno
pushl
cwtl
sarb
or
jb
outsl
xchg
push
stos
dec
mov
call
xchg
cwtl
mov
movsb
lock
sub
sbb
popf
dec
loope
addb
rcrb
lds
and
xchg
cmp
jg
inc
adc
stos
decb
pushl
call
sub
mov
cmp
jns
add
hlt
and
ljmp
adc
add
repz
daa
mov
or
js
ret
incl
leave
sbb
mov
dec
lods
loope
mov
paddw
pushl
pusha
mov
sbb
pop
mov
andb
out
mov
std
dec
pop
xor
js
imul
pop
out
dec
lret
sub
adcl
jg
div
cmpsb
pop
mov
lcall
jns
dec
mov
call
sbb
sbb
dec
pusha
xchg
add
mov
fcmovnbe
dec
mov
jg
dec
pusha
jl
push
or
push
dec
jmp
shlb
pop
xlat
and
imul
pushl
mov
rol
and
cwtl
lods
sbb
sub
push
pop
cmc
xor
cmp
aaa
or
data16
outsb
pop
add
cwtl
insb
pop
sbb
add
adc
push
jmp
jp
aam
movsl
xor
rorb
dec
pusha
inc
inc
test
cmpsb
sub
sarl
and
aas
mov
clc
decl
mov
popf
enter
ss
mov
pushl
jmp
jge
or
sub
mov
sbb
out
cmp
lcall
jno
xlat
lea
movsb
js
or
in
add
movsb
push
pop
push
pop
aaa
or
ljmp
sbb
nop
sub
ja
ficoms
aam
pusha
push
pop
leave
adc
jmp
clc
dec
or
mov
jg
add
cmpsb
inc
loopne
stos
aaa
jmp
lcall
pop
icebp
cld
inc
inc
fistl
or
jae
lea
add
fdivr
pop
fs
shl
jnp
movsl
pop
movsb
jbe
pop
cmpsl
mov
jge
fs
pushl
inc
xchg
or
push
mov
mov
mov
jle
cmpsl
mov
xor
gs
aad
mov
fildll
pop
pop
cld
sbb
adc
ret
test
mov
xor
ljmp
testb
push
add
ficomps
testl
mov
pusha
sahf
xor
add
pop
xchg
mov
jl
movsb
cwtl
mov
lods
add
mov
push
imul
ljmp
aaa
les
xchg
and
cmc
out
std
and
rcrl
ljmp
dec
fmull
pop
xchg
sub
pop
mov
ss
bound
xchg
into
shlb
into
xor
lock
push
std
ljmp
sbb
sub
mov
push
inc
mov
push
mov
mov
pushl
xor
pop
fnsave
mov
out
lds
pushl
daa
nop
lahf
jne
add
fcmove
shlb
adc
out
sbb
es
ror
or
repz
call
cmp
xor
jae
jecxz
int
and
dec
xor
xchg
mov
xchg
mov
movsl
fildll
jmp
hlt
push
xchg
cmp
enter
aam
cmpb
add
ss
jmp
incl
xchg
nop
sub
insb
les
fisttps
lret
mov
int
add
rcrl
cmp
je
test
stos
int3
or
mov
les
add
testb
les
and
push
call
lcall
lea
cmp
dec
jl
mov
cld
addr16
lcall
adc
popf
or
cld
sbb
lret
pushl
aad
dec
jp
test
jmp
push
ret
lcall
and
cltd
mov
insb
pop
xor
test
sbb
cmpsb
inc
in
imul
fnsave
out
repnz
add
jg
mov
lea
pop
in
jmp
sub
lret
push
adc
std
movl
xor
out
sbb
sub
pop
jl
inc
mov
neg
mov
mov
dec
int3
or
lcall
enter
cld
movsl
xor
jmp
fisttpll
mov
or
push
or
les
imul
cmp
mov
int
je
mov
pop
les
mov
push
or
push
les
rolb
xor
pop
push
adc
sbb
mov
scas
cmp
mov
jb
push
dec
ljmp
jp
notrack
lcall
push
dec
bound
adcl
addl
inc
inc
jmp
or
mov
fldcw
mov
inc
and
fwait
xchg
and
xchg
movsb
loop
adc
sub
fcomip
decl
sbb
icebp
add
push
jp
adc
xor
rcrb
scas
xor
cmp
or
sub
sub
lret
in
cld
sti
inc
ds
ljmp
pusha
test
mov
addr16
sbb
testb
sbb
fcmovnbe
push
jmp
adc
lock
dec
and
pop
imul
call
jg
ja
loope
lea
insb
test
cs
cld
mov
sarl
jmp
pushw
jp
inc
sbb
out
rolb
jmp
add
sub
or
ljmp
leave
sbb
and
in
test
inc
mov
jg
pop
push
or
aad
mov
cmp
dec
mov
cs
xor
pushl
out
adc
negb
lret
or
stos
dec
stos
lret
fwait
rcrl
mov
lcall
sub
fstpt
ret
in
movsl
adc
gs
das
cmp
or
add
ljmp
scas
push
lret
lcall
push
ret
aad
or
and
fwait
cltd
cmp
lods
or
dec
sbb
pop
fwait
cld
orb
pusha
sub
add
test
pop
jmp
rcrb
lock
incl
xor
adc
and
mov
clc
in
ljmp
mov
add
into
mov
nop
out
lock
inc
shll
inc
jmp
pusha
loopne
lock
xchg
in
dec
test
add
dec
xchg
xlat
adc
clc
fildll
mov
imul
push
xchg
stos
es
out
jl
scas
js
adc
mov
or
arpl
ljmp
pop
dec
outsb
jmp
in
enter
sub
cmp
mov
jne
mov
cld
pushl
mov
inc
ret
mov
xchg
mov
mov
icebp
pusha
lods
jmp
dec
fsubp
addl
mov
mov
push
daa
sub
ret
ffreep
jg
into
mov
jp
pop
out
fcos
call
data16
mov
je
cmp
pop
int3
xchg
and
insl
pop
jbe
xchg
xor
sbb
arpl
lock
aas
mov
cltd
ret
or
fwait
cmp
lods
push
rcll
xor
xchg
mov
adcl
push
adc
push
ljmp
test
addr16
addr16
in
pop
test
fwait
and
lea
mov
bound
cmc
jns
test
loop
lret
xor
mov
sbb
sar
push
jmp
dec
xchg
mov
std
add
xorl
xchg
aaa
pmulhw
dec
dec
outsb
pop
bnd
fstl
or
push
push
or
bound
out
mov
push
or
sbb
cmpsb
xchg
sub
imul
cmp
imul
imul
jg
outsl
out
and
xchg
cs
xor
sbb
insl
push
inc
jmp
sbb
aas
hlt
pop
mov
jg
out
sbb
cmc
daa
inc
aad
push
in
sti
sbb
cmp
jmp
cmpsl
mov
jnp
sbb
mov
pusha
nop
sub
int3
mov
pusha
jle
pop
test
iret
in
mov
xor
decl
pop
inc
call
sub
and
jmp
sti
incl
test
inc
jnp
nop
cmp
jl
lea
decl
repnz
call
lcall
iret
xchg
femms
add
add
test
jmp
jo
jge
jo
mov
popa
pop
jmp
sahf
cmpsl
shlb
shrl
in
inc
inc
cs
stos
add
js
mov
pop
pop
shl
sbb
aas
adcb
adc
pushf
cmp
xor
mov
dec
push
enter
adc
outsl
cmpsb
xchg
add
pusha
bound
xchg
cmpsb
push
cmc
sub
enter
adc
jnp
lret
js
inc
add
pop
mov
cli
popa
pushl
mov
outsb
jno
test
movsw
cmp
repz
sti
push
sarb
push
mov
cli
test
call
push
call
cld
jle
fs
decb
aaa
addr16
clc
sbb
mov
cli
push
call
enter
andnps
std
cmp
incb
push
xchg
jae
and
push
cmpsl
test
je
sar
lcall
or
mov
sub
enter
daa
push
lods
xchg
sbb
push
jno
test
mov
fmull
in
cltd
adc
mov
ret
lcall
jb
sahf
sub
push
pop
loopne
incl
loopne
adc
dec
mov
in
sub
dec
adc
jns
pop
lock
dec
xchg
pop
jns
iret
mov
jns
and
out
std
cmpsb
lcall
icebp
mov
jp
adc
addb
mov
add
repnz
iret
sbbb
cmp
ljmp
cmp
dec
sarl
enter
iret
das
or
call
xchg
cmp
call
pusha
xlat
lret
xchg
pop
cs
xor
jb
cmp
loope
jae
mov
or
cmpsb
push
lret
int
push
xlat
push
cli
loop
shrb
push
pusha
add
aas
mov
mov
addr16
push
int
stos
aad
mov
fdivr
ss
ss
push
call
push
or
push
imul
or
pop
mov
mov
mov
das
xchg
xor
fsubr
cmp
push
sbb
out
daa
adc
insb
inc
call
lret
outsl
sub
call
jl
sbb
test
push
dec
lock
fcomip
aas
push
inc
adcl
aad
or
hlt
int3
lds
ficomps
outsb
call
decl
je
ljmp
out
subl
lods
outsl
dec
add
sbb
and
decl
das
or
add
enter
test
mov
sarb
sahf
lcall
int3
ljmp
mov
mov
addr16
lret
aaa
aam
outsb
mov
pushl
mov
jge
mov
push
lcall
adc
mov
xor
add
test
xchg
pop
xchg
add
push
push
sar
ljmp
xor
sbb
xchg
mov
pop
cs
out
add
ss
push
pushf
xchg
mov
cmc
movsl
testb
clc
inc
clc
mov
and
dec
mov
lret
pushf
xor
cmp
imul
pushl
aas
sub
rorb
or
mov
xchg
roll
fmuls
add
mov
arpl
pop
jno
jp
sub
adc
cmp
and
mov
gs
jecxz
add
enter
test
ds
ljmp
or
nop
and
or
cmp
jo
enter
pop
popa
loop
xchg
ljmp
lret
ss
movsb
icebp
dec
sbb
lods
and
gs
mov
and
pusha
std
fistpl
aad
lock
nop
cmp
in
dec
aaa
incl
inc
cmp
hlt
adc
mov
mov
and
xlat
dec
add
call
out
push
imul
dec
pop
add
ljmp
loop
repz
loop
fcmovnb
incl
sbb
add
jnp
mov
jle
fs
out
xchg
gs
cmp
fnstcw
mov
mov
outsl
sbb
mov
imul
inc
ss
test
mov
mov
out
or
inc
lret
push
xor
fs
jbe
ret
mov
mov
ret
sub
fsubrl
ljmp
xlat
sbb
fldl
or
out
or
rcrl
icebp
stc
xor
ret
ljmp
mov
dec
add
out
xchg
outsb
cmpsb
das
xchg
mov
mov
jmp
mov
mov
add
popa
xor
scas
lock
ss
fcmove
xor
pop
mov
pop
cmp
popf
clc
pop
lods
addl
pop
xor
mov
cmc
xchg
push
ljmp
push
mov
mov
xchg
std
cmp
jge
pop
lods
pusha
adc
dec
ss
xchg
adc
pop
mov
test
pop
faddp
fdivrp
pop
cld
jg
cmp
arpl
ds
aam
addr16
or
adc
mov
pop
cmp
xchg
mov
nop
push
sbb
fistpll
cld
stos
mov
cli
decl
sub
stos
and
fistl
cmp
jnp
xor
dec
mov
cmp
xchg
mov
pop
mov
cld
movsl
test
ljmp
call
sbbb
test
and
mov
inc
out
sar
decl
mov
fimuls
sub
xchg
fimull
call
or
adc
xchg
and
pop
pushf
jae
add
pop
mov
adc
rorb
fcomip
stos
mov
sbb
ja
into
and
push
nop
cmpb
xor
sub
in
dec
jbe
in
inc
pop
ret
pop
or
ret
pop
jmp
inc
push
setp
bnd
incl
aam
mov
lcall
cmp
repnz
sub
or
test
inc
jnp
incl
mov
imul
or
jo
lods
mov
imul
outsb
jae
push
pop
loopne
call
push
mov
cmp
inc
lret
adc
xor
fistpll
out
cmp
std
scas
test
sahf
push
sbb
mov
adc
outsb
cli
sub
adc
mov
lret
mov
ds
pop
call
out
ficomps
push
into
daa
repz
iret
push
jns
xor
enter
outsl
out
jg
jne
inc
mov
lcall
push
pop
mov
std
lahf
scas
xor
in
cmp
mov
pop
mov
pop
in
fwait
cmc
add
ljmp
gs
fucomip
mov
mov
cmp
jo
add
cmp
add
mov
mov
in
sarb
xor
fdiv
and
cmpsl
mov
icebp
inc
incl
popf
idivb
arpl
test
and
test
popf
mov
jle
jg
jno
cmp
sub
orl
cli
daa
sbb
dec
jl
scas
dec
mov
and
aad
lahf
movsb
mov
and
ret
jg
ljmp
or
xchg
test
dec
and
inc
cmp
sub
icebp
repnz
xor
fildl
movsl
pop
test
popa
cmp
jmp
cwtl
clc
daa
jmp
cmp
jmp
out
fcoml
gs
inc
insb
push
mov
jl
sub
scas
shl
sti
out
incb
mov
adc
out
xchg
mov
call
xchg
insb
js
xor
jp
ret
decl
lock
pop
adc
sub
pop
int
xor
adc
lcall
ljmp
xchg
push
icebp
rclb
pop
idivl
and
jmp
and
add
and
cmp
in
dec
lcall
in
cmove
call
fldt
aaa
pop
adc
into
adc
xchg
and
mov
lock
aad
pushl
hlt
push
popf
inc
dec
pop
sbb
xchg
pop
cmc
jmp
fldenv
sub
in
sbb
add
mull
roll
call
les
das
xor
mov
sbb
cmp
nop
dec
or
dec
call
imul
aas
in
inc
cmp
fisubl
cs
add
pushl
jmp
mov
xor
popa
mov
jle
or
sbb
mov
cmp
sbb
mov
repz
leave
out
in
cmc
sbb
xchg
popa
decl
inc
cmp
push
pop
repnz
out
cmp
stos
out
jmp
cmp
dec
lcall
inc
iret
sbb
cmovg
mov
fnstsw
gs
sbb
in
cmpsb
cmp
call
loop
xchg
repnz
iret
mov
lea
ljmp
inc
rclb
xchg
fdivl
outsb
push
fmul
sbb
mov
mov
mov
inc
add
sub
pop
and
sbb
mov
dec
cs
xchg
adc
sbb
mov
adc
adc
movb
ljmp
pop
movsl
inc
mov
mov
sub
or
lea
adc
jmp
imul
xor
sub
mov
and
hlt
popa
mov
mov
idivl
icebp
inc
lret
mov
mov
loop
dec
out
ficoml
push
mov
movsb
pop
mov
jp
decl
fldt
jo
loop
lcall
stos
in
push
ljmp
clc
fnstcw
mov
mov
nop
test
inc
cmpsb
or
fisubl
and
scas
fbstp
out
js
frstor
xchg
cmp
cwtl
imul
dec
fistpll
outsb
out
movsl
jnp
ja
adc
add
jge,pn
popf
xor
and
out
mov
xor
leave
les
xchg
pusha
push
adc
and
cwtl
pop
sti
pop
flds
cmp
out
xchg
adcb
sbb
je
movb
js
dec
xor
das
adc
dec
pushl
adc
test
cmpsl
lods
test
inc
int
ljmp
call
dec
push
stos
sbb
mov
rol
adc
into
mov
stc
jne
mov
ret
sbb
pop
jbe
push
lcall
adc
data16
test
push
pop
icebp
call
xchg
lods
jcxz
outsl
lods
ljmp
push
stos
imul
mov
ljmp
dec
fldenv
mov
cmp
sarb
cld
jb
mov
loope
jmp
ja
es
cmp
sbb
ljmp
decl
mov
into
aas
rcr
mov
sub
negl
pop
xlat
add
cmpsl
xchg
pusha
sar
sub
ror
fmull
pop
ljmp
jbe
pushf
lcall
jecxz
incl
ds
pop
jb
pop
in
dec
arpl
das
movsb
or
imul
stc
cld
push
mov
lcall
pop
or
pop
in
push
in
cld
cmc
dec
aas
fbld
add
iret
popf
inc
lret
mov
mov
into
xor
idiv
jp
movsb
pop
ret
cmp
ds
cmp
adc
outsb
xor
testl
call
and
jnp
mov
jnp
push
push
psrlw
push
das
sbb
stos
pop
call
decl
imul
xchg
popf
mov
jmp
cmp
xor
sub
lahf
mov
int
push
fdivrs
and
xlat
jbe
out
jp
in
cmp
cli
mov
bound
lock
push
mov
jo
lcall
popa
jle
or
mov
jo
pushf
jb
mov
add
dec
xor
dec
incl
jns
mov
addb
mov
fnsave
push
inc
rclb
dec
xchg
add
xchg
mov
cld
mov
repz
and
pop
adc
addb
out
and
incl
xchg
incl
and
daa
ss
ja
jo
mov
in
fidivl
push
jg
add
pop
sub
sbb
js
pop
mov
pop
dec
orb
inc
add
pop
mov
adc
adc
pop
inc
repnz
jle
iret
mov
jg
add
nop
jns
adc
scas
dec
cs
and
std
lret
jg
popf
jno
mov
jnp
xchg
movsl
push
daa
add
mov
mov
add
es
push
xlat
out
xor
scas
push
and
stos
push
and
jnp
cmp
push
test
and
imul
push
inc
lahf
call
pop
pop
add
mov
pop
sbb
add
pop
sbb
inc
mov
pusha
sbb
mov
fcomip
outsb
les
push
adc
fs
mov
insb
or
lret
imul
enter
imul
imul
into
mov
jbe
fldcw
fisttpl
lret
push
mov
stos
pop
stos
mov
sub
mov
ss
add
outsl
fcmovnbe
jo
mov
push
shll
add
outsl
push
shll
fidivrl
mov
push
ret
mov
fidivl
and
jge
fisttps
add
decl
ljmp
movsb
push
add
mov
sbbl
fcomi
shlb
mov
push
push
fcmovnbe
mov
push
add
jne
push
aam
push
ret
lahf
jbe
mov
mov
push
cmpsl
mov
add
ja
sarl
add
pop
aaa
add
idivb
cs
push
shlb
lret
out
into
divb
ja
push
push
xlat
or
mov
jbe
fdivs
push
aad
testb
or
push
jns
push
mov
mov
jp
jp
inc
push
fidivrl
sarl
pop
mov
int3
ja
fldl
ret
mov
push
inc
jmp
ljmp
xchg
xlat
ss
in
xchg
sub
xchg
xor
xchg
push
outsb
inc
shll
xchg
pop
xor
jnp
push
lcall
push
cmp
mul
mov
pushf
cmp
popf
xchg
popf
aas
push
imul
fistpl
lahf
mov
mov
mov
imulb
iret
jmp
jne
out
out
push
hlt
clc
cmp
repz
cli
sti
cld
std
or
repz
jecxz
arpl
inc
jae
data16
imul
ss
int
pop
add
pop
add
pop
or
mov
add
repnz
add
add
or
add
cmpb
or
mov
lods
push
stos
test
add
stos
cmpsl
or
push
sbb
lods
sbb
pop
adc
mov
adc
jmp
mov
femms
lods
lods
pop
mov
insl
addr16
scas
add
scas
insl
lods
pop
pop
sbb
push
scas
lods
push
and
lods
pop
sbb
sbb
nop
scas
scas
sbb
mov
mov
in
or
and
repz
push
mov
or
or
in
xchg
lock
adc
mov
pop
and
and
or
sub
out
sub
daa
cld
gs
and
mov
cmpsb
sub
add
mov
cmp
lcall
mov
insb
mov
aaa
cmpsb
add
mov
xor
xor
pop
or
or
sti
cltd
flds
add
pop
pop
xor
mov
mov
das
push
cs
xor
add
xor
das
pop
push
push
xor
adc
decl
pop
push
cs
dec
inc
das
inc
inc
xor
adc
push
xor
push
push
popa
adc
pushl
cmp
jl
jge
jno
add
aas
xor
pushw
dec
dec
cmpb
jo
mov
inc
xorl
mov
lahf
cwtl
sahf
mov
pushf
fwait
lcall
mov
mov
nop
xchg
xchg
sub
dec
ja
jns
dec
push
bound
cld
mov
imul
adc
cs
jg
lcall
andl
inc
mov
add
adc
aas
mov
dec
jle
xchg
iret
sti
decl
pop
push
dec
add
push
mov
cmpsb
push
mov
mov
jg
push
sub
js
xor
xor
ja
push
ja
jb
cs
sarl
xor
mov
fdivp
sub
sbb
and
mov
xchg
jo
push
lods
add
outsl
inc
mov
cmp
mov
inc
inc
enter
std
xchg
jae
xchg
jp
inc
dec
popf
mov
aaa
add
xchg
jno
add
mov
bound
fidivrs
lods
mov
mov
inc
push
sahf
mov
jg
outsb
xor
add
outsb
add
xchg
xchg
pop
push
data16
dec
jnp
test
push
dec
push
movsb
jae
add
jb
lcall
pusha
shll
outsl
pop
xlat
pushf
push
rorb
add
aaa
out
adc
lcall
outsb
mov
dec
push
mov
scas
testb
ja
sahf
jbe
fistpl
imul
in
daa
outsb
ds
push
add
and
es
js
fucomp
pop
mov
data16
shrl
insb
ja
out
pop
outsb
push
outsl
ror
push
ds
sub
xchg
lret
jno
add
jge
push
jg
fiadds
or
out
data16
mov
in
mov
or
stos
bound
out
arpl
movsb
out
push
iret
sahf
mov
jb
lcall
jg
jle
fstps
jbe
orb
aad
sarb
push
fildl
adc
push
subl
sbbl
sbb
sbbl
test
jmp
faddl
in
mov
push
pop
mov
int
pop
nop
and
out
xchg
in
xchg
pusha
add
mov
sub
imulb
outsb
out
xchg
das
push
xchg
repnz
xor
cwtl
push
cmc
sahf
xor
push
lcall
cmpsb
pop
cmp
xorb
cmp
aam
sub
pop
sub
cmpsl
push
cmpsb
scas
jo
test
sahf
mov
into
shll
fiaddl
add
int
mov
mov
sarb
stc
insb
sarl
and
add
addr16
pop
shr
push
dec
out
je
add
test
mov
mov
femms
or
or
div
pop
sbb
es
push
adc
push
add
std
add
adc
ds
add
cwtl
testb
mov
adc
sbb
jno
mov
mov
push
testb
add
and
cld
push
imul
mov
aas
and
sub
xor
insb
xor
aas
aas
cmp
cmp
adc
cmp
sbb
sub
ds
jbe
cmp
ficompl
inc
cmp
or
ds
mov
jge
lods
popf
dec
aas
adc
ds
xor
cmp
decb
test
mov
jbe
mov
ds
add
sub
ds
mov
ds
lods
stos
test
cmpsl
cmpsl
cmpsb
cmpsl
in
inc
clc
add
test
mov
sahf
ds
dec
add
xor
sub
sub
sub
sub
sti
mov
ss
and
inc
mov
push
push
push
push
push
clc
call
insb
insb
pop
push
push
pop
push
push
push
imul
fs
das
pop
imul
nop
cltd
mov
call
mov
xchg
pop
cmp
insl
popf
mov
jge
jns
xor
outsl
jns
jle
addl
jo
outsb
pushf
sti
adc
push
lds
repnz
rolb
add
mov
incl
aas
sub
shr
ja
push
push
add
jmp
cli
cmc
repz
dec
xor
aas
add
mov
call
inc
add
mov
add
mov
push
mov
fnstsw
repnz
inc
add
gs
pushf
add
pop
imul
ret
push
in
lcall
or
mov
out
jns
or
jae
js
out
decl
into
xchg
add
mov
mov
test
scas
xchg
js
in
and
out
or
insl
ds
sub
xchg
push
sub
nop
sub
insl
xchg
das
push
xchg
xor
xchg
xor
xchg
outsb
lcall
mov
es
jbe
negl
fcmove
lahf
fnstcw
push
lret
loopne
push
call
mov
std
into
fdivrp
negl
xchg
add
test
jg
shrl
add
adc
add
and
leave
push
dec
dec
dec
dec
dec
dec
add
in
enter
add
dec
or
adc
cmp
adc
dec
aas
jbe
sti
or
add
push
adc
add
or
stc
cmpb
cmovg
inc
push
dec
sbb
sarl
inc
and
dec
and
adc
sbb
dec
push
jg
add
dec
adc
inc
ds
cmp
cmp
cmp
daa
loop
jmp
push
sbb
sbb
and
add
dec
ss
xor
sub
sub
sub
push
add
mov
lods
mov
addb
mov
pop
mov
mov
jbe
add
outsb
mov
addb
push
outsl
add
inc
and
pop
sbb
sbb
cmpsl
pusha
add
adc
xchg
into
incl
xchg
jmp
imul
mov
incl
adc
mov
pop
mov
es
mov
jmp
pop
stc
sysret
in
lock
or
add
push
jg
or
ret
pop
sub
loopne
aaa
outsl
sbbl
push
sbbl
lahf
sub
pop
sub
out
cli
add
cli
filds
and
pop
pop
add
jg
addr16
mov
nop
cli
push
mov
sbb
add
mov
das
push
add
scas
and
dec
inc
dec
loopne
fildl
inc
test
sub
or
jg
pop
xchg
xor
ja
mov
cwtl
or
jg
enter
cld
jg
pop
inc
add
sbbb
jg
std
ja
or
adc
adc
jg
addl
mov
sub
pop
jg
sbb
sub
and
sub
and
adc
add
shlb
mov
xor
pusha
mov
stos
incb
dec
shlb
fidivrs
jg
mov
mov
add
xchg
or
stos
add
push
jbe
adc
test
push
sbb
scas
incl
add
incl
push
and
imul
mov
adc
mov
xor
mov
adc
je
or
jbe
or
push
jg
add
shll
jg
inc
add
sbb
or
or
dec
sar
jg
mov
mov
pop
mov
inc
orl
add
mov
aam
jmp
stos
pop
stos
fdivrs
in
sub
pop
daa
mov
aaa
pop
pop
fisubrl
jle
fs
pcmpgtb
stos
pop
inc
push
add
mov
mov
sahf
shrb
push
bound
add
mov
fcmovnu
sahf
pop
das
pop
daa
push
arpl
pop
mov
pop
push
mov
xlat
out
call
decl
dec
dec
call
pop
out
mov
dec
dec
enter
adc
or
jle
mov
push
dec
mov
fnstenv
add
push
jne
cltd
fdivrp
ja
push
jbe
adc
jnp
push
jp
out
insb
fwait
decb
js
dec
jbe
pop
add
popf
jmp
adc
es
mov
push
push
outsb
inc
test
ljmp
test
jp
dec
incl
xor
scas
call
popf
push
push
cs
call
dec
call
sahf
jns
test
fiadds
fldt
mov
push
mov
je
mov
jbe
sahf
inc
out
sbb
cmp
mov
xchg
cs
aas
popf
inc
push
pushf
cmp
or
mov
mov
mov
xchg
xor
xchg
xor
sub
sub
nop
daa
ss
cs
nop
fucom
sub
outsb
or
push
decl
xor
push
jg
xor
push
cmp
pushf
push
inc
sahf
or
lcall
sub
cs
add
test
ja
sahf
sbb
adc
xchg
adc
push
in
movb
ja
push
jg
xchg
aaa
mov
add
and
mov
add
ret
les
test
push
mov
fidivrl
push
add
outsl
add
mov
test
dec
adc
or
inc
aas
jns
mov
push
adc
pop
push
orl
lea
iret
sbb
imul
xchg
inc
and
cmp
lock
cmp
pop
icebp
adc
xor
in
add
mov
aam
jne
decl
or
add
xchg
cmp
jmp
xchg
adc
push
push
test
jnp
push
push
mov
xor
adc
add
std
inc
sar
push
into
jmp
syscall
mov
sub
mov
pop
sub
pop
sti
dec
sar
lcall
or
mov
sub
xor
das
pop
dec
push
inc
jmp
dec
add
pop
daa
and
adc
sub
xor
or
mov
sti
ud0
incl
xor
call
or
dec
test
cwtl
lcall
pop
adc
test
int
pop
decb
and
jmp
xchg
shrb
ljmp
scas
jmp
out
inc
outsb
decb
mov
jp
xchg
and
push
add
sub
inc
mov
bswap
nop
pop
adc
jle
mov
incl
out
test
push
ud0
incb
and
push
mov
adcb
iret
xchg
incl
inc
inc
in
inc
and
fdivrp
inc
push
es
push
sub
in
adc
sti
push
std
mov
pop
in
jmp
call
call
jmp
sbb
cmpsl
cld
xchg
pop
in
mov
stc
sidtl
xchg
or
call
jg
adc
mulb
loop
inc
or
inc
dec
sbb
xchg
incl
jmp
incl
es
pop
fcmovbe
pop
pop
inc
popf
lods
mov
aaa
mov
and
push
shll
mov
mov
roll
adc
sahf
ret
incl
out
push
adc
jmp
ljmp
imul
fstps
inc
pop
fcmovnu
fidivl
pop
addr16
mov
push
stos
push
popf
inc
cmpsb
dec
imul
inc
cs
dec
dec
push
scas
mov
and
jl
cmpsb
add
push
shrb
rcl
outsb
cltd
movsb
sbb
shrb
es
lret
dec
shlb
das
push
int3
push
push
in
insl
pop
daa
outsl
aam
cltd
out
pop
imul
xchg
notb
push
ljmp
jge
test
dec
pop
aam
mov
add
repnz
jmp
popfw
cmp
aas
decl
insb
and
push
cwtl
xor
xor
xchg
push
push
es
lcall
pop
scas
insl
push
xchg
es
xchg
xchg
notb
decl
push
xchg
mov
scas
call
jmp
ds
sbb
add
jmp
test
std
faddl
push
fstpt
push
jnp
jp
or
movsl
fnsave
jl
or
jl
push
jge
add
es
jbe
adc
fidivrl
std
std
fwait
cltd
push
dec
push
dec
repnz
repnz
jae
pop
fidivrl
lock
mov
jnp
jge
hlt
in
add
int3
inc
push
and
pop
jo
and
inc
roll
push
outsl
lahf
push
and
adc
ja
pop
or
imul
addl
jnp
lahf
dec
es
mov
addl
pop
orb
fst
jmp
xchg
out
push
sub
iret
out
mov
mov
cli
pushl
clc
push
idiv
mov
repnz
push
jb
sub
jg
fldl
mov
dec
pop
cld
ja
pop
pop
daa
jno
sub
jg
mov
push
pop
inc
test
jg
dec
outsb
xorb
fidivs
push
enter
xchg
cld
jp
push
in
dec
es
xchg
aaa
nop
mov
jge
and
fs
and
jg
dec
pop
push
dec
jo
sarb
ret
push
push
ja
dec
and
jge
push
test
and
decl
incl
push
fsub
pop
inc
cli
adc
push
inc
push
int3
mov
jle
mov
fidivrl
arpl
clc
pop
xchg
and
mov
push
cmp
pop
push
pop
sbb
ljmp
and
dec
ds
lcall
lret
jle
jns
mov
int3
data16
pop
push
mov
jmp
xchg
jmp
mov
push
xchg
mov
pop
test
loop
adc
xchg
out
sbb
loope
and
lret
jg
out
mov
insl
or
or
testb
push
aad
fiadds
add
inc
or
movsb
xlat
push
cmovno
loope
sub
ficoms
xchg
mov
dec
add
push
pop
xor
add
add
dec
inc
lret
dec
add
dec
add
inc
clc
push
dec
aad
lret
adc
and
add
fistl
adc
sbb
xchg
push
xlat
lods
out
sub
into
pop
push
mov
popf
insl
sbb
push
sbb
push
or
and
adc
fisttpl
push
sbb
outsb
or
test
push
xchg
incl
mov
push
addl
nop
mov
outsb
xchg
adc
and
add
add
dec
add
inc
push
gs
jo
js
or
sub
mov
std
and
add
imul
mov
jl
or
push
aaa
xchg
mov
mov
add
dec
test
add
loopne
dec
lock
inc
jmp
lahf
jo
das
inc
out
push
popf
sbb
inc
insl
ret
add
imul
sub
pusha
insl
adc
dec
aas
add
jno
imul
push
mov
sbb
add
je
aad
mov
add
lea
jno
xchg
mov
cmp
sbb
jno
adc
es
lods
add
adc
cltd
les
cmp
popa
pop
popf
in
fistpl
rcll
popa
bound
inc
xchg
xchg
mov
add
jb
sbb
sub
jae
add
je
or
inc
pop
add
filds
das
rcrl
mov
test
jno
gs
roll
pop
add
sbb
dec
bound
add
dec
xchg
aas
xor
add
pop
loop
lcall
lahf
push
mov
add
adc
rcrb
inc
push
push
outsb
dec
push
outsl
loop
and
ss
xor
dec
loop
pop
sub
cs
fwait
cmp
xchg
bound
arpl
mov
dec
insb
out
inc
imul
sbbl
sub
adc
xor
mov
jne
or
xor
in
push
dec
and
cwtl
or
or
add
sbb
call
add
sbb
cmp
in
mov
pop
arpl
cmp
pushf
adc
add
xchg
bound
fiaddl
imul
pop
push
sbb
xchg
aad
rcll
mov
jne
dec
dec
adc
sbb
sbb
cmp
jo
xchg
push
mov
in
push
dec
in
xchg
mov
sbb
pop
or
mov
xor
pop
sbb
sub
or
adc
cmp
mov
and
iret
jecxz
xchg
pop
subl
mov
push
scas
sbb
push
inc
cltd
push
push
jb
dec
xchg
mov
jmp
or
imul
shl
inc
je
pop
xlat
pop
test
mov
mov
and
xor
pusha
adc
adcb
pop
test
add
cmp
icebp
and
lock
dec
or
inc
xchg
add
sub
shrb
inc
popa
sub
rolb
popa
ret
fbstp
sbbb
add
or
pusha
mov
js
ficoml
nop
jbe
add
mov
int
imul
popf
ja
sbb
add
pop
inc
and
inc
jg
stos
call
scas
mov
ja
clc
lock
push
jne
inc
mov
mov
gs
outsl
jae
jb
enter
outsl
mov
sbb
mov
test
xor
add
movsl
pop
xchg
adc
dec
or
inc
arpl
mov
cmc
gs
out
das
sub
aas
sub
xchg
pop
sub
sub
mov
add
push
sub
sub
lret
mov
add
sbb
mov
xchg
push
mov
jne
arpl
jae
push
dec
rorb
dec
mov
mov
fs
lds
mov
or
xlat
and
sarb
inc
sbb
mov
dec
int
sbb
jne
pop
popa
push
in
fs
or
push
popa
sub
cmc
cwtl
rcpps
js
push
jb
xor
lea
inc
xchg
or
push
inc
add
inc
imul
cmpsl
in
in
lds
inc
xorb
aad
mov
push
and
add
insb
push
cld
sub
fs
jbe
push
fwait
push
mov
add
pop
and
loop
dec
or
lahf
dec
inc
add
es
test
jae
push
jg
jns
lock
rcl
imul
push
jo
and
aam
sub
test
std
addr16
add
inc
sub
pop
xor
xchg
popa
outsl
mov
adc
xor
outsb
inc
sbb
lcall
popa
mov
and
je
insl
jb
clc
insl
dec
outsb
dec
std
lea
roll
or
mov
inc
xor
sub
push
push
js
add
in
insl
lcall
dec
add
sbb
mov
movsb
imul
cmpsb
imul
imul
mov
add
es
pop
add
in
ret
add
xor
jb
movsb
outsl
xchg
add
loopne
and
and
imul
and
shlb
push
test
ficompl
dec
popf
stos
daa
movsb
mov
adc
insl
subb
mov
sbbb
mov
inc
mov
sub
inc
insb
scas
inc
stos
les
test
nop
int
outsb
and
inc
sbb
roll
xchg
out
shll
add
mov
gs
sbb
xchg
bound
add
sarb
rcl
push
ss
cmp
into
mov
xchg
pop
bound
rolb
mov
rcl
or
sbb
subl
jge
loopne
push
xor
imul
and
inc
test
ret
push
dec
sbb
sub
ud2
mov
sbb
out
xchg
dec
pop
lret
inc
lock
mov
push
hlt
mov
xchg
mov
popw
xlat
adc
or
mov
sbb
dec
adc
mov
addb
xor
inc
mov
enter
out
push
imul
inc
aaa
outsl
and
cmp
cmp
mov
jbe
sbb
lods
outsb
jbe
pop
sub
cmpsl
adc
and
nop
push
shll
rcrl
xor
pcmpeqd
dec
insl
dec
inc
ret
and
push
movsl
push
and
sub
push
jns
shl
loopne
daa
dec
cld
addr16
adc
arpl
int3
pop
test
pop
xor
xor
outsb
push
mov
jb
inc
xor
inc
push
insl
popl
xchg
mov
cmp
jns
stos
sbb
sbb
add
inc
cmp
push
out
xlat
mov
xchg
cmp
outsl
sbb
shll
dec
jg
ss
inc
sub
push
mov
sbb
mov
into
data16
add
sub
lahf
add
sahf
out
xchg
push
mov
loop
push
inc
inc
cmp
incl
sub
jp
movsl
fcompl
and
dec
or
cmp
negl
out
sub
dec
dec
ja
xor
xchg
jae
xor
jo
fiaddl
pusha
aaa
sub
sbb
mov
sub
inc
or
xchg
jp
push
cmp
movsl
dec
sub
stc
in
addr16
roll
push
ret
fistpl
add
inc
push
daa
adc
or
jg
adc
jg
nop
pusha
mov
or
mov
and
nop
mov
add
jbe
add
sahf
insb
pop
mov
lock
nop
movl
add
mov
xchg
int3
clc
add
adc
and
sahf
or
push
add
scas
addr16
cmp
pop
enter
push
idivb
xlat
out
repnz
dec
sbb
pop
add
jp
outsb
jnp
fldl
jl
or
add
and
xchg
lock
xchg
jmp
add
add
call
or
pop
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
add
inc
add
