jg
in
ljmp
pop
ret
push
mov
mov
mov
pusha
repnz
add
add
in
decl
push
pushl
pop
xor
addr16
sti
jbe
jne
add
call
shlb
ret
push
push
sbb
mov
mov
test
je
aas
push
movb
mov
jae
dec
movzwl
lea
jne
sbb
xor
jmp
and
neg
sbb
pop
mov
add
shrb
ljmp
int3
pusha
add
sbb
daa
adc
add
or
adc
push
sub
and
loopne
ret
push
push
push
mov
mov
into
rorl
xor
fildl
push
push
push
mov
jp
push
inc
inc
mov
test
ds
clc
data16
jmp
pushl
rolb
ret
lea
ret
cmpb
or
sti
fistps
add
lahf
shrb
lret
xadd
dec
test
jg
mov
testl
push
add
push
push
mov
cmp
loopne
hlt
push
add
xlat
mov
test
fdivp
pop
pop
push
call
inc
cmp
jl
jmp
ds
add
jnp
sarb
cmp
jmp
sub
js
mov
ds
xchg
pop
ret
out
jg
mov
jl
mov
cmp
jg
mov
mov
movb
xor
orb
lock
add
add
int3
mov
rorb
add
outsb
iret
popf
add
and
pop
and
push
loop
cmp
mov
mov
sub
cmp
mov
jge
hlt
jle
int3
pushl
jnp
push
push
test
pop
js
push
add
add
mov
pop
cmp
icebp
push
dec
shll
mov
dec
add
or
mov
jae
push
jb
adc
or
je
add
pop
push
mov
rcll
cld
test
or
aaa
adc
jle
pushl
push
push
adc
mov
add
adc
repz
dec
pop
int3
out
icebp
jmp
pushl
dec
xor
or
cmp
inc
add
push
mov
push
or
or
pop
cmp
mov
push
daa
clc
femms
scas
push
add
jno
lea
outsb
jg
dec
lock
mov
or
jecxz
jge
outsl
mov
dec
mov
jmp
sbb
pop
adc
mov
call
stc
dec
ret
es
aaa
imull
hlt
or
cmp
sete
mov
and
icebp
sbb
add
in
or
imul
jmp
repz
fsubrs
jb
dec
jne
add
mov
or
or
insl
fs
adc
adc
push
mov
fldl
bound
add
call
pop
dec
into
mov
xchg
push
fcmovnu
aam
adc
ss
add
add
add
push
push
push
shlb
mov
sub
dec
xor
loopne
clc
mov
mov
pop
cld
xchg
clc
mov
add
adc
jmp
add
dec
cmp
pop
adc
or
cld
mov
inc
add
inc
clc
pop
mov
ret
lock
pop
leave
insl
mov
adc
jle
cmpl
mov
ret
lahf
sub
add
jmp
test
jge
mov
das
nop
cmp
jle
add
mov
shlb
push
out
pop
pop
xchg
mov
cmp
aad
incl
jl
cmp
jne
in
incb
loopne
jl
add
xor
add
add
fwait
pop
fsubrl
or
adc
adc
pusha
mov
adc
scas
push
push
iret
loop
add
push
roll
xchg
call
xor
jno
ja
scas
push
stos
mov
mov
leave
outsl
or
xor
inc
sub
sub
jo
cmp
inc
push
int
sbb
pushf
cwtl
adc
call
pop
addb
icebp
pop
pop
ret
scas
fldcw
pop
lcall
je
jb
lock
mov
jle
jl
mov
sar
push
jl
jmp
mov
push
push
and
push
or
jmp
mov
flds
pop
push
xor
dec
mov
scas
rolb
pop
push
cmp
pop
hlt
sub
in
fistpll
repz
push
ja
lea
rorb
pushl
jae
push
jle
fldcw
scas
loopne
iret
and
push
ljmp
sbb
cmp
push
fstpt
sub
loope
push
push
mov
out
push
push
xor
adc
loop
pop
inc
pop
cltd
or
jg
in
cmp
je
cmpl
pop
test
jne
push
push
aaa
lods
into
stos
lret
jne
pop
icebp
add
pop
pop
jmp
jo
iret
loope
icebp
fdivs
xchg
imul
ret
adc
iret
dec
popl
mov
pop
mov
adc
inc
test
fbld
loopne
sahf
scas
or
xchg
mov
dec
scas
data16
xchg
sbb
jae
xacquire
push
outsl
pop
pop
not
or
dec
pop
pop
scas
out
daa
pop
cmp
in
add
cwtl
adc
sbb
mov
pusha
jno
js
sahf
sahf
cli
jo
scas
add
cmp
je
clc
outsl
subb
lret
cmp
fsubs
jg
ret
cmp
jmp
jl
loopne
add
push
mov
stc
divl
jno
pop
pop
lock
mov
xlat
dec
push
jno
mov
imul
mov
incb
insb
clc
xor
test
push
ret
or
cmp
mov
aas
dec
mov
or
scas
in
pop
insb
std
xchg
inc
adc
add
fwait
ss
add
ljmp
mov
jecxz
push
cld
xchg
rcl
imul
and
mov
bound
sbb
negl
mov
in
push
in
or
jg
jle
outsl
mov
call
push
call
in
push
movb
adc
fs
add
sbb
jge
adc
cmp
stos
sub
and
jne
cmp
xchg
jmp
lret
sti
jmp
movsb
lock
and
ret
sbb
and
ror
loopne
loopne
xchg
cld
push
fidivl
std
lock
in
clc
jecxz
mov
push
cmp
test
lock
repnz
cmp
cld
int
xor
push
cs
cld
icebp
jmp
es
pop
iret
mov
dec
mov
pop
fsubl
shrl
dec
adc
xchg
imul
push
adc
sub
push
ret
rcrl
mov
and
jbe
je
jg
mov
loopne
fldenv
lods
and
mov
adc
mov
dec
push
push
imulb
popa
dec
sub
mov
lds
mov
mov
shl
cwtl
xor
les
in
fisttpl
int
popa
pop
jle
in
das
push
aas
xor
push
push
adc
lock
mov
add
mov
push
push
xchg
and
push
mov
mov
sbb
test
mov
jge
jne
lcall
mov
mov
dec
dec
adc
in
sub
pusha
mov
and
mov
fidivl
fsubrl
test
push
jbe
addr16
push
rorl
aaa
fimull
sbb
fisttpl
decl
push
lea
jl
pusha
lock
adc
push
and
cmp
jmp
push
add
cld
pop
or
mov
pop
pusha
ret
pushf
xchg
xor
ds
or
mov
push
lea
fwait
call
arpl
dec
aad
in
fs
add
lods
movsb
imul
daa
or
add
pop
mov
xor
add
inc
mov
mov
push
ja
xor
mov
leave
in
xchg
cmp
jno
ja
or
shll
add
shlb
mov
mov
lahf
and
pop
fs
sbb
push
sbb
mov
sbb
jbe
loopne
loope
xor
mov
jae
push
aaa
sbb
push
lret
in
repnz
enter
pushl
push
push
adc
test
aam
faddl
or
add
in
hlt
and
test
cmpsb
jb
or
incl
or
les
cmp
addb
insl
nop
repnz
in
jmp
cld
test
jo
les
and
out
cmp
push
or
mov
mov
inc
pop
mov
adc
stc
decb
out
mov
push
pop
sbb
enter
sar
adc
rclb
vmread
push
mov
in
int3
pop
bound
ret
and
loopne
pop
or
xrelease
je
movb
pop
flds
inc
xchg
mov
pop
xchg
mov
lcall
push
or
mov
popf
or
mov
push
sbb
pop
mov
test
adc
push
jnp
ljmp
in
push
call
je
and
ret
inc
xor
in
pusha
pop
add
mov
rol
pmaddwd
in
dec
sahf
int3
bswap
add
xor
enter
int3
scas
cltd
sbb
push
lods
adc
and
push
inc
imul
jns
mov
or
inc
push
adc
fwait
push
mov
pop
in
stos
sti
addr16
jb
arpl
scas
cltd
mov
imul
psubsb
pop
jne
jb
sbb
aaa
loopne
into
push
push
push
mov
adc
hlt
or
in
add
add
or
add
ljmp
cltd
push
lods
cmp
neg
sbb
mov
inc
jae
aam
mov
icebp
mov
jo
mov
pop
in
pcmpeqw
loopne
sbb
adc
lock
call
rcr
push
mov
push
lock
insb
mov
push
xchg
gs
cs
lock
lock
int3
cmp
pop
push
cmp
and
mov
or
jle
mov
adc
push
jle
inc
or
mov
or
push
and
and
and
and
ja
sbb
sbb
movl
lahf
repnz
call
outsl
mov
mov
adc
pop
push
sub
in
add
movsb
adc
movl
and
dec
cmp
pop
mov
mov
dec
bound
inc
fnstenv
and
pop
xor
jbe
popf
icebp
xor
push
mov
pop
sbb
mov
or
lods
mov
adc
or
sbb
dec
jbe
add
cmc
pop
mov
dec
push
imul
push
adc
sub
movnti
int
mov
cmp
mov
cwtl
sti
cmp
je
push
push
push
pushl
xor
jne
dec
fs
mov
add
jo
nop
sbb
sahf
jecxz
pop
sub
sbb
je
orb
divb
push
mov
and
push
les
xchg
notb
xor
dec
loop
test
push
push
hlt
mov
pop
pop
cmpsb
mov
or
divb
dec
dec
inc
and
inc
dec
or
mov
lods
xor
jge
je
push
sub
mov
sti
sub
sar
add
bound
lock
call
call
jle
add
mov
inc
sbbb
pop
and
dec
cmp
inc
pop
leave
jmp
push
xor
dec
hlt
adc
punpckhdq
xor
mov
jmp
fisubl
pop
sbb
in
out
int
jns
pusha
es
jmp
cltd
jo
xchg
mov
push
or
fstpl
movb
cmc
add
push
fistpll
mov
mov
jg
popa
fstpl
push
mov
idivb
scas
inc
jo
sub
sahf
adc
fcomip
xorb
sbb
mov
jecxz
incl
inc
dec
ds
sbb
jmp
cmpsl
adc
sahf
and
cmp
jne
testl
fs
or
xchg
arpl
mov
lret
jle
cmp
mov
xor
xchg
jns
and
out
jnp
mov
clc
add
xchg
or
pop
xchg
imul
mov
cli
mov
dec
sub
jge
jmp
mov
outsb
sub
mov
or
sarb
faddl
mov
xor
mov
fdivrp
sarl
sub
test
sbb
mov
pop
insl
div
dec
les
inc
add
rorl
xchg
pop
jl
jbe
or
add
add
mov
fimuls
sar
fidivl
jmp
outsb
sbb
clc
mov
out
jle
sub
repnz
add
jbe
dec
ljmp
push
repz
mov
pop
lds
jno
mov
sub
sub
sub
stos
cmpb
push
fsubs
fnsave
jae
sub
mov
sub
push
and
into
divl
movsb
add
push
jo
pop
fdivp
mov
aam
stos
pop
loopne
aas
inc
ret
loopne
into
enter
addb
add
xchg
cld
mov
xlat
or
int3
mov
in
and
sarb
fst
cmp
push
inc
std
loopne
pcmpeqb
pushl
inc
jmp
scas
jne
xor
push
leave
push
cmp
push
mov
mov
jne
mov
mov
cmp
sbb
sbb
lock
stos
push
dec
push
fs
add
lahf
mov
sbb
pop
jne
jle
pusha
jecxz
or
cmp
js
xor
andl
pop
pop
adc
movsl
xor
mov
iret
add
push
or
xor
pop
add
fs
bswap
mov
pop
push
jl
dec
xchg
pop
jnp
ret
int
and
add
rolb
pusha
push
adc
mov
inc
and
stc
in
jl
lock
inc
and
outsl
or
and
faddl
test
and
push
std
mov
cmp
setb
test
jne
mov
pusha
cmp
js
and
sar
cld
and
adc
or
mov
or
orb
push
lahf
push
dec
imul
pop
je
adc
mov
adc
lock
hlt
xchg
loopne
gs
lret
cwtl
clc
sub
push
jbe
mov
call
mov
es
mov
cs
fcompl
and
shrl
inc
cmp
push
adc
or
mov
es
lock
roll
sbb
sub
or
les
adc
cmpsb
in
or
mov
adc
push
adc
insb
sbb
das
xor
test
xor
clc
xchg
pop
sbb
or
push
enter
or
shlb
iret
je
push
andb
test
call
nop
pop
scas
xor
push
imul
es
xor
mov
fistl
lea
repz
clc
push
push
push
push
mov
add
movsb
or
adc
into
rorb
or
xchg
es
test
jle
rorb
call
cmp
js
movsl
add
or
in
jle
neg
sbb
clc
and
or
test
add
add
fistps
pusha
dec
shll
inc
cmp
fisubrl
add
adcb
xor
clc
decl
popa
add
mov
incl
maskmovq
sbb
and
jle
pop
push
or
sbb
insl
adc
and
cld
fnstsw
in
js
push
sbb
mov
add
mov
in
sbbb
mov
imul
ret
fdivs
sub
jge
add
jge
inc
mov
jne
adc
xchg
shlb
imul
add
cmp
add
or
in
pop
push
add
mov
pop
dec
pop
cmp
jae
or
scas
js
call
ss
sbb
movsb
inc
xor
pop
cmp
sahf
pop
pop
lcall
repz
dec
jmp
cmp
jne
movb
jmp
test
sbb
icebp
shll
pop
add
lahf
pop
icebp
xor
cmp
or
and
ja
out
push
js
out
mov
pop
jno
jne
push
push
scas
pushf
sbb
data16
pop
jb
or
xchg
xchg
xchg
fucomi
dec
push
and
loopne
fcoms
rorb
sahf
push
movsl
mov
mov
push
push
stc
sbb
aaa
sbb
and
sbb
pop
icebp
push
xlat
inc
loopne
xor
loopne
jnp
dec
das
test
push
ret
push
push
xchg
add
pop
push
and
in
call
out
fstl
lea
fisubl
mov
and
jo
repnz
xchg
dec
arpl
sahf
mov
movsl
bnd
or
adc
jl
mov
test
movsb
addr16
push
or
push
sbb
pop
push
lea
push
xorl
xor
dec
outsl
mov
std
cmp
add
mov
inc
les
mov
adc
mov
into
or
xchg
pusha
add
fldl
xor
xor
add
fldt
pop
stos
sbb
inc
lret
dec
nop
add
add
dec
mov
pushf
pushf
add
add
rorb
push
scas
mov
mov
add
mov
cmp
dec
data16
addl
xor
dec
dec
neg
push
sbb
pop
pop
hlt
shl
and
mov
jecxz
pop
sbbl
xor
sub
jmp
xor
and
scas
rorl
stos
in
push
mov
out
mov
rorb
clc
add
jl
inc
pop
cmp
cmp
testl
addb
jge
mov
adc
iret
add
push
sub
lea
es
mov
push
mov
mov
mov
iret
sbb
popf
addb
arpl
and
jo
adc
lock
and
push
mov
pusha
pop
sahf
xor
mov
dec
inc
push
enter
add
xchg
movsb
imull
std
xor
dec
mov
sti
jle
push
mov
dec
pusha
scas
push
push
inc
in
xor
xchg
cwtl
lcall
push
sub
cltd
push
nop
adc
lahf
out
push
pop
pop
pop
pop
adc
add
adc
pop
loopne
adc
push
push
ds
in
nop
sbb
push
mov
cmp
scas
jle
lods
push
in
inc
cmp
in
xchg
or
mov
jb
loop
push
sbb
xorl
adc
push
cmpb
inc
test
mov
leave
in
aaa
faddl
sub
cmp
enter
imul
lds
inc
pusha
fmull
sub
push
or
fwait
nop
push
or
es
xorb
in
in
test
jbe
push
inc
mov
in
cmp
sbb
inc
jne
pop
jle
adc
add
addr16
pusha
in
fisttps
subl
loope,pt
xchg
pminub
ljmp
cmpsl
arpl
add
rcrb
sbb
mov
xor
mov
data16
and
add
shrl
xchg
sub
pop
or
xor
loopne
mov
lock
nop
inc
xor
xor
inc
jo
inc
add
jmp
jb
xchg
stc
adc
mov
xchg
xchg
jecxz
xor
inc
sbb
or
andb
pop
jae
cmovle
jmp
jle
daa
jge
cld
mov
cmpb
fldt
jecxz
jge
aas
and
mov
cmp
jge
inc
push
std
ret
mov
xchg
add
jmp
daa
pusha
addb
cs
sub
sub
xchg
enter
push
inc
push
popa
sub
iret
xchg
pop
imul
mov
push
sbb
dec
cmp
push
fs
push
mov
insb
push
push
sub
adc
push
lret
repz
les
mov
pop
xlat
sub
mov
movsl
imul
push
mov
jge
shrb
adc
ja
and
dec
or
stos
mov
das
out
add
mov
sti
clc
ja
adc
stc
jl
mov
cltd
mov
stc
out
or
xlat
add
sar
push
rdmsr
in
sbb
sbb
mov
cmpsb
lock
das
mov
divl
add
mov
idiv
push
pop
ret
cli
int3
lock
jmp
xor
idiv
iret
iret
fiadds
fwait
mov
mov
sti
fstpt
mov
loopne
pusha
les
ja
pop
jmp
mov
add
cmp
orl
ret
and
adc
lods
push
or
adc
cmp
lods
jg
mov
or
and
jo
inc
fsubrp
mov
or
dec
add
xchg
add
ret
jg
mov
mov
mov
adc
or
inc
mov
xchg
mov
sub
jb
add
js
shlb
jl
dec
hlt
add
sub
cmp
pop
push
xchg
cltd
jbe
mov
cmpsl
sub
in
cltd
jmp
in
inc
sbb
shr
add
pop
dec
or
cmp
sbb
sub
cmp
out
dec
jae
sbb
jmp
sbb
mov
stos
rclb
test
fidivrs
jnp
mov
xor
adc
stos
and
mov
stos
and
sbb
ret
repz
test
cmpsl
stc
and
pop
imul
iret
add
jl
popf
ret
cwtl
pop
cmp
cld
test
or
call
cmpsb
lds
mov
pop
push
mov
aam
das
in
adc
sahf
out
movups
shlb
cmp
mov
outsb
cmpl
pop
ja
aaa
push
xchg
mov
push
clc
mov
idiv
cmp
jne
aam
push
adc
rcrb
pop
jle
movl
push
mov
add
push
pop
adc
fists
push
push
fs
or
jbe
loop
inc
jno
xchg
dec
icebp
nop
adc
sbb
jmp
mov
jmp
ret
test
je
sub
je
sub
dec
or
stc
cmp
sub
jo
xlat
clc
jmp
mov
aam
dec
sti
or
sbb
pop
repz
add
test
mull
ja
and
mov
and
mov
adc
add
fldt
je
or
je
and
je
les
mov
adc
dec
jmp
mov
or
mov
adc
xlat
cli
pop
fisttpll
jp
push
dec
movl
add
jmp
sub
push
or
mov
das
add
xor
movsb
in
adc
inc
jge
push
sbb
call
jno
mov
cs
fs
idivb
add
cld
lods
sbb
dec
cmp
clc
loopne
or
mov
mov
xchg
leave
outsb
cmp
clc
push
popa
bound
adc
sbb
cs
mov
xlat
das
arpl
dec
cmp
mov
jnp
in
add
divb
dec
loopne
mov
leave
jl
mov
cmp
jg
mov
pop
ret
aas
add
push
jmp
sub
mov
cmp
movsl
repnz
fldz
jge
or
mov
bound
lock
mov
sbb
adc
cmp
dec
cld
mov
jle
or
jo
sub
cmp
adc
jo
dec
mov
dec
cld
xchg
call
mov
and
add
das
nop
add
push
jmp
outsb
in
cmp
pop
push
fcoml
sbb
xor
jo
or
or
ss
push
pop
outsl
pop
adc
insl
and
ret
mov
inc
xor
clc
lock
nop
pop
push
out
dec
add
imul
adc
mov
inc
sub
mov
repz
sarb
push
and
dec
cld
pop
dec
dec
lock
pop
nop
mov
xchg
adc
je
xchg
push
ja
loope
push
push
push
movl
pusha
inc
adc
repnz
sub
outsl
imul
push
insb
rcrb
mov
mov
xor
inc
push
mov
movhps
lock
in
lods
stos
push
lods
or
jl
pop
mov
movsb
xchg
cmpsl
cmp
or
push
adc
mov
daa
jne
adcl
in
mov
dec
push
call
ret
xchg
arpl
mov
mov
setg
cmp
mov
pushl
imulb
add
mov
or
daa
push
xchg
loope
ret
lds
cmpsl
or
in
jo
and
loope
push
xchg
adc
xchg
dec
push
xor
pop
pop
fimull
into
pusha
pop
mov
aad
mov
jmp
std
push
stc
cmc
add
add
mov
mov
push
mov
sub
je
push
xchg
imul
inc
dec
mov
mov
fbstp
push
push
add
xor
fcomps
and
clc
sbb
daa
ret
adc
push
loope
push
add
jg
test
sbb
push
pop
jmp
mov
cmp
jge
mov
cmp
iret
xor
mov
loopne
cmp
enter
push
jo
orl
clc
js
bound
mov
loopne
mov
add
das
pop
ret
dec
add
cmp
inc
mov
mov
cld
mov
and
jge
js
inc
lock
add
insb
mov
inc
ljmp
lahf
es
jmp
mov
icebp
outsb
mov
cmp
jle
push
cmp
cwtl
test
stos
test
or
push
mov
mov
lret
fisttpll
add
lea
movl
movsl
pop
lock
push
push
pop
push
push
aad
loopne
sub
aaa
cld
in
out
clc
or
adc
add
inc
push
or
dec
pop
or
insb
jns
or
cltd
in
mov
fldt
dec
push
lcall
testl
push
mov
leave
in
or
dec
lcall
in
adc
add
or
adcb
sbb
jae
std
imul
add
add
cmp
cmp
lret
repz
jb
or
pushf
sbb
xchg
or
xor
mov
lock
in
sbb
or
xchg
lock
les
dec
sti
sub
jle
push
lcall
sub
pop
negb
mov
add
pop
add
orl
mov
mov
adc
dec
push
mov
push
sbb
sbb
and
sbb
mulb
push
push
and
flds
scas
add
and
mov
test
cmp
push
adc
adc
iret
and
mov
xchg
lret
mov
cmpsb
nop
xchg
cmpsl
inc
sbb
sbbb
addl
std
nop
or
orb
pushf
inc
in
xor
mov
push
mov
scas
xchg
jl
mov
cwtl
pop
xor
xor
add
xor
cmpsb
jae
inc
fisubs
xor
add
hlt
pop
in
mov
xor
adc
push
sahf
out
jns
loopne
mov
lods
xchg
pop
mov
xchg
loope
pop
add
js
jge
js
push
cld
dec
aas
push
push
fs
mov
pop
pop
dec
sub
dec
push
std
lea
andl
push
movl
dec
cmovnp
sbb
icebp
lahf
movsb
sbb
sti
xor
cmp
je
pusha
pop
sbb
cmp
adc
adc
xchg
in
jg
and
mov
insb
loop
cmp
and
sahf
adcb
cmp
fcom
nop
cmp
xor
aam
shlb
jg
arpl
mov
push
adc
dec
push
jge
sub
cmp
rol
sub
push
sbb
ret
xor
adc
lock
cmp
push
push
mov
pop
adc
cmp
add
lods
data16
sub
orb
inc
inc
es
jo
pop
cmpsl
sbb
pushf
push
mov
les
fs
mov
clc
sbb
fs
jne
jne
push
push
iret
xchg
or
mov
lea
cwtl
gs
push
stos
mov
add
gs
mov
sub
push
fmull
pop
insb
ss
mov
cmp
and
aam
push
int3
in
rorb
pushf
xor
cmpsl
xor
insl
adc
pop
or
sarl
aam
cli
xor
mov
jmp
dec
jmp
or
into
test
sar
adc
jo
cmp
pusha
lahf
push
jo
jne
jne
insb
inc
cmp
cmp
into
sub
push
insb
push
in
cmpl
push
cmp
mov
dec
cmp
sbb
or
or
mov
add
enter
bound
lahf
fmul
ret
insl
dec
xor
and
sarl
sbb
or
lcall
xor
inc
inc
mov
fmuls
push
lods
mov
dec
outsl
loop
mov
lods
mov
addb
jg
clc
push
iret
movsl
jb
mov
push
mov
pop
push
jb
push
repz
pushf
push
sub
cmovo
insl
mov
cmp
rclb
and
dec
xor
pop
shrl
ljmp
pop
jg
pop
cmp
sub
and
mov
fsub
imul
jb
jle
incl
cmp
popa
or
cmp
jbe
and
cmp
inc
gs
es
nop
push
arpl
cld
or
jae
ljmp
iret
xchg
mov
mov
hlt
fistl
xor
loop
ficompl
sub
push
icebp
push
scas
push
mov
lock
add
push
enter
enter
fildll
je
cmp
jne
mov
fidivrl
push
mov
cmpsb
jmp
mov
cmp
jne
syscall
cmpsl
add
xor
out
pop
pusha
sbbl
xor
je
push
push
cmp
mov
sub
loopne
and
and
fmull
inc
cmp
push
sete
scas
jl
push
sbb
iret
fidivrl
xchg
in
xchg
jle
add
xor
sbb
call
cmp
push
or
fiadds
or
add
in
lcall
cwtl
cmp
lds
jbe
pushf
shrl
insl
xchg
icebp
shr
or
sbb
enter
mov
adc
push
mov
insb
jl
lods
cld
movsb
outsb
sbb
les
call
xor
xlat
add
push
or
adc
inc
xor
stc
addps
test
pusha
inc
or
jbe
call
mul
js
pop
rcrl
enter
adc
push
pop
or
push
pop
sbb
mov
sbb
fdivs
add
xchg
add
test
gs
lods
inc
pop
aas
fsubr
dec
or
sbb
sub
inc
push
jmp
int
repz
xchg
or
or
jo
loopne
hlt
outsb
fadds
shrl
adc
adc
or
or
test
xor
or
xor
or
mov
cmc
sub
popa
xor
scas
loope
imul
fsubrl
inc
add
ret
ret
inc
in
push
repnz
or
pop
repnz
adc
mov
inc
fadds
scas
or
icebp
repnz
xchg
enter
sub
jne
sbb
inc
jle
decl
mov
les
ss
mov
insb
pusha
js
insl
in
minps
xchg
mov
in
jo
xlat
sub
popf
into
test
sub
and
adc
push
mov
je
cmpl
ds
popa
movsb
imul
cwtl
testb
adc
xchg
adc
mov
mov
adc
and
inc
push
pushf
xor
add
mov
loope
lret
adc
jecxz
mov
xchg
mov
cwtl
aam
repnz
in
ss
dec
leave
sbb
aam
cmp
fwait
pop
incl
nop
int3
mov
repnz
aam
cmpsl
sub
add
aam
sbb
mov
adc
out
pop
neg
sbb
pop
incb
repnz
scas
add
lcall
or
add
je
and
pop
push
dec
in
mov
pop
push
fs
dec
repnz
fs
es
sub
and
clc
adc
push
or
jne
cmp
es
cs
mov
push
add
dec
imul
loop
and
and
xorl
sbb
aam
daa
stos
loope
scas
ja
push
push
lahf
in
shll
push
repnz
jne
add
push
or
scas
shlb
jecxz
mov
in
lea
adc
lock
inc
mov
mov
pop
lds
and
das
cmp
stc
loop
popf
sbb
nop
in
int3
in
insl
xor
xchg
push
pop
push
push
push
aas
js
pop
jb
lea
jg
xchg
je
sbb
mov
sbb
cltd
and
jnp
mov
push
inc
dec
mov
mov
out
enter
js
roll
or
pop
ficoml
pop
push
inc
add
xchg
popa
cmp
mov
or
fidivrl
shrl
mov
out
cli
add
mov
or
inc
push
push
inc
ds
fdivrs
fs
mov
daa
adc
rorb
and
in
cmpsb
xchg
cmp
in
movsb
cmp
mov
cmp
sub
ja
dec
leave
inc
xor
in
js
xor
push
ds
leave
dec
push
xor
push
imul
repnz
icebp
dec
push
orb
or
add
dec
lods
dec
cmpsl
loope
pop
lds
xchg
jae
fistl
arpl
xchg
inc
jg
ficoml
enter
push
xchg
out
mov
and
jne
inc
dec
scas
insl
lock
call
sbb
pop
lea
aam
or
pushl
jbe
mov
movsb
rcll
mov
or
push
outsl
sbb
mov
add
insl
fcoml
mov
xchg
push
jo
dec
imul
es
lock
or
scas
mov
jne
push
xchg
cmp
xor
and
ja
cmp
jb
and
mull
pop
sub
ljmp
cmpsl
fmull
and
fadd
or
push
fdivrl
shll
add
dec
cmp
sub
out
dec
cmpsl
xor
mov
jne
mov
push
ret
outsl
xor
arpl
movsl
dec
inc
xor
push
ds
mov
lahf
test
lods
sub
inc
fmull
add
ds
ds
aam
push
push
xor
push
adc
hlt
xchg
in
sub
cmp
cli
int3
mov
out
dec
add
xchg
push
daa
and
dec
lock
and
lods
jl,pn
rcl
out
daa
push
into
popf
lock
roll
icebp
leave
stos
mov
cmp
lret
cmp
and
push
ret
or
cmp
ficoml
js
rcll
ret
negb
sbb
jno
ss
dec
push
ret
push
inc
aaa
or
sub
cmp
cld
addr16
addr16
and
push
pop
or
loope
xchg
lods
and
sbb
pop
mov
and
jns
nopl
jo
add
jmp
cltd
dec
xchg
insl
subb
js
movb
lods
pop
or
sbb
in
dec
cmp
jo
jb
mov
or
mov
shlb
ret
or
sti
dec
hlt
and
mov
dec
adc
and
in
arpl
sbb
push
in
test
sahf
popa
mov
inc
cmp
test
mov
pusha
dec
pop
pop
out
add
lea
int
dec
mov
stc
lcall
je
sbb
xor
lock
sub
jne
gs
dec
fildl
or
addb
aaa
push
pop
cmpsb
add
fidivrs
repz
lret
push
mov
incl
xor
mov
cmpsb
sbb
fdivr
test
jb
subl
pop
ljmp
sub
mov
imul
jo
jne
push
popa
fimuls
push
add
aaa
insl
add
call
adc
in
loop
repz
mov
jmp
mov
add
imull
icebp
add
iret
push
push
add
mov
push
sub
or
ja
xlat
sbb
mov
add
adc
add
fisubs
push
sub
test
mov
inc
in
cmpb
stos
loope
mov
sbb
xchg
xor
xchg
mov
mov
jae
push
lods
vmovhps
cmp
repnz
xor
add
or
aaa
jl
dec
cwtl
pop
sbb
imull
nop
sbb
iret
and
mov
ja
pop
inc
mov
mov
xchg
mov
xor
mov
fildl
xor
icebp
dec
inc
loopne
loopne
rorl
cld
xor
add
xorl
andl
fistl
cltd
rclb
add
mov
add
loopne
cltd
insl
push
inc
lds
fsubrl
out
rcr
push
push
lret
aaa
sub
mov
sub
loopne
das
mov
sub
mov
dec
cmpsl
fsubr
mov
dec
or
lods
and
flds
push
push
mov
adc
cwtl
imul
cmpsb
orl
and
fmuls
mov
clc
push
push
pop
sbb
and
jmp
or
out
jno
cltd
or
ja
jg
pushf
sarb
add
inc
jne
dec
jb
icebp
push
mov
mov
xor
sub
jne
test
push
fisubl
mov
push
outsl
cmp
mov
sahf
inc
loopne
push
bnd
push
mov
popa
push
adc
lds
mov
mov
mov
sar
jp
add
jbe
inc
test
and
decb
or
jmp
push
pop
cmp
adc
lock
xchg
arpl
arpl
push
inc
xchg
es
add
mov
repnz
mov
mov
sti
lds
dec
push
or
mov
pop
and
lret
push
cmpsl
ret
call
jne,pt
incl
test
mov
mov
cmp
je
push
jge
inc
in
mov
dec
mov
push
lret
mov
nop
push
imul
clc
jle
pop
sbb
pop
adc
sub
jl
popa
xor
les
push
iret
push
jecxz
xlat
jmp
adc
or
xor
xor
int3
xchg
mov
jno
xstore-rng
cmpsl
xchg
dec
fcompl
test
daa
jg
xor
or
adc
mov
shl
push
jne
cmpl
je
mov
or
loop
cmp
fistpl
pop
push
jns
outsl
sbb
adc
pop
pop
das
loopne
jecxz
rcll
sbb
xor
insb
cmp
push
xchg
outsl
fstl
outsb
jo
shll
add
mov
lods
out
mov
jne
mov
jo
sbb
sbb
and
sbb
mov
sti
ror
xor
sub
mov
repz
fisubl
fnsave
cmp
mull
push
repnz
push
test
movb
mov
push
adc
xor
arpl
rcll
add
out
push
sbb
jo
add
push
jmp
leave
adc
stc
adc
or
or
push
lods
or
sub
into
adc
fdivrs
adc
lea
leave
mov
nop
mov
jae
lcall
push
dec
lcall
iret
jmp
call
sti
test
xchg
ret
lods
das
loopne
les
lcall
fwait
mov
call
dec
sbb
mov
std
cmp
jne
pop
je
lret
mov
adc
mov
repz
ret
mov
and
or
add
mov
imul
mov
ss
fdivs
add
or
mov
add
mov
sub
or
les
fiadds
dec
push
xor
cmp
leave
adcl
jmp
jb
int
jae
adc
add
add
inc
outsb
sub
rorl
xchg
in
bound
push
mov
ljmp
xchg
pop
stc
or
mov
mov
add
clc
add
shll
or
cld
add
cli
mov
movsl
inc
sbb
cld
icebp
or
shrl
mov
int3
mov
pop
or
adc
dec
sub
ds
clc
in
sub
ds
adc
les
xor
and
xchg
hlt
mov
sarb
out
push
push
lock
hlt
clc
dec
inc
in
inc
clc
mov
pop
cli
into
jbe
lea
pop
fdivr
fstl
neg
mov
jecxz
in
xor
xor
lcall
xor
ds
call
pop
pop
inc
add
add
movsb
xor
add
push
xor
out
pop
xchg
xorl
inc
push
add
cmp
cmpsb
andl
mov
push
into
dec
add
mov
mov
or
xchg
in
push
imul
and
test
dec
in
ror
pusha
mov
nop
xor
xchg
pusha
dec
add
les
outsl
add
sbb
jg
mov
push
or
sbb
and
popaw
sub
fstpl
mov
out
push
test
mov
cmp
mov
adc
cli
push
sub
push
push
push
sbb
or
cltd
push
mov
sub
pusha
pop
aas
test
push
xor
mov
icebp
loop
sbb
inc
pop
pusha
rcrl
lods
pop
outsb
push
stc
push
push
shrb
adc
fs
jo
pop
in
cmp
outsb
sub
mov
pop
inc
adc
insb
lods
jle
sahf
xchg
outsl
sbb
ret
je
xor
push
call
add
add
js
inc
jle
pop
or
and
adc
or
adc
les
mov
ret
add
jb
pop
inc
cltd
into
xchg
lea
cld
push
jmp
sub
push
rcr
or
push
and
pop
dec
and
pop
add
add
or
xchg
mov
call
mov
dec
sub
data16
fdivs
or
inc
mov
cs
into
bound
inc
add
mov
push
scas
subps
rorb
pop
iret
jne
inc
mov
or
inc
outsb
fsubs
add
faddl
call
sub
outsb
sbb
sub
jo
lea
mov
or
cmp
int
sub
sarb
mov
push
cld
mov
dec
scas
sbb
sub
andl
sahf
jecxz
or
add
jne
and
out
xor
push
test
or
push
mov
mov
sbb
push
mov
clc
or
inc
pushf
push
and
lret
mov
push
cmp
adc
fmulp
mov
lds
lock
sbb
mov
out
dec
jne
ss
movsb
pop
movsb
inc
mov
mov
or
push
jb
das
sbb
in
push
jo
loope
enter
pop
adcl
mov
popa
jno
jle
aaa
pusha
lods
mov
test
mov
flds
pop
sbb
adc
dec
popa
add
movb
dec
and
inc
add
sub
aam
xchg
out
fiaddl
push
popa
les
sub
js
hlt
jbe
flds
daa
je
inc
sti
fcomps
into
add
iret
imulb
push
push
popa
dec
sub
or
mov
or
daa
hlt
xchg
int3
movb
push
inc
sub
add
pop
cmp
lcall
or
jne
mov
rorb
mov
popa
mov
je
push
sub
or
gs
mov
or
les
pop
xor
lea
and
push
pop
pop
frstor
pop
movsl
inc
adc
sbb
scas
fnstsw
inc
aad
dec
push
mov
push
cli
dec
ret
add
mov
and
fsubrs
pop
lret
push
pop
mov
fadds
jno
cmp
jne
push
push
inc
lock
add
inc
fnsave
push
hlt
cmp
jmp
mov
lret
clc
jne
cmp
xchg
xor
add
mov
inc
jmp
adcb
add
dec
inc
sub
mov
aas
sbb
test
sbb
cmp
xchg
lret
add
push
xchg
or
mov
sbb
cwtl
and
lahf
push
jmp
popf
notw
js
nopl
push
mov
inc
jb
push
inc
jns
shrl
xchg
outsb
sub
and
push
lret
push
inc
imul
rclb
mov
add
xor
pop
or
xor
lret
dec
xor
cld
dec
cmpsb
out
popa
jg
mov
jp
js
lock
pop
shlb
mov
push
testb
insb
jmpw
ret
pop
pop
aaa
add
fcoms
and
jae
mov
cmp
je
push
call
ds
inc
mov
sub
pop
inc
sub
lea
push
lea
push
inc
push
mov
insl
pop
ja
push
lock
repnz
addr16
xchg
jg
outsb
shlb
or
pop
mov
inc
cmpsb
xchg
mov
dec
xchg
leave
add
mov
das
adc
pop
lea
lods
cli
rclb
jle
jb
mov
or
movsb
push
sti
adcb
adc
push
xchg
jmp
sub
cmp
fisttpll
ret
adcl
cmp
int
ds
add
addb
mulb
sbb
xor
movsl
hlt
xor
mov
jmp
lret
dec
add
mov
sbb
fnstsw
mov
leave
mov
and
aam
scas
outsb
mov
pminsw
daa
sbb
aam
out
cmp
ror
push
push
test
inc
push
sub
addl
out
push
bound
add
sub
mov
add
scas
dec
push
sub
push
lods
and
aaa
dec
out
add
pop
cmp
mov
add
and
dec
mov
push
xchg
js
add
fists
adc
aas
adc
aas
call
jmp
dec
jge
or
add
xor
enter
push
jb
mov
cmp
dec
inc
jb
jb
sbb
lret
add
call
xor
pop
xlat
aam
lock
flds
loopne
ss
inc
push
shrb
xchg
leave
shlb
cld
sub
adcl
in
cmpsb
or
loopne
xchg
add
loopne
xor
aad
add
adcl
fidivl
and
icebp
or
jp
popa
push
repz
stc
loopne
dec
add
out
or
pusha
jb
cltd
mov
scas
flds
pop
push
ror
inc
cmp
cwtl
or
push
rcl
jns
ret
leave
mov
loop
sbb
ror
xchg
push
mov
sbbl
int3
or
or
jno
aad
jmp
add
cli
divb
pusha
lock
cmp
xchg
cli
in
cmp
inc
enter
rorb
or
addr16
push
inc
outsl
or
and
push
je
loop
test
adc
sbb
cmpb
int3
or
loopne
adc
push
clc
cmpsl
jae
jmp
pop
stc
push
xchg
or
pop
sbb
imul
enter
jl
loopne
add
inc
ds
cmpsl
or
adc
inc
jecxz
inc
inc
push
test
mov
add
jne
les
push
mov
nop
orl
push
mov
xchg
or
xor
mov
or
pop
rcl
push
in
xor
bound
mov
add
lea
mov
inc
icebp
adc
jnp
aad
mov
add
adc
xchg
enter
popf
jo
lock
jl
mov
mov
test
lcall
in
and
in
pop
cld
mov
imul
xchg
stc
adc
aad
addb
icebp
push
inc
fcomps
mov
aam
add
mull
inc
or
in
mov
dec
mov
adc
adc
xor
sbb
cs
pusha
ds
jecxz
outsl
scas
push
lods
enter
push
iret
cmp
sbb
and
mov
lcall
je
fbld
insb
std
rcr
cmp
mov
and
push
les
or
pop
or
or
lock
lods
movsb
lahf
aas
add
push
mov
mov
sbb
push
cwtl
push
sub
or
jmp
push
imul
pop
sub
mov
cwtl
dec
pop
and
xor
pop
rcrb
inc
sbb
inc
add
pop
xchg
test
adc
inc
inc
js
adc
jge
subl
add
push
sbb
push
addr16
outsb
dec
pop
push
sub
mov
mov
pushf
xchg
ret
mov
arpl
xor
mov
insl
cmp
push
jge
add
nop
push
shl
push
inc
fisttpl
inc
dec
xor
jne
push
push
data16
enter
mov
sub
jo
push
andl
sbb
xchg
lret
mov
xor
jnp
adc
and
mov
rclb
sub
add
mov
out
loopne
or
adc
inc
push
sti
mov
cmp
loopne
andb
orb
in
push
mov
and
mov
lods
repz
insl
dec
pop
pusha
in
xchg
mov
jnp
inc
lds
in
outsl
mov
lods
sbb
mov
add
xor
loope
repnz
sbb
and
lods
sarl
add
adc
and
pop
je
aas
fucomi
outsb
cmp
je
or
inc
repz
int3
pop
sub
sbb
inc
loop
jmp
xor
sbb
shrl
mov
mov
ljmp
mov
out
push
lods
jne
mov
lcall
hlt
push
jo
jmp
add
add
idivb
add
rcrl
xor
jne
mov
adc
int3
xchg
sub
cwtl
cmp
or
sbb
mov
outsl
adc
xor
sub
adc
jne
jmp
cmp
stos
lds
testl
dec
rorl
adc
sar
pop
cmp
insb
or
leave
fistpl
sbb
adc
add
push
cmovg
fidivs
call
push
inc
inc
xchg
sbb
ret
es
mov
and
push
rclb
cmp
pop
dec
mull
enter
incl
and
mov
sbb
gs
adc
add
test
inc
pushf
sbb
data16
xchg
or
mov
xchg
test
lret
mov
imul
int
loopne
in
and
pop
dec
add
insl
push
test
stos
test
ljmp
ja
aaa
imul
insb
stos
add
push
sbb
cmp
jge
cmp
inc
mov
jmp
or
aaa
lret
and
cmpsb
subb
jnp
or
nop
xor
rorb
rol
into
test
pop
sub
push
mov
xchg
fdivrl
push
das
inc
cs
loope
inc
lahf
add
pop
add
pcmpgtw
sbb
push
fnstenv
movsb
fdivrs
or
or
push
movsl
aaa
push
pslld
jmp
stos
stos
inc
mov
fwait
clc
rcrb
or
les
fcmovnu
andl
or
dec
cmp
out
lahf
lods
lahf
lea
pusha
sub
sub
popa
push
and
movsb
fidivrs
aam
add
cmp
inc
or
add
add
bound
inc
rep
push
jge
jb
or
xor
stos
mov
xchg
push
int
jmp
jp
mov
mov
push
dec
and
dec
out
fists
or
mov
out
push
add
push
mov
enter
push
out
mov
xor
call
adc
jnp
movsb
push
stc
adc
dec
pop
or
jnp
sbb
mov
addr16
ficomps
mov
cs
lock
nop
inc
jl
pop
enter
push
mov
repnz
or
or
rcll
and
inc
addb
sub
push
into
or
push
movsl
aas
pop
arpl
xsha1
cmpsb
mov
xlat
and
fidivs
in
ret
loopne
jae
push
or
ret
out
ret
cld
mov
es
fiaddl
test
add
push
xchg
or
sub
push
lods
push
rcr
test
inc
or
fisttpll
movsb
mov
mov
pop
xor
cmp
dec
repnz
jle
test
je
or
outsb
mov
aaa
push
mov
push
push
sub
xlat
pop
mov
cmp
sti
add
mov
dec
mov
xchg
pop
cltd
xchg
push
add
loope
add
xor
lret
sub
cmp
cmp
adc
lea
gs
ret
mov
pop
cwtl
pop
adc
jl
loopne
mov
push
pop
test
add
test
adc
and
inc
add
loopne
mov
inc
or
fisttpl
sbb
jno
jno
jnp
lods
add
addb
sub
mov
add
pop
fimuls
rorl
adc
pop
jle
jl
pop
leave
stos
ret
cli
cs
mov
pop
mov
mov
test
mov
shrb
je
mov
inc
cmp
movsl
int
pop
inc
mov
xor
pop
subps
mov
xchg
jne
push
imul
xchg
inc
bound
loopne
repz
pop
stos
test
lods
sub
add
les
jb
mov
mov
cs
mov
aaa
or
and
dec
and
shlb
cmp
jne
mov
cmp
jb
mov
or
movsb
fisubrl
cli
sbb
jl
mov
enter
cmp
rcr
pop
or
cmp
sub
or
push
adc
stos
push
jle
test
mov
aas
jge
incl
inc
adc
pop
cmp
imulb
mov
shld
std
adc
loopne
icebp
push
jb
rcr
push
jle
lods
lea
add
or
sub
ljmp
loop
push
or
sub
push
mov
dec
ret
pop
mov
cltd
xor
hlt
ficomps
lret
or
xor
ficomps
in
and
push
sub
hlt
or
or
pop
in
push
cmp
and
and
or
sbb
in
test
or
fidivrl
mov
push
mov
jne
lea
aam
add
aaa
lret
jg
add
pop
cmp
jne
inc
push
insl
call
mov
xor
mov
pop
lock
xchg
mov
push
dec
jne
jne
sub
push
lock
xor
shlb
push
or
and
adc
mov
add
mov
imul
cmp
push
mov
repz
add
jp
jno
loopne
sub
xchg
cmp
xchg
sbb
enter
int3
adc
daa
inc
pusha
stc
push
add
sbb
in
fmull
test
fisttpl
add
push
mov
fcomps
lea
mov
mov
mov
mov
pushf
lock
dec
cli
nop
xchg
pop
inc
int3
inc
xlat
add
call
arpl
mov
lock
pop
mov
or
loopne
bound
test
push
xchg
push
das
xchg
or
jnp
out
jecxz
push
aam
add
iret
fsubs
loopne
xchg
loopne
in
and
adc
push
sbb
notl
mov
mov
aaa
dec
lods
jl
xor
popf
adc
mov
inc
gs
addr16
dec
jae
mov
adc
xchg
or
rclb
jg
pop
shrl
daa
adcb
adc
inc
or
mov
mov
shlb
mov
mov
push
adc
cmp
mov
imul
popa
inc
les
push
cs
xor
adc
mov
mov
cmp
mov
test
xchg
popf
scas
ror
out
int3
shr
fs
in
push
jmp
mov
sub
push
sub
cltd
in
mov
pop
mov
aam
test
dec
mov
sub
add
mov
push
jnp
test
lret
add
cmp
adcl
push
jle
push
cmpb
sbb
dec
pop
mov
sub
push
shll
sbb
pop
push
pop
xchg
std
push
push
inc
jo,pt
cmpsb
jecxz
xor
call
xor
jg
lret
js
leave
aam
jb
mov
pop
lret
test
jl
cmp
addr16
rcrb
outsl
mov
push
add
ds
sbb
pushf
jl
or
push
add
jne
inc
shr
xchg
dec
sbbl
aam
and
xor
in
dec
sbb
jp
fimuls
cmp
pop
mov
std
dec
lods
gs
push
jge
pop
adc
inc
fadds
pop
add
push
call
cmp
push
jo
xchg
mov
ss
mov
jne
fsubrl
sub
pavgb
fmul
daa
aad
outsb
lods
cmp
repnz
fwait
or
roll
pop
jmp
inc
out
sub
and
xchg
loopne
mov
pop
add
mov
mov
jo
add
ret
adc
add
loop
lret
insl
xlat
jo
inc
jecxz
jae
pusha
pushf
pop
popa
cld
dec
sbb
add
andl
lods
push
clc
andb
add
jo
mov
mov
and
inc
faddl
out
pop
stc
cs
in
das
push
add
sbb
mov
stos
and
es
or
add
cltd
int3
int3
adc
dec
pop
jns
add
inc
add
iret
inc
xor
leave
inc
dec
mov
cmpsb
arpl
in
fcmovnbe
mov
adc
sbb
icebp
add
mov
add
push
pop
add
pop
mov
xchg
in
inc
add
xor
mov
push
push
incl
or
add
or
ss
cs
dec
add
pop
pavgb
push
andl
imull
push
or
pop
cmp
and
out
and
or
push
lcall
imul
push
rorl
or
mov
xchg
and
push
jle
ret
loope
loopne
lea
jmp
ret
cmp
mov
or
clc
pop
inc
dec
into
push
lds
leave
mov
jo
mov
lods
test
ljmp
fcom
cmpsl
ja
lods
push
loop
lods
or
push
pop
add
sbb
mov
hlt
je
push
push
lea
loope
jbe
jle
lea
and
call
xor
push
push
xchg
js
mov
mov
das
addr16
jbe
push
mov
xorb
jns
mov
stc
mov
inc
in
xor
cld
adcb
xor
or
and
mov
xchg
sbb
ds
mov
pusha
inc
std
or
add
shl
push
inc
pop
lea
cmp
inc
cmpl
xchg
or
test
mov
aaa
and
les
cmp
shrb
cmp
shll
or
inc
or
jmp
push
xchg
mov
add
jne
push
je
repnz
add
xchg
lahf
cmp
mov
jne
and
fildl
ret
xor
and
mov
int
add
pop
and
outsl
push
lret
push
jecxz
stc
or
push
mov
push
push
dec
sub
add
xchg
pop
data16
cmp
lret
ja
cmpsl
add
mov
dec
ds
add
sub
in
mov
call
push
icebp
lret
cwtl
dec
push
mov
rolb
mov
sahf
mov
addb
movsb
in
pop
aaa
or
stos
adc
or
jns
pushf
or
jp
xchg
imul
insb
cltd
or
jb
xor
sub
movsb
loopne
sbb
in
pusha
sub
or
iret
movsb
dec
gs
or
sub
dec
in
fstpl
mov
jmp
pusha
arpl
and
xchg
imul
mov
mov
cs
mov
cmp
enter
and
mov
js
push
pop
cmp
repnz
push
mov
add
pop
dec
push
and
pop
mov
push
loopne
lret
xchg
in
inc
dec
sbb
xchg
scas
sbb
enter
sbb
jno
sbb
push
dec
sbb
fs
pop
dec
leave
insb
cltd
fs
lds
sbb
sbb
shlb
scas
cmp
lods
popa
cwtl
test
fs
mov
and
mov
jg
and
shrl
or
enter
dec
adc
insl
xchg
mov
in
pusha
mov
sbb
ja
add
enter
and
mov
jno
push
jno
fwait
sub
jg
shrb
popf
or
enter
push
pop
and
mov
jne
jae
out
pop
lods
insl
inc
sub
add
and
lock
mov
gs
cmc
sub
sub
ja
les
insb
nop
ja
sub
pop
lret
pop
or
in
sub
push
sub
add
jb
call
orl
aas
jb
mov
push
or
outsl
andl
shrb
stc
dec
nop
jge
xor
fistpll
leave
ss
mov
jge
das
adc
push
cmp
xor
push
pop
fnsave
outsl
or
xor
test
mov
stos
bound
add
xor
mov
push
out
hlt
imul
cmp
out
push
int
nop
add
lea
divb
idivl
cmp
shlb
cmp
xor
inc
jo
pop
cld
fstpt
add
xor
aas
adc
cmp
push
fcomp
add
jo
fcmovnu
cmpsl
aam
adc
fadds
aam
fmuls
iret
fadds
dec
fsubs
aam
rclb
sbb
cmp
ja
shlb
or
adc
popa
sub
ror
outsl
rolb
repz
push
int3
rorb
sbb
leave
inc
ror
aaa
jns
mov
jbe
enter
sahf
and
dec
xchg
rorb
addl
dec
enter
and
lock
push
test
or
scas
les
dec
enter
dec
inc
dec
enter
cmp
das
decl
xor
int3
push
and
lret
shrb
inc
shrb
shrb
mov
int
addl
sbb
xor
add
add
push
fisttpll
mov
fs
lret
pop
shlb
adcl
jge
xchg
mov
pop
sbb
inc
loopne
push
in
mov
pop
adc
adc
add
inc
sahf
push
jecxz
loop
add
addr16
sub
add
call
and
pop
lds
pop
addl
jns
std
add
je
jb
inc
xchg
hlt
jns
mov
imul
imul
js
jne
in
jg
sub
icebp
dec
jmp
dec
and
jle
rclb
sub
sbb
xchg
pop
mov
fbstp
lods
jbe
sahf
ret
je
and
inc
mov
es
loop
enter
pop
mov
enter
and
or
mov
sub
jecxz
or
push
int
adc
cmpsl
rclb
or
xor
and
movsl
imul
add
lcall
dec
add
lock
mov
xor
sbb
mov
or
icebp
inc
push
pushw
pop
sbb
mov
xchg
xor
inc
adcl
inc
js
aas
in
stc
add
sub
xchg
outsb
add
push
sbb
xchg
cmc
adc
in
xor
mov
in
mov
mov
mov
ja
xor
adcb
push
sbb
push
icebp
push
dec
pusha
lods
or
test
push
cmpsb
sbb
in
scas
or
sbb
mov
push
dec
xor
jecxz
fstpl
push
movaps
test
pop
insb
adc
loope
cltd
pop
nop
stc
nop
sbb
jns
mov
lds
mov
push
pop
repz
mov
and
jl
jle
mov
neg
hlt
addr16
rorb
or
sub
ror
rolb
fsubs
jl
ret
mov
call
pop
cmp
add
add
aad
call
imull
cmpsl
fwait
rol
daa
lock
xchg
fdivrl
or
ret
push
push
adc
dec
dec
insl
sub
push
push
sub
test
jno
add
add
fcomi
sub
sub
sbb
mov
ret
sbb
out
mov
fs
cwtl
stc
inc
and
xor
push
sub
add
add
and
js
jg
push
test
shll
cmp
dec
pop
push
and
sbb
enter
gs
jecxz
add
or
enter
push
lea
int
cs
jns
cmpl
dec
adc
mov
jb
movsb
jb
test
and
sbb
iret
sbb
mov
dec
es
add
cmp
clc
inc
les
adc
lods
xor
add
mov
gs
lret
test
adc
jae
inc
dec
adc
xchg
inc
sub
nop
push
cwtl
pop
mov
sahf
add
pop
sbb
inc
push
jl
xchg
dec
pop
sbb
lods
sub
cmp
test
push
inc
fs
ret
leave
in
sbb
mov
xchg
inc
xchg
xchg
pop
or
mov
lea
test
push
pushl
sbb
dec
pushf
sbb
jmp
icebp
call
and
rorl
mov
fs
dec
jb
test
pop
rcrb
jl
imul
add
or
mov
xor
cmpsl
adc
sbb
adc
shr
sub
mov
lahf
lods
and
and
out
and
dec
or
loop
pusha
jnp
and
xor
les
cmp
pop
and
push
jnp
insb
or
mov
shlb
in
pop
sarb
sbb
lcall
push
cwtl
call
sub
cltd
xchg
testb
sub
movsl
testl
shlb
pop
mov
xor
je
pop
dec
aam
popa
jne
cs
icebp
cmp
cmc
mov
stc
jno
xor
cmp
pop
imul
adc
ljmp
imul
das
cmp
add
xor
in
pop
inc
shrl
sarb
fwait
xor
popf
add
js
iret
adc
pop
jmp
pop
mov
movsb
dec
pop
clc
jp
test
jbe
out
movsl
out
cwtl
cltd
xor
mov
push
out
lahf
dec
bound
mov
push
adc
rorb
pushw
push
or
mov
mov
lea
inc
mov
in
cmpsb
mov
add
xor
sysenter
scas
jo
imull
outsl
lret
pusha
push
xchg
mov
cmp
cld
int3
ss
ret
or
inc
push
xchg
pop
jmp
repz
ret
cmp
dec
jmp
jbe
test
int3
cmp
push
enter
mov
xchg
pushf
cmp
cmp
push
push
ss
jmp
push
mov
adc
fistl
out
xor
adc
jmp
outsb
pop
ds
cmpsl
inc
das
mov
bound
loopne
push
and
std
and
or
popa
cs
test
sub
loope
sahf
das
pop
rorb
and
outsl
leave
sbb
ret
xchg
lods
pop
pop
cmp
filds
push
test
jne
push
push
aas
or
jbe
add
pop
loope
pop
ret
lea
cmpsl
sahf
cld
outsb
pop
ret
push
inc
rcrl
jne
sub
pushf
dec
xchg
add
dec
js
inc
inc
cmpsl
mov
mov
add
push
adc
pop
jg
add
ret
outsl
lods
jg
out
push
push
mov
dec
hlt
jne
cmp
iret
jne
rorl
mov
mov
dec
test
xchg
jl
lea
inc
and
push
xlat
aas
mov
testb
adc
mov
xchg
push
mov
aaa
xchg
mov
jmp
nop
lret
icebp
dec
and
je
sbb
xorb
lock
dec
cmp
je
mov
mov
jg
sbb
add
xchg
xchg
add
popa
pop
das
bound
nop
repnz
or
mov
cld
mov
xor
movsb
push
jmp
les
orl
loope
cmp
mov
loope
xchg
test
pop
add
add
xchg
popf
add
ljmp
mulb
or
popf
xchg
dec
hlt
or
mov
enter
fbstp
aaa
xor
loope
call
inc
pusha
pop
push
xchg
jp
popa
test
fimull
and
int3
push
add
lret
sub
cwtl
stos
push
les
push
pushf
jg
add
xchg
or
push
jns
and
loopne,pn
or
pusha
inc
js
add
mov
adc
fsubrs
icebp
xchg
xchg
cld
jl
xchg
lods
sbb
cmp
dec
insl
mov
pop
aam
add
lods
test
loopne
jl
lods
xlat
push
ljmp
xchg
or
enter
pop
bound
lahf
push
fdivrl
xchg
loop
add
or
mov
push
push
cmp
adcl
adc
mov
shll
out
add
adc
jmp
jne
nop
sarb
test
lds
nop
xorl
pushl
jl
sub
outsl
faddl
and
cli
imul
adc
lock
rorb
xlat
jne
xor
pop
jmp
sbb
movsb
adc
xor
inc
nop
faddl
xor
jno
icebp
scas
mov
lea
orl
out
push
sti
pop
mov
mov
daa
js
add
push
mov
jo
and
loope
out
out
or
mov
aaa
pop
enter
cmp
mov
out
popf
xchg
out
imull
jnp
out
jle
mov
ficoms
cmp
inc
push
xor
inc
clc
or
push
push
mov
je
dec
ret
and
mov
in
adc
test
cmp
mov
pop
inc
cmp
lods
sub
sbb
lock
andl
gs
or
insl
adc
sbb
and
sbb
xor
fs
inc
push
cmp
inc
nop
inc
push
sbb
push
insb
jo
jl
fcmovu
and
mov
or
dec
fbstp
pop
pop
movl
pushf
movb
popa
mov
adc
sub
sub
in
adc
jb
push
jb
and
cmp
and
and
and
or
test
enter
pop
out
test
pop
shl
jno
fs
bound
xor
add
lock
push
xor
clc
push
jb
mov
sbb
rcrb
push
sbb
lock
or
adc
shr
not
and
test
sbb
fisubrl
mov
pop
jl
std
push
jl
inc
mov
or
dec
adc
inc
bound
scas
or
cmp
adc
and
mov
stc
repz
push
dec
jle
fwait
insb
inc
mov
cs
aam
add
mov
and
xchg
out
fdivr
sbb
fcoml
lahf
test
sub
dec
add
in
int
push
faddl
js
xchg
mov
inc
or
stos
dec
push
sbb
es
test
or
cwtl
lock
mov
adc
int3
aad
addr16
mov
jns
mov
pop
adc
add
sub
xor
mov
rsm
jge
xchg
inc
iret
cmp
pop
addl
fnstenv
pop
fsubr
or
cmp
icebp
inc
ljmp
sbb
insb
rolb
dec
dec
dec
dec
outsb
clc
add
shll
push
out
jmp
fistpl
jb
mov
cmc
add
dec
imul
ret
or
addr16
shl
fadds
jl
or
dec
mov
xor
dec
sub
xchg
pusha
adc
xor
sub
insb
or
les
sub
lock
adc
test
les
test
mov
add
je,pt
lcall
cs
sbb
or
mov
divl
mov
pop
andl
imulb
xor
loopne
jne
push
or
sub
shll
fdivr
sbb
mov
push
or
movb
sub
lret
clc
pusha
repnz
sbb
lods
xorl
test
adc
in
and
fistl
fsts
push
in
scas
and
sbb
add
inc
call
int
addl
fsubs
pop
push
pushf
jle
mov
push
sub
and
movsl
and
adc
in
cmp
push
mov
gs
and
jp
clc
or
push
pop
mov
rclb
js
sbb
popf
sahf
and
leave
shll
aad
lods
movsl
mov
cmpsl
movzbl
mov
push
lock
push
jb
lds
add
inc
cld
sub
loopne
push
inc
push
or
xchg
inc
js
sti
pusha
jge
jne
sahf
dec
push
push
gs
andl
pop
andl
adc
push
mov
mov
das
mov
pushw
cmp
jae
les
jg
rol
imul
loop
cmp
loop
adc
mov
lea
lcall
enter
inc
and
push
xchg
insl
sbb
xchg
push
inc
daa
adc
imul
clc
push
adcb
sbb
je
cmpb
and
enter
dec
adc
xchg
jne
xchg
out
jmp
dec
push
or
push
pop
sbb
repnz
hlt
inc
dec
int3
xchg
mov
in
or
mov
or
ja
std
push
movsl
loopne
lcall
mov
test
add
je
dec
stc
or
xchg
mov
adc
pusha
loopne
int
loopne
mov
and
jecxz
clc
add
xchg
cmp
xchg
sti
loopne
icebp
lea
xrelease
mov
jb
mov
jmp
das
hlt
adc
pop
xchg
or
sub
les
jmp
add
cmp
ja
fcmovnbe
fisubl
test
jmp
or
push
mov
mov
shll
mov
gs
and
mov
sub
loopne
and
adc
out
push
or
cmp
cmc
rclb
jg
and
adc
push
mov
adc
rcrb
in
fwait
xchg
fisttpll
push
inc
pusha
or
adc
dec
lret
inc
add
inc
inc
xor
or
mov
push
je
xor
pop
push
mov
push
hlt
pop
test
adc
scas
pop
adc
push
in
repz
std
decl
ljmp
dec
and
inc
mov
or
jmp
iret
mov
or
dec
mov
aad
imul
push
pop
adc
lahf
aad
sbbl
push
xchg
and
call
dec
or
jb
pop
in
addr16
inc
push
ret
mov
or
jp
adc
inc
push
icebp
mov
test
mov
cmc
sar
pop
sub
orb
pop
mov
pusha
push
stos
cld
inc
cltd
ss
push
pop
sub
shr
and
or
sub
mov
in
push
xchg
push
inc
and
pop
subl
xchg
mov
add
sbb
bound
js
pop
jmp
dec
xorb
push
popf
mov
or
jle
ja
rorb
adc
iret
je
xchg
insb
inc
push
or
test
mov
pop
movsb
int3
in
shl
jmp
or
aas
dec
push
push
dec
and
mov
pop
aaa
addb
xor
push
xlat
scas
and
test
aaa
jo
in
add
pop
sbb
into
xor
ret
jmp
mov
ret
jecxz
mov
cmp
jbe
xchg
mov
lcall
clc
xchg
cmp
dec
dec
iret
sbb
sub
pop
jmp
sbb
dec
add
call
movsl
test
popa
or
ret
pop
gs
clc
jb
fists
adc
xchg
xchg
pcmpeqd
push
adc
xor
cmp
mov
fisttps
and
push
out
add
mov
cmp
mov
jle
push
push
xchg
loopne
cmp
sbb
adc
xchg
aam
xchg
ret
outsl
stos
inc
cmp
jl
jmp
jle
mov
pop
pop
pop
pop
cltd
lcall
jb
pop
lea
les
decb
mull
fisttpll
lea
test
or
je
loop
add
mov
inc
fidivrs
dec
mov
adc
popf
xor
or
rolb
sti
adc
xchg
ret
sti
xchg
or
ds
andl
or
jmp
add
clc
xchg
ja
insb
xor
and
or
enter
and
sub
es
and
xor
outsb
add
mov
pusha
and
jg
and
fadds
mov
out
rcrl
and
push
xchg
jmp
inc
adc
dec
pop
dec
cli
in
inc
jecxz
add
es
adcl
xchg
and
fisttpl
push
add
mov
dec
mov
dec
xor
xor
or
mov
pop
pusha
fstpt
imul
in
setge
or
ds
adc
movsb
sbb
xor
xor
cs
push
stos
inc
dec
jae
pop
mov
clc
adc
or
xorl
dec
inc
inc
and
add
insl
xor
mov
pop
imul
imul
push
xchg
sti
or
and
pusha
mov
repnz
sarb
mov
xchg
jp
in
lds
aas
add
fcoml
mov
cwtl
xorb
jle
add
mov
xor
mov
or
xor
mov
add
orl
stos
sbbl
pusha
sbb
dec
push
mov
aaa
pop
add
mov
lods
pop
push
adc
fwait
xor
pusha
mov
or
stos
adc
inc
inc
ss
mov
lods
add
push
cmpb
sub
or
or
lods
jmp
fsubs
push
nop
add
or
xor
enter
pushf
loopne
jecxz
xor
adc
popa
loopne
rolb
mov
movsl
lock
test
jns
lsl
cmp
adc
or
pop
fmuls
mov
inc
pop
sbb
insb
dec
sub
lock
cmp
popf
push
push
iret
test
lods
xor
mov
js
stos
loopne
add
pusha
mov
cwtl
mov
adc
lret
je
shrl
outsl
jp
mov
lret
inc
pop
arpl
mov
push
scas
scas
jge
xlat
add
xor
shrl
pop
inc
sarb
inc
loop
into
inc
in
in
mov
orb
sub
sbb
nop
or
or
and
dec
sbb
loopne
call
pop
xchg
loopne
add
push
or
test
add
js
jne
icebp
fs
adc
inc
push
enter
jle
mov
and
sbb
insb
jg
in
mov
and
add
icebp
fsubs
mov
push
inc
jb
fdivl
sbb
xchg
enter
push
cltd
sub
xchg
pusha
sub
xchg
rolb
cmpsl
hlt
pop
imul
jecxz
mov
sub
cmp
cmc
sbb
push
ds
jae
mov
rclb
les
adc
push
pop
xchg
xor
aad
jmp
and
cmp
inc
xor
lock
jp
sahf
insl
and
xor
arpl
insb
test
shrb
mov
fimull
xor
cmp
push
and
popf
inc
cmp
dec
push
push
fs
adc
or
or
pop
pop
sbb
dec
mov
pop
pop
pop
sbb
pop
push
jecxz
insl
lea
cmp
jne
push
loopne
xchg
push
inc
cmp
or
pop
stos
inc
pop
loopne
ljmp
cwtl
rcrb
and
shll
push
fcom
mov
add
push
xchg
adc
push
lcall
pop
add
adc
push
add
ds
cmp
jne
cltd
sbbl
shrb
ret
inc
lea
orl
xchg
je
sbb
jnp
or
das
cs
mov
insl
mov
icebp
adc
or
dec
pop
mov
lock
cmp
fidivs
and
ja
mov
mov
test
xlat
and
push
sbb
mov
loope
adc
mov
mov
sbb
add
fnstsw
jne
adc
add
dec
jo
js
add
scas
cmp
je
push
aas
aas
pop
fcompl
pushl
lea
mov
push
std
fsubs
cmp
sub
test
sbb
and
sbbl
es
or
or
pop
aad
add
inc
mov
pop
mov
stc
dec
fiadds
mov
loop
rclb
or
popf
and
adc
scas
dec
scas
jne
lock
cmp
lods
lds
lcall
add
adc
dec
dec
lcall
jecxz
push
push
orl
or
pop
in
sbb
int
adc
cmp
mov
orb
nop
jmp
cmp
and
and
dec
dec
inc
pusha
in
loop
and
inc
sub
adc
rol
jge
dec
adc
mov
ret
xchg
push
mov
adc
adc
adc
outsl
gs
sahf
jo
mov
push
lcall
push
jnp
sbb
xchg
xchg
pop
add
inc
enter
sbb
pop
sbb
js
mov
mov
mov
dec
mov
aas
jo
nop
arpl
aas
cmpb
xchg
les
xchg
mov
cmp
and
push
add
cltd
push
sar
pop
adc
lcall
cmp
add
movsl
mov
je
xchg
mov
mov
dec
dec
or
shrl
dec
push
cmp
mov
sub
sub
cs
or
out
mov
sbb
sar
inc
cld
das
sbb
push
add
push
insl
pop
xor
mov
addl
pop
dec
loopne
in
add
sub
inc
mov
cmp
jb
sub
ret
add
adcb
dec
mov
or
jl
sbb
jle
xor
std
rorb
xor
adc
sbb
and
and
push
or
pop
add
mov
cmp
jne
cmp
pop
fwait
dec
mov
mov
rorb
imul
mov
jmp
fimuls
fwait
mov
cld
push
clc
popa
loop
and
into
repnz
sbb
add
dec
jecxz
push
xor
cmp
pop
icebp
xchg
or
and
jnp
jne
mov
push
cmp
and
mov
decl
pushf
inc
cli
cmp
jne
je
cmp
lock
pop
mov
cwtl
lret
inc
into
dec
jnp
jle
shrb
jne
in
dec
push
int3
pop
push
stc
or
and
jle
cmp
jle
pushl
lods
push
fiaddl
jae
mov
imul
pop
and
pushf
or
xchg
or
popa
repz
mov
lea
push
pushf
push
shr
pusha
xchg
push
jo
add
sbb
adc
push
xor
adc
cwtl
addl
or
or
mov
mov
mov
xchg
test
mov
jnp
or
sub
sbb
test
adcl
xlat
fidivrl
mov
push
xor
push
mov
aaa
add
pop
xor
xor
or
jnp
or
loopne
jne
pop
push
add
adc
or
pusha
mov
and
push
sahf
add
cld
xor
pop
and
rcll
pop
leave
and
jge
movsb
jne
lods
ror
ficompl
iret
pusha
and
dec
lea
subb
pop
and
xorl
mov
or
imul
xor
aad
add
arpl
aam
ret
and
out
jnp
lock
inc
pop
sub
aas
pushl
lea
orl
ret
jg
int
and
rol
loop
dec
cmp
lea
jl
mov
mov
add
push
add
cld
dec
jns
mov
ljmp
outsb
pop
aas
jmp
loop
test
pop
jge
xchg
jo
rcll
or
fcmovb
shll
or
mov
dec
or
frstor
mov
inc
sbb
xor
push
repz
sti
xtest
xchg
dec
daa
or
popa
orb
insb
push
pop
sub
sub
ltr
sub
loope
add
fdivs
jle
push
inc
das
pop
sub
add
dec
cmp
aad
mov
adc
cmp
pop
dec
jb
ret
cmp
xor
push
push
add
lret
jp
faddl
mov
je
add
loopne
adc
rorl
lods
xor
push
in
jo
pop
shll
mov
inc
nop
das
and
cmp
int3
xorb
pushw
aas
jp
clc
in
test
add
add
dec
inc
push
push
loop
or
add
inc
fcoml
push
in
xlat
mov
out
mov
push
call
xchg
sub
lret
dec
ja
leave
in
add
inc
loope
pop
cmp
mov
orl
les
jne
push
sbb
mov
jmp
mov
or
push
jne
test
cmp
sbb
ret
pop
inc
sbb
jne
xchg
add
lret
dec
jp
into
shrb
movsb
pop
ret
sahf
roll
xchg
mov
add
rcr
push
or
dec
sbb
push
cmpl
push
sti
or
sub
pop
hlt
sub
push
xor
add
ret
inc
dec
sub
or
sub
xor
fs
test
aam
and
test
cld
mov
pop
adc
mov
jo
loopne
mov
adc
and
aad
add
push
jne
and
fdivs
add
sub
outsb
or
mov
fcmovnb
cmpsb
cmp
xor
mov
cmp
jae
std
jne
inc
cmp
jb
pop
daa
add
daa
add
scas
xor
push
push
scas
mov
mov
and
pusha
or
push
mov
cmp
xor
xor
add
cmp
pop
jmp
or
in
je
mov
add
aaa
dec
add
inc
inc
jp
or
cmp
in
adc
sbb
arpl
or
in
aaa
and
push
mov
or
test
or
cwtl
cld
push
pop
jnp
xchg
or
es
mov
outsl
in
jb
shll
test
test
push
xchg
cmpsl
xchg
cmp
jmp
add
mov
and
xor
adc
xchg
iret
das
call
sti
mov
fwait
push
aad
std
jl
dec
inc
xor
and
clc
shll
adc
adc
or
pop
fcoml
fdivs
inc
push
dec
push
fcompl
dec
sbb
pop
sub
cli
rolb
fmuls
icebp
add
sub
sbb
mov
shlb
pop
xor
add
xor
cwtl
mov
pop
outsb
pop
or
test
or
sub
add
push
xchg
sbb
lods
mov
loope
mov
shl
les
mov
stos
rorb
in
mov
inc
aam
sbb
and
or
dec
jne
cmp
add
add
call
push
mov
add
sbb
push
cmp
jl
dec
push
add
jo
in
sbb
popa
and
push
insb
xor
xchg
adc
inc
sbb
inc
push
or
push
leave
lret
xchg
cmp
ljmp
inc
mov
xchg
sbbb
push
stos
adc
push
sbb
cld
xlat
or
nop
and
sbbb
cmp
sub
or
add
mov
sub
add
push
adc
jmp
cmp
pop
jge
andl
nop
push
pop
add
xor
pop
and
add
iret
sub
popf
cmp
jno
push
aaa
adc
adc
mov
mov
add
jno
in
pop
xorl
shrl
inc
sub
or
in
mov
fists
outsl
mov
or
or
push
xor
xchg
out
xor
adc
push
rorb
or
xchg
or
inc
ret
push
or
mov
push
jo
aaa
imul
andl
jns
cmp
repnz
test
dec
mov
push
fiaddl
push
mov
sbb
xor
xchg
mov
aaa
xor
and
add
mov
flds
mov
adc
add
inc
pusha
and
jbe
ds
push
mov
pop
fstps
adc
and
jp
aaa
mov
push
push
push
imul
pop
push
xchg
push
ret
jns
dec
pop
mov
jbe
mov
sbb
push
fadds
arpl
insb
lock
mov
dec
sarl
and
push
sbb
sbb
cmc
jge
lea
jp
xor
scas
test
add
fwait
icebp
jno,pn
xor
add
in
pop
mov
leave
adc
xor
shlb
mov
lock
jle
xor
push
loop
mov
jmp
ss
pop
push
and
enter
imul
mov
adc
xchg
into
xor
push
sarb
mov
or
adc
in
xor
dec
roll
scas
xchg
lock
bound
adc
push
js
shrl
add
lcall
push
sbb
addr16
andl
adc
jle
add
loop
push
or
rorb
pop
jmp
push
xor
pop
pop
jbe
add
push
pusha
das
fsub
add
mov
call
xchg
mov
add
in
push
int
or
xchg
mov
cs
movsb
add
lock
clc
rol
imul
or
pop
fwait
add
push
pop
sbb
dec
roll
mov
xchg
insl
mov
dec
repnz
jp
or
add
mov
dec
ljmp
add
cmpsl
in
mov
inc
and
push
ret
test
ljmp
jns
adcl
mov
sub
inc
out
push
or
movsl
fcomps
xor
dec
xchg
adcb
cmp
jne
cmp
pushf
lea
mov
loop
or
aas
and
les
fs
cmp
mov
xor
pop
ficompl
dec
mov
sbb
xor
adc
add
add
lret
jno
pop
push
pop
or
movl
jb
ficoms
inc
add
adcb
inc
or
fstp
addb
movb
movb
add
mov
jnp
loopne
call
and
sbb
adc
cmpl
sub
dec
loope
sbb
or
or
loopne
lcall
add
mov
xor
push
adc
cmp
xchg
lret
push
or
call
fs
pop
call
stos
in
hlt
lock
mov
test
mov
mov
adc
xchg
int3
mov
pop
ret
mov
sbb
add
cmpsb
loopne
stos
out
sub
push
imul
outsb
pop
enter
es
cld
loope
insl
jb
repz
or
mov
mov
and
dec
and
mov
or
and
cltd
dec
aad
and
add
sbb
nop
push
jne
sbb
cwtl
mov
shl
out
add
js
je
push
dec
inc
cld
enter
movzbl
sbb
xchg
xor
or
pop
outsb
faddl
mov
int
adc
sbb
push
xlat
mov
mov
push
test
loope
out
bound
mov
shlb
mov
mov
pop
les
add
adc
mov
out
fadds
pop
pop
rcrl
fsubrl
adc
xlat
xor
sub
sub
jge
or
insb
lock
push
sub
int3
mov
shll
push
inc
adc
incb
dec
aas
push
mov
mov
sub
jb
pop
mov
call
jo
fsubs
dec
enter
mov
pop
jo
rcrb
push
into
mov
or
rclb
dec
fiadds
mov
mov
push
in
loope
xchg
out
mov
xorl
mov
jge
or
shll
stos
xchg
test
jp
mov
lods
push
jle
test
data16
xor
and
pop
pop
fildl
sbb
jge
into
jns
out
cmp
cmpsl
stos
insb
rolb
inc
adc
adc
fs
inc
cmpsl
xor
jmp
xchg
inc
and
sbb
push
push
adc
das
sahf
out
or
cmpsl
pushf
jo
loope
mov
subl
mov
jle
push
hlt
cld
jno
sub
sbb
int3
dec
imul
xor
clc
in
mov
mov
in
or
jns
push
push
pusha
shl
xchg
call
xor
jns
test
fsts
sahf
mov
adc
cmp
add
pop
addl
scas
sub
push
add
add
movsl
dec
push
xor
sbb
out
jg
sbb
ret
add
push
hlt
bound
mov
dec
push
fs
hlt
sbb
insl
imul
add
loope
cld
aam
stos
mov
jmp
sub
pusha
mov
jg
push
shrb
pop
mov
fisubrs
in
imul
in
setne
sbb
adcb
mov
xor
fstpt
push
imul
sbb
pop
fists
les
add
sbb
dec
or
push
hlt
mov
cmpsb
cwtl
js
fnstenv
pop
or
or
jo
inc
rolb
aam
adc
adc
mov
mov
in
dec
ljmp
xchg
push
add
test
add
pop
sub
adc
push
lock
jl
pop
lods
call
inc
test
add
xchg
jmp
sarl
repnz
les
mov
sbb
jmp
inc
jo
sarl
sbb
cmpsb
nop
push
mov
adc
mov
pop
test
negb
inc
add
shlb
xchg
cwtl
xor
add
fwait
cwtl
cwtl
add
or
push
stc
int3
jbe
sbb
add
shr
frstor
mov
sbb
aam
pusha
cld
gs
or
shrl
and
rorl
insb
icebp
add
inc
xchg
loope
hlt
pop
or
and
frstor
inc
pop
imul
loopne
inc
xchg
scas
add
pop
mov
dec
jne
and
sbb
xor
lods
push
or
popa
push
push
sbb
dec
inc
ds
into
push
loop
jb
sbb
adc
add
or
enter
pushf
les
inc
add
das
mov
mov
call
push
or
call
test
mov
fmuls
dec
sub
mov
mov
les
sub
rol
mov
push
ja
leave
adc
xorl
mov
aas
mov
fchs
fldenv
xchg
xor
mov
clc
loopne
sub
push
mov
adc
cs
shlb
mov
nop
jno
rclb
lock
loop
or
mov
fcom
popf
adc
ja
sbb
sub
and
push
mov
out
addb
jmp
dec
sub
sbb
mov
push
cmpsb
cmp
push
pop
icebp
mov
sub
add
les
dec
pop
push
or
das
test
add
mov
xor
lock
ret
push
lret
push
icebp
xchg
cmc
mull
mov
pop
loopne
push
add
xlat
mov
mov
jmp
and
loope
push
push
push
in
jl
int
adc
popa
cmpsb
jmp
adc
dec
mov
mov
push
test
sbbb
dec
or
sarl
sub
cmp
ret
sbb
dec
dec
testl
clc
push
xor
add
sub
xchg
dec
dec
push
cmp
fadds
xchg
mov
lock
es
or
hlt
dec
test
jp
add
xor
pop
cmp
movsb
add
ret
inc
mov
cmp
insl
test
into
or
pop
mov
dec
loope
cltd
sub
and
pop
shll
aam
inc
jg
jl
mov
push
ja
and
jg
mov
arpl
jae
fstpl
cmpsl
ret
xor
and
push
jb
jo
xlat
inc
or
fdivl
ret
rolb
push
aam
lock
pop
movsl
mov
add
fsubrs
adc
rcl
mov
pop
or
scas
imul
inc
fdivl
add
dec
test
sub
pop
jmp
xor
ds
mov
data16
mov
jg
shlb
pop
mov
lea
dec
sbb
lock
aam
pop
push
add
or
ret
mov
push
push
mov
adc
pop
mov
or
sub
ror
push
call
idivl
imul
test
in
or
test
movsb
nop
cmpl
lret
repz
nop
adc
xor
enter
ja
mov
push
xor
push
cmp
mov
testb
mov
mov
inc
mov
lcall
mov
sbb
cli
xchg
lods
sti
ljmp
idivb
cmp
dec
call
and
test
pop
in
and
sbb
and
andb
and
and
add
mov
adc
xchg
vmovddup
daa
int
push
movsb
hlt
push
call
test
je
push
inc
jbe
adc
test
push
or
and
out
push
adcl
sbb
push
int
scas
jmp
imul
push
sbb
loop
je
enter
xchg
popa
pop
dec
dec
std
dec
cmc
dec
mov
sbb
cmp
cltd
lods
cmpl
sub
sub
mov
inc
cltd
pop
add
cld
enter
jne
inc
jns
shlb
xchg
dec
mov
push
test
lret
push
and
mov
cmp
and
xchg
jo
rolb
movsb
int3
aas
orb
sbb
and
mov
or
loope
daa
and
out
jnp
push
cmp
inc
jne
push
dec
xor
or
add
rolb
adc
sbb
and
xchg
mov
outsl
shrb
sub
and
test
loop
inc
xor
popf
fdivl
mov
cltd
int3
in
lea
pop
lahf
xorb
fsubr
or
in
sarl
sub
fadd
or
push
sub
shlb
ret
lock
in
mov
sbb
mov
dec
xor
cmp
arpl
add
inc
lock
popf
push
pop
push
mov
mov
xor
imul
add
adc
or
jbe
adcl
mov
xchg
fdivr
or
fstps
fdivs
int3
jle
push
fcomps
xchg
xchg
in
mov
dec
call
andb
adc
push
fsubr
add
movsl
inc
mov
movsl
popf
das
xor
aas
mov
push
dec
test
adc
cltd
cmp
jmp
cmpsl
ret
stos
in
sahf
cwtl
sbb
daa
inc
cli
xor
in
pop
shl
and
jmp
push
mov
test
xchg
js
gs
fsubrp
es
mov
adc
mov
cld
mov
push
add
rcrb
add
outsl
outsl
jbe
xchg
sbb
or
mov
mov
mov
mov
xchg
aam
cli
imul
daa
fs
jl
lret
or
aaa
iret
cmpsl
rcrb
test
fstpt
aas
mov
jl
add
loopne
mov
sub
jns
addl
testl
cmp
fldl
add
sub
mov
popl
mov
jns
inc
cmpsb
adc
les
push
dec
and
sti
sub
inc
pop
cmp
leave
test
xchg
rol
in
sar
xchg
inc
repnz
mov
mov
mov
roll
fcomp
pop
cmc
push
js
push
sbb
imul
dec
cmp
test
rcrb
cmp
call
add
and
adc
into
jno
adcb
int3
xor
jo
lahf
push
jecxz
leave
adcb
jne
dec
sub
jp
stos
jmp
dec
jmp
repnz
cmp
call
dec
pushl
loopne
or
add
loop
and
call
pop
call
aam
cwtl
frstor
mov
or
int3
jmp
jmp
xor
add
lock
dec
add
add
push
je
in
lock
in
cmp
dec
das
and
dec
enter
xchg
call
sub
shlb
cmp
jl
jne
sbb
cmp
jg
jecxz
or
dec
das
aam
mov
xchg
cmp
out
mov
jl
leave
pushf
cmp
mov
int3
je
adc
call
in
lock
aaa
inc
mov
pop
loopne
add
inc
in
lcall
mov
stos
push
adc
jmp
or
fistl
mov
pop
mov
arpl
sub
mov
cmpl
rclb
sbb
add
inc
cmp
sti
out
jnp
add
adc
cmp
ja
call
sbb
xor
or
imul
js
sbb
pop
inc
sbb
xor
lock
pop
jecxz
cmp
inc
push
add
add
inc
push
push
xorl
mov
mov
test
fs
sbb
pop
inc
lods
imul
scas
jg
jp
xchg
stos
push
clc
sbb
lret
mov
mov
flds
or
negl
jne
or
pop
cs
sub
hlt
jae
int3
inc
or
int
add
jne
jbe
ficoml
lock
jle
xor
jl
pop
movb
jecxz
add
inc
xor
pop
insl
call
inc
dec
adc
dec
rcll
adc
cmp
test
jp
test
and
add
or
mov
mov
pop
pop
ja
jp
pop
adc
or
dec
and
or
push
jbe
sbb
pop
jecxz
push
sbb
add
movsb
fcoms
jne
fs
mov
nop
test
push
or
xchg
loopne
jmp
test
test
fs
push
test
mov
and
daa
in
repz
and
test
rcrb
mov
in
leave
enter
sbbb
mov
in
mov
test
lods
add
ds
and
repnz
leave
mov
movsb
pushf
loopne
out
loopne
std
movsb
mov
dec
movsb
pusha
cwtl
out
or
xchg
cwtl
mov
ds
push
test
repnz
test
ljmp
in
mov
jo
insl
test
xor
adc
or
inc
cs
addr16
push
roll
add
insb
shr
push
ret
jb
daa
jo
mov
push
imul
test
sub
fs
cs
push
test
inc
scas
pusha
pushf
nop
mov
sub
es
es
in
cmp
arpl
in
lods
fs
inc
shr
ret
in
in
dec
jo
jnp
and
adc
push
dec
dec
xchg
mov
inc
dec
in
or
inc
inc
sbb
add
outsl
inc
inc
cmp
xlat
inc
lahf
dec
jl,pt
gs
pusha
sub
sbb
xor
xor
add
xor
insl
sti
and
add
adc
cld
fisubrs
adc
sbb
add
add
add
mov
xchg
add
adc
cmpsb
sti
sarl
push
adc
cli
dec
adc
out
sbb
xchg
test
out
pop
pop
or
ret
out
push
ret
add
adc
xchg
jmp
push
add
bound
out
test
bound
jp
test
clc
subl
subb
push
sub
movl
cmp
sbb
adc
inc
adc
push
inc
clc
movsb
inc
mov
enter
pop
or
stos
adc
test
sbb
enter
dec
sbb
mov
cmp
mov
adc
test
pop
insl
testl
pop
ret
daa
ret
rolw
fistps
dec
or
add
jge
or
rclb
cld
push
adc
into
data16
dec
add
adc
test
dec
add
sub
add
push
mov
test
outsl
pop
mov
xor
mov
dec
adc
insb
jnp
cmp
and
pop
push
outsl
add
sbb
out
adcl
cmp
push
push
daa
sbb
lea
dec
pop
push
adc
xchg
out
push
out
push
pushf
cwtl
test
cmp
mov
and
or
inc
in
shrl
jbe
push
pop
adc
arpl
push
and
mov
orb
adc
jb
xor
inc
inc
or
dec
inc
or
mov
icebp
xchg
cmp
rolb
sub
sbb
inc
and
push
and
add
shlb
cmp
adc
cmp
je
fiadds
push
icebp
sub
dec
jmp
out
or
sarb
rcll
xchg
jl
pusha
sbbb
cli
mov
inc
ret
aaa
arpl
out
dec
fdivrl
xorl
or
test
enter
das
cmp
or
and
das
or
adc
sbb
mov
sbb
add
sahf
jle
push
xchg
or
enter
addb
xor
and
wrmsr
xchg
jmp
or
add
adc
popf
lock
adc
push
int3
ds
adc
mov
xlat
adc
mov
test
pop
movsb
mov
jo
adc
sbb
jge
insl
mov
and
and
and
cmp
movsb
test
dec
adc
sub
addr16
js
cli
push
adc
arpl
sub
sbb
jae
movsb
shlb
and
jmp
adc
lods
mov
xchg
mov
pop
addr16
pusha
cwtl
xor
rcl
mov
push
pop
push
inc
sbb
jno
and
add
and
sub
shlb
movsl
add
jne
or
xchg
rcl
jmp
xchg
pop
mov
or
adc
or
les
fildll
add
and
push
cmp
jmp
stos
fs
sub
dec
mov
pusha
mov
jmp
push
sbb
mov
insl
xchg
lahf
mov
aas
dec
fstpt
xchg
mov
jl
ljmp
or
lods
adcb
dec
clc
xchg
addr16
xchg
fadd
inc
jl
leave
daa
movsl
test
xchg
addb
mov
pop
dec
jg
mov
test
loop
pop
push
nop
addb
sbb
or
inc
cwtl
jg
dec
inc
adc
adc
test
cltd
lahf
or
fisttps
sub
fsubr
imul
add
sub
pushf
ret
dec
mov
push
push
or
pop
jno
adc
mov
add
add
test
jne
or
loopne
lcall
or
leave
in
hlt
hlt
cmp
mov
clc
push
cmp
mov
addl
inc
inc
imul
push
mov
jne
add
and
jns
sbb
in
or
or
adc
pusha
ja
movsl
dec
in
jb
loopne
push
and
jns
or
mov
testb
sti
and
lcall
dec
dec
xor
cmp
aam
inc
or
xchg
sub
jb
lret
in
in
xor
in
pushf
sub
push
jbe
jne
dec
decl
stos
or
jl
rcl
pop
add
clc
push
faddl
mov
xchg
push
mov
mov
xor
sbb
mov
push
add
push
or
test
push
mov
or
cmp
or
lea
cmp
mov
dec
dec
xchg
mov
mov
adc
mov
icebp
out
push
mov
jmp
xchg
push
add
loop
and
sbb
sahf
arpl
test
scas
mov
inc
push
lock
or
jo
outsb
and
cmp
inc
pop
dec
hlt
fchs
cmp
jne
bound
aam
mov
pop
icebp
outsl
add
and
mov
lock
shll
or
bnd
aad
mov
aas
dec
sti
mov
sti
jle
sar
movsl
ret
testl
adc
and
dec
sub
add
dec
or
jmp
pmuludq
sar
jg
lea
pop
sbb
jo
xchg
xchg
sbb
or
in
push
add
sub
or
or
ret
ljmp
testl
add
dec
push
mov
scas
add
push
fisttps
xchg
jle
mov
mov
rorl
sbb
dec
movsl
push
sahf
sti
jmp
sub
hlt
and
xor
jecxz
jae
push
xor
js
mov
mov
call
je
xchg
loopne
xor
sub
rcll
xchg
int3
int3
popa
pop
in
mov
push
in
faddl
or
inc
mov
mov
test
cmp
pop
pushf
shrd
call
in
cmpsb
frstor
and
mov
sbb
mov
into
das
movsl
or
sub
sub
add
pop
xor
and
imul
mov
shrd
pushl
leave
jne
jg
imul
adc
in
push
lock
sbb
mov
imul
cmp
in
mov
test
lock
inc
daa
mov
mov
cli
push
add
jge
es
adc
lods
stos
outsl
mov
mov
pop
pop
cli
or
dec
shrb
add
aas
pop
add
insl
add
call
mov
push
loope
add
add
and
jbe
into
dec
cmp
repz
ret
sbb
push
cltd
rol
add
xchg
jecxz
adc
xchg
sbb
or
fsts
clts
sbb
inc
fcmovbe
test
lahf
mov
add
dec
push
enter
inc
mov
addr16
mov
insl
stos
das
inc
call
ss
pop
gs
movsb
cmpl
pop
cmc
or
hlt
mov
jne
test
xchg
pop
jg
and
inc
addl
jmp
xchg
or
mov
jecxz
mov
sub
clc
shlb
pop
lcall
jmp
mov
inc
xchg
dec
imul
adc
subb
out
pop
jo
add
push
pop
imul
jne
in
popa
cmp
jno
jg
sub
xchg
jns
and
cmpl
lock
adc
push
ljmp
outsb
mov
sbb
stc
push
and
push
mov
and
pushf
xorb
inc
push
dec
pop
adc
cwtl
inc
arpl
add
mov
jmp
ljmp
adc
or
sub
enter
mov
cld
outsl
cld
xor
iret
mov
fdivrs
or
push
jbe
or
push
adc
adc
mov
mov
jne
sbbb
cmp
insw
add
shrl
shl
hlt
jmp
jmp
push
or
push
or
ret
or
ja
inc
aam
fidivrl
lock
or
jge
int3
jmp
rorl
loop
adcl
mov
mov
cmp
jne
pop
or
jne
sbb
sub
pop
or
fnstcw
push
test
jg
aad
mov
add
push
adc
jnp
sub
sahf
jmp
shrb
lods
mov
das
cmp
sbb
lods
adcb
dec
add
jl
push
rol
ret
jg
shll
dec
xorl
dec
frstor
faddl
and
mov
sub
je
and
dec
jo
push
fs
push
stc
mov
ret
cmp
xor
cld
push
lea
insb
stc
popa
aas
es
sub
das
test
sub
fildll
push
sub
adc
jg
out
or
cmp
adc
into
adcl
sub
adc
call
push
fsubl
xor
sub
sub
js
sbb
shr
push
dec
add
scas
sub
sub
adcl
in
jo
dec
insb
and
mov
pop
stos
adc
push
sbb
cmpl
xor
adcb
mov
cmp
cld
int3
movl
bound
aaa
jl
mov
push
cmpsb
jp
mov
push
push
dec
loopne
test
loopne
cmp
xchg
xor
mov
pop
cwtl
add
pusha
sbb
and
jp
fildl
fmuls
fdivr
fcoms
sti
sbb
aam
data16
or
mov
xor
ja
jl
mov
divl
xchg
dec
mov
loopne
xor
scas
sub
sub
add
inc
std
inc
push
nop
add
mov
cmpl
mov
pop
mulb
adc
lcall
dec
cmp
jle
sub
sarl
cmpsl
adc
add
out
sub
sbb
or
movsl
in
rcll
pop
sbb
adc
inc
shll
sub
scas
and
movsl
aam
lock
pop
xor
in
outsl
pop
mov
ficoml
mov
jecxz
lahf
and
xchg
and
rorb
clc
inc
ja
inc
jns
push
adcl
xchg
pop
sub
xchg
mov
mov
jo
sub
mov
leave
daa
fistpll
xor
mov
mov
nop
jb
sbbl
inc
pop
dec
or
dec
sub
dec
je
pop
inc
push
and
or
cmpsl
xor
cmp
pop
mov
and
jnp
sub
jl
insl
xchg
dec
in
cld
xor
insl
xchg
scas
xor
sbb
inc
inc
adc
dec
cltd
dec
push
setb
stc
adc
es
fs
jo
push
test
js
das
jecxz
sbb
lods
mov
mov
loope
pop
mov
add
inc
scas
sub
sti
push
nop
add
gs
enter
fdivs
sub
int3
push
add
pop
gs
fnstcw
adc
test
or
mov
jnp
mov
mov
scas
lret
in
push
nop
mov
mov
inc
pop
or
inc
pop
add
es
ret
lahf
outsl
loop
pop
and
xor
sub
jg
aam
cmpsl
jno
mov
pop
sbb
sub
inc
icebp
fisubrl
shlb
xor
cld
xor
push
add
outsb
nop
cmp
add
sbb
jae
push
xchg
cmpsl
xchg
invd
fucompp
pop
add
jb
in
in
add
sbb
in
mov
adc
mov
sub
or
fstpt
and
xor
inc
or
pop
stc
mov
push
xchg
add
add
add
loop
neg
sbb
or
aam
inc
les
addr16
paddusb
ja
call
xchg
inc
enter
sub
inc
sbb
mov
xor
movsb
adc
leave
inc
lock
js
pop
add
test
push
sbb
das
cmp
ds
js
das
cmp
add
ds
pop
xor
outsl
jns
jmp
adc
add
inc
leave
inc
add
leave
inc
leave
inc
add
cmpsb
adc
inc
or
cmpsb
iret
adc
ret
push
enter
xchg
insb
mov
add
xor
add
push
xor
add
pop
jae
xor
adcl
mov
add
jbe
or
xchg
js
jb
adc
inc
xchg
inc
add
fcompl
lods
dec
add
xor
xchg
cmp
jge
pop
pop
jmp
inc
jb
jl
jl
cmp
dec
sahf
push
stos
jg
xor
pushf
and
ficoml
pushf
loope,pn
add
js
or
lods
in
jb
ret
movsb
loopne
dec
das
aaa
cmpsb
dec
mov
sbb
aaa
cmp
rorb
aas
dec
test
rorb
pusha
dec
dec
stos
sbb
daa
mov
mov
jmp
xorl
popf
inc
test
add
aas
test
pusha
test
adc
add
dec
jne
cmp
cld
std
adc
mov
leave
jo
lods
pop
and
ret
iret
jne
test
movsl
or
push
push
push
add
inc
adcl
and
pop
push
pop
adc
add
test
sub
call
cmp
test
push
in
mov
in
gs
add
push
rcrl
pop
pop
push
ljmp
daa
inc
mov
adc
inc
or
xchg
and
inc
xchg
nop
pop
jb
pop
fcoms
imul
and
jmp
xchg
pop
sbb
jbe
pop
shr
ja
aad
push
xchg
jnp
ss
bound
push
adc
jnp
scas
dec
insl
mov
or
adc
lcall
imul
imul
or
jo
add
lcall
test
adc
lahf
int
cmp
push
push
and
sub
and
xor
les
repz
dec
sub
sbbl
jmp
cld
mov
mov
lcall
setl
mov
ja
mov
inc
add
hlt
jb
jl
mov
shlb
inc
sub
mov
lds
mov
mov
inc
cmp
sti
or
lahf
pop
add
pusha
insl
or
lea
movsb
int
ds
subb
lods
mov
xor
loop
mov
out
jl
mov
adc
push
add
fcmovb
fstpl
mov
or
fs
lock
mov
gs
and
mov
or
add
ret
imul
sarb
or
push
xchg
cltd
or
in
rcl
fsubp
mov
out
pop
cld
mov
add
subb
or
push
hlt
push
ds
or
imul
or
push
cmpsb
sbb
sub
adc
fs
push
pop
cmc
nop
mov
add
sub
pop
dec
xor
push
int3
add
mov
pop
xchg
loop
add
pop
jle
inc
icebp
lcall
sbb
enter
adc
imul
lock
inc
hlt
leave
and
jne
sti
outsl
pusha
repnz
pop
fisttps
rorb
clc
dec
clc
cmp
xchg
xor
pop
leave
xor
hlt
push
sbb
mov
mov
mov
rolb
or
push
repz
rclb
add
test
add
mov
addl
push
js
movsb
movsb
sti
movsb
push
ja
lods
mov
les
add
adc
mov
jp
test
mov
adc
dec
pop
or
xlat
aaa
orl
jbe
push
cmpl
push
loopne
test
sub
sub
mov
or
push
pusha
movsl
inc
mov
dec
in
imul
sbb
inc
push
dec
lock
push
sbb
cmp
lods
sbb
sbb
dec
dec
and
mov
sbb
ret
add
xor
mov
add
sbb
orl
stos
fnstcw
push
xor
mov
push
xchg
push
repz
gs
sub
pop
cmpsb
pusha
and
jmp
out
jmp
inc
or
loopne
leave
test
push
test
xchg
lods
sbb
add
jns
add
sub
shlb
sti
clc
loope
pop
test
filds
sbb
push
je
into
pop
and
test
mov
aam
movswl
push
loopne
aam
pop
push
aaa
push
sti
jl
and
insl
js
dec
cmpsb
or
outsl
adc
rcrb
add
mov
cmpsl
sub
lock
cmp
mov
add
nop
rorb
dec
and
add
or
sub
xchg
adc
ret
lcall
cld
ds
arpl
mov
je
imul
sbb
js
addr16
lds
add
data16
fcmovnu
xor
or
xor
pop
call
adc
xchg
sbb
rcrb
cmp
shrb
push
imul
pop
fs
fsubl
push
jae
ljmp
push
cmp
lcall
inc
adc
push
sbb
lcall
cmp
and
pop
or
lds
adc
imul
addl
push
orb
dec
test
add
sub
pop
sgdtl
cmp
dec
adc
sbb
sub
jmp
fiaddl
push
add
xor
cli
pop
mov
mov
and
sti
daa
push
dec
or
dec
or
sub
ljmp
sbb
fnstenv
pop
lret
sbb
dec
lods
outsl
sti
out
sbb
pop
mov
testl
loopne
adc
jecxz
mov
or
and
xchg
xor
dec
rolb
in
movsb
clc
push
fucomp
imul
push
loop,pn
push
shll
and
mov
stos
rorl
dec
stos
inc
adc
stc
or
mov
insl
jne
inc
add
out
mov
ss
imul
push
dec
ss
add
bound
push
ss
push
cmpsb
je
rcrb
inc
or
dec
jae
shrl
or
push
xor
insb
xchg
jl
xchg
dec
cmp
add
fimuls
cmpb
add
inc
add
cmp
or
fdiv
mov
push
in
jns
cmp
add
push
call
cmp
cmp
popa
adcl
lods
and
mov
ja
mov
and
push
das
test
cmp
xor
or
fs
pop
dec
imul
repnz
and
xor
mov
add
cmp
aas
pop
push
sbb
ret
pop
mov
pop
ljmp
cmp
xor
sarl
mov
pop
pushf
pushf
rorb
mov
pushf
hlt
popa
xchg
xchg
or
stos
jge
addl
test
popa
adc
jecxz
pop
sbb
inc
psrad
dec
aas
shrb
test
cmp
das
mov
jp
and
jbe
mov
or
cwtl
aas
mov
dec
bound
dec
test
cltd
and
call
sub
ret
push
pop
test
jg
xor
cmp
inc
mov
add
dec
lahf
push
and
pop
sbb
aaa
add
push
adc
pop
xchg
aas
adc
dec
in
add
and
dec
pop
mov
adc
fistl
push
clc
cmp
lret
mov
sub
loop
cs
mov
or
pushf
cs
test
xchg
xchg
jl
lahf
or
xor
dec
icebp
imul
lock
adc
add
arpl
test
call
pusha
lock
pop
pop
push
scas
fs
out
or
jbe
sbb
add
or
add
jnp
in
jne
cmpsl
or
push
nop
mov
popa
lahf
or
xor
das
sahf
jne
pop
push
sub
jg
adc
dec
repnz
cs
adc
mov
sbb
add
lea
push
dec
mov
decl
movsl
dec
dec
or
lods
mov
cmp
sub
dec
cmp
ss
add
int
sbb
add
adc
lahf
cmp
stos
mov
jne
fildl
shlb
fs
fcmovu
jg
test
cwtl
or
mov
pop
movsl
push
sbb
jp
rorb
dec
std
inc
int
xor
add
and
lock
fs
inc
add
gs
paddusw
pusha
dec
jl
sbb
in
popf
mov
icebp
mov
out
xor
sahf
in
movsl
cmp
pop
xchg
xchg
cmpsb
cmp
cld
cld
add
cltd
sub
cmp
adc
ret
gs
loope
fstps
inc
inc
hlt
in
jns
or
mov
cmp
add
xor
lea
sbbb
xor
cmp
xlat
or
pop
in
xor
push
pop
pop
cmpsb
adc
sub
stos
dec
inc
sbb
mov
or
mov
rorb
cld
mov
jne
add
jge
add
xchg
xchg
adcl
cwtl
add
xor
mov
or
pop
leave
inc
xor
xor
pop
adc
shrb
sub
fistps
xlat
pop
mov
sub
test
xchg
and
daa
or
sbb
sbb
shll
scas
cmpsb
push
add
mov
icebp
xor
sbb
xor
or
jmp
std
pop
or
sbb
or
nop
or
fiadds
pop
hlt
cld
imul
daa
mov
out
lods
lret
enter
mov
hlt
sbb
dec
xor
pop
stos
rcrl
pusha
jmp
es
mov
jo
movsl
ret
in
and
mov
cmovl
jmp
push
jo
sbb
and
adc
add
mov
add
movsb
xchg
inc
push
vsqrtpd
and
lock
add
push
or
rcl
dec
addb
or
je
and
jl
and
orl
loopne
cmp
hlt
call
mov
fsubp
jno
hlt
push
push
lock
mov
adc
sbb
pusha
inc
mov
test
and
mov
jo
add
cli
pop
cmp
push
fstps
and
push
aad
insl
sbb
lahf
test
push
sahf
je
mov
push
or
leave
xor
dec
rorl
sub
pop
sub
jl
cmp
rorl
cs
inc
movsl
pop
sub
mov
adcl
daa
mov
push
adc
push
and
mov
xchg
sub
xor
add
pop
imul
jne
fsubl
lods
pop
pop
add
push
jae
test
mov
enter
xchg
lods
call
adc
fsubrl
iret
mov
call
pop
popf
mov
jp
lds
lea
mov
stos
xor
add
adc
xchg
xchg
xchg
mov
in
jmp
icebp
movsl
xchg
stos
sub
jmp
roll
or
jecxz
mov
pop
cld
mov
sbb
shlb
push
std
movsb
mov
movsl
cmc
cs
sub
int
push
xorl
int3
mov
add
xorb
xorb
push
mov
or
scas
pop
inc
movsl
jne
push
mov
add
push
sbb
and
ds
add
adc
jmp
mov
pop
cmp
in
data16
push
push
scas
inc
lock
roll
xor
adc
and
loopne
es
sub
les
fstps
pushf
or
movswl
sbb
mov
push
adc
sub
nop
lahf
nop
adc
cmpsb
std
adc
loopne
std
dec
mov
outsl
pop
dec
aam
dec
mov
push
or
inc
jg
fwait
sub
sub
cwtl
cmpl
push
inc
sbb
adc
inc
filds
popa
mov
test
add
or
shl
and
push
test
aas
pop
shr
dec
and
jb
in
call
cmp
shr
loope
test
pop
adc
push
xchg
mov
fmull
pop
enter
cli
fildl
icebp
arpl
push
movsb
mov
enter
push
nop
pusha
inc
fisubrl
outsl
flds
push
rcrb
imul
sbb
loopne
imul
add
jl
pop
clc
add
dec
add
jle
mov
sub
mov
movsl
jecxz
pop
adcb
in
add
and
or
adcl
push
jns
cmpl
jl
or
lods
or
lea
sbb
cmp
stos
jg
in
add
test
mov
dec
jnp
mov
inc
imul
xchg
push
add
mov
sbb
adc
or
or
or
sub
sub
add
popa
es
addb
shl
xchg
sub
mov
mov
inc
sbbl
add
pushf
pop
pop
shlb
insl
mov
cmp
adc
mov
outsb
and
pop
sbb
push
fcmovu
jmp
movsb
mov
movb
or
cltd
idivl
jne
adc
andb
lahf
xchg
stc
test
pop
lahf
jl
fmul
inc
lods
icebp
and
pop
cmp
and
pop
adc
jns
xchg
or
sbb
or
es
or
push
lods
cs
push
mov
jb
idivl
or
inc
add
stos
add
push
or
or
xor
movsl
sbb
and
jg
inc
add
cwtl
pop
mov
mov
aaa
test
lahf
enter
add
adc
mov
pop
cmpsb
pushf
bound
aas
cmp
je
add
arpl
jne
xchg
les
inc
xor
pop
sbb
mov
into
pop
cli
scas
pop
inc
scas
inc
fadds
or
jle
cltd
jbe
push
imul
inc
into
movsb
les
orl
adcl
sub
mov
cmp
test
shrb
insl
xor
popf
add
orb
leave
adc
xchg
lock
lods
movsb
jge
sarl
push
aad
movsl
andb
xchg
or
inc
push
fsubl
adc
pop
push
xor
adc
lcall
pusha
inc
insl
inc
xchg
cmp
mov
sub
push
sub
jg
pop
sbb
dec
arpl
push
hlt
nop
nop
inc
fistps
adc
or
ds
stos
mov
jbe
add
fdivs
mov
jns
rorb
shr
ret
cmpsl
lock
insb
das
sub
movsl
inc
lret
cmp
ss
and
mov
push
add
insb
inc
sbb
and
adc
icebp
arpl
xchg
or
adc
adc
or
inc
das
add
adc
push
daa
xor
sahf
es
fwait
sub
clc
push
test
xchg
or
fisubl
xchg
dec
stos
inc
flds
inc
stos
sub
pushf
pushf
in
in
in
ds
out
inc
js
shlb
jbe
adc
push
push
rcll
jmp
cld
pop
mov
rclb
lea
lcall
sub
sbb
push
popa
push
mov
lock
test
cmp
outsl
pusha
sub
xor
push
popa
dec
negb
adc
les
out
shr
sub
in
popa
inc
popa
xchg
inc
mov
pop
stos
sbbl
and
mov
popf
push
adc
js
push
mov
sbb
mov
adc
mov
or
loope
or
mov
mov
xchg
pop
add
scas
or
mov
mov
test
rorl
mov
pushf
lock
pusha
push
lock
pop
adc
sub
add
andb
stos
stos
cmpsb
or
aas
nop
inc
xchg
mov
js
pop
mov
add
or
mov
rcrb
or
or
inc
ret
pop
test
xor
sub
adc
and
jg
arpl
fisttpll
xor
and
cmp
andl
xchg
add
enter
cmp
mov
cwtl
mov
pusha
sbb
cmpsl
push
xor
jmp
inc
or
enter
mov
or
or
inc
or
insb
or
in
popa
add
aas
addb
add
inc
andl
imul
jmp
leave
outsl
mov
add
out
jmp
sbb
aas
cmp
cmp
std
insb
insb
nop
push
shrb
jg
jns
and
xor
xchg
das
or
sub
mov
sub
popa
gs
movb
adc
loopne
sub
adc
mov
sahf
mov
mov
mov
ret
cmp
push
das
jge
js
jne
jne
jmp
test
les
xchg
in
and
add
and
jno
sbb
sbb
mov
fdivl
lock
push
add
add
es
aam
icebp
es
sbb
inc
xor
jns
ljmp
mov
int3
popf
add
shrl
sub
adc
inc
dec
gs
or
sarl
push
adc
inc
fs
or
dec
cmpsb
jl
push
mov
hlt
add
or
dec
xchg
idivb
ljmp
or
in
xor
or
mov
lahf
ljmp
pop
or
pop
lcall
stc
fimull
dec
lahf
pusha
sub
and
aam
daa
sub
inc
imul
mov
lods
lods
jg
pop
jmp
jb
sbb
adc
ficompl
sub
adc
jecxz
sub
sbb
js
add
xor
push
int3
push
call
lea
mov
add
sub
cs
dec
push
call
jge
and
mov
xchg
dec
shrb
and
sub
mov
push
mov
pop
pop
fs
sub
mov
lock
daa
cmpsl
add
fcmovne
es
adc
idivl
cwtl
or
and
rol
es
cmp
lea
lods
ss
and
ret
push
fs
in
les
push
or
sbb
mov
out
lret
mov
cld
lea
cmp
ss
jecxz
xchg
pop
mov
in
test
aam
ss
mov
mov
aaa
popa
sbb
loopne
inc
or
and
mov
and
adc
in
jmp
inc
adc
cmp
mov
xor
cmp
push
in
faddl
xchg
fdiv
repnz
mov
or
or
popf
mov
outsb
mov
rol
lock
mov
mov
pop
fsubp
and
dec
jle
mov
jmp
daa
dec
es
sub
sbb
fadds
dec
sahf
sub
lea
lods
sbb
andl
nop
cltd
adc
cltd
mov
jo
in
mov
ja
imul
push
movsb
rcr
in
imul
lods
jmp
inc
addb
inc
cs
jb
mov
or
add
sub
or
movsl
into
push
aad
mov
adc
fcmovu
sbb
sub
mov
addr16
cwtl
sbb
int
ds
jne
ds
ja
ljmp
xor
mov
subb
movsb
mov
and
addl
pop
lret
in
mov
and
movsb
xor
fs
xor
nop
pop
mov
nop
subl
sub
and
mov
stc
and
lods
movsb
ja
pusha
xor
aaa
pop
add
inc
xor
pop
add
xlat
push
testb
mov
aam
add
xchg
sub
mov
xchg
enter
or
pop
mov
iret
push
movb
push
mov
call
pushw
aaa
mov
icebp
daa
xchg
mov
mov
enter
test
aaa
push
int3
in
jne
sub
xchg
cmp
xor
cltd
movsl
adc
push
rorb
cmp
inc
js
lods
mov
sahf
add
or
loope
mov
mov
test
out
or
dec
cmp
ds
sbb
mov
cmc
jmp
loope
sahf
cltd
lcall
mov
inc
jge
test
sub
fnstsw
dec
cmp
or
adc
aad
dec
sub
sub
add
xchg
mov
adc
cli
sub
ja
adc
jl
out
mov
dec
je
and
je
ja
fimuls
jp
inc
xor
xchg
xchg
cmp
and
movsl
inc
stos
push
gs
and
mov
pop
or
in
nop
test
fmull
mov
jle
ret
adc
add
rclb
mov
jmp
inc
sub
push
jnp
and
loope
cmp
lods
add
inc
sbb
shll
dec
dec
stos
std
adc
push
shrl
mov
add
push
hlt
fmulp
or
xchg
push
or
add
mov
pop
out
dec
sbb
or
movsl
ja
nop
adc
sbb
add
fistps
in
je
push
je
sbb
in
imul
cmpb
stos
xor
fsubs
cmp
rol
sbb
out
dec
imulb
push
sub
jl
and
push
pop
addr16
inc
fs
push
imul
adc
or
ret
pop
jns
rclb
and
cmp
jae
xlat
adc
clc
xor
and
test
push
imul
adc
push
add
or
xor
jge
fdivrl
es
cmc
test
mov
insl
pop
add
movsl
pop
out
cmp
xchg
sub
sbb
aas
sub
add
flds
cwtl
adc
data16
imul
outsl
les
xor
mov
xor
push
or
jo
rcrl
pop
repnz
adc
push
mov
lods
adcl
addb
jmp
sbb
pop
mov
shrb
arpl
loope
jg
push
cli
outsb
push
and
das
add
add
pop
rorb
push
mov
enter
roll
dec
hlt
hlt
hlt
mov
cmp
sbb
stos
cmc
out
add
jmp
xor
xor
pop
adc
cwtl
or
mov
mov
jg
xor
out
or
pushf
arpl
jg
filds
addl
js
or
push
add
repnz
jne
xchg
test
cmpl
cmpsb
sub
and
or
ficoms
sbb
outsl
data16
aas
call
add
mov
mov
adc
repz
sbb
add
std
xlat
adc
adcb
and
push
leave
repz
popf
pop
pop
in
in
xchg
pop
sti
jge
pop
inc
fsubrl
xchg
lods
xorb
sub
popf
dec
call
jno
mov
pusha
mov
xor
push
out
scas
fsub
push
cltd
add
or
cmp
test
sub
mov
xor
aam
aam
adc
mov
test
push
sbb
mov
lods
push
cld
movsl
jle
enter
mov
lea
adc
mov
enter
pop
ds
push
dec
sbb
mov
push
test
pop
repnz
insl
popa
sbbb
pop
jo
xchg
xor
mov
jns
sub
sbbl
xchg
das
nop
jmp
or
mov
imul
xor
enter
add
scas
push
sub
mov
cwtl
popf
cwtl
pushf
pop
loopne
mov
in
xor
push
cmpsl
bound
fcmovnu
shrl
test
bnd
call
aam
jns
cmp
or
test
cmp
lea
cwtl
mov
fsubs
mov
std
sahf
mov
rcrl
jb
pop
movl
jge
push
mov
sub
test
add
test
rcll
cmp
push
ss
enter
xchg
add
loopne
insb
adc
inc
or
inc
mov
loopne
mov
or
mov
jnp
ja
ja
fmuls
mov
jp
pop
adc
mov
xchg
mov
push
stos
daa
icebp
sahf
inc
pop
test
imul
movsb
or
xor
or
pop
andl
adc
faddl
int3
dec
fiadds
lods
fstpl
xlat
or
mov
jo
or
sub
ret
cmp
sbb
push
xchg
aad
sbb
gs
jb
add
and
push
stc
andb
sbb
pop
jl
arpl
mov
rclb
jp
add
mov
mov
ret
dec
pop
fnstsw
int3
nop
sub
enter
adc
aam
push
cmp
sub
cmc
add
sub
sub
and
push
inc
push
dec
inc
add
cmpl
leave
popf
testl
push
aam
cwtl
mov
stos
push
loop
nop
shl
or
jbe
setb
pop
outsb
cmpb
push
ljmp
add
mov
inc
ret
int3
cmp
adc
dec
inc
add
push
sub
push
cs
jb
push
jo
sarb
xor
rol
push
icebp
or
add
dec
mov
pusha
mov
cltd
lret
inc
jmp
fsub
mov
dec
inc
loopne
dec
sbb
lds
popf
loopne
adc
xlat
xor
lods
inc
or
pusha
dec
add
push
outsl
jl
inc
xacquire
or
pop
fcmovnu
inc
inc
mov
sbb
or
add
addb
les
inc
shlb
mov
mov
add
mov
adc
lods
pop
lret
and
dec
lcall
mov
adcl
je
or
adc
xor
sub
or
jne
add
imul
nopl
inc
or
js
dec
adc
data16
rcrb
pusha
lea
andb
out
add
lea
inc
enter
and
sub
pop
push
and
add
pop
ljmp
mov
jns
jne
pop
lock
jle
imul
cmpsl
lock
or
fistl
jp
dec
mov
movsb
pop
sub
push
mov
push
ret
dec
push
push
or
sbb
cmpb
ret
add
rorb
lock
jle
xchg
inc
adc
pop
es
sub
shl
jno
add
in
add
mov
icebp
xchg
cmp
mov
int3
xchg
push
add
test
mov
mov
cmc
and
es
sub
mov
insb
outsl
popa
adc
ficoml
jns
pop
xor
sbb
sub
mov
and
andl
stc
xor
xor
push
mov
stos
leave
bound
into
jg
add
push
popa
inc
dec
shr
inc
mov
push
pop
sub
arpl
xchg
imul
xor
mov
ss
fisttps
fisttps
xchg
sbb
sub
dec
imul
mov
add
xor
mov
dec
xchg
pop
mov
dec
sub
mov
adc
ret
jg
insb
adc
mov
and
dec
cwtl
les
lock
and
lahf
add
dec
inc
ljmp
inc
repnz
add
pop
fsubrs
rcr
int
xchg
cld
aad
sub
pop
mov
push
sbb
and
mov
movb
adc
pop
out
roll
xchg
push
and
les
orl
insb
pop
adc
and
mov
dec
mov
add
mov
fsubrs
jns
test
repz
cmp
sbb
mov
xor
sbb
jecxz
xor
xchg
jmp
sub
push
shl
popa
cltd
pop
cs
mov
add
incb
movsl
adc
push
lock
fisttpll
cmp
xor
aam
add
adc
pop
sub
jmp
xchg
add
add
lea
bound
sub
jg
pop
push
sub
jno
xor
loopne
mov
sbb
loopne
add
scas
xchg
jl
pop
add
pop
mov
mov
xchg
pop
cmp
or
or
push
inc
fwait
mov
or
pop
sub
insb
mov
inc
add
pop
xchg
push
fisttpl
roll
mov
sub
pop
stos
adcb
filds
fbld
jne
add
stc
gs
pop
mov
cmp
pusha
in
cmp
lods
xchg
cmp
or
or
pushf
nop
pop
lahf
xchg
popa
sbb
bnd
or
lahf
cmp
sbb
mov
je
into
and
cmpxchg8b
enter
or
adc
orb
jb
popa
add
or
test
mov
insb
lea
add
mov
cmp
xor
cmp
and
inc
rcrb
das
sub
mov
cli
les
add
test
test
add
in
add
add
ret
push
popf
into
dec
ds
push
loopne
in
test
sbb
inc
sbb
addr16
lahf
rcl
pop
leave
faddl
push
icebp
mov
jecxz
js
push
mov
imul
call
or
push
cld
xchg
mov
pop
popf
lea
or
add
pusha
or
js
sbb
inc
movsl
sbb
mov
cmp
mov
cmp
sbb
add
xchg
adc
jo
cwtl
jge
add
mov
shll
sbb
fdivl
pop
or
and
sub
and
fsubl
sbb
jmp
jno
sub
sbb
sbb
mov
std
pop
jbe
cld
in
mov
fidivrl
and
daa
lock
fwait
je
jo
les
cwtl
cwtl
xchg
test
fsubrs
and
or
push
push
push
fisttpl
inc
sbb
adc
stc
testl
mov
pop
outsb
jae
shlb
sbb
pop
and
loopne
les
and
push
and
ljmp
add
xchg
scas
sbb
add
add
dec
in
shlb
adc
adc
mov
sbb
cmp
mov
and
push
pop
and
sub
adc
loope
jmp
pop
jp
mov
inc
das
cmp
lcall
je
xlat
pop
adc
and
pop
dec
and
leave
inc
stos
shrb
mov
pop
outsl
scas
cltd
lods
stc
jg
sub
adc
push
xor
dec
outsb
pop
sub
cmp
pop
push
push
movsb
adc
mov
lahf
movl
je
mov
jmp
out
or
or
into
add
xlat
and
inc
inc
cmp
push
add
xchg
decl
cmp
lcall
or
test
sub
lock
dec
ret
xchg
shr
mov
repnz
jne
dec
and
lock
mov
ja
aas
and
ss
movsl
popf
pop
sbb
inc
mov
nop
pop
mov
mov
jno
bound
pushf
jns
push
and
and
rclb
pop
add
imul
cmc
sub
dec
pop
mov
sbb
es
aad
cmp
xchg
mov
xchg
inc
sub
pop
xchg
insl
daa
and
mov
cmp
adcb
test
in
jl
loopne
push
stos
pushf
mov
fstl
adc
insb
or
movsb
ret
stos
push
and
repnz
jmp
inc
jb
lods
mov
push
push
lds
pusha
dec
add
leave
pop
mov
imul
fucomip
aam
jecxz
or
inc
or
push
dec
mov
daa
and
cltd
cmp
inc
sub
and
pop
leave
cld
test
mov
ret
call
mov
je
ret
add
test
xorl
sbb
or
je
dec
ret
lods
fcoms
pop
and
pop
inc
or
cmp
xor
clc
adc
add
or
dec
aaa
aam
mov
pop
enter
pushf
jmp
cmp
xor
jns
mov
inc
or
sub
bound
imul
outsl
das
mov
loope
or
insb
fidivrs
bound
jae
fadds
aaa
xchg
xor
test
jo
cs
adc
fistl
sahf
lds
jmp
xchg
inc
pop
xorl
pop
xor
popa
sbb
cwtl
pop
push
clc
push
cli
pop
or
cmp
outsb
je
sub
jo
pop
and
int3
in
xchg
imul
subb
add
in
leave
pop
cld
sbb
fisttps
and
adcl
adc
pop
push
aam
mov
jmp
cmp
shlb
mov
pop
cmp
loopne
xor
mov
inc
cwtl
daa
add
fisubrs
jl
pop
mov
lods
inc
arpl
push
test
cmpsl
fcmovnb
jl
mov
lock
test
cs
clc
xchg
sub
out
test
sahf
or
fs
rcrb
or
push
sbb
es
jg
stos
sub
es
data16
icebp
fldl
pusha
xchg
mov
add
inc
mov
adc
add
sbb
pop
and
nop
pop
pop
in
aad
pusha
pop
insb
cmp
jnp
loopne
mov
popa
shl
fbld
dec
sub
adc
in
inc
dec
rcr
in
aam
add
imul
mov
shlb
cmc
dec
sub
dec
popa
mov
or
adc
test
adc
adc
stos
gs
or
add
movsb
mov
xor
insl
stc
add
je
adc
add
push
rcrb
xchg
bound
iret
cmpb
adc
movsb
fwait
das
cwtl
or
adc
push
cmpsb
aad
test
int3
push
arpl
gs
jb
lcall
mov
jbe
out
pop
add
lods
lret
cmp
lea
push
push
and
subb
cltd
lret
or
mov
sbb
adc
adc
add
push
add
dec
lahf
dec
inc
loope
subl
xchg
js
pop
mov
push
or
mov
aas
push
or
rolb
jo
aam
mov
add
or
mov
or
ret
add
js
ror
mov
in
aas
sarb
cmp
push
and
fists
adc
or
cmp
push
mov
adc
xor
adc
int
test
and
mov
outsl
loop
test
shrb
imul
insb
or
xchg
pop
lock
dec
jl
or
loope
push
cmpsb
lods
negb
and
dec
mov
clc
shr
fimull
repnz
scas
lea
ret
sub
add
jle
daa
jb
cmpsb
inc
lods
mov
fstps
filds
fmull
testb
pop
sub
lds
add
add
or
aam
xchg
adc
dec
test
lret
push
aad
or
sub
loope
loope
pop
lock
cmp
stos
imul
adc
jo
dec
jne
ret
or
addr16
add
imul
xchg
push
test
pop
cmp
add
dec
pusha
push
add
out
inc
sub
sbb
or
pop
add
test
pop
jl
xor
jg
addb
push
shlb
sbb
xor
and
jge
pop
mov
and
and
push
mov
sbb
add
or
mov
sub
adc
mov
dec
sbb
adc
xchg
pop
or
dec
cld
movsl
out
ret
popa
add
xchg
push
inc
push
add
sbb
add
fstp
dec
shll
push
and
int3
adc
pushl
and
add
xor
push
mov
push
or
and
and
stos
cmp
rolb
cmp
nop
xchg
push
push
clc
pop
mov
adc
add
or
jae
es
jle
mov
mov
xor
xchg
xchg
in
pop
loopne
inc
dec
sahf
rol
lahf
add
fidivrl
lods
xchg
pop
xor
rol
cmpb
or
push
jp
mov
leave
xor
push
or
push
daa
xchg
cld
lahf
cmp
sbb
inc
or
adc
pop
pop
inc
popa
scas
jo
and
test
jno
loopne
and
xor
inc
xor
push
sbb
int3
sub
sbb
mov
cmpsb
push
imul
mov
aaa
mov
xor
scas
fistpl
test
fs
mov
sti
cmp
leave
dec
addb
mov
mov
fimuls
fdivp
movsl
loopne
dec
xor
mov
jo
push
push
mov
pop
push
ret
jmp
fldcw
cmp
mov
sbb
pop
mov
iret
dec
mov
lods
sub
mov
sub
fimull
fwait
push
jno
push
push
or
inc
adc
jb
jne
addr16
push
pop
cmpb
lea
adc
xor
cmpsl
mov
hlt
inc
cmpsb
fildl
cmp
pop
pop
inc
jl
pop
or
or
adc
loopne
jmp
mov
movsl
xor
daa
adc
fcomps
inc
daa
pop
xchg
lahf
mov
dec
aad
jns
push
shrb
adc
jo
mov
pop
inc
pop
xchg
jg
pushf
sbb
and
pop
sub
and
ret
inc
jae
clc
push
add
ret
and
pop
loop
js
pop
mov
adc
jb
lea
shrb
fucomi
clc
es
clc
adc
pop
push
iret
hlt
adc
bound
in
fs
mov
dec
sub
add
push
ror
popa
bound
pop
das
popf
jl
hlt
adc
and
shrl
adc
jl
sbb
dec
jmp
loope
jecxz
pop
bound
jl
sub
xor
cmp
add
push
call
ss
sbb
push
sub
or
aad
push
sub
mov
cld
pop
dec
imul
jmp
mul
sti
loopne
cmpsl
mov
aas
fbstp
mov
hlt
cltd
xor
push
xchg
punpckhdq
inc
inc
bound
dec
add
jmp
dec
inc
insl
addr16
jne
or
ja
cmp
sbb
pop
movsb
pop
js
add
mov
mov
adc
and
or
pop
popa
popf
ret
ss
push
push
pop
sbb
and
pop
int
adcb
push
sbb
dec
fcmovnbe
inc
loop
pop
inc
jnp
adc
push
mov
lret
push
shll
mov
mov
das
nop
inc
jge
mov
mov
aam
call
cmp
rcrb
sbb
xorl
xor
add
add
xor
jnp
push
rclb
scas
aas
or
dec
pop
les
push
ljmp
es
mov
mov
loopne
jg
xor
add
mov
cmpb
sbb
xchg
mov
in
repnz
mov
jl
inc
and
add
pop
iret
sub
push
pop
int
les
repz
push
inc
sti
pop
cmp
push
adc
stos
rolb
sub
shlb
std
inc
and
jnp
add
or
in
xor
leave
or
stos
scas
jmp
movsl
or
adc
adc
push
in
or
pop
pop
jns
cmpsb
mov
or
mov
pop
pop
add
rorb
test
push
add
sbb
or
pusha
xor
xchg
cmp
aas
mov
cmp
sub
inc
mov
jb
and
sbb
add
and
add
inc
and
push
or
dec
jg
or
xchg
jecxz
test
ja
push
adc
out
or
push
stos
daa
cld
push
push
push
fcompl
jns
add
das
sub
sbb
lea
adc
aaa
aas
mov
or
add
out
repz
xor
add
addl
fdivrs
mov
sbb
fs
or
rcr
pop
sarb
sbb
or
push
aas
clc
ds
add
cmp
stc
mov
mov
push
in
cmp
add
adc
inc
fiaddl
insb
jnp
loop
arpl
mov
xchg
ret
subl
cmpsb
push
cmpsb
jge
xchg
mov
sbb
aas
or
mov
inc
pop
mov
mov
fisttps
pop
enter
and
nop
imul
adc
sub
enter
mov
jb
aas
or
add
inc
adc
lds
xlat
jg
add
insb
repnz
enter
sbb
adc
and
adc
pop
fistpll
aas
les
jg
pushf
es
adc
sahf
pop
cltd
enter
add
mov
stos
or
jns
in
lock
jb
insl
pop
mov
and
sarl
dec
aam
or
mov
cmp
pop
imul
push
lock
cmova
add
cld
ficoml
mov
or
int3
insl
movb
and
pop
adc
xor
mov
add
jo
adc
lea
inc
sub
sahf
ja
pop
imul
fbstp
push
jmp
dec
or
add
add
loopne
sbb
popl
rcr
add
xor
shll
fmuls
mov
cmpsb
nop
inc
cmpsb
and
inc
cmpsb
nop
inc
dec
and
and
inc
enter
cld
mov
and
and
sub
and
movsb
daa
js
enter
dec
sub
add
and
cs
cltd
bound
jbe
adc
das
push
push
cmp
xor
push
movsb
mov
sbb
adc
add
lods
push
xchg
and
lcall
xchg
or
mov
out
add
aad
loopne
sbb
aas
roll
sbb
jg
and
sbb
jmp
adc
pop
cmpsl
and
mov
mov
enter
inc
xor
cli
adc
or
dec
or
cmc
push
dec
dec
dec
xor
xchg
mov
mov
pop
inc
push
rolb
xchg
pop
adc
rol
pop
dec
dec
xchg
push
adc
add
and
jns
lock
repnz
sbb
sbb
add
sub
pushl
sub
test
xor
push
jo
sarb
sarb
push
hlt
jg
mov
add
mov
xor
and
xor
sbb
inc
cmpsb
es
xchg
xchg
jo
dec
lret
mov
jl
xchg
push
inc
or
add
and
cmc
mov
mov
movsb
mov
sub
fildll
add
jl
cmp
jle
cmp
push
jp
cmp
pop
rcr
sbb
je
add
xor
push
cmp
sahf
cmp
jge
stos
or
test
out
sbb
xor
je
cmp
je
push
push
enter
out
or
add
add
in
add
cmpsl
addl
push
insb
sbb
mov
inc
scas
push
mov
push
addl
sbb
in
mov
imull
inc
sub
inc
cmp
ljmp
lea
push
push
in
push
lock
sub
push
lock
mov
add
push
data16
rcrb
jb
inc
jge
popl
sub
enter
adc
lods
sbb
ss
repnz
or
mov
add
xor
inc
mov
inc
notb
mov
outsb
les
aam
or
dec
mov
cmp
sbb
test
mov
enter
pop
adc
pop
dec
add
and
sbb
loopne
mov
pop
xchg
fistpl
test
dec
iret
out
adc
ficomps
dec
xchg
add
lea
xchg
pop
xchg
pop
cmp
push
mov
mov
add
lret
dec
fwait
and
push
and
pop
dec
outsl
cmp
fistl
sub
stc
shlb
sbb
mov
push
dec
ds
cwtl
adc
or
lahf
jmp
xor
jae
adc
dec
ror
je
xor
pop
mov
add
dec
clc
mov
or
jge
das
add
das
mov
push
mov
sbb
xor
imull
ljmp
sbb
pop
add
jl
mov
outsb
push
xor
push
sbb
movsb
push
imul
and
add
adc
pop
mov
xor
test
add
dec
js
shrb
aam
push
scas
push
aas
test
mov
test
inc
or
aaa
pop
insl
add
jmp
xorl
push
mov
ret
js
mov
add
sbb
push
pop
xchg
mov
fisttps
sarb
lcall
xchg
or
adc
dec
in
xor
pop
push
bnd
rorb
xchg
push
cmpsb
inc
in
call
jo
inc
rorl
shr
cmpsl
mov
xlat
push
push
or
xchg
mov
test
mov
mov
iret
dec
sub
pop
jmp
mov
mov
sarl
mov
jmp
adc
inc
hlt
jl
data16
xchg
xchg
leave
jecxz
push
lret
jmp
mov
xchg
jl,pt
mov
xchg
push
xchg
gs
insb
incl
pop
push
invd
mov
daa
fimuls
lods
icebp
xchg
push
dec
pop
cmc
inc
adc
pushf
inc
scas
or
bound
xchg
push
clc
add
shl
push
mov
aad
add
dec
or
lea
or
cli
imul
dec
add
loopne
ss
cld
jg
test
ret
add
mov
dec
jbe
mov
mov
jle
xor
mov
adcb
adc
addb
aaa
push
jo
lock
pop
aam
mov
dec
push
aas
add
inc
xchg
scas
push
je
rorb
outsb
add
pcmpeqb
push
jle
add
xor
add
mov
and
es
cmp
test
pop
xor
or
and
cld
pop
or
and
ss
int
jmp
incl
xor
sub
adcb
hlt
in
xchg
aam
cmp
dec
imul
filds
mov
cmp
je
cmp
dec
dec
jmp
je
orb
jmp
cmp
mov
adc
cmp
test
stc
add
push
sbb
aas
sbb
ror
cmp
jne
xor
add
add
outsb
xorb
pop
jmp
inc
add
imul
negl
icebp
ss
push
push
push
or
sub
out
mov
mov
jmp
and
dec
xor
shll
sbb
xor
shl
add
push
adc
rcrb
adc
jns
push
jnp
rolb
or
call
mov
rorb
jl
xorb
sbb
push
cmpsb
cmpsb
insl
or
push
loopne
mov
mov
push
or
dec
or
or
adc
into
sub
or
inc
xor
test
mov
mov
cld
add
push
enter
sub
pushl
pusha
mov
sbb
add
dec
sub
cmc
test
insl
jge
jmp
adc
and
dec
loop
leave
adcb
and
fldcw
or
lock
push
cmp
scas
mov
adc
and
xchg
and
mov
js
sub
addl
cmpsb
je
push
adc
clc
aas
inc
addl
je
sbb
add
test
pop
aaa
inc
aam
adc
lock
imul
adc
bound
and
dec
mov
lret
or
xlat
push
lock
lret
ret
inc
call
push
or
xchg
call
and
jae
jne
les
std
push
loop
les
add
and
rorb
int3
ja
ja
inc
mov
push
mov
adc
orb
das
push
jg
fld
xor
jge
jns
mov
cmpsb
mov
jmp
or
or
ret
cwtl
lock
sti
push
push
cmp
push
ret
rcrb
dec
mov
dec
int
push
clc
adc
xor
repz
mov
int
pop
test
es
jne
push
fsubl
xor
xor
pushf
testb
rolb
or
push
cmp
or
cmpsb
loopne
add
add
cwtl
push
sbb
or
push
dec
lret
pop
xlat
in
inc
sbb
or
sbb
mov
dec
push
or
push
xchg
repz
gs
lods
lret
push
les
add
sbb
or
jmp
push
dec
orl
jmp
cmpsb
lock
cltd
nop
dec
lock
fadd
repnz
add
lcall
test
cmp
pop
inc
push
repnz
adc
xor
jno
cli
cmp
and
mov
push
jno
dec
aam
mov
cld
rorb
inc
into
mov
cwtl
loopne
add
or
add
add
cwtl
pop
fs
popa
shr
sub
dec
mov
and
jo
xchg
xchg
pop
fldt
adc
push
cmp
inc
sbb
insl
scas
adc
mov
cmp
rorb
jl
add
lcall
popa
andl
ficompl
mov
xor
negb
ficomps
clc
rolb
mov
mov
fists
dec
xchg
outsl
loope
jne
into
in
out
sbb
sbb
mov
test
mov
push
sbb
jmp
push
mov
stos
inc
mov
sbb
rcrb
adc
xor
pop
into
xor
add
xchg
sbb
or
xor
ret
leave
jno
inc
jno
dec
add
xchg
jle
sbb
add
call
ret
je
xchg
sbb
shll
pusha
add
or
gs
push
shlb
dec
test
in
inc
add
mov
fs
jo,pn
movsb
push
fldl
loope
fstpl
dec
int3
cld
mov
mov
push
cmp
adc
jne
iret
iret
repz
divb
or
jne
or
cmp
cli
jne
or
jne
pop
cld
dec
jno
icebp
fldz
fcompl
fnstsw
test
adc
add
inc
dec
jmp
push
jno
add
or
movsb
es
fildl
nop
fsubrs
ficompl
mov
jp
lret
cmpsb
fnsave
fistl
mov
fnstenv
add
nop
pop
jb
fistpll
loope
fsubrp
jmp
adc
mov
pop
and
or
or
jl
enter
jg
push
xor
push
push
push
adc
fimull
cmc
push
mov
add
fcoms
repnz
mov
mov
dec
test
inc
je
xchg
jg
rorl
shlb
mov
mov
call
mov
sbb
add
mov
pop
inc
ret
fldcw
add
and
adc
add
adc
mov
mov
adc
loop
fsubp
xor
nop
cmp
jae
push
addr16
push
adc
push
jbe
mov
rorl
jae
jb
fwait
pop
mov
cmp
add
add
fstpl
and
insl
clc
push
aam
aad
fwait
dec
inc
add
mov
pop
add
out
xorb
mov
sbb
pop
xchg
xor
fs
gs
shlb
cmp
nop
mov
xchg
mov
pop
or
or
push
add
jo
idivl
adc
icebp
cmp
xor
cmp
insb
push
or
push
sbb
movsb
mov
adc
loopne
add
xchg
sub
jmp
into
mov
sarb
out
dec
add
fdiv
cli
mov
jae
add
mov
inc
jg
pop
mov
xchg
jnp
inc
imul
in
cmp
jne
mov
mov
dec
jo
test
push
push
adc
xlat
xor
add
sahf
jmp
cmp
fnsave
repnz
mov
and
push
or
add
push
roll
imul
xor
jno
mov
pop
push
insb
ss
aas
test
hlt
pop
or
sbb
lret
fs
call
mov
jb
dec
push
xchg
dec
repz
jp
pop
orl
shlb
jecxz
jno
test
sub
inc
lret
and
add
cmp
jge
inc
jle
cmp
aas
enter
adc
repz
add
push
push
imul
leave
iret
dec
in
inc
lea
or
add
xchg
sbb
cs
fstps
push
sarl
sbb
xor
adc
adc
dec
or
rcrl
cmp
and
nop
add
dec
sbb
dec
and
sub
xchg
enter
adc
xor
and
pop
dec
dec
sarb
adc
pop
xchg
xor
push
inc
push
mov
sbb
and
inc
xchg
inc
popa
popf
mov
jge
mov
pop
and
or
inc
adc
inc
push
test
inc
sahf
nop
scas
inc
and
adc
and
icebp
sbb
mov
inc
push
rclb
mov
mov
dec
aas
aaa
pcmpeqw
mov
push
imul
mov
pop
pop
push
adc
push
lea
push
loope
mov
imul
xlat
mov
aaa
add
std
adc
fnstenv
scas
mov
ret
push
inc
sbb
pop
aas
cmp
add
cs
xchg
inc
popa
inc
mov
and
sub
lahf
pop
lea
aaa
adcb
loopne
aam
xchg
fdiv
ret
lahf
je
sbb
lahf
nop
sbb
xor
add
add
and
jmp
test
cltd
mov
pop
pop
inc
or
pop
or
notl
dec
adc
mov
push
lods
icebp
std
mov
ljmp
sub
mov
movsb
cmpsl
mov
push
inc
fs
lods
test
les
stos
adc
sub
sbb
stos
rcll
fsub
es
pop
mov
mov
add
imul
sbb
hlt
jg
incl
mov
imul
push
xchg
mov
adc
push
push
jge
rorb
pop
insl
push
mov
xchg
in
pop
or
pop
inc
mov
xlat
push
dec
push
pop
rcl
adc
adc
subb
out
or
hlt
add
add
add
or
add
add
or
add
or
sbb
add
and
mov
jge
jg
add
push
dec
dec
mov
adc
shrb
pop
fmull
ds
pusha
insl
aaa
jne
in
pop
call
sbb
aad
dec
fsubl
add
subb
push
sbb
push
push
rcrl
xchg
movd
mov
xlat
add
adc
or
sub
cwtl
cwtl
push
xor
mov
inc
stos
and
and
xor
push
mov
adc
loopne
push
add
add
dec
lahf
inc
loopne
aas
or
bnd
aam
mov
add
nop
ret
imul
adc
xor
and
jmp
sahf
add
sub
gs
pop
movsl
push
add
push
and
pusha
aad
inc
add
shl
mov
leave
cmp
fidivs
arpl
add
test
sarb
nop
test
push
in
test
jmp
or
inc
push
in
int3
xor
sub
sbb
dec
and
call
clc
or
pushl
dec
cmp
or
xchg
mov
movsl
pop
or
movsl
add
cmp
leave
push
mov
xor
fnop
xchg
rol
fcom
add
pop
ret
mov
cmp
mov
xor
cmp
jnp
stc
push
and
push
int3
inc
imul
pop
xchg
add
xor
mov
pop
bound
sub
add
cmpsb
les
jne
mov
enter
and
add
mov
in
xlat
add
leave
adc
into
fmuls
mov
xor
aad
mov
lods
pop
push
mov
jmp
call
ja
ret
pusha
xor
sbb
shr
jne
sbb
inc
pop
cwtl
jo
jbe
or
nop
adc
push
add
push
ret
movb
mov
inc
pop
aam
cld
inc
imul
add
push
fs
mov
jecxz
adc
jb
push
sbb
push
add
pop
fimull
or
sbb
or
sub
and
in
sbb
inc
dec
add
test
pop
shrl
subl
pop
daa
repz
mov
push
cmp
lret
or
test
xlat
and
enter
pop
and
pusha
push
es
push
ss
jl
and
aaa
push
mov
dec
pop
aam
sub
cmp
push
xor
mov
inc
cmp
mov
negb
popa
xchg
add
and
popa
mov
xor
mov
or
insl
fsub
and
lods
rcll
sub
idivl
inc
xor
inc
ds
ljmp
ss
add
dec
punpckldq
jg
mov
out
clc
cmc
push
ret
push
xchg
xor
add
jle
pop
pop
sbb
xchg
and
push
inc
pusha
push
push
insl
xchg
pop
nop
cltd
xchg
stc
inc
mov
ljmp
cmp
inc
subl
frstor
xor
add
rclb
dec
add
pop
in
add
add
pop
lock
pusha
jo
or
roll
movzbl
fimuls
dec
jo
mov
pushf
and
push
fadds
mov
gs
cmp
or
mov
in
cmp
aam
mov
in
imull
cwtl
mov
in
js
push
mov
in
int3
dec
sarb
aam
jo
and
pop
stc
repnz
loopne
insb
in
nop
call
sub
adc
lock
adcb
fdivr
lock
je
xchg
mov
or
add
decl
jb
lea
mov
fsubl
pop
xor
sbb
sub
es
mov
cmp
adc
shrl
xchg
hlt
xchg
push
sbb
xor
sbb
or
mov
dec
add
xchg
call
mov
rcll
adc
subb
jno
pop
jp
roll
sbb
fsubl
and
ss
cmpsl
sbb
sub
push
es
rclb
push
out
mov
sub
fdivl
cmp
cmpsl
inc
aad
loopne
loopne
dec
aam
adc
pop
push
and
xor
repnz
cs
or
sub
rolb
push
jo
adc
and
popf
loop
sysret
mov
scas
push
fisubs
mov
pop
data16
lods
sbb
adc
shlb
mov
sub
sub
mov
ljmp
lret
and
in
xchg
out
cmc
pop
test
push
mov
cmp
inc
mov
stos
addl
and
sahf
call
inc
cmpsb
mov
std
je
sahf
lea
xor
scas
out
pop
cmpsl
adc
or
add
or
cmpl
les
lock
push
es
mov
lods
dec
push
stc
cmp
xor
popf
popf
or
clc
into
mov
jmp
jmp
push
mov
mov
adc
sbb
icebp
lcall
mov
test
loopne
mov
clc
jae
adc
je
inc
xchg
movsl
stos
test
in
leave
enter
and
std
or
adc
add
test
or
insb
mov
inc
jmp
mov
adc
adc
testl
and
call
leave
push
cmp
xor
lret
fcomps
andb
jo
adc
pop
jo
xchg
add
push
sti
xor
mov
aam
or
add
xchg
jbe
jb
jg
xchg
push
test
stos
push
mov
cmpsb
or
push
iret
sub
jg
xor
inc
lret
mov
pushf
or
mov
dec
aad
push
dec
outsb
mov
sbb
lea
pop
jb
jp
xor
adc
aam
jo
and
sbbb
enter
xor
jmp
lock
lods
inc
mov
xorb
push
or
dec
sahf
rolb
add
pushf
jge
push
and
and
mov
sub
xchg
or
mov
lret
call
cltd
lock
dec
lock
xor
xchg
xchg
xchg
dec
fiadds
mov
mov
ss
pop
mov
cmp
dec
or
aad
ja
xor
lods
je
addb
fchs
xchg
add
mov
and
mov
pop
push
mov
loope
adc
iret
mov
xchg
cltd
fistpl
scas
push
mov
inc
and
pop
xlat
or
mov
sub
and
add
inc
and
push
leave
test
insl
imul
mov
ljmp
push
into
jp
mov
cld
subl
add
lods
sti
fiaddl
sub
repz
xchg
mov
jp
xchg
xor
stos
iret
jge
or
imul
out
add
or
sub
addb
pop
sarb
lods
out
lods
jns
addb
mov
lock
jle
push
test
push
adcb
xor
fists
lret
jns
jns
sbb
sbb
je
mov
or
adc
dec
popf
scas
pop
push
adc
or
add
mov
iret
ret
mov
push
sti
mov
popf
icebp
lock
pusha
or
cmp
or
jecxz
push
push
ret
pop
adc
pop
mov
inc
ret
xor
jmp
dec
cmp
aad
cmp
mov
ficomps
jle
sbbl
xchg
mov
inc
pop
adcb
dec
jb
xchg
aam
pop
dec
fcom
push
or
xchg
push
orb
cmp
add
push
push
mov
push
push
add
or
filds
push
push
push
repnz
and
or
xchg
pop
in
push
arpl
cmpl
xor
flds
dec
add
pop
adc
nop
lock
sbb
test
sub
pop
sub
mov
into
pop
mov
pop
sbb
fistps
add
cmpsb
add
mov
add
xchg
fstpt
pop
bound
xchg
inc
out
mov
push
fwait
mov
insl
sub
aaa
cmp
add
pop
pop
clc
je
les
dec
cmp
mov
xchg
pusha
mov
aaa
pop
and
fiaddl
clc
inc
aas
cmp
cmp
dec
mov
mov
and
xchg
push
fisttps
push
cmpsb
cmp
or
cmp
ljmp
mov
push
ret
adc
je
imul
push
xorl
clc
popf
mov
xor
lods
addb
aam
push
bt
pop
jmp
inc
pop
shll
push
pop
and
adc
pop
adc
sub
mov
fistps
cmp
xchg
lea
cmp
jbe
cmp
jbe
mov
sarb
sbb
mov
aas
enter
add
push
add
sbb
outsl
mov
or
iret
jle
pop
add
or
pop
arpl
mov
and
jmp
cld
lea
std
out
add
pop
lods
xchg
aam
push
sbb
orl
inc
stos
adc
push
stos
dec
cmp
or
add
inc
loopne
stc
rcl
jo
xor
xor
lahf
and
mov
sbb
sbb
cmp
cmpsb
push
scas
mov
ret
sbb
fadd
push
push
pop
pop
mov
xchg
inc
jne
add
pop
push
mov
lahf
and
bound
aaa
jge
shlb
fildl
jl
fsubs
xchg
mov
out
push
or
in
in
jmp
cmpsb
push
test
inc
out
mov
add
loopne
cld
mov
xor
add
sbb
shl
add
ds
mov
addr16
push
jns
pop
and
xchg
push
or
int3
loopne
dec
loopne
xchg
mov
xchg
adc
xor
sbb
call
jno
pop
aaa
add
push
push
lcall
sub
dec
lcall
jl
xchg
push
insb
or
fs
loope
std
lea
pop
cli
sarb
popa
addr16
imul
test
xchg
cltd
test
xchg
or
stos
in
or
sbb
leave
shlb
inc
or
jle
push
sbb
inc
fsubrl
or
push
add
nop
mov
and
sbb
mov
xor
mov
fdivs
adcl
adc
fmull
mov
insb
sub
out
adc
xor
dec
sbb
adc
and
mov
xor
fdivrs
shl
cmp
adc
sub
add
cmpsl
push
mov
dec
or
js
cmpsl
ja
shrl
dec
sub
sahf
sbb
mov
jge
cmp
sbb
or
push
jo
rolb
push
xchg
sbb
add
inc
mov
das
push
addb
call
inc
dec
hlt
push
push
sub
mov
mov
pop
inc
pusha
in
or
dec
mov
ja
jge
setge
adc
je
mov
sub
push
in
in
or
jo
out
fsubl
mov
add
dec
xor
daa
mov
shlb
in
xor
cwtl
push
xor
daa
mov
mov
test
push
out
push
iret
je
cmp
shrl
in
xchg
sub
rcrl
aam
cmp
jb
cmp
inc
cmp
lret
push
xor
out
cmp
pop
mov
cmc
sbb
or
pop
jno
cmpb
in
es
push
sub
mov
and
sub
add
scas
sti
movb
sub
xor
les
xchg
fdivs
outsl
sub
add
pop
push
jbe
inc
cmp
std
fidivrs
testb
mov
add
andl
or
int
leave
sbb
dec
inc
sarl
movzbl
pop
push
lods
inc
dec
jle
out
test
pop
ss
mov
and
cltd
lcall
dec
mov
movsb
arpl
outsl
mov
jmp
mov
out
fmull
je
out
int3
shl
push
inc
xchg
inc
lods
or
mov
test
dec
sub
dec
or
lods
in
push
mov
adc
in
mov
adc
daa
test
test
sub
aam
push
mov
pop
inc
repnz
add
in
xor
into
sub
xchg
sbb
dec
dec
test
and
jmp
cmp
push
incl
or
pop
dec
hlt
xchg
or
out
push
andb
and
adc
pop
lahf
jo
insl
sub
stos
push
mov
ljmp
xor
mov
and
mov
dec
mov
js
scas
stos
mov
mov
inc
adc
fimuls
fidivrl
sbb
cmp
xor
pushf
inc
sub
jne
inc
xor
xorb
dec
dec
loop
ljmp
sub
insb
push
notb
push
js
cmp
or
adc
jne
push
xchg
xor
cmp
pop
add
sbbl
push
or
adc
pop
pop
jecxz
and
push
mov
xor
vmread
in
add
sub
stos
sarb
add
and
nop
dec
push
xchg
pop
add
shrl
flds
sub
and
add
pop
imul
sbbb
movsb
jb
jnp
or
pushf
movsb
jne
pop
es
jmp
jnp
cmp
mov
arpl
add
xsha1
cmpsb
dec
or
inc
cmp
inc
es
ret
pop
jb
mov
sub
pop
xchg
cwtl
add
jle
push
mov
pop
pushf
insb
add
mov
sub
lret
mov
push
inc
adc
push
pop
dec
test
fistps
mov
xchg
mov
dec
mov
aaa
cmp
jne
cmpb
lcall
lahf
ret
mov
inc
mov
in
jg
jge
clc
sub
cmp
pop
jl
pop
je
add
test
sahf
mov
aam
fldl
add
dec
iret
ss
push
daa
in
xor
mov
add
lods
loopne
adc
mov
dec
xor
mov
xor
sub
cmp
incb
lret
jl
leave
jmp
cmp
jl
or
sbb
dec
jae
adc
jle
xor
jle
cmp
je
mov
sarb
xchg
push
add
inc
jmp
movb
pop
add
aam
mov
cltd
idiv
add
xor
shlb
clc
loopne
push
push
cmp
aaa
adc
push
jne
cmp
inc
add
je
or
cmp
or
pop
cld
sub
sub
cmp
loopne
push
enter
ljmp
cltd
mov
add
pop
jmp
mov
lods
pop
gs
daa
repnz
incl
ss
jno
lahf
fdivs
mov
inc
mov
lahf
ficoml
int
pop
fwait
pop
and
inc
add
mov
add
mov
or
mov
stos
inc
imul
rolb
push
xorl
inc
cmp
sbbl
sub
xchg
div
jno
movsb
or
sub
push
test
lea
push
in
lods
nop
repnz
add
ja
bound
fcoml
mov
or
dec
adc
push
cltd
lea
test
pmulhuw
jns
inc
call
iret
dec
les
in
enter
popf
push
movsb
dec
pop
or
dec
gs
push
inc
fcoms
es
les
dec
pop
inc
cmpsb
roll
insl
sbb
xorb
jo
and
int3
dec
shll
int
and
sbb
xchg
test
mov
pushf
push
xchg
rolb
add
subl
out
adc
mov
lods
and
xor
cmp
pop
sbb
sbb
mov
aad
mov
pop
inc
movsb
arpl
inc
jb
rcll
out
sbbb
cmp
in
lods
lock
add
jmp
add
cmp
jl
push
xorb
rcll
add
dec
lret
add
test
or
or
or
push
mov
pop
add
rcrl
inc
in
mov
inc
sbb
and
lods
cmpsl
add
in
push
or
xor
dec
dec
lods
loope
push
xchg
cld
fs
push
scas
cmpsl
lock
push
pop
movsl
push
jns
or
push
add
add
add
push
xor
cmp
mov
or
or
xchg
adc
and
add
adc
mov
pop
sbb
mov
ret
lds
fsubp
xor
lea
sbb
xor
inc
add
push
push
adcb
ljmp
lock
jne
loopne
or
mov
sbb
in
test
fdivr
jns
pop
pop
leave
punpckldq
rcl
add
inc
cmp
out
mov
adc
jne
add
rclb
rorb
add
mov
add
add
xchg
and
push
ret
lcall
or
in
sbb
fcompl
in
sub
in
sbb
in
in
inc
lods
inc
cmp
jg
mov
arpl
dec
xchg
subl
mov
and
pop
and
outsb
cmp
and
test
in
pop
andl
mov
cmp
je
es
mov
clc
in
cmp
jne
pop
repnz
push
cmpl
data16
clc
cwtl
adc
or
add
fs
fistps
adc
cmp
dec
pusha
add
xlat
adc
sub
pop
or
mov
add
inc
jle
lea
fadd
inc
add
xor
sbb
mov
push
mov
xor
je
jnp
movsb
ret
add
popf
lret
xor
mov
xchg
mov
cmp
loopne
icebp
push
adc
outsl
jnp
into
pushf
cmp
xor
out
shlb
add
fadds
pop
arpl
in
push
sbb
imul
and
das
pop
hlt
cmp
imul
cltd
push
mov
or
or
shl
dec
or
out
adc
push
out
pop
inc
mov
rorb
mov
pop
ret
iret
xor
mov
fdiv
icebp
mov
lock
sub
sbb
xchg
jb
pop
mov
dec
xor
fsubs
xchg
adc
shll
xchg
jecxz
cmp
xchg
and
fcmovnbe
fldl
and
xor
shlb
js
sete
sahf
ret
insb
add
in
jne
inc
test
or
hlt
adc
ss
cwtl
mov
cmpb
pop
pop
pop
inc
cs
cmpsb
loope
push
mov
add
jb
push
aas
mov
loop
aaa
call
mov
pop
int3
int3
mov
cmp
push
dec
xchg
lock
or
xchg
pop
cmp
dec
pusha
jb
add
or
mov
or
mov
pusha
mov
or
push
jl
cmp
cmp
sbb
push
adc
mov
dec
aad
repz
push
popf
add
rorl
add
dec
fs
std
dec
in
adc
pusha
fcoml
push
sbb
push
sbb
dec
adcl
call
test
in
push
pop
pop
imul
test
stos
sub
pop
pop
dec
xor
or
bound
inc
and
hlt
hlt
cmp
mov
sbb
out
lret
jmp
push
dec
scas
adc
imul
xchg
cmp
dec
adc
pop
sub
sti
push
and
add
dec
mov
xchg
jl
shll
cltd
xchg
xchg
outsl
sbb
mov
int
pop
xchg
das
jecxz
andb
mov
test
sub
or
xor
rorl
loop
push
push
cli
adc
cmp
mov
sbb
lods
xor
sub
pop
jle
xor
add
or
test
cmp
push
add
inc
fldl
iret
cmp
dec
mov
cmpsl
mov
push
addb
mov
dec
adcb
xor
lock
adc
pushl
lock
outsl
jae
push
mov
adc
jo
inc
inc
fdivs
sub
add
andl
xor
sbb
push
out
xchg
int
lret
xchg
add
sub
add
mov
sub
cmpsl
lcall
mov
push
pop
jmp
test
push
lea
lret
xchg
adc
cmp
ja
cli
add
mov
push
jl
jmp
and
push
ret
addb
add
or
add
or
push
or
faddl
mov
dec
lds
sbb
data16
inc
adc
adc
rcrl
add
jno
mov
incb
nop
sbbb
and
pop
leave
pop
sub
cmp
sbbb
rorb
mov
mov
jge
push
mov
jp
adc
fcoms
aas
pop
int3
add
faddl
out
mov
es
andl
sub
loopne
push
xchg
out
push
sbb
jl
cli
or
cmp
mov
clc
adc
dec
in
cmp
nop
xchg
xchg
adc
push
shl
sub
das
rclb
add
cmp
and
fimull
ret
jne
mov
cld
xor
dec
push
push
sub
cmp
fsubrl
cltd
or
fnstsw
dec
xchg
aam
add
mov
ljmp
fs
and
mov
js
lcall
push
add
arpl
pop
cmp
xor
nop
shrb
adcb
aas
test
sbb
stc
sub
add
cmp
cmp
sti
xchg
imul
int3
sbb
jg
add
rcll
jbe
push
jno
or
mov
shl
test
in
jno
jne
pop
je
shrb
xchg
mov
int3
movsl
subl
xchg
push
dec
adc
jl
push
xor
fwait
inc
push
test
push
outsl
jmp
xor
dec
test
mov
pop
sti
and
inc
push
cmp
adc
cmc
jle
movsl
jmp
inc
jae
es
bound
shlb
inc
std
add
rclb
push
aad
shll
jb
jb
ret
sbb
sbb
jns
cld
add
inc
add
push
sbb
cmpsl
sub
pop
fs
repnz
dec
cmp
imul
adc
or
pusha
dec
pop
rclb
daa
xchg
test
pop
push
mov
je
insl
in
in
xchg
inc
jb
movsb
push
jle
loope
scas
xor
iret
popa
hlt
call
fstps
inc
daa
icebp
mov
adcb
mov
jp
das
call
cmp
push
sbb
or
and
add
and
add
mov
bound
int
dec
cmp
mov
add
lods
pop
mov
jge
sbb
xor
cmp
outsl
adc
add
fucomi
outsl
add
and
push
aad
popa
xchg
xor
inc
sbb
in
xchg
and
outsb
add
adcb
sbbl
mov
pop
je
dec
int
or
fsubs
cli
jp
inc
adc
dec
mov
mov
fildl
cmp
dec
mov
aam
inc
inc
mov
lcall
jns
sbb
or
pop
xchg
shlb
xor
push
or
addl
or
sub
adc
sbb
mov
iret
scas
inc
xchg
rorb
sbb
shll
pop
sub
sbb
pushf
mov
adc
mov
in
sbb
movsb
mov
mov
rorl
xchg
rcll
aam
dec
or
push
jb
adc
adc
shr
pop
popa
shr
test
pop
loope
enter
push
xlat
push
add
push
mov
out
push
dec
add
push
jle
imul
dec
lcall
mov
js
and
clc
push
xlat
jmp
iret
dec
add
push
movsb
inc
xlat
add
inc
imul
pop
lods
lds
dec
pop
mov
pop
hlt
ja
adc
mov
xor
sbb
nop
movsb
push
in
mov
and
inc
pop
popa
test
or
lea
in
out
mov
or
imull
imul
adc
adc
loopne
imul
inc
stos
sub
test
jb
mov
out
push
loopne
hlt
jns
push
imul
fwait
mov
in
push
jnp
hlt
jns
test
popa
adc
adc
test
adc
fcoml
push
inc
push
sbb
xchg
xchg
push
out
pop
jo
sbb
push
or
cmp
xchg
push
jge
in
jmp
cmp
add
call
xor
ret
cs
push
pop
ja
cltd
pop
ror
sub
loopne
aad
movsb
xor
cltd
or
adc
adc
or
jb
and
xor
pop
aad
add
and
pop
pop
je
push
mov
sbb
xor
lods
jb
in
or
cs
adc
cmp
and
cmp
add
mov
sub
mov
inc
cmp
mov
pop
mov
inc
adc
xor
adc
adc
xchg
or
jo
mov
icebp
test
inc
add
xchg
or
xchg
xchg
sub
add
push
xchg
pop
add
add
mov
aaa
addl
and
add
add
sub
xchg
pop
push
inc
mov
sbb
je
mov
push
insl
es
arpl
xchg
adc
dec
dec
or
xchg
pop
in
push
inc
rorl
scas
lret
mov
mov
push
lea
push
rorl
push
mov
or
xchg
xchg
and
cmp
add
addl
cmp
js
push
or
mov
and
and
adc
sub
or
adc
xor
cmp
test
add
or
dec
push
cmpsb
add
adc
push
rcr
mov
cmp
sbb
nop
sbb
adc
adc
daa
xchg
sbb
xor
cmpsb
gs
cwtl
add
gs
sarl
mov
mov
lds
rcrl
adc
in
ret
gs
cmp
shrl
push
sub
mov
push
insl
jle
jns
add
cmp
lcall
call
inc
je
insb
dec
add
in
incl
nop
adc
push
inc
jl
pop
xchg
nop
push
test
and
pop
and
lea
push
push
add
xor
push
jmp
cmp
jae
fnstsw
insl
in
inc
mov
mov
stc
icebp
adc
push
cli
ja
nop
test
sti
icebp
pop
jge
pushf
xchg
sbb
adc
push
push
push
push
or
push
xor
imul
push
das
js
or
jne
shlb
out
loope
gs
and
addl
subl
add
test
push
rcl
cs
push
push
inc
insl
arpl
xchg
in
scas
xchg
push
pop
or
in
dec
xchg
in
mov
xor
aam
xchg
adc
enter
jl
mov
popf
shll
push
scas
dec
scas
adc
push
fisubs
add
mov
push
push
and
and
pop
add
aaa
adcb
and
inc
adcb
dec
push
push
mov
xorb
or
mov
mov
and
add
jae
adc
dec
inc
jmp
add
add
in
scas
sub
std
movl
pop
xor
dec
and
cmp
es
dec
and
push
and
push
push
pop
add
add
push
push
fs
add
movsb
jo
sbb
inc
xor
mov
xchg
jb
inc
das
add
lret
sub
push
sub
push
in
ds
dec
add
adc
mov
add
test
add
jns
jle
pop
incl
push
ret
jl
js
push
adcb
sti
or
lahf
xor
je
add
jl
cmp
add
js
and
sahf
xor
or
in
jno
push
dec
cmp
inc
or
and
push
xchg
jmp
imul
loope
mov
test
jno
or
cmp
or
xchg
jp
mov
aaa
jne
mov
add
cmp
lock
outsl
pop
add
mov
push
and
cmpsb
es
xchg
push
aam
dec
or
add
ljmp
or
fidivrl
scas
mov
movsb
cmp
icebp
jmp
mov
jae
mov
js
and
adc
in
sbb
or
sub
in
es
add
pop
in
pusha
sub
pop
push
nop
bound
dec
push
daa
test
pop
inc
dec
imul
or
pop
popa
add
in
daa
lock
in
or
add
nop
push
mov
test
test
push
mov
inc
inc
adc
shlb
dec
mov
pop
and
push
ror
push
mov
sarb
push
and
add
dec
dec
mov
stos
jne
jo
push
popa
ror
loop
xchg
fwait
adc
ss
jl
adc
add
sbb
stos
adc
push
push
in
ds
repnz
xor
lea
push
orl
mov
mov
adcl
rorl
fs
test
loope
add
push
mov
roll
inc
sbb
dec
test
imul
sbb
lock
add
mov
or
dec
adc
scas
addr16
nop
mov
call
add
mov
xchg
mov
mov
adc
call
jge
push
mov
dec
add
jae
sbb
mov
int
cmp
push
mov
lods
stos
mov
lds
pop
pop
sar
das
sub
test
popf
call
das
lock
call
movb
scas
cmp
mov
cli
mov
inc
or
fdivs
inc
incl
pop
mov
or
and
jae
test
icebp
or
popa
inc
push
mov
mov
mov
shr
sub
and
jecxz
cmp
push
lcall
sbb
sub
enter
fwait
xchg
add
xchg
add
cmp
ret
jno
in
mov
sbb
add
cmp
shll
lret
adc
xor
cmpsb
aaa
or
sbb
popa
hlt
push
inc
hlt
lock
inc
mov
ds
xor
push
xchg
jge
adcl
mov
jbe
jg
and
cltd
outsb
fwait
cmp
push
fwait
xchg
sub
fadds
dec
test
aad
pop
ret
imul
dec
orl
xor
fdivrl
pushf
fcoms
push
push
mov
ss
jg
pop
hlt
aas
adc
mov
push
mov
push
lea
lea
outsb
mov
push
ret
inc
lock
dec
lock
dec
jns
inc
cmp
jge
sub
test
pop
adc
push
sbb
adc
out
push
mov
xor
add
fidivrs
jle
ret
add
add
loopne
enter
aas
test
and
fwait
rclb
rcll
je
int
push
add
jp
add
cmpb
stos
or
insb
sbb
xchg
sub
mov
fcompl
roll
fs
add
loope
push
dec
push
jae
inc
test
ret
loopne
pop
dec
dec
adc
sbb
inc
ret
repz
fcmovu
rcl
rclb
inc
pushf
push
sarl
hlt
inc
bound
cmp
cmc
stos
pop
sub
ss
sbb
js
mov
and
dec
sbbb
out
pop
push
jg
js
add
nop
cmp
test
pop
add
push
push
pusha
mov
lock
pop
jle
pop
inc
je
xor
popa
add
into
addr16
push
scas
aaa
push
push
sbb
add
clc
fwait
and
sbb
movzwl
jecxz
cmpb
pushf
push
outsl
sbb
aas
call
popa
push
add
stc
and
sub
cmpsb
jg
push
aad
ret
jne
adc
mov
cmp
ss
popa
push
hlt
adc
ja
pop
cmp
lea
add
xchg
mov
lods
push
push
xor
pop
test
xchg
push
push
adcl
and
test
mov
xchg
push
dec
push
out
add
dec
jp
xor
sub
imul
ret
addb
sbb
mov
push
and
nop
inc
sahf
adc
mov
inc
dec
rcrb
prefetch
add
push
and
sub
inc
adc
cmpl
jne
push
sub
or
cmpsb
pop
or
ds
inc
jo
imul
stos
or
int3
inc
or
sub
mov
leave
iret
sub
sub
dec
int3
mov
push
add
into
push
int3
popf
mov
lods
fcmove
and
repz
pop
shlb
mov
mov
mov
lret
mov
and
addr16
addr16
add
add
pop
mul
cmp
add
loopne
js
adc
lea
xor
je
in
rcll
pop
pop
adc
fldcw
lods
adc
stc
stos
push
pop
cmpsb
push
mov
shl
mov
dec
jno
or
loope
dec
les
inc
pop
adc
je
or
pop
and
sub
mov
loopne
sbb
pop
adcl
push
rolb
cltd
jecxz
dec
push
add
pushf
push
adc
jb
daa
adc
enter
mov
jne
dec
push
movsb
mov
adc
enter
and
push
adc
push
ret
aas
lock
xchg
push
jge
pop
push
in
inc
xchg
pushf
jb
test
adc
add
add
lret
gs
int3
test
inc
cmpsb
test
sti
adc
shlb
pop
mov
leave
pop
unpcklps
push
popa
xchg
push
aam
push
adc
cmp
dec
add
rol
adc
mull
ret
dec
push
jmp
aas
add
and
stos
xchg
push
flds
jmp
inc
in
sbb
or
jo
int
bound
cmp
cmc
icebp
insl
or
add
stos
jg
and
add
xor
push
mov
fcomp
test
nop
dec
add
cmpsl
push
sbbb
add
dec
and
add
add
fwait
ljmp
pop
mov
mov
cmp
je
inc
cmp
jl
or
out
negl
add
mov
pop
aas
pop
scas
loope
adcl
data16
xchg
adc
cs
popf
dec
out
add
jne
sbb
enter
xor
jecxz
shll
jp
jg
xor
stos
cmp
divb
pop
rorb
lcall
loopne
sub
cltd
push
pop
nop
jo
lods
bound
and
sub
cmp
cwtl
mov
push
adc
and
dec
movl
out
sahf
subb
clc
add
mov
pop
cmp
ja
enterw
mov
adc
jne
cmpl
sub
mov
push
inc
hlt
xor
jmp
addb
mov
xchg
pop
sbb
mov
stos
dec
adc
xchg
lahf
imul
pop
cmp
jne
lcall
sub
sub
test
daa
sbb
pop
lock
fisttpll
mov
and
bound
test
leave
aam
sbb
inc
mov
lahf
sbb
cltd
bound
dec
xor
cmp
or
movsb
cmp
xchg
adc
push
push
or
fstps
xor
cmp
sbb
add
jmp
ss
mov
into
jg
call
push
cmp
loope
imul
mov
sti
mov
int3
sbb
add
and
aam
cmp
rcll
addb
dec
fwait
cmpsl
nop
daa
jb
inc
and
and
push
mov
mov
lcall
fdivl
fnstcw
push
add
fdivrs
jbe
sti
xor
jle
jl
pop
add
pop
daa
or
sbb
shlb
mov
push
push
pushl
mov
add
sub
inc
lock
add
add
inc
jecxz
scas
fadd
sbb
add
pop
mov
mov
add
or
add
xor
push
xor
add
inc
and
fldl
stc
andl
shr
add
xorb
movsb
and
sbb
pop
push
call
sbb
push
push
aam
mov
into
mov
movsb
int
push
fcompl
enter
sbb
int3
mov
add
outsb
add
clc
insl
cmp
inc
scas
inc
jp
lods
add
dec
and
imul
pushf
mov
mov
add
testb
or
imul
add
int3
inc
or
les
rolb
addr16
lock
adc
fcoms
inc
sbb
or
adc
gs
sbb
mov
sub
xlat
and
pop
shll
ret
call
sub
adc
and
arpl
or
sbbl
into
ficoms
in
cmc
or
jne
aaa
scas
das
in
pop
mov
sahf
out
rclb
inc
sbb
sub
lds
daa
jmp
xor
mov
lock
jecxz
and
pop
andl
push
bound
sbb
and
jmp
test
cmpsb
dec
out
cld
push
or
arpl
cmp
orl
push
jle
xchg
popa
push
xchg
test
or
jle
popf
jmp
jae
adc
push
mov
cmp
jmp
out
add
add
mov
jmp
mov
ficomps
mov
or
rorb
mov
push
je
adc
add
lret
xchg
xor
es
add
sbb
xor
mov
arpl
and
fwait
mov
pop
shl
mov
add
xor
push
jns
mov
dec
cmp
add
pmulhuw
add
je
test
add
pop
fdivrs
faddl
fcoml
in
add
adc
push
pop
or
mov
aam
dec
push
jmp
mov
xor
loope
shl
fmull
xor
shr
inc
cmp
sub
inc
shlb
xchg
andl
or
xchg
shrb
push
push
and
push
add
int
lock
add
test
mov
cmpb
mov
push
mov
push
or
push
shl
push
mov
push
or
mov
push
or
lods
orb
sub
cmpsb
cld
lret
mov
shr
or
jne
dec
mov
mov
inc
mov
and
mov
movb
jecxz
dec
das
cmpb
add
dec
cmp
sub
mov
add
lret
fisubrs
pop
pop
loope
clc
mov
cld
sti
test
movsl
movsw
push
adc
xor
cld
cwtl
push
movsb
pop
xor
cmpsl
and
push
push
pop
jp
add
mov
jae
pop
mov
or
xchg
cmpb
mov
int3
mov
fbld
adc
and
push
cld
ss
and
scas
lret
sbb
push
and
int
das
test
add
rclb
push
add
xchg
test
xor
mov
mov
xchg
mov
scas
imul
daa
pop
sbb
inc
add
mov
lock
ds
mov
mov
test
aaa
lret
js,pt
outsl
or
sub
push
inc
test
adc
pop
cwtl
xchg
xchg
icebp
shr
push
push
pop
imulb
and
add
je
test
inc
push
loopne
pop
test
mov
cmp
lock
stos
xchg
mov
inc
fadds
mov
jl
cmp
jmp
add
mov
jbe
cmpl
jnp
ss
pop
imul
push
mov
add
pop
push
dec
mov
into
or
mov
sarl
push
shrb
shrl
inc
add
push
mov
mov
mov
cmp
div
jge
fidivrl
sub
or
cmp
repnz
fcoml
daa
in
add
movsb
hlt
cmpsl
loopne
add
push
mov
int
fadd
scas
pop
cmp
orl
or
add
in
movb
pop
push
popf
hlt
or
or
cmpb
les
sbb
inc
clc
shl
cmp
movsb
clc
mov
or
xchg
test
xlat
mov
push
xor
sbb
add
clc
arpl
out
or
int3
call
outsl
mov
loop
lret
jl
jp
mov
xor
sbb
std
sub
cmpl
inc
jle
add
push
fdivrp
mov
hlt
xor
or
dec
dec
mov
xor
pop
sub
daa
cmp
push
stc
dec
fsubs
push
and
in
mov
inc
sub
add
cmp
mov
xor
xchg
mov
es
push
jnp
add
xchg
jo
add
dec
fisttpl
pusha
fs
add
leave
leave
leave
leave
add
push
pop
out
leave
leave
or
or
jnp
or
jbe
out
out
jmp
or
por
out
out
jmp
adc
pop
adc
push
adc
dec
out
out
adc
dec
adc
aas
pop
jmp
out
out
sbb
xor
jmp
sbb
es
out
sbb
and
pop
pop
jmp
xlat
out
out
jmp
and
or
jmp
and
shr
cmc
bound
flds
daa
push
aaa
inc
pop
or
mov
mov
repz
ret
mov
rcrl
cmp
ljmp
cmp
repz
enter
repz
repz
out
sahf
out
jo
or
adc
sbb
and
xor
out
cmp
jns
out
push
pop
pusha
gs
in
mov
add
and
or
or
push
movups
call
adc
adc
push
pop
sbb
sbb
sbb
push
pop
and
and
aas
enter
cwtl
inc
bound
xorb
mov
pop
fwait
out
add
call
lods
mov
push
movsl
xchg
xor
mov
jmp
push
inc
mov
push
or
inc
mov
add
lahf
imul
jb
pop
or
loop
ds
rorl
imul
push
test
pop
push
jmp
test
pop
enter
es
jns
xor
orl
jmp
in
fs
and
lods
sub
sbb
inc
loopne
inc
enter
faddl
faddl
adc
xor
fadds
fsubr
and
cwtl
inc
add
push
sub
jmp
xor
dec
dec
sarb
rorb
adc
in
in
sub
xlat
and
mov
pop
lock
cwtl
mov
stos
or
xor
test
adc
mov
insl
pop
lret
fiadds
loopne
push
inc
rorb
jo
add
add
insl
aam
and
push
mov
test
jae
xor
ficomps
sbb
push
rclb
int3
add
rorb
add
push
mov
sub
insl
and
cwtl
sub
call
add
in
push
cmpsl
sbb
and
mov
add
pop
or
push
pusha
xchg
ss
jb
mov
fdivl
or
aad
jmp
fmull
add
cmp
inc
inc
or
jnp
dec
rolb
pusha
fcmovbe
rorb
mov
fcomps
sbb
mov
sub
jno
lahf
les
les
push
roll
lret
jb
shl
cmp
rol
stos
sbb
and
xchg
inc
scas
sub
mov
pop
pop
call
icebp
xchg
pop
sti
push
in
mov
hlt
in
and
loopne
and
aam
adc
mov
mov
hlt
mov
and
in
push
push
xchg
pusha
cmpsl
dec
clc
push
adc
sti
xchg
add
add
jmp
push
cmp
loope
popa
add
insb
dec
les
cmp
jns
adc
aaa
jmpw
sbb
mov
cmp
loop
rcrl
mov
pop
and
into
lock
pop
jne
hlt
jne
lahf
hlt
mov
enter
in
ds
in
in
enter
mov
in
cltd
adc
inc
sub
test
jo
jae
aam
sbb
ja
mov
push
loopne
dec
jp
add
add
js
sub
sbb
lods
mov
push
sbb
in
and
and
push
fstpt
sub
sbb
and
adc
sub
or
or
scas
loopne
mov
adc
lods
adc
leave
xchg
rcr
shrb
inc
mov
test
add
clc
mov
pop
pushf
or
cld
sahf
fbstp
jmp
dec
and
fiadds
shrb
jge
orb
cmp
lret
dec
sahf
mov
aas
add
movsl
fsub
dec
adcl
sbb
sub
mov
loopne
cmp
in
lea
pop
mov
pop
testl
or
cli
xor
loope
jmp
pmulhw
fisttps
testl
add
push
in
xorl
xchg
movsl
fcoml
xor
adc
or
sbb
lea
push
aaa
lahf
xor
mov
xor
mov
dec
and
cltd
sbb
dec
inc
ret
cli
jmp
iret
and
and
inc
mov
xor
add
dec
iret
mov
xchg
lret
hlt
hlt
pop
mov
and
xorl
cld
lock
xor
add
pop
push
ret
gs
cmpsb
add
xchg
mov
adc
add
out
inc
sub
add
sbb
out
jle
jp
jp
rcrl
and
pop
loopne
adc
fiadds
jecxz
aam
cld
xchg
xor
lods
xor
xor
cs
adc
add
inc
test
cmp
dec
call
sub
mov
sub
fistpl
insl
pusha
mov
loope
push
push
in
mov
data16
ds
mov
sbb
sub
inc
in
push
mov
add
cmp
fcmovnu
push
xchg
sub
mov
inc
add
add
cmp
jb
sarb
cmpsl
add
fsubs
adc
and
and
or
and
aam
mov
enter
rolb
mov
rcl
mov
mov
inc
iret
daa
push
sub
pop
lock
iret
and
jb
cmp
test
push
xor
push
add
jg
or
xchg
xor
insb
adc
dec
fisttps
xchg
push
test
add
outsb
pop
ret
orl
or
cmp
ss
lea
arpl
imul
sbb
orb
je
jmp
dec
or
sbb
push
insl
or
outsl
xor
lea
add
push
xchg
lcall
loope
or
int3
cmp
loop
or
and
lcall
lret
arpl
adc
mov
xchg
xorb
outsl
dec
sbb
clc
pusha
push
das
ret
pop
leave
add
cmp
adc
sub
loope
out
mov
or
push
sbb
in
jge
add
push
test
adc
js
bound
sub
or
jle
test
lock
fisttpll
mov
ret
nop
mov
and
leave
lret
mov
hlt
jne
call
jb
andb
sub
pop
mov
leave
pushf
cwtl
jo
xchg
insb
and
pushw
mov
leave
lret
pusha
pop
mov
pop
in
push
push
jb
outsb
inc
push
mov
add
push
movsb
dec
inc
and
xor
xchg
cmp
xor
adc
and
or
orb
cwtl
lds
jae
and
push
test
pop
enter
sahf
rolb
sbb
rorl
outsb
mov
or
mov
inc
push
sbb
add
mov
push
adc
xor
xchg
cmpsl
in
sub
je
or
or
jge
test
lea
sbb
cli
add
and
pop
aam
or
dec
xor
xchg
insl
aas
imul
je
sbb
adc
jne
jmp
jbe
ljmp
and
push
mov
inc
into
lock
or
cli
mov
mov
mov
and
fisubrl
int
or
dec
adc
sbb
inc
addb
ret
insl
ret
test
fdivs
je
adc
insl
rol
push
sbb
scas
out
jbe
dec
sbb
leave
sbb
call
imul
cmp
cmp
in
sub
or
je
or
outsb
or
pop
stos
adc
and
iret
inc
enter
inc
mov
aaa
and
gs
dec
mov
push
mov
xor
ja
and
xor
inc
cmp
xchg
cltd
inc
or
scas
xchg
sbbb
ljmp
sti
fstl
sbb
add
jne
adc
jns
jb
je
pop
jne
pop
adc
jo
insb
inc
mov
clc
push
push
lret
xor
fidivrl
je
shll
jns
loopne
lds
xor
inc
hlt
test
sahf
outsl
lcall
sbb
add
xor
pop
jns
mov
stc
js
loop
or
push
popa
xor
pop
bound
cmpsl
jno
jbe
jo
xorl
mov
mov
ret
cmp
lock
imul
cmp
repz
or
ret
push
cmp
lods
inc
mov
adc
sub
lds
enter
stos
cmc
insl
push
in
loop
loopne
out
inc
jmp
cmp
xor
and
adc
mov
jns
repz
add
inc
mov
dec
push
jo
mov
aad
or
mov
outsl
jno
test
adc
jl
pop
mov
or
lcall
ljmp
pop
jno
or
or
push
int
aam
movsl
mov
pop
sub
ss
sub
je
pop
cltd
push
fidivs
insl
cmpsb
repz
orl
ror
add
int
ror
jbe
inc
cmpsb
or
int3
inc
jo
xchg
int3
jne
orl
mov
loopne
pop
or
out
shr
movsl
lock
ja
dec
or
repz
add
add
leave
add
dec
add
push
mov
jmp
fnstcw
pop
clc
xchg
xchg
into
lock
jmp
adc
xchg
stos
cmp
jne
sub
out
outsl
dec
mov
in
mov
xchg
mov
fadds
push
fucomp
mov
cmpsb
lods
lods
and
gs
dec
or
push
stc
sub
xchg
negb
pop
mov
and
or
insb
lock
inc
mov
add
push
sbb
test
xchg
dec
test
adc
xor
jge
and
rcrl
mov
loope
out
inc
push
push
and
add
and
in
mull
and
sbb
in
imul
fsubrl
fs
lock
movsl
sub
call
push
mov
clc
and
std
push
adc
pop
sbb
mov
stos
xor
jnp
call
movsb
in
and
inc
xor
fldl
stos
lds
mov
and
inc
xor
xor
mov
jae
mov
jmp
adcb
mov
jmp
inc
sti
faddl
adc
jbe
jb
fsub
mov
jle
icebp
lods
gs
and
imul
in
push
or
mov
add
push
inc
xor
mov
and
loop
divb
decb
ja
insw
cmp
enter
dec
mov
adc
inc
or
insb
jge
bound
cwtl
jne
out
xor
xchg
mov
in
das
repz
bswap
nop
loopne
popl
aaa
adc
fadd
insl
popa
loopne
dec
cmpsb
add
push
mov
adc
or
jmp
push
mov
flds
and
in
or
xor
and
out
es
mov
int3
mov
and
dec
xchg
or
add
and
or
insb
sbb
loop
dec
call
and
add
sub
sub
in
push
sahf
or
jl
stos
xchg
fcmovnb
xchg
ja
or
add
mov
jle
jne
daa
roll
push
xchg
mov
mov
dec
and
shl
adc
ret
loopne
mov
sbb
add
mov
push
les
jne
pop
dec
or
jnp
and
inc
enter
xchg
lock
movsb
fcoms
sub
push
rorl
add
mov
mov
xor
pop
inc
ss
pop
adc
inc
cmpl
in
fldcw
or
push
push
pop
in
cmp
add
sub
push
aaa
jge
test
xchg
loopne
xchg
sbb
push
jb
call
rcrb
pop
xchg
cmp
mov
fists
cmp
daa
mov
mov
dec
cmp
roll
mov
add
or
adc
dec
or
gs
addr16
add
jmp
pop
sbb
sbb
popf
jb
add
leave
pop
test
add
sarb
mov
push
flds
fbstp
test
inc
xchg
int3
sbb
loop
xadd
cli
ja
adc
je
rcrl
or
jg
je
and
adc
add
and
mov
rcl
sbb
je
call
jecxz
or
stos
or
enter
adc
addr16
ja
push
push
mov
sub
mov
add
and
cmpsl
ja
push
nop
mov
js
or
sub
mov
repz
xchg
mov
add
clc
or
mov
pop
fimull
or
dec
push
orl
adc
push
enter
nop
lret
add
inc
hlt
jecxz
pusha
jns
cltd
loopne
sbb
imul
xchg
mov
or
in
pop
jns
mov
push
mov
ja
lahf
xchg
pop
fwait
push
or
nop
ret
or
push
sub
inc
push
dec
ret
hlt
js
sbbb
cmpl
sub
dec
xchg
je
xor
imul
mov
sbb
adc
stos
adc
add
jl
insb
sub
adc
inc
fsubs
rcl
pop
testl
add
pop
out
xorb
sub
mov
push
ret
mov
mov
add
xchg
dec
sub
mov
lcall
mov
dec
sbb
hlt
sar
jno
mov
cld
in
lods
xor
adc
or
movsl
dec
sbbb
mov
adc
nop
in
adc
sub
xchg
xchg
adc
sub
jns
int3
mov
add
adc
add
gs
sub
jae
aam
pop
jmp
xchg
mov
mov
xor
sahf
add
sbb
jb
push
inc
and
xor
xchg
fs
xlat
pop
jb
sahf
or
movsb
and
inc
inc
cmp
xor
jbe
adc
pop
pop
lcall
lea
in
jae
arpl
xchg
pop
adc
test
mov
adc
in
inc
lods
lock
fs
jmp
sbb
add
sbb
cmp
xchg
popa
pop
and
in
fdivrl
imul
push
mov
test
call
ret
push
cs
sbb
fidivrs
adc
aam
or
dec
imul
or
test
lds
cwtl
add
jnp
jnp
mov
add
dec
test
xchg
or
in
aam
fsubs
outsb
pop
lcall
test
push
inc
popa
loope
das
test
inc
adc
pusha
pushf
insl
mov
mov
pop
mov
testl
insl
fcoms
lds
das
loope
cs
pop
test
cmp
pop
mov
fisttps
add
fsubrs
in
jae
sub
ror
add
or
lcall
pop
test
sbb
dec
iret
pop
pop
mov
jl
sbb
cmc
and
push
push
fistps
dec
rclb
mov
add
inc
jne
ds
cwtl
add
cmp
cmp
pop
test
insb
cs
push
push
shll
mov
loope
xorl
mov
cmp
fcomp
les
ja
dec
cs
pop
imul
fdivrl
jne
or
push
je
push
fcom
jge
mov
jl
jg
cmpsb
adc
or
jge
clc
sarb
mov
faddl
ficoml
push
or
cli
add
sub
leave
adc
lahf
jb
mov
fnsave
jns
cmp
int
inc
in
cmpsb
lahf
jbe
imul
es
push
test
in
xor
and
shlb
xchg
jnp
mov
jae
ds
or
mov
movsb
inc
out
push
aam
mov
and
push
stos
ds
inc
sbb
or
test
shlb
mov
pop
roll
je
mov
and
icebp
and
cmp
jo
popf
inc
cmc
int3
cld
cmp
pusha
fwait
cli
dec
mov
test
das
les
ret
imulb
push
push
push
mov
xchg
mov
push
mov
sbb
fdivr
or
pop
loopne
add
sub
movsl
mov
sbb
xchg
adc
pop
shlb
inc
and
popa
push
mov
cli
sub
push
pop
icebp
loopne
or
pop
jns
push
push
rcl
in
dec
pushf
jp
xchg
cmp
mov
add
je
or
cmp
dec
pop
push
hlt
sub
push
mov
sub
mov
rcrb
dec
sub
add
mov
push
xchg
repnz
mov
rcrb
shr
or
or
lock
out
cmp
rcll
cwtl
adc
jo
xlat
or
sahf
jae
movsb
sbb
xchg
add
addl
sti
lea
fmuls
pop
and
mov
test
push
test
adc
add
jno
adc
push
mov
xchg
dec
pop
cwtl
mov
enter
cmc
push
inc
or
push
pop
aaa
out
hlt
pushf
imul
and
jle
mov
jl
push
pextrw
cwtl
mov
stc
sub
lea
nop
jb
inc
shll
nop
mov
mov
mov
adc
les
ljmp
in
insl
ds
test
mov
test
addb
scas
adc
imul
dec
je
mov
sub
movsb
loopne
dec
mov
fs
mov
jnp
ficompl
jo
insb
inc
push
fsubs
mov
or
test
ret
push
sub
push
add
dec
add
mov
sub
in
xchg
cmpl
fldcw
jb
xor
fs
nop
dec
xor
and
movsb
mov
repz
lret
adc
stos
in
fcoml
jbe
sub
outsb
dec
fsubr
add
cs
jbe
xchg
dec
pop
mov
add
jle
mov
and
in
pop
cmpxchg
dec
aam
clc
jge
lret
subl
cs
dec
mov
xchg
mov
enter
pop
and
or
xor
cmp
int
mov
imul
sti
sbbb
inc
add
add
adc
push
in
add
dec
mov
fstps
and
sbb
loope
jbe
dec
adc
sbb
and
loopne
in
daa
push
push
or
mov
push
pushf
outsl
roll
aas
xlat
or
xor
inc
pop
push
mov
insl
adc
mov
push
test
inc
sbb
dec
and
les
or
dec
or
cmpsl
push
js
sbb
mov
push
movsb
inc
sbb
xchg
daa
mov
idivb
cmpsb
outsb
cmpsb
mov
int
test
xlat
js
call
dec
in
out
add
aam
aam
add
pop
mov
lea
sbb
jge
pop
dec
xchg
aaa
dec
adc
pop
push
lret
push
xor
pop
mov
add
loop
jecxz
cld
scas
push
syscall
lcall
mov
push
pop
in
call
in
inc
xchg
adc
inc
jnp
fxch
hlt
adc
lret
dec
or
hlt
push
aam
sub
hlt
mov
jo
jo
shr
fsubrp
jo
scas
outsl
repnz
mov
cmc
sbb
sub
or
adc
push
and
dec
pusha
imul
adc
rcl
leave
fsubrs
push
push
cmp
pop
jmp
mov
stc
add
int3
notl
pop
xor
cld
shl
cwtl
call
adc
in
sub
sbb
in
inc
daa
push
pop
xchg
dec
call
fldcw
loop
loop
add
mov
cwtl
jl
or
or
rorl
mulb
pop
das
imul
mov
hlt
mov
dec
inc
or
daa
stc
cli
fcoms
dec
imul
mov
mov
cmp
je
scas
sub
rolb
xchg
out
in
in
call
lock
sub
fdivrs
or
arpl
repnz
push
sub
in
push
mov
aaa
lock
sub
fsubl
push
pop
push
mov
push
cmp
ret
inc
cwtl
out
push
scas
sub
push
outsl
imul
enter
loope
sbb
push
and
gs
xchg
imul
negl
adc
adc
inc
pop
ficoml
into
test
cmpsl
cmpsb
mov
xor
push
das
adc
pop
sbb
mov
fucomip
sbb
das
jno
adc
out
rcl
lods
push
stc
dec
dec
loopne
xor
stc
jl
rclb
cmpsl
pop
push
jno
fnsave
add
sbb
xor
cmp
in
dec
icebp
add
hlt
jle
ficoms
movsb
movsb
pop
scas
adc
out
enter
push
push
movl
sbb
jecxz
xchg
and
lret
iret
push
xchg
outsb
out
xlat
repz
repz
test
cmpsb
and
movsl
incb
adc
add
lea
pop
je
inc
loop
and
jbe
cmpl
mov
scas
inc
andl
dec
add
shll
out
adc
les
xchg
adc
call
xor
or
dec
or
mov
pop
bound
cmp
push
adc
sbb
push
sar
push
mov
sti
sub
shr
scas
dec
sub
mov
pop
jne
jp
jmp
pop
enter
push
cmpsl
adc
js
xchg
add
push
leave
and
xchg
std
push
in
push
popa
cwtl
cmp
push
call
loopne
xor
adc
jae
push
aam
pop
sbb
add
mov
mov
xor
cltd
shl
orb
loope
or
mov
scas
sub
add
cmp
insb
inc
jae
sub
xor
outsb
lods
or
movsb
loope
push
negl
pop
test
add
iret
inc
push
inc
jp
push
mov
adcl
adcl
jne
in
pop
mov
andb
sbb
lret
or
adc
pop
imul
movsl
cwtl
negb
sub
pushl
xchg
out
push
or
rcll
jmp
adc
dec
fstpl
mov
lahf
je
xchg
or
pop
or
inc
test
push
cmp
cltd
xchg
std
bound
and
fadd
stos
orl
test
inc
xlat
mov
mov
cmp
pop
xlat
or
and
cmp
sub
adc
aam
stos
or
cs
nop
lcall
mov
push
sub
or
pop
cs
add
mov
repnz
insb
xor
xlat
mov
adc
dec
or
jge
mov
add
mov
push
shrb
mov
shrb
ret
sbb
cmpsb
pusha
pop
in
sbb
jge
mov
pusha
xor
xchg
mov
xor
lods
xchg
push
add
fldenv
test
dec
sbb
and
inc
pop
fdivr
fdivr
dec
popf
sub
add
sahf
aam
popa
sbb
adc
ret
xor
aaa
push
fdivr
add
xchg
sbb
adc
fsub
add
outsl
pop
add
dec
adc
sub
mov
jecxz
lock
push
push
inc
pop
aad
pop
inc
insb
adc
xor
aaa
xor
push
stc
into
cmp
cmc
adc
jne
push
jne
es
push
or
jmp
pop
movsb
fadds
js
jbe
data16
sbb
mov
xor
mov
pop
push
sub
xchg
sbb
popa
loopne
jne
in
call
mov
mov
push
push
dec
pop
out
enter
or
mov
pop
or
mov
jge
jne
inc
nop
jne
cmpsb
sbb
popa
jno
rcrb
clc
jmp
sbb
add
sub
sub
inc
jns,pn
add
enter
or
aam
adc
add
jne
sti
enter
leave
add
sti
enter
dec
aas
mov
push
sti
push
nop
out
test
sub
jne
test
or
cmp
push
add
aas
arpl
mov
push
aas
stos
sbb
pop
xchg
sub
dec
loope
or
xlat
data16
push
lret
adc
push
adc
fidivrs
mov
rcrl
stos
fiaddl
leave
mov
fwait
dec
je
cmp
pusha
mov
jne
mov
sahf
cmp
arpl
push
mov
das
jmp
push
lcall
test
jg
jle
push
ret
in
test
nop
pop
lahf
stos
push
into
cmp
out
in
in
mov
or
push
adc
mov
xor
loop
rclb
and
mov
or
sbb
lea
xchg
pop
loopne
ds
das
adc
jb
push
cmp
xor
sbb
cltd
fildl
sub
push
and
sbb
or
movsl
add
adc
insb
iret
shrl
imul
dec
rcl
jo
mov
fistl
pop
cmp
or
jl
fisttpl
int3
mov
pop
test
jmp
insb
jno
inc
popf
mov
ljmp
lods
test
inc
xor
mov
adc
adc
or
xchg
out
nop
sub
jge
adc
movzbl
adc
jns
dec
or
ficomps
ficoml
test
or
ret
adc
mov
xchg
icebp
pop
lcall
inc
ss
xchg
xchg
or
loope
pop
jb
rcl
popa
adc
mov
or
sbb
mov
sub
lea
test
jbe
cmc
and
mov
fs
xor
push
out
push
inc
adc
or
pop
pop
xlat
es
icebp
jmp
push
scas
loopne
lret
sub
sti
pop
cmp
add
inc
pop
pop
or
fdivr
lret
popf
repnz
fdivr
sub
jge
ja
mov
xchg
sbbl
and
sbb
xor
mov
call
fdivl
and
lods
or
mov
mov
das
pop
pop
or
mov
xchg
or
push
pop
rcr
sbb
or
pusha
add
mov
cmp
test
or
das
or
ret
or
sbb
mov
cmp
mov
bound
leave
mov
jno
sub
in
add
leave
cmp
sbb
in
lods
imul
or
mov
cmpsl
psrld
lret
dec
pop
push
mov
mov
aaa
inc
insb
es
mov
mov
call
add
fdivrl
xchg
rcl
rclb
out
dec
inc
push
jp
movsl
or
jmp
scas
add
int3
lds
and
neg
jb
push
xchg
add
pop
ret
add
dec
or
test
loope
sub
enter
insb
stos
shl
push
add
sub
out
push
cltd
fs
shlb
data16
icebp
cmp
mov
ljmp
add
dec
mov
out
out
pop
lcall
sub
mov
add
les
inc
sub
dec
add
enter
dec
sub
je
rcrb
or
ds
rcr
mov
add
push
cwtl
or
shll
in
lock
rorl
dec
add
adc
test
dec
mov
inc
das
or
push
jne
aaa
nop
add
shl
adc
inc
loop
cmpsl
sbb
rorb
arpl
mov
mov
cs
dec
insb
mov
out
adc
je
and
mov
pop
loope
inc
xchg
out
faddl
cmpsb
movsl
lods
sbb
xor
in
cmp
ror
cmp
movzwl
lcall
rol
inc
jg
test
test
sbb
mov
repnz
test
push
test
cmp
test
test
xchg
pop
sbb
add
in
mov
mov
movsl
sub
int
enter
push
out
ret
mov
xor
loopne
roll
cmpsl
cld
cmp
push
mov
and
sub
out
lds
sub
add
mov
push
pop
lret
jge
out
jge
xor
cltd
frstor
mov
push
mov
or
pop
ja
inc
jmp
gs
lahf
dec
sub
addps
jge
xchg
jecxz
add
jmp
stos
xorl
mov
imul
add
aam
out
arpl
aam
fdivrl
aam
or
gs
rorl
orl
lret
ret
mov
and
dec
ror
lret
pop
test
dec
dec
jl
mov
pop
roll
sub
jge
test
pop
je
push
jmp
stos
sub
push
sbb
scas
outsl
mov
ret
sub
or
movsb
fisubrs
cmc
adc
scas
cmp
mov
mov
stc
cmp
in
in
fcmovnbe
lock
push
push
in
aam
aam
loope
add
orb
mov
mov
adc
or
add
loopne
xchg
rcrb
sub
and
out
sub
sbbl
fs
sub
jb
push
stc
in
jp
or
movsl
pop
jnp
xchg
ljmp
push
cmpsl
add
add
mov
movsl
into
and
out
mov
nop
and
or
adcb
in
imul
mov
pop
call
popf
fcoms
adc
fadd
sbb
jbe
push
fmul
aaa
into
imul
jne
test
lea
sub
xor
jge
pop
ret
gs
push
cmp
shlb
jmp
in
or
add
dec
xor
imul
dec
mov
pusha
sub
mov
add
lret
add
add
xchg
imul
lock
sub
repnz
lods
lcall
adc
pop
push
cmp
push
jo
inc
push
pop
lcall
dec
jae
or
aas
loopne
in
aam
into
adc
scas
jl
cmc
sub
scas
lock
fsubs
sbbl
lcall
jns
adc
add
lods
mov
xchg
or
adc
mov
js
mov
mov
out
mov
adc
mov
push
aam
xor
push
mov
fidivrs
sarl
sbb
ficompl
enter
ret
outsb
out
popf
and
adc
mov
jae
and
shlb
xchg
adc
inc
fldl
jp
sub
and
test
call
push
dec
inc
loop
add
or
inc
cmpsl
out
jecxz
fistpl
jae
scas
aam
fsubrl
mov
out
xchg
jo
inc
lea
cmc
inc
lcall
jns
ljmp
jb
adc
cld
push
cmp
cmp
and
or
shrl
add
sbb
es
mov
testl
dec
fisubs
decl
xchg
push
jmp
and
popa
js
leave
movsl
push
arpl
add
mov
test
or
mov
lock
xchg
or
push
loop
and
jle
cmp
sbb
lret
and
push
push
jb
xchg
les
mov
mov
shl
mov
mov
cmp
push
fsts
sarl
mov
scas
pushf
imul
test
filds
xor
adc
dec
fisttpll
dec
cmp
pop
inc
sub
sub
bswap
inc
jge
bound
in
dec
or
lods
or
lock
pop
cmp
and
or
je
adc
rol
xchg
cld
sbb
iret
or
hlt
push
or
fdivp
je
adc
jae
dec
arpl
cmp
and
jl
aas
cmp
test
dec
les
xor
shlb
push
lcall
in
aam
outsb
mov
test
xchg
fsubrl
sarb
sbb
jg
jl
add
sub
rcll
adc
add
push
add
aaa
addb
aam
fldl
cmpsl
inc
mov
movsl
adc
dec
fs
outsb
push
cmpsl
and
clc
and
loopne
or
jle
fucompp
dec
cmp
push
ss
je
outsb
xchg
add
fimuls
add
jmp
cmovnp
andb
roll
lea
enter
cmp
add
les
mov
pop
mov
ret
xchg
cwtl
sub
jecxz
sub
push
lods
fs
cmpsl
dec
std
lock
call
movsb
in
in
outsb
cmp
mov
and
fcoml
push
test
push
imul
inc
ret
or
addr16
cmp
and
test
dec
js
rolb
cmp
je
and
repz
mov
mov
mov
leave
add
movsb
jo
xchg
add
shlb
into
add
jo
test
jle
and
es
leave
dec
shll
ja
roll
fs
pop
sbb
repnz
adc
shl
je
lcall
test
subl
xchg
sbb
or
dec
adc
inc
mov
dec
adc
adc
icebp
adc
or
pop
stos
inc
pushf
push
ret
in
test
sub
popa
sub
sti
and
jne
in
or
mov
daa
lea
and
mov
insb
push
js
pop
add
dec
push
dec
mov
mov
loopne
jl
test
or
cmp
mov
rolb
push
mov
xor
aam
aam
rorl
stos
in
pop
pop
add
and
fs
adc
fistl
push
or
orl
nop
sbb
pop
aas
mov
in
push
in
lods
inc
shlb
inc
pop
daa
cmc
imul
adc
dec
aaa
ss
andl
cmpsl
bound
push
push
cmp
adc
dec
clc
pop
das
mov
es
imul
lods
sbb
add
loop
out
mov
add
bound
mov
pusha
xor
add
popa
cmc
cmp
imul
cwtl
lcall
xchg
xchg
loopne
out
nop
or
and
dec
shl
rclb
enter
add
loop
adc
jae
xor
ret
inc
sbb
add
push
lock
pusha
ds
lock
test
xor
cld
bound
bound
out
dec
add
add
rcrb
jne
pop
enter
popa
mov
cmc
int
mov
mov
arpl
stos
mov
popa
inc
dec
test
xor
sbb
mov
sbb
imul
popa
jp
dec
and
add
or
push
dec
add
inc
xchg
cmp
outsl
loope
adc
cmp
push
cs
inc
inc
mov
inc
mov
jb
cmp
mov
cmp
xor
jle
mov
xor
pop
mov
pop
add
sub
icebp
cmp
xchg
inc
fcomp
inc
ja
inc
out
mov
dec
mov
popf
mov
loop
cltd
or
popf
mov
into
sbb
mov
sub
xor
cmpl
fldt
xlat
aam
arpl
cmp
and
jnp
cmp
xlat
sti
aaa
cltd
or
int3
imul
pop
add
push
push
mov
dec
outsl
and
dec
adc
imul
in
orl
jns
movsb
in
jl
in
and
enter
jmp
ret
and
int3
xorl
ret
add
jmp
jmp
cwtl
sbb
cwtl
mov
loopne
add
packsswb
or
in
sub
mov
add
mov
nop
cmp
or
add
push
mov
icebp
xchg
ret
movsl
sar
jne
adc
out
fstpt
xor
cmp
add
inc
sub
pop
test
fstpt
fbld
das
mov
adc
andl
sti
aaa
jmp
jmp
adc
sub
lock
cmc
xchg
adc
mov
adc
and
xor
push
outsb
pop
aad
xor
jo
or
mov
adc
inc
mov
fsubrl
add
fstl
and
daa
jo
lock
enter
adc
inc
lret
daa
es
fdivrs
sub
test
pusha
inc
pause
rol
mov
sub
add
and
call
adc
lret
inc
add
rclb
push
popa
add
leave
mov
lods
jmp
leave
and
pop
enter
andb
int3
add
or
ud0
loopne
rcrl
or
and
dec
push
hlt
je
push
adc
leave
pushf
pushf
mov
xlat
mov
xorb
fadd
fcmovbe
sarb
xor
add
leave
pop
sbb
mov
faddl
or
sti
ret
dec
out
cmp
add
loop
push
lds
inc
insb
rcrl
js
lock
inc
cwtl
push
cwtl
add
addl
aas
fadd
and
imul
imul
add
out
xorl
jecxz
mov
pop
shlb
movhps
or
loopne
add
xchg
or
push
mov
add
jno
cmovle
out
push
push
fdivl
int3
nop
cltd
inc
lcall
popl
push
jl
testl
pop
andb
push
out
fdiv
and
and
jmp
in
push
stos
ds
push
add
jbe
xor
or
push
ret
mov
popf
fcoml
imul
mov
mov
and
mov
das
test
xchg
or
stc
shr
add
movsb
shrb
push
dec
dec
int3
pusha
xchg
cmp
xchg
cmp
jo
adc
addl
shrl
inc
inc
dec
cmp
mov
sub
bndldx
mov
adc
add
out
cmc
sbb
jl
out
aas
cltd
jg
and
dec
sbb
scas
add
xor
pop
add
xchg
push
push
sbb
push
xor
adc
push
inc
mov
push
dec
gs
pop
pushf
xor
ficoml
fisubs
fcoms
xor
mov
test
aam
sbb
xor
jbe
cltd
push
xorl
mov
jo
mov
xchg
iret
cmp
lock
push
or
rcrl
and
dec
adc
movsb
cmc
mov
es
sbb
or
sbb
dec
enter
push
dec
lahf
subb
sub
enter
pushf
add
iret
push
hlt
and
add
inc
push
inc
hlt
mov
and
mov
push
lret
in
adc
pop
fwait
test
sub
lea
pop
repz
pop
dec
imul
xchg
xchg
fimull
xchg
aad
fisubrl
imul
push
xchg
test
push
and
inc
inc
flds
nop
inc
fdivl
jns
lret
push
hlt
jmp
clc
mov
shlb
mov
cmp
sbb
andl
in
jnp
mov
adc
js
or
inc
and
inc
repnz
fwait
push
cmp
cmpsl
xor
cwtl
push
mov
or
mov
roll
pushf
jbe
sarl
or
sbb
or
mov
ret
adc
adc
pop
cwtl
inc
jns
test
mov
fistpll
cmp
adc
cld
push
or
fcmovne
sbb
setbe
test
fs
shlb
sbb
movsb
movsb
add
pop
xchg
jmp
add
add
or
mov
stos
lods
int
add
cmc
out
xor
adc
cs
pop
mov
scas
dec
sti
sti
aam
mov
mov
test
mov
mov
fwait
hlt
or
jne
add
cmp
jnp
cmc
mov
sub
or
add
call
or
test
imul
orb
in
xor
mov
sub
mov
mov
mov
fcmovbe
inc
sbb
adc
or
or
add
lock
xor
test
mov
xlat
mov
and
arpl
xorb
sbb
add
test
inc
lcall
cmp
jl
dec
in
cmp
dec
adc
push
jle
mov
out
pop
xchg
rclb
cltd
idivl
add
orb
sbb
dec
popf
inc
cmp
loope
or
push
sti
add
loopne
pop
shr
cld
mov
lea
stos
cmp
js
pop
pop
and
or
repnz
ret
pop
rcll
arpl
inc
sbb
nop
insl
fs
shll
sbb
cli
shl
js
loope,pt
and
or
sub
leave
das
mov
sbb
sbb
sbb
push
inc
xlat
stos
out
sbb
gs
leave
fs
shlb
in
push
imul
andb
arpl
push
sbb
mov
lret
pusha
cmp
bound
lea
or
fsubrl
mov
ss
and
push
pop
test
mov
inc
jp
or
pop
mov
dec
pop
inc
stos
xchg
adc
mov
dec
test
scas
out
mov
clc
aaa
lods
fwait
jge
test
setge
inc
aam
ja
sbb
stos
movsl
adc
ljmp
cmc
or
adc
push
in
stos
loopne
push
fxam
pusha
pop
jbe
pop
pop
call
lds
push
cltd
push
js
in
ret
dec
sub
dec
add
les
and
pusha
mov
lods
push
adcb
or
jmp
and
add
push
jbe
sbb
and
cmp
pop
into
sub
int
and
and
adc
jns
push
push
xchg
out
push
in
mov
js
pop
push
mov
push
call
dec
mov
cmpsl
hlt
jb
out
mov
les
and
dec
and
das
faddl
push
out
dec
push
ds
mov
fsubs
jecxz
jno
jne
push
mov
and
test
sbb
arpl
dec
aad
jo
inc
pusha
mov
shrb
out
push
les
fmull
mov
push
inc
adc
adc
push
in
sbb
mov
cld
scas
cmpsb
and
adc
cmp
lock
sbb
add
mov
insb
addb
mov
stos
test
cmp
push
pushf
lods
popa
pop
push
sub
insb
mov
xchg
xor
movsb
pop
xor
scas
popa
cmp
add
inc
xor
mov
xchg
rcll
sub
cli
sbb
add
test
imul
add
inc
or
mov
cltd
push
mov
jmp
lcall
in
out
xchg
dec
repnz
push
out
push
mov
mov
aas
mov
mov
dec
clc
mov
mov
and
test
mov
cltd
cmp
adc
aam
ljmp
call
frstor
orl
adc
cwtl
sbb
push
ss
push
and
inc
dec
loopne
push
cwtl
push
and
inc
sub
push
mov
jbe
jl
or
sbb
mov
std
fwait
sub
or
pop
mov
or
sub
jnp
jne
and
pusha
pusha
xor
push
mov
lret
adc
inc
pop
adc
mov
xor
and
aaa
gs
dec
pusha
shr
xor
jnp
xor
loope
or
adc
push
push
adc
or
or
movsl
stc
adc
sub
sub
fwait
es
adc
jbe
push
jns
jbe
or
xor
add
jns
or
sti
sub
jl
push
fadds
or
adcb
ss
mov
rcrl
lock
adc
push
cs
add
pop
and
not
and
sbb
sarl
mov
mov
test
rcrb
loopne
or
movsb
adc
push
or
dec
in
scas
inc
cmp
add
mov
shrb
fs
push
cltd
fs
cltd
fs
xor
or
and
xchg
lret
subb
aam
out
fwait
adc
xchg
in
in
in
in
loope
dec
cs
in
lock
or
clc
and
adc
mov
cld
cld
cld
push
mov
cld
cld
lock
loopne
inc
movsb
rorb
sbb
sub
xor
gs
sub
xor
orl
rcrb
xor
xor
pop
sahf
movd
sbb
cmp
xchg
mov
mov
dec
lock
xchg
in
in
shlb
in
clc
clc
cmp
jb
clc
clc
clc
clc
ret
imul
cld
push
cwtl
loopne
cld
jp
hlt
hlt
sub
push
fs
dec
sub
sub
and
enter
cmp
cmp
mov
int3
jb
ds
in
enter
in
in
scas
mov
cs
add
add
in
data16
hlt
hlt
cmp
jb
hlt
hlt
hlt
hlt
ret
imul
clc
push
cwtl
cld
clc
jp
lock
push
fs
dec
xor
xor
and
enter
cmp
cmp
jae
or
cmp
enter
mov
loopne
enter
loopne
loopne
or
sub
je
call
outsb
es
mov
in
enter
lock
jo
cmp
int3
enter
push
pop
fwait
clc
mov
in
and
xor
xchg
or
xor
pusha
inc
sbb
inc
inc
inc
jb
nop
add
cmp
jo
out
les
in
xchg
cld
cld
cld
pusha
leave
in
cld
cld
cld
push
jmp
mov
call
call
mov
in
in
in
in
in
jo
cmp
in
in
int3
xchg
push
pop
push
enter
mov
call
cmp
cmp
cmp
inc
cs
inc
inc
sbb
inc
jo
out
inc
inc
rclb
rcrb
lret
clc
clc
clc
clc
jmp
inc
mov
pop
fsubrl
adc
enter
call
cmpb
jb
call
jo
enter
mov
and
or
and
inc
cs
sub
nop
add
fs
dec
dec
xchg
out
sbb
mov
adc
in
lret
leave
hlt
hlt
hlt
hlt
mov
nop
inc
rclb
loopne
inc
pop
fcoml
in
jb
in
in
in
jo
cmp
int3
enter
push
pop
fwait
in
mov
loopne
xchg
or
inc
inc
inc
cs
or
inc
inc
sub
sbb
dec
dec
dec
jb
nop
add
sahf
jo
out
mov
inc
lcall
xchg
xchg
dec
push
inc
xor
or
leave
push
push
push
jae
or
push
dec
dec
dec
dec
dec
mov
mov
ret
xor
and
dec
add
enter
dec
fs
lret
and
push
push
fs
push
cltd
push
push
push
movsb
mov
push
mov
cmpsb
daa
fcoml
popa
cwtl
mov
xchg
add
fs
dec
dec
dec
xor
cmp
pop
add
and
rcrb
push
lods
adc
pop
lods
lods
xor
xor
push
push
xor
orb
cmp
es
pop
pop
pop
xchg
add
nop
pop
pop
pop
pop
or
imul
and
push
cltd
sbb
cltd
fs
push
inc
pusha
enter
pusha
pusha
pusha
xchg
lret
orb
pop
pop
hlt
test
movsb
or
adc
mov
mov
orl
pop
push
mov
fs
fs
dec
fs
mov
adc
xchg
sbb
pop
and
pop
es
sub
and
xor
sub
sub
int
xor
pushf
xorl
inc
and
or
or
mov
adc
adc
lcall
sbb
hlt
sbb
clc
aam
mov
and
add
fwait
or
aaa
ljmp
pop
sub
aas
insb
mov
push
add
sarb
jae
adc
orb
push
push
test
lcall
xor
sub
dec
and
cmp
testl
clc
inc
movsb
shlb
adc
es
mov
sbb
inc
adc
mov
sbb
rorb
data16
mov
xor
test
sbb
xchg
mov
mov
mov
and
mov
orb
mov
ljmp
cmp
or
pop
add
cvtpi2ps
add
nop
data16
cld
dec
clc
clc
or
push
xchg
out
or
dec
sbbl
dec
addb
out
jno
subb
add
adc
sbb
mov
add
aaa
jbe
sbb
pop
pop
pusha
notb
dec
jo
flds
jmp
stos
imul
pusha
inc
fisttpll
jae
jbe
cltd
pop
insb
andl
out
mov
loop
test
jo
push
lods
adc
mov
pop
bound
mov
cld
cmp
fildll
not
push
rcrl
sarl
mov
loop
add
iret
mov
es
ds
mov
xor
sub
enter
out
mov
mov
inc
cmp
mov
jl
cmp
cli
ja
mov
jl
lea
add
fidivrl
mov
pop
nop
xor
or
sub
lahf
sbb
in
add
inc
dec
mov
jne
push
imul
pop
sarl
daa
incb
enter
mov
mov
pop
sarl
mov
dec
pop
xor
pop
fwait
xor
dec
add
add
imul
mov
cmpsl
movsb
xor
xor
mov
ljmp
mov
pop
test
leave
jp
mov
test
jl
adc
fistpll
leave
xor
adc
or
push
mov
or
add
xchg
fstpl
stc
aad
adc
mov
push
outsb
push
add
imul
jle
mov
arpl
ss
addr16
out
cmp
push
das
push
add
sub
push
jl
pop
testl
adc
pop
xchg
sub
rorl
xor
aaa
in
daa
or
sbb
sbb
cmp
push
lock
sar
xor
push
decl
xchg
js
ss
cmp
push
lea
pop
jnp
mov
sub
or
imulb
jne
push
mov
inc
inc
mov
mov
lock
stos
mov
mov
loop
testb
jl
mov
mov
inc
jmp
rorb
add
loope
add
mov
cld
sub
mov
rclb
sti
and
mov
xor
mov
mov
cmp
lea
movsl
xchg
add
movsb
mov
std
mov
je
jge
push
pop
sub
push
lea
or
xchg
rcll
incl
test
jle
ret
inc
sbbb
inc
add
sub
or
stos
aas
or
dec
daa
pop
or
out
push
mov
icebp
xor
xor
and
or
xchg
push
clc
shr
jb
mov
ss
mov
loope
lea
mov
sbb
xchg
push
pop
addr16
inc
andl
idivl
pop
jno
and
dec
aas
inc
pop
sbb
and
and
ss
loope
xor
push
add
enter
aad
mov
inc
mov
mov
add
add
add
push
xor
out
cs
and
sub
setnp
dec
inc
cmp
mov
adc
and
test
jb
leave
pop
mov
adc
out
mov
sbb
dec
lock
fwait
adc
sbb
loopne
repnz
incb
jno
bound
shl
add
rcr
pop
loopne
movsb
and
les
add
xor
cwtl
pop
cs
inc
xchg
test
test
push
pop
lods
and
cmp
adcl
cld
sub
call
mov
popa
cs
xchg
sbb
add
and
cmp
add
or
pop
imul
pop
xchg
push
sbb
xor
bound
dec
cmp
or
ret
push
and
sub
or
push
shlb
call
call
enter
enter
call
test
call
or
sbb
in
sub
or
lds
cmp
es
mov
xor
or
jb
stc
dec
or
das
push
fs
xchg
in
es
es
in
in
inc
es
in
in
fs
es
in
in
or
dec
es
in
shlb
and
mov
dec
in
or
xor
daa
out
push
inc
mov
xor
dec
inc
inc
dec
adc
les
mov
push
dec
add
xchg
insl
mov
daa
or
test
aad
mov
push
xchg
out
adc
cmp
add
or
ljmp
sbb
sbb
and
cld
push
mov
pop
cld
dec
or
out
mov
mov
es
sbb
pop
inc
mov
into
xor
mov
popa
inc
lret
push
adc
pop
push
lods
ret
lock
push
inc
hlt
xchg
or
xchg
push
add
das
int
sub
aam
ss
addl
mov
js
sahf
pop
dec
inc
cmp
dec
mov
adc
pop
ficompl
adc
adc
loop
xchg
mov
adc
adc
testl
mov
adc
jae
imul
jbe
jns
dec
sbb
dec
sub
inc
and
iret
test
dec
js
cmp
mov
hlt
lds
andb
roll
loopne
fisubl
idivl
aas
or
loope
mov
insl
jl
gs
sbb
addr16
dec
in
dec
mov
sub
jp
add
stc
scas
and
mov
ja
into
add
mov
mov
xor
xor
add
cmpsb
xor
test
or
mov
nop
dec
mov
add
dec
cmpsl
dec
test
movl
aaa
mov
mov
in
dec
mov
test
adc
fistl
test
add
add
jmp
movzbl
mov
push
idiv
int
sub
mov
pushf
push
into
sbb
adc
mov
mov
push
jae
ja
mov
es
push
dec
test
jl
fnclex
imul
in
fistpl
insl
cmp
jge
push
push
dec
xchg
aas
shl
das
insl
inc
pop
popa
add
nop
add
adc
inc
push
fmull
adc
sub
sahf
test
inc
sub
popf
out
rcll
jmp
loope
test
push
ret
fisubrs
jne
or
lock
cmp
aas
mov
and
inc
dec
push
jge
enter
orl
add
enter
pop
add
pop
flds
xchg
filds
es
cmp
jbe
adc
scas
push
push
and
inc
ret
clc
sbb
rorl
add
inc
sbb
dec
outsl
outsl
jmp
or
pop
nop
jmp
pushf
mov
xor
jbe
mov
cmp
pop
int
jne
xor
roll
pop
movsb
movsb
cmp
lret
mov
jg
cli
and
jbe
dec
push
pop
shrl
pop
sbb
sbb
cmp
sub
cmpl
and
push
loopne
lahf
enter
add
mov
adc
shlb
test
mov
por
int3
stos
mov
into
adc
pop
pop
cmp
and
sub
test
cmp
movsl
push
add
push
pop
adc
pop
cld
push
pusha
int3
push
in
xor
push
adc
pushf
cld
cmp
adc
mov
cmp
addr16
add
adc
adc
adc
jg
or
loope
sub
xchg
pop
or
or
jge
movl
mov
mov
cmp
lods
or
aam
adc
popa
adc
xchg
or
or
adc
push
nop
imul
inc
sbb
dec
call
loop
xlat
jbe
andb
mov
and
in
and
icebp
punpcklbw
lahf
and
mov
or
popf
add
loopne
cmp
shlb
popa
sub
adc
sub
mov
xchg
jnp
mov
cltd
scas
push
mov
clc
jmp
add
adcl
stos
aaa
loopne
in
add
or
inc
adc
xor
mov
inc
jge
in
inc
sbb
sub
cmpsl
push
xchg
dec
push
push
or
in
pop
arpl
pop
sbb
jae
daa
in
pop
sbb
hlt
pop
push
add
mov
push
insb
cmp
push
popa
jo
adc
add
jno
std
add
mov
jo
cwtl
imul
xchg
sarb
lock
fs
icebp
ret
sbb
fs
push
insl
mov
mov
dec
lea
sbb
adc
iret
push
xor
je
xchg
enter
jp
sbb
out
jmp
add
sbb
aaa
push
inc
fwait
notb
dec
mov
and
cmp
int3
xchg
add
sbb
imul
aam
mov
sub
pop
pop
push
cmpb
clc
add
lea
push
loopne
dec
sub
negl
call
push
sbb
sub
cmovns
shufps
mov
adc
imul
jmp
cmp
dec
mov
sub
xchg
ret
push
fdivrs
fdivrs
add
push
movsb
jb
call
outsb
xor
add
mov
in
and
push
imul
inc
pop
push
jae
and
cmp
enter
notl
aaa
sub
xor
in
dec
jae
sar
in
nop
mov
sub
lock
nop
cmp
int
int3
mov
mov
cmp
adc
push
add
daa
es
jnp
xor
adc
cmpsl
nop
lret
je
sbb
lods
xchg
add
cmp
addl
cld
inc
dec
inc
cmpsl
inc
mov
sbb
cmc
movsb
inc
add
dec
negl
rol
inc
scas
inc
inc
test
xchg
inc
xor
jno
sar
add
scas
addl
rcrl
inc
inc
or
add
cld
mov
dec
jp
pop
mov
inc
ja
xor
xor
fiaddl
sbb
adc
andl
dec
add
xchg
and
popa
outsb
jae
das
fwait
push
and
mov
inc
dec
idivl
test
pop
inc
push
add
mov
or
and
inc
mov
cs
out
popa
inc
clc
sub
jne
or
jmp
mov
ja
inc
cmp
sbb
mov
jne
loope
push
das
xor
rcrl
loopne
inc
mov
pop
inc
or
sub
jns
push
dec
pop
mov
movsl
in
mov
jbe
push
add
cld
xchg
cld
dec
inc
cmp
pusha
or
or
inc
loope
repz
and
and
mov
mov
cwtl
mov
cmp
adc
sbb
jne
repnz
vmread
ljmp
mov
pop
les
inc
add
rclb
popf
or
cmp
mov
mov
jp
dec
or
divl
push
pop
sar
adc
movb
out
arpl
mov
sub
imul
imul
jo
or
aaa
ja
cmp
mov
sub
fisttpl
or
rolb
xor
xchg
adc
sti
mov
push
nop
mov
inc
aam
push
adc
sbb
outsl
shll
or
add
mov
inc
xchg
or
cmp
add
iret
loopne
adc
pop
les
push
lock
mov
flds
ja
imul
adc
jge
mov
stos
test
mov
jb
ja
xchg
add
mov
xchg
or
int3
leave
jle
rclb
movsl
nopl
jle
sahf
xor
and
inc
adc
mov
inc
or
mov
xchg
adc
dec
lahf
mov
rorl
and
lea
sbb
dec
fadd
push
pop
cmp
mov
mov
add
sahf
enter
fucom
lock
cmpsb
and
in
pusha
mov
cmp
mov
cmp
sbb
les
popa
subl
mov
jnp
or
shll
insl
and
mov
add
add
jne
mov
push
pop
jne
mov
loop
and
dec
push
jl
jnp
xchg
test
das
jmp
popa
jne,pn
sub
jp
ss
shr
scas
insl
in
test
or
sbb
pushf
fidivrs
inc
xchg
push
pop
imul
xchg
mov
add
mov
xchg
jne
shrl
loop
jne
inc
jne
push
pmaxub
fcoms
and
push
mov
aas
dec
addl
and
dec
mov
jge
sub
push
mov
xchg
inc
lea
loopne
out
dec
mov
push
shll
loopne
adc
loopne
dec
filds
daa
jae
leave
mov
dec
stos
test
pop
out
adc
jbe
pushf
or
sbbl
nop
mov
sarl
adc
stc
inc
enter
aas
push
mov
and
leave
mov
adc
cmp
fs
or
xor
cmp
xchg
pop
aaa
jmp
popa
add
sbb
fisttps
cltd
inc
jg
or
jge
lahf
lahf
lahf
inc
and
jle
es
sub
fucomip
lahf
sub
and
or
adc
je
and
or
lods
pop
ret
sbb
and
jle
loopne
fnstcw
or
sbb
nop
xchg
or
outsl
lods
jno
adc
pop
dec
xor
loopne
xchg
jo
mov
dec
mov
pop
adc
jno
test
ljmp
pop
pop
testl
cmp
data16
push
or
adc
mov
jb
enter
int3
add
jne
dec
jns
jnp
or
mov
adc
pusha
sarb
cmpsl
xor
shlb
aam
jne
jne
adc
pop
pop
aaa
rorb
sbb
and
rorb
cmp
in
mov
jo
fcmovne
je
jmp
cwtl
and
push
lock
cld
inc
outsl
and
push
movsl
sbb
push
lock
les
stc
xor
inc
popf
adc
aaa
scas
add
xchg
push
pushf
popf
add
jno
js
sub
pop
stos
sti
and
mov
inc
push
outsb
movsl
int3
pop
push
adc
add
daa
ror
dec
je
fiadds
adc
in
scas
stos
cmp
mov
mov
xchg
inc
dec
xor
add
or
and
xor
cmp
stc
xchg
xchg
out
or
and
cmp
subb
nop
or
and
imul
inc
stos
mov
and
rclb
or
mov
mov
js
icebp
div
lock
les
dec
enter
hlt
xor
mov
adc
cmp
clc
sub
test
sbb
stos
dec
insb
inc
jns
aaa
mov
test
in
or
jge
jmp
sub
in
cs
das
lds
xchg
movsb
cld
shlb
divl
leave
pop
faddp
sub
dec
fdivp
pop
pushf
pushf
dec
lock
outsl
hlt
in
nop
add
or
jge
pop
stc
sub
jno
sbb
pop
push
sub
push
fimull
inc
add
sub
or
adc
ret
mov
add
cmp
mov
clc
cmp
jo
dec
add
add
andl
mov
cmp
add
jmp
and
inc
dec
sbb
enter
pop
adc
rcl
dec
cmp
dec
aas
sub
mov
fsubl
push
lcall
or
sub
jb
das
aad
mov
loop
xor
pcmpgtw
test
lahf
sbb
call
sub
or
arpl
fidivl
pop
add
dec
xchg
cmp
sub
sbb
stos
lods
jmp
mov
outsl
ds
pop
mov
or
mov
rclb
sub
sub
cwtl
push
in
add
jae
xor
movsl
cmp
scas
ret
mov
lods
inc
pop
dec
adc
inc
or
je
cmpl
lea
inc
mov
fs
jmp
aaa
mov
into
xchg
rorl
jne
movsl
test
xchg
mov
push
xchg
cmp
push
test
mov
add
aam
filds
inc
aam
push
adc
mov
leave
xor
movsb
mov
xchg
stos
fwait
shlb
cmp
sub
mov
xor
rcll
popf
shrl
lods
mov
aas
invlpg
mov
sbb
cmp
sub
cs
dec
or
push
lret
fildl
add
mov
push
movsb
adc
fldenv
dec
leave
pop
jne
loopne
dec
xchg
cmp
mov
add
int
mov
mov
push
daa
je
pop
mov
dec
or
and
xchg
addl
add
sbb
jmp
flds
rorl
push
and
push
xchg
lds
sub
ret
fistpl
mov
mov
insb
jo
adc
and
pop
xchg
add
ret
dec
inc
xor
and
pushl
scas
dec
and
xor
faddl
imul
pop
push
jno
xor
add
jno
lods
mov
out
aas
mov
sbb
add
je
pop
jecxz
neg
jmp
push
pop
jmp
push
or
mov
xor
mov
es
jecxz
dec
cmovo
test
inc
pop
xchg
outsb
outsl
mov
xchg
inc
repnz
jne
ret
fimuls
jae
or
adc
push
mov
sub
or
inc
stos
xor
xchg
sbb
into
xchg
test
imul
call
or
jno
out
insl
pop
or
imul
adc
cmp
xor
outsb
sbb
jns
insb
data16
leave
call
or
fs
cmp
add
xor
jecxz
xor
sbb
inc
arpl
insl
jnp
adc
xor
in
dec
push
enter
testb
addb
dec
adc
mov
iret
xor
jns
jecxz
cmp
in
insb
movsl
push
out
cli
adc
mov
and
hlt
add
push
or
or
loope
dec
add
sub
push
mov
xchg
test
sub
movlps
in
xor
fxch
and
xchg
push
fiadds
or
popa
mov
add
leave
dec
fidivrs
push
push
test
aam
jnp
pop
mov
inc
cwtl
inc
sub
add
out
mov
add
or
add
test
fcoml
sahf
cmpsl
xchg
cmpb
add
notl
mov
jb
js
or
shlb
push
ficompl
mov
mov
jg
mov
icebp
aaa
testl
ds
aaa
lods
mov
insl
dec
je
lea
fcompl
jge
xor
pop
xchg
testl
mov
adcl
js
das
mov
mov
jl
mov
popf
adc
je
cmp
mov
push
add
mov
inc
jb
jmp
lea
fadds
push
outsb
mov
or
mov
adc
movsl
cwtl
notl
ja
sub
mov
cmp
pop
sub
mov
xorl
cmpsb
jno
popa
pusha
nop
negl
adc
mov
xor
pop
out
fs
sarl
insl
gs
je
mov
cwtl
xchg
into
sbb
mov
mov
shrb
mov
insb
sub
inc
dec
jo
leave
rcrb
cmp
inc
insb
and
adc
add
and
or
call
and
cmpsl
sub
jmp
adc
cmp
int3
xlat
inc
pop
xchg
test
ss
mov
aam
push
orl
dec
dec
xchg
test
mov
ss
xchg
cmp
aas
inc
pusha
pop
or
mov
cmp
stos
jno
and
or
sahf
mov
jmp
orl
dec
insb
popa
cmpsb
ljmp
or
lock
pop
jge
and
lock
mov
in
or
ss
or
or
add
mov
jb
or
cmp
sub
push
mov
mov
das
mov
rcll
sbb
jb
or
roll
pop
dec
pop
cmpsb
sub
je
cltd
movsb
movsl
or
cmp
cmp
mov
xor
add
xor
jge
mov
es
call
shr
and
and
inc
fstpl
mov
cs
fldcw
sbb
dec
imul
inc
and
and
mov
scas
or
bound
and
dec
and
cmp
adc
inc
test
and
loopne
pushf
push
adc
adc
arpl
adc
or
jl
dec
adc
add
push
aam
adc
movsl
out
das
ficoml
or
mov
mov
jmp
push
adc
sbb
adc
push
cltd
ret
cmp
inc
dec
mov
dec
inc
daa
mov
pop
pushf
pop
xor
cmp
mov
mov
fcoml
add
and
mov
push
je
outsb
sub
aas
push
pop
add
sbb
dec
and
mov
push
add
xchg
das
cld
pop
pop
push
clc
dec
inc
scas
or
xor
cmc
rolb
inc
sub
mov
and
add
dec
and
cwtl
lahf
or
aad
cmp
enter
add
adc
inc
cmp
xor
push
inc
jecxz
fists
les
add
sbb
adc
insl
dec
mov
or
test
test
lar
add
pop
xlat
sub
sti
outsb
or
push
dec
mov
aaa
mov
out
or
pop
dec
dec
hlt
test
mov
and
cmp
xorb
mov
inc
ja
pop
or
pushf
movsb
aaa
mov
addr16
push
adc
add
adc
or
inc
or
or
ret
or
xlat
jnp
add
cltd
inc
lods
cmp
xor
out
and
pusha
imul
dec
gs
rcrb
test
jo
sbb
push
and
adc
out
cld
nop
scas
popf
inc
mov
mov
xor
dec
ss
das
jnp
ret
inc
cmc
and
jg
je
lods
push
jno
cmp
sbb
jmp
inc
ficomps
test
clc
and
sub
adc
lea
or
lods
mov
xor
inc
xor
jnp
mov
rcrb
mov
lods
pop
insl
inc
out
mov
outsb
adc
add
pop
fadds
fnstsw
inc
or
and
push
jl
hlt
cmp
popf
inc
push
push
mov
sub
pop
or
xchg
cmpsb
jle
shl
jle
arpl
ss
or
sub
scas
rorb
dec
mov
leave
or
loope
pushf
mov
inc
cltd
mov
cwtl
mov
mov
repz
jle
adc
and
sub
jl
inc
sub
dec
pop
or
adc
push
addl
ror
adc
mov
push
cwtl
clc
xor
adc
inc
rorb
lcall
and
sbb
les
lods
cmp
add
test
shl
cmp
mov
inc
jge
sub
pop
hlt
adcb
ret
leave
inc
cmp
dec
push
jmp
in
pop
xchg
pusha
mov
jg
mov
jmp
pop
mov
mov
xchg
rcr
cmc
or
mov
adc
or
sbb
shlb
stos
inc
mov
push
or
xor
test
clc
insl
mov
sub
imul
lods
jmp
inc
in
dec
jne
dec
xor
inc
ss
inc
mov
lods
xor
add
jge
pop
or
les
insb
adc
inc
bound
addb
test
sbb
imul
out
adc
imulb
jns
loop
icebp
dec
aaa
xchg
inc
or
sub
roll
jecxz
fadds
xor
fiaddl
add
adcl
cmp
or
loop
jnp
push
mov
mov
lock
arpl
pushf
insb
and
scas
test
fwait
xchg
add
inc
daa
cmp
fstps
inc
cmp
outsl
out
push
roll
scas
jo
and
jmp
sub
sbb
scas
sbb
das
subb
ret
or
push
adc
lahf
psrlw
mov
push
sbb
popf
loopne
mov
xor
jnp
or
clc
cmp
inc
sub
xor
or
add
dec
imul
sbb
rcll
fidivrl
mov
sbb
add
fcompl
push
and
mov
jmp
leave
mov
mov
inc
pusha
sub
push
outsl
mov
loopne
test
adc
sub
adc
xchg
inc
into
xchg
add
inc
fiaddl
daa
sbb
inc
xor
pop
popa
inc
pusha
in
imul
dec
repnz
in
jae
sbb
cli
jmp
dec
in
rclb
or
test
scas
es
dec
adc
repz
mov
xchg
jo
dec
insb
je
add
adc
dec
mov
adc
fwait
cs
push
mov
je
mov
mov
mov
scas
mov
int3
cwtl
mov
mov
std
dec
and
mov
mov
mov
xor
out
xor
pop
jl
adc
lret
jle,pt
sub
pop
das
sub
mov
adc
add
xchg
sub
lea
push
cmp
xor
and
jg
or
dec
pop
jmp
jmp
or
mov
in
jmp
movsb
dec
xchg
push
fstp
push
inc
scas
dec
push
mov
mov
sub
sub
cmp
push
ret
es
rolb
or
fwait
cmp
inc
aad
add
imul
jbe
or
out
mov
fcomps
movl
arpl
push
in
lds
sarl
add
dec
add
nop
fsubrl
push
leave
or
ret
pop
jo
stos
or
lret
or
int
xorb
mov
lods
sub
xchg
adc
and
pop
and
fsubs
into
mov
jbe
mov
daa
ja
push
push
inc
xor
or
or
dec
outsb
or
dec
out
adc
cmpsl
movsl
dec
cmp
dec
sbb
jae
add
enter
test
les
ret
mov
mov
test
dec
out
sbb
mov
push
pop
cmpb
inc
nop
test
fdivrl
mov
mov
pushl
xchg
pop
adc
rcrb
test
cs
mov
or
daa
lahf
jo
in
ficomps
xchg
shlb
orl
xchg
xchg
add
push
loope
test
das
orl
and
faddl
dec
or
lea
push
push
or
dec
mov
inc
or
xchg
dec
xor
add
sub
add
add
xchg
fimull
inc
insb
mov
inc
mov
add
pop
adc
xor
or
xor
dec
call
jne
and
iret
mov
pop
add
dec
pop
adc
sub
or
mov
mov
shrb
ret
sbb
inc
or
rorl
push
or
addb
fucomp
cmp
and
mov
clc
lahf
add
arpl
add
cmpl
es
in
xor
lea
sbb
sub
shlb
and
mov
xchg
mov
incb
sub
jmp
arpl
clc
xor
and
lds
in
push
insb
xchg
jo
ret
das
pop
fcmovnu
flds
sbb
es
xor
mov
lea
or
xorb
jl
dec
adc
es
jne
jnp
mov
sub
or
jmp
jmp
inc
fnstcw
cli
cli
jmp
add
push
bound
rcll
stc
add
mov
pop
pop
pop
mov
mov
cmpsb
imul
inc
xor
in
test
rcrl
or
gs
sbb
add
or
jecxz
push
fistl
inc
add
ja
neg
pop
cmp
jae
adc
pop
cmp
clc
adc
outsb
iret
sbb
mov
and
inc
jns
loope
daa
add
dec
inc
sti
and
cmp
mov
sub
iret
in
ror
in
add
rorb
movsb
xor
cmp
cmp
es
xor
jbe
fistpl
sub
ret
lods
or
daa
or
outsl
fcompl
imul
loope
xchg
or
pushf
push
mov
mov
ds
movb
cmp
mov
test
test
ja
hlt
dec
adc
sbb
sbb
xor
push
je
fs
jmp
pop
mov
mov
xchg
wbinvd
cmpsl
adc
dec
cmp
xchg
iret
push
mov
adc
adc
orb
pop
sub
add
sbb
adc
insl
sarb
add
call
insl
shrb
jne
stc
iret
xor
scas
cmp
into
sub
int3
jno
sub
imul
sub
int
add
sub
or
sub
sub
loopne
and
add
pop
outsb
jne
arpl
adc
mov
sub
outsl
mov
push
jns
int
nop
add
aad
xlat
testl
xchg
adc
outsl
pop
pop
sarl
sbbl
lret
push
in
add
insl
xchg
cmp
mov
adc
cltd
pop
add
dec
push
sbb
mov
mov
jecxz
push
cmp
mov
or
lods
pop
pop
xchg
test
or
out
mov
push
xorl
loopne
dec
sbb
sub
pop
add
in
das
lea
mov
jl
shll
mov
add
mov
push
fmuls
adc
jo
fistl
in
or
cmp
push
cltd
sbbl
push
push
mov
inc
dec
enter
push
pop
addl
sub
les
mov
inc
sbb
or
dec
or
pop
lods
or
icebp
bound
cmc
jmp
sub
rolb
xor
jns
xchg
add
cltd
nop
or
mov
and
lock
ror
mov
sbb
lods
add
dec
add
lods
jecxz
pusha
inc
scas
lods
sti
mov
test
inc
in
inc
lea
stos
cmpsl
mull
repz
negl
push
ret
dec
or
lret
cmp
test
mov
inc
bound
f2xm1
push
cmp
test
stos
and
sbb
sbb
loope
sbb
mov
in
xorl
pop
cmpsl
or
test
pop
stos
pop
and
hlt
cmp
jbe
xchg
and
in
add
sub
fcomi
sbb
sahf
les
into
adc
test
cwtl
jbe
xchg
js
jbe
push
fs
add
inc
call
imul
and
adc
orl
in
sbb
leave
and
or
and
cmp
pop
dec
sahf
push
mov
cltd
lock
cs
nop
in
call
aad
ror
roll
and
or
imul
push
adc
xor
hlt
and
mov
adc
or
mov
imul
imul
leave
imul
imul
clc
or
and
mov
add
sbb
and
inc
cmpsb
imul
fs
inc
xorb
dec
pop
testb
xor
lea
mov
sbb
cld
ret
push
out
pop
dec
out
pop
xor
mov
cmp
adc
inc
in
iret
daa
outsl
and
cld
dec
cmp
mov
push
stos
sar
xchg
cmp
or
and
es
mull
mov
mov
and
and
sub
lret
and
xor
leave
in
xor
cmp
inc
or
outsb
push
sbb
cmpsl
push
and
push
or
jmp
sub
pusha
sbb
outsl
add
push
decl
cmp
movsb
and
xor
mov
jge
call
cmp
or
push
pop
or
jle
into
pop
je
inc
sub
sub
mov
add
leave
mov
enter
adc
popa
jl
add
test
loop
pusha
es
mov
sbb
mov
std
das
cmpsl
movsl
push
aam
dec
dec
mov
dec
pop
xor
dec
xchg
popf
sbb
bound
bound
push
sbb
daa
cmpsb
push
or
xlat
sbb
push
popa
pusha
test
int3
cmp
add
and
push
push
adc
sbb
mov
pop
or
jb
sbb
stos
push
hlt
or
inc
add
sbb
adc
push
or
jno
inc
and
jmp
inc
stos
xchg
shr
adc
sbb
jb
jne
sbb
fdivrl
popf
mov
iret
ret
or
daa
std
sub
loopne
sbb
int3
jle
js
mov
xchg
jno
nop
loopne
ljmp
popa
fldenv
push
rcrb
sbb
arpl
or
mov
add
stos
scas
pop
cmp
adc
xor
cmp
add
movsl
xor
shrl
into
inc
and
jae
adc
push
out
iret
inc
fs
xor
pop
pop
mov
mov
enter
ror
gs
cmp
cmpsl
push
es
add
cmp
cwtl
or
icebp
pop
xor
imul
push
popa
test
adc
shl
sub
int3
pop
pop
je
cltd
and
mov
add
sub
mov
dec
inc
pushl
pushf
dec
jp
cld
fbld
ljmp
nop
test
push
mov
jnp
jns
or
outsb
and
in
or
jg
sbb
jne
or
test
pop
jne
cld
or
pop
xchg
pop
dec
inc
sti
dec
xchg
mov
push
xchg
insl
out
sub
xor
mov
or
push
mov
std
xor
mov
push
sub
cmp
adc
xor
dec
les
adc
rorl
bound
lahf
add
jmp
adc
mov
fstl
enter
mov
roll
test
pop
cs
cmp
add
and
stos
jbe
adc
rcrl
mov
aaa
daa
xor
adc
sbbb
test
pop
test
into
sar
cmp
mov
or
push
sub
jge
movsb
and
in
jmp
test
punpckhdq
insl
mov
insl
mov
cmp
lahf
js
sub
or
dec
inc
test
mov
mov
mov
or
pop
in
sbb
mov
inc
aad
lods
jmp
inc
add
mov
xor
shlb
das
arpl
sbb
pop
in
das
mov
sbb
add
xchg
push
xchg
clc
jns
sub
cmp
sbb
lea
mov
push
leave
test
in
enter
gs
js
in
repnz
mov
push
stc
sub
mov
push
sub
or
cmp
xchg
add
adcb
test
mov
inc
cwtl
lea
push
push
and
sbb
nop
jne
insl
hlt
push
fmuls
xchg
repnz
xor
in
lock
adc
jp
movswl
jae
xor
add
sbb
mov
ficoml
and
sbb
insb
fsubrl
test
or
xor
lock
mov
add
mov
mov
cmpl
dec
mov
fdivp
sub
pushf
push
in
add
or
lds
daa
push
dec
sub
sbb
add
shll
cmp
sbb
das
push
fwait
or
arpl
flds
add
lock
pop
push
mov
xorl
add
lock
and
mov
cmpsl
adc
sbb
xor
pop
insb
xchg
cld
inc
add
and
imul
jne
xor
adc
mov
xor
mov
xchg
push
fcoml
xor
xchg
lock
and
enter
push
sub
outsb
push
xchg
scas
lahf
nop
pop
loope
push
xchg
fadds
fsubs
mov
push
testl
insl
dec
mov
cmp
aam
cmp
mov
mov
aam
or
push
testl
ds
mull
push
xchg
sbb
mov
mov
sahf
jp
push
leave
and
and
mov
pushf
arpl
jb
dec
and
cld
cmp
dec
loop
or
jne
adc
out
icebp
jno
pop
mov
mov
stc
jmp
xor
pushf
pop
aaa
and
aaa
xor
sbb
xor
push
mov
lock
mov
mov
cmp
filds
dec
xor
push
sbb
and
mov
popa
sbb
sbb
xchg
and
sbb
mov
movsb
ret
hlt
lock
test
mov
loope
sbb
outsl
scas
pushf
hlt
mov
dec
pushf
cmp
ja
cmp
das
jae
aas
fcomps
sti
repnz
pop
rcrl
dec
inc
jb
sbb
je
sbb
cmp
sub
adc
pop
cli
cmpsl
filds
shll
sbb
xor
inc
dec
je
dec
sbb
push
andb
stos
or
or
push
xor
jae
test
mov
testl
jb
push
nop
cmp
hlt
jge
xchg
mov
lret
aaa
pop
and
test
imul
dec
push
jno
scas
imul
adc
leave
pop
divl
adc
cmp
loopne
je
pop
aas
add
and
repz
push
fisubs
sbb
mov
inc
or
stos
mov
and
push
loopne
insb
xor
add
mov
sub
push
iret
rcrb
andl
inc
sbb
inc
ljmp
sbb
adcl
outsb
sub
cmp
push
and
orb
outsl
addl
adc
jne
movb
adc
sub
hlt
dec
or
pop
jge
data16
movsl
aam
repnz
cmp
std
aam
pop
jnp
cmpsb
inc
ret
aad
push
mov
std
cmpsl
or
add
xchg
je
test
dec
test
and
jo
enter
int
cld
sub
test
or
test
repnz
or
mov
inc
pop
sub
int3
imul
shrd
and
repnz
adc
subb
add
push
mov
sub
pop
lds
cmpsl
dec
rcrb
enter
stos
sbb
pop
and
popa
and
xchg
sbb
jne
lret
mov
and
lea
inc
mov
add
popa
jae
lods
dec
push
nop
mov
dec
leave
leave
cltd
sbb
push
jb
sub
enter
std
sub
cmp
or
jae
add
push
mov
mov
xor
test
fmul
out
or
mov
shr
inc
mov
sub
loopne
call
out
and
cwtl
sti
sahf
daa
push
mov
lea
dec
cmc
cmp
sub
pmaxub
out
cmp
addb
inc
orl
cmp
enter
mov
enter
popa
xchg
imul
out
out
out
lock
mov
cmp
jle
in
add
faddl
nop
andl
xchg
jo
xchg
and
sub
add
or
insl
adc
insb
mov
mov
push
subb
xor
out
sti
sti
lds
mov
fsubr
sub
pushf
mov
cmp
push
add
or
push
and
add
mov
cmp
loopne
add
pop
in
mov
inc
adc
add
sbb
sahf
add
cmp
add
xor
bnd
cli
shlb
and
aam
std
sub
ljmp
or
fdivl
or
insl
cltd
adc
xor
push
adc
imul
lahf
xor
push
lahf
pop
pop
cmc
sub
mov
addb
outsl
aas
or
and
sahf
jno
stos
sbb
aas
cld
lock
rorb
aad
add
cmpsb
xchg
mov
mov
call
xorl
jae
movsl
and
cmp
das
nop
jb
or
pop
jbe
movsb
sub
inc
popf
stos
fcom
pusha
adc
xor
mov
dec
roll
mov
inc
shlb
sub
inc
push
xchg
adcb
dec
test
pushf
loop
test
and
and
fs
daa
mov
gs
and
xor
addb
and
and
lcall
dec
shlb
test
push
mov
adc
and
jmp
cltd
imul
cltd
mov
ret
repnz
bnd
jl
adc
je
nop
insl
dec
or
jge
sbb
adc
movsl
lahf
push
pop
dec
push
xchg
out
adc
enter
dec
mov
leave
xchg
insb
xchg
xor
or
xchg
movsb
pop
sub
dec
dec
movsb
test
cmp
and
mov
mov
add
loopne
inc
jbe
dec
enter
js
adc
pop
push
jns
je
add
ret
lds
mov
inc
xor
or
adc
push
js
add
fwait
xchg
scas
xchg
or
jmp
test
push
adc
sahf
xchg
pusha
mov
and
jmp
jae
xchg
pop
movsl
mov
mov
inc
pop
dec
or
sub
inc
inc
cmp
add
test
sbb
andl
inc
adc
hlt
add
or
loopne
jbe
xorl
dec
in
cwtl
and
lods
pop
addb
cmp
add
xchg
fldt
and
pop
pop
nop
mov
in
mov
idiv
dec
pop
push
inc
mov
cmp
add
pop
sub
subl
mov
xorb
int
aas
xchg
mov
adc
pusha
in
test
arpl
push
jbe
lret
xor
dec
xchg
shrb
fdivl
aas
mov
je
cmpb
data16
mov
inc
mov
mov
popa
mov
adc
pop
stos
dec
adcl
and
jno
cmp
or
xchg
aad
fdivrs
jbe
xchg
test
pop
pop
push
xchg
mov
sub
loope
js
push
add
xchg
or
mov
iret
divl
mov
or
sub
xchg
testb
stos
dec
ret
pop
iret
pop
dec
dec
adc
sti
sub
sbb
dec
sarl
add
jmp
dec
xor
xchg
mov
mov
adc
or
sub
jb
ja
arpl
dec
pop
rep
push
add
add
mov
pop
or
sbb
sti
add
add
cwtl
ret
pop
cmc
mov
or
and
repz
fs
ret
cmp
mov
adc
sub
shl
adc
addr16
mov
xchg
mov
cmp
pop
push
jo
xchg
or
add
xchg
arpl
jbe
mov
or
lahf
sahf
cltd
adc
dec
lret
sar
sbb
imul
push
mov
lods
inc
testl
fsubp
or
in
pop
mov
sub
je
mov
fdivl
fdivrp
jae
dec
inc
mov
ss
jmp
pop
xchg
mov
add
insb
imul
fimull
mov
je
push
cltd
cmp
lds
notb
ljmp
inc
mov
test
sub
stc
jmp
push
out
insl
outsl
mov
jle
adc
and
mov
test
aam
mov
mov
stc
lea
push
ret
pushf
divb
xchg
xchg
cwtl
cmp
push
xlat
inc
icebp
sbb
mov
inc
vpmadcswd
dec
jp
enter
imul
add
popl
je
pop
test
or
jae
push
or
ja
pop
add
xor
cld
or
mov
sub
pop
les
pop
flds
adc
out
jbe
sbb
add
add
insl
sub
lcall
pop
xor
shlb
rcl
fisubrl
or
adc
and
cwtl
and
push
jb
cld
fisubrl
andl
jp
push
inc
adc
daa
ljmp
sub
dec
xor
out
mov
sbb
sbb
adc
inc
adc
jmp
jno
cmp
and
or
xchg
pop
jmp
dec
mov
mov
shrb
pop
or
ret
pusha
mov
vpcmpeqd
hlt
mov
pop
inc
sbb
fimuls
or
xor
pop
aas
ja
sbb
push
sbb
ret
mov
adc
or
push
jg
xchg
in
xor
pop
mov
cmp
add
daa
mov
and
pusha
or
addr16
jle
sti
sbbl
xlat
sbb
nop
inc
pusha
pop
loop
adc
sub
sar
adc
dec
outsl
imul
dec
sub
loope
js
sub
fnsave
outsl
ja
mov
out
sub
xor
xchg
divl
adc
sarl
sbb
cmpsl
and
push
loop
les
mov
add
xor
loopne
or
imul
push
jbe
adc
enter
mov
mov
test
or
jne
and
add
add
add
sbb
js
dec
flds
add
add
inc
js
mov
jbe
adc
xor
push
inc
clc
clc
cmp
xorl
xor
jns
mov
or
fdivs
loope
add
das
add
or
push
shll
testb
adc
mov
out
dec
push
add
aad
push
mov
orl
testb
test
pop
mov
adc
rcrb
mov
mov
or
add
rclb
leave
sbb
xchg
rclb
push
adc
fidivrs
add
std
clc
cmp
jne
stos
and
pop
mov
xchg
clc
je
addr16
ljmp
xchg
jge
push
inc
mov
cmpsl
adc
sbb
cltd
es
jge
xchg
or
mov
pop
jb
jbe
icebp
or
pop
push
cld
jne
call
sarb
add
insl
cmpsl
push
lods
lods
stc
sub
add
mov
clc
pop
sahf
mov
test
and
or
inc
rcl
add
mov
shll
shlb
mov
stos
fwait
sub
in
xor
fimull
dec
mov
fs
push
cmp
mov
repnz
aam
cwtl
imul
add
loopne
bound
in
outsb
jb
cmp
or
aas
rcll
sbb
push
add
and
or
jmp
mov
nop
data16
rcl
push
xor
shr
mov
mov
or
popa
or
movsl
adc
ja
cmpsb
push
xlat
push
sub
inc
cmp
mov
test
or
pop
mov
or
inc
xchg
or
sub
imul
lds
test
and
sbb
inc
jne
fwait
popf
sbb
push
jnp
movsb
cwtl
and
xchg
inc
or
ret
mov
sub
dec
push
and
subps
hlt
shrl
mov
inc
sbb
pop
cmp
mov
ret
rol
fdivl
and
and
xchg
adc
sbbl
cmp
sub
inc
mov
jb
xchg
pop
adc
or
sbb
jecxz
sbb
mov
ja
hlt
mov
jmp
outsb
jecxz
test
mov
push
aas
and
adc
lret
adc
pop
adc
jns
movsb
enter
add
push
sbb
mov
dec
inc
xchg
repnz
xor
movsb
inc
shl
push
enter
xchg
dec
imul
sbb
cwtl
lods
addb
cmp
add
fbld
push
push
icebp
add
iret
dec
mov
jl
push
movsb
xchg
push
pop
push
fsubrs
push
lods
pop
in
addl
sbb
mov
repnz
push
sub
outsb
jg
jnp
xchg
aam
pop
mov
pop
add
test
add
jge
lahf
adc
divb
add
mov
repnz
add
adc
incl
push
xchg
imul
push
lock
xchg
adc
or
mov
rcrb
mov
mov
xor
sub
ja
or
int
fstps
adc
cs
adc
cmp
pushl
repnz
xor
jno
sbb
lcall
dec
push
test
popf
loopne
lcall
mov
ret
dec
rorl
mov
cltd
mov
push
jo
outsl
in
or
sbbl
xchg
mov
maxps
pushf
push
les
xchg
sbb
lds
ljmp
scas
ret
sub
fists
push
dec
in
dec
cmp
ret
pusha
outsb
out
pop
orl
sbb
and
fstl
icebp
es
das
lds
dec
lods
jno
into
dec
xor
push
inc
jg
stc
loop
incb
add
gs
test
andl
stc
rolb
enter
or
xchg
sarl
sti
adc
push
and
ja
sbb
xchg
xchg
dec
and
cld
cld
es
or
push
xchg
mov
fdivs
inc
xchg
and
bound
in
pop
nop
outsb
dec
dec
inc
and
dec
sbbb
fidivs
adc
call
cmp
xor
cltd
and
xchg
mov
aaa
sub
xchg
pushf
fwait
out
mov
sub
inc
js
mov
sbb
gs
in
insb
imul
daa
outsl
icebp
inc
cs
cmp
or
adc
popf
push
cmpl
and
popf
lahf
push
mov
or
rolb
pop
cli
inc
mov
fwait
jle
in
dec
jmp
dec
sub
add
pop
push
pop
test
call
adc
shrb
adc
call
cmpsl
xor
xor
sub
jge
inc
jne
fmuls
icebp
arpl
add
decb
mov
and
mov
shl
mov
mov
push
shlb
decl
or
es
adc
sbb
jl,pt
scas
add
cmp
pop
fnsave
mov
xor
and
xchg
push
popa
jecxz
gs
xor
mov
mov
inc
adc
mov
add
mov
dec
sbb
adcl
ss
or
mov
ret
mov
or
dec
jmp
push
js
jbe
mov
or
mov
cmp
mov
data16
push
cmp
or
add
inc
or
pop
or
xchg
mov
or
pop
dec
adcb
cmp
movsb
cmp
dec
sbb
testb
ret
adc
sub
addr16
jno
fwait
jecxz
ds
sub
cmp
or
and
sti
inc
adc
call
jmp
sbb
je
mov
push
jns
pop
mov
fstpt
sub
sahf
mov
mov
test
shr
fs
mov
add
fimull
cmp
push
sbb
dec
jae
sbb
adc
rolb
pusha
js
dec
fstl
inc
sbb
rclb
pop
bound
pusha
rorb
push
pop
sbb
push
or
adc
add
jno
and
fnop
es
pop
add
out
lea
test
mov
add
repnz
push
inc
push
xchg
mov
push
inc
adc
mov
lcall
pop
or
inc
sahf
or
or
lahf
mov
or
outsb
sub
popf
testl
or
dec
mov
sbb
adc
mov
inc
or
or
mov
push
and
movsb
imul
adc
jne
dec
jno
hlt
cmp
dec
cmpsb
cmpsb
loope
add
pop
rorl
and
sub
jmp
and
xor
cmp
out
mov
aas
lret
cmp
jle
mov
and
mov
nop
mov
push
cmova
xchg
xchg
or
pop
rorl
xchg
lea
in
cs
push
shrb
mov
sbb
or
adc
dec
xchg
push
mov
xlat
inc
mov
add
adc
cld
outsb
lcall
mov
mov
imul
test
jle
clc
push
test
xor
loopne
fnsave
cli
push
test
movsb
sbb
push
sbb
push
xlat
bt
cmp
gs
loopne
add
mov
xor
mov
xor
ret
mov
mov
gs
fstps
je
dec
add
stos
js
pop
int3
cmp
dec
pusha
and
cmp
shufps
lock
outsb
cmpl
pop
test
or
add
pop
push
out
loopne
clc
mov
pop
pop
add
dec
adc
repnz
push
and
push
add
inc
nop
cmp
popa
enter
xchg
pop
xchg
mov
dec
loope
sti
xchg
fcompl
cmp
or
add
lock
cmp
jb
sbb
mov
stos
and
aam
and
push
mov
pop
test
testb
je
push
or
add
xchg
cmp
popa
push
movl
orb
mov
ret
popf
movsb
push
dec
loop
movsb
stos
rorl
shlb
fdivs
flds
mov
jne
scas
pop
push
add
inc
add
mov
inc
enter
inc
push
mov
cmp
pop
fldt
inc
xlat
jne
add
jmp
incl
in
dec
test
loopne
push
loopne
call
lods
aaa
fists
je
xchg
or
mov
mov
xchg
or
push
leave
cld
and
pop
out
and
pop
cmp
fmull
movsb
fcoms
movd
in
mov
adc
dec
adc
jo
push
sbb
outsl
pushf
sbb
pop
add
push
inc
aas
add
fwait
ss
cmp
and
pop
imul
push
adc
scas
pop
add
movsl
xlat
cld
inc
inc
sbb
push
or
cs
stos
push
arpl
loopne
xchg
push
lea
sahf
cmp
and
push
sbb
push
or
les
call
addr16
lret
push
pop
adc
pusha
je
shl
je
insb
mov
add
push
fists
cli
push
pushf
add
arpl
xchg
and
xchg
xor
js
add
jne
lcall
loopne
jecxz
xor
lea
mov
mov
or
mov
daa
lret
ret
add
and
cwtl
or
pop
pop
jl
jne
inc
movsb
sbb
or
inc
xor
jo
out
adc
or
imul
or
or
jne
enter
mov
pop
aam
pop
jb
sar
mov
pop
inc
sbb
bound
mov
sbb
test
dec
jge
or
add
dec
jecxz
test
inc
jo
sub
push
shlb
add
lds
and
dec
push
push
mov
adc
mov
sbb
jmp
cvtps2pd
mov
dec
cmp
jb
push
xchg
add
xchg
mov
loope
adc
dec
add
ret
push
mov
sub
pop
add
jbe
and
loope
fcompl
xor
jmp
cmp
and
mov
push
push
dec
jge
test
cmp
fisttpl
adc
pop
mov
pop
ja
xorl
dec
je
insl
jmp
adc
movsl
addb
jne
sub
shll
jbe
sti
jecxz
mov
test
jle
xchg
rolb
rolb
outsb
sbb
mov
sbb
cmpb
jg
push
popf
adc
or
sbb
sbb
out
or
aad
repz
jg
adc
cmp
xlat
or
sub
sbb
orb
sbb
push
pop
push
cmp
clc
inc
adc
jo
adc
sbb
jmp
repnz
ds
cmp
mov
int3
popf
and
jmp
scas
pop
shrl
clc
test
out
fiaddl
sub
cmc
sub
pop
test
dec
xchg
mov
xchg
or
ror
ss
and
add
repnz
in
movsb
dec
and
add
and
add
jle
rolb
test
std
incb
xorl
test
mov
mov
push
push
ret
cltd
sub
lret
cmp
std
ret
push
cld
das
push
mov
test
arpl
mov
dec
mov
cli
or
push
or
out
ret
or
jo
pop
dec
es
das
adc
add
or
dec
imul
or
ja
test
sub
sub
inc
jo
cmpsb
subl
enter
fcoml
or
mov
cmpl
sbb
andl
cs
das
mov
loop
pop
orb
les
std
mov
push
cmp
insl
adc
sub
dec
loopne
xor
sub
add
sbb
xchg
or
jg
pusha
popa
sub
push
mov
xchg
movzwl
or
inc
testb
stos
push
test
pusha
je
cmpb
test
add
pop
add
add
into
sub
add
push
push
out
mov
fwait
push
ljmp
mov
inc
mov
xlat
pop
mov
mov
dec
std
add
xor
divl
int
push
rorl
sbb
sbb
popa
es
or
sbb
shl
push
outsl
lcall
pop
leave
jmp
aam
rorl
dec
call
sbb
adc
rorb
or
pop
sbb
js
bswap
lret
into
jne
mov
ret
or
sbbb
dec
or
and
fdivp
cmp
sbb
jmp
push
dec
and
pop
pop
mov
jl
iret
test
in
add
jnp
jne
fsubrs
adcb
es
idivb
pop
xchg
clc
dec
sub
jne
cmp
and
pop
cld
repz
jmp
cmp
mov
dec
jmp
mov
xor
xchg
insb
cli
ret
cmp
lods
adc
mov
cmp
lea
cmp
mov
add
je
inc
shll
adc
add
and
inc
mov
jne
pop
sub
js
pop
rcr
clc
add
pop
and
scas
sub
movsl
rolb
push
mov
pop
dec
pop
pusha
adc
jno
rcll
xchg
adc
cwtl
jno,pt
cmp
push
add
mov
repnz
cltd
inc
scas
movups
and
bound
adc
push
nop
adc
lock
ja
fdivp
jecxz
xor
adcb
push
xor
xor
mov
lret
pop
ds
cwtl
sub
adc
pop
and
sub
aam
call
xor
lock
jle
push
subb
add
push
add
pop
and
out
and
mov
pop
sub
mov
pcmpeqb
cmp
push
insb
push
out
and
push
repz
adc
xor
or
sub
or
loopne
sub
in
aaa
adcl
push
inc
push
cmpl
je
lea
lret
ret
call
lock
and
mov
xor
push
popa
scas
stos
or
int3
inc
adc
rcr
sub
sub
imul
xchg
add
lock
das
lahf
xchg
xor
fs
push
iret
or
movd
add
clc
pop
pop
in
mov
mov
jmp
push
inc
data16
pop
pop
xchg
push
jno
jnp
adc
xor
rcrb
clc
je
lcall
shrl
dec
xlat
add
cmp
ret
cmp
sub
movsb
push
adc
test
add
mov
and
fs
pop
cld
cmp
xor
cmpsl
jbe
dec
jbe
jbe
cmp
dec
mov
jbe
pop
cmp
jmp
movsb
and
fs
sub
and
adc
sub
mov
nop
cs
jmp
mov
sbb
sbb
lret
mov
insl
clc
mov
test
clc
sahf
cmp
dec
enter
daa
jmp
adc
push
aam
mov
push
push
jle
xchg
imull
leave
fmull
cwtl
cmpsb
popa
mov
cwtl
adc
dec
movb
std
inc
popf
mov
and
in
or
pop
mov
gs
jno
loope
imul
shlb
mov
or
push
pop
mov
arpl
inc
mov
add
arpl
imul
cmp
roll
ja
sub
or
mov
add
les
clc
xchg
icebp
rclb
push
dec
add
add
jl
inc
or
call
cmp
jge
xchg
xor
mov
or
jbe
xor
mov
js
add
in
pop
mov
fistpl
cmpsb
cld
sbb
add
bound
push
shlb
inc
inc
sbb
sbb
cmp
or
in
shll
mov
pop
push
xchg
cmp
insb
shll
add
icebp
cmp
push
pop
ret
insl
xor
shlb
cwtl
cltd
call
mov
dec
in
into
cmpsb
inc
mov
iret
fsubl
mov
add
mov
push
sbb
sbb
testb
call
jg
mov
cmp
ret
push
call
test
fs
and
mov
clc
mov
mov
cmc
mov
or
push
dec
imul
inc
push
inc
loopw
dec
pop
jne
ret
sbb
mov
pop
adc
dec
cld
inc
cmp
push
mov
jb
jp
fmull
sti
xchg
push
sbb
adc
pop
mov
xchg
pop
adc
dec
movsb
jbe
add
xor
cmp
shl
xchg
push
cmp
je
inc
inc
repnz
rorl
inc
jb
clc
sarl
adc
andb
push
push
lcall
add
xlat
fidivs
dec
loope
lods
je
loop
cwtl
mov
dec
insb
dec
shl
push
jne
je
xor
cld
cmp
push
aam
lret
push
jle
pop
out
add
and
insl
mov
sub
ficomps
in
push
sbb
add
or
pushf
rolb
lahf
jmp
dec
sti
xorb
dec
fldt
pop
rcrl
sbb
std
jns
inc
inc
or
pop
je
jmp
push
pop
sub
or
push
popa
sub
popa
out
and
sub
les
dec
add
or
add
cmp
test
mov
popa
push
cwtl
push
and
or
push
dec
popf
icebp
fimuls
jg
inc
cmp
insb
pop
sub
cmp
pushl
pop
inc
dec
sbb
and
add
js
mov
dec
inc
pop
pop
and
pop
pop
sbbl
pop
in
push
lea
enter
dec
scas
add
add
cmp
jb
rcrl
fiadds
ret
sub
or
shrb
or
ds
imul
pop
cli
dec
xor
or
xor
nop
stos
pusha
cld
sbb
jb
neg
mov
lock
sbb
mov
add
cmp
add
negb
mov
or
lret
or
add
stos
mov
and
dec
cltd
dec
ljmp
add
and
xor
flds
testl
sub
fisubrs
fucomip
push
mov
ja
test
popf
dec
push
ds
jae
mov
out
push
decl
jb
test
enter
dec
sub
outsb
lds
je
sar
fidivs
shll
mov
or
ja
dec
xor
add
adc
adc
add
and
movsl
ficoms
sbbl
push
pop
pop
ret
sub
cmp
add
repz
loopne
pop
idivb
pop
jmp
mov
test
xchg
sarb
fldenv
xchg
cmp
pop
adc
sbb
push
mov
or
pop
sub
pshufw
aam
jae
fsubrp
movl
loopne
jns
lret
out
dec
outsb
pop
call
sahf
lret
lock
int
or
pop
inc
jae
adc
jl
push
and
ljmp
loop
inc
clc
and
and
xor
cvttps2pi
loopne
stc
fdivrp
fistl
xor
cmp
pop
and
push
clc
jg
rcrl
or
push
mov
pusha
sbb
xor
fildll
push
xchg
sar
sbb
cmp
jmp
or
xor
cld
add
dec
adc
rcrb
sub
das
fcomp
adc
into
fsubrp
adc
ret
mov
sbb
add
or
jbe
aam
fsubrs
ss
and
pusha
xlat
and
mov
pop
lea
or
add
movd
movaps
aaa
out
push
enter
shlb
jle
xor
add
mov
lret
je
sub
ret
repz
or
jg
jl
mov
jno
cs
jnp
mov
fs
xor
cmp
add
adc
icebp
in
pop
mov
ja
add
mov
mulb
pusha
idivl
enter
mov
adcb
xchg
cmpsl
mov
pop
jne
cs
pop
xchg
and
flds
cwtl
jbe
adc
xor
and
outsl
xchg
daa
mov
jb
je
and
mov
lcall
jecxz
mov
mov
mov
add
mov
test
je
imul
push
nop
or
fs
aad
das
and
fsubs
push
inc
inc
sbb
fldt
ljmp
jp
je
mov
scas
mov
cmp
jne
mov
in
push
test
pop
add
add
push
or
push
push
mov
jne
sbb
in
clc
lds
imul
hlt
cmp
xchg
movsl
or
iret
outsb
test
out
nop
or
pop
mov
movsb
testb
sub
test
adc
loope
out
pop
in
cmp
enter
push
ret
xor
or
inc
pop
cmp
mov
cmp
int
loopne
sub
push
rol
push
cmp
inc
push
sbb
or
sub
ja
xor
jp
out
enter
aad
call
scas
sbbb
or
dec
jo
mov
pop
imul
roll
pusha
or
hlt
cmp
adc
push
das
arpl
ljmp
fldl
nop
shlb
adc
scas
sub
pop
fsubs
nop
inc
mov
je
mov
push
decl
fmuls
adc
jne
inc
cmp
aad
mov
jb
or
orb
adc
loope
inc
inc
bound
mov
pop
mov
inc
mov
jmp
cmp
repnz
adc
sub
add
and
out
or
jg
sbb
repz
adc
push
add
push
push
in
loopne
lcall
pop
or
cmp
xor
movsb
or
sub
fs
jae
and
imul
orl
ret
xchg
rclb
mov
movl
mov
adc
sub
bound
mov
dec
xor
aaa
xchg
and
dec
adc
adc
popa
sbb
out
testb
or
push
push
filds
ret
daa
push
icebp
pop
rcrl
mov
je
push
push
js
pop
js
xor
or
jl
inc
outsl
jle
pop
inc
inc
and
xchg
push
cmp
push
add
rorl
jbe
mov
imul
stc
push
pop
pop
xor
and
cmovs
cmpl
dec
outsl
dec
test
jecxz
sub
stc
or
fwait
imul
xchg
aad
add
pop
mov
imulb
scas
loopne
add
xor
movsb
fistpll
cmpsl
push
sub
sbb
rcl
sbb
mov
or
scas
psubw
mov
sarb
add
movl
cmpsb
inc
add
add
fiadds
js
jo
lahf
out
sahf
push
mov
repz
mov
mov
call
cmp
repz
hlt
clc
dec
inc
cmp
clc
cld
sub
dec
add
add
fldcw
jmp
call
inc
mov
nop
pusha
pop
mov
inc
pop
sti
and
and
leave
adc
jl
cld
or
in
cmp
xor
neg
mov
fimuls
sub
mov
xor
pop
nop
inc
push
push
sbb
fiaddl
jl
mov
add
in
xchg
push
mov
inc
mov
out
push
add
mov
addr16
add
mov
add
in
in
push
hlt
cld
add
jns
jl
or
daa
xlat
aaa
sbb
out
sahf
out
sbb
adc
or
or
add
or
jns
inc
inc
or
movsb
loop
push
pop
insb
xlat
aaa
push
add
lds
add
mov
daa
ja
icebp
test
rcrb
xor
imul
push
push
dec
jge
inc
cld
dec
call
mov
xchg
popa
push
lock
int3
add
adc
jae
or
xor
je
leave
xor
jnp
pop
add
orb
iret
xor
add
jae
mov
push
ret
aam
test
fs
add
mov
cmp
sbbb
mov
dec
xchg
les
jbe
jmp
xlat
lods
jno
or
adc
jg
adc
xchg
xor
lods
into
cmp
adc
and
add
or
lret
ret
loopne
push
out
sub
shrb
jne
and
adc
iret
paddusb
push
push
cmp
jae
and
adc
add
sbb
mov
pop
or
adc
add
and
sbb
test
add
mov
or
cmp
push
adc
mov
outsb
lods
lret
test
inc
or
daa
push
adc
subl
add
pop
push
xor
pop
imul
mov
jbe
jmp
jge
stos
mov
fildl
fdiv
loop
dec
push
int3
mov
adc
jmp
es
xor
dec
add
push
cld
cltd
sbb
iret
cmp
or
das
aam
sarb
test
test
fldenv
add
jle
lret
or
xchg
insb
adcb
mov
dec
sub
scas
xchg
sbb
test
or
jo
cs
inc
jg
push
popa
jl
popa
or
hlt
cmp
loopne
inc
test
ret
testb
inc
mov
xchg
inc
or
inc
mov
cmp
mov
jmp
xor
cmp
or
je
mov
test
push
jmp
jns
xchg
and
sub
pop
div
pop
lds
push
jo
or
test
mov
fisubrl
test
pop
pop
push
xor
dec
fwait
dec
adc
add
pop
xrelease
fists
jno
dec
icebp
pop
dec
push
mov
pop
mov
js,pn
mov
cmp
out
ja
ficomps
add
scas
inc
inc
or
xchg
loope
les
clc
cmpsl
push
mov
pop
jle
push
add
aad
push
addr16
cmp
lcall
dec
rol
adc
test
xor
sbb
mov
shrl
pusha
jb
ret
imul
movlps
mov
nop
das
or
in
add
fucomp
xor
sbb
mov
or
and
dec
dec
xor
gs
or
aas
loop
stos
scas
popa
inc
push
mov
jo
mov
inc
xchg
movsb
fisttpll
shrl
push
scas
gs
add
sub
aam
add
push
push
lea
jge
inc
cmp
sub
mov
sbb
fisttpl
mov
test
pop
inc
xchg
jbe
and
les
xor
or
test
mov
push
cmp
jb
xor
mov
pushl
push
jp
imul
xlat
test
bound
loopne
xor
fmull
push
mov
jmp
push
pop
cwtl
xor
test
addb
outsb
xchg
sub
sub
sbb
ret
or
cmp
arpl
add
jns
add
sbb
mov
sbb
orl
jp
jbe
frstor
std
test
pop
inc
sub
js
mov
mov
into
push
cltd
add
shll
ficoml
mov
jle
mov
fcmovbe
sbb
cmp
mov
or
gs
ret
xchg
incl
clc
insl
add
test
cmp
add
add
or
cmp
and
push
ret
pusha
cmp
sub
and
add
or
rol
xchg
cmp
push
mov
nop
sbb
shl
rolb
xchg
inc
mov
cmp
mov
fstpl
dec
mov
movsb
mov
mov
cmp
lds
loope
add
or
pop
jecxz
fwait
push
iret
hlt
test
and
xchg
cs
inc
int3
pop
push
mov
pop
adc
dec
pop
std
leave
pop
sub
cmp
cmp
push
dec
jecxz
adc
mov
rcr
cmp
je
push
jbe
and
mov
adc
or
loope
loopne
lods
sbb
add
pop
push
imul
js
push
xor
insb
rcrb
pop
adc
jl
dec
hlt
mov
mov
in
xchg
lret
pop
mov
or
push
or
mov
push
inc
andl
adc
sub
mov
sbb
pusha
pop
push
mov
pushf
xchg
je
pop
jl
mov
jne
into
orl
push
jmp
inc
jmp
push
or
dec
mov
mov
fwait
jp
jns
add
jbe
fwait
sub
lods
mov
and
loop
jo
xorl
sarb
int3
outsl
mov
xchg
or
enter
sbb
inc
mov
or
into
mov
pop
test
adc
enter
loop
stos
mov
mul
ficoml
mov
fsubl
push
or
adc
add
pop
xor
and
xor
xchg
adc
test
xor
push
xor
hlt
les
insl
sarl
nop
mov
push
adc
push
jbe
daa
push
cmpl
jae
imulb
adc
or
call
fdivs
fbld
lret
mov
adc
add
testb
sub
push
sub
add
inc
repz
xor
xchg
mov
mov
xchg
inc
xchg
lock
push
sub
ficomps
jb
loope
sarb
push
into
je
push
test
add
mov
imul
loopne
push
or
popa
inc
or
mov
adc
aam
inc
inc
dec
mov
loop
clc
push
push
pop
xchg
fdivs
pop
sarb
sbb
je
xor
lahf
ret
dec
sbb
repz
imul
jns
push
fcomps
inc
dec
add
sahf
addr16
daa
add
adc
ffree
inc
je
dec
add
iret
sti
cmp
je
lcall
in
add
cmp
push
push
xchg
pop
cmpsb
repnz
push
pop
jb
or
cmp
or
or
pop
enter
sub
xor
cmp
pop
or
add
xchg
pop
enter
or
add
inc
or
push
nop
push
ja
push
cmovp
inc
push
adc
xor
ficomps
pusha
adc
push
fcoms
inc
or
ds
mov
adc
pop
lcall
adc
xchg
add
lcall
xor
js
push
push
and
enter
pop
fisubs
sbb
lcall
sbb
cmpb
call
jb
jb
sbb
sbb
dec
in
add
je
pop
sbb
cmp
adc
sub
sbb
andb
add
push
pop
pop
sbb
pushl
add
add
sub
cmp
jae
testb
add
cmp
xchg
jmp
add
mov
mov
cmp
sahf
mov
add
repnz
sub
shr
jns
push
ret
adc
aad
cmp
enter
mov
cmp
fwait
out
sub
pusha
sbb
clc
add
pop
enter
je
call
nop
testl
sub
ljmp
jmp
jmp
push
mov
lcall
xchg
add
pop
in
inc
in
sahf
sbb
inc
sahf
out
out
jge
int
or
sbb
pop
lock
enter
icebp
xor
cmp
pslld
pop
enter
repz
push
jns
leave
std
hlt
hlt
shll
pop
in
cltd
or
fwait
mov
cmp
push
inc
push
nop
negb
cmp
movsb
test
clc
clc
fmulp
add
clc
cltd
adc
inc
stc
in
cmp
lock
cli
cli
nop
adcl
inc
outsb
sub
je
cld
push
pop
repnz
vmread
in
ss
xor
sbb
add
adc
ret
add
dec
ljmp
shll
shl
and
cmpsb
jmp
shll
jecxz
jecxz
push
nop
ja
std
sti
in
in
enter
icebp
inc
mov
stc
daa
xchg
sti
pop
insb
nop
and
out
cltd
outsb
xchg
inc
pop
and
add
and
sbb
pop
jmp
jmp
cmp
mov
add
xchg
popf
cli
sbb
js
out
out
out
mov
sbbb
inc
repnz
cli
push
cli
dec
push
cmp
stc
repz
lret
add
repz
sar
push
xor
sbb
pop
fstpl
testl
negl
fwait
xor
mov
stc
inc
or
pop
out
clc
cmp
xchg
clc
sti
sti
sti
cltd
pop
enter
cld
inc
cld
and
inc
pusha
fists
rcll
cmp
mov
inc
je
subb
pop
xchg
pop
insb
loop
icebp
mul
pop
and
imull
xchg
mul
sbb
pop
insb
nop
out
cltd
out
xchg
inc
pop
pop
inc
mull
test
sti
testb
lcall
mov
testb
pop
xchg
negb
cs
out
jno
loop
push
inc
negb
notb
sub
xchg
add
sbb
repnz
cmc
pop
pop
repnz
cmc
jae
movsl
test
cmc
div
jne
cwtl
xlat
idivb
and
pop
add
clc
clc
sbb
popa
cmp
mov
pop
push
jno
xchg
hlt
pop
sub
xchg
cmp
hlt
push
hlt
pop
lock
sbb
data16
frstor
idivl
jo
pop
xor
push
sti
lahf
pusha
clc
cmc
adc
push
iret
movsl
imul
adc
loop
scas
repz
pop
and
repz
imul
xchg
xchg
mov
push
imul
bnd
arpl
mov
dec
pop
je
xchg
repnz
cs
add
dec
in
in
dec
push
jno
cmc
and
dec
pop
je
add
and
sbb
mov
seto
divb
icebp
das
mov
test
lret
and
fcompl
cmc
cmc
cmc
add
and
lock
mov
aam
ret
sbb
jns
lock
stc
jmp
jb
cmc
jne
push
lock
mov
xchg
scas
jne
push
lock
test
ss
add
xchg
dec
or
adc
sub
out
ret
divb
in
cmovno
push
add
inc
sahf
xchg
int3
add
stos
loop
mov
add
jp
push
and
push
insl
add
push
adc
add
jmp
and
mov
and
ljmp
jp
add
and
in
inc
add
data16
push
es
inc
clc
stos
jmp
mov
sarl
xchg
repz
pop
fnstcw
sub
idivb
fucomp
jmp
mov
repz
pop
jnp
push
fucomip
mov
iret
lret
in
pop
push
xor
addb
adc
pop
jno
rclb
test
fstps
icebp
or
nop
fdivrp
add
insl
or
insl
mov
xchg
adc
cmp
mov
or
sbb
inc
jb
or
rclb
mov
pop
dec
data16
inc
inc
inc
inc
dec
fcoml
data16
jmp
jb
fcmovnu
sbb
or
pop
sbb
sbb
inc
push
inc
and
cmp
iret
sbb
and
clc
adc
adc
push
mov
das
movsb
adc
pop
and
or
je
pop
mov
mov
roll
sub
inc
inc
sbb
cmp
enter
add
lock
or
fwait
ljmp
xlat
inc
cmp
out
sub
xor
push
cmp
pop
adc
sub
out
add
cmp
lret
add
and
clc
loopne
lods
push
mov
mov
mov
std
pop
ret
sub
add
test
jg
adc
cmp
pop
inc
jmp
cmp
adc
mov
adc
xor
sub
sub
dec
pop
aad
add
inc
adc
sti
or
jg
xor
jg
inc
mov
or
pop
cmp
je
cmp
and
or
adc
add
ja
jne
pop
jne
dec
add
add
lds
sbb
xchg
mov
dec
test
lcall
jmp
fidivs
lret
sub
cmp
frstor
jo
cs
add
cmp
sbb
jae
push
inc
add
daa
movsb
and
add
xor
clc
pop
in
dec
test
inc
add
jmp
ret
fs
adc
fnstcw
or
mov
sbb
mov
cmp
test
and
pop
in
xor
mov
sbb
jbe
pop
ret
pop
scas
add
ja
pop
xchg
bound
test
jno
or
mov
pop
pop
push
rcrb
add
cmp
xchg
pop
aaa
or
add
jmp
cmpl
aas
popa
push
mov
and
adc
ds
pop
call
adc
xor
fidivrs
xor
and
cmp
cld
andb
addl
cmpsb
adc
add
xchg
xchg
faddp
lcall
jp
xchg
adc
sub
test
push
dec
int
sub
sbb
ret
adc
movsb
xchg
cs
dec
push
cmp
add
rol
rolb
rcrl
mov
cli
fs
and
adc
hlt
test
mov
lods
xor
mov
mov
pop
mov
lods
out
in
nop
mov
loop
outsb
insl
xor
sub
enter
int3
add
adc
inc
add
sbb
inc
push
out
mov
and
cmp
pop
adc
sub
lret
mov
cmp
push
push
sbb
fimull
ret
or
dec
jne
cs
xor
jg
mov
mov
inc
inc
cmp
cs
dec
xor
push
lret
mov
pushf
or
xchg
out
lret
outsl
loop
jb
sbb
into
ret
sbb
adc
pop
push
mov
lock
and
cmp
xor
jnp
push
test
or
addl
push
and
into
or
ficoms
inc
loopne
icebp
jne
push
cs
push
pop
xor
js
add
and
cmp
sub
or
or
sbb
or
inc
and
sbb
bnd
push
and
xchg
add
add
push
loopne
or
hlt
pop
dec
rorl
insb
xchg
adcb
call
je
push
jmp
mov
rcll
inc
inc
ss
mov
mov
inc
inc
cli
push
pop
adc
sbb
outsb
out
xor
ljmp
bound
inc
adc
addl
cwtl
mov
test
outsb
clc
sub
out
cmp
jne
jnp
add
dec
mov
loop
or
incl
cld
jne
mov
push
cmp
jne
lcall
and
adc
add
mov
jb
jmp
repz
mov
adc
jmp
std
sbb
into
repz
jmp
cld
sbb
fucomi
pmaxub
popf
sbb
inc
inc
decl
dec
add
iret
out
sub
jmp
rorl
lds
popa
mov
and
into
mov
cltd
xor
pop
add
testb
push
test
aam
add
ret
jmp
pop
pop
cmpsb
mov
inc
outsl
add
call
pusha
cwtl
inc
mov
hlt
ret
dec
jmp
stos
cs
inc
push
sub
test
add
xor
sahf
mov
es
gs
fwait
movb
add
push
dec
jne
movsb
addr16
adc
and
mov
xor
je
sbb
fmul
sbb
insl
pop
inc
sub
lods
xor
sti
jmp
cmp
jae
or
mov
and
shrd
sar
fs
pop
and
sar
ret
adc
nop
cmp
sub
jns
and
das
mov
cli
xchg
mov
fcompl
add
aam
test
scas
xorb
inc
adc
jg
push
jne
cmp
jg
add
mov
loop
inc
xlat
imul
xor
ficoms
jl
daa
leave
cmp
aas
mov
rclb
pop
inc
aam
pop
pop
sub
xlat
jae
xchg
lods
es
and
bound
inc
cmpl
jb
lods
ret
ds
mov
lea
push
sub
inc
mov
push
pusha
popa
repz
insl
and
fstp
mov
sub
mov
clc
push
cmp
js
decl
lods
pop
mov
clc
pop
mov
and
sub
outsb
cltd
ljmp
sub
ret
adc
pop
fdivl
loop
gs
and
adc
mov
test
jmp
div
xchg
fs
test
rcrl
loopne
stc
adc
dec
outsb
and
mov
inc
adc
in
pop
or
and
incb
stc
and
and
and
pop
adc
movb
mov
idivl
call
jbe
add
or
or
xchg
mov
or
shr
sub
cmp
fidivrl
incb
ds
sbb
pop
push
push
sarb
inc
cmp
jb
mov
mov
icebp
mov
xchg
divb
hlt
es
daa
rorb
jmp
or
out
out
cmp
mov
xor
lahf
rclb
xor
mov
test
add
xchg
sar
mov
cmp
xchg
or
adc
sbb
in
hlt
push
iret
call
roll
xorl
adc
cli
cltd
dec
mov
cmpsb
mov
cmpsl
xor
sub
cmp
pushf
bound
mov
add
dec
mov
incb
pop
jmp
pop
inc
or
leave
sub
inc
mov
cmp
push
cmp
push
add
cmp
sbb
aam
dec
xor
or
inc
dec
or
sbb
mov
lea
and
inc
loopne
mov
xchg
pop
jne
int
jbe
push
adc
jb
addr16
lea
sub
mov
imul
push
mov
enter
test
cmp
jbe
mov
mov
inc
ret
es
sbb
in
xor
daa
and
out
push
dec
xlat
adc
out
addl
shlb
adc
sub
pusha
jmp
sbb
add
adc
push
scas
dec
loope
xorb
mov
mov
pusha
or
aas
add
inc
or
push
sarb
push
adc
cmp
pop
lcall
lds
or
push
movsl
dec
adc
cld
mov
inc
or
test
popa
pop
pop
ja
mov
std
orl
push
dec
xor
lcall
dec
test
fiaddl
or
ja
mov
jbe
push
inc
mov
add
add
lcall
or
inc
inc
outsl
loop
inc
sub
jnp
pop
daa
mov
or
push
cmp
pop
mov
rolb
lods
jg
xchg
sti
add
and
mov
mulb
adc
ljmp
jns
sbb
or
mov
push
loopne
lcall
adc
add
mov
call
je
in
mov
lds
and
je
ljmp
clc
bound
xchg
fisubs
adc
mov
outsl
dec
push
fbld
mov
dec
pop
and
sub
pusha
lret
insb
imul
insl
jge
push
push
data16
sbb
dec
mov
or
sub
mov
rorb
loopne
fcoml
sti
mov
mov
mov
clc
or
repnz
enter
shrb
pushf
popl
rcrl
adc
jle
call
dec
cld
adc
sub
mov
rclb
add
mov
mov
mov
adc
lea
mov
daa
jle
push
or
mov
aad
pop
push
ret
fildl
pop
push
dec
xchg
pushl
or
add
loopne
xchg
std
xchg
test
test
xor
fiaddl
add
mov
and
pop
enter
lods
xchg
test
xorb
std
adc
inc
clc
sub
loope
lcall
mov
pop
jg
out
stos
inc
push
push
mov
mov
mov
je
cmpl
xor
mov
adc
jne
inc
jns
xor
mov
adc
cmpl
push
aas
mov
pop
add
fsubs
ljmp
int
adc
mov
sub
xchg
lret
lret
or
aam
mov
fdivrs
fsubr
adcl
jne
add
mov
or
test
push
mov
or
cmp
je
mov
leave
cmp
fbld
mov
stos
push
xlat
add
or
fdivp
orl
rolb
cld
lea
cwtl
pop
ja
mov
mov
pop
sub
loopne
fs
rcrb
pop
jmp
push
rol
pop
mov
cmc
sbb
popf
sarb
jmp
lea
les
clc
fdivs
cli
sbb
lret
pop
dec
or
je
add
xchg
je
sbb
mov
mov
pop
add
sub
stos
mov
int
nop
cli
xchg
dec
mov
or
jbe
imul
aas
mov
sub
arpl
js
inc
pop
add
shlb
adc
lods
shll
jb
xchg
daa
out
sbb
pop
hlt
stc
divb
aaa
mov
or
inc
insb
je
lock
into
mov
test
sub
insb
jne
pusha
sub
jbe
sbb
adc
and
sti
xchg
ss
or
xor
mov
into
enter
xor
movsl
sbb
decl
jb
lcall
incl
outsl
cmc
movsb
sbb
jne
js
movsl
xor
pop
xlat
je
xchg
aas
mov
push
lea
sbb
pop
xchg
mov
das
sbb
or
pop
add
sbb
jle
inc
je
push
or
cmp
add
ds
mov
movsl
push
cld
dec
cmpsl
aas
add
jae
jbe
dec
nop
and
jae
movsb
inc
in
testl
add
aaa
jne
das
xchg
stos
out
mov
adcl
pop
sbb
outsb
sbb
sub
xchg
or
push
cwtl
add
xor
adc
inc
inc
addr16
test
and
cmp
pop
push
mov
test
add
push
insl
cmp
xchg
xor
or
int3
testl
sub
cmpsb
push
dec
lret
addb
aam
add
sbbl
xor
test
daa
ret
jmp
mov
call
xor
push
inc
adc
add
es
and
jge
lcall
mov
inc
mov
dec
mov
pop
nop
cmp
push
xor
add
lea
ljmp
hlt
fsubs
arpl
dec
dec
jmp
outsb
jo
add
inc
mov
xchg
add
into
add
addr16
pop
je
jmp
cmp
je
call
mov
sbb
sbb
pop
pop
dec
aas
cwtl
rorl
sub
pushf
mov
je
pop
pop
or
add
jae
cwtl
pop
adc
fldenv
vaddpd
pusha
cmp
add
dec
sti
jmp
ret
pop
shlb
mov
jne
mov
rcrl
cmp
jle
insl
cmpl
incl
xor
pop
fimuls
adc
pop
or
jl
call
cld
adc
sti
pushl
adc
add
mov
lea
pop
pop
test
mov
dec
or
test
push
inc
inc
leave
and
mov
push
pop
clc
cwtl
imul
sbb
dec
test
cmp
mov
push
xor
adcl
inc
sbb
hlt
outsb
mov
cmpsb
and
jae
addr16
decb
mov
jo
inc
daa
add
in
pop
adc
adc
push
pop
hlt
movsl
add
data16
push
adc
or
in
push
lret
int3
popf
stos
repz
jne
push
sbb
add
adc
in
mov
cmpsb
jmp
out
or
hlt
xchg
xor
nop
rorb
je
stos
mov
jl
jae
xchg
adc
neg
or
in
lcall
clc
lret
shll
mov
or
sbb
dec
test
pop
mov
or
je
xchg
and
lea
cmp
out
push
inc
ret
xor
mov
scas
loopne
sbb
cmp
push
nop
xchg
clc
sahf
fsubrl
incb
lret
mov
dec
jmp
pop
xchg
sub
inc
push
cmp
push
cmp
aas
adc
push
xor
cmp
add
xlat
fnstenv
and
xor
ss
sbb
or
lock
andl
xor
lods
test
sub
push
push
call
gs
xchg
sub
ret
add
sub
mov
jmp
test
add
stos
mov
fcoml
cltd
sub
sub
inc
pop
lds
pop
shl
sbb
add
xor
xor
cmp
lcall
aaa
jns
xchg
mov
cltd
fcoml
add
push
jbe
dec
addl
adc
fdivs
loope
push
sub
aaa
rorb
xlat
call
in
fistps
rcll
pushf
mov
or
pushf
test
addl
pop
jg
loope
mov
xor
cmpsl
les
cwtl
sti
push
and
and
in
testl
in
cmp
adc
adc
pop
mov
cmp
mov
lea
cmp
add
nop
dec
add
nop
mov
cmp
sub
add
mov
ds
pop
dec
dec
int3
adc
adc
loopne
adc
sahf
out
mov
call
shrb
sbb
ret
call
push
lea
fs
rorb
add
xchg
mov
add
mov
jl
in
sarl
push
cmp
icebp
xchg
xchg
add
add
and
adc
movsb
mov
lods
adc
xchg
call
push
icebp
insl
ljmp
popf
or
jl
push
pop
xor
mov
push
jne
push
aas
mov
pop
pop
jge
xor
pop
movsb
xchg
push
or
push
xor
test
and
add
add
adc
cmp
adc
in
xor
dec
mov
popa
cmp
xchg
outsb
push
sbb
inc
or
pop
sub
test
int3
add
jmp
push
clc
mov
je
push
jne
sbb
or
out
pop
imul
mov
jmp
xor
jns
or
or
sbb
mov
dec
push
adc
fiaddl
cmpsb
xchg
adc
leave
lods
cmc
or
aad
mov
adc
enter
pop
mov
sub
mov
jne
movb
jmp
xchg
rolb
and
add
inc
loopne
sub
cld
shr
mov
imul
dec
jg
mov
inc
add
push
dec
jg
loop
dec
test
xorb
lea
lret
les
or
ret
ret
sar
das
add
decl
cli
aas
jbe
push
pop
cmp
jne
rolb
sub
jae
mov
shr
lea
not
in
cmpsb
pop
jmp
pop
mov
and
and
mov
dec
loopne
lret
je
aaa
cmp
mov
add
push
dec
pop
pop
pop
lock
dec
add
or
loop
rcrl
sub
jmp
clc
and
push
mov
sbb
jne
and
sti
add
scas
and
sub
cmp
sti
mov
lock
and
add
cmp
je
pushf
jno
jno
nop
int3
cmp
mov
and
add
clc
jle
sub
jmp
lea
das
mov
xor
push
jle
or
data16
pop
add
and
or
fs
or
cs
dec
fisubrs
cmp
lahf
js
rorl
adc
negl
or
adc
mov
dec
paddd
mov
mov
rolb
lret
ret
sti
or
call
inc
insb
in
lock
sub
lods
dec
sub
mov
or
fiaddl
hlt
imul
repz
dec
add
add
lcall
sub
sti
sbbl
lods
dec
mov
or
std
cmp
sub
dec
inc
adc
adcb
inc
sub
mov
and
jne
push
push
inc
jnp
pushf
mov
adc
call
int
mov
call
js
xor
cmp
sbb
cs
jle
cmp
adc
sahf
mov
or
das
mov
inc
sbb
pop
add
xor
xor
sbb
cmpb
daa
mov
cmp
sbb
add
lahf
inc
mov
les
add
xchg
mov
inc
adc
inc
and
push
xor
mov
add
movsb
adc
int
dec
mov
jg
fwait
orl
pop
mov
add
movsb
stos
sub
andb
mov
aaa
stos
add
inc
mov
mov
imul
add
sub
inc
clc
pop
pushf
or
add
add
dec
repz
je
hlt
aam
mov
add
testb
int
adc
lea
add
push
cli
ja
je
sub
sub
shr
mov
cvttps2pi
mov
adc
ja
cmpb
lock
jnp
fldl
iret
dec
jne
mov
cmp
dec
sahf
and
cmpb
aam
loopne
sub
fs
loopne
cli
push
sub
sahf
pop
mov
mov
lock
aad
ljmp
inc
jne
or
lds
inc
loopne
ljmp
xchg
add
or
stc
add
sub
pop
shr
add
lret
cld
negb
cmp
dec
mov
and
pop
adcl
cmp
les
je
mov
stc
cmp
jg
xlat
je
mov
cmp
push
pop
adc
movsb
sub
mov
pop
inc
stc
jb
inc
cmpsl
sbb
clc
rolb
push
dec
push
movsb
es
loopne
nop
add
subb
lcall
and
add
lods
std
lret
into
mov
add
mov
call
and
add
pop
mov
and
push
sti
jbe
pop
jg
or
je
jle
mov
pop
pop
lcall
pop
decl
dec
movsl
imul
loopne
data16
and
js
push
ffree
test
mov
adc
xorb
push
add
xchg
mov
and
inc
add
jl
cmpsl
inc
or
fmull
xchg
clc
lds
inc
dec
insb
pop
xor
push
sar
dec
ret
sbb
and
int3
les
cmp
cmp
and
cmp
xor
addr16
je
fisttps
add
cmp
pop
je
fcmovu
ja
ja
dec
cwtl
mov
add
adc
fimull
and
or
mov
or
ret
ret
mov
mov
xchg
lock
mov
push
cmp
lods
push
sub
out
cmp
push
mov
add
lods
dec
xchg
nop
sbb
movb
sbb
or
mov
jp
insb
sbb
ret
pop
pop
cmp
lock
cmp
push
push
push
jge
mov
into
call
out
pusha
jmp
in
adcl
movsl
lret
dec
or
out
fldcw
push
nop
cmp
mov
and
or
jne
add
cli
cmp
jb
aas
pop
int3
mov
sbb
jne
leave
jae
cmpsb
jmp
jnp
add
xor
cmp
fimull
aaa
arpl
adc
notl
push
mov
and
pop
push
sub
mov
ret
pop
lcall
enter
mov
pop
dec
pop
dec
fdivr
enter
push
sbb
mov
dec
pop
iret
jne
mov
jno
mov
xchg
out
mov
clc
jmp
pop
jbe
repz
mov
and
jne
mov
mov
and
leave
inc
test
inc
push
in
sub
or
out
icebp
sbb
fdivrl
cmp
call
mov
dec
pop
xchg
xchg
in
cmc
sbb
iret
push
ljmp
into
in
and
mov
decb
push
xchg
pop
pushf
xor
std
mov
or
sub
dec
mov
pop
pusha
dec
bound
dec
push
and
push
clc
into
xor
xchg
cmpsb
imul
movl
xor
add
pop
xor
fadd
inc
and
cmp
call
ret
out
or
fimuls
subb
push
push
push
mov
pop
inc
mov
movsb
pop
jno
ljmp
sbb
push
shrl
push
lea
pop
and
cmp
push
push
hlt
xlat
rcrb
and
add
pop
inc
pop
leave
or
sbb
or
xor
mov
sti
je
dec
mov
mov
stos
test
mov
push
mov
fnstsw
inc
je
lock
adc
inc
pop
jb
or
xorl
fisubrl
xor
test
and
dec
cmp
dec
xor
sti
sbb
inc
or
aas
push
fcmovbe
mov
push
or
add
ret
fisttpll
xchg
flds
inc
sub
pop
pusha
sbb
add
ret
inc
inc
xchg
mov
sti
add
ds
dec
test
jbe
inc
jbe
iret
sbb
push
mov
mov
and
stc
pop
repz
repnz
and
js
push
push
lock
bound
les
jne
imul
push
sar
daa
shr
xor
pop
push
lds
push
xchg
cmp
cs
cmp
in
jle
or
lea
push
dec
adc
pop
jl
mov
je
and
jne
push
push
xor
pop
adc
sar
pop
neg
mov
inc
mov
push
cmp
mov
push
add
fdiv
add
inc
je
push
clc
sub
sarb
or
stos
lahf
mov
inc
dec
lahf
iret
repz
push
inc
cmp
add
repz
and
sub
dec
add
repz
jl
mov
add
fcmovnu
pop
and
inc
pop
nop
adc
test
jo
cmp
pusha
lahf
push
add
mov
add
outsb
mov
push
mov
add
repz
in
fwait
popa
add
inc
adc
add
sub
pop
dec
mov
jo
addl
call
or
in
sub
or
adc
or
mov
mov
mov
je
sbb
mov
rclb
or
jne
nop
lock
or
cmpsb
stos
add
sbb
push
pop
sub
mov
adc
jne
lea
push
rdmsr
iret
or
add
sbb
push
test
or
add
sbb
movsl
mov
sti
mov
inc
push
js
mov
and
xchg
hlt
add
lea
cld
lods
enter
enter
shl
or
aas
push
push
add
add
rcr
or
push
enter
leave
fdivrl
mov
scas
pop
add
sub
push
cmp
push
push
cld
imul
xchg
sti
xchg
andl
orb
mov
add
adc
movsl
and
or
adc
aad
sbb
rol
push
mov
mov
lahf
lahf
cmp
sub
mov
call
ja
add
lea
cmp
ja
lret
add
jmp
sbbl
mov
and
and
and
jmp
mov
mov
push
inc
cmp
jb
repnz
daa
orl
mov
lock
mov
mov
insb
push
add
and
push
jmp
roll
sub
inc
dec
sbb
imul
push
mov
shlb
mov
loope
lods
repz
push
add
adc
mov
pop
repnz
icebp
mov
push
mov
sar
cli
js
adc
outsl
nop
jo
xor
mov
inc
cmp
std
jne
je
or
in
jmp
sub
addr16
add
pop
rcll
ror
and
ret
cs
fstpl
movb
pop
fadd
cmp
add
adcb
push
mov
mov
pop
xchg
or
and
lock
out
into
std
add
push
jmp
cmpsl
mov
sbb
mov
and
xor
inc
sbb
push
rolb
sbb
cmp
fmuls
or
dec
mov
jne
mov
test
or
dec
inc
pop
leave
inc
sbb
clc
stc
bound
leave
xor
lea
cmpsb
into
sub
inc
test
push
loopne
subb
inc
cmp
ljmp
inc
subb
outsb
sub
add
incl
or
outsl
js
jb
in
ja
clc
xor
inc
or
inc
push
push
mov
out
adc
out
lea
mov
inc
mov
inc
inc
inc
dec
jne
mov
inc
in
dec
pop
cmp
add
divb
add
lds
mov
inc
or
inc
dec
jne
mov
test
jo
xchg
jae
gs
cltd
add
jmp
cmp
mov
inc
sti
cli
jo
adc
ss
loopne
adc
inc
cmpsl
mov
mov
popa
or
loop
push
and
ficoms
mov
sub
sbb
shrl
inc
mov
imul
sti
je
add
mov
xchg
pop
pop
popf
push
add
push
in
push
inc
adc
cmp
inc
push
and
int3
cmp
stos
imul
test
scas
add
and
mov
hlt
mov
or
cld
xchg
mov
jmp
in
mov
enter
idiv
jle
cwtl
sub
jmp
xor
inc
sbb
decb
mov
add
sbb
ss
out
add
inc
jo
insl
adc
pop
sbb
and
jmp
ss
xor
and
inc
add
jns
icebp
mov
cmp
pushf
ljmp
pop
pop
and
adc
pop
repz
inc
outsl
cmp
es
and
fbld
pop
cmp
jne
sbb
push
adc
jae
xor
ds
in
mov
jmp
lahf
das
adc
in
sbb
les
xchg
xchg
int3
mov
push
nop
mov
rcrb
cwtl
rolb
icebp
inc
fidivrs
clc
mov
or
cwtl
sub
xchg
aaa
out
jle
ret
push
cmpl
push
in
adc
pop
cmp
push
pop
cld
add
sub
fs
jl
insl
movsb
sbb
lock
adc
je
test
fstl
enter
ficomps
cmp
mov
aaa
cmpl
xchg
sahf
push
pop
ret
loopne
repz
jo
daa
add
fsubrs
cmp
sub
pop
jbe
mov
aaa
dec
xor
das
mov
push
mov
sub
jge
daa
icebp
add
or
jns
dec
xor
mov
add
xor
enter
jbe
or
nop
push
inc
mov
lock
rolb
insb
loope
pop
pop
xor
adc
inc
jmp
jmp
jmp
push
ficomps
or
ljmp
pop
cmpsl
mov
std
and
pop
push
cmp
shlb
es
insb
xchg
cmp
daa
mov
xor
add
ror
jecxz
mov
icebp
add
in
and
cmc
and
leave
add
je
adc
or
popf
adc
js
sub
arpl
push
mov
sub
add
push
push
jbe
or
orl
cmp
jbe
push
and
sub
sbbb
pop
add
pusha
xor
daa
loopne
pop
fadd
inc
test
jb
cwtl
and
sbb
sti
out
add
cmp
cld
lods
xchg
or
xchg
inc
or
inc
cmp
test
icebp
sarb
movsb
xchg
shrb
clc
pop
and
add
pop
mov
bound
shlb
sahf
fnstcw
js
sbb
outsl
mov
or
xchg
shl
sub
ret
dec
push
xor
cmp
dec
sbb
xchg
and
jns
mov
mov
incl
xor
not
inc
pusha
mov
or
hlt
iret
adc
ret
inc
movsb
push
sub
sbb
dec
aaa
pop
sbb
sbbl
sbbl
cmp
int3
xchg
and
jle
popa
cltd
data16
pop
sbb
jmp
adc
push
jecxz
push
dec
cli
mov
and
pop
cmp
mov
shll
test
mov
pusha
sub
jge
push
inc
xor
sarb
aas
push
adc
xchg
xchg
lret
pop
jle
mov
test
cmpsl
jae
cmpl
imul
dec
lahf
aad
add
and
daa
test
ffree
add
sub
xor
out
push
mov
adc
cmp
mov
and
xchg
push
scas
int
mov
sahf
or
sub
fnstenv
pop
sbb
push
and
shll
mov
sub
ss
add
sbb
pop
jecxz
sbb
loopne
sbb
call
mov
inc
sub
int3
test
sub
in
mov
in
push
add
and
test
nop
sub
cmp
pop
inc
add
leave
mov
insb
adc
adc
mov
cmp
jge
push
mov
pop
je
xchg
daa
xchg
or
movsb
aad
int3
add
add
das
and
adc
cmp
cmp
shlb
mov
add
imul
or
mov
mov
jb
lea
sbb
add
hlt
andl
aaa
add
or
add
sbb
andb
mov
push
cs
in
div
cmc
je
xchg
sbb
into
adc
lods
inc
pusha
pop
gs
das
pop
imul
cmp
and
pop
cmp
hlt
cmp
je
movl
sbb
sbb
cmp
and
jne
ret
mov
jmp
adc
mov
add
lahf
test
jbe
ss
xor
cmp
or
sbb
add
icebp
xor
pop
shrb
and
or
rorl
fucom
lea
or
shrb
scas
xor
add
sbb
xor
pop
jns
xor
mov
data16
test
ja
cs
xor
sub
cmp
je
movl
inc
clc
call
fsubrs
fimuls
inc
sbb
hlt
dec
ret
jecxz
jmp
pop
or
pop
clc
push
inc
and
fcompl
jl
xor
push
ficomps
mulb
jl
fs
xor
or
xchg
or
daa
js
adc
rorb
cld
loopne
xor
inc
sbb
push
loopne
sub
sub
and
fildl
sub
ja
rclb
ljmp
inc
insb
sahf
xchg
outsl
sbb
lea
inc
cmp
mov
cmc
roll
pop
loope
loopne
xchg
jmp
orb
sub
push
cmp
cmp
or
or
xor
aam
mull
jo
inc
inc
push
xchg
shlb
pop
bound
add
shrb
lock
ret
add
or
push
xchg
out
add
add
mov
lock
rol
adc
pop
mov
mov
es
mov
xor
mov
arpl
or
testb
ljmp
dec
jns
dec
add
or
add
xchg
shlb
mov
gs
mov
xor
mov
popa
scas
xchg
mov
out
insb
mov
xor
pop
js
inc
cmpsl
xchg
out
bound
fidivrl
mov
lods
in
sbb
test
jb
call
test
cmp
arpl
mov
pop
lock
mov
lock
roll
or
pop
mov
cmp
das
push
incb
or
push
mov
mov
pop
and
jne
dec
sbb
std
cmp
pop
sar
lea
testb
scas
mov
addr16
fldenv
adc
nopl
loopne
ret
stc
mov
or
cmp
popf
adc
iret
std
or
mov
adc
data16
std
adc
pop
lods
adc
inc
stc
ds
mov
leave
rorb
sbb
lock
adc
dec
xchg
fldpi
xchg
push
pop
or
add
dec
lret
in
andl
add
pop
inc
add
incb
sbb
stc
or
mov
pop
std
xor
sbb
lods
mulb
or
mov
mov
sub
je
or
inc
dec
mov
xor
cmp
insl
ss
lahf
iret
dec
cmp
inc
jbe
sub
sub
add
adc
popa
jg
and
sbb
jne
inc
jne
repnz
inc
xor
mov
pop
xchg
cmpsb
shlb
cmp
push
int
lds
movsl
test
pop
lods
pop
shrb
xchg
movsb
sub
leave
cmc
fdiv
imul
jns
fwait
and
lea
xchg
in
mov
ds
movsb
rolb
ss
adc
add
pop
mov
repnz
adc
js
push
or
xchg
sbb
xchg
sti
push
inc
cmp
pop
xor
lea
pop
popf
in
mov
xlat
push
sbb
cmp
cwtl
add
pushf
cmp
jne
xor
dec
push
and
mov
cmp
jg
testl
movsb
loopne
sub
xor
fcmovbe
jns
or
mov
sahf
add
in
subb
lcall
loopne
aas
add
mov
cmp
enter
xlat
ds
mov
sub
jno
jle
and
or
mov
pop
sub
add
jecxz
fmul
je
testl
jbe
or
sub
cmp
xor
dec
sahf
pushf
push
jecxz
xor
inc
subb
mov
in
xor
aaa
movb
insb
sbbl
enter
std
adc
adc
ret
mov
mov
or
mov
lahf
xchg
cmpsb
lcall
test
fimuls
cmp
sbb
std
call
inc
xchg
cmpsl
flds
lcall
xchg
jge
imulb
sbb
daa
mov
mov
mov
mov
faddp
or
lea
bound
mov
xor
test
push
sbb
mov
cmp
sub
cmp
cmp
loopne
dec
icebp
push
push
cmp
pop
sbb
mov
mov
aaa
sbb
lea
test
inc
or
push
cltd
xor
shrb
xchg
insb
jnp
xor
rcrl
xor
push
ss
rclb
mov
insl
arpl
cmp
cmp
and
cmp
mov
insb
pop
call
sbb
xor
pop
imul
test
in
std
mov
jcxz
repz
daa
data16
rcrb
insb
mov
decl
or
out
dec
ds
data16
rorl
test
sub
test
sub
push
popa
mov
insb
mov
push
cmc
shll
sar
lock
xor
popa
aas
lds
push
sub
sbb
jmp
lea
data16
sbb
jge
divl
insl
int3
cmp
cmpsb
pop
sahf
lea
test
xchg
aas
sbb
xor
fs
cmp
cmp
sub
insb
imul
adcl
enter
subb
jle
pop
insl
loope
add
mov
movsb
mov
or
cwtl
inc
push
inc
push
xor
cmp
xchg
fld
sub
cmovge
or
jp
jne
fdivr
dec
jl
add
push
dec
pop
jno
push
xchg
push
je
inc
dec
lcall
adc
out
ret
push
js
out
xchg
aaa
fsubrl
push
xor
sbb
lds
and
nop
sbb
inc
out
cmp
add
testl
sahf
dec
jbe
jmp
js
mov
call
dec
push
shl
jne
hlt
sbb
jecxz
mov
xor
aam
xchg
loope
pop
pop
leave
andl
xchg
adcl
nop
sbb
sbb
cmp
es
and
loopne
pushf
cmp
xor
lahf
stos
icebp
push
xlat
adc
sub
cmp
ja
dec
inc
stc
xor
mov
sub
or
es
leave
shrb
pop
mov
shlb
cmp
pop
sahf
shrb
sbb
xchg
xor
xchg
int3
cmp
inc
pop
testl
es
lcall
push
lods
or
repz
lea
pop
add
test
xor
imul
repz
mov
scas
movsl
call
nop
es
sbb
inc
sbb
cmc
dec
mov
bound
pop
scas
or
and
xchg
inc
aad
dec
mov
mov
int3
les
push
xchg
lods
adc
iret
inc
xor
push
fstpl
sahf
add
enter
in
jb
dec
mov
jb
dec
sbbl
push
or
and
movsb
xor
dec
push
inc
lcall
xchg
inc
clc
aad
sbbl
dec
dec
dec
dec
xor
cmp
add
mov
cmp
mov
pop
std
dec
cs
movsb
push
cmc
loope
xor
and
mov
cmc
sbb
inc
repnz
test
popf
cmpsl
add
mov
inc
clc
mov
inc
sti
pop
inc
or
inc
inc
and
or
pushf
pop
xchg
pop
repz
sbbb
clc
mov
inc
lea
xchg
inc
pop
mov
lods
add
ds
mov
mov
cmp
inc
or
mov
dec
dec
repnz
orb
movsb
cmp
or
push
aas
dec
push
xchg
leave
adc
or
cmp
incl
nop
test
in
sub
xchg
sub
cmpsb
add
push
nop
inc
lods
or
dec
aas
mov
insb
loope
mov
je
dec
pop
movsl
adc
dec
cmp
aam
testl
aaa
pop
sbb
add
push
push
dec
xlat
jl
out
icebp
std
inc
push
jae
pusha
push
jbe
push
add
mov
jne
js
inc
lods
adc
loope
insb
sub
pop
mulps
jno
fcomi
dec
xchg
and
sub
lock
insl
insb
int3
push
shl
imul
dec
adc
sbb
insl
mov
push
xchg
mov
movl
sub
mov
add
sub
dec
jl
xchg
adc
lcall
icebp
mov
ja
testb
add
je
and
or
mov
sub
inc
lret
mov
dec
dec
inc
xchg
pusha
cmpsb
test
cmp
sub
mov
cmpsl
inc
and
lock
add
or
jo
xorl
loopne
mov
loop
mov
fists
les
jne
je
inc
cld
sub
pop
jle
cmp
jl
dec
pop
stos
sbb
dec
push
add
inc
js
inc
inc
push
mov
movsb
in
add
mov
push
ds
add
cmp
sbb
pop
dec
mov
and
or
insl
xchg
jecxz
ja
popf
jmp
sahf
daa
push
inc
mov
shl
inc
add
jne
cmpl
sub
insl
pop
push
cmp
adc
and
inc
xor
imul
bound
mov
add
pop
and
daa
popl
xchg
jo
sub
xor
pop
lcall
pop
mov
cmpsb
fisubrs
rol
std
push
lret
or
inc
cmp
int3
pop
add
dec
nop
add
push
mov
push
clc
mov
or
add
add
adc
push
ret
push
jno
pusha
xlat
sti
xchg
repz
outsb
out
lret
into
jge
pushf
sbb
or
fstpt
push
or
orb
and
imul
mov
les
add
cmpsb
hlt
dec
jg
pop
pushl
test
mov
jl
pop
mov
int
mov
and
into
pusha
test
or
xchg
addb
mov
movsb
orl
xor
loopne
fldcw
or
in
les
add
jb
test
sbb
mov
lods
mov
mov
mov
aaa
mov
mov
adc
ss
shll
or
or
dec
push
addl
in
outsl
mov
dec
push
sub
gs
hlt
rclb
pop
cmp
icebp
sbb
negb
icebp
adc
sarb
cmp
mov
push
lcall
jo
cmp
sbb
mov
rol
and
adc
xchg
sbb
mov
test
and
cmpsl
and
inc
outsb
fmuls
rcrb
rcl
idivb
ds
cmpl
adc
test
push
cmp
and
mov
push
xchg
push
adc
ffree
lods
int3
fldcw
push
add
out
or
imul
ficoml
testl
je
or
sbb
mov
or
add
adc
js
ret
clc
and
test
inc
and
ja
shlb
sub
loope
rorb
ret
add
repnz
push
push
push
cmp
push
test
je
fsubr
or
stos
cltd
aam
push
xchg
lock
cmpl
add
push
inc
and
jl
xor
outsl
inc
push
jmp
cmp
or
je
xchg
pop
nop
mov
dec
xchg
sbb
nop
imul
inc
and
mov
pop
add
mov
jmp
enter
inc
in
push
imul
cmpsl
push
pop
sub
popa
repnz
dec
cmp
rol
or
sbb
adc
adc
mov
shr
leave
dec
fisttpl
pop
dec
jne
push
loopne
inc
lea
jno
push
or
sbb
adc
add
xorb
filds
xchg
push
pop
hlt
sbb
add
jle
shrl
clc
pushl
cmpl
enter
leave
adc
inc
cs
arpl
adc
mov
hlt
xchg
jns
adc
mov
jle
test
mov
roll
cmpb
lea
sti
add
je
pop
cmc
and
adc
push
iret
pop
adc
and
aas
xor
movsl
and
lcall
push
pop
add
inc
push
inc
ret
inc
daa
das
sub
cmp
push
loope
xor
push
cmp
jl
mov
inc
sahf
cmp
rol
adc
stos
sbb
cmp
ljmp
jne
lea
testb
jne
clc
push
mov
and
repnz
shl
into
push
ret
and
jb
mov
jmp
int
call
cmpl
or
push
ret
dec
lods
fisubl
je
enter
icebp
cmp
int3
cmpb
mov
int
lret
insb
sbb
add
bound
lods
insb
lret
pop
or
dec
incl
sbb
inc
scas
or
mov
js
xchg
mov
or
sbb
xchg
stos
push
xchg
xlat
pop
data16
ss
mov
rcll
add
arpl
adc
dec
ss
dec
jnp
test
andl
cmp
ds
daa
mov
xor
inc
sub
inc
add
subl
add
push
and
xchg
adc
mov
jno
inc
sbb
add
pop
test
jbe
arpl
das
dec
sbb
jg
test
push
imul
imul
inc
xor
cs
or
outsb
popf
jle
aam
xor
push
cs
add
xchg
test
and
and
pop
lahf
sub
sbb
decl
cmp
mov
mov
adc
orl
ja
mov
hlt
xor
loopne
dec
add
mov
or
rcrb
push
seto
pop
mov
mov
mov
sbb
andl
sbbb
adc
movsb
mov
lock
xchg
bound
ljmp
and
sbb
push
ljmp
lock
or
and
out
jnp
es
aad
or
lret
mov
push
mov
jmp
cmc
mov
daa
sub
inc
rorl
inc
imul
mov
mulb
jg
call
je
cmp
adc
das
xor
shll
testb
xchg
ljmp
data16
stc
call
leave
jge
sub
movb
mov
pop
dec
insb
cld
sbb
jne
cmpl
sub
pop
adc
daa
enter
dec
push
or
inc
in
push
out
sbb
dec
lret
push
jl
call
call
and
pop
mov
cmp
and
sub
sub
rclb
push
pop
sub
pop
jle
cld
bound
loopne
push
mov
pop
es
jmp
add
push
inc
pop
pop
mov
test
lret
rorb
sbb
lret
cmp
pusha
or
lret
lret
sbb
sub
add
popl
mov
mov
int3
ja
inc
push
lock
popa
popf
jbe
es
pop
sarb
in
xchg
inc
setge
mov
movsb
adc
call
jns
push
loopne
es
add
jo
jns,pn
cmp
inc
add
or
jmp
xlat
pop
inc
add
and
orb
adc
adc
int
pushf
es
inc
cmp
push
adc
or
dec
out
and
or
xor
lods
push
sub
jo
jnp
adc
dec
test
mov
cltd
lret
push
shrl
test
cmp
fimull
roll
lret
lret
popa
inc
mov
insb
jl
mov
testb
xor
inc
xor
xchg
cmpsb
mov
rep
ss
neg
orb
out
mov
sub
push
pushl
rclb
pusha
xchg
nop
icebp
adc
dec
or
xchg
and
mov
sub
mov
dec
lcall
pop
push
rcr
or
sbb
dec
cmp
inc
push
add
in
pop
sbb
sahf
pushf
dec
push
pushf
pop
mov
xor
call
sub
je
push
popf
inc
mov
cmp
lahf
std
sahf
stos
stos
mov
clc
pop
divl
je
adc
orb
pop
orl
outsl
mov
add
es
adc
or
adc
dec
std
jne
cmp
push
sub
popa
sub
or
sub
push
lock
leave
ret
pop
mov
fwait
ret
clc
xchg
loope
fs
xchg
stos
pop
push
test
int3
je
xchg
pop
rcrb
pop
lock
push
inc
shlb
mov
cmc
testb
or
out
js
and
mov
and
adc
lret
and
add
jne
cmpsl
adc
hlt
mov
rorl
add
cmp
jne
adc
dec
cmp
sub
imul
sub
jnp
mov
adc
ret
and
xchg
rcll
cmpsl
mov
pop
xchg
and
not
and
or
mov
in
cmp
lods
jmp
rcll
or
test
jmp
inc
mov
icebp
xchg
pop
jne
cmp
cld
gs
cmpsb
add
sub
mov
or
mov
rorl
jp
cmp
leave
lret
shl
xor
lock
sbb
xchg
adc
inc
cs
or
ss
pop
jmp
cmp
je
or
out
mov
dec
cmpb
je
mov
add
sbb
sbb
add
or
mov
mov
or
inc
pop
add
or
push
push
fcompl
or
sbb
mov
test
push
adc
or
add
jmp
xor
mov
mov
sbb
inc
sub
inc
inc
add
jle
movsl
ss
push
push
add
push
adc
test
adc
pop
push
add
es
leave
mov
push
call
add
test
adc
das
mov
and
cmpb
jb
test
rorb
or
add
ret
daa
or
jecxz
cmpsl
mov
cmp
ss
sub
mov
es
js
shll
cli
cmpl
mov
faddl
sub
mov
in
cmp
or
add
repz
loope
test
or
push
add
add
or
fistps
cmc
add
add
or
and
fnstenv
fldt
mov
rorl
add
mov
push
out
cs
dec
jns
neg
es
and
or
repnz
call
push
or
add
adc
xchg
sub
ret
scas
test
in
add
lea
push
push
or
insb
dec
sbb
push
aad
add
mov
jno
add
adc
mov
push
or
or
insb
push
inc
pop
add
mov
movsl
repnz
loope
pop
push
xor
loope
adc
jge
mov
rcll
out
mov
push
push
nop
ret
xor
shlb
enter
pop
xchg
sar
and
sbb
aam
movsb
xor
movsb
lock
cmp
cmp
aas
add
ja
out
cmp
mov
fbld
les
add
call
adc
sarb
pop
push
add
jb
mov
jmp
enter
cmp
mov
or
rclb
add
adc
ja
push
inc
jmp
daa
add
pushf
testb
adc
mov
jbe
test
or
popf
ss
add
notl
int
dec
cmpsl
lea
or
add
push
aad
movsl
int
and
push
xor
push
xchg
pop
les
dec
and
add
aam
mov
insb
dec
je
xor
leave
xorb
add
cmpsb
movb
and
push
sub
enter
and
insl
loopne
dec
fwait
push
lds
icebp
inc
neg
sbb
jecxz
and
cmpb
or
jne
pop
cmp
xor
cmp
sbb
jmp
xor
xchg
xchg
popa
movb
jo
inc
dec
insb
adc
lcall
insb
ret
out
scas
dec
ja
cmp
jbe
cmpsb
lret
sub
adc
mov
pusha
cmp
loopne
pop
pop
movsb
popf
int3
cld
and
arpl
cmp
callw
or
add
xchg
insl
cld
aam
and
xor
lods
enter
imull
ss
pop
pop
add
jl
cmpsl
clc
mov
or
loop
fidivl
cmp
je
or
add
dec
jmp
leave
in
add
sub
pusha
fidivrl
add
rcrl
push
fdivr
inc
call
hlt
rol
jbe
xor
xor
cmp
add
adc
mov
out
and
hlt
ja
or
pop
sbb
js
jg
mov
in
push
sub
or
fidivrl
shl
mov
lock
mov
cld
add
mov
add
add
pop
loopne
inc
loop
shll
pop
rcl
scas
add
dec
jae
ficompl
inc
dec
pop
or
popf
add
leave
or
sbb
ret
dec
daa
rorl
or
push
jno
mov
stc
mov
mov
inc
sti
sub
add
movb
adc
gs
je
int
adc
aam
adc
sub
call
lds
adc
and
lea
inc
jo
dec
clc
xchg
or
adc
pop
mov
sub
jbe
jge
scas
sub
popf
mov
jne
jl
stos
mov
popa
push
mov
mov
imul
loopne
add
addb
pop
sbb
rclb
jnp
inc
fidivrl
mov
push
jb
je
and
or
rolb
jne
cmp
pop
jp
addr16
lret
jbe
popa
movsl
rorl
inc
rorb
shlb
adc
add
push
push
insl
push
jmp
loopne
add
insl
cmp
jo
pop
cld
cld
jl
subb
mov
mov
inc
jbe
mov
inc
add
ss
shrb
into
mov
cmp
sbb
jns
ds
add
clc
gs
or
add
inc
je
data16
sti
mov
roll
push
fsubrs
ss
je
dec
mov
xor
adc
enter
jmp
dec
inc
adc
add
xchg
or
xor
mov
cwtl
sub
and
jb
mov
sarl
and
jp
lea
icebp
jo
pop
sbb
add
jmp
call
jne
fmull
insl
xchg
dec
cwtl
fstl
pop
clc
fstps
or
xchg
repz
and
mov
mov
pop
push
test
or
lcall
sti
sbb
pop
rolb
cmp
xchg
push
popa
in
inc
adc
and
jo
dec
add
je
pop
push
addb
pushf
sbb
pop
and
push
dec
roll
rcrl
dec
sti
insb
dec
int
inc
mov
movsl
dec
mov
jno
je
push
or
mov
fadds
mov
add
call
add
push
xor
push
mov
pop
mov
lcall
push
leave
pop
jmp
fldcw
in
movsb
push
dec
mov
xor
pushf
fwait
xlat
das
pushf
fwait
in
out
jo
mov
cs
je
add
sub
mov
je
or
sti
mov
stos
int3
fstps
sbb
sbb
js
ja
mov
or
or
orb
repz
or
xchg
pusha
or
inc
test
push
ficoms
lret
xchg
adc
scas
test
je
push
insb
push
push
adc
aas
movsb
loope
adc
fstl
push
shl
push
icebp
inc
push
pop
mov
jne
add
and
inc
xchg
push
sbb
lret
jp
push
fucom
push
dec
repz
out
clc
addl
adc
push
and
and
xchg
add
sub
pop
mov
es
mov
pop
mov
add
mov
lock
enter
shll
jne
loop
xor
dec
lahf
and
lcall
jb
pop
push
inc
push
push
ja
iret
mov
xchg
jmp
inc
fsubl
add
push
push
fisttpll
cld
popf
nop
loop
popa
push
jmp
sub
es
sub
jnp
cmp
jp
cmp
test
jne
push
push
xorl
sbb
and
dec
push
push
ret
xor
mov
out
lods
scas
loopne
mov
jno
test
je
divl
adc
mov
ret
cmp
je
mov
sbb
iret
push
lods
add
repz
pop
inc
and
faddl
push
mov
call
sub
mov
sbb
inc
pushf
and
stos
bound
aam
inc
mov
sbb
or
or
push
dec
mov
inc
pop
jmp
mov
dec
pop
inc
sbbb
add
mov
movl
rorl
lock
popf
sar
pop
cmp
pushl
lea
mov
push
test
push
out
inc
sub
aas
or
add
or
sbb
sbb
xor
inc
or
mov
dec
fiadds
hlt
daa
clc
inc
push
imul
inc
sbb
jae
imull
xchg
outsb
jmp
ss
xorl
lret
jno,pt
add
pop
adc
sarb
sbb
cs
and
test
loopne
orb
sub
xchg
push
adc
inc
lock
mov
push
dec
adc
push
and
aaa
iret
xor
outsl
inc
add
outsb
push
jbe
jle
pusha
jo
cmp
outsl
ja
jo
mov
xorb
mov
or
dec
popa
fs
push
pop
add
sub
sub
rorb
mov
dec
cmpsl
adc
add
mov
iret
outsb
ret
mov
rcll
cmp
pop
mov
shrl
rcrl
rcl
xor
clc
in
lock
rep
in
xor
les
iret
jne
inc
rcll
ljmp
ss
das
loope
push
and
sub
mov
ret
jmp
insl
es
pusha
and
fiadds
test
xchg
js
hlt
pop
push
inc
mov
xchg
push
inc
adc
and
sub
inc
adc
in
inc
jg
out
mov
or
and
pop
or
dec
or
sub
sbb
js
pushl
xor
cli
adc
bnd
lea
lea
or
mov
loop
jnp
int3
cmp
int3
andb
jo
fcoms
sbb
add
push
ss
fiaddl
sbb
mov
hlt
jl
stos
jo
enter
or
ss
sbb
jo
lock
mov
pop
js
jbe
and
pushf
add
and
sbb
push
mov
push
cli
ljmp
mov
ljmp
push
inc
cmp
xor
add
cmp
cmp
ret
mov
imul
inc
xor
ror
insb
push
repz
fwait
inc
lcall
std
clc
out
inc
int3
imul
add
cmpl
popa
out
les
dec
int
dec
faddp
mov
ss
addr16
bound
call
or
pop
sbb
push
push
push
test
jbe
push
or
lock
rorb
sbbb
and
lods
jns
popf
cmp
jb
jge
nop
xchg
adc
dec
ret
xor
sbb
adc
lock
adc
and
mov
sub
cmp
int3
or
inc
and
call
or
add
pop
icebp
sbb
jl
jnp
xchg
nop
sub
rcr
stc
adc
arpl
jp
add
push
cmp
ja
mov
inc
js
push
jmp
in
nop
test
in
adc
clc
movb
xor
adc
push
or
adc
pop
call
dec
rolb
mov
in
and
or
inc
iret
cmpsb
inc
mov
sbb
mov
fidivrl
stc
mov
ficoms
mov
adc
jl
das
xor
notl
enter
mov
xchg
xchg
cmp
add
add
pop
sbb
adc
sbb
ljmp
fnstcw
inc
les
jnp
and
mov
push
fs
jmp
sarl
nop
pusha
test
push
sub
push
sbb
sbb
adcb
pop
jge
ljmp
push
adc
testl
test
mov
cmp
in
push
repz
loopne
xchg
pop
push
pop
cmc
pop
lea
add
gs
and
les
add
pop
mov
lock
rolb
ret
mov
or
push
shl
add
jp
je
mov
or
xchg
or
iret
mov
clc
lods
xchg
push
sub
or
pop
ret
shl
push
adc
arpl
scas
shl
lret
xor
xor
les
test
jo
jle
lret
lret
or
les
stos
fs
jne
pop
pop
pop
cli
inc
clc
inc
sbb
data16
cmp
je
imul
push
and
daa
mov
out
push
aam
xchg
pop
addr16
decb
popf
xchg
ja
or
cld
cs
scas
loope
push
repnz
jae
xchg
inc
pop
jmp
fcomps
pop
mov
adc
dec
call
or
sbb
pop
adc
push
inc
lret
cmp
adc
sub
fstpt
add
cmp
jb
xchg
adc
and
cmp
jae
xor
or
xor
ret
je
sbb
movsl
add
xorl
dec
or
and
iret
jbe
fiadds
dec
pusha
pop
pusha
and
sub
xor
mov
mov
adc
or
xlat
jge
out
incb
andl
cmp
sbb
cmp
jl
mov
in
fs
jl
cmpsb
sbbl
pop
and
cmp
xchg
sub
cmp
cmpsl
jb
nop
popl
push
adc
mov
fs
rcrl
leave
sbb
pop
leave
push
sbb
push
mov
or
jl
orb
push
push
pusha
pushf
mov
fnstenv
cmp
lret
imulb
popa
inc
ret
call
pop
mov
dec
out
cmp
inc
outsb
test
and
and
enter
in
mov
or
pop
ret
insb
sahf
notl
push
or
popf
sahf
dec
pop
fstps
or
and
pusha
decl
jns
ja
mov
pushf
js
sub
outsl
mov
call
push
je
dec
out
inc
pushf
nop
sbb
xchg
xchg
sub
xchg
test
mov
mov
loopne
cmc
push
xchg
cmpsl
cmp
jb
push
cmpsl
dec
les
xchg
and
push
in
mov
inc
imul
push
or
je
fimuls
push
mov
inc
sbb
inc
lret
mov
cs
out
jle
adcl
lret
test
or
push
pop
mov
xchg
fistpl
mov
and
cmpsl
andl
pop
sbb
push
push
dec
and
pop
arpl
sbb
loope
cld
add
cmp
and
mov
adc
fs
jns
mov
sbb
mov
loopne
pop
rclb
or
jns
das
push
data16
and
xchg
addl
adc
stos
dec
outsl
push
cwtl
sbb
leave
les
push
pop
xor
mov
xchg
inc
es
push
or
mov
xchg
push
call
xlat
ss
stos
add
and
addr16
inc
sbb
add
mov
sbb
jmp
mov
mov
rorb
inc
jp
sbb
add
and
push
jecxz
mov
add
sub
fcmovb
orl
adc
push
adc
mov
into
test
xchg
xor
inc
jl
dec
je
inc
mov
test
xchg
xchg
sub
and
jmp
dec
push
jge
cmp
jle
and
iret
xor
mov
mov
push
and
repz
cmp
dec
and
mov
xor
xchg
mov
cmp
ja
adc
pushf
cmp
lods
adc
stc
cld
pop
jmp
jmp
push
pop
inc
rolb
aad
lock
in
mov
mov
mov
loopne
sbb
jbe
and
in
adc
jge
adc
in
fstpl
or
mov
sbbl
adc
inc
sbbb
je
ja
push
sub
dec
mov
jbe
out
add
sti
insb
mov
lahf
frstor
stos
sub
pusha
sub
sbb
mov
xor
mov
xor
in
imul
push
out
mov
add
xor
fisttpll
and
push
add
adc
fcom
int
push
jo
lret
and
nop
add
mov
ficoms
dec
xchg
mov
push
mov
adc
in
mov
sarb
mov
push
cli
or
rcr
mov
xor
test
or
jne
xchg
add
inc
loop
mov
mov
inc
jl
push
cmp
ss
jmp
xor
movsb
pusha
cmpsl
dec
push
inc
inc
mov
add
xor
dec
inc
sbb
inc
inc
pop
je
pop
movl
je
andb
add
rolb
mov
sti
sub
add
xor
outsb
sub
xchg
xchg
adc
dec
je
loopne
pusha
mov
and
or
mov
mov
movsl
sarb
inc
add
sarb
pop
jle
pop
add
mov
adc
or
push
push
pusha
inc
cwtl
cmp
pop
rcll
mov
aad
pop
gs
rclb
pushf
shll
popa
jno
mov
mov
add
outsb
mov
pop
xchg
sub
cld
push
mov
dec
cmp
fwait
subb
aas
jae
test
inc
dec
shl
mov
test
nop/reserved
push
add
jle
lock
mov
jge
frstor
mov
push
push
orl
and
mov
push
mov
xchg
mov
call
or
sbb
lea
ret
inc
cmp
in
or
xchg
lods
or
outsb
mov
dec
inc
inc
or
jne
sbb
sarb
rclb
fs
adc
cmp
das
mov
icebp
lea
clc
pop
mov
adc
mov
cld
imul
xor
lock
ret
jmp
and
addb
dec
jbe
mov
or
sti
or
sub
out
int
push
cmpsb
inc
pop
pop
or
or
subb
mov
xor
push
or
or
ds
mov
push
push
pop
push
dec
add
mov
push
and
add
int
push
add
out
movsb
or
or
out
sbb
cmp
inc
mov
outsl
add
adc
insl
jge
mov
cmp
les
test
cmp
cmp
mov
mov
arpl
pop
sbb
cmpsb
pop
insl
pavgb
fsub
add
nop
and
adcb
adc
and
fisubl
adc
cmp
jb
and
jg
popf
add
lea
adc
js
inc
aaa
mov
push
sub
push
push
mov
push
dec
jp
inc
pop
adcl
push
clc
add
out
add
and
and
inc
add
dec
add
dec
movsl
std
xchg
mov
cmc
sub
cmpsl
inc
hlt
inc
adcl
sub
frstor
xorl
repz
or
orb
jb
xchg
adcl
ret
and
lds
jmp
cmc
les
lock
filds
aas
push
aaa
push
sub
mov
pop
mov
jne
or
roll
add
or
je
and
popl
add
cmpsl
pop
xor
loope
clc
push
inc
sub
shll
imul
fstps
arpl
mov
mov
loopne
or
mov
movsb
xchg
sub
pop
test
cltd
jnp
imul
lock
push
mov
mov
push
lock
bound
and
sti
sti
sub
mov
test
adc
jbe
scas
push
adc
lock
not
push
rorl
inc
mov
add
ror
hlt
dec
mov
add
les
insb
sbb
lock
pop
pop
or
push
data16
popa
push
mov
lods
or
fidivl
jno
mov
xchg
mov
pusha
xchg
nop
out
dec
xchg
clc
lahf
add
vprotw
jmp
pushl
data16
pop
add
push
dec
lcall
rcll
pop
aaa
lea
sbb
imul
push
les
dec
adc
jne
and
adc
mov
mov
inc
ja
push
push
mov
es
sahf
pop
loope
scas
icebp
imul
mov
filds
add
or
or
inc
mov
ret
push
push
cmpsl
pop
imul
inc
pop
js
into
ret
and
rclb
xlat
add
dec
test
mov
rorb
mov
loope
and
inc
inc
cltd
add
adc
add
outsb
out
mov
out
gs
test
lea
sub
add
xor
or
push
and
and
inc
mov
sbb
pop
cli
adc
push
jne
push
jb
mov
popf
adc
je
arpl
or
subl
arpl
scas
push
mov
incb
xor
or
sbb
ret
mov
pop
lea
xchg
sti
rcll
and
addr16
or
fincstp
pop
mov
inc
jbe
or
cmp
push
pop
test
in
icebp
push
push
das
mov
insb
movsb
sub
xor
bound
jno
fs
jb
mov
loopne
add
push
frstor
clc
jecxz
test
mov
inc
sbb
fnsave
mov
fsubrs
addr16
sbb
je
or
cmp
dec
je
dec
jne
jg
test
arpl
testb
cmp
addr16
pop
js
dec
adc
jge
insl
inc
mov
int
xor
je
or
push
outsl
je
js
in
pop
aam
dec
push
jne
jmp
mov
inc
jae
shrb
sub
insb
je
ja
sub
and
mov
lret
sub
decb
push
xchg
inc
stc
push
test
sbb
mov
cld
fisttps
mov
loop
cmp
jb
inc
filds
sbb
mov
cmp
fcoms
pushf
ds
mov
fimull
arpl
aad
push
xchg
xchg
dec
push
dec
jbe
incl
adc
or
sub
icebp
jmp
mov
pop
add
add
inc
sub
insb
sarb
pushl
jne
push
xchg
xorb
sbb
movb
fdivs
pop
pop
mov
cmp
nop
ljmp
jg
cmp
adc
dec
fs
mov
dec
bound
or
shrb
push
jl
pop
mov
dec
bound
and
sub
push
push
add
shlb
mov
test
iret
test
stos
movb
inc
sbb
sub
cmpsl
adc
adc
xchg
adc
mov
imul
aas
xchg
out
mov
or
pop
sbb
mov
jl
aas
jo
icebp
push
lea
jge
test
sub
sbb
jno
dec
jnp
mov
add
sub
sub
fldcw
dec
sbb
rorl
cmpsl
loope
ret
mov
inc
or
pop
inc
push
cwtl
and
xchg
gs
ficoms
dec
add
das
std
add
gs
or
sub
pop
dec
mov
adc
das
xor
xchg
rcl
sbb
sbbb
sbb
in
pop
pop
xchg
push
sub
xor
inc
cmp
dec
pop
iret
scas
cmp
push
push
inc
push
inc
mov
jae
and
dec
mov
sub
sbb
cmp
cmp
or
jle
push
subb
rclb
inc
sbb
es
push
adc
cmpl
inc
add
mov
popf
push
mov
lret
dec
xor
mov
push
or
add
push
add
mov
mov
or
sbb
xchg
mov
clc
pop
inc
shl
cwtl
stc
add
dec
or
pop
mov
or
test
inc
movb
mov
dec
rcrl
xorb
xor
xchg
inc
push
jne
movsb
and
add
es
dec
inc
and
mov
adc
test
mov
adc
pop
sbb
ret
aas
lret
add
aam
add
cmpsb
popf
divb
add
pop
dec
and
cli
sub
je
scas
cmp
pop
mov
decb
mov
mov
or
and
inc
xchg
rol
pop
xchg
sbb
push
sbbb
sbb
mov
cmp
out
jmp
mov
decl
dec
in
mov
cmp
je
inc
cmp
jae
mov
jmp
ret
cmp
ja
sub
mov
cli
add
mov
mov
adc
mov
fmull
sbb
jne
pop
in
mov
sti
xor
jmp
adc
pop
rcll
in
push
pop
push
int3
cmp
nop
and
loope
add
add
test
lea
or
scas
inc
add
imul
lcall
push
jae
mov
pop
mov
sbb
pop
mov
sti
push
jmp
cmp
push
fldt
out
fldl
xlat
inc
gs
pusha
lods
mov
mov
ret
mov
js
jnp
frstor
cmp
std
les
fisttpl
push
jmp
stc
je
mov
mov
mov
cmovnp
xor
or
outsb
das
repnz
cmp
les
mov
loop
add
clc
dec
movsb
cmpsb
in
sub
fsubl
jno
jo
insb
mov
loope
loop
outsl
jne
out
cmovno
je
shrb
dec
cwtl
cmpb
lds
mov
data16
pop
jbe
leave
cltd
or
cmp
cmc
fisubl
inc
xlat
repnz
mov
stos
xchg
out
pop
cltd
mov
add
dec
lock
fisttps
cltd
add
adc
or
ret
mov
dec
lcall
aaa
pop
sub
add
fldcw
cmp
sarl
test
pop
repnz
adc
cmp
cmpsl
test
adc
in
pop
imul
inc
add
and
aad
inc
loopne,pt
jb
pushf
sbb
xor
cmp
into
jmp
call
in
shll
js
imul
and
add
leave
xchg
mov
sbb
or
inc
andl
add
inc
scas
mov
inc
inc
add
or
jmp
cmp
jne
popf
add
xchg
add
sub
xchg
mov
jmp
shll
jae
xor
inc
pop
enter
rorb
mov
jp
dec
cmpsl
mov
js
outsb
push
test
gs
inc
icebp
icebp
xchg
fdivs
test
scas
add
or
adc
mov
xchg
into
or
jp
xchg
mov
je
jmp
lcall
test
movsl
or
or
rcl
cltd
jne
les
jno
or
adc
fbstp
and
rorb
cwtl
add
adc
xchg
outsl
pusha
mov
pop
out
int3
or
lret
gs
xchg
mov
adc
push
cmpsb
pop
adc
add
pop
add
mov
jge
sbb
add
ret
fimuls
or
adc
pop
fidivl
icebp
sbb
fiadds
mov
enter
push
jmp
push
pop
idiv
cmp
push
push
inc
shr
rcr
shr
rcr
or
jne
div
pop
jg
int
dec
adc
inc
mul
pop
jb
cmp
or
addr16
mov
or
xor
and
adc
or
ficompl
lret
pop
xchg
fxch
pop
add
pop
add
aam
adc
mov
in
mov
sub
fisttpll
test
push
mov
push
clc
inc
pop
cwtl
shll
inc
loop
les
movsl
and
adc
or
xchg
lods
pop
mov
mov
out
push
or
mov
rolw
dec
sbb
hlt
dec
add
jno
inc
pop
sub
rclb
es
dec
imul
push
int3
cmp
adc
mov
and
mov
jae
pop
cmp
add
mov
test
out
add
and
cmp
adc
adc
test
adc
ror
sub
xor
sbbb
pop
add
dec
mov
jo
sarb
cmp
popa
adc
pop
sub
mov
xchg
pop
and
testb
push
pop
rcl
leave
and
adc
test
mov
roll
or
cld
aad
or
pop
inc
les
lock
rorb
jmp
or
lea
rolb
imul
bound
sti
adc
jmp
out
mov
adc
dec
cmp
inc
xor
and
fmuls
pushf
push
mov
inc
push
into
pushl
xchg
and
add
dec
jl
jo
mov
lcall
jl
cmp
sti
push
mov
push
xchg
mov
jmp
in
lea
sahf
xor
jno
sbb
mov
push
push
jne
add
ficomps
add
inc
or
je
xor
call
sub
push
loopne
fwait
pop
adc
mov
pop
xor
jle
sub
imul
and
sbb
xchg
test
lret
pushf
out
add
or
add
or
push
adc
mov
push
jne
jecxz
out
mov
loope
push
lea
lcall
out
out
cmpsl
std
add
add
sar
mov
or
sti
add
pusha
pusha
ret
call
ljmp
aad
mov
hlt
std
adc
add
pop
cmp
mov
cmp
cs
mov
inc
sbb
cmovo
test
mov
test
push
dec
add
xor
les
sub
into
cmp
ljmp
add
mov
cmp
lcall
addl
pop
fimull
xchg
sbb
ret
pop
mov
in
jbe
dec
push
or
or
and
out
lods
mov
roll
loopne
adc
push
hlt
mov
pop
test
je
mov
jmp
lcall
cmp
add
in
push
inc
mov
xchg
aaa
mov
jno
test
xor
pushf
add
adc
sbb
push
or
dec
inc
lea
add
adc
hlt
pusha
and
inc
push
xchg
xchg
mov
pop
pusha
fcoms
push
inc
adc
or
jl
dec
sub
or
mov
xor
sarl
add
mov
cmp
movsb
cmpsl
push
test
aaa
pop
out
rolb
jno
add
js
mov
inc
cmp
ret
add
cmp
jne
movzwl
mov
inc
add
int
push
jmp
pop
sub
pop
pop
cmp
push
clc
test
dec
cmp
xor
pop
cmp
jg
dec
mov
call
stc
add
dec
add
iret
lcall
xor
mov
xor
cmp
adc
xchg
sbbb
je
dec
or
jp
xor
or
mov
jecxz
pushw
xchg
mov
cmpl
mov
aaa
mov
cmp
mov
adc
cli
or
ds
or
adc
mov
pop
movsl
lds
mov
fsubrs
sub
and
adc
pop
inc
pop
mov
inc
add
sub
jmp
cmpsb
leave
push
or
pushl
in
pop
pushf
xorb
add
xor
rcrb
xchg
rclb
inc
imul
push
or
inc
inc
sbb
cmpsl
shlb
xchg
push
and
nop
or
aas
mov
out
inc
mov
inc
or
dec
dec
stc
scas
xchg
cmp
pusha
mull
mov
mov
add
xchg
push
push
fs
dec
xchg
sub
addb
scas
sub
test
mov
jle
lea
scas
dec
pusha
and
shll
sub
std
jno
mov
test
or
sbb
test
xchg
xorl
lret
loopne
mov
repz
push
lods
sti
mov
mov
lea
mov
mov
jne
xor
adc
push
sub
mov
fdivrs
jne
ljmp
xor
cmp
adc
icebp
or
cmp
sahf
jmp
inc
je
xchg
cmpb
leave
in
fnstenv
push
jg
addb
test
or
js
cmp
cmp
pop
mov
in
fxam
pusha
push
es
dec
out
sbb
fldl
adc
or
jo
loope
mov
ds
lcall
cmpsl
or
and
js
sbb
cmp
or
jno
daa
add
or
add
jmp
sbb
xor
push
mov
andl
xchg
pcmpeqd
lods
adc
rclb
sbb
test
pusha
adc
test
mov
add
inc
sarb
je
mov
adc
mov
add
jge
mov
xor
push
dec
addr16
mov
and
mov
mov
push
into
imul
sub
and
adc
pop
inc
orb
adc
cli
or
inc
pop
sbb
dec
mov
adc
inc
js
mov
into
or
and
xchg
mov
cmp
int3
pushl
jno
fistpll
push
and
outsl
shl
fcomps
into
sub
dec
lods
test
dec
or
mov
movsb
andl
mov
push
xchg
pop
pop
lods
lret
push
mov
pusha
and
sbb
gs
lock
sbb
dec
divw
rclb
dec
sti
sub
jge
addr16
inc
in
pusha
dec
pop
aam
rolb
jmp
loope
add
pop
jp
enter
mov
mov
sbb
or
inc
loopne
mov
mov
and
pop
ds
pop
nop
push
lea
dec
mov
ret
insl
insb
cmpsl
icebp
and
jg
push
call
and
pusha
ljmp
sub
insl
or
mov
lcall
gs
mov
lock
decl
adc
movsl
pop
rorb
push
rorb
jge
jmp
and
call
enter
jl
data16
jne
inc
mov
or
push
xor
loope
jmp
push
popa
add
pop
or
dec
aad
movsb
xor
xor
adc
xchg
and
ret
cmp
shr
sbb
xchg
xchg
pop
call
xchg
mov
pop
aaa
mov
imul
xchg
shr
icebp
mov
mov
mov
dec
insl
add
lret
mov
call
test
push
mov
jp
das
cmp
and
pop
add
loope
xor
sbb
out
cmpsl
mov
push
cmpsl
push
push
mov
inc
sbb
popf
lahf
loopne
cs
mov
fistpl
push
and
mov
or
push
inc
cmp
lods
out
xor
nop
mov
shlb
jl
sub
es
add
pop
jbe
dec
pop
adc
sub
adc
je
pop
lock
shll
addr16
mov
dec
xchg
mov
dec
je
push
sub
testb
sbb
sbb
les
sub
addb
nop
mov
testb
or
adc
mov
scas
xor
add
lahf
pop
sarb
xchg
fldenv
jbe
pop
xor
bnd
jp
leave
inc
pop
sub
dec
into
jl
out
or
inc
adc
jp
add
mov
pop
andl
es
in
dec
push
or
adc
jb
mov
sub
jb
sub
xor
cmpsb
mov
sub
in
shlb
inc
cmovs
in
push
push
pop
add
cmp
push
cmp
js
mov
or
test
leave
and
mov
xchg
cwtl
pushf
es
dec
xor
inc
icebp
imulb
add
cmp
enter
movsb
dec
add
mov
pushf
xor
jle
dec
dec
imul
les
and
lcall
shlb
movsb
pusha
inc
sbb
aam
dec
lcall
addl
or
push
mov
sbb
push
jle
or
loope
mov
ljmp
mov
adc
mov
nop
clc
and
mov
add
pop
fcomps
test
js
add
or
pop
repz
adc
inc
pop
jne
push
cmp
jl
iret
dec
and
mov
pop
fcoms
or
and
pop
into
inc
ficoms
jp
pop
cmp
ss
cmp
xchg
dec
je
sub
adc
enter
inc
push
jecxz
pop
inc
and
xchg
in
fisubrl
adc
je,pn
add
fmuls
mov
cltd
push
push
popf
push
insb
cld
pusha
pop
jg
pop
int3
sbb
rorl
jp
outsb
sbb
inc
inc
xor
cs
mov
cmpsb
aam
ret
jbe
dec
pop
je
push
pushf
mov
icebp
sub
mov
loopne
mov
nop
mov
adc
mov
call
std
je
shrb
inc
dec
sti
pop
pop
add
cmpsb
add
sbb
fidivrs
inc
add
add
je
nop
cmp
add
adcl
outsl
sbb
sarb
mov
mov
pop
push
scas
jo
sub
xchg
adc
or
xorb
mov
dec
add
pop
add
adc
sbb
xchg
pop
jmp
sbb
dec
add
prefetch
popa
sarl
call
and
shlb
push
dec
iret
je
or
and
inc
sbb
adc
jmp
sub
or
ja
jns
addl
enter
jnp
repz
and
scas
aad
push
push
test
adc
and
adc
movsl
or
add
gs
je
push
push
sti
xor
xor
bndldx
pop
lods
or
push
xor
mov
push
rolb
repz
and
lds
insl
cmc
loopne
dec
inc
mov
mov
dec
cmp
mov
sub
and
into
mov
push
shlb
inc
ret
push
mov
jo
out
push
into
mov
out
mov
jne
loop
cmp
insl
outsb
or
cmp
int
xor
loop
or
mov
sbb
mov
push
jmp
insl
sub
jmp
xor
cld
pop
cmpl
ljmp
mov
dec
push
mov
xchg
mov
adc
mov
push
push
push
pop
js
adc
pop
xchg
call
popa
movsb
enter
dec
sub
push
pop
arpl
and
fs
and
andb
and
outsb
pusha
pop
inc
lods
lea
nop
mov
add
jb
jecxz
add
jne
and
lea
cmp
ror
sub
push
rclb
movb
mov
and
in
mov
mov
push
push
jbe
sub
push
add
lods
and
dec
jl
jecxz
push
mov
mov
pop
sbb
add
call
and
in
or
into
fcoml
mov
dec
dec
leave
and
stos
nop
pop
es
dec
inc
sub
jo
lcall
call
mov
mov
sahf
xchg
jle
mov
jbe
xchg
xchg
cld
ja
mov
ss
pop
rolb
lods
cmp
sbb
leave
inc
ja
xorl
xchg
mov
adc
xor
cmpb
je
adc
push
add
imul
insl
push
imul
test
enterw
xchg
repnz
cmp
mov
inc
mov
inc
inc
adc
fldenv
and
popa
jne
je
cmc
or
sub
cmp
mov
jg
and
xor
lea
clc
sbb
jge
test
sbb
dec
dec
add
mov
mov
adc
enter
xchg
xchg
dec
shl
add
shrb
sbb
incl
hlt
mov
add
shr
or
add
add
sub
and
or
jo
pop
or
cmp
cltd
adc
pop
lea
and
and
roll
test
sub
push
mov
outsb
rcr
pop
push
andb
add
mov
pop
jle
pop
push
ret
xor
leave
add
and
test
je
sahf
rclb
or
in
stos
jge
inc
inc
scas
idivl
neg
push
mov
mov
cmp
mov
sbb
cs
adc
inc
push
sbb
sbb
fcoms
push
inc
and
fsts
xchg
dec
jae
or
icebp
sbb
sub
sbb
je
fbld
sbb
dec
jne
pop
pop
pop
xor
adc
adc
call
adc
aam
xchg
adc
jmp
mov
in
lock
je
sbb
aaa
mov
push
loopne
jo
push
out
sti
dec
pop
xor
adc
sbb
and
jne
pop
repnz
mov
shlb
push
mov
or
or
shll
shll
push
or
xchg
sbb
pop
in
repz
dec
xor
and
test
and
xchg
add
or
or
nop
and
mov
shll
dec
xor
adc
or
mov
add
and
cmpsb
sbb
and
dec
frstor
lret
and
cmp
mov
xchg
mov
dec
or
test
adc
scas
pop
jns
test
add
test
inc
test
mov
roll
pop
je
or
sub
sub
sbb
and
lret
adc
lock
in
shr
inc
and
mov
and
outsb
jg
jecxz
sbb
fmuls
sbb
mov
arpl
sub
xor
loopne
xor
push
aam
aas
sub
aaa
jge
je
pushf
inc
flds
and
ds
mov
pusha
loope
pop
sub
cmpsb
adc
inc
dec
and
adc
cmp
push
fnstsw
pusha
pusha
scas
push
cmpsb
or
pop
cmpb
or
fs
adc
sti
add
mov
out
test
fisttps
mov
repz
stos
mov
pop
das
dec
je
add
dec
dec
orl
adc
mov
xchg
out
enter
pop
testl
or
xorb
pop
xorb
mov
jb
sbb
jmp
push
and
or
rorl
adc
andl
fstpl
add
add
push
bound
jp
daa
mov
inc
dec
push
test
jno
pop
sub
mov
hlt
adcb
je
inc
mov
test
sti
lret
loopne
movsl
cmp
mov
mov
xchg
push
mov
iret
enter
fldz
shr
mov
xchg
fldl
les
sub
mov
outsb
pop
sub
jmp
sub
push
lcall
lcall
inc
test
int3
pop
pop
push
inc
adc
hlt
add
pop
pop
popa
fsubrl
xor
push
pop
lret
clc
push
andl
loope
pop
in
data16
cmpl
jbe
or
or
push
inc
add
mov
test
enter
push
ficoml
mov
pop
sbb
fimull
mov
sbb
jp
dec
dec
adc
sbb
shl
adc
mov
push
push
sahf
jmp
push
push
js
pop
mov
mov
push
in
or
pop
scas
sbb
xchg
and
mov
push
or
mov
imul
int
out
push
xor
jg
inc
and
jg
mov
lret
push
jmp
or
lds
sbb
xor
push
cmp
fiaddl
add
mov
or
sbb
inc
cmp
js
adc
jl
jae
xchg
dec
add
in
mov
sbb
hlt
adc
pop
cltd
push
outsl
xor
pop
cmp
ds
out
add
aad
mov
sar
inc
sbb
fists
xchg
js
add
sbb
jmp
jno
mov
jp
mov
rorb
loope
adc
or
jno
lods
sbb
addr16
std
or
outsb
sbb
mov
adc
mov
pop
rcll
fmull
and
adc
sub
incl
pushl
lea
push
push
mov
or
mov
incb
xlat
sahf
out
xor
or
and
lea
xor
mov
imul
mov
xchg
popf
adc
inc
adc
jns
in
inc
add
sarb
cwtl
or
jae
sbb
jecxz
push
pop
cld
outsl
clc
mov
mov
push
cs
cmp
subl
cmpps
sahf
push
sbb
shlb
cmp
adc
and
shrl
xchg
mov
rcr
stos
jmp
inc
or
push
clc
jecxz
mov
jb
pop
fadds
into
cmpsl
xor
aaa
mov
loop
in
mov
pop
cwtl
shlb
lcall
jne
xchg
shrl
or
inc
and
sbb
shll
push
or
mov
mov
dec
jle
out
mov
and
pop
sub
inc
sbb
xor
push
add
in
push
ret
fsubrs
sub
ljmp
loopne
ljmp
adc
fstsw
popa
mov
sbb
loop
add
xchg
cmp
sub
and
cld
push
in
sub
fldcw
push
push
mov
lock
ret
or
sub
loopne
or
fwait
sahf
adc
jbe
dec
fwait
sbb
xor
dec
lock
or
call
push
dec
outsb
adc
decb
push
and
cmp
ljmp
sbb
mov
insb
clc
push
scas
imul
cs
pop
ret
loope
and
pop
or
and
or
add
hlt
xor
sbb
dec
data16
inc
inc
arpl
mov
mov
push
and
lea
cmp
jo
xchg
add
test
test
lea
or
rcr
add
inc
adc
into
inc
jecxz
rorl
mov
add
outsb
les
ficoms
lret
out
shr
lretw
xorl
push
add
pop
xor
jne
std
cli
addl
or
mov
fisubl
sbb
jne
mov
test
test
popa
add
orb
adc
test
and
jb
push
pop
in
sbb
sub
movsb
xchg
jne
push
adc
xchg
cmpsl
clc
sar
pop
adc
push
sub
popl
cmpsb
dec
dec
push
popf
nop
cmp
xchg
movsb
test
jns
push
jne
addl
sbbl
cmp
and
add
les
cld
push
insl
sub
dec
jmp
jl
and
das
dec
xor
or
jnp
test
jmp
jecxz
cmp
push
pusha
stos
ret
aaa
dec
push
add
mov
inc
mov
jecxz
sub
dec
mov
aas
mov
rcl
xor
ds
test
mov
out
jl
test
add
mov
or
stos
stos
mov
nop
inc
outsl
stos
pop
pop
fcomps
jne
and
mov
sub
movsl
add
ret
loopne
dec
pushf
mov
cltd
and
add
add
pop
roll
or
bnd
dec
int3
loopne
lea
inc
insl
mov
pop
jo
lret
loopne
xor
dec
pop
jge
ret
xchg
inc
or
loop
rolb
push
fstpt
mov
outsb
mov
cltd
insb
pop
and
jae
shll
dec
or
inc
inc
outsl
fwait
pop
les
into
or
dec
mov
add
or
je
and
sahf
sbb
dec
mov
aam
cmp
div
jb
incb
jae
jecxz
pop
gs
dec
insl
jmp
jns
loopne
test
and
test
push
filds
pop
ja
enter
loopne
inc
add
dec
ljmp
sti
cmp
dec
dec
stos
inc
sub
test
pop
insb
call
dec
xor
sub
rorl
dec
sbb
in
lods
mov
push
stos
mov
out
and
dec
xlat
cs
lock
popf
je
mov
aam
jo
pop
cwtl
ds
push
or
mov
out
and
lock
add
adc
and
aaa
sbb
ret
mov
sub
sarb
ret
movlps
xchg
aam
adc
out
or
ret
sub
dec
mov
inc
cli
int3
pop
hlt
test
lea
sub
add
mov
pop
or
cli
setl
add
js
fs
push
pop
dec
jg
bound
pop
add
mov
dec
jns
nop
xchg
mov
inc
lock
adcl
mov
sbb
inc
mov
add
sbb
mov
sbb
addl
mov
add
lea
lock
add
mov
into
out
outsl
xchg
jle
jl
mov
out
and
add
add
lcall
ret
jge
inc
inc
and
add
imul
jecxz
js
rolb
xchg
add
sub
stc
inc
mov
adc
and
inc
loop
stc
and
push
sbb
xchg
or
or
add
pusha
fs
inc
cmpl
or
push
into
pop
cmp
and
pop
mov
mov
or
xchg
push
jl
aaa
test
xor
pop
or
xor
adc
mov
or
shll
sub
sbb
xor
mov
fldl
mov
mov
cmp
pop
mov
mov
inc
jmp
mov
sub
or
xchg
add
pop
in
cs
pop
test
sub
cmp
ja
push
dec
jmp
movsl
push
adc
fistpll
add
xchg
adc
add
call
adc
sub
or
movsl
mov
scas
rclb
adc
mov
jmp
push
push
jmp
adc
push
lock
mov
push
push
xchg
sub
jle
andb
cmp
jle
jle
cmp
adc
mov
push
xor
push
roll
dec
push
mov
or
xchg
lods
mov
sub
loopne
add
push
jmp
cmp
jg
clc
mov
jae
incl
sub
mov
mov
mov
pop
jge
pop
jnp
jae
cmp
test
addr16
nop
mov
adc
es
jae
popa
inc
cs
imul
sbb
push
inc
dec
bound
scas
inc
add
outsb
mov
arpl
or
dec
js
cs
or
sub
inc
or
call
dec
cwtl
adc
sahf
jne
rorb
and
adc
sub
cmp
mov
dec
add
jbe
sub
mov
std
ds
mov
test
add
nop
mov
das
call
cmp
adc
jecxz
add
dec
mov
jmp
lea
rcr
rcrb
mov
dec
mov
jmp
cld
hlt
sbb
and
cli
and
sub
stc
push
adc
notl
insb
push
jg
std
jecxz
add
pushf
jmp
mov
mov
mov
mov
mov
dec
lods
sub
std
jne
movsb
stos
or
pop
pushf
xor
testb
repnz
cwtl
add
lcall
sbb
icebp
inc
jae
test
cmp
xor
test
pusha
dec
xchg
sub
jmp
mov
jle
mov
or
cmp
add
dec
test
or
push
lods
sarl
push
push
jo
imul
and
je
add
adcl
jb
mov
dec
mov
xor
mov
or
inc
cmp
int3
fs
decb
mov
mov
ret
and
sub
lea
nop
lcall
pusha
andl
adc
sbb
aas
out
jle
std
mov
or
ds
mov
aam
inc
mov
movb
testl
sub
jne
jne
xchg
int
jnp
into
dec
mov
inc
or
lods
mov
cmp
jne
hlt
int3
add
shr
xchg
jne
mov
jp
and
add
loop
test
pop
test
jle
rcrl
test
sub
movsb
movzwl
xchg
ss
jp
scas
sbb
cld
jns
mov
stos
cmp
dec
lock
dec
jecxz
dec
ja
push
fs
mov
pop
cmpl
insl
mov
jmp
inc
xor
incl
shr
jg
add
sub
out
inc
aaa
mov
test
js
mov
fsubl
aam
lods
add
or
mov
xor
sbb
or
xchg
jne
add
into
or
adc
inc
mov
insb
ret
or
idiv
je
sti
ljmp
mov
insl
fadd
loopne
shr
or
mov
shl
call
jne
pop
mov
push
mov
push
push
ja
sbb
sub
aam
mov
mov
cmp
add
ficompl
lock
jae
sti
pop
fidivs
in
fiadds
push
jnp
pop
dec
call
mov
mov
fidivrl
jb
or
leave
dec
push
push
fmull
pop
nop
dec
ja
es
orb
cmp
or
sub
sbb
inc
out
lret
into
jmp
mov
dec
sub
in
rcrb
ds
dec
and
sbb
rcrb
inc
cmp
int3
sbb
xorb
lret
js
into
mov
sub
add
negb
sbb
add
adc
push
sbbb
add
test
inc
mov
inc
or
adc
mov
or
jns
daa
ficoms
filds
xchg
repz
repz
inc
push
mov
dec
jmp
adc
push
xchg
scas
dec
mov
push
push
jl
cmp
pop
push
mov
mov
mov
jns
ljmp
enter
mov
dec
ret
outsb
fwait
jp
je
dec
ljmp
aaa
or
jmp
cmp
pusha
inc
arpl
dec
ja
or
ljmp
add
or
popa
sbb
xor
and
dec
jecxz
cmp
push
or
jne
out
or
add
xor
pusha
fst
mov
dec
xor
pop
fisubrl
ss
pop
outsl
popf
addr16
sbb
push
adc
ss
add
mov
fisubs
cmp
mov
push
sbb
dec
arpl
push
cmpsl
movsl
adc
aad
add
push
pavgb
test
das
add
mov
call
adc
mov
mov
adc
repz
pop
outsl
addr16
add
add
adc
arpl
cwtl
les
inc
push
loopne
add
xorb
fsubl
push
lock
push
sbb
popa
faddl
movl
rorb
pusha
mov
sub
cld
dec
icebp
fistpl
cmp
mov
add
cmp
je
add
je
push
js
dec
pop
cwtl
repnz
in
call
sub
jecxz
push
dec
loop
jl
pushl
decl
sbb
inc
jmp
arpl
bound
and
push
inc
pop
xchg
mov
push
and
sahf
fidivl
inc
test
loope
in
sub
sub
push
add
dec
insb
push
test
movd
unpcklps
add
jmp
fwait
lret
cmc
xchg
rorb
and
xchg
push
push
fistpl
fstps
pop
push
adc
mov
xchg
mov
jnp
testl
shl
fstpl
jp
push
push
loop
adc
loopne
pop
mov
mov
jge
fisubs
pop
jge
mov
xchg
push
pop
mov
cli
lea
aaa
mov
mov
dec
out
ret
daa
sarb
outsb
adc
fcom
xor
inc
jmp
in
push
js
adc
sysexit
push
data16
ljmp
inc
jmp
mov
adc
ret
ret
add
and
nop
adc
push
or
mov
mov
jo
or
test
outsl
mov
andl
or
in
lea
nop
mov
add
ret
push
sbb
push
outsb
sbb
lret
ret
sbb
add
adc
sub
inc
into
xchg
xor
test
leave
sub
xchg
orb
mov
les
sub
or
pop
or
sahf
movsl
aad
inc
insb
jge
rcll
mov
adc
addl
xlat
inc
add
pop
loope
adc
sub
je
and
pop
mov
int3
push
rcl
rcrl
aad
xlat
fcomp
add
jl
sti
fstpt
fdivrp
inc
or
xor
inc
add
inc
jecxz
and
cmc
imul
aam
lock
jp
jb
subb
adc
push
fadds
add
mov
push
mov
xchg
sbb
lods
rcl
fstpl
cmp
inc
dec
into
cmp
das
or
push
cmp
test
and
xor
mov
adc
push
jo
xor
fldcw
adc
push
mov
jmp
add
sbb
inc
imul
lea
sar
inc
in
movswl
sbb
lods
data16
neg
stos
mov
test
xor
pop
loop
sbb
dec
cli
into
pop
mov
sub
ret
clc
adc
mov
inc
sar
stc
xchg
mov
dec
aam
jne
inc
jp
mov
and
stos
lock
les
or
out
adc
xchg
or
dec
ljmp
mov
and
and
lea
pop
sbb
xor
lea
mov
xchg
push
xchg
icebp
and
ja
jnp
icebp
mov
add
cs
enter
into
jne
inc
testl
sti
fsubrp
dec
lods
jne
inc
inc
or
cmp
and
adc
fdivs
rolb
dec
rolb
push
mov
jge
dec
or
dec
sub
addr16
push
or
cwtl
call
push
pop
enter
test
cmp
adc
movsb
out
mov
push
addl
xchg
and
inc
dec
adc
inc
test
rcrb
imul
inc
cmp
push
xor
dec
cs
loopne
inc
mov
mov
adc
sti
adc
pop
push
or
sbb
pop
inc
mov
or
cmp
movsl
and
inc
xchg
ljmp
divl
push
hlt
shrl
or
or
mov
shl
jmp
dec
addr16
lret
inc
lods
lock
push
mov
testb
nop
idiv
cli
inc
cli
notb
mov
cwtl
stc
aam
adc
sub
or
push
loopne
mov
ret
push
jnp
out
add
sub
mov
xchg
dec
push
aaa
loop
dec
fs
mov
mov
push
leave
mov
xor
mov
rolb
js
clc
mov
xor
pop
rorl
inc
mov
lock
dec
das
les
mov
loop
test
or
mov
mov
data16
loop
xchg
mov
out
jge
xchg
imulb
and
mov
adc
cli
sub
xor
add
adc
xor
sbb
sub
sbb
fs
call
inc
test
dec
nop
jmp
push
aas
inc
mov
ljmp
push
loopne
push
call
or
cmp
cld
lea
fcmovu
mov
mov
subl
jg
jle
and
and
mov
sbb
inc
inc
sbb
idivb
mov
cmp
sbb
test
push
push
sbb
mov
out
and
jge
inc
pop
enter
jge
adc
setge
jne
cmp
in
sub
inc
cmp
mov
jns
mov
add
sub
insb
loope
cmp
inc
add
xchg
notb
inc
mov
push
add
push
nop
cmp
or
bound
pop
add
add
out
adc
mov
loopne
lods
or
pop
lods
shr
mov
add
or
sbbl
adc
fsub
or
lcall
xor
fiadds
movsl
out
dec
outsl
imul
jmp
loopne
jmp
loopne
fadds
jle
mov
push
and
test
adc
rol
adc
xchg
cmp
dec
out
mov
sub
and
sahf
sbb
out
add
or
mov
add
sub
xlat
mov
enter
lea
sbb
adc
lret
jo
xor
stos
nop
cmp
lcall
lcall
push
sub
push
shlb
flds
outsb
and
dec
int3
add
les
dec
mov
cmp
shll
lods
outsl
or
into
or
mov
inc
mov
fisubl
jle
in
dec
pop
push
jg
dec
mov
dec
cmp
jge
sub
cmpb
addr16
pop
stos
add
dec
cmp
nop
sbb
arpl
dec
add
add
fadds
dec
cwtl
mov
fidivrs
dec
or
jne
dec
mov
xchg
adc
int
pushf
adc
push
inc
ret
and
add
push
jo
movsb
mov
test
rcrb
adc
inc
or
add
add
xor
cmpsb
or
adc
and
loop
inc
pusha
fs
mov
mov
push
mov
cmp
imulb
push
adc
sbb
sbb
adc
xor
xchg
dec
jns
inc
andw
je
push
add
jmp
pop
pop
scas
add
fadds
ret
imul
sub
mov
and
push
ret
lods
push
imul
or
jae
mov
lea
test
jo
mov
mov
iret
xor
imul
pusha
inc
and
rolb
pop
and
pop
pop
loopne
add
int3
mov
ret
jne
movsb
jnp
sub
and
ret
or
les
push
push
xchg
sbb
inc
push
pop
jae
xor
jbe
or
or
add
mov
mov
or
add
or
adc
jl
mov
pop
popf
jmp
pop
or
pop
sbb
addr16
push
add
pusha
in
jbe
fdivrl
and
and
les
jge
in
add
call
cmp
sbb
jp
cmpl
cmpsb
in
and
insl
cld
mov
movsb
dec
lcall
sahf
xchg
or
or
inc
sarl
sub
into
xchg
into
mov
push
jge
pop
or
stmxcsr
inc
movsb
adc
test
add
into
or
add
or
movsb
sbb
adc
xchg
into
jle
pusha
cmp
out
stc
mov
xor
inc
jg
mov
into
into
mov
pop
and
pop
sub
mov
nop
pop
popf
mov
jnp
pop
mov
dec
push
jo
or
pop
imul
add
bound
and
cmp
ficomps
hlt
push
out
ret
test
lahf
pop
test
repnz
add
add
inc
mov
xor
adc
lcall
inc
imul
pop
pop
mov
inc
sub
jmp
jmp
lret
ret
insb
xor
xor
out
adc
cmp
push
scas
lods
popa
arpl
jg
adc
das
xchg
pop
sahf
dec
xchg
sbb
in
syscall
jne
inc
out
sar
repz
cs
int
jg
inc
mov
pop
mov
inc
mov
pop
dec
add
adc
fucomp
push
jmp
push
xchg
xchg
dec
pop
test
fcom
sti
test
sbb
inc
aaa
cmp
rcl
inc
mov
dec
mov
popa
and
dec
loop
push
and
sbb
mov
xchg
dec
cwtl
adc
movsb
mov
xor
and
lret
pop
mov
mov
ret
adc
jbe
add
loop
jnp
sbb
xor
ret
fs
or
test
push
pop
addl
jbe
push
mov
mov
lods
push
push
sub
add
mov
cli
aad
dec
je
mov
push
je
adc
shlb
mov
and
add
nop
dec
div
pop
je
sub
dec
push
and
jge
jge
jge
add
and
movsl
jno
xchg
dec
sbb
or
call
and
testl
mov
add
ja
dec
inc
addl
push
inc
mov
xchg
jno
ljmp
mov
notb
or
ss
ret
push
cmp
popf
leave
xchg
scas
es
insb
dec
addb
sbb
sbb
add
dec
or
sub
and
inc
pop
mov
cmpb
or
movb
jmp
xchg
add
insl
decl
push
mov
adc
outsl
pop
fcmovnbe
or
adc
aas
cmp
push
es
mov
or
mov
sarl
jmp
cmp
jne
xor
fwait
mov
cwtl
loop
jp
je
pop
add
cmpl
mov
fs
aam
mov
sahf
ret
pop
add
stos
or
mov
push
js
inc
data16
xor
in
testl
jg
clc
jb
dec
push
or
mov
cmpsl
pop
call
and
jns
movsbl
ja
sub
sahf
add
jmp
mov
and
cmp
push
add
sbb
xchg
and
es
xor
lods
mov
pop
adc
fcomps
push
mov
not
xor
icebp
mov
add
mov
sbb
arpl
xchg
mov
mov
pop
outsb
or
jne
ret
jle
mov
outsl
sbb
sub
subw
add
popf
es
push
stc
xor
adc
dec
les
add
inc
inc
inc
push
add
clc
int
sbb
add
add
add
sub
aas
pusha
out
inc
lcall
push
add
mov
jb
pop
push
sub
push
repnz
inc
leave
cmp
rcrb
adc
and
outsb
push
jmp
jns
pop
test
fs
decb
push
mov
and
and
test
push
adc
mov
popa
icebp
dec
sub
xchg
in
sub
rorl
repnz
xchg
jo
rorl
add
dec
push
gs
jge
cmpb
or
shlb
rorl
fisubrl
or
repnz
pop
sbb
inc
imul
and
jne
pcmpgtb
jns
adc
out
enter
daa
sbb
push
jo
add
fwait
aas
mov
add
hlt
xchg
and
pop
ret
mov
cmp
mov
lea
or
dec
repz
hlt
leave
or
add
jge
outsb
insl
lahf
fcmovb
jmp
int3
lret
imul
add
bound
scas
dec
dec
ret
bound
pop
add
mov
sub
and
popf
frstor
lock
dec
add
bound
add
movsb
adc
fnstcw
or
fiaddl
pop
inc
testb
or
dec
testl
cmp
cli
mov
xchg
mov
jo
or
mov
add
fs
mov
pop
jp
test
aam
adc
adc
insl
lea
add
je
lcall
stc
push
pop
push
and
rolb
jmp
push
mov
ljmp
lea
jmp
cmp
xchg
ficoms
lods
sbb
add
adc
iret
shl
andl
je
add
add
repz
mov
sbb
dec
and
sub
stos
mulb
sub
jne
mov
sbb
inc
shrb
or
ret
push
add
push
test
shlb
mov
dec
ret
adc
pop
rorb
pusha
sub
fwait
mov
add
pop
std
add
xor
xchg
adc
or
jmp
add
aaa
add
movb
cmc
xchg
loope
shlb
hlt
leave
inc
loopne
ljmp
or
add
scas
push
or
mov
add
and
inc
sub
inc
sub
and
adcl
or
shll
jno
adc
ljmp
aad
aad
dec
in
pop
dec
scas
pop
adc
add
scas
add
mov
inc
lods
inc
add
lret
aad
cmp
cmp
hlt
push
mov
sbb
mov
cld
cltd
and
js
rclb
aad
pop
fdivrs
shlb
mov
ret
sbb
push
xchg
je
daa
stos
fcomi
mov
sbb
test
mov
call
lahf
mov
mov
incl
pop
mov
into
es
mov
je
push
add
add
jb
cmp
ja
add
cmp
adc
cmp
push
lcall
or
pushl
neg
mov
pop
pop
fsubs
subl
mov
or
addb
dec
insb
testb
mov
push
push
clc
addr16
push
mov
or
in
adc
clc
push
dec
cmp
or
and
push
test
xor
push
pop
xlat
icebp
outsb
push
das
cmc
xchg
dec
hlt
sub
cmc
mov
addb
push
push
int
aad
or
adc
mulb
push
or
shlb
dec
push
fstps
in
jmp
popa
clc
adc
lret
in
movsb
cmp
xchg
pop
movsb
shrb
in
pop
adc
testb
inc
out
fdivl
mov
cltd
inc
outsb
je
mov
in
test
mov
cmc
comiss
jo
scas
mov
mov
jo
inc
repz
pop
rorl
aam
loope
dec
dec
dec
outsb
aas
enter
add
int3
pop
or
mov
mov
nop
pop
push
mov
paddsb
push
movsl
jl
fdivp
dec
or
xor
les
call
ds
cmpsl
in
mov
jl
xchg
or
push
cmp
es
ret
pusha
cmc
pop
rolb
jb
xchg
and
shr
lock
in
sbb
test
mov
cltd
mov
xor
movsb
sub
in
or
sbb
cmp
popa
lds
xchg
or
in
js
leave
mov
popa
lahf
lods
push
push
mov
prefetcht2
call
ret
out
inc
insb
test
push
notb
or
jne
sbb
in
adc
add
cmp
out
das
xor
add
movsb
cmp
or
xor
pushf
je
push
out
mov
sub
dec
lcall
test
int
inc
xor
push
inc
setb
sbb
add
xor
repnz
decb
or
jnp
std
lret
shlb
jecxz
nop
inc
pusha
pop
jae
in
cmp
sub
sarb
leave
aam
dec
inc
dec
cmp
jg
ret
push
sub
es
pop
pushf
fmull
mov
push
mov
daa
rorb
xchg
je
push
in
stos
in
in
inc
mov
leave
decb
or
clc
push
fmuls
arpl
loopne
das
movsl
fildl
sarb
sbb
fsubs
test
es
les
ret
mov
movsl
ret
xor
adc
add
add
xchg
or
enter
adc
and
or
jb
adc
sbb
mov
pop
lret
jge
call
stos
aam
fbstp
add
ret
cmp
nop
or
cld
jne
push
enter
xchg
or
mov
dec
add
or
adc
outsl
test
add
sarb
xor
or
mov
add
mov
jg
add
lcall
or
jmp
and
test
mov
lods
add
push
movsb
xor
add
in
lds
andl
dec
push
xor
mov
mov
call
cmpsb
adc
in
aas
sti
aam
sbb
sub
mov
xchg
cmp
cld
mov
or
inc
sti
loop
mov
btr
xor
and
loopne
fs
leave
ja
dec
pop
inc
dec
neg
push
aad
inc
dec
fs
or
xchg
ss
mov
test
sub
or
fistl
xor
sub
xchg
mov
stos
inc
out
mov
cmp
out
mov
mov
aaa
and
and
mov
dec
xor
in
jne
mov
mov
fadds
mov
mov
bound
das
popa
mov
dec
fiaddl
mov
in
mov
ljmp
loop
xchg
lock
push
rorl
scas
ret
dec
hlt
sbb
pop
fildl
inc
arpl
data16
add
stos
lds
pop
jge
inc
stos
add
push
stos
inc
mov
xchg
test
pop
int3
mov
jbe
mov
loopne
loop
aas
les
mov
or
mov
dec
cmp
jg
stos
mov
fisubrl
loope
inc
outsb
add
push
push
test
bound
xchg
cmp
jbe
pop
pop
inc
sub
aad
xchg
inc
mov
rolb
mov
fcomp
pop
sbb
sbb
in
mov
add
xchg
in
inc
and
cmp
dec
mov
inc
push
imul
push
or
mov
pop
xchg
or
repnz
jl
or
inc
pop
pmulhuw
dec
cs
xchg
in
loopne
push
mov
pop
inc
or
scas
outsl
mov
ss
call
sub
fsubl
rcrb
mov
es
pop
scas
or
cmp
add
push
es
rclb
adc
adc
pmulhuw
mov
cmp
lods
in
pop
lock
enter
enter
les
inc
adc
in
in
or
ret
dec
es
lret
in
incb
fwait
pop
leave
adc
jns
fildl
mov
xchg
orb
push
and
xor
and
and
je
sub
sbb
dec
mov
aam
dec
add
mov
pop
test
inc
or
push
mov
sbb
inc
sub
xor
pushf
sub
movsl
add
push
dec
inc
addl
fsubrs
rolb
adc
cmp
mov
in
or
mov
inc
pop
xor
lds
fcomp
push
call
jne
clc
mov
push
sbb
xlat
rorb
cmc
lods
lods
es
cmp
xlat
lock
lock
pop
sbbl
jmp
aad
push
adc
das
dec
sub
push
gs
or
add
and
jne
or
xchg
popf
sbbl
fwait
mov
inc
out
es
adc
orl
shll
xor
cmp
push
pop
sbbb
in
es
xchg
ja
btc
imul
jg
add
aad
pop
mov
lock
mov
inc
sarb
stos
xor
mov
pop
and
pop
test
adc
ret
sub
ds
lahf
xor
faddl
inc
dec
dec
sbb
cmovnp
push
int
inc
xlat
fs
in
jbe
das
dec
dec
sub
aas
jo
subl
adc
loope
adc
fcoms
push
adc
lret
pop
dec
inc
fadds
inc
in
dec
inc
xchg
loopne
mov
push
or
dec
sbb
test
adc
rcl
adc
clc
adc
aad
movsl
mov
xchg
shlb
scas
push
sets
xchg
or
loopne
rolb
test
enter
aaa
jecxz
add
in
inc
fadds
push
pushf
int
arpl
scas
hlt
xor
add
inc
jecxz
inc
or
test
push
les
xchg
xchg
adcb
lock
lcall
lock
dec
out
pop
adc
inc
in
sarb
push
movsb
adc
movsl
inc
add
fdivrs
mov
sub
repnz
xchg
ret
add
lock
xchg
or
xchg
mov
cmp
push
mov
enter
jle
in
jne
inc
cmpsl
jge
pop
pop
pushf
pushf
mov
mov
adc
mov
insb
pop
mov
out
and
pop
iret
in
psubsb
sarb
sahf
lcall
and
aam
fistl
xchg
test
daa
daa
daa
mov
pop
pushf
mov
inc
fldl
dec
inc
les
mov
bound
jno
loope
mov
inc
add
xchg
sbbb
dec
dec
jo
stos
sbb
jg
or
xor
sbb
push
mov
sbb
adc
or
or
shrb
loope
fsub
pop
inc
outsl
adc
and
jns
sub
in
jl
sbb
mov
push
repnz
sbb
mov
jbe
adc
push
adcl
mov
push
sbb
xchg
in
rclb
push
or
pop
adc
leave
jl
sbb
pusha
inc
xchg
loope
dec
sahf
in
leave
dec
pop
push
loopne
fcomps
aam
mov
xor
call
sbb
imul
pop
cwtl
shl
mov
loopne
push
sbb
sub
inc
imul
pushf
leave
fldt
or
mov
push
dec
cmp
insb
das
insb
outsl
rorl
aas
mov
sbb
sahf
call
test
push
dec
lahf
or
add
push
out
cmp
pop
scas
dec
in
int3
mov
sub
movsb
ss
adcb
and
js
insl
push
jl
add
pop
mov
lock
add
cmp
test
inc
sbb
or
nop
mov
jl
sub
dec
pop
movsl
aaa
test
icebp
outsl
or
mov
pushf
and
xchg
mov
nop
lods
add
xor
push
enter
mov
and
or
or
pop
pop
xor
add
popf
push
sbb
pop
adc
mov
xchg
pop
test
jge
push
jo
mov
mov
imul
ret
jo
adc
mov
loop
pop
loope
and
aas
inc
push
sbb
xchg
in
in
stos
cwtl
cwtl
or
sub
dec
mov
mov
hlt
xchg
inc
and
test
and
std
stos
mov
rcrl
or
inc
sbb
pop
loopne
and
in
and
cmpb
adc
adc
lods
loopne
lods
sub
ja
add
jle
fucomip
add
push
pop
add
jnp
push
push
decl
adc
xchg
cmp
mov
mov
pop
jb
sub
or
cmpsl
xchg
lods
insb
sub
push
in
add
xlat
dec
or
cltd
sbb
add
lret
push
sbb
pop
xor
cmpsl
aas
test
nop
sub
mov
add
lods
dec
mov
pop
lods
stos
mov
xor
in
mov
mov
xor
sbb
or
mov
or
fisttpl
fadds
pop
jo
fdivrl
shr
pop
sub
popa
shlb
and
and
call
push
pushf
movsl
dec
xchg
push
insb
in
xchg
xlat
lods
rolb
cwtl
add
ljmp
test
cs
in
les
cmpsl
inc
ljmp
fsubrs
push
pop
inc
jge
inc
pop
insb
adc
jnp
nop
mov
pop
fcoml
mov
adc
je
cwtl
mov
xchg
lock
push
sbb
test
pusha
das
inc
mov
push
dec
mov
in
cwtl
mov
das
push
add
dec
xor
add
mov
aad
movsb
inc
pop
mov
gs
call
adc
xor
mov
adc
cwtl
lds
test
call
or
push
pusha
xchg
gs
cmp
adc
xor
push
insl
and
jecxz
out
xchg
push
inc
sub
call
pop
add
adc
and
xor
pop
cltd
nop
and
loopne
xor
and
and
add
push
xlat
and
add
inc
shlb
inc
jb
inc
cmp
and
shll
push
fisubrl
add
test
jno
and
ss
and
mov
in
and
int3
pop
inc
push
push
pop
in
inc
outsb
outsl
mov
sub
bound
arpl
cwtl
sbb
aam
aaa
sti
hlt
aaa
xorl
rcrl
sbb
jno
imul
fmull
and
cmp
adc
adc
inc
mov
int3
pop
dec
push
push
shl
pop
push
in
push
call
in
call
dec
xor
in
mov
cmp
dec
xchg
or
hlt
inc
orb
or
loopne
and
inc
fsub
xchg
fcoms
mov
xor
push
pusha
cmp
bound
popa
cwtl
in
icebp
enter
pop
adc
cwtl
cmp
and
shrb
popa
push
or
pusha
add
mov
dec
popf
cmp
inc
daa
mov
out
les
nop
popa
inc
add
pop
or
mov
adc
or
and
dec
cmp
cmp
inc
jle
xor
xchg
or
pop
hlt
pushf
dec
loop
inc
loopne
lcall
xchg
and
xchg
xor
cmp
push
fdivrs
xor
ds
mov
in
js
xor
insb
daa
es
cmp
cwtl
ret
aas
pushf
inc
stos
rcl
mov
int3
mov
ret
scas
push
xor
in
leave
enter
gs
addb
shrl
sbb
push
mov
sub
mov
and
cs
add
inc
bound
pusha
cmp
jmp
int3
mov
mov
inc
pop
add
nop
cmp
xlat
dec
xlat
and
fdivr
loopne
fadds
push
je
sub
push
pop
adc
fs
loope
mov
movhps
jmp
cmpsl
lods
adc
cmp
pop
orb
push
adc
mov
cmp
iret
dec
push
mov
int3
and
jo
mov
imul
add
push
je
rolb
enter
ret
jae
inc
pop
xor
loopne
inc
add
mov
pop
stos
or
addr16
jo
add
in
nop
popa
scas
jl
and
dec
js
xchg
call
push
and
sbb
inc
dec
or
nop
ret
cmp
sub
loope
les
push
rcrl
in
push
nop
xchg
adc
xor
or
pusha
cmp
daa
loopne
rolb
adc
lock
xchg
add
fsubs
mov
xlat
push
adcb
das
sub
inc
mov
inc
inc
xchg
inc
stos
inc
push
ret
xchg
or
mov
sub
and
in
push
loopne
testl
dec
in
aas
xchg
mov
jecxz
dec
mov
test
mov
adc
adc
nop
sub
push
daa
push
inc
cmp
leave
jo
lods
lock
adc
push
lock
dec
sbb
push
mov
sub
out
pop
dec
ficoml
adc
dec
shll
je
or
xchg
pop
sbb
mov
stc
push
inc
xor
adc
push
rolb
pop
add
or
or
or
call
xchg
call
fs
dec
call
dec
es
lock
dec
aaa
in
in
and
dec
xor
in
in
xchg
dec
xor
in
in
in
in
popf
pop
leave
and
in
xchg
loope
push
les
mov
test
lahf
jl
rol
roll
lock
int
imul
lock
je
inc
sbb
shrb
es
lods
dec
jmp
or
and
mov
mul
dec
mov
inc
sti
rorb
test
pop
stos
aad
cld
inc
pop
rcl
lea
or
mov
sbb
mov
adc
mov
cwtl
divl
lods
js
dec
mov
in
xchg
mov
inc
jo
mov
jmp
gs
sbbl
in
and
enter
cli
lret
jmp
rcll
add
jb
idivb
or
in
dec
sti
dec
cmp
aam
jecxz
dec
push
les
sbb
sbb
push
xor
test
jnp
mov
dec
popa
xor
das
dec
push
push
mov
sub
push
lret
cmpl
xorb
outsb
pop
and
inc
jle
push
xchg
jl
ficoml
add
sub
mov
xchg
and
mov
mov
and
push
add
jo
push
addb
mov
adc
add
iret
scas
jge
mov
repz
mov
in
shlb
mov
xorl
ret
and
pop
add
test
mov
cmp
add
push
and
lods
repz
orl
int
adc
ja
and
cmp
adc
fwait
mov
lea
add
lds
add
lds
add
add
out
xor
xor
push
dec
addr16
out
jae
movsb
mov
sbb
lret
inc
add
push
in
data16
cwtl
jnp
mov
mov
add
pop
les
mov
add
push
push
das
inc
inc
pop
stc
aaa
call
gs
gs
dec
outsl
push
gs
outsl
jbe
inc
outsl
jb
gs
jmp
outsl
sbb
inc
es
dec
out
push
call
gs
loopne
fmul
idiv
iret
repz
and
and
adc
mov
add
bound
arpl
sub
outsb
loop
outsb
jns
int
in
and
jo
push
and
call
incl
cs
jne
je
pop
adc
dec
nop
dec
cwtl
in
addl
pop
adc
imul
insl
ss
push
jnp
dec
dec
inc
push
pop
push
outsl
data16
jle
pop
dec
imul
mov
inc
pop
ret
push
add
gs
mov
sbb
pop
pop
dec
dec
inc
inc
dec
pop
dec
add
mov
dec
dec
inc
mov
inc
push
push
inc
push
inc
adc
xor
jae
outsl
outsb
add
out
loop
outsl
push
inc
push
push
cmpsb
jns
cld
mov
add
sub
add
add
add
pusha
ja
in
clc
popa
add
add
stc
cmpb
cli
jo
addr16
push
push
addr16
je
xchg
sbb
dec
insl
jle
aas
xchg
je
jo
das
das
popa
jo
shrl
jno
insl
insb
cs
fistpll
aas
jno
inc
jns
jnp
cltd
push
push
insl
jae
es
fldl
xor
mov
dec
push
jne
lods
clc
mov
outsw
xor
inc
inc
cmp
adc
pusha
lret
imul
ja
imul
das
sbb
mov
popl
cmp
jge
push
sbb
lds
arpl
addr16
fcompl
data16
or
popa
add
push
in
push
dec
lea
mov
dec
outsb
cmp
inc
sub
and
fsubp
fbstp
xor
xor
inc
rdtsc
xor
mov
xor
aaa
xor
xor
sbb
xor
dec
pop
insl
fidivrs
mov
and
add
adc
jl
dec
repz
sbb
mov
jns
shl
into
push
daa
xor
out
fnstsw
push
inc
pop
imul
push
pop
mov
push
and
daa
sbb
iret
adc
inc
or
dec
push
dec
sub
push
clc
mov
mov
repz
sti
push
ljmp
or
lahf
idivl
es
dec
test
mov
imul
into
xor
test
fcmovu
inc
mov
aam
mov
popa
fs
addr16
jae
dec
push
outsb
fs
loopne
push
lret
mov
inc
dec
nop
jo
cmpsl
stos
mov
cmovo
jae
push
pop
jne
or
je
repz
mov
daa
xor
inc
push
popa
mov
in
frstor
mov
push
pop
dec
and
aam
mov
add
aas
jg,pn
in
lods
js
aas
inc
ds
sahf
daa
and
mov
bound
jae
insb
es
cs
push
js
mov
and
data16
outsb
or
stos
adcb
outsl
outsl
bound
fbstp
dec
aam
popa
data16
imul
lret
jne
pop
adc
push
popa
jecxz
gs
gs
jl
aam
jle
imul
mov
clc
data16
and
int
xor
les
dec
push
fdivrp
jnp
jae
inc
je
test
push
and
sbb
add
push
imul
push
push
rorb
pop
sahf
fs
je
ficompl
or
mov
arpl
cmp
add
xorb
jae
imul
adc
pop
es
fidivs
add
or
shlb
pop
xchg
aaa
or
into
insl
jo
jns
outsb
jae
je
jne
ret
mov
jno
je
out
cmpsb
neg
and
aam
push
int3
pushf
roll
call
sbb
pop
es
and
add
sub
jmp
addr16
add
jae
xchg
ljmp
jbe
popa
and
arpl
ret
push
lock
add
mov
imul
lods
add
dec
ds
stc
adc
mov
cs
dec
jne
sbb
aas
inc
and
inc
push
movb
bound
insl
push
das
jne
in
imul
outsl
cmp
inc
subb
aas
inc
sub
mov
jbe
push
pop
inc
movsb
lods
arpl
cmpsl
xchg
daa
insb
jnp
jl
jo
sub
loop
lods
push
test
out
popa
push
outsb
adc
outsb
lock
call
lahf
roll
enter
int3
fimuls
out
ret
mov
loopne
rcrb
inc
sub
fcoms
in
testl
mov
out
outsb
sub
xchg
sbb
or
testl
ret
jp
sbb
je
pop
or
pop
dec
ljmp
dec
push
adc
mov
push
out
scas
dec
inc
inc
jb
fs
cmp
adc
insb
pop
mov
or
pop
push
outsb
xor
pop
xchg
or
inc
outsl
arpl
inc
ret
push
xchg
or
gs
in
inc
add
inc
jae
push
xor
dec
leave
lahf
cmp
xorb
das
adc
pop
mov
inc
pop
fidivrs
and
mov
sbb
gs
or
mov
inc
incl
mov
mov
push
fwait
add
push
jno
imul
arpl
cmp
lret
inc
add
push
adc
mov
and
push
or
or
mov
dec
js,pn
mov
roll
sub
push
dec
dec
dec
dec
adc
xchg
imul
xor
or
jne
jb
push
pop
xchg
jle
bound
imul
test
movl
subl
mov
ja
decl
mov
sub
mov
inc
push
addb
fcomp
mov
jne
add
cs
mov
jns
cmpsl
push
shll
jle
push
in
bound
jb
pop
mov
mov
sbb
icebp
dec
pop
xchg
dec
outsl
jne
or
push
sub
mov
adc
gs
jo
insb
mov
addr16
jo
inc
mov
push
ja
pusha
push
das
xchg
das
xchg
add
dec
movsb
shr
mov
mov
pop
add
xor
inc
push
sub
cs
or
repnz
xor
imul
into
sbb
mov
mov
sbbb
addr16
sub
in
jo
push
cs
pop
push
mov
stos
jle
shrb
jb
cmp
mov
add
and
and
mov
pop
fs
pop
subb
addb
push
insl
shr
xor
pop
rolb
insb
in
sbb
dec
je
jle
and
xor
add
pop
push
jo
lcall
sub
insb
and
jb
lret
lock
out
jb
push
imul
xchg
pop
sub
dec
orb
popa
aam
mov
daa
sti
cli
fldt
js
outsb
insl
aaa
pop
je
pop
aas
idivl
jo
es
filds
imul
xchg
inc
push
push
push
inc
dec
push
pop
push
push
inc
push
jo
sbb
push
pop
and
and
repz
popf
fisttpll
nop
push
loop
fcmovne
clc
pushf
mov
arpl
data16
pop
lea
out
xchg
scas
das
rolb
ja
test
bound
jae
jo
lahf
add
push
aas
push
push
dec
in
mov
dec
inc
and
mov
addb
out
pop
je
push
mov
push
push
pop
jbe
jecxz
sbb
cmp
jae
inc
sub
inc
jbe
popa
mov
dec
inc
in
in
in
test
add
andb
inc
ds
dec
mov
inc
pop
pop
jne
hlt
mov
push
or
andb
mov
es
arpl
push
jbe
pusha
mov
arpl
xor
mov
or
add
xor
aas
pusha
fwait
dec
push
sbb
arpl
bound
mov
pushl
fs
aaa
cmp
cmp
cmp
test
bound
xor
gs
mov
cmp
data16
inc
cmp
data16
xor
popf
adc
fstl
dec
scas
push
and
or
and
pop
dec
jo
das
gs
cltd
shll
addr16
sbb
pop
mov
sbb
pop
es
test
arpl
es
cmp
sub
jne
cmp
jmp
xchg
inc
pop
push
xor
and
aas
andb
ret
js
sbb
or
mov
mov
popf
fstl
jle
aaa
jo
cmp
clc
ret
dec
popa
inc
add
loop
mov
jl
mov
inc
mov
adc
adc
fs
inc
loopne
push
and
scas
pop
or
xlat
imul
mov
mov
pand
jmp
cs
mov
push
jg
and
add
mov
inc
ja
ret
rcl
dec
push
push
sbb
dec
and
adcl
xor
pop
jl
pop
jo
jb
jmp
cmp
pop
imul
in
pop
js,pn
push
shrl
sbb
sbb
xor
rol
je
repz
ret
cmp
clc
popa
dec
push
add
xor
push
mov
pop
push
insl
mov
push
and
push
cltd
iret
cmp
das
loopne
or
popa
imul
lods
dec
jne
add
push
das
mov
dec
jge
xchg
loop
dec
mov
cwtl
and
bound
lods
outsl
lods
insl
scas
mov
out
xrelease
dec
ret
dec
dec
scas
inc
out
pop
ret
dec
and
push
mov
pop
sub
test
scas
push
xchg
inc
mov
push
out
rcl
inc
ja
stos
jecxz
in
jmp
outsb
cmp
add
add
mull
shr
das
fs
or
dec
pusha
inc
push
scas
repz
or
iret
cmp
adc
jo
dec
addl
int3
fdivl
inc
mov
and
enterw
mov
lahf
xchg
loope
sub
cmp
scas
xor
push
jne
dec
fs
pop
xchg
dec
add
xor
popa
xor
push
orl
je
push
adc
and
gs
imul
ja
imul
shrb
sub
mov
imul
mov
sub
mov
sub
jne
adc
or
and
sub
add
scas
inc
and
jp
insb
sbb
je
xchg
adc
mov
fs
ds
test
cmp
cmp
xor
add
fs
add
les
jo
bound
pop
loopne
push
cli
sbb
nop
jo
adcl
push
lea
out
aas
inc
addb
push
push
sub
add
mov
pusha
fmuls
pop
dec
inc
jne
push
inc
jb
inc
inc
fstpl
inc
push
push
dec
dec
dec
mov
cmp
ds
jp
push
bound
adcl
movsl
pop
push
leave
dec
sub
push
mov
and
fisubl
in
dec
sub
push
inc
ss
popa
adc
das
jg
cmp
sub
das
inc
daa
xchg
iret
test
jnp
adc
cmpxchg8b
in
movsl
pop
xchg
xor
aas
push
sbb
sbb
es
mov
jae
icebp
pop
inc
mov
push
pop
test
dec
xlat
pop
fiadds
add
xchg
scas
sbb
cmp
mov
adc
enter
xchg
pop
push
sbb
pop
cmpsb
inc
loopne
movsb
out
mov
sub
idivb
add
sti
push
fmuls
popa
cli
adc
imul
subb
js
testb
aaa
mov
and
cmp
sbb
push
icebp
ffreep
cmp
cmpsl
jo
bound
popa
addl
pop
test
pmaxsw
push
push
dec
xor
ja
dec
insl
aas
icebp
test
je
cmp
dec
mov
xchg
outsb
mov
xchg
jnp
inc
insb
xchg
fisubs
aam
xor
cmp
or
cwtl
add
das
fmull
loope
es
sub
xor
popa
je
js
sub
push
mov
mov
mov
jbe
adc
data16
out
mov
sbb
jge
data16
mov
mov
ljmp
ret
inc
jmp
or
dec
sti
cmp
and
push
jle
cs
mov
dec
mov
stos
mov
push
inc
push
add
out
pop
and
inc
push
add
push
inc
inc
push
inc
add
decl
dec
mov
fistpl
or
jnp
mov
add
jo
inc
and
and
xchg
sbb
push
dec
dec
add
in
fadds
or
add
loopne
push
add
mov
rolb
adc
xor
pop
mov
insl
stc
mov
dec
add
push
int
out
in
in
mov
pop
jo
push
rclb
push
and
mov
add
pop
mov
ja
push
push
push
adc
dec
aad
int3
cmpsl
or
repz
lret
pop
xchg
inc
mulb
push
outsb
cld
decl
dec
cmpsb
cmp
xor
xor
sub
add
sub
xor
inc
xor
inc
aaa
xor
pop
movsl
jge
and
mov
add
adc
xchg
inc
clc
adc
pop
push
dec
pop
inc
push
dec
int3
add
mov
dec
icebp
incl
mov
pop
dec
xchg
pop
das
adc
dec
dec
or
mov
lcall
test
jae
xor
mov
adc
fucomi
mov
je
outsl
je
dec
lcall
push
adc
stos
rolb
inc
das
dec
add
xchg
add
pop
fsubs
jge
jg
push
mov
ljmp
sub
pop
inc
arpl
popa
bound
lods
jnp
outsb
push
aad
and
adc
call
cmp
push
push
inc
push
inc
dec
push
jmp
push
add
adc
pop
xlat
sub
jns
mov
or
jp
aad
mov
cmp
int3
jle
xor
push
clc
int3
pop
pop
jb
faddp
push
jge
xor
dec
jne
out
iret
ja
pop
xchg
popa
inc
je
inc
js
inc
mov
cmpsb
arpl
int3
cmpsl
cmp
xor
loopne
xor
dec
mov
pusha
adcl
movsb
mov
sub
jb
int3
fdivl
leave
jae
pushf
in
xor
cmp
xchg
out
xchg
dec
sub
dec
sahf
dec
cmp
dec
inc
cmp
add
sbb
decl
cs
and
iret
adc
xchg
testb
lods
sub
pop
sbb
cld
mov
pop
mov
jbe
pop
enter
pop
xor
pop
sbb
sub
lahf
sub
push
insl
ss
adc
cli
mov
mov
lods
std
mov
lcall
movsl
enter
push
push
mov
xchg
shlb
mov
sti
mov
mov
mov
test
jl
notb
push
jo
sahf
lods
shrb
push
cltd
es
roll
mov
jo
add
push
mov
jns
jo
loopne
insl
jle
push
nop
iret
mov
add
push
pusha
xor
repz
loopne
jb
push
jo
rorl
push
pop
rolb
pop
ss
push
push
repz
repz
adc
push
mov
bound
shl
fidivrs
inc
arpl
fs
gs
pop
addr16
iretw
sti
pop
push
xchg
loopne
or
lret
jg
jo
iret
cmp
inc
inc
nop
inc
sarb
es
pop
lock
push
mov
jae
mov
loopne
ss
jns
repz
push
jg
ss
pop
sarb
or
daa
add
mul
sahf
idivb
jecxz
jo
decl
into
pop
jne
jne
xorb
and
je
iret
jnp
and
inc
jo
daa
jp
jns
idivb
jo
nop
push
mov
jl
iret
jnp
jns
pusha
nop
jge
pusha
push
mov
xchg
xchg
cmp
fdiv
and
mov
xchg
idivl
push
pusha
je
jne
in
mov
ds
nop
push
loopne
jns
adc
push
push
push
mov
lcall
inc
ds
lea
call
jmp
push
and
or
scas
int
adc
outsb
andb
jg
int
incl
dec
sbb
scas
sub
adc
xor
aaa
aaa
xor
pop
popa
stc
push
mov
xor
test
cmp
iret
mov
and
shrb
adc
pop
inc
cs
pop
add
idivb
jbe
dec
mov
push
jg
incl
push
and
pop
sbb
cmp
add
mov
add
pop
cmp
daa
test
stc
jg
inc
repnz
iret
pusha
or
fcoms
pop
mov
nop
ss
jbe
mov
push
shl
xor
daa
push
push
sahf
or
orb
das
jbe
pop
pop
call
pushf
sbb
jle
ret
cmovo
pop
mov
insb
jbe
iret
sbb
push
mov
sub
inc
pop
push
dec
dec
and
and
mov
and
pop
int3
xchg
sub
outsl
and
and
loopne
jmp
ret
cmp
les
or
jo
cmp
xchg
add
and
xchg
or
adc
or
sbbl
nop
push
loopne
jg
push
adc
or
popf
cmp
test
adc
jno
mov
xchg
imul
or
pop
adc
mov
dec
dec
sub
repz
fidivrl
inc
push
xchg
outsl
jbe
scas
or
fidivs
inc
xorb
sbb
ds
dec
add
dec
mov
insl
push
popa
or
add
cmp
mov
xchg
jbe
je
outsb
sub
jae
cmp
mov
insb
xchg
fidivrs
iret
dec
push
outsb
inc
sbb
movntq
insb
aas
inc
xchg
mov
pop
cmp
inc
enter
outsl
and
std
and
je
aas
and
jno
outsl
je
popf
stos
cld
push
popa
jo
jae
sbb
insb
pop
or
jo
popf
xchg
pop
ja
das
jbe
mov
cmc
adc
or
xor
xor
xor
fistl
cmp
cmp
xor
cmp
push
xor
add
shr
xor
cmp
push
ss
fimuls
jl
xchg
inc
mov
inc
sub
fisttps
shll
or
mov
jne
jns
and
mov
test
pop
jg
mov
push
xorl
pop
adc
pop
add
sbbb
inc
cmp
jae
popa
sbb
add
test
jl
add
sti
scas
popa
sub
add
data16
or
adc
inc
imul
andb
or
test
mov
jne
cmp
pop
rcrb
xor
sbb
add
jns
push
adc
cmp
scas
xor
inc
push
imul
add
pop
cmpsl
ds
js
or
fnstsw
sub
out
cmp
jl
imul
insl
adc
daa
add
sbb
out
sahf
or
and
cmp
sbb
push
push
pop
or
jne
fldl
mov
fs
fistps
jae
sbb
imul
outsl
imul
jno
lcall
or
dec
lahf
inc
fcoms
sahf
js
rolb
push
push
push
inc
xchg
push
push
inc
lret
sti
jg
mov
push
pop
jae
outsl
lock
lret
xor
adc
jbe
push
lds
add
sbb
js
inc
mov
mov
shrl
xor
into
push
or
inc
push
sbb
je
inc
pushl
mov
outsl
inc
and
shrb
and
mov
in
aas
daa
dec
dec
pop
add
bound
outsl
mov
test
rclb
cmp
pop
push
mov
js
mov
fidivs
setne
pop
fimull
push
sbb
pop
pop
out
insl
add
pop
xchg
jns
ljmp
insb
sbb
inc
pop
addr16
sbb
pop
fistps
adc
dec
adc
pop
mov
dec
xchg
and
and
notb
dec
and
xor
inc
arpl
push
inc
xchg
pop
or
inc
shll
xchg
push
jg
das
or
rcrl
sbb
inc
in
and
ss
aaa
inc
das
notb
pop
divl
ljmp
sbb
notb
jnp
daa
ja
pop
je
js
xlat
pop
push
mov
das
inc
bound
and
das
sub
mov
xchg
xor
das
lds
mov
and
adc
add
test
imul
and
mov
xchg
mov
mov
clc
mov
pop
cmpsb
rolb
daa
dec
push
sub
sbb
das
sbb
lods
inc
pop
ja
add
pop
loope
mov
jae
xchg
outsl
imul
cmpb
cmc
inc
pop
add
fs
cmp
es
cmp
xor
xchg
and
dec
jbe
clc
bound
daa
jnp
cmp
js
push
fdivrs
das
repnz
jae
out
stc
dec
add
pop
insl
je
xor
bound
and
gs
ja
push
inc
fisubrl
or
and
test
and
cmp
jo
jae
int3
aaa
scas
mov
inc
notl
pop
jo
add
test
push
and
sbb
cmp
pop
mov
and
inc
push
or
and
and
xlat
movsl
ret
push
mov
int3
repnz
xor
rcrb
jbe
and
sub
cli
and
pushf
in
out
shlb
add
shlb
xor
add
ret
call
iret
push
xchg
adc
into
mov
xchg
in
loopne
cmp
cmpsl
mov
in
shl
mov
bound
jae
insl
push
inc
shll
cmp
add
out
and
mov
test
dec
mov
mov
sub
cmp
gs
jg
push
es
out
adc
or
lock
inc
jbe
mov
and
sahf
cmp
mov
clc
mov
sub
and
addr16
cmp
cld
fnstcw
jl
and
and
sbb
das
pop
xor
xor
mov
dec
fldt
fs
jo
into
cs
js
dec
jb
push
dec
dec
xchg
and
mov
mov
orl
pop
adc
int
aas
stos
adc
orb
sub
pop
rorl
gs
insb
jae
loop
js
cs
stos
xor
sub
hlt
sub
insl
push
jg
and
les
ficoml
dec
pop
dec
pop
mov
jne
lea
pusha
mov
jne
or
dec
xchg
cmp
neg
int
add
sbb
lds
sub
fsubl
rolb
mov
ds
xor
mov
xor
dec
outsb
mov
ss
aaa
and
je
cmp
and
xor
mov
xor
int3
data16
dec
sbb
or
mov
cmp
aas
pop
adc
add
push
push
ss
inc
inc
inc
jo
test
pop
pop
test
jp
pusha
adc
pop
and
imul
push
xchg
push
cmp
mov
fcoms
dec
dec
inc
dec
push
push
sub
rolb
popa
rorl
and
idivb
popa
lds
push
loopne
xchg
outsl
push
push
jb
mov
aaa
cmp
inc
sub
fldenv
sbb
sarb
cli
and
bound
sub
inc
push
push
push
adc
imul
jne
add
notb
mov
es
arpl
ficoml
ss
mov
add
or
push
push
jg
cmp
jb
lock
inc
push
dec
nop
std
mov
xchg
cs
push
arpl
push
lods
out
addb
inc
sub
jbe
mov
inc
push
add
push
inc
fnsave
xchg
daa
push
pop
dec
adc
nop
repnz
out
sub
out
addr16
add
xchg
lret
inc
inc
dec
dec
inc
dec
inc
push
cmp
jg
dec
inc
cld
push
pop
push
dec
dec
mov
or
inc
and
dec
push
inc
xchg
xor
add
pop
pop
popf
imull
pop
ss
inc
push
inc
idivl
xor
xor
xor
into
xor
xor
mov
testl
mov
mov
lahf
mov
and
pop
lock
push
adc
add
divl
std
sub
mov
and
jo
xchg
dec
push
call
and
filds
icebp
in
jne
inc
jns
and
adc
stos
lea
pop
or
adc
cmp
mov
mov
xchg
rclb
insl
cmp
arpl
xlat
jbe
mov
lods
and
fs
jae
and
push
nop
cmp
stos
cmp
outsb
mov
adc
test
int
popa
cs
jo
jbe
push
or
adc
jp
cmpl
icebp
xchg
les
dec
mov
inc
inc
push
arpl
or
adc
sbb
jne
xchg
jp
insb
mov
push
sbb
pop
bound
cltd
fdivs
cmp
sub
loopne
insb
mov
or
sbbb
sbb
pop
cmp
popa
sbb
jnp
sub
push
inc
lret
dec
mov
div
shll
bound
xorb
adc
mov
push
mov
push
jb
xchg
mov
iret
mov
gs
ja
mov
arpl
je
or
sub
push
fimuls
sub
push
jae
xchg
popa
test
test
js
fcmovnb
or
mov
cmpsb
push
imul
bound
and
and
inc
data16
clc
fstps
mov
lods
push
faddl
jo
inc
inc
xchg
and
cmp
jno
inc
inc
xchg
mov
lods
mov
outsb
shl
ja
and
cmp
and
ret
repnz
jp
xchg
push
sub
or
jno
xor
int
and
cmp
mov
mov
adc
in
xchg
xor
loop
sub
js
jp
and
pop
rclb
push
adc
or
notb
inc
or
insl
outsb
dec
inc
inc
orl
hlt
jge
insl
mov
and
or
jg
jae
pop
insb
adc
jb
mov
push
adc
push
or
jo
dec
cmp
ficoms
not
je,pn
jnp
test
inc
inc
in
add
loopne
and
lods
adc
adc
inc
ret
mov
pop
scas
add
loope
pop
cmp
push
ret
push
test
push
outsl
mov
imul
push
mov
out
inc
xor
adc
repz
inc
adc
dec
insl
add
sarb
push
dec
fisubrs
push
push
pop
out
jmp
fxch
movsb
cmp
push
dec
dec
push
inc
push
dec
pop
or
popa
push
xor
pop
addr16
dec
and
clc
push
push
push
pop
jae
out
and
sbb
pop
inc
and
lret
outsb
lahf
inc
dec
dec
xor
mov
pop
pop
fwait
adc
xor
xchg
pop
es
sbb
mov
aas
fiaddl
pop
inc
cwtl
and
push
push
stos
fcomps
sub
daa
cmp
cmpsl
lds
sbb
jnp
divl
xor
xor
inc
pop
dec
inc
inc
xlat
call
xor
imul
add
jbe
imul
push
out
in
mov
adc
sub
test
and
sub
or
push
mov
push
inc
scas
bound
mov
xchg
jae
inc
xor
adc
arpl
push
pop
jg
mov
js
jg
gs
pusha
daa
and
jno
je
jne
mov
xchg
sbb
sbb
outsl
scas
cmp
aaa
hlt
jmp
xor
popf
jbe
push
lahf
mov
adc
cmpl
pop
dec
pop
cmp
pop
test
mov
out
and
movsl
pop
jo,pt
push
push
add
out
jne
pop
sub
js
inc
push
cmc
pop
xchg
xor
call
bound
adc
cmpsb
dec
mull
and
cmp
sbb
das
stos
insb
incl
or
push
inc
dec
push
inc
pop
push
sbb
arpl
dec
inc
insb
push
pop
jbe
dec
add
or
in
or
fdivrl
push
hlt
push
and
push
push
xor
mov
ja
orl
cmpsl
popa
adc
push
mov
add
dec
leave
push
jnp
jns
add
into
lea
idivb
cmc
in
and
add
rorl
scas
pop
adc
or
add
fcoml
sub
je
xchg
scas
add
inc
pop
les
call
mov
xchg
mov
js
add
mov
push
pop
jp
inc
sub
cmp
lahf
out
adc
mov
outsl
pop
add
ja
je
scas
pop
cwtl
das
decl
jno
sti
shlb
ret
icebp
adc
pop
movsb
cmpb
aad
sbb
cwtl
stos
incl
fadds
pop
adcl
test
and
jge
push
je
mov
andb
fwait
rol
lcall
out
popf
rorl
mov
jmp
dec
fsubrl
stc
jbe
push
ds
insl
xor
jg
mov
inc
xchg
cmpsl
aad
arpl
push
sub
adc
or
pushl
cs
insl
sub
adc
or
or
cs
ret
sub
xchg
mov
mov
test
mov
mov
call
cltd
test
push
push
shrl
or
dec
ja
daa
mov
mov
mov
sbb
dec
stos
fdivs
call
outsl
cs
arpl
test
add
mov
mov
movsb
push
mov
jno
addr16
push
scas
addr16
cmp
dec
movsl
jg
push
push
mov
fwait
incl
ljmp
int
pop
iret
inc
inc
inc
inc
inc
inc
inc
dec
dec
sub
dec
test
ljmp
jle
pop
pop
pop
pop
popa
bound
addr16
mov
imul
jno
jne
ja
and
popf
sarb
pop
xor
ss
cmp
sub
jg
sbb
jae
pop
mov
and
xchg
je
test
inc
jmp
inc
add
pop
loop
and
mov
cli
xchg
jae
pop
test
fistps
scas
push
aam
inc
cs
setno
ficoml
sbb
ret
sub
xchg
stos
jo
mov
stos
ss
push
push
lahf
insl
lods
data16
ja
dec
int3
mov
add
jbe
outsb
push
add
lea
dec
out
adcb
and
sbb
outsl
imul
imul
cmp
jne
add
xchg
lock
inc
popa
insb
sub
pop
or
push
ret
or
xor
das
js
sti
sub
mov
mov
out
test
mov
outsb
inc
push
rorl
mov
mov
sarb
pushf
daa
shrl
dec
or
lahf
lea
lcall
or
jo
sub
xor
push
dec
mov
mov
sahf
testl
cmp
repz
mov
cs
inc
add
mov
fidivrl
pusha
fdiv
outsb
pop
cmp
data16
fsubrl
pushf
test
mov
daa
add
xchg
mov
jle
imul
inc
daa
mov
inc
cmpsl
rcl
imul
insb
and
adc
pop
ljmp
cmp
sub
push
xchg
or
popa
jno
dec
inc
jo
push
repz
popa
dec
jbe
xor
pop
fistps
and
insb
in
pop
sbb
add
inc
bound
adc
or
sbb
out
shl
clc
out
inc
adc
xor
or
fwait
ljmp
mov
and
mov
movsb
out
sahf
xlat
add
push
pop
sbb
jns
xor
mov
roll
add
or
int
repz
insb
ss
push
add
or
adc
adc
sbb
and
in
sub
xor
inc
mov
mov
testl
shlb
data16
sbb
sub
add
shrl
or
adc
ss
int
pop
add
add
data16
insb
dec
str
xor
and
das
incl
adc
mov
gs
jmp
rcll
xchg
clc
clc
push
or
cmp
rclb
cmpl
jns
mov
scas
cli
cmc
push
adc
mull
pop
mov
jnp
das
inc
pop
jecxz
popa
mov
pop
sub
push
dec
pusha
sub
mov
aaa
stos
push
cmp
jae
les
mov
sub
pop
nop
push
stos
fcoml
xor
fwait
xchg
rcrl
push
jnp
add
pop
sub
daa
mov
mov
jle
inc
cmpsl
add
ds
or
nop
call
add
and
inc
cmp
ret
cli
call
addl
add
pop
adc
push
adc
int3
push
in
jge
jle
in
into
dec
dec
push
push
sbb
xchg
sub
sub
sbb
or
xor
xor
imul
aam
jo
inc
xchg
je
cmpsl
sbb
test
mov
arpl
out
insb
outsl
imul
insb
jns
or
jge
xor
mov
adc
or
outsl
shll
leave
xchg
sarl
sub
xchg
mov
lods
aad
mov
outsl
hlt
ss
outsb
pop
shlb
cmp
jne
dec
or
dec
addr16
fwait
cli
or
dec
cmp
loopne
subl
ljmp
lods
push
xchg
arpl
shl
rcll
sub
xor
and
das
arpl
inc
dec
sub
dec
popa
sub
subl
inc
jns
jo
cs
add
jae
xchg
loope
pop
repz
push
xor
add
xor
cmpsl
sbb
ffreep
shrb
push
loopne
and
xor
shll
addb
add
push
add
dec
aaa
ja
inc
enter
outsl
ss
sub
je
xor
or
test
inc
mov
pop
sbb
scas
dec
and
dec
add
sbb
mov
and
cmp
mov
gs
jb
add
xor
movl
loopne
inc
xor
mov
movsl
sbb
imul
push
imul
nop
xchg
cmp
pusha
add
popa
in
mov
xacquire
cmp
push
inc
mov
push
cmp
jbe
xor
jae
xor
push
sbb
sub
je
xorl
imul
inc
sub
pop
pop
add
pop
dec
or
fwait
test
mov
pop
fcmovnbe
sbb
ds
outsl
and
dec
add
xor
cmpsl
or
and
jmp
sub
sub
sub
cs
add
ds
inc
or
and
pop
pop
loop
xor
jl
jle
add
push
push
cmp
dec
and
jne
jbe
or
daa
add
add
push
inc
insb
xchg
or
jae
pcmpgtb
jns
out
inc
xchg
test
faddl
sub
in
cltd
and
sub
jo
adc
fsubrl
add
adc
add
add
add
add
xor
cmp
dec
add
faddl
and
or
pusha
push
in
add
xor
or
sub
out
fucomip
into
add
sbb
addb
add
addb
out
ss
mov
pop
daa
push
cmpb
in
popf
fnstenv
xor
int3
push
lods
pop
into
jo
add
add
scas
adcb
into
or
inc
add
pop
out
testl
cmpsl
lock
lahf
or
jle
push
inc
incl
dec
jae
mov
inc
gs
pushl
inc
push
dec
inc
dec
xor
daa
mov
sub
jg
pop
loopne
popf
jnp
or
add
jg
testb
ljmp
lret
jno
icebp
pusha
inc
mov
push
repz
ret
movsl
add
cmpl
sbb
jl
jne
fstpl
imul
aaa
sub
add
sub
xor
pusha
das
jp
xorl
imul
push
cmpsb
jle
pop
ret
inc
aaa
dec
add
or
sbb
xchg
xchg
lea
mov
mov
ret
xchg
xchg
xchg
and
lods
iret
mov
mov
jmp
lods
and
mov
jns
jae
xor
sarb
insb
sti
dec
inc
jb
jns
daa
pop
mov
ss
test
popa
test
or
inc
addr16
cmp
rcrb
insl
aas
push
jbe
xor
jo
jno
mov
mov
inc
jbe
push
mov
ficompl
push
lahf
fs
and
mov
pop
mov
popl
cld
pop
stos
mov
and
push
and
pop
es
dec
push
sub
lahf
lock
movsb
jnp
add
pop
pop
pop
and
or
cmp
insb
call
dec
lret
das
pop
js
xor
inc
adc
sbb
in
push
push
push
push
dec
testl
mov
adc
cmp
fildll
dec
jge
jg
lock
nop
xchg
jo
inc
adc
xor
fs
and
fs
xchg
jg
add
mov
jg
sub
inc
aad
push
or
notb
das
push
outsl
xchg
mov
mov
popw
pop
imul
mov
push
jl
cmp
cmp
push
sahf
out
jns
das
push
sub
es
mov
pop
jle
sub
ds
ds
add
rorl
sub
xlat
out
jo
aas
div
and
lret
add
add
pop
push
insb
out
sbb
jb
imul
loope
or
lea
sub
movsb
sbb
fcoml
cltd
jnp
mov
inc
jo
sub
or
jl
xchg
fs
out
add
pop
mov
inc
add
out
test
fs
jns
int
dec
jbe
mov
repnz
out
push
inc
jle
cwtl
push
cmp
out
xor
xor
and
in
ds
sbb
insb
adc
cmpsl
cmp
mov
jb
jge
out
push
add
rorb
iret
jnp
mov
cld
pop
mov
hlt
lock
out
push
in
call
jns
out
aam
int3
enter
sahf
mov
js
cmp
jnp
mov
les
iret
repz
les
repz
ds
ret
fiadds
call
cmp
lods
movsb
cwtl
mov
cmpsl
stc
cmp
cld
ret
mov
out
push
jle
xchg
or
cmpsl
dec
loope
push
xor
cs
lea
mov
dec
sub
xor
filds
xor
mov
dec
jne
daa
pop
or
inc
dec
loope
lods
or
les
xor
pop
xor
ja
and
sub
dec
add
jb
push
jb
adc
add
xorb
cmp
and
add
xchg
mov
loopne
roll
add
movsl
arpl
xor
add
incl
sbb
sbb
add
test
mov
pop
rcrl
sub
out
and
jg
icebp
addl
mov
xchg
xchg
xchg
xchg
xchg
xchg
lcall
popf
sahf
lahf
mov
movsl
cmpsb
cmpsl
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
ret
enter
int3
int
iret
rcl
rcl
aam
xlat
fcomp
fcmovu
loopne
loop
in
out
call
in
out
out
lock
repnz
cmc
div
adc
dec
clc
stc
cli
sti
cld
std
jmp
add
lea
push
inc
pushl
aas
pop
add
decl
cmp
imul
add
dec
mov
adc
add
das
das
adc
mov
push
jnp
outsb
jbe
dec
push
loope
jne,pn
push
jb
inc
jne
add
jne
ja
lods
aam
push
mov
cmp
arpl
bound
inc
popa
outsb
adc
into
mov
jae
mov
xchg
addr16
aas
jae
sub
xor
fwait
jge
or
daa
push
gs
sbb
out
fsts
dec
outsl
outsb
and
jbe
cmp
dec
inc
aas
add
pushf
jne
int3
je
leavew
cmc
out
mulb
push
jns
push
xor
add
xchg
sbb
je
ja
push
arpl
mov
insb
fs
sbb
je
cmp
pushf
xor
mov
subps
testb
xor
adc
cs
push
xchg
orl
adc
jo
sbb
sub
dec
jg
xchg
push
fs
add
and
aaa
imul
inc
dec
andps
cmove
fistl
lret
push
lods
rorl
adc
sub
adc
fbld
dec
inc
call
rclb
mov
in
xchg
idivb
jnp
inc
loop
mov
ds
pop
adc
pushl
or
cli
jb
xchg
jge
arpl
mov
and
cmp
adc
dec
scas
jp
adc
fisubrs
push
mov
and
cmp
dec
imul
decl
dec
out
inc
mov
mov
sub
cmpl
sbb
pop
jns
ds
xor
jmp
incb
int3
dec
dec
xor
dec
popf
pxor
xor
lret
aaa
push
div
jmp
clc
incl
and
cmp
cmpsb
das
xchg
pop
and
xchg
lret
incl
mov
loopne
cmp
inc
mov
xchg
push
pop
lock
xor
cmc
iret
adc
jmp
das
mov
jle
dec
add
scas
lods
dec
inc
pop
adc
xor
jg
inc
sub
lret
test
mov
mov
add
loope
mov
add
xchg
sub
mov
mov
mov
jns
mov
dec
test
pop
dec
ret
pop
pop
aas
add
adc
inc
add
test
incl
incl
xchg
enter
arpl
imul
cmp
xor
add
xor
cmp
pop
bound
imul
adc
xor
xor
inc
or
les
dec
inc
inc
cmpb
sbb
pop
push
add
jo
bound
mov
sbbl
or
or
pop
sahf
cmpsl
stc
cmp
add
and
popa
fdivrs
xchg
daa
std
dec
fldl
or
scas
adc
ss
out
ja
jns
mov
fbstp
add
aaa
in
sahf
inc
and
add
dec
push
cmp
sahf
ja
lds
dec
add
ja
inc
je
add
test
mov
ja
fstp
xchg
mov
scas
ja
lods
fsubs
outsl
add
pop
leave
adc
add
fisttps
insb
dec
enter
dec
xlat
pop
xlat
insb
and
fbld
daa
push
xor
test
xchg
cmp
jb
mov
pop
and
pop
add
or
fwait
inc
mov
or
les
frstor
cmpsl
pusha
push
je
inc
nop
push
repnz
lock
sbb
push
les
movsb
shrl
fdivs
push
in
outsl
add
add
cmp
mov
fstps
outsb
test
dec
cmpsl
stc
fidivs
daa
pop
push
clc
push
adc
fmul
repz
sub
dec
fs
and
repz
fdivl
fstl
in
repz
loopne
fidivs
push
jns
jns
push
mov
fidivrs
sbbb
repz
out
sub
inc
pusha
jl
into
repz
pop
jecxz
push
nop
lods
outsl
mov
daa
xchg
lods
ss
mov
fidivrl
shr
push
or
fimull
orb
scas
in
mov
test
add
out
cmpsl
addr16
nop
inc
filds
add
aam
repnz
sahf
or
add
dec
cmpsl
mov
mov
test
xacquire
inc
aas
jg
pop
or
pop
add
xchg
push
jo
nop
lahf
mov
pop
jb
and
les
cmp
push
mul
daa
fucomp
ja
jmp
mov
sbb
sbb
frstor
add
lahf
and
in
outsb
fildll
mov
outsl
add
fs
sub
in
cld
add
into
or
push
inc
cmpb
xchg
rolb
daa
pop
fidivrs
in
and
aaa
pushf
jg
fwait
pusha
js
lods
ja
xchg
fdivs
pop
lods
pop
mov
outsl
addr16
pop
sub
push
xor
pop
nop
or
xor
out
mov
pushf
ffreep
push
xor
add
xor
iret
jae
dec
add
xchg
dec
xchg
add
loopne
pop
dec
loopne
sub
mov
pop
cmpsl
outsl
xor
push
xor
xor
cmp
loopne
fcoms
hlt
ja
daa
in
ror
adc
and
lods
fs
bound
leave
push
cmp
inc
repnz
enter
loope
sub
inc
mov
xchg
xchg
int
add
or
outsl
in
lods
add
xor
sub
dec
test
dec
lahf
mull
in
loop
push
rolb
sbb
xchg
popa
sbbl
xchg
enter
lock
clc
loop
cmp
dec
or
mov
mov
cmp
decl
ja
insb
and
dec
adc
adcl
dec
and
mov
daa
sub
sub
xchg
sub
int
sub
movsb
out
xor
pop
mov
aam
lock
sbb
cmp
out
in
push
add
mov
pop
push
xchg
and
ss
sbb
cmp
in
fmuls
pop
cmp
fs
iret
js
lods
dec
and
in
dec
cs
sbb
dec
lods
jnp
fsub
pop
fsubrs
xchg
pop
mov
dec
ret
aaa
faddl
dec
push
js
cmp
jns
xchg
hlt
out
out
jns
sbb
or
push
push
inc
jbe
pusha
fcomps
mov
push
shlb
or
ret
mov
negl
sub
cmpsl
push
sub
inc
push
dec
out
pop
test
add
es
out
push
mov
int3
out
xchg
imul
mov
dec
adc
call
xchg
or
ja
or
aaa
jo
or
inc
mov
dec
mov
dec
leave
test
scas
inc
jmp
cmpsl
xchg
addr16
jl
or
jmp
jbe
adc
out
mov
and
pop
jmp
push
ret
mov
and
add
sbb
lahf
cmpsl
mov
pop
or
add
inc
add
pusha
and
outsl
inc
xchg
dec
nop
inc
ljmp
insl
daa
aas
das
data16
add
xchg
mov
ljmp
das
inc
xchg
fdivs
aaa
add
insl
mov
xchg
push
jae
fsubr
push
sbb
and
aas
mov
add
out
aad
mov
lods
xchg
push
aas
iret
jnp
mov
test
sbb
inc
push
mov
pop
push
mov
rclb
es
scas
les
loope
xchg
ja
in
out
xchg
dec
in
adc
outsl
xor
out
dec
cmp
cmp
push
push
fistps
mov
addr16
pop
dec
sahf
mov
pop
push
or
mov
pop
filds
fbstp
lock
or
mov
lock
push
jmp
lock
outsl
dec
in
jle
outsl
xor
fildll
lods
pop
mov
iret
mov
xor
mov
lods
mov
iret
enter
arpl
pusha
mov
lahf
pop
out
stc
int
stc
mov
lock
les
dec
repz
sbb
add
pop
cmc
int
imul
add
dec
int
repz
cmpsl
orl
or
jl
sti
cmp
stc
movhps
ds
shll
jmp
adc
ja
out
int
adc
notb
dec
repz
adc
mov
ds
incb
in
sbb
push
mov
fucom
sbb
pop
out
ds
arpl
and
mov
cmp
and
and
repz
insw
and
lock
and
cmp
int
jns
jnp
shr
daa
xor
mov
sub
fcom
jl
jge
sub
push
mov
imul
sub
iret
repz
repz
js
fcomps
sub
cs
repz
subl
out
xor
mov
testl
jnp
mov
xor
cwtl
int3
out
push
xor
imul
ds
roll
cmp
jl
out
stos
fisubrs
xor
iret
js
xor
mov
sahf
fwait
iret
int
out
cmp
jbe
cmp
repz
xor
pop
mov
sbb
stc
cmp
cmpsl
dec
pop
cmp
aad
cmp
imul
jns
out
aas
dec
mov
push
inc
out
cmp
sub
rorb
inc
dec
repz
inc
add
int
stc
cmp
aaa
inc
scas
and
iret
repz
mov
xor
out
dec
jge
add
stc
cmp
repz
mov
sahf
cmpsl
push
ja
mov
lahf
ds
xchg
mov
jns
dec
xchg
mov
lcall
push
dec
cmp
repz
xor
mov
sahf
out
fcoms
dec
xchg
mov
out
cmpsl
or
repz
out
test
sar
fwait
iret
repz
and
lcall
iret
repz
jp
rcrb
push
jl
out
inc
imul
repz
out
sahf
out
xchg
lods
iret
ljmp
and
jo
inc
jo
cld
and
repnz
addb
xor
inc
daa
aam
ja
inc
pop
dec
mov
fildl
addr16
out
fucom
sub
cmpsl
push
mov
push
add
repz
mov
inc
fmull
dec
inc
inc
dec
cmpsl
add
push
fmulp
orl
mov
leave
mov
out
roll
fabs
pop
idivl
pop
push
push
or
push
out
je
adc
add
repz
stc
or
cmp
nopl
xor
jns
sahf
adc
inc
adc
dec
sahf
out
adc
dec
and
loop
mov
sbb
sete
xlat
pushf
pop
movsb
pop
in
in
sbb
nop
out
rcr
ljmp
lods
xor
les
enter
push
add
cltd
mov
dec
or
add
inc
repnz
cmc
pop
test
pushf
pushf
pop
jb
mov
push
add
rcrb
stc
xchg
pop
lods
pop
das
loopnew
sub
addr16
enter
or
xchg
daa
adc
sbb
fs
je
and
ja
pusha
xchg
pop
and
in
lahf
add
cs
cmpsl
push
hlt
ret
mov
fimull
add
sbb
jb
hlt
or
cmp
sbb
cmp
cmp
cmp
cmp
loope
pop
or
cmp
rcll
adc
leave
leave
pop
cmp
iret
leave
repz
sbb
mov
shl
daa
adc
clc
fldt
enter
or
outsb
repnz
clts
dec
sahf
out
pop
into
or
out
jb
pop
dec
testl
or
lea
pop
or
push
push
xchg
and
daa
outsl
dec
or
or
inc
xor
imul
outsb
pop
leave
rcr
or
mov
dec
sahf
pop
mov
sahf
movl
xlat
dec
enter
cs
jl
or
adc
sub
daa
daa
daa
iret
add
dec
fs
daa
daa
daa
xchg
scas
enter
daa
daa
jmp
out
sahf
pop
adc
adc
in
repnz
aas
cmova
in
in
andl
iret
xlat
cmc
sahf
ja
repnz
sbb
push
and
in
dec
pop
and
in
dec
sahf
and
jns
fucomi
mov
sub
dec
ds
cmp
adc
sti
and
pushf
adc
sbb
and
sub
fcmovne
xchg
adc
cmp
clts
sahf
ja
repnz
dec
push
or
in
or
je
xchg
pop
iret
jl
inc
test
or
scas
pop
scas
mov
leave
add
jbe
daa
dec
mov
pop
sysret
xlat
fistpll
and
inc
data16
xor
cmp
mov
cmp
cmp
aas
xor
add
repz
inc
pop
dec
mov
adc
add
addr16
in
cwtl
ja
out
cld
pop
leave
mov
ret
adcb
rcr
cmpsl
aaa
jmp
push
paddq
xchg
sbb
inc
dec
push
aaa
push
adc
cmpsb
loopne
push
adc
adc
pop
out
fsubrl
aas
ja
dec
xchg
mov
add
jp
imul
add
inc
pop
jnp
inc
loopne
jp
out
pop
aas
clc
std
pusha
aaa
inc
aaa
or
pop
or
out
sbb
sbb
fcmove
repz
mov
mov
push
out
call
jbe
psubb
fucomi
or
mov
pop
lar
push
shll
sub
xchg
dec
xlat
out
mov
push
pop
packsswb
push
imul
wbinvd
idivb
mov
sahf
cmpsb
pushf
fsubrl
pop
scas
movzbl
mov
repz
leave
rep
mov
imul
psadbw
or
fcmovne
leave
in
push
adc
push
push
push
das
out
sahf
xchg
es
adc
repz
adc
outsb
repnz
pop
setge
repnz
sbb
cmp
xchg
out
sbb
and
iret
repz
and
ja
push
and
pushf
fmull
mov
es
aas
adc
sbb
outsl
push
push
cmp
inc
xchg
and
inc
adc
out
fmulp
addr16
add
test
lea
or
or
mov
pavgb
add
repnz
add
or
mov
push
adc
sbb
and
cmp
repz
add
repz
cmp
cmp
inc
inc
or
or
or
pop
arpl
imul
outsl
jnp
sbbl
mov
leave
repz
xchg
push
fwait
mov
cmp
sbb
leave
repz
nopl
mov
pop
rcr
and
iret
repz
jmp
psubq
pop
jg
push
daa
push
adc
daa
out
cmp
and
dec
sub
cmp
in
push
sub
inc
push
cs
pxor
pop
inc
lcall
daa
add
pushf
out
mov
xchg
or
jnp
pop
adcl
aaa
jb
mov
xchg
pop
fwait
push
add
jns
stos
jg
mov
mov
pop
sbb
xchg
push
dec
sub
bnd
fs
push
repz
inc
pop
pop
movntq
out
in
insb
pop
je
test
jns
sahf
add
repz
sahf
out
or
cmp
mov
aam
outsb
daa
iret
jae
adc
in
pmuludq
mov
adc
sbb
jae
mov
pop
sbb
repnz
iret
sbb
sbb
daa
iret
jae
sbb
jb
pop
jo
sbb
sbb
je
daa
iret
jae
and
mov
daa
iret
jae
xchg
pushf
sub
sub
cmp
sbb
das
fsub
jns
sahf
xor
in
xor
movsl
cmp
xor
sbb
sbb
sbb
cmp
cmp
sbb
xchg
cmpsb
rclb
sbb
daa
sbb
sbb
sub
dec
movsl
inc
sbb
inc
sbb
push
imul
xchg
sbb
dec
movsb
dec
lods
and
jns
mov
dec
decl
int
sbb
dec
sbb
push
pushf
out
push
in
js
push
sbb
sbb
sbb
repz
xchg
sbb
pop
pop
add
in
es
add
cmp
leave
in
aas
pop
inc
dec
or
iret
sbbl
pushf
imul
jb
pop
faddl
xchg
sbb
in
mov
aad
add
add
out
mov
cmp
cmp
test
lahf
mov
or
clc
mov
lar
enter
sbb
adc
sbb
pop
cmp
repnz
repz
or
push
lret
lret
xchg
sbb
popa
sbb
sbb
repz
push
adc
pop
cmp
cltd
sbb
mov
addr16
jns
out
dec
sbb
sbb
sbb
jns
out
sbb
sbb
lahf
out
sahf
sbb
or
adc
pop
cmp
iret
jae
and
xor
repz
repz
inc
sub
jmp
movntps
iret
leave
in
arpl
imul
sahf
out
popf
orl
xor
jns
xor
stos
pop
mov
jbe
cmp
mov
cmp
add
and
adc
or
enter
push
sbb
push
push
jae
mov
inc
dec
iret
repz
pop
push
or
xorl
mov
push
aaa
je
jl
test
xchg
and
add
cmp
pop
mov
inc
lcall
fldcw
adc
daa
jl
add
push
daa
pushf
mov
jne
jns
ret
lahf
aam
or
enter
sbb
in
ss
dec
ret
addr16
mov
jle
repnz
add
int
rcrb
pop
outsl
xchg
add
xchg
or
dec
push
pop
dec
inc
pushf
out
xlat
push
push
add
daa
daa
pop
in
aam
jle
xchg
outsb
daa
daa
mov
outsb
mov
mov
pop
shl
rorb
xor
or
mov
adc
out
pop
and
sub
cmp
iret
jae
push
cmp
or
icebp
jbe
dec
push
subps
push
cmp
test
or
and
mov
out
mov
and
orl
inc
aas
dec
outsb
adc
push
in
sahf
out
pop
in
cs
add
sahf
out
cmp
pop
adc
jns
add
in
push
dec
ja
push
add
repz
arpl
outsb
add
cmp
repz
add
xchg
xchg
out
jg
lret
and
fisubl
cld
adc
inc
ja
movaps
les
and
sahf
ja
mov
push
add
in
dec
pusha
and
pop
jae
popf
cmp
orb
pop
nop
repnz
iret
or
jns
outsb
cmpxchg
mov
rcrb
enter
push
repnz
iret
adc
mov
sbb
and
push
sbb
out
push
adc
sbb
out
pop
sub
xor
sahf
out
jns
inc
dec
and
icebp
in
dec
pop
bound
shll
test
push
mov
and
push
add
outsb
repnz
iret
leave
repz
rorb
fcmovu
or
ljmp
cmp
std
add
pop
adc
adc
jns
out
adc
adc
lock
dec
and
push
and
int3
jo
xchg
and
and
mov
add
and
or
scas
push
cmp
xor
add
add
dec
out
ja
loop
push
shll
pop
mov
adc
je
or
pop
and
push
lock
fwait
mov
inc
adc
sbb
jb
push
and
jge
in
sahf
ja
cs
add
out
popf
push
pop
movsl
vpcmov
and
es
mov
push
daa
es
jae
pushl
ja
call
xchg
icebp
mov
adc
pop
jae
or
faddl
jo
push
or
int3
sub
leave
in
in
inc
xchg
sahf
mov
ds
pushf
jecxz
pop
adc
adc
loopne
xchg
pop
xor
sub
mov
decl
das
mov
adc
mov
bswap
sbb
jb
daa
pop
daa
jg
add
add
add
iret
repz
pop
cmpsl
syscall
cmp
mov
scas
daa
dec
push
pushf
pushf
dec
adc
loopne
lock
push
mov
clc
sbb
xor
mov
inc
mov
sub
dec
sub
add
jo
cmp
aam
loopne
dec
xor
mov
sub
inc
nop
sub
dec
vmovaps
pop
cmpsl
add
leave
xchg
and
scas
or
adc
sbb
mov
mov
dec
xchg
addr16
pusha
test
aaa
push
daa
daa
pop
leave
call
iret
cmp
push
add
pop
in
sub
pop
mov
pushf
fdivs
pop
scas
gs
push
sbb
sbb
xor
jns
mov
inc
push
es
leave
repz
out
cmp
dec
push
pop
daa
daa
or
enter
loopne
add
out
mov
clc
or
stc
add
sub
jg
out
cs
push
or
das
push
push
pop
push
leave
and
sub
xor
dec
fidivrs
push
adc
push
in
jg
imul
cmpsl
mov
mov
ja
addr16
sbb
lock
inc
mul
sbb
in
lock
push
lock
dec
lock
sub
mov
imul
fisubl
insb
addr16
cs
dec
mov
xchg
dec
aam
sub
jb
inc
cmp
sbb
xor
jb
inc
jo
leave
inc
jb
mov
inc
jb
add
and
adc
jb
stc
add
addb
and
fstpl
es
push
mov
movsl
rorb
cwtl
das
test
iret
jae
add
mov
inc
es
inc
adc
sub
psllq
incb
inc
movsl
orb
or
cmp
inc
fists
aas
inc
ret
daa
ja
push
cmpsl
mov
dec
ja
pushf
xchg
add
xchg
pushf
sbb
jo
iret
jnp
shl
dec
dec
lods
out
jb,pn
xchg
pushf
add
push
xor
das
invd
das
in
sbb
xchg
cmpsl
shrl
xchg
scas
mov
popf
mov
xor
call
daa
or
jo
inc
push
leave
addl
pop
jl
mov
cmpsl
loop
das
daa
les
xor
mov
xor
test
loope
in
je
leave
dec
and
mov
xchg
add
out
imul
inc
cs
test
xchg
push
and
xor
daa
inc
nop
mov
and
xor
push
add
dec
dec
dec
dec
in
hlt
cld
add
daa
daa
daa
and
sbb
in
cmp
sub
and
ja
mov
push
jns
add
addb
or
jns
nop
mov
in
movl
or
mov
rcr
mov
xor
movlps
addr16
ja
cmp
xor
pop
sub
add
jno
insl
hlt
adc
xchg
cmp
and
xor
leave
orl
xchg
push
jo
subb
mov
ds
add
mov
push
mov
mov
jbe
das
dec
in
pop
sbb
sbb
pop
cmp
sub
es
xor
mov
je
int3
scas
inc
dec
hlt
in
inc
xor
xor
fmul
xchg
and
jne
jge
push
xor
pushl
and
xor
int
and
clc
lock
xchg
lock
pop
push
pop
push
pop
mov
sbb
ja
fcmovnb
mov
xchg
add
mov
mov
sbb
iret
into
xor
in
nop
cltd
das
xor
ja
pop
insl
mov
movsb
mov
pop
in
xor
and
cltd
mov
dec
push
pavgw
mov
jo
pop
push
testb
or
dec
out
stos
push
cmovs
lret
les
mov
add
repz
call
or
jae
cmp
inc
or
push
xor
ret
dec
sub
movsl
add
mov
fcomps
and
sub
addr16
or
in
lods
jne
ja
sub
rorl
sbb
mov
cmp
push
repnz
inc
mov
cwtl
sub
mov
scas
inc
shlb
lock
sub
xchg
ss
and
fs
cmpsl
pop
lahf
sbb
cmpsl
or
lret
lret
lret
imul
aaa
and
repz
push
or
dec
test
repz
push
or
pop
xchg
xchg
xchg
xchg
aaa
gs
insl
aaa
jne
jge
xchg
xchg
xchg
aaa
test
lea
xchg
aaa
popf
sahf
out
xchg
aaa
movsl
push
adc
sahf
out
pop
mov
repnz
aaa
mov
cmc
fs
aaa
scas
cmp
or
push
and
push
cmp
cmovl
sahf
inc
push
and
push
sbb
imul
outsb
mov
pop
push
aas
fdivl
pop
arpl
push
iret
test
in
xchg
and
repnz
jo
cmp
repnz
cmp
cmp
repnz
in
in
cmp
cmp
repnz
cmp
or
adc
rorb
and
push
cmp
xor
cmp
popf
js
cmp
push
cmp
inc
repnz
fcmovne
leave
stos
mov
pop
ret
add
xchg
out
lret
add
sahf
ja
fninit
push
or
repz
jb
or
sti
cmp
cmp
push
sahf
out
sahf
pop
adc
sbb
and
sub
dec
orps
leave
stos
cmp
adc
or
fisttpll
jns
insb
scas
jns
leave
repz
mov
xchg
add
push
xchg
push
les
cmp
in
ror
cmp
addr16
in
cs
or
jmp
xlat
push
and
aaa
out
inc
sbb
sbb
xchg
adc
repnz
sbb
pushf
loopne
cmp
ja
jg
enter
push
push
xchg
das
cmp
repz
or
repnz
mov
or
popf
cmp
repz
push
iret
pmovmskb
mov
out
movntq
out
imull
jmp
aas
sub
cmp
push
xchg
mov
xor
fchs
push
xlat
cmp
pop
dec
in
daa
iret
add
mov
fsubrl
xchg
out
loopne
ja
in
in
out
pop
lar
pushf
loope
movsl
lods
cmp
mov
mov
inc
lds
cmp
inc
jb
inc
cmp
or
enter
xor
cmp
sahf
xchg
sub
add
inc
pop
cmp
push
push
pop
or
pop
or
arpl
pop
adc
jns
cmp
and
inc
xor
sbb
psrlw
fstps
loope
leave
repz
cmp
icebp
pop
stc
cmp
or
add
pop
or
mov
inc
sub
xor
cmp
fucomi
insl
testb
pop
push
negl
jae
mov
add
xchg
mov
cmpsl
pop
in
or
outsl
je
shl
jns
daa
push
add
adc
sahf
out
add
add
jbe
into
in
or
pop
adc
pop
add
mov
pop
push
addr16
js
jmp
push
xor
xor
aas
aas
push
jae
cmp
add
repnz
movsl
push
dec
inc
add
nop
push
repnz
xor
xor
in
out
testb
dec
mov
inc
add
add
aaa
sub
or
enter
cmp
and
in
inc
inc
dec
inc
push
inc
dec
test
ss
test
xor
leave
mov
test
repz
mov
mov
jmp
repz
push
inc
pushl
pushf
es
cs
xchg
xchg
pop
pusha
popa
imul
jns
fidivrs
movsb
xchg
pushl
push
push
ss
jae
insb
ss
sub
es
mov
dec
fbld
out
in
adc
adc
adc
in
sbb
fsubl
in
inc
sub
xor
cmp
leave
repz
repz
repz
arpl
pushf
pushf
cmp
imul
jnp
leave
leave
leave
repz
mov
leave
mov
repnz
inc
inc
aaa
xchg
sbb
pop
cmp
inc
aaa
aaa
in
icebp
and
sbb
jb
inc
daa
inc
das
inc
in
test
push
addb
jmp
outsl
repz
cmp
add
daa
iret
add
in
in
lret
call
testb
push
push
sbb
xchg
inc
jo
inc
cmp
push
testl
dec
inc
mov
gs
pop
nop
mov
in
movl
and
rclb
leave
and
mov
sub
inc
xchg
dec
sahf
pop
in
add
cmp
imul
movsl
shrd
cmp
cmp
addr16
outsl
rolb
xchg
and
inc
loopne
inc
in
outsl
mov
pop
clc
lcall
inc
push
and
cmp
inc
xor
out
xchg
out
push
push
add
fstp
andl
xchg
movsb
lods
call
iret
scas
xlat
loop
add
cmc
and
out
cmp
inc
jmp
in
inc
dec
push
cmp
iret
inc
inc
jb
dec
jb
inc
test
in
pop
rclb
jl
rorb
rcrl
sbb
add
cmp
fstl
or
shlb
mov
cwtl
out
repz
dec
cs
push
loopne
inc
ss
cld
cmp
push
pop
ds
out
imul
or
xchg
mov
ljmp
push
ds
dec
cmp
mov
sahf
add
movzwl
dec
bnd
dec
mov
seto
jns
inc
xchg
add
jmp
pop
str
repz
push
dec
pop
cs
dec
aaa
jns
outsb
push
or
or
jo
cmp
xchg
ds
inc
add
inc
xlat
leave
jae
cmp
ja
add
sub
add
xchg
cmp
sub
stc
mov
cmp
push
xor
test
mov
add
or
incl
lock
in
dec
and
inc
inc
pop
leave
mov
rcll
push
stos
dec
jb
dec
dec
push
dec
cwtl
inc
daa
fldl
xchg
xchg
xchg
pop
xor
dec
fldenvs
insl
pop
mov
addr16
dec
pop
xchg
dec
popf
dec
or
in
test
mov
mov
xor
out
dec
inc
dec
inc
and
adc
dec
daa
pop
leave
xor
sub
test
leave
mov
jg
in
jns
mov
mov
int
inc
xor
roll
dec
dec
cmp
xchg
push
addb
scas
jmp
leave
inc
xor
daa
inc
push
outsb
repnz
add
psllq
xchg
add
das
pop
pop
or
popf
cmp
push
jne
push
or
dec
jb
mov
mov
shll
inc
jg
fcmovne
inc
loope
mov
fucomi
icebp
psubw
push
xchg
in
mov
dec
cmp
leave
repz
add
add
fmulp
repz
push
push
pusha
imul
jns
out
jae
jle
mov
cmp
js
jb
xor
ja
jb
in
cs
dec
std
dec
out
add
and
loopne
dec
aaa
cmp
inc
xchg
inc
repnz
and
nop
dec
and
inc
inc
ds
sbb
pop
add
xchg
and
mov
and
mov
sbb
das
rorl
xor
and
mov
addr16
paddb
stc
add
or
add
add
sbb
sub
jb
cmp
or
inc
dec
repz
jae
or
repz
adc
dec
repnz
mov
sub
dec
pop
jb
adc
sbb
pop
and
inc
inc
insb
incb
pop
and
push
mov
leave
inc
cwtl
dec
lock
jl
cmp
xchg
scas
push
push
add
add
rolb
mov
push
repnz
cmp
cs
or
fs
cmp
inc
sbb
push
xor
inc
mov
push
inc
push
push
push
pop
jno
enter
push
jb
jge
iret
add
into
jg
push
xchg
push
pop
or
pushf
pushf
pop
and
ror
pushf
pushf
pushf
xlat
loop
clc
xchg
and
add
push
sbb
jl
mov
and
and
in
dec
dec
push
fs
jb
jecxz
push
push
addr16
pop
fwait
dec
dec
mov
test
enter
andl
dec
jb
decl
xor
cmpl
shlb
xchg
jg
pop
pop
in
rcrb
inc
xchg
out
mov
cmp
push
div
dec
loopne
sahf
add
push
inc
out
dec
nop
xchg
int
testl
je
sbb
mov
xchg
push
ffreep
pop
add
push
nop
pop
fmuls
lods
nop
mov
mov
ss
pushf
fimull
xchg
popf
imul
xchg
xchg
pop
dec
and
jns
test
add
into
or
in
es
decl
xchg
in
add
dec
dec
enter
pop
push
popa
jae
das
fsubrs
addl
mov
insb
dec
inc
ja
push
mul
or
add
scas
mov
out
testb
leave
andl
dec
mov
enter
movsb
dec
rcll
call
mov
push
add
je
outsb
xchg
push
push
daa
xor
push
add
fucompp
mov
dec
push
enter
dec
push
in
lods
mov
in
xchg
test
push
xchg
push
leave
mov
movsl
inc
push
sub
push
pusha
daa
jo
in
cwtl
push
mov
and
cmp
les
push
in
aad
and
lods
scas
sbb
and
or
sub
call
or
aas
and
mov
inc
dec
and
jp
jmp
fs
and
jmp
pop
mov
aas
sbb
inc
rorl
fs
inc
loopne
pop
outsl
jo
mov
daa
outsl
pusha
fdivrs
or
js
test
push
es
stc
xchg
mov
outsl
ficomps
cmpsl
loope
sbb
rcrl
das
mov
add
or
aas
mov
adc
jg
xchg
mov
push
aaa
aas
cs
inc
xchg
cmp
fadds
push
cmp
jae
insl
cmp
jb,pn
fistpll
mov
ret
pop
aas
pop
mov
addr16
iret
inc
pop
dec
push
repnz
iret
sub
test
inc
dec
xchg
push
movsb
push
mov
iret
testl
insb
cmp
scas
dec
popa
push
dec
popa
rcr
xchg
aaa
jecxz
out
pop
andps
cmp
lods
mov
popf
mov
pop
push
cwtl
nop
in
stos
cmpb
add
push
mov
insb
mov
orl
mov
dec
pop
xchg
inc
add
xchg
fsubrs
dec
out
mov
pushf
push
out
callw
dec
adc
lock
push
mov
lret
add
rcrl
and
add
nop
add
sub
nop
add
add
mov
push
dec
mov
adc
aas
inc
push
inc
or
inc
ljmp
mov
pusha
call
push
enter
lcall
inc
push
notb
dec
dec
inc
test
mov
xor
or
dec
iret
dec
mov
movsl
xchg
add
inc
ja
in
add
add
test
outsl
arpl
push
dec
aaa
jb
fmull
sbb
mov
push
push
gs
ja
cmp
addr16
and
insl
push
outsl
ja
add
js
pop
rcl
add
mov
int
outsl
push
push
push
mov
xor
and
insb
imul
insb
mov
or
xchg
mov
bound
pop
iret
mov
ficoml
mov
mov
xor
inc
pushf
xchg
lahf
sbb
pop
out
xor
insb
inc
rclb
inc
addr16
fwait
or
sbb
adc
pop
dec
cmp
xor
inc
add
lds
inc
insb
mov
lds
movsl
mov
fdivs
orl
stos
aas
orl
or
cmp
xor
bnd
outsl
fcoml
outsl
ds
outsb
push
push
inc
or
inc
dec
lods
jbe
ss
aas
ror
inc
rcrb
aaa
aaa
stos
inc
and
push
or
movsl
sarb
mov
inc
cltd
pop
mov
pusha
cli
fbstp
push
jnp
add
or
jo
sbb
stc
and
outsb
imul
sbb
add
mov
lds
addr16
jmp
xor
aaa
cmp
cmp
pop
xor
xor
cmp
xor
xor
push
bound
jbe
sub
jp
fs
sub
jne
cltd
xor
xlat
testb
sti
call
loopne
pusha
shlb
inc
dec
je
pop
mov
dec
dec
nop
mov
idivb
dec
scas
and
je
inc
sbb
shll
sbbl
int
jne
xor
or
add
ret
xor
pop
push
adc
pop
jo
loope
or
inc
cmp
add
clc
scas
and
jae
dec
xor
aad
sub
pop
jmp
push
cmp
push
pop
add
push
mov
sub
int
insl
aam
inc
xchg
push
lcall
fmull
add
bound
fs
push
test
repz
imul
inc
xor
push
push
push
add
or
xlat
movsl
sbb
andb
cs
mov
inc
or
xlat
mov
and
stos
add
arpl
sbb
jge
iret
mov
pop
dec
inc
cmp
adc
addr16
data16
aam
cld
xchg
lock
xchg
mov
testl
enter
jns
out
pushf
rorb
sahf
je
pop
roll
sahf
out
cmp
and
or
cmp
out
hlt
xchg
fcomp
fxch
repz
rcr
fistl
sbb
ficoms
cmp
repz
sub
out
cmp
sbb
add
in
xchg
sahf
out
sahf
in
in
out
out
sahf
jnp
mov
sahf
out
sahf
jo
pop
jmp
in
repz
jmp
out
or
cmpsl
xor
out
into
cld
xchg
lock
icebp
fdivrs
out
repnz
hlt
out
sahf
out
cmc
nop
testb
insb
clc
pop
stc
push
jns
out
cli
inc
sti
xor
iret
jnp
out
std
adc
out
add
cmp
insb
ds
add
iret
cmp
add
outsl
xchg
fcomp
iret
repz
fcmovu
fsubp
iret
pop
repnz
in
xlat
push
jmp
ljmp
iret
repz
cmc
div
clc
mov
cmp
stc
cli
sti
cld
add
push
pop
adc
xlat
or
jnp
nop
push
jbe
rcrb
cmpsb
add
push
pop
pop
fwait
dec
sti
cmp
bound
ds
pop
das
jo
aaa
mov
test
cmp
out
dec
fld
or
jne
decl
pushf
test
jg
xor
ja
popa
push
out
mov
lcall
hlt
push
xor
xchg
fs
xor
fdivrl
jmp
sar
call
mov
sub
mov
sbb
dec
jno
repz
incl
in
insl
push
mov
hlt
movl
imul
std
in
leave
gs
decl
fldcw
arpl
or
pop
adc
in
pusha
aad
jno
jmp
inc
aam
dec
std
test
movsl
cli
test
xor
leave
mov
push
cld
ljmp
pop
filds
or
shrl
cmp
push
adcb
call
enter
mov
and
mov
cltd
xchg
mov
mov
or
decl
and
or
adc
stos
sbb
data16
inc
fdivl
jno
add
rcrb
mov
mov
movsl
in
lahf
xor
mov
js
stc
incl
xchg
sbb
push
sub
insb
mov
xchg
add
hlt
push
imul
fdivs
test
call
push
insb
jnp
add
shl
adcb
cmc
fnstenv
adc
ljmp
cld
fistps
ficoml
gs
aam
pop
popa
mov
into
push
ljmp
cmp
mov
inc
movsl
fisttps
xchg
fadd
shll
cltd
cli
jmp
outsb
xor
mov
sarb
add
in
incl
inc
dec
or
cmp
add
daa
adc
or
and
mov
push
mov
outsl
and
aam
mov
push
stc
ficomps
leave
fldcw
and
xlat
pop
fwait
adc
cmp
mov
cmp
lods
insb
mov
mov
mov
add
inc
aad
scas
ja
popf
adc
push
fdivl
mov
arpl
test
fs
ds
or
or
push
in
decl
xchg
daa
scas
int3
pushl
xchg
shlb
add
inc
push
imul
xorb
sbb
push
std
jmp
push
imul
aam
loopne
rorl
dec
frstor
fistpll
decl
aad
mov
call
xchg
shll
push
repnz
addr16
jmp
dec
ss
fisubrl
or
scas
testb
pusha
jp
inc
ret
out
pusha
fists
addr16
ljmp
jns
imul
andl
shrb
ss
push
xchg
ja
int3
add
mov
das
es
lds
or
sub
mov
cmpsl
call
ret
sar
pushl
sbb
ret
es
pushf
mov
insl
add
ss
jmp
addr16
jb
push
add
adc
mov
jnp
sbb
xchg
or
jmp
mov
fdivrl
fisttpl
aam
roll
clc
mov
push
int
mov
fs
jecxz
mul
ja
outsl
ja
mov
out
cli
jo
or
cmp
lret
pop
or
imul
imul
push
js
or
push
addl
mov
cmp
cmpsl
idiv
and
push
pusha
rorb
imul
scas
fcompl
fcos
dec
and
or
inc
push
aaa
push
scas
mov
fdivrp
add
cli
jg
mov
jmp
mov
pushl
xchg
mov
cmpsb
mov
sarb
sub
push
mov
jp
mov
dec
popa
les
incl
sbb
xchg
sub
aaa
mov
or
sbb
add
sub
or
xchg
into
cs
mov
push
and
push
imul
outsb
incl
xlat
addb
ds
aas
cwtl
push
jno
mov
or
mov
mov
outsl
insl
push
inc
outsl
push
lcall
jbe
dec
cmp
cli
push
jns
arpl
je
push
xchg
inc
fnstcw
pop
inc
xchg
add
pop
jno
dec
inc
jp
movsb
lahf
and
mov
pop
jne
push
jae
sbb
cs
inc
adcb
lret
mov
jb
sub
popf
fiadds
ja
pop
add
cs
sahf
out
jne
add
add
add
jns
or
or
pop
jb
cmp
or
or
or
daa
adc
adc
and
mov
inc
push
addr16
das
push
xorps
loopne
mov
das
insl
push
and
jns
jo
jb
pop
xorb
pop
orl
leave
leave
repz
pop
xchg
sub
aas
mov
loope
xlat
sbb
data16
imul
adc
add
icebp
adc
mov
jns
iret
or
mov
xchg
adc
sbb
cs
mov
push
adc
sahf
out
sbb
int3
mov
sbb
push
test
and
cmpsl
stc
cmp
call
and
repz
js
jns
cmpsl
stc
cmp
jp
push
cld
xor
incl
mov
lea
jb
add
adc
roll
test
push
int3
jnp
inc
push
or
bound
cmp
jle
add
movsb
add
repnz
mov
cmpsb
fisttps
mov
cld
inc
cmc
ja
inc
jle
test
shll
xor
cmp
enter
inc
mov
iret
mov
in
call
mov
push
add
mov
xor
fcomp
loopne
jb
jle
lret
inc
adc
jp
push
inc
pop
pusha
dec
orb
imul
lods
adc
mov
fmulp
push
mov
cmpsb
mov
pmovmskb
stos
adc
fiadds
les
and
push
outsl
movl
fistpll
popa
sub
pop
out
js
xchg
iret
or
pop
jnp
loopne
inc
sgdtl
imul
mov
add
daa
mov
inc
movsl
cmp
insb
cmp
push
fcom
repz
rcl
ror
enter
cmp
sarb
sahf
out
mov
js
jo
jns
out
push
out
sahf
pop
push
push
dec
inc
cmp
in
xor
and
sbb
jge
out
add
shl
in
xchg
jmp
push
fcom
les
jp
xorps
xchg
mov
sarl
stos
pop
jg
testb
seta
mov
es
lods
shlb
das
mov
das
pushf
fwait
movsb
push
sahf
ja
mov
mov
push
and
out
jnp
dec
ds
out
jns
jnp
ds
push
sub
cs
adc
and
iret
jnp
out
or
and
mov
insb
sbb
repz
sbb
add
cmp
mov
clc
push
and
and
cmp
repz
rolb
jmp
jg
mov
add
orb
inc
mov
pop
mov
daa
xor
aas
cld
push
mov
inc
push
sbb
jne
push
fimuls
mov
jns
ja
in
jbe
icebp
imul
pop
jle
mov
mov
add
dec
cs
add
enter
mov
add
xchg
or
ret
mov
adc
pop
in
adcb
sbb
lcall
mov
mov
ret
inc
and
sahf
mov
sub
inc
call
pop
std
and
sbb
addl
xlat
xchg
inc
push
add
inc
stc
mov
adc
addl
dec
pop
js
inc
outsl
loopne
jmp
xchg
test
mov
ljmp
daa
cmp
inc
mov
popf
sti
jmp
stos
push
inc
mov
repnz
test
es
sub
pop
stos
clc
scas
adc
inc
jmp
aam
imul
loope
jp
iret
inc
gs
xchg
push
cmpsb
fcomip
scas
mov
gs
or
addl
cmpsl
xchg
cmp
xor
pushl
in
cmp
sahf
xchg
pop
lcall
lock
mov
popa
sar
mov
cli
fsubs
stos
xchg
clc
repz
mov
subb
fwait
xchg
and
imul
int
add
sti
out
fisubrs
inc
or
mov
pop
fs
dec
lea
push
aas
ret
shrl
mov
icebp
aas
rorb
and
cmpsl
out
aas
inc
cmpsb
mov
insb
scas
incl
aas
xor
aad
mov
std
std
into
popa
test
ja
stos
in
das
dec
lcall
dec
les
aas
xchg
les
jne
int
mov
addr16
push
mov
call
mov
mov
popa
push
pop
sarl
jl
mov
das
lea
mov
xchg
test
movsl
jmp
jg
sub
jge
mov
inc
rcr
push
ds
jmp
push
int3
and
call
cmp
jp
and
cmp
mov
cmp
incl
std
xlat
cmp
mov
sbb
add
movb
aaa
fldt
cmp
jno
incl
mov
dec
nop
pop
cmp
fisubl
xor
push
jmp
mov
sub
dec
in
ss
push
scas
into
imul
faddp
jge
call
lcall
xchg
cmp
push
andl
dec
dec
gs
std
orl
pop
ficomps
addr16
enter
fmuls
jle
add
jns
imul
cmp
pop
js
mov
sarl
repz
xor
sahf
out
cmp
push
pop
ja
xor
out
mov
repnz
das
or
aam
dec
insb
dec
and
loopne
aaa
or
jne
addb
add
inc
push
add
outsb
stos
and
inc
adc
or
push
out
mov
jne
sbb
push
add
or
out
stos
jge
dec
xor
dec
adc
inc
aaa
movsb
aaa
push
sbb
xor
add
mov
mov
xchg
or
mov
orb
fistpl
mov
ss
sti
jmp
cmpl
leave
in
lret
cmpsl
in
leave
push
cwtl
push
leave
cs
lods
mov
xor
iret
cmpsl
incl
xor
mov
mov
insl
mov
dec
sub
push
mov
add
lcall
mov
subb
nop
add
jnp
in
out
mov
inc
aaa
into
sar
ljmp
pop
ja
cmp
lock
fdivr
loopne
adc
dec
pushf
movsb
push
jmp
pushf
pusha
add
fldt
std
jnp
or
or
mov
push
or
or
or
or
or
adc
adc
push
adc
mov
add
pop
sbb
adc
adc
adc
outsb
mov
add
or
adc
pop
adc
sub
sub
rolb
mov
add
add
aam
add
cmc
and
xchg
jbe
add
xchg
sub
cmp
jb
imul
jg
ds
add
push
adc
pop
and
xor
inc
mov
cmp
shl
and
bound
js
sub
test
scas
mov
pop
test
mov
test
subl
push
jno
or
inc
aaa
xor
pop
test
scas
andb
and
or
adc
mov
or
adc
push
adc
int
mov
adc
or
xchg
mov
lock
add
and
adc
inc
mov
mov
dec
rorl
scas
fisubl
nop
pusha
and
mov
rcr
push
ret
xchg
and
sub
std
cmpsb
xor
aas
fs
std
ljmp
lods
loopne
ja
fdivrl
add
mov
mov
loopne
mov
fsts
push
adc
dec
mov
cmp
ret
ja
out
cmp
ljmp
xor
and
fistpl
jg
inc
cmc
iret
xchg
inc
jl
repnz
dec
or
adc
pop
push
roll
add
xchg
or
call
les
add
lds
cld
cli
and
mov
fiaddl
jg
fnstsw
call
mov
test
pop
lahf
mov
movsl
jecxz
pop
mov
aas
lcall
call
jg
or
insb
sub
addr16
out
data16
decl
sbb
push
push
xchg
add
repnz
inc
lock
scas
jle
fcmovnu
clc
cmp
mov
in
mov
orb
int3
lcall
fs
mov
pop
pop
mov
popl
movb
xchg
sbb
scas
adc
lcall
xchg
mov
xor
lods
scas
xchg
test
aam
and
sbb
sarl
and
fcom
inc
push
fwait
movsb
jmp
push
lret
push
out
in
and
ss
repz
cmpsb
jg
pop
outsl
icebp
mov
pop
lock
std
or
pop
mov
daa
test
aaa
dec
dec
pop
push
out
std
ljmp
sahf
loope
rorl
mov
int
arpl
push
out
or
pushl
cld
push
sahf
pop
clc
sti
jg
jno
lock
jg
inc
icebp
xchg
sar
std
sarl
xor
hlt
and
xchg
jmp
sbb
lock
jecxz
mov
mov
out
pop
jb
mov
mov
mov
mov
inc
fwait
sbbb
mov
dec
jp
push
gs
sti
sub
hlt
push
add
stc
loope
mov
sar
andl
stos
jbe
cmp
icebp
testb
mov
incl
xor
jns
mov
in
repnz
jno
pop
sub
jg
scas
cld
or
push
inc
sbb
paddb
jg
movl
clc
jb
adc
push
lock
lods
jp
sti
push
mov
aad
aaa
sbb
into
fcomps
sbb
sbbl
into
andl
jg
test
loopne
cli
adc
aaa
xchg
in
add
inc
adc
int
fwait
in
loope
fisttpll
out
aas
std
cli
push
push
push
ljmp
idivl
cmp
sub
inc
scas
inc
mov
jg
je,pn
ljmp
dec
mov
mov
scas
call
les
jne
gs
jns
enter
or
push
pushf
sar
call
xlat
sub
cmp
sti
punpckhbw
cmpsb
orb
mov
inc
xor
jmp
push
mov
pop
hlt
sub
movsb
add
jmp
jg
lea
jg
gs
std
xorb
jg
aad
mov
js
ret
das
pop
pop
pop
shlb
out
sarb
sbbl
push
ljmp
jno
or
sarb
std
pop
les
cli
mov
mov
inc
jmp
stos
mov
and
insl
add
leave
push
scas
loop
jge
push
shrl
mov
push
mov
adc
and
sbb
xchg
jo
and
out
test
jae
sbb
call
sti
cmp
ficoms
aam
sahf
imul
fcmovnu
sar
filds
insb
stos
arpl
add
cld
call
js
cmp
incl
outsl
scas
lods
hlt
cmp
fistl
mov
adc
push
movsb
xchg
or
mov
stos
dec
lods
in
sbbb
lahf
ret
fcmovu
ds
cmpsl
scas
popa
in
pop
or
call
cld
aas
clc
jge
jnp
sbb
outsb
mov
sbb
jecxz
inc
adc
mov
call
adc
adc
push
jo
pusha
imul
add
mov
cmp
xchg
mov
cwtl
pop
xchg
ftst
jbe
xchg
and
add
jae
inc
test
jg
mov
lahf
cld
sub
aas
stc
add
out
gs
jno
fidivrl
call
adc
pop
cld
addl
adc
and
insl
rcll
fmull
enter
jecxz
scas
decl
dec
sub
in
pop
mov
sub
mov
dec
incb
fisubrl
aas
mov
push
sbb
push
inc
or
testl
mov
jg
mov
aad
test
inc
mov
mov
iret
push
inc
ljmp
jbe
push
sbb
stos
icebp
pop
incb
jno
idivl
push
inc
jecxz
sbb
sarl
adc
loopne
jbe
arpl
sar
adc
lahf
xor
fildll
cmp
dec
push
in
aas
mov
iret
rorl
push
and
aas
rolb
clc
xchg
or
aas
sub
jne
push
and
mov
adc
div
jg
inc
aas
push
rcrl
rolb
pop
inc
jb
fistpl
adc
outsl
mov
lock
jno
pop
nop
mov
addr16
scas
inc
sti
arpl
daa
std
or
sbb
mov
inc
cmpsb
popf
push
loop
sbb
or
cld
jg
imul
xor
dec
xor
fsubr
fistps
lds
fidivrl
jg
pop
sbb
stos
pop
add
dec
mov
sub
jge
cmp
pop
ja
lahf
les
sbb
sbb
cld
addl
cld
incl
sbb
mov
lahf
outsl
int3
push
sbb
xorl
mov
jle
xchg
popa
add
inc
sti
out
out
outsl
xchg
inc
test
in
jge
popa
push
test
sbb
mov
outsb
hlt
sti
fsubs
shl
dec
jp,pn
adc
lahf
mov
mov
lcall
aas
xor
shl
cld
mov
adc
stos
pop
jg
pop
sar
jg
outsl
sub
sarb
adc
xor
pop
rcr
dec
mov
fidivrl
sti
jmp
lea
jp
jnp
jecxz
adc
inc
lds
push
pop
call
and
imul
or
inc
pop
xor
rorb
and
add
ljmp
lcall
mov
pop
inc
cmpsl
enter
mov
into
test
xchg
ds
clc
in
movsb
insb
or
and
xchg
fidivrs
pop
rcl
add
insb
test
aas
repz
outsl
lock
push
push
paddsw
pop
stc
out
mov
clc
push
std
mov
cmp
or
mov
ljmp
cmc
mov
push
mov
fsubrp
dec
sahf
enter
fcmovb
inc
adc
inc
loopne
mov
incl
out
rolb
pop
or
or
mov
mov
dec
ss
lods
movsb
or
repnz
lock
pushf
imul
jl
fistps
jl
xchg
imul
pop
in
outsl
out
cmp
jmp
mov
pop
lock
in
scas
and
jmp
hlt
dec
mov
xlat
inc
incl
ja
pop
aas
mov
jg
mov
sub
addr16
jbe
mov
cld
daa
jp
std
adc
cltd
or
mov
ret
clc
push
std
and
add
lock
pop
pop
div
cld
testl
sbb
add
stc
lahf
loope
jae
jmp
or
je
jge
fbstp
xchg
mov
stc
add
out
icebp
mov
loope
mov
mov
popf
sti
mov
fbstp
in
sub
push
das
push
jge
out
cmp
call
xor
decb
adc
jbe
mov
mov
and
call
shr
cltd
add
jo
mov
jg
js
int
add
push
pop
aaa
std
mov
dec
dec
inc
sbb
mov
mov
aas
icebp
ret
sbb
push
jnp
int
jmp
sbb
adc
shrb
mov
stos
mov
loope
loope
mov
lahf
jp
in
inc
sti
dec
add
xlat
jmp
outsl
adc
fldenv
iret
fdivrl
xchg
lcall
lock
repz
sub
jo
jo
and
outsl
pop
out
jg
jno
ret
or
inc
arpl
decl
in
inc
sbb
iret
push
dec
jge
pop
clc
xchg
cmpsb
ljmp
ds
inc
mov
mov
jne
in
sbb
xchg
imul
jmp
outsl
jmp
sub
lcall
std
mov
daa
jmp
faddl
mov
inc
add
fisttps
div
pop
stc
push
dec
out
fstpt
cmp
mov
mov
enter
or
loopne
xchg
jg
out
daa
icebp
push
lahf
sti
inc
pop
imul
push
xchg
cmpsb
scas
les
pop
xor
mov
xchg
jmp
mov
fildll
fsubrl
dec
add
leave
inc
adc
add
mov
hlt
inc
sti
push
sti
pop
inc
dec
push
mov
pop
and
mov
shlb
pop
iret
and
mov
inc
mov
cmpsl
repnz
dec
or
sahf
jl
add
or
and
dec
imul
push
int3
push
fiadds
out
add
fidivrl
lret
orb
xor
xchg
fistpll
bound
imul
jle
movsl
and
jne
jo
imul
jbe
push
insb
or
ds
jbe
imul
or
loopne
idivl
arpl
xchg
and
or
mov
jb
cwtl
dec
sbbl
xor
push
push
mov
mov
push
fs
sti
push
imul
add
pop
dec
push
add
shl
or
pop
jo
mov
out
mov
push
dec
push
inc
push
inc
dec
pop
out
fstpl
divb
push
ss
cmp
push
and
push
jp
xor
xlat
scas
shl
push
sub
ja
push
pop
mov
in
fiadds
push
xor
fs
into
push
in
pop
ja
ss
dec
data16
jns
fs
sub
cs
into
sub
imul
and
mov
inc
push
jp
mulw
mov
lahf
dec
inc
push
jle
imul
fs
push
cmp
xor
pop
push
mov
sbb
scas
dec
mov
daa
dec
aaa
insl
pop
dec
xchg
repnz
mov
mov
pop
xchg
xchg
jne
mov
pop
xor
pop
lcall
sti
das
xor
jg
sahf
addr16
mov
mov
add
push
jp
not
inc
lock
xor
pop
fidivs
fiadds
dec
lahf
dec
xlat
push
cmp
fisttps
jne
fisubs
mov
outsb
pop
push
push
push
das
neg
shll
mov
mov
push
pushl
cmp
mov
bound
cs
xor
filds
push
jg
pop
or
and
xor
jo
add
pop
aas
push
popa
dec
jb
pop
popl
push
lahf
iret
inc
push
insl
rcrl
mov
aas
sarl
jg
insb
dec
ficomps
inc
movd
jae
insb
outsl
push
push
fiadds
dec
dec
push
inc
mov
lock
xor
lahf
mov
popf
adc
push
iret
push
bound
cs
jg
outsb
pop
inc
lahf
dec
pop
mov
js
into
jbe
fisttps
xor
insb
aas
xor
scas
call
sahf
call
jae
js
ljmp
js
sti
hlt
jmp
das
je
mov
out
into
sub
popl
cmc
fidivrs
xor
cmpsl
sti
fildll
pushl
cmp
mov
sysenter
femms
or
push
decl
dec
das
push
scas
xor
push
push
pop
aas
out
fists
jp
scas
jnp
pop
lock
inc
das
pop
iret
push
mov
push
fisubrs
outsb
dec
outsl
mov
pop
push
dec
ja
pop
pop
sbb
outsb
pop
cs
out
ss
jo
fiadds
inc
das
insl
outsb
fistps
icebp
ds
dec
pop
lcall
jne
push
mov
das
xor
jb
outsl
jecxz
add
pop
arpl
cmp
pop
inc
pop
insl
call
jmp
xor
cld
mov
ljmp
ja
dec
jns
addr16
mov
jl
inc
xchg
imul
jle
fbstp
inc
mov
mov
pop
mov
out
pop
push
push
mov
lock
dec
cmp
rsm
idivl
iret
fs
dec
packsswb
mov
out
push
lahf
mov
sbb
dec
jbe
pop
sbb
popl
dec
aas
push
lock
scas
out
sarl
out
dec
push
gs
dec
inc
jg
jnp
or
dec
outsb
pop
jg
mov
out
push
pop
jo
pop
test
jp
push
out
outsb
dec
pop
das
cli
sub
insl
das
inc
pop
pop
jo
jnp
das
sahf
sahf
xor
orb
imul
and
cmp
movsl
pusha
test
push
out
iret
imul
xor
dec
pop
insb
out
fwait
xor
scas
inc
xor
mov
loop
jp
addr16
aas
push
sarb
jb
cmp
mov
xor
push
mov
setg
das
pop
out
clc
hlt
jb
dec
dec
lahf
outsl
aas
cmp
xchg
inc
cmpb
push
xor
push
jns
maskmovq
mov
ds
push
pop
xor
mov
inc
cs
push
dec
dec
inc
dec
mov
sbb
xor
repz
jge
dec
pop
xor
pushf
xor
inc
xor
cmpsl
das
mov
push
pop
out
scas
mov
outsl
dec
push
out
push
xor
scas
inc
pop
push
out
dec
das
outsb
dec
or
dec
mov
push
push
mov
cmpsl
pop
dec
dec
cmpsb
jo
addr16
arpl
push
mull
xchg
mov
push
fisttps
xor
outsl
dec
ret
jge
movq
mov
xchg
arpl
sub
adc
mov
push
mov
xchg
cmp
dec
into
js
push
jl
sbb
dec
scas
xor
inc
inc
out
mov
xor
out
push
outsl
sbb
fisttps
dec
sub
fsubrp
stos
je
push
and
xor
mov
sub
dec
sub
imul
jg
lahf
cmp
jmp
push
cs
or
push
push
cs
mov
insb
iret
gs
stos
push
pop
dec
lahf
ficomps
aaa
push
mov
cs
fsubr
pop
pusha
out
push
dec
jne
jns
shrl
rdtsc
loop
xchg
rcrb
pop
sbb
mov
sahf
jbe
jae
dec
inc
in
cli
push
out
pop
pop
js
mov
out
dec
mov
pop
xor
les
push
inc
mov
sbb
mov
inc
das
daa
lods
mov
jne
outsl
scas
loope
ja
outsl
push
pop
xor
push
mov
scas
bound
or
nop
jo
outsl
out
lahf
fiadds
scas
mov
cmove
push
pop
xor
xlat
aaa
fiadds
ja,pt
ja
lods
cli
mov
fistpll
test
cmc
repz
scas
lahf
inc
pop
pop
cmp
push
inc
scas
xlat
stos
dec
xlat
aad
iret
ficomps
xlat
sbb
dec
xor
iret
dec
and
in
push
cs
aas
push
fbld
fisttpll
testb
into
fistpll
filds
fs
aas
inc
iret
push
outsl
iret
pop
outsl
imul
or
jg
pop
out
inc
push
pop
dec
mov
xor
sarb
fists
dec
add
addps
and
out
jp
iret
and
les
popa
xor
jns
xchg
mov
pop
jg
mov
das
iret
sub
push
jl
jg,pt
filds
adc
jb
outsl
inc
dec
outsl
ds
push
loopne
fistl
ds
dec
push
jmp
ja
push
adc
and
push
mov
arpl
fbstp
loopne
pop
sbb
ret
rorb
cmp
mov
add
into
scas
loopne
mov
out
add
clc
out
dec
mov
rcrb
add
sbbb
ds
dec
push
mov
push
js
and
jl,pt
and
jg
pop
loop
and
cs
aas
pop
dec
mov
push
inc
gs
fdivrl
insl
push
iret
jg
mov
pop
das
pop
adc
pop
jmp
outsb
adc
call
fists
sub
daa
push
add
fistps
pop
sbb
inc
sahf
out
xor
movl
pop
jo
adc
jb
add
mov
fsubrl
ret
dec
dec
fwait
hlt
ds
push
pop
mov
rdtsc
aas
dec
sub
pop
call
or
xlat
adc
push
dec
js
jg
cmp
xor
mov
int
insl
push
fisubs
jmp
pop
ljmp
mov
loopne
das
js
push
out
cmp
aaa
into
inc
pop
push
out
mov
aas
shll
push
push
out
push
cmpsl
jmp
jle
data16
jle
aaa
pop
inc
lcall
aaa
xor
push
iret
inc
fisttps
lret
pop
test
fildll
fcoms
pop
mov
mov
outsb
ja
ret
scas
outsl
mov
daa
dec
dec
idivl
pusha
push
jnp
dec
xor
xor
adc
pop
dec
push
orl
fs
mov
ds
bswap
lea
js
incl
xor
rcrb
inc
out
push
out
iret
jg
out
push
sbb
xor
dec
addr16
lods
popa
xchg
jbe
mov
or
dec
out
jnp
push
outsl
push
mov
fldl
dec
push
xor
rorb
inc
pop
jne
xor
add
pop
jle
push
xchg
das
das
or
addl
pop
add
jmp
inc
scas
aas
adc
out
inc
or
xor
dec
decl
mov
fistpl
pop
out
negb
cltd
das
decl
enter
xor
bound
push
jl
adc
pop
cmpsb
push
scas
scas
push
jg
pop
dec
outsb
stos
or
push
addr16
aas
push
cmp
add
dec
push
scas
filds
sub
jg
rcrl
ss
dec
mov
scas
loop
cmpsb
xchg
mov
xchg
push
das
ldmxcsr
add
out
xor
dec
test
aas
mov
mov
cmp
ja
cmpl
jp
fisubrs
divb
das
outsb
sbb
out
pop
dec
xor
pop
cmp
test
into
out
dec
push
push
inc
out
push
mov
scas
outsb
jle
cli
cs
dec
adc
xor
outsl
inc
mov
mov
xchg
imul
cs
dec
cs
ss
cs
movsb
or
inc
jne
sub
out
out
mov
filds
lahf
out
mov
push
aas
dec
push
imul
xchg
cmp
ficoms
dec
pop
dec
data16
iret
jae
sub
push
lahf
cmp
push
add
sbb
jnp
or
add
sbb
pop
outsl
push
jne
push
add
pop
add
aam
aas
xchg
ds
pop
jg
or
push
outsl
jg
loopne
xchg
sar
imul
push
xor
iret
aas
lock
roll
outsb
aas
sbb
imul
dec
pop
add
aas
call
lahf
outsl
cmp
jg
out
add
inc
jle
add
rolb
outsl
mov
xor
mov
ja
xor
dec
inc
js
pop
fistpll
pop
jp
js
dec
pop
ja
cs
pop
push
xor
loopne
pop
outsl
xor
mov
lcall
out
scas
xor
das
fbstp
pop
pop
imul
cmp
xlat
inc
das
lcall
inc
push
push
pop
mov
out
scas
lahf
and
loope
mov
inc
sub
adc
out
js
mov
incl
cmp
mov
add
sahf
push
iret
iret
cmp
imul
adc
outsb
mov
lods
jp
jp
imul
data16
xor
sub
dec
scas
push
pop
pushf
lock
je
or
stos
adc
iret
add
faddp
jmp
push
incl
es
inc
scas
inc
push
adc
push
push
dec
test
adc
fbld
dec
xchg
mov
pop
rorl
test
mov
sbb
lcall
adc
push
js
pop
pop
filds
ds
das
pop
imul
jo
or
push
scas
lea
mov
push
rolb
fcomip
push
out
cmp
pop
xor
ds
jno
fistps
out
adc
add
cs
mov
inc
pop
scas
inc
mov
fcompl
scas
fwait
adc
pop
incb
outsl
rorb
ljmp
int3
test
jg
imul
push
push
inc
mov
dec
dec
out
jnp
enter
pop
aas
scas
xor
inc
pusha
iret
pop
xor
lahf
fiadds
mov
sbbb
jae
mov
decl
mov
push
into
fists
xlat
cmp
es
fbld
pop
add
inc
les
jns
mov
pop
push
dec
insb
push
enter
fbld
addl
mov
cmovns
sbb
aas
push
or
shlb
xor
dec
and
jp
stos
test
scas
or
jg
cmpsl
jbe
aas
das
or
cmc
dec
jg
das
add
jle
mov
scas
xor
scas
ss
jg
dec
fildll
sahf
xor
cmp
jne
xor
out
dec
xchg
inc
xor
mov
pusha
movsb
addr16
scas
out
adc
jp
scas
test
pop
cld
rolb
xor
out
or
dec
pop
mov
dec
js
fisttps
out
into
xor
cmp
and
lods
arpl
decl
fiaddl
sahf
inc
pop
rcrb
jo
mov
inc
shlb
clc
or
xor
cmpsl
adc
mov
adc
mov
adc
push
mov
enter
adc
adc
fisubs
test
iret
dec
xor
xchg
lock
sbb
ret
decl
and
mov
insb
sbb
mov
mov
scas
or
mov
aas
dec
movsb
sub
xor
pop
or
fs
sub
das
fs
shll
pop
push
das
dec
and
sbb
test
or
fisttps
insb
loopne
push
jo
out
popw
test
add
pop
jp
inc
popf
sbb
mov
dec
push
bound
icebp
aaa
dec
lahf
push
jecxz
sbbb
pop
dec
imul
pop
jg
ds
push
inc
mov
fdivrl
sbb
pop
dec
mulb
popa
lea
ds
inc
fsubrs
mov
out
pop
fistps
pop
inc
sahf
iret
push
loopne
loopne
into
push
dec
xor
les
or
dec
lahf
outsl
mov
out
pop
out
xchg
jo
mov
call
sbb
push
je
push
jp
add
and
jle
outsl
fistpll
data16
mov
mov
sbb
dec
mov
jp
push
inc
imul
mov
add
dec
lret
imul
outsb
xor
aaa
xor
arpl
push
lahf
insl
cmp
out
xlat
js
sbb
arpl
pop
push
and
sbb
test
xchg
sar
arpl
scas
arpl
adc
mov
outsl
lahf
subl
inc
jo
hlt
scas
gs
add
cmpps
dec
int3
addr16
lahf
cmp
outsl
ret
addr16
jecxz
out
push
jg
outsl
jno
out
sahf
push
mov
ljmp
inc
add
sub
movd
pinsrw
sarb
inc
push
shl
mov
pop
push
imul
iret
mov
mov
fistps
mov
fidivs
dec
aas
push
jno
cmpl
mov
pop
push
iret
loope,pt
rolb
imul
push
pop
cmpsl
jno
or
sbb
aas
imul
cmp
push
test
test
adcb
adc
ds
pop
jle
iret
push
aaa
add
out
iret
clc
je
add
scas
outsb
push
ljmp
dec
cmpsb
loopne
scas
dec
les
jecxz
add
push
pop
jns
shlb
xor
das
js
push
nopl
ja
arpl
mov
negl
lahf
arpl
xorb
xor
mov
pop
pop
aas
ss
jmp
push
mov
testl
subl
push
jg
inc
jl
int
fistpll
ds
and
inc
push
jle
push
pop
pop
xchg
push
jg
sbb
ret
ds
mov
rcr
mov
cmp
dec
pop
enter
movsl
jno
fistpl
lahf
mov
push
es
ss
mov
mov
js
fildll
xchg
jl
adc
dec
pop
push
mov
push
pop
push
dec
aas
iret
dec
sbb
cvtpi2ps
rorb
insb
aas
push
push
test
xor
jle
lea
pop
dec
mov
pop
out
inc
out
aam
icebp
test
pop
cli
scas
push
push
pop
xor
add
push
outsl
mov
xchg
lock
aas
push
iret
aas
lahf
inc
xor
idivb
mov
and
rolb
inc
cmove
call
sahf
loopne
call
cmovle
add
pop
aas
fisubs
popa
push
mov
inc
mov
jg
inc
je
lock
outsb
adc
iret
pop
dec
lahf
orb
fistps
dec
push
pop
sbbb
cld
filds
push
jae
push
test
push
xor
mov
mov
test
aas
dec
dec
inc
and
adc
push
mov
cs
push
lcall
dec
mov
arpl
js
or
jp
push
push
mov
cmp
mov
mov
pop
stos
loopne
out
outsl
push
mov
push
mov
lahf
and
popa
scas
lahf
dec
arpl
shrb
into
scas
loop
outsb
adc
scas
and
add
js
adc
aam
mov
and
inc
das
lahf
mov
cmpb
or
sub
dec
lret
jns
push
mov
cmp
sbb
xor
sub
sbb
push
xor
pop
push
dec
scas
addb
outsl
mov
call
outsl
in
test
dec
pop
ret
dec
dec
dec
movsl
add
jge
arpl
pop
mov
dec
jg
and
lods
adc
cmovge
mov
pop
iret
mov
popa
xlat
lahf
pop
mov
adc
arpl
dec
pop
lcall
fists
arpl
sarb
push
aas
outsl
push
push
call
pop
fbstp
dec
pop
push
es
jne
aas
push
mov
ljmp
shrb
mov
orl
outsl
adc
dec
pop
das
ds
adc
xor
adcl
scas
xor
push
inc
enter
sahf
mov
outsb
scas
cmovl
lahf
jne
push
cmpsb
push
das
inc
adc
sbbl
lea
adc
test
dec
imul
xor
xor
test
pop
jns
pop
cs
ds
xor
mov
insb
shlb
mov
jp
xlat
push
pop
aas
pop
push
je
pop
lahf
cmp
scas
test
inc
scas
push
pop
sub
scas
mov
nopl
xor
cmc
cmpl
and
movb
outsl
insb
mov
mov
cmp
das
lods
dec
ljmp
in
pop
dec
jmp
xchg
inc
inc
jg
jecxz
pop
push
aas
cs
mov
scas
dec
pop
outsl
scas
in
iret
out
out
dec
xlat
adc
scas
pop
sub
shlb
push
lahf
push
outsl
lods
test
cmp
iret
jne
xor
roll
or
push
xor
add
das
addb
out
into
dec
xor
adc
adc
lahf
loopne
xor
mov
sbb
push
rdmsr
pop
jae
mov
out
aaa
adc
jg
dec
xorl
sahf
iret
ficoml
push
ja
lods
or
jnp
pop
push
lahf
lahf
xor
dec
fistpll
mov
mov
push
aas
xor
test
rsqrtps
mov
xor
scas
daa
pop
push
and
inc
mov
scas
arpl
aas
rolb
dec
lea
icebp
es
dec
add
incl
inc
add
das
adc
movl
insl
mov
jne
aam
push
ret
push
mov
sub
outsl
test
out
cmp
aas
sahf
mov
jns
aaa
xor
jg
sub
jbe
call
iret
jp
inc
push
inc
dec
fnstsw
add
clc
lahf
inc
jg
adc
pop
pop
ficoms
dec
outsb
push
ds
pop
mov
data16
pop
iret
fisubrs
movsl
add
pop
scas
inc
nop
aaa
sbb
cmp
xor
inc
push
inc
outsb
xchg
dec
lea
pop
scas
call
push
lahf
outsb
inc
addl
jmp
cmp
fwait
add
imul
mov
lahf
filds
mov
out
outsl
inc
clc
and
jp
fimuls
lcall
add
mov
arpl
outsl
add
dec
shrl
lods
es
push
inc
jg
adc
add
scas
adc
and
cmp
xor
adc
pop
je
mov
outsl
das
push
push
enter
push
mov
mov
xor
scas
icebp
negl
pop
pushl
pop
push
and
jno
scas
inc
add
push
pop
addr16
adc
imul
insl
cmpsl
fisttps
out
lret
es
dec
outsl
xchg
lock
pop
jg
iret
iret
sbb
pop
ficomps
scas
sbb
mov
push
jp
push
jecxz
decl
je
push
pop
and
outsb
push
pop
inc
xchg
sbb
pop
xor
int3
xor
push
decl
xor
xchg
mov
jle
mov
cld
jg
jg
js
lods
or
out
out
xorl
adc
scas
call
subl
outsl
arpl
mov
outsb
mov
insb
movb
pushl
inc
and
aas
inc
dec
movsl
out
orb
out
push
addl
cmp
pop
imul
push
mov
sub
cmpb
pop
jecxz
pop
pop
jg
das
and
pop
iret
incb
insb
scas
mov
arpl
pop
push
fistps
add
fisubrl
das
fnstsw
pop
out
into
push
scas
aas
pop
adc
inc
iret
inc
das
imul
push
jl
push
lahf
dec
iret
cmp
lcall
push
out
rorb
pop
sbb
pop
aaa
pushl
lahf
mov
insb
sub
xor
aas
and
add
cmp
ja
fidivrs
push
das
jns
sub
inc
inc
push
inc
pusha
scas
dec
dec
int3
imul
cmp
les
test
mov
insl
push
push
dec
les
dec
out
pop
adc
in
pop
ret
push
cmp
jg
add
jmp
sbb
dec
imul
aas
aas
incl
arpl
jae
ljmp
outsl
imul
movsb
or
or
out
or
xchg
repnz
push
mov
pop
jg
pop
out
dec
fistps
mov
call
fbstp
xchg
cmp
iret
jg
sub
call
jo
mov
bound
das
test
aas
push
pop
fisubs
add
outsl
into
mov
fimuls
push
mov
push
xor
and
and
jns
inc
lcall
xchg
popl
push
xchg
rsm
sarl
call
lock
adc
inc
lahf
mov
lds
mov
les
inc
iret
or
lods
aaa
sbb
xor
fbld
push
enter
ljmp
add
mov
xchg
outsl
pop
pop
lahf
ret
scas
pop
xlat
aam
push
sbb
add
dec
ljmp
cli
push
bound
popl
push
movzwl
imul
imul
mov
out
jbe
dec
push
dec
sbb
das
fistpll
arpl
pop
dec
xor
fadds
lcall
xchg
lahf
sysret
frstor
cmp
pop
push
pop
mov
aas
add
imul
push
test
mov
pop
incb
outsl
mov
iret
jo
xor
pushf
mov
push
add
dec
jecxz
iret
dec
test
test
cmove
decl
js
sbb
incl
mov
subl
arpl
jns
pop
out
loopne
das
fidivrs
mov
mov
or
dec
dec
push
or
add
rolb
pop
mov
clc
mov
je
arpl
ja
inc
movsl
mov
cmp
rolb
pusha
outsl
paddusw
inc
mov
pop
inc
mov
js
jmp
inc
iret
inc
xchg
scas
xor
pop
jp
jp
jg
jg
cmp
or
fdivrp
mov
dec
iret
add
cmc
cmpsb
xor
dec
out
loope
cmp
jns
aas
sahf
je
adc
rolb
dec
pop
flds
fildll
mov
cmp
pop
stos
dec
adc
and
das
jns
inc
add
pusha
adc
adc
xchg
je
push
stos
mov
pop
push
add
or
mov
rolb
pop
outsb
dec
test
push
dec
dec
xor
into
lahf
adcb
xor
loop
sbb
faddp
aaa
fisubrs
mov
pop
outsl
fs
or
adc
dec
loopne
mov
js
xor
pop
mov
xor
inc
ljmp
adc
js
mov
jbe
cmpsl
xor
push
rcrb
scas
inc
push
daa
adc
aaa
push
dec
push
mov
scas
outsl
xor
loope
incl
fs
pop
dec
test
mov
es
mov
test
dec
movsb
xchg
ret
das
je
sbbb
scas
dec
iret
cmp
test
mov
sbb
push
or
aas
push
inc
ret
adc
push
sub
iret
sahf
adc
push
jecxz
jmp
xor
popf
outsb
aas
fisttps
mov
inc
jge
fstpl
dec
fists
xor
mov
mov
pop
or
push
jbe
pop
insl
jg
lahf
iret
jl
pop
aam
dec
jo
ds
dec
jle
lock
mov
aas
mov
lahf
jg,pt
iret
dec
pop
inc
and
das
xchg
shlb
ss
iret
cmp
cmpl
iret
inc
outsl
xor
fisttps
and
and
incl
lret
test
push
add
pop
mov
xor
mov
sbb
inc
or
rol
add
popa
adc
jno
daa
pusha
aad
aas
ljmp
mov
pop
inc
or
add
movsb
mov
cmpb
push
popf
cmp
cmp
sbb
je
inc
pop
enter
inc
das
cmpsl
push
mov
add
movq
inc
iret
mov
xchg
out
jle
addr16
aas
push
jp
and
mov
pop
push
pop
and
cmpsb
outsb
jle
cmp
fistpll
add
pop
in
adc
in
jecxz
scas
mov
or
sbbl
pop
push
aas
fwait
jo
fsubrl
sahf
lcall
lock
fwait
js
scas
js
sbb
add
outsl
xor
mov
lahf
cmp
lods
xchg
fistpll
mov
push
push
lods
inc
jp
push
bound
dec
sbbl
mov
scas
imul
jmp
xlat
vmwrite
push
test
xorl
pop
incb
gs
add
xchg
inc
dec
outsl
mov
add
inc
scas
pop
inc
or
push
or
imul
das
xor
pop
inc
or
outsb
imul
shrb
rorb
scas
cmp
inc
test
mov
push
popa
or
push
inc
js
add
inc
out
sbb
pop
push
outsb
insb
push
or
jge
inc
push
imul
dec
lock
inc
adc
repz
add
xchg
fstps
popa
sbb
and
gs
sti
cmp
push
and
push
imul
inc
outsl
jne
pop
cmpsb
les
push
sub
inc
ljmp
push
outsl
daa
inc
jns
xor
cwtl
or
sub
addr16
and
inc
and
cmp
adc
push
cmpsb
in
cltd
push
push
pop
leave
sub
inc
insb
jp
push
inc
adc
roll
fwait
mov
addr16
dec
dec
rorl
xchg
sub
mov
aaa
fsubs
inc
lock
push
xorb
mov
push
sbb
outsb
dec
stc
mov
in
sbb
repz
divl
ds
test
mov
pop
int
cs
or
dec
subl
sub
mov
sbb
and
ss
or
adc
sub
adc
dec
xor
inc
lret
dec
or
mov
loopne
test
sbb
jns
fwait
loopne
mov
xor
cwtl
jp
dec
push
pusha
sub
arpl
cmp
dec
outsb
sbb
enter
adc
or
xchg
lret
pushf
push
mov
cmpl
lock
data16
jae
jb
js
jg
push
sub
inc
dec
sbb
inc
sbb
notl
adc
or
jae
inc
mov
fwait
data16
adc
jbe
cltd
divb
cwtl
mov
in
xor
ja
push
ret
fstpl
mov
xchg
in
push
and
xor
loopne
popa
es
lret
xlat
or
cmp
push
pop
shlb
xchg
or
adc
sbb
add
mov
aaa
mov
shl
lret
or
and
adc
loope
push
jns
out
outsl
lds
sbb
xor
je
xchg
sbb
cmp
gs
push
push
xchg
mov
call
add
clc
add
rcll
or
pusha
push
inc
push
cmp
jnp
sub
inc
xor
hlt
pop
cmp
ret
push
jmp
mov
xor
pop
push
or
add
mov
add
and
je
pop
dec
stos
je
jbe
add
arpl
jae
inc
xchg
xchg
nop
jne
inc
jns
pusha
popa
mov
dec
sub
and
pop
arpl
std
inc
jmp
outsb
adc
mov
push
adc
and
cmp
jbe
jne
cs
xchg
mov
mov
mov
fwait
and
mov
roll
notl
outsl
sbb
and
mov
adc
test
in
inc
sbb
loop
cld
shll
jae
xor
subl
and
sub
daa
lds
sub
sub
push
add
addr16
orl
std
scas
mov
fs
fists
mov
mov
sbb
dec
mov
or
sub
popaw
add
jnp
jp
les
outsl
push
ljmp
aaa
adc
decb
in
stos
fists
inc
fwait
pop
add
cmpsl
adc
mov
insb
lahf
inc
arpl
inc
sub
lret
jno
xchg
mov
mov
cwtl
or
cltd
mov
push
push
pop
mov
cltd
adc
mov
jo
dec
jne
pop
fcomps
and
sub
and
sbb
sbb
xor
and
xchg
ret
sbb
and
xchg
jne,pt
xchg
lock
std
mov
mov
mov
or
or
test
inc
inc
daa
inc
adc
ds
pop
daa
mov
aad
inc
adc
jle
popa
inc
imul
test
insb
arpl
inc
insb
push
testb
sbb
int3
mov
div
xchg
inc
inc
jnp
mov
leave
push
xchg
out
sbb
loopne
rcrl
push
dec
pushf
ret
and
pop
fwait
adc
cltd
xchg
inc
fs
mov
mov
xchg
fsubr
cmc
sub
push
rorb
push
add
mov
test
inc
xor
push
push
pop
xor
push
mov
inc
cwtl
jmp
sbb
test
pop
pop
xchg
in
sbb
pop
je
insl
dec
outsb
dec
and
inc
or
pusha
stos
addr16
stc
xor
jno
cmpsb
ss
enter
mov
mov
mov
mov
add
xchg
xchg
or
pop
add
or
push
mov
add
push
fldl
push
xor
inc
jb
test
add
inc
jae
dec
cmp
int
or
outsb
test
mov
insb
and
jo
test
insl
bound
adc
xchg
imul
and
rcr
or
outsl
mov
test
fwait
cld
cmp
cmpsb
movsb
inc
lods
imul
xor
inc
pop
mov
cmp
push
push
or
or
pop
ret
fildl
push
xchg
sbb
gs
push
pop
sbb
cmp
sub
mov
push
cmp
adc
jo
mov
lret
mov
and
cmp
pusha
dec
xor
fiaddl
ds
out
dec
inc
jne
xorb
jns
sub
jl
add
add
lods
jns
imul
stos
shrl
inc
and
pop
lahf
push
cmp
test
jg
sbb
jge
push
imul
add
roll
addr16
or
pop
dec
jae
sub
iret
xchg
mov
mov
inc
outsb
call
sarb
addr16
out
xchg
cmp
sbb
xchg
nop
out
inc
int
insl
data16
pop
mov
nop
xchg
or
add
dec
insl
cmp
sbb
inc
push
inc
pop
sbb
mov
addr16
frstor
or
popa
push
or
pop
test
add
imul
cmp
pop
dec
insl
cmp
dec
inc
arpl
rcll
push
scas
iret
xbegin
sub
adc
sbb
inc
ret
push
dec
mov
pop
sub
mov
lds
jno
push
dec
xchg
fwait
mov
xor
mov
adc
ret
or
mov
fistps
addr16
push
mov
aad
xor
push
rep
outsb
fisubrl
adc
pop
jne
mov
ret
data16
fisttpl
push
jb
dec
adc
js
pop
outsl
add
add
js
scas
mov
sub
sbb
inc
dec
push
push
sahf
jbe
inc
mov
rolb
mov
sbb
dec
pop
xchg
jge
sub
mov
popa
or
inc
mov
out
das
mov
pop
add
add
adc
call
inc
mov
sbb
and
sbb
rcpps
jae
shll
arpl
ss
test
mov
sub
and
mov
xchg
push
sub
add
hlt
xor
rorl
insl
mov
or
dec
add
into
fs
add
pusha
add
mov
aaa
jne
mov
cmp
mov
pop
adc
fsubrl
shl
call
add
jmp
mov
pop
inc
nop
gs
aas
mov
dec
jae
inc
pusha
pop
sbb
cs
push
out
dec
add
and
add
and
loopne
int3
popa
adc
add
adc
dec
mov
neg
xchg
out
inc
cs
adc
push
dec
sub
and
bound
rcrb
push
xlat
loopne
shrb
sbb
mov
jle
pop
das
and
xchg
lock
mov
add
add
mov
lea
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
mov
out
inc
add
add
