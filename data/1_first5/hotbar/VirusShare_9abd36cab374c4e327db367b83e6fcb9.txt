divb
in
mov
mov
mov
inc
add
add
sahf
int3
das
int
in
jg
shlb
or
and
push
je
and
out
je
push
call
push
add
sub
push
ret
in
divl
jne
mov
or
call
xchg
push
push
sbb
stc
out
aas
mov
test
je
cmp
movl
cmp
jae
dec
movzwl
lea
jne
sbb
xor
jmp
and
neg
fidivrs
and
pop
pop
mov
or
call
push
push
sarl
stc
shrl
jp
lock
jge
add
pop
push
push
push
push
xor
mov
mov
movsl
std
in
pop
scas
cmp
inc
add
cmp
pushf
or
push
rcrb
sahf
push
mov
push
xor
fidivl
fcoms
cmp
adc
mov
ret
mov
jmp
jmp
pushl
jbe
adc
lea
or
lock
dec
test
jg
mov
or
add
cs
add
ret
std
imul
xchg
add
mov
pop
inc
push
adc
add
inc
fcoms
rol
jo
mov
push
mov
xor
sbb
add
push
add
aaa
fwait
mov
mov
or
data16
sbbl
sarl
push
lahf
add
xchg
notl
andl
mov
push
sub
mov
hlt
cs
jbe
xor
sbb
adc
cwtl
mov
lock
pop
imull
dec
shl
in
or
jo
mov
xor
hlt
or
pop
cmpsl
push
repnz
in
cmpsb
cmp
lea
fwait
popa
xor
push
call
sub
add
out
push
sbb
push
loopne
xor
test
mov
lea
mov
adc
daa
mov
push
dec
or
add
iret
jbe
ret
ja
pop
xchg
sbb
fdivrs
xchg
sub
ret
test
push
xchg
mov
call
addb
das
or
push
dec
and
add
xchg
es
pop
xlat
push
sbb
test
or
sbb
push
and
add
push
dec
dec
cmp
je
out
push
out
jmp
mov
mov
pop
pop
fs
pop
lods
mov
aad
add
mov
push
sub
mov
pop
push
insl
and
orb
add
push
iret
bound
fidivrl
inc
pop
pop
ljmp
inc
lock
push
mov
cmp
or
jge
outsl
push
rolb
js
sti
mov
mov
xor
mov
pop
ret
arpl
xor
stos
pop
roll
pop
imul
rcrl
sar
pop
inc
sub
inc
clc
sub
pop
or
xchg
es
cmpl
adcl
xorl
sbb
pop
cmp
cli
js
mov
cmp
jg
mov
pop
and
adc
ret
pop
dec
add
mov
pop
and
jmp
enter
xchg
das
pop
push
sub
push
mov
sar
imul
lea
push
cmp
ja
adc
pop
dec
clc
add
push
mov
inc
loope
adc
in
inc
jno
xchg
adc
in
outsb
int3
clc
scas
cmp
jle
mov
cmpl
or
clc
loope
incl
shr
sub
or
cmp
push
inc
jle
add
pop
cltd
sub
rcl
enter
shrl
iret
mov
movsb
pop
cmp
orb
sub
cli
cmp
mov
push
jne
js
incb
add
xor
pop
mov
jle
add
call
jo
add
testl
inc
add
adc
lea
adc
stc
std
mov
and
xor
into
mov
adc
cmpsl
push
cmpsl
inc
cmp
mov
cmpsl
mov
cld
fisubrs
xlat
ja
lods
lea
stos
mov
clc
cmp
roll
mov
mov
jge
test
jle
insb
or
cmp
mov
inc
mov
stos
pop
pop
inc
insl
cmp
loope
or
push
push
cmp
adc
outsl
add
sub
repz
push
jmp
push
lea
lea
inc
push
inc
add
pop
sub
in
pop
push
cli
push
andl
ret
and
sbb
outsb
hlt
adcb
or
jbe
inc
and
cmp
mov
cmp
and
xor
push
push
sti
rcrl
hlt
das
push
out
cmp
jle
mov
inc
or
xor
cmpl
je
push
cmp
cmp
jae
push
cmp
inc
and
adc
cs
or
or
add
jb
pop
adc
pop
adc
pop
leave
fwait
jle
mov
fcoms
jnp
ljmp
in
aaa
cmp
lock
loop
push
push
push
rcrb
sbb
or
adc
or
cmpsb
push
loope
add
jne
pop
nop
out
loop
loopne
cmp
jo
inc
sub
add
aaa
lret
shll
mov
inc
or
pop
or
cmp
add
add
xor
jno
cmp
jne
push
push
push
push
xor
push
test
push
mov
mov
or
pusha
pop
pop
jle
sbb
xor
mov
daa
in
rcr
jne
cmp
lret
xchg
and
add
sub
xor
frstor
insb
mov
lock
mov
cld
pop
stc
add
out
add
sbb
fstpt
mov
add
repz
testl
xchg
pop
mov
and
push
je
xchg
sbb
test
cwtl
ds
xchg
loopne
in
dec
out
mov
ja
stos
or
dec
adc
je
push
adc
aas
clc
pusha
mov
push
repz
inc
xor
push
ss
push
incb
sbb
out
lea
dec
push
xor
adc
lahf
testb
lea
out
jae
pop
shlb
fldcw
add
add
add
jge
repnz
lea
push
dec
pop
xchg
push
cld
fists
mov
fistps
add
push
mov
jb
push
outsl
dec
xor
mov
push
out
fsubrl
adc
and
push
scas
push
inc
sti
add
or
test
cmp
iret
insb
push
cmp
push
push
cmp
je
shll
adc
or
loopne
jne
imul
mov
imul
adc
fwait
or
xor
jb
ja
adc
inc
fsubl
shlb
xchg
cmp
mov
xchg
paddq
mov
aaa
movsl
iret
xlat
mov
mov
mov
or
mov
call
arpl
cs
jno
lods
imulb
xor
sub
jg
inc
dec
mov
or
cwtl
in
cmp
mov
add
andl
or
sub
in
mov
shrl
ss
push
mov
mov
push
adc
lock
lcall
sbb
int3
ret
mov
push
testl
jae
and
mov
aas
pop
loopne
push
loopne
pushl
push
cmp
icebp
add
daa
lret
call
sub
adc
pop
inc
lods
or
enter
add
sbb
je
dec
je
push
xor
push
pop
jmp
push
adc
inc
pop
loop
sbb
movsb
call
add
mov
inc
adcb
push
rcll
jg
int
mov
push
mov
insb
sbb
mov
sbb
mov
inc
and
mov
jae
mov
aam
and
pushaw
pushf
pop
cmc
subl
sub
and
sub
add
xor
aam
test
pop
jle
or
mov
mov
sarb
pop
or
pop
rorl
xchg
and
loop
xlat
sub
lret
ljmp
out
shr
sbb
fisttpl
or
sub
js
and
adc
arpl
loope
popa
add
jle
in
dec
xchg
ds
and
sbb
sar
inc
pop
xlat
andb
je
or
cmpb
lea
mov
fldcw
mov
sbb
pop
movsl
push
negl
pop
ds
das
adcl
pop
dec
sub
adc
mov
push
sbb
or
sbb
push
adc
lahf
cmp
sbb
adc
fists
cwtl
add
pop
sbb
and
add
js
xor
in
js
jl
ret
adc
jb
pop
adc
test
mov
mov
mov
cld
cmp
jg
jne
dec
sbbb
push
cmp
enter
movsl
cmp
les
or
andl
nop
into
or
mov
je
inc
mov
icebp
into
scas
mov
dec
or
or
push
data16
sbb
dec
mov
pop
pop
pushf
sub
pushf
sbb
pop
aas
push
and
inc
and
or
push
jo
int
in
jae
bound
cltd
adc
out
in
sahf
adc
je
scas
jnp
mov
adc
lahf
xor
jbe
pop
ret
lahf
mov
insl
jnp
pop
aaa
push
push
or
mov
xor
dec
sub
fmuls
subl
popa
xor
xchg
xor
data16
push
divb
lcall
orl
je
and
mov
out
scas
mov
int3
sbbb
ljmp
mov
mov
pusha
push
lcall
jo
jne
push
ret
das
pop
add
pusha
add
and
in
aaa
sbb
push
dec
mov
lods
mov
jnp
add
pusha
jp
push
in
mov
adc
insb
movsl
sbb
pop
repnz
je
jbe
in
sub
in
rolb
daa
jo
scas
and
orb
xchg
xor
test
lds
repnz
ds
pop
pop
jmp
sub
popa
jmp
mov
xchg
mov
push
xor
mov
pop
aas
aam
jge
decl
inc
and
fisubl
xchg
xchg
je
out
out
add
push
push
add
insl
cmp
jb
lock
bswap
scas
mov
scas
adc
mov
mov
and
push
je
icebp
bound
adc
xchg
in
push
and
push
filds
or
frstor
add
add
add
fldt
pusha
mov
testb
mov
incb
or
and
test
add
in
sbb
jo
xor
or
push
mov
jmp
ljmp
sub
mov
push
lock
pop
push
sbb
neg
sbb
pop
les
ret
je
push
inc
out
loop
in
and
mov
gs
sub
mov
enter
cwtl
sahf
inc
and
fs
mov
dec
mov
mov
imul
loopne
xor
in
pop
push
add
adc
push
jb
or
sbb
add
mov
cmp
xchg
pop
mov
add
jge
pop
incb
jecxz
dec
inc
outsl
mov
in
das
sarb
sbb
sub
xor
sbb
sub
mov
test
fcoml
dec
jo
xchg
mul
mov
shlb
loopne
jo
cmp
movsb
sarb
js
mov
adc
pop
adc
push
mov
xorl
cmp
cmp
rclb
xchg
rcl
ret
les
pushf
pushf
leave
jae
gs
mov
mov
xchg
dec
mov
xchg
sbb
xchg
xchg
sbb
push
test
mov
xchg
int3
clc
arpl
ret
sbb
leave
enter
ror
cmp
sbb
shlb
sub
ret
sbb
dec
jnp
mov
mov
dec
leave
jae
mov
sub
test
push
test
add
test
jle
pop
pop
pusha
inc
xor
and
insl
inc
ja
and
cmp
testl
loope
hlt
shrb
add
mov
inc
iret
and
cwtl
sub
jo
inc
sbb
call
test
push
or
dec
pop
mov
es
push
ficompl
push
loop
jnp
and
cs
push
xor
sbb
and
add
ret
xor
add
lcall
pop
add
enter
or
jle
lahf
cmp
mov
in
addb
test
and
outsb
and
ficompl
inc
sbb
movsb
and
push
aaa
adc
dec
sbb
orl
pop
push
mov
mov
mov
jae
or
cld
sarl
sbb
ret
lods
pop
test
cwtl
sub
lret
xchg
and
std
and
adc
adc
popl
daa
add
sbb
fsubl
adc
addb
cwtl
mov
mov
cmpl
and
push
pop
push
jmp
popa
mov
ret
push
or
mov
fiaddl
adc
or
sbb
adc
movsb
adc
xor
mov
insl
pop
sbb
push
sbb
fstl
scas
and
jl
and
enter
or
adc
sbb
jecxz
pop
dec
push
dec
mov
in
mov
nop
aaa
xchg
xchg
add
adc
test
sbb
inc
adc
adc
movsl
jno
mov
stc
loope
add
inc
xchg
mov
adc
cmp
aaa
pop
inc
adc
xchg
adc
sub
push
cmc
mov
push
sbb
push
nop
imul
lret
xor
push
and
iret
sbb
sbb
aas
loop
add
inc
jne
shlb
jno
jb
mov
test
enter
sbb
movsb
dec
out
lcall
xchg
mov
loopne
dec
jo
lea
mov
sbb
lcall
fbld
das
jne
push
pushf
pop
nopl
pop
xlat
sbb
shrd
popa
testl
outsl
jg
cmp
je
or
je
xor
push
push
or
push
mov
adc
xchg
mov
pushw
mov
mov
xchg
inc
xchg
and
pop
loopne
das
jecxz
daa
add
inc
ret
or
inc
pop
add
mov
mov
add
test
mov
dec
in
lret
xorb
and
sbb
lock
cmp
add
sti
cmp
je
push
push
pop
ljmp
test
xchg
add
mov
sub
inc
mov
mov
clc
adc
and
shrl
pop
mov
xorb
jmp
dec
cmp
sub
mov
mov
xchg
insb
push
sar
and
stc
sahf
sub
sub
or
bound
inc
xlat
in
add
popa
and
sub
sub
pushf
fstps
add
movsb
std
div
faddl
cmp
negb
aas
rcrl
inc
incb
xchg
inc
mov
cmc
pusha
shrb
test
sbb
loopne
push
fdivl
jns
inc
stc
scas
sub
pop
bswap
pop
test
sub
sub
pop
leave
aam
inc
imul
cwtl
lods
jno
ss
je
sbb
inc
lret
ret
test
cmp
cmp
or
mov
fstpt
cmp
push
stos
add
adc
jb
pop
add
xor
clc
push
insb
push
daa
movsb
xor
test
pop
insb
adc
push
lods
mov
mov
sub
pop
stos
jo
fsubs
jne
jo
out
pop
and
pop
xor
xchg
lahf
mov
inc
sbb
arpl
dec
adc
inc
ret
jecxz
lret
push
push
or
sub
pop
adcb
push
add
test
test
adc
mov
mov
enter
push
push
cld
sbb
sti
lahf
mov
adc
add
pop
cmp
add
or
adc
xor
push
sahf
xor
and
add
mov
hlt
sbbl
sub
nop
negl
inc
mov
jo
push
enter
int3
ds
lds
lea
pop
xchg
add
sub
pushl
jnp
fidivs
dec
xlat
test
xor
dec
push
mov
fsubs
roll
aad
imul
sub
inc
repnz
cmp
mov
and
xor
stc
pop
pop
and
dec
dec
xor
ficoml
cmpl
cmpsb
cmp
mov
repnz
sub
rcll
and
sbb
jne
and
enter
and
xor
andl
lods
rclb
nop
inc
in
xchg
or
ds
cmp
push
jl
jne
bound
pushf
dec
inc
inc
adc
ds
popf
fstpt
rorb
dec
mov
mov
push
or
xchg
pop
icebp
pop
dec
les
adc
dec
stos
xchg
adc
pushl
push
mov
sub
mov
loop
add
in
and
adc
sub
ret
push
je
nop
sub
adc
les
rcll
cmpl
add
iret
sbb
push
mov
mov
dec
sbb
outsb
loopne
sbb
fld
sti
cmpb
jae
jne
push
sub
xlat
ret
call
sub
fisttpll
jne
inc
adc
or
in
gs
orb
jmp
cmp
push
mov
nop
out
adc
pusha
cmp
loope
nop
sbb
mov
jmp
mov
clc
cmpb
daa
fs
push
loopne
and
push
shrb
push
outsb
scas
push
dec
lret
add
inc
das
xchg
sti
sub
inc
repz
out
jge
and
xchg
orb
enter
or
lret
jo
inc
mov
cmp
mov
test
pusha
xchg
push
les
jge
jo
and
cmp
out
jo
xor
daa
dec
rcll
sbb
mov
xor
mul
dec
xchg
jo
inc
xchg
add
pop
or
setne
or
dec
or
mov
rcrb
into
add
icebp
aaa
arpl
adc
pop
out
jne
or
je
sub
fadd
mov
in
sti
loopne
je
loope
jg
inc
das
adc
mov
or
in
sbbb
push
inc
faddl
jl
test
dec
push
pop
pop
sub
jo
test
mov
lods
cmp
lock
fsubrp
out
xchg
or
xchg
cmp
fsubs
add
call
neg
test
imul
sub
repz
je
cli
pop
ror
dec
sarb
inc
mov
pop
jns
sbb
fsub
push
out
inc
out
loopne
cld
inc
test
and
or
nop
inc
aas
fnstenv
imul
lock
or
loopne
lods
sbb
cld
or
mov
push
pop
or
push
or
jg
scas
fdivl
add
or
enter
add
int3
add
mov
or
es
fisubrl
jle
push
fdivr
or
sub
call
dec
xchg
call
mov
add
mov
jnp
lock
dec
inc
sbb
je
sub
jle
cld
out
jmp
jge
imul
cmc
jbe
push
xor
jmp
mov
xorb
int3
int
mov
mov
xchg
int3
test
push
sbb
in
icebp
inc
xorb
xor
fstl
inc
sbb
mov
lea
rolb
mov
mov
inc
hlt
xor
inc
mov
mov
jle
push
dec
cmp
adcb
push
pavgw
ret
jle
call
in
sbb
lock
push
mov
orb
mov
shll
in
paddusb
cmp
pop
filds
mov
push
push
add
pmulhw
mov
jbe
pop
clc
add
inc
sbb
sbb
movsb
adc
fcomps
sub
mov
stos
insl
std
adc
sbb
dec
test
pop
lea
roll
sub
or
cmpl
push
push
jne
aaa
or
rcrb
pop
dec
xor
mov
in
inc
xchg
in
cmp
inc
ficomps
cld
test
sbb
or
mov
imul
or
sbb
add
mov
or
xor
push
push
add
pop
ljmp
or
inc
pop
or
cmp
std
popa
xor
add
mov
das
jle
popa
cmp
inc
nop
es
dec
xorb
push
imul
pop
fmull
jp
fcompl
movsb
adc
add
pop
sar
in
loopne
pop
cld
loopne
orb
add
test
lds
lahf
call
into
sarl
aam
enter
test
or
rcrb
push
nop
or
push
cmove
or
cmp
push
push
in
addb
cmp
sbb
mov
cmp
cli
in
mov
push
rorb
mov
ret
or
in
adc
scas
in
mov
push
push
in
sbb
inc
mov
scas
sbb
or
jno
testl
nop
adc
and
add
cmp
test
shrd
rcr
jb
push
pop
push
push
call
and
fistl
rorl
test
mov
mov
pop
daa
mulb
mov
rcll
dec
or
cmpb
jge
out
clc
sub
mov
mov
out
or
push
jge
in
arpl
and
pop
arpl
xor
pop
or
sbb
pop
lock
loopne
mov
cmp
addb
and
and
das
subl
adc
mov
mov
jbe
in
mov
int3
pop
cmp
fxch
rclb
sbb
jl
adc
pushf
xor
in
mov
fbstp
rolb
je
inc
in
fdivr
pushl
call
mov
inc
shr
movzbl
push
adc
push
ret
push
jo
ffreep
push
es
add
je
loope
cmpsl
jle
jbe
dec
testl
gs
nop
sbb
inc
add
push
mov
push
or
gs
or
jg
sub
jb
xor
int
out
push
loopne
pop
or
add
mov
push
sbb
xor
fisubs
push
jmp
scas
sti
jle
push
add
lahf
nop
lods
adc
push
push
mov
cmp
jg
mov
xchg
icebp
int
adc
jae
enter
cmpl
std
sbb
scas
mov
aad
js
pop
and
test
xor
fldt
xchg
jno
outsl
ds
lea
andl
outsb
sub
sbb
subl
call
mov
push
jne
inc
sub
loop
jo
push
ret
push
pop
jmp
mov
popa
xor
lods
push
cmp
mov
and
cmp
je
stos
mov
in
in
add
fcompl
shrb
cld
jne
fdivrl
push
push
test
adc
lock
sbb
or
xor
clc
add
inc
cmp
jae
mov
hlt
lea
movsb
jp
dec
ja
dec
add
sub
je
push
mov
je
add
mov
outsl
push
sub
fcomps
hlt
sub
imul
add
adcb
ret
jl
in
cmp
jg
push
push
push
inc
js
push
pop
cmp
inc
and
jbe
xlat
sar
into
popa
nop
add
mov
loopne
push
pop
xor
adc
call
lea
ljmp
cmp
loopne
sub
add
xor
jo
fnstcw
jb
mov
mov
roll
mov
mov
push
sub
inc
js
or
cli
xchg
adcb
out
ret
cmp
cmpsb
hlt
pop
pop
xor
inc
xchg
je
test
js
inc
dec
hlt
aaa
cmp
fidivrl
hlt
or
and
sub
pop
movb
dec
push
inc
inc
dec
rclb
jge
jmp
dec
inc
cmp
push
mov
insb
sbb
in
out
fdivs
pop
push
push
mov
sbb
xor
cwtl
dec
mov
insb
sbb
fdivp
add
pop
push
push
mov
idiv
cmp
jl
repz
jmp
or
and
pop
cmp
xlat
das
xor
ret
inc
mov
inc
or
cmp
jbe
mov
mov
test
pop
or
xchg
bound
xlat
push
sub
mov
push
stc
jns
lods
sarl
push
mov
push
and
add
or
jle
ret
je
mov
imul
lock
aaa
ljmp
xor
movsb
push
dec
fidivrl
sbb
or
fstps
pop
cmp
mov
or
add
jne
or
sbb
sub
jle
push
call
jl
xchg
jecxz
sti
test
dec
sbb
mov
mov
sbb
ret
je
push
pop
pop
and
xor
mov
mov
jae
jb
jmp
mov
ret
and
adc
mov
xchg
jmp
or
jbe
jb
mov
icebp
scas
fs
jne
cmp
je
jbe
movb
xor
lods
std
or
or
and
sbb
icebp
addb
cmp
test
addl
out
les
xlat
imul
daa
push
pop
and
setne
shrb
ret
jne
pop
jo
pop
in
xchg
cld
add
fiaddl
jne
adc
js,pt
aam
add
jo
jg
jo
prefetch
xchg
das
or
es
into
push
cmc
jmp
test
or
sbb
push
adc
add
sub
jp
shll
aad
mov
js
push
leave
inc
lret
jmp
call
bnd
rorl
cmp
jmp
mov
dec
adc
daa
sahf
jmp
cmp
push
test
mov
imul
cld
ficoms
sub
push
push
jmp
sbb
pop
sti
adc
rolb
pop
rolb
add
scas
sbb
inc
push
mov
lock
pop
nop
mov
sub
inc
mov
add
lcall
je
das
test
push
xchg
dec
jno
mov
loopne
enter
jl
add
insb
cld
cmp
ret
dec
push
add
push
test
lds
pop
push
dec
cld
rorb
push
pop
popf
mov
enter
add
std
push
movl
call
sub
dec
enter
movsb
xchg
xor
sub
imull
push
and
cmp
fld
mov
sahf
fsubs
sbb
pop
push
adc
pop
enter
xlat
jecxz
sbb
insb
icebp
inc
roll
shlb
in
shl
mov
cmp
jp
fdivs
push
adc
shr
pop
sbb
push
push
imul
sub
push
add
aas
lods
pusha
lods
xchg
dec
ret
outsl
dec
mov
adc
lods
sbbl
inc
mov
lds
sbb
mov
in
push
sub
les
push
ss
sub
push
in
insl
fldt
lods
sub
mov
xlat
and
enter
mov
and
aad
jo
es
sub
insb
xlat
push
jno
cmovl
pop
dec
scas
jecxz
dec
xchg
call
sbb
cmpsl
jb
sbb
fsubrs
enter
cld
jo
add
mov
dec
leave
inc
jo
fnstcw
into
or
adcl
jb
leave
mov
ficoml
imul
test
stos
out
or
mov
push
sbb
xchg
xor
pop
and
xlat
or
sbb
add
xchg
sub
stos
push
pop
cmpl
jmp
je
add
ljmp
in
adc
pop
inc
pop
je
dec
ds
fisttps
mov
cmpsl
leave
mov
push
enter
jecxz
and
pop
movl
cmpsb
and
push
sub
xlat
push
jae
sub
mov
jne
pop
add
jmp
sbbb
cld
sub
sub
adc
pusha
pop
and
in
jmp
or
mov
enter
test
sarl
stc
loope
lret
cmp
les
mov
and
push
xlat
cs
stos
lock
cmc
pop
je
xor
mov
sbb
and
clc
mov
jae
jg
adc
lret
adc
dec
add
dec
into
aam
jb
push
inc
xchg
imul
sub
push
mov
add
or
or
dec
clc
and
adc
rcrl
add
pop
pop
cmpsb
mov
mov
mov
in
sbb
add
or
jns
fdivs
daa
js
adc
mov
lea
addr16
or
xchg
andl
shll
mov
push
and
xlat
push
shll
and
sbb
xorb
ret
jne
je
cmp
mov
pop
push
fildll
sbb
cli
push
or
arpl
mov
xchg
js
adc
ja
das
in
cmpsl
outsb
stc
movups
and
test
add
inc
pop
sbb
cmp
mov
or
push
mov
push
cltd
pop
lock
mov
lcall
adc
sarb
roll
jno
add
push
xchg
jmp
loope
add
mov
lods
dec
add
xchg
dec
xor
pop
lods
push
xchg
pushf
push
jbe
fs
shr
cmp
cmp
mov
mov
add
push
pop
dec
je
mov
adc
in
jge
adc
sbb
popa
dec
ss
dec
cli
decb
jmp
mov
mov
mov
rcr
push
and
movsb
fwait
mov
add
pop
jne
out
popa
hlt
sbb
jmp
push
add
push
mov
xor
aas
adc
and
cld
pop
inc
add
mov
mov
inc
loopne
mov
add
push
mov
pop
addr16
mov
fmuls
mov
mov
dec
mov
loop
loopne
push
or
push
shl
std
lea
pop
pushl
js
sub
lea
mov
push
movsb
int3
sub
mov
rolb
push
shr
jmp
cmp
je
cmp
mov
imul
jmp
inc
sbb
leave
adc
out
out
xor
mov
sbb
fstpl
insl
fistpll
jmp
sbb
into
jle
push
and
jmp
and
jmp
push
mov
sbb
sti
mov
incl
into
pop
push
aaa
push
inc
push
push
iret
repz
jo
mov
into
repz
pushf
cmpsl
mov
mov
sbb
mov
mov
add
inc
scas
ja
push
and
sub
or
or
lea
adc
sub
fistps
aaa
sub
or
cmpl
fcmovne
rcrl
lahf
push
push
or
xchg
dec
stc
icebp
cs
pop
jge
cld
out
dec
jl
and
inc
push
mov
mov
pop
push
lea
push
lea
push
push
push
push
add
push
lea
enter
cmp
jnp
inc
cmpsb
add
dec
mov
inc
test
pop
add
aas
cltd
lahf
aam
popf
sbb
lea
lea
movl
orl
or
sbb
sbb
jmp
sbb
addr16
push
je
lea
test
sbb
push
or
pop
push
push
add
jl
inc
xor
add
popf
push
js
in
test
xor
je
push
inc
xchg
outsb
lods
fidivs
jno
jo
cmpsb
addl
mov
push
sbb
push
push
je
mov
xchg
mov
push
clc
pop
dec
notb
jmp
mov
pusha
and
mov
mov
movl
dec
add
pop
jne
mov
jne,pt
push
add
test
repnz
jae
adc
or
push
pause
xchg
imul
dec
jae
popf
mov
call
in
in
ret
mov
xchg
inc
or
ret
or
repz
mov
inc
xor
movsl
push
cmc
lds
push
mov
fcoms
aad
cmp
xor
push
push
cmp
xor
xor
pushf
jl
sub
in
and
adc
rolb
mov
lea
jl
lcall
es
mov
ret
or
sbb
xor
popa
mov
push
xchg
pop
mov
popa
aam
push
aam
das
in
in
sbb
cmp
inc
jl
jne
int3
push
mov
and
fcoml
bound
dec
fildl
cmp
rcr
shr
addl
or
fdivrl
fdivr
ret
mov
rcll
mov
push
mov
inc
scas
xor
adc
fdivr
and
adc
push
push
or
mov
js
notb
sub
je
lea
push
loopne
es
rolb
mov
jo
xchg
add
ds
mov
mov
aam
xlat
push
or
adc
ljmp
in
or
rcrb
shrb
les
inc
push
mov
lock
push
pop
pop
fmull
push
dec
lea
dec
push
push
aaa
dec
icebp
pop
cmpsb
and
jge
fidivrs
cmpsb
mov
sub
in
dec
jmp
sub
mov
dec
cmp
sub
insl
sti
int
in
cmp
push
mov
add
mov
test
inc
inc
dec
cmp
pop
daa
icebp
cltd
adc
xor
mov
iret
mov
mov
and
or
jecxz
or
les
mov
fcomps
in
dec
cmp
cmp
push
sbb
and
loopne
sbb
out
movsb
adc
jp
dec
pop
inc
leave
mov
lock
fisubl
mov
in
and
dec
fstp
cmpsb
imul
adcb
push
roll
inc
push
bound
lcall
neg
sbb
and
pop
in
mov
cmp
iret
leave
out
add
adc
out
jl
enter
pusha
nop
test
js
mov
push
inc
scas
daa
or
add
dec
sub
je
push
negb
adc
aaa
and
lods
out
push
ret
test
icebp
dec
or
addl
rolb
test
dec
pop
cmp
mov
mov
mov
or
mov
loop
dec
aaa
enter
cmpl
jne
pushl
ffree
subl
push
sbb
test
adc
xorl
jbe
outsl
cld
adc
aam
mov
adc
cmpsb
push
inc
inc
dec
insl
dec
adc
std
xchg
xor
push
inc
sub
sti
je
cmp
mov
ja
sti
sbb
jb
stc
ret
popl
or
pop
and
pop
inc
or
aad
xchg
or
popa
in
xchg
mov
jg
xor
sbb
sbb
pop
incl
jne
movb
jmp
cmp
jne
mov
adc
leave
push
loop
ret
cwtl
enter
jle
xor
adcb
repnz
mov
jp
cmp
pop
mov
mov
xor
ja
xchg
test
sbb
lock
pop
notl
and
test
cltd
jne
or
or
popf
sub
mov
mov
push
dec
or
adcb
bound
pop
fsubl
push
push
cmp
push
adc
fcoml
mov
nop
pop
cmp
iret
push
adc
enter
lods
add
test
lds
dec
out
mov
mov
ljmp
nop
add
xchg
scas
mov
mov
add
je
cmpsb
and
mov
cmp
add
dec
and
push
lea
and
mov
cmpb
jg
add
pop
push
call
push
and
push
push
lret
into
shr
mov
rcll
enter
xor
imul
mov
push
mov
xor
int
xor
clc
test
cmpb
xor
movsl
adc
pop
cmc
xlat
jg
inc
pusha
fmull
insb
decb
jno
out
push
add
mov
push
push
aaa
movsl
adc
outsb
mov
push
stos
sbb
out
mov
cli
loop
xor
es
ja
add
mov
mov
jno
insb
inc
cmp
xor
pop
into
popa
in
jne
icebp
in
push
shll
mov
adc
mov
stos
jo
adc
fmuls
sub
cli
repz
jo
dec
or
andb
cmc
jmp
jb
rclb
mov
adc
test
rorl
jbe
jo
xchg
xlat
push
adc
lea
aas
stc
icebp
cmpb
xor
je
push
pop
cmp
mov
negb
push
decl
repnz
push
jne
cs
sub
push
fnstsw
add
jmp
adc
sbb
push
iret
enter
insb
repz
mov
andl
push
fcoms
sbb
fidivrl
push
cli
or
push
pop
jo
popa
icebp
push
sub
cs
push
in
or
jmp
fs
popa
push
sbb
lods
push
push
cltd
sub
push
jecxz
je
push
fbld
jl
xlat
sbb
fadd
orl
addl
pop
fadds
xor
xchg
add
jae
adc
xchg
push
sbb
pop
push
sub
jo
mov
jl
mov
mov
cltd
mov
lea
push
div
sar
orl
movsb
push
xor
ret
pop
mov
pop
mov
jge
mov
shlb
mov
idiv
push
mov
mov
jecxz
test
mov
ret
xor
idiv
out
and
cs
testl
es
sti
fstpt
mov
add
push
int
dec
add
mov
cmpsl
jne
pusha
scas
mov
push
dec
xor
push
pop
jg
jge
add
sub
mov
adc
dec
fstpl
push
pop
push
mov
fdivr
sub
cmpb
jge
je
out
sbb
mov
dec
push
into
jp
xor
popa
xchg
movsl
daa
pusha
js
or
popa
jg
sub
scas
fs
or
xchg
arpl
mov
clc
jle
cmp
xor
sub
negl
pushf
movb
scas
xchg
jnp
aas
dec
lea
jl,pn
sbb
ds
xchg
sub
cmp
shrl
nop
or
out
jp
into
test
std
outsb
mov
fildl
mov
test
jns
fdivr
std
jnp
add
xor
xor
mov
fdivrp
dec
ja
and
dec
sub
mov
shr
clc
int3
mov
mov
inc
les
xorl
cmp
add
push
lods
mov
cmpb
pusha
clc
insl
je
into
clc
fidivl
jmp
push
xchg
jae
addb
mov
ret
pop
jne
pop
pop
movb
xor
dec
ljmp
cmp
mov
jo
leave
xchg
mov
mov
add
shr
hlt
lcall
cmc
push
aad
cld
inc
hlt
adc
lea
add
and
cmpsl
je
addr16
pusha
fdivs
push
gs
lds
imul
fadds
and
stos
scas
cmp
sbb
loopne
push
pop
stos
ljmp
pop
pop
mov
pop
leave
jecxz
dec
sub
inc
push
cmp
or
mov
sub
rcrl
and
cltd
add
cwtl
cmp
test
sbb
or
aam
xor
adc
int
sbb
loope
xorb
mov
dec
jns
and
cmp
ret
sbb
sti
push
rorb
mov
push
les
jmp
punpckhdq
leave
adc
jo
in
push
pop
xor
rolb
jo
pushf
scas
sbb
push
mov
lea
push
mov
push
ret
inc
mov
pop
in
fwait
dec
add
lea
pop
or
jno
sarl
and
push
push
adc
and
cmp
lahf
icebp
inc
and
pop
dec
enter
add
sub
pop
cmpsb
jle
add
add
cmp
sub
bound
xchg
incl
add
xchg
fsubrl
mov
inc
and
jl
nop
adc
fs
hlt
xchg
int3
push
push
pop
in
out
shll
pop
popf
dec
dec
add
repnz
stc
lock
nop
je
mov
pop
or
inc
cli
and
loop
leave
push
cmp
sti
and
pop
daa
sbb
mov
pop
mov
and
in
dec
or
cmc
stos
mov
andl
dec
cmp
sub
call
or
push
add
mov
shrb
test
clc
setb
test
dec
add
add
cmp
jo
pop
dec
mov
dec
adc
data16
pop
or
sbb
jl
aaa
adcb
jle
and
and
pop
pop
out
inc
mov
scas
sbb
add
push
xor
ret
icebp
dec
mov
jo
adc
mov
add
cmp
add
imul
adc
add
push
scas
and
int
xchg
popf
cmp
or
repz
mov
add
jo
xor
mov
in
pop
or
mov
pop
jmp
dec
sti
lret
sub
bound
mov
mov
sub
push
in
aas
jmp
test
stos
sbb
jl
pop
daa
ds
icebp
adc
dec
push
mov
lock
clc
add
pop
je
and
jp
or
loopne
jne
pop
adc
inc
cltd
mov
add
adc
xor
adc
push
add
push
mov
jle
add
jmp
add
out
mov
testl
mov
out
divl
push
push
and
test
adc
sub
call
add
cmc
xchg
cmpsb
add
push
out
and
inc
xchg
push
push
shlb
icebp
and
pop
push
in
sub
hlt
dec
dec
sahf
fmuls
sbb
cmp
mov
xor
xor
sbb
lret
lock
adc
aam
mov
hlt
add
mov
out
shrb
inc
mov
sbb
stos
shll
push
stos
xchg
lret
mov
push
nop
in
call
cmp
inc
and
mov
in
mov
push
iret
mov
lods
imul
pushf
adc
push
sbb
mov
push
push
mov
pusha
das
call
loopne
arpl
push
ret
cmp
sub
insl
test
and
jo
cmp
fsubrl
leave
imull
pop
push
push
outsl
sbb
add
xchg
jnp
imul
imul
cmc
nop
or
push
cmpsl
pop
enter
push
in
dec
cmpsl
adc
cmp
mov
decb
ficompl
jae
inc
out
popf
jae
cmp
sbb
xchg
pop
xor
sti
cmp
enter
jnp
adc
jne
mov
fstpl
push
out
dec
rcrl
push
lods
sbb
pushl
push
lret
push
cmpsl
loope
scas
mov
dec
nop
cmp
add
decl
iret
clc
and
test
je
shll
mov
je
stc
jge
neg
loop
dec
mov
jmp
dec
mov
sub
and
add
mov
jae
mov
add
jo
pusha
inc
xor
dec
push
add
sub
push
sbb
mov
sub
leave
js
cmp
dec
sti
dec
jge
mov
mov
mov
cmp
sbbb
lods
add
cmp
jle
call
push
dec
setle
push
or
cmp
std
fsubr
sbb
popf
fwait
inc
push
mov
out
je
xchg
int
inc
cs
sbb
aam
xor
mov
push
test
into
cmp
mov
lahf
add
pop
jo
sub
dec
clc
cmp
sete
adc
loope
add
insl
andb
je
sbb
adcl
push
test
sbb
shlb
insb
jp
jno
dec
movsb
pop
lds
mov
pusha
loop
sbb
and
pop
or
and
dec
mov
inc
movsl
repnz
dec
add
sbb
jno
pop
lea
das
arpl
push
push
rolb
lods
pop
lods
fwait
adcb
jae
add
lock
jne
or
sub
lea
add
add
mov
push
sbb
imul
mov
mov
movsb
bound
mov
jge
mov
sub
push
iret
ss
imul
or
and
cmp
inc
push
xchg
push
or
popa
fcmovnb
fwait
mov
sbb
or
jmp
das
adc
mov
sub
outsl
mov
nop
lret
pop
in
cmpsb
add
outsb
sbb
pop
pop
adc
rolb
pusha
fmull
je
in
adc
mov
or
lock
in
aaa
ret
in
repz
in
call
ja
fdiv
in
aaa
xor
cmpsb
and
push
jns
popf
push
fdivs
pop
pop
arpl
add
jbe
push
mov
dec
shrl
test
andl
testb
jmp
or
ja
sbb
je
adc
mov
mov
dec
push
adc
or
jg
sub
xchg
je
jecxz
aam
jb
xchg
or
inc
bound
in
push
mov
scas
sbb
dec
and
clc
clc
and
clc
inc
addl
dec
cmp
pop
xor
xor
hlt
add
dec
or
push
mov
in
dec
clc
pushl
xor
mov
mov
dec
call
jle
cmp
pop
clc
lahf
sub
in
jnp
adc
clc
pop
jmp
in
jmp
das
hlt
fwait
loopne
fnstsw
out
or
sti
add
into
push
push
add
push
outsl
or
sbb
rcll
clc
adc
xchg
nop
mov
mov
pop
mov
add
ds
inc
inc
in
jb
mov
fstpt
das
sub
jg
mov
iret
push
insb
cwtl
add
jb
nop
inc
xacquire
enter
inc
lahf
cmp
clc
xor
in
jp
xchg
mov
cmp
add
clc
sbb
sbb
daa
pop
push
mov
js
mov
adc
test
add
push
xor
xor
push
jg
loop
sbb
push
movzwl
adc
push
gs
cmc
rsqrtps
jo
lea
push
jl
inc
icebp
and
push
push
shll
fcmovb
lret
cmp
insb
jbe
jbe
pop
push
mov
call
jo
call
jo
pop
mov
gs
inc
fucomi
mov
sbb
adc
mulb
inc
push
push
fisttps
in
pop
popa
loopne
sbb
in
push
mov
movsb
add
adc
ss
xchg
movsb
xor
ret
inc
cmp
mov
adc
pop
mov
movsl
int3
ret
add
sbb
and
mov
or
add
cld
mov
jmp
adc
xor
mov
push
test
add
and
cmp
sbb
push
ss
mov
ja
add
jl
andl
mov
and
scas
movl
jle
or
pop
dec
push
es
jo
addr16
movl
dec
pop
jp
cmp
sub
xchg
push
sub
mov
add
hlt
push
mov
cltd
inc
xchg
arpl
dec
xor
mov
push
cmp
cmpsb
rolb
cltd
push
push
cmp
inc
sbbl
and
xchg
pop
outsb
jns
popf
lcall
push
mov
sbb
mov
or
popa
xchg
mov
arpl
pusha
dec
loopne
or
push
push
loopne
mov
mov
jb
icebp
push
jg
dec
fs
add
cli
cs
aam
jecxz
add
add
sbb
sahf
idivb
mov
pop
xchg
sub
aad
inc
sbb
shrl
add
roll
cwtl
iret
push
pusha
sub
add
dec
fistl
sbb
jecxz
xchg
adc
sbb
jnp
aaa
adc
mov
pop
fidivrl
xor
jns
cmp
jmp
mov
xchg
sub
mov
xor
mov
adc
sub
pop
push
lcall
sub
adc
pop
test
xlat
jl,pn
jmp
add
or
lock
jg
sub
loopne
leave
cmp
loopne
fwait
add
cmp
shlb
cvtdq2ps
arpl
sub
sbb
add
pop
and
test
or
inc
mov
pop
mov
jmp
inc
sahf
mov
or
cwtl
movl
mov
lea
cmpsl
add
mov
inc
adc
lret
shll
sbb
mov
mov
dec
add
nop
add
push
repz
scas
or
add
lea
push
daa
cmp
mov
or
out
jp
orl
pop
or
cld
mov
fdivs
sub
add
add
adc
inc
or
lcall
mov
sub
mov
cwtl
push
or
xchg
xor
dec
js
sub
lea
test
pop
adc
mov
faddl
dec
cwtl
adc
xchg
push
add
scas
push
add
mov
sbb
cld
dec
js
lock
mov
mov
adc
mov
pushf
push
setne
dec
xchg
cmpb
add
lahf
pop
int
lret
fs
push
push
jbe
push
jne
and
cltd
sub
xchg
mov
jg
sbbb
mov
fcoml
pop
push
and
loop
leave
lea
or
or
sbb
add
pop
movsl
and
ret
mull
pop
imul
stos
stos
add
xchg
ja
lods
and
inc
xor
push
or
loopne
rorl
jg
notb
sub
sbb
sti
scas
pop
stos
push
add
mov
imul
xor
push
cmp
loopne
ret
or
dec
and
sbb
test
repz
in
sbb
dec
cmp
cmc
push
mov
and
dec
jmp
orl
sbb
dec
pop
int3
imul
mov
call
scas
das
mov
gs
in
aas
mov
call
cmp
jmp
scas
mov
outsl
jns
sbb
lret
sub
xor
mov
pop
or
jmp
push
shr
mov
adc
loope
pusha
inc
xchg
fstpt
mov
lret
or
repz
add
fildl
pop
pop
cltd
xchg
mov
push
pushf
and
inc
js
mov
jns
dec
add
inc
jb
pop
mov
popf
lret
fisubrs
add
jmp
fcoms
push
inc
mov
imul
dec
push
loope
dec
or
push
fisttpll
outsb
pop
xor
push
sbb
mov
add
sub
aad
dec
or
pop
enter
or
xchg
or
push
and
dec
cmp
les
add
divl
mov
daa
fwait
xor
xchg
inc
int
subb
stc
in
mov
inc
or
xor
add
pop
fidivs
fimuls
mov
adc
outsl
jbe
add
mov
ss
jo
xchg
mov
mov
jl
outsb
int3
lods
xor
cmp
adc
fiadds
push
jp
add
ror
push
mov
orb
leave
sahf
xchg
rorl
sahf
lods
rolb
xchg
mov
push
and
push
push
repnz
mov
loopne
out
dec
jae
pop
sbb
test
test
faddp
add
fs
data16
xchg
or
push
lock
dec
push
sub
xchg
adc
lock
xchg
ret
push
add
sti
addb
dec
imul
aas
movsb
fdivrs
fucomip
add
cmp
push
sbb
dec
adc
xchg
mov
fdivr
inc
insl
movsl
jbe
and
lds
sbb
mov
xchg
xchg
pushfw
mov
push
add
lea
fs
mov
mov
lea
push
mov
call
in
push
arpl
add
clc
aam
jnp
aaa
pop
mov
mov
lock
mov
xchg
je
je
ds
mov
inc
mov
sbb
xor
fdivr
insl
jo
xchg
sub
xchg
mov
mov
insb
shll
jbe
js
mov
test
adc
and
fs
inc
adc
in
xchg
dec
mov
jnp
dec
jbe
mov
adc
inc
insb
push
mov
mov
xchg
inc
out
cwtl
das
ss
in
inc
aas
das
aam
gs
popl
cmp
dec
pop
lret
jmp
xchg
jne
jo
hlt
nop
push
add
repnz
add
lods
mov
push
push
push
sarl
sbb
pop
ja
addl
data16
add
dec
loop
negb
out
lret
test
mov
fnsave
ljmp
aaa
sbb
rolb
add
daa
nop
jnp
inc
lret
repz
jns
cmpsl
add
lods
pandn
push
arpl
xor
inc
and
fcmove
pop
push
gs
xchg
fiaddl
push
rolb
cmpsl
mov
push
lock
les
sldt
xchg
out
pusha
imul
popf
xchg
xor
mov
shl
add
dec
loopne
pushf
cmpsl
or
ficoms
js
jecxz
mov
cmpsl
cmc
adc
sub
nop
push
notb
jmp
aaa
inc
pop
push
or
add
push
push
stos
andb
mov
roll
cmp
xorl
push
mov
adc
add
ret
or
xchg
aam
dec
rcrl
add
xlat
push
jecxz
mov
add
jae
jno
loopne
sbb
mov
insb
fxch
mov
loopne
sahf
xchg
movsl
popf
add
movl
push
mov
jne
pop
loope
or
loopne
jge
orb
ja
sub
push
adc
cmpsb
sub
daa
pop
sbb
pop
idivl
xchg
fldenv
mov
inc
and
cmp
shl
js
test
imul
sub
imul
rcll
mov
and
je
adc
aas
sub
jmp
push
lods
jb
add
popa
push
leave
inc
xlat
sbb
push
cmp
inc
leave
push
dec
xor
icebp
sbb
sbb
stc
xor
enter
or
rcrb
xlat
pop
ret
bound
cmpl
mov
push
pop
cmp
je
cwtl
push
in
mov
xor
pop
pop
adc
or
sbb
cmpsl
adcb
cwtl
dec
xor
rorb
sti
push
xor
jns
push
pop
andb
lea
push
push
push
add
fiaddl
and
lea
cmp
jge
inc
and
add
add
add
cmp
mov
and
jge
mov
stos
in
sbb
jne
xchg
push
inc
add
rclb
mov
test
fsubrl
mov
sahf
int3
sub
jl
pusha
and
mov
mov
or
mov
sbbl
sub
loopne
sub
dec
psubusb
aas
aam
outsb
push
or
test
addr16
xor
xlat
jns,pn
icebp
inc
fcmovb
and
sbb
push
xchg
ret
jo
insl
mov
int3
xor
dec
push
sbb
arpl
ja
push
fadd
scas
ja
rcrb
push
xor
sub
mov
insl
faddl
or
pop
rorb
rol
dec
mov
lcall
adc
add
popf
call
add
repz
mov
mov
add
sahf
add
es
imul
sub
add
xchg
fldl
mov
stos
mov
fldl
add
add
gs
cmp
fistpll
add
mov
fdivl
mov
ljmp
leave
adc
pop
enter
sub
jl
lock
mov
push
mov
addl
pushf
popa
les
push
push
lea
pop
and
fcomps
push
incl
inc
in
push
aas
rorb
cmpb
out
dec
or
je
push
cwtl
lock
mov
xchg
cmp
xor
dec
jae
mov
fsubs
shll
inc
movsb
xor
or
pop
or
inc
pop
fdivrs
sbb
std
or
cmp
ljmp
lock
xchg
lock
dec
sub
or
les
test
and
jae
cli
fisttpl
cwtl
loope
cmpl
scas
test
mov
lods
push
stos
xchg
test
ret
push
cmp
ficoml
pop
push
cld
je
or
xchg
inc
daa
push
inc
in
sti
pushw
mov
roll
icebp
mov
xorl
adcb
inc
xor
test
add
mov
xchg
pusha
cmpb
pop
push
mov
rolb
bound
adc
xchg
add
test
out
mov
pop
callw
push
sub
in
mov
mov
cmp
loopne
scas
and
jl
xchg
pop
in
lret
hlt
inc
out
pusha
add
cltd
popf
outsl
mov
ret
add
inc
mov
jl
mov
sub
push
arpl
rorl
js
push
loopne
mov
add
pop
add
movsl
mov
rol
push
xchg
test
ret
popa
sbb
std
mov
sub
sbbb
jmp
push
push
iret
scas
and
xor
setle
fnstenv
mov
pusha
rolb
fcoms
push
add
inc
test
xchg
mov
or
mov
sbb
sub
out
or
stos
sub
bound
mov
or
xor
push
lea
cwtl
push
xor
pop
sub
push
pop
fdivr
cmp
stos
mov
mov
or
dec
in
subb
push
int3
push
inc
inc
pop
adc
pop
mov
rcrl
cltd
xchg
loopne
mov
sub
enter
pop
or
sbb
call
ficoms
push
mov
gs
lock
and
imul
hlt
lea
pop
push
xor
add
sub
sti
push
rorb
jmp
adc
cwtl
sbb
inc
pop
xor
jnp
or
pop
pop
adc
rolb
fs
dec
or
leave
test
adc
add
or
mov
ret
scas
fsubrs
ja
mov
cmpb
addr16
popf
cmpsb
dec
ret
push
mov
js
dec
sub
clc
je
push
add
xchg
push
sub
push
add
adc
push
inc
push
xchg
mov
icebp
dec
fwait
push
pmulhuw
fadd
xlat
xor
xor
fcmovnu
fwait
jle
dec
outsl
xchg
lret
cmp
jl
test
mov
int3
xor
sarl
pop
sub
lcall
xor
cmp
jne
lret
out
xor
ret
cmp
push
push
shll
fcomps
out
push
or
cmp
je
sub
out
jo
push
push
stc
push
popf
fcomi
loopne
pushf
fistpll
add
flds
adc
push
sar
repz
or
xchg
and
sbb
bound
in
pop
adc
push
mov
lahf
in
xor
das
in
sub
jo
clc
fisttps
js
dec
or
in
xor
mov
out
xorl
jge
mov
mov
pop
call
push
cwtl
pop
imul
ja
adcl
and
pop
mov
add
ret
fidivrl
lcall
loope
out
inc
add
sarl
or
orb
dec
mov
popa
adc
add
cmp
outsl
adc
dec
or
mov
icebp
rorl
fwait
xor
int
jg
cmp
inc
and
cmp
je
sbb
jbe
outsb
clc
pop
mov
mov
fbstp
mov
mov
lods
mov
push
das
mov
push
add
inc
or
pop
pushl
test
mov
pop
ljmp
push
mov
push
dec
or
push
sbb
xorb
push
sub
dec
and
cmpl
cmpsb
dec
or
xchg
push
or
rclb
or
fmul
pop
movsb
mov
add
loopne
mov
and
mov
dec
add
sbb
aad
in
scas
cltd
or
jne
loope
fcoms
popa
adc
test
mov
dec
xchg
inc
cli
mov
add
js
or
xchg
icebp
mov
adc
leave
je
mul
seto
push
out
add
enter
imul
jmp
jnp
cmpsl
push
cmp
fmull
pop
lock
sub
test
shlb
cmp
shl
cltd
sub
and
cmpsb
inc
cs
dec
inc
add
inc
sbb
dec
pop
popa
sub
cmp
clc
fldl
mov
adc
icebp
pusha
cmpsl
sbb
and
data16
cs
inc
daa
or
add
inc
adc
in
pop
dec
test
mov
mov
sbb
test
pop
sub
lahf
add
xor
xchg
sbb
cmp
push
fdivrl
push
push
and
leave
add
nop
popf
push
sbb
push
in
pop
mov
test
lds
add
push
pop
sbb
cmp
je
sbbb
mov
xor
pushf
cmp
je
pop
xor
xchg
and
cmp
jne
ds
adc
dec
cmp
add
pop
mov
sub
lock
subl
sub
mov
mov
pushf
xchg
lods
xchg
faddp
jmp
jl
ret
dec
mov
test
je
cli
jmp
mov
inc
jno
lock
inc
cmp
jae
add
ss
mov
inc
xor
sbb
pop
jbe
mov
sub
push
and
sbb
jl
adcb
test
push
push
ss
mov
inc
jmp
stc
arpl
mov
test
cmp
bound
shl
push
std
cmp
mov
shlb
adc
mov
xchg
pop
or
push
loop
or
or
outsb
push
movsl
or
xlat
dec
enter
adc
or
ss
push
pop
cmpl
cmp
add
ja
lea
cld
ret
rorl
cmp
mov
adc
lea
jmp
push
jle
addl
mov
pusha
jo
add
mov
pop
cmp
out
lods
dec
or
push
inc
push
clc
dec
or
and
popl
rcrb
adc
inc
or
fnstsw
mov
or
mov
push
mov
and
inc
sbb
jg
push
imul
sub
adc
push
push
or
and
lock
insl
aad
push
cmp
mov
fwait
or
mov
mov
adc
add
and
hlt
add
pop
mov
sub
xchg
add
mov
mov
push
movsl
or
add
cld
adc
push
mov
jl
push
sbb
xlat
inc
orl
stos
xor
int
sti
xchg
jmp
or
mov
ret
and
sbb
dec
test
js
sbb
inc
out
sbbl
adcb
mov
push
test
sub
out
push
clc
aam
xchg
sub
push
push
out
sub
sub
adc
movsl
xor
test
test
pop
ret
call
mov
add
and
add
rol
inc
jp
aam
xor
push
bound
in
cmpsl
mov
dec
mov
rolb
push
jbe
fmuls
popf
ficoml
add
sub
or
sbb
jnp
out
jne
test
mov
push
push
lods
or
push
add
mov
sub
ror
pop
inc
xor
cmpsb
add
popf
cmp
add
adc
insb
lods
sub
add
ljmp
adc
pop
ret
or
jmp
in
and
mov
and
outsl
xchg
popf
dec
pop
mov
mov
push
adc
mov
jbe
push
orb
xchg
xchg
movsl
int3
jbe
and
jnp
jno
int3
ret
lods
mov
pop
add
jmp
jg
mov
shlb
xchg
add
sub
lock
add
loope
and
movl
and
add
mov
or
cmp
clc
and
inc
adc
imulb
mov
mov
pop
and
mov
in
pop
add
pusha
or
aam
mov
int
add
cwtl
fmull
sbb
je
outsl
test
sbb
aam
mov
icebp
xor
enter
sub
lahf
mov
push
add
imul
movl
jg
pop
inc
or
mov
push
or
xchg
pop
sub
sbb
enter
pop
cs
in
dec
lahf
or
mov
fmull
sub
into
addr16
jmp
inc
push
scas
leave
ret
cmp
mov
mov
sbb
mov
or
test
mov
cmp
js
mov
and
ljmp
pop
je
orl
push
mov
test
dec
rcll
sub
movsl
or
push
mov
jp
jle
mov
sbb
sbb
sub
mov
jnp
mov
ljmp
push
addb
add
dec
sub
movsb
repnz
popf
dec
fisttpl
push
push
add
inc
rcll
sub
orl
shll
loope
pop
inc
mov
insl
lods
mov
pop
and
mov
pop
popf
xchg
or
mov
xchg
adc
cld
lea
push
fnstcw
sub
sub
or
sbbl
sub
daa
sub
xor
add
cmp
adc
rcrb
dec
outsb
adc
clc
pop
fisttps
cmp
jbe
push
pop
cmp
inc
ret
pop
addl
mov
mov
test
mov
iret
mov
adc
mov
pop
xchg
out
inc
jo
arpl
out
cmc
mov
repz
in
cmp
push
push
sti
add
lea
pop
insb
lahf
cmc
and
fsub
in
rorb
push
xlat
sbb
into
pop
push
cltd
fsub
call
pop
push
daa
pop
leave
lea
cmpsl
adc
mov
in
push
loopne
hlt
enter
clc
adc
aad
push
iret
enter
push
dec
outsb
inc
les
sub
sbb
add
cmp
cmp
jp
sbb
adc
and
jae
mov
push
push
pop
inc
xor
test
adc
and
int
sbb
mov
jmp
mov
jecxz
aaa
push
sahf
js
push
rolb
jp
ret
loopne
mov
loop
push
in
or
popf
add
mov
sub
lods
mov
adc
sbb
daa
aaa
inc
inc
mov
jb
mov
loop
mov
bound
xor
cmpl
and
inc
or
aad
pop
andb
push
stc
pop
xor
pop
and
lahf
adc
and
sub
sbb
fwait
addl
pushf
out
sbb
jg
push
cs
push
pop
fwait
aas
pop
pop
push
movsb
loopne
cmp
in
pop
xor
fimuls
and
sbb
sbb
in
sub
test
ljmp
lahf
push
fdivr
faddp
nop
mov
mov
js
push
ret
fisttpl
test
pop
inc
inc
das
add
mov
pop
sbb
mov
pop
hlt
push
dec
aad
mov
rolb
mov
xchg
and
outsb
cmpb
and
std
lods
es
cmp
cmpsl
and
xor
mov
dec
ret
dec
adc
into
and
cmp
scas
mov
stos
dec
or
rolb
mov
call
clc
adc
das
pushl
mov
sub
test
hlt
mov
adc
add
mov
push
push
adc
sbb
xchg
xchg
enter
mov
sbb
or
test
pop
lods
sbb
add
cmp
jl
test
jno
xor
xchg
sub
test
inc
mov
addr16
jmp
adc
pop
xchg
pop
ja
xchg
fiaddl
popa
xor
push
in
push
push
mov
in
test
push
fcoml
scas
and
test
pop
dec
push
std
lods
mov
mov
dec
sar
js
loop
out
push
push
push
in
mov
mov
lret
hlt
cwtl
or
or
add
xlat
cltd
or
mov
pop
mov
cs
push
add
push
insl
inc
test
mov
dec
hlt
add
push
imul
ret
jo
shll
ss
xor
dec
lcall
jno
orl
stos
nop
or
or
mov
sbb
imul
push
inc
dec
jmp
mov
lods
test
out
dec
push
sub
adc
jmp
jae
loopne
movsl
pusha
jo
inc
insb
pop
mov
and
loopne
fmull
in
movb
add
mov
inc
pop
ret
sbb
cmp
inc
push
popf
idivb
loopne
mov
xchg
mov
add
add
cmpsl
adc
in
test
add
pop
sarb
ljmp
inc
or
inc
jno
mov
mov
xchg
inc
or
or
jg
loope
mov
jne
pop
xchg
je
popa
push
push
lock
xchg
fstpt
mov
or
jbe
ljmp
xor
jle
xor
in
sarb
test
fmuls
rcrb
jnp
jl
rorb
pop
cmp
inc
mov
gs
insl
test
push
imul
inc
xchg
mov
push
icebp
adc
enter
out
jle
sbb
add
xor
cltd
xor
sbb
mov
loope
shll
add
cltd
inc
sbb
adc
fists
clc
cld
outsl
mov
clc
inc
push
sahf
sbb
fadds
or
sbb
mov
cmpsb
adc
fmuls
xchg
loope
shl
or
mov
xlat
shlb
cli
inc
lock
daa
in
add
add
xchg
push
popl
or
repz
neg
test
inc
or
cld
sub
mov
mov
xchg
cmp
sbb
xor
stos
jle
push
into
dec
xor
inc
incl
scas
es
add
xchg
push
js
inc
push
pushf
pusha
out
or
mov
mov
cmp
js
lds
and
xchg
rcrl
repnz
sbb
adc
fucomip
in
and
daa
and
jno
or
outsb
adc
icebp
xchg
clc
aas
dec
add
add
xorl
xor
add
or
imul
dec
sbb
or
sahf
xchg
cmp
sub
lahf
sbb
cmpb
pop
or
loope
push
adc
cld
mov
out
jnp
orl
push
push
lock
push
jp
inc
je
out
xor
or
push
outsl
adc
cmp
or
shlb
add
dec
loope
add
mov
or
dec
dec
rorb
xor
xchg
cmpb
out
lods
jnp
dec
pop
jne
push
mov
mov
push
inc
or
add
rorl
scas
and
imul
push
data16
fstpl
adc
cmp
jbe
sbb
inc
outsl
aas
sbb
sbb
adc
mov
xchg
stc
jae
cmp
jb
cmp
dec
mov
dec
adc
rcrb
mov
add
incl
cmp
lcall
adc
inc
je
ret
add
cmpsb
sbb
addb
dec
call
enter
andb
fildl
insb
pushf
add
pushf
inc
and
inc
xchg
push
cmp
dec
pop
or
push
push
or
out
add
push
aas
adc
push
push
fdivrs
aaa
push
addl
add
sbb
mov
adc
push
aas
ret
aam
out
and
add
shlb
push
test
sbb
jmp
test
mov
pop
xchg
mov
imul
js
inc
sub
fld
mov
pop
faddl
adc
pusha
dec
xlat
push
loopne
jmp
dec
incb
lods
dec
insb
push
push
push
lea
sbb
ja
arpl
push
jbe
lea
jmp
adc
adc
sub
stos
pop
add
pop
mov
adc
in
insl
lea
push
test
sub
js
pop
push
pop
mov
adc
add
sbb
or
test
incl
adc
dec
fdiv
scas
sub
cmp
xchg
pusha
lret
push
sbb
add
or
mov
rol
adc
sbb
sbb
mov
pop
push
nop
ljmp
adc
pop
imul
mov
mov
jbe
je
fnsave
and
sbb
lods
add
dec
mov
sbb
push
inc
sahf
call
ret
dec
cmp
sbb
jle
sbb
adc
pushl
add
dec
jmp
or
orb
dec
inc
cmpsb
pop
fbld
push
cmp
sbb
loop
jnp
sbb
dec
and
rolb
and
pusha
cmpsb
dec
call
cwtl
jle
inc
or
push
cmp
pusha
xchg
popa
movsl
icebp
sub
js
mov
jge
sbbl
or
mov
dec
add
inc
add
fldl
insb
sub
dec
xchg
shlb
sbb
xlat
and
bound
add
cmp
popa
sbb
jg
cmp
dec
in
jno
lea
lea
mov
mov
or
mov
imul
imul
mov
daa
fimuls
mov
pop
adc
push
lods
lret
int3
cs
adc
mov
loopne
mov
adc
and
mov
and
dec
dec
adcl
xor
or
test
sub
add
bound
movsl
sub
sbb
mov
sarb
pusha
and
sub
jo
cmc
and
mov
popf
jmp
in
popf
fiadds
mov
out
cmp
je
rcrb
int
daa
nop
inc
andb
outsb
mov
mov
push
xor
out
loopne
repnz
loope
sub
mov
ret
outsb
xchg
lret
adc
inc
idivb
je
sub
mov
div
aas
mov
cmp
cmp
jb
xchg
lret
mov
or
mov
rclb
add
xchg
add
mov
mov
orb
or
xor
xchg
cwtl
por
pop
add
fwait
mov
add
jge
pushf
mov
cwtl
add
xor
rclb
sarb
andl
ja
jmp
aam
sub
pop
call
orl
sub
incl
aam
aas
push
xchg
xor
dec
push
je
dec
jne
cmp
lea
mov
or
xor
adc
mov
and
das
lahf
xor
pop
jmp
add
insl
inc
leave
mov
in
int3
pop
cli
inc
and
es
sbb
mov
adc
add
rorb
aad
andl
cld
nop
dec
lret
movl
outsb
daa
xor
outsb
jg
gs
mov
lea
cli
jb
adc
jo
dec
push
inc
jle
xchg
ret
mov
adc
decb
mov
inc
arpl
loopne
ja
xchg
pop
sbb
insl
je
movsb
mov
mov
push
lret
mov
inc
adc
test
xor
aam
cmp
dec
fdiv
xor
adc
or
dec
or
sti
push
push
dec
lods
mov
dec
inc
ret
lcall
into
filds
xchg
push
frstor
push
ret
push
and
lahf
loopne
cld
xor
ds
je
iret
sub
cmp
mov
xor
cmp
or
subb
mov
loop
test
jg
sub
in
shll
lea
push
adc
inc
cmp
push
adc
movntq
pop
cmp
push
jne
cmp
jbe
sub
add
popa
enter
inc
sub
pop
into
jmp
sbb
in
sub
xor
clc
nop
mov
imul
roll
mov
mov
insl
clc
jb
fists
loopew
adc
ret
test
es
push
pop
or
or
xor
xchg
ret
sahf
or
jno
push
imulb
sbb
loopne
push
push
lods
adc
pop
aaa
push
fsubs
and
rcll
cmc
shr
and
je,pn
aaa
js
mov
orl
rcll
outsb
adc
sbb
mov
mov
stos
xchg
adc
ret
pop
pop
dec
push
jmp
je
fs
fcompl
test
sbb
fs
cmpsl
sbb
popa
add
xor
push
icebp
in
xorb
inc
cmp
cmp
mov
mov
xchg
dec
or
pusha
pop
ljmp
adc
mov
sbb
push
js
in
mov
mov
push
mov
adc
jno
divb
adc
aad
sbb
idivl
push
mov
fimuls
stos
icebp
inc
inc
cli
mov
cmp
xor
mov
jnp
adc
push
lds
sbb
stos
or
lods
fucomp
jo
add
inc
adc
push
and
sub
xor
adc
les
sbb
popa
mov
cwtl
sbb
scas
stc
adc
js
lcall
push
mov
pop
popa
and
adc
push
das
push
es
ss
mov
adc
lods
loopne
cmp
nop
sbb
sbb
cmp
jge
sub
mov
or
mov
or
adc
add
mov
in
ret
test
inc
pop
gs
xor
sbb
dec
add
or
test
fmuls
mov
lds
adc
dec
add
mov
rol
pusha
jo
enter
insb
in
mov
mov
lea
call
in
sbb
popa
xor
popf
mov
faddl
sbb
add
jbe
xlat
sub
or
arpl
jne
push
scas
mov
mov
push
fistpl
or
out
les
add
out
loop
out
in
xchg
add
imul
cwtl
mov
xchg
cmpb
insb
hlt
cmp
je
push
pop
imul
pop
add
xchg
and
mov
shrl
or
dec
push
xchg
movsb
fdivrl
mov
push
inc
or
ret
arpl
or
xchg
ret
and
cmp
lods
mov
mov
and
and
xor
lret
sti
sub
push
lods
and
mov
jae
into
and
rorl
ljmp
lret
push
or
push
add
lahf
jne
div
mov
cs
push
ss
add
mov
rorl
mov
das
jl
fisubl
mov
mov
xchg
cltd
daa
xchg
cltd
and
in
push
mov
xchg
sti
test
cmpsb
mov
fs
subl
cmc
int3
push
faddl
test
test
sbb
mov
dec
je
mov
jno
jae
sbb
add
inc
enter
jns
mov
test
cmp
or
inc
orb
jmp
and
dec
cmp
or
sbb
push
cwtl
mov
pop
push
test
notb
sbb
mov
and
loopne
inc
mov
sub
mov
aas
mov
in
cmp
sbb
and
sbb
cld
pop
or
shrb
push
dec
xor
in
pop
push
push
and
ja
pop
mov
xlat
cmp
daa
xchg
pop
mov
fistpl
lds
daa
iret
mov
xor
ds
cmp
into
test
es
adc
sbb
dec
mov
push
mov
enter
sub
movsl
loope
cmp
push
xchg
jg,pt
popf
or
aas
mov
mov
dec
cwtl
stos
ds
xchg
mov
mov
push
lret
js
mov
push
sbb
mov
mov
jp
fstl
pop
and
and
aas
mov
cmp
jo
dec
pop
xor
push
add
add
test
pop
cmp
mov
lret
push
out
cmp
jge
dec
stos
cs
movsb
jp
cmpsb
dec
push
mov
fsts
insl
out
sbb
mov
push
dec
and
sbb
cmp
sbb
lods
sarl
leave
aaa
inc
in
push
inc
xor
jl
sub
push
pusha
leave
xchg
jl
mov
mov
pop
xchg
fistl
push
mov
jecxz
mov
add
jecxz
dec
fwait
push
xor
movsl
sbbl
adc
xchg
jmp
or
adc
andb
add
inc
js
outsl
xchg
pop
xchg
and
insl
mov
fistps
out
cmpsl
or
mov
je
mov
out
sub
mov
and
sbb
adc
push
adc
xor
or
dec
pop
add
pop
jb
mov
pop
add
std
aas
xchg
add
pop
test
or
push
or
push
sti
push
cmp
and
and
ja
fs
sbb
mov
sbb
push
imul
or
sub
cltd
mov
and
and
imul
xor
xor
lods
push
mov
or
scas
xchg
pop
xchg
mov
xchg
add
js
pop
sub
xor
xlat
lea
xchg
xlat
jge
or
aaa
sub
push
add
inc
cld
pop
mov
out
pop
cltd
adcl
jo
cmp
xchg
xchg
add
sbb
sub
push
sbb
pop
mov
cmp
inc
pop
out
int3
mov
xchg
pop
dec
es
das
adc
add
lods
xor
xor
xorb
sbb
inc
mov
mov
xor
and
and
stos
rorl
popf
add
loopne
popf
adc
enter
sbb
pushf
or
pushf
inc
aaa
or
jmp
jnp
arpl
je
pop
es
adc
mov
jae
adc
jno
jge
loop
jno
stos
or
movsb
jb
mov
shll
xlat
call
xchg
inc
dec
dec
cmp
jecxz
cwtl
movsb
xchg
cwtl
outsl
jne
lea
lock
xchg
cmp
inc
push
andb
push
xor
add
inc
pop
mov
inc
divl
or
icebp
out
stos
shrb
pop
outsl
mov
cs
sub
andb
jg
cmp
mov
rcll
add
ja
push
adc
sub
inc
sub
mov
mov
xor
lret
inc
popf
pop
lea
orl
add
and
cmp
push
adc
cmp
or
xor
cli
pop
inc
push
and
sbb
pushf
jge
shrl
imul
shr
mov
out
cltd
pop
loop
push
mov
jbe
pop
and
rorb
or
cmp
xor
push
sub
roll
mov
clc
pop
enter
add
add
pop
mov
in
mov
out
icebp
dec
adc
mov
insl
ret
mov
nop
aaa
sub
fdivr
push
push
sub
leave
out
xchg
mov
or
mov
jno
imul
mov
sub
rolb
fildl
not
mov
xchg
or
cltd
adc
xchg
ud0
addl
pop
popf
pop
xlat
lods
sbb
sahf
fwait
lret
jp
cmp
xor
sbb
dec
or
mov
xor
jl
push
mov
jo
push
push
xchg
rcr
add
mov
jne
aad
cmp
ja
push
inc
dec
add
jo
or
mov
fldenv
and
sarb
or
cmp
push
mull
icebp
push
dec
cltd
cwtl
in
jo
dec
movsl
pop
sub
lock
pop
sbb
lret
popa
fs
popf
push
popa
mov
fistl
xlat
ja
sub
in
divb
mov
jmp
fnsave
adc
adc
addl
fcomps
pop
push
pop
jge
call
add
cmc
xorl
in
pop
int3
push
cmpsb
or
jo
cmpsw
ss
adc
mov
jae
xchg
pop
inc
cmpsl
mov
in
pop
call
jno
lret
mov
push
xor
cmp
sub
test
out
fsub
loop
cmp
mov
iret
cmp
stos
jno
push
dec
push
xchg
mov
std
add
jp
sub
cmpsl
jno
pop
sti
sbb
in
pusha
fcoms
fidivrl
mov
pop
inc
sub
pop
or
add
and
push
inc
push
and
sbb
in
pop
and
fcoms
nop
sbb
xor
and
mov
fcoms
inc
and
and
xor
fdivs
mov
and
call
lds
je
negl
push
xchg
daa
push
jno
jp
sub
daa
stc
imul
and
sub
sub
pop
sub
inc
or
inc
leave
adc
test
or
sbb
out
pop
push
les
add
fnstsw
push
jnp
negl
mov
push
push
sbb
pop
arpl
dec
adc
add
or
sbbl
movl
int
outsl
jne
mov
and
mov
jle
dec
mov
mov
and
xor
imul
rcll
pop
cmp
dec
add
or
inc
or
pusha
lea
fildll
sarb
and
inc
lcall
cltd
nop
sbb
adc
cwtl
mov
or
daa
xchg
sub
testl
xchg
dec
adc
or
ret
sbb
adc
and
add
add
and
dec
clc
movsb
push
inc
in
out
inc
add
je
iret
jo
inc
or
and
inc
or
cmp
int3
shrb
ret
js
lock
js
lea
popf
push
rclb
sub
scas
shrb
and
mov
daa
adc
rcrb
daa
or
sub
pop
pusha
loopne
add
push
jbe
sbb
into
faddl
push
or
jl
outsb
stc
fisubrl
mov
pop
adc
mov
loopne
dec
jne
test
xchg
push
out
or
aam
xor
test
out
mov
push
ja
imul
sub
adcl
inc
adc
lock
or
scas
xchg
scas
pop
pusha
push
pop
push
xor
loopne
push
dec
pop
or
in
and
repnz
adc
xor
les
rorb
cmp
xor
jge
sbb
test
or
lods
rcll
or
lock
push
dec
and
pop
lock
mov
mov
adc
or
loopne
mov
add
cmpsb
stos
sub
fs
add
je
imul
push
int3
bswap
push
icebp
mov
bound
mov
sub
repnz
add
push
adc
lea
push
mov
nop
sbb
and
fld
movsl
jge
popa
call
pusha
xor
dec
ffree
in
imul
cmp
shll
push
push
mov
sub
sbb
or
inc
inc
sub
rol
push
adc
add
enter
imul
dec
cmp
lea
jo
lahf
mov
and
pop
call
adc
mul
dec
push
pusha
cmp
stos
ficoms
and
decb
jge
add
faddp
cmpsl
adc
sbb
addr16
hlt
pop
test
and
cmc
jnp
push
repnz
loopne
out
adc
stos
dec
sub
es
pop
repnz
adc
cmp
lcall
idivb
inc
jne
push
loopne
sarb
mov
jge
mov
mov
loope
dec
fldcw
or
add
add
aaa
add
mov
dec
movsb
cltd
clc
push
push
shr
add
andl
pop
movl
pmulhuw
sbb
adc
push
adc
mov
sub
std
xor
mov
shl
xor
jns
mov
lods
adc
mov
adc
nop
push
cmpsl
inc
stos
jge
es
movsl
jae
aam
sub
sub
mov
popf
jae
sbb
mov
xor
add
mov
or
jecxz
mov
clc
or
js
lea
pop
inc
pop
nop
add
xchg
test
and
iret
xor
orl
cmpsb
adc
and
rcr
dec
dec
addb
jmp
rorl
addl
dec
push
inc
jmp
mov
xor
scas
arpl
xchg
bound
mov
subl
mov
cmpsl
or
pop
fistl
add
jmp
sub
popa
lds
jbe
addl
add
mov
or
add
and
in
add
movsb
inc
stos
mov
lock
mov
std
mov
mov
sbb
leave
mov
cmp
adc
mov
mov
push
mov
dec
sbb
sub
movnti
inc
or
bound
std
test
or
jae
aas
ret
aam
pop
push
push
or
push
mov
movsl
fidivrl
pusha
cmp
xchg
add
add
sub
pop
or
or
les
ret
cmpsl
mov
out
in
inc
mov
dec
fsub
cmp
jle
loope
clc
jg
jae
inc
add
outsb
mov
fcomps
cmp
subb
cmp
mov
cmp
mov
pop
pop
or
xchg
faddl
sub
xor
sbb
pop
gs
paddusb
mov
sbb
mov
lret
popf
les
jp
cltd
add
or
addb
lock
pusha
enter
jne
or
adc
sbb
daa
stc
add
test
sbb
add
pop
inc
push
push
dec
mov
in
sub
add
fistpl
pop
cwtl
ficoms
inc
daa
sub
stos
xor
xor
mov
sbb
adc
sbb
imul
enter
cmp
dec
rorb
mov
lea
mov
mov
out
insl
mov
movl
jp
inc
cltd
push
enter
ljmp
cld
lea
js,pn
dec
cmp
dec
dec
outsb
pop
or
jae
or
pop
or
push
hlt
bound
sub
loopne
insb
sti
adc
or
push
add
shlb
insb
ret
inc
xchg
inc
sbb
lcall
movl
adc
add
popa
scas
add
dec
sub
sarb
add
cmp
lock
cmp
or
dec
sbb
add
insl
pop
lea
jmp
arpl
adcb
or
cltd
inc
push
add
popf
pop
adc
add
mov
jp
add
add
dec
adc
dec
rolb
das
test
shlb
scas
jne
or
xchg
mov
add
sbb
adc
or
inc
movl
sub
popf
mov
mov
outsl
inc
sti
out
xor
cs
mov
addl
or
add
push
mov
add
mov
add
js
inc
lea
clc
cmp
dec
popa
inc
ja
mov
loope
aas
popf
cwtl
je
dec
adc
and
imul
mov
es
js
inc
or
add
or
mov
lods
xchg
add
imul
clc
inc
adc
adc
inc
loop
adc
outsl
popf
cs
xchg
cwtl
bound
and
scas
push
mull
cmpsl
push
jb
rcrb
cmp
lea
pop
push
push
xor
in
dec
mov
out
push
daa
push
xor
sbb
jb
aas
sbb
int
out
aad
je
sahf
incl
das
rolb
pop
cwtl
add
iret
leave
push
fdivl
add
das
subl
cmp
mov
dec
cmp
movsb
fcmovnb
inc
outsb
mov
jp
cmpsl
push
nop
inc
sbb
movsl
adc
decl
rcrl
or
inc
pop
jns
in
push
sub
dec
dec
xor
inc
xchg
pop
rorb
adc
xchg
sub
es
and
insl
pusha
push
mov
rcrb
sub
dec
in
pop
rol
adc
adc
enter
adc
sarb
add
add
mov
data16
sarb
test
orl
xor
fdivs
out
shlb
xchg
mov
js
push
test
sbb
inc
test
xchg
pop
sub
push
lock
jg
pusha
faddl
push
dec
inc
or
sub
lahf
adc
mov
lea
dec
and
mov
adc
jbe
fsubrs
cld
sbb
cmp
dec
inc
mov
sbb
adc
xor
inc
repnz
xor
shrl
sbb
mov
mov
mov
xchg
mov
mull
add
data16
push
or
les
add
mov
adc
sbb
enter
test
aas
push
lods
mov
clc
xlat
hlt
add
adc
and
test
pop
cmp
add
dec
jb
add
roll
arpl
xchg
repnz
scas
push
lcall
lret
cmovb
jge
call
subb
adc
push
movl
push
inc
inc
mov
sub
into
jg
inc
ud2
dec
sti
inc
push
mov
add
cmp
nop
out
xchg
dec
dec
inc
icebp
push
add
xchg
data16
add
xchg
and
pop
mov
push
jge
lea
insb
jo
fwait
and
or
jmp
inc
cmp
ss
into
push
sahf
cltd
jae
mov
in
mov
or
push
movl
cwtl
or
push
insb
or
subl
mov
dec
sbb
icebp
cmp
lods
push
pop
ror
push
mov
cmpl
mov
in
mov
push
jmp
pop
negb
add
sbb
xchg
addl
cmpsl
add
inc
popa
mov
mov
xchg
jns
push
ficompl
arpl
shr
addr16
sbb
gs
push
fdivs
mov
pop
cmp
insb
adcb
shlb
jo
mov
cmp
fimuls
sbb
adcl
shrb
mov
jl
add
dec
dec
fs
mov
pop
add
dec
add
xorl
inc
add
pop
xor
popa
lock
xor
clc
xchg
mov
sbb
stos
jnp
repnz
andl
pop
popf
cmp
add
pop
cltd
inc
dec
out
repz
pop
in
add
mov
add
inc
jnp
push
in
jge
lea
movsb
mov
shll
mov
mov
clc
mov
adc
add
test
rorl
fistpll
cmp
xor
xchg
jl
fisubl
add
xchg
sbb
jg
out
movl
addb
adc
syscall
rcl
mov
mov
dec
subl
mov
cmp
test
add
stos
lods
rol
out
push
push
dec
shrd
push
fsincos
add
mov
jge
or
jnp
mov
movsb
bound
and
xchg
cltd
lods
lock
mov
or
sub
sub
mov
jo
and
inc
sbb
pop
bound
or
imul
inc
bound
addr16
fdivs
sbb
cltd
pop
mov
xchg
mov
pop
dec
jo
jae
call
push
ja
sti
adc
adc
mov
fcoms
jno
mov
or
out
push
push
xor
xchg
pop
inc
andl
and
mov
xchg
mov
lcall
imul
shlb
in
mov
xchg
sbb
or
js
loopne
xchg
push
enter
addl
js
movsbl
mov
ss
pop
jno
jne
and
mov
je
adc
fwait
dec
fisubs
adc
adc
mov
pushf
mov
cmp
sbb
gs
mov
hlt
push
inc
test
rolb
pop
dec
cmp
lock
mov
lret
mov
sbb
pop
js
je
lret
jbe
mov
cld
adc
xor
in
jnp
jne
mov
xor
xor
jecxz
std
addl
lea
stc
lock
fwait
push
bnd
hlt
pop
dec
lods
repnz
dec
push
xor
addb
arpl
mov
mov
arpl
pop
lcall
gs
jno
xchg
fwait
and
shrb
sub
dec
nopl
repz
sbb
jns
std
lock
and
xor
jno
or
sub
and
mov
push
and
cmp
faddl
out
out
fsubrp
or
push
add
es
adc
add
int3
add
in
jmp
add
das
ret
xchg
mov
mov
hlt
and
inc
loope
pop
mov
dec
push
mov
shrl
push
pop
sub
push
push
jg
bound
sbb
and
popa
inc
xchg
mov
sub
mov
popa
and
imul
and
je
insb
fiadds
jmp
cmp
scas
sbb
jno
xor
das
push
mov
and
add
mov
test
sbb
xchg
fstl
or
aam
mov
dec
into
sbb
inc
xor
out
add
ret
mov
mov
or
push
mov
mov
shrb
cld
leave
daa
or
or
inc
das
lret
andb
mov
aaa
lea
rcrb
lret
or
pop
pop
cmp
xchg
clc
imul
jl
popa
je
mov
ret
test
fstps
shrb
in
loope
jnp
jns
mov
push
cmp
in
mov
add
sarb
icebp
lret
mov
popa
sbb
cmp
ja
mov
mov
mov
movl
mov
jl
or
mov
gs
pop
mov
test
cmp
add
push
stos
and
aam
pop
clc
adcb
and
rclb
mov
adc
call
adc
arpl
push
imul
insb
insb
add
jno
lock
clc
adc
mov
pop
enter
adc
mov
add
test
popa
cmc
mov
cmp
cmovbe
pop
inc
aaa
add
scas
mov
shrb
push
int3
shr
xor
pop
int
sub
jno
sbb
xor
mov
pop
mov
inc
pop
arpl
sub
and
movsl
jo
in
in
adc
pop
bound
movsl
movsb
pop
popa
add
add
rcll
inc
add
mov
mov
inc
aas
inc
popl
push
and
aam
jbe
aam
hlt
fsubrl
sub
insb
fldl
or
push
clc
sub
clc
jmp
jno
stc
sub
push
add
push
push
push
push
push
inc
jl
mov
xor
and
pop
popf
lds
sub
or
icebp
insb
jne
mov
call
sub
mov
inc
push
jne
dec
fmuls
adc
or
out
jns
adc
int3
lods
xchg
ror
push
pop
or
sbb
adc
xorl
pushw
push
adc
repnz
xchg
nop
imul
mov
mov
das
adc
xor
sub
adc
sbb
loopne
mov
add
add
sub
test
js
imul
pop
sti
xor
lahf
pushf
jmp
push
inc
cwtl
lcall
orl
hlt
adc
mov
adc
sti
push
pop
add
lret
pop
or
mov
orb
or
cmp
jmp
sti
or
cmp
js
add
xor
sbb
xchg
jbe
scas
or
inc
dec
popf
enter
adc
push
inc
lret
adc
add
add
cmp
add
ss
cmp
mov
mov
inc
sbb
jne
nop
push
and
subl
jno
movsb
nop
movb
sub
add
sbb
dec
sub
cmp
imul
adc
sub
nop
xor
outsl
cwtl
mov
mov
aad
mov
xchg
push
mov
jg
push
push
rcl
xchg
mov
adc
movsb
adc
jbe
pop
insw
xchg
addr16
jmp
mov
lock
inc
mull
jbe
cmp
push
cmp
or
jne
sbb
in
pop
int3
clc
jo
or
jnp
add
lret
adc
aam
cmp
nop
dec
jno
cmp
mov
sbb
jno
push
xor
enter
in
adc
enter
mov
lods
jne
mov
push
out
jg
outsl
adc
inc
cwtl
in
push
push
jo
xlat
mov
mov
loop
adc
jecxz
mov
mov
dec
test
mov
adc
add
and
sub
mov
xchg
mov
arpl
rorb
jp
inc
inc
mov
hlt
popa
jecxz
dec
in
mov
dec
in
ret
cmp
bound
inc
pop
por
and
dec
mov
fwait
push
je
jge
mov
lock
pop
add
xchg
cmp
cmpl
ss
mov
xchg
fdivrs
lret
pop
into
pop
dec
pop
rcl
adc
cmp
js
rolb
jmp
sbb
rcl
decb
pop
int3
je
ds
int3
pop
push
mov
xchg
les
andl
jmp
dec
in
push
fists
fs
xchg
mov
and
clc
mov
and
insb
divl
aad
mov
dec
mov
jle
insb
xor
pop
cmp
in
inc
dec
dec
jge
push
rorl
loope
fs
cwtl
mov
or
sbb
pop
add
and
adc
jge
push
test
daa
aas
fstpt
daa
pusha
in
mov
sbb
lret
test
mov
ja
xor
in
sbb
xlat
lcall
ret
jns
pop
fmuls
sbbl
push
mov
mov
shll
ss
mov
std
flds
cli
aas
push
lea
push
xor
or
scas
push
lock
loopne
int
dec
mov
xchg
sbb
pushl
push
pop
dec
fidivrl
mov
jns
movsb
fnstenv
sub
imul
cmp
inc
dec
mov
rcrb
adc
cmp
pop
nop
stc
jle
add
cmpw
sbb
cmpb
scas
or
push
cld
mov
pop
push
pop
mov
add
sar
sub
mov
push
repz
pop
mov
jns
les
pusha
adc
pop
jns
sbb
add
lock
add
xor
xorb
add
iret
inc
pop
lock
in
mov
dec
push
subb
sub
jl
sub
jmp
mov
pop
sti
lcall
dec
movzwl
cmpl
push
adc
and
or
test
sub
inc
ret
sbb
cs
add
cmp
add
mov
subb
ss
xor
adc
mov
jae
outsl
push
sbb
xor
addr16
inc
add
mov
push
fs
push
je
xchg
mov
insl
sysret
in
sub
xchg
pop
and
pop
and
push
adc
sbb
push
and
out
lcall
jb
fs
push
cmp
dec
and
add
and
pop
aas
pop
dec
pop
push
pop
push
dec
push
arpl
jb
jo
cmp
add
shl
and
test
pop
divps
adc
adc
mov
inc
fadds
push
and
roll
push
imul
icebp
and
cwtl
stos
out
inc
add
add
add
and
nop
pop
aaa
pop
mov
popa
sub
add
orb
scas
sub
adc
add
rolb
mov
pop
shlb
cmpsl
add
jp
inc
adc
call
and
aam
or
lock
call
mov
fwait
jle
adc
pop
adc
shr
push
mov
sbb
pop
fwait
int
mov
pop
dec
inc
iret
mov
cmp
sbb
and
fucomp
and
add
sub
push
or
mov
pop
adc
cmp
sub
js
mov
add
add
pop
adc
pop
jl
xor
push
shll
mov
dec
orl
test
test
inc
adc
orl
repnz
push
or
or
jne
pop
add
add
pop
lods
or
inc
push
pop
dec
daa
outsb
inc
jp
cmc
push
cmpl
pop
je
or
adc
adc
leave
or
mov
mov
faddl
in
and
sbb
arpl
jl
add
or
jne
or
test
hlt
ds
lea
mov
mov
sbbb
inc
mov
into
adc
inc
dec
pop
jne
imul
sub
inc
add
loope
push
and
xchg
les
aaa
scas
push
je
and
hlt
and
aas
or
xchg
push
out
mov
call
push
and
fldl
sbb
pop
sbb
iret
hlt
lcall
ja
out
fnsave
jno
sbb
rcrb
sbb
in
loopne
mov
xchg
inc
lods
sub
roll
mov
dec
fdiv
aas
sbb
mov
dec
push
mov
stc
stc
aad
and
mov
push
loop
sub
incl
fcom
mov
lahf
fimull
inc
and
addl
jge
mov
xchg
or
push
push
dec
jo
inc
mov
in
cmp
pusha
sub
mov
pmaddwd
gs
sbb
adc
xor
or
mov
mov
push
lahf
xchg
enter
xor
push
inc
aaa
pop
fs
push
mov
jmp
push
push
das
or
and
pop
loope
mov
jmp
adc
dec
lahf
adc
pop
pop
or
mov
adc
inc
sti
pop
inc
xchg
cmp
mov
add
rolb
mov
and
adc
mov
sub
mov
pusha
add
push
adc
xchg
xor
inc
add
mov
and
fists
cmp
mov
mov
mov
daa
add
or
mov
push
sbb
mov
xchg
lahf
stos
pop
aaa
adc
daa
dec
lods
inc
mov
push
bound
cmp
pop
xchg
lcall
sub
les
push
dec
push
std
lock
icebp
push
or
push
iret
xor
sbb
lcall
push
mov
dec
pop
sub
pop
repnz
mov
pusha
popa
dec
inc
test
jmp
cmp
jne
ss
out
repz
and
xlat
inc
inc
dec
xchg
xor
mov
push
test
test
mov
mov
loop
push
pop
fwait
in
test
sbb
pop
or
hlt
lea
fcoms
fdivrp
push
sbbb
xchg
pop
movsb
xor
adc
jae
mov
shrb
sub
push
jge
mov
aaa
add
test
push
xchg
into
or
dec
rol
jmp
aam
xor
or
or
enter
cmp
rcrl
dec
mov
mov
pop
imul
pop
pushl
cmpl
movsl
inc
outsb
or
mov
andl
jge
inc
xchg
inc
subl
mov
push
or
jp
add
dec
inc
es
dec
shr
inc
aam
sahf
data16
mov
fisubrs
sub
je
nop
inc
add
movb
jne
push
add
flds
inc
push
push
sub
enter
jne
fists
lret
push
lods
jnp
xor
movsb
pop
xchg
push
add
jle
lret
or
cld
jmp
add
xchg
mov
loop
pop
lea
dec
aaa
movsl
sub
js
pop
pop
and
mov
lea
push
push
je
nop
lock
cmp
das
jae
push
and
and
pop
fsubrl
fisttpll
clc
push
xor
pop
sahf
and
or
cmpsb
cmp
cmpsb
cld
hlt
xor
xor
sub
shlb
mov
loop
or
push
push
add
repz
insb
pop
and
stos
push
and
push
call
cmp
sub
push
jne
push
adc
and
xchg
push
adc
cmp
jmp
push
jg
mov
clc
repz
cmp
out
pop
es
and
je
imul
out
push
pop
sub
xchg
addl
sbb
enter
mov
sub
mov
ret
mov
test
bound
mov
sub
hlt
xchg
or
add
fmull
rol
add
adc
mov
mov
ja
adc
inc
or
pop
jns
adc
inc
sub
adc
mov
add
jmp
test
mov
inc
pop
js
mov
enter
dec
jmp
mov
test
or
daa
and
mov
enter
stos
test
test
or
sub
pop
iret
fldenv
loopne
lret
or
cmp
es
lods
ret
cmpsb
dec
mov
test
jno
xor
xchg
sar
fcoms
jo
mov
cmp
in
or
add
add
add
xor
test
or
pushf
inc
dec
inc
adc
lcall
in
lret
scas
sub
xchg
mov
mov
cmp
xchg
push
xchg
dec
jne
push
dec
add
icebp
lea
mov
inc
xchg
xchg
push
shr
cmpsb
push
loope
orb
cmp
sub
leave
xor
dec
ret
xor
or
test
mov
lock
sbb
add
imul
mov
mov
jbe
pop
aam
or
xor
or
or
xor
or
push
into
add
pop
mov
add
mov
fisubrl
add
jecxz
or
xchg
and
add
adc
sbb
cmp
push
push
jp
lock
add
loope
mov
mov
push
sbb
filds
lret
pop
add
push
pop
aaa
inc
mov
popa
cmc
or
mov
add
in
negb
sub
inc
dec
adc
dec
push
or
je
jg
xchg
loopne
cltd
arpl
addr16
mov
inc
imul
sbb
and
add
ret
mov
or
inc
mov
pop
pop
xchg
sub
push
sarl
in
mov
pop
sbbb
and
repnz
jne
inc
add
fwait
hlt
imul
sbb
and
xlat
inc
mov
push
hlt
imul
sub
stc
sub
jnp
clc
imull
mulb
cli
cmp
sbb
inc
popa
inc
aaa
mull
add
xor
xchg
cmc
push
and
loop
xchg
pop
lea
or
out
orl
sbb
xor
push
pushf
pop
sub
aas
int3
in
mov
push
lahf
cld
imul
push
shrb
sti
sub
icebp
in
lods
andl
sbb
mov
and
pusha
mov
push
fwait
mov
pop
clc
gs
mov
push
sub
pop
inc
and
or
movsb
jo
in
adc
rol
fisttpll
and
xor
jbe
adcb
jb
test
es
pusha
xor
inc
rcrb
sbb
ret
jp
movsl
out
sub
popf
cld
icebp
mov
push
jo
add
stos
in
sub
hlt
push
or
sub
cltd
sub
movsl
and
mov
insb
popf
scas
xchg
inc
mov
fnstsw
dec
loopne
in
sub
mov
test
sub
daa
aas
gs
shlb
sbb
roll
push
lea
insl
cmp
andl
adc
hlt
or
add
xchg
xor
sub
std
nop
xor
and
push
scas
rorl
xchg
nop
dec
lret
and
insl
pushf
xchg
pop
add
pop
xchg
ficoms
adc
push
cs
fs
lods
das
jb
pop
and
push
ret
push
mov
adc
add
mov
subb
pop
and
add
add
xor
rol
cmp
jmp
fwait
push
sbb
call
lcall
adc
leave
mov
lock
inc
insb
cwtl
rol
dec
jg
push
inc
jns
dec
test
pop
xor
bound
dec
mov
mov
fstl
cmp
jo
arpl
cmpsl
adc
xchg
jbe
mov
jnp
inc
adc
sbb
push
or
clc
sbb
jo
and
cli
repnz
aaa
aad
and
pop
push
and
add
push
add
dec
leave
in
xchg
dec
inc
inc
test
add
push
or
jnp
mov
cmp
push
sub
lea
inc
cmp
push
mov
push
and
push
push
dec
or
in
jmp
xor
lea
adc
mov
lcall
push
ja
mov
mov
vphsubbw
adc
shll
mov
add
xchg
andb
pop
imul
cmp
dec
in
pop
inc
sbb
leave
into
and
inc
or
shr
mov
shlb
mov
imulb
push
sub
daa
jne
lods
xorl
insb
push
jnp
or
jo
cltd
mov
push
out
mov
mov
xor
push
into
popl
out
dec
imul
adc
pushf
push
mov
jg
std
or
test
adc
sub
pusha
sub
xor
xor
stc
lock
or
dec
enter
push
add
xchg
adc
cmp
andl
pop
in
inc
fisubl
mov
cli
adc
in
mov
dec
jo
jo
into
lock
add
jno
dec
add
inc
icebp
sbb
clc
and
jmp
clc
jl
or
or
xchg
mov
adc
xchg
mov
add
push
sub
clc
push
jnp
outsl
cmp
mov
and
xchg
xor
pop
mov
adc
scas
xor
call
xchg
mov
jo
push
pushf
pop
add
mov
sub
sbb
xchg
popa
or
adc
cmp
pop
dec
ss
jge
mov
xor
xor
in
mov
jae
hlt
push
dec
push
cmpb
sbb
inc
lcall
out
add
in
pop
add
sbb
rcrb
push
add
and
adc
push
mov
cmp
add
popa
mov
adc
and
adc
loop
movsl
imul
jl
es
out
adc
xchg
or
xor
jb
scas
jns
das
icebp
push
xorb
mov
sbb
mov
shll
add
inc
fisubs
add
clc
sarb
xchg
xor
sbb
cmp
jno
popf
loop
mov
xor
jge
pop
arpl
adc
pop
and
xchg
add
insb
ja
push
mov
jns
xchg
add
cmp
aad
mov
lea
cmp
ret
sbb
jo
mov
jns
dec
inc
lock
scas
jge
mov
inc
adc
hlt
cmp
movsb
lods
or
dec
cmp
inc
push
mov
or
sbb
ret
roll
insl
xorl
and
push
nop
test
adc
adc
inc
cwtl
std
lcall
and
jecxz
inc
dec
adc
and
sbb
test
and
ja
repz
xchg
sbb
mov
cmp
lds
adc
push
or
test
shrb
stc
mov
push
lret
shrl
das
rcll
mov
and
movsb
or
or
adc
push
mov
mov
fistpll
xor
insl
fisttps
and
ja
lds
insl
in
out
insl
mov
pop
sbb
sbb
add
shrb
add
or
jp
sub
inc
push
arpl
jns
and
stos
fiaddl
add
inc
sahf
fistl
xorb
add
cmp
das
and
insl
xor
push
insb
push
leave
test
or
add
ret
xchg
add
les
movl
cltd
ljmp
test
cmp
xchg
shlb
add
adc
adcb
push
ja
sbb
add
cwtl
rcll
push
pop
pop
sbb
je
gs
dec
cmp
inc
pop
or
hlt
pop
cltd
punpcklwd
mov
mov
imulb
outsb
cld
mov
dec
jecxz
pop
in
adc
je
inc
ret
sbb
adc
add
jbe
mov
push
bound
mov
aam
or
js
add
mov
lods
pusha
add
xor
xor
push
int3
or
mov
aaa
mov
leave
sub
sbb
loope
movsb
movsl
pusha
sbb
add
outsl
jno
add
inc
sti
pop
rcll
or
fimuls
arpl
sarb
rorb
rcl
cmp
fisttpl
push
fisttpll
jno
fstps
pop
mov
mov
mov
xchg
mov
mov
nop
jge
mull
daa
mov
mov
xor
dec
fistl
pop
add
popa
inc
sub
scas
push
mov
lock
lds
jmp
jp
adc
xchg
cs
dec
loop
mov
scas
sub
into
push
mov
xchg
xor
popa
sub
jbe
rol
xchg
jl
ret
jle
pop
sub
adcl
nop
xor
decl
testl
inc
push
jle
loop
add
jne
das
fdivrs
lahf
push
adc
mov
add
jg
push
insb
mov
cmp
js
fcomps
ret
pop
cs
xchg
lock
add
push
ror
scas
cmpsb
in
fcmove
stos
add
push
rolb
push
orb
je
inc
loope
and
jle
add
in
inc
movsl
bound
mov
push
daa
add
mov
insb
popf
adc
jnp
nop
or
add
inc
lea
sub
test
je
xchg
or
out
orl
jle
lock
push
pop
push
push
outsl
pusha
sub
scas
sub
fs
sub
xorb
inc
push
fldenv
cmp
fiaddl
pop
xor
sub
jne
aad
stos
in
sub
dec
ret
or
pop
lret
mov
nop
shl
push
sahf
add
inc
jl
xchg
push
je
push
and
addr16
outsb
inc
xor
inc
and
or
jmp
cld
cwtl
and
adc
push
xchg
or
les
add
jno
in
mov
clc
and
clc
sarb
xchg
pop
loop
xor
sbb
or
outsb
adcb
add
jne
add
push
sub
push
pop
xor
loopne
jb
iret
push
sub
lea
push
mov
mov
xor
lods
inc
sbb
pop
lds
fwait
sbb
cs
hlt
dec
ret
mov
xchg
mov
pop
lcall
jl
adc
addps
test
sub
roll
mov
shl
cltd
ss
aam
pusha
pushf
push
lea
pop
js
and
outsl
mov
dec
lcall
lret
fimuls
dec
mov
dec
mov
ljmp
xor
pop
call
adc
pop
fstpl
or
std
aam
add
push
imul
push
test
outsb
sbb
push
xor
sbb
jle
mov
ret
nop
dec
mov
inc
mov
mov
push
sbb
loopne
arpl
mov
popf
in
add
out
out
icebp
hlt
shr
sub
call
das
add
js
push
sahf
pop
in
adc
push
lea
repnz
adc
inc
mov
insl
or
dec
gs
imul
repz
push
pop
inc
sti
cmp
add
fwait
xor
mov
jp
mov
das
mov
inc
push
adc
shll
test
jg
movl
imul
adc
fldz
and
add
testb
and
cmp
and
sub
jnp
push
mov
push
cmp
insb
and
pop
imul
xor
mov
dec
adc
push
loopne
xor
cmp
test
add
in
mov
mov
pop
pop
mov
shlb
mov
test
mov
pusha
rorb
fisttpll
mov
xchg
xor
dec
or
jne
loopne
mov
add
lea
fsubs
call
inc
sbb
add
call
pop
call
stc
mov
inc
mov
scas
sbb
lahf
test
add
xor
mov
or
push
scas
xorl
jmp
call
xor
sbb
adc
cmp
push
cmp
jle
stc
pop
jle
cmp
jp
push
cmp
cmp
inc
pop
add
jge
mov
mov
push
add
inc
jmp
or
mov
lret
clc
movw
lret
mov
cmc
add
bnd
mov
push
mov
cmpsb
cs
icebp
cltd
pop
idiv
lock
xchg
cld
adc
scas
imul
fcoms
mov
add
mov
cmp
and
test
adcb
call
fnstcw
push
popa
or
outsb
jbe
push
dec
or
hlt
cmpsl
xorl
mov
data16
pop
and
xor
pop
mov
dec
js
add
and
movsl
or
adc
and
adc
or
cmp
and
jecxz
int
mov
sbb
sub
xor
cmp
mov
adc
add
nop
dec
push
fdivrs
xchg
dec
scas
pop
insl
iret
jo
cmp
or
repnz
nop
xchg
dec
outsb
pop
or
adc
pop
sbb
enter
les
nop
and
test
sarb
or
and
add
loopne
cmp
lret
jg
push
push
rolb
mov
dec
insl
add
mov
fidivl
jl
outsl
pop
sub
or
into
cmp
add
adc
add
push
inc
fimull
dec
push
sub
or
leave
push
nop
sub
or
add
push
repnz
mov
and
jns
xor
sbb
dec
orb
and
bound
push
dec
leave
jmp
xor
popa
push
jo
cli
ret
adcb
std
inc
rcl
adc
aam
loope
subb
cmp
sbb
xchg
inc
push
cmpsb
aaa
sbb
mov
sbb
popa
mov
loop
push
jo
cmpsb
add
mov
sub
in
mov
inc
fwait
jl
sbb
fidivl
and
add
mov
add
or
outsb
adc
and
and
jnp
cs
leave
sub
fstl
add
push
jmp
lods
shlb
mov
adc
es
popa
adc
sbb
outsl
sbb
push
mov
cmpsl
std
cmp
stos
aad
pop
lods
test
stos
in
mov
ret
int3
andb
add
add
sbb
and
popf
adc
shlb
sbb
xor
sbb
leave
nop
pop
dec
es
adc
add
rcll
aas
add
add
jne
xor
add
add
or
and
push
xchg
and
inc
loopne
in
add
push
and
sar
les
mov
mov
or
adc
sbb
stos
loope
or
fwait
loope
hlt
jb
and
mov
out
rol
push
sbb
sbb
mov
push
mov
cli
sbbb
test
xorb
dec
push
int3
push
icebp
or
and
ret
add
add
mov
adc
jne
lea
add
add
push
popf
xor
push
bnd
push
mov
test
xchg
enter
push
les
add
add
enter
inc
outsl
add
orl
aad
jb
or
add
rolb
dec
aaa
lock
fwait
adc
fstpt
sbb
pop
scas
nop
xchg
sub
or
dec
xchg
cmp
in
je
push
repnz
jne
rol
cmp
outsb
adc
pop
rcrb
es
in
pop
outsl
popa
rolb
add
sub
push
adc
cli
push
addr16
rcrb
ret
and
sbb
int3
inc
cld
xor
and
add
test
inc
sar
pushf
jbe
sbbb
xorl
negb
aam
dec
jae
outsb
push
ja
lock
call
pop
adc
pop
or
xor
sbb
fildl
in
test
pop
stos
cmp
jne
mov
lcall
ret
popa
xchg
mov
sbb
into
add
push
add
xlat
sub
pop
or
pop
fildl
jb
cmp
dec
mov
notb
add
decb
testb
in
insb
cmp
add
jl
fs
mov
cmpsb
add
or
imul
in
shrl
pop
adc
sub
je
lods
mov
add
pusha
addl
and
es
adc
xchg
pop
and
dec
add
std
mov
xor
shlb
mov
es
dec
insb
push
and
rol
addr16
iret
inc
xor
jle
sbb
shl
add
fildl
adc
adc
xor
mov
cmp
test
jle
add
pop
sbb
xchg
adc
inc
push
pop
push
mov
mov
xor
fcmovbe
aaa
je
mov
out
call
and
popf
adcl
sub
cmp
fisubrl
or
sbb
insb
call
inc
dec
jmp
dec
fldl
xchg
inc
je
sbb
add
push
xchg
es
cmp
sti
inc
lcall
dec
ja
jle
test
and
dec
out
ucomiss
push
lods
mov
push
xchg
jge
lods
mov
jo
jnp
xchg
add
pop
fsub
pop
fsubrp
push
add
pop
push
rorb
cmovne
dec
dec
out
lds
int3
icebp
in
push
mov
in
ret
dec
sub
or
js
loopne
cmp
mov
inc
int
loope
cmpsl
dec
pop
int3
in
divb
inc
negb
mov
inc
cmpsl
inc
insl
adc
xor
gs
sub
mov
sub
and
add
bound
sub
shll
or
in
outsl
stos
dec
arpl
mov
jge
dec
insl
arpl
aam
pop
jo
jae
je
into
dec
dec
mov
movsl
pop
xor
push
daa
push
add
cmp
sbb
lods
jbe
fdiv
push
or
iret
das
add
jnp
xchg
pop
in
ret
ja
xor
mov
aaa
adc
push
and
xor
push
in
or
andl
in
gs
daa
xor
out
lock
cmp
jnp
fmull
mov
call
xor
push
clc
mov
add
cmp
jb
sbb
leave
shld
add
rclb
xchg
ja
jb
xchg
mov
push
ss
push
inc
add
push
add
push
je
pusha
or
ret
sub
add
push
leave
adc
push
push
mov
push
xor
or
add
or
mov
lret
push
sbb
push
lods
add
pop
pop
test
leave
pop
or
in
dec
mov
nop
test
shll
xor
dec
push
mov
mov
ja
or
mov
cmp
test
and
push
sti
cmpl
je
sahf
mov
push
sbb
jle
out
inc
jle
push
cmpw
jne
add
and
jge
pop
outsl
cmp
dec
push
push
push
xchg
cmpsl
jl
mov
test
jo
decl
jg
stc
std
mov
or
frstor
sbb
out
lretw
jl
jle
push
push
push
push
xchg
dec
pusha
inc
push
add
test
cmp
mov
aas
push
jle
dec
or
add
push
push
icebp
add
pop
mov
adc
les
sbb
out
adc
mov
imul
jle
add
popa
es
xlat
arpl
ret
cmp
jnp
push
rcrb
sar
je
mov
dec
pop
sbb
pop
jle,pt
movsl
lods
test
add
inc
imul
or
aam
call
jle
mov
xchg
push
mov
push
popf
push
xchg
xor
test
shrb
pop
dec
sbb
pop
pushf
sarb
jae
movsb
std
and
subl
test
xchg
lock
movsb
inc
and
inc
lret
or
add
sub
sahf
int
adc
xchg
movsl
jl
add
lods
adc
push
ss
imul
addr16
mov
lds
mov
mov
sahf
pop
pop
xlat
add
and
and
lods
push
xor
lods
mov
cwtl
push
insl
nop
or
xchg
imul
push
sub
xor
stc
and
enter
ret
pop
add
sbbl
or
cmp
dec
outsl
call
ficoml
sbb
imull
nop
or
or
sbb
aaa
fwait
dec
cwtl
jmp
les
sub
movsl
in
rol
inc
xor
jno
dec
invd
add
add
jb
scas
les
add
push
adc
dec
cmp
add
jp
mov
outsb
pop
cmpsl
bnd
add
cmp
repnz
jb
add
add
cmpsb
add
jns
fxch
shr
dec
popf
jno
or
out
loopne
rep
inc
push
xchg
add
xchg
jg
cmpl
dec
xchg
push
and
sbbl
push
sub
loopne
jno
inc
and
mov
ret
push
movsb
xchg
test
rcl
inc
and
pop
sti
rcrb
ret
pop
popa
adc
faddl
sub
fadds
je
mov
leave
bound
mov
jno
sbb
in
jge
ljmp
icebp
and
xor
add
lret
mov
add
insl
adc
sub
dec
je
add
cld
push
icebp
dec
sbb
dec
jne
xchg
sub
bound
push
insb
adc
jno
pushf
adc
or
test
sbb
jg
sbb
in
push
sarl
pop
lods
jns
push
pop
mov
cmp
ja
scas
scas
push
mov
lea
es
cs
dec
jnp
cmp
test
inc
mov
hlt
push
imul
fs
jp
inc
pusha
mov
in
inc
lods
int3
lock
arpl
sbb
adc
cmp
mov
movsl
and
adc
pop
push
pop
arpl
sahf
and
addr16
pop
adc
cmp
nop
test
enter
sub
jb
and
and
jle
inc
push
sbb
insb
inc
push
cmp
mov
nop
fdiv
sub
sbb
enter
mov
push
push
pop
movsl
mov
fs
sahf
cmpsl
stc
mov
adc
jns
cmp
pop
out
sahf
out
insl
xchg
mov
sahf
mov
leave
rcr
out
int
jns
sti
add
cmp
repz
repz
push
pop
imul
cmp
fwait
scas
movsl
les
aaa
mov
mov
push
pop
pop
ret
std
fucom
jae
outsb
add
ret
pop
mov
mov
mov
cld
adc
ss
nop
sti
das
je
fs
iret
adc
cmpb
sub
fmulp
and
jno
add
les
movsb
xchg
subb
xchg
adc
test
pusha
lods
into
xor
shrl
lock
mov
inc
mov
or
push
push
add
out
fcompl
pusha
aaa
cmp
movsb
adc
mov
xchg
test
mov
add
mov
faddl
adc
sbb
cmp
cmp
mov
insb
and
lret
out
push
dec
test
lods
adc
bound
cld
add
push
sbb
aas
repz
les
inc
ja
rorb
adc
loope
cmp
jge
out
mov
cmp
push
cld
lock
movsl
out
add
jp
scas
cmpsb
push
cmc
popf
add
pop
stc
ficoms
test
ja
imul
rol
or
mov
roll
into
push
ret
gs
push
sbb
das
push
mov
adc
lock
or
xor
filds
or
enter
or
mov
adc
xchg
js
mov
and
decl
sub
pop
fdivs
mov
and
stos
and
or
cmp
outsb
faddl
pop
fcomip
push
mov
mov
xor
je
inc
push
or
or
fs
insb
movb
push
aad
xchg
and
inc
leave
adc
pop
sbb
les
repz
pop
lea
jo
add
sbb
push
add
mov
cmp
pop
xchg
test
shlb
adcb
xchg
mov
mov
cmpb
jecxz
cmc
jb
mov
int3
fiadds
sub
push
xchg
xchg
sarb
dec
div
push
add
mov
mov
xor
or
lods
and
sub
cmp
mov
fwait
pop
cmp
push
sub
jo
test
rsqrtps
mov
or
bnd
test
adc
or
mov
xor
sub
push
mov
xor
jle
icebp
scas
jecxz
mov
xor
sbb
enter
dec
xor
das
insb
lcall
jl
dec
lcall
dec
lcall
add
in
jae
add
mov
mov
sbb
mov
cltd
mov
hlt
push
int3
jl
mov
test
add
cmp
orl
lret
cmp
jns
xlat
movsb
inc
xor
add
in
cmp
mov
pusha
mov
mov
sub
or
pushf
js
stos
push
nop
and
in
jbe
test
sbb
ljmp
shlb
sbb
sbb
sbb
nop
stos
shlb
sbb
push
cltd
fs
sbb
in
mov
push
into
push
rorb
adc
sub
or
sbb
sbb
pop
aam
movsb
sub
sub
sbbl
mov
pop
inc
and
jmp
pop
mov
shl
xchg
inc
adcl
pop
gs
pusha
int
mov
mov
xor
cmp
pop
push
ficomps
push
lret
mov
into
pushf
xchg
xchg
loop
push
jle
mov
mov
mov
jb
sbb
aaa
rcrl
jp
xchg
imul
dec
movsl
mov
mov
int3
cmp
sub
sub
jmp
stc
cmp
movsb
aas
push
cmc
mov
movsb
push
inc
cmpsl
mov
mov
mov
cmp
ds
nop
aaa
and
and
mov
daa
dec
pusha
loopne
cmp
in
js
mov
push
inc
push
sbb
adc
sub
push
pusha
pusha
or
cmp
subl
lea
jo
clc
test
popa
inc
xchg
mov
adc
imul
inc
inc
add
jge
dec
pop
xor
inc
mov
cmpb
je
adc
lcall
jmp
push
outsl
inc
sbb
sub
pusha
aaa
je
pop
adc
stos
mov
sbb
ret
and
inc
mov
imul
dec
dec
add
out
adc
push
test
xchg
in
cmp
aas
pop
push
pop
je
or
mov
pop
push
mov
adc
adc
ds
lret
rolb
jecxz
out
add
mov
lcall
jne
or
add
push
daa
sarb
push
imul
jne
add
pop
sbb
lods
sbb
mov
imul
lods
mov
repz
ficompl
jo
mov
push
inc
lret
sbb
and
add
fwait
cmp
push
xchg
push
movsl
enter
mov
sbb
dec
loope
aaa
stos
xchg
mov
in
adc
sbb
rorb
pop
ficoml
and
mov
cmp
inc
push
outsb
shlb
pop
cmp
mov
je
repnz
jl
cmp
imul
loopne
jbe
add
test
or
sbb
mov
nop
push
call
pop
setl
adc
pop
repnz
movsb
adc
adc
scas
adc
leave
and
dec
adc
push
add
push
xchg
fwait
out
push
es
push
mov
int3
push
and
inc
push
aam
rcrb
push
mov
insl
push
sbb
test
cwtl
push
in
jecxz
int
negl
pop
int
fsubrl
nop
push
test
mov
sbb
push
mov
sub
cwtl
nop
mov
sub
mov
mov
and
mov
add
and
shrb
mov
mov
and
inc
sub
sub
cmpb
dec
jae
test
push
push
inc
sbb
adc
sarb
cwtl
push
pop
pop
push
mov
shrb
mov
sbbl
and
aad
and
sub
adc
push
movsb
pushf
xchg
shll
inc
mov
test
and
xor
je
dec
dec
xor
insb
or
xor
pop
pop
xor
fsubr
pop
add
ret
arpl
test
mov
mov
cmp
inc
ds
mov
mov
xor
orb
inc
call
insb
pusha
aad
xor
xor
popf
in
orl
mov
push
loope
cltd
sbb
int3
or
into
pop
pop
adc
out
inc
jecxz
jbe
in
dec
or
inc
pop
in
roll
sub
inc
call
or
xor
add
lods
lahf
jb
and
movb
leave
xor
sub
or
jne
mov
scas
add
jbe
add
aad
out
jge
add
adc
imul
lods
cmpsl
sbb
adc
cs
or
xchg
or
imul
and
inc
mov
test
sti
js
or
icebp
push
mov
xor
jnp
cmp
fbld
adc
mulb
adc
xor
add
adc
adc
out
ret
sbb
mov
mov
mov
les
cmpb
mov
mov
jo
adc
mov
movsl
imul
shrl
mov
pop
sub
adcb
inc
jmp
mov
aam
cmp
push
sbb
jmp
and
mov
pusha
sbb
pushl
or
add
push
sbb
mov
xchg
lcall
xor
mov
add
dec
enter
pop
and
fwait
and
mov
and
and
adc
roll
and
pop
push
imul
add
stos
sub
push
fcmovu
jecxz
pop
es
pop
test
fs
dec
jnp
sub
mov
subb
es
pusha
push
sub
imul
insb
or
enter
mov
sub
movsl
pop
cs
daa
ss
mov
cmpsb
fmuls
sahf
pop
sub
dec
jmp
inc
test
mov
adc
dec
fildl
dec
rcr
ret
jbe
clc
pop
inc
inc
add
popa
xor
mov
sub
das
not
insl
inc
lcall
and
xor
sub
sub
lods
dec
xor
int
push
sub
fs
and
test
dec
dec
jl
pop
and
int
xor
and
and
xor
push
nop
sbb
and
addb
mov
inc
js
and
les
aam
or
pop
rclb
sbb
add
sahf
adc
push
mov
mov
es
ret
mov
add
orl
add
les
in
cmpsb
arpl
jmp
xchg
cmp
sub
test
rcrb
dec
clc
test
jnp
push
test
loope
lds
push
and
loopne
pop
cmp
je
repz
lcall
popf
mov
pop
jecxz
add
pop
sub
push
scas
aam
pop
adcl
inc
mov
sbb
inc
sbb
rclb
pop
jge
cmp
pop
adc
movsb
or
mov
test
data16
push
add
sbb
enter
lods
inc
cmpsb
and
xor
sub
mov
fldcw
clc
pop
inc
andl
call
stc
and
dec
loop
leave
inc
cmp
inc
or
cmp
push
xor
push
rclb
cmp
lock
clc
cmp
fs
xchg
icebp
stos
cmc
js
ss
adc
push
cmp
and
push
mov
sbb
push
test
cmp
mov
andb
popf
ljmp
xor
sbb
loop
or
jbe
dec
cmp
cmc
dec
lods
imul
popf
pop
cmp
sarb
cmp
cmp
jbe
dec
pop
cld
movsl
mov
mov
nop
movsl
aam
popa
jmp
jmp
mov
add
push
lret
aad
push
push
pop
fwait
and
mov
mov
mov
mov
scas
mov
inc
inc
inc
xor
jge
fdiv
add
adcb
cmp
sbb
or
cmp
lods
or
push
movsb
cmp
and
pusha
ljmp
clc
loope
mov
and
push
jbe
or
jb,pt
mov
and
adc
imul
lret
adc
push
sub
test
fs
hlt
pop
inc
add
repnz
cmpsl
xchg
ret
mov
popa
mov
adc
push
sbb
xlat
jbe
mov
sti
pusha
add
xchg
cmp
jne
inc
in
jb
lret
cmpb
les
addb
hlt
subl
push
test
push
or
iret
jne
mov
inc
push
repz
jae
inc
adc
cmp
xor
bound
je
mov
dec
roll
add
jmp
out
mov
or
xchg
rorb
jp
test
movsl
push
in
mov
adc
lods
add
sbb
pop
cwtl
xchg
adcb
xor
test
lret
pop
xchg
mov
fcmovu
jne
lods
xlat
test
adc
aad
dec
or
cmp
jne
leave
imul
mov
sub
in
fcmovnbe
mov
push
andb
in
add
add
push
add
leave
popa
subl
or
sbb
sbb
add
pushl
inc
jbe
clc
and
xchg
pop
push
sbb
sbb
loope
cmpsb
sbb
jno
lock
mov
jmp
xchg
push
into
add
lahf
stos
adc
jmp
xor
rclb
add
cmp
jl
or
lcall
or
je
mov
inc
jmp
movzbl
movb
movsbl
rcr
cmp
xchg
pop
mov
and
mov
or
inc
mov
leave
jne
pop
sub
scas
bound
rclb
adc
jge
sbb
push
push
add
pop
and
pop
push
mov
mov
push
add
cmp
ja
push
loopne
and
push
inc
inc
dec
arpl
rcll
lock
daa
addl
or
mov
insl
xor
add
xor
inc
mov
sbb
mov
mov
mov
enter
movsb
popa
sti
aas
bound
je
dec
and
add
enter
in
push
rcll
pop
insb
jnp
jge
loopne
push
jmp
aaa
xchg
je
cmp
ljmp
decl
jge
adc
pop
push
push
or
insl
pusha
push
adc
push
shll
ds
sub
inc
jl
out
pusha
mov
pop
add
add
and
adc
lret
mov
or
ljmp
jg
xchg
dec
sbb
ficomps
testb
mov
xchg
sub
mov
or
pushf
xchg
adc
ret
cltd
stos
clc
dec
testl
nop
add
test
add
xchg
mov
mov
nop
sbb
inc
or
out
xchg
and
xchg
jl
mov
enter
jb
push
das
mov
stos
out
mov
cmp
lcall
xor
sub
pop
insb
mov
xor
in
mov
jmp
pop
lock
jmp
lret
sub
and
and
or
jg
outsl
int3
repnz
inc
dec
in
mov
jle
xchg
idivl
adc
enter
nop
xor
and
jmp
cmp
and
inc
cmp
xor
inc
or
mov
sub
mov
aam
clc
js
mov
subb
cmp
jb
sbb
mov
inc
repnz
push
lea
cmp
mov
push
xor
jb
adc
jno
and
pop
adc
pop
addr16
mov
jae
imul
add
push
push
xor
sub
cmp
xorb
dec
pusha
inc
ljmp
push
inc
dec
jns
andl
rclb
mov
daa
dec
mov
mov
add
scas
bndldx
or
in
fwait
push
mov
add
jns
fadds
adc
adc
mov
cmpsl
adc
rcrb
les
clc
adc
js
add
addb
int
cwtl
xor
icebp
jbe
subl
mov
bound
mov
push
xor
xor
xchg
pop
into
jge
pusha
fsts
add
test
or
adc
xor
pop
daa
sarb
insb
out
add
add
cmp
push
sbb
rcrl
enter
push
push
push
xchg
icebp
shrd
pop
xor
or
fwait
roll
or
pop
cltd
mov
jecxz
xor
sub
fs
iret
dec
ss
mov
mov
xchg
or
mov
add
loop
mov
sbb
mov
jb
cmc
adc
sbb
xchg
sub
js
repz
adc
add
add
or
add
addb
jmp
mov
repnz
push
or
shll
xchg
test
pop
cs
fmuls
std
mov
hlt
push
xchg
rorl
loopne
add
or
idiv
movsl
jnp
xchg
mov
imul
xchg
add
xbegin
lods
aam
lea
mov
ret
sbb
and
pop
xchg
add
and
subb
sbb
add
and
sub
dec
mov
cwtl
test
adc
jnp
add
cmp
or
sbb
cmp
ret
or
imul
or
add
jmp
loop
push
adc
add
test
adc
mov
pop
stos
xchg
xor
mov
pop
div
mov
push
dec
pop
cmp
sub
mov
test
push
sub
cltd
xor
stos
push
arpl
cmp
je
loopne
sbb
push
les
cmp
pop
aam
les
sub
cmpsb
js
sub
shl
or
fs
les
pop
das
inc
hlt
in
or
push
add
clc
test
imul
shr
inc
push
jo
jecxz
xchg
sbb
add
ret
pop
subl
cwtl
or
sbb
pushf
xchg
arpl
cli
in
subl
dec
push
xor
mov
call
cmp
jl
scas
lea
jb
sarb
inc
test
hlt
add
sub
inc
fcmovb
pop
adc
insl
sbb
cmpsb
fcoms
mov
mov
dec
xchg
cmp
mov
xor
insb
adcl
pop
enter
rolb
jb
push
enter
outsl
inc
mov
xor
xor
addb
cmp
dec
sbb
push
lea
cmp
mov
adc
in
in
pop
ja
jnp
add
xchg
add
cmp
daa
sub
aam
jmp
xor
scas
push
rol
or
dec
xchg
call
daa
push
mov
adc
addl
sahf
xchg
mov
xor
pusha
xor
lods
nop
xchg
or
push
dec
nop
clc
inc
das
je
jge
out
mov
mov
xor
imul
xchg
or
jbe
das
mov
push
sahf
sub
and
adc
dec
in
imul
es
fdivl
xchg
inc
movsl
jno
pop
mulb
and
sbb
mov
push
or
mov
dec
and
mov
fs
mov
or
cmp
push
lea
sbbb
push
add
cmp
pusha
addr16
movsl
push
loopne
mov
fmuls
out
xchg
xchg
pop
clc
push
sbbl
mov
imul
add
das
in
cmp
push
subl
add
ja
mov
dec
ljmp
ds
in
adc
cld
xlat
or
dec
inc
add
inc
or
inc
aaa
inc
das
test
push
popa
sub
cli
add
pop
add
fiaddl
stos
icebp
push
outsl
inc
add
add
jmp
fiaddl
mov
xchg
repz
pusha
push
push
push
cmp
aaa
xor
add
mov
and
jne
fldl
push
test
notb
data16
cmp
insl
adc
adc
jne
daa
bnd
adc
out
jns
hlt
jne
or
jne
or
adc
xchg
push
mov
nop
push
xor
std
dec
jb
pusha
js
pop
mov
and
aad
pop
or
push
fists
inc
sbb
add
aas
pop
sbb
mov
dec
gs
addb
xchg
aad
jle
push
jl
mov
cli
pop
push
pop
je
pop
hlt
lea
sbb
lea
pusha
mov
inc
imul
nop
xchg
data16
movsb
xchg
cs
ret
and
xor
sub
sub
push
fsubrl
xchg
iret
dec
into
or
stc
int3
rcll
push
loope
push
std
jae
fstl
orb
cmp
fdivrl
adc
call
push
int
shrb
fstl
mov
loopne
fcomp
loopne
rclb
popa
adc
adc
mov
add
pop
pop
push
mov
jl
cmp
enter
mov
mov
push
ss
jl
int3
insb
cmp
aas
pusha
pop
inc
loopne
or
and
and
jecxz
loopne
push
xchg
insl
mov
imul
imul
orl
pop
dec
lcall
int
xchg
test
cmp
mov
fs
jne
mov
mov
lods
and
fistpll
fmul
fs
sbb
ficoml
mov
je
push
pop
add
pusha
jmp
mov
push
fs
pop
bound
adc
jg
pushw
push
shlb
add
add
fisubrs
jbe
call
or
aam
push
jmp
ror
inc
adcl
js
jns
sub
js
test
mov
inc
jb
add
flds
stos
dec
pop
inc
int3
add
adc
gs
push
repnz
and
mov
xchg
inc
xlat
aaa
push
mull
pop
push
or
shrb
sub
xchg
adc
fucomp
das
rol
xchg
xor
insb
inc
popa
cltd
pushl
push
and
xchg
sbb
sbb
call
or
das
cmp
sbb
dec
mov
or
sarb
mov
or
sti
jnp
sub
dec
fisubrl
hlt
imul
idivl
inc
sub
clc
add
xchg
mov
dec
lods
add
push
cmp
cmp
in
and
jmp
sbb
dec
shlb
jle
pop
push
xor
xorl
jmp
and
xor
fisttpl
das
pop
cmp
sbb
xchg
push
cmp
add
push
dec
and
repz
cmc
xor
in
sbb
cmp
and
sbb
and
and
pop
inc
adc
push
arpl
or
fs
adc
push
cltd
xlat
leave
mov
pop
pop
xor
push
dec
push
cltd
nop
sbb
xchg
or
push
adc
mov
sbb
push
mov
or
test
jno
test
pusha
sahf
mov
bound
inc
or
adc
xor
and
outsl
add
in
sub
out
mov
cmp
sbbb
popa
xor
jae
cmpsb
mov
jae
das
sti
and
cmp
mov
cmovbe
push
enter
pop
int
mov
add
mov
icebp
sbb
xor
dec
push
push
lock
jmp
xchg
jecxz
inc
xchg
imul
andb
mov
jo
jo
push
adc
or
pop
adc
cmp
scas
movsb
fbstp
and
js
jg
dec
das
jae
je
push
mov
pop
lea
ficoms
jnp
aam
inc
sbb
fsubrl
sbb
mov
pop
insl
mov
adc
stos
lock
and
adc
adc
lods
test
or
add
mov
aas
dec
rorb
or
pop
pop
push
cmpsb
out
or
loopne
or
adc
add
jmp
push
hlt
xor
jnp
push
les
dec
push
pushf
add
imul
pop
ret
xchg
scas
mov
add
jne
jne
in
inc
dec
sub
add
xchg
sub
daa
stc
out
js
loopne
mov
mov
xor
aam
jne
sbb
adc
lea
jge
jecxz
sbbl
mov
popa
push
xchg
mov
paddusb
inc
mov
pop
inc
std
xor
push
shrl
and
es
scas
mov
mov
loopne
cmpl
mov
ret
mov
ficoml
adc
and
pop
and
jmp
pop
pcmpeqd
test
imul
cmpb
jno
jno
js
in
leave
fsubl
sbb
aaa
into
mov
xchg
test
push
inc
add
movsl
add
aaa
adc
add
adc
pop
and
sbb
cmp
add
push
jne
pop
jecxz
mov
inc
cwtl
pop
sti
ja
mov
and
jne
mov
rorb
ljmp
xor
or
mov
xchg
adc
inc
add
push
xor
bound
xor
xor
or
into
in
adc
loopne
dec
ret
daa
add
add
fdiv
push
mov
movsb
shll
fisttpl
es
popa
filds
dec
xchg
mov
rolb
add
xchg
add
js
cld
cmp
pop
push
jmp
push
pop
in
and
addb
ret
mov
in
les
mov
dec
pop
sbb
lods
and
sub
pop
push
add
orb
inc
jecxz
inc
or
mov
arpl
add
sbb
push
sub
stos
loopne
cmp
dec
bndstx
mov
inc
mov
jmp
out
add
xor
sub
adc
fimull
push
mov
inc
cmp
dec
cmpb
fdivrl
mov
lcall
inc
bound
or
and
divl
or
push
fildll
ficompl
test
aas
sub
leave
cmp
ljmp
jge
adc
add
movsb
incb
push
mov
push
lds
xor
add
or
sbb
addr16
or
push
movsl
or
jecxz
push
dec
xor
das
test
in
add
mov
dec
add
xor
notl
aad
pop
add
loopne
add
sub
hlt
test
shll
or
or
in
or
aas
mul
pop
add
push
add
lods
lea
out
mov
inc
jo
mov
push
lret
addr16
sub
and
mov
xor
push
je
movsl
ja
or
xchg
and
or
mov
xor
cmp
je
or
jbe
ret
in
rolb
sbb
and
clc
sub
lods
pop
sub
cmpb
ret
lock
jae
movsbl
outsb
clc
cmp
ja
inc
mov
mov
dec
rcl
or
sbb
bswap
push
das
add
lea
and
jmp
call
add
or
jecxz
or
add
inc
sbb
pop
incl
cmpl
xor
pop
test
cltd
and
add
sar
add
dec
test
clc
xor
mov
pop
ss
cmp
jecxz
or
inc
jne
enter
adc
mov
mov
dec
jne
mov
ss
xor
lret
test
pop
scas
and
push
dec
icebp
insl
add
cmpsl
shrb
sar
jp,pn
jge
push
shlb
ret
or
inc
bound
inc
adc
sbbl
adcb
jl
movsl
add
jmp
scas
mov
or
cmp
pop
add
add
push
rorl
mov
js
in
jmp
out
add
fucomi
or
arpl
rolb
shl
dec
sahf
xchg
out
mov
cld
xor
push
ret
or
jecxz
adc
pop
scas
and
cltd
add
dec
xchg
mov
cs
dec
pop
xchg
cmp
xor
adc
mov
fisubrl
or
insl
fcomps
movsb
sbb
cld
cmc
pop
in
push
xor
push
jnp
lods
mov
or
pop
sbb
fwait
xchg
mov
xchg
jnp
xchg
or
or
inc
xchg
and
fisttpl
hlt
add
nop
je
add
shrl
mov
mov
push
clc
inc
sub
lahf
xor
add
cmp
or
xor
ds
lahf
cmc
out
fcomps
pop
test
xchg
mov
mov
add
xchg
inc
mov
lock
add
push
push
jge
es
add
push
and
test
pusha
and
push
stos
xor
imul
call
sbb
cmp
cmpl
shlb
int3
pop
ss
jns
cmp
sub
test
int3
inc
inc
stos
shll
lods
adc
int3
xchg
pop
aaa
lea
dec
and
inc
jle
int
bound
cmp
lea
loope
xchg
and
push
and
out
sbb
movsb
je
push
pushl
or
mov
dec
aaa
test
pop
cmp
add
add
fbstp
movsb
mov
in
or
movsb
inc
cmp
pusha
js
cmp
jmp
dec
xchg
mov
mov
push
and
dec
sub
clc
adc
adc
das
push
shlb
lcall
add
and
cmp
jecxz
insb
popf
xchg
rcl
mov
lcall
aam
out
xchg
fcomps
pop
push
das
daa
jno
push
xchg
lret
or
movsl
sbb
push
sbb
mov
and
adc
aam
enter
imul
in
xor
push
push
xor
enter
sbb
mov
mov
xorb
push
cmp
cmp
and
lds
mov
nop
sahf
and
push
sti
push
cmp
pop
mov
cmp
arpl
add
int3
int3
add
jno
bound
mov
sbb
jno
cmp
sahf
sbb
jecxz
sti
push
pop
cmp
sarl
fldenv
repz
je
dec
das
or
fdivr
adc
rorl
inc
out
das
imull
das
pop
pop
jno
jge
cmp
cmp
scas
sub
xchg
pop
enter
add
xchg
test
sbb
or
sub
inc
imul
lock
mov
mov
rclb
add
xchg
dec
aam
leave
add
add
out
add
cmc
mov
clc
jl
stos
mov
imul
jge
sub
push
in
jp
sbb
sbb
je
cmp
daa
movsbl
es
push
call
ret
mov
mov
test
add
mov
test
jo
dec
out
test
sbb
sbb
movb
ret
and
adc
pusha
xor
add
jnp
rorb
sbb
nop
or
add
dec
mov
push
hlt
or
iret
sub
jmp
mov
sbb
inc
add
pop
pop
and
outsb
hlt
loope
iret
adc
mov
fcom
dec
sbb
les
subb
addr16
xor
add
insl
std
lock
in
out
sbbl
in
cmpsb
dec
push
es
add
call
dec
and
sub
add
out
stos
or
inc
inc
mov
faddp
jnp
push
pop
fwait
dec
add
imul
xor
shr
insl
icebp
pushl
movswl
test
mov
push
jne
clc
pop
mov
and
fiadds
sub
movsl
xorl
mov
pop
mov
pop
mov
inc
or
xchg
add
push
hlt
mov
sbb
mov
mov
clc
add
jg
pop
xor
decl
mov
mov
inc
mov
mov
cmp
push
or
dec
clc
addl
int
mov
cltd
sarb
sub
push
icebp
or
orb
out
lcall
add
insl
xor
mov
nop
and
and
add
cld
push
leave
push
xor
mov
clc
cmp
jne
pop
mov
mov
pop
cmp
into
inc
dec
and
adc
push
cmp
call
ds
push
sahf
pop
add
enter
xor
push
shlb
mov
xchg
add
test
lret
in
sbb
push
in
enter
in
into
mov
push
int
hlt
test
les
dec
and
es
pop
adc
inc
mov
mov
cmp
push
enter
fldcw
daa
fbstp
cmpsb
lret
mov
or
add
mov
popa
and
and
or
xor
mov
xor
test
loop
dec
mov
pop
lahf
popf
inc
xor
and
adc
pop
orl
add
and
and
push
daa
or
sbb
push
sub
test
hlt
test
mov
mov
mov
mov
clc
jns
add
rclb
xchg
adc
lds
jb
cwtl
mov
or
dec
cld
stc
sub
ss
lea
cmp
jbe
add
sbb
cmp
jbe
mov
sbb
sbb
cli
enter
sbb
repnz
into
aas
insl
mov
insb
leave
or
cmp
int3
push
adc
divb
inc
dec
xor
xchg
mov
pop
enter
or
cmpsb
push
cmp
or
xor
daa
push
test
stc
push
incl
push
push
push
cmp
cwtl
inc
push
jnp
and
insl
test
jp
add
mov
shr
test
pop
ret
and
nop
arpl
adc
push
mov
in
lods
test
sub
stc
pop
jge
lahf
pop
sub
push
add
call
push
lock
cmpsl
sti
lea
xchg
mov
loop
push
push
xchg
or
sub
pushf
and
je
arpl
cmp
lods
mov
inc
push
mov
imul
jge
dec
push
dec
in
mov
into
push
and
int
and
loope
test
sbb
sbb
cmp
loopne
popf
aas
jb
movsl
addr16
inc
fwait
sub
add
repnz
adc
mov
dec
cltd
jge
mov
adc
shlb
fdivrl
shlb
loope
pop
shll
rorb
jp
and
mov
and
add
lods
jle,pt
cmpl
int3
mov
cmp
mov
scas
jb
out
test
push
adc
push
inc
enter
cld
or
add
out
and
sbb
jle
int3
es
jne
xlat
and
and
add
jno
rolb
push
mov
push
xor
je
nop
mov
mov
sbb
cmp
rcrl
fisttpl
push
loopne
mov
dec
jp
xor
inc
imul
ret
aas
int
cmpl
pushf
ret
call
test
mov
stos
pop
inc
fisttpll
fwait
int
scas
add
push
addb
and
rorb
sbb
ljmp
shlb
dec
pop
je
out
pop
fs
out
fdivl
mov
je
imul
aad
mov
outsl
xor
push
cwtl
test
mov
lret
or
imul
pop
adc
push
pusha
ds
push
nop
inc
out
mov
aas
cld
adc
dec
fwait
nop
or
pop
fidivrl
aaa
aas
es
rolb
sarb
cmp
mov
nop
dec
push
jo
fwait
jecxz
aas
add
jne
ret
cmp
adc
inc
add
sbb
push
std
leave
adc
or
sub
add
and
dec
sub
or
push
pop
je
jo
inc
sbb
test
mov
mov
adc
and
aam
insl
dec
xor
popf
sbb
or
or
push
ret
cmp
add
into
adc
nop
lcall
push
mov
and
pop
fldenv
out
int3
or
rolb
les
jmp
push
xchg
gs
fstl
lock
inc
incl
fwait
rolb
loopne
push
andl
xor
aad
dec
jmp
ret
xchg
pop
xor
jmp
push
inc
mov
adc
sbb
mov
or
inc
xor
push
jmp
push
cmp
pop
aad
add
inc
jne
xchg
push
push
lahf
imul
xchg
mov
push
pushl
addr16
rorb
add
sahf
add
pop
cmp
jbe
sub
sub
cmp
sbb
fcompl
sbb
xchg
rcrb
adc
pusha
mov
mov
lcall
shrb
data16
and
clc
bound
xor
push
xchg
xlat
mov
jne
mov
mov
gs
testb
pop
pop
mov
leave
or
inc
mov
shll
mov
mov
call
cmp
lea
sarb
lods
pop
add
push
adc
jnp
xor
push
call
cmp
sbb
xchg
pop
xchg
sbb
sahf
jmp
add
ds
ljmp
imulb
ret
movsb
aam
jb
xor
stos
add
ja
loopne
dec
out
shll
inc
add
adc
sbb
push
icebp
push
adc
inc
nop
lock
or
push
push
xchg
sub
aaa
mov
adc
or
pop
je
mov
adc
add
add
push
cmp
dec
and
lock
addr16
mov
sti
jb
and
xor
add
sub
add
je
jl
pop
and
pop
add
mov
mov
xor
xor
xchg
xchg
and
insb
mov
outsl
push
jae
lret
inc
shlb
sbb
insb
pop
jmp
mulb
lds
sub
jecxz
outsb
mov
adc
movsl
pop
sub
sahf
add
mov
push
sbb
cld
mov
loope
scas
pop
jne
inc
inc
xor
sahf
test
arpl
add
sbb
add
and
das
fs
movaps
test
or
sub
push
cs
or
pop
push
or
pop
pop
cltd
inc
data16
movsb
mov
dec
and
rolb
xor
cmp
jmp
jo
xchg
jae
jns
bnd
add
add
or
and
inc
adc
mov
or
data16
mov
sbb
mov
xchg
mov
pop
mov
add
sbb
je
mov
cmp
dec
icebp
jne
aad
test
insl
push
push
mov
ss
mov
xchg
sbb
lea
sub
mov
lcall
cli
add
imul
or
cwtl
int3
notl
test
loopne
inc
das
mov
and
frstor
sub
stc
sub
or
mov
jae
xchg
push
or
insb
rcrl
jbe
popf
rclb
pop
jecxz
ret
adc
jb
mov
mov
fcompl
or
lea
xchg
sti
sbb
inc
ret
sub
or
dec
sti
lock
mov
in
ret
xor
xchg
jmp
xchg
xor
pop
sbb
pop
dec
jp
xor
in
push
push
sahf
pop
cwtl
xchg
jecxz
lret
jp
pop
jle
jge
and
push
inc
popf
rorb
lahf
inc
and
inc
lock
pop
cmp
or
inc
loopne
pop
test
and
mov
xorl
int3
add
mov
ja
pushl
add
mov
iret
jle
adc
push
push
mov
add
sub
cmpsb
inc
fcoml
and
and
outsl
cmp
into
add
sub
gs
add
add
cmp
fs
sub
cwtl
add
jbe
xor
lea
iret
mov
dec
fdivp
sbb
xchg
scas
or
pop
lods
or
push
push
xor
jmp
add
or
pop
and
xchg
sbb
test
sbb
push
inc
clc
sub
or
mov
out
imul
add
ret
lcall
and
pop
push
sbb
xchg
lea
or
insl
ret
cltd
mov
push
pop
push
inc
adc
add
stc
mov
fisttps
mov
scas
repnz
cmc
pop
mov
jmp
add
mov
mov
fldt
filds
or
mov
cmp
add
cmp
je
cmp
jne
mov
sbb
add
sti
dec
and
pop
dec
lea
scas
mov
pop
dec
xor
fbld
or
cmpsb
push
jmp
testb
je
testl
fs
sbb
add
fdivrp
cmp
jbe
into
lea
mov
pop
pop
inc
cmp
je
sub
inc
jmp
inc
and
dec
je
xchg
dec
xor
pop
mov
push
add
ljmp
pop
or
push
clc
mov
rclb
jo
cmp
ljmp
sub
fs
adc
into
ret
cmp
lcall
xor
ficoms
inc
push
ja
sub
jne
pop
cmp
jo
dec
push
outsb
hlt
cmpb
add
mov
cld
xor
je
ficoms
xchg
aam
mov
mov
mov
enter
xchg
ss
cmc
pop
insl
dec
push
lock
add
inc
cld
insb
xchg
adc
rclb
jns
cmp
pop
xchg
xlat
movsb
or
arpl
and
xchg
stos
mov
in
mov
call
mov
fsubs
inc
fldl
pusha
mov
add
jae
insl
lock
inc
loope
sti
lahf
pop
shl
add
jmp
pushf
aas
insb
sti
and
test
repnz
in
aaa
push
cmp
js
fs
jne
xor
fwait
push
cmp
adc
incl
or
outsb
pop
jae
mov
jmp
jno
mov
dec
shlb
cwtl
jo
add
jne
pop
push
add
and
incl
inc
adcl
or
int3
cmp
rolb
add
and
cmp
out
out
pop
xor
and
es
sub
mov
jbe
sub
and
pop
or
jl
or
adc
shrb
stos
push
inc
test
jbe
loopne
stos
das
aam
cmp
jbe
and
pop
arpl
fcoml
adc
je
test
jne
sub
inc
adc
std
sub
jb
adc
adc
lods
mov
xor
adc
movb
inc
fcmovnb
mov
sub
inc
xor
xchg
mov
adc
and
add
std
push
mov
inc
and
push
or
stos
mov
adc
mov
add
daa
cmova
and
dec
inc
adc
cs
push
lcall
mov
push
push
lahf
pusha
add
push
mov
int3
lock
adc
mov
adc
mov
movsl
pop
aam
mov
push
je
mov
mov
push
inc
pop
out
push
add
insb
ret
lea
sub
scas
lret
jne
lods
mov
cmc
mov
cmp
push
mov
inc
sahf
jmp
xchg
imul
mov
inc
inc
xchg
enter
adc
out
jg,pn
push
cld
xchg
daa
cmp
addl
push
jbe
push
cmovs
cmp
int
call
out
sahf
int
jp
push
clc
into
inc
sbb
cmp
mov
pop
and
cmp
out
adc
movsb
push
push
popf
mov
pop
xlat
out
inc
mov
jns
pop
dec
pop
dec
mov
ljmp
sbb
insl
xor
fwait
xchg
cmp
or
push
andl
inc
sbb
or
cmp
fists
cltd
ss
push
aaa
jp
inc
adc
out
orb
test
jb
in
pop
inc
sbb
rol
cli
sub
push
push
movl
push
adc
dec
addl
std
or
xor
push
lahf
push
push
sbb
pop
inc
sbb
add
push
and
shl
test
enter
mov
mov
inc
xchg
mov
push
lods
test
add
mov
into
loope
shlb
lds
cwtl
mov
pop
add
int
or
data16
je
mov
mov
mov
mov
add
cmp
outsb
sarb
call
push
pop
push
lea
das
sub
mov
push
sahf
imul
pop
cmovns
dec
lea
pusha
rcrb
mov
pop
sub
push
mov
pop
push
inc
fdiv
jge
enter
fbld
testb
jbe
mov
mov
ja
gs
add
inc
inc
fwait
nop
mulb
or
repnz
pop
pop
movsb
inc
push
pop
nop
push
sub
ret
cmp
mov
push
or
cmc
sub
out
mov
push
movsl
xchg
inc
test
dec
push
cltd
mov
mov
push
ret
idiv
pop
je
test
dec
push
inc
inc
and
xor
push
fs
mov
or
shll
adc
mov
xor
xor
cmp
xor
lea
incl
sub
push
cmp
dec
or
mov
and
mov
incb
inc
push
lea
sbb
mov
stc
push
sbb
mov
lock
adc
mov
push
loop
or
add
sahf
mov
mov
push
aaa
les
movsl
pop
dec
mov
clc
push
add
add
pop
or
xchg
add
push
lret
push
xorb
mov
andl
aam
sbb
sub
jp
ret
or
sti
pusha
jb
into
or
pop
cmp
lea
adc
rcr
and
xchg
adcl
mull
movsb
mov
mov
rcl
adc
push
and
push
mov
orb
add
or
push
ljmp
inc
clc
mov
stos
push
jmp
enter
jbe
mov
push
movb
push
popf
test
push
cmpsl
inc
pop
xchg
addl
xchg
add
xchg
xchg
cmp
sbb
xchg
or
out
lea
or
jg
inc
loope
fnstsw
pusha
stos
adc
and
or
pop
xchg
cmp
push
xor
push
lea
fs
or
insl
and
cmp
movb
mov
cs
int3
insl
gs
jbe
adc
sbb
push
pop
lret
cmp
pop
clc
add
sub
mov
adc
mov
jmp
adc
sbb
ds
cwtl
cmpl
dec
push
in
cmp
ficomps
push
lret
test
and
jne
pusha
sub
add
aad
lods
ret
jge
adc
add
movl
add
js
push
cmpl
pusha
fidivl
cmp
xchg
in
andl
testl
testl
sub
rcr
fisubl
xchg
rolb
or
jmp
bound
and
jnp
fstps
cmp
mov
push
sbb
pop
cld
inc
mov
adc
jne
fstps
mov
jne
lock
setle
insl
inc
jp
aaa
adc
adc
iret
push
vmptrld
xchg
orl
adcb
adc
push
scas
popf
ss
adc
mov
test
dec
movb
pop
sbb
adc
mov
ret
jbe
cmc
xchg
jne
mov
icebp
and
lods
fwait
or
loopne
fsubs
mov
dec
xlat
ret
in
cld
out
push
aas
je
cmp
push
pop
jne
les
cwtl
dec
aam
cmpsl
jne
push
fcomi
imul
or
pop
jne
pop
call
sbb
add
xorb
insl
fstpt
jle
xchg
jne
jmp
xor
in
sbb
sub
into
mov
mov
aaa
push
adc
addl
mov
mov
pop
lea
fldl
add
je
mov
ficoms
in
sub
popf
jbe
inc
mov
push
sti
jno
mov
repz
jmp
mov
cmp
pusha
mov
jae
scas
jg
jp
push
sub
sub
add
leave
daa
jmp
xchg
add
xlat
xchg
mov
sub
decb
adc
cmpl
andb
daa
xor
out
add
js
mov
sbb
imul
add
add
inc
rcrb
or
fadds
ja
or
ret
push
add
push
push
ret
lahf
sti
inc
pop
or
push
mov
push
cmp
std
push
mov
lcall
clc
or
push
movsl
aas
add
or
inc
mov
mov
inc
sbb
sub
and
sahf
xchg
xlat
push
push
push
push
lret
in
mov
test
xchg
pusha
pusha
or
sub
adc
inc
and
xor
orps
ret
addb
les
xchg
insb
sbb
in
jbe
mov
dec
and
fbstp
daa
xchg
sarl
xchg
pop
rolb
sahf
sbb
push
adc
push
outsl
loope
dec
rcll
lret
mov
movsl
and
insb
sbb
adc
mov
stos
push
push
sbb
or
inc
adc
pusha
sub
sbb
pop
sub
sub
outsb
xor
test
fdivrs
adc
or
or
add
daa
cmp
jecxz
jnp
fdivl
leave
pop
xchg
push
es
pop
xorl
ljmp
sti
xor
push
loop
jmp
mov
jnp
dec
aad
aas
jp
push
pop
jmp
clc
adc
pushf
mov
je
into
or
or
and
add
push
pop
ret
xchg
xchg
push
or
lret
and
push
or
pop
push
pop
loope
je
lock
lcall
fstps
sbb
xor
sti
sbb
dec
es
sti
dec
jnp
sahf
test
dec
pop
push
mov
mov
or
sub
mov
fs
mov
scas
ret
push
nop
cmpsl
test
cmpsl
and
cmp
cmp
test
cmp
je
add
dec
cmp
mov
pushf
clc
fildll
je
mov
cmp
jne
ss
cltd
cmp
xchg
adc
loopne
add
adc
or
mov
adc
sub
sbb
in
push
test
nop
mov
cmp
and
sbb
int3
loope
lods
or
inc
mov
add
pop
icebp
pop
mov
add
lea
std
mov
push
adc
cmp
sbb
inc
inc
mov
jbe
push
adc
ds
jo
loope
jae
mov
xchg
push
push
lret
lods
add
in
fcomi
inc
and
lock
cmp
jne
or
or
push
ror
push
subb
pop
jbe
jo
dec
rorl
hlt
adc
scas
xor
lcall
test
jo
stc
mov
daa
xchg
xchg
mov
sub
js
inc
pop
lods
or
adcl
inc
sahf
scas
or
incl
cmp
inc
push
addl
push
icebp
and
and
push
mov
jmp
sarl
mov
int3
mov
mov
les
push
xlat
mov
cmpsl
sbbl
iret
inc
shl
pusha
je
divb
ds
outsl
mov
test
sbb
or
push
inc
add
rcl
sbb
adc
mov
jmp
xlat
sbbl
inc
cmp
fwait
sti
xchg
rorl
inc
hlt
mov
lock
or
pop
cli
hlt
and
push
cmp
mov
call
add
add
mov
cmp
jmp
hlt
movsb
pop
xor
add
push
pop
jb
test
das
les
iret
cmpsb
sbb
inc
mov
jecxz
divb
call
icebp
unpcklps
outsl
mov
and
mov
push
orb
jl
sub
clc
lock
popa
lea
jo
add
cmpsl
mov
jmp
pop
andl
int
and
push
lea
xchg
addr16
or
mov
push
push
rclb
hlt
or
test
and
xor
loope
je
pop
xchg
jo
add
test
adc
mov
nop
mov
inc
dec
mov
xchg
xchg
push
cmpb
loopne
gs
jns
out
add
mov
lock
and
and
mov
or
adc
movsl
movsw
sub
push
push
jecxz
xchg
and
and
mov
push
lds
sub
fsub
mov
inc
push
push
adc
pop
sbb
add
stos
adc
xor
push
test
pusha
es
mov
je
adc
bound
adc
dec
push
popa
mov
or
xor
call
clc
jmp
sub
push
push
jl
adc
push
bound
push
loopne
and
add
dec
push
fucom
addl
cmpsb
dec
rorl
jle
imul
jmp
roll
mov
and
aam
sub
push
dec
push
push
jo
mov
sbb
dec
push
mov
jne
jns
lock
xchg
xor
xor
xor
xor
sbb
or
jg
jbe
lods
mov
ja
jmp
mov
flds
xchg
cmp
cmpl
or
imul
and
adc
jl
out
stc
out
inc
shlb
adc
mov
jno
lret
stos
fmuls
fsubrl
and
loopne
inc
loop
push
shlb
ficomps
and
mov
push
pop
cmp
aas
push
jnp
dec
testl
sbb
nop
nop
rcll
xor
pushf
movb
lds
scas
pop
push
mov
adc
fs
js
je
mov
xchg
jo
out
inc
mov
decl
cmp
jl
jmp
pop
je
mov
inc
clc
sbb
add
sbb
or
lds
mov
xchg
mov
push
cmp
fnstcw
lods
cltd
sbb
sbb
xchg
aam
mov
sbbl
scas
fwait
sbb
xchg
pop
insb
xor
lea
mov
pop
in
push
push
inc
push
sbb
sub
cmp
rolb
dec
push
rep
ret
xor
xor
lock
xchg
add
jmp
clc
xchg
rclb
out
xchg
lods
dec
clc
inc
push
cmc
ds
adc
xchg
mov
and
inc
out
cs
test
push
push
xor
nop
jbe
iret
mov
or
jmp
push
incl
call
xchg
mov
or
add
pusha
dec
daa
lds
in
pop
int3
or
aas
ret
rclb
aas
cs
xchg
pop
sbb
mov
sbb
push
loopne
hlt
sub
mov
fdivrs
mov
add
adc
mov
pop
xor
gs
imul
mov
mov
hlt
or
inc
inc
fiaddl
mov
inc
add
es
cltd
and
in
sub
mov
or
mov
mov
jae
sbb
popa
pop
leave
hlt
xlat
cmp
pop
mov
cmp
icebp
adc
or
cs
fdivs
cmp
inc
mov
insl
pop
mov
jnp
jmp
push
adc
and
fmuls
add
cmp
repnz
sbb
xchg
fcom
mov
xor
mov
push
cwtl
jle
inc
add
and
pushf
inc
or
nop
lock
ds
add
push
push
push
add
rcl
add
xchg
mov
xchg
fstpt
lahf
add
push
jecxz
ret
pushl
push
fldenv
adc
sub
testl
or
in
rolb
or
mov
je
cmp
xchg
js
ljmp
add
sub
rcr
dec
sbb
data16
sub
sub
ret
pop
iret
stos
mov
mov
dec
popf
push
faddl
xor
movsl
mov
add
dec
loopne
and
or
bound
movsb
jnp
cmp
add
inc
sub
or
clc
call
push
and
dec
es
cmp
or
mov
xor
scas
sub
out
jne
ja
repnz
sub
or
jo
mov
cld
sbb
jmp
or
push
roll
stos
fistpl
cmpsb
add
ret
or
cmc
ret
lret
push
sub
push
loopne
sbb
jns
loopne
adc
add
xchg
xorb
push
xlat
data16
cltd
xchg
nopl
adc
into
push
test
subl
or
outsl
iret
or
pusha
cmp
adc
pop
add
ss
arpl
cmp
jns
xlat
or
popa
adc
pop
mov
dec
sahf
dec
in
push
incl
pushf
testb
adc
jbe
push
and
xlat
mov
push
pop
sbb
inc
lcall
scas
adc
adc
pop
add
push
mov
push
push
cld
rcrl
pop
inc
sub
adc
inc
adc
cmpsb
jge
pop
ret
add
xchg
bound
add
dec
pop
cmp
adc
dec
sbb
sbb
mov
add
cmp
and
mov
sahf
adc
lret
inc
push
pop
sub
les
das
inc
sbb
xor
sahf
xchg
mov
test
arpl
add
xlat
or
mov
add
jo
in
cltd
test
movsb
aaa
sbb
pop
clc
loopnew
out
lea
jbe
out
xchg
jne
iret
pop
or
pop
push
mov
or
or
ss
push
sbb
mov
or
scas
mov
or
or
mov
adc
aam
add
xorb
or
outsb
daa
and
mov
loop
jne
out
outsl
xchg
nop
xlat
aam
inc
inc
fmul
xchg
mov
push
lcall
mov
mov
pop
sbb
or
lret
rcrl
add
push
roll
jge
insl
jecxz
or
dec
das
fldcw
nop
movl
aam
imul
xchg
test
and
iret
pop
movl
and
or
dec
xchg
adc
xor
cmp
stos
xchg
dec
push
sahf
or
frstor
imul
test
xor
push
cmp
jp
insb
push
xor
mov
inc
xchg
faddp
mov
cs
fisubl
xor
mov
push
inc
mov
push
mov
or
mov
jp
adc
push
and
xchg
or
sub
repnz
aas
push
shl
cs
cli
sahf
outsb
mov
test
push
add
pushl
inc
cli
sub
mov
pusha
jnp
inc
or
mov
fcoms
xchg
mov
subl
jbe
sahf
push
cmp
jbe
push
push
enter
in
push
sub
dec
aam
int
ja
mov
and
push
adc
sbb
inc
jp
aaa
push
sahf
xchg
je
sub
push
rclb
mov
sbb
add
mov
dec
sahf
inc
ret
outsb
insb
pushf
push
jl
mov
xor
inc
aaa
sbb
mov
subl
adc
push
push
jecxz
push
jge
adc
mov
add
xchg
scas
test
pop
mov
jo
mov
repz
or
lea
push
cli
loopne
mov
test
mov
push
bound
test
add
pop
cmpl
push
adc
or
push
mov
sbb
mov
and
or
sbb
addb
adc
ss
mov
mov
out
frstor
or
pushf
push
xchg
pushf
mov
sub
ljmp
add
dec
lods
pop
mov
inc
xor
shlb
faddl
push
iret
push
push
or
push
xor
sub
bswap
enter
cmp
xor
cltd
jmp
sbb
cwtl
xchg
xor
movsl
push
faddl
shl
push
sub
mov
adcb
jmp
dec
sub
dec
jg
loop
dec
xor
out
les
lret
je
cmp
xchg
push
sbb
inc
lock
push
xchg
stos
mov
scas
jge
fstp
cmp
push
sub
and
jo
cmp
and
cmp
cmp
aaa
xchg
adc
adc
and
inc
movsl
out
sbb
adc
mov
loopne
jle
pop
add
push
and
dec
cmp
inc
loopne
push
mov
fidivrs
popf
xchg
addb
fbld
xor
mov
lret
pop
insb
sarb
dec
fdivl
ret
mov
mov
sbb
insb
mov
and
add
pop
sarb
jo
adc
sbb
push
dec
push
pop
sbb
adc
jmp
enter
mov
cmp
std
mov
cmp
push
ds
or
push
pop
rclb
pop
dec
xor
outsb
mov
loopne
xor
or
or
pushl
xchg
inc
cwtl
inc
leave
sbb
mov
or
insb
mov
ss
push
add
add
xchg
jne
adc
mov
cmp
cmpl
add
jmp
mov
mov
clc
push
mov
push
push
loopne
mov
add
cwtl
add
xor
push
pop
sbb
imul
jo
sub
movsb
cltd
cltd
push
shlb
mov
fwait
sbb
pop
sbb
and
and
sahf
add
pushf
mov
adc
jle
or
dec
icebp
or
add
or
mov
mov
test
stc
sub
lea
pop
dec
inc
mov
leave
xor
cli
ss
inc
and
jne
lock
cmpsl
sub
mov
push
dec
push
jae
lds
sub
loopne
pop
or
sbb
push
or
loopne
push
mov
hlt
fildl
or
sar
sub
cmp
addr16
stos
rcrb
jbe
sub
add
sub
das
movsb
push
int3
inc
jno
or
out
add
cwtl
pop
mov
lods
pop
negl
push
inc
push
sarb
push
rol
push
adc
or
test
and
call
rorl
mov
xchg
stos
xchg
lret
cmpsl
mov
out
lret
ljmp
dec
pop
cmp
pop
push
dec
push
or
xchg
xchg
jmp
hlt
je
int3
add
ds
jge
sbb
hlt
sub
push
mov
add
out
xor
add
dec
add
add
hlt
mov
and
sub
sub
add
loopne
fcomps
xor
lods
mov
loopne
sbb
mov
subb
push
pop
mov
xor
push
mov
push
sub
mov
lds
add
sbb
addr16
add
mov
adc
lret
shlb
arpl
lods
imul
sbb
adc
mov
dec
sub
adc
adc
dec
xor
stos
xor
leave
or
mov
and
fucomip
lods
cmpsl
mov
pushl
push
ds
push
push
xlat
in
cmpsb
ror
shlb
dec
cmp
aaa
xchg
addr16
inc
insl
js
scas
mov
sar
stos
xor
pop
xor
adc
fs
xchg
and
adc
nop
add
adc
leave
and
adc
sbb
xor
adc
adc
xchg
inc
adc
pop
add
and
sub
shll
icebp
push
inc
rolb
pop
mov
pop
aaa
jg
push
mov
cmpw
je
add
aad
imul
inc
clc
add
rcll
or
fcmovu
inc
pop
scas
fwait
lock
pop
adc
fbld
sbb
rorb
lret
add
mov
scas
sti
or
test
in
popf
mov
pop
shlb
jl
inc
imul
das
jmp
cmp
out
or
sbb
cmp
push
jo
je
xchg
jb
jb
cmp
pushf
ss
fmuls
movsb
andb
nop
roll
adc
mov
lea
stc
shrl
mov
inc
mov
adc
jp
inc
dec
mov
or
xchg
push
xchg
insb
jae
mov
push
add
xor
add
into
in
add
in
imul
out
sti
popf
push
cmp
push
add
pop
mov
cmp
iret
sti
pop
jmp
and
adc
dec
pop
inc
rsqrtps
mov
lea
aad
pop
xchg
jnp
popf
push
mov
push
mov
pusha
mov
jne
dec
lahf
jb
push
mov
rol
mull
push
mov
push
inc
movswl
iret
call
sub
mov
jnp
addr16
mov
push
mov
call
setp
add
pop
loope
or
fnsave
testb
mov
sub
pop
add
test
inc
and
jnp
ret
mov
sub
mov
popa
aaa
test
xchg
inc
insl
rcl
and
sub
cmp
fdivs
out
mov
inc
test
in
cmpsb
mov
mov
jg
inc
push
stos
mov
mov
push
adcl
or
xor
test
mov
mov
sbb
cmp
into
aam
test
clc
add
jecxz
cld
cmc
in
pop
xchg
repz
jmp
or
sub
dec
inc
or
or
stos
sbb
dec
push
inc
insl
loopne
inc
add
cmp
inc
xchg
rorl
dec
push
push
imulb
scas
pop
add
push
js
or
xor
pop
inc
dec
push
sub
sbbb
mov
pop
push
inc
out
and
mov
fsubs
popa
push
repz
and
nop
ret
roll
mul
addl
xor
mov
push
pop
lahf
fwait
push
xchg
or
rorb
rcr
mov
xchg
pop
rolb
or
dec
jno
mov
sbb
addr16
xor
xor
and
mov
and
cmp
sbb
lret
test
adc
cmp
xchg
sub
adc
inc
or
lea
xor
or
repnz
cmp
jp
and
popf
dec
ret
mov
inc
clc
fwait
add
jno
mov
inc
test
cli
orl
xchg
test
idivl
inc
dec
adc
rol
push
push
scas
adc
xlat
jmp
addl
movsl
sub
mov
xor
cmc
les
xor
fsubrl
or
or
dec
push
pop
mov
orb
and
rorl
jmp
or
decb
inc
mov
lret
vsubpd
fidivrs
xor
imul
push
mov
movmskps
inc
outsl
stc
adc
pop
imull
mov
dec
jp
xchg
rorl
lea
mov
xchg
ret
rcll
dec
push
aaa
or
or
das
daa
not
andb
adc
sub
dec
test
xchg
pop
into
ror
ret
in
mov
sbb
or
aam
jne
xchg
mov
jmp
pop
out
sub
add
push
bound
test
sub
sbb
xor
xor
inc
push
push
lea
loop
push
xchg
mov
sub
mov
sbb
js
sbb
outsb
rol
pop
dec
push
stos
add
andl
adc
and
inc
mov
pop
mov
cwtl
sti
cmp
loope
rol
fisttpll
pop
jne
mov
mov
cmpsb
mov
daa
xor
sub
mov
jl
pop
js
cmpsb
lea
add
push
pushf
push
push
es
xchg
jns
es
xor
inc
addr16
dec
jmp
arpl
mov
inc
adc
inc
nop
push
push
clc
test
add
mov
roll
dec
xchg
push
jmp
inc
adc
pop
inc
test
imul
or
std
adc
push
aad
rorb
movsl
mov
dec
sar
sahf
add
ds
negb
aaa
cmpsb
or
add
xor
test
rolb
pop
add
push
inc
test
loope
dec
add
jl
inc
xchg
jae
shlb
add
xor
fldl
adc
or
cmp
cmpsl
cltd
xchg
mov
jmp
xchg
dec
nop
pop
in
or
dec
fldl
xchg
stos
test
and
jmp
nop
fstps
or
aad
cmp
mov
les
scas
add
je
dec
leave
or
repnz
dec
sub
jmp
inc
xor
push
cmp
pop
add
push
mov
inc
rcrb
ret
adc
mov
adc
or
je
inc
cmc
xor
popa
in
les
jp
add
mov
push
pmulhw
mov
adc
mov
xor
inc
fcmovb
sbb
or
pop
lahf
add
or
sub
fs
add
outsb
js
notl
push
fistps
add
loopne
loope
jg
adc
dec
cltd
iret
into
nop
pushl
hlt
stos
add
and
pushf
pop
pusha
add
call
push
inc
andl
mov
cmpsl
xchg
sub
in
push
pop
sub
daa
or
aaa
jb
shrl
adc
js
pop
xor
sbb
jns
or
add
pop
sub
in
add
sbb
lods
or
sub
or
add
prefetch
mov
pop
inc
insb
mov
std
cmp
inc
test
movsb
sbbl
add
and
cmp
jb
testl
rorl
or
inc
mov
mov
pop
cwtl
and
xchg
pusha
jecxz
scas
xor
push
inc
incl
in
pop
movsl
push
je
cwtl
xchg
and
inc
cmp
jbe
sbb
nop
mov
andb
mov
and
jbe
stc
xchg
nop
out
xchg
movsl
lret
inc
outsb
or
test
xchg
add
lods
xor
ret
add
add
sub
pop
mov
xor
mov
pop
dec
mov
jae
ja
add
cmp
je
cmp
or
shrd
pushf
sbb
xchg
sbb
clc
push
push
push
adc
xor
addl
pop
add
outsl
lea
cmp
inc
and
cmc
std
cmp
pop
and
inc
lds
nop
add
and
xor
test
or
int3
pop
cmpl
int3
push
or
sbb
add
inc
dec
pushf
and
jae
sub
or
ret
sbb
adc
addl
inc
ja
jecxz
jmp
in
mov
and
fisubrs
mov
xchg
notb
pop
subb
inc
adc
lahf
cwtl
les
sbb
ret
data16
sbb
testl
aad
sbb
ds
adc
xlat
cmpb
data16
mov
mov
cmp
inc
imul
push
jns
mov
clc
jne
mov
push
test
cmp
dec
or
mov
nop
sbb
inc
cld
cmp
stos
test
rolb
mov
movsb
nop
dec
fcoml
xorl
mov
hlt
inc
scas
xchg
inc
hlt
jns
push
add
sbb
lds
cli
sbb
sbb
mov
add
pop
adcl
jae
rclb
les
lret
and
mov
fsts
sub
pop
push
js
fistl
cld
or
loopne
loopne
fnstenv
mov
sbb
push
mov
stc
repz
cld
fcom
sbb
push
jecxz,pn
sbb
push
nop
out
mov
push
cmp
mov
inc
aaa
data16
in
jno
or
aaa
test
mov
ret
mov
cs
dec
sbb
push
fs
xchg
inc
call
mov
shrl
hlt
neg
sbb
and
bnd
movzwl
sti
sub
push
adc
les
mov
jp
test
add
or
test
adc
add
in
pop
xor
add
mov
fcmovnu
arpl
xor
mov
insl
loope
or
and
mov
dec
in
mov
add
clc
idiv
push
cmpl
jne
cmp
jbe
or
jne
push
xorb
jno
pushf
cmp
data16
mov
std
cmpb
data16
mov
pop
push
push
xchg
popa
mov
std
push
inc
cmc
jmp
sbb
mov
addl
push
xchg
lcall
sbb
adc
sbb
and
divb
cwtl
sbb
dec
test
push
pop
jne
add
push
mov
lea
inc
rolb
inc
sarb
negl
jg
vmread
or
add
dec
mov
push
sysexit
or
and
and
jo
or
in
xor
jne
and
xchg
rolb
bnd
push
mov
ret
jnp
and
push
nop
add
je
andl
pop
in
bound
add
mov
ficoml
dec
aas
out
or
sbb
cmp
cs
sbb
mov
inc
sbb
inc
jg
xor
or
cmpl
xor
add
mov
out
mov
inc
loope
add
mov
outsb
pushf
out
push
pop
ret
test
xlat
sbb
xor
push
mov
rorb
sub
add
movsb
push
inc
clc
mov
insb
lock
inc
clc
push
or
mov
jmp
and
add
adc
push
aam
lret
dec
fs
addr16
cmp
jae
inc
fs
cmp
or
dec
xchg
ljmp
sub
inc
jl
ret
add
lahf
les
in
inc
sbb
leave
mov
pop
mov
jb
push
jae
insb
cmp
lods
pop
add
inc
testb
cmp
fcomps
and
cmp
mov
cld
wbinvd
int3
ficomps
je
jle
loopne
cmp
add
daa
jmp
push
decl
cltd
push
push
mov
movsl
mov
outsb
sub
fwait
mov
add
sbb
int3
inc
sahf
xchg
add
outsl
mov
inc
rorl
add
dec
pushf
add
loopne
popf
call
into
hlt
xchg
mov
jbe
testl
or
sub
mov
mov
pop
sbb
sbb
and
test
add
dec
hlt
mov
imul
js
rclb
call
arpl
sub
cmp
add
mov
and
scas
sahf
movsl
fsubl
xchg
mov
and
jge
cwtl
ds
dec
dec
call
gs
packsswb
inc
mov
je
or
xor
adc
cmp
cwtl
or
push
sbb
ret
add
pop
mov
pop
lcall
dec
add
sbb
ss
pop
jl
push
and
jge
leave
adc
push
mov
jns
and
mov
xchg
hlt
xor
adc
and
lods
loopne
xchg
inc
sub
mov
xchg
push
push
mov
and
rcr
mov
ret
or
je
les
push
sub
aaa
mov
xchg
inc
jg
aam
push
in
in
jno
dec
xchg
or
out
mov
dec
mov
aam
pop
je
iret
fcomps
add
and
lods
push
inc
fcoml
push
jle
and
mov
xor
adc
push
sahf
xchg
sti
or
and
das
or
sbb
mov
adcb
adcb
lea
mov
fidivrs
fdivrs
cmp
inc
jle
push
push
in
mov
xor
jns
cmp
xor
mov
or
and
adc
fisttps
rcl
ret
mov
pop
or
xchg
pop
jae
push
add
sti
jb
mov
mov
mov
enter
jo
push
test
lea
arpl
fistps
shrl
add
xor
outsb
add
push
sti
dec
mov
cmp
sub
cmp
add
pop
je
dec
adc
lock
in
jae
lea
ja
mov
aas
or
or
mov
jmp
inc
test
cmp
pushl
sub
sbb
test
and
daa
lock
std
pop
test
or
mov
lea
out
cmp
sbb
pop
push
pushf
jne
push
dec
or
dec
mov
jle
pop
je
iret
lea
les
in
sub
add
mov
stc
jae
loopne
or
add
inc
sub
pop
sbb
orb
dec
shr
push
sub
insb
sbb
and
or
sbb
les
add
mov
ret
rolb
gs
and
inc
sbb
add
sbbb
pop
push
sbb
sbbb
adc
mov
je
mov
pop
aaa
pop
imul
adc
or
adc
jo
adc
dec
shrl
inc
mov
sub
dec
and
sub
mov
ss
les
inc
pusha
imul
lock
lea
cmp
jle
movsl
sub
lret
or
jge
xchg
adc
jp
popf
mov
nop
jmp
imul
adc
popf
jecxz
mov
add
push
mov
add
xor
push
jno
dec
in
lods
or
outsb
or
pop
pop
pushf
lret
scas
adc
mov
push
mov
lea
shr
push
dec
or
sarl
inc
out
inc
cmpl
adc
xchg
cmp
push
lcall
inc
and
xchg
or
data16
xchg
add
push
add
or
iret
adc
pop
pop
inc
jae
mov
je
dec
add
adc
xor
xor
les
adc
adc
repnz
jmp
andl
movb
fcoml
arpl
xor
daa
or
fwait
jnp
test
addb
mov
dec
mov
mov
clc
bnd
mov
notb
cmp
push
fidivs
add
jb
push
jae
lea
push
sub
add
and
xor
xor
xor
es
ja
or
hlt
lods
lret
ret
shlb
or
pop
mov
mov
cmc
loopne
jge
lods
shll
incb
cmpb
xor
fnstenv
inc
jmp
inc
jmp
xor
xor
cmp
adc
ficoml
insb
testl
sub
inc
cltd
mov
add
adc
sub
sub
out
push
mov
sub
jp
mov
insb
testb
div
cmpsb
enter
flds
push
cmc
dec
mov
frstor
rorl
inc
xor
out
push
sti
sbb
push
push
mov
pop
repnz
mov
push
push
adc
out
imul
xchg
inc
cmp
mov
pushf
mov
adc
push
pop
xlat
push
cmp
or
aad
xor
add
push
mov
pushf
cmp
adc
leave
adcb
nop
cltd
or
sub
int
or
scas
divl
cmp
jge
outsb
fstpt
dec
cmp
xchg
inc
mov
and
dec
and
jb
inc
fsubrs
insl
test
cli
rclb
jnp
insl
test
mov
cmp
sub
push
inc
popa
sti
inc
scas
or
add
es
dec
add
mov
cltd
and
push
sbb
add
sahf
clc
and
xchg
push
adc
out
cli
mov
inc
out
std
cmc
imul
test
out
push
sbb
bound
test
pop
adc
ja
push
cmpsb
imul
imul
mov
sbb
popa
adc
and
inc
add
repnz
adcb
push
jbe
inc
push
stc
and
add
push
sbb
movsl
sbb
lea
add
adc
loop
mov
rcrl
inc
xchg
jo
and
mov
ds
adc
push
cmp
mov
add
jmp
das
inc
sbb
imul
lods
inc
adcb
sub
lock
push
pop
pop
pop
sbb
ja
cs
xor
loopne
lds
dec
addr16
xchg
add
add
jb
adc
inc
pop
imull
xchg
or
cmc
test
lret
nop
xor
jbe
cmp
dec
loop
ret
pusha
std
xchg
xor
mov
daa
mov
rcll
loop
inc
js
jg
pushf
mov
dec
xchg
pusha
jo
xorl
movsl
shrb
pop
imul
pop
and
rclb
add
data16
ret
ja
adc
cmp
and
jecxz
or
lret
cmp
push
nop
repz
rcr
adc
and
push
jl
mov
mov
sub
dec
inc
pusha
pop
test
pop
adc
or
mov
cmc
pop
push
imul
cmp
add
mov
sbb
fdivrs
mov
jae
ja
std
or
test
and
push
pop
pop
sbb
xor
pop
or
mov
mov
leave
jae
rol
push
pop
jnp
add
lahf
mov
out
lret
in
mov
pushf
push
add
fimull
inc
xor
les
pop
fs
push
push
scas
dec
inc
xchg
inc
push
roll
jnp
pop
sub
clc
addr16
inc
and
fsubrl
jle
jne
mov
pusha
jne
das
lea
and
xchg
add
push
das
add
lock
das
mov
fwait
and
clc
inc
das
and
fildl
ret
pop
dec
fdivs
sub
lock
aas
push
xor
adc
jbe
inc
cmp
mov
fimuls
and
and
sahf
jbe
nop
shrb
pop
cli
enter
ja
daa
inc
and
add
mov
push
add
mov
mov
out
mov
cmp
test
stos
adc
adc
pop
inc
push
cld
adc
or
int3
sar
enter
or
ja
fs
and
or
notb
iret
inc
mov
les
push
mov
or
leave
push
or
ret
ret
sub
fmull
inc
test
mov
pushf
out
ds
push
pop
and
popw
scas
adc
ja
ljmp
dec
fnsave
xchg
adc
data16
jnp
mov
mov
mov
jo
int3
or
add
pushf
inc
mov
cmp
fwait
ret
xor
pop
andl
out
dec
hlt
cli
mov
cmp
js
xchg
dec
test
jg
mov
add
xchg
jp
or
cmp
or
add
ss
pop
push
mov
in
mov
xchg
dec
cmc
js
jnp
push
cmpl
push
inc
cmp
mov
add
ds
jmp
cmp
xor
mov
push
push
arpl
daa
jo
sub
push
arpl
outsl
sub
add
push
adc
mov
mov
test
sbb
bound
pop
cmp
xchg
andl
leave
in
sbb
xchg
ret
jl
subb
loope
test
movsl
jb
loopne
fsubl
push
sbb
push
push
dec
dec
mov
mov
aam
and
adc
mov
lock
add
xchg
rorb
addr16
pop
sbb
stos
int
push
shrl
push
call
and
out
das
mov
pop
jle
mov
movsl
movsl
addl
push
insb
sub
aaa
and
in
pop
push
mov
mov
mov
lret
or
pop
sub
ret
xor
sbb
push
pop
or
lea
es
in
stos
or
mov
inc
jmp
jge
ret
rclb
push
cmpsb
mov
sub
mov
ret
aas
or
or
ret
push
and
push
adc
fs
sbb
cmp
ja
fnstcw
pop
dec
cld
push
adc
cld
js
in
cmpsl
lods
mov
insl
cmp
dec
cs
sti
dec
clc
add
push
push
xor
lar
jmp
cmpsb
jecxz
jne
int3
add
clc
shlb
cs
sub
pop
fs
jecxz
push
sbb
clc
popa
and
sub
mov
dec
rclb
mov
and
pop
inc
add
jge
xor
mov
cmp
js
popf
sarl
not
imul
es
adc
mov
negl
add
pop
mov
lods
sbb
adc
cltd
into
sbb
gs
lods
out
arpl
push
lea
add
test
inc
adc
and
rcll
or
aad
loope
mov
mov
hlt
xchg
inc
in
sub
push
sub
push
dec
jmp
add
inc
or
mov
lahf
mov
jg
test
ja
add
dec
sbbb
loope
adc
je
jno
scas
xor
dec
jne
pop
fs
push
fcomps
cmp
test
add
out
inc
or
push
in
mov
adc
fidivrl
inc
scas
jbe
mov
cwtl
frstor
into
add
mov
mov
clc
add
xchg
negb
push
cmp
or
in
push
call
das
outsl
push
xor
cmp
dec
inc
sub
js
dec
cwtl
jl
mov
leave
cmpsb
mov
adc
xor
xor
lea
xchg
jl
ss
stos
int3
sub
inc
jmp
add
loopne
pop
adc
lret
iret
push
lcall
adc
arpl
es
add
jmp
loopne
fstps
adc
add
test
out
mov
dec
inc
and
orl
fdivs
mov
inc
mov
incb
mov
sbb
xchg
mov
rcll
dec
fwait
out
gs
scas
clc
call
sbb
inc
jle
add
outsb
adc
movsl
aam
jo
scas
in
movsb
fst
jmp
xorl
ret
mov
or
add
subb
xorb
lret
and
adc
ss
xchg
mov
mov
cmp
ret
or
jge,pt
pop
cmp
or
add
pop
aam
orb
mov
inc
push
xor
pop
xchg
adc
jo
push
ljmp
sub
js
mov
mov
dec
push
or
roll
sub
or
daa
mov
dec
or
inc
in
je
jno
mov
xchg
mov
xchg
xchg
aaa
movsb
pop
test
roll
push
sahf
jne
add
push
dec
iret
mov
dec
xchg
inc
scas
push
push
add
xchg
mov
inc
adc
loope
add
loope
dec
sbb
in
xchg
lods
pop
loop
and
mov
les
sbb
mov
adc
jge
movb
lahf
cmc
int3
rcll
or
adc
call
add
mov
or
and
jl
fwait
xor
jno
and
jne
sub
pop
xchg
or
pop
mov
push
or
jne
sub
lods
dec
add
jne
xor
daa
add
outsb
ljmp
cmp
fists
lahf
cmp
ja
lock
mov
lea
inc
je
lret
push
into
add
clc
mov
sbb
add
jo
int
repnz
cld
push
dec
jnp
notb
popa
inc
add
mov
dec
add
stos
pop
ficoml
push
sti
loope
fists
movsb
inc
mov
std
sbb
fdivrl
push
jnp
aad
inc
xor
sarb
sub
mov
mov
ds
pop
mov
fs
adc
repz
mov
mov
jp
lods
adc
add
out
push
fdivl
enter
pop
mov
mov
push
dec
scas
lcall
inc
inc
fbstp
aam
pop
mov
jg
daa
cmp
and
out
sbb
imul
sub
rcll
xchg
movsb
cmp
push
jmp
cmp
sarl
rorb
insl
roll
loope
cmp
pop
sbb
cmp
xchg
flds
sub
and
and
inc
jo
mov
mov
orl
fcoml
sahf
xchg
add
andb
andl
mov
cmp
in
ret
cmp
jne
test
cli
or
pop
sub
sub
add
push
jae
push
add
out
repz
push
je
xor
imul
sbb
dec
insb
jne
mov
cmp
scas
dec
jno
fs
rclb
rolb
mov
inc
mov
pop
sbb
jo
gs
or
je
pop
add
or
jne
lods
adc
adcb
nop
mov
cmp
pop
addl
push
data16
add
and
xchg
cmp
add
xchg
or
jnp
psubd
inc
cmp
cli
push
pop
cwtl
fdivrl
jl
add
sbb
mov
mov
xchg
ffreep
push
push
das
rorb
push
pop
sbb
test
out
in
push
cmc
push
xchg
jno
aaa
mov
pop
xor
rcrl
push
test
jno
lcall
add
fwait
icebp
add
stc
lds
mov
cmp
jne
or
or
pop
mov
loopne
pop
shll
jo
mov
push
mov
iret
mov
insb
pop
dec
dec
or
je
adc
inc
or
lea
xchg
lea
daa
shlb
lods
or
inc
mov
sbb
inc
xchg
insb
fcmovb
inc
sbb
inc
sub
mov
int
mov
mov
pop
pop
add
add
jae
push
add
mov
lcall
xor
mov
lcall
insb
xor
imul
push
add
orl
or
push
or
or
cmpsl
mov
dec
int3
cmp
push
shlb
cwtl
xor
push
mov
cltd
pop
out
pop
xor
add
loopne
nop
in
arpl
out
or
movb
sbb
sbb
cmpsl
xchg
lods
pushl
cwtl
incl
add
fmuls
inc
jl
js
add
nop
je
insb
sbb
pusha
sbb
add
imul
insl
and
cltd
adc
leave
cmp
aam
and
cmp
push
push
mov
out
dec
pop
add
adc
pop
shrl
cld
jo
in
xchg
xor
sub
sub
and
push
adc
jmp
xchg
add
push
adcl
mov
fidivl
mov
push
data16
push
lea
add
xchg
add
cmpsb
cli
adc
cmpb
fcmovnb
add
movswl
cmp
xchg
aam
push
inc
sbb
or
out
mov
es
mov
mov
pop
or
jbe
push
js
jo
jle
mov
xor
push
add
dec
clc
push
lock
mov
cmp
push
inc
dec
and
push
fcoms
insl
inc
sub
lock
shl
ret
mov
sbb
xchg
add
add
aam
ds
ss
and
imul
je
xor
xchg
jne
das
xorl
cld
addl
pop
jne
orl
cld
mov
jne
imul
sub
data16
pop
dec
test
pop
jmp
and
xchg
fidivrs
adc
das
call
push
stc
fldl
sar
dec
jb
sbb
lods
jo
cmp
sub
sub
sub
add
imul
outsb
dec
les
mov
add
mov
stc
push
jne
loopne
mov
mov
sub
mov
clc
dec
jne
cmp
inc
icebp
data16
cmp
cmpsl
lods
xchg
jne
xor
add
fwait
jl
sub
lahf
jo
cld
ja
xor
dec
mov
and
cli
sahf
loopne
lcall
daa
xchg
lock
or
mov
xchg
sbb
enter
adc
sbb
into
dec
aas
clc
lods
push
mov
add
lret
popf
movsl
sbb
mov
mov
or
cli
out
fidivrs
pop
dec
adc
add
sahf
xor
mov
push
sub
or
dec
lret
jle
add
dec
dec
adc
nop
pop
inc
sbb
jno
pop
cmp
xor
rcll
xorl
sti
insl
cmp
xor
jb
add
sub
sub
xchg
test
shll
or
and
push
and
sbb
call
dec
cmp
mov
outsb
dec
jb
sbb
movsb
sbb
lea
xchg
mov
stos
bound
pushl
jo
and
sbb
jno
orb
mov
outsb
or
lock
fwait
inc
data16
mov
cmp
notl
inc
cmpl
or
dec
add
gs
or
pop
and
insb
insb
out
ror
push
icebp
or
or
xor
cmp
pop
pop
icebp
nop
push
xchg
adc
inc
pushf
cmp
cli
je
or
pusha
popf
popf
add
or
enter
push
mov
or
ficomps
cmp
lea
mov
hlt
sti
loopne
outsl
lds
fwait
inc
and
cmp
push
jne
jg
nop
mov
mov
adc
dec
shll
lock
enter
cld
lock
test
ljmp
fistps
adc
sbb
jp
inc
ja
jo
lods
xchg
mov
cli
fistpll
in
push
mov
lret
add
push
and
mov
rsm
mov
lock
sub
xor
cmp
xor
jne
movsl
pop
or
cmc
jecxz
and
pop
pusha
xchg
sbb
push
test
or
or
lret
push
ljmp
push
mov
add
fsubl
test
pop
mov
sbb
cmp
add
insl
mov
jne
adcb
jbe
mov
push
sub
jne
adcl
popa
adc
add
ror
xchg
fidivl
mov
adc
mull
adc
xor
aas
fldl
cmp
jne
outsb
fcompl
xchg
shrb
mov
mov
sbb
stos
or
test
es
cwtl
fidivrs
mov
sub
mov
adc
je
sbb
jle
cmp
out
push
and
dec
push
lea
push
mov
xchg
adc
sbb
sbb
loop
dec
push
or
popf
xchg
or
sbb
xor
jbe
data16
fcoms
jo
mov
rol
add
popa
xor
into
add
push
fs
pop
loop
pop
or
mov
pop
jno
mov
arpl
mov
xchg
mov
cmp
xor
fdiv
or
cmp
add
push
jbe
sub
sub
add
sbb
addb
cltd
sarl
test
cmp
fdivs
lods
sub
divb
add
dec
ret
jge
int3
mov
lods
dec
sbb
add
add
or
pop
rol
inc
pop
jbe
and
push
jmp
adc
or
mov
mov
shrb
mov
pop
out
ss
jmp
jmp
xor
xchg
push
sub
test
mov
mov
add
pushf
sub
push
jo
into
push
adc
xor
xor
and
and
mov
sbb
dec
mov
and
push
sbb
sub
ret
dec
jle
dec
js
lcall
push
mov
dec
mov
cmp
ja
pop
push
adc
fiadds
mov
mov
cmpl
pop
test
lods
out
add
push
fmuls
dec
jno
mov
sbb
pushf
push
and
sarb
push
inc
mov
cmpsb
add
sub
xor
idivb
pop
push
xor
and
fs
mov
out
call
inc
xor
dec
fdivl
arpl
mov
movsl
add
outsb
mov
jl
mov
mov
sbb
and
sbb
sbb
push
adc
sbb
add
jmp
fnstcw
xor
inc
adc
xor
ja
cs
push
or
scas
mov
xor
and
enter
popa
aaa
cmp
and
mov
repnz
ficomps
sub
mov
jne
aas
fisubrl
and
sub
and
sarb
or
divl
dec
and
push
cmpsl
in
adc
adc
cli
mov
jl
repnz
push
andl
sub
push
aam
inc
cltd
sub
fwait
jne
mov
cltd
or
outsb
adc
and
or
mov
push
or
inc
fstpt
adc
fsubl
leave
and
stos
sbb
or
pop
mov
call
popf
inc
jg
shrb
int
sarl
pop
arpl
push
adc
push
jbe
jo
or
js
cmp
sbb
jo
pop
adc
out
insb
test
push
xchg
add
pop
mov
push
add
aaa
jmp
mov
or
pop
push
orps
and
aaa
xchg
movsb
add
arpl
add
popf
cmpsb
dec
jge
cmp
push
imul
pop
jb
sub
in
and
pop
addb
xor
call
pop
mov
push
mov
rcrb
test
dec
sbb
ret
cmpsl
ret
jge
lret
xor
test
push
or
or
adc
jbe
pop
sahf
push
fs
xchg
push
mov
pushf
and
dec
int3
add
mov
minps
pop
pop
inc
add
sbb
popa
mov
push
jnp
xor
xchg
sbb
sub
testl
mov
sub
dec
lcall
cmp
add
sbb
enter
mov
loope
add
fwait
xchg
cmp
insb
mov
setbe
loope
adc
js
mov
push
cli
push
push
push
cmpsl
imul
push
loopne
sub
iret
aaa
add
aad
jp
or
cmp
and
add
test
and
pop
lds
cmp
adc
addb
inc
in
jmp
pop
and
xor
add
and
dec
je
mov
cmpb
fimuls
jbe
jmp
pushl
andb
dec
rcr
call
lea
push
orb
cmp
mov
mov
inc
test
subl
dec
cwtl
xchg
test
jae
test
or
or
mov
push
xchg
and
jge
cs
jl
andl
or
mov
push
sub
js
daa
fs
jb
cltd
addb
les
inc
jae
test
leave
and
jecxz
cmp
test
mov
push
push
int3
lea
add
jo
fisubrl
ret
cmpsl
shr
push
fcoml
jbe
inc
into
mov
cmpsl
sub
ljmp
adc
push
jno
pusha
adc
ret
andl
adc
rcrb
mov
mov
addl
and
add
lret
rcrl
je
push
pop
ja
out
sub
sub
xor
addb
pop
jmp
and
sbb
jno
mov
das
pop
bound
or
or
add
pop
or
outsb
fs
arpl
jne
jns
pop
pop
sub
xor
xor
mov
pop
lock
pusha
mov
das
push
sub
mov
pop
in
mov
sub
add
cmp
add
sbb
cmp
add
clc
inc
mov
sbb
mov
fdivl
cmp
dec
or
dec
jl
loope
xor
push
or
jmp
fistl
jo
add
dec
mov
mov
mov
lods
push
push
leave
adc
loopne
cmc
imul
ja
xchg
dec
testl
inc
add
jb
push
inc
mov
aas
mov
push
add
shrl
inc
push
pop
sub
xchg
add
xchg
into
outsb
movsl
sarl
aaa
add
pusha
and
sbb
inc
jle
rcr
movsl
push
push
pop
loopne
or
mov
jl
mov
incb
pop
add
loopne
jl
test
add
nop
sbb
shr
aaa
icebp
or
or
xchg
or
sub
xchg
mov
mov
mov
shlb
xchg
ret
nop
inc
mov
inc
and
out
xchg
shl
mov
inc
ficompl
or
lret
xchg
daa
mov
xchg
jo
stos
or
mov
lods
mov
add
dec
fwait
inc
fcmovu
add
push
pop
push
push
lcall
or
push
inc
push
cwtl
imul
cltd
idivl
mov
sbbb
jbe
out
sbb
add
add
sub
hlt
mov
add
push
ret
adc
and
push
gs
jb
pop
add
or
sub
je
mov
inc
fxch
pop
mov
jecxz
push
int
pusha
addr16
or
lcall
imul
filds
and
push
mov
adcb
adc
rolb
mov
xchg
fsubs
adc
aad
or
mov
sub
je
daa
js
cld
sbb
rcll
test
push
push
mov
adc
cmp
pop
mov
dec
jp
mov
loopne
test
add
sub
jo
xor
lods
je
xor
push
mov
push
mov
jns
push
test
cmp
popa
jp
sub
push
and
je
insl
sub
push
nop
sbb
mov
rcll
push
xor
or
cmpsl
notl
pop
jae
mov
test
insl
js
or
and
int3
dec
orl
mov
pop
pusha
jmp
cmp
dec
shl
jmp
cmp
xchg
addr16
cmp
incb
loope
pusha
jb
add
ja
adc
sbb
adc
dec
cmp
adc
sbb
cmp
jo
pop
cmp
jmp
cmc
pop
push
call
xor
add
push
add
push
rclb
xchg
adcb
out
or
addb
sbb
data16
and
aas
jmp
and
loope
cmp
lds
add
push
mov
int3
and
adc
push
cld
xchg
movb
mov
scas
jge
movl
jg
inc
insb
shr
inc
add
stc
ficoms
dec
adc
adc
and
call
jge
dec
sbb
mov
pusha
insb
std
mov
sbb
jmp
mov
adc
std
repz
mov
imul
ss
fsubs
stos
or
add
sbb
jne
sub
in
sbb
push
arpl
pop
add
inc
lock
sub
dec
dec
sbbl
dec
and
inc
leave
lret
push
int
fucom
mov
dec
add
xor
or
pop
adc
or
or
les
pop
ret
mov
xchg
mov
mov
mov
addl
pop
sbb
pop
adc
test
jle
adc
or
cltd
pop
out
mov
mov
insb
insb
pop
mov
adc
data16
xchg
or
push
add
pushl
dec
or
jg
inc
xor
inc
out
bound
inc
movsl
xor
je
in
add
adc
sub
adc
jno
sub
cwtl
adc
js
lret
push
loopne
add
jmp
push
jne
jnp
imul
push
pop
mov
add
out
mov
cmp
cld
arpl
or
add
mov
idivb
addr16
xchg
adc
mov
stos
ret
es
pop
sbb
mov
jo
sahf
repz
in
cwtl
sub
fs
dec
xor
mov
hlt
sti
sub
cmp
jl
dec
adc
shrb
pop
cmp
pop
cmp
or
push
mov
xor
jmp
cltd
push
mov
cmpb
dec
cld
fistpll
mov
jp
mov
inc
je
cmpsl
dec
pop
paddusw
fists
in
lea
mov
xchg
stos
pop
add
add
lret
cmpl
and
mov
or
adc
or
add
fwait
cmp
fs
xor
bound
adcl
cld
dec
jl
sar
inc
dec
movsb
push
adc
cmp
jnp
inc
adc
jbe
mov
les
pop
and
adc
cmc
mov
mov
pop
sub
andb
movsl
mov
repnz
pop
push
mov
dec
je
cmp
push
fbstp
dec
es
jbe
repnz
call
xchg
or
xchg
sets
push
fsubrs
ret
pop
pop
xchg
adc
cs
push
add
test
mov
xor
js
jb
add
and
adc
push
les
push
inc
xchg
cltd
add
into
mov
push
out
xor
push
pushf
in
mov
cmc
je
mov
lret
ret
xchg
lock
ret
shll
testl
lock
pop
dec
jle
xor
or
js
neg
ret
xlat
loope
dec
pop
dec
rcrl
jae
mov
cmpsb
add
insb
dec
add
loope
lock
shlb
pusha
stc
or
jae
push
push
rcrb
lret
jle
sbb
sbbl
sub
pop
and
and
mov
xchg
loopne
dec
push
xor
das
insb
es
in
pop
fwait
add
mov
and
shll
dec
int
sbb
sbb
push
cmp
ljmp
loopne
pop
loopne
mov
add
mov
mov
je
add
add
fcoms
jbe
and
sti
inc
clc
push
sub
daa
inc
insl
xorl
push
movsl
mov
in
dec
push
mov
cmp
push
push
repnz
xor
mov
femms
fisubl
rcl
adc
inc
sbb
adc
popl
mov
mov
subb
push
add
lock
jae
jnp
das
loop
rcr
daa
push
in
xchg
loopne
cmp
add
lods
cmp
cmp
lcall
push
or
lea
loop
cmp
and
sbb
movsl
pop
push
fisubs
mov
add
cld
push
or
and
pop
add
shl
dec
loope
adc
xchg
jbe
or
adc
add
pop
cmp
push
and
xor
pop
mov
test
cmpsb
jne
ret
outsl
decl
mov
cmp
ja
je
movsb
rcr
outsb
or
je
or
sub
xchg
call
das
adc
rorl
jns
push
sbb
cmpl
movsb
xchg
aaa
xor
scas
add
sbb
sahf
pop
add
popa
or
andb
mov
clc
push
jmp
cmp
adc
imul
xor
sbb
inc
push
inc
adc
adc
or
mov
or
add
adcl
push
push
dec
lock
xchg
movsb
dec
cmp
call
jmp
aam
inc
push
push
dec
je
stos
inc
mov
cmp
push
sub
lock
sbb
adc
or
push
pop
fcomps
and
pop
repnz
out
scas
pop
popa
mov
adc
cmp
andl
pop
aad
pusha
or
pop
popa
icebp
bound
adc
outsb
xchg
xchg
and
jno
dec
je
sub
jne
sub
or
pop
mov
in
inc
outsb
jp
mov
mov
add
ds
or
ret
push
adc
inc
push
int3
or
or
mov
insb
adc
insb
popf
das
dec
pusha
add
or
or
cmp
jmp
sbb
add
int3
and
push
inc
enter
and
xchg
inc
push
mov
shr
shrl
push
push
or
lret
sub
lods
rcr
inc
mov
lds
sbb
add
addr16
inc
loopne
fsubl
mov
add
xor
out
je
push
push
or
jmp
cmp
xchg
test
mov
jmp
xchg
push
rol
call
loopne
pop
jns
testl
pop
push
cmp
loope
imul
js
daa
push
or
flds
xchg
push
cltd
mov
sub
inc
mov
popa
aam
or
xchg
and
rorb
dec
lahf
jl
mov
cmpl
mov
inc
clc
and
jns
inc
add
add
add
cmp
pop
push
push
mov
pop
push
fs
jb
fsubr
or
and
pop
cmp
mov
add
dec
pusha
loope
jge
mov
mov
cmp
pop
cmp
js
lods
mov
add
sahf
push
mov
fsubrp
push
das
jno
inc
xor
int
fdivrl
pusha
push
ret
pop
cmc
fsubrs
mov
mov
adc
jmp
jbe
push
push
or
inc
shll
mov
fdivrs
xor
aas
xchg
loopne
sbb
mov
fimuls
mov
dec
sbb
adc
sbb
inc
dec
shr
xchg
push
xor
das
addl
inc
js
inc
sbb
mov
xor
sbb
aaa
jne
cmp
sti
test
mov
bound
adc
mov
jmp
cmp
rcrb
or
dec
inc
sub
fidivl
lock
jecxz
ljmp
movsl
or
push
out
adcb
sub
adc
popf
fimuls
insl
mov
pop
adc
jb
data16
jne
mov
dec
jecxz
xor
loopne,pt
xchg
sub
jge
lcall
ds
push
je
hlt
or
xlat
shlb
push
leave
andb
loop
pop
stos
inc
pop
mov
sbb
jno
sbb
push
and
sub
mov
test
outsl
in
bound
or
je
daa
push
arpl
dec
leave
mov
mov
add
in
sub
inc
andb
test
data16
adc
hlt
mov
sbb
mov
aam
add
and
sub
sub
roll
jp
push
loope
inc
aam
dec
and
sbb
or
inc
fst
ss
or
movsl
adcl
pusha
daa
push
test
dec
sub
roll
jecxz
ret
in
xchg
scas
es
outsl
add
cmp
int3
cmpsl
ljmp
cld
inc
jp
add
cwtl
push
gs
jle
pop
push
inc
leave
stc
mov
xchg
je
rcl
add
cmp
mov
add
mov
sahf
in
subb
xchg
push
sub
lds
fcompl
add
call
inc
pop
jae
data16
xor
aaa
bndldx
xchg
in
mov
sbb
add
or
pop
cmpsl
mov
test
mov
add
and
fisubl
sbb
mov
js
clc
or
mov
sarb
push
mov
mov
out
sbb
push
rolb
mov
mov
mov
mov
adc
adcl
inc
xchg
pop
and
pop
addb
fwait
and
adc
notl
scas
int3
out
or
push
and
mov
cmp
scas
sbb
push
mov
adc
jne
cmpsl
inc
in
push
insb
int3
xchg
or
push
inc
xchg
lods
psubd
add
push
or
scas
iret
mov
cmp
add
sub
xor
or
ret
xchg
push
or
in
js
sahf
or
sub
adcl
xchg
fcmovb
xlat
cmp
test
sbb
pop
data16
subb
cmp
jne
xor
adc
in
popf
inc
sbb
std
mov
mov
push
xor
xchg
jmp
sbb
lret
xchg
in
cmp
or
leave
jp
cmp
push
loope
push
js
je
mov
or
xadd
bound
negl
sti
or
jl
sbb
pushf
dec
je
xchg
inc
das
push
cs
xchg
jmp
movsl
sbb
in
adc
outsb
fiaddl
inc
and
dec
adc
and
add
sub
data16
adc
push
imul
and
mov
jnp
cmc
add
sbb
dec
in
xor
jnp
inc
adc
inc
and
dec
and
and
jnp
loope
divb
jno
sub
cld
and
movsb
into
jle
jno
dec
or
pop
ja
mulb
push
dec
pusha
gs
lcall
ret
sbb
xchg
mov
call
test
loop
in
add
mov
push
sub
add
mov
fadds
or
das
test
push
push
mov
pop
dec
sub
adc
sub
sbb
mov
inc
test
jae
inc
add
lods
das
mov
int3
sub
icebp
xchg
xchg
out
pop
movsb
les
icebp
in
addr16
cmp
sbb
repz
lock
add
jp
lock
mov
or
aam
pop
mov
mov
fdiv
jg
or
gs
movsl
ret
testl
lahf
aaa
add
sti
sbb
adc
pop
lret
dec
or
rorl
stc
and
mov
push
repnz
subb
cmp
out
mov
cmpl
sbb
adc
push
adc
pop
or
popf
sbb
js
dec
mov
jo
pop
jns
dec
adc
push
or
dec
test
cli
mov
dec
and
and
cli
xchg
fimull
push
repnz
pop
je
inc
add
stos
je
cmp
sbb
aas
imul
data16
xchg
sub
and
cld
insl
inc
mov
mov
lds
andb
mov
inc
and
arpl
inc
add
or
inc
not
adcl
dec
outsb
sti
aaa
inc
mov
sub
loopne
cmpb
mov
fnsave
push
add
mov
xchg
dec
mov
ja
pop
pushf
cld
inc
adc
and
jo
insb
lahf
movups
push
mov
inc
lea
insb
test
popf
add
and
std
out
jl
push
sub
shl
adc
stos
cltd
pop
enter
das
pop
orl
jo
or
jno
lock
andl
rorb
fwait
adc
mov
out
orl
or
insb
sub
test
sbb
sbb
fld
jge
push
dec
xor
pusha
add
fxch
sbb
jmp
add
and
into
mov
jmp
mov
sar
sub
ja
add
outsb
xchg
cwtl
lods
inc
pop
aaa
or
push
jo
insb
add
jle
adc
and
xor
movsb
sbb
sbb
test
enter
or
cmp
enter
jg
fsubrl
lds
push
jg
jne
fs
enter
xchg
jg
int
insb
inc
jne
mov
ja
add
lret
sub
fs
fs
in
insl
push
dec
addl
ss
mov
push
cmp
xchg
mov
jle
stc
xor
in
push
daa
jae
sti
je
pushf
out
negl
push
adc
dec
push
xchg
cltd
test
ret
dec
sub
jne
push
adc
push
pop
stos
test
daa
cmp
jmp
and
and
hlt
add
mov
js
pop
and
xchg
or
jb
mov
sbb
and
adc
cs
push
pop
pop
push
add
sub
add
pop
pusha
test
mov
iret
in
mov
movsl
push
sbb
pop
mov
xchg
mov
jnp
pop
sbb
xchg
cmp
scas
fistpll
loope
inc
jl
outsb
rclb
mov
inc
sbb
cmp
push
dec
fdivrl
jle
sahf
jae
push
adcb
push
push
inc
dec
je
cltd
fdivl
inc
in
data16
sbb
add
or
push
push
xchg
push
ljmp
out
or
pop
in
mov
sbbl
add
xor
shl
sbb
mov
ja
push
cmp
cmp
pusha
add
rol
xor
inc
cmp
shrl
push
mov
fidivs
mov
jne
rdtsc
imul
push
nop
cmc
pop
imul
xchg
cmp
adc
and
pop
sbb
popf
add
sub
adc
jg
jne
mov
mov
int3
enter
les
xchg
cmp
cmpb
pop
pop
inc
xlat
ret
mov
sti
lret
push
pop
mov
loopne
and
and
add
add
add
add
inc
imul
shlb
xchg
mov
push
scas
mov
clc
call
shll
mov
mov
jne
pop
gs
sbb
mov
rcl
mov
insb
adc
mov
pop
jmp
loopne
or
pushf
ja
add
mov
je
fmuls
xchg
add
test
mov
push
cmp
add
cmpsb
jbe
dec
mov
xor
pop
and
jge
add
xchg
dec
or
ffree
pop
push
add
jne
sbb
push
pop
adc
add
je
or
rcrb
scas
adc
xchg
pop
mov
add
lea
or
push
xlat
push
push
mov
or
add
mov
pusha
or
xchg
and
mov
inc
lahf
ja
cli
insl
or
call
jg
js
dec
sub
push
and
or
xor
sbb
fdivrl
out
into
in
or
sub
adc
cmp
idivb
lods
test
out
push
mov
les
ja
xchg
adc
mov
sub
out
inc
push
jmp
adc
push
xchg
or
xchg
mov
pop
faddl
add
ret
mov
adc
and
adc
jo
call
dec
push
push
mov
jb
and
mov
push
xlat
fcoml
xchg
or
sbb
cmovno
daa
mov
lds
and
cmp
test
xchg
aad
ja
jg
mov
pusha
lods
cs
mov
arpl
or
pop
push
inc
gs
dec
cmpsb
adc
jb
adc
lods
leave
push
push
lret
sahf
repnz
push
dec
lock
mov
push
xor
inc
mov
jecxz
mov
test
push
notl
jl
cli
add
rorl
xlat
dec
xor
leave
push
xor
in
ret
push
and
inc
jmp
shll
push
mov
jno
mov
mov
add
les
mov
orb
xchg
pop
sub
sar
add
pop
repnz
nop
mov
push
nop
loopne
and
or
lcall
aaa
add
jne
test
push
call
sbb
push
lea
add
shll
cmp
push
cmp
push
or
xchg
pop
add
lods
pop
and
add
sbb
mov
test
test
xchg
or
sub
jo
fs
lea
xor
or
cmpsl
leave
cmpb
scas
stos
xchg
adc
mov
add
pop
fildl
sbb
adc
push
lock
adc
cmp
rclb
aas
ja
push
jg
sbb
inc
int3
mov
data16
inc
add
inc
int
push
les
or
xor
add
incl
mov
jne
andl
nop
inc
and
test
mov
push
adc
jnp
jp
adc
jne
push
or
stc
aam
or
sbb
jae
cmp
jbe
jb
pop
mov
xor
sbb
das
fs
xchg
insb
sbb
push
andl
cmp
mov
mov
add
sbb
jbe
push
sbb
pop
fwait
sub
sbb
icebp
push
or
ret
iret
add
pop
ret
inc
push
lds
les
jb
aas
jo
int3
mov
rclb
and
rclb
popf
add
cwtl
push
adc
add
enter
test
shll
repnz
and
dec
leave
mov
pop
lcall
push
xchg
push
adc
push
push
xchg
shrb
or
cmp
jae
or
cmp
adc
mov
cmp
add
mov
push
punpckldq
aam
leave
shrb
inc
or
jnp
mov
arpl
xchg
push
dec
stos
movsl
movsb
or
sbb
inc
add
cmpleps
aad
movsb
and
sub
inc
rorb
dec
add
test
shll
scas
add
jle
adc
rcrb
jecxz
dec
rcll
imul
pop
adc
push
mov
rolb
xor
stc
pop
jo
je
sub
fsub
sub
push
jo
push
add
add
xchg
xor
in
popa
adc
sbb
sub
adc
add
cmp
pusha
and
mov
push
inc
cmp
mov
les
test
ret
mov
mov
jns
and
xchg
cmp
adc
and
or
add
mov
sub
loopne
cld
push
pushl
and
and
jp
out
pop
sub
aad
cmp
hlt
jno
push
clc
test
cmp
jl
pop
and
mov
call
jp
icebp
aam
add
xchg
mov
add
or
push
xchg
adc
mov
dec
rorl
push
add
sbb
pop
lods
adc
fcmove
ret
or
pop
xchg
test
clc
and
pop
sbb
lea
pop
inc
js
cmp
shlb
sub
or
mov
push
test
and
sbb
pop
or
popf
mov
stos
jl
push
clc
shll
imul
xchg
ljmp
cld
cld
adc
call
clc
pop
jbe
insb
loopne
jg
in
inc
pop
add
sti
inc
and
fisttpl
jbe
sub
lea
sarl
loopne
mov
fwait
leave
ljmp
or
popf
outsl
jne
cltd
mov
je
icebp
adc
jbe
das
shll
xchg
cmc
leave
nop
sbb
sub
inc
repnz
jp
or
loope
pop
inc
sbbl
sbb
or
inc
xor
mov
xchg
xor
inc
push
inc
imul
push
inc
sti
jl
test
jg
cmp
add
mov
mov
xor
cltd
pop
mov
fwait
js
and
clc
push
and
in
jno
jecxz
jle
dec
add
jmp
or
movsb
shlb
push
imul
mov
jg
mov
mov
in
xor
push
cmpsb
jle
jb
mov
sbb
add
daa
adcl
mov
movsl
sub
xor
xchg
xchg
xchg
test
aam
lock
in
or
dec
xchg
mov
push
pushw
lret
lock
jecxz
or
mov
insl
xchg
movl
mov
cmc
or
inc
add
subl
imul
sub
mov
jns
add
xchg
jno
jne
out
adc
xor
push
bound
adc
subb
pop
add
movsl
icebp
and
push
mov
in
movsl
pop
pop
xchg
andb
sub
stos
add
movl
mov
and
jmp
sub
push
addl
xor
jp
jmp
ss
adc
popf
cmpb
or
insl
vdivss
loope
sbb
push
clc
test
popf
stc
test
and
popa
or
add
sub
adc
sbbl
pop
test
arpl
outsb
out
adc
lea
push
shlb
lods
inc
push
push
scas
push
ret
and
cli
add
jl
cmp
mov
push
jo
cli
daa
mov
xchg
fnsave
sbb
mov
fiadds
idivb
dec
sub
dec
jmp
adcb
sbb
in
mov
xor
xchg
xor
jge
mov
xor
cmp
xchg
and
push
push
pop
lea
lods
push
mov
rep
pop
adc
pop
or
mov
dec
sub
jmp
sub
jae
sub
shlb
add
mull
into
jae
sbb
andl
mov
and
jne
push
push
xchg
scas
mov
push
mov
cmpsb
xlat
push
hlt
push
sar
and
push
mov
mov
adc
xorl
rcrl
sub
mov
or
cmp
mov
xor
roll
jnp
push
inc
mov
adc
add
stos
mov
sbb
sub
and
jno
and
lock
adc
hlt
mov
mov
dec
pop
sbb
rolb
push
iret
test
fildll
inc
ret
or
das
pop
jae
sbb
mov
push
push
push
xor
adc
add
out
dec
pusha
int3
cmp
and
adcl
add
push
lret
dec
data16
lock
push
xor
or
dec
push
xchg
mov
je
push
sub
mov
test
xchg
test
adc
jno
decl
vorps
push
push
dec
sahf
shlb
xchg
push
in
xor
mov
mov
xlat
mov
adc
inc
les
fidivrl
add
loopne
add
mov
rolb
stos
cmp
sbb
sbb
pop
lock
and
sarb
dec
jne
lcall
mov
lea
mov
adc
push
loope
mov
adc
inc
loopne
and
and
push
gs
adc
outsb
push
ss
sbb
call
inc
push
test
adc
dec
nop
cmpsl
sub
xor
mov
dec
mov
add
adc
or
push
ror
and
inc
push
in
test
fistpl
icebp
or
ret
call
testb
and
or
add
push
dec
mov
cmpsl
push
and
movsl
jo
cmpsl
push
daa
addb
rcll
ret
push
or
cmp
fnstcw
inc
cmp
cmpb
lcall
jbe
add
dec
jl
lea
test
inc
mov
pop
hlt
sub
sar
xchg
inc
out
loope
repnz
add
rcrb
push
adc
add
cmp
dec
test
and
movsl
push
mov
sub
jecxz
dec
push
dec
xchg
es
imul
movb
xchg
adc
mov
loope
dec
imul
ret
sub
add
sahf
ja
lret
loopne
out
sub
xchg
and
mov
mov
ficomps
xchg
popf
sahf
or
xchg
int3
shrl
mov
jg
mov
cs
cmp
ret
adc
jecxz
and
rolb
add
ret
hlt
add
jl
les
adcb
ret
notb
je
cmpsb
sbb
jne
std
mov
add
xchg
lcall
push
mov
mov
jle
xor
jbe
adcb
test
or
pushf
sbb
js
test
jae
fwait
orb
add
push
cmp
add
xchg
xchg
xchg
adc
pop
mov
mov
aaa
aaa
test
inc
jmp
dec
ss
lock
in
push
mov
stc
jne
sub
mov
incb
pop
pusha
shr
data16
cmp
out
dec
shll
jb
jae
ror
mov
loopne
push
xchg
jmp
mov
mov
dec
hlt
jae
mov
dec
and
jg
push
rcl
xchg
add
in
adc
addl
xchg
jnp
push
dec
inc
sub
dec
inc
inc
inc
jl
jl
fists
inc
sub
jne
pop
jb
adc
adc
jp
jno
sub
dec
pop
mov
and
pop
inc
dec
xchg
cmpsb
cmp
pop
lods
add
xchg
jbe
jo
xchg
pop
dec
sti
inc
pop
xchg
xchg
cltd
mov
sub
mov
add
mov
lret
ret
adc
xchg
or
cmp
xchg
or
and
xchg
sbb
xchg
add
subl
jmp
mov
cmp
or
cmp
dec
cmp
nop
out
sarb
or
and
enter
and
or
mov
mov
and
adc
or
inc
add
sub
in
sbb
sahf
ja
sbb
mov
ja
cmp
jl
scas
pop
adc
arpl
and
adc
xor
add
xchg
loope
mov
push
fmull
test
mov
add
mov
stos
clc
cmpsl
jne
inc
xor
pop
cmp
adc
clc
cmp
sub
arpl
or
pop
dec
shlb
and
sbb
and
or
inc
adc
mov
xor
shr
push
dec
xchg
and
sbb
push
xor
lahf
and
sbbb
fadds
clc
sbb
jb
sbb
push
mov
sub
cmp
pop
cmp
cmp
test
inc
push
fsubrl
xchg
test
out
and
das
test
mov
cmpsb
lods
cmp
pop
pop
mov
xor
inc
sub
and
push
xor
or
xor
mov
mov
movsl
xor
lea
and
test
cmp
sbb
or
pusha
adc
pop
add
or
jl
mov
sbb
adc
int3
dec
outsl
sbb
xchg
sub
ds
pop
test
inc
push
push
mov
mov
mov
fs
xchg
xor
adc
mov
cmpsl
test
cli
jne
in
pop
push
or
mov
mov
in
mov
sbbl
movsl
ja
push
out
pop
push
dec
sub
xchg
aam
arpl
lock
cmp
pop
mov
insl
mov
int
mov
in
loop
aas
in
rol
fimuls
enter
repz
adc
xor
loopne
in
cmp
push
mov
pop
push
push
mov
xchg
sbbb
jo
pop
add
icebp
jae
inc
and
hlt
mov
pop
mov
add
hlt
push
mov
dec
loope
nop
or
mov
inc
mov
push
pop
xor
xchg
and
mov
sbb
xor
pop
in
insb
cs
push
add
fcmovu
pushf
dec
pop
lock
push
xor
add
adc
js
scas
inc
call
cmp
cmp
jbe
jno
addr16
cmp
xchg
lea
xor
lock
bndldx
push
jno
rcrb
loope
inc
pop
pushf
cltd
pop
or
adc
xchg
sub
arpl
or
cmp
jo
mov
xor
or
lahf
inc
lcall
cmp
add
or
aas
lcall
or
mov
sbbb
bound
popf
in
mov
insb
sbb
ja
cmp
sbb
jl
xor
mov
dec
sub
pop
jb
pop
jns
xchg
mov
push
loopne
pushl
sbb
ja
xor
cmp
insb
test
or
jmp
mov
pop
sbb
rclb
enter
lahf
andb
outsb
sub
pop
adc
inc
or
repz
pop
xorl
test
add
pop
sbb
imul
aas
aam
pop
xchg
fmul
add
sub
subb
in
mov
sub
das
add
insb
mov
add
pop
lock
je
mov
lock
dec
sbb
xchg
jl
andb
or
es
das
xor
sub
int
add
nop
mov
or
push
shl
xchg
outsb
sub
pop
or
xchg
push
pop
sbb
mov
popa
xor
pusha
nop
aam
popf
add
or
cmp
movsb
iret
nop
cmc
call
js
dec
and
jno
mov
inc
lcall
jl
call
add
shll
mov
pop
in
push
mov
push
jae
sbb
mov
cmp
add
ffree
mov
push
lahf
lret
out
mov
or
fadds
or
or
inc
xchg
sbb
ret
ja
sub
push
mov
fdivr
aam
add
pop
adc
fcomps
movsl
jbe
fs
dec
add
stc
fucomi
jl
mov
push
sub
and
push
add
push
ljmp
mov
inc
jb
or
sti
sbb
jl
mov
adc
adc
ficoms
jg
dec
dec
adc
adc
lock
lahf
mov
xor
push
inc
xchg
mov
out
mov
inc
add
sbb
into
cmp
adc
gs
push
aam
js
ja
cmpsb
mov
cmp
call
test
push
ret
int
rcrb
mov
rcrb
add
loope
scas
shlb
pop
js
lock
test
rorb
in
xchg
lahf
pop
daa
and
and
ret
add
xchg
std
js
in
pop
push
push
or
adc
or
fstpl
adc
cmpsl
orl
rolb
ds
inc
or
dec
gs
je
pusha
and
cwtl
add
jb
push
and
pop
push
cltd
addb
push
es
into
xor
dec
call
dec
jb
popa
push
ss
inc
fs
fldcw
and
shl
push
push
lds
fwait
mov
xor
loope
es
push
mov
lods
and
dec
stos
aam
add
adc
lcall
and
push
fldenv
sahf
push
test
xchg
mov
pushl
jo
mov
xor
fs
or
push
in
mov
or
insl
jp
fs
addl
shll
inc
push
shll
xor
movsb
pop
dec
xchg
dec
ret
jmp
stc
xor
cmp
repnz
movsl
aam
test
lcall
shlb
mov
xchg
test
push
push
lea
push
mov
inc
ret
sbb
pop
ja
mov
test
gs
push
sbb
stos
jb
cltd
add
popa
int3
sub
daa
test
mov
lock
repnz
aam
es
test
sub
dec
jb
dec
stos
aam
add
orb
enter
and
push
out
arpl
out
push
arpl
loope
add
push
cmpsb
aam
mov
and
jbe
call
sti
pop
enter
mov
mov
dec
faddl
test
add
fisttpl
ja
xchg
call
dec
loopne
cmp
jbe
jne
xchg
pop
jbe
pop
push
pop
mov
outsl
mov
pop
add
inc
mov
xor
outsl
inc
push
add
rorl
pop
mov
xchg
movb
xor
jp
das
and
movsb
adc
mov
push
cmpsl
add
xchg
jmp
add
addr16
mov
sub
das
or
enter
xor
inc
cmp
push
xchg
or
or
lahf
pop
xor
adc
lds
fbld
les
int3
popf
push
test
push
push
test
or
xchg
rorb
push
sbb
adc
dec
in
cmpsb
mov
or
mov
sbb
mov
sbb
js
cld
scas
loopne
dec
lods
jnp
adc
fs
pushf
test
mov
test
les
repz
pop
test
adc
jnp
dec
xlat
cmpsb
mov
or
ss
add
and
sarb
push
or
xchg
adc
push
or
push
cmpb
movsl
add
inc
or
test
cmp
jp
cltd
add
pop
enter
push
pop
test
lock
cltd
inc
add
and
inc
fwait
mov
cmp
push
fs
cmc
enter
lock
dec
mov
add
or
out
push
lock
push
add
dec
pop
inc
shll
insl
pushf
sbb
xlat
sbb
mov
mov
adc
enter
fistl
pop
pop
cmpl
stos
mov
nop
mov
add
rolb
hlt
dec
or
in
pop
fwait
dec
or
adc
movsb
shlb
int3
scas
incb
pop
xor
xchg
fwait
ljmp
push
push
inc
mov
push
sub
les
sarb
jno
xchg
stos
mov
adc
xchg
push
push
fsubrs
lea
cmp
mov
jo
rcrb
in
jo
mov
ljmp
push
aaa
fimuls
sbb
xchg
movsb
fsubr
adc
mov
lock
ss
adc
push
adc
pop
rolb
popa
addr16
push
push
xor
inc
pop
fldl
hlt
inc
or
push
push
sahf
push
or
lods
leave
xchg
mov
jnp
shlb
xor
shr
or
cmp
pop
add
add
cltd
add
inc
insb
adc
fiadds
or
pop
sub
mov
sub
mov
jle
das
jmp
sbb
popa
sti
cmp
sbb
jge
les
hlt
pop
sub
inc
push
mov
mov
jno
pop
xchg
cwtl
pushf
test
mov
test
pusha
cld
in
lods
push
lds
mov
pop
mov
mov
adc
fmul
shlb
pusha
js
mov
mov
enter
loope
cld
xor
mov
inc
nop
cmpsl
xlat
mov
jbe
jp
movsb
rcrb
mov
int
dec
cmp
test
inc
and
movsb
lods
jmp
imul
lcall
mov
and
ds
movsb
sahf
mov
mov
dec
xor
rolb
jle
aaa
adc
cmp
or
add
push
mov
or
mov
sbb
jl
sub
mov
xchg
pusha
push
movsl
mov
ljmp
scas
outsl
push
push
ss
push
pop
mov
jg
adc
mov
dec
add
movsb
adc
sbb
mov
pushf
flds
cmp
and
mov
mov
sti
pop
xchg
or
sbb
inc
std
fnstsw
mov
hlt
mov
adc
push
adc
outsl
adc
sbb
mov
xchg
jo
xchg
adc
and
sahf
mov
dec
in
cmp
cmpsb
out
jmp
cld
test
mov
cmp
pop
pop
sbb
mov
lock
mov
inc
xorl
lods
popa
sbb
stos
pusha
add
insl
int
mov
cmpl
push
ds
adcb
outsl
xlat
push
push
xor
repz
mov
pop
cmp
pop
mov
je
js
mov
mov
xchg
or
addr16
push
movsl
sub
loopne
or
inc
mov
pop
jle
or
scas
mov
loop
jb
andl
jl
icebp
push
sbb
ds
sbb
xlat
lods
cmp
add
or
cmp
cmc
mov
sub
clc
sarb
repnz
push
sbb
sub
inc
adc
push
insb
mov
lret
push
cmpsb
jp
inc
xchg
jne
ljmp
mov
imul
dec
out
mov
test
daa
call
mov
dec
pusha
adc
test
jg
sub
sbb
mov
gs
mov
inc
inc
ror
and
push
jl
outsb
cwtl
xchg
insb
vandnpd
dec
cmp
imul
add
mov
lock
sbb
pop
pushf
cmpsb
xchg
cmpb
xor
sub
dec
inc
in
repz
loopne
lea
xor
xchg
push
add
stos
fs
fsubr
and
sub
mov
push
cmpsb
jne
xchg
inc
mov
push
les
and
adc
inc
adc
and
pushf
sti
adc
ja
into
stos
push
push
popa
jp
sbb
jle
push
pop
xor
pop
hlt
add
sub
lock
cmp
aam
mov
push
shlb
push
xchg
cmp
cmpb
movsb
push
adc
mov
adc
push
pcmpeqw
cmpl
sub
mov
insl
or
mov
adc
jae
sbb
jbe
push
xor
sti
lea
sbb
movsb
sbb
cmpsl
and
cmpsb
or
and
aam
inc
lea
push
lahf
mov
in
dec
pop
ret
bound
jmp
pop
pop
sub
daa
jmp
push
lahf
call
dec
and
mov
imul
fcos
rcll
js
lret
push
ret
pop
sub
push
in
fwait
or
lea
and
inc
movhps
fdiv
cmpb
fsubrs
or
popa
push
mov
sti
cmp
sub
xor
and
xchg
js
pusha
loop
fdivl
inc
lods
adc
push
arpl
call
test
jg
cwtl
sub
add
or
cwtl
not
add
add
pop
push
fsubrl
inc
je
mov
adc
loopne
mov
mov
dec
add
in
fwait
mov
add
xor
mov
mov
or
push
push
sub
das
loopne
lock
popf
sbb
adc
mov
fdivs
repnz
dec
mov
push
mov
jns
fists
adc
mov
sbb
lds
mov
and
mov
popf
sub
loop
rcll
mov
xor
jge
ss
mov
inc
imul
subl
dec
cmp
outsb
adc
stc
xor
js
dec
mov
arpl
pop
sbb
cmpsb
or
push
xchg
cmp
jg
push
or
hlt
mov
add
inc
lods
lods
lock
push
and
sub
clc
cmp
pop
std
xorl
outsb
jp
je
jp
cmp
je
data16
mov
jmp
fmull
mov
ja
inc
ret
jg
push
add
outsb
adc
lret
jbe
or
insl
outsb
add
push
jge
push
shrb
sbb
xchg
push
out
lock
jp
outsb
in
add
and
pop
fstpl
sbb
and
dec
xchg
inc
cmp
mov
adc
jmp
or
jge
cmpsb
dec
xchg
fdivrl
cmp
fsubs
sbb
sbb
in
inc
mov
inc
inc
jmp
inc
jo
je
in
add
addr16
and
adc
lock
fcmove
adc
sahf
add
add
movsl
push
or
les
sub
mov
adc
sbb
repz
lret
jmp
pop
cmpsb
inc
sbb
cwtl
adc
call
mov
fwait
lret
roll
adc
adc
add
in
mov
sub
shr
adc
sub
sbb
or
incb
pop
mov
inc
rcrb
pushf
mov
fcoml
scas
add
dec
and
pop
xlat
out
and
incb
push
sbb
cmp
mov
xchg
les
mov
sub
cmp
push
jns
fmuls
jl
pop
or
cmpb
inc
movsb
xor
orl
mov
stos
add
lret
in
jns
cmp
cmpb
adc
push
mov
loope
clc
in
and
testb
push
fisubl
inc
sbb
repz
cmp
and
adc
mov
xor
cmp
xchg
push
jle
in
or
popa
sbb
or
mov
xchg
lret
or
jmp
shlb
dec
push
adc
xor
push
divl
and
xor
jo
xchg
sbb
push
into
scas
rclb
je
dec
add
std
mov
cmp
add
sbb
cltd
xchg
ds
in
adc
cmp
lea
mov
test
add
out
pop
jno
test
mov
negl
xor
lcall
and
pop
adc
sub
outsl
push
subb
sbb
adc
cmpsb
shl
push
cmc
flds
jno
dec
xorl
inc
iret
pusha
and
test
and
cwtl
scas
loope
add
add
jle
inc
xchg
insb
mov
ret
jg
mov
std
hlt
mov
cmp
push
roll
push
adc
add
jo
fwait
in
and
enter
xchg
add
add
xchg
stos
inc
scas
and
add
push
cmpsl
inc
aas
mov
test
and
inc
test
add
or
inc
insb
popa
jl
dec
lds
into
dec
cmc
and
test
stos
dec
outsb
and
rclb
imul
je
mov
insb
call
pop
xlat
ss
jno
inc
inc
adc
je
das
sbb
cmp
sbb
pop
cmp
fstpl
sub
push
or
sub
xor
std
and
inc
push
stos
push
add
cmp
jo
test
push
pop
test
inc
sbb
mov
dec
pop
add
inc
dec
cmp
mov
xchg
mov
out
push
xor
push
call
push
in
cmp
imul
loope
push
lea
dec
mov
add
or
xchg
xor
jle
add
int3
inc
cmc
mov
call
pop
inc
or
sbb
dec
notl
daa
mov
testl
mov
jl
sub
das
adc
outsb
movsl
add
ret
pop
cli
mov
mov
xor
loop
add
shr
scas
add
js
xchg
fcom
sbb
adc
testl
clc
fcomi
out
mov
ret
shr
cmp
jbe
add
jmp
add
jae
xor
pop
rolb
ret
and
dec
loop
inc
dec
addl
mov
mov
or
mov
lds
dec
adc
inc
sub
aam
lcall
dec
mov
jnp
punpckhbw
sub
jo
scas
sub
xor
mov
sub
mov
outsb
mov
mov
mull
mov
add
xchg
test
and
inc
daa
mov
scas
inc
and
inc
imul
mov
aaa
fwait
ret
aas
cmp
or
ja
rcrb
mov
jl
dec
fsubrs
shlb
enter
sub
add
or
xor
or
jmp
mov
fdiv
xor
popf
push
or
pop
arpl
xor
jb
push
nop
mov
xor
pop
inc
lret
out
mov
aad
loopne
push
xchg
add
outsb
sub
sarb
mov
fisubs
xor
adc
jns
or
shrb
andl
lds
xchg
scas
cmpb
inc
insl
pop
in
inc
sbb
ficompl
xor
adc
mov
and
mov
insb
ret
mov
mov
shrb
push
inc
adc
inc
call
inc
inc
scas
xchg
push
or
push
sbb
nop
xchg
cmp
les
repnz
in
add
cmp
pop
mov
popl
mov
lahf
call
repz
or
enter
xor
sub
inc
imul
rol
mov
lock
sub
push
push
add
iret
xchg
cmpb
xor
or
xchg
pop
or
jmp
insl
add
adc
dec
jne
push
inc
add
sbb
add
push
inc
mov
aam
mov
or
jecxz
movsb
scas
jns
dec
pop
cs
ss
test
sbb
in
push
icebp
dec
sub
xor
sbb
push
ucomiss
push
or
mov
mov
shlb
and
adc
adc
fwait
adc
shl
adc
mov
lods
mov
xor
ss
stos
mov
adc
and
test
enter
repz
pop
loop
jns
fcoms
mov
flds
push
jnp
in
push
mov
pop
adc
xchg
ds
and
pushf
mov
and
insb
pop
push
lock
lods
adc
les
pushl
push
xchg
iret
xchg
add
mov
mov
fistpll
fadds
or
or
mov
adc
fsubrs
aam
push
mov
xchg
ret
icebp
xor
jmp
aaa
pop
and
dec
xchg
scas
jb
roll
enter
xor
xchg
jne
mov
ja
jl
lds
movsl
and
jl
add
mov
fisttps
sub
and
sub
xor
sub
clc
hlt
xor
push
pop
push
mov
adc
stos
testl
pop
insb
mov
adc
es
popa
lret
or
fstl
push
xor
loop
or
pusha
cmp
je
push
addr16
sub
inc
push
dec
das
mov
or
adc
int3
inc
ret
pop
inc
or
sbb
movsl
fabs
or
push
mov
mov
in
or
add
xchg
dec
xor
aaa
and
jns
pop
xchg
jecxz
scas
or
mov
loopne
cmc
andl
lea
stos
mov
mov
push
sti
push
add
or
jg
ljmp
int
push
mov
cmp
jne,pn
inc
and
ljmp
sub
ret
lret
push
add
and
jmp
jge
and
rolb
and
orb
xchg
sub
mov
pushf
xor
cmp
mov
sarl
rcrl
testl
mov
dec
lock
inc
push
loopne
jo
mov
inc
and
mov
xchg
inc
xor
sub
add
xchg
leave
or
jo
cmp
add
cli
push
sub
repnz
jp
sbb
xor
rorl
loopne
add
mov
jo
loop
sbb
inc
movsl
pop
mov
xor
pusha
fs
xchg
test
arpl
push
lcall
sbb
stos
push
dec
inc
imul
ret
imul
jae
or
jecxz
cmp
loopne,pn
mov
mov
xchg
pop
cmp
imul
sbb
and
mov
in
mov
clc
mov
push
cmpb
jmp
mov
scas
nop
xchg
push
cmp
push
into
pushf
leave
les
sub
jbe
push
adc
adc
es
loop
stos
jne
xchg
pop
or
sub
lea
add
add
xor
pop
je
inc
outsl
out
loopne
add
mov
cmp
pop
cmpps
out
xchg
lahf
mov
les
lret
inc
repz
mov
movsb
xchg
testl
loopne
inc
fstpt
cmp
jl
or
cwtl
shll
rep
mov
dec
push
addb
adc
les
pop
or
aam
inc
mov
lret
inc
mov
enter
sti
push
jl
push
xchg
mov
sbb
arpl
jl
pop
jnp
adc
aaa
loopne
inc
dec
adc
pusha
rcll
cmpl
hlt
jle
push
pop
sub
push
insl
lahf
aaa
push
jne
in
loope
xor
push
dec
jbe
popa
xlat
cmp
push
mov
sti
sbb
jmp
ljmp
pop
jb
popa
pop
cmp
add
leave
lret
and
sbb
and
aaa
xor
xchg
dec
pop
jmp
push
fmull
dec
adc
sbb
sub
loope
les
mov
dec
dec
cmp
inc
js
dec
test
xor
in
insl
mov
mov
pop
mov
cltd
repnz
lret
push
cmp
hlt
xor
and
add
mov
shll
mov
sbb
arpl
inc
or
nop
inc
mov
add
and
and
pop
mov
push
stos
dec
lea
add
test
dec
popa
or
add
repnz
adc
incl
or
mov
fs
mov
or
adc
test
mov
enter
in
stc
mov
xor
sti
aam
push
dec
nop
incb
in
movsb
pushf
lods
mov
int3
mov
repnz
in
cld
rclb
sub
inc
xor
fmull
xorb
mov
je
loope
mov
mov
jl
mov
popa
stos
xchg
outsb
mov
cs
mov
pop
mov
add
lcall
mov
dec
aad
into
sbb
mov
xor
aaa
rcll
mov
roll
add
xor
mov
sbb
mov
dec
into
push
mov
xchg
jl
xchg
dec
enter
in
jl
popf
add
fs
js
adc
adc
movsb
and
xchg
psubq
add
lahf
mov
mov
push
call
push
jae
fwait
xor
sbb
stos
jo
test
inc
inc
push
jge
mov
add
lcall
cmp
je
sbb
and
inc
cld
lahf
cmp
jne
push
mov
aad
lock
outsb
dec
pushl
scas
loopne
fsubr
sub
push
jns
out
xor
outsl
into
inc
lods
mov
push
and
loopne
add
jmp
xor
push
or
movsl
sbb
nop
sub
add
or
fistl
jl
jno
sarl
aaa
shll
sbb
add
push
xchg
fwait
cs
mov
or
xor
adc
xchg
xor
std
push
mov
hlt
loopne
xor
or
sub
and
mov
mov
push
push
adc
mov
lret
addb
dec
inc
shlb
jne
and
es
fadds
in
sub
sbb
push
sbb
clc
loopne
and
jge
jbe
imul
js
mov
mov
test
decb
imul
or
gs
dec
inc
in
push
push
cmc
test
outsl
xlat
mov
rolb
fsubrl
daa
xor
push
test
jmp
or
rclb
in
fstpt
pop
icebp
mov
and
add
push
in
pop
rcr
mov
push
pop
sub
or
lods
je
mov
pop
and
sub
out
lds
push
jno
mov
and
push
pop
mov
jno
divw
mov
iret
xlat
call
vunpckhps
or
mov
xlat
inc
shll
xchg
xchg
sbb
gs
add
sub
push
scas
mov
stos
lock
mov
scas
cmp
in
fildll
adc
xchg
jmp
pop
xor
jno
ds
mov
ja
sbb
cli
je
cltd
pop
add
sbb
lret
data16
stos
pop
add
cmpsl
mov
in
add
leave
xor
sub
les
add
and
xor
mov
pop
loop
xchg
leave
jne
mov
adc
cmc
ljmp
rolb
ss
adc
mov
push
push
adc
or
cmpsb
mov
or
push
lcall
xchg
adc
call
dec
mov
xchg
push
push
pop
or
jo
sub
repz
jo
outsl
mov
pop
cmp
pop
std
sbb
mov
jne
mov
jmp
fldl
xchg
cli
insb
adc
aam
xlat
or
mov
jl
inc
packssdw
icebp
lock
pop
xor
mov
jecxz
sbb
fnstsw
dec
rcrb
movsl
push
push
movsl
jge
sarb
inc
hlt
fstl
dec
fcomp
fnstsw
call
and
inc
clc
pop
fsubr
pop
faddp
andl
enter
sbb
sub
test
fdivrl
cs
dec
aam
mov
mov
and
mov
xchg
lods
add
push
into
sbb
or
andb
xor
add
add
lods
or
and
hlt
jge
xor
out
fdivrs
add
scas
stos
dec
fstpl
inc
add
jmp
mov
leave
lea
push
or
adc
adc
pop
dec
xchg
add
into
push
xchg
and
pop
scas
pop
movsl
bndldx
mov
xchg
push
sub
cwtl
out
stos
ss
mov
stos
cmp
mov
int3
dec
jecxz
rorb
jae
push
add
add
fnsave
pop
in
sub
mov
push
inc
inc
inc
cmp
ud0
ret
jmp
mov
cmp
jge
add
or
xchg
mov
dec
leave
mov
and
jmp
roll
sub
in
jmp
or
inc
fldenv
add
adc
rorb
pushf
push
lods
push
pop
test
xor
sub
jg
jne
pop
push
sub
jne
push
push
adc
or
imul
xchg
mov
ret
or
imul
inc
add
xchg
dec
inc
cmpsb
sbb
xchg
jns
mov
push
adc
push
mov
ret
or
outsb
mov
insl
jp
adc
or
in
mov
mov
bound
adc
shl
jmp
jb
jmp
adc
js
push
cmp
pusha
hlt
stc
adc
ja
mov
and
pop
aam
insl
repz
ret
inc
sbb
ret
pop
les
decl
inc
adc
sub
mov
push
xchg
xchg
int
hlt
clc
mov
pop
lcall
xor
add
sbb
repnz
dec
cs
jae
cmpsl
sub
push
add
mov
xor
adc
imul
inc
cltd
or
push
in
pop
push
mov
shlb
jle
cmpsb
xchg
sub
test
and
or
dec
sub
xchg
sub
scas
dec
out
ret
adc
dec
pop
stos
xor
insl
mov
xor
fadds
rolb
push
shlb
mov
inc
sahf
or
clc
inc
loopne
jo
insb
add
xchg
je
xor
mov
adc
outsb
push
mov
clc
jo
mov
inc
add
rolb
lds
add
mov
cmp
pop
mov
xor
ret
das
pop
push
or
add
cmp
sub
sub
bound
bound
push
or
jmp
inc
pop
inc
add
mov
add
push
dec
sub
jmp
or
sub
push
pop
loop
mov
aas
pushf
sbb
adc
push
lea
push
xchg
sbb
clc
jae
or
shl
lret
add
cmp
and
lock
rcll
jl
clc
mov
pop
pop
mov
gs
add
test
lahf
inc
push
sub
jns
jae
push
mov
mov
inc
mov
lock
mov
add
and
out
enter
jb
in
or
pusha
sbb
and
sub
cmp
inc
jmp
push
cltd
push
in
dec
jo
sbb
mov
jb
out
push
clc
mov
es
mov
mov
inc
xchg
lods
sti
adcl
mov
adc
add
push
cmp
push
dec
rorb
out
out
sahf
fwait
xor
sbb
add
sub
mov
outsl
fisubs
mov
imul
test
xchg
push
sahf
rclb
add
incl
rcr
orb
mov
fidivl
mov
or
lcall
dec
add
dec
adc
lods
add
inc
js
mov
sbb
mov
imul
dec
jmp
cmp
mov
push
cmp
arpl
dec
xor
popa
js
sbb
sub
lods
fsubl
sub
in
cmp
sub
pop
or
mov
xchg
adc
rclb
or
mov
mov
pop
lods
push
push
icebp
test
mov
and
test
and
fwait
jp
xchg
sti
call
mov
lret
ja
insl
movb
and
mov
dec
add
jmp
cmpl
mov
lcall
int3
mov
xor
xor
adc
inc
xor
fisttpl
and
jae
testb
fiadds
xlat
jmp
push
and
shll
mov
mov
sbb
adc
ret
dec
test
popa
mov
out
je
loopne
enter
adc
dec
and
or
inc
sbb
push
inc
and
or
ljmp
cmp
call
mov
cmp
iret
dec
add
insb
sub
mov
shlb
mov
stc
inc
push
inc
in
inc
mov
or
cmp
inc
loope
add
or
dec
jmp
mov
xchg
xor
push
test
cmp
pop
push
xchg
push
in
lock
cmp
push
inc
push
xor
xor
xor
jne
loopne
push
and
into
lock
sub
clc
test
jmp
push
jbe
ret
lods
inc
rol
dec
adc
pop
and
pushf
inc
dec
lea
and
cmp
mov
leave
inc
mov
inc
sahf
xchg
js
outsl
add
lret
repz
stc
xor
jmp
and
xchg
adc
mov
rcrb
into
or
imul
les
inc
je
fistps
out
aam
into
dec
imul
enter
push
adc
xchg
push
fldt
test
test
ljmp
xchg
sbb
in
pop
pop
add
mov
sbb
test
js
jbe
push
push
push
push
mov
add
add
mov
andb
pop
icebp
loopne
test
jne
lcall
pushf
popa
add
xchg
fisubs
jb
enter
xor
test
pop
repnz
add
xchg
fbld
sar
test
roll
mov
outsb
or
cmp
fwait
inc
push
popf
jmp
xchg
ret
es
insb
jb
sub
pop
clc
jl
jno
push
xchg
sbb
addr16
cmpsb
rcrb
loopne
pusha
pop
lcall
sbbb
loopne
inc
add
sbb
push
jns
les
add
jb
or
or
testl
sti
sbb
ljmp
sub
lcall
rclb
mov
dec
aaa
rorb
push
ret
jl
inc
cmpsl
cmpsl
addb
push
and
test
sar
mov
imul
push
data16
pop
mov
in
jmp
push
sub
stc
cmc
out
movsl
pushf
mov
mov
push
adc
inc
dec
sub
es
ret
push
jg
int3
cmp
jg
push
jp
ret
cmp
adcb
outsb
ret
jmp
xor
push
push
push
add
push
hlt
jge
inc
add
add
mov
test
dec
imul
lret
add
pop
pop
imul
or
xchg
mov
mov
in
cwtl
popa
out
aam
sub
mov
or
subb
adc
dec
shrl
lahf
roll
push
popa
scas
paddsb
fld
pop
mov
inc
add
out
adc
push
pop
repz
jmp
inc
add
or
lods
roll
mov
scas
jecxz
add
out
call
dec
add
ret
fcom
aas
in
leave
push
int3
sub
or
sbb
xchg
mov
cmpsl
push
clc
imul
sarl
inc
and
bound
lret
stos
jmp
push
mov
pop
testb
es
sbb
aad
sub
sub
lahf
andb
pop
and
cli
pop
and
sbb
loopne
dec
je
sub
addl
sub
push
sbb
mov
mov
es
adc
adc
add
xor
xor
push
xchg
pop
add
xchg
push
sbb
pop
jne
aaa
scas
push
sub
cltd
jno
nop
and
xor
pop
ret
add
dec
sub
add
les
stos
aad
push
push
arpl
jo
outsb
enter
and
mov
fisubl
adc
fistpll
mov
xchg
push
insl
sub
pop
inc
jmp
adc
data16
fistpl
and
jl
ds
clc
rol
ret
xchg
mov
dec
mov
mov
push
fistpl
insb
dec
std
jg
and
inc
sbb
negb
jge
loop
data16
adc
jnp
jmp
lock
and
push
dec
xor
xor
jne
clc
lea
mov
and
jnp
inc
and
sub
push
xor
add
cmp
add
in
sub
cmp
inc
sbb
dec
push
pop
pop
mov
aam
sub
xor
adc
outsl
out
pop
sbb
iret
inc
loop
xchg
jne
cmp
or
andl
push
gs
sub
js
xor
add
pusha
enter
inc
xor
cmp
or
std
movsb
ret
sbb
ret
and
inc
insl
pusha
dec
pusha
mov
adc
stos
aad
dec
inc
mov
data16
jne
leave
and
outsl
add
aas
push
in
adc
adc
push
xor
addl
mov
or
out
loop
sub
mov
xchg
les
outsb
jp
push
push
int
xor
ja
cmp
in
cli
std
sub
push
push
mov
cmp
repnz
or
mov
jb
push
sbb
in
sbb
cs
or
sub
nop
add
or
dec
ljmp
add
sub
sahf
dec
pop
sbb
addb
filds
jmp
dec
jbe
pop
out
xor
jbe
cmpsb
xor
xlat
sub
test
loop
imul
dec
jae
ds
aaa
adc
mov
inc
xorl
jle
and
xor
sar
add
cmp
ja
pop
adc
mov
inc
adc
push
xchg
dec
aam
clc
push
push
iret
stc
inc
jp
fcompl
fadds
push
nop
push
push
inc
les
pop
mov
movsb
add
nop
sub
add
jbe
push
xor
mov
jmp
int
sbb
xor
sub
cmpsl
adc
inc
mov
inc
xor
cltd
sbb
dec
add
rolb
jecxz
ret
cltd
and
pusha
lea
mov
xchg
notb
popa
or
je
sub
lcall
push
ds
and
push
ret
pop
jl
xor
lret
into
xchg
add
fadds
pushf
hlt
pop
cmp
pop
fidivs
sbb
sub
dec
push
cmpb
es
loopne
push
punpckhdq
jl
shrl
xlat
and
and
enter
dec
stc
mov
sbb
sbb
imull
pop
je
push
mov
cmp
adc
cmpsb
inc
cmp
or
or
imul
mov
loop
mov
inc
and
jo
mov
jns
pop
sbb
repnz
push
jmp
push
sbb
je
and
dec
cmp
int
stos
xor
xorl
mov
mov
stos
les
dec
xor
pop
insb
push
jge
lret
xor
dec
push
jno
lea
rcrl
sub
jne
cs
test
xchg
sahf
add
add
add
adc
dec
bound
mov
mov
sbb
pop
mov
xor
or
stc
xlat
push
decb
adc
or
sbb
or
outsl
nop
xor
dec
js
add
fwait
pop
push
ss
add
push
adcb
xchg
cld
adc
cld
adc
je
push
daa
fiaddl
fs
stos
or
lock
test
mov
and
add
aad
fstps
push
mov
adc
movsl
dec
test
push
mov
rcll
rclb
or
adc
xchg
add
push
sbb
pusha
mov
and
or
je
in
rorl
aas
aad
xchg
dec
inc
aam
fwait
mov
stc
mov
adc
mov
pop
pop
jp
sti
adc
in
leave
xor
das
cmpl
popa
xchg
out
and
mov
push
or
ja
add
xor
insl
popa
and
stos
jae
sbb
in
mov
hlt
pusha
jge
dec
inc
adc
push
data16
adc
jb
enter
fstpl
jge
pop
adc
popa
xor
or
push
xor
push
cmp
mov
ret
mov
data16
aas
jne
aam
mov
jmp
add
aam
add
movsl
lcall
scas
or
cmp
mov
out
add
and
inc
push
arpl
dec
arpl
loopne
add
pop
arpl
xor
fwait
mov
push
loop
push
pop
fdiv
je
adc
jbe
cmp
out
add
sub
ss
adc
out
leave
jne
push
jmp
cmp
xchg
mov
xchg
mov
push
rol
mull
add
mov
pop
xchg
push
dec
inc
push
xor
or
mov
and
cld
add
das
xor
les
repnz
push
cmpsb
fnstcw
adc
xchg
stos
mov
adc
sbb
cmpsb
dec
test
mov
test
enter
mov
mov
push
les
mov
inc
cmp
or
add
test
or
pusha
addb
in
inc
xor
decl
aaa
fisubrl
in
xor
test
imul
mov
out
mov
fxch
adc
addb
xor
mov
mov
mov
jo
pop
push
subb
hlt
jecxz
or
pop
push
xor
jp
scas
dec
sub
or
adc
jmp
imul
cmp
enter
or
cmp
mov
or
lahf
jmp
pop
xchg
xchg
dec
pushf
cltd
xor
movsb
dec
icebp
outsl
dec
ret
or
sti
ss
add
outsb
adcl
push
dec
idiv
stos
movl
dec
and
and
rol
pop
add
dec
arpl
inc
stos
movsb
fstl
add
xchg
or
pop
inc
fwait
leave
aas
mov
shll
mov
mov
data16
loope
mov
xor
pop
mov
dec
and
shll
adc
loop
sbb
adc
loope
push
in
aaa
xlat
ret
xor
push
cwtl
xchg
xor
jo
fisttps
inc
push
imul
sub
pop
add
pushf
inc
add
sub
mov
xchg
jmp
jecxz
test
pop
push
das
test
lock
xchg
and
adc
sub
and
xchg
mov
in
or
lock
data16
mov
addr16
arpl
push
mov
jbe
fdivrs
add
sub
pop
add
outsb
inc
mov
xchg
ret
dec
xchg
fldl2t
adc
je
pop
leave
push
adc
jecxz
imul
fadds
add
push
or
jl
mov
push
pop
fwait
dec
and
into
enter
adc
push
xor
add
nop
or
jns
xor
test
adc
or
mov
dec
or
push
loop
idivb
cmpl
popf
shrb
ficoml
cs
imul
jl
adc
icebp
imul
add
je
sarb
xchg
xor
lahf
sub
pop
repz
jo
and
fs
sub
fsubrs
ds
icebp
adc
and
pushf
sti
dec
icebp
icebp
imul
mov
imul
adc
dec
hlt
jl
push
push
push
jg
push
inc
dec
add
xchg
cmp
loopne
cmp
shll
xor
hlt
stos
cli
push
mov
daa
test
pop
rcrl
and
sub
loopne
and
lahf
sub
stos
xchg
cltd
add
icebp
mov
out
rcl
rcrl
jecxz
shrb
or
xor
icebp
jno
mov
nop
mov
pop
or
cmp
fldl
mov
or
or
jecxz
pop
gs
loope
inc
inc
dec
add
dec
push
sub
inc
pop
inc
mov
and
je
cwtl
sub
sub
in
jno
mov
xchg
movsl
fs
into
idivb
nop
push
push
pop
movsb
xor
js
test
cwtl
lds
add
adc
nop
pop
loopne
aad
mov
inc
sbb
inc
or
popf
idiv
xchg
xchg
in
push
adc
test
shl
push
cli
fimuls
sub
push
and
cwtl
pop
jp
mov
jbe
jne
test
shlb
pop
mov
movsb
sbbl
popf
add
pop
xor
adc
enter
add
mov
lahf
fadds
repz
push
bound
xchg
cs
in
or
jecxz
lea
fadds
jmp
cmpsb
mov
fldl
dec
push
sub
add
and
scas
fs
add
add
add
push
push
or
xor
push
enter
push
repnz
push
adc
dec
fsubs
mov
test
or
jae
lret
dec
add
scas
mov
rclb
push
push
out
testb
push
push
push
xor
or
rcll
bound
cs
sub
sub
mov
adc
or
fisubrs
inc
dec
stos
dec
or
sahf
or
sbb
roll
push
push
dec
push
cli
ss
add
or
sub
cmp
push
mov
push
cmpsb
adc
arpl
push
stos
loopne
and
adc
sbb
push
sub
sbb
cld
add
jae
add
dec
std
adc
fs
jb
adc
lea
or
mov
add
je
adc
rcr
ret
in
push
mov
rcrl
inc
push
inc
or
aad
pop
adc
lock
pop
enter
adc
cmp
and
clc
lods
fsts
pop
outsb
jne
shld
xchg
in
mov
and
hlt
mov
push
sbb
add
shlb
in
dec
addb
sbb
lods
aad
jnp
and
pop
out
xor
adc
in
push
adc
in
nop
jno
xchg
dec
sbb
xlat
mulps
or
push
jae
mov
out
add
jmp
push
add
and
cmp
sub
inc
movsb
stos
cmp
dec
lock
jo
sub
add
and
cltd
jbe
mov
loope
jmp
in
push
lea
and
mov
mov
or
inc
dec
in
inc
add
pop
and
jmp
mov
rolb
push
push
adc
adc
loop
dec
adc
and
fdivrl
scas
fsubrs
add
sub
push
mov
test
mov
jge
ret
jmp
xor
pop
lret
fsubrl
push
bound
inc
insl
mov
xchg
mov
mov
test
data16
push
cmp
imul
std
out
stos
add
rclb
mov
ljmp
out
xchg
out
push
test
nop
cld
les
adc
stos
sub
xor
in
rcrl
mov
hlt
mov
jbe
xchg
mov
insl
mov
jno
and
adc
adc
push
cmp
rol
jge
or
cmp
or
rcrb
cld
mov
sbb
je
leave
adc
out
add
test
test
xchg
out
rcr
mov
mov
scas
jp
mov
stos
es
ja
cs
pop
stos
adc
das
push
push
xor
sub
and
mov
enter
pop
push
rorl
jno
push
add
ss
imul
stos
ljmp
test
mov
jle
mov
push
or
shlb
or
or
mov
gs
imull
adc
int
inc
jo
fstpt
push
popa
outsl
lea
and
push
mov
enter
test
test
inc
add
popa
add
stos
cld
cs
js
mov
pop
add
push
jle
sbb
cmpsb
mov
test
mov
in
or
loope
sbb
xorb
cltd
inc
sub
jbe
je
push
push
sahf
insl
or
out
push
and
xadd
daa
shlb
inc
xor
add
pop
jns
pop
imul
push
loopne
push
shrb
in
test
adc
inc
mov
sbb
imul
adc
lcall
adc
loop
loop
push
or
push
shl
push
mov
pop
pop
mov
mov
or
mov
adc
xchg
daa
stc
dec
repnz
test
cmp
or
cmp
add
iret
push
mov
lcall
dec
loopne
sub
aam
cmpsl
frstor
pop
cmp
pop
adc
or
sahf
lret
in
js
bound
iret
mov
sbb
jge
push
sbb
les
shr
push
cmp
pop
repnz
in
wbinvd
dec
gs
or
enter
or
cmpb
ror
and
pop
ror
int3
orl
fisubs
xor
mov
inc
and
add
in
cmp
mov
push
sbb
loope
adc
and
cld
movsb
jle
or
mov
shr
mov
and
mov
mov
dec
dec
pop
out
jle
jmp
cmpb
and
adc
adc
mov
push
test
xor
xchg
lea
mov
mov
mov
and
decl
cmp
jb
jbe
scas
dec
mov
je
ja
push
push
adc
add
addb
adc
add
cwtl
jbe
cmp
jo
jne
int3
dec
push
xchg
mov
dec
push
lea
cli
fcompl
adc
rcrl
inc
add
mov
sub
ja
sub
dec
mov
pop
adc
dec
push
icebp
addl
pushf
cmp
js
aas
add
push
mov
sub
clc
aad
push
imul
pop
xchg
pop
cmp
jmp
cmp
push
add
hlt
push
addl
add
xor
mov
push
rorb
dec
outsl
push
dec
ja
adc
lret
pop
mov
ljmp
inc
xchg
repnz
orb
leave
dec
add
add
leave
leave
leave
leave
push
pop
or
out
out
or
jnp
or
jbe
jmp
or
out
push
jmp
por
jmp
adc
pop
out
out
adc
push
adc
dec
adc
dec
adc
out
push
jmp
pop
jmp
sbb
xor
out
out
jmp
sbb
es
and
out
push
jmp
pop
jmp
and
or
add
and
and
test
adcl
jae
add
push
fwait
dec
jecxz
mul
das
and
push
add
jns
nop
cwtl
mov
sahf
out
ror
aad
out
sahf
out
in
out
repz
jnp
clc
std
add
out
sahf
out
sbb
and
sahf
das
xor
ds
dec
jg
sarl
enter
add
and
or
or
push
movups
adc
adc
push
pop
sbb
sbb
sbb
push
pop
and
mov
xchg
and
aas
push
imul
add
sbb
rcr
mov
lods
cmp
in
push
inc
mov
xchg
mul
or
cmp
cmp
xchg
out
imul
or
shlb
push
stos
shrb
and
out
pop
mov
fisubl
mov
inc
pop
das
push
add
dec
mov
aaa
xor
mov
or
decl
sbb
adc
pop
sti
cmp
loope
pop
mov
xchg
dec
subb
mov
lea
loopne
cmpb
add
cs
lret
add
nop
add
hlt
aaa
scas
sbb
fldenv
ja
push
jbe
cmp
rolb
shll
std
or
jmp
xchg
sbb
add
or
iret
jno
xchg
ficomps
cmp
pop
loop
fldenv
and
int3
xchg
pop
mov
mov
test
setge
or
adc
and
jmp
repnz
jecxz
xchg
ja
inc
mov
mov
push
mov
scas
mov
push
cmp
andb
or
cmpb
or
jne
pop
js
pop
add
dec
push
in
xor
pop
lcall
stos
call
pop
xor
shr
xor
pushf
sarl
in
push
hlt
push
shr
xor
add
add
add
jne
mov
pop
iret
or
insl
push
adc
out
or
and
xor
add
add
jnp
push
aam
sub
jge
fsubr
add
or
mov
ror
mov
aas
pop
mov
fisubl
aam
cli
and
and
roll
lods
mov
push
rolb
leave
xor
push
fs
fisubrl
movsl
sbb
repnz
sub
fdivr
outsb
movsb
push
or
push
or
xlat
and
ror
add
add
loopne
add
add
cs
cmp
aam
cmp
push
pop
pusha
mov
push
xor
enter
sub
ljmp
rol
rcll
add
cli
push
xor
pop
dec
lcall
xorb
sbb
in
shl
in
push
sub
data16
push
inc
push
add
add
pusha
mov
pop
cmp
or
fadd
xor
call
shlb
in
or
lahf
cmp
movsb
imul
lods
xor
test
pop
sub
cmp
sbb
add
cmpsb
xor
fcoms
inc
jge
and
call
in
jl
and
into
add
and
xor
cmp
imul
push
xchg
js
adc
pop
inc
mov
jo
ret
push
jo
ficoms
or
les
pushf
cltd
lcall
cmp
add
cs
adc
loop
mov
and
sbb
lods
dec
fadds
pop
fs
subl
insl
and
fisubrl
fdivrs
or
clc
jl
push
and
add
imul
imul
add
in
stc
icebp
xor
shll
inc
aam
xchg
fidivl
jbe
cli
nop
or
jmp
aam
dec
shll
cmp
adc
xor
sub
mov
jb
in
mov
shl
rolb
rcll
dec
cmp
ss
push
popl
sub
push
xor
inc
add
push
sbb
dec
inc
test
loopne
add
mov
inc
add
stos
imul
dec
gs
inc
push
xor
movsb
add
adc
dec
xorl
sahf
and
mov
add
adc
cmp
or
push
data16
nop
and
stos
inc
stos
ret
xchg
aaa
xchg
out
push
add
or
and
scas
inc
pop
mov
imul
inc
pusha
push
jb
add
pusha
pop
mov
rol
xchg
or
jo
mov
stos
insb
dec
jno
in
inc
adc
jb
mov
fs
dec
movsb
shlb
cmp
addr16
mov
int3
pop
push
jno
test
mov
jb
adc
dec
add
or
orb
adc
jbe
insl
das
call
and
jp
movsb
and
push
mov
lea
mov
dec
pop
out
or
aas
pop
add
sub
mov
fadds
inc
rol
nop
loopne
lret
jb
xchg
aaa
sub
pop
mov
sbb
pop
xor
xchg
cmc
sub
adc
dec
push
fwait
or
xor
or
pop
inc
jmp
rol
and
fdivs
or
test
loopne
mov
mov
sub
loopne
lea
jmp
lahf
orb
sub
dec
sbb
pop
mov
jg
lods
fimull
pop
jne
pop
jbe
add
sarl
add
xchg
sub
push
enter
fisttps
jbe
or
sbb
icebp
mov
mov
push
mov
sub
jae
push
pop
rolb
add
enter
fimuls
mov
sbb
lret
fs
pop
fdivp
shl
ret
ja
iret
mov
hlt
push
shr
xchg
xchg
push
sub
lea
call
mov
addl
or
dec
test
dec
cld
js
ret
movl
pop
push
pushf
mov
cmp
pushf
dec
fdivrs
jbe
fdivrl
xor
mov
sbb
mov
jo
inc
jge
outsl
pop
xchg
rorb
fwait
sbb
dec
loop
push
ds
mov
push
xchg
jle
ja
lea
imul
cmp
ja
or
mull
or
pop
add
cmp
and
mov
sbb
lock
enter
sbb
add
adc
or
and
pop
in
inc
addl
xchg
and
adc
les
or
test
test
shll
push
addb
pop
mov
push
and
add
pop
pop
sbb
mov
adc
pop
call
fdivs
loopne
inc
pop
stos
xchg
icebp
sub
int
pop
imul
mov
mov
call
dec
fwait
xchg
xchg
roll
jge
push
adc
adc
dec
in
insb
loop
add
mov
xor
rcrl
xchg
mov
sbb
add
loopne
xchg
pop
sbb
xchg
sbb
xchg
and
lret
out
fists
ljmp
mov
adc
iret
cmp
lods
cmp
sub
and
add
push
and
stc
add
ret
mov
xchg
add
mov
movl
dec
adc
push
sub
push
push
inc
andb
inc
push
movsb
loope
inc
wrmsr
adc
mov
adc
orl
xor
pop
adc
push
loope
xchg
lods
in
inc
cmp
jl
sbb
or
icebp
test
mov
mov
jp
cmp
add
dec
sar
cli
es
lea
cmp
cld
jg
and
fs
jne
or
js
xor
push
sbb
js
sbb
mov
aad
or
xor
cmpb
mov
outsl
or
icebp
jl
dec
dec
mov
movsl
fstpl
mov
cmpsb
jb
xchg
nop
pusha
and
pushf
dec
daa
lods
nop
lock
lret
and
movzbl
push
rorl
and
adc
js
and
out
xchg
add
shr
jmp
push
aam
pusha
lock
mov
pop
push
inc
in
add
or
test
ret
mov
and
mov
push
and
and
call
mov
lahf
cltd
ja
add
lcall
push
pusha
mov
and
mov
ret
dec
and
xchg
pop
and
stos
and
adc
or
xor
add
push
cmp
add
cmp
rcrb
js
jne
test
mov
dec
or
push
push
sbb
loop
jo
adc
sub
cmp
adc
xchg
mov
sti
push
imul
add
jle
dec
sbb
int3
mov
sbb
and
cmp
shlb
and
xchg
add
add
adc
mov
inc
bound
add
and
mov
push
inc
push
or
xor
pop
cltd
sub
sub
dec
mov
dec
es
inc
mov
push
movl
and
or
add
imul
lcall
add
adc
mov
cmp
jno
xlat
orl
ljmp
sbb
xor
pop
push
mov
pop
ja
push
add
pop
js
pop
push
jmp
mov
jmp
cmpl
sub
push
shl
xorl
pop
adc
fisttpl
shrb
push
ss
je
xchg
jl
dec
aam
mov
pop
neg
and
ret
or
std
mov
fstpt
sub
xchg
lea
out
push
adc
sub
ss
int
mov
sbb
xor
push
or
dec
inc
push
mov
mov
cmp
jmp
and
stc
jge
sub
or
adc
jle
inc
push
push
adc
adc
outsl
cmp
aam
mov
fildl
arpl
or
push
das
add
or
lock
inc
push
aam
adc
jb
adc
js
repz
sbb
adc
testl
mov
sub
jg
adc
dec
ror
dec
sbbl
push
jno
push
aaa
xchg
sub
fwait
ret
inc
or
sbb
sbb
cmp
fwait
loope
and
jnp
pop
mov
mov
or
cwtl
and
loope
jmp
sub
popf
mov
pop
aam
rclb
push
aam
xor
pop
sub
sub
cmpsl
mov
jg
mov
cmpb
icebp
imul
les
jmp
cmp
sbb
pop
dec
shl
mov
and
sub
sbb
inc
xor
call
xor
cmp
or
cmp
inc
inc
rorl
xchg
xor
daa
pop
sbb
or
test
jle
jp
jns
adc
jnp
xor
dec
fnstenv
dec
cmp
ja
inc
rcll
push
sub
fnsave
shll
leave
mov
sub
cltd
jae
sub
rorb
push
pop
push
cld
cmpl
xor
ret
adc
mov
inc
mov
lds
mov
xor
gs
or
roll
cmp
dec
mov
and
push
pop
push
xchg
test
pop
adc
cmpsb
jmp
or
adc
hlt
je
inc
mov
data16
xchg
scas
dec
ret
fsubrs
push
mov
lock
lock
sbb
sub
mov
fimull
push
hlt
ss
mov
push
es
stos
movsl
and
dec
jge
jmp
stos
jmp
in
xchg
sbb
je
mov
orl
mov
cmp
sbb
push
xchg
stos
ja
adc
lods
or
cld
xor
insl
jl
adcl
and
pop
jnp
sub
add
scas
stos
loopne
xchg
mov
adc
sub
mov
pop
movl
orl
call
mov
dec
inc
jecxz
add
or
jmp
mov
pop
or
pop
and
inc
dec
fiadds
inc
pusha
sbb
adc
ds
lds
call
xor
xor
xchg
mov
lock
rcll
clc
into
icebp
mov
push
xor
mov
jmp
push
mov
xor
inc
dec
imul
mov
adc
and
and
mov
arpl
imul
and
mov
sbb
xor
je
nop
inc
and
ss
xchg
cmp
movsl
mov
test
push
mov
push
push
or
orb
sub
xchg
push
xor
xor
mov
adc
xor
fsubrs
pop
jb
and
and
mov
xchg
test
sbb
mov
test
and
xchg
sbb
ret
cmp
enter
adc
adc
mov
inc
and
cmp
or
dec
xchg
and
sbb
cs
and
dec
rcll
and
andl
dec
loop
sbb
loopne
jle
cmpsl
pushf
in
cld
xchg
cmp
xor
mov
cmp
leave
int3
and
leave
sbb
ret
outsb
pop
stos
xor
adc
inc
jne
inc
push
sahf
loopne
and
outsb
cmp
out
sbb
or
mov
out
les
jecxz
lea
ljmp
ret
arpl
mov
lea
push
jbe
lcall
enter
scas
push
push
adc
repnz
adc
mov
cmpl
inc
push
lods
les
popf
out
mov
add
adc
adc
fisttpll
ret
insl
dec
dec
test
fldl
cmp
call
and
mov
jmp
sub
dec
dec
add
das
push
inc
cmp
pop
sbb
nop
push
push
xchg
dec
nop
push
inc
mov
pusha
leave
xor
faddl
mov
shrl
fimull
test
ds
xchg
mov
mov
cmpb
sbb
sub
rolb
test
pop
pop
fisubrs
popa
outsl
jmp
fstpl
fndisi(8087
or
fisubl
sbbl
out
adc
or
imul
xchg
mov
xor
stc
dec
lods
sub
mov
ret
cmp
arpl
repnz
adc
pop
lods
pop
mov
stos
xchg
repnz
add
mov
sbb
dec
stc
mov
add
push
xchg
xor
jp
mov
or
inc
xchg
or
cmpsb
pop
mov
push
cmp
add
shrb
mov
or
shll
mov
push
mov
cmpsb
les
fcmovbe
sub
mov
lea
inc
std
push
push
daa
stos
je
cmp
inc
add
fwait
adc
sub
push
cmp
jge
mov
aam
adc
cmp
inc
insb
lock
lea
les
cmpsl
ret
pop
mov
lds
lcall
add
xor
lret
lret
lock
clc
clc
cld
jne
incb
jae
movl
xor
push
add
nop
imul
dec
fbstp
dec
je
add
adc
cmp
fiaddl
lret
orb
mov
mov
or
push
cmc
lock
ljmp
xor
test
rolb
sub
dec
xor
lds
push
daa
pop
cmpsb
adc
jnp
mov
mov
dec
je
dec
lods
mov
push
add
loop
dec
xchg
pushf
popl
mov
lcall
sub
icebp
ljmp
xchg
testb
mov
test
je
cmp
jne
push
rcrl
sbb
adc
mov
imul
or
data16
add
xor
xor
inc
cmpb
test
sbb
or
gs
lret
idiv
inc
inc
imul
add
mov
hlt
clc
jb
pop
cld
mov
cmpb
add
lahf
pop
je
mov
add
add
or
cmp
jns
or
cmp
or
add
adc
push
push
lock
ljmp
out
repnz
jbe
inc
push
and
fiadds
daa
pop
out
mov
aaa
sarb
push
jge
test
xchg
ja
imul
outsb
gs
jae
repnz
arpl
xor
insl
jmp
mov
repnz
sub
adc
cmp
je
cmp
push
cmp
mov
clc
jne
inc
jne
loopne
in
sub
les
fwait
sub
jb
ljmp
rorl
cmp
jne
pop
dec
add
pop
add
loop
cmp
push
ret
sbb
sarb
add
subb
fcoms
xor
mov
jp
jl
or
jg
mov
jmp
and
pop
outsb
outsb
ds
jmp
inc
jl
inc
jg
aaa
mov
std
push
jp
add
shl
dec
mov
sub
mov
call
mov
fscale
push
xchg
ss
jg
xchg
jg,pn
imul
and
sbb
inc
sbb
xchg
rcrl
scas
add
sbb
or
push
xchg
out
mov
xor
aaa
sub
frstor
pop
and
xchg
mov
jl
pusha
mov
cli
popa
mov
jg
pop
fs
imul
inc
imul
inc
mov
xorb
mov
lods
aaa
lcall
cmp
dec
sub
mov
jmp
test
ljmp
xchg
inc
out
test
das
movsb
xor
xor
fsubs
add
inc
cmpb
mov
movsl
pop
call
filds
pop
pusha
idivb
call
out
jmp
xor
jno
les
dec
inc
fs
mov
dec
sbb
or
add
pop
fsubr
xorb
pop
push
shrb
cld
cmp
sub
mov
inc
and
sub
lds
je
je
and
cmpsb
pcmpeqb
clc
insl
or
mov
mov
add
cmp
into
hlt
add
jne
mov
mov
ds
cld
imul
inc
lods
lret
inc
mov
cs
imul
cmp
or
cmp
mov
jmp
test
andb
push
aad
xchg
ret
out
jg
loop
sbb
inc
push
dec
and
mov
dec
dec
mov
inc
cwtl
add
ljmp
mov
jmp
jns
dec
cmp
or
fsubl
mov
sub
jge
jne
xor
add
rcrl
loopne
movsb
push
sbb
pop
push
add
xor
adc
dec
js
inc
inc
cwtl
xor
pop
inc
inc
push
sbbb
add
add
fisttpll
scas
movsb
sti
sub
into
mov
mov
shl
lds
and
gs
jne
dec
imul
mov
andb
icebp
loope
out
jmp
push
rolb
mov
xorb
xchg
and
mov
sbb
lea
push
xchg
shl
inc
aaa
mov
mov
imul
ret
jge
add
ret
xor
or
mov
fcom
mov
xlat
out
les
dec
adc
jne
push
pushf
mov
xchg
mov
ret
add
dec
lock
cmp
incl
cmp
pop
xchg
aam
cmp
mov
inc
cmp
sub
mov
inc
cltd
or
sbb
adc
in
xor
pop
mov
pop
sub
cmp
inc
push
imul
inc
ds
and
out
cmp
outsb
mov
insl
xor
roll
pop
push
or
or
enter
mov
popf
and
xor
inc
mov
leave
enter
and
jle
movb
jbe
pop
les
fs
sbb
push
js
rolb
inc
mov
jns
cmpb
jne
leave
lods
mov
cmp
not
les
test
aaa
sbb
jne,pt
ds
sbb
ja
dec
ret
addb
and
cmp
xchg
pusha
aas
add
lods
xor
cs
xlat
mov
and
lods
dec
xor
dec
out
mov
aam
test
mov
into
push
jb
rcrb
scas
xorl
fs
orl
rolb
ljmp
inc
lock
in
xchg
jecxz
jecxz
pop
loope
ret
pop
xorl
pop
repnz
test
in
lret
pop
adc
call
shll
push
aaa
sbb
or
sbb
in
mov
push
pop
fnstsw
mov
dec
dec
and
or
ss
shrb
data16
push
push
nopl
inc
test
jl
mov
inc
pop
mov
push
pop
cld
pusha
ret
popf
inc
insb
je,pt
inc
add
inc
jl
push
scas
shll
sub
sarb
rcrb
lods
addl
fstpt
push
test
fldl
inc
fisttps
mov
imul
mov
lock
clc
push
push
addb
adc
pop
jo
mov
fsubs
add
loopne
addr16
push
jo
add
lods
loopne
or
and
fwait
pop
fists
xor
into
sahf
sub
xchg
pop
lods
push
push
lea
loopne
orb
cli
xchg
sub
adc
xchg
mov
or
sub
jo
adcl
sbb
or
and
sbb
add
mov
imul
cmp
fcomps
insl
test
ss
stos
leave
cltd
sub
test
sahf
xchg
dec
sbb
cs
call
cmp
xchg
lock
xor
negb
add
int3
out
jmp
imul
push
push
mov
es
cmp
je
ret
scas
test
push
adc
sbb
or
or
lret
movb
add
mov
hlt
cmp
movl
pop
loopne
sbb
adc
xor
push
mov
enter
mov
in
jne
add
and
sub
aas
inc
je
dec
adc
lock
insl
jne
mov
push
dec
cld
minps
je
or
cmp
and
push
scas
insl
or
adcl
jg
outsb
test
jp
mov
dec
sub
add
and
add
pusha
js
movsb
movsl
dec
dec
cltd
or
cmpb
pop
outsl
push
push
add
sbbl
mov
daa
push
mov
cmp
out
sbb
je
and
add
inc
rclb
clc
mov
fimuls
push
add
xchg
add
pusha
inc
lds
in
pop
dec
mov
aas
add
add
jo
xchg
iret
sbb
add
fcomps
add
sbb
jmp
mov
inc
fsts
dec
pop
xchg
or
pop
pusha
movsl
cmp
jne
add
add
add
push
bound
fldenv
movsl
xor
sbb
jecxz
mov
dec
sbb
data16
inc
rclb
iret
std
leave
sbb
fstpt
mov
into
je
mov
add
ja
movsl
clc
nop
hlt
jmp
mov
sub
jne
sbb
sbb
push
xchg
adc
pop
adc
pusha
xchg
in
sbb
fs
shl
test
stos
or
movsl
lcall
stos
push
pop
fdivrl
in
jmp
es
dec
inc
mov
jb
hlt
or
jnp
ret
loopne
pop
dec
addr16
stos
add
inc
xchg
mov
jle
in
ret
xor
aaa
imul
cmc
in
sbb
cmc
jno
inc
mov
into
or
add
fists
mov
int
movsb
push
or
or
sbbl
xorl
and
jno
outsl
in
dec
movsb
icebp
add
xor
movsb
lock
mov
bound
push
sub
push
cmp
pushf
fstpt
scas
cmp
push
dec
push
arpl
mov
mov
pop
daa
sub
push
subl
or
movsb
mov
inc
mov
xor
pop
imul
ds
lock
loop
xchg
dec
push
push
jmp
bound
mov
fiadds
or
push
mov
inc
and
leave
or
xchg
ss
enter
adcb
push
loop
leave
add
fs
pop
or
sarb
sahf
fs
aaa
out
movsb
xchg
movsb
push
out
jmp
shl
test
sahf
call
enter
adcb
cwtl
xchg
pop
lock
stos
cmpsl
sbb
sbb
stos
out
test
push
and
call
sbb
jl
add
push
xchg
or
push
loopne
ret
jmp
and
clc
inc
ret
mov
inc
inc
movsb
sub
sub
sbbb
xchg
lret
add
addl
subl
clc
pop
and
or
icebp
jno
sarb
inc
rolb
xor
ret
cmpl
push
in
faddl
mov
in
mov
loope
or
out
push
mov
or
nop
add
sub
push
push
inc
mov
add
fadds
adc
xchg
aam
dec
fbld
mov
inc
xchg
add
mov
and
or
mov
shlb
push
rcrl
jmp
add
hlt
mov
xor
mov
sarl
mov
int
call
mov
ss
pop
add
or
xor
sarl
cmp
pop
sbb
sub
fistl
mov
sub
and
inc
pop
jmp
add
inc
scas
inc
inc
call
je
in
fimuls
mov
inc
data16
jo
inc
inc
xchg
jnp
sbb
mov
adc
sarl
cmp
pop
push
cwtl
and
outsl
nop
sbb
add
jecxz
cmpsl
fldl
adc
jne
dec
lods
adc
cmp
sbb
add
leave
fcoms
insb
stc
ss
aad
test
push
leave
jno
loop
jb
xor
xchg
lea
roll
jmp
rorb
push
pop
adc
lret
popf
and
ret
mov
add
mul
and
sbb
adcb
xor
ljmp
and
adc
mov
sbb
push
mov
movl
pusha
jo
add
sub
cmp
or
repz
mov
sub
cmp
cmp
dec
enter
mov
ja
aaa
icebp
lods
push
nop
ret
xor
or
pop
fs
out
test
add
inc
or
or
dec
sub
subl
data16
rcll
mov
adc
dec
adc
mov
inc
mov
sbb
inc
clc
sbb
xor
cmp
rcll
movsb
das
and
aam
or
sbb
mov
xchg
dec
aad
loope
xor
sbb
bound
pop
mov
sbb
lcall
jne
pop
push
jae
inc
inc
add
mov
popf
add
or
jne
ljmp
push
or
push
push
mov
or
xlat
rcll
jecxz
int
fmuls
jmp
lea
fdivrp
dec
daa
orb
or
in
dec
pop
aam
pop
dec
sbb
sbb
cmpl
fisubl
mov
adc
insb
inc
insb
or
add
and
and
idiv
xchg
movsl
inc
mov
movsl
pushw
in
shll
mov
mov
cmp
adc
clc
sub
das
loopne
mov
js
je
icebp
xor
jl
rolb
outsl
sbb
stos
movsb
inc
jecxz
add
stc
clc
or
mov
add
jp
pop
jmp
sbb
add
inc
test
adc
rcrl
mov
testl
xchg
sbb
sub
pop
in
jae
cmp
pop
mov
bnd
cmp
sbb
xchg
shlb
fldenv
dec
shll
push
inc
adc
add
movl
cmc
add
leave
ret
mov
xchg
xchg
xor
ret
lods
inc
sbb
je
jp
ja
shlb
mov
test
or
pusha
jnp
out
ds
lock
xchg
adc
sbb
loop
or
jmp
or
sbb
adc
fs
or
lret
adc
cmp
jb
add
sarl
les
out
popf
or
inc
pop
mov
push
scas
stos
pop
aaa
je
sub
xlat
sub
sarl
jecxz
sbb
adc
sbb
mov
loopne
outsl
in
jae
jle
andl
or
pushf
push
sbb
add
imulb
shrl
sbbb
and
sub
popf
dec
xchg
push
jo
pop
add
or
cli
jmp
inc
ja
adc
cmp
loop
lods
and
jbe
push
inc
andb
test
pop
js
or
inc
sbb
in
mov
add
push
loopne
cmp
insl
pop
adc
loopne
sub
in
test
loopne
ret
pop
mov
add
mov
jae
sarb
adc
call
push
or
mov
lock
mov
xchg
mov
jmp
arpl
push
mov
scas
inc
pop
mov
loop
pop
adc
or
pop
adc
popf
rcll
mov
repz
add
xchg
push
xchg
mov
bound
daa
arpl
sub
add
xor
and
hlt
fs
push
das
sub
push
push
inc
add
jnp
ret
or
cmp
fiadds
lds
fcmovbe
cmp
or
pop
cmp
cs
lcall
in
mov
mov
sbb
add
test
or
mov
dec
ja
inc
jp
mov
push
add
gs
adc
push
push
push
ss
clc
incb
movsb
insl
imull
mov
or
shrb
cmc
cmp
lds
clc
dec
push
xor
lods
mov
push
mov
inc
sbbb
sbb
andb
add
sub
out
ret
outsb
adc
jb
and
inc
sub
aaa
jo
add
imul
out
adc
cwtl
add
les
fs
into
sub
xor
icebp
add
inc
adc
je,pt
sar
adc
xorb
in
add
in
cmp
imulb
in
push
push
mov
cmp
push
mov
add
push
jg
add
sbb
mov
or
lods
out
into
lret
inc
mov
inc
mov
movsb
js
call
xlat
cmpsl
inc
mov
movsl
pop
jae
add
lock
adc
and
sbb
push
and
add
mov
xor
cmp
in
sub
xor
or
and
inc
inc
nop
sub
xor
test
aas
enter
push
je
cmp
jbe
push
add
popa
adc
testb
outsl
mov
push
movl
push
enter
ret
mov
sub
enter
aam
jo
cltd
stos
dec
lock
pop
inc
fists
mov
push
adcb
into
inc
adc
or
cli
aam
in
jo
mov
dec
popl
jl
mov
outsb
dec
insb
xchg
lock
adc
or
push
cmp
fldt
xchg
dec
jo
mov
js
mov
ja
add
sub
icebp
daa
rorb
scas
lods
test
add
lret
mov
add
sub
push
wbinvd
push
sarb
push
sub
adc
jecxz
movl
adc
je
inc
pop
pop
les
xor
data16
rcrb
sub
xor
dec
adc
sub
aad
cmpsb
mov
fmull
pop
ja
call
and
cmp
jne
push
jle
cli
push
mov
xor
enter
jbe
pop
pop
push
lret
jne
mov
adc
fcomi
ss
cmp
std
push
in
dec
cmp
inc
push
xor
pop
div
hlt
add
lea
mov
or
sub
push
inc
or
xchg
xor
push
dec
pop
adc
cwtl
sbb
inc
cli
push
sbb
adc
and
add
push
dec
adc
mov
adc
add
pop
jmp
pop
jp
adc
xchg
cmp
popa
jo
ja
dec
sbb
std
rcr
andl
gs
loopne
pushf
outsl
in
mov
lods
xor
add
push
inc
dec
aam
add
rorb
loopne
je
pop
int
adc
jb
je
aas
add
mov
sub
jo
mov
je
adc
sub
sub
jne
bound
shll
adc
out
adc
inc
add
imul
clc
int3
add
dec
or
mov
mov
dec
or
pop
adc
inc
jns
push
cmpl
xchg
mov
pop
dec
cmp
jb
neg
mov
rorl
ffreep
add
cmpsb
loopne
add
or
adc
and
je
rep
mov
imull
mov
dec
ljmp
jb
loop
gs
call
push
ret
adcl
je
mov
or
xorb
fsub
or
sbb
push
outsl
dec
jne
sub
stc
dec
xor
lea
scas
push
sub
rorl
and
cmp
sbb
je
push
mov
cwtl
scas
pop
push
icebp
dec
fsubrl
and
sbbb
psubusw
mov
out
cmp
and
clc
jg
fs
std
pop
cmp
add
movd
movaps
out
push
enter
shlb
jle
xor
decb
aaa
das
cli
rcl
lret
je
cmp
sub
lret
or
jg
cli
fwait
ret
inc
ljmp
and
in
add
sub
and
add
adc
je,pn
jne
adc
sbb
outsb
fisubrs
repnz
roll
lock
mov
add
pop
shlb
std
addsd
int
add
dec
sahf
repnz
sbb
idivl
pop
test
iretw
into
mov
jne
orb
and
add
rolb
mov
mov
add
xorl
test
mov
lods
mov
or
lcall
mov
andl
adc
cmpsb
leave
and
lret
rolb
hlt
fldenv
lret
dec
cmc
cwtl
sarl
cmp
ficoml
pop
inc
dec
pusha
push
pop
andb
add
sti
lcall
adc
add
pop
adc
ficoms
dec
pop
shlb
and
inc
sub
lea
cmp
scas
mov
aas
in
je
cmp
jne
inc
cmpb
out
orb
pop
adc
and
pop
mov
inc
inc
and
adc
or
or
mov
add
mov
pop
jmp
pop
imul
and
clc
ljmp
sbb
dec
add
cmp
cltd
lcall
xor
xor
pop
notrack
xor
fmull
mov
syscall
jb
leave
push
adc
adc
jo
lea
jno
and
clc
adc
dec
popf
push
lea
cmpb
pop
mov
jns,pn
test
fbld
xlat
cld
sub
xor
add
addr16
es
jno
mov
in
push
sbb
movb
mov
ret
sbb
pushf
pop
addr16
loope
and
sbb
test
lods
and
or
cmpsb
dec
dec
pop
jp
pop
inc
sub
add
shr
add
mov
inc
dec
mov
and
xchg
adc
mov
pop
cmp
jmp
inc
add
mov
psubusw
outsb
mov
mov
jl
js
fidivrs
orl
fwait
adc
fsubs
popf
or
adc
push
jecxz
cli
jmp
cld
rolb
pop
pop
pop
and
dec
lock
adc
cmp
inc
stos
jo
cmp
xchg
mov
arpl
cmp
pop
sbbb
int3
pop
cs
jnp
sbb
mov
xchg
add
cmp
cli
adc
sub
or
cmp
inc
jb
or
mov
or
sub
or
rorb
pop
add
out
pushw
add
rol
xor
inc
data16
push
aas
inc
je
pop
mov
ret
add
je
jae
pop
or
sub
jecxz
lock
fs
cmp
jns
jo
cmp
adc
xchg
pop
ret
add
jmp
xor
and
pop
stos
loop
icebp
mov
and
rolb
shrl
pop
or
shlb
jbe
jmp
gs
iret
cwtl
xor
movups
inc
inc
mov
add
rorl
add
and
pop
cld
or
add
mov
jne
out
cld
mov
hlt
testb
je
inc
mov
cmp
clc
inc
xor
es
loope
or
cmp
adc
loop
or
js
ss
xor
push
push
bound
lds
mov
push
loope
xor
rorl
push
outsl
jne
nop
mov
push
pop
inc
cmpsl
daa
mov
dec
push
or
stos
inc
jle
or
xchg
stos
jge
adc
push
roll
cmp
test
xor
add
daa
cmp
stc
xor
fwait
add
pcmpgtd
pop
mov
dec
ficoml
pop
adc
lcall
stc
or
rep
jmp
addb
cmp
pop
or
jb
xchg
add
test
out
outsb
or
add
push
test
adc
adc
fs
cld
fnstenv
mov
or
lods
adc
inc
mov
mov
movsb
xor
pop
dec
add
sub
nop
inc
xor
xchg
mov
mov
aam
int3
push
jmp
jns
mov
inc
mov
mov
cmp
repz
call
cmp
repz
hlt
clc
clc
or
scas
shll
add
lock
sbb
jmp
ret
jecxz
sub
mov
fildl
pop
sti
and
xor
push
inc
and
dec
scas
mov
into
jl
cld
pop
and
sub
or
mov
fsts
out
xchg
daa
stc
sub
jnp
gs
addr16
nop
mov
mov
int3
rcr
add
out
add
mov
mov
inc
push
fisubl
add
push
fmull
out
mov
push
push
or
iret
repz
pusha
push
clc
subl
sbb
sbb
repz
adc
adc
cmp
repz
or
out
sbb
inc
pushf
or
aaa
push
add
andl
adc
lods
inc
icebp
test
or
mov
pop
shlb
sbb
mov
aam
xor
cmp
add
fildl
shlb
dec
call
push
sub
push
jae
mov
or
jmp
imul
or
leave
les
pusha
mull
mov
adc
mov
jae
sub
fs
push
add
pop
sbb
rorb
lock
sub
sbb
sbb
ror
imul
xchg
inc
sbb
loop
mov
or
mov
std
es
adc
daa
fwait
loope
movl
and
adc
cmp
adc
sarb
jmp
cmp
mov
xchg
adc
fiaddl
xor
mov
sarb
imul
inc
sbb
rorb
or
adc
cmp
or
hlt
dec
loope
or
xchg
push
inc
and
jp
mov
stos
xchg
and
or
fidivrl
dec
mov
sbb
sbb
dec
adc
nopl
add
fdivrl
jle
adc
push
adc
insb
pop
fisttpl
sub
add
aaa
pop
cmp
pushf
mov
cmp
sbb
push
add
lea
cmp
jl
jmp
jnp
andb
cmp
jne
push
adc
loopne
ds
or
add
mov
test
add
xor
aad
pop
fmul
cmp
jle
jne
xor
add
and
push
outsl
or
add
push
mov
xchg
mov
sbb
les
jmp
insl
clc
adc
pop
push
mov
loopne
cli
mov
sti
pop
inc
mov
cmpsb
mov
mov
inc
pop
ljmp
fdivs
mov
sarl
call
adc
jne
insl
push
jb
jle
pop
scas
pop
and
push
loope
xor
clc
ret
ja
pop
add
jno
ss
inc
mov
dec
or
repnz
and
bound
xchg
push
or
push
xchg
aaa
pop
mov
stos
jmp
sub
add
enter
push
xchg
test
fnsave
jne
pop
push
or
jmp
jb
fimull
loopne
rcll
fsubl
daa
push
into
and
pop
mov
pop
and
add
loopne
popa
fucom
sub
pop
fsubrs
and
shl
pop
andb
jmp
insb
mov
or
pusha
sub
repz
jg
pop
mov
lock
js
push
ljmp
in
adc
adc
push
push
sub
inc
xor
adc
push
or
fsubrl
or
inc
js
std
xor
je
or
sub
push
fs
pop
gs
adc
cs
mov
xchg
mov
add
shl
mov
sbb
rcr
inc
xor
inc
xchg
mov
loopne
ja
pop
jbe
lea
adc
sbb
dec
and
data16
cs
lock
push
inc
pop
dec
ss
jb
push
aad
aam
clc
jbe
add
and
insb
out
jb
sbb
imul
mov
popa
add
add
into
or
loopne
pop
mov
test
jne
test
cmp
xlat
stos
rolb
das
mov
sub
add
je
cvtps2pd
pushf
pop
mov
movsl
xor
es
pop
es
addr16
pop
dec
mov
push
or
mov
decb
sub
add
cld
data16
shl
pop
popa
and
jmp
js
hlt
inc
sub
adc
loopne
adc
fwait
push
or
sbb
dec
push
or
add
or
jb
or
pop
lcall
test
shlb
ret
data16
mov
and
inc
pop
pop
or
mov
add
out
shl
xorb
repz
lahf
mov
push
adc
cltd
rolb
adc
cltd
rorb
dec
frstor
or
repz
rorb
push
out
adc
or
repnz
add
mov
and
jle
daa
dec
jne
jmp
inc
pusha
stos
and
cs
pop
mov
dec
es
jne
mov
xorl
ret
setle
ret
xchg
pop
xor
enter
push
aad
lds
pop
bound
mov
insb
arpl
shr
jo
dec
lea
outsb
into
loopne
add
out
mov
push
cmp
jne
mov
push
cmp
repz
std
jne
es
jne
fstl
dec
call
aam
nop
add
inc
orb
ret
inc
incl
repz
mov
adc
jmp
std
xchg
std
mov
cld
cld
jmp
fildl
addr16
adc
in
adc
adc
inc
inc
inc
mov
out
pop
lods
push
test
xor
or
repnz
test
mov
mov
test
mov
out
push
xorb
shr
sub
dec
and
stos
repz
jns
pusha
sbbl
push
jp
popa
mov
arpl
lea
inc
cmp
or
test
add
inc
inc
add
adc
adc
mov
mov
add
or
adc
in
ds
pop
loopne
and
pop
pop
lds
es
or
pop
fs
data16
aaa
mov
movsl
in
movb
jmp
add
push
cli
push
mov
addr16
mov
mov
je
mov
mov
xchg
pop
jg
add
mov
dec
and
mov
or
sarb
dec
call
push
push
inc
test
and
lret
loopne
push
ja
outsb
loopne
out
jae
out
gs
or
dec
add
lea
mov
add
or
ja
daa
leave
cmp
push
xchg
das
pop
jo
and
xorb
pusha
pop
pop
pop
js
or
insb
sbb
jo
sbb
jno
bound
sarb
mov
jb
addb
imul
add
inc
mov
push
rcrb
call
push
jge
dec
mov
ljmp
in
les
ds
and
fmul
es
mov
jb
ljmp
or
adc
or
dec
xchg
pop
lea
int3
ret
aam
je
add
sbb
mov
sub
add
not
and
sub
inc
inc
mov
sti
and
mov
scas
xchg
xor
sbb
test
cld
sub
adc
xchg
adc
push
movsl
mov
push
xchg
js
sbbl
ja
bound
jne
pop
mov
ljmp
incl
loope
fcmovne
sar
stc
and
mov
inc
je
outsl
inc
cld
fistpll
lea
neg
mov
lcall
sbb
ret
add
xor
shl
scas
and
sbb
scas
mov
je
mov
add
mov
inc
cmp
jb
add
push
add
divl
in
cmpsb
hlt
pop
ret
gs
push
jb
or
or
ret
cld
into
xlat
adc
add
adc
jne
or
jne
outsb
outsl
pushf
shl
push
adc
pop
test
and
xor
dec
stc
addl
divb
in
xor
jo
and
out
jne
and
lret
mov
les
test
cld
or
ss
cmp
je
sahf
addr16
xor
and
fsubrl
sti
jns
aam
xchg
pop
addr16
and
push
mov
push
cmpl
xor
adc
adc
outsb
xor
and
lock
in
adc
mov
insb
dec
call
add
jg
xlat
loopne
add
mov
add
jle
pop
pop
sbb
es
test
pop
add
loopne
arpl
cmpsb
bound
mov
inc
jmp
cmp
inc
mov
add
sub
xchg
mov
adc
cmp
aam
xor
lret
push
ss
or
mov
adc
adc
pop
imul
cmpsl
mov
pop
add
push
cld
sbb
cmp
test
mov
and
je
vmovaps
sbb
roll
pusha
je
lea
sbb
dec
mov
and
xchg
shrb
sub
or
sub
jbe
push
add
cmp
outsl
fcomps
dec
push
rcrb
scas
and
sbb
mov
mov
push
adc
shl
cld
xor
sbb
stos
jno
inc
sbb
adc
sbb
sbb
xor
dec
in
or
adcb
mov
jmp
push
sbb
lcall
push
sub
jno
or
sbb
jmp
test
pop
xor
jne
mov
sti
rcr
or
lock
mov
inc
mov
dec
jne
mov
add
shufps
add
pop
insl
push
add
adc
insl
push
or
mov
enter
push
dec
dec
add
push
inc
adc
addl
mov
or
cmp
es
or
adc
sub
sub
mov
mov
popf
jbe
push
adc
nop
mov
insb
sbb
sub
pop
sbb
push
ljmp
jne
pusha
push
into
jl
or
test
imul
mov
movb
inc
jo
inc
sbb
lea
add
adc
or
adc
clc
test
enter
or
clc
scas
mov
bound
clc
mov
es
sbb
add
icebp
add
pushf
rorl
xor
ficoms
pop
cs
inc
pusha
mov
or
es
sub
dec
push
xor
xor
or
mov
inc
cmovns
in
rsqrtps
xor
inc
int3
push
es
sub
cld
or
push
mov
or
mov
or
cmpxchg
mov
sub
mov
cmpl
or
movsl
adc
pop
xor
or
das
adc
outsb
push
test
and
and
inc
sub
add
jmp
es
or
push
add
sub
mov
mov
inc
shlb
add
sub
loop
int3
fcomps
ret
push
or
sti
or
mov
int3
rcrb
cmp
push
or
adc
sbb
push
or
push
jp
push
jmp
xor
adc
loop
or
mov
jle
mov
rcrb
mov
jne
ja
btr
pop
cmpl
push
fwait
scas
dec
gs
mov
jge
or
or
gs
rcrb
jbe
inc
shrb
in
inc
dec
jae
adc
lods
sarb
in
loop
dec
push
push
aaa
mov
mov
push
data16
pop
addl
jnp
add
decl
cmp
pop
fisubrs
sub
jbe
mov
pop
push
hlt
cltd
pop
idiv
dec
test
xor
add
xchg
cmpb
sub
push
cmc
stos
scas
popa
push
mov
pusha
adc
rcrb
add
imul
dec
fisubl
jp
loopne
dec
in
dec
pop
popa
pop
mov
pop
test
sub
pop
aam
mov
test
movsb
add
dec
adc
in
dec
mov
pop
add
pop
pusha
sub
add
sbb
out
jns
jle
adc
or
repnz
fcomp
repz
add
or
add
push
inc
pop
loope
and
xchg
loopne
mov
mov
rolb
pop
and
js
stos
push
fcoms
jnp
jnp
test
mov
push
in
mov
inc
aam
jbe
and
lods
jp
rolb
or
jg
pusha
cmp
dec
mov
jecxz
inc
or
dec
mov
faddl
div
add
push
clc
adc
fs
enter
daa
mov
popf
inc
je
cli
dec
add
sbb
popa
in
dec
cmp
cli
call
movswl
push
aam
jmp
dec
je
add
or
cmp
inc
pop
je
push
or
in
fisubrs
sbb
add
jmp
sub
push
test
push
sti
xor
sti
jbe
mov
cmp
push
push
sub
push
lea
push
test
sahf
sub
dec
push
cmpsl
mov
jo
arpl
add
pop
inc
xchg
lcall
push
push
addr16
jne
mov
cmpsl
or
packuswb
add
dec
mov
xchg
inc
jne
jae
mov
in
push
repnz
xchg
dec
add
cmp
and
dec
xchg
cmovp
jns
jns
mov
or
push
add
sub
push
rolb
add
js
rorl
js
jbe
scas
cmp
mov
add
ja
out
pop
std
lret
adc
or
dec
jb
je
push
jmp
aas
lcall
mov
imul
clc
inc
dec
adc
or
mov
je
push
fsubrs
add
add
cmp
dec
repz
add
adc
idivl
mov
jmp
cmp
jae
stos
arpl
or
mov
push
mov
push
mov
sbb
subb
dec
dec
push
add
int3
inc
sub
mov
loop
and
decl
add
sub
dec
sbb
rolb
cmpsb
dec
cmp
pop
call
xor
lcall
adc
add
sub
je
or
or
dec
and
roll
and
or
mov
dec
xor
or
cwtl
add
imul
adcl
rorb
cmp
push
and
movsl
jb
jo
addr16
xor
push
pop
lods
pop
mov
decl
das
pop
jmp
lock
xor
mov
movsb
mov
push
pop
sbb
push
pop
jg
dec
shll
dec
movsb
inc
push
pop
sub
rolb
ret
push
adc
cmp
push
dec
xchg
mov
scas
cmp
adc
mov
add
into
cmp
lret
jnp
jo
push
push
add
sbb
push
inc
movsl
loopne
dec
lods
movsl
stos
sbb
mov
cli
insl
or
cmp
mov
ret
test
dec
insl
sarl
inc
xor
and
out
jnp
jns
add
inc
cmp
jne
fldcw
cmp
cmp
stc
mov
rorl
mov
int
imul
add
sbb
jge
insl
inc
shlb
pop
adc
push
lods
mov
cmp
shlb
mov
add
cmp
xchg
mov
inc
movb
call
and
testb
pop
inc
mov
sbb
mov
push
je
add
sub
shrb
fldenv
xor
jbe
add
and
fsubrs
xor
pop
sets
xchg
andl
sbb
mov
push
mov
jg
ds
enter
add
aam
cltd
cmp
popa
imul
mov
leave
cmpsb
mov
xorb
inc
ds
stos
std
test
xchg
sbb
jl
lock
xlat
cltd
adc
mov
sbb
orb
test
push
test
adc
cmpsb
aaa
jb
repz
add
cmpsb
mov
cwtl
clc
enter
pop
cwtl
loopne
mov
push
xchg
and
jmp
inc
and
jbe
hlt
mov
mov
je
sahf
xor
jl
jge
jnp
es
cli
add
icebp
adc
mov
adc
dec
pop
lret
movsb
sbb
and
xchg
sahf
rclb
mov
fmul
jo
mov
popa
lret
dec
rolb
sbb
es
inc
mov
jge
call
inc
mov
add
dec
pop
jp
or
insb
rol
es
ja
imul
cmc
mov
adcb
gs
push
cmp
pop
dec
out
or
insb
sub
dec
cld
jmp
add
push
mov
xchg
subb
push
mov
cmp
add
scas
test
pushf
ja
or
in
outsb
jbe
mov
rorl
inc
dec
call
xor
lock
dec
movsl
in
cmp
sbb
jmp
pop
inc
and
sub
sub
loopne
int
cmp
xlat
repnz
or
or
adc
fsubrl
add
push
clc
xchg
sar
imul
adc
xor
adc
je
into
lea
adc
mov
repz
test
loop
jp
inc
pop
enter
add
xchg
push
repnz
xchg
out
not
xchg
sbb
dec
lret
mov
xchg
repnz
jae
aad
mov
jne
mov
daa
out
push
leave
jge
pop
mov
out
push
push
and
add
imull
xchg
rolb
mov
stos
mov
lds
dec
incl
addr16
push
dec
inc
cmp
add
loop
sub
jmp
xor
jmp
push
pop
les
fisttpll
adc
je
pop
nop
and
inc
push
insb
nop
decl
mov
insl
adc
popa
push
pushl
rolb
push
rcr
loopne
inc
jl
call
aaa
inc
or
sbb
pop
test
mov
cmp
bound
push
xor
pushf
and
push
pop
cmp
out
daa
sbb
std
pop
push
or
je
mov
icebp
lret
in
and
or
jne
pop
repnz
int
mov
not
sar
add
fcmovbe
outsl
xchg
push
add
jle
mov
mov
and
jne
push
sbb
xchg
stc
mov
push
loopne
lea
or
fisttpll
mov
hlt
cs
push
ret
adc
mov
daa
mov
push
or
test
cmp
lods
addr16
push
jg
sbb
cltd
or
jmp
negb
push
adc
je
movsl
push
fldl
push
fstl
or
jo
cmpl
mov
xchg
int3
or
into
or
inc
sub
lock
rol
xchg
mov
int3
xchg
lock
hlt
aam
cmp
or
jns
icebp
stos
sti
subl
pop
jmp
lods
pop
add
push
shr
and
inc
cmp
or
cld
inc
push
push
add
adc
xchg
mov
cmp
push
pop
mov
mov
loopne
rcrb
sbb
sbb
das
push
lock
mov
add
add
inc
cmp
inc
inc
cmp
outsl
idivb
shlb
jb
popa
ret
outsl
add
mov
movb
jmp
out
cmpsb
popf
push
insl
xor
sub
std
add
aaa
add
add
pusha
inc
add
mov
mov
or
fwait
subl
shll
lock
adc
or
cmp
adc
mov
mov
add
or
mov
xchg
xchg
fstpl
xor
fistps
mov
mov
test
popl
int
lods
movsb
mov
or
mov
lods
movl
cmp
es
xchg
push
and
dec
sarb
xchg
mov
adc
stc
ds
out
mov
push
call
cmp
sub
push
push
int3
adc
push
xor
fdivl
ror
in
push
mov
dec
adc
jmp
sub
leave
sbb
loopne
inc
mov
andl
testb
loopne
add
push
dec
pusha
dec
popa
xor
pop
arpl
lret
loopnew
fcoml
sbb
lret
mov
or
pop
pop
popf
enter
shrb
les
add
push
out
imul
dec
popf
mov
cld
xor
inc
adc
jo
adc
and
in
xchg
pushw
clc
jno
insl
push
pushf
push
stos
or
insb
repnz
adc
cli
ret
mov
add
xorb
shl
push
mov
ret
pushl
jmp
ja
cmp
rcr
int3
int3
add
and
xor
sbb
dec
or
fsubrl
test
add
shr
pop
clc
fimuls
and
inc
dec
lods
sub
adc
push
lret
jge
movsl
pop
lea
push
mov
adc
jbe
push
inc
dec
cli
dec
push
fisubrs
hlt
jae
xor
sbb
inc
push
lock
or
pop
push
adc
or
sub
hlt
data16
sahf
mov
dec
out
mov
xchg
sahf
in
sbb
cmp
jne
jb
call
add
adc
sahf
addps
stc
rcrl
jo
mov
mov
ficompl
add
adcl
mov
jge
cmp
and
jg
or
push
nop
into
sbb
ret
cmp
test
outsl
dec
jmp
push
test
mov
xchg
ret
push
in
and
aaa
nop
in
pop
mov
shlb
xchg
lret
hlt
fdivrs
sub
sub
mov
popf
xchg
push
push
pop
sbb
fisubl
je
in
inc
call
call
stos
cs
lods
call
gs
or
pop
add
cmpl
imul
jl
lea
adc
ja
cmp
mov
dec
rcrl
push
cmp
pop
sar
pop
mov
fsubrl
sbb
xchg
push
or
inc
loopne
movsb
inc
mov
paddd
fcomp
add
xchg
loope
inc
jae
or
je
or
je
or
test
ds
enter
or
add
pop
cs
add
out
loope
rcll
int3
test
mov
adc
adc
or
or
mov
add
sub
push
imul
or
dec
ljmp
movsl
cltd
nop
imul
cmp
sbb
jo
stc
lock
or
ret
mov
lcall
inc
popa
test
or
xchg
loope
insb
xchg
pusha
sub
adc
sbb
pop
pop
mov
mov
js
add
or
add
addb
push
xor
imul
imul
and
dec
jae
adc
movsl
or
jns
rcrb
add
mov
call
out
pop
pop
pushf
dec
mov
lcall
push
mov
jb
sub
adc
rcll
pop
push
rolb
mov
in
shll
cwtl
mov
xor
dec
movsl
jmp
mov
into
out
dec
test
lea
arpl
sbb
xor
sub
cmp
mov
pop
mov
add
jo
or
dec
and
rorb
in
push
sbb
or
xor
mov
es
add
lret
pop
mov
testb
sub
sahf
inc
push
repnz
aas
add
push
insl
sub
loopne
cmp
lods
ret
loopne
ds
cmc
pushf
sub
les
loopne
test
add
cmp
jmp
mov
push
sbb
sub
mov
inc
mov
push
add
dec
mov
or
or
iret
xor
or
loop
push
jmp
mov
pop
lret
inc
lods
xlat
mov
pop
dec
sbb
mov
dec
mov
mov
mov
fsubrs
xchg
lahf
xor
jns
push
sbb
je
test
sub
push
jo
call
sbb
mov
mov
mov
stos
pusha
je
or
sub
mov
test
popa
shrl
insl
loopne
popa
xor
push
mov
cwtl
xchg
gs
popl
pusha
and
nop
dec
shlb
adc
movsb
jb
xchg
lds
lds
ficompl
shl
cmpsl
add
push
add
mov
daa
in
scas
ljmp
addr16
xchg
hlt
jmp
ja
fists
pop
jle
imul
aaa
andb
pop
push
out
mov
rcll
or
pop
or
mov
nop
cmp
pop
lret
add
mov
dec
pop
xor
cmp
sub
push
sbb
mov
andb
jne
movsl
push
push
push
jbe
add
pushf
iret
sbb
inc
mov
ud1
cmp
or
mov
das
push
dec
sub
mov
pushf
and
jae
imul
pop
emms
mov
add
cmp
sub
push
insb
arpl
xchg
es
out
push
push
into
in
push
pop
test
jecxz
bound
jb
shl
je
and
inc
mov
ja
sub
xchg
sub
cltd
push
xor
dec
add
add
adcl
push
push
orb
neg
jne
push
or
icebp
xchg
jnp
or
ds
xlat
bndldx
jge
popa
loop
daa
mov
or
outsl
mov
or
popa
lea
lcall
inc
adc
and
stc
cltd
push
push
push
xchg
rcrb
jmp
repnz
sbb
cmp
sahf
fimull
mov
dec
jmp
sub
sub
inc
cmp
sbb
fcompl
cmpb
je
shlb
or
add
cmp
in
movsb
aas
mov
es
cld
mov
movsb
sub
clc
int
and
xor
adc
sub
push
jmp
push
mov
iret
xor
sub
push
fcoms
jne
dec
push
mov
mov
jo
shrl
mov
or
xchg
test
jne
jmp
and
sbb
adc
sub
pop
mov
jg
push
xor
cmp
inc
push
cmp
jp
mov
sbb
adc
out
mov
mov
movsl
imul
xorl
jo
sub
add
dec
stc
adc
lahf
mov
and
xor
cltd
fst
add
shlb
jg
jmp
adc
xchg
pop
jmp
adc
mov
inc
xor
mov
xorb
je
gs
mov
sbb
jle
in
out
mov
pop
mov
call
or
clc
ret
xchg
mov
imul
mov
sbb
push
mov
pop
xchg
addl
and
loopne
ret
nop
loop
nop
cltd
push
into
repz
pop
lcall
or
outsb
movsl
leave
adc
xchg
or
and
rcrb
cld
inc
popf
je
push
push
pusha
outsl
mov
adc
pusha
jecxz
notl
int3
jo
out
fisttpl
or
mov
mov
mov
daa
test
test
mov
or
pushf
rcrb
and
cmp
les
dec
jb
inc
push
xchg
call
cmp
mov
call
adc
or
and
sub
adc
xchg
popf
lods
xchg
adc
out
addr16
mov
or
adc
incb
test
and
jb
into
mov
aam
adc
mov
pop
sub
jae
sub
and
add
cwtl
pop
push
sbb
loope
test
mov
lock
psubsb
jb
in
push
hlt
ret
inc
addl
call
xchg
push
out
lret
sbb
movsl
and
gs
fcoms
jmp
dec
jle
adc
mov
pushl
stos
adc
lahf
out
outsl
ret
ficoms
add
push
mov
enter
jmp
xchg
cli
inc
cmpsl
or
push
cmpl
mov
jae
inc
adc
xchg
xchg
xchg
fucomi
out
loopne
push
loopne
loopne
pop
lods
gs
xchg
stc
mov
mov
sub
ljmp
imul
jecxz
mov
and
sub
pop
out
and
pop
sbb
add
dec
jl
xor
inc
xchg
and
cli
das
add
jo
inc
and
mov
jb
jb
jne
lds
add
jne
add
jbe
shlb
jbe
pop
sbbl
insb
add
jle
int3
add
leave
pop
std
pop
jbe
and
and
nop
xorb
pop
cmp
je
push
mov
clc
pop
push
movsb
add
subl
mov
sub
push
inc
sarb
mov
or
dec
test
ds
push
test
adc
cmove
push
inc
sub
outsb
cmc
fnstenv
sbb
enter
sar
or
sub
loopne
or
mov
scas
or
mov
movsl
test
data16
in
xchg
push
fwait
xchg
push
jns
jecxz
fcompl
add
push
cmp
inc
or
lret
fcoms
jl
inc
cmp
inc
mov
jne
xchg
inc
sbb
pushf
add
psadbw
mov
xor
jb
loop
fdivr
lcall
lods
popa
adc
imul
add
pop
and
mov
pop
cmp
mov
test
loopne
arpl
icebp
pop
xchg
loope
movsl
cmpsl
inc
push
or
inc
js
push
add
push
ret
fstl
sbb
lret
pop
jl
jl
xor
cltd
mov
ficoms
dec
sub
test
mov
ret
add
stos
test
cmpsl
and
ret
adc
ja
clc
sub
inc
xor
test
mov
gs
mov
lock
lock
and
jae
push
leave
xchg
mov
or
int
xor
mov
in
rclb
xchg
imul
or
push
sbb
pop
imulb
sbb
loopne
jecxz
jo
sub
and
cld
mov
daa
les
sbbb
cld
dec
xchg
xchg
or
arpl
push
bound
inc
inc
jecxz
sub
add
into
xor
call
push
dec
and
in
hlt
dec
add
xor
jmp
cmp
pop
xor
cmp
add
movswl
dec
lret
sbb
ja
gs
ds
and
and
pop
or
hlt
loope
mov
rcl
sub
inc
roll
pop
push
add
addb
rclb
call
mov
lods
lret
test
xchg
ss
ljmp
sub
cmp
clc
sbb
push
outsb
push
dec
rcrl
testb
xor
ss
mov
test
dec
ret
add
jmp
andl
popa
sub
xor
addb
cmc
pop
cmp
pushl
cmpl
das
pop
pop
jg
sbbb
rcrb
sbb
jmp
pop
ja
dec
mov
aad
dec
setb
dec
popf
in
xchg
dec
subl
dec
mov
mov
add
mov
test
test
push
cmp
mov
int
js
call
pop
xchg
les
push
rcrb
bound
outsl
frstor
bound
mov
js
ret
mov
mov
add
test
mov
lds
adc
pop
addr16
popf
and
pop
ja
inc
cs
xor
fistpll
sahf
dec
xor
xor
inc
mov
shll
outsb
test
mov
or
lods
ficoml
add
sbb
lea
push
insb
test
mov
xchg
jp
scas
cltd
fsubs
aas
repz
cltd
scas
pop
daa
pop
jb
hlt
push
add
mov
bnd
xchg
push
inc
int3
sub
aas
insb
jne
jp
in
sbb
xchg
or
pop
and
pop
mov
insb
jg
adc
cmpb
fcmovb
lods
xor
daa
daa
daa
fnsave
cmp
daa
daa
and
aam
pop
jb
push
rcrb
out
shrb
push
repz
or
cmp
repnz
loope
ret
mov
lea
int
in
sbb
mov
jb
mov
cwtl
leave
mov
xchg
mov
adc
ret
cmc
mov
adc
push
enter
fildl
adc
movsb
xor
ja
mov
cmpsl
jb
mov
push
xchg
xchg
outsl
fisttpll
hlt
js
add
shrb
in
je
jns
mov
mov
sub
push
cwtl
daa
jns
inc
xorl
inc
pop
shlb
cmpsb
inc
sub
mov
movsl
in
out
jnp
push
repnz
jno
bound
or
mov
js
push
jae
cmp
cmp
add
inc
push
test
loopne
int
stc
lods
outsl
cltd
add
mov
mov
movsl
jmp
loop
addr16
push
in
test
std
lods
orl
pop
lea
dec
mov
pop
test
add
clc
add
jne
and
inc
mov
outsb
or
push
pop
xchg
xchg
dec
popf
jecxz
insl
fs
push
push
loopne
inc
or
aas
inc
rorl
push
pop
push
mov
jmp
loope
jg
fcoms
lret
cmp
pushf
push
into
inc
push
mov
scas
adc
lods
lea
sbb
pop
push
lods
or
push
mov
sbb
inc
aas
sbb
inc
inc
pop
aaa
mov
lret
jae
sub
add
loopne
pop
and
pop
mov
pop
enter
jnp
xchg
daa
push
rorb
dec
push
add
pop
fdivrl
lods
jns
and
dec
nop
out
sub
cmp
cmpsb
ret
faddl
adc
aam
cmpsl
add
fs
and
xchg
sub
xchg
sbb
das
cmpsl
lcall
aam
pushf
or
cmpsl
imulb
sti
daa
pop
mov
arpl
or
sbb
dec
jl
mov
cmp
je
pop
add
sbb
cmc
fst
outsb
push
andb
mov
push
scas
cmpsl
stc
cmp
dec
test
lret
xor
mov
jg
out
xchg
inc
mov
add
inc
fidivs
fxch
or
loope
xchg
leave
adc
push
xor
mov
mov
or
xchg
sub
sub
mov
insb
mov
inc
jo
pop
rcll
pop
or
je
sbb
lods
inc
inc
lret
xor
pop
push
jmp
mov
mov
or
testb
push
add
sbb
adc
mov
cmp
jmp
add
lds
movsl
pop
add
dec
iret
jge
std
es
add
add
or
cmp
and
and
sub
inc
add
sub
sub
aaa
dec
xchg
cmpsb
xor
rclb
jo
sbb
dec
insl
xchg
rorl
ret
xchg
negb
pop
push
sbb
add
cs
xchg
add
jl
sbbb
sub
ret
and
or
add
push
sub
mov
adc
or
lock
push
sbb
orl
rcll
jnp
out
lods
lret
push
out
adc
sarl
mov
adc
mov
and
hlt
add
sbb
push
add
or
popa
or
mov
sbb
push
dec
shll
and
fmull
inc
jo
dec
add
loopne
mov
or
jecxz
test
mov
jno
push
mov
push
popf
out
cli
mov
enter
push
push
mov
shrb
shrl
xchg
shlb
mov
inc
add
and
mov
jbe
and
cld
ficoms
push
xor
adc
arpl
inc
mov
mov
push
inc
inc
cld
pop
jae
add
dec
and
loopne
dec
jge
lret
filds
orb
mov
sti
xchg
dec
dec
mov
mov
sbb
pushf
adc
mov
xchg
insb
mov
in
leave
sub
mov
cmp
call
lea
cmp
ja
mov
sbb
sbb
and
cld
jmp
pop
mov
movsl
or
pop
lahf
push
dec
push
pop
ja
fcomps
clc
mov
jg
je
test
ja
std
sbb
cld
xchg
scas
mov
pop
mov
adc
push
movsl
inc
add
add
cmp
and
iret
add
jno
mov
dec
mov
mov
push
cmpb
je
lods
xchg
jmp
mov
shll
xor
pop
jge
mov
cmp
jne
movl
fisttpll
addb
inc
std
jne
subb
jmp
sub
insl
popf
xchg
and
jmp
jo
or
pop
rolb
push
and
add
pop
lods
fwait
mov
push
mov
mov
add
mov
inc
pop
lcall
shrb
xor
inc
shl
into
std
mov
in
push
jmp
lock
sbbb
jae
xchg
and
enter
test
jge
scas
aas
rolb
jnp
jae
cmp
call
sbb
lods
shl
jne
xchg
sbb
pop
inc
push
leave
inc
clc
add
imul
loopne
aaa
or
jmp
inc
in
leave
add
cmc
std
std
mov
mov
cmp
lret
add
pop
movb
mov
jo
inc
add
mull
xorb
push
aas
pusha
les
aam
push
sti
dec
sbb
mov
xchg
and
pop
orb
xchg
fs
sub
dec
jne
inc
psadbw
inc
stos
addr16
scas
dec
jle
sarb
rcrb
push
mov
test
inc
jbe
mov
or
dec
jne
push
scas
andb
or
push
icebp
lret
addr16
jnp
cmpsl
cmp
into
xor
nop
push
stc
rcll
adc
jo
adc
mov
pop
daa
pop
cmp
pop
lret
test
adc
or
stos
and
cmc
xchg
jge
cmp
push
and
lcall
scas
pop
pop
pop
add
ret
push
rcrl
dec
or
cmp
add
pop
push
lret
sti
xlat
testb
insb
ljmp
add
xor
and
dec
mov
or
xor
clc
add
sbb
into
dec
out
or
cmp
inc
jmp
jmp
cmp
dec
sbb
mov
mov
jmp
add
ret
inc
jo
mov
cmp
adc
pop
add
fwait
jno
es
mov
jmp
popf
jmp
or
cmp
pop
aaa
xchg
add
lods
andl
ljmp
std
and
sbb
ljmp
fwait
jb
fisubl
and
push
fs
mov
shrb
fimuls
or
clc
xor
in
mov
mov
aaa
cmpl
ret
dec
dec
cmp
adc
addb
movsl
sub
mov
out
jmp
inc
xor
adcb
sbb
adc
leave
clc
icebp
and
ret
je
jp
jbe
sarb
pop
cmp
lods
or
pop
sbb
mov
imul
inc
mov
cmpsb
movsb
jnp
into
sbb
data16
mov
inc
inc
sbb
sub
add
mov
in
sub
and
sbb
inc
inc
cs
push
mov
xlat
cmp
cwtl
daa
sbb
adc
ljmp
sbb
inc
faddl
or
bound
mov
cld
inc
add
mov
add
jns
dec
jge
mov
cmp
bound
mov
push
and
sub
cmp
mov
push
sbb
inc
out
cmp
test
mov
xchg
push
sbb
pop
rcll
pop
add
inc
and
sub
add
ss
outsl
add
add
rcr
cmovp
pop
pop
mov
jmp
pop
xor
lods
push
dec
jb
add
dec
ss
or
or
and
dec
mov
mov
push
or
mov
mov
mov
jno
lods
push
push
push
pusha
fsubr
mov
mov
push
pop
lahf
cltd
and
push
pop
or
push
mov
filds
addb
data16
add
stos
sub
or
and
push
jg
sahf
adc
jno
mov
inc
shlb
dec
sbb
scas
movsl
push
insb
pop
arpl
adc
sbb
pushf
adc
add
cmp
or
pop
dec
rolb
test
sbb
push
push
ds
add
push
dec
push
sub
test
adc
mov
out
fnstenv
not
lock
sbb
pop
iret
push
adc
in
xor
stos
clc
mov
and
sub
sbb
sbbl
enter
adc
loop
cmp
dec
jl
jle
sbb
pushl
xchg
pop
jecxz
dec
mov
dec
pop
insb
bound
xor
cmpsl
push
sbbl
arpl
xchg
jle
or
mov
mov
insl
jg
mov
push
xor
mov
push
fnstcw
enter
or
xor
push
rorb
mov
pop
jo
les
pop
xchg
push
jo
cmpl
leave
test
push
adc
pop
ds
fucomp
hlt
cmp
add
xor
sti
adc
cmp
mov
jae
or
lret
xchg
loopne
data16
sub
xor
stos
add
pop
xor
pop
push
or
xchg
mov
mov
inc
jne
cmp
sub
stos
mov
dec
and
add
loope
out
pop
mov
ljmp
pop
sub
movsb
aas
es
sub
loopne
or
aam
addb
mov
inc
js
sub
jmp
jmp
vmovd
inc
inc
add
push
pop
aam
jmp
mov
rclb
pop
cs
sub
mov
rcrl
or
xor
sub
mov
incb
push
push
lock
jg
loop
shr
je
insl
sbb
add
inc
adc
push
sub
push
pusha
lods
loope
scas
jo
mov
dec
jne
shlb
or
sub
add
jg
adc
divb
xor
ret
add
lods
out
sub
jne
push
or
or
cli
pop
pop
ret
in
xchg
rcrl
push
mov
bound
add
cli
shr
add
sbb
inc
push
mov
aam
clc
mov
xlat
loop
ret
and
adc
xchg
dec
popf
adc
lods
outsb
adc
adc
add
push
adc
mov
push
mov
dec
mov
shll
enter
mov
and
push
sbb
mov
insb
aaa
call
movsb
push
adc
jo
ja
add
xchg
pop
mov
and
rcrb
push
add
lret
iret
nop
lret
dec
or
xor
dec
jmp
add
add
mov
dec
push
or
popl
fsubrl
add
cwtl
sbb
test
inc
sbb
mov
insb
push
call
sub
rcl
repnz
add
sub
in
mov
arpl
neg
in
jno
xchg
rcr
mov
les
fbld
jmp
and
das
cmp
mov
push
mov
rorl
dec
add
and
sbb
lret
test
add
sbb
pusha
test
add
push
xchg
push
subl
pushaw
iret
in
call
or
sbb
or
pop
or
stc
loopne
and
xor
icebp
int
xchg
add
jmp
decl
js
jmp
mov
mov
frstor
adc
aam
daa
jns
pop
js
and
push
add
lock
push
sub
xchg
jne
lea
xor
xor
adc
dec
dec
push
repz
repz
pop
push
jnp
iret
mov
int3
fcoms
mov
je
mov
adc
mov
ss
cwtl
mov
jne
push
adc
out
add
fs
cmp
jecxz
push
in
jb
push
inc
and
jle
mov
sbb
and
inc
adc
loope
inc
pop
cmp
in
je
push
cltd
jmp
inc
faddl
inc
sbb
stos
and
push
sar
push
jmp
test
add
aaa
xor
jmp
rcr
jg
xchg
and
ret
and
push
push
test
xor
fstl
jmp
sub
rol
es
or
mov
xor
cld
jmp
mov
test
cld
divl
adc
mov
cmp
je
dec
mov
inc
pop
fstps
pop
xor
add
mov
jne
lea
mov
shr
std
mov
les
mov
push
mov
shll
add
sti
je
jmp
bound
shl
pop
jo
add
sbb
or
inc
cmpl
shlb
mov
xor
adc
sbb
xchg
loop
ret
pop
xor
lahf
mov
xchg
pop
ret
xchg
ds
or
xchg
mov
pop
mov
sbb
jne
mov
pop
js
mov
sub
push
addb
dec
daa
je
add
test
das
xchg
int3
mov
repnz
std
mov
lods
std
test
das
lret
call
pop
xchg
xor
mov
adc
les
or
incb
lret
je
or
jp
stc
test
add
push
scas
jno
cmp
addr16
adc
stc
mov
mov
or
out
xor
ds
push
cmp
test
mov
xchg
cmp
std
push
push
test
sbb
xor
shrl
ret
mov
add
pop
rol
gs
mov
or
notb
add
cmpl
add
or
add
icebp
cmp
and
popa
mov
jl
xor
push
popa
cmp
mov
test
mov
rcl
mov
sbb
sub
sub
dec
cmp
inc
sub
aad
pop
and
or
mov
jne
cmpb
ret
add
jl
in
cmp
inc
xor
mov
test
outsl
ss
js,pn
pop
mov
adc
and
xor
shlb
pop
jge
lds
cwtl
adc
in
test
arpl
inc
push
out
repz
mov
pop
mov
xchg
dec
je
push
or
push
or
cli
and
out
xchg
mov
mov
jecxz
movsb
popf
test
cmp
and
movsb
jb
stc
mov
push
adc
loopne
xchg
shrl
dec
or
or
loopne
dec
fxch
leave
movsb
ret
das
loope
jg
mov
mov
shll
ret
and
sahf
cmpsl
aam
inc
pop
sbb
and
lods
jge
push
pop
aam
es
mov
jmp
mov
sub
repnz
enter
leave
loopne
mov
cmp
add
test
adc
and
adc
jne
cltd
test
fwait
or
jo
fwait
sub
fwait
cmp
mov
xor
fwait
mov
lcall
out
js
sbb
insb
sub
xor
add
or
inc
lcall
loopew
mov
scas
or
adc
sbb
loope
jecxz
inc
fcmovne
push
sarb
nop
mov
enter
loopne
popf
rcrb
loopne
mov
mov
pop
mov
push
sub
adc
sbb
dec
push
cmp
je
ret
scas
inc
cmp
stos
sbbb
loope
sub
mov
fstl
push
push
test
push
addb
jge
or
xchg
lea
push
adc
or
pushf
stos
mov
mov
add
xchg
xchg
loope
js
and
movsb
loop
mov
imul
lods
or
dec
or
jno
mov
out
adc
adcb
xor
push
xor
arpl
fstl
adc
xor
push
add
decb
test
adc
fcoms
neg
ret
arpl
push
cmpsl
cmpsl
ds
inc
mov
cmp
xchg
das
movsl
leave
cmpl
repz
loopne
and
mov
or
xchg
lahf
mov
lahf
inc
repz
cmpsl
test
inc
xchg
fcomp
bound
xchg
subb
fidivrs
or
add
inc
jmp
dec
cs
or
shlb
das
in
jbe
jmp
sti
mov
xchg
mov
add
pusha
in
roll
dec
sub
insb
fldl
dec
jno
or
sub
sbb
jmp
dec
adc
jnp
dec
add
mov
js
out
sub
pop
mov
orl
jle
mov
jmp
jmp
mov
xchg
or
pop
or
lds
mov
mov
fldpi
sbb
aaa
dec
mov
je
fcomps
push
push
jno
adc
sbb
mov
sub
sbb
adc
sti
jne
cmp
hlt
push
nop
add
sub
or
sbbl
mov
jnp
popa
outsl
pop
pop
lock
dec
push
add
je
add
inc
imul
popa
adc
dec
pop
loope
inc
daa
pop
mov
mov
rolb
push
cmpsb
jp
mov
pop
inc
or
js
subl
int
push
fdivrl
rolb
sbb
pop
aam
lods
inc
push
xchg
and
sbb
pop
fdivs
cmp
lea
rorb
sbb
pop
mov
lea
pop
or
pop
out
rolb
aas
loope
xchg
jno
call
xchg
jl
movsb
mov
stos
mov
pop
xchg
xlat
loope
pop
repnz
ret
pop
leave
shll
lods
lock
aas
pop
add
mov
sub
xor
arpl
outsb
fsubr
dec
aas
pusha
aas
and
js
scas
movsl
push
out
insl
jne
scas
adc
into
shl
lods
outsb
insb
mov
jb
inc
aad
mov
pop
jo
xlat
adc
fsubrs
inc
mov
inc
inc
inc
inc
inc
inc
inc
cmp
dec
xchg
jno
sbb
jo
std
call
xor
push
mov
nop
mov
rol
add
sti
inc
es
mov
cmpsl
inc
scas
dec
movsb
add
in
and
aad
cmc
push
inc
test
inc
ss
mov
sub
sub
jecxz
cmp
loopne
dec
movsb
adc
and
xlat
enter
decb
cld
push
mov
int3
push
dec
cwtl
cltd
nop
and
inc
mov
or
cwtl
lods
lods
cmp
push
and
fimuls
xor
cmp
movsb
jb
dec
test
test
leave
leave
mov
sahf
pop
mov
cmp
aaa
jbe
addr16
test
inc
cwtl
nop
add
dec
xchg
pop
inc
dec
mov
adc
aaa
repnz
xor
push
cwtl
pushf
xor
adc
nop
xor
mov
pushf
nop
inc
cmpsb
inc
push
pushf
cwtl
nop
inc
dec
mov
test
divb
int
shr
sarb
or
hlt
stos
sbb
xchg
pop
sbb
push
out
lcall
clc
outsl
add
sub
addr16
sbb
mov
mov
mov
ret
ds
or
xor
je
sub
daa
ja
adc
or
test
sbb
pusha
xor
aam
or
inc
or
add
iret
sbb
add
mov
rcrb
xor
adc
rcll
fmuls
test
xor
mov
iret
push
jmp
ficoms
mov
ja
add
int
jmp
jnp
dec
xor
icebp
sbb
add
dec
fsts
dec
jno
sti
add
pop
mov
ret
movsl
jecxz
sti
mov
add
cmpsb
or
add
shlb
and
inc
cltd
les
lock
popa
insb
loop
jo
and
and
or
hlt
mov
push
sbb
rcrb
adc
and
add
push
sahf
test
add
pop
push
ljmp
add
adc
loope
shr
je
ret
jge
or
push
push
dec
adc
push
and
loope,pn
xor
dec
push
ds
out
out
outsl
inc
or
jbe
jle
lahf
out
adc
jo
cmp
iret
lea
mov
jo
in
int3
pop
fbld
lea
lea
inc
out
in
push
stos
and
shrl
test
mov
xor
dec
cmp
xor
movsb
pusha
jp
insb
mov
push
negl
ret
mov
mov
shrb
lret
ret
mov
ds
shr
dec
arpl
sbb
xchg
sbb
cmp
or
mov
test
lret
and
adc
loopne
adc
xchg
cmp
xorl
xchg
sbb
xchg
inc
add
jne
repz
rorl
leave
add
lret
push
test
sidtl
and
fsubrl
add
scas
mov
divb
or
push
sbb
push
dec
and
dec
dec
sub
lret
add
ds
sbb
bts
dec
jmp
hlt
cs
inc
imul
push
fdivs
xchg
les
mov
popa
dec
arpl
or
adc
jne
inc
adc
and
cmp
fmull
cmp
scas
idivl
inc
sub
xor
scas
inc
les
add
pusha
call
push
cmp
rol
mov
push
mov
pop
out
add
xor
and
sbb
sub
mov
mov
ficomps
cmp
jne
loopne
mov
sbb
inc
mov
add
pop
or
mov
shr
jle
andl
or
outsb
sbb
stc
mov
fs
clc
sub
fs
jmp
cmp
xchg
subl
sbb
pop
cmp
lea
ds
xchg
sub
scas
or
push
cmp
aam
xor
mov
fs
rcrb
xor
pop
rcll
sub
sahf
pop
adc
sbb
andb
jmp
adc
jae
ja
adc
mov
lods
sbb
mov
mov
rcll
jmp
inc
or
arpl
push
out
push
mov
add
push
fists
or
sub
or
adc
icebp
je
into
inc
or
push
movsb
inc
push
imul
filds
sbb
jb
gs
jmp
adc
andl
push
jbe
add
gs
jle
xchg
add
inc
sbb
mov
and
xor
pop
add
incl
dec
and
sbb
pop
jne
xor
adc
aad
in
int3
dec
add
stc
inc
test
sub
xchg
call
dec
in
sar
dec
add
xlat
inc
aam
xor
adc
push
sbb
pop
and
popa
add
xorb
inc
cmpsl
jb
cwtl
sarl
cld
enter
ficompl
nop
out
or
dec
pop
dec
and
neg
jae
mov
dec
or
in
push
add
sub
fidivrl
movsl
adc
incl
mov
inc
add
cs
je
cmp
stos
insl
pop
adc
mov
mov
mov
and
dec
cld
sarl
imul
popa
mov
pop
pop
jle
in
shll
cld
add
push
dec
test
sbb
or
pop
pop
insw
push
mov
and
es
and
inc
imul
ds
and
loopne
cmc
pop
out
jo
xor
inc
std
shlb
fcomi
js
sbb
mov
or
decb
outsb
inc
mov
xchg
or
xor
push
icebp
add
jae
incl
push
and
int3
jae
lea
jbe
clc
pop
add
add
push
xor
jnp
inc
mov
orl
andl
pop
mov
rcrb
les
movsb
xor
aaa
popa
adc
cmp
xor
inc
push
pop
cmp
push
je
cltd
pop
sarl
lock
sub
lea
push
out
test
inc
or
mov
loop
and
pop
dec
call
jge
inc
push
pop
push
dec
xorb
jecxz
lea
xchg
or
jae
lock
movw
insl
add
dec
add
pop
movb
xor
dec
das
xchg
pop
dec
inc
ss
cmpl
push
sbb
call
push
xchg
call
lret
sbb
fiadds
ret
loope
add
jl
sarl
fnstsw
mov
mov
addl
fbstp
daa
faddl
add
or
aas
cmp
or
push
aas
js
rorb
and
into
sub
shll
shlb
cltd
xor
jl
ljmp
hlt
jb
loopne
aam
lret
pop
push
and
subl
fmuls
xchg
nop
sbb
cmp
pop
ret
cmp
clc
add
xor
jmp
lods
dec
cld
xchg
add
or
sbb
mov
add
mov
inc
inc
jo
sbb
dec
cmp
adc
mov
repz
xchg
out
jmp
xor
push
orb
jmp
movb
rorb
pop
jmp
lea
push
adc
repz
sub
push
insl
arpl
inc
aaa
xor
mov
mov
js
les
xor
adc
in
insb
lock
je
push
mov
movl
cld
call
ficoml
jmp
push
add
xor
idivb
mov
add
dec
and
outsb
aam
cwtl
cwtl
or
add
imul
mov
orps
pop
test
adc
sti
or
shlb
push
push
add
mov
and
jnp
sub
push
paddusb
repnz
lock
fstl
and
test
jne
out
repz
loop
sbb
or
and
push
lret
pusha
pusha
imul
test
jb
jae
pop
dec
shrl
ret
mov
pop
pushl
jnp
lods
int3
sbb
pop
push
nop
popa
out
sub
push
lock
jecxz
or
sub
lea
daa
pop
inc
sbb
movsl
xchg
enter
in
sub
push
ret
rcl
popf
imul
arpl
fisubl
push
and
in
jb
pop
sbb
addr16
lret
add
push
add
jnp
fs
enter
cmp
cmpsb
push
cmp
adc
sarb
xor
add
stos
in
cld
cs
mov
fsubrp
push
shlb
xchg
inc
inc
adc
lahf
lret
jae
mov
inc
sub
sahf
lret
pop
inc
dec
inc
pop
dec
dec
dec
popf
cmpsl
repnz
push
adc
mov
fs
insb
add
in
inc
jb
fnclex
push
sbb
sbb
add
fldl
movaps
pusha
push
lock
jmp
addr16
add
inc
cli
push
add
or
ret
imul
ror
cmp
jne
lea
push
leave
sub
mov
mov
inc
or
push
pusha
push
push
lods
test
inc
ficoml
sbb
adc
jle
xchg
or
lret
sbb
fdivs
mov
dec
aaa
enter
jge
inc
push
sbb
cmp
add
or
je
xchg
test
push
add
sub
sbb
jb
lds
xchg
push
xchg
leave
clc
sti
cmp
stc
jmp
nop
xchg
idivl
ljmp
mov
cmp
xor
inc
fistpl
sbb
js
loopne
xor
daa
es
push
lea
jecxz
ret
or
or
xor
and
ret
fwait
loopne
mov
lret
mov
jle
jns
shlb
movsl
or
scas
mov
movsb
stos
or
js
sbb
cmpsl
mov
aas
clc
inc
rolb
and
or
jne
or
push
aad
cmpsb
lock
dec
mov
lret
xchg
fildl
push
subb
adc
pop
lea
mov
inc
test
mov
lock
cltd
or
out
jle
and
sbb
fistps
les
ret
enter
rcrl
add
ret
sub
xchg
add
jmp
fsubs
or
aam
scas
add
jg
adc
out
pop
mov
ret
mull
lsl
jmp
push
pop
cmp
jns
push
inc
shr
rcr
shr
rcr
or
mov
div
pop
dec
test
std
mov
pop
jb
cmp
or
cmp
or
repz
in
xor
and
adc
push
inc
add
inc
lret
ja
cmp
iret
pop
ret
adc
sbb
inc
iret
je
test
adc
jbe
je
mov
push
aaa
stos
or
cmc
inc
in
orb
sbb
mov
inc
mov
out
or
xchg
or
mov
pusha
pop
frstor
mov
mov
lahf
or
jge
cmp
add
test
sahf
call
mov
xchg
mov
dec
nop
adc
mov
dec
les
xchg
cli
and
adc
inc
inc
and
or
pop
jmp
dec
sbb
sub
mov
push
repz
movsb
mov
insl
or
sub
iret
xor
sbb
or
loopne
cmp
sbb
mov
clc
out
test
cltd
and
in
sbb
and
mov
nop
shlb
add
and
add
sbb
out
fists
xor
pop
lret
xor
sbb
add
cmp
mov
sub
inc
adc
daa
xchg
or
ljmp
jne
push
add
and
xor
je
xchg
arpl
pop
inc
cmp
mov
or
rorl
rorl
inc
add
jbe,pt
or
mov
test
push
dec
pop
dec
mov
loope
loope
aas
dec
adc
add
addl
xor
add
leave
or
add
add
mov
dec
enter
jl
testl
addr16
inc
pop
outsb
cltd
cmp
mov
in
dec
lods
mov
push
and
pop
lret
ja
lods
fadds
cld
dec
or
sub
sbb
lahf
ss
dec
mov
movsb
add
cwtl
push
lods
sub
cmp
outsb
mov
loop
les
loope
xor
push
cmp
sub
pusha
xchg
xchg
ss
popa
xor
addr16
mov
mov
cmp
dec
inc
push
mov
ds
add
ret
pushf
in
lds
xor
and
or
or
iret
jo
std
nop
call
imul
insb
loop
nop
cmp
mov
sub
cmp
ret
push
je
mov
mov
adc
sub
inc
and
jmp
fistpl
push
mov
aas
test
add
int3
sub
aad
orl
testb
jmp
adc
outsl
lods
inc
xchg
push
jae
loope
mov
imul
pop
mov
cmp
faddl
push
test
add
push
icebp
lock
add
xor
ficompl
pusha
xchg
imul
add
enter
subl
adc
cli
pop
inc
mov
jl
cmp
jg
inc
jmp
add
fsubr
data16
jne
imul
lea
push
dec
push
add
cmp
pop
lea
or
adc
je
dec
scas
push
pusha
mov
mov
or
xchg
mov
lock
xor
movsb
xchg
icebp
xor
mov
es
mov
jne
push
adc
and
or
incl
push
movsl
sub
push
stos
into
mov
push
push
adc
dec
mov
push
cmp
jge
repz
push
jae
add
out
testb
push
mov
cmpsb
cwtl
pusha
sbb
nop
imul
mov
notb
test
pop
stc
xor
pop
inc
jmp
push
add
mov
push
sti
pop
psubd
push
sbb
pushf
or
popa
mov
jl
js
mov
lods
add
ljmp
inc
cltd
pushf
jmp
xor
mov
lahf
subb
and
ja
mov
sub
pop
outsb
gs
rcll
orl
loop
mov
xor
and
adc
push
mov
shrb
pop
int3
orl
inc
adc
push
gs
jbe
and
add
cmp
or
or
rcl
mov
pop
ja
dec
or
loopne
addr16
pop
xorb
adc
mov
push
push
mov
add
add
add
jo
inc
daa
jno
and
or
and
pop
or
xor
mov
shlb
or
xchg
cli
adc
lea
lea
or
out
sti
loopne
mov
popa
mov
mov
sub
popl
loope
nop
cmp
pop
fiadds
inc
mov
mov
enter
sahf
adc
push
mov
adc
xchg
repnz
mov
div
xchg
xchg
pushl
add
jno
pop
cmp
mov
loop
mov
mov
pop
push
push
xor
test
pusha
pop
stos
ljmp
push
inc
cmp
ds
sbb
dec
sbb
push
add
insb
dec
sbb
out
bound
xlat
insb
enter
push
push
adc
cmp
or
adc
std
rol
pop
sbb
add
and
adc
cmp
mov
dec
hlt
cmp
cmp
jmp
mov
jne
jecxz
push
cmp
cmp
add
push
pop
adc
add
aas
pop
and
dec
push
divl
add
stos
inc
pop
add
daa
or
adc
jmp
mov
sbb
cmp
pop
pop
cmp
and
push
pop
pop
add
xorb
test
insb
je
sub
sub
add
push
hlt
push
sub
xor
or
and
loopne
add
mov
jmp
jg
lcall
and
pop
add
dec
adc
inc
rcll
das
xor
mov
gs
push
es
xchg
cmp
add
test
pop
inc
adc
xchg
je
dec
lods
roll
cmp
lea
adc
or
adc
insb
inc
popa
mov
push
add
lock
inc
mov
xor
das
lret
pmaxub
push
cwtl
cmc
mov
add
shl
dec
jl
adc
sysexit
jp
fcompl
sti
inc
fsubr
das
push
inc
jmp
mov
cli
popf
pushl
leave
icebp
sub
xor
psadbw
popa
insb
push
xchg
fidivs
add
add
xor
sbb
cmp
push
mov
mov
jmp
mov
push
push
nop
xor
adc
fcomps
movsb
mov
dec
shll
dec
and
jmp
pop
jecxz
sub
xchg
call
cmp
loop
or
in
pop
xor
xchg
inc
jmp
push
mov
cs
fwait
mov
mov
sbb
scas
inc
or
pop
test
iret
and
mov
pop
xor
sub
cmp
hlt
add
nop
leave
dec
sub
popf
test
nop
or
xchg
and
incb
addr16
jmp
andl
jmp
mov
xchg
test
stos
popf
add
scas
push
mov
push
cld
fucomip
mov
mov
das
cwtl
cmp
jle
sub
cmp
xchg
or
push
jmp
dec
push
in
jnp
add
jbe
or
inc
sub
inc
loopne
hlt
jae
out
data16
adc
inc
sbb
sbb
mov
push
scas
mov
sub
ret
adc
clc
pop
jge
mov
mov
add
jmp
dec
jae
imul
sbb
jb
cmp
subb
pushf
and
outsb
mov
ja
sub
leave
pop
push
sub
and
cmp
lods
push
ds
cwtl
cld
pop
adc
fidivl
mov
lods
mov
scas
mov
lods
sub
out
xor
inc
stos
loopne
imul
je,pt
mov
data16
jno
adc
nop
mov
ret
fisubrl
call
jbe
ud0
testw
mov
sbb
xlat
pusha
jecxz
fldl
pop
shll
sahf
dec
dec
or
and
dec
cmp
mov
imul
lock
cmp
xlat
add
orb
jecxz
push
push
cmpsb
lret
movb
or
pop
js
sub
dec
mov
dec
test
sti
add
mov
mov
add
push
mov
push
fsubrs
cwtl
jge
add
add
mov
imul
sbb
xlat
test
clc
jge
pop
cmp
adc
loopne
inc
lods
orb
adc
mov
dec
mov
or
sub
ds
jbe
jle
jne
repz
or
rclb
pushf
add
aam
data16
fsubrp
lods
sarl
cmpl
fisttpl
pop
mov
sbbl
sbb
mov
jb
icebp
add
movsl
add
sbb
xchg
aam
into
loop
xor
push
loop
out
or
xchg
or
jne
mov
roll
ja
sbb
test
inc
xlat
jae
mov
std
mov
cld
cmp
sbb
or
cli
xor
and
cmp
pop
repnz
inc
testl
movsl
cwtl
jne
lock
mov
dec
into
lret
lock
out
jne
inc
or
cmp
xor
loopne
and
pop
dec
lock
xchg
pop
dec
xchg
nop
clc
sbb
push
jb
cwtl
pop
fsubrs
test
push
pushf
je
fldt
lea
lcall
add
movups
push
dec
std
test
scas
ret
xor
cmp
jb
lods
push
sub
mov
sbb
lods
incw
cmpl
shrl
loope
insl
mov
test
xor
mov
sbb
mov
jg
add
mov
aas
xchg
aam
gs
fbld
shr
push
testb
shr
adc
bound
or
push
sahf
lret
mov
bound
or
adc
mov
mov
addb
negb
mov
shrl
lods
jge
fadd
loopne
shr
or
mov
sahf
dec
mov
inc
xor
pop
jne
outsb
mov
fdivl
mov
aam
loop
xor
cli
sub
jne
addl
rol
mov
ficoml
cmp
addb
ljmp
mov
out
jmp
or
lods
mov
fldenv
and
or
nop
mov
mov
loope
jl
dec
mov
int3
jmp
xchg
or
daa
popa
and
inc
mov
lds
cmp
jmp
lods
sbb
ljmp
jno
adc
xor
cmpb
sbb
imul
push
lret
das
pmaxub
sub
jno
daa
jo
sbb
movups
xchg
imul
mov
inc
mov
inc
test
add
adc
repz
push
ret
stc
cmp
cmp
jo
fnsave
repz
inc
or
jmp
mov
call
mov
rcll
incb
jne
testb
adc
sbb
mov
pop
test
add
add
pop
int3
sbb
les
mov
jno
jo
mov
daa
arpl
cmp
mov
int
push
or
add
test
shl
push
xor
sbbb
in
pop
in
test
adc
mov
sbb
ja
jne
dec
fld1
in
or
mov
or
cmp
or
insl
jb
dec
in
adc
shrb
adc
xor
repz
stos
or
mov
xchg
dec
outsb
cmp
es
sub
cmp
mov
pusha
xchg
adcl
inc
pop
pop
pop
bound
add
mov
cmp
add
add
arpl
int
shll
loop
call
add
cmp
outsb
test
mov
mov
int
loopne
push
xor
jne
sbb
lods
or
xlat
jmp
sar
cmp
sbb
out
add
push
adc
sub
jo
sbb
jmp
sbb
ds
faddl
adc
loope
leave
mov
adc
pop
sbb
mov
aam
rcrl
add
ror
lcall
cmovl
loope
test
jns
sbb
jmp
inc
adc
repnz
pop
jmp
ret
or
loopne
gs
xor
push
and
mov
fidivrl
dec
mov
insl
pop
jno
add
in
repz
xor
mov
fs
pop
ljmp
ljmp
lahf
hlt
push
lea
add
leave
sar
mov
and
mov
add
pusha
or
rorb
test
sbb
lret
push
addr16
jp
cmpl
push
sbb
cltd
pushf
cmpsb
push
pop
ret
and
loopne
jo
push
dec
push
and
add
dec
cmp
pop
mov
js
sbb
pop
pusha
cmp
or
xor
push
push
ds
xor
mov
or
and
dec
adc
test
xchg
push
inc
mov
sahf
add
addr16
mov
fsubl
ret
mov
add
outsl
adc
call
mov
mov
andl
mov
shl
outsb
jmp
and
jae
pop
xor
cmc
imul
sbb
adc
movsl
mov
test
xor
add
or
popa
xchg
movb
jmp
bound
dec
inc
outsb
push
push
cmp
dec
hlt
sub
inc
fs
or
jnp
leave
xor
add
or
inc
add
and
add
cmp
test
data16
pop
jnp
fs
add
cmpsb
sbb
jo
imulb
sbb
mov
add
test
mov
loopne
out
jno
add
mov
js
sbb
cmp
test
jne
lods
test
ret
cmp
shll
lods
dec
cmpsb
sbb
outsl
scas
test
imul
daa
sub
cmc
scas
or
cmp
pusha
dec
iret
test
add
je
out
push
mov
pusha
insb
lods
push
jg
sbb
mov
mov
incb
mov
mov
inc
mov
sbb
adc
mov
push
mov
int3
or
dec
dec
dec
push
movsb
mov
or
xor
jae
mov
inc
inc
mov
cli
or
shufps
mov
pop
mov
push
addl
insb
jo
aad
gs
xchg
faddl
lret
cmp
dec
add
jo
pop
mov
and
or
cwtl
sub
insb
pushl
push
inc
dec
shlb
jbe
fs
pop
loopne
popa
sbb
adc
fiadds
into
mov
stc
cltd
jg
sbb
mov
pop
data16
addb
mov
test
sub
and
in
dec
mov
ljmp
into
sbb
movsl
jne
sbb
mov
stc
cmp
loope
cmp
jmp
inc
add
sbb
sti
leave
add
push
or
sub
lock
lods
shlb
es
and
lds
fisubrs
mov
pusha
mov
add
adc
mov
call
lret
jmp
inc
mov
nop
sub
rcrl
outsl
fucom
lret
icebp
sbb
jae
push
imul
lods
cmp
cmpsl
sub
adc
xchg
lcall
mov
pop
cmp
das
and
das
adc
cwtl
inc
je
jp
rdtsc
cmpb
lret
and
and
or
xchg
cmp
aam
sub
outsl
nop
das
inc
sbb
test
or
mov
lock
pop
adc
xchg
stos
test
push
and
icebp
lds
xchg
and
inc
ss
scas
roll
sbb
ss
int3
xor
xor
inc
xor
adc
add
cmpsb
adc
adc
inc
and
adc
xchg
inc
pop
shlb
fs
push
push
mov
mov
mov
and
je
pushf
push
xchg
pop
or
pop
cmc
fcompl
pop
in
or
jmp
mov
and
cmp
adc
mov
add
mov
mov
hlt
loop
mov
pop
inc
call
pop
xor
mov
je
cmp
pop
adc
cmp
fiadds
inc
mov
jmp
imul
movsb
fiaddl
inc
cmp
decb
les
jmp
addl
js
pop
sbb
movb
jmp
stos
adc
inc
aaa
push
inc
pop
lock
ljmp
or
iret
and
ljmp
jb
les
les
add
js
jge
inc
xchg
inc
arpl
shlb
adc
or
push
inc
push
dec
cmp
mov
sub
push
push
icebp
mov
mov
or
push
dec
sarb
mov
inc
jmp
xor
fwait
sub
jo
mov
add
add
adc
stos
test
pop
cld
not
ret
adc
gs
cmp
adc
sbbb
xchg
data16
andl
arpl
inc
dec
lock
jb
sub
xchg
fsub
add
mov
add
lcall
ret
inc
or
cmp
add
idivb
pop
les
add
pop
adc
push
test
insb
pusha
or
and
rcrl
mov
loop
push
andl
icebp
xchg
loopne
sub
inc
in
in
push
mov
adc
xor
jo
enter
mov
adcl
cwtl
jl
push
pop
cwtl
decb
int
push
jne
push
aas
out
je
mov
lds
inc
pop
xchg
mov
or
enter
adc
call
or
shlb
pop
fdiv
push
jmp
push
std
lock
insl
mov
push
lock
or
pop
push
sub
jne
inc
imul
or
mov
adc
mov
xbegin
mov
adc
fcomps
std
lea
adc
rclb
jmp
shrb
mov
pushf
or
imul
or
push
pop
inc
sarb
imul
add
adc
in
imul
dec
or
xor
adc
and
pushl
add
fadds
fwait
or
cmpb
pop
out
mov
or
jne
mov
clc
push
mov
adc
xor
inc
mov
mov
dec
mov
or
popa
push
push
nop
rorb
xor
dec
je
test
mov
jmp
mov
in
pushf
or
orb
push
outsb
ss
add
cmp
sub
pop
and
mov
cld
cwtl
scas
sbb
adc
popa
or
dec
pusha
outsl
xchg
pop
inc
pusha
jne,pn
sbb
inc
or
and
loopne
jl
push
in
adc
add
push
insb
ljmp
adc
and
lahf
push
sub
je
icebp
cmovnp
cmp
pop
push
sbb
rorl
addl
daa
pop
andb
jbe
xorl
jg
mov
pop
jo
jp
inc
cmp
roll
das
out
sub
mov
fwait
xor
mov
and
inc
xchg
or
dec
bound
aam
or
pop
inc
imul
and
push
add
mov
dec
mov
jb
ljmp
xchg
inc
stos
sub
call
inc
lock
push
push
scas
ss
jmp
adc
clc
jnp
cmp
or
pop
adc
lock
jo
pushf
pusha
lods
cmp
push
xor
in
mov
inc
and
or
inc
out
movsl
out
mov
or
adc
fwait
js
pop
nop
adcl
shl
lcall
cmp
push
ret
mov
in
test
mov
push
clc
call
jne
push
inc
jecxz
lea
adc
mov
push
sbb
mov
sbb
movsb
xor
cmp
mov
mov
push
jnp
daa
mov
push
push
or
pop
je
or
inc
cmp
inc
xchg
into
adc
cmp
mov
movsb
push
sub
xchg
push
orb
mov
pop
cld
imulb
mov
sbb
pop
jno
add
cmp
and
inc
xchg
ja
outsl
in
cmp
lahf
daa
cmc
mov
cmp
or
mov
sub
fisttpll
imul
imul
mov
jne
stos
out
roll
pop
push
lcall
add
stos
pop
add
test
jle
icebp
pushf
jle
mov
mov
mov
test
jno
push
adc
movsb
xor
sbb
jns
adc
clc
cltd
inc
jg
cmp
pushl
mov
xor
scas
and
mov
dec
sbb
in
test
rclb
rcll
sbb
push
nop
mov
loop
ljmp
and
dec
dec
pusha
jge
adc
adc
aam
add
sub
push
or
daa
daa
daa
adc
ss
pushf
fsubrl
and
and
sub
pushf
pushf
pushf
xor
cmp
inc
and
cmp
mov
dec
push
dec
cmp
push
pop
add
dec
dec
fs
dec
dec
je
jl
in
sbb
sbb
xchg
dec
xor
mov
and
pushf
mov
movsb
test
cltd
fs
dec
rol
and
dec
es
shlb
cltd
fidivrl
cltd
fs
dec
in
in
fs
dec
es
hlt
enter
clc
cld
add
sbb
dec
jb
or
gs
xchg
dec
cmpsb
dec
adc
cltd
fs
and
cltd
fs
sub
xor
fs
dec
cmp
push
fs
sub
dec
dec
xor
and
mov
pop
loope
xchg
dec
pop
pusha
sbb
pop
pop
dec
jg
pop
mov
add
movsb
dec
add
test
mov
inc
lcall
enter
mov
push
rorl
mov
xchg
or
imul
nop
adc
inc
lcall
cltd
nop
pushf
and
imul
inc
shlb
or
sub
cltd
nop
enter
pusha
jg
dec
enter
pop
push
adc
and
outsl
loope
js
ret
andl
inc
shlb
push
add
mov
or
faddl
push
or
dec
and
pop
add
nop
sbb
mov
fisubs
call
and
mov
and
aaa
je
adc
add
repnz
jnp
shll
dec
xor
adc
or
jnp
xchg
adc
add
jmp
dec
jb
add
pop
clc
sbb
test
js
test
btc
adc
or
xor
fisubl
xor
fiaddl
xor
mulb
shll
and
shll
sub
push
aad
clc
incb
sub
or
jmp
inc
and
mov
add
jl
and
jecxz
imul
add
or
fiaddl
loope
out
movhps
cli
xor
sub
aaa
enter
jge
je
mov
mov
flds
and
pop
adc
pusha
mov
pusha
loope
pop
sub
jmp
sbb
ficoml
fstp
ds
push
xchg
inc
pusha
fldl
cmp
sub
ret
adc
cld
pusha
jg
testb
in
mov
or
add
mov
out
test
fisttps
loopne
sub
mov
and
sbb
sub
push
and
or
jle
outsb
fs
testl
dec
or
adc
imul
push
and
or
push
or
lds
mov
flds
fstps
jmp
fisttpll
xorb
ljmp
hlt
adc
inc
in
outsl
push
jbe
je
adc
neg
ss
push
sbb
push
addl
in
adc
xor
test
cmp
sbb
sar
push
inc
call
xor
push
aaa
sbb
out
xor
add
pop
rolb
dec
jmp
sub
sub
inc
dec
push
in
jmp
sub
push
mov
loopne
fldcw
inc
test
into
adc
pusha
hlt
movsl
sub
imulb
mov
rorb
inc
add
bswap
and
mov
and
mov
adc
add
rolb
repz
add
push
mov
or
je
inc
rcll
sub
cli
repnz
xchg
mov
jae
es
xchg
pop
ss
shrl
addb
dec
push
push
inc
mov
nop
loopne
or
jle
push
pop
jmp
pop
add
pop
dec
cs
icebp
add
enter
lcall
cmpsb
mov
sbb
and
push
pop
inc
lea
nop
cwtl
addr16
clc
pop
mov
jle
push
add
jns
jnp
mov
and
pop
mov
lret
add
fs
xchg
repnz
aam
add
inc
inc
mov
add
mov
and
test
dec
pop
cmp
je
add
jl
xor
mov
jns
add
or
scas
test
rcrl
cld
sbb
hlt
rorb
inc
pop
cltd
and
sahf
into
es
pushf
sub
lock
pusha
ds
and
or
loope
or
out
sub
mov
fstpl
lods
pop
imulb
jno
xor
inc
and
xor
push
add
or
add
add
es
das
add
or
sub
das
jo
fmul
jo
sub
pop
lods
lea
in
popa
xor
sub
lock
mov
rolb
add
test
sub
pushl
roll
xchg
mov
int
xor
jbe
push
das
adc
inc
addr16
mov
imul
jne
adc
adc
mov
or
jl
push
jnp
add
andl
jne
je
insl
rorb
lret
adc
adcb
cld
pop
test
dec
mov
sub
mov
add
rcrl
shufps
push
xchg
rorb
jge
in
jecxz
clc
lock
or
sbb
fstpl
add
push
mov
and
fsubs
into
pop
add
mov
jmp
dec
xor
mov
sbb
test
and
sub
or
dec
out
fld
in
push
rcl
ljmp
pop
add
push
xor
test
stos
test
pop
and
mov
icebp
das
fstps
loope
mov
or
or
lcall
push
or
push
pop
aas
adc
push
mov
push
cmc
in
add
or
push
xlat
scas
movsb
ret
and
jo
es
sub
push
push
push
test
pop
push
inc
push
pop
dec
ljmp
adc
fnstsw
movswl
lret
sbb
loop
inc
loopne
and
mov
int
sub
rorb
data16
into
aaa
or
insl
or
push
mov
mov
xchg
cwtl
or
sub
or
aam
test
fsubs
ret
ja
fwait
sbb
adc
fcoml
nop
jp
lods
ret
sbb
imul
jae
sti
jmp
addl
sbb
je
scas
xsaveopt
jne
mov
add
sub
or
test
andl
or
jmp
and
add
adc
addb
inc
adc
or
loop
mov
sbb
fld
xlat
xchg
or
pusha
or
ucomiss
mov
shl
lock
mov
add
inc
arpl
int
adcb
push
ja
mov
mov
lock
and
ja
sub
inc
or
push
pop
int
and
adc
ret
in
jo
imul
or
jae
nop
lret
je
jle
loop
adc
xor
decb
add
sti
jbe
push
xchg
rorl
js
adc
mov
sti
std
test
or
add
loope
or
push
or
outsb
dec
fldenv
add
push
or
sub
adc
cmp
jbe
jb
adc
mov
dec
imul
sub
ss
push
or
outsb
add
jecxz
sub
mov
cmp
into
jne
mul
pop
test
jbe
jl
cmc
mov
mov
lock
stos
jmp
stos
pop
pop
fs
and
dec
insl
push
in
inc
cli
js
cmp
movb
pop
add
lods
rolb
adc
cwtl
xor
or
cmp
push
mov
lret
inc
movb
rolb
ljmp
not
test
je
jl
inc
pop
repz
outsb
dec
pop
pop
and
mov
out
sbb
mov
inc
adc
iret
and
insl
push
jbe,pt
dec
mov
add
push
outsb
int
or
or
cmp
sbb
sub
adc
loopne
insb
jmp
inc
pop
jae
add
lret
mov
xchg
pusha
add
sahf
jns
shrb
and
sarb
mov
mov
pop
test
mov
or
jge
je
inc
mov
inc
or
or
or
jp
inc
stos
inc
sub
or
add
mov
pusha
rclb
pop
rorl
cmp
loopne
push
incb
out
and
dec
inc
pop
mov
loopne
pop
popf
jb
mov
and
push
ds
push
or
out
inc
popf
and
dec
sarb
orl
jno
fs
sub
pop
and
ret
cmp
mov
or
icebp
pop
mov
xor
sbb
adc
fsubr
jnp
push
inc
lods
sbb
test
push
icebp
add
dec
clc
xchg
andl
inc
aas
adc
xor
lcall
cmp
mov
mov
mov
jmp
pop
inc
xor
add
add
incb
enter
jns
add
sub
cmp
sbb
dec
cmc
hlt
push
aas
mov
pop
rorb
cmpl
and
movsl
out
cmp
xor
clc
add
xorl
loopne
sub
popa
mov
in
add
adc
lock
into
addb
fiadds
test
iret
and
mov
and
shrl
xor
in
add
pop
mov
dec
lods
rorl
enter
xchg
dec
or
fiaddl
pop
lock
pusha
ficomps
dec
or
nop
loope
dec
push
lret
jne
and
and
mov
cs
cltd
mov
adc
and
push
sub
pop
push
push
add
les
or
or
leave
add
inc
push
pop
xlat
dec
jecxz
adc
jne
sub
mov
or
inc
outsb
and
stc
pop
jne
cmp
and
xchg
add
jb
mov
inc
mov
test
inc
mov
mov
rorl
mov
sbb
into
repz
xchg
out
add
xchg
jo
or
mov
scas
cmp
mov
cmp
insb
inc
cs
or
or
jmp
cmp
je
or
out
mov
dec
lcall
mov
cmp
pop
jne
dec
mov
inc
subb
inc
mov
jmp
and
sub
fisttps
lea
inc
jp
arpl
mov
add
and
inc
leave
into
add
fiaddl
test
add
adc
or
push
inc
cmp
xor
in
inc
adc
mov
add
adc
push
pop
xchg
xor
mov
adc
js
dec
sbb
fadds
sahf
jne
xlat
je
imul
outsb
stos
fdivs
or
add
xor
pop
jno
ffreep
push
pop
sbb
fstl
decb
sub
mov
clc
inc
add
aas
sub
outsb
pop
lcall
pushf
xchg
pop
and
lds
cld
mov
inc
or
xor
movb
add
dec
ret
pusha
loopne
xor
and
cli
jmp
sub
add
mov
insb
sbb
je
pop
adc
cmpsb
dec
push
sub
ret
mov
cld
sbb
push
neg
movb
xchg
mov
enter
jp
xchg
dec
or
add
add
add
sbb
insb
add
push
sbb
rclb
jmp
lcall
psraw
adc
cmp
ret
or
pop
inc
mov
adc
adc
dec
sbb
pusha
inc
jg
shlb
iret
ret
jmp
add
and
scas
jmp
mov
aam
outsb
or
mov
rcll
pop
in
movsb
loope
movsb
push
push
adc
or
in
shlb
pop
dec
lret
cmp
or
mov
gs
mov
push
jmp
and
xchg
mov
out
pop
xor
bnd
inc
and
push
fadd
repnz
mov
push
test
xor
into
jge
inc
stos
adc
adc
and
call
add
mov
fdivrs
or
mov
add
lcall
xchg
sahf
xchg
adc
jnp
icebp
movsl
cld
push
and
or
jne
xor
rcll
test
out
ret
xor
sub
idivb
ss
push
add
pop
and
xor
test
enter
clc
and
add
mov
lahf
test
push
js
sub
ret
scas
dec
and
add
insb
movb
and
mov
mull
xchg
xchg
inc
popf
neg
sbb
mov
stos
push
and
adc
fs
ret
bound
shll
dec
jo
bound
xor
xor
sub
or
cmc
add
pop
and
call
fnstcw
xor
mov
jb
stos
sub
add
pmaxub
add
add
pop
int
mov
wbinvd
divb
nop
push
lcall
dec
sbb
and
sub
sbb
cmp
mov
rol
fadds
adc
stos
pusha
inc
xor
ret
cmp
dec
icebp
xchg
cli
fs
cld
add
hlt
shrd
sbb
cltd
addl
inc
jge
sbb
clc
dec
leave
or
cld
xlat
mov
mov
add
dec
jmp
mov
cmp
ds
sub
pop
adc
pushf
jp
test
or
rorl
push
ljmp
test
roll
pusha
sbb
mov
lret
jo
fmulp
rorb
push
and
imul
sbb
js
jg
mov
or
sarb
jmp
adc
cwtl
shl
fimull
jl
inc
pop
clc
pop
mov
xchg
rolb
jne
sbb
mov
push
lock
ljmp
or
add
shlb
adc
leave
jae
fiaddl
pop
or
or
sbb
lock
roll
cmp
and
and
lods
ja
sahf
frstor
es
mov
mov
or
or
movw
push
sbb
add
sbb
pop
lcall
inc
jnp
ss
jmp
lock
mov
push
inc
sahf
or
push
mov
enter
jns
neg
call
addr16
or
ret
aaa
add
andb
pop
mov
in
or
mov
push
add
adc
xchg
sbb
repnz
je
add
or
aad
fstps
mov
dec
jbe
jl
into
rorl
cltd
inc
dec
mov
push
sbb
xchg
cmp
mov
jmp
or
sbbb
mov
jne
push
cmp
nop
cmp
addl
int
xchg
pop
aam
sub
dec
sub
cmp
leave
xor
enter
jle
in
push
push
orl
dec
out
mov
cld
jl
loopne
jge
push
inc
js
inc
or
mov
and
add
popf
jmp
xor
movsb
add
mov
ds
fxch
in
pop
or
or
pop
pushw
loopne
jne
cmpsl
imul
cmpsb
mov
je
inc
je
pusha
mov
addr16
xor
sub
sbb
pop
cmp
test
aaa
and
test
or
push
cmpb
add
sbb
push
add
or
inc
mov
aam
addb
pop
arpl
cmp
or
dec
jb
add
andb
imul
out
and
sub
adc
pop
xchg
cmpb
jne
mov
add
jp
testl
cwtl
push
xchg
sarl
insb
ret
push
cmp
add
hlt
lea
sbb
or
adc
bound
popf
pop
aam
dec
cltd
loopne
cmp
add
push
mov
adc
sbb
je
pop
push
add
hlt
ja
in
push
push
sbb
popl
add
lcall
sbb
xlat
aam
cmpsl
mov
test
sbb
inc
jmp
cmc
cmp
xor
add
out
inc
or
dec
inc
jne
cmp
add
sbb
adc
cld
mov
push
push
jmp
gs
and
leave
mov
inc
jmp
adc
test
adc
xchg
aam
add
xor
fmull
adc
fidivrs
add
cmp
nop
fidivl
mov
aam
dec
sub
sbb
xchg
adc
xorl
sub
sub
cmpl
xor
rclb
pop
push
or
push
sbb
insl
sarb
adc
leave
xchg
push
mov
mov
pop
add
dec
ljmp
aas
mov
jl
cmp
inc
dec
fiaddl
jb
pop
data16
xor
int
push
pop
mov
sub
je
dec
je
mov
push
push
jmp
or
jmp
sbb
cmp
call
adc
int
in
repz
and
sbb
pop
ret
or
or
aad
sbb
bts
xor
sahf
or
int3
or
push
xchg
cs
xorb
and
or
dec
xor
push
popf
add
jne
adc
adc
add
ds
flds
ljmp
or
sbb
jnp
int3
or
sub
sbbl
add
pop
mov
adc
add
or
mov
ss
dec
into
sub
xor
inc
andb
xor
inc
sub
jno
lret
or
dec
mov
and
aas
or
mov
xor
pushf
and
insl
add
sbb
fstl
int3
repnz
xchg
add
in
pop
sub
mov
rorl
std
inc
or
or
ljmp
dec
cmp
clc
shr
add
or
jg
mov
shr
or
mov
loop
mov
push
push
adc
test
and
add
mov
sbb
notb
lock
leave
mov
mov
add
lods
lods
add
pop
cmp
leave
inc
add
add
jl
in
sbb
cmp
dec
xchg
mov
or
arpl
inc
addl
inc
fisttpl
mov
add
inc
inc
lds
adc
xor
in
inc
call
adc
gs
mov
lea
cwtl
subl
shll
cli
cwtl
sub
dec
mov
mov
test
mov
adc
mov
aam
cmpsb
and
add
lds
loope
xchg
adc
mov
adc
lock
icebp
sbb
ss
and
xor
push
loope
clc
mov
andb
mov
add
sub
cli
jne
mov
sbb
dec
roll
incl
cmpsb
or
xchg
or
inc
mov
shll
in
mov
or
fmull
enter
or
addl
pop
add
lds
leave
nop
sub
jmp
adc
cmpsl
xchg
fwait
push
inc
test
mov
pop
and
lea
cli
popa
cwtl
cmp
pop
or
in
subl
lods
test
lret
testb
dec
jo
popa
divl
inc
cmp
adc
dec
xchg
stc
sub
add
mov
add
dec
pop
add
sbb
or
mov
and
jge
jo
or
sbb
fs
inc
inc
sub
test
jle
cli
add
xchg
mov
add
dec
sahf
sub
inc
sbb
pop
lret
leave
shrb
aaa
xchg
aad
outsl
dec
dec
outsl
inc
inc
push
xor
inc
xor
je
clc
and
mov
js
or
cmp
sbb
fistpll
push
pusha
inc
adc
and
scas
add
mov
aam
sbb
add
pop
je
sbb
mov
ret
sub
add
fmull
mov
push
add
movsb
xor
sbb
hlt
sub
jno
nop
mov
je
ss
push
add
inc
cmp
pop
inc
test
ds
out
sbbl
jmp
pusha
lea
imul
into
xor
or
cmp
dec
sbb
repnz
popf
addb
pop
leave
cmp
mov
enter
xchg
in
mov
cmp
jle
xchg
pop
mov
inc
and
push
popf
add
out
movsb
adc
cmpsb
sbb
bound
ds
fnsave
jmp
sbb
xor
cmpb
sub
cmc
cmp
les
push
incl
out
xchg
adc
push
mov
stc
push
add
inc
jns
push
in
cmp
add
push
imul
ficoml
orb
mov
aaa
jne
cmpsb
add
push
ret
sarl
sub
jmp
rcrb
enter
cmp
jne
imul
inc
dec
add
jbe
call
adc
rorb
push
cltd
or
push
rcrb
fprem
pop
sbb
out
roll
leave
add
mov
not
je
mov
iret
adc
mov
mov
inc
mov
xchg
pop
pop
adc
bound
rolb
call
movsl
sti
lods
pusha
push
pop
jb
loopne
adc
int
cmp
mov
js
add
popa
sbb
mov
or
xor
pop
inc
add
scas
lea
mov
push
icebp
lar
adc
lock
push
neg
neg
sbb
sub
jns
sbb
inc
sbb
or
or
enter
sbb
add
push
inc
and
fsts
pop
mov
icebp
sbb
push
and
and
subb
mov
dec
jns
lock
cmpl
pop
jbe
push
mov
int3
xor
adc
or
jae
lods
rcl
ljmp
in
lock
shr
sub
adc
std
arpl
push
idiv
and
maskmovq
testl
clc
add
push
roll
inc
add
insb
sbb
icebp
fmulp
dec
or
add
pop
pop
lods
aam
stos
jae
adc
dec
lahf
push
test
dec
push
add
sbb
mov
call
je
push
inc
cmp
jbe
pop
inc
xor
aas
orb
pop
cli
hlt
adc
and
aam
shlb
or
push
rclb
adc
rcl
inc
push
outsb
or
inc
inc
cmp
nop
add
into
paddusb
jns
mov
mov
and
ljmp
nop
cmp
movsl
iret
and
mov
incl
cs
ljmp
cld
inc
ss
dec
out
aaa
dec
roll
es
cmpsb
jnp
daa
lods
push
movsb
adc
jp
push
out
cld
mov
add
xchg
enter
pop
adc
inc
jmp
sub
inc
add
js
mov
subl
ret
cmp
mov
add
pop
fs
xchg
cmp
test
mov
loopne
adc
es
mov
inc
xor
and
aas
out
jmp
jb
cmp
ja
add
cmp
adc
cmp
jne
mov
sti
dec
shll
leave
adc
mov
sbb
add
jl
pop
pop
mov
enter
cli
fiaddl
sbb
adc
sbb
inc
xchg
lret
push
and
imul
test
test
aas
sti
pop
dec
insl
cs
push
movb
jmp
or
mov
pop
mov
iret
cmp
pop
and
test
push
subb
xchg
ret
fists
and
movl
push
inc
int
add
rcrb
fldl
pop
mov
into
testb
sbb
pop
cmp
mov
pop
lods
sti
scas
stos
mov
test
mov
idivl
sub
andb
and
xorb
nop
or
dec
daa
ror
push
add
adc
add
sbb
cmp
mov
pop
pop
jp
leave
adc
shr
rcrl
inc
imul
lea
sar
pop
or
gs
into
movswl
data16
imul
push
ljmp
cwtl
sbb
mov
mov
mov
inc
xorl
stos
dec
mov
add
imul
mov
jbe
push
push
ret
and
jl
inc
mov
jnp
or
dec
jle
repnz
lcall
mov
mov
mov
mov
and
and
lea
inc
fisttpll
pop
xor
adc
jecxz
imul
call
xchg
test
dec
jmp
add
loopne
dec
rorl
inc
testl
aas
lods
cmpsb
mov
mov
outsl
push
adc
pop
rorb
lods
xor
inc
mov
les
pop
les
dec
or
or
cltd
data16
xchg
dec
push
sub
shrb
into
movsb
imul
cmp
lods
shl
mov
movsb
sub
pop
out
data16
xchg
mov
pusha
mov
jl
pop
aaa
dec
sti
push
lods
and
rorb
jg
jle
cmp
lcall
shll
mov
add
shr
and
ret
pop
or
and
rorb
pop
negl
sbb
push
lret
cmpsl
mov
mov
cmp
and
inc
mov
jle
cwtl
shrl
cmpsl
jne
test
pop
shr
or
mov
dec
mov
pop
jp
jmp
nop
sahf
jnp
lock
dec
and
jnp
repnz
sub
push
testb
dec
cli
cli
inc
cli
and
cmp
dec
dec
dec
movsl
test
and
movsl
or
jge
sub
cmpsl
or
cli
adc
and
ficompl
ret
mov
dec
xchg
and
outsb
mov
push
fidivl
fldenv
enter
mov
mov
insb
movsl
jmp
mov
dec
xlat
mov
xor
push
mov
dec
sbb
add
push
mov
or
pushw
mov
loop
out
jecxz
xchg
xchg
jge
out
adc
and
mov
pop
mov
dec
mov
dec
movsl
and
daa
adc
sbb
push
cli
or
push
mov
inc
shlb
fdivrs
aam
xchg
pop
xchg
add
jbe
dec
sub
sbb
sbb
shrb
cmp
add
push
adc
xchg
rorb
or
sahf
mov
sbb
fcmovu
add
push
mov
sbb
insl
inc
rcrb
push
mov
int3
jg
add
xchg
add
idiv
inc
add
adc
jge
adc
jg
or
adc
orl
inc
push
in
out
or
jge
add
mov
or
cld
add
jne
xor
push
jns
fnsetpm(287
loopne
mov
or
pushf
pusha
mov
xchg
ljmp
cwtl
sbb
sub
setae
mov
idiv
psubq
sbb
movb
dec
inc
cmp
jle
push
outsb
push
aad
pop
outsb
call
inc
lods
gs
add
lods
adc
in
mov
rcrb
push
shr
pop
inc
rcrl
sub
fcoms
xor
fiadds
push
mov
insl
call
mov
imul
call
xchg
frstor
mov
pusha
lea
push
and
pop
lcall
inc
xor
push
in
fmulp
mov
sti
mov
add
popf
xor
inc
les
movsb
out
ds
loop
inc
addr16
sbb
imul
push
xorl
inc
js
add
sub
lea
fnsave
mov
sahf
mov
and
dec
int3
push
add
test
call
add
xor
add
add
sub
or
into
or
mov
inc
ljmp
jmp
mov
rcrb
jmp
cmp
jge
or
lahf
sub
cmpb
or
add
dec
cmp
imul
inc
dec
add
add
fadds
inc
les
mov
movsb
pop
ret
jp
jne
dec
sarb
or
adc
cmp
in
out
mov
mov
lret
mov
add
push
mov
nop
adc
test
mov
mov
mov
or
cmpsl
mov
dec
adc
and
ret
lcall
add
push
mov
mull
or
push
push
pop
rorb
adc
or
mov
or
add
rcrl
xchg
add
pop
jne
or
push
pop
scas
je,pt
sbb
ret
mov
cld
mov
ret
or
movsl
add
xchg
adc
or
xchg
add
test
fistpl
mov
mov
iret
xchg
xchg
lret
lret
into
pusha
inc
cli
xorl
and
pop
pop
fidivl
sbb
ret
xchg
mov
loopne
sahf
inc
ret
or
mov
sbb
loopne
inc
add
scas
rolb
imul
or
or
jo
dec
push
add
add
push
gs
je
das
push
mov
jae
mov
pop
or
pop
add
insl
add
adc
cmp
jne
and
mov
loope
test
add
es
out
and
push
cmpb
or
ret
outsl
mov
inc
add
movsl
ret
flds
jo
loop
clc
mov
mov
test
sbb
shll
push
scas
orl
mov
inc
subl
add
movb
daa
mov
loopne
mov
rorb
cmp
sti
loopne
sbb
repnz
test
adc
int
add
or
adc
into
mov
xchg
into
mov
mov
sbb
and
sbb
leave
repz
inc
jg
into
into
dec
inc
or
adc
sarb
push
pop
loopne
ficoms
and
mov
shlb
or
sbb
stos
push
lret
mov
ret
xor
mov
push
lcall
cmp
out
adc
push
into
enter
movsb
and
mov
ficomps
test
mov
and
mov
jp,pn
and
cmpsb
leave
adc
sub
lock
roll
xlat
insb
mov
cmpsl
fsub
movsb
lret
ljmp
mov
out
adc
cmp
pop
mov
add
loop
add
jno
loopne
mov
lahf
xchg
mov
or
enter
xor
scas
sub
sub
push
lock
scas
outsb
pusha
outsl
adc
rcrl
in
ret
jl
add
testb
add
je
jnp
sbb
popl
loope
jo
div
jle
rclb
sbb
add
jo
xorl
cmp
je
dec
mov
mov
jb
into
cmp
je
mov
or
mov
push
shl
pop
adc
jg
or
or
cmp
jbe
dec
sbb
cmp
sub
jmp
push
mov
movsl
sbb
sub
fisubrl
pop
lea
inc
pop
push
leave
mov
enter
pop
mov
ret
mov
into
das
add
stos
les
and
gs
and
inc
popa
test
dec
aam
add
scas
mov
fcompl
adc
loopne
jp
or
cmp
add
scas
pushl
mov
and
push
push
mov
push
mov
aam
movsb
mov
popf
fsubs
fmul
adcb
push
or
pop
cmpl
ret
sahf
mov
lret
xor
jb
pop
jl
rclb
cmpb
scas
adc
aam
ljmp
insb
or
push
jmp
popf
inc
push
aaa
sbb
dec
js
add
mov
movsl
mov
or
pop
cmp
test
inc
mov
test
daa
fldcw
add
xchg
pop
subl
push
push
or
pop
stos
sahf
mov
inc
dec
pop
add
push
mov
mov
push
stos
and
test
inc
cmp
andl
push
loope
aaa
cmc
dec
jge
test
shlb
add
je
and
push
ret
ss
js
push
push
dec
push
pop
and
cmp
pushf
inc
dec
mov
into
pop
jo
and
mov
mov
adc
shll
mov
cmp
lods
sbb
inc
add
mov
lret
ja
test
sbb
xchg
arpl
setl
sub
insl
add
jg
push
or
call
inc
js
lea
in
cmp
push
enter
in
adc
paddd
add
lret
mov
push
mov
je
xor
shrl
push
jmp
dec
fs
movsb
fistpll
xorb
ss
mov
sub
js
push
adc
pop
xchg
jno
fmuls
mov
sbb
or
dec
sbb
inc
movsl
xchg
cmp
push
fs
iret
mov
pushf
pop
dec
cmpsl
cmpsb
xor
push
mov
push
nop
lock
sub
add
mov
inc
pushf
ss
sbb
sbb
hlt
mov
push
pcmpeqb
jg
subl
aam
mov
jnp
ljmp
jbe
clc
dec
aam
sbb
mov
pop
movsl
gs
sbb
sbb
or
dec
lods
and
mov
mov
in
repnz
test
fs
test
cmp
jmp
and
lea
add
iret
xchg
sti
push
add
push
adcl
sub
add
and
add
add
test
pop
xor
xchg
hlt
in
sub
mov
lret
add
lea
movsl
pop
cltd
rcll
push
xchg
movsb
adc
mov
or
cmp
mov
jl
push
mov
dec
cwtl
push
jmp
loope
outsb
repz
pop
sbb
scas
add
orl
nop
xchg
jmp
add
inc
and
dec
ret
add
jle
ret
cltd
mov
push
add
add
data16
insb
mov
sar
xor
push
in
adc
sbb
push
dec
push
and
lods
outsb
nop
cmp
daa
test
sub
jnp
mov
roll
ret
push
mov
inc
and
ret
cmpsl
aas
mov
pop
or
mov
add
xor
ret
add
xchg
daa
and
add
in
jnp
mov
es
aas
add
ret
stc
adc
push
pop
in
push
push
pushf
ret
sub
or
push
push
push
shlb
sub
and
ror
sbb
inc
psrad
xchg
add
or
insl
cld
mov
loopne
dec
jmp
xchg
loopne
or
movsl
popa
sbb
push
je
inc
insl
and
cmpsl
clc
pop
pusha
xor
les
lcall
pop
cmp
xor
imul
mov
cltd
addl
call
dec
inc
imul
outsl
insl
dec
or
into
inc
mov
xor
jns
adc
sbb
cmp
xor
add
adc
or
scas
arpl
je
rcrb
xchg
lock
movsl
movsl
lcall
xchg
stos
xor
sbb
addr16
adc
fisubrl
jl
push
cmpsb
clc
pop
popf
mov
and
aad
sar
rorb
fiadds
lea
lds
sbb
ror
pop
sub
add
add
push
cwtl
mov
or
mov
push
fisttps
ret
inc
sbb
sar
mov
lock
data16
xor
inc
and
jo
adc
push
add
sbb
pusha
js
xchg
adc
adc
inc
inc
js
jg
inc
dec
call
sub
pop
xchg
push
cmp
dec
int3
arpl
jo
arpl
into
mov
imul
fidivrl
cmp
ja
mov
jmp
sub
jb
lcall
inc
imul
add
xchg
jge
cmp
loope
add
lcall
jp
inc
mov
sbb
cmp
adc
mov
add
or
sbb
cwtl
repz
out
cld
sbb
push
sbb
inc
cmp
adc
jp
repnz
in
neg
push
dec
test
jg
adc
lock
imull
aas
lcall
mov
test
rorl
cmp
mov
pop
shlb
popa
ret
call
aam
into
lock
cmc
cmp
in
rcrl
addr16
popa
dec
mov
add
sbb
add
push
or
jb
repnz
jbe
inc
jo
and
test
scas
pop
add
lea
stos
dec
aas
leave
xchg
test
ret
rorl
push
sbb
sub
push
add
pop
int
gs
repnz
pusha
test
test
or
aaa
sti
mov
push
inc
inc
loopne
pop
cmp
lock
loope
cmp
nop
pushw
ss
push
and
jle
sbb
mov
das
push
or
call
mov
xchg
lods
sub
lret
mov
cmp
mov
mov
lods
pop
push
adc
rcrl
ret
cmpl
add
add
outsl
ret
cmp
int
shlb
xchg
mov
jns
mov
mov
loop
mull
in
sahf
or
or
push
in
ret
push
cmp
movsl
jne
pusha
std
inc
adc
and
ds
or
jne
inc
sbb
xchg
lds
add
retw
test
js
out
rol
aas
sub
and
inc
jbe
lds
jl
sbb
jae,pt
cmp
adcl
adc
xchg
xchg
mov
jl
inc
xchg
fwait
sub
mov
or
add
add
cmp
enter
xchg
addl
cmp
jle
push
ret
jnp
dec
sbb
mov
and
out
dec
test
inc
pop
rolb
mov
and
or
add
orl
jge
incl
addl
sub
lods
ljmp
call
xchg
imul
add
or
or
loope
sbb
fldenv
add
inc
add
test
inc
inc
or
sahf
stos
pop
add
jmp
movsl
mov
mov
jmp
mov
gs
xor
cmpsb
cmpb
push
cmp
pop
das
dec
jl
outsl
jo
roll
cltd
lods
adc
dec
popa
mov
aam
cmpl
dec
pushf
pop
adc
cmp
jae
cmp
scas
test
jle
cmp
jg
mov
rolb
or
jecxz
xchg
daa
mov
test
add
push
xchg
test
loopne
ret
inc
outsb
fcoms
fcomps
pop
mov
rcl
jnp
adc
mov
cmp
hlt
xor
cmp
fwait
and
lcall
sbb
lods
pop
out
mov
rorl
add
addr16
or
sbb
xor
ss
in
mov
sbb
dec
or
andb
andb
push
dec
cmp
xor
mov
mov
xor
loop
inc
shr
xorl
fnsave
mov
and
sub
add
into
mov
push
pop
outsb
insb
sub
fisubs
or
aam
scas
or
jg
or
and
push
popf
add
jl
scas
cmp
cmp
add
popa
xchg
je
mov
xor
dec
xchg
sbb
add
xor
jmp
outsl
sub
sub
inc
arpl
testb
inc
cltd
jp
inc
dec
dec
insb
push
mov
notl
ret
adc
std
sub
shl
add
cmp
push
into
icebp
pop
adc
adc
xor
mov
je
dec
jne
push
lds
jp
dec
ja
fadds
and
xlat
push
jmp
xor
inc
sub
dec
lahf
je,pn
adcl
fcmovnbe
fsubrl
or
push
sub
fcoms
bound
cmp
scas
mov
mov
fs
inc
cs
arpl
push
loopne
fimuls
dec
dec
jo
xchg
jns
aas
mov
in
out
bnd
pop
loope
inc
sbb
dec
adcb
inc
js
jecxz
jmp
shlb
push
in
cltd
push
cmp
in
xchg
and
and
push
push
jb
bound
stos
fs
push
lods
mov
and
jae
popf
clc
dec
push
dec
rclb
xor
jl
jecxz
jp
clc
inc
mov
add
int
push
mov
je
cmpb
sub
lea
testb
jne
add
xchg
lods
fwait
popa
int
jnp
imul
les
lret
pop
xor
ret
fcom
xor
adc
adc
or
dec
or
push
push
bound
fnstsw
notb
cmp
ret
lret
mov
sbb
rcl
imul
movsb
insl
gs
out
or
add
adc
add
cmp
leave
test
add
sahf
jecxz
rorl
stc
dec
fildl
hlt
jne
inc
xor
adc
fisttpl
imul
testb
mov
add
or
add
outsl
test
jle
insl
scas
mov
es
les
push
pop
or
xor
inc
pushf
cmp
add
add
pop
dec
push
adc
jg
js
fsubr
push
icebp
adc
inc
sbb
pop
movsl
add
lock
addb
jbe
int3
leave
das
jo
lret
jne
lock
jb
ret
sar
and
jp
lock
or
mov
mov
adc
imul
inc
cmpsl
adc
fiaddl
and
mov
ret
push
mov
sbb
mov
cmp
fnstenv
call
je
jp
mov
fsubrs
adc
call
and
jl
ficomps
push
cmp
dec
cmp
cmp
inc
jae
jb
or
sub
cmpsl
push
fcmovb
jnp
and
aaa
pop
pushf
pop
xchg
call
sbb
icebp
jne
jae
scas
push
sub
mov
add
push
inc
bound
inc
pusha
jmp
test
or
or
fwait
or
adc
jbe
xchg
pop
push
outsb
stc
rolb
pop
sti
insl
pop
dec
test
insb
and
js
sub
sub
xchg
jns
inc
cli
ret
or
mov
adc
add
sbb
mov
and
cld
add
mov
testb
xchg
testb
add
jl
outsb
adcb
mov
push
jmp
inc
ss
and
jb
je
cmp
xlat
pop
push
add
jns
jb
cmp
jbe
clc
mov
xlat
push
push
push
or
movsb
or
mov
push
mov
push
add
das
aaa
out
pop
shlb
outsb
push
cmp
add
mov
test
mov
lcall
fstpl
fstpl
pop
jmp
cli
jne
cwtl
lock
pop
pop
sbbb
add
pop
in
mov
int3
sub
mov
push
inc
sub
push
push
insl
mov
and
xor
ljmp
in
fst
push
inc
repnz
hlt
push
cmpsb
inc
mov
push
je
rcrl
mov
jb
mov
mov
repnz
sbb
xchg
add
mov
and
push
xchg
mov
fisubrl
ljmp
adc
movsl
rcrb
and
adc
dec
shlb
ficoml
mov
test
mov
and
jnp
test
pop
and
inc
xchg
lock
fldcw
mov
fildll
roll
shlb
xchg
fstps
mov
xor
in
xchg
rolb
mov
or
sub
das
fcomp
out
inc
in
adc
adc
ret
fstps
add
cmpsb
pop
sbb
or
and
in
dec
xchg
inc
pop
or
shr
xchg
mov
xchg
nop
mov
inc
lea
mov
mov
dec
inc
adc
or
inc
enter
ret
jg
or
add
insl
add
pop
ljmp
xchg
adc
nop
mov
in
xor
adc
lock
frstpm(287
les
sub
cmp
add
xor
or
jb
sub
pop
nop
or
inc
add
pusha
insl
dec
outsb
fucomp
add
add
mov
call
or
in
inc
fs
inc
cs
fadds
pusha
cld
sub
outsl
nop
push
jne
add
iret
je
pushf
xchg
mov
mov
mov
scas
mov
add
adc
push
and
xchg
movl
xlat
dec
dec
das
pop
fisttpl
add
rorl
or
rcrl
enter
sbb
ret
push
add
inc
lahf
fdivr
sbb
and
adc
jl
inc
mov
sbbl
jno
andl
or
lock
xor
aam
adc
jge
dec
pusha
or
xchg
xchg
inc
pushf
sub
insb
adc
fcoms
xchg
or
cwtl
xchg
lret
mov
xchg
adc
or
in
inc
mov
sub
push
xor
in
test
fildl
in
adc
xchg
adc
push
mov
popa
add
stos
xlat
mov
cmp
shrl
enter
xchg
inc
xchg
push
pop
or
cmp
fwait
or
xchg
pop
es
mov
fwait
cwtl
inc
sub
cmp
rolb
xchg
or
mov
cmpb
xchg
mov
js
fdivl
sbb
cs
sub
and
push
enter
imul
call
adc
jbe
insl
les
ja
test
or
rol
push
xchg
in
adc
in
push
dec
outsb
unpcklps
cmc
sti
icebp
shlb
mov
daa
xor
cmp
mov
std
push
jno
pusha
es
fs
fs
xchg
dec
je
jl
xchg
add
ret
xor
call
adc
jb
lods
loopne
and
xlat
add
adc
adc
xchg
push
rcrl
int3
lea
cmc
rorb
call
xor
and
xor
jne
and
xchg
fmuls
in
sti
gs
pop
inc
push
lods
lods
add
scas
push
cmp
lods
push
clc
shlb
jns
adc
cmp
inc
or
xor
ret
sbb
sub
dec
test
lea
add
and
fistpll
add
jno
cmp
lock
mov
or
sbb
je
mov
stos
nop
push
flds
clc
sbb
jnp
push
cwtl
cmp
sbb
push
and
insb
fwait
xchg
adc
insb
inc
enter
aam
mov
dec
addr16
roll
add
and
sbb
lds
test
popf
lock
lock
push
dec
insl
sub
jl
dec
mov
fisttpll
pop
and
adcl
xchg
inc
je
fists
sbb
fsubrs
and
push
inc
xor
imul
and
inc
sbbl
lret
sbb
in
inc
push
mov
loopne
adc
pop
fdivl
jne
shll
shlb
mov
daa
sub
leave
and
cmp
add
or
push
subb
sbb
loopne
dec
cmp
or
mov
in
lods
push
cmp
scas
dec
or
or
add
xchg
xlat
pushf
or
lock
hlt
andb
xchg
fbld
add
adc
mov
sub
call
sub
insl
inc
push
and
or
dec
lea
dec
adc
dec
push
fdivrl
add
sbb
stos
adc
inc
fs
out
pop
inc
mov
es
dec
fs
pop
popa
and
mov
mov
and
je
push
repz
mov
addr16
fidivrl
or
shll
sbb
mov
and
imul
pop
jno
and
cmc
add
and
mov
data16
or
inc
or
call
les
and
dec
inc
mov
test
test
sbb
call
aaa
lock
mov
inc
pop
and
aad
mov
in
dec
xor
jl
adc
loope
in
fsubl
or
and
jl
movsb
addr16
adc
andl
nop
lods
jne
pushl
arpl
xchg
pop
jb
in
call
daa
pusha
and
addl
js
xchg
xchg
fdiv
mov
js
imul
jo
pop
ljmp
dec
push
add
jg
and
sbb
nop
sbb
xchg
xchg
decb
cmpsb
and
movsb
in
rcrl
in
in
jecxz
adc
cmpsb
insb
jne
shrb
mov
inc
mov
cwtl
fs
or
les
loopne
cmp
add
sti
xchg
mov
mov
jb
add
movsb
sti
push
es
and
shrb
fadds
jl
fwait
mov
adc
pop
dec
or
push
int
lea
daa
daa
cmpsl
mov
add
mov
xchg
in
add
mov
test
cmp
test
add
and
pop
inc
adc
fildl
repnz
cmp
cmp
nop
inc
or
or
xchg
dec
push
or
or
sub
or
inc
sbb
mov
sbb
enter
fwait
sbb
inc
inc
xchg
lsl
rcrl
inc
push
ret
xchg
mov
out
sbb
push
sbb
or
nop
add
or
adc
clc
sub
mov
add
mov
daa
xor
pop
nop
test
push
shll
xor
adc
leave
mov
adc
mov
imul
dec
popf
andb
filds
rcr
ret
sbb
pushf
sbb
jo
arpl
in
lea
sub
mov
sub
mov
and
rcr
mov
xchg
jne
ret
xor
sub
test
ja
imul
pop
pop
mov
mov
mov
in
mov
sub
or
add
and
cmp
movl
aam
cmp
push
adc
cmc
inc
dec
in
daa
add
ret
adc
or
repnz
iret
jl
imul
push
jge
das
rcrb
ljmp
shrb
mov
test
aad
leave
push
pushf
sub
stc
fs
adc
sub
sub
pop
or
push
sub
and
push
pop
nop
ret
cmpsb
or
call
pop
fidivl
push
push
ss
inc
stos
jecxz
das
add
movl
rorl
pop
js
jne
mov
or
pop
addr16
cmp
movsb
aas
mov
adc
ss
or
imul
mov
and
cmp
xor
insb
and
je
xchg
adc
pop
ret
push
in
test
ja
jo
adc
pop
xor
icebp
fdivs
cs
xchg
mov
cmp
cs
sub
outsb
loop
xchg
mov
xor
lock
sub
mov
popa
pop
xor
push
adc
enter
nop
and
jo
jb
jo
or
rclb
scas
push
loope
push
pop
pop
pop
add
sub
in
cltd
mov
xor
call
adc
or
push
and
adc
xchg
pop
lret
or
or
xor
or
addb
jno
xor
es
lods
das
cmp
or
or
pop
cmp
ret
jbe
fcmovu
mov
loop
div
popf
mov
add
sbb
jb
push
sbb
jno
xchg
add
adc
mov
insb
test
js
xor
push
mov
pop
mov
pushf
stc
dec
adc
cwtl
and
icebp
imul
adc
add
or
adc
push
jne
add
nop
out
or
ss
inc
or
movsl
ss
add
add
repnz
ret
cmp
int3
pinsrw
addr16
adc
dec
pop
test
int3
xor
maxps
iret
enter
test
mov
xchg
add
in
cmp
and
dec
out
jg
adc
movsl
ss
inc
dec
dec
roll
mov
insb
repnz
xlat
or
add
pop
mov
jmp
test
sarb
jnp
push
imul
add
rcr
inc
fsub
stos
push
and
insb
mov
stos
cmpsb
sbb
lock
das
xchg
or
cmp
jno
dec
orb
ss
int3
das
unpcklps
aam
adc
xchg
push
cwtl
in
mov
fdivrl
pop
xor
push
push
add
add
in
push
repnz
jl
mov
sbb
out
dec
cwtl
adc
dec
nop
pushf
mov
test
sub
rcpps
cs
adc
mov
mov
sub
inc
push
jl
popa
ret
or
in
bound
sbb
pop
lods
gs
aaa
inc
mov
lds
rcr
push
imul
fnstenv
bound
and
out
push
and
movsb
fdivr
add
sub
movsl
add
inc
roll
bound
push
adc
xor
imul
call
enter
add
fldt
mov
dec
and
and
and
inc
dec
inc
sub
mov
lret
mov
fcoml
pop
dec
aam
test
adc
jo
sub
dec
mov
nop
daa
prefetcht0
push
test
sbb
adc
mov
dec
mov
test
insl
xlat
xchg
sbb
push
cmp
inc
testl
inc
jp
dec
add
popa
xor
movsb
and
or
adc
sahf
cmp
pop
inc
in
ss
and
add
sbb
xorb
dec
int
or
push
imul
pinsrw
jne
xchg
mov
nop
notb
dec
xor
das
std
pop
inc
cmp
dec
out
mov
test
push
dec
add
in
dec
jns
insb
cmp
decl
imul
cmp
dec
shl
adc
arpl
cmpsb
and
mov
xchg
push
cs
or
jnp
js
lods
repz
rolb
push
sub
call
leave
aam
inc
cmp
inc
adc
nop
pop
xor
add
jge
and
jb
add
or
fdiv
aad
ret
xchg
mov
dec
sub
rolb
sbb
in
sbb
cmc
mov
sub
push
adc
icebp
pop
inc
arpl
leave
aaa
jmp
test
inc
jb
fildll
xor
xchg
pop
call
adc
addr16
arpl
cs
cmpsl
sub
dec
xchg
add
cmpsl
je
inc
sbb
xor
or
mov
xlat
xorb
cmp
dec
xor
rorl
pop
rclb
dec
int3
inc
aam
popa
scas
inc
sub
or
insl
push
aam
sub
test
push
mov
jnp
dec
call
in
mov
lock
movsl
xorl
cmp
repz
test
or
push
dec
lods
adc
ja
add
xchg
xchg
and
mov
and
cmpsb
or
hlt
jne
sbb
inc
push
mov
adc
cmp
sbbb
int3
gs
rclb
cmp
sub
enter
jecxz
cmp
iret
dec
lcall
jb
imul
add
add
aam
mov
cmp
dec
jg
jo
add
fcomp
sbb
cmp
mov
lds
divl
in
xchg
add
lods
ret
mov
push
jecxz
aas
pop
fdivr
dec
arpl
or
xor
mov
dec
xchg
test
jne
mov
mov
daa
push
adc
sbb
pusha
xor
cmpsl
and
mov
and
stos
lods
in
jne
dec
mov
movups
sub
sub
mov
sbb
adc
aas
sbb
or
js
mov
push
dec
xchg
mov
adc
jb
dec
adc
loopne
or
push
test
push
pop
sbb
fmuls
daa
mov
cmp
das
mov
outsb
movsl
lods
lods
test
rolb
jns
clc
clc
mov
ret
cmp
rolb
mov
push
scas
or
dec
repz
cwtl
js
pusha
add
js
popf
movsb
pop
dec
push
imul
nop
out
and
xor
or
and
lods
dec
jnp
sub
and
and
add
push
mov
fstl
and
rcll
leave
push
adc
aam
fstpl
or
sub
and
push
pop
imul
mov
es
sbb
add
adc
or
xchg
mov
cwtl
push
test
sbb
test
js
lods
adc
enter
pop
ds
inc
fisubl
and
sub
push
in
arpl
ljmp
pop
nop
mov
fnstsw
test
aam
repnz
bound
les
xorl
sub
fcoml
jne
xchg
sbb
sbb
shll
rol
mov
dec
leave
and
int3
mull
mov
iret
push
inc
xchg
cmpsb
push
or
or
sbb
fsubs
adc
insl
pop
push
sbb
fdivr
call
leave
loopne
push
iret
lods
test
or
xchg
sbbl
mov
nop
inc
xor
xor
fs
es
push
sbb
orb
adc
push
or
es
adc
inc
cmpsb
sbb
adc
or
aam
and
inc
mov
imul
cmc
mov
pop
push
mov
stos
push
jmp
dec
sbb
sbb
lcall
sbb
jns
pop
les
fucomi
loopne
lds
insb
stos
sbb
jp
notl
neg
mov
sahf
rorb
adc
fs
push
insl
mov
adc
es
jbe
adc
fs
xor
cmp
cltd
fs
dec
sbb
inc
fs
dec
cmp
push
nop
sub
pop
inc
inc
mov
dec
mov
idiv
fwait
mov
cmc
shlb
cwtl
dec
test
adc
enter
mov
leave
adc
movsb
push
pop
jno
rolb
outsl
iret
push
pop
sbbl
dec
and
test
and
add
add
rolb
sbb
aam
and
xor
xor
sbb
pushf
pop
xlat
or
or
stc
xchg
xor
std
dec
pushf
and
mov
or
push
jge
icebp
ret
dec
xchg
stos
xor
insl
lods
test
fistps
inc
enter
test
movsb
in
pop
bound
jmp
pusha
fisubl
es
push
mov
pop
adc
and
lock
int3
cmp
mov
les
rcl
data16
loop
aam
in
mov
adc
dec
and
mov
sbb
shr
fs
adc
push
sbb
adc
test
push
inc
in
dec
shr
push
xor
xchg
dec
lds
rcrb
out
test
bound
inc
inc
icebp
inc
adc
ja
mov
insb
and
iret
arpl
rolb
or
bound
jmp
out
pop
loopne
inc
repnz
mov
test
or
mulb
fs
adc
inc
or
dec
js
fstpl
xor
test
xor
leave
test
test
xor
loopne
movsb
stos
pushf
or
and
pop
sbb
xor
mov
int3
jmp
mov
dec
sbb
xor
outsl
in
xchg
fiaddl
push
fs
or
cld
cwtl
test
adc
and
add
aam
pop
jo
add
sti
xlat
or
xor
xor
in
cmpsl
jnp
enter
lds
fisubl
jbe
or
push
or
inc
test
out
daa
and
in
aam
adc
push
cmp
fcoms
dec
push
nop
imul
enter
ficoml
or
add
test
imul
sub
addr16
les
dec
lods
rorl
lret
in
jp
pop
pop
push
ficoml
in
jns
outsb
add
mov
outsb
ja
cmpsl
add
cltd
insl
stos
enter
lock
and
imul
pop
mov
adc
aaa
adc
rorl
ja
push
test
imul
cmovbe
or
inc
sub
inc
addl
rcr
idivl
push
pop
leave
xchg
mov
jb
jmp
sbb
push
arpl
inc
lret
out
lods
sub
ficompl
mov
enter
pop
fisubrl
ret
inc
aam
pop
and
loop
imull
call
or
leave
mov
lds
out
adc
xchg
insl
fildll
dec
sbb
mov
pop
in
int
sub
pop
or
pop
mov
int3
mov
jo
rolb
inc
test
pop
dec
dec
testl
xchg
lock
dec
les
lods
loopne
or
sbb
pusha
sub
jbe
in
das
fs
das
cltd
rolb
xor
outsl
adc
xchg
adc
jmpw
push
jg
ret
nop
adcb
or
shld
mov
stos
inc
in
add
xor
mov
push
adc
aam
les
ret
orb
pop
addb
nop
imul
mov
xor
add
and
push
test
xor
mov
add
lods
insb
pushf
shlb
add
xor
sub
inc
fs
imul
xchg
dec
es
insb
lods
push
dec
es
mov
cltd
fs
push
jl
je
fs
dec
test
cwtl
fs
dec
es
mov
dec
es
mov
pop
inc
jg
mov
xlat
ja
lea
mov
xchg
and
jmp
cwtl
jns
fwait
push
pop
fcoms
xchg
mov
mov
pop
adc
sbb
je
pop
cltd
movnti
mov
or
loopne
adc
xor
add
insb
je
in
and
adc
pushf
movsb
and
mov
int3
aam
in
arpl
sub
inc
push
fsubrs
adc
push
mov
and
sbb
mov
pop
cmpsb
loope
popa
and
int
outsb
inc
test
and
leave
js
pop
aam
cmp
mov
mov
cmp
cmp
jb
mov
test
xchg
dec
xor
je
fs
lret
and
jecxz
test
sub
test
and
mov
and
or
nop
test
dec
dec
test
aam
add
aam
cmp
mov
arpl
push
ja
gs
cwtl
ss
aam
sub
stos
xchg
xor
roll
pop
add
cwtl
sbb
mov
xchg
inc
xor
loop
sbb
movsb
pushf
loop
cmp
push
aaa
adc
leave
and
and
pop
int3
jns
push
push
jb
js,pn
xlat
addb
lods
sub
and
rcr
cwtl
dec
insb
xchg
mov
and
and
or
push
sbb
inc
inc
and
sbb
leave
and
mov
sbb
and
xchg
dec
xor
pusha
negl
insl
cmp
jecxz
sub
dec
inc
fsts
adc
jg
mov
xchg
jb
loopne
leave
push
and
lods
adc
xor
test
test
cltd
pop
scas
add
pop
mov
add
shrl
or
xchg
mov
push
gs
test
add
test
xor
rcrb
in
dec
popf
gs
or
cmp
or
aas
adc
pop
aam
add
bound
idivl
cmp
jmp
mov
rcrb
sbb
iret
pop
nop
mov
int3
or
jge
roll
sbb
imul
mov
xchg
sbb
push
mov
ja
xchg
sbb
xor
pushf
mov
and
mov
es
enter
xor
xchg
mov
fmul
les
xor
push
or
filds
test
jl
add
and
adc
enter
pop
sbb
ja
sbb
or
int3
xchg
sbbl
adc
mov
scas
popa
orb
mov
mov
subl
or
rolb
stos
and
fwait
sbb
movsb
sbb
movsb
adc
or
inc
es
sbb
jg
mov
cmp
nop
repnz
js
xor
mov
sub
mov
adc
dec
fwait
add
mov
mov
imul
sbb
or
nop
mov
movsb
mov
subl
fs
push
or
push
nop
or
push
pusha
popa
sarl
inc
or
inc
sbb
sbb
push
sbb
dec
adcl
lea
aam
andl
jbe
xor
in
adc
xlat
rolb
and
adc
insl
hlt
cltd
inc
loop
add
or
test
cmp
in
sti
leave
dec
push
or
mov
fs
and
sub
push
movsb
les
lds
clc
mov
in
cltd
scas
cltd
add
ss
cld
icebp
sar
pusha
rcrb
xor
repz
sbbb
clc
icebp
cmpl
xor
popl
mov
mov
or
push
enter
and
mov
fs
adc
bound
push
sbbb
sub
pop
shr
shrb
scas
and
scas
dec
ret
inc
insb
jle
call
inc
das
out
sbb
mov
or
dec
pop
mov
shlb
rolb
pop
out
and
sbb
fsubr
or
hlt
loope
add
fld1
mov
mov
fwait
xchg
and
or
sbb
out
leave
cmpsl
adc
cs
push
test
inc
test
dec
cmpsb
sbb
inc
xchg
movsb
aad
cmp
outsl
lods
adc
imul
sub
sub
insl
push
popa
sub
movsb
andb
mov
sub
test
imul
orb
pop
jecxz
sub
sub
adc
negl
dec
ss
dec
mov
jmp
mov
inc
push
inc
jecxz
stos
sbb
fsubl
movsb
es
cwtl
aas
pushf
fadds
outsb
adc
jnp
inc
mov
bound
push
test
dec
dec
dec
ret
sbb
xchg
lods
sub
inc
fsubs
ret
scas
adc
aam
inc
in
movsb
iret
insl
adc
adc
or
scas
test
fisttpl
shrl
xor
adc
nop
ja
fiaddl
adc
add
fstpt
aam
nop
sub
pop
pop
adcb
and
adc
xchg
dec
test
sub
aas
ret
xor
std
add
xor
xor
dec
fdivl
inc
or
js
movsl
movsl
cs
sub
cmp
push
and
insl
mov
push
mov
cmp
inc
lods
jbe
add
dec
cli
inc
adc
mov
cli
lahf
adc
inc
dec
add
rclb
daa
pop
dec
rclb
scas
test
lcall
inc
sahf
lods
cmp
je
movb
add
ss
int
inc
add
in
lcall
test
arpl
xor
js
dec
xor
xor
jo
fnstenv
inc
cmpsl
nop
cmp
cltd
clc
mov
and
xor
and
adc
adc
pop
nop
mov
mov
dec
add
lahf
cmp
js
sbb
inc
dec
int
rolb
popa
out
test
sbb
xchg
push
mov
xchg
bound
je
decl
rcrb
jno
xchg
xorb
ds
enter
jge
test
jbe
sbb
add
addb
push
ret
pop
and
xchg
inc
adc
or
push
mov
pop
shlb
mov
imul
lods
adc
test
mov
push
sbb
shl
movsb
mov
add
push
ret
adc
push
popf
or
dec
pop
pop
movsl
lahf
sbb
sub
cvtpi2ps
cmovae
mov
fadds
add
mov
insb
nop
sub
push
fmul
add
inc
sub
push
push
pop
or
jp
push
push
add
nop
nop
notb
sub
lods
pop
push
push
inc
mov
lea
cltd
loopne
cwtl
xchg
or
inc
sub
fwait
mov
sti
out
nop
out
dec
push
cld
hlt
or
repnz
or
fsincos
cmpsb
push
mov
sahf
or
sbb
lods
or
in
fists
jmp
pop
sub
push
sbb
out
divl
fcomps
movb
test
xchg
and
ds
mov
and
inc
lahf
push
les
push
das
xchg
mov
loopne
imul
push
scas
cmp
cmp
adc
cmp
and
dec
sub
inc
pop
push
or
push
push
add
mov
dec
mov
imul
dec
out
cld
mov
pop
mov
cltd
mov
sub
or
mov
rol
dec
mov
push
dec
or
jmp
jl
adc
cmp
sete
icebp
gs
es
or
push
xchg
push
push
pop
aas
in
and
mov
test
jg
sub
in
mov
inc
std
add
jle
mov
add
ds
repz
add
sbb
addb
cwtl
test
mov
sub
inc
bound
sahf
add
inc
push
roll
lret
insl
ss
in
inc
or
pop
push
scas
add
jg
mulb
add
inc
orb
jnp
mov
add
pop
or
adc
mov
rcll
xchg
adc
or
cmp
jg
rclb
cmpl
test
add
nop
add
into
pop
adc
test
dec
iret
repz
ds
imul
push
sub
and
push
mov
pop
cmp
imul
xor
add
push
incl
sub
adcb
mov
popa
test
inc
mov
and
insb
outsl
arpl
xorb
outsb
push
mov
pushl
popa
arpl
jne
jb
outsb
je
add
das
add
push
lahf
adc
insl
adc
cs
sti
jg
inc
outsl
jb
js
je
jb
gs
add
or
outsl
mov
stc
testl
add
add
jne
les
fstp
mov
push
jb
dec
push
add
dec
lock
add
aaa
or
ds
add
xor
inc
push
add
aas
jmp
mov
pop
dec
add
sub
mov
je
push
insl
xchg
je
je
jo
addl
fisttpl
mov
daa
cmpsw
insl
push
push
mov
jae
bound
pminub
sbb
popa
out
pop
cmp
insb
mov
fsubrp
jp
outsl
or
mov
fisubs
gs
bound
jne
fnstsw
and
outsl
jmp
jo
mov
and
stos
insl
and
jne
sub
push
imul
scas
cmp
jne
inc
push
lock
pop
fmull
sahf
xchg
sub
dec
sub
fs
in
icebp
sub
insb
lcall
repz
lahf
popa
cmp
push
sbb
inc
arpl
mov
jecxz
inc
or
daa
sbb
or
fbstp
xchg
js
outsb
bound
jnp
adc
ret
arpl
loopne
outsl
fistl
insl
and
cmp
mov
push
filds
xchg
popa
in
mov
xor
fidivl
and
nop
or
xor
lds
lock
andl
mov
fidivrl
jg
popa
sub
or
outsl
inc
xchg
lahf
aaa
jg
shll
dec
iret
fisttps
dec
fs
xor
ficoms
data16
sbb
push
pop
jbe
imulb
stos
repnz
outsl
xlat
xchg
das
rcrl
jae
lods
xchg
aad
sbb
jo
lahf
sbb
dec
outsl
aas
or
arpl
mov
scas
sbb
mov
lock
push
mov
and
pop
adc
jmp
imul
sbb
mov
inc
shll
popa
leave
push
or
xor
outsl
pop
sub
add
adc
add
pop
mov
pop
insl
lret
je
or
popa
mov
fisubs
test
scas
popw
pop
jo
testl
sub
mov
cmp
xor
cwtl
lods
dec
addr16
add
jmp
andb
ret
fists
push
inc
inc
mov
push
adc
das
sbb
dec
push
adc
push
sbb
sbb
jl
out
mov
sbb
test
fbstp
rcrl
push
das
push
pop
sahf
push
sbb
sbb
iret
cmp
mov
cmpsl
out
ds
incl
dec
mov
addr16
jbe
fdivs
add
jo
les
bound
lret
pop
out
gs
cmp
imul
mov
ds
mov
jo
out
cwtl
shll
cmpsl
push
fwait
cmp
fnstsw
dec
add
sbb
xor
add
add
and
cs
jns
add
das
das
and
and
pop
idivb
daa
dec
inc
mov
out
fsubs
push
push
decb
and
ret
dec
pop
mov
pop
aas
dec
inc
push
push
inc
sub
daa
mov
push
daa
pop
imul
outsl
dec
and
mov
add
das
pop
mov
imul
iret
jns
mov
out
loopne
push
arpl
jnp
insl
pop
pop
jp
jae
fbld
je
and
sub
aaa
in
ljmp
ds
imul
mov
arpl
fcomps
out
mov
cmp
add
dec
jmp
adc
add
das
das
adc
dec
push
inc
inc
arpl
bound
dec
outsl
jbe
inc
mull
dec
arpl
inc
jo
sub
sbbl
jne
jne
xor
insb
xchg
outsb
jle
mov
imul
mov
popa
outsb
adc
cmp
scas
cmpsl
xchg
popl
aaa
out
jg
addr16
popa
je
jb
xor
lods
std
int3
lahf
mov
jae
push
gs
insl
mov
jne
dec
outsl
outsb
and
bswap
cmp
pushf
xchg
pop
dec
inc
aas
arpl
out
dec
or
sti
fldl
mov
jae
in
test
push
inc
push
popa
insb
jne
inc
sub
mov
ret
mov
and
sub
sub
cs
xor
xor
xor
ss
cmp
cmp
cmp
ds
or
inc
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
aaa
mov
mov
rcrb
pop
pop
pop
lock
mov
bound
gs
imul
jo
mov
mov
ja
jns
jnp
jge
jg
xchg
dec
outsw
adc
lcall
loopne
pop
in
jnp
inc
add
orb
sar
std
aas
ds
jno
icebp
pusha
inc
mov
clc
ret
movsl
add
mov
je
arpl
imul
imul
cmp
mov
add
jo
xor
es
popa
js
addl
je
pop
dec
pop
sbb
fists
lods
dec
out
ret
ret
sub
in
sbb
int3
adc
imul
add
add
add
add
lds
push
pop
push
add
xor
addr16
test
add
pusha
push
mov
js
or
cmp
add
sti
mov
add
addb
add
xchg
adcb
test
add
orb
daa
push
cmpb
push
and
sub
jb
int3
push
jo
lret
cs
push
push
jmp
push
outsb
imul
jo
pop
adc
pop
or
sbb
adc
iret
leave
xor
sbb
daa
xchg
lea
mov
and
leave
and
add
add
push
xchg
shl
inc
scas
mov
lret
hlt
aad
cmc
add
lods
mov
stos
in
add
sbb
cmp
pop
sbb
push
inc
sub
cmpsl
out
rdtsc
ss
jmp
dec
inc
or
pop
stos
push
notl
fs
add
cs
jae
fstl
jbe
bound
je
outsb
data16
push
jbe
xorb
inc
xor
push
jae
xchg
daa
pop
lea
mov
popa
addr16
outsl
js
push
xchg
cs
aam
testb
insb
jo
and
and
mov
aaa
insb
les
dec
imul
or
inc
mov
mov
lods
ds
cmp
dec
inc
jb
jns
daa
mul
mov
pop
and
mov
cmpsl
cs
je
and
arpl
je
sbb
mov
push
insl
push
fsubrl
push
jbe
mov
cld
mov
fdivl
or
jb
and
xor
pusha
inc
jbe
push
push
ss
jns
insl
and
mov
rolb
and
pushw
in
push
popl
inc
imul
pusha
gs
add
push
lds
insl
adc
dec
test
bound
adc
popa
insb
jae
mov
pop
in
adc
push
jae
or
cmp
jo
pusha
insb
call
xor
addr16
subl
icebp
or
gs
mov
mov
adc
sbb
in
push
push
push
push
dec
testl
dec
push
scas
cltd
push
lods
lea
dec
push
inc
ret
dec
jge
insl
jl
clc
adc
jb
push
imul
call
mov
outsl
xor
inc
in
mov
das
gs
or
or
sbb
divb
pusha
push
mov
addr16
jp
scas
mov
xchg
daa
jnp
pop
loope
mov
popw
pop
cmp
dec
jl
cmp
or
ds
and
iret
repz
sub
es
lcall
sub
sub
dec
mov
outsb
add
sub
cmp
pop
or
sbb
das
push
and
aaa
aaa
cmp
outsb
cmp
ds
mov
pop
pop
jne
stos
addl
push
jbe
sbb
rcr
das
jo
ss
gs
imul
mov
dec
xor
sahf
inc
pop
and
mov
fs
jo
sub
xor
jl
out
sub
pop
cs
add
repz
xor
jge
iret
repz
cld
sub
imul
push
aam
iret
repz
int3
enter
cmp
repz
lods
test
lcall
cwtl
push
je
xchg
idivl
push
mov
dec
jl
push
jo
out
sahf
out
fs
pop
pop
sahf
out
sahf
push
push
dec
inc
xor
cmp
out
and
cld
sub
enter
repz
push
lcall
sbbb
fs
xor
cmp
out
sbb
lock
test
cmp
repz
in
sub
fwait
loope
mov
sub
push
add
jl
and
adc
sub
in
add
xchg
inc
sub
dec
lods
in
sbb
mov
inc
addl
mov
addb
stos
ljmp
xchg
dec
leave
push
mov
add
add
dec
cmp
add
ja
xor
push
mov
inc
adc
xchg
jnp
inc
mov
sbb
filds
insl
sbb
jle
add
addb
xchg
lea
xchg
xchg
call
lcall
mov
cmpsb
cmpsl
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
pushl
mov
mov
enter
int3
int
iret
rcl
rcl
aam
call
xlat
fcomp
fcmovu
loopne
loop
in
out
call
in
out
out
lock
repnz
inc
adc
idiv
stc
cli
sti
cld
std
jmp
inc
test
xchg
loope
push
sub
incl
rclb
popa
and
xchg
js
popa
data16
out
pop
inc
test
jns
push
xor
test
jb
add
ds
scas
mov
aaa
push
arpl
sbb
insb
fs
sbb
lods
xor
push
mov
or
aam
jmp
push
setl
scas
add
sub
add
inc
adc
push
je
xor
xor
push
dec
inc
dec
cmovns
fwait
cmp
push
cmove
push
or
call
imull
adc
decl
inc
call
rclb
mov
out
xor
mov
inc
jnp
inc
loop
mov
ds
pop
adc
decb
or
cli
jb
jge
arpl
cmp
fbstp
jg
adc
fisubrs
cld
push
mov
and
cmp
dec
imul
lcall
iret
lret
add
inc
mov
mov
sub
sti
add
dec
fwait
ss
sbb
pop
jns
ds
xor
dec
inc
dec
int3
dec
dec
xor
dec
popf
pxor
xor
lret
aaa
push
div
inc
incl
ljmp
and
cmp
cmpsb
das
xchg
pop
and
xchg
lret
incl
icebp
mov
cld
or
loopne
cmp
inc
mov
xchg
push
pop
xchg
sub
iret
aas
sbb
insb
mov
out
leave
ljmp
orb
pop
test
xor
jle
dec
add
scas
lods
dec
lock
xor
or
mov
aas
mov
pop
pop
repnz
hlt
and
es
mov
fcompp
add
lds
outsl
loope
add
dec
cmc
ja
sub
int
movsb
pushl
or
shlb
or
jmp
sub
xor
sub
mov
mov
ds
and
inc
cmovg
aaa
mov
xchg
jmp
and
test
jle
imul
xor
sti
es
jae
movsl
xchg
mov
lret
out
and
data16
scas
sub
inc
cmpsl
subl
js
sub
ret
bound
jg
subb
jne
fs
pcmpeqw
ss
sti
or
ja
popa
daa
fucomi
push
or
add
je
push
lods
push
mov
pop
mov
je
mov
dec
loopne
mov
ret
sub
fcomi
test
jb
add
ja
add
sbb
push
nop
nop
push
pop
xchg
add
xchg
imul
sbb
lret
idivl
jae
insl
jle
push
lods
cmp
cmpsl
mov
and
loope
mov
jmp
arpl
repz
mov
fbstp
out
push
sbb
inc
mov
push
mov
pop
jg
mov
xor
insb
daa
jnp
and
push
das
cmpsl
cmp
or
push
add
add
push
xor
adc
faddl
sti
sbb
jns
outsb
xlat
cs
cmp
fs
mov
cmpsl
xlat
pushf
or
mov
je
xchg
js
sub
mov
aas
cmpsl
cs
push
out
add
xchg
jo
subl
cmp
pop
pop
mov
jne
adc
dec
xlat
hlt
and
out
jo
imul
call
es
and
cmp
xorb
daa
adc
push
mov
cmpsl
sbb
inc
xchg
inc
arpl
mov
dec
js
mov
mov
mov
dec
jp
pop
loopne
loope
aas
ja
pop
rorl
dec
jecxz
jnp
mov
sub
ljmp
test
pop
mov
shll
inc
xlat
and
je
and
outsb
ficompl
daa
pop
xchg
jo
arpl
add
gs
loope
jp
jne
xor
and
dec
lret
arpl
mov
pusha
push
and
pop
in
jo
pop
inc
mov
add
fdivs
fldt
dec
mov
roll
add
arpl
mov
lret
sub
stos
mov
inc
sub
daa
into
ret
ss
scas
js
jno
or
jo
add
test
push
into
pop
aaa
sbb
mov
je
mov
push
add
adc
arpl
mov
inc
cmp
arpl
cmovnp
dec
loope
hlt
andb
data16
pop
daa
out
or
les
xor
subb
mov
out
jnp
hlt
arpl
adc
aaa
sub
add
or
fwait
test
mov
pop
push
and
scas
ljmp
sub
and
bound
cmp
dec
aas
loope
push
push
push
inc
pop
push
out
cmp
daa
jne
add
dec
pop
outsl
dec
fwait
jp
rol
sbb
inc
das
push
hlt
mov
push
adc
push
clc
ret
js
mull
dec
xchg
jne
pusha
testl
add
sub
ret
dec
sub
outsb
outsb
sub
and
scas
out
jmp
push
fiaddl
bound
jae
imul
push
push
pop
mov
addr16
sti
push
rdmsr
scas
xchg
jecxz
push
bound
or
push
out
arpl
pop
mov
adc
outsl
jmp
add
mov
in
dec
outsl
insl
cli
mov
cs
mov
add
es
or
out
jecxz
je
inc
push
inc
scas
imul
mov
arpl
dec
insb
xchg
xor
inc
inc
dec
add
dec
out
test
out
adc
mov
add
ss
mov
iret
mov
inc
pop
cs
xchg
dec
por
adc
pop
mov
fdiv
mov
addr16
outsl
or
ja
sbb
inc
out
jmp
pop
push
aas
ds
testl
or
mov
add
inc
inc
jl
jl
and
jl
mov
mov
imul
mov
and
addr16
mov
stos
das
mov
push
pop
sbb
jecxz
fidivrl
jnp
cmp
jns
push
mov
pop
lods
fnstsw
adc
rcr
jl
pop
jnp
cmp
pop
imul
jmp
adc
insl
ja
add
mov
lea
pop
bound
outsb
jg,pn
and
add
mov
mov
jge
cmp
dec
outsl
jo
js
lret
jl
jo
loopne
and
jns
mov
mov
fstpl
ret
loopne
pop
fisubrs
fs
mov
dec
lock
loope
adc
jl
ret
sbb
push
repnz
inc
repnz
lods
js
mov
es
add
jbe,pt
push
imul
inc
pop
and
sbb
add
push
test
push
jle
add
sub
mov
mov
xlat
aaa
sbb
push
jecxz
daa
inc
div
push
imul
jb
sahf
inc
jns
jae
jae
mov
sbb
pop
andb
inc
fisttps
xor
pop
jg
pop
cli
js
cli
add
mov
clc
das
pop
pop
pop
push
mov
jb
rcrb
pop
pop
data16
aaa
inc
mov
insb
roll
push
mov
aas
adc
popl
mov
aaa
es
loope
inc
outsl
das
addr16
ffreep
push
lcall
scas
push
add
add
inc
xchg
inc
cmpsl
stc
xor
fiadds
cmp
scas
fnstcw
ss
add
lret
ss
pop
cwtl
ss
and
mov
fisubrs
xlat
fimull
push
mov
dec
ds
xor
dec
sti
push
pop
push
push
lds
imull
test
push
testb
push
inc
jg
idivb
iret
push
es
ds
pop
jmp
out
jl
cmp
and
pop
test
shr
add
aas
pop
xlat
insb
or
sub
inc
pop
or
fwait
popa
shrl
fidivrs
mov
sbb
repz
xchg
stos
push
leave
pop
or
cmp
inc
outsl
jg
adc
jns
inc
push
inc
and
call
imul
ja
iret
pop
aaa
dec
and
push
orl
sub
jae
imul
pusha
or
daa
inc
addr16
ret
sub
aaa
dec
push
add
or
or
xor
scas
push
lahf
jae
aas
rcl
cmp
mov
push
and
pop
out
pop
fnstsw
push
gs
insl
pusha
push
popa
jne
or
ss
push
and
dec
bound
xor
pop
sub
and
push
icebp
scas
aad
sahf
and
je
das
push
sahf
out
fimuls
jg
stos
fstpt
pop
jl
jne
jne
jp
mov
out
cmp
xchg
scas
mov
and
sahf
jnp
rcrl
or
bound
aas
add
ja
outsb
jbe
les
adc
gs
data16
pushf
je
cmp
push
mov
js
push
push
jo
jb
into
jb
out
jge
mov
and
jae
sbb
pop
insb
imul
cmp
and
and
arpl
xor
jle
fbld
cmp
fs
adc
test
adc
mov
mov
mov
outsb
je
ss
sbb
imul
outsb
outsw
sub
ja
adc
fcomps
and
sbb
mov
xor
fmuls
xchg
push
daa
imul
cmpsl
xchg
or
dec
pop
push
scas
ja
mov
push
ja
push
mov
add
jp
scas
shlb
add
inc
cmpl
push
pop
inc
adc
xlat
mov
addr16
dec
push
and
mov
aaa
push
sbb
mov
xchg
js
push
pop
mov
sub
cmp
pusha
and
jo
cs
sti
mov
ret
push
or
xor
push
iret
lea
push
cmp
pop
push
into
or
or
or
test
cmp
sahf
cmp
cmpsb
pop
mov
aas
add
mov
ret
data16
and
mov
fdivl
sahf
outsl
loop,pn
lcall
repnz
xchg
fldenv
sub
push
or
jo
inc
or
pusha
test
mov
inc
mov
push
add
les
dec
inc
out
push
sbb
pop
mov
outsl
or
or
movsl
cmp
adc
lods
sub
cmp
hlt
push
imul
inc
jle
add
dec
icebp
dec
outsl
adc
lods
pop
or
fmull
aaa
scas
orb
test
dec
js
push
fiaddl
mov
dec
add
lcall
add
lcall
call
scas
and
lcall
adc
push
popa
add
add
and
sbb
cmp
add
lods
fimull
dec
jae
fidivrl
data16
pop
fildl
sti
dec
push
das
mov
xor
arpl
pop
cli
add
xor
vmptrld
fs
add
mov
in
add
and
inc
sub
into
jle
rolb
dec
pusha
into
movb
push
mov
cld
jbe
ss
js
lret
iret
inc
lods
inc
rol
push
ja
add
jbe
out
imul
push
xlat
inc
and
push
push
inc
add
adc
adc
sub
fsubrp
pop
shlb
or
or
lods
mov
adc
js
add
add
jge
cmp
inc
jg
push
fisubrl
sahf
and
sbb
jmp
aad
add
mov
or
ja
jg
add
or
addr16
andl
arpl
outsl
jo
pop
pop
add
addr16
mov
pushf
push
cmc
sub
imul
arpl
je
lahf
inc
and
push
aas
shlb
jmp
ja
andb
adcl
push
pop
icebp
cs
jb
or
push
xchg
out
stos
pop
sub
faddp
lds
push
cs
add
stos
lahf
mov
cmpsb
mov
shlb
aaa
sbb
je
inc
sbb
ljmp
nop
sbb
add
or
jnp
inc
pop
inc
repz
pop
add
lea
subl
push
imul
push
or
inc
arpl
mov
jae
mov
aaa
jno
push
add
fistpl
and
mov
outsl
lock
or
pop
das
dec
adc
inc
sbb
arpl
shrl
imul
ss
inc
and
into
shlb
roll
ret
add
mov
ret
out
pop
rcr
out
test
addb
mov
inc
inc
repz
jp
std
ret
cmpsl
xchg
xor
cmp
mov
sub
pop
pop
jb
pop
scas
inc
outsb
cmp
sbb
xor
ficomps
fldt
sbb
xchg
out
mov
mov
shrl
mov
lahf
sti
pop
rcll
or
cmp
push
xchg
push
and
pop
xchg
push
fstp
mov
jnp
jb
xlat
test
push
mov
inc
sti
jp
rcr
cmp
test
adc
add
and
or
addr16
xor
jnp
cmpsl
xchg
aas
xor
xor
arpl
push
sub
add
xlat
es
cmp
pop
inc
outsl
daa
es
mov
sub
ja
arpl
cmp
shll
popa
shrl
mov
jae
dec
sbb
sub
xor
hlt
push
inc
arpl
out
pop
xor
scas
inc
jne
and
adc
xor
out
jecxz
sbb
fwait
test
test
xchg
loopne
adc
add
cmpsl
adc
arpl
jne
sub
imul
ret
test
test
inc
sbb
ljmp
xor
sub
aaa
xor
inc
push
xor
insl
stos
jp
das
das
dec
cmp
outsl
push
inc
dec
adc
mov
xchg
cmp
stos
xorb
das
add
mov
scas
cmp
les
dec
pop
out
clc
fs
pop
push
or
lds
push
ljmp
pop
rclb
out
lahf
fmull
xorl
jo
and
dec
das
sub
sbb
pop
inc
aaa
lret
cmp
mov
jecxz
pop
popa
xchg
cmp
rorl
or
mov
add
ret
pop
cmova
dec
mov
push
sub
ljmp
cmp
addr16
push
pop
xchg
cs
cs
or
sbb
push
bound
mov
xchg
arpl
out
xchg
sbb
pop
add
dec
je
sub
movsb
push
fisubl
cmp
cwtl
scas
mov
inc
and
lret
sub
xor
sub
roll
or
inc
es
lahf
rcr
movlps
cmp
and
push
mov
call
push
pop
minps
mov
aas
push
fs
or
inc
dec
jle
dec
mov
jmp
pop
jno
mov
repz
push
mov
stos
push
scas
mov
outsl
push
imul
push
sahf
test
mov
or
sbb
iret
jp
scas
mov
add
roll
mov
or
lret
pop
add
dec
fisubrl
pusha
fistpll
cmp
out
or
lods
adc
ja
adc
pop
mov
stos
das
and
mov
imul
xor
push
mov
push
mulps
aaa
out
ss
adc
mov
int
sbb
outsb
ss
int
sbb
sbb
pop
pop
pop
jmp
test
fwait
out
into
js
and
and
inc
cs
push
and
outsb
bound
mov
pop
and
xor
inc
dec
pop
lea
das
dec
sbb
cmpsl
arpl
jno
jno
lret
push
pop
sarl
mov
out
mov
xchg
pop
sti
push
out
or
shll
xchg
pop
pop
jg
addb
xor
lods
daa
sub
dec
pusha
pop
ret
lea
or
push
loop
add
popa
sbb
cmp
sub
jmp
add
mov
daa
cmp
mov
mov
test
add
out
mov
push
lods
lahf
out
cwtl
mov
aam
fwait
dec
jo
loop
pop
mov
mov
das
sbb
lds
popa
sbb
jg
sub
push
add
sub
fildl
push
xor
or
fistpll
push
mov
xor
mov
movntps
das
pop
bound
and
xchg
fimuls
xchg
aaa
inc
test
inc
and
mov
inc
jbe
mov
jmp
bound
push
jecxz
inc
mov
daa
mov
imul
scas
xor
arpl
xor
or
jnp
jge
mov
repz
jae
xor
fs
insl
popf
or
adc
das
inc
cmp
daa
jmp
scas
add
push
insl
pop
inc
sub
and
add
fsubrl
or
cmpsl
push
mov
insl
arpl
bound
mov
dec
clc
sub
inc
xchg
push
pop
or
mov
out
out
or
mov
sbb
and
jecxz
sub
push
leave
push
repnz
mov
dec
pop
and
stos
in
dec
hlt
loopne
pop
and
in
jb
lods
fistpll
mov
xchg
fs
cmpsb
xchg
push
rcr
push
repnz
and
aam
in
cltd
dec
test
fimull
in
scas
xchg
stos
fs
inc
in
fdivs
dec
and
in
lock
mov
push
add
push
repnz
pusha
or
dec
pop
and
stos
in
adc
push
jns
shrl
scas
xchg
sbb
sarb
push
jb
sub
rorl
xchg
test
xchg
mov
ret
leave
xlat
mov
mov
jno
jecxz
pop
and
pop
adc
inc
cmp
lahf
xor
pop
aaa
fcompl
dec
mov
cmpsb
ret
insl
pop
adc
mov
inc
push
or
and
jmp
fistpl
and
inc
in
mov
xor
mov
mov
pop
sub
inc
xor
loopne
xchg
out
dec
pop
xor
inc
mov
dec
frstor
and
mov
and
imul
inc
sbb
test
inc
mov
test
insl
adc
push
mull
mov
rorb
shll
add
sub
mov
mov
movsb
adc
xchg
push
mov
push
cmp
dec
adc
sbb
outsb
add
push
adc
or
lea
pop
aaa
or
push
push
xor
scas
addr16
sub
mov
xchg
insb
inc
mov
fildll
push
mov
scas
cmpsl
lahf
jo
je
xlat
pop
inc
sub
or
add
sbb
add
or
cmp
and
sti
mov
ret
push
fisubl
rcll
aaa
js
leave
mov
inc
mov
outsl
inc
mov
js
scas
mov
das
push
fisubrl
pop
fmuls
rcrl
test
aas
pop
gs
add
or
lahf
pushl
and
in
xor
ja
push
bound
xor
or
adc
sbb
rclb
push
loop
mov
jbe
pop
lcall
shrb
jg
jae
and
add
push
pop
xlat
pop
add
sbb
bound
movsb
insl
pop
lea
ds
pop
sbb
push
pop
add
sub
pop
or
and
add
mov
pop
sbb
push
push
xchg
jb
add
pop
inc
popl
or
or
xchg
fisttpl
cmp
inc
es
addr16
bound
adc
je
or
test
cmp
xor
sahf
gs
cltd
add
or
cmp
xor
mov
es
jae
and
sub
sub
shll
icebp
imul
icebp
push
outsb
dec
mov
push
jbe
cmp
jnp
xor
xor
daa
outsb
xor
pusha
insb
and
xchg
ds
push
int3
add
in
ja
adc
ss
xchg
jae
imul
daa
js
outsl
dec
js
fs
enter
pop
daa
sbb
dec
mov
stos
out
or
xor
add
ret
add
and
xor
shrl
pop
push
subb
sub
sbbl
in
add
popa
push
in
mov
or
push
adc
push
inc
imul
mov
repz
mul
in
and
push
dec
pop
mov
addr16
cltd
filds
sbb
cmpsl
dec
pushf
xchg
pop
inc
mov
pop
imul
jl
adc
xchg
stos
add
lock
jb
xorl
js
inc
imul
mov
mov
das
sti
mov
ret
scas
lahf
xor
inc
pop
xchg
adc
mov
push
fisttps
jo
pop
inc
ja
addps
push
sub
shrb
push
incl
pop
and
rdmsr
cs
add
rclb
xor
xchg
dec
movlps
das
or
pop
cmp
xchg
imul
popa
lods
adc
push
push
push
dec
mov
sub
insb
fiadds
add
subl
jo
xor
cmpsb
je
push
scas
ret
dec
rcll
xchg
inc
push
inc
jecxz
dec
adc
xchg
pop
add
xor
popl
lea
stos
lret
mov
adcl
movsb
mov
inc
imul
testl
loop
outsb
cmp
push
out
ret
push
push
push
cmp
scas
lods
xor
repnz
out
es
mov
aad
add
loopne
mov
and
negl
movl
xor
neg
pop
ret
fs
dec
sub
orl
je
xor
pop
jecxz
pop
jnp
pop
sub
dec
shlb
or
inc
or
sti
push
lret
inc
jle
js
xor
inc
cmp
xchg
scas
jbe
dec
or
fiadds
and
ss
push
sbb
dec
mov
bound
xor
mov
incb
add
inc
ffree
inc
cs
lret
jb
push
cmpsl
xchg
loop
push
cmpsb
xchg
ja
cli
jo
xor
outsb
sbbl
mov
mov
xor
js
mov
arpl
sub
arpl
fs
lock
inc
iret
syscall
or
fidivrl
push
push
mov
into
sti
pop
js
inc
bound
fidivrs
clc
pop
imul
pop
pop
mov
push
es
lock
outsb
pop
push
push
xor
dec
js
ret
divl
das
inc
pop
dec
es
das
push
fisubs
add
and
or
out
sti
pop
push
sysexit
mov
cs
dec
gs
sahf
push
outsl
push
push
cli
push
push
insl
sub
out
mov
insl
mov
inc
ja,pn
xor
mov
fimull
jp
pushl
push
fiaddl
jg
mov
das
xor
das
xor
outsl
pop
outsl
dec
xor
js
push
into
xor
adc
test
outsl
imul
or
sbb
jg
inc
and
pop
add
lods
imul
mov
arpl
ja
add
aam
ljmp
lock
fmull
lret
fmuls
stos
out
inc
jnp
pushf
ds
sub
and
push
lock
aas
add
xor
dec
jno
mov
mov
sbb
ja
jmp
xor
xchg
out
adc
add
sub
mov
imul
test
adc
je
shrl
mov
and
and
fs
das
or
pop
addl
mov
iret
sbb
das
arpl
cmp
sbb
out
scas
xor
or
xchg
xchg
add
pop
mov
pop
dec
mov
add
sub
cmp
mov
loopne
or
jmp
xor
mov
cmp
mov
lahf
sbb
inc
imul
mov
stos
fsubrs
shl
mov
sbb
or
xlat
daa
rorb
add
sub
sti
mov
push
dec
inc
ds
outsl
popa
fs
outsl
aaa
mov
push
mov
or
adc
add
sbb
call
lods
or
in
cmpsl
addr16
push
xor
iret
lods
sub
mov
push
pop
stos
std
jl
js
mov
add
fildll
sub
scas
addr16
in
fimuls
sbb
jecxz
arpl
pop
lods
je
inc
jb
in
cwtl
xchg
scas
repz
pop
pop
pop
push
outsl
xchg
push
bound
xchg
pop
and
sbb
clc
mov
js
repz
push
jle
insb
add
xchg
out
cmp
add
jbe
add
pop
cmp
std
outsb
push
pop
cmp
jne
jo
arpl
push
cli
ss
pop
pop
ja
xor
xor
push
and
push
movhps
popl
sbb
aam
aam
mov
xlat
adc
xor
cmp
movb
outsb
mov
or
lahf
mov
and
lea
add
rcrb
stos
sub
test
cs
outsl
fs
lock
lahf
mov
lahf
xlat
jmp
js
imul
ret
pop
push
arpl
addl
add
jecxz
pop
addl
addr16
cwtl
push
dec
movsl
pop
sti
lods
ljmp
push
insl
push
mov
and
push
inc
fwait
iret
dec
cmp
adc
jo
loope
lahf
popa
fldt
and
xor
mov
repz
xchg
test
inc
pop
mov
and
sub
xor
incl
xchg
outsb
jecxz
pop
dec
dec
lock
ret
cmp
mov
aaa
iret
fildll
adc
es
outsb
dec
arpl
cmp
jae
daa
xor
sub
jbe
stos
arpl
outsl
cmp
imul
das
repz
outsl
pop
xchg
or
aaa
sub
cmp
mov
mov
jmp
jb
push
ds
adcb
adc
jle
add
mov
xchg
jle
add
das
add
data16
sbb
sub
testb
lock
aam
addr16
sub
or
call
or
lock
icebp
push
and
push
cld
outsl
clc
mov
imul
inc
pop
push
sbb
mov
iret
add
out
testl
out
cltd
or
xchg
int
mov
or
pop
or
or
adc
adc
sbb
and
in
sub
xor
inc
mov
mov
testl
push
popa
xchg
add
mov
shrb
ret
sub
shrb
int
or
adc
fneni(8087
repz
add
xchg
rclb
fldcw
lret
str
lcall
stc
das
incl
sub
xchg
insb
call
outsl
xchg
push
sub
fwait
cwtl
lods
add
daa
nopl
and
mov
mov
addr16
jg
mov
mov
add
adc
xchg
mov
mov
lods
pop
dec
movsl
enter
pushl
push
push
mov
inc
push
insl
ss
adc
cli
mov
sub
pop
in
iret
mov
sbb
mov
sbb
mov
insb
incl
ds
pop
sbb
xor
mov
pop
sbb
decl
mov
sbb
js
lods
mov
pop
dec
xchg
jecxz
dec
push
mov
and
pop
adc
nop
push
and
cmp
pop
dec
mov
daa
jb
xor
and
push
dec
cmp
add
pop
add
mov
jg
lods
bound
push
insl
or
mov
push
dec
iret
mov
dec
sub
pop
or
dec
dec
lcall
mov
xchg
fsubrl
leave
jae
fcoml
mov
cmp
iret
pushf
inc
mov
pushf
cmp
insb
dec
pop
inc
add
pusha
shrb
add
cmp
xor
add
push
mov
popf
js
adc
jo
pusha
mov
fwait
insb
and
cmpsl
icebp
movsl
inc
push
mov
nop
sbb
ret
mov
jnp
pop
sbb
lret
ss
cmp
sub
pop
xor
inc
adc
inc
push
push
cmp
inc
icebp
push
xlat
or
cmpsb
jp
int3
mov
bound
cmp
cs
and
imul
xor
and
dec
xchg
jg
je
push
subl
outsl
jne
bswap
or
cmp
popa
outsb
imul
pop
inc
add
and
adcl
mov
mov
aaa
insl
mov
call
mov
sub
inc
pusha
xchg
pop
jg
inc
pusha
sub
pop
push
jnp
fisubrl
add
push
push
scas
add
mov
je
daa
mov
jnp
pop
setbe
add
inc
loope
xchg
outsb
das
addr16
pop
mov
inc
pop
pop
pop
rorb
mov
hlt
mov
push
cmpsl
aas
dec
and
sbb
dec
idiv
push
add
sub
push
xchg
test
out
shlb
inc
and
out
adc
dec
sub
fbld
jbe
mov
fwait
xor
adcl
push
sarl
bound
je
add
jbe
outsl
ljmp
loop
rorl
outsl
add
add
dec
movsb
imul
dec
add
push
insl
cmpsl
dec
cli
mov
pop
sub
mov
out
xor
sti
xchg
mov
dec
jge
out
negl
push
xor
outsl
and
rcll
pop
mov
mov
mov
push
xchg
stos
pop
xor
xor
mov
mov
mov
dec
xchg
xchg
pop
lcall
adc
arpl
repz
inc
lock
es
mov
addl
cs
jge
sub
push
xchg
push
or
mov
pop
inc
pop
fbld
pop
pop
cmp
scas
add
mov
enter
aaa
aam
dec
cs
insb
inc
in
add
jno
push
cs
dec
enter
pop
push
and
cmp
jns
imul
cs
aam
scas
push
sarl
lret
inc
or
roll
inc
loop
iret
shll
aas
jle
pop
stos
ficoml
pop
xchg
xor
push
push
cmc
jns
fwait
jge
push
daa
xor
fldl
outsl
notb
aaa
outsl
push
je
mov
stc
push
pop
adc
xor
ficomps
fs
jns
mov
mov
shr
pop
push
dec
pop
push
mov
test
testb
jl
push
xchg
xchg
mov
not
pop
jnp
out
xlat
or
xor
out
imul
pop
clc
call
mov
pop
mov
in
inc
out
cmpsl
sbb
pop
push
jns
scas
outsl
add
jge
cmp
sahf
ja
je
dec
mov
lahf
out
push
adc
dec
push
repz
rep
test
lahf
out
dec
mov
dec
push
push
and
cmp
sahf
out
push
xor
insb
ds
test
sbb
out
sahf
cmpsl
inc
push
mov
int
dec
es
jno
lds
stc
cmp
and
push
mov
cmp
cmc
adc
sahf
out
outsb
mov
notl
push
push
add
sbb
dec
sbb
scas
sub
aam
cs
adc
stc
add
adc
lcall
push
push
mov
xor
adc
mov
mov
mov
scas
int
mov
pop
in
bound
loop
and
push
pop
mov
sub
loopne
mov
sar
mov
pop
int3
push
and
pop
sbb
enter
stc
cmp
adc
repnz
iret
pop
in
inc
ds
or
add
and
jb
add
dec
stos
ret
aaa
movsl
inc
test
subl
out
mov
fbld
sub
testl
rolb
addl
ja
outsb
outsb
lcall
push
push
js
xor
stos
pop
inc
imul
cmp
xor
andl
jp
adc
mov
aad
lods
iret
imul
push
push
and
xorl
inc
pop
push
dec
out
xor
push
dec
inc
outsl
and
push
popa
je
or
subl
push
fistpl
cwtl
out
scas
pop
inc
mov
cmp
sub
pop
push
ficompl
cs
decl
xchg
ss
sti
es
mov
sbb
ljmp
rclb
adc
scas
pop
in
daa
adc
and
dec
not
push
mov
push
pop
addr16
jno
fcoml
and
add
outsl
xlat
cmpsl
jecxz
jmp
jo
push
jo
pop
add
inc
jg
mov
dec
xor
inc
or
xor
mov
jno
sbb
xchg
jmp
jnp
mov
cli
push
sbb
xchg
fs
lods
and
jae
inc
sbb
pop
xor
mull
sbb
sbb
loop
jg
push
dec
cwtl
pop
test
push
xor
orb
add
xchg
xchg
sti
rclb
xchg
jae
sbbl
punpcklbw
sysexit
les
push
dec
pop
and
xorl
dec
inc
dec
mov
fs
jo
xor
daa
fists
push
outsl
imul
je
mov
add
ds
add
jo
jg
pop
mov
jb
loopne
add
jecxz
mov
fwait
mov
sbbb
pop
ret
shll
test
cwtl
and
sbb
pop
pop
inc
das
movsl
or
push
add
scas
lahf
sub
movb
test
or
sbb
scas
pop
sbb
scas
out
push
pop
rorb
xchg
pop
addr16
arpl
mov
jae
fs
sbb
adc
es
adc
mov
psubq
imull
jo
cmp
mov
pop
das
cmpsl
jg
lock
push
pop
shll
add
lret
dec
and
jge
arpl
or
fidivrs
sub
pop
pop
dec
add
and
ret
pop
fisttps
jmp
cs
popw
push
aaa
imul
mov
mov
inc
in
bound
xchg
das
testl
jg
fsubs
call
xchg
das
push
xor
push
pop
sbb
mov
or
outsl
mov
lods
sub
xchg
push
fiadds
push
inc
mov
lods
scas
inc
jle
rcl
pop
imul
mov
out
inc
into
mov
and
inc
xor
adc
lahf
sbb
pushl
ret
add
dec
add
push
xor
adc
fcmovb
stos
or
shlb
add
ffreep
xchg
aas
add
add
xlat
mov
shlb
out
or
lock
cmp
push
pop
adc
xchg
jp
out
arpl
call
cmpsb
inc
inc
push
inc
pop
pop
outsb
iret
inc
sbb
cmp
dec
ficoms
pop
push
popl
pop
or
xchg
xor
pusha
or
daa
inc
push
or
call
pop
sbb
addb
mov
dec
and
pop
jo
imul
inc
and
mov
push
pop
lahf
inc
dec
jne
mov
outsl
dec
push
mov
add
cmpsl
push
ljmp
andl
adc
add
inc
outsl
loop
sub
dec
dec
mov
jns
je
inc
stos
and
push
out
xchg
fists
das
adc
and
mov
jle
add
cmp
insb
je
dec
daa
rorb
pop
addr16
jo
jmp
fisubrs
sbb
pop
jno
outsl
xor
push
les
xor
push
dec
xchg
pusha
call
sbb
jns
je
jne
or
test
das
fisttps
arpl
push
mov
ja
out
mov
push
push
mov
or
mov
dec
mov
pop
and
je
adc
les
punpckhwd
arpl
and
iret
jbe
pop
and
inc
inc
mov
popw
push
or
maskmovq
testl
out
pop
dec
test
les
sbb
testb
dec
shll
rclb
push
pop
rclb
xchg
jmp
mov
mov
into
dec
inc
push
test
push
loopne
sub
jmp
xchg
push
in
nop
sub
cmpsl
pop
pop
or
hlt
movsb
push
fwait
xchg
push
add
mov
push
movups
or
push
aam
dec
and
fidivrl
jb
iret
dec
loopne
add
mov
and
add
jge
out
inc
outsl
outsb
or
aaa
inc
insb
xchg
stos
daa
and
pop
daa
sbb
imul
loope
mov
jb
sub
out
ds
inc
imul
int
pop
incl
dec
inc
dec
push
xchg
add
dec
sbb
and
pop
imul
jge
aas
fiadds
jg
ret
shlb
mov
add
mov
into
inc
leave
sbb
add
adc
inc
lahf
lcall
scas
sets
mov
inc
aaa
jno
sti
shlb
lcall
push
cmp
adc
pop
movsb
cmpb
aad
sbb
cwtl
stos
pop
fadds
pop
adcl
test
and
jge
push
pushl
jb
mov
andb
fwait
rol
fwait
in
inc
mov
bswap
mov
ljmp
jmp
dec
fsubrl
stc
jbe
push
ds
insl
xor
jg
mov
repz
movb
aad
arpl
push
sub
adc
or
cs
insl
sub
adc
call
gs
leave
ret
sub
xchg
mov
data16
mov
lcall
call
cltd
test
push
push
shll
ja
daa
mov
mov
pushl
stos
fmuls
lret
rep
cs
outsl
arpl
test
add
mov
outsl
subb
movsb
mull
jno
jmp
or
scas
addr16
cmp
dec
movsl
jg
push
push
mov
fwait
stos
flds
pop
lahf
jo
and
dec
ret
js
jecxz
aad
pop
mov
in
or
xor
das
ds
das
sbb
push
sbb
fistps
push
and
push
pop
inc
mov
inc
push
inc
pop
and
or
aas
js
insb
cwtl
dec
mov
pop
push
or
mov
inc
add
or
pop
pop
pop
test
enter
jge
jo
shll
aas
ds
push
shl
xor
push
sbb
decl
incb
lahf
daa
inc
add
sub
loop
push
pop
fisttpl
inc
outsl
xor
in
push
lods
mov
and
or
inc
neg
adc
lahf
stos
outsb
cwtl
push
pop
mov
cmpsl
xor
inc
out
mov
imulb
push
adc
insb
pop
repz
and
sar
add
rol
ret
inc
out
scas
pop
cmpsb
dec
push
fidivs
adc
mov
xchg
lods
push
scas
pop
pusha
inc
mov
and
movsl
pop
outsl
jbe,pt
mov
mov
pop
testl
push
fiaddl
add
mov
in
leave
leave
adc
xor
inc
daa
xor
test
push
adc
jb
add
push
pop
adc
enter
inc
adc
leave
xchg
and
and
arpl
mov
push
sub
je
scas
inc
fsubrl
les
movsb
add
cmp
outsl
je
mov
popa
stos
mov
in
inc
cs
inc
fdivrl
or
sub
sub
push
loopne
jo
mov
dec
inc
jle
in
xor
and
push
push
pop
jbe
add
insl
outsl
fs
gs
jo
or
mov
mov
push
addl
mov
add
or
addr16
and
push
lea
pop
gs
inc
sub
daa
mov
div
xchg
lock
cs
imul
inc
mov
pop
sbb
insl
xor
pop
pop
jnp
push
sahf
dec
sub
pop
mov
in
jecxz
dec
adc
xchg
dec
inc
pmulhuw
sbb
inc
cmovo
idivb
cmpb
aas
nop
jo
xor
jbe
maxps
loopne
out
inc
dec
loopne
mov
push
add
adc
dec
and
lods
adc
pusha
dec
in
imul
sbb
xchg
cwtl
fcomps
pop
push
ss
in
mov
daa
ds
fucomip
jnp
or
and
daa
insl
out
sbb
inc
push
pop
das
or
lods
inc
add
mov
mov
idivb
daa
les
enter
xchg
mov
push
leave
daa
xchg
jnp
sti
data16
fs
push
mov
pop
jnp
jnp
dec
fsubl
fisttps
add
test
add
jl
fiaddl
out
inc
mov
mov
outsl
jle
mov
mov
les
scas
clc
mov
lret
or
add
lret
in
dec
inc
push
dec
add
dec
fidivrs
nop
xchg
out
cwtl
fsubl
mov
enter
sahf
mov
int3
inc
inc
add
pop
enter
dec
adc
and
mov
lret
xchg
dec
nop
out
pop
outsl
xchg
js
add
js
jns
in
movsb
lods
cs
dec
sahf
mov
xchg
out
sar
or
fdivl
daa
clc
aaa
and
int3
push
push
lods
add
das
inc
daa
mov
cltd
fsubrs
xor
aas
daa
repnz
mov
addr16
push
aam
xchg
cmp
in
push
dec
lahf
mov
xchg
mov
int
mov
out
dec
xor
inc
push
nop
enter
lods
lods
sub
ja
aam
jns
in
cmp
adc
dec
pop
xor
movsb
inc
in
push
shrb
aam
iret
test
sub
mov
mov
cmp
inc
daa
lock
mov
mov
inc
enter
test
scas
mov
push
loopne
nop
das
sbb
idivl
mov
adc
aaa
je
les
pop
push
push
sub
fiaddl
addr16
mov
iret
test
push
pop
and
mov
daa
add
mov
mov
aam
repnz
rcl
insb
pop
enter
leave
xor
in
fiadds
xchg
cld
pop
fmuls
insb
sar
jl
scas
dec
in
push
orl
pop
int3
ds
cmp
mov
cwtl
cld
ror
xlat
pushf
test
or
sbb
dec
in
nop
stos
or
cld
cmp
repnz
insb
push
enter
cmp
sar
lahf
add
pushf
lods
mov
dec
lahf
pushf
ds
repnz
xor
cld
or
nop
or
in
jnp
repnz
push
pop
lahf
pop
pop
and
pusha
ja
in
nop
out
mov
mov
fsubr
cld
cs
mov
push
dec
jl
rcrl
push
push
shrl
mov
cmp
fcoml
nop
out
mov
cmpsl
or
cmpb
daa
frstor
andb
sahf
or
clc
scas
cmpsl
cmp
pusha
sub
les
dec
push
dec
fisubs
pusha
jg
mov
jns
in
mov
mov
inc
sahf
mov
loopne
nop
add
mov
and
xor
dec
mov
testb
loopne
in
jg
nop
out
cmpsl
and
js
pusha
mov
out
fcoms
inc
sahf
or
js
int3
xor
lahf
out
lock
dec
stc
pop
enter
and
idivb
push
and
cmpsl
js
mov
inc
jg
mov
imul
test
inc
scas
jbe
lahf
je
cs
nop
aam
enter
inc
clc
adc
cltd
fdivs
and
xor
lahf
clc
lcall
int
mov
out
je
dec
sahf
or
pusha
lahf
fs
mov
nop
out
aam
jl
in
mov
add
push
aad
push
adc
sub
btr
jg
test
iret
test
push
jb
cmpsb
test
pop
loopne
iret
test
mov
enter
jge
mov
adc
add
adc
and
fsubrs
xor
iret
test
js
shll
push
jmp
cmp
insb
test
mov
in
lahf
test
mov
test
andb
sbb
movsb
inc
or
pop
in
clc
cmpsl
loopne
fiaddl
jo
aas
cmpsl
test
mov
cmpsl
sbb
mov
mov
fidivrl
push
cmpsl
nop
out
push
mov
push
mov
fistpl
loop
and
hlt
nop
dec
fldt
mov
pop
sahf
push
insl
push
aas
ja
rcrb
mov
xorl
in
or
ja
sub
jg
nop
dec
jmp
rcr
lahf
jbe
shrb
adc
mov
inc
pushf
push
or
push
push
inc
repnz
mov
jg
js
and
pop
lock
js
test
loopne
xor
enter
inc
push
push
push
movsb
inc
mov
jg
int3
test
inc
jo
outsb
addr16
lahf
int3
inc
enter
ja
lock
xchg
clc
pop
in
fstl
out
pop
adc
sbb
mov
fidivrs
ficomps
adc
mov
ficomps
pushf
fdivrp
fadds
cmpsl
mov
cmp
lahf
pop
jb
jo
inc
int3
cwtl
mov
ds
sub
inc
fbstp
cwtl
inc
jg
shrb
int3
rcr
mov
rcl
int3
inc
ja
and
rcl
outsb
xor
in
iret
push
inc
int
pop
pop
jg
xor
loopne
movsl
ss
lahf
dec
iret
add
stos
inc
ja
pusha
fs
fwait
nop
loopne
push
mov
fadds
fiaddl
mov
mov
enter
and
add
mov
in
loope
push
sub
iret
pop
pop
adc
inc
jg
aad
mov
in
pop
daa
insb
lahf
xorl
inc
lock
lods
mov
aaa
mov
incl
fsubs
push
orl
inc
pop
repnz
ja
fs
pusha
pop
enter
fs
pop
enter
mov
repnz
lock
pop
and
mov
jecxz
lock
nop
iret
test
inc
jecxz
mov
cs
in
mov
adc
nop
mov
mov
lahf
nop
mov
loopne
pop
jb
dec
lods
in
inc
loopne
mov
pop
je
in
inc
push
mov
bound
sti
outsl
aas
js
cwtl
add
cltd
nop
push
push
add
enter
xorl
sahf
sbb
in
push
xchg
inc
lds
int3
shrb
cltd
nop
iret
clc
inc
in
pusha
lods
sub
outsl
adc
aad
loopne
mov
addr16
cmp
in
jmp
lock
ss
test
out
pop
sub
lock
call
aaa
and
pop
daa
adc
data16
pop
out
cltd
or
mov
daa
pushf
fcoml
daa
xor
ljmp
mov
scas
xlat
pop
push
sbb
mov
push
or
push
sub
cmp
aas
call
les
pushl
ja
lods
pop
adc
ja
lods
outsl
iret
mov
mov
add
dec
aam
repnz
in
sub
fiadds
out
dec
cmp
push
jae
fwait
dec
push
push
daa
aas
movl
addr16
or
add
pop
out
repz
mov
ja
daa
sbb
dec
scas
fs
dec
inc
in
scas
in
cmp
in
scas
xor
dec
scas
in
and
jne
mov
pop
mov
push
cmp
mov
dec
push
xor
cmpsl
fnstcw
mov
enter
imul
inc
push
and
lock
cmp
mov
mov
clc
out
push
dec
xor
ds
cmpsl
stc
cmp
push
push
dec
repz
mov
jmp
cmp
add
jmp
fisubs
jg
add
inc
in
xchg
pushf
js
stc
and
dec
inc
cld
inc
mov
inc
int
imul
out
cmp
aam
mov
dec
nop
mov
add
cmp
clc
push
inc
out
cld
inc
sub
sbb
ja
mov
sbb
in
ja
dec
xchg
jg
xchg
fmul
xchg
or
inc
dec
outsl
jns
xchg
mov
fdivrl
push
rolb
sbb
in
dec
outsl
add
inc
pushf
inc
pop
test
inc
in
lcall
xchg
mulb
outsl
add
cmp
cmp
dec
enter
cmp
or
shll
add
outsl
xchg
pop
add
xor
data16
sbb
fbstp
push
repnz
mov
out
leave
add
movsb
out
sub
sub
add
dec
xchg
leave
xchg
or
xor
and
xor
out
out
push
xor
out
outsl
add
jnp
ret
fildll
loop
sub
mov
js
aaa
scas
in
dec
js
cwtl
add
pop
scas
in
mov
clc
cmp
dec
add
push
sbb
lock
mov
rol
jg
insl
mov
mov
xchg
and
add
and
sub
fwait
nop
pop
in
lock
fimuls
icebp
popa
sub
xchg
outsl
add
or
and
or
fdivrp
and
or
sbb
jbe
cwtl
lods
fmuls
pop
scas
add
les
add
shl
dec
fisubs
dec
out
add
xlat
mov
in
push
aaa
push
repnz
sbb
out
add
outsl
test
decl
insl
outsl
xchg
push
pushf
daa
addr16
add
jbe
aaa
jmp
call
loopne
pop
cmpsl
mov
or
xchg
push
cwtl
cmpsb
shlb
ret
aam
jg
push
pusha
repz
loopne
cmp
and
xor
sbb
in
shll
repz
pop
sub
fs
jecxz
add
aam
xchg
js
xchg
pop
sub
add
notl
jbe
lock
outsl
push
push
outsl
ljmp
ljmp
testl
push
xor
scas
push
movsb
clc
push
imul
push
cmp
push
out
xchg
clc
loope
xchg
lds
pop
pop
mov
and
cwtl
dec
cwtl
loope
or
inc
nop
and
sbb
push
xlat
or
push
decl
ljmp
add
xlat
or
lcall
clc
mov
cmc
dec
inc
testl
pop
mov
lds
fdiv
pop
in
cmc
mov
testl
and
add
jns
push
shl
mov
jl
loopne
nop
imulb
mov
dec
xchg
and
divb
rcll
push
aaa
sbb
xchg
mov
outsl
add
cmp
icebp
js
cmpsl
pusha
mull
mov
scas
mov
lods
dec
movsb
xchg
mov
mov
daa
in
mov
aad
lods
loop
and
xor
add
pop
enter
insb
aaa
pusha
and
cs
dec
and
clc
fdivr
pop
inc
push
faddl
mov
pop
lods
in
aaa
push
jl
stos
pop
in
sub
pop
loope
stc
cmp
stc
ss
push
adc
xor
add
jns
and
xchg
push
aam
mov
add
lods
fs
int3
xlat
add
loopne
sahf
iret
xchg
fldcw
pop
cli
daa
or
add
faddp
fwait
adc
push
in
cwtl
push
xchg
jns
out
add
call
inc
js
out
in
outsl
mov
or
jnp
jo
aas
add
and
or
add
jg
scas
das
adc
lcall
inc
sti
das
dec
sub
xchg
outsl
add
mov
xchg
movsb
and
or
add
and
js
add
enter
call
dec
xchg
fsubs
rorl
lods
add
pop
lcall
addr16
loopne
mov
nop
or
out
dec
scas
in
mov
or
cmp
std
mov
je
jl
aas
lret
sbb
addr16
sahf
mov
movsb
in
es
fs
aam
addr16
hlt
std
aad
lods
lret
push
dec
imull
xor
mov
mov
inc
xchg
inc
cmp
test
jmp
push
nop
bound
add
aaa
jo
in
nop
out
rcl
or
fdivs
and
push
xor
lahf
fiaddl
cltd
fdivl
and
clc
out
push
jl
shll
les
clc
ja
sbb
push
or
call
adc
aas
ss
sti
pop
shrb
add
dec
shll
cmpsl
fldcw
push
xchg
stos
cmp
repz
adc
lcall
inc
jo
jl
out
mov
add
iret
push
mov
out
sahf
cmp
mov
cmp
repz
xorb
stc
lea
and
jbe
es
loope
nop
dec
repz
cmp
jmp
sahf
out
cmp
mov
cmp
out
mov
or
iret
rep
xchg
shl
xchg
out
sahf
cmpsl
outsb
xchg
mov
out
iret
repz
or
push
int
jns
xchg
and
add
cmp
mov
add
jns
shl
sbb
repz
push
popf
rcrb
push
jns
sbb
pushf
jl
ja
ficomps
sahf
jns
iret
roll
or
fucom
repnz
sub
dec
xorl
push
stos
add
cmp
mov
sbb
iret
repz
push
lea
jns
cmpsl
jp,pt
mov
stc
es
test
lahf
sbb
lcall
push
stos
cmpsl
stc
cmp
jbe
cli
xor
mov
lahf
lods
adc
sahf
mov
ds
jnp
sbb
jns
mov
mov
iret
repz
mov
mov
xchg
and
iret
sarl
ja
adc
jns
xchg
jmp
mov
jns
iret
repz
cmpsb
stc
cmp
out
pusha
mov
sarl
dec
mov
repz
out
mov
fcompl
mov
cmp
jge
sar
xchg
mov
shl
cmp
cmp
ret
jns
je
cli
xor
cmpsl
stc
cmp
add
push
cmpsl
out
out
jl
lds
sahf
data16
popa
push
enter
out
sarl
mov
mov
fnstsw
lret
fiadds
mov
enter
jl
int
xchg
mov
ja
cmpsl
stc
push
iret
fwait
out
sarb
sahf
mov
xor
pop
push
lods
xlat
repz
out
sub
sahf
cmpsl
stc
out
jno
ds
or
andl
add
dec
cmp
out
mov
sbb
mov
stc
pop
fdivs
cwtl
cmp
sahf
ja
lods
inc
fidivl
fstpt
iret
shrl
add
jp,pt
cmp
out
cmp
imul
fisubrs
dec
mov
fildll
imulb
test
xchg
repz
iret
mov
out
mov
ds
hlt
push
push
div
clc
jge
int
jle
loope
movsl
std
int
jns
lods
mov
add
or
add
lahf
int3
lsl
rcr
js
inc
incb
aas
aam
mov
ficoml
inc
cmp
shlb
or
scas
sbb
xor
adcl
jl
add
pop
aaa
jge
inc
nop
int
mov
or
outsb
adc
or
fs
dec
mov
aas
pop
xchg
rcrb
das
std
cmpsb
fcomp
test
ss
aas
das
stos
xor
daa
cmp
jg
xchg
mov
jmp
and
pop
movb
cmp
into
and
loop
jbe
xlat
pop
mov
add
pop
jb
out
aas
int3
addl
mov
je
dec
out
push
clc
mov
inc
outsl
aas
sbb
ds
dec
pop
adc
dec
adc
mov
aas
in
shl
xor
data16
fimull
dec
aas
in
fimull
enter
popf
push
inc
bound
aad
pop
or
push
pop
mov
jbe
out
mov
fadds
push
aam
ret
cmpsl
in
das
dec
or
or
mov
adc
adc
into
shlb
ja
push
pop
sub
shlb
cmp
inc
js
test
xchg
or
sbbl
mov
push
jp
ffreep
lret
push
inc
jbe
mov
cmp
fwait
sarb
hlt
jne
or
jo
leave
sbbl
pop
pusha
outsb
xchg
pop
jb
cltd
fadds
or
into
inc
ja
push
jg
dec
xchg
push
scas
hlt
add
add
inc
pop
cmp
dec
repnz
push
daa
inc
scas
mov
xchg
into
push
dec
fnstenv
add
iret
push
incl
mov
addr16
mov
mov
scas
popf
pop
mov
ja
outsb
fbld
xchg
push
pop
pop
push
cs
dec
cs
fstpl
pushf
xchg
or
pop
int
fadds
mov
cmp
adc
and
mov
movsb
mov
imul
push
xchg
push
insb
push
out
mov
leave
sub
push
int
cmp
sarl
pusha
dec
and
add
pop
repnz
mov
inc
xor
mov
push
daa
inc
xchg
and
sbb
mov
das
mov
ss
jo
mov
bound
stos
loopne
fisttps
outsl
test
faddl
scas
push
scas
jns
adc
xor
add
in
add
sbb
pop
xchg
rorb
outsl
sbb
fsubl
adc
aam
push
lea
mov
inc
scas
aam
xchg
test
adc
and
push
cmp
pop
jb
fs
jae
pop
nop
mov
xchg
pop
mov
loop
iret
das
push
add
pop
fisubl
push
fidivrs
dec
push
cmpsl
and
add
adc
daa
xor
sbb
push
mov
addr16
fisubl
dec
push
daa
push
mov
outsb
pop
outsl
mov
pushf
pushf
pop
add
pop
and
mov
xor
add
repz
aaa
dec
cmpsl
cmpsb
je
subps
adcl
lea
test
mov
push
jo
lea
insl
pop
ja
mov
push
movl
test
imul
pushf
mov
add
push
jg
push
pusha
pushf
pushf
pop
and
repz
xchg
and
add
fldl
leave
sbb
in
fisttpl
inc
mov
pop
cmpsl
adc
popw
outsb
mov
or
pop
xchg
add
leave
add
push
add
rolb
fcmovnb
out
lahf
out
sahf
or
or
or
in
repz
adc
and
push
push
leave
in
pop
push
push
daa
pop
pop
movq
mov
mov
call
es
xchg
mov
add
popf
cmp
lret
add
add
xchg
pushf
dec
or
push
push
push
imul
xchg
xchg
jo
outsl
rclb
cmpsl
lock
dec
leave
orl
dec
sub
dec
pop
mov
jb
das
jge
mov
and
nop
stos
nop
mov
fnsave
jb
ret
nop
rclb
mov
out
xchg
icebp
ss
or
sbb
sbb
cmp
aas
add
cmpsl
sub
push
sbb
in
mov
daa
pusha
pushl
lock
sbb
test
push
pop
aam
in
and
pop
add
into
sbb
xchg
out
xchg
and
icebp
xchg
cld
xchg
or
sbb
fcmovnb
push
fmuls
es
xor
add
loop
filds
fists
cwtl
dec
sbbl
xlat
dec
push
aas
test
dec
ss
xchg
loopne
ja
mov
jp
orl
iret
add
cmpsb
scas
or
xchg
dec
inc
shlb
and
mov
xor
mov
sbb
in
sbb
xor
xor
push
daa
cld
fisttps
leave
add
nop
inc
inc
sbb
or
enter
sbb
xchg
mov
push
mov
popf
mov
mov
test
sbb
xchg
mov
pushf
out
cmp
sbb
push
daa
inc
out
inc
push
adc
add
scas
mov
push
jg
xchg
pop
in
xchg
pushf
js
dec
xchg
push
in
in
in
xchg
les
push
jno
aas
pop
cmpsl
sbb
or
daa
sub
inc
cmpxchg
xlat
sbb
add
out
in
mov
mov
mov
scas
mov
jb
cld
in
scas
or
jb
dec
test
xchg
inc
inc
dec
inc
push
fs
inc
pop
insl
fdivr
ucomiss
push
addr16
cmp
push
add
mov
xchg
xlat
xchg
out
sahf
adc
ja
pop
jb
mov
loop
orb
push
repnz
xchg
enter
jp
add
in
xor
add
push
jb
xor
pop
inc
daa
nop
mov
or
cmp
xlat
adc
push
jo
xor
es
xchg
add
push
iret
push
add
jns
add
add
out
filds
in
sti
repnz
inc
or
rorl
and
xchg
lcall
and
je
xchg
add
test
xlat
roll
je
xchg
and
pop
int3
fucomp
add
cmc
ja
clc
out
cs
movsl
xchg
cwtl
and
popf
popa
jg
pop
paddsw
jns
pushl
xchg
jle
add
addr16
daa
push
out
sahf
pop
and
and
and
movsb
cmp
leave
inc
pop
addr16
mov
mov
mov
xchg
pop
and
mov
dec
dec
mov
push
push
lcall
pop
scas
add
xchg
pushf
test
push
mov
add
pop
fistpl
out
ja
xchg
pop
adc
push
aaa
inc
fbld
pushf
out
es
and
and
mov
fisttps
push
push
adc
xchg
mov
pop
add
inc
scas
adc
xlat
push
pop
mov
cvttps2pi
mov
frstor
adc
daa
cmp
mov
adc
es
adc
enter
popf
aaa
push
iret
jmp
es
leave
xchg
das
vmwrite
fsubl
cld
es
sbb
and
incl
push
daa
push
xlat
xchg
mov
daa
daa
adc
pushf
cmp
cmp
push
add
jmp
add
sahf
stc
int3
icebp
xchg
setle
imul
enter
jg
adc
xchg
jno
pop
sub
jbe
enter
sub
push
jl
mov
imul
push
daa
out
mov
pop
mov
cmpsl
cltd
push
scas
lock
mov
movsb
push
lahf
scas
sahf
mov
repnz
leave
aam
sub
push
sub
lods
sbb
xor
mov
inc
movl
nop
sub
out
mov
fistpll
insl
or
sahf
lahf
pop
fdivs
daa
add
rol
pminsw
leave
dec
fdivl
into
sbb
or
mov
repnz
inc
push
add
cmp
jbe
das
jo
add
cmp
mov
mov
mov
pop
jb
jb
in
and
mov
pushf
dec
sbb
mov
sub
inc
push
xchg
push
push
jae
mov
scas
das
lcall
mov
ljmp
cmpsl
push
dec
sub
cmp
mov
or
push
pop
dec
ja
je
jbe
xchg
sbbb
mov
out
call
mov
fiadds
fsubrp
sbb
jmp
push
inc
cmovnp
leave
jae
push
ja
fs
int
cmp
lea
aas
pop
popf
xchg
movsl
adc
frstors
cmp
iret
repz
sti
jo
mov
pop
movsb
pop
or
repnz
pop
pop
hlt
ss
iret
rcrl
push
iret
jae
cmp
insl
js
and
outsb
daa
mov
cltd
or
scas
das
mov
xchg
out
rorb
adc
loope
jns
cld
adc
pop
movsl
mov
push
cmp
outsb
pusha
stos
mov
movsl
ljmp
inc
imul
dec
das
push
daa
mov
inc
lcall
pop
stos
test
mov
scas
testb
pop
and
fwait
loope
cmpsb
fisttps
push
add
out
mov
lahf
cmpsb
decl
fs
pop
leave
shrb
cmpsb
xor
cmpsb
ja
orb
outsb
ja
cmpsb
pop
xor
iret
xchg
fcoms
xchg
pop
jb
sti
in
jne
dec
js
cmpsl
pop
push
daa
movsl
dec
repnz
add
cmpsl
sbb
mov
pop
xchg
xchg
push
ljmp
mov
test
das
add
and
xchg
xor
mov
fsubrl
mov
jmp
and
les
xor
xor
fmuls
loopne
and
lock
cmp
ret
mov
test
sbb
daa
iret
sbb
push
add
cmp
iret
cmovg
movsb
in
and
fbstp
adc
cltd
push
cmp
jg
in
cmpsl
jp
in
pop
cmc
test
std
test
pushf
in
xchg
test
xorb
lret
addl
test
pop
sub
mov
divps
xchg
push
add
mov
mov
push
lret
or
dec
push
pop
xor
test
js
incb
stos
je
in
sub
out
mov
xchg
push
leave
jnp
rorb
pop
push
push
jle
pop
and
or
cmpsl
scas
adc
xor
cmp
in
out
cmp
das
decb
sbb
add
sub
mov
push
lods
pop
insl
pusha
xlat
outsb
stos
pushl
out
stos
lcall
cmpsl
stos
iret
ficoml
loop
ljmp
test
jbe
lods
xchg
in
dec
lcall
xchg
xchg
xchg
or
dec
push
insb
pop
in
xchg
pop
mov
adcl
iret
movsb
shrd
js
iret
mov
mov
fcmovne
add
out
pop
enter
imull
iret
jae
fimuls
push
push
push
pop
pop
or
jae
cmp
das
or
aas
iret
repz
or
or
repnz
pop
adc
push
mov
ja
jg
unpckhps
xchg
xchg
lods
xlat
lock
sbb
push
add
mov
push
pushf
cmp
inc
scas
das
fsubl
adc
dec
push
dec
cmp
scas
ficoml
cmpsl
push
mov
cmpsb
scas
scas
call
sbb
add
xchg
cmp
scas
pop
pop
insb
mov
scas
das
dec
ja
fiaddl
scas
mov
lock
mov
out
add
cmp
jmp
mov
dec
in
in
or
into
or
mov
fimuls
imulb
out
push
test
fimuls
dec
out
add
outsl
jp
pop
aam
js
pop
jbe
aas
ret
jnp
and
inc
mov
pop
dec
or
outsl
rorb
adc
adc
ja
and
cmp
push
cmp
nop
jl
mov
inc
adc
bound
cmp
mov
mov
push
outsl
dec
push
add
cmp
into
push
out
sub
add
out
in
mov
pop
xchg
or
shrl
lea
call
or
cmp
mov
sbb
cmp
loope
ja
notl
incb
mov
mov
adc
decl
push
cmp
inc
mov
rolb
dec
mov
iret
xlat
popf
jnp
out
jp
cmpsl
push
xchg
push
out
fnsave
cmpsb
push
mov
dec
in
jno
or
out
mov
cs
xchg
int
sarb
mov
repz
repz
add
add
add
repz
dec
add
add
repz
pop
mov
xchg
hlt
cmp
repz
insb
or
mov
daa
mov
sbb
daa
std
mov
add
add
repnz
add
or
add
and
sbb
sub
in
dec
cmp
enter
mov
sbb
pushl
mov
lahf
jg
into
mov
mov
cld
incl
in
xor
mov
cltd
aas
in
pop
in
jbe
jb
fst
int
cmpsl
add
xchg
out
jo
mov
roll
sbb
mov
pop
jb
jb
inc
cmp
leave
in
in
iret
ja
ja
incb
xchg
add
leave
inc
mov
xchg
xchg
mov
in
lods
inc
out
and
cmp
adc
lods
mov
pop
ss
ds
inc
shll
punpcklwd
insb
mov
xor
lahf
jbe
cmp
cmpsl
scas
mov
ret
out
fisttpll
add
pop
cmp
enter
testb
or
mov
scas
push
mov
or
or
stc
or
add
cs
and
gs
in
adc
insl
inc
mov
pop
scas
cs
pop
or
scas
insb
dec
dec
dec
rorl
pop
push
mov
movsb
inc
fsubrl
cwtl
pushf
je
out
ja
outsb
inc
leave
or
inc
mov
out
fmull
iret
out
xlat
pop
fbstp
xchg
pop
out
maskmovq
or
setb
sbb
mov
lret
and
inc
cmp
rorl
mov
mov
pop
aas
pop
and
in
push
push
test
pop
mov
pushf
nop
lcall
dec
cs
call
cmp
adc
sbb
das
and
dec
je
je
pop
xchg
push
addr16
decl
jns
mov
lea
sarl
daa
adc
in
hlt
mov
jne
mov
dec
sahf
flds
xlat
inc
mov
push
dec
mov
jo
pop
jb
in
xchg
out
pop
aaa
rorl
add
mov
mov
fsqrt
cmpsl
push
adc
pop
in
xor
xchg
enter
mov
push
add
das
mov
popl
leave
in
in
xchg
fimuls
add
out
cmpsl
cld
js
bnd
mov
das
mov
xlat
push
inc
inc
mov
xchg
ja
mov
mov
mov
dec
mov
mov
mov
fstpt
add
fsubl
iret
repz
out
repnz
leave
xor
jns
or
mov
cmp
push
push
movaps
cmp
sahf
pxor
inc
scas
mov
pop
push
add
leave
leave
shrl
jg
imul
xchg
setg
jns
mov
in
outsb
mov
xlat
jecxz
jmp
xrelease
lock
aas
adc
xchg
sbb
fmulp
aaa
mov
pop
mov
cmp
add
jbe
jle
sahf
out
jbe
lcall
sahf
movsb
mov
addl
mov
pop
sub
or
xchg
xchg
xchg
mov
dec
lcall
push
jae
mov
xchg
setle
test
scas
movswl
dec
xlat
push
pop
in
dec
das
xchg
out
cli
dec
or
in
and
dec
push
pusha
sub
mov
fucomi
js
out
orb
push
add
outsb
push
dec
cwtl
xlat
or
dec
scas
loopne
mov
adc
xchg
in
pop
push
aas
push
mov
shlb
iret
mov
push
add
adc
and
sbb
das
cmp
mov
test
lahf
jo
scas
shlb
sub
push
ror
fcmove
repz
add
adc
ds
cli
add
pop
mov
shl
xor
xchg
dec
dec
pop
iret
pusha
shll
and
pop
mov
sar
iret
leave
in
in
mov
popf
pushf
pop
and
fisubrs
cmp
xchg
mov
adc
sbb
mov
xchg
sub
inc
xchg
leave
leave
in
in
push
subps
lock
dec
das
pusha
xchg
setg
iret
cmpsl
out
cmp
push
mov
or
ljmp
add
enter
ret
daa
ret
ret
xchg
mov
ret
js
push
xchg
imul
pop
punpcklbw
mov
mov
fwait
add
out
in
mov
xlat
mov
icebp
daa
stc
fbstp
jp
test
sbb
pop
add
fwait
les
fucom
jns
push
xchg
add
clts
aaa
leave
xchg
push
sahf
inc
les
fidivrs
sbb
mov
les
dec
cmpsb
mov
push
ret
fsubrl
aas
int3
paddq
xchg
inc
and
inc
lds
jb
movups
and
leave
xor
lds
adc
addr16
cmpsl
mov
xchg
xchg
xchg
mov
leave
mov
ds
lds
dec
fadds
xchg
jecxz
enter
push
add
add
dec
jb
shufps
push
shr
xchg
test
push
add
push
jmp
loopne
imul
push
cld
dec
mov
aas
pushf
repnz
jo
shrd
call
iret
mov
loope
xchg
dec
adc
scas
inc
push
das
pop
pop
iret
leave
sub
and
sahf
cmp
inc
pop
dec
outsl
push
bound
pop
push
jae
outsb
stos
dec
jl
xchg
iret
mov
dec
popf
pop
popf
fildll
jb
mov
jmp
in
aam
fcomip
ljmp
sub
out
or
xchg
insb
pop
dec
pop
psubb
pop
das
cs
mov
insb
jmp
and
add
cmovp
ss
add
enter
jb
pushf
movsb
setnp
cs
lods
enter
es
je,pt
push
cs
enter
fcmovne
repz
or
in
in
mov
stc
add
jle
leave
mov
adc
push
dec
leave
fidivrs
nop
mov
push
add
xorl
leave
iret
xlat
or
inc
mov
jo
idivl
fadds
push
inc
movhlps
lret
cmp
pop
rolb
fiaddl
fwait
mov
push
ljmp
out
push
iret
cli
push
or
das
or
pop
leave
out
decl
push
inc
shll
pop
sahf
pop
jmp
add
add
sub
cltd
lret
pop
add
mov
addr16
addr16
or
clc
pop
add
or
outsb
jae
outsb
adc
pop
cmovg
xchg
add
and
xor
mov
insl
push
jmp
push
lret
pop
mov
lret
xchg
addr16
pop
pushf
pushf
xchg
setg
cmpsl
cmp
mov
mov
cmp
sub
mov
mov
push
sbb
add
jns
out
and
jns
out
push
or
pop
or
or
inc
repnz
mov
pop
pushf
cmp
xadd
push
sbb
pop
jecxz
fsubrl
mov
psubq
int
cwtl
mov
add
repnz
adc
sbb
pop
xchg
sbb
int
dec
jne
outsb
dec
push
scas
int
in
bswap
add
pop
and
xor
int3
pop
add
movsb
pop
pop
rolb
test
or
xchg
aaa
cmp
mov
int3
mov
cmp
cmpsb
lcall
int
int
push
sbb
into
sahf
fldt
xor
add
sahf
out
push
add
cmp
cmp
or
cmp
or
repz
or
iret
cmp
repz
ficoml
in
stc
cmp
repz
adc
iret
iret
repz
cmpsl
adc
pop
daa
cmp
repz
xor
cmp
repnz
prefetcht1
xchg
xchg
xchg
xchg
push
adc
xchg
xchg
adc
adc
sbb
xchg
xchg
push
or
add
add
iret
faddp
and
out
iret
das
mov
add
sbb
inc
aas
push
xchg
pop
fisubrs
or
pushf
pop
and
mov
lods
idivb
mov
adc
fidivs
mov
daa
scas
xchg
es
mov
pop
daa
or
inc
cmpsl
frstor
push
dec
and
xchg
jl
sar
shlb
jp
mov
push
pop
shl
in
movsl
jmp
jl
inc
mov
das
out
in
cmpsl
pop
ror
sahf
out
add
iret
add
mov
or
pop
inc
daa
xchg
pop
adc
ljmp
pushf
pop
mov
addr16
push
pushf
pop
and
rclb
hlt
xlat
daa
xchg
xchg
fmul
iret
sub
shr
rclb
lcall
stc
sbbb
rcl
jmp
and
pushf
cmp
pop
xchg
add
add
les
cmpsl
mov
adc
call
out
into
pop
rclb
xchg
out
fmulp
add
or
add
add
repz
add
rep
daa
xor
push
or
sahf
out
cmp
push
push
or
or
popa
push
imul
cwtl
adc
in
add
shr
xchg
inc
popa
cmp
fstp
call
repz
shl
out
sub
pop
cmp
inc
das
enter
popa
addb
or
or
lahf
xor
xlat
mov
dec
inc
aam
push
add
pop
aam
pop
inc
cmp
out
push
fildll
jno
jle
and
adc
pop
jmp
es
bound
mov
iret
xlat
pandn
mov
or
sbb
cmpsl
mov
push
mov
daa
adc
ja
imul
ja
jg
aad
mov
mov
push
add
mov
xchg
cwtl
js
sub
bound
mov
pop
rcrl
xlat
cmova
incl
push
jg
popa
mov
cmpsb
out
mov
les
push
sbbl
pop
push
loop
pop
adc
jmp
gs
inc
xor
mulw
sbb
outsb
aas
xlat
inc
fimuls
jmp
or
sbb
xlat
je
popf
fldt
inc
repnz
icebp
notl
pop
xlat
iret
popa
xlat
lods
fwait
cmp
push
push
jno
add
cmp
iret
leave
add
jns
or
pusha
mov
xchg
push
btc
xchg
cltd
adc
mov
jae
pop
push
int3
fisubrl
mov
xchg
notl
lods
fisttpl
addr16
and
leave
xchg
fsubrs
fsubr
in
loope
dec
data16
xchg
cmp
addr16
mov
pxor
push
xchg
push
add
sahf
outsb
repnz
push
in
and
dec
idiv
or
adc
repnz
sbb
sub
shrb
addr16
dec
push
add
cs
mov
dec
push
mov
fwait
pop
movsl
ss
jl
xchg
dec
push
jae
shrl
in
enter
fnsave
ud0
invd
or
mov
or
and
cmp
mov
fidivrl
seto
inc
push
rolb
fisubrl
mov
cs
pminub
add
sub
ljmp
mov
addb
add
mov
ficompl
or
call
ja
inc
pop
sbb
shll
lock
in
cvtdq2ps
add
out
or
or
xlat
enterw
push
es
dec
jb
adc
pop
fildl
insb
add
movsl
mov
fmull
push
popa
cmpsl
fistps
test
popf
mov
loopne
pop
pop
adc
pop
mov
psubd
leave
inc
js
and
and
popa
pop
jns
pop
leave
mov
pop
mov
lods
xchg
imul
and
pop
dec
outsb
loopne
lock
inc
and
clc
pop
or
in
in
pop
push
add
add
out
add
or
out
and
or
cs
sub
push
fstl
cs
insb
cmp
sub
les
ja
daa
daa
pop
add
into
insl
pop
movq
cmp
clts
mov
iret
leave
iret
xlat
or
repnz
pop
or
insl
add
into
leave
add
pop
bound
pop
jae
jns
cmp
xchg
mov
popf
pop
dec
pop
lods
mov
mov
dec
andnps
or
das
outsb
repnz
push
pop
gs
repz
repz
adc
jge
dec
dec
mov
push
daa
daa
daa
mov
pop
vpmullw
mov
in
sbb
repz
cmc
pop
std
mov
testl
mov
and
cmp
repz
cmp
iret
repz
push
sub
pop
cs
insl
fnstcw
jne
jge
das
xor
insl
andl
mov
sbb
sub
adc
outsl
outsl
fsubl
adc
mov
push
jns
jns
inc
fisttps
push
loopne
lea
xchg
xchg
mov
je
dec
andps
outsb
daa
daa
pop
xchg
add
fs
mov
rorl
repz
xchg
add
mov
jmp
scas
cmpsl
mov
fucomi
in
or
loopne
jmp
cmp
jnp
testb
into
or
sahf
xchg
out
sub
adc
adc
unpcklps
out
xchg
xchg
loope
loope
pop
lcall
sbb
jns
into
sbb
sbb
out
repz
loope
sahf
out
push
and
jns
out
and
inc
sahf
out
sahf
and
push
sub
subb
jns
out
sub
sahf
sub
rcr
in
in
xor
call
mov
mov
jg
jecxz
adc
mov
out
fisubrs
inc
es
out
sahf
dec
and
jns
out
insb
and
and
sahf
out
lea
cwtl
push
sahf
out
sahf
mov
sbb
out
les
iret
sbb
out
sahf
out
in
lock
iret
sarl
dec
push
in
adc
sahf
out
push
sbb
sub
xlat
dec
pop
aaa
sqrtps
pop
push
jle
mov
dec
cmovp
sahf
out
pop
pop
pop
data16
iret
mov
mov
push
xchg
or
lahf
add
in
in
test
jno
outsl
call
psadbw
in
pop
in
and
das
daa
in
in
pop
iret
repz
aas
or
or
repz
or
sbbb
mov
push
setle
out
adc
jns
out
adc
adc
sahf
out
sahf
adc
out
enter
sbb
sbb
jns
adc
sbb
sub
xor
cmp
sahf
out
push
and
das
mov
in
jbe
dec
js
orl
fwait
out
cmpsb
push
sbb
jns
pop
rcll
out
sahf
out
aam
fcoml
sahf
out
sahf
in
in
adc
adc
repnz
cld
movd
or
sahf
out
sahf
or
and
sahf
out
or
or
or
cmp
inc
out
out
cmpsl
fwait
cmp
push
arpl
inc
xchg
es
dec
out
dec
jne
sbb
movsl
outsl
lods
out
shrb
mov
pmaxub
cmp
mov
add
aad
aad
fstpl
in
fucomip
push
inc
ds
pop
std
divps
xchg
testl
adc
in
repnz
sbb
out
sbb
call
lahf
sbb
xchg
jp
dec
xor
xorb
push
push
daa
mov
in
push
add
jecxz
add
jmp
psubq
jmp
or
sbb
and
out
sub
adc
push
push
adc
jb
cmp
orb
lcall
mov
ret
ret
cmp
fsub
and
jmp
and
mov
xlat
rclb
nop
movaps
jns
outsb
pop
xor
add
out
pop
push
pop
packsswb
je
out
or
or
fisttpll
ja
push
push
orl
out
adc
add
bound
scas
xchg
xchg
test
aas
jns
sbb
jmp
adc
add
sbb
daa
pop
xor
jns
out
or
push
repz
cmp
mov
or
pusha
push
iret
repz
imul
adc
cmp
lods
push
adc
repz
into
psubusw
in
add
cli
add
notb
in
pop
sbb
in
pop
cmp
and
in
dec
pop
and
in
dec
sahf
and
leave
leave
leave
in
lahf
rsm
mov
repz
leave
lret
loope,pn
in
loop
in
imul
outsl
xor
mov
in
addr16
repz
shrl
xchg
test
add
dec
in
push
add
pusha
push
push
je
repz
or
nop
in
jns
lcall
in
mov
ret
dec
sahf
out
adc
loop
ljmp
cli
sbb
out
repnz
pop
bndldx
or
adc
sahf
outsb
nopl
push
mov
stc
mov
nop
jnp
pop
cmp
cmp
maxps
jns
cmp
cmp
cltd
sbb
xchg
out
mov
push
leave
out
mov
ja
es
lock
add
std
dec
inc
sahf
or
push
and
fildll
sahf
aaa
stc
hlt
push
or
cmp
push
or
fucom
jns
bound
mov
in
jbe
pop
jp
test
lahf
fwait
sahf
out
outsb
mov
adc
adc
leave
push
aam
paddsb
mov
shl
into
push
sbb
jns
out
call
in
lret
add
mov
nop
pop
insl
jbe
jbe
icebp
jg
icebp
lahf
cmp
mov
neg
add
movaps
sahf
jnp
mov
jg
sub
push
sub
jg
cs
das
pop
sahf
out
sahf
xor
jb
jge
mov
xor
xchg
sahf
in
sahf
out
ss
aaa
mov
mov
sub
cmp
cmp
mov
jg
dec
mov
pop
pushf
cmp
xchg
aas
mov
out
outsb
xadd
inc
xlat
dec
sahf
out
inc
in
icebp
sahf
out
fisubrs
or
dec
adc
adc
add
stos
sarb
daa
je
push
loope
aas
dec
push
dec
dec
das
fwait
lret
mov
dec
inc
jge
jg
xchg
icebp
cmpb
push
mov
cmovle
jle
jns
pop
jns
repnz
push
mov
in
mov
or
or
iret
leave
leave
iret
fsub
or
ds
repnz
push
push
adc
sbb
jns
out
adc
inc
push
jb
cmp
adc
adc
sahf
ja
pop
sbb
jge
pop
lcall
mov
bswap
push
and
loopne
pop
loop
leave
jmp
add
jg
jne
nop
insb
clc
jg
push
add
sbb
push
pop
hlt
mov
lahf
jno
jl
es
cmp
add
dec
sahf
out
add
jb
leave
repz
aam
lahf
outsb
jns
fcompl
ljmp
repnz
cmovle
cmc
and
leave
repz
cs
adc
adc
repz
push
pop
pop
jns
iret
repz
cs
dec
sahf
out
sbb
enter
mov
sub
mov
jns
enter
and
cmp
insl
fimull
jmp
lea
sub
sub
adc
iret
mov
inc
cmovl
mov
xor
lds
mov
int3
aas
div
push
add
cmp
into
aas
fidivrs
out
lahf
out
xor
aam
outsl
testl
add
es
mov
jns
in
negl
push
push
pop
movntq
ja
push
or
jle
rorl
or
into
repz
cmp
stos
adc
negl
adc
adc
jbe
fsub
pop
xlat
jl
out
ds
pop
stc
sbb
out
jl
sbb
mov
sahf
out
sahf
sbb
sub
xor
xchg
xchg
out
aas
and
out
sahf
and
jp
mov
out
test
nop
popf
fsubrl
mov
leave
scas
testb
mov
pop
dec
push
or
sbb
into
repz
sbb
add
stc
sahf
pop
stc
adc
inc
dec
sahf
out
add
pop
push
pop
jae
orb
repz
repz
repz
mov
mov
jns
rorl
pmaxub
mov
aam
push
pop
cli
push
adc
ja
or
push
adc
out
outsw
cmp
inc
sbb
es
jns
push
push
sub
cmpsb
cli
daa
daa
iret
dec
pop
push
add
jne
jg
push
add
enter
pop
out
or
repnz
es
incl
sti
jns
fbstp
prefetch
sti
pop
push
paddusw
out
adc
cmp
inc
jns
iret
mov
push
pop
push
push
fmull
out
pop
insl
js
xor
iret
repz
repz
fwait
sbb
out
fidivs
and
repnz
into
and
enter
xchg
sti
or
cmp
insl
jbe
cld
pop
and
sub
sahf
testl
xchg
pop
fs
cld
int
cmp
sahf
out
mov
cmpsb
adc
adc
jns
call
daa
push
sbb
in
cld
or
push
push
sbb
xchg
out
sub
pop
aaa
inc
std
lahf
sahf
xchg
or
dec
std
fisttps
arpl
out
and
and
in
in
setp
jl
mov
pop
sub
xchg
inc
cmp
cmp
xor
mov
loope
ja
pop
lock
clc
outsb
pushf
sbb
sbb
xor
das
dec
fsubrs
push
filds
sbb
jns
push
mov
leave
shrl
pop
syscall
lcall
mov
mov
xchg
syscall
or
fisubrs
iret
or
unpcklps
cmp
jnp
pop
adc
sub
xor
inc
push
adc
xchg
pop
loopne
lcall
les
in
sbb
fisubrl
sbb
out
jecxz
repz
es
cmp
mov
das
popa
push
and
repz
ja
orb
cwtl
daa
mov
movsb
fwait
pop
das
sub
sahf
ja
cmp
iret
push
das
fisubl
fucom
jns
in
pop
xor
xchg
out
cs
push
add
ss
add
ds
outsb
aaa
pop
push
outsb
push
jmp
insb
emms
pop
iret
leave
repz
cmp
cwtl
dec
and
clc
mov
cmp
into
aas
setb
in
in
add
push
out
cmp
int
fmuls
jecxz
jns
sahf
or
stc
or
add
cmp
add
sbb
daa
push
adc
jns
leave
repz
cmp
jbe
pusha
das
imul
push
pop
xorl
pop
scas
repnz
daa
mov
sahf
out
fisttpll
call
ja
repnz
add
cs
mov
sub
sahf
xchg
out
jns
test
sub
out
scas
pop
cs
jns
in
adc
das
pop
push
xor
xor
xor
outsb
xor
fucomi
cmpsb
lahf
mov
mov
xchg
rcr
dec
add
push
lahf
push
out
dec
inc
sub
pop
add
xchg
addr16
pushf
fisttps
add
jns
in
fstpl
push
pop
mov
cmp
packsswb
ficompl
das
smsw
add
data16
cwtl
dec
in
popl
cmc
fwait
xchg
inc
mov
push
or
es
sbb
xor
fs
mov
jno
mov
cmpsl
fmul
inc
mov
es
mov
adc
cmp
pop
push
push
mov
pop
xor
loopne
sub
xchg
subl
out
out
orb
and
xchg
rorb
push
cmp
mov
add
add
aas
inc
push
or
sub
lahf
rorb
add
cmp
aaa
sub
aaa
xchg
aaa
sub
xlat
add
cs
popf
push
jbe
mull
arpl
mov
or
decl
pop
or
dec
outsb
daa
daa
or
aaa
or
jbe
jne
or
daa
jbe
mov
and
in
inc
push
addr16
das
mov
xorps
insl
cmp
pop
push
sbb
mov
orl
mov
xchg
sub
in
in
sahf
mov
in
shll
pop
or
jo
mov
mov
add
add
adc
lods
and
or
test
add
or
lcall
aam
add
push
and
mov
pushf
add
add
movsb
add
pusha
cmpb
cmpsb
fisttps
mov
repnz
mov
cmp
decb
inc
mov
out
in
inc
mov
iret
mov
in
call
mov
push
add
in
cmpsl
in
push
pop
fisubrl
xor
fcomp
loopne
jb
loope
adc
in
xchg
pushf
and
xchg
nop
repz
repz
repz
insb
pusha
push
dec
inc
cmp
iret
repz
xor
sub
repz
repz
sbb
adc
imul
and
in
and
out
outsl
in
faddl
aam
shlb
mov
dec
out
cwtl
out
out
push
dec
insb
push
fs
pop
push
jns
repnz
into
sbb
iret
repz
aam
mov
cmp
mov
jns
repz
push
sahf
push
cmp
and
push
or
out
ds
and
fadd
mov
pushf
neg
jns
xchg
pushf
push
je
pusha
push
inc
add
pop
icebp
adc
add
adc
in
push
xor
cmpb
lock
js
clc
mulb
gs
incl
dec
hlt
xor
jno
xor
aas
sbb
es
push
or
lock
push
orb
lock
mov
xorb
iret
dec
outsl
lock
call
push
mov
daa
push
adc
je
fists
pop
shll
inc
sgdtl
push
adc
jg
add
sbb
xchg
jb
mov
add
add
mov
arpl
fsubs
pop
das
add
popl
or
add
js,pn
dec
mov
inc
stc
pop
jg
jl
addl
pop
out
fdivrs
lock
repnz
out
sbb
jb
es
jns
ja
xor
insb
ss
out
and
sahf
push
mov
and
sbb
adc
ds
and
sahf
testl
jns
out
and
or
or
adc
fcompl
repz
jns
adc
xor
sub
and
push
and
sahf
out
and
and
and
add
aaa
inc
dec
cmp
or
clc
rol
xchg
fucomi
pop
imul
daa
xor
and
subb
fmulp
xlat
xchg
incl
xorl
fistl
cmp
repz
xchg
mov
in
repz
repz
xor
dec
insl
add
jns
aaa
cmp
pop
ja
mov
testl
das
push
dec
insb
adc
xchg
xchg
mov
repnz
jb
or
or
ret
cmpxchg
cld
xchg
movntps
sbb
leave
sbb
scas
mov
ret
inc
and
sahf
mov
sub
inc
rcrb
and
decl
jmp
inc
jno
xlat
xchg
inc
push
add
inc
stc
mov
adc
mov
mov
dec
pop
js
inc
outsl
loopne
jmp
xchg
test
mov
cmp
jmp
jl
mov
popf
sti
jmp
stos
push
inc
mov
repnz
test
pop
stos
clc
ljmp
cli
inc
jmp
aam
imul
loope
jp
iret
inc
gs
xchg
push
cmpsb
scas
mov
or
gs
or
addl
cmpsl
xchg
cmp
xor
dec
cmpsl
in
cmp
pop
hlt
lcall
cmpsb
lock
mov
popa
sar
mov
sbbb
std
ljmp
mov
subb
fwait
xchg
and
xor
int3
add
aas
jno
or
mov
out
or
aas
pop
fs
dec
lea
aas
ret
shrl
mov
icebp
aas
rorb
jmp
test
inc
lods
lds
mov
insb
scas
add
aas
xor
aad
mov
jmp
aas
ret
into
popa
test
ja
stos
in
das
dec
pop
loope
les
aas
xchg
les
jne
dec
adc
lcall
cmp
push
mov
xchg
aas
and
loop
mov
jp
popa
push
jg
lcall
jle
push
jl
mov
das
lea
mov
inc
inc
aas
movsl
jmp
jg
sub
jge
mov
inc
rcr
push
arpl
int3
and
call
cmp
std
jp
and
cmp
mov
cmp
std
xlat
cmp
mov
sbb
jg
inc
xchg
test
pop
mov
jne
fldt
cmp
jno
sar
jmp
out
dec
nop
pop
cmp
fisubl
xor
push
lahf
inc
pop
mov
sub
jmp
xor
push
scas
into
imul
faddp
jge
call
mov
xchg
cmp
cld
outsl
call
and
dec
dec
gs
std
orl
pop
ficomps
frstor
sbb
into
or
or
addb
jno
mov
add
pop
repnz
inc
inc
je
inc
inc
push
dec
jnp
addr16
pop
and
dec
dec
inc
push
dec
inc
aaa
xor
mov
xchg
jg
stos
insb
cmp
int
fdivrs
pop
fisubl
call
dec
inc
jo
inc
popa
push
outsb
jbe
imul
push
mov
gs
outsl
dec
cs
and
add
adcb
shlb
in
leave
add
push
dec
out
sbbb
inc
dec
push
inc
push
adc
jnp
jo
jb
push
push
adc
inc
inc
inc
test
mov
dec
inc
gs
gs
insb
xchg
clc
mov
ds
arpl
test
rcl
or
bound
outsl
push
dec
pop
mov
push
push
xchg
and
xorb
xor
and
fisubrl
and
inc
push
das
push
fs
add
push
mov
cwtl
add
xchg
dec
rorl
daa
daa
mov
jge
dec
jae
imul
xor
inc
jg
jnp
cmovae
loopne
lahf
or
push
push
les
push
cmp
jp
test
je
dec
rclb
shlb
push
push
imul
sub
insl
inc
inc
inc
inc
adc
jb
dec
fidivrl
dec
lds
jae
jbe
mov
push
dec
test
push
mov
adc
xchg
int
cmpsb
adc
push
mov
mov
aas
push
sti
dec
popa
jne
arpl
and
dec
pop
cmp
pusha
pusha
xlat
push
or
dec
rol
mov
add
aad
and
clc
pop
mov
js
cli
dec
sub
mov
or
or
push
add
scas
push
jg
notl
push
imul
andl
loope
jb
lds
orb
das
pop
add
push
mov
addl
jp
lock
push
sbb
and
gs
stos
or
mov
push
push
outsl
push
inc
arpl
push
lds
test
out
xor
pop
jg
adc
mov
mov
cmp
sbb
mov
mov
data16
push
add
jno
outsl
mov
pusha
pop
outsl
ja
or
pusha
pop
es
add
aam
or
arpl
inc
or
push
inc
jo
adc
lahf
ss
pop
icebp
ja
stos
sub
push
gs
dec
scas
sub
dec
lahf
sbb
pop
inc
dec
subb
push
lahf
nop
leave
dec
add
adc
test
jg
sbb
rcrl
mov
aas
decl
out
sub
add
stos
lahf
mov
inc
jno
nop
cmp
out
mov
and
outsl
shl
mov
dec
dec
jb
inc
test
js
add
cmpsl
mov
aam
arpl
dec
outsl
add
push
movsb
and
outsb
push
sub
fisttps
pop
push
jne
les
outsl
sbb
cmp
loopne
push
mov
jle
dec
outsl
addr16
rolb
aad
iret
cmpsb
test
mov
iret
pop
sub
fcmovb
insl
pop
arpl
lea
das
xlat
stos
dec
adc
out
jg
repz
cwtl
incb
jl
dec
sahf
out
cmp
or
jns
out
mov
jl
sub
cltd
shl
rol
data16
inc
insb
pushf
cmp
jmp
dec
push
js
pushf
cmp
pause
push
and
lahf
incl
ljmp
add
popa
push
out
mov
inc
insl
pop
hlt
push
xor
xchg
fs
xor
fdivrl
jmp
rclb
decl
mov
sub
mov
sbb
dec
jno
repz
test
call
ficompl
jmp
mov
hlt
movl
imul
std
in
leave
mov
lcall
fldcw
arpl
or
pop
adc
in
pusha
aad
jno
mov
jmp
add
aam
dec
std
test
movsl
cli
test
xor
leave
mov
lods
jecxz
or
xor
iret
or
shrl
pushl
fldenv
cmp
ficoms
push
xlat
enter
mov
and
mov
cltd
xchg
mov
mov
mov
add
and
or
adc
stos
sbb
cmp
inc
fdivl
jno
add
aad
mov
mov
movsl
in
lahf
ja
pushl
aam
call
xor
mov
lcall
cwtl
push
loope
or
insl
or
pop
arpl
hlt
push
imul
insb
sbb
xor
decl
insb
jnp
add
shl
adcb
cmc
fnstenv
adc
mov
jl
mov
bound
ficoml
gs
aam
pop
popa
mov
into
pop
ljmp
cmp
mov
inc
movsl
fisttps
xchg
fadd
shll
jmp
fldcw
inc
mov
sarb
add
in
add
pop
dec
or
cmp
add
incl
daa
adc
or
and
test
or
mov
popa
into
push
stc
ficomps
dec
fldcw
and
xlat
pop
cmp
mov
cmp
lods
insb
mov
in
mov
pushl
mov
lcall
ljmp
fildl
push
fdivl
or
test
cmp
push
or
or
push
in
decl
xchg
daa
scas
add
mov
pop
jge
xchg
rcl
jmp
add
inc
push
imul
xorb
sbb
push
imul
jg
aam
loopne
rorl
int3
dec
frstor
fistpll
mov
mov
aad
mov
call
xchg
shll
push
repnz
addr16
cmpsb
fldl
mov
dec
ss
fisubrl
or
scas
testb
pusha
jp
inc
ret
out
pusha
fists
addr16
mov
jns
imul
mov
lret
sbb
outsl
and
xchg
ja
int3
add
mov
das
es
mov
or
sub
mov
cmpsl
call
ret
shlb
sbb
pushl
repnz
pushf
mov
insl
add
ss
jmp
addr16
jb
push
pushl
hlt
orb
adc
mov
jnp
sbb
xchg
or
out
fdivr
jl
or
rcl
xchg
aam
clc
mov
push
int
mov
mul
ja
cmp
outsl
ja
mov
out
cli
jo
ud0
cmp
pop
or
adc
sahf
gs
call
std
clc
sar
imul
push
js
or
push
addl
mov
cmp
jmp
cmpsl
notl
pusha
rorb
imul
push
scas
fcompl
fldenv
filds
cmp
aaa
push
ljmp
mov
inc
jmp
repnz
lret
mov
cmpsb
mov
pushl
sarb
sub
push
mov
jp
mov
dec
popa
les
sbb
xchg
sub
aaa
cs
movsb
mov
or
sbb
add
add
iret
push
loop
shlb
xor
cmc
mov
cmpsl
outsl
inc
jne
push
popl
or
mov
imul
je
push
insb
imul
lods
pop
filds
sar
pop
inc
jbe
push
jns
arpl
arpl
mov
fsubrs
in
push
inc
insl
sub
mov
pop
inc
jne
outsl
insl
addr16
xchg
sbb
rcrb
add
or
xorb
ja
adc
cmp
push
xchg
mov
dec
inc
js
xor
bound
cmp
inc
js
pop
ret
sub
fistl
in
sbb
and
aas
pop
inc
cmp
pop
imul
jmp
xor
aaa
cmp
popa
arpl
cmp
arpl
or
popa
add
jg
xor
xor
xor
loope
dec
les
inc
jbe
pop
sbb
adc
icebp
xor
inc
ret
negb
cmp
inc
or
xchg
inc
lock
fmull
push
pop
shll
mov
mov
cwtl
push
ss
jbe
arpl
add
aas
movsl
sbb
ret
aam
jle
hlt
nop
fsubrs
inc
push
clc
xchg
inc
jo
js
sbb
and
inc
fldl
xchg
insb
popa
jns
pop
mov
push
push
dec
insb
xor
and
rclb
movq
popl
in
push
and
and
jae
cmp
adc
push
aas
dec
nop
lods
stos
cmpsl
push
mov
inc
fcomp
insb
sbb
inc
pop
pop
add
jae
inc
mov
in
fiadds
add
ds
test
mov
mov
mov
call
xchg
sbb
arpl
inc
outsb
jne
and
mov
dec
jge
int
jne
xor
xor
or
inc
cmc
mov
add
addr16
push
xchg
into
pop
jo
or
pop
inc
cmp
add
aaa
dec
add
je
orb
sbb
dec
ss
inc
mov
pop
push
xchg
inc
mov
lahf
inc
dec
mov
or
mov
push
pop
adc
rclb
lds
jb
dec
add
frstor
push
js
adc
jo
sahf
add
lahf
aas
push
outsl
outsl
mov
mov
push
pop
push
jno
inc
stos
and
in
sub
pop
shl
shr
test
pop
cmp
arpl
push
cmp
inc
and
mov
call
lea
lock
jns
jne
jo
das
inc
pusha
push
popa
jb
push
fs
mov
sbb
nop
adc
mov
adc
insb
bswap
arpl
clc
or
bound
pop
dec
popl
test
push
aaa
ja
or
ret
movl
xor
bound
sbb
add
push
sub
aaa
pop
jl
adc
loopne
push
pusha
pop
popl
addr16
xor
testb
push
xchg
mov
and
mov
movsl
sahf
aas
pusha
popa
adc
cmc
jg
outsl
shll
dec
and
sbb
cs
push
outsb
cwtl
adc
dec
pushf
mov
inc
lds
jns
daa
aas
pop
inc
or
mov
add
and
add
pop
sbb
push
icebp
fisubs
inc
aaa
adc
push
push
sbb
dec
dec
pop
nop
daa
movsb
enter
mov
std
clc
or
pop
mov
int
mov
dec
push
pop
add
inc
add
mov
shrb
jb
pop
dec
decl
and
and
cs
fisttpl
and
cmpsb
dec
shrd
popa
incl
lea
stc
out
pop
in
bswap
mov
out
ud0
ds
jmp
repnz
in
push
pusha
ljmp
lret
cli
add
dec
pop
push
cld
push
imul
sbb
pushf
xchg
rcl
mov
daa
loopne
into
xchg
add
or
or
push
daa
aam
aam
cmp
add
pop
add
and
add
add
rcr
jnp
inc
sbb
add
xchg
andb
add
sub
mov
mov
movsb
mov
js
push
loop
dec
enter
pusha
push
add
adc
adc
pop
add
cs
cmpb
add
les
lods
add
gs
and
jb
repnz
mulb
inc
fs
sti
push
xor
cs
mov
mov
in
dec
or
rcrb
jb
push
xlat
out
loope
jle
add
jns
test
push
dec
sbbb
add
sbb
enter
incb
xchg
sub
icebp
dec
xor
or
insb
inc
jg
sub
lea
jno
add
xchg
pop
or
jecxz
adc
add
incb
sub
mov
pop
imul
jbe
push
or
push
in
push
push
xchg
ds
push
enter
fucomi
gs
xor
fdivrp
rcr
ja
jne
jmp
mov
xchg
sahf
ja
stc
mov
call
xchg
insb
pushf
test
inc
or
movsb
in
into
scas
xchg
sub
int3
loope
pop
mov
jnp
fbld
mov
insl
adc
cmp
mov
jb
mov
xor
sub
adcl
or
mov
movsl
xchg
clc
add
out
cmp
hlt
in
nop
sub
fsubrs
xorps
sbb
push
movzbl
ret
lahf
testb
and
nop
fadds
mov
popa
cmp
mov
sub
and
lds
cmp
jbe
mov
add
pop
pop
dec
mov
sub
pop
popa
loopne
dec
sub
add
test
in
push
mov
pop
clc
or
inc
push
ret
fstp
stc
cmc
jns
xor
movsl
mov
loopne
call
sbbb
push
add
outsb
cwtl
and
and
jmp
pushf
and
popf
clc
aad
or
popf
divl
push
inc
imul
add
adc
xorl
subl
sti
adc
cmpsb
push
outsb
xor
xchg
push
inc
dec
and
add
mov
pushf
xchg
idivb
test
push
inc
lcall
add
add
movsl
xor
ret
mov
add
std
and
lds
fs
and
orb
in
push
push
push
fldt
into
ja
sub
dec
in
push
leave
push
enter
jg
mov
cmp
pop
add
hlt
out
or
sub
cmpsb
outsl
mov
xor
outsl
push
sahf
jo
rorb
jp
dec
pop
push
ret
xchg
mov
pop
scas
rorb
es
nop
sbb
sub
das
sahf
lea
mov
add
cltd
nop
notb
push
or
pop
mov
mov
es
cld
pop
mov
je
inc
test
movb
adc
mov
mov
jb
push
mov
mov
mov
and
sbb
loope
sbb
push
add
push
js
lea
jno
gs
cmpsl
cmp
adc
inc
pop
in
popf
je
rcll
in
add
and
or
rclb
dec
sbb
movb
xor
aam
rcll
or
je
fnstcw
lods
jecxz
repnz
mulb
xchg
cli
movsw
mov
sbb
dec
jge
in
push
gs
dec
test
and
xor
mov
push
dec
and
jnp
push
mov
inc
ljmp
jg
mov
push
mov
dec
call
push
inc
push
push
insb
faddl
sub
fldl
mov
push
mov
sub
sub
mov
push
cmp
hlt
add
or
cmp
ss
bound
sbb
lcall
or
stc
jp
mov
push
lea
push
in
cmpsb
scas
xchg
ret
xlat
pop
jp
push
or
mov
lock
rcrb
push
xorb
sbb
test
ja
adcl
fisttpll
roll
loope
loope
push
jnp
int
ret
sub
jl
jb
ret
xor
testb
ret
cmc
rcrb
dec
mov
mov
aam
dec
add
in
add
stos
inc
enter
xchg
fisubrs
dec
bound
test
sti
addr16
add
int3
add
fildll
adc
xchg
rcll
xchg
loope
push
lods
sub
enter
test
xchg
pop
clc
or
je
and
mov
aad
add
pop
push
lret
das
xchg
dec
call
call
dec
gs
jne
xchg
lea
xor
mov
or
sbb
pop
mov
cld
nop
push
je
or
sbb
sbb
add
into
cmp
push
dec
inc
lock
sbb
mov
pop
mov
xor
add
lods
mov
mov
lahf
pop
sbb
ja
pop
mov
xchg
testl
push
idiv
fmull
sbb
push
inc
sbb
out
into
pop
in
dec
push
inc
cmpsb
push
dec
or
shrl
add
mov
push
fs
sbb
sbb
mov
outsb
dec
sbb
cs
sahf
or
in
shl
or
jbe
xchg
and
push
mov
push
xor
icebp
inc
psllq
sbb
ret
xchg
ret
repnz
sti
sbb
inc
sub
or
arpl
or
jmp
loopne
mov
add
push
add
negl
adc
test
popa
bound
je
fildl
stos
call
ret
aas
cmp
fiaddl
mov
pop
lds
and
push
pop
lahf
jecxz
push
mov
or
gs
test
popa
mov
push
shrb
jmp
bound
xchg
or
ret
push
mov
sub
jge
and
loop
jo
sbbb
mov
or
sbb
lret
push
ret
or
or
adc
jbe
adc
shll
xor
xor
xchg
sbb
push
sbb
subl
addr16
loop
add
clc
das
push
and
cltd
inc
stos
mov
mov
push
push
dec
fdiv
rol
jns
pushf
sbb
rorb
out
xor
inc
pop
pop
pusha
push
inc
adcl
pop
mov
cmp
pushf
mov
cmp
insb
mov
into
idivl
mov
adc
xchg
push
push
addl
stc
and
js
mov
dec
add
push
jb
call
test
test
sub
sti
mov
addr16
xchg
loopne
mov
in
cmp
push
lea
adc
inc
jbe
shll
ss
push
shlb
lds
ret
and
mov
mov
jo
sub
daa
sarb
xchg
adc
fildl
or
cmp
shll
loop
ljmp
divb
addr16
mov
repz
xchg
fdivrp
xor
fdivr
mov
pop
loop
ret
add
xor
out
cmp
jecxz
add
and
psubsw
push
sub
pop
data16
ds
in
aas
xor
call
or
mov
int3
or
jle
mov
mov
pop
pop
movsl
and
push
adc
pop
mov
pop
dec
out
push
rolb
lea
inc
repnz
enter
jl
popa
sub
mov
rep
aas
rolb
movsb
push
movsb
pushf
pop
mov
adc
cmpsl
add
arpl
je
inc
jne
push
ss
rcll
xchg
rcrb
in
bound
adc
gs
sbb
sub
mov
repz
push
int3
ret
pop
in
push
mov
lahf
enter
inc
mull
mov
pusha
js
dec
pop
mov
inc
lods
add
xchg
mov
add
sbb
loope
xchg
push
jb
je
ljmp
ljmp
rcrb
je
popa
or
sbbl
cmp
out
inc
push
fistl
sbb
je
mov
cmp
scas
sbb
add
call
or
stos
pop
insb
or
mov
aam
ljmp
xchg
adc
inc
stos
sahf
dec
xchg
pushf
data16
xor
sbb
imul
into
dec
jnp
rcl
fiaddl
mov
loope
imul
push
and
adc
pop
jmp
movsl
loopew
hlt
sbb
xchg
aas
js
mov
mov
lret
mov
std
scas
jmp
adc
or
push
adc
push
subb
or
and
scas
dec
adc
jno
add
push
adc
push
cmp
push
jae
and
cmp
inc
outsl
xchg
dec
jle
jmp
mov
pop
dec
pushl
and
loopne
and
mov
dec
in
lret
pop
lcall
cs
add
or
jmp
inc
test
inc
dec
inc
ficomps
imull
sub
push
stc
idivl
jp
lret
xchg
loope
and
xchg
mov
nop
dec
in
add
sti
mov
xorl
add
inc
or
pop
jno
loope
push
sub
test
push
push
cmp
pop
adc
leave
adc
mov
cltd
adc
jl
xchg
lods
inc
rorl
in
mov
mov
pop
mov
cmp
sub
repnz
xchg
cltd
je
inc
mov
mov
mov
cmp
mov
xor
in
je
in
in
in
inc
xchg
push
in
mov
mov
mov
mov
lcall
mov
loop
inc
mov
add
imul
es
das
fidivrl
sub
aas
push
popa
lods
dec
data16
hlt
dec
mov
adc
mov
out
inc
sbb
jne
lods
jb
stos
add
jae
xor
fidivrs
add
xchg
mov
push
push
mov
mov
dec
mov
xor
data16
call
xchg
cmpsb
adc
jmp
or
cmp
faddl
push
inc
enter
dec
ljmp
add
les
cmpb
adc
mov
fwait
enter
lods
dec
xlat
push
push
mov
push
mov
push
jecxz
repz
mov
push
jg
mov
push
call
lcall
mov
adc
or
and
jbe
int3
sub
loope
cmp
and
jle
add
jne
jl
sahf
icebp
sbb
mov
lods
jo
mov
adc
movl
pusha
sub
in
test
mov
jne
pop
inc
add
adcb
das
scas
jns
dec
inc
nop
mov
dec
testl
pusha
mov
and
add
imul
enter
add
aaa
dec
mov
mov
lea
xchg
xorl
in
pop
cmp
mov
into
mov
ss
mov
outsl
flds
mov
repz
or
popa
inc
dec
pop
and
je
or
push
ljmp
add
sub
scas
leave
ret
cmp
adc
and
push
loope
call
mov
cld
inc
notb
dec
test
push
sbb
or
push
insl
push
jmp
mov
fs
xor
call
xor
ljmp
scas
aad
push
push
cld
lcall
shl
mov
pusha
popf
rorl
adc
sbb
nop
add
or
mov
push
mov
add
rorb
movsb
les
jns
lods
jbe
mov
test
inc
jne
xor
xor
inc
sbb
in
mov
dec
test
adc
mov
cltd
insl
add
mov
mov
push
cmp
push
loopne
pop
pop
xor
mov
mov
out
push
xchg
push
inc
shlb
hlt
repnz
fisubs
or
rcll
dec
inc
xchg
cltd
push
inc
inc
xor
mov
pop
fcmovbe
or
or
shr
pushl
imul
or
jnp
mov
ss
stos
std
std
push
stc
jp
movhps
xor
cld
cmp
adc
inc
subl
rorl
scas
fucomp
pop
inc
sbb
push
inc
enter
mov
dec
xor
sub
testb
movsb
xor
mov
cmp
dec
mov
jo
cld
sub
push
fmull
dec
aas
add
adc
add
cmpsl
adc
ds
xor
mov
mov
stos
sbb
jne
add
pop
mov
jns
add
mov
and
je
mov
add
imul
push
ja
adc
sarb
jmp
test
subl
js
lods
lock
pop
add
int
and
testl
jnp
dec
or
jbe
out
ret
dec
cmp
push
xor
sbb
jmp
or
clc
jae
ret
int3
adc
loopne
aam
outsb
je
inc
push
push
lldt
pop
mov
daa
jl
adc
sub
pop
xchg
adc
cmp
jne
inc
call
cld
and
pusha
bound
stos
popf
into
mov
xor
insl
inc
dec
rcrl
mov
or
call
inc
adc
ds
ret
sub
inc
jbe
jmp
xor
push
les
sbb
xadd
xchg
sarb
std
movsb
clc
push
or
enter
and
push
outsl
jne
xor
adc
std
jmp
and
xor
fld1
jb
add
in
pop
jnp
and
or
or
cmc
movsb
divl
mov
mov
sarb
mov
sarl
jl
imul
jb
cmp
xor
ret
sbb
fs
pop
jg
call
cmp
rolb
xorb
adc
push
subl
sbb
sub
lods
adc
fnstenv
in
sbb
jl
pop
stos
addl
outsl
mov
sbb
adc
jne
mov
jl
sbb
jmp
or
xor
or
push
or
xor
or
or
popf
cmc
add
lods
xchg
xor
cmp
sub
push
push
dec
sbb
push
and
mov
mov
push
dec
fiaddl
testb
cmpsl
es
mov
ljmp
sbb
push
call
imul
push
cmp
ss
mov
test
sbbl
mov
mov
adc
mov
mov
adc
push
push
mov
mov
mov
cwtl
or
mov
xchg
stos
std
mov
push
fucomip
cmp
je
cmp
stos
sub
movsb
xchg
jne
pusha
mov
cmpb
adc
clc
push
and
std
cmp
das
imul
cwtl
sbb
cmpb
push
in
movsl
shll
xor
inc
or
pushf
cli
adc
fcompl
or
pop
pushf
loop
jo
loope
test
inc
jmp
bound
scas
cmp
loopne
push
add
or
test
mov
pop
fwait
adc
mov
mov
lcall
test
paddb
inc
fidivrl
jmp
push
pop
hlt
adc
mov
call
loop
push
sbb
cmp
jnp
adc
pop
mov
stos
in
pusha
mov
call
or
fwait
inc
adc
je
xchg
add
add
and
lods
stos
loopne
sti
push
mov
cltd
xchg
lock
lea
dec
jle
test
sub
out
dec
in
sub
popf
push
add
jg
sub
das
push
lock
push
lea
mov
pop
xchg
push
xorb
loop
outsb
enter
jne
imul
sub
push
fstl
aam
in
je
push
fistpl
inc
cmp
cwtl
jecxz
pop
pop
popa
fsubrl
call
mov
scas
pusha
loope
fdivs
faddl
push
adc
xor
pop
scas
dec
mov
fwait
jae
js
push
push
sub
jno
add
add
or
sub
mov
sete
adc
aam
popa
pop
sbb
shrl
inc
sahf
inc
sahf
or
add
insb
and
push
in
ret
push
mulb
mov
jmp
pop
cltd
xorl
push
and
xchg
mov
arpl
ja
das
mov
addps
add
dec
push
hlt
lret
xchg
push
push
adc
mov
add
rep
ss
clc
and
cmp
ljmp
push
inc
pusha
test
mov
std
lods
fst
inc
mov
and
add
adc
sub
xorb
sub
or
ffreep
movsl
mov
or
jo
lods
je
cwtl
inc
adc
xor
mov
or
mov
jmp
iret
call
cmp
jmp
push
imul
pop
ss
js
addr16
sbb
popa
mov
sbb
sbb
jne
out
sbb
cmp
jmp
jnp
mov
ss
cmp
jne
push
jno
lea
jae
shll
enter
jecxz
decb
aaa
mov
mov
pop
push
mov
jmp
nop
xor
inc
enter
cmc
mov
movb
movsl
cld
lds
push
mov
inc
call
fldenv
pop
pop
cld
push
jecxz
test
setb
push
xchg
out
or
cmp
cmc
pop
movsb
sbb
add
pop
pop
jb
inc
lcall
loope
push
js
negb
lea
sub
push
xor
fistpll
xor
fxtract
jmp
lahf
and
pop
xorb
movsb
inc
or
sbb
jne
mov
or
jl
movl
pop
mov
or
mov
cmc
pop
mov
or
xchg
jne
add
mov
incb
call
in
movsb
jmp
js
push
cmp
sbb
mov
dec
or
dec
push
cwtl
jmp
sbbl
cmp
sbb
and
jbe
icebp
sub
or
or
adcb
jle
sarb
stc
sub
xor
inc
shlb
addr16
push
or
sbb
fdivl
cmpsl
or
pop
cwtl
rorl
popf
pushf
or
cmp
test
sbb
mov
test
push
push
inc
loopne
jg
mov
fs
inc
mov
mov
inc
mov
aad
subl
pop
pusha
ja
cmp
jg
push
dec
lea
push
je
or
pop
gs
mov
orb
xor
sbb
shll
add
jl
or
pushf
ret
nop
push
sti
push
jl
or
mov
cmp
fadds
dec
jne
movzbl
add
add
or
xor
movsb
gs
nop
mov
aaa
and
pop
push
sbb
ljmp
ja
add
nop
sbb
sub
es
lods
jmp
in
pop
add
push
cli
sub
into
jno
test
xor
or
and
ja
pushl
mov
lea
inc
xor
sbb
jae
inc
pop
rorb
dec
sub
jecxz
push
or
or
shlb
out
push
sub
xor
xor
inc
cmc
cmpsb
movsb
call
sub
leave
fwait
adc
or
adc
mov
leave
inc
cwtl
push
clc
xchg
bound
push
push
call
rorb
rcr
push
sub
mov
movb
sub
xor
xchg
cmp
jne
aad
clc
cmp
mov
je
inc
xchg
push
lds
dec
and
dec
nop
lds
fistl
lds
enter
adcb
addb
aas
mov
js
add
repnz
sub
call
pop
inc
rcll
inc
subl
roll
rolb
cli
add
sub
roll
nop
pop
push
out
add
push
push
shll
inc
push
inc
addl
xor
rcrl
shll
pop
add
ja
adc
rcrl
imul
movsb
jmp
add
lds
add
stos
rcrl
add
sbb
and
inc
aaa
push
shll
dec
push
sbb
rorl
daa
and
rcll
sbb
jmp
rcrb
mov
and
pop
popa
pusha
shl
or
inc
push
inc
inc
mov
push
cli
or
cli
mov
and
jp
jle
mov
mulb
mov
xor
sbb
adc
cmp
dec
fnstenv
aam
inc
adc
cmp
ss
iret
call
xchg
mov
jl
pop
int3
pop
fs
hlt
insl
inc
xchg
mov
or
pop
leave
rcrl
cmp
adc
cmp
mov
mov
mov
pop
call
clc
pop
ficompl
pop
jmp
dec
jb
mov
aaa
je
cmp
jmp
cltd
orb
pop
xchg
sbb
ret
xlat
xchg
add
dec
sar
xor
pop
test
lcall
push
into
cmp
xor
jno
dec
dec
jmp
sub
inc
mov
rclb
push
sbb
orl
push
inc
pop
xchg
xchg
sbb
je
add
sbb
or
adc
cmc
cmp
sub
dec
test
mov
mov
mov
xor
add
fists
arpl
call
sub
andl
aad
pop
push
xchg
push
push
es
cmpsb
out
xchg
add
movsl
push
and
cld
aad
es
into
push
shll
rclb
pop
sbb
jae
push
es
inc
lods
add
shufps
inc
inc
je
outsl
or
dec
push
mov
or
in
ficomps
arpl
push
xor
cmp
xchg
in
mov
sbb
sub
pusha
aam
int3
xor
jbe
push
mull
andb
imul
mov
add
sbb
in
rcll
sub
push
xchg
popa
cld
js
outsl
pop
aaa
movl
arpl
adc
pop
add
je
int3
inc
rolb
mov
add
inc
push
push
xchg
xor
pop
rcl
adc
inc
loope
add
rcrl
jo
pusha
inc
inc
pop
enter
aaa
and
les
pop
and
inc
andl
inc
xor
inc
sbb
inc
sub
ja
inc
ss
inc
xor
sub
insl
dec
pusha
inc
inc
lret
dec
dec
jle
lods
insb
dec
out
lret
call
nop
push
dec
shl
dec
andl
jp
insb
out
inc
dec
int
lds
fs
cs
repz
sahf
pusha
nop
push
in
nop
je
mov
movsb
out
lcall
imul
fidivrs
push
sub
sbb
sarb
adc
add
xchg
xor
sbb
jmp
push
xlat
test
out
adc
adc
out
adc
mov
out
inc
daa
pop
nop
add
and
dec
fsts
ss
and
fidivrs
mov
jns
out
mov
add
rcl
out
mov
xchg
or
push
adc
add
movsb
out
sub
fistpl
mov
add
and
or
and
mov
mov
mov
or
insb
and
loopne
dec
pushf
push
pop
jmp
mov
clc
xor
xor
xor
sub
cs
cli
mov
fisubrl
test
inc
xor
push
pop
add
or
add
add
sahf
out
add
pop
test
sbb
add
and
add
jbe
add
mov
add
sahf
xchg
sub
push
push
gs
pop
dec
jae
inc
inc
or
fmulp
xchg
mov
or
xchg
out
dec
cld
add
or
or
ucomiss
and
pop
and
xchg
or
or
jb
je
push
add
psadbw
lret
xor
adc
pop
adc
or
adc
xchg
add
adc
xchg
pop
enter
adc
mov
adc
enter
adc
jb
iret
push
push
inc
pop
imul
sbb
mov
xchg
ja
xchg
sbb
mov
sahf
sbb
fcompl
cmp
mov
push
sbb
cmpsb
repnz
push
sbb
mov
xor
addr16
sahf
sbb
cmpb
inc
negb
pop
and
clc
jg
and
ret
sub
cmp
mov
insl
pop
pop
movl
xchg
sarb
pop
jmp
fwait
xor
push
in
push
in
imul
sahf
dec
push
jns
rol
adc
in
cmp
repnz
mov
cmp
mov
mov
aas
sub
call
and
in
adc
xchg
sub
xchg
mov
cmp
cmp
ljmp
in
jmp
push
push
xor
or
in
in
xchg
jb
out
repnz
in
cmp
mov
pop
leave
xor
out
xchg
out
out
sbbl
pop
insl
nop
lock
dec
icebp
rolb
in
icebp
das
jnp
and
enter
repz
push
pop
in
std
hlt
hlt
imul
pop
hlt
xchg
std
cmc
cmc
dec
sahf
xchg
stos
cmp
in
in
negl
addb
gs
clc
clc
clc
or
aas
stc
stc
in
sahf
xchg
and
cli
add
das
nop
addr16
sti
fdivrp
cld
ffreep
inc
outsb
cld
je
cld
push
push
nop
shlb
cmpsb
in
ss
xor
sbb
mov
xor
inc
ret
pop
sub
xchg
push
lret
or
cltd
xor
movsb
mov
pop
jmp
adc
out
repnz
jecxz
xor
in
sub
push
cmpl
push
jo
adc
inc
or
out
inc
scas
ss
scas
call
das
sti
adc
or
or
or
daa
pop
leave
or
jmp
cli
or
and
out
out
xchg
mov
lock
cmp
cli
or
mov
sbb
scas
and
sub
imul
stc
div
notl
pop
int
xchg
xchg
clc
cltd
xchg
cmp
pop
jb
push
stc
imul
stc
sti
sti
fmulp
aad
sti
xchg
or
cmp
fcmovbe
repnz
jmp
mov
mov
into
aad
test
subl
jmp
fisubl
dec
loop
loop
arpl
loope
clc
dec
adc
and
push
xor
or
repnz
fdiv
out
mov
inc
sahf
testl
ljmp
jmp
testl
or
hlt
imul
out
push
sub
mul
xchg
cmp
pop
scas
notb
or
xchg
stos
or
loope
pop
leave
or
testb
dec
in
aad
out
div
fst
mov
mov
push
loope
cmp
inc
scas
cmp
sub
pop
cmc
cli
cli
mov
cmp
loope
jns
mov
adc
xlat
inc
jns
lods
xor
test
push
jo
or
mov
push
push
push
out
je
loope
loope
jns
xor
pop
hlt
pusha
pop
repnz
mov
hlt
in
subb
pop
repz
inc
repnz
mov
dec
push
cmp
xchg
repz
sbb
mov
cs
jae
and
jb
sbb
mov
cmpsl
repnz
cmp
icebp
inc
scas
out
icebp
das
xchg
pop
cmp
push
jno
ds
repnz
sbb
dec
push
arpl
mov
sbb
cmp
in
cwtl
icebp
or
jne
stc
mov
dec
icebp
xor
cmovno
or
out
lock
mov
sahf
push
js
add
jmp
imul
fnsave
sub
ffreep
push
inc
push
sti
jp
insb
loope
inc
cmp
cmp
and
add
adc
mov
mov
fiaddl
mov
xor
dec
icebp
dec
add
movsb
xchg
and
inc
cmp
sti
inc
xchg
mov
and
out
xor
jg
dec
push
popa
mov
int3
dec
push
nop
push
jns
adc
push
aaa
or
push
add
adcl
shrl
push
jecxz
repz
mov
cmp
pop
insb
sbb
push
push
aad
cmp
jnp
in
xchg
gs
dec
outsb
or
and
neg
mov
xor
add
cli
dec
mov
popa
sbb
and
lea
inc
cmp
xor
or
test
pop
dec
xchg
mov
xchg
or
xchg
nop
xchg
pop
les
mov
movsb
movsb
jae
fists
push
adcb
sub
push
push
sbb
or
push
inc
jecxz
add
loope
aaa
cmp
mov
sub
dec
xor
ss
out
pop
mov
sarb
xchg
lea
call
call
ret
ret
inc
incl
rcll
pop
add
push
pop
cmp
push
and
es
clc
adc
cmpsl
or
pop
insl
adc
add
jmp
dec
jno
dec
xchg
xchg
je
jno
sub
leave
gs
dec
dec
push
stos
movsl
fstl
sbb
jo
adc
and
jo
push
das
pop
xor
stos
adc
push
ss
mov
adc
cmp
aas
cmp
inc
cmpsb
dec
add
sub
jmp
rol
sub
cmp
sub
xorb
adcb
call
inc
push
pop
aam
lock
je
add
add
xchg
jo
xchg
pop
xchg
sub
leave
pop
lds
js
and
pop
data16
imul
scas
add
dec
xor
pop
cwtl
test
or
or
or
and
cltd
sbb
jmp
adc
fldcw
mov
jp
xchg
mov
pusha
push
adc
mov
adc
mov
xchg
adc
mov
andl
outsl
rorl
pop
jp
sbbb
enter
xor
xchg
sub
add
or
loop
out
xchg
xor
lock
inc
adc
mov
push
push
or
jg
movsb
jae
test
je
mov
dec
xchg
and
or
sti
iret
les
mov
es
stc
push
sub
xchg
and
int
inc
and
pusha
adc
sbb
adc
fidivrs
lret
fwait
dec
call
es
mov
and
fucomp
sub
leave
add
out
ds
jmp
je
dec
inc
add
sbbb
jb
and
aaa
and
and
xor
lahf
popa
xor
inc
add
or
es
push
data16
out
sbb
pop
or
rorl
or
je
jb
lahf
aam
or
sbbb
xor
pushf
pop
and
nop
dec
xor
pop
xor
rorb
dec
lcall
dec
dec
dec
dec
sub
sbb
cmp
push
movsb
push
xor
dec
xorb
rcl
adc
sub
lahf
push
enter
mov
je
lahf
mov
push
lahf
sbb
sbb
mov
add
lahf
adc
inc
adc
adc
mov
mov
jb
daa
lahf
inc
mov
in
es
push
loopne
ds
adc
or
push
sbbb
mov
add
fdivs
test
insb
pop
or
aam
lcall
sahf
jmp
ret
lret
push
inc
gs
sahf
push
stc
aaa
and
loopne
xor
or
push
pop
outsl
mov
mov
cmp
dec
jne
or
dec
les
or
daa
jmp
push
mov
sub
xor
inc
mov
inc
pop
in
imul
loop
and
in
pop
xor
pop
popf
push
push
cmp
xor
cmp
inc
cmp
dec
mov
and
mov
pusha
or
pop
enter
dec
xorb
mov
xchg
or
inc
in
add
jno
ficompl
das
inc
lcall
rcl
and
fs
cmpsl
xchg
and
call
ficompl
imul
inc
adc
fnstenv
lcall
inc
add
pop
pusha
jecxz
fldl
lods
nop
scas
sub
enter
sub
or
or
mov
sti
hlt
jle
or
add
es
cli
xor
mov
std
imul
push
or
xchg
inc
cs
xor
dec
xorb
movaps
movb
mov
dec
xorb
mov
dec
pop
enter
in
jl
movsb
cmpsl
add
mov
dec
or
sub
jmp
mov
push
popa
fsubs
add
add
and
inc
jb
pop
push
es
negl
shr
data16
data16
frstor
mov
mov
shlb
test
and
dec
int
bound
out
fimull
pusha
push
cmp
jo
shlb
scas
popa
shlb
je
sub
lods
ret
nop
xchg
cmp
cmp
je
add
cmp
dec
inc
inc
loopne
movsb
sti
popa
cmp
push
inc
mov
cmp
int3
cmp
or
push
add
dec
cmp
sti
push
daa
xchg
nop
outsb
dec
mov
xor
and
or
xor
cmp
cmp
mov
and
xchg
out
orb
orb
inc
dec
lea
or
mov
ja
mov
jl
inc
sbb
adcb
inc
dec
mov
in
push
int
loope
xchg
shl
mov
inc
xor
sub
mov
loopne
rorb
sbbb
hlt
cmpsb
adc
int3
sub
or
or
dec
jp
xor
sub
lret
fnstenv
cmp
pop
cmp
clc
mov
xchg
sbb
lahf
jp
mov
pop
sub
test
pop
cmp
inc
dec
jno
enter
dec
je
sbb
mov
imul
xchg
in
loope
mov
cltd
xchg
je
aas
sbb
aam
sbb
push
cmp
adc
int
jae
xor
pop
bound
mov
loopne
imul
rcrb
and
or
or
hlt
xor
sub
imul
popf
lcall
push
xor
sub
nop
jns
enter
push
lcall
imul
xchg
sub
nop
call
xlat
ss
mov
adc
data16
iret
jmp
ljmp
adc
shrb
dec
inc
es
or
sub
sub
stos
cltd
xchg
sub
sub
push
fs
dec
sbb
fdivs
dec
inc
sub
pop
or
call
sub
push
outsb
sbbl
or
pop
or
dec
sub
sub
int3
xor
pop
mov
xor
add
mov
out
imul
jo
adc
int
in
sub
push
push
sub
add
sub
xor
imul
nop
pop
fsubrs
push
pop
mov
jp
sub
rcl
xor
ss
sub
lea
pusha
and
rcll
enter
rcl
loope
sub
add
push
and
sub
aam
pop
int
sub
jae
nop
cs
into
jbe
rcll
shrl
insl
cltd
inc
sbb
int
je
sub
xor
nop
dec
sbb
add
rcrb
fisttpl
and
rclb
xchg
sub
scas
sub
push
aam
call
mov
orb
push
sub
imul
sbb
stos
add
sarb
sub
adc
cli
test
sub
cmp
jae
sub
xor
loopne
sbb
int
int3
sbb
lock
cwtl
sub
fildll
lret
test
int
jl
push
xchg
push
cmp
cltd
xchg
add
cmp
inc
xor
and
in
call
xor
or
cmc
data16
sub
cmp
rcl
imul
and
rcrb
mov
in
inc
cmpsl
imul
sub
sub
inc
repnz
add
imul
cmpsb
mov
and
sub
jo
add
pop
pop
sbb
lahf
xchg
xchg
rcrl
in
inc
push
mov
int
sub
inc
adc
cmp
arpl
lock
out
pop
rclb
push
inc
push
sub
mov
lods
ficoml
test
sub
js
imul
fwait
rclb
rcl
rorb
push
pushf
shll
sub
inc
dec
push
mov
xor
sub
xor
xor
xor
cmp
xor
xor
inc
push
pop
mov
xor
dec
dec
pop
cmp
pop
movsl
cmp
lods
cltd
sub
incl
ret
call
popa
sbb
imul
xchg
xor
cmp
adc
rcl
sub
jno
mov
or
ds
mov
pop
jmp
xor
imul
aaa
popf
xor
dec
lds
add
test
das
mov
in
pop
xchg
es
or
inc
out
push
mov
cwtl
lcall
vmaxps
sub
dec
inc
cs
jbe
mov
push
cmp
jbe
rcll
mov
pop
add
add
dec
add
jge
mov
jbe
push
out
shlb
std
mov
push
push
add
mov
pop
push
inc
dec
inc
pop
or
enter
pop
movsb
addb
push
mov
add
sbbb
fwait
add
xor
jnp
add
and
lahf
xlat
jae
mov
sub
mov
leave
sbb
dec
dec
lock
dec
mov
fcompl
loopne
sub
inc
pushf
or
loope
lcall
push
xchg
into
cmp
lret
lret
lret
lret
or
push
and
into
sub
out
push
xchg
dec
je
add
js
imull
dec
dec
test
xor
shlb
dec
cmp
int3
cmp
es
dec
insb
cmp
movsl
mov
adc
rorl
jae
dec
pop
stos
add
push
cmp
cwtl
xchg
inc
cmp
inc
dec
mov
mov
leave
ret
ljmp
movsb
xor
out
or
call
pop
mov
inc
cmp
add
sub
in
cli
stc
imul
dec
pop
jg
dec
ret
and
pop
mov
inc
push
jo
test
xchg
and
mov
leave
xchg
adc
push
cwtl
pusha
pop
add
mov
fwait
roll
das
push
loopne
outsl
inc
hlt
out
or
scas
outsb
inc
inc
enter
cmpsl
loope
jl
inc
stc
push
clc
inc
add
notb
and
int
jbe
lcall
stos
xchg
fbld
dec
or
sub
outsb
inc
cmp
outsb
das
jmp
psubsb
adc
roll
jge
jbe
fimuls
call
push
cmpsl
inc
jmp
nop
into
addr16
and
inc
mov
out
sbb
push
cwtl
dec
addr16
inc
push
shll
insl
inc
sub
push
inc
xchg
ret
fistl
mov
cmp
inc
insl
dec
or
rcl
insl
dec
testl
shlb
jo
shrl
aaa
jo
inc
sub
inc
pusha
roll
fadd
insl
inc
mov
gs
sub
movsb
ret
push
mov
and
movsb
jmp
inc
xor
repz
inc
xor
loopne
add
fldl
mov
push
mov
imul
inc
clc
cs
call
ffree
insl
sbb
mov
lahf
pop
dec
call
outsb
jo
mov
or
xchg
or
xor
es
and
add
pusha
mov
outsb
add
push
dec
inc
mov
rcll
mov
or
xchg
test
dec
inc
out
mov
mov
xchg
nop
dec
lea
adc
nop
fs
and
sub
test
mov
mov
mov
dec
call
xchg
and
xor
mov
mov
out
test
das
push
test
push
mov
scas
adc
push
imul
loop
dec
dec
shll
sub
adc
add
inc
cmp
call
movsb
add
lret
cmp
je
bound
and
adc
xchg
insl
inc
pop
xchg
sbb
cmp
js
imul
subl
cmp
mov
adcl
mov
addl
ror
xchg
pop
push
mov
pop
sbb
push
cmp
xor
pmaxsw
sub
repz
out
call
adc
xor
imul
adc
push
adc
ficompl
xchg
push
mov
inc
lret
or
cltd
rolb
or
repnz
adc
mov
cld
mov
nop
inc
and
cmp
cmp
sar
pop
jb
sbb
inc
mov
xor
push
inc
call
cmp
inc
pop
inc
fcomp
xchg
push
ss
lcall
fldl
addb
rcr
xor
lods
or
sti
xor
dec
or
jne
push
adc
dec
mov
jmp
cmp
push
inc
jmp
dec
jmp
or
jecxz
fimuls
inc
add
mov
lods
test
add
inc
pop
je
pop
inc
test
call
add
and
and
or
or
mov
std
mov
add
js
ret
xchg
xorb
punpckhwd
and
xchg
cmp
leave
or
sbb
inc
cmp
add
xor
int
pop
add
pop
sbb
adc
push
popf
pop
pop
mov
cwtl
mov
je
add
arpl
lret
mov
loopne
add
popa
js
sarb
push
fsubl
inc
pop
mov
lock
mov
call
xor
hlt
push
cmp
inc
shl
test
pop
jb
jne
lods
sarb
lret
fisubrs
testl
push
push
or
inc
jecxz
lret
cwtl
testl
jg
rolb
add
enter
jne
cwtl
loopne
push
adc
push
add
ret
push
sar
inc
push
adc
sbb
jl
call
sarl
roll
or
pop
pop
int
push
hlt
dec
fisttpl
fcomip
inc
fistl
out
cmp
pop
test
mov
xlat
nop
mov
movsb
sbb
dec
sbb
sbb
dec
arpl
bound
mov
call
add
filds
cmc
add
in
sub
or
add
pop
xor
xchg
mov
xchg
ds
inc
cmp
in
push
cltd
nop
orl
dec
push
das
out
or
push
das
jp
lock
mov
dec
orl
add
das
mov
and
and
mov
push
xchg
les
mov
mov
mov
jne
aaa
add
mov
add
ljmp
iret
mov
sbb
js
andb
shrb
or
lods
test
aas
xchg
lret
sarb
sbb
push
push
adc
xchg
popf
xlat
cmc
fists
imul
ret
push
sbb
mov
mov
push
rclb
inc
fisttpl
xor
sbb
pop
data16
rolb
test
jno
cmp
and
mov
or
daa
add
inc
xorl
mov
or
push
lea
cs
fcoml
lock
in
mov
jmp
dec
adc
push
xor
ds
jmp
je
test
inc
xor
lds
mov
sbb
pop
sbb
insl
pop
dec
lea
mov
stos
adc
push
int3
jae
sbb
and
xor
add
or
jo
sarl
mov
add
or
push
and
push
ja
dec
aas
adc
or
jmp
in
and
inc
mov
fisttpl
inc
push
jg
add
dec
out
sbbb
push
imul
shlb
pop
repnz
ljmp
jne
js
stos
or
inc
popf
mov
adcb
pop
cmovb
inc
add
shrb
jno
stos
pop
or
scas
or
nop
xchg
shll
push
mov
add
rclb
sub
daa
daa
mov
stos
mov
movsb
pushf
dec
or
mov
sbbl
nop
xchg
sub
add
stos
movsb
fsubp
sahf
adc
sub
jns
or
outsl
shll
or
jns
and
add
pop
or
push
add
jmp
nop
inc
scas
inc
loopne
sahf
push
inc
push
xor
add
push
sbb
fsubl
movl
push
ljmp
push
xor
add
mov
xchg
insl
xor
mov
xor
or
add
push
sub
inc
add
or
shrb
add
add
cmpsb
sbb
nop
and
mov
pushf
clc
leave
cs
movsb
jns
add
mov
fistpll
sub
jno
sbb
add
add
sbb
lea
arpl
inc
sbb
fisttpll
loope
rclb
mov
lock
nop
xchg
push
mov
in
jo
pushf
pop
dec
mov
cmp
pop
push
ret
sbb
leave
inc
inc
inc
mov
lret
loopne
pop
and
sbb
jbe
rorb
shl
xor
pop
lods
mov
pop
std
fwait
pop
xchg
add
push
cmp
and
in
and
dec
sub
rorb
cmp
and
push
imul
in
add
sub
jo
test
add
jo
test
cmp
test
lods
add
sti
pusha
sub
cmp
pop
and
jmp
addl
xor
add
add
test
and
outsb
lea
movhps
xchg
imul
dec
add
xor
or
in
dec
call
jecxz
loope
loope
mov
inc
inc
outsb
loop
push
pop
or
dec
stos
cmp
xor
dec
sub
jne
cmp
push
call
push
mov
mov
out
test
and
call
mov
mov
adc
adc
int
outsb
hlt
xchg
outsl
test
test
jbe
stc
mov
les
pop
add
push
adc
faddl
jnp
inc
mov
mov
xlat
inc
rolb
je
call
mov
outsl
mov
dec
adc
xor
lds
push
add
mov
ficomps
adc
test
mov
ret
mov
or
push
add
push
cwtl
addr16
add
adc
addr16
push
loopne
mov
push
call
push
popa
addr16
mov
leave
shll
mov
pop
add
mov
sub
cmpsl
dec
or
xor
sub
es
xor
mov
dec
cmpsl
cmp
int
mov
mov
pop
test
mov
push
mov
mov
jmp
adc
xchg
adc
mov
push
dec
push
adc
inc
push
mov
daa
jl
fldenv
sbb
or
icebp
dec
add
aaa
fnstcw
pop
pusha
inc
addr16
sub
fistl
push
movl
dec
dec
pop
adc
mov
inc
sbb
dec
xchg
jnp
jmp
cmp
mov
fcmovnbe
jnp
dec
and
dec
inc
or
mov
aam
sbb
inc
push
scas
out
mov
dec
dec
hlt
push
insl
dec
dec
xchg
and
fs
inc
sub
mov
sbb
mov
test
pop
jns
xchg
nop
xchg
cmpsl
jns
push
stos
dec
call
and
int3
jns
enter
stos
cmp
mov
dec
mov
mov
push
popa
roll
jns
xchg
nop
xor
xchg
adc
mov
push
call
push
mov
pop
push
and
add
mov
adc
push
cmp
sub
int
lods
rorb
xor
test
jns
movsb
ljmp
lds
inc
push
mov
es
xor
call
mov
int
shlb
imul
inc
mov
push
test
push
inc
jns
int3
mov
imul
jp
push
jns
std
xor
xchg
idivb
adc
inc
inc
inc
ja
jns
adc
fcomi
dec
loop
sub
jp
push
inc
inc
jns
inc
dec
inc
inc
inc
jns
xchg
rclb
ret
test
add
jns
push
xchg
stos
dec
jns
and
or
mov
jns
and
hlt
sbb
pop
add
and
adc
push
push
xchg
rclb
pusha
mov
inc
add
push
stos
adc
jns
add
and
jns
adc
stos
and
dec
call
dec
enter
call
mov
adc
outsb
stos
dec
jns
sbb
out
test
jns
jg
cmpsl
subl
lea
fcom
xchg
sbb
add
push
popf
mov
sbb
ja
adc
call
shrl
mov
sub
es
int3
lds
adc
popa
aam
dec
call
mov
outsb
out
scas
and
adc
or
jbe
or
ficomps
jecxz
mov
mov
and
pusha
or
sbb
push
ret
adc
daa
xchg
nop
cmp
enter
or
dec
sbb
mov
mov
dec
xchg
fsubp
add
mov
fs
call
sub
sbb
pop
sub
pop
sbb
nop
dec
pop
test
mov
cmp
mov
cmp
adcb
pop
and
cmp
jp
sub
mov
adcb
fs
sub
pop
fsts
pop
clc
cmp
xchg
pop
xchg
pop
pop
dec
inc
cmpsl
mov
cwtl
cmp
inc
and
mov
and
dec
xchg
repz
loope
push
and
jge
xor
xchg
pop
sbb
pop
fiaddl
pop
bound
jno
pop
cmp
or
inc
and
xchg
push
and
jae
dec
dec
push
das
mov
mov
dec
cs
aas
cmp
push
push
outsl
jns
test
das
pop
repnz
pop
dec
xor
enter
lahf
nop
dec
cs
and
mov
subb
inc
push
das
pop
subl
and
ss
sub
dec
sti
mov
xchg
cmc
jns
xchg
test
inc
call
call
dec
das
jle
pushl
and
and
dec
call
addb
rorb
mov
cmp
mov
cmp
cltd
xchg
fidivs
andl
adc
lret
pop
push
sub
add
fnop
pop
and
xchg
or
pop
adc
in
adc
jo
leave
jle
add
inc
ss
nop
mov
insb
call
and
scas
mov
enter
sub
enter
fs
dec
repnz
sbb
pop
movups
and
pop
jmp
inc
ss
int
add
insb
enter
or
call
push
jns
sbb
or
push
add
mov
inc
stos
testl
push
enter
imul
pop
in
test
sub
mov
andl
push
lock
cwtl
nop
add
inc
push
in
push
inc
adc
stos
xor
sbb
es
push
ret
imul
mov
mov
sub
sub
cmp
outsl
push
cwtl
push
aas
sub
ret
negb
vorps
adc
test
inc
popa
inc
push
inc
insb
add
add
push
push
sbb
bound
call
movsl
xor
sub
push
dec
mov
cwtl
shrb
push
push
mov
adc
adc
mov
dec
push
cmovo
or
push
aad
je
flds
push
mov
xor
push
popa
inc
imull
popa
inc
or
cwtl
sarb
push
xor
imul
mov
aam
or
inc
or
aas
shl
mov
aaa
unpcklps
das
sar
push
fistps
call
mov
adc
xchg
das
pop
sub
or
add
call
stc
jb
call
cmp
loopne
call
je
int
inc
and
fucomip
lds
dec
call
movsb
in
xchg
mov
movsl
pop
call
mov
call
push
jne
xchg
das
pop
jo
insl
je
gs
pop
inc
inc
inc
out
call
cs
jbe
adc
cmp
xor
push
mov
mov
adc
push
pop
cli
lret
movsb
dec
pop
sub
cs
out
unpckhps
ret
les
enter
lret
movsl
mov
mov
push
mov
loopne
cs
dec
push
dec
in
mov
mov
xor
es
iret
dec
in
sbb
adc
add
add
leave
or
leave
movsl
mov
xor
adc
lret
sbb
sbb
movsl
jb
mov
stos
and
pop
sub
mov
jle
jae
jb
pop
sub
pop
inc
lret
movsl
push
inc
gs
dec
je
outsb
nop
cmp
xor
push
adc
mov
add
xchg
pop
add
and
std
call
cs
inc
outsb
and
or
xor
sahf
cld
pushf
and
xchg
sar
push
call
mov
adc
js
daa
int
push
adc
inc
sbb
mov
enter
push
and
int
mov
cmp
call
enter
test
inc
lods
daa
add
cli
mov
leave
popf
xor
dec
mov
and
shrb
outsb
inc
arpl
shrl
mov
adc
xor
mov
add
cmp
add
adc
lcall
push
xchg
push
sub
add
mov
sub
pop
pop
mov
daa
dec
or
imul
movsl
adc
stos
mov
adc
and
sahf
jmp
adc
stos
mov
sub
movsb
inc
stos
aaa
test
nop
out
dec
aaa
and
shll
xor
aaa
dec
push
adc
rcr
aaa
or
sbb
push
add
pushf
cs
pop
adc
push
mov
cld
or
in
scas
sbb
inc
call
stos
mov
test
data16
sbb
cmpl
das
inc
mov
or
movsb
inc
push
inc
sub
popa
fsubrp
addb
pop
adc
jp
ret
push
mov
xchg
and
mov
popf
dec
push
pop
aad
enter
mov
aad
orw
mov
pop
inc
add
sub
and
aad
or
inc
mov
sbb
pop
mov
aad
mov
cmp
push
stc
mov
mov
sub
or
push
pop
push
or
pop
or
push
rclb
aad
enter
push
or
lea
aad
cs
mov
enter
aad
adc
or
pusha
aad
mov
jp
cmpl
inc
push
rclb
xchg
or
and
test
xor
ret
lea
adc
addr16
stos
cmpsl
cwtl
call
mov
sbb
mov
outsb
sbb
cmc
mov
sub
out
push
mov
fld1
inc
cmp
push
sbb
fsubrl
rorl
jg
fsubrs
xchg
sbb
xchg
test
cmp
cli
sbb
je
ja
push
in
push
pop
mov
sbb
push
cmpsb
xchg
adc
mov
xchg
adc
sub
mov
adc
or
lods
pushf
adc
fwait
and
sub
xchg
sub
test
adc
jo
push
call
outsb
test
mov
notb
dec
push
ret
and
xorb
cli
adc
adc
or
mov
cmp
sub
adc
xor
out
sub
xor
xor
cs
out
mov
inc
adcl
add
bnd
jns
jmp
push
or
xchg
sub
rclb
mov
rol
xor
adc
dec
mov
test
pop
xchg
sbb
sbb
inc
mov
sub
push
push
cwtl
lcall
out
shll
adc
and
adc
or
xchg
jns
call
aaa
adc
xchg
adc
dec
ja
cmp
and
cmp
cmp
inc
pop
add
adc
sbb
xchg
shlb
cmp
cmp
js
jmp
jno
cmp
xchg
lods
inc
clc
or
push
ret
gs
inc
int
nop
push
mov
pop
rcrb
nop
inc
shlb
es
add
ja
add
pop
inc
dec
sahf
test
mov
push
push
fs
inc
mov
jmp
adc
imul
leave
andb
adc
or
nop
or
and
sub
pusha
dec
lcall
push
add
loopne
or
xor
jo
inc
push
mov
add
add
dec
repz
push
add
push
or
inc
xchg
out
push
shr
or
pop
int
and
adc
mov
gs
lea
jae
in
lods
mov
add
jnp
dec
push
mov
push
aam
call
in
jno
jecxz
xor
js
and
call
mov
xchg
loop
rcl
add
pop
jno
aaa
add
and
je
aaa
nop
cmpsb
sub
cwtl
adc
sbb
mov
pop
push
sub
inc
mov
cmpsl
fldl
movsl
loopne
fs
gs
mov
jne
nop
push
aaa
imul
xor
roll
cmp
xchg
cmp
add
mov
aaa
or
cmp
aam
mov
add
aaa
imul
arpl
test
pop
or
stc
push
cld
add
xchg
add
leave
sbb
negb
leave
subb
cld
jb
cmpsl
mov
out
push
add
inc
iret
dec
inc
sub
push
iret
roll
push
mov
inc
add
test
add
iret
xor
out
dec
inc
and
inc
call
mov
mov
iret
push
sbb
pushf
mov
call
addr16
mov
icebp
sbb
fisttpll
inc
aaa
and
outsl
inc
jp
addr16
loopne
movsb
jmp
rolb
adc
outsb
loopnew
mov
sbb
cwtl
incb
and
je
fwait
outsb
inc
jp
adc
and
mov
frstor
sbb
dec
xor
das
xor
les
fsubl
enter
movsb
xor
adc
jno
and
push
push
pop
pop
scas
push
add
pop
rolb
fs
sbb
pop
sahf
cmp
loop
dec
sbb
addl
rorb
sbb
xchg
xchg
push
pop
rclb
push
movsb
and
nop
mov
pop
dec
xchg
sbb
popa
inc
testb
pop
shll
pop
inc
imul
push
pop
sbb
mov
cmpsl
sahf
int3
mov
cli
push
pop
adc
pushf
inc
in
mov
cmpsl
inc
adc
mov
mov
or
call
outsb
dec
push
jns
adc
shrb
ljmp
jg
push
mov
pop
cmp
and
push
rclb
repz
movsb
xchg
dec
divl
jmp
imul
dec
xor
fst
cmp
push
xor
mov
mov
pop
and
or
faddl
lods
mov
mov
fs
mov
or
pop
xchg
mov
push
test
and
or
and
repz
and
xor
inc
aad
mov
xchg
cmp
repz
sahf
punpckldq
imul
adc
push
adc
sbb
jmp
hlt
jecxz
nop
inc
ret
mov
cmp
jg
xor
nop
mov
scas
or
test
sbb
arpl
sub
sub
mov
or
pop
je
push
call
aas
and
or
dec
inc
cmpsb
xor
dec
leave
cmp
enter
or
mov
and
push
cmpsl
insb
movsl
hlt
adc
or
cld
sbb
mov
sub
or
adc
adc
mov
or
ljmp
fldenv
adcb
jae
sub
addl
jb
test
push
sub
sub
movsb
arpl
fwait
repz
and
push
adc
divb
repnz
xlat
fwait
push
jnp
cltd
imul
adc
clc
dec
mov
bound
jb
adc
xchg
fwait
mov
enter
adc
jb
inc
dec
jae
insl
adc
sbb
xor
jnp
push
sbb
pop
cmp
lock
adc
inc
call
sti
mov
in
xchg
adc
push
aam
pusha
xlat
ret
pop
inc
push
sub
icebp
in
push
or
mov
xchg
nop
xchg
and
or
bound
lret
inc
mov
push
xchg
cmp
sbb
add
and
push
cmp
cltd
sbb
jb
cmpsb
dec
mov
cmp
cltd
inc
bound
rclb
dec
and
out
cmp
adcl
mov
adc
adc
clc
stos
cs
jmp
dec
int3
or
adc
adc
sbb
fwait
dec
pop
add
ror
pop
iret
repz
add
sbb
add
or
sbb
ret
jns
out
mov
push
sarl
sub
or
sbb
mov
cmp
mov
pushf
pop
push
lods
out
jns
out
mov
inc
push
sti
sahf
out
push
sub
push
nop
movsb
push
push
iret
repz
xchg
jl
push
inc
ss
cmp
push
cmp
cmp
sbb
repnz
sahf
out
sahf
fmulp
mov
out
mov
pop
into
sbb
incb
add
cmpsl
stc
cmp
es
loop
sbb
sahf
aam
mov
iret
sarl
jbe
pushf
scas
imul
cld
or
and
jns
out
inc
pop
data16
out
sahf
test
negl
decb
ss
adc
js
inc
push
shr
jb
idivb
outsb
jle
sahf
mov
daa
shlb
loop
clc
adc
sub
cmp
aaa
je
out
pop
out
push
push
cmp
adc
popf
out
adc
jbe
fwait
insl
aad
add
push
cwtl
cmpsl
insl
mov
add
das
out
iret
dec
test
cltd
aad
add
repz
jbe
push
scas
test
sub
loope
dec
push
ret
inc
lret
add
sbb
pop
jo
mov
imul
outsl
xor
inc
push
jge
or
dec
push
je
pop
jo
rcrl
les
pusha
dec
push
outsl
push
push
ja
sub
adc
sbbb
dec
out
sub
xlat
leave
aad
mov
xor
fistpl
lret
push
insb
jae
outsl
ss
xor
bound
test
jecxz
ret
push
or
xor
ja
insl
mov
or
cmp
jnp
outsb
aas
das
bound
rorb
imul
add
mov
dec
adc
xchg
mov
pop
clc
outsl
inc
mov
pop
pop
dec
and
fcoml
inc
ret
push
pcmpeqd
and
imul
and
dec
sbb
or
sub
xor
xchg
push
add
sbb
fsubp
es
cmp
mov
jg
loopne
inc
pop
sarl
ret
je
pop
dec
mov
mov
xchg
jg
das
push
dec
inc
push
push
inc
push
inc
pop
inc
outsl
outsl
xor
pop
rorb
out
xchg
jb
inc
mov
dec
sbb
mov
xor
jmp
lods
pop
dec
imul
or
pop
inc
jne
outsb
je
insl
ret
sbbl
mov
je
ss
inc
xor
sub
sub
xor
cmp
sub
inc
inc
xor
xor
xor
jge
sti
mov
xor
inc
xor
xor
ss
xor
cmp
xchg
aas
fdivl
cmp
xor
clc
inc
inc
xor
mov
aam
das
pusha
pop
fs
jo
jne
test
push
jo
or
clc
addl
cmp
xor
aaa
fsubrs
push
xor
or
push
and
inc
aaa
or
pmaxub
cmp
xor
dec
roll
inc
jl,pt
push
arpl
ret
scas
ljmp
push
dec
and
cmp
ss
jbe
loopne
pushf
xor
add
sbb
mov
dec
and
in
loope
or
orb
dec
hlt
imul
fcoms
pop
push
mov
jae
inc
push
inc
out
adc
push
sub
jns
out
out
cmp
in
outsb
fs
inc
mov
lods
sahf
add
pshufw
outsb
lods
and
hlt
push
push
aam
fisttps
jnp
or
insb
adc
test
ret
xchg
pop
and
outsl
xor
imul
push
ss
fs
je
push
push
jns
xor
and
inc
cmp
add
cmpsl
enter
sbb
xchg
pop
mov
jne
ss
pop
popf
mov
pusha
push
inc
cs
mov
add
std
inc
arpl
insb
insb
mov
xchg
and
outsb
sub
loop
lret
mov
and
jle
or
pop
add
insb
addl
enter
xorl
add
dec
mov
jg
jp
mov
stos
inc
out
jmp
gs
push
and
inc
mov
xchg
and
inc
push
aam
pop
dec
imul
bound
loopne
jns
cmp
je
dec
fs
sub
lods
pop
imul
mov
push
popa
fs
jo
fiaddl
rclb
push
ret
dec
inc
aaa
dec
movsb
out
shll
xchg
jmp
outsl
push
pop
int3
jmp
scas
arpl
inc
cs
push
push
push
add
dec
mov
ja
shlb
push
fildll
push
daa
fwait
mov
inc
outsb
popa
mov
add
sbb
fmull
outsb
pop
add
add
and
mov
pop
inc
xchg
sub
fsubl
andl
arpl
adc
test
xchg
mov
push
xchg
xorb
mov
fsubrs
out
pushf
add
sbb
push
jg
adc
adc
mov
sub
xor
add
push
xor
cmpsl
addr16
fadds
adc
int
jns
orb
or
add
sarb
push
adc
repz
dec
xchg
adc
push
sbb
out
lcall
sbb
cmp
call
das
push
pop
out
scas
stc
nop
cld
and
cli
mov
push
jns
stc
jp
jns
out
cld
fdivr
mov
cmpsl
mov
mov
dec
or
fists
sbb
ds
mov
xor
push
dec
sbb
mov
xor
inc
adc
dec
sbb
jns
cmp
lds
int3
sub
add
adc
jns
cmpsl
stc
push
cld
or
in
int3
jns
out
mov
out
shlb
push
xchg
call
cmp
mov
mov
repz
push
jns
out
pop
push
push
dec
dec
cmp
jns
inc
inc
cmp
xor
repz
repz
and
sbb
repz
sbb
or
add
cmpsl
stc
cmp
cld
or
hlt
call
enter
jns
out
jo
xor
iret
repz
lock
int3
mov
insb
inc
ds
repz
sbb
cld
push
jns
out
fcom
les
js
sub
aam
iret
repz
mov
cld
out
outsl
xchg
call
cwtl
jno
inc
pushf
jl
inc
es
xor
add
push
aas
pop
imul
mov
mov
inc
sarb
add
dec
push
xor
sub
push
sub
inc
inc
add
adc
and
mov
xor
divb
call
inc
bound
adcb
inc
insl
scas
and
sahf
add
push
mov
sbb
mov
inc
mov
loop
and
aas
and
mov
sub
dec
and
cmpsb
andl
in
enter
jmp
sbb
stos
and
outsb
jo
pop
data16
adc
pop
jbe
and
mov
js
shrb
mov
iret
out
mov
andb
rolb
ret
jns
inc
push
mov
push
pop
push
inc
pop
loopne
inc
push
xor
xchg
cld
inc
inc
mov
jnp
out
inc
cmp
cs
lock
jg
pop
jne
pop
stc
ret
push
shlb
dec
ret
jne
imul
test
cld
and
mov
arpl
imul
pop
jb
pop
push
gs
or
jo,pn
bound
cmp
sub
daa
inc
shrl
push
push
insb
das
inc
dec
pop
mov
iret
outsl
jl
add
cmpsl
ja
lahf
add
js
jg,pn
das
loopne
xchg
es
lds
loopne
out
or
push
addr16
mov
xor
sub
ret
xor
xchg
inc
sub
aas
pop
xor
das
jg
fcoms
das
cltd
nop
cmp
mov
ss
mov
mov
sete
int3
or
pop
data16
ljmp
add
mov
jns
pop
rcr
cmpsl
nop
pop
or
push
lcall
pushf
setl
lret
add
les
mov
or
stos
lea
popf
jl
in
push
jno
rcll
lahf
jg
pushf
push
loop
dec
insb
xchg
mov
test
mov
adc
sbb
aas
jo
enter
pop
outsl
jb
cmp
iret
fcmovnbe
fwait
adc
inc
mov
aas
jbe
in
fwait
in
push
sbb
mov
push
aam
insb
adc
sub
pop
loopne
dec
lea
mov
adc
sarl
sahf
loopne
daa
lock
ja
dec
mov
outsb
pop
and
insb
adc
push
pusha
cmp
insl
dec
pop
add
fidivl
popa
inc
je
dec
imul
divl
xor
add
insb
push
mov
daa
and
cmp
dec
dec
add
push
mov
dec
jae
outsl
ja
xor
xchg
and
push
jle
jb
nop
mov
sub
push
add
faddl
movsb
and
and
add
fiaddl
adc
daa
outsb
outsl
dec
jmp
inc
lods
mov
dec
and
ljmp
mov
pop
xor
add
xchg
mov
dec
push
jb
mov
adc
inc
add
insl
jo
js
scas
mov
push
add
negl
xchg
add
push
mov
add
jae
add
add
adc
mov
push
push
insb
or
inc
gs
popa
adc
addr16
out
adc
pop
pusha
das
sub
push
inc
sbb
into
sub
mov
add
push
lds
add
and
add
es
bound
dec
sub
push
mov
dec
or
cmp
push
jo
jb
jns
ficoml
and
aad
sub
int3
sahf
add
lods
cmpsl
xor
push
addr16
sbb
outsb
sbb
push
into
xchg
aaa
adc
test
popf
cmpl
mov
inc
and
into
adc
cltd
mov
fisubl
jge
xchg
mov
testl
mov
push
mov
cmp
inc
add
fbld
jne
gs
inc
or
inc
outsb
pop
addr16
subb
jno
and
es
rclb
inc
jecxz
and
and
push
nop
rorb
pushf
pop
ds
fs
sbb
push
dec
sbb
jecxz
xor
dec
icebp
es
push
inc
cs
gs
push
adc
pop
bound
jle
and
push
adc
push
cmp
pop
adc
and
je
lahf
outsb
xor
cmp
dec
ret
inc
pop
sbb
sarl
inc
xchg
das
pop
outsl
mov
pop
lods
js
shrb
aad
xchg
stc
add
lcall
orb
mov
mov
push
dec
dec
dec
pop
add
mov
arpl
fs
lds
cmp
and
sub
sub
push
outsl
cmp
xchg
add
roll
sbb
fs
jmp
sbb
push
mov
xor
add
lock
lret
out
ffreep
add
mov
sbb
out
jb
mov
popa
addl
add
fldenv
inc
jmp
je
ja
enter
inc
js
aaa
dec
imul
pop
or
aas
inc
cwtl
inc
dec
lret
cmc
lods
sbb
or
push
and
adc
enter
xlat
add
xor
inc
and
mov
stos
add
jg
iret
add
jo
add
add
add
push
xor
pop
mov
jo
sub
add
ds
dec
push
int3
or
pusha
push
jo
jno
cmp
lret
add
scas
cmpsl
jae
and
pop
roll
in
js
and
xchg
popa
ljmp
dec
imul
add
iret
pop
sub
int
xchg
into
insl
push
sub
cmpsl
add
jmp
push
mov
imul
push
push
and
adc
mov
cld
lods
pop
loope
inc
jae
adc
add
je
insb
inc
add
ja
add
or
pop
xor
and
loopne
xor
imul
bound
out
into
insb
sbb
jae
push
add
and
lods
out
inc
push
out
pusha
sbb
imul
js
lret
fbld
pop
xor
cli
int3
ficomps
mov
push
popa
scas
push
popa
shrb
and
fiaddl
aam
push
dec
mov
cld
jecxz
xchg
pushf
add
inc
push
pop
in
aam
xor
fists
rol
mov
add
or
sti
pop
pop
push
insb
push
sbbb
scas
inc
sbb
punpcklbw
fucom
jns
iret
icebp
pop
and
add
xchg
mov
js
mov
push
nop
inc
test
jmp
pop
xlat
pop
add
mov
add
add
in
aam
inc
inc
cmp
inc
xor
add
fsubrl
xor
pop
ss
pusha
mov
cmp
hlt
movsl
adc
ja
pop
and
mov
or
and
push
add
push
inc
sub
dec
push
enter
add
les
rcrb
pop
xchg
sbb
sahf
out
or
add
clc
out
repz
shl
call
repz
mov
test
sahf
out
movsb
pop
mov
jns
out
mov
xchg
push
inc
cmp
iret
repz
and
sbb
sub
cmpsl
stc
cld
in
lock
jnp
daa
call
ror
repz
repz
cmp
je
push
cmp
sub
iret
repz
sbb
or
jns
cmpsl
stc
cld
in
hlt
in
in
fwait
jge
out
mov
xchg
push
sahf
out
fimuls
inc
sub
ds
repz
sbb
loopne
push
and
es
adc
pop
jo
or
add
jmp
dec
xor
mov
mov
push
jnp
jno
mov
add
hlt
out
push
xchg
xchg
not
lock
sub
or
mov
cmp
aaa
mov
and
unpckhps
add
jp
lret
jbe
add
adc
test
inc
dec
pop
inc
mov
jg
fs
inc
dec
pop
pusha
addb
mov
mov
dec
rorb
xor
xchg
adc
scas
push
push
movsl
cmc
aaa
dec
adc
lea
and
lret
das
xorb
xchg
mov
push
mov
push
pop
jo
add
in
adc
rolb
pop
mov
test
xchg
mov
inc
outsb
sub
test
jae
insl
xor
aam
insl
sub
outsl
and
jbe
and
xlat
clc
mov
xor
xor
ds
je
add
mov
mov
add
add
outsl
jb
push
pop
and
fimull
int3
repz
imul
sbb
cmp
ja
jo
dec
sub
and
push
or
adc
add
pop
jne
es
in
imul
into
dec
jns
sti
outsb
add
add
ja
xchg
sbb
inc
add
inc
pop
xchg
aam
pop
adc
fcmovbe
pushl
xor
sbb
bound
loopne
sbb
das
xor
xorb
xor
xor
xor
pushl
xor
xor
movsb
xor
xor
xor
xor
xor
xor
xor
xor
xor
pushl
xor
dec
xor
xchg
shll
inc
ss
ss
pushl
es
dec
aaa
push
aaa
mov
iret
aaa
call
aaa
adc
dec
cmp
pushl
cmpb
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
data16
decl
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
nop
cmp
ret
add
push
lock
idivl
or
incl
xchg
add
adc
and
dec
xor
xor
outsb
xor
jg
pushl
popf
xor
xor
xor
xor
xor
xor
mov
dec
xor
xor
xor
xor
xor
out
xor
xor
addl
mov
mov
mov
les
icebp
fdivs
call
xor
jno
pushl
cltd
ss
ss
ss
aaa
sbb
jno
mov
aaa
loopne
add
sbb
jmp
or
pop
cmp
outsb
cmp
cmp
cmp
cmp
or
cmp
cmp
cmp
push
cmp
jl
cmpl
mov
inc
cmp
push
adc
cmp
cmp
cmp
cmp
pop
cmp
imul
cmp
mov
pushf
cmp
adc
ds
jo,pt
test
mov
aas
adc
xor
inc
aas
popa
aas
cmpl
aas
mov
les
into
aas
out
sbb
repz
andl
xor
xor
xor
xor
jl
mov
mov
xor
xor
pushl
xor
dec
xor
insb
xor
mov
mov
mov
xor
xor
xor
xor
xor
xor
lcall
inc
inc
xor
pop
xor
jo
xchg
xor
xor
lcall
inc
xor
xor
xor
xor
xor
xor
push
aaa
jg
or
aaa
clc
loop
cmp
cmp
cmp
mov
mov
cmp
cmp
cmp
cmp
cmp
mov
xchg
cmp
cmp
cmp
cmp
test
loopne
xchg
aas
inc
aas
pop
aas
ja
pusha
jmp
inc
inc
pop
push
or
cmp
pop
xor
push
insb
xor
cltd
xor
xor
xor
xor
xor
xor
inc
incl
push
xor
pop
xor
lcall
clc
cld
xor
xor
test
mov
mov
nop
xor
out
in
xor
stc
mov
pop
scas
clc
xor
cmp
pop
mov
mov
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
mov
mov
jp
cmp
cmp
std
cmp
cmp
lds
mov
push
lcall
das
cmp
push
ds
aas
jmp
fcomip
xor
xor
mov
ss
ss
xchg
cmp
cmp
cmp
iret
cmp
mov
cmp
cmp
cmp
cmp
cmp
cmp
dec
adc
lcall
cmp
dec
aas
decl
js
cmpb
aas
sarl
aas
in
out
out
jo
aas
mov
xchg
xor
xor
pop
mov
jmp
mov
scas
xor
xor
xor
loop
decl
xor
xor
xor
mov
xor
xor
scas
jg
std
xor
cmpsb
data16
ss
add
or
aaa
and
aaa
pop
loopne
aaa
dec
aaa
dec
aaa
push
aaa
pop
aaa
imul
xchg
mov
outsl
clc
pushl
xchg
aaa
mov
aaa
xor
cmp
xchg
outsl
cmp
sbb
cmp
push
mov
cmp
cmp
sbb
push
cmp
inc
cmp
jmp
outsl
add
push
cmp
sbb
cmp
cli
jmp
incl
stos
cmp
cmp
or
cmp
cmp
cmp
cmp
cmp
lock
xor
bnd
adc
sub
xor
cmp
fists
cmp
dec
cmp
push
cmp
insl
cmp
js
cmpl
mov
cmp
dec
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
sbb
cmp
inc
cmp
pop
cmp
mov
cltd
cmp
cmp
jg
cwtl
ds
ds
jecxz,pt
out
ds
das
aas
cmp
je
sahf
jo
jge
mov
movsl
aas
stos
aas
mov
mov
rolb
outsl
push
xor
insl
stos
lcall
dec
xchg
les
fidivl
in
or
call
pushl
adc
and
sub
cmp
jb
mov
xor
xor
xor
xor
xor
xor
xor
xor
mov
jl
cmpsl
xor
xor
cli
push
cld
aaa
scas
jno
xchg
xor
xor
xor
cmpsb
pushl
xor
out
cmpsb
xor
cmpsb
xor
xorb
aaa
fwait
sahf
cmpsb
rcl
push
mov
bound
scas
cmp
mov
cmp
fdivrl
aaa
cmp
mov
cmp
or
xor
dec
cmp
cmp
cmp
cmp
cmp
push
nop
sbb
xor
or
xor
lock
pushl
cmp
bound
data16
push
outsb
aaa
jb
jbe
xchg
ja
loope
js
jge
cmp
cmp
cmp
cmp
cmp
cmp
jle
test
jbe
cmp
sbb
ds
xor
xchg
aas
push
mov
insl
xor
sbb
xor
xor
xor
xor
xor
jl
mov
cmpsb
cltd
aaa
mov
ret
incl
jl
aaa
jmp
repnz
or
cmp
pop
cmp
jge
mov
cmpsl
fsubrp
cmp
cmp
jbe
xchg
cmp
cmp
cmp
idiv
jg
mov
and
cmp
cmp
fdivrs
push
aas
jne
incl
bound
jg
mov
fwait
xor
xor
xor
xor
dec
or
repnz
ret
sub
xor
xor
divl
pop
xor
fdivr
inc
lcall
loop
ss
dec
ss
outsb
notb
ss
cli
aaa
cld
ss
and
cmp
cmp
cmp
mov
pop
mov
sbb
cmp
jmp
push
inc
pop
push
imul
cmp
test
mov
push
jge
ret
cmp
dec
cmp
cmp
js
jg
cmp
cmp
cmp
cmp
jp
mov
cmp
cmp
pop
sarb
push
loopne
push
inc
cmp
orb
pop
scas
jg
and
push
cmpb
cmpsl
ds
ds
ret
idivl
add
sbb
addr16
inc
inc
add
lds
call
mov
push
xor
aad
out
incl
and
xor
xor
mov
xor
push
ljmp
add
xor
ds
dec
aaa
pop
aaa
js
mov
stos
cli
das
sar
fidivl
out
in
aaa
cli
aaa
mov
cmp
mov
add
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
sub
cmp
cmp
cmp
adc
jbe
cmpl
cmp
cmp
loop
aas
adc
and
pusha
aas
cmpb
aas
fdivrl
loop
out
out
das
jle
rcrl
rclb
sub
jne
adc
sar
filds
xor
jg
xchg
xor
xor
xor
pusha
rcll
js
xor
xor
ljmp
jbe
loopne
adc
adc
sbb
sbb
loope
ljmp
xor
nop
cmp
mov
cmp
cmp
cmp
cmp
cmp
mov
push
lock
out
xor
decl
or
aaa
into
cmp
inc
xor
xor
xor
jl
mov
mov
movsb
xor
les
int3
mov
mov
xor
xor
xor
jg
add
cmp
sub
sub
xor
cmp
inc
cmp
loope
pop
cld
cmp
cmp
xor
and
scas
push
fidivs
cmp
cmp
inc
add
mov
mov
enter
cli
add
aam
fdivrs
fdivl
lock
stos
scas
scas
dec
cld
push
add
or
adc
add
inc
stos
sbb
and
and
sub
sub
xor
icebp
pop
fidivrs
inc
cmp
cmp
pop
cmp
cld
jg
cmp
insb
cmp
je
jl
cmpb
pop
push
cmp
lcall
mov
aas
inc
mov
push
aas
push
aas
ret
filds
aas
lods
aas
mov
shrb
aas
fdivrs
loopne
clc
jbe
jmp
or
xor
xchg
xor
jg
sub
xor
xor
inc
xor
xor
cwtl
xor
or
xor
fsubl
mov
js
mov
jb
int
cld
xor
pusha
xor
lahf
jle
jge
or
or
ss
sahf
int3
ss
jg
call
ss
fdivs
fdivl
loopne
in
call
ss
ss
add
add
call
aaa
or
adc
adc
aaa
sbb
and
and
sub
sub
aas
cli
lcall
aaa
cmp
cmp
inc
aaa
inc
aaa
dec
jb
aaa
push
aaa
pop
aaa
pop
aaa
pusha
aaa
jo
jl
mov
xorb
aaa
mov
nop
aaa
xchg
aaa
cwtl
ret
dec
into
mov
dec
mov
mov
clc
ljmp
xor
enter
shlb
aam
fdivs
fcompl
in
jno
sbb
out
aaa
hlt
xor
aaa
subb
or
adc
adc
sbb
cmp
fdivrl
call
xor
clc
cmp
pop
sahf
jl
cmpsl
lcall
cmp
cmp
sub
cmp
cmp
cmp
cmp
push
clc
insb
cmp
jl
test
mov
cmp
movsb
cmp
mov
mov
mov
cmp
inc
xchg
test
lods
test
in
jg
or
repnz
movsb
fs
lret
das
jle
pop
push
aaa
cmpsb
punpcklbw
icebp
push
fnstenv
aaa
mov
out
lahf
stos
mov
push
lret
aaa
ljmp
gs
push
in
mov
aaa
mov
jle
mov
daa
push
xchg
cmpsb
rorb
dec
loope
in
pushf
sbb
inc
add
cmp
xchg
add
add
add
inc
lods
or
out
int3
cmp
sub
test
mov
addb
enter
addr16
xchg
sub
sub
xor
sbb
iret
repz
mov
cwtl
xchg
rolb
rclb
imul
inc
and
xchg
push
pop
add
pusha
sbb
pop
and
leave
xchg
daa
sub
and
jno
push
sub
inc
xchg
sub
inc
sbb
xor
add
movsb
scas
aas
or
add
inc
or
es
ret
or
xchg
sub
mov
ret
push
addl
mov
xchg
mov
adc
std
mov
and
mov
jmp
sbb
mov
cmp
sub
je
jae
adc
bound
adc
lods
aaa
jle
cld
add
jl
push
mov
and
add
inc
inc
jb
hlt
ret
add
xor
mov
sub
or
pop
dec
fcompl
mov
xchg
lock
add
std
fs
jbe
sbbb
call
push
outsb
in
es
aaa
pop
lcall
mov
xor
je
mov
inc
add
filds
orl
lahf
jp
mov
push
int3
ja
xchg
cli
or
jnp
add
loop
shlb
test
rolb
xlat
nop
adc
sub
or
mov
adc
jbe
rcl
dec
pop
rol
or
push
add
and
and
or
pop
sbb
and
popa
arpl
pop
std
dec
movsl
sbb
sahf
add
lret
cmc
mov
inc
mov
call
add
mov
and
mulb
adc
std
adc
jle
add
push
cmp
call
orb
fidivs
adc
call
push
xor
sub
sbb
mov
mov
mov
or
test
int
pop
push
add
dec
add
inc
ret
xor
pop
add
mov
or
fstps
dec
test
dec
inc
mov
jl
lea
movsb
cmp
jmp
dec
cmp
daa
bound
xchg
and
push
sbb
insb
dec
out
fistpl
lea
in
push
cmp
je
clc
sub
mov
cmp
sbb
and
test
loopne
and
xchg
jo
ret
mov
pop
adc
xor
mov
mov
push
sahf
pop
or
int3
lret
mov
adc
sub
push
fcoml
dec
adc
add
push
addl
fisubs
mov
add
mov
push
and
and
mov
push
imul
ret
mov
cmp
jecxz
pushl
cli
add
fwait
dec
test
test
xor
push
and
mov
or
adc
adc
cmp
adc
subl
jne
adc
mov
mov
adc
inc
jmp
sarl
mov
mov
mov
fwait
mov
sarb
int3
imul
dec
mov
dec
and
ror
inc
pop
and
mov
ret
es
or
cmp
dec
push
or
cmp
and
add
inc
adc
add
mov
xchg
mov
andl
add
inc
mov
adc
je
cmp
cmpsb
sub
or
bnd
xchg
or
adc
or
inc
adc
sbb
or
pmaxsw
or
push
je
jge
sub
cmp
mov
lahf
repz
fs
addl
inc
or
sbb
or
sbb
in
xchg
mov
cmp
in
pop
dec
and
dec
and
fldl
test
mov
rcrb
mov
cmpsl
cs
lods
add
inc
jmp
stos
cmp
add
mov
mov
dec
andb
cmc
mov
xor
pop
pop
or
xchg
jnp
xchg
jne
test
push
dec
mov
mov
mov
mov
cmp
mov
push
mov
mov
adc
ljmp
inc
mov
lret
inc
add
leave
mov
sub
cmp
cwtl
adc
sbb
pop
aas
mov
and
and
fisttpll
leave
xor
pop
xor
test
in
shll
sbb
call
neg
adc
mov
fmuls
and
and
call
lods
inc
sahf
jbe
mov
dec
stc
inc
and
leave
jp
pop
les
cmp
popa
or
mov
cmpsl
mov
pop
inc
mov
and
test
sbb
call
dec
lods
jmp
or
daa
fsubrl
xorb
sbb
mov
cltd
mulb
mov
push
add
inc
adc
ja
add
and
mov
or
sub
push
fwait
stc
mov
adc
test
gs
adc
lcall
or
sbb
xor
xlat
loop
adc
sbb
adc
andl
jbe
fstpt
mov
or
lret
xor
pop
jle
ficoml
or
sbb
je
pop
and
adc
or
cmp
add
push
or
inc
fimull
lods
scas
add
mov
shrb
push
sbb
xor
mov
add
sub
push
adc
out
insb
subb
ret
repz
pop
add
push
pop
add
cmp
inc
inc
iret
pop
leave
mov
ja
dec
call
rolb
inc
inc
mov
pop
dec
mov
xchg
nop
shlb
mov
ret
mov
fisubl
pop
test
jae
xlat
test
sbbl
jg
and
cmp
mov
nop
push
and
es
add
jne
sub
addr16
addr16
out
ss
jg
xchg
jns
out
push
insb
fs
push
dec
inc
dec
pop
out
addr16
jmp
movsb
sub
enter
fmull
xorb
fnsave
pop
nop
inc
push
fs
mov
call
dec
inc
dec
addr16
mov
mov
out
iret
cmp
call
push
or
and
add
addr16
cmp
inc
dec
pop
out
push
push
push
add
pop
add
xlat
mov
cltd
jle
and
cmpsl
and
pop
sbb
cmp
push
jb
and
and
cmp
sbb
sub
popa
hlt
addr16
inc
mov
mov
or
inc
daa
in
cltd
sbb
sub
xchg
push
stc
adc
dec
rorl
jo
pusha
mov
pop
or
sub
jb
repz
stos
test
push
cmpsl
ret
push
and
test
jmp
push
enter
out
mov
es
cs
lcall
push
daa
daa
daa
dec
shll
daa
daa
sub
xor
daa
daa
add
daa
in
cmp
sub
xor
sub
sub
push
enter
sub
sub
sub
add
sub
sub
sub
add
dec
dec
testb
cmp
pop
inc
loop
cmp
sub
mov
sahf
shlb
sub
sub
xor
add
js
lods
subl
or
sbb
pop
cmc
push
lock
jp
fwait
insl
and
ret
clc
fs
dec
sbb
cld
or
sbb
addb
adc
in
xchg
call
rorb
inc
push
sub
or
outsl
add
and
mov
adc
mov
dec
notl
cwtl
addr16
pop
and
xchg
xor
bound
movhps
addr16
adc
call
push
hlt
mov
iret
enter
rorl
sub
sub
test
out
frstor
call
xor
inc
inc
push
sub
or
or
mov
cmp
or
adc
ja
out
addr16
adc
mov
out
or
adcb
xorb
add
repnz
mov
lods
adc
scas
pop
mov
mov
mov
test
aaa
leave
cmp
sub
sbb
and
add
cltd
inc
mov
pop
or
pop
adc
cltd
cwtl
pop
push
call
adc
and
xor
push
adc
mov
fs
outsl
push
cwtl
push
adc
mov
xor
cltd
or
nop
add
jno
nop
cltd
pop
andb
jbe
pop
sbb
in
cltd
xchg
sbb
pusha
and
test
or
cmp
cwtl
push
add
test
sbb
jmp
addb
ret
pop
ljmp
mov
push
or
mov
adc
add
xchg
cmpsl
adc
inc
cwtl
dec
mov
pop
adc
pop
adc
movsl
inc
popf
inc
adc
test
jl
sub
jmp
sub
adc
stos
mov
cmp
adc
inc
adc
lret
xchg
test
imul
mov
mov
sub
adc
sbb
adc
mov
stos
inc
and
pop
adc
lds
lea
loopne
pop
cmp
inc
imul
sub
adc
stos
mov
mov
mov
in
mov
loopne
inc
or
push
aaa
add
push
jne
imul
jnp
adc
in
fiadds
test
fstl
jl
scas
mov
daa
add
inc
adc
leave
inc
pop
aam
inc
pop
and
inc
push
adc
dec
mov
lods
pop
add
inc
call
pop
inc
pop
ss
enter
lea
push
ja
adc
push
adc
pop
cwtl
fs
inc
inc
enter
imul
cs
adc
adc
push
test
mov
es
xchg
pop
xchg
push
jne
add
mov
jmp
imul
or
sarl
mov
mov
pop
rol
and
dec
lret
movsb
pop
arpl
mov
push
add
or
pop
aas
icebp
addr16
xor
sub
nop
aas
xchg
sbb
xchg
push
mov
mov
enter
inc
pop
pop
sub
and
mov
or
add
pop
and
inc
pop
mov
xor
adc
pop
push
shlb
sbbb
xchg
add
popa
lock
jnp
add
inc
xor
xor
jb
xchg
pop
push
ds
add
fbld
loope
sub
testb
pop
push
jns
divl
mov
or
xchg
cltd
sbb
xchg
xchg
xchg
xchg
xchg
cmp
inc
pop
xchg
xchg
xchg
xchg
inc
dec
dec
inc
inc
cmp
and
mov
pop
pop
pop
mov
sub
pop
push
call
rcrb
jo
cmp
dec
adc
cmp
fdivrs
fdivs
lds
pop
and
xorl
out
test
dec
or
jmp
mov
push
flds
movsb
and
dec
sbbb
in
sbb
cmp
movsb
addb
and
dec
sub
sbb
mov
cmp
xorl
jno
cmp
ja
mov
add
test
lock
jl
movl
dec
mov
pop
xor
std
call
nop
pop
push
xorl
call
inc
cmpsl
add
inc
ds
adc
mov
sub
inc
xchg
pusha
pop
cmpsb
cmpsl
in
insb
ljmp
xchg
arpl
pushf
sbbb
int3
fsubl
xchg
mov
push
add
arpl
xchg
insb
lret
or
and
push
int3
pop
inc
dec
push
enter
fsubl
pop
loope
ljmp
pop
and
mov
push
push
out
inc
loope
mov
mov
adc
push
mov
repz
rorb
sbb
add
add
mov
inc
add
mov
mov
fmul
inc
popa
lods
mov
sbb
pop
and
fisubl
mov
frstor
sbb
fwait
sbb
stc
cmp
sbb
push
or
or
or
pushf
dec
mov
popa
cmp
loopne
loopne
mov
ret
js
loopne
leave
inc
pop
and
in
adc
sahf
enter
in
fsubrl
daa
rclb
mov
dec
jbe
or
push
xor
daa
xchg
nop
dec
adc
or
add
shll
pop
lock
push
push
mov
sbb
out
adc
adc
xor
mov
xchg
mov
push
negl
push
mov
or
icebp
or
sub
push
inc
xor
sub
mov
sub
push
stc
cltd
inc
push
xor
push
cld
mov
inc
jmp
outsb
inc
xor
cwtl
cltd
mov
adc
popf
xor
movsb
xchg
fisttpll
cmp
push
push
enter
daa
inc
dec
inc
xor
inc
ljmp
add
in
mov
fdivr
loope
sbb
jns
fdiv
cmp
mov
xchg
pcmpgtw
sbb
add
repz
repnz
add
sub
jns
add
fcoml
loop
lret
daa
inc
cmpsl
mov
daa
or
push
add
sbb
mov
outsl
add
inc
test
jp
inc
adc
call
xchg
ret
insb
mov
arpl
inc
dec
pop
maxps
gs
add
fcomi
sti
imul
pop
inc
pop
adc
jnp
ret
cmpsl
repnz
and
je
xchg
gs
jge
mov
cmp
push
movsl
sti
sbb
ret
xchg
js
jl
add
mov
mov
inc
andb
sbb
xchg
inc
push
mov
push
repnz
inc
icebp
push
lret
inc
mov
inc
pop
adc
and
push
sub
or
pop
jl
gs
or
movsl
mov
inc
or
sbb
mov
sti
pop
lret
inc
pop
adc
or
xchg
out
mov
cli
arpl
outsl
adc
nop
movl
jne
flds
pop
mov
pusha
or
xchg
fists
xchg
add
push
inc
xchg
addl
sbb
xchg
jecxz
dec
insl
bound
pop
xchg
inc
xchg
push
fwait
cmp
mov
movsl
push
xor
xchg
es
lahf
jae
jmp
mov
pop
adc
hlt
xchg
pushf
mov
pop
fwait
xchg
fdivl
daa
mov
xchg
or
or
aam
adc
fiaddl
roll
adcb
xchg
into
xchg
add
cmp
inc
bnd
cmp
xchg
push
xchg
scas
shl
sub
leave
insl
roll
sub
push
sbb
cmp
mov
mov
mov
or
xchg
dec
rclb
mov
push
adc
ss
sub
mov
inc
sbb
xchg
xchg
dec
seta
dec
xchg
dec
mov
mov
shrl
je
xchg
adc
xchg
inc
xor
mov
xor
dec
xchg
int3
daa
xchg
jo
imul
ljmp
pusha
mov
mov
or
dec
aaa
xor
inc
xchg
movsl
fwait
mov
xchg
es
punpcklbw
or
jmp
call
xchg
mov
je
xchg
data16
add
frstor
sub
icebp
fs
lret
pop
sbb
test
movsb
icebp
jnp
in
add
and
test
int
sub
testl
enter
adc
dec
inc
lea
adc
jns
sbb
mov
loope
clc
jmp
add
int
pop
sbbb
leave
call
or
push
int
mov
or
xchg
sti
ds
das
push
in
mov
adc
pop
insb
push
stos
adc
int
out
loopne
mov
pushf
inc
ss
mov
cmp
dec
pop
inc
sbbl
cld
dec
inc
fdivs
jb
inc
aas
pushf
mov
rcll
push
and
decl
inc
insb
sbb
addb
mov
inc
loopne
mov
aam
cmp
and
xchg
mov
dec
xor
testb
sbb
aaa
pop
add
inc
enter
or
clc
outsb
fcmovnbe
inc
pop
ss
add
loop
fucomi
nop
inc
cmpsb
dec
push
fistl
dec
and
xor
daa
ret
fldcw
inc
insl
pop
and
fisttpl
adc
das
inc
fistl
orb
xchg
or
pop
fcmovne
je
dec
pop
loopne
add
jne
fildl
xchg
shll
orl
mov
or
cld
mov
inc
mov
loopne
scas
jecxz
fidivl
out
jns
adc
jno
rcrl
fildl
fldt
call
inc
and
jecxz
push
cmpb
fistl
inc
mov
inc
pusha
xchg
daa
in
sbb
or
cmp
jo
or
fdivl
shlb
aaa
or
mov
loopne
loopne
add
adc
sahf
loop
fucomip
in
push
fs
iret
leave
sar
lock
pop
push
iret
loope
xor
inc
repnz
jns
push
dec
cmp
sub
dec
pop
das
movaps
sub
das
das
sbb
add
cld
mov
in
das
das
das
das
fdivrl
les
mov
mov
mov
mov
in
cmpl
in
popa
mov
dec
mov
inc
mov
and
sbb
pop
cmp
inc
idivl
sbbl
mov
push
jb
mov
and
cmp
lahf
mov
nop
cmpl
mov
pop
mov
in
pop
cmp
mov
jb
sbbl
or
enter
mov
mov
mov
push
jb
xorl
pop
cmp
inc
xchg
mov
sbbl
jo
gs
nop
mov
and
cmp
cmp
cmpl
mov
hlt
mov
je
or
sarl
adc
sahf
data16
sbb
or
xor
mov
sub
test
imul
adc
adc
data16
sbb
push
sbb
xchg
xchg
sbb
sbb
mov
and
call
movsb
and
cmp
inc
dec
lcall
movsb
sbb
imul
pusha
in
dec
cli
dec
jl
popa
leave
xchg
out
dec
push
jo
push
dec
arpl
add
add
addb
push
inc
inc
mov
push
dec
aam
adc
inc
inc
in
xor
push
cwtl
addr16
add
xor
sbb
and
adc
rolb
sub
xchg
cmp
stc
jb
dec
repnz
inc
mov
sub
or
orl
ret
fcoms
jb
les
cmp
pop
mov
push
adc
testl
pop
icebp
sbb
scas
and
mov
mov
or
pop
or
and
add
add
sub
push
test
daa
inc
lcall
pop
mov
lret
cmp
xor
push
cmp
dec
psrld
add
push
sbb
dec
packsswb
shld
push
rclb
push
psrlw
mov
bswap
les
dec
inc
and
inc
pop
mov
xor
imul
inc
inc
mov
jbe
mov
xor
mulps
adc
fisubrs
sarl
lret
mov
dec
aaa
xor
cmp
sub
aad
adc
inc
pop
jb
pop
rdtsc
lret
repz
cmovbe
or
push
cmovbe
test
movaps
add
aam
addr16
push
bound
pop
fsubl
gs
adc
loope
add
jmp
push
sub
and
call
push
xchg
int3
xchg
or
dec
and
inc
sub
cmp
scas
sub
dec
pop
or
mov
out
or
and
sbb
adcl
mov
decb
lret
mov
sbb
xchg
push
inc
push
or
lret
mov
movsl
inc
movsl
or
addl
and
gs
or
dec
or
mov
cmp
or
int
or
scas
push
cmp
movsl
or
adc
push
pop
jb
pop
scas
dec
mov
mov
loopne
dec
pop
or
dec
pop
sbb
or
jnp
pusha
in
mov
fsubr
mov
xchg
enter
xchg
fnclex
clc
push
call
repz
or
dec
inc
loop
or
out
call
jns
out
add
dec
pop
sbb
or
jmp
insl
sbb
sub
pop
sbb
outsb
dec
xchg
push
adc
xchg
out
test
popa
lods
mov
out
adc
test
mov
xchg
mov
pop
or
inc
jae
sbb
adcb
add
xchg
aam
call
jmp
or
cmp
add
dec
or
pop
shrb
movsl
aad
movb
or
or
or
movb
jbe
lret
or
insl
lret
cmp
xor
or
rcr
fildl
js
je
nop
imul
or
aam
sbb
rcrb
xor
movsl
or
sub
sarb
sbb
sbb
or
lret
or
adc
lock
movsl
sub
xchg
std
push
sbb
sub
add
rcll
jg
mov
aad
xchg
sub
dec
xchg
xchg
add
xor
sbb
andl
xor
rorb
push
and
push
lret
and
mov
mov
or
fstl
dec
js
adc
mov
pop
or
sub
sbb
mov
movsl
sub
inc
or
dec
ja
enter
cltd
scas
mov
dec
inc
and
cwtl
or
stos
shlb
xchg
mov
mov
xchg
and
in
cmpsb
adc
or
ret
cmp
lock
jmp
or
xchg
dec
xor
push
xchg
out
cmp
push
call
mov
and
jmp
pop
sahf
ds
sub
mov
or
mov
or
pop
ljmp
mov
loop
andb
into
dec
shlb
jne
and
gs
stos
or
dec
push
add
movsb
js
nop
stos
push
or
xor
movsl
sub
sub
gs
dec
test
popa
ja
mov
repnz
or
sub
fwait
adc
push
xchg
mov
fs
movsl
addl
shlb
mov
pop
pop
lahf
loope
les
loop
ja
push
or
out
mov
or
inc
sub
in
lret
pop
jg
sub
add
sub
or
stc
pop
movsl
cmp
fwait
or
es
xchg
sbb
and
in
jne
addb
out
mov
fdivl
adcb
cltd
test
das
cmpsb
adc
add
jnp
inc
mov
push
pushf
nop
mov
sub
das
out
xchg
rclb
jmp
fstps
xchg
ds
lret
or
xchg
push
add
mov
xor
xor
cmpsl
mov
cmp
push
and
push
inc
testl
not
into
mov
dec
push
push
in
into
ja
cmpsb
cli
sahf
arpl
movsl
cmpsb
js
mov
fs
int
cmp
testb
push
cmp
repz
cmp
iret
repz
faddl
sbb
out
sahf
out
inc
push
pop
outsb
sahf
out
sahf
adcb
jns
jnp
outsb
or
push
ds
sahf
out
sahf
pop
jb
mov
int3
out
push
stos
adc
cmp
repz
cmp
iret
repz
jbe
test
into
call
add
push
sbb
xor
repz
ds
pop
insb
adcb
cmpsb
add
push
adc
ja
cmp
mov
lods
mov
push
lea
ret
imul
pop
sbb
push
push
mov
dec
sbb
mov
add
push
clc
mov
mov
push
pop
xor
add
push
jecxz
clc
mov
mov
or
add
test
fcoml
mov
push
adc
push
adc
int
jns
xchg
sbb
sbb
xchg
jl
repz
sbb
sbb
mov
rcrb
push
pop
sahf
mov
and
and
js
jns
int
jns
jp
cmp
repz
mov
aas
push
xchg
rorb
pop
cltd
shlb
int3
xchg
mov
adc
add
cmp
sub
addb
pop
dec
xchg
iret
repz
push
push
cmp
adc
out
cmp
add
xchg
in
loopne
sahf
out
fstp
ror
enter
out
sarb
test
mov
sahf
out
nop
mov
sahf
out
js
jo
sahf
out
sahf
push
push
jns
out
push
dec
dec
inc
inc
out
sahf
out
cmp
sub
out
sahf
and
add
nop
fdivrl
repz
test
push
repz
pop
movsb
out
sahf
out
pusha
push
dec
inc
dec
repz
xor
or
mov
sarb
repz
mov
or
sahf
cmpsl
stc
lock
int3
test
push
mov
lea
push
add
lock
stos
fadds
add
push
enter
xor
xor
add
aas
push
xchg
mov
aaa
xor
push
push
add
into
mov
andl
dec
xchg
push
push
test
mov
jne
jl
orl
shlb
jbe
adc
cmpl
mov
outsb
jnp
mov
add
and
aas
insl
leave
inc
sbb
outsl
add
xchg
dec
out
xlat
push
mov
inc
add
orb
aaa
mov
add
pop
cmpb
insb
ss
jo
pop
shll
jbe
adc
in
sbb
pop
lds
push
rcrl
daa
push
xchg
aas
mov
and
pop
enter
aaa
inc
pop
dec
jb
popf
rorl
cmp
push
pop
scas
inc
fisttps
inc
sarb
fldenv
inc
lahf
inc
jg
dec
push
dec
pop
xor
aas
pop
enter
push
int3
push
push
and
cmp
cmpsl
mov
fsubl
inc
fadd
test
sub
or
daa
movsb
fisttps
mov
add
movnti
imul
inc
mov
add
mov
mov
pushf
add
fldenv
insb
pop
insb
daa
cmp
pop
stos
outsb
cs
outsb
sbb
inc
outsl
ds
outsl
gs
subps
pop
cltd
jge
mov
rcrb
fsubl
in
pop
mov
cld
adcb
or
scas
inc
adc
mov
sub
notb
imul
leave
cmp
and
mov
movsb
add
push
pop
cmp
add
or
movsl
push
sub
push
xlat
jae
adc
mov
mov
inc
aas
fwait
inc
sub
add
mov
sub
xor
xor
mov
jp
fwait
dec
add
add
push
mov
xchg
xor
sub
mov
adc
push
mov
sbb
push
ja
movsb
dec
sbb
inc
and
orl
mov
imul
daa
xchg
movsb
mov
push
mov
xchg
xor
sub
lods
addl
or
sbb
mov
bound
shll
push
or
add
add
lahf
sub
sbb
arpl
mov
imul
addb
sbb
sbb
mov
add
xor
pop
jae
insb
pusha
push
aaa
add
ja
push
pushf
xor
push
inc
addr16
bound
orb
ficompl
ret
add
push
pop
inc
xchg
movsb
xchg
out
sahf
inc
jle
pushf
cwtl
xchg
sahf
out
sahf
nop
mov
out
jns
push
pop
dec
inc
inc
iret
repz
cmp
xor
sub
cmp
repz
and
adc
enter
cld
xchg
hlt
xchg
in
push
in
cmp
repz
enter
repz
lods
test
mov
inc
xor
push
insb
push
fs
jns
repz
push
dec
mov
push
and
into
idivl
add
in
xchg
push
enter
iret
sarb
iret
repz
mov
jns
out
pop
inc
cmp
stc
cmp
and
adc
lock
loopne
out
sahf
int3
mov
mov
jns
outsl
subl
outsl
ss
cs
add
test
inc
xor
mov
neg
mov
sbb
test
pop
jo
sbb
lret
add
stos
sbb
sbb
pop
aad
test
ds
pop
dec
mov
ss
cld
pop
enter
andl
pop
and
xchg
cs
inc
dec
pop
fcoms
fbstp
js
aas
xchg
xchg
mov
sbb
add
and
rolb
shlb
sbb
fwait
push
sti
inc
xor
rcr
xor
xor
cmpsb
dec
sbb
fisttps
cmp
ss
ss
nop
ss
aad
es
ss
outsl
decl
sbb
cmp
cmp
aas
cmp
sbb
xor
fstpt
push
cmp
xchg
dec
es
lret
cmp
cmp
cmp
cmp
dec
test
sbb
pushl
inc
jnp
cmpl
adc
xor
cmp
cmp
incl
mov
mov
ds
ds
call
ljmp
ds
aas
pop
aas
and
sub
xor
aaa
into
decl
or
push
data16
jbe
jnp
cmpl
aas
popf
aas
movsb
aas
mov
sarl
div
dec
add
aas
clc
sbb
jl
xchg
cmpsb
mov
xor
mov
xor
sbb
inc
xor
mov
mov
xor
sarb
das
xor
fwait
pusha
adc
cmp
xchg
mov
cmp
xor
inc
sarb
pusha
je
inc
fmuls
xor
fisttps
sub
xor
xor
xor
xor
xor
or
pushl
xor
xor
xor
xor
dec
mov
ss
mov
fwait
mov
ss
pushl
sbb
xchg
mov
inc
sbb
add
sub
das
cmp
fnsave
mov
cmp
add
fmuls
es
es
cmp
xor
xor
cmp
cmp
cmp
sbb
rcll
cmp
pusha
je
clc
outsl
cmp
push
pop
mov
pop
xor
inc
fdivrp
aaa
mov
cltd
idivb
jg
cmp
cmp
cmp
dec
push
add
jg
outsb
ja
jle
test
clc
mov
cmp
hlt
cmp
inc
ds
ds
ds
fs
xchg
cs
decl
cwtl
xchg
xor
xor
xor
aas
cld
xor
push
xor
aaa
leave
clc
mov
xor
xor
xor
xor
inc
lds
pushl
xor
outsb
xor
loopne
repnz
dec
ss
bound
xorl
ss
es
or
ss
cld
adc
ss
aaa
or
push
sar
fs
xor
aaa
mov
sbb
mov
xor
add
cmp
xor
scas
push
sbb
pop
cmpsb
test
outsb
xchg
icebp
cmp
cmp
das
mov
cmp
cmp
cmp
cmp
loope
xor
and
es
cmp
cmp
cld
pop
or
cmp
jle
xchg
mov
xchg
or
lahf
cmp
pusha
ret
push
add
call
cmp
cmp
cmp
cmp
cmp
push
scas
test
rclb
push
cltd
xor
insl
mov
sub
das
xchg
jno
stos
dec
aas
outsb
inc
cmpl
aas
insb
dec
and
ret
aas
iret
dec
fsubl
sbb
js
xor
into
xor
jg
mov
jg
lea
xchg
xor
xor
xor
lcall
pushl
stc
xor
xor
jo
in
pop
xor
xor
or
mov
cmp
insb
popa
cld
fistps
xor
xor
adc
push
mov
ss
arpl
stos
add
ss
ss
pusha
jl
test
outsb
adc
jne
jle
jecxz
mov
or
sbb
sub
pop
in
cmp
cmp
cmp
cmp
xor
push
cmp
cmp
aaa
or
cmp
cmp
movl
push
mov
cmp
cmp
scas
in
inc
sar
and
ds
or
cmp
adc
fstpt
inc
adc
fbstp
divb
data16
or
ss
xor
xor
xor
xor
xor
mov
xor
xor
xor
xor
xor
jg
xchg
xor
xor
xlat
xor
ja
mov
pushf
ss
mov
stos
pusha
adc
sbb
into
and
scas
xor
aaa
jmp
sbb
pop
loop
cmp
pop
cmp
cli
push
lcall
divb
cmp
ret
clc
jmp
ds
imul
mov
lret
xchg
icebp
adc
lods
cmp
cmpl
xor
or
out
sub
scas
xor
cmp
dec
cmp
pop
cmp
sub
xchg
or
cmp
xor
xor
incb
xor
xor
xchg
mul
loopne
test
or
pop
dec
es
xor
test
or
dec
add
arpl
sub
add
pusha
out
xor
sbb
jge
xor
mov
stos
and
mov
popa
mov
jle
xor
inc
daa
jp
jb
call
mov
cmp
ret
push
mov
dec
int3
inc
adc
mov
cmp
subb
mov
cmp
ret
sub
inc
sbb
pop
xchg
insb
jb
out
inc
mov
inc
xor
sbb
mov
mov
gs
call
lcall
jo
or
or
adc
adc
sbb
sbb
add
and
sub
ret
xor
mov
xor
push
pusha
xor
xor
inc
movsl
out
es
add
push
lret
mov
mov
nop
xor
loope
cli
xchg
mov
xor
enter
xor
dec
sbb
fdivs
fadd
test
iret
xchg
je
js
nop
or
jbe
xor
jmp
jbe
push
xor
fs
loope
outsb
jo
bound
sarb
pop
pop
unpckhps
dec
add
nopl
mov
pop
daa
cwtl
decl
ljmp
sub
nop
icebp
jg
push
insb
xor
xor
xor
xor
xor
cmpsl
outsl
stos
push
shlb
xchg
mov
xor
xorb
or
push
ret
jb
xor
lcall
pop
push
fsubrl
in
call
xor
xor
addl
add
push
add
iret
inc
adc
sub
xor
aam
shll
xor
xor
xor
push
xor
pop
xor
aas
clc
jg
mov
xor
xor
xor
xor
mov
decl
inc
push
scas
pushf
xor
xor
xor
xor
xor
xor
xor
add
ds
shlb
int3
fimull
mov
ret
cmpsb
mov
push
inc
jp
sub
je
pop
fucom
fcmovnb
clc
or
sub
jbe
sarb
adc
pushl
mov
fdivr
add
inc
call
pop
pusha
fcoml
add
add
add
add
or
pop
pop
push
or
or
or
or
or
fistl
adc
adc
adc
push
adc
outsb
xlat
dec
les
or
pop
sbb
adc
adc
adc
add
inc
mov
shll
or
dec
mov
xor
add
mov
inc
add
add
mov
inc
mov
jb
testl
ds
fbld
add
push
adc
pop
and
xor
inc
mov
and
inc
adc
xor
cmpb
cmp
add
sbbl
les
xchg
xorb
dec
mov
push
xchg
popa
adc
dec
nop
ret
xor
xchg
and
andb
and
add
es
scas
cmp
mov
adc
push
adc
pop
popa
jno
and
and
lods
or
xor
adc
das
stos
and
loope
icebp
mov
mov
mov
and
inc
mov
fiaddl
or
mov
dec
jo
or
decl
bound
add
lds
cld
cli
and
mov
incl
jg
fnstsw
ficompl
cmpsl
xor
mov
test
pop
lahf
mov
movsl
jecxz
cli
pop
dec
and
out
stc
or
xchg
jg
jmp
or
insb
sub
addr16
out
or
push
push
xchg
add
repnz
incl
jbe
scas
jle
fcmovnu
clc
cmp
fisubrl
in
mov
orb
int3
lcall
push
pop
sbb
mov
push
pop
mov
pop
pop
mov
popl
movb
decl
sti
ret
scas
adc
mov
xor
lods
scas
xchg
test
call
scas
and
sbb
sarl
and
roll
fwait
movsb
jmp
push
lret
push
out
in
in
and
ss
repz
cmpsb
pop
outsl
icebp
mov
pop
lock
std
or
pop
decl
dec
aaa
dec
dec
pop
push
out
outsl
loope
loope
rorl
mov
int
arpl
mov
jp
push
out
or
cld
push
push
sahf
pop
clc
sti
jg
jno
lock
jg
inc
icebp
xchg
std
sarl
xor
fdivr
decl
hlt
and
xchg
jmp
sbb
das
mov
out
pop
jb
mov
or
push
xor
mov
int
inc
fwait
sbbb
mov
dec
jp
push
gs
dec
rcrl
stos
hlt
push
add
stc
loope
mov
sar
push
mov
fildl
icebp
testb
mov
lcall
pop
xor
jns
mov
in
repnz
jno
pop
sub
jg
scas
cld
or
push
decl
sbb
cld
andb
outsl
sbb
jb
adc
push
push
movsl
lods
jp
testb
sbb
into
fcomps
sbb
sbbl
outsl
fcmovne
andl
aas
loopne
cli
adc
aaa
xchg
in
add
inc
sahf
fisubs
or
dec
fisttpll
out
aas
std
cli
push
push
ljmp
outsb
push
idivl
cmp
sub
inc
scas
inc
mov
jg
je,pn
sub
jg
imul
mov
mov
inc
es
gs
jns
enter
pushl
cmp
pushf
push
scas
xlat
sub
cmp
sti
punpckhbw
cmpsb
orb
mov
or
cmp
cmp
js
jmp
inc
push
sub
xchg
pop
clc
pop
hlt
lret
movsb
add
fildl
add
lea
jg
gs
std
xorb
jg
add
outsl
adc
ret
das
pop
pop
pop
shlb
out
sar
scas
cli
cmp
lock
or
sarb
std
pop
les
cli
mov
mov
mov
arpl
stos
mov
and
insl
add
leave
push
scas
loop
jge
push
shrl
jmp
mov
push
mov
adc
and
sbb
xchg
jo
and
out
test
jl
imul
rcr
lock
sbb
cmpsl
sahf
imul
fcmovnu
rorl
pop
and
ljmp
nop
enter
loop
call
pushl
js
cmp
scas
lods
hlt
cmp
fistl
mov
adc
push
movsb
xchg
or
mov
cmp
add
ret
fcmovu
ds
cmpsl
scas
popa
in
pop
ljmp
dec
xchg
mov
xlat
pushf
cld
aas
clc
jge
jnp
sbb
outsb
mov
sbb
jecxz
inc
adc
test
dec
jb
adc
xchg
and
push
push
jo
pusha
imul
add
mov
call
imul
daa
xchg
mov
cwtl
pop
xchg
ftst
jbe
xchg
and
jmp
add
jae
shrb
shlb
out
aas
stc
add
out
gs
jno
mov
call
adc
pop
cld
addl
adc
and
ds
cmp
fmull
enter
jecxz
scas
jg
jg
sub
in
pop
mov
sub
mov
dec
incb
outsb
mov
aas
mov
or
cld
inc
or
in
pop
cmpsb
push
pop
jg
add
jg
mov
outsb
jg
aad
test
mov
mov
iret
cmp
jg
push
jbe
push
sbb
stos
icebp
pop
incb
jno
insl
lcall
sub
push
inc
jecxz
sbb
sarl
adc
fdiv
cs
clc
xorl
inc
cmp
push
or
test
loopne
add
mov
fsubrl
pop
pusha
inc
fcomi
push
and
clc
lcall
adc
xchg
pushf
mov
repnz
and
mov
adc
jnp
add
loope
aas
push
rcrl
rcr
addr16
incl
pop
inc
jb
fistpl
adc
call
jno
pop
pushl
repz
inc
sti
arpl
daa
std
or
sbb
mov
inc
aas
cld
jmp
sbb
or
imul
xor
dec
xor
fsubr
fistps
mov
jg
jg
stos
pop
sahf
incl
jbe
dec
mov
sub
jge
xor
lahf
les
sbb
sbb
jmp
inc
and
mov
in
stc
mov
lahf
outsl
int3
push
sbb
or
cmp
mov
sti
jle
xchg
popa
out
out
outsl
xchg
inc
test
in
jge
popa
push
or
cmp
jbe
outsb
hlt
sti
fsubs
shl
dec
jp,pn
insb
add
call
xchg
aad
loop
lahf
mov
or
out
lcall
fisttpl
shl
cld
mov
adc
stos
pop
jg
pop
shrb
rcl
lcall
jg
adc
xor
pop
rcr
dec
mov
gs
pushf
lea
aad
sti
jp
jnp
jecxz
adc
inc
lds
push
pop
adc
ljmp
fisttpll
dec
int
sbb
inc
pop
xor
rorb
and
add
cmpsl
push
sti
iret
mov
lock
inc
cmpsl
enter
mov
into
test
xchg
movsb
insb
or
jg
es
xchg
fidivrs
clc
mov
xor
test
aas
repz
sbb
lock
in
jmp
lock
add
out
sbb
aaa
clc
push
std
mov
sbb
test
jg
lds
dec
push
mov
fsubrp
dec
sahf
enter
fcmovb
inc
adc
inc
jg
mov
loopne
test
out
rolb
pop
or
or
fildl
mov
lods
movsb
or
bnd
aas
fiaddl
pushf
imul
jl
outsl
das
or
jno
lret
pop
in
jg
aad
cmp
jmp
mov
pop
lock
popf
jmp
hlt
dec
mov
xlat
inc
incl
mov
jg
mov
sub
addr16
std
pop
mov
sbb
cld
daa
jp
std
adc
cltd
or
mov
ret
cld
stos
jle
nop
cmp
das
incb
lock
pop
pop
div
cld
testl
mov
stc
lahf
loope
jae
jmp
add
mov
sar
mov
add
out
icebp
mov
loope
mov
fdiv
mov
sti
mov
fbstp
jb
adc
das
cmpsb
pop
mov
jge
out
xorb
int
call
xor
decb
mov
mov
mov
and
call
imul
and
mov
cmp
int
add
push
pop
aaa
std
js
dec
enter
inc
sbb
mov
mov
aas
icebp
ret
xor
or
ror
sbb
aaa
inc
pop
lds
ficoms
shrb
mov
pop
push
inc
mov
loope
mov
lahf
jp
dec
cmp
xchg
add
xlat
rcrl
in
xor
cmp
cmp
repz
js
pop
gs
and
sarl
xor
loop
pop
out
jg
jno
ret
cmp
xchg
inc
arpl
out
aas
xor
push
dec
jge
pop
clc
xchg
cmpsb
ljmp
ds
inc
mov
pushl
in
sbb
xchg
imul
add
stos
sub
outsl
jmp
std
mov
daa
jmp
faddl
add
inc
push
jae
push
pop
mov
pop
add
push
imul
pop
stc
push
dec
out
fstpt
mov
enter
xchg
and
add
fsts
xchg
jl
jo
or
add
push
sti
pop
inc
add
or
push
nop
mov
ljmp
test
and
add
aaa
hlt
sub
mov
daa
sbb
ljmp
cld
lahf
mov
xchg
repnz
push
mov
jmp
jp
cmpsb
jo
nop
mov
ljmp
sarl
and
fcmovne
test
jge,pt
push
bound
sbb
mov
repnz
iret
ror
sahf
or
push
cmp
ret
inc
jne
lcall
dec
push
adc
cmp
in
rorb
sbb
or
addb
jno
aaa
call
fs
mov
and
cs
rcr
and
push
ror
cltd
and
pop
jle
mov
pushl
inc
xor
call
xchg
xor
add
push
fidivs
decl
add
les
outsb
lea
mov
repz
xchg
aad
jne
sbb
sub
pop
push
aam
lcall
cld
aas
and
call
je
mov
stos
jg
cmp
cmp
inc
lcall
imul
mov
push
int
fwait
int3
inc
or
dec
inc
in
add
fildl
xor
mov
jg
jo
pop
push
cmpsl
sbb
push
mov
inc
movsl
pop
jmp
mov
mov
push
into
hlt
cmp
popf
fsubr
jg
int
mov
out
jbe
mov
mov
or
dec
mov
decl
stos
rclb
outsb
cli
stos
add
inc
movsb
jecxz
stos
dec
dec
jmp
xchg
sbb
cltd
shll
in
or
std
jge
inc
jo
adcb
addr16
pop
repnz
ljmp
push
cmpsl
outsb
xor
jo
lahf
or
in
cmp
arpl
dec
pop
inc
sub
decl
stos
jmp
int3
fidivl
cmpsl
inc
adcb
sub
cwtl
xchg
out
popa
cmp
jg
xlat
xchg
out
enter
popf
mov
insb
dec
hlt
pusha
adc
inc
jmp
fmull
push
dec
jmp
sub
addb
out
outsl
mov
out
out
push
pop
in
pushl
push
xorb
push
push
mov
fwait
pop
pop
jnp
mov
sub
sub
mov
outsl
ljmp
adc
jb
inc
xchg
test
sbb
sbb
dec
jmp
mov
sub
mov
leave
rcrl
faddl
push
ret
cltd
into
xchg
sahf
xor
jmp
adc
cli
pushf
es
mov
aas
repz
les
test
or
decl
xor
add
nop
jae
enter
xchg
out
adc
cmp
sbb
sub
cmp
inc
inc
das
bound
push
push
clc
fstl
fdivl
aas
and
push
and
and
cld
add
adc
push
into
mov
stos
lock
jle
leave
sahf
sbb
dec
dec
loopne
mov
sti
incl
inc
xor
cmpsb
pop
mov
fnstenv
and
sbb
lods
add
push
pop
fcoms
adc
cmp
jecxz
es
andb
jo
jbe
jmp
jmp
mov
xor
cmpsb
icebp
cmpl
pop
push
add
ljmp
movsb
mov
repz
arpl
sbb
cmpsb
mov
mov
outsb
in
repz
pushl
in
in
int
aaa
xor
add
lock
mov
adc
ljmp
xor
or
pop
je
sbb
orl
sub
out
fs
mov
mov
lock
or
and
sub
sbb
aas
pop
test
mov
dec
or
jb
sbb
mov
jmp
dec
subl
xchg
into
add
pushl
jge
call
xchg
mov
jb
dec
int3
fiadds
jmp
mov
pop
cmp
repz
shrl
sub
ds
mov
push
js
jmp
icebp
xor
jo
mov
cmp
test
lcall
dec
pop
cmpsb
hlt
mov
mov
cld
jmp
cmp
cmp
insl
js
xor
dec
pop
data16
sub
sbb
jg
sub
xchg
fstpt
bound
dec
outsl
ret
mov
aaa
aad
jmp
mov
push
jg
mov
ljmp
lahf
mov
in
jno
add
sar
decl
dec
xchg
int
popa
arpl
or
andl
je
insb
pop
leave
xor
dec
xor
aas
pop
iret
cld
pop
cmpsl
jno
xchg
out
mov
push
sarl
jae
push
sub
aad
push
fcomip
fucomip
cmc
inc
stos
movsb
filds
push
mov
sarl
lcall
push
or
dec
jge
xchg
in
movsb
cmpsl
test
inc
mov
jb
push
push
ja
andl
lcall
or
fsubr
ss
sub
adc
loopne
mov
pop
leave
jmp
loop
push
inc
jbe
sbb
pop
xchg
mov
je
stos
xchg
lret
xor
pop
in
cmp
cwtl
jo
sub
rcrb
mov
dec
out
and
hlt
frstor
in
incl
ljmp
push
stc
fsubl
add
incl
lea
js
incl
jle
enter
aad
aas
in
add
mov
push
and
push
and
pop
jg
test
fildl
xchg
push
fiadds
cmc
jno
jmp
pusha
mov
and
sub
ss
outsb
mov
fidivrs
fiaddl
push
fcos
mov
gs
lods
outsl
ljmp
lret
push
or
aad
call
sub
xchg
movsb
insl
mov
inc
aaa
push
mov
jecxz
add
sahf
mul
ds
ja
and
lcall
ja
inc
mov
pop
fcmovu
ret
push
xorw
and
mov
sbb
das
imul
movsl
dec
push
sub
jmp
sub
xlat
sbb
lahf
pop
sbb
mov
out
pop
jnp
jmp
mov
push
int
jmp
adc
std
sub
and
dec
mov
int3
addr16
call
das
adcb
dec
mul
call
call
push
ficoms
in
shr
test
popf
loopne
cwtl
int3
sar
or
popf
enter
stos
and
or
lods
inc
fidivrs
decl
jge
cmp
fs
ljmp
xor
jno
pop
dec
shrl
idivb
movsl
xchg
fstps
data16
pop
fstpt
jmp
xor
mov
iret
dec
xor
xchg
cltd
std
push
or
mov
mov
outsb
and
insl
iret
test
dec
jp
lds
mov
leave
sbb
cli
cmp
loopne
decl
sub
imul
mov
lods
scas
stos
jnp
jmp
mov
jge
add
or
adc
adcl
pusha
push
ljmp
clc
mov
xor
xchg
adc
jmp
mov
pop
sub
imul
in
dec
dec
sub
scas
sar
push
fwait
addl
mov
inc
lods
jecxz
mov
cmp
jmp
std
fisttpl
xor
mov
movsb
int
add
adc
push
sub
pop
push
xchg
jle
xor
pop
fs
push
scas
rorl
xorb
aad
xor
mov
repnz
fiadds
push
xchg
xchg
lret
xchg
and
daa
fisubrl
scas
enter
pop
ret
dec
outsb
imul
fdivl
inc
jmp
out
aad
clc
ret
and
int3
pop
stc
mov
push
push
inc
cli
call
jecxz
daa
inc
adc
or
clc
cmpsb
insl
xchg
scas
sbbl
sbb
mov
xor
data16
or
jecxz
nop
ret
jmp
sahf
movsb
shll
and
mov
mov
call
jbe
iret
clc
add
push
jle
movsl
inc
mov
loopne
cmp
cmp
mov
call
pop
ljmp
dec
frstor
ds
dec
and
fcomp
icebp
push
ljmp
fbstp
sahf
adc
cmp
arpl
cltd
xchg
frstpm(287
sbb
fs
pushl
push
je
cli
pop
test
dec
xchg
sub
mov
pop
std
pop
pop
mov
or
add
push
adc
enter
idivl
ret
fcompl
dec
cli
push
insl
xor
movsb
add
push
pop
out
not
cmp
call
fwait
repz
dec
fwait
cltd
fdivrs
dec
cmp
and
and
daa
pop
sbb
cmpsl
mov
in
mov
ja
push
adc
mov
and
pop
mov
mov
lahf
and
and
test
lock
mov
bound
cs
mov
pusha
mov
cwtl
mov
in
fistpll
shl
push
orl
lcall
fs
sets
add
jmp
rorl
xor
inc
inc
ljmp
fildll
jbe
push
or
incl
xorl
lods
fadds
int
xchg
scas
push
xor
mov
insb
inc
hlt
ret
movsb
ss
jns
loop
jp
sub
mov
iret
out
lock
lcall
nop
test
jbe
cmpsb
xchg
inc
inc
in
push
aas
add
dec
push
xchg
jno
or
ljmp
les
aad
int
jge
loope
push
pop
cmp
cmp
cmp
add
jmp
pusha
or
inc
movb
jb
pop
insl
fmuls
repnz
xchg
iret
movsb
cmp
loopne
cli
call
jno
xor
iret
lea
ja
insl
dec
or
xlat
jecxz
mov
dec
mov
repnz
sub
adc
aaa
mov
inc
jecxz
es
notl
cmpsb
adc
adc
in
cwtl
dec
inc
adc
adc
test
cmp
inc
gs
aaa
rclb
adc
xor
mov
popa
lcall
dec
mov
and
or
xchg
sahf
imul
call
cmp
xor
loope
mov
pop
iret
in
cmp
aas
ret
addr16
fildl
pop
aaa
add
cmp
scas
or
sub
jnp
das
lods
mov
xorb
and
andb
lcall
adc
mov
adc
inc
pop
inc
leave
mov
sub
std
cld
ror
sahf
pop
nop
incl
mov
lret
or
imul
jo
lcall
cmp
and
decl
popf
sub
add
push
ljmp
lret
out
in
dec
pop
push
sarb
mov
jg
lcall
pop
and
icebp
add
pop
das
je
push
mov
in
aam
jg
or
cmp
mov
jecxz
and
je
das
adc
incl
add
lret
mov
or
push
pop
test
jmp
and
lret
cwtl
and
mov
call
rolb
stc
mov
sub
das
lock
gs
jg
out
inc
int
aaa
cmp
cmpsl
sbb
lds
jns
imul
imul
pushl
movsl
dec
sub
inc
cmp
mov
jp
rcr
cli
dec
mov
pusha
mov
mov
pushf
jecxz
aaa
sub
mov
jg
jo
je
data16
cmp
lret
call
push
push
add
jge
dec
jno
shll
ret
arpl
pop
mov
jmp
pop
push
cld
es
push
in
inc
dec
xchg
and
or
jns
icebp
mov
sbb
inc
ljmp
std
std
or
jb
decl
xlat
pop
cld
pop
cltd
mov
push
inc
sbb
aad
arpl
dec
push
in
sbb
or
mov
mov
mov
aas
pusha
sbb
pop
loope
loop
subb
pop
lods
rcll
roll
out
aas
clc
mov
inc
pop
int3
sub
xchg
sbb
out
push
adc
sahf
and
mov
jg
or
pushf
les
rcll
jmp
mov
adc
call
jecxz
subl
insb
aas
into
imul
popf
mov
xchg
mov
je
inc
mov
pop
push
cli
mov
cs
les
lock
lcall
push
insl
or
lods
mov
and
imul
out
lods
push
imul
cmp
rolb
mov
inc
xchg
cmpsb
dec
movsb
sub
or
jg
leave
xor
loope
mov
mov
fmul
iret
fiadds
scas
dec
pop
scas
cli
ljmp
sub
mov
out
outsb
loope
and
mov
mov
sti
mov
push
mov
cld
cmp
leave
and
push
cmp
shll
jecxz
xchg
in
dec
in
mov
xchg
mov
je
jmp
out
xchg
enter
incl
adc
xchg
fldenv
dec
and
imul
xchg
pop
sar
decl
jmp
lcall
ljmp
or
aad
fimuls
mov
idiv
ja
dec
sbb
cli
mov
movsb
pusha
add
pop
jb
and
mov
ret
out
mov
pop
xor
insb
mov
cmpsl
cs
cmp
lcall
mov
cmp
stos
pushf
in
xor
testl
ljmp
xchg
add
fwait
ds
push
push
ss
xor
or
sbb
lahf
pop
adc
push
shlb
push
dec
incl
dec
ja
dec
jle
sbb
xchg
jg
rcrb
xchg
in
xchg
test
dec
fimuls
in
sbb
mov
pushf
imul
dec
push
jg
incl
xchg
enter
test
out
sbb
xchg
notb
ljmp
out
cmp
mov
mov
mov
pop
test
mov
cmp
xchg
insb
sti
sub
call
pop
stos
pop
mov
mov
push
aad
push
stos
push
data16
mov
decl
add
pop
and
and
mov
ret
fs
stc
push
dec
je
lock
incl
cmpsl
scas
je
xor
fyl2x
fmul
in
cmp
xchg
jmp
scas
ret
call
cmp
xchg
inc
mov
mull
sahf
aad
sbb
dec
pop
pop
jl
jle
sub
fldenv
aad
cmp
das
add
add
loopne
mov
push
mull
in
scas
xlat
pop
dec
notl
outsb
fdivr
js
jg
jbe
xchg
leave
mov
fsubrs
pop
mov
iret
mov
ja
and
or
ficoms
adc
pushl
add
leave
adc
popf
aam
cmp
roll
push
pop
and
adc
ljmp
jg
test
push
cli
inc
in
andl
sub
mov
lcall
push
sub
data16
movsl
mov
xchg
movups
sarb
aaa
mov
jecxz
adc
ljmp
mov
int3
bound
xchg
stos
call
push
arpl
lcall
jle
sub
sahf
or
and
dec
fisubrl
add
cmp
jg
lcall
test
pop
in
push
xor
sahf
ljmp
aaa
sahf
incl
popf
fcoms
adc
into
out
loop
ret
jecxz
mov
faddl
addr16
cli
popa
loop
inc
insb
shlb
jnp
icebp
xor
lahf
xor
mov
das
loopne
cmc
mov
mov
cmp
mov
call
mov
lea
in
data16
call
mov
stos
sbb
adc
jb
inc
inc
sub
imul
push
push
sub
pushl
out
mov
js
xchg
cmp
ja
adc
xchg
xor
popa
subl
arpl
cwtl
cli
pusha
pop
fsubrs
clc
dec
loop
cmp
pop
movsb
js
test
shll
ljmp
mov
pop
add
scas
lods
jne
mov
mov
in
in
jge
lock
lods
push
push
or
jp
loope
inc
xor
aas
add
aaa
shr
add
in
jnp
pop
jge
cmpb
jle
lcall
lea
push
loope
mov
leave
nop
test
pop
sub
adc
and
imul
push
xor
fidivrs
out
test
cwtl
mov
xchg
daa
pop
inc
call
mov
fwait
cmc
lcall
out
pop
add
cmp
filds
adc
rolb
sbb
xchg
jae
imul
mov
mov
jbe
sbb
push
pop
xchg
outsl
fsubrl
adc
add
jg
push
add
xchg
mov
nop
inc
sub
in
imul
sti
fdivs
mov
aad
and
js
jecxz
pop
dec
cmc
je
out
decl
mov
sbb
xor
mov
lea
or
dec
lret
add
push
cld
scas
jl
xchg
dec
xor
adc
lock
push
bound
xor
loop
outsb
addb
and
add
mov
cmp
ljmp
mov
out
insl
stc
or
dec
xor
and
inc
out
jmp
or
cmp
aaa
xor
sti
leave
lods
out
push
cld
in
sub
jle
fstps
std
and
dec
mov
stos
sub
or
ljmp
scas
sbb
incl
cld
xor
les
in
pop
or
add
sahf
movsb
popf
js
leave
and
inc
push
je
dec
add
push
js
jmp
subb
mov
push
cmpb
scas
adc
call
sub
pop
sub
movsl
imul
fs
sbb
jmp
or
mov
mov
cwtl
lcall
daa
xor
jmp
jns
and
xor
add
xorl
add
test
lcall
mov
js
fiadds
inc
sarb
jbe
outsb
xchg
test
jbe
cmpsb
mov
mov
orl
mov
mov
or
imul
push
jg
lock
outsl
push
jo
add
jo
jno
pop
das
cmp
leave
out
incl
out
call
les
out
pop
into
out
sbb
xor
fidivl
decl
push
mov
stos
dec
in
sub
cltd
cmc
loop
push
out
sbb
xor
mov
jmp
mov
subl
xchg
push
add
call
loop
xor
cltd
dec
in
xchg
loop
or
add
incl
cmc
mov
mov
lcall
sbb
in
out
mov
popa
sbb
xor
rolb
cmp
incl
inc
push
repnz
fsubrl
cmpb
leave
daa
xchg
hlt
inc
jmp
icebp
sub
out
fbld
ja
xor
pop
lcall
das
int3
xchg
jns
aam
dec
pop
or
adc
sub
daa
push
in
shl
arpl
loopne
ljmp
addb
xchg
or
mov
xchg
invlpg
or
ljmp
inc
add
jl
ret
push
and
push
dec
mov
jno
stos
xor
decl
xchg
push
add
xor
push
push
xchg
test
aas
ljmp
lods
ret
pushl
arpl
int
je
out
cmpb
orb
mov
mov
cmp
and
clc
push
scas
adcl
inc
stos
decl
or
mov
add
aad
adc
cmp
cmp
out
adc
pushl
pop
inc
inc
sub
cmpsl
fldenv
inc
or
ja
clc
mov
cmp
pop
cmc
or
jle
cmp
mov
sbb
or
pop
movsb
mov
aas
pushl
fdivl
mov
nop
pop
sbb
test
lret
mov
mov
sub
or
repz
cmp
testl
call
cmp
jl
cmc
rclb
mov
dec
and
pop
push
xchg
mov
jno
data16
stos
or
lcall
jmp
fsubs
mov
push
jg
dec
popa
mov
aaa
xchg
out
xorb
pushl
rep
iret
hlt
dec
movsl
mov
insb
mov
flds
jne
lcall
sub
int
std
ja
fdivrl
jl
dec
fdivrl
icebp
insl
xlat
fstps
jbe
iret
mov
mov
xor
cmp
pop
aam
and
ret
aaa
adc
in
cld
aaa
data16
loop
sub
pop
mov
loope
sbb
jp
cmp
daa
push
xchg
mov
fcompl
dec
div
incl
call
je
add
xor
mov
je
lret
dec
push
mov
xor
stc
push
inc
xchg
sub
adc
popf
cmp
jno
sbb
pusha
cmp
leave
dec
sbb
aad
js
adc
repz
stos
in
or
xor
scas
pop
fsts
fiaddl
out
and
cmp
aaa
rcrl
imull
push
aam
adc
rcrb
adc
mov
adc
push
dec
mov
ds
dec
into
adc
pushl
pop
push
fsubs
and
sbb
pushf
jle
mov
and
mov
sub
jmp
inc
push
sub
push
sti
je
aaa
inc
push
or
dec
jne
std
dec
icebp
out
incl
push
into
es
ss
repz
mov
dec
push
fwait
mov
aaa
and
mov
jbe
stos
inc
popf
fdivl
outsb
test
aas
cli
jecxz
fcoml
jnp
mov
add
cs
jnp
sub
pop
imul
fs
xchg
mov
jns
mov
sub
popf
fsubp
mov
push
test
cmpsb
ljmp
pop
movsb
add
icebp
icebp
or
xorl
jae
fistpll
cmp
mov
repz
ljmp
popf
cmc
enter
imul
test
lods
mov
push
jne
in
les
mov
daa
mov
test
sbbb
cld
sbb
gs
jmp
mov
push
push
out
movsl
xor
idiv
mov
loop
cmp
test
inc
fwait
and
lcall
mov
xor
adc
jae
pop
cmp
inc
push
xlat
mov
call
xchg
cmc
std
push
sub
icebp
push
adc
jne
xchg
cmp
incl
sub
adc
add
sbb
cmp
jle
pop
sub
push
adc
aam
mov
xchg
into
in
pop
js
and
mov
dec
jg
iret
mov
pusha
int3
xchg
lock
or
lahf
cmc
lcall
jnp
sar
mov
sub
hlt
cmp
mov
cmpsl
xchg
orl
repnz
mov
mov
mov
or
jo
testb
mov
cmpb
inc
jb
and
xlat
insb
outsl
push
popf
mov
fsubr
aad
push
jg
lret
idivl
mov
mov
rcrl
and
movsb
mov
xor
mov
dec
or
adc
cmp
loop
pop
popa
in
out
xor
pop
xor
add
pop
mov
sub
sub
fwait
sbb
mov
cwtl
cmpsb
lods
test
dec
jl
mov
call
push
add
stc
sbb
add
mov
scas
jmp
or
sti
and
sbb
mov
scas
icebp
decl
sbb
imul
xor
sub
data16
cmp
cs
dec
jmp
fbstp
mov
in
mov
mov
xor
add
rolb
pop
clc
ja
clc
ljmp
or
or
adc
and
decl
popa
pop
cmc
ljmp
and
mov
cmp
jmp
inc
cmp
mov
mov
out
sub
insl
je
sbb
in
dec
lods
std
push
mov
test
repz
cld
dec
call
push
call
aam
inc
push
jnp
cltd
cmp
inc
adc
cld
aas
dec
fcomip
cmpsl
sub
mov
sbb
jae
ljmp
mov
mov
ljmp
test
divb
fiadds
dec
stos
mov
pop
pop
mov
xlat
or
int3
sar
lcall
sahf
and
stc
cmp
xor
outsl
stos
sti
shll
jb
bound
icebp
jb
call
or
leave
lcall
sub
insb
pop
movsb
cld
test
incl
add
rcrl
cmpb
inc
subb
ret
icebp
lods
sti
adc
decl
dec
in
jle
xchg
icebp
jge
xor
mov
jb
cs
ret
test
lcall
loop
adc
xchg
cmp
jle
leave
pop
cmp
leave
cltd
add
dec
inc
dec
jge
and
leave
lock
gs
add
fisttpl
push
outsb
stos
jecxz
cmp
or
insl
iret
xchg
mov
mov
incl
shr
fwait
pop
cmp
fadds
outsl
mulb
pop
fcoml
adc
mov
jp
cmc
in
lea
jno
movsb
bound
bound
dec
test
adc
cmp
sbb
sub
lods
cli
push
decl
sub
test
sub
fildl
mov
daa
andb
rcrb
pop
imul
icebp
mov
sub
shrl
add
adc
test
popa
adc
jmp
js
jbe
and
in
mov
sub
or
jno
fs
cmp
test
push
movsl
mov
incl
std
jl
adc
jae
xchg
lods
data16
das
call
add
mov
ja
xchg
adc
jmp
jg
es
pop
stc
outsb
aaa
cmp
das
into
add
paddb
movb
push
pop
cmp
xlat
std
sar
jmp
jg
clc
aaa
xor
sbb
jb
clc
pop
mov
inc
rcr
repnz
mov
ljmp
lcall
imul
pop
cmc
outsl
cld
push
cmp
sbb
push
mov
incl
push
es
mov
xor
lock
out
popf
mov
out
cmc
or
pushl
roll
fnsave
arpl
sti
jl
decb
xchg
push
incl
test
enter
push
out
outsb
sti
cli
std
fistpl
sub
jnp
lret
aam
jo
aad
sbb
je
mov
push
sub
mov
mov
lods
xor
pop
out
sarl
cmp
xchg
push
ljmp
imul
xor
lcall
ret
lcall
sbb
loop
mov
addr16
cmpsl
mov
xor
in
das
jo
mov
xor
lcall
push
into
mov
or
mov
in
into
outsl
jmp
add
test
dec
sbb
jg
mov
xchg
mov
mulb
mov
pushl
add
mov
inc
or
das
cmp
pop
or
fnstsw
dec
iret
test
andl
out
pop
repnz
fcompl
mov
pop
add
cli
dec
push
pop
push
push
fst
adc
fisttpll
pop
js
and
std
mov
cltd
sbb
push
mov
xor
ret
enter
lcall
mov
xchg
sbb
hlt
mov
dec
in
add
inc
pop
jl
push
jbe
sub
jnp
decl
jmp
lods
nop
js
stos
fwait
gs
xchg
pop
popa
loop
cmpsl
dec
std
js
dec
ss
ljmp
clc
mov
inc
mov
pusha
enter
push
addr16
jbe
es
push
sar
roll
cmpsb
mov
push
add
mov
rcrl
push
fildl
testl
jns
add
sbbl
xor
sahf
sbb
sahf
jb
pop
aas
jbe
stos
xor
call
lcall
addl
cmp
sub
imul
adc
mov
in
mov
sub
xchg
in
fbld
sbb
cmp
and
and
lahf
into
xor
out
insb
and
roll
outsl
inc
mov
stos
sahf
mov
imul
fcomip
decl
xchg
mov
pop
mov
pop
int3
xchg
jns
mov
and
sti
es
stc
pop
inc
addl
lods
ljmp
mov
out
and
sbb
pushl
inc
pop
push
cmp
out
cmp
mov
enter
psubd
fwait
lret
fbld
adc
push
mov
rcl
push
ds
ja
lock
add
or
in
adc
addr16
mov
cmpsb
pop
jb
mov
pop
xchg
mov
das
inc
insb
and
pushl
aas
stos
push
lock
and
xchg
mov
in
sub
sbb
int
or
lcall
push
and
sbb
cmp
sub
mov
scas
call
notb
jmp
leave
xchg
aam
sbb
fisubs
add
mov
jp
test
sub
imul
ljmp
mov
das
sbb
data16
push
xchg
push
adc
dec
jmp
push
ljmp
add
jmp
push
jecxz
lret
xchg
mov
fdivr
test
shl
jns
cltd
adc
mov
scas
mov
xor
jno
adc
jmp
mov
aam
pop
add
adcb
addr16
push
mov
add
push
decl
jbe
sbb
stc
push
shlb
shl
test
xor
lcall
int3
cmp
lcall
les
mov
cmp
sbb
pop
movsl
insb
mov
scas
dec
adc
jmp
jmp
or
push
cltd
mov
xchg
lcall
mov
jmp
sti
js
mov
cmpsb
movsb
add
fwait
cmp
or
clc
sti
mov
push
sbb
jmp
in
push
xchg
mov
sbb
dec
iret
lods
adcb
xlat
pushl
jb
mov
in
rorb
lds
and
sbb
and
mov
stos
pusha
lcall
adc
jbe
dec
adc
cmp
xchg
cmp
sbb
fcomip
decl
xor
lret
cmp
xlat
nop
outsb
arpl
int3
dec
pop
ret
push
push
xor
pusha
aaa
inc
push
call
mov
cmp
add
dec
or
jb
push
int
ret
xor
icebp
call
stc
mov
jmp
test
mov
sahf
dec
cld
dec
test
mov
repz
push
sbb
incl
cld
incl
jno
push
cmp
mov
jne
test
jg
call
inc
in
nop
sbb
push
adc
push
add
insl
in
jne
loopne
loop
lcall
mov
jmp
test
std
push
in
iret
cwtl
inc
pop
repnz
inc
sbb
sysret
mov
inc
ds
dec
and
push
pushl
aam
jae
jmp
xor
jp
mov
shr
jl
xor
cmp
xchg
rorb
add
pop
or
jbe
cmpsl
xchg
fadd
popf
outsb
mov
mov
lock
fstl
out
lcall
roll
fldl
pushl
fs
xchg
aam
mov
lea
sbb
mov
xor
mov
dec
inc
xor
sahf
mov
aam
xor
mov
pop
aaa
in
data16
decl
out
push
xchg
sub
mov
out
jae
and
lahf
ljmp
mov
push
push
jl
das
ljmp
push
js
push
sbb
pop
sub
call
xlat
sub
jmp
fistps
sbb
dec
inc
add
fcmovnbe
in
jg
mov
cltd
imul
xchg
aaa
test
cmp
insl
inc
push
leave
mov
fldt
shl
lret
mov
in
mov
or
div
cmpsb
jge
sub
jp
and
dec
ljmp
xchg
insl
push
inc
jp
push
cmc
jmp
jg
jae
jp
fwait
and
jl
push
lods
mov
push
inc
gs
inc
and
adc
test
cmp
cmp
incl
pushf
mov
adc
jo
rcrb
xchg
pop
int3
and
into
xchg
stos
adc
fstpt
insb
add
adc
cli
decl
pop
ret
push
mov
jns
gs
hlt
or
jnp
gs
enter
aaa
je
sar
lcall
jle
adc
xchg
faddp
jnp
aad
cmp
pop
adc
mov
jg
inc
js
and
xor
dec
mov
xlat
shlb
add
inc
add
adc
inc
cmpsl
scas
repnz
push
and
into
mov
jne
fs
cmp
clc
jmp
xor
call
in
add
xchg
adc
cmp
xor
gs
ljmp
sub
repz
rcll
lock
pop
cmpsl
jge
int3
test
cmp
mov
ljmp
adc
mov
jl
add
dec
mov
int
jg
lods
sbb
lcall
jg,pn
cltd
hlt
cmpsl
pop
adc
and
xchg
add
ljmp
or
lcall
jns
movsl
sahf
adc
cmp
mov
movsb
jae
mov
cwtl
dec
scas
push
push
add
decl
xchg
loopne
scas
pop
add
aam
mov
xorb
decl
jle
loopne
xchg
xchg
jg
push
xchg
test
jb
mov
decl
mov
push
xchg
add
cld
movsl
jo
ljmp
stos
repz
stc
jmp
gs
and
xchg
push
ss
hlt
notb
aaa
cmp
sub
movsl
lods
sar
mov
popf
jns
mov
mov
popf
ret
mov
pusha
dec
dec
jle
pop
js
cmp
xor
std
jne
cmp
jl
daa
xchg
je
std
cmp
arpl
fldcw
xchg
jp
stos
lret
jmp
mov
add
data16
push
adc
test
sahf
or
ficompl
pop
fisubrl
pushl
clc
aaa
pop
mov
inc
and
sahf
cmp
adc
cmpsl
pop
and
pop
loop
lods
inc
jmp
jge
pop
out
ja
push
xor
mov
push
call
rcr
orb
jmp
mov
mov
cmp
fwait
mov
or
sub
call
sub
cmp
std
xchg
lods
inc
fsts
pop
add
into
inc
mov
dec
in
dec
je
or
sbb
mov
cmp
std
movsb
or
hlt
ljmp
mov
add
lods
sub
push
jne
cmp
mov
std
or
fwait
sbb
pop
inc
mov
dec
stc
inc
xchg
add
dec
cli
push
inc
dec
clc
pop
push
cld
ljmp
loope
adc
mov
stos
jae
and
pop
inc
push
mov
mov
cld
decl
in
dec
xor
push
pop
add
inc
adc
inc
jno
cmp
dec
clc
mov
mov
sub
rcrb
sub
in
mov
ret
push
cltd
sbbl
mov
pusha
and
mov
rcrl
out
add
jp
stc
dec
and
push
call
jbe
push
jl
mov
loop
incb
enter
movsb
xor
andl
push
push
sub
mov
sub
call
xchg
cmp
sub
xor
cmp
imul
sarb
mov
dec
sub
call
sub
fldcw
jno
push
inc
rcl
mov
lods
movsb
clc
bound
loopne
pushf
movsl
cmp
sbb
pop
popa
mov
out
sbb
test
mov
and
outsl
mov
push
out
enter
iret
jl
sahf
jmp
add
jno
mov
pushl
cmpsl
stos
mov
cmp
aad
and
jns
fistps
pop
jle
jb
mov
mov
adc
push
cmp
lcall
rcll
fdecstp
pop
and
repnz
inc
add
xchg
and
pop
or
pop
fldl
std
incl
lea
pop
xchg
fs
dec
xor
cmp
icebp
pushl
sub
clc
pop
jcxz
jp
fwait
add
mov
push
push
mov
pusha
dec
mov
xchg
mov
or
push
loope
call
adc
mov
xchg
shll
mov
adc
cltd
mov
int3
cltd
inc
incl
jae
cmpsb
mov
movsb
in
xchg
mov
xor
push
push
fdiv
das
adc
jno
decl
lods
pop
dec
arpl
aaa
add
cmp
stos
orl
jmp
inc
or
imulb
and
jle
push
cmpsb
cmp
add
pop
pop
outsl
push
inc
mov
adc
orb
pop
mov
or
rclb
loop
in
nop
out
sub
jbe
bound
stos
lods
mov
test
idiv
lcall
sub
xchg
inc
popf
jmp
in
push
adc
inc
imul
sbb
mov
jmp
nop
inc
punpckldq
jmp
add
test
sbb
jge
sbb
decl
mov
mov
sbb
push
push
aas
mov
or
mov
decl
add
jbe
sahf
andb
push
leave
repnz
sub
and
call
lea
add
or
cld
adc
adc
push
repz
push
aam
les
gs
xor
stos
bound
je
mov
sbb
fcomps
dec
fcmovu
insl
ljmp
push
xchg
cld
cltd
loopne
es
pop
adc
lcall
arpl
incl
add
pop
dec
xchg
rolb
inc
cmp
call
xor
hlt
or
bound
sbb
sub
adc
test
sahf
decl
xor
clc
jne
in
scas
dec
adc
loop
mov
ljmp
sbb
mov
dec
push
adc
ljmp
sub
or
push
xor
sbb
outsl
cli
fistps
outsb
mov
pop
dec
jo
cmp
mov
mov
adc
inc
jmp
lret
fld
inc
pusha
bound
dec
rclb
push
nop
nop
dec
sub
dec
inc
cmp
ret
test
stc
sbb
out
stos
mov
push
jle
pop
xchg
addr16
adc
dec
mov
aam
jg
dec
mov
adc
roll
or
aad
dec
dec
cwtl
lcall
xor
xor
mov
stos
inc
mov
cmpsb
push
jo
sbb
xchg
add
call
pop
mov
enter
cwtl
out
push
in
mov
push
pop
mov
ljmp
pushl
xor
jmp
mov
or
xchg
mov
test
mov
fimull
lcall
dec
sbb
add
pop
out
mov
ds
mov
mov
dec
cmp
movsb
jge
xchg
mov
inc
push
movsb
jb
add
sub
cmpsb
inc
jmp
ljmp
cli
mov
ror
orl
mov
dec
not
out
add
sar
lods
outsb
and
imul
fcompl
setae
mov
gs
incl
push
add
mov
les
ljmp
pop
idiv
lcall
mov
push
push
xchg
mov
mov
pushf
insl
in
ficompl
adc
push
leave
cmpsl
xor
pop
into
dec
adc
js
add
dec
or
lcall
cld
mov
sub
jp
call
jnp
loopne
popl
sub
call
sub
cmp
insb
inc
fwait
sbb
arpl
pushf
pop
mov
js
lock
jo
pop
data16
ljmp
cltd
test
pop
and
lock
bound
dec
addr16
pushf
mov
mov
fcmovu
ret
lock
or
in
stos
or
push
int3
lea
ret
test
jmp
test
ret
mov
mov
ljmp
movsb
divb
xor
jg
jmp
lock
inc
pop
cmpsl
scas
pop
fdivs
cmp
ds
fldl
icebp
push
cmpsb
and
jg
ja
jae
mov
adc
pop
nop
scas
fildll
popf
enter
or
add
pop
xor
sarb
lcall
xchg
xchg
mov
fsts
movsl
and
mov
ret
sub
sbb
pop
ret
call
jge
and
ja
add
repz
inc
or
and
insb
mov
fcomps
xlat
xor
jo
xor
aad
sar
call
dec
sub
in
and
stc
dec
mov
sub
stos
das
mov
orb
loope
push
fsts
mov
lds
mov
nop
adc
mov
int3
das
cli
decl
out
sbb
je
pop
mov
push
je
inc
jno
jbe
jno
lcall
push
fidivrs
sub
cmp
add
cmp
adc
push
mov
ja
out
cli
call
jns
cmpsl
aas
cwtl
insb
xchg
icebp
je
sbb
pop
ljmp
mov
inc
mov
mov
add
push
aad
mov
and
sub
pop
cmc
pushl
inc
movsl
cmp
lret
mov
cltd
xor
sub
filds
push
cmp
outsl
xchg
movsb
adcb
pop
xchg
lcall
hlt
pop
data16
cli
sarl
dec
ss
dec
inc
xchg
inc
cli
dec
repnz
push
mov
push
ljmp
pop
imul
insl
js
push
test
incl
lcall
addr16
adcb
mov
sub
out
xor
mov
call
outsl
vcvtpd2ps
clc
cmp
aaa
lret
or
arpl
jg
jmp
cli
lea
xchg
xor
out
xchg
jmp
or
mov
mov
inc
sbb
sahf
fcomi
and
push
dec
jge
lcall
lcall
xlat
xchg
or
and
mov
into
and
scas
popf
mov
aaa
je
sub
cmp
ds
bound
push
ds
movsb
mov
xlat
lock
popa
outsb
in
pop
mov
mov
aas
mov
mov
and
popf
add
repz
inc
inc
gs
pop
sub
sbb
rcll
fidivs
pushf
scas
popf
dec
pop
or
push
imul
pushl
push
mov
mov
in
shl
rorb
insl
lods
cmp
pop
mov
fs
decl
stos
push
add
xlat
cmpsb
int3
in
movsl
je
dec
aad
out
xchg
xlat
adc
inc
pushf
sbb
lcall
scas
hlt
cmp
and
pop
push
hlt
icebp
mov
je
insb
mov
insl
iret
mov
sbb
sub
inc
push
ljmp
sti
inc
jne
add
or
inc
pushf
dec
fs
enter
xor
inc
sti
sub
cmc
cmp
lds
pop
push
outsl
in
push
sbb
pop
ljmp
out
rcll
push
test
loope
cmp
test
popa
xchg
pop
test
std
add
outsl
mov
daa
bound
and
es
push
mov
jno
decl
fmuls
pop
mov
fidivrl
push
pusha
in
sbb
test
arpl
push
jle
jmp
xor
inc
sub
cmp
adc
je
rorl
dec
dec
ret
add
incl
inc
in
xchg
outsl
sbb
subb
and
xchg
addr16
push
or
cmp
fstpt
shll
and
jecxz
jb
inc
arpl
nop
jle
in
sub
push
push
cli
es
xlat
mov
sbb
call
adc
ljmp
adc
test
inc
andb
popa
add
imul
insb
mov
mov
out
mov
loope
mov
push
lds
clc
out
sbb
call
icebp
dec
mov
call
inc
sti
dec
dec
xchg
jb
push
push
jg
jmp
adc
cmpsl
dec
mov
adc
jg
test
mull
mov
xlat
inc
loope
lret
cltd
clc
push
test
mov
jmp
xlat
sbb
lahf
cmc
hlt
lcall
call
cmpsb
daa
mov
push
ss
jno
push
inc
shrl
scas
mov
int
jg
pop
test
icebp
test
cmp
push
testl
ret
add
sarl
in
push
mov
int3
sbb
and
sub
mov
decl
ret
cmp
and
sub
cltd
add
sarb
icebp
mov
popf
xor
ljmp
insb
jb
push
test
scas
or
cld
dec
mov
cmc
jecxz
shll
xchg
jmp
xchg
outsb
clc
je
xchg
out
mov
js
ljmp
mov
jg
ds
mov
out
ljmp
cli
das
sahf
test
js
push
add
mov
mov
dec
fcoml
jecxz
decl
sti
cmp
nop
daa
aam
pop
inc
in
test
scas
notb
fwait
push
adc
fwait
clc
jnp
push
push
arpl
sahf
das
mov
mov
lcall
mov
aam
in
sahf
jnp
jecxz
push
loope
dec
jg
pushl
or
das
mov
test
orb
pop
test
lcall
jmp
mov
adc
cli
jge
jbe
fdivp
xchg
outsb
ret
xor
push
dec
jae
lock
decl
adc
xor
jo
in
xlat
push
rcll
cmp
call
ret
dec
pop
or
iret
daa
jl
js
pop
stos
push
movsl
mov
cmpsb
xor
jmp
add
xchg
add
mov
xchg
jnp
rolb
aam
pop
cmp
push
cmpsb
dec
jg
sub
incb
cmp
lcall
mov
imul
mov
push
js
pusha
xchg
cmp
dec
jnp
decb
lcall
lcall
imul
stos
aad
adc
pop
push
inc
test
mov
clc
pop
lret
xchg
sti
ljmp
fidivl
xor
addl
sbb
lods
cs
in
xchg
xchg
dec
and
jg
js
fistps
sbb
mov
or
in
jl
data16
leave
pop
push
incl
fs
sbb
iret
mov
ds
cmp
and
lcall
call
pop
lea
fidivrl
imul
mov
xchg
sub
movsb
clc
add
ljmp
pusha
lret
rorl
cmp
xchg
push
pushf
out
inc
mov
mull
aas
xchg
lahf
and
pop
jmp
shr
repnz
or
inc
aam
aas
jno
or
shrb
or
jmp
mov
inc
add
ljmp
rclb
out
sti
adc
inc
sub
pop
fnstenv
loop
xchg
ja
in
jl
cli
lds
jnp
decl
loope
jmp
ljmp
fbld
ljmp
pushl
cld
rcll
pushf
insl
xchg
scas
dec
aas
jnp
jo
dec
xlat
jge
or
adc
add
sbb
lods
and
xchg
push
repnz
lds
clc
hlt
fcmovnu
xor
call
outsb
mov
xor
mov
rcrb
jo
aaa
or
inc
cmp
adc
push
mov
xor
repz
loop
popa
sub
aaa
imul
xor
mov
lcall
xor
cmpl
ret
sub
lds
mov
ljmp
mov
out
cmpl
popf
add
enter
fnstcw
incl
bound
in
in
xchg
cmp
out
xor
insb
scas
push
adcb
mov
subb
fcmovnbe
daa
cmp
inc
loope
jg
push
sub
add
xchg
xchg
jg
add
in
sbb
sbb
inc
std
call
cmp
mov
xchg
xchg
test
mov
ret
jge
stc
mov
lret
add
push
dec
jno
movsb
arpl
add
mov
pop
pop
or
xor
push
jbe
pop
bound
mov
rcr
aas
das
iret
popa
call
in
dec
mov
push
dec
inc
mov
sbb
out
addr16
outsl
cli
ja
xor
xor
mov
outsl
lcall
push
fisubl
enter
incl
adc
pop
lahf
xor
int3
es
pop
adc
lcall
sbb
jmp
and
push
or
xchg
add
mov
cmpb
in
jmp
pop
xchg
and
mov
ljmp
mov
cmc
in
popf
outsl
jmp
cld
dec
enter
lods
sbb
dec
push
jl
mov
je
pushf
dec
imull
sub
jo
call
popf
test
hlt
addb
sub
in
pop
mov
inc
ja
movsl
dec
loop
out
lcall
jne
fsubrs
jbe
jg
add
add
mov
loope
or
gs
jns
jmp
out
or
sub
shl
inc
dec
xor
mov
sbb
xlat
clc
sub
adc
pop
aad
fisttpll
repz
fsubr
in
mov
mov
inc
ret
xchg
mov
and
mov
cwtl
adc
jno
in
out
loop
mov
rclb
cltd
test
out
cli
decl
inc
inc
test
lcall
sub
mov
push
lcall
stos
movsl
cmp
das
sub
stos
mov
adc
popa
add
inc
jge
jmp
bound
and
hlt
xchg
jb
sub
repnz
xchg
mov
adc
pushl
cld
call
jae,pn
test
jmp
ja
les
adc
fwait
sti
idiv
jmp
repz
out
fcoms
and
aas
je
sbb
test
lcall
dec
ja
movl
mov
inc
mov
mov
jp
leave
sahf
loopne
pop
sbbl
aad
inc
mov
fnstsw
xor
pop
cmpsl
pop
xor
sbb
fsub
push
cmc
xchg
lahf
ja
incl
mov
cwtl
loopne
ret
nop
int
xchg
mov
incl
and
in
insl
bound
mov
xchg
lahf
push
daa
inc
mov
inc
clc
jmp
ficomps
adc
inc
bound
out
sub
lcall
mov
jmp
sti
call
add
adc
add
hlt
cltd
out
ds
inc
nop
ret
fsubrs
add
icebp
inc
xchg
aam
mov
or
fldl
pop
xor
addr16
pushl
outsl
cltd
out
mov
icebp
divl
and
pop
xor
cmp
and
fidivl
decl
mov
shrb
pop
jae
daa
rcl
mov
mov
sbb
cmp
or
or
lds
enter
call
ud1
xchg
mov
jne
or
aas
dec
pop
gs
decl
mov
add
cmp
dec
sub
movsb
std
xchg
jmp
mov
cmp
mov
push
xor
add
and
inc
inc
jp
movzbl
inc
pop
mov
loopne
or
inc
mov
mov
insl
dec
cmpsl
pop
ljmp
stc
sbb
fwait
lahf
cmp
out
sbb
bound
mov
repz
xchg
xor
imul
sub
aaa
pushl
adc
sub
inc
jno
and
jno
out
lods
add
in
out
mov
jecxz
leave
cmc
decl
xor
cmp
mov
mov
push
jl
add
ljmp
cmp
add
mov
xchg
scas
jp
cwtl
cmpsl
mov
lcall
xchg
sub
xor
adc
push
jl
out
dec
add
fs
mov
lock
lcall
gs
aam
notb
dec
sahf
sub
sti
push
hlt
sti
jbe
insb
mov
push
leave
inc
divl
popf
adc
cmp
es
pop
mov
cmp
nop
or
jb
cmp
inc
mov
fdiv
mov
sbb
not
icebp
bnd
imul
movsb
jmp
call
outsb
js
out
hlt
aaa
mov
in
inc
js
dec
cmc
jbe
es
jle
pop
jg
pushl
pop
adc
test
imul
addr16
push
mov
hlt
pop
fs
pushl
incl
cld
xlat
jo
sub
hlt
or
xlat
jl
dec
into
jae
in
scas
pop
cli
push
stos
inc
pop
mov
mov
iret
adc
les
dec
fdivr
out
ljmp
xchg
jne
dec
xchg
add
pop
cs
decl
lock
push
cmp
push
out
sub
pop
imulb
xchg
xchg
mov
mov
xchg
mov
ret
xchg
movsb
or
cmpsb
orb
ffree
pop
lods
shlw
testb
pop
inc
cmp
cltd
xor
pop
outsb
sub
xchg
fldenv
or
int3
stos
call
jns
or
sbbl
mov
out
fcomip
sub
add
lock
in
movsl
addr16
dec
sahf
fisubrl
cmp
loopne
call
out
jb
fcoms
hlt
jb
dec
mov
and
xor
pop
add
rcrl
dec
das
dec
ljmp
sar
pop
clc
pop
out
aaa
xor
add
sub
pop
mov
or
shll
incl
pop
mov
leave
inc
and
and
std
pop
pop
jb
pop
inc
lcall
mov
add
in
adc
add
jbe
lahf
lods
cmpl
xor
and
shrl
push
sub
arpl
test
jle
fcom
movsb
inc
aaa
cld
jmp
pop
xlat
aas
icebp
ror
sbb
insb
pop
sub
jecxz
and
call
imul
jg
sub
pusha
adc
dec
mov
cmp
add
inc
imul
aaa
ljmp
or
xor
inc
out
adc
fimuls
xchg
movsb
xor
cmpb
xorb
adc
jl
stc
mov
imul
push
popf
jge
cld
mov
xchg
repz
int3
xchg
mov
int3
ds
cli
jg
dec
jg
in
mov
lods
sub
lret
arpl
out
or
xorl
enter
cmpsl
sbb
adcl
xchg
pusha
xor
mov
sub
mov
push
ret
sbb
add
push
sbb
mov
std
out
cmc
sub
push
clc
iret
ja,pn
insb
cmp
adc
mov
push
rorb
jno
xor
adc
ds
stos
cli
decl
dec
mov
cmp
test
rorb
repz
rcl
and
popf
cld
fadds
fwait
add
mov
jb
leave
in
and
push
movsb
jb
clc
cli
insl
mov
insl
xchg
int3
pop
cmpsl
mov
inc
jns
xor
mov
into
jno
call
fsubs
push
sub
cmp
push
or
in
mov
mov
xchg
gs
shl
dec
aad
pusha
xorl
lds
flds
aad
push
cli
pushl
xlat
idivb
pop
pop
roll
mov
push
adc
ljmp
push
stos
lods
dec
cld
roll
into
inc
adc
push
pop
jl
fs
out
sbb
in
out
fwait
in
call
std
cmc
xchg
fs
jbe
arpl
mov
xchg
cli
xlat
hlt
mov
pushf
pushf
decl
into
dec
imul
add
sbb
imul
addr16
pop
push
push
add
decl
sbb
iret
in
pushf
mov
loope
jb
int3
mov
mov
je
jo
xor
pushl
inc
shrl
in
sub
pop
cmp
sahf
nop
xor
repz
jnp
fnstsw
jbe
and
in
setnp
add
mov
push
addr16
mov
pop
cli
call
cmc
sub
scas
in
in
stos
lret
insb
decb
dec
popa
nop
icebp
or
dec
in
xchg
lcall
jbe
data16
xchg
jge
cld
cmp
jge
push
adc
cmc
incl
je
or
jo
dec
scas
jg
xchg
cmp
shlb
push
pop
aas
mov
add
inc
repz
mov
inc
ljmp
fiaddl
test
movsl
jle
and
push
jne
jne
jo
inc
loop
sbb
mov
add
jb
lret
cmp
push
mov
incl
dec
sbb
add
mov
divl
mov
inc
in
cli
stc
xchg
lahf
loope
fisttpll
pushl
jbe
loopne
enter
sahf
or
in
outsb
shrl
lret
xor
cmc
add
mov
mov
or
iret
pop
mov
out
mov
aaa
lret
pop
sub
rcr
fidivrl
dec
js
sti
nop
mov
repnz
or
test
insl
dec
loop
mov
and
pushl
push
push
hlt
stc
sbb
fnstcw
dec
leave
xchg
ficompl
jno
jne
fisttps
mov
jne
int3
inc
cli
jg
insl
outsb
rcll
ret
call
andl
out
iret
add
call
xlat
shlb
sbb
or
mov
std
jle
jo
sbb
in
xchg
orb
incl
roll
loop
inc
xor
jne
aas
stos
mov
adc
out
leave
stos
out
sub
aas
inc
jae
adc
in
lods
pop
jo
push
fiaddl
cmp
add
inc
in
std
in
jb
inc
loope
push
push
cmc
in
aaa
adc
xlat
sbb
jle
add
scas
loop
jg
adc
clc
icebp
push
dec
mov
pop
roll
cmc
aaa
adc
pop
lock
mov
cld
repnz
mov
xchg
xor
in
push
mov
imul
cli
add
jb
jns
or
mov
movsl
xlat
pop
push
jnp
pushl
jle
aaa
push
xor
leave
mov
pop
mov
mov
jbe
les
pushf
mov
sbb
jmp
call
and
xor
jp
adc
repz
xlat
movsb
adc
or
lock
pushl
notl
sbb
scas
std
xor
cmp
add
in
lret
gs
jecxz
jb
in
decl
test
push
arpl
js
inc
push
mov
incl
or
insl
fisubl
push
mov
movsb
call
pop
cli
or
ljmp
cmp
cmp
adc
sub
cmp
cmpsb
call
mov
loop
pop
or
lock
pop
in
call
mov
xor
xor
dec
ret
mov
ror
pop
and
int
mul
dec
in
xor
fimuls
jb
jmp
icebp
dec
adc
xchg
fisubrs
sub
insb
jo
clc
repz
stos
ret
cs
or
filds
jae
dec
ficomps
adc
xor
ss
sub
filds
push
popa
mov
mov
gs
mov
js
lcall
jmp
cmp
call
xchg
lcall
stos
sub
lcall
loope
dec
push
push
clc
sbb
mov
jg
mov
lea
mov
loopne
lods
mov
xchg
icebp
xor
inc
mov
incl
test
pop
xlat
popf
mov
jle
rcrb
rol
rolb
lret
lret
in
incl
sub
fs
outsl
sti
ss
sbb
dec
idiv
mov
jmp
popf
jl
stos
int
jecxz
outsl
cmp
or
mov
nop
cmpsl
dec
sub
xchg
cmp
mov
addr16
pop
mov
shrl
idivl
xor
lret
mov
inc
out
mov
ljmp
fimull
aam
mov
das
rcll
mov
pop
fidivl
push
sbb
mov
push
mov
adc
dec
aad
push
jl
sti
pop
and
shll
cmpsb
ud0
call
in
flds
mov
out
mov
push
xchg
mov
call
xchg
mov
je
sub
jns
or
shrl
ret
fsubrs
pop
repz
incl
and
and
cmp
and
and
lods
movsb
jnp
xchg
adc
jbe
lock
xor
js
xchg
arpl
rcll
mov
popf
clc
ljmp
inc
mov
adc
orl
jle
mov
jge
push
incl
push
addr16
xchg
and
sub
mov
cmp
push
sub
aam
lods
mov
add
jmp
repz
ljmp
lods
mov
call
and
push
adc
pop
dec
add
mov
sub
jne
scas
dec
dec
pushl
es
push
mov
hlt
loopne
rclb
in
mov
scas
aam
int
idivl
imul
push
cld
and
leave
xchg
incl
push
mov
lds
fdivl
jnp
clc
sub
dec
shlb
add
inc
sbb
test
sti
cmp
dec
xor
lods
cwtl
test
in
jno
pushl
pop
dec
loop
negl
in
inc
sahf
shll
imul
pop
orb
incl
xchg
in
pop
xchg
or
mov
mov
pop
pushf
scas
sbb
scas
or
cmpb
dec
jb
out
jp
pop
pop
outsl
clc
and
jg
mov
frstor
subb
xchg
incl
cld
sbb
aam
mov
jmp
arpl
xchg
dec
jp
mov
pop
mov
pop
adc
stos
orl
negb
repz
jmp
or
mov
int3
cmp
mov
pop
jmp
clc
and
loop
add
adc
arpl
jnp
inc
iret
cmp
mov
int3
int
jecxz
fcoms
incl
cmpsl
subb
int3
cmp
mov
sahf
mov
ljmp
clc
std
jp
je
sbb
inc
dec
sub
stos
loope
bound
mov
incl
sub
test
dec
lret
aad
and
sbb
xchg
inc
jmp
jp
mov
pushl
call
push
sbb
bound
cmp
add
or
mov
jns
repnz
jl
stc
dec
xchg
fwait
test
push
lea
in
bound
jnp
dec
scas
push
mov
js
sarl
in
loope
adc
xor
cmp
dec
fs
or
movsl
sar
jmp
push
or
loope
mov
cmp
out
sbb
cmpb
push
mov
bound
ljmp
fcoms
push
lods
mov
jb
divb
in
mov
nop
je
popf
mov
lret
pop
sub
out
stos
das
imul
out
and
jns
sbb
jo
lcall
popa
fldt
popf
add
push
cmp
shll
shrl
xlat
xchg
jge
push
jg
clc
sub
clc
insl
out
mov
and
testb
incl
mov
into
cmpsb
stc
push
adc
test
aaa
add
cmp
lea
xlat
fiadds
jo
incl
cmc
xchg
push
xchg
and
mov
push
inc
and
xchg
mov
jno
cld
jmp
cmp
jb
mov
xchg
add
fidivl
pop
ljmp
aas
movsb
adc
push
mov
les
sahf
into
or
xor
ljmp
jnp
cmc
lds
scas
jno
sbb
shlb
mov
mov
mov
push
adc
les
jbe
inc
and
je
scas
test
sub
add
sbbb
sahf
mov
mov
inc
and
lcall
jno
add
sub
push
mov
dec
mov
sarb
sti
mov
add
or
push
cmp
jne
clc
inc
cs
push
test
cmp
imul
aad
aad
gs
mov
lret
loopne
test
mov
cmpsb
or
inc
icebp
sub
icebp
and
test
mov
sub
test
inc
pop
hlt
dec
and
sbb
inc
xchg
add
jg
adc
ficomps
inc
dec
scas
ja
shrb
fisttps
cwtl
call
mov
inc
sti
cs
roll
pop
mov
clc
or
fdivr
mov
xchg
mov
aad
ret
pushl
repnz
mov
and
xchg
sbb
mov
dec
mov
mov
sbb
decl
pop
imul
xor
mov
rcll
dec
push
mov
scas
jge
pop
cld
ljmp
daa
ret
movsb
pop
xor
pop
les
loopne
pop
sub
push
pushl
push
mov
or
inc
leave
mov
les
cltd
mov
dec
aas
aas
repnz
jmp
mov
jo
outsb
add
dec
mov
test
or
push
call
lahf
or
mov
outsb
aam
adc
push
imul
dec
bound
or
insb
andl
adcb
pop
fs
pop
dec
add
pop
dec
jmp
fadd
push
fildll
pop
dec
repnz
int
add
std
mov
das
fmuls
or
ror
gs
push
outsb
dec
cmp
jg
cmpsl
jns
cmc
clc
repz
cmp
jae
out
mov
sub
fwait
ljmp
out
insl
aaa
dec
jns
mov
je
negl
and
out
movsl
stc
jns
cmp
jae
push
test
outsb
dec
pushl
jl
add
out
pusha
cli
or
mov
outsl
xchg
movsb
sub
movsb
mov
pushl
xchg
aam
mov
bound
sbb
add
mov
pop
bound
mov
gs
ss
dec
nop
stc
jne
jmp
shrb
xor
push
push
jns
lods
test
cmp
xchg
leave
mov
xor
xor
cld
fstl
mov
lods
clc
mov
push
test
repnz
xchg
and
lret
cld
mov
adc
mov
call
pop
nop
pusha
ror
scas
or
cs
cmp
dec
aas
and
and
lcall
data16
call
jp
sarl
fstl
in
xorl
jns
xchg
stos
sbb
sahf
cwtl
jl
in
out
inc
sahf
pop
inc
ja
cwtl
ds
pop
sbb
out
clc
outsb
push
shll
sub
push
jle
cmp
pop
push
mov
push
mov
adc
mov
xor
or
and
popf
mov
push
jecxz
ljmp
add
mov
das
xchg
dec
inc
filds
adc
lahf
or
imul
out
pop
add
js
int
insb
cmp
in
mov
fstpt
jae
sub
pop
int
mov
push
clc
mov
and
enter
adc
lods
sbb
xor
ds
inc
inc
sub
pushf
jnp
les
fwait
loop
stc
mov
shll
incl
test
mov
pop
sarl
jg
dec
insb
add
movsb
aad
pop
cmp
fnsave
mov
lret
mov
mov
negb
fstpl
cmc
mov
pop
pop
repz
sub
cmp
ds
leave
subl
jecxz
imul
push
iret
jl
test
or
jle
dec
adc
repnz
aaa
cld
call
aam
test
arpl
push
or
sub
cltd
mov
xchg
leave
adc
call
cmp
sbb
loop
sbb
adc
pop
push
fwait
and
out
ret
decl
repnz
add
fisubl
into
sub
pop
aaa
xchg
push
push
jmp
jg
xchg
das
insb
das
out
sub
jmp
push
daa
xchg
cmp
rolb
or
insl
dec
incl
cld
inc
out
jne
lcall
xor
cltd
jecxz
fs
pop
cmp
and
mov
pop
and
jl
dec
xor
mov
lahf
mov
lahf
lahf
hlt
or
lcall
jecxz
lock
pop
push
loopne
push
or
jmp
lock
mov
or
jmp
add
test
sbb
fsubp
insl
and
inc
cs
push
call
xchg
cmp
std
int
mov
cld
xchg
push
pop
lret
adc
jl
inc
es
cmp
mov
sbb
pop
dec
mov
dec
sbb
lcall
test
adc
aam
fbstp
loopne
dec
scas
xchg
bound
sbb
mov
jg
xchg
dec
cld
sahf
pop
into
pop
xlat
pop
push
subl
xchg
lret
mov
incl
lahf
add
pop
adcb
lret
mov
push
das
jl
mov
xor
hlt
outsl
mov
push
jg
pop
into
mov
inc
mov
or
mov
adc
dec
adc
jg
mov
jle
inc
hlt
push
sbb
mov
gs
xchg
call
pushf
add
jmp
sbb
clc
fldl
cmp
push
add
aaa
mov
cli
push
mov
jnp
insb
and
dec
in
loopne
push
je
adcb
jmp
rcrb
mov
cmp
incl
mov
push
rcr
cwtl
jg
js
cli
jb
and
mov
jg
sbb
adc
jae
add
into
sub
push
adc
mov
mov
in
xor
sbb
xor
mov
and
or
cmp
out
cmp
push
insb
pop
cmp
xor
les
imul
push
mov
cmp
push
in
dec
outsl
mov
repnz
push
xchg
scas
je
jmp
fsubs
ret
adc
jg
pop
ret
hlt
pushl
push
jecxz
ret
lds
mov
pop
pop
mov
clc
xor
jb
xor
and
cmp
xchg
adc
inc
and
aad
call
adc
sub
mov
leave
mov
mov
dec
mov
mov
rcrb
stos
push
xor
push
sub
mov
xchg
cmp
in
cmp
clc
ljmp
add
adc
aam
js
jb
add
cmp
imul
pop
jp
push
pusha
jne
mov
call
pushf
pop
out
test
dec
outsl
lret
pop
test
and
fcomip
lcall
pusha
fmul
or
and
push
push
mov
lret
push
pop
pushl
mov
add
test
xlat
xchg
sahf
mov
inc
mov
mov
call
cld
fistl
out
push
mov
call
jae
stos
rorl
ja
shrb
incl
adc
or
mov
imul
add
loope
push
seta
pushl
xchg
sub
jne
dec
mov
shr
mov
sbb
fidivrl
mov
mov
ljmp
test
aaa
aam
sub
movb
mov
aad
mov
cmp
loope
mov
jnp
out
js
inc
dec
cmp
inc
xchg
repz
mov
std
into
ljmp
call
dec
and
popa
in
inc
sub
hlt
jne
xchg
add
repz
jmp
mov
mov
mov
mov
and
pop
xor
call
lcall
cmpsb
mov
sbb
pop
inc
sbb
xlat
mov
lock
pushl
pusha
cmp
scas
ljmp
add
inc
push
test
pop
bound
mov
fdivl
imul
into
out
fistpll
enter
ljmp
mov
rcrb
icebp
popf
mov
mov
push
adc
outsb
add
popa
dec
xchg
ds
inc
dec
insb
subl
push
cmp
sti
clc
test
fnsetpm(287
popl
dec
xor
inc
fisubrs
sbb
mov
shlb
push
mov
cs
loopne
and
or
xor
sub
xchg
add
test
adc
icebp
ljmp
xchg
bound
xor
popf
pop
inc
stc
sar
jmp
test
cld
mov
add
sahf
cwtl
ss
cmpl
inc
rolb
aas
lahf
add
lea
push
pop
cmpsb
lods
xor
dec
jg
cmp
sbb
cmpsb
inc
mov
mov
aaa
mov
inc
mov
lcall
fnsave
popf
push
add
push
js
adc
xchg
xor
pop
dec
lods
and
ljmp
and
pmaxsw
xchg
mov
or
push
es
mov
mov
or
imulb
xor
lret
xchg
enter
aam
outsb
inc
aam
mul
mov
mov
pushl
and
loopne
inc
loopne
pushl
or
aad
xchg
in
test
xchg
fldl
stos
and
sub
rorb
daa
push
xor
jne
xchg
dec
or
lods
call
cmp
ss
cmp
mov
in
mov
mov
pop
ja
push
sub
fdivrs
fistpll
or
int3
cmp
push
pop
inc
inc
dec
lods
arpl
xor
es
dec
add
mov
aam
frstor
lock
jmp
bound
gs
jo
fdivs
push
jne
mov
insb
mov
pushl
fistl
aam
inc
pusha
mov
add
xchg
push
lds
jecxz
mov
pop
add
fdivr
mov
enter
mov
fwait
cmc
dec
push
loope
mov
pop
sbb
sar
dec
out
or
ljmp
stos
data16
jne
cmpl
pop
pop
dec
pop
ljmp
nop
and
mov
stos
sub
inc
enter
jecxz
enter
testl
lcall
les
out
sub
pushf
cld
inc
lret
ds
or
aaa
pusha
dec
mov
stos
dec
dec
jg
decl
sarb
cmp
aam
stos
push
rolb
mov
inc
ds
dec
jge
add
cmp
imul
xorl
dec
cmpsb
xchg
or
ljmp
or
shlb
dec
add
in
outsl
in
mov
ljmp
ret
clc
repnz
and
inc
inc
inc
inc
mov
jno
ss
loop
dec
and
push
test
jno
cmp
clc
xor
xchg
cli
imul
xor
xchg
xlat
dec
push
mov
icebp
filds
jmp
pop
hlt
mov
mov
pop
pop
sbb
inc
mov
rolb
xchg
mov
pushl
pop
cmp
fwait
dec
hlt
sub
jae
xchg
les
outsb
cmp
cli
pushl
repz
mov
sti
scas
or
int
jl
clc
jb
sti
mov
cs
call
mov
xchg
cmp
fcmovnbe
adc
nop
bound
int
and
nop
std
incl
push
mov
ljmp
jp
dec
xchg
xchg
lock
mov
lcall
mov
mov
int
jecxz
or
xchg
inc
call
lcall
sahf
xchg
push
jmp
mov
pusha
enter
out
mov
shrb
cld
push
push
fwait
lret
lcall
mov
push
arpl
push
push
out
or
in
dec
shl
or
sar
sub
lcall
fstpl
push
dec
cltd
ret
jl
lock
mov
mov
fldenv
ds
adcl
or
dec
fwait
add
jle
ret
ja
push
std
mov
fs
sub
inc
enter
fistps
ror
icebp
mov
lcall
mov
sti
outsl
mov
sbb
test
pop
maskmovq
testl
ljmp
decb
pop
cmpsl
dec
mov
inc
cmp
clc
lods
inc
test
mov
inc
pop
sti
push
insb
push
mov
and
mov
cmp
fadds
aas
mov
sub
lcall
stc
xchg
jg
cmpsl
pop
jp
pop
pop
js
mov
sub
xchg
imul
fdivp
inc
fnstsw
std
testb
arpl
rcr
nop
decl
push
xor
shll
sbb
sahf
sub
outsl
inc
enter
cli
xor
adc
adc
push
scas
dec
ret
fisttps
or
lds
mov
bound
jns
mov
adcb
jbe
inc
je
iret
pop
rolb
cld
int3
mov
lea
outsl
sbb
fnstsw
in
inc
mov
mov
fwait
lods
jb
cmp
xor
test
lcall
mov
add
aam
jg
pop
mov
or
xor
mov
xlat
xor
jbe
fs
dec
pop
jg
fcmove
jge
add
dec
dec
fcomip
cmc
sub
das
dec
push
pop
mov
lods
mov
and
lcall
aad
lods
std
data16
addr16
shlb
cmp
fidivrl
add
jmp
es
pop
sbb
add
ret
fs
mov
popf
loope
imul
icebp
push
mov
and
jp
jge
rol
mov
ds
sbbb
ljmp
cli
arpl
adc
mov
adc
or
sub
push
jle
out
iret
cli
sub
outsb
fsubrs
icebp
ljmp
dec
lret
cld
jne
xchg
jle
mov
dec
inc
cmpsl
roll
dec
mov
sub
xchg
call
jmp
mov
mov
add
pop
pop
addr16
sbb
sti
out
jmp
inc
adc
lock
icebp
ljmp
icebp
xchg
xchg
mov
jge
inc
lock
mov
cmp
lcall
or
out
sub
xchg
push
addl
and
stos
or
test
dec
dec
clc
incl
scas
and
xchg
pop
pusha
movsb
mov
cs
mov
mov
enter
dec
jle
mov
jecxz
pop
ja,pn
into
jg
outsl
cli
stc
xchg
sbb
jnp
sub
cmp
xchg
mov
ror
inc
data16
clc
incl
dec
cmc
mov
jmp
add
loop
decl
xchg
or
xor
push
push
in
lock
mov
mov
les
xor
xor
rclb
ror
ljmp
inc
daa
xor
aad
ljmp
pushl
dec
mov
movsl
jbe
clc
mov
jo
sub
imul
cmp
xor
push
mov
sub
dec
in
ljmp
in
mov
sbb
inc
mov
movsl
popf
xor
insb
sbb
mov
mov
movsb
or
sti
jecxz
addr16
loopne
js
mov
jmp
fcompl
mov
dec
mov
lcall
hlt
bound
stc
mov
push
lahf
rcrb
lods
movsl
sahf
lock
decl
xchg
xchg
adc
lea
int
negb
mov
sbb
push
jge
pop
ja
jnp
or
fs
xchg
mov
cli
roll
mov
dec
out
xchg
fwait
cmp
incl
adc
mov
adc
jg
in
sub
jmp
xor
push
lods
dec
out
xor
pop
push
popf
and
cltd
xchg
and
sub
xor
stos
ret
lcall
cmp
pop
outsb
loop
movsl
mov
bound
pop
aaa
ja
mov
dec
xchg
xor
xlat
mov
cs
jle
push
jge
sbb
ljmp
loope
mov
leave
adc
or
ret
dec
ds
shlb
ja
jmp
incl
adc
mov
and
add
dec
fs
bound
mov
lcall
lahf
int
fists
ret
jb
sbbb
xchg
dec
clc
xchg
aad
lahf
shlb
in
call
jb
fcomi
stc
rolb
push
gs
mov
aaa
dec
js
and
arpl
ja
aaa
inc
pushl
cmp
or
jp
pushf
aas
push
stos
idiv
mov
jno
mov
xchg
aas
cmp
enter
dec
lea
dec
ljmp
adc
pop
lahf
ret
sbb
jl,pn
cmp
shll
shlb
and
stc
mov
test
jne
add
loope
add
inc
sbb
push
add
ja
xchg
decl
and
cmpsl
popa
pop
jle
bound
call
jmp
sub
xchg
mov
mov
push
inc
jno
into
mov
mov
and
sti
sub
add
fwait
int3
inc
xor
xchg
dec
or
or
pop
lret
repz
repnz
xor
in
inc
sbbb
jno
adc
push
pop
pop
rcrb
cmc
into
lret
inc
add
aad
jmp
add
mov
rorb
inc
or
sub
test
pop
shl
loop
scas
clc
pushl
lea
jb
cmp
cmc
jno
pop
clc
pop
lahf
divl
fcom
ljmp
pop
jne
loop
push
pop
jns
add
jne
adc
or
cmp
jo
mov
rcl
push
imul
nop
shr
cmp
xor
sbb
fcoms
in
cmp
scas
dec
repnz
sbb
mov
sub
push
xchg
out
mov
mov
call
dec
imul
jbe
sbb
pop
loopne
lret
cs
jmp
stos
xor
push
mov
ljmp
mov
adcb
and
xchg
mov
or
lcall
ljmp
push
sbb
fs
lods
cmp
mov
pop
cmp
jmp
cmp
pop
cmp
daa
add
outsl
out
loope
call
xor
and
rcrb
insb
and
call
ljmp
fbstp
xchg
mov
jb
dec
cmc
lock
repz
pop
sub
cs
or
inc
xor
fidivl
ljmp
call
repz
or
lock
scas
pop
loopne
fistps
jmp
out
pop
ficomps
mov
pop
jo
inc
cs
not
pop
dec
loopne
and
pop
jmp
push
and
add
outsw
or
cmc
push
or
or
mov
jmp
sbb
dec
push
xor
push
ja
push
jmp
lret
dec
out
and
jecxz
lahf
call
fs
nop
movsb
out
ret
shll
inc
jg
and
insl
stos
test
sbb
jmp
lods
jnp
jl
mov
fisubs
xlat
stc
sub
je
adc
cld
adc
inc
inc
lods
and
dec
dec
lret
add
jno
inc
bound
pushl
dec
push
imul
push
insl
sbb
sub
dec
mov
lcall
push
cld
outsl
cli
daa
imul
push
jg
lea
out
ljmp
ret
ljmp
insl
mov
lahf
sahf
cmpsb
movsl
fcos
lcall
mov
mov
lock
repnz
dec
lea
jle
mov
inc
or
mov
or
fcomps
xor
out
xchg
and
js
sub
sub
call
push
pop
scas
jo
into
leave
insl
mov
push
cmpsl
inc
addr16
je
push
inc
pop
sbb
cmpsl
mov
pop
sti
xor
xchg
add
or
add
adc
fdivs
jo
popa
jg
add
decl
movsl
cmp
push
jo
push
mov
js
mov
fldln2
mov
cmc
xor
or
decl
pop
popf
in
fistpl
jae
aaa
mulb
iret
stos
out
out
or
lcall
cld
dec
dec
mov
jecxz
sub
jge
addr16
pop
ret
repz
ljmp
mov
mov
or
pop
loope
sbbl
in
mov
popf
enter
cli
mov
cli
hlt
rol
mov
sbb
scas
jno
sbb
mov
mov
jmp
mov
ljmp
sbb
pushf
push
sti
sub
in
cmpsl
xchg
jae
or
je
aaa
fmul
mov
iret
fwait
ljmp
xchg
xchg
pusha
jns
movsb
sub
jne
pusha
or
mov
xchg
pop
dec
gs
push
jne
jmp
call
mov
jbe
sub
in
cmp
call
cli
mov
hlt
aam
add
jno
or
xor
adc
out
pop
mov
call
push
fldl
cld
fstpl
cmp
xchg
xor
jg
scas
stos
pop
mov
dec
dec
push
cmc
mov
pusha
lahf
pop
sub
xchg
fbstp
insb
cld
lcall
fcoms
mov
sbb
loop
xor
stc
inc
push
sbb
and
pushl
iret
movsb
cmp
or
insb
out
adc
sbb
or
movsl
push
lcall
mov
in
sarb
shrl
push
sti
popf
mov
dec
inc
mov
and
incl
shrl
nop
sti
mov
mov
cmpsb
aas
inc
inc
jmp
push
incl
jnp
stc
mov
stc
int3
mov
xchg
inc
cld
aam
xchg
jno
dec
sub
test
push
std
fisttps
jbe
adc
inc
mov
or
sbb
jmp
pushf
mov
push
ljmp
mov
icebp
imul
call
xchg
cmp
cmc
jmp
ss
pop
push
push
pop
sbb
fldcw
cmpsl
aas
xor
ljmp
add
cmp
iret
mov
mov
pop
mov
lcall
xor
imul
stc
mov
pop
inc
xchg
add
sub
mov
sub
mov
popf
pop
cmc
outsl
cmp
xor
sbb
lea
inc
es
adc
call
fwait
daa
mov
mov
sbb
aas
xchg
jns
es
push
cmp
icebp
xchg
cli
pushl
push
test
pop
mov
pop
ret
cmp
push
pop
or
fldcw
nop
add
lds
aaa
std
push
or
jmp
ret
cli
fbstp
mov
cmp
mov
mov
out
test
or
add
push
pusha
sahf
mov
lea
scas
push
jmp
xchg
push
cmp
int3
push
inc
aad
inc
cwtl
jae
lahf
mov
in
int3
xor
fmul
gs
pop
ljmp
inc
aas
sub
inc
push
mov
xor
enter
js
dec
popf
cmpsb
adc
xchg
incl
mov
stos
xor
add
sub
lods
std
sarb
dec
in
pinsrw
jle
aam
inc
mov
add
cmp
sub
jbe
xor
idiv
lcall
pop
push
xchg
and
decb
adc
or
inc
xlat
jl
push
pushl
adc
cmpsb
adc
hlt
nop
test
imul
movsb
popa
and
push
add
jb
ljmp
cwtl
sub
call
inc
fwait
push
jno
fcmovnb
add
mov
mov
inc
sub
lds
mov
notl
repz
hlt
add
out
sub
pop
in
hlt
aad
jecxz
or
jns
xlat
pop
mov
push
pop
sbb
gs
xor
test
mov
mov
imul
bound
mov
dec
and
icebp
jg
add
cmp
loope
nop
mov
jp
hlt
mov
fistpl
call
cmp
xor
int3
in
mov
inc
fstl
dec
adc
insl
sbb
call
pop
dec
cli
add
inc
fistpl
mov
je
in
jmp
fimuls
enter
in
cli
cmpsb
not
dec
in
pop
popa
sub
sub
push
pop
mov
jmp
shrb
lahf
fucomi
xor
cld
cltd
and
adc
inc
sub
lds
lcall
or
add
add
lahf
std
pop
fnstsw
loop
push
or
jmp
or
dec
imul
pop
sbb
and
insb
cs
add
mov
sar
jbe
incl
push
xor
iret
jae
rcrb
jns
mov
sub
xchg
inc
pop
icebp
call
aas
pop
dec
dec
pop
je
add
mov
jae
mov
pop
cmc
ljmp
in
subb
xor
push
adc
fidivrs
mov
mov
and
pop
lret
in
imul
mov
xchg
xchg
repz
ljmp
xor
lahf
xchg
sub
leave
jl
jb
clc
popa
les
inc
pushf
push
sbb
ss
jbe
test
in
mov
lret
out
push
nopl
inc
fs
or
jne
pop
in
mov
jge
dec
neg
and
pop
nop
loopne
dec
repz
lahf
push
nop
mov
mov
sub
push
int
sti
inc
xchg
rcrl
lods
std
xor
outsb
inc
les
jle
faddl
cmpsb
ret
sub
lret
repz
dec
test
pop
sysret
sbb
popa
push
sub
pop
icebp
lcall
push
test
lea
lcall
mov
add
call
add
xchg
sub
jmp
sahf
or
add
sbb
xlat
nop
cli
sbb
jecxz
lcall
stc
sbb
add
adc
rcrl
movsb
jl
decl
mov
inc
fxch
mov
arpl
cmp
nop
sub
test
sub
cmp
jle
or
sub
in
add
push
rorb
imul
call
jecxz
xchg
fbld
sahf
outsl
dec
cli
ds
leave
sub
mov
mov
sbb
mov
icebp
dec
insb
xchg
jbe
into
lret
xchg
inc
fsubrp
pop
and
xlat
enter
jge
jmp
jae
mov
jmp
lret
out
fcmovnu
div
jl
or
call
in
pop
sbbb
cmp
roll
pop
xchg
mov
adcl
push
xchg
sbb
mov
stos
iret
xlat
jle
jo
inc
scas
mov
mov
shrl
mov
ljmp
pusha
rcll
cwtl
pop
add
ss
lret
cwtl
ret
mov
data16
xchg
xchg
pop
cld
pushl
out
aam
daa
clc
jo
inc
add
shl
testl
incl
or
add
repnz
addr16
xchg
mov
ljmp
add
inc
outsl
das
sar
push
xchg
mov
outsb
test
push
mov
jae
xchg
jnp
or
mov
scas
arpl
dec
fisttpl
and
pop
sbb
aas
sti
daa
or
dec
lcall
dec
enter
sti
lock
fstp
sbb
push
pop
and
cld
mov
sbbb
mov
je
jae
scas
xchg
adcb
or
popf
cld
mov
pushl
cltd
ret
jle
cmp
add
mov
sub
inc
xchg
jmp
dec
sbb
dec
push
and
mov
push
push
arpl
cli
cwtl
mov
dec
xchg
xor
out
fcomip
or
jp
int3
mov
mov
dec
pusha
push
fcmovne
ret
xchg
lcall
xchg
sub
jp
data16
mov
and
xor
movsl
and
out
out
loope
enter
mov
xchg
sbb
stc
pop
rorb
and
aad
push
insb
add
inc
out
stc
sbb
iret
clc
int3
shlb
jecxz
popf
pop
stc
xor
dec
pop
push
aas
in
cmp
pushl
jne
push
inc
mov
mov
xchg
dec
xchg
out
ss
js
je
jp
xchg
outsl
inc
lcall
fimull
add
cmc
adc
enclu
jb
dec
dec
scas
in
cmp
mov
and
aas
adc
and
lcall
out
xchg
lea
sub
mov
aaa
test
jae
ficomps
xor
jae
or
pop
and
mov
cmp
lcall
mov
loop
test
addb
pushl
sbb
jge
js
in
sarl
sbb
cld
and
jl
jp
lcall
jae
arpl
insl
mov
ret
pusha
xor
gs
and
push
cwtl
cmp
xchg
and
cltd
mov
and
fiadds
mov
jmp
xchg
mov
jo
pop
push
gs
popa
jb
and
push
cmpsb
mov
pusha
incl
push
ds
pop
push
adc
sub
lock
fisubl
dec
mov
pop
mov
xor
call
adc
popf
aaa
add
clc
or
shll
fwait
loope
mov
call
scas
push
xlat
dec
and
mov
enter
ret
xchg
fisubs
cmp
jnp
or
dec
jae
in
fbld
dec
mov
sahf
jmp
jl
inc
mov
sbb
lret
sbb
and
push
cli
push
cwtl
stc
xchg
xchg
pushl
mov
and
pop
mov
jge
mov
sarl
pop
pop
push
or
push
and
incl
ror
lret
daa
add
enter
adc
ret
shl
jge
imul
fxch
mov
lcall
jecxz
adc
mov
call
xchg
stos
add
mov
rorl
nop
jnp
mov
inc
in
add
pusha
mov
jnp
and
aas
lods
hlt
cld
bound
cli
pop
ljmp
das
sub
js
dec
addl
fnstenv
in
cmp
rclb
pop
dec
test
cmp
scas
inc
push
jne
cmp
or
mov
jno
xchg
faddl
ds
pushl
out
popf
xchg
or
rorl
clc
call
pop
in
jo
jl
pop
mov
inc
dec
or
mov
les
bound
decl
cmpsl
inc
cmp
outsb
mov
xor
iretw
mov
xorb
xor
sbb
cwtl
push
push
xor
fisubrs
jle
mov
pop
push
pop
inc
dec
dec
jno
lcall
and
pushl
stos
pop
sub
xchg
ljmp
inc
or
push
test
sbb
jmp
add
sub
xchg
dec
lret
imul
pop
xchg
jle
arpl
pushf
push
cmpb
lods
sbb
notl
lods
aas
xchg
mov
xchg
arpl
sbb
mov
or
push
xchg
fsubs
inc
shll
add
mov
and
dec
dec
pcmpgtd
dec
ja
sbb
insb
adc
jmp
dec
mov
inc
cli
and
sahf
mov
adc
xchg
outsl
clc
jg
pop
in
push
xchg
insb
loop
ja
aam
andl
psllq
jg
fmull
lds
mov
push
das
pop
sub
ljmp
shll
in
or
movsb
in
add
sbb
test
pop
jg
jbe
aaa
push
cs
outsb
repnz
lcall
jg
fcomps
xor
inc
mov
push
sbb
repnz
cmpsb
lcall
pop
out
stos
test
cmc
mov
fiadds
sqrtps
fwait
and
jp
fisubrl
inc
cwtl
mov
cmc
loopne
inc
xor
std
mov
imul
push
and
push
ljmp
xchg
imul
inc
iret
and
ja
data16
dec
push
cmp
fistps
pushl
test
jae
push
negl
cli
pop
negl
popa
push
pop
in
scas
mov
std
jg
decl
shll
or
push
xlat
lret
addr16
iret
inc
lret
pop
xchg
mov
iret
sub
out
inc
inc
jle
xor
xor
outsb
cmpb
jp
sub
testw
jmp
push
or
and
pop
pusha
daa
dec
xor
bound
iret
mov
call
sarl
and
mov
xchg
mov
bsr
stc
leave
fdivrl
jg
lcall
pop
loop
ss
movsl
add
ret
mov
jmp
push
mov
inc
std
in
cli
add
outsb
adc
icebp
hlt
and
stos
push
xor
popa
jle
incl
or
enter
push
mov
sbb
cmp
pop
jnp
test
sub
mov
sbb
mov
pop
popf
lods
push
ret
and
enter
leave
imulb
jg
mov
lea
xchg
scas
cmp
jne
xchg
sbb
dec
jb
mov
jge
push
mov
in
sub
fiaddl
jmp
lcall
and
lahf
ljmp
sub
sahf
dec
mov
adc
xchg
rolb
insl
int3
sbb
sbb
cmpsb
rolb
jmp
cmc
repz
stc
dec
dec
pop
aaa
mov
mov
enter
aad
xlat
ffreep
inc
mov
jl
insb
mov
rcl
mov
imul
add
test
cmp
add
incl
sub
clc
jns
dec
popa
lods
in
cli
mov
in
hlt
xchg
in
or
fcomip
dec
sub
pop
mov
cmp
add
xchg
sub
cmp
jns
jg
jl
xchg
xor
lahf
sub
inc
lds
lret
pop
adc
in
incl
add
lods
xchg
fs
aaa
insb
inc
push
sub
lret
je
mov
push
mov
dec
xor
or
fisttpl
lcall
push
rcl
sahf
mov
daa
mov
jne
jge
jno
mov
mov
dec
clc
inc
fldcw
into
sub
bound
mov
lcall
leave
jp
cld
out
and
ds
xchg
sub
pop
sub
add
mov
xchg
mov
mov
jno
adc
add
rorb
test
sub
sbb
jmp
dec
mov
jno
movsl
push
add
jl
sarl
rcr
push
dec
ds
pop
jmp
inc
mov
xchg
shll
rcll
pop
push
enter
sbb
lods
sbb
mov
jg
jmp
icebp
fnstsw
xchg
fimull
xor
push
lea
lcall
sub
mov
ds
movsb
or
int
mov
dec
pusha
in
pusha
bound
jge
fcomip
mov
mov
cmp
cmp
adc
jp
and
add
push
test
fsubs
call
subb
pusha
inc
or
and
lds
pop
in
paddq
call
shlb
jp
imul
dec
lcall
jmp
sbbb
cs
jle
push
cmpsl
jne
mov
pushl
in
aad
xor
inc
cmp
mov
test
pushl
dec
mov
jl
jmp
jp
cmp
stc
xor
in
adc
jmp
sub
and
out
jbe
pushf
leave
pop
out
or
test
enter
loope
in
incl
adc
dec
cmpb
mov
push
sbb
pop
cmpsl
add
stos
std
movmskps
mov
xchg
jge
xor
push
movsb
jg
fmuls
fdivl
xor
pop
lods
int3
push
cmp
lcall
push
cli
pop
or
movsb
or
cmp
or
int3
or
lcall
push
nop
sahf
sbb
jae
out
xchg
stc
insb
mov
stos
dec
cmp
fwait
pushl
xchg
push
push
shlb
jnp
or
decl
push
sub
mov
inc
and
inc
mov
pop
xlat
mov
out
lds
mov
orb
test
stos
jmp
bound
sbb
pop
push
mov
cs
jecxz
movsl
xchg
cmp
das
xor
cmp
jg
cld
movsl
fstpt
jbe
add
mov
lret
pop
ja
sub
mov
pop
sbb
add
jmp
mov
js
mov
or
repz
das
cmc
mov
mov
fsubrl
data16
push
xchg
popa
gs
decl
sahf
mov
pusha
cltd
ja
or
nop
xor
das
fistl
lcall
scas
lods
es
imul
out
push
mov
fs
pop
mov
decl
and
cmp
sub
or
ljmp
jl
pcmpgtw
add
jmp
insb
ret
mov
outsl
push
adc
dec
loopne
or
push
jg
mov
jle
adc
push
mov
jge
notl
lahf
cld
sub
mov
nop
cmpsb
mov
pushl
fs
cmp
icebp
xor
xor
and
push
push
leave
inc
xlat
fsubrs
pushl
jp
xchg
mov
and
mov
jge
xchg
fmul
push
popf
stos
sub
movsb
sbb
fdivr
jmp
insb
push
daa
mov
mov
and
aas
mov
push
data16
mov
mov
push
pop
cmp
decl
jae
aas
addr16
xchg
aam
arpl
mov
leave
cmp
fsub
inc
push
jae
decl
incb
add
lcall
popf
add
push
add
inc
stos
cmp
sarb
decl
hlt
scas
scas
outsb
scas
das
and
in
mov
sbb
push
aam
fidivrl
or
add
call
lahf
popa
fwait
fwait
loopne
inc
push
xchg
push
xchg
push
lds
fcmovbe
and
data16
push
pushl
fidivs
mov
adc
iret
or
rcrb
in
fwait
xchg
mov
clc
ljmp
cmc
push
xchg
aaa
dec
movsb
push
push
aad
lcall
push
jg
push
sub
push
call
stc
dec
xchg
cs
loop
lcall
jo
sahf
add
mov
bound
push
dec
ljmp
jmp
pushf
pop
fisttpll
or
jb
scas
decl
clts
cmp
dec
in
mov
inc
int
mov
push
mov
xchg
mov
mov
arpl
pop
loopne
mov
mov
dec
adc
std
or
incl
sbb
sbb
cmp
sti
or
iret
push
dec
mov
mov
cwtl
clc
pop
xchg
dec
scas
jno
popa
lds
jmp
fstl
ja
push
jnp
mov
mov
jg
cmp
jae
out
sub
mov
sub
je
mov
dec
sbb
ljmp
arpl
movb
cmp
pop
mov
nop
jno
mov
xchg
mov
bound
xor
sti
xchg
jne
mov
pop
enter
fwait
bound
sahf
aas
cmc
and
cld
xor
jmp
inc
out
andl
push
cwtl
mov
pcmpeqd
mov
jno
pop
push
jmp
js
out
test
arpl
xor
fs
sahf
sbb
inc
pop
push
sub
mov
in
inc
push
cmp
stc
ljmp
es
adc
dec
mov
andb
lcall
icebp
sbb
movsb
les
outsl
xchg
jae
pop
mov
adc
in
pushf
or
fstpl
mov
ret
unpcklps
cmp
and
xor
test
mov
into
fidivrs
inc
pop
push
incl
insb
push
mov
stos
mov
dec
cmp
fs
jmp
decl
repz
mov
lcall
aam
mov
pushf
push
aad
in
inc
int
and
fiaddl
fisttps
aas
adc
mov
add
pop
push
cld
lcall
sub
fistpll
xor
jbe
and
dec
shll
xchg
inc
sub
push
mov
subb
shrl
test
lock
leave
jbe
ljmp
aad
cwtl
jbe
insl
xchg
or
sbb
or
pop
push
sar
pushl
cmp
stos
ret
mov
aam
inc
imul
lahf
push
xor
ret
mov
fisubl
mov
das
lea
jo
test
aas
out
icebp
ds
jle
cwtl
cld
mov
cmp
inc
pusha
mov
sbb
int3
xchg
xchg
dec
jnp
mov
adc
in
out
in
sub
fidivrs
and
mov
or
adc
sti
mov
jnp
and
xor
cmc
fmuls
push
push
shl
cmpsb
adc
insl
xchg
add
fildl
lods
cmpsl
inc
icebp
cli
loope
ljmp
andb
stos
out
addr16
pop
cs
mov
mov
data16
add
and
out
daa
imul
mov
xchg
mov
decl
or
lods
dec
sub
stos
std
push
cmp
movsl
into
xchg
mov
lcall
add
shlb
mov
push
pop
loop
jmp
fisubs
jg
xchg
lret
jp
das
mov
leave
idivb
je
pop
rcrb
cmp
pop
mov
ljmp
and
aad
xor
rcrb
inc
or
xchg
andb
pop
mov
inc
out
jl
pop
jp
jg
jnp
cmp
add
jae
or
and
aad
adc
pop
xchg
int
adc
sub
ljmp
push
stos
add
ljmp
aas
pop
add
repnz
jmp
mov
add
lcall
fadd
loope
xchg
int
inc
xchg
mov
fnstsw
aas
mov
xlat
out
das
push
or
clc
push
lds
mov
mov
add
roll
mov
and
jbe
mov
pushl
sbb
test
loopne
movsb
xlat
cmp
and
mov
rcr
jl
lods
mov
ljmp
xchg
out
ds
outsl
xor
les
lret
lea
das
and
iret
lods
clc
adc
mov
in
inc
adc
sbb
or
pop
pop
cmp
xor
mov
scas
fs
les
ja
jmp
xchg
rcrb
push
sbb
jg
in
pop
jg
icebp
sbb
jg
icebp
push
sub
jle
and
data16
mov
decl
repz
mov
gs
lahf
inc
add
movsl
add
out
dec
rclb
test
jmp
ds
cld
loopne
mov
pop
mov
in
dec
mov
mov
stos
mov
add
std
insb
in
scas
aas
xchg
je
add
mov
movsb
je
in
adc
fs
mov
out
clc
mov
jbe
sub
xchg
test
jp
pop
rorb
xchg
aas
dec
popf
inc
pushl
cwtl
or
push
mov
fbld
push
addr16
mov
shrb
push
add
or
xchg
loop
push
mov
xchg
mov
fdivr
xchg
push
outsb
pushl
test
call
fcos
fcmovbe
addr16
add
sbb
sarb
hlt
loope
incl
dec
test
push
sbb
inc
pop
mov
mov
pop
pop
xor
jp
cmp
roll
cmp
cmp
mov
mov
xor
xchg
mov
incl
imul
xchg
cmp
cwtl
mov
pop
cmp
pop
rorl
ss
adc
adc
push
jb
mov
and
jb
mov
pop
cmp
jecxz
mov
cmp
inc
push
loop
mov
movl
cmp
repnz
das
inc
push
clc
mov
notl
mov
bound
ret
jae
dec
gs
inc
sub
decl
mov
sbb
cmpsb
cmc
jo
sub
jno
or
incl
pop
and
hlt
jecxz
adc
or
push
push
mov
ficompl
ljmp
inc
dec
and
mov
aas
mov
mov
rorb
mov
incl
inc
pushf
loop
xor
popa
std
fwait
xchg
mov
cmp
mov
iret
das
xchg
jnp
and
lcall
sarb
imul
cltd
push
push
cmp
and
xlat
pop
or
jg
frstor
shl
in
cmp
xlat
aaa
and
in
mov
aam
test
jp
decl
and
fdivs
add
xchg
or
cmp
insl
sub
jmp
bnd
mov
xchg
jp
fisttpl
and
ror
adc
cmp
enter
cld
inc
xor
push
test
xlat
mov
repnz
jg
mov
jg
xchg
add
lock
sbb
into
lods
adc
cmp
push
xor
pop
out
clc
call
lods
insb
adc
cmpsb
jae
sub
push
pop
mov
push
scas
fdiv
enter
ucomiss
test
xchg
jecxz
fisttpl
cmp
or
sbb
mov
mov
clc
mov
fdivs
rol
lods
cmp
outsl
mov
incl
cmp
xorps
sbb
fdivl
jmp
aas
xlat
lods
cltd
cmpsl
inc
xor
pop
loopne
add
lods
aad
sbb
sbb
xor
inc
mov
incl
ljmp
and
repnz
cltd
cmp
repz
aas
leave
pop
daa
pop
and
jmp
daa
adc
cs
cltd
mov
xor
insb
ljmp
push
sbb
or
das
sahf
leave
call
xchg
in
cmpsb
inc
lock
pop
dec
insb
sub
add
adc
decb
jb
mov
lock
xchg
xor
inc
sub
mov
dec
xor
dec
push
adc
and
scas
popa
xor
test
xchg
dec
push
sub
in
lcall
push
dec
push
add
jle
mov
stos
mov
das
jge
sub
cwtl
sbbl
mov
xchg
mov
mov
jne
js
pop
dec
stos
pop
xchg
fstp
xor
decl
ret
fiadds
jge
into
aaa
xchg
jmp
int
sbb
enter
pop
std
ljmp
jge
jnp
pop
push
out
or
sbb
xchg
sbb
call
mov
pop
jns
cmpsl
test
mov
lods
ret
xlat
rolb
imul
sti
xchg
rol
mov
roll
adc
sbb
jns
push
fists
ljmp
enter
movsb
repz
aaa
adc
ret
cmp
xlat
shll
mov
cmp
adc
sbb
dec
mulps
lret
or
pop
xchg
incl
movsl
aam
mov
xchg
out
jo
loop
es
mov
outsl
loope
fcomip
in
jnp
inc
in
stos
cmp
shlb
es
sub
add
lods
dec
outsb
add
and
rorl
inc
cld
dec
dec
jmp
cmp
addb
adc
das
inc
mov
mov
cmp
pop
push
jb
inc
ss
int
and
inc
lcall
out
incl
mov
jg
sub
fimuls
stos
stc
xchg
jns
xor
int3
stos
xor
mov
decl
dec
lea
pop
popf
scas
pop
jl
arpl
inc
push
cltd
inc
adc
enter
cmp
rolb
adc
lcall
dec
sbb
mov
and
imull
aam
mov
cmpsl
ljmp
or
pushl
jmp
dec
ljmp
test
mov
dec
and
jp
pop
lock
cld
out
jno
fs
loop
nop
pop
pop
mov
test
pushf
lahf
cmp
jne
mov
lods
add
mov
lahf
aam
mov
scas
ljmp
jmp
mov
pop
nop
lods
jmp
xchg
gs
mov
jg
call
rcr
cmp
pusha
mov
lods
shrb
pop
sub
and
cmp
decl
sub
add
sbb
aas
sub
xchg
sahf
test
mov
call
jge
add
outsb
sti
fstpl
dec
push
rol
cmpsl
ljmp
dec
xchg
les
or
jbe
lret
xchg
adc
ja
aaa
fcoms
sbb
outsb
int3
cwtl
and
cwtl
dec
lcall
ljmp
and
fsubrs
adc
imul
outsl
or
addr16
gs
inc
and
test
insb
xchg
jle
cmp
cmpsb
add
js
lcall
test
jo
fucomi
ret
ljmp
or
mov
dec
das
jno
sarb
jecxz
dec
jg
and
scas
test
sahf
adc
int3
mov
std
das
es
xor
lcall
sbb
lcall
sbb
mov
xchg
lahf
sbb
mov
loop
adc
in
jbe
call
inc
rcll
arpl
mov
pop
cs
adc
cmpsb
jne
fwait
mov
lock
push
mov
xchg
adc
add
faddp
jo
mov
mov
fs
ljmp
ljmp
inc
mov
and
mov
incl
xlat
mov
jecxz
out
sub
fs
fsubs
inc
cli
aad
incl
rcl
dec
and
or
cmp
stos
fcoms
mov
sub
cmp
jg
les
add
or
mov
jp
sarb
rorb
call
push
xchg
inc
jl
mov
add
int
jae
push
lods
jmp
fisubs
add
dec
sar
cmp
ja
fisubl
mov
jnp
sub
mov
pop
jecxz
or
sar
dec
dec
cmp
mov
fdivr
push
cmp
clc
mov
subb
incl
pushl
pop
ds
call
cmpsl
andb
cmpsl
movsb
pop
mov
fdivr
jle
sbb
xor
loopne
sbb
push
pop
push
es
mov
inc
mov
cmc
je
adc
decl
ja
jg
cmp
pop
mov
nop
push
int
jnp
xor
inc
leave
push
xor
xchg
inc
cmpl
les
cmpsb
mov
loope
dec
mov
cmp
movsl
jbe
dec
and
test
jmp
rorl
jge
mov
rcll
jbe
divb
test
inc
dec
inc
or
rcrb
fs
icebp
mov
push
sti
sarb
jns
out
fst
dec
decl
js
mov
or
stos
mov
cld
stc
jns
jbe
leave
add
push
dec
pop
mov
std
add
clc
popf
fmull
dec
mov
mov
lcall
and
hlt
xor
and
pop
add
inc
add
cld
call
test
icebp
pop
pop
add
adc
lea
icebp
repnz
mov
sarb
mov
stc
jg
jae
inc
xor
scas
shlb
movb
ja
sub
and
cmpsl
imul
lcall
ret
dec
cmpsl
inc
push
lods
or
cli
sahf
stos
xor
push
cmpsb
scas
cwtl
mov
xchg
fimuls
std
push
jg
popa
stc
out
loopne
pcmpgtw
in
jbe
dec
mov
filds
rcl
adc
lods
call
sbb
xchg
xor
shlb
pop
hlt
pop
js
pop
pop
sub
ljmp
subl
ret
stos
xchg
fstl
mov
call
mov
jbe
push
sbb
clc
aas
pop
xor
push
or
ficompl
jp
fcom
out
leave
dec
ja
lods
sub
cmp
push
int
xlat
imul
mov
xchg
shlb
aam
inc
xor
fisttps
mov
jl
dec
add
shll
nop
sbb
mov
outsl
out
or
adc
in
xor
lahf
rorl
js
push
out
dec
nop
jmp
and
ficompl
testb
out
lock
push
mov
rolb
lret
fimuls
clc
imul
push
std
jle
xchg
inc
inc
jecxz
daa
fimuls
rcrl
repnz
jae
or
pop
sub
jmp
arpl
call
in
dec
clc
mov
fwait
and
jp
std
decl
xchg
repz
rorb
cmpsb
das
lods
inc
sub
xchg
sbb
cmpsl
call
int3
fs
jo,pt
ds
popf
adc
aad
sbb
mov
decl
lods
cltd
outsl
jo
cli
push
pop
xchg
aad
mov
fiadds
jmp
inc
scas
incl
rorb
imul
fs
stc
js
pusha
xlat
decl
into
cmp
cmpsl
bound
ds
dec
mov
popf
xor
stos
sub
push
push
shl
imul
cmpsl
push
test
and
dec
mov
call
adcl
and
cmc
xlat
mov
xchg
jge
xor
inc
add
in
loop
lret
pushl
dec
and
subb
dec
push
test
scas
pop
or
subl
ljmp
jbe
add
sub
xlat
sub
and
repz
sub
pop
mov
xor
call
cmp
add
gs
les
pop
dec
fst
lcall
shlb
mov
ljmp
test
in
push
dec
mov
cmpsl
in
out
add
mov
mov
push
mov
pushl
sarl
dec
sub
js
insb
jge
sti
lea
cmp
mov
push
fdivrl
pop
pop
sbb
push
loopne
pop
sub
out
push
fwait
lahf
jp
inc
mov
cmp
ljmp
daa
xchg
push
xlat
mov
cmp
int
xchg
dec
jg
xchg
pop
leave
pop
imul
mov
imul
and
icebp
js
ret
push
ljmp
xor
inc
jae
mov
clc
test
ja
mov
jae
arpl
sbb
notb
ljmp
xor
pop
movl
mov
push
xor
dec
ss
cwtl
mov
subl
sbb
push
cmc
pop
cmc
jge
jp
push
or
enter
sahf
shll
ret
mov
sti
test
repnz
int3
imul
or
mov
xchg
cmp
dec
fsts
arpl
ds
test
lock
mov
ror
pop
dec
sahf
out
mov
inc
fistl
in
lea
cmp
jecxz
add
mov
xchg
pop
or
mov
incl
dec
pop
movsb
and
rcrb
or
lock
add
xchg
fldenv
decl
push
or
sub
dec
sub
les
add
ja
adc
jmp
mov
mov
cmp
add
imul
mov
in
call
cmp
mov
mov
mov
jge
ficomps
and
ds
incl
cld
add
dec
push
cmp
push
fcmovu
andl
sbb
jle
mov
adc
mov
notl
xchg
test
cmc
lahf
pushf
mov
pop
andb
sub
sahf
repz
aas
sti
je
sbb
mov
jmp
adc
rcrb
call
fisttps
aad
dec
int
clc
or
and
xor
sub
dec
mov
adcl
clc
into
fcomi
push
push
pop
imul
add
adc
icebp
xor
fiadds
scas
jmp
jge
jns
fnclex
scas
mov
loopne
xchg
xchg
pop
sbb
addr16
jg
js
and
mov
cmpsl
arpl
pop
int3
pusha
stos
movsl
shlb
sbb
ja
dec
std
addr16
mov
jg
jmp
and
jnp
lahf
repz
xchg
pop
mov
push
dec
add
cmp
aas
lret
cmp
mov
mov
in
add
and
decl
push
movb
xorb
mov
xor
cmp
ftst
flds
cmp
repz
jbe
and
sub
insl
fstl
inc
dec
lds
ret
addr16
dec
movsl
pop
addb
je
repz
test
jg
lods
xchg
inc
jmp
jle
leave
mov
out
mov
movsb
std
jecxz
jl
iret
scas
pop
and
inc
enter
decl
lods
pop
clc
nop
cmp
aad
sbb
add
insb
or
int
xchg
incl
dec
shlb
in
insl
xlat
orps
or
call
adc
pop
sub
and
sub
or
cmp
or
xor
and
fidivl
jne
and
pushl
push
xor
lds
out
and
inc
out
xor
or
negl
or
lcall
fimuls
push
cmc
scas
xlat
test
loope
pop
and
jns
outsb
rolb
sbb
ljmp
jmp
shrl
icebp
and
inc
aas
xor
das
call
push
imul
or
jo
xchg
les
sarl
fbld
pop
sbb
lcall
lcall
inc
movsb
mov
test
cmp
xchg
cmc
lods
push
shlb
arpl
add
mov
and
push
jg
mov
inc
rcl
or
mov
ljmp
mov
inc
in
jmp
das
inc
movsl
rcrb
call
sbb
jns
into
je
aad
lods
add
and
jbe
pop
mov
lcall
pop
bound
cmp
xchg
cmc
jnp
push
cmp
sub
dec
loopne
dec
mov
js
xchg
xchg
pop
in
icebp
jbe
or
mov
shl
cmpsb
arpl
iret
js
lea
test
mov
ljmp
movsb
aas
inc
aam
push
inc
fistpll
adc
outsl
dec
cmp
clc
cld
pushl
aas
mov
adc
xor
imul
push
mov
leave
out
dec
dec
cmc
inc
rcrl
incl
pop
mov
roll
mov
cmp
ret
adc
incl
fadd
sbb
pop
lds
add
ds
cmp
in
ljmp
dec
adc
outsl
fidivrl
and
mov
mov
xchg
push
in
dec
adc
lret
lcall
xchg
lea
ret
inc
iret
pop
mov
sahf
cmp
or
mov
and
cmp
call
dec
stos
stos
sbbb
add
dec
cmp
scas
repnz
xchg
push
and
mov
dec
call
or
stos
jmp
das
shrb
inc
mov
scas
hlt
imul
int3
ds
sti
xor
mov
mov
xchg
jl
stos
adcl
mov
shlb
incl
in
sti
fnstenv
pop
sbb
lods
jno
pusha
pop
insb
push
xchg
jge
mov
mov
lret
xchg
mov
les
sbb
jo
lcall
fiaddl
mov
aaa
mov
push
mov
aaa
test
inc
mov
cmp
repz
dec
mov
sbb
adc
decl
jbe
cmpsl
int
rorl
push
test
mov
or
mov
sbb
in
sbb
dec
sub
mov
cld
xchg
jp
sar
push
lcall
or
inc
jno
xlat
inc
insb
cltd
jno
or
call
movsl
fidivrs
adcl
add
outsb
and
call
and
and
dec
push
xchg
sbb
push
push
push
lock
or
sbb
shll
cmpsb
cmp
loopne
jne
pop
cmp
sbb
pop
ljmp
pushl
or
push
xor
scas
je
inc
mov
jmp
scas
loop
jle
jg
pushl
add
add
and
adc
xor
dec
fbld
aas
inc
jg
cmp
repnz
fldcw
popf
cld
push
ss
lcall
xchg
rcrb
inc
mov
cmp
jo
scas
cmpl
into
scas
pop
in
decl
andb
add
jns
xchg
sub
mov
loop
jg
outsl
and
push
inc
mov
hlt
pusha
push
jb
das
sti
pop
outsl
shrd
sti
jns
sub
loope
sti
adc
dec
jmp
jo
out
inc
mov
inc
sub
outsl
adc
lcall
add
dec
jg
ja
pusha
mov
ja
ljmp
jge
icebp
test
push
je
cmp
mov
xchg
sbbl
mov
rorb
decl
sbb
mov
test
fistps
and
jno
das
mov
mov
or
in
fisubrs
lcall
inc
cmp
mov
xchg
loop
clc
iret
xchg
push
call
test
xchg
fwait
push
sbb
ja
in
xchg
loope
sbb
mov
incl
insl
xor
es
add
aaa
dec
rclb
enter
pushf
mov
jg
data16
dec
or
testl
adc
mov
jmp
iret
addl
fstp
rclb
xchg
fsubrl
js
push
sbb
adc
mov
xor
mov
push
or
les
clc
mov
std
and
and
nop
ljmp
push
mov
xor
sub
ss
push
mov
js
daa
hlt
mov
jmp
leave
mov
mov
adc
mov
loopne
ljmp
lret
decl
mov
push
or
cmc
push
inc
mov
cltd
pop
rep
inc
ljmp
clc
inc
mov
jmp
pushf
inc
and
mov
mov
xlat
add
jl
pop
sub
sbb
cs
lods
jg
imul
and
push
mov
xchg
mov
gs
sbb
test
hlt
call
jge
test
jg
pop
hlt
push
lea
nop
and
mov
jnp
fisttps
add
adc
shrb
shll
filds
js
mov
ljmp
scas
jne
pop
pop
cmp
lock
xlat
xchg
and
je
pop
mov
xor
jp
test
mov
mov
inc
loope
decb
test
pushf
lods
sti
xchg
jle
pop
dec
mov
daa
shrb
sti
sub
push
cmp
xchg
les
sbb
push
fnstcw
jg
lcall
xchg
gs
cltd
sahf
test
mov
push
icebp
inc
notl
popa
cmpsl
cwtl
pusha
in
jp
incl
ret
fidivrl
xchg
dec
insb
cmp
dec
push
cmp
inc
jecxz
insb
add
ss
stc
dec
adc
cmp
mov
iret
xor
or
in
adc
cmc
push
sti
nop
ja
dec
decl
inc
gs
mov
inc
jg
into
dec
sbb
lods
fistps
dec
cmpsl
and
jbe
repnz
leave
lods
cmp
lcall
fimull
hlt
mov
jne
popa
loope
xchg
addr16
bound
ljmp
imul
sti
xchg
ljmp
cltd
jecxz
js
faddl
jns
loop
cwtl
add
jae
cli
movsl
jle
sti
sbb
jns
inc
and
js
xchg
in
and
popa
fs
ficoms
or
hlt
lods
add
js
fsts
xor
add
sbb
mov
fdivl
inc
ret
subl
incl
in
icebp
repnz
xchg
inc
mov
sahf
mov
stos
outsl
pop
push
stos
jns
fnstenv
adc
jmp
pop
sbb
loop
push
inc
cld
in
insb
push
fisttpll
lcall
inc
push
mov
pop
inc
add
lock
fcompl
divl
dec
xor
pop
adc
lcall
aas
jbe
push
add
sub
repz
mov
xchg
cmp
xor
xchg
mov
xchg
sub
mov
insb
mov
movsl
and
lods
or
push
lahf
js
push
pushl
inc
add
pusha
icebp
lea
push
jae
and
xchg
ja
fdivs
lcall
dec
cld
cmpsl
mov
fldenv
cmp
pushf
mov
lcall
pop
mov
jo
sbb
sahf
shlb
mov
mov
sub
push
out
xchg
mov
ret
mov
enter
movsl
clc
xor
repnz
inc
pusha
add
push
adc
inc
add
stos
outsb
stos
imul
sub
lret
and
outsb
sahf
in
cmp
rorb
jg
add
sbb
incl
mov
enter
fcoms
sub
sbb
ret
jge
mov
sti
and
clc
lcall
jle
cmp
mov
pushf
leave
push
jp
hlt
or
pop
icebp
into
scas
lcall
daa
xor
lock
inc
xchg
jns
mov
inc
pop
pop
sub
faddp
mov
pop
or
or
cmp
pop
insb
sbb
or
push
orl
aaa
add
and
test
jmp
cmpsb
lods
cmp
je
clc
repnz
decl
ss
fwait
int
call
in
inc
push
jbe
ret
mov
je
rorb
xchg
cltd
mov
in
stos
inc
fmuls
adc
xchg
lock
or
scas
dec
inc
mov
pop
imul
incl
movsb
movsb
out
jge
pop
bound
sub
push
nop
and
loope
inc
jbe
mov
xchg
dec
testl
pop
pop
inc
icebp
xchg
pop
jmp
jmp
roll
cmc
fwait
and
iret
push
fiaddl
mov
mov
inc
scas
cli
inc
or
shl
scas
lds
repz
dec
or
fwait
mov
insl
mov
ljmp
push
out
data16
dec
dec
sar
std
mov
xchg
xchg
in
jb
xchg
test
add
fchs
mov
js
xchg
das
les
fistpl
pushf
insl
pop
jne
xchg
sbb
dec
mov
jecxz
dec
jg
push
iret
or
in
call
out
ret
inc
test
int
lock
dec
pusha
setnp
lahf
cld
btsl
xor
aam
push
rorb
lret
frstor
jbe
push
cmp
mov
fmull
dec
jecxz
js
out
push
jnp
cmpsl
xchg
and
dec
adc
mov
out
popa
sar
call
out
xchg
and
mov
dec
imul
mov
push
pop
cmp
fstp
mov
iret
pop
mov
adc
push
pop
das
leave
fwait
fs
sahf
rcrl
incl
or
and
xlat
mov
xchg
imul
pop
mov
push
cmp
fidivs
mov
cmp
mov
lcall
and
push
mov
cmp
cmp
mov
jmp
mull
xor
lea
jmp
jg
adc
or
mov
data16
outsb
lret
mulb
aam
bound
pushl
adc
inc
cli
ficomps
in
movsl
dec
cltd
xchg
iret
inc
sbb
cmp
sbb
decl
ficoml
mov
repnz
mov
adc
cli
push
add
movsl
nop
sub
decl
fnstcw
orb
lcall
or
sbb
pusha
xor
addr16
jns
incl
mov
jae
rcl
cmp
int3
dec
imul
and
push
aas
cmc
xchg
subb
sbb
pop
loopne
push
push
pop
aaa
into
adc
mov
pop
cwtl
jns
hlt
inc
repz
filds
stc
jge
popf
imul
psrad
mov
xchg
dec
sub
xchg
decl
push
in
loope
vpandn
sbb
jae
ret
dec
and
inc
jae
jmp
mov
incl
sbb
shl
in
test
lret
pop
mov
mov
mov
repnz
xchg
imul
sar
aaa
and
stos
jno
cwtl
xor
dec
sbb
push
loope
aam
sub
jae
cmp
xchg
test
test
ljmp
push
xchg
ret
out
or
jl
iret
jnp
inc
mov
stc
cmp
cltd
call
push
mov
sbb
jne
fdiv
cmp
loop
push
or
std
js
mulb
aas
jo
lds
popa
pop
test
clc
push
scas
jne
int
and
loop
lods
clc
decl
dec
lahf
clc
dec
inc
fisubrl
adc
fsubrl
aaa
xchg
inc
inc
mov
pop
pop
adc
addr16
pop
ret
mov
popa
cmp
add
pushl
add
jne
pop
push
mov
lock
je
cmp
sub
out
int3
push
ljmp
decl
or
xchg
dec
jno
and
scas
aaa
pop
test
push
ss
jmp
decl
dec
mov
imul
pop
mov
stc
fimuls
adc
jmp
xchg
add
mov
mov
and
stos
jbe
cmp
call
lcall
incl
xchg
adc
iret
jl
ss
mov
mov
cltd
cmp
mov
fstl
incl
xchg
shlb
push
cmp
xlat
jno
es
push
xchg
mov
jg
ljmp
mov
dec
xchg
and
shll
flds
pushl
dec
dec
cmp
sub
adc
cmpb
push
mov
add
orb
fcomip
or
sub
lret
jmp
pop
adc
out
pop
mov
scas
push
clc
incl
xchg
mov
lahf
push
xor
push
xchg
scas
and
mov
mov
mov
ja
clc
in
aas
ds
xor
int
imul
loopne
fisubs
and
shll
xor
int3
push
dec
rorl
cs
in
jb
std
loop
cmp
lods
in
rcrl
push
popf
je
pusha
loop
sub
arpl
push
std
dec
push
das
jae
stos
xor
in
clc
pop
fstpl
mov
jnp
decl
xchg
cmp
xor
repnz
inc
rcl
dec
sahf
test
leave
call
popf
fsubs
fildl
movb
push
lock
fstpl
jmp
jnp
mov
sbb
pop
lock
sarl
std
out
mov
jb
mov
ds
ficoml
ja
decb
loope
mov
aad
mov
dec
mov
pop
fldcw
repz
in
jle
cmpsb
enter
mov
in
xor
jecxz
insl
inc
mov
inc
repz
repz
mov
add
js
pop
loopne
dec
cmp
xlat
mov
jmp
push
or
icebp
sbb
push
xchg
xchg
jns
aas
cs
mov
inc
or
fstpl
insl
fcompl
push
adc
fucom
jno
jae
xor
roll
in
ret
xchg
dec
push
out
pop
loopne
lcall
shrb
rcrb
aam
mov
jne
insl
add
icebp
cwtl
and
call
and
push
sbb
xor
sub
aaa
pop
mov
sbb
mov
sbb
sar
pushl
adc
adc
lret
jle
pop
pop
mov
add
push
out
adc
mov
xor
pushl
cwtl
andl
jo
int
xor
mov
xchg
jecxz
lret
stos
lcall
lcall
adc
fldl
mov
xchg
mov
pop
jle
fisubl
lcall
mov
push
scas
ret
cld
stc
dec
mov
xor
call
add
inc
and
loope
sub
aad
out
sahf
inc
push
or
test
jle
lcall
enter
imul
mov
sarb
xor
sbb
jg
lcall
push
rcrb
push
nop
sbb
and
xchg
scas
nop
dec
inc
stos
xchg
jae
jmp
cli
fs
mov
inc
and
jp
dec
jl
jb
dec
mov
lea
frstor
mov
sbb
jns
sub
mov
lock
arpl
movsb
mov
mov
jo
ret
add
cld
mov
sub
mov
push
mov
cmp
or
add
cld
adc
xor
mov
shlb
decl
push
mov
xchg
sbb
lcall
lahf
sbb
cltd
xchg
mov
aas
push
xlat
aad
in
mov
xchg
inc
aaa
dec
sahf
repz
test
mov
pushl
mov
leave
jp
negb
add
stc
repz
pushf
clc
incl
dec
dec
jbe
push
or
out
mov
jmp
aaa
dec
in
push
mov
pop
jmp
dec
jnp
inc
std
push
add
cli
cmp
xlat
sbb
cmpsb
lods
inc
mov
outsl
iret
aaa
dec
pop
xor
xchg
inc
push
dec
out
cli
lcall
xchg
dec
daa
mov
or
and
jbe
call
lcall
jno
jecxz
push
or
popa
push
test
in
sbb
jle
push
loopne
jg
test
lret
movsl
sub
test
pmulhw
pop
ljmp
out
sub
mov
loopne
aas
movsl
loopne
int
mov
insl
loopne
dec
lds
out
or
cmp
or
inc
adc
pop
mov
pushl
xchg
mov
jo
or
and
adc
push
nop
outsb
inc
xor
movsb
rcl
outsb
loopne
negb
push
sub
xchg
movsl
xchg
sar
push
jg
sbb
loop
fsub
add
sub
and
cmp
fdivr
decl
lret
jns
mov
lods
mov
push
shr
inc
pop
adc
rcll
lcall
xlat
lock
out
jmp
pop
push
add
inc
mov
adc
dec
incl
scas
mov
cmp
in
adc
jg
xchg
pushf
sbb
jg
push
out
int3
stos
in
dec
or
sti
test
stos
call
decl
jb
sub
into
loopne
inc
addr16
dec
cmp
outsl
rcrb
or
xchg
jge
xor
or
mov
lret
sysret
sub
std
pushl
add
movsl
fmull
mov
scas
jno
out
pop
out
sahf
inc
out
pop
jmp
in
lahf
push
popa
dec
int3
sbb
ja
in
adc
lahf
jo
pushl
push
adc
or
cmp
sbb
je
shr
mov
jg
neg
push
loopne
mov
clc
xchg
mov
push
adc
add
mov
shl
mov
fyl2x
loope
scas
mov
fcmovne
pop
jmp
jg
sub
int3
test
popf
mov
popf
hlt
adc
lcall
sar
pushl
data16
mov
movsl
cmp
stc
xchg
jle
add
xor
push
sub
cmc
inc
or
dec
jg
push
sub
aam
fsubrs
ror
mov
jmp
sbb
sub
pop
cmp
test
adcl
push
bnd
lcall
cs
lcall
fwait
imul
inc
lods
fs
sub
mov
jb
fcompl
pop
inc
xchg
mov
lods
jno
fsubrl
xor
ja
lret
cmpsw
push
fdivs
lods
cmp
loopne
cmp
xchg
daa
xchg
bnd
fldl
mov
call
call
loopne
adc
jb
lea
ret
and
sbb
out
movsl
int
test
fs
call
in
sbb
push
shlb
mov
popf
cwtl
rcrl
mov
fisttpl
mov
clc
pushl
loopne
shlb
lock
push
lds
push
cmp
add
or
jg
or
mov
in
int3
fldenv
push
in
push
call
movsl
jmp
sbb
pop
pop
jg
add
mov
out
jne
pushl
mov
out
jb
and
and
mov
out
pushf
jbe
sti
mov
lock
incl
lret
andb
push
add
jo
mov
ss
sbb
call
pop
pop
xchg
mov
pop
dec
sub
es
ficoml
and
sahf
inc
jp
enter
xchg
frstor
xor
xchg
cmp
scas
lods
jne
fisubrs
jmp
pop
mov
ud0
ljmp
pop
sbb
cmpsl
in
lea
mov
jb
dec
jmp
pop
cli
push
repz
pop
mov
xchg
jo
dec
insb
jp
pop
icebp
lcall
stc
cmp
cs
gs
imul
pop
test
nop
jg
data16
decl
pop
dec
push
inc
xlat
in
and
aaa
dec
and
push
fs
xor
data16
cmc
pop
mov
call
xor
and
mov
jge
icebp
xchg
and
pushf
jne
fucomip
xor
les
ljmp
mov
pop
jb,pt
sbbl
repz
lcall
pushl
movsl
lret
movsb
repz
out
jmp
push
add
out
mov
test
cld
stc
into
fbstp
xor
add
xorl
xchg
xor
arpl
std
sbb
sar
sahf
std
mov
sbb
das
pusha
ljmp
in
push
xor
mov
inc
or
add
call
loop
sub
dec
fidivrl
lods
cmp
xchg
data16
addl
jmp
sbb
sub
xor
cs
nop
push
loop
fisubrl
cwtl
jg
jecxz
filds
iret
cmp
sbb
add
and
call
push
lock
shlb
mov
push
cmp
jno
clc
adc
and
mov
adc
mov
jle
adc
sbb
sar
bound
hlt
or
lock
nop
xchg
in
push
add
mov
push
jg
dec
dec
repz
dec
ror
and
out
imul
sub
push
shrl
in
mov
ret
and
cmp
nop
and
scas
iret
movsb
jg
insl
ljmp
and
sbb
lock
cmp
xlat
movsl
ljmp
arpl
nop
or
mov
ror
mov
decb
pop
mov
jmp
push
addr16
mov
inc
ja
sti
scas
lret
dec
xor
aas
mov
mov
cli
fcomip
mov
mov
push
dec
mov
loopne
loopne
gs
jmp
mov
mov
fisubl
in
cwtl
mov
mov
fnstenv
xor
stc
jns
mov
test
mov
push
enter
fdivrp
ljmp
clc
lods
lods
nop
pushf
inc
adc
mov
add
jbe
pop
adc
jo
pushl
push
popf
jmp
mov
int3
xor
xchg
enter
aad
repnz
dec
pop
add
ljmp
les
dec
sahf
mov
pop
outsb
mov
mov
jae
pusha
loop
mov
incl
fistpll
adc
loop
iret
add
jl
jne
push
outsl
sahf
aaa
test
test
incl
je
popa
jns
fisubrs
sbb
push
into
inc
xchg
jecxz
push
and
mov
gs
sti
pop
fisttps
adc
jge
cltd
sub
push
mov
cmpsb
and
push
mov
nop
pop
jmp
xchg
dec
iret
pop
dec
leave
out
test
cmp
xorl
add
adc
jmp
adc
lods
pushf
or
or
aas
cmp
aaa
push
push
outsl
cli
ret
or
mov
pop
cmp
cmp
into
adc
not
cmpsb
push
push
pop
mov
incl
test
push
sub
outsb
add
je
add
mov
call
dec
lcall
lods
adc
jl
test
pop
xor
mov
or
incl
fldcw
es
nop
jne
xchg
std
fidivrs
jnp
out
cmp
in
jb
dec
mov
sbb
iret
jl
movsl
xchg
adc
rcl
lcall
lret
dec
pop
rcrl
ret
bound
mov
call
pop
inc
popa
out
jo
test
cmp
out
mov
push
push
ds
sbbl
xchg
stc
cmp
add
dec
pop
dec
decl
lock
imull
lods
pop
lea
cmp
add
fsqrt
cmp
ljmp
sub
das
jns
inc
cli
pop
xchg
ds
lds
fwait
mov
mov
insb
cwtl
adc
imul
adc
fidivs
incl
int
dec
mov
dec
jbe
or
dec
and
and
pop
stos
shrl
lcall
and
mov
mov
popa
adc
scas
lret
push
clc
xchg
ss
loope
das
inc
fidivs
pushl
and
shrl
mov
popa
cmpsb
lea
ljmp
adc
mov
ret
inc
rcr
sub
pop
and
stc
sub
push
enter
hlt
iret
adc
or
ss
or
mov
out
mov
pushl
cmp
stc
cmp
cmpsl
popf
push
ret
and
lahf
mov
jmp
adc
dec
test
xchg
test
or
mov
lcall
pusha
lods
ljmp
les
push
inc
adc
push
and
push
daa
inc
sahf
jb
inc
fisubrl
in
in
mov
ljmp
movsl
lods
dec
orb
mov
imul
jbe
mov
aad
stc
stc
stos
mov
dec
sub
decl
pop
mov
stos
dec
in
pop
dec
add
and
push
out
jle
in
aas
outsl
fisttps
jnp
sahf
adc
pushf
out
xor
test
jno
stos
ljmp
cmp
cmpl
inc
dec
sub
add
adc
lret
sbb
out
outsb
pushl
pop
sbbb
push
inc
enter
xor
jo
or
fsubrs
push
lcall
push
or
ds
xor
mov
das
std
and
jmp
add
push
out
xor
cmpsl
lcall
xchg
pop
push
push
inc
lcall
js
pop
inc
out
push
pop
inc
add
aam
sub
cmp
adc
mov
inc
add
push
mov
add
mov
mov
pushl
cmp
xlat
leave
add
push
ss
fimuls
dec
lds
cmp
dec
and
fcoml
decl
push
ret
xor
mov
add
jb
fs
jg,pt
jmp
pop
fs
idivl
insl
rolb
fisttpl
mov
add
pushl
data16
scas
add
inc
std
dec
mov
leave
add
jbe
mov
jmp
dec
add
push
and
outsb
mov
fcmovbe
lret
mov
jge
jo
sub
fldcw
cs
aas
adc
push
negb
cmp
popf
sbb
lds
lcall
leave
adc
cs
mov
adc
fs
dec
jmp
mov
mov
and
sbb
xor
sbb
test
pop
inc
adcl
mov
push
lret
add
and
pop
cwtl
sub
and
push
incl
cmp
xor
push
xchg
popf
dec
push
out
pop
outsb
fmull
pop
cld
mov
decl
fldcw
pusha
fs
scas
test
sahf
inc
pop
test
mov
sub
jmp
xor
mov
lahf
in
push
inc
shrb
popa
push
xor
call
push
orb
mov
dec
xchg
imul
xchg
mov
pop
rorl
repz
jge
ret
in
sub
dec
cmpsl
push
shlb
shrl
outsl
out
rcr
inc
daa
cs
in
mov
fisubl
sbb
enter
jmp
mov
aad
inc
add
shll
clc
pusha
lea
test
pushf
gs
nop
bound
jp
sbb
jae
andb
scas
into
jg
nop
push
sti
mov
jle
mov
sub
mov
mov
cwtl
arpl
pop
or
scas
dec
add
mov
rcl
inc
hlt
jb
cmpsl
and
or
cmp
scas
push
inc
sbb
faddl
rcll
ljmp
sbb
popa
mov
out
pop
jbe
inc
repnz
dec
push
ljmp
mov
add
sahf
jp
push
into
jge
subl
pop
jno
sarb
sbb
jg
jnp
movsl
jae
jp
clc
sub
cmp
js
insl
aaa
stos
pusha
mov
imul
aad
pop
je
in
cmc
push
fimull
and
cmp
jmp
adc
jno
pop
pinsrw
rcrb
nop
sub
push
pusha
push
ret
pop
cwtl
cmpsb
outsl
xor
sub
mov
popl
ja
es
dec
cmp
dec
push
lods
or
arpl
fwait
cmp
movsl
loope
movsb
aaa
push
mov
dec
fnstsw
jmp
subl
js
jns
insl
pushf
lock
sbb
mov
idiv
repnz
pop
push
popf
mov
lcall
lahf
ja
add
push
mov
sub
xorl
aad
lock
lea
xchg
pushl
lcall
add
jmp
addr16
lcall
mov
ljmp
fldl2t
lret
ljmp
add
mov
icebp
jle
call
add
add
sub
jge
pop
or
push
mov
sbb
sarb
ljmp
ret
push
adc
rorl
sarb
dec
call
ljmp
repz
fadd
stos
mov
dec
std
cli
mov
hlt
shrl
test
incb
pushl
mov
jg
or
adc
and
sbb
jg
pop
sub
jle
push
decl
out
pop
pop
jmp
jl
incl
inc
jl
add
jle
outsl
sbb
ss
ja
int
pusha
sub
aad
mov
cld
mov
aad
pushl
xor
test
out
shrb
mov
jg
and
in
in
and
xor
mov
sub
xchg
inc
dec
xor
cmpsl
call
aad
jns
inc
sub
lods
mov
int3
inc
lods
xor
in
pop
adc
sub
and
jmp
shl
and
push
aam
inc
enter
les
ret
jle,pn
cmp
adc
ret
or
fistpl
xchg
fmuls
pop
and
xchg
insl
std
mov
push
dec
rol
cmpsl
cmpsl
es
test
scas
dec
xchg
out
adc
out
pop
add
xchg
stos
push
mov
sub
ljmp
std
mov
sub
inc
das
sar
pusha
and
sbb
andb
popf
push
addr16
jno
pushl
fidivrl
lahf
shr
outsb
cld
lahf
sahf
sub
jnp
or
lds
call
mov
and
lods
sub
rorb
lods
nop
fmuls
inc
icebp
sti
test
mov
fs
stos
mov
cs
sub
call
mov
dec
dec
clc
pop
and
hlt
arpl
push
push
jmp
dec
adc
and
test
in
cmpsl
xchg
fadds
clc
or
pop
cltd
out
notl
inc
in
outsl
push
dec
xor
ljmp
clc
dec
mov
les
stos
outsb
pop
cmp
imul
sbb
dec
dec
mov
jmp
cmp
cld
mov
push
fadd
aam
and
jl
loope
jmp
es
cmp
loope
mov
test
pop
xchg
inc
int
lods
dec
lea
jg
mov
push
gs
lret
or
cwtl
cmovs
sahf
rorb
pushl
mov
or
stos
jne
rorb
insb
pop
sbb
rol
ljmp
sub
pushl
sbb
out
or
mov
ficompl
xlat
hlt
sbb
decl
popa
fidivs
test
sub
mov
or
inc
es
fwait
mov
adc
xor
test
mov
sub
jmp
shl
jno
mov
decb
lret
jecxz
mov
popa
jns
pop
je
fcomip
pop
gs
imul
jne
je
jmp
pop
jle
add
aad
add
nop
sbb
adc
xchg
out
leave
xor
ljmp
sbb
pushf
nop
or
push
pop
mov
adc
mov
mov
call
and
and
and
adc
test
loopne
aas
or
mov
xorb
dec
aad
dec
dec
adc
mov
push
mov
adc
sub
cli
ljmp
addr16
andl
iret
pop
jno
pop
movsb
lea
mov
and
pop
cmc
cmp
mov
mov
je
jbe
addb
add
inc
xchg
push
xchg
jg
loop
lcall
jge
xchg
jmp
stos
out
into
mov
and
pop
mov
or
lcall
cmp
inc
mov
cmpl
shr
sar
mov
push
rolb
sbb
mov
mov
sub
pop
lret
pop
xlat
jne
pop
inc
ljmp
test
popf
sub
jae
jo
test
out
rolb
stos
aad
aaa
dec
in
inc
enter
in
adc
xor
cmp
in
outsb
in
or
or
push
popf
arpl
cmpsb
int3
or
fdivrs
mov
sub
mov
mov
inc
add
pop
insb
fwait
mov
enter
call
push
or
pop
lret
icebp
push
sub
cmp
mov
mov
xchg
out
and
jg
pushl
clc
bound
cmp
cmpb
lock
push
incb
incl
xchg
and
movsb
fdivl
and
iret
xchg
xchg
lcall
sub
int
data16
pop
jl
scas
test
sub
rcrl
mov
sbb
and
add
add
es
pushl
cltd
sub
repnz
shrl
test
mov
bound
mov
dec
loopne
jmp
mov
cwtl
cmpsb
mov
xchg
dec
ljmp
dec
lds
sbb
aas
dec
xchg
aaa
push
inc
in
es
inc
lahf
inc
cld
or
or
inc
ljmp
hlt
sbb
and
or
adc
mov
mov
int3
mov
pusha
add
and
inc
lds
mov
aam
in
mov
push
add
adc
les
add
add
das
sbbl
out
cli
lcall
push
call
mov
mov
inc
jge
stc
cltd
and
and
mov
incl
inc
ss
out
push
push
push
pop
xchg
outsb
fists
incl
inc
and
xor
test
movsb
mov
nop
and
test
incl
pop
inc
mov
jnp
stos
sub
or
mov
sahf
lcall
cli
inc
cmpsb
sbb
fiaddl
cli
ljmp
es
leave
fs
shlb
std
adc
js
push
lock
mov
sub
leave
shlb
add
inc
and
fsubl
pop
fcompl
jmp
xchg
nop
mov
daa
mov
jle
test
imul
fstl
jbe
mov
mov
cmc
call
sub
jg
insl
subb
les
push
decl
je
mov
test
popa
cmp
fs
jecxz
or
mov
mov
lock
pushl
push
mov
push
imul
mov
ja
xchg
arpl
xchg
sbb
xor
mov
js,pt
xchg
cmc
arpl
jne
stc
in
ror
push
outsb
cmp
aaa
cld
sub
adcl
and
out
sbb
mov
imul
inc
adc
jbe
dec
sub
xor
das
mov
mov
decl
nop
sahf
xlat
xchg
pop
sbb
ss
dec
fisttpll
jle
or
hlt
xor
jmp
or
pop
cmp
ret
push
cmp
xor
ss
lcall
sarl
cmovne
mov
je
sbb
inc
fldt
test
ljmp
in
call
mov
icebp
or
lret
cli
call
jo
data16
int3
pop
icebp
iret
pop
mov
sub
jno
mov
pop
mov
sti
jnp
ljmp
adc
sub
inc
push
repz
pusha
cmpb
das
or
pop
mov
into
adc
cmpsb
vcomiss
dec
jge
movsb
inc
arpl
jl
dec
cmp
cmp
lcall
push
ret
lret
stos
adc
lahf
or
int3
fidivrs
mov
pop
jb
lcall
xchg
inc
mov
out
sub
lcall
sub
xor
out
repz
inc
xorb
test
push
stc
ljmp
mov
fisttps
imul
ljmp
lea
lea
add
das
call
sti
mov
xchg
nopl
jp
ljmp
shl
jae
arpl
out
cltd
inc
and
jp
and
call
cwtl
xchg
mov
arpl
or
jne
push
addr16
lods
call
sbb
scas
mov
loope
cli
inc
fldt
pop
xchg
imul
std
push
mov
adc
out
outsb
cwtl
arpl
nop
ficoms
mov
in
aam
push
andl
cli
movsb
incl
in
shll
int3
pop
mov
arpl
stos
pop
lock
aaa
mov
pop
jmp
stc
cwtl
and
jne
fcoml
repnz
repz
sbb
aam
dec
and
inc
and
roll
nop
movlps
out
or
mov
adc
insl
sahf
xchg
mov
dec
mov
sub
adc
sbb
stos
xor
fs
cmpsb
sbb
ljmp
mov
into
jb
cwtl
push
jns
sub
pop
and
cmp
mov
pop
sarb
ljmp
fstpl
jg
leave
lods
xchg
sbb
shrb
mov
loope
cld
pop
cmp
push
mov
inc
ret
xor
psllw
fisubrs
pushl
ljmp
inc
sub
mov
in
lds
les
add
jp
jecxz
dec
push
sub
out
sti
jae
or
add
movsl
or
mov
mov
out
and
movsl
xchg
incl
xchg
rorl
dec
push
or
js
insl
in
xor
inc
and
pop
jmp
fsubl
in
iret
movsl
aad
inc
aas
jno
lcall
xchg
ret
cmp
daa
pushf
mov
js
sbb
stos
testl
fildl
mov
lcall
or
mov
ret
stos
push
adc
and
push
aam
and
stos
adc
idivb
call
lret
dec
iret
gs
loopne
aad
leave
mov
sbb
incl
adc
push
cmc
shrb
mov
add
xchg
dec
xor
jl
pop
jecxz
cmp
sub
cmpsl
inc
jg
fildl
test
add
pop
mov
enter
dec
sti
out
stos
dec
out
sbb
jmp
mov
adc
mov
arpl
sbb
out
je
mov
ljmp
es
aaa
mov
push
xchg
pop
pushf
fistl
xchg
push
dec
out
cmpsb
sbb
pushl
cltd
lea
sub
cltd
inc
mov
fildll
mov
pop
mov
lcall
xor
sub
cmpsl
dec
and
and
decl
mov
fisubl
pop
scas
movsb
xor
push
dec
iret
cmp
mov
cltd
dec
pop
movsb
xchg
repnz
call
rcrb
mov
or
mov
imul
fcmovbe
in
sbb
ss
add
incl
cmpsl
push
jb
pop
imul
xor
jp
inc
jmp
jo
ds
into
outsl
sbb
jmp
sbb
data16
xchg
aaa
pop
ret
pusha
inc
mov
repnz
and
hlt
repnz
jmp
test
addr16
outsl
shrl
xchg
jmp
pop
cli
jecxz
jo
lock
fistpl
incl
loop
std
shlb
mov
or
xchg
cld
add
mov
pop
call
mov
jg
dec
push
gs
mov
daa
mov
push
rolb
jno
push
call
lret
icebp
ficoml
mov
xchg
xchg
ljmp
mov
jo
lret
mov
lcall
enter
fistpl
call
mov
sub
daa
xchg
scas
lret
dec
inc
sbbl
add
movsb
insb
sahf
stc
push
loop
fldcw
insl
push
mov
lock
ljmp
aas
sub
mov
js
add
inc
push
pop
test
lahf
jb
inc
xchg
xor
push
test
xorl
fadds
mov
pop
shll
fwait
inc
sbb
nop
cmp
scas
and
jecxz
je
out
mov
cmp
pushl
and
shrb
xchg
rcpps
mov
or
popa
mov
inc
lahf
inc
ljmp
cmp
or
and
ds
mov
ljmp
stc
push
mov
fidivrl
sbb
cmp
test
mov
lcall
repnz
sbb
dec
and
stos
xchg
mov
inc
dec
fsubrl
hlt
mov
push
lods
sub
call
aaa
jno
sbb
fcoml
imul
test
out
enter
cltd
out
fwait
dec
mov
lcall
mov
scas
mov
pop
add
sahf
inc
ret
popa
cmp
mov
adc
decl
add
jmp
xor
stc
mov
lock
call
sbb
cmp
xor
mov
mov
mov
mov
inc
and
sbb
in
lret
add
leave
repz
jmp
cmp
or
lods
mov
pop
xor
push
outsl
sbb
dec
test
clc
ljmp
fs
roll
xchg
mov
shrl
sbb
loope
incl
dec
push
icebp
mov
popa
pop
out
scas
add
fwait
mulb
jge
imul
cmp
adc
sahf
jnp
test
or
jg
pushf
sarb
add
pushf
xor
sbbl
ljmp
push
xchg
pop
in
dec
and
daa
sbb
mov
pop
xor
push
dec
call
ret
push
fs
jne
cmp
hlt
das
xchg
lods
inc
addb
jnp
push
and
pop
cmpb
fcomip
jmp
int3
test
adc
or
mov
icebp
push
call
dec
inc
int
ljmp
inc
addr16
pop
pop
push
inc
ret
int3
ficoms
pop
jg
adc
leave
out
inc
mov
xor
pop
jmp
xchg
mov
mov
sbb
jl
das
lock
scas
movsl
shl
adc
sbb
cli
lcall
and
hlt
and
jnp
jnp
out
outsb
mov
cltd
jle
aas
xor
movsl
jg
dec
xchg
inc
lods
jns
lcall
jp
aad
and
out
rcll
std
mov
xlat
stos
push
lods
pop
cld
jmp
inc
jmp
in
xor
andb
jecxz
and
rcl
or
dec
ljmp
div
dec
ficoms
pop
dec
pop
fs
mov
xor
cmp
scas
aam
dec
or
leave
adc
je
ljmp
iret
mov
xor
cmp
push
cmp
ljmp
imull
inc
mov
lret
pop
jmp
pop
mov
sbb
xor
lock
mov
jg
test
jb
fmuls
xor
fisubs
scas
inc
call
ds
xchg
add
lea
mov
bound
hlt
cld
cmp
mov
jns
gs
mov
jns
clc
or
cmc
inc
dec
fidivl
js
jns
sub
jmp
adc
into
aad
push
jl
or
jp
lahf
mov
mov
xor
mov
xchg
pushf
jle
loop
scas
sub
mov
xchg
sbb
xchg
dec
jns
jle
pushf
mov
push
push
push
les
es
bound
insl
ss
inc
fstpt
and
loop
mov
push
outsb
inc
and
lods
add
fidivrs
mov
gs
push
jg
sub
nopl
iret
sbb
sub
mov
aaa
std
decl
sub
mov
push
pop
xchg
sub
ljmp
or
sbb
or
mov
push
negb
inc
sbb
faddl
jnp
mov
gs
dec
ror
lahf
ja
mov
es
xchg
pop
outsl
bound
fnstsw
sub
fcomps
call
iret
sti
push
dec
das
stos
int
mov
pop
lods
xlat
and
or
mov
iret
push
pop
mov
lcall
push
cwtl
inc
ljmp
push
sbb
push
out
out
jae
scas
push
and
ret
nop
shrb
outsb
push
std
jmp
imul
jnp
fldt
mov
arpl
out
xor
mov
outsb
incl
clc
rclb
jle
testl
inc
sbb
imul
clc
jge
rclb
arpl
mov
aaa
sbb
ljmp
sub
repz
mov
hlt
or
pop
leave
xchg
loop
jl
data16
cmp
movb
and
lahf
out
xor
sub
sub
out
outsb
test
add
jge
push
repz
lds
mov
mov
mov
mov
movl
sbb
xor
outsb
push
push
mov
mov
incl
sbb
and
cs
insl
daa
adc
mov
clc
sbb
and
mov
incl
pop
hlt
sbb
shl
out
mov
mov
cmp
filds
jle
loop,pt
ljmp
mov
test
xchg
mov
ret
not
push
jg
test
dec
jl
das
int3
test
in
xchg
loope
cmp
jp
sub
dec
xor
push
shll
push
and
mov
movsb
xor
xor
pushl
pusha
xor
stc
outsl
sub
mov
cmpsl
dec
in
cmp
aam
sub
sbbb
xor
cmp
push
cwtl
cmp
decl
mov
ss
mov
dec
mov
dec
jg
jb
dec
orl
add
cli
out
lods
inc
inc
and
ja
je
pop
jmp
mov
dec
xchg
inc
xchg
fildl
or
or
dec
or
and
cmpsl
sub
or
insb
jge
call
and
add
jne
nop
jnp
dec
jbe
lods
sub
lret
insl
or
lcall
mov
push
movsb
inc
pop
fwait
inc
sub
push
nop
in
and
call
jae
mov
in
add
jo
inc
test
out
xlat
pusha
jg
add
mov
lods
xchg
mov
jmp
js
test
sbb
enter
imul
rorl
lcall
ret
popf
ret
mov
mov
cwtl
add
shl
mov
pop
xchg
mov
int3
shl
imul
sub
jne
je
inc
inc
rclb
adc
stos
mov
sub
xor
movb
fnstsw
push
jae
rolb
mov
mov
movsl
xchg
or
iret
les
cli
decl
lcall
in
popa
adc
and
cmp
test
ljmp
inc
add
jno
out
jg
or
pop
inc
pop
xchg
xchg
pushl
inc
decl
icebp
add
jno
cmp
and
mov
inc
mov
lods
mov
or
mov
cld
ret
movsb
fadd
fmulp
jns
pop
adc
dec
fisttps
sub
jb
mov
ljmp
addr16
daa
jbe
pop
call
mov
jmp
imul
adc
pop
xor
ret
mov
incl
ja
inc
adc
push
lods
mov
les
mov
cmp
std
mov
scas
cld
xchg
lret
sbb
mov
clc
mov
test
cltd
mov
mulb
inc
into
cpuid
out
xlat
mov
pop
mov
ljmp
sahf
xor
les
add
nop
inc
lock
pushf
sbb
mov
mov
test
xor
call
test
ja
push
mov
clc
inc
data16
mov
cmp
sub
xor
pop
pop
mov
sub
sbb
lea
imul
cld
xchg
mov
jbe
decl
xor
movl
dec
xor
push
xor
jle
ss
leave
fsubrs
scas
clc
jmp
lods
add
outsl
push
aas
xor
pop
lcall
jae
lret
fimull
decl
sub
out
fs
fnstcw
enter
sbb
aad
ljmp
jl
lcall
rcrb
sub
repnz
add
fstl
and
sub
test
lret
aaa
cld
fistl
ret
std
int
fisubs
imul
cmpsb
push
pop
pusha
out
or
out
out
and
add
lods
jmp
shll
add
lods
pop
push
ljmp
cmpsb
xchg
cld
xchg
and
add
stos
sarb
mov
inc
push
mov
inc
pop
jmp
ss
ljmp
add
cmp
pusha
lahf
mov
mov
mov
mov
push
movsb
test
cs
cld
jp
les
cmp
in
push
outsb
fs
xchg
ret
jge
call
fbstp
je
das
testl
enter
pushl
imul
add
cmp
rorl
cltd
sbb
xchg
mov
pop
int3
sbb
sbb
xchg
nop
ss
inc
sub
fisttpl
or
xchg
sub
dec
mov
fwait
cld
enter
mov
dec
fcomip
push
and
ss
outsl
and
test
lcall
mov
fnstcw
call
orb
inc
enter
xchg
pop
mov
imul
daa
adc
xor
xor
lcall
in
aam
push
imul
jl
adc
cld
push
fdivrp
mov
test
ljmp
clc
loopne
hlt
xor
xchg
insb
cmp
iret
push
lds
adc
mov
data16
xor
ret
dec
hlt
into
stc
push
sub
mov
fptan
sbb
pop
dec
dec
sti
dec
aam
mov
xorb
aas
lods
xor
mov
jmp
stos
jo
inc
test
mov
xor
push
out
push
movsl
xor
mov
decl
sbbl
subb
inc
ljmp
loopne
sbb
out
jl
mov
scas
lcall
les
mov
popf
xlat
nop
xchg
mov
fcmovnu
dec
push
dec
test
int3
in
lahf
push
xchg
push
arpl
std
imul
jg
ljmp
push
das
dec
push
bound
sbb
mov
sbb
jnp
xor
ljmp
int
mov
scas
stos
lcall
nop
roll
add
fidivrs
mov
mov
inc
pxor
sahf
cmp
cmp
shrb
xorl
loope
cmc
mov
movsb
popa
xchg
lock
cld
sbb
insb
aam
enter
out
mov
je
sub
pop
movsb
mov
xor
jbe
mov
lcall
inc
mov
dec
sub
push
cmp
movsb
lcall
fwait
add
xor
push
fs
push
aam
fmul
inc
fnstenv
pop
test
xchg
fcompl
xchg
into
push
data16
call
decl
not
pop
xchg
xchg
dec
addr16
call
add
popa
or
sbb
pop
fcomip
jle
test
es
push
xchg
scas
xor
add
sbb
or
mov
cmp
fdivrs
jmp
pop
clc
inc
and
mov
clc
repnz
in
or
fidivs
cmp
loopne
push
xchg
and
ljmp
mov
push
xchg
aaa
daa
js
mov
mov
push
fs
mov
pop
mov
stos
push
jae
insb
push
sahf
ljmp
dec
stos
and
sub
rorl
stos
inc
enter
in
adc
fidivrs
enter
pop
clc
out
movsb
push
sub
sarb
bound
fimuls
out
jp
and
jl
mov
push
cmpsl
ss
sub
push
mov
mov
cmp
les
jle
in
sub
into
jo
sbb
dec
mov
dec
inc
daa
mov
or
popa
xlat
jnp
scas
pop
push
or
and
jmp
in
xchg
les
out
pusha
cli
or
ljmp
cmpl
pushf
ret
cli
rcrb
dec
fcomp
jle
call
pop
pop
adc
jge
ffree
sbb
frstor
sbb
ror
push
mov
scas
repz
mov
push
xlat
push
dec
fs
icebp
incb
rcr
ret
fsubs
jmp
mov
pop
adc
pushf
sub
jb
xor
lea
or
inc
movsl
add
lock
or
jg
inc
not
pop
cmp
jl
or
and
push
ret
ljmp
sti
aaa
pop
mov
outsb
pop
mov
mov
mov
sahf
lea
ror
pushl
in
inc
xor
or
aam
popa
inc
xchg
sbb
ds
pop
cwtl
mov
cmpsb
pusha
inc
call
add
xlat
ss
leave
xchg
sub
sbb
add
add
inc
mov
mov
pshufw
push
jbe
mov
inc
adcb
inc
fwait
negb
outsl
lcall
insl
aaa
mov
mov
xlat
cmp
cmp
out
or
mov
xor
add
sub
test
pushl
jp
push
pop
pop
repz
test
cmc
adc
leave
hlt
out
fdivrl
insl
ud0
ljmp
mov
leave
cli
call
fimull
sub
shll
cmp
adc
mov
out
mov
jle
cld
xchg
mov
pop
mov
movb
mov
fs
add
xchg
sbb
cmp
cs
call
fwait
les
in
add
into
pop
in
cld
pushl
test
cmovbe
pop
xchg
inc
out
push
int3
stos
lret
xchg
add
xchg
fcomip
add
push
push
or
and
aas
jae
mov
pop
std
out
rorb
jns
aad
cs
xchg
decb
lret
out
mov
insb
xchg
xchg
pop
bound
lds
pop
out
sbb
ret
aas
mov
incl
movl
or
jg
fcoms
ds
es
arpl
pushl
std
mov
cmpl
inc
jmp
cmp
repz
addr16
jg
ficomps
jg
push
pop
push
insl
test
call
mov
xor
dec
pop
push
push
out
add
adc
testb
popf
add
test
lcall
xchg
dec
idivl
push
jmp
test
xor
shl
mov
scas
adc
mov
cltd
jo
dec
sar
mov
bound
lock
loopne
cmc
or
jg
mov
popf
or
sub
xchg
pop
loope
cld
call
frstor
lock
incl
ljmp
push
xchg
mov
sarl
jmp
add
sbb
jmp
lds
dec
lock
and
lret
js
xor
hlt
mov
and
loopne
and
lgs
nop
jecxz
xchg
mov
push
sbb
xchg
mov
push
jo
cmp
push
cli
scas
jl
or
or
jne
pop
mov
ja
fnstenv
push
and
adc
mov
push
mov
les
incl
in
sbb
sbbb
mov
test
stc
dec
mov
xchg
decl
jmp
in
cwtl
int3
push
in
shll
push
adc
incl
cld
mov
push
and
inc
fimuls
out
cmp
mov
add
xlat
mov
or
pop
in
into
mov
pop
adc
jge
out
clc
jmp
add
insl
cltd
idivb
ficompl
into
mov
hlt
stos
shrl
stos
mov
fdivl
lods
cmpsb
mov
mov
jg
stos
lret
push
sbb
mov
cwtl
clc
add
cmp
cld
jmp
call
filds
sub
out
icebp
sarl
clc
inc
out
mov
shl
adc
xor
add
decl
ficomps
scas
push
mov
dec
adc
and
dec
or
pushl
mov
fisttpll
gs
push
jg
or
pop
jecxz
cmpsb
adc
loope
dec
cmpsb
or
movsl
lcall
imul
jmp
mov
arpl
aas
pop
sub
mov
ljmp
int3
sub
xchg
pop
dec
daa
rclb
incl
in
cwtl
cs
push
mov
ja
inc
das
outsl
and
or
call
lock
jne
cmp
sbb
pop
fidivrs
outsb
js
dec
or
pushf
push
dec
xor
mov
decl
or
or
aas
std
mov
mov
out
cmpsb
fcmovnu
and
mov
call
pop
sub
lcall
std
jmp
pop
notl
loopne
push
inc
push
mov
xchg
imul
mov
dec
decl
lcall
xor
sbbl
cmp
cmove
dec
add
sar
in
in
aaa
pop
lret
sub
cmp
xor
filds
cld
es
into
inc
bound
cs
mov
cmp
push
sub
mov
cli
and
pusha
jmp
fists
cmp
push
mov
cmpl
pop
adc
repnz
ljmp
ja
and
sbb
rcll
cmp
push
popf
xlat
inc
mov
sub
incl
jp
mov
push
sbb
sbb
fidivs
fnstenv
or
incl
inc
call
ss
sbb
adc
ss
inc
sub
xchg
jns
add
lock
and
push
lahf
or
les
pop
cmp
imul
das
rorb
fdivs
push
test
das
mov
in
mov
xor
push
cld
int3
cmp
jae
inc
test
and
sahf
xor
lock
lcall
fs
scas
popf
mov
call
imul
mov
je
in
cli
inc
pop
push
jp
mov
push
xor
mov
scas
pushl
push
mov
or
jle
cmpsb
and
add
enter
test
nop
add
fwait
loopne
add
adc
insb
cmpsl
add
push
sbb
mov
fdivrl
push
call
xchg
pop
lret
fcomps
jae
sbb
pop
sub
out
cmc
push
pop
sbb
mov
sbb
xchg
sub
pushl
std
xchg
and
ja
int3
fnstsw
pusha
repz
and
in
and
or
jmp
stc
in
hlt
pop
fcoms
imul
scas
cmp
ficoml
dec
add
jno
and
pop
dec
or
or
faddl
int
add
into
xchg
mov
push
mov
in
insb
pop
mov
sbb
incl
mov
and
cmp
sarl
aas
inc
adc
daa
test
aam
cmp
pop
mov
jb
loope
jo
shrb
je
scas
pusha
pushl
mov
sbb
xchg
repnz
sub
popa
cmp
into
iret
jecxz
mov
stc
push
orl
ds
stc
notb
adc
stos
pop
and
mov
mov
jmp
add
lds
or
fcomip
iret
mov
push
cmp
js
lahf
xchg
clc
lock
add
int
push
xor
cmp
mov
hlt
fisubrl
pop
dec
inc
xor
daa
xor
sub
fisubl
in
mov
xor
outsl
repnz
inc
mov
mov
and
sbb
xchg
xchg
jmp
cmp
das
arpl
cli
add
pop
mov
aaa
or
roll
mov
faddl
cmp
rorl
jmp
addb
mov
js
in
mov
add
mov
fcom
xor
inc
aad
xchg
jle
call
push
xor
add
int
and
cmp
pusha
sub
inc
aad
insb
stc
stos
imul
mov
data16
dec
add
or
int3
lret
inc
or
shlb
add
xor
mov
gs
add
rol
nop
pop
add
cmpsb
jb
jmp
mov
push
sbb
fisttps
and
jge
into
adc
mov
cmpsb
jns
xchg
insb
mov
inc
cmpl
aaa
cmp
pop
int3
mov
cmp
scas
pop
xorl
push
int3
inc
xor
xchg
jbe
aam
test
lods
cmpsb
std
call
mov
ljmp
sbb
cld
arpl
and
add
lock
jl
and
test
faddl
ljmp
cmp
xor
mov
sub
out
sbb
lcall
aas
sbb
and
ljmp
out
xor
jne
jo
fwait
jne
jmp
test
cmp
imul
sbb
sub
jmp
pop
push
je
mov
push
mov
xchg
out
inc
cli
jg
xor
adc
pushl
aas
xor
inc
sbb
nop
sbb
sub
sub
fisubrs
into
jmp
push
dec
mov
cmp
jo
ret
jno
aas
lret
call
shlb
and
or
loop
ljmp
add
pushf
inc
mov
mov
jge
pop
xchg
dec
adc
fmul
xchg
lcall
in
or
movsl
cmp
lret
aam
lret
pusha
or
mov
fbstp
mov
stos
mov
shlb
adc
shl
fsubrl
ljmp
dec
adc
in
push
or
dec
stc
add
inc
nop
cmc
adc
call
mov
ss
sub
test
stos
lods
or
decl
push
jb
ror
jmp
fbld
or
sbb
sub
std
decl
inc
mov
andl
mov
lea
jg
ss
xchg
outsl
into
inc
mov
add
clc
ljmp
mov
cld
pushf
cmp
or
dec
jmp
mov
cmp
aam
mov
sub
call
pusha
jmp
jno
mov
pop
sub
mov
test
lcall
lret
add
xchg
mov
pop
or
and
loop
push
leave
cwtl
int3
fs
inc
js
out
out
dec
out
or
pop
cmp
sbb
lret
jle
andb
sub
push
mov
aad
dec
cld
jle
jno
mov
push
xor
out
out
testl
dec
xor
pop
insb
inc
inc
mov
jo
out
xchg
cmp
mov
fnsave
jne
mov
sbb
or
sar
das
cli
decl
dec
bound
clc
add
fmuls
dec
idivb
loop
xchg
loopne
xchg
popa
dec
push
imul
roll
fbld
push
inc
jnp
lcall
in
xor
call
or
fimuls
sub
ret
ret
out
pop
push
out
xor
iret
inc
shlb
add
lahf
adc
cmp
jbe
sarb
mov
mov
cmp
mov
ret
cmc
and
sbb
xor
xor
ds
pop
jecxz
inc
jnp
loopne
lds
mov
dec
data16
adc
sti
or
and
mov
cmp
jp
lock
jge
and
mov
stos
mov
or
jae
fiadds
or
pop
pop
movb
mov
outsb
out
repnz
push
stos
incl
mov
sar
int
enter
xchg
pop
or
adc
jbe
movsl
jecxz
incl
cld
ljmp
call
loopne
scas
lahf
push
sbb
mov
fsubs
push
int3
aad
push
ss
xchg
jmp
pop
sub
lock
mov
push
mov
push
xchg
inc
mov
xlat
sti
cmp
sbbl
pop
insl
xchg
add
incl
into
nop
lcall
rclb
lds
popa
push
ss
push
pop
push
int
jge
push
es
mov
loop
lcall
adc
lret
loope
lahf
fst
sub
hlt
fcomip
sbb
or
inc
fildll
aad
jo
mov
cmp
adc
jb
jg
sub
adc
xchg
jle
in
aam
arpl
adc
push
outsl
inc
aam
rorb
in
cmp
ljmp
pop
in
mov
xor
insl
xlat
lea
in
addl
or
xor
mov
test
cmpsl
mov
fnstcw
sbb
jmp
shlb
xor
das
fs
in
pop
stc
push
pop
cmp
insl
push
jl
xor
cmpsl
icebp
in
incl
sbbb
xor
in
mov
test
push
test
sbb
incl
sbb
push
jecxz
sub
ja
aaa
sub
pop
inc
mov
dec
mov
push
pop
sbb
mov
lret
xor
movsb
mov
mov
ljmp
push
lcall
ds
jg
sarb
mul
lahf
in
sub
and
lock
mov
or
and
lods
ds
aaa
lods
cltd
mov
push
mov
in
ljmp
sahf
clc
pop
sub
lea
lods
movsb
add
jge
adc
call
adc
sbb
jle
loop
and
mov
daa
scas
lcall
mov
xor
xor
adc
pop
mov
fisttpl
dec
iret
push
into
nop
xor
lahf
xchg
lcall
jp
add
shl
push
mov
cmp
mov
das
clc
add
fistl
dec
fs
in
inc
in
xchg
std
call
insb
mov
and
stos
cs
in
push
call
nop
aam
dec
jmp
ret
fs
push
shrb
inc
jmp
and
fdivrl
jbe
fst
mov
sub
test
jmp
jmp
in
inc
rorl
rcrl
cmc
loop
jl
out
mov
adc
xor
xor
inc
les
jo
out
call
gs
jg
loope
in
mov
pusha
lock
jge
imul
ficoms
add
stos
pop
pop
pop
mov
adc
ror
hlt
lcall
jns
je
dec
insl
fs
ljmp
iret
call
jns
adc
cmp
in
testl
notb
pop
sahf
call
inc
jecxz
inc
pop
mov
iret
fstpl
adc
inc
push
fwait
adc
inc
in
adc
mov
incl
testl
shrb
add
rol
pushf
fwait
xchg
sub
es
insb
cltd
mov
decl
mov
cmp
hlt
sbb
mov
sub
cmc
cmpb
test
test
inc
decl
ret
mov
jne
addr16
sbb
sbb
sbb
enter
popf
push
decl
pop
std
mov
xor
notl
cmp
call
cmovae
xor
dec
pop
push
xlat
fdivs
int3
stos
sbb
sub
mov
incl
cmp
cmp
dec
jecxz
sub
stos
dec
leave
outsb
adc
mov
movsb
pop
push
movsb
sbb
out
push
sbb
xchg
sub
pop
xor
inc
mov
pop
or
imul
pushl
or
xor
mov
shl
xchg
sbb
roll
dec
out
dec
push
inc
ss
ljmp
jmp
and
inc
mov
subl
inc
inc
mov
lock
pushl
xchg
jo
mov
inc
push
jns
test
nop
dec
xor
js
cmp
sbb
not
loop
sub
aaa
std
outsl
ljmp
jg
push
jbe
xorl
push
rcrl
mov
test
cld
in
test
ret
fidivl
rcll
adc
in
ljmp
xchg
mov
cmp
mov
ljmp
push
in
pop
das
or
addr16
add
jle
mov
xchg
movhps
mov
mov
decl
sbb
xchg
fwait
popf
xor
and
movsb
int
lea
cli
inc
jbe
pop
dec
jge
ficoms
xchg
ret
dec
ret
lcall
dec
bnd
jno
mov
add
test
pop
sbb
adc
mov
xchg
inc
inc
mov
clc
mov
inc
lds
lds
test
arpl
dec
gs
add
incl
enter
xchg
adc
aam
lods
add
and
stos
and
xchg
lock
cli
incl
repz
lahf
add
sub
mov
mov
jmp
push
ljmp
lds
lods
cmc
shl
inc
and
jecxz
push
test
add
rcl
or
dec
pop
and
fidivl
push
decl
lret
sbb
xchg
out
fists
pushf
add
push
std
mov
ja
call
into
call
das
lahf
imul
inc
fdivrl
mov
repnz
push
fsubp
mov
fs
js
addr16
cwtl
shrl
jnp
fcompl
inc
insb
out
push
movb
cmc
push
outsl
stos
mov
ljmp
dec
pop
cwtl
adc
add
jp
cmp
sbb
ss
cmpsl
movb
sub
iret
repnz
lret
or
dec
mov
pop
iret
dec
or
scas
or
mov
push
pop
pusha
pop
xor
cmp
xor
cmp
jbe
cmp
add
rcr
lret
std
sbb
roll
xor
call
dec
addr16
inc
loopne
fs
inc
clc
adcl
pusha
xor
push
xor
dec
pop
add
cmp
adc
push
out
add
inc
xor
into
insb
xlat
test
out
incl
jl
test
and
cmp
test
lods
test
test
pushl
pop
testl
pop
inc
jp
or
lret
insb
lock
outsl
mov
call
xchg
enter
push
mov
adc
cwtl
or
ljmp
ficoml
dec
mov
test
adc
pop
pop
sbb
lcall
mov
pop
shll
fwait
outsb
pusha
jo
call
cmp
push
dec
ja
bound
push
xchg
cld
and
call
in
call
out
ret
inc
mov
lock
sahf
sub
decl
insb
sub
into
xchg
adc
std
cltd
lods
jg
adcl
lret
push
ljmp
adc
push
and
sti
or
mov
shlb
mov
mov
push
in
and
or
and
dec
in
push
popf
or
loopne
push
popl
jle
push
push
xor
cld
mov
jp
jp
lcall
popf
aad
pop
movsb
xchg
dec
add
mov
out
mov
sahf
pop
in
xor
call
push
sub
dec
sub
push
popf
das
and
cmp
call
int
test
push
pop
sub
fnsave
aam
loopne
clc
or
xchg
clc
mov
fs
cmp
xor
repnz
pop
xchg
or
dec
adc
push
cmp
incl
mov
hlt
imul
pop
pop
sti
adc
sbb
mov
mov
dec
fbstp
inc
add
enter
incl
push
jmp
jbe
inc
jbe
dec
int3
fmull
jmp
in
push
mov
cli
inc
cmp
cmp
int3
mov
pop
test
mov
insl
and
jnp
mov
lret
ret
lcall
mov
push
in
cmp
ja
and
call
add
outsl
data16
movsb
mov
call
std
fnstcw
repnz
xchg
rorl
jg
rcrl
and
inc
aad
pop
loopne
call
ficoml
std
icebp
mov
push
imul
fiadds
loop
das
clc
das
add
mov
lds
cmpb
inc
arpl
popa
daa
jno
lock
add
hlt
das
scas
xor
ljmp
in
aad
cld
xchg
mov
dec
mov
push
mov
pop
jb
nop
cli
lock
call
push
jbe
jne
lahf
mov
mov
ss
pop
data16
inc
and
or
xchg
sub
in
call
sbb
ljmp
aas
push
xchg
pop
ljmp
incl
jp
sub
mov
jbe
sbb
movb
jae
fists
ljmp
sub
and
out
ret
xor
mov
jmp
arpl
dec
jmpw
adc
in
cmpsl
jo
inc
decl
data16
repz
mov
fimull
xor
jl
ret
dec
xor
sub
scas
repnz
cwtl
dec
xchg
dec
xor
stos
cmp
faddl
pop
jg
jmp
and
sbb
sub
rclb
cltd
shrb
js
or
lcall
icebp
sbb
jmp
test
cld
fcompl
test
jnp
rorl
inc
sbb
lahf
jnp
xor
push
and
nop
call
jmp
xchg
in
test
imul
pop
jecxz
mov
movsb
mov
adc
or
inc
jl
inc
xor
test
dec
or
xor
cmp
sar
decl
mov
aam
js
les
in
xor
push
sub
ja
stos
testl
push
mov
mov
mov
add
decl
xor
pop
cmc
jmp
in
mov
xor
jne
ficomps
js
mov
ficompl
lar
mov
out
lods
pop
pop
jmp
or
bound
loopne
incl
mov
xchg
popa
stos
adc
out
adc
sbb
std
xchg
xchg
sub
cld
call
iret
arpl
insb
iret
bound
int3
aas
lods
sbb
lcall
out
stos
sbb
and
dec
pop
flds
fimuls
gs
out
inc
jnp
pushl
std
fprem
inc
movl
sub
out
pop
mov
push
andl
mov
std
decl
cmpsb
mov
fdivrl
int3
or
mov
mov
xchg
or
cmpl
jnp
add
cmpsb
xchg
ds
mov
or
fistl
rcll
enter
sbbl
xor
cmp
bound
push
scas
lcall
cmp
jno
dec
pushf
mov
mov
jnp
hlt
lcall
add
sub
sbb
lret
dec
push
xchg
pop
into
xchg
or
ja
call
clc
dec
shl
mov
insb
mov
fisttps
dec
inc
jae
inc
jmp
jmp
xchg
mov
lret
push
mov
out
inc
fwait
add
jnp
out
pop
dec
mov
ds
sub
xor
inc
jno
jne
inc
fsubl
adc
repnz
mov
in
inc
cli
jge
lcall
into
jmp
nop
aam
ljmp
roll
inc
push
ljmp
sbb
mov
xchg
adc
xchg
dec
adc
pop
add
sarl
add
testb
in
incl
hlt
fdiv
pop
or
inc
mov
hlt
popa
into
cmc
repnz
decl
mov
cmpsb
dec
data16
jo
add
and
ljmp
clc
frstor
mov
jg
leave
add
lods
ljmp
je
loope
xor
add
out
leave
inc
xchg
jbe
cli
add
incl
rcrb
mov
repz
push
jmp
xor
xchg
ja
xor
lcall
sub
adc
int3
jle
pushl
out
out
dec
pop
cmp
jmp
push
fmuls
jae
add
xchg
sarl
stos
fistps
jg
imul
cmpsl
push
adc
xorb
xor
pushl
cmp
push
popf
in
mov
jo
mov
xchg
dec
inc
call
test
decl
ljmp
mov
aad
mov
adc
testb
jo
movsb
and
push
fs
call
js
jbe
cmp
adc
add
push
mov
ja
scas
stos
rorl
inc
sub
into
cmp
pop
cs
xor
pop
sub
movsb
repnz
push
cmp
call
add
scas
cmpsl
addr16
in
enter
je
enter
ds
sub
call
mov
cmpsl
jge
fwait
ja
jmp
test
xor
dec
push
decl
mov
push
pushf
arpl
rolb
sar
pushl
sbb
in
sub
jecxz
xchg
fbld
testb
adc
ljmp
std
insl
shlb
or
push
es
pop
mulb
inc
mov
push
out
push
mov
in
int
jne
xchg
cli
es
dec
inc
and
sbb
lcall
out
mov
xchg
xchg
jmp
adc
addr16
cmpsl
cmc
xor
pop
cld
fcomip
incl
out
or
les
xchg
lods
jg
das
adcb
mov
pop
pop
cmpsl
push
cmp
jno
xchg
xchg
dec
inc
xchg
loope
pop
sahf
inc
loopne
ja
sahf
outsb
sti
cmc
cmp
pop
fwait
pop
xchg
sbb
filds
jbe
or
int
xor
hlt
movsl
mov
xor
fbld
dec
loope
repnz
jo
add
pop
lods
jo
inc
mov
mov
out
pushf
in
repz
sbb
adc
sbb
out
adc
sbbb
orl
sahf
mov
jmp
sub
pop
das
push
out
xor
in
dec
cld
push
fucomip
inc
inc
lahf
push
add
add
clc
jmp
mov
icebp
stos
inc
jp
inc
jns
mov
adcl
jmp
xchg
sti
imul
jns
fcomip
inc
xchg
ss
jecxz
xchg
ficompl
pop
and
cmp
cmc
or
inc
js
sets
mov
inc
fcoml
loopne
arpl
fimull
xor
sbb
nop
mov
dec
add
jg
and
adc
add
fstl
mov
dec
cpuid
fisttpll
es
movsl
jl
test
xor
scas
add
jmp
push
and
push
cmc
mov
push
push
inc
rorb
sub
nop
inc
fs
sahf
xchg
ljmp
ljmp
pop
or
mov
xchg
push
add
xchg
adc
ds
lcall
sahf
inc
dec
pusha
jmp
mov
rcll
sti
clc
add
test
add
lcall
fnstsw
flds
ret
stos
xchg
movsl
loope
and
aam
aam
test
push
adc
jmp
aam
adc
int3
enter
inc
mov
sub
cmp
mov
ljmp
jne
movsl
jge
sub
inc
xor
push
cmp
lret
andb
pop
hlt
scas
cli
aad
mov
push
mov
lret
rcll
mov
mov
pop
enter
movsb
sbb
pop
jge
std
ficompl
mov
dec
fildll
std
inc
test
or
push
movsb
out
mov
call
ret
aaa
psrad
aaa
push
mov
fidivrl
movswl
rorl
push
add
jmp
lret
dec
jno
ffree
jbe
sbb
fcomip
fs
js
sub
stc
mov
cmp
cmp
ljmp
in
cmp
sbb
clc
mov
add
xor
leave
js
sbb
cwtl
mov
nop
stos
faddl
xchg
mov
iret
push
adc
aad
xchg
icebp
decl
daa
pop
loopne
adc
fmuls
cmp
sbb
int3
mov
pop
cmpsl
ret
sub
adc
pop
add
popa
or
mov
jge
inc
mov
ljmp
sbb
push
cmp
mov
pop
repz
or
cmp
push
and
cmp
popa
addr16
mov
mov
mov
and
inc
ret
movsb
or
cltd
dec
out
or
call
sbb
mov
movsl
jbe
fsubl
loop
jno
rsm
jge
daa
dec
sbb
aad
xor
lock
and
and
adc
jg
dec
sbb
pop
jns
adc
dec
mov
data16
insb
or
lcall
and
insb
out
and
jno
pop
mov
neg
mov
or
clc
cmpsb
rcrb
incl
cmpb
cmpsb
jge
sbb
cmp
rcl
test
dec
xchg
xchg
shlb
jmp
xor
jo
mov
iret
fmuls
xor
pop
jns
movsl
call
pop
cmp
mov
sbb
rorl
adc
rclb
mov
push
add
jmp
cmpsl
into
jb
out
lret
pop
inc
fmull
int3
cmp
ret
sub
js
cmp
fs
inc
aaa
adc
dec
sub
movsb
xor
push
mov
outsl
push
ffreep
jo
ficompl
dec
pop
xlat
push
mov
push
and
repz
xor
add
pushl
or
adc
adc
pop
mov
mov
pop
jnp
mov
sub
incl
mov
jecxz
fisubrs
adc
cwtl
jp
cmp
sbb
mov
jmp
xchg
push
fcos
ljmp
ror
pop
mov
ja
mov
shll
mov
jg
sbb
sbb
mov
or
aam
mov
xchg
outsb
sbb
rcl
scas
jecxz
and
decl
test
cmpsb
loope
pop
subb
rorb
mov
or
cmp
test
fstps
ja
adc
scas
mov
dec
cs
mov
push
xor
jmp
movl
inc
add
stos
popa
loope
adc
shlb
lock
lods
loop
push
sub
mov
cmp
mov
nop
jg
fbstp
shl
int3
fsubp
jmp
mov
in
decl
push
int3
out
push
jge
push
pusha
inc
outsl
cmp
inc
adc
in
cltd
fstl
pushf
adc
and
xchg
pop
out
icebp
lret
add
iret
repz
mov
xchg
jno
bound
xlat
call
pushl
js
pop
in
xor
pop
pop
sbb
xchg
aad
mov
sub
dec
leave
xor
sbb
jp
pop
mov
add
loopne
jg
in
and
add
and
scas
shll
nop
sbb
sarb
fdivl
sbbl
aad
and
imul
push
push
arpl
add
scas
aad
xchg
xchg
push
cmp
add
icebp
and
jae
push
xchg
in
or
pushl
mov
jle
sub
ficoms
jo
xchg
adc
mov
xchg
jg
mov
mov
cmpsl
dec
pushf
sub
mov
add
push
jle
imul
loopne
decl
nop
fwait
cmp
cmpsl
xchg
fistpl
mov
popf
mov
inc
icebp
fs
ljmp
inc
adc
aam
nop
push
sbb
test
jmp
mov
ljmp
jne
jnp
dec
imul
mov
cli
int3
fistl
iret
lea
cmp
fcoms
pushl
xchg
xchg
adc
xchg
cmp
fsubrl
out
lea
decl
add
sub
xchg
test
mov
xchg
jmp
test
xchg
cltd
sti
call
xor
insl
mov
popf
mov
sbb
jae
lea
loopne
mov
jmp
push
gs
push
jne
jg
pop
adc
pop
lods
jp
popf
and
ds
pop
sub
xchg
sar
sub
clc
push
nop
pop
int3
push
cmp
mov
cld
mov
xchg
fwait
push
dec
and
pop
dec
andl
test
ja
jg
decl
mov
jg
sub
je
jp
xor
insl
repz
pop
loop
cmp
iret
xchg
mov
push
fiaddl
out
in
sub
test
jp
test
outsl
xor
jns
cs
aam
into
subb
daa
aam
loope
rcrl
pop
adc
lahf
mov
mov
push
push
sub
daa
jae
add
aam
mov
inc
mov
sti
cmp
outsb
cld
sub
js
shl
pop
inc
adc
adc
mov
or
cmp
ljmp
aaa
loop
ss
mov
jbe
jl
test
pop
ds
sub
sbb
adcl
scas
sub
mov
push
and
loopne
mov
push
ds
inc
and
fisttpl
adc
xor
dec
jnp
push
vpcmpgtd
mov
adc
add
jmp
pusha
xchg
lods
mov
test
lods
inc
sub
in
mov
xchg
ljmp
out
cmpsb
adc
mov
pop
fisubl
push
or
mov
call
call
pop
push
adc
dec
lahf
sub
std
and
test
mov
hlt
mov
lcall
out
dec
xchg
aam
inc
inc
adcl
dec
loope
enter
fcos
lcall
sbb
or
mov
scas
and
lods
or
xor
cmp
xchg
in
pop
repnz
in
mov
lret
outsl
fs
js
jmp
ss
sub
in
sbbb
fucomip
cli
push
in
ja
notl
icebp
ja
dec
add
adc
sbb
fisttps
insl
mov
push
pop
inc
sub
pop
clc
into
mov
scas
adc
add
mov
stos
fwait
pop
xor
cwtl
arpl
jmp
mov
aam
rolb
fsubr
es
fldl
pop
sbbb
fucom
dec
mov
call
mov
int
cltd
cmp
fwait
jno
adc
inc
push
cmp
in
or
call
shrb
inc
mov
push
ds
push
push
sbb
scas
nop
mov
push
mov
sub
pushl
loop
adc
mov
xor
or
push
bnd
xchg
xchg
sbb
pop
jbe
add
jp
insl
popf
mov
inc
es
pop
shr
inc
push
or
mov
int
sbb
lcall
sbb
shrl
lock
outsl
aam
cmpsb
lahf
movb
lds
ljmp
xor
pop
xor
iret
cli
pusha
jns
push
rol
mov
or
insb
or
fcomip
cmp
out
sbbl
sbbl
pop
imul
cmp
outsl
in
pop
mov
dec
add
mov
orb
outsl
mov
mov
mov
pop
shlb
negl
xchg
nop
in
pusha
inc
cmp
idiv
push
xor
inc
les
cmp
adc
dec
cmpsb
je
es
jp
push
pushl
dec
sahf
mov
mov
mov
mov
mov
cmpsl
xchg
mov
pushl
inc
or
sbb
inc
jp
lods
jecxz
dec
sub
ljmp
mov
jmp
mov
xchg
cmp
lcall
push
mov
stos
ljmp
int3
fbld
aam
pushf
dec
mov
add
cmpsb
sbb
cs
sbb
push
out
into
cmp
push
movsb
loopne
add
cltd
jo
jle
sti
sarl
out
fnstenv
and
cmpsb
jb
push
aaa
aam
adc
pop
adcl
sub
mov
fistps
test
cmpsl
ret
cmp
fstps
jg
call
sbb
repz
push
inc
gs
sub
cmp
aam
test
ljmp
shrb
out
jp
insl
or
dec
loope
test
jmp
jbe
hlt
and
mov
cmp
dec
pop
fistpl
addr16
mov
inc
loope
inc
aaa
push
jmp
dec
xchg
js
sahf
mov
hlt
aas
jb
scas
das
cld
fucomip
push
push
dec
cmpsb
outsl
push
addr16
addl
jle
outsl
pusha
out
sbb
ss
sub
test
jmp
fsubp
leave
mov
popa
sbb
mov
in
les
jne
fldl
es
pop
inc
test
gs
test
fdivrs
mov
int3
daa
add
inc
xor
fists
inc
in
lret
adc
adc
mov
decl
add
push
ret
pop
insb
ljmp
enter
stos
sbb
xchg
lcall
dec
adc
mov
vpmadcsswd
sub
in
mov
decl
sub
xor
arpl
shl
mov
inc
jp
lock
mov
jne
push
inc
aam
mov
jmp
jl
jl
cltd
in
loope
test
pusha
adc
stos
or
jge
sub
lcall
xlat
dec
loope
mov
aas
push
or
fimuls
mov
es
mov
cmp
rcr
loop
mov
scas
test
lret
mov
aad
sar
push
xchg
cli
andb
mov
sub
jbe
dec
mov
mov
fsts
lcall
dec
sbbl
mov
adc
or
cmp
jmp
mov
mov
jmp
and
outsb
in
dec
and
out
test
sub
xor
in
std
push
mov
and
dec
leave
fwait
jle
lcall
inc
imulb
fstpl
fstl
fstpt
out
clc
cmp
movsb
mov
mov
fmull
pop
push
in
push
dec
ljmp
stos
pop
lcall
mov
repz
jp
pusha
pop
idivb
int
cmp
jmp
mov
xlat
aas
mov
xchg
daa
pop
add
mov
fisttpll
out
daa
ret
xchg
lods
jno
mov
pop
lock
push
jl
popf
cmp
push
xchg
andb
pushl
loope
loope
mov
jl
pop
lahf
cmp
imul
adc
pop
or
dec
bound
mov
push
arpl
pop
and
xor
fdivl
outsb
adc
in
call
stc
das
add
or
adc
lock
std
push
test
int3
push
ret
cmp
fsubrs
pop
add
or
inc
xchg
inc
ja
lcall
dec
fidivrs
repnz
insl
shll
sbb
cwtl
testl
loopne
dec
push
sbb
daa
cli
inc
inc
and
cmpsb
andb
clc
and
xorl
jmp
push
into
xor
sbb
js
sub
sub
adc
shlb
and
decl
fs
in
adc
sub
call
lea
adc
push
lds
fldenv
fstpt
ljmp
and
pop
test
test
inc
xchg
insb
xlat
rolb
dec
cmpsl
xchg
fwait
push
and
dec
inc
loopne
jmp
leave
push
mov
mov
mov
push
adc
mov
test
push
popa
incb
push
xor
test
inc
push
push
imul
xorb
mov
pop
jg
mov
jno
cmp
mov
jmp
ss
jno
sbb
jg
dec
mov
movsl
pop
mov
dec
addr16
jmp
or
lods
cltd
xchg
ljmp
dec
adc
lds
pop
js
push
pop
lock
cmpsl
pushf
fidivrs
xor
or
mov
dec
std
call
xchg
jg
pushf
lods
loop
push
mov
cmp
mov
ljmp
mov
ss
mov
clc
sti
cmp
retw
fdivrs
cmpsb
daa
arpl
sub
arpl
sbb
mov
fisttps
aas
cmp
xchg
loopne
cli
mov
sar
mov
mov
sarb
dec
add
jl
sub
loopne
fisubrs
or
imul
xlat
push
jne
fbld
sar
or
nop
jnp
xchg
fstpt
dec
add
testl
mov
in
add
dec
inc
xorl
lret
and
movsl
int
xor
imul
ljmp
test
ret
xchg
inc
mov
pop
mov
bound
cmp
jp
cld
aas
pop
incl
sub
mov
es
push
data16
cli
push
ret
mov
scas
inc
inc
push
mov
adc
mov
loopne
pop
daa
mov
sub
ret
xlat
dec
into
scas
jbe
jnp
push
lcall
call
and
inc
lcall
mov
mov
hlt
dec
call
and
fldenv
jae
gs
cmpsl
cltd
test
and
in
incl
jo
or
nop
mov
or
in
cmp
add
sub
incl
pop
movsb
pop
sub
jnp
mov
incl
dec
sbb
incl
and
incl
fmuls
roll
jbe
push
dec
inc
imul
jmp
pop
lods
xchg
into
insb
and
inc
pushl
xor
adc
lods
lods
or
ds
xchg
and
icebp
pushl
cs
pop
into
xchg
adc
inc
leave
or
ljmp
xor
dec
jns
sahf
movsb
test
aad
sub
inc
or
adcl
adc
xchg
jle
daa
int
mov
divb
jb
mov
cld
lcall
cwtl
les
fcmovnbe
cmp
and
mov
mov
call
out
xchg
out
popf
cmp
test
sub
iret
dec
push
loop
insl
aaa
push
incl
pop
or
inc
jo
jne
inc
lcall
sub
push
xor
sarl
dec
movsl
jmp
add
scas
ljmp
orb
out
sub
aam
clc
pop
mov
in
sub
out
cli
jmp
jae
and
loope
je
fildl
incl
nop
adcl
xchg
mov
mov
in
or
dec
mov
arpl
scas
outsb
inc
ja
pushl
dec
add
ds
out
cli
ret
ljmp
sub
xor
out
mov
bnd
push
pop
mov
cmp
xchg
jbe
ja
std
pop
cmpsb
je
xor
dec
dec
sbb
jnp
jae
mov
loope
repz
scas
add
xchg
sub
mov
mov
pop
cmp
lock
xchg
and
add
xchg
bound
ljmp
lcall
xlat
cs
sarl
enter
cwtl
xchg
daa
clc
add
xor
pop
loop
lock
ljmp
push
shld
test
daa
add
stos
jb
cmp
es
cmc
decl
pop
rorw
and
jo
adc
ret
in
int3
and
mov
xchg
decl
push
sub
sbb
mov
rorb
sbb
or
xchg
jle
jl
sub
inc
lods
mov
jo
jl
add
sbb
leave
xchg
or
into
fadd
cmpsl
icebp
pop
popf
in
cmp
and
ljmp
pusha
inc
lock
icebp
pop
xchg
bound
jmp
pop
and
cmp
or
fstl
adc
push
push
inc
out
popa
pushf
mov
fmuls
cli
lods
mov
push
dec
jae
sarl
mov
pushf
add
js
mov
call
xor
repz
adc
test
cmc
addr16
lahf
pop
adc
loope
lcall
or
in
mov
sub
cwtl
jle
mov
xor
sahf
inc
mov
push
jmp
outsl
hlt
in
stos
cmp
push
aas
or
sbbb
in
arpl
in
xor
sbb
cmp
jmp
dec
adc
jbe
jecxz
mov
sub
or
fidivl
imul
pop
lea
and
cmp
and
por
pop
fbld
lret
popa
sub
jae
das
aaa
push
lcall
cmpsb
loopne
lock
popa
cld
fbstp
adc
fildl
mov
push
fsubrl
cltd
xchg
mov
jb
adc
jno
ds
ljmp
and
xor
pushf
mull
cwtl
loope
incl
add
loop
or
inc
shrl
mov
push
test
and
aas
pusha
jae
mov
mov
pop
cli
dec
jns
pusha
rcll
mov
sub
cmp
or
lock
inc
sub
in
lahf
enter
add
fistpl
pop
xchg
notl
idiv
das
clc
xchg
and
mov
lds
sbb
cld
jno
sbb
dec
rcrb
insb
ljmp
cli
mov
subb
popf
cltd
pusha
pop
push
add
mov
mov
lcall
aas
test
dec
lock
and
test
lahf
or
adc
insl
inc
cmp
jg
mov
sbb
lret
lods
mov
loope
in
ret
hlt
ja
mov
scas
call
mov
cwtl
movsb
xchg
pop
push
sub
and
movsl
jo
cltd
adc
and
mov
xor
ja
dec
mov
insl
pop
mov
cmpl
xchg
sub
mov
stos
adc
dec
adc
add
decl
xchg
rcrl
xor
mov
cltd
jl
sbb
mov
and
push
in
jge
add
rclb
lcall
push
xchg
pop
push
rorl
sub
jp
jmp
insl
dec
leave
jo
sbb
mov
lahf
pop
or
push
das
sbb
and
loop
insb
ja
cmp
push
imul
inc
adc
sub
lds
jge
out
push
decl
push
pop
lret
scas
les
xchg
cmpsl
nop
push
add
decl
jmp
movsb
pop
imul
cltd
dec
fwait
ljmp
dec
jne
jae
add
mov
mov
add
ljmp
out
sbb
sbb
sbb
lret
jg
orl
lret
add
xor
pop
jmp
xlat
out
add
jb
shl
cmp
testb
push
jecxz
xor
pushl
stos
outsb
push
lods
ljmp
mov
pop
les
xchg
in
lret
stc
pop
mov
cli
mov
cmp
inc
lret
scas
jmp
movsl
leave
aad
sbb
bound
fisubl
add
inc
ss
jmp
aas
fdivrs
add
cld
fchs
fdivrs
test
push
jnp
push
xchg
xchg
dec
xchg
sbb
lods
loop
inc
dec
loop
loope
mov
mov
stc
xchg
or
dec
std
pop
adc
adc
and
scas
fidivrl
pop
cmpsb
mov
subl
addr16
pushl
mov
addr16
and
cmp
sbb
and
xor
pop
jg
jmp
lcall
cmp
call
fisttpll
lods
jge
cmc
push
decl
push
mov
jb
test
jmp
lods
cmp
push
leave
mov
lcall
jno
xchg
pop
mov
push
cltd
jmp
mov
sbbl
jecxz
add
lods
pop
add
jo
ss
mov
xorl
mov
adc
pop
or
sbb
jge
pop
jno
push
daa
pop
call
mov
sbb
mov
nop
dec
sbb
lahf
gs
xor
mov
call
cld
and
es
outsb
fwait
jp
push
ret
sbb
adc
pop
jecxz
call
or
sub
in
lods
jbe
adc
lret
cmpl
and
enter
ljmp
push
movsb
xchg
push
in
jo
push
mov
decl
jo
imul
pop
sub
dec
fwait
xchg
adc
sbb
push
mov
pushf
into
cmc
je
loopne
dec
repnz
sar
decl
ljmp
pushl
mov
jp
lds
push
ljmp
fsubrl
push
xor
cmpsl
shll
pop
xchg
mov
rcrb
adc
cli
ljmp
jl
cmc
test
jp
popf
sysexit
mov
mov
mov
movl
in
inc
pop
xchg
stos
nop
mov
les
jg
into
push
push
std
and
sbb
sbbb
hlt
jae
in
sahf
add
inc
idivb
popa
jg
mov
lock
sub
adc
jne
pminub
inc
sbbl
cmp
call
rcll
jl
xor
outsb
sti
repnz
jmp
pop
or
push
decl
movsl
mov
mov
ret
sbb
jp
aad
scas
jp
aas
xor
decl
jl
or
dec
dec
popf
push
inc
in
clc
push
stos
pop
sahf
sbb
mov
pop
call
sub
xchg
sbb
pop
push
sbb
out
pop
cmp
fisubrl
xor
mov
aas
cmp
mov
mov
insl
xor
sbbb
cwtl
imul
jg
rcll
inc
shlb
dec
icebp
fmul
add
mov
mov
jne
iret
dec
mov
sbb
sti
mov
nop
in
pop
cwtl
repz
xor
decl
xor
or
je
adc
fidivrs
jne
sbb
mov
jmp
out
pop
pop
nop
hlt
movsl
imulb
and
es
pushf
and
inc
dec
icebp
mov
test
or
jmp
dec
cwtl
pop
lahf
adc
addr16
xor
jno
ss
dec
fimuls
add
xchg
outsl
mov
jmp
mov
mov
out
mov
scas
push
mov
ds
fidivs
sub
faddp
jmp
dec
add
jecxz
pop
in
jbe
fs
push
jne
and
push
mov
dec
arpl
mov
push
cld
ror
mov
dec
and
fsubr
jns
jmp
aaa
lret
jmp
jns
decl
in
jne
lahf
cmp
pop
mov
mov
fs
pop
int
mov
dec
sbb
jge
dec
push
jno
xor
sbb
pop
jae
pop
pusha
popa
aam
insl
mov
ret
or
xor
lret
cmpsl
in
cmpsl
mov
mov
mov
pop
xchg
cmpsb
mov
and
mov
push
stos
fwait
xor
push
ret
imul
cltd
scas
adc
cmp
clc
jl
aas
inc
fdiv
jg
ljmp
test
scas
mov
sub
movsl
out
mov
in
lcall
add
movsb
fists
pop
jnp
insb
enter
nop
ret
popf
scas
hlt
fisubl
pop
decl
adc
xor
jb
imul
addl
nop
push
add
imul
das
fstpt
int3
jno
cmp
pop
lods
xchg
scas
pop
cmp
lea
decl
lret
mov
adc
push
or
call
lcall
mov
dec
push
sub
fndisi(8087
jp
enter
lcall
leave
scas
mov
adc
push
and
lcall
pop
inc
pop
ljmp
cmp
std
lahf
push
mov
jae
sub
jo
test
jmp
mov
adc
mov
aas
add
or
int
mov
and
pop
inc
and
stc
inc
lcall
mov
imul
movsl
dec
jo
std
push
fisubs
push
outsb
xchg
or
insl
lahf
sarb
repnz
cld
and
jge
scas
inc
xor
xchg
push
jl
ljmp
je
push
inc
jns
movsb
mov
iret
mov
cs
xor
inc
xchg
xlat
adcb
clc
ljmp
out
sbb
inc
add
leave
sbb
punpckhwd
push
xor
jp
sub
fs
icebp
dec
push
stos
fisubrs
mov
jmp
orl
in
adc
sub
jne
dec
or
fisttpll
pop
test
hlt
clc
arpl
les
stos
icebp
dec
adc
or
mov
fmuls
xor
jg
mov
decl
sbb
jae
stc
scas
adc
outsb
cmp
out
inc
outsb
imul
sar
call
mov
lahf
and
push
xor
jno
mov
iret
sbb
ret
aad
mov
mov
dec
lcall
aas
fdivr
std
fistpl
or
gs
iret
sbb
jae
mov
ljmp
das
into
dec
cmp
fs
push
fimull
cs
loope
dec
mov
lcall
or
push
mov
subb
mov
dec
fnstcw
jmp
sahf
sarl
stc
mov
mov
cmp
mov
mov
mov
inc
lock
clc
out
leave
imulb
in
mov
add
int3
mov
mov
cmp
filds
sub
repz
mov
lods
cmp
xchg
mov
add
loope
cwtl
push
das
incl
sub
ficoms
inc
lahf
inc
jle
cmc
call
xchg
std
mov
insb
mov
sub
imul
loope
or
mov
scas
mov
fdivr
ds
or
test
sub
jbe
insl
push
incb
add
sub
outsl
into
pop
lock
aad
lods
add
stos
repnz
dec
mov
ljmp
jbe
mov
dec
jo
in
shr
fimuls
incl
inc
mov
inc
int3
out
fisttpll
sbb
js
enter
mov
cmc
iret
in
int
mov
lret
and
inc
aad
mov
jns
add
push
pop
and
or
leave
cld
jge
fdivs
mov
aaa
push
ret
int
push
sub
push
decl
mov
add
xchg
sub
push
cmp
lods
ror
inc
call
dec
decl
cmp
in
movsb
ljmp
push
gs
sbb
inc
push
inc
enter
int
int3
mov
stos
push
inc
push
push
xor
adc
mov
arpl
decl
jnp
mov
mov
shll
xor
mov
into
icebp
shr
in
xchg
pop
pop
sahf
imul
xchg
dec
or
sub
or
scas
loop
int
push
add
jg
out
xchg
mov
mov
sbb
ficompl
pop
out
mov
call
mov
pusha
dec
testl
sbb
or
push
lcall
test
mov
imul
xchg
adc
xchg
lods
aad
stc
ret
loop
add
pushf
jge
push
dec
dec
in
adc
mov
lods
inc
mov
mov
xchg
andb
and
mov
pop
or
add
in
jmp
enter
push
loope
mov
mov
mov
fisubrl
in
mov
stos
shll
out
out
cmp
mov
mov
mov
call
rcl
jbe
in
jbe
inc
cmp
lret
mov
mov
pushl
sbb
nop
mov
mov
fnstenv
hlt
mov
fcomip
or
mov
adcb
push
pop
mov
cltd
mov
sbb
mov
sar
mov
cmp
lock
push
insl
int3
loope
sbb
xchg
lcall
subb
inc
and
nop
and
je
pushf
insl
inc
loope
shl
mov
cwtl
loope
arpl
lcall
push
xor
lret
inc
lds
shlb
out
repnz
mov
push
mov
fdivp
outsl
mov
ljmp
inc
pop
push
call
sbb
gs
push
ds
les
pop
mov
movsb
insb
cmpsl
push
dec
push
push
add
pushl
adc
mov
lods
jl
das
or
js
dec
scas
add
adc
fiaddl
cmp
decl
cwtl
ss
out
dec
mov
xchg
lret
iret
fstpl
sbb
test
and
and
mov
xchg
shlb
sbb
ret
std
les
jns
jns
mov
mov
cwtl
shll
arpl
and
push
testl
jmp
dec
jle
push
pop
shlb
mov
sbb
mov
jecxz
jae
sti
es
inc
add
iret
cmpsl
cli
es
leave
inc
sti
aaa
or
ja
inc
sti
jbe
xchg
mov
test
das
xchg
decb
add
cld
shrl
pushl
add
mov
aas
sahf
jae
mov
fs
mov
inc
enter
jge
sti
clc
ljmp
rcr
push
rorb
dec
push
jns
sbb
xchg
xchg
aas
adc
into
push
pop
jns
lock
es
push
popa
adc
xchg
mov
ja
inc
repz
lds
jbe
push
pop
imull
pusha
iret
push
jmp
and
push
out
push
pop
or
mov
call
push
test
leave
sub
into
cmp
mov
xchg
or
shll
test
out
clc
fcomip
jmp
cs
pop
and
jp
mov
ret
js
pop
movb
add
inc
add
xchg
pop
mov
mov
inc
cmp
jb
test
mov
jno
nop
incl
pop
hlt
rcrb
lret
decl
jecxz
leave
jae
pop
cmc
jl
pushf
jbe
push
fdivrl
test
sub
sbb
scas
xchg
inc
add
sarb
int
jns
jecxz
in
push
leave
cltd
mov
cld
cmpsl
inc
mov
cmp
inc
iret
xor
mov
in
dec
sub
mov
sub
cmp
call
inc
pop
out
pop
orl
mov
xchg
pop
icebp
lret
jl
and
pushl
hlt
push
sbb
testb
clc
pushl
stc
xor
pop
push
inc
cmp
sub
jmp
test
xchg
mov
std
fcomip
scas
lcall
adc
push
push
inc
hlt
mov
sub
arpl
pop
mov
incl
ljmp
cmp
stos
mov
cmp
sti
cmc
add
dec
jmp
jmp
outsb
jno
mov
out
sti
mov
add
xchg
leave
xchg
pop
xchg
mov
loope
ud0
call
sahf
je
negb
xchg
adc
push
lds
and
call
test
test
roll
add
pop
scas
xchg
jmp
pop
push
jecxz
xor
lock
aaa
std
pushl
mov
jne
sbb
jge
pop
sbb
and
rclb
decl
cwtl
xor
stos
outsl
xchg
sbbl
mov
mov
dec
cmpb
hlt
sub
call
les
pop
jae
and
sub
sub
xchg
fldcw
xchg
xchg
cmp
repz
cmp
push
jg
mov
mov
dec
decl
popa
out
daa
add
push
arpl
stos
xchg
or
incl
pop
mov
xchg
push
cmpsl
call
mov
fsubs
popf
cwtl
xchg
xchg
fimuls
incl
pop
aas
rolb
and
xor
scas
xor
test
jae
dec
lahf
mov
mov
push
aam
call
bound
xchg
xchg
hlt
xchg
in
jns
ret
lcall
cmp
jmp
cmp
loop
sub
or
jmp
inc
psubsb
lret
xor
add
cmp
inc
jl
movsl
dec
inc
jle
mov
dec
push
rol
dec
adc
lcall
pop
lret
push
and
xchg
mov
mov
lock
ret
mov
pop
cmp
stc
aaa
sbb
fstl
xchg
pop
outsl
stos
into
fs
fistps
pop
sbb
in
or
out
lret
dec
add
cmpsb
mov
and
js
adc
repz
ret
inc
divb
iret
pushf
ret
xor
fdivl
cmpsl
and
pop
cmpsl
and
and
popf
xchg
jns
roll
xchg
adc
inc
mov
arpl
aas
ljmp
mov
negb
inc
jecxz
mov
jecxz
int3
aas
in
jle
jge
cmp
mov
ljmp
jbe
fisttpl
test
xchg
sub
nop
dec
pop
dec
daa
inc
push
jl
mov
inc
xchg
lock
cmp
fcom
aaa
push
dec
scas
cs
push
rcll
pusha
pop
sbb
push
mov
dec
push
lret
clc
loop
mov
or
incl
xchg
push
ss
mov
insb
cmp
pusha
or
dec
cmpl
push
pop
sbb
xchg
pop
rorb
xor
jle
lock
mov
add
xchg
lds
addl
fcoms
mov
xor
fisttps
push
pusha
and
dec
or
mov
lds
xchg
cmp
pushl
mov
lods
sub
mov
stos
loop
or
xchg
pop
add
and
inc
mov
inc
sti
fisubs
sbb
push
js
adc
cli
sbb
and
lcall
dec
cmc
bound
test
lds
fcomip
call
imul
pop
out
add
cld
jp
fidivrs
adc
decl
jle
lods
or
out
sub
sahf
cmp
insl
mov
push
out
dec
testl
dec
faddl
stos
sub
sub
out
mov
sub
lods
mov
rcr
xchg
daa
incl
push
cmp
or
sub
lahf
cmp
sarl
cmp
ss
lds
jp
mov
dec
jp
arpl
ss
adc
add
js
and
cwtl
or
adc
pop
adc
fs
pop
or
lcall
dec
cmc
adc
pop
in
fcoml
aam
cmp
pop
adc
iret
cmpsl
push
cmp
decl
lods
cmc
sbb
cmp
bound
daa
inc
or
nop
fdiv
or
adc
jmp
sub
leave
jle
add
test
scas
jae
loopnew
mov
in
dec
dec
out
std
push
pop
decl
jno
lods
fwait
xlat
stos
sub
popf
movsb
sbb
cmpb
mov
xchg
pop
inc
ss
inc
xor
icebp
jmp
aas
jl
inc
enter
adc
xor
ficompl
lds
inc
mov
popa
mov
movl
mov
mov
incl
jnp
push
cmp
mov
mov
inc
dec
in
sbb
push
fs
cltd
ljmp
call
dec
jb
push
cwtl
xchg
bound
cmp
loope
int
mov
jmp
shr
adcb
jl
sbb
test
push
dec
mov
outsl
sti
adc
mov
dec
jle
fcomps
in
loopne
sti
popa
iret
lds
mov
cwtl
inc
shrl
fdivrl
pusha
push
cmp
mov
ljmp
and
mov
jns
scas
xor
ljmp
dec
cltd
inc
outsl
mov
sub
divl
daa
adc
mov
mov
mov
pop
loopne
out
leave
test
scas
push
mov
sbb
sbb
xchg
rorl
dec
mov
jb
dec
add
xor
jae
out
arpl
pop
in
jno
dec
jo
push
jl
add
cmp
ljmp
nop
xor
outsb
mov
or
push
or
jbe
ret
insl
std
call
lods
lock
or
jne
es
or
dec
jecxz
jle
pushl
dec
jmp
push
lahf
xchg
mov
sahf
dec
adcb
pop
ret
rorl
pop
jg
incl
sub
jo
adc
inc
jae
jmp
mov
xchg
add
cli
jmp
lods
mov
xchg
adc
pop
popf
rcrb
pop
cmc
and
cmp
add
lods
rorb
ljmp
dec
loope
jmp
repz
dec
cmpb
sti
sub
fwait
lcall
mov
sbb
mov
in
insl
mov
mov
ljmp
or
cmp
xchg
iret
jbe
jp
xchg
mov
aad
mov
fidivl
decl
cmp
fnstsw
iret
sbb
arpl
push
imul
dec
push
idiv
jg
decl
enter
xchg
ss
pop
mov
pop
movsb
fsubl
jecxz
scas
or
daa
pushl
jmp
jp
clc
add
cmpsl
xchg
out
jno
das
ds
push
sbb
ret
lahf
pushl
std
decl
xchg
mov
inc
xchg
stos
mov
and
shlb
pop
jl
pop
sahf
pushl
fcomps
jbe
xor
cmp
inc
aad
jl
push
ret
ljmp
inc
nop
jmp
xchg
lods
aaa
mov
dec
push
jg
pop
xchg
nop
fstpt
int
xchg
sub
in
int3
in
cmp
push
aam
mov
out
ljmp
sbb
xchg
or
out
mov
mov
ljmp
mov
pushf
xchg
adc
lods
insl
add
cmp
js
cltd
mov
or
pop
fadds
movb
cvtdq2ps
push
insb
sub
lret
lret
lahf
xchg
and
enter
push
sar
or
sbb
out
adc
pushl
add
pushf
inc
jb
pop
mov
push
jne
adc
in
adc
mov
ljmp
dec
stos
call
xlat
xor
xor
mov
test
stos
fldenv
das
cmp
jecxz
in
cmc
cmp
push
mov
xchg
jo
sub
mov
push
xor
fwait
inc
and
pushl
mov
add
hlt
jne
jnp
sbb
mov
jns
lods
pushl
sbb
and
mov
xchg
fisttps
adc
sbb
data16
push
push
aam
push
out
mov
pop
clc
lds
jne
int
shrl
sti
jno
mov
lcall
and
pop
sahf
mov
xchg
adc
fimuls
jg
sub
sub
jns
or
mov
loop
mov
dec
and
mov
xchg
inc
aaa
clc
add
xor
jnp
incl
xor
ja
or
or
inc
leave
or
push
inc
cmp
cmpsb
call
jg
xchg
pop
rcr
ret
mov
je
movsl
test
aam
adc
int3
out
decl
popf
cmp
cmpl
push
mov
hlt
dec
and
fldt
or
mov
xchg
sbb
mov
mov
aaa
std
mov
push
sub
mov
mov
lea
jae
in
fists
call
mov
mov
loope
fnstsw
push
call
hlt
xchg
jno
out
adc
inc
mov
xor
loop
cmp
imul
mov
cmp
mov
push
pop
pop
pop
out
popf
sbb
je
imul
pop
jns
pop
into
push
cs
cltd
cmp
or
rcll
sub
scas
jo
add
repnz
stc
ret
sub
or
pop
pop
pop
adc
loop
aaa
push
cmp
js
cmp
mov
jl
cmp
insl
int
xchg
push
jle
sahf
push
outsl
in
ljmp
cmpsb
loope
pop
aaa
std
cltd
cmp
mov
jecxz
jp
faddl
pop
sbb
int
decl
jmp
cld
movsl
jg
out
cli
xchg
push
les
out
stos
sbb
es
ds
dec
cmp
cmp
jmp
lahf
jmp
stos
or
jo
andl
pop
fsubl
adc
call
incl
stos
div
ss
adc
push
dec
mov
popfw
add
mov
stc
in
out
xchg
je
jmp
push
mov
fstps
jbe
test
aad
arpl
in
call
jl
cli
or
push
inc
mov
jge
daa
or
xlat
dec
inc
movsl
pop
add
mov
fisttps
xchg
std
sub
shlb
mov
jbe
pop
pushf
in
sub
mov
cli
sub
adc
test
fisubl
xchg
sub
das
inc
sti
push
movsl
or
in
loope
je
lds
mov
jg
fwait
push
lret
aas
jecxz
cmpb
in
js
test
push
jae
fnstcw
pushl
cmc
sbbl
inc
xchg
mov
popf
data16
lret
outsl
xor
decl
push
mov
push
cmpsl
testb
sahf
xor
inc
loop
pop
mov
rorl
fbstp
shl
incl
ja
pop
sti
test
adc
cmc
test
cltd
shr
jg
sbb
xchg
test
mov
mov
sbb
js
dec
dec
sarb
xor
aad
mov
jmp
xchg
jns
pushf
call
cmp
popf
xor
pop
pop
lds
ss
jmp
fidivrs
inc
pop
repz
add
dec
outsb
mov
jmp
mov
mov
sub
dec
repz
cmpsb
lea
pop
shlb
decl
outsl
insb
add
call
cmp
addr16
ss
clc
sub
call
cmp
mov
mov
daa
jp
hlt
push
std
decl
xor
xchg
xchg
jecxz
and
aas
jo
add
arpl
ds
inc
andb
aam
sahf
stos
sub
jge
lods
fisttpl
pusha
adc
ljmp
jp
lcall
incl
and
nop
xchg
mov
jl
cwtl
jg
mov
sbb
mov
insl
lds
push
inc
add
push
ss
xor
add
lock
mov
push
lahf
mov
or
incl
rclb
loop
or
std
inc
fnstcw
movsb
cltd
push
mov
add
call
div
int3
mov
mov
dec
mov
adc
ret
mov
mov
ljmp
fcmovnu
jecxz
mov
xor
mov
xchg
js
push
movsl
jmp
adc
adc
test
inc
loop
jns
fs
ljmp
jb
mov
or
sub
into
dec
cli
pop
aaa
mov
push
ret
idivl
dec
fsubs
call
arpl
and
push
rol
jl
out
scas
test
sarb
xchg
cmp
incl
push
ret
adc
daa
ja
gs
shll
rorb
pop
sbb
jg
insl
aam
mov
ljmp
jns
push
stos
dec
repnz
push
jmp
fidivrs
lds
out
adc
cmp
adc
dec
xchg
push
cmp
jmp
pop
mov
cmpsl
rcl
in
cli
pop
shlb
in
out
push
fxch
jae
cmp
dec
imul
pushl
gs
idivl
xchg
jg
add
fwait
iret
lock
jmp
lcall
mov
pop
orb
fs
mov
add
loop
cmp
aas
xchg
test
mov
imul
cmp
call
leave
repnz
mov
pop
sub
repz
xchg
xor
cmp
testl
in
inc
sub
add
test
sbb
mov
xor
decl
inc
sbbb
fsubs
pushf
jns
xor
or
pop
lds
jmp
popa
cmp
cmp
xchg
dec
push
data16
add
gs
cs
lret
test
mov
dec
add
test
out
sub
ljmp
loop
nop
lret
outsl
cmp
adc
mov
pop
jg
sbb
scas
add
fcomip
mov
leave
clc
aam
sub
or
dec
rcll
or
incl
push
mov
imul
fidivs
out
test
jg
pusha
aaa
push
arpl
jno
dec
cmc
jl
sbb
push
jle
jg
lods
inc
dec
clc
clc
imul
jo
leave
or
call
or
rcrb
push
cs
lock
stos
mov
lcall
sub
push
roll
imul
movsl
lret
stos
mov
jmp
add
hlt
jl
add
jg
and
hlt
in
fdivp
into
push
flds
into
cmp
subl
inc
stos
fisttpl
pop
dec
mov
incl
and
lret
mov
lock
nop
xchg
out
mov
ss
sti
sbb
push
icebp
push
mov
lcall
popf
gs
xchg
mov
and
decl
add
mov
test
cltd
mov
add
loope
pushl
xor
rcll
pop
out
push
xor
jmp
jno
or
or
mov
imul
push
dec
xor
xorl
data16
out
in
loope
push
mov
xchg
pop
xchg
in
inc
add
mov
add
incl
mov
pop
test
pop
test
daa
xchg
idivb
pop
pop
inc
inc
repz
and
pushl
lods
aas
lret
test
outsb
xor
in
jae
jl
mov
pop
inc
dec
data16
ljmp
mov
bound
repz
stos
xchg
sub
xchg
add
push
idiv
fcomip
lahf
jmp
lret
bound
push
aad
xchg
dec
lret
sub
popf
sbb
imul
jg
cmpsl
ja
push
or
je
mov
and
dec
jo
inc
inc
lods
inc
hlt
cmp
decl
lret
iret
mov
cltd
add
cmp
insb
inc
ljmp
incl
pop
cs
aam
jle
mov
adc
push
jbe
mov
xorb
jp
mov
shlb
sub
mov
imulb
sub
mov
dec
or
les
decl
nopl
iret
sbb
lea
daa
stos
subb
mov
std
mov
int3
xchg
and
cmc
clc
test
stos
test
lock
lcall
add
sub
push
loope
ret
jle
xchg
mov
and
int
insb
fidivrl
cmc
cmp
dec
mov
and
fsubl
cmp
scas
shll
push
jnp
sub
enter
lret
dec
int
ret
xchg
and
pop
mov
mov
mov
jge
jl
jg
lods
and
dec
sbb
aam
mov
or
mov
stos
push
lock
fstpl
sbb
push
bound
ljmp
sahf
sub
mov
sub
int
inc
push
ljmp
ret
xor
outsb
dec
add
ss
push
mov
pop
mov
stos
jno
mov
cli
data16
or
sub
out
pushf
push
stc
or
or
ja
cli
pop
mov
movsl
push
std
in
test
arpl
gs
xchg
add
loopne
jle
cltd
inc
bnd
mov
adc
rolb
add
ljmp
js
inc
lret
mov
or
ss
push
jmp
fstl
xor
push
test
and
das
clc
inc
sbb
cmp
sbb
lcall
sub
aaa
rcl
imul
push
jmp
xchg
sub
stos
mov
icebp
aas
mulb
cmp
daa
test
jmp
fildll
dec
jg
push
movsl
test
mov
clc
rcr
sbb
dec
out
ret
cmp
jl
jnp
sub
add
lods
sub
sar
daa
pop
scas
mov
adc
mov
pop
aas
sbb
sar
jg
in
fs
sbb
cmp
daa
cltd
mov
and
xorl
jg
in
leave
and
mov
mov
mov
pop
sub
mov
repnz
loope
shrl
cmp
in
push
aaa
subl
xor
cmovle
aam
cmp
mov
cmp
sbb
test
hlt
scas
ret
fldcw
jecxz
inc
push
shll
fdivr
adc
addr16
je
mov
in
outsl
insl
xchg
fdivrp
sub
and
fildll
loope
or
or
mov
outsl
out
xchg
pop
and
cs
and
pushl
adcb
jne
rorb
rolb
and
and
mov
pop
hlt
ljmp
mov
cmp
in
mov
ret
push
idivb
in
jmp
sbb
mov
sub
gs
call
cli
popa
pop
ss
out
mov
mov
lret
jb
jg
or
fdivr
call
call
push
dec
movsl
fmuls
xor
mov
xor
inc
xor
insb
pop
lret
jmp
fldl
jmp
test
ljmp
fwait
pop
cli
sub
push
sub
xchg
out
ret
cltd
push
inc
xchg
and
ficomps
test
pop
jmp
push
dec
iret
movsb
adc
cmp
incl
cmp
pop
fdiv
jne
pop
cmp
sub
ds
stc
jecxz
outsb
sbb
pop
push
ret
cld
movsl
mov
shrb
ja
lock
scas
xchg
out
sub
repnz
pop
call
hlt
mov
cmp
ret
mov
cmp
shr
fmull
push
dec
adc
xor
adc
push
sub
sub
push
xchg
xchg
mov
push
xor
xchg
cmp
jg
push
clc
xchg
sub
xor
insl
or
std
loopne
push
int
pop
cli
mov
mov
jb
jno
add
mov
mov
shrb
loop
scas
cli
pushl
jmp
in
dec
hlt
sahf
les
push
xchg
jg
repz
sbb
mov
lods
popf
jl
aaa
imul
jb
jl
and
daa
cs
decl
sub
jge
add
popa
lock
cmp
and
jecxz
stos
xchg
dec
jmp
jl
leave
mov
push
and
or
cmpsb
adc
mov
lcall
mov
fwait
scas
test
push
outsl
dec
pop
inc
xchg
push
add
mov
cmp
xchg
xchg
add
push
dec
or
out
xor
add
ret
sbb
in
xor
adc
call
mov
stos
xor
add
cltd
cli
cmp
push
popa
sub
jle
fstpt
in
ljmp
adc
mov
mov
push
mov
jmp
daa
cmp
xor
pop
cmp
hlt
jge
and
sbb
jg
cs
dec
mov
pop
xor
shlb
shl
mov
inc
dec
inc
fsubrs
mov
ret
in
lock
in
mov
outsl
cwtl
mov
mov
jecxz
cwtl
and
lods
or
out
or
rorl
mov
ds
push
sbb
lods
xchg
push
aaa
outsl
mov
inc
rorb
sbb
jge
jmp
iret
adc
decl
push
jle
inc
aaa
das
test
inc
cwtl
jbe
cmp
dec
cmp
in
pop
cs
pop
std
out
std
add
dec
and
push
popa
test
insb
enter
xor
sub
cmp
add
loope
loop
stos
mov
mov
jae
or
mov
int
loop
pushf
fcompl
call
mov
push
and
and
outsb
inc
out
pop
cmpsb
lock
jl
les
mov
sahf
ljmp
ret
mov
lret
fsubrl
imul
out
sub
mov
xchg
mov
inc
adcl
dec
andb
xchg
push
cwtl
popf
jns
jbe
xchg
repz
fdivrl
call
ret
insb
mov
fisttps
mov
cmpsb
jl
hlt
call
clc
popa
cmp
pop
out
fistpll
pushl
mov
xchg
pop
xchg
jo
dec
cli
aaa
mov
insl
jg
in
xor
pop
cmpsl
std
lcall
loope
sub
push
mov
mov
mov
test
xor
in
insb
pop
sbb
adc
jg
popa
cs
xchg
mov
sbb
insb
sub
pushl
inc
cmpsb
leave
inc
jb
stos
push
les
lock
imul
insl
int3
fs
sbb
mov
jno
xchg
mov
sub
outsb
push
push
int
nop
in
repnz
mov
sbb
lret
cmc
push
idivl
sbb
aas
sub
rcrb
push
fidivrl
std
jbe
dec
sub
aaa
xchg
or
decl
iret
inc
repz
add
call
push
enter
je
xor
test
pop
cvtps2pi
jg
mov
bound
cmpsl
xor
test
cltd
mov
pop
or
adc
cmp
popa
movsb
shll
insb
xchg
mov
sub
jns
ds
or
lock
insb
cmp
in
push
sbb
cld
out
push
lods
pop
ljmp
cli
ljmp
pop
call
or
loop
scas
addr16
push
jnp
jge
xor
jo
jb
in
aas
inc
and
dec
imul
mov
mov
sahf
jmp
xchg
fbstp
repz
dec
mov
inc
mov
in
mov
addr16
inc
pop
ljmp
outsb
jb
rcll
xchg
add
and
xor
jae
in
mov
sar
incl
xor
out
xlat
mov
cmpsb
sub
loope
jle
cmpsb
inc
xchg
adc
aam
jmp
pusha
popf
pop
mov
jne
pop
test
decb
aaa
pop
mov
int3
lods
int
mov
test
out
cli
mov
mov
and
xchg
lods
pop
jne
ja
inc
mov
mov
fnstsw
cmc
repz
xlat
and
out
cmpsl
adc
mov
in
hlt
fstpt
jne
cmc
cmp
push
cli
es
test
jge
jb
ja
mov
jmp
int3
cmpsb
or
pop
popf
mov
push
clc
rolb
repz
adc
in
gs
cs
outsb
mov
push
clc
inc
jnp
xchg
lcall
push
push
sbb
or
ja
loopne
push
insb
and
mov
shl
leave
aas
mov
xor
std
fdivrp
cmp
repz
stos
sbb
pop
cmp
or
jg
imul
mov
lcall
mov
mov
call
add
pop
pop
mov
in
lcall
mov
mov
inc
stos
es
and
inc
cmp
sbb
add
lcall
sub
ja
jle
pop
mov
mov
pop
or
clc
mov
pop
adc
sub
incl
repnz
mov
mov
fwait
dec
xchg
or
push
inc
int3
lret
pushl
add
mov
sub
mov
pop
cmp
shlb
in
test
pop
cmpsl
push
jg
mov
inc
scas
repz
pop
enter
test
and
cmc
cltd
rclb
out
and
ret
call
and
in
fists
insb
xlat
mov
cmp
out
loopne
fcomip
std
outsl
call
lahf
rcrl
dec
mov
push
xchg
ljmp
inc
fldenv
rolb
push
mov
jmp
ficomps
mov
pop
inc
cmpsl
decl
mov
in
jecxz
test
js
sbb
pop
cmp
aam
lods
movsl
push
daa
push
cmp
ljmp
adc
jmp
pop
and
sub
lcall
int
xchg
jl
pop
mov
jmp
stc
sbb
loopne
data16
imul
sub
insl
decl
lcall
inc
into
xor
test
add
aaa
inc
xor
mov
rcrb
jnp
dec
cltd
test
arpl
jp
or
mov
or
clc
jg
leave
fs
lods
lods
jg
jb
mov
int3
repz
jne
lcall
fsts
xor
fdivp
decl
adc
pusha
jle
sub
rolb
test
mov
xor
aas
xor
xchg
ljmp
repnz
out
and
push
adc
in
xchg
pushf
mov
sbb
adc
sar
dec
and
jb
loope
lret
adcb
pop
push
nop
lret
sarl
in
pop
rol
pop
adc
call
mov
and
mov
ror
int3
rclb
out
jle
jp
sbb
adc
in
sahf
je
jmp
adcb
movsb
mov
inc
andb
jge
ljmp
cli
data16
push
lods
hlt
jo
popa
push
dec
test
inc
les
sbb
out
adc
sbbl
fbld
sub
lret
shrb
mov
mov
pop
decl
hlt
and
cmp
enter
mov
fiadds
mov
sub
jmp
dec
nop
adcb
fnsave
in
mov
call
jns
and
outsb
out
repnz
mov
stc
pop
xchg
push
mov
mov
fidivrs
fmul
jnp
das
mov
pop
adc
decl
arpl
stos
decl
xor
sub
call
stos
or
fstl
adc
mov
repnz
outsb
aad
xchg
jmp
mov
nop
add
push
cltd
mov
fwait
bound
push
movsb
scas
js
push
inc
fs
call
jnp
lea
adc
push
mov
and
scas
adc
pop
out
xchg
lea
jbe
pop
and
mov
fdiv
and
mov
jle
xchg
xchg
mov
inc
ljmp
sti
cmpsl
mov
xchg
xor
dec
mov
push
mov
subl
and
incl
addr16
sub
xchg
xchg
push
in
xchg
and
sbbl
lock
call
call
dec
sub
xchg
add
dec
scas
mov
dec
mov
cmp
fistpll
hlt
add
jbe
cmpsb
cmp
add
jmp
lret
inc
sbb
fcmovnu
enter
xchg
jb
jmp
add
jg
or
sarl
shl
jmp
xchg
in
into
jbe
pop
dec
cmp
and
mov
jno
add
sub
mov
or
sti
jne
call
push
jmp
ljmp
push
xlat
clc
arpl
mov
fwait
lret
nop
into
mov
and
lcall
jl
aas
xchg
or
jg
mov
std
inc
push
test
sub
sbb
clc
stc
cmp
cwtl
mov
and
fsubrl
dec
push
testl
call
lock
xlat
mov
push
iret
fdivrp
fiaddl
xchg
cmpsb
jp
cmp
sahf
dec
push
jbe
das
cli
jg
or
test
loope
sub
sub
fisttpll
mov
ss
cmp
push
ljmp
and
sub
xchg
dec
jl
mov
cld
add
jno
sub
mov
enter
cld
sub
mov
mov
out
sbb
aaa
pop
inc
xor
js
ljmp
xor
stc
cmpsl
rclb
and
dec
ficompl
ret
jecxz
stos
je
scas
arpl
in
loope
pop
lods
jmp
sbb
xchg
mov
lcall
sbb
int3
push
push
sti
xchg
xor
jg
jg
add
mov
mov
inc
mov
xchg
sub
lcall
push
mov
aaa
push
dec
ja
int3
in
clc
pushl
int3
ds
and
fistl
push
jbe
lahf
add
pop
inc
test
mov
push
faddl
lcall
add
pop
mov
into
scas
lret
pop
mov
call
cmp
adc
push
mov
movb
fsts
pop
jne
jmp
add
decl
ror
cmp
cld
leave
mov
jge
lock
jno
fstl
push
mov
inc
cld
notb
fcmovnu
add
mov
mov
or
adc
lods
pop
clc
aad
mov
dec
xchg
adc
aas
and
dec
sub
xchg
jg
xlat
xchg
je
cmp
pop
push
pop
pop
mul
ret
cwtl
aad
cmp
or
sbb
add
push
mov
fidivs
push
sub
es
std
dec
call
dec
lea
jg
and
cmp
mov
in
cmp
test
pop
sbb
mov
cli
decl
es
call
nop
int
ret
sbb
ja
or
mov
out
pusha
sub
pop
mov
add
decl
out
and
loop
imul
mov
andb
cld
adc
insb
pop
in
gs
add
aaa
fcmovb
or
pushl
sub
std
repz
out
adc
and
fcoms
shl
into
roll
decl
cmp
xlat
add
sbb
pop
push
mov
xor
repnz
sar
jg
in
xor
hlt
sub
xor
daa
dec
in
jge
adcb
jae
stos
xchg
cmp
roll
inc
cmp
repz
cmpsb
shl
clc
incl
lods
cmp
xchg
imul
imul
push
jns
test
cld
xlat
mov
lcall
fimuls
data16
mov
sbb
or
sti
stos
and
repz
cmp
std
mov
pop
xor
adc
lcallw
ror
xchg
jb
jg
ds
and
sbb
sbb
mov
xchg
push
into
stc
jo
mov
cmp
add
lahf
push
test
aaa
gs
hlt
adc
pop
add
std
dec
aaa
jb
pop
int
xchg
loope
pop
mov
mov
insb
add
xor
ja
decl
adc
and
popf
hlt
jp
xorl
call
lcall
sbb
sub
mov
add
push
and
call
xchg
out
add
dec
out
andl
je
push
lcall
jmp
nop
cltd
mov
call
xchg
mov
sbb
push
out
js
mov
pushl
jmp
notb
clc
jge
icebp
das
lahf
dec
aaa
mov
mov
cmp
lcall
loopne
stos
adc
rcrb
sub
es
incl
or
mov
jae
fs
xor
nop
mov
xchg
dec
mov
js
push
jnp
pop
cltd
flds
sbb
sub
jp
xchg
dec
cld
push
mov
lcall
jns
add
sub
adc
popf
mov
sbb
shrl
adc
lcall
cmp
cmp
fistps
insb
cmp
popa
mov
add
mov
incl
add
inc
stc
xchg
mov
mov
lods
mov
pop
shll
pop
sub
aaa
leave
outsl
cmp
decl
cli
push
lahf
fldenv
popf
pop
inc
mov
sbb
xchg
and
or
add
les
cli
out
call
xlat
call
push
mov
adc
or
dec
cmp
pop
cli
cmp
mov
and
or
mov
mov
loope
mov
inc
pop
sbb
lret
bnd
inc
test
outsl
cmp
ljmp
ror
mov
call
mov
push
mov
lahf
dec
push
leave
loope
lcall
dec
in
push
push
pop
movb
loop
mov
bound
mov
ret
sti
mov
nop
pushf
aam
imul
gs
sbb
decl
ds
push
ds
movsb
jb
adc
stc
stc
cmpsl
xchg
scas
into
sub
roll
sbb
jle
ret
jbe
into
jbe
pop
sbb
imul
cmpsb
mov
loope
aam
push
sub
into
pop
ljmp
fldenv
lahf
push
dec
cmpl
push
inc
out
inc
add
in
ss
test
lahf
lea
xchg
out
jb
push
stos
mov
jmp
cmp
ficompl
ljmp
mov
mov
cmpsb
pop
icebp
push
rcrl
js
cmpsb
xchg
shrb
or
pop
inc
inc
insb
imul
xor
or
or
in
sqrtps
enter
in
mov
mov
cmp
xchg
adc
arpl
mov
test
adc
mov
push
adc
cmp
push
aad
or
imul
xlat
pop
lea
lret
jge
bound
lcall
call
movsl
mov
adc
sbb
out
pop
xchg
mov
or
adc
pop
andl
sbb
ss
lret
sub
ja
dec
addl
loopne
aas
push
xchg
lcall
mov
imul
cmp
fstl
cmp
lret
cmpsl
sbb
mov
cld
lcall
push
dec
mov
mov
enter
cwtl
shl
call
jns
sub
mov
mov
lfs
out
inc
ror
cs
call
cmpl
fidivrl
mov
ret
repnz
mov
or
incl
js
jo
fsubrs
pop
mov
fcompl
xchg
sub
dec
jbe
cwtl
mov
decl
lods
inc
mov
mov
rolb
loope
xchg
add
pop
or
pusha
sbb
aam
lds
mov
jb
and
jnp
pop
int
sub
es
mov
fsubs
je
sbb
push
xchg
ss
icebp
sbb
xchg
insb
js
fistpll
call
data16
imul
pop
cli
mov
lea
mov
in
in
mov
pop
add
outsl
clc
lcall
enter
js
adc
add
jecxz
cmp
push
std
call
stos
into
lahf
out
cmpsl
sbb
push
push
or
mov
pop
pop
int3
adc
cmovg
decl
in
fxch
mov
cmp
or
mov
dec
xor
adc
pushf
adc
call
roll
test
popf
mov
mov
call
push
inc
mov
arpl
push
inc
and
add
arpl
add
push
sbb
or
dec
xor
mov
jne
andl
sub
push
fnstcw
mov
add
call
push
fbld
fisttpll
outsb
sub
and
xchg
adc
cwtl
mov
sub
adc
mov
or
add
add
into
jle
mov
out
fisttps
jae
shlb
hlt
pop
and
jle
out
jbe
test
sbb
shrl
stos
dec
loop
xorl
jae
inc
cmp
incl
hlt
mov
push
mov
mov
out
push
and
mov
call
xchg
scas
xor
cli
xchg
out
mov
cmpsb
repnz
jno
jecxz
push
sahf
lcall
lock
loope
test
sub
decl
sarl
in
push
les
cltd
pop
int3
jge
mov
mov
and
add
cmp
or
mov
inc
jns
cli
xchg
mov
mov
out
dec
das
push
das
mov
ljmp
mov
push
sbb
mov
nop
aad
jecxz
pushf
inc
jb
cmpsb
inc
pop
lahf
lcall
add
fwait
or
fldcw
outsl
xchg
pop
aas
mov
adc
iret
pop
or
mov
bound
sub
mov
in
sbb
fwait
push
or
mov
popa
cwtl
fildll
rorl
cld
xchg
and
dec
loope
test
subb
andb
outsl
fs
dec
sar
or
jg
decl
fldl
jg
cmpsl
lock
outsl
lock
xlat
sub
addr16
jmp
pop
and
fsubs
mov
repnz
int3
xor
mov
push
pushf
push
pop
or
call
ds
aas
or
int3
movb
cwtl
pushl
cld
cld
clc
cmc
add
sarl
call
fcomi
jno
mov
testl
and
sbb
test
dec
lock
sbb
aas
add
sti
das
pop
call
mov
sti
inc
les
orb
stc
inc
xchg
mov
cmp
movsb
arpl
dec
in
xor
lcall
push
dec
cwtl
incl
cld
lcall
shll
dec
sarl
in
sbb
pop
mov
and
sbb
aaa
std
dec
cs
add
push
mov
dec
jmp
or
mov
adc
in
incl
lea
inc
push
inc
mov
push
and
ficomps
jmp
xor
outsb
mov
dec
popf
mov
jle
cs
dec
xor
ss
pushl
std
push
ret
jae
cli
cmp
sub
adc
inc
or
nop
push
push
or
shr
pop
or
pushl
and
in
push
dec
cmpsb
pusha
inc
xor
gs
into
out
in
test
push
cld
test
mov
cmp
int
scas
xchg
adc
push
xor
in
mov
lods
lcall
adc
adc
xorb
xchg
hlt
sub
shlb
jp
lcall
mov
std
push
add
inc
call
xor
cld
pop
inc
in
jnp
repz
cmp
lcall
mov
scas
and
push
loope
in
aaa
mov
adc
out
push
das
add
roll
aam
rorl
adc
nop
das
rcrb
inc
inc
jl
dec
ljmp
data16
mov
push
divb
push
fstl
sub
cmpsb
pop
dec
dec
insl
mov
mov
fs
xor
je
rclb
inc
js
aad
vmovapd
pop
shll
jmp
sbb
jns
push
loope
inc
lds
daa
jae
inc
mov
popf
pusha
cs
and
lret
inc
dec
ljmp
cmp
inc
stos
ficomps
xchg
xchg
mov
jl
pop
paddd
or
xorb
popa
scas
aaa
std
jmp
or
sbb
mov
popf
xor
in
clc
push
mov
mov
in
push
into
cmp
or
rorb
jne
pop
lret
call
and
push
cs
flds
pushf
add
imul
dec
push
or
jmp
outsb
jecxz
or
icebp
pop
test
mov
lods
add
inc
inc
fisubs
pusha
out
andl
aaa
mov
sub
in
out
ljmp
jae
shll
or
adc
out
push
add
loope
aas
testb
mov
sbb
test
jl
and
fcomps
out
cmp
rorb
adc
xchg
push
rcrl
pop
mov
dec
sbb
lods
dec
mov
inc
adcl
dec
jne
in
pop
cs
aas
xchg
jg
outsb
enter
out
xor
imul
dec
bound
int3
ljmp
bound
movsb
decl
push
dec
pusha
pop
ret
sbb
repnz
or
ret
mov
js
orl
and
or
fidivrs
push
push
jns
push
xlat
fcmove
sbb
data16
mov
fisubl
ret
cmpsl
aad
addr16
cltd
jne
xchg
nop
addr16
adc
call
cli
or
mov
out
mov
xchg
imul
add
stos
cs
decl
pop
ss
loop
arpl
xor
jnp
and
sbb
imul
mov
mov
movsl
mov
jle
adc
loop
sub
je
out
outsb
and
sbb
cmp
in
repnz
pop
mov
test
pop
jbe
dec
pushl
f2xm1
dec
and
icebp
scas
xchg
cmp
ficomps
or
sbb
add
cmovle
fildll
pop
hlt
fnstenv
roll
dec
jb
fwait
iret
xchg
xor
adc
movsb
ljmp
inc
in
add
pop
xor
and
repnz
cltd
dec
lahf
jnp
dec
in
je
adc
inc
inc
ljmp
lret
out
decl
mov
inc
adc
mov
push
fwait
adc
pop
adc
clc
ljmp
lret
pop
rcll
xor
jmp
int
push
shl
aam
test
aad
pop
insb
jmp
ja
pop
clc
call
insl
call
stos
or
dec
ret
add
insb
push
jmp
inc
sbb
push
inc
mov
popa
stc
mov
lock
lret
inc
push
idivl
jle
xchg
sub
imul
lret
ds
call
sub
sbb
xor
cmp
or
jns
cltd
bound
nop
in
lret
mov
push
xchg
fwait
sub
or
pop
popf
dec
orl
xchg
mov
or
decl
rclb
outsl
stc
cltd
jb
test
sahf
iret
sbb
ljmp
adc
jnp
or
rcrl
int
inc
and
lock
cwtl
std
mov
fcmovne
fscale
cmc
in
ljmp
mov
out
out
or
test
add
sbb
incl
sbb
pop
push
sub
cmpsb
xchg
pop
mov
mov
repz
mov
push
lcall
insb
cld
pop
and
and
ret
xor
fdivrs
aas
lea
cmp
add
in
nop
ror
pop
xor
and
push
lea
inc
fucom
xlat
cmpsl
adc
push
mov
imul
iret
sub
pop
repnz
cmc
stos
das
xchg
imul
ljmp
hlt
sahf
pop
out
stos
movsb
cltd
js
flds
aas
xor
out
pusha
mov
in
mov
rcrb
or
sbb
push
ss
call
cli
int
and
push
ds
jge
les
jge
mov
popf
dec
mov
mov
jmp
pusha
insb
out
mov
out
or
clc
mov
xlat
lret
mov
mov
popf
push
cld
enter
cmp
int
xchg
dec
hlt
pop
out
mov
js
inc
aam
mov
mov
call
cmp
jl
pop
inc
lods
call
aad
jp
pushl
in
sub
xchg
add
adc
mov
push
rcr
xor
jle
incl
sbb
int
int3
pop
fs
and
daa
dec
jns
dec
xor
or
lcall
inc
adc
jge
icebp
add
jne
and
lcall
or
push
test
gs
pop
adc
repz
jp
and
lock
mov
aaa
scas
aam
and
scas
adc
pop
push
gs
in
fcomps
cld
incl
mov
mov
xor
xchg
fucomi
and
dec
jns
jl
sub
dec
dec
enter
lcall
mov
ret
xchg
test
inc
jae
in
cmp
mov
xchg
jns
mov
mov
xor
cltd
call
in
sbb
in
popa
leave
je
sub
cmpsl
add
lcall
pop
pop
cs
insb
push
pop
data16
cmc
loopne
pop
out
ret
in
or
lock
cmp
jge
xchg
jg
lahf
dec
out
sbb
fisubl
lcall
xor
cmp
inc
add
push
dec
or
les
mov
adc
lcall
pop
and
lcall
aas
ja
imul
add
or
jo
ljmp
jl
imul
xor
aad
sahf
loopne
mov
mov
and
clc
xor
ljmp
aas
ljmp
dec
inc
repz
pop
roll
dec
pop
xor
sbb
cli
out
testl
mov
cli
cmpsl
jae
dec
decl
ss
mov
fcoml
adc
outsl
push
sbb
ljmp
sbb
pushl
nop
and
ds
inc
lcall
leave
cmc
push
call
sub
movsb
icebp
test
stos
pop
aas
xor
mov
test
out
pop
jmp
mov
jmp
cmp
jne
test
ja
insl
mov
xor
decl
jae
xlat
in
mov
sbb
xor
loop
aad
fdivs
aas
incl
call
jl
xor
push
and
outsl
fists
mov
push
pop
sbb
mov
jmp
je
jno
pop
cmc
iret
daa
cmp
or
push
test
rolb
out
lcall
push
or
les
imul
lods
gs
inc
cmpsl
jne
add
sub
jae
inc
jg
xchg
incl
lret
add
cmp
push
jne
xor
and
out
test
test
push
arpl
sar
call
sbbb
cmp
pop
gs
mov
mov
fldl
pop
cmp
jp
xchg
daa
pop
jge
rclb
cltd
mov
jb
xchg
mov
incl
fisubrl
cld
jecxz
cld
lahf
insb
jmp
test
push
es
push
cs
inc
push
insl
pop
fcom
jmp
xchg
dec
nop
stos
cmp
xor
fldl
pop
cmp
adc
mov
cmpsl
addb
lcall
cltd
mov
rcll
adc
xor
mov
sub
enter
ds
push
jmp
fwait
and
cmp
xchg
in
jl
lcall
incl
cmp
out
or
mov
xchg
fidivrs
pop
ret
dec
dec
mov
popf
repz
cld
sub
or
inc
cmp
pop
sub
loope
or
fsubrp
push
sub
push
movsb
pop
push
ja
jg
into
cmp
mov
mov
rep
xchg
inc
push
mov
in
outsl
outsb
rcrl
stos
js
repz
scas
test
jns
xchg
mov
out
ljmp
pop
incl
pop
popa
cltd
mov
push
sahf
mov
sbb
pusha
int3
or
jl
xorl
aaa
clc
adc
mov
in
filds
adc
ret
ja
sub
ret
sub
decl
jp
mov
adcb
scas
movsb
psubq
movsb
andl
jg
pushl
cwtl
jnp
js
cvttps2pi
cmpsl
in
test
std
inc
leave
jbe
decl
fmuls
rcrb
dec
dec
jno
dec
int
and
pop
push
dec
mov
gs
mov
jmp
and
jno
xor
jno
sbb
push
add
mov
inc
push
xchg
xlat
jle
cmp
lcall
pusha
add
popa
imul
mov
out
or
leave
out
das
xor
addb
jle
or
ljmp
or
rcrb
sbb
test
rorb
fwait
push
shlb
xchg
jp
lcall
sbb
sub
adc
sbb
jno
mov
fs
mov
sub
adc
imul
dec
adc
sub
inc
in
fists
sbb
ja
push
ja
lcall
daa
xchg
decl
lods
xchg
fimuls
pop
bound
cmp
inc
push
call
jmp
iret
fidivrl
inc
nop
repz
cmp
push
jb
push
aam
adc
repnz
fsubr
es
decl
cmp
sbb
in
pop
jmp
ljmp
fwait
inc
insl
in
push
das
sub
push
lcall
jno
divb
push
inc
les
push
mov
mov
incl
add
push
mov
add
lret
cs
pusha
pop
cltd
testl
mov
dec
sti
xchg
fcoms
addr16
xchg
jl
and
pop
dec
clc
jmp
xchg
js
fwait
adc
fisttps
mov
outsb
cli
jge
mov
lret
incl
cmpl
out
mov
pop
insl
mov
mov
dec
popa
fcomip
dec
hlt
mov
aad
jnp
ret
ss
push
cmp
add
cli
or
test
ljmp
mov
stos
mov
sahf
xor
add
ss
roll
fwait
jg
inc
sbb
sar
cmp
push
out
lret
les
sbb
lds
cmpsb
mov
mov
jmp
push
xchg
xor
add
jp
adc
sbb
mov
lahf
decl
pop
or
inc
enter
xor
sub
bound
sbbl
mov
in
xchg
mov
ljmp
xor
mov
mov
aam
dec
sub
sarb
pop
cmp
dec
leave
outsb
pop
xor
or
iret
or
imul
pop
hlt
mov
aaa
pushf
sub
pop
lret
pushf
idiv
push
subb
push
leave
and
fiaddl
cmp
or
pusha
loopne
ss
fwait
ja
clc
movsl
movsl
jns
inc
or
decl
iret
in
pop
lcall
stc
inc
cli
adc
pop
popf
mov
loopne
imul
test
inc
cmp
decl
jae
aaa
mov
imul
subl
sbb
mov
stc
and
cli
mov
incl
pop
call
aas
mov
sub
ljmp
xchg
add
xacquire
out
testb
mov
or
arpl
and
jg
xchg
bound
xorl
sbb
movsb
jbe
dec
shrb
sbb
adc
sub
js
es
out
je
mov
test
cli
sahf
mov
je
pop
ret
lret
mov
pop
scas
jns
das
decl
shrb
loop
push
rcrl
pop
cs
push
and
stos
xor
jge
pop
fdivr
test
jp
lahf
mov
lret
xchg
jns
cwtl
push
aad
pop
outsb
out
decl
out
xor
int3
daa
mov
imul
inc
lods
push
jmp
inc
xchg
mov
loopne
loopne
or
out
xlat
ds
stos
rcll
add
pushl
popa
sub
outsb
add
mov
lock
je
daa
cmp
les
push
cli
aad
fbstp
mov
add
jg
popa
popa
lcall
pop
mov
mov
rcrb
decl
repnz
xor
in
sbb
mov
enter
mov
pop
sbb
test
cmp
pop
testb
call
aam
and
pop
dec
and
inc
call
push
stc
cmp
pop
sub
aad
pop
imul
push
incl
or
add
cwtl
lret
imull
pushl
pushf
mov
mov
nop
cwtl
dec
fildl
mov
icebp
cwtl
xchg
cmp
lcall
incl
cmc
xchg
sbb
or
int3
push
in
aas
andb
call
adc
ljmp
ror
call
lret
fbld
ljmp
out
lods
fnstcw
pop
cld
iret
mov
fnsave
loopne
out
cli
adc
div
cltd
push
cmc
lods
mov
mov
mov
mov
mov
fisttpll
push
push
repnz
imul
dec
jl
sbb
sbb
xor
popf
mov
xchg
cmpsl
gs
push
jno
jp,pt
dec
xchg
lock
fists
push
push
adc
shrb
mov
mov
scas
pop
jmp
push
pop
and
sbb
or
insl
pop
or
adcl
jmp
cwtl
xchg
call
repnz
cld
adc
mov
push
call
sbb
xchg
shlb
hlt
xchg
pop
mov
pop
repnz
arpl
and
adc
fdivs
insb
cmpsl
jg
call
in
and
fildll
mov
pop
pop
xor
mov
arpl
call
jbe
call
mov
cmpsb
loopne
clc
jbe
shll
and
lods
aad
decl
stc
mov
ss
sub
imull
test
xor
jno
dec
pop
add
les
lcall
shl
insl
andb
xor
repz
movsb
pop
aam
adc
push
mov
jmp
or
push
cmc
loope
dec
xchg
cmp
insl
fwait
movsl
cmp
jae
push
sbb
jecxz
jmp
rol
stc
dec
fisubs
nop
inc
and
ffreep
rolb
outsb
or
loop
mov
sbb
jnp
es
xchg
mov
incl
into
xchg
or
push
pusha
xor
adc
sub
cmp
cli
decl
clc
sbb
mov
dec
adc
pop
and
cltd
mov
outsl
clc
outsl
imul
xchg
fdivrp
outsb
idivl
xor
add
sub
push
push
adc
sarb
adcl
int3
sti
xor
mov
iret
pop
xchg
mov
push
mov
jno
movsl
jge
rolb
and
rorl
movsb
jle
filds
sar
mov
mov
or
shll
lcall
call
inc
push
jle
dec
mov
mov
das
aas
icebp
pop
int3
and
cmpl
leave
mov
push
xchg
pushl
das
out
jp
cmp
adc
jmp
or
xchg
and
pop
pop
lea
xchg
hlt
lcall
mov
add
adc
ljmp
ds
loope
frstor
inc
stos
xor
lds
sbb
jmp
mov
dec
jb
mov
pop
pushf
xchg
mov
stc
jnp
movsb
decl
push
cmpsl
mov
arpl
movsl
push
pop
sub
lret
fst
dec
scas
aam
out
movsb
push
subl
jbe
arpl
fs
and
in
ret
sub
ja
out
dec
cmc
fists
jb
jns
mov
xor
pop
sub
jne
mov
pop
pop
jmp
jg
push
cmp
or
sbb
inc
xchg
das
jmp
test
fistl
and
lcall
pushf
test
pushf
adc
std
mov
clc
mov
jns
sbb
icebp
push
std
inc
add
mov
lods
xor
pop
mov
imul
jb
push
aad
xor
lcall
out
fdiv
loope
enter
pop
call
add
lret
lods
sbb
ja
andl
sbb
out
push
jecxz
call
pop
push
scas
sbb
push
stc
movsb
push
adc
mov
dec
push
and
in
pop
gs
js
dec
shll
mov
jo
jno
mov
inc
sub
shll
mov
cmp
cmpl
out
adcb
inc
xchg
loop
mov
shrb
lods
inc
incl
pop
insl
add
fwait
add
nop
clc
repz
inc
mov
bound
pushl
push
out
fnstenv
dec
dec
repnz
fchs
repnz
xor
notl
aad
lret
dec
test
push
pop
push
out
ret
jmp
fcomps
xchg
sub
js
mov
xchg
mov
in
es
mov
dec
mov
cwtl
lcall
jle
movsl
testb
std
incl
addb
push
inc
mov
lea
aaa
flds
leave
ljmp
insl
lahf
cmp
hlt
pushl
xlat
iret
push
cld
xchg
loopne
add
pop
mov
addr16
decl
mov
aad
inc
dec
arpl
dec
jecxz
out
cmpsb
cld
sarb
adc
popf
inc
add
es
cmpsb
fists
clc
mov
stos
lcall
lret
int3
shll
adc
ret
outsb
push
xchg
push
adc
push
cld
scas
xchg
incl
jmp
ret
or
push
das
fcoml
push
aaa
cwtl
mov
add
and
add
or
xor
mov
decl
jae
jo
int3
jns,pn
sbb
push
push
xchg
xor
mov
ficoml
js
pop
push
dec
and
inc
les
mov
pop
push
cmc
ret
sub
jns
push
loope
vmulps
inc
ficompl
xchg
xor
lods
lods
icebp
push
and
push
pop
push
sub
mov
sarb
out
movsl
fisttpll
cmc
cmp
cmp
or
test
push
pop
cmp
mov
fwait
loope
lcall
stos
mov
test
ds
int3
repnz
sub
inc
xchg
or
fs
jno
incl
pop
or
sub
pop
lds
jns
mov
cmp
pop
xlat
decl
test
mov
lea
xlat
push
push
push
mov
mov
cli
lock
mov
shll
inc
pusha
lahf
xor
sub
push
fsubs
cwtl
jae
push
scas
fsubrl
enter
daa
dec
or
jns
adc
push
ljmp
fsubs
sti
aad
pop
int3
pushf
mov
cmp
xor
and
add
lea
loope
ljmp
add
sbb
jnp
scas
xchg
or
adc
mov
lods
cs
pushl
mov
xorl
loope
or
inc
iret
sub
stos
add
outsl
imul
decl
mov
int
pop
jb
std
sub
cmp
pop
pop
mov
or
lret
push
jbe
or
call
xchg
sar
push
push
aas
dec
aaa
jne
sar
invd
iret
xor
fstpt
and
sarb
shr
xor
pop
repnz
sbb
dec
mov
pop
or
in
push
jmp
sub
nop
fsubs
jnp
push
popf
ljmp
adc
mov
push
push
nop
popa
mov
insl
cwtl
add
jmp
cmp
push
dec
clc
movsb
adc
cwtl
int3
lock
dec
xor
pop
inc
popf
cltd
ss
jae
push
add
enter
lcall
leave
and
mov
mov
lcall
xchg
adc
jg
or
incl
adc
xchg
sub
out
xor
mov
in
sbb
push
sub
dec
fs
mov
leave
sub
sahf
jl
or
insb
inc
or
xchg
gs
stos
or
adc
mov
in
xor
mull
or
pushf
cmpsl
adc
test
popf
inc
sahf
sti
jecxz
jmp
xorb
fidivrs
xchg
insl
insl
mov
in
movsb
lahf
jle
nop
sbb
gs
js
in
xchg
xchg
or
repnz
mov
cmp
out
sub
shll
stos
aas
cmc
push
aad
inc
popa
pop
or
xchg
out
imul
jbe
xchg
jmp
lret
outsb
icebp
or
push
pop
icebp
jmp
stos
dec
add
push
mov
mov
idiv
push
xchg
push
inc
pushl
xor
add
loopne
xorl
cmpb
leave
mov
or
jmp
mov
fnstenv
mov
out
xor
imul
or
aam
or
xor
dec
test
inc
int
push
popa
sti
mov
jmp
mov
pop
mov
push
and
mov
push
shl
adc
outsb
xor
loop
jg
in
lcall
mov
loope
add
mov
fbld
push
inc
pop
mov
mov
testl
lcall
mov
or
pop
mov
cmp
ja
out
ja
adcb
int3
mov
mov
mov
cmpsb
adc
mov
stos
pusha
lea
addb
outsl
adc
pusha
dec
sbb
incl
pop
cmp
adc
mov
jne
cmpsb
lret
dec
push
dec
xchg
xchg
popf
push
pop
loope
add
aam
or
add
sbb
mov
test
jp
cmpsb
outsl
dec
lods
das
clc
jg
push
dec
sbb
enter
ljmp
fcomps
fstps
icebp
pop
mov
ljmp
xlat
push
pop
xchg
daa
sbb
inc
push
cmc
lcall
lret
ficoml
mov
pop
dec
sbb
out
inc
cmp
dec
loop
out
jne
push
paddsw
xlat
or
lret
and
nop
jno
sar
jg
ljmp
pop
push
incb
mov
stc
mov
jg
addr16
out
mov
decl
push
adc
or
xor
mulb
nop
nop
out
cmc
cmp
jns
cltd
inc
or
and
insb
jae
popf
xchg
mov
cmp
xor
or
lea
fisubrs
incl
sarb
dec
shl
add
mov
pop
sub
inc
out
sbb
les
stc
adc
xor
jmp
push
jbe
pop
aaa
pop
push
shlb
fldl
xchg
shl
pushl
frstor
push
mov
lods
jg
push
add
mov
aam
cmp
lcall
stc
add
xchg
in
pop
inc
xchg
cmc
ja
sbb
mov
incl
into
std
dec
and
xor
mov
dec
mov
mov
mov
mov
test
xor
mov
push
sbb
pop
jnp
fcomip
mov
dec
outsb
rol
or
cmc
std
inc
adc
sahf
inc
ror
mov
cmpb
das
jg
out
inc
xchg
jle
add
pusha
sbb
jl
xor
mov
mov
ljmp
pushl
or
mov
loopne
bound
add
xchg
in
in
push
jne
lock
lcall
je
int3
push
lcall
loopne
addr16
mov
or
repz
xchg
outsl
push
daa
adc
rolb
test
xchg
daa
adc
js
out
dec
and
incl
in
ret
dec
jnp
fs
xchg
scas
lea
outsl
loopne
loope
jecxz
jne
push
pusha
pusha
cmp
pushl
in
mov
or
or
nop
jmp
push
xchg
out
xchg
sahf
dec
mov
aaa
fwait
pop
sbb
jmp
xor
aaa
pop
ljmp
or
push
roll
sub
dec
push
push
mov
xor
add
sub
std
stc
adcb
dec
xchg
xlat
dec
or
cld
mov
push
out
xchg
mov
xchg
popf
pusha
sti
mov
je
in
cmp
and
inc
in
out
xchg
lods
aaa
decl
fisttpl
ficoml
test
add
stc
push
or
dec
cmp
inc
incl
mov
int3
or
lahf
mov
dec
in
pop
add
cmp
cmovge
fmul
add
movsb
fs
loope
and
fnstenv
dec
hlt
pushl
add
jp
popa
lock
sahf
or
add
push
mov
ss
lcall
or
pop
sub
inc
add
or
mov
jmp
es
lcall
add
sub
mov
jo
test
or
xchg
sub
loope
mov
sbb
call
cmp
movsl
dec
jl
ficoms
push
bound
mov
out
push
insl
adc
push
cmp
sub
insl
mul
push
add
call
int
lods
es
outsl
test
sbbl
inc
sahf
in
aam
insb
mov
and
ljmp
cmp
lret
rep
fabs
xor
mov
pushl
sbb
and
test
leave
inc
push
or
iret
xor
inc
mov
mov
dec
repz
icebp
call
jbe
addr16
int3
or
adc
sbb
mov
cld
sbb
xchg
mulb
roll
inc
cld
inc
fs
or
mov
xchg
push
inc
mov
cmpsl
pop
or
xchg
dec
popa
in
inc
je
hlt
jg
mov
mov
mov
xchg
bound
adc
push
mov
or
mov
xchg
adc
mov
inc
push
lcall
adc
pushl
sbb
pop
add
pop
cmp
xchg
call
movl
loop
sbb
les
mov
pop
push
adc
dec
or
in
cld
inc
mov
adc
mov
iret
hlt
in
or
lcall
in
pop
mov
mov
mov
adc
mov
add
pop
pop
loope
fs
incl
fldcw
aas
sahf
mov
lods
mov
sub
inc
sbb
adc
mov
ljmp
rcl
and
mov
movhps
and
cwtl
push
cmp
jmp
push
rcrb
pop
push
repz
sub
call
jns
mov
or
mov
add
cmp
jns
lods
mov
cmp
jmp
inc
mov
ss
cmpsb
pushl
cld
decl
jno
mov
outsl
xchg
loopne
insl
cmc
pop
out
scas
add
cmp
xchg
lret
repnz
imul
xor
rcrb
or
jae
inc
push
mull
sbb
push
enter
mov
lock
mov
mov
repnz
jg
fdivs
shr
push
pushf
xor
fbld
jb
cwtl
push
cmpsb
ret
push
shlb
ljmp
ret
out
inc
mov
push
push
mov
insb
imul
rclb
out
testb
cltd
push
incl
mov
movl
jmp
push
fsubp
fdivp
cs
push
dec
aam
lock
push
lcall
push
movsl
insb
shlb
inc
stc
lods
rol
scas
add
adc
add
ljmp
dec
mov
les
imul
push
adc
repz
call
sbbb
addr16
jno
sbbl
dec
scas
or
adc
outsl
incl
push
inc
aam
sarl
in
int
pop
ret
icebp
cmp
mov
sbb
std
mov
xchg
sti
xchg
rclb
ljmp
in
lcall
inc
imul
pop
cmp
dec
cmp
aad
lcall
sub
cmp
imul
ljmp
mov
test
sbb
and
dec
mov
lcall
bnd
sub
sbb
pop
sbb
xchg
adc
or
cmp
jns
adc
xchg
repz
adc
andl
fmuls
les
pop
sub
cmp
or
pop
xor
xorl
inc
pushl
sahf
movsb
lea
movsb
in
repz
pop
or
pop
data16
sub
out
add
adc
pop
xor
add
or
lcall
mov
inc
mov
pop
in
lock
notb
add
mov
sbb
jle
call
cli
push
add
adc
imul
xor
shrb
sub
lcall
cmp
loopne
inc
loop
xor
xor
and
cmp
aaa
das
sbb
fcomip
sub
jecxz
adc
mov
clc
es
pop
js
pushf
cwtl
sar
fbld
sub
ds
dec
adc
mov
push
mov
mov
mov
push
cmp
cmp
jg
lcall
adc
mov
dec
dec
xchg
jns
add
hlt
pushl
adc
mov
movsb
push
sbb
sub
adc
lcall
xor
fdivp
jmp
cmpsb
lea
and
jb
aam
push
sub
xlat
mov
sbb
push
mov
pop
rolb
adc
incl
sub
dec
in
dec
jp
mov
lods
int
push
push
popf
mov
test
lds
sub
sub
mov
cmp
hlt
ds
push
xchg
test
or
dec
enter
mov
stos
dec
sahf
pop
inc
insb
cli
decl
and
arpl
clc
mov
and
js
bound
push
nop
in
movsb
push
dec
sub
aaa
inc
mov
mov
cmp
call
push
jg
filds
sub
push
inc
repz
lods
sahf
jecxz
repz
loop
mov
stos
pop
incl
xor
jnp
popf
or
inc
lret
imul
add
lds
cmpsb
insb
mov
inc
adc
stos
mov
les
mov
push
pop
push
mov
ljmp
stos
push
pop
inc
mov
push
ljmp
push
mov
cmp
jle
jmp
sbb
psadbw
fstpl
adcb
push
arpl
test
imul
lahf
dec
test
incl
xor
rcrl
mov
xor
cmc
mov
and
push
std
dec
sarl
lea
loop
cmp
loopne
fistl
pop
enter
js
scas
mov
add
inc
add
fwait
sub
lahf
movsb
cwtl
mov
icebp
jmp
mov
enter
sarl
sub
sub
decl
jmp
call
adc
adc
xchg
mov
jb
test
xchg
add
mov
xor
inc
sub
int3
jg
lds
xchg
adc
icebp
push
sub
add
rcll
jp
mov
in
xchg
insb
xor
test
ljmp
out
push
lret
sbb
lahf
jmp
sahf
sbb
lods
nop
lock
push
in
pop
into
mov
shll
repz
ret
sbb
adc
icebp
xor
or
dec
je
inc
jl
mov
repz
xchg
adc
imul
popf
cmpsb
add
call
decl
push
mov
jnp
sti
mov
sub
bound
sbb
loopne
std
push
cld
inc
mov
mov
sbb
and
decl
les
add
outsl
leave
fst
pop
ror
lahf
xor
sar
dec
insl
adc
fistps
mov
mov
mov
sbb
ljmp
mov
jae
ljmp
add
jns
out
pextrw
cmp
sbb
leave
mov
push
sub
popf
mov
sub
push
imul
inc
mov
hlt
sub
lahf
les
pop
and
lcall
lock
and
iret
pusha
or
aas
orl
daa
inc
mov
outsl
clc
sbb
aad
div
bnd
loop
xlat
jno
mov
repz
mov
ret
dec
xor
sub
fsubl
popa
push
dec
aam
outsl
or
stos
pop
cld
call
mov
mov
mov
lea
jns
imul
mov
inc
and
sub
jge
jl
mov
incl
jp
movsl
xor
sub
aad
lahf
sub
pop
in
sar
mov
cmp
push
dec
lret
aam
and
mov
shrl
sub
repz
push
sbb
je
dec
pop
incl
jmp
mov
fcomps
scas
fyl2xp1
sub
jl
pop
fcompl
arpl
call
xor
or
pop
sbbl
push
adc
je
leave
mov
insb
mov
mov
pusha
push
ret
insb
mov
inc
movsb
fstps
mov
enter
xchg
jmp
fists
and
rcrl
pop
cmc
fs
imul
and
push
push
xchg
xor
pop
xchg
ljmp
rep
jno
lods
dec
sbb
ljmp
mov
xor
sub
jg
lret
mov
xchg
mov
mov
and
roll
test
ret
xor
out
lahf
in
adc
in
mov
jp,pt
add
xorb
stos
loopne
lods
loopne
icebp
mov
stos
push
in
mov
addl
in
lds
push
mov
ljmp
cvtdq2ps
cld
pushf
cli
sbb
xchg
stos
mov
mov
incl
dec
lcall
sbb
add
mov
xchg
xorb
hlt
decl
jecxz
fisttpll
pop
inc
or
xchg
adc
cmpsb
sahf
loope
xchg
div
dec
inc
out
addl
sub
inc
das
shrl
fmulp
and
les
filds
mov
cmpsl
out
xchg
std
ja
pop
sbb
in
jo
inc
mov
and
xor
xchg
ja
push
and
push
pop
ret
ljmp
ljmp
iret
jecxz
mov
lahf
sbb
cwtl
ljmp
xorl
jmp
dec
xchg
jmp
mov
mov
popa
in
jb
fisubl
ja
jae
lcall
mov
fdivrs
cmp
mov
xlat
cwtl
filds
and
or
cltd
dec
ror
iret
stos
roll
mov
cmp
mov
pop
rcr
shrb
mov
pop
cmp
jg
pop
lret
pop
dec
out
jno
adc
fs
or
push
pop
mov
inc
fcmovbe
call
inc
ret
push
xchg
fisubrl
or
mov
add
push
ja
cmp
push
add
cmc
ljmp
push
popa
sub
xor
mov
xchg
xchg
dec
mov
push
lcall
jmp
xchg
mov
sub
lret
out
lret
in
shld
lds
mov
jg
test
test
dec
cmp
fsubr
rcpps
push
std
decb
adc
dec
jo
mov
orb
and
test
mov
sub
mov
pop
insb
decl
xchg
xchg
jle
mov
test
and
push
mov
fildll
and
sub
test
mov
inc
xchg
jl
or
bound
iret
lea
in
jg
sub
lock
ret
xchg
std
mov
cltd
fs
inc
push
mov
data16
mov
hlt
mov
out
cmpsl
inc
sbb
jbe
loopne
mov
je
pop
or
lock
subb
in
mov
outsb
out
lods
in
xchg
and
sub
sub
rorl
pusha
mov
dec
aaa
xchg
dec
xor
jmp
daa
lret
mov
loop
pushf
mov
gs
and
into
decl
es
cmpsl
mov
das
pushf
sbb
cmp
add
pushl
loop
xchg
aam
cmp
add
aas
cmp
pushf
iret
or
addr16
sub
stos
mov
jmp
div
stc
ljmp
cmpsl
in
hlt
popf
iret
jp
mov
or
inc
push
ds
cmp
shlb
sbb
stos
add
jb
pop
pop
ljmp
xor
adc
mov
pushl
fiadds
gs
push
fstl
inc
dec
mov
pop
scas
add
movsl
and
in
mov
decl
out
imul
cmp
fdivp
push
xlat
lods
mov
jne
dec
or
call
sub
inc
mov
sar
xchg
push
loope
adc
je
mov
ljmp
xor
inc
dec
cld
inc
jb
push
clc
fnstcw
pop
enter
jmp
call
stos
mov
push
leave
lods
push
and
sbb
mov
mov
pop
inc
push
push
xor
adc
xchg
jmp
pop
insb
dec
jg
inc
rcrb
pop
jne
mov
scas
arpl
jg
mov
daa
sar
jmp
mov
pop
std
sub
and
repnz
test
mov
mov
fs
call
pop
lret
insl
cmp
mov
lcall
cmp
pop
mov
pushl
sarb
jne
mov
fcoms
and
adc
cmp
inc
clc
or
lods
adc
scas
scas
fimull
aam
movsl
daa
iret
stc
sbb
js
gs
jmp
repz
lock
push
dec
sbb
push
mov
cwtl
xchg
jg
cltd
inc
bound
xchg
xlat
cmpsb
dec
fistpll
and
popa
ljmp
repz
les
xor
enter
ljmp
cmp
xlat
mov
icebp
add
leave
xchg
and
test
push
cli
adc
mov
xchg
cmp
push
inc
sbb
xchg
push
or
mov
adc
mov
pop
pop
sub
push
mov
jb
xchg
js
inc
pushl
rol
shlb
pushf
jb,pt
inc
inc
xchg
pusha
adc
lret
lock
inc
adc
lcall
jb
xchg
xchg
lret
fisubrs
mov
loopne
call
inc
mov
pushl
inc
and
ja
mov
sbb
jle
hlt
push
incl
pop
sar
adc
fcomip
add
jmp
out
insb
out
jl
ds
mov
bound
adc
xor
lock
decl
jg
in
mov
negb
mov
ljmp
and
test
sbb
push
push
mov
sbb
ret
call
dec
cmp
fcompl
xchg
adc
xor
adc
or
push
mov
pushl
inc
ds
pop
sub
pop
loop
sahf
call
inc
jl
scas
lahf
or
cld
decl
imul
test
mov
outsb
daa
mov
and
ljmp
sbb
xchg
je
inc
loopne
pop
cwtl
ror
testl
jo
jg
mov
addr16
xchg
pop
jp
ljmp
xchg
lret
fsubs
adc
xchg
push
inc
and
ljmp
nop
mov
cwtl
xchg
inc
inc
push
js
test
dec
push
icebp
pop
movsl
movl
mov
cmp
incl
add
cli
test
push
ret
stos
pop
and
or
cli
dec
sbb
ljmp
jp
fimuls
lcall
test
arpl
push
loop
enter
jecxz
push
insb
fldcw
hlt
insl
jae
in
movsl
pop
in
test
inc
xor
int3
adc
loop
mov
out
fcompl
sar
fisubs
ja
cmp
lods
adc
xor
pop
jns
push
aam
icebp
xor
fnsave
out
sbb
scas
jp
stos
xchg
and
jmp
test
or
lods
push
sbb
call
cmpsb
shrl
sbb
pusha
aaa
cmp
mov
cmpsl
int3
adc
or
jnp
cs
push
decl
imul
faddl
mov
jecxz
and
push
jns
ret
es
insl
push
popf
add
mov
fidivrs
dec
sub
dec
mov
mov
test
jne
jnp
scas
sub
mov
daa
lcall
mov
jno
push
je
push
call
adc
pop
stos
jb
ja
mov
xchg
loope
iret
cmp
sub
jl
push
jle
in
out
cli
lret
ds
lcall
xor
push
les
out
pop
outsl
inc
sarl
lock
incl
inc
add
mov
mov
pop
mov
ja
xor
jmp
and
mov
and
cwtl
aad
sarb
mov
out
pop
fidivs
ljmp
inc
cld
jg
in
shlb
out
or
mov
ss
imul
lret
inc
jb
and
adc
idivb
inc
not
fdivrl
inc
jmp
inc
in
lock
decl
sub
xchg
and
mov
jl
push
or
and
push
pusha
lcall
out
sbb
adc
mov
xchg
decb
test
arpl
or
sub
fwait
insl
scas
adc
mov
incl
cmp
roll
xchg
push
xor
je
fcmovb
pushf
mov
jo
xlat
pop
push
loope
xchg
pop
and
pushl
xor
je
mov
pushf
adc
mov
cmp
jo
adc
cli
out
test
inc
mov
mov
dec
lret
bound
shrl
jge
or
cmp
xor
hlt
jo
leave
xchg
jmp
jg
icebp
popa
push
bnd
icebp
loop
mov
addr16
xchg
rcl
pop
jb
stc
int3
cltd
lcall
imul
and
sub
mov
cld
into
sbb
int3
fwait
xor
ljmp
cmpsb
lret
test
data16
sub
jg
test
pushf
pushf
mov
push
inc
xchg
pop
bound
loope
pushl
aam
insl
inc
int
jb
ljmp
das
mov
fisttps
sbb
jnp
jno
sbb
inc
jecxz
cmp
pop
jp
xchg
decl
movsl
add
mov
push
mov
xchg
int3
adc
stc
push
xor
jmp
sub
jae
sbb
lods
xor
pop
xor
sbb
int3
cmp
fwait
decl
loop
mov
or
push
pop
push
lret
mov
outsb
mov
jg
mov
cmp
add
xchg
fwait
sar
jmp
adc
dec
out
stos
jb
jns
cmp
sub
push
push
dec
add
adc
jbe
mov
int3
xchg
ss
cmp
lcall
out
sbb
fistps
enter
addb
outsb
imul
mov
rcr
rcr
push
cs
incl
out
inc
ret
daa
cmp
mov
mov
ficompl
int
lods
add
adc
scas
fcmovne
ljmp
push
notl
sar
cmp
shlb
clc
inc
std
icebp
fisttps
fistpl
jg
sub
jg
and
popf
adc
sub
pusha
sub
jnp
fs
daa
movups
std
call
jl
ja
jecxz
loop
and
cmp
push
insb
xor
mov
aas
lods
inc
loop
add
push
jecxz
scas
shrl
pushl
ljmp
adc
mov
ljmp
leave
sahf
in
mov
outsb
adc
testb
mov
adc
loopne
cmp
mov
and
sub
inc
adc
ret
dec
daa
in
jnp
leave
bound
insb
pushl
add
xchg
mov
jbe
fadd
lret
jp
aaa
les
pop
setns
jo
jg
sti
into
xor
js
adc
inc
xchg
sti
lods
data16
cmp
lock
and
stc
mov
daa
rcll
fisubrl
jbe
int
stc
addr16
pop
in
adc
mov
scas
xchg
xor
aaa
mov
jg
lods
mov
adc
test
add
or
aam
inc
pusha
xor
in
xchg
xchg
and
call
xor
outsl
adc
xor
or
sti
std
mov
and
loopne
test
fwait
call
adc
sub
roll
mov
and
xchg
divl
adc
add
out
cmp
daa
mov
xchg
dec
jge
mov
xor
lret
lcall
pop
or
adc
jne
addr16
mov
sti
xchg
add
or
mov
dec
pusha
push
test
inc
cli
jg
lret
insb
xchg
sbb
insb
stc
sbb
jmp
cmp
lods
in
int
sub
gs
jno
andb
sbb
ljmp
and
stos
jmp
loopne
lahf
add
popf
inc
out
sbb
pushf
mov
daa
pop
loope
mov
pushl
sbb
jecxz
sub
jne
fistl
adc
pop
decl
adc
dec
mov
or
outsb
add
fwait
scas
push
xchg
idivb
out
lea
jl
cmp
ljmp
cltd
mov
sbb
cmpsb
xchg
xchg
inc
pop
pushl
fisubl
int3
stos
sarb
push
in
xor
jmp
scas
and
or
mov
call
das
stos
adc
ja
cmp
outsl
sub
pop
cwtl
cwtl
mov
dec
loope
cwtl
cld
das
mov
es
mov
cmpsl
dec
mov
and
inc
sbbl
sbbb
mov
lds
sbbb
jmp
pop
xchg
shl
jnp
icebp
xchg
bound
fcom
test
jg
aad
nop
sub
arpl
xor
push
mov
movsl
out
in
dec
cmpl
call
call
sbb
lret
xor
jge
pop
mov
and
mov
mov
or
cmpsb
mov
jmp
push
stos
push
stos
pop
cmp
mov
orb
mov
repz
xor
hlt
test
pushl
or
in
lahf
lods
jne
shrb
mov
shlb
lods
push
cmp
jae
cmp
mov
jne
out
sbb
std
imul
inc
xchg
adc
xchg
js
jno
cltd
shll
or
cs
pop
loopne
movsl
inc
push
sti
arpl
or
mov
jmp
cmc
xchg
incl
mov
or
iret
fidivrl
lret
aas
push
sub
enter
cmpsb
icebp
incl
pop
xchg
iret
cs
mov
sbb
and
pop
jp
dec
and
cli
call
and
rcl
loope
dec
scas
mov
fwait
mov
mov
push
jle
pop
jg
jmp
jmp
adc
xchg
lret
lea
jge
nop
movsb
ss
insl
mov
pushf
addl
cmpsl
push
mov
scas
and
sub
inc
inc
pop
adc
or
cltd
out
aam
ljmp
inc
mov
push
sti
fsubl
sbb
add
imul
jmp
xchg
push
adc
inc
jo
fmul
cmp
mov
mov
lahf
ret
into
rolb
push
in
dec
adc
dec
movsb
or
push
xor
je
pop
or
adc
jmp
xorb
sahf
and
adc
sbb
sbb
sub
and
aas
popf
mov
decl
jb
pop
int
outsl
or
jmp
clc
clc
xchg
hlt
mov
pushl
data16
addr16
mov
add
ficoml
sub
mov
jmp
into
xchg
repnz
and
or
scas
xchg
adc
pop
pop
sahf
sti
inc
inc
dec
push
push
decl
fildll
in
out
xor
dec
adc
jp
xchg
les
dec
std
ja
stos
pusha
adc
bound
pop
xchg
adc
lods
in
cmc
out
mov
out
push
pop
icebp
dec
popf
fnstcw
jecxz
or
or
cmp
pop
or
fs
pop
jmp
sar
lcall
mov
dec
faddl
lods
xchg
aas
mov
push
push
xor
test
ljmp
insl
enter
notb
mov
xlat
sbb
mov
fdivrl
push
push
out
cmp
add
jmp
mov
ret
pushf
into
in
stos
sbb
push
cmp
mov
jae
imul
sti
ficomps
pop
mov
cmp
lret
add
ficompl
lahf
cs
mov
and
push
in
push
clc
xchg
fisubrs
push
pop
adc
cmp
xor
pushl
shrb
cmpsl
cli
out
mov
push
mov
ja
insb
mov
jbe
popf
fcomip
pushl
rorl
int
lcall
setl
movsl
into
mov
mov
call
hlt
cmpb
mov
pushf
push
adc
mov
stos
ficomps
and
ljmp
outsl
mov
adc
lds
push
pop
adc
and
and
jg
mov
loopne
cmp
fsubr
lret
data16
xor
sub
in
jp
cmc
cmp
cmp
call
ss
mov
xlat
aam
or
outsb
pop
pop
sbb
je
scas
pop
mov
inc
loope
inc
mov
cmc
repz
jnp
jbe
mov
aaa
lds
daa
and
ds
pushw
add
push
mov
inc
bound
sub
lcall
mov
cmpsb
shlb
xor
jg
fdivrp
insl
je
repnz
jl
call
in
dec
xchg
or
xchg
mov
xchg
decl
inc
lock
xchg
imul
sub
mov
test
lods
push
pushl
xchg
cmp
les
movsl
xchg
or
test
stos
hlt
dec
inc
inc
jae
mov
pop
sar
push
jge
jnp
lock
shrl
jecxz
fs
push
add
insl
cli
incl
and
inc
sub
stos
xchg
int3
cwtl
test
mov
pop
ja
enter
ljmp
ljmp
rcrb
mov
push
mov
cmp
dec
ja
mov
in
decl
in
xchg
xchg
sbb
loope
pop
ljmp
adc
lcall
js
jg
adc
push
enter
jmp
inc
push
iret
cli
adc
xchg
push
enter
jmp
gs
test
pop
cmp
test
and
jno
inc
and
out
adc
out
cmp
aam
movb
cli
hlt
stc
xor
push
or
lcall
int3
dec
enter
mov
int
cli
and
push
or
call
jmp
test
lods
outsb
outsb
dec
movsb
int3
inc
push
clc
stc
lcall
pop
aaa
push
outsl
pop
out
cmp
jmp
pop
cmp
sub
repz
lcall
data16
gs
iret
adcl
jle
dec
add
mov
inc
jb
dec
lds
inc
repnz
int
ja
divl
dec
push
push
mov
add
xor
mov
inc
dec
dec
mov
leave
mov
imul
decl
das
repnz
fucom
stos
bnd
lahf
pop
and
xchg
adc
sarb
clc
call
fs
cmp
cltd
movsb
jo
lahf
push
mov
xchg
pop
sbb
jmp
lret
les
cs
sbb
mov
testl
cmp
dec
push
xchg
call
rol
push
rolb
hlt
pushf
push
enter
xchg
in
cmovs
clc
fs
adcl
shrl
add
jg
out
push
lock
add
mov
cmp
scas
call
mov
iret
dec
sbb
inc
out
mov
arpl
push
cld
add
lcall
enter
sbb
shll
decl
repnz
in
xor
add
bound
lahf
push
push
lcall
ljmp
mov
push
pop
and
fstpt
mov
cmp
pushl
mov
dec
bound
pop
inc
aaa
movsl
enter
std
add
adc
je
pusha
into
jg
movsl
inc
or
mov
test
hlt
or
ljmp
jl
mov
jnp
mov
xchg
ja
mov
cmc
push
lret
push
push
mov
cs
lcall
insl
pop
testl
orb
jmp
mov
adc
sub
pushl
cmp
dec
push
lcall
popf
enter
addr16
ret
rolb
outsl
cmp
jmp
xor
aad
push
movsb
push
stos
mov
xchg
filds
inc
stc
ud0
call
ret
mov
push
cmp
mov
mov
mov
icebp
jo
out
sbb
out
dec
dec
adc
faddl
mov
cmp
mov
and
cmp
xchg
and
decl
jb,pn
and
rol
or
inc
mov
sub
fldlg2
ljmp
fyl2x
and
loopne
mov
ja
rcll
fbstp
pop
in
lcall
loope
out
lods
add
or
call
popl
int3
mov
push
jle
or
sub
jmp
jmp
sub
cmc
or
and
xor
leave
xchg
mov
xchg
ret
jmp
jno
jl
push
lret
inc
js
les
les
jg
dec
or
incl
repz
stos
push
ret
sub
inc
hlt
fildl
push
cmp
fcomip
cwtl
rorb
sub
mov
mov
fimull
incl
sarb
xchg
out
shl
cwtl
cld
or
mov
loop
push
mov
jp
mov
insb
mov
clc
adcb
loop
and
ret
adcb
cli
das
cli
call
xchg
gs
popf
jne
dec
mov
xor
out
mov
sub
pushl
mov
push
test
jmp
xorl
mov
incl
mov
sbb
mov
jmp
aam
inc
mov
pop
lret
in
mov
xchg
dec
mov
fcos
ljmp
aam
jae
xor
mov
adc
pushf
xchg
stc
mov
faddl
cld
push
pushw
or
jno
arpl
pushl
aam
cmp
and
imul
test
fmuls
cmp
popa
cmp
fdivr
jmp
jb
jge
ficoms
dec
sub
leave
mov
push
adc
xchg
sahf
cld
dec
pop
ljmp
pop
cmpsl
repnz
cmp
les
xchg
xor
js
scas
push
in
popa
loop
cmp
lcall
lretw
adc
mov
add
mov
cmp
cmp
sar
incl
mull
and
cwtl
add
mov
stos
xlat
push
mov
sbb
ljmp
ljmp
lret
shll
mov
xchg
mov
imul
cld
dec
lods
int
push
incl
cld
jmp
jmp
mov
lods
mov
or
popa
or
decl
popa
mov
push
neg
enter
jecxz
inc
fists
pop
out
inc
and
jecxz
aas
pushl
mov
adc
les
pop
fbld
dec
mov
jg
cld
sub
jb
cmp
adc
or
imull
ljmp
and
add
imul
in
mov
push
cmp
out
enter
cmp
aaa
cs
decl
mov
lret
jae
and
jg
inc
pop
jecxz
xor
or
sub
pushl
push
push
test
lock
pop
stos
pusha
loopne
testb
xchg
push
push
push
cld
mov
sbb
push
pushf
inc
lcall
sub
sti
xchg
sbb
rorl
pop
test
or
cmpsb
sub
cltd
loopew
sub
andb
mov
dec
outsl
sbb
idivb
sar
lcall
andb
testl
scas
and
adc
js,pt
aad
pushl
repz
loop
jmp
mov
cmp
je
ja
bswap
jno
scas
popa
sub
xor
jns
pop
lock
push
ja
push
cmp
mov
incl
push
call
int3
or
fstpl
ficoms
ja
jmp
ja
leave
sub
cs
xchg
xchg
es
fnstenv
fstp
loopne
call
int
aam
mov
lahf
adc
aad
jge
data16
ljmp
hlt
pop
lcall
lods
push
pop
popf
cltd
jae
in
lock
incb
mov
and
adc
xor
push
dec
std
ljmp
sbb
jg
test
fwait
cmpsb
sub
leave
sub
shrl
fisttpll
in
push
jg
push
shrl
jmp
loop
mov
add
cmp
and
mov
push
mov
outsl
pop
cmp
and
decl
sbb
mov
rcl
fs
inc
stos
imul
decl
je
out
insl
nop
sahf
jle
fs
lret
xchg
sahf
jbe
aam
fldl
pop
std
ljmp
adc
adcl
cmpl
dec
or
aaa
fmuls
clc
decl
inc
out
and
rorl
push
and
loopne,pt
call
movsb
jl
inc
jl
add
pusha
std
cmpl
scas
sbb
paddw
call
mov
popa
or
lods
cmc
bound
jo
cmp
and
inc
cwtl
adc
pop
nop
mov
xchg
jmp
inc
and
sub
fldt
add
sub
ja
pop
nop
mov
scas
hlt
fcomip
jmp
jecxz
inc
outsl
or
scas
add
push
or
inc
fistps
inc
in
inc
pushf
or
loopne
loopne
cli
or
xchg
xchg
test
decl
cmp
or
xorl
push
loopne
idivb
xor
fsubl
incl
xlat
test
jnp
pop
mov
daa
dec
out
out
mov
ljmp
scas
enter
xor
push
scas
sbb
hlt
lods
stos
xor
push
sub
and
lret
adc
je
sbb
outsb
and
mov
jg
addl
out
adc
dec
les
dec
dec
push
fisttps
push
int
inc
decl
cltd
add
inc
xchg
insb
ret
das
int
push
push
ffreep
xchg
outsb
jne
mov
pop
inc
out
jb
out
push
incl
push
xor
fsubl
sub
xor
loopne
out
int
ror
lods
dec
inc
arpl
cmp
ja
jmp
idivb
aas
pop
xor
iret
pop
push
mov
cmc
push
imull
lahf
mov
inc
out
call
jmp
cwtl
in
pop
repz
gs
aas
cmp
cmpsb
sub
adc
pop
mov
pop
cmp
jg
mov
adc
or
xor
dec
rcll
add
or
and
call
in
gs
aam
dec
test
inc
lock
push
mov
cmp
pop
faddp
pushl
jmp
dec
cmc
push
in
push
cmp
xchg
dec
jo
inc
push
or
ds
mov
sbb
fiadds
or
cmpsl
add
out
nop
ficoms
dec
xor
out
pop
ret
pop
pop
cli
sub
sub
jle
fidivrl
push
mov
mov
mov
add
icebp
jmp
outsb
pop
testb
fwait
ljmp
push
mov
mov
fdivrs
fdivrp
iret
cld
les
mov
push
inc
popf
and
push
loop
pushl
pop
pop
or
jmp
lock
roll
aad
daa
fmuls
cmc
push
sbb
inc
jne
inc
loopne
in
or
push
inc
xchg
into
lds
aaa
and
jo
pop
fistps
fs
movsb
ret
adc
push
inc
jo
imulb
ljmp
loope
sbb
xor
inc
inc
aam
cmp
sub
pushf
xor
jnp
jmp
sbb
shlb
dec
ret
iret
push
hlt
cmp
fmull
xor
jg
push
mov
loopne
mov
aam
jp
pushl
pop
pop
outsl
mov
ss
std
push
lock
cmp
les
aas
mov
lcall
xlat
mov
cmpsb
inc
push
xchg
sbb
sbb
sbb
sbbb
adc
fcomip
jmp
mov
call
cmp
popa
and
jmp
mov
sub
cwtl
lret
cli
xchg
mov
aaa
lock
mov
or
mov
ds
xor
or
std
fbld
jmp
pop
pop
stos
leave
sub
call
enter
es
inc
stos
sub
inc
test
cld
lahf
inc
pop
cwtl
mov
test
decl
imul
clc
enter
adc
xchg
imul
and
sub
jge
xorb
mov
roll
arpl
sub
mov
movsb
mov
das
into
andb
rcrl
pop
ljmp
jmp
loope
sub
loopne
hlt
xchg
imul
cmp
pop
repnz
outsb
das
movsb
std
fs
aaa
lret
incb
sbb
jo
sub
lock
sbb
andl
xchg
out
jl
in
inc
fmull
push
pushf
rorl
int3
lods
mov
adc
xor
inc
rep
mov
cli
ret
and
in
and
cmpsl
aaa
bound
repnz
dec
xor
fcoms
clc
xchg
push
xchg
ficompl
push
shrb
pushl
hlt
out
gs
sbb
jge
fdivr
in
out
mov
add
jg
jg
test
push
jl
mov
loop
adc
sbb
pushf
push
rolb
cmp
cld
jmp
enter
mov
test
call
jg
inc
fadds
es
imul
stc
std
xlat
pop
adc
leave
mov
movsl
decl
sbb
add
mov
pop
cld
fadd
repz
push
pop
or
mov
movsb
addr16
cmp
aaa
or
mov
inc
jle
xorb
rorl
push
icebp
imul
pusha
push
roll
adcb
sbb
dec
lret
rolb
add
shll
repnz
mov
ret
in
iret
dec
pop
push
call
push
idivb
xchg
ss
mov
sti
sbbl
cmc
bound
aad
rcrb
cvtps2pi
clc
lock
in
push
out
jl
call
adc
sub
ss
push
outsl
xor
dec
or
lea
xchg
sub
cmp
je
test
test
decl
mov
dec
cltd
jecxz
imulb
cs
sarl
cmp
cmpsl
ja
jmp
push
jne
fs
xorb
popf
mov
imul
testl
jle
dec
rcrb
roll
xlat
stos
pop
sar
out
adc
daa
popf
loopne
hlt
aas
dec
stos
add
hlt
cmc
pop
xor
dec
mov
xlat
cmp
mov
and
test
inc
mov
or
sbb
sbb
arpl
jge
ret
and
add
movsl
and
mov
push
sub
out
sbb
pop
jno
in
sbb
rcrl
out
lret
pop
mov
mov
stos
adcl
les
push
push
pop
decl
ret
sbb
inc
cmp
jb
add
pop
adc
xchg
decl
ja
leave
sahf
and
cwtl
cmc
test
call
scas
cwtl
sub
aam
push
add
jg
lret
mov
sarl
add
std
adc
mov
jmp
adc
cs
push
add
adc
mov
pop
sub
iret
jo
or
cli
pop
inc
pushf
cli
popa
xchg
dec
sbb
nop
mov
adc
inc
or
jb
mov
ds
jmp
jp
push
cmp
jae
enter
shlb
jno
jecxz
aam
push
decl
sbb
pop
stos
or
ficoml
inc
mov
pop
xor
out
jb
inc
cmpsl
decl
cltd
hlt
pop
cld
add
in
mov
orb
adc
stc
pop
cmp
ffreep
and
pushl
jae
nop
in
enter
mov
mov
adc
sub
repnz
jl
jmp
daa
rorb
loopne
dec
jae
jne
pop
xor
mov
mov
mov
xor
sub
out
sub
xchg
ret
loopne
push
adc
icebp
cmp
pushl
jmp
filds
push
fsubr
bound
xchg
leave
mov
icebp
pop
add
test
ficompl
jl
adc
and
inc
mov
bound
add
hlt
push
cmp
ret
cltd
icebp
insb
mov
ss
fldl
icebp
pushl
inc
jns
mov
cmp
call
fwait
and
fnsave
xor
add
sbb
mov
roll
ud0
push
jo
ss
insb
sbb
movsl
iret
scas
mov
clc
pushl
dec
adc
or
cmpsl
movsl
cmpb
js
adc
add
cmp
call
inc
mov
sbb
fisubrl
lds
outsl
mov
and
enter
jmp
lret
add
rcll
dec
call
mov
mov
fisttps
and
add
out
mov
sbb
les
pop
int
cmp
push
aaa
addr16
mov
aad
bnd
jge
xchg
jmp
in
and
fisubrs
xor
aas
mov
pop
cmp
inc
mov
push
jmp
fnstenv
sbb
xchg
insb
push
ja
addr16
inc
pop
aaa
dec
or
push
pop
je
pop
inc
in
call
std
call
test
out
push
cmp
fdivl
pop
sub
rorl
add
mov
pushl
pop
jbe
adc
or
es
orb
pop
mov
push
std
fmulp
insl
popa
test
pop
adc
in
and
pop
push
inc
repnz
or
in
std
ljmp
cmc
inc
les
push
jg
iret
lcall
push
loopne
decl
mov
pop
int
lret
mov
mov
fbld
mov
mov
and
mov
arpl
xlat
dec
aas
pop
pushf
adc
mov
ja
fisubs
scas
jge
and
cld
pop
jecxz
lret
jno
pop
call
ss
pushl
out
cmpsb
jno
pop
stos
ficoml
es
sbb
jge
ret
cli
int3
jle
jmp
mov
xchg
js
std
jnp
xchg
inc
cli
or
dec
in
cltd
stos
lcall
flds
jmp
and
stos
inc
fsts
push
dec
movsl
pop
mov
fcmovb
ss
mov
sub
dec
dec
mov
cmp
ja
xorl
mov
sbb
mov
lret
loopne
jbe
int
mov
mov
inc
jecxz
lahf
jmp
divl
clc
call
lcall
out
loop
cld
hlt
mov
xchg
imul
pop
lock
out
clc
adc
stos
ffree
in
xchg
test
mov
sub
push
adc
decl
in
jecxz
ret
stc
clc
in
cwtl
jns
int
or
movsb
fwait
cmpsb
jp
call
in
adc
dec
push
sub
ja
pop
sti
cwtl
or
lfs
xor
add
lahf
sahf
inc
rclb
cmp
push
xor
mov
outsb
mov
mov
inc
xchg
xchg
sti
inc
test
daa
inc
mov
fcomip
ljmp
xor
leave
xchg
mov
daa
mov
jecxz
aas
inc
pop
sbb
and
lcall
inc
lods
xor
jle
or
push
test
adc
inc
enter
movsb
xchg
das
mov
icebp
jo
mov
in
test
jl
add
pop
adc
mov
out
addr16
fsts
out
push
gs
jb
adc
pop
icebp
jmp
lcall
dec
cmp
nop
hlt
jbe
xchg
mov
insb
fwait
push
jb
jns
hlt
mov
mov
decl
pop
mov
pop
stc
inc
inc
inc
out
cs
lods
mov
xor
adc
dec
iret
cwtl
ljmp
lret
rorb
sub
aam
mov
addr16
lcall
cld
add
cmpsl
mov
add
sbb
das
imul
lahf
in
rolb
jmp
mov
cld
xchg
sbb
shlb
pop
push
mov
sub
ljmp
fs
mov
inc
lret
adc
inc
sub
xor
data16
incl
std
clc
dec
ljmp
jo
add
or
sub
lahf
test
sbb
jnp
dec
pop
pop
lcall
mov
ror
fst
add
mov
adc
scas
arpl
decl
subl
cwtl
jae
and
mov
movsl
cmp
jg
xchg
aaa
fdivrp
jmp
and
jge
fwait
push
and
shrl
xor
push
decb
mov
ss
fcomip
mov
sbb
lret
arpl
ljmp
fstl
ja
add
decl
cmc
cmpsb
scas
ljmp
addb
mov
xchg
stos
movsl
mov
ljmp
push
cmp
fidivs
adc
dec
pusha
popa
nop
stc
cmp
cmp
push
adc
push
loope
mov
push
int3
aaa
and
stos
mov
sub
pop
decl
dec
push
outsb
cld
cmp
lods
pusha
and
into
or
sbb
in
lea
in
ljmp
mov
jb
adc
xlat
push
into
inc
or
push
std
add
add
mov
data16
call
cltd
insw
inc
cmp
loope
push
pop
cltd
mov
cmp
push
jmp
decl
test
jmp
cmp
cmp
or
dec
and
mov
loopne
inc
pushl
fs
aaa
aam
test
xchg
ret
in
and
mov
pop
adc
xchg
shrb
ljmp
lods
and
inc
sbb
cmp
or
arpl
iret
sub
mov
fistpll
sarb
mov
mov
ss
pop
cmp
pop
lcall
call
pop
ja
loopne
rorl
push
cmp
cld
mov
das
test
das
jmp
loopne
lret
call
into
lock
mov
dec
push
or
pop
sub
lea
jmp
aam
icebp
inc
fldcw
popl
ret
cmp
push
call
fmull
dec
mov
jg
stc
jb
shrb
jne
cwtl
mov
cmp
and
in
fists
into
popf
pop
lds
mov
cli
mov
sub
add
pushf
repz
ljmp
dec
cmp
insl
out
cmpsl
sbb
fistpll
inc
xchg
sub
movsb
int3
xchg
icebp
std
cmp
jg
ret
dec
or
dec
mov
dec
mov
clc
sub
mov
mov
clc
mov
mov
push
mov
or
dec
xchg
icebp
leave
pop
insb
pushf
int
cmp
jecxz
repz
cmp
jl
lahf
push
pushl
jo
aaa
fsts
pop
pop
pop
gs
dec
or
inc
clc
rcrl
inc
jg
and
sub
fiaddl
push
mov
decl
mov
rcll
dec
sti
daa
js
scas
cmpsl
jle
add
loop
add
adc
mov
or
cmp
scas
sti
or
aaa
sub
push
jge
xchg
xchg
pop
cmc
movsl
ljmp
inc
pop
imul
push
jae
sahf
cmp
inc
lods
mov
jo
and
cmp
fdivrl
leave
push
scas
inc
inc
xlat
xor
jle
jbe
jle
adc
test
int3
mov
mov
int3
push
fxch
adc
sbb
mov
adc
jmp
sbb
pop
and
cmc
pop
xor
jl
jmp
sbb
daa
xor
fcomps
stc
std
sbb
xchg
mov
pop
sub
aam
xor
stos
or
jg
mov
cmp
aad
xor
arpl
sub
decl
mov
cmp
push
pushf
jmp
ds
sub
jne
addl
enter
out
add
rcl
repnz
sbb
addr16
ss
xchg
ret
add
xchg
cmc
pusha
add
xchg
and
das
cli
decl
mov
mov
into
test
xchg
inc
movb
pushl
mov
out
sbb
outsl
sub
xchg
or
or
test
xchg
push
call
mov
xchg
pop
push
jle
icebp
jmp
cs
icebp
jp
xor
and
add
add
fists
lock
fmuls
cltd
cli
mov
call
cld
pop
push
rol
add
enter
dec
sub
popf
mov
cmp
dec
inc
add
mov
mov
lds
cmp
fmul
out
inc
sarl
jb
xchg
jmp
in
sbb
pop
int3
xchg
jp
repz
or
lds
or
loope
cli
jge
inc
xor
mov
pop
adc
jle
jmp
dec
stos
mov
cmpsb
cmp
cs
inc
call
or
cmp
pop
and
scas
dec
cs
shl
push
pushl
and
jns
pop
loopne
repnz
ja
in
mov
call
fnstsw
sbb
clc
xchg
cmpsb
mov
cmpsb
imul
mov
xchg
fsub
sahf
adc
push
push
enter
pop
ret
pop
or
jnp
jg
lret
in
aaa
cld
jmp
push
mov
jmp
pop
int
js
adc
aaa
jmp
xor
incl
mov
hlt
test
cmp
sbb
jle
jbe
push
mov
mov
subb
fidivrs
mov
cmpsb
jmp
pop
test
add
addr16
mov
std
aaa
imul
call
cmpsl
loop
adc
cld
xchg
aad
aam
das
scas
push
jmp
cmp
loope
and
cld
sub
imul
dec
push
call
popa
rep
aas
inc
frstor
xchg
movsl
scas
cwtl
lret
flds
fcmovbe
mov
icebp
shl
jb
mov
or
popa
or
imul
or
sub
nop
xchg
sbb
jmp
dec
mov
xchg
sbbl
stc
pop
test
out
mov
push
dec
xor
lds
and
outsb
imul
xchg
aaa
pop
cmp
int3
imul
out
push
repz
ljmp
fimull
mov
lahf
mov
rorl
jno
dec
jae
mov
cmp
test
push
and
fs
addr16
in
push
cld
faddl
stos
add
adc
sti
jmp
repnz
int3
int
xor
push
pop
rcr
decl
scas
loope
inc
mov
fcomip
or
shrl
dec
add
sub
in
sbb
subb
clc
lcall
dec
test
scas
mov
fsubrp
std
arpl
popa
jle
pop
hlt
ljmp
adc
push
out
out
loope
scas
cmp
lahf
sbb
pop
cld
ljmp
ljmp
add
push
out
adc
lods
movsb
call
pop
loope
mov
sbb
pop
inc
into
xor
mov
jp
adc
dec
cltd
xor
lret
jg
lods
jmp
cwtl
and
mov
mov
pop
enter
call
pop
mov
out
jno
xor
cmc
loop
cmpsb
mov
sarb
mov
cmp
and
pop
ja
inc
dec
repnz
and
jmp
jmp
fstps
fists
mov
hlt
pop
cld
push
outsb
jle
sarb
xchg
xlat
arpl
fstpl
loop
jecxz
inc
insl
dec
repnz
ljmp
add
fisttpll
and
xchg
cmp
lock
push
insb
xor
xlat
ljmp
push
xor
push
jbe
cmp
mov
jle
adc
stos
in
xchg
cmpsb
jg
call
js
pop
rcll
mov
call
pop
ret
dec
mov
and
ljmp
mov
pop
int3
adc
in
add
je
dec
sbb
incl
sti
pushw
es
and
sub
fwait
loope
sbb
decl
pop
push
lcall
push
and
add
mov
and
incl
dec
mov
xlat
sub
pinsrw
scas
dec
or
adc
incl
in
mov
xor
enter
lds
lahf
xchg
adc
ds
clc
call
icebp
pushf
lret
pop
sub
popl
jno
and
lea
mov
jmp
call
std
inc
sahf
movsb
stc
jl
pushf
ja
dec
mov
jg
sub
mov
ss
sahf
mov
dec
dec
inc
hlt
dec
sbb
adc
add
mov
das
aas
out
repz
mov
insl
jle
inc
lods
mov
dec
scas
faddp
imul
repz
xor
mov
clc
gs
je
sahf
pop
bound
jmp
sub
pop
push
push
fdivrp
out
dec
test
mov
lds
hlt
orl
sbb
decl
inc
test
movsl
jno
push
pop
push
es
add
aam
or
push
inc
dec
jge
int
sub
and
inc
add
hlt
xor
shrd
jmp
mov
fwait
mov
stos
cld
xchg
fcomi
adc
cli
dec
ds
lahf
and
xchg
dec
adc
jp
jb
add
movsl
jle
mov
lods
pop
std
sbbl
sti
push
clc
push
add
sub
cmc
sub
decb
sahf
push
mov
idiv
ljmp
xchg
rcr
ds
xchg
idivl
into
xchg
lea
sub
mov
push
adc
pop
imul
lock
fmuls
or
incb
je
mov
sbb
sar
add
test
xchg
popa
lahf
loopne
mov
ffree
jecxz
jge
push
lods
int
sub
ljmp
mov
je
mov
mov
or
or
pop
loopne
dec
or
cmp
cmc
lret
mov
dec
mov
mov
lods
xchg
mov
cmp
jmp
sub
push
fildll
clc
mov
aad
add
decl
xchg
leave
sbb
mov
adc
cmp
mov
pop
aam
mov
mov
or
sbb
mov
cmpsb
push
mov
cs
adc
xorl
js
inc
ljmp
pushl
stos
lds
ficomps
mov
jp
or
lret
cmpsb
adc
popf
xor
clc
in
cmpsl
and
xor
aad
jns
dec
mov
popf
jl
push
pop
pop
or
mov
outsb
out
aaa
inc
cmp
or
pop
cmp
inc
dec
pop
mov
jno
sub
adc
sub
imul
pop
fdivrp
cmp
ljmp
popa
leave
mov
cmp
cmpsb
push
ds
inc
mov
cmp
jmp
ret
sti
ficompl
scas
mov
bound
mov
stos
sbb
jp
cmpsl
or
ljmp
xlat
cmp
mov
sub
jl
addr16
xor
es
imul
dec
adc
lock
es
inc
repz
cmp
xor
test
jmp
pop
sbb
hlt
xchg
icebp
and
icebp
xor
push
or
enter
rcrl
loopne
jge
pusha
test
std
dec
push
lret
jp
pop
xchg
das
fwait
insl
jl
jle
and
push
and
ljmp
shlb
sub
jo
test
xor
mov
mov
lock
jno
and
xor
xchg
test
pop
aas
adc
cmp
push
mov
ja
jne
loopne
incl
mov
std
cld
or
push
loopne
cltd
pop
fwait
outsb
pop
push
insl
xchg
push
neg
jno
xchg
pop
aad
pushl
mov
push
or
icebp
cmp
mov
iret
dec
xor
fstpl
and
call
jl
jns
sbb
or
and
ret
jb
in
add
call
lods
jp
mov
push
push
mov
or
ljmp
mov
push
ds
and
lods
scas
sarb
sub
fldt
cmc
sub
clc
mov
movsb
sub
jmp
aad
sub
xor
mov
mov
cmpl
int
add
fs
outsl
lds
sbb
mov
mov
fcomps
adc
orb
dec
jl
cwtl
dec
fldt
xchg
pop
add
call
pushf
incb
cs
push
adc
out
jb
int
in
sbb
push
clc
sti
lret
lods
test
jae
test
das
inc
std
adc
mov
or
test
ljmp
adc
pop
xor
test
js
add
mov
hlt
je
xchg
inc
sbb
decl
or
adc
outsb
or
cmp
pop
xor
lcall
mov
adc
jecxz
pusha
jne
jne
and
jecxz
xchg
xchg
jmp
mov
mov
xlat
adc
or
xor
sti
cmc
loope
jg
std
pushl
inc
out
movsb
mov
lahf
dec
mov
mov
or
xchg
icebp
sub
dec
into
pushf
inc
jg
dec
cs
out
cmp
or
push
push
insl
adc
jnp
inc
or
mov
xor
aas
jns
xor
fsts
ljmp
inc
ljmp
or
sbb
mov
pop
cmpsl
sbb
mov
loope
mov
fstps
xor
decl
out
mov
add
ss
bnd
out
dec
dec
adcb
jg
flds
jmp
lods
or
cmpsb
fcoml
push
xor
mov
jge
jg
xchg
or
movsl
insb
xchg
aas
cmp
push
or
adc
lock
dec
lret
sahf
adc
mov
push
cmpsl
in
clc
outsb
lret
mov
call
in
or
mov
sti
xchg
sbb
out
ljmp
clc
aas
push
xchg
xor
adcb
sub
dec
sub
lcall
push
cmp
call
orl
cmp
mov
adc
mov
fwait
incl
mov
or
adc
rcll
orb
loop
ljmp
int
cwtl
fwait
iret
rcrb
dec
testb
push
dec
cltd
scas
jmp
movsl
mov
fisttpll
mov
mov
lret
stos
lret
ja
cs
jno
adc
and
dec
push
ss
mov
push
dec
ss
add
push
nop
dec
dec
movsb
pushf
sbb
or
and
push
sbb
not
test
test
das
mov
iret
nop
fwait
lea
xlat
pushl
sahf
mov
leave
or
xor
sti
popf
cmp
jl
fnstsw
mov
cmp
out
pop
lahf
xor
cmp
sbb
pusha
shll
mov
fiadds
out
sbb
xchg
loope
add
dec
imul
out
pop
leave
cli
inc
adc
aad
out
pusha
xchg
dec
pop
fldcw
sarl
ljmp
push
out
mov
aad
cld
pop
lret
cmovl
sub
mov
cltd
fwait
loop
call
cld
incl
cmpsl
adc
mov
adc
sbb
pop
ds
push
and
sti
jmp
sbb
out
cltd
sub
push
jge
imul
iret
divl
jle
decl
insb
xor
std
sub
fbld
pop
and
cli
lea
jbe
dec
lea
scas
cli
xchg
ja
or
in
xchg
testb
sbb
sub
test
lcall
xor
roll
or
adc
ret
sahf
cs
out
test
loopne
icebp
data16
movsl
jns
adc
das
dec
jno
dec
adc
repnz
mov
jnp
push
mov
popa
negb
pushl
cld
dec
dec
leave
hlt
mov
fisubl
sbb
in
ret
incl
stc
daa
xor
add
subb
movsl
jne
jae
fistl
repnz
and
fsubs
xlat
xchg
ljmp
pop
xor
adc
mov
out
fistps
dec
sahf
les
or
dec
js
push
hlt
mov
out
repnz
jmp
ss
ds
mov
ret
es
push
js
decb
mov
enter
mov
bound
mov
mov
cwtl
fldcw
sahf
mov
ljmp
divl
mov
mov
adc
mov
jb
adc
bound
rclb
xorb
rcrl
lcall
std
addr16
cli
cmpsl
jle
xchg
jnp
jge
push
or
mov
outsl
cli
fistps
inc
mov
lret
jle
or
xor
je
test
ljmp
pusha
sub
or
cli
lret
xchg
dec
jne
fwait
add
out
pop
stc
cmp
and
incl
push
sub
jl
insl
push
out
sarl
jbe
push
in
lcall
mov
nop
in
xchg
mov
fcmovb
xlat
popl
fildll
sahf
xlat
jg
lcall
lock
sbb
jp
ret
fnstcw
mov
push
sub
mov
popf
aam
sbb
or
and
jae
cmp
call
mov
outsb
gs
movl
sbb
psllq
es
jmp
mov
add
push
fidivl
pop
pop
cmc
aas
push
rcll
out
mov
movsl
dec
sub
clc
in
add
cld
jmp
or
pop
notl
mov
test
insb
cld
lcall
fidivs
xor
mov
sub
push
fidivs
rolb
insb
pop
arpl
xor
orb
pushl
mov
cmp
stc
mov
mov
lcall
ss
dec
jo
aaa
xor
xor
popa
outsl
or
clc
add
cld
ljmp
andb
mov
lret
loopne
or
imul
movsb
cmp
call
xchg
jb
push
adc
xchg
clc
sbb
xor
repz
xchg
add
sti
hlt
sbb
lock
inc
mov
sbb
jns
sbb
repnz
add
mov
sbb
mov
fwait
mov
push
aad
mov
sbb
jmp
sbb
mov
xor
call
jmp
pop
push
add
dec
cwtl
loopne
data16
js
jl
xchg
cmp
inc
je
and
cltd
cmp
push
enter
dec
lcall
imul
dec
ret
pop
dec
jp
aam
xchg
arpl
mov
test
pop
bts
inc
lcall
xchg
mulb
loope
jg
arpl
jo
cli
or
mov
xorl
xlat
and
popf
lods
mov
mov
loop
jmp
jle
sbb
mov
push
rolb
adc
cs
repz
loope
decl
jp
hlt
mov
fdivrl
sub
pop
shrl
or
cmp
xchg
clc
mov
loope
mov
aaa
xor
imul
and
push
lcall
add
call
fsts
push
call
js
popf
jne
push
inc
push
push
aad
or
add
pop
sub
les
cmp
add
ficompl
or
in
cmp
or
add
incl
out
add
dec
insb
push
js
add
mov
push
jg
add
pop
push
jb
movsb
jg
inc
cld
mov
popa
add
add
dec
orb
test
lahf
pop
push
adc
inc
mov
sub
adc
and
scas
push
mov
xchg
ucomiss
add
nopl
scas
dec
pop
sahf
dec
test
pusha
or
xchg
decl
add
xchg
movsl
push
daa
add
data16
add
es
push
or
imul
jle
fists
and
stos
push
and
push
test
and
clc
idiv
xchg
imul
push
inc
pop
pop
add
outsl
int
mov
pop
sbb
add
mov
fnsave
mov
push
ds
les
push
adc
in
mov
mov
insb
or
lret
imul
imul
in
fnstsw
imul
push
add
push
add
push
fnstenv
fdivs
mov
sub
shrl
stos
mov
in
ss
add
jo
mov
push
shll
add
outsl
mov
fidivrl
iret
outsb
or
push
insl
fcmovnu
mov
sbb
jns
out
jge
filds
cmpsb
neg
mov
xorb
ljmp
imul
ret
mov
sbbl
push
mov
pushw
arpl
push
push
push
add
insb
pop
roll
jne
push
aam
push
ret
gs
or
mov
push
pop
dec
ficompl
pushf
addb
jbe
push
data16
jne
notl
inc
xchg
cs
xlat
cmp
out
shlb
lret
stos
aas
jmp
cmp
add
ja
push
push
xlat
jne
add
pop
jbe
fdivs
push
aad
push
xlat
ja
outsb
fiaddl
mov
or
jns
push
jp
jp
mov
or
push
fidivrl
sarl
ja
pop
mov
les
je
jmp
fisttpll
cs
ljmp
xchg
in
xchg
sub
rolb
cs
xchg
xor
xchg
push
setbe
fstpt
dec
fisttpl
push
sahf
in
jge
lcall
push
cmp
pushf
cmp
iret
push
push
out
popf
xchg
popf
aas
push
sahf
inc
push
lahf
inc
std
scas
fst
lahf
mov
mov
push
push
add
pop
add
fadd
mov
ds
add
lock
hlt
clc
stc
iret
repz
cli
sti
cld
std
incb
pop
and
jo
add
mov
jae
add
imul
popa
push
add
pop
add
mov
insb
add
pop
add
ss
mov
and
add
out
add
mov
or
outsl
aas
fldt
or
or
test
test
lods
stos
stos
cmpsl
or
push
sbb
or
pop
pop
adc
int3
pop
pop
adc
lods
add
pop
add
add
pop
mov
insb
pop
mov
add
scas
insl
adc
pop
lods
pop
pop
adc
and
adc
sbb
repnz
sbb
scas
scas
scas
scas
sbb
sbb
mov
and
mov
movsb
imul
mov
add
mov
shlb
and
mov
lock
and
mov
mov
pop
and
movsb
mov
and
or
sub
pop
sub
mov
or
in
pop
sub
xchg
mov
sub
das
or
es
dec
repz
aas
cmp
pop
insl
push
mov
cmp
pop
aaa
cmpsb
mov
mov
pop
xor
pop
or
xor
xor
or
add
pop
mov
xor
mov
pop
das
push
cs
xor
add
xor
das
pop
mov
xor
adc
pop
push
cs
dec
inc
das
inc
inc
xor
adc
mov
xor
push
push
popa
jbe
cmp
jl
jge
jno
jmp
mov
pushw
dec
dec
cmpb
jo
mov
inc
and
incl
movsb
movsl
mov
cwtl
sahf
mov
pushf
fwait
lcall
decl
xchg
nop
xchg
xchg
sub
dec
ja
jns
dec
mov
sub
js
imul
cmp
je
add
sub
push
arpl
addb
jbe
mov
inc
or
pop
scas
inc
pop
mov
aas
outsl
dec
jns
fists
jb
mulps
add
push
mov
movsb
dec
and
cmpsb
push
mov
xor
xor
ja
push
inc
pop
outsl
mov
cs
xor
mov
ss
push
pop
pop
jbe
dec
sbb
jle
and
push
mov
xchg
cld
in
rcrl
pop
push
inc
mov
cmp
mov
inc
push
mov
mov
add
xchg
jp
inc
push
popf
inc
in
addr16
outsl
mov
aaa
add
xchg
jno
lret
push
bound
mov
into
mov
mov
inc
push
sahf
mov
mov
insb
add
outsb
add
xchg
xchg
pop
push
test
jg
cmpsb
dec
push
dec
push
movsb
jae
add
jb
shll
addb
pushf
push
rorb
add
lcall
rcrb
pop
into
dec
mov
add
ja
std
ja
sub
push
add
add
dec
fildll
stos
push
add
and
es
js
out
mov
gs
mov
shrl
insb
pop
mov
push
outsl
ror
push
ds
insl
pop
shrl
sbb
jg
fiadds
sub
call
mulb
xor
cmp
in
mov
add
test
push
iret
xchg
data16
jb
out
mov
jg
jle
jecxz
into
out
orb
aad
push
xchg
out
lods
divb
fildl
adc
push
adcl
addb
sbb
test
test
sbb
test
in
mov
push
xchg
int
in
insb
nop
and
out
xchg
in
xchg
lock
rcr
sub
sub
imulb
in
out
xchg
das
push
xchg
repnz
xor
cwtl
push
cmc
sahf
xor
ficompl
icebp
fwait
cmpsb
pop
cmp
mov
aam
jle
or
scas
jo
test
sahf
out
jle
push
adc
shrb
fmul
mov
psrlq
sub
mov
int
mov
mov
sarb
into
addr16
sarl
ret
dec
adc
add
mull
push
leave
cmp
dec
dec
out
je
add
inc
sbb
dec
adc
mov
fisubrs
or
or
mov
sbb
or
es
push
adc
push
add
in
pop
adc
adc
ds
add
ret
mov
xor
ds
inc
mov
mov
mov
std
push
testb
mov
add
and
fsubrs
ds
mov
pop
sar
push
aas
and
xor
xor
or
pop
and
insb
aas
aas
cmp
sub
adc
js
pop
adc
mov
sbb
inc
jbe
popf
mov
sub
inc
or
fidivrl
cmp
dec
mov
scas
ds
jle
aas
jbe
jge
adc
ds
xor
dec
inc
test
mov
scas
add
sub
mov
mov
addr16
mov
mov
stos
test
cmpsl
cmpsl
cmpsb
cmpsl
add
outsl
ja
clc
test
xor
daa
sub
mov
sub
sub
add
add
in
cld
add
dec
and
inc
mov
push
push
push
push
push
imul
ljmp
push
pop
push
push
push
imul
adc
ds
jmp
xchg
pusha
xchg
nop
cltd
mov
mov
nop
test
insl
popf
mov
jge
jns
jns
jle
addl
jo
outsb
pushf
push
insl
push
dec
sti
lds
push
rolb
mov
test
mov
incl
or
add
or
stc
decl
jl
push
add
cmc
repz
dec
xor
aas
std
add
xchg
pop
cmp
test
add
mov
add
mov
int
mov
push
fnstsw
mov
jg
ljmp
add
addr16
add
pushf
add
mov
push
in
jge
std
mov
or
arpl
mov
das
fsubrs
push
push
dec
lret
js
into
xchg
add
fistpll
add
mov
mov
test
scas
xchg
js
in
and
out
lods
add
ds
sub
mov
fnstcw
push
nop
sub
xchg
xor
mov
fucomi
xchg
xor
xchg
outsb
lcall
leave
jbe
data16
cmp
fidivrl
shlb
iret
adc
repz
lret
loopne
push
std
into
pop
inc
sub
fdivrp
neg
insb
mov
out
xchg
add
test
jg
jle
inc
add
add
and
adc
xchg
dec
dec
dec
dec
dec
add
pop
add
outsl
xchg
incl
push
dec
or
adc
cmp
adc
dec
or
add
fsubr
dec
dec
push
adc
add
or
pop
pop
mov
add
cmovg
inc
push
dec
sbb
fscale
dec
sti
inc
adc
inc
inc
adc
sbb
dec
add
dec
adc
inc
ds
cmp
cmp
cmp
daa
and
sbb
sbb
mov
jmp
adc
sub
xor
xor
sub
sub
imul
lods
mov
addb
mov
insb
fwait
int
pop
mov
mov
mov
mov
pusha
mov
addl
push
ds
add
subl
pop
addb
sbb
pusha
add
push
cmpsl
pop
adcb
jbe
incl
clc
sbb
mov
mov
or
outsb
sqrtps
fadds
mov
es
mov
cmpsb
pop
stc
cmp
testb
in
lock
push
or
or
adc
push
jg
fisubrl
adc
ja
aaa
inc
mov
subb
add
and
pop
lahf
add
jg
pusha
mov
out
cli
mov
add
xchg
cli
fists
or
inc
push
or
inc
lds
pusha
xchg
jg
sti
or
das
sti
mov
cmp
or
sti
jg
add
pop
xchg
adc
push
jg
jg
and
adc
ja
lods
and
idivb
cld
fs
and
add
orb
adc
jg
dec
sub
into
repnz
dec
mov
jg
and
push
adc
and
mov
or
incb
andb
jg
pop
fs
incl
addr16
add
dec
test
pushl
add
incb
jg
sub
xchg
fidivrs
jg
add
xor
lret
jg,pt
fcomps
add
push
jbe
lods
add
pop
pop
mov
jle
cltd
lea
sbb
sbb
xchg
push
call
mov
stc
mov
lret
imul
and
adc
mov
lcall
xor
jg
pop
cmp
addl
shlb
scas
data16
push
push
and
and
cmpsb
push
or
das
add
push
and
orl
pop
mov
inc
dec
jg
jle
add
fdivrp
sub
ljmp
stos
fcmovnu
cmp
pop
pop
pop
add
daa
aas
mov
pop
add
mov
jle
add
fs
bts
mov
mov
ds
jmp
decl
dec
xchg
push
bound
add
repz
mov
das
insl
fcmovnu
sahf
pop
daa
push
arpl
es
pop
mov
push
mov
fcmovbe
out
mov
decl
dec
mov
pop
lcall
out
mov
ljmp
dec
fidivrs
test
pop
loop
test
mov
test
mov
stc
mov
fnstenv
add
push
jne
pop
dec
or
out
push
jnp
adc
decb
js
adc
insb
dec
jbe
pop
add
rcrb
mov
ljmp
ds
jp
test
cs
jle
jbe
test
dec
incl
ss
or
push
rcrb
int3
ja
xchg
add
dec
call
enter
fiadds
mov
fldt
push
mov
and
jbe
sahf
inc
out
mov
sbb
cmp
xchg
outsb
fwait
insl
popf
inc
push
pushf
cmp
dec
or
push
xchg
xchg
xor
sub
sub
nop
daa
sub
in
mov
nop
fucom
dec
xor
call
inc
push
mov
xor
jg
pop
fnsave
xor
pushf
push
xor
inc
sbb
push
jbe
sub
pop
cs
add
sbb
adc
ja
dec
cmp
xchg
movb
ja
and
mov
add
adc
add
nop
fsubs
out
addb
cmp
add
or
in
dec
adc
pop
or
adc
pop
mov
orb
negl
sub
in
mov
mov
popf
push
imul
xchg
inc
and
cmp
lock
cmp
pop
icebp
sar
pop
test
push
in
add
mov
inc
adc
push
out
pop
xchg
cmp
or
jmp
adc
xchg
jnp
push
sbb
xor
cmp
cltd
add
pop
into
jmp
syscall
mov
sub
arpl
adc
stos
pop
xchg
pop
jge
call
add
sbbb
movsb
stos
mov
jmp
lcall
adc
out
movhps
add
push
jbe
sbb
mov
sti
ud0
inc
or
jmp
fcompl
adc
ljmp
or
gs
push
sub
incl
data16
or
sbb
cmpsb
ljmp
push
ljmp
scas
pushl
inc
mov
mov
cmp
push
add
adc
enterw
iret
jle
xor
call
incl
out
ret
stos
ud0
cmpsb
xchg
incb
nop
add
push
dec
decl
add
iret
inc
arpl
incl
mov
arpl
adc
fdivrp
mov
sub
xacquire
mov
sti
push
std
pop
and
call
decl
adc
imul
mov
sub
sgdtl
xlat
jg
or
out
cli
notb
dec
mov
test
imul
inc
push
sbb
jmp
ljmp
xchg
lahf
inc
pop
fcmovbe
pop
pop
into
ficoms
aaa
mov
nop
push
push
shll
mov
mov
roll
or
mov
xchg
push
adc
jmp
ljmp
mov
imull
inc
push
inc
inc
pop
insl
insb
insl
fiaddl
aaa
push
pop
mov
insb
fistps
stos
push
popf
inc
cmpsb
dec
xor
fimuls
inc
cs
dec
es
push
add
and
ds
push
add
push
shrb
rcl
outsb
dec
rorb
es
gs
das
data16
repnz
iret
insl
pop
daa
outsl
push
dec
ja
imul
dec
notb
push
jne
push
push
ljmp
inc
mov
dec
dec
pop
push
fcmovbe
add
repnz
push
insl
fwait
dec
cmpsb
popfw
cmp
aas
jmp
ss
decb
cwtl
xor
cltd
inc
push
xchg
push
push
xchg
hlt
push
lcall
scas
xlat
ss
xchg
es
xchg
xchg
xor
push
sub
jmp
scas
decl
xchg
mov
xor
pusha
xchg
fimuls
movsb
jg
sbb
or
std
faddl
stos
fstpt
push
jnp
jp
or
shrb
addr16
or
jl
push
jge
sbb
es
jbe
adc
fidivrl
dec
int3
push
dec
push
dec
repnz
repnz
jae
pop
fidivrl
clc
outsl
mov
fadds
loope
out
add
in
add
int3
mov
nop
negl
add
sarl
sbbb
mov
sub
push
adc
iret
mov
imul
cmp
jnp
lahf
dec
es
addl
ljmp
imulb
orb
jg
and
xchg
out
aam
aaa
hlt
push
sub
iret
out
mov
cli
incl
clc
push
idiv
inc
out
ds
push
jb
sub
jg
mov
icebp
push
push
dec
mov
pop
cld
adc
fucomp
daa
jno
sub
jg
mov
icebp
mov
xorb
fidivs
xchg
ja
loope
xchg
stc
bnd
cld
jp
es
xchg
subl
adc
incb
jge
and
adc
in
jg
dec
in
sarb
push
xchg
pop
ja
dec
iret
lock
mov
icebp
idiv
xor
push
and
lcall
push
faddl
pop
push
inc
inc
stos
nop
ds
int3
decl
mov
fidivrl
arpl
clc
jbe
mov
decl
pop
push
pop
and
into
and
push
pop
or
inc
push
xchg
scas
mov
fists
dec
into
lcall
push
jns
pop
insb
add
mov
push
mov
jmp
xchg
jmp
mov
idivb
mov
push
xchg
mov
loop
adc
pop
clc
pushl
sbb
loope
and
lret
jg
out
mov
or
cmp
pop
add
aas
test
inc
or
cmp
and
xchg
push
xchg
add
sub
push
movsb
dec
pop
xchg
movb
stos
lret
and
xorb
sbb
pop
orb
push
lret
adc
call
mov
adc
sub
inc
push
add
xor
into
pop
push
sbb
push
sbb
xchg
imulb
push
or
and
aaa
sbb
push
sbb
outsb
push
movl
adc
dec
add
adc
ret
pop
adc
outsl
nop
mov
xor
add
inc
push
lmsw
add
jo
adc
and
add
inc
rolb
dec
inc
xchg
sbb
ret
or
add
cmp
jo
imul
jl
or
call
jno
es
add
mov
dec
lods
sub
pop
sbb
push
dec
or
call
dec
insl
pop
test
add
imul
adc
shlb
dec
loop
xor
add
and
cmp
add
in
lods
mov
sbb
xchg
cwtl
mov
aad
add
push
cmp
add
mov
sbb
adc
mov
and
add
insl
and
xor
out
pop
popf
in
imul
rcll
popa
bound
inc
xchg
adc
jb
outsb
add
jae
inc
addl
lds
inc
sbb
call
xor
cwtl
add
fldenv
dec
mov
adc
scas
gs
sub
and
add
adc
cmpsl
dec
add
xor
les
pushf
es
xchg
test
sbb
lcall
jno
outsl
shrb
imul
push
outsb
dec
push
outsl
loop
fidivl
add
and
push
pop
movsl
dec
sub
inc
rcrb
sub
jg
push
dec
insb
out
inc
imul
sbbl
inc
cmpsb
inc
add
adc
sahf
adc
addr16
adc
mov
add
or
popa
mov
and
sbb
add
mov
add
inc
or
and
arpl
xchg
pop
arpl
push
add
mov
addb
push
fiaddl
and
insl
mov
lods
jecxz
adc
aad
cmp
adc
cmp
es
test
mov
mov
pop
mov
cmp
xor
push
dec
in
xchg
sbb
es
inc
pusha
stos
roll
mov
xor
orb
sub
mov
adc
cmc
xchg
cmpsb
cmp
add
test
jecxz
adc
mov
add
adcl
sub
xchg
or
or
mov
dec
cwtl
adcb
jmp
inc
orl
xchg
fsubl
jecxz
je
bound
jp
jnp
iret
testb
out
push
shll
xchg
xchg
bound
adcb
inc
adc
pop
test
jae
lds
mov
pop
push
icebp
and
or
add
add
subl
push
add
pop
mov
dec
fbstp
leave
add
push
jae
xor
or
sub
mov
mov
nop
in
pop
add
and
imul
cmp
sbb
or
push
pop
test
jo
add
inc
stos
roll
push
inc
icebp
test
loope
je
jne
inc
mov
sbb
gs
outsl
jae
in
nop
pop
loop
outsl
mov
xor
mov
mov
add
push
add
insl
jb
fldenv
sub
and
inc
arpl
mov
das
jmp
test
sub
aas
sub
xchg
pop
sub
push
fimull
mov
pop
outsb
adc
cmpsb
or
sti
adc
push
dec
jnp
push
inc
xchg
insl
xor
aaa
push
pop
imul
xchg
or
jne
arpl
jae
test
mov
mov
sbb
call
cmpsl
addr16
imul
and
sub
inc
sub
ds
inc
or
push
popa
sqrtps
ljmp
jb
popa
sbb
inc
xchg
or
test
sub
fstpt
fistl
mov
ja
add
ja
insb
sahf
mov
inc
push
push
and
add
inc
jb
mull
fwait
push
mov
add
inc
loop
dec
pushf
adc
add
dec
add
or
dec
out
push
jg
jns
lock
mov
mov
test
les
or
je
ss
pop
out
xor
xor
or
ret
fidivs
inc
popa
addr16
outsb
inc
sbb
mov
pop
aaa
ret
pusha
mov
or
in
icebp
insl
dec
outsb
dec
std
lea
mov
das
inc
mov
sub
inc
sub
add
pop
add
add
sbb
mov
movsb
shll
sub
dec
shll
mov
xor
mov
test
push
es
pop
add
loope
nop
inc
add
movsb
outsl
xchg
add
sub
sbb
xor
insb
inc
outsl
and
shlb
shlb
dec
test
test
mov
xor
adc
sub
inc
out
push
imul
loope
pop
pop
andb
imul
push
mov
mov
jbe
mov
sbb
jno
sbb
pop
and
out
mov
les
xor
sbb
and
loopne
add
sarb
subl
adc
mov
jnp
movsb
add
outsl
cmp
les
push
xchg
push
jge
shlb
out
pushf
xor
int3
test
push
xor
and
xchg
lods
ret
push
dec
sbb
jbe
inc
insb
sub
push
push
mov
ja
mov
pop
lret
inc
lock
jns
mov
mov
or
mov
ficomps
xlat
adc
or
mov
sbb
dec
adc
inc
add
inc
xor
xchg
enter
out
cmp
mov
inc
aaa
outsl
and
jbe
je
insb
mov
in
cmp
lods
outsb
jbe
push
push
mov
and
and
mov
scas
push
hlt
pop
push
in
mov
dec
insl
nop
mov
fisubl
dec
test
shrb
shrl
cld
addr16
adc
arpl
enter
test
pop
xor
adc
les
jmp
nop
adc
test
sbb
imulb
pop
adc
nop
fs
mov
cmp
jns
stos
xor
and
cmp
jbe
sub
out
mov
cmp
mov
fiaddl
fwait
or
inc
scas
inc
sub
aaa
sbb
xor
adc
lods
mov
jbe
enter
or
mov
push
mov
jecxz
push
inc
inc
xchg
sbb
mov
sub
push
lret
sbb
daa
lods
or
arpl
jo
jbe
lcall
xor
outsb
inc
test
jp
sub
xor
movsb
pop
inc
pop
jo
aaa
sub
add
inc
rcl
pop
leave
ss
push
cmp
adc
lea
sub
or
aam
fmulp
add
add
push
daa
adc
inc
int3
pop
add
add
mov
in
add
jnp
or
pop
add
mov
fnsave
movb
sahf
jo
lods
adc
movl
inc
sbb
add
fs
clc
add
add
jno
adc
add
push
sbbb
jmp
enter
cmp
or
push
mov
out
cld
dec
xchg
add
pop
push
rorb
dec
xchg
lock
jnp
add
cmp
dec
incl
pusha
mov
lea
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
add
inc
add
