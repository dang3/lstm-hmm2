divb
in
mov
mov
mov
inc
add
add
sahf
int3
das
int
in
jg
shlb
or
and
push
je
and
out
je
push
call
push
add
sub
push
ret
in
divl
jne
mov
or
call
xchg
push
push
sbb
stc
out
aas
mov
test
je
cmp
movl
cmp
jae
dec
movzwl
lea
jne
sbb
xor
jmp
and
neg
fidivrs
and
pop
pop
mov
or
call
push
push
sarl
stc
shrl
jp
lock
jge
add
pop
push
push
push
push
xor
mov
mov
movsl
std
in
pop
scas
cmp
inc
add
cmp
pushf
or
push
rcrb
sahf
push
mov
push
xor
fidivl
fcoms
cmp
adc
mov
ret
mov
jmp
jmp
pushl
jbe
adc
lea
or
lock
dec
test
jg
mov
or
add
cs
add
ret
std
imul
xchg
add
mov
pop
inc
push
adc
add
inc
fcoms
rol
jo
mov
push
mov
xor
sbb
add
push
add
aaa
fwait
mov
mov
or
data16
sbbl
sarl
push
lahf
add
xchg
notl
andl
mov
push
sub
mov
hlt
cs
jbe
xor
sbb
adc
cwtl
mov
lock
pop
imull
dec
shl
in
or
jo
mov
xor
hlt
or
pop
cmpsl
push
repnz
in
cmpsb
cmp
lea
fwait
popa
xor
push
call
sub
add
out
push
sbb
push
loopne
xor
test
mov
lea
mov
adc
daa
mov
push
dec
or
add
iret
jbe
ret
ja
pop
xchg
sbb
fdivrs
xchg
sub
ret
test
push
xchg
mov
call
addb
das
or
push
dec
and
add
xchg
es
pop
xlat
push
sbb
test
or
sbb
push
and
add
push
dec
dec
cmp
je
out
push
out
jmp
mov
mov
pop
pop
fs
pop
lods
mov
aad
add
mov
push
sub
mov
pop
push
insl
and
orb
add
push
iret
bound
fidivrl
inc
pop
pop
ljmp
inc
lock
push
mov
cmp
or
jge
outsl
push
rolb
js
sti
mov
mov
xor
mov
pop
ret
arpl
xor
stos
pop
roll
pop
imul
rcrl
sar
pop
inc
sub
inc
clc
sub
pop
or
xchg
es
cmpl
adcl
xorl
sbb
pop
cmp
cli
js
mov
cmp
jg
mov
pop
and
adc
ret
pop
dec
add
mov
pop
and
jmp
enter
xchg
das
pop
push
sub
push
mov
sar
imul
lea
push
cmp
ja
adc
pop
dec
clc
add
push
mov
inc
loope
adc
in
inc
jno
xchg
adc
in
outsb
int3
clc
scas
cmp
jle
mov
cmpl
or
clc
loope
incl
shr
sub
or
cmp
push
inc
jle
add
pop
cltd
sub
rcl
enter
shrl
iret
mov
movsb
pop
cmp
orb
sub
cli
cmp
mov
push
jne
js
incb
add
xor
pop
mov
jle
add
call
jo
add
testl
inc
add
adc
lea
adc
stc
std
mov
and
xor
into
mov
adc
cmpsl
push
cmpsl
inc
cmp
mov
cmpsl
mov
cld
fisubrs
xlat
ja
lods
lea
stos
mov
clc
cmp
roll
mov
mov
jge
test
jle
insb
or
cmp
mov
inc
mov
stos
pop
pop
inc
insl
cmp
loope
or
push
push
cmp
adc
outsl
add
sub
repz
push
jmp
push
lea
lea
inc
push
inc
add
pop
sub
in
pop
push
cli
push
andl
ret
and
sbb
outsb
hlt
adcb
or
jbe
inc
and
cmp
mov
cmp
and
xor
push
push
sti
rcrl
hlt
das
push
out
cmp
jle
mov
inc
or
xor
cmpl
je
push
cmp
cmp
jae
push
cmp
inc
and
adc
cs
or
or
add
jb
pop
adc
pop
adc
pop
leave
fwait
jle
mov
fcoms
jnp
ljmp
in
aaa
cmp
lock
loop
push
push
push
rcrb
sbb
or
adc
or
cmpsb
push
loope
add
jne
pop
nop
out
loop
loopne
cmp
jo
inc
sub
add
aaa
lret
shll
mov
inc
or
pop
or
cmp
add
add
xor
jno
cmp
jne
push
push
push
push
xor
push
test
push
mov
mov
or
pusha
pop
pop
jle
sbb
xor
mov
daa
in
rcr
jne
cmp
lret
xchg
and
add
sub
xor
frstor
insb
mov
lock
mov
cld
pop
stc
add
out
add
sbb
fstpt
mov
add
repz
testl
xchg
pop
mov
and
push
je
xchg
sbb
test
cwtl
ds
xchg
loopne
in
dec
out
mov
ja
stos
or
dec
adc
je
push
adc
aas
clc
pusha
mov
push
repz
inc
xor
push
ss
push
incb
sbb
out
lea
dec
push
xor
adc
lahf
testb
lea
out
jae
pop
shlb
fldcw
add
add
add
jge
repnz
lea
push
dec
pop
xchg
push
cld
fists
mov
fistps
add
push
mov
jb
push
outsl
dec
xor
mov
push
out
fsubrl
adc
and
push
scas
push
inc
sti
add
or
test
cmp
iret
insb
push
cmp
push
push
cmp
je
shll
adc
or
loopne
jne
imul
mov
imul
adc
fwait
or
xor
jb
ja
adc
inc
fsubl
shlb
xchg
cmp
mov
xchg
paddq
mov
aaa
movsl
iret
xlat
mov
mov
mov
or
mov
call
arpl
cs
jno
lods
imulb
xor
sub
jg
inc
dec
mov
or
cwtl
in
cmp
mov
add
andl
or
sub
in
mov
shrl
ss
push
mov
mov
push
adc
lock
lcall
sbb
int3
ret
mov
push
testl
jae
and
mov
aas
pop
loopne
push
loopne
pushl
push
cmp
icebp
add
daa
lret
call
sub
adc
pop
inc
lods
or
enter
add
sbb
je
dec
je
push
xor
push
pop
jmp
push
adc
inc
pop
loop
sbb
movsb
call
add
mov
inc
adcb
push
rcll
jg
int
mov
push
mov
insb
sbb
mov
sbb
mov
inc
and
mov
jae
mov
aam
and
pushaw
pushf
pop
cmc
subl
sub
and
sub
add
xor
aam
test
pop
jle
or
mov
mov
sarb
pop
or
pop
rorl
xchg
and
loop
xlat
sub
lret
ljmp
out
shr
sbb
fisttpl
or
sub
js
and
adc
arpl
loope
popa
add
jle
in
dec
xchg
ds
and
sbb
sar
inc
pop
xlat
andb
je
or
cmpb
lea
mov
fldcw
mov
sbb
pop
movsl
push
negl
pop
ds
das
adcl
pop
dec
sub
adc
mov
push
sbb
or
sbb
push
adc
lahf
cmp
sbb
adc
fists
cwtl
add
pop
sbb
and
add
js
xor
in
js
jl
ret
adc
jb
pop
adc
test
mov
mov
mov
cld
cmp
jg
jne
dec
sbbb
push
cmp
enter
movsl
cmp
les
or
andl
nop
into
or
mov
je
inc
mov
icebp
into
scas
mov
dec
or
or
push
data16
sbb
dec
mov
pop
pop
pushf
sub
pushf
sbb
pop
aas
push
and
inc
and
or
push
jo
int
in
jae
bound
cltd
adc
out
in
sahf
adc
je
scas
jnp
mov
adc
lahf
xor
jbe
pop
ret
lahf
mov
insl
jnp
pop
aaa
push
push
or
mov
xor
dec
sub
fmuls
subl
popa
xor
xchg
xor
data16
push
divb
lcall
orl
je
and
mov
out
scas
mov
int3
sbbb
ljmp
mov
mov
pusha
push
lcall
jo
jne
push
ret
das
pop
add
pusha
add
and
in
aaa
sbb
push
dec
mov
lods
mov
jnp
add
pusha
jp
push
in
mov
adc
insb
movsl
sbb
pop
repnz
je
jbe
in
sub
in
rolb
daa
jo
scas
and
orb
xchg
xor
test
lds
repnz
ds
pop
pop
jmp
sub
popa
jmp
mov
xchg
mov
push
xor
mov
pop
aas
aam
jge
decl
inc
and
fisubl
xchg
xchg
je
out
out
add
push
push
add
insl
cmp
jb
lock
bswap
scas
mov
scas
adc
mov
mov
and
push
je
icebp
bound
adc
xchg
in
push
and
push
filds
or
frstor
add
add
add
fldt
pusha
mov
testb
mov
incb
or
and
test
add
in
sbb
jo
xor
or
push
mov
jmp
ljmp
sub
mov
push
lock
pop
push
sbb
neg
sbb
pop
les
ret
je
push
inc
out
loop
in
and
mov
gs
sub
mov
enter
cwtl
sahf
inc
and
fs
mov
dec
mov
mov
imul
loopne
xor
in
pop
push
add
adc
push
jb
or
sbb
add
mov
cmp
xchg
pop
mov
add
jge
pop
incb
jecxz
dec
inc
outsl
mov
in
das
sarb
sbb
sub
xor
sbb
sub
mov
test
fcoml
dec
jo
xchg
mul
mov
shlb
loopne
jo
cmp
movsb
sarb
js
mov
adc
pop
adc
push
mov
xorl
cmp
cmp
rclb
xchg
rcl
ret
les
pushf
pushf
leave
jae
gs
mov
mov
xchg
dec
mov
xchg
sbb
xchg
xchg
sbb
push
test
mov
xchg
int3
clc
arpl
ret
sbb
leave
enter
ror
cmp
sbb
shlb
sub
ret
sbb
dec
jnp
mov
mov
dec
leave
jae
mov
sub
test
push
test
add
test
jle
pop
pop
pusha
inc
xor
and
insl
inc
ja
and
cmp
testl
loope
hlt
shrb
add
mov
inc
iret
and
cwtl
sub
jo
inc
sbb
call
test
push
or
dec
pop
mov
es
push
ficompl
push
loop
jnp
and
cs
push
xor
sbb
and
add
ret
xor
add
lcall
pop
add
enter
or
jle
lahf
cmp
mov
in
addb
test
and
outsb
and
ficompl
inc
sbb
movsb
and
push
aaa
adc
dec
sbb
orl
pop
push
mov
mov
mov
jae
or
cld
sarl
sbb
ret
lods
pop
test
cwtl
sub
lret
xchg
and
std
and
adc
adc
popl
daa
add
sbb
fsubl
adc
addb
cwtl
mov
mov
cmpl
and
push
pop
push
jmp
popa
mov
ret
push
or
mov
fiaddl
adc
or
sbb
adc
movsb
adc
xor
mov
insl
pop
sbb
push
sbb
fstl
scas
and
jl
and
enter
or
adc
sbb
jecxz
pop
dec
push
dec
mov
in
mov
nop
aaa
xchg
xchg
add
adc
test
sbb
inc
adc
adc
movsl
jno
mov
stc
loope
add
inc
xchg
mov
adc
cmp
aaa
pop
inc
adc
xchg
adc
sub
push
cmc
mov
push
sbb
push
nop
imul
lret
xor
push
and
iret
sbb
sbb
aas
loop
add
inc
jne
shlb
jno
jb
mov
test
enter
sbb
movsb
dec
out
lcall
xchg
mov
loopne
dec
jo
lea
mov
sbb
lcall
fbld
das
jne
push
pushf
pop
nopl
pop
xlat
sbb
shrd
popa
testl
outsl
jg
cmp
je
or
je
xor
push
push
or
push
mov
adc
xchg
mov
pushw
mov
mov
xchg
inc
xchg
and
pop
loopne
das
jecxz
daa
add
inc
ret
or
inc
pop
add
mov
mov
add
test
mov
dec
in
lret
xorb
and
sbb
lock
cmp
add
sti
cmp
je
push
push
pop
ljmp
test
xchg
add
mov
sub
inc
mov
mov
clc
adc
and
shrl
pop
mov
xorb
jmp
dec
cmp
sub
mov
mov
xchg
insb
push
sar
and
stc
sahf
sub
sub
or
bound
inc
xlat
in
add
popa
and
sub
sub
pushf
fstps
add
movsb
std
div
faddl
cmp
negb
aas
rcrl
inc
incb
xchg
inc
mov
cmc
pusha
shrb
test
sbb
loopne
push
fdivl
jns
inc
stc
scas
sub
pop
bswap
pop
test
sub
sub
pop
leave
aam
inc
imul
cwtl
lods
jno
ss
je
sbb
inc
lret
ret
test
cmp
cmp
or
mov
fstpt
cmp
push
stos
add
adc
jb
pop
add
xor
clc
push
insb
push
daa
movsb
xor
test
pop
insb
adc
push
lods
mov
mov
sub
pop
stos
jo
fsubs
jne
jo
out
pop
and
pop
xor
xchg
lahf
mov
inc
sbb
arpl
dec
adc
inc
ret
jecxz
lret
push
push
or
sub
pop
adcb
push
add
test
test
adc
mov
mov
enter
push
push
cld
sbb
sti
lahf
mov
adc
add
pop
cmp
add
or
adc
xor
push
sahf
xor
and
add
mov
hlt
sbbl
sub
nop
negl
inc
mov
jo
push
enter
int3
ds
lds
lea
pop
xchg
add
sub
pushl
jnp
fidivs
dec
xlat
test
xor
dec
push
mov
fsubs
roll
aad
imul
sub
inc
repnz
cmp
mov
and
xor
stc
pop
pop
and
dec
dec
xor
ficoml
cmpl
cmpsb
cmp
mov
repnz
sub
rcll
and
sbb
jne
and
enter
and
xor
andl
lods
rclb
nop
inc
in
xchg
or
ds
cmp
push
jl
jne
bound
pushf
dec
inc
inc
adc
ds
popf
fstpt
rorb
dec
mov
mov
push
or
xchg
pop
icebp
pop
dec
les
adc
dec
stos
xchg
adc
pushl
push
mov
sub
mov
loop
add
in
and
adc
sub
ret
push
je
nop
sub
adc
les
rcll
cmpl
add
iret
sbb
push
mov
mov
dec
sbb
outsb
loopne
sbb
fld
sti
cmpb
jae
jne
push
sub
xlat
ret
call
sub
fisttpll
jne
inc
adc
or
in
gs
orb
jmp
cmp
push
mov
nop
out
adc
pusha
cmp
loope
nop
sbb
mov
jmp
mov
clc
cmpb
daa
fs
push
loopne
and
push
shrb
push
outsb
scas
push
dec
lret
add
inc
das
xchg
sti
sub
inc
repz
out
jge
and
xchg
orb
enter
or
lret
jo
inc
mov
cmp
mov
test
pusha
xchg
push
les
jge
jo
and
cmp
out
jo
xor
daa
dec
rcll
sbb
mov
xor
mul
dec
xchg
jo
inc
xchg
add
pop
or
setne
or
dec
or
mov
rcrb
into
add
icebp
aaa
arpl
adc
pop
out
jne
or
je
sub
fadd
mov
in
sti
loopne
je
loope
jg
inc
das
adc
mov
or
in
sbbb
push
inc
faddl
jl
test
dec
push
pop
pop
sub
jo
test
mov
lods
cmp
lock
fsubrp
out
xchg
or
xchg
cmp
fsubs
add
call
neg
test
imul
sub
repz
je
cli
pop
ror
dec
sarb
inc
mov
pop
jns
sbb
fsub
push
out
inc
out
loopne
cld
inc
test
and
or
nop
inc
aas
fnstenv
imul
lock
or
loopne
lods
sbb
cld
or
mov
push
pop
or
push
or
jg
scas
fdivl
add
or
enter
add
int3
add
mov
or
es
fisubrl
jle
push
fdivr
or
sub
call
dec
xchg
call
mov
add
mov
jnp
lock
dec
inc
sbb
je
sub
jle
cld
out
jmp
jge
imul
cmc
jbe
push
xor
jmp
mov
xorb
int3
int
mov
mov
xchg
int3
test
push
sbb
in
icebp
inc
xorb
xor
fstl
inc
sbb
mov
lea
rolb
mov
mov
inc
hlt
xor
inc
mov
mov
jle
push
dec
cmp
adcb
push
pavgw
ret
jle
call
in
sbb
lock
push
mov
orb
mov
shll
in
paddusb
cmp
pop
filds
mov
push
push
add
pmulhw
mov
jbe
pop
clc
add
inc
sbb
sbb
movsb
adc
fcomps
sub
mov
stos
insl
std
adc
sbb
dec
test
pop
lea
roll
sub
or
cmpl
push
push
jne
aaa
or
rcrb
pop
dec
xor
mov
in
inc
xchg
in
cmp
inc
ficomps
cld
test
sbb
or
mov
imul
or
sbb
add
mov
or
xor
push
push
add
pop
ljmp
or
inc
pop
or
cmp
std
popa
xor
add
mov
das
jle
popa
cmp
inc
nop
es
dec
xorb
push
imul
pop
fmull
jp
fcompl
movsb
adc
add
pop
sar
in
loopne
pop
cld
loopne
orb
add
test
lds
lahf
call
into
sarl
aam
enter
test
or
rcrb
push
nop
or
push
cmove
or
cmp
push
push
in
addb
cmp
sbb
mov
cmp
cli
in
mov
push
rorb
mov
ret
or
in
adc
scas
in
mov
push
push
in
sbb
inc
mov
scas
sbb
or
jno
testl
nop
adc
and
add
cmp
test
shrd
rcr
jb
push
pop
push
push
call
and
fistl
rorl
test
mov
mov
pop
daa
mulb
mov
rcll
dec
or
cmpb
jge
out
clc
sub
mov
mov
out
or
push
jge
in
arpl
and
pop
arpl
xor
pop
or
sbb
pop
lock
loopne
mov
cmp
addb
and
and
das
subl
adc
mov
mov
jbe
in
mov
int3
pop
cmp
fxch
rclb
sbb
jl
adc
pushf
xor
in
mov
fbstp
rolb
je
inc
in
fdivr
pushl
call
mov
inc
shr
movzbl
push
adc
push
ret
push
jo
ffreep
push
es
add
je
loope
cmpsl
jle
jbe
dec
testl
gs
nop
sbb
inc
add
push
mov
push
or
gs
or
jg
sub
jb
xor
int
out
push
loopne
pop
or
add
mov
push
sbb
xor
fisubs
push
jmp
scas
sti
jle
push
add
lahf
nop
lods
adc
push
push
mov
cmp
jg
mov
xchg
icebp
int
adc
jae
enter
cmpl
std
sbb
scas
mov
aad
js
pop
and
test
xor
fldt
xchg
jno
outsl
ds
lea
andl
outsb
sub
sbb
subl
call
mov
push
jne
inc
sub
loop
jo
push
ret
push
pop
jmp
mov
popa
xor
lods
push
cmp
mov
and
cmp
je
stos
mov
in
in
add
fcompl
shrb
cld
jne
fdivrl
push
push
test
adc
lock
sbb
or
xor
clc
add
inc
cmp
jae
mov
hlt
lea
movsb
jp
dec
ja
dec
add
sub
je
push
mov
je
add
mov
outsl
push
sub
fcomps
hlt
sub
imul
add
adcb
ret
jl
in
cmp
jg
push
push
push
inc
js
push
pop
cmp
inc
and
jbe
xlat
sar
into
popa
nop
add
mov
loopne
push
pop
xor
adc
call
lea
ljmp
cmp
loopne
sub
add
xor
jo
fnstcw
jb
mov
mov
roll
mov
mov
push
sub
inc
js
or
cli
xchg
adcb
out
ret
cmp
cmpsb
hlt
pop
pop
xor
inc
xchg
je
test
js
inc
dec
hlt
aaa
cmp
fidivrl
hlt
or
and
sub
pop
movb
dec
push
inc
inc
dec
rclb
jge
jmp
dec
inc
cmp
push
mov
insb
sbb
in
out
fdivs
pop
push
push
mov
sbb
xor
cwtl
dec
mov
insb
sbb
fdivp
add
pop
push
push
mov
idiv
cmp
jl
repz
jmp
or
and
pop
cmp
xlat
das
xor
ret
inc
mov
inc
or
cmp
jbe
mov
mov
test
pop
or
xchg
bound
xlat
push
sub
mov
push
stc
jns
lods
sarl
push
mov
push
and
add
or
jle
ret
je
mov
imul
lock
aaa
ljmp
xor
movsb
push
dec
fidivrl
sbb
or
fstps
pop
cmp
mov
or
add
jne
or
sbb
sub
jle
push
call
jl
xchg
jecxz
sti
test
dec
sbb
mov
mov
sbb
ret
je
push
pop
pop
and
xor
mov
mov
jae
jb
jmp
mov
ret
and
adc
mov
xchg
jmp
or
jbe
jb
mov
icebp
scas
fs
jne
cmp
je
jbe
movb
xor
lods
std
or
or
and
sbb
icebp
addb
cmp
test
addl
out
les
xlat
imul
daa
push
pop
and
setne
shrb
ret
jne
pop
jo
pop
in
xchg
cld
add
fiaddl
jne
adc
js,pt
aam
add
jo
jg
jo
prefetch
xchg
das
or
es
into
push
cmc
jmp
test
or
sbb
push
adc
add
sub
jp
shll
aad
mov
js
push
leave
inc
lret
jmp
call
bnd
rorl
cmp
jmp
mov
dec
adc
daa
sahf
jmp
cmp
push
test
mov
imul
cld
ficoms
sub
push
push
jmp
sbb
pop
sti
adc
rolb
pop
rolb
add
scas
sbb
inc
push
mov
lock
pop
nop
mov
sub
inc
mov
add
lcall
je
das
test
push
xchg
dec
jno
mov
loopne
enter
jl
add
insb
cld
cmp
ret
dec
push
add
push
test
lds
pop
push
dec
cld
rorb
push
pop
popf
mov
enter
add
std
push
movl
call
sub
dec
enter
movsb
xchg
xor
sub
imull
push
and
cmp
fld
mov
sahf
fsubs
sbb
pop
push
adc
pop
enter
xlat
jecxz
sbb
insb
icebp
inc
roll
shlb
in
shl
mov
cmp
jp
fdivs
push
adc
shr
pop
sbb
push
push
imul
sub
push
add
aas
lods
pusha
lods
xchg
dec
ret
outsl
dec
mov
adc
lods
sbbl
inc
mov
lds
sbb
mov
in
push
sub
les
push
ss
sub
push
in
insl
fldt
lods
sub
mov
xlat
and
enter
mov
and
aad
jo
es
sub
insb
xlat
push
jno
cmovl
pop
dec
scas
jecxz
dec
xchg
call
sbb
cmpsl
jb
sbb
fsubrs
enter
cld
jo
add
mov
dec
leave
inc
jo
fnstcw
into
or
adcl
jb
leave
mov
ficoml
imul
test
stos
out
or
mov
push
sbb
xchg
xor
pop
and
xlat
or
sbb
add
xchg
sub
stos
push
pop
cmpl
jmp
je
add
ljmp
in
adc
pop
inc
pop
je
dec
ds
fisttps
mov
cmpsl
leave
mov
push
enter
jecxz
and
pop
movl
cmpsb
and
push
sub
xlat
push
jae
sub
mov
jne
pop
add
jmp
sbbb
cld
sub
sub
adc
pusha
pop
and
in
jmp
or
mov
enter
test
sarl
stc
loope
lret
cmp
les
mov
and
push
xlat
cs
stos
lock
cmc
pop
je
xor
mov
sbb
and
clc
mov
jae
jg
adc
lret
adc
dec
add
dec
into
aam
jb
push
inc
xchg
imul
sub
push
mov
add
or
or
dec
clc
and
adc
rcrl
add
pop
pop
cmpsb
mov
mov
mov
in
sbb
add
or
jns
fdivs
daa
js
adc
mov
lea
addr16
or
xchg
andl
shll
mov
push
and
xlat
push
shll
and
sbb
xorb
ret
jne
je
cmp
mov
pop
push
fildll
sbb
cli
push
or
arpl
mov
xchg
js
adc
ja
das
in
cmpsl
outsb
stc
movups
and
test
add
inc
pop
sbb
cmp
mov
or
push
mov
push
cltd
pop
lock
mov
lcall
adc
sarb
roll
jno
add
push
xchg
jmp
loope
add
mov
lods
dec
add
xchg
dec
xor
pop
lods
push
xchg
pushf
push
jbe
fs
shr
cmp
cmp
mov
mov
add
push
pop
dec
je
mov
adc
in
jge
adc
sbb
popa
dec
ss
dec
cli
decb
jmp
mov
mov
mov
rcr
push
and
movsb
fwait
mov
add
pop
jne
out
popa
hlt
sbb
jmp
push
add
push
mov
xor
aas
adc
and
cld
pop
inc
add
mov
mov
inc
loopne
mov
add
push
mov
pop
addr16
mov
fmuls
mov
mov
dec
mov
loop
loopne
push
or
push
shl
std
lea
pop
pushl
js
sub
lea
mov
push
movsb
int3
sub
mov
rolb
push
shr
jmp
cmp
je
cmp
mov
imul
jmp
inc
sbb
leave
adc
out
out
xor
mov
sbb
fstpl
insl
fistpll
jmp
sbb
into
jle
push
and
jmp
and
jmp
push
mov
sbb
sti
mov
incl
into
pop
push
aaa
push
inc
push
push
iret
repz
jo
mov
into
repz
pushf
cmpsl
mov
mov
sbb
mov
mov
add
inc
scas
ja
push
and
sub
or
or
lea
adc
sub
fistps
aaa
sub
or
cmpl
fcmovne
rcrl
lahf
push
push
or
xchg
dec
stc
icebp
cs
pop
jge
cld
out
dec
jl
and
inc
push
mov
mov
pop
push
lea
push
lea
push
push
push
push
add
push
lea
enter
cmp
jnp
inc
cmpsb
add
dec
mov
inc
test
pop
add
aas
cltd
lahf
aam
popf
sbb
lea
lea
movl
orl
or
sbb
sbb
jmp
sbb
addr16
push
je
lea
test
sbb
push
or
pop
push
push
add
jl
inc
xor
add
popf
push
js
in
test
xor
je
push
inc
xchg
outsb
lods
fidivs
jno
jo
cmpsb
addl
mov
push
sbb
push
push
je
mov
xchg
mov
push
clc
pop
dec
notb
jmp
mov
pusha
and
mov
mov
movl
dec
add
pop
jne
mov
jne,pt
push
add
test
repnz
jae
adc
or
push
pause
xchg
imul
dec
jae
popf
mov
call
in
in
ret
mov
xchg
inc
or
ret
or
repz
mov
inc
xor
movsl
push
cmc
lds
push
mov
fcoms
aad
cmp
xor
push
push
cmp
xor
xor
pushf
jl
sub
in
and
adc
rolb
mov
lea
jl
lcall
es
mov
ret
or
sbb
xor
popa
mov
push
xchg
pop
mov
popa
aam
push
aam
das
in
in
sbb
cmp
inc
jl
jne
int3
push
mov
and
fcoml
bound
dec
fildl
cmp
rcr
shr
addl
or
fdivrl
fdivr
ret
mov
rcll
mov
push
mov
inc
scas
xor
adc
fdivr
and
adc
push
push
or
mov
js
notb
sub
je
lea
push
loopne
es
rolb
mov
jo
xchg
add
ds
mov
mov
aam
xlat
push
or
adc
ljmp
in
or
rcrb
shrb
les
inc
push
mov
lock
push
pop
pop
fmull
push
dec
lea
dec
push
push
aaa
dec
icebp
pop
cmpsb
and
jge
fidivrs
cmpsb
mov
sub
in
dec
jmp
sub
mov
dec
cmp
sub
insl
sti
int
in
cmp
push
mov
add
mov
test
inc
inc
dec
cmp
pop
daa
icebp
cltd
adc
xor
mov
iret
mov
mov
and
or
jecxz
or
les
mov
fcomps
in
dec
cmp
cmp
push
sbb
and
loopne
sbb
out
movsb
adc
jp
dec
pop
inc
leave
mov
lock
fisubl
mov
in
and
dec
fstp
cmpsb
imul
adcb
push
roll
inc
push
bound
lcall
neg
sbb
and
pop
in
mov
cmp
iret
leave
out
add
adc
out
jl
enter
pusha
nop
test
js
mov
push
inc
scas
daa
or
add
dec
sub
je
push
negb
adc
aaa
and
lods
out
push
ret
test
icebp
dec
or
addl
rolb
test
dec
pop
cmp
mov
mov
mov
or
mov
loop
dec
aaa
enter
cmpl
jne
pushl
ffree
subl
push
sbb
test
adc
xorl
jbe
outsl
cld
adc
aam
mov
adc
cmpsb
push
inc
inc
dec
insl
dec
adc
std
xchg
xor
push
inc
sub
sti
je
cmp
mov
ja
sti
sbb
jb
stc
ret
popl
or
pop
and
pop
inc
or
aad
xchg
or
popa
in
xchg
mov
jg
xor
sbb
sbb
pop
incl
jne
movb
jmp
cmp
jne
mov
adc
leave
push
loop
ret
cwtl
enter
jle
xor
adcb
repnz
mov
jp
cmp
pop
mov
mov
xor
ja
xchg
test
sbb
lock
pop
notl
and
test
cltd
jne
or
or
popf
sub
mov
mov
push
dec
or
adcb
bound
pop
fsubl
push
push
cmp
push
adc
fcoml
mov
nop
pop
cmp
iret
push
adc
enter
lods
add
test
lds
dec
out
mov
mov
ljmp
nop
add
xchg
scas
mov
mov
add
je
cmpsb
and
mov
cmp
add
dec
and
push
lea
and
mov
cmpb
jg
add
pop
push
call
push
and
push
push
lret
into
shr
mov
rcll
enter
xor
imul
mov
push
mov
xor
int
xor
clc
test
cmpb
xor
movsl
adc
pop
cmc
xlat
jg
inc
pusha
fmull
insb
decb
jno
out
push
add
mov
push
push
aaa
movsl
adc
outsb
mov
push
stos
sbb
out
mov
cli
loop
xor
es
ja
add
mov
mov
jno
insb
inc
cmp
xor
pop
into
popa
in
jne
icebp
in
push
shll
mov
adc
mov
stos
jo
adc
fmuls
sub
cli
repz
jo
dec
or
andb
cmc
jmp
jb
rclb
mov
adc
test
rorl
jbe
jo
xchg
xlat
push
adc
lea
aas
stc
icebp
cmpb
xor
je
push
pop
cmp
mov
negb
push
decl
repnz
push
jne
cs
sub
push
fnstsw
add
jmp
adc
sbb
push
iret
enter
insb
repz
mov
andl
push
fcoms
sbb
fidivrl
push
cli
or
push
pop
jo
popa
icebp
push
sub
cs
push
in
or
jmp
fs
popa
push
sbb
lods
push
push
cltd
sub
push
jecxz
je
push
fbld
jl
xlat
sbb
fadd
orl
addl
pop
fadds
xor
xchg
add
jae
adc
xchg
push
sbb
pop
push
sub
jo
mov
jl
mov
mov
cltd
mov
lea
push
div
sar
orl
movsb
push
xor
ret
pop
mov
pop
mov
jge
mov
shlb
mov
idiv
push
mov
mov
jecxz
test
mov
ret
xor
idiv
out
and
cs
testl
es
sti
fstpt
mov
add
push
int
dec
add
mov
cmpsl
jne
pusha
scas
mov
push
dec
xor
push
pop
jg
jge
add
sub
mov
adc
dec
fstpl
push
pop
push
mov
fdivr
sub
cmpb
jge
je
out
sbb
mov
dec
push
into
jp
xor
popa
xchg
movsl
daa
pusha
js
or
popa
jg
sub
scas
fs
or
xchg
arpl
mov
clc
jle
cmp
xor
sub
negl
pushf
movb
scas
xchg
jnp
aas
dec
lea
jl,pn
sbb
ds
xchg
sub
cmp
shrl
nop
or
out
jp
into
test
std
outsb
mov
fildl
mov
test
jns
fdivr
std
jnp
add
xor
xor
mov
fdivrp
dec
ja
and
dec
sub
mov
shr
clc
int3
mov
mov
inc
les
xorl
cmp
add
push
lods
mov
cmpb
pusha
clc
insl
je
into
clc
fidivl
jmp
push
xchg
jae
addb
mov
ret
pop
jne
pop
pop
movb
xor
dec
ljmp
cmp
mov
jo
leave
xchg
mov
mov
add
shr
hlt
lcall
cmc
push
aad
cld
inc
hlt
adc
lea
add
and
cmpsl
je
addr16
pusha
fdivs
push
gs
lds
imul
fadds
and
stos
scas
cmp
sbb
loopne
push
pop
stos
ljmp
pop
pop
mov
pop
leave
jecxz
dec
sub
inc
push
cmp
or
mov
sub
rcrl
and
cltd
add
cwtl
cmp
test
sbb
or
aam
xor
adc
int
sbb
loope
xorb
mov
dec
jns
and
cmp
ret
sbb
sti
push
rorb
mov
push
les
jmp
punpckhdq
leave
adc
jo
in
push
pop
xor
rolb
jo
pushf
scas
sbb
push
mov
lea
push
mov
push
ret
inc
mov
pop
in
fwait
dec
add
lea
pop
or
jno
sarl
and
push
push
adc
and
cmp
lahf
icebp
inc
and
pop
dec
enter
add
sub
pop
cmpsb
jle
add
add
cmp
sub
bound
xchg
incl
add
xchg
fsubrl
mov
inc
and
jl
nop
adc
fs
hlt
xchg
int3
push
push
pop
in
out
shll
pop
popf
dec
dec
add
repnz
stc
lock
nop
je
mov
pop
or
inc
cli
and
loop
leave
push
cmp
sti
and
pop
daa
sbb
mov
pop
mov
and
in
dec
or
cmc
stos
mov
andl
dec
cmp
sub
call
or
push
add
mov
shrb
test
clc
setb
test
dec
add
add
cmp
jo
pop
dec
mov
dec
adc
data16
pop
or
sbb
jl
aaa
adcb
jle
and
and
pop
pop
out
inc
mov
scas
sbb
add
push
xor
ret
icebp
dec
mov
jo
adc
mov
add
cmp
add
imul
adc
add
push
scas
and
int
xchg
popf
cmp
or
repz
mov
add
jo
xor
mov
in
pop
or
mov
pop
jmp
dec
sti
lret
sub
bound
mov
mov
sub
push
in
aas
jmp
test
stos
sbb
jl
pop
daa
ds
icebp
adc
dec
push
mov
lock
clc
add
pop
je
and
jp
or
loopne
jne
pop
adc
inc
cltd
mov
add
adc
xor
adc
push
add
push
mov
jle
add
jmp
add
out
mov
testl
mov
out
divl
push
push
and
test
adc
sub
call
add
cmc
xchg
cmpsb
add
push
out
and
inc
xchg
push
push
shlb
icebp
and
pop
push
in
sub
hlt
dec
dec
sahf
fmuls
sbb
cmp
mov
xor
xor
sbb
lret
lock
adc
aam
mov
hlt
add
mov
out
shrb
inc
mov
sbb
stos
shll
push
stos
xchg
lret
mov
push
nop
in
call
cmp
inc
and
mov
in
mov
push
iret
mov
lods
imul
pushf
adc
push
sbb
mov
push
push
mov
pusha
das
call
loopne
arpl
push
ret
cmp
sub
insl
test
and
jo
cmp
fsubrl
leave
imull
pop
push
push
outsl
sbb
add
xchg
jnp
imul
imul
cmc
nop
or
push
cmpsl
pop
enter
push
in
dec
cmpsl
adc
cmp
mov
decb
ficompl
jae
inc
out
popf
jae
cmp
sbb
xchg
pop
xor
sti
cmp
enter
jnp
adc
jne
mov
fstpl
push
out
dec
rcrl
push
lods
sbb
pushl
push
lret
push
cmpsl
loope
scas
mov
dec
nop
cmp
add
decl
iret
clc
and
test
je
shll
mov
je
stc
jge
neg
loop
dec
mov
jmp
dec
mov
sub
and
add
mov
jae
mov
add
jo
pusha
inc
xor
dec
push
add
sub
push
sbb
mov
sub
leave
js
cmp
dec
sti
dec
jge
mov
mov
mov
cmp
sbbb
lods
add
cmp
jle
call
push
dec
setle
push
or
cmp
std
fsubr
sbb
popf
fwait
inc
push
mov
out
je
xchg
int
inc
cs
sbb
aam
xor
mov
push
test
into
cmp
mov
lahf
add
pop
jo
sub
dec
clc
cmp
sete
adc
loope
add
insl
andb
je
sbb
adcl
push
test
sbb
shlb
insb
jp
jno
dec
movsb
pop
lds
mov
pusha
loop
sbb
and
pop
or
and
dec
mov
inc
movsl
repnz
dec
add
sbb
jno
pop
lea
das
arpl
push
push
rolb
lods
pop
lods
fwait
adcb
jae
add
lock
jne
or
sub
lea
add
add
mov
push
sbb
imul
mov
mov
movsb
bound
mov
jge
mov
sub
push
iret
ss
imul
or
and
cmp
inc
push
xchg
push
or
popa
fcmovnb
fwait
mov
sbb
or
jmp
das
adc
mov
sub
outsl
mov
nop
lret
pop
in
cmpsb
add
outsb
sbb
pop
pop
adc
rolb
pusha
fmull
je
in
adc
mov
or
lock
in
aaa
ret
in
repz
in
call
ja
fdiv
in
aaa
xor
cmpsb
and
push
jns
popf
push
fdivs
pop
pop
arpl
add
jbe
push
mov
dec
shrl
test
andl
testb
jmp
or
ja
sbb
je
adc
mov
mov
dec
push
adc
or
jg
sub
xchg
je
jecxz
aam
jb
xchg
or
inc
bound
in
push
mov
scas
sbb
dec
and
clc
clc
and
clc
inc
addl
dec
cmp
pop
xor
xor
hlt
add
dec
or
push
mov
in
dec
clc
pushl
xor
mov
mov
dec
call
jle
cmp
pop
clc
lahf
sub
in
jnp
adc
clc
pop
jmp
in
jmp
das
hlt
fwait
loopne
fnstsw
out
or
sti
add
into
push
push
add
push
outsl
or
sbb
rcll
clc
adc
xchg
nop
mov
mov
pop
mov
add
ds
inc
inc
in
jb
mov
fstpt
das
sub
jg
mov
iret
push
insb
cwtl
add
jb
nop
inc
xacquire
enter
inc
lahf
cmp
clc
xor
in
jp
xchg
mov
cmp
add
clc
sbb
sbb
daa
pop
push
mov
js
mov
adc
test
add
push
xor
xor
push
jg
loop
sbb
push
movzwl
adc
push
gs
cmc
rsqrtps
jo
lea
push
jl
inc
icebp
and
push
push
shll
fcmovb
lret
cmp
insb
jbe
jbe
pop
push
mov
call
jo
call
jo
pop
mov
gs
inc
fucomi
mov
sbb
adc
mulb
inc
push
push
fisttps
in
pop
popa
loopne
sbb
in
push
mov
movsb
add
adc
ss
xchg
movsb
xor
ret
inc
cmp
mov
adc
pop
mov
movsl
int3
ret
add
sbb
and
mov
or
add
cld
mov
jmp
adc
xor
mov
push
test
add
and
cmp
sbb
push
ss
mov
ja
add
jl
andl
mov
and
scas
movl
jle
or
pop
dec
push
es
jo
addr16
movl
dec
pop
jp
cmp
sub
xchg
push
sub
mov
add
hlt
push
mov
cltd
inc
xchg
arpl
dec
xor
mov
push
cmp
cmpsb
rolb
cltd
push
push
cmp
inc
sbbl
and
xchg
pop
outsb
jns
popf
lcall
push
mov
sbb
mov
or
popa
xchg
mov
arpl
pusha
dec
loopne
or
push
push
loopne
mov
mov
jb
icebp
push
jg
dec
fs
add
cli
cs
aam
jecxz
add
add
sbb
sahf
idivb
mov
pop
xchg
sub
aad
inc
sbb
shrl
add
roll
cwtl
iret
push
pusha
sub
add
dec
fistl
sbb
jecxz
xchg
adc
sbb
jnp
aaa
adc
mov
pop
fidivrl
xor
jns
cmp
jmp
mov
xchg
sub
mov
xor
mov
adc
sub
pop
push
lcall
sub
adc
pop
test
xlat
jl,pn
jmp
add
or
lock
jg
sub
loopne
leave
cmp
loopne
fwait
add
cmp
shlb
cvtdq2ps
arpl
sub
sbb
add
pop
and
test
or
inc
mov
pop
mov
jmp
inc
sahf
mov
or
cwtl
movl
mov
lea
cmpsl
add
mov
inc
adc
lret
shll
sbb
mov
mov
dec
add
nop
add
push
repz
scas
or
add
lea
push
daa
cmp
mov
or
out
jp
orl
pop
or
cld
mov
fdivs
sub
add
add
adc
inc
or
lcall
mov
sub
mov
cwtl
push
or
xchg
xor
dec
js
sub
lea
test
pop
adc
mov
faddl
dec
cwtl
adc
xchg
push
add
scas
push
add
mov
sbb
cld
dec
js
lock
mov
mov
adc
mov
pushf
push
setne
dec
xchg
cmpb
add
lahf
pop
int
lret
fs
push
push
jbe
push
jne
and
cltd
sub
xchg
mov
jg
sbbb
mov
fcoml
pop
push
and
loop
leave
lea
or
or
sbb
add
pop
movsl
and
ret
mull
pop
imul
stos
stos
add
xchg
ja
lods
and
inc
xor
push
or
loopne
rorl
jg
notb
sub
sbb
sti
scas
pop
stos
push
add
mov
imul
xor
push
cmp
loopne
ret
or
dec
and
sbb
test
repz
in
sbb
dec
cmp
cmc
push
mov
and
dec
jmp
orl
sbb
dec
pop
int3
imul
mov
call
scas
das
mov
gs
in
aas
mov
call
cmp
jmp
scas
mov
outsl
jns
sbb
lret
sub
xor
mov
pop
or
jmp
push
shr
mov
adc
loope
pusha
inc
xchg
fstpt
mov
lret
or
repz
add
fildl
pop
pop
cltd
xchg
mov
push
pushf
and
inc
js
mov
jns
dec
add
inc
jb
pop
mov
popf
lret
fisubrs
add
jmp
fcoms
push
inc
mov
imul
dec
push
loope
dec
or
push
fisttpll
outsb
pop
xor
push
sbb
mov
add
sub
aad
dec
or
pop
enter
or
xchg
or
push
and
dec
cmp
les
add
divl
mov
daa
fwait
xor
xchg
inc
int
subb
stc
in
mov
inc
or
xor
add
pop
fidivs
fimuls
mov
adc
outsl
jbe
add
mov
ss
jo
xchg
mov
mov
jl
outsb
int3
lods
xor
cmp
adc
fiadds
push
jp
add
ror
push
mov
orb
leave
sahf
xchg
rorl
sahf
lods
rolb
xchg
mov
push
and
push
push
repnz
mov
loopne
out
dec
jae
pop
sbb
test
test
faddp
add
fs
data16
xchg
or
push
lock
dec
push
sub
xchg
adc
lock
xchg
ret
push
add
sti
addb
dec
imul
aas
movsb
fdivrs
fucomip
add
cmp
push
sbb
dec
adc
xchg
mov
fdivr
inc
insl
movsl
jbe
and
lds
sbb
mov
xchg
xchg
pushfw
mov
push
add
lea
fs
mov
mov
lea
push
mov
call
in
push
arpl
add
clc
aam
jnp
aaa
pop
mov
mov
lock
mov
xchg
je
je
ds
mov
inc
mov
sbb
xor
fdivr
insl
jo
xchg
sub
xchg
mov
mov
insb
shll
jbe
js
mov
test
adc
and
fs
inc
adc
in
xchg
dec
mov
jnp
dec
jbe
mov
adc
inc
insb
push
mov
mov
xchg
inc
out
cwtl
das
ss
in
inc
aas
das
aam
gs
popl
cmp
dec
pop
lret
jmp
xchg
jne
jo
hlt
nop
push
add
repnz
add
lods
mov
push
push
push
sarl
sbb
pop
ja
addl
data16
add
dec
loop
negb
out
lret
test
mov
fnsave
ljmp
aaa
sbb
rolb
add
daa
nop
jnp
inc
lret
repz
jns
cmpsl
add
lods
pandn
push
arpl
xor
inc
and
fcmove
pop
push
gs
xchg
fiaddl
push
rolb
cmpsl
mov
push
lock
les
sldt
xchg
out
pusha
imul
popf
xchg
xor
mov
shl
add
dec
loopne
pushf
cmpsl
or
ficoms
js
jecxz
mov
cmpsl
cmc
adc
sub
nop
push
notb
jmp
aaa
inc
pop
push
or
add
push
push
stos
andb
mov
roll
cmp
xorl
push
mov
adc
add
ret
or
xchg
aam
dec
rcrl
add
xlat
push
jecxz
mov
add
jae
jno
loopne
sbb
mov
insb
fxch
mov
loopne
sahf
xchg
movsl
popf
add
movl
push
mov
jne
pop
loope
or
loopne
jge
orb
ja
sub
push
adc
cmpsb
sub
daa
pop
sbb
pop
idivl
xchg
fldenv
mov
inc
and
cmp
shl
js
test
imul
sub
imul
rcll
mov
and
je
adc
aas
sub
jmp
push
lods
jb
add
popa
push
leave
inc
xlat
sbb
push
cmp
inc
leave
push
dec
xor
icebp
sbb
sbb
stc
xor
enter
or
rcrb
xlat
pop
ret
bound
cmpl
mov
push
pop
cmp
je
cwtl
push
in
mov
xor
pop
pop
adc
or
sbb
cmpsl
adcb
cwtl
dec
xor
rorb
sti
push
xor
jns
push
pop
andb
lea
push
push
push
add
fiaddl
and
lea
cmp
jge
inc
and
add
add
add
cmp
mov
and
jge
mov
stos
in
sbb
jne
xchg
push
inc
add
rclb
mov
test
fsubrl
mov
sahf
int3
sub
jl
pusha
and
mov
mov
or
mov
sbbl
sub
loopne
sub
dec
psubusb
aas
aam
outsb
push
or
test
addr16
xor
xlat
jns,pn
icebp
inc
fcmovb
and
sbb
push
xchg
ret
jo
insl
mov
int3
xor
dec
push
sbb
arpl
ja
push
fadd
scas
ja
rcrb
push
xor
sub
mov
insl
faddl
or
pop
rorb
rol
dec
mov
lcall
adc
add
popf
call
add
repz
mov
mov
add
sahf
add
es
imul
sub
add
xchg
fldl
mov
stos
mov
fldl
add
add
gs
cmp
fistpll
add
mov
fdivl
mov
ljmp
leave
adc
pop
enter
sub
jl
lock
mov
push
mov
addl
pushf
popa
les
push
push
lea
pop
and
fcomps
push
incl
inc
in
push
aas
rorb
cmpb
out
dec
or
je
push
cwtl
lock
mov
xchg
cmp
xor
dec
jae
mov
fsubs
shll
inc
movsb
xor
or
pop
or
inc
pop
fdivrs
sbb
std
or
cmp
ljmp
lock
xchg
lock
dec
sub
or
les
test
and
jae
cli
fisttpl
cwtl
loope
cmpl
scas
test
mov
lods
push
stos
xchg
test
ret
push
cmp
ficoml
pop
push
cld
je
or
xchg
inc
daa
push
inc
in
sti
pushw
mov
roll
icebp
mov
xorl
adcb
inc
xor
test
add
mov
xchg
pusha
cmpb
pop
push
mov
rolb
bound
adc
xchg
add
test
out
mov
pop
callw
push
sub
in
mov
mov
cmp
loopne
scas
and
jl
xchg
pop
in
lret
hlt
inc
out
pusha
add
cltd
popf
outsl
mov
ret
add
inc
mov
jl
mov
sub
push
arpl
rorl
js
push
loopne
mov
add
pop
add
movsl
mov
rol
push
xchg
test
ret
popa
sbb
std
mov
sub
sbbb
jmp
push
push
iret
scas
and
xor
setle
fnstenv
mov
pusha
rolb
fcoms
push
add
inc
test
xchg
mov
or
mov
sbb
sub
out
or
stos
sub
bound
mov
or
xor
push
lea
cwtl
push
xor
pop
sub
push
pop
fdivr
cmp
stos
mov
mov
or
dec
in
subb
push
int3
push
inc
inc
pop
adc
pop
mov
rcrl
cltd
xchg
loopne
mov
sub
enter
pop
or
sbb
call
ficoms
push
mov
gs
lock
and
imul
hlt
lea
pop
push
xor
add
sub
sti
push
rorb
jmp
adc
cwtl
sbb
inc
pop
xor
jnp
or
pop
pop
adc
rolb
fs
dec
or
leave
test
adc
add
or
mov
ret
scas
fsubrs
ja
mov
cmpb
addr16
popf
cmpsb
dec
ret
push
mov
js
dec
sub
clc
je
push
add
xchg
push
sub
push
add
adc
push
inc
push
xchg
mov
icebp
dec
fwait
push
pmulhuw
fadd
xlat
xor
xor
fcmovnu
fwait
jle
dec
outsl
xchg
lret
cmp
jl
test
mov
int3
xor
sarl
pop
sub
lcall
xor
cmp
jne
lret
out
xor
ret
cmp
push
push
shll
fcomps
out
push
or
cmp
je
sub
out
jo
push
push
stc
push
popf
fcomi
loopne
pushf
fistpll
add
flds
adc
push
sar
repz
or
xchg
and
sbb
bound
in
pop
adc
push
mov
lahf
in
xor
das
in
sub
jo
clc
fisttps
js
dec
or
in
xor
mov
out
xorl
jge
mov
mov
pop
call
push
cwtl
pop
imul
ja
adcl
and
pop
mov
add
ret
fidivrl
lcall
loope
out
inc
add
sarl
or
orb
dec
mov
popa
adc
add
cmp
outsl
adc
dec
or
mov
icebp
rorl
fwait
xor
int
jg
cmp
inc
and
cmp
je
sbb
jbe
outsb
clc
pop
mov
mov
fbstp
mov
mov
lods
mov
push
das
mov
push
add
inc
or
pop
pushl
test
mov
pop
ljmp
push
mov
push
dec
or
push
sbb
xorb
push
sub
dec
and
cmpl
cmpsb
dec
or
xchg
push
or
rclb
or
fmul
pop
movsb
mov
add
loopne
mov
and
mov
dec
add
sbb
aad
in
scas
cltd
or
jne
loope
fcoms
popa
adc
test
mov
dec
xchg
inc
cli
mov
add
js
or
xchg
icebp
mov
adc
leave
je
mul
seto
push
out
add
enter
imul
jmp
jnp
cmpsl
push
cmp
fmull
pop
lock
sub
test
shlb
cmp
shl
cltd
sub
and
cmpsb
inc
cs
dec
inc
add
inc
sbb
dec
pop
popa
sub
cmp
clc
fldl
mov
adc
icebp
pusha
cmpsl
sbb
and
data16
cs
inc
daa
or
add
inc
adc
in
pop
dec
test
mov
mov
sbb
test
pop
sub
lahf
add
xor
xchg
sbb
cmp
push
fdivrl
push
push
and
leave
add
nop
popf
push
sbb
push
in
pop
mov
test
lds
add
push
pop
sbb
cmp
je
sbbb
mov
xor
pushf
cmp
je
pop
xor
xchg
and
cmp
jne
ds
adc
dec
cmp
add
pop
mov
sub
lock
subl
sub
mov
mov
pushf
xchg
lods
xchg
faddp
jmp
jl
ret
dec
mov
test
je
cli
jmp
mov
inc
jno
lock
inc
cmp
jae
add
ss
mov
inc
xor
sbb
pop
jbe
mov
sub
push
and
sbb
jl
adcb
test
push
push
ss
mov
inc
jmp
stc
arpl
mov
test
cmp
bound
shl
push
std
cmp
mov
shlb
adc
mov
xchg
pop
or
push
loop
or
or
outsb
push
movsl
or
xlat
dec
enter
adc
or
ss
push
pop
cmpl
cmp
add
ja
lea
cld
ret
rorl
cmp
mov
adc
lea
jmp
push
jle
addl
mov
pusha
jo
add
mov
pop
cmp
out
lods
dec
or
push
inc
push
clc
dec
or
and
popl
rcrb
adc
inc
or
fnstsw
mov
or
mov
push
mov
and
inc
sbb
jg
push
imul
sub
adc
push
push
or
and
lock
insl
aad
push
cmp
mov
fwait
or
mov
mov
adc
add
and
hlt
add
pop
mov
sub
xchg
add
mov
mov
push
movsl
or
add
cld
adc
push
mov
jl
push
sbb
xlat
inc
orl
stos
xor
int
sti
xchg
jmp
or
mov
ret
and
sbb
dec
test
js
sbb
inc
out
sbbl
adcb
mov
push
test
sub
out
push
clc
aam
xchg
sub
push
push
out
sub
sub
adc
movsl
xor
test
test
pop
ret
call
mov
add
and
add
rol
inc
jp
aam
xor
push
bound
in
cmpsl
mov
dec
mov
rolb
push
jbe
fmuls
popf
ficoml
add
sub
or
sbb
jnp
out
jne
test
mov
push
push
lods
or
push
add
mov
sub
ror
pop
inc
xor
cmpsb
add
popf
cmp
add
adc
insb
lods
sub
add
ljmp
adc
pop
ret
or
jmp
in
and
mov
and
outsl
xchg
popf
dec
pop
mov
mov
push
adc
mov
jbe
push
orb
xchg
xchg
movsl
int3
jbe
and
jnp
jno
int3
ret
lods
mov
pop
add
jmp
jg
mov
shlb
xchg
add
sub
lock
add
loope
and
movl
and
add
mov
or
cmp
clc
and
inc
adc
imulb
mov
mov
pop
and
mov
in
pop
add
pusha
or
aam
mov
int
add
cwtl
fmull
sbb
je
outsl
test
sbb
aam
mov
icebp
xor
enter
sub
lahf
mov
push
add
imul
movl
jg
pop
inc
or
mov
push
or
xchg
pop
sub
sbb
enter
pop
cs
in
dec
lahf
or
mov
fmull
sub
into
addr16
jmp
inc
push
scas
leave
ret
cmp
mov
mov
sbb
mov
or
test
mov
cmp
js
mov
and
ljmp
pop
je
orl
push
mov
test
dec
rcll
sub
movsl
or
push
mov
jp
jle
mov
sbb
sbb
sub
mov
jnp
mov
ljmp
push
addb
add
dec
sub
movsb
repnz
popf
dec
fisttpl
push
push
add
inc
rcll
sub
orl
shll
loope
pop
inc
mov
insl
lods
mov
pop
and
mov
pop
popf
xchg
or
mov
xchg
adc
cld
lea
push
fnstcw
sub
sub
or
sbbl
sub
daa
sub
xor
add
cmp
adc
rcrb
dec
outsb
adc
clc
pop
fisttps
cmp
jbe
push
pop
cmp
inc
ret
pop
addl
mov
mov
test
mov
iret
mov
adc
mov
pop
xchg
out
inc
jo
arpl
out
cmc
mov
repz
in
cmp
push
push
sti
add
lea
pop
insb
lahf
cmc
and
fsub
in
rorb
push
xlat
sbb
into
pop
push
cltd
fsub
call
pop
push
daa
pop
leave
lea
cmpsl
adc
mov
in
push
loopne
hlt
enter
clc
adc
aad
push
iret
enter
push
dec
outsb
inc
les
sub
sbb
add
cmp
cmp
jp
sbb
adc
and
jae
mov
push
push
pop
inc
xor
test
adc
and
int
sbb
mov
jmp
mov
jecxz
aaa
push
sahf
js
push
rolb
jp
ret
loopne
mov
loop
push
in
or
popf
add
mov
sub
lods
mov
adc
sbb
daa
aaa
inc
inc
mov
jb
mov
loop
mov
bound
xor
cmpl
and
inc
or
aad
pop
andb
push
stc
pop
xor
pop
and
lahf
adc
and
sub
sbb
fwait
addl
pushf
out
sbb
jg
push
cs
push
pop
fwait
aas
pop
pop
push
movsb
loopne
cmp
in
pop
xor
fimuls
and
sbb
sbb
in
sub
test
ljmp
lahf
push
fdivr
faddp
nop
mov
mov
js
push
ret
fisttpl
test
pop
inc
inc
das
add
mov
pop
sbb
mov
pop
hlt
push
dec
aad
mov
rolb
mov
xchg
and
outsb
cmpb
and
std
lods
es
cmp
cmpsl
and
xor
mov
dec
ret
dec
adc
into
and
cmp
scas
mov
stos
dec
or
rolb
mov
call
clc
adc
das
pushl
mov
sub
test
hlt
mov
adc
add
mov
push
push
adc
sbb
xchg
xchg
enter
mov
sbb
or
test
pop
lods
sbb
add
cmp
jl
test
jno
xor
xchg
sub
test
inc
mov
addr16
jmp
adc
pop
xchg
pop
ja
xchg
fiaddl
popa
xor
push
in
push
push
mov
in
test
push
fcoml
scas
and
test
pop
dec
push
std
lods
mov
mov
dec
sar
js
loop
out
push
push
push
in
mov
mov
lret
hlt
cwtl
or
or
add
xlat
cltd
or
mov
pop
mov
cs
push
add
push
insl
inc
test
mov
dec
hlt
add
push
imul
ret
jo
shll
ss
xor
dec
lcall
jno
orl
stos
nop
or
or
mov
sbb
imul
push
inc
dec
jmp
mov
lods
test
out
dec
push
sub
adc
jmp
jae
loopne
movsl
pusha
jo
inc
insb
pop
mov
and
loopne
fmull
in
movb
add
mov
inc
pop
ret
sbb
cmp
inc
push
popf
idivb
loopne
mov
xchg
mov
add
add
cmpsl
adc
in
test
add
pop
sarb
ljmp
inc
or
inc
jno
mov
mov
xchg
inc
or
or
jg
loope
mov
jne
pop
xchg
je
popa
push
push
lock
xchg
fstpt
mov
or
jbe
ljmp
xor
jle
xor
in
sarb
test
fmuls
rcrb
jnp
jl
rorb
pop
cmp
inc
mov
gs
insl
test
push
imul
inc
xchg
mov
push
icebp
adc
enter
out
jle
sbb
add
xor
cltd
xor
sbb
mov
loope
shll
add
cltd
inc
sbb
adc
fists
clc
cld
outsl
mov
clc
inc
push
sahf
sbb
fadds
or
sbb
mov
cmpsb
adc
fmuls
xchg
loope
shl
or
mov
xlat
shlb
cli
inc
lock
daa
in
add
add
xchg
push
popl
or
repz
neg
test
inc
or
cld
sub
mov
mov
xchg
cmp
sbb
xor
stos
jle
push
into
dec
xor
inc
incl
scas
es
add
xchg
push
js
inc
push
pushf
pusha
out
or
mov
mov
cmp
js
lds
and
xchg
rcrl
repnz
sbb
adc
fucomip
in
and
daa
and
jno
or
outsb
adc
icebp
xchg
clc
aas
dec
add
add
xorl
xor
add
or
imul
dec
sbb
or
sahf
xchg
cmp
sub
lahf
sbb
cmpb
pop
or
loope
push
adc
cld
mov
out
jnp
orl
push
push
lock
push
jp
inc
je
out
xor
or
push
outsl
adc
cmp
or
shlb
add
dec
loope
add
mov
or
dec
dec
rorb
xor
xchg
cmpb
out
lods
jnp
dec
pop
jne
push
mov
mov
push
inc
or
add
rorl
scas
and
imul
push
data16
fstpl
adc
cmp
jbe
sbb
inc
outsl
aas
sbb
sbb
adc
mov
xchg
stc
jae
cmp
jb
cmp
dec
mov
dec
adc
rcrb
mov
add
incl
cmp
lcall
adc
inc
je
ret
add
cmpsb
sbb
addb
dec
call
enter
andb
fildl
insb
pushf
add
pushf
inc
and
inc
xchg
push
cmp
dec
pop
or
push
push
or
out
add
push
aas
adc
push
push
fdivrs
aaa
push
addl
add
sbb
mov
adc
push
aas
ret
aam
out
and
add
shlb
push
test
sbb
jmp
test
mov
pop
xchg
mov
imul
js
inc
sub
fld
mov
pop
faddl
adc
pusha
dec
xlat
push
loopne
jmp
dec
incb
lods
dec
insb
push
push
push
lea
sbb
ja
arpl
push
jbe
lea
jmp
adc
adc
sub
stos
pop
add
pop
mov
adc
in
insl
lea
push
test
sub
js
pop
push
pop
mov
adc
add
sbb
or
test
incl
adc
dec
fdiv
scas
sub
cmp
xchg
pusha
lret
push
sbb
add
or
mov
rol
adc
sbb
sbb
mov
pop
push
nop
ljmp
adc
pop
imul
mov
mov
jbe
je
fnsave
and
sbb
lods
add
dec
mov
sbb
push
inc
sahf
call
ret
dec
cmp
sbb
jle
sbb
adc
pushl
add
dec
jmp
or
orb
dec
inc
cmpsb
pop
fbld
push
cmp
sbb
loop
jnp
sbb
dec
and
rolb
and
pusha
cmpsb
dec
call
cwtl
jle
inc
or
push
cmp
pusha
xchg
popa
movsl
icebp
sub
js
mov
jge
sbbl
or
mov
dec
add
inc
add
fldl
insb
sub
dec
xchg
shlb
sbb
xlat
and
bound
add
cmp
popa
sbb
jg
cmp
dec
in
jno
lea
lea
mov
mov
or
mov
imul
imul
mov
daa
fimuls
mov
pop
adc
push
lods
lret
int3
cs
adc
mov
loopne
mov
adc
and
mov
and
dec
dec
adcl
xor
or
test
sub
add
bound
movsl
sub
sbb
mov
sarb
pusha
and
sub
jo
cmc
and
mov
popf
jmp
in
popf
fiadds
mov
out
cmp
je
rcrb
int
daa
nop
inc
andb
outsb
mov
mov
push
xor
out
loopne
repnz
loope
sub
mov
ret
outsb
xchg
lret
adc
inc
idivb
je
sub
mov
div
aas
mov
cmp
cmp
jb
xchg
lret
mov
or
mov
rclb
add
xchg
add
mov
mov
orb
or
xor
xchg
cwtl
por
pop
add
fwait
mov
add
jge
pushf
mov
cwtl
add
xor
rclb
sarb
andl
ja
jmp
aam
sub
pop
call
orl
sub
incl
aam
aas
push
xchg
xor
dec
push
je
dec
jne
cmp
lea
mov
or
xor
adc
mov
and
das
lahf
xor
pop
jmp
add
insl
inc
leave
mov
in
int3
pop
cli
inc
and
es
sbb
mov
adc
add
rorb
aad
andl
cld
nop
dec
lret
movl
outsb
daa
xor
outsb
jg
gs
mov
lea
cli
jb
adc
jo
dec
push
inc
jle
xchg
ret
mov
adc
decb
mov
inc
arpl
loopne
ja
xchg
pop
sbb
insl
je
movsb
mov
mov
push
lret
mov
inc
adc
test
xor
aam
cmp
dec
fdiv
xor
adc
or
dec
or
sti
push
push
dec
lods
mov
dec
inc
ret
lcall
into
filds
xchg
push
frstor
push
ret
push
and
lahf
loopne
cld
xor
ds
je
iret
sub
cmp
mov
xor
cmp
or
subb
mov
loop
test
jg
sub
in
shll
lea
push
adc
inc
cmp
push
adc
movntq
pop
cmp
push
jne
cmp
jbe
sub
add
popa
enter
inc
sub
pop
into
jmp
sbb
in
sub
xor
clc
nop
mov
imul
roll
mov
mov
insl
clc
jb
fists
loopew
adc
ret
test
es
push
pop
or
or
xor
xchg
ret
sahf
or
jno
push
imulb
sbb
loopne
push
push
lods
adc
pop
aaa
push
fsubs
and
rcll
cmc
shr
and
je,pn
aaa
js
mov
orl
rcll
outsb
adc
sbb
mov
mov
stos
xchg
adc
ret
pop
pop
dec
push
jmp
je
fs
fcompl
test
sbb
fs
cmpsl
sbb
popa
add
xor
push
icebp
in
xorb
inc
cmp
cmp
mov
mov
xchg
dec
or
pusha
pop
ljmp
adc
mov
sbb
push
js
in
mov
mov
push
mov
adc
jno
divb
adc
aad
sbb
idivl
push
mov
fimuls
stos
icebp
inc
inc
cli
mov
cmp
xor
mov
jnp
adc
push
lds
sbb
stos
or
lods
fucomp
jo
add
inc
adc
push
and
sub
xor
adc
les
sbb
popa
mov
cwtl
sbb
scas
stc
adc
js
lcall
push
mov
pop
popa
and
adc
push
das
push
es
ss
mov
adc
lods
loopne
cmp
nop
sbb
sbb
cmp
jge
sub
mov
or
mov
or
adc
add
mov
in
ret
test
inc
pop
gs
xor
sbb
dec
add
or
test
fmuls
mov
lds
adc
dec
add
mov
rol
pusha
jo
enter
insb
in
mov
mov
lea
call
in
sbb
popa
xor
popf
mov
faddl
sbb
add
jbe
xlat
sub
or
arpl
jne
push
scas
mov
mov
push
fistpl
or
out
les
add
out
loop
out
in
xchg
add
imul
cwtl
mov
xchg
cmpb
insb
hlt
cmp
je
push
pop
imul
pop
add
xchg
and
mov
shrl
or
dec
push
xchg
movsb
fdivrl
mov
push
inc
or
ret
arpl
or
xchg
ret
and
cmp
lods
mov
mov
and
and
xor
lret
sti
sub
push
lods
and
mov
jae
into
and
rorl
ljmp
lret
push
or
push
add
lahf
jne
div
mov
cs
push
ss
add
mov
rorl
mov
das
jl
fisubl
mov
mov
xchg
cltd
daa
xchg
cltd
and
in
push
mov
xchg
sti
test
cmpsb
mov
fs
subl
cmc
int3
push
faddl
test
test
sbb
mov
dec
je
mov
jno
jae
sbb
add
inc
enter
jns
mov
test
cmp
or
inc
orb
jmp
and
dec
cmp
or
sbb
push
cwtl
mov
pop
push
test
notb
sbb
mov
and
loopne
inc
mov
sub
mov
aas
mov
in
cmp
sbb
and
sbb
cld
pop
or
shrb
push
dec
xor
in
pop
push
push
and
ja
pop
mov
xlat
cmp
daa
xchg
pop
mov
fistpl
lds
daa
iret
mov
xor
ds
cmp
into
test
es
adc
sbb
dec
mov
push
mov
enter
sub
movsl
loope
cmp
push
xchg
jg,pt
popf
or
aas
mov
mov
dec
cwtl
stos
ds
xchg
mov
mov
push
lret
js
mov
push
sbb
mov
mov
jp
fstl
pop
and
and
aas
mov
cmp
jo
dec
pop
xor
push
add
add
test
pop
cmp
mov
lret
push
out
cmp
jge
dec
stos
cs
movsb
jp
cmpsb
dec
push
mov
fsts
insl
out
sbb
mov
push
dec
and
sbb
cmp
sbb
lods
sarl
leave
aaa
inc
in
push
inc
xor
jl
sub
push
pusha
leave
xchg
jl
mov
mov
pop
xchg
fistl
push
mov
jecxz
mov
add
jecxz
dec
fwait
push
xor
movsl
sbbl
adc
xchg
jmp
or
adc
andb
add
inc
js
outsl
xchg
pop
xchg
and
insl
mov
fistps
out
cmpsl
or
mov
je
mov
out
sub
mov
and
sbb
adc
push
adc
xor
or
dec
pop
add
pop
jb
mov
pop
add
std
aas
xchg
add
pop
test
or
push
or
push
sti
push
cmp
and
and
ja
fs
sbb
mov
sbb
push
imul
or
sub
cltd
mov
and
and
imul
xor
xor
lods
push
mov
or
scas
xchg
pop
xchg
mov
xchg
add
js
pop
sub
xor
xlat
lea
xchg
xlat
jge
or
aaa
sub
push
add
inc
cld
pop
mov
out
pop
cltd
adcl
jo
cmp
xchg
xchg
add
sbb
sub
push
sbb
pop
mov
cmp
inc
pop
out
int3
mov
xchg
pop
dec
es
das
adc
add
lods
xor
xor
xorb
sbb
inc
mov
mov
xor
and
and
stos
rorl
popf
add
loopne
popf
adc
enter
sbb
pushf
or
pushf
inc
aaa
or
jmp
jnp
arpl
je
pop
es
adc
mov
jae
adc
jno
jge
loop
jno
stos
or
movsb
jb
mov
shll
xlat
call
xchg
inc
dec
dec
cmp
jecxz
cwtl
movsb
xchg
cwtl
outsl
jne
lea
lock
xchg
cmp
inc
push
andb
push
xor
add
inc
pop
mov
inc
divl
or
icebp
out
stos
shrb
pop
outsl
mov
cs
sub
andb
jg
cmp
mov
rcll
add
ja
push
adc
sub
inc
sub
mov
mov
xor
lret
inc
popf
pop
lea
orl
add
and
cmp
push
adc
cmp
or
xor
cli
pop
inc
push
and
sbb
pushf
jge
shrl
imul
shr
mov
out
cltd
pop
loop
push
mov
jbe
pop
and
rorb
or
cmp
xor
push
sub
roll
mov
clc
pop
enter
add
add
pop
mov
in
mov
out
icebp
dec
adc
mov
insl
ret
mov
nop
aaa
sub
fdivr
push
push
sub
leave
out
xchg
mov
or
mov
jno
imul
mov
sub
rolb
fildl
not
mov
xchg
or
cltd
adc
xchg
ud0
addl
pop
popf
pop
xlat
lods
sbb
sahf
fwait
lret
jp
cmp
xor
sbb
dec
or
mov
xor
jl
push
mov
jo
push
push
xchg
rcr
add
mov
jne
aad
cmp
ja
push
inc
dec
add
jo
or
mov
fldenv
and
sarb
or
cmp
push
mull
icebp
push
dec
cltd
cwtl
in
jo
dec
movsl
pop
sub
lock
pop
sbb
lret
popa
fs
popf
push
popa
mov
fistl
xlat
ja
sub
in
divb
mov
jmp
fnsave
adc
adc
addl
fcomps
pop
push
pop
jge
call
add
cmc
xorl
in
pop
int3
push
cmpsb
or
jo
cmpsw
ss
adc
mov
jae
xchg
pop
inc
cmpsl
mov
in
pop
call
jno
lret
mov
push
xor
cmp
sub
test
out
fsub
loop
cmp
mov
iret
cmp
stos
jno
push
dec
push
xchg
mov
std
add
jp
sub
cmpsl
jno
pop
sti
sbb
in
pusha
fcoms
fidivrl
mov
pop
inc
sub
pop
or
add
and
push
inc
push
and
sbb
in
pop
and
fcoms
nop
sbb
xor
and
mov
fcoms
inc
and
and
xor
fdivs
mov
and
call
lds
je
negl
push
xchg
daa
push
jno
jp
sub
daa
stc
imul
and
sub
sub
pop
sub
inc
or
inc
leave
adc
test
or
sbb
out
pop
push
les
add
fnstsw
push
jnp
negl
mov
push
push
sbb
pop
arpl
dec
adc
add
or
sbbl
movl
int
outsl
jne
mov
and
mov
jle
dec
mov
mov
and
xor
imul
rcll
pop
cmp
dec
add
or
inc
or
pusha
lea
fildll
sarb
and
inc
lcall
cltd
nop
sbb
adc
cwtl
mov
or
daa
xchg
sub
testl
xchg
dec
adc
or
ret
sbb
adc
and
add
add
and
dec
clc
movsb
push
inc
in
out
inc
add
je
iret
jo
inc
or
and
inc
or
cmp
int3
shrb
ret
js
lock
js
lea
popf
push
rclb
sub
scas
shrb
and
mov
daa
adc
rcrb
daa
or
sub
pop
pusha
loopne
add
push
jbe
sbb
into
faddl
push
or
jl
outsb
stc
fisubrl
mov
pop
adc
mov
loopne
dec
jne
test
xchg
push
out
or
aam
xor
test
out
mov
push
ja
imul
sub
adcl
inc
adc
lock
or
scas
xchg
scas
pop
pusha
push
pop
push
xor
loopne
push
dec
pop
or
in
and
repnz
adc
xor
les
rorb
cmp
xor
jge
sbb
test
or
lods
rcll
or
lock
push
dec
and
pop
lock
mov
mov
adc
or
loopne
mov
add
cmpsb
stos
sub
fs
add
je
imul
push
int3
bswap
push
icebp
mov
bound
mov
sub
repnz
add
push
adc
lea
push
mov
nop
sbb
and
fld
movsl
jge
popa
call
pusha
xor
dec
ffree
in
imul
cmp
shll
push
push
mov
sub
sbb
or
inc
inc
sub
rol
push
adc
add
enter
imul
dec
cmp
lea
jo
lahf
mov
and
pop
call
adc
mul
dec
push
pusha
cmp
stos
ficoms
and
decb
jge
add
faddp
cmpsl
adc
sbb
addr16
hlt
pop
test
and
cmc
jnp
push
repnz
loopne
out
adc
stos
dec
sub
es
pop
repnz
adc
cmp
lcall
idivb
inc
jne
push
loopne
sarb
mov
jge
mov
mov
loope
dec
fldcw
or
add
add
aaa
add
mov
dec
movsb
cltd
clc
push
push
shr
add
andl
pop
movl
pmulhuw
sbb
adc
push
adc
mov
sub
std
xor
mov
shl
xor
jns
mov
lods
adc
mov
adc
nop
push
cmpsl
inc
stos
jge
es
movsl
jae
aam
sub
sub
mov
popf
jae
sbb
mov
xor
add
mov
or
jecxz
mov
clc
or
js
lea
pop
inc
pop
nop
add
xchg
test
and
iret
xor
orl
cmpsb
adc
and
rcr
dec
dec
addb
jmp
rorl
addl
dec
push
inc
jmp
mov
xor
scas
arpl
xchg
bound
mov
subl
mov
cmpsl
or
pop
fistl
add
jmp
sub
popa
lds
jbe
addl
add
mov
or
add
and
in
add
movsb
inc
stos
mov
lock
mov
std
mov
mov
sbb
leave
mov
cmp
adc
mov
mov
push
mov
dec
sbb
sub
movnti
inc
or
bound
std
test
or
jae
aas
ret
aam
pop
push
push
or
push
mov
movsl
fidivrl
pusha
cmp
xchg
add
add
sub
pop
or
or
les
ret
cmpsl
mov
out
in
inc
mov
dec
fsub
cmp
jle
loope
clc
jg
jae
inc
add
outsb
mov
fcomps
cmp
subb
cmp
mov
cmp
mov
pop
pop
or
xchg
faddl
sub
xor
sbb
pop
gs
paddusb
mov
sbb
mov
lret
popf
les
jp
cltd
add
or
addb
lock
pusha
enter
jne
or
adc
sbb
daa
stc
add
test
sbb
add
pop
inc
push
push
dec
mov
in
sub
add
fistpl
pop
cwtl
ficoms
inc
daa
sub
stos
xor
xor
mov
sbb
adc
sbb
imul
enter
cmp
dec
rorb
mov
lea
mov
mov
out
insl
mov
movl
jp
inc
cltd
push
enter
ljmp
cld
lea
js,pn
dec
cmp
dec
dec
outsb
pop
or
jae
or
pop
or
push
hlt
bound
sub
loopne
insb
sti
adc
or
push
add
shlb
insb
ret
inc
xchg
inc
sbb
lcall
movl
adc
add
popa
scas
add
dec
sub
sarb
add
cmp
lock
cmp
or
dec
sbb
add
insl
pop
lea
jmp
arpl
adcb
or
cltd
inc
push
add
popf
pop
adc
add
mov
jp
add
add
dec
adc
dec
rolb
das
test
shlb
scas
jne
or
xchg
mov
add
sbb
adc
or
inc
movl
sub
popf
mov
mov
outsl
inc
sti
out
xor
cs
mov
addl
or
add
push
mov
add
mov
add
js
inc
lea
clc
cmp
dec
popa
inc
ja
mov
loope
aas
popf
cwtl
je
dec
adc
and
imul
mov
es
js
inc
or
add
or
mov
lods
xchg
add
imul
clc
inc
adc
adc
inc
loop
adc
outsl
popf
cs
xchg
cwtl
bound
and
scas
push
mull
cmpsl
push
jb
rcrb
cmp
lea
pop
push
push
xor
in
dec
mov
out
push
daa
push
xor
sbb
jb
aas
sbb
int
out
aad
je
sahf
incl
das
rolb
pop
cwtl
add
iret
leave
push
fdivl
add
das
subl
cmp
mov
dec
cmp
movsb
fcmovnb
inc
outsb
mov
jp
cmpsl
push
nop
inc
sbb
movsl
adc
decl
rcrl
or
inc
pop
jns
in
push
sub
dec
dec
xor
inc
xchg
pop
rorb
adc
xchg
sub
es
and
insl
pusha
push
mov
rcrb
sub
dec
in
pop
rol
adc
adc
enter
adc
sarb
add
add
mov
data16
sarb
test
orl
xor
fdivs
out
shlb
xchg
mov
js
push
test
sbb
inc
test
xchg
pop
sub
push
lock
jg
pusha
faddl
push
dec
inc
or
sub
lahf
adc
mov
lea
dec
and
mov
adc
jbe
fsubrs
cld
sbb
cmp
dec
inc
mov
sbb
adc
xor
inc
repnz
xor
shrl
sbb
mov
mov
mov
xchg
mov
mull
add
data16
push
or
les
add
mov
adc
sbb
enter
test
aas
push
lods
mov
clc
xlat
hlt
add
adc
and
test
pop
cmp
add
dec
jb
add
roll
arpl
xchg
repnz
scas
push
lcall
lret
cmovb
jge
call
subb
adc
push
movl
push
inc
inc
mov
sub
into
jg
inc
ud2
dec
sti
inc
push
mov
add
cmp
nop
out
xchg
dec
dec
inc
icebp
push
add
xchg
data16
add
xchg
and
pop
mov
push
jge
lea
insb
jo
fwait
and
or
jmp
inc
cmp
ss
into
push
sahf
cltd
jae
mov
in
mov
or
push
movl
cwtl
or
push
insb
or
subl
mov
dec
sbb
icebp
cmp
lods
push
pop
ror
push
mov
cmpl
mov
in
mov
push
jmp
pop
negb
add
sbb
xchg
addl
cmpsl
add
inc
popa
mov
mov
xchg
jns
push
ficompl
arpl
shr
addr16
sbb
gs
push
fdivs
mov
pop
cmp
insb
adcb
shlb
jo
mov
cmp
fimuls
sbb
adcl
shrb
mov
jl
add
dec
dec
fs
mov
pop
add
dec
add
xorl
inc
add
pop
xor
popa
lock
xor
clc
xchg
mov
sbb
stos
jnp
repnz
andl
pop
popf
cmp
add
pop
cltd
inc
dec
out
repz
pop
in
add
mov
add
inc
jnp
push
in
jge
lea
movsb
mov
shll
mov
mov
clc
mov
adc
add
test
rorl
fistpll
cmp
xor
xchg
jl
fisubl
add
xchg
sbb
jg
out
movl
addb
adc
syscall
rcl
mov
mov
dec
subl
mov
cmp
test
add
stos
lods
rol
out
push
push
dec
shrd
push
fsincos
add
mov
jge
or
jnp
mov
movsb
bound
and
xchg
cltd
lods
lock
mov
or
sub
sub
mov
jo
and
inc
sbb
pop
bound
or
imul
inc
bound
addr16
fdivs
sbb
cltd
pop
mov
xchg
mov
pop
dec
jo
jae
call
push
ja
sti
adc
adc
mov
fcoms
jno
mov
or
out
push
push
xor
xchg
pop
inc
andl
and
mov
xchg
mov
lcall
imul
shlb
in
mov
xchg
sbb
or
js
loopne
xchg
push
enter
addl
js
movsbl
mov
ss
pop
jno
jne
and
mov
je
adc
fwait
dec
fisubs
adc
adc
mov
pushf
mov
cmp
sbb
gs
mov
hlt
push
inc
test
rolb
pop
dec
cmp
lock
mov
lret
mov
sbb
pop
js
je
lret
jbe
mov
cld
adc
xor
in
jnp
jne
mov
xor
xor
jecxz
std
addl
lea
stc
lock
fwait
push
bnd
hlt
pop
dec
lods
repnz
dec
push
xor
addb
arpl
mov
mov
arpl
pop
lcall
gs
jno
xchg
fwait
and
shrb
sub
dec
nopl
repz
sbb
jns
std
lock
and
xor
jno
or
sub
and
mov
push
and
cmp
faddl
out
out
fsubrp
or
push
add
es
adc
add
int3
add
in
jmp
add
das
ret
xchg
mov
mov
hlt
and
inc
loope
pop
mov
dec
push
mov
shrl
push
pop
sub
push
push
jg
bound
sbb
and
popa
inc
xchg
mov
sub
mov
popa
and
imul
and
je
insb
fiadds
jmp
cmp
scas
sbb
jno
xor
das
push
mov
and
add
mov
test
sbb
xchg
fstl
or
aam
mov
dec
into
sbb
inc
xor
out
add
ret
mov
mov
or
push
mov
mov
shrb
cld
leave
daa
or
or
inc
das
lret
andb
mov
aaa
lea
rcrb
lret
or
pop
pop
cmp
xchg
clc
imul
jl
popa
je
mov
ret
test
fstps
shrb
in
loope
jnp
jns
mov
push
cmp
in
mov
add
sarb
icebp
lret
mov
popa
sbb
cmp
ja
mov
mov
mov
movl
mov
jl
or
mov
gs
pop
mov
test
cmp
add
push
stos
and
aam
pop
clc
adcb
and
rclb
mov
adc
call
adc
arpl
push
imul
insb
insb
add
jno
lock
clc
adc
mov
pop
enter
adc
mov
add
test
popa
cmc
mov
cmp
cmovbe
pop
inc
aaa
add
scas
mov
shrb
push
int3
shr
xor
pop
int
sub
jno
sbb
xor
mov
pop
mov
inc
pop
arpl
sub
and
movsl
jo
in
in
adc
pop
bound
movsl
movsb
pop
popa
add
add
rcll
inc
add
mov
mov
inc
aas
inc
popl
push
and
aam
jbe
aam
hlt
fsubrl
sub
insb
fldl
or
push
clc
sub
clc
jmp
jno
stc
sub
push
add
push
push
push
push
push
inc
jl
mov
xor
and
pop
popf
lds
sub
or
icebp
insb
jne
mov
call
sub
mov
inc
push
jne
dec
fmuls
adc
or
out
jns
adc
int3
lods
xchg
ror
push
pop
or
sbb
adc
xorl
pushw
push
adc
repnz
xchg
nop
imul
mov
mov
das
adc
xor
sub
adc
sbb
loopne
mov
add
add
sub
test
js
imul
pop
sti
xor
lahf
pushf
jmp
push
inc
cwtl
lcall
orl
hlt
adc
mov
adc
sti
push
pop
add
lret
pop
or
mov
orb
or
cmp
jmp
sti
or
cmp
js
add
xor
sbb
xchg
jbe
scas
or
inc
dec
popf
enter
adc
push
inc
lret
adc
add
add
cmp
add
ss
cmp
mov
mov
inc
sbb
jne
nop
push
and
subl
jno
movsb
nop
movb
sub
add
sbb
dec
sub
cmp
imul
adc
sub
nop
xor
outsl
cwtl
mov
mov
aad
mov
xchg
push
mov
jg
push
push
rcl
xchg
mov
adc
movsb
adc
jbe
pop
insw
xchg
addr16
jmp
mov
lock
inc
mull
jbe
cmp
push
cmp
or
jne
sbb
in
pop
int3
clc
jo
or
jnp
add
lret
adc
aam
cmp
nop
dec
jno
cmp
mov
sbb
jno
push
xor
enter
in
adc
enter
mov
lods
jne
mov
push
out
jg
outsl
adc
inc
cwtl
in
push
push
jo
xlat
mov
mov
loop
adc
jecxz
mov
mov
dec
test
mov
adc
add
and
sub
mov
xchg
mov
arpl
rorb
jp
inc
inc
mov
hlt
popa
jecxz
dec
in
mov
dec
in
ret
cmp
bound
inc
pop
por
and
dec
mov
fwait
push
je
jge
mov
lock
pop
add
xchg
cmp
cmpl
ss
mov
xchg
fdivrs
lret
pop
into
pop
dec
pop
rcl
adc
cmp
js
rolb
jmp
sbb
rcl
decb
pop
int3
je
ds
int3
pop
push
mov
xchg
les
andl
jmp
dec
in
push
fists
fs
xchg
mov
and
clc
mov
and
insb
divl
aad
mov
dec
mov
jle
insb
xor
pop
cmp
in
inc
dec
dec
jge
push
rorl
loope
fs
cwtl
mov
or
sbb
pop
add
and
adc
jge
push
test
daa
aas
fstpt
daa
pusha
in
mov
sbb
lret
test
mov
ja
xor
in
sbb
xlat
lcall
ret
jns
pop
fmuls
sbbl
push
mov
mov
shll
ss
mov
std
flds
cli
aas
push
lea
push
xor
or
scas
push
lock
loopne
int
dec
mov
xchg
sbb
pushl
push
pop
dec
fidivrl
mov
jns
movsb
fnstenv
sub
imul
cmp
inc
dec
mov
rcrb
adc
cmp
pop
nop
stc
jle
add
cmpw
sbb
cmpb
scas
or
push
cld
mov
pop
push
pop
mov
add
sar
sub
mov
push
repz
pop
mov
jns
les
pusha
adc
pop
jns
sbb
add
lock
add
xor
xorb
add
iret
inc
pop
lock
in
mov
dec
push
subb
sub
jl
sub
jmp
mov
pop
sti
lcall
dec
movzwl
cmpl
push
adc
and
or
test
sub
inc
ret
sbb
cs
add
cmp
add
mov
subb
ss
xor
adc
mov
jae
outsl
push
sbb
xor
addr16
inc
add
mov
push
fs
push
je
xchg
mov
insl
sysret
in
sub
xchg
pop
and
pop
and
push
adc
sbb
push
and
out
lcall
jb
fs
push
cmp
dec
and
add
and
pop
aas
pop
dec
pop
push
pop
push
dec
push
arpl
jb
jo
cmp
add
shl
and
test
pop
divps
adc
adc
mov
inc
fadds
push
and
roll
push
imul
icebp
and
cwtl
stos
out
inc
add
add
add
and
nop
pop
aaa
pop
mov
popa
sub
add
orb
scas
sub
adc
add
rolb
mov
pop
shlb
cmpsl
add
jp
inc
adc
call
and
aam
or
lock
call
mov
fwait
jle
adc
pop
adc
shr
push
mov
sbb
pop
fwait
int
mov
pop
dec
inc
iret
mov
cmp
sbb
and
fucomp
and
add
sub
push
or
mov
pop
adc
cmp
sub
js
mov
add
add
pop
adc
pop
jl
xor
push
shll
mov
dec
orl
test
test
inc
adc
orl
repnz
push
or
or
jne
pop
add
add
pop
lods
or
inc
push
pop
dec
daa
outsb
inc
jp
cmc
push
cmpl
pop
je
or
adc
adc
leave
or
mov
mov
faddl
in
and
sbb
arpl
jl
add
or
jne
or
test
hlt
ds
lea
mov
mov
sbbb
inc
mov
into
adc
inc
dec
pop
jne
imul
sub
inc
add
loope
push
and
xchg
les
aaa
scas
push
je
and
hlt
and
aas
or
xchg
push
out
mov
call
push
and
fldl
sbb
pop
sbb
iret
hlt
lcall
ja
out
fnsave
jno
sbb
rcrb
sbb
in
loopne
mov
xchg
inc
lods
sub
roll
mov
dec
fdiv
aas
sbb
mov
dec
push
mov
stc
stc
aad
and
mov
push
loop
sub
incl
fcom
mov
lahf
fimull
inc
and
addl
jge
mov
xchg
or
push
push
dec
jo
inc
mov
in
cmp
pusha
sub
mov
pmaddwd
gs
sbb
adc
xor
or
mov
mov
push
lahf
xchg
enter
xor
push
inc
aaa
pop
fs
push
mov
jmp
push
push
das
or
and
pop
loope
mov
jmp
adc
dec
lahf
adc
pop
pop
or
mov
adc
inc
sti
pop
inc
xchg
cmp
mov
add
rolb
mov
and
adc
mov
sub
mov
pusha
add
push
adc
xchg
xor
inc
add
mov
and
fists
cmp
mov
mov
mov
daa
add
or
mov
push
sbb
mov
xchg
lahf
stos
pop
aaa
adc
daa
dec
lods
inc
mov
push
bound
cmp
pop
xchg
lcall
sub
les
push
dec
push
std
lock
icebp
push
or
push
iret
xor
sbb
lcall
push
mov
dec
pop
sub
pop
repnz
mov
pusha
popa
dec
inc
test
jmp
cmp
jne
ss
out
repz
and
xlat
inc
inc
dec
xchg
xor
mov
push
test
test
mov
mov
loop
push
pop
fwait
in
test
sbb
pop
or
hlt
lea
fcoms
fdivrp
push
sbbb
xchg
pop
movsb
xor
adc
jae
mov
shrb
sub
push
jge
mov
aaa
add
test
push
xchg
into
or
dec
rol
jmp
aam
xor
or
or
enter
cmp
rcrl
dec
mov
mov
pop
imul
pop
pushl
cmpl
movsl
inc
outsb
or
mov
andl
jge
inc
xchg
inc
subl
mov
push
or
jp
add
dec
inc
es
dec
shr
inc
aam
sahf
data16
mov
fisubrs
sub
je
nop
inc
add
movb
jne
push
add
flds
inc
push
push
sub
enter
jne
fists
lret
push
lods
jnp
xor
movsb
pop
xchg
push
add
jle
lret
or
cld
jmp
add
xchg
mov
loop
pop
lea
dec
aaa
movsl
sub
js
pop
pop
and
mov
lea
push
push
je
nop
lock
cmp
das
jae
push
and
and
pop
fsubrl
fisttpll
clc
push
xor
pop
sahf
and
or
cmpsb
cmp
cmpsb
cld
hlt
xor
xor
sub
shlb
mov
loop
or
push
push
add
repz
insb
pop
and
stos
push
and
push
call
cmp
sub
push
jne
push
adc
and
xchg
push
adc
cmp
jmp
push
jg
mov
clc
repz
cmp
out
pop
es
and
je
imul
out
push
pop
sub
xchg
addl
sbb
enter
mov
sub
mov
ret
mov
test
bound
mov
sub
hlt
xchg
or
add
fmull
rol
add
adc
mov
mov
ja
adc
inc
or
pop
jns
adc
inc
sub
adc
mov
add
jmp
test
mov
inc
pop
js
mov
enter
dec
jmp
mov
test
or
daa
and
mov
enter
stos
test
test
or
sub
pop
iret
fldenv
loopne
lret
or
cmp
es
lods
ret
cmpsb
dec
mov
test
jno
xor
xchg
sar
fcoms
jo
mov
cmp
in
or
add
add
add
xor
test
or
pushf
inc
dec
inc
adc
lcall
in
lret
scas
sub
xchg
mov
mov
cmp
xchg
push
xchg
dec
jne
push
dec
add
icebp
lea
mov
inc
xchg
xchg
push
shr
cmpsb
push
loope
orb
cmp
sub
leave
xor
dec
ret
xor
or
test
mov
lock
sbb
add
imul
mov
mov
jbe
pop
aam
or
xor
or
or
xor
or
push
into
add
pop
mov
add
mov
fisubrl
add
jecxz
or
xchg
and
add
adc
sbb
cmp
push
push
jp
lock
add
loope
mov
mov
push
sbb
filds
lret
pop
add
push
pop
aaa
inc
mov
popa
cmc
or
mov
add
in
negb
sub
inc
dec
adc
dec
push
or
je
jg
xchg
loopne
cltd
arpl
addr16
mov
inc
imul
sbb
and
add
ret
mov
or
inc
mov
pop
pop
xchg
sub
push
sarl
in
mov
pop
sbbb
and
repnz
jne
inc
add
fwait
hlt
imul
sbb
and
xlat
inc
mov
push
hlt
imul
sub
stc
sub
jnp
clc
imull
mulb
cli
cmp
sbb
inc
popa
inc
aaa
mull
add
xor
xchg
cmc
push
and
loop
xchg
pop
lea
or
out
orl
sbb
xor
push
pushf
pop
sub
aas
int3
in
mov
push
lahf
cld
imul
push
shrb
sti
sub
icebp
in
lods
andl
sbb
mov
and
pusha
mov
push
fwait
mov
pop
clc
gs
mov
push
sub
pop
inc
and
or
movsb
jo
in
adc
rol
fisttpll
and
xor
jbe
adcb
jb
test
es
pusha
xor
inc
rcrb
sbb
ret
jp
movsl
out
sub
popf
cld
icebp
mov
push
jo
add
stos
in
sub
hlt
push
or
sub
cltd
sub
movsl
and
mov
insb
popf
scas
xchg
inc
mov
fnstsw
dec
loopne
in
sub
mov
test
sub
daa
aas
gs
shlb
sbb
roll
push
lea
insl
cmp
andl
adc
hlt
or
add
xchg
xor
sub
std
nop
xor
and
push
scas
rorl
xchg
nop
dec
lret
and
insl
pushf
xchg
pop
add
pop
xchg
ficoms
adc
push
cs
fs
lods
das
jb
pop
and
push
ret
push
mov
adc
add
mov
subb
pop
and
add
add
xor
rol
cmp
jmp
fwait
push
sbb
call
lcall
adc
leave
mov
lock
inc
insb
cwtl
rol
dec
jg
push
inc
jns
dec
test
pop
xor
bound
dec
mov
mov
fstl
cmp
jo
arpl
cmpsl
adc
xchg
jbe
mov
jnp
inc
adc
sbb
push
or
clc
sbb
jo
and
cli
repnz
aaa
aad
and
pop
push
and
add
push
add
dec
leave
in
xchg
dec
inc
inc
test
add
push
or
jnp
mov
cmp
push
sub
lea
inc
cmp
push
mov
push
and
push
push
dec
or
in
jmp
xor
lea
adc
mov
lcall
push
ja
mov
mov
vphsubbw
adc
shll
mov
add
xchg
andb
pop
imul
cmp
dec
in
pop
inc
sbb
leave
into
and
inc
or
shr
mov
shlb
mov
imulb
push
sub
daa
jne
lods
xorl
insb
push
jnp
or
jo
cltd
mov
push
out
mov
mov
xor
push
into
popl
out
dec
imul
adc
pushf
push
mov
jg
std
or
test
adc
sub
pusha
sub
xor
xor
stc
lock
or
dec
enter
push
add
xchg
adc
cmp
andl
pop
in
inc
fisubl
mov
cli
adc
in
mov
dec
jo
jo
into
lock
add
jno
dec
add
inc
icebp
sbb
clc
and
jmp
clc
jl
or
or
xchg
mov
adc
xchg
mov
add
push
sub
clc
push
jnp
outsl
cmp
mov
and
xchg
xor
pop
mov
adc
scas
xor
call
xchg
mov
jo
push
pushf
pop
add
mov
sub
sbb
xchg
popa
or
adc
cmp
pop
dec
ss
jge
mov
xor
xor
in
mov
jae
hlt
push
dec
push
cmpb
sbb
inc
lcall
out
add
in
pop
add
sbb
rcrb
push
add
and
adc
push
mov
cmp
add
popa
mov
adc
and
adc
loop
movsl
imul
jl
es
out
adc
xchg
or
xor
jb
scas
jns
das
icebp
push
xorb
mov
sbb
mov
shll
add
inc
fisubs
add
clc
sarb
xchg
xor
sbb
cmp
jno
popf
loop
mov
xor
jge
pop
arpl
adc
pop
and
xchg
add
insb
ja
push
mov
jns
xchg
add
cmp
aad
mov
lea
cmp
ret
sbb
jo
mov
jns
dec
inc
lock
scas
jge
mov
inc
adc
hlt
cmp
movsb
lods
or
dec
cmp
inc
push
mov
or
sbb
ret
roll
insl
xorl
and
push
nop
test
adc
adc
inc
cwtl
std
lcall
and
jecxz
inc
dec
adc
and
sbb
test
and
ja
repz
xchg
sbb
mov
cmp
lds
adc
push
or
test
shrb
stc
mov
push
lret
shrl
das
rcll
mov
and
movsb
or
or
adc
push
mov
mov
fistpll
xor
insl
fisttps
and
ja
lds
insl
in
out
insl
mov
pop
sbb
sbb
add
shrb
add
or
jp
sub
inc
push
arpl
jns
and
stos
fiaddl
add
inc
sahf
fistl
xorb
add
cmp
das
and
insl
xor
push
insb
push
leave
test
or
add
ret
xchg
add
les
movl
cltd
ljmp
test
cmp
xchg
shlb
add
adc
adcb
push
ja
sbb
add
cwtl
rcll
push
pop
pop
sbb
je
gs
dec
cmp
inc
pop
or
hlt
pop
cltd
punpcklwd
mov
mov
imulb
outsb
cld
mov
dec
jecxz
pop
in
adc
je
inc
ret
sbb
adc
add
jbe
mov
push
bound
mov
aam
or
js
add
mov
lods
pusha
add
xor
xor
push
int3
or
mov
aaa
mov
leave
sub
sbb
loope
movsb
movsl
pusha
sbb
add
outsl
jno
add
inc
sti
pop
rcll
or
fimuls
arpl
sarb
rorb
rcl
cmp
fisttpl
push
fisttpll
jno
fstps
pop
mov
mov
mov
xchg
mov
mov
nop
jge
mull
daa
mov
mov
xor
dec
fistl
pop
add
popa
inc
sub
scas
push
mov
lock
lds
jmp
jp
adc
xchg
cs
dec
loop
mov
scas
sub
into
push
mov
xchg
xor
popa
sub
jbe
rol
xchg
jl
ret
jle
pop
sub
adcl
nop
xor
decl
testl
inc
push
jle
loop
add
jne
das
fdivrs
lahf
push
adc
mov
add
jg
push
insb
mov
cmp
js
fcomps
ret
pop
cs
xchg
lock
add
push
ror
scas
cmpsb
in
fcmove
stos
add
push
rolb
push
orb
je
inc
loope
and
jle
add
in
inc
movsl
bound
mov
push
daa
add
mov
insb
popf
adc
jnp
nop
or
add
inc
lea
sub
test
je
xchg
or
out
orl
jle
lock
push
pop
push
push
outsl
pusha
sub
scas
sub
fs
sub
xorb
inc
push
fldenv
cmp
fiaddl
pop
xor
sub
jne
aad
stos
in
sub
dec
ret
or
pop
lret
mov
nop
shl
push
sahf
add
inc
jl
xchg
push
je
push
and
addr16
outsb
inc
xor
inc
and
or
jmp
cld
cwtl
and
adc
push
xchg
or
les
add
jno
in
mov
clc
and
clc
sarb
xchg
pop
loop
xor
sbb
or
outsb
adcb
add
jne
add
push
sub
push
pop
xor
loopne
jb
iret
push
sub
lea
push
mov
mov
xor
lods
inc
sbb
pop
lds
fwait
sbb
cs
hlt
dec
ret
mov
xchg
mov
pop
lcall
jl
adc
addps
test
sub
roll
mov
shl
cltd
ss
aam
pusha
pushf
push
lea
pop
js
and
outsl
mov
dec
lcall
lret
fimuls
dec
mov
dec
mov
ljmp
xor
pop
call
adc
pop
fstpl
or
std
aam
add
push
imul
push
test
outsb
sbb
push
xor
sbb
jle
mov
ret
nop
dec
mov
inc
mov
mov
push
sbb
loopne
arpl
mov
popf
in
add
out
out
icebp
hlt
shr
sub
call
das
add
js
push
sahf
pop
in
adc
push
lea
repnz
adc
inc
mov
insl
or
dec
gs
imul
repz
push
pop
inc
sti
cmp
add
fwait
xor
mov
jp
mov
das
mov
inc
push
adc
shll
test
jg
movl
imul
adc
fldz
and
add
testb
and
cmp
and
sub
jnp
push
mov
push
cmp
insb
and
pop
imul
xor
mov
dec
adc
push
loopne
xor
cmp
test
add
in
mov
mov
pop
pop
mov
shlb
mov
test
mov
pusha
rorb
fisttpll
mov
xchg
xor
dec
or
jne
loopne
mov
add
lea
fsubs
call
inc
sbb
add
call
pop
call
stc
mov
inc
mov
scas
sbb
lahf
test
add
xor
mov
or
push
scas
xorl
jmp
call
xor
sbb
adc
cmp
push
cmp
jle
stc
pop
jle
cmp
jp
push
cmp
cmp
inc
pop
add
jge
mov
mov
push
add
inc
jmp
or
mov
lret
clc
movw
lret
mov
cmc
add
bnd
mov
push
mov
cmpsb
cs
icebp
cltd
pop
idiv
lock
xchg
cld
adc
scas
imul
fcoms
mov
add
mov
cmp
and
test
adcb
call
fnstcw
push
popa
or
outsb
jbe
push
dec
or
hlt
cmpsl
xorl
mov
data16
pop
and
xor
pop
mov
dec
js
add
and
movsl
or
adc
and
adc
or
cmp
and
jecxz
int
mov
sbb
sub
xor
cmp
mov
adc
add
nop
dec
push
fdivrs
xchg
dec
scas
pop
insl
iret
jo
cmp
or
repnz
nop
xchg
dec
outsb
pop
or
adc
pop
sbb
enter
les
nop
and
test
sarb
or
and
add
loopne
cmp
lret
jg
push
push
rolb
mov
dec
insl
add
mov
fidivl
jl
outsl
pop
sub
or
into
cmp
add
adc
add
push
inc
fimull
dec
push
sub
or
leave
push
nop
sub
or
add
push
repnz
mov
and
jns
xor
sbb
dec
orb
and
bound
push
dec
leave
jmp
xor
popa
push
jo
cli
ret
adcb
std
inc
rcl
adc
aam
loope
subb
cmp
sbb
xchg
inc
push
cmpsb
aaa
sbb
mov
sbb
popa
mov
loop
push
jo
cmpsb
add
mov
sub
in
mov
inc
fwait
jl
sbb
fidivl
and
add
mov
add
or
outsb
adc
and
and
jnp
cs
leave
sub
fstl
add
push
jmp
lods
shlb
mov
adc
es
popa
adc
sbb
outsl
sbb
push
mov
cmpsl
std
cmp
stos
aad
pop
lods
test
stos
in
mov
ret
int3
andb
add
add
sbb
and
popf
adc
shlb
sbb
xor
sbb
leave
nop
pop
dec
es
adc
add
rcll
aas
add
add
jne
xor
add
add
or
and
push
xchg
and
inc
loopne
in
add
push
and
sar
les
mov
mov
or
adc
sbb
stos
loope
or
fwait
loope
hlt
jb
and
mov
out
rol
push
sbb
sbb
mov
push
mov
cli
sbbb
test
xorb
dec
push
int3
push
icebp
or
and
ret
add
add
mov
adc
jne
lea
add
add
push
popf
xor
push
bnd
push
mov
test
xchg
enter
push
les
add
add
enter
inc
outsl
add
orl
aad
jb
or
add
rolb
dec
aaa
lock
fwait
adc
fstpt
sbb
pop
scas
nop
xchg
sub
or
dec
xchg
cmp
in
je
push
repnz
jne
rol
cmp
outsb
adc
pop
rcrb
es
in
pop
outsl
popa
rolb
add
sub
push
adc
cli
push
addr16
rcrb
ret
and
sbb
int3
inc
cld
xor
and
add
test
inc
sar
pushf
jbe
sbbb
xorl
negb
aam
dec
jae
outsb
push
ja
lock
call
pop
adc
pop
or
xor
sbb
fildl
in
test
pop
stos
cmp
jne
mov
lcall
ret
popa
xchg
mov
sbb
into
add
push
add
xlat
sub
pop
or
pop
fildl
jb
cmp
dec
mov
notb
add
decb
testb
in
insb
cmp
add
jl
fs
mov
cmpsb
add
or
imul
in
shrl
pop
adc
sub
je
lods
mov
add
pusha
addl
and
es
adc
xchg
pop
and
dec
add
std
mov
xor
shlb
mov
es
dec
insb
push
and
rol
addr16
iret
inc
xor
jle
sbb
shl
add
fildl
adc
adc
xor
mov
cmp
test
jle
add
pop
sbb
xchg
adc
inc
push
pop
push
mov
mov
xor
fcmovbe
aaa
je
mov
out
call
and
popf
adcl
sub
cmp
fisubrl
or
sbb
insb
call
inc
dec
jmp
dec
fldl
xchg
inc
je
sbb
add
push
xchg
es
cmp
sti
inc
lcall
dec
ja
jle
test
and
dec
out
ucomiss
push
lods
mov
push
xchg
jge
lods
mov
jo
jnp
xchg
add
pop
fsub
pop
fsubrp
push
add
pop
push
rorb
cmovne
dec
dec
out
lds
int3
icebp
in
push
mov
in
ret
dec
sub
or
js
loopne
cmp
mov
inc
int
loope
cmpsl
dec
pop
int3
in
divb
inc
negb
mov
inc
cmpsl
inc
insl
adc
xor
gs
sub
mov
sub
and
add
bound
sub
shll
or
in
outsl
stos
dec
arpl
mov
jge
dec
insl
arpl
aam
pop
jo
jae
je
into
dec
dec
mov
movsl
pop
xor
push
daa
push
add
cmp
sbb
lods
jbe
fdiv
push
or
iret
das
add
jnp
xchg
pop
in
ret
ja
xor
mov
aaa
adc
push
and
xor
push
in
or
andl
in
gs
daa
xor
out
lock
cmp
jnp
fmull
mov
call
xor
push
clc
mov
add
cmp
jb
sbb
leave
shld
add
rclb
xchg
ja
jb
xchg
mov
push
ss
push
inc
add
push
add
push
je
pusha
or
ret
sub
add
push
leave
adc
push
push
mov
push
xor
or
add
or
mov
lret
push
sbb
push
lods
add
pop
pop
test
leave
pop
or
in
dec
mov
nop
test
shll
xor
dec
push
mov
mov
ja
or
mov
cmp
test
and
push
sti
cmpl
je
sahf
mov
push
sbb
jle
out
inc
jle
push
cmpw
jne
add
and
jge
pop
outsl
cmp
dec
push
push
push
xchg
cmpsl
jl
mov
test
jo
decl
jg
stc
std
mov
or
frstor
sbb
out
lretw
jl
jle
push
push
push
push
xchg
dec
pusha
inc
push
add
test
cmp
mov
aas
push
jle
dec
or
add
push
push
icebp
add
pop
mov
adc
les
sbb
out
adc
mov
imul
jle
add
popa
es
xlat
arpl
ret
cmp
jnp
push
rcrb
sar
je
mov
dec
pop
sbb
pop
jle,pt
movsl
lods
test
add
inc
imul
or
aam
call
jle
mov
xchg
push
mov
push
popf
push
xchg
xor
test
shrb
pop
dec
sbb
pop
pushf
sarb
jae
movsb
std
and
subl
test
xchg
lock
movsb
inc
and
inc
lret
or
add
sub
sahf
int
adc
xchg
movsl
jl
add
lods
adc
push
ss
imul
addr16
mov
lds
mov
mov
sahf
pop
pop
xlat
add
and
and
lods
push
xor
lods
mov
cwtl
push
insl
nop
or
xchg
imul
push
sub
xor
stc
and
enter
ret
pop
add
sbbl
or
cmp
dec
outsl
call
ficoml
sbb
imull
nop
or
or
sbb
aaa
fwait
dec
cwtl
jmp
les
sub
movsl
in
rol
inc
xor
jno
dec
invd
add
add
jb
scas
les
add
push
adc
dec
cmp
add
jp
mov
outsb
pop
cmpsl
bnd
add
cmp
repnz
jb
add
add
cmpsb
add
jns
fxch
shr
dec
popf
jno
or
out
loopne
rep
inc
push
xchg
add
xchg
jg
cmpl
dec
xchg
push
and
sbbl
push
sub
loopne
jno
inc
and
mov
ret
push
movsb
xchg
test
rcl
inc
and
pop
sti
rcrb
ret
pop
popa
adc
faddl
sub
fadds
je
mov
leave
bound
mov
jno
sbb
in
jge
ljmp
icebp
and
xor
add
lret
mov
add
insl
adc
sub
dec
je
add
cld
push
icebp
dec
sbb
dec
jne
xchg
sub
bound
push
insb
adc
jno
pushf
adc
or
test
sbb
jg
sbb
in
push
sarl
pop
lods
jns
push
pop
mov
cmp
ja
scas
scas
push
mov
lea
es
cs
dec
jnp
cmp
test
inc
mov
hlt
push
imul
fs
jp
inc
pusha
mov
in
inc
lods
int3
lock
arpl
sbb
adc
cmp
mov
movsl
and
adc
pop
push
pop
arpl
sahf
and
addr16
pop
adc
cmp
nop
test
enter
sub
jb
and
and
jle
inc
push
sbb
insb
inc
push
cmp
mov
nop
fdiv
sub
sbb
enter
mov
push
push
pop
movsl
mov
fs
sahf
cmpsl
stc
mov
adc
jns
cmp
pop
out
sahf
out
insl
xchg
mov
sahf
mov
leave
rcr
out
int
jns
sti
add
cmp
repz
repz
push
pop
imul
cmp
fwait
scas
movsl
les
aaa
mov
mov
push
pop
pop
ret
std
fucom
jae
outsb
add
ret
pop
mov
mov
mov
cld
adc
ss
nop
sti
das
je
fs
iret
adc
cmpb
sub
fmulp
and
jno
add
les
movsb
xchg
subb
xchg
adc
test
pusha
lods
into
xor
shrl
lock
mov
inc
mov
or
push
push
add
out
fcompl
pusha
aaa
cmp
movsb
adc
mov
xchg
test
mov
add
mov
faddl
adc
sbb
cmp
cmp
mov
insb
and
lret
out
push
dec
test
lods
adc
bound
cld
add
push
sbb
aas
repz
les
inc
ja
rorb
adc
loope
cmp
jge
out
mov
cmp
push
cld
lock
movsl
out
add
jp
scas
cmpsb
push
cmc
popf
add
pop
stc
ficoms
test
ja
imul
rol
or
mov
roll
into
push
ret
gs
push
sbb
das
push
mov
adc
lock
or
xor
filds
or
enter
or
mov
adc
xchg
js
mov
and
decl
sub
pop
fdivs
mov
and
stos
and
or
cmp
outsb
faddl
pop
fcomip
push
mov
mov
xor
je
inc
push
or
or
fs
insb
movb
push
aad
xchg
and
inc
leave
adc
pop
sbb
les
repz
pop
lea
jo
add
sbb
push
add
mov
cmp
pop
xchg
test
shlb
adcb
xchg
mov
mov
cmpb
jecxz
cmc
jb
mov
int3
fiadds
sub
push
xchg
xchg
sarb
dec
div
push
add
mov
mov
xor
or
lods
and
sub
cmp
mov
fwait
pop
cmp
push
sub
jo
test
rsqrtps
mov
or
bnd
test
adc
or
mov
xor
sub
push
mov
xor
jle
icebp
scas
jecxz
mov
xor
sbb
enter
dec
xor
das
insb
lcall
jl
dec
lcall
dec
lcall
add
in
jae
add
mov
mov
sbb
mov
cltd
mov
hlt
push
int3
jl
mov
test
add
cmp
orl
lret
cmp
jns
xlat
movsb
inc
xor
add
in
cmp
mov
pusha
mov
mov
sub
or
pushf
js
stos
push
nop
and
in
jbe
test
sbb
ljmp
shlb
sbb
sbb
sbb
nop
stos
shlb
sbb
push
cltd
fs
sbb
in
mov
push
into
push
rorb
adc
sub
or
sbb
sbb
pop
aam
movsb
sub
sub
sbbl
mov
pop
inc
and
jmp
pop
mov
shl
xchg
inc
adcl
pop
gs
pusha
int
mov
mov
xor
cmp
pop
push
ficomps
push
lret
mov
into
pushf
xchg
xchg
loop
push
jle
mov
mov
mov
jb
sbb
aaa
rcrl
jp
xchg
imul
dec
movsl
mov
mov
int3
cmp
sub
sub
jmp
stc
cmp
movsb
aas
push
cmc
mov
movsb
push
inc
cmpsl
mov
mov
mov
cmp
ds
nop
aaa
and
and
mov
daa
dec
pusha
loopne
cmp
in
js
mov
push
inc
push
sbb
adc
sub
push
pusha
pusha
or
cmp
subl
lea
jo
clc
test
popa
inc
xchg
mov
adc
imul
inc
inc
add
jge
dec
pop
xor
inc
mov
cmpb
je
adc
lcall
jmp
push
outsl
inc
sbb
sub
pusha
aaa
je
pop
adc
stos
mov
sbb
ret
and
inc
mov
imul
dec
dec
add
out
adc
push
test
xchg
in
cmp
aas
pop
push
pop
je
or
mov
pop
push
mov
adc
adc
ds
lret
rolb
jecxz
out
add
mov
lcall
jne
or
add
push
daa
sarb
push
imul
jne
add
pop
sbb
lods
sbb
mov
imul
lods
mov
repz
ficompl
jo
mov
push
inc
lret
sbb
and
add
fwait
cmp
push
xchg
push
movsl
enter
mov
sbb
dec
loope
aaa
stos
xchg
mov
in
adc
sbb
rorb
pop
ficoml
and
mov
cmp
inc
push
outsb
shlb
pop
cmp
mov
je
repnz
jl
cmp
imul
loopne
jbe
add
test
or
sbb
mov
nop
push
call
pop
setl
adc
pop
repnz
movsb
adc
adc
scas
adc
leave
and
dec
adc
push
add
push
xchg
fwait
out
push
es
push
mov
int3
push
and
inc
push
aam
rcrb
push
mov
insl
push
sbb
test
cwtl
push
in
jecxz
int
negl
pop
int
fsubrl
nop
push
test
mov
sbb
push
mov
sub
cwtl
nop
mov
sub
mov
mov
and
mov
add
and
shrb
mov
mov
and
inc
sub
sub
cmpb
dec
jae
test
push
push
inc
sbb
adc
sarb
cwtl
push
pop
pop
push
mov
shrb
mov
sbbl
and
aad
and
sub
adc
push
movsb
pushf
xchg
shll
inc
mov
test
and
xor
je
dec
dec
xor
insb
or
xor
pop
pop
xor
fsubr
pop
add
ret
arpl
test
mov
mov
cmp
inc
ds
mov
mov
xor
orb
inc
call
insb
pusha
aad
xor
xor
popf
in
orl
mov
push
loope
cltd
sbb
int3
or
into
pop
pop
adc
out
inc
jecxz
jbe
in
dec
or
inc
pop
in
roll
sub
inc
call
or
xor
add
lods
lahf
jb
and
movb
leave
xor
sub
or
jne
mov
scas
add
jbe
add
aad
out
jge
add
adc
imul
lods
cmpsl
sbb
adc
cs
or
xchg
or
imul
and
inc
mov
test
sti
js
or
icebp
push
mov
xor
jnp
cmp
fbld
adc
mulb
adc
xor
add
adc
adc
out
ret
sbb
mov
mov
mov
les
cmpb
mov
mov
jo
adc
mov
movsl
imul
shrl
mov
pop
sub
adcb
inc
jmp
mov
aam
cmp
push
sbb
jmp
and
mov
pusha
sbb
pushl
or
add
push
sbb
mov
xchg
lcall
xor
mov
add
dec
enter
pop
and
fwait
and
mov
and
and
adc
roll
and
pop
push
imul
add
stos
sub
push
fcmovu
jecxz
pop
es
pop
test
fs
dec
jnp
sub
mov
subb
es
pusha
push
sub
imul
insb
or
enter
mov
sub
movsl
pop
cs
daa
ss
mov
cmpsb
fmuls
sahf
pop
sub
dec
jmp
inc
test
mov
adc
dec
fildl
dec
rcr
ret
jbe
clc
pop
inc
inc
add
popa
xor
mov
sub
das
not
insl
inc
lcall
and
xor
sub
sub
lods
dec
xor
int
push
sub
fs
and
test
dec
dec
jl
pop
and
int
xor
and
and
xor
push
nop
sbb
and
addb
mov
inc
js
and
les
aam
or
pop
rclb
sbb
add
sahf
adc
push
mov
mov
es
ret
mov
add
orl
add
les
in
cmpsb
arpl
jmp
xchg
cmp
sub
test
rcrb
dec
clc
test
jnp
push
test
loope
lds
push
and
loopne
pop
cmp
je
repz
lcall
popf
mov
pop
jecxz
add
pop
sub
push
scas
aam
pop
adcl
inc
mov
sbb
inc
sbb
rclb
pop
jge
cmp
pop
adc
movsb
or
mov
test
data16
push
add
sbb
enter
lods
inc
cmpsb
and
xor
sub
mov
fldcw
clc
pop
inc
andl
call
stc
and
dec
loop
leave
inc
cmp
inc
or
cmp
push
xor
push
rclb
cmp
lock
clc
cmp
fs
xchg
icebp
stos
cmc
js
ss
adc
push
cmp
and
push
mov
sbb
push
test
cmp
mov
andb
popf
ljmp
xor
sbb
loop
or
jbe
dec
cmp
cmc
dec
lods
imul
popf
pop
cmp
sarb
cmp
cmp
jbe
dec
pop
cld
movsl
mov
mov
nop
movsl
aam
popa
jmp
jmp
mov
add
push
lret
aad
push
push
pop
fwait
and
mov
mov
mov
mov
scas
mov
inc
inc
inc
xor
jge
fdiv
add
adcb
cmp
sbb
or
cmp
lods
or
push
movsb
cmp
and
pusha
ljmp
clc
loope
mov
and
push
jbe
or
jb,pt
mov
and
adc
imul
lret
adc
push
sub
test
fs
hlt
pop
inc
add
repnz
cmpsl
xchg
ret
mov
popa
mov
adc
push
sbb
xlat
jbe
mov
sti
pusha
add
xchg
cmp
jne
inc
in
jb
lret
cmpb
les
addb
hlt
subl
push
test
push
or
iret
jne
mov
inc
push
repz
jae
inc
adc
cmp
xor
bound
je
mov
dec
roll
add
jmp
out
mov
or
xchg
rorb
jp
test
movsl
push
in
mov
adc
lods
add
sbb
pop
cwtl
xchg
adcb
xor
test
lret
pop
xchg
mov
fcmovu
jne
lods
xlat
test
adc
aad
dec
or
cmp
jne
leave
imul
mov
sub
in
fcmovnbe
mov
push
andb
in
add
add
push
add
leave
popa
subl
or
sbb
sbb
add
pushl
inc
jbe
clc
and
xchg
pop
push
sbb
sbb
loope
cmpsb
sbb
jno
lock
mov
jmp
xchg
push
into
add
lahf
stos
adc
jmp
xor
rclb
add
cmp
jl
or
lcall
or
je
mov
inc
jmp
movzbl
movb
movsbl
rcr
cmp
xchg
pop
mov
and
mov
or
inc
mov
leave
jne
pop
sub
scas
bound
rclb
adc
jge
sbb
push
push
add
pop
and
pop
push
mov
mov
push
add
cmp
ja
push
loopne
and
push
inc
inc
dec
arpl
rcll
lock
daa
addl
or
mov
insl
xor
add
xor
inc
mov
sbb
mov
mov
mov
enter
movsb
popa
sti
aas
bound
je
dec
and
add
enter
in
push
rcll
pop
insb
jnp
jge
loopne
push
jmp
aaa
xchg
je
cmp
ljmp
decl
jge
adc
pop
push
push
or
insl
pusha
push
adc
push
shll
ds
sub
inc
jl
out
pusha
mov
pop
add
add
and
adc
lret
mov
or
ljmp
jg
xchg
dec
sbb
ficomps
testb
mov
xchg
sub
mov
or
pushf
xchg
adc
ret
cltd
stos
clc
dec
testl
nop
add
test
add
xchg
mov
mov
nop
sbb
inc
or
out
xchg
and
xchg
jl
mov
enter
jb
push
das
mov
stos
out
mov
cmp
lcall
xor
sub
pop
insb
mov
xor
in
mov
jmp
pop
lock
jmp
lret
sub
and
and
or
jg
outsl
int3
repnz
inc
dec
in
mov
jle
xchg
idivl
adc
enter
nop
xor
and
jmp
cmp
and
inc
cmp
xor
inc
or
mov
sub
mov
aam
clc
js
mov
subb
cmp
jb
sbb
mov
inc
repnz
push
lea
cmp
mov
push
xor
jb
adc
jno
and
pop
adc
pop
addr16
mov
jae
imul
add
push
push
xor
sub
cmp
xorb
dec
pusha
inc
ljmp
push
inc
dec
jns
andl
rclb
mov
daa
dec
mov
mov
add
scas
bndldx
or
in
fwait
push
mov
add
jns
fadds
adc
adc
mov
cmpsl
adc
rcrb
les
clc
adc
js
add
addb
int
cwtl
xor
icebp
jbe
subl
mov
bound
mov
push
xor
xor
xchg
pop
into
jge
pusha
fsts
add
test
or
adc
xor
pop
daa
sarb
insb
out
add
add
cmp
push
sbb
rcrl
enter
push
push
push
xchg
icebp
shrd
pop
xor
or
fwait
roll
or
pop
cltd
mov
jecxz
xor
sub
fs
iret
dec
ss
mov
mov
xchg
or
mov
add
loop
mov
sbb
mov
jb
cmc
adc
sbb
xchg
sub
js
repz
adc
add
add
or
add
addb
jmp
mov
repnz
push
or
shll
xchg
test
pop
cs
fmuls
std
mov
hlt
push
xchg
rorl
loopne
add
or
idiv
movsl
jnp
xchg
mov
imul
xchg
add
xbegin
lods
aam
lea
mov
ret
sbb
and
pop
xchg
add
and
subb
sbb
add
and
sub
dec
mov
cwtl
test
adc
jnp
add
cmp
or
sbb
cmp
ret
or
imul
or
add
jmp
loop
push
adc
add
test
adc
mov
pop
stos
xchg
xor
mov
pop
div
mov
push
dec
pop
cmp
sub
mov
test
push
sub
cltd
xor
stos
push
arpl
cmp
je
loopne
sbb
push
les
cmp
pop
aam
les
sub
cmpsb
js
sub
shl
or
fs
les
pop
das
inc
hlt
in
or
push
add
clc
test
imul
shr
inc
push
jo
jecxz
xchg
sbb
add
ret
pop
subl
cwtl
or
sbb
pushf
xchg
arpl
cli
in
subl
dec
push
xor
mov
call
cmp
jl
scas
lea
jb
sarb
inc
test
hlt
add
sub
inc
fcmovb
pop
adc
insl
sbb
cmpsb
fcoms
mov
mov
dec
xchg
cmp
mov
xor
insb
adcl
pop
enter
rolb
jb
push
enter
outsl
inc
mov
xor
xor
addb
cmp
dec
sbb
push
lea
cmp
mov
adc
in
in
pop
ja
jnp
add
xchg
add
cmp
daa
sub
aam
jmp
xor
scas
push
rol
or
dec
xchg
call
daa
push
mov
adc
addl
sahf
xchg
mov
xor
pusha
xor
lods
nop
xchg
or
push
dec
nop
clc
inc
das
je
jge
out
mov
mov
xor
imul
xchg
or
jbe
das
mov
push
sahf
sub
and
adc
dec
in
imul
es
fdivl
xchg
inc
movsl
jno
pop
mulb
and
sbb
mov
push
or
mov
dec
and
mov
fs
mov
or
cmp
push
lea
sbbb
push
add
cmp
pusha
addr16
movsl
push
loopne
mov
fmuls
out
xchg
xchg
pop
clc
push
sbbl
mov
imul
add
das
in
cmp
push
subl
add
ja
mov
dec
ljmp
ds
in
adc
cld
xlat
or
dec
inc
add
inc
or
inc
aaa
inc
das
test
push
popa
sub
cli
add
pop
add
fiaddl
stos
icebp
push
outsl
inc
add
add
jmp
fiaddl
mov
xchg
repz
pusha
push
push
push
cmp
aaa
xor
add
mov
and
jne
fldl
push
test
notb
data16
cmp
insl
adc
adc
jne
daa
bnd
adc
out
jns
hlt
jne
or
jne
or
adc
xchg
push
mov
nop
push
xor
std
dec
jb
pusha
js
pop
mov
and
aad
pop
or
push
fists
inc
sbb
add
aas
pop
sbb
mov
dec
gs
addb
xchg
aad
jle
push
jl
mov
cli
pop
push
pop
je
pop
hlt
lea
sbb
lea
pusha
mov
inc
imul
nop
xchg
data16
movsb
xchg
cs
ret
and
xor
sub
sub
push
fsubrl
xchg
iret
dec
into
or
stc
int3
rcll
push
loope
push
std
jae
fstl
orb
cmp
fdivrl
adc
call
push
int
shrb
fstl
mov
loopne
fcomp
loopne
rclb
popa
adc
adc
mov
add
pop
pop
push
mov
jl
cmp
enter
mov
mov
push
ss
jl
int3
insb
cmp
aas
pusha
pop
inc
loopne
or
and
and
jecxz
loopne
push
xchg
insl
mov
imul
imul
orl
pop
dec
lcall
int
xchg
test
cmp
mov
fs
jne
mov
mov
lods
and
fistpll
fmul
fs
sbb
ficoml
mov
je
push
pop
add
pusha
jmp
mov
push
fs
pop
bound
adc
jg
pushw
push
shlb
add
add
fisubrs
jbe
call
or
aam
push
jmp
ror
inc
adcl
js
jns
sub
js
test
mov
inc
jb
add
flds
stos
dec
pop
inc
int3
add
adc
gs
push
repnz
and
mov
xchg
inc
xlat
aaa
push
mull
pop
push
or
shrb
sub
xchg
adc
fucomp
das
rol
xchg
xor
insb
inc
popa
cltd
pushl
push
and
xchg
sbb
sbb
call
or
das
cmp
sbb
dec
mov
or
sarb
mov
or
sti
jnp
sub
dec
fisubrl
hlt
imul
idivl
inc
sub
clc
add
xchg
mov
dec
lods
add
push
cmp
cmp
in
and
jmp
sbb
dec
shlb
jle
pop
push
xor
xorl
jmp
and
xor
fisttpl
das
pop
cmp
sbb
xchg
push
cmp
add
push
dec
and
repz
cmc
xor
in
sbb
cmp
and
sbb
and
and
pop
inc
adc
push
arpl
or
fs
adc
push
cltd
xlat
leave
mov
pop
pop
xor
push
dec
push
cltd
nop
sbb
xchg
or
push
adc
mov
sbb
push
mov
or
test
jno
test
pusha
sahf
mov
bound
inc
or
adc
xor
and
outsl
add
in
sub
out
mov
cmp
sbbb
popa
xor
jae
cmpsb
mov
jae
das
sti
and
cmp
mov
cmovbe
push
enter
pop
int
mov
add
mov
icebp
sbb
xor
dec
push
push
lock
jmp
xchg
jecxz
inc
xchg
imul
andb
mov
jo
jo
push
adc
or
pop
adc
cmp
scas
movsb
fbstp
and
js
jg
dec
das
jae
je
push
mov
pop
lea
ficoms
jnp
aam
inc
sbb
fsubrl
sbb
mov
pop
insl
mov
adc
stos
lock
and
adc
adc
lods
test
or
add
mov
aas
dec
rorb
or
pop
pop
push
cmpsb
out
or
loopne
or
adc
add
jmp
push
hlt
xor
jnp
push
les
dec
push
pushf
add
imul
pop
ret
xchg
scas
mov
add
jne
jne
in
inc
dec
sub
add
xchg
sub
daa
stc
out
js
loopne
mov
mov
xor
aam
jne
sbb
adc
lea
jge
jecxz
sbbl
mov
popa
push
xchg
mov
paddusb
inc
mov
pop
inc
std
xor
push
shrl
and
es
scas
mov
mov
loopne
cmpl
mov
ret
mov
ficoml
adc
and
pop
and
jmp
pop
pcmpeqd
test
imul
cmpb
jno
jno
js
in
leave
fsubl
sbb
aaa
into
mov
xchg
test
push
inc
add
movsl
add
aaa
adc
add
adc
pop
and
sbb
cmp
add
push
jne
pop
jecxz
mov
inc
cwtl
pop
sti
ja
mov
and
jne
mov
rorb
ljmp
xor
or
mov
xchg
adc
inc
add
push
xor
bound
xor
xor
or
into
in
adc
loopne
dec
ret
daa
add
add
fdiv
push
mov
movsb
shll
fisttpl
es
popa
filds
dec
xchg
mov
rolb
add
xchg
add
js
cld
cmp
pop
push
jmp
push
pop
in
and
addb
ret
mov
in
les
mov
dec
pop
sbb
lods
and
sub
pop
push
add
orb
inc
jecxz
inc
or
mov
arpl
add
sbb
push
sub
stos
loopne
cmp
dec
bndstx
mov
inc
mov
jmp
out
add
xor
sub
adc
fimull
push
mov
inc
cmp
dec
cmpb
fdivrl
mov
lcall
inc
bound
or
and
divl
or
push
fildll
ficompl
test
aas
sub
leave
cmp
ljmp
jge
adc
add
movsb
incb
push
mov
push
lds
xor
add
or
sbb
addr16
or
push
movsl
or
jecxz
push
dec
xor
das
test
in
add
mov
dec
add
xor
notl
aad
pop
add
loopne
add
sub
hlt
test
shll
or
or
in
or
aas
mul
pop
add
push
add
lods
lea
out
mov
inc
jo
mov
push
lret
addr16
sub
and
mov
xor
push
je
movsl
ja
or
xchg
and
or
mov
xor
cmp
je
or
jbe
ret
in
rolb
sbb
and
clc
sub
lods
pop
sub
cmpb
ret
lock
jae
movsbl
outsb
clc
cmp
ja
inc
mov
mov
dec
rcl
or
sbb
bswap
push
das
add
lea
and
jmp
call
add
or
jecxz
or
add
inc
sbb
pop
incl
cmpl
xor
pop
test
cltd
and
add
sar
add
dec
test
clc
xor
mov
pop
ss
cmp
jecxz
or
inc
jne
enter
adc
mov
mov
dec
jne
mov
ss
xor
lret
test
pop
scas
and
push
dec
icebp
insl
add
cmpsl
shrb
sar
jp,pn
jge
push
shlb
ret
or
inc
bound
inc
adc
sbbl
adcb
jl
movsl
add
jmp
scas
mov
or
cmp
pop
add
add
push
rorl
mov
js
in
jmp
out
add
fucomi
or
arpl
rolb
shl
dec
sahf
xchg
out
mov
cld
xor
push
ret
or
jecxz
adc
pop
scas
and
cltd
add
dec
xchg
mov
cs
dec
pop
xchg
cmp
xor
adc
mov
fisubrl
or
insl
fcomps
movsb
sbb
cld
cmc
pop
in
push
xor
push
jnp
lods
mov
or
pop
sbb
fwait
xchg
mov
xchg
jnp
xchg
or
or
inc
xchg
and
fisttpl
hlt
add
nop
je
add
shrl
mov
mov
push
clc
inc
sub
lahf
xor
add
cmp
or
xor
ds
lahf
cmc
out
fcomps
pop
test
xchg
mov
mov
add
xchg
inc
mov
lock
add
push
push
jge
es
add
push
and
test
pusha
and
push
stos
xor
imul
call
sbb
cmp
cmpl
shlb
int3
pop
ss
jns
cmp
sub
test
int3
inc
inc
stos
shll
lods
adc
int3
xchg
pop
aaa
lea
dec
and
inc
jle
int
bound
cmp
lea
loope
xchg
and
push
and
out
sbb
movsb
je
push
pushl
or
mov
dec
aaa
test
pop
cmp
add
add
fbstp
movsb
mov
in
or
movsb
inc
cmp
pusha
js
cmp
jmp
dec
xchg
mov
mov
push
and
dec
sub
clc
adc
adc
das
push
shlb
lcall
add
and
cmp
jecxz
insb
popf
xchg
rcl
mov
lcall
aam
out
xchg
fcomps
pop
push
das
daa
jno
push
xchg
lret
or
movsl
sbb
push
sbb
mov
and
adc
aam
enter
imul
in
xor
push
push
xor
enter
sbb
mov
mov
xorb
push
cmp
cmp
and
lds
mov
nop
sahf
and
push
sti
push
cmp
pop
mov
cmp
arpl
add
int3
int3
add
jno
bound
mov
sbb
jno
cmp
sahf
sbb
jecxz
sti
push
pop
cmp
sarl
fldenv
repz
je
dec
das
or
fdivr
adc
rorl
inc
out
das
imull
das
pop
pop
jno
jge
cmp
cmp
scas
sub
xchg
pop
enter
add
xchg
test
sbb
or
sub
inc
imul
lock
mov
mov
rclb
add
xchg
dec
aam
leave
add
add
out
add
cmc
mov
clc
jl
stos
mov
imul
jge
sub
push
in
jp
sbb
sbb
je
cmp
daa
movsbl
es
push
call
ret
mov
mov
test
add
mov
test
jo
dec
out
test
sbb
sbb
movb
ret
and
adc
pusha
xor
add
jnp
rorb
sbb
nop
or
add
dec
mov
push
hlt
or
iret
sub
jmp
mov
sbb
inc
add
pop
pop
and
outsb
hlt
loope
iret
adc
mov
fcom
dec
sbb
les
subb
addr16
xor
add
insl
std
lock
in
out
sbbl
in
cmpsb
dec
push
es
add
call
dec
and
sub
add
out
stos
or
inc
inc
mov
faddp
jnp
push
pop
fwait
dec
add
imul
xor
shr
insl
icebp
pushl
movswl
test
mov
push
jne
clc
pop
mov
and
fiadds
sub
movsl
xorl
mov
pop
mov
pop
mov
inc
or
xchg
add
push
hlt
mov
sbb
mov
mov
clc
add
jg
pop
xor
decl
mov
mov
inc
mov
mov
cmp
push
or
dec
clc
addl
int
mov
cltd
sarb
sub
push
icebp
or
orb
out
lcall
add
insl
xor
mov
nop
and
and
add
cld
push
leave
push
xor
mov
clc
cmp
jne
pop
mov
mov
pop
cmp
into
inc
dec
and
adc
push
cmp
call
ds
push
sahf
pop
add
enter
xor
push
shlb
mov
xchg
add
test
lret
in
sbb
push
in
enter
in
into
mov
push
int
hlt
test
les
dec
and
es
pop
adc
inc
mov
mov
cmp
push
enter
fldcw
daa
fbstp
cmpsb
lret
mov
or
add
mov
popa
and
and
or
xor
mov
xor
test
loop
dec
mov
pop
lahf
popf
inc
xor
and
adc
pop
orl
add
and
and
push
daa
or
sbb
push
sub
test
hlt
test
mov
mov
mov
mov
clc
jns
add
rclb
xchg
adc
lds
jb
cwtl
mov
or
dec
cld
stc
sub
ss
lea
cmp
jbe
add
sbb
cmp
jbe
mov
sbb
sbb
cli
enter
sbb
repnz
into
aas
insl
mov
insb
leave
or
cmp
int3
push
adc
divb
inc
dec
xor
xchg
mov
pop
enter
or
cmpsb
push
cmp
or
xor
daa
push
test
stc
push
incl
push
push
push
cmp
cwtl
inc
push
jnp
and
insl
test
jp
add
mov
shr
test
pop
ret
and
nop
arpl
adc
push
mov
in
lods
test
sub
stc
pop
jge
lahf
pop
sub
push
add
call
push
lock
cmpsl
sti
lea
xchg
mov
loop
push
push
xchg
or
sub
pushf
and
je
arpl
cmp
lods
mov
inc
push
mov
imul
jge
dec
push
dec
in
mov
into
push
and
int
and
loope
test
sbb
sbb
cmp
loopne
popf
aas
jb
movsl
addr16
inc
fwait
sub
add
repnz
adc
mov
dec
cltd
jge
mov
adc
shlb
fdivrl
shlb
loope
pop
shll
rorb
jp
and
mov
and
add
lods
jle,pt
cmpl
int3
mov
cmp
mov
scas
jb
out
test
push
adc
push
inc
enter
cld
or
add
out
and
sbb
jle
int3
es
jne
xlat
and
and
add
jno
rolb
push
mov
push
xor
je
nop
mov
mov
sbb
cmp
rcrl
fisttpl
push
loopne
mov
dec
jp
xor
inc
imul
ret
aas
int
cmpl
pushf
ret
call
test
mov
stos
pop
inc
fisttpll
fwait
int
scas
add
push
addb
and
rorb
sbb
ljmp
shlb
dec
pop
je
out
pop
fs
out
fdivl
mov
je
imul
aad
mov
outsl
xor
push
cwtl
test
mov
lret
or
imul
pop
adc
push
pusha
ds
push
nop
inc
out
mov
aas
cld
adc
dec
fwait
nop
or
pop
fidivrl
aaa
aas
es
rolb
sarb
cmp
mov
nop
dec
push
jo
fwait
jecxz
aas
add
jne
ret
cmp
adc
inc
add
sbb
push
std
leave
adc
or
sub
add
and
dec
sub
or
push
pop
je
jo
inc
sbb
test
mov
mov
adc
and
aam
insl
dec
xor
popf
sbb
or
or
push
ret
cmp
add
into
adc
nop
lcall
push
mov
and
pop
fldenv
out
int3
or
rolb
les
jmp
push
xchg
gs
fstl
lock
inc
incl
fwait
rolb
loopne
push
andl
xor
aad
dec
jmp
ret
xchg
pop
xor
jmp
push
inc
mov
adc
sbb
mov
or
inc
xor
push
jmp
push
cmp
pop
aad
add
inc
jne
xchg
push
push
lahf
imul
xchg
mov
push
pushl
addr16
rorb
add
sahf
add
pop
cmp
jbe
sub
sub
cmp
sbb
fcompl
sbb
xchg
rcrb
adc
pusha
mov
mov
lcall
shrb
data16
and
clc
bound
xor
push
xchg
xlat
mov
jne
mov
mov
gs
testb
pop
pop
mov
leave
or
inc
mov
shll
mov
mov
call
cmp
lea
sarb
lods
pop
add
push
adc
jnp
xor
push
call
cmp
sbb
xchg
pop
xchg
sbb
sahf
jmp
add
ds
ljmp
imulb
ret
movsb
aam
jb
xor
stos
add
ja
loopne
dec
out
shll
inc
add
adc
sbb
push
icebp
push
adc
inc
nop
lock
or
push
push
xchg
sub
aaa
mov
adc
or
pop
je
mov
adc
add
add
push
cmp
dec
and
lock
addr16
mov
sti
jb
and
xor
add
sub
add
je
jl
pop
and
pop
add
mov
mov
xor
xor
xchg
xchg
and
insb
mov
outsl
push
jae
lret
inc
shlb
sbb
insb
pop
jmp
mulb
lds
sub
jecxz
outsb
mov
adc
movsl
pop
sub
sahf
add
mov
push
sbb
cld
mov
loope
scas
pop
jne
inc
inc
xor
sahf
test
arpl
add
sbb
add
and
das
fs
movaps
test
or
sub
push
cs
or
pop
push
or
pop
pop
cltd
inc
data16
movsb
mov
dec
and
rolb
xor
cmp
jmp
jo
xchg
jae
jns
bnd
add
add
or
and
inc
adc
mov
or
data16
mov
sbb
mov
xchg
mov
pop
mov
add
sbb
je
mov
cmp
dec
icebp
jne
aad
test
insl
push
push
mov
ss
mov
xchg
sbb
lea
sub
mov
lcall
cli
add
imul
or
cwtl
int3
notl
test
loopne
inc
das
mov
and
frstor
sub
stc
sub
or
mov
jae
xchg
push
or
insb
rcrl
jbe
popf
rclb
pop
jecxz
ret
adc
jb
mov
mov
fcompl
or
lea
xchg
sti
sbb
inc
ret
sub
or
dec
sti
lock
mov
in
ret
xor
xchg
jmp
xchg
xor
pop
sbb
pop
dec
jp
xor
in
push
push
sahf
pop
cwtl
xchg
jecxz
lret
jp
pop
jle
jge
and
push
inc
popf
rorb
lahf
inc
and
inc
lock
pop
cmp
or
inc
loopne
pop
test
and
mov
xorl
int3
add
mov
ja
pushl
add
mov
iret
jle
adc
push
push
mov
add
sub
cmpsb
inc
fcoml
and
and
outsl
cmp
into
add
sub
gs
add
add
cmp
fs
sub
cwtl
add
jbe
xor
lea
iret
mov
dec
fdivp
sbb
xchg
scas
or
pop
lods
or
push
push
xor
jmp
add
or
pop
and
xchg
sbb
test
sbb
push
inc
clc
sub
or
mov
out
imul
add
ret
lcall
and
pop
push
sbb
xchg
lea
or
insl
ret
cltd
mov
push
pop
push
inc
adc
add
stc
mov
fisttps
mov
scas
repnz
cmc
pop
mov
jmp
add
mov
mov
fldt
filds
or
mov
cmp
add
cmp
je
cmp
jne
mov
sbb
add
sti
dec
and
pop
dec
lea
scas
mov
pop
dec
xor
fbld
or
cmpsb
push
jmp
testb
je
testl
fs
sbb
add
fdivrp
cmp
jbe
into
lea
mov
pop
pop
inc
cmp
je
sub
inc
jmp
inc
and
dec
je
xchg
dec
xor
pop
mov
push
add
ljmp
pop
or
push
clc
mov
rclb
jo
cmp
ljmp
sub
fs
adc
into
ret
cmp
lcall
xor
ficoms
inc
push
ja
sub
jne
pop
cmp
jo
dec
push
outsb
hlt
cmpb
add
mov
cld
xor
je
ficoms
xchg
aam
mov
mov
mov
enter
xchg
ss
cmc
pop
insl
dec
push
lock
add
inc
cld
insb
xchg
adc
rclb
jns
cmp
pop
xchg
xlat
movsb
or
arpl
and
xchg
stos
mov
in
mov
call
mov
fsubs
inc
fldl
pusha
mov
add
jae
insl
lock
inc
loope
sti
lahf
pop
shl
add
jmp
pushf
aas
insb
sti
and
test
repnz
in
aaa
push
cmp
js
fs
jne
xor
fwait
push
cmp
adc
incl
or
outsb
pop
jae
mov
jmp
jno
mov
dec
shlb
cwtl
jo
add
jne
pop
push
add
and
incl
inc
adcl
or
int3
cmp
rolb
add
and
cmp
out
out
pop
xor
and
es
sub
mov
jbe
sub
and
pop
or
jl
or
adc
shrb
stos
push
inc
test
jbe
loopne
stos
das
aam
cmp
jbe
and
pop
arpl
fcoml
adc
je
test
jne
sub
inc
adc
std
sub
jb
adc
adc
lods
mov
xor
adc
movb
inc
fcmovnb
mov
sub
inc
xor
xchg
mov
adc
and
add
std
push
mov
inc
and
push
or
stos
mov
adc
mov
add
daa
cmova
and
dec
inc
adc
cs
push
lcall
mov
push
push
lahf
pusha
add
push
mov
int3
lock
adc
mov
adc
mov
movsl
pop
aam
mov
push
je
mov
mov
push
inc
pop
out
push
add
insb
ret
lea
sub
scas
lret
jne
lods
mov
cmc
mov
cmp
push
mov
inc
sahf
jmp
xchg
imul
mov
inc
inc
xchg
enter
adc
out
jg,pn
push
cld
xchg
daa
cmp
addl
push
jbe
push
cmovs
cmp
int
call
out
sahf
int
jp
push
clc
into
inc
sbb
cmp
mov
pop
and
cmp
out
adc
movsb
push
push
popf
mov
pop
xlat
out
inc
mov
jns
pop
dec
pop
dec
mov
ljmp
sbb
insl
xor
fwait
xchg
cmp
or
push
andl
inc
sbb
or
cmp
fists
cltd
ss
push
aaa
jp
inc
adc
out
orb
test
jb
in
pop
inc
sbb
rol
cli
sub
push
push
movl
push
adc
dec
addl
std
or
xor
push
lahf
push
push
sbb
pop
inc
sbb
add
push
and
shl
test
enter
mov
mov
inc
xchg
mov
push
lods
test
add
mov
into
loope
shlb
lds
cwtl
mov
pop
add
int
or
data16
je
mov
mov
mov
mov
add
cmp
outsb
sarb
call
push
pop
push
lea
das
sub
mov
push
sahf
imul
pop
cmovns
dec
lea
pusha
rcrb
mov
pop
sub
push
mov
pop
push
inc
fdiv
jge
enter
fbld
testb
jbe
mov
mov
ja
gs
add
inc
inc
fwait
nop
mulb
or
repnz
pop
pop
movsb
inc
push
pop
nop
push
sub
ret
cmp
mov
push
or
cmc
sub
out
mov
push
movsl
xchg
inc
test
dec
push
cltd
mov
mov
push
ret
idiv
pop
je
test
dec
push
inc
inc
and
xor
push
fs
mov
or
shll
adc
mov
xor
xor
cmp
xor
lea
incl
sub
push
cmp
dec
or
mov
and
mov
incb
inc
push
lea
sbb
mov
stc
push
sbb
mov
lock
adc
mov
push
loop
or
add
sahf
mov
mov
push
aaa
les
movsl
pop
dec
mov
clc
push
add
add
pop
or
xchg
add
push
lret
push
xorb
mov
andl
aam
sbb
sub
jp
ret
or
sti
pusha
jb
into
or
pop
cmp
lea
adc
rcr
and
xchg
adcl
mull
movsb
mov
mov
rcl
adc
push
and
push
mov
orb
add
or
push
ljmp
inc
clc
mov
stos
push
jmp
enter
jbe
mov
push
movb
push
popf
test
push
cmpsl
inc
pop
xchg
addl
xchg
add
xchg
xchg
cmp
sbb
xchg
or
out
lea
or
jg
inc
loope
fnstsw
pusha
stos
adc
and
or
pop
xchg
cmp
push
xor
push
lea
fs
or
insl
and
cmp
movb
mov
cs
int3
insl
gs
jbe
adc
sbb
push
pop
lret
cmp
pop
clc
add
sub
mov
adc
mov
jmp
adc
sbb
ds
cwtl
cmpl
dec
push
in
cmp
ficomps
push
lret
test
and
jne
pusha
sub
add
aad
lods
ret
jge
adc
add
movl
add
js
push
cmpl
pusha
fidivl
cmp
xchg
in
andl
testl
testl
sub
rcr
fisubl
xchg
rolb
or
jmp
bound
and
jnp
fstps
cmp
mov
push
sbb
pop
cld
inc
mov
adc
jne
fstps
mov
jne
lock
setle
insl
inc
jp
aaa
adc
adc
iret
push
vmptrld
xchg
orl
adcb
adc
push
scas
popf
ss
adc
mov
test
dec
movb
pop
sbb
adc
mov
ret
jbe
cmc
xchg
jne
mov
icebp
and
lods
fwait
or
loopne
fsubs
mov
dec
xlat
ret
in
cld
out
push
aas
je
cmp
push
pop
jne
les
cwtl
dec
aam
cmpsl
jne
push
fcomi
imul
or
pop
jne
pop
call
sbb
add
xorb
insl
fstpt
jle
xchg
jne
jmp
xor
in
sbb
sub
into
mov
mov
aaa
push
adc
addl
mov
mov
pop
lea
fldl
add
je
mov
ficoms
in
sub
popf
jbe
inc
mov
push
sti
jno
mov
repz
jmp
mov
cmp
pusha
mov
jae
scas
jg
jp
push
sub
sub
add
leave
daa
jmp
xchg
add
xlat
xchg
mov
sub
decb
adc
cmpl
andb
daa
xor
out
add
js
mov
sbb
imul
add
add
inc
rcrb
or
fadds
ja
or
ret
push
add
push
push
ret
lahf
sti
inc
pop
or
push
mov
push
cmp
std
push
mov
lcall
clc
or
push
movsl
aas
add
or
inc
mov
mov
inc
sbb
sub
and
sahf
xchg
xlat
push
push
push
push
lret
in
mov
test
xchg
pusha
pusha
or
sub
adc
inc
and
xor
orps
ret
addb
les
xchg
insb
sbb
in
jbe
mov
dec
and
fbstp
daa
xchg
sarl
xchg
pop
rolb
sahf
sbb
push
adc
push
outsl
loope
dec
rcll
lret
mov
movsl
and
insb
sbb
adc
mov
stos
push
push
sbb
or
inc
adc
pusha
sub
sbb
pop
sub
sub
outsb
xor
test
fdivrs
adc
or
or
add
daa
cmp
jecxz
jnp
fdivl
leave
pop
xchg
push
es
pop
xorl
ljmp
sti
xor
push
loop
jmp
mov
jnp
dec
aad
aas
jp
push
pop
jmp
clc
adc
pushf
mov
je
into
or
or
and
add
push
pop
ret
xchg
xchg
push
or
lret
and
push
or
pop
push
pop
loope
je
lock
lcall
fstps
sbb
xor
sti
sbb
dec
es
sti
dec
jnp
sahf
test
dec
pop
push
mov
mov
or
sub
mov
fs
mov
scas
ret
push
nop
cmpsl
test
cmpsl
and
cmp
cmp
test
cmp
je
add
dec
cmp
mov
pushf
clc
fildll
je
mov
cmp
jne
ss
cltd
cmp
xchg
adc
loopne
add
adc
or
mov
adc
sub
sbb
in
push
test
nop
mov
cmp
and
sbb
int3
loope
lods
or
inc
mov
add
pop
icebp
pop
mov
add
lea
std
mov
push
adc
cmp
sbb
inc
inc
mov
jbe
push
adc
ds
jo
loope
jae
mov
xchg
push
push
lret
lods
add
in
fcomi
inc
and
lock
cmp
jne
or
or
push
ror
push
subb
pop
jbe
jo
dec
rorl
hlt
adc
scas
xor
lcall
test
jo
stc
mov
daa
xchg
xchg
mov
sub
js
inc
pop
lods
or
adcl
inc
sahf
scas
or
incl
cmp
inc
push
addl
push
icebp
and
and
push
mov
jmp
sarl
mov
int3
mov
mov
les
push
xlat
mov
cmpsl
sbbl
iret
inc
shl
pusha
je
divb
ds
outsl
mov
test
sbb
or
push
inc
add
rcl
sbb
adc
mov
jmp
xlat
sbbl
inc
cmp
fwait
sti
xchg
rorl
inc
hlt
mov
lock
or
pop
cli
hlt
and
push
cmp
mov
call
add
add
mov
cmp
jmp
hlt
movsb
pop
xor
add
push
pop
jb
test
das
les
iret
cmpsb
sbb
inc
mov
jecxz
divb
call
icebp
unpcklps
outsl
mov
and
mov
push
orb
jl
sub
clc
lock
popa
lea
jo
add
cmpsl
mov
jmp
pop
andl
int
and
push
lea
xchg
addr16
or
mov
push
push
rclb
hlt
or
test
and
xor
loope
je
pop
xchg
jo
add
test
adc
mov
nop
mov
inc
dec
mov
xchg
xchg
push
cmpb
loopne
gs
jns
out
add
mov
lock
and
and
mov
or
adc
movsl
movsw
sub
push
push
jecxz
xchg
and
and
mov
push
lds
sub
fsub
mov
inc
push
push
adc
pop
sbb
add
stos
adc
xor
push
test
pusha
es
mov
je
adc
bound
adc
dec
push
popa
mov
or
xor
call
clc
jmp
sub
push
push
jl
adc
push
bound
push
loopne
and
add
dec
push
fucom
addl
cmpsb
dec
rorl
jle
imul
jmp
roll
mov
and
aam
sub
push
dec
push
push
jo
mov
sbb
dec
push
mov
jne
jns
lock
xchg
xor
xor
xor
xor
sbb
or
jg
jbe
lods
mov
ja
jmp
mov
flds
xchg
cmp
cmpl
or
imul
and
adc
jl
out
stc
out
inc
shlb
adc
mov
jno
lret
stos
fmuls
fsubrl
and
loopne
inc
loop
push
shlb
ficomps
and
mov
push
pop
cmp
aas
push
jnp
dec
testl
sbb
nop
nop
rcll
xor
pushf
movb
lds
scas
pop
push
mov
adc
fs
js
je
mov
xchg
jo
out
inc
mov
decl
cmp
jl
jmp
pop
je
mov
inc
clc
sbb
add
sbb
or
lds
mov
xchg
mov
push
cmp
fnstcw
lods
cltd
sbb
sbb
xchg
aam
mov
sbbl
scas
fwait
sbb
xchg
pop
insb
xor
lea
mov
pop
in
push
push
inc
push
sbb
sub
cmp
rolb
dec
push
rep
ret
xor
xor
lock
xchg
add
jmp
clc
xchg
rclb
out
xchg
lods
dec
clc
inc
push
cmc
ds
adc
xchg
mov
and
inc
out
cs
test
push
push
xor
nop
jbe
iret
mov
or
jmp
push
incl
call
xchg
mov
or
add
pusha
dec
daa
lds
in
pop
int3
or
aas
ret
rclb
aas
cs
xchg
pop
sbb
mov
sbb
push
loopne
hlt
sub
mov
fdivrs
mov
add
adc
mov
pop
xor
gs
imul
mov
mov
hlt
or
inc
inc
fiaddl
mov
inc
add
es
cltd
and
in
sub
mov
or
mov
mov
jae
sbb
popa
pop
leave
hlt
xlat
cmp
pop
mov
cmp
icebp
adc
or
cs
fdivs
cmp
inc
mov
insl
pop
mov
jnp
jmp
push
adc
and
fmuls
add
cmp
repnz
sbb
xchg
fcom
mov
xor
mov
push
cwtl
jle
inc
add
and
pushf
inc
or
nop
lock
ds
add
push
push
push
add
rcl
add
xchg
mov
xchg
fstpt
lahf
add
push
jecxz
ret
pushl
push
fldenv
adc
sub
testl
or
in
rolb
or
mov
je
cmp
xchg
js
ljmp
add
sub
rcr
dec
sbb
data16
sub
sub
ret
pop
iret
stos
mov
mov
dec
popf
push
faddl
xor
movsl
mov
add
dec
loopne
and
or
bound
movsb
jnp
cmp
add
inc
sub
or
clc
call
push
and
dec
es
cmp
or
mov
xor
scas
sub
out
jne
ja
repnz
sub
or
jo
mov
cld
sbb
jmp
or
push
roll
stos
fistpl
cmpsb
add
ret
or
cmc
ret
lret
push
sub
push
loopne
sbb
jns
loopne
adc
add
xchg
xorb
push
xlat
data16
cltd
xchg
nopl
adc
into
push
test
subl
or
outsl
iret
or
pusha
cmp
adc
pop
add
ss
arpl
cmp
jns
xlat
or
popa
adc
pop
mov
dec
sahf
dec
in
push
incl
pushf
testb
adc
jbe
push
and
xlat
mov
push
pop
sbb
inc
lcall
scas
adc
adc
pop
add
push
mov
push
push
cld
rcrl
pop
inc
sub
adc
inc
adc
cmpsb
jge
pop
ret
add
xchg
bound
add
dec
pop
cmp
adc
dec
sbb
sbb
mov
add
cmp
and
mov
sahf
adc
lret
inc
push
pop
sub
les
das
inc
sbb
xor
sahf
xchg
mov
test
arpl
add
xlat
or
mov
add
jo
in
cltd
test
movsb
aaa
sbb
pop
clc
loopnew
out
lea
jbe
out
xchg
jne
iret
pop
or
pop
push
mov
or
or
ss
push
sbb
mov
or
scas
mov
or
or
mov
adc
aam
add
xorb
or
outsb
daa
and
mov
loop
jne
out
outsl
xchg
nop
xlat
aam
inc
inc
fmul
xchg
mov
push
lcall
mov
mov
pop
sbb
or
lret
rcrl
add
push
roll
jge
insl
jecxz
or
dec
das
fldcw
nop
movl
aam
imul
xchg
test
and
iret
pop
movl
and
or
dec
xchg
adc
xor
cmp
stos
xchg
dec
push
sahf
or
frstor
imul
test
xor
push
cmp
jp
insb
push
xor
mov
inc
xchg
faddp
mov
cs
fisubl
xor
mov
push
inc
mov
push
mov
or
mov
jp
adc
push
and
xchg
or
sub
repnz
aas
push
shl
cs
cli
sahf
outsb
mov
test
push
add
pushl
inc
cli
sub
mov
pusha
jnp
inc
or
mov
fcoms
xchg
mov
subl
jbe
sahf
push
cmp
jbe
push
push
enter
in
push
sub
dec
aam
int
ja
mov
and
push
adc
sbb
inc
jp
aaa
push
sahf
xchg
je
sub
push
rclb
mov
sbb
add
mov
dec
sahf
inc
ret
outsb
insb
pushf
push
jl
mov
xor
inc
aaa
sbb
mov
subl
adc
push
push
jecxz
push
jge
adc
mov
add
xchg
scas
test
pop
mov
jo
mov
repz
or
lea
push
cli
loopne
mov
test
mov
push
bound
test
add
pop
cmpl
push
adc
or
push
mov
sbb
mov
and
or
sbb
addb
adc
ss
mov
mov
out
frstor
or
pushf
push
xchg
pushf
mov
sub
ljmp
add
dec
lods
pop
mov
inc
xor
shlb
faddl
push
iret
push
push
or
push
xor
sub
bswap
enter
cmp
xor
cltd
jmp
sbb
cwtl
xchg
xor
movsl
push
faddl
shl
push
sub
mov
adcb
jmp
dec
sub
dec
jg
loop
dec
xor
out
les
lret
je
cmp
xchg
push
sbb
inc
lock
push
xchg
stos
mov
scas
jge
fstp
cmp
push
sub
and
jo
cmp
and
cmp
cmp
aaa
xchg
adc
adc
and
inc
movsl
out
sbb
adc
mov
loopne
jle
pop
add
push
and
dec
cmp
inc
loopne
push
mov
fidivrs
popf
xchg
addb
fbld
xor
mov
lret
pop
insb
sarb
dec
fdivl
ret
mov
mov
sbb
insb
mov
and
add
pop
sarb
jo
adc
sbb
push
dec
push
pop
sbb
adc
jmp
enter
mov
cmp
std
mov
cmp
push
ds
or
push
pop
rclb
pop
dec
xor
outsb
mov
loopne
xor
or
or
pushl
xchg
inc
cwtl
inc
leave
sbb
mov
or
insb
mov
ss
push
add
add
xchg
jne
adc
mov
cmp
cmpl
add
jmp
mov
mov
clc
push
mov
push
push
loopne
mov
add
cwtl
add
xor
push
pop
sbb
imul
jo
sub
movsb
cltd
cltd
push
shlb
mov
fwait
sbb
pop
sbb
and
and
sahf
add
pushf
mov
adc
jle
or
dec
icebp
or
add
or
mov
mov
test
stc
sub
lea
pop
dec
inc
mov
leave
xor
cli
ss
inc
and
jne
lock
cmpsl
sub
mov
push
dec
push
jae
lds
sub
loopne
pop
or
sbb
push
or
loopne
push
mov
hlt
fildl
or
sar
sub
cmp
addr16
stos
rcrb
jbe
sub
add
sub
das
movsb
push
int3
inc
jno
or
out
add
cwtl
pop
mov
lods
pop
negl
push
inc
push
sarb
push
rol
push
adc
or
test
and
call
rorl
mov
xchg
stos
xchg
lret
cmpsl
mov
out
lret
ljmp
dec
pop
cmp
pop
push
dec
push
or
xchg
xchg
jmp
hlt
je
int3
add
ds
jge
sbb
hlt
sub
push
mov
add
out
xor
add
dec
add
add
hlt
mov
and
sub
sub
add
loopne
fcomps
xor
lods
mov
loopne
sbb
mov
subb
push
pop
mov
xor
push
mov
push
sub
mov
lds
add
sbb
addr16
add
mov
adc
lret
shlb
arpl
lods
imul
sbb
adc
mov
dec
sub
adc
adc
dec
xor
stos
xor
leave
or
mov
and
fucomip
lods
cmpsl
mov
pushl
push
ds
push
push
xlat
in
cmpsb
ror
shlb
dec
cmp
aaa
xchg
addr16
inc
insl
js
scas
mov
sar
stos
xor
pop
xor
adc
fs
xchg
and
adc
nop
add
adc
leave
and
adc
sbb
xor
adc
adc
xchg
inc
adc
pop
add
and
sub
shll
icebp
push
inc
rolb
pop
mov
pop
aaa
jg
push
mov
cmpw
je
add
aad
imul
inc
clc
add
rcll
or
fcmovu
inc
pop
scas
fwait
lock
pop
adc
fbld
sbb
rorb
lret
add
mov
scas
sti
or
test
in
popf
mov
pop
shlb
jl
inc
imul
das
jmp
cmp
out
or
sbb
cmp
push
jo
je
xchg
jb
jb
cmp
pushf
ss
fmuls
movsb
andb
nop
roll
adc
mov
lea
stc
shrl
mov
inc
mov
adc
jp
inc
dec
mov
or
xchg
push
xchg
insb
jae
mov
push
add
xor
add
into
in
add
in
imul
out
sti
popf
push
cmp
push
add
pop
mov
cmp
iret
sti
pop
jmp
and
adc
dec
pop
inc
rsqrtps
mov
lea
aad
pop
xchg
jnp
popf
push
mov
push
mov
pusha
mov
jne
dec
lahf
jb
push
mov
rol
mull
push
mov
push
inc
movswl
iret
call
sub
mov
jnp
addr16
mov
push
mov
call
setp
add
pop
loope
or
fnsave
testb
mov
sub
pop
add
test
inc
and
jnp
ret
mov
sub
mov
popa
aaa
test
xchg
inc
insl
rcl
and
sub
cmp
fdivs
out
mov
inc
test
in
cmpsb
mov
mov
jg
inc
push
stos
mov
mov
push
adcl
or
xor
test
mov
mov
sbb
cmp
into
aam
test
clc
add
jecxz
cld
cmc
in
pop
xchg
repz
jmp
or
sub
dec
inc
or
or
stos
sbb
dec
push
inc
insl
loopne
inc
add
cmp
inc
xchg
rorl
dec
push
push
imulb
scas
pop
add
push
js
or
xor
pop
inc
dec
push
sub
sbbb
mov
pop
push
inc
out
and
mov
fsubs
popa
push
repz
and
nop
ret
roll
mul
addl
xor
mov
push
pop
lahf
fwait
push
xchg
or
rorb
rcr
mov
xchg
pop
rolb
or
dec
jno
mov
sbb
addr16
xor
xor
and
mov
and
cmp
sbb
lret
test
adc
cmp
xchg
sub
adc
inc
or
lea
xor
or
repnz
cmp
jp
and
popf
dec
ret
mov
inc
clc
fwait
add
jno
mov
inc
test
cli
orl
xchg
test
idivl
inc
dec
adc
rol
push
push
scas
adc
xlat
jmp
addl
movsl
sub
mov
xor
cmc
les
xor
fsubrl
or
or
dec
push
pop
mov
orb
and
rorl
jmp
or
decb
inc
mov
lret
vsubpd
fidivrs
xor
imul
push
mov
movmskps
inc
outsl
stc
adc
pop
imull
mov
dec
jp
xchg
rorl
lea
mov
xchg
ret
rcll
dec
push
aaa
or
or
das
daa
not
andb
adc
sub
dec
test
xchg
pop
into
ror
ret
in
mov
sbb
or
aam
jne
xchg
mov
jmp
pop
out
sub
add
push
bound
test
sub
sbb
xor
xor
inc
push
push
lea
loop
push
xchg
mov
sub
mov
sbb
js
sbb
outsb
rol
pop
dec
push
stos
add
andl
adc
and
inc
mov
pop
mov
cwtl
sti
cmp
loope
rol
fisttpll
pop
jne
mov
mov
cmpsb
mov
daa
xor
sub
mov
jl
pop
js
cmpsb
lea
add
push
pushf
push
push
es
xchg
jns
es
xor
inc
addr16
dec
jmp
arpl
mov
inc
adc
inc
nop
push
push
clc
test
add
mov
roll
dec
xchg
push
jmp
inc
adc
pop
inc
test
imul
or
std
adc
push
aad
rorb
movsl
mov
dec
sar
sahf
add
ds
negb
aaa
cmpsb
or
add
xor
test
rolb
pop
add
push
inc
test
loope
dec
add
jl
inc
xchg
jae
shlb
add
xor
fldl
adc
or
cmp
cmpsl
cltd
xchg
mov
jmp
xchg
dec
nop
pop
in
or
dec
fldl
xchg
stos
test
and
jmp
nop
fstps
or
aad
cmp
mov
les
scas
add
je
dec
leave
or
repnz
dec
sub
jmp
inc
xor
push
cmp
pop
add
push
mov
inc
rcrb
ret
adc
mov
adc
or
je
inc
cmc
xor
popa
in
les
jp
add
mov
push
pmulhw
mov
adc
mov
xor
inc
fcmovb
sbb
or
pop
lahf
add
or
sub
fs
add
outsb
js
notl
push
fistps
add
loopne
loope
jg
adc
dec
cltd
iret
into
nop
pushl
hlt
stos
add
and
pushf
pop
pusha
add
call
push
inc
andl
mov
cmpsl
xchg
sub
in
push
pop
sub
daa
or
aaa
jb
shrl
adc
js
pop
xor
sbb
jns
or
add
pop
sub
in
add
sbb
lods
or
sub
or
add
prefetch
mov
pop
inc
insb
mov
std
cmp
inc
test
movsb
sbbl
add
and
cmp
jb
testl
rorl
or
inc
mov
mov
pop
cwtl
and
xchg
pusha
jecxz
scas
xor
push
inc
incl
in
pop
movsl
push
je
cwtl
xchg
and
inc
cmp
jbe
sbb
nop
mov
andb
mov
and
jbe
stc
xchg
nop
out
xchg
movsl
lret
inc
outsb
or
test
xchg
add
lods
xor
ret
add
add
sub
pop
mov
xor
mov
pop
dec
mov
jae
ja
add
cmp
je
cmp
or
shrd
pushf
sbb
xchg
sbb
clc
push
push
push
adc
xor
addl
pop
add
outsl
lea
cmp
inc
and
cmc
std
cmp
pop
and
inc
lds
nop
add
and
xor
test
or
int3
pop
cmpl
int3
push
or
sbb
add
inc
dec
pushf
and
jae
sub
or
ret
sbb
adc
addl
inc
ja
jecxz
jmp
in
mov
and
fisubrs
mov
xchg
notb
pop
subb
inc
adc
lahf
cwtl
les
sbb
ret
data16
sbb
testl
aad
sbb
ds
adc
xlat
cmpb
data16
mov
mov
cmp
inc
imul
push
jns
mov
clc
jne
mov
push
test
cmp
dec
or
mov
nop
sbb
inc
cld
cmp
stos
test
rolb
mov
movsb
nop
dec
fcoml
xorl
mov
hlt
inc
scas
xchg
inc
hlt
jns
push
add
sbb
lds
cli
sbb
sbb
mov
add
pop
adcl
jae
rclb
les
lret
and
mov
fsts
sub
pop
push
js
fistl
cld
or
loopne
loopne
fnstenv
mov
sbb
push
mov
stc
repz
cld
fcom
sbb
push
jecxz,pn
sbb
push
nop
out
mov
push
cmp
mov
inc
aaa
data16
in
jno
or
aaa
test
mov
ret
mov
cs
dec
sbb
push
fs
xchg
inc
call
mov
shrl
hlt
neg
sbb
and
bnd
movzwl
sti
sub
push
adc
les
mov
jp
test
add
or
test
adc
add
in
pop
xor
add
mov
fcmovnu
arpl
xor
mov
insl
loope
or
and
mov
dec
in
mov
add
clc
idiv
push
cmpl
jne
cmp
jbe
or
jne
push
xorb
jno
pushf
cmp
data16
mov
std
cmpb
data16
mov
pop
push
push
xchg
popa
mov
std
push
inc
cmc
jmp
sbb
mov
addl
push
xchg
lcall
sbb
adc
sbb
and
divb
cwtl
sbb
dec
test
push
pop
jne
add
push
mov
lea
inc
rolb
inc
sarb
negl
jg
vmread
or
add
dec
mov
push
sysexit
or
and
and
jo
or
in
xor
jne
and
xchg
rolb
bnd
push
mov
ret
jnp
and
push
nop
add
je
andl
pop
in
bound
add
mov
ficoml
dec
aas
out
or
sbb
cmp
cs
sbb
mov
inc
sbb
inc
jg
xor
or
cmpl
xor
add
mov
out
mov
inc
loope
add
mov
outsb
pushf
out
push
pop
ret
test
xlat
sbb
xor
push
mov
rorb
sub
add
movsb
push
inc
clc
mov
insb
lock
inc
clc
push
or
mov
jmp
and
add
adc
push
aam
lret
dec
fs
addr16
cmp
jae
inc
fs
cmp
or
dec
xchg
ljmp
sub
inc
jl
ret
add
lahf
les
in
inc
sbb
leave
mov
pop
mov
jb
push
jae
insb
cmp
lods
pop
add
inc
testb
cmp
fcomps
and
cmp
mov
cld
wbinvd
int3
ficomps
je
jle
loopne
cmp
add
daa
jmp
push
decl
cltd
push
push
mov
movsl
mov
outsb
sub
fwait
mov
add
sbb
int3
inc
sahf
xchg
add
outsl
mov
inc
rorl
add
dec
pushf
add
loopne
popf
call
into
hlt
xchg
mov
jbe
testl
or
sub
mov
mov
pop
sbb
sbb
and
test
add
dec
hlt
mov
imul
js
rclb
call
arpl
sub
cmp
add
mov
and
scas
sahf
movsl
fsubl
xchg
mov
and
jge
cwtl
ds
dec
dec
call
gs
packsswb
inc
mov
je
or
xor
adc
cmp
cwtl
or
push
sbb
ret
add
pop
mov
pop
lcall
dec
add
sbb
ss
pop
jl
push
and
jge
leave
adc
push
mov
jns
and
mov
xchg
hlt
xor
adc
and
lods
loopne
xchg
inc
sub
mov
xchg
push
push
mov
and
rcr
mov
ret
or
je
les
push
sub
aaa
mov
xchg
inc
jg
aam
push
in
in
jno
dec
xchg
or
out
mov
dec
mov
aam
pop
je
iret
fcomps
add
and
lods
push
inc
fcoml
push
jle
and
mov
xor
adc
push
sahf
xchg
sti
or
and
das
or
sbb
mov
adcb
adcb
lea
mov
fidivrs
fdivrs
cmp
inc
jle
push
push
in
mov
xor
jns
cmp
xor
mov
or
and
adc
fisttps
rcl
ret
mov
pop
or
xchg
pop
jae
push
add
sti
jb
mov
mov
mov
enter
jo
push
test
lea
arpl
fistps
shrl
add
xor
outsb
add
push
sti
dec
mov
cmp
sub
cmp
add
pop
je
dec
adc
lock
in
jae
lea
ja
mov
aas
or
or
mov
jmp
inc
test
cmp
pushl
sub
sbb
test
and
daa
lock
std
pop
test
or
mov
lea
out
cmp
sbb
pop
push
pushf
jne
push
dec
or
dec
mov
jle
pop
je
iret
lea
les
in
sub
add
mov
stc
jae
loopne
or
add
inc
sub
pop
sbb
orb
dec
shr
push
sub
insb
sbb
and
or
sbb
les
add
mov
ret
rolb
gs
and
inc
sbb
add
sbbb
pop
push
sbb
sbbb
adc
mov
je
mov
pop
aaa
pop
imul
adc
or
adc
jo
adc
dec
shrl
inc
mov
sub
dec
and
sub
mov
ss
les
inc
pusha
imul
lock
lea
cmp
jle
movsl
sub
lret
or
jge
xchg
adc
jp
popf
mov
nop
jmp
imul
adc
popf
jecxz
mov
add
push
mov
add
xor
push
jno
dec
in
lods
or
outsb
or
pop
pop
pushf
lret
scas
adc
mov
push
mov
lea
shr
push
dec
or
sarl
inc
out
inc
cmpl
adc
xchg
cmp
push
lcall
inc
and
xchg
or
data16
xchg
add
push
add
or
iret
adc
pop
pop
inc
jae
mov
je
dec
add
adc
xor
xor
les
adc
adc
repnz
jmp
andl
movb
fcoml
arpl
xor
daa
or
fwait
jnp
test
addb
mov
dec
mov
mov
clc
bnd
mov
notb
cmp
push
fidivs
add
jb
push
jae
lea
push
sub
add
and
xor
xor
xor
es
ja
or
hlt
lods
lret
ret
shlb
or
pop
mov
mov
cmc
loopne
jge
lods
shll
incb
cmpb
xor
fnstenv
inc
jmp
inc
jmp
xor
xor
cmp
adc
ficoml
insb
testl
sub
inc
cltd
mov
add
adc
sub
sub
out
push
mov
sub
jp
mov
insb
testb
div
cmpsb
enter
flds
push
cmc
dec
mov
frstor
rorl
inc
xor
out
push
sti
sbb
push
push
mov
pop
repnz
mov
push
push
adc
out
imul
xchg
inc
cmp
mov
pushf
mov
adc
push
pop
xlat
push
cmp
or
aad
xor
add
push
mov
pushf
cmp
adc
leave
adcb
nop
cltd
or
sub
int
or
scas
divl
cmp
jge
outsb
fstpt
dec
cmp
xchg
inc
mov
and
dec
and
jb
inc
fsubrs
insl
test
cli
rclb
jnp
insl
test
mov
cmp
sub
push
inc
popa
sti
inc
scas
or
add
es
dec
add
mov
cltd
and
push
sbb
add
sahf
clc
and
xchg
push
adc
out
cli
mov
inc
out
std
cmc
imul
test
out
push
sbb
bound
test
pop
adc
ja
push
cmpsb
imul
imul
mov
sbb
popa
adc
and
inc
add
repnz
adcb
push
jbe
inc
push
stc
and
add
push
sbb
movsl
sbb
lea
add
adc
loop
mov
rcrl
inc
xchg
jo
and
mov
ds
adc
push
cmp
mov
add
jmp
das
inc
sbb
imul
lods
inc
adcb
sub
lock
push
pop
pop
pop
sbb
ja
cs
xor
loopne
lds
dec
addr16
xchg
add
add
jb
adc
inc
pop
imull
xchg
or
cmc
test
lret
nop
xor
jbe
cmp
dec
loop
ret
pusha
std
xchg
xor
mov
daa
mov
rcll
loop
inc
js
jg
pushf
mov
dec
xchg
pusha
jo
xorl
movsl
shrb
pop
imul
pop
and
rclb
add
data16
ret
ja
adc
cmp
and
jecxz
or
lret
cmp
push
nop
repz
rcr
adc
and
push
jl
mov
mov
sub
dec
inc
pusha
pop
test
pop
adc
or
mov
cmc
pop
push
imul
cmp
add
mov
sbb
fdivrs
mov
jae
ja
std
or
test
and
push
pop
pop
sbb
xor
pop
or
mov
mov
leave
jae
rol
push
pop
jnp
add
lahf
mov
out
lret
in
mov
pushf
push
add
fimull
inc
xor
les
pop
fs
push
push
scas
dec
inc
xchg
inc
push
roll
jnp
pop
sub
clc
addr16
inc
and
fsubrl
jle
jne
mov
pusha
jne
das
lea
and
xchg
add
push
das
add
lock
das
mov
fwait
and
clc
inc
das
and
fildl
ret
pop
dec
fdivs
sub
lock
aas
push
xor
adc
jbe
inc
cmp
mov
fimuls
and
and
sahf
jbe
nop
shrb
pop
cli
enter
ja
daa
inc
and
add
mov
push
add
mov
mov
out
mov
cmp
test
stos
adc
adc
pop
inc
push
cld
adc
or
int3
sar
enter
or
ja
fs
and
or
notb
iret
inc
mov
les
push
mov
or
leave
push
or
ret
ret
sub
fmull
inc
test
mov
pushf
out
ds
push
pop
and
popw
scas
adc
ja
ljmp
dec
fnsave
xchg
adc
data16
jnp
mov
mov
mov
jo
int3
or
add
pushf
inc
mov
cmp
fwait
ret
xor
pop
andl
out
dec
hlt
cli
mov
cmp
js
xchg
dec
test
jg
mov
add
xchg
jp
or
cmp
or
add
ss
pop
push
mov
in
mov
xchg
dec
cmc
js
jnp
push
cmpl
push
inc
cmp
mov
add
ds
jmp
cmp
xor
mov
push
push
arpl
daa
jo
sub
push
arpl
outsl
sub
add
push
adc
mov
mov
test
sbb
bound
pop
cmp
xchg
andl
leave
in
sbb
xchg
ret
jl
subb
loope
test
movsl
jb
loopne
fsubl
push
sbb
push
push
dec
dec
mov
mov
aam
and
adc
mov
lock
add
xchg
rorb
addr16
pop
sbb
stos
int
push
shrl
push
call
and
out
das
mov
pop
jle
mov
movsl
movsl
addl
push
insb
sub
aaa
and
in
pop
push
mov
mov
mov
lret
or
pop
sub
ret
xor
sbb
push
pop
or
lea
es
in
stos
or
mov
inc
jmp
jge
ret
rclb
push
cmpsb
mov
sub
mov
ret
aas
or
or
ret
push
and
push
adc
fs
sbb
cmp
ja
fnstcw
pop
dec
cld
push
adc
cld
js
in
cmpsl
lods
mov
insl
cmp
dec
cs
sti
dec
clc
add
push
push
xor
lar
jmp
cmpsb
jecxz
jne
int3
add
clc
shlb
cs
sub
pop
fs
jecxz
push
sbb
clc
popa
and
sub
mov
dec
rclb
mov
and
pop
inc
add
jge
xor
mov
cmp
js
popf
sarl
not
imul
es
adc
mov
negl
add
pop
mov
lods
sbb
adc
cltd
into
sbb
gs
lods
out
arpl
push
lea
add
test
inc
adc
and
rcll
or
aad
loope
mov
mov
hlt
xchg
inc
in
sub
push
sub
push
dec
jmp
add
inc
or
mov
lahf
mov
jg
test
ja
add
dec
sbbb
loope
adc
je
jno
scas
xor
dec
jne
pop
fs
push
fcomps
cmp
test
add
out
inc
or
push
in
mov
adc
fidivrl
inc
scas
jbe
mov
cwtl
frstor
into
add
mov
mov
clc
add
xchg
negb
push
cmp
or
in
push
call
das
outsl
push
xor
cmp
dec
inc
sub
js
dec
cwtl
jl
mov
leave
cmpsb
mov
adc
xor
xor
lea
xchg
jl
ss
stos
int3
sub
inc
jmp
add
loopne
pop
adc
lret
iret
push
lcall
adc
arpl
es
add
jmp
loopne
fstps
adc
add
test
out
mov
dec
inc
and
orl
fdivs
mov
inc
mov
incb
mov
sbb
xchg
mov
rcll
dec
fwait
out
gs
scas
clc
call
sbb
inc
jle
add
outsb
adc
movsl
aam
jo
scas
in
movsb
fst
jmp
xorl
ret
mov
or
add
subb
xorb
lret
and
adc
ss
xchg
mov
mov
cmp
ret
or
jge,pt
pop
cmp
or
add
pop
aam
orb
mov
inc
push
xor
pop
xchg
adc
jo
push
ljmp
sub
js
mov
mov
dec
push
or
roll
sub
or
daa
mov
dec
or
inc
in
je
jno
mov
xchg
mov
xchg
xchg
aaa
movsb
pop
test
roll
push
sahf
jne
add
push
dec
iret
mov
dec
xchg
inc
scas
push
push
add
xchg
mov
inc
adc
loope
add
loope
dec
sbb
in
xchg
lods
pop
loop
and
mov
les
sbb
mov
adc
jge
movb
lahf
cmc
int3
rcll
or
adc
call
add
mov
or
and
jl
fwait
xor
jno
and
jne
sub
pop
xchg
or
pop
mov
push
or
jne
sub
lods
dec
add
jne
xor
daa
add
outsb
ljmp
cmp
fists
lahf
cmp
ja
lock
mov
lea
inc
je
lret
push
into
add
clc
mov
sbb
add
jo
int
repnz
cld
push
dec
jnp
notb
popa
inc
add
mov
dec
add
stos
pop
ficoml
push
sti
loope
fists
movsb
inc
mov
std
sbb
fdivrl
push
jnp
aad
inc
xor
sarb
sub
mov
mov
ds
pop
mov
fs
adc
repz
mov
mov
jp
lods
adc
add
out
push
fdivl
enter
pop
mov
mov
push
dec
scas
lcall
inc
inc
fbstp
aam
pop
mov
jg
daa
cmp
and
out
sbb
imul
sub
rcll
xchg
movsb
cmp
push
jmp
cmp
sarl
rorb
insl
roll
loope
cmp
pop
sbb
cmp
xchg
flds
sub
and
and
inc
jo
mov
mov
orl
fcoml
sahf
xchg
add
andb
andl
mov
cmp
in
ret
cmp
jne
test
cli
or
pop
sub
sub
add
push
jae
push
add
out
repz
push
je
xor
imul
sbb
dec
insb
jne
mov
cmp
scas
dec
jno
fs
rclb
rolb
mov
inc
mov
pop
sbb
jo
gs
or
je
pop
add
or
jne
lods
adc
adcb
nop
mov
cmp
pop
addl
push
data16
add
and
xchg
cmp
add
xchg
or
jnp
psubd
inc
cmp
cli
push
pop
cwtl
fdivrl
jl
add
sbb
mov
mov
xchg
ffreep
push
push
das
rorb
push
pop
sbb
test
out
in
push
cmc
push
xchg
jno
aaa
mov
pop
xor
rcrl
push
test
jno
lcall
add
fwait
icebp
add
stc
lds
mov
cmp
jne
or
or
pop
mov
loopne
pop
shll
jo
mov
push
mov
iret
mov
insb
pop
dec
dec
or
je
adc
inc
or
lea
xchg
lea
daa
shlb
lods
or
inc
mov
sbb
inc
xchg
insb
fcmovb
inc
sbb
inc
sub
mov
int
mov
mov
pop
pop
add
add
jae
push
add
mov
lcall
xor
mov
lcall
insb
xor
imul
push
add
orl
or
push
or
or
cmpsl
mov
dec
int3
cmp
push
shlb
cwtl
xor
push
mov
cltd
pop
out
pop
xor
add
loopne
nop
in
arpl
out
or
movb
sbb
sbb
cmpsl
xchg
lods
pushl
cwtl
incl
add
fmuls
inc
jl
js
add
nop
je
insb
sbb
pusha
sbb
add
imul
insl
and
cltd
adc
leave
cmp
aam
and
cmp
push
push
mov
out
dec
pop
add
adc
pop
shrl
cld
jo
in
xchg
xor
sub
sub
and
push
adc
jmp
xchg
add
push
adcl
mov
fidivl
mov
push
data16
push
lea
add
xchg
add
cmpsb
cli
adc
cmpb
fcmovnb
add
movswl
cmp
xchg
aam
push
inc
sbb
or
out
mov
es
mov
mov
pop
or
jbe
push
js
jo
jle
mov
xor
push
add
dec
clc
push
lock
mov
cmp
push
inc
dec
and
push
fcoms
insl
inc
sub
lock
shl
ret
mov
sbb
xchg
add
add
aam
ds
ss
and
imul
je
xor
xchg
jne
das
xorl
cld
addl
pop
jne
orl
cld
mov
jne
imul
sub
data16
pop
dec
test
pop
jmp
and
xchg
fidivrs
adc
das
call
push
stc
fldl
sar
dec
jb
sbb
lods
jo
cmp
sub
sub
sub
add
imul
outsb
dec
les
mov
add
mov
stc
push
jne
loopne
mov
mov
sub
mov
clc
dec
jne
cmp
inc
icebp
data16
cmp
cmpsl
lods
xchg
jne
xor
add
fwait
jl
sub
lahf
jo
cld
ja
xor
dec
mov
and
cli
sahf
loopne
lcall
daa
xchg
lock
or
mov
xchg
sbb
enter
adc
sbb
into
dec
aas
clc
lods
push
mov
add
lret
popf
movsl
sbb
mov
mov
or
cli
out
fidivrs
pop
dec
adc
add
sahf
xor
mov
push
sub
or
dec
lret
jle
add
dec
dec
adc
nop
pop
inc
sbb
jno
pop
cmp
xor
rcll
xorl
sti
insl
cmp
xor
jb
add
sub
sub
xchg
test
shll
or
and
push
and
sbb
call
dec
cmp
mov
outsb
dec
jb
sbb
movsb
sbb
lea
xchg
mov
stos
bound
pushl
jo
and
sbb
jno
orb
mov
outsb
or
lock
fwait
inc
data16
mov
cmp
notl
inc
cmpl
or
dec
add
gs
or
pop
and
insb
insb
out
ror
push
icebp
or
or
xor
cmp
pop
pop
icebp
nop
push
xchg
adc
inc
pushf
cmp
cli
je
or
pusha
popf
popf
add
or
enter
push
mov
or
ficomps
cmp
lea
mov
hlt
sti
loopne
outsl
lds
fwait
inc
and
cmp
push
jne
jg
nop
mov
mov
adc
dec
shll
lock
enter
cld
lock
test
ljmp
fistps
adc
sbb
jp
inc
ja
jo
lods
xchg
mov
cli
fistpll
in
push
mov
lret
add
push
and
mov
rsm
mov
lock
sub
xor
cmp
xor
jne
movsl
pop
or
cmc
jecxz
and
pop
pusha
xchg
sbb
push
test
or
or
lret
push
ljmp
push
mov
add
fsubl
test
pop
mov
sbb
cmp
add
insl
mov
jne
adcb
jbe
mov
push
sub
jne
adcl
popa
adc
add
ror
xchg
fidivl
mov
adc
mull
adc
xor
aas
fldl
cmp
jne
outsb
fcompl
xchg
shrb
mov
mov
sbb
stos
or
test
es
cwtl
fidivrs
mov
sub
mov
adc
je
sbb
jle
cmp
out
push
and
dec
push
lea
push
mov
xchg
adc
sbb
sbb
loop
dec
push
or
popf
xchg
or
sbb
xor
jbe
data16
fcoms
jo
mov
rol
add
popa
xor
into
add
push
fs
pop
loop
pop
or
mov
pop
jno
mov
arpl
mov
xchg
mov
cmp
xor
fdiv
or
cmp
add
push
jbe
sub
sub
add
sbb
addb
cltd
sarl
test
cmp
fdivs
lods
sub
divb
add
dec
ret
jge
int3
mov
lods
dec
sbb
add
add
or
pop
rol
inc
pop
jbe
and
push
jmp
adc
or
mov
mov
shrb
mov
pop
out
ss
jmp
jmp
xor
xchg
push
sub
test
mov
mov
add
pushf
sub
push
jo
into
push
adc
xor
xor
and
and
mov
sbb
dec
mov
and
push
sbb
sub
ret
dec
jle
dec
js
lcall
push
mov
dec
mov
cmp
ja
pop
push
adc
fiadds
mov
mov
cmpl
pop
test
lods
out
add
push
fmuls
dec
jno
mov
sbb
pushf
push
and
sarb
push
inc
mov
cmpsb
add
sub
xor
idivb
pop
push
xor
and
fs
mov
out
call
inc
xor
dec
fdivl
arpl
mov
movsl
add
outsb
mov
jl
mov
mov
sbb
and
sbb
sbb
push
adc
sbb
add
jmp
fnstcw
xor
inc
adc
xor
ja
cs
push
or
scas
mov
xor
and
enter
popa
aaa
cmp
and
mov
repnz
ficomps
sub
mov
jne
aas
fisubrl
and
sub
and
sarb
or
divl
dec
and
push
cmpsl
in
adc
adc
cli
mov
jl
repnz
push
andl
sub
push
aam
inc
cltd
sub
fwait
jne
mov
cltd
or
outsb
adc
and
or
mov
push
or
inc
fstpt
adc
fsubl
leave
and
stos
sbb
or
pop
mov
call
popf
inc
jg
shrb
int
sarl
pop
arpl
push
adc
push
jbe
jo
or
js
cmp
sbb
jo
pop
adc
out
insb
test
push
xchg
add
pop
mov
push
add
aaa
jmp
mov
or
pop
push
orps
and
aaa
xchg
movsb
add
arpl
add
popf
cmpsb
dec
jge
cmp
push
imul
pop
jb
sub
in
and
pop
addb
xor
call
pop
mov
push
mov
rcrb
test
dec
sbb
ret
cmpsl
ret
jge
lret
xor
test
push
or
or
adc
jbe
pop
sahf
push
fs
xchg
push
mov
pushf
and
dec
int3
add
mov
minps
pop
pop
inc
add
sbb
popa
mov
push
jnp
xor
xchg
sbb
sub
testl
mov
sub
dec
lcall
cmp
add
sbb
enter
mov
loope
add
fwait
xchg
cmp
insb
mov
setbe
loope
adc
js
mov
push
cli
push
push
push
cmpsl
imul
push
loopne
sub
iret
aaa
add
aad
jp
or
cmp
and
add
test
and
pop
lds
cmp
adc
addb
inc
in
jmp
pop
and
xor
add
and
dec
je
mov
cmpb
fimuls
jbe
jmp
pushl
andb
dec
rcr
call
lea
push
orb
cmp
mov
mov
inc
test
subl
dec
cwtl
xchg
test
jae
test
or
or
mov
push
xchg
and
jge
cs
jl
andl
or
mov
push
sub
js
daa
fs
jb
cltd
addb
les
inc
jae
test
leave
and
jecxz
cmp
test
mov
push
push
int3
lea
add
jo
fisubrl
ret
cmpsl
shr
push
fcoml
jbe
inc
into
mov
cmpsl
sub
ljmp
adc
push
jno
pusha
adc
ret
andl
adc
rcrb
mov
mov
addl
and
add
lret
rcrl
je
push
pop
ja
out
sub
sub
xor
addb
pop
jmp
and
sbb
jno
mov
das
pop
bound
or
or
add
pop
or
outsb
fs
arpl
jne
jns
pop
pop
sub
xor
xor
mov
pop
lock
pusha
mov
das
push
sub
mov
pop
in
mov
sub
add
cmp
add
sbb
cmp
add
clc
inc
mov
sbb
mov
fdivl
cmp
dec
or
dec
jl
loope
xor
push
or
jmp
fistl
jo
add
dec
mov
mov
mov
lods
push
push
leave
adc
loopne
cmc
imul
ja
xchg
dec
testl
inc
add
jb
push
inc
mov
aas
mov
push
add
shrl
inc
push
pop
sub
xchg
add
xchg
into
outsb
movsl
sarl
aaa
add
pusha
and
sbb
inc
jle
rcr
movsl
push
push
pop
loopne
or
mov
jl
mov
incb
pop
add
loopne
jl
test
add
nop
sbb
shr
aaa
icebp
or
or
xchg
or
sub
xchg
mov
mov
mov
shlb
xchg
ret
nop
inc
mov
inc
and
out
xchg
shl
mov
inc
ficompl
or
lret
xchg
daa
mov
xchg
jo
stos
or
mov
lods
mov
add
dec
fwait
inc
fcmovu
add
push
pop
push
push
lcall
or
push
inc
push
cwtl
imul
cltd
idivl
mov
sbbb
jbe
out
sbb
add
add
sub
hlt
mov
add
push
ret
adc
and
push
gs
jb
pop
add
or
sub
je
mov
inc
fxch
pop
mov
jecxz
push
int
pusha
addr16
or
lcall
imul
filds
and
push
mov
adcb
adc
rolb
mov
xchg
fsubs
adc
aad
or
mov
sub
je
daa
js
cld
sbb
rcll
test
push
push
mov
adc
cmp
pop
mov
dec
jp
mov
loopne
test
add
sub
jo
xor
lods
je
xor
push
mov
push
mov
jns
push
test
cmp
popa
jp
sub
push
and
je
insl
sub
push
nop
sbb
mov
rcll
push
xor
or
cmpsl
notl
pop
jae
mov
test
insl
js
or
and
int3
dec
orl
mov
pop
pusha
jmp
cmp
dec
shl
jmp
cmp
xchg
addr16
cmp
incb
loope
pusha
jb
add
ja
adc
sbb
adc
dec
cmp
adc
sbb
cmp
jo
pop
cmp
jmp
cmc
pop
push
call
xor
add
push
add
push
rclb
xchg
adcb
out
or
addb
sbb
data16
and
aas
jmp
and
loope
cmp
lds
add
push
mov
int3
and
adc
push
cld
xchg
movb
mov
scas
jge
movl
jg
inc
insb
shr
inc
add
stc
ficoms
dec
adc
adc
and
call
jge
dec
sbb
mov
pusha
insb
std
mov
sbb
jmp
mov
adc
std
repz
mov
imul
ss
fsubs
stos
or
add
sbb
jne
sub
in
sbb
push
arpl
pop
add
inc
lock
sub
dec
dec
sbbl
dec
and
inc
leave
lret
push
int
fucom
mov
dec
add
xor
or
pop
adc
or
or
les
pop
ret
mov
xchg
mov
mov
mov
addl
pop
sbb
pop
adc
test
jle
adc
or
cltd
pop
out
mov
mov
insb
insb
pop
mov
adc
data16
xchg
or
push
add
pushl
dec
or
jg
inc
xor
inc
out
bound
inc
movsl
xor
je
in
add
adc
sub
adc
jno
sub
cwtl
adc
js
lret
push
loopne
add
jmp
push
jne
jnp
imul
push
pop
mov
add
out
mov
cmp
cld
arpl
or
add
mov
idivb
addr16
xchg
adc
mov
stos
ret
es
pop
sbb
mov
jo
sahf
repz
in
cwtl
sub
fs
dec
xor
mov
hlt
sti
sub
cmp
jl
dec
adc
shrb
pop
cmp
pop
cmp
or
push
mov
xor
jmp
cltd
push
mov
cmpb
dec
cld
fistpll
mov
jp
mov
inc
je
cmpsl
dec
pop
paddusw
fists
in
lea
mov
xchg
stos
pop
add
add
lret
cmpl
and
mov
or
adc
or
add
fwait
cmp
fs
xor
bound
adcl
cld
dec
jl
sar
inc
dec
movsb
push
adc
cmp
jnp
inc
adc
jbe
mov
les
pop
and
adc
cmc
mov
mov
pop
sub
andb
movsl
mov
repnz
pop
push
mov
dec
je
cmp
push
fbstp
dec
es
jbe
repnz
call
xchg
or
xchg
sets
push
fsubrs
ret
pop
pop
xchg
adc
cs
push
add
test
mov
xor
js
jb
add
and
adc
push
les
push
inc
xchg
cltd
add
into
mov
push
out
xor
push
pushf
in
mov
cmc
je
mov
lret
ret
xchg
lock
ret
shll
testl
lock
pop
dec
jle
xor
or
js
neg
ret
xlat
loope
dec
pop
dec
rcrl
jae
mov
cmpsb
add
insb
dec
add
loope
lock
shlb
pusha
stc
or
jae
push
push
rcrb
lret
jle
sbb
sbbl
sub
pop
and
and
mov
xchg
loopne
dec
push
xor
das
insb
es
in
pop
fwait
add
mov
and
shll
dec
int
sbb
sbb
push
cmp
ljmp
loopne
pop
loopne
mov
add
mov
mov
je
add
add
fcoms
jbe
and
sti
inc
clc
push
sub
daa
inc
insl
xorl
push
movsl
mov
in
dec
push
mov
cmp
push
push
repnz
xor
mov
femms
fisubl
rcl
adc
inc
sbb
adc
popl
mov
mov
subb
push
add
lock
jae
jnp
das
loop
rcr
daa
push
in
xchg
loopne
cmp
add
lods
cmp
cmp
lcall
push
or
lea
loop
cmp
and
sbb
movsl
pop
push
fisubs
mov
add
cld
push
or
and
pop
add
shl
dec
loope
adc
xchg
jbe
or
adc
add
pop
cmp
push
and
xor
pop
mov
test
cmpsb
jne
ret
outsl
decl
mov
cmp
ja
je
movsb
rcr
outsb
or
je
or
sub
xchg
call
das
adc
rorl
jns
push
sbb
cmpl
movsb
xchg
aaa
xor
scas
add
sbb
sahf
pop
add
popa
or
andb
mov
clc
push
jmp
cmp
adc
imul
xor
sbb
inc
push
inc
adc
adc
or
mov
or
add
adcl
push
push
dec
lock
xchg
movsb
dec
cmp
call
jmp
aam
inc
push
push
dec
je
stos
inc
mov
cmp
push
sub
lock
sbb
adc
or
push
pop
fcomps
and
pop
repnz
out
scas
pop
popa
mov
adc
cmp
andl
pop
aad
pusha
or
pop
popa
icebp
bound
adc
outsb
xchg
xchg
and
jno
dec
je
sub
jne
sub
or
pop
mov
in
inc
outsb
jp
mov
mov
add
ds
or
ret
push
adc
inc
push
int3
or
or
mov
insb
adc
insb
popf
das
dec
pusha
add
or
or
cmp
jmp
sbb
add
int3
and
push
inc
enter
and
xchg
inc
push
mov
shr
shrl
push
push
or
lret
sub
lods
rcr
inc
mov
lds
sbb
add
addr16
inc
loopne
fsubl
mov
add
xor
out
je
push
push
or
jmp
cmp
xchg
test
mov
jmp
xchg
push
rol
call
loopne
pop
jns
testl
pop
push
cmp
loope
imul
js
daa
push
or
flds
xchg
push
cltd
mov
sub
inc
mov
popa
aam
or
xchg
and
rorb
dec
lahf
jl
mov
cmpl
mov
inc
clc
and
jns
inc
add
add
add
cmp
pop
push
push
mov
pop
push
fs
jb
fsubr
or
and
pop
cmp
mov
add
dec
pusha
loope
jge
mov
mov
cmp
pop
cmp
js
lods
mov
add
sahf
push
mov
fsubrp
push
das
jno
inc
xor
int
fdivrl
pusha
push
ret
pop
cmc
fsubrs
mov
mov
adc
jmp
jbe
push
push
or
inc
shll
mov
fdivrs
xor
aas
xchg
loopne
sbb
mov
fimuls
mov
dec
sbb
adc
sbb
inc
dec
shr
xchg
push
xor
das
addl
inc
js
inc
sbb
mov
xor
sbb
aaa
jne
cmp
sti
test
mov
bound
adc
mov
jmp
cmp
rcrb
or
dec
inc
sub
fidivl
lock
jecxz
ljmp
movsl
or
push
out
adcb
sub
adc
popf
fimuls
insl
mov
pop
adc
jb
data16
jne
mov
dec
jecxz
xor
loopne,pt
xchg
sub
jge
lcall
ds
push
je
hlt
or
xlat
shlb
push
leave
andb
loop
pop
stos
inc
pop
mov
sbb
jno
sbb
push
and
sub
mov
test
outsl
in
bound
or
je
daa
push
arpl
dec
leave
mov
mov
add
in
sub
inc
andb
test
data16
adc
hlt
mov
sbb
mov
aam
add
and
sub
sub
roll
jp
push
loope
inc
aam
dec
and
sbb
or
inc
fst
ss
or
movsl
adcl
pusha
daa
push
test
dec
sub
roll
jecxz
ret
in
xchg
scas
es
outsl
add
cmp
int3
cmpsl
ljmp
cld
inc
jp
add
cwtl
push
gs
jle
pop
push
inc
leave
stc
mov
xchg
je
rcl
add
cmp
mov
add
mov
sahf
in
subb
xchg
push
sub
lds
fcompl
add
call
inc
pop
jae
data16
xor
aaa
bndldx
xchg
in
mov
sbb
add
or
pop
cmpsl
mov
test
mov
add
and
fisubl
sbb
mov
js
clc
or
mov
sarb
push
mov
mov
out
sbb
push
rolb
mov
mov
mov
mov
adc
adcl
inc
xchg
pop
and
pop
addb
fwait
and
adc
notl
scas
int3
out
or
push
and
mov
cmp
scas
sbb
push
mov
adc
jne
cmpsl
inc
in
push
insb
int3
xchg
or
push
inc
xchg
lods
psubd
add
push
or
scas
iret
mov
cmp
add
sub
xor
or
ret
xchg
push
or
in
js
sahf
or
sub
adcl
xchg
fcmovb
xlat
cmp
test
sbb
pop
data16
subb
cmp
jne
xor
adc
in
popf
inc
sbb
std
mov
mov
push
xor
xchg
jmp
sbb
lret
xchg
in
cmp
or
leave
jp
cmp
push
loope
push
js
je
mov
or
xadd
bound
negl
sti
or
jl
sbb
pushf
dec
je
xchg
inc
das
push
cs
xchg
jmp
movsl
sbb
in
adc
outsb
fiaddl
inc
and
dec
adc
and
add
sub
data16
adc
push
imul
and
mov
jnp
cmc
add
sbb
dec
in
xor
jnp
inc
adc
inc
and
dec
and
and
jnp
loope
divb
jno
sub
cld
and
movsb
into
jle
jno
dec
or
pop
ja
mulb
push
dec
pusha
gs
lcall
ret
sbb
xchg
mov
call
test
loop
in
add
mov
push
sub
add
mov
fadds
or
das
test
push
push
mov
pop
dec
sub
adc
sub
sbb
mov
inc
test
jae
inc
add
lods
das
mov
int3
sub
icebp
xchg
xchg
out
pop
movsb
les
icebp
in
addr16
cmp
sbb
repz
lock
add
jp
lock
mov
or
aam
pop
mov
mov
fdiv
jg
or
gs
movsl
ret
testl
lahf
aaa
add
sti
sbb
adc
pop
lret
dec
or
rorl
stc
and
mov
push
repnz
subb
cmp
out
mov
cmpl
sbb
adc
push
adc
pop
or
popf
sbb
js
dec
mov
jo
pop
jns
dec
adc
push
or
dec
test
cli
mov
dec
and
and
cli
xchg
fimull
push
repnz
pop
je
inc
add
stos
je
cmp
sbb
aas
imul
data16
xchg
sub
and
cld
insl
inc
mov
mov
lds
andb
mov
inc
and
arpl
inc
add
or
inc
not
adcl
dec
outsb
sti
aaa
inc
mov
sub
loopne
cmpb
mov
fnsave
push
add
mov
xchg
dec
mov
ja
pop
pushf
cld
inc
adc
and
jo
insb
lahf
movups
push
mov
inc
lea
insb
test
popf
add
and
std
out
jl
push
sub
shl
adc
stos
cltd
pop
enter
das
pop
orl
jo
or
jno
lock
andl
rorb
fwait
adc
mov
out
orl
or
insb
sub
test
sbb
sbb
fld
jge
push
dec
xor
pusha
add
fxch
sbb
jmp
add
and
into
mov
jmp
mov
sar
sub
ja
add
outsb
xchg
cwtl
lods
inc
pop
aaa
or
push
jo
insb
add
jle
adc
and
xor
movsb
sbb
sbb
test
enter
or
cmp
enter
jg
fsubrl
lds
push
jg
jne
fs
enter
xchg
jg
int
insb
inc
jne
mov
ja
add
lret
sub
fs
fs
in
insl
push
dec
addl
ss
mov
push
cmp
xchg
mov
jle
stc
xor
in
push
daa
jae
sti
je
pushf
out
negl
push
adc
dec
push
xchg
cltd
test
ret
dec
sub
jne
push
adc
push
pop
stos
test
daa
cmp
jmp
and
and
hlt
add
mov
js
pop
and
xchg
or
jb
mov
sbb
and
adc
cs
push
pop
pop
push
add
sub
add
pop
pusha
test
mov
iret
in
mov
movsl
push
sbb
pop
mov
xchg
mov
jnp
pop
sbb
xchg
cmp
scas
fistpll
loope
inc
jl
outsb
rclb
mov
inc
sbb
cmp
push
dec
fdivrl
jle
sahf
jae
push
adcb
push
push
inc
dec
je
cltd
fdivl
inc
in
data16
sbb
add
or
push
push
xchg
push
ljmp
out
or
pop
in
mov
sbbl
add
xor
shl
sbb
mov
ja
push
cmp
cmp
pusha
add
rol
xor
inc
cmp
shrl
push
mov
fidivs
mov
jne
rdtsc
imul
push
nop
cmc
pop
imul
xchg
cmp
adc
and
pop
sbb
popf
add
sub
adc
jg
jne
mov
mov
int3
enter
les
xchg
cmp
cmpb
pop
pop
inc
xlat
ret
mov
sti
lret
push
pop
mov
loopne
and
and
add
add
add
add
inc
imul
shlb
xchg
mov
push
scas
mov
clc
call
shll
mov
mov
jne
pop
gs
sbb
mov
rcl
mov
insb
adc
mov
pop
jmp
loopne
or
pushf
ja
add
mov
je
fmuls
xchg
add
test
mov
push
cmp
add
cmpsb
jbe
dec
mov
xor
pop
and
jge
add
xchg
dec
or
ffree
pop
push
add
jne
sbb
push
pop
adc
add
je
or
rcrb
scas
adc
xchg
pop
mov
add
lea
or
push
xlat
push
push
mov
or
add
mov
pusha
or
xchg
and
mov
inc
lahf
ja
cli
insl
or
call
jg
js
dec
sub
push
and
or
xor
sbb
fdivrl
out
into
in
or
sub
adc
cmp
idivb
lods
test
out
push
mov
les
ja
xchg
adc
mov
sub
out
inc
push
jmp
adc
push
xchg
or
xchg
mov
pop
faddl
add
ret
mov
adc
and
adc
jo
call
dec
push
push
mov
jb
and
mov
push
xlat
fcoml
xchg
or
sbb
cmovno
daa
mov
lds
and
cmp
test
xchg
aad
ja
jg
mov
pusha
lods
cs
mov
arpl
or
pop
push
inc
gs
dec
cmpsb
adc
jb
adc
lods
leave
push
push
lret
sahf
repnz
push
dec
lock
mov
push
xor
inc
mov
jecxz
mov
test
push
notl
jl
cli
add
rorl
xlat
dec
xor
leave
push
xor
in
ret
push
and
inc
jmp
shll
push
mov
jno
mov
mov
add
les
mov
orb
xchg
pop
sub
sar
add
pop
repnz
nop
mov
push
nop
loopne
and
or
lcall
aaa
add
jne
test
push
call
sbb
push
lea
add
shll
cmp
push
cmp
push
or
xchg
pop
add
lods
pop
and
add
sbb
mov
test
test
xchg
or
sub
jo
fs
lea
xor
or
cmpsl
leave
cmpb
scas
stos
xchg
adc
mov
add
pop
fildl
sbb
adc
push
lock
adc
cmp
rclb
aas
ja
push
jg
sbb
inc
int3
mov
data16
inc
add
inc
int
push
les
or
xor
add
incl
mov
jne
andl
nop
inc
and
test
mov
push
adc
jnp
jp
adc
jne
push
or
stc
aam
or
sbb
jae
cmp
jbe
jb
pop
mov
xor
sbb
das
fs
xchg
insb
sbb
push
andl
cmp
mov
mov
add
sbb
jbe
push
sbb
pop
fwait
sub
sbb
icebp
push
or
ret
iret
add
pop
ret
inc
push
lds
les
jb
aas
jo
int3
mov
rclb
and
rclb
popf
add
cwtl
push
adc
add
enter
test
shll
repnz
and
dec
leave
mov
pop
lcall
push
xchg
push
adc
push
push
xchg
shrb
or
cmp
jae
or
cmp
adc
mov
cmp
add
mov
push
punpckldq
aam
leave
shrb
inc
or
jnp
mov
arpl
xchg
push
dec
stos
movsl
movsb
or
sbb
inc
add
cmpleps
aad
movsb
and
sub
inc
rorb
dec
add
test
shll
scas
add
jle
adc
rcrb
jecxz
dec
rcll
imul
pop
adc
push
mov
rolb
xor
stc
pop
jo
je
sub
fsub
sub
push
jo
push
add
add
xchg
xor
in
popa
adc
sbb
sub
adc
add
cmp
pusha
and
mov
push
inc
cmp
mov
les
test
ret
mov
mov
jns
and
xchg
cmp
adc
and
or
add
mov
sub
loopne
cld
push
pushl
and
and
jp
out
pop
sub
aad
cmp
hlt
jno
push
clc
test
cmp
jl
pop
and
mov
call
jp
icebp
aam
add
xchg
mov
add
or
push
xchg
adc
mov
dec
rorl
push
add
sbb
pop
lods
adc
fcmove
ret
or
pop
xchg
test
clc
and
pop
sbb
lea
pop
inc
js
cmp
shlb
sub
or
mov
push
test
and
sbb
pop
or
popf
mov
stos
jl
push
clc
shll
imul
xchg
ljmp
cld
cld
adc
call
clc
pop
jbe
insb
loopne
jg
in
inc
pop
add
sti
inc
and
fisttpl
jbe
sub
lea
sarl
loopne
mov
fwait
leave
ljmp
or
popf
outsl
jne
cltd
mov
je
icebp
adc
jbe
das
shll
xchg
cmc
leave
nop
sbb
sub
inc
repnz
jp
or
loope
pop
inc
sbbl
sbb
or
inc
xor
mov
xchg
xor
inc
push
inc
imul
push
inc
sti
jl
test
jg
cmp
add
mov
mov
xor
cltd
pop
mov
fwait
js
and
clc
push
and
in
jno
jecxz
jle
dec
add
jmp
or
movsb
shlb
push
imul
mov
jg
mov
mov
in
xor
push
cmpsb
jle
jb
mov
sbb
add
daa
adcl
mov
movsl
sub
xor
xchg
xchg
xchg
test
aam
lock
in
or
dec
xchg
mov
push
pushw
lret
lock
jecxz
or
mov
insl
xchg
movl
mov
cmc
or
inc
add
subl
imul
sub
mov
jns
add
xchg
jno
jne
out
adc
xor
push
bound
adc
subb
pop
add
movsl
icebp
and
push
mov
in
movsl
pop
pop
xchg
andb
sub
stos
add
movl
mov
and
jmp
sub
push
addl
xor
jp
jmp
ss
adc
popf
cmpb
or
insl
vdivss
loope
sbb
push
clc
test
popf
stc
test
and
popa
or
add
sub
adc
sbbl
pop
test
arpl
outsb
out
adc
lea
push
shlb
lods
inc
push
push
scas
push
ret
and
cli
add
jl
cmp
mov
push
jo
cli
daa
mov
xchg
fnsave
sbb
mov
fiadds
idivb
dec
sub
dec
jmp
adcb
sbb
in
mov
xor
xchg
xor
jge
mov
xor
cmp
xchg
and
push
push
pop
lea
lods
push
mov
rep
pop
adc
pop
or
mov
dec
sub
jmp
sub
jae
sub
shlb
add
mull
into
jae
sbb
andl
mov
and
jne
push
push
xchg
scas
mov
push
mov
cmpsb
xlat
push
hlt
push
sar
and
push
mov
mov
adc
xorl
rcrl
sub
mov
or
cmp
mov
xor
roll
jnp
push
inc
mov
adc
add
stos
mov
sbb
sub
and
jno
and
lock
adc
hlt
mov
mov
dec
pop
sbb
rolb
push
iret
test
fildll
inc
ret
or
das
pop
jae
sbb
mov
push
push
push
xor
adc
add
out
dec
pusha
int3
cmp
and
adcl
add
push
lret
dec
data16
lock
push
xor
or
dec
push
xchg
mov
je
push
sub
mov
test
xchg
test
adc
jno
decl
vorps
push
push
dec
sahf
shlb
xchg
push
in
xor
mov
mov
xlat
mov
adc
inc
les
fidivrl
add
loopne
add
mov
rolb
stos
cmp
sbb
sbb
pop
lock
and
sarb
dec
jne
lcall
mov
lea
mov
adc
push
loope
mov
adc
inc
loopne
and
and
push
gs
adc
outsb
push
ss
sbb
call
inc
push
test
adc
dec
nop
cmpsl
sub
xor
mov
dec
mov
add
adc
or
push
ror
and
inc
push
in
test
fistpl
icebp
or
ret
call
testb
and
or
add
push
dec
mov
cmpsl
push
and
movsl
jo
cmpsl
push
daa
addb
rcll
ret
push
or
cmp
fnstcw
inc
cmp
cmpb
lcall
jbe
add
dec
jl
lea
test
inc
mov
pop
hlt
sub
sar
xchg
inc
out
loope
repnz
add
rcrb
push
adc
add
cmp
dec
test
and
movsl
push
mov
sub
jecxz
dec
push
dec
xchg
es
imul
movb
xchg
adc
mov
loope
dec
imul
ret
sub
add
sahf
ja
lret
loopne
out
sub
xchg
and
mov
mov
ficomps
xchg
popf
sahf
or
xchg
int3
shrl
mov
jg
mov
cs
cmp
ret
adc
jecxz
and
rolb
add
ret
hlt
add
jl
les
adcb
ret
notb
je
cmpsb
sbb
jne
std
mov
add
xchg
lcall
push
mov
mov
jle
xor
jbe
adcb
test
or
pushf
sbb
js
test
jae
fwait
orb
add
push
cmp
add
xchg
xchg
xchg
adc
pop
mov
mov
aaa
aaa
test
inc
jmp
dec
ss
lock
in
push
mov
stc
jne
sub
mov
incb
pop
pusha
shr
data16
cmp
out
dec
shll
jb
jae
ror
mov
loopne
push
xchg
jmp
mov
mov
dec
hlt
jae
mov
dec
and
jg
push
rcl
xchg
add
in
adc
addl
xchg
jnp
push
dec
inc
sub
dec
inc
inc
inc
jl
jl
fists
inc
sub
jne
pop
jb
adc
adc
jp
jno
sub
dec
pop
mov
and
pop
inc
dec
xchg
cmpsb
cmp
pop
lods
add
xchg
jbe
jo
xchg
pop
dec
sti
inc
pop
xchg
xchg
cltd
mov
sub
mov
add
mov
lret
ret
adc
xchg
or
cmp
xchg
or
and
xchg
sbb
xchg
add
subl
jmp
mov
cmp
or
cmp
dec
cmp
nop
out
sarb
or
and
enter
and
or
mov
mov
and
adc
or
inc
add
sub
in
sbb
sahf
ja
sbb
mov
ja
cmp
jl
scas
pop
adc
arpl
and
adc
xor
add
xchg
loope
mov
push
fmull
test
mov
add
mov
stos
clc
cmpsl
jne
inc
xor
pop
cmp
adc
clc
cmp
sub
arpl
or
pop
dec
shlb
and
sbb
and
or
inc
adc
mov
xor
shr
push
dec
xchg
and
sbb
push
xor
lahf
and
sbbb
fadds
clc
sbb
jb
sbb
push
mov
sub
cmp
pop
cmp
cmp
test
inc
push
fsubrl
xchg
test
out
and
das
test
mov
cmpsb
lods
cmp
pop
pop
mov
xor
inc
sub
and
push
xor
or
xor
mov
mov
movsl
xor
lea
and
test
cmp
sbb
or
pusha
adc
pop
add
or
jl
mov
sbb
adc
int3
dec
outsl
sbb
xchg
sub
ds
pop
test
inc
push
push
mov
mov
mov
fs
xchg
xor
adc
mov
cmpsl
test
cli
jne
in
pop
push
or
mov
mov
in
mov
sbbl
movsl
ja
push
out
pop
push
dec
sub
xchg
aam
arpl
lock
cmp
pop
mov
insl
mov
int
mov
in
loop
aas
in
rol
fimuls
enter
repz
adc
xor
loopne
in
cmp
push
mov
pop
push
push
mov
xchg
sbbb
jo
pop
add
icebp
jae
inc
and
hlt
mov
pop
mov
add
hlt
push
mov
dec
loope
nop
or
mov
inc
mov
push
pop
xor
xchg
and
mov
sbb
xor
pop
in
insb
cs
push
add
fcmovu
pushf
dec
pop
lock
push
xor
add
adc
js
scas
inc
call
cmp
cmp
jbe
jno
addr16
cmp
xchg
lea
xor
lock
bndldx
push
jno
rcrb
loope
inc
pop
pushf
cltd
pop
or
adc
xchg
sub
arpl
or
cmp
jo
mov
xor
or
lahf
inc
lcall
cmp
add
or
aas
lcall
or
mov
sbbb
bound
popf
in
mov
insb
sbb
ja
cmp
sbb
jl
xor
mov
dec
sub
pop
jb
pop
jns
xchg
mov
push
loopne
pushl
sbb
ja
xor
cmp
insb
test
or
jmp
mov
pop
sbb
rclb
enter
lahf
andb
outsb
sub
pop
adc
inc
or
repz
pop
xorl
test
add
pop
sbb
imul
aas
aam
pop
xchg
fmul
add
sub
subb
in
mov
sub
das
add
insb
mov
add
pop
lock
je
mov
lock
dec
sbb
xchg
jl
andb
or
es
das
xor
sub
int
add
nop
mov
or
push
shl
xchg
outsb
sub
pop
or
xchg
push
pop
sbb
mov
popa
xor
pusha
nop
aam
popf
add
or
cmp
movsb
iret
nop
cmc
call
js
dec
and
jno
mov
inc
lcall
jl
call
add
shll
mov
pop
in
push
mov
push
jae
sbb
mov
cmp
add
ffree
mov
push
lahf
lret
out
mov
or
fadds
or
or
inc
xchg
sbb
ret
ja
sub
push
mov
fdivr
aam
add
pop
adc
fcomps
movsl
jbe
fs
dec
add
stc
fucomi
jl
mov
push
sub
and
push
add
push
ljmp
mov
inc
jb
or
sti
sbb
jl
mov
adc
adc
ficoms
jg
dec
dec
adc
adc
lock
lahf
mov
xor
push
inc
xchg
mov
out
mov
inc
add
sbb
into
cmp
adc
gs
push
aam
js
ja
cmpsb
mov
cmp
call
test
push
ret
int
rcrb
mov
rcrb
add
loope
scas
shlb
pop
js
lock
test
rorb
in
xchg
lahf
pop
daa
and
and
ret
add
xchg
std
js
in
pop
push
push
or
adc
or
fstpl
adc
cmpsl
orl
rolb
ds
inc
or
dec
gs
je
pusha
and
cwtl
add
jb
push
and
pop
push
cltd
addb
push
es
into
xor
dec
call
dec
jb
popa
push
ss
inc
fs
fldcw
and
shl
push
push
lds
fwait
mov
xor
loope
es
push
mov
lods
and
dec
stos
aam
add
adc
lcall
and
push
fldenv
sahf
push
test
xchg
mov
pushl
jo
mov
xor
fs
or
push
in
mov
or
insl
jp
fs
addl
shll
inc
push
shll
xor
movsb
pop
dec
xchg
dec
ret
jmp
stc
xor
cmp
repnz
movsl
aam
test
lcall
shlb
mov
xchg
test
push
push
lea
push
mov
inc
ret
sbb
pop
ja
mov
test
gs
push
sbb
stos
jb
cltd
add
popa
int3
sub
daa
test
mov
lock
repnz
aam
es
test
sub
dec
jb
dec
stos
aam
add
orb
enter
and
push
out
arpl
out
push
arpl
loope
add
push
cmpsb
aam
mov
and
jbe
call
sti
pop
enter
mov
mov
dec
faddl
test
add
fisttpl
ja
xchg
call
dec
loopne
cmp
jbe
jne
xchg
pop
jbe
pop
push
pop
mov
outsl
mov
pop
add
inc
mov
xor
outsl
inc
push
add
rorl
pop
mov
xchg
movb
xor
jp
das
and
movsb
adc
mov
push
cmpsl
add
xchg
jmp
add
addr16
mov
sub
das
or
enter
xor
inc
cmp
push
xchg
or
or
lahf
pop
xor
adc
lds
fbld
les
int3
popf
push
test
push
push
test
or
xchg
rorb
push
sbb
adc
dec
in
cmpsb
mov
or
mov
sbb
mov
sbb
js
cld
scas
loopne
dec
lods
jnp
adc
fs
pushf
test
mov
test
les
repz
pop
test
adc
jnp
dec
xlat
cmpsb
mov
or
ss
add
and
sarb
push
or
xchg
adc
push
or
push
cmpb
movsl
add
inc
or
test
cmp
jp
cltd
add
pop
enter
push
pop
test
lock
cltd
inc
add
and
inc
fwait
mov
cmp
push
fs
cmc
enter
lock
dec
mov
add
or
out
push
lock
push
add
dec
pop
inc
shll
insl
pushf
sbb
xlat
sbb
mov
mov
adc
enter
fistl
pop
pop
cmpl
stos
mov
nop
mov
add
rolb
hlt
dec
or
in
pop
fwait
dec
or
adc
movsb
shlb
int3
scas
incb
pop
xor
xchg
fwait
ljmp
push
push
inc
mov
push
sub
les
sarb
jno
xchg
stos
mov
adc
xchg
push
push
fsubrs
lea
cmp
mov
jo
rcrb
in
jo
mov
ljmp
push
aaa
fimuls
sbb
xchg
movsb
fsubr
adc
mov
lock
ss
adc
push
adc
pop
rolb
popa
addr16
push
push
xor
inc
pop
fldl
hlt
inc
or
push
push
sahf
push
or
lods
leave
xchg
mov
jnp
shlb
xor
shr
or
cmp
pop
add
add
cltd
add
inc
insb
adc
fiadds
or
pop
sub
mov
sub
mov
jle
das
jmp
sbb
popa
sti
cmp
sbb
jge
les
hlt
pop
sub
inc
push
mov
mov
jno
pop
xchg
cwtl
pushf
test
mov
test
pusha
cld
in
lods
push
lds
mov
pop
mov
mov
adc
fmul
shlb
pusha
js
mov
mov
enter
loope
cld
xor
mov
inc
nop
cmpsl
xlat
mov
jbe
jp
movsb
rcrb
mov
int
dec
cmp
test
inc
and
movsb
lods
jmp
imul
lcall
mov
and
ds
movsb
sahf
mov
mov
dec
xor
rolb
jle
aaa
adc
cmp
or
add
push
mov
or
mov
sbb
jl
sub
mov
xchg
pusha
push
movsl
mov
ljmp
scas
outsl
push
push
ss
push
pop
mov
jg
adc
mov
dec
add
movsb
adc
sbb
mov
pushf
flds
cmp
and
mov
mov
sti
pop
xchg
or
sbb
inc
std
fnstsw
mov
hlt
mov
adc
push
adc
outsl
adc
sbb
mov
xchg
jo
xchg
adc
and
sahf
mov
dec
in
cmp
cmpsb
out
jmp
cld
test
mov
cmp
pop
pop
sbb
mov
lock
mov
inc
xorl
lods
popa
sbb
stos
pusha
add
insl
int
mov
cmpl
push
ds
adcb
outsl
xlat
push
push
xor
repz
mov
pop
cmp
pop
mov
je
js
mov
mov
xchg
or
addr16
push
movsl
sub
loopne
or
inc
mov
pop
jle
or
scas
mov
loop
jb
andl
jl
icebp
push
sbb
ds
sbb
xlat
lods
cmp
add
or
cmp
cmc
mov
sub
clc
sarb
repnz
push
sbb
sub
inc
adc
push
insb
mov
lret
push
cmpsb
jp
inc
xchg
jne
ljmp
mov
imul
dec
out
mov
test
daa
call
mov
dec
pusha
adc
test
jg
sub
sbb
mov
gs
mov
inc
inc
ror
and
push
jl
outsb
cwtl
xchg
insb
vandnpd
dec
cmp
imul
add
mov
lock
sbb
pop
pushf
cmpsb
xchg
cmpb
xor
sub
dec
inc
in
repz
loopne
lea
xor
xchg
push
add
stos
fs
fsubr
and
sub
mov
push
cmpsb
jne
xchg
inc
mov
push
les
and
adc
inc
adc
and
pushf
sti
adc
ja
into
stos
push
push
popa
jp
sbb
jle
push
pop
xor
pop
hlt
add
sub
lock
cmp
aam
mov
push
shlb
push
xchg
cmp
cmpb
movsb
push
adc
mov
adc
push
pcmpeqw
cmpl
sub
mov
insl
or
mov
adc
jae
sbb
jbe
push
xor
sti
lea
sbb
movsb
sbb
cmpsl
and
cmpsb
or
and
aam
inc
lea
push
lahf
mov
in
dec
pop
ret
bound
jmp
pop
pop
sub
daa
jmp
push
lahf
call
dec
and
mov
imul
fcos
rcll
js
lret
push
ret
pop
sub
push
in
fwait
or
lea
and
inc
movhps
fdiv
cmpb
fsubrs
or
popa
push
mov
sti
cmp
sub
xor
and
xchg
js
pusha
loop
fdivl
inc
lods
adc
push
arpl
call
test
jg
cwtl
sub
add
or
cwtl
not
add
add
pop
push
fsubrl
inc
je
mov
adc
loopne
mov
mov
dec
add
in
fwait
mov
add
xor
mov
mov
or
push
push
sub
das
loopne
lock
popf
sbb
adc
mov
fdivs
repnz
dec
mov
push
mov
jns
fists
adc
mov
sbb
lds
mov
and
mov
popf
sub
loop
rcll
mov
xor
jge
ss
mov
inc
imul
subl
dec
cmp
outsb
adc
stc
xor
js
dec
mov
arpl
pop
sbb
cmpsb
or
push
xchg
cmp
jg
push
or
hlt
mov
add
inc
lods
lods
lock
push
and
sub
clc
cmp
pop
std
xorl
outsb
jp
je
jp
cmp
je
data16
mov
jmp
fmull
mov
ja
inc
ret
jg
push
add
outsb
adc
lret
jbe
or
insl
outsb
add
push
jge
push
shrb
sbb
xchg
push
out
lock
jp
outsb
in
add
and
pop
fstpl
sbb
and
dec
xchg
inc
cmp
mov
adc
jmp
or
jge
cmpsb
dec
xchg
fdivrl
cmp
fsubs
sbb
sbb
in
inc
mov
inc
inc
jmp
inc
jo
je
in
add
addr16
and
adc
lock
fcmove
adc
sahf
add
add
movsl
push
or
les
sub
mov
adc
sbb
repz
lret
jmp
pop
cmpsb
inc
sbb
cwtl
adc
call
mov
fwait
lret
roll
adc
adc
add
in
mov
sub
shr
adc
sub
sbb
or
incb
pop
mov
inc
rcrb
pushf
mov
fcoml
scas
add
dec
and
pop
xlat
out
and
incb
push
sbb
cmp
mov
xchg
les
mov
sub
cmp
push
jns
fmuls
jl
pop
or
cmpb
inc
movsb
xor
orl
mov
stos
add
lret
in
jns
cmp
cmpb
adc
push
mov
loope
clc
in
and
testb
push
fisubl
inc
sbb
repz
cmp
and
adc
mov
xor
cmp
xchg
push
jle
in
or
popa
sbb
or
mov
xchg
lret
or
jmp
shlb
dec
push
adc
xor
push
divl
and
xor
jo
xchg
sbb
push
into
scas
rclb
je
dec
add
std
mov
cmp
add
sbb
cltd
xchg
ds
in
adc
cmp
lea
mov
test
add
out
pop
jno
test
mov
negl
xor
lcall
and
pop
adc
sub
outsl
push
subb
sbb
adc
cmpsb
shl
push
cmc
flds
jno
dec
xorl
inc
iret
pusha
and
test
and
cwtl
scas
loope
add
add
jle
inc
xchg
insb
mov
ret
jg
mov
std
hlt
mov
cmp
push
roll
push
adc
add
jo
fwait
in
and
enter
xchg
add
add
xchg
stos
inc
scas
and
add
push
cmpsl
inc
aas
mov
test
and
inc
test
add
or
inc
insb
popa
jl
dec
lds
into
dec
cmc
and
test
stos
dec
outsb
and
rclb
imul
je
mov
insb
call
pop
xlat
ss
jno
inc
inc
adc
je
das
sbb
cmp
sbb
pop
cmp
fstpl
sub
push
or
sub
xor
std
and
inc
push
stos
push
add
cmp
jo
test
push
pop
test
inc
sbb
mov
dec
pop
add
inc
dec
cmp
mov
xchg
mov
out
push
xor
push
call
push
in
cmp
imul
loope
push
lea
dec
mov
add
or
xchg
xor
jle
add
int3
inc
cmc
mov
call
pop
inc
or
sbb
dec
notl
daa
mov
testl
mov
jl
sub
das
adc
outsb
movsl
add
ret
pop
cli
mov
mov
xor
loop
add
shr
scas
add
js
xchg
fcom
sbb
adc
testl
clc
fcomi
out
mov
ret
shr
cmp
jbe
add
jmp
add
jae
xor
pop
rolb
ret
and
dec
loop
inc
dec
addl
mov
mov
or
mov
lds
dec
adc
inc
sub
aam
lcall
dec
mov
jnp
punpckhbw
sub
jo
scas
sub
xor
mov
sub
mov
outsb
mov
mov
mull
mov
add
xchg
test
and
inc
daa
mov
scas
inc
and
inc
imul
mov
aaa
fwait
ret
aas
cmp
or
ja
rcrb
mov
jl
dec
fsubrs
shlb
enter
sub
add
or
xor
or
jmp
mov
fdiv
xor
popf
push
or
pop
arpl
xor
jb
push
nop
mov
xor
pop
inc
lret
out
mov
aad
loopne
push
xchg
add
outsb
sub
sarb
mov
fisubs
xor
adc
jns
or
shrb
andl
lds
xchg
scas
cmpb
inc
insl
pop
in
inc
sbb
ficompl
xor
adc
mov
and
mov
insb
ret
mov
mov
shrb
push
inc
adc
inc
call
inc
inc
scas
xchg
push
or
push
sbb
nop
xchg
cmp
les
repnz
in
add
cmp
pop
mov
popl
mov
lahf
call
repz
or
enter
xor
sub
inc
imul
rol
mov
lock
sub
push
push
add
iret
xchg
cmpb
xor
or
xchg
pop
or
jmp
insl
add
adc
dec
jne
push
inc
add
sbb
add
push
inc
mov
aam
mov
or
jecxz
movsb
scas
jns
dec
pop
cs
ss
test
sbb
in
push
icebp
dec
sub
xor
sbb
push
ucomiss
push
or
mov
mov
shlb
and
adc
adc
fwait
adc
shl
adc
mov
lods
mov
xor
ss
stos
mov
adc
and
test
enter
repz
pop
loop
jns
fcoms
mov
flds
push
jnp
in
push
mov
pop
adc
xchg
ds
and
pushf
mov
and
insb
pop
push
lock
lods
adc
les
pushl
push
xchg
iret
xchg
add
mov
mov
fistpll
fadds
or
or
mov
adc
fsubrs
aam
push
mov
xchg
ret
icebp
xor
jmp
aaa
pop
and
dec
xchg
scas
jb
roll
enter
xor
xchg
jne
mov
ja
jl
lds
movsl
and
jl
add
mov
fisttps
sub
and
sub
xor
sub
clc
hlt
xor
push
pop
push
mov
adc
stos
testl
pop
insb
mov
adc
es
popa
lret
or
fstl
push
xor
loop
or
pusha
cmp
je
push
addr16
sub
inc
push
dec
das
mov
or
adc
int3
inc
ret
pop
inc
or
sbb
movsl
fabs
or
push
mov
mov
in
or
add
xchg
dec
xor
aaa
and
jns
pop
xchg
jecxz
scas
or
mov
loopne
cmc
andl
lea
stos
mov
mov
push
sti
push
add
or
jg
ljmp
int
push
mov
cmp
jne,pn
inc
and
ljmp
sub
ret
lret
push
add
and
jmp
jge
and
rolb
and
orb
xchg
sub
mov
pushf
xor
cmp
mov
sarl
rcrl
testl
mov
dec
lock
inc
push
loopne
jo
mov
inc
and
mov
xchg
inc
xor
sub
add
xchg
leave
or
jo
cmp
add
cli
push
sub
repnz
jp
sbb
xor
rorl
loopne
add
mov
jo
loop
sbb
inc
movsl
pop
mov
xor
pusha
fs
xchg
test
arpl
push
lcall
sbb
stos
push
dec
inc
imul
ret
imul
jae
or
jecxz
cmp
loopne,pn
mov
mov
xchg
pop
cmp
imul
sbb
and
mov
in
mov
clc
mov
push
cmpb
jmp
mov
scas
nop
xchg
push
cmp
push
into
pushf
leave
les
sub
jbe
push
adc
adc
es
loop
stos
jne
xchg
pop
or
sub
lea
add
add
xor
pop
je
inc
outsl
out
loopne
add
mov
cmp
pop
cmpps
out
xchg
lahf
mov
les
lret
inc
repz
mov
movsb
xchg
testl
loopne
inc
fstpt
cmp
jl
or
cwtl
shll
rep
mov
dec
push
addb
adc
les
pop
or
aam
inc
mov
lret
inc
mov
enter
sti
push
jl
push
xchg
mov
sbb
arpl
jl
pop
jnp
adc
aaa
loopne
inc
dec
adc
pusha
rcll
cmpl
hlt
jle
push
pop
sub
push
insl
lahf
aaa
push
jne
in
loope
xor
push
dec
jbe
popa
xlat
cmp
push
mov
sti
sbb
jmp
ljmp
pop
jb
popa
pop
cmp
add
leave
lret
and
sbb
and
aaa
xor
xchg
dec
pop
jmp
push
fmull
dec
adc
sbb
sub
loope
les
mov
dec
dec
cmp
inc
js
dec
test
xor
in
insl
mov
mov
pop
mov
cltd
repnz
lret
push
cmp
hlt
xor
and
add
mov
shll
mov
sbb
arpl
inc
or
nop
inc
mov
add
and
and
pop
mov
push
stos
dec
lea
add
test
dec
popa
or
add
repnz
adc
incl
or
mov
fs
mov
or
adc
test
mov
enter
in
stc
mov
xor
sti
aam
push
dec
nop
incb
in
movsb
pushf
lods
mov
int3
mov
repnz
in
cld
rclb
sub
inc
xor
fmull
xorb
mov
je
loope
mov
mov
jl
mov
popa
stos
xchg
outsb
mov
cs
mov
pop
mov
add
lcall
mov
dec
aad
into
sbb
mov
xor
aaa
rcll
mov
roll
add
xor
mov
sbb
mov
dec
into
push
mov
xchg
jl
xchg
dec
enter
in
jl
popf
add
fs
js
adc
adc
movsb
and
xchg
psubq
add
lahf
mov
mov
push
call
push
jae
fwait
xor
sbb
stos
jo
test
inc
inc
push
jge
mov
add
lcall
cmp
je
sbb
and
inc
cld
lahf
cmp
jne
push
mov
aad
lock
outsb
dec
pushl
scas
loopne
fsubr
sub
push
jns
out
xor
outsl
into
inc
lods
mov
push
and
loopne
add
jmp
xor
push
or
movsl
sbb
nop
sub
add
or
fistl
jl
jno
sarl
aaa
shll
sbb
add
push
xchg
fwait
cs
mov
or
xor
adc
xchg
xor
std
push
mov
hlt
loopne
xor
or
sub
and
mov
mov
push
push
adc
mov
lret
addb
dec
inc
shlb
jne
and
es
fadds
in
sub
sbb
push
sbb
clc
loopne
and
jge
jbe
imul
js
mov
mov
test
decb
imul
or
gs
dec
inc
in
push
push
cmc
test
outsl
xlat
mov
rolb
fsubrl
daa
xor
push
test
jmp
or
rclb
in
fstpt
pop
icebp
mov
and
add
push
in
pop
rcr
mov
push
pop
sub
or
lods
je
mov
pop
and
sub
out
lds
push
jno
mov
and
push
pop
mov
jno
divw
mov
iret
xlat
call
vunpckhps
or
mov
xlat
inc
shll
xchg
xchg
sbb
gs
add
sub
push
scas
mov
stos
lock
mov
scas
cmp
in
fildll
adc
xchg
jmp
pop
xor
jno
ds
mov
ja
sbb
cli
je
cltd
pop
add
sbb
lret
data16
stos
pop
add
cmpsl
mov
in
add
leave
xor
sub
les
add
and
xor
mov
pop
loop
xchg
leave
jne
mov
adc
cmc
ljmp
rolb
ss
adc
mov
push
push
adc
or
cmpsb
mov
or
push
lcall
xchg
adc
call
dec
mov
xchg
push
push
pop
or
jo
sub
repz
jo
outsl
mov
pop
cmp
pop
std
sbb
mov
jne
mov
jmp
fldl
xchg
cli
insb
adc
aam
xlat
or
mov
jl
inc
packssdw
icebp
lock
pop
xor
mov
jecxz
sbb
fnstsw
dec
rcrb
movsl
push
push
movsl
jge
sarb
inc
hlt
fstl
dec
fcomp
fnstsw
call
and
inc
clc
pop
fsubr
pop
faddp
andl
enter
sbb
sub
test
fdivrl
cs
dec
aam
mov
mov
and
mov
xchg
lods
add
push
into
sbb
or
andb
xor
add
add
lods
or
and
hlt
jge
xor
out
fdivrs
add
scas
stos
dec
fstpl
inc
add
jmp
mov
leave
lea
push
or
adc
adc
pop
dec
xchg
add
into
push
xchg
and
pop
scas
pop
movsl
bndldx
mov
xchg
push
sub
cwtl
out
stos
ss
mov
stos
cmp
mov
int3
dec
jecxz
rorb
jae
push
add
add
fnsave
pop
in
sub
mov
push
inc
inc
inc
cmp
ud0
ret
jmp
mov
cmp
jge
add
or
xchg
mov
dec
leave
mov
and
jmp
roll
sub
in
jmp
or
inc
fldenv
add
adc
rorb
pushf
push
lods
push
pop
test
xor
sub
jg
jne
pop
push
sub
jne
push
push
adc
or
imul
xchg
mov
ret
or
imul
inc
add
xchg
dec
inc
cmpsb
sbb
xchg
jns
mov
push
adc
push
mov
ret
or
outsb
mov
insl
jp
adc
or
in
mov
mov
bound
adc
shl
jmp
jb
jmp
adc
js
push
cmp
pusha
hlt
stc
adc
ja
mov
and
pop
aam
insl
repz
ret
inc
sbb
ret
pop
les
decl
inc
adc
sub
mov
push
xchg
xchg
int
hlt
clc
mov
pop
lcall
xor
add
sbb
repnz
dec
cs
jae
cmpsl
sub
push
add
mov
xor
adc
imul
inc
cltd
or
push
in
pop
push
mov
shlb
jle
cmpsb
xchg
sub
test
and
or
dec
sub
xchg
sub
scas
dec
out
ret
adc
dec
pop
stos
xor
insl
mov
xor
fadds
rolb
push
shlb
mov
inc
sahf
or
clc
inc
loopne
jo
insb
add
xchg
je
xor
mov
adc
outsb
push
mov
clc
jo
mov
inc
add
rolb
lds
add
mov
cmp
pop
mov
xor
ret
das
pop
push
or
add
cmp
sub
sub
bound
bound
push
or
jmp
inc
pop
inc
add
mov
add
push
dec
sub
jmp
or
sub
push
pop
loop
mov
aas
pushf
sbb
adc
push
lea
push
xchg
sbb
clc
jae
or
shl
lret
add
cmp
and
lock
rcll
jl
clc
mov
pop
pop
mov
gs
add
test
lahf
inc
push
sub
jns
jae
push
mov
mov
inc
mov
lock
mov
add
and
out
enter
jb
in
or
pusha
sbb
and
sub
cmp
inc
jmp
push
cltd
push
in
dec
jo
sbb
mov
jb
out
push
clc
mov
es
mov
mov
inc
xchg
lods
sti
adcl
mov
adc
add
push
cmp
push
dec
rorb
out
out
sahf
fwait
xor
sbb
add
sub
mov
outsl
fisubs
mov
imul
test
xchg
push
sahf
rclb
add
incl
rcr
orb
mov
fidivl
mov
or
lcall
dec
add
dec
adc
lods
add
inc
js
mov
sbb
mov
imul
dec
jmp
cmp
mov
push
cmp
arpl
dec
xor
popa
js
sbb
sub
lods
fsubl
sub
in
cmp
sub
pop
or
mov
xchg
adc
rclb
or
mov
mov
pop
lods
push
push
icebp
test
mov
and
test
and
fwait
jp
xchg
sti
call
mov
lret
ja
insl
movb
and
mov
dec
add
jmp
cmpl
mov
lcall
int3
mov
xor
xor
adc
inc
xor
fisttpl
and
jae
testb
fiadds
xlat
jmp
push
and
shll
mov
mov
sbb
adc
ret
dec
test
popa
mov
out
je
loopne
enter
adc
dec
and
or
inc
sbb
push
inc
and
or
ljmp
cmp
call
mov
cmp
iret
dec
add
insb
sub
mov
shlb
mov
stc
inc
push
inc
in
inc
mov
or
cmp
inc
loope
add
or
dec
jmp
mov
xchg
xor
push
test
cmp
pop
push
xchg
push
in
lock
cmp
push
inc
push
xor
xor
xor
jne
loopne
push
and
into
lock
sub
clc
test
jmp
push
jbe
ret
lods
inc
rol
dec
adc
pop
and
pushf
inc
dec
lea
and
cmp
mov
leave
inc
mov
inc
sahf
xchg
js
outsl
add
lret
repz
stc
xor
jmp
and
xchg
adc
mov
rcrb
into
or
imul
les
inc
je
fistps
out
aam
into
dec
imul
enter
push
adc
xchg
push
fldt
test
test
ljmp
xchg
sbb
in
pop
pop
add
mov
sbb
test
js
jbe
push
push
push
push
mov
add
add
mov
andb
pop
icebp
loopne
test
jne
lcall
pushf
popa
add
xchg
fisubs
jb
enter
xor
test
pop
repnz
add
xchg
fbld
sar
test
roll
mov
outsb
or
cmp
fwait
inc
push
popf
jmp
xchg
ret
es
insb
jb
sub
pop
clc
jl
jno
push
xchg
sbb
addr16
cmpsb
rcrb
loopne
pusha
pop
lcall
sbbb
loopne
inc
add
sbb
push
jns
les
add
jb
or
or
testl
sti
sbb
ljmp
sub
lcall
rclb
mov
dec
aaa
rorb
push
ret
jl
inc
cmpsl
cmpsl
addb
push
and
test
sar
mov
imul
push
data16
pop
mov
in
jmp
push
sub
stc
cmc
out
movsl
pushf
mov
mov
push
adc
inc
dec
sub
es
ret
push
jg
int3
cmp
jg
push
jp
ret
cmp
adcb
outsb
ret
jmp
xor
push
push
push
add
push
hlt
jge
inc
add
add
mov
test
dec
imul
lret
add
pop
pop
imul
or
xchg
mov
mov
in
cwtl
popa
out
aam
sub
mov
or
subb
adc
dec
shrl
lahf
roll
push
popa
scas
paddsb
fld
pop
mov
inc
add
out
adc
push
pop
repz
jmp
inc
add
or
lods
roll
mov
scas
jecxz
add
out
call
dec
add
ret
fcom
aas
in
leave
push
int3
sub
or
sbb
xchg
mov
cmpsl
push
clc
imul
sarl
inc
and
bound
lret
stos
jmp
push
mov
pop
testb
es
sbb
aad
sub
sub
lahf
andb
pop
and
cli
pop
and
sbb
loopne
dec
je
sub
addl
sub
push
sbb
mov
mov
es
adc
adc
add
xor
xor
push
xchg
pop
add
xchg
push
sbb
pop
jne
aaa
scas
push
sub
cltd
jno
nop
and
xor
pop
ret
add
dec
sub
add
les
stos
aad
push
push
arpl
jo
outsb
enter
and
mov
fisubl
adc
fistpll
mov
xchg
push
insl
sub
pop
inc
jmp
adc
data16
fistpl
and
jl
ds
clc
rol
ret
xchg
mov
dec
mov
mov
push
fistpl
insb
dec
std
jg
and
inc
sbb
negb
jge
loop
data16
adc
jnp
jmp
lock
and
push
dec
xor
xor
jne
clc
lea
mov
and
jnp
inc
and
sub
push
xor
add
cmp
add
in
sub
cmp
inc
sbb
dec
push
pop
pop
mov
aam
sub
xor
adc
outsl
out
pop
sbb
iret
inc
loop
xchg
jne
cmp
or
andl
push
gs
sub
js
xor
add
pusha
enter
inc
xor
cmp
or
std
movsb
ret
sbb
ret
and
inc
insl
pusha
dec
pusha
mov
adc
stos
aad
dec
inc
mov
data16
jne
leave
and
outsl
add
aas
push
in
adc
adc
push
xor
addl
mov
or
out
loop
sub
mov
xchg
les
outsb
jp
push
push
int
xor
ja
cmp
in
cli
std
sub
push
push
mov
cmp
repnz
or
mov
jb
push
sbb
in
sbb
cs
or
sub
nop
add
or
dec
ljmp
add
sub
sahf
dec
pop
sbb
addb
filds
jmp
dec
jbe
pop
out
xor
jbe
cmpsb
xor
xlat
sub
test
loop
imul
dec
jae
ds
aaa
adc
mov
inc
xorl
jle
and
xor
sar
add
cmp
ja
pop
adc
mov
inc
adc
push
xchg
dec
aam
clc
push
push
iret
stc
inc
jp
fcompl
fadds
push
nop
push
push
inc
les
pop
mov
movsb
add
nop
sub
add
jbe
push
xor
mov
jmp
int
sbb
xor
sub
cmpsl
adc
inc
mov
inc
xor
cltd
sbb
dec
add
rolb
jecxz
ret
cltd
and
pusha
lea
mov
xchg
notb
popa
or
je
sub
lcall
push
ds
and
push
ret
pop
jl
xor
lret
into
xchg
add
fadds
pushf
hlt
pop
cmp
pop
fidivs
sbb
sub
dec
push
cmpb
es
loopne
push
punpckhdq
jl
shrl
xlat
and
and
enter
dec
stc
mov
sbb
sbb
imull
pop
je
push
mov
cmp
adc
cmpsb
inc
cmp
or
or
imul
mov
loop
mov
inc
and
jo
mov
jns
pop
sbb
repnz
push
jmp
push
sbb
je
and
dec
cmp
int
stos
xor
xorl
mov
mov
stos
les
dec
xor
pop
insb
push
jge
lret
xor
dec
push
jno
lea
rcrl
sub
jne
cs
test
xchg
sahf
add
add
add
adc
dec
bound
mov
mov
sbb
pop
mov
xor
or
stc
xlat
push
decb
adc
or
sbb
or
outsl
nop
xor
dec
js
add
fwait
pop
push
ss
add
push
adcb
xchg
cld
adc
cld
adc
je
push
daa
fiaddl
fs
stos
or
lock
test
mov
and
add
aad
fstps
push
mov
adc
movsl
dec
test
push
mov
rcll
rclb
or
adc
xchg
add
push
sbb
pusha
mov
and
or
je
in
rorl
aas
aad
xchg
dec
inc
aam
fwait
mov
stc
mov
adc
mov
pop
pop
jp
sti
adc
in
leave
xor
das
cmpl
popa
xchg
out
and
mov
push
or
ja
add
xor
insl
popa
and
stos
jae
sbb
in
mov
hlt
pusha
jge
dec
inc
adc
push
data16
adc
jb
enter
fstpl
jge
pop
adc
popa
xor
or
push
xor
push
cmp
mov
ret
mov
data16
aas
jne
aam
mov
jmp
add
aam
add
movsl
lcall
scas
or
cmp
mov
out
add
and
inc
push
arpl
dec
arpl
loopne
add
pop
arpl
xor
fwait
mov
push
loop
push
pop
fdiv
je
adc
jbe
cmp
out
add
sub
ss
adc
out
leave
jne
push
jmp
cmp
xchg
mov
xchg
mov
push
rol
mull
add
mov
pop
xchg
push
dec
inc
push
xor
or
mov
and
cld
add
das
xor
les
repnz
push
cmpsb
fnstcw
adc
xchg
stos
mov
adc
sbb
cmpsb
dec
test
mov
test
enter
mov
mov
push
les
mov
inc
cmp
or
add
test
or
pusha
addb
in
inc
xor
decl
aaa
fisubrl
in
xor
test
imul
mov
out
mov
fxch
adc
addb
xor
mov
mov
mov
jo
pop
push
subb
hlt
jecxz
or
pop
push
xor
jp
scas
dec
sub
or
adc
jmp
imul
cmp
enter
or
cmp
mov
or
lahf
jmp
pop
xchg
xchg
dec
pushf
cltd
xor
movsb
dec
icebp
outsl
dec
ret
or
sti
ss
add
outsb
adcl
push
dec
idiv
stos
movl
dec
and
and
rol
pop
add
dec
arpl
inc
stos
movsb
fstl
add
xchg
or
pop
inc
fwait
leave
aas
mov
shll
mov
mov
data16
loope
mov
xor
pop
mov
dec
and
shll
adc
loop
sbb
adc
loope
push
in
aaa
xlat
ret
xor
push
cwtl
xchg
xor
jo
fisttps
inc
push
imul
sub
pop
add
pushf
inc
add
sub
mov
xchg
jmp
jecxz
test
pop
push
das
test
lock
xchg
and
adc
sub
and
xchg
mov
in
or
lock
data16
mov
addr16
arpl
push
mov
jbe
fdivrs
add
sub
pop
add
outsb
inc
mov
xchg
ret
dec
xchg
fldl2t
adc
je
pop
leave
push
adc
jecxz
imul
fadds
add
push
or
jl
mov
push
pop
fwait
dec
and
into
enter
adc
push
xor
add
nop
or
jns
xor
test
adc
or
mov
dec
or
push
loop
idivb
cmpl
popf
shrb
ficoml
cs
imul
jl
adc
icebp
imul
add
je
sarb
xchg
xor
lahf
sub
pop
repz
jo
and
fs
sub
fsubrs
ds
icebp
adc
and
pushf
sti
dec
icebp
icebp
imul
mov
imul
adc
dec
hlt
jl
push
push
push
jg
push
inc
dec
add
xchg
cmp
loopne
cmp
shll
xor
hlt
stos
cli
push
mov
daa
test
pop
rcrl
and
sub
loopne
and
lahf
sub
stos
xchg
cltd
add
icebp
mov
out
rcl
rcrl
jecxz
shrb
or
xor
icebp
jno
mov
nop
mov
pop
or
cmp
fldl
mov
or
or
jecxz
pop
gs
loope
inc
inc
dec
add
dec
push
sub
inc
pop
inc
mov
and
je
cwtl
sub
sub
in
jno
mov
xchg
movsl
fs
into
idivb
nop
push
push
pop
movsb
xor
js
test
cwtl
lds
add
adc
nop
pop
loopne
aad
mov
inc
sbb
inc
or
popf
idiv
xchg
xchg
in
push
adc
test
shl
push
cli
fimuls
sub
push
and
cwtl
pop
jp
mov
jbe
jne
test
shlb
pop
mov
movsb
sbbl
popf
add
pop
xor
adc
enter
add
mov
lahf
fadds
repz
push
bound
xchg
cs
in
or
jecxz
lea
fadds
jmp
cmpsb
mov
fldl
dec
push
sub
add
and
scas
fs
add
add
add
push
push
or
xor
push
enter
push
repnz
push
adc
dec
fsubs
mov
test
or
jae
lret
dec
add
scas
mov
rclb
push
push
out
testb
push
push
push
xor
or
rcll
bound
cs
sub
sub
mov
adc
or
fisubrs
inc
dec
stos
dec
or
sahf
or
sbb
roll
push
push
dec
push
cli
ss
add
or
sub
cmp
push
mov
push
cmpsb
adc
arpl
push
stos
loopne
and
adc
sbb
push
sub
sbb
cld
add
jae
add
dec
std
adc
fs
jb
adc
lea
or
mov
add
je
adc
rcr
ret
in
push
mov
rcrl
inc
push
inc
or
aad
pop
adc
lock
pop
enter
adc
cmp
and
clc
lods
fsts
pop
outsb
jne
shld
xchg
in
mov
and
hlt
mov
push
sbb
add
shlb
in
dec
addb
sbb
lods
aad
jnp
and
pop
out
xor
adc
in
push
adc
in
nop
jno
xchg
dec
sbb
xlat
mulps
or
push
jae
mov
out
add
jmp
push
add
and
cmp
sub
inc
movsb
stos
cmp
dec
lock
jo
sub
add
and
cltd
jbe
mov
loope
jmp
in
push
lea
and
mov
mov
or
inc
dec
in
inc
add
pop
and
jmp
mov
rolb
push
push
adc
adc
loop
dec
adc
and
fdivrl
scas
fsubrs
add
sub
push
mov
test
mov
jge
ret
jmp
xor
pop
lret
fsubrl
push
bound
inc
insl
mov
xchg
mov
mov
test
data16
push
cmp
imul
std
out
stos
add
rclb
mov
ljmp
out
xchg
out
push
test
nop
cld
les
adc
stos
sub
xor
in
rcrl
mov
hlt
mov
jbe
xchg
mov
insl
mov
jno
and
adc
adc
push
cmp
rol
jge
or
cmp
or
rcrb
cld
mov
sbb
je
leave
adc
out
add
test
test
xchg
out
rcr
mov
mov
scas
jp
mov
stos
es
ja
cs
pop
stos
adc
das
push
push
xor
sub
and
mov
enter
pop
push
rorl
jno
push
add
ss
imul
stos
ljmp
test
mov
jle
mov
push
or
shlb
or
or
mov
gs
imull
adc
int
inc
jo
fstpt
push
popa
outsl
lea
and
push
mov
enter
test
test
inc
add
popa
add
stos
cld
cs
js
mov
pop
add
push
jle
sbb
cmpsb
mov
test
mov
in
or
loope
sbb
xorb
cltd
inc
sub
jbe
je
push
push
sahf
insl
or
out
push
and
xadd
daa
shlb
inc
xor
add
pop
jns
pop
imul
push
loopne
push
shrb
in
test
adc
inc
mov
sbb
imul
adc
lcall
adc
loop
loop
push
or
push
shl
push
mov
pop
pop
mov
mov
or
mov
adc
xchg
daa
stc
dec
repnz
test
cmp
or
cmp
add
iret
push
mov
lcall
dec
loopne
sub
aam
cmpsl
frstor
pop
cmp
pop
adc
or
sahf
lret
in
js
bound
iret
mov
sbb
jge
push
sbb
les
shr
push
cmp
pop
repnz
in
wbinvd
dec
gs
or
enter
or
cmpb
ror
and
pop
ror
int3
orl
fisubs
xor
mov
inc
and
add
in
cmp
mov
push
sbb
loope
adc
and
cld
movsb
jle
or
mov
shr
mov
and
mov
mov
dec
dec
pop
out
jle
jmp
cmpb
and
adc
adc
mov
push
test
xor
xchg
lea
mov
mov
mov
and
decl
cmp
jb
jbe
scas
dec
mov
je
ja
push
push
adc
add
addb
adc
add
cwtl
jbe
cmp
jo
jne
int3
dec
push
xchg
mov
dec
push
lea
cli
fcompl
adc
rcrl
inc
add
mov
sub
ja
sub
dec
mov
pop
adc
dec
push
icebp
addl
pushf
cmp
js
aas
add
push
mov
sub
clc
aad
push
imul
pop
xchg
pop
cmp
jmp
cmp
push
add
hlt
push
addl
add
xor
mov
push
rorb
dec
outsl
push
dec
ja
adc
lret
pop
mov
ljmp
inc
xchg
repnz
orb
leave
dec
add
add
leave
leave
leave
leave
push
pop
or
out
out
or
jnp
or
jbe
jmp
or
out
push
jmp
por
jmp
adc
pop
out
out
adc
push
adc
dec
adc
dec
adc
out
push
jmp
pop
jmp
sbb
xor
out
out
jmp
sbb
es
and
out
push
jmp
pop
jmp
and
or
add
and
and
test
adcl
jae
add
push
fwait
dec
jecxz
mul
das
and
push
add
jns
nop
cwtl
mov
sahf
out
ror
aad
out
sahf
out
in
out
repz
jnp
clc
std
add
out
sahf
out
sbb
and
sahf
das
xor
ds
dec
jg
sarl
enter
add
and
or
or
push
movups
adc
adc
push
pop
sbb
sbb
sbb
push
pop
and
mov
xchg
and
aas
push
imul
add
sbb
rcr
mov
lods
cmp
in
push
inc
mov
xchg
mul
or
cmp
cmp
xchg
out
imul
or
shlb
push
stos
shrb
and
out
pop
mov
fisubl
mov
inc
pop
das
push
add
dec
mov
aaa
xor
mov
or
decl
sbb
adc
pop
sti
cmp
loope
pop
mov
xchg
dec
subb
mov
lea
loopne
cmpb
add
cs
lret
add
nop
add
hlt
aaa
scas
sbb
fldenv
ja
push
jbe
cmp
rolb
shll
std
or
jmp
xchg
sbb
add
or
iret
jno
xchg
ficomps
cmp
pop
loop
fldenv
and
int3
xchg
pop
mov
mov
test
setge
or
adc
and
jmp
repnz
jecxz
xchg
ja
inc
mov
mov
push
mov
scas
mov
push
cmp
andb
or
cmpb
or
jne
pop
js
pop
add
dec
push
in
xor
pop
lcall
stos
call
pop
xor
shr
xor
pushf
sarl
in
push
hlt
push
shr
xor
add
add
add
jne
mov
pop
iret
or
insl
push
adc
out
or
and
xor
add
add
jnp
push
aam
sub
jge
fsubr
add
or
mov
ror
mov
aas
pop
mov
fisubl
aam
cli
and
and
roll
lods
mov
push
rolb
leave
xor
push
fs
fisubrl
movsl
sbb
repnz
sub
fdivr
outsb
movsb
push
or
push
or
xlat
and
ror
add
add
loopne
add
add
cs
cmp
aam
cmp
push
pop
pusha
mov
push
xor
enter
sub
ljmp
rol
rcll
add
cli
push
xor
pop
dec
lcall
xorb
sbb
in
shl
in
push
sub
data16
push
inc
push
add
add
pusha
mov
pop
cmp
or
fadd
xor
call
shlb
in
or
lahf
cmp
movsb
imul
lods
xor
test
pop
sub
cmp
sbb
add
cmpsb
xor
fcoms
inc
jge
and
call
in
jl
and
into
add
and
xor
cmp
imul
push
xchg
js
adc
pop
inc
mov
jo
ret
push
jo
ficoms
or
les
pushf
cltd
lcall
cmp
add
cs
adc
loop
mov
and
sbb
lods
dec
fadds
pop
fs
subl
insl
and
fisubrl
fdivrs
or
clc
jl
push
and
add
imul
imul
add
in
stc
icebp
xor
shll
inc
aam
xchg
fidivl
jbe
cli
nop
or
jmp
aam
dec
shll
cmp
adc
xor
sub
mov
jb
in
mov
shl
rolb
rcll
dec
cmp
ss
push
popl
sub
push
xor
inc
add
push
sbb
dec
inc
test
loopne
add
mov
inc
add
stos
imul
dec
gs
inc
push
xor
movsb
add
adc
dec
xorl
sahf
and
mov
add
adc
cmp
or
push
data16
nop
and
stos
inc
stos
ret
xchg
aaa
xchg
out
push
add
or
and
scas
inc
pop
mov
imul
inc
pusha
push
jb
add
pusha
pop
mov
rol
xchg
or
jo
mov
stos
insb
dec
jno
in
inc
adc
jb
mov
fs
dec
movsb
shlb
cmp
addr16
mov
int3
pop
push
jno
test
mov
jb
adc
dec
add
or
orb
adc
jbe
insl
das
call
and
jp
movsb
and
push
mov
lea
mov
dec
pop
out
or
aas
pop
add
sub
mov
fadds
inc
rol
nop
loopne
lret
jb
xchg
aaa
sub
pop
mov
sbb
pop
xor
xchg
cmc
sub
adc
dec
push
fwait
or
xor
or
pop
inc
jmp
rol
and
fdivs
or
test
loopne
mov
mov
sub
loopne
lea
jmp
lahf
orb
sub
dec
sbb
pop
mov
jg
lods
fimull
pop
jne
pop
jbe
add
sarl
add
xchg
sub
push
enter
fisttps
jbe
or
sbb
icebp
mov
mov
push
mov
sub
jae
push
pop
rolb
add
enter
fimuls
mov
sbb
lret
fs
pop
fdivp
shl
ret
ja
iret
mov
hlt
push
shr
xchg
xchg
push
sub
lea
call
mov
addl
or
dec
test
dec
cld
js
ret
movl
pop
push
pushf
mov
cmp
pushf
dec
fdivrs
jbe
fdivrl
xor
mov
sbb
mov
jo
inc
jge
outsl
pop
xchg
rorb
fwait
sbb
dec
loop
push
ds
mov
push
xchg
jle
ja
lea
imul
cmp
ja
or
mull
or
pop
add
cmp
and
mov
sbb
lock
enter
sbb
add
adc
or
and
pop
in
inc
addl
xchg
and
adc
les
or
test
test
shll
push
addb
pop
mov
push
and
add
pop
pop
sbb
mov
adc
pop
call
fdivs
loopne
inc
pop
stos
xchg
icebp
sub
int
pop
imul
mov
mov
call
dec
fwait
xchg
xchg
roll
jge
push
adc
adc
dec
in
insb
loop
add
mov
xor
rcrl
xchg
mov
sbb
add
loopne
xchg
pop
sbb
xchg
sbb
xchg
and
lret
out
fists
ljmp
mov
adc
iret
cmp
lods
cmp
sub
and
add
push
and
stc
add
ret
mov
xchg
add
mov
movl
dec
adc
push
sub
push
push
inc
andb
inc
push
movsb
loope
inc
wrmsr
adc
mov
adc
orl
xor
pop
adc
push
loope
xchg
lods
in
inc
cmp
jl
sbb
or
icebp
test
mov
mov
jp
cmp
add
dec
sar
cli
es
lea
cmp
cld
jg
and
fs
jne
or
js
xor
push
sbb
js
sbb
mov
aad
or
xor
cmpb
mov
outsl
or
icebp
jl
dec
dec
mov
movsl
fstpl
mov
cmpsb
jb
xchg
nop
pusha
and
pushf
dec
daa
lods
nop
lock
lret
and
movzbl
push
rorl
and
adc
js
and
out
xchg
add
shr
jmp
push
aam
pusha
lock
mov
pop
push
inc
in
add
or
test
ret
mov
and
mov
push
and
and
call
mov
lahf
cltd
ja
add
lcall
push
pusha
mov
and
mov
ret
dec
and
xchg
pop
and
stos
and
adc
or
xor
add
push
cmp
add
cmp
rcrb
js
jne
test
mov
dec
or
push
push
sbb
loop
jo
adc
sub
cmp
adc
xchg
mov
sti
push
imul
add
jle
dec
sbb
int3
mov
sbb
and
cmp
shlb
and
xchg
add
add
adc
mov
inc
bound
add
and
mov
push
inc
push
or
xor
pop
cltd
sub
sub
dec
mov
dec
es
inc
mov
push
movl
and
or
add
imul
lcall
add
adc
mov
cmp
jno
xlat
orl
ljmp
sbb
xor
pop
push
mov
pop
ja
push
add
pop
js
pop
push
jmp
mov
jmp
cmpl
sub
push
shl
xorl
pop
adc
fisttpl
shrb
push
ss
je
xchg
jl
dec
aam
mov
pop
neg
and
ret
or
std
mov
fstpt
sub
xchg
lea
out
push
adc
sub
ss
int
mov
sbb
xor
push
or
dec
inc
push
mov
mov
cmp
jmp
and
stc
jge
sub
or
adc
jle
inc
push
push
adc
adc
outsl
cmp
aam
mov
fildl
arpl
or
push
das
add
or
lock
inc
push
aam
adc
jb
adc
js
repz
sbb
adc
testl
mov
sub
jg
adc
dec
ror
dec
sbbl
push
jno
push
aaa
xchg
sub
fwait
ret
inc
or
sbb
sbb
cmp
fwait
loope
and
jnp
pop
mov
mov
or
cwtl
and
loope
jmp
sub
popf
mov
pop
aam
rclb
push
aam
xor
pop
sub
sub
cmpsl
mov
jg
mov
cmpb
icebp
imul
les
jmp
cmp
sbb
pop
dec
shl
mov
and
sub
sbb
inc
xor
call
xor
cmp
or
cmp
inc
inc
rorl
xchg
xor
daa
pop
sbb
or
test
jle
jp
jns
adc
jnp
xor
dec
fnstenv
dec
cmp
ja
inc
rcll
push
sub
fnsave
shll
leave
mov
sub
cltd
jae
sub
rorb
push
pop
push
cld
cmpl
xor
ret
adc
mov
inc
mov
lds
mov
xor
gs
or
roll
cmp
dec
mov
and
push
pop
push
xchg
test
pop
adc
cmpsb
jmp
or
adc
hlt
je
inc
mov
data16
xchg
scas
dec
ret
fsubrs
push
mov
lock
lock
sbb
sub
mov
fimull
push
hlt
ss
mov
push
es
stos
movsl
and
dec
jge
jmp
stos
jmp
in
xchg
sbb
je
mov
orl
mov
cmp
sbb
push
xchg
stos
ja
adc
lods
or
cld
xor
insl
jl
adcl
and
pop
jnp
sub
add
scas
stos
loopne
xchg
mov
adc
sub
mov
pop
movl
orl
call
mov
dec
inc
jecxz
add
or
jmp
mov
pop
or
pop
and
inc
dec
fiadds
inc
pusha
sbb
adc
ds
lds
call
xor
xor
xchg
mov
lock
rcll
clc
into
icebp
mov
push
xor
mov
jmp
push
mov
xor
inc
dec
imul
mov
adc
and
and
mov
arpl
imul
and
mov
sbb
xor
je
nop
inc
and
ss
xchg
cmp
movsl
mov
test
push
mov
push
push
or
orb
sub
xchg
push
xor
xor
mov
adc
xor
fsubrs
pop
jb
and
and
mov
xchg
test
sbb
mov
test
and
xchg
sbb
ret
cmp
enter
adc
adc
mov
inc
and
cmp
or
dec
xchg
and
sbb
cs
and
dec
rcll
and
andl
dec
loop
sbb
loopne
jle
cmpsl
pushf
in
cld
xchg
cmp
xor
mov
cmp
leave
int3
and
leave
sbb
ret
outsb
pop
stos
xor
adc
inc
jne
inc
push
sahf
loopne
and
outsb
cmp
out
sbb
or
mov
out
les
jecxz
lea
ljmp
ret
arpl
mov
lea
push
jbe
lcall
enter
scas
push
push
adc
repnz
adc
mov
cmpl
inc
push
lods
les
popf
out
mov
add
adc
adc
fisttpll
ret
insl
dec
dec
test
fldl
cmp
call
and
mov
jmp
sub
dec
dec
add
das
push
inc
cmp
pop
sbb
nop
push
push
xchg
dec
nop
push
inc
mov
pusha
leave
xor
faddl
mov
shrl
fimull
test
ds
xchg
mov
mov
cmpb
sbb
sub
rolb
test
pop
pop
fisubrs
popa
outsl
jmp
fstpl
fndisi(8087
or
fisubl
sbbl
out
adc
or
imul
xchg
mov
xor
stc
dec
lods
sub
mov
ret
cmp
arpl
repnz
adc
pop
lods
pop
mov
stos
xchg
repnz
add
mov
sbb
dec
stc
mov
add
push
xchg
xor
jp
mov
or
inc
xchg
or
cmpsb
pop
mov
push
cmp
add
shrb
mov
or
shll
mov
push
mov
cmpsb
les
fcmovbe
sub
mov
lea
inc
std
push
push
daa
stos
je
cmp
inc
add
fwait
adc
sub
push
cmp
jge
mov
aam
adc
cmp
inc
insb
lock
lea
les
cmpsl
ret
pop
mov
lds
lcall
add
xor
lret
lret
lock
clc
clc
cld
jne
incb
jae
movl
xor
push
add
nop
imul
dec
fbstp
dec
je
add
adc
cmp
fiaddl
lret
orb
mov
mov
or
push
cmc
lock
ljmp
xor
test
rolb
sub
dec
xor
lds
push
daa
pop
cmpsb
adc
jnp
mov
mov
dec
je
dec
lods
mov
push
add
loop
dec
xchg
pushf
popl
mov
lcall
sub
icebp
ljmp
xchg
testb
mov
test
je
cmp
jne
push
rcrl
sbb
adc
mov
imul
or
data16
add
xor
xor
inc
cmpb
test
sbb
or
gs
lret
idiv
inc
inc
imul
add
mov
hlt
clc
jb
pop
cld
mov
cmpb
add
lahf
pop
je
mov
add
add
or
cmp
jns
or
cmp
or
add
adc
push
push
lock
ljmp
out
repnz
jbe
inc
push
and
fiadds
daa
pop
out
mov
aaa
sarb
push
jge
test
xchg
ja
imul
outsb
gs
jae
repnz
arpl
xor
insl
jmp
mov
repnz
sub
adc
cmp
je
cmp
push
cmp
mov
clc
jne
inc
jne
loopne
in
sub
les
fwait
sub
jb
ljmp
rorl
cmp
jne
pop
dec
add
pop
add
loop
cmp
push
ret
sbb
sarb
add
subb
fcoms
xor
mov
jp
jl
or
jg
mov
jmp
and
pop
outsb
outsb
ds
jmp
inc
jl
inc
jg
aaa
mov
std
push
jp
add
shl
dec
mov
sub
mov
call
mov
fscale
push
xchg
ss
jg
xchg
jg,pn
imul
and
sbb
inc
sbb
xchg
rcrl
scas
add
sbb
or
push
xchg
out
mov
xor
aaa
sub
frstor
pop
and
xchg
mov
jl
pusha
mov
cli
popa
mov
jg
pop
fs
imul
inc
imul
inc
mov
xorb
mov
lods
aaa
lcall
cmp
dec
sub
mov
jmp
test
ljmp
xchg
inc
out
test
das
movsb
xor
xor
fsubs
add
inc
cmpb
mov
movsl
pop
call
filds
pop
pusha
idivb
call
out
jmp
xor
jno
les
dec
inc
fs
mov
dec
sbb
or
add
pop
fsubr
xorb
pop
push
shrb
cld
cmp
sub
mov
inc
and
sub
lds
je
je
and
cmpsb
pcmpeqb
clc
insl
or
mov
mov
add
cmp
into
hlt
add
jne
mov
mov
ds
cld
imul
inc
lods
lret
inc
mov
cs
imul
cmp
or
cmp
mov
jmp
test
andb
push
aad
xchg
ret
out
jg
loop
sbb
inc
push
dec
and
mov
dec
dec
mov
inc
cwtl
add
ljmp
mov
jmp
jns
dec
cmp
or
fsubl
mov
sub
jge
jne
xor
add
rcrl
loopne
movsb
push
sbb
pop
push
add
xor
adc
dec
js
inc
inc
cwtl
xor
pop
inc
inc
push
sbbb
add
add
fisttpll
scas
movsb
sti
sub
into
mov
mov
shl
lds
and
gs
jne
dec
imul
mov
andb
icebp
loope
out
jmp
push
rolb
mov
xorb
xchg
and
mov
sbb
lea
push
xchg
shl
inc
aaa
mov
mov
imul
ret
jge
add
ret
xor
or
mov
fcom
mov
xlat
out
les
dec
adc
jne
push
pushf
mov
xchg
mov
ret
add
dec
lock
cmp
incl
cmp
pop
xchg
aam
cmp
mov
inc
cmp
sub
mov
inc
cltd
or
sbb
adc
in
xor
pop
mov
pop
sub
cmp
inc
push
imul
inc
ds
and
out
cmp
outsb
mov
insl
xor
roll
pop
push
or
or
enter
mov
popf
and
xor
inc
mov
leave
enter
and
jle
movb
jbe
pop
les
fs
sbb
push
js
rolb
inc
mov
jns
cmpb
jne
leave
lods
mov
cmp
not
les
test
aaa
sbb
jne,pt
ds
sbb
ja
dec
ret
addb
and
cmp
xchg
pusha
aas
add
lods
xor
cs
xlat
mov
and
lods
dec
xor
dec
out
mov
aam
test
mov
into
push
jb
rcrb
scas
xorl
fs
orl
rolb
ljmp
inc
lock
in
xchg
jecxz
jecxz
pop
loope
ret
pop
xorl
pop
repnz
test
in
lret
pop
adc
call
shll
push
aaa
sbb
or
sbb
in
mov
push
pop
fnstsw
mov
dec
dec
and
or
ss
shrb
data16
push
push
nopl
inc
test
jl
mov
inc
pop
mov
push
pop
cld
pusha
ret
popf
inc
insb
je,pt
inc
add
inc
jl
push
scas
shll
sub
sarb
rcrb
lods
addl
fstpt
push
test
fldl
inc
fisttps
mov
imul
mov
lock
clc
push
push
addb
adc
pop
jo
mov
fsubs
add
loopne
addr16
push
jo
add
lods
loopne
or
and
fwait
pop
fists
xor
into
sahf
sub
xchg
pop
lods
push
push
lea
loopne
orb
cli
xchg
sub
adc
xchg
mov
or
sub
jo
adcl
sbb
or
and
sbb
add
mov
imul
cmp
fcomps
insl
test
ss
stos
leave
cltd
sub
test
sahf
xchg
dec
sbb
cs
call
cmp
xchg
lock
xor
negb
add
int3
out
jmp
imul
push
push
mov
es
cmp
je
ret
scas
test
push
adc
sbb
or
or
lret
movb
add
mov
hlt
cmp
movl
pop
loopne
sbb
adc
xor
push
mov
enter
mov
in
jne
add
and
sub
aas
inc
je
dec
adc
lock
insl
jne
mov
push
dec
cld
minps
je
or
cmp
and
push
scas
insl
or
adcl
jg
outsb
test
jp
mov
dec
sub
add
and
add
pusha
js
movsb
movsl
dec
dec
cltd
or
cmpb
pop
outsl
push
push
add
sbbl
mov
daa
push
mov
cmp
out
sbb
je
and
add
inc
rclb
clc
mov
fimuls
push
add
xchg
add
pusha
inc
lds
in
pop
dec
mov
aas
add
add
jo
xchg
iret
sbb
add
fcomps
add
sbb
jmp
mov
inc
fsts
dec
pop
xchg
or
pop
pusha
movsl
cmp
jne
add
add
add
push
bound
fldenv
movsl
xor
sbb
jecxz
mov
dec
sbb
data16
inc
rclb
iret
std
leave
sbb
fstpt
mov
into
je
mov
add
ja
movsl
clc
nop
hlt
jmp
mov
sub
jne
sbb
sbb
push
xchg
adc
pop
adc
pusha
xchg
in
sbb
fs
shl
test
stos
or
movsl
lcall
stos
push
pop
fdivrl
in
jmp
es
dec
inc
mov
jb
hlt
or
jnp
ret
loopne
pop
dec
addr16
stos
add
inc
xchg
mov
jle
in
ret
xor
aaa
imul
cmc
in
sbb
cmc
jno
inc
mov
into
or
add
fists
mov
int
movsb
push
or
or
sbbl
xorl
and
jno
outsl
in
dec
movsb
icebp
add
xor
movsb
lock
mov
bound
push
sub
push
cmp
pushf
fstpt
scas
cmp
push
dec
push
arpl
mov
mov
pop
daa
sub
push
subl
or
movsb
mov
inc
mov
xor
pop
imul
ds
lock
loop
xchg
dec
push
push
jmp
bound
mov
fiadds
or
push
mov
inc
and
leave
or
xchg
ss
enter
adcb
push
loop
leave
add
fs
pop
or
sarb
sahf
fs
aaa
out
movsb
xchg
movsb
push
out
jmp
shl
test
sahf
call
enter
adcb
cwtl
xchg
pop
lock
stos
cmpsl
sbb
sbb
stos
out
test
push
and
call
sbb
jl
add
push
xchg
or
push
loopne
ret
jmp
and
clc
inc
ret
mov
inc
inc
movsb
sub
sub
sbbb
xchg
lret
add
addl
subl
clc
pop
and
or
icebp
jno
sarb
inc
rolb
xor
ret
cmpl
push
in
faddl
mov
in
mov
loope
or
out
push
mov
or
nop
add
sub
push
push
inc
mov
add
fadds
adc
xchg
aam
dec
fbld
mov
inc
xchg
add
mov
and
or
mov
shlb
push
rcrl
jmp
add
hlt
mov
xor
mov
sarl
mov
int
call
mov
ss
pop
add
or
xor
sarl
cmp
pop
sbb
sub
fistl
mov
sub
and
inc
pop
jmp
add
inc
scas
inc
inc
call
je
in
fimuls
mov
inc
data16
jo
inc
inc
xchg
jnp
sbb
mov
adc
sarl
cmp
pop
push
cwtl
and
outsl
nop
sbb
add
jecxz
cmpsl
fldl
adc
jne
dec
lods
adc
cmp
sbb
add
leave
fcoms
insb
stc
ss
aad
test
push
leave
jno
loop
jb
xor
xchg
lea
roll
jmp
rorb
push
pop
adc
lret
popf
and
ret
mov
add
mul
and
sbb
adcb
xor
ljmp
and
adc
mov
sbb
push
mov
movl
pusha
jo
add
sub
cmp
or
repz
mov
sub
cmp
cmp
dec
enter
mov
ja
aaa
icebp
lods
push
nop
ret
xor
or
pop
fs
out
test
add
inc
or
or
dec
sub
subl
data16
rcll
mov
adc
dec
adc
mov
inc
mov
sbb
inc
clc
sbb
xor
cmp
rcll
movsb
das
and
aam
or
sbb
mov
xchg
dec
aad
loope
xor
sbb
bound
pop
mov
sbb
lcall
jne
pop
push
jae
inc
inc
add
mov
popf
add
or
jne
ljmp
push
or
push
push
mov
or
xlat
rcll
jecxz
int
fmuls
jmp
lea
fdivrp
dec
daa
orb
or
in
dec
pop
aam
pop
dec
sbb
sbb
cmpl
fisubl
mov
adc
insb
inc
insb
or
add
and
and
idiv
xchg
movsl
inc
mov
movsl
pushw
in
shll
mov
mov
cmp
adc
clc
sub
das
loopne
mov
js
je
icebp
xor
jl
rolb
outsl
sbb
stos
movsb
inc
jecxz
add
stc
clc
or
mov
add
jp
pop
jmp
sbb
add
inc
test
adc
rcrl
mov
testl
xchg
sbb
sub
pop
in
jae
cmp
pop
mov
bnd
cmp
sbb
xchg
shlb
fldenv
dec
shll
push
inc
adc
add
movl
cmc
add
leave
ret
mov
xchg
xchg
xor
ret
lods
inc
sbb
je
jp
ja
shlb
mov
test
or
pusha
jnp
out
ds
lock
xchg
adc
sbb
loop
or
jmp
or
sbb
adc
fs
or
lret
adc
cmp
jb
add
sarl
les
out
popf
or
inc
pop
mov
push
scas
stos
pop
aaa
je
sub
xlat
sub
sarl
jecxz
sbb
adc
sbb
mov
loopne
outsl
in
jae
jle
andl
or
pushf
push
sbb
add
imulb
shrl
sbbb
and
sub
popf
dec
xchg
push
jo
pop
add
or
cli
jmp
inc
ja
adc
cmp
loop
lods
and
jbe
push
inc
andb
test
pop
js
or
inc
sbb
in
mov
add
push
loopne
cmp
insl
pop
adc
loopne
sub
in
test
loopne
ret
pop
mov
add
mov
jae
sarb
adc
call
push
or
mov
lock
mov
xchg
mov
jmp
arpl
push
mov
scas
inc
pop
mov
loop
pop
adc
or
pop
adc
popf
rcll
mov
repz
add
xchg
push
xchg
mov
bound
daa
arpl
sub
add
xor
and
hlt
fs
push
das
sub
push
push
inc
add
jnp
ret
or
cmp
fiadds
lds
fcmovbe
cmp
or
pop
cmp
cs
lcall
in
mov
mov
sbb
add
test
or
mov
dec
ja
inc
jp
mov
push
add
gs
adc
push
push
push
ss
clc
incb
movsb
insl
imull
mov
or
shrb
cmc
cmp
lds
clc
dec
push
xor
lods
mov
push
mov
inc
sbbb
sbb
andb
add
sub
out
ret
outsb
adc
jb
and
inc
sub
aaa
jo
add
imul
out
adc
cwtl
add
les
fs
into
sub
xor
icebp
add
inc
adc
je,pt
sar
adc
xorb
in
add
in
cmp
imulb
in
push
push
mov
cmp
push
mov
add
push
jg
add
sbb
mov
or
lods
out
into
lret
inc
mov
inc
mov
movsb
js
call
xlat
cmpsl
inc
mov
movsl
pop
jae
add
lock
adc
and
sbb
push
and
add
mov
xor
cmp
in
sub
xor
or
and
inc
inc
nop
sub
xor
test
aas
enter
push
je
cmp
jbe
push
add
popa
adc
testb
outsl
mov
push
movl
push
enter
ret
mov
sub
enter
aam
jo
cltd
stos
dec
lock
pop
inc
fists
mov
push
adcb
into
inc
adc
or
cli
aam
in
jo
mov
dec
popl
jl
mov
outsb
dec
insb
xchg
lock
adc
or
push
cmp
fldt
xchg
dec
jo
mov
js
mov
ja
add
sub
icebp
daa
rorb
scas
lods
test
add
lret
mov
add
sub
push
wbinvd
push
sarb
push
sub
adc
jecxz
movl
adc
je
inc
pop
pop
les
xor
data16
rcrb
sub
xor
dec
adc
sub
aad
cmpsb
mov
fmull
pop
ja
call
and
cmp
jne
push
jle
cli
push
mov
xor
enter
jbe
pop
pop
push
lret
jne
mov
adc
fcomi
ss
cmp
std
push
in
dec
cmp
inc
push
xor
pop
div
hlt
add
lea
mov
or
sub
push
inc
or
xchg
xor
push
dec
pop
adc
cwtl
sbb
inc
cli
push
sbb
adc
and
add
push
dec
adc
mov
adc
add
pop
jmp
pop
jp
adc
xchg
cmp
popa
jo
ja
dec
sbb
std
rcr
andl
gs
loopne
pushf
outsl
in
mov
lods
xor
add
push
inc
dec
aam
add
rorb
loopne
je
pop
int
adc
jb
je
aas
add
mov
sub
jo
mov
je
adc
sub
sub
jne
bound
shll
adc
out
adc
inc
add
imul
clc
int3
add
dec
or
mov
mov
dec
or
pop
adc
inc
jns
push
cmpl
xchg
mov
pop
dec
cmp
jb
neg
mov
rorl
ffreep
add
cmpsb
loopne
add
or
adc
and
je
rep
mov
imull
mov
dec
ljmp
jb
loop
gs
call
push
ret
adcl
je
mov
or
xorb
fsub
or
sbb
push
outsl
dec
jne
sub
stc
dec
xor
lea
scas
push
sub
rorl
and
cmp
sbb
je
push
mov
cwtl
scas
pop
push
icebp
dec
fsubrl
and
sbbb
psubusw
mov
out
cmp
and
clc
jg
fs
std
pop
cmp
add
movd
movaps
out
push
enter
shlb
jle
xor
decb
aaa
das
cli
rcl
lret
je
cmp
sub
lret
or
jg
cli
fwait
ret
inc
ljmp
and
in
add
sub
and
add
adc
je,pn
jne
adc
sbb
outsb
fisubrs
repnz
roll
lock
mov
add
pop
shlb
std
addsd
int
add
dec
sahf
repnz
sbb
idivl
pop
test
iretw
into
mov
jne
orb
and
add
rolb
mov
mov
add
xorl
test
mov
lods
mov
or
lcall
mov
andl
adc
cmpsb
leave
and
lret
rolb
hlt
fldenv
lret
dec
cmc
cwtl
sarl
cmp
ficoml
pop
inc
dec
pusha
push
pop
andb
add
sti
lcall
adc
add
pop
adc
ficoms
dec
pop
shlb
and
inc
sub
lea
cmp
scas
mov
aas
in
je
cmp
jne
inc
cmpb
out
orb
pop
adc
and
pop
mov
inc
inc
and
adc
or
or
mov
add
mov
pop
jmp
pop
imul
and
clc
ljmp
sbb
dec
add
cmp
cltd
lcall
xor
xor
pop
notrack
xor
fmull
mov
syscall
jb
leave
push
adc
adc
jo
lea
jno
and
clc
adc
dec
popf
push
lea
cmpb
pop
mov
jns,pn
test
fbld
xlat
cld
sub
xor
add
addr16
es
jno
mov
in
push
sbb
movb
mov
ret
sbb
pushf
pop
addr16
loope
and
sbb
test
lods
and
or
cmpsb
dec
dec
pop
jp
pop
inc
sub
add
shr
add
mov
inc
dec
mov
and
xchg
adc
mov
pop
cmp
jmp
inc
add
mov
psubusw
outsb
mov
mov
jl
js
fidivrs
orl
fwait
adc
fsubs
popf
or
adc
push
jecxz
cli
jmp
cld
rolb
pop
pop
pop
and
dec
lock
adc
cmp
inc
stos
jo
cmp
xchg
mov
arpl
cmp
pop
sbbb
int3
pop
cs
jnp
sbb
mov
xchg
add
cmp
cli
adc
sub
or
cmp
inc
jb
or
mov
or
sub
or
rorb
pop
add
out
pushw
add
rol
xor
inc
data16
push
aas
inc
je
pop
mov
ret
add
je
jae
pop
or
sub
jecxz
lock
fs
cmp
jns
jo
cmp
adc
xchg
pop
ret
add
jmp
xor
and
pop
stos
loop
icebp
mov
and
rolb
shrl
pop
or
shlb
jbe
jmp
gs
iret
cwtl
xor
movups
inc
inc
mov
add
rorl
add
and
pop
cld
or
add
mov
jne
out
cld
mov
hlt
testb
je
inc
mov
cmp
clc
inc
xor
es
loope
or
cmp
adc
loop
or
js
ss
xor
push
push
bound
lds
mov
push
loope
xor
rorl
push
outsl
jne
nop
mov
push
pop
inc
cmpsl
daa
mov
dec
push
or
stos
inc
jle
or
xchg
stos
jge
adc
push
roll
cmp
test
xor
add
daa
cmp
stc
xor
fwait
add
pcmpgtd
pop
mov
dec
ficoml
pop
adc
lcall
stc
or
rep
jmp
addb
cmp
pop
or
jb
xchg
add
test
out
outsb
or
add
push
test
adc
adc
fs
cld
fnstenv
mov
or
lods
adc
inc
mov
mov
movsb
xor
pop
dec
add
sub
nop
inc
xor
xchg
mov
mov
aam
int3
push
jmp
jns
mov
inc
mov
mov
cmp
repz
call
cmp
repz
hlt
clc
clc
or
scas
shll
add
lock
sbb
jmp
ret
jecxz
sub
mov
fildl
pop
sti
and
xor
push
inc
and
dec
scas
mov
into
jl
cld
pop
and
sub
or
mov
fsts
out
xchg
daa
stc
sub
jnp
gs
addr16
nop
mov
mov
int3
rcr
add
out
add
mov
mov
inc
push
fisubl
add
push
fmull
out
mov
push
push
or
iret
repz
pusha
push
clc
subl
sbb
sbb
repz
adc
adc
cmp
repz
or
out
sbb
inc
pushf
or
aaa
push
add
andl
adc
lods
inc
icebp
test
or
mov
pop
shlb
sbb
mov
aam
xor
cmp
add
fildl
shlb
dec
call
push
sub
push
jae
mov
or
jmp
imul
or
leave
les
pusha
mull
mov
adc
mov
jae
sub
fs
push
add
pop
sbb
rorb
lock
sub
sbb
sbb
ror
imul
xchg
inc
sbb
loop
mov
or
mov
std
es
adc
daa
fwait
loope
movl
and
adc
cmp
adc
sarb
jmp
cmp
mov
xchg
adc
fiaddl
xor
mov
sarb
imul
inc
sbb
rorb
or
adc
cmp
or
hlt
dec
loope
or
xchg
push
inc
and
jp
mov
stos
xchg
and
or
fidivrl
dec
mov
sbb
sbb
dec
adc
nopl
add
fdivrl
jle
adc
push
adc
insb
pop
fisttpl
sub
add
aaa
pop
cmp
pushf
mov
cmp
sbb
push
add
lea
cmp
jl
jmp
jnp
andb
cmp
jne
push
adc
loopne
ds
or
add
mov
test
add
xor
aad
pop
fmul
cmp
jle
jne
xor
add
and
push
outsl
or
add
push
mov
xchg
mov
sbb
les
jmp
insl
clc
adc
pop
push
mov
loopne
cli
mov
sti
pop
inc
mov
cmpsb
mov
mov
inc
pop
ljmp
fdivs
mov
sarl
call
adc
jne
insl
push
jb
jle
pop
scas
pop
and
push
loope
xor
clc
ret
ja
pop
add
jno
ss
inc
mov
dec
or
repnz
and
bound
xchg
push
or
push
xchg
aaa
pop
mov
stos
jmp
sub
add
enter
push
xchg
test
fnsave
jne
pop
push
or
jmp
jb
fimull
loopne
rcll
fsubl
daa
push
into
and
pop
mov
pop
and
add
loopne
popa
fucom
sub
pop
fsubrs
and
shl
pop
andb
jmp
insb
mov
or
pusha
sub
repz
jg
pop
mov
lock
js
push
ljmp
in
adc
adc
push
push
sub
inc
xor
adc
push
or
fsubrl
or
inc
js
std
xor
je
or
sub
push
fs
pop
gs
adc
cs
mov
xchg
mov
add
shl
mov
sbb
rcr
inc
xor
inc
xchg
mov
loopne
ja
pop
jbe
lea
adc
sbb
dec
and
data16
cs
lock
push
inc
pop
dec
ss
jb
push
aad
aam
clc
jbe
add
and
insb
out
jb
sbb
imul
mov
popa
add
add
into
or
loopne
pop
mov
test
jne
test
cmp
xlat
stos
rolb
das
mov
sub
add
je
cvtps2pd
pushf
pop
mov
movsl
xor
es
pop
es
addr16
pop
dec
mov
push
or
mov
decb
sub
add
cld
data16
shl
pop
popa
and
jmp
js
hlt
inc
sub
adc
loopne
adc
fwait
push
or
sbb
dec
push
or
add
or
jb
or
pop
lcall
test
shlb
ret
data16
mov
and
inc
pop
pop
or
mov
add
out
shl
xorb
repz
lahf
mov
push
adc
cltd
rolb
adc
cltd
rorb
dec
frstor
or
repz
rorb
push
out
adc
or
repnz
add
mov
and
jle
daa
dec
jne
jmp
inc
pusha
stos
and
cs
pop
mov
dec
es
jne
mov
xorl
ret
setle
ret
xchg
pop
xor
enter
push
aad
lds
pop
bound
mov
insb
arpl
shr
jo
dec
lea
outsb
into
loopne
add
out
mov
push
cmp
jne
mov
push
cmp
repz
std
jne
es
jne
fstl
dec
call
aam
nop
add
inc
orb
ret
inc
incl
repz
mov
adc
jmp
std
xchg
std
mov
cld
cld
jmp
fildl
addr16
adc
in
adc
adc
inc
inc
inc
mov
out
pop
lods
push
test
xor
or
repnz
test
mov
mov
test
mov
out
push
xorb
shr
sub
dec
and
stos
repz
jns
pusha
sbbl
push
jp
popa
mov
arpl
lea
inc
cmp
or
test
add
inc
inc
add
adc
adc
mov
mov
add
or
adc
in
ds
pop
loopne
and
pop
pop
lds
es
or
pop
fs
data16
aaa
mov
movsl
in
movb
jmp
add
push
cli
push
mov
addr16
mov
mov
je
mov
mov
xchg
pop
jg
add
mov
dec
and
mov
or
sarb
dec
call
push
push
inc
test
and
lret
loopne
push
ja
outsb
loopne
out
jae
out
gs
or
dec
add
lea
mov
add
or
ja
daa
leave
cmp
push
xchg
das
pop
jo
and
xorb
pusha
pop
pop
pop
js
or
insb
sbb
jo
sbb
jno
bound
sarb
mov
jb
addb
imul
add
inc
mov
push
rcrb
call
push
jge
dec
mov
ljmp
in
les
ds
and
fmul
es
mov
jb
ljmp
or
adc
or
dec
xchg
pop
lea
int3
ret
aam
je
add
sbb
mov
sub
add
not
and
sub
inc
inc
mov
sti
and
mov
scas
xchg
xor
sbb
test
cld
sub
adc
xchg
adc
push
movsl
mov
push
xchg
js
sbbl
ja
bound
jne
pop
mov
ljmp
incl
loope
fcmovne
sar
stc
and
mov
inc
je
outsl
inc
cld
fistpll
lea
neg
mov
lcall
sbb
ret
add
xor
shl
scas
and
sbb
scas
mov
je
mov
add
mov
inc
cmp
jb
add
push
add
divl
in
cmpsb
hlt
pop
ret
gs
push
jb
or
or
ret
cld
into
xlat
adc
add
adc
jne
or
jne
outsb
outsl
pushf
shl
push
adc
pop
test
and
xor
dec
stc
addl
divb
in
xor
jo
and
out
jne
and
lret
mov
les
test
cld
or
ss
cmp
je
sahf
addr16
xor
and
fsubrl
sti
jns
aam
xchg
pop
addr16
and
push
mov
push
cmpl
xor
adc
adc
outsb
xor
and
lock
in
adc
mov
insb
dec
call
add
jg
xlat
loopne
add
mov
add
jle
pop
pop
sbb
es
test
pop
add
loopne
arpl
cmpsb
bound
mov
inc
jmp
cmp
inc
mov
add
sub
xchg
mov
adc
cmp
aam
xor
lret
push
ss
or
mov
adc
adc
pop
imul
cmpsl
mov
pop
add
push
cld
sbb
cmp
test
mov
and
je
vmovaps
sbb
roll
pusha
je
lea
sbb
dec
mov
and
xchg
shrb
sub
or
sub
jbe
push
add
cmp
outsl
fcomps
dec
push
rcrb
scas
and
sbb
mov
mov
push
adc
shl
cld
xor
sbb
stos
jno
inc
sbb
adc
sbb
sbb
xor
dec
in
or
adcb
mov
jmp
push
sbb
lcall
push
sub
jno
or
sbb
jmp
test
pop
xor
jne
mov
sti
rcr
or
lock
mov
inc
mov
dec
jne
mov
add
shufps
add
pop
insl
push
add
adc
insl
push
or
mov
enter
push
dec
dec
add
push
inc
adc
addl
mov
or
cmp
es
or
adc
sub
sub
mov
mov
popf
jbe
push
adc
nop
mov
insb
sbb
sub
pop
sbb
push
ljmp
jne
pusha
push
into
jl
or
test
imul
mov
movb
inc
jo
inc
sbb
lea
add
adc
or
adc
clc
test
enter
or
clc
scas
mov
bound
clc
mov
es
sbb
add
icebp
add
pushf
rorl
xor
ficoms
pop
cs
inc
pusha
mov
or
es
sub
dec
push
xor
xor
or
mov
inc
cmovns
in
rsqrtps
xor
inc
int3
push
es
sub
cld
or
push
mov
or
mov
or
cmpxchg
mov
sub
mov
cmpl
or
movsl
adc
pop
xor
or
das
adc
outsb
push
test
and
and
inc
sub
add
jmp
es
or
push
add
sub
mov
mov
inc
shlb
add
sub
loop
int3
fcomps
ret
push
or
sti
or
mov
int3
rcrb
cmp
push
or
adc
sbb
push
or
push
jp
push
jmp
xor
adc
loop
or
mov
jle
mov
rcrb
mov
jne
ja
btr
pop
cmpl
push
fwait
scas
dec
gs
mov
jge
or
or
gs
rcrb
jbe
inc
shrb
in
inc
dec
jae
adc
lods
sarb
in
loop
dec
push
push
aaa
mov
mov
push
data16
pop
addl
jnp
add
decl
cmp
pop
fisubrs
sub
jbe
mov
pop
push
hlt
cltd
pop
idiv
dec
test
xor
add
xchg
cmpb
sub
push
cmc
stos
scas
popa
push
mov
pusha
adc
rcrb
add
imul
dec
fisubl
jp
loopne
dec
in
dec
pop
popa
pop
mov
pop
test
sub
pop
aam
mov
test
movsb
add
dec
adc
in
dec
mov
pop
add
pop
pusha
sub
add
sbb
out
jns
jle
adc
or
repnz
fcomp
repz
add
or
add
push
inc
pop
loope
and
xchg
loopne
mov
mov
rolb
pop
and
js
stos
push
fcoms
jnp
jnp
test
mov
push
in
mov
inc
aam
jbe
and
lods
jp
rolb
or
jg
pusha
cmp
dec
mov
jecxz
inc
or
dec
mov
faddl
div
add
push
clc
adc
fs
enter
daa
mov
popf
inc
je
cli
dec
add
sbb
popa
in
dec
cmp
cli
call
movswl
push
aam
jmp
dec
je
add
or
cmp
inc
pop
je
push
or
in
fisubrs
sbb
add
jmp
sub
push
test
push
sti
xor
sti
jbe
mov
cmp
push
push
sub
push
lea
push
test
sahf
sub
dec
push
cmpsl
mov
jo
arpl
add
pop
inc
xchg
lcall
push
push
addr16
jne
mov
cmpsl
or
packuswb
add
dec
mov
xchg
inc
jne
jae
mov
in
push
repnz
xchg
dec
add
cmp
and
dec
xchg
cmovp
jns
jns
mov
or
push
add
sub
push
rolb
add
js
rorl
js
jbe
scas
cmp
mov
add
ja
out
pop
std
lret
adc
or
dec
jb
je
push
jmp
aas
lcall
mov
imul
clc
inc
dec
adc
or
mov
je
push
fsubrs
add
add
cmp
dec
repz
add
adc
idivl
mov
jmp
cmp
jae
stos
arpl
or
mov
push
mov
push
mov
sbb
subb
dec
dec
push
add
int3
inc
sub
mov
loop
and
decl
add
sub
dec
sbb
rolb
cmpsb
dec
cmp
pop
call
xor
lcall
adc
add
sub
je
or
or
dec
and
roll
and
or
mov
dec
xor
or
cwtl
add
imul
adcl
rorb
cmp
push
and
movsl
jb
jo
addr16
xor
push
pop
lods
pop
mov
decl
das
pop
jmp
lock
xor
mov
movsb
mov
push
pop
sbb
push
pop
jg
dec
shll
dec
movsb
inc
push
pop
sub
rolb
ret
push
adc
cmp
push
dec
xchg
mov
scas
cmp
adc
mov
add
into
cmp
lret
jnp
jo
push
push
add
sbb
push
inc
movsl
loopne
dec
lods
movsl
stos
sbb
mov
cli
insl
or
cmp
mov
ret
test
dec
insl
sarl
inc
xor
and
out
jnp
jns
add
inc
cmp
jne
fldcw
cmp
cmp
stc
mov
rorl
mov
int
imul
add
sbb
jge
insl
inc
shlb
pop
adc
push
lods
mov
cmp
shlb
mov
add
cmp
xchg
mov
inc
movb
call
and
testb
pop
inc
mov
sbb
mov
push
je
add
sub
shrb
fldenv
xor
jbe
add
and
fsubrs
xor
pop
sets
xchg
andl
sbb
mov
push
mov
jg
ds
enter
add
aam
cltd
cmp
popa
imul
mov
leave
cmpsb
mov
xorb
inc
ds
stos
std
test
xchg
sbb
jl
lock
xlat
cltd
adc
mov
sbb
orb
test
push
test
adc
cmpsb
aaa
jb
repz
add
cmpsb
mov
cwtl
clc
enter
pop
cwtl
loopne
mov
push
xchg
and
jmp
inc
and
jbe
hlt
mov
mov
je
sahf
xor
jl
jge
jnp
es
cli
add
icebp
adc
mov
adc
dec
pop
lret
movsb
sbb
and
xchg
sahf
rclb
mov
fmul
jo
mov
popa
lret
dec
rolb
sbb
es
inc
mov
jge
call
inc
mov
add
dec
pop
jp
or
insb
rol
es
ja
imul
cmc
mov
adcb
gs
push
cmp
pop
dec
out
or
insb
sub
dec
cld
jmp
add
push
mov
xchg
subb
push
mov
cmp
add
scas
test
pushf
ja
or
in
outsb
jbe
mov
rorl
inc
dec
call
xor
lock
dec
movsl
in
cmp
sbb
jmp
pop
inc
and
sub
sub
loopne
int
cmp
xlat
repnz
or
or
adc
fsubrl
add
push
clc
xchg
sar
imul
adc
xor
adc
je
into
lea
adc
mov
repz
test
loop
jp
inc
pop
enter
add
xchg
push
repnz
xchg
out
not
xchg
sbb
dec
lret
mov
xchg
repnz
jae
aad
mov
jne
mov
daa
out
push
leave
jge
pop
mov
out
push
push
and
add
imull
xchg
rolb
mov
stos
mov
lds
dec
incl
addr16
push
dec
inc
cmp
add
loop
sub
jmp
xor
jmp
push
pop
les
fisttpll
adc
je
pop
nop
and
inc
push
insb
nop
decl
mov
insl
adc
popa
push
pushl
rolb
push
rcr
loopne
inc
jl
call
aaa
inc
or
sbb
pop
test
mov
cmp
bound
push
xor
pushf
and
push
pop
cmp
out
daa
sbb
std
pop
push
or
je
mov
icebp
lret
in
and
or
jne
pop
repnz
int
mov
not
sar
add
fcmovbe
outsl
xchg
push
add
jle
mov
mov
and
jne
push
sbb
xchg
stc
mov
push
loopne
lea
or
fisttpll
mov
hlt
cs
push
ret
adc
mov
daa
mov
push
or
test
cmp
lods
addr16
push
jg
sbb
cltd
or
jmp
negb
push
adc
je
movsl
push
fldl
push
fstl
or
jo
cmpl
mov
xchg
int3
or
into
or
inc
sub
lock
rol
xchg
mov
int3
xchg
lock
hlt
aam
cmp
or
jns
icebp
stos
sti
subl
pop
jmp
lods
pop
add
push
shr
and
inc
cmp
or
cld
inc
push
push
add
adc
xchg
mov
cmp
push
pop
mov
mov
loopne
rcrb
sbb
sbb
das
push
lock
mov
add
add
inc
cmp
inc
inc
cmp
outsl
idivb
shlb
jb
popa
ret
outsl
add
mov
movb
jmp
out
cmpsb
popf
push
insl
xor
sub
std
add
aaa
add
add
pusha
inc
add
mov
mov
or
fwait
subl
shll
lock
adc
or
cmp
adc
mov
mov
add
or
mov
xchg
xchg
fstpl
xor
fistps
mov
mov
test
popl
int
lods
movsb
mov
or
mov
lods
movl
cmp
es
xchg
push
and
dec
sarb
xchg
mov
adc
stc
ds
out
mov
push
call
cmp
sub
push
push
int3
adc
push
xor
fdivl
ror
in
push
mov
dec
adc
jmp
sub
leave
sbb
loopne
inc
mov
andl
testb
loopne
add
push
dec
pusha
dec
popa
xor
pop
arpl
lret
loopnew
fcoml
sbb
lret
mov
or
pop
pop
popf
enter
shrb
les
add
push
out
imul
dec
popf
mov
cld
xor
inc
adc
jo
adc
and
in
xchg
pushw
clc
jno
insl
push
pushf
push
stos
or
insb
repnz
adc
cli
ret
mov
add
xorb
shl
push
mov
ret
pushl
jmp
ja
cmp
rcr
int3
int3
add
and
xor
sbb
dec
or
fsubrl
test
add
shr
pop
clc
fimuls
and
inc
dec
lods
sub
adc
push
lret
jge
movsl
pop
lea
push
mov
adc
jbe
push
inc
dec
cli
dec
push
fisubrs
hlt
jae
xor
sbb
inc
push
lock
or
pop
push
adc
or
sub
hlt
data16
sahf
mov
dec
out
mov
xchg
sahf
in
sbb
cmp
jne
jb
call
add
adc
sahf
addps
stc
rcrl
jo
mov
mov
ficompl
add
adcl
mov
jge
cmp
and
jg
or
push
nop
into
sbb
ret
cmp
test
outsl
dec
jmp
push
test
mov
xchg
ret
push
in
and
aaa
nop
in
pop
mov
shlb
xchg
lret
hlt
fdivrs
sub
sub
mov
popf
xchg
push
push
pop
sbb
fisubl
je
in
inc
call
call
stos
cs
lods
call
gs
or
pop
add
cmpl
imul
jl
lea
adc
ja
cmp
mov
dec
rcrl
push
cmp
pop
sar
pop
mov
fsubrl
sbb
xchg
push
or
inc
loopne
movsb
inc
mov
paddd
fcomp
add
xchg
loope
inc
jae
or
je
or
je
or
test
ds
enter
or
add
pop
cs
add
out
loope
rcll
int3
test
mov
adc
adc
or
or
mov
add
sub
push
imul
or
dec
ljmp
movsl
cltd
nop
imul
cmp
sbb
jo
stc
lock
or
ret
mov
lcall
inc
popa
test
or
xchg
loope
insb
xchg
pusha
sub
adc
sbb
pop
pop
mov
mov
js
add
or
add
addb
push
xor
imul
imul
and
dec
jae
adc
movsl
or
jns
rcrb
add
mov
call
out
pop
pop
pushf
dec
mov
lcall
push
mov
jb
sub
adc
rcll
pop
push
rolb
mov
in
shll
cwtl
mov
xor
dec
movsl
jmp
mov
into
out
dec
test
lea
arpl
sbb
xor
sub
cmp
mov
pop
mov
add
jo
or
dec
and
rorb
in
push
sbb
or
xor
mov
es
add
lret
pop
mov
testb
sub
sahf
inc
push
repnz
aas
add
push
insl
sub
loopne
cmp
lods
ret
loopne
ds
cmc
pushf
sub
les
loopne
test
add
cmp
jmp
mov
push
sbb
sub
mov
inc
mov
push
add
dec
mov
or
or
iret
xor
or
loop
push
jmp
mov
pop
lret
inc
lods
xlat
mov
pop
dec
sbb
mov
dec
mov
mov
mov
fsubrs
xchg
lahf
xor
jns
push
sbb
je
test
sub
push
jo
call
sbb
mov
mov
mov
stos
pusha
je
or
sub
mov
test
popa
shrl
insl
loopne
popa
xor
push
mov
cwtl
xchg
gs
popl
pusha
and
nop
dec
shlb
adc
movsb
jb
xchg
lds
lds
ficompl
shl
cmpsl
add
push
add
mov
daa
in
scas
ljmp
addr16
xchg
hlt
jmp
ja
fists
pop
jle
imul
aaa
andb
pop
push
out
mov
rcll
or
pop
or
mov
nop
cmp
pop
lret
add
mov
dec
pop
xor
cmp
sub
push
sbb
mov
andb
jne
movsl
push
push
push
jbe
add
pushf
iret
sbb
inc
mov
ud1
cmp
or
mov
das
push
dec
sub
mov
pushf
and
jae
imul
pop
emms
mov
add
cmp
sub
push
insb
arpl
xchg
es
out
push
push
into
in
push
pop
test
jecxz
bound
jb
shl
je
and
inc
mov
ja
sub
xchg
sub
cltd
push
xor
dec
add
add
adcl
push
push
orb
neg
jne
push
or
icebp
xchg
jnp
or
ds
xlat
bndldx
jge
popa
loop
daa
mov
or
outsl
mov
or
popa
lea
lcall
inc
adc
and
stc
cltd
push
push
push
xchg
rcrb
jmp
repnz
sbb
cmp
sahf
fimull
mov
dec
jmp
sub
sub
inc
cmp
sbb
fcompl
cmpb
je
shlb
or
add
cmp
in
movsb
aas
mov
es
cld
mov
movsb
sub
clc
int
and
xor
adc
sub
push
jmp
push
mov
iret
xor
sub
push
fcoms
jne
dec
push
mov
mov
jo
shrl
mov
or
xchg
test
jne
jmp
and
sbb
adc
sub
pop
mov
jg
push
xor
cmp
inc
push
cmp
jp
mov
sbb
adc
out
mov
mov
movsl
imul
xorl
jo
sub
add
dec
stc
adc
lahf
mov
and
xor
cltd
fst
add
shlb
jg
jmp
adc
xchg
pop
jmp
adc
mov
inc
xor
mov
xorb
je
gs
mov
sbb
jle
in
out
mov
pop
mov
call
or
clc
ret
xchg
mov
imul
mov
sbb
push
mov
pop
xchg
addl
and
loopne
ret
nop
loop
nop
cltd
push
into
repz
pop
lcall
or
outsb
movsl
leave
adc
xchg
or
and
rcrb
cld
inc
popf
je
push
push
pusha
outsl
mov
adc
pusha
jecxz
notl
int3
jo
out
fisttpl
or
mov
mov
mov
daa
test
test
mov
or
pushf
rcrb
and
cmp
les
dec
jb
inc
push
xchg
call
cmp
mov
call
adc
or
and
sub
adc
xchg
popf
lods
xchg
adc
out
addr16
mov
or
adc
incb
test
and
jb
into
mov
aam
adc
mov
pop
sub
jae
sub
and
add
cwtl
pop
push
sbb
loope
test
mov
lock
psubsb
jb
in
push
hlt
ret
inc
addl
call
xchg
push
out
lret
sbb
movsl
and
gs
fcoms
jmp
dec
jle
adc
mov
pushl
stos
adc
lahf
out
outsl
ret
ficoms
add
push
mov
enter
jmp
xchg
cli
inc
cmpsl
or
push
cmpl
mov
jae
inc
adc
xchg
xchg
xchg
fucomi
out
loopne
push
loopne
loopne
pop
lods
gs
xchg
stc
mov
mov
sub
ljmp
imul
jecxz
mov
and
sub
pop
out
and
pop
sbb
add
dec
jl
xor
inc
xchg
and
cli
das
add
jo
inc
and
mov
jb
jb
jne
lds
add
jne
add
jbe
shlb
jbe
pop
sbbl
insb
add
jle
int3
add
leave
pop
std
pop
jbe
and
and
nop
xorb
pop
cmp
je
push
mov
clc
pop
push
movsb
add
subl
mov
sub
push
inc
sarb
mov
or
dec
test
ds
push
test
adc
cmove
push
inc
sub
outsb
cmc
fnstenv
sbb
enter
sar
or
sub
loopne
or
mov
scas
or
mov
movsl
test
data16
in
xchg
push
fwait
xchg
push
jns
jecxz
fcompl
add
push
cmp
inc
or
lret
fcoms
jl
inc
cmp
inc
mov
jne
xchg
inc
sbb
pushf
add
psadbw
mov
xor
jb
loop
fdivr
lcall
lods
popa
adc
imul
add
pop
and
mov
pop
cmp
mov
test
loopne
arpl
icebp
pop
xchg
loope
movsl
cmpsl
inc
push
or
inc
js
push
add
push
ret
fstl
sbb
lret
pop
jl
jl
xor
cltd
mov
ficoms
dec
sub
test
mov
ret
add
stos
test
cmpsl
and
ret
adc
ja
clc
sub
inc
xor
test
mov
gs
mov
lock
lock
and
jae
push
leave
xchg
mov
or
int
xor
mov
in
rclb
xchg
imul
or
push
sbb
pop
imulb
sbb
loopne
jecxz
jo
sub
and
cld
mov
daa
les
sbbb
cld
dec
xchg
xchg
or
arpl
push
bound
inc
inc
jecxz
sub
add
into
xor
call
push
dec
and
in
hlt
dec
add
xor
jmp
cmp
pop
xor
cmp
add
movswl
dec
lret
sbb
ja
gs
ds
and
and
pop
or
hlt
loope
mov
rcl
sub
inc
roll
pop
push
add
addb
rclb
call
mov
lods
lret
test
xchg
ss
ljmp
sub
cmp
clc
sbb
push
outsb
push
dec
rcrl
testb
xor
ss
mov
test
dec
ret
add
jmp
andl
popa
sub
xor
addb
cmc
pop
cmp
pushl
cmpl
das
pop
pop
jg
sbbb
rcrb
sbb
jmp
pop
ja
dec
mov
aad
dec
setb
dec
popf
in
xchg
dec
subl
dec
mov
mov
add
mov
test
test
push
cmp
mov
int
js
call
pop
xchg
les
push
rcrb
bound
outsl
frstor
bound
mov
js
ret
mov
mov
add
test
mov
lds
adc
pop
addr16
popf
and
pop
ja
inc
cs
xor
fistpll
sahf
dec
xor
xor
inc
mov
shll
outsb
test
mov
or
lods
ficoml
add
sbb
lea
push
insb
test
mov
xchg
jp
scas
cltd
fsubs
aas
repz
cltd
scas
pop
daa
pop
jb
hlt
push
add
mov
bnd
xchg
push
inc
int3
sub
aas
insb
jne
jp
in
sbb
xchg
or
pop
and
pop
mov
insb
jg
adc
cmpb
fcmovb
lods
xor
daa
daa
daa
fnsave
cmp
daa
daa
and
aam
pop
jb
push
rcrb
out
shrb
push
repz
or
cmp
repnz
loope
ret
mov
lea
int
in
sbb
mov
jb
mov
cwtl
leave
mov
xchg
mov
adc
ret
cmc
mov
adc
push
enter
fildl
adc
movsb
xor
ja
mov
cmpsl
jb
mov
push
xchg
xchg
outsl
fisttpll
hlt
js
add
shrb
in
je
jns
mov
mov
sub
push
cwtl
daa
jns
inc
xorl
inc
pop
shlb
cmpsb
inc
sub
mov
movsl
in
out
jnp
push
repnz
jno
bound
or
mov
js
push
jae
cmp
cmp
add
inc
push
test
loopne
int
stc
lods
outsl
cltd
add
mov
mov
movsl
jmp
loop
addr16
push
in
test
std
lods
orl
pop
lea
dec
mov
pop
test
add
clc
add
jne
and
inc
mov
outsb
or
push
pop
xchg
xchg
dec
popf
jecxz
insl
fs
push
push
loopne
inc
or
aas
inc
rorl
push
pop
push
mov
jmp
loope
jg
fcoms
lret
cmp
pushf
push
into
inc
push
mov
scas
adc
lods
lea
sbb
pop
push
lods
or
push
mov
sbb
inc
aas
sbb
inc
inc
pop
aaa
mov
lret
jae
sub
add
loopne
pop
and
pop
mov
pop
enter
jnp
xchg
daa
push
rorb
dec
push
add
pop
fdivrl
lods
jns
and
dec
nop
out
sub
cmp
cmpsb
ret
faddl
adc
aam
cmpsl
add
fs
and
xchg
sub
xchg
sbb
das
cmpsl
lcall
aam
pushf
or
cmpsl
imulb
sti
daa
pop
mov
arpl
or
sbb
dec
jl
mov
cmp
je
pop
add
sbb
cmc
fst
outsb
push
andb
mov
push
scas
cmpsl
stc
cmp
dec
test
lret
xor
mov
jg
out
xchg
inc
mov
add
inc
fidivs
fxch
or
loope
xchg
leave
adc
push
xor
mov
mov
or
xchg
sub
sub
mov
insb
mov
inc
jo
pop
rcll
pop
or
je
sbb
lods
inc
inc
lret
xor
pop
push
jmp
mov
mov
or
testb
push
add
sbb
adc
mov
cmp
jmp
add
lds
movsl
pop
add
dec
iret
jge
std
es
add
add
or
cmp
and
and
sub
inc
add
sub
sub
aaa
dec
xchg
cmpsb
xor
rclb
jo
sbb
dec
insl
xchg
rorl
ret
xchg
negb
pop
push
sbb
add
cs
xchg
add
jl
sbbb
sub
ret
and
or
add
push
sub
mov
adc
or
lock
push
sbb
orl
rcll
jnp
out
lods
lret
push
out
adc
sarl
mov
adc
mov
and
hlt
add
sbb
push
add
or
popa
or
mov
sbb
push
dec
shll
and
fmull
inc
jo
dec
add
loopne
mov
or
jecxz
test
mov
jno
push
mov
push
popf
out
cli
mov
enter
push
push
mov
shrb
shrl
xchg
shlb
mov
inc
add
and
mov
jbe
and
cld
ficoms
push
xor
adc
arpl
inc
mov
mov
push
inc
inc
cld
pop
jae
add
dec
and
loopne
dec
jge
lret
filds
orb
mov
sti
xchg
dec
dec
mov
mov
sbb
pushf
adc
mov
xchg
insb
mov
in
leave
sub
mov
cmp
call
lea
cmp
ja
mov
sbb
sbb
and
cld
jmp
pop
mov
movsl
or
pop
lahf
push
dec
push
pop
ja
fcomps
clc
mov
jg
je
test
ja
std
sbb
cld
xchg
scas
mov
pop
mov
adc
push
movsl
inc
add
add
cmp
and
iret
add
jno
mov
dec
mov
mov
push
cmpb
je
lods
xchg
jmp
mov
shll
xor
pop
jge
mov
cmp
jne
movl
fisttpll
addb
inc
std
jne
subb
jmp
sub
insl
popf
xchg
and
jmp
jo
or
pop
rolb
push
and
add
pop
lods
fwait
mov
push
mov
mov
add
mov
inc
pop
lcall
shrb
xor
inc
shl
into
std
mov
in
push
jmp
lock
sbbb
jae
xchg
and
enter
test
jge
scas
aas
rolb
jnp
jae
cmp
call
sbb
lods
shl
jne
xchg
sbb
pop
inc
push
leave
inc
clc
add
imul
loopne
aaa
or
jmp
inc
in
leave
add
cmc
std
std
mov
mov
cmp
lret
add
pop
movb
mov
jo
inc
add
mull
xorb
push
aas
pusha
les
aam
push
sti
dec
sbb
mov
xchg
and
pop
orb
xchg
fs
sub
dec
jne
inc
psadbw
inc
stos
addr16
scas
dec
jle
sarb
rcrb
push
mov
test
inc
jbe
mov
or
dec
jne
push
scas
andb
or
push
icebp
lret
addr16
jnp
cmpsl
cmp
into
xor
nop
push
stc
rcll
adc
jo
adc
mov
pop
daa
pop
cmp
pop
lret
test
adc
or
stos
and
cmc
xchg
jge
cmp
push
and
lcall
scas
pop
pop
pop
add
ret
push
rcrl
dec
or
cmp
add
pop
push
lret
sti
xlat
testb
insb
ljmp
add
xor
and
dec
mov
or
xor
clc
add
sbb
into
dec
out
or
cmp
inc
jmp
jmp
cmp
dec
sbb
mov
mov
jmp
add
ret
inc
jo
mov
cmp
adc
pop
add
fwait
jno
es
mov
jmp
popf
jmp
or
cmp
pop
aaa
xchg
add
lods
andl
ljmp
std
and
sbb
ljmp
fwait
jb
fisubl
and
push
fs
mov
shrb
fimuls
or
clc
xor
in
mov
mov
aaa
cmpl
ret
dec
dec
cmp
adc
addb
movsl
sub
mov
out
jmp
inc
xor
adcb
sbb
adc
leave
clc
icebp
and
ret
je
jp
jbe
sarb
pop
cmp
lods
or
pop
sbb
mov
imul
inc
mov
cmpsb
movsb
jnp
into
sbb
data16
mov
inc
inc
sbb
sub
add
mov
in
sub
and
sbb
inc
inc
cs
push
mov
xlat
cmp
cwtl
daa
sbb
adc
ljmp
sbb
inc
faddl
or
bound
mov
cld
inc
add
mov
add
jns
dec
jge
mov
cmp
bound
mov
push
and
sub
cmp
mov
push
sbb
inc
out
cmp
test
mov
xchg
push
sbb
pop
rcll
pop
add
inc
and
sub
add
ss
outsl
add
add
rcr
cmovp
pop
pop
mov
jmp
pop
xor
lods
push
dec
jb
add
dec
ss
or
or
and
dec
mov
mov
push
or
mov
mov
mov
jno
lods
push
push
push
pusha
fsubr
mov
mov
push
pop
lahf
cltd
and
push
pop
or
push
mov
filds
addb
data16
add
stos
sub
or
and
push
jg
sahf
adc
jno
mov
inc
shlb
dec
sbb
scas
movsl
push
insb
pop
arpl
adc
sbb
pushf
adc
add
cmp
or
pop
dec
rolb
test
sbb
push
push
ds
add
push
dec
push
sub
test
adc
mov
out
fnstenv
not
lock
sbb
pop
iret
push
adc
in
xor
stos
clc
mov
and
sub
sbb
sbbl
enter
adc
loop
cmp
dec
jl
jle
sbb
pushl
xchg
pop
jecxz
dec
mov
dec
pop
insb
bound
xor
cmpsl
push
sbbl
arpl
xchg
jle
or
mov
mov
insl
jg
mov
push
xor
mov
push
fnstcw
enter
or
xor
push
rorb
mov
pop
jo
les
pop
xchg
push
jo
cmpl
leave
test
push
adc
pop
ds
fucomp
hlt
cmp
add
xor
sti
adc
cmp
mov
jae
or
lret
xchg
loopne
data16
sub
xor
stos
add
pop
xor
pop
push
or
xchg
mov
mov
inc
jne
cmp
sub
stos
mov
dec
and
add
loope
out
pop
mov
ljmp
pop
sub
movsb
aas
es
sub
loopne
or
aam
addb
mov
inc
js
sub
jmp
jmp
vmovd
inc
inc
add
push
pop
aam
jmp
mov
rclb
pop
cs
sub
mov
rcrl
or
xor
sub
mov
incb
push
push
lock
jg
loop
shr
je
insl
sbb
add
inc
adc
push
sub
push
pusha
lods
loope
scas
jo
mov
dec
jne
shlb
or
sub
add
jg
adc
divb
xor
ret
add
lods
out
sub
jne
push
or
or
cli
pop
pop
ret
in
xchg
rcrl
push
mov
bound
add
cli
shr
add
sbb
inc
push
mov
aam
clc
mov
xlat
loop
ret
and
adc
xchg
dec
popf
adc
lods
outsb
adc
adc
add
push
adc
mov
push
mov
dec
mov
shll
enter
mov
and
push
sbb
mov
insb
aaa
call
movsb
push
adc
jo
ja
add
xchg
pop
mov
and
rcrb
push
add
lret
iret
nop
lret
dec
or
xor
dec
jmp
add
add
mov
dec
push
or
popl
fsubrl
add
cwtl
sbb
test
inc
sbb
mov
insb
push
call
sub
rcl
repnz
add
sub
in
mov
arpl
neg
in
jno
xchg
rcr
mov
les
fbld
jmp
and
das
cmp
mov
push
mov
rorl
dec
add
and
sbb
lret
test
add
sbb
pusha
test
add
push
xchg
push
subl
pushaw
iret
in
call
or
sbb
or
pop
or
stc
loopne
and
xor
icebp
int
xchg
add
jmp
decl
js
jmp
mov
mov
frstor
adc
aam
daa
jns
pop
js
and
push
add
lock
push
sub
xchg
jne
lea
xor
xor
adc
dec
dec
push
repz
repz
pop
push
jnp
iret
mov
int3
fcoms
mov
je
mov
adc
mov
ss
cwtl
mov
jne
push
adc
out
add
fs
cmp
jecxz
push
in
jb
push
inc
and
jle
mov
sbb
and
inc
adc
loope
inc
pop
cmp
in
je
push
cltd
jmp
inc
faddl
inc
sbb
stos
and
push
sar
push
jmp
test
add
aaa
xor
jmp
rcr
jg
xchg
and
ret
and
push
push
test
xor
fstl
jmp
sub
rol
es
or
mov
xor
cld
jmp
mov
test
cld
divl
adc
mov
cmp
je
dec
mov
inc
pop
fstps
pop
xor
add
mov
jne
lea
mov
shr
std
mov
les
mov
push
mov
shll
add
sti
je
jmp
bound
shl
pop
jo
add
sbb
or
inc
cmpl
shlb
mov
xor
adc
sbb
xchg
loop
ret
pop
xor
lahf
mov
xchg
pop
ret
xchg
ds
or
xchg
mov
pop
mov
sbb
jne
mov
pop
js
mov
sub
push
addb
dec
daa
je
add
test
das
xchg
int3
mov
repnz
std
mov
lods
std
test
das
lret
call
pop
xchg
xor
mov
adc
les
or
incb
lret
je
or
jp
stc
test
add
push
scas
jno
cmp
addr16
adc
stc
mov
mov
or
out
xor
ds
push
cmp
test
mov
xchg
cmp
std
push
push
test
sbb
xor
shrl
ret
mov
add
pop
rol
gs
mov
or
notb
add
cmpl
add
or
add
icebp
cmp
and
popa
mov
jl
xor
push
popa
cmp
mov
test
mov
rcl
mov
sbb
sub
sub
dec
cmp
inc
sub
aad
pop
and
or
mov
jne
cmpb
ret
add
jl
in
cmp
inc
xor
mov
test
outsl
ss
js,pn
pop
mov
adc
and
xor
shlb
pop
jge
lds
cwtl
adc
in
test
arpl
inc
push
out
repz
mov
pop
mov
xchg
dec
je
push
or
push
or
cli
and
out
xchg
mov
mov
jecxz
movsb
popf
test
cmp
and
movsb
jb
stc
mov
push
adc
loopne
xchg
shrl
dec
or
or
loopne
dec
fxch
leave
movsb
ret
das
loope
jg
mov
mov
shll
ret
and
sahf
cmpsl
aam
inc
pop
sbb
and
lods
jge
push
pop
aam
es
mov
jmp
mov
sub
repnz
enter
leave
loopne
mov
cmp
add
test
adc
and
adc
jne
cltd
test
fwait
or
jo
fwait
sub
fwait
cmp
mov
xor
fwait
mov
lcall
out
js
sbb
insb
sub
xor
add
or
inc
lcall
loopew
mov
scas
or
adc
sbb
loope
jecxz
inc
fcmovne
push
sarb
nop
mov
enter
loopne
popf
rcrb
loopne
mov
mov
pop
mov
push
sub
adc
sbb
dec
push
cmp
je
ret
scas
inc
cmp
stos
sbbb
loope
sub
mov
fstl
push
push
test
push
addb
jge
or
xchg
lea
push
adc
or
pushf
stos
mov
mov
add
xchg
xchg
loope
js
and
movsb
loop
mov
imul
lods
or
dec
or
jno
mov
out
adc
adcb
xor
push
xor
arpl
fstl
adc
xor
push
add
decb
test
adc
fcoms
neg
ret
arpl
push
cmpsl
cmpsl
ds
inc
mov
cmp
xchg
das
movsl
leave
cmpl
repz
loopne
and
mov
or
xchg
lahf
mov
lahf
inc
repz
cmpsl
test
inc
xchg
fcomp
bound
xchg
subb
fidivrs
or
add
inc
jmp
dec
cs
or
shlb
das
in
jbe
jmp
sti
mov
xchg
mov
add
pusha
in
roll
dec
sub
insb
fldl
dec
jno
or
sub
sbb
jmp
dec
adc
jnp
dec
add
mov
js
out
sub
pop
mov
orl
jle
mov
jmp
jmp
mov
xchg
or
pop
or
lds
mov
mov
fldpi
sbb
aaa
dec
mov
je
fcomps
push
push
jno
adc
sbb
mov
sub
sbb
adc
sti
jne
cmp
hlt
push
nop
add
sub
or
sbbl
mov
jnp
popa
outsl
pop
pop
lock
dec
push
add
je
add
inc
imul
popa
adc
dec
pop
loope
inc
daa
pop
mov
mov
rolb
push
cmpsb
jp
mov
pop
inc
or
js
subl
int
push
fdivrl
rolb
sbb
pop
aam
lods
inc
push
xchg
and
sbb
pop
fdivs
cmp
lea
rorb
sbb
pop
mov
lea
pop
or
pop
out
rolb
aas
loope
xchg
jno
call
xchg
jl
movsb
mov
stos
mov
pop
xchg
xlat
loope
pop
repnz
ret
pop
leave
shll
lods
lock
aas
pop
add
mov
sub
xor
arpl
outsb
fsubr
dec
aas
pusha
aas
and
js
scas
movsl
push
out
insl
jne
scas
adc
into
shl
lods
outsb
insb
mov
jb
inc
aad
mov
pop
jo
xlat
adc
fsubrs
inc
mov
inc
inc
inc
inc
inc
inc
inc
cmp
dec
xchg
jno
sbb
jo
std
call
xor
push
mov
nop
mov
rol
add
sti
inc
es
mov
cmpsl
inc
scas
dec
movsb
add
in
and
aad
cmc
push
inc
test
inc
ss
mov
sub
sub
jecxz
cmp
loopne
dec
movsb
adc
and
xlat
enter
decb
cld
push
mov
int3
push
dec
cwtl
cltd
nop
and
inc
mov
or
cwtl
lods
lods
cmp
push
and
fimuls
xor
cmp
movsb
jb
dec
test
test
leave
leave
mov
sahf
pop
mov
cmp
aaa
jbe
addr16
test
inc
cwtl
nop
add
dec
xchg
pop
inc
dec
mov
adc
aaa
repnz
xor
push
cwtl
pushf
xor
adc
nop
xor
mov
pushf
nop
inc
cmpsb
inc
push
pushf
cwtl
nop
inc
dec
mov
test
divb
int
shr
sarb
or
hlt
stos
sbb
xchg
pop
sbb
push
out
lcall
clc
outsl
add
sub
addr16
sbb
mov
mov
mov
ret
ds
or
xor
je
sub
daa
ja
adc
or
test
sbb
pusha
xor
aam
or
inc
or
add
iret
sbb
add
mov
rcrb
xor
adc
rcll
fmuls
test
xor
mov
iret
push
jmp
ficoms
mov
ja
add
int
jmp
jnp
dec
xor
icebp
sbb
add
dec
fsts
dec
jno
sti
add
pop
mov
ret
movsl
jecxz
sti
mov
add
cmpsb
or
add
shlb
and
inc
cltd
les
lock
popa
insb
loop
jo
and
and
or
hlt
mov
push
sbb
rcrb
adc
and
add
push
sahf
test
add
pop
push
ljmp
add
adc
loope
shr
je
ret
jge
or
push
push
dec
adc
push
and
loope,pn
xor
dec
push
ds
out
out
outsl
inc
or
jbe
jle
lahf
out
adc
jo
cmp
iret
lea
mov
jo
in
int3
pop
fbld
lea
lea
inc
out
in
push
stos
and
shrl
test
mov
xor
dec
cmp
xor
movsb
pusha
jp
insb
mov
push
negl
ret
mov
mov
shrb
lret
ret
mov
ds
shr
dec
arpl
sbb
xchg
sbb
cmp
or
mov
test
lret
and
adc
loopne
adc
xchg
cmp
xorl
xchg
sbb
xchg
inc
add
jne
repz
rorl
leave
add
lret
push
test
sidtl
and
fsubrl
add
scas
mov
divb
or
push
sbb
push
dec
and
dec
dec
sub
lret
add
ds
sbb
bts
dec
jmp
hlt
cs
inc
imul
push
fdivs
xchg
les
mov
popa
dec
arpl
or
adc
jne
inc
adc
and
cmp
fmull
cmp
scas
idivl
inc
sub
xor
scas
inc
les
add
pusha
call
push
cmp
rol
mov
push
mov
pop
out
add
xor
and
sbb
sub
mov
mov
ficomps
cmp
jne
loopne
mov
sbb
inc
mov
add
pop
or
mov
shr
jle
andl
or
outsb
sbb
stc
mov
fs
clc
sub
fs
jmp
cmp
xchg
subl
sbb
pop
cmp
lea
ds
xchg
sub
scas
or
push
cmp
aam
xor
mov
fs
rcrb
xor
pop
rcll
sub
sahf
pop
adc
sbb
andb
jmp
adc
jae
ja
adc
mov
lods
sbb
mov
mov
rcll
jmp
inc
or
arpl
push
out
push
mov
add
push
fists
or
sub
or
adc
icebp
je
into
inc
or
push
movsb
inc
push
imul
filds
sbb
jb
gs
jmp
adc
andl
push
jbe
add
gs
jle
xchg
add
inc
sbb
mov
and
xor
pop
add
incl
dec
and
sbb
pop
jne
xor
adc
aad
in
int3
dec
add
stc
inc
test
sub
xchg
call
dec
in
sar
dec
add
xlat
inc
aam
xor
adc
push
sbb
pop
and
popa
add
xorb
inc
cmpsl
jb
cwtl
sarl
cld
enter
ficompl
nop
out
or
dec
pop
dec
and
neg
jae
mov
dec
or
in
push
add
sub
fidivrl
movsl
adc
incl
mov
inc
add
cs
je
cmp
stos
insl
pop
adc
mov
mov
mov
and
dec
cld
sarl
imul
popa
mov
pop
pop
jle
in
shll
cld
add
push
dec
test
sbb
or
pop
pop
insw
push
mov
and
es
and
inc
imul
ds
and
loopne
cmc
pop
out
jo
xor
inc
std
shlb
fcomi
js
sbb
mov
or
decb
outsb
inc
mov
xchg
or
xor
push
icebp
add
jae
incl
push
and
int3
jae
lea
jbe
clc
pop
add
add
push
xor
jnp
inc
mov
orl
andl
pop
mov
rcrb
les
movsb
xor
aaa
popa
adc
cmp
xor
inc
push
pop
cmp
push
je
cltd
pop
sarl
lock
sub
lea
push
out
test
inc
or
mov
loop
and
pop
dec
call
jge
inc
push
pop
push
dec
xorb
jecxz
lea
xchg
or
jae
lock
movw
insl
add
dec
add
pop
movb
xor
dec
das
xchg
pop
dec
inc
ss
cmpl
push
sbb
call
push
xchg
call
lret
sbb
fiadds
ret
loope
add
jl
sarl
fnstsw
mov
mov
addl
fbstp
daa
faddl
add
or
aas
cmp
or
push
aas
js
rorb
and
into
sub
shll
shlb
cltd
xor
jl
ljmp
hlt
jb
loopne
aam
lret
pop
push
and
subl
fmuls
xchg
nop
sbb
cmp
pop
ret
cmp
clc
add
xor
jmp
lods
dec
cld
xchg
add
or
sbb
mov
add
mov
inc
inc
jo
sbb
dec
cmp
adc
mov
repz
xchg
out
jmp
xor
push
orb
jmp
movb
rorb
pop
jmp
lea
push
adc
repz
sub
push
insl
arpl
inc
aaa
xor
mov
mov
js
les
xor
adc
in
insb
lock
je
push
mov
movl
cld
call
ficoml
jmp
push
add
xor
idivb
mov
add
dec
and
outsb
aam
cwtl
cwtl
or
add
imul
mov
orps
pop
test
adc
sti
or
shlb
push
push
add
mov
and
jnp
sub
push
paddusb
repnz
lock
fstl
and
test
jne
out
repz
loop
sbb
or
and
push
lret
pusha
pusha
imul
test
jb
jae
pop
dec
shrl
ret
mov
pop
pushl
jnp
lods
int3
sbb
pop
push
nop
popa
out
sub
push
lock
jecxz
or
sub
lea
daa
pop
inc
sbb
movsl
xchg
enter
in
sub
push
ret
rcl
popf
imul
arpl
fisubl
push
and
in
jb
pop
sbb
addr16
lret
add
push
add
jnp
fs
enter
cmp
cmpsb
push
cmp
adc
sarb
xor
add
stos
in
cld
cs
mov
fsubrp
push
shlb
xchg
inc
inc
adc
lahf
lret
jae
mov
inc
sub
sahf
lret
pop
inc
dec
inc
pop
dec
dec
dec
popf
cmpsl
repnz
push
adc
mov
fs
insb
add
in
inc
jb
fnclex
push
sbb
sbb
add
fldl
movaps
pusha
push
lock
jmp
addr16
add
inc
cli
push
add
or
ret
imul
ror
cmp
jne
lea
push
leave
sub
mov
mov
inc
or
push
pusha
push
push
lods
test
inc
ficoml
sbb
adc
jle
xchg
or
lret
sbb
fdivs
mov
dec
aaa
enter
jge
inc
push
sbb
cmp
add
or
je
xchg
test
push
add
sub
sbb
jb
lds
xchg
push
xchg
leave
clc
sti
cmp
stc
jmp
nop
xchg
idivl
ljmp
mov
cmp
xor
inc
fistpl
sbb
js
loopne
xor
daa
es
push
lea
jecxz
ret
or
or
xor
and
ret
fwait
loopne
mov
lret
mov
jle
jns
shlb
movsl
or
scas
mov
movsb
stos
or
js
sbb
cmpsl
mov
aas
clc
inc
rolb
and
or
jne
or
push
aad
cmpsb
lock
dec
mov
lret
xchg
fildl
push
subb
adc
pop
lea
mov
inc
test
mov
lock
cltd
or
out
jle
and
sbb
fistps
les
ret
enter
rcrl
add
ret
sub
xchg
add
jmp
fsubs
or
aam
scas
add
jg
adc
out
pop
mov
ret
mull
lsl
jmp
push
pop
cmp
jns
push
inc
shr
rcr
shr
rcr
or
mov
div
pop
dec
test
std
mov
pop
jb
cmp
or
cmp
or
repz
in
xor
and
adc
push
inc
add
inc
lret
ja
cmp
iret
pop
ret
adc
sbb
inc
iret
je
test
adc
jbe
je
mov
push
aaa
stos
or
cmc
inc
in
orb
sbb
mov
inc
mov
out
or
xchg
or
mov
pusha
pop
frstor
mov
mov
lahf
or
jge
cmp
add
test
sahf
call
mov
xchg
mov
dec
nop
adc
mov
dec
les
xchg
cli
and
adc
inc
inc
and
or
pop
jmp
dec
sbb
sub
mov
push
repz
movsb
mov
insl
or
sub
iret
xor
sbb
or
loopne
cmp
sbb
mov
clc
out
test
cltd
and
in
sbb
and
mov
nop
shlb
add
and
add
sbb
out
fists
xor
pop
lret
xor
sbb
add
cmp
mov
sub
inc
adc
daa
xchg
or
ljmp
jne
push
add
and
xor
je
xchg
arpl
pop
inc
cmp
mov
or
rorl
rorl
inc
add
jbe,pt
or
mov
test
push
dec
pop
dec
mov
loope
loope
aas
dec
adc
add
addl
xor
add
leave
or
add
add
mov
dec
enter
jl
testl
addr16
inc
pop
outsb
cltd
cmp
mov
in
dec
lods
mov
push
and
pop
lret
ja
lods
fadds
cld
dec
or
sub
sbb
lahf
ss
dec
mov
movsb
add
cwtl
push
lods
sub
cmp
outsb
mov
loop
les
loope
xor
push
cmp
sub
pusha
xchg
xchg
ss
popa
xor
addr16
mov
mov
cmp
dec
inc
push
mov
ds
add
ret
pushf
in
lds
xor
and
or
or
iret
jo
std
nop
call
imul
insb
loop
nop
cmp
mov
sub
cmp
ret
push
je
mov
mov
adc
sub
inc
and
jmp
fistpl
push
mov
aas
test
add
int3
sub
aad
orl
testb
jmp
adc
outsl
lods
inc
xchg
push
jae
loope
mov
imul
pop
mov
cmp
faddl
push
test
add
push
icebp
lock
add
xor
ficompl
pusha
xchg
imul
add
enter
subl
adc
cli
pop
inc
mov
jl
cmp
jg
inc
jmp
add
fsubr
data16
jne
imul
lea
push
dec
push
add
cmp
pop
lea
or
adc
je
dec
scas
push
pusha
mov
mov
or
xchg
mov
lock
xor
movsb
xchg
icebp
xor
mov
es
mov
jne
push
adc
and
or
incl
push
movsl
sub
push
stos
into
mov
push
push
adc
dec
mov
push
cmp
jge
repz
push
jae
add
out
testb
push
mov
cmpsb
cwtl
pusha
sbb
nop
imul
mov
notb
test
pop
stc
xor
pop
inc
jmp
push
add
mov
push
sti
pop
psubd
push
sbb
pushf
or
popa
mov
jl
js
mov
lods
add
ljmp
inc
cltd
pushf
jmp
xor
mov
lahf
subb
and
ja
mov
sub
pop
outsb
gs
rcll
orl
loop
mov
xor
and
adc
push
mov
shrb
pop
int3
orl
inc
adc
push
gs
jbe
and
add
cmp
or
or
rcl
mov
pop
ja
dec
or
loopne
addr16
pop
xorb
adc
mov
push
push
mov
add
add
add
jo
inc
daa
jno
and
or
and
pop
or
xor
mov
shlb
or
xchg
cli
adc
lea
lea
or
out
sti
loopne
mov
popa
mov
mov
sub
popl
loope
nop
cmp
pop
fiadds
inc
mov
mov
enter
sahf
adc
push
mov
adc
xchg
repnz
mov
div
xchg
xchg
pushl
add
jno
pop
cmp
mov
loop
mov
mov
pop
push
push
xor
test
pusha
pop
stos
ljmp
push
inc
cmp
ds
sbb
dec
sbb
push
add
insb
dec
sbb
out
bound
xlat
insb
enter
push
push
adc
cmp
or
adc
std
rol
pop
sbb
add
and
adc
cmp
mov
dec
hlt
cmp
cmp
jmp
mov
jne
jecxz
push
cmp
cmp
add
push
pop
adc
add
aas
pop
and
dec
push
divl
add
stos
inc
pop
add
daa
or
adc
jmp
mov
sbb
cmp
pop
pop
cmp
and
push
pop
pop
add
xorb
test
insb
je
sub
sub
add
push
hlt
push
sub
xor
or
and
loopne
add
mov
jmp
jg
lcall
and
pop
add
dec
adc
inc
rcll
das
xor
mov
gs
push
es
xchg
cmp
add
test
pop
inc
adc
xchg
je
dec
lods
roll
cmp
lea
adc
or
adc
insb
inc
popa
mov
push
add
lock
inc
mov
xor
das
lret
pmaxub
push
cwtl
cmc
mov
add
shl
dec
jl
adc
sysexit
jp
fcompl
sti
inc
fsubr
das
push
inc
jmp
mov
cli
popf
pushl
leave
icebp
sub
xor
psadbw
popa
insb
push
xchg
fidivs
add
add
xor
sbb
cmp
push
mov
mov
jmp
mov
push
push
nop
xor
adc
fcomps
movsb
mov
dec
shll
dec
and
jmp
pop
jecxz
sub
xchg
call
cmp
loop
or
in
pop
xor
xchg
inc
jmp
push
mov
cs
fwait
mov
mov
sbb
scas
inc
or
pop
test
iret
and
mov
pop
xor
sub
cmp
hlt
add
nop
leave
dec
sub
popf
test
nop
or
xchg
and
incb
addr16
jmp
andl
jmp
mov
xchg
test
stos
popf
add
scas
push
mov
push
cld
fucomip
mov
mov
das
cwtl
cmp
jle
sub
cmp
xchg
or
push
jmp
dec
push
in
jnp
add
jbe
or
inc
sub
inc
loopne
hlt
jae
out
data16
adc
inc
sbb
sbb
mov
push
scas
mov
sub
ret
adc
clc
pop
jge
mov
mov
add
jmp
dec
jae
imul
sbb
jb
cmp
subb
pushf
and
outsb
mov
ja
sub
leave
pop
push
sub
and
cmp
lods
push
ds
cwtl
cld
pop
adc
fidivl
mov
lods
mov
scas
mov
lods
sub
out
xor
inc
stos
loopne
imul
je,pt
mov
data16
jno
adc
nop
mov
ret
fisubrl
call
jbe
ud0
testw
mov
sbb
xlat
pusha
jecxz
fldl
pop
shll
sahf
dec
dec
or
and
dec
cmp
mov
imul
lock
cmp
xlat
add
orb
jecxz
push
push
cmpsb
lret
movb
or
pop
js
sub
dec
mov
dec
test
sti
add
mov
mov
add
push
mov
push
fsubrs
cwtl
jge
add
add
mov
imul
sbb
xlat
test
clc
jge
pop
cmp
adc
loopne
inc
lods
orb
adc
mov
dec
mov
or
sub
ds
jbe
jle
jne
repz
or
rclb
pushf
add
aam
data16
fsubrp
lods
sarl
cmpl
fisttpl
pop
mov
sbbl
sbb
mov
jb
icebp
add
movsl
add
sbb
xchg
aam
into
loop
xor
push
loop
out
or
xchg
or
jne
mov
roll
ja
sbb
test
inc
xlat
jae
mov
std
mov
cld
cmp
sbb
or
cli
xor
and
cmp
pop
repnz
inc
testl
movsl
cwtl
jne
lock
mov
dec
into
lret
lock
out
jne
inc
or
cmp
xor
loopne
and
pop
dec
lock
xchg
pop
dec
xchg
nop
clc
sbb
push
jb
cwtl
pop
fsubrs
test
push
pushf
je
fldt
lea
lcall
add
movups
push
dec
std
test
scas
ret
xor
cmp
jb
lods
push
sub
mov
sbb
lods
incw
cmpl
shrl
loope
insl
mov
test
xor
mov
sbb
mov
jg
add
mov
aas
xchg
aam
gs
fbld
shr
push
testb
shr
adc
bound
or
push
sahf
lret
mov
bound
or
adc
mov
mov
addb
negb
mov
shrl
lods
jge
fadd
loopne
shr
or
mov
sahf
dec
mov
inc
xor
pop
jne
outsb
mov
fdivl
mov
aam
loop
xor
cli
sub
jne
addl
rol
mov
ficoml
cmp
addb
ljmp
mov
out
jmp
or
lods
mov
fldenv
and
or
nop
mov
mov
loope
jl
dec
mov
int3
jmp
xchg
or
daa
popa
and
inc
mov
lds
cmp
jmp
lods
sbb
ljmp
jno
adc
xor
cmpb
sbb
imul
push
lret
das
pmaxub
sub
jno
daa
jo
sbb
movups
xchg
imul
mov
inc
mov
inc
test
add
adc
repz
push
ret
stc
cmp
cmp
jo
fnsave
repz
inc
or
jmp
mov
call
mov
rcll
incb
jne
testb
adc
sbb
mov
pop
test
add
add
pop
int3
sbb
les
mov
jno
jo
mov
daa
arpl
cmp
mov
int
push
or
add
test
shl
push
xor
sbbb
in
pop
in
test
adc
mov
sbb
ja
jne
dec
fld1
in
or
mov
or
cmp
or
insl
jb
dec
in
adc
shrb
adc
xor
repz
stos
or
mov
xchg
dec
outsb
cmp
es
sub
cmp
mov
pusha
xchg
adcl
inc
pop
pop
pop
bound
add
mov
cmp
add
add
arpl
int
shll
loop
call
add
cmp
outsb
test
mov
mov
int
loopne
push
xor
jne
sbb
lods
or
xlat
jmp
sar
cmp
sbb
out
add
push
adc
sub
jo
sbb
jmp
sbb
ds
faddl
adc
loope
leave
mov
adc
pop
sbb
mov
aam
rcrl
add
ror
lcall
cmovl
loope
test
jns
sbb
jmp
inc
adc
repnz
pop
jmp
ret
or
loopne
gs
xor
push
and
mov
fidivrl
dec
mov
insl
pop
jno
add
in
repz
xor
mov
fs
pop
ljmp
ljmp
lahf
hlt
push
lea
add
leave
sar
mov
and
mov
add
pusha
or
rorb
test
sbb
lret
push
addr16
jp
cmpl
push
sbb
cltd
pushf
cmpsb
push
pop
ret
and
loopne
jo
push
dec
push
and
add
dec
cmp
pop
mov
js
sbb
pop
pusha
cmp
or
xor
push
push
ds
xor
mov
or
and
dec
adc
test
xchg
push
inc
mov
sahf
add
addr16
mov
fsubl
ret
mov
add
outsl
adc
call
mov
mov
andl
mov
shl
outsb
jmp
and
jae
pop
xor
cmc
imul
sbb
adc
movsl
mov
test
xor
add
or
popa
xchg
movb
jmp
bound
dec
inc
outsb
push
push
cmp
dec
hlt
sub
inc
fs
or
jnp
leave
xor
add
or
inc
add
and
add
cmp
test
data16
pop
jnp
fs
add
cmpsb
sbb
jo
imulb
sbb
mov
add
test
mov
loopne
out
jno
add
mov
js
sbb
cmp
test
jne
lods
test
ret
cmp
shll
lods
dec
cmpsb
sbb
outsl
scas
test
imul
daa
sub
cmc
scas
or
cmp
pusha
dec
iret
test
add
je
out
push
mov
pusha
insb
lods
push
jg
sbb
mov
mov
incb
mov
mov
inc
mov
sbb
adc
mov
push
mov
int3
or
dec
dec
dec
push
movsb
mov
or
xor
jae
mov
inc
inc
mov
cli
or
shufps
mov
pop
mov
push
addl
insb
jo
aad
gs
xchg
faddl
lret
cmp
dec
add
jo
pop
mov
and
or
cwtl
sub
insb
pushl
push
inc
dec
shlb
jbe
fs
pop
loopne
popa
sbb
adc
fiadds
into
mov
stc
cltd
jg
sbb
mov
pop
data16
addb
mov
test
sub
and
in
dec
mov
ljmp
into
sbb
movsl
jne
sbb
mov
stc
cmp
loope
cmp
jmp
inc
add
sbb
sti
leave
add
push
or
sub
lock
lods
shlb
es
and
lds
fisubrs
mov
pusha
mov
add
adc
mov
call
lret
jmp
inc
mov
nop
sub
rcrl
outsl
fucom
lret
icebp
sbb
jae
push
imul
lods
cmp
cmpsl
sub
adc
xchg
lcall
mov
pop
cmp
das
and
das
adc
cwtl
inc
je
jp
rdtsc
cmpb
lret
and
and
or
xchg
cmp
aam
sub
outsl
nop
das
inc
sbb
test
or
mov
lock
pop
adc
xchg
stos
test
push
and
icebp
lds
xchg
and
inc
ss
scas
roll
sbb
ss
int3
xor
xor
inc
xor
adc
add
cmpsb
adc
adc
inc
and
adc
xchg
inc
pop
shlb
fs
push
push
mov
mov
mov
and
je
pushf
push
xchg
pop
or
pop
cmc
fcompl
pop
in
or
jmp
mov
and
cmp
adc
mov
add
mov
mov
hlt
loop
mov
pop
inc
call
pop
xor
mov
je
cmp
pop
adc
cmp
fiadds
inc
mov
jmp
imul
movsb
fiaddl
inc
cmp
decb
les
jmp
addl
js
pop
sbb
movb
jmp
stos
adc
inc
aaa
push
inc
pop
lock
ljmp
or
iret
and
ljmp
jb
les
les
add
js
jge
inc
xchg
inc
arpl
shlb
adc
or
push
inc
push
dec
cmp
mov
sub
push
push
icebp
mov
mov
or
push
dec
sarb
mov
inc
jmp
xor
fwait
sub
jo
mov
add
add
adc
stos
test
pop
cld
not
ret
adc
gs
cmp
adc
sbbb
xchg
data16
andl
arpl
inc
dec
lock
jb
sub
xchg
fsub
add
mov
add
lcall
ret
inc
or
cmp
add
idivb
pop
les
add
pop
adc
push
test
insb
pusha
or
and
rcrl
mov
loop
push
andl
icebp
xchg
loopne
sub
inc
in
in
push
mov
adc
xor
jo
enter
mov
adcl
cwtl
jl
push
pop
cwtl
decb
int
push
jne
push
aas
out
je
mov
lds
inc
pop
xchg
mov
or
enter
adc
call
or
shlb
pop
fdiv
push
jmp
push
std
lock
insl
mov
push
lock
or
pop
push
sub
jne
inc
imul
or
mov
adc
mov
xbegin
mov
adc
fcomps
std
lea
adc
rclb
jmp
shrb
mov
pushf
or
imul
or
push
pop
inc
sarb
imul
add
adc
in
imul
dec
or
xor
adc
and
pushl
add
fadds
fwait
or
cmpb
pop
out
mov
or
jne
mov
clc
push
mov
adc
xor
inc
mov
mov
dec
mov
or
popa
push
push
nop
rorb
xor
dec
je
test
mov
jmp
mov
in
pushf
or
orb
push
outsb
ss
add
cmp
sub
pop
and
mov
cld
cwtl
scas
sbb
adc
popa
or
dec
pusha
outsl
xchg
pop
inc
pusha
jne,pn
sbb
inc
or
and
loopne
jl
push
in
adc
add
push
insb
ljmp
adc
and
lahf
push
sub
je
icebp
cmovnp
cmp
pop
push
sbb
rorl
addl
daa
pop
andb
jbe
xorl
jg
mov
pop
jo
jp
inc
cmp
roll
das
out
sub
mov
fwait
xor
mov
and
inc
xchg
or
dec
bound
aam
or
pop
inc
imul
and
push
add
mov
dec
mov
jb
ljmp
xchg
inc
stos
sub
call
inc
lock
push
push
scas
ss
jmp
adc
clc
jnp
cmp
or
pop
adc
lock
jo
pushf
pusha
lods
cmp
push
xor
in
mov
inc
and
or
inc
out
movsl
out
mov
or
adc
fwait
js
pop
nop
adcl
shl
lcall
cmp
push
ret
mov
in
test
mov
push
clc
call
jne
push
inc
jecxz
lea
adc
mov
push
sbb
mov
sbb
movsb
xor
cmp
mov
mov
push
jnp
daa
mov
push
push
or
pop
je
or
inc
cmp
inc
xchg
into
adc
cmp
mov
movsb
push
sub
xchg
push
orb
mov
pop
cld
imulb
mov
sbb
pop
jno
add
cmp
and
inc
xchg
ja
outsl
in
cmp
lahf
daa
cmc
mov
cmp
or
mov
sub
fisttpll
imul
imul
mov
jne
stos
out
roll
pop
push
lcall
add
stos
pop
add
test
jle
icebp
pushf
jle
mov
mov
mov
test
jno
push
adc
movsb
xor
sbb
jns
adc
clc
cltd
inc
jg
cmp
pushl
mov
xor
scas
and
mov
dec
sbb
in
test
rclb
rcll
sbb
push
nop
mov
loop
ljmp
and
dec
dec
pusha
jge
adc
adc
aam
add
sub
push
or
daa
daa
daa
adc
ss
pushf
fsubrl
and
and
sub
pushf
pushf
pushf
xor
cmp
inc
and
cmp
mov
dec
push
dec
cmp
push
pop
add
dec
dec
fs
dec
dec
je
jl
in
sbb
sbb
xchg
dec
xor
mov
and
pushf
mov
movsb
test
cltd
fs
dec
rol
and
dec
es
shlb
cltd
fidivrl
cltd
fs
dec
in
in
fs
dec
es
hlt
enter
clc
cld
add
sbb
dec
jb
or
gs
xchg
dec
cmpsb
dec
adc
cltd
fs
and
cltd
fs
sub
xor
fs
dec
cmp
push
fs
sub
dec
dec
xor
and
mov
pop
loope
xchg
dec
pop
pusha
sbb
pop
pop
dec
jg
pop
mov
add
movsb
dec
add
test
mov
inc
lcall
enter
mov
push
rorl
mov
xchg
or
imul
nop
adc
inc
lcall
cltd
nop
pushf
and
imul
inc
shlb
or
sub
cltd
nop
enter
pusha
jg
dec
enter
pop
push
adc
and
outsl
loope
js
ret
andl
inc
shlb
push
add
mov
or
faddl
push
or
dec
and
pop
add
nop
sbb
mov
fisubs
call
and
mov
and
aaa
je
adc
add
repnz
jnp
shll
dec
xor
adc
or
jnp
xchg
adc
add
jmp
dec
jb
add
pop
clc
sbb
test
js
test
btc
adc
or
xor
fisubl
xor
fiaddl
xor
mulb
shll
and
shll
sub
push
aad
clc
incb
sub
or
jmp
inc
and
mov
add
jl
and
jecxz
imul
add
or
fiaddl
loope
out
movhps
cli
xor
sub
aaa
enter
jge
je
mov
mov
flds
and
pop
adc
pusha
mov
pusha
loope
pop
sub
jmp
sbb
ficoml
fstp
ds
push
xchg
inc
pusha
fldl
cmp
sub
ret
adc
cld
pusha
jg
testb
in
mov
or
add
mov
out
test
fisttps
loopne
sub
mov
and
sbb
sub
push
and
or
jle
outsb
fs
testl
dec
or
adc
imul
push
and
or
push
or
lds
mov
flds
fstps
jmp
fisttpll
xorb
ljmp
hlt
adc
inc
in
outsl
push
jbe
je
adc
neg
ss
push
sbb
push
addl
in
adc
xor
test
cmp
sbb
sar
push
inc
call
xor
push
aaa
sbb
out
xor
add
pop
rolb
dec
jmp
sub
sub
inc
dec
push
in
jmp
sub
push
mov
loopne
fldcw
inc
test
into
adc
pusha
hlt
movsl
sub
imulb
mov
rorb
inc
add
bswap
and
mov
and
mov
adc
add
rolb
repz
add
push
mov
or
je
inc
rcll
sub
cli
repnz
xchg
mov
jae
es
xchg
pop
ss
shrl
addb
dec
push
push
inc
mov
nop
loopne
or
jle
push
pop
jmp
pop
add
pop
dec
cs
icebp
add
enter
lcall
cmpsb
mov
sbb
and
push
pop
inc
lea
nop
cwtl
addr16
clc
pop
mov
jle
push
add
jns
jnp
mov
and
pop
mov
lret
add
fs
xchg
repnz
aam
add
inc
inc
mov
add
mov
and
test
dec
pop
cmp
je
add
jl
xor
mov
jns
add
or
scas
test
rcrl
cld
sbb
hlt
rorb
inc
pop
cltd
and
sahf
into
es
pushf
sub
lock
pusha
ds
and
or
loope
or
out
sub
mov
fstpl
lods
pop
imulb
jno
xor
inc
and
xor
push
add
or
add
add
es
das
add
or
sub
das
jo
fmul
jo
sub
pop
lods
lea
in
popa
xor
sub
lock
mov
rolb
add
test
sub
pushl
roll
xchg
mov
int
xor
jbe
push
das
adc
inc
addr16
mov
imul
jne
adc
adc
mov
or
jl
push
jnp
add
andl
jne
je
insl
rorb
lret
adc
adcb
cld
pop
test
dec
mov
sub
mov
add
rcrl
shufps
push
xchg
rorb
jge
in
jecxz
clc
lock
or
sbb
fstpl
add
push
mov
and
fsubs
into
pop
add
mov
jmp
dec
xor
mov
sbb
test
and
sub
or
dec
out
fld
in
push
rcl
ljmp
pop
add
push
xor
test
stos
test
pop
and
mov
icebp
das
fstps
loope
mov
or
or
lcall
push
or
push
pop
aas
adc
push
mov
push
cmc
in
add
or
push
xlat
scas
movsb
ret
and
jo
es
sub
push
push
push
test
pop
push
inc
push
pop
dec
ljmp
adc
fnstsw
movswl
lret
sbb
loop
inc
loopne
and
mov
int
sub
rorb
data16
into
aaa
or
insl
or
push
mov
mov
xchg
cwtl
or
sub
or
aam
test
fsubs
ret
ja
fwait
sbb
adc
fcoml
nop
jp
lods
ret
sbb
imul
jae
sti
jmp
addl
sbb
je
scas
xsaveopt
jne
mov
add
sub
or
test
andl
or
jmp
and
add
adc
addb
inc
adc
or
loop
mov
sbb
fld
xlat
xchg
or
pusha
or
ucomiss
mov
shl
lock
mov
add
inc
arpl
int
adcb
push
ja
mov
mov
lock
and
ja
sub
inc
or
push
pop
int
and
adc
ret
in
jo
imul
or
jae
nop
lret
je
jle
loop
adc
xor
decb
add
sti
jbe
push
xchg
rorl
js
adc
mov
sti
std
test
or
add
loope
or
push
or
outsb
dec
fldenv
add
push
or
sub
adc
cmp
jbe
jb
adc
mov
dec
imul
sub
ss
push
or
outsb
add
jecxz
sub
mov
cmp
into
jne
mul
pop
test
jbe
jl
cmc
mov
mov
lock
stos
jmp
stos
pop
pop
fs
and
dec
insl
push
in
inc
cli
js
cmp
movb
pop
add
lods
rolb
adc
cwtl
xor
or
cmp
push
mov
lret
inc
movb
rolb
ljmp
not
test
je
jl
inc
pop
repz
outsb
dec
pop
pop
and
mov
out
sbb
mov
inc
adc
iret
and
insl
push
jbe,pt
dec
mov
add
push
outsb
int
or
or
cmp
sbb
sub
adc
loopne
insb
jmp
inc
pop
jae
add
lret
mov
xchg
pusha
add
sahf
jns
shrb
and
sarb
mov
mov
pop
test
mov
or
jge
je
inc
mov
inc
or
or
or
jp
inc
stos
inc
sub
or
add
mov
pusha
rclb
pop
rorl
cmp
loopne
push
incb
out
and
dec
inc
pop
mov
loopne
pop
popf
jb
mov
and
push
ds
push
or
out
inc
popf
and
dec
sarb
orl
jno
fs
sub
pop
and
ret
cmp
mov
or
icebp
pop
mov
xor
sbb
adc
fsubr
jnp
push
inc
lods
sbb
test
push
icebp
add
dec
clc
xchg
andl
inc
aas
adc
xor
lcall
cmp
mov
mov
mov
jmp
pop
inc
xor
add
add
incb
enter
jns
add
sub
cmp
sbb
dec
cmc
hlt
push
aas
mov
pop
rorb
cmpl
and
movsl
out
cmp
xor
clc
add
xorl
loopne
sub
popa
mov
in
add
adc
lock
into
addb
fiadds
test
iret
and
mov
and
shrl
xor
in
add
pop
mov
dec
lods
rorl
enter
xchg
dec
or
fiaddl
pop
lock
pusha
ficomps
dec
or
nop
loope
dec
push
lret
jne
and
and
mov
cs
cltd
mov
adc
and
push
sub
pop
push
push
add
les
or
or
leave
add
inc
push
pop
xlat
dec
jecxz
adc
jne
sub
mov
or
inc
outsb
and
stc
pop
jne
cmp
and
xchg
add
jb
mov
inc
mov
test
inc
mov
mov
rorl
mov
sbb
into
repz
xchg
out
add
xchg
jo
or
mov
scas
cmp
mov
cmp
insb
inc
cs
or
or
jmp
cmp
je
or
out
mov
dec
lcall
mov
cmp
pop
jne
dec
mov
inc
subb
inc
mov
jmp
and
sub
fisttps
lea
inc
jp
arpl
mov
add
and
inc
leave
into
add
fiaddl
test
add
adc
or
push
inc
cmp
xor
in
inc
adc
mov
add
adc
push
pop
xchg
xor
mov
adc
js
dec
sbb
fadds
sahf
jne
xlat
je
imul
outsb
stos
fdivs
or
add
xor
pop
jno
ffreep
push
pop
sbb
fstl
decb
sub
mov
clc
inc
add
aas
sub
outsb
pop
lcall
pushf
xchg
pop
and
lds
cld
mov
inc
or
xor
movb
add
dec
ret
pusha
loopne
xor
and
cli
jmp
sub
add
mov
insb
sbb
je
pop
adc
cmpsb
dec
push
sub
ret
mov
cld
sbb
push
neg
movb
xchg
mov
enter
jp
xchg
dec
or
add
add
add
sbb
insb
add
push
sbb
rclb
jmp
lcall
psraw
adc
cmp
ret
or
pop
inc
mov
adc
adc
dec
sbb
pusha
inc
jg
shlb
iret
ret
jmp
add
and
scas
jmp
mov
aam
outsb
or
mov
rcll
pop
in
movsb
loope
movsb
push
push
adc
or
in
shlb
pop
dec
lret
cmp
or
mov
gs
mov
push
jmp
and
xchg
mov
out
pop
xor
bnd
inc
and
push
fadd
repnz
mov
push
test
xor
into
jge
inc
stos
adc
adc
and
call
add
mov
fdivrs
or
mov
add
lcall
xchg
sahf
xchg
adc
jnp
icebp
movsl
cld
push
and
or
jne
xor
rcll
test
out
ret
xor
sub
idivb
ss
push
add
pop
and
xor
test
enter
clc
and
add
mov
lahf
test
push
js
sub
ret
scas
dec
and
add
insb
movb
and
mov
mull
xchg
xchg
inc
popf
neg
sbb
mov
stos
push
and
adc
fs
ret
bound
shll
dec
jo
bound
xor
xor
sub
or
cmc
add
pop
and
call
fnstcw
xor
mov
jb
stos
sub
add
pmaxub
add
add
pop
int
mov
wbinvd
divb
nop
push
lcall
dec
sbb
and
sub
sbb
cmp
mov
rol
fadds
adc
stos
pusha
inc
xor
ret
cmp
dec
icebp
xchg
cli
fs
cld
add
hlt
shrd
sbb
cltd
addl
inc
jge
sbb
clc
dec
leave
or
cld
xlat
mov
mov
add
dec
jmp
mov
cmp
ds
sub
pop
adc
pushf
jp
test
or
rorl
push
ljmp
test
roll
pusha
sbb
mov
lret
jo
fmulp
rorb
push
and
imul
sbb
js
jg
mov
or
sarb
jmp
adc
cwtl
shl
fimull
jl
inc
pop
clc
pop
mov
xchg
rolb
jne
sbb
mov
push
lock
ljmp
or
add
shlb
adc
leave
jae
fiaddl
pop
or
or
sbb
lock
roll
cmp
and
and
lods
ja
sahf
frstor
es
mov
mov
or
or
movw
push
sbb
add
sbb
pop
lcall
inc
jnp
ss
jmp
lock
mov
push
inc
sahf
or
push
mov
enter
jns
neg
call
addr16
or
ret
aaa
add
andb
pop
mov
in
or
mov
push
add
adc
xchg
sbb
repnz
je
add
or
aad
fstps
mov
dec
jbe
jl
into
rorl
cltd
inc
dec
mov
push
sbb
xchg
cmp
mov
jmp
or
sbbb
mov
jne
push
cmp
nop
cmp
addl
int
xchg
pop
aam
sub
dec
sub
cmp
leave
xor
enter
jle
in
push
push
orl
dec
out
mov
cld
jl
loopne
jge
push
inc
js
inc
or
mov
and
add
popf
jmp
xor
movsb
add
mov
ds
fxch
in
pop
or
or
pop
pushw
loopne
jne
cmpsl
imul
cmpsb
mov
je
inc
je
pusha
mov
addr16
xor
sub
sbb
pop
cmp
test
aaa
and
test
or
push
cmpb
add
sbb
push
add
or
inc
mov
aam
addb
pop
arpl
cmp
or
dec
jb
add
andb
imul
out
and
sub
adc
pop
xchg
cmpb
jne
mov
add
jp
testl
cwtl
push
xchg
sarl
insb
ret
push
cmp
add
hlt
lea
sbb
or
adc
bound
popf
pop
aam
dec
cltd
loopne
cmp
add
push
mov
adc
sbb
je
pop
push
add
hlt
ja
in
push
push
sbb
popl
add
lcall
sbb
xlat
aam
cmpsl
mov
test
sbb
inc
jmp
cmc
cmp
xor
add
out
inc
or
dec
inc
jne
cmp
add
sbb
adc
cld
mov
push
push
jmp
gs
and
leave
mov
inc
jmp
adc
test
adc
xchg
aam
add
xor
fmull
adc
fidivrs
add
cmp
nop
fidivl
mov
aam
dec
sub
sbb
xchg
adc
xorl
sub
sub
cmpl
xor
rclb
pop
push
or
push
sbb
insl
sarb
adc
leave
xchg
push
mov
mov
pop
add
dec
ljmp
aas
mov
jl
cmp
inc
dec
fiaddl
jb
pop
data16
xor
int
push
pop
mov
sub
je
dec
je
mov
push
push
jmp
or
jmp
sbb
cmp
call
adc
int
in
repz
and
sbb
pop
ret
or
or
aad
sbb
bts
xor
sahf
or
int3
or
push
xchg
cs
xorb
and
or
dec
xor
push
popf
add
jne
adc
adc
add
ds
flds
ljmp
or
sbb
jnp
int3
or
sub
sbbl
add
pop
mov
adc
add
or
mov
ss
dec
into
sub
xor
inc
andb
xor
inc
sub
jno
lret
or
dec
mov
and
aas
or
mov
xor
pushf
and
insl
add
sbb
fstl
int3
repnz
xchg
add
in
pop
sub
mov
rorl
std
inc
or
or
ljmp
dec
cmp
clc
shr
add
or
jg
mov
shr
or
mov
loop
mov
push
push
adc
test
and
add
mov
sbb
notb
lock
leave
mov
mov
add
lods
lods
add
pop
cmp
leave
inc
add
add
jl
in
sbb
cmp
dec
xchg
mov
or
arpl
inc
addl
inc
fisttpl
mov
add
inc
inc
lds
adc
xor
in
inc
call
adc
gs
mov
lea
cwtl
subl
shll
cli
cwtl
sub
dec
mov
mov
test
mov
adc
mov
aam
cmpsb
and
add
lds
loope
xchg
adc
mov
adc
lock
icebp
sbb
ss
and
xor
push
loope
clc
mov
andb
mov
add
sub
cli
jne
mov
sbb
dec
roll
incl
cmpsb
or
xchg
or
inc
mov
shll
in
mov
or
fmull
enter
or
addl
pop
add
lds
leave
nop
sub
jmp
adc
cmpsl
xchg
fwait
push
inc
test
mov
pop
and
lea
cli
popa
cwtl
cmp
pop
or
in
subl
lods
test
lret
testb
dec
jo
popa
divl
inc
cmp
adc
dec
xchg
stc
sub
add
mov
add
dec
pop
add
sbb
or
mov
and
jge
jo
or
sbb
fs
inc
inc
sub
test
jle
cli
add
xchg
mov
add
dec
sahf
sub
inc
sbb
pop
lret
leave
shrb
aaa
xchg
aad
outsl
dec
dec
outsl
inc
inc
push
xor
inc
xor
je
clc
and
mov
js
or
cmp
sbb
fistpll
push
pusha
inc
adc
and
scas
add
mov
aam
sbb
add
pop
je
sbb
mov
ret
sub
add
fmull
mov
push
add
movsb
xor
sbb
hlt
sub
jno
nop
mov
je
ss
push
add
inc
cmp
pop
inc
test
ds
out
sbbl
jmp
pusha
lea
imul
into
xor
or
cmp
dec
sbb
repnz
popf
addb
pop
leave
cmp
mov
enter
xchg
in
mov
cmp
jle
xchg
pop
mov
inc
and
push
popf
add
out
movsb
adc
cmpsb
sbb
bound
ds
fnsave
jmp
sbb
xor
cmpb
sub
cmc
cmp
les
push
incl
out
xchg
adc
push
mov
stc
push
add
inc
jns
push
in
cmp
add
push
imul
ficoml
orb
mov
aaa
jne
cmpsb
add
push
ret
sarl
sub
jmp
rcrb
enter
cmp
jne
imul
inc
dec
add
jbe
call
adc
rorb
push
cltd
or
push
rcrb
fprem
pop
sbb
out
roll
leave
add
mov
not
je
mov
iret
adc
mov
mov
inc
mov
xchg
pop
pop
adc
bound
rolb
call
movsl
sti
lods
pusha
push
pop
jb
loopne
adc
int
cmp
mov
js
add
popa
sbb
mov
or
xor
pop
inc
add
scas
lea
mov
push
icebp
lar
adc
lock
push
neg
neg
sbb
sub
jns
sbb
inc
sbb
or
or
enter
sbb
add
push
inc
and
fsts
pop
mov
icebp
sbb
push
and
and
subb
mov
dec
jns
lock
cmpl
pop
jbe
push
mov
int3
xor
adc
or
jae
lods
rcl
ljmp
in
lock
shr
sub
adc
std
arpl
push
idiv
and
maskmovq
testl
clc
add
push
roll
inc
add
insb
sbb
icebp
fmulp
dec
or
add
pop
pop
lods
aam
stos
jae
adc
dec
lahf
push
test
dec
push
add
sbb
mov
call
je
push
inc
cmp
jbe
pop
inc
xor
aas
orb
pop
cli
hlt
adc
and
aam
shlb
or
push
rclb
adc
rcl
inc
push
outsb
or
inc
inc
cmp
nop
add
into
paddusb
jns
mov
mov
and
ljmp
nop
cmp
movsl
iret
and
mov
incl
cs
ljmp
cld
inc
ss
dec
out
aaa
dec
roll
es
cmpsb
jnp
daa
lods
push
movsb
adc
jp
push
out
cld
mov
add
xchg
enter
pop
adc
inc
jmp
sub
inc
add
js
mov
subl
ret
cmp
mov
add
pop
fs
xchg
cmp
test
mov
loopne
adc
es
mov
inc
xor
and
aas
out
jmp
jb
cmp
ja
add
cmp
adc
cmp
jne
mov
sti
dec
shll
leave
adc
mov
sbb
add
jl
pop
pop
mov
enter
cli
fiaddl
sbb
adc
sbb
inc
xchg
lret
push
and
imul
test
test
aas
sti
pop
dec
insl
cs
push
movb
jmp
or
mov
pop
mov
iret
cmp
pop
and
test
push
subb
xchg
ret
fists
and
movl
push
inc
int
add
rcrb
fldl
pop
mov
into
testb
sbb
pop
cmp
mov
pop
lods
sti
scas
stos
mov
test
mov
idivl
sub
andb
and
xorb
nop
or
dec
daa
ror
push
add
adc
add
sbb
cmp
mov
pop
pop
jp
leave
adc
shr
rcrl
inc
imul
lea
sar
pop
or
gs
into
movswl
data16
imul
push
ljmp
cwtl
sbb
mov
mov
mov
inc
xorl
stos
dec
mov
add
imul
mov
jbe
push
push
ret
and
jl
inc
mov
jnp
or
dec
jle
repnz
lcall
mov
mov
mov
mov
and
and
lea
inc
fisttpll
pop
xor
adc
jecxz
imul
call
xchg
test
dec
jmp
add
loopne
dec
rorl
inc
testl
aas
lods
cmpsb
mov
mov
outsl
push
adc
pop
rorb
lods
xor
inc
mov
les
pop
les
dec
or
or
cltd
data16
xchg
dec
push
sub
shrb
into
movsb
imul
cmp
lods
shl
mov
movsb
sub
pop
out
data16
xchg
mov
pusha
mov
jl
pop
aaa
dec
sti
push
lods
and
rorb
jg
jle
cmp
lcall
shll
mov
add
shr
and
ret
pop
or
and
rorb
pop
negl
sbb
push
lret
cmpsl
mov
mov
cmp
and
inc
mov
jle
cwtl
shrl
cmpsl
jne
test
pop
shr
or
mov
dec
mov
pop
jp
jmp
nop
sahf
jnp
lock
dec
and
jnp
repnz
sub
push
testb
dec
cli
cli
inc
cli
and
cmp
dec
dec
dec
movsl
test
and
movsl
or
jge
sub
cmpsl
or
cli
adc
and
ficompl
ret
mov
dec
xchg
and
outsb
mov
push
fidivl
fldenv
enter
mov
mov
insb
movsl
jmp
mov
dec
xlat
mov
xor
push
mov
dec
sbb
add
push
mov
or
pushw
mov
loop
out
jecxz
xchg
xchg
jge
out
adc
and
mov
pop
mov
dec
mov
dec
movsl
and
daa
adc
sbb
push
cli
or
push
mov
inc
shlb
fdivrs
aam
xchg
pop
xchg
add
jbe
dec
sub
sbb
sbb
shrb
cmp
add
push
adc
xchg
rorb
or
sahf
mov
sbb
fcmovu
add
push
mov
sbb
insl
inc
rcrb
push
mov
int3
jg
add
xchg
add
idiv
inc
add
adc
jge
adc
jg
or
adc
orl
inc
push
in
out
or
jge
add
mov
or
cld
add
jne
xor
push
jns
fnsetpm(287
loopne
mov
or
pushf
pusha
mov
xchg
ljmp
cwtl
sbb
sub
setae
mov
idiv
psubq
sbb
movb
dec
inc
cmp
jle
push
outsb
push
aad
pop
outsb
call
inc
lods
gs
add
lods
adc
in
mov
rcrb
push
shr
pop
inc
rcrl
sub
fcoms
xor
fiadds
push
mov
insl
call
mov
imul
call
xchg
frstor
mov
pusha
lea
push
and
pop
lcall
inc
xor
push
in
fmulp
mov
sti
mov
add
popf
xor
inc
les
movsb
out
ds
loop
inc
addr16
sbb
imul
push
xorl
inc
js
add
sub
lea
fnsave
mov
sahf
mov
and
dec
int3
push
add
test
call
add
xor
add
add
sub
or
into
or
mov
inc
ljmp
jmp
mov
rcrb
jmp
cmp
jge
or
lahf
sub
cmpb
or
add
dec
cmp
imul
inc
dec
add
add
fadds
inc
les
mov
movsb
pop
ret
jp
jne
dec
sarb
or
adc
cmp
in
out
mov
mov
lret
mov
add
push
mov
nop
adc
test
mov
mov
mov
or
cmpsl
mov
dec
adc
and
ret
lcall
add
push
mov
mull
or
push
push
pop
rorb
adc
or
mov
or
add
rcrl
xchg
add
pop
jne
or
push
pop
scas
je,pt
sbb
ret
mov
cld
mov
ret
or
movsl
add
xchg
adc
or
xchg
add
test
fistpl
mov
mov
iret
xchg
xchg
lret
lret
into
pusha
inc
cli
xorl
and
pop
pop
fidivl
sbb
ret
xchg
mov
loopne
sahf
inc
ret
or
mov
sbb
loopne
inc
add
scas
rolb
imul
or
or
jo
dec
push
add
add
push
gs
je
das
push
mov
jae
mov
pop
or
pop
add
insl
add
adc
cmp
jne
and
mov
loope
test
add
es
out
and
push
cmpb
or
ret
outsl
mov
inc
add
movsl
ret
flds
jo
loop
clc
mov
mov
test
sbb
shll
push
scas
orl
mov
inc
subl
add
movb
daa
mov
loopne
mov
rorb
cmp
sti
loopne
sbb
repnz
test
adc
int
add
or
adc
into
mov
xchg
into
mov
mov
sbb
and
sbb
leave
repz
inc
jg
into
into
dec
inc
or
adc
sarb
push
pop
loopne
ficoms
and
mov
shlb
or
sbb
stos
push
lret
mov
ret
xor
mov
push
lcall
cmp
out
adc
push
into
enter
movsb
and
mov
ficomps
test
mov
and
mov
jp,pn
and
cmpsb
leave
adc
sub
lock
roll
xlat
insb
mov
cmpsl
fsub
movsb
lret
ljmp
mov
out
adc
cmp
pop
mov
add
loop
add
jno
loopne
mov
lahf
xchg
mov
or
enter
xor
scas
sub
sub
push
lock
scas
outsb
pusha
outsl
adc
rcrl
in
ret
jl
add
testb
add
je
jnp
sbb
popl
loope
jo
div
jle
rclb
sbb
add
jo
xorl
cmp
je
dec
mov
mov
jb
into
cmp
je
mov
or
mov
push
shl
pop
adc
jg
or
or
cmp
jbe
dec
sbb
cmp
sub
jmp
push
mov
movsl
sbb
sub
fisubrl
pop
lea
inc
pop
push
leave
mov
enter
pop
mov
ret
mov
into
das
add
stos
les
and
gs
and
inc
popa
test
dec
aam
add
scas
mov
fcompl
adc
loopne
jp
or
cmp
add
scas
pushl
mov
and
push
push
mov
push
mov
aam
movsb
mov
popf
fsubs
fmul
adcb
push
or
pop
cmpl
ret
sahf
mov
lret
xor
jb
pop
jl
rclb
cmpb
scas
adc
aam
ljmp
insb
or
push
jmp
popf
inc
push
aaa
sbb
dec
js
add
mov
movsl
mov
or
pop
cmp
test
inc
mov
test
daa
fldcw
add
xchg
pop
subl
push
push
or
pop
stos
sahf
mov
inc
dec
pop
add
push
mov
mov
push
stos
and
test
inc
cmp
andl
push
loope
aaa
cmc
dec
jge
test
shlb
add
je
and
push
ret
ss
js
push
push
dec
push
pop
and
cmp
pushf
inc
dec
mov
into
pop
jo
and
mov
mov
adc
shll
mov
cmp
lods
sbb
inc
add
mov
lret
ja
test
sbb
xchg
arpl
setl
sub
insl
add
jg
push
or
call
inc
js
lea
in
cmp
push
enter
in
adc
paddd
add
lret
mov
push
mov
je
xor
shrl
push
jmp
dec
fs
movsb
fistpll
xorb
ss
mov
sub
js
push
adc
pop
xchg
jno
fmuls
mov
sbb
or
dec
sbb
inc
movsl
xchg
cmp
push
fs
iret
mov
pushf
pop
dec
cmpsl
cmpsb
xor
push
mov
push
nop
lock
sub
add
mov
inc
pushf
ss
sbb
sbb
hlt
mov
push
pcmpeqb
jg
subl
aam
mov
jnp
ljmp
jbe
clc
dec
aam
sbb
mov
pop
movsl
gs
sbb
sbb
or
dec
lods
and
mov
mov
in
repnz
test
fs
test
cmp
jmp
and
lea
add
iret
xchg
sti
push
add
push
adcl
sub
add
and
add
add
test
pop
xor
xchg
hlt
in
sub
mov
lret
add
lea
movsl
pop
cltd
rcll
push
xchg
movsb
adc
mov
or
cmp
mov
jl
push
mov
dec
cwtl
push
jmp
loope
outsb
repz
pop
sbb
scas
add
orl
nop
xchg
jmp
add
inc
and
dec
ret
add
jle
ret
cltd
mov
push
add
add
data16
insb
mov
sar
xor
push
in
adc
sbb
push
dec
push
and
lods
outsb
nop
cmp
daa
test
sub
jnp
mov
roll
ret
push
mov
inc
and
ret
cmpsl
aas
mov
pop
or
mov
add
xor
ret
add
xchg
daa
and
add
in
jnp
mov
es
aas
add
ret
stc
adc
push
pop
in
push
push
pushf
ret
sub
or
push
push
push
shlb
sub
and
ror
sbb
inc
psrad
xchg
add
or
insl
cld
mov
loopne
dec
jmp
xchg
loopne
or
movsl
popa
sbb
push
je
inc
insl
and
cmpsl
clc
pop
pusha
xor
les
lcall
pop
cmp
xor
imul
mov
cltd
addl
call
dec
inc
imul
outsl
insl
dec
or
into
inc
mov
xor
jns
adc
sbb
cmp
xor
add
adc
or
scas
arpl
je
rcrb
xchg
lock
movsl
movsl
lcall
xchg
stos
xor
sbb
addr16
adc
fisubrl
jl
push
cmpsb
clc
pop
popf
mov
and
aad
sar
rorb
fiadds
lea
lds
sbb
ror
pop
sub
add
add
push
cwtl
mov
or
mov
push
fisttps
ret
inc
sbb
sar
mov
lock
data16
xor
inc
and
jo
adc
push
add
sbb
pusha
js
xchg
adc
adc
inc
inc
js
jg
inc
dec
call
sub
pop
xchg
push
cmp
dec
int3
arpl
jo
arpl
into
mov
imul
fidivrl
cmp
ja
mov
jmp
sub
jb
lcall
inc
imul
add
xchg
jge
cmp
loope
add
lcall
jp
inc
mov
sbb
cmp
adc
mov
add
or
sbb
cwtl
repz
out
cld
sbb
push
sbb
inc
cmp
adc
jp
repnz
in
neg
push
dec
test
jg
adc
lock
imull
aas
lcall
mov
test
rorl
cmp
mov
pop
shlb
popa
ret
call
aam
into
lock
cmc
cmp
in
rcrl
addr16
popa
dec
mov
add
sbb
add
push
or
jb
repnz
jbe
inc
jo
and
test
scas
pop
add
lea
stos
dec
aas
leave
xchg
test
ret
rorl
push
sbb
sub
push
add
pop
int
gs
repnz
pusha
test
test
or
aaa
sti
mov
push
inc
inc
loopne
pop
cmp
lock
loope
cmp
nop
pushw
ss
push
and
jle
sbb
mov
das
push
or
call
mov
xchg
lods
sub
lret
mov
cmp
mov
mov
lods
pop
push
adc
rcrl
ret
cmpl
add
add
outsl
ret
cmp
int
shlb
xchg
mov
jns
mov
mov
loop
mull
in
sahf
or
or
push
in
ret
push
cmp
movsl
jne
pusha
std
inc
adc
and
ds
or
jne
inc
sbb
xchg
lds
add
retw
test
js
out
rol
aas
sub
and
inc
jbe
lds
jl
sbb
jae,pt
cmp
adcl
adc
xchg
xchg
mov
jl
inc
xchg
fwait
sub
mov
or
add
add
cmp
enter
xchg
addl
cmp
jle
push
ret
jnp
dec
sbb
mov
and
out
dec
test
inc
pop
rolb
mov
and
or
add
orl
jge
incl
addl
sub
lods
ljmp
call
xchg
imul
add
or
or
loope
sbb
fldenv
add
inc
add
test
inc
inc
or
sahf
stos
pop
add
jmp
movsl
mov
mov
jmp
mov
gs
xor
cmpsb
cmpb
push
cmp
pop
das
dec
jl
outsl
jo
roll
cltd
lods
adc
dec
popa
mov
aam
cmpl
dec
pushf
pop
adc
cmp
jae
cmp
scas
test
jle
cmp
jg
mov
rolb
or
jecxz
xchg
daa
mov
test
add
push
xchg
test
loopne
ret
inc
outsb
fcoms
fcomps
pop
mov
rcl
jnp
adc
mov
cmp
hlt
xor
cmp
fwait
and
lcall
sbb
lods
pop
out
mov
rorl
add
addr16
or
sbb
xor
ss
in
mov
sbb
dec
or
andb
andb
push
dec
cmp
xor
mov
mov
xor
loop
inc
shr
xorl
fnsave
mov
and
sub
add
into
mov
push
pop
outsb
insb
sub
fisubs
or
aam
scas
or
jg
or
and
push
popf
add
jl
scas
cmp
cmp
add
popa
xchg
je
mov
xor
dec
xchg
sbb
add
xor
jmp
outsl
sub
sub
inc
arpl
testb
inc
cltd
jp
inc
dec
dec
insb
push
mov
notl
ret
adc
std
sub
shl
add
cmp
push
into
icebp
pop
adc
adc
xor
mov
je
dec
jne
push
lds
jp
dec
ja
fadds
and
xlat
push
jmp
xor
inc
sub
dec
lahf
je,pn
adcl
fcmovnbe
fsubrl
or
push
sub
fcoms
bound
cmp
scas
mov
mov
fs
inc
cs
arpl
push
loopne
fimuls
dec
dec
jo
xchg
jns
aas
mov
in
out
bnd
pop
loope
inc
sbb
dec
adcb
inc
js
jecxz
jmp
shlb
push
in
cltd
push
cmp
in
xchg
and
and
push
push
jb
bound
stos
fs
push
lods
mov
and
jae
popf
clc
dec
push
dec
rclb
xor
jl
jecxz
jp
clc
inc
mov
add
int
push
mov
je
cmpb
sub
lea
testb
jne
add
xchg
lods
fwait
popa
int
jnp
imul
les
lret
pop
xor
ret
fcom
xor
adc
adc
or
dec
or
push
push
bound
fnstsw
notb
cmp
ret
lret
mov
sbb
rcl
imul
movsb
insl
gs
out
or
add
adc
add
cmp
leave
test
add
sahf
jecxz
rorl
stc
dec
fildl
hlt
jne
inc
xor
adc
fisttpl
imul
testb
mov
add
or
add
outsl
test
jle
insl
scas
mov
es
les
push
pop
or
xor
inc
pushf
cmp
add
add
pop
dec
push
adc
jg
js
fsubr
push
icebp
adc
inc
sbb
pop
movsl
add
lock
addb
jbe
int3
leave
das
jo
lret
jne
lock
jb
ret
sar
and
jp
lock
or
mov
mov
adc
imul
inc
cmpsl
adc
fiaddl
and
mov
ret
push
mov
sbb
mov
cmp
fnstenv
call
je
jp
mov
fsubrs
adc
call
and
jl
ficomps
push
cmp
dec
cmp
cmp
inc
jae
jb
or
sub
cmpsl
push
fcmovb
jnp
and
aaa
pop
pushf
pop
xchg
call
sbb
icebp
jne
jae
scas
push
sub
mov
add
push
inc
bound
inc
pusha
jmp
test
or
or
fwait
or
adc
jbe
xchg
pop
push
outsb
stc
rolb
pop
sti
insl
pop
dec
test
insb
and
js
sub
sub
xchg
jns
inc
cli
ret
or
mov
adc
add
sbb
mov
and
cld
add
mov
testb
xchg
testb
add
jl
outsb
adcb
mov
push
jmp
inc
ss
and
jb
je
cmp
xlat
pop
push
add
jns
jb
cmp
jbe
clc
mov
xlat
push
push
push
or
movsb
or
mov
push
mov
push
add
das
aaa
out
pop
shlb
outsb
push
cmp
add
mov
test
mov
lcall
fstpl
fstpl
pop
jmp
cli
jne
cwtl
lock
pop
pop
sbbb
add
pop
in
mov
int3
sub
mov
push
inc
sub
push
push
insl
mov
and
xor
ljmp
in
fst
push
inc
repnz
hlt
push
cmpsb
inc
mov
push
je
rcrl
mov
jb
mov
mov
repnz
sbb
xchg
add
mov
and
push
xchg
mov
fisubrl
ljmp
adc
movsl
rcrb
and
adc
dec
shlb
ficoml
mov
test
mov
and
jnp
test
pop
and
inc
xchg
lock
fldcw
mov
fildll
roll
shlb
xchg
fstps
mov
xor
in
xchg
rolb
mov
or
sub
das
fcomp
out
inc
in
adc
adc
ret
fstps
add
cmpsb
pop
sbb
or
and
in
dec
xchg
inc
pop
or
shr
xchg
mov
xchg
nop
mov
inc
lea
mov
mov
dec
inc
adc
or
inc
enter
ret
jg
or
add
insl
add
pop
ljmp
xchg
adc
nop
mov
in
xor
adc
lock
frstpm(287
les
sub
cmp
add
xor
or
jb
sub
pop
nop
or
inc
add
pusha
insl
dec
outsb
fucomp
add
add
mov
call
or
in
inc
fs
inc
cs
fadds
pusha
cld
sub
outsl
nop
push
jne
add
iret
je
pushf
xchg
mov
mov
mov
scas
mov
add
adc
push
and
xchg
movl
xlat
dec
dec
das
pop
fisttpl
add
rorl
or
rcrl
enter
sbb
ret
push
add
inc
lahf
fdivr
sbb
and
adc
jl
inc
mov
sbbl
jno
andl
or
lock
xor
aam
adc
jge
dec
pusha
or
xchg
xchg
inc
pushf
sub
insb
adc
fcoms
xchg
or
cwtl
xchg
lret
mov
xchg
adc
or
in
inc
mov
sub
push
xor
in
test
fildl
in
adc
xchg
adc
push
mov
popa
add
stos
xlat
mov
cmp
shrl
enter
xchg
inc
xchg
push
pop
or
cmp
fwait
or
xchg
pop
es
mov
fwait
cwtl
inc
sub
cmp
rolb
xchg
or
mov
cmpb
xchg
mov
js
fdivl
sbb
cs
sub
and
push
enter
imul
call
adc
jbe
insl
les
ja
test
or
rol
push
xchg
in
adc
in
push
dec
outsb
unpcklps
cmc
sti
icebp
shlb
mov
daa
xor
cmp
mov
std
push
jno
pusha
es
fs
fs
xchg
dec
je
jl
xchg
add
ret
xor
call
adc
jb
lods
loopne
and
xlat
add
adc
adc
xchg
push
rcrl
int3
lea
cmc
rorb
call
xor
and
xor
jne
and
xchg
fmuls
in
sti
gs
pop
inc
push
lods
lods
add
scas
push
cmp
lods
push
clc
shlb
jns
adc
cmp
inc
or
xor
ret
sbb
sub
dec
test
lea
add
and
fistpll
add
jno
cmp
lock
mov
or
sbb
je
mov
stos
nop
push
flds
clc
sbb
jnp
push
cwtl
cmp
sbb
push
and
insb
fwait
xchg
adc
insb
inc
enter
aam
mov
dec
addr16
roll
add
and
sbb
lds
test
popf
lock
lock
push
dec
insl
sub
jl
dec
mov
fisttpll
pop
and
adcl
xchg
inc
je
fists
sbb
fsubrs
and
push
inc
xor
imul
and
inc
sbbl
lret
sbb
in
inc
push
mov
loopne
adc
pop
fdivl
jne
shll
shlb
mov
daa
sub
leave
and
cmp
add
or
push
subb
sbb
loopne
dec
cmp
or
mov
in
lods
push
cmp
scas
dec
or
or
add
xchg
xlat
pushf
or
lock
hlt
andb
xchg
fbld
add
adc
mov
sub
call
sub
insl
inc
push
and
or
dec
lea
dec
adc
dec
push
fdivrl
add
sbb
stos
adc
inc
fs
out
pop
inc
mov
es
dec
fs
pop
popa
and
mov
mov
and
je
push
repz
mov
addr16
fidivrl
or
shll
sbb
mov
and
imul
pop
jno
and
cmc
add
and
mov
data16
or
inc
or
call
les
and
dec
inc
mov
test
test
sbb
call
aaa
lock
mov
inc
pop
and
aad
mov
in
dec
xor
jl
adc
loope
in
fsubl
or
and
jl
movsb
addr16
adc
andl
nop
lods
jne
pushl
arpl
xchg
pop
jb
in
call
daa
pusha
and
addl
js
xchg
xchg
fdiv
mov
js
imul
jo
pop
ljmp
dec
push
add
jg
and
sbb
nop
sbb
xchg
xchg
decb
cmpsb
and
movsb
in
rcrl
in
in
jecxz
adc
cmpsb
insb
jne
shrb
mov
inc
mov
cwtl
fs
or
les
loopne
cmp
add
sti
xchg
mov
mov
jb
add
movsb
sti
push
es
and
shrb
fadds
jl
fwait
mov
adc
pop
dec
or
push
int
lea
daa
daa
cmpsl
mov
add
mov
xchg
in
add
mov
test
cmp
test
add
and
pop
inc
adc
fildl
repnz
cmp
cmp
nop
inc
or
or
xchg
dec
push
or
or
sub
or
inc
sbb
mov
sbb
enter
fwait
sbb
inc
inc
xchg
lsl
rcrl
inc
push
ret
xchg
mov
out
sbb
push
sbb
or
nop
add
or
adc
clc
sub
mov
add
mov
daa
xor
pop
nop
test
push
shll
xor
adc
leave
mov
adc
mov
imul
dec
popf
andb
filds
rcr
ret
sbb
pushf
sbb
jo
arpl
in
lea
sub
mov
sub
mov
and
rcr
mov
xchg
jne
ret
xor
sub
test
ja
imul
pop
pop
mov
mov
mov
in
mov
sub
or
add
and
cmp
movl
aam
cmp
push
adc
cmc
inc
dec
in
daa
add
ret
adc
or
repnz
iret
jl
imul
push
jge
das
rcrb
ljmp
shrb
mov
test
aad
leave
push
pushf
sub
stc
fs
adc
sub
sub
pop
or
push
sub
and
push
pop
nop
ret
cmpsb
or
call
pop
fidivl
push
push
ss
inc
stos
jecxz
das
add
movl
rorl
pop
js
jne
mov
or
pop
addr16
cmp
movsb
aas
mov
adc
ss
or
imul
mov
and
cmp
xor
insb
and
je
xchg
adc
pop
ret
push
in
test
ja
jo
adc
pop
xor
icebp
fdivs
cs
xchg
mov
cmp
cs
sub
outsb
loop
xchg
mov
xor
lock
sub
mov
popa
pop
xor
push
adc
enter
nop
and
jo
jb
jo
or
rclb
scas
push
loope
push
pop
pop
pop
add
sub
in
cltd
mov
xor
call
adc
or
push
and
adc
xchg
pop
lret
or
or
xor
or
addb
jno
xor
es
lods
das
cmp
or
or
pop
cmp
ret
jbe
fcmovu
mov
loop
div
popf
mov
add
sbb
jb
push
sbb
jno
xchg
add
adc
mov
insb
test
js
xor
push
mov
pop
mov
pushf
stc
dec
adc
cwtl
and
icebp
imul
adc
add
or
adc
push
jne
add
nop
out
or
ss
inc
or
movsl
ss
add
add
repnz
ret
cmp
int3
pinsrw
addr16
adc
dec
pop
test
int3
xor
maxps
iret
enter
test
mov
xchg
add
in
cmp
and
dec
out
jg
adc
movsl
ss
inc
dec
dec
roll
mov
insb
repnz
xlat
or
add
pop
mov
jmp
test
sarb
jnp
push
imul
add
rcr
inc
fsub
stos
push
and
insb
mov
stos
cmpsb
sbb
lock
das
xchg
or
cmp
jno
dec
orb
ss
int3
das
unpcklps
aam
adc
xchg
push
cwtl
in
mov
fdivrl
pop
xor
push
push
add
add
in
push
repnz
jl
mov
sbb
out
dec
cwtl
adc
dec
nop
pushf
mov
test
sub
rcpps
cs
adc
mov
mov
sub
inc
push
jl
popa
ret
or
in
bound
sbb
pop
lods
gs
aaa
inc
mov
lds
rcr
push
imul
fnstenv
bound
and
out
push
and
movsb
fdivr
add
sub
movsl
add
inc
roll
bound
push
adc
xor
imul
call
enter
add
fldt
mov
dec
and
and
and
inc
dec
inc
sub
mov
lret
mov
fcoml
pop
dec
aam
test
adc
jo
sub
dec
mov
nop
daa
prefetcht0
push
test
sbb
adc
mov
dec
mov
test
insl
xlat
xchg
sbb
push
cmp
inc
testl
inc
jp
dec
add
popa
xor
movsb
and
or
adc
sahf
cmp
pop
inc
in
ss
and
add
sbb
xorb
dec
int
or
push
imul
pinsrw
jne
xchg
mov
nop
notb
dec
xor
das
std
pop
inc
cmp
dec
out
mov
test
push
dec
add
in
dec
jns
insb
cmp
decl
imul
cmp
dec
shl
adc
arpl
cmpsb
and
mov
xchg
push
cs
or
jnp
js
lods
repz
rolb
push
sub
call
leave
aam
inc
cmp
inc
adc
nop
pop
xor
add
jge
and
jb
add
or
fdiv
aad
ret
xchg
mov
dec
sub
rolb
sbb
in
sbb
cmc
mov
sub
push
adc
icebp
pop
inc
arpl
leave
aaa
jmp
test
inc
jb
fildll
xor
xchg
pop
call
adc
addr16
arpl
cs
cmpsl
sub
dec
xchg
add
cmpsl
je
inc
sbb
xor
or
mov
xlat
xorb
cmp
dec
xor
rorl
pop
rclb
dec
int3
inc
aam
popa
scas
inc
sub
or
insl
push
aam
sub
test
push
mov
jnp
dec
call
in
mov
lock
movsl
xorl
cmp
repz
test
or
push
dec
lods
adc
ja
add
xchg
xchg
and
mov
and
cmpsb
or
hlt
jne
sbb
inc
push
mov
adc
cmp
sbbb
int3
gs
rclb
cmp
sub
enter
jecxz
cmp
iret
dec
lcall
jb
imul
add
add
aam
mov
cmp
dec
jg
jo
add
fcomp
sbb
cmp
mov
lds
divl
in
xchg
add
lods
ret
mov
push
jecxz
aas
pop
fdivr
dec
arpl
or
xor
mov
dec
xchg
test
jne
mov
mov
daa
push
adc
sbb
pusha
xor
cmpsl
and
mov
and
stos
lods
in
jne
dec
mov
movups
sub
sub
mov
sbb
adc
aas
sbb
or
js
mov
push
dec
xchg
mov
adc
jb
dec
adc
loopne
or
push
test
push
pop
sbb
fmuls
daa
mov
cmp
das
mov
outsb
movsl
lods
lods
test
rolb
jns
clc
clc
mov
ret
cmp
rolb
mov
push
scas
or
dec
repz
cwtl
js
pusha
add
js
popf
movsb
pop
dec
push
imul
nop
out
and
xor
or
and
lods
dec
jnp
sub
and
and
add
push
mov
fstl
and
rcll
leave
push
adc
aam
fstpl
or
sub
and
push
pop
imul
mov
es
sbb
add
adc
or
xchg
mov
cwtl
push
test
sbb
test
js
lods
adc
enter
pop
ds
inc
fisubl
and
sub
push
in
arpl
ljmp
pop
nop
mov
fnstsw
test
aam
repnz
bound
les
xorl
sub
fcoml
jne
xchg
sbb
sbb
shll
rol
mov
dec
leave
and
int3
mull
mov
iret
push
inc
xchg
cmpsb
push
or
or
sbb
fsubs
adc
insl
pop
push
sbb
fdivr
call
leave
loopne
push
iret
lods
test
or
xchg
sbbl
mov
nop
inc
xor
xor
fs
es
push
sbb
orb
adc
push
or
es
adc
inc
cmpsb
sbb
adc
or
aam
and
inc
mov
imul
cmc
mov
pop
push
mov
stos
push
jmp
dec
sbb
sbb
lcall
sbb
jns
pop
les
fucomi
loopne
lds
insb
stos
sbb
jp
notl
neg
mov
sahf
rorb
adc
fs
push
insl
mov
adc
es
jbe
adc
fs
xor
cmp
cltd
fs
dec
sbb
inc
fs
dec
cmp
push
nop
sub
pop
inc
inc
mov
dec
mov
idiv
fwait
mov
cmc
shlb
cwtl
dec
test
adc
enter
mov
leave
adc
movsb
push
pop
jno
rolb
outsl
iret
push
pop
sbbl
dec
and
test
and
add
add
rolb
sbb
aam
and
xor
xor
sbb
pushf
pop
xlat
or
or
stc
xchg
xor
std
dec
pushf
and
mov
or
push
jge
icebp
ret
dec
xchg
stos
xor
insl
lods
test
fistps
inc
enter
test
movsb
in
pop
bound
jmp
pusha
fisubl
es
push
mov
pop
adc
and
lock
int3
cmp
mov
les
rcl
data16
loop
aam
in
mov
adc
dec
and
mov
sbb
shr
fs
adc
push
sbb
adc
test
push
inc
in
dec
shr
push
xor
xchg
dec
lds
rcrb
out
test
bound
inc
inc
icebp
inc
adc
ja
mov
insb
and
iret
arpl
rolb
or
bound
jmp
out
pop
loopne
inc
repnz
mov
test
or
mulb
fs
adc
inc
or
dec
js
fstpl
xor
test
xor
leave
test
test
xor
loopne
movsb
stos
pushf
or
and
pop
sbb
xor
mov
int3
jmp
mov
dec
sbb
xor
outsl
in
xchg
fiaddl
push
fs
or
cld
cwtl
test
adc
and
add
aam
pop
jo
add
sti
xlat
or
xor
xor
in
cmpsl
jnp
enter
lds
fisubl
jbe
or
push
or
inc
test
out
daa
and
in
aam
adc
push
cmp
fcoms
dec
push
nop
imul
enter
ficoml
or
add
test
imul
sub
addr16
les
dec
lods
rorl
lret
in
jp
pop
pop
push
ficoml
in
jns
outsb
add
mov
outsb
ja
cmpsl
add
cltd
insl
stos
enter
lock
and
imul
pop
mov
adc
aaa
adc
rorl
ja
push
test
imul
cmovbe
or
inc
sub
inc
addl
rcr
idivl
push
pop
leave
xchg
mov
jb
jmp
sbb
push
arpl
inc
lret
out
lods
sub
ficompl
mov
enter
pop
fisubrl
ret
inc
aam
pop
and
loop
imull
call
or
leave
mov
lds
out
adc
xchg
insl
fildll
dec
sbb
mov
pop
in
int
sub
pop
or
pop
mov
int3
mov
jo
rolb
inc
test
pop
dec
dec
testl
xchg
lock
dec
les
lods
loopne
or
sbb
pusha
sub
jbe
in
das
fs
das
cltd
rolb
xor
outsl
adc
xchg
adc
jmpw
push
jg
ret
nop
adcb
or
shld
mov
stos
inc
in
add
xor
mov
push
adc
aam
les
ret
orb
pop
addb
nop
imul
mov
xor
add
and
push
test
xor
mov
add
lods
insb
pushf
shlb
add
xor
sub
inc
fs
imul
xchg
dec
es
insb
lods
push
dec
es
mov
cltd
fs
push
jl
je
fs
dec
test
cwtl
fs
dec
es
mov
dec
es
mov
pop
inc
jg
mov
xlat
ja
lea
mov
xchg
and
jmp
cwtl
jns
fwait
push
pop
fcoms
xchg
mov
mov
pop
adc
sbb
je
pop
cltd
movnti
mov
or
loopne
adc
xor
add
insb
je
in
and
adc
pushf
movsb
and
mov
int3
aam
in
arpl
sub
inc
push
fsubrs
adc
push
mov
and
sbb
mov
pop
cmpsb
loope
popa
and
int
outsb
inc
test
and
leave
js
pop
aam
cmp
mov
mov
cmp
cmp
jb
mov
test
xchg
dec
xor
je
fs
lret
and
jecxz
test
sub
test
and
mov
and
or
nop
test
dec
dec
test
aam
add
aam
cmp
mov
arpl
push
ja
gs
cwtl
ss
aam
sub
stos
xchg
xor
roll
pop
add
cwtl
sbb
mov
xchg
inc
xor
loop
sbb
movsb
pushf
loop
cmp
push
aaa
adc
leave
and
and
pop
int3
jns
push
push
jb
js,pn
xlat
addb
lods
sub
and
rcr
cwtl
dec
insb
xchg
mov
and
and
or
push
sbb
inc
inc
and
sbb
leave
and
mov
sbb
and
xchg
dec
xor
pusha
negl
insl
cmp
jecxz
sub
dec
inc
fsts
adc
jg
mov
xchg
jb
loopne
leave
push
and
lods
adc
xor
test
test
cltd
pop
scas
add
pop
mov
add
shrl
or
xchg
mov
push
gs
test
add
test
xor
rcrb
in
dec
popf
gs
or
cmp
or
aas
adc
pop
aam
add
bound
idivl
cmp
jmp
mov
rcrb
sbb
iret
pop
nop
mov
int3
or
jge
roll
sbb
imul
mov
xchg
sbb
push
mov
ja
xchg
sbb
xor
pushf
mov
and
mov
es
enter
xor
xchg
mov
fmul
les
xor
push
or
filds
test
jl
add
and
adc
enter
pop
sbb
ja
sbb
or
int3
xchg
sbbl
adc
mov
scas
popa
orb
mov
mov
subl
or
rolb
stos
and
fwait
sbb
movsb
sbb
movsb
adc
or
inc
es
sbb
jg
mov
cmp
nop
repnz
js
xor
mov
sub
mov
adc
dec
fwait
add
mov
mov
imul
sbb
or
nop
mov
movsb
mov
subl
fs
push
or
push
nop
or
push
pusha
popa
sarl
inc
or
inc
sbb
sbb
push
sbb
dec
adcl
lea
aam
andl
jbe
xor
in
adc
xlat
rolb
and
adc
insl
hlt
cltd
inc
loop
add
or
test
cmp
in
sti
leave
dec
push
or
mov
fs
and
sub
push
movsb
les
lds
clc
mov
in
cltd
scas
cltd
add
ss
cld
icebp
sar
pusha
rcrb
xor
repz
sbbb
clc
icebp
cmpl
xor
popl
mov
mov
or
push
enter
and
mov
fs
adc
bound
push
sbbb
sub
pop
shr
shrb
scas
and
scas
dec
ret
inc
insb
jle
call
inc
das
out
sbb
mov
or
dec
pop
mov
shlb
rolb
pop
out
and
sbb
fsubr
or
hlt
loope
add
fld1
mov
mov
fwait
xchg
and
or
sbb
out
leave
cmpsl
adc
cs
push
test
inc
test
dec
cmpsb
sbb
inc
xchg
movsb
aad
cmp
outsl
lods
adc
imul
sub
sub
insl
push
popa
sub
movsb
andb
mov
sub
test
imul
orb
pop
jecxz
sub
sub
adc
negl
dec
ss
dec
mov
jmp
mov
inc
push
inc
jecxz
stos
sbb
fsubl
movsb
es
cwtl
aas
pushf
fadds
outsb
adc
jnp
inc
mov
bound
push
test
dec
dec
dec
ret
sbb
xchg
lods
sub
inc
fsubs
ret
scas
adc
aam
inc
in
movsb
iret
insl
adc
adc
or
scas
test
fisttpl
shrl
xor
adc
nop
ja
fiaddl
adc
add
fstpt
aam
nop
sub
pop
pop
adcb
and
adc
xchg
dec
test
sub
aas
ret
xor
std
add
xor
xor
dec
fdivl
inc
or
js
movsl
movsl
cs
sub
cmp
push
and
insl
mov
push
mov
cmp
inc
lods
jbe
add
dec
cli
inc
adc
mov
cli
lahf
adc
inc
dec
add
rclb
daa
pop
dec
rclb
scas
test
lcall
inc
sahf
lods
cmp
je
movb
add
ss
int
inc
add
in
lcall
test
arpl
xor
js
dec
xor
xor
jo
fnstenv
inc
cmpsl
nop
cmp
cltd
clc
mov
and
xor
and
adc
adc
pop
nop
mov
mov
dec
add
lahf
cmp
js
sbb
inc
dec
int
rolb
popa
out
test
sbb
xchg
push
mov
xchg
bound
je
decl
rcrb
jno
xchg
xorb
ds
enter
jge
test
jbe
sbb
add
addb
push
ret
pop
and
xchg
inc
adc
or
push
mov
pop
shlb
mov
imul
lods
adc
test
mov
push
sbb
shl
movsb
mov
add
push
ret
adc
push
popf
or
dec
pop
pop
movsl
lahf
sbb
sub
cvtpi2ps
cmovae
mov
fadds
add
mov
insb
nop
sub
push
fmul
add
inc
sub
push
push
pop
or
jp
push
push
add
nop
nop
notb
sub
lods
pop
push
push
inc
mov
lea
cltd
loopne
cwtl
xchg
or
inc
sub
fwait
mov
sti
out
nop
out
dec
push
cld
hlt
or
repnz
or
fsincos
cmpsb
push
mov
sahf
or
sbb
lods
or
in
fists
jmp
pop
sub
push
sbb
out
divl
fcomps
movb
test
xchg
and
ds
mov
and
inc
lahf
push
les
push
das
xchg
mov
loopne
imul
push
scas
cmp
cmp
adc
cmp
and
dec
sub
inc
pop
push
or
push
push
add
mov
dec
mov
imul
dec
out
cld
mov
pop
mov
cltd
mov
sub
or
mov
rol
dec
mov
push
dec
or
jmp
jl
adc
cmp
sete
icebp
gs
es
or
push
xchg
push
push
pop
aas
in
and
mov
test
jg
sub
in
mov
inc
std
add
jle
mov
add
ds
repz
add
sbb
addb
cwtl
test
mov
sub
inc
bound
sahf
add
inc
push
roll
lret
insl
ss
in
inc
or
pop
push
scas
add
jg
mulb
add
inc
orb
jnp
mov
add
pop
or
adc
mov
rcll
xchg
adc
or
cmp
jg
rclb
cmpl
test
add
nop
add
into
pop
adc
test
dec
iret
repz
ds
imul
push
sub
and
push
mov
pop
cmp
imul
xor
add
push
incl
sub
adcb
mov
popa
test
inc
mov
and
insb
outsl
arpl
xorb
outsb
push
mov
pushl
popa
arpl
jne
jb
outsb
je
add
das
add
push
lahf
adc
insl
adc
cs
sti
jg
inc
outsl
jb
js
je
jb
gs
add
or
outsl
mov
stc
testl
add
add
jne
les
fstp
mov
push
jb
dec
push
add
dec
lock
add
aaa
or
ds
add
xor
inc
push
add
aas
jmp
mov
pop
dec
add
sub
mov
je
push
insl
xchg
je
je
jo
addl
fisttpl
mov
daa
cmpsw
insl
push
push
mov
jae
bound
pminub
sbb
popa
out
pop
cmp
insb
mov
fsubrp
jp
outsl
or
mov
fisubs
gs
bound
jne
fnstsw
and
outsl
jmp
jo
mov
and
stos
insl
and
jne
sub
push
imul
scas
cmp
jne
inc
push
lock
pop
fmull
sahf
xchg
sub
dec
sub
fs
in
icebp
sub
insb
lcall
repz
lahf
popa
cmp
push
sbb
inc
arpl
mov
jecxz
inc
or
daa
sbb
or
fbstp
xchg
js
outsb
bound
jnp
adc
ret
arpl
loopne
outsl
fistl
insl
and
cmp
mov
push
filds
xchg
popa
in
mov
xor
fidivl
and
nop
or
xor
lds
lock
andl
mov
fidivrl
jg
popa
sub
or
outsl
inc
xchg
lahf
aaa
jg
shll
dec
iret
fisttps
dec
fs
xor
ficoms
data16
sbb
push
pop
jbe
imulb
stos
repnz
outsl
xlat
xchg
das
rcrl
jae
lods
xchg
aad
sbb
jo
lahf
sbb
dec
outsl
aas
or
arpl
mov
scas
sbb
mov
lock
push
mov
and
pop
adc
jmp
imul
sbb
mov
inc
shll
popa
leave
push
or
xor
outsl
pop
sub
add
adc
add
pop
mov
pop
insl
lret
je
or
popa
mov
fisubs
test
scas
popw
pop
jo
testl
sub
mov
cmp
xor
cwtl
lods
dec
addr16
add
jmp
andb
ret
fists
push
inc
inc
mov
push
adc
das
sbb
dec
push
adc
push
sbb
sbb
jl
out
mov
sbb
test
fbstp
rcrl
push
das
push
pop
sahf
push
sbb
sbb
iret
cmp
mov
cmpsl
out
ds
incl
dec
mov
addr16
jbe
fdivs
add
jo
les
bound
lret
pop
out
gs
cmp
imul
mov
ds
mov
jo
out
cwtl
shll
cmpsl
push
fwait
cmp
fnstsw
dec
add
sbb
xor
add
add
and
cs
jns
add
das
das
and
and
pop
idivb
daa
dec
inc
mov
out
fsubs
push
push
decb
and
ret
dec
pop
mov
pop
aas
dec
inc
push
push
inc
sub
daa
mov
push
daa
pop
imul
outsl
dec
and
mov
add
das
pop
mov
imul
iret
jns
mov
out
loopne
push
arpl
jnp
insl
pop
pop
jp
jae
fbld
je
and
sub
aaa
in
ljmp
ds
imul
mov
arpl
fcomps
out
mov
cmp
add
dec
jmp
adc
add
das
das
adc
dec
push
inc
inc
arpl
bound
dec
outsl
jbe
inc
mull
dec
arpl
inc
jo
sub
sbbl
jne
jne
xor
insb
xchg
outsb
jle
mov
imul
mov
popa
outsb
adc
cmp
scas
cmpsl
xchg
popl
aaa
out
jg
addr16
popa
je
jb
xor
lods
std
int3
lahf
mov
jae
push
gs
insl
mov
jne
dec
outsl
outsb
and
bswap
cmp
pushf
xchg
pop
dec
inc
aas
arpl
out
dec
or
sti
fldl
mov
jae
in
test
push
inc
push
popa
insb
jne
inc
sub
mov
ret
mov
and
sub
sub
cs
xor
xor
xor
ss
cmp
cmp
cmp
ds
or
inc
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
aaa
mov
mov
rcrb
pop
pop
pop
lock
mov
bound
gs
imul
jo
mov
mov
ja
jns
jnp
jge
jg
xchg
dec
outsw
adc
lcall
loopne
pop
in
jnp
inc
add
orb
sar
std
aas
ds
jno
icebp
pusha
inc
mov
clc
ret
movsl
add
mov
je
arpl
imul
imul
cmp
mov
add
jo
xor
es
popa
js
addl
je
pop
dec
pop
sbb
fists
lods
dec
out
ret
ret
sub
in
sbb
int3
adc
imul
add
add
add
add
lds
push
pop
push
add
xor
addr16
test
add
pusha
push
mov
js
or
cmp
add
sti
mov
add
addb
add
xchg
adcb
test
add
orb
daa
push
cmpb
push
and
sub
jb
int3
push
jo
lret
cs
push
push
jmp
push
outsb
imul
jo
pop
adc
pop
or
sbb
adc
iret
leave
xor
sbb
daa
xchg
lea
mov
and
leave
and
add
add
push
xchg
shl
inc
scas
mov
lret
hlt
aad
cmc
add
lods
mov
stos
in
add
sbb
cmp
pop
sbb
push
inc
sub
cmpsl
out
rdtsc
ss
jmp
dec
inc
or
pop
stos
push
notl
fs
add
cs
jae
fstl
jbe
bound
je
outsb
data16
push
jbe
xorb
inc
xor
push
jae
xchg
daa
pop
lea
mov
popa
addr16
outsl
js
push
xchg
cs
aam
testb
insb
jo
and
and
mov
aaa
insb
les
dec
imul
or
inc
mov
mov
lods
ds
cmp
dec
inc
jb
jns
daa
mul
mov
pop
and
mov
cmpsl
cs
je
and
arpl
je
sbb
mov
push
insl
push
fsubrl
push
jbe
mov
cld
mov
fdivl
or
jb
and
xor
pusha
inc
jbe
push
push
ss
jns
insl
and
mov
rolb
and
pushw
in
push
popl
inc
imul
pusha
gs
add
push
lds
insl
adc
dec
test
bound
adc
popa
insb
jae
mov
pop
in
adc
push
jae
or
cmp
jo
pusha
insb
call
xor
addr16
subl
icebp
or
gs
mov
mov
adc
sbb
in
push
push
push
push
dec
testl
dec
push
scas
cltd
push
lods
lea
dec
push
inc
ret
dec
jge
insl
jl
clc
adc
jb
push
imul
call
mov
outsl
xor
inc
in
mov
das
gs
or
or
sbb
divb
pusha
push
mov
addr16
jp
scas
mov
xchg
daa
jnp
pop
loope
mov
popw
pop
cmp
dec
jl
cmp
or
ds
and
iret
repz
sub
es
lcall
sub
sub
dec
mov
outsb
add
sub
cmp
pop
or
sbb
das
push
and
aaa
aaa
cmp
outsb
cmp
ds
mov
pop
pop
jne
stos
addl
push
jbe
sbb
rcr
das
jo
ss
gs
imul
mov
dec
xor
sahf
inc
pop
and
mov
fs
jo
sub
xor
jl
out
sub
pop
cs
add
repz
xor
jge
iret
repz
cld
sub
imul
push
aam
iret
repz
int3
enter
cmp
repz
lods
test
lcall
cwtl
push
je
xchg
idivl
push
mov
dec
jl
push
jo
out
sahf
out
fs
pop
pop
sahf
out
sahf
push
push
dec
inc
xor
cmp
out
and
cld
sub
enter
repz
push
lcall
sbbb
fs
xor
cmp
out
sbb
lock
test
cmp
repz
in
sub
fwait
loope
mov
sub
push
add
jl
and
adc
sub
in
add
xchg
inc
sub
dec
lods
in
sbb
mov
inc
addl
mov
addb
stos
ljmp
xchg
dec
leave
push
mov
add
add
dec
cmp
add
ja
xor
push
mov
inc
adc
xchg
jnp
inc
mov
sbb
filds
insl
sbb
jle
add
addb
xchg
lea
xchg
xchg
call
lcall
mov
cmpsb
cmpsl
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
pushl
mov
mov
enter
int3
int
iret
rcl
rcl
aam
call
xlat
fcomp
fcmovu
loopne
loop
in
out
call
in
out
out
lock
repnz
inc
adc
idiv
stc
cli
sti
cld
std
jmp
inc
test
xchg
loope
push
sub
incl
rclb
popa
and
xchg
js
popa
data16
out
pop
inc
test
jns
push
xor
test
jb
add
ds
scas
mov
aaa
push
arpl
sbb
insb
fs
sbb
lods
xor
push
mov
or
aam
jmp
push
setl
scas
add
sub
add
inc
adc
push
je
xor
xor
push
dec
inc
dec
cmovns
fwait
cmp
push
cmove
push
or
call
imull
adc
decl
inc
call
rclb
mov
out
xor
mov
inc
jnp
inc
loop
mov
ds
pop
adc
decb
or
cli
jb
jge
arpl
cmp
fbstp
jg
adc
fisubrs
cld
push
mov
and
cmp
dec
imul
lcall
iret
lret
add
inc
mov
mov
sub
sti
add
dec
fwait
ss
sbb
pop
jns
ds
xor
dec
inc
dec
int3
dec
dec
xor
dec
popf
pxor
xor
lret
aaa
push
div
inc
incl
ljmp
and
cmp
cmpsb
das
xchg
pop
and
xchg
lret
incl
icebp
mov
cld
or
loopne
cmp
inc
mov
xchg
push
pop
xchg
sub
iret
aas
sbb
insb
mov
out
leave
ljmp
orb
pop
test
xor
jle
dec
add
scas
lods
dec
lock
xor
or
mov
aas
mov
pop
pop
repnz
hlt
and
es
mov
fcompp
add
lds
outsl
loope
add
dec
cmc
ja
sub
int
movsb
pushl
or
shlb
or
jmp
sub
xor
sub
mov
mov
ds
and
inc
cmovg
aaa
mov
xchg
jmp
and
test
jle
imul
xor
sti
es
jae
movsl
xchg
mov
lret
out
and
data16
scas
sub
inc
cmpsl
subl
js
sub
ret
bound
jg
subb
jne
fs
pcmpeqw
ss
sti
or
ja
popa
daa
fucomi
push
or
add
je
push
lods
push
mov
pop
mov
je
mov
dec
loopne
mov
ret
sub
fcomi
test
jb
add
ja
add
sbb
push
nop
nop
push
pop
xchg
add
xchg
imul
sbb
lret
idivl
jae
insl
jle
push
lods
cmp
cmpsl
mov
and
loope
mov
jmp
arpl
repz
mov
fbstp
out
push
sbb
inc
mov
push
mov
pop
jg
mov
xor
insb
daa
jnp
and
push
das
cmpsl
cmp
or
push
add
add
push
xor
adc
faddl
sti
sbb
jns
outsb
xlat
cs
cmp
fs
mov
cmpsl
xlat
pushf
or
mov
je
xchg
js
sub
mov
aas
cmpsl
cs
push
out
add
xchg
jo
subl
cmp
pop
pop
mov
jne
adc
dec
xlat
hlt
and
out
jo
imul
call
es
and
cmp
xorb
daa
adc
push
mov
cmpsl
sbb
inc
xchg
inc
arpl
mov
dec
js
mov
mov
mov
dec
jp
pop
loopne
loope
aas
ja
pop
rorl
dec
jecxz
jnp
mov
sub
ljmp
test
pop
mov
shll
inc
xlat
and
je
and
outsb
ficompl
daa
pop
xchg
jo
arpl
add
gs
loope
jp
jne
xor
and
dec
lret
arpl
mov
pusha
push
and
pop
in
jo
pop
inc
mov
add
fdivs
fldt
dec
mov
roll
add
arpl
mov
lret
sub
stos
mov
inc
sub
daa
into
ret
ss
scas
js
jno
or
jo
add
test
push
into
pop
aaa
sbb
mov
je
mov
push
add
adc
arpl
mov
inc
cmp
arpl
cmovnp
dec
loope
hlt
andb
data16
pop
daa
out
or
les
xor
subb
mov
out
jnp
hlt
arpl
adc
aaa
sub
add
or
fwait
test
mov
pop
push
and
scas
ljmp
sub
and
bound
cmp
dec
aas
loope
push
push
push
inc
pop
push
out
cmp
daa
jne
add
dec
pop
outsl
dec
fwait
jp
rol
sbb
inc
das
push
hlt
mov
push
adc
push
clc
ret
js
mull
dec
xchg
jne
pusha
testl
add
sub
ret
dec
sub
outsb
outsb
sub
and
scas
out
jmp
push
fiaddl
bound
jae
imul
push
push
pop
mov
addr16
sti
push
rdmsr
scas
xchg
jecxz
push
bound
or
push
out
arpl
pop
mov
adc
outsl
jmp
add
mov
in
dec
outsl
insl
cli
mov
cs
mov
add
es
or
out
jecxz
je
inc
push
inc
scas
imul
mov
arpl
dec
insb
xchg
xor
inc
inc
dec
add
dec
out
test
out
adc
mov
add
ss
mov
iret
mov
inc
pop
cs
xchg
dec
por
adc
pop
mov
fdiv
mov
addr16
outsl
or
ja
sbb
inc
out
jmp
pop
push
aas
ds
testl
or
mov
add
inc
inc
jl
jl
and
jl
mov
mov
imul
mov
and
addr16
mov
stos
das
mov
push
pop
sbb
jecxz
fidivrl
jnp
cmp
jns
push
mov
pop
lods
fnstsw
adc
rcr
jl
pop
jnp
cmp
pop
imul
jmp
adc
insl
ja
add
mov
lea
pop
bound
outsb
jg,pn
and
add
mov
mov
jge
cmp
dec
outsl
jo
js
lret
jl
jo
loopne
and
jns
mov
mov
fstpl
ret
loopne
pop
fisubrs
fs
mov
dec
lock
loope
adc
jl
ret
sbb
push
repnz
inc
repnz
lods
js
mov
es
add
jbe,pt
push
imul
inc
pop
and
sbb
add
push
test
push
jle
add
sub
mov
mov
xlat
aaa
sbb
push
jecxz
daa
inc
div
push
imul
jb
sahf
inc
jns
jae
jae
mov
sbb
pop
andb
inc
fisttps
xor
pop
jg
pop
cli
js
cli
add
mov
clc
das
pop
pop
pop
push
mov
jb
rcrb
pop
pop
data16
aaa
inc
mov
insb
roll
push
mov
aas
adc
popl
mov
aaa
es
loope
inc
outsl
das
addr16
ffreep
push
lcall
scas
push
add
add
inc
xchg
inc
cmpsl
stc
xor
fiadds
cmp
scas
fnstcw
ss
add
lret
ss
pop
cwtl
ss
and
mov
fisubrs
xlat
fimull
push
mov
dec
ds
xor
dec
sti
push
pop
push
push
lds
imull
test
push
testb
push
inc
jg
idivb
iret
push
es
ds
pop
jmp
out
jl
cmp
and
pop
test
shr
add
aas
pop
xlat
insb
or
sub
inc
pop
or
fwait
popa
shrl
fidivrs
mov
sbb
repz
xchg
stos
push
leave
pop
or
cmp
inc
outsl
jg
adc
jns
inc
push
inc
and
call
imul
ja
iret
pop
aaa
dec
and
push
orl
sub
jae
imul
pusha
or
daa
inc
addr16
ret
sub
aaa
dec
push
add
or
or
xor
scas
push
lahf
jae
aas
rcl
cmp
mov
push
and
pop
out
pop
fnstsw
push
gs
insl
pusha
push
popa
jne
or
ss
push
and
dec
bound
xor
pop
sub
and
push
icebp
scas
aad
sahf
and
je
das
push
sahf
out
fimuls
jg
stos
fstpt
pop
jl
jne
jne
jp
mov
out
cmp
xchg
scas
mov
and
sahf
jnp
rcrl
or
bound
aas
add
ja
outsb
jbe
les
adc
gs
data16
pushf
je
cmp
push
mov
js
push
push
jo
jb
into
jb
out
jge
mov
and
jae
sbb
pop
insb
imul
cmp
and
and
arpl
xor
jle
fbld
cmp
fs
adc
test
adc
mov
mov
mov
outsb
je
ss
sbb
imul
outsb
outsw
sub
ja
adc
fcomps
and
sbb
mov
xor
fmuls
xchg
push
daa
imul
cmpsl
xchg
or
dec
pop
push
scas
ja
mov
push
ja
push
mov
add
jp
scas
shlb
add
inc
cmpl
push
pop
inc
adc
xlat
mov
addr16
dec
push
and
mov
aaa
push
sbb
mov
xchg
js
push
pop
mov
sub
cmp
pusha
and
jo
cs
sti
mov
ret
push
or
xor
push
iret
lea
push
cmp
pop
push
into
or
or
or
test
cmp
sahf
cmp
cmpsb
pop
mov
aas
add
mov
ret
data16
and
mov
fdivl
sahf
outsl
loop,pn
lcall
repnz
xchg
fldenv
sub
push
or
jo
inc
or
pusha
test
mov
inc
mov
push
add
les
dec
inc
out
push
sbb
pop
mov
outsl
or
or
movsl
cmp
adc
lods
sub
cmp
hlt
push
imul
inc
jle
add
dec
icebp
dec
outsl
adc
lods
pop
or
fmull
aaa
scas
orb
test
dec
js
push
fiaddl
mov
dec
add
lcall
add
lcall
call
scas
and
lcall
adc
push
popa
add
add
and
sbb
cmp
add
lods
fimull
dec
jae
fidivrl
data16
pop
fildl
sti
dec
push
das
mov
xor
arpl
pop
cli
add
xor
vmptrld
fs
add
mov
in
add
and
inc
sub
into
jle
rolb
dec
pusha
into
movb
push
mov
cld
jbe
ss
js
lret
iret
inc
lods
inc
rol
push
ja
add
jbe
out
imul
push
xlat
inc
and
push
push
inc
add
adc
adc
sub
fsubrp
pop
shlb
or
or
lods
mov
adc
js
add
add
jge
cmp
inc
jg
push
fisubrl
sahf
and
sbb
jmp
aad
add
mov
or
ja
jg
add
or
addr16
andl
arpl
outsl
jo
pop
pop
add
addr16
mov
pushf
push
cmc
sub
imul
arpl
je
lahf
inc
and
push
aas
shlb
jmp
ja
andb
adcl
push
pop
icebp
cs
jb
or
push
xchg
out
stos
pop
sub
faddp
lds
push
cs
add
stos
lahf
mov
cmpsb
mov
shlb
aaa
sbb
je
inc
sbb
ljmp
nop
sbb
add
or
jnp
inc
pop
inc
repz
pop
add
lea
subl
push
imul
push
or
inc
arpl
mov
jae
mov
aaa
jno
push
add
fistpl
and
mov
outsl
lock
or
pop
das
dec
adc
inc
sbb
arpl
shrl
imul
ss
inc
and
into
shlb
roll
ret
add
mov
ret
out
pop
rcr
out
test
addb
mov
inc
inc
repz
jp
std
ret
cmpsl
xchg
xor
cmp
mov
sub
pop
pop
jb
pop
scas
inc
outsb
cmp
sbb
xor
ficomps
fldt
sbb
xchg
out
mov
mov
shrl
mov
lahf
sti
pop
rcll
or
cmp
push
xchg
push
and
pop
xchg
push
fstp
mov
jnp
jb
xlat
test
push
mov
inc
sti
jp
rcr
cmp
test
adc
add
and
or
addr16
xor
jnp
cmpsl
xchg
aas
xor
xor
arpl
push
sub
add
xlat
es
cmp
pop
inc
outsl
daa
es
mov
sub
ja
arpl
cmp
shll
popa
shrl
mov
jae
dec
sbb
sub
xor
hlt
push
inc
arpl
out
pop
xor
scas
inc
jne
and
adc
xor
out
jecxz
sbb
fwait
test
test
xchg
loopne
adc
add
cmpsl
adc
arpl
jne
sub
imul
ret
test
test
inc
sbb
ljmp
xor
sub
aaa
xor
inc
push
xor
insl
stos
jp
das
das
dec
cmp
outsl
push
inc
dec
adc
mov
xchg
cmp
stos
xorb
das
add
mov
scas
cmp
les
dec
pop
out
clc
fs
pop
push
or
lds
push
ljmp
pop
rclb
out
lahf
fmull
xorl
jo
and
dec
das
sub
sbb
pop
inc
aaa
lret
cmp
mov
jecxz
pop
popa
xchg
cmp
rorl
or
mov
add
ret
pop
cmova
dec
mov
push
sub
ljmp
cmp
addr16
push
pop
xchg
cs
cs
or
sbb
push
bound
mov
xchg
arpl
out
xchg
sbb
pop
add
dec
je
sub
movsb
push
fisubl
cmp
cwtl
scas
mov
inc
and
lret
sub
xor
sub
roll
or
inc
es
lahf
rcr
movlps
cmp
and
push
mov
call
push
pop
minps
mov
aas
push
fs
or
inc
dec
jle
dec
mov
jmp
pop
jno
mov
repz
push
mov
stos
push
scas
mov
outsl
push
imul
push
sahf
test
mov
or
sbb
iret
jp
scas
mov
add
roll
mov
or
lret
pop
add
dec
fisubrl
pusha
fistpll
cmp
out
or
lods
adc
ja
adc
pop
mov
stos
das
and
mov
imul
xor
push
mov
push
mulps
aaa
out
ss
adc
mov
int
sbb
outsb
ss
int
sbb
sbb
pop
pop
pop
jmp
test
fwait
out
into
js
and
and
inc
cs
push
and
outsb
bound
mov
pop
and
xor
inc
dec
pop
lea
das
dec
sbb
cmpsl
arpl
jno
jno
lret
push
pop
sarl
mov
out
mov
xchg
pop
sti
push
out
or
shll
xchg
pop
pop
jg
addb
xor
lods
daa
sub
dec
pusha
pop
ret
lea
or
push
loop
add
popa
sbb
cmp
sub
jmp
add
mov
daa
cmp
mov
mov
test
add
out
mov
push
lods
lahf
out
cwtl
mov
aam
fwait
dec
jo
loop
pop
mov
mov
das
sbb
lds
popa
sbb
jg
sub
push
add
sub
fildl
push
xor
or
fistpll
push
mov
xor
mov
movntps
das
pop
bound
and
xchg
fimuls
xchg
aaa
inc
test
inc
and
mov
inc
jbe
mov
jmp
bound
push
jecxz
inc
mov
daa
mov
imul
scas
xor
arpl
xor
or
jnp
jge
mov
repz
jae
xor
fs
insl
popf
or
adc
das
inc
cmp
daa
jmp
scas
add
push
insl
pop
inc
sub
and
add
fsubrl
or
cmpsl
push
mov
insl
arpl
bound
mov
dec
clc
sub
inc
xchg
push
pop
or
mov
out
out
or
mov
sbb
and
jecxz
sub
push
leave
push
repnz
mov
dec
pop
and
stos
in
dec
hlt
loopne
pop
and
in
jb
lods
fistpll
mov
xchg
fs
cmpsb
xchg
push
rcr
push
repnz
and
aam
in
cltd
dec
test
fimull
in
scas
xchg
stos
fs
inc
in
fdivs
dec
and
in
lock
mov
push
add
push
repnz
pusha
or
dec
pop
and
stos
in
adc
push
jns
shrl
scas
xchg
sbb
sarb
push
jb
sub
rorl
xchg
test
xchg
mov
ret
leave
xlat
mov
mov
jno
jecxz
pop
and
pop
adc
inc
cmp
lahf
xor
pop
aaa
fcompl
dec
mov
cmpsb
ret
insl
pop
adc
mov
inc
push
or
and
jmp
fistpl
and
inc
in
mov
xor
mov
mov
pop
sub
inc
xor
loopne
xchg
out
dec
pop
xor
inc
mov
dec
frstor
and
mov
and
imul
inc
sbb
test
inc
mov
test
insl
adc
push
mull
mov
rorb
shll
add
sub
mov
mov
movsb
adc
xchg
push
mov
push
cmp
dec
adc
sbb
outsb
add
push
adc
or
lea
pop
aaa
or
push
push
xor
scas
addr16
sub
mov
xchg
insb
inc
mov
fildll
push
mov
scas
cmpsl
lahf
jo
je
xlat
pop
inc
sub
or
add
sbb
add
or
cmp
and
sti
mov
ret
push
fisubl
rcll
aaa
js
leave
mov
inc
mov
outsl
inc
mov
js
scas
mov
das
push
fisubrl
pop
fmuls
rcrl
test
aas
pop
gs
add
or
lahf
pushl
and
in
xor
ja
push
bound
xor
or
adc
sbb
rclb
push
loop
mov
jbe
pop
lcall
shrb
jg
jae
and
add
push
pop
xlat
pop
add
sbb
bound
movsb
insl
pop
lea
ds
pop
sbb
push
pop
add
sub
pop
or
and
add
mov
pop
sbb
push
push
xchg
jb
add
pop
inc
popl
or
or
xchg
fisttpl
cmp
inc
es
addr16
bound
adc
je
or
test
cmp
xor
sahf
gs
cltd
add
or
cmp
xor
mov
es
jae
and
sub
sub
shll
icebp
imul
icebp
push
outsb
dec
mov
push
jbe
cmp
jnp
xor
xor
daa
outsb
xor
pusha
insb
and
xchg
ds
push
int3
add
in
ja
adc
ss
xchg
jae
imul
daa
js
outsl
dec
js
fs
enter
pop
daa
sbb
dec
mov
stos
out
or
xor
add
ret
add
and
xor
shrl
pop
push
subb
sub
sbbl
in
add
popa
push
in
mov
or
push
adc
push
inc
imul
mov
repz
mul
in
and
push
dec
pop
mov
addr16
cltd
filds
sbb
cmpsl
dec
pushf
xchg
pop
inc
mov
pop
imul
jl
adc
xchg
stos
add
lock
jb
xorl
js
inc
imul
mov
mov
das
sti
mov
ret
scas
lahf
xor
inc
pop
xchg
adc
mov
push
fisttps
jo
pop
inc
ja
addps
push
sub
shrb
push
incl
pop
and
rdmsr
cs
add
rclb
xor
xchg
dec
movlps
das
or
pop
cmp
xchg
imul
popa
lods
adc
push
push
push
dec
mov
sub
insb
fiadds
add
subl
jo
xor
cmpsb
je
push
scas
ret
dec
rcll
xchg
inc
push
inc
jecxz
dec
adc
xchg
pop
add
xor
popl
lea
stos
lret
mov
adcl
movsb
mov
inc
imul
testl
loop
outsb
cmp
push
out
ret
push
push
push
cmp
scas
lods
xor
repnz
out
es
mov
aad
add
loopne
mov
and
negl
movl
xor
neg
pop
ret
fs
dec
sub
orl
je
xor
pop
jecxz
pop
jnp
pop
sub
dec
shlb
or
inc
or
sti
push
lret
inc
jle
js
xor
inc
cmp
xchg
scas
jbe
dec
or
fiadds
and
ss
push
sbb
dec
mov
bound
xor
mov
incb
add
inc
ffree
inc
cs
lret
jb
push
cmpsl
xchg
loop
push
cmpsb
xchg
ja
cli
jo
xor
outsb
sbbl
mov
mov
xor
js
mov
arpl
sub
arpl
fs
lock
inc
iret
syscall
or
fidivrl
push
push
mov
into
sti
pop
js
inc
bound
fidivrs
clc
pop
imul
pop
pop
mov
push
es
lock
outsb
pop
push
push
xor
dec
js
ret
divl
das
inc
pop
dec
es
das
push
fisubs
add
and
or
out
sti
pop
push
sysexit
mov
cs
dec
gs
sahf
push
outsl
push
push
cli
push
push
insl
sub
out
mov
insl
mov
inc
ja,pn
xor
mov
fimull
jp
pushl
push
fiaddl
jg
mov
das
xor
das
xor
outsl
pop
outsl
dec
xor
js
push
into
xor
adc
test
outsl
imul
or
sbb
jg
inc
and
pop
add
lods
imul
mov
arpl
ja
add
aam
ljmp
lock
fmull
lret
fmuls
stos
out
inc
jnp
pushf
ds
sub
and
push
lock
aas
add
xor
dec
jno
mov
mov
sbb
ja
jmp
xor
xchg
out
adc
add
sub
mov
imul
test
adc
je
shrl
mov
and
and
fs
das
or
pop
addl
mov
iret
sbb
das
arpl
cmp
sbb
out
scas
xor
or
xchg
xchg
add
pop
mov
pop
dec
mov
add
sub
cmp
mov
loopne
or
jmp
xor
mov
cmp
mov
lahf
sbb
inc
imul
mov
stos
fsubrs
shl
mov
sbb
or
xlat
daa
rorb
add
sub
sti
mov
push
dec
inc
ds
outsl
popa
fs
outsl
aaa
mov
push
mov
or
adc
add
sbb
call
lods
or
in
cmpsl
addr16
push
xor
iret
lods
sub
mov
push
pop
stos
std
jl
js
mov
add
fildll
sub
scas
addr16
in
fimuls
sbb
jecxz
arpl
pop
lods
je
inc
jb
in
cwtl
xchg
scas
repz
pop
pop
pop
push
outsl
xchg
push
bound
xchg
pop
and
sbb
clc
mov
js
repz
push
jle
insb
add
xchg
out
cmp
add
jbe
add
pop
cmp
std
outsb
push
pop
cmp
jne
jo
arpl
push
cli
ss
pop
pop
ja
xor
xor
push
and
push
movhps
popl
sbb
aam
aam
mov
xlat
adc
xor
cmp
movb
outsb
mov
or
lahf
mov
and
lea
add
rcrb
stos
sub
test
cs
outsl
fs
lock
lahf
mov
lahf
xlat
jmp
js
imul
ret
pop
push
arpl
addl
add
jecxz
pop
addl
addr16
cwtl
push
dec
movsl
pop
sti
lods
ljmp
push
insl
push
mov
and
push
inc
fwait
iret
dec
cmp
adc
jo
loope
lahf
popa
fldt
and
xor
mov
repz
xchg
test
inc
pop
mov
and
sub
xor
incl
xchg
outsb
jecxz
pop
dec
dec
lock
ret
cmp
mov
aaa
iret
fildll
adc
es
outsb
dec
arpl
cmp
jae
daa
xor
sub
jbe
stos
arpl
outsl
cmp
imul
das
repz
outsl
pop
xchg
or
aaa
sub
cmp
mov
mov
jmp
jb
push
ds
adcb
adc
jle
add
mov
xchg
jle
add
das
add
data16
sbb
sub
testb
lock
aam
addr16
sub
or
call
or
lock
icebp
push
and
push
cld
outsl
clc
mov
imul
inc
pop
push
sbb
mov
iret
add
out
testl
out
cltd
or
xchg
int
mov
or
pop
or
or
adc
adc
sbb
and
in
sub
xor
inc
mov
mov
testl
push
popa
xchg
add
mov
shrb
ret
sub
shrb
int
or
adc
fneni(8087
repz
add
xchg
rclb
fldcw
lret
str
lcall
stc
das
incl
sub
xchg
insb
call
outsl
xchg
push
sub
fwait
cwtl
lods
add
daa
nopl
and
mov
mov
addr16
jg
mov
mov
add
adc
xchg
mov
mov
lods
pop
dec
movsl
enter
pushl
push
push
mov
inc
push
insl
ss
adc
cli
mov
sub
pop
in
iret
mov
sbb
mov
sbb
mov
insb
incl
ds
pop
sbb
xor
mov
pop
sbb
decl
mov
sbb
js
lods
mov
pop
dec
xchg
jecxz
dec
push
mov
and
pop
adc
nop
push
and
cmp
pop
dec
mov
daa
jb
xor
and
push
dec
cmp
add
pop
add
mov
jg
lods
bound
push
insl
or
mov
push
dec
iret
mov
dec
sub
pop
or
dec
dec
lcall
mov
xchg
fsubrl
leave
jae
fcoml
mov
cmp
iret
pushf
inc
mov
pushf
cmp
insb
dec
pop
inc
add
pusha
shrb
add
cmp
xor
add
push
mov
popf
js
adc
jo
pusha
mov
fwait
insb
and
cmpsl
icebp
movsl
inc
push
mov
nop
sbb
ret
mov
jnp
pop
sbb
lret
ss
cmp
sub
pop
xor
inc
adc
inc
push
push
cmp
inc
icebp
push
xlat
or
cmpsb
jp
int3
mov
bound
cmp
cs
and
imul
xor
and
dec
xchg
jg
je
push
subl
outsl
jne
bswap
or
cmp
popa
outsb
imul
pop
inc
add
and
adcl
mov
mov
aaa
insl
mov
call
mov
sub
inc
pusha
xchg
pop
jg
inc
pusha
sub
pop
push
jnp
fisubrl
add
push
push
scas
add
mov
je
daa
mov
jnp
pop
setbe
add
inc
loope
xchg
outsb
das
addr16
pop
mov
inc
pop
pop
pop
rorb
mov
hlt
mov
push
cmpsl
aas
dec
and
sbb
dec
idiv
push
add
sub
push
xchg
test
out
shlb
inc
and
out
adc
dec
sub
fbld
jbe
mov
fwait
xor
adcl
push
sarl
bound
je
add
jbe
outsl
ljmp
loop
rorl
outsl
add
add
dec
movsb
imul
dec
add
push
insl
cmpsl
dec
cli
mov
pop
sub
mov
out
xor
sti
xchg
mov
dec
jge
out
negl
push
xor
outsl
and
rcll
pop
mov
mov
mov
push
xchg
stos
pop
xor
xor
mov
mov
mov
dec
xchg
xchg
pop
lcall
adc
arpl
repz
inc
lock
es
mov
addl
cs
jge
sub
push
xchg
push
or
mov
pop
inc
pop
fbld
pop
pop
cmp
scas
add
mov
enter
aaa
aam
dec
cs
insb
inc
in
add
jno
push
cs
dec
enter
pop
push
and
cmp
jns
imul
cs
aam
scas
push
sarl
lret
inc
or
roll
inc
loop
iret
shll
aas
jle
pop
stos
ficoml
pop
xchg
xor
push
push
cmc
jns
fwait
jge
push
daa
xor
fldl
outsl
notb
aaa
outsl
push
je
mov
stc
push
pop
adc
xor
ficomps
fs
jns
mov
mov
shr
pop
push
dec
pop
push
mov
test
testb
jl
push
xchg
xchg
mov
not
pop
jnp
out
xlat
or
xor
out
imul
pop
clc
call
mov
pop
mov
in
inc
out
cmpsl
sbb
pop
push
jns
scas
outsl
add
jge
cmp
sahf
ja
je
dec
mov
lahf
out
push
adc
dec
push
repz
rep
test
lahf
out
dec
mov
dec
push
push
and
cmp
sahf
out
push
xor
insb
ds
test
sbb
out
sahf
cmpsl
inc
push
mov
int
dec
es
jno
lds
stc
cmp
and
push
mov
cmp
cmc
adc
sahf
out
outsb
mov
notl
push
push
add
sbb
dec
sbb
scas
sub
aam
cs
adc
stc
add
adc
lcall
push
push
mov
xor
adc
mov
mov
mov
scas
int
mov
pop
in
bound
loop
and
push
pop
mov
sub
loopne
mov
sar
mov
pop
int3
push
and
pop
sbb
enter
stc
cmp
adc
repnz
iret
pop
in
inc
ds
or
add
and
jb
add
dec
stos
ret
aaa
movsl
inc
test
subl
out
mov
fbld
sub
testl
rolb
addl
ja
outsb
outsb
lcall
push
push
js
xor
stos
pop
inc
imul
cmp
xor
andl
jp
adc
mov
aad
lods
iret
imul
push
push
and
xorl
inc
pop
push
dec
out
xor
push
dec
inc
outsl
and
push
popa
je
or
subl
push
fistpl
cwtl
out
scas
pop
inc
mov
cmp
sub
pop
push
ficompl
cs
decl
xchg
ss
sti
es
mov
sbb
ljmp
rclb
adc
scas
pop
in
daa
adc
and
dec
not
push
mov
push
pop
addr16
jno
fcoml
and
add
outsl
xlat
cmpsl
jecxz
jmp
jo
push
jo
pop
add
inc
jg
mov
dec
xor
inc
or
xor
mov
jno
sbb
xchg
jmp
jnp
mov
cli
push
sbb
xchg
fs
lods
and
jae
inc
sbb
pop
xor
mull
sbb
sbb
loop
jg
push
dec
cwtl
pop
test
push
xor
orb
add
xchg
xchg
sti
rclb
xchg
jae
sbbl
punpcklbw
sysexit
les
push
dec
pop
and
xorl
dec
inc
dec
mov
fs
jo
xor
daa
fists
push
outsl
imul
je
mov
add
ds
add
jo
jg
pop
mov
jb
loopne
add
jecxz
mov
fwait
mov
sbbb
pop
ret
shll
test
cwtl
and
sbb
pop
pop
inc
das
movsl
or
push
add
scas
lahf
sub
movb
test
or
sbb
scas
pop
sbb
scas
out
push
pop
rorb
xchg
pop
addr16
arpl
mov
jae
fs
sbb
adc
es
adc
mov
psubq
imull
jo
cmp
mov
pop
das
cmpsl
jg
lock
push
pop
shll
add
lret
dec
and
jge
arpl
or
fidivrs
sub
pop
pop
dec
add
and
ret
pop
fisttps
jmp
cs
popw
push
aaa
imul
mov
mov
inc
in
bound
xchg
das
testl
jg
fsubs
call
xchg
das
push
xor
push
pop
sbb
mov
or
outsl
mov
lods
sub
xchg
push
fiadds
push
inc
mov
lods
scas
inc
jle
rcl
pop
imul
mov
out
inc
into
mov
and
inc
xor
adc
lahf
sbb
pushl
ret
add
dec
add
push
xor
adc
fcmovb
stos
or
shlb
add
ffreep
xchg
aas
add
add
xlat
mov
shlb
out
or
lock
cmp
push
pop
adc
xchg
jp
out
arpl
call
cmpsb
inc
inc
push
inc
pop
pop
outsb
iret
inc
sbb
cmp
dec
ficoms
pop
push
popl
pop
or
xchg
xor
pusha
or
daa
inc
push
or
call
pop
sbb
addb
mov
dec
and
pop
jo
imul
inc
and
mov
push
pop
lahf
inc
dec
jne
mov
outsl
dec
push
mov
add
cmpsl
push
ljmp
andl
adc
add
inc
outsl
loop
sub
dec
dec
mov
jns
je
inc
stos
and
push
out
xchg
fists
das
adc
and
mov
jle
add
cmp
insb
je
dec
daa
rorb
pop
addr16
jo
jmp
fisubrs
sbb
pop
jno
outsl
xor
push
les
xor
push
dec
xchg
pusha
call
sbb
jns
je
jne
or
test
das
fisttps
arpl
push
mov
ja
out
mov
push
push
mov
or
mov
dec
mov
pop
and
je
adc
les
punpckhwd
arpl
and
iret
jbe
pop
and
inc
inc
mov
popw
push
or
maskmovq
testl
out
pop
dec
test
les
sbb
testb
dec
shll
rclb
push
pop
rclb
xchg
jmp
mov
mov
into
dec
inc
push
test
push
loopne
sub
jmp
xchg
push
in
nop
sub
cmpsl
pop
pop
or
hlt
movsb
push
fwait
xchg
push
add
mov
push
movups
or
push
aam
dec
and
fidivrl
jb
iret
dec
loopne
add
mov
and
add
jge
out
inc
outsl
outsb
or
aaa
inc
insb
xchg
stos
daa
and
pop
daa
sbb
imul
loope
mov
jb
sub
out
ds
inc
imul
int
pop
incl
dec
inc
dec
push
xchg
add
dec
sbb
and
pop
imul
jge
aas
fiadds
jg
ret
shlb
mov
add
mov
into
inc
leave
sbb
add
adc
inc
lahf
lcall
scas
sets
mov
inc
aaa
jno
sti
shlb
lcall
push
cmp
adc
pop
movsb
cmpb
aad
sbb
cwtl
stos
pop
fadds
pop
adcl
test
and
jge
push
pushl
jb
mov
andb
fwait
rol
fwait
in
inc
mov
bswap
mov
ljmp
jmp
dec
fsubrl
stc
jbe
push
ds
insl
xor
jg
mov
repz
movb
aad
arpl
push
sub
adc
or
cs
insl
sub
adc
call
gs
leave
ret
sub
xchg
mov
data16
mov
lcall
call
cltd
test
push
push
shll
ja
daa
mov
mov
pushl
stos
fmuls
lret
rep
cs
outsl
arpl
test
add
mov
outsl
subb
movsb
mull
jno
jmp
or
scas
addr16
cmp
dec
movsl
jg
push
push
mov
fwait
stos
flds
pop
lahf
jo
and
dec
ret
js
jecxz
aad
pop
mov
in
or
xor
das
ds
das
sbb
push
sbb
fistps
push
and
push
pop
inc
mov
inc
push
inc
pop
and
or
aas
js
insb
cwtl
dec
mov
pop
push
or
mov
inc
add
or
pop
pop
pop
test
enter
jge
jo
shll
aas
ds
push
shl
xor
push
sbb
decl
incb
lahf
daa
inc
add
sub
loop
push
pop
fisttpl
inc
outsl
xor
in
push
lods
mov
and
or
inc
neg
adc
lahf
stos
outsb
cwtl
push
pop
mov
cmpsl
xor
inc
out
mov
imulb
push
adc
insb
pop
repz
and
sar
add
rol
ret
inc
out
scas
pop
cmpsb
dec
push
fidivs
adc
mov
xchg
lods
push
scas
pop
pusha
inc
mov
and
movsl
pop
outsl
jbe,pt
mov
mov
pop
testl
push
fiaddl
add
mov
in
leave
leave
adc
xor
inc
daa
xor
test
push
adc
jb
add
push
pop
adc
enter
inc
adc
leave
xchg
and
and
arpl
mov
push
sub
je
scas
inc
fsubrl
les
movsb
add
cmp
outsl
je
mov
popa
stos
mov
in
inc
cs
inc
fdivrl
or
sub
sub
push
loopne
jo
mov
dec
inc
jle
in
xor
and
push
push
pop
jbe
add
insl
outsl
fs
gs
jo
or
mov
mov
push
addl
mov
add
or
addr16
and
push
lea
pop
gs
inc
sub
daa
mov
div
xchg
lock
cs
imul
inc
mov
pop
sbb
insl
xor
pop
pop
jnp
push
sahf
dec
sub
pop
mov
in
jecxz
dec
adc
xchg
dec
inc
pmulhuw
sbb
inc
cmovo
idivb
cmpb
aas
nop
jo
xor
jbe
maxps
loopne
out
inc
dec
loopne
mov
push
add
adc
dec
and
lods
adc
pusha
dec
in
imul
sbb
xchg
cwtl
fcomps
pop
push
ss
in
mov
daa
ds
fucomip
jnp
or
and
daa
insl
out
sbb
inc
push
pop
das
or
lods
inc
add
mov
mov
idivb
daa
les
enter
xchg
mov
push
leave
daa
xchg
jnp
sti
data16
fs
push
mov
pop
jnp
jnp
dec
fsubl
fisttps
add
test
add
jl
fiaddl
out
inc
mov
mov
outsl
jle
mov
mov
les
scas
clc
mov
lret
or
add
lret
in
dec
inc
push
dec
add
dec
fidivrs
nop
xchg
out
cwtl
fsubl
mov
enter
sahf
mov
int3
inc
inc
add
pop
enter
dec
adc
and
mov
lret
xchg
dec
nop
out
pop
outsl
xchg
js
add
js
jns
in
movsb
lods
cs
dec
sahf
mov
xchg
out
sar
or
fdivl
daa
clc
aaa
and
int3
push
push
lods
add
das
inc
daa
mov
cltd
fsubrs
xor
aas
daa
repnz
mov
addr16
push
aam
xchg
cmp
in
push
dec
lahf
mov
xchg
mov
int
mov
out
dec
xor
inc
push
nop
enter
lods
lods
sub
ja
aam
jns
in
cmp
adc
dec
pop
xor
movsb
inc
in
push
shrb
aam
iret
test
sub
mov
mov
cmp
inc
daa
lock
mov
mov
inc
enter
test
scas
mov
push
loopne
nop
das
sbb
idivl
mov
adc
aaa
je
les
pop
push
push
sub
fiaddl
addr16
mov
iret
test
push
pop
and
mov
daa
add
mov
mov
aam
repnz
rcl
insb
pop
enter
leave
xor
in
fiadds
xchg
cld
pop
fmuls
insb
sar
jl
scas
dec
in
push
orl
pop
int3
ds
cmp
mov
cwtl
cld
ror
xlat
pushf
test
or
sbb
dec
in
nop
stos
or
cld
cmp
repnz
insb
push
enter
cmp
sar
lahf
add
pushf
lods
mov
dec
lahf
pushf
ds
repnz
xor
cld
or
nop
or
in
jnp
repnz
push
pop
lahf
pop
pop
and
pusha
ja
in
nop
out
mov
mov
fsubr
cld
cs
mov
push
dec
jl
rcrl
push
push
shrl
mov
cmp
fcoml
nop
out
mov
cmpsl
or
cmpb
daa
frstor
andb
sahf
or
clc
scas
cmpsl
cmp
pusha
sub
les
dec
push
dec
fisubs
pusha
jg
mov
jns
in
mov
mov
inc
sahf
mov
loopne
nop
add
mov
and
xor
dec
mov
testb
loopne
in
jg
nop
out
cmpsl
and
js
pusha
mov
out
fcoms
inc
sahf
or
js
int3
xor
lahf
out
lock
dec
stc
pop
enter
and
idivb
push
and
cmpsl
js
mov
inc
jg
mov
imul
test
inc
scas
jbe
lahf
je
cs
nop
aam
enter
inc
clc
adc
cltd
fdivs
and
xor
lahf
clc
lcall
int
mov
out
je
dec
sahf
or
pusha
lahf
fs
mov
nop
out
aam
jl
in
mov
add
push
aad
push
adc
sub
btr
jg
test
iret
test
push
jb
cmpsb
test
pop
loopne
iret
test
mov
enter
jge
mov
adc
add
adc
and
fsubrs
xor
iret
test
js
shll
push
jmp
cmp
insb
test
mov
in
lahf
test
mov
test
andb
sbb
movsb
inc
or
pop
in
clc
cmpsl
loopne
fiaddl
jo
aas
cmpsl
test
mov
cmpsl
sbb
mov
mov
fidivrl
push
cmpsl
nop
out
push
mov
push
mov
fistpl
loop
and
hlt
nop
dec
fldt
mov
pop
sahf
push
insl
push
aas
ja
rcrb
mov
xorl
in
or
ja
sub
jg
nop
dec
jmp
rcr
lahf
jbe
shrb
adc
mov
inc
pushf
push
or
push
push
inc
repnz
mov
jg
js
and
pop
lock
js
test
loopne
xor
enter
inc
push
push
push
movsb
inc
mov
jg
int3
test
inc
jo
outsb
addr16
lahf
int3
inc
enter
ja
lock
xchg
clc
pop
in
fstl
out
pop
adc
sbb
mov
fidivrs
ficomps
adc
mov
ficomps
pushf
fdivrp
fadds
cmpsl
mov
cmp
lahf
pop
jb
jo
inc
int3
cwtl
mov
ds
sub
inc
fbstp
cwtl
inc
jg
shrb
int3
rcr
mov
rcl
int3
inc
ja
and
rcl
outsb
xor
in
iret
push
inc
int
pop
pop
jg
xor
loopne
movsl
ss
lahf
dec
iret
add
stos
inc
ja
pusha
fs
fwait
nop
loopne
push
mov
fadds
fiaddl
mov
mov
enter
and
add
mov
in
loope
push
sub
iret
pop
pop
adc
inc
jg
aad
mov
in
pop
daa
insb
lahf
xorl
inc
lock
lods
mov
aaa
mov
incl
fsubs
push
orl
inc
pop
repnz
ja
fs
pusha
pop
enter
fs
pop
enter
mov
repnz
lock
pop
and
mov
jecxz
lock
nop
iret
test
inc
jecxz
mov
cs
in
mov
adc
nop
mov
mov
lahf
nop
mov
loopne
pop
jb
dec
lods
in
inc
loopne
mov
pop
je
in
inc
push
mov
bound
sti
outsl
aas
js
cwtl
add
cltd
nop
push
push
add
enter
xorl
sahf
sbb
in
push
xchg
inc
lds
int3
shrb
cltd
nop
iret
clc
inc
in
pusha
lods
sub
outsl
adc
aad
loopne
mov
addr16
cmp
in
jmp
lock
ss
test
out
pop
sub
lock
call
aaa
and
pop
daa
adc
data16
pop
out
cltd
or
mov
daa
pushf
fcoml
daa
xor
ljmp
mov
scas
xlat
pop
push
sbb
mov
push
or
push
sub
cmp
aas
call
les
pushl
ja
lods
pop
adc
ja
lods
outsl
iret
mov
mov
add
dec
aam
repnz
in
sub
fiadds
out
dec
cmp
push
jae
fwait
dec
push
push
daa
aas
movl
addr16
or
add
pop
out
repz
mov
ja
daa
sbb
dec
scas
fs
dec
inc
in
scas
in
cmp
in
scas
xor
dec
scas
in
and
jne
mov
pop
mov
push
cmp
mov
dec
push
xor
cmpsl
fnstcw
mov
enter
imul
inc
push
and
lock
cmp
mov
mov
clc
out
push
dec
xor
ds
cmpsl
stc
cmp
push
push
dec
repz
mov
jmp
cmp
add
jmp
fisubs
jg
add
inc
in
xchg
pushf
js
stc
and
dec
inc
cld
inc
mov
inc
int
imul
out
cmp
aam
mov
dec
nop
mov
add
cmp
clc
push
inc
out
cld
inc
sub
sbb
ja
mov
sbb
in
ja
dec
xchg
jg
xchg
fmul
xchg
or
inc
dec
outsl
jns
xchg
mov
fdivrl
push
rolb
sbb
in
dec
outsl
add
inc
pushf
inc
pop
test
inc
in
lcall
xchg
mulb
outsl
add
cmp
cmp
dec
enter
cmp
or
shll
add
outsl
xchg
pop
add
xor
data16
sbb
fbstp
push
repnz
mov
out
leave
add
movsb
out
sub
sub
add
dec
xchg
leave
xchg
or
xor
and
xor
out
out
push
xor
out
outsl
add
jnp
ret
fildll
loop
sub
mov
js
aaa
scas
in
dec
js
cwtl
add
pop
scas
in
mov
clc
cmp
dec
add
push
sbb
lock
mov
rol
jg
insl
mov
mov
xchg
and
add
and
sub
fwait
nop
pop
in
lock
fimuls
icebp
popa
sub
xchg
outsl
add
or
and
or
fdivrp
and
or
sbb
jbe
cwtl
lods
fmuls
pop
scas
add
les
add
shl
dec
fisubs
dec
out
add
xlat
mov
in
push
aaa
push
repnz
sbb
out
add
outsl
test
decl
insl
outsl
xchg
push
pushf
daa
addr16
add
jbe
aaa
jmp
call
loopne
pop
cmpsl
mov
or
xchg
push
cwtl
cmpsb
shlb
ret
aam
jg
push
pusha
repz
loopne
cmp
and
xor
sbb
in
shll
repz
pop
sub
fs
jecxz
add
aam
xchg
js
xchg
pop
sub
add
notl
jbe
lock
outsl
push
push
outsl
ljmp
ljmp
testl
push
xor
scas
push
movsb
clc
push
imul
push
cmp
push
out
xchg
clc
loope
xchg
lds
pop
pop
mov
and
cwtl
dec
cwtl
loope
or
inc
nop
and
sbb
push
xlat
or
push
decl
ljmp
add
xlat
or
lcall
clc
mov
cmc
dec
inc
testl
pop
mov
lds
fdiv
pop
in
cmc
mov
testl
and
add
jns
push
shl
mov
jl
loopne
nop
imulb
mov
dec
xchg
and
divb
rcll
push
aaa
sbb
xchg
mov
outsl
add
cmp
icebp
js
cmpsl
pusha
mull
mov
scas
mov
lods
dec
movsb
xchg
mov
mov
daa
in
mov
aad
lods
loop
and
xor
add
pop
enter
insb
aaa
pusha
and
cs
dec
and
clc
fdivr
pop
inc
push
faddl
mov
pop
lods
in
aaa
push
jl
stos
pop
in
sub
pop
loope
stc
cmp
stc
ss
push
adc
xor
add
jns
and
xchg
push
aam
mov
add
lods
fs
int3
xlat
add
loopne
sahf
iret
xchg
fldcw
pop
cli
daa
or
add
faddp
fwait
adc
push
in
cwtl
push
xchg
jns
out
add
call
inc
js
out
in
outsl
mov
or
jnp
jo
aas
add
and
or
add
jg
scas
das
adc
lcall
inc
sti
das
dec
sub
xchg
outsl
add
mov
xchg
movsb
and
or
add
and
js
add
enter
call
dec
xchg
fsubs
rorl
lods
add
pop
lcall
addr16
loopne
mov
nop
or
out
dec
scas
in
mov
or
cmp
std
mov
je
jl
aas
lret
sbb
addr16
sahf
mov
movsb
in
es
fs
aam
addr16
hlt
std
aad
lods
lret
push
dec
imull
xor
mov
mov
inc
xchg
inc
cmp
test
jmp
push
nop
bound
add
aaa
jo
in
nop
out
rcl
or
fdivs
and
push
xor
lahf
fiaddl
cltd
fdivl
and
clc
out
push
jl
shll
les
clc
ja
sbb
push
or
call
adc
aas
ss
sti
pop
shrb
add
dec
shll
cmpsl
fldcw
push
xchg
stos
cmp
repz
adc
lcall
inc
jo
jl
out
mov
add
iret
push
mov
out
sahf
cmp
mov
cmp
repz
xorb
stc
lea
and
jbe
es
loope
nop
dec
repz
cmp
jmp
sahf
out
cmp
mov
cmp
out
mov
or
iret
rep
xchg
shl
xchg
out
sahf
cmpsl
outsb
xchg
mov
out
iret
repz
or
push
int
jns
xchg
and
add
cmp
mov
add
jns
shl
sbb
repz
push
popf
rcrb
push
jns
sbb
pushf
jl
ja
ficomps
sahf
jns
iret
roll
or
fucom
repnz
sub
dec
xorl
push
stos
add
cmp
mov
sbb
iret
repz
push
lea
jns
cmpsl
jp,pt
mov
stc
es
test
lahf
sbb
lcall
push
stos
cmpsl
stc
cmp
jbe
cli
xor
mov
lahf
lods
adc
sahf
mov
ds
jnp
sbb
jns
mov
mov
iret
repz
mov
mov
xchg
and
iret
sarl
ja
adc
jns
xchg
jmp
mov
jns
iret
repz
cmpsb
stc
cmp
out
pusha
mov
sarl
dec
mov
repz
out
mov
fcompl
mov
cmp
jge
sar
xchg
mov
shl
cmp
cmp
ret
jns
je
cli
xor
cmpsl
stc
cmp
add
push
cmpsl
out
out
jl
lds
sahf
data16
popa
push
enter
out
sarl
mov
mov
fnstsw
lret
fiadds
mov
enter
jl
int
xchg
mov
ja
cmpsl
stc
push
iret
fwait
out
sarb
sahf
mov
xor
pop
push
lods
xlat
repz
out
sub
sahf
cmpsl
stc
out
jno
ds
or
andl
add
dec
cmp
out
mov
sbb
mov
stc
pop
fdivs
cwtl
cmp
sahf
ja
lods
inc
fidivl
fstpt
iret
shrl
add
jp,pt
cmp
out
cmp
imul
fisubrs
dec
mov
fildll
imulb
test
xchg
repz
iret
mov
out
mov
ds
hlt
push
push
div
clc
jge
int
jle
loope
movsl
std
int
jns
lods
mov
add
or
add
lahf
int3
lsl
rcr
js
inc
incb
aas
aam
mov
ficoml
inc
cmp
shlb
or
scas
sbb
xor
adcl
jl
add
pop
aaa
jge
inc
nop
int
mov
or
outsb
adc
or
fs
dec
mov
aas
pop
xchg
rcrb
das
std
cmpsb
fcomp
test
ss
aas
das
stos
xor
daa
cmp
jg
xchg
mov
jmp
and
pop
movb
cmp
into
and
loop
jbe
xlat
pop
mov
add
pop
jb
out
aas
int3
addl
mov
je
dec
out
push
clc
mov
inc
outsl
aas
sbb
ds
dec
pop
adc
dec
adc
mov
aas
in
shl
xor
data16
fimull
dec
aas
in
fimull
enter
popf
push
inc
bound
aad
pop
or
push
pop
mov
jbe
out
mov
fadds
push
aam
ret
cmpsl
in
das
dec
or
or
mov
adc
adc
into
shlb
ja
push
pop
sub
shlb
cmp
inc
js
test
xchg
or
sbbl
mov
push
jp
ffreep
lret
push
inc
jbe
mov
cmp
fwait
sarb
hlt
jne
or
jo
leave
sbbl
pop
pusha
outsb
xchg
pop
jb
cltd
fadds
or
into
inc
ja
push
jg
dec
xchg
push
scas
hlt
add
add
inc
pop
cmp
dec
repnz
push
daa
inc
scas
mov
xchg
into
push
dec
fnstenv
add
iret
push
incl
mov
addr16
mov
mov
scas
popf
pop
mov
ja
outsb
fbld
xchg
push
pop
pop
push
cs
dec
cs
fstpl
pushf
xchg
or
pop
int
fadds
mov
cmp
adc
and
mov
movsb
mov
imul
push
xchg
push
insb
push
out
mov
leave
sub
push
int
cmp
sarl
pusha
dec
and
add
pop
repnz
mov
inc
xor
mov
push
daa
inc
xchg
and
sbb
mov
das
mov
ss
jo
mov
bound
stos
loopne
fisttps
outsl
test
faddl
scas
push
scas
jns
adc
xor
add
in
add
sbb
pop
xchg
rorb
outsl
sbb
fsubl
adc
aam
push
lea
mov
inc
scas
aam
xchg
test
adc
and
push
cmp
pop
jb
fs
jae
pop
nop
mov
xchg
pop
mov
loop
iret
das
push
add
pop
fisubl
push
fidivrs
dec
push
cmpsl
and
add
adc
daa
xor
sbb
push
mov
addr16
fisubl
dec
push
daa
push
mov
outsb
pop
outsl
mov
pushf
pushf
pop
add
pop
and
mov
xor
add
repz
aaa
dec
cmpsl
cmpsb
je
subps
adcl
lea
test
mov
push
jo
lea
insl
pop
ja
mov
push
movl
test
imul
pushf
mov
add
push
jg
push
pusha
pushf
pushf
pop
and
repz
xchg
and
add
fldl
leave
sbb
in
fisttpl
inc
mov
pop
cmpsl
adc
popw
outsb
mov
or
pop
xchg
add
leave
add
push
add
rolb
fcmovnb
out
lahf
out
sahf
or
or
or
in
repz
adc
and
push
push
leave
in
pop
push
push
daa
pop
pop
movq
mov
mov
call
es
xchg
mov
add
popf
cmp
lret
add
add
xchg
pushf
dec
or
push
push
push
imul
xchg
xchg
jo
outsl
rclb
cmpsl
lock
dec
leave
orl
dec
sub
dec
pop
mov
jb
das
jge
mov
and
nop
stos
nop
mov
fnsave
jb
ret
nop
rclb
mov
out
xchg
icebp
ss
or
sbb
sbb
cmp
aas
add
cmpsl
sub
push
sbb
in
mov
daa
pusha
pushl
lock
sbb
test
push
pop
aam
in
and
pop
add
into
sbb
xchg
out
xchg
and
icebp
xchg
cld
xchg
or
sbb
fcmovnb
push
fmuls
es
xor
add
loop
filds
fists
cwtl
dec
sbbl
xlat
dec
push
aas
test
dec
ss
xchg
loopne
ja
mov
jp
orl
iret
add
cmpsb
scas
or
xchg
dec
inc
shlb
and
mov
xor
mov
sbb
in
sbb
xor
xor
push
daa
cld
fisttps
leave
add
nop
inc
inc
sbb
or
enter
sbb
xchg
mov
push
mov
popf
mov
mov
test
sbb
xchg
mov
pushf
out
cmp
sbb
push
daa
inc
out
inc
push
adc
add
scas
mov
push
jg
xchg
pop
in
xchg
pushf
js
dec
xchg
push
in
in
in
xchg
les
push
jno
aas
pop
cmpsl
sbb
or
daa
sub
inc
cmpxchg
xlat
sbb
add
out
in
mov
mov
mov
scas
mov
jb
cld
in
scas
or
jb
dec
test
xchg
inc
inc
dec
inc
push
fs
inc
pop
insl
fdivr
ucomiss
push
addr16
cmp
push
add
mov
xchg
xlat
xchg
out
sahf
adc
ja
pop
jb
mov
loop
orb
push
repnz
xchg
enter
jp
add
in
xor
add
push
jb
xor
pop
inc
daa
nop
mov
or
cmp
xlat
adc
push
jo
xor
es
xchg
add
push
iret
push
add
jns
add
add
out
filds
in
sti
repnz
inc
or
rorl
and
xchg
lcall
and
je
xchg
add
test
xlat
roll
je
xchg
and
pop
int3
fucomp
add
cmc
ja
clc
out
cs
movsl
xchg
cwtl
and
popf
popa
jg
pop
paddsw
jns
pushl
xchg
jle
add
addr16
daa
push
out
sahf
pop
and
and
and
movsb
cmp
leave
inc
pop
addr16
mov
mov
mov
xchg
pop
and
mov
dec
dec
mov
push
push
lcall
pop
scas
add
xchg
pushf
test
push
mov
add
pop
fistpl
out
ja
xchg
pop
adc
push
aaa
inc
fbld
pushf
out
es
and
and
mov
fisttps
push
push
adc
xchg
mov
pop
add
inc
scas
adc
xlat
push
pop
mov
cvttps2pi
mov
frstor
adc
daa
cmp
mov
adc
es
adc
enter
popf
aaa
push
iret
jmp
es
leave
xchg
das
vmwrite
fsubl
cld
es
sbb
and
incl
push
daa
push
xlat
xchg
mov
daa
daa
adc
pushf
cmp
cmp
push
add
jmp
add
sahf
stc
int3
icebp
xchg
setle
imul
enter
jg
adc
xchg
jno
pop
sub
jbe
enter
sub
push
jl
mov
imul
push
daa
out
mov
pop
mov
cmpsl
cltd
push
scas
lock
mov
movsb
push
lahf
scas
sahf
mov
repnz
leave
aam
sub
push
sub
lods
sbb
xor
mov
inc
movl
nop
sub
out
mov
fistpll
insl
or
sahf
lahf
pop
fdivs
daa
add
rol
pminsw
leave
dec
fdivl
into
sbb
or
mov
repnz
inc
push
add
cmp
jbe
das
jo
add
cmp
mov
mov
mov
pop
jb
jb
in
and
mov
pushf
dec
sbb
mov
sub
inc
push
xchg
push
push
jae
mov
scas
das
lcall
mov
ljmp
cmpsl
push
dec
sub
cmp
mov
or
push
pop
dec
ja
je
jbe
xchg
sbbb
mov
out
call
mov
fiadds
fsubrp
sbb
jmp
push
inc
cmovnp
leave
jae
push
ja
fs
int
cmp
lea
aas
pop
popf
xchg
movsl
adc
frstors
cmp
iret
repz
sti
jo
mov
pop
movsb
pop
or
repnz
pop
pop
hlt
ss
iret
rcrl
push
iret
jae
cmp
insl
js
and
outsb
daa
mov
cltd
or
scas
das
mov
xchg
out
rorb
adc
loope
jns
cld
adc
pop
movsl
mov
push
cmp
outsb
pusha
stos
mov
movsl
ljmp
inc
imul
dec
das
push
daa
mov
inc
lcall
pop
stos
test
mov
scas
testb
pop
and
fwait
loope
cmpsb
fisttps
push
add
out
mov
lahf
cmpsb
decl
fs
pop
leave
shrb
cmpsb
xor
cmpsb
ja
orb
outsb
ja
cmpsb
pop
xor
iret
xchg
fcoms
xchg
pop
jb
sti
in
jne
dec
js
cmpsl
pop
push
daa
movsl
dec
repnz
add
cmpsl
sbb
mov
pop
xchg
xchg
push
ljmp
mov
test
das
add
and
xchg
xor
mov
fsubrl
mov
jmp
and
les
xor
xor
fmuls
loopne
and
lock
cmp
ret
mov
test
sbb
daa
iret
sbb
push
add
cmp
iret
cmovg
movsb
in
and
fbstp
adc
cltd
push
cmp
jg
in
cmpsl
jp
in
pop
cmc
test
std
test
pushf
in
xchg
test
xorb
lret
addl
test
pop
sub
mov
divps
xchg
push
add
mov
mov
push
lret
or
dec
push
pop
xor
test
js
incb
stos
je
in
sub
out
mov
xchg
push
leave
jnp
rorb
pop
push
push
jle
pop
and
or
cmpsl
scas
adc
xor
cmp
in
out
cmp
das
decb
sbb
add
sub
mov
push
lods
pop
insl
pusha
xlat
outsb
stos
pushl
out
stos
lcall
cmpsl
stos
iret
ficoml
loop
ljmp
test
jbe
lods
xchg
in
dec
lcall
xchg
xchg
xchg
or
dec
push
insb
pop
in
xchg
pop
mov
adcl
iret
movsb
shrd
js
iret
mov
mov
fcmovne
add
out
pop
enter
imull
iret
jae
fimuls
push
push
push
pop
pop
or
jae
cmp
das
or
aas
iret
repz
or
or
repnz
pop
adc
push
mov
ja
jg
unpckhps
xchg
xchg
lods
xlat
lock
sbb
push
add
mov
push
pushf
cmp
inc
scas
das
fsubl
adc
dec
push
dec
cmp
scas
ficoml
cmpsl
push
mov
cmpsb
scas
scas
call
sbb
add
xchg
cmp
scas
pop
pop
insb
mov
scas
das
dec
ja
fiaddl
scas
mov
lock
mov
out
add
cmp
jmp
mov
dec
in
in
or
into
or
mov
fimuls
imulb
out
push
test
fimuls
dec
out
add
outsl
jp
pop
aam
js
pop
jbe
aas
ret
jnp
and
inc
mov
pop
dec
or
outsl
rorb
adc
adc
ja
and
cmp
push
cmp
nop
jl
mov
inc
adc
bound
cmp
mov
mov
push
outsl
dec
push
add
cmp
into
push
out
sub
add
out
in
mov
pop
xchg
or
shrl
lea
call
or
cmp
mov
sbb
cmp
loope
ja
notl
incb
mov
mov
adc
decl
push
cmp
inc
mov
rolb
dec
mov
iret
xlat
popf
jnp
out
jp
cmpsl
push
xchg
push
out
fnsave
cmpsb
push
mov
dec
in
jno
or
out
mov
cs
xchg
int
sarb
mov
repz
repz
add
add
add
repz
dec
add
add
repz
pop
mov
xchg
hlt
cmp
repz
insb
or
mov
daa
mov
sbb
daa
std
mov
add
add
repnz
add
or
add
and
sbb
sub
in
dec
cmp
enter
mov
sbb
pushl
mov
lahf
jg
into
mov
mov
cld
incl
in
xor
mov
cltd
aas
in
pop
in
jbe
jb
fst
int
cmpsl
add
xchg
out
jo
mov
roll
sbb
mov
pop
jb
jb
inc
cmp
leave
in
in
iret
ja
ja
incb
xchg
add
leave
inc
mov
xchg
xchg
mov
in
lods
inc
out
and
cmp
adc
lods
mov
pop
ss
ds
inc
shll
punpcklwd
insb
mov
xor
lahf
jbe
cmp
cmpsl
scas
mov
ret
out
fisttpll
add
pop
cmp
enter
testb
or
mov
scas
push
mov
or
or
stc
or
add
cs
and
gs
in
adc
insl
inc
mov
pop
scas
cs
pop
or
scas
insb
dec
dec
dec
rorl
pop
push
mov
movsb
inc
fsubrl
cwtl
pushf
je
out
ja
outsb
inc
leave
or
inc
mov
out
fmull
iret
out
xlat
pop
fbstp
xchg
pop
out
maskmovq
or
setb
sbb
mov
lret
and
inc
cmp
rorl
mov
mov
pop
aas
pop
and
in
push
push
test
pop
mov
pushf
nop
lcall
dec
cs
call
cmp
adc
sbb
das
and
dec
je
je
pop
xchg
push
addr16
decl
jns
mov
lea
sarl
daa
adc
in
hlt
mov
jne
mov
dec
sahf
flds
xlat
inc
mov
push
dec
mov
jo
pop
jb
in
xchg
out
pop
aaa
rorl
add
mov
mov
fsqrt
cmpsl
push
adc
pop
in
xor
xchg
enter
mov
push
add
das
mov
popl
leave
in
in
xchg
fimuls
add
out
cmpsl
cld
js
bnd
mov
das
mov
xlat
push
inc
inc
mov
xchg
ja
mov
mov
mov
dec
mov
mov
mov
fstpt
add
fsubl
iret
repz
out
repnz
leave
xor
jns
or
mov
cmp
push
push
movaps
cmp
sahf
pxor
inc
scas
mov
pop
push
add
leave
leave
shrl
jg
imul
xchg
setg
jns
mov
in
outsb
mov
xlat
jecxz
jmp
xrelease
lock
aas
adc
xchg
sbb
fmulp
aaa
mov
pop
mov
cmp
add
jbe
jle
sahf
out
jbe
lcall
sahf
movsb
mov
addl
mov
pop
sub
or
xchg
xchg
xchg
mov
dec
lcall
push
jae
mov
xchg
setle
test
scas
movswl
dec
xlat
push
pop
in
dec
das
xchg
out
cli
dec
or
in
and
dec
push
pusha
sub
mov
fucomi
js
out
orb
push
add
outsb
push
dec
cwtl
xlat
or
dec
scas
loopne
mov
adc
xchg
in
pop
push
aas
push
mov
shlb
iret
mov
push
add
adc
and
sbb
das
cmp
mov
test
lahf
jo
scas
shlb
sub
push
ror
fcmove
repz
add
adc
ds
cli
add
pop
mov
shl
xor
xchg
dec
dec
pop
iret
pusha
shll
and
pop
mov
sar
iret
leave
in
in
mov
popf
pushf
pop
and
fisubrs
cmp
xchg
mov
adc
sbb
mov
xchg
sub
inc
xchg
leave
leave
in
in
push
subps
lock
dec
das
pusha
xchg
setg
iret
cmpsl
out
cmp
push
mov
or
ljmp
add
enter
ret
daa
ret
ret
xchg
mov
ret
js
push
xchg
imul
pop
punpcklbw
mov
mov
fwait
add
out
in
mov
xlat
mov
icebp
daa
stc
fbstp
jp
test
sbb
pop
add
fwait
les
fucom
jns
push
xchg
add
clts
aaa
leave
xchg
push
sahf
inc
les
fidivrs
sbb
mov
les
dec
cmpsb
mov
push
ret
fsubrl
aas
int3
paddq
xchg
inc
and
inc
lds
jb
movups
and
leave
xor
lds
adc
addr16
cmpsl
mov
xchg
xchg
xchg
mov
leave
mov
ds
lds
dec
fadds
xchg
jecxz
enter
push
add
add
dec
jb
shufps
push
shr
xchg
test
push
add
push
jmp
loopne
imul
push
cld
dec
mov
aas
pushf
repnz
jo
shrd
call
iret
mov
loope
xchg
dec
adc
scas
inc
push
das
pop
pop
iret
leave
sub
and
sahf
cmp
inc
pop
dec
outsl
push
bound
pop
push
jae
outsb
stos
dec
jl
xchg
iret
mov
dec
popf
pop
popf
fildll
jb
mov
jmp
in
aam
fcomip
ljmp
sub
out
or
xchg
insb
pop
dec
pop
psubb
pop
das
cs
mov
insb
jmp
and
add
cmovp
ss
add
enter
jb
pushf
movsb
setnp
cs
lods
enter
es
je,pt
push
cs
enter
fcmovne
repz
or
in
in
mov
stc
add
jle
leave
mov
adc
push
dec
leave
fidivrs
nop
mov
push
add
xorl
leave
iret
xlat
or
inc
mov
jo
idivl
fadds
push
inc
movhlps
lret
cmp
pop
rolb
fiaddl
fwait
mov
push
ljmp
out
push
iret
cli
push
or
das
or
pop
leave
out
decl
push
inc
shll
pop
sahf
pop
jmp
add
add
sub
cltd
lret
pop
add
mov
addr16
addr16
or
clc
pop
add
or
outsb
jae
outsb
adc
pop
cmovg
xchg
add
and
xor
mov
insl
push
jmp
push
lret
pop
mov
lret
xchg
addr16
pop
pushf
pushf
xchg
setg
cmpsl
cmp
mov
mov
cmp
sub
mov
mov
push
sbb
add
jns
out
and
jns
out
push
or
pop
or
or
inc
repnz
mov
pop
pushf
cmp
xadd
push
sbb
pop
jecxz
fsubrl
mov
psubq
int
cwtl
mov
add
repnz
adc
sbb
pop
xchg
sbb
int
dec
jne
outsb
dec
push
scas
int
in
bswap
add
pop
and
xor
int3
pop
add
movsb
pop
pop
rolb
test
or
xchg
aaa
cmp
mov
int3
mov
cmp
cmpsb
lcall
int
int
push
sbb
into
sahf
fldt
xor
add
sahf
out
push
add
cmp
cmp
or
cmp
or
repz
or
iret
cmp
repz
ficoml
in
stc
cmp
repz
adc
iret
iret
repz
cmpsl
adc
pop
daa
cmp
repz
xor
cmp
repnz
prefetcht1
xchg
xchg
xchg
xchg
push
adc
xchg
xchg
adc
adc
sbb
xchg
xchg
push
or
add
add
iret
faddp
and
out
iret
das
mov
add
sbb
inc
aas
push
xchg
pop
fisubrs
or
pushf
pop
and
mov
lods
idivb
mov
adc
fidivs
mov
daa
scas
xchg
es
mov
pop
daa
or
inc
cmpsl
frstor
push
dec
and
xchg
jl
sar
shlb
jp
mov
push
pop
shl
in
movsl
jmp
jl
inc
mov
das
out
in
cmpsl
pop
ror
sahf
out
add
iret
add
mov
or
pop
inc
daa
xchg
pop
adc
ljmp
pushf
pop
mov
addr16
push
pushf
pop
and
rclb
hlt
xlat
daa
xchg
xchg
fmul
iret
sub
shr
rclb
lcall
stc
sbbb
rcl
jmp
and
pushf
cmp
pop
xchg
add
add
les
cmpsl
mov
adc
call
out
into
pop
rclb
xchg
out
fmulp
add
or
add
add
repz
add
rep
daa
xor
push
or
sahf
out
cmp
push
push
or
or
popa
push
imul
cwtl
adc
in
add
shr
xchg
inc
popa
cmp
fstp
call
repz
shl
out
sub
pop
cmp
inc
das
enter
popa
addb
or
or
lahf
xor
xlat
mov
dec
inc
aam
push
add
pop
aam
pop
inc
cmp
out
push
fildll
jno
jle
and
adc
pop
jmp
es
bound
mov
iret
xlat
pandn
mov
or
sbb
cmpsl
mov
push
mov
daa
adc
ja
imul
ja
jg
aad
mov
mov
push
add
mov
xchg
cwtl
js
sub
bound
mov
pop
rcrl
xlat
cmova
incl
push
jg
popa
mov
cmpsb
out
mov
les
push
sbbl
pop
push
loop
pop
adc
jmp
gs
inc
xor
mulw
sbb
outsb
aas
xlat
inc
fimuls
jmp
or
sbb
xlat
je
popf
fldt
inc
repnz
icebp
notl
pop
xlat
iret
popa
xlat
lods
fwait
cmp
push
push
jno
add
cmp
iret
leave
add
jns
or
pusha
mov
xchg
push
btc
xchg
cltd
adc
mov
jae
pop
push
int3
fisubrl
mov
xchg
notl
lods
fisttpl
addr16
and
leave
xchg
fsubrs
fsubr
in
loope
dec
data16
xchg
cmp
addr16
mov
pxor
push
xchg
push
add
sahf
outsb
repnz
push
in
and
dec
idiv
or
adc
repnz
sbb
sub
shrb
addr16
dec
push
add
cs
mov
dec
push
mov
fwait
pop
movsl
ss
jl
xchg
dec
push
jae
shrl
in
enter
fnsave
ud0
invd
or
mov
or
and
cmp
mov
fidivrl
seto
inc
push
rolb
fisubrl
mov
cs
pminub
add
sub
ljmp
mov
addb
add
mov
ficompl
or
call
ja
inc
pop
sbb
shll
lock
in
cvtdq2ps
add
out
or
or
xlat
enterw
push
es
dec
jb
adc
pop
fildl
insb
add
movsl
mov
fmull
push
popa
cmpsl
fistps
test
popf
mov
loopne
pop
pop
adc
pop
mov
psubd
leave
inc
js
and
and
popa
pop
jns
pop
leave
mov
pop
mov
lods
xchg
imul
and
pop
dec
outsb
loopne
lock
inc
and
clc
pop
or
in
in
pop
push
add
add
out
add
or
out
and
or
cs
sub
push
fstl
cs
insb
cmp
sub
les
ja
daa
daa
pop
add
into
insl
pop
movq
cmp
clts
mov
iret
leave
iret
xlat
or
repnz
pop
or
insl
add
into
leave
add
pop
bound
pop
jae
jns
cmp
xchg
mov
popf
pop
dec
pop
lods
mov
mov
dec
andnps
or
das
outsb
repnz
push
pop
gs
repz
repz
adc
jge
dec
dec
mov
push
daa
daa
daa
mov
pop
vpmullw
mov
in
sbb
repz
cmc
pop
std
mov
testl
mov
and
cmp
repz
cmp
iret
repz
push
sub
pop
cs
insl
fnstcw
jne
jge
das
xor
insl
andl
mov
sbb
sub
adc
outsl
outsl
fsubl
adc
mov
push
jns
jns
inc
fisttps
push
loopne
lea
xchg
xchg
mov
je
dec
andps
outsb
daa
daa
pop
xchg
add
fs
mov
rorl
repz
xchg
add
mov
jmp
scas
cmpsl
mov
fucomi
in
or
loopne
jmp
cmp
jnp
testb
into
or
sahf
xchg
out
sub
adc
adc
unpcklps
out
xchg
xchg
loope
loope
pop
lcall
sbb
jns
into
sbb
sbb
out
repz
loope
sahf
out
push
and
jns
out
and
inc
sahf
out
sahf
and
push
sub
subb
jns
out
sub
sahf
sub
rcr
in
in
xor
call
mov
mov
jg
jecxz
adc
mov
out
fisubrs
inc
es
out
sahf
dec
and
jns
out
insb
and
and
sahf
out
lea
cwtl
push
sahf
out
sahf
mov
sbb
out
les
iret
sbb
out
sahf
out
in
lock
iret
sarl
dec
push
in
adc
sahf
out
push
sbb
sub
xlat
dec
pop
aaa
sqrtps
pop
push
jle
mov
dec
cmovp
sahf
out
pop
pop
pop
data16
iret
mov
mov
push
xchg
or
lahf
add
in
in
test
jno
outsl
call
psadbw
in
pop
in
and
das
daa
in
in
pop
iret
repz
aas
or
or
repz
or
sbbb
mov
push
setle
out
adc
jns
out
adc
adc
sahf
out
sahf
adc
out
enter
sbb
sbb
jns
adc
sbb
sub
xor
cmp
sahf
out
push
and
das
mov
in
jbe
dec
js
orl
fwait
out
cmpsb
push
sbb
jns
pop
rcll
out
sahf
out
aam
fcoml
sahf
out
sahf
in
in
adc
adc
repnz
cld
movd
or
sahf
out
sahf
or
and
sahf
out
or
or
or
cmp
inc
out
out
cmpsl
fwait
cmp
push
arpl
inc
xchg
es
dec
out
dec
jne
sbb
movsl
outsl
lods
out
shrb
mov
pmaxub
cmp
mov
add
aad
aad
fstpl
in
fucomip
push
inc
ds
pop
std
divps
xchg
testl
adc
in
repnz
sbb
out
sbb
call
lahf
sbb
xchg
jp
dec
xor
xorb
push
push
daa
mov
in
push
add
jecxz
add
jmp
psubq
jmp
or
sbb
and
out
sub
adc
push
push
adc
jb
cmp
orb
lcall
mov
ret
ret
cmp
fsub
and
jmp
and
mov
xlat
rclb
nop
movaps
jns
outsb
pop
xor
add
out
pop
push
pop
packsswb
je
out
or
or
fisttpll
ja
push
push
orl
out
adc
add
bound
scas
xchg
xchg
test
aas
jns
sbb
jmp
adc
add
sbb
daa
pop
xor
jns
out
or
push
repz
cmp
mov
or
pusha
push
iret
repz
imul
adc
cmp
lods
push
adc
repz
into
psubusw
in
add
cli
add
notb
in
pop
sbb
in
pop
cmp
and
in
dec
pop
and
in
dec
sahf
and
leave
leave
leave
in
lahf
rsm
mov
repz
leave
lret
loope,pn
in
loop
in
imul
outsl
xor
mov
in
addr16
repz
shrl
xchg
test
add
dec
in
push
add
pusha
push
push
je
repz
or
nop
in
jns
lcall
in
mov
ret
dec
sahf
out
adc
loop
ljmp
cli
sbb
out
repnz
pop
bndldx
or
adc
sahf
outsb
nopl
push
mov
stc
mov
nop
jnp
pop
cmp
cmp
maxps
jns
cmp
cmp
cltd
sbb
xchg
out
mov
push
leave
out
mov
ja
es
lock
add
std
dec
inc
sahf
or
push
and
fildll
sahf
aaa
stc
hlt
push
or
cmp
push
or
fucom
jns
bound
mov
in
jbe
pop
jp
test
lahf
fwait
sahf
out
outsb
mov
adc
adc
leave
push
aam
paddsb
mov
shl
into
push
sbb
jns
out
call
in
lret
add
mov
nop
pop
insl
jbe
jbe
icebp
jg
icebp
lahf
cmp
mov
neg
add
movaps
sahf
jnp
mov
jg
sub
push
sub
jg
cs
das
pop
sahf
out
sahf
xor
jb
jge
mov
xor
xchg
sahf
in
sahf
out
ss
aaa
mov
mov
sub
cmp
cmp
mov
jg
dec
mov
pop
pushf
cmp
xchg
aas
mov
out
outsb
xadd
inc
xlat
dec
sahf
out
inc
in
icebp
sahf
out
fisubrs
or
dec
adc
adc
add
stos
sarb
daa
je
push
loope
aas
dec
push
dec
dec
das
fwait
lret
mov
dec
inc
jge
jg
xchg
icebp
cmpb
push
mov
cmovle
jle
jns
pop
jns
repnz
push
mov
in
mov
or
or
iret
leave
leave
iret
fsub
or
ds
repnz
push
push
adc
sbb
jns
out
adc
inc
push
jb
cmp
adc
adc
sahf
ja
pop
sbb
jge
pop
lcall
mov
bswap
push
and
loopne
pop
loop
leave
jmp
add
jg
jne
nop
insb
clc
jg
push
add
sbb
push
pop
hlt
mov
lahf
jno
jl
es
cmp
add
dec
sahf
out
add
jb
leave
repz
aam
lahf
outsb
jns
fcompl
ljmp
repnz
cmovle
cmc
and
leave
repz
cs
adc
adc
repz
push
pop
pop
jns
iret
repz
cs
dec
sahf
out
sbb
enter
mov
sub
mov
jns
enter
and
cmp
insl
fimull
jmp
lea
sub
sub
adc
iret
mov
inc
cmovl
mov
xor
lds
mov
int3
aas
div
push
add
cmp
into
aas
fidivrs
out
lahf
out
xor
aam
outsl
testl
add
es
mov
jns
in
negl
push
push
pop
movntq
ja
push
or
jle
rorl
or
into
repz
cmp
stos
adc
negl
adc
adc
jbe
fsub
pop
xlat
jl
out
ds
pop
stc
sbb
out
jl
sbb
mov
sahf
out
sahf
sbb
sub
xor
xchg
xchg
out
aas
and
out
sahf
and
jp
mov
out
test
nop
popf
fsubrl
mov
leave
scas
testb
mov
pop
dec
push
or
sbb
into
repz
sbb
add
stc
sahf
pop
stc
adc
inc
dec
sahf
out
add
pop
push
pop
jae
orb
repz
repz
repz
mov
mov
jns
rorl
pmaxub
mov
aam
push
pop
cli
push
adc
ja
or
push
adc
out
outsw
cmp
inc
sbb
es
jns
push
push
sub
cmpsb
cli
daa
daa
iret
dec
pop
push
add
jne
jg
push
add
enter
pop
out
or
repnz
es
incl
sti
jns
fbstp
prefetch
sti
pop
push
paddusw
out
adc
cmp
inc
jns
iret
mov
push
pop
push
push
fmull
out
pop
insl
js
xor
iret
repz
repz
fwait
sbb
out
fidivs
and
repnz
into
and
enter
xchg
sti
or
cmp
insl
jbe
cld
pop
and
sub
sahf
testl
xchg
pop
fs
cld
int
cmp
sahf
out
mov
cmpsb
adc
adc
jns
call
daa
push
sbb
in
cld
or
push
push
sbb
xchg
out
sub
pop
aaa
inc
std
lahf
sahf
xchg
or
dec
std
fisttps
arpl
out
and
and
in
in
setp
jl
mov
pop
sub
xchg
inc
cmp
cmp
xor
mov
loope
ja
pop
lock
clc
outsb
pushf
sbb
sbb
xor
das
dec
fsubrs
push
filds
sbb
jns
push
mov
leave
shrl
pop
syscall
lcall
mov
mov
xchg
syscall
or
fisubrs
iret
or
unpcklps
cmp
jnp
pop
adc
sub
xor
inc
push
adc
xchg
pop
loopne
lcall
les
in
sbb
fisubrl
sbb
out
jecxz
repz
es
cmp
mov
das
popa
push
and
repz
ja
orb
cwtl
daa
mov
movsb
fwait
pop
das
sub
sahf
ja
cmp
iret
push
das
fisubl
fucom
jns
in
pop
xor
xchg
out
cs
push
add
ss
add
ds
outsb
aaa
pop
push
outsb
push
jmp
insb
emms
pop
iret
leave
repz
cmp
cwtl
dec
and
clc
mov
cmp
into
aas
setb
in
in
add
push
out
cmp
int
fmuls
jecxz
jns
sahf
or
stc
or
add
cmp
add
sbb
daa
push
adc
jns
leave
repz
cmp
jbe
pusha
das
imul
push
pop
xorl
pop
scas
repnz
daa
mov
sahf
out
fisttpll
call
ja
repnz
add
cs
mov
sub
sahf
xchg
out
jns
test
sub
out
scas
pop
cs
jns
in
adc
das
pop
push
xor
xor
xor
outsb
xor
fucomi
cmpsb
lahf
mov
mov
xchg
rcr
dec
add
push
lahf
push
out
dec
inc
sub
pop
add
xchg
addr16
pushf
fisttps
add
jns
in
fstpl
push
pop
mov
cmp
packsswb
ficompl
das
smsw
add
data16
cwtl
dec
in
popl
cmc
fwait
xchg
inc
mov
push
or
es
sbb
xor
fs
mov
jno
mov
cmpsl
fmul
inc
mov
es
mov
adc
cmp
pop
push
push
mov
pop
xor
loopne
sub
xchg
subl
out
out
orb
and
xchg
rorb
push
cmp
mov
add
add
aas
inc
push
or
sub
lahf
rorb
add
cmp
aaa
sub
aaa
xchg
aaa
sub
xlat
add
cs
popf
push
jbe
mull
arpl
mov
or
decl
pop
or
dec
outsb
daa
daa
or
aaa
or
jbe
jne
or
daa
jbe
mov
and
in
inc
push
addr16
das
mov
xorps
insl
cmp
pop
push
sbb
mov
orl
mov
xchg
sub
in
in
sahf
mov
in
shll
pop
or
jo
mov
mov
add
add
adc
lods
and
or
test
add
or
lcall
aam
add
push
and
mov
pushf
add
add
movsb
add
pusha
cmpb
cmpsb
fisttps
mov
repnz
mov
cmp
decb
inc
mov
out
in
inc
mov
iret
mov
in
call
mov
push
add
in
cmpsl
in
push
pop
fisubrl
xor
fcomp
loopne
jb
loope
adc
in
xchg
pushf
and
xchg
nop
repz
repz
repz
insb
pusha
push
dec
inc
cmp
iret
repz
xor
sub
repz
repz
sbb
adc
imul
and
in
and
out
outsl
in
faddl
aam
shlb
mov
dec
out
cwtl
out
out
push
dec
insb
push
fs
pop
push
jns
repnz
into
sbb
iret
repz
aam
mov
cmp
mov
jns
repz
push
sahf
push
cmp
and
push
or
out
ds
and
fadd
mov
pushf
neg
jns
xchg
pushf
push
je
pusha
push
inc
add
pop
icebp
adc
add
adc
in
push
xor
cmpb
lock
js
clc
mulb
gs
incl
dec
hlt
xor
jno
xor
aas
sbb
es
push
or
lock
push
orb
lock
mov
xorb
iret
dec
outsl
lock
call
push
mov
daa
push
adc
je
fists
pop
shll
inc
sgdtl
push
adc
jg
add
sbb
xchg
jb
mov
add
add
mov
arpl
fsubs
pop
das
add
popl
or
add
js,pn
dec
mov
inc
stc
pop
jg
jl
addl
pop
out
fdivrs
lock
repnz
out
sbb
jb
es
jns
ja
xor
insb
ss
out
and
sahf
push
mov
and
sbb
adc
ds
and
sahf
testl
jns
out
and
or
or
adc
fcompl
repz
jns
adc
xor
sub
and
push
and
sahf
out
and
and
and
add
aaa
inc
dec
cmp
or
clc
rol
xchg
fucomi
pop
imul
daa
xor
and
subb
fmulp
xlat
xchg
incl
xorl
fistl
cmp
repz
xchg
mov
in
repz
repz
xor
dec
insl
add
jns
aaa
cmp
pop
ja
mov
testl
das
push
dec
insb
adc
xchg
xchg
mov
repnz
jb
or
or
ret
cmpxchg
cld
xchg
movntps
sbb
leave
sbb
scas
mov
ret
inc
and
sahf
mov
sub
inc
rcrb
and
decl
jmp
inc
jno
xlat
xchg
inc
push
add
inc
stc
mov
adc
mov
mov
dec
pop
js
inc
outsl
loopne
jmp
xchg
test
mov
cmp
jmp
jl
mov
popf
sti
jmp
stos
push
inc
mov
repnz
test
pop
stos
clc
ljmp
cli
inc
jmp
aam
imul
loope
jp
iret
inc
gs
xchg
push
cmpsb
scas
mov
or
gs
or
addl
cmpsl
xchg
cmp
xor
dec
cmpsl
in
cmp
pop
hlt
lcall
cmpsb
lock
mov
popa
sar
mov
sbbb
std
ljmp
mov
subb
fwait
xchg
and
xor
int3
add
aas
jno
or
mov
out
or
aas
pop
fs
dec
lea
aas
ret
shrl
mov
icebp
aas
rorb
jmp
test
inc
lods
lds
mov
insb
scas
add
aas
xor
aad
mov
jmp
aas
ret
into
popa
test
ja
stos
in
das
dec
pop
loope
les
aas
xchg
les
jne
dec
adc
lcall
cmp
push
mov
xchg
aas
and
loop
mov
jp
popa
push
jg
lcall
jle
push
jl
mov
das
lea
mov
inc
inc
aas
movsl
jmp
jg
sub
jge
mov
inc
rcr
push
arpl
int3
and
call
cmp
std
jp
and
cmp
mov
cmp
std
xlat
cmp
mov
sbb
jg
inc
xchg
test
pop
mov
jne
fldt
cmp
jno
sar
jmp
out
dec
nop
pop
cmp
fisubl
xor
push
lahf
inc
pop
mov
sub
jmp
xor
push
scas
into
imul
faddp
jge
call
mov
xchg
cmp
cld
outsl
call
and
dec
dec
gs
std
orl
pop
ficomps
frstor
sbb
into
or
or
addb
jno
mov
add
pop
repnz
inc
inc
je
inc
inc
push
dec
jnp
addr16
pop
and
dec
dec
inc
push
dec
inc
aaa
xor
mov
xchg
jg
stos
insb
cmp
int
fdivrs
pop
fisubl
call
dec
inc
jo
inc
popa
push
outsb
jbe
imul
push
mov
gs
outsl
dec
cs
and
add
adcb
shlb
in
leave
add
push
dec
out
sbbb
inc
dec
push
inc
push
adc
jnp
jo
jb
push
push
adc
inc
inc
inc
test
mov
dec
inc
gs
gs
insb
xchg
clc
mov
ds
arpl
test
rcl
or
bound
outsl
push
dec
pop
mov
push
push
xchg
and
xorb
xor
and
fisubrl
and
inc
push
das
push
fs
add
push
mov
cwtl
add
xchg
dec
rorl
daa
daa
mov
jge
dec
jae
imul
xor
inc
jg
jnp
cmovae
loopne
lahf
or
push
push
les
push
cmp
jp
test
je
dec
rclb
shlb
push
push
imul
sub
insl
inc
inc
inc
inc
adc
jb
dec
fidivrl
dec
lds
jae
jbe
mov
push
dec
test
push
mov
adc
xchg
int
cmpsb
adc
push
mov
mov
aas
push
sti
dec
popa
jne
arpl
and
dec
pop
cmp
pusha
pusha
xlat
push
or
dec
rol
mov
add
aad
and
clc
pop
mov
js
cli
dec
sub
mov
or
or
push
add
scas
push
jg
notl
push
imul
andl
loope
jb
lds
orb
das
pop
add
push
mov
addl
jp
lock
push
sbb
and
gs
stos
or
mov
push
push
outsl
push
inc
arpl
push
lds
test
out
xor
pop
jg
adc
mov
mov
cmp
sbb
mov
mov
data16
push
add
jno
outsl
mov
pusha
pop
outsl
ja
or
pusha
pop
es
add
aam
or
arpl
inc
or
push
inc
jo
adc
lahf
ss
pop
icebp
ja
stos
sub
push
gs
dec
scas
sub
dec
lahf
sbb
pop
inc
dec
subb
push
lahf
nop
leave
dec
add
adc
test
jg
sbb
rcrl
mov
aas
decl
out
sub
add
stos
lahf
mov
inc
jno
nop
cmp
out
mov
and
outsl
shl
mov
dec
dec
jb
inc
test
js
add
cmpsl
mov
aam
arpl
dec
outsl
add
push
movsb
and
outsb
push
sub
fisttps
pop
push
jne
les
outsl
sbb
cmp
loopne
push
mov
jle
dec
outsl
addr16
rolb
aad
iret
cmpsb
test
mov
iret
pop
sub
fcmovb
insl
pop
arpl
lea
das
xlat
stos
dec
adc
out
jg
repz
cwtl
incb
jl
dec
sahf
out
cmp
or
jns
out
mov
jl
sub
cltd
shl
rol
data16
inc
insb
pushf
cmp
jmp
dec
push
js
pushf
cmp
pause
push
and
lahf
incl
ljmp
add
popa
push
out
mov
inc
insl
pop
hlt
push
xor
xchg
fs
xor
fdivrl
jmp
rclb
decl
mov
sub
mov
sbb
dec
jno
repz
test
call
ficompl
jmp
mov
hlt
movl
imul
std
in
leave
mov
lcall
fldcw
arpl
or
pop
adc
in
pusha
aad
jno
mov
jmp
add
aam
dec
std
test
movsl
cli
test
xor
leave
mov
lods
jecxz
or
xor
iret
or
shrl
pushl
fldenv
cmp
ficoms
push
xlat
enter
mov
and
mov
cltd
xchg
mov
mov
mov
add
and
or
adc
stos
sbb
cmp
inc
fdivl
jno
add
aad
mov
mov
movsl
in
lahf
ja
pushl
aam
call
xor
mov
lcall
cwtl
push
loope
or
insl
or
pop
arpl
hlt
push
imul
insb
sbb
xor
decl
insb
jnp
add
shl
adcb
cmc
fnstenv
adc
mov
jl
mov
bound
ficoml
gs
aam
pop
popa
mov
into
pop
ljmp
cmp
mov
inc
movsl
fisttps
xchg
fadd
shll
jmp
fldcw
inc
mov
sarb
add
in
add
pop
dec
or
cmp
add
incl
daa
adc
or
and
test
or
mov
popa
into
push
stc
ficomps
dec
fldcw
and
xlat
pop
cmp
mov
cmp
lods
insb
mov
in
mov
pushl
mov
lcall
ljmp
fildl
push
fdivl
or
test
cmp
push
or
or
push
in
decl
xchg
daa
scas
add
mov
pop
jge
xchg
rcl
jmp
add
inc
push
imul
xorb
sbb
push
imul
jg
aam
loopne
rorl
int3
dec
frstor
fistpll
mov
mov
aad
mov
call
xchg
shll
push
repnz
addr16
cmpsb
fldl
mov
dec
ss
fisubrl
or
scas
testb
pusha
jp
inc
ret
out
pusha
fists
addr16
mov
jns
imul
mov
lret
sbb
outsl
and
xchg
ja
int3
add
mov
das
es
mov
or
sub
mov
cmpsl
call
ret
shlb
sbb
pushl
repnz
pushf
mov
insl
add
ss
jmp
addr16
jb
push
pushl
hlt
orb
adc
mov
jnp
sbb
xchg
or
out
fdivr
jl
or
rcl
xchg
aam
clc
mov
push
int
mov
mul
ja
cmp
outsl
ja
mov
out
cli
jo
ud0
cmp
pop
or
adc
sahf
gs
call
std
clc
sar
imul
push
js
or
push
addl
mov
cmp
jmp
cmpsl
notl
pusha
rorb
imul
push
scas
fcompl
fldenv
filds
cmp
aaa
push
ljmp
mov
inc
jmp
repnz
lret
mov
cmpsb
mov
pushl
sarb
sub
push
mov
jp
mov
dec
popa
les
sbb
xchg
sub
aaa
cs
movsb
mov
or
sbb
add
add
iret
push
loop
shlb
xor
cmc
mov
cmpsl
outsl
inc
jne
push
popl
or
mov
imul
je
push
insb
imul
lods
pop
filds
sar
pop
inc
jbe
push
jns
arpl
arpl
mov
fsubrs
in
push
inc
insl
sub
mov
pop
inc
jne
outsl
insl
addr16
xchg
sbb
rcrb
add
or
xorb
ja
adc
cmp
push
xchg
mov
dec
inc
js
xor
bound
cmp
inc
js
pop
ret
sub
fistl
in
sbb
and
aas
pop
inc
cmp
pop
imul
jmp
xor
aaa
cmp
popa
arpl
cmp
arpl
or
popa
add
jg
xor
xor
xor
loope
dec
les
inc
jbe
pop
sbb
adc
icebp
xor
inc
ret
negb
cmp
inc
or
xchg
inc
lock
fmull
push
pop
shll
mov
mov
cwtl
push
ss
jbe
arpl
add
aas
movsl
sbb
ret
aam
jle
hlt
nop
fsubrs
inc
push
clc
xchg
inc
jo
js
sbb
and
inc
fldl
xchg
insb
popa
jns
pop
mov
push
push
dec
insb
xor
and
rclb
movq
popl
in
push
and
and
jae
cmp
adc
push
aas
dec
nop
lods
stos
cmpsl
push
mov
inc
fcomp
insb
sbb
inc
pop
pop
add
jae
inc
mov
in
fiadds
add
ds
test
mov
mov
mov
call
xchg
sbb
arpl
inc
outsb
jne
and
mov
dec
jge
int
jne
xor
xor
or
inc
cmc
mov
add
addr16
push
xchg
into
pop
jo
or
pop
inc
cmp
add
aaa
dec
add
je
orb
sbb
dec
ss
inc
mov
pop
push
xchg
inc
mov
lahf
inc
dec
mov
or
mov
push
pop
adc
rclb
lds
jb
dec
add
frstor
push
js
adc
jo
sahf
add
lahf
aas
push
outsl
outsl
mov
mov
push
pop
push
jno
inc
stos
and
in
sub
pop
shl
shr
test
pop
cmp
arpl
push
cmp
inc
and
mov
call
lea
lock
jns
jne
jo
das
inc
pusha
push
popa
jb
push
fs
mov
sbb
nop
adc
mov
adc
insb
bswap
arpl
clc
or
bound
pop
dec
popl
test
push
aaa
ja
or
ret
movl
xor
bound
sbb
add
push
sub
aaa
pop
jl
adc
loopne
push
pusha
pop
popl
addr16
xor
testb
push
xchg
mov
and
mov
movsl
sahf
aas
pusha
popa
adc
cmc
jg
outsl
shll
dec
and
sbb
cs
push
outsb
cwtl
adc
dec
pushf
mov
inc
lds
jns
daa
aas
pop
inc
or
mov
add
and
add
pop
adc
mov
mov
cmp
xorb
dec
dec
pop
nop
pop
push
sbb
repnz
std
clc
or
mov
mov
int
mov
lidtl
popa
insl
and
outsb
outsl
je
das
add
mov
jne
and
and
outsl
pop
sub
or
cmpsb
dec
shrd
popa
ljmp
jg
xchg
lea
in
bswap
mov
out
jecxz
out
ud0
jmp
repnz
in
push
pusha
ljmp
das
insl
stc
in
lret
cli
push
cld
push
imul
push
pop
xchg
pushf
dec
cs
in
pop
not
mov
daa
loopne
add
or
or
jne
cmp
push
daa
aam
cmp
add
arpl
repz
add
std
loope
mov
add
sbb
add
dec
or
mov
dec
add
mov
mov
mov
sub
pop
test
push
pusha
push
add
ss
pop
add
cs
dec
add
or
add
jb,pn
pop
lock
ret
inc
out
sbb
mov
cs
xchg
add
dec
or
jo
mov
rcrb
push
sti
gs
icebp
add
test
xor
dec
andb
dec
sahf
sbb
inc
xlat
and
or
cmp
cmp
adc
or
leave
mov
add
std
lds
ds
lea
add
ret
pop
or
dec
jne
sahf
lods
test
pop
sbb
sub
xchg
cli
mov
ret
dec
movsb
jle
stc
jbe
cmp
in
push
push
or
cmp
xchg
or
dec
fucomi
gs
incl
sbb
ja
jne
jmp
mov
lahf
sahf
ja
cmpsb
cmc
push
mov
mov
call
nop
mov
sbb
and
adc
mov
adc
add
xor
hlt
mov
sti
mov
movsl
sub
mov
icebp
cmpsl
add
push
xor
xchg
mov
push
push
pop
cwtl
xchg
rcll
xor
add
pushf
pusha
jecxz
in
stos
neg
inc
mov
and
push
jg
mov
sbb
push
movzbl
or
rcll
in
fs
je
xor
sub
leave
sub
fildl
mov
cmp
jbe
xlat
add
xchg
outsb
inc
sbb
call
mov
adc
push
push
iret
fs
roll
loope
adcl
out
sahf
xorb
movsl
mov
loopne
call
add
xchg
test
push
movsl
arpl
dec
mov
clc
aad
or
aam
es
jne
push
inc
imul
les
adc
mov
mov
lcall
outsb
in
dec
inc
add
in
inc
dec
and
mov
xor
pop
add
ss
jno
imul
rolb
mov
movsl
jnp
mov
adc
les
roll
push
imul
or
mov
lea
push
imul
mov
addr16
cmp
leave
push
jg
mov
cmp
pop
add
adc
push
xchg
dec
sbb
push
push
outsl
mov
cmpsl
pusha
jae
popa
js
pop
outsl
push
cmp
lock
dec
cs
ret
scas
push
cltd
push
cmp
dec
pop
inc
mov
mov
cltd
test
mov
and
sub
and
fs
mov
pop
cmp
add
dec
popl
call
mov
aam
je
lock
pop
inc
test
movb
dec
adc
add
loope
inc
fcoms
xchg
jl
in
aam
lea
dec
out
or
lds
mov
loope
xlat
loop
sub
jbe
or
popf
mul
loop
andb
add
xchg
inc
popf
je
roll
mov
xchg
in
add
imul
or
cmp
rclb
add
inc
cmp
repnz
dec
rcl
push
xchg
xlat
hlt
or
xor
inc
repnz
mulb
cmpsl
sbb
ljmp
mov
sbb
sbb
inc
call
enter
aas
adc
xchg
cmp
xchg
push
loopne
dec
and
jnp
and
or
enter
jmp
je
call
inc
push
dec
fistl
or
sub
mov
add
aam
je
lahf
push
mov
inc
rorl
in
nop
sub
fcoml
xor
mov
or
dec
imull
add
jl
int
pop
mov
lcall
or
into
sub
stc
jp
jo
lods
xchg
lds
ret
xlat
mov
jp
push
or
inc
or
push
es
loop
negl
pop
and
pop
xchg
sbb
pop
adc
fisubrl
xchg
or
add
call
jnp
or
pop
int
sbbl
bts
xor
insb
lret
imul
sub
fld
cld
and
mov
add
and
add
push
add
repz
insl
stos
ljmp
cmpb
add
scas
add
jl
nop
cmp
inc
push
xchg
rcll
pop
and
enter
xchg
sbb
shl
mov
mov
sub
push
ds
pop
cmp
std
or
xchg
sub
sti
push
jne
xchg
xchg
push
sub
lea
mov
mov
test
and
test
nop
imul
hlt
jmp
add
aaa
xchg
test
push
insb
sarb
dec
inc
lock
cli
and
cmp
cmp
sub
shlb
or
mov
lods
or
ja
inc
sbb
mov
xchg
xchg
jae
daa
xchg
xchg
sbb
mov
call
in
dec
push
popf
and
inc
mov
lcall
sub
mov
cs
and
in
sbb
fidivrs
sub
mov
rorl
sub
lock
shl
jmp
sbb
rolb
xor
clc
sbb
aas
fcmovb
js
repnz
or
int3
or
add
ret
sub
or
filds
push
jecxz
inc
movzbl
add
not
mov
inc
jl
je
lods
xchg
cmp
ret
aas
test
adc
or
lds
pop
aad
in
and
push
pop
lahf
mov
movsl
lret
add
movsb
add
ljmp
lock
mov
or
jmp
pop
ret
push
add
xchg
cld
push
jns
mov
adc
pop
loop
jb
nop
adc
bound
inc
add
loopne
inc
pop
ss
lret
comiss
xchg
xor
inc
inc
pop
pop
lcall
lret
sbb
cmp
ds
scas
loope
add
aaa
sbb
sbb
pop
addr16
loop
fdivr
dec
inc
push
das
jb
mov
cltd
shlb
push
push
dec
fsub
popf
add
lock
sbb
mov
inc
pop
pop
pop
imul
int3
call
sbb
jno
push
or
sar
je
cmp
sub
push
mov
sub
andb
fists
sbb
push
cmp
fcompl
jb
fstl
out
cmp
xor
test
adc
aas
inc
je
cmp
jbe
fdivs
xchg
test
add
mov
outsb
mov
jmp
push
adc
loop
pop
cmp
inc
inc
dec
or
ficompl
xor
jb
and
add
mov
rcrb
push
or
xor
in
push
cmp
xchg
add
out
xor
repnz
xchg
xor
call
xor
sub
jae
fdivr
mov
adc
inc
rol
mov
jecxz
ss
xor
mov
es
stos
pop
mov
or
jmp
enter
mov
xchg
aas
xor
cltd
loopne
call
mov
sti
mov
mov
mov
mov
adc
and
dec
jae
les
adc
pop
mov
push
inc
adc
pop
pop
lea
sub
enter
xor
sub
or
mov
mov
rep
xor
inc
rep
push
and
pop
mov
xchg
cltd
aad
sahf
lcall
sub
nop
aas
outsl
mov
pop
mov
and
adc
jg
dec
inc
es
add
sti
xchg
mov
ficoms
pop
cmpsl
mov
pop
mov
stos
push
inc
or
fnstcw
and
aad
shlb
subl
and
rolb
push
fadds
mov
ljmp
outsl
push
jb
sub
ljmp
ret
ret
pop
push
pop
pop
stos
add
fdivs
call
cmpl
push
fistl
add
cld
cltd
sbb
je
mov
pushf
sub
sahf
pop
and
insb
or
push
inc
leave
lret
stos
xor
sbb
dec
push
add
sub
jb
adc
xchg
pushf
outsw
push
add
ljmp
int3
into
rcl
fidivl
mov
lret
stos
xchg
and
pop
xchg
sahf
xchg
mov
inc
stos
dec
scas
fwait
hlt
sbb
cmp
js
mov
jnp
ss
adc
mov
mov
adc
movsl
mov
or
insb
or
and
xor
dec
adc
push
dec
rol
push
push
scas
xchg
lock
sbb
push
call
cmp
cmp
jle
pop
xor
mov
dec
adcl
pushl
push
gs
pop
add
loopne
dec
in
push
mov
push
adc
pop
jmp
cmp
dec
sub
push
sub
jg
stc
divl
call
push
or
nop
or
in
bswap
push
add
in
enter
xchg
in
pop
jno
mov
or
test
inc
xchg
pop
adc
imul
push
leave
sub
mov
pushf
popf
dec
and
or
inc
inc
rcr
in
push
cmp
aam
mul
jmp
mov
loopne
lahf
cmp
mov
stos
repnz
or
bound
out
popf
je
inc
mov
mov
mov
cmp
mov
jne
je
in
sbb
lret
xchg
in
in
mov
ss
ret
outsb
repz
mov
jge
fcomps
add
jns
pop
cmp
imul
inc
inc
pop
bound
sbb
test
fbld
cltd
mov
fists
cmc
fiadds
shrb
sbb
jne
mov
adc
sbb
jne
lods
lods
push
les
fnstsw
inc
std
fidivrs
push
jbe
xor
sbb
push
ljmp
dec
mov
xchg
dec
int3
mov
xor
xchg
cmpsb
adc
jmp
lods
or
out
fcomp
inc
test
jecxz
test
inc
enter
hlt
or
cwtl
adc
or
mov
jbe
les
push
js
fcompl
into
mov
mov
lods
lods
aad
mov
xlat
push
push
mov
jecxz
repz
out
je
sub
or
lea
add
push
call
add
adc
rcrb
mov
or
and
xchg
and
cmp
test
in
add
jne
jb
mov
js
les
cld
addr16
ret
insl
jb
add
popf
add
pop
in
ret
movsl
test
in
add
cmp
subb
xchg
sbb
scas
jns
xchg
xor
mov
inc
pop
icebp
or
xchg
cmpsl
fxch
cmp
ret
add
add
movsb
xorl
xor
xchg
xorl
mov
mov
es
into
push
push
nop
xchg
mov
gs
cmp
inc
inc
and
jmp
dec
cmp
sti
adc
or
or
je
mov
test
dec
test
lods
cmp
adc
or
loopne
outsb
inc
mov
cld
xor
jo
fstps
jmp
push
and
bound
jmp
test
fs
loopne
mov
xchg
mov
mov
cmp
jle
sbb
mov
push
cld
sbb
xchg
cli
cs
cltd
mov
cld
adc
test
ja
pushf
or
mov
orl
sbb
xchg
adc
mov
les
jns
mov
jbe
mov
jne
xor
mov
iret
sbb
outsb
xorb
xor
test
inc
test
or
cmp
jne
push
loopne
idivb
adc
push
mov
mov
adc
push
inc
fmuls
loopne
rolb
hlt
repnz
jns
testb
jg
sbb
rcl
jbe
subw
pushl
or
jnp
icebp
mov
xor
stos
std
jmp
sbb
std
movhps
add
sbb
pushf
cli
or
or
mov
cmp
call
sub
enter
mov
sahf
inc
push
push
add
inc
adc
in
inc
xchg
adc
adc
pop
push
mov
cld
sub
push
jle
adc
lock
adc
lahf
incb
nop
push
ds
pusha
or
outsl
sbb
scas
outsb
inc
sbb
jne
in
add
mov
add
cmp
mov
mov
mov
and
rorl
jl
add
imul
push
sarb
dec
sbb
fcoms
jae
subl
push
pop
sbb
loopne
jmp
mov
add
orb
jmp
insl
test
fcmovnb
push
xor
mov
adc
or
shll
loopne
aam
roll
stos
inc
push
dec
jae
nop
push
mov
daa
fdivr
add
pop
xchg
adc
cmp
scas
pop
cmp
push
orl
test
xchg
mov
sub
rcrl
inc
jecxz
push
mov
push
dec
pushf
cmpsl
fld1
cmp
loope
jo
ret
sub
inc
jbe
dec
fdivl
adc
cmpsl
imul
sbb
lret
dec
xchg
xchg
sarb
add
clc
push
or
enter
imul
addl
fsubl
insb
and
xor
add
in
dec
es
and
or
fidivs
push
mov
js
rcrb
push
sarb
int3
fnstsw
subl
jb
cmp
shll
or
pop
xor
cmp
or
call
mov
sbb
or
add
in
test
push
mov
ret
xchg
adc
sub
sbb
jl
pop
xchg
repnz
push
mov
lock
jne
mov
jmp
or
xor
dec
rorb
or
or
xor
lahf
dec
sbb
or
rcl
or
inc
in
je
mov
and
add
adcl
and
sbb
sub
inc
inc
push
add
call
jmp
sbb
xchg
mov
call
cmpsl
xchg
std
aaa
dec
test
shll
adc
add
mov
cmp
ss
mov
nop
add
call
nop
cmp
mov
or
adc
mov
mov
pop
mov
push
push
mov
lea
xor
adc
ss
ret
stos
push
fbstp
cmp
je
cmp
jbe
xchg
ds
movsb
xchg
jne
dec
and
insb
jg
fimull
push
and
std
pop
push
xchg
loope
jbe
jne
adc
cwtl
sbb
push
in
xlat
jo
dec
xchg
xchg
inc
or
pushf
shll
cli
adc
pop
loopne
mov
movsb
jae
pop
pushf
int
and
loop
test
incb
mov
ret
shr
je
imul
sbb
sbb
fsubrl
ret
mov
mov
test
sub
mov
mov
rorl
xchg
mov
push
cld
out
push
or
jbe
jbe
fwait
jmp
dec
clc
or
mov
outsl
shr
fsubr
jo
push
sbb
or
cltd
adc
pop
mov
into
call
xor
mov
or
fwait
inc
adc
pop
add
jbe
roll
sti
fs
pop
push
je
sub
adc
fldl2e
ds
xchg
addb
dec
in
stos
mov
and
stc
or
movsb
movsb
jg
js
ja
sub
pop
push
lea
mov
pop
xorb
push
xchg
aam
inc
jne
jne
data16
push
jno
push
push
push
cmpsb
and
mov
mov
jno
sbb
push
cli
call
aas
subl
out
ret
fsubs
fsubrs
push
xor
xchg
pop
scas
fdivs
fwait
jae
js
push
push
movsl
dec
xor
dec
rcll
add
add
or
push
push
add
mov
adc
or
push
jns
insl
shrl
or
jns
lods
nop
fs
xchg
mov
add
push
ficoms
test
roll
mov
lea
or
mov
pop
lock
lock
dec
push
hlt
push
in
cltd
add
mov
sub
ss
clc
and
jne
rolb
cld
adc
mov
add
jmp
adc
and
add
ficoml
push
sub
xchg
mov
or
or
add
rolb
dec
out
call
lods
mov
call
movsb
call
lea
test
sbb
mov
or
add
or
pop
addr16
shrl
fistpl
sbb
ret
cmp
cld
jne
into
cmp
mov
addr16
ss
cmp
push
in
dec
js
es
pop
test
and
iret
leave
je
int3
jecxz
decb
or
jns
outsl
cmp
mov
xorl
jmp
nop
xor
and
jl
push
sahf
jae
mov
adc
sarl
jno
cmp
icebp
call
out
test
mov
je
subl
inc
jmp
mov
setb
push
fildll
xor
cmp
xchg
arpl
jmp
repnz
sbb
call
aad
pop
inc
inc
lcall
dec
jl
js
movsb
test
enter
xor
xor
fxtract
jg
rcrb
insb
pop
xorb
pop
xlat
jmp
outsb
mov
imul
aam
pusha
movl
push
jecxz
xor
adc
add
addl
fdivrp
xlat
jnp
jne
add
push
call
in
cmp
in
movsb
jmp
js
sbb
lret
dec
je
and
insb
sub
mov
sbbl
addr16
cmp
jbe
lock
icebp
mov
or
mov
into
and
or
clc
je
push
stc
sub
rcrb
out
lock
push
fcoms
push
sbb
arpl
jo
or
mov
pop
cwtl
or
popf
pushf
or
cmp
inc
daa
cld
test
pop
or
and
lock
inc
mov
std
and
inc
mov
xchg
in
pusha
ja
cmp
jg
push
adc
jne
lea
pop
popf
shrb
call
xor
insl
xchg
test
aas
mov
icebp
pusha
and
dec
rol
and
icebp
xchg
fsubs
nop
push
decl
or
and
pop
fadds
dec
jne
movzbl
add
je
or
push
or
fstl
add
test
adc
sbb
sbb
xchg
leave
mov
jmp
jg
movsb
arpl
mov
or
sub
sbb
subb
adc
cmp
fs
rorb
xor
inc
pop
shrb
jecxz
in
xchg
inc
rorb
ss
pop
and
xor
shrl
imul
leave
imul
movsb
or
aad
loopne
xor
and
cmp
sub
and
cwtl
push
fisttpll
loope
push
push
call
fcoml
shrl
dec
xchg
scas
hlt
cs
dec
dec
dec
testb
push
jecxz
add
clc
cmp
add
or
std
lds
dec
lds
je
lds
roll
enter
lds
or
pop
roll
inc
stos
aas
mov
mov
xor
xchg
adc
pop
inc
add
mov
popa
inc
add
add
sub
pop
pop
adc
push
add
xor
mov
add
add
pop
ret
add
adc
push
add
shll
mov
out
inc
adc
push
cmp
mov
pop
subl
add
and
push
add
xor
add
and
daa
and
rorl
xchg
lahf
in
adc
sub
mov
or
je
push
mov
mov
pop
popa
pusha
inc
inc
add
inc
mov
pusha
mov
or
or
jp
jp
call
daa
callw
mov
xor
jmp
cmp
hlt
std
mov
dec
aam
inc
adc
rcll
data16
call
cmp
jne
xchg
pop
int3
pop
mov
xor
xchg
mov
jmp
pop
leave
inc
mov
cmp
or
aas
insb
and
mov
jae
out
sti
pop
call
clc
scas
pop
and
jns
jmp
insb
mov
pushl
cmp
jmp
cmp
xchg
mov
sbb
data16
xchg
rol
divl
les
test
cmp
pop
push
les
imul
fimull
ljmp
lds
shl
roll
and
and
sbb
push
sbb
push
push
add
stos
bnd
and
cmp
or
adc
leave
test
cmp
lock
mov
adc
add
loope
xor
cmp
jge
call
and
arpl
inc
mov
dec
incb
mov
es
cmpsb
add
movsl
adc
and
push
or
aam
repz
cmc
or
mov
decl
dec
push
pop
sbb
fcoms
es
lar
sbb
inc
jmp
jg
mov
dec
push
and
or
in
inc
cmp
ficomps
cltd
inc
clc
push
mov
push
fwait
sub
dec
test
push
xchg
sbbl
js
push
xchg
movsb
movsb
xor
jbe
inc
dec
rolb
imull
push
movsl
imul
dec
adc
jp
ret
and
dec
add
sub
push
icebp
jecxz
xchg
push
xchg
movb
cmp
movsl
adc
add
repnz
cwtl
inc
in
mov
adc
dec
call
rolb
nop
sbb
cwtl
rolb
loope
orl
push
inc
jmp
aaa
and
and
and
mov
test
xor
orl
orl
sub
adc
orl
and
and
lret
inc
and
call
pop
and
mov
out
lods
ljmp
jnp
rcll
jnp,pn
jnp
cmp
pusha
nop
push
in
nop
je
mov
into
out
ss
mov
aaa
dec
out
jns
xchg
xor
sub
dec
out
sahf
sbb
or
pop
push
shrb
movsb
repz
je
pop
mov
adc
dec
dec
inc
out
adc
dec
adc
out
inc
daa
sbb
out
in
pop
nop
add
and
dec
inc
jb
out
nop
faddl
out
out
ss
out
mov
out
push
mov
ror
inc
dec
inc
out
out
mov
or
push
adc
fsts
inc
sub
and
daa
push
pushf
es
addr16
lods
lahf
loopnew
xchg
xchg
cmpsl
jge
and
mov
loop
or
insb
and
cmpb
adc
dec
pushf
push
pop
fstl
loopne
jmp
cmp
je
mov
add
sub
add
xchg
or
lahf
ret
lea
adc
add
pop
add
or
add
add
add
adc
subl
cmp
jg
jo
cmp
je
xchg
add
in
fmulp
mov
inc
scas
in
push
push
push
gs
int
add
inc
or
and
or
lret
sub
or
add
or
or
sysenter
xchg
subl
or
mov
or
or
or
push
or
xor
push
cvtdq2ps
pop
xor
adc
pop
in
sbb
adc
cmp
in
add
adc
pop
and
and
push
adc
push
adc
adc
adc
jb
jb
adc
xchg
cmp
push
push
inc
mov
pop
and
ljmp
sbb
xchg
sub
mov
pusha
in
sahf
sbb
mov
in
sbb
xor
repnz
jo
sub
ja
sbb
mov
negb
pop
inc
jecxz
add
add
add
sub
cmp
std
mov
mov
incl
decl
xchg
and
lods
pop
cld
popf
pop
sbb
cwtl
xchg
push
in
push
in
imul
insl
adc
repnz
ret
repz
leave
jnp
xor
mov
leave
out
out
jb
cs
aas
sub
call
nop
aaa
call
in
arpl
cmp
ljmp
jmp
jmp
or
or
in
in
xchg
mov
in
cmp
jb
iret
enter
xchg
lret
add
out
je
mov
lcall
mov
icebp
das
jnp
and
repnz
push
jns
in
std
hlt
hlt
imul
xchg
std
cmc
jns
scas
div
cmp
xchg
testl
std
clc
clc
clc
in
mov
stc
sub
scas
and
cli
mov
sti
sti
fdivrp
add
mov
insl
cld
push
push
fwait
xchg
idivl
shlb
mov
xor
sbb
ss
iret
xor
inc
ret
pop
jp
inc
imull
shll
rcrl
dec
xor
xchg
dec
adc
pop
jmp
adc
stos
pusha
nop
jecxz
xchg
xor
mov
addl
rorl
out
sbb
scas
call
cltd
sti
cltd
and
adc
or
jae
jmp
xchg
daa
and
test
in
cltd
or
adc
push
jmp
xorl
repnz
lock
cmp
cli
or
aas
repz
add
push
mov
inc
jb
stc
dec
push
cmp
imul
mov
xchg
clc
repnz
cltd
jb
push
stc
test
xor
sti
and
movsb
sti
sti
xchg
or
push
lret
sub
cld
jmp
mov
cmp
push
filds
inc
mov
clc
mov
xorl
repnz
jecxz
inc
clc
inc
mov
inc
and
xor
add
or
stos
lret
stos
xchg
fdiv
out
rcll
testl
mov
xchg
push
jmp
sub
nop
mov
rclb
or
mov
mov
repnz
loope
notb
pop
or
ss
repnz
inc
repz
and
test
sub
or
xchg
adc
out
notb
mov
xchg
mov
dec
loope
cmp
xchg
clc
cmp
pusha
sbb
push
inc
test
repnz
cmc
cli
hlt
inc
aaa
inc
mov
xlat
inc
stc
mov
push
lock
push
sub
push
out
mov
sbb
shl
clc
sti
mov
loope
loope
xlat
enter
loop
popa
leave
and
hlt
cmp
xchg
cmpsb
jb
mov
hlt
in
scas
in
pop
pop
repz
leave
or
repz
dec
in
rorl
or
mov
scas
add
ucomiss
int
andb
in
in
leave
or
mov
scas
add
repnz
bnd
test
cmp
mov
icebp
das
xchg
pop
and
les
pusha
pop
repnz
repnz
movsl
test
insb
and
icebp
mov
rcll
icebp
or
jne
stc
pop
xchg
adc
mov
rcll
or
out
lock
mov
sbb
xchg
test
jp
jmp
jns
mov
loope
push
sub
ffreep
push
inc
in
jmp
sub
inc
cmp
cmp
ret
mov
adc
mov
push
mov
imul
and
pcmpeqw
sti
in
bound
jmp
xchg
add
ss
xchg
pop
cmc
mov
and
dec
test
push
inc
int3
dec
push
nop
push
jns
lcall
aaa
or
push
add
cmpsl
fnstcw
adcl
fldcw
push
jecxz
repz
mov
dec
jae
insb
sbb
push
push
aad
out
xor
xchg
gs
dec
outsb
nop
je
repz
mov
adc
sbb
addr16
and
mov
xchg
mov
and
les
stc
jns
inc
cmp
and
movsb
movsb
xchg
pop
mov
fnstsw
xchg
or
dec
jb
ret
xchg
lods
jle
dec
xchg
jmp
xchg
into
mov
repz
push
orb
push
insb
xor
push
push
or
push
push
mov
lock
dec
xchg
push
rcrl
ss
xlat
pop
mov
jecxz
ss
mov
mov
mov
or
sbb
ret
adc
pop
jmp
or
xchg
inc
add
in
pusha
adcb
fsubrl
call
jmp
je
jno
pop
popa
or
pushf
insl
adc
jmp
adc
push
push
shlb
insb
jno
and
xor
mov
cmp
adc
popf
inc
xchg
xchg
je
jno
push
dec
xor
pop
xor
stos
adc
jno
adc
test
adc
hlt
psubsw
cltd
ss
int
mov
sub
dec
sub
add
dec
cltd
test
shr
inc
add
inc
imul
rolb
add
ret
xchg
pop
xchg
xorb
pop
and
scas
lds
inc
mov
jo
xorb
mov
inc
mov
xor
popa
mov
sub
mov
outsb
mov
mov
fwait
dec
nop
mov
adc
scas
and
mov
dec
pop
call
inc
pusha
and
jbe
push
add
push
xor
cmp
loope
dec
mov
inc
sbb
dec
mov
xchg
gs
mov
pop
inc
jmp
fnstenv
and
sahf
popa
test
ds
push
clc
add
or
arpl
movsl
xchg
rol
aas
roll
call
cmp
mov
mov
imul
jg
into
sub
in
dec
nop
mov
dec
xor
xlat
lahf
leave
lods
and
sub
sti
iret
les
cwtl
add
stc
in
and
lahf
push
xor
xor
or
nop
aam
stos
cwtl
imul
dec
and
fidivrs
and
movsb
sti
add
pop
cs
mov
in
adc
dec
xorb
psubw
and
pop
add
mov
jmp
test
or
sbb
adc
dec
adcb
in
fstl
adc
popa
int
je
xor
fdivs
mov
hlt
push
imul
or
daa
cwtl
pop
out
or
sbb
aam
or
lahf
test
aaa
rcl
cmp
pushf
pop
aad
dec
out
jmp
dec
aaa
imul
inc
sahf
cmp
cmp
cmp
sub
sbb
movsb
push
or
repnz
cld
push
out
dec
inc
push
xor
fsubrl
mov
lahf
mov
dec
repz
xor
rcrb
push
lahf
adc
adc
in
shlb
test
push
and
dec
sbbb
or
pop
jmp
fbstp
lahf
inc
nop
lret
mov
subl
push
data16
inc
and
cmp
cmc
add
sbb
sbb
or
fs
adc
xor
or
imul
gs
sahf
push
stc
aaa
or
iret
dec
sahf
loopne
int3
xor
xchg
fcompl
das
or
xor
push
mov
and
add
ds
add
int3
xor
les
lahf
aam
jmp
push
mov
and
les
inc
nop
dec
movsl
cltd
pop
cwtl
test
mov
xchg
sbb
xchg
xchg
xor
outsl
rorl
popf
int
mov
push
push
cmp
imul
and
lods
and
pusha
addl
arpl
rcrb
ds
push
xor
aaa
mov
in
lds
in
pop
mov
fcmovnb
or
dec
inc
xchg
dec
inc
xor
les
hlt
mov
mov
mov
ficompl
mov
popf
inc
call
aaa
adc
inc
push
push
test
jecxz
mov
lcall
or
sub
or
dec
cmp
jle
adc
lds
push
popf
add
add
and
mov
std
or
mov
mov
adc
xor
or
dec
lods
jo
mov
pusha
adc
jle
movb
mov
or
dec
and
cmp
loopne
aam
nop
sahf
sub
add
sub
or
mov
sub
jmp
mov
xor
shlb
add
nop
adcb
inc
sbb
test
lcall
fistpll
sti
shr
data16
data16
loope
test
or
test
pop
iret
dec
int
bound
or
cmp
xlat
jl
popa
aas
ss
xor
inc
pop
mov
add
xchg
pop
sbb
xor
jno
inc
loopne
out
xchg
cmp
or
xchg
cmp
xchg
cwtl
cmp
sbb
xor
sbb
add
dec
cmpsb
pop
jmp
push
push
inc
mov
cmp
test
sbb
pop
movsb
movl
movsb
loope
cmp
mov
push
xchg
mov
push
mov
and
movsb
add
dec
mov
mov
and
xor
movsb
mov
or
push
mov
jl
gs
mov
xchg
lods
nop
adc
mov
inc
xor
xchg
subl
sbb
nop
sbb
rorl
mov
cmp
push
add
or
sbb
dec
push
test
rcrb
pop
xor
sub
or
aam
inc
sub
inc
sub
lret
mov
call
clc
mov
mov
sbb
cltd
xchg
dec
lahf
call
call
sub
push
cmp
sub
push
xlat
lods
push
dec
je
sbb
mov
and
pop
insb
fwait
sbb
ljmp
je
rcl
subb
data16
aam
sbb
add
mov
dec
inc
sub
cltd
xchg
pop
sub
sub
mov
dec
inc
andl
add
insb
mov
sub
mov
int3
xor
fs
xor
jbe
cmpsb
mov
pop
lds
test
rorl
shrl
outsb
cmpsb
mov
cmp
imul
sub
nop
xchg
cmpsb
sub
ss
mov
mov
imul
or
inc
mov
cmpsl
adc
shrb
or
mov
xor
shlb
shlb
sbb
jmp
sub
sbb
jo
lods
sub
xchg
jmp
icebp
sub
or
cwtl
imul
xor
cmp
sub
push
or
inc
mov
push
or
cmpsb
mov
sub
rcrb
xor
xor
mov
imul
adc
fwait
jno
xor
nop
mov
js
lods
std
pop
movsl
test
xor
push
add
imul
popa
addr16
pop
shr
lds
rcl
rcr
push
enter
cmpb
sub
lds
pusha
and
pusha
cmpsb
and
xchg
mov
or
shrb
sub
rclb
xor
nop
aam
popa
int3
inc
inc
push
cs
into
rorl
mov
stos
mov
fiaddl
inc
sbb
rorb
adc
dec
inc
es
ffreep
sub
and
fldl
pop
sbb
sub
sub
push
aam
xchg
dec
inc
sub
sub
xchg
imul
data16
pop
sbb
push
pusha
cmpsb
sub
inc
negl
call
and
or
xor
rolb
scas
add
int3
sbb
lock
arpl
addr16
cmpsl
inc
insb
or
dec
stos
pop
or
or
pop
jbe
add
pop
fucom
pop
mov
fwait
imul
imul
sub
aad
cmp
fsubrl
push
or
sbb
call
sub
popf
push
orl
rcll
nop
mov
repnz
fisubrl
add
sti
lret
outsb
sbb
cltd
xchg
mov
lock
jbe
in
push
jo
movsb
cmp
pusha
and
pop
cmp
sbb
push
cmp
mov
xchg
imul
jp
out
dec
pop
rol
dec
push
inc
pop
mov
sbb
push
pop
xor
movsl
cltd
xchg
jge
mov
cmpsb
mov
call
adc
movsb
sahf
imul
xor
jg
jo
ret
dec
sub
jns
sub
sub
enter
xor
cmp
enter
inc
push
loop
enter
dec
pop
cmp
dec
and
data16
adc
or
call
adc
push
push
jo
pop
cli
jo
cli
cmp
cmp
dec
inc
dec
xchg
sub
xchg
push
jno
ds
std
xchg
icebp
leave
jmp
xor
mov
imul
and
es
aaa
dec
or
aam
daa
icebp
mov
repz
mov
in
pop
xchg
je
out
mov
or
add
cltd
mov
out
push
mov
push
pop
add
jnp
pop
ret
sub
fucomi
inc
push
mov
inc
push
jb
outsl
sbb
jmp
jbe
inc
dec
popf
subl
lods
cmpsb
and
dec
add
popf
test
jbe
mov
ja
mov
ja
imull
int3
add
subb
inc
dec
inc
pop
enter
and
or
loopne
pop
push
cmp
mov
pop
rcl
mov
inc
push
shll
inc
jnp
add
jae
mov
nop
add
les
sbb
and
mov
loop,pn
cmp
and
jo
sub
test
or
sbb
dec
cmp
cmp
das
mov
sbb
push
inc
dec
cmp
sub
dec
mov
mov
js
test
sbb
mov
jmp
mov
push
dec
insb
cmp
cli
xchg
movsb
dec
sbb
fsubrl
dec
xor
jb
cmp
add
in
dec
cwtl
xchg
inc
cmp
inc
push
xchg
jb
dec
push
add
shlb
push
out
or
add
mov
stos
push
rolb
jl
cvttps2pi
cli
stc
adcl
mov
or
pop
mov
pop
test
pop
sub
push
xchg
and
xchg
nop
push
xor
orb
add
mov
inc
pop
fwait
imul
add
xchg
hlt
out
or
inc
enter
jae
adc
pop
loopne
inc
add
notb
and
daa
add
cli
testb
pop
jle
data16
or
mov
inc
mov
sbb
call
or
inc
inc
pop
jp
and
jbe
fimuls
and
or
mov
in
cmp
mov
inc
cmp
or
push
cwtl
popf
inc
push
shll
and
testb
sbb
inc
xchg
ret
jb
idivb
inc
rcrb
sub
mov
fnsave
dec
iret
rcrb
shll
ffree
insl
inc
inc
sub
addl
mov
mov
xchg
test
inc
fldl
scas
fistl
out
sbb
xor
loopne
inc
mov
nop
inc
jbe
rorb
loopne
lcall
dec
imul
mov
cmp
cs
call
pop
mov
sbb
xchg
lahf
pop
dec
mov
jne
dec
mov
xchg
imul
rclb
xchg
and
clts
pop
cmp
mov
xchg
and
or
pop
mov
dec
inc
fnsave
push
inc
call
mov
dec
inc
cs
lea
adc
nop
fs
test
jmp
mov
push
test
mov
mov
xchg
nop
shll
push
mov
lcall
test
and
mov
mov
pop
adc
movsl
insl
fdiv
outsb
jae
loop
add
push
cmp
adc
add
jmp
loop
call
sub
cmpsl
pop
movsb
add
incl
jl
je
xchg
mov
mov
call
sbb
sbb
cmp
icebp
xchg
or
notb
and
xchg
or
test
loope
add
mov
test
pusha
addl
pop
enter
gs
jo
jns
push
cmp
xor
cmp
sub
repz
mov
lods
out
call
adc
add
arpl
loopne
movb
or
sbbl
mov
sub
ljmp
mov
or
inc
inc
pop
adc
repnz
cs
mov
nop
inc
ljmp
incl
jb
dec
in
push
mov
inc
mov
xor
push
inc
add
pushf
inc
pop
imul
aam
push
ss
lcall
sbb
add
fdivl
xor
test
gs
dec
or
jne
mov
movb
mov
repz
jne
insb
cmp
add
cmp
or
incb
inc
jmp
dec
jmp
xor
push
add
inc
adc
fidivs
add
inc
pop
je
mov
es
rcrb
add
cmp
shlb
pusha
xor
mov
idivb
andb
pop
cld
pop
rorl
adc
push
inc
movsb
test
dec
je
cld
sbb
and
and
cmp
leave
or
push
mov
sbb
add
xor
je
xor
inc
jmp
add
fdivrl
arpl
jmp
xchg
xchg
cwtl
mov
jo
gs
mov
nopl
lds
adc
enter
add
loop
sbb
pusha
sub
andb
xor
shl
loopne
mov
insl
and
lock
cs
lea
call
push
loope
push
mov
cmpsb
push
lret
pop
inc
shl
addps
inc
jb
cmp
repz
pop
fscale
fisubrs
jge
push
push
or
adc
fstl
sahf
push
or
aam
gs
rdmsr
pop
sbb
incl
ja
cmp
xor
sbb
adc
add
ret
push
sar
inc
push
adc
jl
call
rcrl
dec
sub
cmp
mov
insl
jns
int
push
hlt
dec
sub
jo
sub
fcomip
inc
adc
sub
or
xor
adc
test
mov
mov
rorb
and
sbb
lea
push
dec
addr16
lea
sbb
add
pop
add
filds
cmc
scas
add
subb
call
clc
mov
mov
add
sahf
jmp
les
push
cmp
ja
mov
das
out
mov
sub
das
or
and
fcmovbe
cmp
movups
push
cltd
sarb
das
lret
add
xor
fsubrl
lret
shlb
push
add
mov
inc
xchg
xor
push
xor
mov
fldl
xor
lret
pop
movsb
aam
ds
loopne
pop
adcb
iret
mov
push
xor
gs
jnp
dec
stos
stc
insl
rorb
in
mov
fadds
pop
cs
call
scas
stos
popa
xor
or
dec
jbe
xlat
cmc
fists
adc
inc
push
in
mov
xlat
sbb
mov
mov
popa
rclb
insl
mov
movsb
dec
pop
dec
inc
pop
rorb
inc
les
imul
xchg
sub
adc
push
dec
add
or
push
lea
fcoml
dec
mov
jb
jge
xchg
insb
dec
xor
push
jbe
sar
nop
pop
add
pop
add
push
stc
fcoms
pop
inc
xor
pop
rcl
pop
ret
add
popa
jo
dec
int
fdivl
mov
push
pusha
int3
push
int3
les
or
add
push
loopne
lods
es
popf
dec
call
mov
test
adc
je
adc
xorl
push
adc
pop
jmp
xchg
inc
sub
push
jg
add
popf
inc
outsb
ja
sbb
dec
movsl
add
movl
pop
pop
repnz
rclb
ljmp
xchg
cmpsb
js
or
cmp
cmp
push
enter
je
lsl
and
loopne
and
stos
pop
data16
mov
jle
or
sbb
pop
btr
and
dec
in
adc
jns
dec
inc
push
mov
incl
pop
mov
stos
mov
mov
fs
jns
xor
cwtl
add
inc
sbb
shlb
adc
add
mov
mov
or
js
jns
shll
pop
cmp
xor
jns
addb
xor
xor
nop
add
push
ret
or
push
mov
jp
or
push
xor
add
xchg
adc
push
mov
xchg
pop
inc
mov
or
fistps
pop
sbb
xor
and
push
jmp
enter
fdivl
xor
lcall
add
and
xor
sub
inc
push
cmpsb
cmp
roll
add
sub
mov
add
sbb
sbb
mov
pushf
mov
add
out
add
mov
mov
xchg
mov
jge
lea
add
add
jecxz
movsb
xor
mov
sub
inc
sbb
aaa
cmpsb
sbb
loope
push
add
pop
sub
lock
push
push
arpl
inc
cs
loopne
jb
xchg
jo
rorb
dec
adcl
ret
sbb
leave
inc
inc
xchg
xchg
push
inc
dec
adcl
mov
inc
xor
pop
rol
add
fsub
lods
mov
adc
fwait
pop
nop
scas
rcrl
mov
and
in
and
inc
in
nop
and
add
lods
cmp
and
dec
mov
in
sarl
jle
add
add
sbb
cmp
test
fsubrp
and
sub
cmp
je
sub
push
daa
pop
pop
sbb
outsl
and
sbb
jb
xchg
or
sbb
xorb
lea
add
add
and
pop
add
jl
ja
xor
push
popf
fstpt
pop
xchg
addb
mov
push
xor
or
test
sbbb
sub
jne
cmp
xchg
dec
adc
xchg
sbb
into
cmpsb
mov
push
dec
call
in
mov
lock
add
ss
pop
and
xchg
adc
adc
test
jbe
xchg
mov
add
in
pop
adc
jge
fdivrs
mov
xchg
mov
xlat
inc
rolb
je
sahf
out
rcrb
mov
outsl
mov
mov
xlat
fsubrs
lea
inc
inc
popa
add
mov
cltd
sbb
add
addr16
adc
mov
add
dec
inc
popa
inc
addr16
sub
cmp
cmp
push
call
test
addr16
mov
sbb
rolb
add
or
lods
cmp
rorb
cmp
xchg
call
es
xor
mov
sub
ror
or
mov
mov
sub
mov
leave
fnstsw
pushf
es
mov
mov
inc
sub
dec
lods
mov
daa
jl
ss
loop
and
pop
movsb
test
or
icebp
or
icebp
mov
int3
push
pop
orl
cmpsb
jo
push
dec
fstps
dec
movl
dec
dec
pop
mov
imul
out
add
dec
out
insl
dec
dec
and
dec
inc
or
mov
jbe
loope
aam
pop
call
movsb
push
dec
dec
hlt
push
mov
cmp
jns
sub
push
xchg
nop
cmp
mov
mov
xor
pop
jns
inc
dec
ret
and
jns
xchg
rclb
jns
hlt
and
stos
cmp
out
test
and
mov
push
add
aad
into
addb
inc
js
dec
push
call
inc
mov
push
xchg
nop
roll
sub
cmp
adc
call
cmp
stos
dec
jns
int
lods
aaa
push
xchg
sarb
xor
dec
inc
inc
jns
movsb
mov
lds
pop
loopne
jns
xor
xor
adc
scas
adc
arpl
int
rolb
inc
or
movsb
mov
cmp
adc
mov
arpl
loope
inc
jns
std
xor
mov
jns
fadds
cmp
pop
or
adc
enter
jns
fcomi
mov
test
jns
inc
adc
adc
jns
inc
inc
and
adc
or
jns
xor
pop
and
jns
and
xchg
das
test
mov
push
and
jbe
mov
test
cmpb
shlb
mov
lcall
test
enter
inc
inc
andl
push
mov
mov
push
jns
inc
add
or
mov
hlt
adc
jns
test
inc
and
and
aaa
mov
mov
mov
adc
test
sbb
mov
jg
stos
dec
call
andb
xchg
sbb
add
xor
sbb
sbb
fldcw
call
mov
out
mov
sub
int3
lds
test
dec
aam
and
sbb
test
and
mov
push
and
mov
and
ficomps
jecxz
mov
loop
adc
push
aam
adc
pusha
cmp
test
or
sbb
out
cmp
call
and
cmp
and
cwtl
mov
mov
and
pop
addl
jb
stos
inc
insl
mov
mov
dec
xchg
jbe
call
enter
pop
pusha
stos
fs
pop
and
test
push
leave
rolb
cmp
mov
cmp
dec
and
dec
ss
les
loop
sub
inc
stos
fs
leave
nop
pop
clc
cmp
cmp
xor
dec
popf
sub
pop
cwtl
cmp
add
lret
push
xchg
or
arpl
sbb
dec
repz
inc
xchg
or
loope
or
rcrb
xchg
push
fiaddl
pop
mov
cmp
or
call
sbb
xor
das
mov
inc
loop
ret
cs
aas
loopne
and
das
xchg
push
xchg
sarb
call
or
xchg
pop
pop
and
jb
cmp
cs
lsl
hlt
add
push
xchg
and
push
ret
pop
cmp
and
xor
shlb
and
cmp
jg
inc
mov
xchg
das
xlat
xchg
and
inc
das
call
mov
and
fdivr
das
xchg
and
rcl
fs
mov
add
mov
adcb
das
mov
das
mov
sbb
cmp
ret
out
and
add
jae
pop
mov
es
dec
pop
inc
fs
addr16
enter
jae
hlt
sbb
mov
inc
pop
sbbb
leave
jle
and
rolb
pop
nop
mov
mov
pop
enter
enter
and
jp
pop
xchg
or
sbb
shrb
mov
pop
jmp
fsts
mov
cmp
xchg
pop
ss
adc
xchg
sbb
sub
mov
in
mov
xchg
testl
adc
mov
mov
imul
pop
in
xor
mov
adc
xchg
je
sbb
inc
push
mov
lock
or
push
push
inc
in
push
lods
ret
inc
adc
es
jnp
push
cwtl
nop
dec
push
push
adc
mov
push
mov
or
shrb
pusha
cmp
push
popa
inc
push
aas
loopne
test
push
pop
addr16
stos
ret
push
and
sbb
test
mov
rorb
cmp
bound
call
into
jp
outsl
nop
test
mov
popa
inc
orl
push
mov
push
push
pop
adc
mov
jge
dec
sub
int3
je
fldcw
dec
enter
inc
xchg
mov
xchg
test
fnsave
stos
sub
push
test
and
popa
inc
aaa
and
push
xor
popf
pop
ss
jbe
adc
dec
aam
or
inc
lret
pop
ret
repnz
aas
xor
unpcklps
das
push
jge
add
call
maxps
adc
call
xor
clc
repnz
xchg
lret
xor
lock
call
xchg
sar
cmp
fdivr
int
das
jg
and
dec
call
das
pop
decb
movsb
lods
andps
movsl
pop
call
in
xchg
xchg
pusha
call
push
jl
insb
call
je
gs
pop
adc
popf
das
jl
push
std
mov
sbb
cmp
xchg
dec
in
xor
push
cs
adc
in
cli
lret
movsb
imul
and
adc
dec
in
mov
je
out
or
shlb
xchg
mov
push
mov
mov
push
dec
in
push
in
inc
aam
push
mov
hlt
es
xchg
dec
in
sbb
adc
add
mov
leave
or
rcrb
out
leave
gs
loope
adc
adc
sbb
xchg
lret
sbb
and
sub
xchg
lret
xor
jae
jb
pop
cmp
pop
xchg
push
xchg
lret
inc
gs
dec
pop
mov
xor
push
xchg
dec
in
adc
or
pop
add
and
and
mov
inc
mov
insb
and
data16
sbb
jo
xor
sahf
inc
inc
out
cld
pushf
and
mov
jbe
std
je
data16
js
xor
daa
push
adc
inc
xor
mov
xorb
daa
int
dec
test
and
and
cli
cmp
jb
mov
daa
int
inc
test
inc
adc
pushf
xor
mov
cli
mov
rcrb
dec
mov
and
shlb
inc
mov
popf
push
arpl
loopne
add
shlb
xchg
je
aam
inc
add
lcall
inc
inc
mov
sub
stos
insb
adcb
mov
lods
mov
rorl
sbb
push
stos
mov
pop
stos
pop
and
inc
and
scas
mov
adc
stos
mov
mov
inc
mov
aaa
or
add
or
aaa
sbb
dec
xlat
aaa
dec
fdivs
xor
dec
add
cmp
cli
cs
pop
adc
xchg
or
mov
pop
call
cltd
inc
add
mov
inc
push
negb
add
movsl
xor
inc
add
popa
fsubrp
orb
dec
dec
or
adc
movsb
jg
xchg
jp
ret
push
mov
xchg
pop
mov
sbb
je
frstor
and
mov
aad
or
mov
add
andb
jo
shlb
cmp
inc
mov
or
pop
mov
aad
mov
dec
cmp
mov
xor
or
push
pop
push
rclb
or
inc
or
jno
add
inc
aad
push
fs
adc
cs
add
xor
mov
divl
adc
or
and
repz
jp
loop
add
inc
push
movsb
aad
sbb
or
adc
push
jmp
fs
ret
mov
pop
sbb
push
stos
mov
sbb
mov
jne
sbb
lods
mov
outsb
dec
aam
mov
frstor
inc
dec
xchg
inc
mov
mov
sbb
mov
pop
fiaddl
pop
mov
cmpb
test
xor
pop
adc
sbb
rclb
aad
repnz
in
push
xchg
sub
pop
mov
cltd
push
loop
adc
mov
mov
dec
jmp
xchg
mov
sub
adc
lods
pushf
dec
leave
or
push
cmp
adc
cmpsl
sub
out
mov
jo
push
call
mov
mov
stos
dec
push
ret
loopne
lret
inc
orb
xor
dec
adc
adc
cltd
xchg
test
jmp
sub
adc
cmp
adc
jmp
xchg
out
sub
adc
lret
daa
add
add
ret
push
cltd
xchg
repnz
xor
xor
and
cmpsb
adc
cwtl
mov
sub
xor
adc
loope
xor
jb
ds
sbb
pop
shlb
dec
dec
dec
popa
and
adc
out
and
mov
cmp
cwtl
and
je
ljmp
orb
inc
and
xchg
adc
fstl
and
cmp
mov
lods
cmp
or
cmp
arpl
cmp
adc
push
cmp
roll
push
lret
les
cmp
leave
lods
inc
mov
pop
clc
testb
xchg
add
lret
int
nop
inc
gs
addr16
nop
sbbl
ja
inc
gs
inc
dec
lret
ja
adc
nop
shll
push
inc
cwtl
jmp
adc
mov
lds
cmpl
orl
dec
pusha
and
nop
mov
inc
nop
or
xchg
mov
int
pop
pusha
sbb
mov
nop
test
push
lods
loopne
inc
add
mov
rclb
push
mov
mov
or
push
dec
repz
adc
and
or
dec
cs
push
mov
int
je
add
jge
sbb
mov
xor
and
push
adc
or
pop
add
jnp
dec
push
push
daa
mov
cmp
inc
add
stos
xor
add
mov
xchg
imul
ljmp
aaa
rorb
lods
dec
or
ja
imul
imul
outsb
mov
lock
cmpsb
popa
pop
test
add
xchg
pop
pushf
jbe
pop
inc
cmp
adc
aaa
adc
pushf
push
aaa
mov
mov
inc
cmpsl
add
lods
dec
or
sub
ljmp
nop
roll
lock
aam
mov
add
sub
inc
mov
test
imul
fs
add
mov
mov
sub
mov
ret
int
out
je
or
add
adc
mov
add
iret
and
dec
adc
dec
inc
add
and
test
mov
sbb
jno
iret
mov
sarb
bnd
inc
icebp
sbb
fstl
addr16
sbbb
cs
imul
jle
mov
and
dec
out
nop
jp
cwtl
nop
sbb
or
loope
adc
mov
hlt
jbe
addr16
inc
sbb
mov
xor
addr16
fimull
enter
push
pop
ret
add
cmp
sbbl
push
fstl
pop
scas
push
push
imul
push
pop
nop
add
sbb
xor
pop
sahf
cmp
pop
mov
out
add
pop
dec
push
addl
fcompl
push
imul
xchg
cmp
mov
push
pop
sbb
popa
fldcw
sub
jo
add
sbb
imul
sbb
cmp
jo
jns
in
jb
popf
inc
inc
adc
mov
xor
mov
push
out
mov
jns
adc
scas
dec
push
js
mov
loopne
or
sahf
jg
push
pop
call
and
dec
push
mov
repz
imul
test
movsb
fst
xor
repz
add
pop
mov
sbb
repz
xchg
dec
jmp
xor
jmp
mov
pop
and
jo
mov
mov
sahf
flds
cwtl
mov
mov
or
sbb
xor
push
pop
xchg
adc
repz
xchg
aam
sub
lahf
sbb
push
lret
repz
xchg
add
lahf
pop
xchg
pop
pop
fdivl
cmp
repz
mov
mov
mov
sahf
sbb
test
and
push
sbb
hlt
jecxz
push
or
sub
push
mov
inc
inc
out
fwait
jg
mov
sub
testb
popa
push
popf
mov
mov
mov
or
push
call
mov
fdivrs
rorb
xor
and
adc
subl
or
and
stos
mov
cmpsl
insb
movsl
hlt
or
les
mov
inc
sub
mov
add
ja
fistpl
adc
rolb
push
sub
test
subb
ss
test
inc
or
jb
push
inc
adc
sub
add
sub
fwait
mov
ljmp
or
ret
repnz
xlat
fwait
push
gs
pop
inc
jnp
add
sub
dec
mov
dec
out
jb
adc
xchg
fwait
jle
push
dec
jge
adc
jb
and
and
insl
adc
adc
jnp
push
adc
push
jnp
cmp
xor
cmp
lock
enter
roll
mov
sub
ret
sti
lcall
adc
xlat
ret
dec
lods
add
pop
icebp
in
and
stos
xchg
or
or
mov
data16
and
dec
mov
lret
ffree
dec
and
or
xchg
xchg
das
daa
pop
pusha
cmp
cltd
mov
cmpsb
dec
mov
cmp
cltd
inc
and
inc
push
xchg
xchg
cltd
adcl
inc
adc
je
xchg
push
or
mov
dec
xor
jmp
rorb
and
inc
and
add
mov
les
dec
iret
iret
movups
sbb
add
sahf
cmpsl
stc
cmp
out
sbb
ret
sahf
out
sahf
mov
push
repz
out
sub
or
sbb
cmp
call
add
push
lods
push
mov
sahf
out
push
inc
push
push
sub
push
nop
cs
repz
movsb
push
push
xchg
jl
push
inc
repz
je,pt
push
iret
dec
cmp
sbb
repnz
out
lcall
mov
jle
push
pop
into
sbb
incb
add
repz
push
loop
sbb
out
aam
mov
repz
pusha
sbb
pushf
stc
cmp
repz
lret
or
out
sahf
cmpsl
and
pop
data16
out
sahf
jb
nop
sahf
lods
mov
sahf
out
rcr
in
decb
dec
jecxz
fidivs
push
inc
push
rcr
out
dec
out
jb
jle
sahf
mov
daa
mov
loop
clc
adc
sub
cmp
sahf
out
int3
aaa
je
fs
push
cmp
sahf
notl
adc
daa
pop
mov
jbe
mov
xchg
lahf
jae
jbe
push
cwtl
cmpsl
lods
int
outsl
insl
mov
iret
dec
test
sbb
repz
add
jbe
push
scas
test
addb
adc
subl
pop
jo
and
pop
dec
cltd
addr16
jle
sub
mov
divl
stos
dec
push
je
shrl
pop
outsl
subb
mov
ja
pusha
inc
adc
and
lahf
mov
out
fsubs
out
or
lret
in
xlat
js
xor
xor
sbb
xor
sbb
outsl
ss
mov
mov
push
pop
or
addr16
bound
pop
js
movb
or
xor
mov
mov
mov
es
dec
cmp
lds
outsb
aas
das
in
inc
pop
dec
imul
mov
xchg
dec
lods
pop
and
outsl
inc
mov
and
add
ret
push
pop
or
jnp
jbe
and
imul
and
adc
and
lret
and
outsb
cs
outsl
dec
mov
data16
add
jnp
fwait
test
das
cmp
mov
jg
sbb
sarl
ret
sbb
xor
incl
arpl
push
dec
inc
push
push
inc
push
inc
pop
inc
outsl
outsl
xchg
jns
pop
rorb
ret
xchg
jb
inc
mov
gs
subb
pop
dec
mull
lods
pop
dec
imul
mov
pop
inc
jne
outsb
je
or
mov
js
divb
lret
inc
inc
xor
jg
ljmp
sub
sub
inc
inc
xor
xor
xor
jge
negb
mov
inc
xor
xor
ss
jb
in
xor
cmp
fdivl
cmp
xor
clc
inc
inc
xor
mov
aam
popa
xchg
test
jnp
orb
jne
test
push
jo
or
femms
inc
push
fidivrs
cmp
mov
xor
or
push
and
sti
cmp
aaa
adc
xor
inc
pop
dec
pop
and
xor
jl
movsl
xchg
ss
arpl
mov
sahf
inc
push
inc
push
dec
and
fsubrs
sti
cmp
ss
pushf
xor
add
push
adc
outsl
mov
dec
mov
cvtpi2ps
scas
push
push
gs
pop
inc
dec
hlt
imul
ficoml
pop
push
call
push
inc
out
adc
push
out
lcall
adc
inc
mov
lods
sahf
add
jns
out
movd
hlt
pop
push
rol
fisttps
sbb
inc
xor
add
adc
test
and
outsl
xor
imul
dec
mov
mov
js
push
lds
inc
cmp
popf
and
mov
inc
cmp
sbb
loope
enter
add
fisttpl
or
inc
cs
xchg
push
inc
sub
push
pop
or
insb
mov
xchg
mov
mov
and
outsb
ret
lret
sahf
cmpsb
testb
dec
inc
xor
or
inc
adc
cmp
in
add
or
or
add
lods
loopne
jg
jp
ss
and
stos
inc
scas
mov
push
and
fldl
imul
imul
or
push
xchg
loopne
jns
hlt
push
pusha
add
fs
in
push
imul
push
jo
adc
mov
add
add
jae
xor
movsb
inc
pop
or
pop
dec
jae
scas
jg
mov
pop
inc
cs
push
push
push
add
and
ja
adc
jnp
shlb
insb
loop
mov
popa
imul
or
cmc
sbb
data16
fdivl
xorb
xchg
or
and
pop
push
mov
add
or
inc
rolb
add
adcb
inc
aas
inc
push
add
test
loope
jbe
sbb
push
dec
rorb
test
cmpsl
lods
and
xor
add
adc
push
pop
cmpsl
mov
andl
jns
adc
orb
or
add
fdiv
xor
mov
das
push
adc
repz
and
push
sbb
imul
sbb
repz
sbb
std
sbb
push
das
out
mov
nop
cld
and
lcall
jns
stc
jp
jns
out
push
cld
fdivr
mov
cmpsl
xchg
xor
out
les
popa
sub
mov
or
jl
and
outsl
push
xor
push
and
rcrb
add
popa
ja
pushf
out
ds
cmp
adc
or
xor
adc
add
adc
jns
out
push
cld
or
in
out
sahf
out
les
sbb
pushf
push
xchg
call
cmpsl
nop
mov
mov
cmp
insb
push
sahf
negl
push
push
dec
cmp
jns
dec
inc
inc
cmp
xor
cmp
repz
and
iret
repz
sbb
adc
or
sahf
out
cmp
add
or
hlt
jns
out
call
out
sahf
out
nop
jo
xor
repz
adc
pop
int3
mov
insb
cmp
repz
sub
adc
jns
cmpsl
stc
cld
push
fcom
les
js
sub
iret
repz
aam
mov
out
sbb
cld
add
call
add
jno
cwtl
jl
les
les
pop
and
push
cltd
aas
pop
or
bound
clc
xchg
inc
rorb
push
in
add
adc
lret
sub
adc
add
adc
push
inc
dec
cmp
fiadds
push
imulb
sub
mov
mov
add
mov
jecxz
sbb
sbb
jo
aas
mov
and
bound
das
xchg
dec
adc
aas
push
sbb
cwtl
push
mov
push
ja
mov
mov
push
jmp
bound
mov
shrl
pop
data16
mov
and
inc
pop
addl
sbb
add
stos
icebp
call
mov
pushf
andb
rolb
ret
jns
mov
add
xor
cmp
pop
push
inc
push
xor
xchg
cld
inc
inc
mov
jnp
out
icebp
inc
mov
add
mov
jne
pop
inc
add
push
stc
sbb
fs
das
or
imul
cmp
arpl
imul
pop
jb
xor
icebp
jo
push
or
cs
daa
add
jo
bound
mov
xor
daa
add
push
push
insb
das
inc
jns
sub
iret
outsl
jl
add
mov
ja
lahf
loopne
mov
das
loopne
fwait
cmp
sbb
and
mov
addr16
mov
test
ret
sbb
shr
jl
mov
insb
pop
enter
sarb
jg
fdivrs
cmp
mov
les
mov
ret
sete
cmp
pop
enter
jg
jbe
data16
add
and
fmuls
jns
pop
popf
inc
pop
in
rcr
cmp
xor
push
lcall
lret
clc
cmp
test
adc
or
jl
in
lds
push
xchg
sbb
inc
call
mov
adc
or
mov
xor
and
push
sbb
jmp
mov
in
rorl
iret
dec
mov
leave
fcmovnbe
mov
aas
jbe
mov
imul
aam
lods
xor
insl
insb
adc
fs
loopne
jns
ficoml
dec
adc
repz
daa
popf
mov
lock
enter
mov
loope
cwtl
xchg
imul
test
lea
icebp
movsb
mov
dec
pop
add
iret
test
imul
fadds
ltr
mov
fidivs
push
lcall
or
loope
and
mov
les
push
push
add
push
outsl
ja
xor
pop
pop
test
xor
mov
push
sub
add
jno
fadds
out
daa
movsb
and
pop
arpl
push
inc
repnz
xor
lods
mov
xor
fucomip
cmc
rclb
mov
mov
bound
push
xor
xor
push
jb
outsl
and
mov
insb
jae
arpl
adc
outsb
push
add
push
imul
ss
push
mov
jae
in
insb
push
push
jae
push
adc
xchg
mov
push
sub
xchg
hlt
push
mov
test
add
mov
out
adc
mov
jecxz
inc
cmp
addb
adc
shll
fs
xchg
popa
xorb
jno
add
push
mov
movsb
jo
pop
das
push
mov
mov
push
jo
jb
jns
xchg
mov
dec
imul
xor
roll
push
push
lods
cmpsl
xor
xchg
imul
push
sbb
imulb
push
jnp
dec
aaa
adc
ja
dec
popa
jge
and
call
pusha
inc
and
dec
enter
inc
fiaddl
das
imul
mov
mov
add
pop
add
inc
shll
ja
inc
add
adc
push
fbld
jne
ds
cmp
or
insl
popf
cmp
sub
xchg
mov
jp
push
aaa
cs
es
pop
push
scas
xor
lea
xchg
and
fs
jo
xlat
push
nop
pop
ds
fs
ja
inc
inc
lahf
xor
iret
mov
dec
or
nop
jo
push
ds
pushf
cltd
inc
cs
jle
loope
adc
jle
and
push
jo
loope
call
rcr
dec
rcrl
adc
ret
inc
gs
loopne
add
add
push
jnp
aas
das
pop
outsl
mov
fdivl
mov
inc
add
sbb
sub
xor
sbb
push
scas
mov
addb
dec
dec
pop
sub
mov
inc
jns
pop
roll
xchg
fs
lds
xor
and
mov
in
and
push
outsl
cmp
xchg
in
xchg
mov
dec
and
roll
sbbb
push
push
popa
in
pop
sbb
cmp
loopne
push
cmp
cwtl
lret
mov
rolb
insl
imul
push
mov
out
add
adc
mov
inc
jmp
fnsave
or
das
push
mov
rcr
aaa
dec
inc
dec
pop
or
aas
push
and
sbb
inc
xchg
popa
out
jnp
push
je
inc
sbb
pop
sub
sarb
push
inc
jp
mov
push
iret
add
jo
add
add
cmp
outsl
inc
pop
push
or
push
and
jo
sub
jo
ds
xor
jl
dec
pusha
push
jo
jno
fldcw
pop
cmp
loopne
arpl
scas
into
pop
roll
dec
adc
in
xchg
adc
loope
ljmp
dec
imul
add
iret
dec
pop
pop
cwtl
pop
add
lret
xchg
into
out
outsl
cmpsl
das
jnp
inc
cmpsl
add
push
mov
addb
pop
imul
push
push
and
in
imul
jns
bound
sbbl
inc
jae
adc
add
je
add
add
jl
out
xor
and
xor
xor
pop
test
pop
loope
pop
push
sarb
into
insb
mov
push
add
mov
mov
mov
imul
fbld
lret
fbld
pop
push
sbb
inc
mov
scas
std
fwait
xchg
imul
pop
and
inc
cwtl
aam
int
icebp
jmp
jecxz
xchg
cmp
aam
or
jo
lret
jae
or
add
mov
add
jns
pop
filds
pop
push
insb
push
sbbb
popa
fsubrs
xchg
push
punpcklbw
popf
cs
and
pop
repnz
add
jecxz
repnz
jns
cmp
test
test
incl
xlat
pop
shrb
mov
mov
in
add
inc
cmp
inc
fsubrs
sti
fsubrl
imul
xor
inc
pusha
jmp
pop
pop
sarl
hlt
mov
xchg
add
or
mov
adc
add
push
and
and
or
sub
outsl
adc
daa
sbb
jns
adc
add
repz
repz
out
lock
cmp
enter
mov
jns
idivl
movsb
pop
mov
sahf
out
nop
mov
jo
pusha
push
pop
push
inc
cmp
repz
xor
sbb
pushf
out
adc
in
lock
pop
mov
push
fcom
repz
repz
cwtl
iret
repz
mov
cmp
cmp
repz
and
adc
jns
out
add
in
hlt
in
in
jns
out
int3
mov
sahf
out
outsl
xchg
push
mov
js
push
inc
stc
cmp
jnp
jle
sbb
loopne
adc
fcomps
push
xor
push
push
cmp
shrb
repnz
popf
lods
mov
push
mov
sub
incl
pmuludq
sbb
dec
add
shl
xorb
pop
scas
push
nop
push
repnz
data16
fisubs
push
aaa
adc
adc
maskmovq
testl
lret
jbe
or
neg
outsl
add
mov
neg
cmpsb
jg
fs
inc
dec
pop
add
rolb
cmpsl
mov
add
xchg
xor
scas
lds
daa
dec
pop
inc
push
scas
inc
xchg
dec
aaa
dec
mov
inc
jne
sub
inc
inc
subl
orb
addb
cmp
mov
push
pop
jo
add
in
sub
inc
add
ret
cs
mov
and
and
outsb
cmpsl
jbe
xchg
or
jae
push
aaa
push
pop
insl
xor
sbb
insl
jbe,pn
and
call
xor
xor
ds
sub
and
sub
add
outsl
jb
popa
fcoml
imul
mov
jbe
rcrb
cmp
rclb
insb
or
sub
or
pop
or
movups
jne
es
popa
fadds
mov
popa
insb
into
dec
mov
mov
stc
das
sti
adc
sbb
mov
push
inc
add
fcmovnu
add
inc
pop
pop
adc
fistps
fcmovbe
add
les
xor
sbb
bound
loopne
sbb
das
xor
xorb
pushl
add
or
sub
xor
xor
movsb
xor
xor
xor
xor
xor
xor
pushl
xor
xor
dec
xor
xchg
shll
inc
stc
pushl
dec
ss
es
dec
aaa
push
aaa
mov
iret
aaa
call
aaa
adc
mov
jno
cmpb
cmp
cmp
cmp
cmp
cmp
cmp
cmp
lcall
cmp
data16
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
fcomip
out
cmp
cmp
cmp
sub
ret
add
push
lock
idivl
lcall
lea
or
xor
xor
push
xor
pushl
xor
js
popf
xor
xor
xor
xor
xor
paddd
jmp
xor
xor
xor
xor
xor
out
xor
push
incl
xor
xor
xor
xor
xor
fidivl
scas
xor
mov
xor
jecxz
call
xor
mov
ss
ss
ss
ss
aaa
sbb
jno
mov
aaa
loopne
movsb
lods
pop
out
cmp
pop
cmp
outsb
cmp
cmp
cmp
cmp
or
cmp
cmp
cmp
push
cmp
jl
cmpl
decl
cmp
cmp
push
adc
cmp
cmp
cmp
cmp
dec
cmp
cmp
jae
mov
pushf
cmp
fistps
das
jo,pt
test
mov
aas
adc
xor
inc
aas
popa
aas
cmpl
aas
mov
shr
aas
les
into
aas
out
jmp
repz
cmp
pop
xor
xorb
xor
fdivs
fnsave
ljmp
xor
pushl
divb
std
xor
xor
xor
pop
xor
xor
xor
xor
xor
xor
xor
std
ljmp
xor
xor
xor
xor
pop
xor
jo
xchg
xor
xor
jg
imul
inc
xor
xor
xor
xor
xor
bound
push
sub
ss
clc
loop
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
mov
xchg
cmp
cmp
cmp
fcomip
cmp
cmp
xchg
aas
inc
aas
pop
aas
ja
pusha
mov
or
pop
push
or
cmp
aas
clc
lcall
arpl
push
xor
xor
xor
xor
xor
xor
xor
call
cmp
cmpsb
push
xor
xor
lcall
out
xor
xor
xor
xor
test
mov
mov
nop
xor
cli
pop
cld
xor
xor
xor
scas
clc
xor
cmp
jmp
xor
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
das
mov
cmp
jp
cmp
cmp
std
cmp
cmp
sub
xchg
adc
sbb
push
das
cmp
ds
fidivrl
jmp
jg
movd
and
cmp
ss
ss
xchg
cmp
cmp
cmp
iret
cmp
mov
cmp
cmp
cmp
dec
aam
push
cmp
cmp
cmp
cmp
cmp
cmp
das
adc
dec
aas
push
mov
cmpb
aas
sarl
aas
in
out
call
push
movsb
xor
jg
loop
add
jmp
mov
scas
xor
xor
xor
incl
loop
xor
xor
xor
mov
xor
xor
call
push
scas
std
xor
cmpsb
data16
ss
add
or
push
and
aaa
dec
aaa
dec
aaa
push
aaa
pop
aaa
imul
pushl
jl
xchg
mov
xchg
aaa
mov
aaa
xor
cmp
xchg
outsl
cmp
call
cmp
push
mov
cmp
cmp
sbb
push
cmp
decl
add
push
cmp
sbb
cmp
xchg
xchg
cmp
or
cmp
cmp
cmp
cmp
cmp
bnd
adc
sub
xor
jg
cmp
adc
inc
cmp
push
cmp
pop
cmp
jb
js
cmpl
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
sbb
mov
ds
push
cmp
jae
mov
cmp
scas
cmp
jg
cwtl
ds
ds
jecxz,pt
out
ds
ret
ljmp
aas
cmp
je
jge
mov
movsl
aas
stos
aas
mov
mov
mov
push
xor
insl
stos
lcall
sahf
xchg
les
fidivl
in
dec
call
mov
and
sub
cmp
jb
mov
xor
xor
pushl
pushl
je
lcall
xor
xor
mov
jl
cmpsl
xor
xor
lock
xchg
xor
xor
xor
cmpsb
pushl
mov
cmpsb
xor
cmpsb
xor
xorb
aaa
fwait
sahf
inc
call
xlat
cmpsb
mov
bound
scas
cmp
add
sbb
sub
cmp
cmp
xor
mov
cmp
mov
pop
fimull
nop
cmp
cmp
cmp
inc
lds
xor
push
or
ljmp
cmp
bound
data16
push
outsb
aaa
jb
jbe
xchg
pushl
ja
js
jge
cmp
cmp
cmp
cmp
cmp
cmp
pop
adc
xchg
mov
sbb
test
ja,pt
lahf
xor
xchg
aas
push
mov
pop
inc
xor
mov
xor
xor
xor
and
push
ss
fiadds
aaa
ret
lock
aaa
repnz
or
cmp
pop
cmp
lcall
cmp
cmp
cmp
jbe
xchg
cmp
cmp
cmp
lcall
add
cmp
cmp
fdivrs
push
pop
popf
mov
aas
jne
mov
or
cmc
cmc
pushl
mov
fwait
xor
xor
dec
or
or
sub
aas
xor
divl
pop
xor
hlt
xor
adc
es
dec
ss
outsb
notb
lock
mov
enter
in
and
cmp
cmp
cmp
cvtpi2ps
mov
dec
ljmp
orl
jo
jne
test
mov
pop
cmc
add
cmp
dec
cmp
cmp
call
cmp
cmp
cmp
jp
mov
cmp
cmp
pop
pop
cmpl
pop
cmp
mov
incl
and
push
cmpb
cmpsl
ds
ds
ret
idivl
add
sbb
add
sahf
loope
rol
pop
dec
pop
mov
push
xor
aad
out
incl
cmp
or
xor
xor
xor
xor
xor
mov
xor
in
xor
xorl
add
xor
ds
dec
aaa
pop
aaa
js
mov
mov
cli
fidivl
out
in
aaa
cli
aaa
mov
es
ljmp
cltd
cmp
cmp
cmp
cmp
cmp
cmp
stos
lock
cmp
cmp
cmp
adc
jbe
cmpl
clc
cltd
cmp
cmp
adc
and
pusha
aas
cmpb
aas
fdivrl
loop
out
clc
mov
out
pop
rclb
sub
jne
jg
mov
loop
xor
xor
jg
xchg
xor
xor
xor
inc
pop
inc
dec
js
xor
xor
ljmp
jbe
loopne
adc
call
sbb
sbb
sub
sub
nop
cmp
mov
cmp
cmp
cmp
cmp
cmp
jno
test
ljmp
and
jecxz
cmp
aaa
into
cmp
mov
xor
xor
lcall
decb
lods
xor
int3
fildl
xor
xor
add
mov
and
and
sub
sub
xor
cmp
jno
cmp
inc
cmp
dec
cmp
push
rcrb
cmp
mov
fidivs
cmp
cmp
test
lahf
cs
aad
push
mov
enter
add
aam
fdivrs
fdivl
mov
cmp
dec
cld
push
add
or
adc
cld
pop
lods
pop
stos
sbb
and
and
sub
sub
pop
jg
xor
cmp
inc
cmp
cmp
push
pop
cmp
cmp
insb
cmp
je
jl
mov
cmp
cwtl
outsl
ret
mov
sub
xor
inc
mov
push
aas
jg
ljmp
insb
aas
test
xchg
aas
cwtl
aas
lods
aas
mov
shrb
aas
fdivrs
loopne
clc
cmpsl
filds
or
xor
lcall
xchg
xor
xor
xor
inc
xor
xor
es
pushl
cwtl
xor
xor
xor
xor
cmpsb
cmp
pop
xor
mov
cmpsl
icebp
sbb
inc
xor
andb
add
dec
notb
fimuls
xor
ss
jmp
shlb
aam
fdivs
fdivl
loopne
in
call
ss
incl
add
add
or
or
adc
adc
aaa
sbb
and
and
sub
call
xor
cmp
cmp
inc
aaa
inc
aaa
dec
jb
aaa
push
aaa
pop
aaa
inc
clc
pop
aaa
pusha
aaa
jo
je
jl
xorb
aaa
mov
nop
aaa
loopne
icebp
aaa
xchg
aaa
cwtl
into
mov
dec
mov
mov
mov
shlb
aaa
enter
shlb
aam
fdivs
fadd
inc
bound
push
out
aaa
hlt
mov
cld
aaa
hlt
add
or
adc
adc
sbb
add
cmp
fdivrl
call
mov
cmp
pop
lcall
cmp
cmp
cmp
sub
cmp
cmp
cmp
cmp
jne
outsl
add
insb
cmp
jl
test
incl
mov
mov
cmp
mov
mov
cmp
loopne
movsl
and
mov
mov
movsl
movsb
fs
lret
sti
sti
popa
pop
lods
pop
push
aaa
cmpsb
punpcklbw
icebp
push
fnstenv
mov
stos
mov
push
lret
aaa
ljmp
gs
sarb
aas
push
aaa
mov
xchg
out
lcall
push
add
nop
dec
jae
loope
addb
cmp
xchg
outsb
icebp
add
add
sub
daa
out
jmp
inc
pmaxsw
test
out
andb
inc
dec
add
push
xchg
sub
sub
inc
sub
insb
xchg
cmp
jnp
sbb
or
add
add
lods
inc
dec
sub
or
inc
push
pop
pop
xorl
cmpsb
dec
jns
and
out
add
es
ret
mov
push
sub
mov
mov
daa
pop
add
test
ret
loope
push
jae
movsb
scas
aas
enter
gs
inc
cwtl
insb
or
or
gs
mov
cmp
and
adc
push
push
scas
mov
mov
dec
push
pop
rolb
popa
adc
repz
shlb
sbb
call
jmp
cmp
xchg
sbb
jle
aam
idivb
push
sub
je
pop
dec
fimull
jae
xor
and
jle
cld
sbb
out
aas
add
jl
or
incl
jb
ljmp
xor
mov
sub
and
mov
sbbb
ret
mov
test
std
incb
bound
leave
jbe
call
mov
outsb
sbb
pop
out
add
pop
xlat
push
ljmp
sub
or
add
gs
lahf
jp
or
int3
dec
ljmp
orl
mov
psrlw
xlat
pop
inc
sbb
pop
in
lods
mov
inc
or
mov
rorb
inc
andl
and
xor
pop
nop
lock
push
add
enter
sbb
lock
pop
std
xchg
bound
nop
sahf
add
lret
dec
xchg
je
cmc
mov
xchg
call
jno
inc
cmp
jne
test
push
std
push
adc
inc
pop
jmp
push
jo
add
cmp
call
jns
dec
and
xchg
call
ror
xchg
sub
dec
and
sub
xchg
inc
mov
jnp
fistps
cmpsb
test
add
dec
add
or
pop
add
add
add
mov
or
test
roll
dec
inc
nop
mov
inc
loop
sbb
rcll
lea
movsb
or
das
sbb
jbe
dec
mov
out
cld
xchg
test
push
ret
outsl
push
mov
popf
addr16
pop
sbb
cmp
clc
add
pop
clc
fnsave
cmp
or
xchg
nop
in
test
push
ret
pop
ret
mov
dec
mov
rorb
mov
and
xor
sbb
sub
push
add
loope
adc
jo
adc
sub
adc
ficoml
js
jecxz
pop
add
mov
mov
push
aad
loope
add
fimuls
and
mov
jecxz
add
sub
pushl
cmp
mov
cmpb
adc
cmp
push
mov
aaa
xor
cmp
pop
mov
rclb
test
cmpsl
jge
sub
mov
sarb
sbb
mov
orl
mov
push
mov
mov
mov
adcb
and
fisubrl
adc
push
dec
sarb
sub
pusha
cmp
or
leave
inc
xchg
mov
mov
xor
mov
xor
mov
cmp
mov
cmp
or
fildl
xchg
pop
adc
push
push
adc
xor
push
adc
rol
leave
out
test
enter
push
adc
sbb
dec
rclb
rorb
pop
daa
cmp
add
push
or
dec
repnz
daa
push
adc
sub
lsl
adc
out
cmp
rol
test
ss
fcoms
jmp
rcll
addl
inc
push
jbe
push
sub
and
test
mov
cmp
jle
pop
ljmp
aaa
xor
and
shl
xchg
scas
aaa
mov
xchg
jne
mov
xchg
jne
mov
pushf
mov
and
lods
rol
ret
or
sarb
add
shrb
jnp
jo
dec
pop
jnp
popf
adc
cmp
and
dec
jnp
adc
push
or
push
add
cmp
out
and
push
mov
adc
mov
stc
inc
mov
push
push
sbb
inc
sub
push
dec
sub
call
jbe
mov
mov
xchg
pop
cli
sbb
lret
cld
and
push
std
pop
test
xchg
jne
push
incb
lahf
xorb
ss
mov
adc
mov
fcoms
outsl
ja
call
call
test
jbe
pop
out
push
mov
and
and
push
les
cmp
popa
or
cwtl
cs
stos
nop
sub
and
test
push
test
frstor
fstpl
call
cmp
add
lret
fimuls
inc
fbld
xchg
or
pop
inc
mov
test
les
add
and
mov
adc
sub
push
fwait
stc
add
inc
and
adc
sub
mov
cmpsb
insl
add
add
sarb
gs
mov
ret
sbb
xor
mov
inc
and
sbb
add
push
gs
cmp
or
sub
and
stc
push
add
push
or
sarb
jns
sbb
sbb
or
dec
or
cmp
add
jg
add
inc
fimull
or
push
fisttpl
fstp
mov
xor
xor
add
add
push
adc
fldt
sbbb
and
outsb
cmp
das
insb
push
add
push
jnp
sahf
inc
sbb
cmp
mov
and
prefetcht0
fstpl
jmp
and
inc
inc
nop
shlb
or
insb
fstpt
fisubl
mov
out
add
push
xlat
pop
nop
and
int
sbb
cs
jnp
repnz
mov
es
add
or
dec
push
push
mov
add
mov
insb
fs
push
and
inc
sbb
add
jmp
repz
mov
add
mov
and
roll
jg
and
jns
ja
xor
pop
nop
inc
push
fs
mov
add
jg
add
mov
cmp
loopne
push
call
out
lcall
adc
sub
gs
out
cmp
inc
push
push
push
imul
cmp
jae
xor
test
call
mov
fs
sbb
lods
nop
and
addr16
and
xchg
cltd
mov
or
pusha
and
cltd
shlb
adc
inc
push
call
ret
pusha
mov
pop
or
leave
repz
pop
pop
dec
loope
jnp
cmpsl
ret
addl
dec
and
adc
sbb
addr16
andl
imul
daa
daa
dec
shll
daa
daa
or
shlb
daa
daa
dec
lcall
and
nop
add
sub
cmp
sub
sub
sub
inc
and
sub
cmpsb
imul
sub
sub
sub
xor
or
sub
sub
aam
cmp
and
cmp
mov
sbb
or
add
test
mov
inc
stos
cltd
fcoms
and
or
addr16
call
sbb
push
cmc
pushf
int
pop
cmc
push
lock
mov
aam
jp
or
clc
fs
dec
sbb
cmp
sbb
adc
inc
adc
sbb
psubsb
cwtl
mov
and
testb
push
inc
push
adc
jg
and
mov
add
mov
inc
inc
ja
cwtl
addr16
pop
pop
or
rolb
test
pop
adc
pop
pop
xchg
in
nop
mov
data16
xchg
pop
mov
lods
push
shlb
ret
and
outsb
and
sub
and
ja
andb
test
push
add
xor
add
xor
call
cmp
cmp
dec
inc
sub
test
adc
rcr
adc
ret
call
movsb
cmp
pop
es
xchg
cltd
mov
rcrb
mov
jp
or
add
push
push
mov
das
in
add
mov
cmpsl
adc
add
cltd
sub
mov
and
xor
cs
cld
loope
cltd
cwtl
pop
push
call
test
lret
pushf
push
pop
cwtl
rol
inc
mov
fs
pusha
sbb
outsl
cltd
mov
dec
sbb
xor
cltd
inc
push
adc
or
cwtl
fldl
pop
cltd
pop
cmpb
sbb
aaa
nop
cltd
xchg
sbb
add
inc
bound
sbb
test
xor
cltd
jns
or
xchg
cltd
pop
ljmp
mov
xor
cwtl
cltd
loopne
data16
lcall
rclb
push
push
pop
adc
aam
popf
pop
adc
inc
adc
jp
addl
test
jbe
jmp
outsb
adc
mov
sub
inc
adc
sbb
loopne
inc
mov
jbe
push
rcr
mov
in
mov
loopne
aam
sub
stos
or
push
imul
fiaddl
cmp
mov
adc
test
push
mov
out
stos
mov
sbb
adc
pop
loopne
and
nop
and
adc
push
adc
aam
movsl
inc
adc
adc
in
ficomps
add
je
adc
jl
mov
lret
xchg
add
pop
nop
sbb
adc
and
mov
inc
call
adc
mov
rclb
lea
adc
inc
call
adc
jmp
adc
mov
je
and
push
test
mov
movsb
mov
mov
adc
push
pop
aam
push
xchg
adc
in
jno
xchg
test
or
lods
add
inc
popf
and
or
or
pop
adc
icebp
out
adc
rol
and
sub
xchg
pop
inc
movsb
pop
add
cs
adc
lea
or
les
xor
sub
imul
push
add
xchg
push
and
icebp
pop
enter
andb
inc
pop
inc
or
out
mov
sbbb
rorb
inc
pop
sbb
mov
addl
sbb
cmp
dec
pop
push
or
sbb
add
mov
ret
mov
xchg
pop
push
adc
xchg
xor
aam
popl
rcrb
sub
loopne
dec
out
sub
not
mov
in
fldl
mov
inc
xor
movsl
hlt
pop
xchg
cltd
inc
inc
inc
lcall
inc
inc
inc
cmp
inc
pop
inc
inc
inc
inc
inc
dec
dec
inc
jmp
cmp
fs
pop
mov
inc
cmp
pop
bound
or
push
call
push
add
jo
dec
adc
insb
fldl
fdivrs
fdivs
lds
je
ret
stos
loop
inc
int3
mov
inc
add
cmp
pop
call
and
std
pushf
sbb
push
and
mov
pop
jo
nop
rorb
movsl
addb
cmp
cmp
in
adcb
out
add
dec
mov
mov
cmp
ja
mov
dec
andl
aas
lock
jl
xor
inc
pop
and
sbbb
xor
pop
call
jp
mov
xor
sbb
pop
cmp
mov
adc
push
dec
subl
sub
in
push
mov
cmpsl
push
xorb
cmpsl
pop
mov
pop
pop
fstpl
push
mov
pop
jb
pop
int3
push
push
xchg
fdivl
mov
mov
lahf
mov
call
mov
pop
das
pop
or
xchg
popa
push
sub
int3
pop
and
fdivl
fcompl
pop
mov
jnp
lods
lret
call
test
pop
push
and
lret
mov
test
lock
int3
rcll
lock
out
mull
add
pop
mov
jecxz
pop
pop
int3
dec
fmul
inc
mov
data16
ret
pop
add
bound
and
sbb
arpl
insb
xchg
loopne
fs
or
je
fs
or
clc
pushf
outsb
xchg
sub
loopne
loopne
or
shrl
loopne
pop
jns
and
mov
les
mov
daa
in
inc
nop
push
js
or
jmp
inc
mov
flds
sub
test
jmp
and
xchg
cmp
inc
daa
jnp
pop
mov
inc
daa
fwait
roll
fmul
arpl
fstpl
cltd
loopne
inc
xor
sub
adc
cltd
pop
sub
bound
cltd
push
push
mov
sub
dec
inc
mov
fcoml
js
mov
adc
cmpsl
inc
mov
push
stc
pop
leave
sbb
sub
push
push
push
inc
jmp
shll
sub
mov
mov
dec
push
popf
fisttpll
xchg
jl
rcrl
pop
and
clc
cmp
inc
ljmp
enter
mov
fdivr
loope
test
adc
or
lahf
mov
mov
cmc
jle
add
dec
xchg
mov
sub
add
sub
and
mov
mov
inc
mov
adc
rorb
sub
daa
adc
adc
ret
sub
pop
loop
mov
pop
push
movsl
outsl
push
daa
sub
or
call
and
mov
shrl
xor
call
icebp
jmp
stos
cmc
cmpsl
jge
insb
stos
fcomi
jmp
add
pop
dec
pop
out
ret
call
movsb
popf
lret
xchg
and
je
mov
sub
adc
ret
jae
pop
imul
js
jl
sub
pop
loopne
in
mov
insb
jo
mov
xchg
inc
push
mov
leave
and
gs
inc
icebp
sub
xor
sub
jns
inc
adc
and
or
jge
inc
jl
jl
loope
sub
mov
adc
nop
adc
sub
xor
inc
pop
adc
dec
sbb
add
inc
enter
cli
mov
repz
sbb
fistpl
out
sbb
mov
and
pusha
or
je
mov
add
adc
push
lret
mov
vpavgw
xchg
pop
xchg
insl
loop
cmp
push
fsubs
scas
xchg
push
xchg
push
xor
fwait
mov
aam
lahf
movsl
xor
pop
jae
mov
push
push
jns
cwtl
hlt
xchg
pushf
mov
loop
xchg
fdivl
daa
lods
dec
cmp
jo
es
mov
fwait
xchg
adc
push
or
add
sub
sahf
ss
test
xchg
into
inc
sahf
cmp
xchg
lret
ftst
adc
add
cmp
repnz
fldcw
daa
insl
roll
leave
sub
cmpsl
ss
or
cmc
ror
shlb
mov
fadds
dec
add
cmp
dec
add
mov
imul
xchg
inc
inc
inc
into
dec
xchg
xchg
dec
pop
cmp
xchg
inc
mov
dec
sbb
je
dec
xchg
outsb
mov
push
and
pop
xor
jns
xchg
pop
xchg
movsl
lds
xchg
pop
imul
dec
jae
jmp
fst
fs
ret
xchg
outsb
lcall
adcb
xchg
or
jmp
lds
call
leave
rcrb
xchg
data16
pop
add
call
les
fs
lret
add
xchg
test
icebp
jnp
in
dec
cmpsb
push
push
push
sub
adc
inc
push
daa
mov
mov
cltd
cmpsb
fcoml
cmpsl
lret
int
and
adc
adc
sbb
int
push
xor
insb
xor
mov
aaa
mov
loope
stos
adc
int
or
mov
int3
leave
call
adc
push
int
mov
jb
out
sti
mov
das
push
in
mov
push
int3
pop
insb
push
scas
inc
push
iret
fxch
stos
rcl
dec
pushf
inc
lea
xorl
inc
sbb
inc
sbb
cmp
dec
lret
imul
aas
fimull
arpl
mov
inc
or
test
or
jb
fistl
stos
add
fildl
dec
push
out
fisttpl
xor
or
xorb
xor
sub
nop
call
bound
push
sbb
in
fildl
cld
and
outsb
fildl
popa
fsts
in
add
loop
fistpl
nop
fistl
xchg
cmp
mov
in
or
iret
ret
cmpsl
add
aad
and
fisttpl
xchg
mov
push
sub
jne
xchg
and
fcmovnbe
popa
sub
aad
sub
inc
push
dec
adcl
test
or
or
xchg
fstpt
ja
mov
sub
adcb
sbb
mov
imul
aaa
out
jns
adc
jno
rcrl
fildl
fldt
call
scas
call
jecxz
ljmp
in
fildl
orl
add
mov
jle
dec
or
nop
add
loopne
pop
xchg
rcrl
aaa
daa
xor
add
pop
push
addl
add
adc
fwait
fucomip
in
xchg
rcll
iret
leave
sar
sbb
gs
lock
iret
loope
mov
add
sbb
in
push
mov
adc
dec
pop
mov
mov
and
or
add
in
mov
in
fdivrl
cmpl
mov
test
mov
xchg
mov
xchg
mov
jno
imul
push
mov
xchg
mov
xor
and
in
pop
cmp
mov
jb
sbbl
mov
inc
push
sarb
in
pop
lahf
mov
push
repnz
cmpl
mov
enter
dec
mov
in
cmp
push
jb
mov
and
cmp
add
xchg
sbbl
mov
enter
mov
mov
pushf
mov
jb
sbbl
jo
gs
pop
mov
sbb
and
cmp
repnz
sbbl
or
inc
hlt
mov
dec
and
and
mov
inc
mov
xchg
data16
or
mov
inc
dec
lcall
pop
sub
and
fsubrl
and
xchg
xchg
data16
adc
push
imul
sbb
in
mov
and
lcall
cmp
cmp
dec
les
mov
in
sbb
mov
xchg
inc
mov
dec
and
mov
add
test
enter
lock
adc
adc
aam
jo
adc
cmp
xor
mov
pusha
jne
aam
test
js
insb
inc
push
stc
push
repnz
mov
stc
jb
dec
mov
push
test
mov
cvtpi2ps
inc
enter
inc
inc
pop
mov
call
and
dec
leave
inc
mov
icebp
or
or
scas
test
or
sub
sub
nop
pop
push
push
rolb
sub
test
mov
decl
loop
daa
imul
add
push
mov
pusha
cwtl
xchg
leave
inc
shrl
push
push
add
shrl
dec
pusha
xchg
and
xchg
movsl
sbb
add
movsl
gs
hlt
pop
outsb
inc
pop
psrlw
mov
bt
or
push
adc
mov
jmp
sub
gs
jmp
mov
jbe
sub
jecxz
sub
dec
aam
je
sbb
pop
sarl
dec
aaa
mov
fst
sub
cmp
sub
push
mov
leave
pop
mov
dec
negl
psllq
and
xor
sysexit
push
gs
sub
push
sbb
mov
packuswb
mov
sete
insl
pop
mov
fidivrl
fwait
loope
add
add
cmp
jmp
enter
call
pop
xor
xchg
or
dec
pop
add
iret
aam
gs
scas
or
and
dec
pop
dec
pop
mov
movsb
push
xchg
push
pop
lcall
or
aam
ja
sub
es
inc
sbb
test
inc
sub
sub
or
mov
mov
gs
sub
pop
or
push
xchg
outsb
and
sbb
jbe
ljmp
push
les
xchg
mov
lcall
mov
xchg
or
or
sub
or
sub
andb
out
and
mov
fsubr
inc
pop
adc
enter
mov
cmp
push
call
jnp
or
or
out
ret
movsl
sub
call
lret
or
sub
or
xchg
mov
xchg
or
jmp
pop
sbb
sub
push
adc
mov
lods
pop
sbb
dec
or
adc
adc
sub
test
push
lret
mov
or
int
or
sbb
dec
pop
or
push
add
add
js
xchg
movsl
cmp
push
imul
and
loopne
or
mov
mov
movsl
aad
pop
inc
sub
or
or
sbb
pop
xchg
or
fwait
inc
sub
and
lret
xor
dec
lret
in
fadd
insl
stos
mov
rclb
adc
outsl
adc
je
push
lret
nop
imul
push
jnp
sbb
rcrb
mov
mov
inc
outsl
sub
notl
or
dec
or
dec
add
or
repnz
lock
sbb
push
sbb
test
dec
push
movsl
or
sub
sbb
das
sbb
sbb
xchg
add
or
cmpsb
xor
or
sbb
inc
sub
push
push
les
or
and
mov
mov
aad
or
mov
js
jns
pop
jb
or
sbb
mov
mov
adc
movsl
sub
add
fs
sub
popa
sub
or
rorb
push
xchg
or
mov
xchg
sbb
jmp
inc
dec
out
sub
lock
xor
dec
dec
pop
cmp
mov
call
push
dec
or
push
lret
pop
sahf
je
xchg
movsl
or
stc
pop
push
test
sbb
xchg
sub
add
or
mov
pop
and
mov
or
mov
adc
or
or
mov
ret
xchg
movsl
sar
xor
xchg
and
test
lds
stos
or
inc
jno
adc
pop
xor
inc
fs
push
push
dec
or
sub
push
or
add
or
sub
les
push
or
out
mov
scas
mov
test
in
dec
add
jg
or
push
sub
xchg
and
or
push
movsl
pop
stc
pop
out
mov
inc
and
sbb
loope
dec
mov
int
dec
aam
cmp
aaa
xchg
out
inc
jae
aaa
adcb
mov
push
cltd
jmp
inc
das
mov
jb
das
nop
mov
or
pop
inc
pop
xchg
das
jmp
fnstcw
push
pop
ds
mov
in
xor
clc
push
xchg
mov
sbb
dec
ja
cmpsl
mov
pusha
test
inc
pop
push
and
and
mov
or
das
add
mov
cmp
push
cmp
sub
arpl
movsl
cmpsb
nop
and
insb
js
mov
lahf
testb
testb
cmp
repz
sub
mov
int3
faddl
sbb
jns
out
ss
push
pop
sahf
out
sahf
outsb
adcb
out
jns
lock
or
push
ds
out
sahf
dec
pop
jb
mov
int3
out
push
stos
repz
rcll
and
cmp
repz
pusha
jbe
test
into
repz
stos
push
sbb
iret
repz
xor
dec
pop
insb
subb
cmp
pop
cmpsb
add
loope
rcll
adc
and
enter
mov
push
lea
cmpsl
or
repz
jnp
sbb
push
push
mov
jns
iret
mov
cmc
data16
sahf
add
push
clc
mov
add
inc
jno
or
add
mov
add
mov
jnp
out
mov
add
jae
imul
adc
push
lahf
out
fstl
das
xchg
sbb
sbb
xchg
js
or
jnp
repz
sahf
mov
sahf
out
xchg
and
and
js
xor
out
jns
jp
cmp
hlt
call
xchg
adc
inc
out
inc
sub
aas
inc
xchg
pop
int3
xor
fs
outsl
in
mov
test
add
and
dec
xchg
iret
repz
push
push
cmp
lcall
clc
xchg
in
jns
out
loopne
fcom
int3
out
sahf
out
sarb
test
mov
out
xchg
nop
mov
out
jl
je
sahf
out
sahf
insb
push
jns
out
push
push
dec
dec
inc
out
sahf
out
cmp
xor
lahf
out
sahf
sub
adc
add
nop
cmp
repz
enter
imul
add
pop
out
sahf
out
jl
push
dec
int
jns
inc
xor
or
mov
cmp
repz
mov
pusha
cmp
out
or
int3
test
mov
xor
jg
push
add
lock
xor
jle
mov
and
test
push
push
and
xchg
dec
adc
rolb
inc
dec
add
inc
push
lret
aaa
xor
push
push
ret
into
add
add
and
xor
inc
adc
mov
or
inc
aaa
rclb
ss
jbe
add
adc
push
das
sbb
sub
into
or
add
and
and
xchg
inc
mov
push
daa
push
inc
and
outsb
jnp
mov
inc
add
fadd
mov
lahf
pop
pop
add
pop
xorb
inc
pop
shll
sbbb
pop
jnp
or
push
jnp
pushf
push
inc
es
andb
shrl
aaa
inc
leave
and
pop
rorl
cmp
push
pop
scas
inc
fildll
ss
mov
aas
bound
add
lahf
inc
jg
push
jle
pop
xor
and
jb
aas
sti
push
int3
pusha
in
sbb
push
andb
fsubl
cmpsl
out
push
dec
mov
xor
movsb
fists
mov
add
movnti
imul
test
dec
mov
inc
mov
pushf
add
xchg
add
popf
loopne
pop
xor
cmp
pop
stos
outsb
cmp
cs
outsb
lahf
inc
outsl
ds
outsl
ds
jae
gs
push
nop
sub
mov
xchg
add
jbe
fsubl
dec
cmpsl
mov
cld
xchg
or
mov
push
scas
inc
enter
iret
fbstp
jne
notb
imul
jecxz
mov
push
outsl
and
push
nop
dec
dec
add
xor
and
and
and
add
mov
jae
mov
inc
outsl
xor
pop
lea
mov
adc
fwait
pop
push
cmpsl
mov
xor
sbb
call
add
loopne
fldt
dec
pop
nop
or
pop
lcall
mov
push
imul
cmpl
or
or
xlat
sbb
and
adcb
xchg
mov
mov
sub
push
mov
loopne
xor
shll
and
cmp
cmp
or
lods
bound
out
push
add
and
push
or
shll
push
and
leave
mov
xor
aaa
add
es
mov
push
add
pop
sbb
mov
mov
sbb
ficompl
pop
inc
xchg
out
add
movsb
xchg
jle
pushf
cwtl
sahf
out
sahf
xchg
nop
mov
jns
pop
push
pop
dec
inc
iret
repz
inc
cmp
xor
sub
iret
repz
and
sbb
and
cld
xchg
hlt
xchg
in
repz
jnp
in
enter
cmp
mov
test
mov
leave
cmp
push
insb
in
iret
repz
fs
push
dec
mov
cmp
repz
and
add
in
xchg
push
iret
repz
enter
test
cmp
nop
mov
out
jo
pop
inc
cmp
repz
adc
lock
sahf
out
sahf
loopne
mov
sbb
jns
pop
outsl
mov
mov
out
pop
leave
or
adc
cwtl
adc
popf
mov
neg
mov
lods
mov
xor
test
dec
roll
add
pop
mov
bound
push
fisubrs
ds
pop
lds
cld
pop
enter
sahf
pop
and
outsb
pop
mov
in
stos
lcall
lcall
inc
aas
sub
aas
and
test
xchg
incl
inc
xchg
mov
je
xor
mov
mov
fnstenv
sti
inc
xor
rcr
xor
xor
cmpsb
cld
jg
mov
fwait
xor
adc
pop
ss
nop
ss
fwait
clc
fwait
pusha
sub
ss
popa
push
dec
sub
xorl
aaa
adc
sbb
push
ret
clc
mov
cmp
cmp
ja
xchg
popa
es
lret
loop
adc
cmp
cmp
cmp
cmp
cld
fildll
cmp
clc
cmp
xor
cmp
cmp
sbb
mov
mov
ds
ds
fdivr
lcall
add
ds
ds
ds
ds
aas
pop
aas
and
sub
xor
aaa
aaa
lds
inc
into
push
data16
jbe
sbb
aas
jnp
cmpl
movsb
aas
mov
sarl
div
jmp
outsl
jo
add
jl
xchg
cmpsb
mov
xor
jecxz
mov
pushl
sbb
lods
cmp
xor
add
mov
jecxz
sbb
pushf
xor
xor
outsb
adcb
cmp
xchg
mov
cmp
xor
adc
mov
jg
mov
dec
xor
xor
xor
test
pushl
xor
xor
xor
xor
xor
xor
xor
dec
sbb
xchg
ss
mov
ss
decl
xchg
mov
popa
or
push
add
sub
ja
clc
imulb
cmp
add
pop
cmp
rcrb
sbb
pop
or
cmp
xor
xor
cmp
cmp
add
sarb
inc
push
pop
cmp
add
cmp
pop
xor
sbbb
inc
fidivs
push
sahf
sbb
outsb
cmp
idivb
mov
cmp
cmp
cmp
dec
push
sbb
push
xor
cmp
cmp
cmp
cmp
add
cmp
hlt
cmp
inc
ds
ds
shll
xchg
ds
cs
aas
add
push
cwtl
xchg
xor
xor
lock
jnp
test
xchg
xor
push
xor
and
jmp
xor
xor
xor
xor
xor
filds
xor
xor
xor
outsb
xor
loopne
repnz
dec
ss
bound
aas
cld
xorl
ss
ss
icebp
push
sarb
clc
ss
ss
aaa
or
out
nop
icebp
lcall
inc
aaa
sub
add
adc
unpckhps
and
cmp
ret
clc
mov
sbb
pop
mov
test
mov
cmp
cmp
leave
push
in
jmp
repz
cmp
or
mov
sbb
and
es
cmp
cmp
and
push
cmp
jns
jle
xchg
cmp
cmp
fcmovb
cmp
push
add
cmp
cmp
cmp
cmp
cmp
cmp
push
adc
inc
aaa
push
fs
cltd
mov
mov
pop
shrl
dec
dec
xor
xchg
mov
aas
ret
aas
iret
dec
fsubl
jecxz
xor
into
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
jo
in
pop
xor
xor
mov
outsb
sbb
or
cmp
insb
icebp
jg
xor
ret
xor
xor
adc
push
ljmp
arpl
stos
add
ss
ss
icebp
or
adc
jne
jle
das
cmp
cmp
cmp
mov
in
cmp
cmp
ret
cmp
cmp
cmp
cmp
cmp
aaa
or
cmp
cmp
pop
ret
cmp
arpl
outsb
lea
mov
fnstsw
fildll
push
inc
out
ds
or
cmp
faddl
mov
scas
insl
adc
fbstp
divb
data16
lcall
xor
xor
xor
xor
xor
xchg
jno
mov
fdivl
out
xor
xor
xor
xor
xor
xor
xlat
xor
ja
mov
pushf
ss
mov
jecxz
ficomps
adc
and
xor
push
shll
int
aas
jp
incl
pop
cmp
lcall
divb
cmp
and
ds
imul
dec
mov
lret
aas
lods
cmp
sbb
mov
mov
cld
xor
xchg
xor
out
sub
pushf
cli
cmp
cmp
dec
cmp
pop
cmp
dec
xor
outsl
cmp
clc
pop
scas
xor
xor
xor
xor
xchg
testb
aaa
pop
dec
es
adc
mov
jp
mov
or
pop
pusha
out
hlt
gs
cmpsb
xor
xor
mov
mov
sub
jae
test
scas
mov
jle
xor
popf
xor
jb
inc
daa
mov
test
or
popa
je
call
sbb
cmp
mov
cld
cmp
push
int3
mov
andb
pop
or
push
or
xor
out
xchg
mov
cmpsb
test
mov
loopne
sbb
and
ja
sar
xor
or
or
adc
adc
sbb
or
mov
and
sub
cmp
inc
xor
mov
xchg
pop
xor
xor
xor
xchg
xor
je
jl
cld
pop
or
test
mov
mov
nop
xor
sbb
xchg
insb
loopne
xor
je
sarb
fdivs
mov
xchg
je
js
nop
mov
jbe
xor
cmp
sbb
cmp
push
xor
incb
jo
bound
rcrb
push
sarb
dec
add
sbb
fmull
das
fidivrl
loopne
or
adc
sbb
sub
incl
test
xor
xor
xor
mov
add
sub
lahf
ficoml
pop
xor
xorb
xchg
sbb
js
ret
fnstenv
xor
jg
inc
sar
cs
call
pop
cld
xor
xor
xor
inc
add
loop
aas
pop
add
sub
xor
inc
mov
add
xor
xor
xor
push
xor
pop
loopne
rol
pop
mov
xor
xor
xor
xor
aas
adc
mov
scas
pushf
xor
xor
xor
xor
xor
xor
cmp
loopne
xor
into
shlb
int3
fimull
inc
mov
xor
inc
add
cmp
jecxz
mov
fcmovnbe
subb
cmp
subb
mov
add
fistpll
push
ja
xor
xchg
das
cmp
cmp
sbb
fistl
cmpsl
dec
lock
cmp
xchg
out
mov
and
inc
cmp
dec
scas
mov
jne
pushf
lods
call
adc
in
pop
xchg
mov
lds
xor
inc
out
jle
adc
jmp
push
pop
sbb
fildll
imul
in
imul
dec
adc
mov
incl
inc
sub
or
push
add
sub
call
xchg
pop
mov
mov
cs
lcall
sub
or
push
lods
lret
and
xchg
loop
mov
repz
inc
enter
inc
hlt
pop
ljmp
xchg
push
pop
bound
aaa
xchg
sbb
out
adc
mov
cmp
pushl
aas
jnp
inc
lret
std
xchg
mov
into
mov
outsl
sub
mov
sbb
scas
lcall
jge
add
push
sub
test
sar
lahf
mov
cmp
insb
cmp
mov
jp
std
into
cs
xor
pop
xchg
fwait
int3
mov
leave
jb
inc
push
insl
jne
sarl
aas
ja
outsb
dec
pminsw
xor
loopne
ja
daa
leave
mov
sti
cmc
out
sub
dec
xchg
shl
ret
sahf
push
xchg
shl
out
jg
mov
xchg
inc
fsts
push
rclb
incl
and
push
adc
sarb
xchg
inc
pop
xchg
popa
adc
mov
dec
lret
add
dec
push
enter
rcrl
sub
iret
icebp
prefetcht1
cld
mov
xchg
mov
loope
jno
vpsrlvd
pushf
movsb
push
fsubp
push
adc
das
clc
jmp
dec
loope
addr16
mov
sub
xchg
pop
xchg
sti
outsb
mov
jle
lcall
cmpsl
lcall
push
mov
mov
jne
mov
lret
dec
jbe
xor
pushl
int3
mov
les
arpl
imul
and
cwtl
jmp
cmpsb
or
fsub
xchg
inc
sbb
pushl
gs
cmp
sbb
negl
adc
sub
mov
sbb
xchg
out
incl
push
xchg
cmp
inc
jl
xlat
or
pushl
outsb
rcr
mov
or
jo
jg
xlat
mov
gs
daa
pop
mov
loop
lcall
test
or
inc
push
jns
clc
lds
jns
dec
daa
inc
xchg
mov
cmp
mov
sbb
cmp
sub
mov
stos
cli
adc
jl
ret
mov
test
scas
jmp
and
nop
std
loope
and
push
add
cld
leave
sub
or
mov
iret
out
clc
decl
out
fstpl
sbb
loope
adc
push
xchg
mov
mov
ljmp
ja
pop
test
dec
fsts
jnp
dec
add
dec
sti
hlt
mov
sub
incl
push
mov
pop
pop
mov
lods
mov
mov
or
or
out
aad
pop
dec
mov
cld
call
clc
xor
mov
fwait
arpl
ss
sbb
jg
sbb
push
add
push
jge
push
lods
adc
add
rorl
push
lods
je,pt
dec
push
int3
mov
aaa
std
lock
xor
stc
hlt
and
jmp
sbb
sub
fidivs
xchg
add
scas
es
stos
addr16
jg
add
sti
mov
push
cmovae
adc
or
fnstcw
cmp
outsl
mov
incl
mov
shl
sub
fisubrs
xchg
clc
mov
ds
adc
imul
inc
out
loop
lea
cmp
popf
inc
out
call
decl
mov
and
xchg
xor
xchg
stos
nop
adc
inc
push
loopne
inc
das
add
push
xor
ljmp
leave
clc
cmc
pop
jnp
push
pop
sbb
shll
jbe
stos
jge
add
fcmovnbe
pushl
xchg
ret
xchg
dec
xchg
xor
fiadds
call
mov
jne
add
pusha
shll
int3
out
jne
das
stos
dec
loop
icebp
testl
call
insb
sub
push
cld
push
adc
lret
fstpt
das
cltd
aaa
cs
shl
inc
jbe
push
cmp
cli
aaa
mov
pop
xchg
dec
cmp
les
sbb
je
test
xchg
dec
push
outsb
xchg
push
inc
hlt
cmp
dec
jb
pop
aam
cld
mov
sbb
cmpsl
mov
add
jg
fsubrl
test
lods
lock
push
cmc
mov
push
jne
cltd
or
gs
decl
mov
clc
insb
push
jo
fldcw
push
adc
call
lret
jle
mov
xor
mov
lcall
xchg
xor
lcall
unpcklps
sar
pushl
inc
cld
popa
fiadds
cmp
add
dec
xor
xchg
mov
idiv
ljmp
mov
in
lds
pop
out
icebp
mov
xchg
sarb
mov
ja
jle
in
sub
cmp
jb
icebp
outsb
ljmp
xchg
mov
lods
push
subb
divl
call
push
inc
movsl
xchg
jmp
cs
ret
jno
int3
mov
push
add
call
mov
jae
add
shl
push
stos
inc
or
mov
inc
inc
jne
xor
mov
aaa
lds
pop
mov
push
loopne
lock
fldln2
xchg
jl
and
jl
xchg
cs
xor
sub
jnp
jae
cltd
xor
pop
loopne
mov
stos
cmp
sub
hlt
xor
xchg
xchg
lret
sbb
pop
out
jmp
pop
sub
loope
cmp
push
je
icebp
sub
imul
cmp
cwtl
push
xor
shl
mov
mov
sub
dec
and
or
push
fisttps
ret
pop
int3
lock
mov
pushf
in
add
cld
cmpsb
rol
lcall
sbb
sub
mov
ljmp
and
or
xchg
jecxz
mov
sahf
addr16
scas
or
jg
inc
int3
test
call
lds
shl
popa
outsl
lods
push
lcall
cs
sub
mov
inc
lds
ja
sti
pop
adc
add
fcompl
lret
aad
rolb
sub
lret
gs
ds
push
sahf
orl
imul
or
incl
out
inc
sar
fdivrp
ja
out
xchg
mov
stc
gs
inc
dec
lcall
jnp
xor
in
rcr
pop
dec
das
mov
inc
xor
ret
jl
aad
jmp
call
loop
mov
into
dec
in
xchg
adc
loop
add
call
mov
dec
sbb
popf
bound
jmp
add
jmp
ljmp
ss
pop
xchg
add
pop
or
aas
mov
ret
rcr
pop
repnz
scas
jmp
imul
jns
ds
xchg
inc
jae
cwtl
or
add
adc
leave
push
decl
ljmp
scas
insl
inc
mov
cld
jo
inc
lods
jl
fxch
inc
or
sub
mov
and
jmp
pop
fs
cli
pop
divl
fdivl
pop
cmc
mov
lret
mov
pop
lods
or
pop
sub
dec
fcomip
jmp
testl
adc
fbld
aam
in
aaa
loopne
pop
lock
fdivrl
mov
xor
sbb
mov
inc
or
ljmp
jne
scas
adc
push
or
xchg
das
pushl
incl
cmp
xchg
inc
xchg
imul
hlt
mov
jno
nop
mov
mov
lret
dec
mov
ds
lcall
out
xlat
sbb
jb
xchg
loop
push
icebp
shll
imul
mov
enter
sbb
call
popf
push
pop
popa
push
push
or
in
jno
jg
dec
cmp
aad
test
stc
mov
mov
call
and
add
inc
mov
mov
and
aad
pop
iret
lcall
pushl
bnd
push
xchg
or
mov
insb
fnstcw
fcomp
push
test
addb
dec
adc
outsl
ljmp
and
ja
fcomp
pop
xor
repz
fs
faddp
inc
jle
add
test
call
jp
popa
rorb
es
sbb
or
jae
subl
push
cmp
add
dec
addr16
mov
sub
mov
xchg
in
iret
cmpsb
addb
lret
mov
xchg
xor
arpl
inc
mov
xor
ret
mov
lods
int
push
pop
arpl
pop
and
decl
inc
loope
sbb
jno
mov
push
mov
jae
xchg
comiss
xchg
ljmp
lret
mov
jg
enter
inc
lcall
pop
push
ss
lahf
xchg
mov
call
add
pop
sub
mov
and
call
rorl
popa
mov
faddl
xor
insl
or
mov
mov
mov
test
jg
je
inc
std
cwtl
jno
sub
lret
adcl
sbb
xor
pushl
push
ss
fldcw
movsl
or
arpl
mov
push
sub
jnp
decl
mov
jge
aad
dec
dec
int3
mov
sbb
jmp
test
push
call
push
sahf
mov
xorl
add
pop
lret
fwait
adc
xchg
call
out
push
pop
mov
cmp
push
mov
vpaddusb
jb
and
incl
add
lds
add
lahf
cmp
call
std
incl
mov
js
inc
sti
in
lahf
in
int
loope
adc
mov
xor
iret
roll
ja
bound
incl
and
clc
push
ret
cmp
inc
shlb
sbb
call
xchg
adc
int
dec
ds
mov
and
cmp
adc
ljmp
cmp
cmpsl
push
sti
pushf
mov
pop
jmp
add
mov
addr16
dec
jmp
ljmp
sub
and
jns
cmp
call
sahf
xor
outsb
test
lods
inc
mov
lcall
dec
js
pop
call
jae
jo
leave
mov
cmc
dec
mov
sbb
push
imul
add
sahf
cmp
jae
dec
push
movsb
jmp
aam
xor
decl
cmpb
in
push
or
into
jle
or
fucomi
fbstp
xor
inc
mov
cwtl
aaa
pop
sbb
jge
and
mov
test
ss
dec
push
lcall
push
pop
push
push
jg
subl
adc
sbb
dec
sar
call
push
ja
dec
mov
mov
ficoms
pop
mov
sbb
push
mov
jne
daa
pop
cld
jmp
sub
sbb
xorl
repz
stos
mov
aam
dec
imul
ljmp
cmp
mov
inc
arpl
xchg
adc
or
insl
aas
rcr
sbb
jo
idiv
incl
or
scas
in
std
jl
adc
loope
loope
leave
movb
andl
or
fisubs
or
lcall
sbb
fs
mov
cs
push
xchg
dec
ret
xchg
sbb
xlat
and
decl
sti
popf
push
inc
xchg
mov
push
lcall
cmp
insb
dec
daa
jae
clc
neg
test
out
ss
xor
inc
into
mov
call
out
mov
aaa
rcll
popa
mov
arpl
xlat
test
mov
lds
in
jmp
mov
mov
aas
fisubrs
add
dec
push
arpl
arpl
cwtl
adc
call
push
cmp
mov
jnp
dec
cmpsl
repz
cwtl
jae
fcmovne
pushf
out
clc
ljmp
push
into
sbb
push
jae
add
std
mov
stc
addr16
ljmp
mov
stc
fs
lods
xchg
push
mov
repz
xchg
imulb
jecxz
inc
inc
std
add
stc
js
ret
or
pushf
ficomps
notl
mov
fisttps
jge
test
movsl
dec
fdivs
cmp
fs
push
sahf
inc
jno
cmp
sub
mov
enter
out
loope
aam
inc
sarl
jo
fisttpll
mov
mov
divl
mov
push
jne
enter
sar
ljmp
mov
mov
xchg
mov
sub
stos
sbb
jl
bnd
and
ja
sub
ljmp
mull
js
cltd
mov
jg
icebp
mov
cwtl
pop
rcr
pop
xor
frstor
out
push
rolb
inc
call
imul
xor
mov
adc
push
push
cmp
pop
iret
inc
outsl
gs
dec
jbe
mov
pop
sub
pop
iret
js
decl
lea
cltd
lods
mov
cs
add
stos
int3
ror
add
pop
int3
add
jb
lcall
sub
adc
dec
arpl
jge
xchg
sti
js
xor
adcb
popa
jbe
sti
into
test
lods
fisttps
fbstp
movsl
aam
dec
cmp
aad
mov
push
gs
clc
mov
sar
aaa
ds
in
pop
js
and
and
nop
adc
pop
mov
fbld
add
push
fldenv
inc
stc
shlb
mov
push
push
jmp
sti
xchg
add
mov
inc
loop
fsubr
xchg
dec
int3
lock
pushl
jmp
xor
or
push
push
js
sbb
mov
cli
lcall
ror
ret
xchg
xlat
adc
arpl
jl
push
dec
sbb
mov
jecxz
push
jg
call
push
fs
pop
jecxz
fisttps
call
outsb
sbb
dec
shll
jmp
nop
pusha
push
pop
sub
push
aas
xor
filds
out
das
sbb
dec
pop
adc
mov
add
je
pushl
testb
inc
and
data16
test
int
push
mov
test
in
sub
mov
shlb
nop
dec
sbb
fidivrs
push
jbe
mov
jmp
lret
cmp
lcall
cmp
pop
jmp
mov
sbb
mov
mov
sbb
or
ret
lret
push
js
rcll
sahf
push
xchg
mov
mov
fstpl
out
stos
add
ror
cli
xor
shrl
shlb
push
or
call
in
bound
lock
push
int3
adc
filds
push
push
fcmovbe
sub
add
push
outsb
stos
decl
mov
jns
inc
aaa
daa
rolb
into
pop
movsl
mov
mov
scas
fwait
stc
call
mov
rclb
jbe
popf
cmpsl
dec
mov
pusha
sub
stos
ljmp
mov
dec
push
ficoms
lahf
xor
in
mov
jp
or
in
mov
or
mov
call
jmp
xchg
imul
push
daa
mov
sti
mov
jmp
push
and
lock
push
pop
test
fildll
fisttpll
lds
dec
loopne
outsl
lods
inc
shll
cmp
data16
inc
pushl
leave
pop
xchg
push
insl
jo
push
or
jnp
fnstcw
faddl
fwait
adc
inc
test
icebp
pop
lea
inc
push
lods
les
mov
cwtl
loopne
xchg
add
aad
sbb
call
in
fs
inc
adc
shrb
cltd
pop
and
fcompl
jl
pop
inc
jns
pop
cmc
mov
push
cmp
packuswb
jns
cmp
xchg
mov
xor
mull
xor
in
test
int
pop
setbe
int3
aaa
or
jg
imul
outsb
sbb
rcrb
inc
mov
cmpsb
bound
sub
add
xchg
in
pop
int3
cmp
jb
add
add
mov
scas
movl
sahf
mov
pop
mov
sbb
ljmp
in
cmp
mov
into
flds
bound
clc
jno
adc
mov
call
lods
adc
xchg
pop
mov
or
movsl
dec
sbb
cmpsb
sahf
pushl
test
rcl
dec
jo
sbb
mov
ljmp
shl
cwtl
jecxz
sbb
mull
mov
pop
xor
stos
int3
cwtl
push
ret
pop
push
decl
xor
cltd
pusha
cmpb
xor
decl
fdivp
pop
mov
mov
popa
pushw
mov
ljmp
insb
mov
xor
popf
out
ja
and
add
out
fcomip
jg
int
ffree
push
pop
pop
cwtl
inc
add
in
adc
and
mov
imul
lock
fisttps
sbb
repz
mov
xlat
pop
mov
push
cld
lcall
test
shrb
in
fistpll
add
cmp
dec
jle
jmp
cmp
push
cld
ljmp
jl
andb
push
or
ljmp
clc
xor
repz
jbe
in
daa
or
sbb
arpl
dec
sub
ljmp
adc
add
push
pop
dec
xchg
dec
xchg
bound
popa
shlb
pop
out
cmc
mov
or
jmp
jmp
hlt
mov
inc
stos
jmp
cmp
jmp
ret
xor
xor
cltd
out
lcall
addb
push
sub
clc
cmp
and
stos
add
ffree
xchg
mov
xor
mov
ja
and
out
push
enter
pop
push
mov
lret
mov
stos
test
xor
decl
insb
jg
mov
addr16
out
test
ja
jl
lret
sbb
jmp
add
jnp
inc
push
cmp
sub
sbb
adc
and
mov
sar
xchg
push
pop
jle
and
dec
adc
mov
mov
das
lretw
mov
out
mov
call
mov
xor
mov
pop
fst
push
fistps
mov
pushl
test
shl
lods
push
dec
jne
cld
push
push
xchg
sbb
in
dec
cmp
lock
cli
and
out
fcomip
cmp
mov
mov
in
shll
push
data16
in
and
ljmp
jle
jo
sub
push
dec
inc
jp
test
lahf
lahf
sbb
iret
call
and
inc
pushl
mov
and
bound
fbstp
mov
xchg
enter
jmp
mov
test
mov
outsl
insb
mov
push
int
add
repnz
inc
scas
outsb
clc
inc
adc
call
repz
pop
push
test
stos
decl
std
mov
jns
mov
pop
pop
sbb
icebp
ret
sub
lcall
outsl
adc
aad
shrb
jl
fwait
rcll
mov
xchg
jmp
in
lcall
push
mov
mov
cli
repnz
cmp
jmp
add
sti
fbld
pop
decl
add
cmp
decl
xchg
stos
dec
imul
ja
into
and
mov
shl
imull
jmp
lret
xor
mov
mov
pop
sti
ficoml
std
lret
xor
out
loope
push
or
incl
sbb
fnsave
hlt
mov
add
cmp
lret
popf
mov
cmp
jmp
sub
out
int3
stc
mov
jp
lock
les
cld
daa
inc
xchg
cmp
pop
fsubrp
or
pop
cmc
incl
aas
jge
fucomip
mov
sbb
ss
sar
mov
out
mov
std
pop
rorl
mov
stos
adc
xor
test
lcall
and
dec
ret
xor
and
mov
mov
xor
ljmp
std
pop
sbb
pop
xchg
sbb
or
daa
test
ljmp
sub
mov
mov
cmp
stc
cmc
inc
xlat
push
inc
sbb
cmp
popa
popf
out
mov
fsubl
daa
add
inc
stos
stos
ret
shr
hlt
loop
negl
mov
fistl
leave
xchg
test
cmp
and
mov
jg
sub
ljmp
enter
mov
add
mul
in
or
call
andl
ret
ficomps
std
mov
out
sbb
jmp
in
xor
ds
xchg
cmp
pop
test
pop
out
out
aaa
negb
mov
mov
movsl
mov
push
nop
outsb
mov
add
in
sahf
inc
ljmp
fstpt
adc
fidivs
xor
enter
pushf
and
popf
adc
or
mov
fs
in
cmp
pop
ljmp
sar
jmp
in
dec
lret
out
push
ja
jmp
fnstcw
lcall
jnp
adc
pop
movsb
imull
fimull
or
arpl
push
mov
out
loop
lcall
rcll
jge
sbb
add
les
lcall
xchg
test
das
lcall
filds
inc
scas
pop
xor
pop
imul
incl
ret
pop
cmp
icebp
jl
gs
and
jmp
jecxz
in
cmc
fcomi
in
imul
jge
ret
rol
ljmp
push
lcall
cld
dec
jg
lock
dec
push
xor
cs
popa
push
pushl
lcall
out
push
and
and
icebp
xchg
repnz
aas
mov
mov
dec
or
inc
mov
rcll
or
pop
scas
jns
out
xor
icebp
incl
xchg
test
jle
jnp
dec
add
dec
mov
nop
sub
jo
jmp
repz
jo
decl
decb
outsb
insb
ret
sti
lea
inc
cmp
mov
arpl
mov
out
pop
sub
out
movsl
jp
fwait
or
pop
mov
jl
push
xchg
lret
or
mov
enter
es
cmp
dec
and
ret
push
call
in
cltd
push
or
adc
in
and
test
out
cmp
das
imul
mov
negb
lcall
push
or
push
rcl
das
xor
lahf
add
jae
push
pop
jge
mov
movlhps
sahf
pop
enter
fldl
outsb
xchg
and
icebp
jbe
daa
out
push
ss
lcall
xchg
or
movsb
int3
repz
inc
push
mov
cmp
in
adc
mov
das
mov
lcall
xchg
inc
fidivl
mov
push
pop
iret
xchg
mov
push
lock
idivl
cmp
mov
in
scas
test
pop
push
mov
lods
mov
push
mov
mov
aad
mov
lcall
repnz
or
adc
xchg
adc
mov
inc
jnp
stc
data16
outsb
and
dec
cmp
push
xor
cmp
outsb
mov
lock
ljmp
test
sbb
and
dec
icebp
das
jne
insl
xchg
aaa
daa
insl
add
outsb
jl
sbb
rorl
inc
xchg
push
lcall
sbb
pop
xchg
or
lods
imul
mov
inc
out
hlt
arpl
pop
fmull
addr16
cmp
mov
and
push
adc
mov
aam
repnz
stc
rorb
inc
jg
jmp
lock
xchg
cmpl
jne
add
push
and
mull
lcall
add
ss
xchg
cmp
in
mov
arpl
mov
jecxz
pop
mov
call
xchg
scas
int
and
sub
decl
mov
les
cmp
add
pop
mov
add
mov
clc
cmpsb
rol
jmp
jl
movsb
push
jae
decl
sbb
cs
fldt
std
adc
mov
jbe
incl
xor
adc
mov
adc
jb
push
push
add
js
cmpb
ljmp
adc
inc
data16
test
clc
int3
fldl
jg
cwtl
jg
call
or
call
hlt
fs
xor
ret
movsb
jg
loopne
lock
adc
jnp
adc
out
and
std
out
xchg
jne
add
call
mov
sub
scas
pop
add
mov
or
in
popa
movsb
lcall
xchg
push
xchg
add
mov
xor
inc
mov
ljmp
dec
cwtl
in
lahf
out
xchg
outsb
or
mov
inc
cli
ljmp
ja
nop
cmp
and
std
ret
mov
lock
push
les
push
or
jmp
lcall
push
sahf
pop
xchg
call
push
sahf
in
push
inc
test
aam
loop
mov
jmp
outsb
mov
add
xor
rorl
out
mov
dec
adc
sar
fstps
jmp
add
aaa
or
mov
bnd
fbstp
gs
into
in
adc
scas
adc
shll
cwtl
add
jg
fnsave
decl
dec
dec
outsl
loope
clc
xlat
sub
pop
xchg
pop
mov
sub
xchg
adc
ss
or
daa
dec
fidivs
mov
lcall
mov
fucom
pushf
lea
stos
mov
das
repnz
ljmp
addr16
cmpsb
inc
pop
jp
ja
lret
or
xchg
data16
xchg
sub
jb
sti
pop
mov
ja
jae
mov
pop
loopne
mov
imulb
cmc
mov
ljmp
pop
lods
rcr
bound
leave
xlat
sbb
fwait
cmpsb
jbe
fcmovbe
inc
mov
clc
out
mov
cmc
incl
or
imul
cmp
push
imulb
push
stc
push
jnp
nop
cwtl
fs
gs
pop
push
push
sub
push
sub
lods
stos
and
jmp
sti
decl
arpl
jns
pop
fidivl
icebp
dec
push
movsb
jne
push
popa
and
out
test
mov
pop
nop
int3
je
jbe
cmp
adc
lret
inc
jg
int3
mov
xor
push
bswap
int
cmp
incb
push
les
je
dec
lcall
pushl
jnp
enter
sub
xchg
lcall
movsl
push
jl
out
out
int3
in
int
sbb
pop
icebp
decl
les
mov
push
imul
cmp
cld
cltd
lods
mov
outsl
loop
lcall
ficompl
push
fldcw
inc
xchg
add
push
in
ret
and
cmp
int3
stc
dec
decl
pop
push
gs
mov
lret
mov
cwtl
inc
pop
mov
jmp
lds
dec
sbb
pop
int3
pop
fwait
add
and
xchg
mull
jmp
fs
push
or
fnstcw
xorb
in
stos
mov
pushl
cs
jg
xchg
dec
add
cli
mov
mov
xor
fwait
mov
lock
sti
mov
push
ja
in
cmp
push
push
lea
mov
cmp
adcb
addr16
mov
sbb
and
inc
call
leave
inc
adc
aam
fiaddl
shll
adc
mov
inc
pushw
or
call
loope
fisubrs
enter
sbb
aas
pop
dec
rorl
lods
mov
sti
pop
mov
jl
jg
fcomip
pushl
jno
pusha
add
scas
shlb
inc
or
add
mov
stos
call
xchg
pop
rol
pop
push
xor
sub
mov
push
movsl
xor
xchg
dec
sar
call
xor
aam
je
cmp
movsb
adc
pushl
addb
mov
and
add
out
jg
icebp
mov
jo
and
incl
xor
inc
xchg
dec
insb
sbb
inc
rcll
and
or
jbe
push
cmp
jg
fs
push
inc
loope
sti
cmp
js
orl
mov
loop
sub
sub
js
xor
pop
xchg
push
sub
cli
inc
loopne
insb
decl
push
sbb
icebp
call
psllq
jo
xchg
jne
jg
mov
stc
lcall
loope
push
and
sbb
and
sub
push
movsb
pop
dec
mov
shlb
mov
mov
lahf
pop
cwtl
adc
mov
cli
rorl
decl
mov
pop
imul
mov
jnp
mov
mul
fiadds
sar
jmp
xchg
mov
fistpll
mov
mov
ljmp
lock
and
add
dec
pop
and
outsl
in
cmp
repz
cld
pop
pop
xchg
inc
fcomps
xchg
add
aam
call
cltd
test
mov
add
mull
notb
ret
ficoml
ljmp
movsl
int3
scas
push
lret
lcall
jle
jmp
add
insl
xorl
aam
sbb
call
or
mov
es
and
mov
push
cmp
scas
jp
push
fsub
push
sbb
push
scas
imul
call
push
sub
mov
mov
pop
cmp
xchg
mov
pop
icebp
inc
add
inc
insb
xlat
shl
adc
pushl
enter
pop
cs
data16
insl
or
ja
call
jb
xor
inc
into
cmpsl
inc
mov
out
xchg
or
inc
pop
popa
inc
nop
inc
lea
jmp
dec
ficoml
and
push
push
mov
or
jo
jmp
negb
in
sbb
sub
call
or
lcall
and
mov
mov
cwtl
pop
push
dec
pop
mov
cli
mov
inc
xor
fdivl
pushl
leave
les
pushf
dec
lea
loopne,pt
xor
nop
mov
pop
js
jae
dec
mov
data16
add
fdivl
xor
jmp
dec
fcomps
mov
test
mov
adc
push
jae
add
leave
jg
call
scas
push
and
rorl
sub
sub
cmp
jbe
mov
adc
decl
sti
mov
out
clc
mov
mov
sbb
test
or
mov
add
or
loop
test
lcall
std
dec
sbb
decl
les
rcrl
lds
push
es
mov
incl
addb
in
dec
fistpll
call
xor
ds
pop
loope
and
sub
jo
test
clc
mov
mov
aam
fstpt
xor
xchg
sub
or
jg
lcall
pop
cld
test
icebp
ds
adc
xchg
dec
mov
mov
gs
nop
pop
frstor
test
pop
cld
pushf
lcall
jnp
adc
decl
scas
outsl
push
pushf
rcrl
aad
sub
repnz
test
call
outsl
dec
repnz
mov
dec
mov
mov
lret
or
lcall
test
js
pop
mov
popf
sbb
jl
pop
cmp
jle
mov
fcomip
jns
ret
mov
xor
fwait
fwait
movsl
jo
stos
and
loopne
and
cmp
loop
enter
in
inc
pop
in
pop
aas
sub
aaa
fisttpll
adc
incl
imul
xchg
adc
bound
xchg
add
jecxz
push
dec
push
jns
stos
in
loopne
pop
sub
pushf
mov
pop
insl
in
neg
insl
iret
mov
mov
aas
xchg
test
rep
sub
decl
test
jae
inc
ja
in
jne
out
pop
cli
adc
out
mov
clc
xchg
jb
loopne
sbb
aas
ja
xchg
add
mov
fdivs
dec
sahf
sbb
cwtl
ljmp
hlt
fisubl
aaa
mov
sub
push
out
push
xchg
cwtl
enter
out
pushl
jge
or
shl
cmpl
adc
mov
adc
lock
incl
push
jge
insb
inc
xchg
aad
add
mov
jg
push
inc
dec
pushf
ret
fcoms
aam
movsb
cmpsl
scas
shlb
push
insb
pusha
shlb
inc
push
jo
vpsllw
mov
test
pushf
push
push
jbe
aam
scas
adc
jmp
dec
paddb
fs
pushf
sti
inc
loope
push
mov
or
lock
lcall
iret
mov
push
jnp
jle
dec
pop
ret
aam
cmpsl
pop
iret
lock
fdivs
ljmp
ljmp
out
into
jb
sbb
stc
mov
mov
call
das
mov
imul
scas
sub
mov
popa
out
push
or
incl
mov
cmpsb
inc
stos
and
fsubrs
cmp
pop
dec
cld
xor
jge
push
push
test
jg
inc
jp
ja
xchg
dec
out
into
mov
mov
ret
arpl
mov
push
xor
xor
push
mov
lods
sbb
jmp
sahf
inc
mov
dec
clc
xchg
in
imul
adc
call
cltd
push
into
sbb
test
pop
std
cmp
mov
dec
and
jl
or
incl
subl
das
jns
movsl
jl
sub
lock
loopnew
and
fists
test
cmp
das
loop
mov
out
mov
sub
jl
mov
mov
xchg
je
popa
popa
arpl
and
dec
dec
push
sub
ljmp
cmp
fs
mov
data16
push
cli
icebp
jl
ds
mov
add
ljmp
fidivrs
dec
mov
sbb
pusha
xchg
jge
cmp
cmp
popf
call
jno
pusha
andl
stc
inc
inc
leave
call
ss
adc
incl
sub
or
fs
cld
dec
out
mov
add
sbb
test
push
jecxz
dec
gs
dec
rclb
mov
jl
xor
jl
cmp
pop
repz
sbb
decl
sub
fs
push
out
push
bound
inc
mov
dec
addr16
loop
ficomps
ljmp
ljmp
jns
shlb
pop
lods
repnz
std
fdivr
cmovbe
mov
decl
dec
push
mov
loopne
std
sub
leave
pop
es
movsl
xchg
mov
push
push
loop
lcall
mov
sbb
adc
pushl
sub
mov
mov
xchg
test
push
lods
addr16
sbb
xor
test
ret
lock
and
dec
push
imul
idiv
jg
inc
xor
inc
gs
outsb
into
mov
lcall
out
push
imul
insb
adc
repz
pusha
jge
cmpsb
bound
out
popl
push
ret
xchg
incl
inc
pop
mov
jmp
pop
jp
mov
test
push
fbld
adc
arpl
imulb
sub
fisttps
insb
pushw
fdivp
out
outsl
das
les
adc
fadds
icebp
jns
mov
xor
setl
dec
popf
dec
jmp
lods
jnp
call
je
mov
ds
push
jae
cltd
mov
inc
push
xchg
insb
push
test
in
push
or
in
cmp
out
inc
or
adc
addr16
cwtl
add
push
imul
js
imul
cltd
jge
jle
push
testb
iret
mov
call
push
call
enter
pusha
test
iret
inc
sbb
or
insb
es
aaa
test
movb
out
test
adc
iret
int
mov
cli
mov
mov
pop
das
shl
js
push
push
out
jp
push
adc
push
jne
mov
and
es
lea
jge
sar
add
inc
inc
sub
xchg
jne
adc
push
std
pop
les
mov
aam
dec
aas
out
mov
lcall
push
dec
fdivrl
or
pop
das
adc
add
pop
aas
jl
icebp
or
jbe
sarb
pop
and
xchg
xchg
subb
test
sub
adc
push
pushl
adc
dec
push
xor
pop
inc
lahf
push
in
mov
jo
push
adc
mov
jmp
clc
or
dec
mov
inc
and
pop
xchg
sbb
jmp
stos
push
iret
mov
sbb
into
enter
cmpb
and
add
pop
xchg
sar
pop
or
adc
jae
sbb
mov
loop
sub
or
pushl
mov
js
fdivr
mov
xchg
cmp
in
shl
popf
mov
dec
cmp
mov
jge
xchg
jns
jmp
icebp
rolb
inc
rcrl
jg
ds
add
aas
test
cmp
outsl
insb
cmp
cmp
ret
xor
or
lcall
movsb
pop
xchg
xor
in
aam
jnp
jp
inc
mov
and
dec
mov
dec
insl
xchg
dec
cmp
pop
insl
pop
sub
fstl
ja
lret
jbe
mov
cltd
roll
lcall
inc
xchg
ficoml
push
mov
rol
add
push
dec
adc
ljmp
je
mov
sbb
lea
mov
enter
jo
fisttpll
inc
adc
push
jle
loop
cmp
or
xchg
pop
lods
xor
inc
jge
fsts
out
cmc
shrb
les
in
dec
aas
stc
xchg
arpl
test
mov
or
lahf
jg
loop
cld
ret
sbb
inc
stc
sbb
pusha
jmp
in
cs
cmc
cld
fbstp
jecxz
lcall
ret
inc
fcomip
sub
sub
add
push
pop
sbbb
pop
pushf
jle
sub
adc
es
call
jle
jmp
and
incl
ds
test
loope
pop
xchg
pop
cltd
sbb
pop
test
mov
pusha
pusha
inc
sbb
imul
call
and
dec
mov
loop
fistps
sub
les
or
sub
in
sub
ljmp
jne
push
pop
popf
lret
sbb
loop
jmp
mov
int
sub
or
mov
decl
outsl
mov
sub
pop
xchg
xchg
cmpsl
das
xchg
frstor
mov
icebp
cmpsb
or
xchg
test
decl
or
fadds
call
xor
sarl
jae
lds
ljmp
lcall
jle
xchg
push
xor
pop
bound
scas
sub
push
jp
jne
xchg
fwait
cli
and
jg
ljmp
cs
sbb
lret
lret
daa
or
jno
hlt
lret
xchg
les
and
fcomip
call
dec
push
subb
pop
ret
sub
outsl
ds
aaa
sahf
sbb
loope,pt
and
mov
xchg
cltd
pop
lods
or
movsb
or
dec
mov
ljmp
mov
scas
cli
hlt
or
jge
push
scas
into
xor
sub
mov
in
rorb
fnstcw
xlat
mov
cld
insl
fmulp
inc
dec
xor
push
jae
sahf
nop
rclb
push
sbb
imul
dec
ror
call
push
or
icebp
lahf
pop
xchg
dec
daa
clc
jne
sub
sub
jne
jb
dec
in
incl
daa
jo
xchg
sbb
scas
mov
movsb
mov
stos
cmp
or
dec
test
daa
enter
xchg
aas
fwait
movsb
mov
hlt
lea
push
push
xor
pop
sub
cmpsb
jg
pop
aad
inc
fisubrl
mov
mov
rol
inc
xchg
push
rep
repz
ljmp
sub
orl
cmp
push
lods
add
ja
xlat
jge
movsl
cld
loopne
cli
mov
pushf
aaa
jmp
ds
jo
or
jp
stc
in
xchg
push
inc
incl
mov
jbe
imul
rcl
notl
mov
lock
fdivr
jmp
xchg
cmp
int
roll
fsubp
test
cwtl
mov
and
incl
test
lcall
cli
lcall
rol
pusha
mov
mov
cmpsl
adc
pop
in
negb
or
pop
jp
inc
fstpl
subl
rcrb
mov
std
mov
pop
scas
add
jecxz
dec
cmc
adc
jge
andl
in
push
sub
je
lods
xor
ret
bound
ds
cmc
inc
das
and
mov
push
and
mov
stos
shrl
decl
std
add
in
cmp
cmpsb
insb
sub
xchg
insl
or
cmp
mov
jmp
imul
fidivrl
lcall
vpsllq
push
pop
sub
mov
push
or
sub
ljmp
lret
sbb
std
out
ss
dec
pop
push
dec
shlb
or
leave
cmpsb
jmp
icebp
decl
or
mov
into
and
push
jbe
out
push
push
dec
mov
adc
lcall
test
xor
adc
mov
adc
add
call
scas
pop
aas
ficoms
stos
and
fs
inc
shlb
adc
loope
lods
outsl
inc
mov
ljmp
inc
lret
jb
jno
lcall
inc
pop
cmp
scas
incl
faddl
jge
dec
repz
inc
imul
cmp
mov
push
subb
inc
or
repz
add
adc
test
adc
mov
lods
mov
adc
mov
dec
sbb
and
adc
call
push
scas
adc
xchg
adc
test
aad
imul
cmpsb
mov
out
xor
jp
lret
orb
ret
add
push
and
mov
leave
addb
jmp
push
je
scas
and
incl
push
xor
adc
iret
jno
test
push
out
dec
push
sbb
incl
into
push
mov
mov
or
and
stos
sysret
daa
and
ud2
ret
fcomps
pop
pop
xchg
push
loopne
rcll
push
adc
ret
cmp
cmp
incl
clc
cmp
mov
inc
mov
jnp
pop
and
pushl
dec
dec
inc
cmp
or
in
rcll
dec
xchg
add
sbb
loope
ret
mov
fcos
call
jns,pn
pop
mov
sub
cmp
insb
add
lret
aam
cld
aas
into
stos
call
jmp
mov
ret
sti
and
or
loope
inc
inc
ret
inc
and
mov
pop
mov
or
jl
xchg
cmp
movsl
push
test
decl
mov
fucompp
ja
bound
ja
jl
push
jno
cmp
idivl
repz
pop
sti
call
pop
hlt
pop
or
cmp
jle
xor
nop
clc
test
js
mov
jb
xchg
call
ret
mov
sbb
cld
repnz
push
stc
fwait
xchg
insl
insl
push
hlt
jo
lret
call
jl
jns
scas
cmp
popf
lret
push
adc
sbb
in
add
mov
pushl
ss
mov
popf
scas
fdiv
push
mov
lds
xor
adc
lcall
jo
mov
jecxz
xchg
pop
and
cltd
in
xchg
leave
notrack
data16
jg
out
mov
int3
or
test
out
xor
cmp
cmpsb
mov
aas
cmp
call
cli
mov
mov
movntq
mov
sub
repnz
pushf
inc
stos
mov
push
pop
into
mov
addr16
lods
je
cmpsl
or
incl
ret
mov
aaa
inc
xchg
xor
xor
pop
shrb
push
mov
insl
fdivs
ljmp
in
cmp
cmp
lods
enter
les
push
loopne
mov
add
or
lds
mov
sbb
insb
push
or
add
mov
test
mov
call
xor
jg
fnstsw
sub
sbbl
push
jae
and
push
jns
dec
popa
sbb
dec
sti
sbb
aaa
aam
int3
or
add
cmpsb
hlt
sti
icebp
mov
add
push
loopne
add
loopne
in
mov
incl
dec
inc
sbb
repz
cwtl
ret
push
insl
jecxz
adc
mov
in
cmp
sbb
or
jge
enter
and
add
popa
or
imul
jl
decb
push
dec
and
fwait
loope
lea
jns
mov
lds
js
xchg
call
cmp
mov
es
shlb
adc
int3
je
lret
push
fnstsw
leave
aas
jbe
movsl
lcall
sbb
cmp
cmp
cltd
aad
hlt
dec
pop
dec
cmpsl
insl
testb
cwtl
pop
cmpsl
fwait
decl
pop
subl
dec
or
xchg
mov
popf
leave
incl
cmc
adc
mov
inc
aas
daa
xchg
shlb
test
pushl
sbb
dec
addr16
roll
jmp
sbb
cmp
mov
dec
lcall
lods
clc
or
call
aad
or
push
or
xchg
in
inc
imul
ljmp
in
jne
pop
ljmp
xlat
mov
cld
arpl
je
call
pop
or
xchg
mov
jns
ficompl
and
ss
dec
lods
push
pushf
dec
leave
daa
mov
xor
sti
or
mov
iret
scas
cmc
stc
movsb
lahf
rclb
cmc
dec
mov
dec
pop
jg
jo
add
lret
push
sbb
fildll
sbb
jbe
sbbb
pop
pop
cmc
loopne
dec
inc
xlat
mov
fwait
dec
out
scas
std
mov
jle
scas
fwait
imul
cli
cmp
decl
xor
repz
shrl
ljmp
xchg
pushf
jno
and
adc
fcomip
jmp
popf
mov
xor
out
push
aam
xchg
inc
sbbl
lcall
data16
pop
mov
xchg
nop
cmp
in
insl
cs
pop
dec
mov
das
adc
clc
cmp
out
sub
data16
sti
mov
jp
cmp
rcrl
je
in
xchg
add
xor
or
aam
xchg
push
xchg
out
mov
mov
repnz
jg
aaa
fs
jecxz
mov
cltd
cmp
mov
out
call
sbb
xchg
jge
arpl
enter
cli
xchg
xor
xchg
decl
decl
xchg
cmp
icebp
movsb
cmpsb
push
pusha
scas
mov
data16
dec
gs
clc
mov
repnz
jo
push
adc
fs
and
insl
cld
xchg
daa
xlat
xchg
in
mov
js
cwtl
inc
push
xchg
and
add
movsl
jae
and
loopne
mov
lcall
cmp
pop
adc
fstpt
jge
xchg
and
outsb
adc
push
push
pop
insb
inc
scas
add
call
mov
dec
jmp
movsb
scas
sbb
into
jb
inc
addl
test
xchg
lcall
adc
std
test
jbe
andl
movsl
jnp
inc
incl
mov
mov
in
dec
jne
int3
dec
testb
pop
repz
lahf
mov
shlb
mov
and
jbe
cmp
aas
inc
int
fildll
xchg
push
test
roll
decl
mov
inc
push
cmp
push
test
adc
and
mov
out
sti
mov
jp
dec
or
mov
and
jb
scas
in
inc
loope
mov
leave
dec
mov
sub
mov
mov
jno
mov
cmc
repz
ds
repz
dec
and
fldcw
notl
pusha
add
sti
test
jl
pop
incl
mov
xor
mov
rclb
jle
fmul
into
call
adc
arpl
leave
fimuls
adcl
adc
jmp
lcall
or
rclb
push
lret
fadds
jb
lret
cmp
loope
popa
and
incl
test
and
sub
pusha
sub
das
stos
jbe
out
jb
pushf
add
ljmp
test
xchg
mov
push
inc
out
xchg
adc
mov
pop
push
jo
sahf
adc
xchg
mov
jb
inc
and
cltd
fstps
xor
cmp
mov
ss
incl
repnz
xorl
out
xchg
daa
or
sahf
xor
and
daa
dec
pushl
jmp
cmc
adc
out
lret
dec
fsub
push
mov
insb
cmp
clc
scas
out
pop
pushl
aas
pop
sub
mov
repnz
outsl
jne
scas
pop
adc
mov
jmp
jns
adc
cmpsl
mov
push
mov
mov
mov
aaa
int
cmpsl
mov
je
jp
mov
mov
lcall
and
or
jne
mov
pushf
mov
ljmp
decl
cmp
inc
mov
dec
scas
mov
lahf
push
clc
pop
xlat
adc
dec
mov
lods
push
icebp
add
ja
repnz
pop
jg
sar
cwtl
frstor
mov
sbb
inc
jbe
imul
hlt
adc
inc
mov
adc
inc
leave
mov
mov
stos
out
jne
outsb
mov
xor
add
call
pop
sarb
fwait
xor
adc
pop
rcrl
add
push
xor
les
jmp
pop
jae
push
xchg
xchg
jl
ss
dec
std
mov
fcmovnb
mov
ljmp
orb
or
shl
inc
shlb
jg
insl
stos
fwait
xchg
cmp
test
sti
xor
js
pop
loopne
movsb
sub
ds
mov
sbb
inc
popa
and
xor
ljmp
out
jno
push
push
or
fwait
int3
dec
loop
addr16
jb
cwtl
push
dec
aas
call
jecxz
call
popa
fwait
mov
adc
roll
ja
mov
mov
cmp
cli
mov
mov
mov
test
adc
call
test
mov
and
cmpsb
adc
jl
mov
or
xchg
jno
loopew
aad
aas
inc
cmpsb
add
dec
pop
push
ds
dec
push
or
jl
decl
push
test
xchg
xchg
lahf
cmp
sub
aam
cs
pop
int
and
xchg
and
scas
inc
and
and
sub
mov
mov
jecxz
sbb
outsb
std
add
decl
dec
or
dec
or
cltd
jbe
pop
inc
decb
mov
nop
stos
ljmp
inc
sub
enter
mov
adc
test
addr16
scas
jns
clc
sar
ljmp
std
or
mov
push
stos
mov
xor
incl
insl
jecxz
and
test
fld
xor
xor
jne
sahf
jmp
cmp
outsl
or
dec
shl
loopne
mov
add
mov
jp
imul
mov
sbb
pop
push
jo
xchg
and
xchg
sti
shll
sbb
cmp
push
dec
inc
push
in
jl
pop
mov
mov
clc
pop
adcb
stos
bnd
insb
and
jmp
dec
dec
lret
xchg
je
xchg
das
pop
test
ret
out
cmp
fisttps
lcall
clc
lahf
cmpsl
and
test
xor
repnz
add
jmp
ficoml
pop
push
les
pop
pop
xor
pushl
movsl
idivl
sub
dec
aaa
cld
mov
push
mov
xchg
insl
sub
sub
ljmp
jae
cmp
dec
mov
or
mov
lea
fs
sub
cs
mov
cmp
mov
pop
pop
adc
and
incl
inc
jns
xchg
stc
adcl
insl
js
mov
adc
mov
cmp
ljmp
pop
add
or
pop
and
test
loop
xchg
or
mov
jmp
sbbl
incl
push
jge
jle
xlat
out
or
pop
in
mov
mov
mov
mov
xor
and
arpl
ret
jb
add
sbb
lcall
outsb
das
pop
inc
sbb
popa
mov
xchg
in
mov
mov
mov
jns
xchg
decl
nop
cmp
fstps
sti
mov
xor
mov
push
mov
call
and
mov
or
dec
aad
cmp
imul
sbb
add
mov
pusha
ljmp
out
mov
loopne
ss
mov
lret
dec
jns
into
aad
mov
mov
shl
xor
dec
mov
cwtl
and
lret
xor
fsubr
pop
movsl
adc
or
inc
nop
decl
jbe
aam
adc
jno
popa
sti
xchg
xchg
add
shl
jbe
popf
lea
pushl
xor
hlt
inc
loopne
sub
arpl
movsl
pop
jl
inc
ret
dec
sbb
sub
cmp
pushl
jno
sarl
cmp
stos
cli
jb
out
push
xchg
jb
pop
aam
movsb
inc
sub
mov
jnp
cltd
adc
fndisi(8087
jg
xlat
cmpsl
cmp
lods
xlat
test
adc
push
sbb
lock
mov
fwait
insl
cmp
fcompl
fnstcw
lcall
lods
lock
ret
in
fsubrs
js
sbb
jmp
dec
jbe
cmp
ret
ljmp
inc
xlat
xchg
mov
push
fisttpll
xchg
jge
jecxz
les
mov
incl
test
mov
int
cmp
testb
sub
pusha
cmc
fimull
sbb
cld
fstp
icebp
inc
sbb
cmc
cmp
outsl
mov
or
js
test
xor
sbb
test
lods
adc
dec
ret
cld
ja
arpl
pop
rorl
movsb
ds
sbb
xchg
add
xorb
fxch
inc
mov
js
cmpl
mov
in
jle
jno
in
and
ficomps
loopne
ljmp
test
repz
in
orb
jg
xchg
adc
test
call
scas
jp
fwait
sub
fs
mov
and
fwait
pusha
inc
cmp
popf
jmp
ficoml
pop
fcmove
and
std
js
xor
das
mov
decl
mov
int3
push
imul
outsb
fimuls
das
clc
scas
jb
xor
jns
xchg
lahf
lcall
decl
or
mov
add
cmpsl
or
outsb
ds
test
shrl
iret
mov
mov
lret
sti
xor
pop
xor
push
cmc
test
in
testl
hlt
mov
pop
hlt
inc
xor
push
mov
pop
and
out
xor
test
xchg
mov
loopne
fists
sbbl
lods
cmp
out
push
xor
push
xor
movsl
ljmp
jg
call
hlt
mov
iret
xor
mul
jo
xchg
data16
lcall
mov
adc
inc
push
xchg
outsl
dec
mov
jo
jge
lock
add
mov
add
jp
dec
sbb
arpl
or
dec
addr16
sub
xor
icebp
std
or
inc
int
push
out
mov
clc
out
and
sbb
test
dec
cpuid
incl
out
adc
cld
ljmp
lcall
and
mov
lahf
pop
cmp
xlat
dec
rcl
scas
and
neg
fcomip
mov
fwait
inc
mov
fadd
and
aaa
cmp
inc
xchg
sbb
inc
mov
jnp
in
lret
js
jmp
xchg
loopne
test
push
ja
push
call
jle
jle
ret
fmull
cmpsb
jge
dec
mov
or
push
pop
jmp
std
sbb
cmc
mov
outsb
inc
or
sbb
adc
push
mov
push
mov
xchg
ss
adc
xchg
data16
lcall
inc
and
push
int
mov
inc
jl
push
mov
xchg
jmp
xchg
fisttpl
out
cli
pushl
pop
rclb
ror
testb
mov
jmp
jmp
stc
jb
shl
cltd
sub
gs
mov
cmp
outsb
or
mov
lahf
ds
ljmp
test
or
adc
lret
in
sahf
mov
push
add
sahf
jge
out
cli
inc
lret
and
fcomip
les
push
mov
mov
xor
xor
push
sub
xor
outsl
push
mov
stc
add
add
stos
insb
cs
sbb
call
pop
jge
inc
inc
adc
adc
adc
fwait
push
mov
or
fstpl
call
sub
loope
jbe
lods
jno
push
es
inc
mov
jmp
repnz
mov
popa
scas
lods
sti
out
mov
aaa
push
iret
and
cwtl
test
mov
ja
call
cmp
adc
movsb
jg
pop
cmp
ficoms
out
movsb
enter
inc
jg
insl
or
insb
bound
or
push
push
xor
inc
cmp
jp
add
sbb
imul
loop
mov
push
rcll
popf
scas
mov
call
les
push
stos
ret
or
add
dec
sub
jae
push
mov
and
jp
adc
outsl
cli
decl
lret
push
mov
pop
inc
shll
xlat
lock
jne
jb
mov
adc
or
dec
loopne
stos
jae
adc
je
or
fwait
mov
mov
incl
add
and
prefetch
adc
aaa
out
mov
mov
enter
jo
les
popf
mov
jmp
into
outsb
js
sbb
xor
cwtl
lret
lret
repnz
arpl
push
xchg
das
scas
mov
bound
aad
adc
ja
out
cmpsb
push
ljmp
gs
mov
pop
mov
jns
in
cmp
mov
sub
out
and
popf
and
inc
sub
cmp
cmp
ljmp
push
adc
test
adc
and
jnp
xor
adc
lcall
push
add
jge
mov
adc
sbb
ss
icebp
jno
movsl
mov
decl
cwtl
dec
adc
lods
dec
add
insl
inc
dec
aam
mov
jmp
push
mov
xchg
fdivl
mov
xchg
pop
xor
aam
mov
push
leave
push
inc
shlb
fs
call
xchg
xchg
cltd
aaa
jns
mov
nop
mov
in
mov
adc
sub
jae
mov
pusha
push
out
pop
rcl
in
pop
mov
sub
push
sbb
andl
in
or
ret
les
mov
ljmp
popa
stc
fwait
mov
mov
mov
xchg
jne
jg
add
test
shll
insl
mov
or
ss
push
subl
jmp
nop
clc
les
clc
lods
cmpsb
inc
xchg
mov
sbb
ret
lret
jmp
or
ja
jb
lret
pusha
test
cmp
dec
test
out
out
jmp
adc
push
in
lods
mov
pusha
shll
imul
or
mov
ljmp
push
std
adc
push
loop
lods
imul
stos
repnz
nop
das
mov
daa
rcrb
into
ljmp
push
fistl
jnp
mov
incl
mov
stos
arpl
jge
pusha
std
mov
fsubl
xchg
mov
movsb
xor
shrl
pop
mov
sbb
decl
popf
mov
lahf
push
cmp
dec
into
movsl
inc
adc
adc
addb
lea
aaa
call
xchg
jns
dec
jmp
and
in
xor
xor
adc
pop
fs
shrl
cli
out
sub
fs
dec
mov
inc
stos
and
imul
cmp
fwait
cmp
outsl
cli
decl
sub
inc
idivl
and
add
pop
nop
xor
inc
fsubs
xlat
in
jmp
aas
xor
insb
ret
mov
lahf
lcall
in
cs
pop
stos
mov
decl
push
add
data16
shlb
dec
pop
mov
mov
push
inc
jo
jbe
adc
popl
adc
push
jg
decl
ds
aam
cmp
add
adc
out
nop
cmc
and
sub
call
andl
mov
mov
in
jg
cmp
call
je
pop
adc
inc
xor
lcall
aad
and
mov
mov
test
je
jb
stc
movsb
push
jmp
dec
addr16
shlb
incb
jb
dec
adc
mov
decl
loop
add
mov
add
cltd
cmp
pop
gs
inc
leave
lods
push
dec
test
cmp
test
mov
daa
les
out
fcompl
pop
sub
mov
movsb
lods
mov
mov
leave
ljmp
dec
leave
pop
loope
scas
xor
pop
push
outsb
loope
dec
cmc
adc
xchg
xor
xchg
lcall
loope
xor
sub
mov
test
aaa
pushl
cmp
mov
or
sub
sahf
ret
dec
sarl
fdivr
ljmp
pusha
stos
ss
jb
inc
sbb
repz
xor
push
pop
ljmp
sarl
call
ljmp
fcmovnu
cmpsb
lea
ds
sbb
sub
aas
movsl
iret
dec
or
ja
dec
pop
inc
incl
lea
stos
cmp
jnp
sbb
incl
bound
les
jb
iret
add
rcrb
or
pushl
pop
xor
push
and
jb
cs
cwtl
insb
rcl
daa
adc
lock
pop
hlt
jmp
mov
xor
ja
incb
ljmp
out
cli
jno
mov
lock
imul
ja
cmp
mov
sub
daa
jnp
pushf
or
loop
xchg
xor
pop
sub
outsl
js
incl
enter
sub
mov
imul
pop
jp
push
mov
aam
push
aaa
push
cli
xchg
cli
into
arpl
aad
shll
ljmp
lcall
jno
pop
sbb
mov
imul
pop
jnp
ljmp
push
adc
or
jle
mov
lods
call
cmp
cld
mov
aas
test
imul
cmp
xlat
lods
cmp
mov
loope
pushf
adc
pop
mov
mov
ja
sbb
out
mov
jns
cld
xorb
ss
ljmp
or
stc
xchg
sbb
inc
test
lahf
fmull
fsubrs
cmp
adc
add
xchg
jnp
mov
fs
inc
fstpt
inc
cli
call
loopne
pop
xchg
ds
push
add
shl
mov
jo
popa
pop
adc
sub
mov
lcall
sub
bound
sbb
mov
dec
leave
fwait
out
clc
pop
lods
adc
in
outsb
add
push
pop
pop
test
adc
inc
jmp
xchg
ja
add
push
repnz
and
pop
jmp
arpl
add
push
mov
insb
scas
pop
mov
push
bound
mov
gs
jae
fwait
jg
iret
lahf
pop
mov
lods
mov
data16
incl
fwait
adcl
or
mov
mov
mov
xchg
jl
fisttpll
pop
icebp
rcrl
cmp
sbb
jo
pop
push
popa
xchg
ja
dec
inc
mov
cmp
ljmp
xor
jp
icebp
cltd
outsl
jne
mov
xchg
pop
xchg
lcall
call
jle
mov
enter
pop
pop
or
sbb
mov
or
out
fwait
inc
jne
pushl
mov
cmpsl
mov
sti
sti
push
dec
mov
fisubrl
inc
sub
adc
mov
in
ja
xchg
cmp
pop
insl
into
mov
scas
inc
and
jb
push
gs
call
or
inc
aad
dec
xchg
fnstcw
inc
aam
sub
in
jmp
in
mov
fwait
scas
xlat
dec
pop
jo
jecxz
mov
repnz
dec
dec
fwait
xchg
es
outsb
jmp
sub
mov
mov
aaa
pop
imul
rcll
cld
incl
push
xchg
mov
hlt
and
pop
loopne
push
push
sbb
scas
out
pop
pushf
lret
dec
lahf
mov
adc
stc
subl
rcr
ljmp
cld
adc
push
push
mov
stos
or
aas
lcall
ljmp
pop
sub
push
push
inc
mov
add
mov
push
jle
xchg
out
mov
pop
jne
mov
jb
cwtl
push
mov
repnz
fmul
mov
outsb
addr16
decl
aad
cwtl
xchg
inc
loopne
and
cld
and
pop
cmpl
cltd
mov
sub
xchg
sarb
scas
or
adc
stc
add
ds
cmp
sbb
jbe
std
jae
movsl
inc
pushl
inc
in
push
loopne
dec
xchg
cmpsl
mov
mov
pop
data16
mov
dec
sbb
ljmp
cli
push
pushf
push
or
dec
cmpb
or
in
in
xorl
mov
ficomps
icebp
mov
xchg
mov
shrb
mov
or
outsl
lahf
push
and
sub
mov
mov
outsb
mov
inc
mov
call
addb
ljmp
aas
adc
movsl
mov
fildl
adc
xor
lea
push
inc
ljmp
xor
cmpsb
int
lcall
or
sbb
ret
cs
fwait
push
loopne
clc
inc
cmp
pushl
lcall
mov
xchg
sti
leave
jae
imul
dec
fcomps
cmpsb
mov
hlt
pushl
jle
sub
imul
push
xchg
das
jns
inc
xor
sbb
das
mov
fwait
xchg
int3
jo
shlb
stos
mov
fwait
sbb
in
adc
push
dec
mov
mov
mov
and
mov
ljmp
jmp
jge
ret
mov
in
test
mov
sbb
das
call
loopne
push
mov
ret
inc
lret
icebp
ja
fcoms
xor
mov
ljmp
inc
fisttps
out
repz
fwait
push
cmpsb
repz
lahf
outsb
ret
cs
push
and
and
inc
pop
int3
scas
and
pop
xchg
insb
sub
jnp
adcl
xchg
sub
ret
decl
jmp
xchg
int3
jle
fimuls
mov
lret
mov
inc
cmp
enter
incl
std
mov
call
sub
xchg
fcomi
or
scas
cli
arpl
jmp
jbe
lret
dec
shrb
push
inc
pusha
xchg
xchg
incl
add
and
filds
mov
int
sub
pushl
jmp
lret
adc
mov
popl
loope
add
orb
fsubp
mov
lcall
ljmp
jg
jl
mov
das
jae
daa
xchg
xor
hlt
and
call
mov
dec
and
dec
pop
pop
cmp
hlt
jl
mov
jle
push
jl
lcall
mov
sbb
fldenv
jo
ljmpw
dec
out
dec
dec
in
mov
incl
jle
sub
xor
mov
push
push
scas
pop
pop
jmp
decl
je
aaa
cmp
adc
bound
jno
std
pop
cmp
incl
in
out
and
fmull
xor
or
loope
idiv
lcall
sub
into
pop
imul
or
inc
sub
push
and
mov
and
out
aad
pushl
add
xchg
fsubl
jl
ds
repz
pop
bound
int
mov
and
xlat
jp
or
ret
pop
jl
dec
fisttps
xchg
xchg
and
jg
movsb
fs
cmp
jg
push
je
and
fcomi
pop
add
cmpb
scas
xlat
in
cli
les
cmp
outsb
into
bound
aam
gs
adc
movsl
cmc
mov
lcall
push
insl
xor
push
or
aaa
mov
mov
mov
cli
jns
test
fldenv
jg
ret
arpl
repz
inc
scas
or
call
push
pop
imull
pop
cli
jmp
int3
sbb
lea
repz
jmp
adc
es
jo
pusha
aaa
jbe
mov
nop
cli
stos
xor
out
pop
push
push
add
lcall
push
imull
jo
xor
mov
inc
or
call
cmc
hlt
hlt
lcall
jmp
inc
xchg
adc
adc
test
mov
dec
in
push
cld
ds
mov
jecxz
cmp
add
movsb
xchg
pop
fistpll
or
xchg
enter
push
xchg
cs
mov
cmpsb
in
xor
test
ja
fisubs
jno
out
or
in
adc
data16
rol
mov
or
xchg
inc
add
add
addb
ljmp
inc
or
xor
xchg
test
adc
cmpsl
scas
jae
jbe
lea
out
jle
cli
jo
stc
fcmove
bound
ljmp
dec
enter
mov
call
mov
loopne
inc
popf
push
incb
leave
xchg
xorb
xorl
push
mov
fisttpll
mov
call
jns
incl
sbb
dec
and
or
subb
lock
outsl
push
scas
xchg
pushl
cmp
lret
and
nop
push
imul
lock
push
pop
pushl
mov
fsubs
loope
shll
xchg
push
xor
jecxz
test
adc
es
decl
dec
daa
pop
adc
loop
mov
rcl
adc
mov
push
outsb
xchg
imul
pushf
shl
addr16
sub
and
hlt
mov
push
scas
add
jns
jb
in
insl
jmp
test
loop
imul
jecxz
pop
mov
dec
push
sub
leave
sbb
mov
pop
cmp
jle
pop
repnz
pop
mov
cmpsb
jae
stc
or
cmpsl
inc
add
adc
rcrl
pop
adc
add
push
into
jp
jnp
inc
notb
das
add
mov
cmp
ljmp
and
pop
jae
lods
bound
pop
mov
popl
sub
jp
add
xor
mov
ss
lock
daa
jge
dec
dec
pop
cmp
push
mov
jnp
mov
cli
mov
loopne
mov
xchg
jge
push
or
jne
xchg
cmpl
cltd
int
jo
incl
sbb
mov
ret
jne
fildl
scas
push
sbb
pop
daa
add
daa
cmc
pop
data16
and
aaa
cld
inc
push
loopne
inc
adc
mov
add
push
sbb
cmp
imul
dec
in
call
inc
mov
int
out
cld
mov
pop
in
cmp
inc
pop
hlt
inc
pusha
call
ljmp
rorb
xchg
jmp
decb
cwtl
test
jns
sbb
cmp
loop
xchg
loopne
sti
scas
je
and
or
stos
dec
out
nop
mov
lret
push
outsl
jmp
test
pusha
nop
jno
out
pop
mov
test
mov
inc
add
enter
into
sub
cmpsl
cld
addr16
popa
out
or
sub
and
mov
xor
cmpsb
mov
ds
and
call
pop
mov
cmp
or
jmp
sub
jmp
popf
jg
lds
jmp
mov
pop
sbb
pop
outsl
cld
xor
xchg
fsubs
push
inc
jae
xchg
adc
lcall
xchg
cmp
arpl
shl
cmp
push
adc
mov
lds
decl
fld1
sbb
sbb
or
sbb
test
add
lcall
jbe
sbb
add
mov
inc
imul
aad
mov
jne,pn
mov
sub
lcall
pop
cltd
ret
jae
sub
in
sub
lods
notl
and
lcall
lods
call
pop
cmp
hlt
imul
aas
mov
xor
mov
pop
mov
or
je
call
xor
call
fs
mov
dec
popa
jbe
div
sbb
aam
mov
addr16
les
mov
jmp
repz
in
and
xchg
cmp
mov
incl
cwtl
std
add
fidivs
lds
lds
out
dec
movsl
or
movsl
bound
mov
jb
mov
mov
jle
pop
fucomi
std
inc
adc
or
aas
std
jmp
sub
insb
push
pop
mov
popf
cmpb
pop
in
xor
jb
call
and
pop
xchg
cmpsb
cmp
loop
icebp
pop
mov
dec
jae
sub
xor
jnp
scas
mov
cli
arpl
mov
test
dec
cmp
xchg
scas
sub
int3
in
push
stos
lahf
out
jmp
jg
cmp
or
mov
cmp
or
push
lret
xchg
push
std
fldt
cmp
add
scas
dec
mov
aaa
loop
mov
pushl
lods
rcll
push
mov
mov
fs
xchg
and
clc
xchg
mov
out
mov
sbbb
mov
repz
adc
shl
cltd
ljmp
ret
mov
lods
push
mov
aad
mov
cmpsl
xchg
ret
inc
cmp
mov
push
leave
int
cld
stc
faddl
cmp
pop
cmp
int
dec
lcall
mov
mov
std
mov
inc
dec
stc
and
xor
cmp
cmpsb
stos
call
mov
dec
and
jnp
sbb
arpl
ds
mov
cs
push
lret
addr16
inc
sahf
fstl
fidivs
jbe
and
jmp
sub
fucomp
jo
or
mov
push
push
ret
mov
mov
push
decb
nop
sar
mov
jae
xlat
push
and
test
ljmp
dec
popa
and
push
cltd
sahf
cmpb
je
jo
mov
in
mov
out
iret
aaa
scas
xor
jmp
in
pop
xchg
add
out
outsl
stos
lods
adcb
ljmp
xchg
lcall
push
mov
jb
rorb
cmp
and
shll
cli
incl
cmp
cmp
or
add
pop
hlt
in
jae
cs
rcrb
mov
fidivrl
or
repz
fisubrs
jb
cmpsb
pop
imul
rorb
sahf
fistl
lcall
jmp
mov
xlat
das
lock
pop
stos
xor
subl
adc
push
cld
jmp
fnstcw
in
push
xchg
fisubs
pop
mov
loop
lods
mov
or
call
inc
dec
cmpsb
dec
scas
sbb
inc
push
jle
pop
outsb
sarl
jae
test
pusha
or
das
decl
mov
frstor
mov
shlb
and
mov
pushl
and
ret
cli
push
jle
adc
lcall
stos
cs
or
std
mov
lea
gs
cmp
dec
sub
jmp
lods
incl
loopne
data16
out
xchg
mov
fucomi
xchg
push
and
stc
lret
pusha
sub
out
clc
pop
sub
push
pop
add
stos
mov
mov
sti
mov
out
sar
pop
inc
test
inc
test
mov
ror
out
icebp
adc
sub
imul
lcall
adc
mov
sub
lea
stos
ljmp
jae
adc
pop
jle
xorl
push
jns
adc
daa
sbb
push
cmp
push
or
fiaddl
cmp
add
sahf
jns
sti
adc
jecxz
dec
pop
jno
or
imul
mov
cmp
mov
push
mov
decl
pop
les
adc
jne
int3
hlt
add
push
add
push
mov
mov
les
dec
sbb
dec
addl
adc
sbb
nop
cs
cmp
bound
jge
xchg
popa
add
push
ja
dec
sti
cs
sub
cmp
insl
mov
pop
add
push
nop
decb
mov
jle
lds
testl
cmp
fwait
xlat
sti
int3
ja
lcall
sbb
xor
sbb
pusha
repz
pop
loop
cmp
pushl
out
and
mov
jae
int
jg
lret
push
mov
arpl
popf
ficomps
xchg
int3
jge
je
dec
imul
mov
xchg
hlt
xchg
jle
push
sbb
inc
cltd
cli
mov
fwait
dec
and
rcl
and
sbb
pop
jne
loope
add
sub
aas
cmpsl
call
jecxz
sbb
dec
mov
mov
jle
in
insb
push
lcall
mov
cld
divl
out
out
pop
in
push
std
mov
xor
faddl
aas
push
dec
sete
leave
xchg
in
adc
xchg
mov
xchg
mov
lods
mov
mov
inc
jae
add
aas
repnz
lcall
and
loope
lahf
sar
pushl
ret
mov
mov
icebp
outsb
mov
stos
daa
imul
mov
pop
cmp
decl
clc
sbb
std
pop
mov
daa
jmp
dec
int3
mov
jno
sub
adc
jg
decl
fs
stos
dec
pop
jp
push
ljmp
pop
jo
cltd
pusha
lcall
popf
or
ja
out
rcrl
ficoms
mov
mov
inc
cld
mov
and
adc
add
xchg
decl
and
inc
sbbl
inc
pop
xchg
sbb
push
or
mov
dec
cmp
mov
jns
dec
cmp
mov
movsb
fcmovnb
adc
jnp
jbe
out
vcmpss
incl
mov
fisubrs
loopne
lcall
add
jae
pop
dec
ss
push
mov
lock
call
pop
sahf
jnp
movsl
push
arpl
shr
lock
ror
lcall
cwtl
jp
pop
jne
lock
imul
and
mov
decl
lock
xchg
xchg
pop
fsubrs
xorb
add
dec
jmp
test
push
jb
in
mov
dec
ret
mov
aas
jl
push
adc
rolb
xchg
dec
aaa
and
decl
add
cli
fcompl
push
cs
ret
cmp
push
mov
or
sbb
data16
lods
test
push
lahf
je
out
pushf
or
mov
repnz
iret
movsb
add
ss
je
dec
stos
xchg
idivb
mov
ljmp
push
loopne
cmp
mov
xchg
movsb
ss
repnz
add
clc
js
sti
fucomip
add
ss
inc
mov
ljmp
test
mov
inc
jg
mov
xchg
scas
mov
das
xchg
jge
or
and
sub
and
ja
cmp
roll
pushl
gs
mov
fistpl
jle
inc
enter
xchg
push
pop
and
jle,pt
pushf
add
xchg
xor
negb
js
xchg
inc
mov
hlt
lcall
jns
popf
loop
aam
mov
in
push
jp
call
fs
inc
ja
popf
cld
adc
jge
xchg
cmp
push
jge
xor
repz
dec
mov
mov
in
leave
clc
xor
insl
pusha
pusha
mov
mov
cwtl
ljmp
and
pushf
subl
fcoml
xlat
adc
in
les
pop
dec
int
pop
inc
movsl
mov
and
call
mov
xor
decl
out
inc
ja
test
mov
jp
add
inc
loope
sbb
cli
ljmp
fcmovnu
ljmp
jae
sub
xchg
aaa
ret
push
scas
push
sti
incl
and
inc
inc
rolb
dec
fcoms
pushl
stos
and
adc
xor
sub
mov
push
andb
mov
dec
aaa
cld
jmp
popf
sbbw
pushf
cmp
adc
push
lods
jb
mov
stos
pop
jg
outsb
pop
inc
bound
std
push
dec
ds
decl
jmp
stos
ja
cli
dec
shrb
adc
loopne
lcall
loopne
clc
roll
ficompl
and
ss
decl
adc
jl
sub
lds
sar
jo
inc
leave
test
pushl
cwtl
mov
gs
aam
arpl
push
mov
jns
push
pop
jge
decl
daa
out
loope
arpl
or
lds
xor
mov
mov
fcomip
jmp
ret
ret
rcll
arpl
inc
push
repz
xor
cmp
dec
out
lahf
lret
or
cmpb
jle
xor
mov
loop
mov
enter
fsub
mov
mov
addr16
hlt
cmp
incl
xor
xchg
das
pop
mov
xchg
mov
pushl
xlat
jnp
ficoml
fxam
mov
ret
stc
sub
xor
jae
push
scas
jge
ljmp
into
out
or
imul
push
mov
in
fisttpll
jle
and
xchg
rcrl
mov
sahf
adc
sub
sar
call
push
movsl
dec
icebp
push
es
cmp
addr16
jecxz
adc
mov
dec
dec
sub
pop
mov
jnp
out
sbb
cmpsl
ljmp
out
insl
out
mov
js
adc
pop
notb
gs
push
test
inc
pop
je
out
xchg
iret
fistl
ljmp
or
pop
sti
lret
cmp
mov
mov
inc
and
stc
and
ret
outsl
cli
jmp
xchg
in
jp
repnz
lods
mov
clc
sbb
or
cld
adc
fdivrl
loope
and
gs
dec
out
and
jae
movsl
clc
push
aam
add
sbb
add
or
aaa
jno
cmpsb
jno
bound
aas
fdivr
fists
in
cmpsb
lods
test
xchg
xor
lock
int
mov
add
xor
fbld
stos
sti
fdivl
mov
sbb
test
mov
xchg
insl
movsl
cmp
sbb
jl
and
hlt
outsb
andb
inc
mov
imul
ja
call
pop
rcl
std
mov
das
cmp
in
sub
adc
xchg
dec
cmp
mov
mov
in
incl
xor
loopne
dec
dec
xchg
xchg
adc
lock
popf
arpl
outsb
inc
dec
imul
lcall
int3
and
and
inc
js
nop
call
fisttpl
hlt
outsl
fdiv
out
fs
fcoml
cmpsb
jl
pop
mov
rcrl
in
push
push
idiv
xor
repnz
pop
sub
loop
cmp
mov
push
cmpsl
lds
sub
scas
scas
cli
push
dec
test
pusha
scas
xor
or
fs
test
cmp
aas
bound
sub
dec
cmp
mov
std
mov
cmpl
nop
mov
push
lods
mov
jl
and
mov
fsincos
std
lods
int
and
jmp
pop
mov
aas
imul
in
push
sub
jb
mov
loope
out
inc
sar
jmp
sub
aas
mov
sub
sahf
mov
popa
mov
enter
adc
mov
popa
ds
mov
call
jl
leave
cld
push
cmovae
lea
mov
mov
push
push
call
mov
xor
jmp
jp
mov
test
push
push
inc
inc
test
lock
stos
js
into
stos
push
je
xor
or
dec
hlt
bound
add
mov
lcall
dec
bound
out
sub
mov
lcall
les
xchg
jle
mov
scas
pop
outsb
or
sbb
xchg
jge
adc
fmull
lcall
sbb
es
aaa
push
xchg
cmp
insl
int
mov
mov
iret
popa
inc
jg
adc
insl
data16
sub
and
push
xchg
adc
rclb
xchg
incl
adcb
push
mov
mov
cmc
pop
cltd
and
xchg
xchg
fsubr
leave
push
clc
stos
in
pop
leave
xchg
repnz
push
rorl
fwait
mov
nop
ljmp
add
bound
outsl
adcb
inc
sbb
mov
jle
sub
jmp
dec
jmp
lods
and
push
js
out
in
movsb
imul
inc
pusha
clc
inc
xchg
shll
adc
xchg
inc
cmp
adc
lods
lcall
mov
fxch
xor
xlat
ljmp
sbb
pop
stc
call
nop
mov
lock
push
std
call
sti
sahf
xchg
adcl
pushf
fbstp
out
xor
cmp
xchg
lea
movsb
fcomip
decl
js
orb
fidivrs
xor
jg
rolb
ret
mov
call
nop
or
pop
jle
push
sub
sbb
pusha
pop
lret
cld
sbb
mov
add
pushl
mov
add
in
ljmp
loope
or
or
into
xchg
imul
mov
sbb
mov
xchg
adc
jge
movsb
xor
fnstsw
adc
stos
sub
push
or
xlat
and
xor
das
lds
sbb
pop
cwtl
sub
push
mov
jg
pushl
xor
repz
scas
mov
inc
mov
inc
sbb
push
pusha
push
call
dec
adc
es
dec
aas
lret
fwait
int3
loop
mov
loop
adc
cmpsl
xchg
or
xchg
mov
push
mov
add
insb
and
dec
shl
cli
es
push
mov
iret
nop
adc
cmp
lcall
push
pop
notl
dec
movzbl
popf
xor
mov
or
mov
je
jae
sub
decl
and
mov
imul
jb
jno
dec
enter
or
inc
cmc
pushl
xchg
xor
popa
movsb
daa
mov
mov
aad
dec
scas
rcrl
push
ljmp
aad
fwait
and
adc
cli
or
and
es
xchg
adc
sti
fstl
pop
fcoml
jp
lcall
lretw
sar
jmp
lret
cmp
fisttpll
sub
mov
xor
pushl
pop
ret
test
ret
das
inc
out
pop
jno
data16
dec
sbb
js
std
fcomip
cltd
lods
mov
sbb
movsb
mov
popf
dec
icebp
pusha
xor
mov
inc
enter
shll
fwait
in
in
xor
out
cs
or
stc
sub
aam
add
fs
mov
cmp
push
jle
jno
jno
mov
jp
lods
pop
jmp
mov
call
sbb
outsl
mov
jnp
sahf
or
jo
arpl
loop
dec
push
out
cli
ljmp
cmpsl
addr16
lret
imul
scas
hlt
sbb
xor
outsl
fnstcw
xor
jecxz
out
sbb
test
push
fimull
mov
xchg
cmp
das
stos
jge
dec
cld
or
in
or
ljmp
fwait
les
ljmp
dec
mov
repnz
adc
std
mov
mov
mov
mov
push
cltd
jp
filds
gs
aam
mov
xor
incl
and
sahf
je
add
sbb
popf
arpl
xchg
jmp
decl
jnp
pushf
scas
push
int
sub
xor
jno
add
add
mov
push
es
decl
ret
mov
mov
mov
scas
mov
and
xlat
xchg
sub
fwait
xor
cmc
dec
adc
mov
decb
xor
mov
sbb
mov
lahf
xor
mov
icebp
pop
sub
dec
mov
pop
pop
rol
pop
aas
dec
aam
pop
repz
clc
daa
ret
lcall
inc
scas
jp
mov
or
mov
lret
jae
and
pop
cmp
stos
sti
and
outsl
icebp
jecxz
jae
shrb
xchg
ret
scas
cmc
in
rolb
ljmp
jae
push
pop
loop
loopne
test
push
data16
out
cmpb
out
mov
incl
out
xor
jecxz
enter
testl
pop
xchg
mull
call
aaa
imul
lret
jmp
mov
jns
in
int
fiaddl
into
jl
fwait
add
lret
out
mov
rol
dec
test
xchg
add
push
adc
dec
lcall
into
mov
push
or
imul
fidivl
push
ljmp
out
push
dec
mov
mov
mov
or
inc
xchg
outsb
xchg
xchg
push
add
fisubl
adc
dec
mov
je
incl
sti
gs
and
push
dec
je
in
adc
repnz
and
cmp
mov
call
fcomi
jbe
es
lds
push
out
scas
cmpsl
ljmp
xchg
pop
dec
mov
adc
fstp
lods
adc
mov
mov
ja
cmp
clc
scas
and
stos
xchg
lcall
xchg
cmp
and
cmp
mov
inc
pop
sub
dec
sbb
enter
and
decl
jno
xchg
xchg
nop
divb
cmp
mov
pop
xor
pop
cmpsl
incl
dec
aas
sub
mov
push
pop
aaa
out
mov
fisttpll
push
je
jne
pop
and
js
pushl
vmread
rolb
ret
fsubl
adc
test
mov
mov
sahf
inc
and
inc
xchg
movsb
dec
flds
jmp
rorb
mov
adc
ja
fisttpll
sbb
cltd
out
cmpsl
sar
push
push
in
test
into
in
jae
loope
scas
fbld
push
xchg
subl
ljmp
add
mov
pcmpeqw
inc
popf
int
cmp
hlt
or
xor
adc
jnp
xchg
adc
test
pop
decl
cmp
sub
inc
cmp
push
jp
mov
mov
fsubr
decl
lret
mov
push
jp
xlat
jb
mov
call
sbb
mov
xor
and
dec
insl
mov
cli
add
jmp
inc
gs
in
imul
lds
pop
jnp
cs
aas
push
mov
rclb
ficompl
or
lcall
fs
cld
mov
add
rorl
and
mov
push
mov
sbb
adc
add
adc
mov
imul
cmc
inc
rcr
cmp
es
and
or
inc
sbb
aam
popa
mov
cs
adc
jl
jae
mov
push
imul
fists
pop
mov
in
mov
pushl
scas
mov
fstps
mul
out
jle
mov
les
outsl
rorl
mov
cmp
fistpl
sub
jecxz
mov
ds
inc
push
jmp
pop
xchg
cld
sub
mov
inc
popf
dec
xchg
in
xchg
insl
push
decl
pop
fisttpll
xchg
add
ss
gs
jmp
xor
cli
ret
mov
iret
lock
call
leave
test
add
jecxz
add
push
aas
mov
jecxz
lahf
inc
mov
into
sbb
in
xor
push
xor
dec
scas
int
adc
stos
idivl
mov
jnp
out
lret
push
dec
mov
movsl
in
mov
loop
and
pop
sti
sti
xchg
inc
lret
add
lcall
mov
pop
shlb
gs
sar
sbb
xlat
xor
arpl
pop
stos
jo
ljmp
pop
sti
aad
pop
rorl
mov
mov
or
cld
decl
int3
lret
sub
or
mov
mov
push
std
mov
cmp
lea
ds
test
adc
jmp
daa
cmp
repz
adc
jb
clc
shrl
loop
fistpll
mov
jecxz
incl
cmpsb
jge
pop
jecxz
ret
enter
popf
cwtl
sahf
popa
dec
adc
lods
adc
nop
pushl
pushf
xchg
push
aaa
addr16
lods
inc
xchg
inc
insl
and
fs
jnp
jo
sbb
call
and
xchg
add
scas
shll
mov
fmul
les
pop
aam
clc
mov
or
push
lods
je
ja
rcrl
mov
mov
aam
xchg
imulb
in
jg
mov
and
cmpsb
lock
xor
shll
ss
decl
mov
sbb
jge
pushf
dec
pushf
adc
xor
or
roll
jnp
pop
mov
inc
and
nop
dec
mov
jle
es
out
jo
fistpll
jg
ds
arpl
aas
cmpsl
aas
lods
xchg
outsl
cmp
push
lahf
xor
lcall
loopne
ret
shl
jno
leave
xchg
sub
inc
ds
ja
je
adc
fists
inc
test
jne
xchg
and
clc
lret
mov
pusha
pop
aaa
xchg
fiadds
loopne
das
movsb
sub
xor
xor
out
add
mov
mov
jg
mov
mov
jo
cmpsl
mov
sub
outsb
xor
test
pushl
mov
add
jp
mov
fistpll
and
lahf
xor
push
addr16
imul
jge
pop
lret
cmc
add
dec
jl
jmp
jnp
sub
pop
imul
call
int3
leave
add
and
lods
sbb
cmp
push
push
mov
adc
jo
movsb
cld
sbb
mov
clc
sti
clc
das
mov
lods
cmp
inc
and
in
jnp
ljmp
adc
or
lods
pop
inc
in
fsts
and
jl
orb
dec
mov
rclb
les
mov
je
xchg
mov
shl
lea
jp
xor
dec
icebp
push
out
sub
dec
mov
mov
dec
sbb
ficomps
pop
repz
xchg
pop
lret
call
adc
call
mov
xchg
jns
sar
cs
xchg
cmp
loopne
pop
mov
decl
js
test
lcall
xchg
push
scas
dec
sub
fstpl
cmp
xchg
lcall
testb
mov
adc
out
push
sbb
push
call
pop
sbb
mov
sbb
stos
sbb
and
jge
adc
fildll
adc
xlat
push
nop
test
je
gs
pop
cmp
arpl
inc
dec
int3
ss
or
mov
push
dec
stc
sti
loopne
sbb
or
sar
incl
hlt
push
in
push
popf
popf
and
in
cmpsl
lahf
inc
ret
mov
js
adc
jmp
mov
out
sub
pop
pop
adc
xor
divl
push
dec
jbe
js
lret
push
xlat
ljmp
jl
clc
or
mov
xor
leave
add
fcmovu
push
adc
push
aas
mov
jns
sbb
ja
and
fcmovu
push
jno
repnz
lock
fs
sbb
int3
sub
mulb
mov
bound
jmp
repz
push
cli
push
mov
mov
pop
std
mov
decl
repnz
adc
sbb
xchg
xchg
push
pop
lret
mov
je
mov
and
jle
decl
lret
call
clc
jns
fnstsw
mov
mov
bound
pop
mov
call
dec
jl
mov
adc
xor
rcll
loop
incl
push
in
movsl
pusha
lret
rcll
out
dec
mov
ljmp
daa
aam
bnd
mov
xor
inc
popa
popf
imul
add
pop
cmp
and
mov
call
xchg
test
fsubrs
mov
push
pushf
fmul
sti
jle
jbe
cmpsb
mov
sbb
dec
lock
out
rcr
push
lock
push
lock
test
xor
out
mov
or
jmp
addr16
mov
aad
mov
pop
testl
cs
popa
pop
sbb
cmpsl
inc
sub
icebp
pushl
adc
idivl
ja
repnz
mov
or
sub
call
mov
cmpl
jns
lahf
jecxz
dec
push
nop
sbb
pushl
fldenv
mov
popf
pop
xlat
pop
test
ss
out
adc
and
push
jp
xchg
in
mov
popa
add
test
push
mov
call
ds
xchg
ds
int3
into
adc
sub
mov
dec
je
das
dec
hlt
jmp
xor
cmp
sub
imul
aam
ret
push
aad
mov
stos
shlb
cmp
fs
push
mov
mov
mov
hlt
rcll
xor
add
jnp
test
ljmp
sbb
outsb
xor
sahf
out
cmp
jmp
enter
fs
pop
sbb
leave
dec
pushl
pop
mov
scas
in
xchg
stos
pop
loop
popf
fs
into
sbb
popa
mov
loopne
ss
xchg
shrl
push
icebp
hlt
subl
dec
mov
cli
imulb
mov
bound
decl
insl
xchg
mov
mov
call
xchg
ret
sbb
mov
push
inc
aad
ljmp
scas
mov
pusha
cld
loop
cmp
js
outsl
decl
mov
jg
add
add
jge
sti
mov
push
lcall
popf
or
icebp
push
data16
clc
fnsave
pop
rep
and
testb
into
dec
popf
fildl
shll
inc
xor
decl
adc
dec
rolb
stc
fwait
mov
mov
ja
inc
adc
mov
in
mov
lock
inc
leave
rcr
jae
mov
mov
sbb
or
adc
call
sub
sti
gs
sbb
fisttps
lea
nop
xor
repnz
xor
mov
ja
push
xchg
xchg
shlb
movlps
or
into
adc
inc
fcomip
decl
cli
data16
mov
push
imul
jo
iret
jbe
incl
fs
fwait
cli
loope
jo
mov
push
inc
dec
pop
jle
fildll
adc
sub
loopne
lcall
jbe
add
inc
dec
xor
outsb
sti
sbb
push
int
fstl
mov
jp
xchg
in
stos
mov
xor
pop
popa
fimull
sub
stc
je
call
rcrl
out
ret
je
pop
jp
outsb
or
push
loopne
or
cmp
es
call
or
xor
orl
xor
lcall
push
push
adc
imul
lea
repnz
add
popf
jmp
in
mov
mov
fucomip
xchg
push
fisttpll
push
scas
sbb
scas
cmp
sti
mov
loope
call
dec
mov
and
sahf
adc
test
pop
call
jne
dec
jae
inc
xchg
loope
call
xorl
adc
dec
sub
decl
jb
push
inc
fcoml
jns
add
in
dec
outsb
popf
insb
out
test
clc
ljmp
loop
inc
cwtl
xorl
and
sbb
scas
cmp
les
lods
dec
dec
call
lret
out
or
and
cmpsl
inc
jb
loope
clc
mov
jae
push
incl
xchg
data16
leave
add
mov
stos
cwtl
aaa
jmp
pop
stos
in
nop
fstps
call
jmp
subb
pop
mov
popf
xor
stc
lea
shlb
in
lcall
ja
cmc
add
jnp
movsb
pop
insl
ffree
and
mov
cmp
sar
pop
and
mov
or
cmpsb
xor
out
sarl
daa
mov
cwtl
mov
aas
mov
mov
cli
aam
test
ljmp
into
xchg
dec
adc
daa
xor
int3
xchg
inc
mov
sbb
jp
call
adc
sbb
jo
pop
sbb
icebp
shlb
dec
and
mov
incl
out
mov
adc
mov
mov
mov
mov
inc
push
testb
mov
test
outsl
dec
test
fdivrp
mov
bound
aad
inc
addr16
addr16
cmp
incl
mov
inc
jno
sub
add
or
dec
push
rolb
mov
jo
inc
pushl
xor
fwait
cmp
mov
mov
or
leave
lods
and
sbb
push
test
pop
sub
test
lcall
xor
leave
push
hlt
mov
xor
mulb
nop
or
xor
jp
add
inc
sbb
ja
pop
lahf
inc
xchg
jno
lahf
lods
addr16
fsubrp
mov
mov
les
sar
cmp
cmpl
pop
cwtl
push
cmp
sbb
mov
push
jb
mov
or
xchg
imul
mov
lcall
inc
lret
push
or
leave
and
adc
pop
andl
lcall
push
and
cmpsl
rcl
cmpsl
cmp
in
add
mov
call
mov
or
ja
jmp
mov
pop
repz
add
and
inc
dec
rcll
icebp
dec
cmp
dec
jg
push
fwait
scas
movl
adc
decl
lock
pop
inc
ret
dec
adc
push
mov
gs
push
push
mov
jmp
mov
jl
add
cmp
bound
or
ljmp
fsubrs
rolb
xor
sbbb
jg
lret
inc
pop
sbb
jmp
lods
jge
and
pop
scas
repnz
dec
addl
cmp
hlt
ljmp
dec
ljmp
add
adc
pushf
movl
pusha
pop
add
or
call
scas
adc
decl
pusha
inc
pop
jp
inc
pop
mov
sub
call
mov
test
decl
stos
test
stc
cmp
mov
mov
and
ficomps
xchg
btr
fiadds
rorb
cli
cli
fistps
int3
add
pop
call
in
pop
sar
ljmp
imul
fdivrs
push
rol
insl
notb
inc
cmp
aaa
xchg
notl
ja
decl
add
dec
xor
pusha
push
clc
clc
xor
jnp
jmp
xchg
xchg
and
fwait
sbb
push
mov
faddp
mov
dec
outsb
ror
sbb
in
cltd
jecxz
push
decl
mov
jnp
shrl
rcll
dec
xor
incl
xor
pop
xor
cltd
repz
das
movsl
idivb
and
inc
pop
jmp
pop
shlb
cmpsl
lahf
addr16
ret
adc
fcmovb
add
mov
lods
mov
call
mov
dec
int
push
jno
pop
inc
pop
sbb
and
aas
cwtl
mov
mov
dec
js
decl
add
cmp
xor
ljmp
ja
call
jge
std
test
mov
push
loop
enter
scas
pusha
gs
ljmp
jmp
in
mov
hlt
fmull
or
movsl
std
imull
xlat
pop
cmp
xchg
and
pusha
int3
adc
daa
jbe
sbb
push
ss
sub
dec
sub
or
stc
xchg
mov
shlb
dec
or
insb
adc
jg
add
push
push
xchg
dec
fs
outsl
cmp
cli
jecxz
pop
lcall
sbb
xchg
and
js
lret
sar
xchg
popa
sbbl
incl
cmp
bound
std
adc
jnp
xchg
jl
mov
inc
mov
mov
dec
mov
fisubl
xor
std
mov
xchg
insb
dec
movsb
dec
inc
test
hlt
hlt
jne
enter
jmp
scas
mov
inc
jecxz
inc
jge
sbb
xchg
xchg
pop
sbb
push
fcomip
outsl
push
push
jle
jecxz
or
addr16
pop
cwtl
mov
and
or
js
pop
jne
or
inc
mov
sub
ret
loope
js
jnp
fisubrl
jle
cmp
adc
mov
es
mov
mov
sbb
sub
nop
push
in
sub
xorl
ljmp
mov
dec
add
xchg
int3
arpl
jecxz
lret
push
adc
jp
repnz
in
shlb
pushl
movsl
fcmove
popa
iret
jge
es
mov
adc
ret
fcomp
jae
xor
call
negb
notl
call
les
xchg
and
lcall
pop
and
test
push
adc
popa
sub
stos
add
cmp
cli
ds
jg
mov
mov
negb
xchg
mov
xor
mov
into
movsl
fstpl
stos
sub
dec
push
andl
sbbl
repz
xchg
leave
inc
pushf
push
mov
ljmp
push
ret
sub
sti
int3
dec
xchg
xlat
les
insb
and
push
ret
in
xor
mov
jno
and
leave
loop
push
pop
fimuls
ss
imul
cmp
scas
shr
and
and
leave
sbb
cwtl
jmp
aad
push
xchg
fsubrl
pop
arpl
and
lea
les
ds
decl
xchg
fidivrl
push
cltd
call
add
mov
test
jmp
cmp
test
outsl
divl
in
jge
sbb
jecxz
or
pushl
fsubp
or
ja
mov
push
fistl
add
sbb
mov
dec
movsb
xor
mov
clc
adc
jb
addr16
aaa
xchg
fnstcw
mov
ljmp
mov
jbe
mov
push
pop
push
jno
pop
lock
inc
pop
incl
sbb
mov
and
shrl
ds
notb
add
lcall
jl
aas
loope
mov
and
js
mov
xor
lcall
and
jle
push
out
pop
inc
lidtl
lahf
push
rol
call
popa
cmc
add
jae
xchg
je
inc
cli
ljmp
jp
sub
gs
sarb
mov
test
fcomip
inc
add
mov
mov
scas
pop
push
lods
popl
int3
loop
mov
pop
lcall
pop
out
daa
cmp
push
ficoms
sub
sub
xor
icebp
jle
enter
pushl
sbb
pusha
in
jmp
rcrl
stos
shrb
inc
bound
pop
push
js
sbbl
mov
leave
addl
mov
jo
or
rol
push
mov
and
pop
jns
cmp
das
dec
push
and
ljmp
call
push
push
xchg
sub
push
jge
xor
stos
subb
xchg
dec
sarb
nop
jmp
or
ljmp
aaa
push
jne
sbb
aas
push
push
xchg
decl
cmp
mov
push
aas
lods
sbb
dec
test
inc
push
ret
pushl
lahf
xchg
lods
adc
loop
cmpsb
mov
aam
mov
or
cmp
xor
dec
in
inc
mov
lock
mov
mov
mov
or
jg
fcmovnu
clc
mov
inc
jno
inc
adc
lret
jmp
jp
push
mov
incl
enter
adc
std
mov
repnz
cwtl
mov
or
mov
or
push
movsl
push
jg
or
or
lock
int3
std
movsl
movsb
call
lcall
insb
xor
jp
mov
inc
out
mov
jp
jg
xor
fs
jae
push
repz
int3
aaa
jb
sub
cltd
push
out
ret
je
js
dec
jg
pop
jge
out
jge
popf
rcrb
cs
lods
pop
movsl
dec
dec
cwtl
mov
adc
ljmp
insb
subl
mov
pop
sbb
out
repz
mov
push
pop
push
fiadds
dec
shl
or
les
fisubl
lcall
jp
mov
sbb
sahf
test
xchg
and
mov
jns
ss
jge
mov
enter
loop
jmp
adc
sbb
cmp
cmp
popa
push
jmp
and
inc
lahf
xor
lret
test
xor
xor
mov
mov
sbb
arpl
jg
je
jns
out
clc
mov
jnp
push
sbb
and
push
std
pop
out
adc
pop
inc
getsec
fs
jmp
insl
sahf
pop
insb
mov
out
lcall
mov
loope
mov
fcomps
adc
call
xchg
in
jg
hlt
mov
xor
bound
inc
cmp
mov
cmp
leave
icebp
push
mov
ljmp
sti
clc
pop
xchg
addr16
jg
mov
aam
or
mov
clc
int
push
and
push
sti
jl
jg
xchg
jecxz
es
nop
mov
data16
fisubrs
pop
div
pushl
adc
test
les
push
adc
mov
adc
pop
gs
xor
incl
stos
add
sbb
cs
jle
mov
or
daa
aad
mov
pushl
sub
or
dec
lret
int3
loope
adc
ret
lea
das
mov
sarb
xor
nop
loope
lcall
inc
sahf
out
xchg
sub
inc
xor
add
repz
jo
hlt
adc
and
in
mov
cmp
dec
test
xchg
dec
cwtl
out
xchg
addps
dec
add
pop
xor
arpl
ficoml
or
pop
or
addr16
in
pop
adc
add
push
mov
ljmp
jns
mov
out
scas
xchg
rol
shrb
out
lcall
and
cmp
dec
inc
dec
push
out
cmp
mov
mov
sbb
js
inc
enter
jmp
scas
dec
mov
popf
sub
jmp
mov
mov
mov
scas
fcomip
in
movsb
outsb
cltd
dec
inc
repnz
mov
or
xlat
les
push
call
and
ret
iret
adc
jbe
loop
or
shll
adc
cltd
ljmp
cmp
decl
mov
xchg
pop
add
pop
pushf
push
mov
shll
dec
mov
push
pop
jmp
sub
into
mov
fdivl
incl
je
data16
pop
and
jnp
sub
inc
add
gs
push
imul
lcall
jo
sbb
xchg
and
repz
adc
adc
mov
std
es
jo
add
jae
bound
adc
in
pop
imul
jg
rcll
xchg
jl
mov
aad
out
xor
fidivrs
adc
jmp
lods
pop
xchg
stc
mov
insl
std
stc
in
lret
ret
mov
call
xchg
mov
loopne
xchg
nop
in
mov
sub
dec
and
cmp
fsubs
or
sub
pop
test
andl
cmp
dec
or
movntq
jnp
fucomip
mov
dec
jmp
xchg
std
pop
mov
je
lcall
stos
sbb
call
decl
push
ljmp
ljmp
fdiv
and
mov
icebp
lods
xchg
call
add
data16
das
bound
adc
xchg
loopne
add
scas
xor
scas
lcall
out
aaa
pop
dec
lock
cmpsb
adc
or
call
inc
stos
nop
xchg
hlt
negb
dec
bound
fsubrl
mov
push
push
decb
sub
cmp
jmp
pushf
or
xor
mov
mov
mov
call
dec
test
or
or
jle
push
fildl
movsb
ljmp
aaa
std
call
sbb
ja
mov
out
les
out
sbb
int
adc
pop
icebp
jl
adc
xor
loope
xchg
or
push
int3
add
inc
loop
jmp
movsl
pop
bound
jbe
stc
fs
cmp
nop
aaa
pop
fcompl
pop
mov
ret
scas
adc
add
sahf
xchg
jg
pushf
daa
push
push
mov
push
sbb
pushl
je
repnz
mov
js
xor
std
or
xchg
pop
movsb
cmp
out
ljmp
inc
out
mov
push
push
pop
cmpsb
int
fwait
mov
sar
call
repz
sbb
pusha
icebp
ljmp
and
movsl
sbb
loope
lods
mov
call
pop
xchg
pop
lea
pop
stos
sub
fwait
sub
dec
sub
mov
in
mov
mov
cmp
loope
icebp
cwtl
mov
insl
ret
sub
insl
pop
roll
pushf
mov
data16
aas
test
xchg
dec
sarl
fsubrs
pop
ljmp
push
aaa
adc
jl
push
dec
inc
jl
sbb
int
jne
mov
xor
sub
lock
call
pop
leave
mov
or
sbb
daa
jecxz
out
gs
dec
inc
lcall
cmp
inc
fadd
movsl
iret
or
lcall
data16
xchg
dec
pop
and
xchg
out
lods
xor
aam
push
pushl
out
test
or
inc
flds
jge
loope
rcll
sbb
lcall
or
aad
loopne
test
ficomps
sub
xor
mov
enter
decl
es
xor
stc
popa
dec
cld
bound
pop
add
mov
int3
fidivs
push
or
std
push
lret
cmp
dec
fcomps
out
lret
fwait
popa
jo
stos
aaa
into
jnp
lods
cmp
mov
and
jnp
inc
push
cmpsb
lahf
cmp
push
dec
adc
ljmp
test
xor
jg
push
data16
lods
mov
add
ret
loope
cmc
jmp
idivb
dec
pop
sbb
inc
ss
push
xchg
inc
in
icebp
inc
in
rorl
mov
lds
call
push
add
xor
mov
rolb
and
iret
iret
hlt
adc
xchg
dec
pop
sbb
and
je
test
xchg
xchg
jg
jmp
jg
and
dec
mov
mov
xchg
leave
fcomip
out
loope
mov
bound
pop
pop
xorl
add
sti
or
jecxz
adc
decl
repnz
dec
fnsave
cld
xchg
cwtl
push
mov
dec
frstor
rcrl
arpl
jae
lock
lock
jmp
add
in
cwtl
pop
dec
dec
push
add
das
sub
mov
xchg
cmp
aad
cmp
mov
and
les
call
ret
lea
shlb
push
jnp
mov
fcmove
cmp
popa
aaa
iret
ss
call
cmp
xor
outsl
xchg
mov
sbbl
push
and
std
xchg
jl
or
fst
pop
lea
xchg
or
inc
jg
enter
shrl
imul
shll
call
sbb
shr
cmc
add
sahf
mov
in
aad
fnstenv
shl
addr16
mov
das
sbb
mov
pop
aaa
xchg
pop
rol
scas
hlt
push
mov
rclb
inc
clc
lcall
adc
jne
outsl
popf
aas
mov
mov
fbstp
ja
dec
lock
adcl
sbb
imul
mov
pushl
jecxz
fstl
in
sub
cmc
mov
int
out
fs
ljmp
repz
cld
jno
jns
cld
pusha
js
pop
or
test
inc
or
jge
jg
sub
jmp
lds
or
ljmp
cld
inc
ss
lcall
xor
loopne
mov
mov
xor
lcall
movsb
pop
dec
lea
or
rcr
iret
insl
sub
dec
add
lods
bound
mov
std
call
loopne
jne
xchg
jae
mov
push
mov
leave
in
mov
xchg
test
or
out
call
mov
stos
in
mov
aas
jnp
dec
outsb
mov
loop
arpl
cmp
jg
sub
mov
jbe
inc
sahf
push
push
or
fidivl
fisubrl
mov
nop
adc
sbb
loope
mov
shrb
sbb
mov
xchg
inc
int
sub
cmp
rorb
pop
aad
rolb
incl
cmc
cwtl
fldt
xor
loope
pop
mov
imull
cmpsb
xor
mov
cmp
insl
data16
ljmp
stos
or
out
sbb
mov
sbb
jbe
sbb
test
xchg
jne
jb
jae
cmp
lret
ret
mov
push
pushf
cli
mov
add
insl
jae
mov
mov
push
lock
xchg
mov
bound
dec
shll
mov
int3
sub
dec
fsts
sbb
outsl
xchg
das
cmp
and
cmp
loope
pop
dec
adc
inc
mov
and
dec
jne
fisubrs
dec
repnz
xchg
stc
inc
jo
push
pusha
jmp
insl
adc
push
fmulp
add
xchg
aam
cmp
imul
add
xchg
cmp
jmp
add
test
jbe
out
xchg
popa
je
sbbb
test
loopne
push
sbb
dec
xor
xchg
fisubs
pushf
or
xchg
pop
icebp
dec
imul
lcall
pop
xor
lahf
dec
push
popf
mov
cld
xchg
fcoml
mull
js
ds
dec
dec
mov
push
push
jmp
and
add
subl
decl
gs
rcl
sbb
xlat
adc
jb
jmp
mov
notrack
std
call
addl
xchg
or
insb
xchg
xchg
jg
test
push
push
cmc
dec
sbb
and
sbb
test
repz
adc
shll
testl
pusha
cli
jmp
sbb
std
cmp
mov
cli
sub
je
dec
or
mov
pusha
and
int
or
add
lcall
ds
enter
add
out
leave
out
les
and
rcl
outsl
xor
mov
pop
adc
adc
or
jg
mov
fwait
push
pusha
cli
xchg
sahf
cltd
rcll
xor
sbb
xchg
sbb
ja
icebp
jmp
call
jno
sbb
lret
std
arpl
push
ss
xor
lret
push
xlat
xchg
arpl
ljmp
mov
cmpsb
xchg
pop
hlt
sub
xchg
sbb
sub
ret
add
jle
and
decl
add
pop
push
inc
jp
lret
or
sub
enter
jae
lock
das
outsb
ljmp
repnz
mov
jno
inc
cmpsb
sbb
fildll
inc
insl
mov
int3
test
cmp
popf
sbb
push
inc
lret
cmp
jmp
loop
inc
stc
xor
add
imul
sbb
loope
cld
decl
repnz
mov
sbb
stos
cmp
sti
test
xor
loope
xor
push
fnstcw
pushl
mov
pop
mov
hlt
jnp
decl
lock
loop
mov
fbld
xchg
sti
pusha
cmp
add
or
xchg
cmpsb
or
decl
inc
push
and
xchg
outsl
xchg
jmp
in
adc
addr16
and
jmp
out
mov
in
or
xchg
pop
nop
mov
xchg
sub
in
sub
jne
fidivrs
jbe
jmp
imul
dec
xchg
lret
inc
sub
setb
in
cmp
dec
popa
sbb
inc
incl
dec
xchg
js
cmp
mov
xchg
fisubl
mov
cs
orb
cld
and
repnz
pop
jle
test
or
enter
repnz
stos
jg,pt
js
insb
rcrl
jnp
aam
pop
call
mov
cmc
aad
mov
xchg
dec
pop
lcall
fldt
data16
out
mov
mov
sahf
lock
pushl
dec
rsm
xchg
in
pop
jns
mov
lcall
mov
xor
xorb
mov
lds
inc
mov
xor
cmc
nop
outsb
push
lock
dec
or
int
andl
lcall
xchg
jmp
xchg
loope
test
mov
stos
stc
notl
sub
bound
push
cmc
add
jg
push
add
and
mov
inc
sbb
aaa
int3
jmp
jg
test
xor
jno
pushf
fnstcw
outsb
shll
mov
add
sahf
sub
repz
cli
xchg
xchg
adc
ret
es
cmp
jmp
cmp
outsl
in
xor
mov
dec
ss
decl
add
add
sub
dec
sub
xlat
loop
pop
mov
lea
sub
add
push
cld
xchg
frstor
jnp
bound
out
getsec
aad
jo
cwtl
add
clc
call
test
in
sbb
adc
dec
sbbl
or
pushl
cmp
jl
dec
fwait
add
mov
sbb
or
push
cmpsl
mov
and
iret
mov
dec
pushl
adc
daa
pushf
stc
int3
and
xor
sbb
aam
lods
adc
cmp
sbb
dec
ds
cs
std
in
and
inc
je
sbbl
add
jmp
rcr
sub
and
loopne
sbb
mov
das
outsl
stc
pop
jb
xchg
pushl
pop
arpl
adc
and
popa
loopne
inc
add
stos
xchg
int
push
push
ljmp
loop
in
dec
jnp
mov
sbb
dec
fisttps
pop
jl
cwtl
push
addb
fisubrl
ljmp
lcall
pop
mov
shl
adc
or
mov
push
mov
mov
mov
push
insb
cmp
sub
xchg
xor
or
or
xchg
out
inc
movb
enter
sbb
pop
das
loop
pushf
xor
cmp
bnd
lcall
cmp
pusha
adc
out
test
into
sbb
mov
xor
ds
icebp
cmp
jmp
sarl
or
sub
or
loop
inc
pop
mov
push
add
cli
in
cltd
mov
xor
incl
add
ret
xchg
rcll
ljmp
decl
adc
je
data16
mov
lret
popa
movsl
in
inc
popa
sbb
sarl
iret
push
sub
cld
inc
mov
push
incl
push
clc
xor
push
push
in
add
filds
mov
dec
mov
mov
jecxz
cmp
pop
fidivrs
mov
jle
add
outsb
movsl
repz
jne
stos
adcb
cmp
add
jl
mov
hlt
aam
sti
add
push
push
loop
aam
std
pop
dec
fnstsw
inc
xchg
jle
ds
fs
movsb
xor
xor
fcomps
out
imul
mov
xchg
incl
dec
ja
sar
rcl
les
push
dec
sbb
aas
lcall
addb
add
and
test
sub
dec
test
jg
dec
into
fidivrl
pop
sbb
call
movb
outsb
pop
in
call
pop
test
mov
lods
lahf
jns
bound
dec
sbb
test
aas
jp
lret
dec
fstps
jmp
lea
xchg
je
cmc
or
shll
insb
test
mov
and
push
adc
ljmp
or
pusha
test
and
addb
sahf
mov
das
jae
add
dec
and
pushl
jns,pt
inc
imul
push
jl
loop
sub
mov
push
jae
lret
popf
pop
pop
mov
dec
fwait
stos
jno
into
lcall
arpl
cwtl
leave
and
fistl
ret
lds
cmp
jmp
cmp
adc
push
jl
mov
dec
xor
lret
arpl
call
sub
mov
mov
dec
scas
adc
xorps
mov
fimull
dec
seto
jp
loopne
incl
pop
mov
sahf
pop
inc
push
roll
inc
push
enter
sbb
pop
inc
test
repnz
mov
cmp
ljmp
ja
push
daa
out
daa
add
es
pushf
mov
ficomps
ror
mov
into
call
roll
movsb
fwait
adc
pop
outsl
pop
or
mov
adc
adc
jmp
out
dec
add
or
es
add
out
fidivrl
dec
mov
cmovl
cmp
incl
pop
dec
scas
sbb
mov
data16
cmp
enter
adc
adc
mov
jge
iret
pop
lcall
mov
rorb
repnz
arpl
push
and
jb
push
sub
jp
xchg
outsl
jp
scas
cmpsl
push
push
nop
adc
cmp
jns
cmp
xor
daa
rorb
incl
inc
adc
pop
mov
repz
outsl
bound
fcoms
insb
mov
xchg
std
clc
xor
cmp
sahf
rorl
clc
ljmp
vsqrtpd
xlat
repnz
cltd
and
push
andl
or
leave
lcall
inc
xchg
call
test
pop
push
hlt
test
jbe
mov
test
fcomip
sub
arpl
ljmp
js
push
rorb
lret
call
movsl
adcb
cmp
sub
mov
mov
jne
loop
pushl
jl
pop
or
out
aas
pop
pop
lods
inc
add
gs
scas
xor
inc
int
mov
jbe
testb
fiaddl
gs
mov
ret
iret
pop
pop
push
inc
clc
jp
cmp
jno
and
enter
in
xor
outsb
pushl
fisubrl
jecxz
jne
repnz
jbe
mov
jo
lds
lcall
sbbl
dec
add
loopne
jnp
rol
or
pop
xor
das
adc
imul
cmp
pushl
xor
mov
mov
pop
pop
jl
add
test
call
sub
mov
pop
push
sub
xlat
xor
jp
shrb
jno
jge
add
out
pushl
mov
mov
xor
sub
lret
mov
lds
mov
xchg
test
pop
ficoms
mov
sbb
call
std
lahf
xor
sub
mov
rolb
movnti
dec
mov
sbb
push
jg
cmp
lret
fcmovnu
inc
out
pop
xor
arpl
cli
inc
mov
mov
add
adc
xchg
in
cmpsl
sub
cmp
fisubrl
int3
mov
call
data16
adc
dec
imul
jns
jecxz
pop
fwait
insl
or
cltd
cmc
cmp
or
lock
jmp
and
jge
jbe
mov
in
cld
sbb
incl
push
pop
pop
mov
gs
scas
std
cld
jo
into
stos
or
fwait
xchg
lcall
mov
fwait
outsb
sub
adcl
sarl
dec
scas
pop
cltd
cmp
sahf
cmp
rcrb
push
xchg
push
out
dec
sbb
mov
in
ljmp
fs
jge
test
mov
mov
out
fisubrl
push
pop
loopne
ljmp
hlt
out
pop
mov
jle
ja
daa
test
pushl
clc
sub
cwtl
pushl
lahf
lahf
mov
test
pop
mov
ljmp
in
fwait
int
pop
mov
inc
daa
xchg
jge
movsl
ljmp
clc
mov
xor
xor
sbb
or
movsb
xchg
sub
mov
popa
int
lahf
into
ljmp
jge
xor
lods
cmc
lods
lods
inc
not
nop
mov
or
push
adcb
orb
push
sbb
mov
popa
sbb
mov
pop
bound
push
mov
mov
jecxz
call
jl
push
dec
jno
out
cli
dec
stc
ret
add
stos
scas
pusha
scas
cmp
mov
sbb
push
and
sti
ljmp
pop
jg
into
xor
mov
pop
std
jmp
push
lods
xor
or
mov
sahf
sub
mov
cmp
call
inc
pop
insl
pop
lea
inc
mov
stc
icebp
enter
jg
or
jmp
in
jl
je
enter
cmp
jbe
mov
or
mov
jp
inc
popa
pushf
aad
sahf
fisubs
notb
dec
lret
and
mov
xchg
cmp
xor
sti
xchg
adc
enter
jp
lahf
sar
inc
inc
adc
aas
repnz
mov
insb
test
mov
xchg
push
ret
cld
cs
lea
ds
adc
add
test
outsb
mov
xchg
fcomip
mov
test
inc
pop
sub
data16
ret
sub
lods
lret
hlt
mov
sar
ja
jmp
lds
jnp
repnz
push
int
pop
addb
ja
xor
ss
inc
repnz
adc
repz
cmp
mov
dec
jmp
es
or
lcall
sarl
xchg
push
xor
cld
or
incl
imul
stos
add
inc
lret
int
or
ljmp
imul
cwtl
xor
mov
dec
jno
cmpsb
insl
jb
jns
clc
push
jae
and
stos
incl
dec
outsb
pop
arpl
mull
cmp
mov
std
push
std
fdivs
pop
mov
xchg
jmp
mov
xlat
mov
lea
mov
xor
sbb
test
in
jmp
cs
xchg
push
lds
mov
out
xor
lea
pop
repnz
pop
push
shld
xor
sbb
jnp
pushl
dec
push
mov
decl
pop
xchg
push
in
or
mov
inc
mov
loopne
cmove
mov
test
fcmovb
jecxz
scas
clc
shlb
mov
into
add
mov
aam
jbe
pop
ret
mov
xchg
sub
jno
pop
aaa
xor
rolb
pushf
mov
sub
adc
ljmp
icebp
pop
lods
shrb
movsl
jo
pushf
sub
sbb
inc
mov
dec
call
adc
mov
out
add
sbb
cmpsl
aas
flds
ret
cmp
fnstcw
cwtl
incl
sbb
mov
leave
mov
ss
xor
rolb
jns
into
lcall
sarb
xchg
sbb
scas
mov
out
dec
dec
in
outsl
ficompl
mov
jmp
ljmp
adc
subl
mov
pop
lock
stos
mov
pop
xchg
mov
xchg
mov
or
cmp
lea
stos
inc
bound
xchg
mov
cwtl
mov
ret
lret
movsb
push
adc
test
jae
add
fld
jle
cld
mov
inc
repz
fistpll
xchg
and
pop
aad
adc
mov
cmc
outsl
mov
sub
movsl
cmp
or
pop
mov
test
jg
leave
jl
mov
dec
push
and
cwtl
mov
and
out
pop
mov
xor
ljmp
pop
cmp
sbb
movsw
lods
sbb
adc
cld
jg
pushf
jmp
mov
pop
hlt
fcmovnb
xor
xchg
movsb
lock
out
jle
fsubrl
adc
mov
incl
adc
xchg
adc
cmp
push
mov
fstpt
lahf
pop
cmp
incl
test
lods
adc
sbb
xchg
xlat
bound
mov
pusha
mov
out
mov
test
shl
mov
jecxz
push
clc
push
popf
jae
sub
fstps
add
xor
cmp
ds
mov
sbb
mov
movsb
fs
repnz
rolb
aaa
push
mov
mov
adc
mov
call
ret
int3
jno
or
or
jp
in
pop
cwtl
sub
pop
and
xor
fisttpll
nop
mov
cmp
cli
push
jle
mov
mov
movsl
cltd
pushl
ret
lods
ror
pop
mov
stc
popa
cmp
in
mov
mov
inc
adc
or
jle
jl
push
xchg
cwtl
int
hlt
mov
and
pop
jb
fistpl
dec
xor
cmp
sub
cmp
mov
xor
test
cmp
cmp
addl
jne
ss
test
or
xor
arpl
or
shlb
push
xchg
pop
orb
xchg
repnz
mov
movsl
mov
mov
adc
sbb
outsb
push
jl
push
loope
or
jg
lock
test
lahf
test
fisttpll
addr16
jmp
rol
ljmp
adc
push
push
or
mov
sub
pmulhw
pop
sub
in
or
mov
shrl
cli
mov
mov
into
inc
adc
inc
pushl
mov
movsl
adc
sti
pop
mov
imul
imul
mov
jns
mov
pushl
mov
mov
mov
sbb
adcl
push
test
or
ljmp
push
in
ljmp
rcrl
test
mov
adc
incl
adc
ja
ds
mov
fsubs
aad
and
incb
aaa
cld
lcall
ss
inc
test
adc
mov
xchg
or
add
push
pusha
stos
lret
ljmp
aad
mov
mov
sar
and
ja
les
repz
lcall
add
sbb
andl
stos
inc
ja
mov
addb
pushl
rcl
dec
cmp
sub
push
fstl
jo
push
cmp
into
shll
mov
mov
stos
out
pop
pusha
mov
ljmp
jne
and
xchg
bndstx
std
pop
jno
pop
incl
insb
cs
imul
xor
pop
dec
icebp
xchg
mov
pop
dec
rcll
jl
inc
stos
pushl
cs
push
popa
mov
jne
sti
pop
std
adc
jb
lds
incl
shl
adc
nop
frndint
mov
decb
pop
add
lret
push
data16
adc
jg
call
aad
sti
xor
sbb
push
lret
aas
outsb
xchg
iret
loop
xchg
mov
scas
xor
xor
aam
mov
jp
cmp
ljmp
bound
mov
in
jp
icebp
jmp
sbb
fists
cmp
or
decl
sbb
test
js
data16
ja
daa
fs
insb
push
fs
sahf
call
test
mov
ljmp
fsub
and
inc
jbe
dec
jae
sub
clc
mov
js
and
jnp
and
push
cmp
addr16
lock
aaa
push
sbb
mov
into
mov
fimull
das
fnsave
pop
lock
stos
rcll
mov
inc
lds
fisubl
sbb
or
pop
enter
arpl
ljmp
ljmp
das
inc
cltd
add
test
cmp
icebp
aaa
inc
fiaddl
cmp
les
call
inc
xchg
adc
js
xchg
sbb
inc
aaa
pop
leave
cmpsb
roll
aas
xchg
js
aas
stos
fdivrl
shrl
test
jbe
je
popa
mov
ljmp
mov
f2xm1
lea
in
push
push
jecxz
dec
mov
inc
ret
mov
mov
filds
sbb
mov
test
hlt
loope
loop
jns
insb
push
inc
and
pop
out
or
or
sbb
repnz
ss
jmp
mov
les
fdivrs
pop
mov
mov
dec
xchg
inc
mul
add
decl
mov
enter
mov
mov
fisubs
fisubrl
call
inc
mov
push
inc
add
dec
inc
sub
repnz
nop
mov
and
mov
fists
push
fcomip
jns
ss
fdiv
test
mov
jbe
std
gs
push
fwait
call
jns
data16
fidivrl
xchg
popf
data16
inc
call
cld
push
std
bndldx
jmp
cmp
push
dec
lcall
insl
dec
inc
test
xor
outsl
xchg
loopne
sbbb
movl
js
push
mov
sub
sub
mov
mov
inc
and
adc
jo
lahf
in
in
decl
jnp
push
stos
out
sbb
in
stos
pop
rorb
pop
inc
out
adc
call
xor
sbb
mov
sbbb
xor
jl
clc
adc
push
aad
push
xor
xchg
mov
incl
sub
jmp
push
cmc
inc
push
cmp
aaa
push
push
addb
sub
pushl
mov
jnp
cs
loop
mov
xor
inc
push
test
or
out
jo
aaa
std
cmp
ficoms
jge
ror
pop
cmp
mov
cmp
les
add
jmp
faddl
jge
and
fstpt
cvtps2pd
call
mov
cmpl
dec
lret
inc
pop
sub
mov
jnp
xor
mov
inc
pop
call
in
je
xchg
orl
mov
ljmp
in
ja
repnz
inc
xchg
add
inc
jne
xor
jmp
xor
bswap
adc
pop
pop
mov
push
push
out
call
sbb
inc
adc
cmp
mov
xchg
fld
xchg
imul
sarb
test
imul
and
inc
or
sub
xchg
outsb
lahf
sbb
cmp
add
jbe
lcall
in
add
mov
mov
xor
inc
sbb
movsl
mov
xlat
add
sbb
cld
mov
ljmp
loop
mov
aas
xor
sahf
add
or
movsl
xor
mov
addr16
xor
push
cmp
call
inc
testb
aad
push
mov
fcomps
pop
pop
adc
jnp
add
lcall
ljmp
je
dec
jnp
jp
repz
dec
push
stc
xlat
cs
scas
inc
mov
call
test
push
sub
in
arpl
aam
xor
mov
dec
adc
stc
out
rcr
rol
xor
mov
inc
inc
jnp
dec
mov
pushf
into
pop
addr16
cmp
hlt
and
in
les
mov
fwait
mov
add
or
fdivs
lcall
jle
and
in
arpl
cli
pop
daa
pusha
std
adc
outsb
sbb
inc
mov
push
incl
out
push
jl
out
adc
outsb
add
ljmp
pop
sbb
sbb
add
mov
loopne
xor
mov
and
adcl
xor
adc
lcall
push
inc
clc
xchg
icebp
or
sbb
pop
fcmovnu
push
jmp
ljmp
pop
mov
hlt
cld
push
push
outsl
test
fwait
cmp
lds
sub
sbb
add
jge
cmp
pop
sbb
mov
test
and
adc
mov
inc
in
pop
loop
lds
or
sbb
decl
sbbl
sub
mov
aad
xchg
fcompl
and
pusha
fcmovnb
fsubrs
mov
loop
or
adc
and
mov
les
xchg
clc
lcall
add
daa
mov
scas
pop
insb
or
imul
xchg
mov
xchg
adc
lcall
push
fmul
jnp
push
les
sbb
add
sbb
push
mov
cli
nop
cmp
jnp
cmpsl
push
push
cwtl
stos
mov
inc
add
add
nop
gs
add
jb
xchg
jle
call
add
push
mov
gs
jbe
mov
and
sbb
rorb
inc
add
pop
and
out
imul
iret
jp
xchg
adc
std
mov
cmp
or
jnp
inc
lahf
shll
daa
cli
in
mov
clc
ljmp
pushl
fstp
sub
out
mov
push
adc
ljmp
dec
pop
pop
jmp
jnp
xor
cmp
pusha
in
push
dec
sar
cmp
ffreep
iret
ds
and
adc
test
sub
jns
xchg
mov
push
cmp
or
in
sbb
fucomp
jg
mov
decl
and
daa
push
fdivr
pop
push
push
pop
xchg
xor
and
nop
test
mov
lcall
cltd
aas
cmpsb
bound
pop
cmp
cmc
inc
out
ljmp
cmp
jp
jae
stos
cs
std
incl
mov
pusha
popa
pop
mov
cltd
xor
ljmp
push
or
lods
aas
add
cmp
push
sbb
adc
pop
sahf
out
scas
ds
xchg
pop
ljmp
pop
sbb
mov
sbb
or
insl
mov
jnp
ss
or
insb
ds
push
inc
decl
xchg
lock
je
sbb
lods
sbb
lcall
lea
mov
lret
dec
jmp
inc
sbb
arpl
sarb
sub
out
cmp
test
fnstenv
bound
ficoms
out
sbb
jmp
out
repnz
outsb
imull
cltd
dec
subl
jno
and
sub
inc
xchg
add
sbb
jmp
pop
pop
cmp
popl
or
loope
out
popf
rorl
inc
popf
inc
cld
pop
cmp
push
into
jns
into
cmp
bound
rcrl
aaa
in
push
icebp
cmp
adc
in
pushf
cmp
xor
lahf
cmp
jmp
sbb
cld
push
sbb
lock
cmpsb
ds
fsubr
inc
xchg
cwtl
iret
shl
pop
sbb
push
into
mov
xor
mov
inc
jb
sub
ljmp
push
adc
fcomip
jl
or
or
lret
mov
les
out
stos
sbb
mov
popa
sbb
inc
push
insl
push
cmpsl
xor
sub
jg
mov
jns
lcall
fsts
jo
mov
adc
pop
mov
scas
lods
cld
and
lods
or
clc
push
js
jg
sub
cmp
mov
add
jno
int
mov
xchg
dec
mov
or
std
addl
adc
xor
add
in
decl
add
shrl
aam
scas
je
ljmp
pusha
inc
jbe
sub
jb
push
repz
repnz
mov
push
sub
push
sub
dec
call
sbb
mov
inc
arpl
adc
loop
add
test
popf
ja
add
push
jmp
jns
dec
mov
adc
push
setp
cld
or
ljmp
mov
das
clc
js
dec
sti
in
mov
pop
int
dec
arpl
lock
mov
fistps
int3
add
cwtl
arpl
out
nop
mov
icebp
incl
into
enter
push
lds
sub
dec
popa
testl
or
lcall
insl
rol
repnz
lahf
xor
push
xor
testb
iret
in
pushl
and
mov
cli
and
sarb
jp
add
push
mov
push
into
cmp
mov
call
mov
push
pop
je
push
inc
mov
inc
in
jmp
fisttpll
jecxz
das
ljmp
fsin
push
jle
cmp
rorl
shrb
push
aas
cmp
test
js
repnz
jg
lcall
pop
push
aas
or
jae
sbb
out
sub
jnp
cwtl
rorl
sub
xchg
mov
lcall
sbb
insl
lods
shll
sub
inc
inc
mov
stc
mov
push
decl
lock
dec
enter
js
stos
mov
cli
xchg
stc
cwtl
add
fcomip
es
inc
mov
mov
mov
push
jnp
cmp
ljmp
stc
clc
mov
lahf
dec
cwtl
shlb
mov
ljmp
jb
jno
jns
pushl
pop
lea
imul
ljmp
jp
push
fsub
outsl
or
call
xlat
and
test
and
js
rolb
jg
mov
fsubrl
sub
incl
push
test
pop
loop
inc
or
xchg
mov
or
xchg
rcl
mov
inc
fwait
mov
pushl
xchg
mov
xor
pop
data16
insl
lcall
frstor
inc
dec
test
fld
stos
mov
std
js
cltd
in
loop
cmp
cli
call
dec
push
adc
xchg
pop
mov
xchg
aaa
loopne
jae
xchg
inc
push
fwait
std
push
ljmp
mov
dec
mov
or
fdivrl
mov
ljmp
mov
adc
mov
sub
icebp
push
into
cld
ljmp
inc
ja
mov
mov
cmp
cs
jge
rorb
cld
or
icebp
jp
cmpsb
pop
stos
push
cmp
mov
fisubrs
icebp
adc
mov
test
jns
push
xlat
jge
rclb
lea
pushl
and
adc
cmp
subb
into
xchg
pop
jns
daa
add
int3
out
jns
ljmp
pop
dec
lea
imul
xchg
push
xchg
push
in
add
and
lods
pop
jmp
insl
cmpsb
jmp
hlt
add
sbb
dec
rcr
dec
ljmp
loopne
add
pop
inc
push
xchg
xor
popf
outsb
jnp
dec
mov
dec
test
scas
loopne
incl
das
imul
shrb
jmp
data16
dec
jge
lds
jge
mov
inc
xlat
or
inc
and
jge
mov
jmp
outsb
pusha
mov
pusha
lock
stos
or
push
fucom
repnz
incl
mov
mov
test
lret
pop
xchg
cld
mov
adc
cmp
adc
pushl
mov
add
daa
cmp
adc
cmpl
decl
inc
dec
out
sbb
jno
sbb
push
mov
mov
cmp
cmpsl
enter
pop
adc
in
mov
dec
ret
cmp
jge
aad
mov
int3
setg
div
imull
cmp
insb
push
int
mulb
jae
inc
lret
mov
sbb
sub
addr16
rol
pusha
mov
cli
loope
decl
sub
mov
int
test
fpatan
mov
imul
mov
pop
out
inc
sti
or
popa
inc
pusha
dec
les
pop
dec
cmp
mov
or
pushl
scas
jnp
push
sti
lret
loopne
dec
iret
ss
sub
roll
jo
and
inc
es
inc
sahf
adc
int3
mov
sub
addr16
cmc
pop
sub
loop
mov
jmp
inc
push
xor
sbbl
inc
fmul
repz
shr
inc
adc
push
ss
mov
call
mov
lock
sub
push
mov
ret
bnd
pop
cmp
call
std
jecxz
mov
pushf
xor
scas
jbe
xchg
sub
cmp
insb
xchg
push
bound
fcmovnb
sbb
dec
sbb
clc
dec
ljmp
pop
sti
call
cmp
jle
imul
jecxz
inc
rcrb
jo
incl
fstpt
lret
dec
sbb
out
rcl
outsb
in
out
mov
inc
xor
fucomi
std
lcall
sub
pop
or
push
test
fisubl
dec
outsb
mov
pushl
xchg
cmc
lock
lods
ljmp
inc
arpl
xchg
out
mov
add
push
mov
idivl
call
std
sti
insl
jl
lcall
imul
cli
test
ds
add
dec
mulb
mov
in
or
mov
push
mov
inc
adc
ss
leave
xchg
jmp
or
add
sub
daa
and
jg
pop
lods
adc
orl
icebp
sub
cld
sbb
pop
scas
sti
rcrl
sti
mov
arpl
push
pop
mov
dec
mov
or
xor
mov
mov
lcall
sbb
xchg
imul
repnz
adc
push
cmpsb
stos
ljmp
dec
inc
movsb
pop
testb
ret
aad
sbb
mov
mov
repnz
loopne
mov
cmc
or
xchg
add
cmpsb
pushl
add
or
adc
xor
mov
xor
cltd
das
push
jns
loopne
incb
sub
or
daa
mov
jecxz
or
sub
test
leave
jl
push
es
dec
lret
outsb
rclb
shl
sti
and
ljmp
pop
std
in
imul
pusha
cli
rcrl
decb
std
push
inc
sub
loop
and
pushl
ret
dec
dec
push
loopne
cmp
mov
repnz
sub
arpl
int
in
call
addr16
push
push
pop
add
inc
and
cmp
mov
or
mov
call
xchg
cmp
imul
inc
xor
rcl
pop
hlt
pop
push
push
nop
leave
fwait
push
add
cmp
xchg
lret
xchg
mov
and
outsb
dec
movl
cmpsb
and
decl
ret
push
out
jmp
outsl
imulb
sbb
xchg
jns
movsb
ret
leave
xchg
lods
jecxz
test
xchg
aad
cmp
fnstcw
dec
adc
in
data16
lock
sub
aas
outsl
cli
test
and
xlat
mov
mov
call
test
int
into
push
cmc
movsb
in
lret
test
mov
incl
mov
lahf
icebp
rorl
or
sbb
or
inc
push
dec
add
gs
jb
push
cld
push
xchg
add
icebp
push
imull
jecxz
decl
cmc
testb
cli
pop
cmc
repnz
xchg
xlat
add
jno
and
jae
js
call
out
iret
les
xlat
lock
mov
daa
adc
pop
lods
lock
push
arpl
push
jl
decl
lock
fisubl
in
xchg
fcoms
test
movups
xlat
popa
fcomip
xlat
aad
lret
mull
cmp
adc
or
popf
lcall
call
test
scas
je
ja
adc
xchg
enter
ljmp
pop
pop
subl
fwait
sahf
pop
xor
sub
mov
subb
decl
mov
ds
iret
dec
ja
mov
push
pop
int3
dec
cmp
inc
dec
in
fcmovnb
inc
xchg
inc
int3
in
scas
sub
mov
sub
adc
dec
repz
dec
sbb
push
inc
cmpsb
mov
adcb
call
xor
ds
test
mov
xchg
add
dec
jae
cli
dec
pop
mov
incl
cmc
adcb
or
fidivrs
call
jne
fisubl
shll
stos
je
sub
repz
sbb
es
mov
push
sbb
cmp
shl
push
or
repz
jmp
push
popf
adc
sar
scas
ffreep
mov
popa
sti
push
push
sbb
push
mov
push
dec
push
addl
mov
clc
sbb
rclb
shlb
in
fdivrs
adc
es
outsl
outsb
dec
mov
lods
jp
fwait
arpl
out
mov
cmp
mov
test
das
stos
pop
aas
xchg
in
mov
xor
mov
adc
frstor
sti
mov
or
pop
insl
aam
jmp
lahf
and
mov
shlb
sbb
cltd
cs
cld
fwait
or
test
lcall
add
mov
test
cltd
scas
les
je
test
lock
incl
mov
ror
insb
sahf
icebp
xchg
push
push
ss
xchg
daa
ds
repnz
xchg
lcall
test
icebp
pfmax
fxch
mov
pushl
and
mov
lds
movsb
stos
cltd
fs
cmpsb
cmp
sub
jmp
imul
sub
fisubrl
lahf
imul
outsb
jae
xchg
mov
ud0
lcall
pop
or
sbb
jb
add
call
int
cmp
jnp
push
fs
icebp
jmp
loope
and
mov
jo
push
popa
sahf
xchg
pop
fistps
lret
mov
cld
cmp
rcrb
jmp
int
adc
je
xchg
mov
add
call
pop
sbb
addr16
sbb
imul
mulb
xchg
mov
movsl
test
mov
out
mov
ljmp
je
dec
fimull
incl
loop
inc
loopne
or
mov
popa
push
push
add
mov
adc
xchg
test
decl
inc
mov
out
loope
xor
xor
ljmp
pop
fildl
pop
jne
add
inc
shlb
imul
inc
enter
inc
xchg
add
pop
push
int
mov
ss
or
or
call
loopne
dec
jnp
daa
sbb
push
xchg
pop
push
std
mov
pop
push
jnp
pop
cmp
inc
clc
ret
aas
lods
lret
xor
ror
fstpl
mov
cmp
call
and
dec
pop
or
aam
pop
and
pop
inc
xchg
dec
pop
cmp
insl
movsb
jmp
pop
mov
pop
sti
ror
mov
aas
fistps
imul
xor
add
jg
jecxz
adc
out
cli
fcoml
push
dec
cltd
fstpt
mov
push
std
ljmp
mov
cs
dec
dec
dec
out
cmc
and
xchg
cltd
clc
shrb
stos
mov
xorl
iret
shl
or
add
clc
sbb
jmp
dec
nop
iret
xchg
imul
in
mov
test
stc
scas
iret
push
leave
mov
add
sbb
or
in
leave
inc
ds
ljmp
push
adc
les
xor
lea
xchg
pop
aam
sub
sub
mov
shll
enter
push
mov
popf
mov
cwtl
jmp
ljmp
enter
sbb
pusha
ds
pop
pop
sub
push
scas
or
hlt
add
insb
aas
mov
pop
mov
jne
mov
push
jne
fwait
and
inc
aam
mov
ficomps
fstl
sub
sarb
into
and
or
lcall
push
lods
stos
mov
or
lcall
adc
jmp
test
or
pushf
xor
outsb
out
aad
insb
sub
jg
jmp
das
or
add
cwtl
and
daa
xor
test
or
cmc
lcall
loopne
mov
das
and
ja
stos
ss
lea
push
xchg
pop
bnd
mov
push
incl
xchg
fiadds
call
push
daa
pop
jno
shll
mov
cmp
loope
mov
push
cwtl
push
sub
jmp
xchg
enter
popa
popa
pop
clc
sub
andb
int3
pop
icebp
mov
xor
incl
ss
push
dec
mov
sbb
iret
addr16
fdivrl
jno
or
aad
stc
testb
pushaw
or
pop
pusha
xor
test
outsl
inc
mov
inc
cld
ljmp
xchg
sub
sbb
mov
mov
lret
jg
in
in
xchg
imul
lcall
je
inc
mov
mov
scas
cltd
lahf
fld
test
scas
imul
push
mov
jns
pop
push
incl
mov
icebp
cli
xor
push
aam
pushf
jne
pusha
and
leave
fs
incl
push
shrb
pop
add
das
xor
clc
mov
dec
movsl
pop
or
addr16
xor
push
cmp
fistpl
call
mov
out
xchg
stc
push
inc
aas
push
bound
lahf
in
mov
cmpsb
sbb
loope
incl
mov
and
mov
and
aam
or
xchg
fcomps
dec
inc
pusha
mov
pop
xchg
push
out
into
pop
jl
sbb
loope
lods
aaa
out
xchg
xor
sub
call
xchg
addl
fdivrl
ror
out
jne
popf
sub
neg
test
cwtl
jnp
incl
loopne
je
negl
mov
cmpsb
and
pusha
inc
cmpsb
push
in
push
adc
test
call
lds
mov
shrl
fisubl
cli
movl
loop
pop
jl
xchg
aaa
pop
ds
movsb
mov
fildll
mov
test
fistl
sub
pop
repnz
movsb
inc
fcomps
imul
imul
mov
lret
jo
lock
sub
add
lcall
mov
mov
dec
adc
incl
cld
and
cmp
in
xchg
dec
sbb
lcall
inc
xor
lods
int
jb
add
xchg
adc
xorb
dec
and
dec
fbld
repz
or
scas
push
lock
setne
imul
imul
pushf
jmp
mov
into
loopne
and
cmp
mov
decl
shl
adc
pop
pop
test
inc
scas
mov
push
lods
sti
jg
insb
std
leave
cmp
or
aad
arpl
xor
fsubrl
in
dec
shr
jne
testb
jecxz,pn
popf
std
jp
sub
addr16
test
decl
test
dec
jecxz
pop
pop
cmp
add
jnp
lret
mov
jmp
jge
cmpsb
xor
inc
dec
push
popa
mov
pop
imul
push
add
sub
sbb
add
out
mov
pop
pusha
pop
push
adc
pushf
dec
das
and
fwait
outsb
ja
pop
mov
cmpb
sar
decl
add
lret
cltd
das
push
xchg
mov
mov
xchg
cli
mov
cmp
out
cli
ds
sub
fistpl
std
insl
cwtl
pushf
out
jb
mov
lcall
bound
inc
insl
pop
adc
gs
cmp
push
out
mov
loopne
mov
sbb
jne
or
pushl
ret
lahf
push
pop
sub
orl
out
sti
pop
in
push
movsl
test
and
scas
clc
ss
loop
test
ds
adc
or
xor
cwtl
rol
nop
lahf
push
pop
pop
pushl
arpl
fdivp
xchg
xchg
xchg
jb
dec
leave
fwait
add
xchg
cltd
push
lock
lret
fistl
pop
adc
into
sbb
movsb
and
sbb
cs
xchg
pop
jnp
incl
push
iret
cltd
daa
popf
push
in
lods
and
test
orl
adc
sbb
maxps
jecxz
adcb
pop
jns
mov
std
mov
call
add
shlb
aad
pop
xchg
js
mov
test
testl
std
mov
jge
rcr
gs
push
mov
add
xchg
subb
mov
mov
sbb
pushl
aas
lret
fwait
and
pop
xor
push
push
jle
iret
clc
imul
outsl
adc
out
out
cmp
inc
sub
cmp
into
pop
cmp
aas
out
jno
mov
out
mov
loope
push
cmp
decl
in
out
shrl
jo
aaa
push
sbb
es
mov
lahf
pop
mov
call
xchg
dec
pop
or
mov
mov
mov
rcl
scas
fcomps
negb
js
cmp
cmp
stos
jmp
pop
jmp
sti
xchg
sbb
mov
js
sbb
xor
dec
out
cli
and
js
jo
sarb
xchg
or
add
cld
push
stos
push
bound
pop
int
dec
pushl
incl
jmp
popf
pusha
inc
xor
data16
lret
and
cmp
jmp
lret
cmp
push
fdivl
inc
cwtl
push
mov
call
sub
cmp
mov
out
ror
sbb
mov
mov
out
call
adc
mov
fnstsw
lret
jne
jmp
mov
cmpsl
xchg
or
push
sbb
arpl
fcomip
out
outsl
incb
leave
jg
orb
test
sbb
sbb
mov
add
dec
js
daa
push
mov
movsb
fldenv
aas
test
xchg
cmp
call
in
push
inc
lea
mov
sub
xor
cs
mov
out
stos
mov
enter
jmp
movsb
pusha
fstp
push
out
xchg
inc
imul
mov
add
cli
arpl
add
clc
mov
sub
fmuls
sbb
and
inc
sbb
repz
ljmp
add
mov
out
jb
popf
cwtl
ljmp
pop
mov
ja
xor
lcall
sbb
pop
xchg
cltd
and
scas
les
lock
call
adc
fwait
mov
stc
in
push
mov
mov
cmp
cmp
sub
add
jnp
lds
cmp
and
xchg
lods
push
jae
push
mov
and
fisubrs
cmc
repnz
xchg
call
mov
iret
fs
mov
inc
pop
pop
mov
jp
aas
lcall
cmp
push
mov
fisubrs
pop
mov
dec
xor
xchg
push
or
sbb
aad
pop
cld
inc
shl
into
dec
jns
clc
mov
inc
xor
mov
test
popf
insb
add
in
push
aas
sarb
decl
ficompl
mov
enter
lret
and
lcall
mov
lcall
mov
shr
jmp
testb
xchg
push
jmp
inc
mov
add
lcall
es
xchg
jo
push
mov
adc
push
or
lret
push
pop
pop
movsb
int3
call
lcall
xor
mov
sti
pop
inc
cld
mov
adc
test
jnp
shrl
mov
cwtl
adc
outsb
in
inc
out
lret
mov
xchg
outsb
lds
push
jmp
and
adc
xor
ja
inc
incl
loope
addb
movsl
test
cmp
sahf
clc
decl
mov
mov
cmp
mov
scas
adc
mov
cmp
fwait
pusha
jp
incl
inc
sub
test
xchg
dec
enter
loope
je
stos
mov
or
cli
pop
movb
lret
dec
pop
insb
xchg
mov
daa
xchg
bound
cmp
or
sbb
pop
xor
call
jmp
xor
lcall
test
xchg
out
add
or
out
dec
outsl
pop
out
dec
lcall
cmp
leave
pusha
stos
mov
aaa
inc
lods
scas
inc
mov
adc
push
inc
shll
out
cli
pushf
cltd
mov
outsb
inc
movsl
sbb
xchg
jb
inc
popa
out
addb
add
jmp
push
out
daa
mov
push
repnz
dec
jae
cli
in
add
clc
push
sub
lret
dec
sahf
inc
gs
jle
mov
mov
jnp
cmpsl
bound
popa
cmc
int3
sub
lcall
push
ljmp
mov
movsb
cmpb
jle
ds
movsl
push
cld
mov
int3
test
fidivrl
fwait
cmp
xlat
pop
loop
pushl
sbb
dec
outsl
or
mov
jp
push
ds
xchg
mov
fcomi
add
fildll
stos
out
ds
pop
sub
cmc
xchg
xchg
push
lcall
enter
sti
dec
cwtl
in
imul
jnp
enter
ja
push
sbb
ljmp
incl
and
es
bound
movb
mov
jl
pop
pop
xchg
leave
repnz
and
decb
call
pop
xor
xchg
sbb
push
rorl
test
sbb
sbb
int
fst
dec
lock
ljmp
push
mov
and
ret
pop
cmp
jmp
mov
sbb
jns
xor
movb
xor
xor
iret
xchg
jecxz
les
sub
cmpsl
pop
and
pop
xor
xor
repz
dec
mov
into
adc
add
int
push
xor
mov
aam
mov
push
jno
cs
stos
mov
icebp
clc
repnz
push
incl
jle
push
mov
sbb
stos
adc
mov
icebp
jle
arpl
jae
and
cmp
lea
fsubrl
push
xor
out
or
outsb
js
add
sahf
idiv
jmp
push
sbb
xchg
mov
std
adc
mov
aas
sbb
setno
mov
mov
ljmp
jle
push
aaa
mov
lea
jle
ljmp
mov
idiv
ljmp
sbb
and
and
cs
add
cmp
insl
mov
push
push
cmc
inc
push
cmp
mov
push
xor
fdivrp
call
sahf
or
popf
push
pop
push
inc
loope
push
sub
mov
mov
call
cld
out
cli
jns
clc
rsm
push
ds
push
sub
add
jo
fwait
or
push
push
adc
xor
or
jl
sub
sub
test
push
cmp
imul
cmp
mov
push
pop
scas
inc
loop
fcmovnb
or
fisubl
mov
and
fsubrl
or
fcomip
fmuls
sbb
and
mov
mov
push
arpl
int
jmp
mov
inc
push
mov
xchg
mov
pop
popa
or
or
idiv
outsl
pop
mov
test
ljmp
jae
cltd
mov
xor
push
jmp
adc
jp
std
jg
pop
cld
ret
mov
shlb
insl
xor
mov
call
hlt
out
stc
jne
add
dec
mov
in
push
inc
pop
pushf
lods
adc
cmp
sahf
mov
int
mov
mov
sbb
xchg
pop
out
xchg
repnz
fwait
icebp
out
call
cmc
rorl
and
push
push
add
stos
and
lds
lcall
jmp
les
inc
negl
movsl
arpl
inc
add
idivl
lods
cmp
mov
or
or
js
out
xchg
jl
jmp
insb
sub
dec
cmpsl
movsb
ljmp
push
adc
xor
adc
mov
loopne
add
adc
jge
dec
mov
inc
dec
sub
mov
test
scas
cmp
mov
lds
dec
movsb
fwait
xor
lea
cltd
xchg
mov
xor
lret
iret
mov
adc
aam
seto
jl
scas
pop
xchg
gs
in
insb
mov
dec
aam
mov
sbb
and
mov
mov
popf
dec
in
lock
decl
sbb
repz
addps
iret
xchg
jae
sbb
add
pop
mov
dec
dec
lcall
mov
test
mov
cmp
sar
lcall
cmpsb
pushf
or
movsl
jecxz
jg
dec
mov
dec
inc
cwtl
inc
and
and
cmp
push
test
les
aad
and
push
mov
cmp
pop
mov
jge
out
es
outsb
xor
adc
push
fcompl
int
xchg
lret
mov
mov
stos
mov
dec
les
shrb
dec
pushf
pop
rol
mov
cli
dec
inc
sbb
fnstsw
icebp
jmp
adc
loop
inc
cli
lea
push
push
mov
aad
pushl
enter
jmp
fistpll
pop
lcall
fimuls
adc
mov
in
or
scas
jae
inc
sub
lock
movsl
push
lock
decl
imul
jg
popf
cmp
or
and
xchg
nop
inc
in
sahf
xchg
inc
std
mov
lret
xor
and
lods
xadd
incl
jb
jns
ss
sahf
test
div
sbb
scas
sbb
push
test
xor
jg
push
sub
movzwl
repz
aad
outsl
pop
pop
mov
add
pop
push
clc
loop
pop
xchg
into
insb
out
leave
jl
sub
xchg
xchg
jg
pushl
xor
mov
sahf
enter
mov
stos
or
incl
inc
cmpsb
mov
int
or
mov
repz
dec
jecxz
cld
lcall
fcoml
loop
cli
bound
loop
sbb
jg
and
out
out
addb
mov
filds
push
xor
in
push
test
dec
mov
xchg
push
push
lods
and
ficompl
jne
and
mov
out
loop
stc
les
cmp
xchg
inc
push
sub
nop
outsl
cmp
adc
call
mov
xchg
xchg
add
pop
stos
pop
out
sbb
and
ljmp
jmp
pop
dec
or
ds
subl
cmpsb
fwait
rcrb
movsl
decl
sbb
ljmp
push
sarl
adc
lcall
jmp
pop
lock
std
ss
leave
adc
cmp
push
in
dec
pop
push
inc
loope
call
call
jb
out
popa
out
or
stos
push
mov
lret
adc
or
std
insl
outsb
sbb
decl
fwait
leave
xor
int3
cld
lods
mov
fs
dec
jno
push
pop
out
jbe
mov
inc
mov
js
push
mov
or
mov
inc
mov
push
jo
popa
pop
inc
sbbb
xchg
cmp
fcmovnb
fwait
stc
xor
cmp
lcall
and
cmpsl
out
push
repz
inc
dec
and
jecxz
push
ds
ffreep
leave
fbstp
mov
div
mov
or
xor
iret
dec
lcall
xor
push
sbb
ds
mov
dec
sbb
sbb
js
xor
mov
pop
add
lods
mov
xor
dec
in
push
push
in
jo
add
mov
jae
out
mov
xchg
push
popa
dec
decl
cs
mov
sahf
movsb
mov
mov
push
lods
pusha
push
pushf
pop
leave
cli
lcall
cmpsl
scas
cmp
cmc
out
adc
push
arpl
decl
sub
out
ja
aad
cmp
mov
mov
xor
js
or
ljmp
pop
pop
jnp
cmpsl
out
lcall
push
idivl
insb
dec
push
mov
push
add
loope,pt
pop
and
ret
lods
jp
enter
arpl
cmp
inc
jne
les
sarl
in
incl
jns
xchg
mov
test
lea
enter
sub
inc
ja
mov
pop
fcmovu
daa
dec
add
push
xchg
psrad
push
jo
inc
mov
push
mov
enter
test
push
sti
and
inc
hlt
roll
incl
cld
sub
cld
imul
repnz
sbb
xchg
xor
add
cmc
dec
sub
pop
dec
out
or
loope
jnp
frstor
stc
test
cld
add
pushl
cmp
mov
pshufw
in
and
push
mov
mov
adc
fwait
std
cmp
adc
aas
out
js
mov
out
test
cmc
loope
mov
pushl
sub
mov
sub
xor
inc
add
es
arpl
sbbl
ljmp
cli
mov
stos
inc
adc
pushw
jl
pop
and
pop
push
push
dec
dec
cmp
lock
jae
xchg
xchg
movups
sub
sti
or
xor
shlb
cld
aas
addr16
scas
test
dec
call
lods
pop
dec
push
pop
or
dec
sbb
cmp
sti
xchg
push
add
lock
cmp
cmpsb
das
pop
xor
jae
into
push
icebp
fucomp
or
popf
xchg
adc
aam
iret
ljmp
xlat
jbe
or
mov
push
inc
cmp
inc
inc
out
pushf
shr
test
mov
sub
incl
cld
push
mov
mov
je
dec
cmp
insl
xlat
and
mov
dec
add
ljmp
dec
jmp
mov
mov
and
ss
imul
incl
rolb
and
pushf
aas
jnp
icebp
cmp
jnp
jnp
or
pop
scas
std
pop
jae
inc
push
pop
mov
lea
push
std
mov
inc
lahf
sbb
shll
ja
pushl
inc
pop
or
jae
jne
jne
mov
addl
in
call
sub
and
adc
rorb
jnp
insl
mov
dec
aam
xor
mov
out
shlb
pushl
sub
sbb
adc
mov
int3
mov
es
jnp
js
das
cli
fiaddl
push
inc
jp
mov
add
or
ds
sbb
pop
pushl
inc
test
roll
test
fdivl
pop
push
pushl
pop
ret
repz
ficomps
out
loopne
cmpsb
imull
mov
out
clc
jbe
leave
dec
pop
mov
mov
lods
cmpsl
xchg
sbb
and
and
ljmp
repz
das
mov
mov
xor
adc
rorl
cmp
cmp
call
stos
lea
cld
adc
add
xor
jns
sbb
pop
stos
lcall
int3
out
mov
clc
rorl
dec
xchg
aam
mov
inc
ljmp
sub
push
test
decl
lea
and
cmp
fstpl
add
xchg
addr16
xchg
ljmp
call
call
and
shlb
inc
stos
cmp
cs
call
ss
push
call
cmc
jae
xor
lock
cmpsl
dec
xor
or
xor
add
out
call
cli
aaa
movsb
rorl
mov
pop
sbb
lret
ret
adc
bound
push
adc
pop
fcomip
jmp
cld
jmp
loop
dec
jp
push
lds
popa
mov
stc
sbb
sbb
xchg
cmp
in
in
pop
adc
pop
movsb
lret
xlat
and
inc
or
lcall
xor
dec
out
and
cltd
inc
arpl
dec
sbb
insl
dec
outsl
cli
cmp
insb
and
hlt
pop
inc
sbb
das
outsl
cmp
outsl
push
insb
xchg
sbb
ljmp
inc
imul
out
cmp
insl
cli
pop
out
mov
insl
or
jle
pushl
xchg
sysret
mov
xchg
btc
xorb
pop
insl
jae
and
mov
mov
hlt
inc
cs
mov
jno
mov
jp
setge
jecxz
jne
mov
cltd
fcomip
push
bound
jnp
sub
dec
cld
js
xchg
in
das
push
mov
mov
icebp
fsubs
xor
xchg
loop
cmc
lods
push
jp
pusha
sub
mov
fcomip
filds
lret
daa
stos
mov
lahf
clc
repz
push
loopne
loopne
jmp
fsubs
mov
xor
jl
jmp
push
sub
adc
sub
sub
or
out
mov
dec
ljmp
push
mov
push
sbb
decl
in
out
das
or
jge
out
sub
mov
jb
and
imul
mov
ljmp
inc
mov
xchg
pop
dec
mov
add
or
lcall
in
mov
jb
lahf
cmp
in
in
xor
sub
test
jae
xlat
adc
mov
fisubrs
lcall
mov
movsb
aam
in
adc
enter
jmp
clc
data16
adc
or
lods
mov
fcompl
jmp
lret
push
push
cld
add
xchg
out
mov
jns
js
dec
test
xchg
push
nop
push
inc
dec
jecxz
cmp
add
icebp
shlb
inc
mov
mov
loopne
xor
cmp
ljmp
jmp
push
scas
cmpsb
mov
cmp
mov
iret
loop
jl
adc
jge
xor
cmp
popf
in
outsb
pop
jge
add
rcrb
jmp
sub
cwtl
call
sbb
loopne
call
out
ljmp
xor
mov
dec
push
push
ret
in
pop
xchg
push
int3
rclb
inc
enter
sub
lods
outsl
jb
cmp
push
jbe
push
movsl
data16
call
decl
sbbl
push
jle
lock
jne
inc
add
xor
mov
fcoms
push
shl
call
mov
cmc
jnp
or
jne
cli
sub
fidivs
repnz
push
dec
pop
pop
in
enter
sahf
bound
loopnew
bound
mov
xor
lds
push
fisubs
pushl
cwtl
mov
mov
adc
jno
xchg
and
outsb
daa
jae
out
in
enter
aam
stos
mov
sub
ret
pop
mov
sub
xchg
test
cmp
into
addr16
pop
jno
sahf
imul
or
subl
jnp
or
jecxz
repnz
ljmp
xor
aas
cli
xor
cmp
pop
sbb
sbbl
shlb
gs
in
xchg
gs
sti
jb
rorb
jp
leave
mov
sbb
add
and
es
dec
movsb
push
daa
adc
int3
fdivp
pop
mov
ljmp
ljmp
bound
pushf
pop
cmp
xchg
sub
push
notb
sar
jns
std
loop
aad
cmp
in
lahf
push
xor
or
outsb
xchg
adc
sub
aam
mov
lret
sbb
movsl
xchg
xor
jle
add
push
sahf
dec
daa
jp
ljmp
icebp
lcall
and
cwtl
xlat
push
lret
add
and
in
cmpsl
adc
lahf
movsl
and
pop
loopne
fidivrs
sbb
pop
dec
clc
mov
andl
jbe
push
sbb
call
pop
insb
stos
adc
xor
scas
call
imul
push
sbb
mov
in
sar
pushl
pop
loop
inc
into
jg
cs
fnstcw
dec
pop
lcall
leave
inc
mov
jecxz
push
jmp
fdivp
cwtl
ret
js
adc
push
push
aad
jb
int
fwait
sub
shrl
cmp
adc
jle
std
scas
fwait
mov
dec
fnclex
fimuls
mov
pop
dec
xchg
out
jecxz
mov
gs
jns
jne
and
fsubrs
ficompl
iret
idivb
inc
and
shl
inc
cmp
out
lahf
nop
and
popf
mov
cld
incl
pop
pop
mov
push
sbb
adcl
adc
fs
jmp
cmp
mov
fstl
dec
dec
cmp
mov
pop
jae
jbe
or
ljmp
test
mov
das
adc
adc
imul
dec
pop
xorb
out
inc
loopne
mov
popa
divb
insb
cli
adc
sbb
loop
and
ret
cli
dec
push
push
adcl
iret
gs
bound
out
add
outsb
subb
inc
dec
imulb
aaa
push
mov
fs
cmp
imul
adc
sbb
data16
pop
sub
cs
mov
mov
xchg
dec
outsl
push
stos
jge
jmp
fs
mov
shll
loop
mov
xlat
arpl
loopne
dec
adc
in
test
xor
cmc
das
cwtl
pop
loop
dec
repz
je
adc
mov
in
insl
decl
jbe
inc
jmp
fs
mov
mov
push
dec
ljmp
lods
add
call
out
inc
push
cmp
add
inc
fbld
int3
cli
push
jno
lock
incl
mov
pmaddwd
lods
in
in
mov
mov
xlat
and
push
mov
cmc
mov
mov
dec
lret
jns
arpl
loop
cmp
ljmp
movsl
jb
sbb
inc
mov
xchg
push
jecxz
or
jg
cld
out
push
inc
xchg
iret
fsubl
mov
insl
inc
ret
push
cli
push
pop
jmp
push
call
fsts
cmp
ja
aam
mov
fisttps
mov
jmp
dec
add
push
xchg
mov
and
push
pop
sub
pop
and
or
jmp
stos
pop
ja
mov
and
mulb
mov
mov
sti
lcall
aas
nop
xlat
or
xchg
fdivl
sub
adc
notl
ds
mov
mov
ljmp
into
nop
jle
and
jbe
or
insb
and
and
and
orl
dec
xchg
push
lds
pop
push
ljmp
incl
out
cwtl
lods
sub
pop
push
fs
pop
inc
fbstp
pop
cmp
imul
call
mov
cltd
sbb
dec
rol
pop
in
jmp
jge
out
xor
dec
mov
mov
inc
push
push
jno
mov
leave
mov
sahf
pop
mov
cld
push
sub
nop
mov
cwtl
jb
dec
clc
leave
push
ficoml
je
mov
push
pushf
sbb
jo
or
lea
jb
lods
insb
mov
xor
clc
push
push
jae
repz
add
dec
ljmp
mov
push
mov
das
aaa
jns
sbb
ljmp
sbb
icebp
jne
jns
ds
mov
shl
pop
ret
imulb
icebp
ljmp
lock
jg
bound
sbb
jle
call
decl
lock
cltd
jns
add
xor
xchg
xchg
mov
aad
xchg
ljmp
lcall
mov
loope
mov
pop
gs
inc
xor
lret
repz
push
out
cmp
lods
lahf
flds
push
xchg
add
ja
mov
pusha
sub
xor
mov
mov
pop
mov
push
sub
cwtl
cmpsl
movsb
cmpsl
and
movsl
negl
push
fidivs
mov
rorl
mov
sbb
sbb
adc
icebp
mov
pushl
jns
sti
addr16
pop
jo
outsb
lret
ret
jl
ret
mov
xchg
ljmp
loop
cmp
jl
movsl
jp
imul
push
add
jge
cltd
jecxz
lea
nop
in
ljmp
dec
and
xchg
and
aas
mov
jbe
push
pop
mov
stc
push
popa
cmp
incl
cmp
jmp
push
outsl
into
push
addr16
mov
insl
mov
mov
jmp
push
pop
ja
xchg
jb
outsl
outsb
mov
pop
xor
add
pushl
enter
test
mov
push
mov
repnz
xorb
fyl2xp1
jns
mov
call
shl
aam
cmp
das
mov
mov
lret
rcrb
and
clc
fdivrl
pop
into
inc
sbb
decl
mov
sub
add
test
pop
fisubrs
rcrb
lcall
cmp
mov
push
loopne
ret
mov
mov
pop
and
push
aam
push
mov
decl
jmp
jnp
mov
jl
mov
hlt
dec
jmp
gs
dec
scas
jmp
jnp
faddl
mov
cmp
shrb
and
and
add
cmpsb
jecxz
decl
pop
scas
rorb
lcall
fdivl
sbb
cld
test
jnp
mov
ljmp
mov
add
test
scas
lahf
pop
in
lcall
ror
imul
ja
lret
cmpsl
pop
sar
sub
mov
mov
dec
pop
xcrypt-ecb
cmpsl
dec
mov
rep
pop
in
call
and
movb
sbb
scas
popa
test
xchg
outsl
notl
stc
push
scas
mov
mov
lock
std
jb
push
insb
sbb
cli
test
in
mov
and
jp
add
and
xor
incl
dec
out
mov
push
sub
or
pushl
xchg
add
pop
cld
push
cmp
jb
sahf
iret
mov
mov
jns
call
test
in
imull
pop
test
in
pop
xlat
xchg
sbb
dec
jne
jge
test
cmc
ljmp
and
push
stos
aad
roll
shr
imul
test
ss
mov
inc
adc
push
add
in
sbb
call
incl
loope
and
mov
adc
or
jg
jp
jg
enter
setnp
popa
inc
je
sub
or
out
into
test
incl
pop
and
aad
lds
pop
lret
mov
cmp
insb
lret
icebp
mov
idivb
pushl
push
rcl
aad
adc
or
pop
push
or
dec
ret
jp
lret
ljmp
jle
fisubrl
ret
and
loop
notb
inc
out
pushf
icebp
mov
ss
call
lret
pop
call
xchg
icebp
jns
xor
xor
sub
push
testl
das
call
xor
mov
ljmp
rcl
mov
sub
sahf
ljmp
movsl
jecxz
dec
push
enter
icebp
orb
cs
jg
jmp
cwtl
pop
rorb
inc
sbb
jg
popa
popf
xchg
mov
dec
sbb
dec
sub
jmp
pushl
hlt
mov
fcmovbe
adc
pxor
xor
scas
pop
push
movsl
push
das
sub
in
scas
popf
sbb
sbb
xchg
cmp
out
jmp
cli
insb
cmc
mov
xchg
push
sub
xchg
pop
sub
sub
mov
jmp
movsb
arpl
cmp
ror
call
sub
inc
cmp
mov
fcmovbe
sub
nop
sbb
mov
adcb
mov
js
sub
or
ljmp
call
bound
mov
call
js
mov
add
push
push
jnp
mov
fstps
fistps
xchg
call
cltd
jae
nop
std
cltd
dec
pop
inc
lods
imul
call
xor
in
stc
and
scas
addr16
adc
frstor
jp
icebp
iret
cs
gs
bswap
dec
inc
mov
mov
std
repnz
sbb
subl
xor
call
mov
gs
sbb
mov
popa
icebp
fsubl
in
gs
call
push
inc
mov
sbb
scas
stos
sahf
fstl
mov
sti
mov
fsub
icebp
push
dec
ljmp
cmpl
adc
sub
mov
int3
pmaxsw
mov
mov
icebp
xor
inc
dec
jle
rcr
xchg
arpl
pop
sub
xor
shl
adc
push
cwtl
mov
ss
cmp
lea
dec
fadd
cmp
cmovb
mov
and
ret
push
xor
fstps
xor
icebp
mov
mov
jno
fbstp
pop
jne
inc
jmp
ljmp
div
pop
imul
enter
inc
ds
arpl
adc
sahf
call
scas
inc
cmp
divl
ret
inc
sbb
xchg
lcall
outsl
call
xchg
jne
sahf
jge
scas
stc
imul
jae
lea
pop
adc
sub
lcall
outsl
clc
jg
push
push
adc
xchg
popa
adc
push
fimull
push
in
lcall
jae
ret
ljmp
xchg
xor
in
movsl
mov
push
mov
arpl
aad
lcall
cld
adc
call
insl
and
sub
pop
inc
jae
xchg
xchg
and
ljmp
ja
rcrl
jmp
xchg
xor
pop
fisubl
pop
add
lcall
in
cwtl
ja
jg
inc
lret
mov
shll
insb
inc
test
lret
pop
fcomip
push
cmp
push
adc
out
ss
jge
push
push
and
push
cmp
pushl
aaa
fwait
jle
loope
or
pop
call
arpl
dec
jnp
in
jle
jg
dec
cld
fmull
push
iret
push
fs
mov
push
call
subl
inc
push
xchg
stc
mov
sbb
and
xchg
fstpt
movsb
adc
cmp
jmp
add
cmp
inc
sbb
jo
inc
aam
fwait
out
loope
mov
popf
sbb
or
cs
sub
incl
mov
cwtl
push
pusha
jno
xor
sbb
inc
cmp
outsl
jl
or
dec
xchg
stos
and
loop
dec
pop
hlt
pushl
mov
mov
repnz
pop
pop
mov
das
sar
das
sbb
scas
mov
push
scas
jmp
aaa
dec
cli
popa
ja
idiv
cld
movsb
mov
xchg
adcl
ds
xlat
jne
jo
fistpll
xlat
xchg
in
add
mov
cli
cmp
pushl
imul
adc
lods
lods
cmp
pop
sub
xchg
lds
fbstp
mov
pop
push
cmp
cmp
mov
lahf
cmp
lock
and
add
aas
stc
lcall
xchg
push
mov
xor
mov
mov
call
rclb
inc
or
xor
mov
xor
scas
pop
jmp
call
push
pop
dec
in
push
mov
out
stos
cmp
push
adc
xor
or
inc
jle
xlat
fsubl
jle
testb
adc
fsubrp
mov
sar
test
and
pop
adc
mov
movsb
jb
push
in
test
and
mov
clc
das
test
lds
adc
mov
inc
push
sbb
fidivrs
mov
sub
adc
cmp
pushl
jge
mov
dec
loope
addb
test
pop
call
pop
xor
jmp
pop
fmull
pop
fstp
jle
insl
xchg
jecxz
cmp
push
push
fldcw
push
pop
dec
xchg
pop
push
jmp
pushl
mov
push
sub
dec
scas
sbb
sub
mov
inc
or
or
xor
pop
cmp
inc
icebp
mov
mov
pop
cmp
mov
mov
push
fists
arpl
imulb
jbe
insl
add
das
push
mov
pop
push
or
jbe
sti
jae
incl
sub
stos
inc
and
add
xchg
test
dec
sbb
imul
movsl
add
pushl
sbb
and
fdiv
xor
dec
mov
xor
or
arpl
cmp
jo
enter
enter
aaa
pop
mov
shl
pop
cmp
sbb
jle
push
adc
and
jg
cmp
and
cmp
mov
lods
je
mov
packssdw
aaa
cld
pushl
insb
stos
testb
lret
loop
cmc
pop
jp
fldenv
xchg
mov
int
push
push
scas
and
inc
in
in
add
or
push
fstpl
rorl
loopne
cmp
add
mov
test
inc
sbb
lcall
shll
sub
lret
icebp
js
jno
pop
pop
loop
std
mov
xchg
cs
push
out
nop
movsl
imul
repz
cmc
cmp
pop
mov
decl
stos
xlat
pop
enter
add
lods
mov
cltd
sbb
pop
dec
push
xchg
pusha
call
ljmp
movsl
arpl
sbb
icebp
shrb
arpl
mov
stc
adc
in
pushl
xchg
jne
sub
push
fcomps
xor
test
lcall
push
andb
pop
in
into
mov
insb
fs
out
outsl
fisttpll
cmp
jns
pop
aam
mov
mov
push
aad
jne
fistl
dec
cld
cmp
std
pop
xor
pop
push
jmp
jl
fidivl
add
fwait
add
dec
outsl
mov
xor
dec
sub
sbb
or
addr16
jmp
add
mov
daa
mov
dec
inc
stos
push
cmp
ljmp
xor
adc
jl
adc
not
push
xchg
xchg
push
addr16
inc
dec
gs
push
scas
arpl
call
jmp
test
cmpsl
sub
icebp
imul
xlat
sub
sti
mov
sbb
out
pusha
lcall
mov
jp
jne
add
mov
rcrb
mov
fbstp
loopne
push
fs
mov
sub
mov
jae
fsubrs
xor
pusha
sbb
pop
and
adc
rcrb
mov
jl
mov
insb
xor
repnz
outsl
imul
pop
adc
pop
pushf
push
ljmp
addr16
ficompl
sbb
scas
inc
sbb
test
scas
scas
dec
push
pop
mov
pushf
adc
js
test
cmp
mov
inc
mov
mov
cli
jg
enter
lock
and
jecxz
pop
push
insl
stc
pop
xchg
pop
adcl
add
or
incl
fwait
mov
in
nop
sbb
mov
mov
in
and
push
lret
xchg
leave
cmc
sbb
xchg
sub
cld
mov
jle
data16
add
test
movsb
lcall
imul
lahf
adc
lcall
sub
es
and
jne
mov
out
and
daa
sbb
int
jb
ljmp
cmpsl
int
or
jns
mov
and
jp
push
loop
aam
and
decl
cmp
sbb
sahf
aas
pop
or
sub
adc
push
add
dec
cmpsb
aad
and
out
cli
gs
out
mov
in
std
int
xor
out
mov
and
repnz
xchg
jg
and
ljmp
mov
lea
mov
jbe
stos
cmp
incl
cld
cmpb
jno
aam
mov
out
lcall
ljmp
pop
loop
aad
inc
std
and
add
mov
xor
jns
mov
sbb
incl
mov
mov
mov
in
clc
lods
jnp
sub
sbb
jns
sub
mov
or
pushl
pop
out
je
push
and
out
sbb
daa
sbb
sub
cmp
xor
add
hlt
ret
jp
and
jne
ficoms
orb
and
lcall
or
insl
incl
inc
mov
push
push
push
pop
xchg
cmp
enter
cmp
mov
add
jnp
push
dec
cmp
in
pop
cmpb
sahf
decl
in
add
push
repz
lods
mov
lock
sub
scas
xor
and
ljmp
inc
aas
or
and
cmc
and
mov
dec
sbb
rolb
shll
data16
dec
add
mov
decl
aas
in
roll
xorl
cmp
fistpll
mov
decl
mov
lret
popf
and
add
in
out
push
mov
out
pop
jg
jo
lret
and
mov
movsb
jge
mov
xor
sti
sub
decl
or
aaa
mov
je
js
jne
push
ds
cmpsb
or
mov
pushf
lret
sbb
push
inc
lret
movnti
xor
les
or
jmp
ds
repnz
jmp
nop
xchg
mov
decl
or
add
mov
cmp
sbb
aad
daa
loope
rcrl
call
loop
cmp
cmp
xchg
aam
mov
push
or
out
dec
jmp
adc
mov
push
fstps
mov
pop
fsubrl
rclb
and
dec
inc
cmp
jg
sbb
dec
mov
call
push
movsbl
and
out
lods
mov
xchg
xor
pop
or
shl
inc
popa
arpl
mov
dec
mov
pop
cmp
add
fstl
pop
adc
in
pop
adc
aad
repnz
lcall
data16
xchg
rcl
jge
mov
cltd
jae
gs
loopne
lock
ret
icebp
lcall
cmp
out
fs
jecxz
leave
stos
shrl
sbb
lock
xchg
push
test
push
adc
clc
call
inc
mov
icebp
dec
xchg
push
js
aaa
and
out
cs
gs
popl
nop
mov
dec
inc
shrb
stos
pop
cmp
daa
pop
scas
dec
insl
push
sub
cs
jg
ficomps
stos
cwtl
aas
pushf
jae
in
pop
push
lahf
sbb
sbb
or
pop
inc
lcall
cmp
pushf
cltd
inc
subl
pop
or
popl
mov
outsl
mov
test
jno
ds
jnp
arpl
jbe
test
test
call
movsb
mov
fists
xchg
fiadds
mov
pushl
mov
xor
call
pop
fsubrl
leave
insb
rcrb
xlat
loope
xchg
int
mov
sbb
dec
rcrb
lret
jmp
leave
in
add
fildll
push
mov
mov
jecxz
pop
mov
out
jge
inc
cmc
popl
ret
mov
mov
jecxz
ljmp
sti
scas
sub
decl
or
inc
xchg
ds
cmp
in
mov
rorb
popf
les
cld
fldenv
call
ret
fmull
mov
add
add
xor
les
test
rcl
mov
pop
jle
mov
mov
xchg
jl
cmp
or
dec
adc
and
sbb
dec
add
fadds
mov
ret
outsb
ror
sti
lcall
arpl
inc
adc
ror
lsl
cmpsl
push
inc
jae
in
das
add
cmp
ljmp
incl
pusha
pop
jp
addr16
add
je
loope
loope
mov
sbb
inc
push
jae
pop
cmpb
les
ja
mov
xchg
inc
xchg
pop
in
sbb
push
sarb
pop
aas
fldl2e
cmc
jle
in
cmp
subb
sub
andb
xor
mov
ljmp
and
jle
clc
and
test
sbb
xor
xor
adc
pop
fdiv
decl
mov
repz
mov
adc
sub
xchg
sub
fbld
cld
jmp
ret
mov
sbb
mov
loopne
bound
es
in
lcall
shll
xor
rolb
mov
bnd
cmc
mov
sbb
push
lods
mov
jmp
mov
mov
xlat
loopne
inc
inc
fstpl
ss
bound
cmp
decl
call
aad
ljmp
inc
inc
fisubl
add
call
inc
mov
out
lret
movsb
adc
inc
push
aaa
subb
xor
jnp
mov
frstor
push
imul
sub
in
or
pushl
add
cmpsb
pop
fmull
stos
rcrl
dec
cmp
pop
sbb
loopne
cli
mov
mov
push
sub
mov
push
aam
mov
shl
rcrb
out
cwtl
or
add
decl
sbb
ffreep
dec
mov
stos
call
mov
sub
decl
cmp
ds
sarb
adc
adc
xchg
test
push
xchg
pop
hlt
call
mov
cld
es
imul
jg
inc
adc
mov
mov
adc
pop
cmp
push
cwtl
lret
lods
mov
and
push
pushw
sub
lret
movsl
dec
cmpsb
push
notl
imul
jmp
xchg
and
popf
mov
test
imul
ret
shl
je
jns
xor
loope
sbb
es
loope
mov
aaa
xchg
js
inc
das
int
pushl
jns
push
adc
int
and
imul
inc
sbb
jnp
out
lods
out
jp
loop
fwait
push
clc
rcrb
std
jmp
mov
das
dec
int
mov
out
loope
jo
xchg
int
call
scas
sar
jmp
cmp
stos
insb
jmp
addr16
iret
mov
inc
mov
loopne
mov
mov
test
loope
jb
jecxz
nop
int
lods
enter
pop
adc
and
mov
and
into
push
jp
fmul
mov
sahf
xor
call
imul
das
fnstenv
adc
add
mov
dec
mov
push
mov
enter
out
or
dec
inc
xchg
or
fimull
mov
jmp
jbe
lahf
dec
xchg
cwtl
jbe
aam
adc
sub
and
cmc
lret
cli
test
lock
ljmp
ret
xchg
int3
sbb
outsl
add
ss
sub
into
ljmp
mov
inc
and
cltd
jl
je
into
xchg
push
sub
cmpl
inc
cmp
pushl
xlat
adcb
popf
mov
dec
mov
pop
sub
sti
mov
pusha
call
das
fdivl
jecxz
dec
and
mov
imul
outsl
gs
pusha
fisubs
ss
pop
mov
jge
mov
inc
aas
sub
add
pop
stos
shrl
mov
jp
push
sbb
lret
repnz
mov
clc
outsl
or
arpl
jle
mov
decl
jns
jns
fisttps
pop
cmpsl
sbb
mov
leave
mov
inc
sti
or
icebp
fldcw
dec
push
sahf
into
out
shrb
pop
in
adc
cmc
or
ljmp
or
pop
ss
in
in
xchg
or
adc
in
jmp
fstpt
jle
add
pop
lods
sub
mov
ret
pushf
xlat
popf
jns
in
mov
jp
fisubrl
lcall
lods
fistpll
mov
pop
cmp
movsl
leave
sub
nop
push
decl
mov
std
sbb
test
insl
pusha
or
xor
push
jle
or
movsb
xchg
cld
icebp
aaa
and
add
out
dec
mov
push
add
lods
add
dec
loope
or
cmp
add
push
shll
xchg
cs
xchg
mov
fdivr
mov
cwtl
sub
fstpl
and
ret
fwait
dec
cwtl
lret
sti
aaa
repz
lahf
push
mov
aas
movsl
push
sbb
in
jns
push
pushl
push
sub
push
jnp
push
ljmp
xor
jg
ljmp
in
cmp
xchg
cld
mov
ljmp
iret
pop
ja
mov
call
push
inc
enter
xor
pop
or
inc
jp
pop
cmp
jnp
out
jle
push
fstl
push
xor
pop
inc
jbe
xchg
subb
sbb
add
xor
pushf
sub
jbe
cli
pushf
sub
dec
sub
movsb
in
lahf
gs
aas
jecxz
test
call
pop
cmp
inc
mov
pop
dec
push
cmpsl
sahf
xchg
xadd
pop
xor
adc
decl
bound
stc
filds
loop
lods
push
xor
js
add
mov
scas
pushl
jno
mov
sarb
xlat
or
push
in
cld
pop
test
loop
sbb
ja,pt
jmp
ja
mov
mov
jb
in
subl
shrb
push
cmp
and
xchg
adc
testb
loop
addw
jg
inc
mov
ss
jle
jne
or
jle
mov
sub
cmpsb
rcll
je
inc
gs
or
mov
adc
sub
push
cltd
scas
cli
xor
inc
xor
inc
lods
pop
push
scas
sbb
or
incl
cmp
iret
es
fstpl
rorl
imul
mov
cmp
jle
or
incl
ret
shr
mov
cltd
and
cmp
or
mov
mov
mov
lcall
retw
lret
and
or
mov
push
jecxz
cs
hlt
mov
imul
bnd
xor
lret
cld
pop
ds
sahf
jg
stos
shll
push
outsb
iret
and
inc
and
arpl
pop
sbb
loope
cmp
jmp
dec
mov
aas
push
push
aam
cmpsb
and
addl
enter
adc
mov
push
and
in
sbb
ret
pushl
and
pop
jnp
dec
je
cmpb
inc
movsl
cmpsl
test
enter
sbb
xor
aad
push
dec
xchg
xchg
xchg
push
push
or
out
insl
jg
test
sub
jne
call
add
lahf
add
xor
and
jg
and
dec
mov
loope
xchg
add
or
andb
les
fdivs
xchg
lcall
dec
and
out
repz
pushf
jl
test
sub
test
jbe
pop
cwtl
aas
data16
cmp
lods
dec
inc
in
stos
mov
push
adc
adc
or
and
repnz
and
jg
lcall
pop
cmc
adc
out
mov
lea
movsl
iret
ss
aad
call
fdivrp
jb
enter
inc
xchg
rolb
in
jle
rolb
leave
sub
pushl
rorl
sub
fldt
cmp
adc
call
or
mov
dec
jmp
std
repz
nop
and
xor
sahf
mov
jmp
push
mov
or
mov
xlat
cmp
orl
jg
cmpsb
mov
aam
pop
jle
push
add
out
xor
decl
lds
adc
sbb
mov
dec
pop
lret
add
push
push
xchg
sub
js
xchg
xchg
push
lret
push
dec
dec
add
pop
mov
mov
or
mov
lds
lock
adc
mov
ds
dec
dec
sub
popa
sarl
pop
mov
mov
mov
dec
repnz
cmp
mov
sti
inc
fdivl
sti
jmp
mov
pop
sub
cld
loope
xchg
outsb
xchg
inc
call
xlat
or
lcall
ja
xchg
mov
lock
in
xchg
inc
sub
xchg
pop
xchg
iret
pop
dec
dec
lock
push
lcall
sub
add
adc
into
xchg
pusha
jle
pop
sahf
inc
jae
jb
fsts
filds
pop
cmp
sbb
sbb
pop
dec
outsl
clc
cld
pop
xor
cmp
mov
stos
test
lahf
sub
sub
push
mov
out
xchg
dec
mov
loope
cmp
addr16
or
movsl
pop
outsb
pop
and
xlat
stos
fcomp
cmc
call
jecxz
lret
and
add
mov
push
sti
stos
sarb
mov
decl
add
adc
out
js
add
mov
push
adc
jp
bound
mov
jg
sarl
inc
pop
scas
xor
or
mov
jmp
jo
mov
lahf
into
mov
out
leave
sbb
fmull
inc
cmpsb
outsb
cmp
leave
lret
jmp
push
ret
mov
ja
int3
je
jbe
jmp
mov
pop
movsl
sti
rcll
daa
adc
stc
repnz
lods
and
mov
lcall
mov
mov
call
push
hlt
or
frstor
je
incl
mov
push
xlat
push
sub
insl
or
xchg
in
nop
cli
ja
pushl
xor
add
nop
lods
data16
loopne
pushf
test
loopne
dec
mov
jae
mov
pop
xchg
pop
das
cwtl
into
pop
mov
dec
adc
cmc
push
sub
mov
call
in
mov
es
push
cmp
loope
andb
gs
adc
mov
pop
cmc
push
adc
inc
or
and
hlt
add
fsubr
xchg
and
mov
dec
scas
decl
outsb
imulb
cmp
mov
xchg
repz
fcmovne
cmc
dec
ret
and
call
add
xor
ljmp
decl
sbb
scas
stos
lahf
dec
into
cmpsb
mov
and
jg
sbbb
out
inc
lock
sub
ret
int
mov
lods
xlat
jecxz
dec
decl
xor
ss
xchg
sub
imul
and
mov
jecxz
pusha
adc
inc
movsl
enter
mov
cmp
xchg
add
enter
adc
jg
and
pop
fmull
cs
mov
push
outsb
stos
mov
dec
fdivl
pushl
scas
fwait
cmpb
mov
enter
xlat
js
test
bswap
inc
cmpsb
dec
inc
cmp
push
andb
das
mov
insl
iret
xchg
push
js
pushf
aaa
pop
out
ret
inc
jns
jp
xchg
std
adc
inc
mov
jl
add
loop
inc
sbb
ds
popf
inc
xor
jmp
mov
pop
pop
dec
das
lcall
js
leave
cmp
popl
aaa
std
jmp
pop
stc
or
xorl
pop
ljmp
jne
jnp
sahf
movsl
mov
mov
insl
mov
or
jno
pop
decl
mov
lcall
dec
jns
aam
push
mov
decl
xchg
lds
out
jmp
lods
pusha
scas
mulb
inc
mov
dec
shlb
cmpsb
pushl
ss
lahf
fldlg2
cltd
cmpsl
lock
js
stos
inc
repz
insl
lds
stc
loopne
ret
lcall
je
mov
xlat
dec
in
rclb
out
mov
inc
fsubrs
lret
sbb
lret
mov
cmpsb
mov
inc
and
loop
cmpb
xor
fnsave
sbb
sbb
mov
pop
aam
jno
sbb
movsl
add
std
jmp
and
rorb
ret
xchg
push
jbe
pop
sub
push
inc
les
jge
adc
jae
roll
inc
sbb
and
inc
add
xor
inc
stos
nop
xchg
loop
pushl
sbb
push
enter
and
stos
jg
pop
adc
mov
adc
xor
in
lcall
pushf
push
inc
xor
lds
es
dec
xchg
pusha
xchg
stos
push
popw
aad
xchg
push
mov
aad
mov
adc
sbb
je
enter
pop
inc
mov
jne
ljmp
or
jp
push
pop
mov
jl
and
sbb
pop
enter
jnp
test
lcall
mov
in
hlt
push
jecxz
pop
jecxz
out
bound
outsb
pushf
nop
call
dec
push
mov
jae
dec
int
mov
hlt
stos
xor
test
push
push
sbb
ds
jmp
rcll
jo
xchg
lds
aas
nop
mov
sahf
lods
hlt
in
mov
mov
xor
push
ljmp
outsl
pop
pop
sub
dec
dec
stos
into
cmp
cltd
outsl
sbb
out
test
xchg
pop
rcr
add
je
add
mov
cs
int3
push
daa
iret
pop
pop
clc
xchg
pop
aam
pop
xchg
cltd
dec
push
and
mov
xorl
and
dec
fnstenv
in
inc
cmp
jo
mov
sbb
adcl
dec
loopne
add
div
fwait
fildll
mov
repnz
stc
xchg
fstpt
lea
lcall
pop
xchg
lcall
mov
pop
sub
in
mov
sbb
cmp
pop
cmp
lock
lcall
pusha
add
leave
test
outsb
cmp
icebp
divb
xchg
pop
aam
xor
pop
mov
sbb
cmp
movsb
scas
mov
or
fsubs
pop
lret
cmp
cmpl
sub
leave
fdivrs
roll
scas
mov
in
add
out
ja
sbb
filds
ret
push
or
jne
hlt
cs
cwtl
xchg
inc
jg
mov
push
pusha
mov
xor
fisttps
int3
fwait
jno
mov
push
mov
ja
ljmp
daa
jp
push
adc
mov
aas
sub
mov
mov
rcrl
leave
movsb
ljmp
mov
jne
cltd
mov
inc
stos
inc
rcrl
into
push
sbb
fs
aaa
dec
pushl
sahf
adc
pop
pop
sub
cmp
cmp
pop
lods
inc
xchg
hlt
sti
pop
repz
mov
jne
mov
inc
fidivl
mov
jmp
aaa
fwait
in
inc
cmp
punpckhwd
vshufps
js
cmpsb
add
popa
jg
cwtl
out
cli
loope
xchg
ja
mov
and
scas
imul
pop
pop
jg
lea
cmpsl
dec
sbb
jnp
pop
fwait
popf
loope
mov
add
mov
enter
fcmovne
mov
ljmp
cmp
les
les
push
out
cmpsb
int3
add
mov
sar
call
incb
lret
fadd
or
int
mov
out
ja
inc
mov
xor
xor
pop
jnp
les
daa
lock
cmc
outsl
leave
aam
push
mov
mov
aam
pop
jecxz
dec
repnz
push
fs
xchg
sub
adc
decl
jecxz
imul
sti
sbb
rorl
cmp
pop
rorb
pop
daa
inc
dec
hlt
xor
xlat
fisubl
call
loope
mov
adc
insb
mov
mov
loopne
inc
jne
sbb
je
push
push
pop
pop
out
jmp
dec
jne
pop
pop
pop
jg
das
xchg
cmc
fs
outsl
and
dec
mov
lds
int3
jg
imul
add
and
mov
out
fstl
sub
ljmp
mov
addl
jb
xor
ss
or
mov
fcmovnb
cwtl
sarb
call
gs
daa
leave
out
mov
jo
test
add
pushl
mov
xor
lahf
and
push
scas
sub
addr16
cwtl
xlat
test
xchg
inc
xor
mov
call
jmp
sti
mov
adc
add
inc
cmp
lds
add
call
insl
fcomp
or
jl
dec
shrl
push
mov
pop
pop
data16
or
jg
mov
jecxz
dec
pop
or
daa
int3
lock
icebp
lods
xor
xor
loope
mov
sarb
popf
in
pusha
ja
incl
push
popf
jmp
jecxz
add
and
decl
lret
loop
rcrl
cmp
sbb
mov
std
loop
xorb
imul
cld
ficoms
ret
addr16
out
cmc
out
mov
dec
mov
push
xchg
incl
cld
fstps
rol
mov
add
frstor
sub
sub
pop
cmc
lcall
pop
js
rol
adc
es
lahf
rclb
xchg
cmp
fcmovnbe
xor
jg
decl
xchg
bnd
xchg
mov
mov
push
jbe
fists
inc
call
pop
dec
int
adc
mov
xlat
push
repnz
nop
subl
orl
ljmp
scas
sbb
push
scas
push
or
xchg
aas
sub
xchg
mov
enter
pushf
cmp
add
int
vpcmov
and
push
fcomps
cwtl
adc
fdivr
pushl
hlt
int3
adc
xor
add
xor
sahf
xor
or
xchg
sarl
fsubp
mov
jl
lcall
mov
cs
inc
mov
insb
xor
stc
or
or
xchg
ljmp
adc
mov
add
pop
movsb
cmpsl
mov
xor
sbbl
xchg
jg
fwait
incl
jno
ds
dec
push
or
scas
jecxz
insl
js
jo
xchg
jp
scas
lret
into
add
ljmp
or
dec
xchg
push
stos
es
mov
repz
js
hlt
mov
cmp
and
rcr
push
mov
jno
popf
mov
cmp
mov
push
adc
xor
fwait
xchg
into
rcr
dec
stc
scas
repnz
leave
pop
mov
xlat
push
pop
mov
ljmp
lret
push
push
shll
ret
out
adc
enter
das
cmp
call
out
in
pusha
mov
xor
repnz
push
dec
imul
xchg
xchg
sub
ljmp
mov
cltd
pop
test
aas
in
xchg
jecxz
inc
enter
hlt
lcall
xor
push
inc
inc
jae
mov
xchg
xor
mov
inc
cmp
mov
ret
aam
jecxz
adc
xor
sub
call
xchg
jns
inc
and
pop
ss
movsb
aam
out
js
add
decl
daa
jne
xchg
cmpsb
lahf
jae
inc
mov
loope
mov
xor
jmp
in
mov
adc
adc
sub
or
ss
mov
mul
fdivrl
mov
mov
mov
pop
cli
adc
pop
dec
push
xchg
inc
scas
leave
test
ljmp
mov
das
cmp
ret
lcall
cs
jo
inc
mov
ja
ljmp
jne
test
jmp
mov
mov
stos
push
cmp
incl
add
test
dec
dec
push
sub
dec
and
xchg
xchg
out
popf
stos
jmp
fisubl
popa
mov
test
sub
jne
repnz
pop
jmp
xor
cld
lcall
fstpt
cmp
pop
mov
cli
push
cld
push
mov
mov
mov
ja
fbstp
xor
pop
sbb
mov
pop
das
call
xchg
sub
pushl
sbb
aad
out
ret
subb
jge
sbb
bound
hlt
push
decl
sub
cmc
jle
xchg
jo
push
xor
add
mov
mov
cmpsl
cmpsl
add
jmp
pop
int
jmp
jmp
shll
test
loop
arpl
sub
adc
or
loope
clc
shll
add
call
dec
arpl
add
out
sbb
mov
or
fists
out
adc
popl
cmp
add
mov
and
pop
sub
rclb
sti
popa
mov
arpl
mov
mov
shll
mov
bound
leave
sub
mov
adc
pop
sahf
in
incl
cld
fisttps
ds
stc
repnz
ss
push
adc
cmpsl
lds
sub
enter
dec
cltd
inc
lods
mov
arpl
mov
xchg
das
push
mov
data16
and
fildll
mov
shll
hlt
in
test
rclb
mov
test
daa
sub
nop
call
lcall
pop
stos
out
daa
stc
rcll
mov
cmc
rcll
cmp
jg
es
aaa
pop
mov
add
cmpsb
cmp
pop
bound
and
lcall
pop
fwait
mov
push
stos
mov
jmp
mull
pop
lcall
mov
cwtl
fsubs
in
lock
push
or
stos
ss
pop
adc
enter
ljmp
das
popf
push
adc
fcmovnbe
and
adc
les
out
inc
es
jp
sub
incl
xchg
sub
push
pop
mov
stos
mov
jne
mov
hlt
scas
nop
jns
test
ljmp
enter
xchg
test
sbb
icebp
lahf
pop
decl
xor
jle
fwait
ljmp
jns
jb
adc
stos
dec
add
fidivrs
sub
ljmp
mov
dec
sub
pusha
or
sbb
push
fldenv
xchg
fdivrs
xor
subl
std
decl
test
enter
and
jge
rcll
arpl
mov
mov
and
scas
sbb
xchg
inc
stos
dec
div
jle
add
cmp
test
je
pop
aaa
push
mov
sti
jecxz
jmp
cmc
adc
negl
sahf
push
std
dec
adc
sub
mov
call
test
vsqrtpd
inc
fbstp
pop
lea
mov
and
add
or
lock
shrb
scas
sti
ret
sbb
pop
jmp
push
lahf
mov
push
sub
sbb
push
mov
xchg
mov
push
ljmp
pushf
jmp
mov
pop
dec
xlat
and
pusha
dec
add
cld
and
js
jmp
mov
inc
dec
jg
int3
dec
lods
pop
or
call
dec
jnp
cltd
jb
movsl
aam
inc
xchg
jmp
mov
pop
rclb
fs
mov
icebp
incl
mov
sbb
inc
fstl
pushf
and
or
mov
adc
mulb
cs
push
sbb
bound
sti
mov
in
test
pop
iret
cld
call
mov
in
lods
clc
mov
pop
ljmp
adc
add
mov
aas
sahf
and
pop
scas
xlat
incl
mov
jbe
shrb
mov
push
push
push
sub
hlt
aas
sub
and
enter
sub
inc
inc
hlt
xchg
mov
popa
repnz
in
inc
and
inc
mov
sub
mov
pushl
push
push
sbb
and
fstpt
xchg
xchg
int3
and
movsb
dec
mov
sub
jmp
dec
pop
movsb
stc
mov
add
or
mov
mov
add
jecxz
pushl
pop
pop
xor
mov
push
jo
into
pusha
jecxz
cwtl
push
push
stos
scas
sahf
mov
add
fistps
inc
xor
loop
mov
jg
or
cmpsl
out
repnz
popa
adc
mov
cmp
dec
js
decl
sbb
cmp
xchg
xchg
test
pop
lret
rcrb
mov
js
sub
adc
sbb
repnz
xlat
adc
pop
lcall
hlt
push
and
dec
sub
sahf
cmp
out
pop
mov
cmp
out
add
xchg
dec
decl
or
add
sbb
ja
sub
dec
fwait
fs
jmp
cmp
sub
addl
fbld
adc
jo
fcomp
pop
sbb
add
lret
mov
xlat
dec
rclb
dec
clc
mov
cmpsb
jns
lock
mov
xor
pop
or
ljmp
push
das
cmpsb
xor
arpl
jp
cmp
ret
or
std
fwait
cmp
mov
push
popl
popf
fimuls
mov
xor
fstps
orb
pop
jns
or
rcll
jecxz
shlb
aam
es
and
imul
in
inc
jbe
testb
call
mov
push
jmp
push
dec
adc
sarb
imul
sbb
mov
stos
lcall
jg
cmpsb
js
sub
or
clc
inc
outsb
mov
mov
js
inc
fistpl
in
adc
iret
add
pop
jno
popa
and
xor
incl
adc
stc
mov
nop
mov
lahf
in
test
insb
pop
pushl
inc
jnp
dec
das
test
and
fcompl
popa
xchg
aas
jns
pop
push
lret
rorl
push
incl
xor
mov
lcall
aas
fcompl
push
sarl
daa
insb
out
ljmp
push
pusha
out
loop
cmc
jae
addr16
jns
iret
cltd
lea
mov
adc
sbb
sbb
jmp
stc
xor
cltd
fldt
pop
and
sbb
and
and
pushl
push
shlb
mov
test
gs
cmp
in
fisttps
dec
cs
or
mov
lret
rolb
pop
daa
loopne
pushl
fadds
mov
adc
xchg
sti
dec
stc
push
sti
mov
mov
sub
call
ljmp
test
lea
stc
cmp
push
add
xchg
in
std
and
adc
aaa
decl
xchg
mov
mov
jo
mov
shlb
cmpsl
pop
sti
nop
sbb
mov
pushl
into
mov
mov
mov
int3
in
lcall
pop
imul
call
xor
mov
daa
mov
imul
cmc
push
jl
xor
testl
gs
aaa
in
add
std
cmpsl
adc
lea
dec
ja
cltd
scas
cmp
incl
lret
loop
out
lock
push
je
pop
sub
jo
sbb
aad
sbb
aad
ljmp
imul
adc
inc
or
scas
cs
jl
ljmp
inc
adc
xchg
mov
xchg
mov
jle
mov
jbe
sahf
jle
or
incb
cltd
movl
inc
into
add
shll
das
lcall
jmp
es
nop
insb
dec
roll
roll
mov
sub
in
cmp
into
pop
cmp
or
mov
sahf
dec
aas
jne
mov
neg
jmp
into
out
aam
decl
pop
sbb
dec
nop
out
push
mov
lcall
inc
out
sbb
mov
lcall
pop
stos
or
hlt
movsb
jbe
loope
lret
ud0
and
mov
andb
or
movsl
sub
addr16
cs
je
sub
inc
xor
popf
popf
xchg
jmp
xchg
inc
and
sub
mov
clc
push
jle
inc
lds
cs
lahf
mov
mov
jae
mov
shll
mov
daa
xor
repz
adc
sti
daa
orl
xchg
add
ljmp
jg
jg
jmp
jge
dec
and
sub
add
das
cli
ljmp
test
mov
push
test
mov
push
sub
aas
dec
call
fisttpl
lock
data16
xlat
mov
xor
movsl
ljmp
inc
jmp
and
jmp
lahf
pop
call
pop
pop
or
mov
sbb
nop
add
cld
pop
cmp
ret
roll
adc
add
jne
jmp
dec
pushl
mov
aas
rclb
xlat
inc
or
push
and
sub
inc
jnp
xchg
aas
mov
test
xchg
push
sub
sbb
adc
jnp
pop
jp
jmp
ret
jmp
je
data16
jbe
ret
adc
adc
lods
jae
in
cwtl
out
out
mov
inc
pop
in
add
mov
outsb
in
jge
cmpb
xchg
nop
shll
inc
ljmp
xchg
sbb
dec
stos
or
mov
iret
out
cmc
adc
add
cmpsb
lcall
and
add
xor
or
xor
nop
add
lcall
pop
cmpsb
inc
cld
pushf
mov
data16
lods
ljmp
xchg
inc
jge
push
mov
imul
enter
scas
cmp
frstor
fwait
jno
lock
jns
jmp
sti
xor
popa
cli
js
iret
mov
jbe
fbld
xor
jge
repnz
in
or
mov
insl
in
test
push
xchg
movsl
cmpl
inc
mov
jg
mov
fcomip
adc
dec
call
inc
cmp
fbld
stos
sbb
xchg
sbbl
call
dec
icebp
xchg
aas
movsb
repnz
cmp
ficompl
push
sbb
repnz
cmc
push
xchg
add
lods
mov
addr16
aad
stc
sbb
xchg
xchg
ja
jo
cmp
or
incl
sbb
lret
mov
pop
cli
and
lods
orb
and
into
out
mov
xchg
and
cmp
loopne
or
jmp
es
lahf
lods
add
data16
stos
mov
rcrl
ljmp
push
sub
hlt
xor
xlat
movsl
cmp
insb
mov
out
aad
gs
in
sar
rcr
ja
push
sub
xchg
mov
ret
test
jmp
fldcw
mov
lret
pop
cmp
mov
jnp
xorb
push
shlb
push
xchg
dec
sub
outsb
mov
in
push
push
push
xchg
out
fdivp
sbb
jne
mov
cmp
inc
fldenv
lahf
mov
xchg
ror
cmp
decl
repnz
jo
xchg
cmpsb
test
ljmp
ds
fstpl
imul
addw
ret
sbb
ljmp
xchg
adc
in
dec
rolb
jecxz
loope
xlat
adc
and
mov
mov
dec
xor
sub
sbb
add
ljmp
ljmp
inc
fidivrs
dec
lods
stc
dec
fldl
fdivrl
add
sub
ljmp
decl
out
sbb
push
or
in
and
xor
jnp
push
inc
push
call
add
shll
push
add
mov
cmp
or
divl
aam
push
daa
lcall
add
gs
inc
mov
fsubr
cmp
pushl
repz
cmc
inc
es
setg
lods
jo
das
and
inc
movsl
cmp
jnp
dec
rcrb
jmp
lahf
push
xchg
ja
pusha
sarl
add
jno
push
js
rcrb
mov
aad
mov
dec
and
mov
push
add
sub
es
add
sbb
incl
jo
ret
imulb
cs
push
int
mov
and
mov
jp
enter
pop
sahf
dec
out
test
in
mov
jg
inc
dec
push
pop
sub
pop
sarb
xchg
ss
xor
decl
sbb
mov
popf
call
push
and
push
or
push
mov
fists
mov
adc
incl
je
into
xlat
xor
scas
outsl
mov
lods
sbb
mov
outsb
mov
jmp
sti
ljmp
in
add
push
aaa
adc
and
lret
aad
stc
sbb
rolb
stc
lahf
in
mov
shl
andb
pop
leave
inc
sbb
mov
mov
ja
jg
mov
inc
mov
inc
inc
pop
aaa
ret
sbb
jg
sbb
call
cmp
adc
jae
cmp
dec
test
mov
aas
or
jl
mov
push
lods
inc
mov
andl
pop
mov
xchg
divb
call
out
fcomps
aas
sahf
insl
xor
cwtl
jnp
imul
xchg
jp
out
sbb
cli
imul
mov
and
xor
lods
or
xor
int3
imul
insb
and
sarb
icebp
sti
jo
cmpsb
out
jp
or
in
jl
adc
dec
stos
clc
cs
insl
cld
lcall
cmpsb
or
mov
cli
arpl
hlt
dec
mov
mov
fisttpl
lahf
push
mov
mov
dec
push
adc
es
clc
aaa
xchg
push
jns
dec
mov
xchg
cmp
ljmp
push
jle
in
or
clc
fmulp
pop
testl
js
pusha
and
mov
xlat
movl
loopne
gs
xor
push
pop
lahf
test
inc
fnsave
outsl
incl
sbb
cmp
mov
xlat
or
sub
aas
les
adc
push
popf
add
loopne
lcall
movsl
mov
cs
cs
inc
push
lods
sbb
es
lcall
xchg
adc
push
xchg
mov
and
in
ljmp
fistl
popa
in
jbe
adc
jmp
pushl
sbb
xlat
adc
popf
sbb
popa
pop
pop
jne
push
das
sbb
cltd
lcall
imul
jecxz
lcall
xchg
mov
int
inc
in
push
ja
es
lcall
jg
xchg
rclb
arpl
subb
adcl
xor
jle
pop
jno
ja
adc
in
insb
xor
mov
ljmp
sti
jne
loop
xor
test
mov
test
xor
adc
pop
and
js
jge
dec
dec
xchg
sub
xchg
inc
loope
pop
aad
jg
dec
xchg
rcll
mov
jge
testl
dec
popa
cmpsl
adc
add
aad
adc
pop
push
les
test
mov
jne
pop
xorb
pop
xchg
xor
push
sbb
insb
dec
iret
subl
incl
mov
cli
pop
jg
push
xchg
push
dec
addr16
jb
sub
sub
ja
stos
loope
add
in
sahf
cwtl
mov
loop
daa
sbb
cmp
inc
sub
stos
sub
mov
call
mov
xor
mov
add
sbb
repz
xchg
fiaddl
mov
pusha
movsb
dec
and
cmp
insl
cmc
mov
sub
cmp
jecxz
arpl
aaa
jo
lret
loopne
sahf
add
xchg
lods
add
call
cld
mov
daa
rol
lcall
loope
pop
test
jle
stc
je
pushl
std
decl
mov
dec
xor
psubd
ret
movb
imul
loope
dec
mov
or
imul
and
dec
leave
add
arpl
jle
jmp
out
sub
mov
pop
jbe
or
pop
test
inc
push
mov
repnz
and
lock
subb
adcl
shrl
push
inc
or
jae
mov
enter
rolb
fistps
jge
dec
jmp
pop
or
push
popaw
push
popw
adc
pusha
outsb
and
xor
sbb
xchg
jg
push
adc
dec
jmp
in
sub
sub
mov
add
stc
aam
push
jno
mov
mov
sbb
int
xor
push
cmp
xchg
mov
lds
xchg
out
add
ficoml
mov
lods
dec
fwait
es
aad
lret
ret
pop
fnsave
in
inc
movsb
in
sbb
dec
sub
mov
or
leave
call
jae
rclb
mov
dec
mov
fs
jae
insl
jnp
out
hlt
lea
ss
test
add
rclb
push
or
cmp
js
jne
pop
popf
add
mov
ljmp
dec
sbb
mov
mov
mov
xchg
dec
dec
lret
xchg
push
out
adc
pop
inc
ss
push
nop
jg
adc
cmp
add
push
negl
incl
mov
xchg
xor
stos
push
jl
xor
dec
pop
cld
stos
mov
jl
stos
les
lcall
mov
xor
inc
call
imul
pop
mov
addr16
jecxz
daa
add
addb
ljmp
lods
int
inc
test
mov
sub
push
push
sbb
push
jg
cltd
mov
and
xor
cmpsl
cmp
ja
jmp
cmp
mov
and
lahf
in
inc
and
jbe
std
dec
out
jle
xchg
xchg
movsl
mov
push
imul
add
insl
cmp
ret
movsl
hlt
push
aaa
mov
mov
jmp
rcr
pusha
push
rcll
sbbl
cmp
loopne
popa
call
jb
sbb
insl
inc
popa
stos
adcl
sbb
out
fwait
dec
cld
ljmp
lods
mov
rcll
push
mov
out
call
mov
rorl
insl
cmp
sahf
lods
aad
adc
add
in
mov
pushf
dec
jae
push
xchg
icebp
incl
xchg
es
xchg
ud1
sbb
sti
jno
pop
mov
dec
ficomps
pop
daa
out
mov
mov
jbe,pt
ror
fucom
and
inc
test
and
adc
in
or
mov
pushl
scas
push
aam
repz
insb
dec
xor
test
enter
aaa
sbb
stc
mov
lcall
out
xchg
pop
xchg
push
sbb
and
pop
jle
scas
std
adc
js
loope
jge
jmp
add
push
push
dec
inc
xlat
mov
sbb
call
inc
pop
adc
andb
mov
mov
lret
ljmp
mov
repnz
in
inc
clc
dec
or
sub
inc
mov
cmpsb
int
ret
ret
call
mov
arpl
xchg
xor
xor
push
sub
ljmp
int3
out
xor
sahf
cmp
sbb
and
ss
ja
lea
dec
pop
call
decl
sbb
bound
scas
imul
add
ja
push
pushf
cltd
add
cmp
pushl
sti
mov
negb
clc
mov
sbb
dec
or
into
daa
push
enter
incl
or
fdivrs
hlt
fisttps
xchg
pop
xchg
or
jno
cld
rcrb
xchg
aaa
sbb
in
add
sbb
aaa
push
lahf
or
and
mov
es
out
testl
pop
mov
sbb
lret
call
jbe
push
sub
icebp
jge
mov
adc
push
mov
enter
xor
test
mov
and
adc
pop
and
mov
pop
icebp
jmp
repnz
lock
lret
andb
pop
or
jbe
leave
xor
mov
pusha
mov
xor
std
xchg
mov
jns
mov
jmp
rolb
loope
mov
scas
gs
divb
fcomps
out
imul
test
push
cmp
jg
andl
inc
lcall
out
inc
fbld
call
inc
sub
imul
call
cmpsb
enter
imul
mov
sub
imul
jnp
mov
pop
sbb
sub
jge
into
js
ljmp
lahf
ja
sti
adc
lea
mov
push
adc
or
lods
cmpsb
clc
jmp
aas
in
fists
adc
movsl
xor
out
xchg
add
adc
out
incl
xor
pushf
hlt
in
cmp
aas
mov
jmp
or
xor
and
inc
cmp
and
mov
call
mov
pop
aam
cli
pop
push
sahf
ret
xor
dec
mov
iret
push
cmp
jnp
add
fcompl
push
mov
dec
data16
jmp
lret
adc
inc
cmpsl
fcoml
lock
jmp
xchg
adcl
jg
pushl
adc
sub
push
in
push
mov
enter
ja
shll
inc
jns
js
and
mov
pop
push
dec
fs
insl
inc
pushf
dec
mov
fdiv
sbb
or
inc
pushl
pop
pop
aam
xchg
out
adc
or
test
dec
or
ljmp
or
fidivs
sub
cmp
xor
push
or
stc
pop
das
pavgw
fistpll
ljmp
leave
jl
sbb
mov
cmp
lds
dec
add
scas
rcll
ljmp
nop
loopne
jl
mov
ret
sub
or
flds
into
enter
shlb
call
loopne
cld
popf
nop
lcall
jl
sub
out
sub
incl
cmp
faddp
pop
add
mov
fnstenv
stc
sarb
data16
mov
mov
sar
sub
push
int3
mov
mov
out
test
ljmp
or
jp
sbb
decl
clc
mov
mov
mov
dec
frstor
xor
pushl
sbb
mov
arpl
sarb
cs
addr16
mov
sub
call
sbb
icebp
xor
dec
rcrb
inc
cmp
dec
fdivl
jg
fdivrs
sahf
inc
shrb
nop
in
mov
jbe
mov
add
fisubs
inc
mov
decl
arpl
xchg
jo
mov
addl
lcall
adc
xchg
add
xchg
pop
std
cwtl
insl
aaa
out
or
mov
push
movsl
or
add
inc
or
sub
iret
adc
ljmp
inc
jge
ja
shr
insl
pop
sysenter
jmp
xchg
ljmp
sbb
sub
inc
add
jecxz
mov
call
adc
das
dec
mulb
movhps
cmp
fs
pop
lret
jl
test
data16
fdivs
pop
mov
ss
push
push
cwtl
stc
movsb
leave
jecxz
pop
out
pop
sbb
inc
or
cmp
gs
mov
mov
adc
decl
push
mov
push
insb
in
xchg
xchg
out
push
add
popf
es
jmp
sub
and
push
add
js
movsb
mov
ljmp
push
loope
push
cmp
add
in
jg
cmp
jg
call
fs
call
cmp
push
mov
pop
add
adc
test
sub
pop
popa
mov
pushl
ds
mov
xor
pop
jmp
mov
inc
cmp
call
sbb
daa
jecxz
fcmovnb
stos
shrl
ja
and
pop
sbb
scas
enter
xchg
and
sbb
into
sbb
add
stos
dec
fdivrs
push
xor
jg,pt
xchg
cmp
mov
jge
ror
out
dec
sti
and
inc
outsl
sbb
dec
pavgb
pop
mov
ss
aas
imul
xchg
and
lahf
and
fcmovnb
daa
mov
scas
pop
jmp
repz
data16
dec
ds
push
jg
and
mov
adc
imul
pop
xchg
jp
mov
ds
dec
mov
ljmp
shlb
les
je
aam
movsb
shll
popa
sub
icebp
jmp
pop
imul
sub
sbb
mov
fildl
pop
orl
pop
insb
loopne
test
push
scas
repnz
pop
lcall
cli
daa
int3
xchg
incl
sbb
lcall
nop
or
out
add
fidivl
lods
call
call
cwtl
insb
aaa
sti
cmc
insl
aaa
or
sub
add
or
incl
insl
arpl
cmpsl
cltd
sub
insb
rorb
mov
popf
insb
xchg
dec
rorl
incl
xor
out
jo
push
test
mov
push
mulb
mov
cmp
and
lock
inc
jl
ret
xor
push
sbb
scas
pop
xor
xlat
enter
jae
xor
adc
sti
sub
lcall
mov
decl
inc
fisttpl
popa
dec
push
cmp
cmpsl
ljmp
jb
rcll
push
stos
mov
data16
xchg
cmc
jmp
cld
jp
nop
mov
ljmp
cli
sub
jge
fcoms
dec
push
lods
xchg
incl
push
movsb
sbb
in
pushf
push
fisubl
popl
or
push
je
mov
jmp
fs
js
and
inc
mov
aaa
call
call
decl
outsb
sbb
pop
cmp
sub
out
add
sbb
repz
jns
pushl
orb
jno
jo
gs
fsubl
push
lods
adc
sbb
decl
aam
jmp
call
les
imul
xchg
jl
or
cmp
pop
push
sahf
pop
dec
inc
cmp
clc
test
xchg
decl
idiv
mov
jle
adc
add
fucomp
aam
out
mov
into
dec
pop
ficompl
ficompl
fs
imul
fcmovne
subb
pop
mov
aad
pushl
loop
ljmp
and
push
repnz
movsl
adc
inc
jge
mov
or
decb
push
into
and
mov
jg
mov
pop
js
out
out
xor
dec
sub
imul
xchg
mov
mov
enter
ja
cmp
push
outsl
js
mov
jle
inc
fadds
stos
pushl
pmuludq
cld
adcb
mov
jecxz
mov
sbb
cmpsl
inc
add
jg
rcr
cmpsb
cli
pop
subl
aas
jno
out
lahf
sbb
and
adcl
jg
rcr
jmp
repnz
movsl
scas
push
pop
ljmp
inc
fsubr
int3
out
lcall
call
jne
dec
shlb
addr16
loopne
shrb
out
sbb
push
and
sbb
jge
jns
ja
sbb
sub
cwtl
mov
push
jg
andl
fsts
ljmp
clc
jo
mov
rcl
fidivrs
mov
xor
scas
leave
out
popf
mov
ja
ljmp
imul
sub
loop
shl
add
or
shll
mov
imul
lcall
xchg
out
lcall
daa
adc
and
sbb
stos
js
ja
and
aad
jmp
pop
xchg
movsl
cmp
jg
jmp
cmc
add
xchg
pushf
dec
loop
xchg
fstl
or
cmp
test
jmp
jb
xchg
je
sbb
jp
xlat
movsl
jge
xchg
lcall
xchg
sub
add
cli
push
call
jno
lret
scas
mov
xlat
loopne
loope
lds
dec
mov
pop
xchg
cmp
dec
stos
sahf
pushl
xlat
shl
aad
mov
ss
mov
xchg
push
outsb
xchg
add
mov
in
pushl
pop
aam
aaa
decb
mov
sub
mov
aas
rolb
loopne
push
cmc
jl
mov
test
xor
aam
in
and
ljmp
pop
cmc
push
sbb
dec
lret
xlat
in
lret
outsb
cmp
dec
mov
dec
pop
ljmp
shll
dec
add
jmp
cmp
out
adc
lcall
mov
aam
jae
push
or
mov
mov
inc
call
mov
in
xlat
and
cmp
mov
scas
sub
pushl
dec
mov
cmpsl
add
push
sahf
jge
and
mov
mov
pop
loope
mov
mov
cld
xchg
lret
outsl
andb
dec
mov
jl
sbb
mov
loope
decb
and
pop
fistpl
ss
lcall
repz
push
jg
push
pop
jp
mov
jge
and
pop
std
dec
adc
sti
jnp
out
jg
mov
jmp
xchg
mov
push
push
mov
arpl
negl
movl
das
cwtl
cwtl
xor
sbb
in
jno
iret
mov
inc
das
loopne
mov
pop
pop
jmp
adc
inc
ret
mov
mov
push
sti
pop
and
xchg
or
dec
lock
mov
push
sub
pushl
push
xor
shlb
jl
sti
mov
fsubrs
xchg
lods
xorb
inc
mov
decl
inc
call
or
and
into
sbb
pushf
mov
ret
pop
adc
mov
lock
pop
mov
pushl
or
fiaddl
lds
inc
jecxz
or
ljmp
add
dec
fcoml
in
cltd
mov
ret
mov
xor
loop
xchg
decb
adc
popf
jg
scas
jne
decl
mov
test
int3
jae
ja
push
push
aas
enter
xchg
jb
in
sar
fstp
pop
adc
insl
mov
imul
test
adc
test
push
or
adc
sub
push
xor
movsb
jecxz
dec
sbb
mov
test
repz
xchg
pushl
mov
mov
push
xor
fcomps
iret
lods
dec
pop
inc
mov
int
and
call
cmp
push
test
push
push
leave
int3
std
push
std
and
adc
xchg
test
decl
push
jns
rcl
jmp
sahf
icebp
push
jg
js
jp
adc
movsb
pusha
in
mov
or
ljmp
imul
fadd
ljmp
sub
pusha
jle
cli
mov
jge
mov
or
in
dec
sub
fcoml
add
mov
mov
jle
mov
test
mov
push
stos
mov
das
out
inc
into
mov
mov
gs
inc
adc
adc
pop
hlt
mov
outsl
ret
and
addr16
mov
scas
mov
or
pushl
sbb
jnp
cmovno
into
sub
pop
jecxz
movsl
fsubrl
push
std
call
aaa
out
test
and
push
ret
and
cltd
insl
pop
aaa
or
mov
dec
js
ret
hlt
sbb
and
call
dec
sbb
ss
in
icebp
push
cld
mov
in
sbb
outsl
mov
jae
shlb
sar
test
iret
inc
jmp
movsb
sbb
mov
ljmp
xchg
and
jp
rorb
cli
sbb
movsb
mov
add
dec
xchg
loop
sbb
xor
cmp
popl
cwtl
sbb
ljmp
test
int
or
outsl
jmp
scas
dec
hlt
je
insb
out
mov
adc
daa
dec
xchg
add
popa
pushl
mov
xchg
jge
cmp
and
inc
xchg
jl
push
mov
pop
nop
xchg
cmp
xchg
test
push
idivb
fisttps
jg
dec
fs
xchg
sar
push
movhps
sbb
adc
adc
mov
inc
outsl
and
jae
pop
adc
inc
push
jg
test
iret
jg
pushl
bound
cld
loop
cmc
int3
cmpsb
test
mov
int3
sub
mov
popf
sub
out
push
test
sbb
inc
mov
mov
andb
out
add
adc
xchg
and
add
call
movsb
push
data16
adc
aad
xor
push
lahf
shr
mov
cltd
into
gs
xchg
adc
lea
add
push
adc
insb
pusha
and
xor
pushl
addr16
shll
add
fmull
das
icebp
xor
cmpsb
and
call
scas
mov
fucomi
jnp
outsb
adc
js
mov
sub
lret
lcall
mov
notb
jo
aas
adc
fdivs
jno
insb
inc
fwait
sub
aad
lea
jnp
imull
mov
fistpl
out
xchg
add
incl
dec
adc
cs
sub
mov
insb
jl
mov
sbb
out
jnp
push
mov
insb
adc
lret
movsb
sbb
xor
jp
negl
jae
push
cld
incl
sbb
pop
pop
lods
mov
out
cmp
jbe
or
jmp
mov
ljmp
pop
addl
jne
xchg
jbe
pop
pop
xchg
lahf
xchg
incl
sbb
sbb
or
or
iret
mov
jg
test
insb
sub
mov
insb
lcall
adc
mov
sbb
mov
add
nop
sub
mov
and
fstpt
add
lahf
jae
outsb
mov
inc
inc
or
aas
mov
pop
inc
cmp
lcall
push
cwtl
cmp
fisttpl
sub
xchg
sbb
or
push
pop
add
fld
mov
jp
sbb
and
adc
jno
mov
in
add
mov
data16
jne
and
jmp
lahf
cld
lcall
out
jmp
push
and
lahf
sub
add
sub
call
test
nop
jp
jg
test
in
lahf
adc
ffreep
hlt
mov
lahf
je
imul
mov
pop
push
push
or
mov
sub
test
mov
ljmp
insb
lods
lahf
fwait
mov
jno
mov
scas
fbld
imul
sbb
mov
pop
jno
cmp
mov
stos
loope
add
sbbl
jmp
dec
mov
and
lret
hlt
dec
mov
push
mov
xor
mov
cmp
in
add
les
mov
pop
or
clc
jmp
in
sbb
hlt
imul
andb
into
xchg
repz
in
jmp
sbb
fmull
sbb
jle
sahf
shll
mov
push
movsl
insl
cmp
loopne
and
call
adc
test
mulb
stos
cmpsb
scas
repz
pushf
cmc
inc
rcll
push
cmp
fsubr
push
nop
loopne
xchg
aad
rcrb
mov
jecxz
icebp
ds
pop
dec
nop
movsb
mov
dec
push
call
dec
cmp
jnp
sub
adc
test
ja
mov
shrl
std
inc
rorl
mov
enter
lods
pushl
out
adc
inc
fildl
mov
repz
sbb
push
jmp
pop
xor
jecxz
and
decl
jae
push
cmp
imul
mov
mov
nop
add
loopne
pop
xchg
call
pop
fnsetpm(287
mov
mov
ret
dec
jnp
into
outsl
or
loopne
fcoml
es
jg
out
sbb
jb
data16
test
cs
aad
dec
out
and
pushl
cs
lock
or
in
xchg
fdivrs
mov
or
cli
call
ja
sbb
hlt
xchg
stos
call
repz
ljmp
adc
sub
loopne
imul
jbe
jne
pop
ja
shlb
cmp
jg
mov
mov
shr
jnp
inc
iret
shrb
addr16
decl
scas
std
or
jl
test
dec
not
or
sub
iret
movsb
cmp
inc
outsl
fiadds
xchg
cmp
mov
xchg
ss
mov
jecxz
add
sub
sub
mov
or
sti
test
out
movsl
neg
mov
jbe
lock
incl
pop
cmp
pop
mov
notb
loope
jo
insl
inc
xor
imul
push
stos
bound
rol
xor
scas
call
cld
ljmp
movsl
aam
bnd
push
or
jmp
and
incl
jle
and
mov
cmc
push
cmp
mov
mov
xchg
mov
scas
sub
icebp
cmp
ja
sub
nop
movsl
cmpsl
cld
sub
sahf
xor
mov
icebp
addl
call
mov
cli
adc
jne
out
scas
nop
inc
clc
adc
mov
push
ds
sub
rorb
outsb
pushl
hlt
sub
rclb
mov
lcall
inc
add
or
das
mov
adc
jg
push
cmp
push
daa
lcall
inc
fisubrs
sbb
pop
loopne
rcrb
mov
xchg
jno
pop
test
in
mov
adc
push
mov
shlb
xor
or
and
movsb
jb
aaa
icebp
js
das
cltd
jge
jo
shrl
and
ffree
mov
mov
ljmp
clc
sahf
incb
stos
jmp
pushf
and
fsub
mov
sbb
pop
aad
or
cmp
dec
pop
sbb
or
mov
scas
fstps
shr
fidivrs
mov
shll
iret
ds
in
das
shll
or
test
lret
or
clc
and
mov
mov
decl
and
icebp
jecxz
fsubl
ja
out
sbb
nop
out
push
xchg
inc
int3
rcrl
aam
jne
imul
and
mov
ret
add
pop
jae
jl
mov
call
pop
sub
rol
mov
push
mov
and
outsb
push
scas
pop
xchg
test
jo
pushl
fcoml
incl
cmp
inc
mov
mov
in
pop
mov
sahf
or
xchg
adc
cmp
fildl
ret
fimull
movzwl
jg
jmp
cmp
aad
mov
xchg
adc
shlb
sub
mov
rcr
ljmp
cmp
mov
adc
push
xor
push
jg
call
cmp
cmp
cmp
xchg
jae
vfrczsd
ja
test
lods
jg
push
data16
scas
adc
mov
ret
xor
mov
mov
pushl
ds
pop
mov
xchg
mov
push
insl
cmp
pop
jmp
or
jno
stos
mov
ljmp
shrl
push
mov
sbb
ljmp
mov
mov
and
int3
xor
add
pusha
lods
arpl
sar
dec
mov
subl
cmp
xchg
or
call
scas
decl
jns
lds
mov
xchg
dec
ja
aad
xchg
repnz
cld
add
aaa
cld
decl
sub
jbe
orb
push
cmp
pop
and
sbb
and
add
scas
fidivl
out
mov
scas
cli
mov
adc
jmp
outsl
ret
mov
sub
movsb
js
pop
xchg
adc
insl
inc
and
aam
call
mov
in
mov
mov
mov
push
cld
mov
push
call
jg
lahf
jecxz
mov
push
add
and
out
mov
fs
cmp
jo
push
mov
fsubrl
test
pop
imul
adc
lock
mov
or
stos
repz
lea
sbbb
fldcw
xor
lret
push
clc
pop
xor
mov
sbb
cmpsb
sub
ljmp
int3
scas
add
popf
or
test
cs
popf
dec
andl
pusha
adc
decl
lea
outsb
insl
out
push
sbb
test
fs
idivl
fxch
sbb
call
mov
and
xchg
ret
bound
loop
mov
pop
xchg
add
xchg
mov
cli
jmp
sar
lret
push
jb
and
fadds
pop
jmp
jo
cmp
fs
mov
add
mov
jmp
sbb
sti
es
out
mov
aam
mov
adc
and
mov
or
mov
inc
cmpsb
mov
loopne
inc
nop
aam
inc
pop
mov
cmc
jg
stos
arpl
mov
dec
push
shld
jae
testl
ret
cmp
add
fisubs
cs
mov
pushf
es
sarl
cld
cmpsl
mov
lcall
sbb
xchg
das
fimuls
jmp
add
test
sub
aaa
mov
add
lock
and
jp
inc
push
in
repnz
sahf
lret
add
jmp
add
sbb
xor
in
scas
jno
pushf
shl
std
jl
lcall
mov
jbe
fisubrl
cld
mov
cli
out
sbb
pop
roll
call
sbb
lahf
adc
cli
ror
repz
cmp
sti
xchg
jp
push
cmpsl
jno
inc
cmp
mov
in
sub
test
add
rorl
mov
jecxz
cmpsl
fcomip
data16
adc
fcomip
jmp
jecxz
cmpsl
ret
rorl
and
inc
inc
sbb
mov
incl
fs
movsb
out
pushf
cmp
sahf
inc
cwtl
and
and
repz
sbb
fbld
call
push
mov
mov
add
lds
dec
popa
or
fs
out
dec
shll
add
fimull
ljmp
cmpb
xchg
xor
mov
fcoml
shrb
lret
cs
out
mov
push
fisubrl
adc
scas
or
adc
pushl
stos
enter
scas
das
movb
mov
and
incl
mov
sbb
push
sahf
ret
aam
mov
repnz
repnz
scas
xchg
decl
je
jo
sti
push
or
sbb
mov
and
add
pop
sbb
jmp
or
jecxz
in
and
cmp
mov
inc
push
lock
std
xchg
icebp
mov
xor
dec
sbb
bound
jmp
inc
mov
pop
xchg
ja
inc
adc
sub
sub
sub
es
incl
jle
sbb
xchg
inc
mov
xchg
inc
out
ret
mov
popl
lods
mov
jnp
stc
jle
mov
push
aas
cli
push
test
lcall
icebp
jl
jb
leave
fbld
and
daa
xor
mov
pop
lods
insl
enter
mov
sub
pop
rclb
add
notl
addr16
add
xchg
inc
jl
push
dec
sbb
xor
nop
mov
sub
inc
push
push
add
mov
fsts
movsb
mov
mov
adc
rclb
fwait
xor
mov
stos
fnstenv
testb
daa
imul
test
scas
incl
cltd
inc
das
jne
and
stc
rcrl
dec
lea
or
pushl
mov
or
xchg
push
or
rcrl
call
jmp
push
mov
lods
in
cltd
scas
jg
fld
ljmp
mov
in
cltd
or
es
inc
fdivrp
lcall
push
add
dec
and
shl
pop
inc
cld
iret
jg
incl
pop
pop
mov
fidivrl
adc
mov
fcoml
movsb
mov
cmc
lcall
push
aad
ss
stc
mov
mov
rclb
iret
inc
push
sub
cmc
test
clc
jb
decl
popf
and
bnd
ret
pop
mov
jmp
mov
cmp
fsubrl
gs
clc
ds
ficoms
loopne
fdivrl
xor
jo
les
incl
fldl
mov
pop
shll
cmp
sbb
cmc
add
ror
push
lock
pop
push
push
cli
ljmp
jmp
sub
xchg
dec
lret
push
pop
lock
lods
cmpsl
xor
add
inc
test
sarb
lret
stos
std
call
pop
popa
jmp
lods
leave
add
sarl
cltd
jge
xor
jge
push
mov
push
lahf
xchg
and
xchg
mov
dec
push
xchg
mov
or
dec
out
cmp
daa
jmp
xchg
or
pop
rorl
sub
test
shrb
mov
xchg
fisubrs
ljmp
ljmp
fistpll
push
pop
mov
daa
in
gs
jmp
pop
imul
inc
out
int3
lock
and
out
scas
jnp
mov
lcall
inc
test
loope
aad
orb
psubusb
fcomi
mov
test
pop
fcomip
call
and
lods
jns
shll
push
ficoml
loop
cmp
or
ljmp
rcll
fnstsw
push
add
sbb
scas
ds
lret
inc
testl
jge
out
lock
mov
jmp
mov
pusha
imulb
jmp
es
jg
mov
xor
and
out
jl
dec
out
adc
jge
aas
xchg
shll
push
lods
outsl
lcall
sub
fisttpl
jmp
aas
push
cs
push
outsl
cld
sarl
jl
mov
ret
call
shrl
test
mov
add
push
dec
sbb
lea
adc
inc
cld
push
push
cltd
jl
pusha
ret
push
mov
call
pop
hlt
jl
fs
xor
mov
add
clc
ljmp
clc
or
adc
mov
cmp
dec
inc
cmp
in
dec
pushl
lret
dec
rclb
test
cmc
mov
scas
lcall
xchg
mov
pop
dec
leave
push
dec
push
xor
or
dec
int
insl
and
int3
push
and
clc
push
imul
out
test
lret
push
cmc
mov
lds
jbe
push
xchg
jle
std
inc
inc
mov
jg
imul
imul
dec
inc
sbb
lahf
cmc
push
aas
xor
mov
sar
decl
xchg
outsl
fmulp
cmp
mov
jns
mov
mov
sub
cmc
fsubs
sub
aam
xchg
test
lcall
jo
xchg
sbb
cmc
mov
cmc
cmp
popf
hlt
xor
xor
mov
jmp
jp
lret
pop
cmpsl
jmp
dec
orb
lock
int3
inc
inc
and
xor
out
dec
add
scas
push
inc
jecxz
adc
repnz
xchg
add
sbb
push
jp
jecxz
push
outsb
scas
les
clc
decl
adc
loope
stc
fisubrs
ja
lret
pop
popa
sub
lret
ljmp
enter
or
dec
mov
pop
out
cmp
mov
ljmp
or
test
imul
xor
jg
sbb
stc
sbb
nop
mov
xor
xchg
mov
push
or
cli
adc
orb
adc
mov
shlb
push
mov
je
dec
insl
xor
mov
jae
push
inc
or
stos
icebp
inc
xchg
icebp
push
and
int3
mov
or
lret
shl
adc
push
iret
je
jns
mov
or
jns
and
adc
xchg
mov
cld
faddl
imul
sub
pop
jo
es
push
cmp
clc
testl
push
addl
test
fnstcw
popa
repz
pushf
movsb
mov
pop
ret
mov
xchg
push
mov
adc
inc
push
mov
in
or
jmp
popf
aas
dec
xchg
sbb
decl
mov
ljmp
bswap
or
scas
pushl
or
jp
mov
cld
sub
cwtl
lods
pop
ret
loopne
out
dec
pop
lret
pop
mov
call
inc
mov
idivb
inc
fcom
mov
mov
push
push
cmp
ljmp
aas
lods
std
testb
xchg
cmp
lret
xor
xor
sub
mov
push
cmp
roll
mov
fs
pop
out
xchg
cli
lcall
inc
je
arpl
or
push
bnd
pop
mov
int3
clc
bound
mov
sub
icebp
aaa
jno
ljmp
sbb
fsubrl
push
push
out
mov
jo
test
xor
mov
popa
push
mov
sar
mov
fcmovnbe
push
scas
or
adc
data16
les
shlb
ret
mov
inc
or
xor
dec
sbb
cld
sbb
xor
cmp
jg
hlt
lock
out
aas
fisubrs
fisttps
pop
ficomps
mov
and
dec
outsb
cmp
mov
sub
mov
addl
inc
mov
sub
es
jl
push
call
or
mov
out
rcrl
pop
mov
orb
mov
incl
stos
xchg
push
sub
repnz
mov
aam
shrb
push
dec
jge
fdivr
jg
mov
cld
inc
cmpsl
sub
xchg
add
add
sar
and
lods
cli
jbe
jnp
sub
adc
into
iret
sahf
imul
pop
add
lods
push
cwtl
adc
push
mov
jg,pn
push
aam
push
loope
test
dec
cli
push
dec
pop
and
insb
pushf
cmpb
lods
pop
imul
inc
push
sub
imul
pusha
inc
or
jmp
fs
push
int3
xor
ljmp
sub
sbb
sbbl
imul
dec
call
xchg
cmp
cmpsb
pushl
lcall
jmp
sbb
movsl
xchg
incl
leave
mov
scas
jg
sahf
dec
test
ljmp
xor
sbb
jle
pushl
and
mov
adc
out
jle
jbe
inc
cmp
ret
xor
mov
jmp
xlat
out
push
adc
mov
or
repz
leave
data16
data16
scas
les
jg
cmpl
dec
or
xor
cmp
jae
arpl
jne
or
jnp
out
mov
mov
out
adc
push
mov
xor
pop
mov
ljmp
sub
pop
jae
sub
jg
in
fdivr
xorl
outsl
cld
in
ljmp
lcall
and
out
inc
iret
loope
addr16
inc
and
dec
push
call
push
jb
in
mov
push
sub
or
icebp
adc
push
push
jmp
ret
lock
out
mov
xor
adc
out
or
xor
hlt
or
decl
rol
ljmp
shrl
mov
cld
mov
fimuls
nop
cmpsb
mov
mov
pushl
pusha
mov
dec
mov
jnp
xchg
cltd
pop
shr
sbb
sar
decl
loop
jmp
inc
push
test
adc
xor
sarb
cmp
mov
push
cmpsb
fldt
flds
insl
out
push
repz
lcall
push
data16
xchg
mov
xchg
stc
sahf
lds
pop
pop
test
sbb
lock
clc
cmc
push
arpl
bound
stc
insl
test
insb
push
outsl
decl
aam
jg
dec
sub
leave
mov
cmp
xchg
fstps
out
sub
fidivl
adc
stc
movsb
dec
insb
jnp
sub
cmpsb
shll
sub
hlt
fldenv
iret
add
jmp
cmpsb
xor
inc
dec
jle
jmp
in
scas
jo
js
push
adc
jg
ljmp
pop
stc
pop
shll
and
lds
pop
scas
cmc
test
cmp
out
xchg
mov
cmpsb
rcr
push
add
dec
adc
jmp
std
stos
call
inc
mov
call
xchg
push
aaa
data16
cs
lcall
pop
push
aad
rcl
aaa
jl
aad
xorl
mov
leave
js
jno
sbb
or
lea
stc
daa
call
daa
push
xor
fwait
decl
or
mov
arpl
jle
or
fldt
xchg
cmpsb
clc
sbbb
repnz
psrlw
movsb
mov
sbb
cs
jg
add
mov
sbbb
sub
or
ret
mov
lock
call
repz
jb
mov
xor
push
jne
call
lods
aad
xor
icebp
jae
and
inc
add
loope
mov
sbb
mov
bound
sub
int
icebp
decl
jae
dec
or
mov
pop
loopne
incl
mov
ret
xchg
push
xor
or
aad
dec
jg
js
inc
std
pushl
test
in
fistpll
jne
loop
add
jmp
vpsubb
add
fadds
fdivrp
pushl
scas
aaa
fsts
mov
mov
mov
mov
into
mov
pop
add
cmc
sub
inc
arpl
jmp
cmc
jmp
mov
or
mov
shrb
jne
les
test
inc
add
ret
xchg
xchg
push
imul
xchg
cld
push
adc
and
loopne,pt
mov
decl
xor
pop
xchg
pusha
outsb
jb
adc
cs
and
xchg
pop
jp
adc
movsb
jp
mov
xchg
test
idiv
outsl
and
mov
push
mov
mov
push
mov
fnstenv
cmpsb
gs
stos
pushf
adc
sub
call
rol
popa
clc
lcall
loop
loop
jo
data16
faddl
push
jne
jno
inc
xchg
sbb
stc
mov
bound
mov
imul
decl
dec
daa
dec
lea
pop
lahf
mov
leave
or
cmp
lock
aam
and
ljmp
inc
cwtl
adc
jae
jl
aas
and
or
daa
xorb
fnstsw
inc
mov
insl
or
dec
add
jns
inc
lahf
dec
shrl
divl
lret
jns
sub
sub
inc
pushf
sbb
test
pop
mov
xor
xchg
das
repz
mov
ja
dec
lret
iret
int
push
pop
fcomip
lret
mov
or
xor
sysret
lahf
sub
mov
testl
pushf
gs
jmp
dec
xchg
sbb
add
mov
mull
data16
repnz
inc
mov
and
stos
sbb
outsb
roll
mov
adc
les
and
xchg
hlt
mov
das
test
lcall
aas
fcompl
or
pop
jmp
jmp
cwtl
iret
scas
mov
test
outsb
xor
dec
jmp
hlt
add
xorb
adc
lcall
cwtl
and
arpl
sbb
movsl
jle
pop
arpl
in
add
push
ljmp
pop
cli
or
enter
call
inc
out
inc
xlat
stos
imull
mov
repz
ja
icebp
sub
cmovl
test
pop
dec
xchg
pop
add
ljmp
mov
xchg
push
sub
lea
or
inc
lret
inc
xchg
imul
adc
push
cmp
call
idiv
test
xchg
pop
inc
jb
scas
popf
push
inc
add
mov
cmp
adc
jo
shr
fdivl
cli
movsb
adc
xor
sub
rorb
ljmp
mov
lock
lock
enter
sbb
jg
and
push
loop
subb
pushl
gs
fwait
cmp
cwtl
xchg
jne
das
adc
inc
or
mov
jae
push
jmp
adc
dec
mov
or
inc
testb
cmpsl
mov
aaa
xor
lods
push
mov
sub
mov
mov
enter
decl
cli
int
and
aaa
out
fldt
fildll
cmp
lcall
pop
jmp
dec
adc
test
out
js
adc
dec
pop
pusha
or
ss
sti
and
test
push
sub
mov
popa
pop
cmpsl
ja
lea
push
pop
rcl
xchg
pop
cmp
in
ljmp
adc
aam
test
nop
test
pop
or
stc
add
dec
test
adc
mov
test
sbb
aad
jne
insl
fs
lods
or
es
mov
dec
push
add
adc
pop
xchg
and
mov
xor
mov
xchg
loop
repz
cmp
dec
je
arpl
cwtl
push
cld
pop
cld
jg
sbb
xchg
das
sahf
adc
or
iret
add
mov
pop
jge
call
and
mov
xor
scas
jo
adc
int3
lods
xor
scas
lret
jg
call
fsubrl
hlt
pop
push
sbb
mov
test
fisubl
jne
pushl
or
test
outsl
dec
inc
mov
std
and
test
jno
addb
ja
ljmp
lea
cld
jbe
sbb
hlt
shl
add
dec
gs
ljmp
push
mov
pop
inc
aad
cli
sbb
jno
mov
adc
fcomip
fistpll
adc
test
imul
fisubs
test
lock
add
cwtl
lcall
out
rclb
jmp
jbe
int
fs
mov
sbb
mov
pop
sbb
push
dec
or
xor
jmp
xchg
mov
inc
mov
and
adcl
inc
and
lds
mov
pushl
lock
in
sub
data16
arpl
movsl
xor
xchg
loopne
dec
adc
ja
jb
ja
aas
cld
jbe
mov
dec
dec
jg
cltd
repnz
and
iret
dec
inc
jno
adc
xchg
clc
add
or
pop
or
or
enter
call
cmpsl
cmp
jne
inc
rorl
sub
lods
sbb
jl
hlt
ficomps
mov
cli
fiaddl
mov
cmpl
sbb
les
out
loopne
sbb
ds
aas
insb
nop
test
add
mov
jecxz
out
inc
cld
inc
add
nop
adc
test
push
or
mov
test
int
outsl
mov
icebp
in
out
cli
decl
jb
out
out
insb
push
rep
fidivl
movl
adc
dec
mov
dec
fwait
jb
adc
pop
test
cmc
mov
cmp
mov
jmp
sbb
xchg
mov
filds
push
int
xor
pushl
sub
aaa
das
pop
scas
jmp
jg
push
inc
aam
or
inc
push
mov
decl
xlat
sbb
dec
dec
sbb
pop
mov
xchg
jo
je
outsb
call
cmp
mov
incl
xchg
pop
adc
mov
cmpsl
cmc
dec
lcall
jmp
out
push
pop
cmpsb
cwtl
xor
shrb
mov
xchg
push
addl
nop
mov
cmp
or
adc
decl
push
out
mov
popf
xchg
jmp
mov
mov
and
pop
pushf
insb
repz
lcall
mov
ret
ficoml
leave
lret
inc
icebp
mov
lret
xor
pop
xor
xchg
sbb
mov
call
aad
les
lods
scas
inc
dec
pop
negb
jg
sub
push
test
in
inc
xchg
xchg
ja
adc
xor
imull
mov
dec
jg
mov
jmp
mov
jnp
jmp
ss
lcall
aas
xchg
inc
jo
daa
sbb
xlat
push
into
fistpl
sbb
rclb
pop
lahf
popa
xor
decl
lock
adc
pop
fisubl
aad
je
in
jne
push
clc
inc
inc
cli
outsb
sub
cmp
out
and
std
ljmp
ss
loop
bound
fcmovnb
adc
xchg
xchg
out
adc
push
or
cmpsl
incl
dec
enter
jge
rolb
push
insb
mov
mov
test
mov
stc
dec
pushl
js
ds
or
stc
inc
cld
push
daa
das
lea
push
xor
add
jl
shlb
loope
jmp
mov
mov
insl
pop
dec
repnz
je
mov
mov
adc
scas
mov
ljmp
or
push
cmpsb
and
jl
inc
cwtl
push
aad
mov
ljmp
adc
sub
std
pop
xor
cmc
xchg
loope
out
lcall
not
add
mov
jae
int
stos
xor
lea
mov
xor
sub
sahf
jo
or
push
fnstsw
jnp
push
mov
mov
sbb
lret
scas
outsb
out
testl
in
subl
mov
std
clc
jmp
cmp
movsl
cmpsb
sbb
imul
cmpsb
inc
xlat
xchg
lcall
out
push
jl
xchg
imul
aaa
mov
fcomip
test
cmp
inc
mov
push
lds
aad
clc
mov
push
std
fisttps
jns
cs
sbb
sub
xchg
pop
adc
add
xchg
add
testl
inc
lcall
into
subb
jbe
sub
xor
push
mov
pusha
jmp
push
push
fwait
ret
and
pop
xor
mov
mov
inc
mov
adc
sbb
pop
and
jne
cwtl
xchg
sbb
daa
bound
js
dec
adc
and
push
rcrb
scas
aam
jmp
pop
in
cmp
mov
orl
scas
inc
clc
cmpsb
and
cmp
cld
cld
cltd
incl
sbb
popa
rcll
add
jmp
xchg
mov
push
adc
pop
cmpsb
mov
sbb
cwtl
les
mov
mov
mov
fimuls
add
incl
lock
int
pushf
dec
loop
xchg
movsb
incl
push
xchg
xor
aad
add
ds
adc
and
fwait
in
fisubrs
mov
aaa
enter
leave
inc
pushf
repz
pop
test
sub
ss
out
ljmp
mov
cmp
stos
jnp
pop
inc
sahf
push
jmp
push
mov
or
std
outsb
fdivr
add
lods
xchg
decl
aad
inc
lret
pop
inc
xchg
mov
outsb
push
push
push
push
add
cld
or
orb
add
aam
mov
dec
inc
mov
cld
call
mov
fcmovnb
aas
mov
std
or
in
and
sbb
sti
cmpl
int3
decl
sbbb
and
adc
jp
cmp
mov
mov
pop
ljmp
xor
push
xor
cmp
setnp
inc
rclb
push
gs
mov
sahf
out
and
cmpsb
imul
fdivrp
call
std
fisubrl
jp
dec
and
xchg
push
mov
inc
int
jns
repz
jno
std
pushl
dec
test
add
mov
jns
ret
shrl
jg
inc
xor
fs
mov
int3
lcall
aad
adc
test
mov
mov
sub
decl
jecxz
sbb
xor
lods
pop
rorb
aad
adc
pop
pop
mov
scas
sbb
lcall
and
lahf
jle
inc
mov
xor
lods
sti
fs
lcall
rcrb
je
movsl
loop
add
and
mov
push
sbb
inc
pushl
sub
dec
jecxz
movsl
push
jg
dec
and
push
push
xlat
mov
cwtl
mov
push
pop
sub
push
mov
push
rorl
sub
push
xor
mov
and
ljmp
mov
shrb
xchg
inc
aam
push
inc
gs
iret
inc
jae
lcall
cltd
dec
mov
std
outsb
cmp
xchg
cmc
push
cmpsl
push
sub
loopne
dec
test
fistl
sub
sbb
sbb
pop
xchg
sub
adc
decl
insl
push
nop
out
pushf
add
add
int3
mov
xchg
inc
nop
cmp
jle
pop
pop
pop
or
ret
jo
loop
shrb
incl
and
fst
dec
lret
push
scas
movhps
pop
iret
es
ljmp
clc
push
sbb
cmp
in
jmp
push
imulb
test
lds
mov
or
jbe
leave
cmc
in
jno
mov
test
adc
movsl
insl
xor
jl
mov
mov
incl
lret
fwait
cmp
movsb
bound
or
aad
cs
insb
mov
push
mov
in
cmpsb
in
cmp
jns
inc
stc
outsb
push
outsb
sarl
xchg
fstps
in
inc
cmp
lcall
xchg
jp
push
fs
imul
ja
sub
pop
mov
aam
fistpll
mov
into
fildll
sbb
mov
mov
cmp
lods
cltd
fidivs
ljmp
faddp
loopne
xor
add
fcmovb
addr16
fiaddl
insb
sti
ret
mov
jp
int
mov
fldt
leave
xchg
lods
jmp
jno
push
push
dec
loopne
loope
pop
push
mov
cmp
in
mov
loopne
pop
arpl
jle
insb
xchg
xchg
push
fbld
aaa
andb
clc
lret
mov
test
jnp
pop
lea
or
call
dec
xchg
mov
lret
fimull
dec
xlat
fwait
jge
push
jecxz
sahf
sub
in
aad
xchg
inc
add
jnp
enter
gs
loopne
outsb
sbb
clc
decl
fldcw
loop
arpl
mov
dec
sbb
mov
lds
lret
lcall
pop
push
lock
lcall
ja
popf
pop
insb
lock
add
jmp
cs
daa
in
dec
bound
jno
xchg
sbb
xchg
pushl
call
lcall
mov
out
or
sub
mov
mov
inc
push
dec
adc
lcall
cmp
les
sub
in
ljmp
sub
sbb
gs
sub
push
inc
divl
jge
scas
push
pop
out
xchg
test
xchg
call
jecxz
jmp
into
sbb
lods
idivb
sub
cmp
ljmp
ljmp
mov
push
push
scas
loope
push
jbe
rorl
jg
push
insb
xchg
stos
cmpsl
xor
adc
xor
lea
jmp
cmc
pop
jg
xor
pop
ljmp
scas
inc
xchg
dec
pop
mov
movb
aas
outsb
mov
push
add
mov
jae
cld
out
mov
lods
fcoms
and
lahf
xor
rorl
mov
call
pop
repnz
adc
mov
xor
cmp
lea
inc
fcomip
mov
add
xchg
and
or
mov
out
int3
fwait
imul
cs
mov
sbbl
push
call
or
pop
jb
adc
xchg
mov
lret
call
aas
jge
pop
pusha
loope
push
pop
inc
push
fcomi
mov
insb
mov
pushl
push
add
xor
in
mov
mov
or
cmp
cs
in
fcoml
ljmp
inc
bswap
dec
pop
adc
popa
out
orb
mov
push
jno
gs
dec
sub
call
mov
mov
mov
arpl
mov
cmp
in
daa
push
aas
mov
imul
fdivrs
dec
push
jl
nop
cmc
in
fwait
xchg
jg
push
add
mov
push
sarb
shl
mov
out
insb
pushl
jg,pt
xlat
cmp
out
lcall
or
in
icebp
or
xchg
fdivs
cmpsb
int3
test
xchg
and
mov
aaa
fstl
inc
lock
pop
les
jbe
shlb
imul
mov
mov
lcall
xchg
mov
adcb
pop
rorl
iret
xor
mov
mov
divb
sub
adc
in
push
and
pop
dec
das
and
lea
adc
xchg
jg
xor
lcall
pop
test
xor
lods
mov
xadd
jbe
jo
inc
sub
cli
pop
mov
sbb
es
aad
sbb
jne
shrb
ljmp
cld
sahf
mov
mov
push
lret
stos
pop
rcrb
jnp
incl
decl
rorl
jo
and
movsb
fstpt
test
loope
call
insl
push
sbb
mov
shr
js
adc
test
mov
push
insl
dec
icebp
aad
ljmp
insb
xor
call
fisubs
dec
jns
jge
test
lcall
loopne
mov
mov
or
int3
ret
cmp
mov
and
pop
mov
lcall
or
add
pop
push
sbb
sub
adc
das
in
cmpsl
bound
pop
rcrb
sar
pushl
xor
inc
pop
or
jne
xor
cmpsl
rcr
mov
lahf
cmp
mov
pushl
scas
hlt
into
icebp
cmp
inc
add
popa
push
and
decl
scas
ljmp
out
mov
or
mov
ljmp
fs
orl
push
ljmp
push
mov
pop
xor
incl
insl
xchg
xchg
or
push
jecxz
sarb
and
mov
xchg
mov
push
decl
in
cmp
dec
and
fnstenv
les
test
sbb
in
inc
xchg
xor
mov
jmp
pop
icebp
ljmp
test
cmc
out
push
inc
scas
inc
imul
xor
loopne
fwait
into
xchg
sbb
test
jle
add
mov
sti
decl
push
inc
xor
xor
mov
and
lock
jg
testl
push
pop
lods
sar
adcb
lea
xor
pushl
xor
rclb
inc
add
mov
sbb
aas
and
pop
aam
out
mov
sbb
ja
scas
shrl
cwtl
mov
fidivrl
jne
adc
push
jmp
lahf
add
decb
mov
sub
cmp
fsts
mov
decl
ljmp
and
lret
ret
pop
sti
cli
cmpsb
sbb
adc
xchg
call
fisubrl
add
push
inc
mov
inc
xor
jp
dec
in
loopne
pushl
loope
lods
mov
cmp
shrl
repz
ja
in
add
jge
dec
addb
mov
xorb
stc
jmp
insl
xchg
inc
inc
xchg
mov
std
lock
mov
std
xor
incl
mov
cld
sbb
roll
ss
pusha
gs
pushl
movsl
arpl
movl
shlw
xchg
and
idivb
lods
jmp
nop
push
push
sbb
insl
cs
xchg
pop
div
lret
ljmp
inc
mov
mov
sbb
inc
lahf
icebp
es
mov
sub
aas
mov
add
push
adc
and
scas
xchg
xor
fistl
pop
add
inc
loopne
fistl
pop
negb
repz
sbb
fnclex
shll
jge
jl
adc
outsb
or
inc
mov
lret
mov
stos
adc
add
or
jbe
ds
out
jnp
jmp
jns
mov
pop
das
out
cmpsl
jns
xor
andl
or
pop
mov
in
push
jp
repz
outsl
xchg
push
xchg
fstpl
xchg
cltd
jb
loopne
inc
stc
loope
imul
ljmp
gs
pop
mov
mov
ja
daa
int
inc
add
fists
adc
pop
inc
hlt
inc
xlat
testl
jno
enter
mov
and
inc
bound
loop
in
ljmp
fcmovnu
dec
cmp
adc
add
mov
add
jmp
in
push
xchg
idivb
sbb
xchg
pop
cmp
push
leave
pop
cli
outsb
dec
dec
inc
jle
jbe
or
mov
lcall
sahf
rorl
mov
xchg
mov
pop
inc
stc
int3
inc
enter
inc
mov
push
cmp
inc
repz
adc
outsl
iret
pushf
jmp
shrb
out
incb
daa
or
inc
ds
mov
push
stc
adc
push
cli
inc
icebp
lods
jle
outsl
subb
out
insl
pop
ljmp
je
lret
lahf
jle
and
adc
inc
popa
add
dec
or
and
ss
imul
and
sbb
lods
lahf
scas
jb
std
in
jnp
lret
js
cmp
xchg
shl
push
jmp
xor
outsl
jge
stos
lock
decl
lock
pop
add
push
in
xor
inc
pusha
aam
out
jns
icebp
test
ret
lcall
stc
rcr
or
inc
xchg
cmp
decl
fiaddl
and
and
shl
outsb
cli
gs
hlt
xor
lcall
dec
fldcw
and
mov
mov
repnz
and
xchg
mov
sbb
int3
and
jmp
push
and
data16
sub
pop
or
andb
or
mov
xor
js
ud1
scas
jle
ss
ljmp
push
push
jae
cmpsb
push
popf
and
add
jg
ljmp
jmp
int
pusha
test
arpl
fidivrl
mov
sar
and
cld
adc
mov
fisubl
shlb
sub
pushl
sub
sub
dec
xchg
mov
cli
pop
pop
in
xlat
cmp
mov
inc
jmp
and
scas
adc
xlat
mov
movsb
mov
insl
aam
hlt
ss
mov
mov
enter
jb
ss
jg
add
inc
cmp
loope
sbb
mov
cmp
cmp
push
icebp
idivl
fbld
jg
mov
sub
ja
push
mov
fisttps
fnsave
jns
outsl
adc
decl
pop
mov
lock
mov
dec
and
and
cld
dec
adc
int
jnp
pushl
fsubp
lahf
dec
icebp
push
jae
lods
xor
xchg
or
mov
sbb
jmp
mov
push
or
cmp
cli
xor
cmp
pop
pop
jmp
mov
dec
cmp
push
fidivs
cmp
mov
mov
iret
pop
clc
push
jo
push
lock
or
dec
mov
sub
add
add
ljmp
push
and
sti
movl
or
incl
popa
insb
jbe
aas
andnps
push
push
and
push
mov
test
or
sub
inc
jae
repnz
popa
aam
dec
in
pop
push
in
outsb
fwait
xor
outsl
pushl
enter
out
xor
addr16
insl
sbbb
xchg
mov
and
cmpsb
jmp
mov
add
xchg
pop
cmp
nop
loop
xor
hlt
cld
incl
pop
sbb
fiaddl
cmp
es
pop
push
xchg
mov
pop
icebp
mov
fwait
adc
call
std
jmp
fs
xchg
in
inc
sbb
xor
cld
pop
mov
add
add
aad
inc
insl
movsb
adc
pop
mov
clc
or
lcall
pushl
scas
in
sub
dec
inc
jne
ss
in
mov
into
push
jb
in
pop
push
add
sub
cltd
xor
lods
leave
xor
test
fdivl
mov
xor
repnz
jge
mov
pop
jnp
sub
std
jg
dec
pop
xor
mov
mov
push
pop
test
cmc
cmp
push
loopne
push
lahf
mov
jmp
lea
mov
cmp
mov
xlat
push
call
dec
addr16
fisttpll
out
push
sahf
dec
stos
mov
adcb
jmp
xchg
inc
cmpsb
pusha
ljmp
xchg
sahf
mov
dec
and
stos
mov
lods
stos
dec
inc
jg
iret
lods
je
inc
inc
jno
data16
mov
jecxz
mov
pushl
enter
lcall
cmp
fdivs
push
hlt
dec
dec
mov
jg
repnz
push
xchg
dec
dec
negb
into
sbb
lcall
add
xor
cmp
xchg
push
lcall
lcall
int3
pushf
icebp
xchg
mov
in
and
mov
ljmp
cmovp
push
neg
je
test
loop
call
mov
int
mov
aam
icebp
in
lea
jno
clc
call
std
outsb
repz
arpl
and
call
and
stos
or
push
add
ljmp
cmp
shrl
fiadds
cli
mov
jg
jp
addr16
xor
or
xchg
dec
out
js
inc
dec
inc
clc
push
jnp
and
sti
fcomip
jmp
and
lcall
imul
fdivrs
repnz
sub
stos
pusha
ljmp
js
pop
dec
pop
or
jno
sbb
xchg
adc
scas
inc
shrl
push
sbb
jno
cmpsl
lret
or
fistpll
test
fsubrs
inc
mov
cwtl
cs
enter
mov
lret
ss
lods
data16
fwait
dec
jle
shrl
push
pushf
mov
stc
fcoms
imul
incl
lret
inc
nop
test
or
enter
pop
or
pop
loopne
lcall
pop
int
jp
inc
fisttpl
nop
push
std
xorb
call
in
fldl
je
in
xor
hlt
aam
stos
fildl
ss
mov
cs
push
mov
push
cmc
pop
hlt
jecxz
test
adc
cwtl
lea
ljmp
out
popf
jl
jae
jae
mov
int3
clc
fnstsw
cld
jl
cmp
dec
popa
jmp
mov
iret
and
push
fnop
das
fwait
add
call
and
sarb
sub
jo
sub
pop
xor
or
fstps
mov
repnz
loope
and
push
jns
int
jp
fcompl
inc
inc
or
out
mov
movsl
aaa
or
ljmp
mov
hlt
xor
sub
imul
repnz
add
or
call
sub
insl
push
cmp
push
pop
add
pop
fidivrs
push
xchg
js
orl
out
xor
push
and
das
test
iret
push
int3
popa
jnp
push
movsl
stos
pushf
and
testl
cmp
in
enter
add
in
incl
lods
push
sub
xchg
and
xor
addb
cmp
rcrl
mov
jl
psrad
scas
sub
xor
lret
daa
pop
dec
fisttpll
repnz
push
lods
lcall
popf
adc
jmp
hlt
pop
push
pushl
push
jnp
loope
add
jecxz
or
out
adc
mov
adc
std
ds
cmp
push
enter
popf
ffree
inc
jns
sbb
clc
dec
dec
mov
add
xchg
aas
stos
decl
dec
pop
cli
fdivr
adc
push
and
inc
push
add
mov
cltd
aad
jge
or
stos
insl
sarl
ficoms
cmpsb
cmp
movsl
scas
and
sti
xchg
xchg
push
jo
mov
push
icebp
movsl
decl
mov
jo
jge
ret
lea
mov
ret
mov
stc
roll
lcall
push
or
orb
fistpll
push
sub
dec
cmp
and
mov
arpl
dec
pextrw
or
scas
mov
push
aas
insb
pusha
out
and
sbb
jg
and
jmp
icebp
faddp
fsubl
and
pusha
aas
jg
lea
cmpsb
mov
orl
into
lcall
in
mov
adc
inc
sbb
aam
je
or
jecxz
mov
icebp
repnz
sbb
adc
and
enter
adc
xchg
pop
loop
stos
lcall
pop
lahf
jae
mov
adc
les
ljmp
andb
mov
andl
mov
mov
jne
ljmp
mov
cmp
xchg
push
clc
out
jmp
stc
lods
ffree
xlat
fadd
nop
sub
out
cmc
mov
insl
dec
xlat
and
and
andl
stc
stos
dec
or
jno,pt
xor
lcall
mov
add
mov
xor
data16
mov
loopne
lods
decl
in
movsl
mov
daa
rcrb
mov
and
and
imul
aad
cmp
ljmp
ljmp
les
lcall
imul
cltd
test
decl
mov
outsl
das
gs
add
mov
add
jmp
test
push
add
xor
int
xor
sbb
or
cmp
dec
aad
icebp
int
iret
jg
popa
addr16
mov
clc
add
inc
add
scas
xchg
sub
incl
xlat
sub
ret
pop
icebp
call
shll
adc
dec
ljmp
or
xor
dec
and
push
sti
or
mov
out
fstps
ud0
mov
mov
push
inc
mov
sub
pop
hlt
xlat
ret
xor
push
in
popa
dec
dec
test
call
cmpsb
jae
push
hlt
xchg
xor
xor
loop
or
mov
adc
ljmp
and
sbb
incb
dec
pop
pop
mov
nop
ret
leave
sbb
jbe
xchg
vmwrite
aam
mov
loope
cmpb
xor
sub
ljmp
adc
and
scas
mov
pushf
push
out
fs
es
nop
xor
fcomip
add
aaa
loope
push
test
rcr
test
in
and
sub
movsb
fs
xor
pop
std
mov
stc
pushf
push
repz
mov
jmp
mov
js
lea
scas
pop
or
fnstcw
dec
mov
int3
call
out
mov
incl
push
pusha
mov
fwait
test
xlat
pop
out
nop
push
fnsave
cmp
call
pop
jbe
call
ljmp
add
xor
xchg
add
out
fists
adc
nopl
adc
add
mov
inc
inc
fmuls
lcall
push
or
std
cmp
scas
push
inc
cwtl
mov
out
cli
decl
daa
stc
leave
pop
mov
scas
or
cmp
or
shlb
or
in
xchg
xchg
jno
pop
pop
test
int
das
fwait
mov
push
inc
ljmp
xchg
sbb
or
loopne
das
rolb
out
insl
adc
sti
je
fstl
lcall
sub
and
testb
mov
xor
fidivrs
xchg
repz
xor
or
pop
sti
insl
xchg
int
mov
inc
cltd
decl
pop
out
inc
push
pop
jns
sbb
or
popf
xor
decl
xchg
or
ja
and
addr16
mov
jp
sbb
in
hlt
inc
mov
mov
dec
mov
orb
cmp
iret
roll
dec
lds
add
stc
dec
jp
push
mov
pushf
shrl
aam
call
and
sub
fsts
pop
or
notl
pop
loop
and
xchg
inc
and
bound
dec
insl
or
cmp
adc
out
adc
mov
pop
aam
adc
inc
mov
shr
imul
out
sub
test
pushl
sbb
push
xchg
loope
fdivrs
scas
rcll
jbe
call
dec
imull
mov
add
or
fsubrs
jmp
into
addr16
fwait
imull
pushl
out
mov
sbb
call
inc
es
and
pop
and
cmp
push
jg
add
mov
repz
test
mov
cmp
lock
jne
add
cmc
daa
cs
mov
std
cmc
or
pop
fcmovnb
pushf
push
push
jmp
fiaddl
xor
cmp
or
lods
mov
jmp
mov
movsl
pusha
jl
je
inc
mov
mov
lds
shl
add
lret
int3
push
jns
mov
pop
push
pop
or
incl
jp
leave
lods
js
movsb
test
pop
notl
lret
clc
and
aaa
lea
pop
cmpb
roll
negl
gs
xor
call
cwtl
je
out
xchg
and
jmp
lret
mov
and
xchg
sti
stc
dec
sub
out
xchg
cmc
push
cmpsl
jp
dec
lar
aas
jp
adcb
cmp
ret
lods
testb
add
jb
sti
fistpll
adc
lahf
negl
outsb
inc
test
adc
lret
and
push
inc
xor
xchg
stc
scas
jle
pop
fdivl
jl
dec
repnz
cmpsb
pusha
test
incl
inc
add
movsl
les
or
cmp
sbb
jmp
sarl
and
push
lcall
das
clc
add
fiaddl
out
pop
pop
dec
adc
xorb
xchg
cld
js
sti
mov
pop
jp
pop
push
incl
pop
dec
das
mov
mov
mov
std
aam
inc
repnz
sub
test
xchg
inc
arpl
dec
pushl
or
imul
inc
fdiv
fwait
jne
aad
pop
pusha
xor
push
decl
pop
in
movsb
sbbl
xchg
bound
cltd
lods
das
insl
or
shll
dec
lods
mov
dec
lods
mov
out
aaa
je
ficoms
push
bound
cld
pop
cltd
mov
lcall
mov
pop
sbb
sbb
pop
mov
in
cmp
mov
and
mov
xchg
inc
out
cmpb
and
ljmp
mov
pop
sbb
out
dec
fbstp
test
dec
test
data16
sub
cltd
hlt
jmp
xchg
int
in
mov
leave
push
call
sbb
repnz
dec
or
outsl
incl
and
pop
push
sbb
imul
shll
iret
or
out
or
roll
jecxz
dec
sbb
xchg
push
fwait
xchg
arpl
or
enter
mov
push
pusha
pop
daa
fildll
icebp
lahf
into
cltd
les
scas
mov
clc
adc
add
imul
sbb
lret
pop
bound
nop
and
adc
decl
cs
cltd
mov
subb
stos
add
or
push
or
and
ds
stc
cwtl
mov
jmp
sbb
mov
mov
adc
sahf
pop
sbb
jns
push
add
iret
mov
or
xor
mov
and
and
rcr
cmc
push
cmc
sbb
lock
add
mov
mov
mov
mov
or
icebp
test
call
dec
popa
ret
inc
jl
mov
add
aad
mov
movsl
in
mov
mov
fstpt
lcall
push
sub
cmp
int3
xor
cmp
adc
cmp
sbb
fadds
adc
dec
push
push
jg
mov
push
jl
out
iret
mov
mov
test
sbbb
cmpsl
xor
stc
jge
fstpl
out
stc
adc
jg
add
pop
outsb
nop
push
mov
inc
jbe
fmuls
outsb
shll
scas
out
pop
ljmp
jbe
jl
fucom
or
loop
jo
ret
sub
aaa
xor
fsubs
mov
adc
test
testb
xorb
jmp
fistpl
ds
mov
nop
js
pusha
cmpsl
mov
mov
jne
adc
or
les
mov
and
jbe
lea
rclb
clc
call
sahf
loopne
popf
dec
jno
js
adc
cmpsl
add
xchg
fstl
inc
decl
sbb
pusha
dec
out
vpsubb
cmp
jmp
jle
adc
mov
mov
sub
or
repz
xor
xchg
lahf
jne
int
and
mov
fs
jmp
rorl
mov
pop
sub
test
cmp
inc
or
sub
pop
dec
mov
push
pushl
int3
mov
outsb
push
inc
popf
mov
nop
outsb
pusha
daa
sub
pop
inc
mov
loope
cmc
icebp
shrb
clc
orb
cmp
lcall
outsb
dec
xlat
scas
push
loope
mov
clc
sti
sub
sbb
je
jmp
sub
push
pushf
call
notl
rcrb
and
add
jnp
and
and
scas
mov
fldcw
movsb
je
data16
arpl
dec
push
cli
mov
pop
loope
dec
xchg
loop
lcall
incb
call
inc
les
arpl
repnz
ljmp
adc
xchg
out
jnp
pop
sbb
sub
fists
in
gs
lret
xor
rcll
clc
lcall
mov
scas
lds
sub
adc
push
rcrb
aad
cmc
repnz
jle
mov
inc
fisubrs
sbb
not
dec
push
mov
dec
les
stos
in
mov
or
call
mov
sub
lock
pop
lcall
loopne
fnstsw
inc
push
dec
mov
sbb
gs
mov
adc
pop
pop
inc
mov
into
lahf
push
add
out
mov
sti
push
stos
cli
jg
scas
push
adc
fldenv
wrmsr
cld
clc
pusha
outsb
outsb
shr
cmp
push
test
enter
lock
xor
incl
fidivrs
sbb
ret
sbb
into
out
adc
sub
inc
cwtl
pop
jg
aam
pushl
loopne
fistpll
stc
sbb
lods
cmp
mov
pusha
ljmp
mov
push
push
gs
push
mov
mov
push
int3
mov
test
sbb
leave
mov
ret
lock
xor
jns
aad
pop
xor
and
call
bound
xor
inc
push
push
xor
pop
mov
pusha
pop
xor
incl
test
int
mov
sub
data16
mov
enter
cmp
lret
xchg
popa
call
cmp
jg
add
fnstenv
xchg
ljmp
scas
sbb
pop
sar
sub
aas
jecxz
pop
pusha
ja
popf
scas
mov
call
loop
out
and
cmp
adc
sbb
fs
pop
int3
enter
loop
pop
inc
xchg
rcr
popf
inc
mov
or
mov
enter
xchg
sub
out
push
xor
dec
shl
ja
lcall
add
enter
lcall
lcall
popa
push
xor
sub
push
cmpsl
mov
fwait
inc
xlat
loope
pop
pop
adc
dec
pop
loopne
mov
out
stos
sub
test
mov
out
or
mov
iret
and
xlat
lcall
push
addr16
loope
adc
and
and
scas
clc
cmp
je
subb
jg
ljmp
mov
js
aam
fldl
pop
incl
mov
hlt
lret
add
in
inc
fdivl
xor
sahf
xor
in
xchg
add
out
jge
or
nop
cmp
adc
cs
decl
pop
loop
xorb
sahf
mov
sub
sub
rorl
cmp
jo
incl
sub
cmp
lea
jmp
aas
jo
pop
xchg
js
push
fs
fcomip
call
mov
push
mov
push
out
mov
outsl
jns
xor
ljmp
jmp
add
std
sub
call
enter
das
shr
gs
lcall
cwtl
inc
addr16
mov
adc
cmpsb
cltd
enter
pop
loop
lcall
out
jmp
dec
out
sub
and
add
in
sti
push
pusha
aaa
inc
mov
int3
xchg
mov
cli
das
cli
mov
jbe
inc
cmc
lea
into
je
mov
mov
cs
decl
adc
dec
and
xchg
in
xor
movsl
pop
es
in
fistl
add
cmp
loope
mov
jns
jno
mov
push
jge
jg
sbb
push
out
push
xlat
shlb
mov
mov
test
xchg
ret
sbb
add
cmp
aaa
lahf
test
cmc
cmp
loopne
loop
sub
dec
stos
or
hlt
incl
loop
inc
mov
inc
scas
cmp
outsl
xor
dec
fstp
add
sbb
mov
sti
loopne
mov
decl
mov
sbb
xchg
movsl
popw
jo
pop
sbb
cwtl
xor
jg
adc
dec
cmp
xchg
add
pop
inc
fsts
sbb
daa
pop
dec
cmp
lock
mov
decb
dec
icebp
inc
repz
rorl
popa
push
mov
push
imul
fsubl
scas
andb
jle
xlat
push
fcomip
stos
jmp
das
jl
jb
popa
dec
cmp
cmp
call
xchg
daa
addl
sbb
lcall
or
pop
pop
das
pop
or
inc
sbb
ljmp
insl
jle
cli
fistpl
loope
adc
sub
idiv
lods
js
xchg
mov
push
xchg
sbb
mov
and
out
dec
jg
decl
rol
xchg
lcall
popa
ja
lock
cmp
cmc
jbe
jne
sbb
sbb
xor
xchg
xor
adc
ljmp
rolb
aad
in
push
or
sahf
and
mov
in
ss
and
jmp
or
inc
sub
pop
jmp
daa
scas
clc
ljmp
or
imul
mov
mov
lret
dec
mov
pushf
in
inc
cltd
sub
adc
jmp
les
mov
mov
decl
shl
cmpsl
int3
arpl
leave
jl
xchg
out
mov
and
jmp
jg
sbb
add
fisttpll
pop
push
outsl
and
daa
cmp
fdivrs
fwait
sub
xor
mov
push
mov
clc
inc
jmp
addr16
out
jmp
or
mov
lods
cld
xchg
xchg
fimuls
sbb
in
fucom
stc
xor
mov
adc
dec
mov
and
ljmp
xchg
popa
movsb
divl
mov
aas
mov
mov
pop
sub
adc
push
jnp
scas
xor
mov
nop
sub
incl
mov
mov
cmp
mov
jno
mov
out
clc
jl
cltd
cmp
push
lock
inc
ret
and
adc
add
rcr
and
cmpsb
and
call
add
push
push
cmp
jg
inc
push
mov
add
fildll
mov
dec
pop
aam
jmp
shl
repnz
inc
aaa
call
ljmp
cmpl
pop
sbb
rcrl
shlb
push
mov
lock
lcall
xchg
xchg
les
push
sub
fucom
push
cmpsl
in
lret
ljmp
cmp
test
cltd
jns
fcmovbe
loope
jnp
sbb
scas
cli
adc
test
jmp
in
pop
mov
cwtl
popl
jb
idiv
decl
xor
shrl
sub
cmp
inc
xchg
test
inc
or
outsl
xchg
out
ss
inc
stos
lods
cmpsl
inc
mov
pop
xor
sbb
sub
lock
add
icebp
or
sbb
mov
xchg
or
sub
movsb
mov
sarl
inc
cs
lret
and
jle
lock
decl
jno
cltd
movsl
add
sti
adc
cmp
ficomps
push
mov
int3
lds
decl
add
jecxz
loope
push
xor
sub
es
fstpt
jnp
dec
clc
jae
hlt
popa
push
pop
sub
pop
cs
jne
sub
add
lcall
addb
popa
aad
push
pop
inc
in
sqrtps
addr16
aam
fstpl
ljmp
das
stos
mull
dec
jecxz
stc
hlt
cltd
inc
or
jg
inc
ffreep
daa
pop
mov
aaa
lods
shll
cltd
pushf
nop
shll
insl
nop
cltd
insb
mov
mov
inc
lock
mov
pusha
ret
jns
push
mov
push
adc
ljmp
xchg
xchg
mov
xchg
mov
bound
call
adc
idivb
arpl
sti
mov
inc
push
arpl
dec
sub
pusha
lret
jbe
push
enter
pushl
js
xchg
push
fs
jg
sbb
scas
xor
out
incl
inc
out
iret
sahf
sbb
cmpsl
bound
mov
xchg
sbb
aas
push
fsts
cld
bound
jp
add
mov
and
dec
fisubrl
aam
jecxz
lock
into
jbe
fwait
push
cmc
cld
lcall
cld
or
dec
pop
pop
xlat
sub
jb
mov
movsl
cmp
lcall
dec
popf
cmp
into
pop
icebp
imul
and
int3
mov
mov
inc
cli
mov
es
push
jbe
ljmp
xorl
cwtl
xchg
adc
mov
push
pop
rol
fs
pop
jg
fwait
add
aas
or
ss
inc
scas
dec
xchg
or
mov
ficoml
mov
andb
cmp
push
push
add
mov
adc
pushf
jbe
in
mov
push
add
roll
andb
out
jg
jnp
and
inc
xchg
or
jmp
add
pop
std
clc
add
xchg
loope
movsl
adc
inc
ret
in
mov
adc
call
push
xchg
sub
cmp
or
jg
sub
cmpb
adc
icebp
or
insb
inc
or
inc
aaa
outsb
decl
add
mov
mov
insb
pop
inc
addb
mov
and
and
incl
jge
repz
out
mov
inc
cmp
out
xlat
mov
out
jge
or
mov
push
and
es
xchg
or
out
cmp
arpl
lcall
lret
sar
decl
mov
sub
in
ljmp
repz
orl
test
mov
jmp
add
sbb
add
sub
push
repz
add
stc
mov
push
or
mov
sti
and
movsl
repz
jne
cmpl
push
sbb
rcrl
movsl
iret
lcall
pop
sbb
out
jg
rcll
out
ret
ja
mov
in
rcll
or
repz
adc
std
nop
int
int
jg
je
push
repz
shl
cmp
add
mov
xor
fdivrs
mov
mov
mov
dec
inc
add
jg
mov
repz
js
push
loop
inc
xchg
int3
xchg
push
mov
pop
lcall
mov
fcmovbe
lret
in
sbb
cwtl
sbb
rcr
loopne
les
jmp
jne
pushf
inc
fs
lcall
outsb
nop
lcall
call
adc
jne
add
xchg
xor
adc
and
lods
pushl
ja
aas
xor
xchg
or
xchg
test
in
popf
jnp
roll
mov
cli
call
iret
aam
or
cmp
repz
imul
cmpl
repnz
add
lock
cmp
aad
lea
xchg
xchg
xlat
or
xchg
fwait
push
or
ljmp
push
ja
iret
sbb
inc
daa
iret
or
mov
aam
push
ljmp
cli
dec
xchg
adc
pop
jb
in
cmc
repz
repnz
pop
xchg
jnp
and
jmp
hlt
dec
negb
push
inc
arpl
sbb
xor
ljmp
mov
adc
jno
sti
xchg
mov
lcall
insl
hlt
adc
stos
aam
aas
aad
push
aas
inc
dec
push
xchg
push
add
test
cli
mov
dec
int
mov
dec
mov
aaa
jecxz
call
mov
stc
sbb
sti
cmp
jbe
xchg
jbe
mov
cli
pusha
jg
iret
cmp
insl
mov
pop
lods
inc
shrl
imul
sub
lret
repnz
push
insb
test
out
aam
mov
fidivrl
lcall
bound
xor
push
gs
pop
sub
inc
xchg
js
fcmovbe
push
cwtl
pop
stos
stos
cld
ja
pushl
bound
loope
adcb
cmp
pop
jl
xor
cmp
call
pop
adc
push
in
mov
mov
int
push
test
lods
popa
xchg
mov
dec
test
push
aas
cmp
or
jne
pushl
insb
addb
jl
lea
int
jg
sti
out
cmp
ds
mov
hlt
cmp
pop
test
out
inc
leave
or
scas
shlb
outsl
mov
out
and
nop
jp
push
std
pop
addl
movsl
sbb
clc
cmp
call
cmp
dec
or
pop
aaa
sbb
cltd
inc
aam
shrl
inc
sahf
push
cmp
xchg
clc
call
cmp
dec
out
out
pop
push
shlb
ja
insl
je
xchg
dec
mov
ficompl
in
shll
in
movsl
mov
inc
mov
inc
xlat
add
mov
xor
dec
mov
out
dec
xor
popf
rclb
aam
cmpsl
cmp
and
incl
sub
jp
or
xor
aam
jg
test
xchg
jg
mov
fiadds
fcomip
and
mov
in
cmp
push
cmp
stos
aaa
pop
or
decl
out
xchg
ljmp
xor
and
jae
jne
fistps
sbb
xchg
in
xchg
jns
mov
cmp
dec
xorl
jno
jecxz
je
decl
lcall
das
inc
lock
jle
out
and
xor
bound
mov
decl
push
ss
dec
test
incb
fucomip
cmp
cmp
push
push
popf
mov
andb
out
into
xor
leave
fsubr
scas
sub
dec
xchg
call
mov
aad
dec
xlat
cmc
es
sub
gs
add
push
push
lcall
cld
ljmp
sub
lret
push
ret
inc
addl
dec
lret
incl
mov
nop
nop
or
inc
roll
cld
std
sub
ljmp
lret
fwait
mov
xchg
ja
cli
mov
push
iret
push
arpl
mov
sub
xor
fwait
out
cli
ficompl
mov
push
pop
inc
insl
mov
add
pop
adc
jle
lahf
cld
mov
add
ljmp
mov
test
jg
push
push
jmp
insb
dec
pop
add
sub
jp
xchg
into
add
out
clc
call
in
jp
xchg
jns
mov
cmpsb
jae
and
mov
push
jg
and
mov
xchg
je
pop
pushl
or
outsb
jg
repz
nop
cmpsb
dec
icebp
mov
test
xor
aas
cld
nop
dec
lcall
lcall
mul
jmp
sub
shl
xor
test
rcl
push
pop
lock
lcall
jp
xor
xchg
xor
mov
inc
pop
sti
fadds
push
pop
icebp
ljmp
rol
cwtl
mov
data16
stc
push
and
sbb
lods
fcomip
sub
mov
pop
xor
and
out
xor
or
lret
aam
cmpsl
cmp
sub
inc
mov
jns
inc
call
mov
or
xor
gs
push
dec
arpl
push
xchg
addl
inc
decl
cmp
decl
xchg
lods
pop
xchg
sub
adc
dec
or
or
xchg
test
push
in
lcall
ja
mov
idivb
mov
pop
data16
mov
cwtl
mov
clc
pushl
xor
ss
mov
cmpsb
push
pushf
int3
inc
decl
test
cwtl
jbe
mov
shll
loope
mov
pop
mov
out
mov
ljmp
int
fbstp
ljmp
cmp
sbb
cmc
add
jo
call
pop
scas
std
mov
fdivrl
cmp
incl
je
xchg
and
insl
inc
jecxz
mov
icebp
mov
sub
cmpsb
push
mov
in
sbb
popa
mov
popf
iret
mov
jmp
xchg
cmp
cmpsl
mov
outsb
mov
test
adc
fiaddl
es
add
sahf
in
incl
ds
in
mov
jl
in
mov
mov
adc
jg
jg
ss
inc
mov
cmpb
lahf
sbb
mov
sub
xchg
mov
jmp
sub
xor
in
cli
pusha
and
fs
add
adc
lds
mov
test
xor
imul
call
mov
enter
xor
xchg
out
incl
push
push
outsl
add
add
dec
dec
pop
aad
imul
and
xor
adc
jmp
adc
int3
lcall
lea
icebp
push
and
xor
mov
inc
pop
cmp
xrelease
jle
dec
adc
mov
sar
jg
adc
loop
push
rolb
pop
inc
out
mov
sub
push
insb
pop
mov
test
aam
mov
call
inc
pop
pop
insb
xchg
adc
gs
cli
cmc
mov
add
js
or
out
incl
notl
mov
fmull
andl
xchg
decl
sahf
jbe
inc
out
ret
sub
mov
out
repnz
mov
jnp
sub
xchg
jg
jmp
or
loop
call
xor
pusha
mov
mov
cmpsb
jg
loop
int
or
inc
lock
scas
incl
les
icebp
adc
rorl
dec
jle
cwtl
shr
adc
cmpsb
call
pop
inc
imul
aam
nop
leave
xlat
mov
pushf
sbb
mov
call
push
roll
aam
mov
lret
cmp
dec
xor
shrb
inc
jnp
decl
mov
dec
and
lret
repz
and
mov
mov
scas
pop
push
aam
decl
ljmp
adc
pop
mov
xchg
jmp
adc
dec
fdivl
xor
fs
lods
data16
push
fisubs
lcall
jmp
push
xchg
mov
in
sarl
lahf
adc
push
cmpsl
adcl
in
or
pop
call
bound
cmp
fdivs
cmp
insl
xor
mov
and
mov
ljmp
iret
movsb
sbb
shlb
imul
or
mov
add
dec
mov
mov
decl
sbb
pop
ds
push
inc
sarb
call
push
push
jmpw
xlat
dec
mov
xchg
mov
pop
pop
imul
lods
test
adc
imul
ret
cmc
jg
mov
fcmovnbe
jp
mov
in
fdivs
ds
and
rclb
adcl
test
jl
jg
pop
je
pushf
dec
inc
jae
xchg
ja
rclb
pushf
mov
shl
ss
aam
inc
jmp
incl
jp
into
movsb
cmp
std
aas
sub
in
movnti
incl
mov
ja
or
mov
es
pop
daa
inc
cvtps2pd
cmc
std
cmp
xchg
sahf
mov
adc
mov
add
add
xchg
cltd
pop
push
fprem
incl
in
jo
push
xor
pcmpeqd
ret
mov
call
loopne
lcall
repnz
xor
push
enter
xor
pushl
les
mov
nop
jecxz
cmp
insb
mov
and
iret
and
bound
add
dec
cmpsl
cmp
add
jns
jbe
adc
mov
push
imul
int
int3
fsub
dec
fildll
nop
out
or
aas
dec
adc
lret
enter
cmp
or
dec
lods
dec
lods
lret
cmp
cmp
cwtl
add
inc
jno,pn
add
incl
push
jmp
mov
in
cmp
push
stc
xor
jae
jp
dec
jo
cld
clc
call
xor
testl
fldl
fisubrs
or
mov
dec
sbb
add
int3
cmc
pushf
ja
lret
dec
incl
lahf
loop
das
testl
cmpsb
mov
sbbb
jmp
push
in
jge
leave
dec
or
push
xor
sbb
fwait
push
imul
loopne
jmp
loopne
sbb
repz
lret
out
mov
lcall
mov
adc
incl
scas
pop
pushf
cld
pop
leave
mov
or
cmp
and
sub
and
gs
pop
int
lret
xchg
sbb
cmp
test
clc
mov
mov
pop
divl
jge
ret
pop
rorb
fdivs
ljmp
dec
pushf
jecxz
push
lds
incl
xchg
stos
sub
push
test
and
rorl
bound
ljmp
aas
rclb
push
mov
ret
rorl
das
scas
clc
pushl
repz
mov
mov
aas
notl
pop
fwait
push
pop
push
xor
faddl
inc
cmp
push
ss
add
pop
xchg
pop
jbe
fs
push
cmp
add
push
gs
pop
xor
or
es
cmpsb
and
pop
cli
xor
inc
and
sub
sahf
mov
decl
inc
jmp
mov
shr
int3
pcmpeqw
xchg
sub
adc
and
xor
pop
sti
ret
cmp
fldt
ljmp
scas
mov
xchg
out
lcall
loopne
pop
dec
sarl
nop
fs
sbb
ljmp
mov
jae
and
movsb
dec
dec
repnz
add
iret
cltd
insl
aad
mov
xchg
das
pushf
or
jno
inc
mov
insb
repz
or
ret
xchg
stc
cmp
rcr
pop
add
cmp
cmp
jl
je
push
inc
mov
cmp
stos
xchg
incl
xlat
pop
lcall
ss
push
xchg
cld
mov
stos
mov
dec
mov
insl
inc
dec
jnp
incl
mov
pop
sub
aas
mov
stos
sbb
shl
push
rcrb
xchg
and
ljmp
out
push
in
es
dec
mov
fs
decl
call
rep
xor
push
cmp
jl,pt
data16
lods
into
lds
pop
std
inc
mov
cld
adc
jl
cwtl
inc
push
jns,pn
out
fdivrl
jnp
mov
inc
and
fists
jg
test
ret
imulb
xchg
imul
xchg
into
mov
ljmp
mov
mov
cs
add
cld
jmp
les
pop
mov
pushl
je
xchg
dec
bound
xor
fildl
push
insl
aaa
cs
cltd
adc
in
das
cli
incl
adc
clc
loope
jecxz
add
xchg
outsl
push
jge
fimuls
std
in
ljmp
pushl
pop
cmp
sarl
cwtl
xchg
mov
imul
lock
test
ljmp
mov
push
stc
mov
inc
int
cwtl
jle
mov
pop
mov
jmp
pop
xchg
fs
add
xchg
fdivl
mov
or
and
int3
fsubrs
ret
pushf
cld
pop
and
adc
shrb
rcr
test
in
and
jp
jg
movsl
and
outsl
push
xchg
mov
dec
mov
lock
call
jnp
in
fidivl
mov
call
shl
xchg
pop
aaa
mov
xchg
das
and
aam
mov
dec
fldenv
jnp
adc
fnstenv
mov
dec
ret
dec
mov
dec
movsl
pop
lret
inc
pushf
mov
or
mov
daa
dec
add
fs
fwait
ja
jno
cld
and
add
pop
test
sbb
in
cmp
mov
jmp
lret
ja
ljmp
es
pop
and
movsb
xor
cmp
ss
ljmp
addr16
cmpb
push
mov
jmp
out
adc
or
fucomip
leave
leave
ds
sub
rclb
mov
pop
lahf
ljmp
mov
shrb
jge
andb
mov
ds
or
dec
je
sub
mov
insl
and
mov
adc
sbb
cmp
cmp
ljmp
jne
dec
inc
daa
push
stos
mov
push
mov
rcll
pusha
mov
xchg
and
lcall
mov
push
pop
lods
cmp
or
push
mov
repnz
cmp
xchg
test
out
mov
hlt
jb
mov
fs
cwtl
rol
sti
aam
sahf
jp
jp
adc
pushl
aam
xor
rorb
or
jecxz
pop
dec
scas
icebp
movsl
sub
jmp
push
jmp
pop
cmp
xchg
int3
stos
fldcw
std
mov
cmp
icebp
jnp
cld
jbe
mov
arpl
imul
test
xor
loop
or
mov
mov
inc
lods
pusha
repnz
push
nop
std
data16
popf
jb
gs
es
fists
ds
aam
movsl
fs
ds
mov
push
and
stc
sub
push
es
in
push
xchg
movsl
mov
hlt
pop
cmp
inc
hlt
ljmp
test
mov
mov
push
call
int3
into
dec
outsl
add
lods
or
dec
push
outsl
add
decl
jp
idivb
ss
jae
add
and
jecxz
sbb
lahf
out
movl
jg
sbb
ds
test
push
cwtl
mov
pusha
pop
pop
inc
stos
fsubrp
cmp
jmp
mov
subb
xchg
and
mov
xor
imul
lcall
shrb
push
dec
daa
decb
and
push
mov
shrb
out
mov
cmp
cmp
xchg
flds
aam
cltd
push
add
dec
cs
nop
mov
js
subb
dec
mov
sub
ds
push
test
xchg
mov
xor
or
in
iret
fwait
jmp
mov
sub
jmp
das
test
cmpl
scas
xlat
popf
xor
mov
sub
push
jecxz
pop
inc
mov
xlat
adc
jp
cmpsb
xor
sbb
clc
call
dec
mov
inc
lock
int
es
jo
mov
es
pop
pop
and
cld
stos
sub
pushl
xor
mov
ljmp
cmp
push
fwait
sahf
mov
pusha
xchg
scas
stc
or
mov
call
inc
test
dec
inc
insl
scas
ficoms
in
push
mov
cltd
int
add
decl
lock
cmp
hlt
mov
push
inc
mov
pushf
loopne
ss
lock
jb
cli
mov
hlt
sub
inc
or
inc
loopne
decl
add
xor
push
data16
jns
xor
jb
out
push
cmc
ret
orl
pop
pop
mov
dec
jle
movsb
pop
dec
nop
lock
clc
lcall
insl
orb
xchg
jmp
js
sahf
fwait
es
fmull
in
mov
push
mov
arpl
dec
dec
fldenv
pop
push
loopne
mov
movsl
aam
and
cmp
stos
xor
sbb
loop
mov
mov
test
call
into
icebp
int
or
jle
test
sub
movsl
nop
pop
push
bnd
jns
insb
mov
call
cmp
sti
sub
iret
in
jb
push
retw
xchg
mov
nop
push
loopne
adc
xchg
sub
scas
popa
loop
gs
xor
movsl
fbld
jno
and
push
fcomp
cld
push
sub
movb
sbb
fnsave
incl
add
je
adc
jno
mov
jg
jns
in
dec
xchg
ret
outsb
xor
pop
pushl
cmp
adc
cli
pop
inc
sahf
imul
pop
cld
and
dec
mov
aam
pop
add
insb
inc
js
lea
dec
jbe
dec
jmp
add
ret
inc
dec
push
or
int3
call
lret
subl
decl
nop
popf
mov
hlt
pusha
jno
ljmp
ds
adc
lret
sti
pop
cltd
jno
rolb
inc
enter
and
or
aas
xchg
jp
sbb
decl
or
addr16
mov
out
push
in
outsb
jbe
aaa
loop
jg
mov
push
mov
into
push
sahf
mov
outsb
mov
dec
cli
jp
xabort
cmp
or
decl
xchg
cmpsb
inc
je
mov
sti
push
leave
sub
cmp
cwtl
fcomip
pushl
lahf
cmc
mov
insl
out
xchg
mov
es
rcr
xchg
jg
call
fcomps
inc
or
lods
and
xor
mov
mov
add
mov
or
sub
loopne
jmp
mov
lret
mov
mulb
sti
dec
push
outsl
xorb
incl
push
sub
pop
in
in
fldcw
push
xchg
adc
leave
or
icebp
lods
shrb
xor
dec
ret
int3
in
addl
call
scas
dec
shl
push
pop
lods
mov
shrb
jecxz
mov
sbb
in
test
mov
sub
inc
adc
or
scas
insb
sbb
xor
add
push
fisttpll
mov
mov
data16
repnz
mov
cmpsb
orb
mov
sub
jmp
pop
dec
jge
repnz
mov
in
imul
js
sub
rolb
call
jle
pop
or
outsl
enter
sub
test
add
jg
fstpl
insl
adc
and
sub
jge
movsl
mov
mov
lcall
mov
cmp
sbb
adcl
in
in
push
lret
sarl
cmp
das
call
decl
dec
std
mov
inc
xchg
xor
and
push
jge
decl
mov
add
fldl
jns
sub
in
cmp
aas
xchg
in
lcall
sub
shr
das
arpl
cmp
add
addr16
fidivl
push
mov
pushl
pop
mov
decb
out
mov
mov
adc
add
mov
add
sub
xor
lret
fwait
popf
test
jns
fwait
xchg
pop
jg
fmuls
push
cmp
mov
out
cmp
mov
jno
cmp
mov
and
arpl
loopne
ds
js
mov
iret
sub
scas
or
ds
fdivl
cltd
cld
push
adc
popf
movsl
and
inc
push
testb
dec
jae
loopne
mov
incl
push
mov
adc
sub
outsl
mov
sub
sbb
int3
decl
ret
pop
mov
roll
push
push
insb
push
inc
fxtract
inc
adc
js
ljmp
mov
lock
pusha
hlt
jle
sbb
or
and
arpl
inc
jg
popa
imull
test
lods
inc
cltd
mov
or
mov
adc
xlat
lret
cld
adc
ficompl
subb
jg
fildl
push
mov
ljmp
stc
and
out
push
es
js
imul
xor
xor
mov
insl
mov
aaa
ljmp
lock
cs
cmpsb
clc
lds
mov
jmp
clc
ret
jge
repz
mov
push
and
adc
push
mov
inc
ljmp
pop
push
int
out
xor
xchg
mov
push
loop
ss
fcoms
stc
ljmp
aam
popf
dec
dec
pop
lret
insl
in
out
and
out
ja
loopne
jo
gs
call
fs
mov
mov
cmp
mov
pop
jg
inc
mov
or
pushl
les
inc
ret
jae
call
xchg
and
test
pop
fidivrl
lcall
or
pop
add
fld
mov
or
leave
fwait
and
insb
rorb
fisttps
sar
ljmp
rcrb
sbb
dec
cmp
cmp
fldenv
or
mov
lods
test
xor
mov
stos
test
nop
pop
add
jmp
jnp
dec
adc
push
sarb
push
mov
call
sbb
mov
pop
inc
repz
xor
dec
sub
rorb
call
and
fsts
fisttps
popf
cltd
jae
aaa
or
mov
test
int
movsb
mov
in
inc
and
and
xor
in
out
cmp
xor
stc
je
aas
dec
inc
cwtl
inc
dec
idiv
call
mov
sub
xor
jg
aas
fsubr
orl
sub
lock
decl
gs
pop
imul
hlt
push
xlat
xor
insb
push
jb
pop
jp
iret
or
xor
adc
cli
fmuls
mov
test
mov
mov
adc
dec
mov
insl
sahf
mov
ljmp
mov
xchg
sub
imul
and
push
js
ljmp
dec
xor
shr
loopne
add
mov
in
sub
mov
lods
push
dec
cmpsb
jne
hlt
or
push
cli
test
rcrb
lcall
xor
push
dec
mov
mov
jmp
jmp
jae
xor
repnz
xorl
test
stos
push
jnp
rorb
sti
incl
fidivrl
dec
add
xchg
icebp
inc
imul
ds
stos
xor
es
decl
sahf
cmpsl
cltd
sbb
inc
pop
mov
jg
sbb
add
dec
or
sub
call
cld
cli
out
rcll
imul
dec
lret
jne
pop
and
inc
into
sub
mov
inc
pop
adc
sub
inc
sub
outsb
cli
push
sub
and
xor
lcall
data16
or
mul
ds
mov
mov
outsl
jp
cmp
pushl
adc
xchg
sbb
xor
test
ja
cld
ja
ljmp
lahf
xchg
cmp
push
and
adc
testl
insl
push
push
mov
sub
mov
dec
and
jg
incl
xchg
testb
fidivrs
sub
and
inc
sub
add
incl
adc
sbb
in
dec
icebp
push
adc
and
mov
mov
popf
fwait
xchg
test
je
jb
repz
sbbl
das
jp
ret
jae
insl
adc
cwtl
popf
xchg
sahf
lret
mov
pop
ss
divl
mov
adc
insl
cmp
std
dec
push
pop
jo
lahf
jns
adc
jne
call
incl
cmp
add
lods
lahf
insl
loop
xlat
jns
jg
mov
stos
movsl
stos
std
ljmp
sbb
push
xor
pop
mov
mov
ret
cmp
add
adc
cmp
ja
push
ficoms
loopne
outsl
cmp
sub
cmpsb
les
inc
dec
sbb
jg
add
and
lahf
shlb
cltd
fwait
mov
dec
ds
enter
jmp
andl
es
nop
sbb
clc
stos
insb
shll
int3
decl
xchg
mov
xchg
mov
testb
cmp
outsl
clc
ffree
insl
dec
sbb
imul
jnp
push
cwtl
into
inc
and
mov
pop
ljmp
shlb
rcrb
jle
arpl
or
jae
addr16
fwait
or
repnz
pop
decl
insl
test
mull
fdiv
jno
mov
mov
lcall
xchg
iret
scas
push
fstpt
insb
cpuid
in
mov
sbb
call
jne
mov
jbe
clc
mov
mov
pop
loopne
sbb
or
mov
lods
fistpl
lcall
rolb
mov
mov
fcomps
cltd
rclb
sbb
cld
in
gs
ljmp
lret
outsb
push
mov
push
scas
mov
mov
sub
sub
idiv
lcall
roll
sti
das
test
and
ffreep
push
or
stos
xchg
cmp
mov
icebp
pop
aas
lcall
fbstp
aad
jl
sbb
inc
push
cli
clc
inc
add
jp
mov
ja
sbb
cli
fbld
aaa
inc
adc
push
leave
out
sahf
je
jmp
fsubs
cmp
dec
pop
dec
aad
iret
sbb
ds
decl
outsl
jg
inc
fucomi
add
push
hlt
out
sub
lea
jle
sub
incl
cmp
mov
cmp
xchg
mov
push
std
cmp
push
push
repz
xor
aaa
cmp
jae
cmp
cmp
jbe
xor
cmp
insl
dec
and
jb
clc
decb
or
outsb
call
fimull
fnsave
mov
ljmp
and
pop
pop
inc
inc
test
xor
je
int3
push
addr16
rcll
adcb
inc
inc
sarl
mov
jp
ret
rcrl
cmp
jb
leave
pop
fisubl
daa
or
outsl
clc
aaa
sbb
xor
add
int3
lret
mov
inc
stos
jnp
stos
mov
mov
xor
clc
aaa
int3
orl
xchg
test
jmp
outsl
push
dec
je
pushf
mov
dec
pop
push
mov
sub
imul
lea
outsb
insl
xor
xorb
out
rorl
loope
push
les
pushl
jne
sub
jle
push
cltd
leave
jbe
sub
int3
pusha
das
adc
cmpsl
aad
mov
ja
out
shll
sub
xchg
and
push
or
shrl
sti
push
das
test
sub
xchg
aam
mov
arpl
mov
sub
dec
imul
mov
jnp
movsl
sbb
call
fists
les
pop
adc
or
lock
stc
psubw
int3
ret
jmp
xor
dec
into
decl
mov
push
jno
in
mov
add
and
pushl
pop
mov
lea
shrl
mov
adc
push
mov
cltd
mov
scas
mov
cld
cmpsb
or
ss
mov
jns
jne
push
mov
insl
ss
jl
jmp
insb
xchg
or
test
ficomps
in
lcall
push
jge
xchg
test
test
js
jp
js
jmp
push
call
stc
xchg
xor
aas
inc
andb
inc
sub
add
test
cli
pop
xchg
xchg
sub
adc
shr
jg
decl
mov
in
dec
mov
jle
outsb
add
data16
pushl
incl
push
push
leave
jae
xchg
clc
daa
mov
mov
mov
test
mov
sbb
daa
mov
push
enter
push
push
adc
icebp
ss
das
repnz
mov
pushl
lods
gs
sub
adc
inc
in
push
loope
cs
ret
das
xchg
add
outsb
push
mov
call
adc
jbe
popf
push
xchg
add
data16
test
dec
pop
or
shlb
pop
testb
lcall
xor
mov
lcall
cmpb
ret
mov
fwait
xchg
jnp
inc
jnp
notb
cmp
std
push
add
popf
sub
int3
sbb
out
flds
dec
adcb
inc
cmp
into
faddp
enter
jg
int
pop
outsb
add
add
aam
es
inc
jecxz
ss
std
fcomip
jmp
jp
test
inc
data16
lods
mov
pop
cmpsb
cmp
xorb
shll
lcall
imul
or
cmp
sbb
jg
mov
and
in
lcall
adc
pop
mov
push
pop
movsl
fdivl
aad
mov
rcll
cli
out
leave
mov
or
ficoml
mov
add
mov
subl
or
jmp
add
pop
leave
frstor
into
lahf
fcoms
mov
sbb
decl
pop
cmp
inc
pop
and
xchg
add
scas
cmp
dec
imul
int3
scas
mov
int
outsb
sahf
mov
out
lret
inc
fdivs
loope
lcall
push
stos
and
inc
push
adc
push
test
shr
push
cmp
mov
push
pop
sub
jns
xor
loop
arpl
sbb
xor
repnz
in
incl
jns
push
cmp
lea
dec
xchg
out
or
jns
addr16
mov
frstor
lret
push
or
cwtl
jge
dec
imulb
mov
xor
sbb
lods
fisubrs
inc
test
push
adc
arpl
popf
xor
gs
and
stos
jnp
clc
insl
mov
jg
imul
mov
pop
dec
fsubs
loop
inc
xchg
jmp
je
in
pop
dec
lcall
lcall
gs
pop
aam
in
inc
test
xor
xor
mov
mov
or
into
in
les
lret
xchg
pop
rorl
add
xchg
out
and
call
shlb
movsl
xor
xchg
inc
jae
iret
scas
dec
or
test
call
xchg
icebp
aas
das
sub
dec
aad
aas
mov
sub
sub
cmp
sbb
pop
ljmp
cltd
push
loopne
pop
lret
xchg
call
adc
xor
fists
jp
xor
jns
cmp
lcall
iret
jl
mov
stc
add
push
ljmp
pop
out
push
roll
incl
mov
xor
pop
in
popf
add
inc
jmp
add
fistps
in
dec
push
test
mov
push
adc
out
das
xor
sbbl
push
into
mov
daa
mov
mov
inc
jl
ja
hlt
push
cmc
repnz
inc
jne
mov
sub
mov
inc
ja
mov
adc
xchg
scas
lods
repz
aaa
ljmp
ja
or
cmp
jno
arpl
nop
mov
cs
insb
sbb
pop
mov
repnz
cmp
fisttps
pop
incl
dec
movsb
mov
lcall
sarb
ret
or
in
adc
cmp
js
xor
mov
inc
fidivrs
push
daa
xor
pop
fwait
sub
jns
pop
ljmp
fs
cmpsl
sub
scas
daa
repz
movsl
push
adc
adc
std
and
arpl
sub
mov
lret
xor
cmp
mov
pop
dec
enter
pop
movb
add
push
clc
in
sbb
jp
rcrl
jnp
mov
lcall
fdivl
es
mov
lcall
lock
daa
sub
adc
adc
sbb
sbb
fisttpl
ficompl
mov
out
xchg
es
iret
andb
dec
pop
fldl
pop
push
mov
push
imul
decl
lock
mov
jae
imul
xor
xchg
and
or
lcall
shr
enter
sbb
jns
mov
lret
push
imul
fnstcw
mov
push
arpl
rol
push
sbb
pop
mov
mov
or
jmp
decl
imul
test
jg
outsb
stc
mov
jns
lods
mov
insl
roll
rcl
push
xor
mov
loope
ljmp
or
iret
push
push
mov
ds
push
cmp
in
xchg
xchg
push
pop
ljmp
sbb
call
mov
incl
xchg
mov
sub
repz
insb
lcall
jmp
outsl
xor
je
jg
mov
pusha
out
dec
sub
adc
std
xchg
dec
dec
mov
clc
fisttps
aam
cmp
hlt
adc
js
insb
jmp
adc
cmp
dec
movsl
insb
add
je
add
gs
test
and
aaa
aaa
cmpsl
decl
adc
lds
xlat
and
mov
lock
dec
out
std
pop
ret
jl
divl
in
pop
push
nop
add
adc
jno
lret
xlat
inc
pop
in
cmpsl
ret
pushl
or
sub
rcrl
jecxz
icebp
sub
adc
jg
jbe
adc
jne
int
and
adc
add
mov
ljmp
mov
addb
inc
push
or
imulb
pop
jo
gs
subb
inc
and
sub
lods
ret
cmpsl
xor
fcos
incl
ljmp
cmpsb
push
jne
pop
cmp
push
inc
xchg
rep
loopne
cmp
incl
outsb
xorb
mov
aaa
std
stos
aam
gs
imul
sahf
test
xorb
incl
mov
leave
loopne
xor
inc
jbe
push
jno
decl
cmpsb
add
add
xor
push
cli
vmread
je
push
mov
mov
and
loope
jb
test
jg
push
addl
add
mov
mov
lea
jle
sahf
sub
rcrb
jmp
incl
and
mov
push
pavgb
fstpt
push
cmpsb
xchg
mov
dec
mov
call
std
jo
mov
xor
xor
pushf
mov
fildll
test
mov
cmc
jmp
fs
lret
rcl
xchg
and
aaa
xchg
mov
fidivs
pop
das
clc
call
mov
test
fmul
stos
icebp
push
add
mov
mov
xlat
pop
dec
push
loopne
icebp
into
jg
je
incl
cld
xchg
cmp
or
mov
arpl
sbb
cltd
pop
ljmp
loopne
sub
and
xor
jo
test
xchg
jg
sbb
cmp
xor
test
and
sub
pop
fcomps
xor
jmp
and
sbbb
adc
pop
scas
aad
xchg
xchg
cmp
test
push
mov
lods
inc
ds
lahf
mov
or
mov
push
mov
mov
xchg
sti
or
lock
sbb
xchg
sbb
dec
xchg
adc
pop
movsb
rcll
call
xor
test
inc
test
stc
loop
jmp
xor
daa
aaa
scas
jb
popf
and
imul
bswap
jo
xor
mov
sbb
rorl
out
pusha
pop
ss
pop
hlt
push
mov
jmp
stos
jmp
ljmp
outsb
cs
lea
push
mov
scas
adc
cli
pop
je
push
lds
data16
ljmp
sar
mov
sub
jbe
sub
fwait
push
subb
lret
adc
call
sub
sub
jae
outsl
sub
ss
pop
faddl
sahf
xchg
es
mov
enter
mov
fdivr
push
sarb
mov
add
jno
dec
xor
js
jmp
and
aaa
dec
and
or
mov
pushl
movsl
mov
cltd
and
sub
or
jmp
pop
call
jns
xchg
mov
inc
icebp
xchg
sti
mov
adc
pushl
cld
sbb
lds
dec
adc
mov
mov
add
xchg
test
fbld
and
mov
xchg
insl
and
and
mov
mov
ljmp
mov
loop
or
shlb
movsl
popa
arpl
cld
xchg
daa
and
outsb
and
sbb
cmp
fildll
dec
lcall
mov
mov
push
mov
push
mov
xchg
in
pop
je
sbb
clc
pushl
jne
testl
mov
xor
xchg
rcrb
fndisi(8087
mov
jecxz
jo
pop
pop
sbb
ljmp
sub
inc
lahf
pop
icebp
mov
and
fs
iret
xor
mov
jg
call
inc
int
std
xor
pop
lea
mov
inc
inc
jecxz
pushl
push
jb
and
sub
xor
decl
xor
cmpsb
das
mov
into
and
dec
jp
stos
in
lock
sarb
adc
decl
gs
adc
push
jnp
loope
or
addr16
mov
lcall
sti
std
mov
and
lock
fdivr
loopne
dec
inc
out
inc
add
mov
jae
inc
fstpt
add
add
filds
add
or
pop
pop
push
or
or
or
or
mov
adc
push
adc
adc
push
adc
adc
sbb
adc
ficompl
adc
adc
add
data16
or
pop
adc
scas
add
or
sub
movsb
mov
sbb
insb
add
sahf
add
les
add
out
add
add
sub
sbb
cmp
add
incl
add
push
adc
pop
and
xor
inc
mov
adc
xor
pusha
add
loopne
add
mov
dec
mov
or
inc
daa
pop
add
or
xor
xorb
and
pop
inc
and
or
adcb
add
add
add
and
sbb
andb
into
add
add
scas
cmp
adc
out
rolb
adc
pop
popa
jno
and
adc
cs
or
xor
adc
loope
sbb
cwtl
jb
mov
addb
adc
push
xor
js
cltd
and
lock
or
std
or
add
lds
cld
cli
stos
mov
call
ret
jg
jge
ficompl
cmpsl
xor
mov
test
pop
lahf
sbb
sahf
aad
std
movsl
jecxz
cli
pop
mov
add
outsl
push
stc
or
xchg
jg
or
sub
addr16
xlat
jmp
out
or
push
push
xchg
add
repnz
inc
lock
scas
ss
jg
xor
fdivrp
cmp
fisubrl
in
mov
orb
int3
lcall
out
pop
sbb
mov
push
pop
pushf
pop
pop
mov
popl
movb
rorb
sti
ret
scas
adc
mov
xor
lods
scas
xchg
test
jmp
push
aam
and
sbb
sarl
and
roll
fwait
movsb
jmp
push
lret
push
out
and
stos
lahf
fdivs
aas
repz
cmpsb
pop
outsl
icebp
mov
lcall
lock
std
or
pop
mov
daa
test
aaa
dec
dec
pop
push
out
outsl
loope
loope
rorl
mov
decl
arpl
push
out
or
pop
pop
push
sahf
pop
clc
sti
jg
jno
lock
jg
inc
idiv
pushl
jg
xor
hlt
and
xchg
jmp
sbb
call
lods
mov
out
pop
jb
mov
decl
push
mov
sub
pop
mov
jl
rorl
adc
push
gs
jg
hlt
push
add
stc
in
div
mov
sbb
mov
sar
andl
aas
icebp
testb
mov
inc
push
pop
xor
jns
mov
in
repnz
jno
pop
mov
jg
jg
scas
cld
or
push
inc
sbb
paddb
incl
outsl
sbb
jb
adc
push
lock
lods
jp
testb
sbb
into
fcomps
push
lcall
sbbl
into
andl
aas
loopne
cli
adc
aaa
xchg
in
aaa
fldln2
fildl
stos
es
or
dec
fisttpll
out
aas
std
push
push
idivl
cmp
sub
inc
scas
inc
mov
jg
je,pn
sub
jg
imul
mov
mov
inc
jmp
jne
gs
jns
enter
or
push
pushf
push
scas
xlat
sub
cmp
sti
punpckhbw
pusha
stos
subl
xor
jmp
xchg
pop
clc
pop
hlt
mov
xor
movsb
add
lea
jg
xor
cmc
jmp
std
xorb
jg
add
dec
stos
js
ret
das
pop
pop
pop
shlb
out
call
call
cmp
lock
or
sarb
std
pop
les
cli
mov
mov
inc
arpl
stos
mov
and
insl
add
leave
push
scas
loop
jge
push
shrl
ljmp
mov
push
mov
adc
and
sbb
xchg
jo
and
out
incl
icebp
push
iret
sti
cmp
ficoms
aam
sahf
imul
fcmovnu
rorl
xchg
movsl
decl
enter
cld
call
mov
outsl
inc
shrb
lods
hlt
cmp
fistl
mov
adc
push
movsb
xchg
or
mov
push
movsl
add
ret
fcmovu
ds
cmpsl
scas
popa
in
pushl
mov
xlat
pushf
cld
aas
clc
jge
jnp
sbb
outsb
mov
sbb
jecxz
inc
call
mov
adc
adc
push
jo
pusha
imul
add
mov
das
adc
cmp
xchg
mov
cwtl
jg
xchg
ftst
jbe
xchg
and
add
jae
shrb
shlb
out
aas
stc
add
out
gs
jno
fidivrl
lock
adc
pop
cld
addl
std
les
cli
adc
and
lahf
fdivr
stc
int3
mov
mov
mov
pop
mov
nopl
mov
dec
incb
fisubrl
aas
mov
push
sbb
push
inc
or
testl
mov
jg
mov
movsl
ret
clc
test
mov
mov
fwait
inc
rol
push
jmp
sar
push
sbb
stos
icebp
pop
incb
jno
adc
push
inc
jecxz
std
outsl
sti
push
sbb
sarl
adc
loopne
and
rorl
mov
jg
push
imul
dec
push
in
aas
mov
fisubl
cmp
fsubrl
lock
and
incl
sbb
clc
xchg
das
clc
jmp
or
and
mov
adc
mov
push
rcrl
rolb
pop
inc
jb
fistpl
adc
call
ret
lock
data16
pop
nop
mov
out
repz
inc
sti
arpl
daa
std
or
sbb
mov
inc
cmpsb
popf
push
loop
sbb
or
imul
jmp
divb
iret
dec
xor
fsubr
fistps
lds
fidivrl
jg
pop
insb
insb
adc
ja
dec
mov
sub
jge
xor
lahf
les
sbb
jg
mov
push
cld
addl
sbb
mov
lahf
outsl
int3
push
sbb
mov
push
mov
jle
xchg
popa
out
out
outsl
xchg
inc
test
in
jge
ret
call
loopne
push
test
jbe
outsb
hlt
sti
fsubs
shl
dec
jp,pn
cmp
dec
adc
lahf
mov
or
out
lcall
idiv
testb
icebp
push
cld
mov
adc
stos
pop
jg
pop
shrb
add
pop
call
sarb
adc
xor
pop
mov
mov
gs
pushf
lea
jp
jnp
jecxz
mov
lds
push
pop
adc
imul
or
inc
pop
xor
idiv
jmp
rorb
and
add
cmpsl
push
sbb
mov
pop
inc
cmpsl
enter
push
incl
fwait
into
test
xchg
movsb
insb
or
and
xchg
fisubrs
add
insb
test
aas
repz
sbb
lock
in
jmp
out
sbb
aaa
clc
jp
jb
push
std
mov
or
scas
subb
lods
out
jne
or
cmc
mov
push
mov
push
fsubrp
dec
sahf
enter
fcmovb
inc
adc
inc
loopne
test
out
shlb
out
pop
or
or
dec
ss
mov
leave
inc
lods
movsb
or
repnz
mov
cli
daa
pop
and
imul
cmpsl
lret
pop
in
cmp
cld
outsl
incb
mov
pop
lock
jmp
hlt
dec
mov
in
scas
sbb
xlat
inc
aas
mov
jg
mov
mov
addr16
sbb
cld
daa
jp
std
adc
cld
jbe
inc
cltd
or
mov
ret
nop
cmp
das
incb
add
pop
pop
div
cld
idivl
fcomi
add
stc
lahf
loope
jae
jmp
shrl
je
jge
std
scas
bound
jg
stc
add
out
leave
xchg
inc
icebp
mov
loope
mov
cmpsl
popf
sti
sub
mov
ja
push
outsl
das
jge
fwait
dec
das
add
cmpsb
cmp
call
std
add
decb
adc
mov
and
jo
adc
call
mov
add
jg
push
mov
inc
add
nop
test
aaa
std
fisttps
fdivp
push
dec
inc
sbb
xchg
fimull
cmp
aas
icebp
ret
ror
sbb
jae
arpl
adc
jbe
mov
mov
pop
clc
loope
loope
mov
or
scas
sbbb
jg
roll
jno
sbb
and
fmull
cld
pop
cmp
cmp
repz
sbb
pop
gs
lds
dec
sarl
pop
out
jg
jno
ret
jmp
cmp
push
sbb
inc
push
dec
jge
pop
clc
call
sbb
mov
ds
inc
mov
in
sbb
xchg
imul
add
push
icebp
jmp
outsl
jmp
std
mov
daa
jmp
faddl
add
lock
mov
test
bound
add
push
imul
pop
stc
push
dec
out
fstpt
mov
enter
das
inc
pop
add
fsts
sub
stos
loopne
or
add
incb
sti
push
sti
pop
inc
add
sbb
or
nop
mov
adc
iret
and
test
fwait
pop
popf
addb
and
push
and
dec
addb
negb
and
add
sahf
jae
and
ss
daa
ss
jo
mov
push
add
fidivrl
add
pop
mov
cmp
jg
inc
add
pop
mov
add
dec
orb
mov
lahf
pop
adc
or
inc
push
iret
adc
ret
and
scas
jle
test
jg
pop
iret
mov
add
nopl
push
ret
jns
scas
dec
les
dec
and
mov
lret
jg
push
add
xchg
movsl
push
daa
add
xor
dec
and
cmpsl
push
and
cs
push
movsb
out
test
push
stos
jg
aas
xlat
push
and
push
test
and
imul
push
jl
push
push
inc
pop
pop
add
mov
pop
std
mov
lahf
sbb
add
mov
pusha
sbb
mov
push
ds
push
mov
ljmp
add
insb
or
lret
imul
imul
add
push
sub
lret
mov
or
mov
jbe
jae
dec
mov
push
mov
stos
pop
stos
mov
jo
jb
ss
add
jo
mov
push
mov
jno
add
outsl
push
shll
fidivrl
iret
outsb
or
push
ret
je
fidivrs
push
pop
shr
jge
fisttps
add
fwait
inc
ds
outsl
in
movsb
push
add
mov
sbbl
push
mov
pop
push
arpl
push
push
push
add
jne
push
aam
push
ret
add
sbb
mov
mov
push
pop
dec
add
jbe
push
data16
add
pop
aaa
add
push
push
scas
jns
iret
shlb
lret
stos
aas
jge
mov
inc
ja
push
push
xlat
jne
add
mov
push
fdivs
push
aad
push
xlat
ja
fnsave
jns
push
jp
jp
adc
push
fidivrl
sarl
ja
fnsave
les
je
jmp
mov
ljmp
xchg
in
xchg
sub
mov
cs
xchg
xor
xchg
push
setbe
mov
sbb
mov
ss
aaa
push
cmp
cmp
cwtl
push
cltd
cmp
cmp
pushf
cmp
lahf
push
push
out
popf
xchg
popf
aas
push
sahf
inc
push
lahf
inc
sti
pop
mov
mov
push
jecxz
push
mulb
mov
test
shl
ds
repz
lock
hlt
clc
stc
cli
icebp
cmp
repz
cld
std
incb
adc
xchg
stos
arpl
inc
jae
add
fs
jo
imul
fldcw
pop
add
pop
add
pop
sbb
pusha
xchg
sarl
adc
add
mov
add
add
or
add
in
add
outsl
or
or
add
lahf
stos
test
test
or
ficoml
ja
sbb
adc
sub
adc
add
pop
stos
femms
lods
lods
pop
jbe
add
add
imul
pop
pop
adc
rcr
or
lods
adc
sbb
pop
pop
scas
sbb
scas
scas
scas
mov
sbb
sbb
mov
mov
xor
inc
outsb
and
add
add
mov
push
sbb
jo
and
outsb
push
mov
mov
push
push
shll
mov
cmpsl
mov
mov
insl
push
addl
sub
mov
repnz
andb
mov
pop
xchg
pop
daa
mov
pop
test
mov
and
cmp
fsubs
cmp
cmp
cmpsb
add
mov
pop
xor
cltd
insl
push
pop
pop
or
or
add
mov
pop
xor
mov
pop
das
push
cs
xor
fbstp
xor
das
pop
push
push
xor
adc
pop
push
cs
dec
cld
incl
inc
inc
xor
adc
push
xor
push
push
popa
jbe
cmp
jl
jge
jno
xor
dec
rolb
xor
pushw
dec
dec
incl
add
mov
mov
cwtl
sahf
mov
pushf
fwait
lcall
xchg
mov
test
xchg
xchg
sub
es
pop
jle
ja
jns
dec
push
bound
js
ret
adc
xor
jne
je
popa
adc
bound
add
addb
inc
mov
add
pop
pop
scas
lods
pop
popa
mov
sub
dec
jle
xchg
pop
push
dec
add
mov
mov
dec
and
cmpsb
push
mov
xor
pop
movsl
mov
ja
jb
cs
adc
es
xor
mov
pop
outsl
sti
jne
out
pop
jbe
dec
sbb
and
jae
push
mov
xchg
jo
mov
mov
cmp
mov
inc
mov
xchg
jae
xchg
jp
inc
push
popf
inc
mov
aaa
add
xchg
mov
lahf
stc
jno
lret
push
bound
mov
mov
cmp
lahf
inc
inc
push
sahf
mov
insb
add
ds
xchg
outsb
add
xchg
xchg
pop
push
test
cmpsb
dec
push
dec
push
insb
ljmp
movsb
jae
add
jb
shll
outsl
cmp
or
pushf
push
rorb
add
lcall
aad
out
outsb
mov
dec
push
add
ja
sahf
jbe
add
fisttps
fstps
outsb
ds
push
add
and
data16
jp
add
js
mov
mov
fwait
test
shrl
insb
pop
outsb
push
outsl
mov
iret
push
ds
jno
add
jge
shll
fiadds
call
lods
push
lock
add
fistpll
add
mov
add
test
sbb
sahf
mov
xchg
out
in
push
jle
rorb
or
std
into
fnstcw
aad
push
divb
fildl
adc
xor
out
push
adcl
pop
mov
fistpl
incb
test
sbb
test
insb
mov
ss
mov
push
xchg
nop
and
out
rcr
adcb
sub
sub
aaa
in
add
imulb
push
xchg
repnz
xor
fidivl
cs
push
cmc
sahf
xor
lcall
aaa
cmpsb
pop
cmp
mov
aam
jle
push
cmpsb
scas
jo
test
sahf
pop
push
or
sub
shrb
jle
mov
fmul
mov
lgs
int
mov
mov
rcll
mov
sarl
push
aad
jle
data16
add
add
adc
push
dec
inc
sbb
cmp
je
dec
daa
xor
add
add
mov
movzwl
inc
fimuls
or
or
or
es
push
in
pop
nop
mov
add
adc
adc
ds
pop
enter
mov
mov
mov
xor
ds
xchg
push
mov
and
sbb
add
mov
add
and
cld
push
imul
mov
aas
and
sub
xor
insb
xor
aas
aas
cmp
cmp
adc
cmp
sbb
sub
ds
jbe
cmp
ficompl
inc
cmp
or
ds
mov
jge
lods
popf
dec
aas
adc
ds
xor
cmp
decb
test
mov
jbe
mov
ds
add
sub
ds
mov
ds
lods
stos
test
cmpsl
cmpsl
cmpsb
cmpsl
in
inc
clc
add
test
mov
sahf
ds
dec
add
xor
sub
sub
sub
sub
sti
mov
ss
and
inc
mov
push
push
push
push
push
inc
clc
call
insb
insb
pop
push
push
pop
push
push
push
imul
fs
das
pop
imul
nop
cltd
mov
call
mov
xchg
pop
cmp
insl
popf
mov
jge
jns
xor
outsl
jns
jle
addl
jo
outsb
pushf
sti
adc
push
lds
repnz
rolb
add
mov
incl
call
loope
loopne
aas
jl
push
add
cmc
repz
dec
xor
mov
add
aas
add
xchg
pop
cmp
test
add
mov
pushl
pusha
inc
add
mov
push
mov
fnstsw
repnz
out
add
addr16
add
add
mov
push
in
iret
sti
dec
sti
lcall
or
mov
push
pop
mov
jo
dec
lret
js
into
xchg
add
jp
add
mov
mov
test
scas
xchg
js
in
and
add
and
cwtd
in
imul
sub
xchg
push
sub
nop
sub
pop
xchg
das
push
xchg
xor
xchg
xor
xchg
outsb
lcall
es
jbe
negl
fcmove
addr16
insl
fst
es
push
lret
loopne
push
test
adc
std
into
fdivrp
imul
test
int
jg
jle
jge
add
inc
add
jg
inc
xor
dec
dec
dec
dec
dec
add
repnz
pop
or
add
push
dec
or
adc
cmp
adc
mulb
mov
add
push
stc
pusha
jg
adc
add
or
pop
pop
cmovg
std
pop
repz
sbb
inc
adc
cmpsl
aas
inc
inc
inc
adc
sbb
dec
add
dec
adc
inc
ds
aaa
aaa
inc
add
aas
cmp
cmp
daa
and
sbb
sbb
and
add
dec
ss
xor
cs
xor
sub
sub
jg
test
lods
mov
addb
mov
pop
inc
mov
data16
mov
mov
mov
inc
xor
in
add
outsb
mov
push
or
subl
pop
xor
out
add
and
pop
outsl
mov
cmpsl
mov
rorl
into
incl
loopne
and
jmp
test
push
es
sbb
outsb
sysret
shrl
pop
mov
add
ds
jmp
xchg
pushf
cmp
in
lock
add
xorps
jg
rorl
adc
pop
aaa
outsl
adc
pop
push
pop
mov
add
xor
sbbl
mov
out
cli
mov
cli
call
pop
les
add
pop
jg
and
add
addr16
xor
mov
adc
jg
sti
jg
add
mov
das
sti
mov
xchg
sbb
cli
jle
mov
inc
loopne
dec
sti
jg
adcl
xchg
adc
push
adc
push
mov
push
adc
jg
cld
jg
mov
nop
cld
mov
mov
roll
std
jg
and
into
jg
jns
and
jg
push
adc
or
xor
and
jle
push
add
inc
xor
and
sub
incl
addr16
inc
lods
decl
rcll
incb
sbb
pusha
data16
popa
xchg
sbb
jg
dec
add
incl
add
lea
jg
inc
insb
or
push
jbe
fsts
pop
add
jmp
int3
push
test
lret
sub
xchg
shrb
je
push
jmp
lods
scas
inc
cmpb
imul
addr16
inc
pop
jle
mov
inc
pop
dec
rcrb
test
pop
add
push
call
inc
pusha
sbb
pop
xor
jg
mov
lea
outsb
xor
xor
jg
sub
incb
rclb
jg
incl
pop
orb
in
jg
jle
test
ljmp
pop
lcall
pop
stos
pop
pop
pop
daa
aas
aaa
pop
insl
leave
inc
pop
pop
add
push
enter
aaa
add
or
push
jge
pop
test
jle
sbb
aam
jle
push
mov
cmp
bound
add
mov
push
mov
adc
mov
daa
push
arpl
pop
mov
xchg
inc
lea
out
mov
push
push
dec
lcall
inc
xchg
rcl
notrack
dec
les
xchg
nop
idivb
jle
lea
mov
mov
push
lcall
xor
fnstenv
jns
push
jne
push
push
jne
pop
push
jbe
fwait
adc
dec
out
push
jnp
push
jp
and
push
js
dec
jbe
jne
neg
pop
add
mov
sbb
pop
es
daa
aam
fsts
outsb
ljmp
daa
hlt
mov
jle
dec
xchg
pushf
push
incl
mov
ljmp
call
jmp
int3
ja
xchg
or
stos
xchg
mov
mov
fiadds
mov
sbb
dec
mov
inc
call
out
mov
xchg
xor
cs
aas
popf
inc
push
pushf
cmp
pushf
ds
cmp
adc
mov
xchg
xor
xchg
xor
sub
sub
nop
daa
ss
int
inc
out
in
mov
xor
aaa
outsb
jmp
adc
mov
lahf
push
jg
pop
fnsave
xor
je
cmp
sbb
xor
movb
es
pop
and
ss
cs
add
pop
ja
cmp
push
xchg
sub
fcmovb
pop
pop
ja
or
aaa
mov
add
add
sub
in
mov
sub
adc
jno
add
outsl
add
insb
sub
pop
or
cmpb
mov
negl
orl
lea
lahf
aaa
adc
popf
push
imul
incl
xchg
mov
sbb
test
cmp
adc
cmp
mov
icebp
jp
adcl
add
mov
test
fdivrp
decl
out
pop
xchg
cmpsl
pop
add
jmp
sub
and
outsl
daa
push
push
sbb
xor
inc
cmpsb
add
std
jp
add
jmp
syscall
mov
sub
xchg
lods
push
incb
xchg
or
add
lcall
or
mov
sub
insb
lahf
xchg
daa
cld
pop
das
pop
sub
and
jmp
adc
lcall
ret
pop
daa
std
out
test
add
adc
lcall
or
decb
sti
pcmpeqd
inc
popa
ds
pushl
ljmp
popa
or
call
sbb
inc
jmp
bound
movsb
sbb
inc
rorl
lods
test
sbb
sub
outsb
sqrtps
fdivr
or
mov
clts
add
mov
jb
and
iret
int3
shlb
incl
mov
sti
out
shld
pop
rorb
push
dec
pushl
pop
cwtl
sbb
iret
ljmp
lcall
pop
inc
rcl
add
cwtl
fdivrp
push
sub
add
lcall
mov
incl
call
call
incl
test
pop
cmpsl
mov
or
pop
stc
pslld
call
jg
adc
popa
out
cli
rclb
loop
call
inc
sbb
lcall
movsb
push
test
es
addr16
inc
pop
fcmovbe
pop
mov
fildl
inc
xorps
nop
sub
jmp
iret
data16
push
shll
roll
fiaddl
sub
sahf
ret
jmp
jmp
push
adc
jmp
in
fwait
in
ljmp
lahf
inc
inc
push
inc
pop
fwait
jbe
inc
pop
inc
pop
mov
ja
pop
sahf
movsb
dec
push
stos
push
popf
inc
and
dec
dec
inc
ljmp
mov
and
xchg
orb
push
shrb
je
fwait
dec
rcl
outsb
shrb
es
pop
ss
push
push
jb
dec
mov
das
push
iret
insl
and
popf
cltd
pop
daa
outsl
pop
imul
push
xchg
push
and
sub
pop
lcall
iret
dec
dec
pop
add
repnz
xchg
lcall
push
pushf
cmp
aas
decb
cwtl
xor
push
inc
push
xchg
mov
push
aaa
push
lcall
int
xchg
push
xchg
es
xchg
xchg
xchg
notb
sub
push
lcall
cs
callw
cwtl
in
fimuls
insb
push
lea
or
std
fmul
imulb
jmp
fstpt
push
jnp
jp
out
sahf
or
push
jl
or
jl
mov
mov
push
jge
jg
es
jg
mov
jbe
adc
fidivrl
push
dec
push
dec
repnz
repnz
jae
outsl
mov
add
fidivrl
push
mov
jnp
jge
in
incb
hlt
in
add
int3
outsb
nop
negl
inc
mov
mov
stc
sbbb
stos
mov
stos
push
lahf
push
adc
adc
outsb
fisttpll
pop
or
imul
aas
iret
add
dec
lahf
dec
mov
mov
in
inc
and
orb
fisttps
and
xchg
out
push
sub
iret
out
mov
cli
iret
fisttpl
clc
push
idiv
mov
jb
sub
jg
mov
shrb
sahf
icebp
dec
pop
cld
js
mov
sub
jg
mov
icebp
jbe
adc
repnz
je
daa
jg
mov
ja
cld
sbb
cmp
mov
or
inc
mov
add
sti
pusha
incb
out
xchg
inc
jbe
xor
jg
dec
in
shlb
shlb
jl
ja
dec
and
jge
and
or
pop
pusha
and
push
fsub
pop
push
sub
decl
nop
jle
mov
fidivrl
arpl
clc
cwtl
jne
sbb
push
pop
mov
pop
push
pop
or
aam
jne
scas
mov
xchg
ds
lcall
add
jns
mov
push
mov
insb
mov
push
jmp
xchg
jmp
mov
push
xchg
mov
std
test
loop
adc
xchg
out
sbb
loope
and
lret
jg
out
mov
push
leave
add
mov
ljmp
stc
inc
or
dec
xlat
push
cmovno
stos
push
add
sbb
sub
push
adc
stos
movb
xor
loopne
ret
iret
push
enter
loope
enter
inc
lock
and
adc
call
mov
adc
sub
inc
push
add
xor
into
pop
push
sbb
push
dec
jae
jle
push
and
sbb
push
sbb
ljmp
and
push
lcall
inc
adc
and
inc
add
mov
mov
es
xchg
sbb
push
add
or
icebp
add
push
gs
jo
lcall
ret
aam
or
and
xor
and
mov
cs
bound
cmp
shll
and
xchg
mov
and
pop
add
mov
xor
or
addl
in
lahf
jo
das
popf
add
add
xchg
movsb
outsl
jb
or
push
es
bound
add
mov
mov
adc
add
push
fs
add
pop
xor
add
add
shlb
xchg
sbb
ret
cmpsb
adc
lcall
lods
add
insl
and
xchg
movsl
pop
popf
jnp
es
in
push
popa
ror
push
je
popa
bound
inc
xchg
inc
stos
dec
ret
inc
rcl
insl
jae
sbb
sub
or
or
mov
add
adc
add
add
inc
push
pop
les
add
xor
add
loopne
add
push
pushf
es
xchg
pop
mov
and
incl
cmp
sbb
addb
jno
or
shrb
jo
xor
dec
and
jo
push
outsl
loop
and
pop
sti
xchg
pop
sub
mov
inc
mov
fwait
ljmp
pop
pop
dec
insb
out
shl
incl
sub
fstl
sbbl
inc
mov
in
rol
add
in
cmp
jo
or
or
movsb
pop
and
sbb
adcb
or
add
cmp
frstor
xchg
dec
fistpl
notl
inc
rclb
mov
jno
add
fiaddl
xchg
sti
popf
xchg
inc
add
pop
push
popa
pop
xorb
aad
cmp
adc
inc
je
push
rol
jne
ret
sbb
xor
jnp
dec
or
negb
dec
es
je
push
dec
in
insb
sbb
fsts
fisubl
lahf
pop
or
mov
lods
xchg
dec
sub
xchg
add
aam
dec
adc
nop
cmpsb
pop
cmp
iret
js
and
xchg
in
sbb
pop
adcl
push
mov
sbb
xor
pusha
add
jb
cwtl
jo
push
mov
cmp
imul
xchg
shl
je
bound
stos
and
iret
mov
cmp
adc
ficomps
lods
push
mov
push
mov
pop
js
cwtl
or
add
adc
icebp
or
loop
xor
adc
cmp
xchg
push
add
add
sbb
arpl
xor
pop
push
dec
loopne
hlt
inc
fbstp
jae
cmpsb
xor
sub
add
inc
push
mov
sub
sbb
dec
outsb
mov
stos
das
xchg
inc
imul
adc
sti
jecxz
push
pop
test
pop
inc
and
adc
inc
stos
and
xor
ret
and
mov
push
jne
and
ds
repnz
inc
outsl
jae
loop
outsl
scas
cmpsl
sbb
mov
mov
pop
adc
mov
jne
push
add
and
pop
fisubs
loopne
movsl
add
and
jno
sar
adc
xlat
das
sub
pusha
jge
popf
aas
push
or
sub
pop
pop
sub
mov
cmp
xor
mov
dec
or
xchg
sti
cmpl
cli
lea
push
inc
aaa
and
pop
imul
xchg
insb
jne
arpl
mov
test
jae
push
or
flds
mov
push
inc
mov
sbb
lods
and
and
adc
inc
sbb
and
sbb
jne
fs
cmp
inc
insb
push
popa
rcpps
js
and
inc
xor
jb
inc
inc
push
shll
xchg
or
fs
jmp
imul
mov
mov
ja
in
cs
jae
sahf
daa
push
sbb
push
and
push
cld
sub
jb
neg
fwait
pop
enter
mov
jno
cmpsl
rolb
add
xchg
add
fsubr
xchg
out
push
je
and
jg
jns
lock
push
mov
and
jo
and
push
popa
push
ss
dec
std
cmpsb
add
adc
mov
add
inc
fcomps
fsubrl
xor
mov
adc
mov
js
mov
jb
enter
insb
mov
inc
pop
and
data16
or
dec
outsb
dec
std
add
fmull
hlt
and
test
push
jnp
jl
push
js
add
pop
add
add
sbb
xor
add
sbb
movsb
dec
adc
add
or
or
lcall
or
in
lcall
jl
push
pushf
jo
adc
nop
mov
or
inc
add
jo
xchg
add
and
sbb
call
and
test
sbb
out
adc
test
mov
stos
daa
es
cmp
imul
cmpb
loope
cwtl
mov
or
push
push
insb
jmp
test
push
mov
outsb
xorl
sbb
xor
jo
inc
pop
xor
in
add
jo
movsb
sbb
jl
mov
push
mov
pop
dec
or
mov
inc
jne
lods
xor
dec
mov
insl
pop
or
sbb
rorl
lock
js
pushf
xor
xor
xor
cmp
imul
push
dec
sbb
add
mov
fiaddl
xor
mov
pop
mov
inc
lock
sub
andb
mov
xchg
fsubrs
inc
mov
popw
xlat
mov
xor
mov
outsb
push
inc
sbb
jg
fimull
and
and
push
enter
notb
aaa
mov
adc
mov
push
cmpsl
inc
ret
mov
pushf
in
shll
or
enter
sbbl
scas
push
mov
ret
xchg
dec
insl
dec
inc
push
fisubl
sub
fs
xor
shll
ret
push
rorl
adc
push
arpl
test
popa
push
cltd
push
pop
xor
push
bound
jmp
or
cmc
inc
mov
mov
dec
fistpl
add
cmp
cmp
lock
sbb
push
xor
in
sub
call
jg
push
mov
scas
pop
mov
popa
fbstp
sbb
pusha
xchg
scas
inc
cwtl
mov
sub
pop
mov
lock
mov
inc
add
add
add
adc
add
push
outsl
cmp
pop
mov
xchg
xor
push
inc
inc
cmp
xchg
xor
sub
sbb
adcl
inc
mulb
cmp
sub
outsl
out
inc
test
push
cmpsl
dec
dec
ja
imul
shll
add
aaa
loope
mov
sub
sub
cmp
rolb
mov
push
cmp
add
jnp
in
or
add
add
or
adc
add
mov
adc
mov
andb
or
fisubrl
enter
stos
cli
movb
daa
mov
and
pusha
lods
loopne
movl
add
addr16
or
mulb
clc
mov
pushf
add
sahf
push
push
pop
pop
add
hlt
rorb
mov
cmp
nop
pusha
mov
push
xlat
add
in
jns
add
dec
xchg
sbb
addr16
jp
fildl
push
and
or
add
xchg
test
cmp
and
add
pusha
mov
lea
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
add
inc
add
