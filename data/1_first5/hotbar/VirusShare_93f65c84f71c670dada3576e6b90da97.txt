divl
in
mov
mov
mov
push
push
call
int3
cmpsl
std
in
pushl
add
call
test
jne
pop
ret
push
push
sbb
mov
test
je
aas
mov
dec
adc
movb
lock
sti
in
decl
dec
movzwl
lea
jne
sbb
xor
jmp
and
neg
sbb
and
in
jbe
mov
mov
call
push
mov
mov
add
sbb
daa
or
add
les
mov
rclb
addr16
push
enter
and
jg
lock
push
push
push
mov
push
into
pushf
add
jge
jmp
jmp
stos
adc
push
push
sahf
jp
push
testb
clc
test
ds
jmp
pushl
sar
dec
sub
ret
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
ljmp
cmpsb
push
mov
andl
data16
mov
add
int3
aam
subl
lea
punpckhwd
aaa
mov
push
mov
inc
in
iret
negl
push
in
loopne
movb
inc
xchg
mov
sti
outsb
ds
inc
add
add
call
mov
cmpl
jne
mov
jmp
push
sub
imul
mov
out
fistpll
adc
pushl
sbb
pop
dec
push
add
movsb
ja
das
in
sub
lock
cs
xchg
or
mov
jo
and
dec
sbb
xchg
iret
push
mov
adc
push
fcoml
push
lock
clc
jg
and
add
rorl
sarb
fildll
pusha
xor
sbb
push
push
lods
pop
movd
fdiv
fistpl
fisttpl
ret
add
dec
cld
ljmp
test
je
pop
add
pop
mov
push
outsl
repnz
push
loopne
mov
mov
push
push
rolb
add
loop
inc
shrl
sbb
lds
in
pusha
les
or
mov
xchg
dec
add
sub
nop
cmpsb
in
push
call
lock
pop
sub
sahf
or
int
call
in
inc
nop
imul
in
push
push
mov
in
inc
pop
and
xor
xor
pop
sbb
mov
xor
cmp
jge
mov
jmp
mov
shl
mov
dec
jb
js
pop
mov
fs
push
cmp
adc
loope
xorb
and
aaa
jb
in
scas
and
xchg
add
sub
mov
and
inc
cmp
jae
ja
fisubs
cmp
pop
stc
push
mov
add
push
ja
sbb
scas
sbb
add
mov
push
mov
or
xor
clc
ret
push
adc
add
sbb
mov
pop
cmp
push
push
scas
mov
das
push
sub
pop
mov
add
loope
test
cmp
aaa
dec
lock
add
call
iret
and
xor
jmp
push
scas
mov
push
popf
sbb
pop
xchg
gs
jo
mov
and
dec
push
or
lahf
xor
sub
sub
and
push
iret
sub
jo
push
xorl
push
stc
stc
fisubrl
push
lock
and
push
sub
sbb
loope
and
mov
push
and
or
push
sbbb
or
add
and
std
repz
xor
je
mov
fwait
je
bound
sub
xor
lock
mov
push
mov
mov
int3
push
xchg
mov
or
inc
jmp
push
cmp
adc
popa
test
rdpkru
jne
scas
sbb
push
xchg
loop
dec
push
jle
std
pop
pop
test
jne
data16
nop
pop
xchg
sub
sbb
dec
mov
shrb
test
movsl
xor
cmp
sub
sbb
xchg
cmp
movsl
jns
or
pmulhw
cmpsb
mov
push
jmp
inc
and
adc
add
and
push
push
xor
push
pop
or
sbb
or
ds
inc
sbb
punpckhbw
adc
sub
test
cmp
adc
push
aaa
in
outsb
pop
sbb
sarl
sbb
mov
inc
add
jg
jmp
fdiv
xchg
sbb
xor
jmp
mov
jae
push
mov
pop
cs
pop
roll
mov
cld
inc
mov
lds
push
hlt
cmpsl
test
sub
jle
jo
loopne
test
negb
fimuls
push
push
pop
push
push
adc
loope
je,pt
ret
fiaddl
jl
mov
or
notl
mov
int3
jne
xchg
pop
mulb
xor
jge
loope
cmp
sub
cltd
jecxz
xchg
mov
shrb
or
mov
jl
jle
movsl
cltd
mov
outsb
movsb
fldl
or
clc
jl
lret
inc
mov
fimull
jae
ss
rclb
mov
jl,pn
mov
fdivrl
xor
mov
int3
cmp
je
popa
cmp
mov
lea
fildll
fdivs
je
nop
push
mov
sub
cmp
cli
mov
ja
insl
lea
jno
imul
bound
sbb
dec
inc
mov
jne
adc
in
mov
inc
or
jno
stos
mov
cmp
or
lret
push
fdivs
or
mov
sbbb
xchg
xchg
xor
mov
push
ret
and
out
popf
xchg
arpl
pop
cmc
and
push
mov
es
mov
adcb
ljmp
mov
hlt
bound
xor
or
js
add
ret
push
mov
sbb
dec
xchg
dec
shll
mov
push
jno
addb
cmp
jp
loopne
lock
jne
pop
mov
sub
ret
sbb
je
or
jae
push
std
cmp
je
sub
dec
pushl
pop
in
rclb
inc
mov
sarl
cli
xchg
movsb
pop
mov
fs
ficompl
mov
push
std
push
push
push
mov
cmp
push
mov
push
in
mov
xor
stos
mov
call
mov
test
jne
fs
inc
cmp
jl
leave
out
aam
ds
pop
push
push
fcmovb
cmp
push
pop
push
pop
jmp
sub
push
push
mov
mov
ret
add
repnz
mov
test
icebp
mov
push
test
rolb
sbb
pop
mov
or
sbb
mov
mov
cmp
loope
adc
stos
push
fiadds
jns
jg
addl
or
jmp
sub
dec
push
andl
push
aaa
pop
icebp
dec
mov
xor
jl
push
sti
inc
mov
mov
cmp
pusha
adc
jo
loopne
adc
pop
ret
push
data16
pop
inc
cmp
sub
shr
or
mov
fistpl
pop
mov
and
outsl
jno
jne
pop
ja
mov
cs
outsl
or
inc
aam
push
mov
mov
jne
js
sub
pop
cmp
mov
jge
mov
pop
std
jecxz
out
cwtl
cmp
je
movb
jle
mov
mov
adc
decl
lea
push
mov
imul
add
jmp
mov
add
push
push
add
addr16
fs
or
cmp
adc
inc
leave
ret
mov
fiaddl
out
idivb
cmp
je
or
in
cmp
std
or
adc
adc
or
dec
inc
pop
adcb
pop
imul
stc
jne
mov
jmp
data16
push
xchg
in
add
mov
mov
mov
ja
lea
mov
decb
pushl
cmp
jmp
xchg
andl
js
clc
pop
pop
pop
arpl
adc
addl
out
add
mov
test
je
add
mov
sbbl
loope
pop
mov
pop
push
push
movsb
ljmp
mov
jle
je
xor
push
dec
mov
cmpsl
mov
fmull
sbb
pusha
lret
ss
push
push
mov
xchg
cmp
and
hlt
lods
arpl
shlb
shlb
ret
lods
sub
or
mov
push
adc
sub
add
fwait
add
jecxz
cmc
inc
add
sbb
adc
sbb
sti
mov
cmp
rorb
pop
fs
cmp
je
cmpl
pop
mov
cmp
jne
push
push
testb
imul
aas
xor
or
mov
test
cmp
mov
clc
loopne
leave
push
inc
sub
inc
or
sbb
and
or
mov
fidivrl
inc
clc
jg
inc
out
addr16
sub
or
in
xchg
mov
and
out
lods
adc
cmp
and
cmpsb
inc
or
shlb
adc
ret
outsl
mull
pop
push
ja
scas
add
inc
push
movsb
sub
pop
and
sbb
lea
and
xchg
cmpl
js
mov
test
or
dec
push
push
push
adc
adc
lcall
or
pop
lret
hlt
ljmp
mov
mov
push
fdivrp
mov
mov
xchg
adc
aad
adc
lods
clc
inc
mov
ret
inc
or
push
or
dec
jge
stos
jae
loop
add
gs
clc
cmp
sbb
lds
xchg
lahf
cmp
xor
cmpl
in
aas
fsub
jle
push
cmp
jmp
mov
mov
mov
jmp
ret
ret
shlb
push
femms
shr
cmp
inc
cmp
push
push
rcrl
push
mov
mov
inc
mov
jbe
jns
or
or
adc
cmp
mov
adc
pop
push
clc
cmp
das
ljmp
pusha
fimuls
jge
bound
mov
sub
hlt
mov
pop
push
or
xchg
sub
fs
in
add
cmp
ret
fsub
into
ficoml
jmp
vhsubps
mov
leave
rcl
sarb
xlat
xlat
lds
pop
sahf
and
les
imul
add
mov
add
or
mov
je
mov
aaa
mov
fistpl
lock
outsl
fsubr
decl
dec
mov
or
and
adc
xchg
lea
push
mov
pop
pop
jmp
cmp
push
mov
mov
jecxz
push
movl
pop
dec
insl
dec
dec
adc
sbb
fwait
xor
xlat
stos
sbb
test
je
sub
std
jno
subb
shlb
movsl
push
in
out
fdivl
fildl
mov
add
or
out
pop
add
mov
and
in
test
xor
jl
inc
imul
nop
cmp
add
push
pop
sbb
inc
and
cli
add
or
sbb
das
or
adc
cmc
add
in
push
movsb
les
push
push
sarb
cs
inc
adc
sbb
or
push
and
fldenv
sub
idivl
lret
sbb
das
sbb
sbb
add
sbbb
push
stc
lods
push
sub
in
call
pop
pop
cmp
ret
sbbl
ss
jo
push
mov
mov
adc
stos
xor
data16
adc
pop
sub
mov
dec
or
xchg
add
iret
cli
pop
push
xor
cmp
ja
or
mov
adc
and
stc
adc
cmp
popf
push
fnstsw
cmpl
push
cmp
mov
cmp
mov
push
cltd
pop
notl
add
or
mov
adc
shrl
je
loope
add
adcb
push
pop
mov
fstl
hlt
dec
sbb
adc
and
mov
fisubrs
les
jbe
call
fists
and
je
and
jmp
negl
add
push
pop
dec
je
push
adc
in
jge
clc
sbb
mov
test
jmp
aas
xchg
adc
jo
pushf
jmp
stc
sbb
or
cltd
ret
int
jp
jecxz
sbb
fstpt
sbb
xor
add
stc
or
insb
xor
and
call
add
hlt
scas
out
lea
mov
lea
call
xchg
adc
push
mov
xchg
jns
or
mov
mov
dec
pusha
mov
and
loopne
push
or
add
sub
jo
js
shrl
in
in
nop
out
and
adc
xchg
fcmovnbe
jmp
mov
adc
jmp
cmp
je
cmp
sbb
imul
jmp
inc
sbb
mov
adc
adc
xor
dec
fstpl
jbe
cmp
jmp
sbb
dec
xchg
jmp
and
lds
data16
sbb
xlat
lock
repnz
and
das
inc
repz
repz
push
repz
loop
mov
stos
fs
lock
lods
push
stos
cld
cmpsb
cld
mov
cs
push
push
pusha
aaa
outsl
xchg
add
and
in
fdiv
jae
or
clc
movb
sbbl
dec
push
or
adc
add
lret
dec
push
dec
jb
jmp
mov
pop
push
lea
push
sbbl
out
inc
xor
xchg
xchg
fstl
cmp
adc
cmp
les
inc
add
pop
stc
fs
or
pop
push
add
sbb
push
pop
ja
popa
xchg
push
sbb
lea
adc
testb
jo
and
daa
daa
in
push
jnp
push
call
sub
mov
fbstp
ja
mov
sub
jo
cmpsl
jmp
mov
test
xchg
xor
sbb
add
jns
pop
sbb
loopne
inc
jmp
loope
enter
jle
add
clc
and
nop
sub
sahf
mov
xchg
arpl
sub
arpl
in
ds
inc
mov
adc
inc
mov
js
adc
or
and
jae
mov
mov
test
dec
dec
push
outsb
pop
push
rclb
not
and
ds
enter
add
and
sub
xor
mov
imul
vbroadcasti64x2
shl
push
pop
push
push
cmp
jb
in
jnp
push
push
into
addr16
add
mov
mov
stc
push
push
push
xchg
sub
or
push
mov
dec
xor
lods
and
sahf
movsb
mov
add
add
pop
in
fsubrs
pop
daa
lea
je
fildl
mov
jo
mov
out
lret
in
and
addl
jle
mov
mov
sbb
shlb
cli
hlt
dec
push
jo
jbe
adc
outsb
xor
push
ss
xchg
xchg
push
ljmp
adc
clc
push
mov
jne
push
mov
pushl
mov
fimuls
xlat
adc
dec
adc
mov
dec
lea
sti
popf
dec
rorb
inc
sarb
je
dec
lods
fldcw
call
cltd
sub
sar
add
bound
in
jle
shlb
in
cmp
push
mov
imul
adc
dec
cmp
pop
pop
leave
jae
mov
pop
xor
inc
fimull
pop
leave
ret
pop
sub
pusha
or
push
mov
or
sbb
inc
cltd
fsubp
mov
or
aad
std
icebp
push
push
ss
push
cmp
jnp
fists
inc
js
dec
inc
icebp
sti
lahf
test
sbb
and
and
jbe
add
push
andl
xchg
mov
xchg
jbe
add
fldt
xor
cmp
dec
or
cmp
mov
adc
call
out
xchg
push
clc
push
lea
sbb
xorl
inc
cmpb
sbb
stc
dec
and
adc
mov
out
int3
or
adc
sbb
ljmp
inc
cmp
xor
inc
push
sbb
mov
out
mov
je
push
mov
inc
lock
or
in
or
push
repnz
addb
fdivrp
pop
movsb
ret
and
mov
daa
ds
adc
not
cmp
cmpl
je
cmpl
xchg
jne
adc
dec
je
scas
xchg
cmc
in
int
sbb
cwtl
pop
push
add
fsubrp
sarl
jg
jmp
mov
add
xchg
andl
cmpsl
cmp
leave
rorb
sub
mov
jbe
and
push
popa
pop
lds
adc
mov
js
push
push
sbb
sahf
lods
dec
lret
in
sbb
incl
hlt
movb
pushf
or
lock
inc
cmc
mov
fldz
enter
dec
sbb
scas
in
pop
dec
and
mov
ret
dec
inc
mov
mov
push
int3
lea
out
cmp
fisttpll
cmp
pop
fs
pop
cmp
or
mov
je
test
inc
pop
loopne
lods
sti
call
mov
pop
insb
lahf
scas
mov
pusha
mov
test
sahf
loope
jle
or
pop
lea
inc
dec
push
adc
pop
jbe
adc
pop
fsubrs
sarl
mov
shlb
adc
and
sub
or
nop
or
sahf
out
jp
push
enter
adc
add
jl
pop
insb
or
andl
daa
cmp
ret
and
xor
pop
dec
adc
or
sub
xchg
pop
aad
push
mov
add
and
sub
int
xlat
call
xor
addb
add
sbb
xor
cmpl
pop
push
cmpb
lock
sbb
cs
fwait
jnp
ret
aaa
faddl
sub
les
inc
imul
inc
dec
fldl
fmull
imulb
ljmp
push
outsb
add
add
and
pop
push
add
add
ret
rcrl
xor
repnz
lock
sbb
or
movsl
pusha
rclb
loop
test
pop
or
mov
rcrl
push
dec
ds
sub
lahf
or
xchg
out
jne
pushf
and
lods
jo
push
mov
sarl
or
aaa
dec
pop
dec
push
add
push
addl
popa
mov
dec
sub
mov
push
cmp
xlat
stos
repnz
ret
fcoms
mov
dec
pop
sbb
or
es
and
add
loope
push
loop
js
ret
cmp
in
push
mov
das
adc
inc
dec
push
sbb
in
inc
cwtl
bound
movsb
mov
in
nop
outsl
test
adc
pop
mov
lahf
inc
mov
insl
cmpb
mov
je
scas
push
inc
pop
cwtl
pop
roll
rorl
add
stc
cmp
or
pop
cs
sub
push
cmp
mov
xor
push
insb
repz
mov
cmpsl
dec
jmp
nop
push
adc
xchg
mov
jmp
inc
shlb
mov
push
mov
loopne
push
add
in
adc
jl
xor
push
cmp
outsl
and
sbb
mov
test
cmp
inc
add
shrb
out
jo
xor
loope
dec
fsub
nop
adc
and
adc
imul
orl
cwtl
adc
mov
outsl
jno
lret
in
sti
ljmp
jg
cltd
mov
add
sar
push
fwait
dec
or
adc
jl
dec
inc
jnp
add
sbb
lock
fucomi
cmp
adc
mov
mov
idiv
push
pop
push
adc
out
jmp
xor
idiv
jle
mov
fwait
aaa
jp
mov
sub
adc
jne
fstp
and
push
jbe
adc
jmp
mov
pop
insb
cmpsl
int
sub
pop
jmp
mov
sti
in
and
sbbl
mov
adc
or
out
and
push
add
or
pop
pusha
push
ljmp
movsb
sti
sub
clc
je
test
push
cli
or
cltd
idivl
mov
xchg
test
ljmp
rcr
mov
jl
icebp
pop
imull
fs
or
xchg
arpl
mov
idiv
sub
test
or
jbe
lahf
xor
stc
repnz
sub
sbb
mov
add
inc
jle
add
std
out
xor
xchg
imul
cmp
aas
mov
sub
jge
jmp
mov
mov
hlt
fildl
pusha
or
add
lock
fdivl
xor
mov
fdivrp
mov
dec
sub
mov
mov
cmpsb
fists
inc
fisubrs
xorl
out
add
inc
mov
mov
cmpb
or
clc
fidivl
push
mov
jmp
outsb
mov
mov
sahf
lods
jmp
loopne
jnp
jne
pop
add
jl
dec
jmp
dec
mov
aad
inc
mov
adc
test
sbb
or
je
sbb
push
adc
jo
sbb
mov
adc
je
mov
pop
push
mull
sbb
lret
je
jbe
imul
pop
and
jne
push
jmp
ljmp
lods
add
push
push
push
pop
sti
cmp
cmp
adc
pop
push
mov
sub
mov
add
out
clc
test
call
ficomps
in
sbbb
add
pop
mov
pop
xor
xchg
dec
push
jne
loopne
xchg
cmpxchg
xchg
mov
adc
mov
pushf
loopne
movb
scas
jmp
leave
push
rorb
clc
leave
xchg
pop
and
jmp
push
cmp
filds
xor
push
lea
add
mov
push
mov
inc
aas
test
pop
mov
push
jns
cmp
push
mov
sub
pop
sbb
add
push
cmp
or
cmp
loop
loope
mov
in
pop
adc
add
xor
push
jg
jg
mov
push
popa
push
nop
and
std
adc
sbb
cmp
push
sbb
add
or
mov
add
insb
adc
fs
int3
and
push
push
pop
cmovnp
jae
in
pop
pop
jecxz
push
pushf
sbb
movnti
sbb
mov
mov
repz
inc
adc
push
sbb
leave
fsubs
cmp
inc
and
add
or
and
andl
adc
and
push
loopne
xor
inc
ret
pop
pop
dec
ret
mov
mov
pop
cmp
lock
push
leave
clc
lods
sub
clc
setb
test
int3
lock
jne
mov
sarb
dec
sub
sar
xchg
jl
call
andl
lea
push
pop
fidivl
add
adc
mov
je
sub
mov
mov
lods
lods
clc
aas
fsts
mov
mov
nop
lock
hlt
mov
lods
adc
test
push
jecxz
lods
xchg
add
shrb
inc
sbb
sti
xor
and
cmp
into
dec
or
push
jge
and
hlt
scas
lea
sub
or
cmp
push
push
push
shlb
add
lret
mov
ret
dec
dec
daa
sub
push
in
mov
lods
adc
scas
xchg
cs
add
add
adc
fdivr
aad
ror
xor
clc
or
and
push
je
jnp
and
je
lahf
push
mov
shr
hlt
pop
or
pop
inc
pusha
pop
fistpll
sbbl
pop
or
shlb
xor
and
push
je,pn
add
repnz
inc
fmull
ror
stc
mov
lock
movsl
and
xor
ja
outsl
arpl
test
and
lods
pop
add
out
add
dec
enter
pop
or
push
dec
xchg
mov
push
in
jg
mov
subb
xchg
ret
test
push
lcall
add
lret
clc
lret
mov
jne
push
push
popa
mov
jmp
in
mov
jmp
dec
lods
mov
enter
xor
push
pushf
mov
out
sbb
push
mov
in
xchg
add
xchg
test
andl
test
fadds
or
and
fs
cmp
int3
push
add
cmp
push
daa
repnz
xchg
jbe
mov
stos
add
lea
xchg
or
nop
fsubrl
dec
add
dec
mov
push
test
lock
inc
xor
mov
inc
icebp
mov
lcall
mov
mov
lret
xor
mov
mov
call
mov
sbb
icebp
and
pop
lcall
dec
pop
rcl
fsub
aas
jecxz
pop
push
dec
xlat
xchg
add
fmuls
inc
ret
inc
or
xor
xor
sbb
enter
repz
pop
push
cwtl
movsl
sbb
cltd
mov
sbb
mov
jge
jbe
les
outsb
repz
adc
mov
fs
test
mov
addl
add
stos
jb
sub
push
xor
test
aad
mov
stos
or
loope
nop
adc
push
add
and
stos
and
add
xchg
add
filds
nop
sub
mov
jne
std
sub
or
orl
in
mov
icebp
out
scas
cmpsl
pop
leave
scas
pop
push
movsl
xchg
pop
dec
ja
jnp
cmpsb
cs
popf
inc
push
cmc
push
pusha
mov
mov
call
mov
icebp
mov
mov
js
sbb
stc
sub
push
sub
add
jo
and
insb
lea
dec
nop
shrl
call
inc
push
outsb
sbbb
cwtl
inc
jbe
shll
insl
push
sbbb
std
jl
loope
jge
adc
jle
push
cmp
push
add
inc
js
and
shl
daa
add
int
psubd
adc
mov
in
fdivrl
sbb
inc
adc
adc
jge
jl
bound
dec
lcall
inc
or
push
in
mov
sub
dec
and
mov
test
mov
jmp
mov
daa
cmp
cmc
adc
scas
adc
fadd
xorb
mov
pop
dec
push
loopne
rcrb
bound
or
pop
or
adc
scas
mov
pop
and
fadds
adc
call
sub
insl
mov
les
mov
cwtl
lcall
and
int
and
or
sbb
into
rorl
es
push
push
insb
in
lea
popa
push
neg
inc
aas
mov
je
xor
inc
and
popf
jbe
cmpsl
fidivs
or
jno
push
pop
dec
insb
sub
dec
mov
movsl
push
jbe
inc
cmp
push
lods
lahf
rolb
add
pop
mov
add
mov
pop
push
sub
add
lods
fs
push
mov
sbb
mov
pop
or
mov
add
xchg
add
sahf
lock
ljmp
adc
mov
ffree
adc
sub
call
out
and
add
cmp
jo
jmp
loope
testl
outsl
or
shll
xor
loopne
daa
and
push
shll
aaa
lcall
loope
call
add
xchg
movsb
inc
adc
xor
xor
repnz
or
adc
pushf
xor
mov
push
lods
push
or
daa
sbb
push
lcall
push
loope
mov
fbstp
lgs
adc
mov
mov
add
outsb
push
iret
scas
shrb
sbb
dec
lods
mov
push
mov
jbe
daa
rcrb
lea
push
rcrb
push
adc
and
push
call
pop
mov
push
jecxz
mov
mov
push
cwtl
xchg
scas
cmp
orl
xchg
je
push
mov
pop
pusha
shrb
and
cmpsl
push
mov
adc
movsb
lds
xor
push
sbb
cmpsb
and
mov
pop
add
and
das
test
adc
pop
lret
sbb
mov
sbb
jns
push
pusha
mov
cs
adc
add
sti
xlat
cmp
fnstcw
sti
lods
fs
pop
call
ror
or
jle
or
sub
add
push
enter
daa
sldt
scas
xchg
insb
lock
push
ljmp
push
sbb
sub
jbe
pop
and
sbb
mov
cmp
sub
icebp
push
xlat
xor
sbb
sub
dec
ds
dec
adc
inc
xlat
jns
cmp
outsl
sub
test
out
pop
leave
xchg
mov
lahf
ds
push
push
push
jno
fsts
push
sub
pop
orl
jno
dec
or
jbe
push
or
andb
mov
jmp
push
iret
adcb
or
push
addl
inc
je
mov
jmp
xor
mov
mov
xor
popf
insb
push
adc
pop
push
daa
adc
push
insl
arpl
inc
and
cltd
xchg
xchg
les
sub
insb
push
mov
inc
cmp
fnsetpm(287
dec
dec
mov
push
outsl
push
and
mov
jmp
pop
fiaddl
xor
adc
int
xor
pop
popa
into
pop
icebp
jae
imul
or
pop
cmp
mov
cs
loopne
push
fnstsw
ds
push
addr16
in
dec
mov
xor
cmp
lock
pop
cmp
imul
pop
mov
jg
mov
je
ja
rorl
add
loope
push
mov
push
mov
sub
nop
adc
arpl
rorl
and
jae
jnp
subl
mov
fnsave
orl
and
imul
outsl
outsl
testb
ljmp
gs
jns
icebp
sub
adc
insl
shrl
jl
mov
test
sbb
or
inc
pop
mov
dec
imul
adc
lock
xor
rorb
or
add
jmp
add
xchg
mov
or
or
in
cmp
or
sub
sbb
add
sti
add
imul
mov
jl
or
pop
dec
mov
pop
rol
cs
or
test
fs
or
call
or
sbb
outsb
lcall
rcrl
inc
or
and
enter
inc
fists
sarb
mov
add
push
inc
adc
js
cmpsl
dec
xor
sbb
add
add
cld
push
outsb
mov
mov
sbb
and
subb
xchg
aam
jns
cmpsl
imul
cmpl
xorb
inc
mov
cmpl
test
adc
lock
inc
adc
push
mov
fsts
or
fildl
push
mov
push
clc
fstps
push
add
add
push
sbb
sbb
add
inc
jle
pop
adc
out
in
cmp
mov
sbb
pop
push
dec
sub
call
mov
pop
or
adc
jo
adc
dec
fwait
and
loop
cmp
in
nop
push
mov
xor
lret
adc
sub
pop
pop
loop
jp
scas
loopne
pop
gs
and
pop
adc
test
xchg
loope
mov
aam
das
repz
mov
and
push
pop
inc
dec
jmp
xchg
push
pop
mov
jne
pop
dec
dec
data16
call
lock
testl
ret
negb
lea
andl
cltd
inc
push
jge
push
mov
xor
pushf
sub
xor
movups
clc
rcrb
icebp
pop
push
sbb
adc
out
jge
push
mov
movsb
repnz
fs
movsb
pop
add
add
dec
inc
mov
jge
pusha
and
lahf
cmc
or
pop
pushf
repnz
inc
pusha
sub
sbb
mov
pop
push
cld
xchg
bound
outsb
sub
jge
jbe
jne
add
int
inc
or
mov
xchg
sbb
sbb
xchg
and
lahf
js
jb
les
dec
jp
fists
sbb
cmp
jne
inc
subb
sbb
int3
cmp
test
jge
jg
enter
inc
test
movl
mov
scas
sub
js
mov
adc
orb
push
roll
jge
or
je
mov
pusha
dec
cwtl
add
repz
out
and
icebp
ret
ss
jl
idivb
mov
sbb
xor
repnz
pop
js
es
ficompl
push
dec
pop
push
sbb
sbb
dec
mov
lds
sbb
xchg
ret
outsl
icebp
mov
inc
div
xchg
aam
cmpb
fcmovnbe
adc
push
push
jecxz
cmp
jns
je
push
js
mov
sub
mov
lock
inc
push
jle
sbb
repnz
fwait
mov
lret
clc
pop
sbb
mov
scas
push
fs
add
les
lret
test
into
mov
test
pop
out
add
sbb
sbb
and
sub
xor
sarb
push
out
mov
push
loopne
fcompl
jo
and
in
mov
add
aad
mov
sbb
idiv
dec
gs
push
pop
jmp
ds
cwtl
and
sbb
int3
cmpsb
pop
in
add
iret
cmpb
jge
pop
repnz
add
lret
loopne
cltd
lods
loope
inc
ljmp
inc
movl
pop
sub
mov
mov
xchg
aam
je
adc
xchg
dec
ljmp
xchg
mov
pusha
pop
push
jne
cmp
test
pop
fists
daa
pop
sub
or
pop
repnz
cltd
mov
add
lods
lret
enter
adc
aam
es
and
xor
popf
pop
pusha
mov
fisttpl
call
pop
adc
lods
xchg
jp
lcall
rclb
test
les
xor
push
pop
push
mov
add
pusha
fs
xchg
cmp
sub
inc
dec
rep
adc
in
loop
pop
hlt
setne
inc
xor
cmp
jne
sti
aas
push
push
add
clc
incl
fadd
jmp
or
pop
hlt
jne
push
push
push
push
jbe
out
push
insl
jmp
cmp
push
dec
sub
ret
call
cmp
xor
pop
sarb
add
fidivs
dec
icebp
lret
or
xchg
mov
daa
int
xor
inc
es
nop
push
and
pusha
mov
sub
movsl
mov
dec
inc
sbb
mov
inc
add
and
xchg
in
jmp
push
push
or
dec
add
push
sbb
sub
loope
add
shl
push
push
adc
adcl
pop
test
push
mov
add
sbb
loopne
sbb
sbb
insl
push
xchg
xchg
loop
loopne
pusha
adc
jge
fs
ret
fstl
push
je
xor
or
clc
adcl
cmp
shlb
ja
inc
xchg
imul
stos
or
dec
fwait
xor
or
fldt
or
and
sbb
and
add
scas
stos
xor
inc
adc
movsb
test
pop
inc
adc
inc
and
jmp
adc
cmp
xor
sbb
mov
adc
andl
xchg
jbe
popaw
je
call
test
jne
sub
in
insb
repnz
loop
jne
les
leave
mov
aad
fsubl
xchg
adc
inc
out
mov
imull
iret
mov
in
stos
mov
push
push
mov
lret
xor
mov
xor
pop
push
je
fs
mov
js
addr16
push
adc
mov
outsl
mov
add
push
scas
add
dec
sti
out
push
cmpsl
test
adc
push
pop
jmp
inc
adc
rcll
push
mov
sbb
push
leave
jb
mov
ret
cmc
adc
add
insb
and
stc
mov
and
call
and
sbb
inc
push
mov
cwtl
add
sbb
adc
mov
push
pop
lods
ja
sarb
jb
xrelease
pop
add
push
das
dec
sub
mov
enter
cmc
sub
dec
dec
popf
sub
xor
mov
push
push
pop
es
fmuls
xchg
and
movsl
sti
adc
xchg
clc
xchg
aas
mov
cmp
inc
add
adc
mov
ret
addr16
cmpb
rol
inc
out
test
ja
jecxz
jl
in
add
fisubrs
sahf
pop
jp
cmp
sub
add
sbb
sti
fistpl
daa
xchg
mov
push
dec
aam
jmp
mov
pop
add
jmp
add
dec
test
jl
test
icebp
daa
mov
in
dec
push
test
mov
lret
into
lock
shll
cmp
je
cmp
je
lcall
lea
add
cmp
jae
push
sub
jns
fcomps
shl
and
daa
sub
pop
hlt
fmull
add
add
std
mov
jno
jmp
cmp
dec
hlt
jge
mov
shl
out
inc
lahf
mov
add
mov
outsb
test
push
mov
or
cltd
or
clc
and
xchg
jmp
imul
ljmp
pusha
pop
test
lcall
test
je
test
jl
mov
cmp
jg
aaa
movsb
ss
add
in
jle
add
push
mov
add
pop
pop
mov
movsl
mov
hlt
mov
cltd
mov
mov
or
lret
sub
mov
sub
mov
pop
aad
push
pop
movsl
addb
in
jg
decl
add
pop
or
lock
ret
sub
push
nop
mov
inc
xlat
mov
xor
cmpb
push
sbb
cmp
scas
xchg
cmp
push
sbb
ret
mov
shrl
cmp
iret
adc
repz
fimull
nop
jne
ret
jecxz
clc
jbe
and
and
push
xchg
mov
lcall
xchg
jge
or
cli
cmp
push
mov
mov
mov
xor
aas
js
xchg
mov
fsubrs
and
mov
insb
sbb
dec
or
data16
orb
sbb
lret
ret
test
aam
in
or
aad
int
mov
pop
cltd
pop
push
ds
xlat
nop
cmp
rcll
push
fdivrs
push
pop
rolb
push
pop
adc
and
push
mov
jp
gs
sbb
jecxz
mov
xor
int3
lods
js
sarb
push
cli
or
lret
fnstcw
lcall
mov
mov
add
movsb
jb
lea
jb
jecxz
ljmp
jo
arpl
cmpsb
mov
or
mov
and
sub
push
sbbl
stos
push
sbb
jne
leave
pcmpeqw
cmpsl
xor
mov
arpl
add
mov
mov
and
lods
pop
lods
sbbb
pop
jo
push
rol
popa
pop
outsb
mov
outsb
or
pop
mov
or
cmp
mov
pop
adc
inc
dec
test
push
cs
dec
test
cltd
jecxz
xor
cli
adc
adc
sbb
test
test
cmp
je
inc
cmp
mov
sbb
cli
pop
jg
test
ret
pop
je
fimull
xor
add
xor
test
call
cmp
les
pop
cmp
jne,pt
jmp
jne
pusha
xchg
adc
in
add
in
push
push
push
scas
test
imul
mov
cld
xchg
loopne
add
stc
inc
in
in
cmpb
inc
test
loope
mov
sbb
sbb
jb
xchg
insb
rclb
sbb
or
jnp
sub
loop
mov
call
dec
inc
push
adc
cmpsb
cmp
mov
adc
or
add
push
sti
adc
xor
jge
sbb
lahf
sbb
adc
push
dec
jmp
popa
xchg
into
je
cltd
dec
push
sub
add
jl
pop
daa
dec
or
pop
xor
mov
leave
enter
cmp
loopne
push
shrb
cmp
lret
xor
push
orl
xorl
aad
jne
add
jbe
dec
cmp
stos
inc
lock
shlb
mov
mov
call
cmp
cltd
aad
ret
dec
andb
add
mov
aaa
imul
loop
sbb
dec
push
jecxz
adc
jae
vpcmpeqw
jmp
dec
lods
or
sbb
inc
push
mov
pusha
jmp
stc
push
add
adc
adc
dec
inc
out
mov
es
xchg
inc
push
std
rorb
inc
sub
rolb
sbb
in
add
inc
shrb
lods
or
sub
and
loope
popa
inc
mov
fadd
jmp
pop
cmc
jmp
mov
popf
pusha
sbb
push
mov
sti
adc
mov
cmp
rsm
mov
push
pushf
cmp
in
dec
or
sub
jne
mov
cmp
je
movsb
xor
lahf
or
stos
pop
mov
push
outsb
mov
jmp
push
push
insl
subb
int3
pop
ja
sub
adc
push
aaa
sahf
sub
add
pop
adc
repnz
adc
or
cmp
push
mov
xor
lcall
jne
lods
mov
add
push
xor
mov
pop
jle
xlat
outsl
stc
add
call
repnz
shlb
add
lock
jp
mov
and
xor
xor
scas
mov
fistpll
add
jmp
xor
movd
jno
push
in
cmp
pop
pop
pushf
cmp
popa
in
mov
ror
rcll
loopne
and
shlb
or
or
loopne
and
push
mov
popa
and
lods
or
push
add
pop
pop
dec
je
inc
mov
xor
xor
aad
pushf
xchg
or
jmp
jp
mov
call
stos
jne
leave
adc
aas
insb
cmc
add
xor
fsubrs
andl
push
out
and
in
rcl
in
sbb
sub
popa
shl
in
dec
and
adc
pop
loopne
addr16
rcr
aaa
mov
lods
add
sub
scas
adc
inc
mov
or
or
mov
push
push
add
and
ljmp
mov
in
pushf
mov
shlb
and
adc
stos
mov
loope
rolb
mov
push
sbb
daa
leave
pop
jmp
or
js
add
orl
mov
xor
pop
push
push
mov
lret
push
mov
jb
xor
pop
addr16
imul
or
mov
add
in
add
mov
add
shll
and
lea
xchg
jne
inc
test
icebp
pop
push
inc
dec
add
pop
test
sub
or
test
cmp
cmp
push
xor
dec
jmp
mov
sub
jne
xor
push
lret
es
adc
cld
arpl
push
cmp
sub
lock
pop
inc
ficoms
cli
xor
lea
test
add
push
jb
add
xchg
lea
push
jb
cmpl
lret
cld
sub
pop
test
sti
mov
imul
jo
fimuls
addr16
adc
lock
call
push
xor
cmp
loop
xor
lods
and
shr
adc
in
or
push
sub
sub
add
iret
push
push
add
push
jno
pop
and
mov
addr16
xchg
jns
jp
mov
shlb
movb
or
push
mov
stos
int
cmp
or
addl
pusha
rolb
xchg
pop
push
arpl
dec
rorb
mov
push
sbb
add
or
rolb
pop
add
sbb
mov
xchg
add
add
arpl
xchg
xchg
into
test
adc
repnz
push
movsb
test
out
cmp
mov
push
dec
daa
lret
jge
addb
mov
push
call
pop
lock
inc
divb
pop
push
mov
cmp
je
sbb
icebp
loopne
inc
push
mov
pop
sub
cmpsb
aad
cmp
int
mov
xchg
push
into
pop
and
push
jmp
dec
mov
adc
cmp
push
push
sub
jo
inc
mov
test
push
inc
jp
ds
dec
in
xchg
and
sbb
add
cli
popa
flds
ds
jecxz
push
xor
xor
dec
sbb
fmuls
mov
or
mov
mov
cmp
add
shll
push
cld
push
adc
int
push
arpl
cmp
sub
push
sbb
adcb
in
jno
adc
xor
sub
rcrb
in
bound
data16
cmpsb
jne
call
push
aas
push
adc
lret
je
pop
shlb
xchg
inc
xorl
enter
clc
add
adc
and
hlt
push
in
inc
lods
jbe
mov
push
mov
neg
push
add
fisubrs
mov
pop
in
adc
push
push
je
sbb
pop
jmp
mull
test
ja
test
dec
jbe
movsl
clc
adc
jg
push
xor
push
push
cmp
je
fcmovbe
push
push
xorl
add
dec
or
ss
mov
adc
cmp
je
push
push
aas
and
rolb
int3
sub
pushf
mov
ret
jmp
dec
das
or
push
icebp
mov
mov
jbe
inc
cmp
jns
testl
adc
repnz
mov
out
cli
movsb
cmp
xchg
sete
in
push
push
cld
decb
dec
or
cmp
push
and
inc
or
add
mov
cmp
lcall
mov
out
test
cltd
dec
cmpl
je
ret
pop
or
and
pop
sbb
inc
adc
mov
add
jb
pop
aam
pop
adc
nop
pop
push
shlb
dec
ss
pop
push
adc
rcll
sbb
mov
jb
clc
lcall
jnp
in
cmp
je
cmp
je
cmp
jne
push
add
cmpsb
mov
push
add
or
je
call
outsb
push
or
stos
or
mov
sbb
outsb
pop
mov
cmp
xor
adc
shl
or
mov
pop
clc
add
hlt
scas
test
mov
fdiv
pop
inc
enter
sub
jne,pt
xchg
or
out
popa
pop
icebp
sbb
mov
mov
or
cmp
xchg
lahf
ljmp
jl
and
sub
sub
add
fcoml
pop
pop
dec
inc
jmp
ret
sbb
push
add
clc
rorl
icebp
cmpb
mov
xor
cmp
ja
ret
xor
cwtl
cmp
leave
inc
aaa
popa
data16
mov
cs
testb
cmp
mov
add
push
sbb
lahf
dec
or
pop
push
inc
js
add
adc
jecxz
add
mov
add
sti
daa
shl
ret
jmp
jge
cmpsb
in
xor
xchg
mov
mov
cmp
add
cmp
push
cmp
gs
je
cmp
jne
mov
sbb
add
cmc
push
ficoml
inc
lock
mov
pop
dec
stos
clc
mov
xor
push
movsb
jne
jmp
testb
lcall
adc
sbb
test
cmp
jbe
mov
outsl
dec
mov
cmp
fs
dec
inc
jmp
inc
and
or
loopne
mov
rorb
ret
dec
rorb
inc
or
outsl
xchg
nop
cmp
cmp
je
test
pop
lea
add
sahf
clc
mov
clc
inc
xchg
or
pop
in
inc
xor
insb
out
test
sahf
jne
cmp
or
jne
notb
cmp
push
lods
loop
or
dec
sub
ret
cmp
or
ja
shrb
hlt
aam
ror
popa
cs
xorl
scas
cld
add
push
cmp
push
push
mov
fidivrl
sbb
dec
outsl
enter
jmp
loop
jne
js
mov
add
fs
inc
insl
rorb
mov
pushw
mov
or
jb
cmp
cmpsb
rcrb
add
fsubr
adc
aas
les
and
and
dec
hlt
add
mov
fs
jne
xor
movsl
ss
lock
test
aas
push
mov
mov
or
add
pop
jae
mov
cmp
in
das
jmp
dec
shlb
cld
jbe
test
bound
lea
cld
lahf
add
call
outsb
das
int
sub
rolb
cmp
jg
or
jge
fistl
cmp
or
jle
es
sub
lcall
jmp
cmp
jl
pop
jle
pusha
roll
in
test
or
add
and
jbe
mov
test
aas
mov
jne
or
je,pn
test
jne
je
addb
pop
outsb
and
xchg
je
or
je
xor
jmp
movb
inc
mov
push
sub
push
sbb
mov
add
inc
add
push
mov
inc
shll
je
adc
outsl
dec
mov
push
mov
loop
jae
add
inc
es
inc
jbe
add
push
and
pop
push
movl
sub
clc
std
adc
mov
or
xor
push
cmpsb
or
mov
push
daa
pop
xor
xor
xor
lret
js
sbb
decb
or
icebp
out
add
mov
sbb
lods
push
sbb
jmp
pop
jnp
inc
mov
outsb
jo
jmp
push
inc
lea
adc
inc
daa
mov
add
pop
jb
pop
push
mov
sbbl
cmp
mov
stos
push
mov
loopne
mov
repnz
or
xchg
lods
cmp
aam
sbb
pop
cwtl
xor
lock
lahf
inc
mov
sbbl
incl
pusha
cmp
outsb
mov
dec
fadds
inc
and
loopne
dec
lcall
fsubr
insl
and
cmp
je
test
adc
lds
fsts
sti
mov
sbb
ret
or
clc
jbe
pop
mov
dec
mov
xchg
adc
cmp
push
and
dec
pop
add
call
or
movb
aam
xor
pop
adc
or
test
adc
inc
or
add
inc
inc
sbb
cmp
cmp
add
adc
data16
add
mov
scas
push
or
add
sahf
push
cmp
stc
das
inc
xor
and
popa
hlt
sub
inc
lods
mov
test
pop
adc
or
xchg
sarl
add
xor
cmpl
and
push
lds
nop
cmpsb
xor
sub
jmp
jb
cs
add
cwtl
and
add
mov
cmpsb
mov
imul
lea
mov
nop
sbb
dec
sbb
mov
shrl
insl
repz
sbb
pop
mov
push
mov
cmp
and
daa
in
cmp
jmp
sbb
xchg
xchg
jne
lahf
dec
into
push
push
jne
addl
xchg
xchg
es
out
push
out
pop
dec
mov
or
lods
rorb
dec
xor
xchg
mov
mov
and
xchg
push
enter
inc
inc
jbe
inc
stos
test
cmc
leave
dec
pop
and
daa
pusha
scas
xchg
pusha
call
sub
setne
inc
sub
mov
mov
add
aam
clc
shll
push
out
mov
cld
loope
mov
xor
xorl
in
shl
arpl
add
jne
push
sarb
push
add
pop
out
and
jne
and
push
push
pop
insb
mov
fdivl
jne
sbb
das
jle
cmp
jnp
das
movl
add
pop
adc
enter
xor
in
sti
dec
adc
or
cmpl
rclb
jmp
mov
and
xor
fcomps
inc
clc
and
lods
jmp
cmp
je
lods
cmp
lds
lds
add
inc
xchg
in
je
insl
mul
cmpl
and
aaa
sbb
inc
mov
inc
jne
cwtl
pop
dec
inc
lret
dec
mov
pop
mov
adc
jbe
js
push
aam
fsubr
cmp
fsubrs
mov
test
jo
push
push
gs
push
and
loopne
in
push
call
xor
shll
xchg
dec
adc
sbb
lock
inc
inc
pushl
jmp
pop
inc
cmp
je
ds
push
lea
divb
pop
jne
les
push
fisttpll
aam
adc
jmp
cmp
dec
lds
mov
mov
inc
incl
fnstcw
data16
mov
push
jmp
test
movsb
push
adc
cltd
test
jge
sub
mov
jl
add
icebp
sub
je
jmp
add
js
fidivrl
push
and
push
or
ljmp
sahf
xor
jbe
mov
or
das
ret
or
pop
jl
sbb
cmp
sbb
aad
pop
dec
ret
inc
shrl
cmp
lcall
sub
adc
add
sbb
or
push
cmp
add
leave
mov
test
mov
shlb
dec
xchg
mov
jb
pop
lcall
test
mov
fimuls
add
or
or
mov
lret
push
push
rolb
inc
push
sbb
lock
insl
lods
add
push
fists
rolb
sarl
cs
adc
cmp
dec
mov
mov
js
in
jbe
cmp
jae
lret
inc
and
mov
fadds
cs
sub
xor
xchg
lret
in
xor
cmp
cmp
sbbb
fists
stc
pop
ror
adc
icebp
jnp
ret
add
cwtl
push
or
xor
in
add
test
adcl
je
mov
ds
xchg
push
punpcklbw
push
or
loopne
jb
sbb
ficomps
jnp
mov
push
mov
pop
sbb
or
repz
sub
imul
or
call
aas
cmp
popf
pop
push
cmp
pusha
mov
mov
jne
jle
test
or
je
ret
decl
push
mov
xor
in
dec
bound
pusha
and
jle
fidivrs
dec
movl
mov
sub
es
pop
add
shl
mov
pusha
mov
inc
fucom
xor
repnz
hlt
test
cmp
repnz
pop
test
or
or
add
lcall
inc
js
movsb
or
dec
xor
cmp
cld
into
xchg
or
out
jne
cld
aam
cmpsl
andb
fildll
jg
or
fadds
mov
pop
push
push
push
lcall
hlt
cmp
add
push
out
and
push
cmpl
addr16
shlb
inc
jl
pop
add
call
add
fucomi
ud0
add
mov
jmp
aad
lea
mov
faddl
or
mov
shll
sbb
dec
ret
subl
push
add
push
pushf
loopne
insl
cmp
mov
xchg
orb
daa
push
jbe
or
xchg
rclb
push
inc
push
out
fwait
inc
fsub
in
in
sbb
mov
cmp
cmp
xchg
out
xchg
sahf
xchg
mov
xor
loopne
aam
sti
push
xchg
lret
mov
cmp
cli
inc
mov
sbb
push
adc
dec
jnp
mov
idiv
push
mov
cmp
dec
es
shlb
outsb
imul
data16
arpl
sarb
mov
push
lret
mov
or
inc
out
mov
mov
inc
bound
lahf
jg
adc
or
cmpsl
jg
adcb
or
adcb
jmp
sub
or
imul
rcr
add
daa
sbb
repnz
mov
mov
das
push
xorl
lods
push
jl
cld
mov
xchg
or
cltd
inc
mov
popa
sbb
or
dec
scas
jge
pop
cmpsl
dec
cld
mov
into
cltd
shrb
insb
aad
sub
pop
pop
sbb
int
adc
loop
outsb
dec
or
jg
cmpl
std
jnp
js
and
push
pop
mov
mov
movl
or
inc
int3
mov
add
mov
mov
dec
sbb
push
xor
mov
cmpsb
add
cmp
mov
enter
sbb
add
ja
inc
jne
pop
ret
mov
cmp
notl
push
sbb
test
pop
jae
xor
push
sti
push
mov
mov
dec
aas
stos
xchg
pushf
add
add
mov
adc
xor
add
pop
rorl
es
add
xor
das
mov
addb
cmp
aam
or
pushf
xor
stos
add
shrl
sub
lock
movsl
add
out
stos
xchg
pop
shrb
inc
aaa
out
stc
cmpsl
pop
push
pop
cmp
pop
or
and
inc
inc
or
jns
mov
push
lock
dec
and
mov
fsub
dec
add
sub
jns
push
sbb
into
mov
outsl
cmpsb
nop
jns
cld
jns
ja
in
xchg
clc
xor
out
or
push
ds
push
mov
push
adc
les
rcll
add
rclb
or
pop
add
fst
jcxz
jb
push
or
jle
mov
andl
pop
lea
nop
loopne
lock
jl
and
adc
jae
scas
int3
bound
mov
push
stos
xor
sbb
and
xchg
xchg
xchg
mov
leave
sbb
inc
gs
sarb
lret
pop
les
mov
das
arpl
push
pop
ret
pop
popa
and
push
jbe
testl
addr16
mov
imul
movb
insb
adc
xchg
mov
jo
xchg
jo
icebp
add
sbb
cmp
add
add
push
and
repnz
push
insl
inc
sub
inc
dec
pop
inc
push
or
mov
or
scas
shll
jecxz
pop
cmp
sub
pop
xor
inc
or
loopne
pop
cmp
call
pop
mov
or
jp
sub
mov
and
pop
push
xor
push
push
pop
jle
jns
test
pop
or
pop
cmp
inc
mov
das
mov
insb
xor
sahf
enter
xchg
mov
mov
int3
cmp
push
and
inc
jae
insl
dec
dec
punpckhbw
rcl
pop
push
inc
xchg
cmc
adc
jnp
insb
pop
imul
push
dec
in
adc
sbb
sbbl
jge
arpl
in
mov
pop
neg
or
or
pop
add
pop
push
cmpsl
adc
and
out
inc
cmp
lock
or
xchg
and
sub
popf
push
push
mov
lds
push
jne
pop
xchg
popf
sbb
imulb
or
push
rcrb
add
cmpsb
clc
icebp
in
adc
pushw
add
ljmp
js
or
jmp
jbe
push
rcl
mov
push
pop
pushl
jl
sub
and
pop
jo
shlb
repnz
pop
scas
mov
rsm
xchg
adc
repnz
shlb
pop
adc
pop
outsl
adc
add
pushf
xor
cltd
sbb
adc
in
sub
sbb
and
add
cmc
cmp
scas
pop
loopne
movsl
adc
ds
add
nop
push
icebp
adc
add
xchg
pop
in
icebp
cmp
jne
fcmovnb
xchg
sub
div
cwtl
inc
sub
pop
dec
or
jb
adc
jnp
jnp
lods
adc
fs
push
sub
xor
push
mov
test
insl
push
pop
ss
or
mov
or
cmp
mov
mov
jp
mov
sbb
dec
fdivl
mov
dec
test
adc
sbb
sub
xor
lahf
cmpsl
shrb
cli
push
call
rolb
nop
sub
movsb
jb
or
sbb
mov
cltd
out
jge
dec
pusha
lds
mov
movsb
push
cmc
pop
iret
repz
test
pop
outsb
movb
or
mov
in
pop
sbb
sub
test
sub
sbb
cmp
push
imul
pop
and
xchg
shll
testb
inc
addl
cmpsl
pop
addl
push
fdivs
enter
and
movsl
and
pop
lds
xor
popa
xchg
and
sbb
loope
leave
dec
je
lock
jo
idivl
call
inc
mov
push
dec
mov
adc
xor
mov
lea
or
pop
push
and
mov
jbe
push
dec
and
jo
subb
iret
xor
sbb
and
fs
test
mov
push
push
pop
and
jo
and
add
sub
sub
jne
sarb
lea
shl
xor
popf
xchg
cwtl
or
leave
sub
icebp
enter
aad
cmpsb
psubsw
pop
lcall
pusha
imul
and
jne
addr16
xor
sub
push
int
stc
jl
pusha
jmp
add
or
sub
xchg
popa
jmp
xchg
mov
test
jmp
xchg
mov
push
mov
push
jle
jb
and
cmp
mov
shlb
or
enter
sub
outsl
pop
push
mov
movsl
inc
xor
jo
lods
ficoml
aas
add
cmp
cmp
enter
xchg
mov
add
sub
je
out
shrb
dec
aas
in
mov
cmp
xchg
push
add
push
cmp
js
xor
movsb
jne
outsb
test
sub
in
ret
push
js
dec
dec
cmp
and
mov
int
xor
andl
add
xlat
mov
loope
enter
adc
cltd
mov
jo
sub
xor
cmp
add
lock
cmp
pop
xchg
sub
jne
mov
jmp
loopne
enter
roll
pusha
dec
dec
lods
add
ss
imul
in
push
mov
dec
xor
inc
xor
ss
or
loop
xlat
enter
or
gs
and
and
jp
shll
xchg
cli
fs
sbb
fs
gs
push
fs
xor
loope
sub
push
mov
push
insb
add
adc
push
or
in
cs
roll
mov
or
cmp
jne
loope
psrld
mov
sbb
std
add
mov
add
mov
or
fmuls
pushf
mov
addr16
add
or
aaa
dec
mov
aam
xchg
lods
dec
mov
das
pop
inc
sahf
mov
push
lea
lahf
adc
cmp
popf
nop
xchg
dec
xchg
xor
adc
pop
dec
enter
fadd
jg
push
mov
sbb
psubusb
pusha
adc
xchg
or
dec
or
sbb
or
dec
mov
inc
in
out
adc
aaa
push
call
repnz
bound
repz
sahf
lods
aaa
nop
repnz
dec
ja
push
jmp
push
out
jp
pop
add
pushf
idivb
mov
inc
flds
lahf
dec
clts
push
mov
rorb
and
and
sbb
insb
push
or
push
dec
or
lea
sbb
cmc
pop
lcall
int3
fadd
loopne
mov
rolb
add
push
xor
pop
adc
mov
int3
add
add
sub
outsl
enter
or
je
add
pop
adc
or
xchg
sbb
push
jno
add
fcomps
insb
pop
push
je
push
loopne
pop
push
or
scas
and
xchg
push
add
fdivr
or
in
xor
add
fadd
xor
mov
or
add
pusha
cwtl
xchg
pop
ja
or
jg
add
sarl
enter
fwait
and
cwtl
mov
scas
mov
jne
inc
iret
mov
lods
and
leave
push
pop
stos
jmp
outsb
pop
dec
in
push
mov
add
lret
leave
xor
mov
or
test
rorl
cltd
out
pop
mov
shll
iret
xor
cmpsb
xor
dec
add
sbb
icebp
dec
icebp
pop
pop
stc
pop
xchg
inc
repz
sub
stos
sub
push
pop
je
out
mov
cmp
mov
in
push
sbb
or
inc
or
les
push
mov
sbb
mov
push
pop
xor
push
sub
mov
in
sti
inc
addr16
add
pusha
sub
mov
rorl
cmp
stos
inc
xor
insb
pop
dec
cmc
sbb
jmp
test
add
or
push
jle
and
pop
fbstp
cmp
sahf
add
or
xor
cld
inc
pop
sub
mov
stos
add
add
pop
shlb
ficoml
cmp
jmp
cs
push
roll
mov
movl
out
add
ret
mov
fidivs
test
lea
push
xchg
and
adc
rclb
adcl
cli
rclb
into
pushf
pop
loop
movsb
push
adc
stos
cmpsb
pop
add
iret
ret
cmpl
shl
or
xchg
mov
push
cli
cmp
aam
pop
adc
pop
call
xchg
repnz
mov
je
dec
sbb
push
fnsave
insl
pop
push
mov
lea
jbe
cmp
jns
mov
add
jecxz
ds
xchg
popl
adc
lret
fbld
in
push
xchg
cltd
leave
sub
jo
sbb
sbb
pusha
adc
sbb
test
lcall
movzbl
push
sbb
sub
xor
sub
cmpl
out
test
mov
je
xor
mov
rolb
inc
fs
fiadds
aas
andl
hlt
mulb
dec
xor
xor
pop
sbb
fwait
in
push
jmp
out
insl
mov
mov
mov
xor
sub
mov
mov
movd
ljmp
repz
push
lea
push
inc
push
cmpl
adc
inc
nopl
imul
cmp
dec
sahf
sbbl
fsubs
cmpsb
jo
pop
or
gs
mov
add
out
fmuls
out
cs
outsb
sbb
and
pop
cmp
loope
inc
cmp
or
add
or
add
ljmp
inc
jne
pop
push
mov
dec
adc
es
jb
cmp
incl
mov
inc
in
jge
cmp
jne
push
popa
push
aaa
bound
push
fidivl
push
ret
xor
cmpsl
mov
or
adc
xchg
jbe
test
pop
adc
push
adc
lea
lock
push
movb
outsl
and
inc
cmp
fists
mov
inc
cmp
in
sbb
adc
pusha
mov
into
aas
mov
roll
xor
xor
xchg
popa
call
cli
pop
notb
or
sbb
ss
mov
jnp
add
in
and
inc
inc
mov
fwait
jmp
call
pop
sbbl
scas
inc
sbbb
insb
or
in
pop
dec
adc
imul
pop
mov
lret
sbb
rorb
repnz
dec
xor
out
fwait
aaa
call
dec
mov
add
push
mov
cmp
jbe
mov
sbb
and
roll
out
in
and
push
lahf
sarb
mov
mov
sub
push
sbb
adc
divb
addb
mov
and
push
or
clc
rcrb
inc
sub
aam
mov
mov
movsb
es
mov
aas
repnz
sbb
popf
out
lahf
mov
movsl
lea
fsubrp
lea
gs
jl
mov
and
call
lock
movsb
and
aas
sbb
push
jle
mov
inc
mov
loopne
ret
lods
adcb
sbb
dec
sub
ss
bound
call
xchg
or
push
xlat
addr16
sub
sub
enter
sahf
sub
or
adc
in
mov
push
pop
stc
fdivrs
cmp
je
or
jne
arpl
daa
mov
push
loop
cmp
jl
push
pop
movl
push
and
mul
enter
and
jmp
out
leave
jb
ret
push
sub
and
lods
rorb
push
cmp
sbb
stos
or
dec
mov
or
cld
add
inc
sub
inc
mov
ljmp
xchg
push
mov
inc
cmp
jb
pushl
lea
push
sub
xchg
mov
shl
jg
flds
rcrl
fstps
and
dec
sbb
in
shll
push
adc
imul
cs
mov
dec
sbb
xor
sub
dec
fwait
mov
fnstcw
fwait
mov
lea
mov
add
or
mov
push
popf
inc
jno
inc
xchg
pop
ret
movsb
imul
lock
enter
js
and
pop
dec
cmp
push
adc
jg
aas
push
inc
lea
lea
pmaxsw
cli
mov
cs
push
lea
pop
and
nop
inc
lea
mov
stc
test
shrl
push
inc
shlb
in
jl
andl
dec
push
mov
pop
fdivrl
mov
dec
stc
cmpsb
push
es
pusha
test
scas
mov
jl
inc
outsl
jmp
or
jno
into
aam
call
cmp
test
test
dec
pop
call
xor
dec
shr
sbbl
push
sbb
xlat
orl
push
loopne
add
rorb
test
or
int
movsb
nop
pop
fs
outsl
dec
arpl
xchg
jl
jo
push
les
sbb
xor
js
pop
cmp
jne
pop
rcll
fnstenv
mov
cld
dec
add
mov
cmp
pusha
int
ret
adc
shlb
dec
mov
inc
sub
leave
mov
fisubl
and
or
add
movsl
lods
or
mov
aad
sbb
lods
pop
xor
dec
int3
ss
insl
push
inc
pusha
lods
xor
or
cmp
sbb
pop
cwtl
jne
mov
popf
mov
stos
pop
mov
loope
inc
das
outsb
test
inc
inc
cmpb
xchg
faddl
or
push
xor
pop
inc
into
stos
adc
add
and
rclb
mov
out
insb
and
jmp
or
or
test
je
inc
sahf
mov
inc
xchg
adc
mov
fs
or
sarb
negl
push
jmp
mov
call
mov
mov
ljmp
cmp
cmp
into
clc
xlat
add
or
pop
add
ja
testb
mov
push
sbb
cmp
pop
jo
jno
ljmp
push
je
adc
sub
push
scas
add
push
ret
lods
add
mov
fildll
or
loopne
mov
cmpb
dec
xor
subl
mov
rorb
pop
lock
std
inc
cmpsb
in
insl
sbb
xchg
test
jl
push
push
push
inc
cmp
jge
test
lahf
cmpsb
mov
adc
sahf
add
sbb
sub
push
push
std
dec
adc
push
xchg
xchg
pop
je
test
cmp
movzwl
mov
mov
pop
and
or
addr16
adc
in
jo
test
movsb
aad
in
cwtl
pop
add
push
or
lcall
push
push
movsb
inc
dec
push
lock
mov
jle
add
aas
fst
fstpl
sub
pop
pushf
inc
mov
add
cwtl
pop
and
icebp
mov
add
mov
push
xchg
push
mov
movl
dec
lock
outsb
xchg
add
pop
sbb
push
push
push
push
and
inc
js
mov
fldcw
mov
cwtl
xchg
mov
lea
rclb
pop
pop
hlt
mov
dec
fisttpll
xor
add
mov
ds
insl
push
incl
loope
lock
cmp
je
cmp
jbe
lods
clc
add
mov
je
or
xchg
aam
jnp
pop
int3
add
test
and
ret
sub
int3
pop
sahf
mov
cli
ja
and
inc
sbb
adc
push
mov
mov
mov
scas
jle
inc
scas
mov
inc
sub
fcmovbe
pop
push
mov
cmpsb
cmp
pop
pop
js
mov
js
jb
pop
sub
dec
ds
push
sub
rclb
lods
testl
push
mov
shlb
xor
add
rep
movsb
scas
sarl
int3
or
mov
data16
rorl
and
lock
ret
xor
mov
sbb
pop
loopne
lea
test
fsubrs
in
clts
mov
xor
or
pop
sbb
sbb
enter
je
test
xor
xor
sub
in
int3
aad
jg
dec
jno
push
and
bound
push
test
pop
pop
inc
loope
lods
sti
mov
insb
jns
in
stos
int
out
and
test
inc
inc
je
ds
jmp
aaa
lret
pop
insb
clc
ds
mov
jp
add
jne
cmpsl
adc
movsb
jmp
dec
in
rolb
fnsave
add
orl
dec
test
mov
or
xchg
adc
cld
push
cmp
push
mov
cld
push
sbb
push
addl
jmp
push
mov
jmp
push
fdivrp
lret
cld
and
lods
ret
push
or
mov
fisttpl
in
push
mov
adc
xchg
mov
mov
mov
je
pop
test
lea
scas
into
xchg
mov
add
add
lea
ja
adc
movb
mov
rcr
int3
mov
fwait
out
push
data16
sbb
xchg
xchg
ja
cmp
pushl
inc
adc
xlat
jmp
test
hlt
into
add
inc
push
xchg
pop
cmp
mov
aaa
mov
rorb
aaa
int3
and
xchg
sarb
sarl
mov
testb
not
pop
dec
inc
cmp
mov
adcb
sub
cmp
shrb
sahf
test
fwait
add
inc
in
pusha
sub
xchg
fwait
ss
jne
push
lret
mov
dec
je
cwtl
xchg
mov
xlat
pushf
sbb
mov
dec
mov
jns
sbb
lea
aam
addr16
xchg
inc
ss
imul
push
add
inc
inc
inc
daa
jge
out
stos
mov
xchg
mov
dec
shlb
sub
aam
adcb
push
je
mov
lock
mov
lahf
lret
mov
cmp
and
jne
adc
stos
sbbb
pop
aad
xor
ret
imul
push
arpl
je
nop
ljmp
dec
loopne
push
jne
add
in
lock
mov
outsl
rclb
cmp
dec
je
dec
test
pop
or
js
sahf
call
lea
orl
sarb
mov
js
mov
and
decl
adc
sarb
jae
lea
jmp
sbbl
or
inc
inc
cmp
jbe
mov
sbb
pop
or
and
mov
sub
sub
mov
insb
mov
adc
sub
sub
inc
movsb
mov
xor
jo
add
cwtl
jo
outsl
pusha
push
in
xchg
lods
rcrb
lods
dec
pop
hlt
mov
xor
push
incb
call
call
mov
sub
jmp
js
or
push
lock
arpl
add
xor
push
cmp
add
xor
and
cs
pusha
sub
mov
jns
mov
mov
mov
add
jmp
in
rorb
pusha
jb
adc
push
add
cwtl
fcomps
ret
into
jnp
cmp
les
mov
dec
test
push
inc
fadd
adcb
cmp
xor
into
adc
insb
icebp
mov
fmull
aad
popf
dec
stos
shrl
dec
inc
or
mov
sbb
sahf
sbb
ja
pushf
mov
sbb
loopne
and
psubb
gs
push
je
jo
xchg
aaa
jno
pop
inc
loopne
test
sti
jmp
lock
and
pop
loopne
jae
jo
mov
or
jbe
ljmp
in
repnz
sub
lret
push
pop
cs
cmp
fwait
insb
add
push
mov
xor
xlat
movsb
push
cmp
in
adc
orl
insb
and
sub
adc
xorl
xchg
mov
xchg
pop
inc
lock
xchg
pop
cmp
cmpb
test
adc
js
cmp
inc
mov
push
adc
jne
mov
sbb
andl
sub
adc
add
mov
pusha
mov
mov
push
adc
lea
clc
lea
sbb
rorb
mov
push
mov
dec
mov
xlat
hlt
xor
es
sti
mov
or
or
mov
push
or
ljmp
je
mov
aam
add
cmp
jbe
pop
or
jns
iret
mov
dec
dec
dec
clc
jne
mov
push
test
and
add
aaa
sub
lea
pop
add
pop
stos
es
test
xchg
dec
and
xchg
mov
hlt
push
and
hlt
jns
or
inc
pop
orb
test
pop
pop
mov
pushf
push
pusha
fidivrl
cmp
jae
test
mov
and
subb
js
fildl
cld
loopne
fnstenv
mov
and
jae
add
in
xor
push
add
or
add
xlat
cld
clc
pushl
push
push
jp
cmp
lea
lods
inc
out
mov
mov
orl
data16
or
shrb
xor
rol
xchg
clc
sar
fiadds
add
cmp
push
mov
les
and
iret
je
faddl
push
or
mov
push
and
and
mov
push
lea
int
mov
shlb
imul
xchg
jns
mov
push
adc
xor
lods
pop
xor
fwait
inc
lea
inc
test
dec
arpl
mov
stos
loopne
xor
push
cmpsb
adc
adc
add
jp
jmp
cmpl
pop
lahf
negb
les
push
cmp
adc
adc
cld
fstpt
push
mov
cmp
jle
or
adc
jne
lea
mov
jae
lret
ja
mov
dec
aas
imul
cmp
roll
sub
das
push
jmp
pusha
ret
xchg
mov
push
mov
xor
daa
cmp
cs
jnp
or
outsb
push
gs
adc
jae
mov
in
add
lahf
xor
mov
jmp
adc
and
mov
or
addb
loope
cs
mov
mov
leave
fildl
movzbl
loopne
shll
ret
sub
xor
mov
iret
mov
add
in
mov
dec
ret
add
aam
or
jle
mov
push
pop
push
or
dec
jns
mov
stos
pop
add
mul
seto
inc
dec
push
sub
iret
into
xor
insl
adc
jmp
adc
add
mov
push
ror
or
jp
loopne
push
sarl
inc
repz
xor
xor
mov
push
cmpsb
test
fdivrl
lea
mov
mov
pop
xchg
push
xchg
cli
in
call
xchg
xor
lret
in
push
mov
lock
jmp
subl
in
rcll
pop
cmpsl
xor
test
movsb
ret
inc
test
repnz
jge
mov
mov
mov
inc
dec
gs
cmp
stos
and
and
and
test
sarl
insb
pop
push
lds
test
adc
addb
jl
jmp
jo
jbe
fcoml
aas
ret
sbb
sub
jmp
enter
aad
mov
pop
sbb
add
addr16
nop
shll
es
cli
mov
sub
jmp
pop
add
arpl
sub
jmp
xor
xchg
inc
mov
test
xchg
fiadds
aad
xchg
out
cmp
mov
or
mov
jb
addr16
je
cmp
lcall
sub
shlb
aas
xor
mov
jle,pn
mov
insl
or
jb
xchg
inc
aaa
les
cmpsl
pop
add
addr16
pop
sbb
lock
data16
add
sbb
push
mov
addr16
xlat
mov
add
push
mov
dec
xor
dec
push
ds
xchg
sbb
sbb
js
inc
push
dec
enter
enter
push
fimull
lea
sahf
mov
sarl
adc
clc
add
jo
mov
rcrb
and
daa
in
add
adc
daa
and
mov
mov
push
sub
out
add
pop
jp
data16
mov
inc
sbb
push
sub
loope
add
jmp
xchg
cltd
cmp
jmp
test
add
pop
add
pushf
mov
dec
xchg
call
pop
cmpsb
sub
test
add
sbb
fcoms
ret
jbe
or
push
mov
cmpsl
push
call
hlt
int3
gs
or
cmp
sahf
mov
rcll
call
in
jl
cmp
jmp
clc
mov
nop
movsb
or
jl
dec
adc
enter
inc
jl
or
int
or
mov
out
add
cmpsb
out
popl
or
out
jle
add
clc
jno
pop
mov
sub
pop
mov
add
sbb
xor
icebp
or
xchg
inc
fimuls
repz
sbb
out
pop
pushf
or
sbbl
sti
sbb
or
and
or
je
adc
jnp
mov
call
cmpb
test
jmp
push
fadds
xchg
imul
jne
mov
in
push
dec
fsubr
push
call
gs
in
lahf
cli
jnp
xchg
and
cltd
out
add
sub
cmp
pop
inc
mov
insb
or
pop
push
and
dec
cli
popa
sahf
rorl
dec
dec
jns
sub
cmp
sbb
push
int3
in
test
adc
xor
test
test
in
push
pushf
loopne
ret
fldenv
stos
xchg
lds
xchg
mov
movsl
cmp
cmp
jb
sbb
fadd
fcomps
dec
add
rorb
das
das
mov
sbb
mov
lret
mov
cmp
cmp
add
add
movsl
or
mov
xor
sub
mov
movsl
aas
ds
je
into
jo
inc
dec
adc
push
lods
outsb
pop
lea
loopne
fld
mov
das
push
ret
aam
test
add
icebp
mov
sbb
sub
pxor
push
sub
lcall
xchg
sbb
xchg
rolb
or
xchg
mov
cmovg
jmp
mov
out
iret
inc
inc
dec
int3
cmp
jae
sub
loopne
inc
gs
adc
or
lahf
int
mov
ljmp
push
enter
push
cmc
xchg
shlb
fisttpl
cmc
push
inc
mov
aad
cmp
fstpt
add
cmpsb
js
dec
dec
push
push
js
idiv
inc
inc
mov
xor
aam
pop
mov
or
sti
mov
into
jmp
decl
push
xor
adc
push
add
xchg
jle
sub
orl
jmp
cwtl
fsubrs
add
cld
mov
add
push
test
ja
or
cld
push
cwtl
cmp
insl
enter
or
outsl
addl
nop
or
pop
add
add
mov
mov
pusha
daa
or
enter
push
jmp
roll
xor
imul
inc
or
add
push
addr16
sbb
xor
inc
cmpl
adc
sub
imul
or
gs
icebp
pop
sbb
or
or
or
mov
sbb
jmp
test
or
add
sub
adc
out
stos
ret
add
cs
push
pop
pushl
jmp
push
add
sbb
lods
xor
in
push
pusha
inc
mov
push
xchg
fcoml
into
rolb
cmp
js
xor
cld
testb
out
add
push
push
mov
loop
rol
mov
dec
adc
cmpb
fidivs
ljmp
push
sub
and
pop
add
sub
insl
arpl
adc
ja
push
enter
push
je
or
and
or
adc
outsl
insl
es
inc
sbb
or
push
pop
cmpsl
test
push
rcr
pop
mov
sub
cmp
fnstenv
inc
jmp
push
push
ficoms
mov
sti
sub
mov
idiv
jge
or
fisubrl
out
test
add
test
cmpsl
sarb
sub
mov
ja
push
je
adc
add
cs
or
not
cmp
int
aaa
jne
and
add
mov
mov
push
mov
jne
mov
subl
test
in
in
and
mov
es
pop
sub
test
mov
add
call
lds
push
pusha
fpatan
adc
fstpl
push
mov
mov
decl
mov
pop
pop
das
push
inc
jecxz
or
add
mov
or
xchg
add
std
arpl
mov
stos
aad
repnz
jb
or
cmp
push
add
mov
jbe
pushl
push
add
stos
xchg
cld
je
mov
mov
adc
ja
cmpb
push
push
or
or
xor
sbb
and
cmp
xor
cmp
jb
inc
mov
fsubs
sbb
ds
fadds
cli
lar
data16
jmp
cmp
sub
push
inc
sub
mov
adc
es
push
add
aam
aam
push
fidivs
and
fcmovnu
insl
incl
jmp
mov
adc
shlb
lea
cli
ja
aam
in
adc
ret
push
adc
daa
xorl
dec
daa
nop
adc
xlat
test
iret
push
xor
dec
and
mov
in
xorl
pop
or
push
addr16
or
push
js
scas
push
in
adcl
pop
in
fisttps
sub
adc
sbb
push
cmp
fwait
add
adc
xor
xchg
or
js
jns
pop
repz
addl
and
rcrl
push
pop
cmp
cmp
popa
pop
inc
fisubl
outsl
mov
pop
sub
cmp
ja
pop
sbb
add
pop
cmp
jmp
adc
shl
dec
cmp
lea
jl
mov
mov
mov
inc
sub
dec
jns
mov
lods
cld
push
ret
jne
jmp
loopne
inc
dec
xor
lea
push
sahf
pop
dec
mov
or
mov
dec
add
mov
adc
fldl
xor
add
fnstenv
mov
dec
or
xor
add
cmp
jbe
pop
and
cmp
adc
cmpsl
in
dec
push
sub
mov
and
pop
ljmp
add
and
lds
shll
clc
es
nop
in
add
adc
and
movsl
mov
adc
ret
cli
loope
cld
push
mov
push
cmp
mov
dec
or
push
dec
enter
call
pop
cmpsl
test
xchg
add
in
pop
cmp
jo
in
push
inc
rorb
cmp
ret
pop
fadds
pusha
lock
stos
and
cmp
or
ffreep
jge
fildl
lock
int3
push
test
or
loope
mov
inc
push
or
inc
imul
lods
adc
jbe
aam
add
cmp
mov
cmc
or
push
cwtl
ret
je
out
pop
mov
adc
aas
xor
push
clc
fisttps
or
inc
adc
mov
push
adc
ja
or
cmp
jne
fs
pop
and
push
xor
test
daa
aam
mov
std
lret
push
push
add
push
add
outsb
psubw
jle
arpl
jp
xorb
pop
rcrb
cmp
es
sbb
in
push
cmc
dec
imul
add
add
ss
int3
rcll
jmp
mov
ret
inc
fmull
pop
xchg
xor
dec
scas
cwtl
cmp
pop
mov
sub
push
bound
ss
jle
mov
cmp
out
jl
movsb
add
mov
notl
or
jecxz
loopne
dec
es
adc
rorl
mov
into
push
ja
call
sub
inc
inc
push
scas
pop
adc
push
lods
cld
pushf
lock
push
jge
xor
ja
mov
outsb
add
nop
xchg
sub
test
push
push
dec
pop
je
lret
cmpsb
or
inc
push
push
mov
cmp
mov
pusha
mov
xor
ss
sarl
push
pusha
xor
sub
add
lret
scas
sub
mov
inc
xchg
xchg
sbbb
lcall
xchg
xchg
inc
mov
jmp
clc
stc
mov
add
lahf
sbb
test
adc
ret
push
push
daa
mov
xor
inc
sarl
mov
add
pop
mov
jg
mov
pop
mov
mov
stos
pop
incb
mov
push
adc
and
push
daa
popa
inc
jbe
sub
cs
cmp
sbb
jbe
cmp
pushl
jmp
pop
jmp
or
or
sub
and
push
mov
adc
push
inc
adc
and
jg
push
mov
pop
decl
mov
hlt
adc
inc
loopne
call
clc
push
lods
lcall
cmp
test
or
lock
scas
nop
lret
add
xlat
or
or
pop
dec
fdivs
adc
jmp
arpl
orl
insl
call
xorb
add
in
std
inc
es
les
lock
and
add
ror
mov
mov
aam
mov
adc
jge
loop
in
inc
mov
out
xlat
mov
xor
push
and
inc
pop
int3
scas
and
jl
clc
jge
jl
test
mov
xchg
cmp
and
insl
leave
add
adc
adc
add
into
or
shr
inc
stos
or
xchg
cmp
inc
addl
dec
adc
rorl
sub
pop
dec
mov
add
call
or
mulb
dec
push
xor
jbe
add
stos
mov
nop
in
shlb
testl
add
and
mov
xchg
das
mov
adc
sub
sarb
sbb
aad
std
lret
scas
add
add
or
pushf
mov
xor
nop
add
jae
lods
add
mov
or
pop
inc
pop
pop
clc
mov
imul
jbe
dec
out
adc
sbb
adcl
adcb
loope
dec
or
icebp
push
dec
cltd
sbb
jmp
add
dec
mov
les
ficomps
mov
add
inc
pop
shll
or
enter
and
push
test
pop
or
fdivrs
push
std
sub
push
test
add
fisttpl
insb
mov
push
adc
xor
test
add
and
or
aam
push
push
js
mov
dec
leave
rcrb
pop
ror
movsb
push
fmuls
mov
leave
mov
popf
push
jns
xchg
lods
sbb
mov
xchg
adc
hlt
imul
xor
rol
sub
ret
aaa
adc
or
jo
mov
iret
jp
sbb
sub
fucompp
and
movsl
push
dec
cmp
fadds
cmp
xchg
push
pusha
jnp
arpl
insl
adc
and
imul
fstpl
je
add
out
imul
dec
lret
into
in
push
outsb
clc
inc
push
jae
push
clc
add
mov
aad
sbb
push
push
shlb
xor
add
ret
loope
push
imul
pop
ret
push
push
fwait
mov
or
jle
pushf
jo
sub
inc
inc
pop
push
clc
pop
or
in
imul
pushf
push
popf
inc
jle
and
add
outsb
sbb
or
xchg
mov
jecxz
xor
ja
jmp
inc
movsb
pop
xor
aam
and
or
adc
je
inc
sbb
out
mov
faddl
pop
es
cmp
cli
push
mov
call
cmp
jl
jo
ja
push
test
jl
aaa
xlat
push
scas
cltd
push
jmp
xchg
push
enter
adcl
pop
inc
sub
ret
and
mov
push
mov
mov
dec
fsubs
outsl
dec
and
or
lock
clc
aaa
mov
nop
jle
mov
je
outsl
das
sub
jbe
jmp
imul
push
xchg
pop
aam
lahf
adc
sub
rclb
andb
inc
push
es
cmp
shll
or
movb
push
or
mov
in
xchg
inc
or
outsl
out
cmp
test
inc
into
lcall
mov
cli
add
ja
adc
aas
dec
pushf
add
jne
sbb
shrb
popa
into
jmp
xchg
or
push
idivl
loopne
cmp
cmp
aam
lds
les
mov
sbb
mov
pop
push
add
add
inc
stos
add
and
jl
mov
into
leave
mov
xlat
xor
cmp
fisttpll
and
shl
push
jp
sbb
or
mov
stos
jo
pushf
rclb
inc
sub
inc
mov
stos
out
mov
cmpb
je
nop
sti
mov
dec
sti
jmp
call
push
and
in
mov
pusha
push
push
cmp
movsl
sub
sbb
addb
test
mov
fidivl
adc
rcl
cmp
inc
dec
aam
adc
xchg
add
sbb
lret
in
mov
jl
repz
mov
ret
add
lds
add
cmp
loop
push
add
cmp
jb
mov
add
add
xchg
pop
add
add
add
popa
pusha
cmp
sahf
dec
ljmp
loop
ja
notb
and
push
push
je
out
dec
bound
inc
add
rolb
ret
add
hlt
xchg
lock
movsl
pop
mov
mov
inc
test
sub
pusha
idiv
insl
mov
je
test
jle
push
add
int3
xlat
fldl
and
jmp
inc
inc
cs
mov
pop
ret
xchg
push
add
mov
cld
mov
and
lock
push
aam
sbb
hlt
test
pushl
int
dec
movsb
adc
mov
xor
adc
testl
sbb
imul
dec
popa
test
sbb
xor
pop
or
sti
xchg
ror
test
repnz
mov
add
adcb
fstps
push
dec
inc
or
fsubrs
incl
adc
das
fsubl
sti
test
pop
push
repz
jne
dec
rorl
sbb
int
mull
lret
pop
cwtl
mov
xor
push
mov
xchg
push
gs
add
push
aaa
or
or
test
insb
push
in
mov
out
dec
or
mov
rcrb
scas
push
push
xor
add
js
or
iret
or
push
jbe
lret
dec
lock
aad
add
sbb
test
mov
hlt
idivl
mov
or
cs
and
ljmp
aaa
inc
adc
mov
inc
in
out
mov
xor
add
icebp
jo
mov
mov
arpl
or
push
push
mov
sar
add
arpl
iret
jbe
in
mov
fucomip
mov
xchg
push
pop
lods
push
xchg
or
pop
sub
out
add
mov
jb
sub
or
sbb
add
mov
setle
inc
mov
fsub
andb
int3
aas
test
xchg
fcompl
ja
jno
and
in
adc
sarl
pop
rcrb
inc
inc
outsb
imull
sbb
adc
mov
loopne
push
dec
pop
pop
adc
sti
es
xor
test
adc
pop
jbe
jne
push
insb
mov
fcompl
les
dec
sub
jb
and
faddp
ss
sub
cmp
in
imul
vsqrtps
mov
jb
cltd
mov
mov
add
mov
sub
push
mov
push
or
aad
adc
dec
in
jb
add
add
xchg
xchg
lret
and
sub
push
dec
sub
xor
xor
push
cmp
lret
movsb
or
inc
sub
xchg
xchg
or
inc
push
dec
push
pop
dec
ja
jecxz
push
stos
pop
adc
add
movb
insl
pop
int3
sbb
xchg
dec
rcr
mov
dec
mov
or
sahf
fsubrs
rcrb
dec
dec
dec
aam
push
movl
loop
inc
pusha
add
pop
mov
lret
sub
ret
ja
add
cmp
pop
or
sbb
mov
and
into
addl
and
and
or
enter
mov
add
adcb
jnp
fs
push
cmp
dec
inc
inc
push
cmp
nop
cmp
xor
cmp
nop
inc
sub
and
nop
inc
push
sbb
mov
push
cmp
or
daa
pop
js
aad
clc
add
jge
popl
sbb
xor
sub
xchg
fldl
fnstsw
mov
dec
push
cmpb
push
sub
out
xchg
mov
adc
mov
jo
or
sub
pop
cld
es
push
lea
movsb
or
pusha
sbb
add
jle
inc
jno
in
mov
daa
cld
ror
inc
pop
sub
or
inc
add
out
xor
adc
dec
and
jle
popf
adc
push
push
jp
mov
cmp
inc
loopne
ja
or
jno
dec
scas
insl
pop
push
xor
sbb
jg
jbe
add
inc
adc
pushl
mov
pushl
mov
popa
push
out
sbb
add
xor
out
jp
add
inc
mov
ljmp
jbe
push
jmp
dec
and
inc
or
jmp
pop
dec
or
stos
fisttpl
fildll
add
jo
call
pusha
mov
sub
test
adc
enter
push
or
jb
pop
add
push
or
and
adc
jns
push
inc
adc
out
or
fisttps
std
cwtl
push
add
mov
push
xor
aaa
add
mov
inc
inc
rcrl
add
test
nop
ret
cmp
fwait
and
sub
pop
xchg
xor
mov
mov
jl
jl
mov
orl
dec
out
inc
and
daa
or
sbb
xchg
push
add
lods
ret
push
fcmovb
ss
sbb
cmp
test
mov
add
add
mov
add
pop
pop
xchg
mov
popf
pop
add
mov
add
cmc
fwait
pop
nop
adc
shl
sub
pop
adc
xor
sbb
cltd
or
cld
xor
fcoml
xchg
inc
mov
add
xor
mov
pop
sbb
xorb
addl
xor
in
jecxz
rcrb
aam
and
push
xor
lcall
adc
dec
js
xor
push
iret
sub
cmp
js
imul
dec
lret
xor
cltd
mov
mov
insb
or
xchg
xor
mov
push
sti
testb
mov
pop
fistpll
jmp
lods
mov
or
ljmp
pop
add
adc
lds
or
cmp
mov
ja
jne
ret
cld
mov
nop
adc
add
fs
addr16
je
adc
pop
pop
jne
cmp
jae
push
imul
jmp
mov
add
test
and
leave
jmp
xchg
pop
into
sbb
inc
pop
in
add
xor
inc
test
mov
push
ret
gs
int
sub
dec
sbb
xor
xlat
mov
sub
adc
insb
add
dec
mov
pop
das
xchg
add
jmp
cwtl
das
inc
shlb
mov
add
out
and
mov
or
in
xchg
and
xor
cli
or
nop
or
jge
sti
rcrb
addl
xor
and
arpl
in
sbb
popf
jb
xor
xor
scas
aad
add
cmpl
push
and
xchg
inc
test
inc
pop
notl
mov
test
adc
add
add
adc
cmp
stc
or
adc
xchg
aaa
lds
inc
xchg
out
adc
gs
loopne
mov
repnz
test
inc
psubsw
mov
jns
adc
push
ret
mov
enter
xchg
or
sub
jne
in
bound
push
cmpb
and
int
push
dec
loope
in
inc
xchg
push
sub
push
push
mov
or
push
popa
or
divl
adc
outsb
and
lods
or
pop
sbb
mov
push
stos
xor
mov
jo
mov
adc
fcoml
pop
mov
loopne
pop
lea
je
push
jmp
mov
or
cmc
movsb
ljmp
out
stc
xchg
sbb
dec
add
push
in
ret
in
push
xor
jne
xor
xor
inc
sub
sub
loope
xor
ret
and
cmp
ja
push
mov
or
pushl
pop
jmp
stos
test
cmp
ds
dec
mov
jmp
mov
shlb
mov
adc
mov
es
mov
clc
dec
test
xchg
sti
mov
sub
or
or
shlb
pusha
push
pop
testl
negb
jmp
sahf
fdivl
push
fadds
push
scas
xchg
add
cwtl
jmp
sbb
lea
xchg
fmuls
sbb
jo
pop
xchg
inc
lock
orl
or
fwait
les
mov
dec
leave
push
cld
dec
push
mov
and
cmp
js
mov
jp
mov
nop
cmp
push
nop
and
adc
movsb
cmc
mov
and
pushf
xchg
dec
mov
sbb
leave
jg
movsb
adc
lret
add
ds
scas
aaa
mov
jle
add
mov
ss
xchg
nop
sub
scas
add
addl
xor
xor
cmp
push
jl
adcl
sub
cwtl
adc
fidivrs
push
sub
mov
cmp
pop
sbb
das
popl
add
leave
add
mov
fucomip
adc
cld
dec
imul
inc
mov
mov
cmp
sbb
pop
aaa
mov
cmp
mov
add
testb
adc
ds
bnd
push
enter
inc
lods
add
jmp
popa
call
xor
cmpsl
aas
mov
mov
insb
orl
jae
inc
sbb
cmp
sbb
or
pop
loopne
loope
push
jns
sub
add
in
lock
pop
hlt
std
orl
lret
mov
xor
or
mov
and
aam
fadds
xor
fsubrs
mov
sti
lods
pop
loopne
call
sbb
movsb
subl
lock
cld
pop
repnz
iret
sub
shlb
mov
popa
and
add
jbe
inc
sub
stc
xorb
je
sub
das
mov
jne
sub
adc
dec
in
dec
sbb
push
push
fwait
dec
lock
sub
movsb
movsb
or
pushf
push
push
adc
xor
sbb
ror
and
pop
add
out
cmpb
shrl
leave
in
call
sbb
pop
cltd
outsl
jmp
es
repz
mov
push
icebp
fs
xor
in
cs
or
mov
inc
or
add
add
mov
push
movsl
or
push
mov
hlt
pop
or
jnp
add
imul
insb
push
movsl
mov
add
xor
rcll
sarb
addr16
push
push
inc
mov
sarb
das
negl
mov
int
adc
and
sub
add
pop
test
cmp
sbb
xor
pusha
in
jo
dec
push
fcmovnb
lea
mov
xchg
clc
aad
testb
add
out
inc
dec
loop
push
pop
nop
mov
addr16
jmp
xchg
pop
xchg
sahf
popf
sub
pop
or
push
sahf
test
data16
loopne
push
inc
pop
mov
and
rcr
imulb
fnsave
adc
jo
rolb
popa
inc
cmp
loop
jl
mov
xlat
jno
lahf
add
imul
cltd
scas
pop
inc
mov
mov
cld
add
push
xchg
sbb
cmp
sbb
mov
mov
iret
popf
in
mov
loope
loop
adc
mov
push
jmp
adc
add
xchg
xchg
or
popf
pop
dec
sbb
mov
aam
or
or
mov
jmp
add
std
repz
adc
in
sbb
mov
add
add
add
xor
dec
push
je
dec
jne
shll
xor
or
xor
out
xchg
xchg
outsb
shlb
inc
lahf
insb
movsb
add
popf
subl
xchg
movsb
andb
add
filds
jmp
cmp
pop
lcall
mov
sbb
popf
pushf
xor
xor
dec
xorl
dec
mov
cmp
dec
jns
jp
pop
or
aaa
mov
add
aas
jg
popa
jl
xchg
push
add
mov
stos
cmp
cmp
and
imul
scas
movsl
or
jbe
add
test
mov
jnp
popa
pop
push
ret
std
addr16
ja
push
mov
adc
cltd
push
sub
xor
filds
dec
inc
inc
or
inc
or
inc
mov
loop
mov
repz
gs
mov
lcall
insb
and
imul
sub
push
fsubrs
push
mov
add
push
jnp
or
pop
inc
test
sub
cli
mov
lea
push
add
push
mov
into
pop
into
pusha
popa
pop
and
enter
or
xchg
lahf
lock
and
rorl
je
mov
or
xchg
iret
nop
inc
and
xchg
loopne
xor
pop
and
and
js
fld
or
inc
sbb
loope
iret
cltd
fwait
jne
sub
add
add
and
sti
and
and
dec
sub
dec
shll
cmp
push
daa
xchg
xor
pop
pop
add
sub
gs
sbb
mov
je
adc
and
cmp
test
and
cwtl
cmp
pop
or
and
mov
sbb
push
sub
inc
movb
lcallw
mov
xchg
push
inc
test
add
lds
ret
fs
mov
fimull
add
xor
or
sub
add
add
pop
mov
push
jl
loop
jp
inc
loopne
std
xchg
lret
andl
dec
jns
rorl
cmpsb
bound
into
fbstp
ret
xchg
arpl
cmpb
pusha
jb
js
ss
int
jmp
cltd
push
adc
dec
pop
adc
ret
movsb
jge
test
sbb
pop
push
cmp
fsubs
adc
out
popa
fcoms
cmp
add
test
push
mov
sbb
push
and
repz
xor
jmp
inc
mov
sub
lahf
dec
or
push
lahf
xchg
mov
jae
jne
jno
pop
gs
inc
dec
loope
movsb
dec
jmp
add
insb
mov
cmp
fadds
lahf
ss
mov
bound
xorb
aam
fs
jge
xor
rcr
and
fdivrs
fcoml
lock
popa
mov
int3
sub
push
rorb
hlt
push
mov
and
and
adc
int3
testl
mov
jnp
inc
xor
dec
inc
mov
divb
shlb
add
jle
jge
insb
inc
fidivrs
shrl
or
jne
dec
stos
sub
add
mov
inc
or
xchg
add
mov
rcll
js
ficoml
stc
push
push
fs
repz
fsubl
outsl
call
test
pushf
xor
push
cwtl
lods
inc
nop
or
adc
imul
stos
inc
imul
jp
js
jne
mov
scas
jge
cmp
xchg
inc
cmp
pop
sarb
push
jle
or
sbb
jmp
xor
dec
mov
sbb
dec
mov
insb
je
and
and
aam
inc
inc
mov
xor
cwtl
pop
jl
cmp
sti
sbb
rolb
pop
or
jbe
ficoms
insb
xlat
mov
mov
out
pop
ss
pop
test
and
push
jp
or
cmp
mov
mov
lds
bound
jle
push
or
sub
lock
or
rclb
sub
jne
cmpl
mov
inc
pop
add
and
mov
hlt
mov
mov
mov
xchg
ror
and
ja,pn
mov
aas
sbb
lcall
adc
inc
test
pop
and
add
mov
bswap
inc
les
mov
or
push
push
sbb
outsb
adc
cmpsl
lea
icebp
inc
movsb
test
add
pusha
pop
sub
shlb
push
icebp
push
mov
in
sub
pop
in
in
push
xor
pop
push
and
mov
pop
sub
sub
test
add
adc
test
inc
inc
add
pushf
cmp
movsb
mov
cmp
or
push
in
inc
pop
inc
fadds
addb
push
mov
push
movsl
mov
cmp
sahf
int
push
adc
or
pop
adc
pop
jne
add
out
mov
out
or
adc
insl
push
fbld
mov
push
push
nop
outsl
sbb
adc
les
fcomps
out
in
icebp
push
clc
push
push
sub
jecxz
lods
and
shll
push
xor
mov
xchg
mov
mov
das
loop
sbb
push
sub
movsl
and
adc
mov
and
call
xor
lcall
cmp
fwait
dec
jp
in
dec
rcrb
inc
push
sub
jo
adc
arpl
lret
clc
push
mov
sbb
cwtl
int3
pushf
inc
stc
jnp
insb
fildl
insb
jmp
or
icebp
dec
inc
inc
xor
sbb
or
lods
ljmp
sub
lea
pop
mull
or
mov
xor
push
inc
mov
adc
dec
repnz
or
cmpl
inc
test
inc
inc
in
mov
add
mov
sbb
lcall
jb
mov
dec
ss
push
dec
push
push
loopne
or
or
daa
jb
mov
daa
jae
mov
andb
sbb
cmpb
rol
fs
pusha
ds
dec
in
jb
dec
sub
or
inc
jmp
ja
fisubrl
ja
pusha
fs
or
insb
data16
add
add
and
jbe
or
cmpsl
add
sbb
sbb
fisttps
lock
js
sub
repnz
scas
mov
mov
dec
xor
inc
add
outsl
js
pop
arpl
xor
pushf
mov
xchg
or
ret
xor
inc
push
addb
push
and
in
jp
lock
xchg
dec
xor
adc
mov
or
outsl
aaa
cmp
lret
in
bound
cmp
lret
or
add
push
mov
xchg
push
lret
or
and
dec
addb
pop
xchg
xor
fwait
pushf
pop
sub
xchg
sbb
inc
repnz
sub
jl
cmp
sbb
fs
jecxz
fcoms
pop
cmp
pop
sbb
or
pop
sbb
sbb
xor
mov
xor
jns
push
mov
and
jo
push
pop
push
jne
jns
inc
dec
cmp
stos
pop
sub
aad
xchg
pop
push
add
lret
pop
and
mov
adc
in
xchg
sub
and
mov
xchg
xor
xchg
lea
sbb
pop
data16
aas
push
mov
mov
inc
loopne
push
sbb
dec
lcall
mov
loope
iret
lods
repz
mov
in
roll
and
scas
int3
imul
xchg
inc
in
xchg
pusha
xor
inc
add
rolb
push
push
rol
dec
jl
movsl
loopne
push
jp
idivl
sbb
or
and
mov
jne
pop
outsb
push
imulb
adc
add
fwait
jo
inc
clc
xchg
inc
push
mov
int
in
jns
adc
dec
stc
nop
add
leave
or
pop
dec
mov
and
sub
fnsave
mov
ficomps
fistl
enter
movsb
mov
add
cmp
je
out
dec
push
inc
mov
or
cmp
testl
gs
test
add
aas
push
and
cmp
movsl
mov
loope
cmp
pop
js
lret
stos
push
mov
and
sbb
push
jmp
pop
fs
sub
push
fcmovnbe
or
xlat
mov
roll
sbb
ljmp
cmpl
mov
and
or
sub
mov
add
inc
dec
xchg
mov
stos
cmpsl
dec
dec
pop
enter
pop
or
jmp
or
rcll
push
sub
sub
sysenter
cmp
rorl
ss
sub
pushf
adc
int3
cltd
insl
loopne
fs
out
call
or
pusha
inc
lock
cmp
es
inc
loope
mov
sbb
out
enter
enter
pusha
fs
mov
and
mov
out
jns
aam
sbb
or
add
js
sbb
mov
repz
sbb
testl
sbb
out
push
pushl
or
lods
and
stc
pop
push
jbe
pop
cwtl
adc
subb
out
mov
rcrb
xor
dec
or
cmp
sub
push
loop
fsubs
jbe
leave
test
xor
imul
ss
mov
mov
jo,pn
jge
es
sub
sbb
les
dec
adcl
pusha
xor
jne
in
add
pop
pop
das
xchg
or
cmpsl
lods
mov
adc
inc
cmc
daa
daa
and
and
bound
sbb
sbb
or
adc
aas
dec
andl
pop
jmp
rcrb
sub
sub
inc
cmp
inc
arpl
xor
and
lock
adc
ljmp
xorl
popa
and
adc
mov
stos
and
sbb
pop
xor
jne
sahf
mov
cmp
or
xchg
push
sbb
in
stos
les
add
bound
mov
jbe
dec
inc
rcll
and
xchg
mov
add
adc
or
mov
xchg
or
mov
or
clc
das
in
push
sub
sbb
push
sbb
sub
push
xchg
xor
mov
mov
sub
enter
lea
pop
pop
jnp
enter
add
sub
push
subl
dec
sbb
xor
shlb
or
icebp
and
out
sub
mov
leave
mov
in
xor
imul
mov
or
sbb
subl
jo
ds
test
sub
fs
dec
cwtl
cwtl
lods
aam
xchg
sbb
mov
pop
lea
dec
mov
stc
push
mov
jbe
sub
sbb
xor
enter
add
dec
imul
xchg
cmpsl
dec
and
pop
sbb
push
sbb
jl
pusha
cs
push
and
adc
sub
xor
movsl
fcomps
add
adc
add
mov
inc
add
push
stos
inc
pop
dec
inc
ds
shlb
je
fyl2x
pop
xor
movsl
push
cltd
add
jnp
repnz
popf
sbb
pusha
into
push
in
xchg
pop
inc
mov
xor
loop
mov
es
cmpsb
sbb
sbb
insb
pop
inc
cmp
and
aaa
scas
sub
push
cmp
fwait
cmp
xchg
inc
xchg
sub
nop
dec
sahf
add
and
cld
and
mov
in
test
fs
mov
ret
sbb
enter
sbbl
lret
mov
add
sub
add
add
jg
loop,pt
mov
cmp
clc
or
inc
loope
push
lods
lock
xchg
pop
xor
leave
out
repz
cmp
jb
cmc
fwait
inc
mov
enter
cmpsl
mov
mov
lahf
inc
dec
mov
or
lds
cltd
pop
cmpb
xchg
mov
jns
or
or
lret
sub
sub
xor
sub
imul
inc
cmp
nop
lcall
dec
loope
xor
rol
pop
int
pop
add
add
xchg
and
jo
jne
jecxz
addr16
inc
sub
xor
inc
pusha
loope
out
mov
jmp
or
add
jns
dec
js
sbb
leave
and
das
and
pop
fdivl
fldl
jp
dec
adc
xchg
rcrl
cmpsb
sbb
mov
add
xor
mov
rolb
data16
inc
push
add
sub
js
movsb
or
pop
mov
js
and
inc
push
data16
in
mov
gs
xlat
pushl
pop
xor
push
add
test
call
sub
mov
scas
outsb
pop
add
roll
fstpl
cli
cmp
test
jne
and
push
addb
add
sbb
pop
or
add
pop
push
repnz
das
test
aaa
pushl
push
dec
enter
sub
dec
imul
mov
pop
sbb
inc
lret
push
dec
out
push
sbb
aam
sbb
aad
in
sbb
mov
sub
push
dec
sbb
in
jp
adc
dec
pop
movsb
cmpsl
xor
xchg
adc
das
lret
aaa
adc
es
daa
xor
and
or
pop
in
popf
rclb
addr16
or
or
pop
sub
sbb
xchg
inc
mov
pusha
jns
xor
jge
xchg
rolb
add
push
daa
push
add
mov
jl
push
idivb
push
pop
pushl
xchg
pushl
out
xchg
jnp
sbb
outsb
add
nop
sbb
dec
ffreep
adc
pop
in
test
and
pop
push
cmpsb
and
lods
jp
adc
xchg
movsl
adc
test
sbb
test
adc
loope
and
inc
cmpsl
into
sbb
inc
adc
in
push
dec
xchg
push
lods
rcl
pop
sbb
push
mov
mov
sub
shlb
dec
call
inc
pop
leave
out
fdivr
loopne
mov
inc
xchg
sbb
nop
add
xchg
sbb
fdivrl
in
jge
sbb
subl
pop
ds
fs
push
sbb
sub
push
push
push
imul
leave
and
in
jno
cmpb
sub
inc
pop
dec
stos
fsubrl
sbb
sub
and
and
imul
jge
or
mov
push
cmc
sub
and
xchg
mov
mov
sbb
push
test
mov
arpl
pop
pop
jmp
mov
movsl
aam
inc
mov
outsl
cmpsl
lcall
lahf
push
pop
jp
add
rcrl
stos
sti
mov
shll
xchg
push
int3
imul
aam
repz
mov
xor
xor
scas
inc
and
xor
and
or
jo,pn
pop
ja
add
jns
inc
xor
and
ss
movsb
pop
pop
sub
aaa
cmpsb
cmp
sbb
ss
fwait
loope
pop
call
sarl
sub
add
mov
dec
vpsubusb
sub
jecxz
ret
cld
jmp
and
fmull
in
mov
cmpsb
push
mov
les
mov
pop
jb
and
jb
mov
jne
out
scas
mov
dec
and
sbb
ss
push
inc
xor
mov
mov
aaa
inc
dec
push
push
adc
gs
out
xorl
adc
push
and
push
or
movsl
mov
dec
cltd
sub
sub
arpl
dec
xchg
add
push
stos
jne
insb
cmpl
repz
lods
aaa
test
inc
sub
or
shrl
cmc
jecxz
ret
fs
inc
mov
dec
dec
push
and
mov
mov
mov
daa
xor
pop
push
sub
mov
jno
dec
cs
sub
arpl
shll
js
pop
push
scas
sub
push
rorl
xchg
loopne
inc
cmova
dec
and
sub
daa
mov
cmp
xchg
pop
daa
inc
xor
pop
jle
add
dec
dec
andl
mov
and
sub
aaa
in
sbb
pop
xorl
or
adc
cs
dec
or
xor
sahf
test
inc
lods
ss
and
dec
pop
mov
pushf
ss
inc
test
outsl
enter
jnp
xor
push
packssdw
repz
shlb
or
add
pop
nop
sub
pushl
or
sbb
jnp
nop
dec
outsb
lds
push
in
mov
push
rol
or
lds
mov
aad
lcall
adc
push
mov
pop
mov
sub
or
ljmp
cmp
sub
das
add
inc
aaa
ljmp
sti
push
int
sub
push
adc
loopne
cmp
pop
sbb
ja
test
mov
mov
rclb
add
xorl
test
cld
rorl
sahf
mov
push
nop
add
pop
cmp
mov
std
int3
inc
jb
icebp
pop
lea
ret
xor
stc
aad
jg
jo
out
in
test
sbb
iret
ret
data16
iret
pop
xor
or
push
int3
xor
nop
dec
mov
cld
mov
lods
enter
and
adc
sbb
and
in
aam
and
add
popf
jle
dec
fs
cmp
ss
arpl
ret
sbb
fdiv
dec
xchg
jge
cmpsb
das
mov
out
pop
test
jl
cmp
sbb
lcall
add
pop
dec
js
cmpsb
dec
push
lods
lahf
and
movsb
and
data16
iret
adc
and
inc
or
jbe
or
pop
mov
divl
aas
cmpl
popa
sub
call
test
mov
sahf
xor
and
inc
add
test
lock
pop
and
push
push
fnsave
jmp
adc
dec
lret
inc
je
jp
adc
fmull
lods
iret
ss
pusha
xor
jle
pusha
inc
xchg
aaa
push
add
dec
jo
stc
inc
pusha
and
xchg
lea
in
xchg
pop
icebp
add
es
fiaddl
mov
push
call
mov
and
pop
sbb
dec
je
mov
stos
insb
inc
inc
leave
out
add
adc
pop
lcall
stc
mov
push
ljmp
mov
inc
dec
cmp
add
sub
dec
stos
insl
sub
cmp
test
rclb
jae
mov
shl
lods
pop
daa
cwtl
mov
mov
in
ljmp
lock
cmp
and
ret
inc
xor
cltd
pusha
inc
call
add
add
sahf
or
clc
or
inc
insb
bound
sarb
cltd
int3
sbb
clc
mov
pop
jo
pop
jge
mov
dec
jne
pusha
adc
cwtl
movsl
pop
cmp
push
je
sub
add
push
pop
xchg
mov
std
jo
popf
mulb
or
fdivl
fs
jmp
movsb
sub
imul
in
lds
pop
incb
xor
and
adc
shlb
es
incl
xchg
mov
add
push
rclb
xor
inc
dec
mov
sub
dec
inc
push
inc
inc
push
cmc
mov
pop
and
inc
in
push
sbb
or
push
movsl
cmpsl
pop
sub
insb
jo
pop
xchg
fstl
dec
dec
sbb
fstps
mov
mov
lcall
or
add
imul
sub
lock
and
jno
push
shl
mov
sbb
sti
mov
jnp
add
xchg
dec
mov
inc
pop
mov
fbld
mov
idivb
mov
inc
insb
inc
cmp
out
test
cmp
cmpl
ret
popf
add
add
push
loope
addl
inc
push
leave
jne
outsb
movsb
adc
push
push
push
out
imul
xor
insb
sub
push
sbb
jo
sahf
fildl
and
sub
hlt
mov
nop
popa
mov
inc
dec
and
ret
shlb
lcall
pop
add
and
cmpsb
push
stc
add
jns
imul
pop
mov
imul
xchg
sbb
and
xchg
ds
mov
shrb
ljmp
or
and
push
inc
mov
mov
cmp
pushf
cmp
push
mov
adc
les
jge
or
test
sti
or
cwtl
pop
sbb
mov
test
cmp
pushl
jb
push
mov
sub
pushf
push
rorl
rorb
pushf
sub
dec
mov
push
mov
sbb
add
sbb
das
dec
pop
xor
ret
lcall
inc
inc
mov
fildl
pushf
sbb
lods
push
int
fcmovne
and
mov
jb
or
pop
push
lsl
fiaddl
add
sub
cmpl
cmp
xlat
xchg
xchg
jae
mov
dec
sbb
jl
orl
jne
adc
ljmp
imul
and
or
jecxz
cmp
je
cmp
je
push
inc
cmp
xor
push
ja
mov
hlt
in
aas
jge
inc
hlt
jne
push
fidivrs
jbe
jge
movsl
dec
pop
pop
roll
jae
xchg
je
and
or
push
mov
jo
dec
in
sbb
jle
mov
xchg
mov
dec
add
or
cmpsb
fdivr
adc
push
add
lods
js
cwtl
test
add
pop
in
loopne
in
and
push
int3
adc
and
pop
pop
sub
add
les
pop
add
lea
xor
mov
lea
imul
jnp
scas
and
loopne
rcl
pushf
xor
push
sub
enter
int3
cwtl
and
jb
and
or
add
add
loopne
mov
jecxz
addb
sbb
mov
dec
or
es
push
add
incb
inc
je
or
sub
or
xor
xchg
fdivrl
nop
sub
dec
cld
shlb
sub
pop
rcll
icebp
mov
imul
in
and
dec
mov
inc
xchg
repz
inc
ds
clc
and
dec
add
ret
and
jns
adcb
ret
fcmovne
cmp
movsl
dec
dec
imul
push
icebp
pop
and
es
adc
daa
add
mov
jg
push
pushl
add
pop
clc
mov
sub
addr16
loop
cmpsb
nop
rol
dec
rolb
mov
test
bound
dec
sub
dec
lcall
xor
hlt
and
loopne
hlt
iret
pop
mov
call
lret
aad
nopl
roll
cmp
add
add
test
insb
lods
or
or
jnp
sahf
pop
shlb
or
add
mov
sarb
pop
fisubrl
ret
xchg
cmc
add
mov
add
jl
aaa
inc
stos
and
mov
push
imull
add
addb
fst
mov
es
orl
call
inc
pop
sub
mov
mov
aad
js
jp
mov
imul
xor
jg
popf
and
je
adc
mov
pop
sbb
push
ret
and
enter
stc
push
inc
xchg
push
loop
mov
xchg
adc
add
jle
add
or
insb
inc
add
out
jbe
mov
mov
cwtl
mov
xor
insb
push
es
push
push
lahf
xor
das
arpl
test
ret
cmp
xor
and
adc
inc
lea
push
push
inc
xor
xchg
mov
rorb
jb
dec
jne
or
lods
sbb
sarb
stos
push
sbb
imul
in
call
add
pop
iret
popf
std
sbb
push
and
mov
xchg
movsl
arpl
push
nop
aad
push
add
leave
fildl
and
and
adc
fdivrs
and
movsl
add
mov
mov
push
es
call
out
adc
icebp
inc
pusha
xchg
push
mov
jno
ja
clc
mov
or
ss
mov
jl
sbb
sar
nop
xchg
ljmp
jo
mov
icebp
and
sti
jmp
sbb
outsb
and
inc
sbb
aad
or
mov
jne
inc
inc
add
cmp
jne
rcrl
sbb
mov
jb
add
cmp
mov
call
inc
jmp
or
loopne
mov
ret
inc
inc
mov
jo
add
cmp
test
or
in
pop
clc
jg
push
call
or
pushl
aam
js
xor
movsl
push
mov
adc
push
adc
test
adcl
mov
popa
mov
lods
pop
pushl
mov
jo
cli
jmp
or
inc
inc
sub
sbb
cld
push
or
inc
movb
js
sbb
dec
mov
mov
adc
rorl
inc
sbb
adc
jbe
repz
fdivl
add
pushl
and
je
or
mov
cld
data16
jg
lcall
or
cmp
pusha
jb
adc
push
testb
pop
and
or
jnp
in
outsl
adc
jecxz
or
mov
dec
push
outsl
inc
test
jns
mov
push
andb
filds
xor
cmp
leave
jnp
or
pop
push
mov
cmp
sub
xor
mov
pop
inc
cmp
add
jae
rorl
mov
push
push
xlat
call
cmp
xlat
or
jo
cmpsl
adcb
dec
out
fbstp
rclb
adc
add
cmp
test
test
es
clc
or
and
adc
mov
or
nop
je
mov
leave
mov
dec
inc
jl
stos
add
dec
rclb
mov
jnp
sub
dec
cli
cmp
cmp
insl
dec
and
cld
mov
mov
in
movb
push
hlt
and
rcr
push
dec
aas
dec
xchg
call
es
mov
fs
jmp
push
add
mov
sti
mov
dec
and
aad
pop
pop
leave
call
add
in
and
adc
adc
cmp
rolb
push
lcall
mov
lret
sbb
sbb
push
lds
push
dec
and
dec
dec
imul
fadds
sub
ret
add
push
imul
in
xor
roll
es
ret
xor
gs
dec
ss
or
add
aas
lds
adc
jecxz
into
test
or
lods
ror
push
es
pop
cltd
cmp
add
add
das
mov
add
jp
pop
mov
dec
pop
fdivl
call
ficompl
adcb
mov
and
insb
stos
cmc
add
jmp
out
push
mov
loopne
pop
or
add
add
int3
int3
dec
push
imul
jge
push
sbb
dec
inc
dec
and
inc
iret
aas
sbb
adc
xchg
add
roll
xchg
aaa
mov
or
rorb
in
adc
pop
pop
test
mov
out
cmp
jmp
dec
fmull
push
je
sbb
adc
pushf
and
mov
add
call
and
mov
xor
jo
push
loope
pop
dec
or
xchg
js
push
ss
xor
cmp
mov
xor
inc
push
or
push
mov
out
cmp
and
sub
xchg
loop
pop
mov
jns
lret
jns
push
mov
xor
jno
sub
dec
jbe
push
lods
popa
push
sbb
ret
mov
test
and
fiaddl
loopne
test
mov
mov
push
loope
adc
ret
int
add
mov
mov
fsubrs
std
mov
popf
pusha
jo
dec
adc
mov
sub
ret
mov
add
push
xor
mov
push
inc
negb
nopl
xchg
mov
loop
dec
stc
pop
inc
inc
pop
xchg
mov
pop
je
or
and
sub
rcll
cmp
verw
enter
push
stos
lock
or
nop
orl
and
mov
cmp
nop
jno
adc
add
sahf
mov
mov
xchg
push
mov
cmc
ror
inc
or
icebp
push
jmp
push
or
xor
or
bound
das
mov
dec
and
icebp
push
xor
test
inc
std
or
je
mov
call
adc
dec
mov
adc
inc
or
pop
inc
rolb
or
fnstcw
pushf
adc
shrl
jne
push
sub
and
jmp
pop
jmp
insb
pop
cmp
jae
cmp
es
scas
popa
ret
pop
je
cmpsb
push
mov
jmp
stc
push
sbb
xor
push
cmpsl
cmp
dec
cmp
push
dec
add
add
mov
pop
push
push
mov
mov
rcll
inc
lea
stos
push
js
mov
mov
jmp
jne
subb
dec
pop
test
roll
rcrb
das
sbb
rcl
jmp
shlb
add
dec
int
loopne
sbb
dec
mov
mov
xchg
sbb
cld
lods
and
mov
adc
and
and
lahf
hlt
mov
repnz
add
push
test
mov
enter
mov
inc
pop
sub
pusha
pop
rcl
add
mov
or
inc
mov
push
push
aam
fldl
sahf
jo
mov
and
add
push
or
adc
sub
aaa
imul
push
clc
or
push
push
dec
out
and
sub
cld
sub
jne
cmpsb
mov
mov
dec
fidivrs
addb
jmp
dec
sub
sub
stos
clc
cld
fidivs
xor
and
sub
call
fwait
dec
pop
pushf
imul
lds
mov
inc
mov
xchg
mov
adc
pop
mov
je
jl
push
lret
or
dec
stos
push
pop
dec
add
addr16
xor
aaa
je
insb
add
push
push
arpl
add
push
xor
sub
adc
pop
sbb
repnz
pop
cmp
adc
xor
test
sub
bound
cmp
and
out
add
lea
dec
fisttps
loopne
fwait
xor
dec
pop
arpl
sub
and
lcall
pop
inc
sub
fidivrl
sub
sub
sbb
pop
enter
dec
adc
mov
jno
sub
and
inc
ret
rcrb
or
dec
pop
xor
lea
jle
pushf
pop
or
adc
mov
xchg
inc
cmpsb
mov
test
shll
xor
repnz
add
add
and
shll
pop
loopne
aam
fists
xor
push
movb
arpl
andb
les
repz
fcoml
adc
es
push
xchg
cli
js
add
push
cmpl
xchg
mov
in
pop
mov
pusha
xchg
in
or
js
xor
fwait
mov
les
inc
fsubr
cmp
push
icebp
dec
call
sbb
sub
rorl
sbb
cmp
fdivs
jg
je
jne
mov
or
sub
push
xchg
pop
dec
das
movsb
xor
pop
xchg
jmp
sbb
out
cmp
pop
shl
dec
test
mov
add
cwtl
jge
nop
xor
pop
dec
jle
lea
cmpb
inc
jecxz
fidivrl
dec
fistl
out
andl
ds
idiv
add
jg
sub
cmp
pop
jl
pop
xor
or
clc
aas
inc
sub
jo
dec
add
fdivl
mov
fiaddl
cmp
iret
jl
dec
jae
call
test
mov
cmpsb
fdivrl
push
push
mov
ret
loopne
dec
test
loope
mov
insb
pop
jae
sub
add
out
pusha
das
jae
push
outsl
stos
lock
aad
push
sti
or
je
inc
pop
push
mov
mov
jle
mov
test
hlt
neg
addb
or
or
cmp
pop
mov
or
jmp
dec
adc
dec
sbb
call
into
rol
jg
mov
dec
dec
pop
mov
or
dec
lahf
jne
xor
and
dec
sbb
xchg
test
sbb
ds
mov
test
loop
dec
inc
cmp
jb
pop
pop
cvttps2pi
adc
ds
divps
mov
push
mov
rolb
je
nop
xor
and
push
aad
std
jmp
cmp
jne
xor
inc
lret
loop
cmp
xor
sahf
fstpt
test
and
test
xchg
adc
inc
cld
xchg
mov
inc
lret
insl
popa
cmp
adc
inc
mov
iret
shl
push
jns
mov
inc
int
cmpl
test
stc
test
xchg
test
cld
bnd
test
test
sub
cmp
leave
dec
inc
sub
add
sub
dec
sbbl
jo
ret
pusha
add
into
lds
loop
loopne
sub
movl
leave
std
test
stos
or
cltd
push
sub
ds
shrl
and
xchg
into
and
data16
lret
mov
and
xor
or
and
lock
flds
fcoms
mov
rclb
jp
sbb
push
push
sbb
clc
adc
js
push
testb
pop
aad
push
inc
sub
loopne
aaa
pop
imul
or
cltd
mov
adc
adc
push
cld
push
add
push
or
fimuls
cmp
rcll
lods
pushw
insb
ret
loope
mov
jl
cmp
sub
test
les
add
dec
subl
dec
call
sbb
xor
shlb
pop
jecxz
cli
paddsb
sub
pushf
mov
jmp
lea
jno
std
cwtl
cmp
mov
lea
iret
sub
add
sub
and
cmpsl
outsb
mov
push
add
xor
adc
pop
or
jae
or
xor
mov
sub
test
push
dec
call
xor
sbb
test
shrb
or
or
push
int3
mov
sahf
xor
lahf
push
mov
xchg
jmp
cmpsb
xchg
sahf
cmp
adc
and
sbbl
lcall
mov
popf
aas
into
cmp
pusha
inc
push
dec
cmp
push
movsl
out
pop
int3
add
das
hlt
loop
cmp
xchg
sbb
jne
cmp
jge
push
dec
inc
or
stos
push
sub
inc
rol
not
mov
fists
int
lea
xchg
mov
dec
add
loope
mov
cmpw
clc
pop
sub
test
je
test
insl
cmp
mov
mov
inc
jbe
mov
mov
and
push
pop
movsl
push
and
xchg
pop
in
rcrb
mov
js
test
pop
rcll
or
fs
xor
mov
shrb
cwtl
add
sub
mov
xor
pop
call
gs
popa
mov
test
aas
ja
popa
mov
adc
push
add
dec
adc
mov
sbb
or
sar
mov
sub
mov
vmwrite
xor
sbb
mov
sbb
inc
jb
and
jb
and
push
jecxz
es
mov
jo
sbb
js
andb
pop
jb
mov
pop
cmp
push
aas
or
mov
mov
adc
mov
test
out
lods
leave
hlt
mov
in
pusha
pop
rclb
pop
cmp
je
jmp
mov
popa
outsb
sti
or
xchg
and
pop
jle
mov
and
fwait
outsb
add
sub
dec
ret
sbb
sbb
inc
cmp
cmp
cmc
push
inc
inc
cmp
call
inc
adc
xor
insl
sti
jno
shlb
adc
xchg
xchg
scas
pop
or
or
inc
loop
mov
xchg
cs
add
add
and
daa
call
and
loop
add
mov
cmp
in
xor
cltd
inc
les
stos
push
or
int
inc
sbb
das
add
add
out
mov
pop
in
xchg
aam
js
push
xor
mov
add
rolb
mov
mov
lock
adc
pop
mov
xor
outsl
lahf
nop
push
ljmp
add
lahf
push
stos
push
loopne
push
mov
mov
mov
sbb
inc
daa
sbb
adc
lret
inc
mov
cli
lahf
dec
lock
subl
je
or
sbb
cmp
add
xor
push
pop
adc
dec
push
sub
fdivrl
call
xor
call
sbbb
mov
test
hlt
mov
xlat
adc
fsubl
rorb
jl
loope
nop
loop
inc
or
sbbl
jg
cmp
dec
ss
or
sbb
xlat
or
call
mov
sub
push
sub
push
mov
dec
add
inc
or
test
into
cmc
mov
in
cwtl
cmpsb
pushf
stc
ret
inc
cwtl
adc
xlat
dec
es
into
mov
xor
sub
mov
pop
or
aad
pop
rcrb
adc
add
mov
jae
test
repz
loopne
push
les
push
adc
sti
add
jo
pop
ret
rorl
sub
cmpsl
jge
int
fst
or
push
rorl
adc
pusha
inc
dec
rorb
push
jmp
lock
dec
ret
push
push
fdivrs
mov
cmp
push
aam
jne
adc
pusha
bound
mov
pop
sub
imull
mov
loope
sbb
inc
mov
lods
adc
jnp
mov
cmp
xchg
add
idivb
mov
push
rol
push
cmpsb
sub
or
negb
push
pop
push
mov
jmp
cmp
movsl
jno
test
push
test
xor
sbb
push
loope
ret
enter
jae
andl
jbe
adc
mul
xor
and
test
mov
xchg
add
rcll
pop
fprem
shrl
adc
inc
loopne
mov
mov
je
pop
inc
push
adc
imul
mov
pusha
jmp
adc
dec
mov
xchg
adc
and
or
popa
lock
out
mov
cmp
dec
scas
or
add
pop
and
add
movsb
pop
xchg
imul
add
int
popf
je
pushf
adc
inc
push
xor
sahf
xor
push
mov
fdivl
cmpsb
rorl
iret
ds
ret
push
push
mov
push
cmp
push
sbb
sub
es
xor
inc
nop
shl
mov
call
adc
sarb
lock
inc
out
inc
adc
clc
movb
js
inc
push
adc
push
xchg
dec
fldt
pop
inc
adc
addb
inc
faddl
pushf
pusha
jg
mul
push
or
push
push
sub
and
add
mov
or
xor
shrb
nop
loopne
sahf
sbb
jne
lahf
nop
xor
lods
pop
in
add
mov
mov
lods
fs
cli
cmp
jb
mov
lcall
add
push
push
and
inc
cmp
insb
mov
push
mov
push
lret
lock
and
adc
inc
push
mov
dec
jge
sub
sarl
mov
push
ja
sub
sbb
xchg
fdivrs
inc
pop
jno
into
pusha
cmp
jnp
push
in
pop
or
test
jmp
mov
mov
mov
shr
add
dec
rcl
xchg
pop
addb
test
add
aaa
jbe
loop
sbb
push
icebp
aad
test
jle
adc
popf
mov
stos
push
in
out
sbb
push
pushw
push
add
push
out
adc
popf
mov
icebp
nop
or
add
sub
fidivs
cld
hlt
or
outsb
shlb
adc
jae
pop
call
push
lods
push
ja
mov
jmp
js
push
nop
subb
fwait
rolb
pusha
push
mov
in
loop
arpl
xor
xor
aam
xor
movsb
adc
or
push
insl
xor
pand
sbbl
popf
jmp
push
jbe
fnsave
mov
in
add
adc
fidivl
adc
outsb
jo
rcrl
or
pop
addr16
mov
adc
push
add
aas
rcll
enter
inc
or
jae
in
add
push
push
jae
arpl
das
iret
add
push
iret
mov
inc
or
push
or
mov
insb
jne
or
cmp
push
inc
incb
sub
iret
rcrb
adc
add
je
cmp
daa
mov
mov
push
mov
cmp
shlb
push
icebp
add
or
or
push
imul
or
add
cmp
inc
mov
push
or
enter
add
sub
popf
xchg
jmp
push
lret
enter
dec
lea
jp
ss
push
rorl
jb
pop
xor
xchg
mov
mov
nop
into
push
cmp
add
nop
mov
adc
and
jecxz
fstpl
push
sub
outsb
sub
rcr
or
push
test
rclb
call
sbb
or
mov
xor
or
cwtl
or
dec
loopne
adc
ja
jge
or
lea
mov
mov
mov
outsb
sbb
sbb
aas
jl
rolb
rorl
icebp
mov
fwait
or
mov
add
aas
rcrb
aam
sarb
xor
sub
sbb
or
sub
inc
mov
orb
dec
shll
add
cmp
pusha
xor
shll
push
test
js
mov
aas
xchg
fsubr
mov
mov
push
xchg
xchg
sti
or
enter
cmp
imul
fwait
inc
mov
scas
sub
mov
add
rcrb
lods
xadd
jg
in
sahf
jbe
adc
fidivs
or
add
xor
pusha
mov
loope
and
push
fdivs
and
cmp
sbb
add
and
jo
push
fs
jae
add
push
cmp
jbe
add
dec
notb
ret
addl
rolb
sbb
adc
sbb
adc
jmp
pop
push
clc
adc
and
cmp
jne
push
pop
adc
in
outsl
fadds
dec
pcmpeqw
sbb
adc
into
add
jno
es
mov
add
sub
or
popa
add
scas
mov
jo
jmp
cmp
sbb
jo
xchg
outsl
popf
jne
cs
inc
rcrl
xchg
lret
or
cs
add
push
ja
in
sbb
sub
clc
jne
mov
jb
mov
add
outsb
shr
mov
add
push
sahf
ror
lock
inc
or
dec
add
mov
xor
dec
pop
sahf
imul
test
in
ret
mov
nop
or
sbb
mov
add
das
mov
rol
ljmp
inc
ficompl
add
jl
orl
jmp
imul
pop
jne
lea
add
jne
mov
shll
adc
pusha
lock
push
lret
notb
push
clc
out
test
in
andl
es
fdivrs
push
fnstcw
adc
add
in
sti
je
pop
mov
and
or
mov
iret
and
fucom
das
add
iret
sub
or
push
ljmp
stc
sti
mov
sbb
out
inc
xchg
out
fnop
movsl
sti
dec
sub
mov
stc
push
adc
or
pop
scas
mov
stc
xchg
clc
push
stc
mov
sysret
je
icebp
jne
in
ds
xor
ja
arpl
ficompl
fldcw
sub
sbb
lods
push
rcrb
cwtl
add
push
movsl
mov
outsb
push
cmp
xchg
push
mov
or
ret
adc
rclb
nop
iret
push
scas
mov
sbb
inc
test
orl
clc
mov
dec
mov
jg
loop
jmp
cmp
push
scas
or
insl
loope
rcr
jecxz
xchg
je
push
incl
jmp
lods
xchg
bound
lock
pop
inc
or
dec
jno
sbb
movsl
inc
es
dec
adc
call
pop
sti
and
orb
ret
fmuls
sub
arpl
arpl
icebp
mov
adc
jecxz
cwtl
or
incl
mov
xchg
or
ds
or
xchg
je
pusha
push
push
loopne
das
mov
pop
sub
or
subb
fldl
mov
adc
rorb
loop
xchg
sbb
dec
or
jnp
sbb
inc
inc
cwtl
notl
rcrb
sbb
inc
js
or
mov
gs
je
inc
inc
push
cltd
pop
fs
pusha
fs
xchg
insb
insb
push
inc
loope
add
lret
sbb
pop
testl
je
cmp
je
dec
cli
ret
imul
add
xchg
and
xor
insb
and
add
cmp
je
xor
lock
push
sub
arpl
xchg
jmp
mov
js
fdivl
adc
pop
aam
leave
add
sbb
push
sub
push
add
or
dec
lock
adc
xchg
xchg
or
lock
lock
jp
push
cmpsl
addb
fldl
stos
push
push
adc
mov
fildll
sbb
pop
roll
mov
add
pop
jbe
jmp
cld
ret
add
add
push
mov
ud2
fnstsw
cmpps
decb
in
mov
cs
pop
arpl
push
mov
ljmp
push
mov
cwtl
jl
testb
fiadds
and
fs
inc
mov
xchg
leave
pop
aaa
orl
test
ljmp
sbb
dec
dec
aas
jbe
add
shl
adc
inc
sahf
test
sbbl
adc
adc
test
push
jge
jmp
rol
jne
rclb
insb
adc
daa
mov
sbb
xor
push
addr16
leave
outsl
adc
adc
mov
cltd
jae
fstp
mov
xchg
stos
or
xchg
mov
push
mov
pop
pushf
cwtl
fidivrs
add
movsb
push
test
sub
pop
loopne
outsl
xor
je
sbb
add
pusha
jns
js
xchg
push
and
or
sar
push
lea
mov
jo
aam
push
push
enter
add
imul
sbb
aad
xor
adc
pushf
lock
xchg
or
and
les
out
scas
pop
pusha
inc
sub
in
mov
cmp
mov
dec
mov
pop
jo
or
lods
cmp
pop
arpl
pusha
dec
mov
cmp
imul
push
pop
int3
push
push
test
push
fsubs
mov
mov
ret
sbb
lock
pop
cmp
je
push
cmp
popa
or
mov
call
sbb
pop
loopne
or
sbb
rclb
adc
ss
es
jg
mov
sbb
or
sbb
mov
pop
pusha
pop
xor
inc
ljmp
shll
fs
pop
mov
lods
push
jbe
add
pop
push
pop
inc
dec
fistl
mov
jecxz
lock
or
adc
fs
loopne
cmp
xchg
xchg
jge
lret
xor
aad
lldt
or
stos
movsb
and
lea
sub
aam
inc
adc
imul
fcmovnu
aam
inc
push
jecxz
loope
ss
xchg
jp
push
cmp
jnp
minps
push
imul
js
pop
add
shrd
mov
sbb
and
sub
mov
test
adc
adc
fiadds
inc
or
xor
mov
adc
insb
inc
xchg
ret
mov
sbb
add
aam
sbb
cmp
add
out
jo
push
cli
dec
mov
ds
mov
push
xchg
sahf
cmp
ror
mov
push
xchg
popa
cwtl
bound
shrb
scas
cmp
cmp
mov
and
cmp
add
test
mov
mov
js
aaa
rolb
and
aas
mov
pop
movzwl
adc
lcall
daa
jae
dec
jae
inc
add
push
iret
push
push
je
or
das
mov
push
daa
adc
cmp
push
rcl
push
pop
lea
push
push
cmp
adc
xchg
inc
inc
adc
sbb
add
push
sub
sub
sub
mov
xor
stos
imul
jp
mov
sub
adc
add
jmp
ret
fisubrl
sbb
clc
leave
add
test
xor
mov
stos
into
les
add
and
cmp
jge
jge
orb
add
jno
xchg
jmp
xorl
pop
or
push
push
push
sbb
xor
inc
add
cmp
pop
xorb
adc
sbb
popf
mov
mov
and
and
int
or
sbb
call
dec
mov
pop
mov
popf
imul
inc
pop
cmp
rdmsr
shrb
stc
dec
stos
fstpl
stos
push
sbb
ja
ret
lods
inc
int3
adcl
xor
sub
aad
mov
shrb
pop
lods
push
aaa
mov
jo
pop
jecxz
cltd
or
xor
mov
call
jo
push
add
push
and
dec
xchg
mov
or
mov
rclb
push
or
ficoml
add
push
or
xchg
pop
cwtl
fbld
out
test
sub
fadd
pmaxsw
add
ficompl
rclb
es
and
cmp
inc
je
pushf
pop
mov
jae
icebp
lock
cmp
and
or
es
push
push
aaa
push
xor
cs
fwait
pop
dec
popa
adc
daa
mov
insl
mov
inc
inc
add
pop
dec
lcall
fdivs
pop
sahf
pop
pop
jle
mov
xchg
dec
jnp
andl
jecxz
push
or
add
inc
jo
fidivrl
inc
mov
fwait
pop
sbb
push
pop
stos
lahf
or
inc
lea
sbb
lock
and
in
adc
dec
push
inc
das
shr
and
xchg
faddl
xchg
cmpsb
mov
mov
pop
pop
pop
jge
inc
ret
inc
idivb
jb
push
addb
and
and
gs
adc
and
pop
or
mov
and
arpl
outsb
inc
or
add
pop
mov
lds
lret
dec
xor
cwtl
flds
pop
sahf
push
xchg
dec
outsb
mov
mov
adc
push
xor
xor
stos
adc
ljmp
and
mov
arpl
enter
dec
or
pop
das
inc
mov
repnz
adc
test
push
mov
mov
push
inc
clc
bnd
dec
cmp
sbb
push
or
inc
loope
mov
adc
loopne
pusha
movsb
push
in
shr
pop
movl
dec
insb
dec
jno
jecxz
dec
adc
pop
repnz
inc
push
inc
adc
inc
xchg
sbb
push
jmp
pop
mov
jp
cld
pop
inc
insb
jmp
sahf
sub
pop
fbld
pop
xchg
pop
xor
jecxz
jns
or
jno
dec
or
mov
test
js
or
je
std
inc
mov
mov
mov
cmp
cmp
dec
mov
imul
ret
std
sbbl
loope
sahf
out
add
xchg
jge
mov
add
aas
or
loope
xor
into
jne
loopne
or
dec
inc
inc
ret
inc
mulb
or
add
pop
pop
mov
push
ret
mov
mov
out
jb
lret
mov
stc
push
imul
in
shlb
test
movsb
xor
popf
mov
mov
and
in
xor
push
lea
popf
and
aaa
add
push
mov
fadds
inc
mov
inc
mov
mov
test
pop
pop
xor
xchg
or
mov
jne
in
ds
ret
filds
mov
add
adc
jne
fists
mov
outsb
and
pop
push
ja
outsb
add
inc
sub
cmp
push
ret
and
andb
addl
mov
lock
pop
nop
jmp
enter
lea
fmul
lods
ret
xchg
ret
push
pushf
xchg
inc
xlat
adc
push
aam
mov
scas
dec
mov
dec
cmpb
push
pop
adc
sub
ja
jne
call
sub
jp
test
adc
pop
andb
loope
mov
ret
jmp
push
shlb
rorb
mov
fwait
jmp
nop
push
push
hlt
add
push
mov
sbbb
mov
cltd
negl
cwtl
inc
push
pop
fisubrl
enter
mov
clc
loop
je
mov
mov
popa
mov
popa
add
xor
inc
xchg
negw
pop
inc
and
testb
pop
xor
xlat
add
add
cmp
inc
leave
add
and
xchg
jl
push
lods
push
addl
push
xor
sbb
test
fiaddl
cmp
xor
gs
js
xor
jns
movsb
adc
subl
js
jmp
jo
dec
pop
or
inc
cmp
or
mov
ss
lds
cmp
add
xchg
xor
and
and
adc
jne
or
add
or
mov
aam
scas
sub
incl
sub
jbe
mov
push
mov
loop
xor
in
inc
aad
outsb
inc
je
cmpsb
push
push
es
and
pop
clc
xor
cmp
das
adc
xchg
sub
sbb
sbb
mov
fcompl
push
or
jae
bound
adcb
mov
or
pop
imul
sub
dec
jne
inc
das
jbe
and
test
data16
negl
jmp
jb
rcrl
dec
insb
add
js
lock
xor
add
imul
adc
sbb
mov
jp
repnz
jge
adc
outsl
enter
notl
clc
cmp
cmp
and
sub
adc
inc
add
and
stc
fcoms
into
test
mov
or
pusha
mov
movsb
loopne
jb
test
mov
add
and
aas
or
cli
mov
cmp
push
jae
mov
jno
and
inc
cli
push
cld
das
movb
or
aas
rolb
sbb
pop
loop
jg
adc
inc
insb
shr
inc
add
jo
mov
movlhps
dec
adc
pop
xor
cmp
xor
push
loopne
addr16
push
or
pusha
insb
in
jecxz
cmpsb
std
stos
sbb
mov
aam
adc
insb
mov
gs
and
mov
imul
xor
dec
adc
push
jo
in
clc
enter
push
or
lock
aam
fists
pop
adc
inc
ficoml
hlt
lret
xchg
jne
mov
lahf
orb
mov
cmp
xor
clc
lods
orl
dec
insb
or
push
in
lea
push
push
mov
insl
xor
push
ret
xchg
lock
push
sbb
xor
jnp
xorb
adc
mov
add
pop
sbb
mov
cld
jecxz
imul
jmp
sbb
mov
movsl
addl
insb
sbb
adc
sub
jg
call
jg
inc
enter
add
add
loop
int
inc
jne
inc
jge
cmp
je
ss
pop
in
add
pop
dec
sub
push
loopne
daa
ss
adc
addb
ds
enter
adc
mov
push
dec
push
xchg
jp
add
pop
mov
push
ljmp
mov
sbb
mov
mov
xchg
inc
aaa
jbe
pop
nop
pusha
or
icebp
es
dec
sub
inc
jbe
rorl
jmp
add
add
xchg
or
jg
xchg
mov
jo
dec
in
rcrl
xchg
pop
aas
pop
or
in
scas
repz
addr16
sub
mov
popf
aaa
dec
cmp
scas
add
pop
pusha
pushf
adc
cmp
mov
push
rorl
icebp
adc
mov
push
loope
pusha
cmp
test
cmp
inc
and
mov
pop
mov
mov
cmpsb
jne
into
dec
sbb
mov
in
lea
pop
call
loopne
push
in
push
push
ret
pop
ja
decb
push
push
adc
leave
push
mov
pusha
mov
popf
pop
fs
pop
or
aas
mov
mov
in
jle
or
sub
adc
adc
push
cmp
mov
mov
insb
aad
xchg
mov
dec
mov
cmp
pop
push
pop
scas
lock
nop
ret
scas
sub
in
loopne
pop
testl
cmp
push
inc
and
xor
adc
jl
ret
and
test
or
dec
or
dec
sbb
mov
xor
xchg
push
xchg
pop
sbb
sub
sbb
sbb
xor
sti
push
cmc
jle
jmp
or
nop
dec
sub
dec
sbb
mov
jbe
into
jl
sbb
inc
or
pushf
lahf
add
bswap
xorl
xchg
shl
inc
cwtl
popa
sbb
testl
pop
sub
or
aaa
push
dec
add
xor
pusha
mov
xlat
lret
or
and
add
cmp
loope
fmuls
in
or
or
push
mov
repnz
jo
push
xchg
lods
pop
pop
es
jbe
xchg
jl
movl
xor
aas
add
lcall
inc
xor
dec
in
mov
push
push
pop
adc
mov
in
dec
imul
gs
inc
mov
and
jno
push
mov
inc
jnp
jge
jae
mov
add
cmpl
inc
mov
mov
cwtl
fildl
fisubrs
shrl
inc
and
dec
arpl
lods
pop
lods
push
pop
cli
mov
sti
sbb
lret
mov
adc
dec
sub
cmp
adc
test
jg
lds
and
je
mov
iret
xchg
aad
xor
sub
dec
sub
push
xor
test
cmc
add
sub
mov
lret
push
rcr
lcall
mov
or
scas
jo
inc
push
push
mov
or
mov
dec
sbbl
add
loop
cld
push
jge
dec
es
in
cmp
add
mov
rcll
loopne
xor
ret
testb
lcall
add
jbe
test
pop
add
adc
and
xor
cmpsb
mov
andl
in
fists
cmp
ja
je
or
imul
sub
sub
xchg
orb
inc
push
jge
lock
mov
or
add
loope
js
jne
lcall
sub
xor
outsb
cmp
adc
imul
xor
push
lcall
jmp
sub
lds
mov
js
xor
cwtl
jbe
inc
cli
pop
sub
call
hlt
push
lods
push
push
adc
mov
mov
ret
and
jmp
ja
rorl
std
jbe
cmp
adc
je
shlb
sub
inc
ret
push
int
jmp
daa
dec
enter
mov
loopne
jl
test
movsl
nop
or
and
rolb
add
movl
xchg
sarl
or
jmp
decb
das
scas
xchg
test
dec
je
sub
add
sub
sbb
push
add
push
adc
add
inc
nop
adc
in
insl
in
aad
sub
mov
or
push
adc
lock
inc
xchg
lock
ja
movsl
and
in
push
sub
mov
adc
dec
push
mov
cmp
add
cmc
dec
sbb
add
int3
out
leave
movb
adc
and
arpl
adc
insb
or
pushf
aam
xchg
lea
push
lods
pcmpeqd
pop
mov
xor
push
xor
sbb
push
fdivrl
notl
or
scas
cmp
mov
rorb
fdiv
in
cmp
pop
and
push
and
inc
push
pop
dec
ljmp
rcl
or
push
aam
push
call
shrb
xor
loopne
cmp
fmuls
loope
ljmp
arpl
sbb
sub
or
inc
inc
mov
test
into
cmp
jmp
mov
xchg
pop
cmp
ret
lea
popl
in
mov
xchg
cmpsb
add
xchg
pop
insb
std
fmull
and
scas
mov
add
mov
das
fwait
out
les
push
hlt
jl
imul
dec
leave
jecxz
and
pop
and
xchg
adc
fs
call
cmpsb
jns
cmpsb
ret
rorb
sbb
push
xchg
es
fdivrs
repz
lods
pop
ret
sbb
clc
out
out
fistl
inc
adc
test
dec
add
or
jns
and
movsb
xchg
xor
scas
push
pop
jge
loopne
push
push
and
cmp
in
cmp
in
add
jne
cmc
aam
sub
enter
or
fdivrl
shll
push
movsl
or
in
shrb
call
rorl
fidivrs
int3
xchg
cmp
push
xlat
cmp
ret
fs
shrl
jns
jl
and
inc
mov
dec
mov
sti
cmp
inc
rclb
xor
into
adc
cwtl
adc
sub
sahf
pop
or
cwtl
push
adc
dec
lahf
test
inc
mov
cmp
aas
lods
xchg
in
mov
jnp
sub
fisubl
mov
sbb
mov
lods
pusha
das
push
and
dec
popa
push
std
fistl
mov
shl
mov
ret
push
adc
xor
pop
ror
xchg
or
jmp
jle
sbb
sub
sub
sar
inc
push
inc
push
inc
hlt
xchg
adc
dec
out
xor
mov
adc
arpl
pop
mov
xor
les
xor
push
je
stos
call
and
sub
daa
fistpl
jecxz
push
xor
inc
enter
sub
inc
push
jne
xorb
gs
or
fwait
xor
dec
in
inc
mov
sub
andl
shlb
aad
xor
aam
addr16
fcoms
fldenv
lds
mov
jb
sub
mov
adc
lret
sub
pop
push
cmova
mov
repz
sub
or
and
fwait
testb
mov
push
loop
lods
dec
and
and
fiadds
cmp
sbb
aas
scas
xor
ror
add
aam
fcoms
mov
adc
pushf
loope
and
sub
loopne
pusha
js
mov
insb
xchg
add
jg
cmp
pop
sti
xor
xor
xchg
cld
dec
inc
sbb
xor
mov
inc
call
pop
add
xchg
sar
push
fdivr
jb
in
dec
lcall
rcrl
inc
inc
ret
sub
xor
nop
adc
sti
dec
leave
push
cli
add
mov
into
pop
push
inc
lea
dec
test
rolb
lock
pop
ficomps
adc
cld
sbb
dec
or
sbb
or
neg
sbb
mov
sbbb
shll
push
push
add
and
popa
sbb
inc
addl
cmp
mov
aas
jl
iret
fsubl
popf
jle
in
push
sbb
push
cmp
and
lret
or
and
mov
in
mov
xchg
idivb
jae
in
cwtl
or
jbe
movsb
mov
das
in
jl
cmpb
cmp
add
lahf
mov
adc
xchg
add
mov
xchg
push
pop
adc
call
adc
or
pop
sub
je
jg
sti
je
mov
sahf
xchg
dec
sub
push
fs
dec
xchg
add
jno
fiaddl
call
je
push
sbb
test
jo
inc
and
lock
fcomp
sbb
push
pop
xchg
lods
movsb
dec
sbb
inc
adc
mov
les
bound
mov
and
dec
movsl
inc
sub
call
je
or
push
pop
push
push
test
pop
js
je
jns
adc
xor
dec
addl
push
fidivs
sarb
sbb
xchg
jns
sbb
push
inc
nop
sbb
mov
jbe
in
mov
dec
imul
lock
cwtl
and
imul
fcoms
adc
mov
push
adc
jmp
xchg
xor
pop
mov
mov
cmp
cmpb
enter
xor
mov
mov
subb
adc
lock
daa
sub
fdivrl
push
pusha
push
push
pop
or
sti
mov
les
je
dec
sbbb
pop
xor
ja
dec
jecxz
gs
sbb
arpl
add
testl
andl
movsl
add
movsl
add
pop
mov
cli
adc
mov
sbb
inc
les
clc
ljmp
sahf
andb
out
pop
ficoms
repnz
xor
rorl
xor
aaa
stos
sbb
and
shrb
xchg
je
and
into
hlt
je
jo
xchg
and
mov
add
bound
xchg
push
adcb
data16
xlat
jnp
add
jnp
hlt
data16
fs
je
cmp
je
inc
adc
push
adc
in
adc
imul
unpckhps
add
fnsave
ds
add
sti
and
add
or
inc
dec
dec
dec
sub
addr16
add
pop
je
or
push
cmp
ljmp
ja
adc
mov
aaa
lods
adc
push
mov
xor
mov
lret
test
lret
andb
pop
add
sbb
leave
lcall
and
inc
mov
shrl
fimuls
push
pusha
cmp
aad
xchg
rcll
pop
sbb
cmp
sbb
or
push
pop
dec
lock
push
add
cmp
hlt
adc
and
cltd
lock
rolb
aas
lea
sbb
add
or
in
out
orb
popa
roll
mov
jmp
mov
add
test
or
dec
aaa
cmpb
addr16
je
push
adc
clc
cmp
add
add
bound
add
test
fsubr
dec
or
je
mov
test
adc
int
and
fs
ds
andl
inc
xchg
cmp
push
and
xchg
and
repnz
lock
xor
adcb
add
inc
and
xchg
or
dec
sahf
xchg
and
or
sub
add
push
and
repnz
les
lea
ja
fnstcw
bound
insb
mov
jno
ss
jo
push
sub
push
in
sahf
or
addr16
xor
push
jns
sub
cmp
push
pop
roll
or
pop
cmp
dec
ss
xchg
inc
ret
cmp
mov
pop
jns
push
inc
lret
sub
in
jb
iret
addb
or
jo
add
into
mov
stc
lods
lock
mov
add
adc
daa
sbb
pop
and
push
dec
jmp
pop
jbe
adc
mov
cmp
xor
push
mov
inc
sbb
inc
popa
repz
scas
aam
hlt
mov
cmp
iret
rcrl
bound
inc
mov
enter
mov
ret
cmp
loopne
adc
call
pop
sbb
rcrl
push
mov
mov
pusha
dec
adc
aam
or
fwait
add
add
pusha
add
add
pop
pop
lcall
mov
jae
add
pop
arpl
and
js
jnp
sub
movsl
mov
add
test
dec
shrl
shlb
test
mov
inc
dec
cmp
fbstp
rorb
push
xor
ds
insb
add
add
cmc
dec
inc
leave
push
or
in
shlb
jge
jl
mov
and
daa
test
test
mov
outsl
mov
enter
or
inc
fscale
data16
jb
lret
push
push
add
insl
and
add
add
inc
std
jl
cmp
jae
add
mov
push
shl
pop
cmp
jne
jns
xor
jbe
aaa
pop
dec
inc
ret
sbb
pusha
mov
sub
ret
addr16
xchg
lahf
xchg
add
inc
jmp
inc
pop
mov
arpl
or
or
sti
pop
push
or
sbb
stos
insb
int3
push
sbbl
dec
and
dec
xor
xchg
sbb
dec
nop
sub
enter
sahf
or
mov
jge
clc
inc
test
jge
add
add
outsb
pop
cmp
xchg
or
pop
jle
mov
push
adc
popf
icebp
lret
cmp
jl
adc
or
jle
movsl
iret
jo
add
adc
movsl
clc
mov
inc
lret
shll
fnstenv
sub
sbb
test
push
leave
or
ds
addr16
fs
fdivl
dec
scas
fmull
mov
mov
aam
cmc
or
nop
decl
jmp
ljmp
inc
ja
mov
jmp
jnp
sub
push
jns
xlat
push
mov
push
insb
sbb
add
call
imul
test
std
dec
mov
lock
sub
cmp
add
ret
ds
adc
or
dec
jmp
pop
mov
or
test
mov
repz
out
shll
push
leave
push
xor
popa
inc
pop
adc
sub
and
pop
test
imul
fstpt
testl
lock
jge
dec
cmp
mov
push
add
and
cld
xchg
push
roll
ljmp
in
dec
dec
dec
push
push
inc
shlb
orb
cmpsb
sub
out
adc
stc
add
test
push
in
push
push
cmp
cmpsl
call
add
mov
cmp
push
inc
add
push
and
push
jmp
inc
jns
sub
leave
inc
mov
adc
push
xor
xchg
xchg
or
mov
cmp
push
push
lea
in
insl
bound
sub
push
stos
adc
add
dec
pop
or
mov
xchg
movsb
ret
rorb
add
inc
push
dec
xor
or
mov
mov
add
or
sub
fwait
adc
mov
cmp
push
fwait
add
fs
fiadds
add
movsb
aas
outsb
mov
push
pop
cmc
and
imul
fisttpll
pushf
and
movsb
je
push
pop
and
and
push
test
shr
add
and
inc
cmpsl
repnz
adc
adc
loope
jmp
sbb
addl
mov
sub
or
notl
fdivrp
cmp
fdivs
andl
call
ja
into
xchg
or
sbb
add
and
cmp
jle
ret
sub
movsl
or
or
add
sbb
cmp
inc
push
ja
jo
mov
lea
mov
mov
inc
add
or
and
imul
adc
pop
adc
test
mov
add
cmp
test
adc
sub
lods
add
sbb
ds
mov
enter
btc
cmp
adc
hlt
adc
aas
adc
sysret
adc
pop
ret
mov
in
imul
ret
inc
imul
adc
aam
movsl
sbb
pop
xchg
rorb
dec
push
leave
mov
popa
pop
push
loope
inc
jge
fsubl
fisubs
aaa
sub
hlt
fcoml
hlt
inc
mov
pushf
and
iret
and
cmp
adc
adc
cld
sub
dec
add
lea
add
mov
inc
push
in
mov
dec
inc
xor
or
mov
push
pop
lods
fstl
xchg
inc
es
loopne
fmull
orl
pop
mov
sub
gs
divb
jbe
pop
mov
pusha
pop
or
sbbl
shlb
loope
push
sbb
daa
pop
cmpl
mov
popa
packsswb
pusha
dec
adc
and
cwtl
jo
iret
int
or
das
push
and
or
xor
and
jo
fstpt
inc
sbb
mov
jb
es
js
xor
xor
adc
call
sub
jg
or
xchg
lret
or
mov
fwait
sbb
mov
sbb
and
into
lock
rolb
mov
sub
xchg
fs
stos
and
fiaddl
cli
retw
push
divl
add
outsb
pop
loopne
cmpsl
push
clc
sarl
bound
sahf
mov
cs
lock
call
push
shrb
ret
mov
mov
loop
cld
inc
xchg
repz
inc
and
fdivl
add
sbb
pop
xor
push
pop
add
popa
repnz
add
mov
cmp
or
mov
mov
rcl
pop
leave
sub
cmp
push
sub
lock
push
and
inc
test
or
hlt
dec
mov
ss
push
fmul
mov
dec
movsl
mov
push
xor
sub
sub
lea
jne
jnp
mov
jecxz
mov
cmp
and
sbb
addl
inc
add
pop
sbb
sbb
cld
xor
xchg
loop
loop
inc
push
pop
pop
lds
mov
jl
test
es
cmp
inc
cmp
adc
aas
xor
pop
mov
sub
mov
in
add
stos
or
insl
jge
mov
aam
notl
shr
not
xchg
push
adc
sbb
pop
push
mov
out
add
push
shll
pushf
or
lret
mov
mov
push
sti
testl
push
mov
sub
sub
xor
pop
pop
pop
push
xor
cmp
sarb
sub
or
dec
pop
sbb
addb
pop
add
xorb
sbb
add
jge
sbb
add
inc
jmp
cld
lods
push
inc
movsl
sub
leave
dec
push
sub
inc
add
es
arpl
dec
mov
add
je
jo
stos
or
sub
xlat
sub
nop
inc
shlb
mov
or
je
mov
jg
adc
ss
mov
push
inc
rclb
into
mov
push
icebp
pop
or
push
fsubrp
test
adc
popa
push
mov
xor
fisubl
das
xchg
daa
add
xchg
sub
or
cmp
divb
lods
ss
movb
sbb
cs
mov
sbbb
xchg
loopne
mov
lods
shll
ret
sub
sub
cld
mov
sub
js
popa
cmp
and
je
ret
sbb
mov
je
xchg
add
ja
cmp
cmp
lods
movsl
test
xchg
push
sbb
add
adc
mov
dec
cmp
or
rclb
xchg
dec
xor
int
sub
push
mov
fbstp
adc
lret
sub
cmp
mov
pop
lea
sti
repz
inc
xor
or
add
or
sbb
cmp
jae
push
or
outsl
pop
shlb
add
orb
arpl
mov
adc
out
pop
dec
imul
scas
jae
push
push
or
cmpsb
xlat
push
and
push
mov
lahf
test
dec
adc
push
pop
sub
insb
je
inc
sub
xor
push
popa
ds
pop
mov
ss
xor
xor
inc
inc
mov
xchg
testb
sbb
dec
xor
jbe
ljmp
mov
inc
test
cmp
add
dec
les
scas
sub
rolb
jae
andl
ffreep
mov
adc
fs
xchg
add
push
adc
or
or
ss
ds
hlt
lock
dec
sbb
out
pop
movlps
imul
jl
inc
ljmp
jns
shlb
cld
sub
and
xor
dec
das
dec
int
cs
sub
pop
mov
jbe
inc
rolb
js
ja
bt
lret
loop
mov
add
xchg
jnp
pop
adc
push
push
cmp
xchg
push
xchg
cmpsl
call
sti
stos
mov
or
push
rolb
or
add
push
lods
add
push
jne
mov
push
fcoms
dec
inc
mov
add
les
pop
pop
ret
mov
jg
and
cmpsb
movsb
adc
jno
incl
sub
sub
jae
shrb
hlt
cwtl
push
in
cs
xlat
mov
adc
arpl
lods
repz
and
add
or
lock
inc
pop
inc
xor
xor
js
dec
push
mov
add
xor
cmp
andb
mov
lods
add
loopne
bound
clc
imul
sbb
or
pop
mov
jo
pop
cltd
rol
jno
push
aad
push
xor
mov
test
mov
jge
je
mov
pusha
cmp
data16
testl
dec
pop
cltd
out
sub
or
jo
inc
adc
sub
pushf
shrb
icebp
jl
ret
inc
sub
insb
sbb
and
ret
adcl
ja
mov
mov
jg
sbb
xor
hlt
adc
push
aad
mov
dec
mov
mov
adc
add
jle
add
loopne
add
pop
clc
adc
push
loop
dec
adc
add
adc
jge
shrb
orl
std
es
in
sarb
add
testb
push
jne
push
jo
mov
ds
je
cmp
orb
sub
pushf
jb
loope
fldenv
fsubr
or
adc
or
add
pop
xor
cmp
add
adc
mov
popa
lods
push
hlt
add
or
or
or
sbb
outsb
cmp
je
sbb
out
adc
push
les
rol
add
clc
jbe
or
add
jp
cmp
jmp
ret
icebp
popa
lret
dec
inc
les
in
inc
mov
push
ret
pop
sub
jecxz
push
add
xchg
push
cmc
sbb
repz
mov
add
mov
and
js
lahf
pop
lea
test
mov
add
mulb
jb
fiadds
add
loopne
mov
lea
mov
fdivp
lods
mov
add
dec
sbb
ficoms
lods
push
inc
mov
cmp
pop
lahf
cmp
in
mov
and
lea
cmp
popf
and
not
push
add
push
or
or
pop
sbb
inc
fwait
inc
push
mov
xor
nop
sub
cld
mov
sbb
sub
mov
cmp
cmp
sbb
mov
pop
add
iret
sbb
call
add
jb
adc
shlb
daa
or
pop
or
mov
ret
pop
sbb
enter
push
shll
arpl
dec
add
jne
sbb
aad
sub
xchg
mov
data16
cmp
add
aad
jae
jb
pushl
or
pop
or
xor
daa
mov
es
jae
and
jbe
pusha
mov
and
test
cltd
rorb
adc
pop
add
sti
icebp
sti
cmp
pop
sub
xchg
xorl
push
movsb
adc
mov
mov
sub
insb
lods
cs
adc
inc
and
and
lcall
shrb
xchg
lods
dec
movsl
cmp
mov
cltd
ret
xor
cmp
je
pop
enter
sbb
loope
jb
subl
ss
adc
cmc
daa
or
sbb
dec
ja
cmpsb
dec
sub
sbb
cmp
and
insl
cmp
adc
movb
or
dec
or
add
sbb
adc
or
outsb
sub
fldt
mov
nop
add
sbb
fwait
je
jmp
adc
or
push
cmp
adc
adc
dec
add
push
std
icebp
add
addb
or
ret
mov
adc
add
cmpsb
js
inc
mov
push
xor
and
cmp
test
cmp
pushf
pop
daa
add
pop
inc
cmpsb
dec
lcall
add
push
outsl
lods
fs
add
nop
sub
jae
lods
push
mov
stos
push
mov
and
lret
sub
sub
inc
push
sbb
aas
and
push
cmp
pusha
and
cmp
jl
pushf
inc
push
cmp
mov
es
sub
cmp
hlt
daa
and
and
sbb
xchg
subb
jb
xchg
imul
jnp
mov
xor
int3
push
nop
sub
xor
call
push
and
or
xor
or
mov
lock
xor
mov
mov
rcrb
adc
xchg
mov
mov
loope
cmp
pop
ss
in
or
pusha
push
adc
push
stc
cs
fsubrp
or
adc
pop
sbb
pop
adc
insl
cld
cmpl
mov
add
or
adc
inc
adc
xor
or
xor
mov
sub
lcall
xchg
out
push
push
pop
adc
lea
add
cmp
ret
adcl
cld
fmull
pop
mov
pop
xor
dec
rcrl
inc
mov
jns
push
adc
dec
xchg
push
push
push
test
pusha
and
scas
cmp
addl
call
clc
add
lods
ret
lret
mov
or
pushf
jmp
mov
add
sbb
popa
and
pop
frstor
test
push
add
pushf
adc
mov
push
mov
addw
mov
outsl
mov
js
ds
pop
ret
lods
aaa
movsb
add
jl
pop
add
fdiv
rorb
push
and
adc
cli
pop
xor
push
test
divps
or
add
adc
subb
push
das
xor
jne
push
push
repz
cmp
pop
sbbl
pop
movb
jg
mov
lahf
and
mull
in
dec
imul
mov
mov
push
js
mov
xor
rolb
dec
push
inc
sbb
mov
sbb
and
andl
sbb
add
jg
mov
test
sbb
jbe
jmp
dec
je
xor
pop
adc
sbb
dec
mov
sub
loop
test
xchg
cmc
rcrb
or
adc
sub
dec
mov
fucomi
fmuls
inc
dec
jmp
cmp
inc
sbb
xchg
xchg
ds
add
mov
sbb
pop
or
sbb
pop
sbb
pop
lock
or
ljmp
into
ret
jmp
out
pop
pop
scas
lea
jle
xor
adc
arpl
movntps
test
push
scas
adcl
sub
xchg
push
lods
into
mov
dec
mov
cmp
or
je
dec
add
pop
dec
or
adc
ficoms
shl
add
mov
mov
or
pop
or
adc
out
xor
rol
aaa
jmp
add
cmpl
fnstcw
or
fcomps
cmpsl
dec
adc
xchg
xchg
fsubrl
or
sbb
mov
or
mov
adc
fadd
test
and
adc
add
les
inc
cmp
inc
loop
pop
call
adc
mov
hlt
dec
cmpsb
je
int3
pop
cld
fsubrs
cld
adc
adc
sbb
add
dec
adc
testb
dec
lods
inc
stos
testb
loope
lock
xchg
movsb
fwait
movsb
cld
lock
call
add
std
adc
addr16
popa
or
cmpsb
sub
jg
in
rcll
add
addr16
jge
adc
ds
xor
cmp
and
lock
les
pop
lahf
aaa
sbb
shll
mov
mov
adc
sbb
stc
and
popa
or
cld
sti
decl
mov
cmp
jl
cmp
jle
cmp
push
jp
or
pop
and
outsb
and
je
stos
mov
add
cmp
movsb
cmp
jge
mov
pop
and
cmp
jl
cmc
sub
adc
lods
sbb
lcall
iret
and
addb
lea
jecxz
push
ds
cmp
lock
ficompl
sub
mov
cmc
mov
xchg
mov
pop
mov
cmp
jl
pop
xor
and
dec
mov
add
jl
in
inc
or
lods
add
add
add
cwtl
jge
aam
fsubs
pushl
vcvtsi2sdl
adc
dec
call
adc
add
push
xchg
rorb
and
lcall
in
mov
es
pushf
and
cwtl
cli
test
stos
and
cs
mov
sub
mov
loopne
cmp
inc
loopne
or
rol
cmp
mov
fsts
in
or
loopne
dec
js
test
sub
movsb
lods
enter
arpl
or
hlt
pop
mov
sub
dec
add
push
dec
inc
mov
pop
out
mov
push
or
aaa
push
and
inc
adc
dec
dec
pop
rorl
call
mov
inc
sbb
or
mov
xchg
cmpsb
pushf
lea
or
test
sbb
cmp
push
sbb
pop
or
adc
and
lcall
inc
in
pop
cld
dec
push
mov
inc
push
jne
popf
inc
xchg
outsb
shlb
inc
and
xor
mov
and
sbb
fldt
xchg
pop
pop
fadds
add
pop
adc
cmp
jnp
push
pop
pop
pusha
idivl
and
js
and
cmp
jp
add
popa
cmp
lea
push
sarb
push
rcrl
sbb
aam
dec
and
inc
stc
icebp
jp
sbb
xchg
inc
mov
add
test
jo
in
bound
and
cld
je
pop
add
mov
jns
xchg
or
sbb
and
or
cmp
outsb
lea
leave
push
inc
pop
nop
adc
imul
add
not
out
xchg
sbb
jne
nop
pop
rclb
ret
sbb
jecxz
pop
cmp
inc
sarb
and
cmp
mov
sbb
test
inc
jne
mov
les
mov
push
and
xor
push
or
xor
sbb
and
popf
jbe
pop
repnz
jmp
outsl
por
inc
lret
test
and
add
add
or
xchg
clc
xor
pop
fwait
adc
sbb
xor
mov
jmp
inc
clc
clc
fsub
jl
fucomi
mov
rol
xor
std
lea
xchg
xor
sarb
inc
or
adc
jo
or
cmp
in
gs
dec
sbb
test
and
test
sub
xor
cmpsl
movsb
shrb
adc
dec
and
stos
das
cmc
lcall
lahf
jo
add
lds
fsts
xchg
sub
xor
and
and
pop
fsubrl
arpl
mov
lock
leave
fildl
mov
mov
clc
and
daa
je
add
fwait
pop
cmp
and
xor
push
pop
push
inc
adc
push
ret
inc
ljmp
and
shll
bnd
xor
or
and
imul
push
jle
dec
add
lea
lock
jl
lea
cmpsl
xchg
int3
push
sbb
insb
mov
mov
push
repnz
jmp
and
cmp
cmp
repz
add
jecxz
push
aaa
push
or
fnstenv
or
insb
addr16
cltd
push
pop
jl
mov
fdivrs
dec
xor
fadds
inc
and
mov
cmp
cmp
stos
loop
imul
shll
nop
pop
mov
mov
or
js
sbb
mov
nop
xchg
xorb
lods
dec
loop
dec
addb
add
pop
inc
dec
or
arpl
inc
inc
jbe
test
push
dec
pusha
vmovhlps
mov
add
jo
mov
mov
inc
or
adc
add
jle
pusha
pop
add
test
sbb
add
aam
sbb
jmp
sbb
faddl
sti
push
cmp
and
push
add
andl
inc
and
fwait
push
dec
rcll
jg
jne
jl
inc
push
hlt
jg
mov
sub
jne
or
imul
sbb
cwtl
lea
push
dec
movsl
inc
adc
loope,pn
mov
adc
xor
into
lret
sub
xchg
out
push
mov
lea
push
orb
mov
lea
test
push
push
inc
inc
dec
jp
or
adc
mov
xor
jns
and
mov
imul
clc
add
mov
mov
inc
adc
repnz
mov
sub
mov
or
dec
dec
pop
mov
add
or
add
push
sbb
mov
data16
nop
lret
mov
cmc
mov
lcall
fs
pop
mov
dec
ja
mov
add
add
rorl
push
pop
push
cmp
and
inc
cbtw
bound
ret
jmp
or
and
je
sub
out
shl
das
fs
add
push
cmpb
outsb
lret
lock
stos
add
lods
inc
dec
fucomp
push
lea
pop
add
push
loop
sub
loopne,pn
lods
mov
js
push
push
mov
push
adc
push
mov
cmc
adcb
out
jmp
addb
dec
cmpb
adcb
sbb
jae
jae
jns
lret
jae
and
call
push
inc
sbb
shlb
je
pop
xchg
xchg
sub
shlb
pop
es
inc
cmp
dec
xchg
dec
jo
mov
in
ficomps
movl
mull
add
add
imul
cmc
and
inc
adc
dec
loopne
push
xchg
or
adc
pop
je
fldl
push
push
fstpl
dec
add
into
push
iretw
repz
adc
adc
jne
push
idiv
cmp
iret
jne
or
jne
or
jne
add
mov
fldz
lret
andl
fiadds
xchg
xchg
test
cmp
daa
movsb
dec
enter
test
shrl
ljmp
or
jmp
cmp
ret
fadd
mov
arpl
push
and
das
test
lea
fstl
jecxz
fdivs
into
pop
test
or
sub
sbb
xlat
rol
or
and
cmp
rorb
dec
jnp
add
xor
sbb
es
enter
adc
test
rcrl
loop
sbb
sub
lds
add
fsubl
inc
push
sub
cmp
mov
push
push
adc
loop
mov
mov
movsl
cmp
movsl
or
lcall
push
ret
mov
dec
sub
shlb
push
pop
clc
mov
mov
fcompl
jb
push
pushf
xorl
jne
mov
jge
jo
aas
push
jbe
inc
or
test
or
sbb
mov
nop
stc
sub
xchg
nop
addr16
sub
fs
mov
into
or
lcall
test
movsl
cmp
adc
cli
int
xchg
pop
mov
aad
xchg
mov
sub
enter
leave
lret
push
adc
push
push
pop
and
xor
lods
fs
adc
sti
add
nop
lcall
stos
addl
or
xor
and
adc
iret
sub
adcl
test
aaa
int3
test
push
sbb
push
decl
ret
add
inc
pop
repnz
xchg
xchg
xorl
mov
inc
jno
mov
dec
adc
insb
add
push
enter
aam
push
sbb
mov
adc
enter
out
add
enter
or
rcl
adc
xchg
push
fs
mov
inc
jo
mov
push
mov
mov
adc
fucom
imul
sub
adc
adc
inc
sbb
imul
mov
mov
and
dec
mov
aad
add
or
insl
and
cmpsb
xor
pop
dec
xchg
lret
push
or
lret
push
add
inc
outsl
icebp
push
aam
push
xchg
jne
add
mov
addl
jbe
addl
adc
fidivs
cli
or
mov
push
int
mov
mov
pop
jmp
rcrb
add
gs
scas
rol
mov
cmc
mov
inc
jg
or
mov
adc
add
add
add
inc
and
jmp
out
rolb
add
add
bound
jl
call
push
inc
xor
stos
inc
pop
pop
sub
shlb
push
call
fildll
pusha
add
add
add
pandn
nop
add
loopne
cli
xor
adc
mov
mov
nop
dec
dec
cld
adc
push
lret
xor
imul
inc
lods
imul
dec
adc
adc
push
imul
mov
ret
cmp
fadds
pop
pop
mul
cmp
fmull
sbb
in
bound
push
dec
cmp
mov
inc
push
pop
pushf
adc
call
lods
xor
add
add
inc
sbb
sub
fmuls
insl
add
push
out
ret
std
popf
jne
xor
jg
pop
pop
xchg
xchg
mov
arpl
inc
out
call
ljmp
das
dec
test
xchg
and
add
inc
add
mov
xchg
cmp
mov
shr
mov
shll
xor
shlb
cwtl
stos
fs
push
adc
pop
jle
push
push
sahf
aam
inc
mov
movsb
clc
pop
inc
push
mov
cmp
aam
in
jg
in
out
shrb
popf
and
push
rcrb
add
dec
pusha
push
xor
les
clc
inc
movsl
test
mov
jecxz
or
mov
ret
pop
add
movsl
cli
xor
rorl
aaa
fisubl
enter
or
rorl
xchg
lcall
je
je
stc
sbb
jae
jnp
cs
mov
mov
leave
cmpsl
push
xchg
cmp
pop
add
sbb
stos
dec
sub
mov
xor
mov
inc
push
mov
sub
into
pop
cmp
lock
or
xorl
add
push
ret
push
outsb
dec
clc
sub
out
pop
inc
dec
bound
jb
adc
add
pop
ret
push
pop
fs
jo
mov
nop
ror
inc
popa
inc
loop
sti
cmc
jae
cmp
sbbb
adc
rcrl
xlat
push
inc
cld
nop
subl
sub
cwtl
inc
mov
pop
shll
lds
mov
mov
and
xchg
dec
xlat
aad
call
inc
xor
xor
test
and
cmp
lods
inc
sbb
fisubl
push
adc
adc
xchg
jmp
push
adc
adcl
ret
push
pop
jnp
mov
push
mov
movsl
adc
add
test
bound
testl
adc
das
add
add
sub
test
mov
or
mov
notb
stos
scas
cmpsb
push
and
jbe
mov
xor
sub
mov
sbb
push
adc
cmp
jp
lret
mov
dec
test
push
aam
fstl
loop
xchg
push
sahf
inc
cmp
lock
lock
test
inc
cmp
and
push
inc
sub
add
repnz
in
movsl
sbb
push
xor
sub
mov
jecxz
aam
repnz
xor
lea
loope
negb
or
and
push
iret
xchg
jns
push
add
lret
add
add
xchg
sbb
ret
sub
xor
adc
cltd
adc
xchg
cmpsl
nop
inc
mov
nop
xor
or
sub
mov
and
cmp
loop
cs
in
fs
push
and
lock
loopne
subl
push
mov
imul
add
test
push
sbb
fdivr
pushl
cmpsl
nop
sbb
xor
add
sbb
and
adc
jno
and
aas
roll
call
adc
into
in
sub
adc
adc
mov
stos
push
xchg
add
jl
fsub
lock
push
xor
fisubrs
cmpb
adc
ret
dec
dec
jp
in
pop
mov
jge
lock
mov
and
or
subl
aam
push
gs
test
adc
xor
es
test
push
jo
mov
les
test
pop
xchg
movsb
inc
sbb
xchg
addr16
inc
enter
push
cwtl
test
mov
jo
and
xlat
xor
pop
push
icebp
call
test
dec
sbb
insl
pop
push
mov
lods
movsl
jp
shr
mov
das
add
sub
add
fidivs
mov
jbe
add
xor
mov
ljmp
outsl
pop
loop
fistl
xor
add
addb
xor
or
jg
dec
jae
cli
cmp
push
into
adc
and
stos
and
dec
sbb
test
inc
ret
sti
add
mov
add
popa
das
pop
sbb
add
pop
inc
pop
scas
pop
mov
adcb
pop
and
sub
aad
sti
fwait
rorb
sahf
shl
inc
cmp
add
dec
sbb
jle
cld
aas
add
mov
and
ds
sub
cmpsl
aas
inc
cwtl
add
popf
stc
add
jle
push
and
aas
aas
pop
push
cwtl
xchg
cmp
stc
adc
pop
sub
in
xchg
lock
dec
mov
lea
pushl
adc
rolb
inc
pop
xchg
cmp
cltd
jo
jns
nop
daa
addb
out
pop
add
loope
add
xchg
dec
xor
add
xor
xchg
or
ja
add
dec
sub
pop
cmp
imul
fidivs
or
or
xor
loope
push
add
pop
aaa
inc
mov
adc
iret
dec
dec
nop
push
sbb
in
pop
push
pushf
pop
pop
call
andl
or
or
jo
pop
enter
loopne
add
jno
or
mov
in
stos
adc
mov
xor
imul
enter
sub
and
lcall
dec
aaa
push
cmp
sub
add
movsl
mov
push
je
mov
cld
and
test
outsb
popf
xor
lret
and
sub
int
daa
and
pop
cmc
and
cwtl
rcrb
push
pop
or
loop
mov
push
scas
sbb
add
dec
add
test
hlt
mov
loope
and
aaa
and
dec
loopne
lods
popa
and
mov
cmc
pop
mov
arpl
sub
neg
mov
aaa
lcall
lock
addb
xor
and
cwtl
and
addr16
imul
and
insb
xchg
push
daa
iret
test
and
and
fadds
xchg
daa
insl
mov
or
orl
scas
push
mov
loopne
pop
cli
jle
push
les
add
in
adc
xor
mov
sub
sbb
insb
imul
test
dec
cmp
cwtl
sub
popa
adc
lods
or
in
cmp
push
push
or
js
or
aam
into
mov
mov
sbb
ret
sub
insb
fs
cwtl
fidivrl
nop
pop
or
into
mov
add
cmp
in
mov
add
xor
loope
mov
push
mov
les
popa
out
repz
repz
jnp
pusha
sub
test
inc
pop
pop
jmp
in
add
add
orb
inc
clc
ljmp
rclb
shrb
add
pop
dec
rolb
sbb
subl
sbb
adc
add
dec
ljmp
ret
cmpb
add
hlt
add
cs
rcll
sti
or
jmp
sti
cmc
or
mov
pop
cmp
push
xlat
enter
popa
in
int3
mov
jne
scas
mov
sbb
test
mov
gs
add
or
loopne
test
inc
dec
xor
scas
adc
push
lret
lock
inc
push
add
xor
and
movb
and
adc
dec
ja
pop
inc
dec
mov
dec
add
inc
sub
xchg
lock
loop
xlat
push
hlt
mov
test
mov
jbe
mov
inc
in
cmp
cmp
cmp
repnz
sbb
ja
push
and
std
ja
jp
jle
lock
imul
dec
lcall
ds
sti
add
inc
fwait
lods
xor
shlb
and
mov
sarb
inc
lcall
repz
add
or
and
sti
in
mov
add
push
lcall
or
xchg
repz
cmp
jae
mov
pop
fs
inc
cmpsb
jmp
jp
mov
push
pop
adc
test
ret
or
jge
or
seta
adc
pusha
mov
gs
lock
cli
push
repz
mov
mov
cmp
pop
add
jmp
shrl
sbb
cmp
leave
inc
imulb
nop
fcomp
jbe
inc
dec
test
push
sub
add
sarl
jno
fdivs
daa
or
push
fdivrs
xor
adc
jbe
inc
cmp
jnp
mov
testb
dec
xchg
and
or
push
mov
psrlw
lods
xor
mov
adc
es
imul
inc
mov
ret
pop
les
mov
and
jg
cmpsb
pop
int3
push
cmp
je
cmp
inc
mov
adcl
add
xor
xchg
mov
rep
mov
sub
xchg
fidivrs
mov
mov
dec
add
adc
push
insl
xor
dec
fldt
pop
inc
sub
es
cmpsb
cmp
adc
pop
mov
sbb
jbe
jbe
add
cmp
je
testl
lcall
xchg
jb
mov
int3
dec
cld
lods
mov
push
push
frstor
decb
fldl
and
loopne
les
adc
call
mov
shrl
sub
lods
or
add
push
and
adc
sub
jbe
aas
gs
push
and
fstpl
and
insl
clc
push
cltd
rolb
add
or
xor
out
out
cmp
hlt
mov
dec
and
pop
fsub
pop
fsubrp
mov
test
xchg
pop
add
nop
into
mov
loopne
or
push
fldlg2
stc
les
icebp
and
xor
dec
xchg
insl
imul
outsl
outsl
mov
sub
dec
je
lcall
adc
add
xor
fisubs
sbb
ss
stc
addr16
data16
push
push
jp
sbb
push
push
and
pusha
sub
sbb
arpl
pop
mov
sub
sub
push
iret
dec
sub
sbb
negl
xor
rorb
hlt
mov
and
fdivrl
pop
movsl
fmul
sbb
xor
or
or
mov
ss
and
das
insl
mov
xor
xchg
jg
clc
lea
ja
jbe
sbb
cmp
iret
aaa
fldenv
cmpsb
or
jo
xor
cmp
push
shlb
sub
sub
mov
and
push
or
xchg
dec
mov
clc
and
lret
stc
sub
or
test
xor
fwait
adcb
inc
and
movsb
xor
or
cli
and
outsb
or
test
push
xor
mov
push
jecxz
imul
or
aad
ret
lods
and
mov
les
jo
pop
fadd
aas
movsb
fwait
adcb
lock
in
jae,pt
push
push
dec
pop
cltd
and
or
sbb
insl
add
dec
dec
and
mov
leave
into
push
xchg
xchg
dec
jbe
lahf
test
push
cwtl
jge
mov
test
push
mov
and
fcmovnbe
and
jae
and
mov
cmp
stc
adc
punpckhbw
aaa
jns,pn
bnd
movups
sbb
lret
inc
sub
sub
sub
xor
lret
pop
and
jae
jbe
jne
and
jo
fwait
in
sub
add
lea
les
shrb
lea
sbb
jns
out
adc
push
cmp
insl
out
sahf
out
mov
jns
shl
cmc
sub
iret
repz
jno
xchg
movsb
repz
repz
xlat
call
out
sbb
sub
dec
sahf
out
sahf
pop
jo
xchg
mov
jns
out
sbb
clc
push
inc
sub
push
mov
lods
mov
push
add
fs
data16
cmpsb
push
rorb
nop
mov
pop
loope
xor
flds
push
jmp
out
lock
inc
lods
mov
outsl
pusha
test
lods
loopne
mov
xchg
mov
push
mov
inc
mov
and
adc
mov
ss
loope
cli
leave
inc
int
mov
push
je
push
adc
push
add
test
jmp
pop
sub
add
fadd
popa
mov
and
mov
fildl
sub
enter
loop
sarb
cs
icebp
or
xor
mov
push
lods
sbb
xchg
lods
add
mov
sub
add
push
inc
add
lock
mov
test
add
in
cmpsl
iret
add
xchg
stos
rclb
sub
cmpsl
or
push
xchg
dec
inc
inc
xchg
icebp
push
xor
leave
bound
and
push
movsb
imul
imul
add
adc
aam
xchg
andl
sub
lds
jecxz
and
add
pop
ja
les
mov
push
mov
mov
arpl
enter
cmpsb
es
test
pop
inc
pop
jl
sub
inc
add
add
add
aaa
adc
adcb
pop
out
arpl
in
or
mov
pop
loopne
call
call
sub
mov
lea
pop
mov
push
xchg
hlt
or
in
in
inc
orl
and
loope
xchg
data16
or
dec
andb
or
jns
test
adc
lock
loope
nop
rcll
sbb
or
and
sbb
pop
adc
test
xor
pusha
test
rcll
mov
stc
add
push
or
dec
inc
cmp
xor
xor
cmp
and
or
enter
rorl
pop
pop
or
mov
jl
push
sub
jge
lds
or
lock
push
xchg
iret
and
add
cmp
xor
clc
mov
in
call
sub
mov
add
cmp
adc
cmp
ret
add
sbb
push
jl
movsb
pushf
mov
push
leave
xchg
or
mov
mov
dec
mov
and
mov
mov
mov
movl
leave
lock
xchg
sub
fisttpll
scas
or
inc
bound
mov
repz
mov
push
mov
cmp
test
aam
jb
ret
adc
movsb
pusha
sub
leave
jo
icebp
add
bound
les
add
pop
adc
push
add
leave
or
pushf
adc
stc
jl
add
fiaddl
adcb
adc
adc
inc
or
je
or
mov
inc
push
adc
mov
jecxz
int
fimull
insb
adc
or
or
add
xor
inc
cmpsb
xchg
push
into
xchg
sbb
sbb
test
sub
jne
pop
scas
andl
bt
shll
lcall
or
xchg
or
sbb
add
mov
jb
int3
iret
add
lcall
mov
mov
pop
adc
daa
addb
std
adc
scas
lds
inc
xchg
push
adc
or
xchg
pop
rol
or
jnp
and
xor
nop
imul
ret
in
add
lods
scas
or
inc
stos
lods
push
mov
inc
pop
and
jbe
and
add
add
xchg
add
orl
nop
push
pop
bound
cmp
or
mov
nop
sbb
lea
mov
ds
or
inc
adc
add
ret
push
enter
dec
add
add
insb
ret
dec
xor
dec
ret
dec
data16
movsb
sub
add
add
in
push
cmp
or
xor
inc
push
mov
pusha
andl
push
cmc
inc
scas
icebp
sub
lds
inc
sub
outsl
or
into
test
push
xchg
adc
cs
add
cmovo
inc
push
or
lods
nop
cmp
add
es
pop
in
sbb
inc
mov
add
or
cmpsb
pusha
mov
cmpl
add
add
and
adc
xchg
adc
jns
jmp
je
xchg
pop
clc
add
jnp
addr16
mov
and
push
mov
loopne
push
mov
sbb
jge
dec
sub
rorl
push
sub
sub
aaa
cmp
push
rep
cmp
push
cwtl
inc
mov
insl
mov
adc
push
mov
jne
cmpb
add
cmp
and
dec
data16
cmp
sbb
add
sub
sbb
dec
cltd
dec
inc
push
add
cmp
inc
mov
mov
add
cmp
sar
fidivl
sbb
rcrb
in
popf
or
daa
adc
add
push
shr
sti
shlb
bound
push
imul
dec
mov
sub
mov
sarb
adc
inc
adc
rorl
shr
xor
jl
cmp
jne
xor
push
inc
arpl
sub
test
pop
insl
mov
nop
inc
jmp
push
push
fsubl
fmull
imul
popf
mov
shlb
ja
shlb
dec
add
jp
add
cmp
or
pop
sahf
dec
xor
xchg
push
xchg
outsb
andl
test
sarb
adc
sbb
add
mov
push
lea
inc
insl
cld
pop
divl
frstor
popa
push
ret
ret
push
dec
push
sbb
in
push
pop
sbb
popa
call
and
sarb
pop
sbb
xchg
and
dec
sbb
bound
jge
fwait
std
inc
cmp
int3
nop/reserved
clc
add
test
daa
push
js
add
add
push
mov
test
sub
in
dec
lea
ss
movl
fucomip
push
push
pop
arpl
movsb
xor
in
lea
add
dec
or
jmp
loopne
sub
add
fistpl
daa
movsb
dec
lcall
test
mov
push
add
nop
xor
adc
cmpsl
jb
pop
iret
inc
adc
fsubrl
je
push
xor
pop
cmp
push
inc
testl
push
adc
scas
and
sbbb
add
imul
or
mov
mov
add
stos
movsb
dec
clc
mov
jbe
ret
or
adc
jl
xor
jmp
cmp
jl
or
sbb
ljmp
int
popa
jp
adc
cmp
cmp
je
mov
mov
mov
inc
jmp
movb
mov
push
jae
cli
fs
cltd
idiv
add
imul
ljmp
jl
faddl
aad
pop
mov
outsl
jecxz
arpl
push
hlt
xchg
pop
mov
dec
jle
cmp
inc
jp
out
pop
test
pop
loopne
xchg
addl
add
dec
call
sub
in
in
xchg
out
xchg
jl
hlt
incb
test
or
add
push
sub
in
dec
fsubl
daa
cmp
xor
push
icebp
nop
fstpt
push
push
je
xchg
add
push
mov
dec
push
shlb
xor
out
pusha
cmp
mov
aas
add
negl
jl
jns
les
fwait
inc
sbb
or
xchg
test
dec
repnz
xor
add
or
jne
lock
leave
ret
int
clc
sub
enter
jo
insl
je
cmp
cmp
xchg
lods
sub
adc
xor
imul
jb
lock
and
test
btr
xor
cmp
div
pop
xchg
push
pushf
adc
or
or
inc
sub
in
dec
pusha
cmp
leave
sub
dec
or
jmp
lret
xor
gs
push
adc
loop
mov
mov
push
jo
js
push
in
dec
or
mov
jnp
jno
jbe
fscale
outsb
inc
jmp
push
pop
push
push
add
adc
push
cltd
shll
les
ret
es
jne
sbb
cmp
out
enter
out
xchg
sub
cwtl
in
fsubr
nop
push
dec
cs
push
lcall
in
push
xchg
dec
aam
out
mov
sbb
mov
scas
cmp
imul
pop
and
inc
add
loop
and
pop
imul
mov
mov
adc
and
in
mov
test
mov
es
leave
gs
and
daa
dec
rolb
push
pop
call
dec
repnz
sub
fsts
mov
and
push
test
mov
pusha
cwtl
dec
jo
xchg
sbb
pop
mov
mov
sbb
js
stos
add
shrl
lods
adc
dec
xor
cmp
js
aam
fucomp
adc
sub
dec
fsubr
ja
rorl
arpl
or
jmp
jge
mov
jno
fmulp
imul
xchg
flds
adc
and
xlat
cmp
idivb
test
fidivrl
scas
xor
add
fldt
nop
jo
xor
adc
out
int3
jge
push
add
pop
push
test
push
dec
pop
loopne
push
mov
add
pop
sbb
dec
push
lods
int3
movsb
fcompl
push
add
inc
movsb
fmull
loope
ret
insb
fildl
adc
out
xchg
pop
pop
leave
add
mov
or
xor
cmp
pop
hlt
arpl
sbb
rol
add
pusha
and
sub
xchg
pusha
add
xchg
lahf
adc
or
iret
xchg
pop
push
pop
imul
aaa
add
subl
and
adc
lock
aam
movsl
repz
or
enter
add
sbb
cmp
push
mov
xor
pop
repnz
mov
inc
jo
mov
cmpsl
jle
xor
push
pushf
ljmp
cmpxchg
push
lods
scas
inc
pop
pop
sti
mov
mov
jmp
shlb
cmp
ret
ds
aam
leave
jp
and
test
mov
lods
xchg
add
mov
and
imul
js
and
shrb
popf
and
rclb
pop
les
xchg
aam
adc
loopne
lea
inc
sub
mov
hlt
xchg
and
sbb
sub
ds
add
out
ss
or
mov
pushf
testb
pop
dec
ffreep
mov
jns
pop
out
nop
addl
add
jmp
pushf
inc
lods
pusha
imul
inc
movsl
add
shlb
paddq
cli
xchg
lods
push
push
and
incl
out
push
jmp
push
push
sbb
movsl
jmp
cmp
jg
lret
push
xor
test
movsl
popf
mov
jmp
dec
or
rorb
bound
test
sub
ja
pop
dec
int3
and
fldenv
lret
push
hlt
sub
and
and
cmp
pop
stc
push
jge
subb
and
aad
fdiv
daa
sub
pop
adc
xchg
cmp
testb
lock
inc
add
jge
fdivrl
and
fsubrs
cmp
ja
pusha
push
pop
mov
add
inc
push
inc
dec
gs
adc
rcrl
in
movsbl
and
add
and
add
mov
hlt
cli
sub
test
aam
repz
loop
daa
fs
mov
int3
pop
lock
cmp
add
pop
hlt
push
fnstcw
add
push
or
inc
call
sbb
aam
xchg
xchg
push
add
sub
xchg
mov
adc
aas
loop
cltd
mov
daa
xchg
shr
sbb
aaa
out
addr16
xchg
stos
and
fwait
push
or
sub
jno
mov
push
mov
das
rcr
mov
cmp
orl
xchg
idivb
push
loopne
push
sbb
push
lcall
xor
cmp
xor
or
fdivl
and
and
mov
mov
ret
add
push
add
jne
push
jg
mov
add
inc
faddl
int3
std
jecxz
sbb
test
sub
cmp
or
adc
aam
repnz
aam
or
xchg
cmc
inc
imul
mov
push
jo
and
fsubrl
push
xor
fsubrs
sub
adc
and
movl
mov
aaa
push
int3
inc
or
sbb
sub
mov
lock
addb
adc
and
jno
rcrb
test
inc
push
adc
lea
and
sub
rol
or
inc
sub
mov
sarb
imul
das
repnz
frstor
aas
gs
test
add
pop
push
dec
sub
andl
and
sbbb
hlt
or
cmp
pop
push
push
sbb
ret
stc
dec
pop
movsb
in
adc
inc
aaa
fsubs
xor
mov
addr16
xchg
sete
cmp
daa
push
out
shr
add
loopne
cmc
in
adc
add
fadds
sbbb
sub
sahf
mov
push
movsb
mov
mov
popa
aam
xchg
pop
adc
adc
sub
mov
dec
xor
mov
sub
lock
test
push
aam
jmp
daa
das
cmp
fstps
xchg
cmp
or
lods
jp
rorl
mov
shll
aam
cmp
xchg
sub
push
cmp
inc
cmp
in
cmp
sub
cmc
lahf
push
scas
pop
pop
cmp
adc
xor
mov
adc
lods
addb
add
dec
insl
cmp
sbb
or
int3
add
or
pop
cltd
or
add
pop
add
test
in
push
lock
cmp
arpl
pusha
cmpsl
repz
push
xor
xchg
jle
dec
mov
push
ljmp
adc
in
cmp
jne
add
add
rclb
dec
cmp
push
aad
idivl
inc
dec
jge
pushf
cmp
inc
mov
sbb
cmp
push
xor
mov
mov
lds
and
push
mov
or
sbb
mov
pop
add
loopne
outsl
in
cmp
ret
inc
add
dec
mov
dec
push
and
shrb
push
xchg
adc
add
push
popf
add
mov
jns
add
or
loope
push
push
push
imul
in
repz
jb
mov
ret
call
loop
mov
shlb
and
adc
in
inc
mov
push
sti
xchg
lds
xor
in
cmp
sbb
or
pop
dec
cs
imul
jae
mov
lock
test
orl
push
xorl
or
sub
push
pop
pop
add
inc
push
inc
shlb
daa
dec
je
xchg
psraw
xor
loope
mov
mov
lods
sub
out
push
ret
aaa
mov
xchg
push
sarl
leave
add
rclb
adc
cmp
mov
jo
or
adc
add
mov
push
ret
nop
iret
test
loopne
mov
push
dec
jmp
push
bnd
movsb
dec
lret
pop
and
mov
cs
dec
sbb
stc
pop
imul
push
imul
jge
cwtl
and
mov
adc
mov
push
push
dec
push
xor
or
insb
and
jo
mov
daa
sub
pop
arpl
mov
adc
fildl
push
or
loop
add
enter
mov
or
cmc
xchg
jne
or
add
xor
call
movsl
ficomps
sar
xor
fs
out
pop
rolb
cmp
and
sub
pop
add
jmp
jnp
jne
jbe
or
mov
daa
push
add
imul
sahf
gs
cmp
hlt
inc
push
push
add
sbb
je
push
test
add
or
insl
pusha
ret
js
mov
je
cmp
jne
mov
sbb
cltd
and
ljmp
movsb
test
movsl
test
in
adc
in
inc
adc
pop
jae
or
mov
loope
mov
shr
mov
push
add
push
cltd
jb
or
arpl
adc
test
aam
cmp
filds
xchg
mov
pop
jge
sub
mov
cmp
push
cmp
add
or
addl
in
lret
dec
cli
inc
adc
cmp
mov
or
jmp
or
pop
out
es
jne
testb
jae
mov
ret
icebp
mov
or
pop
mov
add
jmp
mov
jb
std
dec
push
push
adc
mov
sbb
push
and
std
jno
cs
push
fdivrl
push
pop
out
cwtl
loope
call
popa
insb
pushl
cmp
and
hlt
push
xor
mov
shlb
stos
sbb
sub
fisttpll
xor
ret
pop
xchg
mov
aam
mov
aas
repz
pop
and
mov
mov
jne
push
sbb
and
xor
pop
out
mov
mov
xor
repnz
jge
dec
adcb
xor
in
add
push
inc
push
sbb
or
pop
inc
push
push
add
cmp
mov
iret
adc
shlb
push
dec
add
add
pusha
xor
xchg
add
movsb
xchg
xor
in
pop
loopne
mov
out
cmp
addl
push
lea
pop
add
xchg
adc
push
pushf
enter
mov
sti
cmp
cmp
cmp
xor
xchg
sub
or
adc
std
rcrb
pop
or
add
imul
popa
orb
and
add
xor
and
adc
dec
call
dec
or
sub
add
pop
call
pop
shrb
sbb
jne
cld
icebp
lods
je
pop
or
jl
nop
bound
lods
xchg
dec
aaa
add
pusha
or
add
sbb
jae
jns
lods
push
std
sub
roll
cmp
imul
or
addb
mov
dec
sub
xchg
cs
mov
jns
push
or
dec
xor
xchg
sbb
cmp
cmc
push
fiadds
mov
pop
add
fisubrs
xchg
andl
push
inc
popa
lods
call
jae
mov
sarb
je
add
bound
shr
push
dec
xor
das
push
xchg
rol
fsubrs
cmp
clc
dec
add
and
add
add
sub
sub
dec
shlb
mov
loop
notl
xor
int3
dec
inc
es
je
jp
cs
and
add
mov
xchg
enter
dec
iret
enter
in
and
into
xor
sbb
das
or
inc
mov
add
outsb
add
and
mov
mov
mov
sub
arpl
sub
xor
push
mov
cmpsb
pop
sub
or
pushf
pop
fstps
xor
adc
pop
or
adc
inc
sbb
cmovo
and
icebp
cmp
push
sbb
mov
mov
sub
push
mov
pop
pop
xchg
dec
shll
add
push
test
mov
stc
outsb
add
mov
adc
ret
sti
xorb
addr16
ficompl
adc
adc
jno
outsl
sbb
ja
or
push
fisttpll
jae
or
arpl
outsb
cmp
push
nop
dec
push
push
call
inc
imul
and
sbb
dec
jne
imul
add
mov
inc
sbb
pop
jo
sub
sbb
cmp
adc
sbb
rcrl
dec
pop
addl
aaa
in
inc
cs
subb
clc
xor
int
popf
fldcw
jl
loop
jmp
sbb
sbb
mov
shlb
addr16
dec
dec
je
push
jo
imul
imul
or
mov
popa
imul
dec
push
daa
ds
subb
sub
pop
shrb
aaa
jmp
sub
push
mov
jmp
push
cmp
jno
jo
jns
or
or
ret
rorl
mov
mov
jl
pop
push
and
loope
mov
inc
add
sub
pop
mov
xor
ljmp
and
push
xchg
stos
orl
adc
xchg
or
push
inc
inc
mov
xchg
mov
cmp
inc
add
pop
and
push
aaa
mov
jnp
sbb
fimull
sbb
mov
and
pop
outsl
push
in
xor
mov
mov
lods
sbb
and
or
daa
andb
xor
jle
cli
cmp
sbb
fcomp
push
push
push
in
sub
mov
andb
and
pop
adc
cmpsl
sbb
daa
inc
call
fnstcw
or
push
rorb
inc
xor
in
sub
adc
mov
and
sbb
push
lods
adc
add
jns
push
inc
jmp
daa
decl
mov
sbb
lock
add
das
or
jne
mov
pop
fs
adc
sub
dec
sub
push
mov
cmpl
addr16
nop
and
mov
or
cwtl
inc
or
add
adc
dec
decl
sbb
mov
pop
lock
adc
or
cmp
arpl
sarb
and
jno
push
mov
pop
shlb
mov
mov
fwait
dec
loopne
ret
imul
nop
inc
outsb
add
inc
or
loopne
test
add
jecxz
dec
lods
insl
popa
jne
call
pushf
loopne,pn
lcall
push
les
gs
jns
rorb
lock
jne
mov
xor
add
dec
inc
sub
mov
rcrl
loopne
jge
xor
pusha
outsl
lods
add
mov
into
lock
mov
or
jnp
or
test
xchg
adc
sbb
push
and
scas
cld
mov
dec
lcall
adc
mov
mov
mov
mov
add
adc
inc
rdtsc
push
sbb
mov
xor
jbe
outsl
jnp
add
sbb
outsb
mov
out
inc
cmp
pop
xor
nop
andb
xchg
insb
lock
or
push
pop
ret
add
rclb
movsl
sahf
xchg
movsl
dec
scas
sbb
adcl
ds
push
gs
dec
or
push
pop
lock
mov
data16
outsl
sbb
jnp
jg
mov
cmp
fisttps
sub
mov
les
add
push
adc
lahf
push
xchg
movsl
scas
int3
into
pop
mov
push
add
shl
es
pop
shufps
loopne
pop
or
ja
movsl
loope
or
pop
mov
call
pop
xabort
pushf
pushf
dec
test
in
sub
fwait
add
jge
push
inc
test
pop
cmpl
adc
mov
sbb
dec
xchg
xorb
into
icebp
mov
inc
cmp
jb
call
fdiv
cmpsl
xchg
cmp
add
sbb
push
addb
sti
mov
pop
adc
cmpb
and
or
sub
jns
push
mov
xor
cmp
or
push
nop
dec
arpl
push
sbb
repz
dec
outsl
mov
pop
inc
or
adc
push
mov
pop
jl
or
inc
adc
iret
in
pop
jns
dec
test
xchg
js
rorl
and
pusha
add
pop
xchg
xor
jo
dec
fs
sub
mov
push
fdivl
or
jge
sbb
and
xchg
pop
pop
pushf
adc
nop
xor
roll
cmc
push
in
decb
lds
mov
xchg
adc
rcll
mov
in
les
incl
je
jp
in
push
insb
inc
dec
add
adc
sub
mov
sbb
pop
xor
xchg
mov
dec
ja
jp
sbb
jge
sbb
pop
loope
or
ret
imul
jns
cmp
ss
dec
inc
ss
lret
cmp
sub
fdivr
or
cmp
pop
lahf
sub
pop
std
mov
subl
push
ja
mov
std
loope
imul
dec
cmp
adc
lea
mov
cwtl
loopne
push
cmp
lcall
add
push
mov
add
pop
rclb
out
iret
iret
pop
pop
lret
test
mov
cmp
lock
inc
lea
mov
xchg
xor
push
in
bound
adc
setb
outsl
add
mov
mov
sbb
mov
scas
cmpl
pushl
shll
jmp
popa
fwait
xor
mov
push
lea
add
pop
mov
clc
adc
cltd
mov
pusha
les
ds
add
leave
xlat
jbe
andl
and
gs
ret
test
test
add
lcall
inc
sbb
cmc
incl
inc
jecxz
xor
stc
pop
fsubrl
mov
mov
xchg
lahf
rclb
inc
aam
jl
in
mov
jo
xor
or
nop
fsubrs
aam
add
subb
inc
pop
jp
mov
inc
cld
mov
shrb
dec
sub
push
sti
out
les
push
mov
mov
jecxz
or
es
adc
lcall
in
imul
insb
xlat
addr16
push
or
aad
mov
lods
dec
or
jns
adc
xlat
hlt
call
or
lret
call
or
iret
das
fiadds
adc
xor
jge
outsb
sbb
or
sbb
jle
jae
dec
jb
mov
adc
test
adcb
loope
popa
fdivrl
add
sub
dec
cmpsl
cmp
adc
or
mov
pop
in
pushf
and
shll
mov
inc
jg
add
xchg
mov
push
adc
push
imul
movsb
sti
iret
in
jl
pushl
add
lods
cmp
cwtl
sar
mov
lret
dec
cmpsl
xchg
loopne
sub
shl
shlb
lods
xor
sub
shr
dec
push
push
out
push
push
inc
pop
nop
cmp
pop
and
std
jo
popf
shrb
or
add
mov
sbb
or
into
push
ficomps
sbb
int3
and
incl
out
or
je
push
sarb
mov
inc
mov
int3
dec
adc
or
push
lret
xor
mov
push
jbe
adc
and
mov
add
push
mov
cwtl
and
mov
adc
mov
push
push
lahf
dec
mov
imul
mov
insl
jge
cmpsl
pop
sarb
movsl
inc
sbb
xor
cmp
je
movzbl
or
in
in
jmp
lods
fcoml
call
push
in
in
sub
dec
push
or
jmp
rcll
dec
xchg
test
addr16
add
mov
push
sub
or
adc
sub
inc
sub
pop
scas
add
out
mov
into
or
sbb
dec
or
push
mov
dec
cli
jbe
cmpl
jne
adc
hlt
pop
cmp
jbe
notb
add
adcl
pop
sbb
mov
out
ss
ficoml
or
shll
mov
int
sbb
aam
pop
mov
sbb
cmpl
lcall
dec
add
cmpsb
add
or
pop
enter
sbb
nop
enter
sub
clc
push
jle
rol
sub
inc
pop
clc
insl
lock
add
outsb
movl
dec
shr
adc
mov
add
or
or
dec
xor
cmp
xchg
xchg
mov
loope
int3
add
add
stos
mov
xor
pop
testb
and
cmp
mov
nop
lock
push
and
inc
cli
dec
repnz
pop
jne
xchg
adcl
fcomip
and
add
jne
xor
xor
jmp
or
adc
xchg
mov
and
orb
and
loope
lea
push
and
jno
or
dec
or
shl
mov
pop
adc
or
push
xchg
or
xchg
inc
xchg
mov
sub
mov
sarb
xor
mov
pop
andb
int3
out
enter
xchg
into
xchg
fcompl
iret
and
bound
cmpsl
cltd
add
ss
cmpsb
dec
aam
jo
add
sbb
push
push
pop
fmull
and
hlt
xchg
xor
mov
adc
add
into
aas
push
inc
push
daa
test
xor
xor
subl
jne
flds
push
jecxz
sbb
dec
mov
mov
cmp
inc
and
push
or
push
pop
lahf
movsb
mov
ss
inc
or
xor
add
aam
das
inc
pop
lcall
ss
fs
fdivrs
ds
rep
popa
std
ss
and
fmul
adc
mov
shrb
fistpl
and
cmp
scas
sbb
iret
aad
adc
cmpb
or
test
xchg
adc
add
push
add
xchg
fcomi
cmp
dec
aam
incl
or
test
call
bound
fidivl
cmp
and
dec
iret
jge
testl
mov
fcomps
test
ja
fcomp
addl
jl
sbb
add
shr
jnp
push
insb
sub
sub
jmp
or
loopne
mov
andl
pushf
in
add
jne
mov
test
jb
cmp
orb
push
mov
sub
movsb
or
aaa
jmp
std
inc
and
pop
add
push
push
outsb
scas
dec
mov
xor
dec
jmp
xchg
in
rolb
pop
sub
jo
or
jne
mov
sub
cmp
sub
loopne
aad
add
push
popf
add
sub
fldenv
xor
dec
cmp
pop
cmc
pushf
pop
imul
sti
mov
xor
neg
pop
sbb
cmp
add
mov
pop
je
ret
ret
adc
sub
push
push
add
nop
sbbl
lock
push
jmp
jmp
pop
sbb
mov
ljmp
mov
call
adc
int
jo
shr
rclb
mov
inc
sub
sbb
jg
popl
adc
add
fimuls
aaa
mov
loopne
and
and
pop
sub
dec
dec
jne
dec
add
stos
mov
sub
push
ret
or
sahf
test
xchg
sub
jmp
gs
fimull
insb
mov
outsl
cmpl
lahf
jge
add
js
xor
jmp
xchg
xchg
mov
pushf
scas
and
mov
or
adc
pop
sub
push
jmp
and
jge
xchg
push
sub
ljmp
cmovno
jne
push
pop
sub
jns
out
mov
push
cld
and
adc
push
xchg
lock
xor
add
mov
mov
lock
mov
xchg
jo
gs
ret
fchs
or
sbb
xor
push
cmp
mov
dec
push
test
sbbb
and
push
push
push
call
cmp
inc
push
push
mov
insb
mov
xlat
pop
ret
cmpsb
adc
push
cmp
jmp
mov
adc
je
lea
jmp
add
add
icebp
rclb
in
sub
cmp
add
js
test
aam
cmp
outsb
push
pop
add
and
dec
call
inc
or
mov
xchg
mov
xchg
push
cmc
mov
adcl
fstl
or
push
sbbl
shrl
mov
ret
mov
push
cmpb
xor
loopne
mov
sbb
cwtl
inc
mov
mov
dec
mov
addb
xor
mov
fwait
lods
mov
rclb
outsb
xchg
int3
mov
call
adc
mov
aas
andb
sub
sahf
mov
push
push
vmread
xchg
enter
lret
dec
and
and
push
or
insl
shl
push
ffree
cmc
mov
pop
jno
mov
dec
xchg
sub
aam
push
movzwl
insb
jnp
lock
mov
inc
sbb
jl
cmp
pushf
jbe
mov
mov
cwtl
imul
sbb
or
push
mov
flds
jns
dec
or
mov
lret
sub
lods
fucomi
push
mov
push
ds
inc
mov
fcoml
daa
cli
push
stc
push
in
add
add
push
dec
jnp
clc
mov
inc
cmp
or
mov
movb
or
pop
aas
xchg
cmp
ss
mov
mov
mov
mov
xor
jmp
std
adc
add
cmp
xchg
push
cld
mov
or
sbb
add
add
adcl
pop
pop
mov
sti
pop
ss
jle
movsl
movsw
push
cld
movsb
iret
jmp
shr
or
aas
insl
cli
mov
adc
ljmp
inc
mov
ja
inc
cmp
jle
movb
cmpb
mov
xor
jg
mov
and
fimull
mov
xor
movsbl
xor
test
push
push
fstpt
roll
jb
and
push
cld
ret
xchg
je
push
push
rclb
lods
leave
fisubrl
icebp
push
cmp
xchg
pop
outsl
or
int3
stos
lods
outsl
push
cli
outsl
sub
jge
inc
add
push
or
insb
mov
or
sub
mov
push
insb
dec
jno
and
or
cmp
aad
pop
cli
sbb
xor
xor
push
dec
cmp
inc
and
and
adc
cld
cmc
push
mov
shrb
stos
and
fs
test
mov
adc
mov
dec
ja
cmp
xchg
inc
dec
into
xchg
or
inc
and
sbbl
andb
leave
leave
leave
add
out
leave
or
jmp
or
jmp
or
jno
out
out
jmp
push
jmp
por
jmp
out
out
adc
pop
adc
push
adc
dec
adc
dec
out
out
adc
aas
pop
jmp
sbb
xor
sbb
xor
jmp
sbb
es
and
out
out
jmp
push
jmp
pop
jmp
and
or
and
or
jmp
and
mov
push
mov
sbb
adc
inc
push
test
andl
mov
push
in
lahf
out
in
cmc
std
add
iret
repz
iret
repz
xor
ds
dec
dec
cmp
repz
push
pop
popa
data16
repz
jg
repz
test
ljmp
or
add
pushl
or
push
movups
adc
adc
push
pop
sbb
sbb
sbb
push
pop
and
and
mov
aas
or
lds
test
add
lods
add
or
movsb
jle
cmp
std
fwait
xor
cmp
jle
mov
pop
stos
mov
test
popa
sbb
add
add
push
pop
mov
jae
jb
call
in
xchg
sbb
pop
movsb
adc
shll
loope
dec
sbb
lock
pop
dec
call
mov
inc
cmp
jbe
or
out
push
jno
add
add
push
cmp
xchg
jge
stos
inc
sub
fwait
nop
cmc
out
mov
inc
push
push
xchg
mov
pop
pop
jne
and
scas
push
fisttps
jl
inc
sbb
push
lahf
sub
sub
in
or
mov
adc
int3
dec
aaa
xor
and
adc
repnz
add
add
or
aam
movsb
imul
or
jb
push
mov
test
add
or
lods
sub
pop
es
pop
xor
sub
push
cmp
inc
sbb
mov
jmp
mov
mov
mov
add
lret
or
add
je
test
lret
lret
sbbl
xchg
roll
nop
fnstenv
xor
xchg
lret
mov
and
dec
pop
dec
repnz
xor
adc
mov
pop
or
lock
mov
mov
loop
mov
repnz
ds
sarl
pop
pusha
pop
mov
jno
xchg
lcall
fisttpll
mov
push
push
sbb
lret
fidivl
pop
ss
add
mov
or
test
sahf
ss
push
inc
pop
loopne
pop
add
sbb
mov
les
xchg
xor
insl
in
pushf
mov
mov
jmp
mov
jne
and
adc
dec
jne
jno
dec
pop
and
aas
jo
ss
xor
jo
je
cli
in
pop
mov
adc
or
jge
mov
andb
or
mov
or
xor
and
ret
std
xchg
je
dec
sahf
ret
dec
gs
lahf
cld
push
clc
xchg
xor
dec
je
xchg
clc
pusha
cmp
sbb
push
xor
jmp
clc
adc
cmp
cmp
pop
push
adc
fsubrs
or
add
or
sti
and
out
adc
mov
sub
xor
test
pop
pop
pop
imul
les
or
push
testb
rolb
mov
fisttps
mov
popf
xchg
out
mov
bound
loope
xor
in
sbb
sbb
shlb
xchg
and
fwait
pusha
pop
clc
popf
cltd
test
sub
incb
pop
js
pop
andl
dec
mov
add
xor
pop
or
loop
sbb
adc
pop
or
inc
pusha
aaa
test
inc
sub
cs
shr
sti
sub
add
cmp
lret
jl
xchg
lret
sbb
cmp
sub
or
inc
adc
xchg
push
push
in
jp
push
sub
or
push
cwtl
or
mov
ds
jmp
mov
push
nop
add
sub
add
or
sub
sub
cmp
push
jmp
add
aam
test
popf
push
add
in
pop
pop
sbb
cs
push
ss
stos
add
sub
rclb
addl
scas
mov
push
stos
push
push
pusha
adc
rcrl
addb
sub
sbb
pusha
ja
or
adc
das
mov
push
insb
test
xlat
xchg
cli
dec
test
mov
dec
add
subb
popa
je
cmp
addr16
ret
cmp
xchg
jo
xchg
pop
daa
push
cmpsl
mov
movsb
popf
and
mov
push
ret
add
or
leave
call
ret
leave
and
rcrb
fmulp
dec
icebp
pushf
sub
adcl
addr16
jns
pop
faddl
cmp
repz
pop
mov
or
mov
test
fs
frstor
ja
cmp
push
dec
leave
sbb
add
xchg
xchg
xor
lret
add
outsl
loopne
mov
fisttpll
mov
add
sub
or
bound
xchg
add
add
add
sbb
and
push
and
lock
jne
mov
scas
push
push
or
cli
xchg
push
nop
push
out
jmp
fbstp
sbb
lock
and
fistpll
pop
sahf
sub
inc
jl
inc
je
adc
jge
cmp
xorl
ss
mov
add
push
in
arpl
or
push
sbb
insb
dec
pop
pop
pop
sbb
push
or
lea
loop
ds
inc
add
pop
sbb
xchg
mov
pusha
inc
fs
je
in
push
jo
inc
jbe
je
fcoms
js
lret
and
pop
test
lock
push
push
xor
xchg
inc
enter
cwtl
lahf
pushf
mov
fwait
movsb
jb
pusha
test
lods
push
cltd
movsb
fwait
mov
mov
mov
rol
push
orb
adc
cmpsb
mov
test
call
add
jle
add
or
adc
lea
add
jnp
ret
es
outsl
and
sub
push
mov
and
or
je
gs
xchg
in
sub
cmp
jl
sub
clc
aad
cltd
mov
inc
mov
add
adc
xor
or
rcrl
or
sbbl
repnz
push
ja
sbb
jmp
dec
call
and
hlt
and
mov
push
pop
jl
jmp
ret
add
xchg
out
push
or
or
mov
movsl
sahf
mov
ljmp
cmp
je
inc
push
jbe
adc
jge
and
dec
pop
pop
dec
cmp
xchg
nop
sbb
dec
dec
sbb
xchg
int3
xchg
cmp
mov
jmp
pop
das
sub
mov
xchg
insb
je
js
or
mov
sbb
test
fwait
into
pop
xor
rorb
je
cltd
mov
and
pop
add
jns
mov
leave
and
sub
cs
cmp
jge
add
or
hlt
cmp
jl
cmp
jle
sbb
fcmovu
ret
movsl
pop
ret
inc
jmp
adc
outsl
add
xchg
adc
mov
inc
pop
sarb
mov
pop
fcomps
add
jne
add
push
sub
loopne
sub
ds
incb
mov
adc
adc
incb
add
pop
movsl
and
inc
cmpsb
push
into
push
jbe
or
push
loope
push
mov
mov
add
in
jge
or
pop
dec
andb
adc
cmp
push
movsl
adcl
add
loope
test
xchg
out
lret
and
or
imul
adc
call
jmp
mov
cwtl
popa
rorb
cmp
inc
jmp
icebp
nop
add
icebp
mov
dec
data16
or
xchg
dec
cs
pop
and
jns
dec
cmpl
test
loope
stos
or
inc
insb
add
repnz
mov
dec
and
or
push
fistps
pop
orb
xor
je
xor
es
jecxz
pop
push
arpl
clc
adc
fcoms
scas
push
xchg
or
repz
dec
movsl
popf
lods
inc
ret
les
push
pop
mov
movsl
das
andb
lock
lea
push
and
adc
call
jno
inc
and
inc
shlb
adc
cmp
setle
xchg
mov
gs
or
fiadds
sbb
pop
es
fbstp
pop
cmpxchg
jmp
inc
xor
test
shlb
mov
sbb
aas
inc
sub
fcomps
pop
cwtl
pop
clc
popa
xor
mov
sub
mov
and
imul
or
mov
andb
xchg
pop
or
cltd
or
mov
cmp
loopne
and
sbb
aas
push
sbb
add
push
jg
jecxz
push
ret
adc
aam
outsl
xchg
movsl
js
sbb
mov
adc
or
lea
das
adc
dec
jmp
add
or
fimull
dec
outsl
push
adc
mov
xor
lahf
or
adc
ret
sarl
movhps
mov
mov
movzbl
sub
xchg
pop
fwait
call
lds
pop
pop
arpl
pop
add
xchg
adc
push
das
or
imul
adc
pop
ja
xchg
xor
jl
xchg
and
ss
dec
loopne
and
sbb
into
cmp
test
jbe
or
jne
mov
adc
hlt
ljmp
jbe
lods
add
or
clc
mov
and
jbe
stc
mov
or
lock
popf
or
jns
popa
add
mov
test
rol
push
cmp
mov
push
imul
sbb
push
pop
push
jg
push
pop
leave
jo
pop
test
sbb
or
pop
mov
pop
leave
das
sbb
inc
add
inc
movb
lahf
rclb
gs
dec
ss
jle
mov
jae
lock
in
arpl
xor
insl
ficomps
pop
xor
nop
mov
xchg
cmp
in
xchg
scas
gs
xchg
cmpsl
jp
push
or
xchg
sarb
adc
movb
push
sbb
aas
stos
adc
dec
adc
pop
sub
pop
xor
push
leave
rcrb
push
and
xor
and
sub
pop
push
push
lcall
call
lods
add
mov
inc
pop
push
sub
addr16
ficompl
in
jle
pop
imul
test
adc
sbb
sub
mov
gs
push
loope
aad
lock
dec
jl,pt
push
pop
cs
in
push
and
je
jno
or
sub
push
push
roll
mov
xchg
inc
inc
movsb
imul
xchg
and
leave
es
subl
add
pushl
jne
add
fstl
fldz
fcomp
fnstsw
hlt
sub
shlb
sub
sub
fsubr
pop
faddp
cmp
fstpl
ds
or
and
and
and
rcrb
or
xchg
test
mov
xor
repz
repnz
xchg
hlt
xlat
hlt
pop
hlt
repnz
rcrb
jl
cmp
orl
jne
hlt
or
jmp
loop
ss
out
rcrl
xchg
dec
xor
in
arpl
aas
push
icebp
das
jns
jo
mov
test
mov
out
pop
movl
adc
jnp
rcr
and
push
ret
push
inc
cs
and
mov
dec
mov
lea
jne
adc
xchg
jo
xor
and
sbb
sahf
jne
lret
add
js
mov
mov
dec
add
add
add
adc
pop
adc
pop
ja
push
inc
or
fldl
inc
push
jnp
inc
icebp
fsubrl
mov
xor
adc
sub
xor
repz
loop
fimuls
ss
dec
enter
push
gs
or
in
dec
shlb
mov
mov
jecxz
mov
lcall
pushl
mov
push
inc
pop
inc
xchg
add
pop
push
or
mov
lock
add
inc
pop
adc
xlat
stc
mov
adc
cmp
ss
sbb
xchg
xlat
mov
mov
imul
add
nop
out
push
insl
push
mov
push
pop
mov
push
xchg
pop
jmp
cmpsb
mov
cmc
push
sub
cmp
insb
cwtl
push
xor
jnp
imul
cmp
cmpl
xor
test
sbb
push
push
cmp
inc
cmp
and
jge
sti
or
xchg
js
push
mov
xchg
movsl
mov
sub
add
mov
test
fwait
mov
jo
add
aaa
add
popa
push
insb
dec
push
jmp
mov
xor
outsb
inc
push
pop
inc
enter
aas
xchg
pop
cmp
jb
push
add
dec
pop
jb
jns
movsl
je
sbb
jl
push
loopne
mov
lock
mov
rcll
push
push
dec
loope
arpl
jo
cmp
stc
dec
fsubr
xor
inc
inc
and
or
adc
xchg
lret
inc
or
push
dec
das
testl
shlb
cmp
stos
add
rol
enter
mov
loopne
subb
or
jp
xchg
xlat
xor
insl
or
pop
nop
pop
and
in
add
sbb
and
inc
mov
xchg
fwait
mov
or
push
xor
stc
add
cmp
mov
push
or
or
cmp
adc
mov
xor
add
fs
test
pop
stc
pop
add
movsb
pop
cmp
fidivs
inc
lahf
mov
pop
or
repz
mov
pop
mov
pop
sbb
dec
loope
mov
xor
push
jmp
push
aam
mov
loope
cwtl
aas
mov
popa
mov
aaa
in
mov
pop
fwait
sub
mov
aaa
pop
ret
cmpsb
lods
add
and
rclb
dec
movsl
adc
fadds
ss
mov
roll
sub
add
and
push
adc
sub
pop
xor
dec
mov
hlt
add
cmp
jb
aam
pop
notl
inc
and
push
lea
outsb
popa
pop
jbe
xor
cld
push
xor
jnp
push
push
xchg
lock
out
inc
add
push
or
cmpsb
repnz
pop
push
pop
jne
jne
int
mov
push
push
dec
loope
push
pop
ret
mov
jmp
inc
test
or
add
dec
jmp
add
and
inc
pop
imul
mov
clc
xchg
mov
inc
test
jle
test
pop
pop
xor
call
jmp
or
xchg
dec
or
adc
and
dec
loopne
faddl
pop
push
je
dec
xor
mov
xchg
iret
sbb
shlb
loope
pop
jbe
and
test
std
push
mov
cwtl
xchg
test
dec
lds
lods
cmp
test
movsl
fbld
call
jb
test
mov
int
inc
cmpsb
dec
jns
add
push
das
mov
push
push
xchg
stos
lret
aas
mov
test
lods
and
fadds
xchg
or
xchg
lock
mov
faddl
pop
dec
xchg
add
jno
inc
pop
in
in
adcl
test
js
outsb
add
xchg
mov
lods
in
notl
push
mov
mov
aad
mov
adc
fcoms
lock
jnp
mov
fidivrs
imul
mov
lcall
popa
mov
shlb
xchg
test
mov
add
add
leave
out
inc
loope
push
aam
add
insl
fdivl
or
in
push
or
cmpb
aam
popf
xchg
mov
dec
or
repnz
pop
sbb
push
and
call
add
popf
inc
loopne
pop
add
ss
cmp
dec
sub
mov
nop
xor
push
test
fxam
pop
xorl
push
aam
test
xor
push
sbb
push
add
mov
inc
mov
cmp
mov
add
push
sahf
shld
sbbb
out
cmp
ds
es
pop
fs
dec
inc
mov
shl
sub
cmc
sbb
push
hlt
popf
into
jae
shll
mov
rorb
outsl
xchg
icebp
sub
test
and
push
add
inc
or
test
out
sub
adc
push
or
xchg
pop
inc
call
into
xorb
xchg
push
and
dec
adcl
in
cmpsl
and
rol
or
sbb
sbb
push
rcrb
mov
bound
adc
stos
nop
iret
sbb
add
mov
mov
pop
test
insl
push
adc
jnp
fldenv
addr16
add
add
mov
xchg
pushf
mov
mov
lret
adc
sbb
pusha
enter
jb
inc
cmp
aad
push
xchg
pop
lret
xchg
or
jno
adcb
push
xchg
mov
mov
js
cltd
shrb
setbe
add
gs
paddsw
arpl
pop
or
rolb
jne
sub
dec
popf
lods
mov
movsl
sar
add
jo
or
loop
sbb
in
jne
xlat
mov
push
sub
add
sbbb
jae
nop
rorl
pop
xchg
pop
stc
or
jae
movsb
fs
inc
xchg
add
push
incl
sbb
or
in
mov
or
sub
dec
or
addr16
add
fnsave
jge
add
ds
ret
add
arpl
sahf
pop
add
jnp
mov
lahf
mov
popa
lock
pop
fldcw
mov
add
imul
testl
fsubrs
or
ja
leave
test
inc
push
or
in
or
insl
jl
or
cli
sbb
push
call
push
or
hlt
in
lcall
cmp
push
push
js
test
pushf
sub
fsubs
subl
mov
xor
sub
movsb
adc
push
adc
ss
enter
cld
pop
add
or
push
adc
add
lret
cmp
loopne
dec
sub
popf
add
in
pop
inc
or
imul
pop
or
repz
push
cmpb
or
inc
adc
int3
int
and
cld
xor
jecxz
pusha
xchg
push
ret
xchg
cmp
lods
gs
pop
mov
sbb
sbb
outsb
pusha
cmpsl
push
lret
arpl
mov
pop
xor
xor
sti
mov
cmpsl
mov
in
lods
pop
inc
or
jb
mov
mov
fmull
add
xchg
pusha
xchg
sbbb
adc
mov
inc
inc
out
pop
outsl
imul
addw
add
add
pop
clc
dec
and
xchg
mov
loopne
dec
push
xchg
mov
add
fdivl
jl
sbb
xor
mov
dec
cmpsl
clc
stos
mov
js
rcll
addr16
shlb
inc
loop
and
mov
xor
mov
add
jmp
cmp
sub
inc
rclb
mov
jo
sbb
int
jl
fstl
aad
insl
popf
test
and
xchg
pop
mov
ljmp
stc
into
addl
shll
push
adc
add
jb
cmpb
clc
xor
dec
mov
mov
or
xchg
mov
enter
mov
and
adc
cmpb
sti
jge
test
inc
divl
inc
imul
test
dec
sahf
ljmp
call
push
or
dec
xchg
addr16
mov
test
and
out
jle
into
push
xchg
cmp
mov
dec
daa
out
dec
test
mov
fwait
pop
fsubr
jne
jo
inc
repz
xchg
or
inc
fs
push
push
daa
or
dec
mov
adcl
popa
loopne
jo
cmc
inc
push
dec
adc
mov
adc
call
sub
rcl
lret
ret
pop
test
mov
sahf
xor
or
mov
lcall
cmp
shr
mov
popf
inc
in
and
das
and
and
enter
sub
sub
test
jne
dec
and
gs
dec
sahf
hlt
lea
inc
dec
fdivp
loop
cli
in
push
mov
cmpb
movzbl
push
inc
cmp
push
push
out
sbb
sbb
scas
add
jge
cmp
and
or
ret
lods
pop
dec
pop
pop
mov
subb
sub
inc
jmp
push
push
xchg
loopne
push
push
imul
xor
xorb
xor
popf
out
or
icebp
sub
sub
and
xor
sub
test
cmp
in
ret
dec
xor
pop
sbb
sbb
cmpb
push
enter
dec
cld
aaa
pop
xor
or
add
bound
pop
inc
or
inc
pushf
and
or
push
jl
push
dec
inc
shlb
xlat
hlt
or
lds
mov
mov
hlt
dec
mov
aaa
incb
test
mov
xchg
cmp
je
or
je
pop
fucomi
dec
lock
jne
mov
sub
dec
jo
xchg
sti
cmpsb
ss
mov
lea
or
jnp
push
sbb
dec
or
pushf
cmpsb
cmp
subb
inc
test
cmp
cmp
push
insb
and
mov
inc
xchg
out
and
mov
mov
mov
push
lea
pop
js
imul
mov
jl
or
outsl
add
hlt
inc
icebp
add
js
sub
pop
inc
and
or
sbb
pusha
or
out
push
adc
jl
mov
je
or
xor
test
sti
mov
mov
aaa
lea
dec
or
aam
mov
mov
lock
add
mov
xchg
mov
cmpsb
insl
jmp
popf
adc
cmp
shll
dec
mov
mov
incl
sub
pushl
in
cld
pop
cmpb
es
and
rcl
push
movsl
aaa
adc
jo
movsl
pushf
and
and
add
jns
loop
ss
lcall
stos
pop
mov
push
les
push
negl
add
push
mov
aam
cmp
cwtl
mov
stos
add
adc
push
push
cmp
jbe
nop
insl
or
jne
roll
adc
cwtl
xchg
cs
push
inc
mov
or
adc
mov
out
adc
push
sub
mov
cld
cld
clc
or
jl
fiadds
cmp
std
mov
loop
xor
nop
mov
jne
adc
ret
das
sarb
mov
and
dec
or
incb
push
add
push
pop
mov
and
mov
mov
arpl
adc
push
imul
mov
push
mov
outsb
add
ret
lea
push
fimuls
popa
pop
push
and
pushl
pop
inc
pop
cmp
in
cs
pop
jb
mov
push
data16
pop
sbb
fs
test
push
sbb
adc
in
dec
xor
push
dec
mov
add
mov
xor
out
pop
or
inc
mov
sbb
test
mov
ret
push
nop
dec
adc
jl
push
mov
jbe
test
pushf
and
adcl
lret
xor
fsubl
insl
xor
test
imul
xchg
filds
push
sbb
nop
data16
push
sbb
jle
adc
fldenv
test
adc
push
push
pop
adc
or
sbb
xor
sub
or
xchg
pushf
adc
xor
sahf
ret
inc
out
sbb
stos
cmp
mov
push
push
or
push
bound
sub
faddp
push
sbb
stos
enter
push
or
xchg
out
add
pop
mov
and
mov
rclb
and
movsl
add
push
fcomp
xor
rcr
jns
dec
pop
cmp
popa
dec
andb
fdivl
dec
push
xor
dec
test
in
mov
mov
loop
movsl
lea
roll
dec
xchg
enter
movsl
and
mov
push
call
add
loopne
test
sbb
mov
mov
pop
shrb
into
add
xchg
adc
mov
je
call
jecxz
mov
out
stos
inc
pop
mov
mov
das
xchg
sbb
and
mov
fists
xor
mov
das
mov
sbb
mov
addb
arpl
mov
andl
xor
dec
mov
adc
and
jne
pushf
pop
push
jg
sahf
xchg
xchg
and
movsb
pop
imul
dec
sub
jbe
fisubrs
or
push
sbb
xchg
insb
rcrl
sub
scas
cwtl
and
or
ja
xchg
push
xchg
or
push
sbb
lahf
cmp
cs
adc
and
or
or
mov
sbb
fmull
dec
jg
sbb
xor
pop
mov
or
daa
mov
or
pop
daa
mov
xor
aas
jbe
sub
push
add
cmp
sub
ror
aam
and
inc
test
push
sbb
mov
mov
sub
jne
adc
pushf
add
scas
sbb
shl
cmp
sub
or
je
iret
data16
fcoms
dec
inc
decl
aad
ret
jg
mov
loopne
mov
fiaddl
push
add
out
je
in
xchg
lea
cmpsl
out
cmp
cmp
push
push
es
dec
xor
xchg
pop
sbb
push
pop
pushf
jge
test
jg
call
jb
sbb
adc
subb
mov
mov
ret
sub
mov
xor
sti
imul
pop
rorb
sub
shll
inc
inc
jmp
inc
fs
sub
and
and
cmp
and
icebp
add
sbb
mov
adc
lea
test
cmpsb
add
or
jo
jne
or
sub
fimull
stos
arpl
inc
mov
push
out
mov
popf
daa
ret
daa
push
add
sbb
cmp
test
fistl
mov
mov
xchg
adc
mov
sbb
lahf
add
mov
test
inc
in
and
inc
cmp
movsl
sbb
cmpsl
aam
pop
in
mov
repnz
sbb
in
xchg
movsb
popf
sub
and
xor
push
sbb
rorl
je
fcoms
mov
outsl
xorb
outsl
orb
or
mov
test
lods
inc
movsb
push
ret
faddl
sub
mov
pushw
xchg
xor
adc
push
cmp
dec
adc
and
rol
mov
les
enter
jmp
jnp
inc
insb
pusha
fsub
adc
stos
and
push
daa
insb
and
push
loop
ret
pop
imul
sub
cmp
sub
mov
push
push
dec
clc
or
je
or
and
je
insl
fidivs
popa
addr16
sub
repz
enter
and
dec
rolb
dec
fisttpl
add
push
cltd
push
dec
dec
les
enter
jle
xor
sub
add
js
jl
loope
flds
xor
and
dec
cmpsb
mov
shlb
movsl
pop
sbb
or
inc
push
pop
jge
insb
ds
fmuls
push
adc
adc
call
mov
or
std
dec
xchg
push
mov
cmp
je
xchg
mov
xor
inc
popf
dec
fisubrl
ljmp
pop
ss
cltd
test
dec
and
in
pop
add
das
xchg
les
add
icebp
sub
insb
test
jmp
xlat
xor
pop
fstpl
cmp
out
mov
mov
fimull
push
and
mov
mov
data16
pushf
jbe
dec
repz
sub
jle
fcom
int3
sub
inc
mov
cmp
les
push
ret
imul
mov
cmp
adc
dec
loopne
cli
inc
outsb
inc
test
mov
cld
add
rorl
das
sub
mov
jmp
and
adc
or
rorb
aas
push
punpcklbw
leave
xor
shr
xor
xchg
bound
jb
pushf
cmp
push
not
loop
dec
mov
test
aas
jo
test
movl
decl
cmp
jbe
add
add
mov
sbb
movsl
xor
test
out
and
or
inc
push
shrb
rcrl
xor
add
xorb
push
dec
inc
cs
xor
hlt
dec
inc
mov
jb
pop
sbb
adc
mov
sub
add
mov
dec
ljmp
pop
call
cmp
and
or
cli
push
or
add
mov
mov
xchg
mov
jne
sbb
add
jb
cwtl
or
rol
and
sbb
add
mov
xor
iret
xor
ret
xor
push
shll
xchg
cmp
xlat
inc
cmp
fs
popa
insl
enter
xchg
or
and
inc
push
and
mov
mov
push
fs
jo
cmp
pushf
push
sbb
inc
clc
cmpsl
out
int
mov
dec
das
adc
xchg
es
add
pop
pop
inc
les
dec
out
adc
pop
imul
and
dec
das
dec
loope
lea
sbb
addr16
dec
dec
add
mov
adc
xor
xor
cltd
add
pop
sub
rcll
shlb
adcb
aam
pop
adc
add
loopne
in
ja
mov
lods
ficomps
push
xor
pop
pop
add
sbb
fistpl
xchg
add
mov
push
push
push
add
call
or
push
or
and
push
sub
pushf
and
inc
pusha
cmp
inc
jbe
sub
jns
sbb
loope
adc
add
dec
sub
xchg
inc
or
les
arpl
mov
push
add
push
scas
or
add
andb
mov
push
adc
or
aam
or
inc
jbe
adc
or
rolb
or
rorb
sub
and
aaa
add
or
lea
or
loopne
pop
sub
push
xchg
or
adcl
outsb
lcall
inc
xchg
cmp
mov
and
loopne
add
pop
and
pop
sub
dec
mov
push
push
mov
ret
dec
sub
xor
or
mov
xchg
je
lea
pop
ret
adc
pop
xchg
addl
or
icebp
cmp
pop
dec
adcb
mov
bound
clc
xchg
or
mov
mov
fisttps
or
insl
pop
cmp
adc
mov
aam
mov
decl
push
cmp
jbe
inc
sub
cld
pusha
mov
cmp
push
xchg
xor
fists
dec
les
daa
sbb
mov
cmp
push
clc
or
mov
push
js
mov
cmpsl
dec
and
dec
push
xchg
cmp
and
and
mov
insb
inc
jbe
mov
dec
xchg
and
movsl
mov
or
andb
scas
insb
sub
mov
movl
xor
mov
insl
or
push
sub
xchg
popa
daa
pusha
rcll
xchg
push
cwtl
sub
jo
or
adc
adc
mov
push
ficoms
pop
or
stos
in
daa
adc
lods
dec
test
subb
rol
mov
ljmp
imul
mov
mov
mov
push
ljmp
cltd
les
enter
or
ss
fdivrs
lahf
mov
xchg
out
ss
or
or
xchg
hlt
sub
mov
cmp
imul
cld
daa
lock
push
push
loop
mov
push
or
xor
sub
nop
sbb
popa
sbb
fstps
fimull
out
je
lods
sbb
add
scas
mov
and
dec
mov
rolb
push
mov
sahf
xor
loopne
xchg
or
add
push
insl
sub
mov
movsb
into
std
jmp
imul
cmpsb
dec
pop
int3
ss
mov
mov
stc
call
add
icebp
or
dec
add
push
dec
mov
push
scas
adcl
aaa
outsl
and
pop
mov
cmp
dec
mov
xchg
cmc
inc
xchg
fwait
and
sub
mov
ret
icebp
dec
push
rol
bound
or
or
push
pop
inc
mov
push
jmp
jmp
shll
dec
mov
pop
test
sub
in
test
out
je
repz
xor
and
push
xor
inc
xchg
mov
or
and
or
mov
pop
fs
mov
adc
rsm
fldenv
dec
arpl
dec
cmp
inc
popa
and
es
dec
inc
lcall
push
xchg
adc
adc
std
rcrl
jp
push
mov
lahf
or
inc
dec
add
sbb
js
mov
stos
sbb
add
call
or
and
es
dec
cmpsl
ret
sub
jmp
in
int3
cmp
sub
shlb
nop
arpl
push
mov
sub
nop
push
in
push
popf
mov
icebp
cmc
test
mov
jmp
icebp
mov
xchg
or
nop
mov
fsubrl
sbb
and
fidivl
fstpl
mov
icebp
nop
push
in
shlb
call
cmc
aaa
cs
call
sbb
or
adc
shr
or
lds
or
and
or
movsb
pop
dec
mov
dec
add
add
mov
daa
adc
outsl
push
cs
js
mov
insl
dec
fs
mov
or
push
insl
enter
cmp
mov
add
sbb
adcb
scas
mov
sbbb
add
sbbb
out
mov
dec
add
fisubrs
xchg
movsb
xchg
dec
js
fwait
stc
or
jne
lock
mov
xor
hlt
dec
sub
push
mov
int3
sub
inc
nop
cli
es
rclb
add
push
mov
mov
xor
fldl
sbb
push
push
inc
sub
mov
push
push
xchg
mov
les
xor
xchg
xchg
loopne
imul
insb
or
and
push
push
ss
addl
fucom
push
sub
mov
std
in
mov
mov
movsb
add
add
fisubl
std
push
pop
xchg
into
pop
sub
dec
jp
jg
jo
jl
fdivl
xorb
idiv
dec
popa
xchg
add
jl
adc
leave
mov
jecxz
test
sbb
add
and
je
pop
jo
dec
in
or
icebp
lret
stos
clc
push
or
xchg
push
add
sub
sub
pop
stos
mov
nop
push
inc
inc
jp
cmpsb
adc
test
pop
cmp
or
inc
or
add
cmp
push
adc
push
pushf
mov
sbb
in
or
and
int3
lock
popa
fdivr
mov
inc
mov
iret
rolb
or
push
xor
or
lahf
fistps
xchg
jb
sbb
add
add
push
inc
cmp
pop
mov
dec
rcr
movsl
out
cs
jmp
sbb
call
inc
push
push
jns
cld
sub
test
aam
mov
push
push
pop
dec
and
xchg
sbb
sub
test
add
pop
inc
or
dec
pop
or
cli
push
add
lret
das
mov
sub
push
movb
xor
and
inc
push
mov
scas
dec
sub
rol
cmpl
jge
arpl
and
jno
push
push
sbb
push
jge
jno
cmp
add
dec
mov
push
hlt
and
mov
xor
notb
dec
pop
push
adc
mov
or
adc
test
jmp
adc
out
mov
jno
sbb
icebp
stos
mov
jne
in
sbb
dec
jb
aad
pop
sub
jecxz
lret
loope
add
ficomps
fucomp
in
pop
xchg
pop
push
outsl
push
jmp
outsb
dec
adc
imul
aas
adcl
cmp
inc
sub
ja
pusha
adc
orb
in
push
je
in
ja
dec
mov
cwtl
xchg
test
push
inc
xor
inc
jnp
and
or
jl
nop
add
push
in
orl
test
or
mov
mov
inc
mov
sti
je
icebp
mov
inc
push
adc
sbb
add
and
mov
daa
cltd
jmp
mov
fwait
in
jmp
inc
adc
adc
pusha
and
push
imul
mov
loope
mov
sub
out
mov
pop
push
inc
adc
xchg
jbe
push
xor
loopne
xlat
in
add
je
push
cmp
push
stc
pusha
or
arpl
inc
or
andl
mov
lcall
xorb
adcl
or
push
push
cmp
psubsb
push
xchg
and
xlat
xchg
xchg
cmpsb
add
out
cmp
cmpsl
ret
addb
adc
jbe
gs
xor
popa
int3
call
or
dec
inc
sbb
fwait
js
cmpsb
inc
testb
icebp
enter
or
adc
rol
or
push
pop
cmp
mov
pop
inc
xchg
push
cmp
hlt
jge
adc
test
adc
sbb
dec
rorl
adc
adc
iret
mov
mov
mov
test
push
lds
fistpl
lods
pop
or
push
rolb
clc
cmp
les
popa
dec
sbb
scas
sub
enter
or
and
sbb
sbbb
jle
add
or
mov
into
movsl
outsl
and
in
pop
mov
pop
mov
out
lds
lock
fldcw
push
rolb
dec
cmc
ret
pop
stos
scas
mov
out
int
jne
imul
add
shlb
add
enter
test
and
imulb
rcl
cmpsb
jne
adc
fdiv
cmp
and
sahf
rorb
or
cmp
insl
adc
sbb
xor
adcl
sub
mov
mov
into
xor
in
jo
pop
lea
pusha
daa
lods
and
push
in
xor
out
pusha
mov
rol
mov
ror
xor
shr
xor
decl
jnp
xor
shr
xor
add
add
add
mov
shlb
mov
iret
or
jae
or
and
fisttpl
add
add
aam
sub
stos
subb
sbb
scas
push
repz
ror
cli
fisubrs
or
jge
xor
and
and
xchg
push
aam
sub
and
xor
and
push
lea
sub
fmull
pop
push
jl
push
loopne
xlat
ret
rcl
add
add
sbb
add
add
call
fsubr
rcl
or
orl
stc
data16
dec
xor
ljmp
jae
movsl
shr
add
push
xor
fsub
shll
xchg
in
xor
in
test
call
push
sbb
in
push
cmp
bound
push
adc
pop
mov
add
mov
xor
fadd
cs
call
test
shl
orl
int
add
cmp
pop
cmp
push
shlb
aam
sub
cmp
cmp
jo
int
es
add
in
neg
fildl
xor
and
and
out
iret
or
lahf
or
add
and
push
int3
lcall
adc
adc
add
es
pop
inc
inc
jo
ret
push
jo
sub
sbb
fidivrs
cmp
inc
xor
iret
push
loop
mov
pop
cld
shll
cmp
fadds
pop
push
push
call
jo
idiv
lretw
push
clc
jp
push
and
add
add
cmp
lcall
cld
sbb
rolb
inc
or
insb
icebp
mov
xchg
jo
lods
push
clc
jo
cli
stos
xorb
inc
nop
pushf
aam
aaa
cmp
xor
rorb
inc
in
jb
xor
in
inc
sbb
out
rolb
inc
roll
aaa
cli
xor
xor
fcom
aaa
rorb
add
mov
call
add
jne
add
push
xor
and
add
push
dec
xor
in
movsb
push
push
push
inc
lcall
dec
add
cmp
enter
and
add
pop
cmp
push
leave
and
pop
int
push
test
sub
push
xadd
or
movsb
sbb
pop
movsb
mov
and
sub
and
stc
enter
mov
or
stc
fcoms
adc
es
sbbl
imul
xor
push
stc
stc
stc
mov
icebp
inc
pusha
aam
pop
dec
mov
ret
jb
imul
loopne
mov
cmpsb
sbb
jo
adc
in
add
lock
pop
push
sub
add
movsb
cmpsb
push
dec
outsb
lock
shrl
mov
movb
inc
or
pop
aam
and
lea
cmp
pop
cld
sub
insl
rolb
data16
loopne
mov
enter
pop
sub
rcr
or
loop
rol
or
sbbb
jne
cltd
fwait
jbe
mov
push
inc
jae
mov
sub
or
jno
icebp
xor
mov
lea
jmp
fidivrl
mov
push
sub
pop
add
ret
dec
or
mov
dec
jne
pop
add
les
loope
lock
out
iret
inc
xchg
jl
sub
mov
cmp
jbe
and
mov
or
fs
movsb
push
test
loopne
fwait
add
sbb
jae
push
pop
fsubrs
and
sub
sub
stos
or
jbe
stos
fisttps
scas
or
mov
push
mov
mov
ror
mov
notl
mov
mov
cmp
mov
pop
xchg
push
push
sbb
imul
aam
or
and
sbb
jbe
imul
inc
add
pusha
adc
add
in
vphaddubd
insl
clc
iret
in
rorb
add
dec
push
xchg
xchg
movsl
add
inc
pusha
inc
in
xchg
xor
pop
push
or
sbb
push
xor
cltd
jge
sub
fs
xchg
dec
push
and
mov
dec
adc
stos
adc
add
lea
icebp
mov
or
jle
lret
aas
jae
mov
andl
pushf
and
std
add
loope
mov
imul
shlb
and
dec
xor
mov
inc
adc
cwtl
loope
add
cmp
or
jo
sbb
mov
push
add
test
push
mov
imul
mov
or
ljmp
lcall
xor
add
add
inc
fimull
mov
movsb
adc
pop
jge
ret
dec
jb
fiadds
test
in
push
sub
jo
jp
jo
dec
dec
bound
sbb
stos
jp
push
test
add
adc
clc
adc
aam
inc
gs
adc
mov
sbb
scas
enter
cmp
outsb
fimull
inc
cmp
sub
cmp
add
mov
sbb
mov
adc
and
add
add
push
and
repnz
xchg
dec
jle
rorb
es
int
push
call
cs
addl
inc
loope
dec
inc
mov
push
push
mov
or
jo
in
flds
xor
jl
pop
scas
and
repnz
outsb
mov
jle
sub
outsl
or
jnp
cs
test
jns
lret
popa
movsl
sub
adc
and
push
je
mov
lahf
popl
ret
xor
adc
cmp
jl
push
pop
pop
pop
bound
jg
mov
test
enter
rcrb
mov
push
or
pop
ljmp
sbb
sub
loopne
sbb
je
mov
test
add
dec
xchg
add
popf
ret
lret
call
mov
mov
push
es
add
lcall
testb
jbe
and
pop
outsb
dec
mov
and
imul
or
incl
into
inc
pop
inc
mov
adc
cmp
add
sbb
jne
pop
cmp
sbb
pushl
mov
ret
and
or
mov
repz
sub
lret
mov
ret
inc
pop
push
mov
inc
or
add
push
cmp
add
out
lret
push
pop
wrmsr
push
jo
out
push
fsts
dec
mov
xchg
add
sar
ds
and
cltd
cmp
in
jbe
adc
sub
push
dec
ret
fadds
shll
add
cmp
xor
xor
ljmp
dec
pop
mov
and
ret
sbb
in
in
and
xor
push
mov
sbb
dec
jae
fldcw
jge
xchg
jbe
xorl
dec
popa
mov
hlt
out
dec
jl
pop
popa
cmp
out
cs
push
lods
std
add
xchg
filds
push
push
push
loopne
mov
push
mov
sbb
pop
mov
fstpt
sbb
cmp
mov
pop
jne
dec
enter
mov
out
push
or
pand
push
pcmpgtd
test
sarl
mov
stos
add
pop
cmp
mov
punpckhwd
icebp
inc
addl
pop
adc
lea
mov
cli
out
test
jbe
push
push
and
mov
mov
add
es
jae
push
ret
mov
jge
ljmp
push
sbb
mov
sub
mov
adc
insl
in
mov
imul
fidivl
in
icebp
and
mov
adc
in
inc
sbb
imul
pop
movsb
lock
cmpl
testb
shlb
stos
jno
or
mov
rorl
xor
sbb
or
shl
push
and
mov
or
js
xchg
cltd
mov
les
mov
das
mov
jne
shlb
stc
mov
stos
and
addr16
dec
jle
adc
or
and
adc
adc
mov
inc
sar
jb
ss
stos
pop
notb
mov
hlt
xor
sub
add
pop
leave
movsb
push
mov
add
add
xchg
fwait
rclb
ljmp
push
ds
stos
xchg
stos
or
mov
mov
dec
js
xchg
testl
dec
fldl
leave
dec
add
stos
notl
ja
incl
cmp
or
xor
pusha
cs
mov
or
repnz
xchg
mov
out
push
outsb
aaa
mov
sub
out
int
xchg
inc
insl
add
pop
xchg
addl
mov
adc
popa
adc
cmp
xchg
mov
mov
mov
push
push
enter
in
fsubrl
fsubrl
pop
cmp
or
adc
aas
in
jno
sti
dec
push
push
fldt
imul
das
mov
test
cli
push
mov
and
dec
hlt
sbb
dec
out
mov
add
lret
sub
dec
outsl
and
inc
in
add
sbb
sar
pop
mov
and
stc
ja
daa
sbb
push
ja
ss
cmp
jb
mov
pop
jl
sbb
clc
mov
jns
inc
and
call
push
dec
test
inc
push
out
or
pop
cmp
add
mov
xor
insl
add
clc
xchg
cmpsb
jo
add
xchg
sahf
enter
push
loop
fwait
mov
cmp
popa
aas
in
ret
xlat
fcoms
or
add
dec
mov
push
mov
scas
add
cmpsb
out
jae
testl
or
and
lods
outsl
cmp
rcr
leave
mov
push
or
add
add
and
add
ss
cld
and
enter
stc
adc
mov
mov
inc
cmp
mov
fstpl
sbb
cmp
mov
outsl
jmp
mov
sub
mov
bound
mov
mov
mov
mov
adc
mov
pop
cwtl
xor
mov
jne
mov
sbb
add
ljmp
rorl
enter
xchg
or
iret
adc
shl
pop
mov
push
aaa
imul
add
imul
sbb
mov
cmp
je
mov
cmc
push
or
pop
push
fstpt
add
jmp
sub
gs
add
add
mov
jle
shlb
push
xor
fsubl
das
sbbl
out
mov
push
push
data16
pop
or
push
out
or
popa
cmp
sarb
loopne
cmpb
fdivrs
mov
fwait
or
popaw
push
push
push
jl
xchg
inc
add
push
jge
and
dec
out
mov
xor
outsb
xorb
lds
pop
lret
adc
push
les
adcl
loopne
addl
sub
popa
jnp
cmp
dec
sub
sub
sub
mov
comiss
aam
and
in
inc
cmp
jmp
inc
xor
mov
outsb
xchg
int3
insb
hlt
dec
add
or
or
fcmovu
add
shl
and
add
mov
enter
add
add
loopne
add
loope
shl
xor
mov
mov
or
movsw
pop
adc
fbld
mov
cli
mov
int3
mov
jge
mov
pop
into
sub
push
fidivrs
pop
add
lods
and
popa
push
and
mov
sub
sub
popf
shll
adc
or
push
inc
loopne
fs
fwait
push
or
inc
add
cmpl
mov
mov
inc
pop
or
inc
dec
add
aas
and
das
jno
cs
push
mov
sbb
and
mov
mov
mov
dec
daa
test
mov
inc
mov
sub
add
xchg
pop
mov
adc
shl
icebp
or
adc
clc
dec
push
xor
ror
mov
stos
lds
add
mov
and
sub
imul
cmp
sbb
xchg
xchg
ljmp
inc
adc
adc
and
xchg
mov
movsb
jge
or
add
bound
push
insl
push
out
xchg
rclb
sbb
push
sub
inc
sbb
arpl
movsb
or
xchg
pop
and
or
jge
sbb
cmp
mov
ficoms
addb
sbb
or
popa
daa
dec
sbb
mov
mov
imul
cmpsl
sub
xor
bound
sbb
mov
in
push
loop
imul
pusha
or
imulb
loop
dec
sub
xor
fnstsw
ss
loopne
fldt
push
mov
fldt
pop
push
push
mov
or
jmp
push
js
cmp
jbe
mov
jmp
das
sahf
ret
xor
int
jp
ss
lods
rorl
cmp
outsl
adc
stos
add
add
adc
out
or
inc
dec
pop
pop
dec
or
data16
jo
add
cmp
dec
lock
push
ret
adc
inc
test
jecxz
out
cs
pusha
cmp
mov
outsl
sub
mov
jmp
lods
or
sbb
lods
xorb
xorl
dec
lcall
dec
lds
cmp
pusha
or
mov
dec
sbb
icebp
inc
xchg
xor
fimull
mov
adc
hlt
add
pushw
sbb
mov
popa
and
sub
les
or
pop
ret
in
pop
insb
add
xor
pop
jmp
rorb
xor
sub
int3
mov
or
pop
jae
popf
insl
roll
sbb
stc
outsl
or
stos
sbb
sub
xor
mov
shlb
push
cmp
or
aam
xchg
or
xchg
inc
sahf
or
or
pop
das
fmuls
outsb
sub
sub
pop
jmp
jmp
xor
fwait
and
dec
aaa
mov
iretw
mov
fldl
sahf
inc
or
dec
outsl
xor
mov
add
test
aam
cmpsb
sub
adc
push
gs
mov
inc
jo
mov
inc
mov
xchg
dec
push
push
les
repnz
dec
aam
mov
sbb
jae
cmpsl
and
xchg
pop
imul
pop
push
mov
mov
jl
bound
pop
stos
inc
xor
int3
bound
or
rol
inc
mov
sub
xchg
lret
xchg
icebp
mov
dec
in
sub
jmp
mov
pop
icebp
orl
or
adc
add
pop
push
jmp
add
mov
mov
push
rcll
push
adc
enter
pop
cmp
lods
xchg
xor
xchg
pop
push
adc
fsts
mov
add
and
adc
in
add
rolb
sahf
pop
rorb
adc
pop
call
jne
sbb
stos
add
cmpsl
mov
mov
push
xchg
inc
add
add
and
nop
ret
sbb
and
out
cmpl
xor
out
cmp
jle
cmp
mov
and
mov
jne
and
inc
cmp
in
add
xchg
fiaddl
nop
cs
sub
pop
jne
push
add
pop
sub
mov
das
xlat
mov
pop
inc
pop
push
inc
mov
add
pop
jmp
xchg
pop
imul
mov
push
arpl
mov
dec
insb
mov
or
sub
lock
inc
mov
jo
add
xor
hlt
ficomps
cmp
ds
cld
dec
or
sub
inc
jo
jne
subl
dec
xlat
add
nop
or
push
mov
test
cwtl
cs
pushf
xchg
loop
lock
pop
mov
adc
add
mov
add
add
stos
lret
jne
and
jo
jecxz
add
movl
test
call
or
std
sub
cmc
das
mov
sbb
add
sub
aaa
sbb
adc
lock
push
add
cmp
testl
add
push
cmp
jne
push
out
out
shll
inc
mov
jne
pop
int3
push
add
sub
or
shll
cltd
push
and
lret
jmp
not
adc
nopl
jl
inc
dec
sbb
sti
push
pop
mov
push
add
sub
jbe
inc
loop
shlb
and
mov
push
dec
or
xlat
out
jo
jae
int3
dec
ret
adcl
in
push
xchg
jne
loopne
das
jg
add
sub
or
dec
mov
cmp
insl
dec
or
add
and
or
push
or
test
xchg
xchg
sub
push
push
mov
push
test
sbb
andb
mov
fcoms
sub
push
jno
pop
adcb
cld
push
push
add
cmp
jbe
push
push
sbb
mov
push
and
pop
cmpb
push
adc
mov
and
scas
rcrl
std
add
mov
xor
mov
rorl
sbb
pop
or
es
add
repnz
test
roll
add
cmp
jle
aaa
pop
leave
jmp
lea
push
sbb
mov
sbb
or
or
inc
unpckhps
pop
sbb
lret
into
jne
data16
pop
pop
push
sbbb
or
cmpsl
xchg
jmp
cmpl
xor
lret
jmp
push
and
mov
xor
mov
add
addr16
daa
repz
cmp
ror
out
std
cwtl
nop
inc
xor
fnstenv
stos
add
push
ss
dec
sub
cmp
js
testl
xchg
packuswb
pop
rolb
jp
out
fdivs
cmp
jne
push
xchg
and
mov
inc
pop
adc
jbe
xchg
enter
push
subl
adc
aas
xlat
jne
pop
aaa
les
and
sub
loop
iret
shr
push
test
pop
push
sbb
add
rolb
add
sbb
test
lock
adc
ja
sbb
xor
ret
xorl
dec
aam
push
push
hlt
sub
push
add
pop
sbb
lds
add
mov
aaa
add
pop
cltd
push
and
cmp
cmpb
push
pop
or
push
inc
xchg
or
adc
fwait
pop
fs
adc
enter
jl
adcl
rclb
pop
cmp
int
or
lds
lcall
loopne
jno
out
add
outsb
dec
rorl
imul
mov
rcll
mov
add
sti
in
cltd
xchg
jne
add
and
sbb
pop
mov
mov
add
and
ret
test
sbb
or
test
outsl
xlat
add
mov
lcallw
add
int
dec
inc
sbb
lret
enter
lret
std
mov
popa
jb
ss
pop
insl
and
adc
filds
gs
ja
sbb
andb
or
cmp
mov
mov
sub
mov
add
jbe
int
test
loop
ret
mov
mov
cmc
add
pusha
je
push
jecxz
mov
les
pusha
dec
adc
js
ja
or
in
or
xchg
mov
jnp
cmpb
jae
loopne
ljmp
inc
ret
sub
or
fdivs
test
adc
dec
add
rcr
push
xor
push
or
push
aad
test
arpl
pop
xchg
mov
daa
es
xor
add
adc
push
cmp
arpl
mov
repz
outsb
pop
add
adcl
fbstp
movsl
jmp
push
pop
push
xchg
scas
aam
xor
popa
mov
lods
sub
push
cmpsb
jo
xchg
addb
js
mov
cmp
jmp
inc
imul
cmc
or
cmp
pop
cmp
push
jmp
lcall
test
incb
dec
pop
pop
dec
pop
test
adc
sarb
fs
or
jmp
pop
xchg
icebp
add
push
jnp
movb
and
add
stos
outsb
clc
stc
push
ret
cmpsl
nop
shlb
mov
cmp
lea
cmpsb
xor
adc
outsl
je
xor
stos
pop
stos
dec
loopne
addb
fisubrs
fisttps
out
add
ja
adc
dec
push
ds
jae
or
xchg
adc
add
and
mov
push
pop
fnstcw
nop
cmpsl
mov
sub
xor
sti
inc
inc
add
cwtl
or
pop
mov
or
mov
mov
repz
dec
xchg
xchg
nop
push
mov
dec
or
or
popa
sbb
ret
inc
mov
sbb
or
lock
add
xlat
adc
mov
lret
ljmp
dec
addr16
and
adcl
les
push
out
jb
lds
jo
push
jmp
in
movsl
inc
cmpb
mov
fiaddl
lods
scas
pop
insl
push
and
pop
lods
or
push
cmp
pop
push
jnp
sbb
pop
rolb
sub
and
push
imul
ds
loopne
je
sub
stos
cli
mov
dec
movsb
jbe
addl
ror
jb
inc
inc
inc
cwtl
sub
cmp
in
pop
clc
pop
mov
lahf
jge
shll
jp
push
and
or
fmull
sahf
or
xchg
jge
pop
push
call
mov
in
mov
adc
out
push
push
and
pop
jp
icebp
add
and
sub
push
outsl
jne
fisubrs
ret
in
loopne
pop
inc
cltd
in
push
mov
int
jmp
push
pop
push
push
cltd
lds
push
adc
popa
insb
sbb
enter
mov
mov
sbb
cmp
pop
je
jmp
or
push
dec
inc
cmp
sub
out
add
or
add
push
inc
sbb
cmp
cmp
ret
add
cmp
xchg
mov
cltd
push
and
dec
nop
jecxz
loop
xor
icebp
mov
imul
inc
cmp
mov
dec
adc
xchg
push
pop
sub
aaa
and
mov
add
push
movl
pop
and
pop
mov
sub
les
cmpb
adc
sbb
ds
rolb
lahf
mov
or
sub
and
les
imul
mov
jmp
inc
dec
push
loopne
inc
inc
push
lcall
push
xor
inc
stos
xchg
cld
ss
jb
jne
adc
push
pop
in
lahf
js
lahf
pushf
push
test
and
dec
push
push
js
push
adc
data16
jmp
cmpsl
and
inc
add
adc
push
jo
sub
test
sub
mov
addr16
jecxz
push
and
mov
cmp
push
push
xor
fimull
mov
sub
bound
loop
shll
mov
add
xor
push
cmp
push
mov
jo
add
push
jae
ret
xor
dec
sbb
jno
mov
inc
shll
rorl
cmp
push
movl
and
sub
or
int
rorl
inc
adc
or
testl
rcrb
js
aaa
dec
test
repz
add
shrb
pop
add
mov
mov
sahf
ret
jmp
add
jmp
loop
or
or
scas
xor
mov
add
or
fnstcw
sti
out
and
mov
and
clc
jg
fs
test
clc
testl
movapd
push
clc
out
mov
jae
xor
jle
xor
cli
shlb
loope,pt
lret
je
mov
mov
jl
and
lret
or
jg
clc
fistpl
sbb
ret
adc
jnp
mov
mov
sbb
aam
ret
lock
scas
mov
adc
add
mov
fadd
roll
add
imul
mov
pusha
addsd
mov
fldl
sbb
sbb
inc
pop
fildl
xor
sbb
jmp
dec
imul
pushf
sbb
pop
adcb
nop
or
jae
js
lds
mov
mov
andl
push
and
adc
pop
and
sbbb
pop
xor
push
push
ret
jge
outsl
push
loop
mov
jge
push
pop
and
xor
sahf
fldl
test
inc
dec
mov
xor
ret
push
pop
add
fmul
icebp
fbld
test
xor
fnstenv
or
rorl
pop
adcl
loopne,pt
aas
sbb
fldl
rorl
je
repz
mov
ljmp
test
jmp
mov
inc
push
int
add
roll
loopne
or
clc
jb
lock
cmp
and
cwtl
insl
pop
mov
dec
pop
pop
scas
push
mov
iret
pop
test
cmp
mov
sub
movsl
jmp
sub
cmp
push
or
add
xor
or
lea
push
mov
adc
lahf
testl
rcll
mov
sub
inc
add
add
cmpsb
mov
mov
test
add
movl
and
add
jmp
fadds
rorb
enter
sahf
sarb
in
inc
in
iret
repz
call
cmp
repz
hlt
clc
clc
mov
adc
clc
out
push
insb
fldcw
jmp
loope
popf
sub
pop
mov
push
inc
nop
inc
pop
sti
and
and
adc
je
into
jl
cld
or
in
cmp
nop
xor
adc
inc
xchg
daa
stc
jnp
gs
enter
ror
lock
jl
mov
mov
mov
add
aaa
adc
mov
dec
addr16
add
mov
add
push
mov
inc
or
push
push
pop
fs
out
icebp
jns
xchg
aaa
sbb
sahf
out
sahf
sbb
adc
adc
jns
out
or
or
add
xor
add
mov
xchg
mov
mov
add
outsl
dec
add
jmp
sub
ja
sbbb
sbb
inc
jp
jbe
mov
les
mov
or
cmp
testl
sub
mov
sbb
cmp
dec
pusha
and
stos
push
xor
lods
push
mov
push
push
inc
inc
sub
mov
jmp
or
subb
je
mov
mov
cmp
jne
mov
pop
icebp
and
dec
xlat
mov
add
mov
sub
loope
dec
sbb
and
cmp
test
cmp
je
cmpsl
push
outsb
mov
xor
pop
mov
pusha
insb
rolb
loopne
mov
or
popf
shll
hlt
addb
loopne
lock
mov
fucomi
add
push
sub
in
iret
jne
movsb
test
push
test
aam
or
cmpsb
push
or
jmp
push
pop
add
push
xchg
inc
pop
mov
aas
mov
filds
bound
push
adc
mov
push
jne
inc
cmp
dec
xor
sub
mov
add
push
nop
adc
inc
mov
xor
into
push
push
adc
xchg
or
and
pusha
jmp
dec
push
adc
and
adc
rorl
inc
cmp
cmp
cmpsl
sub
dec
loopne
xchg
ds
iret
in
arpl
dec
adc
xchg
adc
cmp
lret
and
es
or
loopne
xor
adc
add
mov
mov
pop
cs
daa
mov
adc
cmp
cmp
addr16
add
cmp
or
add
add
enter
loopne
imul
cmp
test
jnp
adc
loope
shlb
dec
leave
sbb
or
or
inc
pop
cmp
mov
mov
jg
jae
push
movsb
push
rol
inc
inc
cmp
and
dec
aam
lret
jne
sbb
das
loopne
idivl
mov
mov
es
xchg
cwtl
andl
xor
je
outsb
mov
jmp
push
and
dec
scas
cmp
je
inc
xchg
push
popf
adc
add
adc
je
add
and
mov
orl
adc
into
push
inc
jecxz
cmp
sub
lahf
adcb
jae
hlt
lret
or
inc
xor
leave
sub
or
sub
bound
loopne
xor
mov
add
push
xor
test
ja
and
mov
add
cmp
inc
aam
dec
cmp
jmp
xchg
incb
adc
push
pop
pusha
into
and
movb
lea
mov
or
neg
mov
cs
mov
or
add
jmp
or
mov
inc
ds
int
daa
jbe
mov
fisubrl
adc
jb
into
jmp
mov
std
pop
aaa
mov
add
pop
inc
cmp
jb
mov
or
adc
and
add
push
dec
mov
test
push
enter
push
fcomps
popa
cmp
jmp
cmp
pusha
cld
lcall
dec
fildll
lea
sti
add
jne
jnp
and
outsb
mov
mov
test
je
cmp
jne
mov
aaa
dec
jae
push
cmp
jne
es
jne
or
adc
or
cs
leave
pop
out
ret
adc
out
jns
push
dec
jmp
adc
jmp
std
popf
cmp
cld
cld
ret
insb
adc
adc
pop
pop
push
jb
push
push
movsb
sub
or
shr
stc
hlt
or
add
xor
jns
loope
sarb
pop
popf
shll
in
adc
fadds
mov
testb
adcb
punpckldq
pop
cmp
jo
adc
out
loop
inc
mov
fidivl
add
sub
sbb
or
and
inc
jo
pusha
jns
add
and
or
cwtl
mov
add
arpl
je
lea
mov
cltd
cmp
enter
add
or
lock
add
add
mov
push
adc
cmc
fistps
arpl
cmp
jg
add
mov
mov
fadds
jno
jno
rorb
add
fisubs
adc
lret
add
pop
dec
jmp
stos
int3
adc
xchg
and
inc
pop
jle
push
adc
div
jb
adc
add
jl
adc
jmp
aam
les
or
or
push
push
lods
pop
sub
pop
adc
push
mov
mov
jo
xor
ret
pushf
cmp
mov
gs
adc
push
pushf
sub
push
int
in
pusha
loope
mov
mov
arpl
adc
aam
push
sub
stos
icebp
clc
cmc
loope
loopne
sub
add
mov
xchg
inc
sub
popf
mov
leave
xor
adc
fst
adc
or
jl
or
mov
push
mov
adc
jle
cmpl
pop
pop
divb
fstl
fstl
xor
mov
jmp
cmp
jne
orl
jmp
adc
jne
sub
xor
dec
xor
pop
or
fiaddl
into
fistl
and
cmp
mov
xor
dec
or
mov
cmp
and
pop
in
adc
insb
adc
pop
jne
dec
add
ret
jne
inc
lds
fwait
orb
adc
lret
or
test
inc
ret
mov
jmp
adc
sti
fidivs
lret
sub
cmp
ja,pn
xor
cmp
aad
leave
cmp
jae
push
scas
fnstenv
sbb
hlt
pop
or
dec
aam
test
add
sbb
lods
imul
fadds
sbb
adc
flds
mov
nop
test
jne
test
jne
push
push
test
xorl
fimull
jbe
inc
mulb
add
je
mov
and
add
add
into
out
pusha
popa
mov
das
in
les
mov
sbb
mov
pop
cmp
push
aaa
mov
cmp
and
add
das
sub
push
jbe
sub
or
push
pushf
inc
subb
cmpb
gs
jge
stos
mov
shr
shr
mov
or
adc
jmp
jno
jbe
adc
inc
add
aad
cmp
fcoms
loop
jne
cmp
movsb
testb
jmp
rcrb
mov
push
adc
adc
sbb
shlb
mov
std
xor
inc
data16
sar
dec
and
loope
popa
xor
sub
cmp
push
and
in
xchg
clc
add
xor
push
mov
mov
rolb
call
inc
sbbb
lea
pusha
sbb
fidivrl
xchg
imul
push
aas
push
es
jns
sub
mov
adc
and
inc
sbb
in
xchg
addl
push
cmp
xchg
stc
fldcw
arpl
stos
and
or
int3
decb
push
dec
loope
mov
and
or
inc
sub
add
add
rolb
pusha
inc
dec
ret
pop
cmp
movsl
xor
push
mov
sbb
subl
lds
inc
fwait
or
add
test
pushf
call
or
pop
xchg
push
lret
sti
sbb
sub
adc
repz
add
push
je
add
mov
mov
loopne
je
inc
or
sub
in
push
adc
and
ss
add
lret
enter
ret
and
js
fidivrl
dec
add
and
dec
or
fwait
lahf
shlb
or
mov
lret
xlat
xchg
out
popa
jne
push
out
cmp
fsubl
enter
or
push
xor
pop
add
and
pop
jmp
pop
inc
ret
daa
pop
jno
pop
ret
sbb
xchg
push
jl
cmp
rcrb
or
add
in
fisttps
dec
pcmpgtw
loopne
jae
xor
jg
adc
add
jns
xchg
push
das
xchg
sbbl
and
icebp
push
stos
push
popa
add
mov
jmp
jmp
daa
divb
call
jo
aam
jge
or
in
adc
adc
mov
loop
mov
std
movb
sub
fisttpll
leave
sub
std
add
xchg
xor
push
push
sbb
nop
mov
shlb
xchg
fistpl
stos
and
lret
je
cmpsl
push
xor
inc
stc
xlat
rorl
xor
pop
adc
mov
loopne
xor
jecxz
add
test
sub
xchg
data16
ficomps
cmpl
mov
add
push
rcrb
shrb
push
adc
mov
aad
mov
popf
aaa
jle
decl
int3
push
and
jg
jl
shlb
push
jbe
jne
imul
lock
add
maxps
add
mov
rorl
in
cmpsb
popa
pop
es
repnz
sub
mov
fcompl
repz
jnp
and
shl
adc
or
jge
mov
aaa
lock
push
outsb
popf
xor
mov
inc
rorl
aas
sbb
cmp
pop
je
push
dec
mov
shlb
push
inc
sbbb
mov
ljmp
sbb
aaa
dec
pop
fcmovne
push
push
es
mov
mov
or
cwtl
popf
addr16
nop
movsb
jge
pop
fmuls
push
inc
xchg
xchg
loopne
out
add
mov
inc
sti
jne
les
enter
pushl
push
mov
ljmp
test
imul
loopne
push
fnsave
ret
xor
xor
jmp
push
pop
and
negl
call
pusha
inc
cmp
mov
sub
test
mov
cmp
aas
sub
cltd
add
mov
push
dec
mov
fstp
ret
fldt
decb
fists
mov
and
push
xchg
pusha
sub
ret
outsl
cli
sub
fisttps
shlb
es
aaa
fistpl
int3
add
dec
mov
mov
cmp
jne
or
clc
movsb
shlb
je
push
add
xor
inc
jp
jbe
inc
int
add
add
xor
and
nop
sbb
shll
rolb
xchg
mov
scas
cmp
mov
pop
push
dec
ja
movsb
mov
mov
pop
je
mov
mov
and
push
add
enter
push
and
add
das
push
pop
push
dec
pop
jle
cmp
mov
mov
hlt
or
xchg
push
push
daa
mov
jmp
cmp
je
push
jbe
or
inc
out
call
add
xor
in
pushf
ds
mov
xchg
ja
mov
sarb
hlt
ret
jp
and
dec
repz
fdivs
in
jge
jg
les
pop
push
pop
stc
mov
inc
and
imul
pop
mov
loopne
or
pop
sti
inc
pusha
cmp
pop
push
inc
test
add
or
dec
enter
or
add
test
sbbl
scas
cmp
cmp
or
push
add
sub
or
add
xor
mov
mov
adc
ret
xor
xchg
jae
xchg
cmpsb
push
xchg
mov
inc
xchg
inc
shl
imul
cmp
cmpsb
vunpckhpd
or
lret
sbb
aas
iret
push
push
pop
jle
jo
cmp
je
movzbl
add
filds
enter
je
fcmovbe
lahf
ret
lea
adc
add
adc
imul
in
pop
add
add
push
nop
add
add
cmp
jl
test
jno
je
add
mov
flds
sbb
inc
fiadds
adcl
push
imul
add
or
pop
enter
dec
or
jb
cmp
sub
cmp
pop
enter
or
jns
loop
or
ja
cmpb
inc
jns
push
nop
or
pusha
in
ja
push
shrd
and
adc
cmp
adc
popa
in
inc
or
adc
lret
add
add
adc
movsl
test
adc
lcall
adc
and
js
push
push
adc
mov
pop
pop
in
lcall
sbb
sbb
pop
enter
add
sbb
push
and
and
push
sbb
push
sbb
je
pop
sbb
jns
xorl
sbb
pusha
push
push
or
cmp
inc
push
pop
pop
push
push
pushl
add
add
sub
cmp
pushf
test
pop
lret
movl
xchg
mov
and
test
inc
dec
mov
cmp
mov
push
in
jno
repnz
sub
rol
lea
jns
adc
aad
cmp
add
repz
out
fwait
sbb
cmp
out
mov
fadds
call
enter
adc
nop
negl
ljmp
jmp
lret
sbb
out
in
in
pop
push
mov
in
cltd
mov
add
inc
in
sahf
out
out
cmp
cmp
out
sbb
and
in
pop
lock
pop
enter
icebp
enter
pslld
test
pop
out
std
repz
push
push
jns
std
hlt
hlt
rorl
cmp
hlt
fwait
mov
in
inc
jg
testb
push
pop
idivl
sbb
clc
clc
cltd
inc
fmulp
add
stc
inc
stc
add
mov
cli
nop
adcl
cld
repnz
outsb
sub
cld
je
cld
push
bsr
pop
cld
ss
out
cmpsb
in
std
sbb
push
mov
nop
adc
xor
and
roll
fdivr
xor
and
cmc
push
fwait
inc
shrl
pop
sbb
es
jecxz
mov
sti
in
in
stos
and
fdiv
inc
adc
push
in
stc
daa
ss
inc
in
sti
out
out
cltd
and
add
xchg
pop
leave
dec
sti
sub
sbb
pop
jmp
jno
push
mov
cltd
in
add
cli
popf
cli
imul
cli
out
out
xor
cltd
push
lock
add
cli
push
cli
test
jmp
sbb
dec
cs
stos
push
stc
push
jno
sbb
fstpl
int3
jmp
push
div
negl
fwait
inc
pop
and
xor
add
xchg
clc
cmp
lret
sti
in
sbb
sti
cltd
mov
pop
xchg
add
sub
sbb
cmp
and
sbb
inc
cld
sub
mov
frstor
scas
lret
add
mul
pop
ret
xchg
pop
leave
shl
scas
idivl
inc
in
mov
out
out
xchg
add
out
out
xchg
pop
leave
and
and
dec
in
rcrl
and
sub
shl
das
xchg
inc
pop
pop
mov
xchg
notb
insb
out
xchg
inc
testb
sub
or
jno
imul
loop
push
mov
pop
xchg
cmc
jno
jns
jae
pop
jmp
push
push
dec
cmc
div
imul
cmp
int3
jns
and
cmp
clc
clc
jecxz
or
xchg
hlt
stc
popa
cmp
xchg
hlt
cli
cli
jno
jno
xchg
or
sbb
das
pushw
data16
cmp
out
push
push
jo
test
lahf
pusha
adc
xor
jb
ds
cmp
stos
out
loope
repz
xchg
inc
pop
subl
xchg
pop
pop
lcall
mov
repz
add
pop
push
sbb
xchg
bnd
and
mov
xchg
repnz
and
mov
in
in
cmc
mov
repnz
andl
and
aaa
xchg
mov
mov
mulb
xchg
pop
dec
jo
icebp
jb
ret
xchg
pop
pop
test
cmp
sub
cmc
cmc
adc
and
add
jecxz
ljmp
test
popf
lock
cmp
lea
jns
jne
push
lock
mov
push
lock
push
leave
xlat
and
test
ss
imul
out
add
sub
out
xlat
push
inc
rol
and
cmovno
jns
push
fcoms
inc
int3
add
les
add
inc
mov
jp
push
jnp
nop
mov
adc
jne
dec
jo
adc
dec
add
clc
mov
add
push
ficoms
icebp
andb
or
and
dec
push
inc
add
push
dec
pop
imul
push
push
lods
pop
mov
out
sahf
ds
mov
imul
mov
repz
push
jo
pop
fcomip
sahf
popfw
pop
add
in
push
push
jle
inc
pushf
out
push
out
jle
mov
push
add
gs
push
incb
aam
sar
clc
loope
lods
mov
sub
push
push
pop
sbb
cld
cld
jge
sbb
loopne
push
or
fcoml
pop
pop
int3
movsl
lahf
xor
rcrb
or
pop
xor
fs
or
sub
pop
and
je
add
js
fcom
mov
inc
cwtl
fmuls
and
add
xor
and
insb
sub
mov
mov
sbb
rorb
mov
jnp
add
sub
std
sub
adc
lea
jecxz
and
dec
test
jl
js
push
fimuls
sahf
jge
mov
add
test
add
adc
push
mov
inc
in
inc
stc
add
pusha
adc
fcomps
stc
inc
sahf
test
mov
pushf
fsubrp
push
popa
mov
test
insl
test
ret
adc
cmp
and
and
jle
dec
xchg
sub
inc
inc
inc
inc
and
pop
movsl
pop
insb
cmp
or
xor
sarb
imul
xor
adc
gs
std
js
in
popa
sub
push
cmp
dec
outsl
cmpsb
or
or
sbb
xor
dec
add
ficompl
add
sub
sub
sbb
pop
cmp
enter
push
jnp
rolb
xor
orps
push
ret
cmpl
lods
xorb
cmp
pop
push
and
insl
pop
dec
stos
subb
xor
aaa
fs
das
mov
fimull
and
add
repz
sub
les
shl
add
int
adc
adc
adc
stc
clc
fcoml
jne
lret
and
out
roll
jg
scas
pushl
jne
mov
mov
inc
inc
cmp
js
jmp
sbb
outsb
out
or
pop
ja
add
bound
incb
inc
push
mov
pop
pop
push
mov
inc
ja
stos
xor
mov
adc
ret
clc
sbb
or
insb
jl
pop
std
testb
inc
ljmp
cmp
test
lods
add
inc
loope
je
sahf
push
clc
out
adc
stos
add
testb
push
mov
mov
sahf
in
inc
or
push
cmp
mov
hlt
punpcklwd
stos
mov
push
leave
stos
push
or
mov
hlt
xchg
cmp
pop
jo
push
imul
or
shrb
xor
das
test
or
sub
repnz
fbld
mov
mov
mov
incl
inc
decl
jl,pn
xchg
jne
loop
repnz
das
cmpsb
sbb
cmp
cmpl
outsb
pop
decl
or
push
pusha
or
push
cwtl
add
js
out
aaa
dec
mov
mov
sbb
mov
cmp
jae
dec
stos
xchg
inc
es
pop
jae
sbb
mov
dec
loope
loop
clc
jmp
test
and
pmaddwd
push
pop
lret
add
mov
in
test
sbb
add
mov
pop
call
in
mov
dec
or
sbb
dec
dec
je
push
push
adc
lcall
sub
lcall
xorb
negl
les
decb
push
test
mov
push
cmp
cmpsb
adc
movsb
das
sbb
outsl
or
xchg
inc
mov
icebp
filds
fs
mov
xor
push
push
pop
add
mov
mulb
test
imul
push
fidivl
movsl
mov
lcall
mov
fcmovb
leave
mov
dec
jmp
cmp
inc
enter
ja
insl
or
aas
jge
push
and
push
cltd
pop
idiv
dec
mov
out
ret
insb
xchg
push
xchg
inc
out
cmp
pop
movsl
outsb
fwait
lods
ja
jmp
or
xor
mov
push
xor
lds
sub
adc
cmp
imul
inc
jbe
insl
cs
in
mov
sbb
pop
lds
or
rorl
je
insb
sbb
dec
sub
sbb
sbb
sbb
cmp
dec
mov
and
sbb
or
or
in
adc
cmp
jns
jg
pop
mov
sti
sub
movsl
jo
hlt
inc
xor
xchg
inc
in
mov
daa
adc
je
pushf
push
mov
pusha
pop
xchg
push
cmp
mov
jge
pop
je
sbb
popl
xor
jl
fs
mov
lcall
adc
arpl
insl
outsl
mov
jl
mov
pop
je
dec
inc
or
insl
insb
jne
mov
push
push
add
sub
mov
bound
lret
pop
pop
or
test
adc
insb
loope
inc
xor
or
and
mov
cmp
push
test
scas
in
enter
aaa
subl
inc
sub
or
stc
pop
lods
jle
xor
jg
mov
add
adc
fst
add
and
or
shll
sub
push
je
mov
mov
subl
mov
cli
pop
mov
and
jge
add
push
push
lock
hlt
mov
adc
movsl
add
cmp
inc
iret
repz
push
out
call
pusha
push
mov
mov
dec
jp
out
pop
pushl
jbe
dec
ljmp
ss
xchg
rorb
add
xchg
add
push
or
xchg
js
jl
sbb
mov
loop
fs
jbe
ret
mov
aam
add
fadds
xchg
push
inc
jg
dec
cld
adc
cmp
pop
mov
dec
stos
xor
pop
mov
pop
mov
clc
mov
inc
inc
cmp
je
into
movsl
jmp
enter
cli
orb
lret
daa
adc
add
xchg
inc
jae
fidivrl
dec
je
popa
cmp
loop
inc
ficoms
sbb
push
add
sti
mov
jle
mov
incl
fdivr
hlt
push
mov
xchg
push
inc
sbb
popl
sub
mov
pop
sbb
fisubs
or
bound
popf
mov
sbb
add
or
xchg
dec
push
add
fcomps
test
movl
lea
addr16
test
pop
pop
es
test
xor
rorl
cmp
mov
or
mov
and
mov
inc
or
rcll
add
push
pop
inc
int
and
xor
roll
pop
add
inc
fdivr
frstor
lret
lods
sbb
dec
movsb
jb
pop
add
daa
iret
es
mov
sub
fcoml
ficoml
or
loope
orl
xchg
inc
push
iret
add
rorl
mov
bound
jne
jmp
dec
or
sub
push
jmp
das
xlat
jmp
push
dec
sbb
in
mov
pop
adc
xlat
push
mov
pop
das
rol
inc
or
jp
jge
ret
inc
pop
xchg
in
xor
dec
pop
call
addl
cmpsb
dec
out
xchg
lock
sbb
nop
orb
addl
ret
push
push
jns
aam
lock
je
push
pop
movsl
stos
and
cmp
rolb
rolb
mov
mov
int3
jae
sub
les
jge
add
jmp
cmp
std
add
or
inc
inc
ss
jp
sar
mov
outsl
inc
or
orl
sbb
sub
cltd
pop
scas
and
add
push
mov
xor
clc
and
mov
es
inc
int3
cmp
ret
jmp
aas
pop
pop
cmp
in
pop
sbb
mov
add
adc
mov
mov
and
enter
jne
add
add
add
jns
mov
jmp
das
fldz
mov
add
push
add
sub
js
inc
daa
bound
scas
and
jmp
or
dec
arpl
pop
sub
imul
mov
pusha
hlt
add
adc
inc
cltd
in
sbb
or
dec
loopne,pt
jno
jo
punpckhdq
aas
xchg
clc
outsb
mov
sbb
ja
ja
push
arpl
jmp
pop
arpl
xchg
imul
outsb
fs
outsb
aaa
jne
iret
inc
pop
sub
or
add
mov
imul
std
rol
inc
add
pop
rcl
push
cmp
ficoms
movsb
cld
fadds
add
fnstcw
addr16
and
push
jecxz
test
xlat
ret
loopne
xlat
or
into
stos
cmp
jbe
jbe
xchg
jl
xor
jbe
mov
aam
pop
cmp
and
popa
inc
lock
jbe,pt
adc
sbb
or
sub
arpl
subb
cli
inc
bound
xor
cmpsb
imul
xor
in
and
inc
mov
pop
mov
or
ja
es
sahf
enter
lcall
dec
movsb
sarb
adcb
and
pop
addr16
push
aam
pushf
enter
icebp
push
pop
sub
sbb
jmp
mov
test
adc
dec
lcall
std
data16
adc
cmp
insb
jne
push
or
add
repnz
repnz
jne
sub
push
xchg
rclb
sbb
push
sbb
cld
push
jo
sub
mov
fidivrl
mov
ja
xor
sub
inc
inc
mov
push
shl
rclb
jo
add
cmp
hlt
inc
or
test
movnti
mov
mov
sbb
ja
mov
mov
iret
js
mov
fistl
cmp
sbb
mov
sub
cmpb
rcll
dec
outsl
pushf
mov
xchg
xor
mov
arpl
in
lcall
push
orb
add
test
out
mov
xor
ror
jl
test
cmp
fcomp
shl
hlt
mov
ss
pusha
daa
xor
daa
mov
mov
sbb
sti
or
pop
js
adc
fsub
addr16
mov
incl
dec
lea
sub
mov
mov
sub
test
sub
mov
dec
gs
ss
xor
in
fnsave
or
jle
test
std
mov
call
in
sbb
mov
jecxz
rcrl
xlat
insb
push
lea
loopne
les
sti
out
into
push
movsb
mov
repnz
or
cmp
jg
adc
pop
mov
push
push
xor
push
inc
sbbl
mov
or
or
push
push
lods
mov
pop
jo
dec
filds
aam
stos
sbb
push
push
xor
mov
sbb
sti
sbbb
add
fwait
inc
insb
cld
dec
xchg
xchg
pop
aad
add
es
decl
cld
dec
pop
jl
jg
mov
add
into
add
mov
add
push
cmp
xor
jo
leave
or
loope
cmpb
jne
push
repz
and
pusha
ficoml
loop
xor
movd
out
mov
call
daa
xor
or
mov
add
rorl
add
or
test
or
sub
mov
cmp
lcall
mov
xchg
pop
sub
outsb
mov
or
gs
sub
mull
adc
sbb
repz
and
popl
stc
imul
mov
dec
pop
test
push
movl
cmp
xor
lods
shrb
add
sbb
in
lea
adc
xorb
pusha
xchg
mov
sub
cmpsb
ret
loopne
call
test
gs
adc
pop
xchg
cld
sub
ljmp
or
add
in
data16
push
or
xor
xor
push
cs
roll
pushf
and
bound
sub
call
or
loope
subl
stos
add
adc
pushf
pop
sub
mov
dec
add
testl
lret
cmp
cmc
fisubl
jb
call
scas
adc
mov
fwait
test
lea
test
aas
xchg
mov
and
sub
loop
fmuls
mov
ja
sub
test
push
inc
push
xchg
or
push
mov
sub
xchg
inc
mov
fidivrs
ss
ficoml
push
push
ja
sbb
sub
js
lcall
addb
fwait
pop
inc
inc
cld
mov
addr16
jb
orb
mov
mov
movsb
lods
jmp
and
je
and
xchg
jge
mov
adc
daa
inc
getsec
aad
jmp
mov
mov
mov
out
lea
pop
and
sbb
lret
test
ret
jae
ljmp
jmp
pop
inc
xchg
loopne
mov
orb
ja
mov
pop
inc
jo
jg
or
fstpt
adc
ja
cmp
mov
fdivrl
mov
pop
rclb
xor
add
or
cmp
cmpsb
xor
out
sahf
shll
inc
rorb
mov
mov
call
stos
add
sub
test
mov
cmpsb
push
sub
xchg
sarl
aam
inc
add
cmp
std
jne
fsubr
fistpl
cld
stos
enter
aaa
je
iret
rclb
add
dec
dec
mov
push
stos
insb
aad
in
mov
mov
mov
push
inc
add
xor
or
out
fidivl
push
jmp
call
loope
add
movsb
pop
push
and
xor
aad
add
rolb
push
xchg
adc
jnp
jae
cmp
jbe
movsb
test
mov
dec
xor
push
test
push
cmp
push
imul
leave
inc
inc
loop
call
xor
mov
in
dec
popa
popf
aaa
jmp
loopne
sub
mov
jmp
loopne
andb
cmp
lea
mov
push
ljmp
inc
pop
jne
outsb
jp
adc
loopne
xorb
jo
mov
rcrb
push
out
cld
inc
adc
mov
inc
mov
inc
inc
inc
dec
jne
mov
inc
insl
xor
adcl
outsl
idivb
add
or
or
mov
addb
pand
sarl
inc
dec
jne
imulb
movsb
mov
fdivp
pop
cltd
add
gs
jnp
test
xor
mull
push
fwait
test
fstps
or
call
lar
adc
or
pop
push
clc
rorl
or
and
mov
fisubs
sbb
mov
cmpsl
sbb
je
sbb
outsl
out
add
sahf
loopne
cld
aas
sbb
inc
sbb
push
inc
fisubrs
inc
push
test
int3
cmp
sub
xlat
cli
jo
insb
ljmp
xchg
or
std
mov
mov
mov
orb
xor
addr16
dec
loopne
or
pop
std
out
icebp
std
sub
jmp
xor
dec
sbb
mov
cmp
add
loopne
gs
ss
push
out
arpl
adc
cwtl
stos
sub
fwait
jae
arpl
xchg
inc
data16
fs
and
loope
add
aad
jp
nop
lret
mov
adc
test
push
and
mov
and
fisubrs
and
in
or
push
xor
or
pop
sbb
rcll
jae
dec
xor
decb
mov
xor
lahf
jno
fcmovbe
rcrl
sbb
sub
cltd
xchg
int3
mov
imul
shr
scas
popa
mov
cmp
dec
int3
push
cwtl
mov
jne
cld
mov
outsl
xchg
xorl
and
clc
pusha
or
fs
bound
pop
cld
rolb
sub
call
sbb
dec
xor
test
mov
push
sbb
mov
lea
dec
outsl
sbb
or
out
pusha
fsubrs
ret
jo
cmp
or
loop
xor
sub
sbb
clc
and
into
dec
xor
and
icebp
je
push
mov
stos
mov
sbb
dec
ret
in
or
pop
jbe
enter
sub
push
inc
mov
dec
jle
xor
test
loope
pop
inc
mov
loop
or
movb
shl
hlt
jo,pt
jbe
jmp
push
fidivrs
jno
push
pop
add
mov
int3
mov
out
and
push
cmp
pop
sbb
fsubr
daa
mov
xchg
aam
push
jns
outsl
xchg
jle
aaa
and
dec
ljmp
jnp,pn
mov
sarb
push
xor
je
pop
xlat
add
enter
popa
loopne
out
call
and
sub
inc
mov
mov
jo
lea
mov
or
aas
and
ja
incb
and
lds
push
aam
xchg
pop
add
xor
repnz
xor
jns
pop
lock
and
sbb
push
xchg
insb
out
jne
insb
push
cld
push
jo
mov
inc
or
jo
sti
rolb
push
icebp
shlb
jo
sbb
insb
in
jae
sbb
adc
lret
add
outsl
and
sbb
mov
icebp
cmp
sbb
roll
push
push
sub
dec
sbb
xchg
push
push
popf
pop
pop
sbb
add
orl
repnz
test
into
jnp
not
movsb
gs
imul
adc
and
pop
push
repz
add
imul
add
nop
xor
inc
cmp
add
inc
dec
pop
cmp
xchg
and
jle
or
mov
sbb
incl
push
dec
jp
xlat
out
pop
sti
jbe
and
loope
jge
pop
cmp
je
jle
or
stc
mov
popa
test
lds
jge
or
inc
inc
cmp
pop
xchg
sub
ljmp
mov
cwtl
jmp
pushf
cmpl
aam
mov
adc
pushf
cmpsb
and
daa
jbe
popf
test
xchg
cmpxchg
dec
ja
mov
out
or
mov
jge
sti
imul
sub
inc
mov
pop
pushf
cwtl
mov
and
and
cmpsl
mov
push
xchg
jb
or
mov
adc
push
pop
mov
mov
mov
mov
sub
and
movsl
xchg
andl
in
lea
sub
das
mov
mov
sbb
sub
loopne
sub
sub
aam
shrb
mov
data16
popf
enter
das
test
movsl
shrb
test
add
imul
call
cmp
dec
cld
adc
sub
aam
push
popl
xchg
lahf
inc
cmp
orl
mov
mov
dec
pop
das
pop
jno
or
pop
in
js
pop
and
pop
jmp
jge
jl
or
popa
popf
mov
iret
mov
sub
add
daa
mov
jle
stos
add
jmp
mov
shlb
es
mov
call
add
mov
out
stc
pop
in
mov
fmuls
cmp
push
mov
push
leave
inc
popl
jns
mov
push
and
adc
add
sahf
or
clc
mov
fsts
jmp
repz
push
jb
push
loopne
nop
nop
jl
cmp
in
pop
nop
hlt
movups
loopne
cmp
mov
pop
shlb
loopne
jns
mov
pushf
push
movsb
lods
add
sahf
out
mov
ret
add
lahf
inc
lock
add
mov
sbb
lahf
push
xor
xchg
or
cmp
cs
push
or
in
outsb
xchg
sarl
sub
sub
inc
xchg
data16
test
sub
pop
dec
cwtl
movb
add
push
mov
dec
cmp
subb
jge
inc
mov
negl
test
gs
stos
test
inc
and
pop
les
aam
and
or
nop
js
cmp
daa
sbb
loopne
lds
mov
cmc
jne
and
and
cs
out
test
mov
mov
in
inc
hlt
fdiv
mov
push
hlt
call
cmp
add
ds
loop
orb
test
mov
cmpsl
or
inc
or
je
jo
dec
mov
dec
dec
adc
ss
add
sbbl
inc
dec
jecxz
or
pop
push
lods
xchg
rol
jge
jmp
addl
inc
inc
mov
xor
xchg
in
adc
add
and
jmp
xor
loopne
adc
and
ret
cmp
mov
push
js
dec
les
cmp
or
push
test
and
sub
pop
insb
pop
pushl
test
xor
cmp
inc
cwtl
popa
and
mov
push
incb
imul
add
inc
test
push
sub
fistl
test
ja
enter
push
sbb
je
movl
sbb
movsb
push
sbb
and
leave
dec
in
lds
hlt
jecxz
lods
imul
loopne
sub
inc
and
or
lock
xor
addl
lods
adc
xor
daa
xchg
adc
je
str
sbb
dec
loopne
adc
pop
pusha
adc
ret
test
or
mov
inc
mov
stc
fistl
mov
dec
push
jge
lea
ficompl
pop
jo
mov
xchg
js
push
mov
imul
sbb
or
inc
cmp
xor
ret
insb
sub
test
xchg
movsb
lea
add
pop
or
add
shrb
sbb
dec
add
or
push
inc
inc
jmp
out
mov
pop
inc
or
test
or
addb
dec
loopne
or
addl
rorb
inc
add
ss
push
and
push
test
xor
pusha
adc
in
push
test
inc
cltd
adc
jbe
push
inc
xlat
ret
and
enter
fidivl
mov
ret
or
pop
inc
sbb
mov
adc
pop
divl
in
icebp
or
cwtl
pop
pop
ds
dec
inc
push
push
mov
outsl
xchg
sarb
push
push
jne
les
mov
xchg
dec
ljmp
jns
andb
push
jg
test
sub
pop
je
add
add
mov
loopne
add
add
xor
je
int3
out
sbb
and
addb
ljmp
xchg
push
push
add
push
lock
adc
or
adc
and
inc
add
frndint
or
fidivrs
stos
inc
add
jmp
sbb
imul
pop
add
mov
lcall
ret
cmpl
loope
subb
aas
xor
cli
sarb
cwtl
cmpsb
test
dec
je
xor
xchg
mov
sti
xor
cmp
or
lret
in
clc
aam
fadd
fdivrs
fdivrs
xor
mov
frstor
mov
xchg
jae
pop
dec
xchg
inc
inc
leave
stc
lods
inc
mov
leave
test
in
or
call
or
mov
dec
clc
mov
mov
lea
rcrb
jl
ret
cmpb
mov
cvtps2pd
rcrl
pop
sar
pop
mov
fs
push
inc
pop
mov
inc
mov
mov
pop
cs
out
mov
fdivr
mov
sarl
sub
mov
or
je
or
sub
je
sbb
popf
or
scas
pushf
pop
or
push
add
inc
sbb
cli
push
cmp
xchg
sub
or
ficompl
adc
cmpb
clc
fisubs
add
sub
push
imul
lock
int3
lret
or
ja
test
movsl
mov
mov
sbb
in
hlt
out
sbb
test
stc
nop
je
shll
or
inc
insb
je
lock
pushf
mov
test
ret
insb
xor
sub
xlat
scas
popa
sbb
pop
and
das
xchg
ss
or
xor
mov
mov
movsl
xor
sbb
incb
fs
or
adc
pop
outsl
lcall
js
dec
ret
imul
add
cmpsl
mov
rcll
lret
outsb
lret
pop
imul
jb
or
xlat
mov
push
sbb
jle
inc
je
pop
mov
ficomps
or
add
dec
xor
nop
mov
dec
push
mov
rcll
lock
or
je
push
jae
shlb
test
fldt
loope
xchg
mov
pop
push
scas
mov
add
push
mov
sub
xchg
or
fmuls
mov
rcl
sub
in
sub
or
ss
jmp
roll
inc
inc
push
insl
cmp
addl
xchg
pusha
xor
negl
dec
ljmp
dec
lret
push
push
add
ss
jae
jo
cmp
pushf
jg
xchg
je
mov
push
mov
add
push
inc
pushl
andl
jnp
jge
lcall
xchg
adc
mov
cmpsb
add
cmp
xor
add
lea
jae
cs
sbb
loope
test
mov
jmp
cli
add
add
push
mov
adc
jmp
push
push
outsb
je
test
xchg
push
xor
jne
popa
aas
add
xor
fistpll
sub
je
data16
mov
add
movsb
orb
adc
les
ret
cmp
addb
adc
add
ret
imul
mov
jne
mov
jmp
cmp
std
pop
jle
insl
cmpl
incl
xor
mov
xor
int
lods
sbb
adc
mov
pop
mov
cmp
xor
adc
sti
cmc
xlat
mov
adc
dec
sub
dec
rclb
or
popa
test
lea
xchg
jbe
insl
stc
lcall
pop
rcrl
sbb
pop
jb
sub
nop
cmpb
jne
ds
aad
and
push
lea
jne
sub
outsb
mov
add
out
addr16
mov
mov
mov
adc
lock
xor
pop
data16
test
dec
lahf
push
sub
lret
mov
jne
push
cmp
je
adc
int
mov
jmp
out
or
jmp
aaa
int3
je
cltd
and
sub
je
sub
sub
pop
jl
jae
mov
rolb
jecxz
cmpsb
mov
fimull
je
outsl
mov
or
sbb
dec
inc
jno
test
ret
jne
and
fisttpll
testl
cmp
push
push
inc
dec
std
pusha
add
and
aas
jns
xorb
stc
cmp
xor
or
xchg
clc
sahf
add
mov
outsb
rcrl
xchg
sub
inc
cmp
add
ret
into
addb
and
xor
ss
push
mov
jmp
dec
or
inc
ss
xchg
adc
sub
xor
test
jecxz,pn
mov
pop
add
sub
jl
and
sub
push
test
sahf
and
mov
adc
adc
cltd
sub
sub
pop
shlb
in
mov
mov
mov
lea
sbb
lea
add
add
sub
push
mov
xor
lods
leave
ret
fdivs
jno
rcr
aaa
cmp
or
pushf
push
shll
nop
popa
jle
sbb
mov
lret
inc
lods
jecxz
and
cmpsb
add
cmp
loope
xor
push
and
imul
je
inc
or
push
mov
adc
pop
mov
adc
mov
or
in
in
sub
movsb
cmp
add
stos
xlat
dec
vrsqrtps
sub
or
mov
cmp
ja
and
push
ss
loopne
loope
iret
in
xor
sbb
push
add
mov
call
inc
test
mov
or
and
idivb
cld
idivb
lea
addr16
cmp
push
inc
sub
fildll
loopne
mov
sbbl
and
lcall
mov
out
push
mov
mov
aam
add
push
push
mov
inc
push
lods
or
jl
out
jp
clc
push
pop
popf
or
add
push
cwtl
data16
out
popa
sar
inc
xor
pop
shl
clc
rcrl
cwtl
lock
fistps
sub
jle
cmp
lods
arpl
stos
add
jmp
push
xchg
xor
push
jne
inc
jmp
push
adc
push
xor
ret
dec
outsb
sbb
mov
sbb
inc
xchg
imul
xchg
and
mov
sbb
dec
mov
or
mov
testl
pusha
pop
adc
xchg
test
pop
ss
mov
or
mov
adc
enter
cmp
or
fld
xchg
fdivl
rclb
popa
xor
jmp
sbbb
add
sub
cld
shr
mov
leave
lds
xor
dec
or
insb
pushf
cltd
push
outsb
dec
xor
jno
xchg
xor
rorb
cld
clc
adc
or
cld
jmp
add
je
cli
add
cmp
jbe
push
pop
jbe
jl
add
dec
or
subb
cmc
jmp
jae
mov
shr
lea
not
and
decb
jne
arpl
mov
sbb
lea
xor
pop
cmp
pop
add
fimull
push
cld
add
pop
and
shll
push
or
mov
sub
jmp
clc
and
jle
push
and
push
shlb
and
sti
add
pop
or
pop
cmp
mov
fimuls
and
iret
push
adc
jno
pop
ss
sti
lock
not
and
push
fwait
popa
dec
jne
sub
jmp
lea
addr16
das
mov
xor
cmpsb
rolb
mov
add
jmp
leave
push
xchg
or
push
fidivrs
rcrl
addr16
int3
inc
adc
testl
fdivrl
pusha
mov
mov
inc
mov
mov
cs
pop
fisubs
lods
push
or
pop
mov
add
sub
lods
dec
jecxz
xchg
addr16
push
mov
or
jne
xor
es
repz
or
or
and
or
stos
and
adc
sti
pop
movsb
push
shl
add
scas
jp
fistps
push
push
call
aas
gs
push
or
cmp
and
fld
sub
dec
inc
adc
push
inc
out
mov
and
pushl
sbb
xchg
push
push
mov
push
repz
add
mov
adc
push
adc
dec
adc
jge
call
sub
cmp
lahf
outsb
jp
or
mov
sbb
das
mov
or
imul
lock
data16
cmpsl
test
add
js
add
dec
adc
les
or
lcall
adc
data16
push
sub
test
sahf
push
and
jge
fucomi
fwait
orl
insl
lods
fildl
add
and
inc
imul
push
jbe
jno
sub
add
inc
dec
stc
ljmp
rorb
clc
incb
pop
lods
add
mov
dec
jne
or
pop
push
cltd
out
cmp
mov
popa
lcall
add
sub
mov
cmp
sub
shr
push
xchg
mov
pcmpeqb
dec
clc
mov
push
inc
call
push
mov
cld
lock
pop
stos
mov
iret
dec
jne
je
clc
test
test
or
dec
test
adc
adc
add
pop
mov
cmp
mov
lock
icebp
stos
decl
inc
jne
or
lds
not
and
xchg
ror
mov
cmp
shll
int
mov
mov
push
adc
pusha
jb
cld
push
sarb
clc
mov
and
pushf
aaa
jno
out
jle
int3
inc
mov
mov
cmp
scas
add
movsb
stc
add
mov
int3
add
pop
inc
pop
mov
xor
stc
sbb
clc
push
cs
pop
add
push
xorb
or
mov
add
push
jns
nop
jge
pop
sub
add
ljmp
adc
pushf
sar
dec
xchg
add
fstpl
inc
or
lea
jbe
xor
int
jg
or
mov
repnz
rcrl
push
pop
adc
lcall
outsl
adc
jmp
aaa
ja
and
dec
test
adc
push
iret
adc
inc
insb
and
xor
xchg
mov
push
inc
cmpsl
sahf
and
and
clc
mov
pop
jl
sub
lea
outsb
in
std
nop
pop
sub
pop
xor
add
sar
dec
jp
movsb
inc
adc
cs
push
xor
cld
xor
cmp
dec
jecxz
xor
fisttps
mov
dec
push
push
push
fnstenv
dec
fisubs
xor
adc
mov
jl
dec
lea
mov
inc
cmp
out
xchg
jbe
mov
xchg
movsl
jb
mov
cmp
lret
xor
jns
push
push
dec
pop
rolb
ja
mov
insb
stos
add
ret
lods
pop
and
inc
inc
add
jp
push
dec
push
push
push
jge
adc
pop
and
out
adc
cmpb
cld
in
or
stos
rolb
out
fldcw
push
sarb
cmp
and
decb
xlat
xchg
add
popw
int3
mov
jne
mov
in
cmpsb
aas
fnstenv
jmp
jnp
add
cmp
fcmove
xor
aaa
arpl
mov
adc
mov
pop
rcrb
ja
shl
cmp
je
mov
dec
sbb
and
mov
mov
dec
pop
iret
jne
or
data16
jno
mov
and
push
xchg
push
aad
add
out
repz
lock
gs
and
jne
mov
push
pop
fdiv
int3
sbb
inc
test
inc
push
pushf
mov
sub
aad
inc
out
icebp
sbb
cmp
xchg
dec
jp
push
add
xchg
sbb
dec
jo
ror
push
xchg
cmp
mov
and
mov
decb
jne
rorl
push
xor
repnz
jmp
jp
int3
or
pusha
and
addr16
bound
dec
push
and
push
clc
into
xor
dec
je
inc
imul
xor
push
or
xor
adc
pop
xor
sub
jge
aas
or
sub
jmp
cmp
or
testl
insl
and
push
mov
or
sub
adc
or
sbb
add
scas
lods
fnsave
test
lea
ds
jne
jno
loope
cmp
out
pop
das
push
ds
mov
add
cmpsl
mov
push
repnz
inc
xlat
mov
je
nop
rclb
jle
in
jb
or
xorl
mov
push
scas
lock
mov
inc
test
pusha
add
jle
and
sti
fdivr
add
mov
pusha
and
jp
mov
rolb
stos
sub
loopne
mov
mov
leave
fimuls
movb
xor
mov
add
sub
scas
orl
xchg
js,pt
int
inc
cmp
cmp
sub
or
push
mov
xchg
in
gs
test
or
add
repnz
cmp
cmp
push
push
incl
add
inc
xchg
fsubs
push
push
or
jmp
push
inc
ljmp
or
aam
jnp
adc
lds
sbb
mov
push
adc
xor
divl
sbb
lock
pop
jne
push
sbb
std
pop
cmp
sub
sub
push
inc
movsl
mov
clc
test
arpl
jp
outsb
loop
mov
push
inc
inc
pusha
repz
pop
movsl
sbb
lods
cmpsl
pop
jl
lahf
shlb
sub
sub
lahf
mov
int3
push
mov
or
inc
or
je
add
sbb
sysenter
sarb
ljmp
enter
sub
dec
dec
adc
ret
dec
or
xchg
stos
adcb
nop
pusha
cmpl
jle
stc
add
movsb
push
js
or
popf
call
es
aam
test
sbb
xor
mov
scas
sbb
adc
addr16
call
movzwl
or
int3
test
repnz
in
je
cmp
jmp
mov
out
nop
pop
rorl
sbbb
into
rcr
test
mov
pop
movsb
pop
lcall
xor
ja
iret
iret
movsb
mov
mull
scas
dec
out
into
dec
mov
sub
sbb
adc
mov
pop
inc
xchg
xchg
imul
sbb
xchg
arpl
sub
dec
dec
leave
cmp
rorb
ss
dec
faddl
dec
scas
and
hlt
faddp
sub
hlt
icebp
sbb
cmp
push
inc
pushf
add
mov
jne
jp
pop
ret
cwtl
or
pop
and
out
or
mov
mov
adc
and
cmp
xor
fistpl
xchg
cmpl
or
call
fs
jmp
int3
addb
mov
xchg
dec
xor
xchg
sub
cmpb
movsb
shll
sub
leave
test
sub
nop
mov
add
sbb
push
jns
mov
sub
dec
sbb
and
inc
cmpsl
call
enter
xchg
lods
mov
push
and
call
add
lods
stos
lods
stos
negb
lret
and
or
pop
xor
or
call
or
lahf
orl
in
iret
out
add
mov
mov
stos
jbe
ret
ret
sbb
andb
lahf
mov
xchg
xchg
lret
call
mov
mov
mov
push
hlt
xchg
lahf
push
cltd
xchg
or
lods
in
cmp
or
lods
rclb
sbb
call
add
lods
pop
leave
orl
mov
orl
lds
in
nop
or
xchg
in
pop
push
cmp
test
test
test
mov
int3
test
xchg
jle
movsb
add
pop
mov
ret
lcall
or
data16
sub
push
sahf
out
jns
iret
stc
inc
mov
xchg
xchg
mov
ds
or
jne
cmp
mov
pop
lea
push
sub
mov
lock
lret
push
imul
and
jae
xchg
ret
mov
or
mov
sbb
or
fwait
rorl
xchg
adc
add
mov
pop
add
or
ret
adc
loop
push
cmpsl
or
mov
push
incl
or
mov
or
jle
test
jnp
dec
and
push
adc
popa
mov
ffree
xor
adc
xchg
add
xlat
out
cmp
lods
or
dec
fsubs
push
adc
pop
pop
inc
add
cmp
outsb
in
jne
sbb
hlt
stc
pop
call
aaa
inc
cld
push
add
nop
mov
add
divl
dec
ret
movsl
push
add
add
mov
outsb
mull
or
push
xlat
sub
shll
enter
pop
hlt
jno
mov
xor
or
and
mov
push
clc
add
cli
sti
cld
dec
inc
shll
and
ja
mov
or
inc
and
xchg
icebp
adc
cmpsb
xor
jg
sarb
add
push
jecxz
push
pop
sub
sbb
dec
mov
fucomi
add
jno
or
dec
int
push
or
imul
inc
fmul
lret
push
pop
lcall
fldl
cmpsl
sbb
push
or
and
fisubrs
mov
push
inc
lcall
fcmovne
pop
jmp
jo
push
fldt
dec
inc
mov
pop
sub
xchg
int3
sub
das
sub
xchg
jmp
je
add
and
sbb
push
test
sti
fldenv
lcall
xchg
and
jbe
jns
sbb
adc
mov
fld
scas
popa
pop
or
sub
pop
pop
ret
lret
add
les
inc
test
cmp
adc
xchg
adc
lock
xchg
mov
in
lock
in
in
in
inc
adc
faddl
push
fdiv
aas
movsb
popa
push
fsubrl
fstl
push
shl
push
mov
aaa
jne
xchg
pusha
xchg
das
and
inc
lock
push
fcmovb
cmp
push
in
push
cmc
cmp
les
loopne
out
pop
sub
xor
push
jb
cwtl
push
add
xchg
mov
mov
enter
fisubl
insb
dec
inc
sbb
sub
mov
addr16
es
stc
clc
mov
push
ds
xchg
mov
jle
loop
pop
add
test
push
inc
clc
add
out
dec
sti
adc
jmp
push
push
xchg
jmp
inc
faddl
sbb
popa
push
jmp
test
mov
inc
mov
or
ljmp
sti
iret
clc
and
ret
and
push
push
adcl
jecxz
cmp
testb
xchg
or
add
or
sbbl
push
clc
push
mov
adc
stos
inc
es
stc
mov
mov
enter
cld
scas
sub
adc
call
mov
mov
int3
and
mov
add
jmp
mov
leave
lods
std
rorl
lock
xor
sbb
pop
mov
dec
xchg
push
clc
mov
aaa
fwait
ret
sar
xchg
add
pop
add
jne
dec
push
lahf
dec
sbb
pop
sar
pop
mov
ret
and
cmc
adc
jmp
adc
mov
iret
mov
rolb
inc
or
inc
mov
push
add
hlt
std
push
or
mov
pop
ja
adc
ret
and
xchg
shlb
rcll
movsb
pop
mov
mov
or
int3
shl
ret
mov
bswap
jne
enter
dec
push
pop
or
jb
in
push
pop
add
and
xor
push
bswap
ror
jg
cmp
mov
aam
hlt
es
or
add
mov
mov
and
lods
es
mov
call
mov
push
or
inc
jne
lcall
or
cmp
inc
sub
pop
mov
adc
and
lea
sbb
inc
xor
pop
inc
jne
xchg
jb
push
cmp
inc
xor
cld
inc
add
push
lcall
int
lds
xchg
cmpsb
sarb
sbb
movsb
pop
dec
loope
mov
push
leave
mov
test
mov
mov
mov
dec
outsb
ljmp
dec
andl
add
jl
lret
mov
andb
enter
mov
inc
cmpsl
or
adc
pushf
and
cmp
aad
popf
in
mov
in
inc
gs
lahf
cmc
inc
gs
add
in
xor
imul
int
stc
mov
jno
adc
testl
or
sub
cwtl
lret
mov
mov
daa
mov
sahf
add
sbb
stos
inc
cld
jns
jne
mov
add
in
mov
ficompl
enter
mov
sub
sbb
es
or
cmpsb
pop
pop
adc
fmull
je
test
add
mov
and
jns
cmp
std
mov
in
jecxz
xor
mov
sbb
shll
ja
std
aaa
addr16
lret
das
lock
fdivr
mov
sar
repz
pop
fld
mov
test
fldt
rol
inc
pusha
add
push
sbb
inc
mov
js
popf
mov
bnd
fsubr
std
call
jns
xor
mov
js
push
ret
dec
mov
mov
fdivrs
cmpsb
pop
sub
mulb
fmull
stos
mov
jge
std
cli
mov
sub
cs
fnstsw
mov
mov
imul
mov
inc
lods
mov
fnstcw
cmp
daa
jle
ret
cmp
insl
cmp
stos
xchg
sbb
pop
mov
mov
xor
std
pop
repz
stos
out
imul
push
xor
ljmp
icebp
ret
xor
dec
xor
roll
cmp
xor
mov
mov
mov
and
in
xor
cmp
cmp
enter
call
std
fsubs
arpl
cmp
mov
jecxz
dec
loopne
arpl
std
inc
repz
daa
push
mov
popa
out
lret
mov
push
fdivrp
or
fstpl
ds
data16
stos
mov
sub
test
test
jmp
popa
dec
jmp
dec
pop
movsb
mov
cmc
ror
dec
gs
sar
lock
mov
adc
xor
push
sub
pop
mov
sbb
jmp
adc
and
fstpt
popf
loopne
sub
shlb
enter
mov
repnz
aam
jge
jae
ds
mov
pushf
inc
sub
js
fbstp
add
insl
mov
add
and
movsb
adc
clc
mov
xor
inc
sub
sub
sub
inc
cwtl
cmovge
or
mov
jne
fdivr
cwtl
adc
das
push
dec
pop
jno
and
xchg
and
and
nop
xchg
push
inc
std
std
std
pusha
push
loopne
loope
xchg
mov
sub
jl
das
mov
xchg
mov
jnp
iret
sar
nop
insb
leave
inc
add
push
popf
sti
inc
enter
out
jns
fists
sub
mov
mov
and
fdivs
outsl
aaa
adc
and
aas
xor
pop
inc
aad
pop
pop
leave
dec
es
cmp
or
test
mov
int
sarb
xchg
add
mov
push
arpl
test
lret
adc
imul
cmp
ja
dec
clc
add
repnz
or
and
pop
repz
cmp
cmc
ds
imul
xchg
int3
lock
xlat
popa
push
or
cmc
adc
jns
dec
push
lock
xor
pop
add
stos
mov
pop
xor
scas
adc
test
jns
adc
or
fs
push
es
push
cmc
les
in
pop
leave
int
int
mov
adc
and
push
arpl
int
xor
repnz
int
aam
les
mov
lods
dec
lret
xor
stos
mov
bound
cltd
mov
dec
push
int
ljmp
sbbl
dec
or
in
push
cmpsb
pushf
inc
enter
leave
add
sub
xchg
dec
dec
aad
adcl
and
sub
test
pushf
sbbb
cmp
sti
lret
jle
test
jbe
pop
std
lret
jle
pushf
push
sub
loope
xor
repnz
fwait
mov
cmc
sbb
int3
in
cmpsl
and
int
add
mov
mov
lret
dec
and
pop
inc
lods
pop
xor
pushf
inc
xor
divl
xchg
pushf
xchg
imul
clc
mov
sbb
push
orb
stos
mov
ds
xchg
xchg
stos
icebp
mov
test
sub
jb
pop
dec
add
cmp
icebp
es
add
lds
bound
inc
or
adc
inc
push
xor
leave
xor
test
adc
pop
jb
nop
nop
push
orb
lods
pop
enter
lods
or
out
cmpb
mov
push
dec
pop
je
aam
outsl
xor
dec
ret
pop
aad
aaa
pop
push
sahf
out
mov
push
cltd
cmc
inc
aam
xchg
test
cmpsl
mov
jl
shlb
test
inc
jmp
or
sbb
jg
push
stc
push
mov
inc
inc
push
push
pusha
movsl
pusha
jo
stos
dec
mov
adc
xchg
xchg
pop
add
lret
pop
sbb
or
push
loop
fmuls
fdivs
sub
jmp
cmpsb
pusha
js
sub
add
cwtl
cmp
add
jge
out
mov
stos
ss
neg
pop
mov
sub
or
lock
push
lods
add
addl
push
scas
inc
imul
or
mov
xchg
xlat
adc
iret
imull
push
push
dec
adc
push
and
dec
in
xor
dec
push
pop
outsl
data16
jl
inc
or
jbe
jle
sbb
dec
movsl
push
outsl
ja
mov
or
xor
sbb
shrl
lock
and
lods
std
cmp
lods
lret
xchg
mov
sbb
rorb
outsb
mov
test
and
call
mov
sub
push
pop
mov
fadds
lret
sub
ja
aaa
sub
fidivl
push
sub
mov
add
pop
rcr
aam
fsts
clc
in
lock
rep
les
push
jge
jne
sbb
adc
cmp
movsb
add
jp
or
adc
cmp
into
push
iret
pop
mov
mov
jmp
pop
jae
loopne
movsb
add
add
in
cld
vcvtps2pd
rclb
sbb
loopne
lods
popf
xchg
lock
bound
nop
sub
jne
mov
push
mov
mov
roll
and
cmpsb
pop
aam
xor
jne
mov
loope
xchg
pop
sub
xchg
ja
in
jecxz
add
je
call
stos
fs
popa
enter
mov
or
jne
push
pusha
mov
fsubrs
dec
push
outsb
xchg
sub
jb
adcb
cmp
add
jmp
push
push
pop
sub
jl
enter
mov
test
cld
xor
cld
push
mov
jg
test
jno
test
je
imul
mov
cmp
je
pop
pop
mov
aaa
mov
sbb
sbb
inc
pusha
or
and
mov
addr16
jle
popa
add
sub
mov
sbb
cmpsl
mov
je
jmp
bound
nop
lock
fdiv
mov
or
lods
inc
inc
cs
add
hlt
mov
or
mov
das
rol
xchg
cmp
mov
dec
mov
in
cmp
mov
push
movsl
loope
add
jb
mov
add
sbb
loope
or
lahf
or
jp
ffreep
out
dec
and
cmp
sbb
push
add
je
hlt
daa
push
push
stc
clc
inc
push
inc
sbb
jae
testl
es
ss
repz
inc
xchg
test
xchg
mov
andb
lods
or
cs
scas
mov
jae
push
fiadds
sahf
pop
adc
or
or
pushf
mov
push
inc
mov
fs
fsts
push
pop
sti
lcall
shr
rcr
shr
rcr
or
jne
div
pop
mov
adc
inc
mul
pop
jb
cmp
or
lret
push
jbe
dec
sub
sbb
adc
iret
sahf
adc
or
fcmovu
fiaddl
lret
iret
stos
xor
adc
inc
adc
add
mov
add
into
movsb
jbe
ja
test
pop
jmp
pop
and
pop
stc
movb
cmpsl
mov
inc
clc
movb
fwait
adc
daa
push
loop
dec
lahf
aad
flds
adc
push
mov
jae
push
inc
jg
sahf
lea
xor
add
sbb
or
adc
cmp
clc
out
sub
sbb
adc
sbb
wrmsr
jo
mov
jge
dec
bound
mov
adc
dec
lea
std
jne
mov
les
pop
pop
push
adc
and
imul
lods
and
mov
dec
ret
sbb
dec
fcomps
sbb
sbb
mov
inc
cmp
hlt
out
gs
test
add
lea
cmpl
and
aas
pop
inc
add
push
inc
lods
push
loop
sub
test
ret
jnp
into
cmc
jne
dec
add
and
cmp
adc
adc
leave
dec
jae
adc
and
add
call
or
add
dec
daa
xor
sbb
or
push
adc
mov
jl
mov
and
jb
loop
subb
mov
lret
push
jno
sub
sbb
inc
sbb
add
fs
stc
mov
aaa
adcb
adc
jo
sub
dec
repz
add
push
push
mull
enter
movl
iret
and
or
int
inc
sbb
lock
jo
js
out
inc
lea
imul
in
loope
fs
sar
xchg
loopne
lods
cmp
or
and
mov
movsb
inc
mov
push
lock
adc
lods
inc
rcrb
pusha
hlt
adc
add
xchg
int3
inc
cmp
push
sub
cltd
lock
scas
mov
push
insl
mov
je
pop
cmp
loopne
and
xchg
pop
je
lea
and
cld
add
les
xor
sbbl
es
ret
gs
nop
hlt
or
xchg
inc
sbb
test
cmp
lock
je
mov
fdivrp
iret
lods
iret
stos
dec
jle
sub
or
mov
shl
push
adc
mov
loopne
xor
ret
sarl
xor
in
xor
jo
and
ljmp
stos
mov
push
or
mov
cs
inc
adc
push
xchg
mov
jl
cmp
je
ss
fmul
repz
adc
xchg
pop
lret
adc
outsb
or
cld
mov
enter
popf
adc
and
scas
and
pop
add
pop
xchg
dec
mov
mov
mov
jae
fimuls
insb
clc
or
push
jp
adc
icebp
lods
movsb
repnz
inc
inc
jge
add
and
dec
or
enter
cmp
jb
inc
fildll
sub
icebp
sbb
inc
cmp
roll
and
xor
daa
dec
sbb
fnsave
or
adc
or
sub
add
jno
xchg
mov
dec
sbb
mov
push
mov
pop
or
jb
inc
sub
paddsw
lahf
push
push
cmp
mov
push
cs
or
clc
cmp
lock
add
xchg
andl
mov
daa
push
xor
cmc
inc
and
pop
dec
or
pop
frstor
pop
dec
inc
lock
les
sahf
sub
shl
aad
sub
or
mov
ja
push
pop
mov
test
push
imul
or
rorl
and
out
push
add
cwtl
or
inc
and
test
inc
sbb
scas
fldcw
rorl
fdiv
cmp
subb
inc
mov
sub
push
and
int3
in
js
jmp
mov
cwtl
lock
push
rorl
push
sub
leave
and
cmp
loopne
ja
cmp
and
test
ljmp
mov
lcall
lret
pop
orl
sbbl
test
cmp
sbbb
popl
xchg
push
pop
mov
outsb
jo
inc
lock
leave
push
add
int3
pusha
int3
les
sbb
sub
mov
xor
dec
rcrl
push
daa
or
subl
subl
ret
hlt
aaa
adc
mov
cmp
add
into
les
fbld
inc
dec
cmc
sub
mov
or
lock
shll
fs
addb
pop
jne
and
adc
mov
orb
test
pop
stos
and
popf
jbe
pop
xchg
inc
sbbl
sub
dec
je
sub
scas
mov
mov
dec
pop
dec
or
dec
dec
push
xchg
mov
jge
jb
push
sti
idivl
push
in
adc
add
push
in
mov
rcr
jecxz
dec
cwtl
fwait
or
or
je
mov
pop
sub
mov
aam
inc
pusha
jne,pn
sbb
ja
rol
inc
mov
jbe
sti
popa
adc
cmp
jge
mov
add
push
pop
mov
jl
xchg
add
add
neg
iret
mov
sbb
push
push
dec
and
imul
pushf
sarb
pop
test
xor
sbb
add
push
adc
fs
lretw
and
pop
mov
adc
sahf
mov
add
adc
jmp
cmc
pop
int3
push
je
mov
call
push
push
pop
movsb
insb
inc
test
mov
shl
add
int
pop
dec
jne
cmpl
sub
mov
xchg
sbb
and
cmp
jbe
lock
movsl
ss
cmp
jle
push
aaa
dec
jae
xchg
xchg
xchg
push
divl
jb
jmp
and
xchg
movsl
arpl
inc
test
and
mov
pop
pop
loope
inc
or
jmp
push
pop
inc
jno
mov
push
push
sbb
mov
cmpsl
lods
mov
sbb
and
cmp
outsl
or
jge
push
adc
pop
jmp
add
lret
mov
jmp
popa
and
ja
ret
pop
je
sbb
push
cs
mov
ret
sub
repz
lahf
lds
or
adc
daa
mov
xor
or
dec
and
add
jnp
jp
in
inc
dec
neg
sbbb
mov
xor
sbb
mov
in
fdivs
int
imul
and
cmp
pop
dec
or
arpl
decl
cmp
adc
or
lods
xor
movb
lret
or
les
push
les
xor
or
orb
jg
inc
or
xchg
add
inc
jge
loop
xor
stos
ja
cmp
scas
xor
ss
jmp
xor
and
das
loope
inc
inc
adc
xchg
aam
jo
add
inc
pop
je
pop
es
jns
ficompl
stos
adc
and
or
adc
mov
jmp
outsb
adc
add
pusha
ret
push
xor
cmp
or
inc
mov
cmp
andl
pop
jp
into
inc
add
xor
inc
pop
loope
pop
add
popa
adc
orb
addl
cmp
scas
xchg
mov
mov
mov
mov
dec
sbb
push
or
loop
sub
or
js
sub
stos
mov
sbb
aas
jae
mov
xor
dec
shl
sysret
add
push
ss
addr16
imul
sub
frstor
cmp
orl
or
push
daa
subl
and
in
loope
jne
add
push
jl
and
mov
or
or
leave
xor
js
out
jmp
or
push
jne
in
mov
cmp
cmp
mov
inc
inc
or
jne
repnz
sub
push
sar
xchg
dec
and
hlt
arpl
aaa
lea
mov
jae
sub
dec
loopne
or
gs
push
pop
cmp
sub
sbb
ret
jmp
sbb
addb
fs
sub
mov
add
sbb
cmp
rol
ljmp
or
loopne
imul
mov
mov
fcmovnb
xor
mov
andb
mov
filds
pop
push
dec
add
mov
or
add
call
ret
in
jmp
add
mov
mov
or
or
or
push
and
aaa
test
cmp
inc
mov
aam
loope
in
js
dec
into
addl
adc
push
and
pop
pop
add
out
mov
xchg
movsb
jl
inc
or
inc
pop
pop
sbb
subl
xchg
pop
aaa
clc
add
nop
and
mov
andb
and
or
daa
adc
add
adc
fcmovnbe
inc
cmp
or
lock
test
jle
cmp
loopne
ja
push
push
sbb
push
mov
dec
bound
push
push
mov
loopne
mov
clc
add
out
add
and
mov
jae
or
mov
cmp
or
cwtl
xchg
inc
adcl
test
xorl
scas
cmp
push
cmpb
inc
scas
jbe
jb
xchg
andl
testb
jle
shl
mov
or
adc
aaa
stos
insb
sahf
cli
xor
rorl
stos
xor
idivb
add
or
arpl
push
je
and
or
add
ss
mov
outsl
add
loope
pop
pop
or
jae
pop
sub
fistpl
scas
pusha
or
or
out
mov
test
and
mov
xlat
inc
dec
dec
xchg
cs
push
xor
iret
cmpsb
pop
xor
push
xchg
movsb
loope
xchg
cmpsl
sub
push
mov
int3
sbb
push
or
repz
loopne
or
xor
not
pop
push
adc
push
rcrl
imul
add
enter
les
or
xchg
pop
xchg
dec
add
ret
sub
jg
jmp
fdivrs
and
inc
dec
dec
cmpsl
sub
jo
das
in
mov
sbb
mov
or
sub
data16
popa
push
mov
into
bound
and
int3
or
imul
jmp
mov
testl
xchg
insb
add
movsl
add
dec
repz
jae
and
and
lods
xlat
nop
add
pop
mov
out
or
mov
je
mov
inc
adc
mov
mov
in
jl
test
and
nop
adc
pop
xchg
call
mov
js
je
push
cmp
fnclex
jecxz
adc
test
les
push
jne
add
mov
ficomps
outsb
xchg
and
cmp
jb
or
add
dec
lods
jmp
cs
xor
jbe
push
dec
enterw
push
sub
jb
add
push
or
add
ljmp
or
lods
xor
dec
mov
fsubrs
mov
pop
mov
sbb
mov
lahf
out
decl
cwtl
push
add
andl
jl
js
loopne
dec
ds
and
cmp
xor
add
and
icebp
lret
pop
mov
into
mov
cmp
cmp
dec
mov
aas
add
jmp
in
or
lods
mov
fimull
sub
adc
leave
subl
mov
jnp
dec
mov
sbb
aam
sarb
ret
xor
cmp
xor
mov
sub
aam
fsubr
push
and
sub
pop
push
cmp
push
mov
int3
mov
call
call
or
sub
mov
jmp
adc
outsl
jo
jne
fists
fdivs
adc
imul
or
sbb
fsubl
imul
xor
jmp
inc
jnp
arpl
push
push
mov
aaa
inc
mov
jecxz
xchg
xchg
ret
or
and
mov
push
xor
imul
test
cmp
jg
inc
jmp
inc
inc
or
scas
hlt
pop
mov
jbe
jne
imul
enter
push
pop
test
fiaddl
mov
mov
and
sub
ljmp
jle
inc
push
mov
cmpsb
mov
aam
dec
movsl
adc
lcall
mov
cmp
push
out
mulb
and
add
or
push
mov
test
enter
sbb
enter
mov
shl
movl
or
movl
xchg
pop
or
fldenv
inc
pop
pop
sub
jl
aas
xor
lea
add
dec
push
cmp
lock
add
je
testb
je
mov
adc
sbbl
sub
or
xchg
cmp
cmp
aaa
mov
leave
inc
stc
sub
mov
pop
and
and
jle
sbb
cmp
cmp
fs
jo
adc
push
mov
adc
add
shl
rcll
insl
inc
mov
mov
push
sub
cmp
jl
inc
xchg
jbe
mov
and
enter
loopne
add
adc
scas
add
push
pushl
sti
aas
adc
and
sbb
out
adc
addr16
and
and
adc
or
xor
sahf
sub
xchg
and
adc
sub
bound
mov
ds
movsl
push
and
and
inc
sbb
pop
in
mov
jbe
sbb
and
inc
and
dec
inc
arpl
mov
and
shrb
xor
hlt
cmp
lret
pusha
add
stos
xor
add
gs
adc
mov
lock
push
jl
xchg
add
hlt
push
int3
mov
movsl
push
adc
or
add
add
outsb
or
jg
aas
shll
mov
int
push
adc
sbb
je
lea
fstpt
test
add
or
push
pop
bound
push
push
and
movsb
jno
add
lahf
dec
add
cwtl
sahf
out
pop
jg
and
or
test
dec
jg
cmp
jl
mov
sub
dec
stos
sub
movsl
leave
xchg
call
fstl
outsb
mov
call
sbb
out
test
and
test
fprem1
nop
clc
push
push
gs
add
cmpsb
jbe
cld
cmpsb
lock
xchg
sahf
addr16
out
jb
cmpsb
lea
mov
outsb
lret
loope
fdivs
aaa
pop
xor
clc
add
inc
push
test
stc
xchg
pushw
jmp
mov
cmp
fdivrl
cmpsb
pop
mov
pop
cmp
dec
ret
mov
ja
inc
or
gs
sbbb
je
shlb
fidivrl
pushf
jg
dec
dec
cmc
lcall
lods
add
out
inc
xchg
pop
xor
lods
adc
jmp
addr16
add
ret
xchg
inc
cmpsl
and
sbb
jne
or
aam
rolb
popf
flds
jle
mov
stos
stc
mov
cmpl
ljmp
lods
cmpsb
sarl
lock
and
mov
shlb
add
mov
push
or
dec
addl
test
sbb
lods
andb
mov
adc
or
adc
inc
push
loop
inc
dec
ja
add
add
repnz
imul
shll
loope
sbb
fcoms
push
dec
addr16
lock
stos
aaa
pop
pop
ret
xor
test
je
or
mov
hlt
mov
fstpl
repz
pop
or
jne
jl
xlat
outsl
addb
or
nop
mov
xchg
je
mov
nop
imul
clc
adc
sbb
shl
add
add
pop
inc
mov
popl
enter
push
push
and
nop
lods
stc
cmp
loopne
repnz
xchg
or
lea
push
mov
sysret
inc
dec
jle
leave
rolb
adc
dec
xorb
push
add
mov
jno
pop
loopne
fcoms
jmp
xor
or
cmp
jmp
xorl
pushf
imull
aaa
sbb
add
and
sar
aaa
mov
icebp
scas
jmp
cli
inc
cs
arpl
mov
scas
je
xor
sub
jns
adc
or
test
fdivl
mov
addb
fstps
push
sub
and
cmp
xchg
push
or
test
dec
or
xchg
sub
mov
mov
mov
add
popl
xor
push
cmp
jl
push
and
inc
dec
das
sbb
adc
fsubs
lea
testb
jne
or
cmc
addr16
out
or
cmc
pop
push
ljmp
jb
mov
xchg
jno
sub
xchg
test
add
add
mov
stos
bnd
in
dec
dec
xor
test
mov
stos
mov
mov
icebp
cmp
scas
mov
sub
mov
mov
js
dec
pop
fsts
sbb
adc
pop
and
loopne,pt
shll
inc
push
or
sbb
jne
jmp
pop
xlat
in
rcll
pop
ss
jl
sbb
dec
out
mov
lock
add
xchg
push
dec
xchg
pop
jle
xor
mov
ss
rclb
xor
inc
cmp
jecxz
dec
jl
push
filds
sbb
mov
stc
out
dec
push
mov
sbb
sbb
push
jle
add
jo
jp
cmp
dec
pop
push
pop
inc
push
lock
xchg
dec
push
sbb
push
mov
jg
and
hlt
outsb
scas
jle
adc
repnz
adc
mov
pusha
jbe
add
push
test
and
sbb
decl
daa
jg
adc
orl
call
lret
pop
hlt
add
icebp
mov
loopne
push
xchg
cmp
out
or
ror
shlb
clc
jg
ret
ss
lds
mov
stos
add
and
negb
std
jb
or
pop
cwtl
lock
test
out
xor
cmp
notl
movsl
xlat
dec
ljmp
xor
jp
shll
xor
xchg
enter
inc
lret
xor
adc
jl,pn
cmc
ljmp
xor
push
or
push
or
mov
mov
mov
nop
adc
xlat
je
cmp
adc
cmp
jb
push
imul
xchg
loopne
and
sub
data16
mov
mov
inc
jmp
inc
movb
and
cmpsb
popa
adc
jno
cmpl
sub
pop
adc
or
cmp
push
or
inc
adcl
push
mov
call
jmp
das
xor
idivb
sbb
outsl
or
mov
jecxz
push
out
xor
mov
mov
cld
inc
mov
push
call
pop
mov
pop
es
jmp
add
inc
mov
sbb
cltd
pusha
dec
loope
adc
out
movsb
mov
push
push
movsl
test
mov
mov
jecxz
adc
sub
sbb
fisttpl
or
cmp
or
mov
lea
lea
or
adc
out
int3
mov
mov
sbb
out
cmovl
mov
popl
jns
fnstenv
cld
push
dec
je
sub
jge
pop
jbe
jp
pop
loopne
cwtl
push
xchg
mov
pop
add
mov
int3
js
inc
dec
and
or
sbb
or
pop
sub
loop
loopne
jo
mov
mov
rorb
push
pop
std
pop
call
pop
filds
inc
cmp
xor
out
jle
sbb
shrb
inc
jnp
mov
pop
int
push
rorl
or
mov
dec
test
cmp
addl
adc
fldl
sbb
sbb
cmp
cmp
sub
xor
cmp
cmp
cmp
cmp
and
inc
inc
cmovs
jb
dec
push
push
pop
pushf
pushf
pushf
pop
add
pushf
pushf
pushf
pushf
insb
jo
js
xor
fs
dec
ficoml
mov
xchg
cwtl
dec
es
fs
mov
xchg
test
sub
sub
ss
xor
push
sbb
mov
ret
xor
mov
push
mov
or
clc
inc
fiaddl
rcrb
add
roll
test
mov
enter
pop
inc
or
adc
adc
cltd
xchg
test
dec
inc
out
sub
ret
cmp
sbb
mov
dec
jne
push
inc
loop
out
jbe
gs
push
imul
mov
sub
mov
mov
frstor
inc
and
or
inc
cmp
cmp
push
fidivl
dec
sbb
add
es
data16
imul
movsb
cmc
push
push
dec
int3
pop
aam
mov
pop
xchg
mov
pusha
add
xor
sbb
cmp
pop
fiaddl
jne
pop
xchg
addr16
mov
inc
adc
xchg
movsb
fucomip
add
and
fcmovu
pop
pop
adc
pop
cmp
or
or
das
cmp
add
adc
inc
jl
cmp
ret
testb
mov
test
cmp
fmuls
in
jbe
mov
mov
add
popa
dec
mov
push
inc
lcall
pusha
bound
sbb
into
sub
dec
pop
je
push
pushf
sbb
pop
sub
sub
inc
xchg
testb
push
movsl
inc
mov
xlat
test
adc
or
add
pop
push
aaa
push
test
in
lahf
inc
lods
xchg
test
push
xor
fisubs
and
int3
add
add
xchg
mov
add
and
cltd
outsl
push
test
sbb
fwait
mov
and
or
sbb
mov
push
xchg
push
adc
mov
or
inc
xor
rcrl
orl
jmp
jbe
iret
les
xor
xchg
js
adc
or
sub
iret
and
or
int
add
sbb
add
and
fcoms
popf
push
push
hlt
cmp
call
inc
adc
and
test
loopne
aas
xchg
js
mov
adc
and
jle
or
cmp
pusha
mov
enter
sub
std
pop
inc
cmp
xor
mov
psubb
loope
shlb
mov
pop
mov
inc
ds
add
xchg
push
xchg
or
inc
cmp
fcom
push
xchg
fsubrp
sbb
sbb
push
jnp
dec
pop
xchg
xchg
das
movsl
jns
inc
fisubrs
in
cmpb
aas
add
shlb
cmp
xor
std
or
jne
xor
push
push
test
push
and
out
sar
push
stos
mov
add
sar
mov
or
or
loope
sti
add
or
loope
inc
testl
or
or
and
lods
popa
rclb
or
stc
out
cmp
add
mov
inc
sbb
ret
mov
push
adc
ljmp
adc
outsl
inc
pushl
mov
jns
xchg
popf
pusha
dec
sub
add
lock
sahf
cmp
pop
addl
pop
outsb
xchg
lret
ss
mov
or
inc
adc
mov
pop
lea
jbe
stc
or
lods
mov
adc
ja
notl
push
hlt
mov
add
xor
stos
jmp
ja
fcoml
mov
cmp
ret
jo
lret
add
cmp
fsubs
pusha
push
mov
xchg
mov
mov
scas
inc
inc
mov
ds
sbb
inc
dec
call
xchg
push
es
jge
out
inc
loop
es
lods
jnp
test
ret
jge
pop
pusha
fcoms
xor
fimull
xchg
jl
dec
sub
dec
sarl
xor
sarl
cmp
pusha
pop
jmp
adc
cmp
push
out
rcr
test
rolb
jno
or
iret
sbb
scas
incb
jecxz
sub
stc
cmp
cmp
jne
movzwl
test
aam
dec
movl
out
inc
jno
outsl
sub
push
push
jmp
sub
mov
jo
dec
icebp
or
pusha
push
je
out
and
pusha
jns
cmp
sbb
fisttps
addb
sub
imull
bndldx
dec
sub
push
add
add
jl
sbb
dec
and
jmp
arpl
sub
sub
dec
and
aaa
fcoml
jae
mov
cmp
jne
adc
cli
or
clc
movb
inc
mov
adc
cmpl
fmuls
push
pop
sub
and
je
push
sbb
inc
add
sub
daa
jmp
add
mov
dec
decl
in
and
jl
movsl
dec
add
add
cmp
cmp
rcrb
adc
lods
push
orl
xlat
push
or
inc
inc
sbb
or
and
mov
xchg
push
and
pop
add
or
mov
out
jl
xchg
dec
dec
stc
jnp
imul
add
mov
into
xchg
push
xchg
sub
and
xor
addb
test
mov
mov
ror
into
sub
jmp
scas
sub
mov
add
out
fs
std
adcb
adc
fisttpll
insl
nop
dec
test
int
je
add
jmp
or
and
repnz
sysret
or
lea
sbb
inc
pushl
lods
adc
cltd
sub
mov
fdivrs
jne
ljmp
cmp
push
fsts
adc
xor
jnp
mov
pop
cmp
mov
clc
rcrl
inc
cmpb
ret
fnstenv
or
mov
aas
icebp
pop
and
leave
pop
mov
ja
sbb
flds
nop
mov
je
aaa
adc
pop
cmp
xor
mov
ljmp
or
je
or
xchg
adc
stos
sbb
arpl
push
sbb
mov
lea
or
rcr
xor
adc
add
xor
popf
fidivl
dec
adc
or
out
jmp
movhps
ret
jp
test
aaa
and
push
es
int
cwtl
mov
mov
adc
inc
add
inc
xor
mov
adc
inc
push
inc
mov
add
jge
mov
add
xor
fdivrl
sbb
push
and
mov
adc
pop
adc
scas
repnz
add
shlw
ret
paddsb
iret
jnp
push
pop
inc
inc
push
mov
out
adc
cli
sbb
inc
mov
lods
add
cmp
or
add
pop
aam
repz
push
inc
lret
xlat
cmp
sub
push
lods
and
sbb
sub
mov
or
or
orl
pusha
mov
idivl
jge
daa
pop
ds
xchg
mov
out
push
xchg
cmp
gs
loopne
icebp
mov
pop
cmp
lods
jg
xchg
int3
out
insl
rclb
fmull
notb
call
addr16
push
inc
mov
pop
inc
rorb
sub
cli
adc
dec
imul
adc
test
daa
adc
mov
mov
insb
and
pop
subb
push
pop
lods
pop
sub
shrd
mov
cmp
mov
or
xor
add
clc
je
xor
test
lcall
lcall
xchg
adc
mov
insl
les
insb
inc
and
cld
push
rorb
stos
jmp
push
and
jmp
enter
jl
xchg
cltd
js
inc
test
add
js
pop
sbb
into
add
popa
and
dec
out
inc
cld
test
add
add
lret
popf
adc
aam
inc
xchg
adc
je
cmp
jmp
data16
nop
test
outsb
test
or
dec
sub
test
inc
jmp
icebp
xor
jecxz
movsb
arpl
int3
mov
insb
or
loop
jle
mov
pusha
lods
lods
xchg
ret
adc
mov
push
aas
jmp
pushf
pop
pop
movsl
cmp
and
pop
add
adc
sbbb
push
gs
xchg
pop
add
sti
jnp
cmp
rcrl
cmp
inc
mov
loope
push
cmp
loope
in
sub
shrl
inc
std
or
inc
mov
sub
mov
stc
add
and
sub
cmp
adc
in
mov
mov
das
mov
dec
pop
mov
push
sbb
adc
das
push
aam
inc
movsb
mov
testl
ret
xor
shrl
sub
mov
sbb
lea
icebp
mov
xor
and
mul
sbb
dec
jbe
sub
cmp
mov
popl
mov
cmp
fimuls
dec
jnp
repnz
das
adc
xlat
or
inc
sub
mov
cli
jb
into
jl
push
jle
and
mov
out
jmp
or
or
add
movsl
and
pop
dec
cmp
mov
inc
adc
loopne
or
and
les
sbb
aaa
jmp
pop
in
add
inc
and
jmp
cmpsb
add
inc
jo
inc
outsl
and
jne
and
icebp
insl
dec
or
push
dec
or
ror
inc
out
gs
xor
xchg
mov
call
pop
xlat
dec
add
sbb
add
and
adc
inc
push
repz
add
mov
xor
and
je
push
popf
ds
cmp
or
mov
mov
testl
inc
loope
jle
pop
adc
inc
push
push
jns
cli
add
js
mov
push
or
or
roll
pop
add
lock
cmp
mov
cs
repz
test
and
add
pop
sahf
popa
and
ja
loop
nop
nop
and
std
in
div
shll
dec
xor
adc
or
mulb
daa
pop
shr
add
jmp
cltd
in
add
movl
sahf
lock
xchg
cmp
test
adc
test
adc
cmpsb
pop
add
sbb
out
inc
lret
rcl
add
je
or
or
shlb
jmp
jg
mov
or
mov
jmp
sbb
lock
jbe
jbe
and
mov
and
xor
mov
jge
add
or
imul
jmp
and
push
mov
cmp
jge
inc
pop
je
je
sbb
loope
flds
and
aas
pusha
mov
pusha
in
mov
out
loope
pop
sub
dec
and
cmpsb
adc
jecxz
pop
fstp
cmpsb
cmp
ds
pusha
js
cmpsl
push
insl
imul
addr16
fwait
sub
adc
push
jns
push
es
adc
sti
add
jg
sahf
testl
fisttps
sub
cwtl
mov
or
das
leave
or
sub
push
scas
jmp
push
mov
xlat
cmp
mov
popa
mov
push
adcb
shll
jb
sbb
jmp
push
and
dec
jb
cmpsl
inc
add
adc
rcrb
push
fnstcw
or
test
mov
cmp
adc
adc
out
cmp
bound
cmp
out
movsl
push
mov
sub
ficomps
roll
adc
xor
cmp
lret
or
jae
and
xchg
loope
aam
xchg
push
aaa
mov
xchg
fcompl
or
jl
add
into
mov
sub
jmp
sub
in
jp
push
or
psubusw
lcall
testb
hlt
add
pop
push
push
ret
jnp
sbb
mov
adc
xor
add
mov
stc
into
jbe
or
std
shl
or
faddl
or
orl
jb
and
repnz
sbb
dec
into
fadd
iret
or
shrl
mov
pop
orl
jo
test
loopne
mov
push
test
scas
loop
sahf
jmp
pop
movsb
push
in
aam
andl
fcoms
and
mov
decb
push
and
cmp
sub
jecxz
add
push
push
cmp
inc
loopne
jg
add
outsl
mov
sub
decl
push
jmp
or
icebp
sub
mov
dec
push
ss
xor
add
movl
mov
add
sbb
mov
push
or
mov
adc
in
adc
add
adc
leave
and
or
rcr
pop
sub
adcl
fs
insl
loope
pop
inc
out
sbb
pop
sti
pop
adc
adc
add
mov
in
jmp
jno
mov
or
ret
xorl
or
push
sbb
xchg
or
sbb
insb
dec
sbb
insl
jo
sub
incl
out
mov
mov
add
imul
push
lcall
enter
enter
inc
sbb
or
adc
imul
mov
cmp
pop
ja
xor
add
fisubs
adc
jae
jb
into
mov
jnp
adc
jns
add
mov
and
cs
rcrb
pusha
xchg
mov
mov
jno
sub
or
mov
adc
or
cmc
cs
loope
and
jbe
ret
sahf
push
pop
scas
push
pop
shl
jne
and
gs
cmp
xchg
mov
sbb
pushf
mov
or
out
jecxz
imul
xor
mov
cmpsb
scas
in
xchg
das
pop
cwtl
sbb
jb
xor
test
cmovge
or
mov
aad
icebp
sbb
shll
push
adc
das
stos
inc
add
shll
out
mov
jg
and
mov
sbb
xor
push
add
sahf
jl
sbb
sub
shr
xchg
inc
das
jae
incl
sub
dec
aad
subb
push
ret
cwtl
mov
loop
add
pusha
or
and
xor
push
or
insl
or
push
mov
push
xchg
inc
adc
fldt
shrl
enter
fwait
int3
and
sub
cs
fwait
sbb
aam
pushf
loopne
xchg
jle
call
jb
fsubrl
mov
or
inc
pushf
or
and
not
je
mov
loopne
inc
xchg
inc
and
mov
fsubl
pop
call
jmp
and
cmp
repz
cmp
jbe
out
add
mov
add
and
sbb
sbb
or
inc
sbb
adc
xlat
pusha
fidivrs
adc
shlb
dec
inc
mov
pop
arpl
test
mov
or
cmp
inc
jbe
ret
mov
jnp
test
add
xchg
sbbb
add
sbb
adc
mov
sbb
dec
or
gs
outsl
inc
es
roll
test
inc
cmp
sahf
mov
jbe
sub
xchg
hlt
push
lock
cmp
mov
adc
enter
mov
mul
andl
dec
gs
add
adc
ljmp
sub
inc
clc
sub
add
jne
cmp
inc
inc
loop
inc
xor
repz
dec
push
inc
sub
cmp
push
int
lock
mov
flds
aaa
add
or
test
and
out
sub
push
add
mov
push
inc
clc
and
mov
pop
test
jne
or
add
test
hlt
mov
popa
inc
outsl
shrl
aad
adc
loope
sub
and
xor
into
cli
sbb
rcrl
sub
pop
mov
loopne
dec
jns
dec
xchg
loopne
lea
pop
fmuls
xchg
subb
inc
shl
mov
pop
inc
jb
or
loop
rolb
outsb
inc
jmp
adcl
mov
jmp
push
cltd
insb
pop
and
mov
out
push
dec
or
inc
insb
sub
cmp
lea
xor
repnz
rcll
and
cli
sbb
jae
pusha
sub
adc
jno
or
jb
incb
jae
pop
pop
sub
adc
jns
adc
movsb
pop
and
jge
push
mov
test
push
add
hlt
or
adc
loope
dec
stos
inc
and
xor
rsm
test
xor
push
aam
xor
cmp
sbb
sub
adc
shrb
or
clc
out
and
push
cld
not
or
je
lock
inc
and
pop
ds
push
or
and
lock
and
test
mov
jl
aaa
adc
push
inc
shl
mov
jl
mov
movlps
xchg
aam
adc
out
or
ret
sub
dec
mov
add
int3
pop
hlt
test
xchg
sub
add
mov
cmp
push
add
cli
cmovg
bound
test
lcall
inc
sub
and
jns
inc
lock
push
sahf
inc
mov
add
inc
jecxz
cmp
leave
fs
mov
nop
cmp
fmull
cmp
imul
mov
andb
loopne
loopne
cmpl
gs
sbb
js
mov
xchg
push
out
mov
int
ret
jl
mov
out
and
or
into
add
lods
dec
xor
cld
sbb
jge
sbb
addb
fiaddl
or
mov
and
flds
inc
aas
add
loopne
sbb
shrb
push
add
loop
xchg
aam
and
bound
pop
pop
push
enter
sub
sub
push
push
repnz
adc
or
sbb
xchg
adc
adc
jo
mov
inc
adc
adc
lahf
aas
adc
sbb
in
push
and
adc
push
and
adc
imul
add
and
sub
jne
jp
adc
cwtl
push
shll
movsb
mov
add
ljmp
imul
sub
lcall
cmp
in
jne
inc
jmp
mov
push
adc
or
xchg
add
in
cld
enter
cmp
ja
inc
or
frstor
xchg
mov
xchg
mov
add
sbbb
jle
sub
pusha
add
mov
sbb
into
jmp
ljmp
jmp
andl
push
lock
jmp
cmpsl
mov
test
scas
adc
lods
push
sub
and
mov
call
cmp
jle
cmp
push
xor
incl
sub
push
jmp
dec
push
mov
sbb
push
jbe
mov
jo
pushf
push
cmp
fs
sub
jmp
mov
sbb
mov
ret
push
fwait
or
mov
cmp
inc
fistpl
pop
cmp
mov
mov
xor
add
xchg
negl
dec
dec
jae
imul
sbb
mov
cmp
mov
and
outsb
mov
call
decb
out
testl
and
cmp
sbbl
orl
and
mov
scas
mov
dec
or
sub
cmp
mov
mov
sub
mov
outsb
mov
cmpsl
call
mov
shll
test
push
mov
fs
xchg
pop
cmp
mov
mov
jg
add
testl
call
hlt
pop
roll
addl
jmp
cld
push
sbb
and
lds
mov
sub
stc
push
adc
aas
inc
xor
jmp
mov
or
or
pop
mov
xor
mov
dec
ficompl
mov
aad
aam
inc
dec
pushf
xor
push
mov
add
push
cwtl
jge
neg
add
mov
xor
sbb
test
cli
sahf
mov
cmp
adc
mov
sbb
ret
push
or
mov
sti
xchg
mov
xor
jne
mov
pop
lods
inc
out
dec
test
clc
add
cli
push
jmp
add
mov
sbbl
rorl
push
mov
add
or
mov
pop
call
dec
or
mov
xor
mov
mov
push
xor
and
and
and
adc
adc
shl
shll
adc
sbb
pop
stc
jns
ja
ja
mov
pop
int
push
mov
pop
movb
and
testl
mul
jbe
jne
or
jne
test
into
jne
subb
and
pop
cmp
xlat
movsl
pop
jnp
xor
hlt
int3
add
jne
shrb
orb
aaa
hlt
rcrl
pop
lea
lea
cmp
mov
or
sbb
les
scas
sbb
cld
jns
hlt
dec
adc
dec
lock
inc
loope
dec
ja
shr
aaa
xchg
push
js
subl
lcall
data16
mov
stc
jg
sub
lock
aaa
inc
call
js
add
push
gs
lock
hlt
lods
add
or
shr
inc
lock
sub
out
clc
lret
mov
into
or
adc
inc
mov
xor
movsb
les
imul
fwait
mov
adc
mov
jge
mov
fadd
loopne
shr
or
mov
dec
lods
adc
sahf
dec
fwait
aam
ror
and
aam
mov
mov
das
mov
enter
xor
add
loope
mov
rcll
cld
cmp
add
fdivs
dec
ficompl
sar
pop
lock
aaa
inc
call
push
jnp
push
dec
call
mov
mov
fidivrl
jb
and
push
fmull
mov
sbb
orb
cmp
or
sub
mov
lret
lret
into
jmp
scas
mov
xchg
rolb
add
jno
les
jecxz
cmp
int3
pop
subb
push
lret
mov
sub
add
negb
loopne
sbb
movups
and
ret
mov
inc
mov
inc
sbb
add
cmp
out
fimull
cmp
pusha
xchg
fcoms
cmp
cmp
push
fimuls
lods
loop
sbb
shlb
or
fcom
jmp
inc
cmp
iret
sub
sub
test
pop
jne
cmp
inc
cli
enter
inc
scas
inc
ss
xchg
jle
push
mov
mov
add
es
rorl
loope
cmp
in
inc
stos
adc
or
sub
pop
push
xchg
xchg
adc
inc
pop
loopne
addr16
or
ss
cmp
sar
fidivl
inc
xor
mov
dec
cmpb
je
mov
aas
push
mov
cmp
pop
jne
dec
mov
inc
inc
mov
out
add
pop
add
sbb
mov
negl
xchg
jo
jae
outsb
xor
fisttps
les
xor
adc
or
mov
lahf
xor
push
xor
and
imul
push
jnp
add
jns
movsb
mov
jbe
adc
xor
add
arpl
pop
xor
xchg
mov
push
pop
xchg
mov
std
cmp
and
mov
shlb
fdivs
or
add
and
je
daa
mov
hlt
or
pop
je
setg
sub
out
clc
add
mov
mov
arpl
mov
mov
jne
movb
lea
shlb
lcall
clc
lds
xor
mov
fcmovnbe
mov
es
sbb
loop
lock
pop
inc
shufps
lret
jmp
sub
add
add
pop
aam
xchg
pop
xor
lds
pop
or
lea
mov
xchg
inc
out
cs
pop
popa
adc
jns
les
sub
inc
fs
ficomps
xchg
lret
cld
xor
push
or
bound
addb
testb
addb
inc
jmp
inc
add
pop
dec
dec
lods
adc
mov
add
mov
mov
xor
pop
arpl
jno
push
inc
add
dec
dec
insb
push
cwtl
mov
loopne
jmp
pop
add
ret
jbe
loope
shl
jle
dec
adc
jge
out
sub
lahf
adc
leave
xor
pop
fldl
enter
dec
rcrb
push
add
pop
mov
inc
enter
dec
mov
ret
mov
xor
mov
shrl
lcall
xor
or
call
sub
adc
imul
popl
fldl2t
int3
aas
xchg
lret
call
cmp
test
andb
rorb
dec
shlb
hlt
nop
jp
pop
add
add
mov
clc
mov
fstpt
cwtl
inc
rcl
mov
or
sar
or
pop
mov
mov
add
add
enter
es
push
pop
add
lds
idivb
xor
add
push
xor
push
jmp
cli
loopne
js
xchg
aam
clc
push
mov
cmp
rclb
inc
xor
leave
sbbb
add
mov
jle
and
popf
cmp
dec
sbb
mov
mov
mov
sub
loopne
lock
mov
daa
xor
or
jne
pop
cmp
mov
add
ret
jmp
out
scas
test
movb
jo
ss
add
add
or
or
or
xchg
mov
add
sub
adc
test
inc
dec
or
push
movswl
les
sbb
pop
dec
mov
or
jbe
add
mov
cld
add
dec
shrd
push
jle
xor
sbb
outsl
ss
jl
cmpsl
clc
fnstcw
or
cmp
jb
pushl
add
dec
jmp
xchg
and
cs
sub
aam
cmp
or
rcll
call
and
push
push
xor
pop
cmp
sub
lcall
ret
mov
push
sbb
shrl
pop
add
sarl
jg
jb
push
sub
mov
or
fidivrl
rorl
fs
and
inc
shll
push
push
repnz
push
jns
add
stos
adc
mov
jbe
not
jmp
cmpl
jg
sahf
xchg
hlt
lods
jb
jo
repnz
mov
pop
or
or
out
inc
lcall
add
daa
jne
add
mov
test
push
cmpsb
stc
mov
add
jecxz
fisubl
sub
push
scas
movb
mov
xchg
cmp
sbb
jne
loop
pop
movups
call
mov
mov
and
sub
jl
xor
cwtl
or
andb
add
xchg
inc
sub
jge
mov
push
or
sarb
rclb
cs
push
sbb
pop
movsb
add
adc
popf
jo
ficompl
add
shlb
pop
jo
add
nop
test
jl
cmp
je
mov
dec
inc
push
je
push
shl
jne
icebp
or
cmp
cmp
test
jbe
adc
pop
imul
cmp
add
adc
loopne
test
adc
push
insl
mov
cwtl
out
push
jmp
insl
cmp
or
add
cld
jl
jle
mov
or
mov
rol
push
cmovae
in
loop
add
pusha
mov
inc
mov
jge,pt
outsb
outsb
mov
pop
or
pop
data16
sub
cmp
inc
popa
je
inc
je
dec
cmp
sarb
xor
ss
pop
push
inc
and
dec
shll
inc
mov
mov
or
cmp
stos
push
rorl
xor
repz
call
test
adc
call
jne
int3
outsb
in
lock
insl
push
pop
clc
fstps
or
dec
push
xchg
push
mov
inc
jge
push
xchg
dec
shrb
mov
add
adc
or
adc
xor
xor
adc
dec
dec
or
inc
push
inc
cmp
adc
cmp
jmp
inc
cltd
or
pusha
arpl
cmp
dec
xor
pop
test
xchg
shll
sub
add
hlt
sbb
xchg
cmp
push
cmp
or
gs
jmp
lahf
xor
imul
adc
push
push
and
bnd
popf
xchg
pop
pop
popf
ret
lret
in
pop
int3
shrb
cmp
aaa
jmpw
cmp
mov
sub
push
mov
push
lret
or
cmp
into
ss
sub
sub
xchg
sub
mov
pop
js
mov
inc
mov
adc
xchg
xor
xor
sbb
mov
mov
cmpl
pop
lret
or
push
ljmp
push
mov
adc
adc
ss
and
dec
sub
or
jp
pop
call
pop
rorb
mov
test
adc
or
notl
inc
cmp
je
mov
and
jbe
jge
enter
pusha
mov
jno
adc
in
testb
sbb
xor
negl
mov
or
das
out
pop
cmp
add
xor
mov
mov
arpl
nop
add
adc
sub
sub
mov
dec
push
jae
xchg
es
jmp
or
jmp
testb
je
push
ljmp
adc
add
or
negl
pop
scas
ss
int
jae
adcb
cmp
jne
cwtl
mov
xor
mov
aaa
xor
hlt
mov
and
add
adc
icebp
adc
adc
js
push
push
sbb
jne
in
xor
mov
cmp
and
aad
cmpsl
mov
or
sbb
mov
push
test
aad
lea
jbe
fsubl
push
cld
cwtl
adc
ss
fs
xor
mov
sbb
lahf
add
adc
xchg
push
dec
sub
push
sbb
and
test
mov
add
fstps
xor
or
rorb
jbe
push
mov
lea
sbb
movsb
orl
fsubs
xlat
cmp
loopne
cmp
and
adc
sbb
sbb
lcall
paddusw
das
lock
insb
mov
jl
dec
jg
mov
fiadds
arpl
jg
cmp
push
inc
jmp
ja
inc
pusha
cmp
leave
add
aaa
xor
in
xchg
mov
cmp
inc
test
fisubrs
mov
sub
xor
inc
mov
mov
sub
aam
subsd
arpl
pop
test
cld
jo
les
dec
mov
fldl
jne
lea
arpl
sbb
das
adc
cmp
outsl
fstpt
inc
in
adc
repz
and
sbb
add
mov
push
loope
jmp
sbb
dec
push
mov
adc
sub
mov
jle
mov
lods
push
xchg
popa
adc
sub
and
dec
movsb
cmp
or
jbe
sub
jmp
pop
cmpsb
mov
cmp
xor
int3
ljmp
fists
mov
rol
les
ljmp
nop
adc
and
movsl
add
cltd
sbb
loop
xchg
mov
inc
insl
test
pushw
pop
jmp
xor
mov
orl
sub
mov
push
and
insb
mov
adc
es
xor
adc
add
pop
xor
jmp
hlt
into
sub
popa
mov
and
and
sbb
idivb
mov
sbb
insl
xchg
xor
cmp
adc
push
loop
jne
jo
mov
js
cmp
push
add
sbb
cmp
sbb
ja
andb
cli
lea
or
es
add
sub
into
pop
notl
cld
mov
jmp
shr
or
mov
add
push
int3
mov
xlat
bound
scas
push
das
lock
sti
in
stos
mov
cmp
or
add
mov
add
or
inc
neg
jmp
aaa
es
fnstcw
inc
movsl
adc
dec
imulb
ds
add
add
lea
mov
pop
in
rol
inc
cmp
mov
adc
sbb
mov
cs
push
sub
adc
adc
repnz
adc
mov
mov
enter
stc
add
decb
inc
jbe
dec
imul
xchg
sbb
es
ficoms
adc
or
shl
adcl
lock
mov
pop
das
adc
add
lds
sub
add
incl
stos
imulb
mov
test
test
adc
inc
aaa
sbb
lret
je
dec
call
inc
pop
or
sub
or
adc
dec
sbb
xchg
jne
ja
sub
pop
cmp
nop
sbb
push
add
xor
pop
mov
cmp
cmpsl
outsb
add
add
fidivl
call
ss
and
push
inc
adc
push
test
fs
xchg
mov
mov
inc
dec
movsb
jle
dec
xchg
fnsave
mov
push
jle
push
lds
sub
inc
push
ja
leave
push
popfw
les
or
mov
cmp
adc
ja
cmp
leave
inc
xor
fildll
jbe
cmp
lock
jl
cmpb
jl
add
mov
cmp
adc
xor
add
push
adc
stos
cli
mov
rcll
inc
push
push
mov
push
push
dec
pop
add
mov
or
stos
xor
and
adc
push
push
pop
or
mov
lock
jne
and
mov
pop
cmp
jbe
scas
shrb
fs
and
shl
or
or
adcl
adc
push
fcmovu
inc
mov
add
shll
fldl
push
je
mov
and
scas
or
ljmpw
dec
cli
and
and
dec
mov
mov
push
jne,pn
fistpl
xor
insl
popf
xor
mov
in
push
outsb
push
sbb
aam
xchg
cltd
cwtl
rclb
inc
push
sub
or
pop
or
push
xor
in
add
inc
jg
jge
inc
inc
div
fdiv
fiaddl
jns
sub
inc
sbb
and
addl
sub
sbb
push
push
inc
imul
fsts
movsb
push
sbb
adc
test
and
or
cmp
test
or
pop
pop
pop
adc
shll
adc
mov
rcl
ljmp
shr
sub
dec
test
stc
scas
call
idiv
and
cld
je
dec
lods
test
divb
or
clc
dec
ljmp
adcb
and
cmp
stos
sbb
mov
push
sarl
bound
ds
test
jne
call
ljmp
or
push
mov
fimuls
cmp
jbe
jns
aas
jp
add
dec
adc
pop
xchg
cmp
mov
daa
push
jp
jmp
sbb
iret
das
bound
dec
data16
mov
dec
cltd
orb
mov
adc
adc
cmp
pop
ds
gs
pop
push
punpcklwd
mov
mov
and
push
cld
and
mov
data16
dec
pushl
dec
fidivs
pop
in
add
jg
inc
inc
adc
sarb
push
sbb
leave
in
sbb
testb
cltd
jp
lock
sub
or
je
movsl
mov
mov
mov
and
xlat
adc
es
mov
je
sti
jmp
les
mov
push
cmp
ja
add
cmp
adc
xor
iret
ret
cmp
jne
shll
leave
call
adc
xor
mull
cmc
mov
cmp
pop
ss
fimull
add
inc
mov
mov
add
sbb
push
inc
and
mov
dec
lahf
mov
aam
inc
jmp
sbb
add
les
ret
jmp
neg
je
iret
icebp
test
mov
fmuls
addr16
mov
mov
pop
shll
shrb
movsl
or
and
mov
mov
cmp
jne
or
xchg
add
push
std
aaa
and
and
fisubs
dec
cltd
out
aam
out
in
jmp
mov
cmp
adc
push
pop
scas
pop
and
xchg
or
xchg
dec
jae
push
pop
inc
test
pop
cmp
xor
pop
xchg
sub
imul
pop
adc
or
mov
sti
and
add
push
arpl
fwait
pop
fbld
sbb
inc
adc
rcrb
or
jle
mov
inc
jle
dec
mov
push
shl
jns
out
rcl
aad
jns
xlat
fcomp
fstpt
cld
inc
adc
mov
negl
add
mov
mov
push
into
or
or
cmp
cwtl
add
push
enter
add
in
outsl
orb
mov
add
push
or
or
add
cmp
test
mov
divb
push
xchg
shl
in
pusha
std
push
ja
call
cmp
push
xlat
das
or
push
loopne
movsl
add
add
sub
push
sbb
test
or
mov
imul
jmp
sbb
sbb
lea
or
mov
inc
js
mov
or
pop
pop
dec
or
out
cmp
inc
pusha
loop
mov
pushf
sub
adc
shlb
push
adc
mov
imul
addr16
roll
ret
js
add
jb
outsb
dec
inc
clc
inc
push
decl
or
rolb
push
or
adc
hlt
fnsave
fdiv
neg
fbld
add
and
lea
pop
incb
xor
sbb
mov
jae
xchg
ja
add
add
mov
pop
arpl
mov
fmulp
repz
loopne
dec
lods
andl
or
sarb
xchg
jecxz
and
notb
sbb
mov
mov
rolb
push
mov
push
lea
fisubl
dec
or
mov
or
or
inc
sub
or
or
ret
movsb
out
test
mov
push
addl
ror
fwait
cwtl
mov
jge
jl
test
test
rol
add
stc
jle
jle
aam
mov
shr
dec
and
add
cld
or
and
hlt
rorb
add
ds
push
push
push
lret
mov
inc
xchg
int3
or
lods
outsl
loope
popf
ss
shrl
in
lea
mov
or
dec
mov
pop
sbb
inc
lods
cs
movsb
lock
cli
and
push
pop
cli
inc
cli
div
push
adc
sbb
and
mov
imul
in
sub
sbb
adc
mov
or
ret
and
clc
adc
xchg
in
dec
leave
js
scas
outsb
dec
fnstenv
xchg
je
xor
mov
iret
inc
sahf
out
dec
rolb
lock
xchg
sbb
xor
add
pop
jp
shll
mov
loop
cltd
orl
test
mov
testb
sbb
inc
ds
hlt
adc
repnz
adc
into
or
pop
jge
shlb
fsubs
call
inc
test
dec
test
sbb
jge
mov
add
dec
pop
rolb
dec
mov
inc
lds
mov
mov
sbb
fcmovu
mov
mov
mov
add
lods
mov
mov
inc
inc
and
into
repz
clc
sbb
xchg
add
sbb
test
rcll
sbb
sbb
test
lret
lock
fs
add
out
or
jge
loop
sbb
inc
lock
sbb
sbb
and
jne
xchg
movsb
repnz
in
or
pop
inc
or
mov
pusha
mov
jge
add
sub
mov
sbb
add
mov
or
inc
add
add
push
nop
mov
push
xchg
adc
adc
adc
add
cmpsl
sub
pop
pop
shll
jno
popa
call
jb
mov
push
shll
test
jne
sbb
neg
and
pop
jle
inc
imul
icebp
sub
loopne
loopnew
test
add
sahf
sub
and
out
mov
push
cmp
fnstcw
in
out
loop
xor
push
sti
and
aad
stos
cltd
xchg
mov
repnz
mov
add
mov
or
into
in
sub
enter
dec
sbb
stos
jbe
pop
lcall
dec
inc
pop
mov
dec
sbb
scas
mov
cmp
push
shlb
add
mul
add
lahf
add
add
add
in
into
or
sbb
mov
inc
xchg
inc
in
fcmovbe
test
dec
nop
dec
mov
dec
lock
hlt
cmp
jge
sub
cmpb
or
add
dec
cmp
jae
mov
push
xchg
jb
add
add
fadds
add
or
fidivrs
jne
dec
mov
jb
int
inc
push
or
adc
loop
ret
and
add
push
add
inc
jbe
ret
adc
sti
sub
enter
or
or
and
ret
lcall
add
push
mov
ret
and
push
adc
fisttps
jmp
cli
inc
out
mov
or
xchg
icebp
jns
add
or
pop
pop
scas
add
adc
pusha
test
adc
mov
stos
or
push
ret
les
adc
or
jae
cmp
ret
aas
test
lret
push
cmp
pop
cmp
xor
into
push
sub
push
pusha
inc
mov
mov
rcrl
dec
mov
or
pop
cmpps
or
nop
mov
adc
xchg
mov
lock
ret
mov
inc
push
pop
jae
or
add
add
add
ja
add
jl
push
test
jl
or
mov
push
je
dec
pop
or
push
mov
or
dec
pop
dec
pusha
test
and
fidivrs
xor
and
ds
mov
mov
movsb
sahf
pop
mov
popa
cmp
or
pop
push
pmulhuw
fldcw
dec
lcall
xchg
or
xorb
or
cmp
stos
jg
subl
into
xchg
into
inc
ret
add
jge
and
in
stmxcsr
cmp
faddl
bound
cltd
ss
or
add
data16
sbb
add
add
xchg
jle
out
push
mov
mov
xor
leave
repz
inc
jg
into
into
push
push
pop
and
out
fisubrs
sarb
push
pop
nop
xchg
push
out
icebp
pop
cwtl
pop
mov
cmpb
rcl
push
jnp
pop
add
sub
std
pop
push
sub
add
leave
lahf
sbb
out
pop
test
add
xchg
addr16
add
add
inc
mov
or
je
pop
inc
lcall
xchg
sub
adcl
sub
sbb
lret
jb
lret
push
xor
xchg
push
adc
push
push
data16
push
dec
xchg
mov
pop
shll
pop
popa
xchg
test
mov
xchg
push
sbb
push
adc
cmp
xchg
inc
or
and
cmp
inc
mov
punpcklbw
xor
ficomps
push
dec
add
push
rorb
push
daa
or
and
shrb
jge
bound
sbb
jl
or
fwait
xor
adc
icebp
sbb
dec
inc
and
push
mov
inc
push
cwtl
dec
sbb
adc
aad
xor
mov
and
fs
scas
orb
push
lock
shr
sbb
fsubl
pop
push
mov
adc
loopne
ds
je
jp
add
mov
cmp
loop
rclb
mov
inc
int3
and
in
call
jle
jo
inc
xchg
adc
out
and
or
xchg
fstps
jns
jmp
pusha
inc
cwtl
clc
or
push
xor
xchg
rorl
lock
fbstp
loopne
add
mov
push
inc
jns
push
sub
push
sbb
add
scas
dec
vmovaps
imul
xor
adcl
sub
sahf
push
pusha
test
andl
cmpb
pushl
in
or
pop
fldt
and
test
push
xor
mov
out
je
and
rol
pop
popf
push
fcoms
pop
xchg
cwtl
pop
mov
shl
leave
and
sbb
add
mov
inc
adc
mov
xchg
fs
fcoml
mov
mov
rolb
xchg
dec
inc
sbb
pop
mov
xchg
clc
lcall
add
cmp
jge
lea
jae
lret
adc
push
imul
sub
jae
jl
and
orl
xor
adc
push
pusha
push
fildll
jns
arpl
arpl
push
adc
bound
aas
dec
aas
rcr
push
lods
cs
add
add
jge
bound
jmp
push
push
xlat
and
sub
mov
pop
mov
xor
flds
add
add
push
popa
movsl
lea
pop
sbb
or
xchg
xchg
insb
inc
test
hlt
or
push
subb
jne
push
inc
add
add
lods
mov
pop
ret
cvtdq2ps
pushf
dec
jmp
xchg
push
and
fisubrl
mov
adc
adc
mov
fsubrl
outsb
hlt
outsb
or
push
sbb
or
into
xor
rolb
xor
add
pop
add
orl
pop
sbb
add
push
in
lods
ljmpw
jns
cmp
dec
sbb
dec
rorl
push
and
add
arpl
fimuls
or
cwtl
xchg
or
call
or
sub
cwtl
push
pop
jl
mov
sbbb
lea
xor
push
push
ss
adcl
js
gs
sbb
lock
dec
mov
loopne
in
jae
fsubs
cmp
mov
rorb
loop
subb
add
lcall
test
mov
push
sub
js
std
pop
subb
and
mov
inc
or
cld
sbb
add
push
xchg
push
sbb
jno
or
mov
pop
push
das
imul
push
sub
add
adc
les
movsb
gs
jb
loope
cmpsb
mov
lcall
add
push
adc
xchg
inc
inc
cmpsb
inc
hlt
xor
or
sub
add
push
adc
push
mov
in
scas
pop
testb
push
and
jno
inc
inc
ds
push
mov
mov
shlb
xchg
cwtl
or
loopne
dec
cmp
xchg
push
jno
pusha
dec
fwait
or
pop
add
in
enter
js
call
push
daa
data16
adc
loopne
test
adc
addr16
sbb
orl
andl
add
mov
inc
pop
xchg
ret
push
pop
or
mov
test
pop
xchg
or
loope
and
mov
mov
loopne
clc
out
cvttps2pi
aam
test
aaa
push
push
in
fbstp
mov
fsts
sub
mov
xchg
fildll
add
push
xor
inc
jge
lahf
adc
jmp
fstps
icebp
lahf
xorl
xchg
mov
sub
das
fadd
fidivl
test
in
mov
sbb
mov
inc
ja
je
mov
lcall
add
stos
or
and
or
dec
in
test
mov
xchg
lock
gs
sbb
idivb
incb
gs
imul
lock
or
call
fidivl
inc
gs
loopne
insl
mov
mov
data16
les
xor
aad
mov
shl
jb
jo
xor
sbb
jb
leave
xor
fmuls
xchg
sbb
mov
push
fsubl
adc
cmp
in
lock
add
jp
mov
dec
inc
or
sbb
inc
nop
js
adc
cs
movsb
dec
xor
and
push
jnp
xorl
ret
repz
adc
leave
aas
es
adc
insl
add
dec
je
or
jl
sbb
push
and
stc
adc
sbb
jbe
outsb
xchg
jl
inc
inc
adc
push
jb
jo
dec
aam
std
xor
mov
mov
inc
jo
lds
push
enter
sti
stos
pop
or
cmp
cmp
and
pop
fcoml
xchg
and
sub
in
sbb
andl
mov
or
or
mov
xchg
addl
push
call
nop
fs
sarb
test
push
ficoml
fidivl
or
in
rcpps
jb
adc
lea
push
cmp
mov
movsl
fadds
adcl
inc
push
and
sbb
imul
call
add
nop
push
roll
hlt
add
adc
lock
arpl
cltd
lock
stos
adc
lea
jle
mov
cmpsb
idivb
or
dec
add
leave
test
xor
adc
orl
or
test
jmp
dec
or
in
sbb
aaa
in
call
testl
das
mov
cli
jne
sbb
jne
ss
ss
cltd
aam
mov
cmpsl
fs
dec
call
addb
sub
out
inc
add
mov
pop
test
adc
dec
es
xchg
xchg
dec
xor
sub
xor
xor
and
cmp
xor
and
inc
dec
repz
loop
je
outsl
call
add
jae
nop
and
jb
add
sub
sbb
int3
ret
in
sbb
faddl
xchg
or
scas
push
push
test
mov
fidivl
aad
fwait
aam
in
stos
mov
in
xchg
popa
adc
push
adc
xchg
pushf
subb
adc
xchg
jno
js
rorb
sub
mov
rcr
add
sbb
xchg
orl
xchg
scas
sarb
imul
adc
mov
or
lahf
fstp
inc
sub
adc
fcoms
test
pop
xlat
xorb
aaa
int3
or
leave
arpl
xor
lock
pop
pushf
inc
dec
rclb
mov
sbb
jge
pusha
pop
rorl
xchg
mov
pop
jb
sbb
mov
in
imul
call
mov
sub
or
fcoms
mov
push
inc
fcoms
inc
insl
adc
inc
jo
add
jns
insl
mov
popa
adc
movq
in
loopne
in
ret
xchg
in
push
xor
xchg
inc
ficoml
out
xchg
cli
cmp
jp
mov
test
or
or
das
fsubr
popf
out
out
and
movsl
sub
js
les
std
dec
lcall
sbb
loope
xor
testb
push
xchg
pop
mov
mov
dec
xlat
jnp
aas
cmp
sbb
movsb
mov
fcomp
aam
push
push
cwtl
insl
sarb
push
icebp
push
lock
xchg
test
lods
pushf
pushf
pushf
pushf
mov
mov
pushf
rol
int3
imul
lds
movsl
in
cmp
movsb
mov
loop
sbb
jmp
adc
cwtl
inc
test
adc
mov
pop
pop
and
sbb
shll
scas
fmul
and
sub
orb
mov
mov
mov
popa
push
call
fmull
or
das
sbbb
xorb
xchg
and
test
mov
gs
lahf
jg
ss
inc
mov
dec
sub
fcom
fisubs
das
unpcklps
inc
fildll
movsb
sbbl
nop
daa
adc
movsb
cli
leave
pop
jno
lods
push
test
lock
mov
outsl
loopne
aas
loopne
rclb
push
insl
inc
hlt
rcrl
and
sbb
sbbb
clc
xor
test
or
jne
push
xchg
inc
mov
xchg
das
fnstsw
and
lea
mov
xor
adc
xchg
pop
mov
cltd
mov
lea
jl
adcb
push
test
cwtl
popa
push
xchg
leave
les
mov
xor
push
insl
in
dec
in
push
daa
mov
fcoms
xchg
inc
xchg
popf
lods
scas
pop
ss
xor
pushf
adcw
xchg
add
psubsb
ljmp
sbb
fdivs
aad
lods
push
jnp
mov
sbb
add
xchg
arpl
dec
hlt
add
lods
or
xchg
xchg
imul
call
popa
lds
mov
jge
xor
mov
sbb
loopne
lock
xor
xor
cmpl
adc
cmp
mov
xchg
loopne
fdivs
stc
add
enter
push
or
or
xchg
or
or
enter
cwtl
mov
daa
in
dec
push
cltd
and
call
and
lcall
push
push
inc
or
inc
ret
xchg
mov
or
shl
dec
mov
or
sbb
adc
jne
adc
sbb
test
add
pop
mov
lds
inc
nop
je
cmpsb
jbe
frstor
rorb
cmp
mov
sbb
adc
add
fs
clc
add
outsb
cwtl
movsb
adc
jae
nop
decb
add
pushf
std
mov
or
imulb
dec
insb
das
push
test
pop
jecxz
aaa
cs
enter
pop
mov
cmp
mov
adc
jb
xchg
sbb
gs
mov
lret
in
rclb
cmp
popf
push
jge
sub
arpl
pusha
aad
or
or
sahf
scas
adc
sahf
adc
sub
jnp
inc
push
andl
add
cmp
xlat
enter
jb
cwtl
stos
mov
int3
enter
jb
sarb
mov
cwtl
dec
lds
mov
xchg
popa
mov
movsb
pop
rclb
sub
fisttpl
adcb
sub
mov
lds
mov
fstl
das
xchg
jne
pop
adc
push
clc
xor
inc
aaa
and
mov
mov
xlat
cwtl
xchg
test
movsb
push
cmp
xchg
sbb
jnp
aam
jb
mov
lods
lods
test
push
enter
mov
mov
sbb
rcr
or
xchg
test
popf
mov
jno
sti
sbbb
in
loopne
jno
push
mov
xchg
test
lahf
jns
mov
loopne
inc
mov
pop
or
or
js
mov
cmp
jbe
adc
je
fstpl
add
nop
in
pop
sbb
mov
sbb
xor
mov
in
inc
popa
xchg
je
inc
je
push
push
aaa
and
inc
les
aas
cvtdq2ps
popa
out
rorb
pop
ret
xor
imul
je
js
rcr
mov
mov
pop
loopne
lcall
inc
in
mov
dec
or
test
xchg
pusha
jle
fwait
mov
mulb
or
and
mov
mov
inc
sub
pop
push
rclb
test
enter
pop
xchg
aam
fsubrl
xchg
pop
repnz
sbb
adc
jl
xchg
shlb
test
fcmovnbe
xchg
shrd
mov
xchg
fsubl
or
aad
dec
ja
pop
dec
rcr
aas
push
xor
and
test
clc
enter
push
sarb
add
daa
dec
lds
and
imul
addb
push
push
pop
push
popa
adc
push
dec
mov
cld
imul
je
or
stos
inc
dec
enter
fbld
imull
or
xor
dec
stos
pop
or
sbb
mov
out
mov
cmpsb
subb
pop
insl
jne
test
aad
leave
inc
lret
sbb
mov
rclb
lds
sbb
lods
jecxz
in
sbb
push
add
movsb
rorb
aaa
mov
fdivrs
lock
in
lea
dec
call
push
pusha
push
lods
xlat
add
xchg
fsubl
rorl
mov
inc
sbb
inc
jecxz
fadds
movsb
push
push
adc
pop
clc
jne
test
sub
push
scas
movsl
xchg
popa
rorb
inc
enter
or
and
in
scas
xchg
sbb
fbstp
mov
inc
mov
in
cwtl
dec
ret
scas
push
inc
inc
add
std
inc
adc
sub
jmp
adc
mov
jne
leave
xor
cmp
test
cwtl
mov
bound
cld
mov
mov
sbb
mov
in
test
in
mov
mov
adc
ljmp
lods
stos
push
jge
lods
add
bound
or
push
stos
or
pop
int3
fisttpl
inc
hlt
mov
inc
test
test
xor
les
mov
popf
and
jl
mov
pop
mov
scas
fstl
lcall
loop
test
mov
sbbl
lret
jg
enter
loopne
aam
mov
mov
inc
mov
nop
shrb
xor
popl
mov
pop
xor
xor
or
stos
dec
shlb
fdivs
rolb
or
movl
pop
dec
sub
inc
insb
mov
sbb
aam
mov
xchg
push
xchg
ja
push
lret
and
repz
fs
ss
add
cmp
call
bound
leave
sbb
test
xor
xchg
sarb
pop
pop
int
mov
test
mov
push
mov
pandn
xor
adc
adc
push
lcall
bound
daa
call
insl
xor
and
pushf
mov
or
jne
mov
fs
xchg
cld
unpcklps
xchg
xchg
cmp
and
int
lea
lods
xor
lret
inc
dec
fwait
in
shl
and
mov
mov
cmp
push
push
and
push
xchg
mov
inc
in
dec
jae
mov
mov
daa
lods
push
add
insb
dec
xchg
js
sbb
pop
adc
pmulhuw
inc
dec
fnstcw
lods
out
xchg
ljmp
add
loopne
cmp
test
mov
sub
faddl
adc
rolb
add
cmp
mov
inc
dec
pop
enter
lods
mov
cmc
stos
mov
dec
jge
pop
jb
adc
push
push
pop
movsb
cmp
xor
add
and
or
dec
jae
sub
out
push
jns
dec
daa
sbb
fistpll
stc
jae
inc
inc
lcall
add
xor
in
sub
add
inc
cs
add
jb
gs
add
sti
mov
sub
loopne
enter
mov
test
adc
out
mov
pusha
sub
and
pop
aam
mov
push
pusha
xchg
mov
add
mov
aaa
mov
repz
push
test
fsubr
or
push
repnz
out
and
mov
cmpsb
shl
dec
cmpsb
sbb
in
sub
lods
dec
jae
sub
mov
aad
or
inc
in
and
out
push
adc
aad
mov
shll
lock
aad
sbb
mov
mov
mov
cld
rolb
nop
test
inc
mov
pop
adc
scas
pop
je
es
xchg
jl
push
xchg
popa
inc
adc
lods
sub
je
fwait
stos
jo
lds
js
addb
dec
outsb
pop
mov
nop
and
and
pusha
mov
inc
test
mov
adc
jae
inc
mov
int3
enter
vmwrite
fdivr
mov
mov
les
nop
test
pop
loopne
ret
test
int3
icebp
mov
inc
js
push
bound
inc
cltd
xchg
adc
shr
pop
push
and
call
push
cmp
pop
imul
out
or
dec
fimull
push
sbb
mov
shlb
roll
inc
xor
insb
xor
sub
xorl
jbe
sub
sarb
orb
aaa
loopne
xchg
push
xchg
mov
inc
mov
xor
inc
push
cltd
nop
std
add
nop
or
fs
adc
and
enter
adc
mov
or
push
sbb
and
aam
lea
pop
in
in
aam
add
and
std
add
pop
xor
inc
or
add
sbb
xchg
lret
adc
rol
xchg
or
and
fists
inc
pop
mov
adcl
jo
xchg
xlat
cmp
xchg
punpckhdq
mov
xlat
add
adc
xor
inc
sbb
sbb
cmp
or
lds
and
int3
mov
and
in
cltd
les
movups
in
aas
xchg
sub
cmp
push
inc
add
rclb
loop
jmp
adc
xchg
or
or
cmp
lret
mov
push
insl
nop
jne
adc
mov
and
imul
adc
movsl
es
movsl
inc
leave
push
dec
int
push
enter
pusha
mov
adc
mov
lcall
and
adc
pop
imul
call
sbb
cmp
inc
mov
push
push
gs
or
adc
xchg
pop
jo
or
bound
mov
pand
jbe
sbb
rcl
inc
mov
adc
jge
and
pushf
fs
adc
or
or
enter
imul
fistl
imul
adcl
clc
leave
mov
cmpsb
scas
add
fmul
sub
jne
pusha
sbbb
sub
rolb
dec
cmpsb
xor
roll
xor
nop
mov
fs
les
add
inc
xlat
adc
mov
insl
int3
scas
cmp
mov
icebp
mov
xor
add
rclb
mov
mov
es
pushf
adc
leave
xchg
js
fs
xor
and
mov
fistl
dec
subb
xchg
jmp
lods
mov
cmp
add
mov
mov
and
test
cld
stc
mov
stos
sbb
fiaddl
push
movsb
jbe
dec
cmpsb
mov
mov
andb
pusha
sbbb
insb
mov
jbe
cltd
insb
adc
pop
sbb
push
inc
icebp
pop
pop
adc
imul
push
insb
xor
in
sub
add
test
es
inc
popf
fsub
test
movsl
xchg
or
arpl
mov
lods
cmp
sub
inc
bound
test
push
test
xlat
mov
enter
mov
fcomps
add
sbb
mov
int3
adc
inc
repnz
int3
add
mov
fs
inc
adc
cltd
rorb
add
enter
jle
rcl
pop
test
adc
pop
sub
adc
test
cmp
lea
mov
nop
ss
adc
pop
push
adc
sbb
and
cltd
mov
bound
mov
add
mov
mov
mov
dec
cmp
lret
fcompl
test
jb
xor
je
pop
and
inc
mov
test
and
sbb
hlt
scas
cmp
jns
cmp
jecxz
and
pop
pusha
sub
insl
inc
mov
test
addb
sub
sarl
mov
lea
or
hlt
cltd
loopne
inc
pop
pop
jno
aaa
sbb
nop
and
aam
fstl
push
or
inc
push
inc
mov
das
insb
dec
push
aaa
in
call
loopne
dec
jne
xor
and
mov
and
xchg
mov
cwtl
mov
ret
movsb
xchg
cwtl
and
test
adc
inc
xchg
xor
or
test
movsl
sbb
fmull
xor
scas
sub
fwait
fs
imul
mov
pop
cmpsb
pusha
stos
ss
and
inc
dec
pop
pusha
shrb
scas
ss
push
jbe
cltd
mov
add
inc
and
insl
pusha
sbb
pop
sbb
roll
in
addb
add
stc
or
faddl
inc
adc
clc
loopne
jo
sbb
push
lahf
or
and
and
fs
mov
stos
pop
outsb
ss
out
push
push
or
imul
cmp
adc
std
popl
inc
outsb
out
mov
aam
imul
push
add
jl
pop
push
out
imull
and
add
out
notl
pusha
or
mov
test
push
xchg
imul
cmp
mov
rorb
or
push
xor
sub
and
loope
pop
or
pop
dec
jmp
mov
cltd
cmp
cmp
and
xchg
and
pop
int3
sub
cmp
outsb
dec
and
fs
aam
into
jle
add
xchg
mov
call
jns
push
insb
dec
ja
repz
add
add
add
lea
lock
fsts
lahf
out
push
sub
fstps
fadd
into
repz
imul
jne
push
mov
mov
xchg
addl
les
int
push
sbb
out
inc
jo
push
lcall
mov
push
inc
push
mov
mov
ljmp
add
repnz
jmp
fistpl
or
jnp
mov
add
and
shlb
leave
or
adc
fincstp
mov
jns
mov
jle
test
cmp
cmp
mov
sbb
mov
inc
dec
dec
dec
dec
dec
dec
dec
dec
push
fisttps
test
push
push
pop
pop
popa
bound
gs
lock
ljmp
insl
outsb
outsl
jo
jb
je
jbe
js
jp
xor
xor
sub
outsl
daa
adc
mov
rcll
xchg
adc
push
or
cmp
rclb
xorl
mov
push
addb
stc
cmp
nop
lret
pop
push
jmp
jns
cld
gs
dec
outsb
je
jb
outsl
arpl
fnstenv
push
out
sbb
push
dec
imul
sarl
jae
cmp
jb
gs
xor
cs
mov
xor
pop
bound
and
popa
je
outsl
outsb
push
cwtl
push
inc
jbe
mov
lock
rdpmc
add
pop
in
aad
incl
sub
mov
leave
loop
inc
outsl
jb
js
je
jb
gs
outsl
cmp
or
outsl
add
add
add
cmpb
je
push
je
shrl
jne
jb
mov
outsb
inc
dec
imul
push
stc
jns
cmp
cmp
dec
and
in
mov
add
das
das
adc
push
dec
push
inc
out
or
ds
gs
insl
bound
daa
dec
outsl
jbe
pmaxsw
pop
dec
arpl
push
jo
sub
out
lock
jne
jne
dec
jne
xchg
mov
inc
jo
imul
bound
dec
nop
or
into
mov
scas
cmpsl
xchg
popl
cmp
xchg
addr16
push
jne
lcall
mov
mov
push
fsubl
push
scas
clc
sbb
dec
jae
std
adc
and
jbe
out
pop
dec
inc
ds
popa
das
jo
xor
pop
insl
or
fbstp
mov
sahf
add
mov
mov
pop
sbb
ret
mov
inc
test
and
hlt
call
mov
sub
sub
std
shll
ds
inc
das
pop
pop
push
push
or
jnp
xchg
insl
cli
jl
jle
add
arpl
test
icebp
adc
subl
pop
or
out
ffree
inc
adc
push
sbb
insb
jae
cs
fs
cmp
xor
inc
mov
outsl
mov
out
jo
insl
and
addr16
jbe
dec
push
push
sbb
insl
in
dec
dec
inc
sbb
and
jp
data16
add
xor
sbb
push
jo
imul
push
pop
mov
je,pn
push
push
xor
jo
xchg
idivb
mov
sub
and
fs
adc
out
scas
mov
push
imulb
and
and
fmul
insb
mov
sbb
xor
and
imull
xchg
add
and
jne
sub
mov
rolb
les
shrl
mov
fldl
and
or
das
add
popa
add
or
ljmp
jb
bound
lods
mov
je
and
push
or
push
or
int3
fidivl
popf
jb
loopne
outsl
mov
faddl
fcmovu
push
daa
sub
dec
addb
das
arpl
cwtl
shlb
dec
popa
in
gs
sub
mov
fidivrs
test
out
add
inc
xchg
insb
imul
out
xor
int3
gs
rcl
push
cmp
push
lcall
mov
and
xor
gs
push
divl
push
fistps
push
adcb
aaa
xor
scas
or
fs
xor
rol
push
hlt
pop
dec
add
add
mov
loopne
ds
cmpsb
sub
fs
jo
cli
jbe
mov
test
xchg
push
mov
xor
push
xor
pushf
jne
das
mov
mov
or
xor
out
inc
jle
dec
je
xlat
outsl
push
or
arpl
jecxz
xchg
cmp
cs
xchg
cmp
insl
cmc
xor
or
push
or
pop
das
imul
pop
or
sbb
inc
jno
rclb
inc
wrmsr
pop
leave
nop
inc
insl
imul
cmp
lods
subb
ja
in
ss
push
xchg
cmp
push
fstpl
pop
push
cmp
mov
jne
jae
xor
aad
sub
fsubl
sbb
sub
daa
sbb
jb
lock
lret
inc
sub
pop
dec
imul
jmp
jo
and
push
insl
mov
inc
imul
ret
jno
inc
and
dec
cmp
dec
data16
jg
lcall
loopne
loope
movsl
inc
add
cld
sti
mov
rol
das
lret
jno
icebp
pusha
inc
mov
decl
pop
outsb
movsl
add
xorl
jae
jae
push
loop
imul
gs
push
loope
mov
xor
jg
pop
jle
popa
js
jae
je
pop
xor
xchg
dec
pop
add
add
xchg
sbb
inc
jae
imul
xchg
sub
adc
adc
add
add
add
cld
mov
xor
cmp
pop
or
aaa
out
xchg
pop
push
ds
push
pop
hlt
and
or
pusha
add
jge
adc
js
or
sub
add
imull
add
addb
add
xchg
mov
mov
test
add
orb
daa
push
cmpb
push
and
sub
ficomps
push
jo
cld
les
cwtl
add
pusha
push
inc
add
loop
push
mov
cmp
int3
js
jo
daa
iret
in
int3
rorb
sbb
iret
and
pop
jb
nop
xchg
xchg
js,pn
and
ret
adc
icebp
pop
push
adc
sub
dec
pushf
lock
pop
pop
add
ret
adc
cs
pushf
cmp
pop
or
pushf
jo
je
adc
pop
loop
out
push
jno
je
pop
push
fidivrs
xlat
test
in
or
xchg
and
dec
add
test
xchg
add
mov
add
xchg
mov
cmp
mov
add
add
dec
cmp
add
ja
shrl
popf
add
aaa
adc
mov
add
or
shr
add
decl
addb
xchg
lea
xchg
xchg
xchg
xchg
xchg
cwtl
lcall
sahf
lahf
mov
movsl
cmpsb
cmpsl
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
mov
ret
enter
int3
int
iret
rcl
rcl
aam
xlat
fdivr
fcmovnu
fstp
fnstsw
loope
jecxz
in
out
jmp
out
out
lock
repnz
cmc
div
clc
sub
stc
cli
sti
cld
std
inc
add
add
ljmp
push
sarl
add
push
pushl
or
fists
outsl
ja
out
mov
inc
cs
jae
jb
bound
mov
stos
inc
lods
xchg
jbe
ss
popa
mov
bnd
mov
lea
dec
mov
inc
in
fldt
bound
inc
push
mov
outsb
insb
shlb
inc
sahf
insb
gs
mov
dec
sub
pop
mov
daa
add
insb
in
divb
out
pop
jns
inc
mov
imul
ds
and
inc
jb
jns
push
test
les
pop
enter
fsubrs
mov
mov
outsb
rolb
xchg
or
or
cmp
outsb
data16
sbbl
jns
push
or
pop
fisubs
jbe
push
push
or
fs
and
xor
or
mov
clc
popl
cmp
sbbb
gs
xor
or
fisubl
dec
dec
lahf
pop
dec
and
lock
xchg
pop
pop
push
push
jae
sbb
push
cmp
cmp
arpl
or
movsl
jae
addr16
sub
out
push
das
outsb
gs
mov
data16
insb
adc
or
sti
dec
push
push
push
push
dec
testl
pushf
inc
or
mov
cmp
or
jge
lods
cmp
aas
jg
inc
or
jae
call
mov
popa
test
outsl
jae
inc
mov
inc
push
in
xchg
jg
jo
pop
shlb
cmp
sub
push
jne
adc
or
push
outsl
xchg
lods
jo
aaa
daa
xchg
mov
popw
repz
cmpsl
cmp
es
cmp
iret
repz
and
sub
inc
jl
lcall
sub
sub
addr16
mov
dec
sub
sub
push
scas
xchg
loopne
inc
jmp
cmp
and
add
pushf
ficompl
cwtl
jb
jmp
adc
fs
jb
imul
mov
ss
lret
push
sarb
and
xor
jo
sub
mov
jl
lahf
out
add
sub
cld
push
hlt
push
call
les
idivb
dec
add
sti
push
aam
jnp
repz
nop
mov
test
out
lcall
jns
out
jns
pusha
adc
pop
pop
scas
sarb
lock
notb
out
jns
repz
int3
push
fmuls
dec
dec
push
inc
or
stc
cmp
mov
lods
je
jns
roll
cmp
out
sub
sbb
adc
jns
repz
add
decl
sahf
out
sahf
shrb
out
inc
or
incb
test
sahf
out
sahf
pusha
inc
xor
sub
cmp
sarl
in
loopne
mov
cmp
repz
insb
inc
sbb
cld
out
sahf
cmpsl
aam
mov
and
pop
aam
inc
mov
shlb
mov
outsb
push
xor
inc
dec
mov
cbtw
cmpsl
pop
push
push
pop
cmpsb
bound
fs
repz
push
lret
jae
jb
xor
jnp
cmp
push
mulb
xor
add
jle
push
inc
test
incl
dec
jae
insb
inc
out
gs
mov
sbb
push
incb
dec
inc
dec
xor
inc
dec
dec
dec
push
push
loop
and
inc
dec
jg
xchg
mov
inc
add
adc
sub
or
jo
adc
incl
popa
into
mov
sbb
fwait
mov
adc
outsb
mov
ds
pop
fpatan
push
pop
clc
lret
sbb
jb
mov
jge
arpl
cmp
adc
dec
scas
jp
adc
jg
fstl
mov
and
cmp
dec
imul
inc
sahf
push
cmpsb
iret
lret
add
inc
mov
mov
shr
test
sub
fwait
ss
sbb
pop
jg
jns
ds
xor
incb
int3
dec
dec
xor
dec
popf
pxor
xor
mov
aaa
push
div
inc
sub
dec
xchg
cmp
cmpsb
das
xchg
pop
jg
insl
xor
sahf
icebp
mov
cld
or
loopne
cmp
inc
mov
inc
cmp
push
pop
popa
push
or
scas
int
mov
pop
leave
loop
mov
aam
lahf
xchg
lods
in
aas
test
cwtl
iret
adc
xor
pop
add
sub
lret
es
sbb
testl
adc
inc
or
outsb
jbe
and
and
daa
add
inc
sbb
ficoms
insl
cmpsb
imul
and
jmp
jns
push
dec
push
sub
mov
decl
clc
incl
push
sbb
add
or
pop
and
or
and
or
pop
add
add
or
sbb
dec
push
dec
sbb
adc
push
push
xor
in
fistpl
dec
dec
inc
add
or
cmp
or
xor
pop
xchg
add
sbb
or
sbb
xchg
std
mov
push
add
push
dec
inc
sub
and
insl
ljmp
pop
sbb
dec
dec
add
and
daa
dec
fucomi
fucomip
and
lods
pop
add
ret
comiss
sub
and
pop
or
push
pop
pop
cld
pop
adc
or
and
inc
pop
or
sbb
pop
out
sti
jnp
push
inc
out
inc
sub
push
and
mov
sbb
ljmp
pop
sbb
push
and
xor
sub
mov
outsl
inc
add
lret
mov
cmp
push
daa
or
daa
stc
fisubl
dec
cmp
or
inc
push
push
shlb
inc
test
je
lea
xchg
fiaddl
push
cmp
xor
push
outsb
mov
cmp
cmp
pop
cmp
fsts
repnz
sbb
pop
dec
cmp
fisubrl
cwtl
sub
xor
push
cmp
inc
xlat
outsb
jo
dec
or
push
int3
or
mov
testb
jle
xor
push
inc
call
dec
and
ss
push
imul
pop
push
push
push
mov
jb
jne
and
and
aaa
pop
push
gs
out
adc
sub
xor
sbb
nop
cld
sbb
and
cmp
mov
inc
and
sbb
adc
clc
push
sbb
push
pop
sub
testb
pop
and
idiv
xchg
dec
pop
sbb
pop
movsl
pop
adc
sbb
inc
pop
adc
dec
nop
dec
cwtl
in
push
cmp
cmp
jne
imul
rolb
jne
jg
stc
sahf
cmpsl
stc
sub
lea
push
lahf
daa
idivl
cmpsl
mov
jmp
ds
repz
in
cli
or
lcall
lock
sbb
and
xor
rol
push
scas
or
push
mov
xor
push
push
inc
and
cmp
outsl
insl
mov
pop
and
outsb
and
jmp
popa
inc
sbbl
imul
hlt
into
in
dec
bound
xor
cmp
fcmovnu
push
or
sarl
movaps
cmp
repz
out
cmp
sahf
mov
sahf
out
sahf
aas
push
push
jno
lods
jns
out
fisubs
notb
repz
sub
sub
movhps
adc
pop
pushf
movb
les
sbb
lds
dec
push
pusha
cmp
or
or
or
and
cmp
dec
push
xchg
sbb
inc
push
adc
js
pop
sbb
xor
fucomip
or
or
and
inc
or
jne
scas
out
sahf
and
push
push
and
push
sbb
inc
push
fcoms
push
int
jmp
and
add
add
sbb
pop
mov
dec
xor
insb
push
push
inc
inc
lock
and
and
sbb
sbb
push
xchg
fildll
xor
mov
sqrtps
sbb
mov
or
add
and
xor
ret
adc
iret
or
in
sbb
ds
pop
ja
mov
jae
fnstcw
mov
xor
out
ret
roll
pop
or
aas
jecxz
dec
add
pop
scas
jge
insl
pusha
xor
outsb
scas
dec
popa
dec
jo
dec
pop
jo
xlat
in
inc
pusha
sub
daa
sub
popa
mov
xor
sbb
mov
pop
push
adc
adc
or
mov
add
adc
das
fwait
lcall
das
push
bound
shll
cs
addl
pop
cld
mov
jl
jbe
inc
sbb
pop
cltd
rorl
xchg
pop
pop
js
jo
push
and
dec
sbb
daa
xlat
jge
or
fistps
aaa
dec
or
enter
add
push
jl
dec
inc
imul
andb
mov
mov
mov
inc
push
add
adc
push
xchg
dec
dec
push
or
divb
or
rolb
xor
js
or
or
add
test
or
pop
arpl
testl
in
adc
pop
dec
adc
sbb
or
popa
push
and
aaa
daa
sub
cmc
push
xor
dec
mov
dec
addr16
jne
jo
into
push
push
cmp
ret
leave
or
or
mov
test
dec
and
mov
or
pop
loop
dec
testl
pop
adc
sbb
js
sbb
pop
cmp
pop
pop
fists
cmp
nop
add
and
bound
jle
in
dec
xor
cmp
fwait
pop
xchg
cmp
shr
je
daa
inc
push
or
add
dec
out
push
gs
and
scas
scas
in
jbe
int
dec
dec
mov
pop
mov
sub
inc
xchg
lock
push
push
push
fiaddl
ss
mov
mov
stos
mov
push
push
and
pop
add
push
cmp
pop
stos
inc
and
loopne
add
inc
cmc
pop
add
push
add
les
fstps
ja
jo
or
mov
lods
add
xor
adc
mov
adc
xor
cli
loope
pop
xor
push
xor
sbb
daa
inc
pop
mov
push
adc
out
out
add
or
loopne
cmp
ss
ss
mov
scas
inc
pushf
imul
sub
jns
addr16
mov
sub
into
and
mov
xor
jbe
cld
xlat
sub
jae
insl
popa
imul
fs
push
pop
outsl
lock
data16
push
ja
stos
pop
inc
lods
pop
xchg
adc
push
iret
repz
pop
push
inc
push
add
fsubr
repz
add
jmp
imul
pop
cmp
add
push
push
lahf
ja
cmp
das
add
int3
pusha
and
or
addr16
notl
je
mov
dec
or
dec
sub
push
decl
xor
push
sub
mov
adc
in
or
mov
push
sub
and
rcr
pop
mov
pop
or
cmp
push
or
sub
add
adc
cmp
inc
sbb
pop
push
adc
sub
mov
inc
pop
xor
in
rcrb
out
push
inc
cmp
jbe
dec
xchg
pop
ret
pusha
mov
mov
loope
or
push
popa
mov
xorl
shlb
les
mov
popf
add
dec
lea
xor
call
add
stc
pop
or
pop
aaa
dec
push
add
pop
mov
jne
bound
sub
out
dec
pop
hlt
fmull
mov
dec
outsl
jae
es
test
pop
sub
pop
stos
mov
dec
push
push
push
pop
xor
adc
and
or
xor
inc
das
mov
push
sub
mov
mov
and
dec
mov
js
cmp
cmp
xor
je
dec
jae
push
loope
sbb
test
pop
adc
jb
jmp
xchg
jb
outsl
imul
les
push
jge
xor
cmpsl
int
push
jno
xchg
dec
xchg
movl
inc
add
mov
sub
ret
daa
pop
pop
mov
sub
or
inc
sub
adc
adc
add
and
or
clc
das
inc
ja
xchg
rcll
inc
inc
xor
cmp
pop
add
and
in
out
push
fisubrs
cmp
pop
and
push
inc
daa
aas
mov
inc
add
add
dec
shlb
mov
aam
jle
or
jle
cmp
aas
and
insl
ret
inc
mov
mov
adc
repnz
and
jbe
mov
or
adc
mov
and
leave
add
in
pusha
pop
lcall
clc
orb
push
loop
adc
xlat
into
pop
and
aam
jae
dec
fwait
dec
mov
add
sbb
mov
add
pop
or
leave
ret
mov
pusha
clc
mov
sbbb
fisttps
or
sub
push
xchg
sbb
roll
les
jge
inc
push
cmp
lea
lods
sub
pop
cmp
aaa
test
pop
xchg
pop
test
push
adc
and
push
xor
xor
add
in
adc
mov
pop
push
or
inc
push
or
cmpsl
sub
or
dec
sub
shlb
inc
xchg
adc
pushf
pop
dec
pop
add
cmp
inc
fwait
or
or
outsl
push
fcmovnu
ss
insb
ss
mov
jmp
fists
out
add
sbb
cmpsb
les
das
dec
clc
ljmp
push
in
push
jo
add
int3
mov
outsl
inc
inc
xor
cmp
xchg
loop
and
mov
jo
or
add
mov
dec
dec
cwtl
pop
jbe
outsb
jnp
xor
push
aas
sub
adc
xor
push
ljmp
push
dec
or
pop
push
mov
jo
sbb
pusha
cmp
sub
jl
and
dec
jno
pusha
inc
or
sub
or
js
sbb
pop
sub
add
lcall
inc
sbb
cltd
push
cmp
add
cmpsl
dec
mov
popf
js
adc
stos
sbb
jne
push
cmp
mov
pop
and
rcrb
ret
inc
mov
mov
pop
push
and
pop
insl
aad
dec
sub
arpl
fldcw
push
imul
and
pushf
cmp
dec
and
pop
pop
dec
add
lock
xlat
dec
pop
inc
fdivrl
shlb
jbe
mov
cs
out
and
cmp
push
test
add
enter
or
sbb
xor
adc
dec
addb
out
xor
dec
pop
sbb
push
inc
enter
dec
jle
and
add
fcoml
or
add
pop
insl
push
sbb
push
xchg
loopne
cli
add
pop
pop
hlt
lea
dec
pop
pop
xchg
dec
push
sub
and
ja
lcall
pop
inc
sub
xor
push
and
dec
push
xor
dec
dec
pop
xor
pop
rcr
and
inc
int3
dec
inc
pop
add
loope
add
add
and
jbe
lds
loope
les
das
jl
cmp
push
pushf
and
loopne
xor
sbb
setnp
add
mov
or
pop
adc
push
mov
sbb
pop
aas
jae
push
xor
cmp
ret
mov
dec
pop
xchg
leave
push
cwtl
xchg
mov
sbb
sbb
in
sbb
jp
hlt
cmp
adc
inc
stos
das
adc
adc
add
call
data16
jo
cmpsb
mov
jbe
push
pop
or
add
adc
sub
adc
orl
mov
jl
or
adc
dec
les
cltd
cmp
sub
sub
mov
xorb
lock
out
add
push
add
cwtl
hlt
or
or
daa
mov
inc
sbb
push
hlt
lss
and
mov
push
scas
add
pop
sbb
cmp
dec
pushf
or
dec
cmp
pop
icebp
push
in
inc
cmp
and
sti
mov
aad
adc
movl
xchg
cltd
adc
out
xor
filds
add
push
ret
insl
mov
pop
push
xchg
xchg
fistpl
fnsave
mov
sbb
and
sub
mov
fistpl
xor
inc
mov
xor
or
call
movsl
push
aaa
insb
xor
sbb
fdivrl
and
inc
movsl
or
inc
cwtl
rcrl
insb
cmp
imul
stos
xor
cs
dec
sub
cmpsb
shll
test
insl
adc
dec
cmp
pop
push
inc
sbb
push
dec
xor
sub
xchg
loop
cs
pop
inc
repz
out
add
sub
push
push
push
sub
dec
push
dec
jae
add
or
add
jb
pop
test
adc
aas
sub
or
mov
pop
ficoml
shlb
jmp
pop
sbb
dec
pop
jmp
gs
sub
loop
sbb
pop
xor
sbb
aad
adc
int3
or
in
sbb
mov
pop
push
loopne
dec
sbb
adc
xor
inc
and
or
jle
clc
dec
rcll
or
push
sbb
adc
inc
push
ret
adc
adc
or
and
subw
push
fnstenv
mov
add
jbe
xor
sub
outsl
adc
ja
es
ljmp
test
sub
insb
gs
jg
push
push
ja
fs
imul
je
pop
rorb
xor
lea
push
jnp
inc
jb
push
and
add
shrl
dec
fldl
add
jge
and
repnz
push
lcall
pop
push
pop
push
xor
repz
jnp
push
mov
out
xor
int
rcrb
mov
arpl
frstor
das
data16
movsb
andl
pop
add
mov
les
dec
push
dec
dec
jne
cld
mov
and
mov
mov
ljmp
out
pop
sbb
ljmp
mov
ja
mov
lods
pop
dec
movsl
std
mov
jb
push
push
mov
inc
push
insl
ss
adc
cli
mov
sub
pop
sti
mov
mov
sbb
mov
sbb
mov
mov
xor
pop
sbb
xor
mov
or
idivb
dec
fsubs
sbb
stc
mov
dec
xchg
pop
shl
dec
push
mov
sbb
pop
adc
adc
jb
and
xor
aaa
xor
cmp
insb
leave
mov
movsl
mov
ss
cmovno
insb
inc
jb
add
outsl
push
dec
imul
jl
dec
sahf
imul
sub
dec
cmp
dec
sahf
xchg
out
xor
or
sarb
cmp
and
leave
jae
leave
dec
fmul
dec
loopne
add
mov
inc
js
lcall
pop
add
push
dec
pop
xchg
shlb
mov
pop
dec
push
push
dec
idiv
decl
xor
xor
sub
sub
mov
xor
xor
pop
xor
or
push
jne
pop
mov
insb
push
outsb
add
add
das
js
push
dec
orb
sbb
sti
sub
pop
adc
jbe
and
jo
lret
cmp
aaa
bound
je
bound
mov
loopne
clc
rclb
add
mov
jo
insb
and
or
add
pop
loopne
mov
mov
fdivs
push
mov
das
or
rclb
insl
das
and
cld
sahf
loope
or
sbb
push
enter
mov
outsl
sbb
and
aaa
repnz
add
mov
push
sub
xor
nop
testl
sub
sub
add
pop
or
jg
or
add
loop
pop
push
shll
adc
jno
mov
inc
dec
xor
jns
or
loope
lret
xor
ljmp
sbbb
mov
and
xchg
adc
push
lock
in
das
inc
lods
xchg
ds
pop
xor
sbb
mov
sbb
fs
repnz
je
mov
mov
mov
flds
test
data16
pop
add
ds
jns
int
xlat
and
popf
jge
out
fnstcw
xor
iret
xor
movsb
cmp
push
inc
pop
repnz
insb
xchg
rorb
pop
int
fwait
mov
je
ds
leave
cmpl
push
nop
xor
les
mov
mov
in
xlat
add
int
insl
sbb
inc
pop
mov
rcr
lahf
ret
jo
daa
mov
fs
popa
scas
fimull
mov
add
dec
sbb
inc
fildll
fcomi
lock
mov
xor
mov
mulb
jns
lret
loopne
out
xor
or
jns
addw
enter
mov
dec
sti
cmp
adc
push
out
mov
call
push
or
out
jns
xchg
daa
xchg
dec
enter
xchg
repz
out
aaa
xor
ss
mov
cmp
mov
jl
pop
iret
repz
enter
cwtl
testb
push
lock
jg
cltd
out
cltd
sti
cmp
frstor
lock
xchg
mov
aaa
push
lcall
mov
dec
out
push
popa
ss
fwait
pop
xor
mov
cmp
shrl
addr16
inc
push
cmp
mov
repz
xor
into
ds
xor
pop
lcall
out
sbb
stos
pop
push
add
mov
cmp
mov
mov
enter
lcall
push
mov
mov
fildll
out
or
fmull
repz
int
ret
mov
and
cmp
repz
xchg
mov
repz
lahf
out
sahf
xor
subl
imul
mov
vpsubb
xchg
inc
push
xchg
jns
pop
je
out
inc
loope
inc
mov
pop
and
jg
dec
sbb
scas
sub
mov
test
stc
add
adc
jg
push
push
mov
xor
adc
mov
lds
mov
das
jbe
mov
loopne
mov
dec
adc
mov
and
jg
jg
pop
sbb
enter
adc
fadds
adc
daa
or
mov
push
cmpsb
add
add
outsl
dec
test
popw
inc
inc
mov
aad
jbe
push
jae
popa
cmpb
adc
jae
daa
inc
sbb
mov
mov
je
addr16
push
cmp
cltd
push
dec
cmp
xlat
push
shrb
inc
mov
add
dec
dec
in
sahf
mov
dec
je,pn
push
ljmp
cmpsb
dec
add
outsb
test
xorps
push
insb
pop
and
pop
scas
push
dec
pop
je
imul
loope
jns
push
fisttps
jp
das
cmpl
outsb
xlat
jbe
iret
or
retw
out
scas
sbb
mov
ja
pop
mov
es
push
push
mov
mov
ds
xchg
inc
rolb
testl
ds
sbb
adc
outsb
xlat
jl
popa
insl
jo
es
insb
je
push
addr16
jle
jo
jae
es
outsl
and
cmpb
sub
and
imull
lods
push
or
pushl
aaa
xor
xor
xor
xor
cmp
cmp
push
xor
cmp
ds
add
inc
push
mov
int3
jbe
or
iret
sub
or
mov
sbb
inc
inc
add
bound
dec
dec
scas
in
cmp
xor
adc
sbb
in
mov
push
xor
cmp
push
cmc
or
sub
and
and
mov
sub
pop
xor
cmp
pop
dec
or
inc
in
mov
sbb
in
dec
inc
scas
mov
fimuls
sub
outsl
push
push
es
xor
mov
add
jnp
xor
cmp
lods
add
or
dec
push
bound
lock
or
js
fsubs
repnz
dec
imul
daa
sub
pop
cmp
pop
xchg
sbb
jg
cmp
fiadds
jnp
inc
adc
es
or
and
or
jbe
or
or
mov
xor
push
cs
repz
pop
sbb
repz
inc
push
cmpl
repz
cltd
ss
dec
repz
xchg
add
pop
push
add
or
jnp
int
adc
adc
sbb
and
sub
xor
fldcw
inc
mov
mov
mov
js
lret
inc
rorb
int
sbb
sub
add
or
fldcw
adc
pop
fldcw
add
add
fwait
int
mov
lret
str
add
insb
and
das
incl
cmpsl
push
push
ret
sahf
adc
test
and
orb
dec
mov
add
insb
or
je
movsl
xor
das
sub
inc
pop
cmp
mov
xor
adc
or
daa
mov
jmp
and
dec
fcomi
inc
subl
js,pt
inc
mov
les
pop
in
push
xor
das
cmp
aaa
gs
push
adc
insb
mov
mov
push
daa
add
insl
mov
stos
insb
dec
les
daa
add
daa
or
pop
lods
daa
jge
adc
ja
pop
insl
add
das
divl
iret
xchg
js
inc
ret
or
fsubl
jmp
nop
fisubrl
jno
mov
das
popa
push
sbb
dec
lods
js
push
das
dec
jnp
xchg
lock
sahf
sbb
js
adc
sbb
sub
repnz
ds
or
nop
mov
ja
dec
roll
sub
rcr
fimuls
mov
scas
adc
cltd
daa
lahf
or
mov
jnp
push
xor
or
int
inc
adc
pop
addr16
loope
lods
pop
jg
test
push
cmpsl
insb
xor
lret
pop
and
jbe
pop
mov
rorb
xor
aaa
xor
mov
outsl
lret
cwtl
mov
add
icebp
insb
add
out
sub
add
js
jl
jl
cmp
add
adc
imul
inc
sbb
jno
lods
test
and
dec
dec
leave
mov
fdivrl
adc
dec
ja
icebp
sub
call
add
push
mov
add
sbbl
cmp
in
test
or
gs
mov
pop
dec
test
je
es
cmp
das
jno
pusha
adc
je
dec
in
or
pop
dec
adc
inc
pusha
inc
adc
push
rcll
nop
sysexit
xor
sub
push
inc
pop
fdivrs
mov
pop
hlt
mov
pop
or
adc
sar
pop
pop
inc
rcll
inc
negb
fnstenv
sbb
adc
xorl
xchg
sbb
jbe
push
lods
pop
or
insb
dec
push
das
ret
scas
dec
pop
push
pop
test
pop
or
mov
pop
add
cmp
insl
sbb
adc
mov
rcrb
das
xchg
leave
sub
xchg
mov
adc
test
inc
scas
add
movsb
xor
mov
or
call
jno
push
or
pushf
adc
adc
dec
inc
inc
jnp
or
data16
aas
insb
jbe
gs
inc
inc
mov
pop
mov
xor
sub
mov
pop
loope
repnz
daa
push
push
sbb
push
dec
push
aas
jbe
sti
cmp
cmp
push
movsb
lods
pushf
imul
cmp
ds
xor
cmp
or
or
fcomps
xor
ds
loop
cmp
dec
aad
lods
sbb
fdivrl
push
sub
bound
sbb
cmp
fs
loop
push
mov
mov
xor
add
pop
sub
xchg
mov
lock
sbb
dec
pop
push
xchg
loopne
jl
dec
adc
xor
pop
inc
hlt
adc
pop
lret
sub
pop
fsubrs
xor
loop
rcl
xor
and
xor
dec
dec
lock
cmpb
push
xor
push
inc
push
adc
adc
insb
pop
aam
icebp
sub
mov
pop
into
cwtl
or
filds
stc
inc
push
mov
xor
jno
mov
pop
pop
ja
and
cmp
or
pop
ret
cmp
add
pop
adc
das
pusha
pop
andb
add
mov
lea
xor
adc
test
xorb
in
pop
imul
and
push
lcall
das
lahf
arpl
addb
push
negl
dec
xchg
loop
sub
imul
sahf
xchg
fs
cmp
adc
lock
xor
add
mov
imul
sar
mov
jo
mov
and
sbb
xor
xor
add
divb
push
cmp
add
inc
das
mov
jge
cmp
adc
push
addb
add
dec
cli
push
outsl
clc
mov
dec
sbb
push
push
pop
pop
sbb
push
jo
sbb
dec
xchg
call
pop
sub
pop
sbb
add
pop
sub
adc
pop
inc
aas
mov
pop
and
adc
add
xor
or
sub
pop
icebp
scas
pushl
pop
cmp
push
or
inc
add
cmp
cmp
or
jg
movsl
sub
and
out
sbb
inc
popa
ljmp
inc
add
dec
add
pop
dec
dec
inc
cmp
xor
xchg
stos
sbb
fidivs
sbb
mov
push
cmp
es
pop
xor
push
dec
ss
ss
dec
adc
add
call
dec
pop
cmp
inc
or
aas
sub
jno
and
loope
js
mov
inc
mov
jnp
push
add
push
ret
lahf
add
pop
push
xchg
or
cmp
mov
add
xor
adc
inc
mov
lret
cwtl
pusha
push
xor
push
jne
dec
call
add
bound
xchg
dec
repz
adc
inc
ds
and
inc
pop
xor
fiadds
cmp
or
hlt
stos
adc
xchg
mov
nop
test
outsl
inc
xor
inc
sub
out
mov
dec
push
adcb
push
lret
add
push
xchg
pop
mov
test
addb
jge
mov
push
push
js
ja
cwtl
add
inc
or
dec
mov
add
orb
outsl
add
mov
inc
aaa
jno
sti
shlb
ret
icebp
adc
pop
movsb
incl
sbb
cwtl
stos
pop
fadds
pop
adcl
test
and
jge
push
je
mov
andb
fcompl
shrl
xchg
out
popf
rorl
mov
jmp
dec
fdivr
ljmp
stc
jbe
push
ds
insl
xor
jg
mov
inc
xchg
cmpsl
aad
fcomip
jmp
push
sub
adc
or
cs
insl
sub
adc
jae
gs
mov
leave
ret
sub
xchg
mov
data16
mov
call
jmp
cltd
test
push
push
shll
ja
daa
mov
mov
mov
sbb
mov
fmuls
lret
rep
cs
arpl
test
add
decl
insb
push
movsb
mull
jno
addr16
push
scas
addr16
cmp
dec
pop
jg
movsl
jg
push
mov
fwait
stos
flds
pop
xor
das
push
cli
incl
popa
sub
push
add
aas
cmp
sub
inc
jg
push
and
xor
pop
ja
cmp
pop
push
jnp
xor
cmp
dec
dec
inc
dec
sub
pop
or
jbe
xor
or
bound
jb
gs
js
pushl
outsb
push
push
outsl
aaa
jge
dec
inc
xor
push
inc
lock
pop
or
or
adc
sub
xor
and
popa
sub
sub
and
dec
and
daa
hlt
xor
cmp
and
int3
push
mov
ja
movsb
cmpsw
out
dec
ja
neg
or
dec
daa
add
and
and
aas
sbb
xor
pxor
xor
cs
aaa
xor
bnd
xor
inc
add
xor
xor
lret
in
push
inc
add
inc
pop
inc
popa
out
jle
xor
and
aaa
inc
push
inc
cs
lcall
inc
add
push
pop
pop
pop
cmpsl
ss
and
test
stos
clc
fadd
and
or
or
inc
push
or
and
ret
test
mov
cli
in
cmpsl
add
bound
adc
adc
inc
push
jp
mov
fistpl
dec
xor
arpl
rorl
or
or
push
out
or
in
fdivrl
xchg
repnz
cld
pop
loop
daa
pop
pop
sub
orb
mov
bound
mov
les
sub
or
sbb
mov
adc
xor
jmp
sbb
push
jp
addr16
cmpsl
add
inc
and
mov
sbb
add
adc
sbb
jp
push
inc
jnp
push
mov
mov
sbb
je
loope
stos
fcomp
adc
addr16
sub
push
jl
int3
daa
mov
inc
mov
dec
sbb
and
adc
or
inc
push
sbb
xor
push
push
inc
mov
jle
std
mov
rorl
dec
dec
dec
and
nop
sbb
and
movsb
or
sbb
xchg
in
add
jb
popf
add
or
test
rclb
push
in
lods
xor
sub
mov
js
add
add
jle
mov
fs
xor
and
inc
loope
fmuls
arpl
cmp
enter
sahf
cmp
int3
enter
add
mov
lds
push
mov
or
or
adc
test
bound
shrb
jbe
imull
je
xor
js
mov
fisttps
jbe
jae
popa
insl
gs
pop
sub
fwait
mov
xor
lret
jae
addl
and
xchg
scas
mov
pushl
insl
loop
pop
push
push
out
xor
dec
sar
fsubr
inc
outsl
insb
dec
push
popa
je
inc
icebp
sub
sub
inc
or
ret
mov
cmp
adc
and
add
mov
push
rcrb
mov
icebp
pop
sub
or
dec
stos
enter
or
add
in
orb
pop
and
push
test
movsb
lret
movsb
pop
adc
pop
fstpl
push
insl
add
dec
mov
dec
daa
sbb
iret
and
jo
fwait
mov
sbbb
dec
pop
insl
cmp
push
mov
int
rcl
dec
ds
imul
jle
sbb
inc
sahf
jae
lock
lds
pop
sbb
sbb
mov
pop
mov
mov
push
pop
repnz
ds
sub
lock
pop
sbb
mov
fs
dec
or
push
ja
pop
les
call
pop
xchg
dec
add
jae
inc
jne
incb
imul
out
scas
inc
xor
rorb
jecxz,pn
negl
push
mov
mov
fisubrl
xor
test
aad
pop
daa
add
nop
jns
adcl
call
call
bound
enter
lret
push
or
jg
jbe
jo
lret
and
cs
or
xor
stos
push
outsl
imul
fwait
lods
dec
sbb
mov
test
pop
pop
dec
pop
lgs
scas
adc
sbb
cmp
push
aas
pushf
incb
inc
mov
das
stos
inc
xorb
or
movsl
mov
pop
pop
out
lea
inc
loop
aas
dec
call
dec
cmp
loopne
in
cmpsb
dec
sub
jmp
inc
inc
adc
gs
iret
dec
pop
adc
lds
data16
pop
sbb
lods
push
dec
add
inc
outsl
sbb
add
ljmp
xor
push
fimull
and
adc
add
dec
dec
popf
aam
shl
imul
inc
push
fsubs
push
lret
pop
pop
pop
aas
pop
sbb
push
outsl
int
fiadds
dec
pop
pop
pop
and
daa
loopne
mov
mov
dec
outsl
jae
mov
movsl
repz
pop
mov
out
push
test
pop
adc
test
cmp
pushf
xor
test
icebp
xchg
mov
mov
add
pop
inc
gs
adc
push
jge
sub
mov
ret
and
sub
sub
inc
dec
add
out
mov
pop
inc
and
inc
sub
dec
and
cmp
add
in
out
jbe
test
pop
aaa
jmp
push
push
pop
pop
pop
filds
pop
shrb
fs
inc
notl
dec
jae
push
popa
insl
insl
outsl
dec
outsl
data16
movzbl
imul
imul
dec
outsb
push
je
scas
pop
inc
loopne
mov
insb
pusha
std
jg
mov
push
inc
dec
push
inc
pop
push
dec
inc
dec
inc
push
pop
dec
sub
push
mov
jb
gs
dec
adc
std
js
cmovae
pusha
rorl
daa
dec
jo
popf
loopne
dec
jb
inc
inc
inc
sbb
aas
dec
mov
clc
inc
addb
sbb
mov
or
mov
sub
or
sub
sti
loopne
lahf
add
test
flds
shlb
mov
ja
add
ret
jb
push
adc
cltd
fdivs
push
xorl
xor
add
push
sub
out
push
daa
or
lock
cmp
inc
sub
int3
adc
aam
and
sbb
sbb
cmpsb
xchg
mov
and
xchg
out
adc
sbb
and
adc
dec
mov
mov
adc
or
sbb
push
cmc
mov
dec
sbb
fmuls
add
push
cmp
icebp
fwait
dec
pop
fcomps
fistps
arpl
and
stos
pusha
mov
dec
stos
outsb
push
jo
pop
sub
insb
pop
push
push
add
xchg
inc
outsl
inc
fisttpl
sbb
mov
loopne
mov
push
icebp
adc
dec
lods
sbb
or
lods
push
fcmovbe
outsl
or
fdivr
pop
pop
insb
inc
add
inc
add
sbb
mov
mov
inc
xor
jbe
mov
mov
dec
outsb
pop
jbe
add
dec
inc
xadd
es
and
cmc
inc
pop
mov
dec
loopne
cmovo
idivb
cmp
mov
jo
dec
sarl
maxps
dec
add
les
cmp
inc
rclb
mov
out
add
popa
outsb
jnp
les
aas
add
cmp
push
addr16
movsb
hlt
scas
sub
scas
daa
add
jne
or
outsl
rcr
lock
push
aaa
pop
lahf
add
daa
mov
or
push
cwtl
movsb
pop
pop
add
mov
sbb
pop
in
push
sbbl
outsl
nop
sbb
leave
xchg
pop
leave
inc
inc
cmp
pop
xor
sub
pop
leave
xchg
sub
add
clc
int
ret
sbb
cwtl
push
push
enter
jecxz
cmp
dec
call
iret
mov
mov
xor
out
adc
pop
sbb
jns
repz
in
xchg
je
pop
pop
sahf
pop
cmp
cmp
pop
ds
pop
push
je
jl
out
add
pop
int3
mov
pop
sub
iret
sarl
push
sbb
int
sbb
push
sub
and
es
jae
adc
out
dec
xchg
inc
mov
fsubs
mov
push
shrb
imul
iret
xchg
xor
pop
or
add
popa
ret
xchg
cmp
lock
sahf
testl
out
xchg
arpl
sub
mov
pusha
ffreep
inc
jg
jg
jne
scas
je
test
push
xor
add
dec
mov
cltd
in
push
add
inc
and
xor
mov
jl
cmp
dec
outsl
add
xchg
or
filds
sbb
inc
cs
nop
mov
lods
outsl
fists
cmp
cmp
dec
sahf
negb
ss
add
and
filds
push
je
pop
and
mov
add
push
sub
orb
nop
xor
pop
mov
addr16
pop
in
pop
pop
xchg
or
roll
scas
add
or
and
pushl
and
jb
xor
leave
jae
pop
shlb
ficompl
les
outsl
sub
push
loopne
insb
lock
int
aaa
fcomps
sbb
cmc
dec
sahf
out
xor
pop
iret
repz
fs
clc
push
jl
push
sub
xchg
andb
roll
ja
mov
sub
adc
jg
xchg
push
xor
sub
filds
pop
push
push
imul
mov
sbb
outsl
and
add
jo
push
cwtl
sbb
and
test
clc
push
xor
scas
add
sub
add
add
push
jne
add
xchg
cmpsl
and
push
aaa
push
xor
and
repz
sbb
leave
mov
or
add
in
nop
ss
cmpsb
mov
cmpsb
pusha
mov
sub
push
insb
popa
jbe
clc
push
xor
lcall
rclb
add
xchg
xchg
push
push
pusha
dec
xchg
rorl
xor
pop
and
and
jb
imul
repnz
sbb
push
popa
pusha
popa
outsl
push
mov
mov
push
outsl
jg
inc
pop
cmp
pop
mov
daa
rcl
nop
scas
sahf
push
cmp
mov
push
add
call
cmp
and
adcb
or
adc
cmpsb
push
xor
and
rorl
insb
bound
mov
or
popa
push
out
shlb
scas
add
je
push
fst
or
arpl
movsb
fs
lahf
adc
or
and
cmp
pop
add
rorb
arpl
add
and
pop
leave
fwait
loopne
add
add
sbbl
fiadds
push
mov
adc
aaa
mov
cmpsb
xchg
or
aaa
inc
sub
adc
add
mov
or
add
and
shlb
cs
add
gs
sub
fcoms
mov
xchg
inc
mov
or
cmpb
inc
dec
scas
addr16
add
xchg
or
int3
add
sub
das
and
and
push
jb
jne
addr16
outsl
add
or
sub
or
fs
adc
and
ss
adc
lods
data16
add
inc
dec
and
in
mov
xor
cmpsl
add
sub
mov
dec
xchg
add
add
daa
push
dec
scas
jbe
out
mov
or
lods
in
setbe
push
inc
xchg
push
hlt
imul
sahf
dec
sub
push
movsl
cmpsl
cmp
xor
or
cmpsl
cwtl
xchg
sub
repnz
scas
aas
or
push
movsb
push
test
movsb
xchg
pop
or
inc
cs
hlt
add
in
cltd
adc
hlt
and
popl
mov
add
sbb
nop
scas
push
mov
scas
add
int3
outsl
out
mov
add
add
andb
inc
enter
pop
or
mov
dec
sub
or
jns
pop
leave
add
test
les
aam
imul
cmp
outsb
loopne
and
inc
xlat
or
test
pop
cmp
daa
xor
orl
es
imul
push
inc
insb
mov
imul
mov
or
ja
jbe
xor
inc
aam
mov
outsb
mov
pop
add
aaa
and
push
and
add
mov
xlat
data16
push
das
pop
outsb
repnz
in
jo
orb
addr16
pusha
ret
pusha
aas
pop
out
pusha
jne
outsl
mov
sbb
push
lock
or
cmp
mov
sarl
out
jp
jge
repz
repz
fildl
jnp
push
pop
iret
repz
subb
out
lcall
sarl
push
inc
outsl
mov
jle
out
ds
lcall
sarl
in
jo
iret
repz
shl
orl
mov
imul
notb
test
jl
out
jge
add
daa
out
cmp
push
xchg
ret
xchg
out
sahf
dec
mov
in
xchg
iret
repz
lods
xlat
or
jns
scas
push
mov
jns
out
lcall
ds
repz
mov
or
pop
jg
lea
sarl
faddl
jbe
out
lcall
mov
loope
xchg
push
mov
lcall
fisubl
imul
out
xchg
jo
ja
out
fbld
xchg
cmpsb
push
idivl
xchg
ds
repz
xorl
lock
daa
lcall
sub
cmpsl
stc
sbb
jge
iret
shll
ss
dec
repz
sahf
push
jl
pop
mov
jns
mov
cmp
repz
lock
out
repz
mov
shl
jns
out
cmpsb
dec
mov
sbb
push
or
inc
jg
iret
repz
and
std
dec
dec
repz
stos
xchg
lahf
cmpsl
stc
cmp
aaa
lods
pop
cmpsb
push
lods
sahf
cmpsl
stc
xor
adc
iret
sarl
push
int
cmp
jl
out
mov
jl
out
scas
sub
imul
xchg
adc
out
xlat
cwtl
mov
mov
repz
mov
lcall
shrl
shll
xor
insb
repz
out
or
cmp
sahf
out
les
pop
lds
imul
xchg
stc
out
jge
int3
out
inc
lret
ds
sub
stc
xor
cmpsl
inc
rcrl
aaa
sarl
cmpsl
mov
rorl
aam
addr16
es
out
pop
mov
jmp
dec
add
push
sbb
outsb
mov
testb
pop
add
push
add
and
add
or
out
dec
test
sub
leave
repz
popf
pop
insl
jne
sbb
jmp
pop
paddq
cs
cmp
mov
and
and
inc
fwait
push
and
adc
inc
es
sub
aaa
movups
push
mov
scas
or
ja
or
pop
cmp
push
sbb
aaa
push
loop
pop
enter
test
out
fiaddl
pop
dec
pusha
mov
fs
jg
fs
bound
mov
fidivrl
aas
rorb
das
jbe
dec
orb
mov
push
movsl
pop
mov
iret
adc
ss
mov
test
daa
fimull
loopne
fs
pushf
imul
jmp
rcr
and
int
dec
out
ss
aas
shl
adc
or
adc
push
iret
jne
or
xor
call
push
mov
inc
mov
add
mov
aaa
fnsave
shlb
inc
dec
push
add
pop
mov
roll
inc
inc
push
dec
push
dec
adc
mov
mov
aad
in
push
add
lahf
or
sahf
xchg
xchg
sbb
ja
or
or
setp
adc
sarb
outsl
fs
jae
flds
jg,pn
inc
sti
push
pop
push
jmp
jb,pn
jg
push
pop
mov
iret
test
popa
aas
adc
xchg
adc
ja
adc
inc
cmp
mov
in
in
cwtl
pop
pushf
sbb
cmp
mov
sub
add
das
outsl
mov
jb
inc
hlt
js
js
jns
stos
popa
add
push
leave
add
mov
push
inc
leave
enter
jns
jns
jo
aad
iret
cmc
jnp
or
repnz
mov
jns
jns
in
jnp
push
add
das
mov
xchg
jnp
daa
jp
pop
leave
jae
push
push
add
pop
leave
and
push
leave
pushf
arpl
cmp
mov
call
mov
inc
jnp
cmp
mov
mov
dec
cwtl
es
jnp
ja
push
push
iret
sbb
outsl
cmp
pop
sbb
jg
add
dec
xchg
dec
sahf
add
cltd
popf
or
insb
push
jl
add
jl
scas
iret
leave
xchg
cmp
movl
and
mov
xchg
pushf
add
adc
in
daa
lcall
out
sahf
aaa
mov
rcrl
faddl
out
repnz
out
or
out
dec
and
les
nop
and
jns
jge
jge
jge
in
cmp
add
in
jle
jle
jge
insb
push
addr16
xor
mov
jb
cmp
test
add
into
sahf
ja
jb
fsubp
cmpsb
add
xchg
out
jns
stc
push
in
xchg
and
pop
jle
jle
jle
cmp
aaa
jle
jle
jle
jg
pushf
dec
and
jb
xchg
pushf
pushf
pushf
orb
and
bsr
outsb
pop
int
aad
fstpl
in
data16
xchg
out
loopne
jg
add
cmpb
ss
mov
dec
jg
push
jg
xchg
xlat
cs
out
push
and
xchg
sbb
sbb
repnz
lock
add
subb
das
nop
dec
es
orb
push
adcl
adcl
adcl
les
and
push
push
push
lock
lods
mov
daa
ja
add
push
jb
in
addb
sbbb
mov
cmpsb
mov
sbb
add
imul
inc
add
lahf
lds
addl
daa
xor
subl
ds
jb
xchg
addl
jnp
mov
dec
das
subl
or
jne
or
lret
daa
or
stc
addl
lret
or
pop
andb
sub
lret
cmp
pop
push
or
cmp
repz
jp
repz
or
or
iret
repz
cmpsb
adc
repz
iret
repz
adc
adc
imul
sbbl
xorl
test
add
cltd
dec
je,pt
add
and
add
dec
dec
cmc
xchg
subl
aam
mov
adc
xorb
cmp
sbb
scas
in
sub
sbb
lods
pushf
cmp
or
mov
test
xchg
test
fildl
xchg
daa
jp
cmp
test
outsb
and
mov
push
mov
cmpxchg
adc
mov
lock
shrl
scas
and
dec
xorl
add
adc
add
cmp
mov
adc
sub
dec
test
mov
out
daa
jp
add
mov
pop
aas
ja
lret
lds
addb
decl
push
pushf
mov
imul
dec
adc
ljmp
or
and
cmp
leave
and
outsb
xchg
mov
je
in
and
pop
jmp
mov
push
jb
pop
mov
xchg
dec
test
push
xchg
pop
add
and
sbb
pushf
xchg
dec
iret
iret
addr16
xor
in
repnz
std
js
mov
pushf
xchg
adc
mov
xchg
mov
mov
pop
loope
jb
mov
pop
orl
mov
leave
leave
inc
repnz
fnsave
leave
decb
push
mov
jbe
inc
xor
enter
dec
leave
or
adc
lea
adc
mov
cmpsl
mov
xchg
mov
repnz
adc
mov
lds
int
aad
fisttpll
repnz
mov
mov
mov
repnz
mov
repnz
mov
dec
dec
dec
mov
or
dec
dec
dec
or
or
dec
dec
dec
dec
pop
push
add
dec
add
add
and
dec
xchg
outsl
mov
in
push
cmpsl
fwait
mov
cmp
push
dec
es
iret
add
jecxz
add
xchg
cmp
mov
mov
xchg
addr16
mov
push
dec
arpl
movsb
xor
jle
cmp
fistl
xlat
mov
ja
lea
mov
aas
loope
iret
repz
sahf
push
jmp
or
xor
lahf
or
and
mov
outsb
sahf
cmp
cmovl
and
ja
push
jae
into
inc
lcall
adc
push
btr
popf
pushf
ret
or
ljmp
or
and
cli
das
fimull
cmovle
adc
les
test
scas
daa
mov
pop
ficompl
aas
jo
jne
or
pop
fmul
mov
inc
or
mov
push
and
call
fistps
lea
and
lea
xchg
fildl
jns
sahf
out
mov
pop
xchg
cs
add
dec
test
and
pop
and
push
add
repnz
mov
decl
mov
mov
mov
sub
mov
mov
mov
outsb
ja
je
rcll
movsb
ja
jb
scas
mov
out
sahf
push
fildl
out
icebp
pop
and
sahf
pop
adc
ja
push
or
or
push
cs
cmpxchg
and
mov
mov
pop
mov
jbe
pop
lret
push
rcr
ljmp
psllq
out
js
push
nop
pop
pop
ror
sbb
out
fdivs
rcrb
sbb
add
and
gs
xchg
sub
cmpsb
xlat
mov
je
add
in
mov
xchg
dec
leave
or
fdivrl
in
xchg
cltd
mov
pop
nop
jg
leave
xor
add
add
in
xchg
pop
and
insb
xchg
xchg
push
jb
fnsave
insl
movsb
scas
cld
nop
xchg
and
popl
setno
xchg
jbe
cmp
sub
xchg
in
in
fs
bound
aas
jno
pushf
ljmp
xchg
and
pop
ds
or
mov
fists
out
push
addr16
enter
adc
xchg
es
iret
in
sub
dec
repnz
push
popa
ja
pop
sahf
fcmovne
inc
xchg
lahf
filds
xchg
cmp
mov
xchg
in
in
das
out
icebp
xchg
cld
xchg
in
in
pop
xchg
adc
xchg
insb
loop,pt
xchg
outsl
or
cwtl
mov
jnp
xchg
jmp
xchg
jp
xchg
xchg
and
xchg
nop
xchg
fwait
adcl
lret
jl
sahf
or
or
cltd
mov
xor
add
xchg
and
xchg
sub
aaa
xchg
data16
inc
xchg
dec
xchg
pop
xchg
testl
rcrb
in
and
push
mov
js
mov
out
fbstp
movsb
or
and
lgdtl
loopne
push
xchg
mull
jae
dec
and
add
leave
push
mov
das
pop
xchg
addr16
nop
jl
movb
pop
cltd
fcmovbe
fnsave
dec
push
cmp
cmp
add
adc
xchg
jg
cmpsl
cwtl
je
out
add
inc
idiv
mov
mov
jns
leave
repz
or
ud2
fbld
les
xchg
aas
jb
pop
leave
push
pushf
sbb
shll
cmp
xchg
in
ja
push
and
sub
leave
push
pushf
daa
movsb
xchg
mov
lods
xorb
xchg
cmp
xlat
filds
mov
jns
cwtl
or
popf
mov
add
xchg
push
scas
sahf
xchg
mov
jl
jg
sahf
scas
fisubrs
jb
cwtl
cwtl
bswap
push
add
pop
aaa
jns
push
scas
fcomps
loopne
call
repnz
cltd
iret
adc
repnz
cmp
inc
cltd
dec
cltd
push
cltd
pop
cltd
in
repnz
jnp
pushf
pushf
fdivrl
or
pushf
pushf
pushf
pushf
pop
push
add
pushf
add
sbb
sbb
cmp
repz
mov
sahf
outsb
repnz
and
dec
lret
and
and
js
push
jecxz
sub
lahf
daa
cmp
push
lcall
cltd
push
arpl
imul
push
jae
in
xchg
xchg
lcall
xchg
out
mov
aas
in
repnz
into
shufps
iret
in
mov
icebp
enter
stc
jg
add
or
sbb
and
cmp
inc
fwait
xchg
fbld
out
cmp
add
mov
iret
or
mov
fldt
das
int
aad
aad
fldl
daa
daa
in
shlb
pop
dec
stc
inc
cmpsl
or
mov
bound
pushf
in
repnz
daa
add
mov
cmp
pushf
push
pushf
pop
pop
arpl
popf
in
add
imul
add
push
in
mov
test
pop
movsl
aad
add
mov
push
pop
mov
cmp
out
in
inc
repnz
ja
rclb
popf
xchg
addr16
sbb
adc
andb
adc
pusha
popf
out
jns
aaa
jb
popf
jl
add
add
cwtl
pop
push
sarl
lods
ljmp
cli
lar
outsb
and
bndldx
sub
out
or
or
inc
cmp
repz
dec
or
or
repz
bound
push
jmp
jp
scas
adc
in
repnz
cmp
pop
out
movb
pop
popf
cmp
add
mov
xchg
pop
loopne
inc
movl
sahf
fucomi
gs
push
lahf
fists
pop
push
add
pop
aaa
jns
push
scas
cs
xchg
pop
lds
sub
dec
cs
push
je
cs
dec
movsb
fadd
mov
rcrb
or
mov
aam
icebp
addr16
or
or
sub
add
add
pop
cmpsl
and
fwait
xchg
or
mov
pop
push
lahf
push
fwait
cmp
jns
add
add
pxor
loopne
add
outsl
ja
or
pushf
cmp
cwtl
or
mov
inc
or
mov
lret
push
add
fistpl
pop
jmp
add
xchg
cmpsl
pop
sti
add
jb
shll
adc
scas
sbb
divb
sub
xor
inc
mov
dec
mov
rep
and
outsb
mov
add
repz
xchg
add
repnz
cmp
pop
in
inc
out
leave
rcr
pop
push
decl
and
add
std
mov
push
and
dec
push
sbb
stc
inc
out
nop
push
sub
test
insl
jmp
pop
mov
data16
incl
push
subb
mov
lea
inc
stos
stos
pushf
dec
and
inc
mov
pushf
pushf
rcr
loopnew
push
leave
jae
call
push
mov
jecxz
sub
sbb
daa
cmp
enter
mov
repz
in
mov
add
gs
jo
jnp
cmp
repz
or
iret
repz
hlt
cmp
mov
shll
fisubs
dec
mov
movsb
sub
push
rorb
mov
sbb
bound
movsb
sbb
jb
jb
jp
andb
xchg
push
pop
lcall
and
fsubrs
or
pop
dec
dec
mov
daa
daa
daa
daa
out
idiv
pop
sbb
loop
movsl
pop
push
pop
shld
movsl
hlt
faddl
pop
movsl
daa
comiss
scas
aaa
movsl
shrd
movsl
aaa
bound
loopne
jb
jp
das
movsl
add
pop
mov
xchg
int
mov
in
mov
mov
loop
sbbb
pop
rorb
movsl
cmp
adc
in
test
subb
scas
pop
nop
insl
aaa
pushf
xor
jmp
pop
sti
pop
daa
stc
jmp
push
aas
push
pop
add
or
cmpsb
mov
pop
push
aas
push
cmpsl
stc
pushf
mov
inc
pop
sbb
in
and
jns
and
in
addl
lds
add
xchg
dec
xchg
xlat
orb
xchg
pushf
andb
cmpsl
das
adc
ss
add
ja
cmpsl
pop
dec
dec
cs
imul
pop
ja
sahf
xchg
das
pop
xor
cmpsl
lret
cmpsl
cmp
dec
out
loopne
jmp
mulb
add
jae
jns
test
add
mov
popf
xchg
mov
pop
psubsb
test
ja
push
adc
pop
test
fsubl
and
mov
mov
daa
mov
xchg
in
cmc
paddw
test
pop
lar
mov
negb
jb
inc
inc
test
inc
xor
pushl
test
pop
and
outsb
movzwl
shrl
addr16
in
sbb
inc
sbb
shll
stos
dec
push
xchg
movsl
ret
data16
in
in
mov
ja
pop
and
add
cld
jno
pop
push
ljmp
psubd
adc
push
and
ss
outsb
mov
stos
stos
addr16
push
iret
leave
lods
fistpl
lidtl
add
pop
es
repz
or
pop
xor
sysret
jbe,pn
jle
andb
js
repnz
xor
inc
inc
mov
cmp
xchg
xchg
add
pop
mov
in
cltd
pushf
add
lods
daa
daa
inc
or
out
idivl
pop
lods
syscall
sahf
cmp
in
pop
sysret
pop
daa
lods
dec
cmp
test
mov
lahf
pop
mov
mov
cmp
dec
jne
lods
inc
pop
popa
mov
mov
adcl
aam
stc
adc
add
ljmp
dec
sbb
or
mov
lods
inc
cmovle
dec
push
add
data16
mov
push
pop
mov
or
push
pop
ds
lods
jg
lods
jle
mov
lods
lods
scas
pop
mov
sahf
xchg
out
mov
xchg
out
push
fsubp
pmaxsw
cmpsb
lods
pop
sbb
outsb
xchg
inc
bnd
inc
inc
mov
xlat
jmp
scas
sbb
scas
push
outsl
mov
fs
pop
shll
adc
scas
fildll
cmpsb
xchg
mov
scas
in
repnz
mov
inc
fidivs
or
ret
inc
cmc
lret
cmpsl
jle
pop
mov
add
jo
inc
xchg
or
or
pop
adc
dec
dec
cs
cmc
std
add
repz
mov
adc
dec
inc
dec
ja
mov
lahf
insb
scas
pop
je
jns
fldt
je
pushf
je
out
lods
sidtl
out
jb
mov
lds
xchg
jl
mov
daa
js
push
and
addr16
pop
push
aas
sbb
adc
adc
xchg
out
jns
addb
or
mov
mov
fildl
mov
fcoml
or
adc
sbb
pop
and
lds
add
scas
xor
xchg
divb
inc
mov
or
mov
outsl
emms
iret
jg
cmp
in
xchg
xchg
push
push
lahf
loopne
movsb
fwait
add
scas
xchg
out
push
cmpsl
or
lret
add
mov
fidivl
in
push
iret
repnz
lar
scas
or
push
or
adc
nop
pmuludq
mov
and
inc
xor
leave
int
andnps
add
mov
cmp
jns
nop
add
outsb
mov
xadd
leave
outsl
rorl
fnstcw
fsub
jns
or
push
mov
in
add
mov
adc
sbb
and
sub
pushf
pushf
fmull
ss
pop
pushf
pushf
pushf
pushf
sbbb
pushf
pushf
lret
in
add
inc
and
das
jge
iret
repz
test
cmp
fstps
iret
cmp
loope
jmp
popl
and
dec
and
mov
cltd
inc
fsubrs
fcmovne
xchg
xor
jb
jge
mov
add
sarb
lret
fnstenv
mov
das
push
add
cmp
mov
mov
mov
inc
mov
mov
mov
mov
xchg
cmp
xchg
mov
mov
lods
shlb
jb
mov
test
mov
dec
mov
pop
mov
push
dec
sbb
aas
and
mov
mov
mov
mov
mov
cmp
mov
or
push
or
mov
jns
mov
push
into
mov
push
ja
push
shrl
pop
in
in
mov
mov
nop
fdivl
lret
rcrl
bsf
add
mov
and
ds
inc
mov
pop
mov
mov
jbe
jle
cld
sub
mov
setg
stos
mov
ret
repz
push
int
aad
loopne
iret
repz
call
lcall
and
out
es
sbb
and
sub
iret
repz
aaa
sub
mov
in
cvttps2pi
cs
cmpsb
xchg
iret
enter
and
jge
popf
out
pop
jne
repnz
add
cltd
push
cmp
sarb
xchg
rcrb
mov
mov
arpl
add
mov
xor
xor
sub
inc
inc
repnz
dec
ja
pushf
dec
sahf
fcmovne
jo
filds
fsubrs
cmp
mov
lds
cmp
out
push
mov
movups
daa
pushf
fmull
add
push
jns
leave
repz
or
mov
out
je
pop
mov
adc
repnz
ret
adc
fptan
cmp
iret
push
in
sbb
fsts
add
out
jns
sbb
jns
xchg
cmp
and
mov
jmp
lds
mov
fs
enter
out
pop
mov
leave
cmp
jae
leave
leave
leave
mov
leave
repz
adc
rorb
jns
cmp
loop
ljmp
es
bound
fsubrl
dec
mov
pop
sbbb
into
out
repz
and
adc
and
mov
daa
iret
jae
sub
pcmpeqd
leave
repz
jle
xchg
imul
cmp
mov
pandn
iret
rorl
add
clts
out
pop
jg
in
ds
repz
das
xadd
push
or
repz
ds
comiss
aaa
aas
push
adc
leave
repz
dec
push
adc
lar
pushf
out
pop
pop
addr16
pop
test
sbb
outsl
lcall
pop
sbb
leave
sbb
leave
enter
into
shlb
and
lcall
fisubs
daa
sarb
rorb
sarb
inc
inc
mov
rcll
int
or
leave
mov
lahf
rorl
in
jb
push
xchg
pop
add
cmp
jnp
jnp
xchg
fwait
xchg
test
sahf
pushf
pop
mov
cmp
daa
mov
fsubp
out
push
pop
leave
jae
testb
sbb
mov
xchg
ret
sub
ja
xor
jae
cltd
dec
dec
push
xchg
daa
iret
add
in
in
jb
seta
jo
cmpps
out
jb
ficompl
loop
ljmp
cli
add
lea
and
jae
sysexit
ja
fs
ret
cmp
push
cmpsl
js
addb
leave
inc
repnz
fcmovne
mov
xchg
jp
cmp
test
shlb
pop
mov
jbe
and
xchg
push
das
xor
cmp
jae
cmp
inc
dec
add
daa
pop
les
popa
les
filds
mov
pushf
fbld
mov
ffreep
pop
int3
decb
aam
daa
fisttpll
jns
div
cmp
daa
pop
lds
lds
lds
into
xchg
cmp
inc
lds
dec
inc
dec
push
pop
fisttpll
xchg
sarb
lea
cmp
movsl
push
mov
mov
or
enter
pop
jo
cmp
repz
sti
mov
pop
xchg
iret
addr16
enter
pop
ds
jae
cmp
inc
dec
add
daa
pop
inc
leave
out
jbe
mov
xor
sbb
daa
adc
xlat
movb
pop
out
iret
lods
sarb
adc
out
es
add
syscall
inc
jns
pop
movsb
push
outsb
dec
push
jns
jns
insl
js
add
hlt
jbe
cltd
movsb
pop
scas
outsl
mov
mov
out
xchg
xchg
xchg
icebp
cld
movl
xchg
xchg
enter
enter
insl
xchg
xchg
xchg
enter
enter
jb
rorb
sbb
jb
jb
sbb
push
iret
jae
jb
adc
push
pushf
pushf
pushf
cmp
orb
xor
repz
mov
ret
xor
fdivs
jecxz
out
imul
cmp
cmp
repz
sbb
cmp
cmp
out
jns
push
inc
pop
pop
inc
jae
jns
addr16
jb
js
inc
xchg
dec
sahf
dec
test
dec
mov
pop
lret
in
aad
jmp
mulb
dec
rsqrtps
lret
out
in
and
loopne
lahf
pop
fcom
mov
sub
lret
mov
ficoms
in
lret
mov
and
into
lret
in
das
aas
jecxz
out
lret
filds
jb
inc
fistps
lret
es
xor
sahf
out
sbb
lret
inc
push
adc
out
pop
pop
push
sahf
out
jle
mov
sahf
out
sahf
xchg
sbb
sbb
out
mov
shlb
repz
cmp
push
and
and
xchg
xchg
daa
iret
and
add
or
sbb
sub
jbe,pn
cmp
sub
sub
dec
movntq
out
das
xor
in
sahf
xor
xchg
iret
pushf
xor
pop
cmp
iret
jae
cmp
sarl
cmp
iret
repz
jmp
repz
aas
decl
int
adc
and
sub
ss
js
sahf
inc
inc
dec
inc
ficoms
jb
stc
mov
rcll
cmp
push
add
mov
enter
lahf
fcmovnbe
fisttps
cmp
repz
add
mov
inc
ss
into
and
cmp
scas
or
ds
call
sbb
cmp
push
daa
sub
popa
into
push
dec
inc
mov
jno
pop
add
mov
clts
xchg
dec
dec
dec
dec
cltd
mov
and
jg
into
push
pop
pop
fsub
ret
leave
add
hlt
cld
lahf
cmp
bound
iret
into
fists
ja
leave
imul
dec
aas
daa
inc
iret
dec
iret
push
iret
sub
addr16
push
bound
fnstcw
fmul
aaa
in
mov
stos
pop
stos
mov
repz
in
rorl
pop
xlat
or
repz
loop
in
or
leave
in
fs
rorb
sbb
and
cmp
leave
das
cmp
inc
iret
cmp
pushw
jns
ja
jno
push
sbb
out
sbb
daa
fisttpll
sbb
mov
jns
leave
repz
aam
and
aaa
jnp
cmp
pmaddwd
shrl
push
cmp
dec
sahf
daa
push
and
sub
jg
dec
and
insl
shll
cmp
repz
add
jns
leave
xchg
sahf
push
add
test
sbb
xchg
xchg
rcr
add
inc
iret
sbb
sbb
and
push
das
xchg
outsb
repnz
cmp
add
or
shlb
in
pop
shlb
jno
seta
rolb
dec
sahf
out
push
adc
cmp
repz
leave
sbb
sbb
iret
mov
ljmp
es
push
and
out
in
daa
push
push
and
sub
and
aaa
es
adc
pop
iret
repz
arpl
push
add
outsl
add
outsb
jmp
dec
sar
push
dec
inc
add
sub
faddl
jmp
mov
pop
add
shll
pop
ret
add
cmp
mov
pmaxsw
das
stc
roll
jecxz
adcb
fsubrl
insl
stos
outsl
aaa
jg
aam
gs
in
aam
aam
aam
out
sahf
jle
mov
dec
aaa
jns
xchg
or
adc
mov
rcl
out
jns
aam
aam
loope
in
mov
aam
fcoml
aad
jae
js
push
mov
mov
and
dec
aad
push
maxps
fisttps
mov
cmp
mov
in
in
mov
pop
iret
dec
aaa
jns
or
repz
daa
lret
fnstsw
daa
iret
push
call
popf
mov
or
adc
adc
jns
out
das
and
sub
xor
xchg
out
cmp
scas
dec
sbb
pop
sbb
push
sbb
pop
cmp
xchg
jmp
cmp
repz
pop
pushf
cmp
into
or
in
out
insl
in
outsb
psubd
or
xlat
adc
xchg
xchg
xchg
fistpl
pop
xor
jns
xchg
inc
push
adc
adc
push
jle,pn
sahf
out
sbb
iret
mov
mov
push
rol
iret
repz
lret
and
pop
and
call
xlat
pushl
xlat
add
mov
iret
jae
cmp
and
sub
sahf
out
daa
inc
cs
lret
repz
gs
xor
fcomps
jo
jnp
cmpsl
in
in
dec
mov
mov
cwtl
loop
fdivr
cmp
lcall
or
add
push
sub
mov
cmpsl
pop
adc
cmp
adc
or
pop
aas
inc
push
jge
je
push
pop
cmp
movsl
adc
cmpb
pop
sbbl
or
aaa
cmp
jns
push
push
add
iret
repz
sbb
jbe
repnz
or
or
mov
mov
or
adc
adc
adc
and
daa
mov
pop
inc
inc
push
addr16
in
jbe
push
xorps
repnz
shrl
jo
jb
mov
andb
cmpb
mov
pop
xchg
sub
mov
xchg
sahf
mov
ret
xchg
fildl
sbb
mov
dec
or
sbb
push
mov
cmp
repz
push
push
xor
and
repz
and
adc
cld
call
lock
jns
out
int3
enter
iret
repz
mov
movsb
cwtl
sahf
ja
cmp
mov
sahf
out
fs
push
inc
inc
lock
out
xor
or
and
movsl
ljmp
inc
adc
sub
mov
and
jb
sbb
adc
and
in
popa
test
and
sbb
addb
mov
push
jne
adc
cmp
ss
sub
add
enter
andb
pushf
pop
imul
sbbl
subb
mov
cmp
aas
daa
pop
inc
mov
mov
in
call
and
mov
add
in
ficompl
mov
xor
fcomp
loopne
jb
gs
xor
divb
inc
and
mov
dec
pop
add
jmp
inc
and
xlat
add
cli
inc
aaa
push
ja
pmovmskb
add
mov
aam
insb
add
pop
push
inc
dec
dec
add
jns
int
add
loopne
mov
or
xor
out
or
out
adc
iret
repz
adc
iret
repz
or
in
sbb
out
lods
sbb
sarl
push
sub
enter
sarl
and
ljmp
jns
jp
push
jnp
or
push
sub
xor
mov
pop
outsb
in
pop
clc
rorb
push
add
ret
les
xor
inc
pop
pop
xchg
mov
scas
inc
dec
add
mov
cs
xorb
cmpsb
out
icebp
addr16
push
push
mov
xchg
mov
jle
adc
pop
sarl
pop
aas
push
arpl
lea
daa
idivl
xchg
and
lahf
call
scas
cmp
pop
jg
out
cmp
and
aas
inc
sub
push
aad
notl
pop
adc
daa
jae
mov
adc
out
sub
sbb
loopne
push
js
mov
xor
repz
lock
and
xchg
pop
ds
jae
jnp
lock
add
jns,pn
jnp
adc
fsubl
das
push
or
fdivp
sahf
out
in
adc
in
mov
adc
rcrb
repz
mov
and
repz
and
iret
repz
jo
and
xchg
out
jg
movups
mov
mov
cld
inc
mov
jg
cmp
adcl
jg
repz
pop
js
mov
out
cmp
repz
xor
andb
push
pop
rorl
ja
mov
jae
into
repz
dec
das
push
dec
insb
xchg
jne
cmpsl
add
dec
xchg
add
xchg
or
ret
mov
adc
repnz
adcb
sbb
leave
sbb
xor
in
int3
into
sbb
rorl
and
sahf
mov
sub
inc
rcrb
and
in
mov
jmp
inc
jno
xlat
xchg
inc
push
add
inc
stc
mov
adc
pushl
cmpsb
iret
decl
js
inc
outsl
loopne
jmp
xchg
test
mov
cmp
decl
inc
mov
popf
sti
jmp
stos
push
inc
mov
repnz
test
call
stos
clc
scas
adc
inc
jmp
aam
imul
loope
jp
iret
inc
gs
xchg
push
cmpsb
scas
mov
jmp
or
addl
cmpsl
xchg
cmp
xor
dec
cmpsl
in
cmp
lcall
mov
cmpsb
lock
mov
popa
sar
mov
fsubs
stos
xchg
popa
std
clc
repz
mov
subb
fwait
xchg
and
and
imul
jno
or
mov
pop
pushl
adc
cmp
int3
outsb
adc
sub
sbb
lcall
mov
icebp
aas
rorb
and
cmpsl
out
aas
inc
cmpsb
mov
insb
scas
add
aas
xor
mov
xchg
mov
std
std
into
popa
test
ja
stos
in
das
dec
pop
loope
les
mov
xchg
les
jne
int
mov
addr16
jl
push
mov
xchg
aas
and
loop
mov
jp
popa
push
pop
sarl
jl
mov
pop
aas
xlat
out
das
lea
mov
inc
inc
aas
movsl
jmp
jg
sub
jge
mov
mov
fstl
arpl
int3
and
call
cmp
jp
and
cmp
jmp
mov
cmp
std
xlat
cmp
mov
sbb
add
movb
pushl
fldt
cmp
jno
shlb
out
dec
nop
pop
cmp
fisubl
xor
push
jmp
mov
sub
dec
in
ss
push
scas
into
imul
faddp
jge
call
lcall
xchg
cmp
push
andl
dec
dec
gs
std
orl
pop
ficomps
inc
cld
enter
fmuls
das
pop
repnz
pop
inc
inc
je
inc
inc
push
dec
push
cmp
sbb
jg
add
ja
popa
push
out
mov
les
hlt
push
xor
movsl
arpl
mov
mov
push
movsb
je
jmp
rclb
mov
sub
mov
sbb
dec
pushl
repz
test
ficompl
jmp
mov
hlt
movl
imul
incl
mov
add
insb
push
arpl
psubd
or
outsb
cmp
lcall
imul
addr16
add
aam
dec
std
test
movsl
cli
test
xor
insb
cwtl
mov
leave
mov
jecxz
fdivs
jne
filds
or
sar
out
cli
stos
lods
xor
es
ficoms
push
xlat
enter
mov
and
mov
cltd
xchg
mov
mov
or
or
and
or
adc
stos
sbb
popa
sarl
fdivl
jno
add
aad
mov
mov
movsl
in
add
mov
call
xor
sub
decl
xchg
sbb
push
sub
insb
fs
add
hlt
push
imul
insb
sbb
xor
jmp
dec
add
in
xchg
push
insb
jnp
add
shl
adcb
cmc
fnstenv
adc
mov
mov
cld
fistps
ficoml
gs
aam
pop
popa
mov
into
fistpll
je
mov
aam
movsl
fisttps
fadd
shll
call
shrl
imul
mov
sarb
add
in
add
pop
dec
or
decl
push
stos
inc
add
adc
or
and
test
or
mov
jmp
push
stc
ficomps
leave
fldcw
and
xlat
pop
cmp
mov
cmp
lods
insb
mov
in
mov
mov
add
inc
aad
scas
ja
popf
adc
push
fdivl
or
test
fs
ds
or
or
push
in
decl
xchg
daa
scas
add
mov
incl
jge
xchg
shlb
add
inc
push
imul
xorb
sbb
push
ljmp
jbe
aam
loopne
rorl
int3
dec
frstor
fistpll
mov
mov
aad
lcall
pushl
jle
shll
push
repnz
addr16
cmpsb
incl
mov
dec
ss
fisubrl
or
scas
testb
pusha
jp
inc
ret
out
pusha
fists
addr16
fcomip
decl
imul
andl
shrb
rclb
or
or
incl
inc
or
das
es
lds
or
decl
lock
mov
cmpsl
call
ret
shlb
scas
ficomps
ret
jmp
repnz
pushf
mov
insl
add
ss
jmp
addr16
jb
push
add
call
mov
jnp
sbb
xchg
or
out
fdivrl
fisttpl
aam
roll
inc
loop
icebp
clc
mov
push
int
mov
mul
ja
outsl
ja
mov
out
cli
pushl
jo
ud0
cmp
pop
or
adc
sahf
gs
clc
sar
imul
ljmp
mov
loop
mov
push
addl
mov
cmp
cmpsl
notl
pusha
rorb
pop
inc
ljmp
shrl
or
inc
mov
aaa
pusha
mov
xor
decl
sbb
mov
lret
mov
cmpsb
mov
sarb
ljmp
push
ficoms
fldenv
jp,pn
mov
dec
popa
les
sbb
xchg
sub
aaa
mov
or
popa
movmskps
sbb
add
sub
mov
pusha
xor
pop
push
dec
inc
js
push
jne
add
jns
cmp
push
xlat
fcomp
fidivrl
out
fcmovnu
fstp
loop
out
out
in
call
jns
jmp
in
repz
sahf
out
cmc
div
clc
je
jns
stc
cli
sti
cld
pop
pop
push
aas
jg
adc
movsl
cmpb
push
movl
bound
dec
rol
into
mov
jbe
inc
add
bound
inc
stos
std
push
dec
popa
je
push
in
mov
and
cmp
adc
adc
jno
xor
pop
inc
mov
mov
xor
aaa
cmp
popa
arpl
cmp
arpl
or
xor
bound
std
mov
je
push
inc
jbe
pop
insb
imul
push
insb
gs
fdivrs
dec
inc
shlb
jp
add
push
inc
jp
mov
inc
inc
and
lret
sub
icebp
popa
or
shll
fs
push
je
inc
inc
imul
push
jbe
push
inc
add
inc
lea
mov
shll
jle
gs
inc
movsl
es
push
add
inc
inc
mov
sbbb
add
mov
popa
jns
push
push
lcall
cmp
je
aaa
cmp
push
push
aas
push
in
and
add
or
insb
or
insb
ret
sub
daa
int
pop
add
pop
inc
aas
nop
sbb
xlat
inc
inc
fcmovu
insb
sbb
inc
pop
mov
je
jo
inc
inc
add
adc
ds
mov
mov
mov
iret
int
push
dec
cmp
lods
mov
enter
fistpll
pop
loop
inc
outsb
jne
in
fistl
mov
pop
xor
xor
iretw
add
or
add
repz
out
mov
into
pop
sti
call
popf
pop
inc
cmp
and
aas
ljmp
cmp
add
add
push
sbb
sub
sbb
rcll
dec
aam
mov
xchg
lret
mov
rcr
lahf
xchg
out
addb
inc
jb
addr16
dec
popa
dec
popa
jo
sahf
xchg
lahf
push
outsl
outsl
mov
outsl
pop
in
pop
rolb
jno
push
mov
mov
in
pop
cwtl
sbb
sbb
nop
test
pop
cmp
rcll
arpl
cmp
pop
pop
inc
mov
jo
test
xchg
xchg
lea
lock
outsl
insb
jns
das
push
add
push
mov
fcoml
gs
inc
outsl
arpl
mov
bswap
aam
mov
inc
push
bound
ja
inc
jbe
stos
jmp
les
movsl
jg
push
dec
xor
sbbb
fistpl
das
or
dec
xor
push
int
add
fs
inc
sbb
jle
or
shll
pop
pop
inc
dec
rcl
sub
test
mov
sbb
sbb
pop
shrl
sub
cli
adc
pop
bound
outsb
arpl
adc
stos
mov
insb
insl
inc
jbe
add
inc
jne
push
push
inc
xchg
or
fucomi
xlat
cmp
daa
inc
mov
test
and
inc
adc
adc
jg
cmc
adc
inc
adc
pop
add
fdivr
loopne
pop
add
add
dec
inc
dec
add
add
es
fbstp
add
add
or
mov
pop
push
or
or
or
or
or
adc
adc
push
adc
fidivrl
or
pop
sbb
adc
adc
adc
outsb
mov
add
or
adc
pop
adc
cmpsl
add
sub
rolb
nop
add
in
aaa
add
add
add
adc
or
push
add
dec
add
inc
mov
cmpb
jb
imul
ds
adc
push
adc
pop
and
xor
inc
mov
adc
xor
addb
add
js
and
subl
and
pop
add
pusha
xchg
rolb
pusha
orl
add
add
or
add
aas
adcl
shlb
or
add
pushf
into
add
adc
decb
lods
jnp
ja
adc
push
adc
pop
popa
jno
and
fwait
outsl
or
xchg
mov
lock
sbb
loope
icebp
mov
mov
add
or
push
xor
js
pop
push
add
mov
sub
rcr
push
ret
decl
xchg
jae
sub
std
cmpsb
xor
aas
imul
fdivrl
add
mov
cmp
out
pop
les
fsts
dec
or
xchg
jecxz
pushf
ret
ja
pop
popa
or
xchg
sti
push
in
and
jmp
inc
cmc
iret
xchg
inc
jl
repnz
dec
or
adc
pop
inc
inc
xchg
scas
or
xchg
pusha
add
std
or
mov
cld
cli
and
mov
fiaddl
jg
fnstsw
ficompl
cmpsl
xor
mov
inc
fdiv
incl
mov
movsl
jecxz
pop
mov
aaa
clc
jmp
clc
cmpl
jg
or
insb
sub
jmp
out
or
push
push
xchg
add
repnz
inc
lock
scas
jle
fcmovnu
clc
cmp
fisubrl
in
mov
orb
int3
lcall
fs
in
dec
scas
mov
pop
pop
mov
popl
movb
xchg
sbb
ljmp
sbb
lods
scas
xchg
test
aam
and
sbb
sarl
xor
gs
roll
fwait
movsb
jmp
push
lret
push
out
in
and
ss
repz
icebp
mov
pop
lock
std
or
pop
mov
daa
test
aaa
dec
decl
push
out
outsl
loope
loope
rorl
mov
int
arpl
push
out
or
cld
lock
push
sahf
pop
clc
sti
jg
jno
lock
jg
inc
idiv
pushl
jg
xor
hlt
and
xchg
jmp
sbb
dec
or
mov
mov
out
incl
mov
push
mov
sub
pop
mov
jl
rorl
shll
pop
jg
hlt
push
fcmovnu
add
stc
loope
mov
sar
andl
aas
icebp
testb
mov
inc
imul
scas
fadds
in
sub
in
repnz
jno
pop
sub
jg
scas
cld
or
push
inc
sbb
paddb
decl
sbb
jb
adc
push
lock
lods
jp
testb
sbb
into
fcomps
sbb
sbbl
into
andl
aas
loopne
cli
adc
outsl
decb
xchg
in
add
inc
adc
loope
fisttpll
mov
fsubp
icebp
aas
std
cli
push
push
push
idivl
cmp
ljmp
jle
inc
scas
inc
mov
jg
je,pn
sub
jg
imul
stc
mov
mov
inc
es
gs
jns
enter
or
push
pushf
push
scas
xlat
sub
cmp
sti
ds
decl
push
scas
cmpsb
orb
mov
imul
stos
or
js,pn
jmp
xchg
pop
clc
pop
hlt
sub
fistl
xor
movsb
add
lea
jg
gs
std
aas
pop
incl
shrl
addr16
adc
ret
das
pop
pop
pop
shlb
insl
pusha
fucom
out
sarb
sbbl
jno
or
sarb
cld
ljmp
push
cli
mov
mov
inc
arpl
cmp
lcall
sbb
scas
sbb
push
scas
loop
jge
push
shrl
mov
idiv
call
or
adc
and
sbb
xchg
jo
and
out
test
pushl
push
iret
sti
cmp
ficoms
aam
sahf
imul
fcmovnu
rorl
insb
stos
arpl
call
add
cld
call
js
cmp
scas
lods
hlt
cmp
fistl
pop
cld
pushl
xchg
or
mov
stos
dec
lods
xor
jg,pn
jg
loopne
cmpsl
scas
popa
in
pop
or
mov
xlat
pushf
cld
aas
clc
jge
jnp
sbb
call
outsb
mov
sbb
jecxz
inc
adc
mov
adc
adc
push
jo
idiv
jmp
shrl
icebp
ja
xor
cmp
xchg
mov
cwtl
xchg
and
lcall
ftst
jbe
xchg
and
pushl
shrb
shlb
out
aas
stc
add
out
gs
jno
fidivrl
adc
adc
pop
cld
addl
adc
and
lock
cmp
fmull
enter
jecxz
scas
incl
in
pop
mov
sub
mov
dec
incb
fisubrl
loopne
sti
lds
mov
or
cld
inc
or
bound
repnz
jg
mov
aad
jbe
test
mov
mov
iret
push
out
jbe
push
sbb
stos
icebp
pop
incb
jno
outsl
sti
ljmp
adc
push
inc
jecxz
sbb
sarl
adc
loopne
in
pop
mov
sar
adc
lahf
xor
stos
mulb
or
add
jae
in
aas
mov
fsubrl
lock
decb
mov
and
clc
xchg
cmp
mov
jne
push
and
mov
adc
lahf
or
push
rcrl
rolb
pop
inc
jb
fistpl
pop
in
xor
adc
call
jno
pop
nop
ljmp
jmp
inc
sti
arpl
daa
std
or
sbb
mov
inc
cmpsb
popf
push
loop
sbb
lcall
decb
imul
xor
dec
xor
fsubr
fistps
lds
fidivrl
jg
vmovshdup
stos
pop
add
dec
mov
sub
fidivrl
xor
lahf
les
sbb
sbb
cld
addl
call
and
mov
in
stc
mov
lahf
outsl
int3
push
sbb
pusha
sub
arpl
sar
xchg
popa
out
out
outsl
xchg
inc
test
in
jge
popa
push
test
xchg
das
cmp
jbe
outsb
hlt
sti
fsubs
shl
dec
jp,pn
adc
lahf
cmovl
out
lcall
icebp
push
cld
mov
adc
stos
pop
jg
pop
shrb
rcl
jg
adc
lcall
xor
pop
rcr
dec
mov
gs
pushf
lea
jp
jnp
cmp
cld
adc
inc
lds
push
pop
adc
imul
decl
or
inc
pop
xor
rorb
and
add
cmpsl
push
sbb
jg
jg
lock
inc
cmpsl
enter
mov
into
test
xchg
movsb
insb
or
and
xor
pop
incb
fidivrs
clc
insb
test
pushl
repz
outsl
lock
in
jmp
stc
out
mov
clc
push
std
mov
or
lods
out
jne
or
cmc
mov
call
repnz
dec
sahf
enter
fcmovb
inc
adc
inc
loopne
test
out
shr
cmpsb
mov
or
or
dec
ss
incl
inc
lods
movsb
incl
pslld
pushf
imul
cli
daa
pop
and
imul
cmpsl
lret
pop
in
cmp
cld
outsl
incb
mov
pop
lock
jmp
hlt
dec
mov
in
scas
sbb
xlat
inc
aas
mov
jg
mov
mov
addr16
sbb
cld
daa
jp
std
adc
cld
jbe
inc
cltd
or
mov
ret
nop
cmp
das
incb
add
pop
pop
div
cld
idivl
fcomi
add
stc
lahf
loope
jae
jmp
shrl
je
jge
std
scas
bound
jg
stc
add
out
leave
xchg
inc
icebp
mov
loope
mov
cmpsl
popf
sti
sub
mov
ja
push
outsl
das
jge
fwait
dec
das
add
cmpsb
cmp
call
std
add
decb
adc
mov
and
jo
adc
call
jo
testb
iret
or
add
cmp
int
add
push
enter
pop
aaa
std
fisttps
testb
cld
jg
xchg
fimull
cmp
aas
icebp
ret
ror
sbb
aaa
pushf
jecxz
and
adc
mov
mov
cld
push
sub
mov
pop
clc
loope
loope
mov
lahf
inc
push
dec
add
xlat
jmp
in
cwtl
pop
fbstp
xchg
fldenv
iret
movsb
or
xchg
lcall
decb
mov
loop
dec
and
out
jg
jno
ret
xchg
xor
jno
cmp
mov
sbb
iret
push
dec
jge
pop
clc
xchg
cmpsb
ljmp
ds
inc
mov
in
sbb
xchg
imul
jmp
clc
pop
lds
jmp
std
mov
daa
jmp
faddl
or
inc
push
jae
mov
add
push
imul
pop
stc
push
dec
out
fstpt
mov
enter
add
xchg
decl
cmc
out
daa
icebp
push
lahf
sti
inc
pop
imul
push
xchg
cmpsb
scas
sar
ljmp
pop
xor
mov
xchg
mov
fildll
fsubrl
dec
add
sub
inc
or
add
push
sti
pop
inc
dec
stos
fs
push
mov
push
cmp
mov
push
popf
int3
pop
iret
and
pushl
xchg
dec
dec
jg
jae
lret
jle
por
dec
inc
mov
ljmp
mov
lds
lock
push
dec
dec
cmp
dec
imul
pop
mov
std
lret
xchg
adc
mov
stc
dec
xorb
repz
ljmp
jmp
and
out
sbb
insl
scas
sbb
cmp
ja
clc
mov
leave
push
lcall
mov
sbb
leave
movsb
add
sub
xchg
pop
add
js
inc
sar
decl
rcll
jmp
cmp
xchg
and
sub
pop
jmp
subl
xchg
mov
push
push
add
mov
ja
push
jmp
movsl
repz
decl
adc
cmp
pop
pop
dec
mov
mov
push
test
js
lods
jae
lcall
inc
or
stos
mov
scas
nop
imul
js
jns
sbb
test
or
or
imul
pop
pop
decl
fisttpll
enter
jge
loopne
inc
cmp
rcll
xchg
xor
mov
xchg
mov
loopne
lea
ficomps
jb
loop
xchg
cmpsl
iret
ja
cmp
jmp
push
and
mov
lock
pushf
sbb
ret
pop
cmp
insb
test
int
call
pop
cmp
xchg
ss
mov
repnz
call
xor
dec
jne
xchg
add
dec
out
dec
push
shlb
pushl
out
subb
lret
arpl
int3
xlat
mov
mov
jae
fmuls
adc
lds
xchg
pop
and
xchg
push
sbb
jp
jl
fistl
mov
call
test
ficoml
ja
inc
rcrl
xor
loopne
xchg
sub
fdivrs
mov
outsl
jmp
adc
and
shrb
je
call
cmp
cmpsl
xor
aad
std
pushl
jb
mov
out
mov
lods
sbb
jl
out
lahf
push
loope
cs
mov
mov
decl
adc
not
daa
jp
cld
ds
push
jb
lret
stos
jbe
xor
popa
popf
sub
cmc
incl
adc
jo
out
cwtl
xor
std
cmpsb
mov
mov
ljmp
pop
sti
push
mov
mov
xchg
aas
in
outsb
cwtl
std
cmp
and
pushl
mov
jo
and
cmp
sbbb
push
mov
jns
sub
pop
fnstenv
xchg
gs
ljmp
dec
pop
enter
mov
jne
cmpsl
cmp
push
or
and
clc
cmpsl
add
scas
add
andl
insb
pop
jg
int3
inc
mov
add
push
ljmp
loop
shl
pop
cmp
add
shl
lahf
or
jbe
add
dec
jb
popf
pop
in
out
imul
jp
es
jmp
dec
cmc
jno
and
xlat
into
pushf
inc
ja
sbb
pushf
mov
cmp
pop
cld
jmp
push
jecxz
mov
sub
push
pop
adc
sbb
adc
daa
dec
add
sub
and
mov
jle
stos
loop
sbbl
sbb
xor
dec
push
sbb
lret
shr
test
pushf
jp
cld
mov
xchg
cmp
adc
lcall
jo
pop
push
add
andb
jmp
out
fldenv
or
mov
dec
leave
out
pop
mov
rcll
into
enter
int
mov
inc
inc
adc
mov
cwtl
movsl
sbb
insb
lods
addr16
sub
fildll
icebp
mov
sub
ljmp
xor
xor
jg
xor
test
fmull
cmp
les
sbb
dec
fdivrs
sub
xchg
pop
cmp
ja
dec
xor
call
stos
lock
repz
push
push
scas
jne
out
nop
fisttpl
push
dec
shrl
mov
pushl
xchg
dec
adc
sub
enter
jg
cmp
mov
lcall
jo
mov
out
cmp
jge
sub
and
inc
insl
jne
decl
xchg
test
sbb
pop
pusha
outsl
mov
stos
jg
inc
mov
dec
stos
inc
or
daa
insl
fidivl
mov
cmp
xchg
orl
ja
pop
mov
fwait
lahf
subb
out
dec
ret
lcall
incl
sub
fildll
lcall
fs
in
dec
push
pop
lods
cli
decl
mov
fdivrs
movq
sti
lahf
scas
pop
cwtl
pop
sar
pushl
stos
int3
enter
pushf
in
nop
sbb
out
mov
sub
insl
jg
push
jge
ljmp
adc
mov
lahf
cli
jecxz
jmp
out
cli
lahf
dec
std
cs
jle
xchg
lods
and
cli
jns
bound
das
dec
outsl
enter
dec
pushf
push
mov
popa
dec
and
inc
stos
mov
dec
addl
fs
enter
call
add
outsb
lret
or
push
mov
lock
enter
cmp
and
aas
xor
lds
mov
mov
inc
negl
call
insb
dec
cli
sbb
lds
pop
roll
mov
inc
gs
decl
push
test
pusha
in
inc
jbe
mov
enter
xor
sahf
insl
in
mov
ljmp
push
mov
xlat
mov
xor
inc
hlt
shl
jns
call
std
inc
lret
ret
sub
jns
push
shll
jg
mov
cmc
popa
mov
mov
pop
sahf
xor
mov
inc
popf
cmpsb
mov
shlb
ret
ljmp
addr16
aam
leave
add
push
jo
out
psrad
lcall
ret
in
push
push
sub
mov
push
call
in
andl
jae
stos
fnsave
aam
pop
stos
popa
cmp
jns
test
cmc
ljmp
xchg
push
loopne
ljmp
push
aam
mov
gs
fistps
test
lcall
test
roll
jle
dec
cmp
bound
cwtl
dec
mov
jbe
jl
cld
call
fdivs
int3
es
sti
cltd
nop
popa
call
shlb
push
lea
ljmp
inc
loopne
push
sbb
mov
sti
jo
jne
inc
repnz
push
cmc
test
mov
cmp
mov
test
stos
aaa
sbb
lcall
mov
and
jmp
jb
push
add
inc
incl
and
or
loope
out
sbb
shrb
pop
cmp
mov
cmp
adc
cmpsb
and
sub
pop
push
sub
incb
ljmp
loopne,pt
mov
sub
xor
jp
jo
mov
push
xor
call
rcll
lea
or
enter
stc
dec
cmp
xchg
int
mov
and
decl
jg
pop
jecxz
lods
data16
daa
shl
push
mov
nop
jg
add
xchg
ja
dec
idivb
mov
sub
incl
jae
mov
push
shll
inc
movsb
xor
daa
int3
fists
and
mov
jg
adc
aad
out
dec
mov
imul
sbb
xchg
xchg
js
pop
ljmp
inc
ret
push
add
sarb
pop
lods
std
insb
sub
les
imul
testb
push
clc
decl
stos
jo
push
push
push
lods
jnp
or
sub
pop
hlt
incl
xchg
sub
add
call
decl
inc
mov
sbb
xor
cli
cmp
je
popa
mov
cld
incl
sbb
loope
mov
xor
and
inc
out
mov
sub
ljmp
cli
xor
jle
popf
mov
sbb
mov
xor
fcmovu
decl
mov
in
les
mov
fists
push
push
mov
arpl
repnz
decl
inc
push
in
cmp
sarl
jae
jno
cmp
ds
aam
nop
or
pop
addl
jmp
jo
add
inc
mov
fdivrl
shlb
mov
mov
add
mov
decl
inc
out
jge
dec
mov
mov
adc
push
out
es
mov
lock
ljmp
rolb
or
and
shl
call
decb
test
push
and
lods
xor
adc
in
lahf
and
lcall
adc
sbb
lret
popf
jg
mov
pushf
mov
loop
pop
repnz
aam
cli
jmp
call
sti
mov
jp
xchg
ja
jmp
push
out
out
pop
cmp
dec
add
jns
decb
lods
orl
xor
loop
push
popf
or
jbe
fiadds
cmp
mov
inc
mov
je
xchg
xor
add
lock
pusha
loop
jl
xchg
adc
pop
pushl
jg
std
adc
lods
jg
sbb
pop
fstpl
xor
lcall
pushf
pop
cli
sbb
pop
test
sar
xchg
mov
lcall
aas
bound
and
jmp
icebp
cmpsb
daa
mov
hlt
jg
pop
loope
cmpsb
icebp
aam
mov
cmp
xor
es
mov
jle
sbbb
mov
ljmp
insb
push
or
or
aaa
std
jmp
pop
les
sub
xchg
pop
sub
adc
adc
call
icebp
jno
lock
hlt
mov
xchg
jecxz
adc
pop
xchg
xchg
xchg
gs
jg
cmc
push
shll
mov
sar
dec
jno
in
sbb
adc
add
mov
call
add
pop
pusha
mov
mov
push
or
cs
and
fistps
mov
out
inc
jo
movsb
xchg
scas
in
cmc
arpl
inc
cmp
jnp
test
in
xchg
ljmp
cmc
cmpsl
ret
das
jbe
out
fisubrs
hlt
push
stos
sub
dec
mov
pushl
adc
jbe
testl
into
imul
loope
into
lret
cli
inc
push
mov
ljmp
push
je
movsl
int
adc
and
loop
cltd
cmp
lahf
popa
push
pop
cmp
mov
decl
rorl
sbb
inc
mov
mov
sub
pop
and
xlat
push
dec
cld
jae
stos
scas
push
incl
adc
test
add
mov
ss
xchg
rolb
or
xchg
jmp
sbb
cmp
jbe
xchg
insb
add
pusha
fcmovne
sub
push
cmc
xchg
test
mov
or
int
push
aaa
xchg
and
gs
int3
test
repz
cs
dec
push
push
out
dec
push
int
and
mov
and
out
rorl
push
out
push
sarl
inc
decl
out
mov
push
sbb
sub
inc
out
out
pop
push
xchg
iret
sbb
leave
inc
dec
stc
sub
ret
jns
cld
inc
jns
jg
jmp
dec
das
jo
sub
jge
jmp
pavgw
int3
xlat
aaa
outsb
pushf
dec
sbb
inc
push
push
sbb
pushl
mov
inc
push
jecxz
out
icebp
shrl
fsubrp
imul
aam
pop
mov
aam
mov
lret
dec
test
out
push
jo
pop
mov
in
push
pop
clc
xchg
shr
push
dec
aad
xor
repz
in
subl
aad
push
sub
xor
and
mov
jno
cmp
clc
ljmp
test
and
sub
jo
ljmp
sahf
jecxz
sbb
scas
mov
or
lret
lahf
imul
test
pushl
lea
rclb
cltd
fistl
fcmovb
push
add
incl
roll
mov
push
pushf
and
adc
inc
arpl
xchg
test
sbbb
decl
jmp
sbb
mov
sub
out
cmp
mov
xchg
push
sbb
lcall
jae
xchg
inc
cmp
sbb
xchg
movsl
mov
mov
fcoml
sar
ljmp
cwtl
cmpsb
and
jno
add
inc
call
popf
mov
xchg
mov
out
lcall
sbb
and
das
pop
push
out
inc
pusha
dec
testl
xchg
call
nop
lret
outsl
clc
lret
xchg
cmp
pop
sbb
rcll
mov
add
pop
mov
inc
inc
outsl
mov
mov
mov
jmp
aad
mov
scas
push
add
aaa
lods
loop
push
and
mov
mov
add
out
fwait
cmp
push
dec
dec
incl
mov
or
jp
aas
std
inc
or
push
sbbl
int
pushl
call
fadd
aaa
xor
mov
cwtl
in
sahf
add
stos
xchg
sub
push
fwait
xor
push
aas
add
adc
arpl
add
inc
xor
mul
addb
jg
icebp
stos
int3
pop
pop
xor
fmull
add
rcll
push
sbb
jnp
out
cli
xor
lods
fld
mov
adc
data16
sub
in
stos
idiv
incl
xor
ret
dec
sub
sbb
idiv
ret
popa
daa
push
pop
jmp
ljmp
call
cwtl
into
mov
push
insl
loopne
repnz
or
push
inc
mov
or
mov
cmp
mov
gs
adc
cmpsb
jbe
dec
mov
mov
mov
cltd
cwtl
call
mov
jle
mov
cmp
es
sub
inc
mov
fwait
incl
inc
inc
mov
aas
das
xchg
inc
xor
mov
mov
movl
mov
xchg
lds
sbb
lret
jae
bound
enter
je
mov
pop
mov
mov
call
adc
pop
push
dec
hlt
dec
movsl
imul
fmull
fstl
sbbl
call
test
lods
mov
mov
jp
cmp
sbb
dec
shlb
out
cwtl
cmp
call
adc
push
add
insb
cmpb
lcall
mov
sbb
push
iret
xchg
mov
mov
xchg
js
xchg
stc
sub
lds
pop
push
inc
lcall
xor
push
add
out
aas
inc
cli
sub
out
sub
xor
mov
sbb
push
fstps
fisttpl
xlat
mov
pusha
ljmp
cli
incl
dec
nop
jmp
sbb
sub
push
add
rorb
sub
aam
fcomip
call
in
inc
ret
push
cmp
adc
add
clc
incl
enter
lret
in
add
mov
cmpsb
mov
mov
js
mov
cltd
lret
in
test
outsb
dec
aaa
scas
and
push
mov
faddp
shrb
mov
dec
push
pop
and
pop
stos
jmp
fstpl
clc
repz
loope
mov
stos
jmp
sbb
repnz
out
mov
jns
cmpb
lock
mov
mov
cmp
scas
ljmp
repz
pop
fsubs
test
inc
pop
xchg
mov
arpl
inc
cltd
jl
and
lret
mov
cwtl
xor
ret
call
jae
jo
jmp
dec
push
mov
xchg
mov
lods
ret
repz
mov
or
enter
ja
lret
scas
add
incl
fmull
testb
sbb
push
xor
pop
sbb
mov
rclb
lret
xor
stc
js
mov
call
andl
pop
lods
mov
or
repnz
scas
fdivrp
out
xor
scas
sar
mov
in
ljmp
mov
push
icebp
fwait
dec
ljmp
nop
cmc
lcall
mov
int3
add
and
insb
jg
stos
add
cmp
call
sbb
rcrb
mov
push
mov
sar
cmp
nop
fmul
mov
jmp
decb
add
mov
sub
inc
inc
arpl
jmp
sti
testb
sub
lret
add
lods
sbb
inc
fiaddl
scas
loopne
ss
add
pushf
or
out
lods
mov
push
jbe
fiaddl
cmp
ljmp
pop
xorl
mov
push
inc
cli
call
or
pop
push
mov
call
or
xchg
mov
adc
adc
cld
and
and
out
es
mov
insl
xchg
pop
ss
ds
adc
mov
ret
cs
pop
xchg
subl
mov
stos
sbb
shll
adcl
jbe
or
out
mov
pushl
or
cmp
enter
addr16
imul
mov
jmp
aam
cli
inc
adc
push
xor
ja
in
and
insb
rorb
call
loope
daa
pop
xchg
jnp
lea
cld
shrb
lcall
cmp
orl
decl
jecxz
ret
sbb
sbb
push
or
xchg
aad
push
iret
inc
push
ljmp
ljmp
stos
push
xchg
mov
sub
dec
xor
stos
iret
test
pushl
pop
sbb
push
xlat
into
inc
mov
aam
or
lret
and
push
push
pushaw
in
clc
jmp
sti
das
cli
and
cltd
push
shr
inc
pop
popa
inc
sub
daa
incl
hlt
push
je
xchg
lea
mov
mov
jo
pop
subb
xor
repz
jg
decl
loopne
push
add
mov
push
pop
add
sbb
ds
or
ljmp
es
push
in
test
aas
push
lahf
arpl
adc
movsl
loop
incl
dec
mov
cld
xlat
lret
out
lds
sbb
cld
filds
mov
ss
push
leave
dec
sub
xor
inc
out
pop
or
or
push
mov
fs
in
negl
or
test
lock
cmp
ss
out
sarb
out
faddl
mov
jmp
out
shrb
arpl
lock
outsl
mov
dec
scas
shrl
inc
rcll
pushf
cmp
dec
sub
jb
lcall
jmp
mov
mov
fdivl
xor
pop
jmp
dec
negl
push
les
test
sbb
jae
add
mov
inc
and
add
sub
sti
aas
lret
or
lcall
bound
xor
test
loope
divb
subl
dec
mov
push
loopne
fwait
iret
mov
cmp
call
or
cli
mov
rorl
pushl
imul
arpl
sbb
push
push
cmc
add
decl
xor
inc
filds
call
dec
xchg
clc
icebp
mov
stos
loope
pushl
out
pop
in
inc
adc
fsubrs
sbb
mov
decl
iret
fs
adc
xchg
xor
outsl
addr16
mov
jno
jl
into
stc
jae
test
es
add
push
push
xor
out
sarb
sbb
stos
ss
scas
sbb
add
lods
push
dec
mov
lcall
jmp
loope
and
pusha
xor
or
cmc
xlat
pop
mov
test
adc
add
call
mov
push
mov
jl
mov
popa
adc
idiv
dec
inc
mov
js
imul
movsb
arpl
std
std
inc
outsl
pop
rclb
mov
decl
push
stos
fs
mov
out
dec
fwait
mulb
and
jp
mov
insb
incl
and
sub
lea
push
jns
sub
lahf
insb
stos
std
pop
aad
cmpsb
inc
cmp
push
add
fimull
hlt
repnz
loop
xchg
test
cmc
cld
std
in
cmpsl
push
sub
sub
stos
sbb
aas
fmull
push
pop
ja
stos
mov
add
mov
cwtl
xor
push
stos
cmp
incl
pop
cmpb
push
mov
ret
aas
fidivs
test
insb
imul
mov
mov
dec
sbb
inc
adc
fisubrs
jle
cmc
insb
xlat
lock
aad
out
jle
das
clc
jmp
cmp
inc
cmpsl
idivb
mov
adc
lods
sbb
in
pop
jecxz
jecxz
mov
movsb
or
call
loopne
jne
push
in
xchg
imul
std
inc
jno
into
add
push
cmc
inc
mov
mov
fs
mov
and
testb
rcr
lcall
shr
test
inc
pop
mov
and
out
lods
and
loop
dec
add
cltd
subl
aas
dec
inc
cmc
sarb
decl
xchg
enter
xchg
outsb
sar
and
popf
shll
pop
enter
jg
lcall
mov
push
fstl
xchg
lret
cmp
stos
sub
jmp
ja
mov
aaa
std
incl
insl
out
lea
xchg
add
mov
loope
scas
dec
mov
ret
decl
xchg
push
loop
lahf
dec
sbb
ficomps
sbb
adc
insl
js
jge
call
hlt
or
inc
pushf
sti
dec
ljmp
jle
test
iret
dec
into
nop
mov
jp
cli
leave
clc
bound
aad
lods
add
sbb
push
jg
enter
mov
call
les
push
ss
sub
adc
addr16
inc
gs
clc
int3
iret
dec
mov
jg
adc
mov
fmul
inc
js
sbb
sub
mov
je
call
mov
jg
stc
inc
lret
jnp
mov
dec
stc
stos
test
bnd
inc
dec
subb
ljmp
jmp
in
mov
mov
sarb
popa
jg
scas
xchg
scas
mov
es
lods
cmpsb
aaa
std
call
xchg
dec
dec
dec
and
jle
data16
adc
std
decl
sbb
rcl
repz
fisubrs
sub
repz
cli
add
mov
dec
sub
imul
add
arpl
test
imul
movsl
mov
jnp
lods
pop
stc
clc
jmp
fs
dec
leave
aam
stc
push
xlat
mov
sub
sub
cmp
out
push
dec
adc
test
add
fwait
cmp
in
das
aam
cmpsl
cmp
xor
decl
jae
add
stos
test
ret
cwtl
repz
std
and
int
imul
push
push
cmp
dec
dec
xor
adcl
jmp
add
data16
add
lods
scas
lds
sub
dec
icebp
cli
arpl
call
int
pop
scas
shr
or
cmp
or
imul
incl
fcomps
pop
cmp
imull
mov
pop
ljmp
test
mov
ljmp
addl
aam
xor
sub
mov
incl
push
push
inc
adc
add
pop
dec
shlb
or
pop
xchg
cwtl
jge
sbb
ret
jg
pop
jl
pop
call
or
es
out
cmpsl
xchg
push
out
ret
nop
xchg
int
loope
pop
in
push
jb
push
stos
or
mov
imul
or
or
mov
xor
gs
mov
or
mov
push
icebp
lea
repz
andb
cs
rol
jmp
filds
cltd
dec
pushl
cmpsb
push
imul
dec
es
dec
add
pop
aaa
fdivs
mov
dec
jle
out
insb
mov
outsl
lods
sub
xchg
repz
adc
adc
call
cwtl
loopne
xchg
jmp
cmp
push
cmp
and
mov
pop
pop
xor
push
js
push
loop
adc
mov
fwait
cmpsb
and
out
xchg
jmp
jnp
xor
xchg
mull
data16
aad
gs
scas
push
mov
cld
inc
mov
negl
cmpsl
and
and
out
fadds
in
pop
cwtl
iret
mov
aam
jmp
incl
xchg
push
repz
test
ss
aam
cmpsb
in
int3
pop
lds
push
jmp
pushl
lods
push
or
xor
lcall
add
sub
scas
repnz
popf
mov
sbb
hlt
cmpsb
mov
mov
mov
lds
xchg
outsl
nop
cmpsl
pop
icebp
out
pop
xchg
cltd
sarl
in
mov
cmpsl
lret
add
lret
daa
mov
aas
adc
push
sub
sbb
mov
add
add
insb
mov
pushf
dec
repz
push
in
xchg
jg
ja
xchg
rclb
mov
cmp
pop
imul
push
shr
stos
into
sbb
and
aam
in
out
or
adc
jle
push
idivl
cltd
fldt
iret
push
mov
lcall
rcll
mov
pop
adc
sub
mov
ss
mov
push
decl
mov
das
insl
out
sub
out
fidivrs
mov
lahf
sar
ljmp
add
jge
cwtl
inc
out
std
aas
rorb
add
mov
push
add
mov
call
cmp
lret
jle
loop
cmp
loope
cmpsb
xchg
ljmp
cmpsb
movsb
xorb
das
sbbl
outsl
out
fldt
xchg
or
out
xchg
fcom
mov
jp
push
ljmp
lods
loope
sete
int3
or
push
add
dec
xchg
mov
loop
test
pop
aaa
scas
and
in
cmpb
or
icebp
inc
and
mov
cwtl
addr16
ret
and
lahf
jb
add
in
jmp
clc
shl
daa
mov
adc
roll
pushf
xor
jmp
xchg
adc
sub
cs
imul
adc
xchg
inc
jmp
lea
out
movsl
idivb
cmpsb
sub
icebp
divl
pop
sbb
pop
or
inc
cld
jg
xchg
in
call
lcall
xor
cld
jb
push
cli
mov
rolb
jmp
sub
ss
lcall
xor
imul
cltd
in
mov
xchg
mov
call
jnp
dec
loopne
data16
sub
or
out
pop
in
ljmp
pop
sub
xor
cmp
sahf
ret
lret
mov
icebp
dec
jp
xchg
or
jo
stc
xor
mov
mov
movsl
scas
imul
scas
and
testl
or
mov
sub
or
pop
scas
nop
lahf
stc
insl
int3
push
inc
dec
sar
jns
pop
or
jno
inc
xor
pop
mov
cmpsb
pushl
outsl
imul
or
les
ret
subl
call
shlb
jecxz
xor
jecxz
rolb
aad
sbb
xor
cmp
fidivrs
cli
mov
mov
lods
shr
jge
and
add
xchg
mov
scas
push
incl
mov
into
leave
mov
adc
mov
enter
decl
mov
repnz
fnstsw
mov
pop
ljmp
jmp
push
cwtl
sbb
xchg
sub
add
data16
rcr
in
ret
cmp
ljmp
addb
adc
mov
cld
sbb
jg
std
cltd
loopne
cmp
mov
in
in
lods
out
fidivrs
clc
mov
scas
test
ljmp
jmp
mov
mov
jmp
mov
aam
pusha
mov
adc
add
lahf
xchg
add
shlb
mov
sti
push
stos
ds
mov
cltd
push
xchg
cmc
mov
dec
pop
adc
mov
dec
jae
jecxz
jnp
jbe
fildl
xchg
mov
lret
mov
call
jg
push
jmp
push
inc
or
pop
je
push
ds
xchg
lahf
adc
add
les
xor
add
push
shll
dec
or
test
and
jmp
je
and
dec
sbb
adc
dec
mov
push
outsl
and
mov
cmp
jg
incl
adc
push
pop
xor
sbb
cld
mov
and
sti
stos
ljmp
or
sbb
sti
push
outsl
pop
jmp
lcall
cmpsl
inc
fcompl
int
and
pop
xchg
push
out
in
mov
xchg
out
inc
pop
mov
lcall
loop
test
dec
leave
es
sbb
fbstp
dec
xchg
xchg
pop
add
fsubs
add
inc
int
shlb
mov
xchg
pop
ret
xor
adc
cwtl
out
mov
enter
mov
fidivl
push
jne
xor
jp
mov
roll
sti
pushf
cmp
ljmp
loope
inc
dec
dec
testb
rcrl
lcall
sarb
sub
pop
and
adc
jle
mov
push
xor
out
mov
mov
inc
lcall
insl
sbb
dec
mov
ljmp
fwait
and
mov
sbb
xor
ljmp
push
int3
pop
xor
decl
jns
pop
mov
sbbl
jg
in
and
hlt
ljmp
pop
addr16
cmpsl
sbb
outsb
hlt
lds
out
loopne
mov
inc
int
dec
pop
ljmp
aad
movsb
daa
dec
sub
cmp
shrb
and
cmp
mov
call
std
hlt
adc
mov
scas
out
adc
testb
test
mov
call
fisubrs
hlt
movsl
lcall
dec
or
daa
pop
pop
xor
pushf
outsb
out
xchg
jmp
adc
and
cli
popa
jo
addl
jbe
aam
fstpl
push
sbb
call
xchg
jno
and
sbb
into
cmp
ds
jmp
imul
lcall
test
push
int
negl
push
cmp
out
cld
mov
dec
clc
je
mov
xchg
loop
les
daa
lcall
fs
movl
mov
jbe
xchg
test
sbb
cmc
decl
jle
ss
ljmp
icebp
inc
cmp
xor
call
dec
out
cli
ret
xchg
mov
and
pop
add
int
sub
jns
cmp
mov
push
mov
aaa
or
mov
fildll
jge
out
jle
pop
stos
jnp
dec
adc
sti
idivb
aad
inc
inc
fadd
insb
sub
pushl
fldenv
sbb
cmp
aaa
sub
xorl
and
mov
lods
mov
ljmp
xchg
mov
lock
movsb
sub
cmc
xchg
mov
popa
cmp
mov
insb
adc
popf
movl
mov
loopne
lods
push
sti
call
sar
call
das
and
cmp
ret
mov
cmp
test
outsb
arpl
testb
cmp
movsb
decl
js
lods
stos
sbb
stos
mov
sub
test
in
mov
sbb
out
sar
inc
xchg
add
unpcklps
leave
cmp
shll
test
stos
std
loope
out
mov
mov
lcall
repz
mov
mov
or
shll
mov
aas
dec
out
xor
aad
fwait
decl
jnp
mov
orl
std
sbb
xchg
xchg
sub
call
pushl
add
dec
int3
xor
insl
jnp
movsl
ss
sarb
sarl
adc
cld
or
push
cmpsl
adc
sbb
sub
inc
fnstenv
mov
cmp
push
ja
jmp
lea
test
loop
sbb
or
pop
xor
test
or
jmp
stc
pop
mov
lcall
jbe
ret
or
push
inc
jg
mov
lcall
push
mov
mov
jecxz
and
jne
push
insl
xor
mov
es
mov
clc
aas
add
call
sarl
data16
dec
out
inc
mov
shll
roll
xchg
icebp
inc
cmp
movaps
aad
xchg
lock
movsb
fldenv
ja
decl
jg
loop
lock
repnz
pop
jne
sti
nop
lcall
push
fdivrp
mov
mov
decb
bound
xor
shrl
jecxz
xchg
decb
aam
je
test
inc
xchg
push
mov
mov
jg
std
jl
mov
add
push
add
fsubl
xchg
call
addb
stos
sti
sub
mov
decl
cltd
inc
cli
lret
and
cmp
inc
popf
repnz
shlb
xor
call
andb
je
xchg
inc
inc
ret
div
cmc
es
stc
lahf
bound
mov
ljmp
hlt
inc
jecxz
mov
aam
ffree
roll
cmp
xor
mulb
cltd
bnd
call
jp
push
xlat
ljmp
scas
inc
jmp
push
sub
subl
call
out
mov
dec
adc
add
pop
inc
hlt
xor
scas
je
clc
fwait
adc
idiv
pushl
in
add
jb
cvtdq2ps
cltd
notb
pop
mov
mov
push
scas
leave
jne
mov
add
in
or
subb
in
mov
cmp
scas
mov
jae
push
rorb
daa
pushf
cmp
decl
lea
jns
mov
mov
dec
int3
mov
sbb
testl
ljmp
dec
xchg
jl
es
cmpsb
xor
jne
push
outsl
out
jae
mov
pop
and
orl
pushl
out
sbb
repz
xchg
xchg
gs
sti
loopne
jnp
bound
xchg
js
ljmp
clc
adc
pushf
rcll
xchg
xchg
call
pop
jecxz
aas
dec
push
out
leave
jge
lds
in
cmpsb
aad
mov
mov
imul
sbb
inc
das
cmp
xor
push
ficompl
xchg
jo
mov
data16
jg
jmp
dec
add
mov
push
push
cltd
and
sti
out
ja
in
adc
xorl
push
scas
and
mov
sbb
call
movsb
lds
lret
sub
js
outsb
sub
cs
cli
lods
adc
cmpsb
call
adc
sbb
adc
out
mov
fsubrl
in
stc
push
mov
frstor
inc
ljmp
dec
xchg
ja
mov
mov
enter
jmp
xor
mov
jmp
adc
adc
jmp
dec
jg
jg
in
dec
pslld
ds
push
outsl
in
xchg
mov
pop
les
in
in
pop
aam
dec
enter
jmp
dec
ret
lds
shll
add
inc
movsl
scas
push
movsl
aad
add
mov
xchg
and
jg
je
jno
cmp
pop
xor
mov
mov
fisttpl
cmp
jp
shll
or
pop
out
ret
hlt
dec
call
in
jl
xchg
stos
jp
sub
and
jns
popa
cmp
mov
pop
repnz
fwait
dec
jmp
incl
mov
mov
adc
ja
movsl
sub
popa
fistpll
nop
imul
lcall
stos
mov
jecxz
push
aaa
lods
push
sbb
in
dec
sar
out
clc
sub
rolb
icebp
push
pop
push
xchg
mov
mov
xor
ljmp
hlt
cmp
enter
call
ret
cli
jo
dec
in
inc
cmp
iret
ljmp
xchg
xchg
inc
cmpsl
inc
dec
or
jns
js
out
xor
enter
sbb
out
sbb
aas
lcall
out
jg
popf
rol
xor
jg
lret
cld
inc
xor
mov
cmpsl
mov
dec
push
roll
lea
sub
sub
lret
fwait
clc
inc
push
incl
sbb
cmpl
mov
inc
fsts
repz
fimuls
jmp
outsl
jns
rorb
ss
js
xor
adc
push
or
jmp
jmp
arpl
mov
jne
dec
dec
sub
adc
lcall
inc
mov
pushl
and
cli
xor
clc
icebp
jmp
adc
test
clc
xor
adc
pushl
xchg
pop
aaa
fs
outsb
mov
movl
call
rcl
mov
mov
lcall
cmp
in
dec
call
mov
jnp
clc
fildl
test
out
and
cmpsl
push
andb
jge
add
in
cmp
mov
sahf
in
pop
notb
jnp
gs
adc
call
cmc
fs
mov
rcll
pop
xor
stc
lret
data16
call
mov
dec
mov
insl
mov
lcall
dec
lahf
cmp
sarl
pop
fxam
jl
or
mov
mov
pop
xchg
roll
cmc
mov
sub
out
add
pop
je
loopne
sub
ret
sub
jae
scas
ljmp
into
scas
sub
pop
dec
jno
xchg
sub
aam
stos
fs
into
xor
stc
lcall
and
cmp
push
mov
mov
and
int3
inc
fs
andb
icebp
imul
jae
ljmp
sbb
ret
shlb
or
xor
jecxz
icebp
mov
iret
mov
ljmp
push
mov
out
pop
clc
pop
inc
bound
cld
call
jnp
fstps
idivb
sub
ljmp
repnz
cld
shll
mov
sub
loop
pop
aas
mov
data16
ljmp
dec
sub
pop
cmp
mov
test
loop
cmp
subb
popa
mov
cmp
test
popa
int
dec
mov
jmp
dec
ss
into
mov
mov
incl
es
aaa
cmp
ret
shrl
daa
xchg
cmp
adc
mov
adc
call
aam
loope
andb
add
cmp
jnp
xor
add
or
inc
cmpsb
push
or
jmp
mov
sbbl
out
popa
movsb
inc
cwtl
mov
mov
sbb
rcrl
inc
cmp
ret
add
push
sbb
mov
jns
cmp
pop
movsl
aaa
inc
clc
inc
inc
mov
mov
push
imul
flds
jg
subb
pop
cmc
mov
sub
adc
sbb
xchg
mov
sti
cmpsl
mov
mov
call
mov
jno
inc
aaa
mov
add
jmp
movsb
push
decl
pop
push
pop
outsb
inc
roll
insb
push
pop
mov
test
sbb
rsqrtps
lock
call
mov
fwait
adc
lock
out
mov
sub
xor
xchg
xor
sub
mov
aad
lcall
push
cmp
call
cmp
jo
xchg
ljmp
les
fiaddl
adc
mov
subl
jne
xchg
mov
int3
jb
fsub
out
adc
test
incl
ret
icebp
sbbl
xchg
or
das
push
and
stos
jnp
adc
jo
lods
cli
in
sbb
jae
cmp
mov
and
jg
incl
jg
add
sarb
das
sbb
adc
mov
jmp
fcomip
cmp
cmp
idivl
push
ss
or
out
addl
mov
fiaddl
jnp
jecxz
pushf
fidivrs
xchg
cmp
push
jg
aam
lret
decl
mov
stc
jl
push
pop
into
jecxz
mov
jae,pt
call
xor
sub
frstor
push
test
jne
add
dec
dec
into
fsubrl
dec
add
ja
add
fcmovne
xor
call
adc
add
mov
inc
jle
sbb
mov
xchg
mov
mov
add
pop
and
outsb
movl
jo
or
sbb
cmpsb
adc
lcall
dec
in
mov
push
jnp
cli
inc
sbb
sub
lds
and
pusha
push
inc
inc
popf
cltd
je
imul
mov
lret
xchg
inc
jmp
lcall
cmp
scas
fwait
cmp
or
stc
sti
loop
mov
adc
sbb
jmp
cmpb
pushf
cmpsl
gs
add
mov
out
jge
sbb
call
inc
dec
pop
or
lcall
repnz
push
mov
add
add
and
mov
mov
lcall
stos
sub
jbe
push
mov
add
pop
imul
stos
call
call
sub
pop
jno
adc
int3
or
sub
loope
add
ljmp
shlb
test
add
xchg
das
test
and
pop
xchg
jl
cld
lcall
lret
sti
and
mov
nop
aas
clc
xchg
lock
jg
mov
push
mov
pushl
pop
pusha
jae
std
pop
adc
lahf
adc
loop
int
push
sbb
dec
cmp
lret
add
incb
jae
mov
jl
push
sub
jg
add
cli
jmp
jmp
jmp
inc
ja
cmp
lds
fwait
js
jg
jae
stos
xor
lods
lds
ss
fdivr
and
dec
or
lods
jne
cmpsb
ljmp
incl
repnz
lds
mov
lods
les
in
mov
sub
jbe
popf
incl
insl
into
push
ljmp
xchg
enter
out
fbstp
pop
rolb
stc
loope
or
dec
ds
ljmp
fdivrl
cmp
xchg
jo
mov
lcall
lret
ud0
fcomip
rcl
push
xchg
ret
push
and
mov
shrl
int3
mov
jmp
xchg
pop
cld
mov
sub
gs
popa
sbb
or
inc
sbb
lcall
clc
repz
xchg
xchg
mov
loope
jmp
scas
aaa
icebp
mov
cmp
mov
or
pop
xchg
loopne
add
mov
push
dec
push
xchg
addps
and
pushl
into
lcall
dec
stos
test
ffreep
insl
fwait
mov
ret
incl
insl
push
test
xchg
mov
pop
andb
outsb
mov
mov
shlb
push
add
push
cld
push
sbb
js
jo
add
mov
minps
cwtl
adc
cld
mov
mov
or
incl
call
inc
test
sub
lcall
jmp
sbb
adc
xchg
pop
sub
sbb
cmp
lcall
int
xor
sbb
icebp
mov
xchg
fcmovnb
lea
cld
call
outsl
add
pop
dec
nop
or
mov
cli
ss
or
xchg
lcall
mov
lock
pop
push
stos
cmp
dec
cwtl
int
ficoml
int
push
or
and
mov
lret
mov
sub
stos
ret
mov
pop
mov
xchg
mov
in
xor
mov
sbb
test
push
out
notl
pushl
xchg
xlat
nop
sub
mov
rcrb
adc
xor
int3
sub
mov
ljmp
idiv
sbb
push
or
mov
lret
imul
cmpsl
dec
sbb
push
push
push
jg
mov
dec
inc
pop
adc
cli
loop
jp
mov
jo
dec
stos
hlt
into
and
repnz
scas
dec
out
nop
test
rolb
sub
int3
dec
sub
cmp
ljmp
bound
jmp
xor
fistps
jp
cmp
mov
jp
shrl
fcomip
push
mov
into
in
adc
lods
not
loope
andl
push
adc
xor
inc
and
inc
cwtl
cmpsl
mov
insl
aam
jg
test
inc
notb
add
out
ljmp
add
mul
lret
mov
popa
cmp
shll
xor
sbb
stos
cmp
pop
out
cmp
aaa
dec
push
mov
insb
inc
in
inc
mov
insl
adc
jo
decl
out
in
out
cmp
rcr
bound
jge
decl
ljmp
jecxz
mov
jl
lahf
je
sti
fs
rolb
popf
and
std
in
decl
enter
fstpt
mov
xor
in
popa
mov
loopne
mov
aaa
cld
ret
gs
jns
insb
test
je
pop
cwtl
lret
push
cmp
sbb
xchg
jns
sub
lcall
push
dec
int3
fnstsw
dec
xchg
xor
daa
data16
cmpsl
shll
fldenv
pusha
jg
inc
call
scas
imul
lret
inc
fwait
sub
subb
adc
mov
adc
jmp
cmp
loopw,pt
fwait
in
pushl
adc
out
jmp
sbb
jle
aad
sub
pop
std
sarl
stos
lcall
ficoml
leave
sub
out
push
inc
adc
jno
mov
push
repnz
xor
call
aad
adc
adc
pop
aaa
jmp
cmp
nop
fcoml
sbb
mov
xor
fldt
lock
dec
aas
loopne
inc
pop
sub
movsb
addl
mov
mov
ljmp
sahf
dec
push
movsb
es
stc
or
pusha
push
mov
out
ss
imul
cmp
dec
addl
insb
bound
aaa
jae
or
pop
arpl
arpl
mov
ljmp
add
btc
push
stc
mov
lock
pop
sbb
xchg
bswap
jecxz
mov
nop
sahf
adc
add
shll
movsl
mov
mov
insl
add
ds
je
jge
add
jns
les
pop
add
mov
jmp
outsl
sbb
rcrl
cmp
enter
js
dec
fdivp
mov
jne
xchg
add
pop
test
and
or
decl
mov
mov
xchg
xor
adc
cs
hlt
hlt
cs
call
xor
aad
push
loope
xlat
leave
mov
aas
fcoml
incl
lcall
dec
ror
into
clc
jb
in
mov
filds
xchg
dec
sub
divb
cmp
stos
xchg
les
and
and
popf
push
shlb
arpl
movsb
inc
lcall
dec
icebp
iret
ret
or
mov
xchg
and
sbb
push
aaa
xor
call
cmp
scas
popl
add
subb
lods
fadds
mov
daa
ljmp
test
inc
aaa
adc
xchg
mov
imul
call
enter
mov
push
mov
das
popf
add
jbe
nop
sbb
cld
lcall
cmp
ret
cmp
xchg
filds
movsb
or
jns
sti
rcrb
jl
incl
cltd
and
pop
or
int3
cli
mov
repz
pop
sub
call
xchg
scas
mov
adc
inc
je
insl
mov
and
jmp
adc
push
decl
fidivrs
lds
ja
xor
mov
xor
orb
addb
xchg
pop
or
arpl
jne
ret
mov
ljmp
out
andb
push
sub
mov
aad
jmp
jp
sub
cltd
mov
mov
push
lret
push
lret
clc
lcall
fwait
mov
push
lods
mov
incl
in
jb
inc
push
movsl
xor
popf
movsl
bound
pop
fidivs
sbb
out
nop
xlat
cmp
sbb
xchg
aam
jl
lret
out
mov
pop
loopne
out
push
pop
xor
jmp
out
sahf
sbb
mov
push
pop
or
paddsw
xchg
jo
sbbb
xchg
out
nop
or
ljmp
incl
fdivrl
and
mov
mov
arpl
push
pop
lcall
call
adc
mov
cmp
lds
sub
out
test
cltd
dec
dec
data16
outsb
dec
aad
xchg
xor
mov
and
mov
mov
orb
lods
ret
mov
add
incl
sbb
cmp
pop
les
pop
sbb
dec
lea
xor
lcall
sub
fnstcw
scas
imul
test
and
aam
ljmp
xchg
cli
lret
shrb
pop
mov
adc
inc
data16
jle
mov
dec
repz
gs
lcall
add
test
loop
dec
xor
nop
testl
pop
fs
sub
mov
ljmp
fisubs
ficoms
pushf
push
mov
sahf
pop
mov
rol
cmc
add
pop
jp
aas
mov
xor
mov
inc
cmp
mull
out
pop
test
mov
in
in
mov
pop
cwtl
fbstp
lock
shl
enter
loopne
aam
mov
sub
inc
and
sub
lock
mov
cli
inc
xchg
repz
or
js
dec
add
mov
test
cmp
add
ljmp
mov
loope
pop
lcall
fwait
cmpsl
incl
mov
imul
call
push
sbb
es
mov
test
lock
movsb
xchg
out
adc
sbb
call
mov
ljmp
cmc
cmpsb
into
sub
push
push
sti
xchg
aaa
out
ljmp
out
pop
shlb
ficompl
loope
ja
and
pop
imul
push
clc
cmc
sub
mov
mov
test
jae
sarl
test
cmp
and
cs
roll
adc
sbb
sub
dec
pop
or
or
xchg
jmp
push
inc
jge
mov
jl
popa
repnz
sbb
push
and
inc
mov
sbb
mov
mov
dec
aam
incl
cmpsl
xchg
or
cltd
xchg
dec
push
bound
insl
adc
mov
ljmp
and
xchg
lret
fwait
mov
addb
mov
ret
into
pop
or
mov
jle
ljmp
cmc
dec
pop
mov
xchg
mov
jb
ljmp
xor
jp
out
xchg
imul
pushl
dec
dec
push
cmpsl
addr16
push
aam
cmpsb
ret
pop
sub
cmp
pop
or
icebp
push
add
scas
xor
enter
and
roll
lds
inc
sub
push
mov
and
pop
sbb
daa
and
mov
sub
in
pop
sub
lret
cmp
add
adc
add
filds
jo
add
in
pop
leave
xchg
insl
out
mov
pushl
adc
test
jnp
mov
sbb
jno
rorb
xlat
pusha
dec
add
add
das
nop
orb
jge
xlat
fistps
call
cwtl
jl
arpl
fs
inc
lods
add
fistl
jl
and
sub
ljmp
mov
and
push
out
mov
push
pop
insl
out
adc
xchg
push
lret
lret
dec
add
mov
xchg
adc
std
add
lods
push
push
jno
push
lods
cmc
outsl
or
xchg
adc
fcmovnbe
imul
ljmp
mov
ret
mov
cmp
sti
imul
aad
ret
pushl
mov
jge
adcl
stos
imull
mov
test
add
xchg
negb
pop
inc
pop
inc
xor
cmc
test
iret
and
sbb
xchg
dec
mov
sahf
xor
in
test
div
mov
pop
dec
inc
jo
decl
insl
push
cmpl
jmp
pop
fistpl
jne
mov
fs
jmp
push
push
subb
movsl
arpl
inc
mov
sbb
push
mov
incl
dec
shrl
jmp
mov
movsl
mov
lahf
filds
popf
repz
decl
outsl
fsubl
int3
call
xor
andb
push
xchg
sahf
inc
rorl
xor
fcoms
xchg
addl
test
sbb
call
cmp
lahf
xor
cli
push
push
sbb
cs
mov
fcompl
mov
push
and
fs
xchg
out
adc
lcall
outsl
mov
imul
xchg
fldt
inc
enter
call
adc
sbb
lods
inc
cs
sbb
aad
dec
and
lret
inc
popa
std
ljmp
mov
in
sub
stos
pushf
mov
int3
mov
stc
push
in
jg
cmp
orl
sbbb
sub
mov
icebp
sub
pushl
cltd
and
ret
mov
aaa
jb
cltd
ret
jecxz
xchg
sub
sbb
decl
out
xor
cwtl
mov
or
xchg
stos
loop
lcall
mov
mov
cmp
call
cwtl
mov
std
lret
fadd
dec
neg
pop
ja
out
fndisi(8087
int3
mov
inc
cmp
pop
pushl
ret
fs
pop
std
pop
push
pop
inc
sub
ja
jno
dec
shrl
lret
inc
jg
inc
jne
dec
imul
push
test
mov
mov
or
sub
or
mov
out
mov
pushf
imul
mov
lcall
call
stos
int3
lret
mov
repnz
shl
mov
sbb
mov
inc
jp
jns
imulb
xor
or
pushw
ret
fdivp
out
fisttps
imul
decl
push
rolb
adc
xor
sub
push
data16
add
xchg
pushl
dec
fstpt
jmp
int
out
sbb
and
add
ffree
inc
out
add
lcall
test
in
insb
incb
mov
or
xor
xor
pop
fimuls
xchg
shl
push
out
les
repnz
sti
mov
cmc
add
adc
cmpsb
mov
scas
mov
stos
pop
stc
lsl
std
incl
mov
enter
dec
test
pop
sbbl
sbb
push
iret
and
push
xor
pop
mov
push
sbb
subl
mov
ret
cli
ljmp
daa
mov
mov
and
and
lods
xor
sub
shrb
out
cmp
jmp
push
cld
push
inc
pop
fsubrs
movsb
aam
mov
incl
mov
enter
mov
pop
and
xchg
aas
cld
lret
pop
add
pop
inc
push
pusha
push
xchg
mov
add
push
mov
sahf
mov
mov
ljmp
sti
mov
subl
push
mov
test
rorl
pushf
mov
call
push
gs
pop
imul
push
out
pop
sahf
out
movsl
sub
in
sbb
mov
call
xorb
push
cmpsb
cmp
adc
xor
testb
push
jle
lcall
in
clc
nop
jl
xor
xchg
jge
aaa
sbb
cli
or
pop
cmc
sbb
incl
adc
out
cmp
aam
into
adc
or
fcompl
mov
jns
cmp
adc
xchg
and
data16
mov
mov
fmuls
xor
hlt
jns
and
out
sbb
pop
scas
and
cmp
cmp
push
mov
pop
cmpsl
addb
push
out
push
jmp
je
xor
inc
add
dec
dec
pop
pop
xor
bound
ss
jmp
outsl
cmp
push
ds
dec
pusha
xchg
int3
mov
push
sti
adc
mov
lods
rorl
jmp
mov
imul
js
xchg
sbb
pop
js
leave
fisubrs
mov
test
call
mov
mov
test
pop
pop
int
fdivs
icebp
or
pop
arpl
pushl
lods
js
iret
divl
iret
insl
stos
sub
mov
xor
ret
ljmp
xor
movsb
enter
in
dec
dec
movsb
in
and
aam
ljmp
fstpl
xchg
xchg
shlb
or
shlb
arpl
mov
jno
adc
push
sbb
adc
jg
aam
popf
in
sahf
int3
shl
adc
fsubs
xlat
ds
xor
mov
out
dec
push
ds
push
push
mov
enter
mov
cs
rep
loopne
addr16
sub
jnp
lahf
inc
sub
int
subl
call
test
sbb
xchg
pop
add
inc
dec
fsubrs
inc
shrb
push
xchg
push
out
cli
pushl
daa
scas
push
xchg
stos
fwait
out
sbb
in
xor
test
flds
push
jg
inc
mov
adc
test
stc
cmp
in
gs
call
mov
in
insl
dec
icebp
test
mov
dec
inc
pop
insb
leave
in
mov
data16
hlt
xchg
mov
dec
lahf
or
push
push
jg
aaa
subl
lret
je
cmpsb
out
push
dec
ficoml
sbb
insl
imul
or
cmp
xchg
shrl
sub
stc
iret
adc
sbb
push
mov
vandnps
cmp
or
pop
pop
in
and
inc
in
fstpl
and
jecxz
stc
xorl
or
xchg
lds
push
daa
adc
pop
decl
cltd
movsb
jae
fwait
dec
adc
icebp
dec
xchg
xchg
dec
dec
sub
jmpw
push
and
call
ja
imul
in
dec
stos
push
mov
jge
and
popf
movsl
mov
add
mov
push
aam
clc
je
sub
inc
daa
hlt
imul
sbb
mov
xor
loop
jmp
jl
dec
mov
ja
out
cmp
fcomip
inc
and
inc
movaps
cs
push
insl
mov
mov
dec
pushl
shl
and
rcl
mov
fistpl
lret
mov
sbb
arpl
mov
sbb
lcall
xor
jl
sbb
sub
lret
jb
or
loope
in
ret
lcall
test
adc
in
outsb
push
adcl
mov
lcall
repnz
lret
cmp
incl
test
test
insb
sub
and
fdivrs
xlat
mov
or
les
call
mov
mov
dec
xor
cli
mov
and
push
adc
aaa
mov
inc
ljmp
int
addr16
pusha
sbb
in
iret
fwait
dec
add
xchg
push
cmpsb
xor
lcall
xor
inc
pop
pusha
lea
mov
xchg
mov
dec
lret
bound
ljmp
pushf
push
movsb
dec
mov
xchg
dec
sub
mov
test
lahf
in
sbb
scas
pop
imul
and
mov
sti
cmp
mov
sub
out
cli
ja
in
mov
outsb
out
push
notl
aam
ljmp
ret
stc
dec
cmpsl
adc
mov
mov
jg
xchg
sbb
jg
arpl
aad
xor
sbb
pop
jg
and
or
flds
inc
out
test
scas
cmp
or
lahf
jl
jmp
jp
sbb
out
and
jp
push
aam
ss
lcall
test
mov
xchg
ljmp
out
ss
test
pop
jo
mov
pushl
push
mov
repz
xchg
jmp
es
cmc
and
push
pusha
pop
jge
das
sub
lcall
dec
fmul
push
jb
or
ss
mov
dec
pop
cmc
dec
out
xlat
add
and
addr16
sub
mov
jp
lea
inc
shrl
add
lods
mov
xchg
sub
out
nop
or
mov
cmp
xor
add
popf
mov
mov
test
mov
sar
lds
mov
and
mov
pusha
movsl
inc
in
mov
adc
fldl
dec
sarl
inc
loop
adc
dec
jmp
cld
stos
neg
push
cs
jb
inc
pop
clc
decl
mov
pop
mov
mov
sbb
cmp
roll
cli
cli
jbe
jmp
daa
cmc
mov
lods
jno
lock
push
sbbb
hlt
mov
jecxz
shll
out
stos
loopne
inc
cwtl
in
in
mov
and
pop
hlt
mov
ret
lret
jns
push
out
cmp
inc
push
push
and
in
or
push
or
sub
adc
movsl
fldt
adc
aas
pop
and
idiv
mov
call
inc
mov
stos
pop
and
mov
nop
andl
lcall
dec
push
push
repnz
adc
mov
js
and
ret
decw
sar
xor
push
scas
into
out
orb
in
fcoms
incl
cli
dec
roll
iret
mov
jecxz
or
insb
aam
jle
daa
lcall
lcall
mov
dec
or
mov
testb
push
push
mov
subb
or
pop
add
dec
into
pop
dec
data16
lcall
pop
popa
mov
cltd
mov
call
mov
testl
or
and
outsl
xorb
xor
ljmp
push
int
mov
cmp
xchg
in
cmpb
push
inc
ljmp
sbb
pop
ja
aad
pop
pextrw
test
daa
mov
testb
sub
mov
and
mov
push
jbe
cli
hlt
push
sbb
gs
ret
dec
jmp
mov
imul
lret
sarl
sub
adc
ljmp
pusha
inc
jmp
adc
xor
je
cmpsb
call
jle
sbb
jl
xchg
mov
sub
pop
out
test
and
mov
mov
pushl
lret
bound
pushf
mov
inc
and
lods
rorl
pop
sbb
add
cmc
xlat
lcall
js
repnz
mov
js
inc
int
je
push
adc
fistpl
pusha
call
jg
lea
leave
jg
jg
add
out
inc
sbb
push
lahf
ljmp
push
js
test
mov
int3
test
jo
fisubs
decl
jno
or
iret
inc
jns
scas
sti
pop
lea
mov
ret
lock
mov
les
jns
dec
fistpl
out
aaa
decl
rcll
cmc
data16
sar
fidivrs
or
les
int
xchg
ss
shll
aam
adc
call
or
cmp
cmpsb
jle
adc
mov
adc
testb
jge
push
cmp
adc
dec
pop
adc
mov
in
add
adc
mov
pop
push
fcom
xor
repnz
sahf
sbb
in
jae
outsl
jbe
inc
shlb
dec
mov
cmc
jae
movsb
cmp
push
inc
and
shrl
dec
push
mov
out
mov
sbb
xchg
fmulp
mov
and
mov
jge
mov
dec
sbb
cmp
imul
xchg
and
scas
xchg
or
pop
mov
mov
std
and
cmp
int
std
mov
ljmp
jp
bnd
mov
pop
xor
lods
and
jle
fimull
xchg
adc
mov
and
xlat
shll
sub
es
call
jle
popf
sbb
mov
add
dec
fwait
subl
jg
insb
stos
inc
stc
jmp
or
mov
aam
mov
imul
or
adc
js
jmp
mov
int
dec
test
dec
pushf
push
imul
pusha
jp
dec
outsb
jl
push
sub
dec
repnz
lret
ret
pushl
out
and
sbb
into
test
inc
ss
fcomps
inc
icebp
outsb
insl
lret
xor
shrl
pushl
dec
dec
xor
dec
jno
xchg
popa
adc
push
lock
cwtl
popl
loopne
xchg
dec
data16
lcall
add
mov
sub
push
jbe
lock
into
mov
loop
sub
sbb
sti
jnp
lea
and
or
js
adc
mov
data16
out
aaa
int3
jb
test
pop
test
lds
ljmp
pop
in
decl
out
clc
inc
pop
fsubr
imul
jns
loope
aam
and
add
leave
jmp
addl
aaa
mov
push
sub
pusha
sbb
jns
push
movsb
mov
jg
lret
stos
pop
push
pop
into
mov
mov
and
mov
scas
xchg
fildll
mov
loopne
loop
stos
push
aad
mov
das
gs
mov
jo
es
jns
adc
pop
mov
inc
fidivrs
fcomip
mov
bound
push
push
les
imul
or
mov
push
adc
jmp
mov
sbb
scas
pop
or
dec
inc
aaa
mov
dec
add
mov
mov
push
rep
cmpsl
and
jl
jp
std
pop
push
roll
pop
test
inc
jmp
cmpsb
test
outsb
add
out
sahf
call
outsl
sahf
ja
add
xchg
cmp
decl
push
pop
out
mov
mov
ljmp
sub
decl
xor
xchg
mov
ja
cmpsl
or
sahf
aad
es
ret
lret
ljmp
sub
jne
divb
push
shll
and
and
and
mov
lcall
call
test
sbb
dec
sub
cwtl
push
cmp
push
je
xchg
xchg
push
pop
stos
jg
pushl
sbb
popa
fnstcw
cmp
sarl
pusha
mov
jg
lods
sbb
lcall
xcrypt-cbc
cmpsl
adc
leave
dec
loop
pop
incl
or
addr16
xchg
aaa
sbb
movsl
xor
pop
cmp
sbb
sub
loop
jns
or
and
pusha
arpl
test
ja
mov
leave
insb
inc
xchg
pushl
in
or
xor
int3
mov
daa
inc
aas
insb
push
pop
and
lcall
subl
mov
xor
add
mov
mov
mov
mov
sarb
movsb
cli
test
cmp
pop
cmp
pusha
xbegin
jmp
dec
lods
pop
mov
mov
and
andb
mov
or
call
sbb
loope
jae
movb
dec
lret
xchg
lahf
fwait
cli
fdivrs
call
loope
push
fs
and
mov
cmpsb
out
push
mov
and
adc
push
xor
xchg
cs
nop
mov
call
mov
ljmp
cs
xor
xor
xchg
mov
jmp
rclb
push
and
pop
sub
lret
pop
pop
push
mov
dec
push
push
call
push
cmp
mov
jmp
or
cltd
sbb
js
cwtl
call
cmp
sbb
aas
lock
mov
sahf
mov
stos
sbb
pop
mov
xor
out
xchg
es
mov
pop
in
dec
arpl
imul
ret
mov
iret
divb
popa
out
lret
aas
int
call
testb
mov
lcall
andb
shll
ljmp
push
cmp
sub
dec
pop
lcall
jb
and
pop
lods
jg
mov
roll
xchg
lcall
add
ljmp
rolb
divb
cld
and
mov
imull
lods
cli
dec
jno
ljmp
cmp
dec
aam
lcall
popl
inc
jl
push
icebp
fcomps
aad
inc
cs
vmovddup
or
xchg
call
cmp
pop
outsl
ret
je
sbb
sbb
js
movsb
cld
scas
jl
inc
pushf
ret
out
pushl
jo
jg
add
lds
out
shl
sub
or
mov
dec
out
incl
test
lds
pop
or
push
add
dec
mov
in
aam
inc
je
jecxz
cmp
repz
movsb
dec
lret
movsb
push
scas
clc
repnz
mov
aaa
push
inc
pusha
mov
ljmp
xor
and
jg
in
out
in
push
pop
repz
pop
cmp
call
xchg
daa
test
push
fs
mov
push
scas
cli
cmp
pushl
out
fmul
bts
pop
out
movsl
rorl
adc
cmc
push
jo
mov
mov
mov
and
incl
mov
sub
aaa
fistl
pop
lcall
popf
popl
lret
in
or
jmp
ds
ljmp
call
std
aam
pop
push
and
and
or
out
mov
mov
mul
arpl
es
pop
push
xchg
dec
mov
in
ret
cmp
popa
ja
insb
out
push
lods
stc
ret
xor
mov
xchg
lock
jp
or
imul
test
gs
xchg
xor
mov
jle
cmp
call
fs
aaa
pop
xchg
sarb
sbbl
xchg
lods
notb
or
fwait
cmp
scas
stos
idiv
decl
or
addr16
popa
inc
aad
out
mov
sbbl
mov
leave
pop
cmpb
adc
fdivl
dec
insl
mov
data16
inc
jge
sti
xor
mov
test
cs
xchg
push
enter
leave
jle
dec
aaa
jo
fbld
adc
mov
rorl
push
in
sbb
jle
clc
mov
ljmp
fnstcw
imul
sti
in
fnstenv
xor
add
xor
jmp
sbb
mov
je
icebp
daa
jp
push
mov
xor
scas
jmp
arpl
push
fmull
outsl
sub
sub
xchg
cltd
aas
test
repz
mov
jnp
and
shl
out
push
fcmove
shl
dec
adc
mov
xlat
imul
incl
pop
and
inc
imul
testl
ja
subb
mov
mov
loope
popf
lcall
push
mov
lock
mov
into
sbb
push
out
mov
xchg
and
push
mov
mov
sbb
fwait
dec
xor
sbb
out
pop
jnp
adcl
xor
mov
inc
enter
lcall
push
pop
push
daa
dec
je
xlat
lahf
mov
popa
test
ljmp
cmp
cld
or
push
dec
gs
xchg
mov
outsb
dec
jl
xor
ljmp
mov
push
out
push
daa
imul
dec
test
jmp
jg
pop
imull
hlt
add
sar
mov
cmpsb
xchg
pop
js
out
mov
pushl
mov
sahf
xor
movsl
xchg
cmp
cvtdq2ps
insb
jns
mov
jmp
mov
jbe
ret
cmp
inc
mov
fbld
adc
mov
lcall
fidivrs
push
into
mov
cltd
and
cmpxchg
xchg
dec
cmpsl
lods
iret
iret
dec
xlat
pushl
aaa
pop
fdivs
dec
fwait
sbb
aaa
add
inc
and
jg
xor
jae
xor
cmp
lea
icebp
es
jns
inc
sbb
les
leave
leave
jmp
rcrl
jns
pop
or
adc
add
xchg
and
add
mov
loop
stos
clc
ja
add
nopl
aam
pusha
aas
pop
arpl
ljmp
je
ret
int
movsb
aad
push
shl
iret
xor
andb
jb
jb
mov
xor
test
out
jge
and
jmp
sub
inc
fisubs
xchg
sub
or
pop
outsl
lods
jg
jecxz
xor
jno
jg
inc
mov
push
lret
cmp
mov
cmp
call
pop
lock
pop
adc
dec
and
lock
mov
outsl
divl
mov
xchg
hlt
jmp
test
push
add
cmpsl
push
cmp
lret
cmc
mov
xchg
in
ficoms
mov
cld
sub
arpl
mov
ljmp
push
and
and
xor
movsb
inc
movsl
mov
inc
lcall
mov
mov
and
icebp
mov
push
inc
jno
pushl
cld
cli
mov
loop
lcall
rol
imul
add
fdiv
call
imul
lret
pushf
jg
sub
and
lods
xor
cmc
cmp
aas
cmp
pusha
lret
stc
mov
fbld
jl
adc
dec
pushf
push
cld
call
pop
mov
test
in
shlb
mov
sarb
lcall
add
outsb
dec
ja
in
xchg
mov
mov
sahf
mov
femms
xchg
pop
push
dec
push
imul
das
xchg
jl
dec
add
xchg
test
adc
xchg
push
pushf
shll
sub
cmpsl
test
mov
in
pop
mov
cltd
jp
or
mov
jmp
call
push
push
xor
mov
sbb
insl
lcall
data16
or
or
incl
add
xchg
pop
xchg
or
pop
jp
lret
inc
sub
push
cwtl
pop
jb
fcomip
ljmp
sarl
pop
aas
mov
mull
adc
lahf
pop
stc
push
hlt
arpl
jnp
sbb
clc
in
dec
xchg
fldenv
fs
xor
cs
lcall
out
or
jmp
and
inc
xchg
jmp
add
cmp
dec
push
cmc
les
mov
ljmp
cli
test
xchg
pop
xchg
sahf
xchg
fstpt
ss
sbb
gs
or
jg
inc
push
jne
nop
pop
mov
xchg
and
arpl
mov
jae
xchg
ja
call
movsb
in
push
call
sysexit
cmp
pop
popf
pop
add
scas
sbb
pop
test
scas
pushf
mov
cmp
imul
sbb
adc
xchg
icebp
or
jae
in
aas
rcll
sarl
jo
jne
push
xor
out
and
dec
xor
loope
mov
in
pop
outsb
gs
call
and
mov
and
mov
fnstcw
push
lea
out
add
mov
adc
clc
mov
cli
cmp
dec
dec
aaa
xor
loop
sbb
xchg
jmp
scas
clc
push
cltd
mov
inc
xchg
mov
incl
or
xchg
insl
pop
sub
jl
pusha
add
cmpsl
mov
enter
call
xchg
clc
lret
std
jmp
xor
lret
jl
xor
into
clc
rol
inc
pop
dec
cmc
pop
mov
and
call
arpl
int
in
les
mov
mov
mov
add
lahf
leave
push
sti
adc
sub
call
jo
dec
loop
pop
cmp
xchg
cld
mov
jge
mov
scas
outsb
call
inc
add
dec
and
cmpsb
call
push
add
mov
mov
nop
adc
stc
sbb
incl
jns
pop
cmpsb
outsl
arpl
into
lahf
ja
inc
mov
pop
ret
inc
adc
icebp
lret
pushl
cld
decl
adc
js
pushf
add
js
push
movl
imul
call
lahf
pop
test
or
ret
adc
fcomip
fwait
mov
mov
data16
std
push
aam
test
push
scas
inc
mov
iret
dec
push
xor
aad
call
xchg
jg
mov
and
mov
jecxz
loopne
push
jbe
jle
ja
mov
movsb
flds
outsl
sbb
push
pop
pop
mov
push
ljmp
imul
mov
jle
jle
xor
icebp
dec
mov
decl
xchg
cmp
add
aaa
test
bound
lret
xor
pop
idiv
out
clc
out
loope
xchg
filds
jae
sbbl
jb
pop
fdivr
out
clc
jmp
xor
scas
push
cli
push
aam
jns
mov
push
pushf
mov
outsl
clc
mov
mov
mov
lock
aas
push
lsl
mov
mov
add
loope
push
inc
fistps
js
add
mov
outsl
dec
or
cs
and
dec
push
xchg
lock
outsb
and
push
mov
addr16
hlt
add
stos
jno
lret
addb
inc
mov
stc
mov
ja
imul
fsubp
ja
es
jo
imul
sbb
imul
jp
ds
add
adc
andl
push
adc
shrb
scas
add
loope
jb
into
insb
push
ror
or
add
add
sbb
mov
dec
fs
and
sub
pop
and
fistpl
dec
jo
daa
sbb
jge
inc
xor
gs
lods
loopne
nop
xchg
push
outsl
outsl
insb
push
cltd
inc
or
outsb
popa
jo
push
loope
jge
dec
sbb
pop
sub
aaa
ret
adc
dec
jne
js
or
sbb
add
or
push
popa
adc
insl
add
cmp
add
aas
push
incb
jb
sbb
jb
or
add
push
es
ljmp
dec
add
xorb
in
xchg
adc
xchg
jo
mov
das
add
inc
jl
mov
sbbl
imul
mov
pop
add
fxch
adc
inc
inc
sub
mov
push
outsb
lea
inc
imul
insl
jecxz
or
xchg
or
inc
or
sub
push
fisubs
rorb
inc
mov
mov
mov
pop
ds
insb
jne
mulb
js
addl
xchg
dec
push
xor
pop
adc
imul
loop
inc
sbb
jo
inc
push
fildl
mov
test
push
pop
push
pop
push
mov
sarl
ja
and
subl
jbe
in
pop
jb
xor
jle
subl
jns
mov
push
cmpl
adc
sbb
push
push
push
hlt
fs
add
jecxz
std
lods
loope
add
cmp
push
xor
adc
popa
pop
inc
insb
rcll
packsswb
push
pop
test
stos
inc
dec
sbb
sbb
and
adc
jo
popa
leave
mov
jle
arpl
mov
sub
sbb
and
mov
adc
dec
or
js
push
push
sub
cs
pop
or
outsl
inc
jne
imul
shlb
lret
mov
mov
imul
xchg
popa
and
jnp
shll
adc
js
mov
inc
or
pop
dec
inc
dec
cmp
jnp
or
inc
mov
pop
mov
push
cmp
lahf
xor
repz
stos
push
in
jecxz
lods
xor
js
pop
jl
ja
mov
jo
inc
stos
pop
push
pusha
inc
inc
dec
cmp
jo
xlat
xchg
and
and
inc
popa
or
fisubs
jo
jp
sbb
loope
push
jg
enter
sbb
addl
sbb
rcl
xchg
sbb
outsb
adc
jae
in
loop
jns
int
push
add
or
gs
and
mov
pop
stos
outsl
push
imul
outsl
jns
inc
je
mov
add
push
inc
inc
out
mov
xlat
push
enter
inc
sbb
pop
dec
ret
into
mov
mov
and
insl
push
or
sbb
push
scas
in
ret
loope
stc
mov
add
xor
add
jns
xor
pop
in
stos
loope
xor
xor
jo
shll
adc
jbe
add
loope
pop
aaa
cmp
jne
and
inc
dec
movsl
rclb
and
xlat
loope
sahf
pushf
push
jne
inc
fmuls
mov
or
fbld
jecxz
inc
xor
jae
xor
mov
pop
popa
add
dec
or
stos
test
xor
outsl
rol
adc
mov
sub
adc
lods
add
mov
pop
inc
sbb
pop
outsb
push
outsl
add
andl
pop
and
movsb
add
sbb
mov
movsl
sub
rolb
out
mov
cmp
dec
gs
jne
dec
ja
fildll
fwait
sbb
arpl
lods
ret
mov
dec
add
inc
and
jg
popa
fadd
mov
push
jmp
mov
out
scas
xchg
add
shl
in
mov
jge
js
sub
nop
test
push
outsb
adc
or
mov
push
inc
inc
popa
dec
push
fiadds
xchg
pop
dec
cli
out
jne
mov
push
je
and
push
outsl
xor
jb
and
popa
and
jl
cmp
lods
jo
inc
inc
mov
pop
jae
push
arpl
mov
pop
inc
imul
lahf
mov
push
sahf
mov
icebp
mov
mov
inc
insb
testl
cmovnp
in
adc
inc
call
cli
xor
pop
and
jae
xor
adc
nop
iret
mov
jne
jns
push
vmovshdup
sahf
push
and
xor
sbb
wrmsr
or
jns
les
add
inc
xchg
movsl
inc
nop
inc
hlt
push
movsb
push
imul
dec
push
push
pop
xor
adc
jnp
adc
add
pop
xchg
outsb
inc
push
push
adc
and
adc
inc
jnp
cmp
mov
insl
dec
outsb
dec
adc
jnp
ss
ss
jnp
sar
pop
add
add
mov
imul
dec
shll
or
push
cmpsb
popf
cmpsb
xor
inc
push
xor
dec
jnp
add
adc
in
nop
lock
rcrl
inc
jb
and
fmull
pusha
out
dec
and
adc
outsl
bound
adc
popa
dec
movsb
bound
add
adc
out
inc
jb
add
jb
inc
jae
inc
leave
and
daa
mov
imul
push
fcmovnbe
inc
jo
sbb
arpl
and
push
jns
rclb
shlb
icebp
and
or
sbb
pop
jbe
dec
pop
push
mov
jo
roll
push
cmpsl
nop
mov
shrb
in
cmpsl
jb
mov
push
adc
and
push
aad
mov
fstpl
or
mov
test
fucomip
add
cmovno
fnstenv
xor
dec
or
mov
mov
out
jb
dec
push
mov
cltd
inc
xor
or
pop
sbb
outsl
push
ss
jl
pop
inc
sub
pusha
mov
xlat
xor
dec
lock
popa
mov
jae
cmp
and
enter
adc
cs
push
dec
sub
inc
cwtl
dec
push
adc
sbb
add
cmp
push
outsb
push
push
fsubl
sbb
mov
lret
shll
test
mov
imul
dec
and
and
lock
insl
jecxz
test
ret
add
cmp
xor
pop
or
and
push
aam
nop
dec
aas
in
and
addb
popa
or
fcomi
ficomps
jb
push
push
test
movsl
outsb
out
push
xor
or
mov
jno
sub
jecxz
add
das
sbb
roll
cmp
and
cmp
cmpsl
mov
addr16
int3
add
pop
pop
mov
or
iret
jns
imul
cmpsl
cmp
pop
cltd
nop
inc
push
loop
mov
cmp
lea
push
dec
push
sub
lds
or
xor
lahf
ss
ret
ret
cmc
mov
aaa
js
add
cmovno
mov
jne
popa
or
push
push
inc
out
insb
add
sub
jmp
xor
pop
xchg
dec
push
ja
imul
and
pop
pop
out
int3
rclb
add
add
push
movsb
rcll
mov
jo
add
jmp
jg
dec
mov
pop
sbb
sbb
les
jp
add
test
dec
les
fwait
add
dec
out
loopne
mov
or
add
lahf
or
dec
add
stc
xor
lcall
cmpsb
cmp
push
cmp
fildl
pop
dec
sub
pop
adcb
or
fwait
scas
stc
jae
loope
outsl
pusha
hlt
mov
push
mov
into
cwtl
bound
dec
pop
add
addl
add
xlat
pop
cmp
and
jb,pn
popa
and
mov
add
push
push
rclb
add
imul
inc
cs
adc
fsubrl
fwait
sub
add
jb
push
sbb
repz
xlat
pusha
dec
mov
push
lahf
xchg
lock
sub
out
shl
add
add
add
add
inc
add
call
or
pop
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
xor
inc
add
insb
inc
add
add
