divl
in
mov
mov
jo
inc
add
add
mov
or
lock
call
test
je
push
push
push
movsb
lcall
test
je
cmp
pcmpeqd
cmp
jae
sti
in
decl
dec
movzwl
lea
jne
sbb
xor
jmp
and
neg
sbb
and
repnz
pop
ret
jecxz
shr
inc
sub
push
push
sarl
add
or
add
pop
pop
fstpt
call
push
push
xor
mov
push
mov
xor
sbb
inc
cld
add
jmp
mov
pushf
or
push
mov
mov
pushf
mov
xchg
mov
xchg
push
js
mov
cmp
test
jne
int
pop
and
pop
leave
ret
mov
jmp
pushl
jbe
mov
decl
push
xadd
dec
test
jg
add
js,pn
mov
pushl
inc
push
mov
add
lock
pusha
mov
add
cld
add
out
or
jmp
insl
test
mov
cld
pop
push
or
or
sub
jmp
mov
lea
mov
out
adc
je
cmpl
jl
mov
push
jne
lcall
push
add
mov
jmp
mov
push
mov
push
loopne
jle
add
push
pop
cmp
cmpb
sub
sbb
push
adc
sti
out
jnp
push
pop
pop
out
cmpl
or
inc
add
call
xor
add
decb
fbld
push
jg
mov
push
mov
jns,pt
rorl
sbb
jae
jl
inc
lock
add
sub
pop
adc
jmp
ret
dec
push
enter
push
lock
mov
or
add
push
lock
js
mov
les
sub
mov
push
cmp
pop
and
int
push
or
mov
mov
enter
iret
jl
add
push
ret
ja
out
icebp
mov
cmp
ja
add
jmp
test
add
add
mov
add
dec
js
into
cmp
jg
sbb
movb
push
or
pop
repnz
push
cmp
push
add
or
sbb
pop
add
cmp
or
cld
mov
sarb
clc
mov
pop
ret
pop
mov
jbe
dec
sbb
incl
and
mov
sub
xor
inc
sub
inc
clc
sub
enter
xorl
into
xor
cmp
sub
adc
and
jmp
pop
outsb
add
jne
insl
mov
outsl
clc
pusha
rcll
sub
lds
cmp
lea
outsl
icebp
mov
repnz
pushl
pop
sti
lret
xor
fsubrs
fcomps
aad
stos
js
pop
movsb
ret
jle
mov
pop
add
pop
leave
ljmp
incb
test
or
je
add
ljmp
dec
test
sbb
jmp
fidivrs
js
cmp
pop
jo
pop
push
adc
ss
add
aaa
idiv
pop
iret
fdivs
xorb
je
add
jmp
out
shr
je
mov
pusha
adc
push
xchg
lahf
lcall
movsb
fisubrl
push
js
add
cmp
je
push
push
push
sbb
pop
push
sti
je
jge
clc
mull
inc
add
sbb
jecxz
xchg
repnz
sar
push
sub
jecxz
sub
add
jbe
shll
lock
push
inc
inc
js
dec
pop
imul
adc
pop
mov
or
repz
int3
aaa
test
popa
aaa
in
dec
fisttpl
jb
cmp
cli
push
nop
scas
call
xor
push
dec
push
aad
mov
cmp
int3
xor
call
cwtl
comiss
add
lea
push
mov
add
fst
bswap
lea
adc
scas
push
jnp
clc
addr16
xchg
outsl
je
cmpl
jle
jle
pop
jmp
sti
push
insb
aas
cmp
jge
rolb
or
idivb
add
pop
cltd
sub
sar
add
push
imul
mov
stos
ret
das
push
dec
inc
lea
sbb
push
cli
cmp
lock
inc
xchg
mov
and
faddl
xor
add
add
dec
or
adc
loopne
icebp
inc
adc
mov
or
int3
or
test
jle
push
adc
mov
push
xchg
cmp
push
ret
movsl
push
loopne
mov
or
or
aad
lea
pop
enter
add
push
addr16
push
loope
clc
xor
mov
daa
pushl
lea
and
push
into
add
sub
sub
pop
das
jmp
push
scas
and
jo
mov
push
movl
das
pop
sbb
mov
js
daa
jnp
int3
jge
push
pusha
shl
push
sub
pop
add
xor
shlb
dec
aas
push
fwait
add
movsw
inc
enter
loopne
in
pushl
jecxz
pop
pop
xchg
push
push
out
mov
shl
add
adc
mov
jmp
es
mov
add
sub
dec
ficoml
or
pop
xor
enter
adc
pop
mov
test
or
add
xor
add
or
jecxz
ret
or
cmp
cmpsl
mov
push
negl
mov
mov
xcrypt-ecb
cmpsl
or
sbb
sub
clc
mov
and
push
je
and
je
mov
xor
jge
mulb
in
loopne
in
das
mov
inc
fildl
or
push
or
dec
js
and
rcll
in
jmp
test
or
adc
and
movl
adcl
test
ljmp
jle
push
push
cwtl
in
mov
xor
xchg
cmp
ljmp
sti
sbb
je
cmp
je
orl
add
cmp
jae
push
xchg
call
lock
sub
lahf
mov
add
add
mov
lcall
inc
sbb
or
adc
xchg
xor
dec
hlt
jge
stos
out
test
in
aas
add
mov
js
push
scas
sub
mov
adc
pop
push
lds
rorl
inc
js
mov
jp
leave
js
sarb
jg
and
rcl
inc
xor
adc
mov
pop
mov
push
xorl
pop
xchg
xor
push
icebp
setae
rcll
push
das
daa
cmpsb
cmp
push
xchg
loope
sub
pop
sub
leave
or
dec
jl
dec
mov
loopne
in
inc
mov
mov
and
push
rdpmc
or
cmp
mov
push
pusha
pop
mov
ret
lahf
mov
jge
jne
outsl
xchg
pop
pop
jae
mov
adc
sub
ret
add
mov
or
imul
or
push
cmp
or
fisubs
add
mov
and
mov
xor
sbb
cmp
jle
dec
sub
cmp
jle
call
and
icebp
jne
or
out
pop
jo
jmp
push
push
add
mov
das
leave
xchg
loop
pop
pop
adc
mov
lea
lea
lock
dec
inc
imul
add
cmp
test
pop
dec
in
or
or
subb
sbb
inc
fdivrl
mov
cmpl
mov
adc
cmpl
emms
pop
mov
inc
andl
pop
andl
jbe
mov
std
sbb
adc
jle
jb
lea
aam
fiaddl
pop
js
mov
sbbl
cmp
pop
push
or
incl
in
aaa
shl
xchg
push
adc
mov
iret
mov
cmp
jbe
lea
or
inc
push
mov
loop
cli
xor
into
jmp
sbb
lock
clc
add
add
mov
mov
cmp
outsb
roll
mov
mov
fisttpll
pop
lcall
loopne
mov
mov
ss
or
addr16
incl
mov
or
push
loop
cmp
or
xor
push
or
xchg
pusha
rorb
ss
dec
mov
and
aas
or
mov
adc
mov
idivb
add
xor
outsb
jmp
xchg
hlt
lock
loopne
cmp
shrb
loop
add
or
call
add
and
mov
faddl
mov
sbb
int3
cmp
adcb
je
add
test
clc
sub
cmp
cmp
adc
push
cld
cld
test
ret
call
xor
add
cmp
jb
and
in
inc
or
and
dec
pop
sbb
adc
jne
out
push
scas
push
lea
jo
inc
lock
mov
xorb
cld
sub
in
scas
add
loop
fwait
cmpsb
mov
ret
cmp
jg
rorl
ds
lds
clc
add
xor
push
mov
jg
hlt
mov
adc
std
vcvttss2si
sub
add
into
push
push
add
mov
pop
sub
sub
cld
std
push
dec
shl
xor
hlt
adc
mov
inc
in
mov
mov
hlt
insl
inc
inc
in
push
mov
js
push
sbb
into
repz
xor
pushf
imul
cmp
rcrb
stc
xlat
arpl
shlb
orb
movsl
and
jle
inc
in
les
test
add
loopne
push
or
mov
insb
aam
stos
jo
fmull
xor
cmc
push
movsb
popf
fs
es
cmp
add
rolb
add
xor
lcall
int
jg
cmp
jle
sub
cld
add
pop
jmp
add
cltd
xor
in
je
pop
outsl
pop
xlat
lods
movsl
mov
mov
mov
loopne
fdivrs
cmp
jle
and
test
cmc
fs
sbb
add
inc
test
push
rol
push
mov
lock
fmull
fisubl
adc
lea
popa
sub
fstpt
or
je
fldl
es
push
push
fstpl
dec
pop
mov
adc
jb
cmp
adc
jne
out
popf
sub
adc
hlt
jne
dec
out
pushf
or
movlps
add
inc
rcl
xor
pop
add
sbb
lahf
pop
scas
mov
dec
add
push
aaa
mov
inc
repz
std
dec
je
dec
pop
or
pop
or
and
mov
mov
cmp
xchg
std
adc
add
jb,pt
pop
lea
push
fsubs
mov
add
mov
sub
mov
cmp
or
ja
aaa
cmp
loop
push
push
ss
rorl
rcrl
mov
jmp
cmp
push
stos
shll
add
sbb
out
cmp
jo
inc
sub
out
ret
adc
std
xorb
inc
or
sbb
out
pop
mov
decl
push
lea
cmp
jne
push
push
push
push
push
mov
movsl
and
rolb
mov
jo
or
push
pop
imul
mov
lcall
fdivrp
adc
sbb
add
scas
addb
push
les
dec
mov
imul
push
dec
fadds
les
aam
repz
jge
ljmp
out
into
repz
int3
lock
cmp
sahf
push
lea
add
sbb
and
dec
inc
or
pop
imul
shll
mov
daa
idivb
push
test
sbb
xlat
test
jns
sub
jbe
pop
xor
mov
mov
cmc
or
cmp
push
pop
cli
push
dec
pop
xor
xor
inc
nop
or
ljmp
sbb
mov
mov
out
out
mov
into
mov
or
pop
cmp
push
jns
movb
movl
aam
insb
mov
repz
inc
hlt
mov
add
clc
test
fistps
add
jp
adc
mov
pop
ret
or
dec
xorb
sbbl
fiadds
jb
lds
testb
add
adc
popa
and
cmp
into
push
jle
pushf
and
xchg
xchg
shrl
pop
push
cmp
and
inc
cmp
seto
movb
push
pushf
jmp
push
mov
adc
push
sbb
sbb
push
sbb
or
cmpsb
ds
adc
clc
and
shr
mov
jo
sub
mov
inc
filds
inc
sub
lea
loopne
incl
push
lea
push
inc
push
jae
pop
test
mov
stos
call
in
fisubrs
add
sbb
aaa
push
mov
dec
adcb
mov
xor
in
sbb
repz
hlt
dec
rep
jp
adc
dec
add
jg
decl
enter
push
cmp
jb
imul
add
in
or
xorb
out
js
aas
clc
inc
les
jge
cmp
dec
push
aam
or
push
lea
sarb
add
ds
add
add
stos
xor
or
mov
sub
push
je
push
outsl
lahf
cmp
jle
mov
adc
add
jl
push
dec
pop
dec
adc
xchg
or
and
shrb
outsb
ja
and
inc
mov
add
pop
cli
inc
and
jge
movzbl
push
icebp
pop
cltd
lock
add
push
ret
mov
sti
xchg
scas
lock
in
sub
cmp
testb
sbb
mov
cmpb
scas
sub
call
je
add
rolb
loope
jl
or
mov
push
add
aad
rcrb
pop
mov
cli
sub
pop
mull
test
and
jbe
mov
pop
mov
loopne
add
movsl
xchg
add
push
nop
das
fstpt
cld
sbb
push
test
cmp
aaa
push
add
cld
xor
or
cmp
cmpsl
lods
cmpsb
xchg
aaa
js
inc
hlt
icebp
enter
add
dec
or
or
pop
cmpl
jb
pop
xchg
je
lea
mov
xchg
insb
movsb
imul
xchg
adc
sbb
js
and
cld
sbb
pop
mov
and
sbb
je
or
mov
jmp
mov
add
arpl
push
adc
adc
pusha
and
adc
pop
xor
mov
lret
mov
xchg
mov
pop
jne
mov
mov
mov
js
xor
mov
movsl
dec
test
cmp
jge
dec
in
sbb
and
jo
adc
pop
hlt
movb
fstpt
jge
add
in
jne
cmpb
in
aaa
add
xor
mov
aaa
incl
add
loope
sub
sbb
leave
pop
je
pusha
sbb
add
fwait
lea
sub
fucom
loope
mov
push
lcall
push
dec
fdivs
add
mov
inc
jle
fsubrl
sarb
shll
sbb
or
test
push
repz
push
lea
add
incb
jnp
sbb
add
xor
and
ss
and
jbe
shrl
clc
or
mov
add
pop
leave
mov
xor
add
dec
sbb
punpcklbw
adc
test
jge
inc
out
adc
pop
and
mov
stc
jne
push
rcll
mov
mov
inc
add
rcrb
aaa
je,pt
in
jle
jbe
push
mov
dec
aam
mov
fbstp
mov
mov
or
add
repnz
push
and
or
pop
clc
stos
inc
dec
sarb
lcall
or
rcrb
sar
mov
xchg
fiaddl
xor
inc
test
fcoms
sub
dec
and
jmp
divl
jg
mov
add
add
xor
and
jmp
cmp
sahf
jne
mov
xor
out
in
imul
mov
clc
mov
xor
cmpb
or
push
cmp
je
xchg
push
sti
and
xchg
mul
seto
sbb
enter
fwait
push
lock
inc
jmp
adc
out
sbb
pushl
jecxz
clc
add
jbe
gs
iret
shl
add
ret
mov
out
cmc
cmp
ljmp
cmp
jne
xchg
push
cmp
adc
xor
outsb
jl
test
test
jne
push
push
push
loopne
add
addr16
in
jmp
sbb
or
cmp
push
pusha
cmpl
shrb
or
inc
jae
or
pop
shlb
call
or
lret
je
adc
cmpsb
push
pop
pop
rorb
jno
adc
in
jecxz
mov
call
dec
scas
dec
popa
cmp
mov
rcrb
cmp
ja
lea
out
call
pop
inc
sbb
div
mov
add
lea
jmp
push
sub
push
aam
sub
orl
pop
sub
call
pop
lods
pop
xchg
mov
push
lea
add
add
sbb
or
inc
add
push
or
mov
push
xor
sbb
mov
inc
sbb
sbb
add
push
fcompl
adc
or
sbb
sub
xchg
and
add
and
add
inc
sbb
mov
mov
stos
push
mov
and
adc
mov
data16
or
sbb
dec
push
xchg
cmp
add
cmp
jb
cmp
ja
pop
out
sbb
pushf
cmp
leave
inc
aaa
popa
push
in
add
shlb
pop
lods
mov
add
jle
mov
int
or
push
inc
adc
pop
cmp
aaa
test
mov
test
dec
in
cmp
je
hlt
je
xor
jg
or
je
or
mov
cmp
addr16
je
cmp
jne
add
add
add
pop
dec
lea
add
scas
xor
or
dec
mov
dec
xor
sar
ja
push
or
jmp
testb
je
testl
pusha
sub
sbb
cld
cmp
jbe
lahf
push
mov
add
cmp
je
add
sub
inc
jmp
inc
and
scas
sbb
test
mov
lret
cmp
lock
sbb
sbb
mov
je
mov
lea
xchg
mov
sahf
clc
push
sbb
cmpsb
lds
hlt
and
adc
fucomi
insb
dec
or
add
rcrb
jne
movsl
stos
std
and
sti
cmp
notb
sub
lods
add
insb
jne
dec
inc
sub
aam
add
mov
ror
in
scas
andl
jne
jp
inc
cld
push
push
and
inc
lea
and
cmpsb
inc
inc
lds
loop
jne
nop
pop
xchg
out
lea
mov
fsubs
mov
mov
aaa
jno
jae
cld
add
pop
inc
shrb
xchg
in
jg
jecxz
add
jmp
pushf
aas
je
and
dec
shll
inc
hlt
inc
adc
stos
mov
js
fs
jne
xor
lock
xor
mov
or
incb
inc
call
cmp
dec
mov
push
mov
sub
aam
sub
lea
cld
mov
jo
push
or
push
add
inc
adc
xchg
push
push
or
int
lret
cmp
rorb
cmp
add
fmull
and
es
sub
sub
out
fstpt
pop
or
jl
or
adc
je
lea
cmp
loopne
addb
lea
cmp
jbe
mov
dec
loopne
lock
test
xchg
and
add
clc
pop
cld
cld
je,pn
test
jne
je
insb
and
or
push
dec
xor
add
adc
je
inc
and
jbe
mov
push
mov
and
pusha
into
std
adc
push
push
mov
inc
mov
and
and
jno
ja
scas
jmp
push
mov
ficoms
add
js
inc
and
push
test
call
pop
gs
mov
enter
push
pop
push
movl
in
sub
pusha
mov
or
jno
icebp
pushl
push
adc
cmpsl
mov
pop
xor
adc
orb
push
lock
jne
aas
dec
outsb
sub
cmp
ja
test
cmpsl
ret
outsb
push
popl
dec
fwait
and
shll
movb
pusha
inc
pushl
xor
and
add
sub
push
movb
inc
cmpl
push
pushf
into
out
xor
fists
or
xchg
sbb
data16
mov
pushf
xor
movsb
mov
and
dec
sub
and
addr16
cmpsb
sbb
push
in
into
inc
ret
nop
xor
inc
and
jnp
mov
ret
into
fldenv
js
adc
sbb
push
into
divl
lahf
and
xchg
jbe
inc
mov
push
push
adcl
add
mov
add
mov
mov
or
aad
or
not
and
dec
adc
ja
dec
ss
sub
or
inc
mov
aaa
inc
sub
sbbl
jne
mov
or
jo
inc
leave
insb
inc
ret
scas
mov
sbb
scas
xchg
push
fidivrs
sbb
loopne
add
push
sbb
mov
mov
mov
push
movsl
arpl
inc
insb
sahf
imul
insl
or
push
sbb
adcl
mov
xchg
push
adc
dec
add
pushl
decl
setae
sbb
inc
shll
add
pusha
jb
rorb
call
xchg
hlt
jno
jo
jbe
cld
push
orl
imul
mov
rcrb
addr16
js
rcrl
mov
cmp
scas
inc
aad
clc
xor
push
cmp
adc
push
jbe
in
inc
cmp
and
inc
xchg
push
cltd
cmpsl
lods
sbb
test
addl
cmp
roll
ret
nop
inc
jge
or
jmp
mov
mov
fisttpll
in
or
xor
or
inc
bound
jbe
test
xchg
xchg
jle
xchg
inc
push
es
sub
mov
cli
test
push
cmp
icebp
xor
cmp
cli
cmp
inc
out
sti
adc
test
mov
dec
mov
mov
pop
dec
push
pop
test
push
cmp
std
jae
cmp
decl
mov
and
push
or
add
xchg
lret
mov
ret
aas
je
out
and
cmp
test
cmp
jo
rclb
test
push
sbb
jne
mov
lods
daa
cwtl
pop
mov
lds
das
movl
aas
lods
mov
into
cmpl
pushf
nop
adc
movsl
fists
cmc
test
out
inc
cmpl
pop
movsl
pusha
add
sub
aam
je
add
push
or
test
cmp
push
cmp
shlb
cmp
mov
add
inc
ljmp
or
int3
jnp
js
inc
push
xchg
cmp
sub
sub
mov
test
mov
popf
ja
mov
or
scas
roll
jmp
pushf
pop
sbb
hlt
and
ret
scas
dec
ret
test
cmp
loopne
inc
mov
xlat
movl
aam
pop
inc
ja
cmp
mov
inc
jge
push
sub
aam
mov
ret
fcmovnb
je
adc
or
jne
xchg
sbb
pop
pop
jmp
cmp
xor
js
test
es
std
aam
loopne
pop
xor
repz
mov
push
sub
mul
out
ret
aaa
leave
sbb
push
fbld
mov
jmp
out
xor
add
test
clc
sub
repnz
inc
mov
out
bound
aas
int3
push
fisttpl
xor
xor
out
movsb
jmp
inc
sub
mov
outsl
adc
pop
je
imul
popf
mov
sub
xlat
cmp
in
pop
sbb
add
dec
je
add
mov
sub
test
push
dec
stos
add
pop
xchg
lock
orl
mov
xor
add
in
jno
or
jmp
pop
fiaddl
data16
pop
fcomp
ret
push
cmp
add
adcb
push
sti
inc
push
pop
loopne
frstor
push
mov
les
xchg
push
mov
movsb
dec
inc
rolb
mov
outsb
pop
mov
popl
or
aas
mov
xchg
shlb
sub
push
sub
cs
lret
sub
xor
mov
cmp
mov
push
sub
adc
test
push
push
adc
rclb
jo
insb
into
loope
fs
shlb
scas
inc
mov
push
and
push
notb
popa
push
lock
notb
aas
add
leave
jmp
push
adc
adc
mov
xor
mov
add
dec
fistpll
inc
sbb
inc
adc
inc
sbb
pop
int3
adc
inc
add
nop
les
lahf
pop
or
fsubs
cmpl
jne
or
add
daa
mov
jmp
pushl
lock
clc
ret
das
pushf
je
ret
hlt
mov
ljmp
sbbl
sbb
xor
jp
push
pop
jmp
rolb
stc
sub
mov
adc
dec
jmp
mov
and
add
adc
adc
sbb
jae
cmp
test
mull
mov
jae
and
lea
mov
call
add
push
xor
imul
push
mov
sub
idiv
mov
lea
dec
clc
insb
popf
inc
mov
sub
sub
adc
addr16
xor
clc
cmp
addb
inc
lods
out
push
sti
cs
push
mov
add
cmp
call
pop
xor
je
fdivl
pushf
fdivs
lds
jbe
jle
sub
je
mov
cmp
jle
mov
mov
add
jo
jne
dec
pop
mov
mov
cmpsb
mov
adc
xchg
sbb
popa
in
mov
add
sbb
jbe
push
pop
pop
hlt
outsb
adc
rcl
or
jle
divb
fiadds
clc
pop
add
in
in
decb
xchg
pusha
rolb
or
into
xor
fisubrl
cmp
mov
jae
mov
test
notl
add
es
shrb
into
mov
xchg
js
push
js
or
cmp
ljmp
incl
cmp
or
adc
push
je
lea
sub
or
pop
mov
inc
clc
jne
push
push
push
pusha
lahf
inc
ja
pop
or
mov
sub
xor
mov
mov
pusha
je
divb
push
loopne
and
push
out
mov
inc
or
sbb
div
fldcw
mov
fwait
mov
xchg
sub
jge
jb
and
cltd
sti
push
or
rorl
fimuls
inc
enter
sahf
or
pop
hlt
mov
arpl
push
test
stos
sbb
mov
pop
and
repnz
sbb
cmpsl
shlb
pop
enter
xor
pushf
push
or
jb
mov
xor
call
jp,pt
push
and
push
pop
call
pop
jp
outsl
je
adc
or
or
lods
push
cmp
push
jg
xchg
xor
push
mov
and
out
inc
pop
loope
aaa
aam
hlt
xchg
sahf
adcl
pushl
orl
int
and
push
lods
jp
jmp
js
jne
mov
push
call
push
popf
dec
hlt
test
mov
fsubrl
add
test
je
jo
push
aam
je
out
xchg
mov
inc
scas
aad
inc
pusha
scas
xchg
xor
jmp
mov
and
mov
scas
push
dec
cld
and
xchg
mov
fsubl
xor
push
lods
push
mov
xchg
and
sub
add
or
andb
push
cmp
ss
fsub
imul
push
dec
sbb
int
cmp
inc
push
jle
push
jl
inc
fisubrs
jo
je
ret
jbe
jae
add
and
mov
movsl
push
inc
pop
cmp
mov
add
clc
jmp
sub
push
push
inc
add
jo
jae
repnz
stos
sbb
adc
rolb
mov
ret
sub
adc
or
lea
push
sbb
je
push
jmp
xchg
movsb
cltd
add
adc
mov
and
testb
mov
jb
js
add
mov
xor
inc
addl
mov
imul
fadds
scas
pop
sbb
mov
call
dec
js
jno
jbe
push
filds
add
mov
in
xorl
and
popf
mov
enter
pop
fdivp
rcll
int3
and
and
lahf
lret
push
stc
hlt
inc
fcoms
jmp
popl
and
add
loopne
push
rol
sub
rclb
cmp
mov
cmp
ds
adc
sub
mov
nop
rorl
or
push
cmp
push
ret
mov
into
push
mov
cmp
fs
sbb
cmp
mov
daa
inc
mov
push
push
inc
cmp
jl
jmp
pop
sub
inc
mov
out
rorb
sbb
add
or
call
mov
movsl
xchg
xorl
add
push
cmp
push
aas
sti
movl
sbb
mov
sahf
jnp
lods
mov
stos
mov
push
pop
push
and
lret
adc
ljmp
call
mov
push
push
push
cmp
mull
pop
mov
daa
mov
rolb
sbb
jmp
mov
or
inc
mov
push
push
xor
and
add
loope
call
inc
fadds
inc
inc
push
sbb
orl
cmp
cld
movsb
cmp
xlat
pop
negl
imulb
or
jae
sbb
popa
sbb
ud0
stc
cmp
stos
mov
jmp
push
push
xchg
push
in
pop
into
stos
add
lods
and
push
push
inc
inc
jmp
push
or
inc
test
mov
fimull
jo
sbb
in
cmp
loope
clc
cmp
mov
mov
mov
lock
pop
vmaxps
cmpl
adc
jne
pushl
scas
ret
dec
js
push
add
je
push
push
mov
or
out
push
mov
iret
dec
js
pushf
test
ret
pushl
push
sbbb
inc
cmp
pop
lods
xor
or
cmp
cmpsl
jo
movb
jno
mov
cld
lea
ret
inc
shrb
and
jbe
lds
mov
sbb
xor
dec
rcrb
movsl
bound
adc
mov
adc
push
cmp
pop
iret
mov
mov
inc
lods
mov
sbb
imul
pop
movsl
mov
call
loopne
addl
push
cmp
xchg
cmp
cmpsb
or
out
sub
or
loop
push
aam
sbb
or
popf
shrb
push
sub
repz
roll
add
mov
sub
movsl
mov
cmp
sub
mov
lds
mov
out
mov
mov
or
ja
int
dec
add
cmp
add
cmp
cmp
cmp
clc
leave
test
adc
imul
sbb
hlt
aam
or
add
push
push
push
sub
add
ret
xor
imul
leave
enter
cmp
dec
and
pop
popa
push
lahf
into
rcll
or
dec
scas
mov
add
in
mov
call
lods
cltd
and
sbb
xor
push
cmp
imul
xchg
fcmovne
inc
fs
lock
cmp
out
adc
add
dec
jo
js
jmp
frstor
cld
sub
add
mov
inc
adc
dec
or
add
lret
xor
push
adc
ss
sbb
imul
cmp
gs
rcll
cmp
and
xchg
xor
mov
dec
mov
add
pop
mov
mov
aaa
lods
outsl
push
xor
pop
add
les
cltd
fcmove
sub
mov
mov
sub
add
movl
in
js
and
mov
or
add
pusha
call
push
loop
jle
push
mov
sub
push
lods
lds
cmpsb
add
adc
mov
push
faddp
add
xor
xchg
push
sub
addr16
push
mov
push
test
or
pop
inc
shlb
into
pop
dec
fcmovnb
std
pusha
aas
mov
into
mov
cmp
popa
je
cs
dec
jg
add
dec
lea
cmp
jbe
cmp
jbe
mov
mov
mov
sti
or
sub
inc
cmp
notb
mov
push
sbb
dec
xchg
add
out
mov
fisttpl
xchg
or
sbb
cmp
sbb
sub
jle
mov
repnz
push
mov
aam
pop
add
scas
mov
daa
push
ss
mov
dec
pop
push
int3
add
andnps
inc
test
ret
andl
punpcklbw
loopne
inc
add
inc
dec
test
mov
xchg
jp
dec
pop
cmp
ja
js
xchg
loope
pop
sub
outsl
cmp
lock
xor
es
inc
push
push
cmp
jbe
mov
mov
sbb
dec
adc
aaa
cld
mov
mov
bound
dec
lock
inc
xor
sahf
subb
add
jp
push
push
xor
adc
dec
push
fiadds
push
mov
js
xor
jno
mov
mov
pop
fucomp
test
ret
cmp
stc
ja
push
cmp
push
into
or
sbb
mov
add
mov
sub
popa
push
ret
mov
or
pop
push
jmp
sarb
call
leave
add
ss
cmp
mov
lods
jns
test
jl
lods
push
mov
lret
add
push
push
xor
inc
lea
mov
xlat
and
lea
mov
jae
push
lods
add
adc
or
lea
loopne
in
mov
gs
jl
dec
add
xor
inc
pusha
xor
ds
lods
shlb
rorb
cmpb
les
or
push
or
mov
and
mov
jmp
cmovae
sub
add
xorb
scas
push
addr16
cmp
popf
cmpsl
fidivl
mov
and
lcall
adc
movsb
test
mov
rorb
inc
add
sbb
and
lret
imul
data16
or
fisubrs
fadds
cltd
pop
jg
nop
add
and
mov
in
rcrl
dec
push
add
add
loop
xchg
mov
mov
or
mov
sar
mov
lock
inc
jecxz
xchg
xor
and
cmp
lock
mov
or
test
insb
jno
jo
outsb
loope
mov
sbb
or
outsb
fadds
xor
mov
or
push
popf
jmp
add
push
push
pop
loope
and
and
ret
orb
xchg
mov
add
aad
addr16
jle
push
idiv
dec
adc
dec
divl
ljmp
adc
mov
xchg
sub
cmp
popl
push
hlt
pop
inc
sub
jg
jmp
loope
ds
cmp
inc
cmpsb
lahf
cmp
push
sub
shll
cmpb
mov
mov
adc
adcb
aaa
lea
addb
jne
xchg
jmp
or
popa
inc
jl
rcll
scas
xor
mov
mov
andl
or
push
scas
dec
dec
xor
or
cmp
in
mov
xor
xor
fdivrp
jge
cmp
cmp
shrl
popf
adcb
ja
dec
pop
pushf
mov
jmp
repnz
icebp
test
or
add
add
in
frstor
jns
xchg
inc
negb
repnz
out
iret
shl
mov
je
cmp
pop
movsb
jae
lds
xchg
into
lahf
lea
add
ds
ret
push
and
lock
jmp
dec
pop
icebp
and
jp
mov
xchg
fs
sarb
mov
jg
mov
lods
pop
sub
add
push
xor
jmp
pop
cmp
mov
inc
sbb
call
or
push
inc
data16
scas
movsb
cmp
cli
jle
aas
adcl
aas
test
dec
stos
movsb
xor
jmp
mov
jle
pop
sbb
adc
push
pop
ficoml
push
push
rorb
leave
nop
mov
push
sti
int
jb
movzwl
push
xchg
ret
cwtl
movsl
inc
sub
xchg
ret
dec
aam
dec
pop
adc
pop
adc
lcall
inc
or
add
pop
inc
push
push
push
insb
and
mov
push
adc
int3
js
ss
xchg
pop
pop
pusha
sbb
xchg
jge
jbe
jmp
pop
add
cld
repz
mov
jge
cs
es
cltd
sbb
hlt
add
fwait
dec
lods
jp
pop
adc
mov
jmp
adc
aad
push
push
xchg
mov
loopne
cmp
addl
loopne
adc
push
mov
dec
out
add
pop
pop
xchg
xchg
pop
popa
xor
cmpl
push
sbb
pop
lods
lods
hlt
adc
mov
add
fs
mov
ret
lds
xor
lcall
mov
lea
fmull
push
push
shrb
shrb
sbb
push
cmp
inc
aam
cmp
ret
loop
neg
or
mov
inc
dec
in
loopne
mov
jb
push
push
sbb
add
or
push
cmpl
cmp
in
mov
aam
fcoms
lock
cmp
jge
fstps
pop
mov
ljmp
dec
movsl
shrl
adc
fwait
push
pop
jmp
mov
xchg
push
cmp
jne
push
mov
pop
adc
add
imul
adc
cmpsb
clgi
mov
sbb
inc
andl
clc
push
fmuls
mov
clc
nop
adc
stc
sbb
push
into
inc
fnstsw
push
in
xor
or
mov
and
lea
xchg
sbb
std
ret
inc
movsl
sbb
sub
mov
je
and
popf
cmpsl
insb
scas
loop
sbb
mov
sub
push
add
mov
bound
cmp
push
ficompl
cmc
xor
lahf
xchg
inc
adc
repz
repnz
add
call
fsts
mov
stc
dec
push
xchg
dec
xchg
add
mov
pop
jle
and
gs
enter
lea
jp
sub
imul
nop
adc
cmp
in
xorl
sub
pop
hlt
xor
lahf
lea
push
mov
jecxz
inc
hlt
fadds
pop
clc
pop
and
jge
or
inc
sbb
dec
cmp
cmp
sbbl
jge
fcomps
sar
lea
mov
testl
adc
mov
or
jecxz
push
inc
adc
test
push
jne
fdivrl
jmp
dec
mov
xor
lock
aas
jne
sub
test
adc
std
cli
dec
inc
test
sub
mov
xorl
dec
lock
mov
jle
and
add
and
add
inc
pusha
add
sbb
int3
roll
pop
fiadds
enter
mov
cmp
je
cmp
mov
mov
sbb
and
std
dec
cmp
jne
and
rcll
aam
cmp
jo
fstpt
add
cld
sbb
jmp
inc
push
xorb
cmp
xchg
pop
loope
or
mov
fiaddl
inc
imul
cmp
out
inc
cwtl
cmp
or
js
dec
pop
or
push
shlb
mov
pop
lcall
inc
dec
cli
or
cwtl
adc
mov
mov
icebp
mov
es
lea
mov
cmpl
sub
repz
xor
pop
movsb
mov
clc
lods
pop
bound
sub
in
decb
jmp
sub
hlt
sbb
cld
sub
movsb
sbb
mov
sub
insb
sbb
adc
add
adc
dec
fistps
mov
pop
inc
test
xchg
xor
cmpsb
add
push
sbb
fldl
das
xchg
mov
and
repnz
mov
and
jbe
rol
mov
inc
mov
cs
cmp
or
jne
cmp
insb
or
sub
xchg
into
repz
push
jae
flds
or
pop
aas
jo
pop
test
aas
sbb
or
fdiv
adc
cmp
sub
scas
jns
push
push
pop
int3
add
add
jecxz
pop
push
pop
mov
aam
inc
imul
out
cmp
jmp
cmp
data16
sbb
in
push
clc
xchg
mov
cs
dec
mov
mov
inc
hlt
jbe
test
mov
and
dec
sub
and
sti
mov
jge
pop
or
ljmp
xchg
cmp
mov
mov
call
gs
mov
hlt
jmp
jle
mov
dec
mov
js
add
mov
stc
rolb
cli
or
add
add
mov
fdivrl
push
call
imul
xchg
or
sbb
push
or
add
pusha
xor
push
xor
sbb
pop
jle
mov
sub
psadbw
sbb
cld
cmp
test
or
cmp
pop
and
movaps
pushf
mov
cmp
cmp
xor
pop
xor
sub
icebp
add
cmp
add
loopne
mov
hlt
rcll
xor
dec
push
cmp
xor
jge
mov
daa
add
pop
movsb
add
xchg
popa
push
mov
push
jg
cmpsb
xor
push
testb
lahf
lret
sbb
insl
mov
mov
ja
lahf
pop
or
or
jnp
pop
add
or
movsb
pop
push
daa
jo
insb
pop
fs
sbb
pop
clc
jbe
or
je
test
dec
dec
outsl
testb
jne
mov
push
test
cmp
js
insl
aaa
sub
lea
push
cld
cmp
mov
pop
stos
es
leave
enter
xchg
dec
sub
xchg
sbb
xchg
mov
hlt
xchg
jb
pop
fimull
cmp
mov
out
push
pop
pop
repnz
add
call
jmp
mov
sub
fxtract
jne
push
js
cs
lock
fistl
cld
loopne
fnstcw
sbb
jne
mov
sbb
adcl
mov
repz
push
xchg
fdivrs
dec
mov
add
scas
scas
xlat
or
cmp
or
jo
les
xchg
pop
lea
fdivr
orl
pop
ficoml
or
xor
cmp
and
aad
xchg
add
cmp
pop
mov
push
hlt
neg
sbb
and
push
je
movzwl
push
adc
mov
cmp
cmp
aam
push
cmp
jo
mov
js
push
xchg
push
mov
or
inc
mov
and
xchg
cmpb
in
insl
xor
popf
or
loopne
test
in
pop
and
faddl
testl
js
pop
cmp
mov
pop
inc
cmpl
jne
cmp
mov
stos
fdivs
or
jne
push
lods
mov
dec
or
hlt
xorl
insl
pop
inc
sbb
push
fnsave
movsb
fistpll
gs
adc
test
das
cmp
cli
push
int3
out
idiv
sbb
outsb
xchg
ret
pop
jg
push
loopne
imul
sub
orps
push
sbb
jae
push
mov
lea
push
lea
cmp
jl
out
mov
sbb
sub
les
xchg
inc
fbstp
test
je
or
popa
mov
push
push
mov
insb
push
add
adc
sbbb
dec
setne
xor
push
mov
fldl
adc
test
movsl
lock
ret
inc
ret
dec
test
incb
mulb
mov
mov
jno
dec
jmp
push
adc
movsb
adc
rorl
insl
mov
cmpsl
je
mov
inc
jg
xchg
mov
add
xor
inc
outsb
loopne
scas
fld
mov
lock
jnp
out
std
sarl
loope
add
mov
mov
xchg
pop
mov
sbb
fwait
sub
pop
jnp
push
sbb
sub
je
loop
lock
mov
or
popa
adc
cltd
inc
sbb
in
test
insb
inc
cmp
jmp
out
dec
add
mov
jb
lods
ds
cmpl
test
cmp
pusha
sarl
push
lods
test
cmp
mov
xchg
test
jb
push
sub
push
pop
xor
adc
int3
pop
sub
aad
gs
and
xor
mov
lods
mov
incl
push
push
mov
dec
ds
inc
dec
gs
imul
mov
and
xchg
cmpb
lea
sahf
mov
push
roll
add
pop
pop
leave
bound
add
loopne
xchg
adc
dec
test
shr
sbb
or
nop
jne
jno
bound
test
cltd
sahf
mov
fcoml
loopne
test
out
mov
shlb
xor
fs
or
mov
lret
fiadds
cltd
mov
jo
jmp
push
movsl
add
jne
inc
or
jne
dec
pinsrw
rolb
add
pop
add
test
je
add
push
or
lea
mov
push
imul
stos
xchg
test
push
addr16
pop
inc
packsswb
test
jnp
shlb
fsubrl
or
sub
ret
add
xor
or
jnp
or
mov
mov
js
je
adc
nop
mov
sbb
gs
mov
and
inc
and
das
jo
add
pop
adc
clc
add
adc
pop
sub
mov
xchg
mov
add
xchg
addr16
jae
or
add
test
pop
or
mov
add
xor
push
xor
test
adc
cld
push
push
cmp
cmp
or
mov
imul
movsl
into
mov
push
ja
cmp
imul
mov
add
inc
test
cmpb
and
cltd
xor
add
cwtl
mov
ret
or
adcl
jp
sub
loope
ds
fsts
and
push
mov
fdivrs
cmp
lret
xchg
xor
ds
call
test
rorb
sbb
addb
cmpsb
cmpb
push
mov
lds
xrelease
lea
or
jle
mov
jb
decb
xchg
sub
mov
xchg
ret
push
nop
es
in
inc
lea
sub
push
sahf
mov
out
into
mov
test
push
push
fldt
sub
push
or
in
lret
add
sbb
jnp
adc
xor
jae
inc
scas
sar
inc
xorl
push
push
jne
add
sub
pop
sub
lea
mov
ljmp
int3
and
cmp
daa
sub
push
mov
cmpl
jo
sub
je
sub
insb
fildll
int3
lcall
out
sbb
add
push
adc
div
xor
jmp
repnz
lret
lea
adc
fidivrs
adc
pop
jp
jne
rorl
mov
inc
sub
xchg
adc
xchg
xor
adc
dec
push
sbb
fdiv
adc
cli
cwtl
mov
sarb
mov
es
add
xchg
dec
outsb
fldenv
push
adc
add
dec
add
mov
mov
push
mov
aam
sbb
popa
loopne
jle
or
dec
dec
and
push
add
push
rorb
push
adc
and
adc
mov
sbb
ret
outsl
mov
je
jle
inc
jo
sti
test
cmp
sbb
pop
cmp
jl
mov
mov
push
jp
xchg
testb
les
sub
in
adc
lds
ss
roll
cltd
xchg
push
lea
cmp
jb
push
in
scas
mov
ja
shld
add
xor
ljmp
rorb
xchg
sti
and
mov
or
outsb
les
jns
out
repnz
mov
mov
mov
nop
or
add
add
xor
jbe
inc
add
or
pop
inc
mov
cs
mov
mov
mov
mov
add
inc
mov
dec
or
out
or
add
mov
gs
mov
adc
pop
xchg
or
das
xor
je
insb
or
shll
push
inc
or
jo
leave
push
mov
nop
jmp
add
push
jp
aaa
loope
or
fwait
int3
les
sbb
jbe
add
or
push
outsl
sub
push
push
pushl
or
rorb
aad
xor
sub
aas
sub
pop
bnd
jnp
sbb
leave
je
cmp
push
cmpb
ret
xor
mov
push
jae
lea
push
sub
sbb
and
push
xor
imul
or
dec
pop
xchg
lcall
nop
mov
lahf
fdiv
jae
imulb
daa
les
push
pop
incb
cmp
cmp
jae
inc
jmp
add
push
sti
sub
push
inc
mov
mull
push
add
jo
test
movb
jmp
and
je
cmp
jb
inc
sahf
dec
mov
mov
mov
mov
xor
mov
xchg
icebp
jl
and
push
xchg
sub
negb
xchg
push
adcb
pop
push
push
push
test
cmp
lea
mov
dec
fcomps
xchg
cwtl
cmp
aam
mov
pop
push
in
shll
bound
adc
push
jmp
push
push
xchg
pop
test
xchg
or
jmp
push
inc
leave
aas
pushf
cmp
sub
pop
fwait
or
fisubrs
ljmp
and
lret
jo
cmp
cmp
lods
jge
insb
idivl
mov
int3
mov
cli
ja
cmp
lret
inc
aam
roll
cmpb
push
lret
add
or
scas
xor
sub
push
inc
or
cmp
ds
jbe
xor
je
cmp
sbb
push
jb
and
js
pop
js
aaa
jmp
dec
ret
movsb
test
jg
sub
sub
seta
sub
out
and
mul
and
inc
stos
mov
arpl
and
imul
loope
sbb
adc
add
dec
jg
or
pop
in
pop
dec
dec
stos
aaa
jne
jecxz
cmp
xchg
jbe
mov
fcoms
sub
jo
out
or
adc
test
mov
inc
add
aam
or
xchg
mov
or
xor
or
divl
cmp
push
dec
add
xchg
ja
lods
pop
aam
aad
cs
ja
jp
movl
add
shlb
sbb
popa
xor
and
rclb
pop
fmull
xor
les
cmp
icebp
add
call
mov
or
stos
imul
pop
jp
push
push
iret
dec
push
push
inc
mov
imul
mov
sbb
shl
push
aad
adc
inc
movl
mov
in
adc
or
mov
dec
sub
loopne
mov
cmp
inc
pusha
mov
push
test
sarb
add
sahf
loope
push
dec
fstps
and
orl
sbb
in
cmpsl
xor
mov
sbb
inc
or
stos
mov
add
sbb
sub
push
aaa
addr16
mov
jg
out
outsb
mov
cmp
mov
jae
in
rcrb
pop
lret
or
and
mov
mov
and
inc
test
xor
xlat
sub
xchg
jge
pop
pop
cmpsb
stos
or
repnz
pop
pop
dec
test
mov
push
sbb
mov
xchg
testl
jecxz
enter
jne
outsl
lea
inc
push
dec
insl
aam
enter
pushf
outsl
das
test
jb
fs
mov
or
repnz
sbb
or
inc
and
cmpb
jge
and
cmp
fst
dec
push
or
adc
cmpl
fstp
mov
outsb
adcb
adc
mov
push
movsb
adc
adc
or
or
dec
or
mov
fwait
sbb
push
imul
or
xchg
push
sub
push
push
mov
movb
ja
sbb
add
mov
jge
mov
lods
inc
push
mov
mov
jmp
xor
add
cmp
fwait
and
mov
push
xor
cmpsb
inc
cmp
inc
mov
lea
iret
test
scas
add
pop
lods
mov
push
push
adc
inc
mov
addb
adc
push
add
loop
mov
inc
adc
ss
js
insb
adc
ret
push
mulb
imul
sarb
les
xor
in
out
and
popa
je
mov
cmp
jns
fisttpl
cmp
xor
or
adc
ljmp
outsb
lods
scas
mov
lcall
cmpsl
and
mov
lret
add
int3
je
pop
dec
call
inc
push
push
test
sub
fadds
jge
push
cmp
cmp
loopne
push
push
xor
or
cmpb
int
les
lea
add
out
or
dec
inc
jmp
int
push
pop
pop
inc
or
repnz
adc
sub
or
jo,pt
scas
cs
push
xor
xchg
test
cmp
jne
mov
shlb
inc
or
mov
orb
out
pushf
out
push
or
das
inc
fidivrs
mov
subw
movzwl
test
je
test
cmpb
xchg
xchg
daa
fwait
xchg
bound
mov
and
push
jmp
xor
dec
scas
imul
js
out
or
xor
aad
add
shll
jmp
loopne
mov
mov
clc
push
push
insb
data16
daa
pop
ds
push
shl
js
adc
adc
lcall
cmp
sbb
and
pop
in
in
and
push
jecxz
js
inc
leave
sbb
loopne
pop
or
jl
js
fcmovnb
inc
pop
and
jb
andl
fcomps
cld
enter
push
mov
add
and
das
mov
xor
popa
or
xchg
sarb
pusha
pop
outsb
add
je
push
call
jno
or
les
add
mov
add
jle
ret
mov
in
iret
aaa
outsb
stos
adc
fisttpl
movsl
loope
and
in
inc
cmp
arpl
push
movl
lock
fwait
clc
fmuls
dec
sub
push
fisttpl
pop
sbb
fcoms
inc
xor
push
popf
mov
stos
or
stos
ja
test
cmp
xor
or
daa
jg
xor
aam
add
mov
mov
mov
mov
or
sbb
repz
mov
mov
push
stos
and
add
add
pop
sti
add
insl
cmp
xchg
dec
ss
dec
clc
ds
xor
sbb
mov
mov
sub
add
lods
dec
push
pop
lcall
jl
adc
cmp
push
je
add
ss
jbe
nop
jge
sbb
stos
mov
loopne
ss
push
push
inc
push
loopne
cs
xor
push
push
es
ds
daa
jge
clc
mov
xor
cwtl
cmp
mov
ret
loopne
test
or
adc
pop
scas
das
bound
imull
add
jl
subl
call
outsb
into
sbb
gs
push
jne
add
lea
es
test
and
cli
push
jne
xor
dec
jp
lods
mov
or
stos
stc
mov
xchg
or
push
inc
sub
push
adcb
clc
sub
push
push
inc
and
dec
add
inc
popf
divb
mov
cs
rorl
test
je
out
movsb
loop
call
loopne
test
pop
ss
xor
pop
out
sahf
rcr
jmp
push
cmp
adc
in
aad
add
in
add
inc
push
movsb
push
mov
cli
data16
pop
mov
movsl
inc
scas
jbe
loope
mov
mov
jmp
into
out
sbb
in
loope
shrl
mov
add
loop
add
xchg
mov
fmulp
decb
or
pop
add
dec
test
add
jle
mov
sbb
xchg
push
mov
sbb
les
dec
inc
and
movb
in
fists
ret
sub
imul
mov
jg
mov
or
or
xor
out
imul
or
push
mov
ds
sbb
add
into
sub
daa
leave
movsl
outsl
xchg
push
mov
add
fs
hlt
mov
mov
mov
cmp
test
rclb
jo
mov
and
test
loope
jmp
xor
cmp
xlat
push
ret
adc
xlat
test
imul
mov
push
icebp
test
popa
or
in
push
mov
xchg
dec
xchg
pop
push
dec
add
cmpsl
imul
aam
inc
test
bound
dec
mov
mov
pop
jo
jne
popf
xor
into
je
jnp
xchg
or
jp
cmp
or
pusha
subb
xchg
xchg
jmp
es
gs
jo
leave
add
cwtl
fmuls
dec
cmc
out
add
lock
adc
inc
mov
fmuls
pop
and
xor
rolb
mov
adc
push
int3
mov
cmp
dec
in
ret
arpl
out
mov
sub
fldl
or
xchg
lea
mov
cmp
pop
push
lret
mov
ja
rolb
mov
addr16
cmpsb
push
xchg
sbb
pusha
or
popf
or
xchg
ret
pop
lods
mov
rorl
shrb
ja
jb
or
mov
inc
xor
or
loopne
add
insl
fdivrs
loope
push
jp
das
pop
aam
mov
or
imul
rorl
xchg
mov
jbe
mov
mov
xor
push
mov
or
lea
shrb
jle
or
pushf
rcll
in
or
nop
stos
aam
enter
nop
int3
push
fmuls
cltd
nop
or
or
cmp
xchg
mov
cwtl
or
enter
je
jle
sub
and
rol
push
jb
fcom
test
mov
aam
nop
pop
dec
jae
cmp
jnp
test
push
and
dec
aad
stos
mov
adc
roll
ret
lret
out
outsb
adc
jge
push
into
je
sahf
add
pushl
sub
aaa
adc
lock
js
mov
or
pop
pop
sbb
add
dec
or
rclb
pop
push
adc
mov
push
sub
dec
jns
mov
adc
push
inc
sub
jns
jmp
mov
xchg
cmp
and
in
sbb
mov
lea
push
push
xor
cmp
jl
inc
pop
lock
dec
aad
dec
in
and
jg
lock
pop
mul
mov
inc
push
test
popf
lods
lea
or
jae
mov
or
push
loope
aas
fs
push
js
pop
test
fnsave
xor
daa
fidivrl
outsb
xchg
add
or
pusha
cmp
ds
sbb
jmp
sub
dec
mov
into
das
stos
sbb
push
inc
add
mov
sbb
lret
jns
cwtl
test
pop
int3
call
add
sbb
iret
jbe
add
stos
loopne
xor
xor
sub
int3
push
dec
pusha
adc
mov
hlt
les
mov
pop
mov
dec
or
or
add
pusha
sbbl
daa
jno
ret
mov
inc
in
mov
addr16
lods
std
cmpsb
lods
and
xor
aam
jo
sbb
cmp
inc
sub
push
pop
jmp
xchg
lret
xchg
add
push
mov
pop
inc
adc
jmp
sbb
push
stc
aaa
and
jg
loopne
adc
les
fsubrl
adc
mov
or
add
jnp
or
xchg
sub
cltd
outsb
and
sbb
clc
mov
ds
or
or
movb
mov
cmpsl
sbb
shlb
in
or
jge
leave
scas
rorb
mov
push
popa
xor
or
push
or
pushf
push
dec
add
jns
xchg
insb
xor
daa
loop,pn
mov
adc
xor
push
in
or
add
cmp
dec
shll
jo
movsl
cmp
mov
scas
xchg
mov
call
cwtl
or
sti
or
mov
outsb
je
fiaddl
mov
inc
mov
scas
sub
cmpsb
cmp
and
pop
test
xchg
or
dec
ljmp
movb
mov
pop
and
mov
mov
sbb
mov
fadds
jl
js
orb
jo
or
orb
pusha
jne
enter
mov
mov
push
pop
ret
inc
cmp
mov
leave
jb
faddp
loop
scas
lcall
and
cmp
je
cld
pop
dec
lcall
jne
mov
in
add
mov
jne
fidivrl
cmp
sbb
inc
imul
pop
adc
inc
mov
ja
and
lods
jl
adc
mov
adcl
mov
and
sbb
jne
mov
test
test
lcall
fs
or
push
sti
push
adc
add
add
jo
jne
sbb
dec
mov
dec
xchg
cmp
shr
mov
push
in
add
adc
es
mov
mov
lea
mov
mov
push
jno
sub
xor
add
enter
scas
lods
out
mov
ss
iret
inc
into
dec
and
incl
rol
ljmp
and
dec
mov
add
nop
test
pop
xor
cmp
push
je
mov
xor
das
xorl
rcrb
jl
insl
addl
jne
orl
mov
adc
imul
sbb
pop
cmp
mov
xchg
add
pop
xlat
or
test
flds
adc
push
imul
fucomp
mov
movsb
add
pop
lds
pop
push
lods
loopne
or
push
pushf
icebp
xor
pop
sub
mov
add
int
xchg
xchg
inc
outsb
dec
les
mov
add
mov
stc
push
jne
lock
fimull
pop
mov
jl
jne
cmp
mov
cmp
rcll
jne
xor
das
movsb
dec
ja,pt
fwait
ret
mov
cmp
cld
mov
stos
push
dec
mov
xchg
cmp
or
jp
sbb
xchg
div
or
push
cmpsl
pop
cmp
out
dec
or
and
mov
das
outsl
adc
push
pop
push
aaa
ds
push
push
push
add
lock
sarb
insb
or
cli
out
pop
popa
cmc
jmp
cmp
addr16
or
sbb
in
push
and
mov
inc
pusha
mov
add
adc
or
cld
or
dec
add
dec
mov
pop
sbb
pushf
mov
fdivl
sti
mov
adc
pop
push
push
xor
add
neg
jecxz
std
test
pop
inc
aad
sub
enter
xlat
xlat
sbb
push
or
lcall
loopne
adc
dec
je
adc
lea
sbb
jno
add
sub
mov
and
pop
scas
testl
jge
movsb
int
adc
lock
lods
jge
xor
lock
xchg
and
sbb
pusha
bswap
or
mov
je
xor
add
and
orl
enter
icebp
or
mov
jo
lahf
jnp
adc
add
testl
cmp
cli
je
popf
add
loop
addl
mov
je
cmp
lea
mov
sti
pushf
loop
fcoms
fwait
inc
and
daa
add
or
dec
roll
inc
sbb
adc
sub
mov
adc
jnp
lock
lock
and
xor
js
dec
jmp
in
cld
mov
pop
inc
adc
sbb
jo
xchg
aaa
cmp
jnp
out
movsl
movswl
in
push
mov
lret
add
push
pop
adc
mov
test
loopne
sarb
ret
push
cmp
cmp
xor
cli
icebp
ret
lea
dec
flds
pop
ror
nop
enter
push
test
or
sbb
push
movsl
and
sub
dec
fwait
orl
test
je
xchg
mov
insb
add
jle
sbb
and
clc
mov
add
or
lods
adcl
sbb
sbb
dec
adc
lds
jo
popa
shlb
mov
cs
mov
call
add
cmpsl
cmp
aas
jne
push
push
xor
pop
js
arpl
outsb
in
fiaddl
or
xchg
inc
or
in
mov
cwtl
fidivrs
jp
add
jo
push
inc
lock
cmp
je
jle
mov
out
cmp
push
and
sbb
lahf
cwtl
dec
push
iret
push
andb
pop
cwtl
push
out
add
inc
and
jo
dec
push
or
outsb
xchg
mov
push
adc
out
dec
fisubrl
fcoms
movl
mov
pop
cwtl
aaa
cltd
mov
add
cmpsb
push
aaa
add
mov
loope
js
pop
arpl
adc
sbb
popa
jmp
add
lock
aaa
inc
data16
cmp
fisttpl
jecxz
sbb
inc
adc
pop
add
test
xor
loopne
test
xor
pop
adc
or
or
subb
cmp
insl
movsl
scas
jne
sbb
jge
int3
mov
fmull
dec
sbb
add
add
jns
xchg
cmc
jo
and
and
sar
push
xchg
adc
inc
and
adc
or
xchg
bound
xor
pop
xchg
xor
fisubl
sub
or
test
adc
mov
push
les
push
pop
or
adc
je
mov
and
pop
lcall
push
pop
and
jecxz
out
xor
xchg
mov
jo
push
aas
sub
push
movsb
push
push
arpl
add
push
push
jbe
cmp
inc
test
push
or
adc
push
inc
push
mov
xor
pop
adc
in
fstpl
cmpl
pushl
push
clc
xor
push
lcall
add
shrb
sub
mov
fsubl
ud1
push
dec
lret
mov
ret
out
dec
push
bound
mov
mov
nopl
xchg
mov
les
inc
icebp
jb
mov
inc
xor
sub
mov
movsl
add
js
fidivs
jl
pop
inc
scas
push
adc
es
adc
or
push
jo
push
sarl
loop
jmp
daa
orb
das
sub
push
lock
xor
pushl
xlat
sub
xor
test
ret
xor
scas
jne
outsb
cmp
adc
push
add
or
aas
cmp
mov
hlt
movzwl
cmp
je
fisubl
or
test
and
and
lcall
push
inc
push
and
push
imul
mov
or
dec
cmp
pop
mov
jl
xor
mov
mov
lahf
lods
andl
sub
inc
or
mov
cld
and
outsl
jmp
push
sbb
jne
inc
jne
jp
push
or
jno,pn
push
outsl
cmp
cmp
sbb
mov
sbb
and
ret
lea
jnp
outsb
and
xor
mov
mov
mov
or
or
push
add
outsb
pushf
mov
sub
adc
lcall
push
adc
outsb
xchg
inc
xlat
push
inc
push
xor
orb
or
jg
in
mov
lret
sub
sarb
or
xor
push
dec
sbb
fs
push
push
push
xor
fcomps
movl
ljmp
xchg
pusha
cmp
sbb
loopne
scas
jle
mov
and
cmp
jge
mov
test
fstl
rolb
xor
add
and
mov
orl
loopne
adc
cli
subb
mov
cltd
mov
js
push
xor
xor
sbb
xchg
adc
pop
orl
dec
jae
xchg
push
mov
and
xor
shlb
pop
jmp
xchg
enter
sbbl
dec
inc
add
cmp
xchg
add
mov
mov
ja
push
ret
outsb
push
out
sub
add
sub
inc
sub
out
inc
xor
inc
xor
nop
xor
xor
add
leave
cmp
mov
add
xor
ret
or
mov
add
and
aas
or
test
pop
and
and
mov
sbb
adc
pop
dec
imul
sbb
pop
push
rorl
rclb
mov
and
push
mov
pop
push
pusha
inc
xor
xchg
inc
in
add
fs
push
push
sbb
lods
orb
js
aas
fidivrs
push
cli
push
jmp
pushl
adc
je
pop
mov
jl
in
rcrb
cmp
mov
mov
dec
push
push
jo
loope
pop
roll
mov
sub
sbb
jo
rorb
xor
sbb
mov
push
mov
jl
andl
outsl
inc
mov
adc
cmp
ret
mull
cmc
inc
loope
sbb
cltd
sbb
jne
incb
outsb
inc
leave
pop
daa
xchg
dec
pop
adc
or
dec
mov
mov
push
push
jmp
adc
ret
or
mov
jmp
sbb
icebp
popf
xchg
xchg
out
movsb
push
mov
test
lds
xor
add
mov
mov
imul
sub
mov
mov
imul
pop
jl
jl
call
jbe
outsl
xor
lea
cmpsl
call
sub
xor
adc
sbb
jmp
and
mov
loop
pop
adc
fdiv
cmp
push
nop
pop
cmp
xor
inc
add
inc
ret
fdivs
cld
pop
xor
or
loop
pop
pop
pop
xchg
pop
pop
mov
pop
add
pop
lock
adc
xchg
jne
mov
cmp
out
je
and
decb
js
add
xorb
or
cmp
lock
lods
add
sbb
testb
je
push
mov
xchg
arpl
and
dec
or
dec
jl
loope
xor
scas
mov
sqrtps
adc
in
jl
inc
movzbl
neg
sbb
adc
mov
jg
in
inc
mov
leave
pop
adc
sti
fsubs
or
mov
sub
stc
je
inc
add
mov
mov
add
sbb
mov
lock
clc
add
inc
push
pushf
xchg
pop
in
mov
arpl
movsl
sarl
add
add
rcrb
push
add
push
sbb
xchg
out
push
push
push
pop
loopne
subl
je
js
je
and
lcall
sub
arpl
mov
cmp
cmp
jne
push
stos
outsl
hlt
push
mov
mov
cltd
aaa
orb
imul
push
stos
aaa
jno
push
fs
dec
test
es
mov
leave
mov
pop
add
pop
mov
repz
lea
clc
pop
mov
in
repnz
fsubrl
mov
pop
loope
lods
mov
cmp
push
sahf
aam
pop
repz
mov
inc
mov
mov
mov
je
jecxz
sbb
mov
sbb
orb
pusha
mov
mov
mov
pusha
pop
or
dec
cmp
xchg
mov
in
decl
loop
stos
mov
or
cltd
idivl
jne
lcall
cmc
lahf
outsb
loope
addl
or
mov
mov
push
mov
rorl
movsb
mov
cld
sti
add
pop
sub
or
je
or
movsb
jl
movsb
stos
cmp
adc
dec
inc
jne
mov
sub
sbb
add
push
xor
and
push
leave
aaa
push
mov
pop
dec
sbb
xchg
hlt
mov
iret
sbb
push
inc
out
or
daa
cmp
sub
xchg
outsb
out
mov
inc
test
push
inc
mov
or
int
mov
mov
mov
inc
clc
push
push
cmp
and
js
add
je
add
loope
mov
xchg
mov
shll
inc
out
jae
std
inc
adc
mov
push
pushf
or
movb
push
sbb
cmp
cmp
mov
xchg
lock
cmp
inc
sub
jnp
ret
cmpsb
sbb
mov
push
in
push
or
jae
cld
adc
pop
roll
mov
or
inc
sub
sub
insb
add
inc
xor
cmp
cmp
dec
push
push
movsl
fnstenv
dec
insb
andb
or
add
mov
mov
shr
sbb
je
gs
shlb
jge
adc
add
fs
mov
cmp
jne
or
loope
les
in
add
xchg
inc
cld
add
push
mov
jle
cwtl
mov
imul
sbb
and
xor
cmpsb
xor
and
aas
add
adc
push
out
in
pop
js
fdivr
xlat
mov
cmpl
int3
and
inc
cli
push
cld
out
cmp
sbbb
repz
jge
movl
shr
inc
add
ficomps
dec
push
or
lret
adc
cli
sbb
add
mov
mov
insb
std
aam
fisubrs
dec
dec
push
or
mov
pop
or
add
gs
fdivrl
in
cmp
jae
movsl
mov
mov
or
sbb
mov
out
arpl
pop
adc
add
lock
add
jne
jns
stc
arpl
push
mov
add
js
sbb
xor
mov
dec
push
push
roll
add
add
push
pop
xchg
push
and
jmp
push
mov
jns
mov
mov
rclb
lret
jno
shrb
add
push
sbb
mov
dec
adc
or
mov
add
rolb
pop
insb
insb
loopw
xchg
movsb
sbb
adc
mov
and
and
cmpb
mov
pushl
cmp
jg
inc
xor
mov
inc
xchg
or
icebp
xor
je
mov
add
jno
mov
call
dec
jp
rcrl
rclb
dec
addr16
push
push
mov
push
rorb
jbe
cmpl
roll
loope
cmp
xor
aas
inc
or
add
inc
xor
es
addr16
push
jnp
add
dec
dec
ret
lea
xchg
push
mov
iret
or
repz
and
cmp
add
sbb
jo
test
xor
and
or
lock
inc
jo
pop
jbe
jmp
dec
rclb
pop
shlb
adc
push
push
aam
fnstsw
shll
sbb
clc
shll
mov
stos
cld
adc
sti
xor
cmp
mov
sti
outsl
cmp
sbb
pop
pop
inc
cmp
inc
mov
int3
push
add
push
loope,pt
fs
xor
push
adc
push
and
jns
push
jl
sbb
adc
pop
mov
roll
add
xchg
push
mov
cltd
test
lcall
cmp
xor
jbe
pop
les
pop
mov
call
push
lret
jl
cmc
pop
das
inc
mov
or
fs
cld
push
ret
repnz
pop
testl
sahf
je
out
sbbb
adc
and
call
mov
out
dec
fisttps
repz
sbbb
sarb
pop
xchg
adc
add
ret
aaa
xor
or
or
add
dec
mov
add
and
dec
dec
mov
lret
lock
xor
add
pushf
nop
push
pushf
sub
mov
cwtl
add
sub
sbb
xchg
lock
loopne
add
add
pop
push
mov
lahf
cmp
mov
push
neg
ret
jo
bound
lea
movsl
mov
and
andb
insl
jne
cmp
xor
insl
repnz
or
push
mov
sub
jae
shlb
cwtl
jl
popf
sti
and
js
movl
pop
pop
push
push
lods
inc
addb
cltd
rolb
jmp
rolb
sbb
mov
mov
cmp
inc
pusha
je
mov
into
push
enter
icebp
ret
jb
testl
xorl
add
daa
mov
call
sub
mov
mov
and
sub
rolb
jne
jge
push
loope
jno
dec
push
mov
imul
cmp
push
and
imul
add
rorb
adc
pop
cmp
shlb
mov
test
js
mov
inc
stos
sti
jle
rolb
add
sbb
loope
adc
jbe
push
mov
adc
and
and
dec
in
test
jne
jnp
ss
addr16
xor
cmp
mov
jo
or
lea
loop
jle
push
push
jbe
push
push
pusha
or
fstpl
lods
sbb
jbe
cld
push
dec
je
lahf
pop
in
mov
pop
add
shl
sub
cmpsl
and
adc
adc
dec
xadd
lret
adc
cmp
nop
push
imul
push
aam
inc
loop
xor
push
cmpsb
cmp
cmp
out
ret
outsl
cmp
fadds
sti
dec
ja
je
or
je
or
sub
xchg
icebp
sti
das
adc
testb
cmp
cmp
aad
add
or
loopne
or
or
daa
adc
push
jmp
cmp
enter
adc
adc
xor
push
cmp
test
adc
repnz
ja
jmp
test
mov
sub
jbe
dec
adc
cmp
push
jle
lahf
jl
push
xor
mov
icebp
mov
inc
jmp
mov
mov
rorl
sub
repz
adc
inc
and
pop
in
push
rolb
adc
adc
inc
jbe
repnz
pushf
cmp
mov
fst
mov
push
call
mov
or
sbb
dec
loopne
sbb
sbb
mov
xchg
jo
jge
mov
jl
cmp
dec
cmp
mov
shlb
push
sbb
push
lret
aam
dec
out
sub
testb
mov
or
inc
mov
adc
push
ret
inc
sbb
mov
mov
lods
loopne
test
push
mov
ljmp
movsb
push
mov
bound
pop
jnp
sahf
adc
adc
push
cmp
dec
sbb
sub
and
xor
mov
dec
xorl
in
fisubrl
or
mov
xor
das
mov
inc
int3
push
mov
mov
pop
loop
jne
jb
data16
push
daa
pop
gs
push
cmp
or
icebp
pop
xlat
aam
lods
inc
aam
add
ss
xor
push
stos
pushf
and
xchg
mov
pop
inc
pop
hlt
or
mov
xchg
data16
sbb
pop
cld
mov
sbb
push
insb
loopne
push
jns
mov
inc
push
cs
dec
xchg
sbb
stos
je
daa
push
outsb
xor
imul
sbb
loopne
mov
das
shll
xchg
and
xchg
and
in
jnp
pop
les
or
or
cmpb
mov
int3
inc
adc
cmp
jnp
aaa
cmp
or
dec
xor
pop
dec
push
adc
jmp
mov
cmp
adc
setno
push
sub
lcall
cmpl
lods
adc
adc
and
or
inc
mov
add
sub
sbb
and
mov
push
push
stos
enter
les
jae
pop
inc
mov
mov
push
mov
dec
movsb
sti
mov
cmp
or
mov
xor
movsl
jle
push
ficoms
xchg
sarb
cmp
clc
inc
sub
push
mov
cld
push
cs
cmp
push
push
push
mov
in
jle
sti
int3
mov
mov
mov
push
loopne
pusha
sub
add
adc
cmp
push
xor
leave
mov
rclb
clc
aam
push
cmp
leave
inc
or
xlat
adc
or
dec
and
or
mov
ss
adc
or
jmp
mov
jbe
pusha
mov
mov
inc
clc
cmp
iret
pop
rclb
adc
sbb
pop
dec
jg
cmp
mov
inc
add
and
or
and
mov
movsl
add
mov
addr16
into
inc
mov
test
jno
sbb
jge
mov
ret
inc
inc
fwait
sbb
shrl
in
fimull
inc
fmull
adc
pop
mov
nop
ret
js
push
mov
xchg
xchg
pop
push
fsts
fmul
ror
and
les
add
push
lea
dec
rcr
sbb
adc
add
or
sbb
add
std
decl
repnz
pusha
mov
stos
add
mov
cmp
repnz
cltd
loope
mov
into
pushf
mov
xchg
sbb
mov
pop
xor
mov
add
dec
adc
loopne
mov
in
movsb
arpl
mov
ret
xor
hlt
dec
xor
adc
and
leave
orl
or
loope
and
pop
and
mov
inc
xor
aaa
mov
sbb
sbb
dec
vmread
adc
pop
fstpl
dec
inc
clc
pop
call
push
rcrl
sbb
add
mov
push
mov
xor
cmp
mov
mov
pop
ja
xchg
sub
clc
rorl
add
sbb
push
loop,pn
adc
or
sub
loopne
add
insb
addl
add
mov
lods
int3
insl
jbe
sub
lea
jle
or
xor
inc
cmp
jb
and
test
sub
mov
and
dec
cmp
xchg
add
push
fmull
sub
loope
shrl
xor
cmpb
sahf
or
add
ljmp
cli
mov
mov
in
cmp
and
cwtl
sub
sbb
push
neg
ja
mov
sbb
inc
je
mov
clc
jp
inc
push
add
and
inc
mov
mov
popf
xchg
adc
mov
xor
test
ja
adc
xor
movsb
dec
cld
xchg
into
add
mov
lods
bound
xor
jnp
fadd
cltd
jg
out
jg
les
push
mov
sub
mov
in
pushf
inc
push
or
dec
insb
jge
mov
out
push
lret
adc
add
jmp
test
xor
push
sub
lahf
out
and
xchg
ret
in
push
shll
add
enter
dec
les
dec
jl
addr16
movl
not
cmc
xorl
sub
repnz
xchg
xor
repz
cmp
repnz
je
mov
dec
cld
adc
and
xchg
sbb
call
or
movl
rolb
fistpl
cmp
or
rclb
pop
hlt
jno
decl
dec
jno
or
cmpsb
call
push
inc
or
ret
ret
mov
inc
sbb
bound
pushf
pop
jmp
clc
je
mov
jnp
and
loopne
out
push
mov
add
movsl
stos
inc
sub
pop
dec
lods
insl
mov
mov
insl
jnp
inc
push
sub
adc
mov
jo
and
ja
inc
adc
jno
jle
stos
jge
inc
test
shufps
push
add
mov
bound
std
xchg
pop
outsl
xchg
or
pop
sub
or
enter
add
xchg
push
jge
xorb
lcall
jno
insb
cmp
lahf
push
jb
or
insl
sub
mov
outsb
icebp
mov
hlt
outsl
mov
or
adc
outsb
popa
pop
cmp
push
divb
mov
xor
xchg
and
ss
sub
push
clc
nop
fmuls
pop
lea
test
fiaddl
sub
ficoms
or
mov
sbb
cmp
jae
push
mov
shlb
add
aaa
lock
andl
sub
outsl
jnp
and
jne
push
push
inc
je
pop
in
and
pop
icebp
std
cmp
dec
push
mov
lea
loopne
adc
mov
data16
data16
add
or
xor
subl
jb
jnp
inc
sub
jae
xchg
jle
xchg
popa
xor
bound
dec
movsl
lahf
xor
ja
pop
cmp
xchg
sub
cli
adc
test
into
shl
call
inc
addb
dec
sub
push
outsl
test
jbe
add
fdivl
mov
jnp
pop
adc
push
push
xchg
push
js
ret
rorl
mov
and
or
xchg
or
push
and
push
jo
stos
mov
add
mov
inc
loope
sbb
mov
lods
inc
notl
push
mov
ss
and
jg
jno
fstp
mov
sti
ret
arpl
cmp
fcomps
mov
dec
arpl
ret
sub
mov
sbb
popf
pop
int3
arpl
cmp
or
add
or
test
inc
ja
lock
mov
cmp
andb
sarb
xchg
add
dec
jne
enter
dec
adc
push
push
xchg
push
add
pop
mov
push
push
inc
sbb
push
flds
xlat
cmp
mov
xlat
push
stos
push
enter
jae
xadd
push
lret
push
rclb
jg
int3
jo
jmp
repz
lea
fwait
js
and
adc
or
jno
fisubrs
and
mov
inc
and
and
add
int
mov
and
mov
pop
rcrb
testb
mov
adc
xor
fstpl
or
adc
inc
popa
in
and
sahf
pop
xor
push
xor
dec
adc
test
add
ss
dec
imul
jbe
add
in
dec
adc
push
add
rol
add
clc
jbe
pop
or
add
rolb
cmp
rclb
dec
dec
fwait
mov
inc
ret
hlt
and
sub
leave
push
lods
jecxz
xor
lods
orl
sbb
cmpsl
add
push
or
pop
or
jnp
fisubrs
sub
add
sti
pop
sub
ja
test
adc
mov
mov
gs
adc
xchg
cmp
push
mov
cs
and
xchg
dec
shll
loopne
mov
jo
cmp
repz
adc
popa
ret
and
shr
fcoms
sbb
fists
jl
lea
imul
ja
mov
push
push
dec
or
sub
test
push
scas
sub
dec
lock
lcall
push
adc
dec
aaa
or
jp
iret
or
ret
sub
mov
fmuls
icebp
pusha
loope
add
adc
push
les
pushf
dec
addl
sbb
adc
mov
fisubrs
or
mov
rcl
es
mov
loope
ret
jne
sub
incb
pop
sub
test
sub
jne
jae
push
mov
cli
cmp
jb
jae
ror
idivb
jmp
dec
hlt
jae
mov
adc
jns
shrb
dec
mov
mov
xor
aas
inc
add
inc
and
mov
sarb
jmp
sub
cmp
dec
xchg
adc
mov
dec
jp
sbb
pop
dec
or
rcrb
dec
dec
cltd
sbb
cmp
test
scas
sub
add
mov
jae
cmp
and
rcrb
xchg
add
subl
sub
and
mov
daa
or
divl
adc
xchg
jecxz
sub
enter
arpl
fcmovnu
jbe
ja
daa
cmp
xchg
add
fisttpl
arpl
in
insl
dec
or
adc
rcll
xor
adc
dec
or
sbb
fstpl
into
sbb
adc
and
or
mov
adc
daa
dec
xchg
inc
add
outsl
xchg
jmp
int3
add
sub
sbb
inc
push
cld
cmp
add
push
clc
mov
pop
xchg
sub
or
jge
iret
inc
and
imul
call
push
ja
mov
mov
js
dec
jmp
add
lea
insl
cwtl
cmp
inc
fdivs
push
pop
add
add
adc
les
sub
add
or
and
inc
mov
sbb
sub
push
pop
call
mov
or
mov
adc
rolb
jl
cmp
mov
sarb
mov
nop
push
and
xor
rclb
add
xchg
loope
shrb
xchg
icebp
cltd
hlt
or
rorb
push
adc
test
push
scas
cmp
add
push
push
rcll
inc
inc
xor
push
or
scas
in
add
or
or
push
xor
mov
mov
jno
pop
mov
lods
dec
mov
and
cmp
ds
push
sahf
sbb
test
and
test
sbb
mov
cmp
je
sahf
push
jae
insb
sub
ds
push
cmp
call
mov
sub
or
jge
mov
dec
decb
xchg
sub
pop
xor
sub
xchg
mov
xorb
test
pop
xchg
outsb
nop
xlat
add
into
mov
and
lcall
fmuls
add
pop
insl
loope
mov
scas
fstl
push
mov
sbb
aas
roll
pop
enter
filds
fdivr
fadd
mov
inc
outsb
add
add
push
and
fldl
fnstsw
test
jnp
or
push
cs
jbe
lods
fstpl
jle
loope
jmp
jle
scas
add
rcr
nop
push
popl
ja
mov
mov
clc
adc
hlt
notl
shl
xor
pop
push
add
xchg
std
fstl
pop
rolb
mov
sbb
sbb
cs
add
fsubs
pop
adc
mov
subb
cmp
iret
out
jle
push
dec
jg
mov
out
lea
ret
cltd
and
adc
adc
dec
jne
clc
ja
inc
lret
mov
cltd
sbb
jg
add
leave
ljmp
iret
cmp
jb
js
sbb
lea
orl
xchg
shl
lea
es
loop
sbb
push
add
sub
xor
push
mov
adc
clc
pusha
mov
ret
or
adc
pop
ss
and
jle
jbe
es
fstpl
mov
sarb
inc
test
mov
sub
sbb
adc
push
mov
imul
pushf
add
mov
pop
jl
nop
jg
cmp
fadds
or
les
sbb
jmp
xor
inc
cld
imul
mov
orps
icebp
mov
lea
and
int
fs
xchg
sub
xchg
popf
jo
test
add
sbb
test
rorb
or
sub
sub
sarb
and
or
jne
jecxz
dec
xor
shrb
or
jg
jle
push
mov
fs
sub
sbb
pop
ljmp
imul
rcll
iret
ret
dec
adc
loope
and
scas
popa
mov
add
loope
aam
inc
insb
pop
mov
sub
pop
inc
out
xchg
aas
sbb
cmp
lea
dec
shrl
cmpl
fs
xor
ja
push
es
xor
sub
or
jp
ret
fnstsw
dec
adc
mov
or
je
or
pop
mov
push
pop
popf
jb
dec
movsb
loopne
pop
push
pop
push
add
lock
imul
sarl
jo
pop
je
inc
aad
lods
pushl
fwait
push
push
push
cltd
xchg
cmp
jg
mov
movb
test
lock
adc
or
fwait
mov
adc
push
sbb
cmp
ret
adc
subb
orb
ss
test
push
adc
ljmp
ret
rclb
addb
popa
and
mov
or
push
cmpsb
cmp
mov
icebp
lret
and
and
mov
sti
mov
or
add
jns
leave
or
gs
inc
or
jp
jge
dec
add
cmpb
andb
cmp
mov
insl
ljmp
xor
inc
push
outsb
stos
mov
fistps
or
outsb
sub
adc
fisttps
xor
pop
pop
push
cmp
out
mov
sub
cmp
push
mov
negl
loopne
lods
int3
scas
bound
dec
or
mov
pusha
and
dec
cmp
aaa
dec
arpl
test
dec
sub
cmp
jo
je,pn
jge
jmp
jl
jo
cmp
sub
inc
cmp
jmp
mov
ret
jo
clc
xchg
pop
cmp
push
lock
xor
push
mov
xchg
lock
clc
pop
shll
add
add
adc
mov
sarb
xchg
cmpsl
cld
inc
xor
dec
out
add
pop
fidivs
pop
pushf
xchg
or
inc
push
sbb
push
ss
sahf
xchg
pop
clc
push
rolb
ret
in
ret
push
sbb
imul
sub
cmp
mov
xchg
xchg
mov
dec
or
dec
in
lock
mov
pop
mov
ja
add
mov
das
rorl
ret
int
incl
inc
lret
sub
sub
inc
lea
push
push
add
push
xchg
aaa
scas
adc
push
push
cld
ja
fimull
fs
or
dec
mov
sbb
push
test
cmp
iret
mov
pop
xor
push
adc
fs
test
rorl
mov
ss
push
push
push
inc
mov
xlat
fisttpll
or
leave
ja
or
dec
inc
sub
pop
arpl
mov
arpl
jne
push
push
add
in
mov
loope
mov
mov
mov
xor
push
sub
rorl
int3
cmpb
ret
mov
lret
push
clc
jl
pushf
or
push
adc
xchg
mov
adc
cli
add
shlb
push
shlb
add
push
pop
daa
nop
inc
sub
sub
cmp
imul
imul
cmpsl
jp
mov
mov
test
dec
mov
aam
and
call
inc
add
mov
sbb
lea
shlb
fdivr
out
mov
mov
rcrl
loopne
cmp
fisttps
cmp
fildl
notl
mov
shld
rolb
adc
push
js
ja
add
shrb
inc
push
clc
iret
adc
cmp
jb
rclb
ret
adc
mov
hlt
mov
cli
dec
dec
push
nop
clc
js
pop
sarl
in
ds
or
jns
xor
adc
add
or
xchg
cmp
or
jne
imull
mov
xchg
int3
xor
add
cmp
push
nop
xor
inc
sub
shll
outsb
jle
or
mov
or
mov
adc
add
adc
sbb
rcr
arpl
and
jae
or
and
adc
mov
jbe
dec
add
mov
xor
adc
push
xchg
std
cltd
xor
movsb
roll
add
or
jl
or
rorl
int
sbb
sbb
mov
sub
clc
testb
fmuls
push
sbb
push
fistps
cmpsb
xor
repnz
popf
js
xlat
xlat
and
or
jmp
test
mov
stc
mov
or
lret
cmp
mov
and
imul
lock
call
sbb
mov
ja
sbb
sbb
cs
cmc
jne
lret
aas
push
aas
ss
repz
and
pop
xchg
lea
push
add
and
js
lret
sub
jb
mov
loopne
test
jmp
or
add
pop
mov
lcall
mov
cld
jne
push
sti
call
pop
daa
mov
jo
js
adc
inc
mov
out
add
adc
popa
push
cmp
cmp
adc
cmp
sub
pop
sbb
push
mov
lock
add
shll
lock
andb
je
sub
rcll
sub
add
rorb
test
pop
mov
xchg
sbb
je
hlt
fsts
jo
or
cmpsl
pushf
sbb
ret
fimuls
fstpt
ret
jne
jle
sub
inc
or
dec
mov
inc
xchg
add
jp
daa
jo
repnz
jg
cmp
fadds
adc
stc
nop
or
add
jmp
cmp
add
adc
scas
cmc
imul
inc
add
mov
jo
icebp
mov
js
mov
lds
sbb
jo
rcrl
inc
das
loope
sub
in
js
xchg
leave
shl
and
ds
movsl
sub
dec
in
pushf
jb
dec
dec
into
aad
mov
adc
push
sub
xor
and
or
mov
insl
orb
adc
in
sbb
cmp
inc
xor
add
ret
jo
jp
inc
jmp
in
or
xchg
xor
cmovle
sub
nop
mov
insb
inc
fsts
add
and
bound
movsb
cmpsb
clc
mov
jne
jl
sbb
loopne
adc
adc
pop
sbbl
cmp
mov
push
xchg
xchg
push
push
inc
push
out
adc
sbb
andb
ret
loop
loopne
push
stos
loopne
push
mov
or
xorl
ds
push
xor
sub
sbb
push
mov
por
or
pop
ss
lahf
sub
push
dec
cmp
addl
pop
pusha
inc
jbe
push
pop
push
lea
xchg
jo
mov
std
add
adc
ds
cmp
push
push
neg
jmp
xlat
jmp
repnz
icebp
in
xchg
je
nop
pop
push
cld
ds
and
les
pop
jle
cmp
mov
xor
aad
pusha
dec
adc
dec
mov
mov
inc
lcall
adc
or
xor
ss
dec
push
adcb
stc
inc
add
jle
or
ds
jmp
aad
out
pushl
jnp
push
mov
cmp
jl
cmp
jle
cmp
push
jp
in
xor
jle
cmp
fdivrs
je
test
mov
inc
enter
hlt
cmp
out
jb
jge
mov
pop
and
cmp
jl
imul
jne
pop
test
popa
test
popa
ss
xor
mov
pop
cli
dec
call
push
add
nop
test
jne
js
ret
add
fistpl
xor
test
jne
pop
pop
mov
mov
imul
adc
inc
dec
je
jl
std
icebp
cmpsl
xchg
loopne
or
mov
out
inc
or
add
dec
fbld
cmp
jge
and
jg
mov
push
jle
jg
mov
xor
adc
add
int
push
jb
inc
cmpsb
mov
jg
pusha
and
lods
addb
mov
inc
daa
or
xor
fcmovb
jb
ss
enter
ret
insb
add
mov
mov
mov
daa
pop
cmc
or
adc
or
test
test
fstpl
and
andb
pop
pop
les
out
adcb
lret
outsb
cmpsb
or
jmp
add
xor
mov
sbb
fsubrs
out
push
pop
cmp
cwtl
gs
adc
imul
sbb
sub
inc
outsb
int
add
sub
push
fadd
lcall
sbb
cmp
jg
xor
cmpb
add
fwait
mov
pusha
faddp
sbb
loop
pop
mov
add
add
orl
sbb
pop
addl
cwtl
jge
shlb
inc
and
lea
pop
or
in
fs
retw
adc
insl
jb
jl
mov
in
test
in
inc
cmp
or
and
das
sbb
cwtl
cmp
rolb
movsb
iret
repz
into
sbb
pop
push
pusha
fs
insb
movl
testl
shll
sbb
ja
jge
xor
adc
sub
xor
or
push
xchg
lods
lret
jno
xor
xor
push
ret
inc
mov
lds
jne
test
cmp
dec
cld
outsb
cmp
sub
pop
or
mov
icebp
fiadds
sub
jbe
ficomps
sbb
repz
push
js
mov
add
dec
fs
lret
cmc
add
lret
ret
shll
xor
test
inc
or
in
dec
cmpsl
mov
sarb
jg
in
data16
dec
sbb
dec
and
mov
loop
fs
push
mov
and
xchg
xor
sub
and
add
iret
sbb
dec
sub
iret
mov
xchg
dec
pop
fsub
movsb
xor
adc
add
aaa
xor
xor
add
insb
jns
dec
push
mov
nop
or
xchg
sub
jo
outsb
mov
add
push
add
xor
push
mov
jo
incl
out
mov
imul
pop
in
sbb
adc
xlat
inc
lea
dec
mov
insb
lock
jns
aam
sti
psubd
clc
mov
push
lahf
rolb
sarl
mov
add
aad
push
mov
insb
cli
mov
orb
movsb
jmp
jnp
and
cmpb
cmpsb
sub
jmp
cmp
js
lcall
outsb
sbb
das
add
hlt
test
jecxz
fistpl
rorb
sub
sarl
js
and
cld
or
aaa
push
mov
inc
sbb
mov
add
int3
mov
popa
push
loop
sub
dec
sbbb
shll
repz
xor
into
jns
test
xor
roll
gs
adc
fwait
mov
aas
mov
adc
in
lods
daa
mov
cmp
in
movsb
lea
idiv
sub
cmp
adc
mov
cmp
je
or
cmpsl
out
je
cmp
cmp
cld
mov
add
add
sub
inc
push
call
lcall
nop
out
sbb
xor
pop
mov
je
xor
jle
dec
add
and
push
push
sub
in
fstpl
or
mov
popa
jb
andb
or
push
repnz
add
and
mov
pop
and
pop
aad
and
add
or
fs
call
push
jmp
outsb
je
or
adc
and
or
xchg
ljmp
daa
movsb
ror
jo
cltd
pop
sub
cwtl
jecxz
xchg
fucom
rcll
or
fisttps
mov
imul
add
sbb
push
or
dec
and
fstps
iret
fwait
xchg
sbb
fadd
in
mov
jo
mov
xchg
dec
xchg
lock
sahf
andb
mov
dec
fcmovnu
pop
push
sbb
or
cld
mov
xchg
idivl
repz
lea
cmp
jle
dec
sub
inc
jle
in
popf
pop
sub
sub
xor
cmpl
inc
sarb
hlt
push
and
add
add
sub
rclb
jecxz
or
sub
sub
push
cmpb
and
push
cs
fadds
in
out
adc
pop
notb
shlb
push
jge
xor
repz
mov
mov
push
sbbb
mov
pop
lea
xchg
push
or
outsb
lods
push
fimull
and
into
or
adc
inc
inc
mov
inc
or
sub
xchg
aaa
test
dec
sahf
mov
adc
fcoml
add
and
ja
ds
add
cmpl
jae
cmp
out
xor
int3
jmp
push
mov
std
cmp
fnsave
dec
inc
inc
add
pop
pop
aam
fld1
sub
cmp
outsb
sbb
js
hlt
jmp
or
push
out
jo
cli
inc
and
and
inc
shll
or
pop
frstor
test
sub
dec
mov
shr
out
sbb
ret
adc
add
dec
inc
push
call
imull
jg
xchg
scas
mov
cs
mov
outsb
inc
inc
dec
repz
push
and
cmpsl
enter
adc
dec
bound
ret
mov
push
ficoml
les
and
dec
cmp
sbb
or
cmpsl
enter
stc
or
je
push
sarl
push
dec
adc
or
in
xchg
ret
in
mov
xor
ds
fstps
pusha
sub
xchg
js
ljmp
xor
pop
sub
push
sub
push
push
daa
adc
dec
jo
xchg
rolb
test
daa
sarb
rorl
ret
add
shlb
insb
add
xchg
lret
jb
and
data16
adc
pop
mul
mov
push
mov
mov
fimuls
loop
inc
cmp
jae
mov
inc
xchg
jno
stos
push
or
jmp
jbe
outsl
sbb
lods
jnp
pop
call
sub
mov
and
clc
mov
ss
jbe
cmp
mov
adcb
shll
mov
sbb
cmp
inc
je
js
sub
mov
pop
adc
enter
push
clc
or
fadds
inc
aad
fdivs
je
push
rol
xorb
adc
jbe
inc
cmp
mov
inc
ja
mov
cmpsb
je
lcall
adc
xchg
sbb
in
or
xlat
pusha
mov
sbb
sti
sub
jp
cmp
ret
pop
test
jne
sbb
fwait
clc
or
cmp
cmp
decb
or
je
fcoml
inc
mov
push
sbb
fldl
sbb
fiadds
mov
mov
jmp
lcall
out
add
jl
insl
adc
movsl
adc
cmp
test
mov
and
cmp
add
and
push
loope
jb
xlat
mov
lret
adc
adc
adc
inc
in
movb
add
push
fs
push
push
stos
iret
mov
cmp
lahf
es
fildl
fstps
flds
fsubr
sub
adc
dec
jo
loopne
repnz
inc
inc
test
push
add
and
fldl
lock
cli
pop
sub
gs
nop
adc
push
fidivrs
and
inc
add
adc
ss
ss
shrb
lock
push
xor
add
pop
dec
jne
adc
push
fsts
icebp
or
js
stos
clc
mov
pop
int
frstor
stos
movsb
ljmp
subb
add
add
xchg
mov
je
loope
xchg
push
mov
shrl
add
fstl
add
mov
adc
loop
push
push
xor
push
fnstsw
and
pop
or
test
push
repnz
cmp
pop
in
xor
cmpsl
mov
das
or
subb
call
repnz
push
or
hlt
sbb
mov
add
sub
sbb
or
fsubs
cmp
and
adc
sbb
jns
cmp
push
test
insl
adc
bound
jo
leave
dec
mov
dec
insb
and
sub
mov
out
jb
into
adc
xchg
hlt
cmp
in
dec
movsl
dec
ret
jo
adc
adc
js
xor
xchg
pop
mov
pop
popf
push
add
push
addr16
repnz
inc
jb
jne
fsubrs
sarl
enter
fs
pop
or
jbe
inc
clc
test
jmp
jo
xor
pop
sbb
fstpt
inc
cmc
jno
adcl
xchg
ja
inc
push
jb
ljmp
bound
cmp
push
adc
fdivs
notl
cmpsl
cmp
loopne
dec
addb
dec
mov
js
cmc
or
aas
mov
adc
ret
cmp
sbb
xlat
es
cmp
ds
dec
aas
mov
mov
push
mov
pop
mov
mov
adc
cmp
adc
xchg
inc
or
inc
daa
and
jns
mov
mov
pop
fiaddl
sub
cmp
sbbl
and
cs
and
popa
xchg
iret
pop
mov
push
fmuls
mov
cmp
mov
cmp
ss
je,pn
lock
sub
insl
call
decb
mov
xchg
mov
push
add
inc
mov
jl
mov
pop
ret
push
add
cmp
mov
adc
out
cwtl
test
mov
dec
ret
dec
inc
in
xor
jecxz
in
movsl
stc
imul
ss
dec
les
and
lods
or
ljmp
jne
nop
adc
inc
test
sub
popf
dec
jp
jmp
movb
shrl
imul
pop
daa
scas
inc
call
test
adc
and
or
sub
pop
mov
inc
stos
pop
sbb
adc
jns
cmp
sarb
in
inc
jp
dec
add
push
ret
xchg
xorl
push
jno
fnstenv
add
in
es
dec
fiadds
cmp
adc
and
pop
xchg
mov
fbld
xor
push
sub
cwtl
lcall
adc
cmc
mov
mov
mov
push
inc
fsubl
rolb
inc
test
push
nop
inc
addb
stos
cmp
rolb
and
pop
cmp
mov
add
test
and
lods
pop
cmc
adc
stos
pop
hlt
movl
adc
jg
or
repnz
adc
jbe
insb
inc
and
int
lods
pop
je
xor
or
mov
gs
add
lcall
mov
lds
sbb
dec
sub
or
xor
jne
mov
aas
gs
mov
out
adc
mov
sub
adc
daa
xchg
flds
sbbb
ja
ret
mov
loop
sti
sbb
mov
lret
rcll
xchg
je
scas
movsl
jns
push
push
push
cmp
js
mov
jl
insb
insb
adc
hlt
pop
pop
jb
pop
mov
cmp
mov
clc
and
jne
mull
jo
push
jae
mov
cmp
orl
jmp
in
push
push
push
or
mov
lock
imul
xlat
mulb
mov
pusha
add
into
icebp
xchg
adc
jmp
lea
xor
daa
cmp
xor
push
push
clc
mov
cltd
or
addl
add
sbb
inc
jne
dec
adc
adc
push
aam
xchg
pop
and
xor
add
and
or
add
lock
inc
push
in
and
and
js
cmp
jge
mov
movzwl
cmp
push
and
sub
loopne
and
lea
aad
add
int3
psrlq
jo
stc
mov
sub
inc
jo
addr16
inc
or
pop
loope
pusha
sub
cmp
sbb
inc
testl
inc
ds
lahf
sahf
dec
insb
jbe
arpl
push
insb
loopne
xchg
int3
jo
into
or
dec
jo
pop
push
lahf
lret
jbe
cmp
movsl
lea
mov
clc
cmpsb
push
cmc
insb
sub
inc
jo
add
inc
js
add
mov
cmp
sbb
or
cli
mov
mov
push
orb
pop
clc
adc
jp
loope
arpl
pop
mov
mov
loopne
jne
and
cmc
movl
in
cmp
dec
push
sbb
dec
les
std
and
nop
imul
js
fsubrs
mov
sbb
aaa
sbb
adc
push
push
out
xchg
or
cmp
push
ret
neg
add
sub
cmp
jne
push
adc
jge
add
add
mov
sub
int3
ds
stos
nop
xchg
inc
sub
sbb
sub
into
mov
sub
insl
push
pop
mov
movb
adc
mov
pop
icebp
mov
fsubrp
stc
dec
sahf
pop
repz
movsl
in
in
adc
sub
mov
xorl
adc
dec
hlt
mov
adc
sahf
or
es
shlb
clc
push
popa
loopne
cmp
ret
adc
add
mov
mov
addr16
sbb
adc
mov
scas
push
inc
or
inc
jbe
xchg
pop
add
jbe
and
sbb
jbe
cld
push
add
push
cmpsl
add
scas
stos
push
rcr
jne
jmp
xor
sahf
and
call
imul
sbb
add
lock
in
jg
subl
or
testb
je
cmp
sbb
or
inc
pmulhuw
cmpsl
jp
push
cmpb
leave
jmp
lea
mov
sar
add
mulb
fcoms
repnz
cmc
lds
dec
cs
shlb
push
inc
les
ret
sub
mov
rcrl
jmp
jnp
notl
mov
dec
xor
cltd
jmp
push
mov
pop
sar
fdivr
out
xchg
sub
or
jnp
jp
sarb
jnp
adc
pop
xor
jne
push
mov
mov
sub
mov
cmp
aas
jmp
sbb
cmp
ja
push
push
cmpl
xchg
push
je
mov
push
adc
mov
adc
aaa
push
rcrl
push
sarl
push
pop
cmp
push
xchg
lret
jl
test
or
adc
adc
jno
lods
es
add
in
jl
fmull
add
shrl
mov
test
mov
je
and
pushl
movsb
and
mov
mov
xor
rolb
add
or
jle
add
cld
jb
test
mov
push
out
mov
or
shr
lea
lret
sub
ret
xchg
adc
std
cld
movsb
shl
sbb
pop
ret
add
or
add
inc
inc
jp
arpl
out
inc
movsl
dec
adc
in
xchg
mov
adc
sahf
adc
sbb
xor
outsl
or
add
cmp
insl
loopne
or
inc
fsubl
or
jg
out
push
xchg
rcr
sbb
insb
fisubrl
mov
sbb
jbe
pop
and
or
mov
test
in
mov
xchg
adc
xchg
add
add
and
rorb
pop
lea
jl
or
pop
adc
add
inc
push
rolb
lea
push
mov
cs
mov
jne
scas
dec
inc
es
loopne
pop
rcl
pusha
or
push
sbb
add
xor
xor
gs
sbb
push
test
mov
mov
inc
inc
ret
or
cmp
jmp
xchg
inc
xchg
push
inc
imul
xlat
aas
pop
cmp
jmp
scas
xor
push
and
setge
cmpsb
cs
cli
add
rorl
and
adc
push
jo
or
jp
and
push
fwait
xor
and
outsb
fs
inc
jnp
movsb
push
clc
sub
leave
and
push
shlb
mov
cmp
xchg
and
jo
mov
jbe
cli
repnz
inc
inc
cmp
hlt
cmp
call
mov
inc
adc
out
push
sbb
cs
gs
jo
add
mov
mov
add
jne
cmpsl
inc
cmp
lcall
pop
cmp
jae
std
adc
sbb
inc
incb
ret
enter
lods
je
pop
mov
add
lea
sub
push
hlt
jg
je
sar
push
lea
lock
loope
fisubs
pminub
push
mov
nop
sbb
shrl
aad
push
popl
pop
xchg
js
pop
sbb
ret
nop
mov
in
or
xor
push
je
pop
les
inc
mov
cmpsl
popa
test
ret
push
mov
scas
mov
pop
dec
pop
mov
push
adc
mov
test
jo
push
push
jbe
adc
arpl
jmp
cmp
pop
push
mov
insl
mov
pop
roll
inc
test
xor
xlat
add
xchg
add
mov
inc
dec
test
pushf
and
aad
dec
cmp
sub
out
test
mov
cmpb
lea
dec
sub
inc
xor
dec
pop
adc
push
or
cmc
or
jge
cmp
sbb
mov
andb
idiv
fcom
jo
push
mov
push
inc
fldl
inc
jg
mov
popa
bound
cs
sub
aaa
add
cmp
loopne
inc
clc
into
jmp
insl
sbb
rol
xor
sbb
push
sbb
cwtl
jne
push
popa
push
xchg
dec
mov
test
ret
mov
pop
sub
jmp
or
push
jo
xor
ret
and
pop
icebp
mov
sti
test
lret
add
and
sbb
ret
mov
adc
das
sbb
pusha
cmp
adc
add
arpl
pop
inc
cmp
mov
loopne
rclb
and
or
hlt
loopne
xchg
dec
inc
adc
dec
ds
pop
cmp
sub
sbb
cs
loope
jne
int
rol
sub
or
push
and
jmp
pushf
add
inc
enter
xor
mov
inc
push
movsb
push
test
je
cmp
jbe
push
leave
jnp
mov
das
pop
shlb
push
movl
movsl
sub
mov
call
add
sub
push
add
cltd
sbb
push
hlt
pop
inc
mov
add
call
push
loope
push
mov
leave
mov
jmp
cmp
jmp
xorb
sbb
scas
pop
and
add
cmpb
cmpsb
lcall
mov
and
insl
jg
fs
test
movd
movaps
mov
fimuls
enter
shlb
jle
xor
jo
jb
add
lret
je
fnstcw
or
jge
repz
or
jg
cld
in
adc
xchg
ret
adc
jnp
mov
push
sbb
cmp
add
adc
into
mov
mov
adc
mov
fnstsw
ret
mov
rcll
add
out
mov
enter
inc
sub
ret
adc
cs
sahf
repnz
sbb
sbb
orb
sbb
into
js
jecxz
imul
add
js
mov
test
add
xor
add
and
rolb
pop
jns
stos
or
xchg
inc
push
loope
decl
xchg
test
mov
stos
lock
add
or
cmp
pop
dec
add
pop
cmpsb
gs
icebp
pushl
cmp
jb
neg
and
je
sub
mov
add
mov
shl
in
std
not
or
or
add
stos
mov
dec
inc
mov
pop
scas
mov
push
push
rcrb
adc
pop
imul
adc
test
pusha
or
call
jp
leave
lods
inc
sahf
sbb
mov
es
pop
sbb
je
movsb
cmp
je
jb
mov
data16
je
adc
out
ss
mov
pop
jne
cmpsl
das
test
movsl
shl
push
sub
movsl
push
xlat
mov
out
les
or
enter
push
fidivs
mov
push
xor
test
out
es
adc
and
mov
fs
ficompl
or
lods
adc
pop
mov
dec
sbb
add
cmpsb
nop
nop
dec
jae
inc
xor
xchg
mov
jns
sbb
je
sub
js
fs
push
xchg
inc
cmp
repz
in
in
lock
repz
hlt
clc
clc
xchg
iret
cld
cld
lea
clc
sbb
mov
and
nop
pusha
pop
mov
inc
pop
sti
and
and
lea
adc
cmp
pop
and
std
add
cld
out
cmp
data16
in
sbb
fsubrp
scas
inc
xor
pop
nop
push
push
je
pushf
in
xor
out
add
sub
push
jbe
in
out
push
add
adc
mov
mov
mov
cmp
jnp
push
clc
push
add
push
adc
and
repz
sbb
sbb
cmp
repz
adc
adc
cmp
repz
or
out
sbb
inc
dec
or
movsb
test
aaa
push
add
andl
adc
cmp
adc
adc
jbe
dec
insb
mov
and
packssdw
push
and
dec
sub
xchg
xor
or
jmp
push
roll
aam
dec
cmp
repz
jnp
outsb
mov
mov
je
push
or
push
dec
lods
push
push
cmp
or
in
push
dec
mov
cs
jp
je
mov
sub
divb
subb
jmp
sbb
push
cmp
push
mov
ret
es
mov
jmp
std
add
in
inc
insb
and
enter
push
jp
xor
or
arpl
or
or
mov
pusha
ljmp
sbb
cmp
mov
and
add
mov
cld
ret
dec
xchg
pusha
insl
cmpb
adc
ret
sub
jb
dec
push
jg
push
sub
movb
ds
inc
add
add
mov
jg
and
shlb
adc
jne
inc
cmpb
and
xor
sbb
inc
lds
or
sub
and
dec
ret
push
push
mov
daa
int3
ljmp
ljmp
test
pop
pusha
or
sahf
lret
arpl
dec
adc
xorb
push
int3
jle
out
sub
aam
testl
xor
xorb
addr16
add
loop
mov
dec
in
daa
icebp
adc
mov
in
dec
mov
push
and
jmp
lods
mov
jnp
push
and
mov
orb
inc
out
pop
pusha
gs
test
les
or
imul
push
rolb
push
dec
repz
lock
shl
ret
test
sbb
lods
cmp
jmp
inc
call
movsb
jmp
out
out
icebp
in
sub
movl
lock
mov
and
sub
pop
inc
fldcw
push
inc
test
jmp
pop
lret
aaa
loopne
or
inc
testb
les
mov
jne
orl
xor
iret
cmp
sbb
push
or
mov
xor
push
jge
add
xor
adc
je
outsl
and
and
sbb
adc
jecxz
sub
push
rol
out
sbb
arpl
add
adcl
sahf
lahf
xor
mov
orb
jg
ljmp
jb
pop
jl
jg
cmp
aam
ficoml
cmp
inc
mov
mov
imul
and
xchg
lret
in
cmp
cld
data16
mov
sarb
push
jl
mov
incl
pusha
fs
sub
dec
cmc
lds
sbb
jbe
mov
mov
cmc
cmp
out
sub
fistl
fcomps
push
je
jne
lock
arpl
pop
dec
movl
outsb
xchg
push
in
push
cmp
je
popf
fcoml
add
int
gs
dec
push
add
mov
sub
sbb
mov
or
sbb
notb
or
pop
mov
iret
push
cmpb
sarb
jnp
sar
aaa
mov
fs
add
add
ss
mov
adc
sub
sbb
sbb
or
or
mov
inc
sbb
sbb
inc
jp
dec
test
jl
jg
sbb
add
mov
pop
cltd
pop
idiv
add
and
stc
fdiv
inc
sbb
adc
jl
out
jae
cltd
stc
lea
dec
push
push
ret
mov
rolb
pop
decl
sahf
or
fcmovb
jge
mov
int3
mov
test
dec
popa
aas
adc
push
jbe
ficoms
lea
push
lock
stos
mov
shr
mov
mov
or
pop
or
gs
mov
mov
mov
add
or
fs
cmp
cli
pop
jne
testb
aas
lea
xchg
xor
jle
jle
pop
push
push
sub
std
or
cmp
mov
dec
and
inc
xor
or
ds
imul
movsl
push
loop
pop
inc
loopne
test
loopne
inc
fmull
sub
jbe
test
std
lcall
add
push
adc
mov
cld
cmp
push
jg
cmp
jno
jb
rolb
mov
cmp
ss
lret
jbe
push
xor
add
icebp
pusha
jae
mov
clc
inc
imul
bound
sbb
lret
mov
clc
iret
or
adc
repz
mov
pop
int3
dec
call
push
je
jp
les
dec
inc
adc
ss
inc
xchg
lds
ja
jbe
mov
mulps
hlt
int3
push
mov
push
mov
adc
notl
or
mov
into
push
gs
mov
dec
xchg
mov
sbbb
or
call
add
xorb
repnz
lds
mov
shl
jae
cmpb
xlat
sub
jno
sub
or
movsb
mov
xchg
push
mov
int
add
mov
inc
mov
cmp
mov
add
andb
jb
into
and
dec
movsl
popf
cwtl
adc
outsb
push
ja
inc
push
mov
or
dec
out
add
and
pop
dec
cld
push
add
add
clc
adc
mov
mov
push
lods
or
jns
call
subb
js
adc
push
loopne
xchg
and
aam
fmull
fmuls
lds
push
je
mov
sahf
in
sbb
pushl
insl
and
mov
call
lahf
xchg
test
jp
add
hlt
fdivs
mov
out
minps
adc
stos
pop
sub
cmpl
sbb
add
out
cmp
inc
loopne
loopne
loopne
or
sbb
sbb
lea
jmp
and
or
or
popa
pop
repnz
addb
sbb
add
push
sbb
pop
sbb
xchg
lea
or
xchg
sbb
sub
xchg
pop
cmp
hlt
ljmp
and
cmp
test
decl
sbb
adc
shll
movups
mov
movsb
bound
or
sbb
push
mov
sbb
aaa
push
sub
jno
pop
xor
sub
test
cli
sub
mov
xchg
push
or
xchg
jne
cwtl
iret
xor
sbb
in
jo
inc
sbb
push
sbb
fisubrl
or
dec
call
bound
orb
cmp
in
jo
sbb
sub
or
or
inc
sub
sbb
rcrl
add
test
and
mov
cmp
jne
or
popa
adc
and
cmp
mov
sub
add
mov
fdivs
inc
mov
jp
sbb
rorl
ret
xchg
and
divb
add
mov
fsubrl
cmp
pop
imul
xor
in
test
jmp
adc
sbb
cwtl
inc
lret
dec
mov
jno
pop
push
pop
or
sbbb
adc
and
push
xor
sub
dec
cld
mov
lock
idivl
xor
mov
jne
jmp
mov
sbb
inc
pop
ljmp
sti
mov
jne
cmpl
and
in
and
sbb
cmp
adc
inc
pop
and
adc
and
jns
push
sub
mov
rcrl
mov
mov
in
pop
or
rcll
iret
push
add
pop
mov
shlb
push
fmull
push
add
jl
iret
test
xchg
push
pop
sti
push
adc
cld
xor
push
pop
xchg
or
cmpsl
mov
rcr
push
xor
test
add
stos
fcompl
int
and
jecxz
add
pop
push
insl
add
in
inc
mov
push
cmp
or
pop
adc
mov
xchg
ja
icebp
mov
adc
daa
push
dec
mov
inc
and
fcmovne
sar
dec
sar
stc
and
mov
or
and
sub
ret
and
jb
lock
push
push
cli
or
add
dec
or
mov
inc
inc
ljmp
or
test
scas
mov
mov
mov
mov
aam
cmp
mov
inc
cmp
jb
mov
mov
adc
mov
or
es
add
or
add
mov
sbb
cmp
lock
xor
jmp
cmp
enter
test
jae
add
or
lcall
push
cmp
jne
mov
push
cmp
jne
dec
rcr
cmp
jne
call
jno
mov
into
or
ret
mov
enter
push
dec
jl
adc
mov
jmp
std
divb
adc
adc
or
cld
xor
pop
adc
push
loop
or
or
punpckhbw
mov
inc
dec
sbb
jl
int3
or
shr
mov
push
jle
ret
in
mov
shl
pushf
or
lcall
stos
adc
data16
nop
jmp
fs
push
cs
sbb
dec
xor
les
aad
mov
or
pop
mov
xchg
and
fldcw
popf
mov
sbb
xchg
add
push
outsb
les
sbb
mov
mov
inc
clc
add
nop
dec
ror
jns
or
xor
or
jo
xor
pop
fistl
loopne
and
push
lock
pop
or
ja
roll
rorl
adc
ret
push
lcall
call
adc
outsl
inc
mov
je
or
jg
or
add
or
jne
add
lret
mov
sub
sahf
push
push
mov
xchg
add
mov
lock
imul
mov
popf
es
add
lea
inc
daa
sbb
mov
jb
cmp
inc
das
clc
addr16
rcr
xchg
int3
int3
cmpsb
or
adc
adcl
add
adc
pushf
outsb
cwtl
inc
lret
test
jmp
xor
push
fwait
push
pusha
adc
sbb
loop
shlb
outsb
cltd
dec
sub
sub
rorl
insl
in
gs
andb
pop
adc
std
ret
addl
mov
inc
lcall
and
scas
add
js
add
inc
aam
push
adc
iret
add
sub
fdiv
ret
shl
push
adc
or
lret
mov
lods
add
stc
adcl
iret
xor
jbe
loope
jne
lds
sub
add
out
and
or
jne
sarb
lahf
mov
je
inc
out
cmp
je
cmpsl
or
adc
faddl
aam
xchg
pop
addr16
push
jo
fisubrs
std
cld
aad
mov
enter
jne
imul
in
inc
imul
dec
cmp
and
cld
lcall
es
add
out
std
and
lret
push
mov
imul
cmpl
add
cmpsb
push
pop
inc
stc
cmp
sub
aas
ret
pop
inc
jmp
cmp
jne
orl
mov
testb
out
dec
cmp
lods
fiaddl
add
inc
adc
adc
sub
xor
fbld
mov
cmp
ss
in
mov
adc
or
fmul
addr16
add
mov
stos
dec
js
pushf
enter
mov
rcll
scas
push
clc
ss
movsb
ffreep
or
mov
and
movsbl
sub
jmp
sti
mov
call
lahf
cmp
sub
and
pop
incl
adc
sbb
xchg
jb
jne
add
jbe
add
and
dec
push
and
movsb
and
idivb
mov
cld
imul
add
loopne
sbb
mov
test
cmp
repnz
clc
inc
ja
shl
adc
jle
das
mulb
add
sbb
and
pop
push
sub
stos
movsl
cmp
in
lea
negl
sub
fcomps
inc
xor
les
mov
add
inc
push
je
pop
sub
jno
add
es
push
popa
popa
stos
in
popa
push
sub
aam
lds
data16
cmp
add
cmc
out
add
xor
sar
dec
xor
sbb
mov
xchg
add
push
mov
repnz
mov
push
inc
push
es
std
add
repz
add
jae
xor
repz
pop
add
je
int
fs
cmp
jb
div
lea
push
adc
push
pop
dec
ss
adc
mov
push
pop
cmp
fistpl
loopne
loop
pop
es
inc
scas
pop
sti
push
mov
es
push
jge
sub
iret
and
push
add
push
or
movb
push
add
pop
cmp
cmp
xchg
or
cmpsb
nop
mov
in
mov
aad
mov
call
pop
or
push
cwtl
call
or
sbb
stos
pop
call
mov
lock
sbb
xchg
mov
sub
out
sub
xor
aam
jge
or
push
sbb
ja
add
int3
mov
movb
pop
jmp
fnsave
cld
std
add
dec
ffreep
mov
push
rclb
in
mov
lock
or
pop
add
stc
and
rorl
ret
mov
loop
mov
ss
cmp
xchg
or
leave
dec
push
lret
mov
sahf
jg
jmp
mov
insb
add
fdiv
sub
sub
mov
add
clc
incl
inc
and
dec
subb
adc
bound
and
jno
mov
jl
jb
cmp
cmp
sub
sub
or
out
adc
enter
cmp
push
or
push
lea
push
jmp
xor
jbe
adc
jle
adc
pop
sbb
jne
ja
call
decl
push
mov
pop
sub
sbb
pop
stos
mov
push
dec
sub
dec
adc
cltd
cmc
cmpsb
in
lahf
or
ret
sbb
adc
push
push
pop
sahf
xor
bound
xor
xor
adc
or
inc
mov
push
xchg
stos
mov
pop
add
sahf
add
in
add
jnp
dec
sahf
add
into
inc
iret
sti
mov
jno
je
xchg
add
xchg
aaa
jb
mov
cmp
mov
mov
pop
pop
inc
xchg
mov
or
enter
or
add
mov
fisttpll
cmpsb
repnz
push
or
jns
or
xchg
or
sbb
or
scas
in
push
int
add
adc
pop
adc
adc
sahf
lret
stos
cmp
or
popa
in
adc
adc
pop
lcall
xchg
adc
push
inc
scas
adcl
in
push
push
inc
xchg
or
sbb
pop
and
pop
leave
mov
sbb
add
in
sbb
fcompl
adcl
push
outsb
sub
nop
sbb
push
pop
enter
sbb
ja
cmpsb
in
xor
sbb
cmpsb
in
inc
negb
pop
int
incb
jne
add
add
sub
lock
add
cmp
xchg
jmp
xorl
imul
nop
adc
jnp
dec
in
rol
adc
in
leave
repz
leave
in
out
pop
enter
out
aaa
jb
cs
sub
call
mov
add
jmp
cmp
mov
add
sbbl
mov
in
in
xchg
aad
mov
in
cmp
mov
pop
and
out
xchg
out
or
movsb
mov
lock
push
sbb
xchg
dec
icebp
cmp
adc
jnp
or
adc
repz
sahf
cmp
imul
in
xchg
std
cmc
cmc
cmp
cmpsl
div
mov
add
negl
gs
stos
pusha
nop
cmpsb
clc
clc
clc
or
aas
stc
stc
and
mov
add
fwait
lret
sti
fdivrp
cld
cld
je
aaa
mov
insl
cld
push
push
nop
shlb
mov
repnz
sbb
jmp
sub
jb
jmp
fstcw
jb
cld
rorl
or
pop
cmp
cmpsb
loope
mov
jecxz
jecxz
mov
cld
in
in
mov
enter
testl
and
inc
or
out
xchg
mov
call
xchg
bound
cltd
and
inc
scas
ss
daa
in
cltd
dec
push
and
or
jmp
add
cli
out
out
push
push
out
xchg
mov
sbbb
xor
or
insl
nop
repz
sbb
add
cmp
in
stc
or
rclb
push
pop
push
lea
cltd
jb
sbb
sbb
xor
sti
sti
sti
dec
fmulp
aad
or
cmp
mov
clc
mov
jo
test
ror
aad
mov
je
sbbb
push
lea
shll
loope
cmp
pop
inc
clc
and
or
or
cs
ss
out
xchg
fdiv
out
and
test
mov
adc
or
push
xor
ljmp
jmp
idivl
inc
mov
pop
testl
xchg
in
aad
into
mul
scas
testb
or
insl
repnz
mov
repz
notb
jns
or
mov
out
div
notb
xchg
mov
sahf
fldenv
repnz
stc
jmp
adc
xchg
leave
or
sbb
add
xchg
pop
cli
hlt
or
xlat
inc
pushw
data16
test
jne
pop
add
mov
push
and
cmp
mov
loope
scas
xchg
stos
cmp
setb
leave
or
cmp
dec
in
ret
mov
hlt
in
lret
or
sub
repz
pop
paddq
mov
lret
and
aam
lcall
pop
xchg
repz
lret
add
xchg
repz
lcall
pop
xchg
repnz
repnz
cmpsl
faddl
xchg
repnz
shlb
icebp
icebp
das
xchg
sbb
mov
repnz
nop
pop
repnz
cld
icebp
cmc
cmc
ss
pushf
mov
cmp
lock
cwtl
icebp
int
andb
stc
stc
leave
or
mov
scas
add
icebp
movups
jne
pusha
or
icebp
dec
scas
mov
test
and
in
add
adc
cmp
ja
push
sub
ffreep
push
inc
rcr
ds
in
inc
cmp
cmp
ret
mov
adc
mov
test
inc
pcmpeqw
dec
mov
cs
icebp
dec
add
movsb
xchg
jl
call
sbb
mov
mov
pop
inc
inc
add
dec
push
mov
ds
repz
push
dec
sbb
adc
fldcw
jle
lea
or
testb
inc
xchg
sti
xor
outsl
jg
sub
dec
cmp
jnp
clc
inc
cmpsb
js
popa
sbbl
icebp
fnstcw
and
xchg
mov
hlt
push
push
or
cmpsl
hlt
imul
inc
in
mov
movsb
cmpsl
or
cli
adc
outsb
es
aad
cmp
int3
mov
rolb
cmp
jne
mov
jbe
jmp
je
add
push
jnp
ja
lea
add
not
and
sub
daa
push
push
dec
pop
sub
jge
cmpb
sbb
dec
addr16
loopne
call
mov
lea
pusha
add
mov
adc
jae
imul
or
mov
sbb
movsl
into
into
notb
mov
and
push
mov
inc
je
sub
inc
cmpsl
loopne
in
test
push
loope
pop
or
cld
sbb
mov
ja
mov
sbb
cmp
fistpll
cmp
inc
jb
or
adc
daa
and
fidivs
and
sub
push
pop
xchg
sbb
xorl
data16
jmp
and
pop
jp
pop
adc
pop
ss
sahf
dec
shlb
ja
imul
mov
rclb
pop
jmp
imul
test
inc
or
inc
push
cs
sub
js
rclb
dec
lcall
data16
mov
bound
jae
test
movsl
inc
mov
sbb
or
es
sbbb
and
into
mov
sbb
icebp
popa
or
xor
mov
pop
jle
jb
inc
add
mov
push
xchg
sbb
addr16
xor
xor
jo
pop
push
add
jle
push
pop
push
stos
bound
je
int3
dec
in
test
and
test
inc
aaa
sub
es
or
mov
dec
jne
jne
loopne
mov
mov
lock
je
rcr
add
or
mov
stos
lock
or
push
ja
dec
sub
repnz
inc
dec
mov
cmpb
pop
pushl
decl
jne,pn
lock
dec
clc
sbb
adc
decl
xor
aaa
jbe
push
cltd
pop
idiv
scas
and
or
cli
pop
or
adc
jle
dec
mov
mov
xor
or
jmp
cmp
loope
sbb
lea
loopne
jae
pop
jbe
dec
or
add
xor
sbb
push
add
sub
leave
hlt
mov
mov
mov
js
jg
add
test
sbb
rolb
mov
push
bextr
or
je
or
inc
dec
je
dec
jecxz
push
scas
jmp
add
push
rcrb
enter
shrb
decb
aaa
cs
out
sub
ds
mov
and
sub
imul
mov
decl
pop
mov
push
fstl
jmp
mov
stc
mov
mov
icebp
ret
sub
cmc
sub
pop
adc
pop
sub
or
fstl
je
push
xchg
xor
inc
pushf
mov
cmp
jmp
aaa
xchg
sarl
lods
enter
cmp
subb
aas
jge
xchg
dec
loope
sbb
idiv
rorb
inc
les
mov
popa
inc
sarb
repz
cmp
cs
add
sub
mov
adc
xchg
or
adc
mov
loopne
push
jno
lret
push
cld
or
adc
fs
jmp
jb
sbb
add
pop
adc
ds
movsb
or
jl
xchg
scas
adc
incb
mov
cmp
ret
or
je
sarb
lret
pop
subl
cmpsl
mov
xchg
pop
mov
sbb
xchg
in
cmp
aaa
xchg
pop
jno
sbb
cmp
pop
jns
dec
jl
inc
sti
dec
xor
cmp
ret
out
icebp
js
inc
jg
cmp
js
xor
pop
push
push
mov
pop
adc
pop
mov
rcrb
out
sbb
pop
je
mov
inc
add
dec
jne
xchg
push
cli
fldt
add
xchg
xor
inc
or
jmp
pop
ret
nop
popa
mov
mov
std
div
jnp
sbb
dec
in
pop
push
cmp
popf
push
decl
loopne
xchg
dec
adc
cmp
push
jns
sub
adc
pop
or
push
pop
sbb
iret
shll
inc
cmp
xchg
xor
and
inc
dec
jmp
mov
sbb
sqrtps
sbb
sbb
or
pushf
ret
pop
stos
insb
lods
mov
mov
xchg
sub
sbb
and
add
mov
add
mov
sahf
testl
dec
adc
adc
or
cmp
or
add
testl
enter
icebp
mov
nop
or
lods
mov
and
mov
loope
test
dec
pop
xorb
dec
fcoml
cmpsb
shrb
mov
xor
rorl
jge
ret
in
or
adc
inc
bnd
insb
call
ret
sahf
lea
stc
loopne
cs
adc
fsubs
inc
inc
inc
je
lods
movsbl
fs
sbb
adc
add
push
or
dec
popa
mov
sub
test
push
mov
add
adc
scas
in
and
sub
adc
test
dec
mov
cs
dec
test
push
fwait
or
mov
or
fadds
insl
sbb
lcall
das
out
mov
push
leave
rclb
fidivl
add
cltd
fsubrs
sub
fdivl
jo
add
test
jo
jbe
jecxz
xchg
lods
xchg
and
movsb
rcrl
mov
sbb
stos
and
inc
and
mov
imul
push
xchg
dec
lock
adc
int3
mov
popa
dec
cmp
shrl
sub
movsl
test
mov
pop
les
and
xchg
xchg
lret
cmovs
and
sahf
push
or
add
in
mov
icebp
dec
sbb
jns
xor
lret
add
push
adc
je
push
mov
or
inc
xchg
jne
jmp
cmp
dec
jl
jg
adc
outsl
dec
lds
fnsave
inc
push
das
cmc
mov
or
or
mov
fdivrs
ret
lock
xor
test
jo
inc
dec
adc
or
sbb
or
sbb
cmp
push
mov
jns
and
aam
xor
inc
push
stos
push
and
sbb
test
xchg
subl
or
add
shll
sahf
lahf
pop
push
jne
jl
lods
jns
and
mov
cmp
jbe
insl
lods
and
jo
push
sub
push
movsb
ljmp
in
lret
sbb
inc
push
jmp
cmpsb
xchg
aam
jg
inc
pop
cmpb
jne
inc
inc
jb
push
mov
test
push
pop
lea
mov
inc
pop
cld
ja
or
inc
sbb
out
sbb
mov
popa
jb
lods
out
lcallw
clc
jne
pop
sbb
push
ja
cmc
jmp
ja
fisttpl
pushf
sub
dec
lods
subl
and
ds
sub
sbb
mov
mov
adc
adc
sti
mov
xor
mov
jns
stc
repnz
and
daa
jmp
pushf
popl
mov
cmp
mov
call
incb
mov
cmp
adc
add
sarb
sbb
shr
sbb
mov
mov
pusha
dec
jge
lds
mov
shrb
sbb
sbb
call
add
inc
push
nop
pop
insb
jmp
sub
push
mov
jg
or
shl
ficoms
or
push
lock
xor
push
and
add
cld
sarl
add
adc
rorl
mov
add
sub
mov
jno
adc
mov
inc
nop
lea
bound
mov
xor
push
or
mov
dec
addr16
pop
inc
outsl
in
dec
das
pop
add
and
div
mov
and
je
xor
and
add
and
push
sub
or
or
call
mov
or
xchg
inc
movsb
je
or
fsubrl
cld
fiadds
push
pop
mov
lods
insl
cmp
push
jne
pop
cmp
mov
mov
and
dec
and
jmp
or
push
orb
mov
lods
pop
shl
cmp
and
push
ret
or
mov
lea
iret
or
test
stos
mov
pop
mov
cmp
and
sti
sbb
mov
and
fst
push
pop
cli
sbb
and
cld
jmp
movb
test
pushf
mov
xchg
pop
mov
or
pop
jnp
lahf
inc
jo
jg
add
xchg
push
inc
adc
repnz
mov
mov
test
mov
sbb
pop
cmp
pop
cmp
push
icebp
xchg
lret
xor
mov
dec
mov
mov
test
repz
loopne
push
nop
jmp
mov
pop
mov
roll
stos
inc
push
mov
inc
in
jne
out
loopne
mov
mov
inc
cmp
std
jne
fldcw
add
jmp
sub
cmp
or
xor
es
popf
cltd
rcrb
and
or
and
or
test
js
enter
fadds
cmp
push
add
push
out
mov
xor
fwait
push
mov
incb
cmp
jl
out
into
std
pop
je
dec
cmpsb
movsl
push
jmp
jae
and
cmp
insl
data16
and
aaa
push
lock
mov
push
aas
rolb
jecxz
cli
enter
or
push
call
std
scas
jo
out
add
lea
mov
test
or
inc
inc
push
leave
inc
cltd
jmp
bound
dec
popf
loop
jl
mov
aaa
jmp
push
insl
and
pushw
mov
fs
xorb
inc
cmp
add
mov
int
movb
jne
jo
inc
sbb
stos
push
or
movl
rclb
push
mov
test
nop
pop
mov
mov
add
or
sbb
roll
lea
push
inc
jle
sti
mov
xchg
idivb
insb
shlb
push
push
mov
push
leave
or
inc
dec
jne
push
scas
xor
and
stos
mov
push
or
rolb
push
jnp
cmpsl
cmp
into
adcb
pop
and
xchg
fdiv
inc
orl
sbb
cmp
xor
stos
mov
add
inc
es
mov
push
popa
loop
push
sbb
mov
fistl
mov
xor
movsb
out
jno
call
in
xchg
sbb
push
mov
lcall
cltd
stos
insb
ret
in
aam
dec
scas
pop
push
xlat
ret
ss
jo
insb
ljmp
push
adc
add
outsb
addl
mov
and
lds
inc
mov
add
push
inc
cmp
sti
sub
jmp
xor
dec
sbb
mov
hlt
inc
push
gs
jmp
mov
movsl
ss
out
imul
inc
insl
adc
aad
es
popf
cltd
jge
cmp
cmp
add
jge
jl
mov
cmp
out
aam
push
push
pop
pusha
and
pop
push
adc
ret
xor
inc
pop
nop
xchg
push
sbb
movsb
mov
dec
pushf
lea
or
jmp
jno
sarb
sub
add
ret
push
lds
jnp
or
pop
ret
dec
pop
add
or
sarb
roll
sbb
sbbl
mov
lea
mov
out
dec
inc
outsl
je
push
iret
dec
sti
pop
cmp
jne
sbb
cltd
inc
out
pushl
inc
mov
pushf
cltd
sub
das
sbb
dec
notl
popa
cltd
aad
mov
in
aaa
mov
and
nop
mov
shl
xor
xor
cmp
xor
push
int
aam
jle
mov
ret
popf
orl
imul
cld
das
pop
insb
add
inc
add
add
test
xchg
and
loopne
leave
subb
fsubrl
push
mov
sbb
sbb
mov
inc
dec
push
push
jg
pop
inc
andl
dec
xchg
ljmp
or
mov
mov
jb
mov
sbb
jo
or
push
or
cmp
bound
pop
lods
fimuls
dec
adc
mov
sbb
dec
insb
add
ret
or
mov
sub
fistpl
and
and
push
jo
fldenv
inc
je
test
cmp
sahf
pop
jmp
xchg
pop
add
xor
jo
jmp
jo
and
adc
scas
push
push
outsb
jmp
inc
movl
xchg
lock
data16
fcmovu
pop
fwait
jnp
or
add
push
pop
add
adc
xchg
pop
adc
popf
add
dec
ror
mov
bound
shl
pop
sbb
and
imul
pop
faddp
mov
add
jl
pop
add
pop
dec
push
xchg
and
test
fistpl
nop
push
ds
ret
pop
pop
add
pop
jb
add
jae
sahf
mull
push
mov
not
enter
inc
add
mov
iret
push
adc
mov
je
add
repnz
sbb
dec
std
mov
shrl
jb
pop
xor
inc
and
jb
inc
dec
inc
sbb
and
cmpsb
adc
sbb
lcall
dec
pop
sarl
adc
add
hlt
and
pop
cmp
mov
jle
xchg
mov
fcmovbe
mov
push
popa
je
popf
jge
adc
cmp
lcall
jo
jle
adc
shrb
stos
gs
fisubs
push
jo
dec
push
xchg
jnp
mov
cmpl
push
sub
movsl
imul
pop
cmpsl
iret
jmp
mov
mov
inc
sub
cld
insb
inc
push
dec
mov
cmp
icebp
rcl
pop
or
or
sub
int3
ljmp
push
or
pop
xor
faddp
jl
fs
mov
pop
push
jne
cmp
or
and
inc
xchg
sbb
lods
hlt
lock
mov
ret
pop
mov
jne
leave
push
jmp
xor
sub
test
dec
adc
in
pop
andl
xor
inc
lods
jl
daa
test
loopne
fcoml
lods
popf
aam
sarb
clc
mov
in
popf
enter
shrb
pushf
popl
insl
movsl
divl
ret
inc
push
xlat
jbe
dec
cld
xor
adc
cmp
adc
and
in
test
push
xchg
lea
and
push
xchg
test
or
jmp
pop
testb
pop
ret
xchg
jb
fs
push
mov
mov
pusha
add
adc
pop
jmp
add
je
pop
push
popa
mov
dec
ret
mov
lds
mov
add
sbb
add
or
stos
add
dec
loopne
ret
xchg
decl
xor
mov
add
and
add
loopne
push
jns
aas
aam
sarb
push
push
cs
stos
in
adc
xor
aas
mov
aas
mov
shrb
pop
xchg
xchg
mov
shl
test
or
sbb
jmp
jns
in
je
or
enter
or
lock
pop
nop
jo
xchg
push
mov
add
pop
add
add
aas
push
imull
mov
sbb
lahf
out
sahf
and
xor
inc
push
jbe
add
add
add
out
int
insb
or
cwtl
jbe
sub
pop
aas
lea
inc
push
jge
or
add
dec
into
inc
cmpsl
test
decb
mov
jge
inc
push
sbb
mov
add
pop
and
or
add
rcl
cld
and
pop
add
add
sub
test
add
sbb
outsl
push
jge
add
add
ds
cmc
lock
add
jle
jmp
imull
lea
data16
fstl
frstor
js
add
hlt
je
push
or
cmp
ss
cld
ret
cmp
iret
loopne
xor
add
inc
dec
mov
cmc
xchg
jnp
fmull
pop
mov
jl
and
loopne
xor
mov
jno
jno
jbe
addb
jns
aaa
add
pop
cmp
ja
jae
je
movl
sbb
out
nop
inc
dec
push
aas
clc
pusha
sub
or
jbe
pusha
lods
and
or
push
outsl
adc
mov
dec
mov
dec
out
sahf
addl
push
call
xchg
ret
adc
add
sub
lods
sub
ds
pop
js
pop
pusha
lea
inc
jle
mov
sbb
lea
inc
cmp
mov
mov
les
ficompl
pop
pop
mov
and
jg
push
andl
cmpl
sub
pop
add
xchg
xor
sbb
add
pop
inc
xor
mov
xlat
sub
test
sub
xor
fldl
addb
adcl
sbb
pushf
scas
adc
lcall
dec
mov
lahf
outsb
adc
dec
or
out
or
push
mov
adc
jbe
push
insb
mov
test
xor
test
into
mov
pusha
outsb
pop
inc
mov
js
pop
fldt
pop
imull
jnp
jbe
push
mov
imul
inc
add
inc
rcrl
dec
push
pop
sub
push
jne
pop
lret
pushf
push
rorb
and
or
and
push
aaa
and
push
or
add
popa
std
jg
sar
shl
add
mov
or
aam
je
cmp
inc
adc
repnz
test
push
jne
int3
and
or
out
fs
outsl
adc
cmp
jecxz
jbe
aaa
test
mov
jo
xchg
sbb
cmpsb
jnp
test
ret
shrl
xor
inc
lock
dec
rcrb
in
inc
je
sbb
in
call
inc
add
jmp
aad
sub
xor
movzwl
mov
sbb
cmpl
js
addr16
inc
cmp
jne
push
cmp
add
sbb
jg
das
nop
dec
in
dec
xor
int
sbb
ja
jb
hlt
cmp
mov
sti
push
mov
mov
mov
cmp
lcall
jne
aas
popf
mov
shr
mov
pop
sarb
ja
inc
shl
pop
pop
add
leave
xchg
call
movsb
xchg
dec
in
ret
jb
add
cmpl
data16
add
loopne
pop
ja
jnp
xor
test
cld
loopne
rcrb
adc
ja
ror
push
sar
pop
lods
movsb
ljmp
push
xchg
dec
xchg
lea
push
xchg
lret
movsl
mov
jnp
addb
push
lret
push
sbb
or
je
or
mov
sahf
pushf
mov
or
add
setg
jb
fistps
sub
nop
cli
movsb
sub
cmpl
jl
insl
sahf
mov
add
adc
clc
and
push
imul
lret
or
cmpsb
xor
movsl
mov
mov
mov
pop
sbb
hlt
hlt
stc
push
outsb
stos
sub
push
sbb
int3
sbbb
mov
add
loope
insb
into
pusha
sub
adc
sbb
pop
insl
outsl
aaa
mov
mov
js
add
imul
xor
je
pop
sbb
fs
and
xor
int
mov
js
dec
jae
sbb
movsb
sbb
cmp
cmp
mov
test
int
push
pop
cmp
adc
pushf
test
or
sbb
sahf
cmp
je
pop
push
or
filds
cmp
add
mov
mov
inc
adcl
lea
call
in
out
hlt
out
jge
push
mov
mov
imull
xor
popf
jbe
sahf
sub
jo
aaa
jne
ds
mov
cmp
sbb
or
dec
and
mov
sub
xchg
sti
mov
xor
es
adcl
mov
lret
pushf
scas
imul
pop
or
addr16
mov
inc
push
or
mov
jl
xor
inc
xor
pushf
sub
cmc
fs
xchg
mov
andb
cmp
repnz
test
outsb
inc
cmp
xlat
sub
test
test
fisttpl
or
adc
test
or
mov
xchg
push
push
filds
setp
pop
out
mov
xlat
mov
pusha
dec
pop
dec
mov
dec
nop
cmp
mov
stos
add
or
lea
movsl
ret
dec
jp
jns
mov
pop
cmp
mov
jo
or
mov
ret
sub
jmp
faddl
jno
outsb
je
arpl
jmp
insl
add
popa
subb
mov
mov
aaa
gs
insb
xor
xor
sbb
dec
xchg
mov
pusha
pop
or
cli
mov
lds
adc
test
imul
jae
add
pop
lahf
mov
mov
jne
movsb
addr16
mov
jmp
cmp
mov
popa
mov
lahf
and
pop
push
push
push
loopne
daa
mov
sub
popf
or
rcll
adc
push
xchg
and
add
jmp
push
insb
push
jp
js
or
sub
and
adc
les
ret
push
xchg
lods
or
int
in
inc
sbb
sbb
push
rorb
test
subb
dec
fwait
popf
push
push
movsb
scas
data16
data16
adc
sbb
inc
mov
cmpb
jne
xor
inc
xchg
mov
xor
js
adc
dec
push
mov
lret
mov
or
mov
xor
in
inc
daa
add
adc
ret
shrl
mov
mov
das
test
sbb
push
sub
into
xor
jbe
sbb
push
dec
pop
mov
rcll
dec
test
pop
nop
inc
cld
jmp
popa
xor
orb
in
and
add
inc
rcrb
pop
jl
jae
lods
mov
neg
mov
and
scas
jecxz
dec
pop
fstpt
or
sbb
mov
ljmp
ret
jne
and
lea
jnp
das
sbb
sbb
test
mov
cltd
push
adc
inc
dec
and
xor
nop
incb
jge
repnz
sahf
add
mov
sub
sub
inc
cmp
movsl
mov
imul
into
cmpb
shlb
shl
movb
inc
jmp
ds
out
nop
mov
or
xchg
inc
xor
mov
out
fwait
imulb
aas
sar
ret
cld
mov
pop
std
mov
sub
add
sub
sbb
add
and
out
push
push
sub
in
pop
mov
fildll
sti
in
jle
or
and
sarb
mov
rolb
sbb
push
push
mov
leave
and
imul
or
adc
imul
sbb
movsl
inc
aam
adc
jle
aam
or
push
sub
lock
dec
adc
adc
cmp
jle
mov
or
xor
daa
rol
lret
lcall
shll
scas
fld
cmp
add
xor
je
push
arpl
and
fs
out
add
jo
mov
les
mov
idivl
iret
mov
mov
add
lret
and
std
mov
mov
ret
mov
pop
test
lods
sbb
add
call
jg
add
jl
sub
dec
mov
jecxz
jle
ss
lods
dec
ss
and
lods
push
pop
dec
shlb
test
lock
loop
pop
jmp
adcb
out
std
add
hlt
and
xorb
into
ret
add
push
outsb
dec
fwait
xchg
movsb
ja
fistpl
cltd
sub
dec
pop
push
inc
jmp
insl
inc
add
jecxz
pop
pop
rcl
pop
pop
and
sbb
push
out
mov
mov
ss
add
cmp
push
inc
push
gs
cmp
xchg
fs
out
lcall
push
mov
push
jg
inc
insb
sti
fs
push
cmp
or
fwait
loope
pmaxsw
sub
inc
sub
sub
lea
fstpl
enter
stc
push
push
out
pop
add
loop
stos
mov
inc
cmpl
jne
add
int3
inc
clc
in
xchg
push
data16
pusha
sub
or
lret
add
and
mov
je
rorb
mov
sbb
mov
cmp
leave
cltd
sub
loope
push
or
and
sbb
mov
sub
je
in
pop
jne
push
jecxz
adc
jns
rcrb
nop
and
xor
sbb
dec
add
lock
push
add
dec
cwtl
bound
inc
js
push
loopne
loopne
rcl
pop
push
repnz
cmp
popa
mov
pop
jl
fdivrp
and
jmp
fisttpl
lahf
insb
int3
push
or
add
ret
and
faddl
lahf
push
movb
insb
push
lea
loopne
in
dec
adc
xor
testb
dec
xchg
lahf
jmp
or
int3
dec
lock
push
inc
sub
push
out
mov
pop
mov
mov
mov
nop
mov
cltd
push
int
mov
gs
jg
repnz
add
iret
xor
inc
sbb
sbb
sbb
or
loopne
adc
sub
int
ja
rclb
pop
mov
dec
mov
imul
sbbb
xchg
push
mov
dec
xchg
xchg
cld
clc
adc
xlat
loopne
dec
jge
in
add
jg
cltd
aam
sub
fsubr
jne
addb
and
add
leave
cmp
mov
adc
pusha
jo
jmp
adc
cmp
scas
and
add
and
ja
add
pop
adc
push
mov
fmul
and
out
pop
into
adc
jo
pop
or
sub
in
stc
dec
mov
dec
inc
and
pushf
shlb
aad
aaa
cmp
mov
adc
aam
jo
movsb
push
and
push
in
movb
inc
mov
test
lods
test
add
jno
push
test
mov
daa
pop
popa
ret
lock
icebp
xchg
les
and
mov
ficomps
out
aam
pop
jbe
push
ja
push
dec
mov
xchg
ret
mov
sub
fstpl
xchg
jmp
addl
pop
shrl
cmpsb
push
pop
pop
ja
jl
and
pushf
dec
daa
xchg
out
inc
jne
iret
dec
xor
and
test
out
mov
cltd
mov
popa
push
ja
add
mov
or
or
pop
dec
leave
sbb
rorb
push
mov
leave
jecxz
enter
scas
and
popf
adc
hlt
jae
adc
push
out
push
jb
inc
rcr
cmp
imul
adc
jae
jbe
add
insb
sub
test
inc
mov
xor
push
fisttpl
mov
cmp
in
movsb
dec
dec
inc
cmp
test
in
es
dec
aaa
ds
lea
in
push
xor
dec
dec
sub
pop
mov
sbb
rorl
orl
movsb
in
xorl
aam
dec
je
insl
sub
nop
sub
clc
add
adc
mov
xor
push
pop
test
rclb
push
push
or
push
mov
xchg
lret
mov
int
xchg
adc
dec
pop
call
fsubs
xchg
adc
out
in
fsts
std
add
mov
in
and
push
or
leave
push
call
js
push
inc
inc
push
cltd
in
mov
push
leave
xchg
clc
mov
test
stc
pop
mov
lret
inc
mov
xchg
xchg
dec
sahf
call
mov
xchg
mov
mov
push
jo
orb
lcall
push
xchg
lret
pop
mov
adcl
lret
sub
inc
pop
cmpb
call
mov
in
pop
dec
ss
or
jne
enter
push
mov
push
nop
lret
fmul
dec
sbb
sub
cs
call
fcompl
mov
xor
inc
test
or
push
pop
add
and
sbb
push
aam
or
bound
nop
or
push
jbe
push
test
mov
lods
sub
lahf
jp
sbb
or
jge
aad
mov
pop
fadds
test
or
xor
cmpsl
std
inc
push
cmp
nop
mov
lea
jmp
repz
inc
mov
adc
add
add
mov
pushf
test
mov
adc
xchg
int3
sub
push
lock
add
lret
mov
add
or
int3
aaa
xchg
ret
xchg
inc
scas
lret
jne
dec
cs
outsb
fwait
shr
loopne
xor
sub
xchg
es
push
or
and
or
aam
dec
shrl
pop
fsubl
xchg
push
mov
mov
fidivrs
adc
or
cs
data16
dec
add
dec
add
push
movsl
mov
and
pop
shr
lds
cmp
push
adc
xchg
push
xchg
add
pop
adc
js
dec
push
in
xor
adc
cmpsb
out
decl
mov
push
or
shll
enter
or
test
pop
push
mov
sub
clc
add
cmpsl
inc
cli
mov
jmp
lods
popf
cmc
jmp
dec
adc
cmpsb
cmpsb
cmp
push
pop
dec
inc
or
movsl
sbb
push
and
ds
mov
test
push
dec
or
jnp
push
insl
gs
xchg
les
hlt
sbb
add
inc
fmul
js
outsl
pop
or
lods
fcomps
xor
fstpl
adc
stos
mov
call
lock
dec
imul
hlt
lea
das
nop
mov
add
in
mov
arpl
jno
xchg
pop
js
cmpl
std
mov
lret
fadds
mov
cwtl
into
das
cwtl
loopne
sbb
mov
add
and
sbb
pop
in
stos
adc
adc
xor
push
push
lahf
stos
add
pusha
pop
sbb
add
inc
sbb
cmp
or
inc
or
insb
and
ja
popf
nop
inc
lock
fwait
xchg
jmp
decl
adc
mov
push
pop
shl
xchg
dec
push
push
jns
cmpsb
dec
sahf
lret
dec
fcoml
fstl
mov
icebp
lds
mov
and
inc
lock
or
pushf
out
sahf
push
dec
popl
cwtl
mov
jns
cmp
sbb
into
xlat
jl
icebp
jns
push
jae
pop
insl
sub
push
leave
sub
popa
push
or
push
int
stc
jns
pop
fnsave
cs
mov
mov
repnz
test
sbb
sub
push
pusha
push
inc
adc
sbb
popf
divb
cltd
jmp
inc
faddl
ja
fcomp
pop
and
and
or
inc
test
xor
cld
pop
fucompp
lahf
arpl
shlb
clc
and
inc
aaa
mov
ret
and
push
push
test
jmp
aam
adc
jle
js
popa
inc
mov
pusha
cld
and
movsb
pop
rorb
in
mov
fadds
pop
cs
call
insl
pop
jb
inc
mov
lods
std
cltd
mov
clc
inc
or
jne
add
jg
add
clc
enter
or
cli
mov
sar
and
or
out
aas
pop
js
mov
jne
dec
mov
adc
pop
sar
lea
stos
jmp
inc
and
pop
jno
test
xor
repz
leave
scas
ret
loopne
mov
inc
xrelease
or
int3
cmp
pop
mov
in
inc
mov
test
mov
xchg
mov
or
shl
jl
mov
pop
pop
jl
jge
fldpi
xchg
xchg
dec
jne
or
push
lret
in
add
add
xor
jnp
mov
cld
adc
mov
push
add
pop
mov
push
sub
loope
mov
mov
sbb
or
jo
rcrb
nop
shlb
mov
push
or
xor
or
cmpl
jne
test
push
inc
sub
aad
pop
and
movsl
sbb
ss
je
pop
jb
push
cmp
inc
xor
sahf
push
inc
movsl
or
sbb
test
imul
push
outsl
loope
fnstcw
pushf
cmpsb
rcl
pop
leave
mov
jo
dec
stc
andl
adc
or
push
mov
jo
xor
call
aam
or
scas
push
aas
xor
js
add
repnz
cmpl
test
mov
sbbb
sbb
push
les
lods
inc
mov
jp
in
pushf
adc
push
cmp
push
jg
cmp
mov
jg
add
movsb
popf
notb
xor
mov
mov
mov
ret
cmpsb
or
mov
test
or
enter
sbb
jns
daa
aad
shll
xor
mov
cld
imul
push
or
jbe
dec
loopne
lock
pop
rcrb
movsb
enter
mov
sub
mov
sub
mov
pusha
or
arpl
add
adc
lea
pop
push
add
mov
rclb
xchg
mov
push
loope
insb
sub
sub
popf
and
mov
lcall
std
and
mov
dec
jmp
xchg
jp
cmp
icebp
fisubl
push
jmp
js
out
leave
pusha
add
push
or
cmp
insb
xchg
cmp
mov
les
arpl
fimuls
cmp
jg
outsb
idiv
jno
cmp
inc
add
mov
sub
shl
mov
mov
or
jl
lret
repnz
push
cmpsl
sub
mov
mov
pushl
out
push
adc
xchg
lea
push
push
mov
push
fsubrl
pushf
mov
js
and
mov
test
and
and
loope
std
push
cmp
adc
cmp
test
jb
inc
daa
add
cli
scas
jns
and
inc
add
movb
and
push
ljmp
ret
jb
lock
and
insl
dec
movsl
inc
inc
dec
fwait
push
mov
and
or
ja
mov
and
and
cmp
or
daa
sbb
add
imul
lcall
sub
fwait
sbb
cwtl
mov
mov
inc
adc
orl
sarl
data16
add
pushf
jmp
pop
pop
repnz
pushf
jmp
dec
xor
push
add
add
into
mov
mov
push
and
or
jmp
data16
test
sbb
jmp
test
sbb
outsl
notl
jg
int3
cmp
daa
jo
jmp
xlat
and
mov
dec
mov
cmc
sbb
and
js
pop
push
lds
or
loope
and
sub
add
pop
jmp
fwait
mov
mov
xor
jge
dec
lahf
fstpt
sbb
mov
je
push
push
mov
pop
push
test
mov
inc
test
in
or
lea
push
lock
or
shr
nop
popf
mov
adc
lahf
inc
mov
inc
sub
fisttpl
decb
loopne
popa
jl
pop
and
xor
aam
aam
jns
js
adc
push
popa
mov
mov
xchg
lock
lret
or
pop
mov
inc
ret
rcrb
sarl
xchg
mov
imul
sub
push
sub
js
mov
inc
ljmp
sbb
add
push
cmp
dec
adc
xor
sbb
adc
enter
insl
or
dec
aas
xor
pop
and
mov
mov
movsb
mov
jb
xor
or
outsl
sbb
lods
lods
pop
inc
sbb
xchg
xor
test
push
jb
inc
jle
or
sub
sbb
les
pop
xchg
cmp
or
dec
mov
and
sub
mov
rol
movsl
in
xor
shll
fcmovnb
sahf
dec
sbb
int3
and
jno
sub
jbe
push
aad
add
mov
aad
add
inc
mov
sbb
cmp
scas
movsl
cmp
xlat
fstpt
xlat
popf
sub
fnstsw
sbb
xor
pop
jge
xlat
jb
or
xlat
adc
and
ss
mov
xchg
xchg
xchg
xchg
in
aad
sbb
inc
or
outsb
fnstenv
sub
stc
fldl2e
ja
and
cltd
movsb
sbbl
mul
dec
pop
dec
outsl
fildl
movsb
and
xchg
sbb
lods
movsl
sub
mov
movsb
add
adcl
leave
sub
sbb
fistpl
out
pushf
movsb
cmp
movsl
xchg
in
xchg
leave
dec
fsubrs
nop/reserved
frstor
or
and
lcall
sahf
faddl
call
mov
jb
enter
add
sbb
xor
mov
add
insb
ja
mov
les
daa
and
cmp
sbb
cmpsl
and
push
mov
push
mov
leave
pop
inc
dec
mov
leave
jne
iret
dec
les
iret
inc
jb
leave
movsb
test
or
leave
test
lods
outsb
sbb
xchg
pop
fwait
sarl
adc
int
aas
dec
in
adc
out
inc
sub
push
out
ds
pop
mov
lods
or
mov
out
rclb
int
incb
xchg
jg
ret
jg
fidivl
sti
mov
jg
push
inc
adc
sub
inc
push
pusha
sti
push
xchg
push
jo
jecxz
jne
test
je
or
xor
insl
mov
pushf
in
jg
adc
divb
xor
stos
and
inc
js
sbb
mov
dec
jne
xor
add
inc
inc
cli
pop
pop
pop
fdiv
sub
xor
push
mov
bound
add
cli
shr
inc
repz
add
out
ret
adc
jo
mov
push
loope
ljmp
fwait
xchg
outsl
push
push
dec
adc
jae
stc
or
pop
xor
aas
xchg
push
pop
outsl
inc
or
jbe
dec
movsl
jb
jle
loopne
outsl
ja
push
xchg
lcall
js
mov
test
add
ffreep
lea
or
jg
inc
out
and
and
fwait
testb
mov
pop
xor
dec
je
mov
or
xchg
push
negl
int3
lock
push
mov
lret
inc
sbb
mov
push
mov
mov
pop
shll
cmp
or
mov
or
jo
arpl
loopne
adc
or
push
les
adc
cmpl
fsubrl
rclb
mov
rcl
xor
leave
add
push
sbb
inc
add
cmp
orb
outsl
mov
test
je
xor
mov
dec
cmp
push
add
es
or
lahf
sub
and
scas
pop
ret
ss
add
sub
add
les
mov
push
mov
shll
fucomip
stos
rorb
iret
bound
and
sub
loop
xchg
push
jno
jg
push
insl
and
fs
add
inc
jb
cmp
or
ret
dec
insb
loop
mov
xor
loope
mov
push
add
xchg
add
js
lods
adc
xor
push
pop
cld
add
inc
movb
testb
lcall
test
shufps
dec
or
gs
jle
pop
cmp
sbb
mov
lret
or
scas
adc
sbb
mov
jmp
cmp
jae
ja
lcall
dec
and
icebp
mov
or
sbb
inc
dec
and
sbb
push
add
pop
mov
loopne
movsl
cmpsl
push
and
xor
add
sbb
testb
rclb
mov
jmp
add
into
test
dec
loope
dec
and
sub
xchg
push
in
addl
add
in
add
push
jne
cmp
pop
mov
loopne
cmp
bnd
pop
mov
or
xchg
lret
in
fdivrs
sbb
in
int3
mov
ret
cmpsl
test
mov
les
lock
pop
dec
les
je
push
je
mov
push
push
mov
xchg
and
dec
test
int
lods
lahf
dec
sub
mov
add
cmp
sbb
gs
das
xlat
aas
ret
fstps
sbb
int3
xor
stos
or
and
dec
fs
xor
mov
fs
cmp
or
mov
cmp
ret
outsb
add
mov
or
inc
outsl
fdivs
jecxz
cld
fcmovnu
pop
cmpsb
testb
xchg
jp
push
sub
lock
dec
pop
shlb
jecxz
fnstenv
jmp
adc
outsl
jo
xchg
das
adc
push
mov
sub
imul
call
in
lahf
mov
dec
movsl
push
imul
mov
lods
in
aam
xor
pop
mov
inc
inc
fidivl
arpl
outsl
loop
scas
pop
xchg
data16
movb
ds
imul
pop
imul
push
cmp
add
mov
adc
inc
jmp
imul
and
fadd
test
push
ret
cmp
imul
push
mov
fucomp
pop
inc
jo
jge
aas
sbb
jmp
enter
fs
bound
sub
dec
nop
dec
je
pop
fsub
push
test
mov
lock
xor
icebp
xor
sub
dec
inc
aaa
xchg
repnz
lock
and
add
and
fiaddl
enter
or
xor
mov
push
jl
lahf
add
hlt
cltd
mov
mov
dec
js
cli
mov
sbb
lock
sub
pop
divb
insb
mov
inc
sbb
ret
cltd
test
std
fstpl
mov
lock
sub
mov
test
xchg
inc
pop
sbb
les
int3
test
xlat
imul
add
pop
xchg
fadd
push
sbb
push
inc
sbb
movsb
stc
jmp
lock
loop
dec
in
adc
add
xlat
pusha
jnp
push
inc
andb
adc
sub
inc
sub
jmp
and
pop
and
xchg
sbb
loopne
insb
jp
mov
pop
adc
add
imul
mov
or
leave
call
adc
jmp
mov
sbb
or
movsl
mov
les
pusha
out
outsb
out
xor
jns
orl
add
decl
sbb
sub
push
rcrb
incl
jae
jge
jno
in
push
out
imul
jne
popf
and
or
leave
xchg
xchg
bound
loopne
rclb
sub
dec
pushf
imul
lcall
xor
popf
mov
or
pop
lahf
push
mov
cvtps2pd
push
jne
in
xchg
out
jns
push
push
xor
push
jmp
pop
shr
and
push
adc
scas
jne
or
cmp
pop
scas
mov
push
cld
and
xor
repz
add
mov
mov
sbb
subb
pushf
jmp
add
loopne
xor
cld
or
jge
loopne
lret
repnz
add
push
rclb
out
pop
jnp
daa
lds
inc
fcmovbe
push
das
stos
dec
mov
mov
cmp
jge
cmp
jl
cmp
jg
lea
shrl
jge
loopne
or
idivb
push
jle
pop
push
sbb
add
or
out
jne
dec
imul
mov
popf
shrl
les
and
xchg
lods
loopne
sarl
xchg
xchg
call
lods
mov
les
bound
pop
dec
pop
jno
aad
mov
and
rolb
shlb
xor
mov
mov
in
addl
sbb
inc
inc
sbb
mov
cmc
xorl
mov
dec
fst
cmp
and
pop
hlt
adc
jl
shll
fidivs
jmp
xor
jl
or
int
in
iret
es
xchg
ja
push
push
cli
pop
pop
clc
jl
loope
push
mov
lea
lea
stc
arpl
and
lcall
xor
mov
loopne
lea
orl
sti
pop
inc
push
imul
sbb
mov
sub
mov
and
add
popa
scas
hlt
jecxz
dec
xor
enter
jo
movl
xlat
data16
loope
lock
jl
jb
dec
or
inc
mov
and
lcall
lahf
mov
outsl
dec
xchg
jns
or
insl
adc
test
inc
adc
ret
sbb
adc
cltd
les
adc
xor
or
add
outsl
es
pop
push
inc
add
jle
sbb
jl
mov
push
pop
fsts
adc
add
test
lcall
int3
push
sub
add
pop
cltd
cld
cmp
mov
pop
jmp
jae
inc
outsb
lock
call
push
dec
inc
pop
sub
flds
sub
ds
xor
rorb
aad
cmpsl
dec
bound
mov
mov
int3
sbbb
cmp
sbb
enter
xchg
out
or
enter
push
push
sub
mov
push
xor
adc
sarb
push
and
ja
adc
fdiv
fiaddl
sbb
sbb
in
cltd
sbb
jne,pn
mov
icebp
mov
movsb
push
shr
inc
push
xor
fistpll
jmp
ljmp
neg
cmp
lock
xor
cmp
and
sti
ja
jb
cmp
add
dec
les
rcrl
xor
add
movsb
cmpl
mov
or
push
jo
mov
icebp
xor
jp
jne
mov
push
adc
or
push
dec
jns
movsb
fsub
and
popa
enter
ficomps
xchg
or
adc
push
jbe
fdiv
into
xchg
sbb
push
or
lcall
pop
outsb
add
dec
cmpsb
lods
adc
and
xor
loope
inc
mov
jne
pop
rorb
mov
cmpsb
mov
mov
pop
jmp
lret
inc
or
test
pop
adc
orl
push
and
jl
adc
ds
lock
mov
and
adc
or
sbb
sahf
inc
cs
sarb
xchg
or
jg,pn
cmp
push
nop
ja
mov
sbb
pop
pop
inc
mov
into
xor
fdivp
xchg
push
leave
shll
adc
inc
push
jae
dec
xchg
xor
and
cmp
lods
and
es
cwtl
mov
add
inc
xor
mov
or
pop
cs
cmpsl
scas
iret
jmp
repz
daa
xchg
or
or
mov
cli
pushf
cmp
fs
add
add
pusha
adc
loopne
mov
sbb
ds
push
push
out
stos
and
sarl
int
in
push
adc
xchg
dec
fdivs
aam
dec
push
mov
and
ds
push
push
dec
rcll
or
leave
clc
sub
push
pop
dec
or
cwtl
data16
push
jne
push
aas
out
addb
lds
dec
das
jecxz
ror
dec
mov
sbb
cmpb
push
push
sub
inc
scas
xchg
push
sahf
fsubrp
insl
push
inc
sub
jecxz
scas
fadds
mov
or
pop
jne
or
xor
pcmpeqw
lea
lret
imul
add
and
or
lock
inc
hlt
push
icebp
mov
jecxz
lea
cmp
pushf
inc
and
es
clc
mov
jmp
mov
push
mov
jo
icebp
sub
mov
add
or
in
imul
dec
or
shll
mov
movsb
pushl
jo
lods
and
stos
adc
and
jg
fidivs
add
and
or
inc
shlb
inc
pop
clc
push
pop
or
adc
mov
cmpl
pushl
pusha
and
das
outsb
jo
lock
and
pcmpeqb
adc
pop
adc
and
adc
jmp
mov
push
mov
xor
imul
jno
nop
jge
testb
loopne
cmpl
jne
pop
das
mov
rcll
in
xchg
dec
add
inc
jmp
or
add
cmpsb
jge
dec
pusha
mov
mov
jne,pn
sbb
inc
mov
sub
cwtl
push
outsb
mov
sbb
or
inc
or
mov
inc
adc
test
icebp
mov
lock
or
loopne
jmp
cwtl
mov
mov
rolb
mov
add
sub
js
push
adc
clc
xor
clc
mov
or
jmp
mov
adc
aas
and
outsb
adc
push
cmpsl
dec
pop
sub
mov
scas
sar
xchg
add
pop
inc
cmp
jb
inc
and
add
aas
shrl
mov
icebp
scas
dec
and
cmp
roll
jg
adc
dec
sbb
xchg
ret
in
mov
mov
pop
dec
bound
inc
bound
jno
mov
push
fs
sbb
cmp
jb
mov
fisubrl
or
fnstcw
inc
mov
cmp
jb
movsl
test
xchg
int3
lahf
push
inc
xlat
xchg
loopne
or
aaa
cmp
push
or
and
mov
int3
xchg
sti
mov
xchg
inc
and
cld
lock
daa
push
xor
xorb
mov
jne
adc
call
sub
cmp
adcl
add
lahf
je
or
pusha
mov
stos
rclb
fs
bound
out
add
sbb
sbb
add
or
rol
cld
pop
jmp
or
jne
cmpl
subb
cmp
push
cmp
out
or
cmp
xchg
or
sbb
or
std
imul
push
dec
cwtl
rorb
mov
lods
inc
std
cli
push
cmp
je
jle
mov
or
out
add
lods
adc
cld
inc
add
adc
scas
cmp
push
sbb
pusha
or
push
out
fdivs
pop
loop
adc
popa
dec
pusha
jb
add
mov
and
mov
andl
or
fiadds
jl
xor
cmp
sbb
fs
jle
sbb
lret
pop
subl
sbbl
test
lea
ds
xchg
in
xchg
inc
mov
cmp
jp
push
test
add
sub
pop
adc
push
mov
push
sbb
add
test
add
loope
cwtl
mov
enter
clc
xchg
cmp
aad
and
and
push
mov
stc
aam
inc
jmp
jae
jmp
push
add
pop
ret
xor
pop
dec
in
mov
vmread
test
sbb
mov
xor
cmp
jbe
out
sarb
scas
jge
push
inc
push
loopne
imul
fstps
sbb
lret
adcl
popa
and
lcall
and
pop
addr16
mov
push
dec
aas
push
push
mov
ss
and
repz
add
test
and
ret
inc
mov
pop
push
loopne
addr16
loope
adc
push
in
push
mov
lea
mov
add
sbb
lock
faddl
mov
adc
repnz
inc
adc
and
inc
and
cmp
pop
inc
mov
xchg
inc
mov
mov
mov
inc
popf
adc
lea
dec
and
rol
popf
mov
fcoml
call
add
fcom
or
or
add
inc
lcall
push
jmp
push
inc
loopne
scas
xor
dec
jmp
xor
int3
loope
and
inc
inc
adc
add
aam
mov
test
inc
inc
inc
pop
je
pop
and
int
or
ss
dec
cmp
or
mov
push
push
jmp
add
and
mov
mov
js
dec
push
inc
or
je
lock
push
mov
rol
pop
leave
xchg
mov
sub
ror
inc
add
sti
shr
xor
inc
pop
ret
pop
add
popa
adc
xchg
adc
loop
repz
scas
dec
xchg
jbe
push
sbb
xor
fsubs
inc
pop
fdivr
mov
in
rcll
dec
mov
add
or
cld
cwtl
push
push
insb
arpl
push
push
xchg
rcrl
dec
or
jae
mov
add
inc
shl
scas
push
pinsrw
bound
push
cmpsl
sarb
mov
add
push
push
orl
adc
inc
sub
pop
jne
push
xchg
lods
dec
or
add
je
add
ljmp
lock
jecxz
cltd
loopne
subb
push
sar
inc
push
adc
mov
into
mov
cmp
sbb
sub
push
mov
push
dec
inc
jo
pop
cmpsb
jecxz
stc
fmuls
out
cmp
pop
out
push
lret
dec
cmpsb
aas
pop
mov
pop
push
jmp
cli
mov
pop
lea
cmpsl
call
aas
ret
pusha
add
movw
lods
outsb
fimuls
adc
movb
xor
add
fistpl
inc
lea
add
push
or
out
push
outsb
lret
xchg
lretw
sbb
push
jl
testl
fidivrs
frstor
sarl
inc
aas
je
mov
add
arpl
sbb
shll
daa
andl
pusha
pop
orb
add
pminub
and
and
das
rorb
and
into
rcr
pop
sub
shll
mov
jl
pop
xor
aam
adc
jmp
int3
sub
sub
push
stos
mov
pop
ret
push
or
lea
lock
cmpl
clc
add
xor
jmp
insl
jle
add
inc
pop
and
push
ja
stos
or
mov
add
lcall
or
jl
sbb
test
scas
je
or
orb
jmp
mov
incb
or
inc
push
jmp
cmc
push
fnstsw
roll
mov
ds
aaa
xor
add
jne
add
inc
add
or
test
push
mov
movl
push
inc
cmp
jl
jle
jmp
dec
inc
sbb
add
hlt
xchg
cmpsb
push
and
inc
mov
sbb
test
mov
shlb
push
dec
push
xchg
and
cmp
je
mov
xor
push
aam
leave
and
mov
mov
sbb
addb
dec
mov
adc
repz
or
ss
es
mov
add
push
lret
sbb
sbb
jl
sub
jge
outsb
lret
jmp
enter
lea
inc
pushf
and
jge
or
xor
or
imul
adc
add
inc
cmp
test
pop
cmc
out
adc
sub
fsubrs
loope
or
jle
jl
pop
xchg
adc
add
xor
or
lods
lock
test
dec
inc
inc
insb
push
je
xor
fsubrs
add
shlb
mov
jmp
pushf
mov
push
push
push
dec
or
and
push
add
adc
mov
xchg
dec
dec
daa
mov
mov
setb
add
stos
inc
xor
dec
and
loop
sbb
or
push
addl
call
pop
stos
sub
jne
mov
js
sbb
icebp
aad
add
add
xor
call
add
stos
mov
repnz
add
lea
pop
nop
sbb
push
shll
js
inc
push
and
or
push
fwait
imul
mov
stos
pop
lret
pop
dec
dec
lods
pop
lods
xchg
jne
addb
adc
test
jb
sub
add
mov
shrl
aas
lock
cs
stos
jecxz
out
jp
and
jb
mov
xchg
adcl
and
sub
jmp
jo
inc
mov
pop
insb
inc
jno
add
mov
dec
push
aam
push
add
push
fisubs
data16
sar
repz
test
jge
push
inc
sub
push
push
xchg
mov
mov
enter
and
push
mov
lods
mov
imul
push
je
push
shll
jle
call
inc
add
or
lret
repz
jge
lret
sti
loopne
pop
xchg
or
adc
inc
cwtl
iret
movsb
ljmp
lret
dec
sbb
or
add
jp
sub
sbb
mov
push
or
jb
jb
adc
ss
and
and
sub
leave
leave
leave
xor
cmp
rol
cmp
inc
and
xchg
xchg
xchg
fildl
dec
push
in
adcb
in
in
fs
in
je
jl
rcrb
test
mov
dec
cwtl
pushf
mov
movsb
test
xchg
dec
es
rol
xchg
dec
addl
fs
imul
call
cltd
aam
hlt
cmp
jb
inc
push
shrl
or
es
ss
or
adc
xchg
dec
sbb
and
xchg
dec
sub
xchg
dec
es
xor
cmp
dec
cmpsb
pusha
inc
gs
dec
and
dec
cmp
push
xchg
dec
xor
pop
pop
pusha
sbb
das
pop
outsl
add
dec
fwait
add
and
adc
dec
or
xor
xchg
out
cmpsb
xorl
icebp
lds
or
nop
inc
ficoml
and
adc
imul
sbb
inc
lcall
cltd
nop
sub
inc
cmp
inc
sbb
inc
inc
dec
imul
dec
push
rolb
dec
push
loopne
xor
inc
ret
adc
nop
push
add
nop
lret
add
shll
xchg
mov
aam
outsl
pop
nop
xchg
add
push
mov
repz
inc
std
sub
push
je
call
pop
pop
add
insb
enter
sbb
jmp
add
mov
inc
fwait
add
adc
ljmp
sbb
sbb
iret
mov
loope
aaa
jbe
mov
insb
adc
lock
fmull
and
inc
jo
jmp
inc
lret
add
sub
outsb
cmp
sbb
inc
inc
and
insb
rcll
rorl
js
in
xor
sbb
sub
mov
lea
leave
lock
mov
or
xor
je
push
xlat
lret
jg
cmpsl
pop
idivb
es
jno
xor
out
pop
bound
mov
cs
loopne
sbb
jmp
gs
or
add
add
punpckhwd
xor
in
in
jl
rolb
test
xchg
jecxz
fimull
lods
bound
mov
xchg
repz
lea
cmc
sti
std
jg
push
mov
add
sar
mov
aas
or
aam
clc
stc
add
or
aaa
mov
cmp
sbb
xchg
inc
inc
cmp
cmp
push
shlb
push
jecxz
push
push
mov
fwait
push
add
dec
pop
ret
insl
bound
and
xchg
aam
dec
xor
ljmp
inc
pushl
icebp
js
or
popf
repnz
pusha
fisubl
cmp
push
popf
and
cmpsb
add
jb
dec
jbe
push
jo
inc
mov
aas
push
mov
and
mov
iret
fsubl
push
add
subl
push
hlt
mov
stos
sbb
push
pop
das
or
jmp
add
add
or
out
mov
jo
lret
add
mov
xchg
cmp
movsl
jge
inc
or
cwtl
lods
xor
pop
aaa
pop
pop
mov
adc
sbb
iret
cmp
lret
dec
inc
outsb
imulb
jmp
inc
adc
hlt
push
xchg
lea
sub
add
sub
pusha
cmp
orl
test
add
add
or
mov
pop
add
ficompl
mov
mov
jl
xchg
insb
or
add
testl
push
or
js
daa
pop
add
mov
sbb
scas
cmp
xor
jne
movzwl
cmpsl
test
sarl
sbb
mov
push
js
cmpsl
notl
daa
pop
nop
pop
cmp
add
iret
test
pop
dec
push
pusha
bound
pop
sbb
xchg
rcrb
hlt
ja
fisttps
cmp
fxch
fidivrs
imul
xor
mov
cmpsl
rorb
xor
cmp
cmpb
ds
dec
shll
arpl
xchg
imulb
adc
cmp
fidivl
jae
mov
cmp
jne
xorb
shufps
mov
mov
adc
aad
js
push
addr16
xchg
and
lahf
fwait
mov
add
in
ss
cld
mov
daa
ret
sub
dec
push
mov
ljmp
and
int
add
pop
jbe
adc
in
pop
jns
push
adc
fiadds
into
jg
sbb
mov
or
fsub
pop
ljmpw
lods
gs
test
sub
and
nop
push
mov
imul
popa
add
daa
pop
xlat
pusha
aad
movsl
jne
lea
mov
stc
cmp
pop
fnstenv
mov
adc
push
test
loopne
lods
shlb
push
and
jmp
lods
sub
add
sub
cli
stos
mov
xor
cmp
movsl
adcl
stos
mov
sbb
xchg
xor
mov
push
jo
lret
jmp
inc
or
pop
mov
rcll
das
movl
mov
push
jae
adc
movsb
lods
cmp
push
bound
ja
lcall
mov
adc
sub
jne
sub
push
adc
sub
adcl
inc
cmpb
xchg
cltd
rolb
xchg
and
sbb
cmp
inc
or
jmp
flds
int3
adc
mov
test
imul
popa
and
rorb
clc
mov
mov
mov
push
cmpsb
ret
mov
jl
ret
in
pop
test
inc
nop
and
or
stos
ret
incl
jno
pop
sub
std
inc
cmp
inc
jbe
orl
call
xor
ds
dec
push
and
inc
andl
fldl
aaa
sbb
out
or
dec
and
adc
ficomps
js
sub
cmp
cmp
add
add
pusha
ret
mov
adc
push
mov
mov
sbb
or
out
push
push
test
xor
push
mov
mov
push
and
mov
mov
sbb
out
into
and
scas
jmp
mov
cld
add
or
icebp
repz
sub
pop
inc
js
mov
mov
adc
stc
adc
sbb
or
mov
out
sbb
mov
jl
js
pusha
jl
sub
setg
ret
mov
xor
lods
psrld
xor
arpl
sarl
dec
or
adc
divb
mov
sub
mov
mov
or
movsl
shrb
leave
shlb
test
adc
push
add
pop
pop
or
inc
sbb
arpl
inc
pop
cmp
add
pop
rclb
add
movsl
stos
sub
adc
pop
ja
jno
in
cmp
pusha
inc
adc
rolb
or
push
inc
xchg
add
push
cmp
cs
and
push
adc
pop
pop
jl
xchg
sbb
mov
and
cmp
test
rcrb
add
stos
xorb
add
out
lods
imul
xor
lock
push
inc
lock
mov
push
cltd
xor
cmpsb
add
push
jmp
imulb
mov
mov
enter
mov
shlb
nop
inc
add
js
cmc
lds
addl
jmp
inc
enter
popa
add
add
cld
add
mov
add
int3
push
push
cmp
mov
sbb
adc
mov
pusha
ljmp
pop
adc
dec
adc
dec
add
testl
clc
jae
sarl
mov
rol
add
jb
and
mov
push
test
lods
sbb
pop
xor
cmp
and
pop
add
sbbb
cwtl
inc
pushf
fdivrs
add
fbstp
or
ret
sbb
lock
sbb
jge
std
mov
add
sbb
and
mov
out
cltd
ret
xor
mov
cs
inc
pop
sbb
ss
jbe
adc
jge
sbb
mov
push
ret
aad
mov
jne
xor
cmp
dec
ret
cmp
mov
jb
gs
sar
cld
fsubrl
push
mov
push
test
mov
test
pop
inc
cmp
outsl
je
inc
fdivrl
clc
adc
outsl
mov
jb
cmp
lods
push
mov
aam
out
lock
xchg
orl
pusha
xor
out
push
mov
and
shlb
adc
cld
xor
jo
out
rcrb
fcompl
outsl
jp
cmp
pop
inc
or
arpl
sbb
inc
cmp
in
test
or
mov
loopne
popa
cld
fisttpll
sub
add
hlt
bound
mov
stos
out
shll
and
mov
rolb
sahf
pop
pushf
ret
mov
adc
stos
add
lock
rolb
add
push
push
jne
bound
sbb
sub
push
aaa
aam
aam
sti
jge
es
out
sub
sbb
daa
jmp
sub
mov
sub
cs
xor
push
fldl
dec
jne
mov
shl
sahf
xchg
sbbl
mov
loop
enter
sbb
sbb
dec
pop
jg
sub
xchg
adc
pop
adc
cltd
aam
test
js
add
jo
addr16
call
or
mov
loop
lahf
push
push
adc
or
push
push
mov
xchg
or
and
pop
sub
addb
xor
pushf
or
je
xchg
cli
adc
mov
pop
scas
lea
lea
or
push
push
stos
jle
orl
les
mov
mov
popl
add
testl
into
mov
outsb
je
fidivs
rol
in
sbb
adc
cmp
mov
int3
inc
nop
rorb
mov
ds
dec
and
pushl
add
jno
push
sbb
loop
ljmp
mov
lods
rcrl
ljmp
loopne
cmp
andb
in
ds
sub
and
push
xor
cmp
enter
movsl
rclb
adcl
jmp
jae
pop
cmp
push
mov
xor
popf
std
cmp
push
push
or
mov
inc
enter
cmp
mov
movsl
mov
jo
pop
jbe
push
sbb
pop
ret
shlb
mov
mov
icebp
push
push
js
inc
push
out
outsb
dec
or
or
shrl
mov
inc
adc
pop
lods
inc
or
push
xchg
ret
mov
add
test
and
sbb
dec
xchg
add
or
or
add
and
xor
mov
fnsave
adc
or
fcompl
in
shr
add
jmp
jo
xchg
add
in
out
pusha
dec
sub
in
push
and
fisubs
les
xor
test
adc
dec
loopne
cwtl
xlat
hlt
mov
sbb
dec
je
or
or
sub
inc
jmp
jbe
jbe
fcomi
incb
adc
lock
and
mov
add
jl
and
jecxz
imul
add
or
push
xchg
cmc
adc
and
addl
jge
aaa
jge
arpl
and
push
sbb
out
mov
pop
adc
pusha
mov
pusha
loope
pop
sub
movsl
mov
adc
inc
jecxz
pop
inc
ficoml
pusha
mov
fldl
cmp
test
cld
pusha
and
inc
or
xor
adc
pop
jns
dec
sti
add
add
test
sub
and
test
repz
das
xchg
mov
dec
jne
orl
inc
jmp
push
and
stos
pop
movsl
pop
shlb
add
out
and
pop
shll
ficomps
into
add
pop
sbb
jmp
push
and
or
fisttpll
adc
jmp
aam
flds
fstps
jmp
fisttpll
sbb
pop
push
pop
add
adc
inc
add
adc
je
mov
insl
arpl
xor
testl
mov
adc
xor
add
xchg
sti
test
cmp
nop
loope
xchg
insl
int
push
pop
dec
sbbl
push
xchg
jmp
fnstsw
fldl
lods
sbb
xor
sub
sub
jmp
sub
inc
dec
push
jp
push
or
psubusw
xchg
out
add
adc
sub
and
push
scas
add
sbb
mov
add
ret
mov
xchg
push
fstpl
loop
xor
aam
or
fidivrs
ficomps
or
test
inc
lods
scas
inc
push
inc
inc
roll
adc
push
add
test
sarb
sbb
add
mov
test
jle
ret
mov
ffreep
xchg
xchg
pushf
pop
orl
push
shlb
push
pop
jmp
pop
jne
cmpsb
loopne
sti
lock
lcall
cmpsb
mov
add
sbb
loopne
xchg
inc
dec
dec
push
xchg
lcall
push
push
add
inc
idivb
sbb
cmpsb
push
add
add
add
aas
bnd
dec
leave
or
mov
adc
rorb
out
lds
push
adc
pop
push
je
int3
sbb
mov
daa
and
adc
enter
pop
xor
or
and
pop
push
incl
push
mov
or
xchg
jno
pop
nop
std
ljmp
lds
in
sbb
lods
fwait
jno
dec
rclb
xlat
inc
and
cld
add
jmp
add
or
inc
sub
pusha
inc
cmp
inc
mov
push
and
sub
xchg
ljmp
in
push
imul
aas
and
inc
cmp
and
aam
push
jmp
pop
cmpsl
mov
push
das
adc
js
push
inc
push
andb
mov
cmp
ljmp
mov
mov
rcrl
mov
jnp
aas
js
outsl
add
add
andl
xor
xchg
in
mov
in
and
or
sbb
push
or
xor
inc
pop
repnz
or
stos
push
and
mov
enter
icebp
lock
or
sbb
rcll
cltd
and
decb
mov
clc
jg
lock
pop
xchg
cmpb
mov
out
add
ret
rcrb
addr16
push
add
enter
fbld
dec
out
fld
fucomp
pop
fldcw
mov
out
mov
xchg
outsl
testl
jne
orl
pushf
push
and
mov
mov
shll
push
or
daa
or
add
or
ret
dec
lcall
and
pop
cmp
or
cli
push
mov
loope
and
nop
xchg
es
push
push
fisubrl
sub
push
push
xor
xlat
xchg
rolb
aaa
enter
fists
fnstsw
movswl
lret
sbb
loop
js
add
sub
xor
not
dec
xor
cmpl
mov
test
inc
pop
or
sub
sbbb
fwait
test
fsubs
mov
ficompl
fwait
sbb
sbb
jo
pop
mov
fdivp
jle
leave
fnsave
movsb
fldpi
xor
push
rolb
and
lret
dec
sbb
fisubl
sbb
add
cld
mov
faddl
lret
and
sbb
mov
pop
stos
jmp
je
mov
and
xchg
imul
sub
mov
sbb
nop
aam
jo
in
jg
push
add
arpl
les
mov
lock
push
andl
pop
aad
stos
adc
xlat
ja
out
adc
es
and
adc
xor
adc
inc
mov
lea
mov
inc
and
adc
push
cmpsb
rorb
lret
adc
inc
rorb
outsb
nop
pop
cmpl
push
adc
mov
test
fcoml
imul
xor
adc
pop
adc
mov
iret
push
testb
arpl
cmp
jl
fidivs
push
lea
inc
pop
mov
inc
testb
imul
das
push
test
sbb
scas
loop
cmp
jnp
cmp
xchg
jno
add
xchg
rcll
push
div
jmp
lahf
rolb
outsl
and
or
xchg
xchg
mov
and
lea
mov
mov
loope
rcll
xchg
arpl
mov
or
lock
pop
and
adc
nop
push
inc
jge
push
nop
mov
and
dec
int3
mov
fnstcw
fistpl
sbb
or
add
mulb
cmc
add
jmp
aas
adc
adc
cmp
pop
inc
inc
daa
cmp
mov
add
aas
adc
imul
stos
push
stos
cmp
ljmp
xchg
insl
sub
movsl
add
dec
dec
xchg
in
add
js
adc
fdivr
aas
mov
add
inc
lea
pop
test
mov
inc
shl
bound
lods
fiadds
ret
fdivrp
call
loop
rolb
cmpl
and
pop
pop
repz
mov
pop
and
insb
lock
mov
out
mov
inc
adc
iret
cmc
mov
inc
je
lea
cmp
cli
or
cmp
jb
cmp
mov
dec
sub
adc
or
ds
jb
jae
and
sbb
mov
addb
add
jns
bound
cmp
dec
add
push
pop
and
fadds
pop
aaa
xorl
lea
sub
int
js
stos
jo
je
inc
mov
or
cmp
or
inc
stos
inc
cmc
push
cmp
jg
inc
sub
dec
in
xor
cmp
rorl
xchg
jecxz
rcrl
sub
sub
imull
loopne
pop
popf
jb
adc
dec
and
loop
out
push
js
js
or
mov
outsb
js
and
mov
jmp
pop
sub
cs
loope
dec
inc
mov
or
dec
jns
add
dec
cs
push
rclb
inc
lods
pop
sbb
adc
sub
mov
dec
xor
dec
xor
or
inc
rcrl
dec
xor
add
mov
push
push
pop
jno
rorl
pop
push
push
jb
pop
cmp
cmp
push
incb
xchg
mov
or
mov
dec
jns
cmp
and
ret
push
add
mov
mov
into
fbstp
sub
frstor
movsb
dec
fists
jl
imul
sbb
inc
xor
xorl
je
shll
popa
cmp
mov
cld
cmp
daa
andl
add
mov
push
iret
and
movsb
cmc
es
and
sub
and
push
xchg
jge
inc
add
mov
shl
test
lock
andb
out
or
les
lock
mov
pop
lock
or
mov
stos
add
jmp
and
jne
mov
addb
outsb
cmp
sti
mov
xchg
pop
sarb
pop
inc
cs
rol
push
jne
sti
mov
or
and
nop
lret
mov
cmpsb
or
mov
cmp
dec
pop
jp
pop
xor
adc
cs
nop
imul
mov
add
mov
mov
dec
and
rolb
or
add
and
lods
mov
mov
outsb
or
inc
or
jmp
mov
subl
ja
mov
lea
cmp
ja
fs
mov
mov
leave
test
mov
add
mov
jmp
cmp
daa
addb
pop
or
mov
lahf
std
sbb
movsb
andl
jmp
adc
push
jo
jb
test
stos
popf
mov
scas
fsubrs
dec
xor
push
mov
mov
cwtl
dec
push
add
or
cmp
xor
dec
sbb
mov
or
test
jbe
out
mov
xchg
cli
jle
in
lods
xchg
js
jmp
call
sbb
add
sub
mov
pop
and
adc
sbb
mov
mov
in
fdivp
mov
nop
add
jne
lret
sti
lods
add
dec
jae
imul
sbb
nop
or
sub
pushf
adc
call
mov
rclb
bound
pop
push
sub
push
mov
iret
mov
pop
xchg
and
stos
mov
xor
dec
mov
mov
lods
sub
imull
mov
inc
stos
loopne
je
mov
mov
in
mov
shll
test
nop
mov
xor
clc
jg
cmp
adc
add
inc
testl
push
add
lret
jmp
add
dec
or
iret
mov
mov
filds
fisubrs
mov
rolb
shrl
cmc
jecxz
mov
mov
push
jg
dec
fs
sub
mov
dec
mov
aam
pop
or
xchg
add
inc
pop
cld
pushf
xor
mov
push
cwtl
jge
testl
adc
sub
push
xlat
test
cmp
mov
clc
sub
pusha
jnp
sub
mov
outsb
ja
mov
xor
jne
dec
inc
imul
loop
lods
inc
lds
inc
and
test
sarl
adc
es
mov
rcl
sbbl
pop
lcall
cmp
jb
xchg
jge
add
pop
loopne
cmpb
rcrb
fsubl
mov
cwtl
or
mov
jl
shll
roll
or
jne
in
decb
leave
cmp
jae
pop
in
sar
mov
push
or
mov
inc
ja
ja
mov
and
aas
icebp
aaa
es
jne
inc
testl
jne
lods
jnp
or
test
pop
rclb
pop
cmp
lods
adc
push
hlt
int3
add
pop
add
nop
fwait
add
add
add
fisttps
or
les
push
test
mov
ret
and
add
sub
nop
rorb
xor
xchg
hlt
lahf
into
mov
ja
je
data16
pop
ret
aaa
js
subl
dec
pushf
sub
sub
mov
push
sbb
sti
jg
add
add
test
lods
fwait
sub
jne
vmovntps
shll
add
lock
add
push
push
mov
ret
lods
sti
sbb
pop
mov
dec
sub
pop
xchg
mov
fsubrs
add
imul
je
pop
inc
cmp
fcom
insl
fdivl
pop
sti
inc
loopne
shr
or
mov
sahf
dec
jo
inc
ret
or
outsb
mov
or
sbb
adc
mov
sbbb
cmp
sbb
ss
cmpsb
insl
xchg
push
xor
add
ficompl
add
jb
mov
aad
jg
fiadds
push
out
jmp
clc
add
mov
mov
inc
or
nop
mov
orl
dec
mov
lret
push
dec
add
cmp
jp
jp
or
daa
mov
sahf
lret
lret
into
jmp
lods
lcall
ljmp
jno
les
pop
or
add
lods
push
pop
pop
cwtl
dec
xorb
lret
stos
add
jmp
sub
test
sbb
add
pushw
push
movups
les
outsl
pop
sbbb
inc
mov
inc
xorb
xor
xchg
add
and
add
push
cmp
insb
mov
std
push
push
lods
repz
inc
mov
add
rcll
push
addr16
mov
mov
or
lds
lret
mov
test
jne
cmp
fiadds
mov
add
jb
outsb
inc
mov
or
pop
push
imul
rorl
inc
jmp
mov
repz
in
pop
test
or
lock
mov
xchg
xchg
adc
inc
pop
loopne
addr16
or
ss
cmp
sar
fidivl
inc
xor
mov
dec
cmpb
je
mov
aas
push
mov
cmp
pop
jne
dec
mov
inc
inc
mov
ret
dec
popf
add
add
fcompl
pop
jp
or
jecxz
push
subb
repnz
ds
mov
push
imul
jmp
xor
or
pop
jo
aaa
xor
inc
mov
mov
pushf
or
hlt
mov
notl
jbe
out
adc
gs
sbb
cmp
xchg
xor
sbb
fadds
jbe
jne
xchg
push
push
rolb
data16
add
add
dec
cld
add
ret
push
pop
sbb
clc
jmp
setg
cmp
sahf
clc
add
lcall
ja
cmpl
mov
jne
movb
lea
mov
icebp
adc
push
mov
xchg
jecxz
add
inc
cmp
add
push
sub
add
mov
add
or
enter
dec
cmpsl
mov
test
dec
outsl
jp
inc
xlat
pop
or
add
jns
mov
scas
xorb
add
fs
or
mov
mov
mov
ljmp
dec
outsl
or
add
fisubrl
punpckhdq
mov
xor
push
push
andl
pop
add
sbb
xchg
das
adc
add
xor
mov
iret
push
jmp
sbb
filds
add
popl
insl
adc
aad
mov
ds
xchg
jge
xchg
sub
adc
mov
xchg
shl
sub
shlb
enter
xchg
sbb
stos
xchg
sbb
mov
lret
aam
aad
loopne
rol
jmp
imul
add
push
loop
inc
mov
loop
pop
pop
imul
push
test
arpl
jge
adc
je
xchg
shll
mov
in
xchg
or
adc
aam
fcom
or
mov
enter
loopne
mov
pop
push
jmp
and
les
xchg
call
js
adc
fmuls
push
insl
lea
packssdw
or
push
shll
enter
rol
bound
or
cmp
incb
xor
add
mov
adc
jo
mov
mov
fdiv
mov
loope
add
insb
movb
popa
mov
xor
enter
bndstx
fistpl
fstpt
bound
jg
mov
pop
nop
ret
daa
xor
or
jne
bound
xor
ss
dec
ljmp
mov
loop
test
sbb
jl
ret
out
inc
xor
jle
xchg
dec
xor
lds
cmpsl
or
mov
mov
or
jmp
hlt
nop
rcll
xor
add
dec
test
add
and
lock
sbb
rcrb
data16
or
sbb
lock
cmc
clc
cmp
ret
mov
add
mov
invd
add
add
outsl
jno
xchg
bound
inc
jge
sbb
scas
sbb
clc
cwtl
xor
jo
or
and
xor
jbe
mov
sub
leave
adc
cmp
scas
adc
inc
mov
sbb
xor
ljmp
pop
pop
sbb
sbb
bound
jo
shl
inc
jmp
imul
mov
pop
sbb
js
jg
jb
ja
mul
xor
scas
jmp
adc
push
add
loop
mov
cmp
sarl
je
jle
call
jb
push
push
push
push
mov
ljmp
sarl
sbb
add
not
sub
dec
pop
cmpsb
inc
repnz
or
or
je
pushf
xor
or
cmp
shll
jnp
inc
jo
in
in
ja
cmp
mov
fldl
or
test
or
jnp
push
cmp
xor
test
movsb
test
pop
sub
mov
movl
sub
fidivl
lcall
push
add
sbb
ss
push
stos
shlb
inc
add
mov
xor
mov
pop
and
pop
mov
js
ret
aaa
push
lods
mov
movsl
adc
sbb
push
insb
add
push
and
outsl
stos
cmp
je
aad
adc
jbe
xor
lods
xor
add
shll
push
sbb
out
sbb
cmp
push
xor
add
iret
orl
pop
push
divb
loopne
enter
nop
or
sub
js
and
lret
das
sub
adc
enter
or
xlat
push
sub
stos
sbb
sahf
pushf
xor
cmpsb
or
adc
sub
dec
cmp
out
mov
inc
adc
pop
push
add
test
xor
ds
fnstenv
clc
gs
or
pop
data16
mov
lods
ss
add
or
inc
popa
je
inc
je
sti
lds
dec
or
jmp
xor
jmp
pop
loop
ret
sbb
or
lock
push
sahf
or
pushf
push
xchg
add
sub
pop
or
inc
lret
jl
cmp
xchg
mov
pop
add
iret
xchg
jg
add
sub
je
testb
push
push
jmp
push
shrb
or
les
mov
pop
orl
jmp
sbb
ss
cmp
sbb
cmp
mov
loopne
shll
mov
test
push
inc
lret
jb
jae
or
imul
mov
pop
jne
in
adc
sbb
insb
cs
cmp
je
mov
xchg
push
mov
mov
int3
and
sbb
jge
add
in
dec
add
jl
ss
mov
mov
mov
sbb
loope
add
lods
test
stos
add
jbe
xchg
add
fstp
in
iret
lea
rorl
cmp
aam
push
cmp
les
je
mov
jl
mov
push
insl
mov
add
adc
sub
add
movb
repz
sbb
pushl
inc
lea
inc
jmp
pop
add
and
cmp
rcll
adc
rolb
xchg
mov
sbb
add
mov
stos
scas
inc
pop
and
jns
push
and
or
jmp
cmp
and
lret
shlb
mov
cmp
lods
fs
cmp
inc
adc
pop
jmp
adc
outsb
mov
sbbb
inc
in
and
shl
loope
cmp
bound
enter
or
push
fcompl
jge
cli
lcall
lea
les
adc
cmp
add
rolb
fmul
push
and
xchg
adc
adc
das
ss
adc
adc
push
jno
add
jp
push
adc
or
xor
loopne
dec
movsl
es
sub
or
cli
adc
fstl
jno
lcall
inc
sub
or
cmp
adc
pop
rolb
sbb
mov
adc
loope
ret
ss
jmp
inc
repnz
lea
outsl
ret
bound
jo
or
xchg
inc
addl
or
and
mov
adc
insb
addr16
mov
adc
addr16
rolb
rorb
sub
femms
sbb
sbb
cmpsb
ja
sti
and
sbb
or
cs
ljmp
sarb
lret
push
add
pop
insb
gs
jg
mov
cld
fcomip
fs
mov
push
push
and
jo
loope
mov
jge
push
add
xor
mov
sbb
addr16
cltd
lret
clc
add
mov
or
into
cmp
sub
gs
outsb
or
cmp
or
mov
dec
or
xchg
jecxz,pn
mov
pop
inc
mov
rol
adc
mov
mov
shrl
jecxz
sti
adc
mov
cmpl
sub
or
push
cmp
dec
push
mov
xchg
lods
fisttpll
imul
pop
pop
pop
pop
pop
rolb
xor
jno
movsb
push
xchg
push
orl
movsl
test
rcl
dec
test
addb
mov
pop
imul
cwtl
cmp
mov
mov
mov
je
xchg
lods
adc
rolb
or
jp
pop
push
adc
cmpsl
or
jo
inc
xor
das
add
je
push
mov
mov
cmp
jbe
aas
les
adc
jno
mov
repz
sahf
mov
daa
push
or
adc
push
push
orl
or
and
stos
pop
lret
sbb
xor
test
cmp
sbb
gs
jmp
rolb
pushl
dec
push
push
mov
sub
pop
push
rclb
dec
fimull
or
adc
cmpsb
je
push
loopne
xchg
mov
in
leave
jne
std
repz
and
stc
push
dec
pop
and
int3
iret
xchg
or
or
inc
movsl
adc
lcall
dec
scas
and
add
in
adc
xchg
pop
orb
push
sarl
add
add
mov
int3
rorb
cmp
mov
mov
inc
shr
add
or
and
pop
add
add
shr
or
mov
push
xor
std
push
clc
push
call
and
add
mov
cmpsl
movsl
push
in
mov
insb
add
sub
dec
mov
fildl
xor
cmp
jg
dec
mov
inc
jl
in
cltd
pop
adc
sbb
cmp
nop
fimuls
xchg
cmp
or
sti
and
dec
xor
out
dec
fidivrs
sub
add
clc
jge
adc
mov
test
mov
or
xlat
mov
pushf
lea
push
fldl
inc
out
xor
or
fstl
adc
dec
jp
cmpsb
and
aad
and
xchg
scas
mov
mov
int3
lock
sbb
adc
dec
or
cli
mov
insb
imul
jg
mov
test
dec
push
in
mov
inc
incl
cmpsb
or
xchg
or
inc
mov
shll
adc
push
lods
data16
and
bound
addl
add
add
fcomps
cmp
push
mov
push
add
adc
xor
jns
arpl
mov
sub
in
fidivrl
jmp
pusha
push
ljmp
xor
fisttpl
inc
pop
add
mov
and
push
mov
rcll
sbb
icebp
in
mov
pop
add
and
push
inc
and
sbb
popf
shrb
pop
rorb
outsb
xchg
mov
test
sarb
mull
imul
fwait
add
adc
ss
cmpb
cmp
je
incb
xor
incl
xor
xor
sub
or
or
inc
push
stos
jmp
mov
dec
or
mov
insl
fistl
je
mov
ds
mov
test
das
add
inc
cmp
je
cmp
mov
rclb
or
and
ret
inc
out
xor
outsl
loopne
cmp
adc
inc
dec
add
fnstcw
fcoml
rorb
push
aam
mov
adc
out
out
xor
jbe
sahf
mov
test
je
mov
test
loopne
add
or
inc
adc
jecxz
jl
xchg
mov
sub
sub
adc
mov
or
cld
inc
movsw
xor
add
stos
cmp
inc
pop
inc
loop
lods
add
mov
and
mov
pop
mov
or
xchg
add
inc
aad
xor
inc
leave
push
inc
add
sub
adc
pop
aad
sbb
adc
cmp
aam
sbb
add
mov
jmp
add
jb
jmp
jae
or
jae
adc
shr
ret
pop
and
shr
adc
and
or
add
cli
in
idiv
and
icebp
idivl
mov
je
mov
adc
xor
daa
mov
arpl
call
cs
adcl
mov
cmpb
rolb
mov
and
dec
push
pop
imul
outsb
sub
pushf
icebp
push
add
jmp
negb
in
inc
stos
xchg
push
clc
and
xor
dec
inc
addr16
adc
jmp
push
pop
subl
pusha
pop
or
inc
lock
cmp
fisubl
jno
or
stc
or
mov
arpl
imul
sar
sub
push
fldpi
aam
aas
push
in
cmc
sbb
adc
es
loop
sti
add
test
xchg
jmp
shrb
xchg
push
into
sub
xor
daa
hlt
lock
pop
shrb
ud2
mov
add
sbb
cmp
test
aad
mov
aam
or
adc
dec
adc
dec
mov
xor
or
test
and
test
dec
and
jecxz
ror
or
cmp
adc
cmp
sub
shll
leave
adc
mov
mov
roll
xchg
leave
or
movsb
sub
inc
mov
aas
mov
xor
push
jp
or
cmpsb
sub
add
lahf
mov
pop
cmp
jle
retw
push
lret
mov
dec
jbe
arpl
xchg
and
jl
loopne
jno
cmp
jb
add
jo
insl
orb
or
shll
dec
repz
push
sbb
mov
fs
or
mov
fimuls
fimuls
je
dec
sub
loope
fstpl
je
add
roll
std
out
cld
mov
cmp
jb
cmp
jbe
dec
jl
adc
push
xor
sbbl
xchg
push
pop
imul
add
lds
pop
xor
push
or
push
jp
aam
sbb
adc
push
jle
jno
ljmp
sbb
cmp
dec
popa
jg
sbb
dec
in
add
mov
adc
lea
xor
decl
arpl
jb
mov
push
push
mov
jge
and
xor
sbb
fsub
add
and
fmul
shlb
and
sbb
mov
pop
add
sbb
and
nop
push
repnz
push
shll
mov
sbb
outsl
add
add
ret
mov
push
jne
fnop
push
sahf
mov
movsb
xlat
mov
jnp
jno
mov
inc
imul
sub
out
rcrb
adc
addb
add
mov
pop
dec
sbb
insb
or
push
rorb
xchg
outsb
sbb
dec
ljmp
rolb
dec
or
mov
jne
mov
pop
aam
inc
imul
push
jp
cmpsb
divb
aaa
mov
sub
lahf
xor
mov
aaa
pop
in
mov
sbb
xchg
loope
add
in
shr
inc
ret
ret
push
cmp
push
push
sbb
aad
pop
and
loopne,pn
pop
add
pusha
dec
lahf
clc
mov
inc
jnp
hlt
xchg
or
or
cmp
fstpt
sbb
dec
in
push
or
push
clc
aam
loope
pop
mov
xchg
lahf
test
sbb
xor
xor
sbb
sub
pop
pop
cli
bound
inc
add
push
mov
lea
scas
enter
mov
mov
and
inc
and
dec
mov
push
mov
mov
loopne
cmpsb
loopne
jmp
dec
jo
inc
adc
and
mov
loop
cmp
in
subl
push
js
mov
pusha
or
adc
xor
scas
or
sbb
inc
insl
nop
addb
adc
or
iret
sub
stc
xor
adc
adcl
mov
sub
sbb
divb
pop
cld
fstpl
push
add
push
pcmpeqb
xchg
nop
or
ret
inc
hlt
sbb
decl
mov
les
pop
cmp
xchg
sbb
leave
je
sbb
mov
push
push
mov
test
shrb
insb
lcall
cmp
cmp
push
movb
jmp
or
shl
add
aam
pusha
imul
lods
adc
mov
les
pusha
movw
decb
xor
dec
add
push
scas
or
cmpsb
mov
popf
rcrb
out
es
mov
sub
inc
jg
pop
mov
fdivrl
jmp
mov
xor
xchg
mov
fdivr
inc
out
jne
add
andb
jne
clc
out
push
push
push
xor
jle
mov
sbb
cmp
ss
mov
mov
imul
call
add
imul
lea
inc
pop
push
mov
test
es
mov
push
adc
push
ljmp
inc
mov
jo
lret
jnp
mov
cwtl
movb
adc
push
sti
add
and
adc
sbb
cwtl
push
mov
push
or
adc
pop
mov
decl
jle
repnz
mov
notb
mov
sub
shll
in
mov
add
mov
and
and
popa
add
xor
testb
mov
decb
xchg
test
imul
pop
pop
dec
xchg
sub
inc
testl
cmp
ljmp
mov
cmp
push
ret
pop
mov
jne
push
add
rolb
adcb
pop
movsb
mov
push
lea
es
xor
and
dec
push
pop
lock
dec
push
enter
dec
insl
jns
jne
cmp
inc
shll
inc
ja
inc
mov
mov
mov
dec
mov
fdivrp
inc
lods
and
shlb
aaa
lea
adc
int3
cmp
bound
jo
jno
dec
shll
xchg
popf
loope
xor
jmp
cmp
sub
ds
rorb
pop
push
push
lret
pop
or
andl
cs
mov
jle
sbb
insl
test
pop
shr
or
mov
sti
jmp
xor
test
and
ja
dec
xchg
xchg
xchg
and
push
pop
scas
xor
testb
dec
cli
cli
inc
push
lret
repz
cli
div
adc
adc
mov
adc
dec
cwtl
nop
loopne
cltd
pop
pusha
inc
bound
adc
insb
xchg
lahf
test
pusha
jl
pop
fiaddl
dec
int3
sub
test
test
sub
xor
jbe
ljmp
mov
insb
cs
inc
daa
aam
mov
dec
sarb
mov
xchg
or
fmuls
add
push
bts
jge
pushw
mov
loop
out
mov
int
mov
test
movsl
xchg
adc
dec
inc
cmp
repnz
and
adc
es
jns
das
jp
or
sub
sbb
and
inc
outsl
cmp
sub
nop
and
mov
and
jge
stos
xor
sbb
shlb
dec
loopne
pusha
es
push
xor
lret
ret
mov
cwtl
lret
fcmovu
xor
mov
dec
nop
cmp
mov
mov
int3
jg
add
xchg
add
xchg
idiv
adc
popf
adc
call
into
or
adc
pop
push
sbb
jge
or
orb
jge
dec
pop
and
inc
lock
ret
xchg
movsb
or
cmp
adc
ljmp
in
enter
xchg
sbb
pushf
pusha
mov
pop
dec
sbb
push
je
cwtl
sbb
leave
cwtl
mov
mov
rol
negb
inc
add
inc
mov
ss
inc
cmp
jle
push
pop
outsb
call
sub
popf
sub
and
or
pop
dec
in
add
shl
int3
repnz
and
mov
rcrl
xchg
mov
and
das
adc
neg
and
inc
ja
mov
jmp
loopne
or
push
loopnew
fcomps
lea
push
and
mov
push
in
jne
fnstsw
test
scas
movsl
out
mov
adc
into
adc
add
shlb
or
and
aam
into
or
sbb
test
repz
pusha
inc
add
sbb
jp
inc
dec
enter
add
sahf
mov
rcrb
mov
and
dec
int3
mov
and
mov
adcb
into
or
mov
inc
or
or
or
sub
sub
jge
add
jmp
cmpb
or
add
dec
cmp
repnz
inc
dec
add
add
jp
and
xchg
rolb
mov
xor
dec
mov
jb
int
inc
subb
mov
in
or
jo
pusha
sub
dec
and
add
push
mov
pop
rcll
adc
jnp
jp
add
add
add
mov
and
ret
lcall
add
push
mov
mov
or
in
push
aaa
mov
push
loop
or
iret
or
jmp
imul
mov
jne
or
add
ds
push
add
je
push
push
in
mov
cmpl
xchg
sbb
or
pop
sbb
fidivl
test
outsl
pop
mov
mov
iret
xor
sub
lret
into
pusha
inc
and
jbe
and
pop
pop
push
xor
ret
sbb
dec
dec
prefetchw
fs
ret
or
xor
cld
fsubrs
in
or
inc
push
pop
jne
or
or
dec
push
imul
outsb
ret
push
or
cmpl
push
je
cmp
or
or
push
pop
jle
add
fisubs
jle
jne
and
cmp
mov
rcr
xor
jge
out
and
jmp
cmp
scas
and
mov
das
mov
inc
nop
clc
mov
or
movsb
dec
test
sbb
xchg
sbb
push
scas
and
sub
sbb
sub
pop
ret
insl
jmp
pop
loopne
or
pop
stmxcsr
cmovp
pop
repnz
test
ds
into
or
add
or
adc
xchg
mov
mov
mov
repnz
out
sbb
xor
inc
jg
into
aam
jb
into
into
mov
stos
mov
sarb
push
pop
sarl
nop
pop
sahf
pop
mov
nop
add
not
and
or
add
popf
sbb
jmp
adc
mov
push
fs
pop
pusha
inc
adc
lcall
test
out
adc
loope
jo
add
movsb
push
lock
sbb
cmp
ret
jo
jo
cltd
and
xor
scas
sbb
sub
addl
mov
mov
lret
es
lret
cwtl
inc
add
xchg
adc
cmp
pop
mov
push
jecxz
aad
cld
add
and
push
mov
mov
adc
addb
repnz
push
lret
loopne
into
clc
rcrb
dec
cmpsl
xchg
lret
add
inc
movsl
sbb
or
or
adc
imul
add
and
inc
xor
and
add
cmpb
jecxz
jo
add
movups
add
cmpsl
orl
shrl
data16
push
mov
rcr
mov
in
pop
enter
orps
test
std
pop
loope
cmp
xor
rcrb
shlb
les
or
cmpsb
loop
lea
mov
shr
mov
nop
xor
mov
xchg
push
std
mov
adc
pop
jmp
cmpb
and
adcb
ret
dec
adc
sahf
and
pop
adc
cwtl
mov
stos
clc
mov
repz
sub
lea
add
sbb
xor
xor
out
out
xchg
cwtl
sub
jne
movsbl
push
fldenv
push
ss
ja
pop
pop
cmpsl
inc
adc
and
push
cmp
je
push
push
test
xchg
add
add
cmp
hlt
add
sbb
insl
ja
jl
sbb
sar
push
test
sbb
and
mov
shrb
aam
push
fstpl
notl
adc
adc
in
js
jne
adc
sbb
ss
lahf
mov
push
out
mov
mov
mov
sub
dec
cmp
shl
add
sbb
push
in
dec
mov
xor
imull
daa
xchg
sbb
xchg
lock
or
popf
sbb
imul
into
ss
add
sarl
and
mov
push
add
cli
push
aam
or
mov
push
sbb
out
loop
push
or
push
shl
push
out
mov
or
dec
pop
pop
dec
test
ljmp
jecxz
mov
lock
and
pop
fs
add
fs
aaa
testb
mov
out
adc
jo
daa
lea
sahf
xor
enter
sub
jo
sbb
and
xor
cmp
push
insl
mov
dec
push
iret
xor
add
mov
out
arpl
dec
jmp
add
pusha
xor
test
and
add
mov
push
mov
sub
insb
mov
or
shll
push
mov
outsl
add
test
int3
loopne
pop
push
jb
aas
and
pushf
xchg
push
loope
mov
jbe
lea
aaa
in
lret
sub
or
push
mov
in
testb
push
push
mov
xor
movsl
pop
sbb
jecxz
subl
lock
adc
sbbb
jb
add
mov
ficoms
test
ret
adc
inc
dec
inc
add
fsubrs
add
sbb
aam
mov
mov
lret
push
lods
add
push
ljmp
mov
cmp
std
adcb
loopne
add
subl
mov
add
dec
and
loopne
cmp
jg
sbb
dec
cmp
jl
adc
sbb
into
pop
add
lahf
xor
mov
fnstcw
push
pop
mov
popf
adc
loope
mov
jl
adc
and
lock
add
rolb
sarb
dec
ja
dec
inc
add
sahf
inc
js
or
or
pop
inc
xchg
add
cmp
push
add
pushf
pushf
pushf
pushf
add
push
pop
outsb
lahf
pushf
pushf
or
or
jnp
or
jbe
outsb
outsb
outsb
or
jno
jmp
push
jmp
por
outsb
outsb
outsb
adc
pop
adc
pop
adc
push
adc
dec
outsb
outsb
outsb
outsb
adc
dec
adc
aas
pop
jmp
outsb
outsb
outsb
outsb
sbb
xor
jmp
sbb
outsb
outsb
outsb
outsb
sbb
and
pop
pop
jmp
pusha
jge
lods
and
add
jbe
and
and
psrad
sbb
xchg
push
mov
inc
loopne
add
loopne
call
outsb
dec
push
sahf
out
sahf
jbe
xchg
out
cmpsb
scas
mov
shl
sahf
out
lret
fstps
jecxz
in
repnz
jns
jns
add
push
push
or
sahf
out
sahf
adc
mov
pop
pusha
add
add
jg
pop
or
and
or
or
push
movups
adc
adc
push
pop
sbb
sbb
sbb
push
pop
lret
mulb
and
and
mov
push
xchg
mov
pop
and
inc
fcmovbe
lcall
rclb
js
ficoms
inc
ret
out
aaa
adc
dec
cmp
push
sbb
insb
fisttpll
xchg
mov
ret
fcomps
je
push
push
jmp
dec
xlat
push
mov
dec
or
mov
rolb
test
loopne
ret
sub
daa
imul
mov
mov
cmpsb
mov
test
es
movb
mov
push
orb
sub
call
lea
test
or
dec
loop
add
test
xor
adc
mov
orl
roll
and
sbb
lahf
xchg
push
push
push
sub
adcl
mov
test
rcll
arpl
push
sbbb
sub
aas
sar
and
hlt
adc
mov
cmpl
sub
sub
adc
mov
imul
cltd
or
cmp
xor
lock
add
xchg
pop
fistps
adc
dec
cmp
inc
aam
pop
andb
adcb
ss
push
jns
cld
and
add
jmp
lock
adc
pop
loopne
je
mov
leave
adc
jb
push
es
cmp
mov
lock
push
mov
or
aad
repnz
pop
movb
and
and
flds
rolb
mov
in
scas
push
ret
cld
pop
cmp
jne
in
push
add
or
push
xor
das
ds
add
lea
add
jo
into
loop
jmp
sbb
pop
cltd
mov
outsl
push
adc
or
dec
iret
adc
add
xor
dec
jecxz
mov
inc
hlt
push
jo
sbb
and
or
xor
add
or
mov
xchg
cmp
sub
cmp
call
xchg
mov
mov
shrd
movsl
push
mov
imul
lret
mov
test
dec
popf
cmp
lock
lock
add
add
adc
mov
add
mov
jb
xorl
mov
les
mov
test
movsl
sbb
fwait
and
xor
leave
add
add
add
jno
in
mov
add
pop
gs
push
xor
lock
mov
fwait
pop
sbb
pop
or
add
mov
jbe
gs
cld
xchg
test
and
push
mov
loopne
dec
mov
into
mov
call
mov
mov
add
ret
das
dec
add
sbb
imul
jns
test
arpl
bound
jo
addl
push
sub
imul
or
add
adc
mov
push
dec
cltd
movb
fwait
and
loopne
lcall
or
lock
outsb
and
mov
imul
jo
xchg
add
imull
sub
jge
push
push
cmp
in
pop
and
mov
jae
adc
sub
js
jae
aas
xchg
cmp
and
add
add
push
jmp
jns
mov
adc
add
adc
loopne
jmp
push
movsb
or
sbb
daa
clc
push
dec
adc
pushf
add
std
inc
add
mov
cmp
popf
xchg
adcl
loopne
and
jbe
aad
test
aam
jmp
push
add
cmp
mov
inc
xchg
movsb
jge
push
xor
inc
sbb
push
popl
inc
ret
gs
shll
rclb
insb
xchg
jmp
push
iret
xorb
int3
dec
add
cld
pop
adc
mov
lock
mov
roll
cli
sub
mov
push
cmc
popa
clc
fistl
and
clc
ljmp
mov
fcomps
inc
dec
sub
mov
movb
dec
cmpsb
adc
add
imul
jne
cltd
in
scas
cmpl
fwait
mov
sar
jae
mov
icebp
push
jno
in
xchg
add
test
or
sub
cmp
mov
hlt
loopne
sbb
mov
add
adc
xchg
mov
inc
rorb
add
cmc
pop
add
inc
test
cmp
jo
dec
add
push
jl
add
sub
mov
clc
cmp
clc
outsl
push
addr16
add
ret
popa
adc
fistpl
add
sbb
pop
jnp
or
cmp
xchg
lahf
mov
sbb
xorl
imul
je
lods
out
insb
sbb
sbb
sarl
inc
je
push
push
loope
cmpsl
repnz
xor
add
je
in
push
or
ret
cmp
dec
pop
imul
andb
mov
dec
lock
add
fcomp
dec
cmpl
loopne
add
loope
mov
cmp
hlt
cmp
push
add
popa
push
mov
inc
xchg
icebp
cmp
pop
inc
pop
mulb
add
orl
ret
leave
dec
pop
rolb
add
or
or
daa
jno,pt
push
sbb
jl
repz
add
test
adc
cmp
ret
jo
ret
rcrl
add
out
faddl
mov
jmp
sub
mov
int3
push
mov
pushf
mov
rcrl
inc
add
dec
pushf
inc
and
or
mov
fistl
xor
fistl
icebp
stos
sub
push
imul
sbb
xchg
add
jo
jns
outsl
addl
mov
dec
pushf
add
inc
rorl
sub
jo
mov
xor
sub
pop
subb
fs
iret
mov
outsb
xchg
mov
xchg
push
sti
or
scas
inc
xchg
push
jecxz
jbe
faddl
push
add
ja
adc
cwtl
push
mov
dec
in
lods
push
cli
inc
cld
or
add
xor
or
loopne
aam
jle
push
or
jl
ljmp
ret
fisttpl
jl
xor
jmp
cmp
jl
or
sbb
popa
mov
adc
mov
and
mov
mov
push
add
inc
les
mov
cs
adc
or
mov
and
hlt
cmpl
call
sbb
ds
adc
movsb
adc
or
mov
inc
jp
adc
pop
jmp
shlb
add
mov
sbb
cmp
push
pop
popa
xchg
mov
mov
jo
popf
dec
je
push
shl
dec
dec
xor
sub
mov
add
and
sbb
push
adc
add
es
jo
stc
lcall
fmull
inc
sbb
push
sahf
dec
in
xor
mov
push
pop
xchg
out
dec
sub
push
or
ds
or
ljmp
sbb
pop
push
insb
and
pop
sub
fisubrs
dec
sub
shlb
dec
addl
dec
jns
out
xor
cmp
or
fidivrs
testl
popf
out
sbb
pop
xor
dec
aaa
outsl
sbb
inc
subl
stc
and
push
xchg
rolb
add
loopne
mov
xchg
cmp
pop
ret
nop
mov
mov
enter
mov
inc
xchg
fsubl
push
push
jl
xchg
daa
and
or
out
into
and
adc
ss
dec
sahf
pop
adc
mov
lret
xchg
pop
cmpsb
and
mov
jns
test
in
or
pop
andl
adc
enter
inc
or
or
fwait
lret
and
sub
or
cmp
jo
pop
pop
ret
add
lock
inc
setb
daa
jns
xor
imul
push
outsl
nop
ja
cmp
pop
mov
and
hlt
and
push
xchg
mov
nop
std
or
mov
mov
sub
das
shlb
sahf
loopne
adc
inc
daa
jns
xchg
lock
xchg
add
ja
stc
rorl
jns
adc
in
add
vmwrite
cmp
fs
push
and
and
movhps
std
mov
mov
mov
fistps
lock
notl
mov
pop
jb
enter
fmull
je
leave
out
and
rdtsc
sbb
push
pushf
push
cwtl
incb
and
sbb
or
or
sbb
sahf
out
push
sub
out
sahf
out
xchg
movsb
mov
iret
sarl
call
push
cmp
repz
jne
xchg
test
cmp
repz
out
sahf
out
pop
pop
xor
sahf
out
sahf
arpl
cmpsl
mov
leave
jmp
and
push
mov
call
fcompl
les
and
add
cmp
jo
adc
adc
outsb
cltd
andb
lods
adc
push
test
mov
popf
out
pop
jns
xchg
daa
test
sbb
imul
xchg
xorl
pop
fidivl
fs
mov
sub
fldcw
mov
mov
mov
push
fld
add
pop
sti
imul
sbb
add
xor
in
outsl
arpl
lods
jmp
pop
les
mov
push
sub
jae
or
mov
mov
inc
push
je
mov
and
enter
add
pusha
mov
dec
lret
jle
mov
xor
je
arpl
xor
cmp
jne
push
mov
pop
mov
adc
push
fmull
jle
jmp
dec
jle
mov
adc
call
pop
out
add
add
ja
push
adc
push
loop
pop
stc
fsubs
push
mov
xlat
fwait
sbb
inc
sbb
dec
out
pop
pop
nop
adc
xchg
and
mov
add
sbb
sbb
and
or
xor
mov
xor
sub
xchg
inc
add
lock
xchg
xor
xor
adc
lcall
push
ficompl
ss
scas
push
pusha
fwait
in
add
sbb
js
outsl
lods
and
xor
push
pop
inc
lods
sub
insb
add
sbb
nop
not
dec
add
and
pop
outsb
push
add
and
jmp
or
stos
popa
pop
push
xor
sbb
addl
daa
pop
cmp
cmpb
jge
ret
push
push
es
jl
or
sub
xor
je
mov
lea
adc
push
mov
or
mov
xor
mov
jmp
or
pop
mov
cli
xchg
sbb
aad
movsl
add
cmp
test
push
nop
add
jbe
push
out
and
adc
xchg
push
sbb
cmp
sbb
adc
xor
aas
add
sub
sub
xchg
icebp
or
inc
mov
xchg
cld
jp
outsb
pop
pushf
in
and
call
sub
sub
jns
iret
loope
cld
aam
add
stc
rolb
or
shll
or
jle
push
scas
or
and
bound
out
ja
pop
and
xchg
ja
lcall
je
pop
sub
cmc
fs
sub
aad
inc
push
pop
filds
xor
adc
cmp
push
out
and
adc
pop
add
loop
push
sub
pop
add
xor
ret
push
lcall
adc
cmp
lret
fsubl
and
or
jecxz
push
nop
es
sarl
movl
add
and
xorb
lock
adc
into
lea
dec
add
das
push
dec
pop
in
add
hlt
rcll
pop
mov
add
in
push
rolb
cwtl
add
add
imul
xor
test
add
or
cld
lahf
push
pop
sub
in
call
mov
add
jp
push
and
faddp
adc
ljmp
sub
ret
addr16
bound
sub
xor
and
lods
sub
orb
cmp
imul
sbb
add
jbe
lock
or
and
roll
or
aam
into
dec
jb
out
in
push
in
or
pop
popf
lock
cmpsl
push
adc
pop
inc
or
aas
dec
pop
and
mov
xor
cltd
cwtl
insl
push
adc
test
xor
lds
mov
icebp
cmp
xchg
jb
popa
in
pop
ss
jno
rorl
xchg
adc
inc
cmpsb
in
ss
adc
mov
jge
test
stc
pop
dec
pop
cltd
add
dec
stos
daa
adc
cmc
inc
shlb
je
or
xor
and
aam
or
push
rcll
gs
cmp
mov
pop
cwtl
xchg
into
call
xor
dec
sbb
jl
push
cmp
popf
inc
push
lret
add
insl
lods
and
dec
sbb
add
je,pt
ja
shrl
ss
cmp
cmp
je
cmp
imul
xchg
jo
data16
sbb
mov
in
loopne
mov
xchg
mov
pop
adc
adc
sub
cltd
in
push
pop
adc
jno
pop
inc
or
push
mov
dec
roll
daa
scas
xor
push
add
outsl
jp
or
rorl
test
lods
loop
fbstp
add
or
push
pop
jnp
pop
inc
cmpl
cs
push
mov
and
cmp
out
es
add
xchg
inc
cmp
test
add
enter
in
leave
add
fmull
out
outsb
ss
insl
lods
sbb
adc
and
in
adc
data16
mov
mov
imul
bound
cmp
shl
rorl
xchg
add
push
mov
mov
push
lcall
dec
mov
fsubr
dec
andl
jmp
push
push
pop
push
les
sub
jecxz
mov
push
mov
push
lcall
shr
jmp
dec
adc
jmp
js
shl
or
push
xor
push
or
call
jb
faddl
test
add
addb
loopne
dec
sbb
adc
les
xchg
dec
sarb
and
jno
push
ljmp
mov
jns
jb
adc
pop
xor
mov
lds
pop
rcll
mov
rclb
imul
inc
enter
sbb
out
in
outsb
scas
andl
mov
push
test
les
jle
mov
or
out
xor
add
lret
push
je,pt
out
lods
mov
dec
lcall
or
dec
rolb
sub
sbb
rclb
mov
push
enter
pop
rclb
sub
push
cs
fcomi
and
mov
pop
ficoms
push
lea
cmp
daa
loopne
fimuls
jo
cmc
testb
xlat
push
and
orl
jne
xor
mov
fcompl
test
jbe
sub
jl
movsb
dec
pop
cmpsb
mov
push
push
out
mov
adc
and
test
or
pop
sbb
in
mov
push
pop
fmul
mov
inc
loope
stos
add
leave
mov
test
leave
dec
gs
pop
pop
adc
mov
cmp
movsl
iret
movl
dec
stos
jno
jecxz
flds
sub
cmpsb
xchg
push
iret
inc
aaa
mov
adc
filds
lret
add
js
xchg
adc
fs
push
mov
dec
and
std
jmp
loop
mov
ljmp
imulb
insl
sub
dec
sub
pop
daa
xchg
je
adc
rcrb
fstpt
mov
push
adc
inc
sbb
inc
adc
jb
xlat
pop
dec
dec
adc
mov
insb
ror
adc
pop
push
push
lsl
push
arpl
mov
lods
aam
xor
adc
jae
add
cmc
mov
adc
pop
stc
cmpb
jp
aaa
in
sbb
sbb
xor
push
imul
and
adc
hlt
icebp
sbb
and
jle
stc
or
and
jnp
aam
and
mul
xchg
xchg
neg
or
pop
cld
adc
mov
and
repnz
push
sarl
inc
lcall
xchg
xchg
notl
in
xchg
inc
and
enter
add
fsubl
int3
pop
clc
enter
nopl
dec
es
daa
ss
and
jns
xor
sub
movd
mov
loopne
push
iret
inc
es
pop
jne
mov
les
and
cmp
sub
js
sub
inc
ficompl
xchg
jne
sbb
push
in
push
loopne
rolb
in
enter
mov
sbb
add
add
push
aaa
jb
pop
jb
sub
pop
jb
pop
and
sbb
pop
jb
fcoml
or
jb
or
push
lds
sbb
inc
push
in
xor
push
in
push
pop
fs
mov
inc
andb
jmp
mov
lret
out
mov
inc
cs
insb
outsb
mov
jecxz
jb
das
std
cld
xchg
data16
mov
xor
adc
orb
xor
rolb
test
cmp
in
mov
pop
pop
stc
stos
jo
push
mov
shll
pushf
mov
das
enter
add
xchg
ss
cmp
test
jns
mov
cmpsl
popf
cmp
pushl
scas
ret
pop
out
setne
cmpsl
pop
cmp
int
mov
daa
xor
arpl
ljmp
cmp
mov
xchg
cmp
cmp
inc
or
sti
mov
add
nop
sub
clc
push
fiaddl
mov
add
sbb
nop
outsb
cmp
aam
lcall
dec
mov
fdivrl
adc
jno
sahf
add
mov
and
or
sub
fcomip
add
movb
je
mov
test
xor
test
pop
test
scas
fdivl
sbb
movl
mov
or
es
pop
ss
adc
enter
lds
adc
mov
or
cmp
insb
push
fwait
cmp
push
orb
pop
aaa
ret
push
mov
or
loop
and
pop
andb
mov
sub
push
dec
push
push
incl
sbb
dec
iret
mov
out
lods
popf
add
inc
repz
jo
pop
mov
fdivs
pop
adc
sub
dec
pop
jmp
mov
aas
js
pusha
pop
pop
pop
push
lods
rol
sbbb
cmpsb
cli
pop
add
push
cmpsl
fsts
mov
leave
ret
cwtl
sbb
pop
xor
cvtps2pi
mov
imul
mov
dec
repz
popf
cmp
imul
loop
mov
pop
xchg
jbe
loopne
int3
push
arpl
decl
dec
cmp
jmp
mov
outsb
jno
sbb
pusha
dec
mov
movsb
add
mov
adc
jg
lock
add
adc
jno
jb
dec
shr
pop
shlb
stc
push
sbb
lods
mov
xchg
int3
push
jge
cmp
leave
loop
jp
movsb
and
aam
or
xor
cmp
shl
push
arpl
or
and
mov
mov
test
int
ja
or
adc
mov
movsl
dec
andb
and
and
push
fmuls
add
push
dec
adc
pop
or
sub
jg
mov
mov
cmpsb
xor
inc
mov
and
and
xor
push
sub
sarl
lods
xor
jo
jecxz
push
jbe
mov
bound
add
push
ficoml
cs
add
mov
adc
aam
jle
ret
and
inc
inc
out
push
push
xchg
les
jo
lahf
push
or
addl
rcr
inc
call
pop
mov
jo
ret
fdivrs
jne
repnz
js
rclb
sub
sbb
mov
dec
add
shlb
ja
shlb
push
jno
cmpsl
adc
pop
jne
flds
hlt
push
push
loopne
andb
js
inc
test
std
lods
adc
cli
push
mov
xchg
inc
ds
pop
mov
add
jmp
es
push
jnp
xorb
or
popf
aas
popa
shrb
clc
in
adcb
out
and
faddp
inc
pushf
jo
loopne
push
jge
pop
dec
adc
scas
sub
jo
cs
mov
dec
jne
mov
sti
fcmovne
xor
sbbl
pop
mov
ret
xor
or
xchg
stos
ss
sub
movsb
dec
sbb
jecxz
cmp
outsb
adc
jne
fsubrl
sub
loopne
push
sbb
es
imul
jmp
cmp
out
add
xor
add
cmp
pop
and
ret
test
cmp
adc
lods
jne
call
cwtl
xchg
xchg
lea
mov
mov
daa
int
dec
leave
fcomp
in
push
jmp
push
imul
inc
out
loope
jecxz
pop
popf
fwait
int3
and
dec
xor
push
sub
enter
pop
lret
adc
jmp
add
and
xchg
add
inc
fsubrl
cmp
fstps
cmp
das
test
jmp
adc
cwtl
je
inc
es
in
out
xor
clc
fadds
lock
inc
adc
add
sub
adc
add
in
mov
lods
in
push
sbb
inc
movsl
aas
adcl
call
das
push
roll
lret
or
lods
inc
in
sbb
sahf
rolb
cmp
sbb
pop
pop
mov
add
mov
pop
cmp
fwait
push
enter
adc
push
or
cmc
xchg
sbbb
sbb
in
inc
cmp
outsl
pop
loop
and
sahf
pop
push
loopne
inc
cmp
nop
inc
lock
in
add
add
mov
ret
fisttpl
push
xchg
cmpsl
jge
xchg
jne
daa
sbb
add
mov
sbb
ret
push
out
push
adc
mov
mov
cs
stos
inc
mov
sub
pop
out
inc
push
orb
scas
js
int3
frstor
fmulp
cli
inc
je
cmp
int3
push
xor
add
test
orb
sub
imul
push
xor
dec
push
or
out
mov
sub
push
cmp
adc
inc
adc
fldt
sub
fsubrs
xor
shll
xor
cmp
fcompp
push
pop
cmp
sub
sbb
int3
pop
js
and
dec
hlt
mov
rcrl
sub
add
ret
insl
push
push
or
xor
je
daa
nop
mov
mov
pop
inc
or
mov
das
inc
sbbb
push
sub
push
int3
sub
sub
or
sub
push
int
ds
push
xor
sub
gs
push
sub
inc
lret
and
push
jl
pop
je
fnstenv
mov
xor
aad
sbb
sbb
js
xor
add
xor
pusha
cmp
cmp
sub
mov
sbbb
mov
addb
mov
mov
jns
in
xor
mov
push
ret
in
inc
rolb
mov
mov
mov
js
rolb
xchg
dec
pushf
shll
movups
add
pop
and
or
pop
mov
imul
repz
fcoms
mov
add
adc
int3
ret
stos
fmul
and
jae
jne
and
adcl
and
push
loope
jle
push
jo
in
add
add
or
or
jno
inc
push
pushf
mov
sub
test
add
aad
sbb
push
insl
movsb
dec
cmp
or
pop
test
lea
sub
cmpb
push
bswap
insl
sub
pop
add
loope
lret
call
pop
sbb
adc
adc
xchg
add
jns
addl
shrl
adc
sahf
dec
mov
mov
insl
out
lock
add
call
lret
lss
jb
in
lock
ds
mov
add
adc
add
insb
push
daa
mov
or
and
pop
insb
xchg
xor
dec
adc
cwtl
insb
inc
add
repz
adc
mov
repz
or
jecxz
pop
idivb
cmp
add
sub
bound
xchg
js
or
int3
cltd
mov
sbb
in
sbb
pop
or
dec
sbb
test
or
call
push
jae
add
sbb
or
add
mov
mov
addb
inc
mov
mov
add
movsb
or
xlat
adc
inc
or
add
pop
and
inc
nop
ds
mov
add
and
push
or
aad
adc
inc
test
icebp
imul
lcall
add
dec
cmp
incl
stos
rcrl
adc
pop
sbb
icebp
sqrtps
push
cwtl
add
and
filds
xchg
push
add
iret
push
js
adc
mov
outsl
pop
sbb
add
add
mov
test
pop
xor
out
jns
sbb
jbe
jl
pop
pop
mov
cli
sbb
jle
xchg
sbb
fstp
dec
xchg
mov
mov
pop
out
jp
pop
or
jns
pop
adc
inc
push
mov
adc
or
dec
movsb
scas
xchg
in
add
push
mov
sbb
push
dec
adc
aam
mov
add
rolb
xor
nop
add
sbb
or
adc
push
xchg
xchg
adc
je
sub
push
xchg
aam
or
and
xchg
mov
popf
divl
add
les
lea
or
in
add
xchg
push
in
mov
cmpl
sbb
mov
aaa
add
rclb
aam
push
sbb
jb
jne
insb
and
lods
sbb
lods
call
add
ljmp
icebp
pop
andl
jnp
and
push
inc
lock
push
inc
sbb
xor
or
adc
mov
xor
or
out
add
enter
and
mov
leave
add
push
mov
add
leave
and
pop
or
push
pop
pop
lds
mov
mov
inc
add
jno
add
pushf
mov
test
adc
jne
jns
adc
sbb
add
and
call
out
call
lods
or
fimull
aaa
xchg
stos
sub
push
lds
call
pop
in
or
adc
loope
sbb
ror
add
push
leave
or
sbb
adc
dec
xchg
pop
test
mov
pop
inc
cmpsb
mov
and
xor
jmp
or
xor
push
fwait
jl,pt
sub
add
mov
add
add
inc
adc
or
sub
adc
shll
push
leave
add
add
pop
inc
or
loope
fnsave
pop
cltd
cmovno
cld
inc
push
push
push
or
sub
fistl
xchg
adc
push
xor
cld
ret
paddsb
add
fdivl
fldt
push
lock
or
sub
and
inc
mov
testl
call
rorb
lea
xchg
xor
scas
add
cmpsl
outsl
testb
inc
sub
bound
and
jno
pop
or
or
sbb
mov
cmp
movsb
push
lds
shr
inc
scas
call
and
loopne
cmpsl
add
xor
or
adc
nop
addr16
xchg
add
cmp
add
out
jl
dec
sub
filds
lods
sti
dec
mov
push
add
fimuls
jmp
mov
repnz
ficoml
mov
dec
nop
pop
sub
rclb
fstpt
cmpsb
mov
jge
aam
adc
out
mov
out
xor
rcrb
stos
push
mov
or
inc
add
adc
push
lret
dec
mov
or
imul
push
jo,pn
add
push
sub
sub
fwait
jge
jns
xchg
mov
mov
in
fs
loope
or
addl
jle
xchg
addb
imul
xor
int3
mov
jg
mov
dec
push
loopne
mov
mov
mov
loopne
add
arpl
xor
push
jge
mov
sub
jb
in
lea
lret
add
test
push
orl
mov
push
dec
add
popa
inc
dec
sbb
jecxz
xchg
pushf
in
jne
xchg
inc
pop
and
and
add
mov
adc
je
mov
inc
stos
stc
int
push
push
or
jo
push
aaa
movl
mov
push
pusha
aam
imul
or
push
jb
sbb
push
test
lds
mov
jb
iret
inc
into
jns
pop
dec
xchg
cmp
mov
ja
fwait
add
push
lret
cli
daa
mov
cwtl
je
andl
mov
icebp
jp
mov
test
test
push
jle
rcll
ss
enter
mov
xchg
clc
cmp
add
fs
dec
xor
dec
add
cmp
jl
pop
jo
clts
dec
push
ljmp
lods
dec
gs
cmp
xorl
ja
cltd
push
fimuls
sub
sub
inc
mov
push
or
loope
aas
testl
xor
pop
insb
das
imul
pop
lds
mov
adc
sbb
mov
into
pushf
and
mov
or
pop
inc
fcomps
mov
movsb
push
and
and
cmp
add
or
mulb
lea
push
inc
popf
filds
imul
jae
dec
faddp
shll
paddsw
arpl
inc
mov
push
lods
ficoml
sbb
dec
ljmp
les
push
push
mov
push
inc
jmp
scas
icebp
mov
sub
bound
adc
sbb
test
xchg
mov
and
push
sahf
dec
xor
inc
xor
cltd
adc
subl
lcall
sbb
sub
xor
rcll
sbb
push
xor
sub
rcrl
and
add
push
push
pop
or
xchg
sbb
pop
lock
push
mov
sbb
imul
insb
shr
repz
popf
add
lods
sbb
sub
add
sub
xor
outsl
mov
xchg
sahf
dec
push
push
push
fs
mov
cmp
add
fcoml
test
aaa
cmc
mov
jb
cmp
fs
and
mov
incb
js
pop
inc
test
cmp
cmc
add
in
clc
pop
jne
mov
inc
xchg
xchg
shll
pop
pop
into
inc
inc
xchg
sbb
adc
xlat
aad
stos
or
add
xorb
and
cmc
xor
outsb
mov
push
add
sub
cltd
or
and
inc
mov
scas
and
and
out
shlb
xchg
fcoml
xchg
or
xlat
aad
je
loopne
cmpb
xor
push
sub
sarl
sub
scas
pop
popf
shll
mov
daa
and
mov
add
sub
mov
ja
pop
adc
prefetch
xchg
and
imul
in
test
out
pop
aas
and
add
sub
push
pop
mov
add
lods
mov
and
lods
outsl
and
push
mov
iret
loop
mov
sbb
sbb
fs
sub
xchg
stos
pop
pop
cmp
xor
jne
sbb
pop
leave
shll
and
fmull
mov
dec
rorl
icebp
add
add
clc
sti
inc
or
sub
dec
sbb
add
les
je
mov
xchg
lds
sub
push
lea
sub
xor
insb
mov
imul
pop
mov
addb
insb
negl
imul
inc
imul
xor
in
dec
pop
push
or
pop
adc
cmp
mov
mov
mov
xor
or
sub
jg
cmp
mov
xrelease
test
call
xor
rol
mov
ror
xor
shr
xor
es
clc
lods
sbb
xadd
or
or
add
add
add
ret
movsb
pop
call
sbb
lock
push
testl
jle
ficoml
mov
jge
mov
testl
push
xor
add
add
divl
xor
aam
or
xchg
or
std
sbb
and
and
int3
cmpl
sbbb
add
fs
jl
mov
cmp
add
cs
push
rclb
or
cmp
fadds
sub
xor
in
xor
fsubr
lock
fsubr
in
sbb
shlb
fs
test
cld
mov
add
shlb
cli
xor
setne
add
movsb
imul
call
add
aam
call
sub
pslld
push
bound
push
cwtl
mov
lret
in
jb
in
pushf
add
lret
in
dec
gs
lock
rorl
cmp
pop
cmp
xchg
into
loopne
repnz
pop
adc
repnz
pop
or
fcompl
add
add
repnz
push
mov
inc
roll
and
or
xor
or
jl
ficomps
push
sti
adc
pop
push
cld
sub
adc
je
push
add
sbb
popf
pop
in
sbb
jo
sbb
lods
mov
loopne
cmp
aam
shlb
inc
fsubs
cmp
dec
or
sbb
xor
in
sub
or
fdivp
and
push
repz
and
nop
inc
inc
fs
mov
and
push
sub
not
push
out
adc
sub
cmpsb
call
fcomp
loopne
inc
adc
mov
adc
int
fdivrs
sub
shll
call
dec
sub
lods
inc
in
or
push
stos
add
jns
lods
inc
aam
xor
rorb
adcb
scas
mov
cwtl
and
and
dec
cmpsb
dec
cs
mov
push
movsb
cltd
add
xor
adc
or
loopne
pop
xor
or
adc
push
mov
and
nop
adcl
pop
pusha
lret
movsb
add
or
pop
les
pop
movsb
cmp
inc
pusha
adc
in
enter
or
sbb
add
shlb
or
add
mov
pusha
and
sbb
inc
cmp
in
add
or
mov
add
fisubs
jecxz
push
jb
pop
sub
push
jp
add
or
mov
imul
add
test
test
and
and
enter
add
js
or
outsb
inc
movl
mov
lods
pop
aas
xchg
and
aad
and
lea
add
rclb
push
mov
push
mov
push
lea
push
or
or
or
dec
mov
js
jg
stos
in
pop
rorb
jnp
or
iret
jl
je
nop
or
and
adc
or
or
incb
shr
pop
cltd
cmp
fsubrs
mov
push
data16
sub
je
add
mov
pop
ss
dec
data16
adc
mov
lods
testl
leave
movsl
mov
pop
jo
es
push
or
mov
jb
xchg
es
cmp
addl
inc
mov
mov
inc
pop
add
testl
or
cld
push
mov
pop
add
sub
js
sbb
pop
cld
lea
fmull
dec
push
xorl
fbld
fildl
jae
in
push
cld
push
rclb
mov
lods
xchg
jae
inc
sbb
adc
or
pusha
pop
jb
adc
xor
or
and
inc
or
sub
add
ret
inc
jnp
adc
mov
xor
mov
lahf
dec
xor
or
mov
pop
outsl
or
test
adc
fstp
fsubrp
adc
enter
inc
inc
add
cs
pop
adc
inc
and
sub
fwait
or
push
scas
lahf
movsl
and
adcb
xchg
xor
sbb
inc
js
xchg
ret
xchg
xor
sub
jge
inc
dec
iret
mov
inc
pop
jo
pop
adc
pop
or
add
jle
sub
mov
mulb
cmpb
jge
inc
lock
adc
xchg
lock
lcall
adc
or
push
clc
jnp
loope
ret
fcomp
inc
stos
push
or
jae
fdivp
pop
adc
jmp
push
out
pop
fimull
xor
xor
pop
adc
mov
sub
orl
or
and
dec
add
push
and
sbb
inc
mov
mov
imul
pop
lds
int3
shl
jno
add
adc
or
or
fwait
or
insb
mov
sbb
in
icebp
je
xchg
rclb
sub
adc
pop
push
movsb
icebp
pusha
mov
pop
xor
and
inc
cmpsb
das
fnstsw
push
lds
mov
mov
aaa
sbb
clc
mov
leave
inc
rorb
xor
add
jns
xor
fsubrl
out
and
mov
insl
inc
or
dec
dec
test
in
adc
cmpsb
loope
js
bound
decl
bound
gs
test
dec
or
popa
lcall
sub
lds
and
andb
dec
pop
sub
push
ret
outsl
sbb
lret
mov
mov
inc
push
stos
mov
fbld
cmp
stc
pop
sbb
adc
or
mov
cmp
imul
sub
and
xorl
sub
xor
push
mov
pusha
sbb
sub
int
jle
outsl
push
sbbb
icebp
sbb
push
mov
push
cmp
push
ljmp
push
cmp
cmpsl
fwait
pop
mov
inc
push
ficoml
mov
stc
xchg
jne
enter
cmp
shlb
push
push
insb
jg
stc
imull
stos
add
jo
int
adc
add
js
ret
subl
cli
or
jne
gs
push
mov
xchg
pop
inc
mov
push
xorl
mov
dec
push
pop
pop
pusha
cs
pop
xchg
iret
loop
push
fs
mov
sub
push
mov
cmp
cli
xlat
out
fwait
inc
xchg
cs
push
xchg
lahf
sub
je
push
add
push
mov
add
xchg
rorb
and
cmp
and
mov
sub
movsl
add
push
xlat
push
idivl
add
add
leave
pop
sbb
dec
and
aad
dec
pop
pop
test
or
and
add
dec
lods
jge
stos
sbb
mov
or
push
and
or
iret
sbb
inc
sbb
inc
push
pop
pop
sti
inc
inc
test
sbb
sbb
pop
andb
sbb
cld
ffreep
mov
inc
cmp
sbb
xor
add
inc
js
inc
inc
jl
loop
inc
bound
jo
cmpsl
sbb
add
adcl
or
sbb
add
or
push
fbld
sbb
or
mulb
sub
push
dec
push
push
sbb
lret
jne
stos
subl
pushf
mov
sarb
add
xor
xchg
cmp
or
mov
push
and
sub
add
xor
push
and
fiaddl
sbb
les
mov
and
mov
cmp
xchg
adc
icebp
mov
xchg
mov
xor
mov
push
xchg
cwtl
or
sbb
xchg
shrb
je
dec
popa
insb
adc
mov
push
orb
jle
rorb
lret
adc
fcoms
ss
xor
mov
push
mov
jns
out
push
jno
ret
popa
dec
aaa
mov
rorb
and
dec
or
aad
sub
and
push
cmpsl
inc
cmpsl
or
jg
or
add
adc
dec
inc
or
or
and
inc
or
jp
jp
inc
sbb
push
dec
inc
movzbl
sbb
rcrb
rclb
or
shr
add
and
addl
ss
add
movsb
mov
xor
lcall
jno
mov
inc
lock
and
cmp
lods
or
push
xor
aam
fcomps
icebp
push
das
push
jns
rclb
xchg
mov
adc
mov
data16
hlt
cld
pop
ficoml
repnz
jl
inc
jns
fs
push
xor
adc
adc
mov
adc
push
sti
xchg
cmp
mov
sub
inc
mov
imul
punpckhwd
nop
es
mov
dec
cwtl
scas
inc
jbe
cli
add
xor
lcall
ret
in
mov
sub
jo
jg
sub
add
fistpl
mov
prefetch
mov
cltd
decl
cwtl
fsts
sub
adcl
or
add
xor
sbb
fmull
push
push
cwtl
loopne
aas
dec
mov
jle
pop
xchg
push
xchg
dec
push
rolb
cwtl
xchg
add
xchg
stos
je
or
sarl
jbe
push
das
inc
cwtl
push
add
sbb
stos
sbb
ja
and
sbb
cmp
xorb
frstor
jmp
or
mov
dec
xchg
mov
out
jl
fs
jle
push
xchg
mov
dec
mov
fistpl
push
inc
inc
sbb
xchg
rolb
or
lods
add
xor
inc
pop
stc
ds
pop
cld
push
jns
fldenv
cmp
pop
mov
cli
movsb
adc
and
sub
pop
es
push
in
lock
orb
jno
push
xchg
cmp
movsb
dec
mov
sbb
mov
jecxz
sbb
xor
sub
mov
jle
xor
push
sbb
add
jp
mov
or
or
mov
mov
loopne
and
lret
and
add
xor
jns
jge
int3
pop
or
lock
inc
jg
mov
jnp
jle
push
mov
loope
aam
or
clc
mov
or
ficoml
push
addb
insb
inc
aas
add
push
dec
mov
and
lods
aaa
or
xchg
or
push
mov
sbb
ret
pop
ret
mov
pop
mov
xor
lret
les
test
enter
pusha
rclb
pop
xor
ljmp
jmp
mov
mov
test
shl
iret
xlat
inc
ret
push
cld
pusha
push
push
enter
cmp
push
leave
ret
mov
jae
adc
and
js
loope
cltd
add
dec
push
adc
call
push
std
or
sub
inc
push
xchg
mov
inc
mov
cmp
call
xor
popa
sub
xor
add
dec
or
adc
sahf
push
jl
jge
mov
pop
cmp
pop
jb
cmp
loop
push
mov
and
iret
push
inc
mov
jnp
and
sub
mov
test
fxch
sub
ret
mov
push
mov
dec
fdiv
xor
push
popa
dec
inc
push
jno
jl
push
test
aas
add
adc
test
test
addl
xchg
mov
rolb
aad
cmp
add
jne
add
xchg
jns
mov
fcompl
insl
iret
fs
inc
sbb
lea
fld
jge
sbb
movsb
add
iret
push
dec
add
es
xchg
fnstenv
popf
push
or
cmc
je
push
push
clc
xchg
jbe
lods
shlb
pop
shrl
pop
xorl
mov
sub
mov
sub
or
popa
loop
les
and
inc
add
sbb
sub
adc
xor
pop
mov
adc
jo
pop
imul
xchg
ja
cmp
fisttpll
and
dec
sbb
fisubl
xchg
mov
subb
push
gs
inc
loopne
xchg
ja
stos
insb
mov
cltd
sub
pushl
cmp
movsl
adc
ds
xor
daa
lahf
jb
cmpl
add
sub
inc
dec
adc
mov
fildl
outsl
sbb
hlt
mov
loop
push
jmp
loopne
ss
testb
cmc
in
sbbb
mov
inc
mov
mov
pop
fs
sub
insb
daa
pop
add
pop
stc
add
xchg
xchg
pop
xor
inc
clc
mov
mov
sub
pop
sar
das
mov
mov
or
repz
adc
sub
inc
xor
cmp
push
mov
push
hlt
cmp
xorb
cmp
arpl
ret
xchg
and
add
testb
xlat
and
div
cmp
orl
sbb
mov
pop
stos
sbb
lcall
ljmp
cmp
jne
inc
inc
jmp
xor
jmp
inc
dec
jge
imul
xchg
int3
in
gs
adc
clc
out
jne
mov
jmp
adc
jmp
movsl
insb
les
fstpt
jge
jne
sbb
or
jo
and
cmp
andb
ret
mov
sub
test
rorl
stos
mov
jmp
jmp
ds
add
idivb
fildl
xor
inc
mov
movb
mov
fcom
aam
sbbl
lods
pop
or
nop
or
and
push
mov
or
sbb
les
sbb
clc
sbb
arpl
lock
jle
sbb
adc
xchg
mov
test
push
xchg
cmp
or
push
add
sub
push
add
inc
cmp
sbb
inc
jbe
mov
xor
ds
add
icebp
jb
mov
aam
sbb
aam
std
inc
mov
cmp
push
rorl
mov
fcoms
inc
adc
adc
or
sbb
and
or
popa
add
push
sbb
faddl
add
add
cwtl
lret
push
mov
clc
or
inc
insl
jg
sub
and
loopne
imul
and
mov
arpl
xlat
cltd
or
adc
and
negl
pusha
movl
inc
xor
push
mov
fmulp
lea
and
gs
adc
adc
sbbb
pusha
sub
lods
call
or
or
and
dec
sbb
dec
daa
sbb
into
push
cmpl
roll
ds
js
sub
mov
mov
add
nop
loopne
imul
push
out
mov
lret
xchg
pop
inc
loop
push
scas
faddl
es
mov
push
cld
push
adc
xchg
cmp
add
mov
add
push
imul
mov
sub
fcoml
and
test
js
js
sbb
xchg
jp
popf
shrl
jo
mov
push
push
inc
or
sub
xor
fisubs
xchg
aaa
ret
cmpl
sub
movsl
mov
or
xor
pop
adc
or
in
loopne
test
cmp
or
or
rclb
xchg
mov
add
lds
xchg
dec
push
mov
xor
adc
add
push
dec
cltd
sbb
push
jb
jmp
or
inc
push
stc
add
dec
sub
or
addr16
sub
pusha
mov
mov
xlat
mov
pusha
and
addb
inc
cmc
cmp
lret
pushf
push
ja
ror
lods
in
jae
xor
iret
mov
sub
imul
mov
in
fdiv
xchg
xor
push
aaa
sbbl
inc
lea
push
inc
dec
add
mov
jmp
sbb
cmp
jge
push
jbe
sbb
adc
shl
ss
cld
lahf
mov
sahf
add
adc
pop
push
call
mov
mov
lds
fmul
mov
and
subb
xor
inc
aas
fsubrl
add
add
lods
call
dec
pop
loop
outsb
pop
fisttpll
mov
sub
fmull
inc
clc
add
lea
es
push
xorb
or
and
mov
jnp
ret
mov
push
push
xlat
cwtl
fmull
arpl
fists
sub
push
enter
sub
push
sbb
push
push
lods
push
sbb
and
fcomps
roll
add
adc
push
cmp
inc
cmp
inc
add
adc
call
xchg
subb
add
pusha
arpl
or
inc
fs
add
lret
movsl
stc
xor
das
sub
test
push
xor
pop
dec
add
or
inc
dec
imul
push
sbb
stos
or
into
xor
or
mov
stos
and
push
and
push
cmp
test
inc
adc
jbe
out
pop
and
adc
stos
sub
or
sub
or
add
pop
sub
inc
mov
sub
lock
adc
cmpsl
lds
jns
or
in
adc
stos
loop
ret
xlat
mov
adc
pusha
push
dec
mov
or
xchg
icebp
ret
andl
inc
xor
xchg
mov
xor
or
or
lea
fcoml
ss
mov
push
fstpl
iret
in
mov
sub
sar
xor
sbb
add
xchg
dec
push
nop
mov
add
ja
dec
and
pop
lock
loope
inc
in
and
stos
add
add
pop
dec
inc
lods
mov
sbb
or
push
dec
js
xchg
sbb
cmp
fsubrp
es
jmp
mov
sbb
adc
push
sbb
xchg
mov
rcll
add
xor
stos
xor
nop
lret
pop
pop
sbb
ja
add
and
and
ja
lods
add
sbb
incl
fisubrs
mov
lock
sub
daa
addr16
pop
push
ret
push
cmp
jno
inc
xchg
inc
jmp
imulb
adc
jb
push
repnz
sub
dec
or
and
dec
aaa
imul
in
inc
cld
xor
jg
mov
cmp
das
add
mov
js
mov
pop
in
xor
stos
dec
data16
movsb
add
pusha
adc
imulb
cmp
sbb
test
enter
lahf
mov
add
lea
jle
popa
movsb
lock
push
jno
sub
xchg
or
xor
jmp
sub
inc
xchg
pop
add
add
into
lea
prefetchnta
jge
adc
fidivrl
mov
pusha
add
or
clc
sbb
add
adc
inc
add
mov
ret
in
int3
dec
icebp
and
jl
push
lret
jo
sub
fdivrl
cmp
leave
int3
lea
shrb
std
test
into
pop
shlb
add
mov
in
inc
xchg
orl
mov
and
sub
adc
jmp
xchg
push
push
test
or
sbb
xchg
mov
adc
and
push
div
into
or
fisttps
sub
and
test
inc
pop
sbb
mov
pop
and
add
and
and
or
xchg
mov
lods
jg
cmp
pusha
jne
mov
sub
push
loope
dec
iret
jbe
js
xor
push
in
imul
adcl
jg
xchg
sbb
adc
ss
inc
cs
xor
jbe
sbbl
push
aas
jne
cs
lea
out
inc
iret
rolb
jp
lret
mov
xor
push
push
lea
lea
sub
and
dec
push
mov
add
lods
push
ja
push
mov
or
sub
lret
mov
out
jg
sbb
movzbl
iret
sbb
xor
mov
js
jmp
dec
arpl
xchg
cmp
mov
mov
and
xchg
adc
fsubrl
jnp
sbb
movsb
sbb
movsb
adc
push
fidivrs
adcb
leave
sbb
jae
lcall
sbb
sbb
loopne
and
arpl
fisubrl
popf
xor
jmp
not
inc
inc
in
jnp
test
push
xor
icebp
call
sbb
xchg
mov
icebp
mov
mov
shr
lds
inc
sbb
or
add
jmp
mov
mov
add
je
mov
and
sub
dec
mov
mov
add
pop
push
xchg
add
jp
and
adc
lock
fstpt
rorl
jbe
repnz
xchg
adc
cmp
xchg
jb
xor
sub
cli
arpl
jg
mov
mov
lret
int3
shr
dec
pop
add
mov
xor
inc
repnz
dec
sub
adc
add
ljmp
mov
and
push
shrl
ffreep
and
push
mov
enter
lret
cmpsb
pusha
push
aam
lret
dec
mov
pop
adc
add
push
loopne
add
lret
out
push
jno
or
lea
dec
jl
jbe
jne
call
out
push
adcb
sti
add
or
jne
xor
sbb
and
lods
shll
mov
cmp
jecxz
push
push
dec
cmp
push
nop
orl
add
movsl
inc
out
inc
ja
adc
jg
ret
sub
shl
or
jo
mov
xor
call
mov
and
stos
js
xchg
popa
fsub
and
imul
inc
cmp
fwait
sub
imul
int
shl
sbb
lods
pop
push
dec
push
push
dec
xor
add
pop
pop
xor
loop
jg
add
leave
sarl
push
js
add
cmp
push
outsl
adc
ja
cmp
adc
pop
sbb
daa
push
jle
pop
dec
cwtl
push
push
pop
icebp
mov
or
push
andl
and
test
or
pop
pop
or
aas
js
xchg
clc
and
lods
test
dec
jl
fldt
add
jne
push
sbb
cwtl
ljmp
and
outsb
adc
or
bound
decl
pop
jp
jo
xchg
or
movsl
adc
sldt
call
jbe
adc
fbld
mov
mov
orl
test
cmp
mov
nop
add
les
sbb
inc
lea
ret
lret
mov
inc
sbb
lods
xor
xor
sub
inc
shlb
les
int3
rclb
scas
imul
les
pop
inc
add
jb
mov
add
adc
xor
bound
xchg
cmp
sbb
push
push
sahf
inc
pusha
mov
sbb
xchg
mov
loopne
test
fldl
js
adc
and
loopne,pn
push
cmp
and
mov
inc
movsl
inc
pop
push
shlb
or
stos
je
sbb
shlb
mov
aad
aas
out
inc
push
cld
sub
testb
je
or
xchg
repz
fistl
mov
pop
das
sub
mov
mov
dec
aas
imul
std
idivb
cmp
adc
mov
leave
sti
xchg
ss
int3
sbb
sub
test
inc
dec
movsl
std
push
and
jne
sub
and
or
pushf
cmpsl
je
movzwl
adc
sub
popa
push
rorb
fiaddl
test
gs
push
outsb
andl
xor
dec
push
pop
pusha
test
enter
imul
adc
or
and
leave
sahf
cmp
xchg
mov
sbb
xor
or
pop
je
je
arpl
xchg
xchg
fs
mov
sbb
sub
and
testb
push
adc
pusha
enter
das
neg
sbb
inc
inc
push
mov
push
mov
dec
call
loope
fcmovbe
sbb
cwtl
iret
add
cmpb
or
add
push
or
push
call
std
pop
inc
iret
mov
inc
fsubs
roll
movsb
add
mov
jns
mov
mov
lock
out
xchg
sbb
loope
outsb
mov
sub
cmp
dec
aas
sub
out
push
mov
push
sub
mov
es
jmp
shrb
mov
push
vmread
jne
mov
inc
subl
int3
mov
and
jns
pop
jecxz
nop
push
cwtl
out
mov
lods
and
cmp
push
adc
jo
jbe
sub
xor
cmp
je
or
pop
mov
or
sub
ds
cli
xor
shll
dec
add
fmuls
mov
and
mov
sbb
loope
popa
pop
pop
or
out
dec
dec
adc
adc
inc
pusha
pushf
orb
inc
adc
and
pop
jno
shrb
inc
mov
out
les
mov
adc
test
into
scas
leave
add
add
mov
push
sbb
xor
dec
inc
and
dec
addr16
xchg
sbb
inc
push
mov
loop
add
push
and
mov
xchg
inc
cli
pop
and
xor
xbegin
add
pop
insl
or
adc
push
dec
xchg
add
mov
jmp
mov
or
out
mov
mov
add
mov
and
aas
cmpl
mov
xchg
push
lahf
add
pushf
aam
or
and
pop
push
xor
test
cli
js
out
jo
cmpl
push
addr16
ret
or
cmp
mov
je
pop
add
fisubrs
icebp
inc
sub
mov
mov
or
pop
std
sbb
add
outsb
inc
cs
mov
adc
bound
sub
lcall
xor
rolb
leave
sbb
outsl
dec
pop
mov
push
add
insb
loop
clc
call
mov
dec
lahf
mov
add
fwait
fs
jne
jg
and
xchg
ds
jns
sub
jne
add
add
jecxz
stos
ja
push
mov
adc
pusha
mov
sub
pop
jecxz
cmp
mov
dec
iret
xor
sub
les
cmpl
pop
shrl
xlat
pushf
out
mov
inc
scas
loopne
and
xchg
mov
outsb
or
jmp
pop
fcompl
push
mov
dec
add
add
inc
lea
cs
dec
sub
and
inc
inc
popl
sar
push
mov
mov
arpl
out
lea
rorb
xchg
adc
sub
icebp
mov
call
cmp
test
rolb
push
lea
insl
shll
nop
xchg
arpl
aas
invd
push
popa
adc
jo
or
mov
pusha
push
inc
and
push
shlb
sub
or
mov
es
and
mov
xor
xor
nop
sub
sub
push
sahf
dec
pop
xchg
mov
hlt
popa
push
loopne
sbb
ret
rcr
or
cmp
dec
out
jb
je
cs
mulps
and
add
pop
cmpb
inc
xchg
rcrl
gs
adcb
mov
pop
bound
add
or
xchg
xchg
pop
insb
fcompl
lcall
fstpt
push
and
out
rclb
xchg
lock
mov
and
cmp
test
rcll
pop
mov
lods
xchg
and
jnp
push
fwait
bnd
and
rorl
adc
pusha
enter
rcll
sbb
sbb
jl
je
sbb
insl
pop
push
sub
sarb
loope
sbb
ret
push
fwait
arpl
adc
insl
pop
dec
push
push
lods
loopne
push
push
push
inc
inc
cs
mov
je
out
jns
inc
mov
fcomps
rorb
and
add
cwtl
mov
inc
leave
sbb
xchg
jns
nop
or
push
dec
mov
ljmp
lret
int
jb
or
push
lea
add
rclb
and
sbb
adc
adc
push
xchg
mov
je
les
jb
push
ficoml
sub
lods
add
push
inc
outsb
mov
je
add
daa
lods
push
push
cmp
xor
ret
or
sub
mov
jbe
dec
repz
push
or
sbb
mov
add
inc
inc
and
or
mov
mov
popf
xchg
dec
sub
add
push
add
pop
popa
inc
loop
adc
outsl
pop
imul
mov
add
inc
roll
dec
loope
or
rcrb
mov
and
xor
adc
fsubrs
test
incl
nop
mov
push
push
aas
iret
push
push
mov
ret
add
ret
test
adc
mov
mov
movsl
dec
push
fstp
js
inc
rcrb
mov
ss
cmp
pushf
and
nop
aam
shll
mov
loope
dec
mov
mov
push
inc
and
imul
movhps
jns
mov
cltd
rolb
es
dec
and
sub
ljmp
sbb
add
pop
loope
and
lea
negb
jp
je
sarl
adc
inc
clc
inc
je
roll
or
mov
test
mov
cmp
mov
movsb
xor
addr16
jo
or
loop
adc
xor
push
mov
bound
cmp
xchg
pop
pop
and
and
push
sub
imul
push
push
add
xchg
leave
push
rolb
lahf
loop
or
push
jecxz
arpl
test
inc
push
mov
add
sub
cmp
shrl
dec
fs
cmp
push
push
push
push
push
aam
xor
sub
push
xor
sbb
add
cmp
sbb
mull
fwait
lods
xor
inc
arpl
add
orl
sbb
out
push
push
add
ret
sub
inc
ficompl
push
je
or
call
and
add
andl
add
push
inc
enter
push
or
or
mov
pop
enter
call
xor
lcall
push
push
movb
call
int
push
loopne
cld
jmp
stos
pop
out
and
loopne
push
fs
push
pop
jmp
jo
xor
jmp
push
sbb
push
cmp
add
xor
push
xor
out
mov
or
mov
andb
cmp
into
and
pop
call
out
sbb
push
xchg
sub
add
movb
adc
pop
insl
cmpxchg
pop
mov
outsb
call
test
sub
imul
sub
inc
sub
mov
addr16
cltd
cmp
or
iret
sub
mov
int3
ss
jae
push
jne
push
push
push
bound
push
or
xchg
push
xor
xor
test
or
repnz
inc
stc
jo
mov
pop
loope
cmp
lock
rcl
adc
add
pop
movsb
popf
inc
outsb
movsl
cmp
sub
mov
xchg
aam
mov
std
xor
inc
mov
sti
dec
adc
push
fs
xor
loopne
add
push
pop
push
pop
cmp
mov
repz
xor
rolb
cmpsl
mov
push
popl
rcrl
jmp
adc
push
mov
inc
sbb
dec
loope
pop
cmp
mov
cld
mov
push
mov
in
aad
pop
mov
push
push
push
cmp
test
and
xchg
adc
or
popf
adc
sahf
push
push
add
jns
pop
sub
or
pop
fsub
adc
pop
inc
dec
push
push
mov
js
jae
sbb
enter
and
leave
dec
popa
push
xchg
adc
out
icebp
leave
inc
testl
inc
push
lods
xor
push
movsb
mov
adc
adc
dec
inc
adc
pop
add
push
das
inc
add
mov
mov
sbb
into
pop
push
dec
fisttpl
arpl
adc
dec
jo
jmp
lcall
sbb
inc
jno
mov
cmpsl
inc
dec
pop
mov
mov
sarb
sub
adcl
xchg
xorps
jo
mov
dec
call
arpl
outsb
pop
jl
jnp
cld
push
repnz
inc
cmpsb
fsubs
cltd
clc
inc
fidivl
lds
or
push
push
scas
push
xor
sti
and
mov
xchg
jmp
xchg
test
imull
mov
mov
inc
or
or
std
mov
popf
das
xchg
enter
imul
mov
mov
add
stos
add
cmp
mov
jae
icebp
push
jb
jb
dec
push
shl
add
xlat
xchg
jo
xchg
in
mov
inc
mov
push
push
fadds
and
ss
rorb
and
xchg
gs
push
sbb
push
push
icebp
dec
dec
xchg
idivb
pop
es
or
xlat
enter
xlat
jmp
inc
in
sub
sbb
and
and
aam
push
adc
repnz
or
dec
or
pop
mov
mov
decl
mov
adc
nop
out
sub
aaa
adc
jmp
cld
shl
and
inc
push
inc
inc
sbb
and
cwtl
fs
ds
push
xor
aas
inc
mov
add
loopne
xor
adc
scas
inc
sub
pop
pop
adc
pop
xor
fidivl
mov
mov
outsb
mov
mov
mov
and
mov
and
push
lea
aam
pop
adc
or
sbb
push
add
and
loope
daa
and
movsb
lret
adc
pushf
pop
or
sbb
stos
daa
pop
push
xchg
sbb
mov
pop
cmpb
lahf
dec
inc
insl
inc
mov
xor
nop
push
in
dec
enter
adc
lret
fadd
inc
inc
or
pop
xor
pop
push
dec
dec
imul
add
dec
movsb
inc
fwait
dec
sub
push
lock
pop
add
hlt
in
dec
les
jmp
add
icebp
pop
cmp
jo
sub
cltd
in
bound
mov
jno
and
add
sbb
cltd
pop
add
xlat
pusha
xchg
dec
fbld
mov
add
leave
lea
xor
pop
push
xchg
inc
push
movsl
sbb
mov
dec
jmp
das
jne
push
adc
add
jbe
add
dec
sbb
pop
sub
sbbl
sub
shlb
ds
jmp
movsb
adc
lods
sub
popa
pop
mov
inc
test
cs
mov
mov
add
stos
sub
sub
pop
jp
cmp
push
pusha
add
sarl
adc
adc
jmp
inc
push
dec
mov
mov
mov
pop
adc
sub
adc
sbb
lock
add
and
dec
push
push
jmp
push
test
sbb
leave
add
jo
sub
inc
cmp
jo
xchg
pop
sbb
and
add
je
rolb
mov
lea
cmpb
pop
inc
pusha
cmp
pop
mov
sbb
adc
movsl
xor
nop
push
scas
in
xor
or
xchg
or
and
hlt
lds
in
pop
inc
dec
pop
mov
sbb
add
fcomp
arpl
xlat
push
aam
xchg
push
jb
dec
adc
cli
add
pop
jmp
mov
stos
movsl
leave
addb
xor
icebp
leave
sbb
push
add
cmp
add
sbb
add
mov
lret
and
pop
ret
adc
sbb
add
sbb
jns
cli
pop
add
xor
clc
rolb
aas
push
mov
jge
jb
add
shll
sbb
and
repz
insl
loop
dec
in
jae
mov
pop
add
mov
pop
pop
inc
hlt
lret
push
test
push
add
xlat
ret
sub
pop
roll
and
test
jecxz
fdivr
push
xchg
scas
xchg
push
cmp
sub
js,pn
movsb
inc
xor
data16
push
push
push
jbe
push
cmp
dec
je
or
fndisi(8087
adc
sbb
mov
fsubl
iret
xor
sbb
xor
hlt
out
or
cli
add
out
shlb
mov
sub
or
or
pushaw
push
inc
cmp
jnp
inc
push
dec
dec
push
rcrb
jmp
sti
pop
pop
push
sub
cmp
add
jbe
push
xor
xchg
adc
add
and
movsl
and
push
lahf
mov
rcrb
push
js
ljmp
pop
push
sbb
or
cmpl
xchg
in
call
mov
mov
adc
test
or
jae
push
xor
jge
mov
jg
or
in
pop
scas
pusha
push
add
imul
out
js
aam
shl
inc
cmpb
test
nop
add
add
sub
push
push
clc
dec
or
ret
clc
call
push
int
inc
jno
imul
sti
dec
ret
sar
add
loop
out
rolw
mov
bound
xchg
out
push
fdivrl
pop
ja
add
add
adc
mov
inc
enter
dec
mov
pop
mov
push
insl
movsb
dec
xor
ret
xchg
jo
jns
sub
add
stos
cmp
nop
in
insb
sub
add
cld
mov
push
adc
fildl
push
in
bnd
daa
rcrb
test
pop
test
and
lods
mov
lcall
sub
inc
sub
movsb
mov
mov
mov
xchg
push
mov
ret
cs
and
fdivrl
mov
rol
push
xor
cwtl
adc
inc
bnd
or
push
mov
outsb
xchg
cs
lock
and
out
sub
cmc
ret
cld
sub
inc
or
cmp
inc
mov
jo
push
mov
popf
mov
jae
sbb
mov
xor
je
mov
or
cmp
adc
sub
bound
mov
movsb
lret
xor
sub
mov
mov
cmp
push
pop
mov
xor
std
or
inc
movb
push
sbb
dec
lcall
or
mov
jmp
lret
rolb
ds
xor
test
add
adc
insb
xchg
xchg
dec
mov
jge
push
test
add
daa
push
and
aaa
push
pop
mov
pop
and
cmp
pop
cltd
popa
out
add
lods
pop
cli
xor
mov
dec
add
mov
mov
ljmp
mov
inc
jecxz
dec
addl
or
adc
cmpsb
js
push
xchg
pop
lock
scas
dec
cmp
xchg
testl
movl
pop
loopne
mov
cmc
inc
popf
mov
dec
jl
popf
sub
outsb
add
lods
test
hlt
test
add
push
sbb
pushf
dec
rolb
leave
mov
mov
sub
adc
dec
adc
leave
add
add
dec
adc
insb
or
cltd
inc
sahf
pop
stos
sbb
or
movsb
jb
add
add
mov
je
add
adc
add
mov
sti
loop
aad
fimuls
adc
mov
aaa
xchg
dec
repnz
sub
popa
mov
xor
push
lock
test
ss
fs
add
sub
das
push
adc
popa
xchg
shll
pop
leave
or
lods
mov
xchg
aaa
dec
push
add
push
pop
lock
mov
push
push
push
ret
shrl
xchg
int
sub
daa
mov
dec
lea
and
add
xor
sub
xchg
xchg
hlt
add
lods
dec
xchg
dec
repnz
sbb
xor
xchg
test
mov
cltd
loopne
iret
xchg
out
xchg
adc
lock
stc
pop
xchg
leave
dec
dec
mov
push
pop
les
jo
adcb
cli
lcall
xor
pusha
or
aam
aas
movl
pop
clc
scas
pop
inc
sub
mov
pop
push
lods
sub
addl
push
cwtl
mov
push
fs
scas
adc
and
aaa
mov
pop
imul
sbb
adc
fsubrs
jmp
add
push
and
pop
or
jno
xor
push
jns
aad
jecxz
adc
pop
adc
lea
enter
cmp
or
shlb
jb
hlt
push
add
loop
sub
xchg
ret
adc
testb
arpl
iret
mov
pop
or
mov
popf
sarb
push
ja
xchg
popf
sub
movsb
or
popa
dec
outsb
std
push
add
mov
sbb
or
mov
push
inc
scas
mov
popf
xor
mov
mov
or
cmp
sbb
or
arpl
ret
pusha
mov
test
jo
scas
cmp
or
push
paddd
adc
loopne
jnp
sti
jp
mov
jo
mov
jno
aam
or
cmpsl
pusha
or
inc
aam
jo
imul
notb
mov
sub
add
jnp
popf
and
xor
mov
sbb
and
adc
roll
sbb
pop
ud2
ret
aaa
in
adc
sbb
adc
mov
jno
adc
mov
cmp
xor
pop
dec
xor
aad
cmp
cmp
fs
or
cmp
cmpb
xor
inc
jecxz
fs
movsl
adc
pop
lods
xchg
dec
mov
sub
jne
inc
inc
int3
adc
jne
dec
dec
nop
mov
push
shll
pop
lahf
dec
or
sub
mov
adc
jl
lea
mov
dec
les
fldcw
mov
jg
fsubrl
scas
xchg
adc
cmp
inc
lar
xchg
fwait
das
jp
test
push
lea
cmp
negl
jae
test
jae
ds
mov
icebp
sti
js
dec
push
add
aaa
daa
icebp
mov
inc
mov
xor
jb
push
cmp
ficoml
xchg
or
les
pop
xor
pop
insb
adc
int
jns
jmp
push
aam
rcr
push
fcmovnb
sub
sbb
fldenv
mov
and
adc
pusha
mov
adc
arpl
push
imul
movsb
or
jae
inc
daa
mov
inc
stc
inc
ret
push
and
adc
jl
jne
xorb
cltd
rcll
test
das
test
and
jbe
push
subl
das
and
nop
gs
and
jnp
mov
pushf
mov
sbb
adc
fimuls
jmp
pusha
cmp
pop
ret
jp
push
push
push
xchg
addb
ja
test
shrd
and
push
mov
mov
shlb
lea
shlb
ret
adc
fcmovb
adc
jo
imul
ret
dec
mov
xor
rol
loop
mov
sarb
mov
loopne
push
or
push
call
cmpsl
js
sarb
cld
jecxz
jbe
cmp
add
mov
sahf
imul
nop
dec
pop
cmp
pop
fistpl
aam
popa
jno
mov
out
adc
jl
mov
lret
loope
test
xchg
mov
mov
and
or
mov
cmpsl
xchg
into
imul
dec
add
cmc
dec
or
pop
es
pop
cmp
adc
or
loop
and
jmp
and
out
sub
enter
mov
mov
push
push
cmp
ficoms
and
dec
cmp
popa
mov
dec
add
dec
inc
push
dec
icebp
lret
xchg
leave
dec
in
les
fisttps
cld
pop
shll
or
test
rcr
sbb
and
cmp
popf
mov
jo
and
popf
ja
add
mov
sub
je
sub
scas
pusha
adc
jmp
adc
dec
shrb
cltd
icebp
adc
sub
in
out
stc
or
mov
test
inc
lea
and
jmp
test
dec
loop
in
or
push
add
jmp
repnz
sbb
xchg
pop
and
jge
cmp
daa
and
cmp
in
add
pop
js
xchg
bound
add
mov
popf
mov
aas
jmp
sbb
sahf
push
stos
jge
ret
movsl
xor
adcb
lods
rcll
inc
sub
in
addl
popa
aas
cmp
and
or
pushf
or
loope
jle
subl
xorb
ret
dec
adc
jp
xor
movsb
nop
jmp
ljmp
add
and
dec
pop
test
and
xor
xchg
add
das
sub
push
bound
jne
xchg
xorb
inc
adc
xor
and
mov
xchg
js
sbb
mov
imul
mov
lahf
xor
out
adc
push
adc
or
lcall
pop
ljmp
push
fstpl
jne
push
push
or
xchg
xchg
aas
sub
lcall
xchg
dec
leave
or
icebp
cmp
dec
and
cmpb
push
inc
insb
loop
jns
sbb
add
mov
out
scas
mov
jmp
shll
add
rcll
orl
sti
push
push
inc
and
mov
inc
cmpsb
cltd
jp
pop
pop
or
popf
inc
sbb
push
push
push
lret
add
bswap
add
jge
xor
mov
cmp
out
xchg
add
mov
nop
sbb
ds
lods
push
add
dec
out
xchg
mov
repnz
jne
add
cmpsl
sbb
fdivl
sbb
mov
in
push
xor
push
xor
nop
aad
ss
push
rolb
jne
iret
push
push
nop
sbb
sbb
add
flds
call
iret
jns
test
sub
cmp
push
insb
mov
dec
test
pop
mov
cmp
pop
mov
xlat
push
fldt
dec
js
nop
je
or
je
sbb
aas
jo
add
push
ja
or
jle
lret
push
mov
xor
mov
ret
xchg
outsl
fistl
nop
add
mov
sub
sub
jge
orl
mov
icebp
push
push
sub
mov
popf
sbb
insl
add
imul
or
mov
shrb
fistps
mov
and
fdivs
mov
inc
mov
loopne
ja
fidivrl
inc
cmp
movb
cld
lock
loopne
outsb
push
add
inc
stos
dec
out
int
ror
sbb
add
mov
jne
mov
push
loopew
shrl
xor
data16
movsl
lds
out
movsl
mov
das
or
les
cmp
ret
pop
fcmovu
jle
incb
add
mov
and
mov
sbb
and
ja
xchg
out
add
dec
xchg
lea
push
cmp
sub
inc
pop
lret
jl
ret
pop
aaa
daa
leave
xor
cld
add
pop
loope
or
sbb
in
pusha
ja
aam
xchg
or
cmp
rcrl
xor
lods
mov
lret
add
clc
xchg
aad
repz
jmp
push
adc
sbb
test
in
cmp
sbb
loop
jp
xor
das
or
je
or
xor
sbb
outsb
bound
mov
out
adc
mov
jmp
fildll
mov
mov
rolb
leave
add
ljmp
mov
shrb
mov
and
loopne
loope
xor
mov
adc
add
pop
pushw
push
in
pop
in
data16
or
inc
movl
adc
jo
pop
mov
or
into
rorb
jge
mov
pop
mov
adc
xor
pop
imul
dec
nop
mov
das
lret
add
sbb
and
xchg
sbb
out
push
shr
cs
mov
dec
add
loope
dec
jmp
fiaddl
add
rorb
in
cmp
adc
bound
idivb
cmc
push
or
loop
inc
add
inc
sub
sti
add
movsl
cmp
or
sbb
pop
fsubp
lods
xor
jl
pop
adc
icebp
mov
and
add
lea
jno
and
push
xor
jne
cmpsb
and
or
pop
inc
in
mov
aad
in
stc
push
push
scas
add
pop
push
sbb
xor
add
pop
or
enter
cmpsb
bnd
pop
and
dec
adc
xchg
add
in
cmp
mov
dec
repnz
push
nop
jno
repnz
push
push
clc
fwait
cmpb
bound
adc
sbb
xchg
mov
mov
hlt
movsb
jo
lds
ret
xchg
pop
aas
pop
jle
dec
lods
sbb
inc
rcl
xorb
mov
adc
add
mov
dec
je
push
xor
mull
test
adc
inc
rolb
or
adc
mov
arpl
in
out
xor
or
lock
dec
lods
bound
repz
add
lahf
ds
xor
rorb
push
shrl
int
adc
ljmp
loopne
jmp
sbb
add
or
push
incl
mov
fs
icebp
pop
and
xor
icebp
cmovns
int3
add
outsb
repnz
insl
and
rorl
inc
xlat
fld
pop
sub
js
cmc
mov
and
add
xor
inc
mov
inc
mov
cmp
push
push
push
and
mov
add
jl
and
nop
loopne
fmull
stos
xor
lock
stc
add
xor
aaa
adc
inc
push
and
push
adc
mov
add
test
mov
test
xchg
mov
adc
loopne
ret
jecxz
popa
or
push
adc
dec
or
orl
add
repz
lock
lods
sub
add
loope
aad
sbb
inc
nop
loopne
fdivrl
xor
inc
icebp
lcall
add
mov
ffree
test
popa
sbb
mov
rcl
mov
jnp
or
adc
push
add
push
adc
inc
push
mov
es
pop
adcl
or
inc
inc
mov
jae
js
ds
loopne
inc
mov
sbbl
mov
pop
push
lock
xchg
lods
xor
add
fiaddl
or
in
sbb
clc
mov
out
add
adc
and
mov
xor
add
fisttpl
cmc
cli
sbb
popa
mov
mov
pushf
push
int3
inc
dec
test
imul
push
dec
mov
add
test
insb
or
sub
fstp
xor
stc
aas
ret
and
adc
xor
sbb
xchg
and
and
jno
sti
aaa
add
adc
xchg
sub
sbb
adc
push
push
rep
or
add
ret
push
loope
or
stos
gs
andl
pop
call
or
mov
xor
or
add
das
jecxz
clc
inc
inc
iret
sub
dec
gs
pop
stos
stc
add
cmpb
jne
cmp
test
data16
pop
adc
movb
cmp
lods
loopne
jnp
and
mov
test
mov
lock
lea
fcomps
xchg
and
inc
add
adc
inc
int
inc
inc
push
stos
or
sub
or
pop
adc
je
push
es
jb
mov
loope
and
mov
sub
and
and
call
addb
pop
xor
jno
lret
xor
fisubrs
lcall
ret
fsts
hlt
cmp
jl
cmp
jle
aad
loopne
xor
jmp
lret
es
ret
nop
arpl
xor
or
data16
adc
jge
jmp
mov
pop
push
sub
push
rcrl
cmp
aaa
aas
xor
push
fsts
mov
orb
jns
add
jmp
popl
push
call
mov
xchg
mov
push
cmp
pop
push
or
push
adc
stos
sub
out
adc
add
dec
cmp
mov
or
gs
in
in
mov
sbb
push
jno
add
inc
jg
jge
je
dec
and
xchg
cld
push
add
jmp
dec
sbb
adc
pusha
adcb
add
xor
pop
fsubrs
pop
decl
jb
sbb
mov
mov
out
add
xor
add
inc
mov
int3
enter
cmp
jg
int3
cmp
and
sbb
jns
jns
adc
je
add
shrb
push
lods
sub
push
popf
mov
or
mov
dec
xchg
jl
adc
jae
push
aas
or
mov
push
cmpb
add
inc
jle
fmuls
push
xor
mov
and
cmp
or
mov
xor
cmp
add
inc
cmpsb
lret
addr16
movsb
xor
xchg
push
shl
and
cmc
adc
add
jo
pusha
push
sbb
incl
mov
inc
mov
push
fwait
xchg
ljmp
mov
or
add
sbb
xchg
outsb
pop
dec
push
xchg
add
sbb
push
add
imul
std
fs
fnop
mov
bound
in
ja
pop
push
lea
adc
mov
cmp
lea
mov
nop
push
std
add
imul
add
pop
mov
adc
rorb
sbb
or
add
into
mov
push
inc
or
js
adc
inc
dec
inc
dec
jbe
xor
push
sub
dec
and
mov
mov
push
pop
add
add
dec
sbb
jae
push
xchg
pusha
adc
hlt
lea
xchg
rclb
dec
movsl
bound
mov
mov
fdivl
test
inc
ret
dec
mov
les
in
orl
insl
cld
xor
push
imul
enter
jns
pop
outsl
or
push
insb
mov
je
pusha
ljmp
cmc
dec
inc
dec
pop
push
xchg
or
sbb
cli
sbb
add
dec
movsb
out
sti
adc
inc
xchg
mov
mov
loope
ds
push
cmc
jno
cmp
jl
int
lds
loope
or
push
jge
sbb
cmp
repnz
scas
mov
pop
stc
test
enter
sti
test
jge
shl
ss
outsl
sub
stc
push
xor
mov
cli
lcall
popa
decb
push
test
jle
adc
dec
das
mov
jne
xchg
inc
mov
out
adc
les
push
sbb
rcrb
inc
push
and
and
dec
rorb
pop
sub
aas
dec
sub
cmp
xlat
outsl
xchg
lret
inc
dec
ljmp
lret
aas
dec
push
push
pop
gs
outsb
xchg
pop
pop
jg
fs
dec
aaa
dec
lods
push
xor
dec
jo
pop
js
dec
push
cltd
movsb
addb
nop
incl
push
push
add
add
xchg
pop
andl
adc
sarl
mov
popa
pusha
xor
jp
outsl
xorb
cmp
push
scas
push
cmp
pusha
jbe
mov
movsl
and
out
mov
nop
aaa
pop
xor
rclb
je
xlat
jns
jle
jp
push
sub
scas
adc
js
inc
mov
push
lock
push
adc
mov
xor
xor
or
movsb
adc
push
jno
mov
sub
inc
loop
dec
cli
inc
and
pop
shrl
enter
es
lods
pop
mov
inc
sub
sub
push
loopne
inc
je
xchg
mov
fcoms
pop
mov
adc
mov
jo
sub
jo
fld
arpl
dec
movsl
andl
adc
sbbl
popa
jnp
neg
push
pop
cmp
pop
movl
cmp
pop
or
and
in
je
dec
push
cmpb
xor
inc
fnsave
jle
sub
nop
sbb
ds
push
inc
add
fs
pushf
cli
sub
out
push
test
cmpsb
sub
jae
icebp
imul
loopne
push
xor
dec
cltd
prefetchnta
push
loopne
sbb
adc
lods
icebp
jnp
mov
jg
add
icebp
jb
cmp
mov
movb
jnp
mov
cmp
je
cmp
pop
jecxz
add
aas
jne
push
sbb
mov
shlb
mov
jge
subl
or
arpl
push
inc
or
stos
arpl
push
daa
sahf
mov
cmp
test
push
addl
jb
push
scas
popa
add
xor
loope
pop
mov
shl
pop
add
push
add
inc
xor
test
push
jle
mov
jae
in
add
and
adc
aad
call
cmp
inc
sbb
add
push
xor
cmp
clc
push
int
js
adc
shrl
es
mov
or
out
mov
test
hlt
mov
fldt
xlat
inc
adc
adc
sub
mov
mov
popf
sbb
cmp
ja
push
add
push
push
push
stos
mov
push
fwait
sbb
sub
add
add
xchg
fcoms
stc
mov
push
push
mov
fcoml
daa
call
les
dec
sub
push
inc
xchg
pop
dec
mov
and
dec
xchg
loopne
test
jecxz
jmp
cmpsl
push
sub
mov
call
sbbb
mov
cmp
push
loopne
in
js
mov
dec
mov
pop
insb
and
jo
pop
add
mov
subl
sub
add
add
clc
fdivr
in
loope
dec
sub
add
or
xor
cmpsl
cmp
xchg
rolb
xchg
push
dec
or
sub
test
imul
inc
push
int3
dec
inc
les
je
dec
das
inc
in
sbb
add
adc
pop
pusha
jne
stc
mov
pop
mov
or
and
jle
or
or
loope
push
fmuls
imul
jne
arpl
sbbl
dec
std
sub
sbb
and
xor
fwait
add
imul
jo
les
xor
inc
mov
lahf
andb
sub
mov
or
pop
shll
add
inc
xchg
xor
push
sbb
mov
adc
fisttps
jo
jle
cwtl
dec
mov
push
add
jno
pop
das
inc
sub
adc
das
sub
mov
jnp
or
sub
pop
pop
dec
imul
test
fnstsw
adc
cmp
pop
xchg
ds
lahf
sarb
adcl
pop
or
popa
dec
or
movsl
mov
fimuls
xchg
or
cmp
push
movsb
cwtl
pop
in
add
adc
mov
pop
pushf
mov
jne
test
mov
inc
nop
push
inc
xchg
shlb
adc
mov
adc
push
jl
sub
pop
or
rorl
imul
stos
iret
fdivrs
sbb
jl
js
scas
inc
hlt
xor
mov
jne
adc
scas
gs
push
push
sub
xor
rclb
adc
out
add
cltd
inc
enter
jp
jmp
inc
pop
or
fimuls
popf
inc
ret
sbb
cs
sbb
push
cmp
inc
push
add
dec
add
mov
clc
inc
in
test
cmp
std
fsub
and
mov
bound
call
out
sub
imul
iret
push
ss
adc
les
aam
xor
sub
js
dec
mov
mov
inc
sub
and
adc
je
insb
xchg
rcrl
lcall
or
pop
jl
push
clc
pushf
dec
sub
pop
inc
daa
pushf
and
add
shr
mulb
pop
lahf
test
or
insl
and
scas
lret
dec
bound
or
xchg
dec
pusha
pop
pushf
and
pop
clc
xor
ljmp
js,pn
sub
jmp
test
bound
xor
dec
or
jne
pop
pusha
mov
pop
push
popa
bound
cmp
inc
cwtl
xor
lret
fs
or
addb
les
adc
popa
roll
ss
and
into
cmp
in
shrb
mov
push
out
or
mov
inc
add
sbb
inc
sbb
dec
jae
jo
mov
addl
add
add
inc
fbstp
and
das
js
ret
int3
mov
addl
cld
pop
jno
or
inc
pop
inc
jo
xchg
cmp
lcall
fcmovnu
shll
inc
aas
or
inc
into
in
and
arpl
xchg
int
and
ror
adc
enter
xor
push
cli
jg
mov
fimuls
daa
xchg
push
pop
and
and
sbb
mov
pop
push
sbb
ret
push
rolb
push
xorl
fcomps
mov
jno
stc
jns
pop
movsb
loopne
pop
jae
hlt
mov
or
aaa
popa
add
jo
push
jecxz
add
or
add
sub
adc
adc
jp
dec
xor
push
cmp
mov
and
fildl
sbb
insb
or
xchg
iret
add
xor
inc
push
push
and
bound
xor
jb
inc
adc
shll
or
add
xor
dec
lahf
push
or
or
and
add
dec
xchg
mov
arpl
stc
sbb
in
dec
add
gs
or
popa
mov
mov
test
xchg
mov
add
test
or
jnp
das
outsb
or
sub
or
in
dec
outsl
sarl
pop
ret
in
and
inc
push
sbb
xor
and
in
shl
add
cmpl
int3
pushf
and
pop
imul
sarb
adc
daa
xor
push
push
mov
sub
mov
mov
xchg
add
bound
push
data16
mov
dec
mov
or
push
xchg
fsubrs
mov
imul
sbb
inc
add
mov
stos
mov
pcmpeqw
fistpll
ret
ret
or
ljmp
xchg
sbb
fisttps
fnstcw
in
lds
and
push
push
cmp
xchg
dec
mov
add
mov
inc
clc
imul
bound
dec
mov
add
sub
mov
stos
and
and
inc
pop
push
imul
jmp
or
inc
jmp
dec
add
pop
ror
mov
popa
push
fs
test
lods
dec
pop
pop
test
inc
and
sbb
adc
clc
ljmp
shrb
ljmp
adc
in
nop
mov
jne
ss
sub
mov
dec
dec
mov
daa
sub
or
in
addl
imul
add
enter
mov
mov
push
shrb
or
push
push
clc
push
push
pusha
cmp
ficomps
inc
adc
mov
add
ret
aas
and
arpl
pop
imul
jns
cmpl
rol
add
in
sbb
or
add
mov
push
in
sahf
into
xor
adc
mov
imulb
sub
cld
ret
inc
or
sub
lods
nop
cmp
cmpsl
adc
cs
ljmp
push
cwtl
addb
xor
jbe
mov
sahf
cmp
rol
xor
xchg
xor
cmovo
xchg
mov
xchg
jne
pop
cs
stos
sbb
stos
jmp
dec
dec
adc
mov
popf
and
ja
pop
cli
inc
jl
jecxz
rolb
add
sahf
fldt
into
push
pop
test
mov
or
inc
inc
ret
mov
in
add
push
jecxz
mov
xchg
rcrb
or
sbb
mov
cmp
xchg
mov
xchg
push
test
push
scas
jbe
test
fnstcw
sbb
rclb
xchg
ja
sbb
nop
pop
inc
ss
aam
cmp
jns
pushf
push
or
iret
lret
push
add
pop
mov
repnz
push
add
inc
rclb
dec
mov
dec
fisubs
gs
inc
add
jle
add
loope
and
jle
adc
and
and
lods
in
cmp
call
es
je
mov
add
popa
mov
push
mov
cmp
or
mov
inc
and
add
and
add
rorl
aas
cmp
mov
xor
jo
fldt
dec
int
std
add
sub
scas
lea
sbbl
mov
cmp
adc
shlb
hlt
pop
popa
lods
arpl
stos
dec
test
bound
push
testl
mov
and
add
add
cmp
aad
iret
xor
loop
sub
mov
push
push
push
loop
test
andl
cld
insl
inc
mov
xor
adc
xchg
les
lods
jle
dec
and
mov
test
test
and
clc
xlat
mov
sub
push
xor
arpl
mov
inc
jo
bound
push
cmpsb
push
mov
push
addl
pushf
mov
inc
das
or
les
sbb
loopne
cs
xor
test
or
mov
ljmp
or
push
int3
enter
pusha
or
lcall
add
int3
fadd
cmp
lods
imul
insl
add
mov
shll
test
jo
cmp
cmp
xor
aam
jmp
add
jl
or
mov
out
daa
hlt
jbe
cmp
adc
xchg
xchg
mov
ljmp
xchg
push
inc
mov
jl
cwtl
cli
inc
mov
fwait
xor
add
enter
adc
mov
cltd
sbb
dec
in
add
jb
cmp
test
pop
lods
js
push
popf
inc
add
cmp
mov
mov
aam
dec
sbb
pop
aam
push
or
and
mov
pop
add
sub
lock
fdivr
ffree
jg
cmp
jg
pop
add
pop
or
sbb
lret
sbb
lods
lcall
add
lea
mov
mov
stos
ds
aad
add
test
pop
cmp
hlt
push
mov
fsub
inc
add
add
add
aam
in
cmp
sbbb
pop
and
repnz
hlt
xor
adc
sub
and
push
aam
cmp
dec
sar
adc
sbb
cwtl
and
rcr
fdivrs
mov
sub
or
sbbl
xor
rcrl
loopne
loopne
inc
cs
or
or
sbb
fmull
lret
jae
xchg
fcompl
jecxz
jns
fsub
or
mov
cltd
lods
or
or
mov
sti
or
adc
pop
push
xchg
sub
adc
or
inc
adc
cs
nop
int3
push
sti
inc
lock
add
xchg
mov
push
cmpb
push
std
pop
les
adc
pop
mov
cmpsb
push
shll
jae
aas
fiaddl
fidivs
dec
aas
cmp
shr
xorl
in
or
inc
daa
push
mov
pusha
sub
inc
clc
fdivrl
inc
inc
cmp
and
popf
jmp
lods
lds
ficompl
out
rol
test
call
or
test
pop
xor
rcll
ret
loopne
push
je
jecxz
inc
inc
adc
push
sub
xchg
jo
xor
xor
mov
pusha
lea
prefetcht0
fwait
pop
add
es
pop
cmp
mov
push
je
pop
pop
mov
mov
in
mov
mov
clc
call
mov
ss
adc
inc
push
push
mov
push
push
inc
push
jmp
and
add
mov
popa
aam
or
loop
and
inc
sbb
and
sarl
jns
sti
loope
lods
test
mov
call
jns
call
push
or
pushf
daa
add
push
repnz
mov
scas
sbb
les
add
outsb
push
inc
add
pop
lods
in
push
dec
pusha
sbb
sbb
mov
cwtl
notb
push
push
pop
loopne
data16
adc
insb
outsl
mov
test
push
push
adc
les
xchg
pop
pushf
in
dec
loopne
pop
and
addb
adc
xor
mov
aas
dec
cmp
sbb
xorb
add
aas
pop
pop
ret
push
in
sbb
ss
cwtl
jne
mov
lret
pop
lcall
cs
pop
or
sub
push
cs
cs
lret
or
loop
movsl
lret
add
adc
inc
out
add
pop
adc
in
adc
dec
pushl
inc
or
rclb
lret
pop
sti
les
sahf
mov
adc
push
dec
or
test
or
repnz
fbld
stos
and
mov
scas
mov
sbb
mov
int
popa
bound
add
jl
cmp
cmp
or
scas
loope
mov
lahf
cmpps
or
push
daa
sbb
mov
in
cmp
jb
inc
mov
ds
or
scas
subb
mov
cltd
sub
fs
les
push
in
dec
mov
sbb
xor
fsubrp
mov
add
mov
push
add
dec
add
and
es
call
sub
sbb
call
mov
or
daa
test
and
daa
add
sub
mov
aad
adc
mov
push
addr16
fists
ja
ret
fidivs
jnp
push
ljmp
jb
push
test
push
lods
dec
popa
push
test
sbb
insb
aam
cmp
or
clc
lcall
int3
sub
and
test
aad
shrb
xor
or
out
mov
dec
dec
dec
js
hlt
jnp
mov
pushl
adc
dec
in
jnp
sbb
adc
xor
inc
mov
das
aas
js
pusha
in
inc
adc
jg
or
add
sbb
jne
in
or
dec
or
arpl
aas
enter
je
in
jl
push
aas
loop
adc
js
or
push
adc
lahf
cs
add
orl
push
je
insb
aaa
fidivrs
mov
inc
mov
mov
hlt
lret
das
enter
add
shl
lea
je
add
mov
dec
addl
sbb
jle
xchg
mov
bound
dec
pop
inc
push
nopl
jnp
dec
aas
cmp
mov
inc
and
add
push
sbbb
idivb
push
sbb
sahf
cmp
mov
cmp
fildll
and
add
lock
jecxz
cwtl
jge
xor
xchg
lcall
cmp
sub
and
pop
or
loope
test
xlat
imul
inc
and
pop
push
test
adc
push
lret
add
push
lock
mov
enter
lock
adc
sbb
or
sub
cmp
data16
test
inc
xchg
hlt
mov
testb
shlb
jns
add
test
stos
adc
inc
jle
lret
inc
mov
xor
sub
in
pop
or
sub
pop
cmp
lret
cmp
push
scas
inc
loop
sbb
push
add
dec
sub
or
push
stc
pop
inc
xor
or
ss
cmp
xchg
mov
seta
enter
or
and
or
lea
inc
xor
xor
mov
jg
xchg
lock
inc
std
mov
mov
ret
dec
xchg
xor
adcb
pop
push
cmpsb
and
push
addb
mov
fwait
scas
inc
adc
sub
shl
sbbl
jno
push
xor
jg
sub
cld
or
inc
xor
js
xchg
jno
fdivs
outsl
sub
sub
add
push
add
js
push
xlat
push
jl
fdivl
mov
inc
or
insb
xchg
sub
xor
dec
or
mov
into
jbe
push
add
or
push
dec
add
sub
pop
shlb
or
mov
mov
pop
fstpt
cwtl
les
arpl
dec
mov
sbb
or
flds
lds
lock
add
and
pop
add
push
sub
push
dec
loopne
sarb
mov
cmp
jp
and
sub
addr16
pusha
add
cs
sbb
shlb
push
fcomps
and
inc
pop
nop
and
pop
js
dec
push
movsl
and
jae
out
push
inc
fidivl
mov
loopne
repz
cltd
adc
hlt
mov
pop
loopne
arpl
out
or
dec
gs
mov
rolb
loop
inc
ret
push
inc
jno
adc
cmp
lds
icebp
sarl
mov
push
xchg
mov
mov
dec
ss
xchg
or
mov
sbb
insb
in
jle
loopne
fs
or
dec
subl
popa
rolb
dec
xchg
lret
lds
or
push
push
rorl
push
popf
jg
mov
in
or
sbb
sbb
repnz
pop
sbb
sbb
jne
inc
or
or
fsubr
mov
or
leave
push
mov
pop
or
fstps
shl
fs
or
popa
inc
jo
test
jl
push
ss
or
add
or
test
inc
sar
fildll
cmc
inc
xchg
dec
xchg
inc
push
idiv
loop
nop
movl
mov
add
inc
xchg
or
and
pop
enter
enter
cmp
pop
pop
enter
jl
and
enter
enter
mov
in
in
pop
sub
notl
inc
cs
pop
cs
or
cmp
jmp
push
mov
scas
sbb
cmp
inc
push
cmp
and
int3
xor
stos
push
fidivl
cmp
pop
mov
mov
add
fisttpl
popa
inc
ret
andl
in
sahf
movl
or
inc
dec
popf
jo
adc
xchg
enter
pusha
jmp
xor
lret
stc
pop
je
pusha
xor
pop
add
push
sarl
mov
sar
and
mov
inc
inc
data16
mulb
adc
es
aam
cmpl
or
inc
imul
add
int3
pop
push
adc
dec
enter
cld
cmp
inc
adc
push
push
push
enter
dec
mov
lods
test
xchg
ds
sete
and
adc
xor
xchg
xor
push
sub
movsl
sbb
lret
cmc
imul
add
push
mov
dec
movb
sbb
push
mov
and
ret
dec
add
and
divb
xor
hlt
adc
fwait
mov
loop
movsl
and
sbb
sbb
or
std
into
dec
sub
pop
adc
xchg
aaa
mov
jge
adc
daa
sarb
gs
jbe
inc
negb
dec
lock
cmp
sbb
lea
xor
mov
jle
xor
or
daa
push
movsb
movsl
leave
jb
push
js
cmpsb
sbb
inc
lock
mov
xor
lock
fcmovnb
cmp
and
jge
add
jl
sbb
push
popf
xchg
xchg
je
sbb
inc
sahf
push
inc
xchg
in
inc
push
mov
push
or
adc
or
inc
xor
imul
lahf
xorl
dec
xchg
int3
cmp
xchg
push
popa
lahf
sbb
or
and
cmp
outsl
push
fadds
mov
pop
mov
add
lret
xor
push
sbb
mov
push
push
inc
es
addr16
and
add
cld
push
movsl
push
push
aas
mov
addb
mov
aam
push
movsl
push
movsl
mov
cmp
bnd
pusha
lock
pop
push
cmpsl
push
test
cmp
je
cmpsl
dec
cmp
jbe
jno
lods
loopne
cmp
mov
nop
mov
and
jecxz
lods
rcll
push
dec
faddl
mov
sub
sar
js
or
adc
test
dec
ja
test
adc
pop
repz
std
adc
dec
sti
jge
mov
inc
sbb
loopne
push
or
bound
je
jae
dec
jp
lret
jae
adc
push
jne
insb
adcb
mov
cmp
icebp
sbbb
aam
add
add
xor
cmp
sbb
or
sbb
mov
or
in
adc
sbb
or
jge
pop
cmp
mov
sub
jo
sbb
jle
push
pop
mov
xor
dec
push
scas
lock
mov
push
or
xor
sbb
adc
outsb
test
push
in
call
cmp
rolb
ljmp
sbb
in
iret
loopne
in
or
jecxz
xor
push
add
inc
les
jne
cmp
mov
mov
adc
add
add
or
fwait
addb
sbb
cltd
mov
pusha
and
es
lock
xchg
popa
hlt
lods
push
sub
xor
insl
cld
push
push
jne
sbbl
outsl
adc
jne
idiv
push
push
jno
je
aas
or
sub
cmp
popa
sbb
mov
mov
pop
jne
imull
int3
push
addl
sub
fwait
inc
in
mov
test
jp
jmp
mov
adc
dec
mov
fdivrs
ss
adc
adc
or
or
fld
shlb
push
or
icebp
es
fcoml
and
cmp
push
lar
jnp
icebp
xchg
ss
dec
and
push
push
cmp
mov
dec
out
roll
movb
repnz
xor
gs
inc
lods
xlat
cmp
dec
lea
jnp,pt
push
pop
jl
jmp
mov
xor
dec
fcompl
outsb
leave
mov
shll
dec
sarb
in
cli
movsb
lea
je
push
sbb
jl
push
and
es
movsb
sbb
jae
out
orb
or
scas
rcll
fs
xchg
or
cmp
inc
inc
in
xor
lods
xchg
jne
jmp
out
inc
inc
pop
lcall
pop
adc
and
adc
ljmp
rcrb
and
add
das
lock
cmp
pop
ret
sbb
pop
or
test
dec
inc
xchg
and
mov
sub
cmpsb
or
shlb
outsb
push
push
push
or
push
rorb
dec
movsb
aas
xor
xor
push
lods
pop
pop
sub
pop
popa
xchg
in
add
mov
sbb
push
pop
gs
ror
into
popf
daa
add
dec
lods
or
jp
mov
je
sub
scas
add
scas
dec
adc
fcomps
push
mov
or
call
andb
or
cmpsb
or
push
adc
and
lock
fnsave
cmp
movsl
pop
cwtl
lock
out
sbb
movsb
test
cmpsb
xlat
in
and
rorb
adc
mov
test
shrb
mov
pop
ror
xchg
sarl
adc
and
cs
test
cmp
pusha
cmpsb
mov
sti
je
fldl
push
pop
push
cmp
sbb
push
push
lcall
cwtl
sub
inc
int
push
cmp
loopne
lcall
jo
dec
call
test
cli
loopne
clc
rolb
dec
inc
xor
add
push
fwait
ljmp
push
push
enter
aam
cmpsl
mov
bound
test
rolb
push
push
addl
jl
sub
jno
test
inc
sub
dec
faddl
push
pop
pushf
mov
stc
mov
fcmovu
push
push
rorl
and
pop
dec
xor
inc
movsl
flds
adc
jmp
and
sub
jge
mov
dec
mov
xchg
fldl
add
lods
fdivl
inc
jb
in
mov
add
and
loopne
xchg
xchg
mov
inc
sahf
and
in
xor
arpl
in
mov
push
push
mov
fwait
jmp
mov
adc
lret
cwtl
dec
les
jl
inc
and
inc
add
pop
test
movsb
icebp
dec
sbb
adc
icebp
pop
jae
lahf
sarb
mov
imul
shrb
pop
es
insl
jbe
jns
fimull
shlb
adcb
dec
rclb
pop
xchg
add
xchg
jle
imul
sub
shrl
in
mov
xchg
sub
test
es
mov
push
bound
test
and
or
mov
enter
lock
xor
enter
inc
push
mov
leave
or
jne
push
or
push
xor
mov
xchg
mov
xlat
sti
negl
or
sub
lea
add
mov
and
mov
call
xchg
or
lock
cmp
mov
lahf
inc
leave
inc
xor
test
xchg
shll
adc
rcrb
sub
mov
xchg
push
enter
and
int
comiss
dec
pop
push
jne
inc
enter
push
push
xchg
inc
das
pusha
add
adc
add
or
and
inc
scas
adc
xor
and
fstpl
icebp
in
andb
jns
add
jecxz
or
movsl
push
mov
cbtw
clc
mov
xor
insb
cmp
adc
cmp
mov
es
and
pop
dec
push
push
and
dec
cmp
sbb
outsb
cmpsl
xchg
shrb
push
sbb
xor
xchg
xor
xchg
int3
mov
pop
push
call
dec
imul
mov
scas
and
cs
sahf
xor
add
in
mov
dec
sti
push
ret
and
sub
ret
inc
std
shlb
cmpb
adc
xorl
jnp
jae
ss
ja
dec
mov
push
add
dec
or
lock
lock
xor
adc
push
shlb
xor
test
roll
loop
stos
sub
or
add
pop
imul
and
rolb
xor
inc
out
and
pmulhuw
call
adc
adc
mov
xor
pop
and
adc
adc
inc
lds
nop
test
or
inc
sbb
cmp
mov
cli
movsl
sbb
dec
fnstcw
sbb
xor
pop
out
or
pop
sbb
movb
mov
es
pop
fcoml
pop
jecxz
inc
and
ss
push
mov
or
cwtl
dec
mov
and
and
adc
in
enter
loopne
in
xor
test
pop
scas
xor
jo
xor
ud0
push
sub
push
out
mov
push
stos
add
shrb
push
shl
adc
mov
jge
mov
or
or
pop
mov
xor
pop
jecxz
add
xchg
lea
xor
out
mov
or
clc
je
pop
add
in
push
mov
call
pop
and
call
pop
pop
test
test
adc
mov
mov
lods
push
push
pop
mov
lea
xlat
icebp
inc
movsl
xor
push
mov
cmp
imul
aas
test
mov
add
addb
pusha
push
add
iret
out
or
add
shll
sub
xchg
icebp
push
mov
and
jno
sbb
mov
orb
adc
mov
add
add
mov
mov
add
roll
cwtl
mov
mov
jb
dec
push
xchg
xor
dec
add
xchg
in
ror
add
test
jo
xchg
adc
mov
push
xor
and
mov
xchg
and
fwait
jno
inc
cmpsb
cmp
loopne
and
icebp
subl
dec
in
mov
xor
cmpsb
imul
sub
and
and
clc
icebp
push
ret
les
pop
sub
filds
mov
or
push
cmp
sbb
push
or
add
pop
and
inc
xchg
lahf
sbb
stos
and
scas
out
cld
sub
jnp
jg
mov
mov
mov
sbb
or
scas
inc
gs
mov
mov
bound
or
or
add
adc
push
xorb
adc
add
je
cmp
or
movb
adc
mov
mov
jp
pop
or
cld
push
adc
and
adc
shlb
insb
jge
roll
out
dec
out
fcompl
inc
push
movsl
add
mov
adc
stos
cltd
push
mov
orl
xchg
inc
bound
jge
mov
icebp
fistpl
mov
push
and
sbb
add
mov
push
out
jns
mov
ds
mov
sbb
or
rorl
add
and
sub
or
and
adc
pop
push
imul
xchg
or
pop
lods
stos
mov
add
and
pop
push
jns
pop
push
xor
lea
push
lock
sbb
fmuls
mulb
repz
pop
push
jns
hlt
mov
dec
push
push
xor
add
jne
xchg
mull
xor
pop
xchg
and
xor
jb
cmp
or
adc
or
mov
xchg
or
pop
fnsave
cmpsb
push
xchg
pop
in
adc
addb
addl
into
xchg
mov
pop
sbb
pop
pushf
mov
and
pop
push
sub
sbb
nop
iret
mov
mov
add
add
or
push
sahf
subl
add
pop
xor
ret
inc
or
roll
movsb
bnd
dec
xchg
adc
xor
push
cmp
mov
jo
mulb
push
mov
and
push
xor
jne
iret
dec
and
mov
xor
rolb
fnstsw
xchg
jl
ret
daa
rcrl
xor
jnp
and
les
pop
aaa
xor
ret
sbb
mov
lods
inc
sbb
sbb
push
fcomps
roll
scas
and
fiadds
push
mov
adc
inc
stos
push
jo
aam
mov
scas
dec
xchg
mov
and
xor
pop
call
into
fiaddl
adc
ds
push
push
das
jl
push
popa
push
push
daa
or
jge
pop
push
in
and
adc
xchg
jp
gs
or
js
frstor
adc
daa
push
xchg
jo
mov
mov
icebp
adc
pop
cmp
or
insb
fsubrl
rcrb
inc
xor
dec
inc
and
nop
xor
inc
sbb
loope
push
cs
push
fisttps
jne
sbb
adc
sub
pop
or
test
stos
adc
push
movl
in
ret
movl
rorb
aad
inc
mov
push
mov
fs
jge
in
push
sub
das
mov
addb
out
and
or
pop
bound
add
push
dec
inc
arpl
sbb
dec
jle
es
test
aaa
or
mov
scas
loop
or
mov
push
rorb
shrb
add
dec
in
push
add
cmp
sub
sahf
lret
xorl
add
adc
mov
ret
sub
or
xlat
pop
movsl
les
xorl
leave
push
add
mov
ja
sub
addb
inc
sub
adc
cltd
in
xor
push
or
rcr
or
scas
decl
xor
push
inc
sub
adc
add
mov
push
and
mov
ja
pusha
add
subl
mov
dec
mov
dec
inc
dec
pop
add
pop
adc
stos
xchg
pusha
xchg
movsb
or
push
push
daa
nop
fwait
and
jmp
push
out
dec
mov
clc
mov
xchg
movsb
push
add
jmp
enter
sub
sub
add
cmp
jle
js
cltd
pop
jne
push
jbe
pop
sub
pop
push
xor
xor
add
cmp
or
push
add
sbb
popf
and
out
notb
adc
pop
inc
push
lds
adc
inc
and
jne
adc
jp
jmp
jbe
jl
jbe
add
adc
adc
jae
lods
or
sbb
sbb
dec
push
sbb
mov
mov
add
cltd
clc
xchg
leave
sub
mov
adc
add
roll
sub
inc
popa
sti
cmpb
push
pop
ret
adc
jge
rorb
daa
dec
sub
nop
div
in
mov
inc
push
sar
aam
or
add
pop
sbb
cmp
inc
nop
ficompl
push
or
push
movsl
dec
lcall
imul
fadd
mov
sub
and
imul
js
inc
enter
pop
cmp
fmuls
sbb
inc
or
sub
aam
adc
imul
jbe
and
add
cmc
adc
insb
incl
pop
xchg
lahf
mov
shlb
or
inc
lret
inc
insb
pop
xchg
shll
and
nopl
mov
or
pop
inc
in
dec
das
sbb
xor
sbb
sahf
or
mov
sub
push
pop
xor
and
sub
mov
out
sbb
les
mov
jmp
addr16
lcall
ret
add
adcb
fisubrl
and
sbb
movl
addb
shll
add
sub
mov
xor
test
push
out
add
mov
cwtl
jp
mov
xchg
push
loopne
xchg
xor
cltd
mov
sbb
adc
adc
ret
ficompl
xlat
push
cmp
inc
sub
cmp
lcall
push
fldcw
push
div
sbb
adc
adc
les
adcb
xchg
cmp
sahf
adc
arpl
scas
adc
adc
xor
bound
stos
dec
sub
loopne
xor
loope
xor
inc
roll
outsl
cmpsb
pusha
sti
or
mov
mov
pop
into
nop
icebp
push
mov
adc
xor
xor
mov
or
lock
lods
lock
incb
mov
add
lods
sbb
movsb
aaa
pop
cmpb
adc
sbb
imul
lods
jmp
insl
adc
mov
mov
fsubrp
pop
lea
into
out
sahf
push
cmp
pop
or
sub
inc
mov
or
add
mov
loopne
enter
jge
fsubs
push
fnstenv
push
fadds
mov
sbb
or
jmp
jge
pop
subl
sub
stos
lret
cmpsb
or
add
adc
pop
mov
xchg
inc
popa
mov
out
and
cwtl
inc
and
ds
mov
inc
push
push
into
add
test
push
nop
pop
push
inc
fcompl
mov
cs
mov
cmpsl
and
sub
loopne
leave
adc
clc
jbe
adc
jg
data16
lock
sbbb
jo
je
mov
inc
sbb
jbe
jo
bound
cmp
dec
xor
pusha
sbb
jl
sbbl
lahf
orl
adcb
lea
mov
and
js
add
dec
ljmp
jbe
or
in
out
adc
pushf
xor
inc
sahf
or
xor
inc
pop
shrb
or
test
mov
dec
inc
jg
add
je
add
fsubr
sbb
push
not
push
mov
mov
jbe
jne
ja
adc
cmp
cmp
jne
adc
inc
jne
repz
sub
andl
sub
mov
or
adc
inc
or
mov
mov
icebp
sbb
sub
ficomps
inc
add
or
dec
jmp
mov
jne
lret
add
aam
je
push
pop
mov
mov
mov
and
push
clc
cmp
jae
push
jecxz
or
aaa
add
jmp
pop
test
inc
dec
and
push
adc
in
inc
rorb
stos
or
sbb
ret
test
inc
push
hlt
ficomps
push
inc
pop
mov
dec
test
push
adcb
add
cmp
rolb
or
inc
ret
dec
in
adc
loopne
sbb
loop
dec
push
mov
cmp
push
sbbb
cld
inc
hlt
xchg
sub
sub
sbb
nop
push
pop
loopne
je
or
sbb
sar
inc
rorb
icebp
push
jbe
adc
shll
adc
inc
sub
arpl
sbb
xor
test
cs
ja
xor
movsl
mov
sarb
or
xor
adc
ret
enter
movl
inc
jns
jo
xor
insb
and
aaa
pop
xor
and
pop
daa
or
mov
sub
dec
sbb
in
pop
dec
lods
push
jno
push
lods
in
xor
sbb
mov
inc
pop
mov
insb
mov
out
les
insb
jo
orb
and
xor
fs
pop
dec
and
adc
fucom
leave
cmp
dec
out
xchg
xchg
pop
cmp
daa
pusha
mov
enter
jno
adc
mov
jb
repz
cld
jb
das
push
push
mov
xlat
sbb
mov
sub
jbe
lods
cli
pop
pop
aam
test
or
xor
add
mov
lods
mov
push
and
or
cmpsb
stc
xor
pop
push
daa
jae
das
jl
in
fs
cmp
mov
je
jp
sbb
test
adcb
add
pop
push
lcall
pop
add
push
pop
jg
adc
sbb
lea
jne
cmp
jmp
or
lahf
jo
jl
xchg
and
ficoms
mov
dec
add
push
addb
inc
add
sarb
or
shll
stc
adc
jne
and
push
je
or
jecxz
addl
add
orl
add
xchg
mov
enter
call
add
xchg
cmp
pusha
sbb
fiaddl
mov
pop
or
mov
iret
lret
inc
ret
in
mov
or
cmp
xor
or
loopne
add
sub
xchg
sti
int
jo
test
pop
or
or
jo
jmp
or
test
cmp
or
jbe
mov
out
ss
cmp
add
push
push
popa
lods
xor
push
or
pop
adc
jle
rcl
sbb
push
push
lea
pop
cwtl
mov
ja
add
hlt
test
cmp
lock
xchg
mov
cmpsb
aaa
pusha
lahf
mov
stos
lock
pop
and
shlb
pop
cmp
test
or
lods
xor
add
jo
jg
rcrb
pusha
leave
sub
bound
lds
and
bound
inc
addr16
subb
in
enter
cmp
ss
lea
add
sbb
leave
mov
lea
cmpsl
lea
lea
fs
inc
ffree
add
lds
cwtl
les
push
fmuls
xor
mov
or
cld
filds
stos
dec
sahf
movl
lret
inc
sbb
cmp
pop
ret
test
jae
add
enter
movsl
popa
xor
cs
add
pusha
mov
add
pop
jae
rcr
sti
xchg
ret
jnp
movb
push
add
sbb
mov
add
mov
jae
sub
insb
jo
mov
mov
push
or
test
out
loop
jnp
push
lahf
push
insb
loope
rorb
mov
dec
and
mov
js
out
mov
mov
daa
mov
sub
xor
pop
xchg
cmp
adc
aad
insb
imul
mov
adcl
add
inc
loopne
inc
movsl
stos
adc
sbb
leave
or
push
xchg
sbbb
mov
inc
bound
inc
and
cltd
cwtl
das
push
insb
cmp
push
jns
push
add
filds
cmp
xorl
add
push
sbb
aad
xchg
sub
push
mov
test
pop
dec
cmp
or
xchg
adc
cld
bound
out
clc
add
test
inc
sbb
sub
hlt
sbb
add
ret
inc
mov
sub
pop
movsb
test
sbb
aam
clc
popa
cltd
nop
out
sbb
dec
rorb
mov
mov
out
popf
outsl
push
add
mov
in
pusha
popa
push
dec
dec
add
sbb
adc
add
loopne
sub
and
and
jne
push
cld
dec
sbb
mov
xor
pop
addr16
sub
sbb
and
sub
sbb
repnz
into
cmpsb
inc
mov
mov
jo
test
or
fbld
movsb
fst
mov
cmpb
enter
data16
mov
dec
dec
push
inc
push
imul
insb
mov
pop
sahf
add
add
dec
pushf
es
test
add
invd
sub
fbstp
adc
sbb
add
andl
in
stc
push
push
out
mov
mov
or
push
rorl
inc
cmp
mov
inc
lea
movsb
orb
fmul
call
push
mov
or
iretw
and
test
xchg
pop
and
adc
movsb
mov
push
out
push
sub
out
pop
in
add
push
lea
adc
or
inc
test
adc
xor
fdivs
out
adc
adc
or
mov
movsb
hlt
into
cmpsb
cmp
pop
jmp
inc
jg
lds
xor
loop
cmp
xor
sub
pop
pop
lea
sbb
clc
js
mov
xor
mov
or
ret
mov
xchg
dec
push
add
inc
push
push
cmc
pop
and
mov
pop
decl
es
sbb
testb
push
push
add
add
cli
inc
and
outsb
xor
outsl
cmpsb
add
les
bndstx
xor
pop
add
or
andl
add
cld
insb
or
add
adc
xor
pop
pop
movsl
popa
rcrb
aaa
push
sub
insl
mov
rolb
push
cmp
ja
sbb
xor
lret
adc
jb
mov
dec
or
inc
xchg
mov
inc
dec
add
mov
pusha
aaa
mov
mov
pop
mov
add
and
and
addl
adcb
or
lock
push
test
das
ficoms
or
sbb
call
cwtl
or
icebp
or
push
cltd
nop
out
sahf
mov
adc
pop
cmp
xor
xchg
and
jns
mov
pushl
lods
jle
in
or
adc
push
push
nop
or
in
popa
inc
xor
jae
outsl
movsl
nop
inc
icebp
or
pop
pusha
ljmp
ret
xchg
jmp
aas
and
xor
in
mov
push
add
lock
sbb
enter
jle
mov
push
ret
and
jmp
add
pop
dec
aam
pop
add
add
ljmp
lds
cltd
and
aam
adc
test
xchg
add
aam
testb
aaa
rcl
aaa
adc
push
add
lods
adc
popf
les
repnz
test
and
leave
and
inc
sub
lcall
push
jne
mov
sub
mov
cmpl
test
inc
adc
cld
pop
push
inc
add
pushf
mov
adc
cmp
nop
insl
sbb
adc
pop
dec
adc
loope
xor
js
xchg
xchg
fs
cmp
fsubrs
and
jne
add
dec
xchg
sbb
sub
jmp
pop
xor
pop
insb
ret
xchg
clc
add
or
push
test
imul
dec
inc
and
adc
adc
pop
add
pop
sub
add
add
adc
imul
adc
mov
and
pop
daa
adc
adc
lock
popa
add
or
ficoms
dec
pop
push
or
add
nop
in
and
push
xor
or
or
pop
in
push
adc
mov
and
mov
lcall
fidivs
testb
xchg
inc
xchg
loopne
inc
cmp
jne
in
jne
sub
loopne
pop
mull
mov
cmp
sbb
dec
cmp
pusha
sub
loope
int
nop
sbb
mov
lea
ret
jne
push
sbb
jae
mov
sbb
sbb
and
add
mov
sbb
cmpb
adc
add
hlt
add
in
jne
jmp
and
aam
xchg
loopne
dec
add
push
jmp
push
insl
pop
test
adc
mov
cmp
push
cwtl
cld
push
mov
adc
cwtl
ror
cmpl
mov
adc
xchg
jne
lea
enter
pop
add
lock
pop
pop
cmp
orb
dec
cwtl
or
scas
add
cli
or
jmp
xor
test
andl
es
sub
pop
xor
cmpb
add
pop
aaa
sahf
add
mov
fwait
pop
jmp
lods
push
sub
xchg
push
jmp
push
inc
mov
add
cmp
pop
orb
js
push
lea
addl
ja
xor
push
add
bound
mov
lea
jmp
mov
sub
sbb
inc
ja
mov
add
movl
aam
adc
cmp
sub
add
inc
mov
mov
jns
addr16
adc
loope
mov
insb
and
push
js
or
dec
pop
inc
movsl
testb
test
dec
xchg
fstpt
fbld
adc
ss
jne
imul
aam
cltd
mov
fs
sbb
push
add
rolb
inc
repz
fdivl
pop
sbb
pop
add
push
push
outsb
or
movsl
lret
shll
repnz
in
xchg
in
lock
les
pop
jne
inc
add
xchg
mov
scas
sbb
push
int
and
xor
in
mov
or
xchg
je
aam
mov
adc
fcomps
addb
je
xchg
shl
rcrb
insl
or
pop
aaa
dec
in
aas
icebp
std
sub
xchg
les
jmp
sub
test
mov
pop
insl
inc
pop
mov
push
flds
mov
call
xchg
cmpsb
mov
and
mov
movsl
lods
sub
mov
adc
or
imul
mov
inc
mov
sub
push
aas
adc
xchg
and
mov
fs
dec
adc
test
push
and
std
cmp
and
sbb
push
adc
addb
jmp
scas
pop
lcall
mov
push
xor
pop
and
pop
addr16
gs
in
xorb
ss
add
dec
or
rorb
je
movsl
jne
sbb
mov
push
and
mov
xchg
pop
add
mov
push
or
inc
enter
gs
scas
or
mov
popf
push
shr
xorb
add
xor
dec
rcl
sbb
mov
jae
inc
jmp
xchg
xor
or
add
scas
or
mov
pop
repnz
lea
pop
loop
lcall
scas
rclb
fdivr
inc
rol
scas
sbb
insb
xorl
push
loope
and
imul
and
mov
cmp
je
mov
js
test
cmp
inc
jbe
in
stos
add
jl
lea
fcoms
mov
aas
mov
jl
sub
je
and
test
and
dec
pushw
jp
fcoms
jne
inc
out
aam
xor
add
or
add
rclb
push
pop
inc
int
cmp
addb
and
sub
or
je
mov
push
pop
sahf
jmp
repnz
into
push
aad
lea
cmp
btc
cmpsl
add
frstor
enter
lea
mov
jnp
arpl
add
push
pushf
leave
inc
inc
cmp
push
push
mov
movsl
pop
xor
jecxz
daa
push
pop
pop
inc
mov
das
ss
cmpb
idiv
dec
xchg
rol
push
adc
pop
repnz
fdivr
pop
les
outsb
int
inc
mov
xor
and
mov
rcr
shlb
cmpsl
add
fucomp
mov
add
adc
ret
divl
insb
call
xlat
cs
sub
mov
iret
push
dec
or
sbb
xchg
enter
inc
mov
shr
or
es
ret
sbb
mov
and
or
and
sub
mov
nop
lock
inc
sbb
shlb
inc
dec
jo
cltd
fs
inc
inc
pop
leave
lea
pop
and
and
test
sti
cld
add
inc
push
pop
ds
fisubs
add
arpl
ret
add
ret
jae
add
push
push
in
and
xchg
and
int
shll
sub
sub
daa
jns
shl
aad
sub
add
sbb
sub
or
mov
add
cmp
xor
sub
mov
jb
enter
shl
das
cmpsb
nop
jp
in
jecxz
xchg
adc
movsl
lds
pushf
and
cltd
xlat
or
adc
or
nop
dec
mul
clc
push
jle
inc
pop
jae
mov
adc
lahf
je
test
mov
mov
imulb
add
push
push
add
xchg
fcmove
jmp
int
mov
cmp
or
mov
dec
xlat
fildll
inc
pop
jp
outsb
and
inc
pusha
mov
sahf
mov
and
aam
xchg
jbe
sub
pop
jmp
adc
and
or
and
xchg
jno
add
push
or
xor
xor
sbb
ret
jae
inc
sbb
dec
sets
and
test
push
sahf
jge
jl
jmp
inc
xchg
dec
add
sbb
xor
push
loopne
add
xor
push
roll
js
xchg
int
sarb
mov
xchg
lea
add
mov
add
mov
pop
jae
sarb
add
pop
push
pop
dec
mov
mov
dec
push
stos
imul
sub
pop
int3
xchg
add
mov
dec
push
jmp
push
shll
mov
and
add
sub
xor
sub
pop
xchg
rol
xor
andb
les
dec
jle
xor
lods
xlat
addr16
fistpl
fs
inc
je
adc
and
add
inc
sub
aaa
pop
mov
subb
lock
js
mov
jecxz
test
clc
out
jp
add
loop
cmp
push
xchg
adcl
lahf
mov
stc
sbbb
dec
mov
pop
or
adc
pop
fs
call
add
push
insl
repnz
scas
pusha
add
jb
add
mov
xor
mov
sub
leave
cld
fsubs
add
js
scas
sub
sbb
or
mov
and
aam
fimuls
dec
jns
pop
into
or
lret
xor
fcomp
rclb
or
lods
leave
imul
sahf
xor
xor
dec
add
xchg
cld
dec
int3
in
mov
mov
insl
xchg
sbb
jb
mov
adc
jo
ficoml
mov
jg
pop
pusha
mov
fdivs
sub
sub
inc
push
cmp
and
or
imul
cmp
fwait
clc
push
jnp
loope
sub
imul
sub
testb
xor
cmp
cmpsb
imul
inc
mov
pop
sbb
inc
pusha
xchg
ficoml
push
xor
mov
adc
dec
mov
or
loope
xchg
lods
test
push
mov
cmpsb
imul
in
add
or
and
and
sub
inc
inc
cli
mov
or
cmpsb
adc
inc
and
sub
push
dec
cmpsb
fs
jnp
loopne
aad
insl
jmp
add
add
in
repnz
rorl
add
mov
and
and
pop
inc
mov
pop
mov
es
push
adc
xor
pop
xchg
pusha
andl
sbb
aam
dec
push
jns
or
out
stos
xchg
out
nop
stc
clc
push
add
lret
adc
and
lret
stos
adc
je
pop
or
ret
add
sub
pusha
mov
add
xor
add
shlb
jo
test
xor
jne
movsb
xchg
xor
sub
adc
ret
cmp
jmp
aam
mov
dec
es
outsl
or
es
mov
adc
jecxz
pop
adc
or
add
cmpb
jne
movsb
xchg
mov
test
loop
push
adc
int3
je
pop
into
push
inc
ror
adc
call
pushf
cmp
add
pop
add
add
pop
or
jns
mov
lcall
sbb
xchg
mov
push
loop
or
cmp
sub
add
lea
nop
mov
frstor
cmp
xor
fsts
fldcw
pop
adc
add
push
pop
sub
rorb
add
pop
sbb
adc
jne
faddl
jo
daa
jmp
dec
jmp
cmc
push
dec
adcl
sbb
and
lea
in
mul
sub
jnp
pop
lock
dec
xor
or
or
inc
ret
dec
fcompl
sub
ret
stc
inc
xor
gs
pop
xor
pop
pushf
push
into
sbb
mov
cwtl
adc
push
cmp
push
mov
dec
adc
test
sub
add
pop
lahf
add
push
lcall
es
lock
fsts
data16
or
test
std
or
popf
xor
mov
cmp
jae
push
test
sbb
mov
test
arpl
insl
addr16
or
dec
scas
inc
sarb
test
xadd
sbb
pop
cmp
addl
xlat
mov
das
data16
add
inc
ret
and
sbb
push
inc
sub
lock
add
or
test
es
dec
add
xor
sbb
negl
xchg
lea
sub
push
mov
adc
mov
adc
nop
scas
mov
mov
sbb
lahf
std
inc
movsb
cmp
loopne
sbb
loope
addl
sbb
shr
jl
or
and
add
or
jbe
in
lds
movsb
xchg
cmp
mov
ret
mov
jecxz
out
imul
test
pop
mov
je
imul
jno
add
xchg
sub
push
daa
jne
mull
cmp
xor
and
cmp
popa
add
jecxz
nop
add
insl
test
push
or
xor
or
insl
push
inc
mov
pop
arpl
add
push
or
dec
adc
lcall
dec
dec
adc
fstps
adc
repz
pop
xor
push
xchg
pop
repnz
das
aam
enter
inc
icebp
xor
push
leave
leave
jae
adc
out
add
xlat
inc
sahf
inc
es
iret
daa
add
pop
adc
iret
and
pop
inc
mov
sub
leave
inc
sbb
movl
jo
ds
aas
cmp
sbb
popf
sbb
pusha
push
fcoms
fs
dec
repz
sahf
inc
push
sbb
sbb
sbb
in
mov
sub
add
push
test
adc
push
sbb
add
leave
inc
lock
dec
sbb
fisubrs
and
cmp
and
sahf
jo
mov
orl
ja
push
leave
pusha
dec
lret
outsw
pop
fwait
rclb
cltd
push
scas
mov
push
inc
jp
xchg
dec
ss
test
add
mov
or
pop
mov
aaa
and
mov
sbb
shrb
in
aaa
inc
push
jbe
xchg
sbb
adc
stc
push
fsubr
inc
sbb
push
into
test
adc
dec
dec
mov
pusha
add
push
inc
mov
shr
jne
arpl
movsb
sub
jno
icebp
pop
imul
adc
shlb
cmp
movsb
mov
add
test
xlat
jmp
add
les
mov
push
cs
cld
jae
pop
adc
lock
inc
or
decb
sub
iret
dec
sbb
pop
pusha
or
sub
push
dec
insl
add
mov
sbb
pushf
xor
adc
mov
popa
cmp
add
dec
mov
pop
mov
push
test
lcall
mov
inc
faddl
push
fists
mov
sbb
push
cltd
mov
inc
stos
push
or
adc
sub
inc
int
ret
xchg
ret
lea
inc
cs
or
sbb
xor
loope
adc
test
popa
dec
xchg
pop
aas
rclb
xchg
mov
adc
insl
add
add
push
nop
es
stos
push
xor
lds
adc
loopne
bound
clc
repnz
dec
pusha
push
roll
push
fistps
out
pop
sbb
loopne
add
xchg
sub
sbb
add
nop
fcompl
sub
jg
jg
and
add
mov
sbb
xchg
cmp
add
add
add
imul
cmp
loop
inc
sub
faddl
or
je
xchg
or
mov
xor
jnp
add
gs
out
cltd
fcmove
xor
popa
inc
dec
mov
xchg
out
shrb
aam
fwait
xchg
sarb
mov
mov
jecxz
xchg
cs
js
pusha
arpl
dec
loopne
dec
mov
mov
out
cmc
lahf
sub
sbb
adc
flds
stc
sbb
loopne
push
jbe
sub
les
sub
shll
or
outsb
pop
jmp
outsb
mov
mov
jg
es
inc
mov
ficompl
or
cmp
sbb
xchg
sbb
movsb
ret
nop
imul
sub
xor
and
mov
xlat
xor
scas
jnp
xor
aad
cwtl
xchg
jmp
xchg
lock
xor
ds
adc
ss
cmp
xor
rorb
jo,pt
push
negl
and
xor
cmp
cmp
or
push
fldt
cmp
and
inc
jb
repnz
sub
cmp
xchg
inc
push
ds
mov
ret
lea
adc
setge
enter
jbe
push
push
cmp
push
inc
rol
and
pop
mov
sbb
or
mov
mov
add
inc
add
sbbl
jl
push
sbb
add
mov
fisubl
mov
fiaddl
inc
inc
hlt
out
nop
mov
insb
ss
insl
and
jne
xchg
adc
xchg
dec
cs
sbb
sub
fbstp
mov
xor
and
push
dec
push
add
and
cltd
push
sahf
add
xchg
cmp
mov
jl
inc
xchg
mov
xor
push
adc
jne
jl
add
lock
sbb
fsts
sbb
inc
push
repnz
push
scas
push
into
push
arpl
js
adc
addr16
sub
add
mov
aas
cwtl
sbb
inc
ljmp
xor
or
adc
loope
sub
pop
add
cmpsl
mov
orl
xor
lret
pop
mov
dec
andl
filds
test
adc
xchg
push
out
imul
add
cmp
gs
addb
nop
sub
mov
data16
or
dec
cltd
mov
or
dec
cmc
inc
aaa
sahf
lock
sub
mov
xchg
sub
and
sub
ljmp
xchg
call
mov
adc
outsl
pop
rorl
iret
inc
fs
scas
das
add
js
xchg
mov
mov
stos
push
push
inc
cmp
sbb
dec
dec
cmp
push
ds
add
pop
insb
cmp
mov
cmp
test
stc
xor
mov
enter
or
adc
dec
mov
sbb
ret
mov
adc
cli
pop
cmpb
adc
mov
xchg
movsb
xchg
inc
mov
xlat
aam
outsb
adc
fstl
mov
sbb
pop
jae
in
or
push
pop
or
xchg
mov
push
ds
pop
inc
adc
roll
and
mov
xchg
ja
movsl
jns
enter
in
loopne
push
inc
pusha
mov
bound
pop
sub
dec
cmpb
leave
xchg
jbe
jmp
cmp
push
xchg
adc
scas
out
pop
pushl
adc
cmp
mov
ljmp
mov
or
lea
mov
adcl
in
mov
mov
lods
add
inc
or
lcall
test
movsl
mov
std
cltd
xor
adc
add
test
or
and
mov
pop
in
add
movhps
xor
pushf
and
out
fwait
cs
loope
sub
pusha
cmp
add
push
das
leave
jmp
test
pop
dec
shlb
xlat
sti
mov
sar
mov
cmpsl
mov
sbb
mov
in
out
add
subb
fs
inc
inc
mov
cs
jmp
stos
lret
or
aaa
jo
and
mov
xor
je
xor
sub
mov
or
iret
push
mov
jl
sbb
mov
popa
xchg
inc
pop
or
sub
jbe
and
or
mov
push
pop
fsts
call
test
orl
jno
in
loopne
xor
cmc
lcall
popa
test
les
ffreep
xchg
fcomps
jmp
push
xchg
test
pop
mov
out
sub
inc
push
in
cmpb
xchg
mov
mov
dec
inc
cmpl
or
push
jle
adc
and
fldl
pop
xor
scas
movl
lea
xor
aas
pop
lret
and
xchg
cmp
inc
test
add
xchg
pop
std
nop
xlat
pop
mov
sti
outsb
popa
xor
dec
push
subb
lea
rorl
fs
pushf
mov
lds
rcll
xor
insb
sbb
or
cmp
rcrl
and
mov
cwtl
shlb
mov
fnsave
pop
pop
nop
sti
mov
sarb
fsts
inc
sbb
mov
nop
cmp
adc
mov
inc
sub
xor
fcompl
and
les
or
dec
push
in
sbb
pop
stc
push
add
cmpb
push
or
stc
push
xor
movsl
pop
inc
stos
mov
cli
adc
inc
dec
jae
lea
mov
mov
es
mov
rolb
cmpsb
fimull
push
push
jbe
or
push
pop
sbb
clc
sbbl
mov
fwait
push
icebp
adc
mov
xchg
dec
pop
add
enter
bound
mov
adcl
xchg
shlb
bnd
pop
mov
cwtl
cs
andb
add
mov
jecxz
arpl
arpl
cmc
push
dec
cs
add
das
call
dec
shl
or
cli
mov
mov
cmp
push
and
inc
dec
push
outsl
pop
cltd
inc
pusha
xlat
scas
lds
out
sub
cmpsl
into
mov
scas
xorl
int
mov
xor
dec
mov
adc
mov
mov
sbb
cwtl
insl
mov
dec
andb
xchg
fldenv
dec
stos
clc
add
cmp
testb
scas
dec
cmp
outsl
cmpb
or
cmc
enter
push
jb
std
dec
add
adc
mov
jne
or
lea
and
or
lods
mov
or
add
xchg
shlb
nop
add
js
int
fiaddl
sti
push
jmp
cmp
jae
push
cwtl
daa
cli
sub
cmp
jne
fs
imul
push
xchg
adc
xchg
mov
jg
insl
dec
jns
xchg
xor
mov
in
mov
add
adc
rorl
ss
repz
jle
sub
movsb
orl
js
mov
dec
sbb
aam
shlb
and
xor
enter
lret
lds
jbe
imul
adc
xchg
xchg
xorb
inc
xchg
mov
xchg
fs
inc
sbb
enter
cmp
and
and
and
or
aam
enter
sbb
insl
adc
inc
adc
leave
or
jns
inc
add
pop
jae
ret
stos
sbb
and
jnp
lock
scas
adc
ficoms
aas
fs
adc
enter
mov
or
arpl
adc
in
cwtl
add
push
loopne
mov
sbb
jp
fidivl
les
jo
insb
mov
push
je
pop
or
mov
inc
sub
inc
mov
pop
ret
pop
and
inc
pop
add
push
jne
push
sbb
fistpl
rcrl
out
xlat
inc
test
add
aaa
inc
popf
adc
sbb
shlb
mov
xor
cmp
inc
add
xchg
movsl
fcmovnu
subb
cmp
sub
mov
mov
lea
jl
pop
sbb
shlb
imul
testl
xor
fldenv
sub
das
adc
fs
test
rcrb
pop
clc
xor
imul
or
inc
subl
push
add
rclb
add
push
push
sbb
pop
orl
es
movsb
or
dec
or
adc
pop
stos
mov
stos
pusha
adc
shll
stos
and
sahf
movsl
dec
push
sbb
pop
outsb
push
add
xor
push
rolb
xchg
insl
out
pusha
mov
sbb
add
lret
out
mov
jmp
mov
push
fs
movsb
popa
add
ljmp
cld
mov
or
push
inc
repnz
add
imulb
push
fwait
cmp
xor
xor
enter
push
inc
dec
repnz
sbb
sub
psrlq
repnz
push
fadds
mov
dec
out
lods
push
mov
fildl
xor
jp
sbb
inc
jb
adc
jnp
icebp
or
xor
jecxz
mov
test
call
popa
sbb
aaa
sbb
or
sahf
add
cmp
js
lret
call
test
mov
cmp
jge
loopne
and
dec
imul
add
mov
xor
aad
rcll
push
mov
jge
call
clc
mov
mov
xor
dec
push
je
xor
call
sti
push
imul
inc
adcb
xchg
jmp
xor
add
testb
or
jae
sub
data16
jne
pop
fcompl
add
bsr
push
sbbl
outsl
sarl
xor
sbb
xchg
or
dec
adc
nop
push
aaa
or
shlb
xlat
jg
rol
aad
jle
inc
push
mov
mov
add
pop
mov
stos
inc
push
or
sbb
adc
test
adc
outsl
fdivs
ret
xchg
insl
jne
sub
xchg
mov
int
push
arpl
add
jle
rolb
dec
adc
lods
push
test
or
pop
adc
test
sub
les
call
imul
push
and
or
lea
pop
push
add
inc
xor
or
adc
loop
ss
iret
or
incl
add
add
or
sbb
jb
xchg
in
cmp
jp
or
dec
jbe
enter
mul
mov
dec
and
and
pushf
pop
dec
add
add
jb
cmp
lret
leave
in
pop
xor
xor
daa
xchg
xchg
or
or
mov
or
or
dec
push
pushf
sbb
sbb
mov
insb
add
sbb
mov
out
pop
adc
pop
cs
mov
shlb
mov
enter
add
add
push
mov
mov
dec
pop
insb
xchg
icebp
push
add
mov
sub
fnstsw
lea
mov
shrb
sbb
xor
push
or
adc
imul
sub
pusha
push
cmp
dec
mov
addr16
xchg
and
inc
push
imul
jns
call
cmp
cmp
jb
daa
push
push
add
es
push
jp
sti
in
or
inc
add
pop
inc
lea
inc
mov
shll
mov
jno
lock
mov
and
add
mov
test
popf
leave
mov
push
mov
fnstcw
cmp
mov
mov
adc
stos
out
push
mov
and
pop
xchg
or
inc
mov
aaa
mov
lods
add
mov
adc
popa
lcall
or
sbb
xchg
or
push
ds
lock
icebp
es
sbb
add
mov
das
mov
adc
fidivrl
test
das
adc
ljmp
ja
xchg
sbb
push
out
mov
sub
mov
pop
add
mov
push
mov
rclb
add
add
cmp
cmp
dec
mov
andb
mov
sub
sbb
mov
ss
adc
add
sub
pop
pop
sbbl
repnz
pop
lea
fsubrp
das
adc
fmuls
xor
or
add
test
and
add
fnsave
sbb
push
sub
sbbl
cs
adc
loope
loop
out
mov
aam
sub
mov
pop
pushl
sbb
sub
jo
inc
clc
or
mov
fildll
jmp
xchg
or
icebp
aam
or
push
iret
adc
insb
sbb
clc
push
and
xchg
xchg
xchg
mov
pop
fcomps
xchg
inc
mov
sbb
das
int
adc
je
xor
cmp
or
adc
adc
mov
xchg
xlat
pop
pop
inc
mov
dec
lahf
cmp
dec
mov
mov
and
push
adc
pop
mov
insl
add
jmp
mov
ljmp
mov
xchg
dec
push
push
test
pop
inc
inc
pop
roll
enter
inc
mov
xor
inc
adc
fstps
add
out
subb
enter
xchg
push
xchg
inc
outsb
call
adc
sbb
or
pop
in
dec
mov
ja
mov
out
cmpb
test
addb
clc
xor
mov
push
xor
add
push
add
or
lock
add
and
dec
arpl
outsb
cmp
adc
adc
inc
loope
dec
or
arpl
sbb
xor
in
add
adc
call
movsb
xchg
psrlw
push
cmp
adc
js
sbb
jno
pop
clc
add
sbb
dec
ret
or
inc
repz
push
push
push
and
mov
and
or
mov
or
sub
push
adc
and
xor
addl
dec
fisubs
push
pop
fbld
rcl
lret
js
sarb
das
popa
adc
adc
shlb
jns
add
fldl
push
test
arpl
jno
xorb
cmp
push
outsl
xchg
push
jle
cmp
mov
sub
adc
ds
fcmovne
js
icebp
dec
aam
repnz
push
or
pop
fcoms
sbb
fcomp
inc
cmpsb
inc
or
add
mov
and
gs
push
xor
inc
push
arpl
ret
and
push
mov
jbe
mov
scas
jno
cmp
cmpsl
inc
stos
push
fldcw
adc
jo
xchg
cltd
loopne
mov
movsb
scas
insb
in
add
cmp
pop
imul
add
outsb
mov
aam
xor
fsubrs
aad
aaa
repz
push
xchg
xchg
in
push
cmp
mov
outsb
push
pop
test
lea
dec
bound
inc
push
mov
or
rol
mov
fnstcw
insb
into
add
into
fldcw
sbb
jns
inc
push
mov
lea
and
daa
lea
push
mov
orl
mov
lss
ret
lds
sub
xor
add
sbb
add
adc
push
mov
fstp
decb
or
mov
icebp
lods
out
mull
mov
pop
push
cs
fs
lea
rorl
cwtl
mov
jbe
pop
jb
or
or
pushf
add
pop
inc
sbb
adc
ret
je
and
pusha
mov
cmpsb
pop
inc
daa
subb
xlat
push
cmp
dec
and
inc
add
in
nop
into
push
pop
mov
xchg
fsubrl
data16
adc
mov
sbb
push
sub
stos
jo
xor
push
sbb
add
fcoml
lods
mov
lea
mov
push
test
xor
pop
dec
xor
shl
pop
stos
lcall
xchg
cmp
lea
cld
push
mov
fstpt
ret
jne
pop
aad
push
mov
bound
push
lret
jbe
add
lods
ss
inc
or
jmp
fcmovbe
lahf
jne
push
fiadds
stos
imull
pop
jle
lods
mov
mov
aaa
sbb
dec
inc
sbb
cmp
jo
test
movsl
push
psadbw
ret
lds
sbb
jne
or
add
or
leave
and
sub
or
loop
xor
std
cld
rorl
sub
lock
jo
fimull
les
mov
adc
enter
add
stos
xchg
xor
and
sbb
je
call
cmc
divl
add
dec
mov
and
stos
cmp
mov
add
add
and
loope
jmp
cmp
xor
adc
or
movsb
push
lods
icebp
test
or
in
sbb
xchg
push
mov
fs
push
dec
ds
push
xchg
rcll
fisubl
push
psadbw
roll
inc
or
pop
pop
repnz
pop
push
inc
clc
enter
and
in
pop
sub
and
push
and
pop
push
add
sbb
lods
xchg
sub
ds
hlt
fsubs
push
lods
add
mov
movsb
inc
add
mov
push
es
or
in
sbb
push
inc
push
insb
int
ficoml
and
roll
push
xor
dec
dec
or
mov
add
push
or
das
jb
or
es
ja
xor
push
push
sahf
sub
je
bound
cmp
push
sbb
inc
cmp
and
and
mov
cmp
adc
inc
stc
mov
cmpsl
or
adc
pop
mov
xlat
add
mov
cmp
data16
sarb
test
xchg
inc
adc
stc
pop
xchg
add
jo
mov
add
fs
stos
pop
test
jge
pop
jmp
out
jns
les
adc
lret
outsl
loopne
rolb
into
nop
sbbl
jnp
add
pushl
pop
add
lea
divb
push
xor
pusha
nop
pusha
push
std
lock
jno
mov
xchg
adc
inc
popf
pop
mov
xor
jle
sbb
push
mov
ds
fmull
mov
cli
or
xor
cmp
xchg
sbb
call
loopne
or
sub
cmpsb
pusha
inc
pop
andl
popa
or
aas
hlt
push
insl
push
pop
xor
sub
rolb
mov
pop
leave
jmp
pop
adcb
mov
dec
inc
cmpsl
fmull
xchg
mov
mov
je
inc
sub
outsl
or
jl
rcrl
cmpb
out
add
push
shrl
adc
ss
jbe
incl
ja
aas
dec
mov
out
inc
inc
minps
dec
xchg
xor
insb
sbb
mov
dec
js
cltd
xchg
push
cli
inc
jo
pusha
push
nop
imul
lock
test
call
mov
cmp
cmc
mov
test
mov
loopne
scas
jecxz
xchg
push
movsl
andb
cmp
xor
push
jns
dec
adc
mov
rolb
sub
icebp
and
mov
push
and
lcall
push
xchg
cwtl
adc
cmp
inc
stos
adc
add
addl
or
lods
int3
mov
sbb
sbb
mov
dec
dec
stos
or
add
cmpsl
lea
sub
push
mov
in
push
ret
movsl
clc
xor
das
lret
inc
sub
movsb
pop
loopne
loope
aas
jmp
inc
mov
int
sub
fcmovu
add
jb
push
add
jmp
xchg
or
jle
jb
sbb
mulb
arpl
xchg
pusha
cld
xchg
push
iret
mov
movsb
jbe
aaa
lods
push
sbb
fisubrl
or
insb
lahf
sub
hlt
mov
or
adc
or
popf
fmul
xchg
xchg
sbb
and
cs
adc
nop
add
add
popa
and
lods
mov
or
bound
pusha
pop
lds
mov
mov
adc
push
stos
add
add
push
inc
repz
push
outsb
add
addr16
and
or
in
xor
add
fdiv
cmp
xchg
mov
sbbb
sub
xor
orb
adc
mov
mov
sub
movsb
mov
adc
mov
or
rcrl
rolb
sbb
test
xchg
pop
es
mov
arpl
mov
out
cltd
push
insb
loopne
jl
mov
fcomp
lods
add
sarb
dec
dec
sti
and
xor
rolb
or
fistpl
pop
jo
add
sarl
push
ss
cmp
mov
in
sbb
pusha
out
xchg
push
aad
pop
inc
int
add
daa
xor
and
xor
mov
ror
loope
xorl
cmp
dec
lods
inc
int
push
sti
icebp
rorb
or
lcall
out
cmp
pop
shlb
aaa
iret
adc
and
and
and
jne
loope
mov
adc
je
jle
jg
lea
dec
or
lea
adc
daa
je
push
jae
or
or
out
xchg
xor
ret
or
movsb
pop
ret
add
outsl
fmul
int3
cwtl
test
fs
test
push
pop
push
mov
test
jno
cmp
xchg
inc
loop
push
stos
addb
jle
ja
xchg
add
loop
xsha256
cmpsb
push
xor
lahf
add
jnp
xchg
mov
in
les
aas
mov
fldl
sbb
mov
jne
xor
mov
es
or
mov
popa
push
xchg
add
or
and
add
stos
xchg
fnstcw
xor
sbb
mov
pushf
popa
rorb
cltd
cltd
mov
add
lods
push
sub
daa
imul
insb
pop
orb
in
shlb
adc
loopne
lret
mov
and
push
push
fisubrl
pop
cmp
jge
scas
xchg
xorl
add
ss
mov
mov
push
xor
mov
sahf
dec
bnd
fdivs
addr16
aam
lock
js
push
cmp
xor
stos
mov
mov
sub
dec
inc
movsl
ret
je
adc
xchg
andl
or
aaa
add
adc
push
popf
inc
pop
xorl
or
and
icebp
test
xchg
sbb
enter
push
lock
dec
or
xor
mov
je
push
mov
movsb
or
adc
rolb
mov
ja
dec
sbb
test
jae
mov
jecxz
loopne
outsl
jmp
mov
test
lahf
and
ljmp
and
shrb
sub
mov
adc
push
sbb
enter
cmp
xor
or
or
fidivrs
pop
pop
sbb
es
in
mov
push
add
inc
adc
ror
das
push
popa
and
rcrl
pop
push
sub
mov
sarb
es
cmp
out
aas
fistpl
call
rorb
sbb
call
pop
add
add
sub
mov
pusha
add
cmp
mov
mov
aam
enter
sub
jns
movsb
push
aam
mov
or
sbb
je
in
inc
and
xchg
int
test
adc
dec
add
int3
mov
or
iret
rolb
cld
xorb
ds
test
xchg
in
adc
cmp
rcrb
adc
imul
pop
cmp
add
test
inc
inc
stos
inc
dec
pop
sub
pushf
lret
push
xchg
dec
repnz
pop
xlat
xchg
push
movsb
xchg
jne
push
movsb
mov
in
or
mov
and
and
xlat
push
cmp
xor
push
stos
inc
int3
xor
sarl
or
add
mov
nop
rorb
or
push
pop
jne
mov
pop
xor
jmp
lods
push
adc
lahf
test
mov
or
or
xlat
fisubs
shr
cld
and
or
imul
mov
cmp
pop
pop
xchg
sbb
std
fadds
out
push
sub
xchg
incl
push
test
sub
xor
pop
aaa
daa
pop
xchg
jecxz
and
outsl
stos
test
xchg
sub
add
mov
dec
pcmpgtd
dec
pop
dec
adc
inc
stc
rcrl
js
pause
mov
jbe
sbb
js
mov
pop
mov
push
lret
inc
cmpsb
mov
rol
mov
fs
testb
or
cmp
test
jns
in
cmc
pushf
xor
cmc
push
call
adc
mov
cmp
es
and
jmp
test
les
cmp
xor
outsl
pop
cmp
xchg
rcll
adc
mov
scas
sub
adc
push
xor
inc
or
fisubrs
inc
fldl
pop
les
cli
dec
in
xor
ss
lods
pop
les
out
add
ret
and
inc
jnp
movsl
shrb
movsl
xor
cmp
add
push
and
shr
clc
ja
push
pop
enter
xlat
js
mov
sbb
inc
rclb
or
cmp
loopne
pop
lock
push
jmp
pop
adc
iret
das
jo
push
repnz
cmc
out
pop
or
push
iret
lods
pop
adc
pop
hlt
and
dec
push
or
cmpl
mov
sarb
lret
ja
sahf
sbb
loopne
adc
lock
loopne
call
push
and
mov
outsl
xorl
inc
lods
sub
adc
adc
les
adc
xor
or
adc
jl
test
push
adcb
or
fldl2e
mov
fidivrl
add
fcoml
xchg
pop
sbb
mov
sbb
add
inc
inc
fisttpl
sub
inc
clc
mov
hlt
cs
adc
push
cmp
in
dec
mov
das
jl
sbb
push
sbb
or
shlb
inc
inc
imul
dec
dec
sub
xchg
lods
or
shl
sub
cmp
dec
jb
rorb
sub
dec
or
pop
add
fs
push
ss
aam
inc
sbb
push
ret
xorl
or
fcomps
add
push
ret
push
add
inc
repnz
imul
sub
or
mov
push
mov
popa
sub
aaa
int3
ss
and
adc
adc
les
adc
inc
sub
xchg
mov
shlb
mov
enter
arpl
leave
in
push
in
and
insl
or
adc
pop
cmpsb
mov
mov
mov
mov
or
adc
add
mov
add
mov
mov
loopne
push
addr16
inc
psubusb
add
lret
inc
andl
fsts
push
push
push
add
pop
push
add
push
cs
add
mov
ret
aam
shrd
aam
iret
and
mov
popa
cmp
add
aam
je
sbb
add
test
and
jns
sub
ja
or
insl
sub
fadd
dec
add
adc
mov
in
mov
movsb
jb
or
adc
inc
bound
or
push
out
stos
add
int3
xchg
pusha
sub
shlb
es
rcll
mov
inc
cmp
and
inc
loop
xlat
cltd
adc
jno
add
mov
test
adc
or
fcoml
mov
daa
lcall
mov
jmp
clc
movsb
and
imul
test
fcmovnbe
outsb
punpckhdq
cmp
and
adc
add
cmp
pop
mov
test
add
xor
xchg
cmp
jae
dec
sub
push
push
inc
sbb
rcrl
rorb
sub
adc
sbb
pop
and
lret
shl
mov
cmp
xor
add
and
dec
lcall
push
mov
sub
loop
dec
jl
dec
out
pushf
jbe
pop
lahf
add
xchg
jl
jnp
ret
fwait
rcrl
aas
push
and
out
enter
jl
mov
adc
gs
xchg
repnz
adc
cmp
pop
pop
sub
in
sbb
add
adc
divl
sub
pop
add
clc
ljmp
lds
outsb
jmp
fmulp
mov
sub
sub
pop
sahf
sbb
add
inc
adc
xor
jnp
nop
fdivr
insb
aad
mov
outsb
fists
push
sahf
push
sub
push
push
push
test
cmpsb
xorl
jb
cmp
dec
pop
or
mov
das
jo
sbb
loope
jmp
push
ds
adc
loope
add
loopne
inc
cs
push
inc
shlb
lcall
int3
or
ljmp
jne
daa
and
test
outsl
or
sub
mov
test
xor
jae
xchg
mov
push
lods
mov
jo
test
imul
shr
call
cmp
jnp
jb
pop
xor
fadds
xor
push
jae
sarl
daa
add
push
imul
cmp
xchg
mov
adc
mov
jne
js
mov
imul
mov
fldcw
mov
add
mov
push
inc
or
xchg
xor
dec
pop
mov
xchg
inc
sub
sub
dec
inc
fsubl
scas
rcll
sub
mov
add
push
or
mov
pop
push
std
push
sbb
es
fnstenv
rolb
lock
jmp
pop
push
xor
jb
cmp
add
dec
add
les
jne
and
adc
stos
fcmovnb
shlb
add
lcall
leave
push
push
xor
mov
adc
lock
pop
xchg
in
cwtl
sub
xchg
mov
push
mov
js
or
jl
dec
xchg
cmp
xlat
dec
fs
or
sbb
enter
shlb
push
mov
mov
movsl
add
push
or
adc
jne
aaa
mov
cmp
sbb
insb
dec
mov
add
cli
add
add
pusha
xor
lea
mov
shrb
loope
je
lea
push
movsl
test
push
mov
gs
cwtl
adc
in
inc
lock
adc
scas
or
mov
mov
cmp
xchg
adc
xchg
mov
les
inc
or
jecxz
adc
test
xor
loop
daa
shlb
ret
push
es
adc
jmp
fsubs
sbb
cs
sbb
mov
push
sbbl
push
cltd
sbb
push
sub
xlat
pop
leave
push
sbb
and
and
and
and
testl
add
push
jb
and
add
cmc
testl
icebp
pop
fstpt
inc
mov
add
inc
add
es
push
and
pusha
cmpsl
jl
adc
xchg
addr16
leave
push
shll
daa
and
sbb
outsb
rolb
loopne
pop
add
and
mov
xorl
add
and
xchg
add
mov
add
adc
pop
jl
and
repnz
pop
push
and
rclb
inc
cli
mov
cmp
sbb
sbb
aaa
test
ja
scas
add
and
pop
cmc
pop
sbb
cwtl
sbb
inc
add
sub
dec
mov
scas
pop
and
dec
mov
cmp
sbb
or
mov
cmp
push
push
loope
in
fldenv
andl
jle
rcrl
mov
sub
jo
pop
dec
in
pop
pop
add
int
out
aaa
addr16
push
enter
xor
pop
pop
mov
pop
inc
in
add
mov
mov
pusha
sbb
pop
or
mov
fmulp
push
xchg
sbb
add
lret
fdivs
sub
and
or
loope
scas
mov
shlb
xor
and
or
jb
xorl
sub
call
and
test
cmp
adc
pusha
dec
push
cmp
sub
mov
jns
and
and
shll
in
je
cwtl
sub
jnp
icebp
xchg
and
ret
daa
stc
sti
shll
sbb
scas
sub
test
xor
je
movsb
xor
and
sub
xchg
xchg
andb
das
pushf
jl
dec
mov
test
pushf
out
fiaddl
out
test
and
sub
aam
adc
cmp
mov
jno
ss
adc
dec
adc
jno
push
lods
shll
cmc
xor
ret
mov
enter
mov
cmp
subl
sub
jecxz
stos
rorb
push
sbb
push
stos
push
and
or
sahf
xchg
pop
mov
sbb
cmp
xchg
imul
nop
and
push
test
or
stos
adc
mov
mov
dec
sahf
push
out
push
adc
dec
adc
inc
jl
lods
mov
add
and
xchg
adc
ret
testl
push
cwtl
xor
add
sub
nop
ds
adc
sbb
mov
nop
pop
xchg
push
and
inc
js
or
mov
faddp
sbb
adc
or
pop
dec
cmpb
xlat
cwtl
pop
push
jo
or
loope
test
xchg
dec
fisubl
lahf
fisttpll
das
enter
aas
movsl
shlb
sub
dec
mov
fs
lret
xor
mov
xchg
mov
inc
jg
sbb
mov
ret
adc
bound
out
les
push
movsl
mov
sbb
sbb
jp
add
and
test
int
ficoml
add
xor
xchg
mov
jbe
jecxz
or
push
or
push
cmp
rcrb
push
push
je
adc
add
add
or
rcrl
adc
test
and
sbb
mov
sub
dec
or
cltd
lock
mov
xchg
xchg
or
sahf
inc
add
xor
sub
push
loopne
je
push
mov
lret
or
repnz
inc
clc
cmp
clc
push
cmpsl
push
and
rorl
sub
xchg
les
xlat
ds
mov
sub
aas
push
or
and
dec
xchg
jns
mov
ljmp
push
or
scas
rolb
and
inc
jmp
push
in
or
lods
push
mov
out
xchg
add
add
and
je
and
movsb
or
xchg
jbe
cmpsb
js
add
sub
mov
and
pop
push
pushf
and
cmp
and
or
popf
mov
mov
pusha
test
jnp
xchg
popa
sub
mov
xor
insb
push
add
nop
dec
sub
add
jo
ficompl
test
xor
subb
fbstp
je
xor
jae
inc
sbb
sbb
lock
rcr
adc
pop
dec
loope
andb
das
mov
lods
mov
lock
ljmp
or
sub
scas
cmp
push
and
xchg
push
adc
pop
inc
xor
repnz
xchg
imulb
mov
inc
jnp
xor
push
or
push
push
jg
cmp
push
add
in
push
test
adc
dec
cmp
and
xchg
xchg
iret
fiaddl
xor
mov
ds
inc
les
fmull
cmpsb
icebp
dec
jo
adc
push
leave
daa
sub
xor
mov
fmuls
outsl
mov
and
nop
andb
in
std
orl
jo
sbb
pusha
add
rcrl
mov
in
enter
push
sbb
sbb
test
cmp
loope
rcr
or
in
mov
or
pop
xchg
dec
add
sbb
cld
add
fstpl
push
test
xchg
or
mov
pushl
je
clc
xor
testl
loop
add
push
mov
lods
insl
add
sarb
jne
clc
jg
fs
or
xchg
arpl
mov
pop
movb
mov
adc
sbb
fcomp
xor
aas
dec
lea
mov
cmp
pop
xchg
sub
cmp
inc
xchg
jae
dec
sub
dec
jge
jmp
mov
fs
bound
or
lds
xor
mov
pop
or
fdivrp
mov
sub
mov
sbb
mov
jo
orb
rcrb
ret
xchg
pop
jl
jmp
sbb
dec
push
adc
pushw
pop
or
clc
ficoml
or
add
lods
sub
mov
lahf
sbb
mov
pop
orb
movb
sbb
fmull
shl
inc
sub
cld
int
loope
sub
popa
fucomip
nop
scas
ret
shlb
push
adc
mov
test
push
into
xor
lret
xchg
adc
les
fcomip
mov
sbb
aad
push
dec
fldcw
push
push
sub
mov
enter
adc
pop
bound
and
rorb
popf
dec
insb
dec
adc
in
dec
mov
lods
scas
dec
or
shlb
sub
pop
enter
ret
int
pop
push
bound
clc
dec
add
lcall
mov
cmp
inc
mov
inc
cmp
dec
cmp
adc
adc
push
inc
add
sub
ret
and
cmp
je
adc
xor
das
js
out
ficoml
lea
and
adc
mov
sub
mov
sub
and
cmp
mov
arpl
push
les
add
add
cmpb
or
mov
and
je
sbb
push
scas
mov
xchg
pop
out
push
movups
pop
bound
sti
and
add
pop
and
inc
and
mov
testb
push
enter
push
add
nop
lret
orb
add
cltd
push
cmp
push
jl
nop
lret
push
or
pop
call
mov
dec
adc
fs
jo
jge
mov
push
pop
pop
and
es
pop
pop
jmp
xor
dec
andl
loopne
and
in
inc
repnz
add
cmp
lock
movsl
loopne
or
insl
mov
push
push
add
ret
xor
imul
ja
push
ficoml
push
jmp
fstpl
jg
adc
movl
xchg
mov
arpl
sbb
dec
cmp
mov
leave
ret
scas
divps
sarb
add
add
xchg
arpl
sbb
dec
cmp
xlat
adc
xchg
adc
mov
mov
out
sub
add
test
and
enter
cmpsl
mov
pop
out
push
imul
pusha
sub
aaa
cltd
fimull
add
sbb
aaa
and
push
stos
pop
fcmovu
xchg
orl
adc
and
jl
cltd
mov
add
shll
push
decl
xor
iret
xchg
dec
adc
sbb
je
push
push
or
mov
je
mov
ja
mov
mov
push
pop
adc
xchg
rol
outsb
sub
jle
lcall
bound
and
aas
ja
inc
mov
add
sbb
mov
in
dec
or
jmp
sahf
call
cmpsl
cld
mov
les
sbb
int
add
mov
jge
mov
add
add
dec
inc
xchg
pop
cwtl
and
dec
loopne
jl
add
mov
adc
mov
sub
dec
jbe
mov
jo
dec
arpl
cmp
or
and
inc
outsl
or
loop
ss
xchg
lea
inc
dec
aam
xchg
dec
fmul
push
push
rclb
sub
subb
push
pop
adcb
test
lods
loop
or
pop
push
mov
cmpsl
sbb
or
cltd
push
test
adc
push
or
sbb
add
sub
sbb
or
dec
mov
lock
adc
adc
jo,pt
fcoms
pop
jg
cwtl
add
xor
daa
mov
xchg
mov
push
push
mov
imul
mov
js
jle
push
mov
xor
andb
aad
push
mov
imul
sbb
repnz
sub
inc
push
dec
in
cmp
dec
inc
ret
outsl
inc
fldl
fsubl
xchg
push
add
mov
xchg
jns
jo
push
push
push
or
test
mov
xchg
add
xchg
cmp
add
outsb
dec
add
pop
js
sbb
push
popa
mov
ds
mov
pop
jg
and
and
mov
add
mov
adc
loop
or
xor
andb
add
xchg
push
inc
clc
push
add
das
push
inc
or
xor
in
xorl
aas
rorb
jg
dec
dec
or
mov
or
adc
adc
push
mov
add
inc
and
orb
imul
xchg
mov
enter
in
xor
shrl
push
sbb
addb
enter
push
adc
ficoml
mov
sahf
lahf
clc
dec
sbb
aaa
inc
pop
test
mov
jmp
inc
lock
cs
sub
push
push
cmp
cmp
jmp
adc
pop
cmp
xor
test
dec
or
shlb
push
mov
add
mov
mov
test
dec
scas
mov
ds
xchg
sbb
jae
int3
add
xchg
frstor
push
sbb
rcr
add
rcrl
cmp
dec
inc
xlat
es
cmpsl
nop
add
out
mov
dec
xor
sbb
and
movsb
mov
add
and
inc
out
test
add
pushw
and
sub
aaa
push
outsl
xchg
mov
lea
fisttpll
inc
adc
and
shl
in
movsb
lahf
imul
movb
dec
addr16
push
test
sbb
sbb
cmp
clc
push
repz
fmuls
push
movsl
out
sahf
pop
pop
push
xor
std
dec
cmp
push
je
dec
aam
add
xchg
inc
les
stc
inc
inc
daa
scas
lahf
je
ret
xor
mov
jae
std
adc
dec
xor
addb
movsl
cmc
insb
es
sbb
adc
sarb
popa
jnp
sub
inc
mov
xchg
mov
cmp
leave
repz
and
les
enter
mov
aam
jg
jae
jae
sahf
cwtl
add
popf
sub
mov
insb
and
orl
test
dec
arpl
add
sarl
std
hlt
sub
push
hlt
pop
pop
lods
sbb
mov
mov
clc
adc
pop
cld
pop
cmp
jne
movb
inc
cmp
or
mov
loop
mov
push
iret
inc
mov
inc
addr16
imul
outsl
stos
add
cs
xchg
mov
je
add
adc
or
dec
pusha
push
and
and
lret
mov
mov
and
xor
fistps
adc
leave
inc
bound
jl
sbb
mov
adc
je
stos
xor
mov
popl
xor
jecxz
test
sarl
push
xchg
and
loope
push
push
ret
scas
pop
testb
mov
inc
xchg
cmp
int3
loopne
mov
test
pusha
jo
out
dec
sub
mov
adc
push
push
loopne
clc
inc
sar
ljmp
outsb
mov
cs
jg
pusha
add
jb
sub
addb
xchg
cmp
adc
call
imul
sbb
push
add
mov
outsb
pop
out
js
outsl
adc
pop
out
push
mov
push
iret
and
test
jmp
mov
sarb
jp
cmp
idiv
sbb
jae
mov
jne
sahf
outsl
cmp
fs
sbb
leave
adc
adc
aad
cmp
jmp
sbb
je
scas
and
jmp
and
jnp
je
gs
push
pop
fs
add
in
adc
push
andl
iret
repz
repnz
cmp
jns
ja
push
sub
out
push
mov
add
and
cs
and
fiadds
shl
sbb
adc
or
insb
andb
pop
push
daa
testw
sbb
pop
je
or
insb
or
bndldx
les
sbb
pop
test
movb
xchg
adc
cmp
or
mov
fs
insb
sub
jg
mov
je
cmpl
adc
fidivrs
ss
je
jne
dec
adc
mov
clc
jg
hlt
cmp
cmp
push
sub
pop
mov
xor
xor
xchg
sbb
mov
mov
xor
xor
mov
and
inc
xor
frstor
data16
push
push
cmp
inc
cmp
enter
div
add
mov
lret
sub
xor
mov
adc
cmp
outsl
hlt
js,pn
dec
and
push
xor
add
loop
sbb
and
bound
mov
inc
or
movsl
push
pop
push
dec
insb
movups
sbb
push
cmp
jl
adc
sbb
push
cmp
lret
rol
dec
dec
shrl
shlb
rol
inc
test
sub
and
into
jbe
sbb
mov
sbb
jne
mov
pop
sarl
clc
adc
sub
add
push
xchg
mov
mov
mov
addr16
cmp
pop
insb
jmp
shrb
arpl
xor
adc
mov
es
mov
jecxz
mov
pop
jmp
jle
iret
fistps
jmp
adc
jmp
scas
jne
and
sub
push
push
dec
and
xchg
pop
lret
and
push
jle
push
popa
pop
ficoml
js
add
sub
fld
stc
mov
and
sbb
and
and
xchg
sub
sbb
insb
or
inc
inc
push
or
xchg
popa
push
mov
mov
pop
mov
pushf
push
jecxz
test
xor
ljmp
movsb
adc
pusha
pop
aaa
pop
pop
daa
adc
push
dec
add
mov
data16
xchg
xor
arpl
jo
dec
ret
and
xchg
and
sbb
xchg
aaa
or
pusha
mov
mov
adc
sbb
add
inc
cmp
test
shlb
cmp
pop
faddl
sub
lret
jbe
dec
testl
insb
sahf
aam
xor
adc
xchg
add
movsl
ficompl
dec
inc
push
and
dec
and
jnp
xor
push
dec
or
sbb
enter
dec
dec
cmp
mov
insl
push
fisttpl
gs
pop
xor
popf
or
aaa
sbb
clc
insl
leave
pop
les
sub
dec
adc
movsb
test
push
inc
clts
daa
ss
addb
jecxz
imul
mov
faddl
aas
test
xchg
sbb
pop
fisttpl
jo
stos
ja
hlt
xor
jle
dec
inc
or
inc
insb
add
idivb
add
mov
add
mov
inc
movsb
push
xchg
mov
cmpsb
add
cmpsl
adc
push
jns
sbb
test
add
mov
test
jmp
outsb
loopne
call
mov
xchg
xor
push
add
jg
pusha
jo
lahf
pop
xchg
aam
xor
add
in
sbb
cli
and
js
adc
xchg
fwait
and
movsb
push
push
and
sub
fsubs
xor
jbe
ret
aas
or
loop
or
je
ret
ret
aaa
nop
mov
or
clc
fimuls
dec
roll
dec
adc
repz
push
test
pop
mov
scas
add
push
xor
pusha
push
int
add
and
add
pop
insb
push
sbb
or
push
push
lea
cld
inc
ror
or
add
xchg
sarb
pop
push
and
ds
pop
push
in
dec
dec
movsl
mov
dec
pop
subl
andb
sbb
clc
add
push
cli
shl
mov
sbb
add
mov
bound
cmp
aad
or
mov
dec
adc
fsts
nop
addb
add
ljmp
xchg
aaa
add
sbb
js
rcl
and
sub
jo
mov
push
pusha
imul
pusha
lahf
fsubrs
roll
dec
test
dec
add
daa
add
cltd
xchg
adc
jo
push
mov
js
add
xorb
ret
and
inc
rcrl
pusha
add
fstl
aam
pop
loopne
inc
push
shlb
xorb
dec
or
mov
test
stos
dec
mov
ss
jb
sbb
dec
push
fcompl
aam
adc
fisubs
les
push
jp
pop
stos
jne
and
inc
mov
inc
inc
sbb
mov
and
push
and
test
pop
loope
les
xor
push
inc
mov
xchg
loop,pt
mov
or
xchg
or
adc
unpcklps
mov
cmp
xor
addb
lea
fs
hlt
mov
shlb
dec
mov
sarl
ret
xor
pop
int3
loop
xchg
sub
jbe
inc
add
add
es
addr16
or
add
sub
lea
push
testb
push
or
push
mov
or
fs
inc
jmp
sbb
pushf
leave
mov
pop
js
push
add
sub
sbb
mov
insl
lods
dec
insl
or
push
push
adc
fidivs
fsub
inc
clc
add
imul
dec
mov
adc
ds
shlb
jne
add
cmp
fcomp
int
cmp
xor
pop
int
adc
aaa
out
lret
aas
or
adc
ss
fwait
scas
or
inc
xor
adc
push
roll
cmc
aad
mov
pop
out
and
mov
add
aam
aam
test
in
pop
adc
shrl
jmp
jbe
jmp
cmp
or
jge
xchg
rclb
mov
push
jecxz
cli
fsubl
jb
and
mov
jle
cmp
mov
adc
inc
jae
push
pop
stos
adc
inc
adc
aad
iret
add
push
xlat
pop
jb
xchg
xor
push
add
xchg
push
mov
addr16
mov
lea
jb
je
cmc
ret
imul
mov
jnp
pop
and
mov
fidivs
xor
and
je
and
sbb
int
or
ret
jecxz
or
pop
and
sub
sub
call
sub
testl
test
hlt
in
mov
add
pop
vprotq
mov
push
je
mov
imul
iret
pop
mov
or
pop
arpl
test
push
std
push
xchg
out
add
dec
add
bound
pop
cmpb
sbb
sub
push
push
add
and
jecxz
sbb
adc
jmp
push
addr16
or
ss
bound
test
sbb
cli
add
or
es
push
add
rcl
orl
lock
fadds
push
enter
mov
inc
popf
addl
mov
scas
clc
out
push
mov
adc
jo
or
xchg
push
pop
in
push
ret
add
sub
dec
add
xchg
mov
adc
mov
dec
ret
and
in
imul
arpl
add
jnp
push
jnp
sub
add
cltd
adc
and
pop
fwait
nop
fisttpl
push
add
ss
test
repnz
fcoml
fcmovnb
xor
mov
addb
fistpl
movb
insl
xor
mov
scas
add
dec
lret
arpl
mov
xchg
cmpb
out
sbb
mov
jbe
cmp
dec
dec
fiaddl
jne
daa
dec
arpl
movsb
test
cmp
jge
adc
xchg
ret
scas
xor
cltd
jne
push
xlat
std
xchg
mov
cmpsl
je
leave
inc
lea
push
mov
xchg
adc
lock
push
push
in
push
sub
std
mov
dec
mov
out
movsl
cmp
imul
repz
xchg
leave
incl
jmp
adc
add
adc
ds
sbb
rolb
pop
xor
cmp
imul
push
pop
xor
xor
mov
out
fisubl
sahf
adc
jge
out
imul
insb
dec
mov
or
jle
xor
or
pop
and
fimull
sarb
movzwl
call
xchg
mov
push
dec
jo
popa
lahf
dec
sahf
lcall
push
inc
js
pop
les
movsb
daa
cmp
cs
flds
sbb
mov
sbb
jae
cli
jne
cmp
inc
and
cmp
mov
stc
dec
les
lock
pop
xor
ds
loopne
das
mov
mov
aaa
lock
add
rorl
test
xor
rcrl
and
out
rol
adcl
aam
adc
adc
call
test
mov
cmp
subb
rcr
lea
add
add
dec
cmp
mov
push
add
add
pushf
xor
or
dec
jecxz
shrl
pop
lds
je
ja
lods
js
mov
add
aam
shlb
xor
lods
adc
imul
jns
stos
notl
pop
inc
ja
mov
push
jp
jmp
pop
test
and
sub
insl
mov
and
and
mov
lods
add
xchg
mov
rcr
out
fnstsw
lcall
imul
jle
movsl
sub
sbb
add
inc
sbb
sbb
aad
adc
js
fbstp
xor
test
and
lea
and
call
bound
xor
js,pt
push
mov
adc
sbb
sahf
jge
jb
pop
or
mov
add
pop
and
mov
and
jmp
fldl2e
lcall
fstl
and
or
mov
sbb
jecxz
adc
sbb
inc
add
adc
push
jmp
lods
inc
push
fwait
call
sub
mov
add
xchg
or
pop
pop
in
push
dec
inc
mov
inc
and
pop
jle
mov
inc
stos
xchg
jle
ret
or
aam
ret
outsb
les
jle
lds
dec
clc
or
clc
test
jnp
orl
xor
xchg
inc
sub
adcb
cmp
xchg
rcrl
popf
mov
inc
and
and
inc
push
cmp
add
mov
push
sub
dec
mov
wrmsr
je
scas
orb
adc
add
push
js
xor
pop
pmuludq
cmp
pop
sbb
mov
js
in
mov
lods
lods
and
inc
mov
mov
xor
jnp
cmp
sub
push
inc
or
inc
jge
insb
mov
in
sbb
ds
dec
dec
mov
add
push
sub
push
xchg
and
xchg
or
out
mov
rclb
and
dec
and
dec
repnz
movsb
lret
adc
push
push
cmp
add
sti
xchg
sbb
mov
rorl
test
repnz
cmpsb
int
or
inc
sahf
lret
test
xor
or
arpl
mov
lahf
out
pop
int3
or
push
jae
push
sbb
test
inc
notl
xor
mov
adc
push
ret
jb
fsubs
test
mov
cmpsl
lods
rcll
mov
xchg
and
lods
test
in
filds
push
gs
int3
push
push
mov
idivb
int3
mov
add
cs
sbb
iret
mov
cmovo
sbb
and
inc
push
movsb
inc
pop
pop
jnp
int
arpl
nop
fistl
nop
mov
adc
push
jo
clc
je
sarb
dec
es
adc
xor
mov
xchg
pushf
adc
flds
sarl
fistps
stc
xorb
int3
dec
in
leave
mov
xor
adc
cld
xchg
std
adc
paddusb
pop
xchg
out
adc
adc
mov
popa
flds
sti
scas
inc
loope
in
loope
ret
in
add
pop
add
jns
and
test
iret
fsubl
shl
lea
fistl
and
pop
cmp
sbb
mov
add
push
dec
pop
push
cmp
mov
seto
sarb
pop
movsl
ffreep
nop
sbb
xor
push
push
sbb
rorb
jg
sub
dec
or
add
push
add
mov
mov
scas
imul
and
jne
mov
addb
xchg
test
sbb
js
out
jge
enter
cmp
arpl
loope
mov
mov
loope
sbb
insb
pop
sbb
mov
sbbl
int
xor
mov
gs
unpcklps
pushf
add
je
sub
or
jno
rcrl
add
or
pop
add
ret
adc
pop
inc
sbb
sbb
ljmp
popa
xchg
jbe
sbb
repz
shlb
in
push
push
fs
ss
or
or
rcll
adcb
test
cmp
rorl
pusha
sub
dec
jns
jo
and
or
push
adc
jmp
jne
subl
add
xor
pop
ret
inc
add
lcall
sbb
je
fadd
mov
notb
pusha
nop
loop
test
pop
sub
push
xor
rcr
ret
mov
adc
adc
xor
pushf
imul
mov
popf
xor
pop
xor
pop
lahf
mov
push
inc
pop
fwait
in
dec
inc
mov
movlps
mov
sbb
dec
std
adc
pop
sbb
xchg
inc
adc
cmpsl
push
iret
out
ja
or
jae,pt
mov
mov
nop
inc
push
mov
and
icebp
jle
imul
or
int
jns
mov
add
and
push
inc
or
leave
mov
sbb
or
jnp
je
pop
or
shld
pop
cmp
add
mov
jp
loopne
inc
mov
sbb
inc
in
xchg
or
add
arpl
insl
adc
iret
sbb
lcall
es
into
and
cltd
sbb
js
jne
clc
insb
fs
or
lock
xchg
inc
sub
adc
and
sti
ffree
pop
mov
popa
jns
aam
or
sub
xchg
aam
xlat
lret
sub
or
ficoml
sub
xlat
or
cwtl
and
cmpsb
xchg
ss
in
adc
sbb
xor
sbbb
cmpxchg
enter
xor
mov
scas
int3
nop
pusha
movsb
xlat
xchg
rcrb
push
fsts
and
mov
scas
push
movsw
xor
inc
xchg
add
dec
pusha
repz
ss
and
dec
add
addl
mov
add
add
adc
fs
addr16
lods
pop
or
push
or
mov
cltd
or
inc
or
inc
test
or
xor
js
add
fdiv
or
push
lea
cltd
mov
fwait
inc
mov
gs
leave
inc
add
or
fcompl
and
push
inc
and
mov
data16
lret
xacquire
and
or
and
outsb
call
xor
sub
cmp
and
addl
lcall
push
sub
sbbl
rorb
jb
add
dec
xorl
jae
fidivs
es
push
xchg
push
imul
lods
call
sbb
dec
sub
enter
add
sub
xchg
inc
repz
psubusb
mov
push
inc
fnstenv
cmp
ret
les
add
jl
adc
and
bound
push
sub
adc
xlat
outsb
dec
aaa
push
lods
in
dec
sub
lea
ljmp
rcrb
jmp
mov
sbb
or
xor
lods
mov
adc
sbb
xchg
jle
mov
adc
test
es
cmpl
pop
cld
inc
sahf
add
add
push
xchg
dec
mov
pop
cld
movsl
and
mov
cmpsb
call
mov
daa
add
xor
pop
jno
xor
push
fmuls
fs
shlb
mov
mov
movsl
in
sbb
outsb
pop
pushaw
push
adc
add
push
sahf
inc
mov
push
push
mov
xor
xchg
pop
sub
add
fsubr
add
orl
stos
enter
mov
mov
out
add
fwait
pop
push
rorl
sub
icebp
xlat
adc
mov
adc
xorl
fisttpl
enter
andl
insl
shlb
or
and
add
cmp
aaa
xchg
cmp
dec
fmuls
or
rorl
in
push
inc
inc
cmp
addr16
cwtl
nop
addl
mov
sbb
xchg
out
sti
sbb
imul
arpl
rcrl
inc
clc
sbb
rol
je
movsl
add
pusha
test
adc
add
dec
enter
push
jl
rcrb
cmp
pop
daa
mov
and
xchg
sbb
xlat
dec
fiadds
adc
and
hlt
invd
gs
jo
and
sub
mov
leave
pop
sbb
mov
pop
lcall
push
jo
out
push
and
or
xor
sub
mov
pop
pop
push
aam
ret
or
adc
ret
and
or
and
imulb
outsl
lahf
sub
inc
pop
push
xorb
shll
pop
cmp
or
adc
pop
add
in
pop
out
das
test
mov
push
jno
or
lods
lea
pop
inc
dec
pop
test
roll
jl
aam
inc
sub
and
mov
daa
scas
lods
mov
inc
sub
fisttpl
and
mov
and
pushf
add
enter
and
xchg
push
pop
sar
cmpsb
sub
sbb
inc
mov
sub
add
nop
pop
into
sub
jb
pop
push
push
mov
leave
enter
shrb
mov
and
pop
nop
das
and
enter
dec
push
or
aas
push
or
mov
adc
and
or
cs
xchg
sbb
mov
rorb
pop
out
mov
stos
dec
inc
bound
xor
push
adc
lahf
xor
hlt
xor
inc
leave
inc
xor
mov
cld
push
popf
xor
push
mov
push
outsb
jb
ja
xchg
test
sbb
add
in
or
push
push
jae
sub
in
dec
inc
ret
outsb
cmp
and
sbbb
lahf
dec
add
gs
or
insb
sahf
addr16
jecxz
pop
mov
sahf
popa
jnp
adc
dec
dec
jmp
out
insl
push
insb
pop
pop
clc
adc
mov
icebp
lds
mov
cmpl
movl
xchg
cltd
add
test
adc
aaa
in
rclb
popa
loop
aam
loopne
mov
test
movsl
adcl
fs
outsl
rolb
xchg
aad
rcrl
pop
test
movsb
rorl
lahf
xchg
sbb
and
icebp
popa
sub
add
cmp
adc
nop
test
ret
or
cwtl
mov
je
iret
and
add
mov
and
dec
adcb
mov
jmp
movsl
repz
push
lds
dec
inc
jecxz
dec
push
iret
lea
call
cmp
mov
aam
imul
addl
and
lds
xchg
dec
jnp
jmp
mov
push
fmuls
icebp
rorl
mov
clc
dec
dec
test
jns
add
stos
ja
daa
jno
fsubl
push
push
push
shrb
add
add
and
sub
inc
adc
and
pop
in
imul
aaa
pop
adc
rolb
fimuls
sbb
test
test
ds
js
es
pop
mov
inc
sbb
popf
mov
sti
cmp
inc
add
sub
sbb
add
push
adc
push
je
adc
scas
dec
jne
cld
jne
cmpsb
or
sub
divl
sub
push
add
stos
dec
mov
rorb
mov
movsl
cltd
fsubrs
cmpsl
xchg
mov
stos
imul
cmp
or
scas
pop
and
pusha
sbbb
fimuls
pusha
pop
inc
inc
shr
xchg
pop
sbb
lcall
popa
adcb
cmpsl
dec
push
imul
sbb
ds
rolb
loopne
and
or
sub
hlt
cmp
iret
orl
or
and
out
aad
or
sbb
jns
inc
scas
pop
aaa
pusha
sub
pop
leave
repz
and
push
push
inc
fimuls
sbb
pop
inc
fimuls
in
ljmp
daa
pop
pop
mov
out
sub
xchg
ss
jecxz
or
sbb
ja
lods
in
mov
push
je
and
adc
and
add
lods
fdivrl
mov
imul
and
or
pop
mov
insl
cmpb
sbb
add
jbe
aad
shlb
pop
addr16
and
enter
or
sbb
sbb
mov
mov
enter
int3
and
adc
inc
lcall
fmuls
daa
addl
ja
insb
fsub
xchg
cmp
das
push
paddq
mov
pop
adc
ret
jo
adc
in
adc
aam
inc
jmp
mov
xchg
adc
xor
and
mov
lods
nop
and
test
sub
in
stc
mov
xor
or
mov
push
cs
rcrb
push
push
aam
jl
movsb
nop
pop
movsb
sub
pushf
add
add
lcall
leave
or
sbb
add
dec
bound
push
imul
js
xchg
xor
lcall
in
cmp
adc
sbb
adc
push
or
dec
push
lea
btl
xchg
shl
stos
sub
out
push
mov
xchg
or
lock
lcall
jge
mov
adc
inc
orb
xchg
adc
movsl
inc
and
cwtl
movb
fldl
pop
push
cli
jae
sub
movsl
push
test
ljmp
loop
jne
sbb
loop
pop
popf
sub
ljmp
mov
fcomps
data16
int3
jb
xlat
jae
or
add
jmp
push
shlb
sub
push
jbe
subl
into
adc
mov
add
outsb
iret
cs
push
and
and
sub
fnsave
sar
lods
adc
push
andb
fisttps
mov
or
lahf
rcrl
roll
and
nop
movsl
add
mov
push
insb
test
cmp
and
or
sub
test
mov
mov
adc
sub
xchg
xchg
mov
mov
call
cmp
lock
arpl
dec
mov
jge
mov
mov
and
je
or
or
ret
pusha
push
pop
lret
lea
and
in
cwtl
pop
add
fwait
popa
add
test
add
out
dec
xchg
xor
push
test
dec
js
and
fcmovb
add
dec
push
or
stos
xchg
icebp
roll
jecxz
movsl
lea
pop
sub
add
adc
adc
and
in
xor
mov
inc
js
jns
cmp
fadds
test
push
pop
mov
push
idivl
and
xorl
lods
push
sbb
adc
xchg
nop
cmpsl
jl
or
and
rolb
adc
inc
sub
dec
int
cmpsb
mov
push
stos
imul
add
and
sub
icebp
call
je
and
or
insl
sbb
adc
fldenv
out
push
sbb
jb
sbb
push
sbb
mov
push
or
or
cmp
sbb
sub
xchg
rolb
mov
rclb
push
push
pop
cmp
ret
in
xchg
int
stc
stos
imul
jns
sti
cwtl
pop
add
xor
nop
mulb
mov
push
jo
je
inc
jmp
iret
cltd
daa
outsl
nop
mov
and
or
and
adc
sbb
mov
in
mov
sub
imul
fldt
inc
cwtl
and
push
sub
movsb
daa
sub
and
and
insb
test
inc
inc
sub
add
movsb
or
cmpsl
in
inc
xlat
xchg
inc
cmp
add
pusha
pusha
and
xchg
sub
cmp
xchg
daa
int
jecxz
test
cmp
sub
push
or
or
jns
dec
sub
mov
cmp
jmp
lock
aaa
pop
aas
call
scas
movsl
cwtl
jl
dec
add
hlt
dec
inc
mov
loope
mov
push
iret
mov
in
adcb
xorb
addl
lods
or
dec
pushf
loop
rclb
and
inc
pop
inc
pusha
mov
xchg
mov
xchg
push
or
lea
ret
jp
iret
aaa
shlb
adcb
daa
dec
adc
rcrl
add
add
lods
jg
fidivl
add
arpl
lret
mov
cmp
push
dec
cmp
pop
lret
sub
pop
xor
repnz
pop
pop
add
cmpsl
cwtl
jne
pop
sbb
adcl
mov
in
dec
cmpsl
jg
ret
jl
or
fcoms
or
clc
mov
add
inc
sub
gs
pop
jo
cmp
pop
in
sidtl
add
push
xchg
xor
mov
dec
dec
in
sub
sbb
rcrb
sub
mov
mov
ret
push
int3
imul
sub
lods
and
in
pop
and
push
push
inc
push
sub
mov
dec
aam
push
jnp
ret
shlb
movsl
inc
adc
dec
mov
push
shll
loope
icebp
icebp
in
push
jmp
add
pusha
sub
push
inc
adc
mov
mov
clc
cmp
push
jle
add
inc
pop
pushf
push
aas
rclb
mov
les
xchg
mov
add
add
sub
dec
jmp
add
stos
gs
adc
push
mov
or
jne
add
cs
lods
add
aam
adc
adc
xchg
movsb
or
hlt
fcomps
pop
cmp
push
sbb
and
or
test
sub
add
les
fsts
or
ret
lret
push
cmp
lods
or
xor
lds
adc
mov
js
test
sti
pop
inc
loopne
and
jns
enter
insl
punpckhbw
or
sub
sbb
hlt
or
enter
mov
insb
jmp
pop
jle
lea
push
dec
cmpsl
and
into
mov
es
jecxz
mov
lret
std
pop
xchg
hlt
test
sbb
cmpsb
stos
xor
les
dec
xor
lds
cmp
shrb
aas
dec
or
addl
mov
test
div
pop
pusha
adcl
fldt
sbb
pop
shl
test
fs
pop
and
sub
mov
and
sahf
mov
cs
push
push
inc
mov
inc
add
jae
fildl
lods
mov
pinsrw
outsl
in
es
adc
lret
test
sub
dec
mov
je
leave
scas
adc
shlb
pop
aam
arpl
js
mov
cmpsb
or
pop
cmp
cmc
jns
test
je
bound
xchg
mulb
pop
dec
xor
sub
call
clc
orl
jns
addb
sbb
xor
rorb
mov
pushf
mov
dec
pusha
push
std
mov
cmp
sbb
mov
int3
or
or
ret
lcall
in
daa
jmp
add
gs
xchg
adc
shlb
jo
xchg
lea
das
inc
inc
lahf
test
ja
cli
mov
mov
test
es
add
test
pop
add
cmp
mov
imul
movsb
lea
or
mov
test
xor
divl
das
mov
pop
or
shlb
imul
sub
xor
cmp
cwtl
pop
arpl
imul
pop
push
mov
lock
inc
dec
inc
xchg
add
push
imul
sbb
and
sar
or
sbb
push
and
repnz
mov
leave
sbb
sbb
cltd
xor
test
fcomps
add
or
lcall
lods
loope
xlat
add
sub
inc
test
push
cmp
add
or
scas
xchg
pusha
es
nop
inc
or
mov
xchg
cmp
out
mov
or
push
mov
loopne
dec
roll
aam
xchg
nop
mov
jb
cmpsl
mov
jbe
xor
stos
mov
fidivl
mov
subl
and
inc
ljmp
sbb
in
add
inc
cltd
es
aas
jge
test
mov
push
push
sbb
fwait
lds
call
xchg
cvtps2pi
xor
mov
dec
dec
imul
loope
test
and
dec
addb
mov
js
jle
push
fisubrl
arpl
pop
fcmove
inc
pushf
and
xchg
mov
fcoms
xchg
je
push
test
or
jl
adc
test
xchg
adc
add
lock
adc
lahf
xchg
sbbl
mov
cmp
xor
xchg
cmpsl
add
fnsave
lahf
out
lcall
call
dec
and
push
xchg
and
sarb
or
pop
mov
jno
inc
cmp
push
sub
imul
mov
sarb
and
cmp
call
incl
loopne
add
or
adc
loopne
ffree
dec
xchg
push
pop
push
clts
jns
inc
sub
jne
push
mov
jno
or
sub
mov
rcl
xchg
adc
mov
pop
in
or
inc
mov
adc
loop
push
mov
movsl
in
hlt
or
mov
pop
sub
clc
push
pop
jo
and
pop
ret
sub
ljmp
sbb
cs
pop
jecxz
pop
dec
sbb
mov
add
dec
aam
das
pop
aas
adc
shlb
cmp
andl
mov
lcall
adc
jl
test
clc
mov
call
push
push
add
ud2
out
leave
cmp
adc
jns
ficoms
xchg
addb
cmp
mov
add
dec
clc
imul
lods
repnz
pop
sub
add
and
sub
dec
jg
clc
inc
notb
test
adc
xor
xchg
push
scas
cld
sub
cmpl
xorb
sub
adc
add
nop
push
roll
xchg
jg
sub
push
jo
fcmovbe
dec
add
mov
in
bound
add
push
jecxz
add
mov
sti
add
clc
inc
mov
fistps
aam
outsl
add
adc
or
loope
adc
popf
ret
ret
dec
jp
repz
mov
fcoml
pusha
mov
or
stos
jmp
inc
and
imul
ret
lea
pop
xor
addb
cli
ficomps
call
daa
mov
aaa
inc
std
add
iret
cltd
pop
xor
push
lds
mov
mov
add
sbb
inc
mov
jmp
or
add
mov
xlat
mov
inc
jnp
xchg
and
push
movb
pop
push
push
adc
sub
inc
xchg
mov
sbb
fwait
mov
and
adc
pop
or
xchg
int3
or
testl
push
adc
les
lock
leave
xlat
push
filds
cwtl
or
add
and
adc
push
es
sbb
sbb
push
cmpb
add
add
shrb
xchg
arpl
addl
repz
sbb
push
add
sbb
jb
ret
inc
or
rorl
mov
adc
mov
xchg
add
lea
cmp
jae
sub
and
xor
mov
mov
add
ja
ja
jl
decb
je
orl
std
scas
jg
add
mov
push
test
test
popa
rcr
sbb
xchg
or
iret
and
or
or
jmp
mov
and
inc
push
xlat
cwtl
and
push
mov
mov
or
inc
gs
push
and
and
lret
push
mov
shr
push
xor
cmpsl
pop
jno
or
xchg
cmp
add
aam
and
pop
pop
scas
cmp
movhps
adc
ret
jae
mov
push
ficomps
add
es
push
cmp
js
xor
icebp
sub
pop
or
data16
into
adc
fnstsw
loope
push
sbb
shl
cmp
push
mov
movsb
in
xchg
xor
mov
add
or
dec
cmp
mov
and
or
sub
xor
lret
js
dec
aaa
push
loopne
pop
add
lret
imul
cmp
push
movsb
out
dec
fnsave
mov
or
dec
lds
mov
inc
jbe
push
or
inc
popa
lods
int
push
sbb
test
lds
ja
jne
sbb
mov
inc
ljmp
push
or
add
sub
xor
pop
popf
push
sub
jno
push
pop
push
lea
dec
aaa
je,pt
add
push
fistl
cmpsb
movsb
pusha
xor
decb
inc
pusha
push
mov
xor
push
and
mov
sbb
loop
inc
adc
lock
test
out
aaa
sarl
jl
shrb
pusha
dec
mov
add
test
lcall
push
sbb
roll
mov
sbb
adc
int
push
pop
pop
xchg
jecxz
daa
orb
adc
mov
aaa
cld
or
cmp
push
mov
add
clc
js
bound
insl
dec
mov
jo
test
leave
and
lea
aaa
push
and
cmpsb
push
mov
dec
imul
cmp
push
push
dec
push
mov
das
xchg
lods
ss
mov
popf
aas
and
push
adc
out
xor
lea
or
mov
mov
loopne
mov
loop
mov
lods
enter
push
sub
dec
push
mov
xchg
sbb
push
xchg
pop
loope
ja
out
pop
iret
repz
add
push
inc
inc
dec
inc
mov
push
and
fstl
add
dec
push
pop
pop
xorl
addb
test
das
test
mov
or
fwait
adc
sbb
inc
sbbl
add
adc
stos
add
add
xchg
test
mov
hlt
and
popa
mov
rorb
jo
in
jge
test
dec
loope
mov
mov
sub
sbb
nop
bound
repz
inc
sbb
cmc
out
je
mov
pop
pop
aam
les
cmp
mov
or
xchg
ret
loope
sbb
fcmovb
rcrl
jg
or
adc
push
pop
push
popf
sub
sti
xchg
sub
mov
pop
pop
xor
jne
and
loope
adc
pop
push
or
push
mov
popf
std
repz
adc
xchg
push
jns,pt
push
mov
cltd
xor
pop
es
faddl
push
lea
mov
movsb
addl
jl
fadds
sbb
pop
mov
subb
jecxz
lea
inc
enter
sub
mov
pop
pusha
adc
fadd
mov
adcb
sub
add
add
int
clc
or
jnp
jecxz
jns
inc
lds
push
mov
adc
sbb
adc
sub
insl
punpckhwd
push
adc
push
add
lods
iret
repz
pop
add
xor
in
sub
nop
xchg
clts
or
adc
adc
or
in
test
imul
ds
int3
push
pop
lret
rorl
adc
sbb
push
lods
add
mov
out
repz
adc
mov
mov
out
sbb
and
sbb
pusha
test
popa
loope
mov
adc
push
sbb
mov
sar
adc
mov
mov
in
pop
sub
in
cld
add
adc
fcoml
fmuls
inc
add
adc
sub
flds
sbb
push
sub
dec
inc
je
loopne
pop
mov
imul
daa
lock
add
and
inc
push
test
adc
xor
push
fwait
sbb
sbb
push
fcoml
inc
mov
imul
call
xor
pop
pminub
or
js
pusha
rolb
inc
and
cmp
xor
xchg
xchg
jmp
rorb
jno
pusha
mov
stos
adcb
sbb
fsubl
pop
inc
cmp
cmp
sbb
adc
popf
dec
jl
jnp
pop
pop
hlt
dec
add
pop
inc
lahf
fsub
push
or
push
push
sarl
inc
mov
jb
imul
popf
jge
inc
movsl
inc
mov
push
dec
fs
adc
jb
dec
movzbl
dec
movsl
repnz
in
in
jmp
movsl
fcoml
call
in
js
data16
inc
dec
inc
call
mov
add
and
ret
sbb
arpl
cmp
rolb
xor
and
xchg
daa
adc
dec
dec
dec
adc
mov
leave
mov
dec
sbb
arpl
mov
push
ds
popf
sub
loope
push
inc
ljmp
pop
dec
jl
xor
aaa
and
mov
adc
movsb
push
sbb
xor
pop
mov
adc
or
jmp
or
les
push
insl
cmpsl
lcall
adc
and
jle
je
jl
cmpl
fistpl
add
dec
add
fs
push
xchg
xchg
out
loop
and
and
mov
popf
test
push
imul
pop
add
push
push
setge
inc
inc
imul
xor
xor
imul
sbb
sbb
jmp
cmp
adc
orl
mov
jne
incb
int
fsubr
mov
pusha
loopne
aaa
adc
mov
fsubl
cld
push
ja
ja
xchg
mov
rolb
out
xchg
push
inc
in
cmp
sbb
and
lock
int
test
fcoml
adc
fcomp
add
add
pop
push
push
push
sbb
sub
adc
push
cltd
pop
add
iret
dec
add
add
or
xchg
jp
pusha
dec
mov
push
add
adc
ret
hlt
ss
mov
cmpsb
sahf
loope
data16
cmpb
je
test
les
mov
mov
shr
jle
pusha
sti
aad
mov
cmp
cmp
imul
sub
outsb
adc
jo
lahf
cmp
cmp
mov
jmp
dec
xchg
push
add
cmp
sbb
xorb
cmp
xor
testb
insl
mov
frstor
les
sub
mov
inc
movsl
test
in
mov
loopne
or
adc
xchg
dec
inc
clc
inc
cmp
adc
scas
imul
sbb
pop
test
xor
pop
push
shl
cmc
orb
pop
add
ljmp
sbb
pop
cmp
jle
mov
stos
sti
aas
cmp
and
add
adc
add
cwtl
mov
mov
call
aam
adc
dec
mov
inc
sub
xchg
add
lods
or
adc
leave
or
call
dec
add
movsl
jae
push
shl
mov
shrb
sahf
jmp
jmp
sub
push
je
bound
pop
adc
adc
arpl
mov
in
push
sub
in
lods
sub
mov
loopne
ss
lods
pop
ret
or
roll
adc
call
nop
loope
pop
test
pop
in
fucomi
mov
in
arpl
repnz
pop
and
add
push
push
push
fs
bound
xchg
filds
aas
push
mov
ds
jb
push
daa
push
jle
dec
lea
push
and
push
xchg
sub
aas
pop
mov
orl
adc
mov
push
push
mov
nop
mov
andb
push
sti
arpl
lret
sub
xchg
or
adcl
pop
pop
sbb
push
rorb
jno
cltd
imul
xchg
adc
das
sub
call
inc
inc
inc
repnz
insb
or
shrb
test
xchg
pop
push
mov
cmp
xor
stc
adc
cld
sti
or
cmp
rolb
push
cmp
dec
mov
lods
popa
add
cwtl
adc
loopne
cltd
aad
call
push
adc
cld
addb
push
push
addb
pop
ficoml
push
adc
xor
mov
sub
call
stos
dec
cld
cmp
pop
inc
imul
pop
jbe
pop
lods
dec
inc
testl
test
sbb
pop
inc
iret
mov
or
mov
jb
fnstsw
aad
scas
add
add
insl
dec
pop
dec
divl
stc
or
pop
arpl
dec
cwtl
pop
aas
or
sbb
pop
add
ss
jle
push
fidivs
popf
push
jns
cmc
jno
movsb
adc
sub
pop
sub
adc
jp
jmp
add
lds
sbb
inc
cmp
insl
mov
xor
dec
enter
push
ja
pop
cmp
xchg
mov
mov
lods
mov
or
ret
loopne
sbb
mov
and
cmp
cmp
push
add
add
mov
enter
sbb
out
pop
push
pop
pop
push
cmp
xor
lea
loope
sub
movups
xor
fbld
mov
add
stc
lods
pop
xor
pop
pop
es
adc
xchg
xorb
adc
sub
mov
add
push
and
sub
xorb
cs
xor
dec
xchg
andl
fbld
pop
mov
ret
gs
sbb
or
push
stos
loopne
movsb
xchg
push
mov
out
xchg
jne
jmp
sbb
roll
hlt
repz
add
xor
jmp
xchg
mov
test
insb
cmp
mov
mov
adc
pop
xchg
inc
call
or
or
popa
jg
cwtl
cvttsd2si
leave
ret
aaa
adc
mov
cmp
pop
lahf
je
push
lcall
rcr
fbld
fisttpl
fildll
push
loop
sub
pop
push
and
or
xor
cmp
lea
push
inc
dec
adc
jmp
mov
mov
cmp
fcomp
adc
adcl
jne
fldenv
sbb
jo
push
int3
lcall
repnz
add
inc
push
imul
in
add
imul
pop
enter
divl
mov
push
push
sbb
nop
pop
push
push
pop
or
ret
xor
mov
int
mov
cld
mov
jmp
gs
pop
xchg
cmpsb
ficoml
jno
fs
sti
clc
mov
mov
push
sbb
adc
xor
and
sbb
mov
inc
add
inc
loop
dec
adc
fs
loopne
enter
cld
adc
adc
xorb
shrl
bound
dec
fs
in
dec
fsubrl
cld
adc
xor
sub
add
arpl
into
mov
outsb
jbe
adc
adc
cmc
sub
cmp
das
adc
mov
or
jmp
add
fcompl
adc
sahf
xor
lcall
in
call
sbb
and
mov
sub
push
mov
push
jmp
sub
pop
pusha
or
adc
shr
fs
mov
adcb
movsb
push
pusha
and
xchg
insb
mov
pop
ss
mov
sbb
ficompl
mov
enter
adc
dec
ljmp
std
data16
adc
xchg
xor
pop
adc
add
xchg
scas
xchg
jg
or
adc
jl
or
or
add
and
pop
inc
jg
add
jae
xchg
mov
arpl
imul
ficoml
inc
aam
cmp
xchg
dec
ja
mov
jmp
xorb
adc
gs
rorl
imul
add
jbe
scas
xchg
idivb
cmp
incl
outsl
lds
cmp
sarl
inc
mov
sbb
cmp
ja
jbe
cmpsb
mov
mov
inc
in
jb
popf
jne
xlat
cwtl
inc
add
jecxz
and
mov
imul
add
dec
mov
inc
leave
sub
repnz
std
fisubrs
pop
dec
add
sbb
or
cmp
icebp
roll
and
jmp
jbe
xor
shlb
adc
xor
shlb
inc
into
lock
adc
ficoml
pop
cmp
inc
into
push
jmp
call
lsl
adc
inc
or
in
push
sti
add
sbb
dec
fwait
icebp
or
mov
mov
adc
mov
and
mov
inc
or
imul
xchg
inc
in
frstor
and
sub
pop
jmp
fs
jmp
and
push
aas
rclb
inc
xor
jns
test
inc
mov
or
add
sub
movl
jb
lods
pop
je
shlb
ret
push
inc
add
cmpb
cmp
les
mov
push
xorb
add
pop
fs
push
cli
testb
fildl
test
sbb
in
push
movsb
push
jnp
or
sub
sbb
inc
loopne
imul
dec
dec
or
cmp
lahf
in
andl
ret
xchg
mov
mov
add
push
mov
cld
mov
jg
daa
push
stos
adc
or
push
mov
mov
push
out
bound
adc
cmp
jl
xor
sarl
push
jl
je
mov
push
je
inc
fbld
in
sbb
cld
add
dec
dec
inc
and
insb
mov
pop
out
add
sahf
inc
add
mov
push
in
ret
sub
dec
sbb
cmp
mov
add
les
sahf
or
and
or
fidivl
inc
sbb
sbb
jmp
pop
mov
jno
xor
arpl
ret
inc
mov
mov
subl
inc
and
mov
jo
test
jno
lods
xchg
xchg
ds
or
imul
leave
or
leave
subb
pusha
or
jo
or
test
push
add
add
adc
lods
loop
stc
add
aas
addb
test
add
sbb
js
xor
fwait
pusha
mov
jp
and
push
push
add
push
push
fistpl
in
or
iret
mov
icebp
pop
jg
std
add
fs
mov
lods
call
mov
sbb
mov
xchg
push
addr16
or
adc
add
iret
cs
mov
xchg
mov
sub
loopne
flds
push
xchg
andb
int3
xor
icebp
pop
orb
add
roll
mov
sub
mov
adc
mov
add
ret
cmpsb
cld
sti
and
aas
push
jo
roll
jmp
push
adc
adc
pushf
pop
fstl
inc
jle
dec
cmpsb
clc
sub
pop
adc
cmp
jae
ret
dec
mov
push
sbb
dec
sbb
jg
lcall
movsb
xor
sahf
insb
mov
adc
adcb
push
mov
or
and
outsb
fcomps
pop
mov
mov
sub
ds
mov
stos
cmp
ror
or
cmp
or
andl
inc
pop
ffree
lods
pop
push
add
cs
and
sbb
mov
cmpsl
cmp
adc
or
movsl
xor
andb
xchg
mov
stos
xchg
inc
or
cld
add
mov
push
push
out
pushl
adc
xchg
subl
mov
sbb
test
pop
adc
pop
mov
inc
or
and
pop
je
mov
and
pop
clc
sub
jg
add
arpl
push
sub
cmc
fwait
inc
call
pushf
cmp
out
pop
jnp
or
je
xchg
je
mov
arpl
fs
sbb
jmp
outsl
fisttps
push
sub
sbb
negb
cmp
add
adc
testl
xchg
jl
gs
adc
hlt
in
pop
adc
xchg
adc
sarb
leave
or
xchg
and
fidivs
insb
int3
pop
mov
fcoms
add
inc
addl
add
mov
adc
std
pop
xchg
jno
sbb
add
ss
xor
and
pushl
cmp
aam
call
pusha
out
leave
icebp
cli
inc
cs
arpl
adcb
mov
enter
add
mov
adc
add
xchg
mov
lea
mov
in
sub
and
inc
in
int
inc
jmp
push
xchg
int
dec
subb
dec
mov
mov
pop
outsb
push
jb
add
sub
sbb
push
lea
cmp
aas
fs
jl
int3
inc
mov
add
push
fbstp
xor
mov
or
mulb
imul
add
xchg
loopne
pop
and
cmp
xor
mov
push
lret
adc
jb
icebp
ret
mov
push
leave
cmp
adc
repnz
aad
sbb
jl
enter
fwait
out
mov
push
scas
mov
sbb
sub
xor
pop
out
push
das
or
add
test
mov
inc
jecxz
add
push
cmp
mov
stc
or
orl
subb
std
hlt
jne
out
and
jnp
and
or
roll
mov
mov
and
mov
pop
fs
negb
jle
jle
add
mull
cmp
or
push
cmp
jecxz
rolb
pop
sbb
aas
dec
int3
or
push
sbb
push
test
push
enter
jg
jg
add
nop
xchg
add
jbe
cmp
clc
test
push
subb
sub
sarb
clc
and
mov
or
hlt
int3
dec
sbb
push
mov
add
nop
lea
fiaddl
and
mov
and
push
js
adc
ja
sbb
dec
fs
add
dec
jg
adc
orl
call
xchg
add
jge
xchg
hlt
push
mov
das
push
and
push
add
adc
xor
xor
lret
mov
mov
call
sbb
sbb
aaa
dec
rcl
pop
pushf
and
loop
mov
inc
xchg
jae
pusha
push
loope
scas
or
arpl
jns
inc
bound
add
cmp
fwait
lock
or
add
mov
inc
or
cwtl
loopne
es
lret
push
and
pop
sti
adc
insb
and
and
sub
std
nop
cmpb
das
insb
push
lods
sub
aas
loopne
add
inc
pop
mov
mov
xlat
je
cmp
fiadds
and
cmp
jb
testb
dec
push
dec
testb
cmp
mov
mov
add
test
push
jmp
inc
ss
mov
sub
je
data16
cmp
jns
mov
sub
pop
adc
daa
clc
push
push
or
addl
or
in
push
out
pusha
mov
adc
jge
pop
imul
jmp
das
xor
sbb
xchg
dec
inc
mov
scas
repz
push
incl
push
pop
xor
or
sbb
mov
shlb
fisubrl
rcr
pop
es
jmp
mov
mov
cmp
ljmp
popa
jecxz
test
cmp
mov
add
mov
xchg
aam
in
pop
sub
hlt
mov
fimull
inc
push
in
lock
es
cltd
in
inc
ffreep
jb
inc
mov
lock
mov
jl
dec
fsubrl
cs
dec
push
cmp
or
mov
fsubs
fucomp
dec
or
insl
cltd
or
xchg
mov
inc
fidivl
test
in
xchg
in
cwtl
sbb
rcrb
mov
xor
cmp
enter
cld
inc
inc
adc
leave
mov
sbb
jne
and
iret
cmp
cmp
dec
adc
popf
push
mov
scas
push
shrb
pushf
iret
push
inc
mov
push
loope
jge
sbb
jnp
aam
ret
rolb
cmpb
xchg
out
or
mov
cmpsb
dec
in
ret
lods
inc
fcoml
xchg
fsubrl
jo
repz
mov
movsb
inc
jne
shrl
cmpsb
call
dec
jne
dec
stos
cwtl
nop
out
xor
int3
or
lock
aam
mov
dec
leave
test
mov
sbb
pusha
rcll
fmull
mov
or
dec
xor
and
sbb
xor
and
and
xor
and
dec
xor
cmp
xchg
dec
xor
dec
xor
leave
fs
leave
rol
sbb
daa
into
sbb
in
sbb
mov
hlt
scas
pusha
xorl
enter
int3
rcl
add
cmp
dec
mov
test
in
call
enter
push
xorl
dec
xchg
jbe
xchg
inc
push
jb
push
call
roll
add
ret
mov
jmp
in
sbb
dec
push
xor
in
mov
xchg
inc
jno
call
mov
inc
push
scas
bnd
xchg
ret
adc
fs
dec
push
outsb
mov
aaa
insb
jmp
cwtl
loopne
out
mov
lods
add
out
in
sbb
jbe
out
xor
int3
test
pusha
xlat
xlat
sbb
test
test
test
add
fsubl
inc
daa
fadds
cmp
in
add
or
or
adc
xchg
or
in
clc
gs
cmp
mov
test
xor
cld
test
mov
jmp
scas
call
sub
in
xor
dec
sub
adc
or
add
cmp
and
add
hlt
adc
or
adc
pop
inc
dec
pop
and
dec
iret
pushf
inc
rol
inc
jb
mov
push
test
inc
cmp
test
dec
aaa
pop
inc
cwtl
dec
cmpsb
xchg
mov
pop
or
mov
cmp
push
mov
das
int
mov
aas
inc
pop
or
or
jb
add
add
mov
sbb
testb
fmull
scas
cmp
test
shrl
ret
mov
mov
sbb
stos
adc
rorb
and
mov
fstl
or
sub
enter
inc
cmp
adc
cmp
nop
or
or
cmp
nop
inc
or
or
pop
daa
sbb
adc
dec
scas
push
mov
ret
pop
push
insl
mov
adc
loopne
adc
in
popl
jno
inc
push
push
lea
jmp
push
pop
add
mov
adc
xchg
subl
add
mov
xor
xchg
jecxz
mov
push
jno
aam
movsl
sub
mov
out
fwait
in
mov
pop
scas
leave
ja
dec
pusha
jmp
es
ss
js
das
inc
enter
xchg
js
movsl
movsl
xchg
push
fimull
mov
xor
mov
push
inc
fcoms
mov
fnsave
push
clc
add
and
push
cmp
pop
adc
or
sbb
cmp
cmp
loopne
out
ret
rolb
test
dec
movl
call
dec
inc
fsub
fmuls
sub
push
jno
inc
dec
xor
test
lock
mov
sbb
lea
adc
inc
adc
mov
push
or
or
mov
rep
clc
test
fstpl
clc
xor
jne
or
mov
andl
loopne
push
lods
push
aas
xor
adc
daa
int
out
popf
les
rol
fsubrs
mov
scas
cmp
jo
ret
push
mov
adc
cmp
push
es
popa
stos
sbb
push
imul
push
movsb
adc
push
dec
xchg
xor
xchg
lret
test
lods
mov
xchg
xchg
xchg
mov
mov
xchg
enter
mov
xchg
sbb
arpl
daa
movsb
mov
pop
and
xchg
dec
mov
cmp
ret
sbb
or
push
xor
add
es
or
rcrb
inc
pop
mov
adc
pop
mov
fs
push
jne
sub
ss
test
and
push
stos
gs
jo
mov
popa
inc
hlt
fucomp
lea
and
push
mov
xchg
xor
and
cltd
pop
adc
rclb
add
out
jb
test
test
add
repz
leave
mov
push
shr
or
loope
dec
mov
pop
mov
sbb
pop
sub
pop
push
dec
sbb
js
ljmp
push
jno
or
mov
nop
or
adc
iret
mov
mov
or
pop
inc
ret
mov
jge
cmp
pop
sub
push
add
push
sub
sbb
push
adc
sbb
sbb
pop
out
add
mov
push
sbb
aam
pushf
sub
cmp
in
inc
shl
dec
pop
leave
mov
jnp
nop
loopne
jp
sbb
pushf
pop
mov
test
cmpsl
enter
inc
dec
mov
sbb
push
pushf
js
jnp
lods
leave
test
add
xchg
dec
and
pop
pop
cmp
and
mov
cmpsl
loopne
mov
adc
loope
add
insb
adc
cmp
fdivrs
jne
jnp
popa
nop
pop
vmovaps
add
rorl
mov
icebp
in
loop
enter
bound
arpl
xor
mov
dec
arpl
js
in
push
sbb
in
movsb
mov
jp
xchg
fcmovnb
cwtl
aas
mov
mov
lods
xor
push
adc
fs
test
fs
mov
rolb
fs
push
push
nop
daa
xchg
add
les
test
cmp
loopne
rolb
loopne
fcoms
xlat
mov
gs
inc
call
fstpl
ljmp
fsubr
add
jne
mov
push
inc
lods
mov
jne
mov
aam
jns
push
loop
dec
ja
sbb
faddp
call
lock
dec
sub
xor
inc
rol
push
movsb
ror
xchg
push
adc
pop
lahf
aad
sbb
enter
inc
movsb
lds
cltd
dec
adc
mov
or
pop
or
sbb
mov
outsl
sete
xchg
xor
xchg
or
pop
rolb
xchg
pop
das
or
or
add
test
inc
cmp
push
or
and
adc
inc
push
mov
out
sti
push
nop
sub
push
mov
cmp
mov
push
fidivl
and
xor
je
xchg
jb
cmpsb
and
int3
pop
fmul
ja
ret
push
iret
cld
les
sub
in
shlb
pop
cmp
aam
scas
aam
insl
xor
aam
das
and
pop
lea
push
mov
nop
inc
pop
xor
fldl
cmpsb
sarb
orl
push
dec
inc
inc
cmp
popa
clc
and
dec
xchg
insb
inc
pop
xor
mov
and
leave
loopne
and
push
xchg
loopne
jmp
jb
lds
bnd
inc
inc
and
cmp
outsb
shlb
ret
inc
loopne
add
dec
add
dec
ret
mov
lods
mov
mov
lods
sbb
mov
add
out
aad
and
or
lods
in
cmp
insl
inc
test
inc
in
sti
fcoms
int3
cmp
xchg
pop
push
push
jno
ret
flds
outsb
xor
push
pop
dec
in
outsb
in
sub
fbld
push
adc
sbb
call
loope
outsl
cwtl
outsl
rolb
nop
lods
or
mov
addb
ret
xorb
sbb
scas
pop
xchg
jge
inc
mov
xchg
nop
xor
loopne
xchg
pop
cli
xchg
pop
mov
add
movsb
xchg
or
inc
jno
jno
mov
adc
int3
pop
push
xchg
push
xor
add
arpl
jne
mov
movsb
rolb
mov
pushfw
fsub
aam
in
cs
and
test
dec
inc
jb
add
cwtl
push
mov
xor
cmp
mov
and
test
xchg
out
jl
add
rolb
push
mov
or
inc
sub
adcb
js
sub
inc
jae
or
call
sub
inc
je
xchg
mov
inc
ret
xor
sti
adc
mov
mov
cmp
push
mov
mov
inc
cs
int3
inc
mov
nop
cwtl
nop
fs
repnz
inc
lods
es
xorb
movsb
add
mov
mov
sbb
aas
pop
or
aad
push
add
jg
enter
fwait
push
add
mov
dec
dec
cwtl
jbe
inc
repz
lock
aad
imul
adc
test
aam
hlt
pushf
mov
enter
nop
mov
insl
mov
adc
shll
rol
es
in
lods
mov
mov
bound
aas
pusha
std
insb
and
jb
adc
cmp
xchg
pop
mov
push
repz
notl
nop
sbbl
dec
cld
sbb
sbb
sbb
inc
imull
xchg
push
push
adc
test
pop
adc
jno
cmpsb
sbb
push
pop
adc
dec
fs
fstpt
popa
dec
adc
sub
jg
sbb
cmp
aam
and
jmp
mov
popa
xchg
in
and
jg
xchg
and
addl
aad
dec
in
push
lea
loope
jnp
cmc
push
lea
call
rorb
jnp
popa
aam
test
ja
push
push
pop
nop
adc
sbb
add
movsl
mov
imul
es
push
jo
sbb
jge
ficoml
test
add
test
push
jge
movsb
cmc
dec
loop
inc
and
cmpsb
xchg
xor
je
out
js
lods
or
adc
mov
ja
out
pop
adc
xchg
jle
xchg
sub
adc
scas
mov
xor
ja
leave
in
mov
pop
fadds
fsub
mov
movsl
push
and
lods
in
adc
test
sbb
pop
imul
cwtl
jg
loope
les
push
aam
add
or
ret
test
mov
or
inc
jo
cmpb
push
and
movsb
sub
test
jecxz
call
les
je
enter
mov
mov
test
and
dec
fwait
shlb
jno
or
cld
inc
pop
or
test
inc
cmpb
mov
push
insb
sbbb
push
sarb
xchg
test
pop
xor
and
cmp
and
mov
addl
pop
orl
inc
in
test
dec
movsb
nop
psadbw
sub
test
cmpsb
xchg
mov
xchg
mov
imul
popa
in
in
jnp
roll
test
in
add
in
and
push
xchg
je
sbb
icebp
cs
aam
or
inc
add
inc
test
or
iret
inc
inc
or
pop
and
pusha
xchg
or
loopne
addb
cmc
call
in
mov
jl
and
shlb
push
mov
jb
add
inc
test
push
inc
lcall
out
jb
nop
and
push
sbb
or
inc
mov
jns
xchg
scas
imul
push
cmp
in
lret
pushf
add
xor
xchg
push
mov
cmp
inc
movsb
enter
fimull
adc
nop
das
iret
or
rcrb
sbbl
mov
xorl
add
rorl
jns
inc
or
mov
les
push
push
adc
sub
ss
test
rcrl
dec
cmpsb
xchg
test
sub
mov
push
fadds
aaa
loopne
js
and
test
ljmp
push
or
mov
mov
mov
dec
call
and
leave
inc
insb
mov
cmp
xor
test
lock
fmull
rorb
or
mov
lods
icebp
sub
push
inc
pushf
pusha
adc
mov
lea
imul
in
push
fsubrs
xchg
push
test
mov
inc
mov
xchg
push
xor
iret
push
orb
sbb
mov
aad
call
mov
mov
mov
dec
adc
loopne
mov
addr16
hlt
push
sbb
xchg
negl
in
test
adc
mov
cmp
pop
add
cmpsl
ja
scas
dec
outsb
outsl
add
orb
in
adc
es
fs
sub
cmp
sbb
xor
sub
in
xchg
in
adc
fs
dec
es
and
dec
es
aam
cld
dec
es
fs
in
roll
cwtl
mov
int3
push
enter
imul
lock
xor
xor
pusha
popa
test
aam
adcb
les
push
inc
popa
bts
stos
jmp
mov
lods
xchg
mov
sbb
inc
cwtl
in
pop
xchg
pop
add
mov
in
push
sbbb
add
lcall
or
adc
cmp
fsubs
fs
jge
xchg
xchg
fimull
jmp
std
or
nop
or
adc
fsubrs
mov
jg
aam
nop
sub
add
adc
ret
enter
sub
inc
cmpsl
mov
xchg
cmpb
stos
aas
push
pop
mov
dec
mov
insb
xor
movsl
xor
mov
add
in
mov
jl
or
push
and
loope
adc
jmp
das
aaa
test
sub
and
and
adc
dec
jo
icebp
call
test
add
xchg
sub
push
or
dec
add
push
arpl
aaa
inc
xchg
test
bound
jl
add
push
and
push
fdivs
push
fadds
adc
xor
cmp
ja
adc
cmc
add
lds
adc
and
subb
inc
xor
mov
sub
add
sub
enter
pop
or
in
xor
nop
in
call
sub
xchg
inc
push
add
jmp
xchg
sbb
adc
adc
mov
dec
pop
add
scas
inc
inc
cwtl
jb
loop
aas
test
mov
fsts
jb
aas
subb
inc
fs
adc
or
cltd
sbb
push
push
add
adc
dec
test
cwtl
test
cmp
cmp
pop
jl
and
test
or
sbbl
and
and
test
call
sub
pushf
cmp
push
std
push
and
inc
fwait
cmp
clc
test
outsb
push
popf
pop
and
cmp
lahf
fiaddl
xchg
lds
add
sbb
ja
sahf
stos
add
sub
jae
jne
and
and
call
push
xor
mov
shrl
xchg
add
add
pop
push
sub
push
call
sbb
loope
xchg
cmpsl
xchg
test
mov
jecxz
mov
inc
mov
rcrb
mov
xor
subb
lods
data16
dec
movsl
and
mov
cmp
arpl
enter
pop
mov
in
inc
aam
movb
aam
jmp
lock
or
jmp
or
sbb
xor
cmc
dec
add
xor
add
clc
popf
call
sub
sub
mov
adc
sbb
pop
sbb
lods
add
mov
enter
push
ret
add
fsub
addr16
cltd
sub
lds
cmp
or
push
sbb
sbb
fistpl
mov
or
mov
cmp
xor
movsl
xchg
xchg
cmp
test
in
sub
adc
mov
ljmp
mov
in
dec
loope
mov
mov
ret
cs
xor
stos
test
pop
js
inc
mov
movsb
mov
cmpsb
adc
leave
nop
fmull
mov
mov
repnz
push
and
xor
sub
les
or
das
xor
enter
hlt
mov
pop
dec
fistl
test
dec
xlat
inc
leave
mov
int3
inc
lock
and
aam
mov
sbb
or
sbb
mov
rclb
add
inc
test
sbb
xchg
sub
in
pushf
stos
add
movsl
les
add
pop
sbb
test
sub
xor
ret
shll
clc
dec
scas
cmp
jecxz
cmp
mov
inc
pushf
xlat
push
shll
push
dec
inc
inc
repz
lea
loope
xor
cmpsl
cld
and
in
addb
add
xor
mov
subb
loop
xorb
mov
push
lea
lea
mov
jge
imul
dec
leave
add
pop
adc
cltd
roll
jne
fsubl
in
iret
nop
push
and
add
mov
adc
rcrl
mov
xchg
call
lods
push
sti
dec
pushf
ss
stos
adc
roll
cmp
mov
jl
add
leave
test
gs
add
mov
fs
pushf
cwtl
adc
nop
xchg
inc
push
fs
mov
aad
cwtl
fistl
cli
adc
xor
push
popa
adc
and
pop
xchg
or
es
push
inc
shld
enter
push
ret
out
aam
test
dec
test
jl
push
sub
or
scas
bound
mov
add
aad
pushf
or
inc
cmpsl
mov
lods
lahf
mov
and
test
and
ficoml
repnz
dec
dec
test
pushf
dec
mov
inc
enter
insl
je
call
xor
aam
xchg
inc
insb
sahf
pusha
inc
add
add
xor
sbbl
fiaddl
adc
lret
inc
mov
or
xor
cmp
mov
push
add
lret
pop
sbb
call
outsl
adc
push
fdivs
xchg
mov
out
cmp
lods
popf
mov
stos
ret
push
dec
sahf
cmp
out
hlt
pusha
mov
xor
or
adc
sbb
or
or
mov
in
mov
scas
int3
icebp
xchg
in
mov
xchg
rcr
xchg
mov
ffree
adc
aam
daa
lcall
xchg
sub
xor
jl
push
addr16
or
cmp
and
mov
inc
jg
mov
mov
adc
test
lret
add
lret
mov
cs
xor
xchg
lods
mov
lds
dec
or
sub
in
jmp
mov
bound
add
cmp
mov
cmpsl
and
repz
xchg
add
loopne
xor
cmpsl
fcoms
jb
mov
lock
add
rorl
popf
add
adc
imul
mov
cmp
lods
notl
dec
mov
dec
lods
fucomp
adc
in
lds
mov
frstor
push
subl
nop
mov
sub
lock
test
fldl
mov
lods
sahf
mov
add
nop
test
aad
mov
jp
les
push
jb
mov
sbb
xchg
mov
data16
movsb
in
repz
in
and
jae
and
sbb
adc
rolb
adc
dec
add
cld
mov
jnp
loop
lock
push
push
enter
pusha
rolb
push
jmp
shr
jmp
inc
fiaddl
cmpsl
jne
leave
addr16
jl
call
imul
mov
and
sub
bound
dec
mov
pop
pop
rorl
cmp
push
leave
pop
mov
and
notl
addr16
sbb
imulb
adc
aam
cmp
mov
adc
adc
and
ret
or
or
push
test
lods
ret
mov
mov
xor
add
arpl
mov
cmp
sub
mov
nop
popa
and
aad
sbb
xor
push
and
push
mov
fimull
push
sarl
push
in
pop
or
xor
push
jp
xor
or
jg
inc
popf
gs
xlat
test
inc
sub
lcall
sub
fists
xor
push
scas
add
add
insb
pop
adc
je
adc
add
addr16
fs
enter
mov
jb
nop
cli
and
pop
daa
cmpl
mov
dec
popf
rolb
or
sub
test
sub
cmp
lods
imul
sub
and
mov
rcll
test
mov
mov
mov
sbb
lock
mov
mov
mov
ljmp
jmp
add
scas
mov
scas
cmp
imul
mov
sub
add
rorb
jne
repz
jno
xchg
pop
fwait
push
push
lds
jbe
jbe
add
iret
aad
testb
adc
adc
push
pop
popf
jg
data16
mov
jmp
iret
inc
aas
in
sub
pop
and
in
inc
pop
mov
mov
ljmp
add
repnz
jmp
fistpl
or
jnp
mov
add
and
rolb
das
mov
rcll
xchg
adc
or
or
outsl
cmp
adc
mov
test
add
nop
add
into
dec
repz
test
add
push
inc
pop
cmp
fistps
pusha
mov
out
mov
xchg
sbb
aas
rdpmc
add
psadbw
jnp
add
pop
sub
in
pushl
mov
and
insb
outsl
arpl
imul
outsb
ljmp
inc
js
je
jb
gs
push
insl
add
arpl
jb
add
add
mov
add
je
push
je
arpl
jne
jb
outsb
je
inc
imul
in
dec
push
nop
gs
xor
xor
popa
inc
dec
xlat
fisubrl
jo
insl
or
out
fidivrl
dec
add
lret
shl
pop
adc
fs
dec
add
add
das
das
jo
popf
mov
es
cmovno
push
mov
ret
out
pop
in
sahf
jbe
dec
dec
je
and
mov
and
jne
addr16
jae
or
dec
push
insb
out
pop
ljmp
pop
imul
push
popa
bound
jne
outsl
push
sbb
rcr
and
fadds
pop
neg
outsb
fucomi
iret
jns
out
out
mov
popa
sahf
jne
arpl
pop
sbb
pop
inc
mov
ja
jae
push
mov
shr
lods
fstl
out
inc
addr16
arpl
mov
ds
neg
iret
xor
lea
lahf
jg
call
insl
insl
cmp
add
jnp
sub
dec
and
jns
add
das
hlt
imul
gs
mov
pop
jle
bound
dec
outsl
jbe
dec
arpl
movd
mov
inc
jne
jne
xor
cs
mov
outsb
xchg
inc
jo
imul
bound
inc
cmp
out
mov
adc
out
jae
xchg
popl
ja
ja
cmp
into
jne
xor
cmp
daa
push
gs
notb
ficomps
push
jne
dec
xor
push
jne
pushf
jae
flds
inc
cmp
add
pop
jp
mov
test
adc
fildll
scas
ljmp
in
jne
xchg
jmp
inc
inc
adc
roll
into
lret
and
jb
fcomi
testl
or
dec
repnz
fiaddl
inc
cmp
dec
adc
jnp
lea
dec
into
inc
inc
aas
sbb
mov
add
mov
pop
lods
push
sub
aaa
and
and
inc
dec
jecxz
out
sti
sbb
adc
daa
scas
insl
push
push
jge
subl
adc
mov
push
jle
jle
jne
imul
outsb
dec
imul
mov
jp
pop
or
out
jnp
fwait
mov
gs
push
push
bound
and
jmp
jo
mov
fisubrs
xor
stos
insl
sub
or
sbb
push
into
ja
js
cmc
push
cmp
sub
scas
adc
ja
insb
mov
add
or
add
push
push
sub
icebp
lock
xor
lahf
popa
push
outsb
das
jnp
inc
jp
pop
or
subl
daa
inc
imul
jo
out
outsb
bound
jnp
sbb
mov
push
mov
xor
sbb
sbb
ret
push
mov
filds
sbb
jb
ret
or
jecxz
fidivrl
cs
movsb
pusha
xor
xor
xor
outsl
andl
lods
popa
fidivrl
jg
popa
in
push
pop
test
stos
push
pop
sahf
aaa
jg
lcall
sub
ss
pusha
enter
fbstp
jne
jbe
jb
jne
mov
jbe
push
enter
pop
stos
loop
cli
shl
js
das
rcrl
mov
mov
jp
orl
addl
test
iret
and
pop
arpl
ficomps
xchg
push
mov
dec
pop
mov
out
roll
jecxz
stos
mov
scas
fs
imul
shll
jnp
xor
loopne
xchg
ret
sbb
clc
das
xchg
sbb
push
lods
sbb
add
pop
pop
sbb
push
stos
pop
insl
sub
lret
je
scas
cmp
out
jae
insb
xor
jg
scas
mov
jne
pop
jecxz
push
push
sbb
mov
insb
add
fs
dec
jmp
nop
repz
or
mov
inc
cwtl
imul
adc
adc
push
sbb
mov
jl
out
sbbb
sbb
rcrl
push
das
push
pop
sahf
dec
scas
lcall
and
stos
js
sahf
out
int3
jns
jp
jmp
mov
insb
dec
lock
loop
add
mov
fldl
sub
sbb
xor
adc
xchg
xor
or
add
pop
ja
add
mov
dec
insl
jnp
mov
imul
arpl
fcmovb
inc
jecxz
mov
pop
add
rcrl
add
jmp
sub
sub
cs
xor
xor
xor
ss
cmp
cmp
cmp
ds
inc
inc
inc
inc
or
inc
push
sbb
dec
dec
dec
dec
dec
dec
dec
inc
sbb
or
push
push
loop
cs
pop
pop
pop
pop
pop
in
popa
bound
gs
ljmp
push
insb
insl
outsb
outsl
jo
jb
je
jbe
js
jp
jl
jle
jmp
adc
lcall
loopne
mov
add
orb
sar
repz
ret
das
lret
jno
icebp
pusha
inc
mov
clc
ret
dec
lods
push
arpl
mov
push
outsl
imul
push
arpl
pushf
rcrl
sub
gs
xor
fdivrl
js
adcl
pop
dec
pop
push
outsl
mov
sub
outsb
sti
push
imul
add
add
add
push
lcall
jge
add
add
add
and
push
pop
lahf
sbb
aaa
xor
push
push
pop
hlt
and
add
pusha
fidivrl
into
push
add
inc
add
or
fucomip
into
add
sbb
addb
add
xchg
test
add
neg
cmpsb
flds
push
cmpb
push
and
sub
jb
int3
push
je
fcmovne
jo
add
nop
jbe
mov
push
outsb
imul
mov
jge
inc
add
jno
sbb
and
sbb
pop
popl
push
xchg
sbb
xchg
mov
inc
dec
pop
push
jbe
xchg
nop
inc
push
sbb
sbb
add
daa
out
sbb
or
and
leave
and
xchg
mov
add
cmpl
in
add
add
popf
scas
xchg
inc
and
mov
inc
mov
enter
add
add
ja
stos
ljmp
dec
push
cmp
add
add
push
ja
shll
movl
add
sbb
or
push
sbb
fcomps
leave
inc
ret
insl
das
jle
add
fisttps
addb
xchg
lea
xchg
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
popf
sahf
lahf
mov
movsl
cmpsb
cmpsl
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
ret
enter
int3
int
iret
rcl
rcl
aam
xlat
fcomp
fcmovu
fdivr
fstp
fnstsw
loope
jecxz
in
out
jmp
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
and
loop
pushl
adc
decl
mov
mov
stos
rclb
mov
clc
aaa
add
imul
test
fs
cs
jae
jb
bound
popf
mov
dec
outsb
outsw
jb
xor
ss
popa
icebp
lret
imul
daa
pop
sbb
lea
dec
mov
outsl
js
push
add
jg
sub
push
and
insl
jo
jo
and
or
daa
aaa
insb
sti
or
mov
imul
mov
arpl
jo
ds
cmp
dec
inc
jb
mov
daa
daa
pop
and
cmpsb
push
jns
mov
testb
insb
and
arpl
je
and
inc
imul
cmp
outsb
jle
rcrl
push
jbe
mov
jns
outsb
fldt
pop
jb
and
xor
mov
push
push
lahf
push
fisubl
insl
and
gs
cmpsb
sub
and
mov
faddl
mov
cmp
pop
pusha
gs
sbb
adc
pop
and
inc
mov
lock
or
outsb
mov
push
jae
lods
jbe
jne
cmp
cmp
add
cmp
xor
imul
subl
gs
inc
pusha
adc
mov
das
mov
xchg
inc
push
push
push
push
dec
divl
add
inc
dec
push
jne
repnz
and
xchg
cs
outsb
enter
filds
dec
jge
aam
cmpl
lock
jb
push
imul
call
xchg
inc
adc
xor
sbb
inc
sub
jne
je
popa
lds
sub
jg
lds
subl
push
or
jne
inc
pop
das
je
outsl
data16
cmc
fadds
daa
jge
negb
pop
pop
cmp
cmp
out
mov
ds
and
sub
es
es
sub
cmp
ds
sub
sub
push
cmp
pop
push
cmp
jmp
and
push
dec
outsb
jp
xor
ds
inc
dec
pop
pop
jne
xor
pop
mov
push
ds
js
daa
in
jo
ss
gs
xorb
mov
dec
sbb
data16
fs
mov
sub
popa
sub
cs
push
scas
sub
iret
repz
out
pop
mov
mov
xorb
repz
push
dec
inc
xor
mov
sub
push
xlat
push
and
repz
sbb
adc
or
jno
mov
cld
clc
hlt
push
pop
roll
push
lock
mov
outsb
push
push
in
pop
push
call
in
loopne
es
push
fmul
jae
jnp
aam
ror
scas
push
sarb
cmp
mov
cmp
repz
into
out
iret
pop
dec
mov
or
repz
repz
test
push
sahf
out
ret
loopne
int3
les
nop
mov
repz
jns
or
push
mov
iret
jo
sub
rorl
mov
test
jo
xor
sub
sub
jns
push
push
dec
bound
outsb
push
xor
data16
add
sub
pop
push
xlat
mov
movsl
enter
sbb
ret
sub
xor
mov
dec
andl
add
inc
dec
sti
scas
adc
push
cs
xor
push
dec
inc
dec
pandn
add
inc
das
push
jb
ljmp
adc
sub
adc
bound
inc
call
rclb
mov
mov
lds
xor
jnp
inc
loop
mov
ds
pop
adc
cmp
pusha
pop
clc
lret
sbb
jb
jge
jmp
arpl
cmp
jg
adc
incb
mov
mov
and
cmp
dec
imul
pop
jns
iret
lret
add
inc
mov
mov
add
dec
mov
pop
sahf
fwait
ss
sbb
pop
jns
dec
sti
jnp
inc
xor
incb
int3
dec
dec
xor
dec
popf
pxor
xor
pushl
div
inc
sub
dec
xchg
cmp
cmpsb
das
xchg
pop
jmp
insl
xor
sahf
icebp
mov
cld
or
loopne
cmp
inc
mov
xchg
push
aas
sbb
pop
xchg
sub
pop
mov
out
leave
ljmp
pop
dec
mov
adc
xchg
dec
movsb
scas
mov
inc
lods
dec
lock
xor
aas
mov
pop
jg
dec
enter
hlt
and
es
ljmp
mov
fcompp
add
add
daa
mov
dec
push
push
adc
or
outsb
jbe
fs
and
push
imul
xchg
sub
mov
sbb
push
add
dec
sbb
sbb
sub
std
ljmp
or
pop
inc
sbb
and
aaa
adc
cmp
dec
adc
mov
adc
xor
xor
dec
adc
and
fincstp
in
xlat
jb
jbe
cmp
add
add
mov
sbb
pop
sbb
pop
pop
add
adc
sub
fstp
pop
pop
push
xor
sub
dec
sbb
dec
dec
and
inc
inc
and
fnstcw
dec
or
add
or
fistl
push
cld
dec
and
dec
ficoms
or
sub
push
std
cmp
inc
inc
add
jnp
cmp
push
and
imulb
dec
pop
sub
pop
sbb
xor
cmp
xor
push
push
sbb
adc
sbb
pop
jge
clc
add
fildll
push
dec
push
cmp
sub
xchg
jl
gs
aad
add
push
sub
push
inc
add
das
test
inc
fisttpl
cmp
sub
pop
negb
js
add
mov
das
and
adc
jge,pt
sub
cmp
inc
sbb
inc
sbb
adc
inc
mov
das
sbb
xor
dec
sub
or
and
popa
pop
je
sbb
int3
or
and
cld
dec
pop
mov
push
pop
cmp
adc
adc
mov
add
mov
gs
out
sbb
cmp
es
pop
ja
push
adcb
mov
xor
clc
incl
pop
dec
add
or
or
add
es
inc
xor
in
sub
sub
push
sub
pop
jo
adc
ja
aas
cld
pop
pop
pop
and
pop
movsl
pop
sub
fildl
sbb
fs
adc
dec
cwtl
in
push
cmp
fwait
push
loopne
xchg
movsb
mov
scas
cli
mov
cmpsl
mov
cmpsl
stc
cmp
aaa
xchg
in
jns
negl
je
jo
imul
jns
pop
dec
cmp
add
pop
xlat
out
inc
das
sbb
clc
dec
jle
mov
cmp
aas
lcall
cld
sub
mov
adc
cmp
sub
int
adcb
push
popa
push
and
lods
jg
outsb
arpl
out
gs
cmp
jne
cltd
cs
imul
aas
decb
push
xor
jle
sub
fstps
and
loop
out
pop
mov
insl
lds
scas
test
cmpsl
fnstcw
cmpsb
test
je
jns
repz
outsb
xor
mov
sahf
out
out
out
mov
jge
sub
pop
lret
push
je
std
jo
dec
into
or
sub
push
mov
xor
loop
lds
aam
dec
aaa
es
adc
mov
pop
int
add
add
pop
add
or
notl
push
pop
aaa
sbb
inc
sub
jnp
inc
js
pop
jbe
movsb
and
out
ja
xor
push
pop
or
pop
and
mov
pop
cmc
push
sbb
mov
push
xor
insl
push
jnp
push
fsubrs
jb
cmp
ja
jnp
sbb
jb
pushf
jbe
fldenv
add
andps
add
pushf
ss
orb
lods
sub
sub
pusha
sbb
pop
or
push
cvtps2pi
dec
addb
xor
pop
cmp
push
pop
xor
shl
out
loopne
scas
out
xor
cmp
or
jno
out
and
repnz
inc
cwtl
push
dec
push
push
dec
dec
jbe
je
cmpsl
pop
das
or
add
fsubp
aam
xor
pop
pop
cmp
push
aaa
pushf
add
push
or
adc
fisttpl
movsl
pop
or
hlt
cmp
xchg
scas
cmpsl
inc
ja
inc
inc
rcrb
xor
fildl
cwtl
rorb
pusha
popa
xlat
out
movsb
xor
loope
fwait
or
inc
pusha
sub
xlat
dec
or
xor
dec
rcrl
inc
push
das
push
cmp
lds
andb
inc
xchg
pushf
add
ficoms
inc
dec
aaa
fmuls
xor
addr16
mov
or
ret
dec
cwtl
gs
and
cmp
imul
and
sub
sbb
inc
inc
push
jle
mov
pop
mov
scas
aaa
cld
pop
sbb
cmp
xor
adc
push
add
flds
bnd
cs
pop
or
adc
ds
inc
xor
and
xor
or
dec
dec
and
mov
xor
mov
les
or
and
adc
es
ss
xchg
in
xor
adc
add
dec
or
into
pop
mov
scas
daa
int
xor
sbb
mov
push
or
jg
pop
sbb
adc
popa
push
fstpt
xchg
rcrl
xor
in
loope
push
iret
adc
sbb
adc
or
xchg
cmp
scas
pop
sbb
push
pop
jbe
cmc
frstor
imul
sub
daa
add
ja
ss
pop
shrl
pop
pop
pop
and
push
ret
mov
jne
jo
adc
sub
and
fimuls
out
ss
loope
test
divb
lret
mov
repnz
fmull
push
cmc
scas
pop
adc
xor
shlb
lods
mov
pop
in
lcall
cmpsb
pop
adcl
sub
bound
or
xorl
and
and
outsb
test
or
or
andb
dec
daa
mov
inc
pop
bound
popf
mov
pop
push
push
test
shlb
or
push
push
pop
cmp
lcall
or
shl
add
add
xor
out
cwtl
mov
ja
dec
and
mov
pop
adc
adc
sub
dec
cmp
sbb
call
cmp
add
add
divb
sbb
inc
inc
sbb
push
loop
out
xlat
das
dec
addr16
pop
dec
adc
lock
xchg
sbb
push
int3
or
loop
xchg
push
lock
sbb
adc
push
push
dec
and
sub
mov
jns
popa
jne
push
sub
int3
inc
ja
and
imul
pop
push
das
xlat
or
aas
inc
sarl
add
or
sub
adc
mov
andl
and
and
inc
or
cmc
xor
push
sub
das
lret
aas
cltd
or
xor
inc
add
daa
pop
pop
pop
jbe
inc
push
mov
outsb
mov
icebp
pop
jns
pop
push
or
mov
add
inc
aaa
push
sbb
scas
cmp
push
aaa
cmp
mov
sbb
push
push
push
ljmp
repz
mov
push
adc
jae,pn
xor
or
icebp
shlb
hlt
push
in
stos
mov
stos
and
cmpsl
rcrl
sbb
pop
repnz
pop
mov
or
xchg
push
inc
sti
data16
decl
insb
outsl
jb
bound
jbe
pop
push
push
je
and
loopne
daa
jae
popa
mov
movsl
je
aas
mov
fcomps
daa
xchg
mov
and
xor
lcall
dec
or
dec
push
push
add
es
mov
and
rolb
notb
in
push
dec
stc
dec
inc
popl
sub
pop
loopne
xor
jo
aas
push
cwtl
push
xor
adc
testb
pop
adc
pop
push
dec
cmp
jne
dec
sbb
push
lock
pop
cmp
sub
pop
fstpt
pop
lods
add
pop
cmp
mov
push
pop
pop
mov
push
cmp
inc
stos
cmp
iret
sbb
mov
ss
push
sub
aam
xor
sub
push
adc
in
add
pop
stos
insl
lret
fisubrs
aaa
xor
mov
inc
cmp
into
pop
push
insl
jae
xor
pop
stos
lock
ja
into
int3
pop
int
test
sbb
push
sbb
out
sbb
inc
add
fcomps
inc
or
in
or
push
inc
jb
push
loop
mov
and
dec
xchg
sbb
or
push
push
loop
inc
outsl
xchg
aad
push
and
ret
aas
fwait
adc
adc
adcb
loop
add
jo
cmp
push
cld
sbb
outsl
ret
push
pop
sub
inc
sub
cmp
sbb
jo
mov
pop
push
cmp
mov
push
or
sbb
enter
sbb
cli
sbb
fists
sti
pusha
test
out
jb
insb
cmpsl
nop
daa
lret
cmp
cmp
mov
inc
stos
inc
es
dec
nop
pop
dec
repz
inc
push
mov
pop
dec
jne
clc
mov
pop
das
adc
ljmp
pop
clc
push
jo
shlb
cli
mov
adc
sub
gs
inc
adc
pop
enter
sbb
xor
dec
inc
push
sbb
shll
and
sbb
sbb
xchg
pop
clc
out
fadds
xor
push
js
movsb
pop
jl
movb
sub
test
inc
pop
mov
out
ja
xor
jg
dec
lock
das
pop
or
adc
and
rorl
pop
cltd
and
pusha
push
pop
inc
sbb
in
pop
mov
push
bound
and
pop
pop
popf
and
mov
push
ret
add
add
dec
and
dec
pop
adc
jnp
cmpsl
add
adc
xor
out
sahf
xor
push
cmp
leave
inc
mov
dec
mov
mov
mov
and
mov
sub
pop
jmp
rcr
loop
icebp
mov
sub
xor
inc
mov
inc
inc
pop
mov
dec
adc
push
pop
dec
pop
aaa
push
mov
xlat
js
push
setp
mov
adc
and
scas
mov
lods
push
scas
mov
push
sbb
and
inc
stos
dec
push
push
xor
dec
fcmovne
push
dec
sub
cmp
pushf
push
dec
dec
pop
and
push
clc
aam
push
push
dec
push
fadds
pop
sub
aaa
mov
cmp
cmp
enter
or
icebp
push
fcmovnbe
js
jns
xchg
ds
xchg
mov
inc
pop
outsl
insl
adc
sub
pop
inc
push
or
loopne
or
push
xor
cmp
inc
in
mov
adc
cmp
adc
pop
inc
push
cs
mov
xor
sbb
pop
mov
inc
pop
mov
mov
js
pop
lahf
mov
push
push
or
notl
xor
mov
scas
dec
out
cmp
aaa
out
pop
push
addl
jmp
mov
xor
pusha
xor
fdivp
adc
adc
adc
inc
stos
or
mov
je
cmp
cmp
dec
pop
cmp
push
push
imul
cmp
or
mov
dec
addl
sbb
andl
push
cmp
xor
add
cmp
gs
out
push
outsb
sub
jmp
out
push
movsl
and
mov
das
sbb
mov
sbb
pop
inc
sub
mov
dec
movsl
sbb
test
fisttpll
jmp
mov
and
mov
and
movsl
or
push
lods
fcmovu
cmp
lahf
dec
jecxz
jae
cmp
and
sbbl
orl
xor
add
lahf
inc
mov
xor
push
sbb
inc
sti
sbb
add
adc
aaa
addl
xor
test
adc
fcoml
adc
es
xchg
xchg
inc
inc
or
popf
dec
xchg
dec
lods
jno
add
pop
ljmp
gs
gs
xor
cs
inc
jb
inc
mov
mov
sbb
rcrb
scas
adc
or
dec
sub
push
pop
push
sub
ss
enter
rclb
pop
xor
xor
xor
and
outsl
loop,pt
mov
scas
push
or
adc
scas
aam
and
pop
into
pusha
push
lock
add
bound
imul
and
xchg
aaa
ret
dec
js
push
scas
dec
cmp
cmp
ja
add
jge
mov
gs
sbb
inc
add
and
jb
sbb
inc
lret
sub
push
addr16
pop
adc
sbb
adc
pop
pop
loop
movsb
out
mov
pop
and
movsl
xchg
mov
outsl
xor
mov
adc
pop
call
xor
xorl
sub
mov
or
negl
sbb
push
icebp
aaa
ret
and
add
aaa
jmp
mov
hlt
pop
jae
sub
sarb
gs
ja
fs
push
xchg
std
push
outsl
jb
jp
sbb
xor
inc
loopne
cmp
lock
icebp
pushf
rolb
imul
pop
dec
or
and
jb
or
jmp
adc
dec
jecxz
and
std
pop
adc
inc
add
roll
sbb
push
sahf
and
lahf
negl
fisttpl
dec
push
and
insb
ss
fucom
dec
data16
jns
int
loopne
frstor
push
xor
imul
fcom
out
mov
cmp
mov
sbb
jl
addr16
pop
mov
xor
and
insl
sub
fistpl
into
cmp
jbe
je
jae
jg
jmp
cmpsl
data16
fisubl
xor
jo
insb
out
outsl
mov
fs
lock
ds
repz
push
push
add
xor
jo
pop
inc
insl
ja
cmp
cmp
jne
jo
or
testl
xor
xor
fs
pop
or
push
push
xchg
or
imul
mov
insl
jnp
outsl
push
add
dec
or
lock
mov
insb
adc
or
add
mov
outsl
adc
jb
dec
test
mov
adc
inc
inc
jbe
popa
lods
xchg
iret
pop
in
adc
loopne
cmpsb
inc
inc
cmp
sbb
loop
mov
ficomps
pop
je
dec
test
dec
mov
dec
sub
adc
das
sub
loop
je
push
sbb
cmpsb
out
xchg
hlt
xor
xchg
sub
int3
sub
and
sbb
push
adc
adc
std
pop
jge
add
call
gs
mov
push
inc
stos
pop
or
pop
xchg
loopne
les
sbb
fistps
arpl
scas
xchg
mov
test
andb
sahf
insb
and
insl
adcb
daa
sub
arpl
ss
rcrb
sbb
xor
loope
addr16
push
lock
xchg
sbb
testb
or
imul
inc
pushf
lcall
mov
shll
push
push
push
das
in
xor
and
lods
jne
je
and
imul
sub
les
js
cld
push
sub
inc
addr16
inc
mov
stos
es
outsl
insl
pop
xor
enter
dec
mov
inc
push
pop
push
push
push
inc
dec
dec
dec
inc
mov
data16
inc
outsb
arpl
fisubrs
outsb
fldpi
jne
pop
fs
pusha
fwait
cmp
add
and
fwait
pop
push
fstl
loop
dec
cs
and
jp
pop
xchg
fsubrs
dec
add
jge
inc
les
vxorps
adc
pop
add
dec
dec
jg
jae
lea
getsec
shlb
mov
clc
aam
adc
and
mov
add
adc
fistpll
shlb
movsl
enter
push
push
mov
inc
push
insl
ss
adc
jg
pusha
or
mov
sub
sub
and
das
mov
sbb
mov
ds
pop
sbb
jg
jg
lods
sub
and
jle
jo
fsubs
sar
mov
xor
dec
xchg
adcb
push
jecxz
dec
push
pop
adc
mov
pop
push
mov
call
push
inc
push
dec
or
or
dec
scas
jne
decb
pop
cmp
cmp
add
push
dec
dec
push
jb
in
inc
sub
and
outsl
push
dec
imul
dec
sub
pop
dec
repz
or
clc
jmp
ss
jb
call
iret
in
cmp
xor
mov
pushf
cmp
cwtl
inc
mov
jae
leave
dec
js
dec
loopne
or
pop
inc
daa
je
inc
js
mov
loop
xor
inc
dec
add
ret
repnz
dec
pop
int3
pop
dec
stos
pop
cmp
jo
xor
ffree
test
dec
mov
cmp
cmp
outsl
fwait
ljmp
inc
sub
mov
inc
xor
cltd
sbb
mov
inc
xor
jmp
scas
and
test
daa
mov
jo
add
pop
mov
lock
js
ds
stos
jb
cmc
gs
pop
jbe
push
mov
xchg
das
out
bound
test
shll
imul
xor
ret
push
xor
mov
pop
dec
sub
mov
xor
xor
rclb
dec
mov
das
mov
test
insl
mov
and
mov
dec
and
dec
outsl
and
int3
mov
push
mov
pop
pop
xchg
inc
negb
scas
movsb
jbe
sub
daa
or
adc
mov
or
xor
mov
xchg
pop
pop
dec
inc
dec
or
pop
add
shrb
cmp
in
ret
cmp
mov
pop
outsl
nop
pop
cmp
jle
inc
adc
loope
ja
and
inc
adc
sub
ret
sbbb
pop
xchg
add
mov
les
jae
cmp
or
out
cmp
pop
add
das
xchg
and
pop
jg
and
adc
out
sub
xchg
cmp
or
mov
movsl
and
out
push
loope
mov
xor
ret
mov
cs
sahf
idiv
mov
push
mov
loopne
jb
out
mov
pop
cmp
adc
sub
out
imul
iret
xor
add
fidivrs
xor
jbe
push
jmp
fdivp
jns
aam
ds
cs
lret
mov
push
scas
push
and
es
and
sarb
pop
adc
cmp
stc
rorl
and
pop
add
pop
mov
mov
arpl
pop
push
and
fisubs
mov
xchg
sub
jp
cmp
dec
jmp
fsts
cmpsb
into
xchg
rorl
pusha
cmpsb
xor
mov
pop
xchg
ror
stc
xchg
push
stos
sbb
lahf
out
ficoms
lahf
pushf
fldl
popf
lcall
adc
jnp
pop
hlt
pop
movsb
push
cmpsb
sar
aam
cwtl
jge
imulb
scas
daa
hlt
data16
jle
loopne,pt
push
sarl
push
push
mov
popf
fidivs
out
divb
mov
mov
cmp
jnp
inc
push
push
push
imul
mov
xor
mov
sub
push
bound
jns
loopne
sbb
lcall
rcll
push
jle
iret
repz
in
ss
mov
jns
sarl
jbe,pt
out
mov
insb
movsb
ss
pop
pop
push
bound
imul
es
int3
xchg
repnz
pop
jl
or
mov
inc
push
push
mov
popa
iret
repz
jp
mov
imulb
xor
jge
movsb
mov
das
cmpsb
clc
sahf
out
call
jl
lahf
cmpsl
stc
push
roll
cmpsl
ss
sahf
out
dec
js
int3
out
repz
repz
shrl
sar
das
stos
daa
lods
push
iret
repz
jnp
cmpsb
call
ds
lods
cmp
stos
pop
dec
lock
pop
scas
das
addr16
mov
and
jg
dec
sbb
scas
sub
lahf
or
cs
adc
stc
add
adc
lcall
push
push
mov
xor
imul
sti
pop
mov
pop
mov
scas
int
lds
mulb
ds
loop
and
push
pop
inc
mov
loopne
mov
imul
int3
push
and
pop
sbb
enter
cld
cmp
adc
or
adc
repnz
or
aam
es
add
push
xchg
or
sahf
pop
inc
stos
nop
sub
cs
mov
jmp
inc
jbe
rcr
mov
sbb
mov
mov
getsec
push
stos
gs
cltd
push
dec
sub
jecxz
push
xchg
gs
cmp
dec
dec
inc
in
push
lcall
cmpsl
aam
dec
push
push
push
push
imul
movsb
pushf
movsl
or
pop
sti
mov
push
fists
adc
iret
das
push
adc
inc
mov
adc
push
pop
data16
popa
mov
dec
xchg
sahf
test
jne
fwait
xor
xchg
inc
dec
js
call
aam
repnz
mov
inc
xchg
inc
aaa
jno
sti
shlb
ret
icebp
adc
pop
movsb
cmp
aas
xchg
aad
sbb
cwtl
stos
pop
fadds
pop
adcl
test
and
jge
push
je
mov
andb
fcompl
shrl
xchg
out
popf
rorl
mov
jmp
dec
fsubrl
mov
fimull
ds
insl
xor
jg
mov
inc
xchg
cmpsl
aad
arpl
dec
push
sub
adc
or
cs
insl
sub
adc
or
or
cs
inc
addl
data16
mov
call
cltd
test
push
hlt
jo
push
push
shll
ja
daa
mov
mov
mov
sbb
dec
stos
fmuls
lret
lcall
out
orb
adc
enter
mov
mov
movsb
mull
stc
mov
addr16
push
scas
addr16
cmp
dec
movsl
jg
push
push
mov
fwait
stos
fldcw
or
sbbl
int
pop
sub
mov
loopne
das
push
dec
cmp
dec
jnp
xor
dec
or
push
dec
inc
jmp
pop
push
sub
jl
pop
daa
and
and
aaa
sub
sub
jp
inc
arpl
jb
outsl
imul
push
jns
cmp
pop
insl
das
cmp
je
std
pushl
jge
inc
sub
data16
and
pop
push
xor
sub
sbb
packuswb
dec
sbb
xor
xor
daa
pop
jae
fists
data16
inc
inc
inc
and
and
fwait
js
add
mov
pop
ret
jbe
addb
lea
test
sahf
cmp
pop
daa
sbb
add
test
push
xor
idivl
dec
aas
adc
pop
sub
sbb
xor
sub
mov
xor
and
lods
xor
sti
inc
add
wrmsr
push
xor
xor
scas
call
inc
push
cmp
ja
mov
xor
and
aaa
inc
push
push
pop
jnp
mov
jl,pt
ds
ucomiss
sub
cmc
xlat
ss
pop
add
jbe
jecxz
dec
lock
testl
push
das
pop
adc
sbb
sub
pop
xlat
sub
push
inc
sub
js
mov
in
adc
xor
aad
xorl
inc
sub
sti
fldcw
cmp
cmp
cmpl
push
aaa
lea
or
fiaddl
cmp
xor
xchg
rcll
test
test
pop
test
cltd
nop
or
test
popa
jbe
xchg
or
or
mov
imul
add
mov
je
mov
flds
adc
mov
lock
adc
bound
or
push
fwait
and
iret
mov
ficompl
xor
pusha
add
jp
jbe
jnp
adc
lods
dec
or
fsubs
pop
sub
sub
adc
gs
adc
add
sbb
pusha
adc
pop
mov
sbb
sbb
pop
cmp
int3
and
add
mulb
mov
gs
lret
pop
filds
jo
aam
sub
push
pusha
cmp
and
mov
and
scas
mov
xchg
jno
and
jmp
rorb
dec
mov
push
jb
xor
aas
cmp
pop
shlb
pop
inc
jle
dec
dec
mov
dec
addr16
adc
dec
cmc
mov
sbb
sahf
cmpsl
pusha
mov
inc
sbb
push
or
pop
hlt
and
ss
add
mov
sbb
mov
dec
aad
adc
aaa
aad
fisttpll
dec
test
and
add
pop
add
in
jae
inc
outsb
outsb
je
xor
js
add
imul
insl
gs
cmp
jle
movsl
test
mov
out
mov
adc
push
mov
shrl
xor
insl
and
push
rorb
aaa
push
dec
jp
das
ljmp
popa
je
inc
pop
loope
add
sti
inc
js
inc
add
negb
cmp
negb
clc
mov
add
out
push
gs
or
daa
cli
clc
inc
sub
imul
or
sbb
aas
sbb
cmp
out
mov
sbb
pop
test
sbb
xchg
cli
push
dec
mov
inc
dec
das
popl
dec
and
and
adc
xchg
push
inc
outsl
jbe
add
int
and
mov
mov
adc
and
rcrb
jno
sti
fsubs
out
adc
addr16
or
cwtl
xor
loopne
dec
sbb
sub
pop
ja
mov
push
aas
bound
call
rorb
dec
add
cld
fs
dec
sbb
push
popa
dec
pop
pop
push
andb
dec
ja
jb
pop
imul
das
sub
mov
add
xor
cmp
xor
lods
or
aaa
pop
sbb
dec
or
mov
test
jg
mov
xchg
lock
ss
aaa
insl
inc
and
sbb
repz
push
lahf
call
pop
pop
sub
sbb
daa
adc
lock
push
mull
sub
jbe
jo
xor
daa
jmp
push
outsl
imul
ret
push
jg
sub
pop
or
les
dec
adc
inc
ret
shlb
cmp
pop
cmpsb
xchg
dec
clc
inc
into
adc
psraw
sub
scas
cmp
or
ds
adc
mov
inc
adc
push
push
add
mov
inc
sbb
mov
adc
xchg
and
loopne
xchg
mov
pop
push
and
inc
xor
push
pop
push
mov
sahf
cs
push
sbb
in
mov
push
jge
cmpsl
inc
lahf
push
mov
loopne
cmp
and
popa
outsb
jns
popa
and
int3
fs
jge
outsb
adc
push
into
lds
sbb
imulb
sbb
push
into
or
lea
xlat
cmp
outsb
adc
daa
imul
stos
gs
rolb
push
jb
mov
arpl
pop
aas
and
sbb
adc
jmp
pop
pop
decb
pop
lcall
sbb
mov
pop
movsl
mov
dec
fcmovu
pop
repz
push
inc
sub
cmpsl
movb
pop
fsubrl
sub
add
subb
inc
outsb
fisubrl
orb
dec
push
fldt
or
add
mov
add
sub
sub
inc
dec
popa
jnp
xor
or
inc
and
inc
lods
jns
add
or
add
cmp
or
adc
push
add
push
lds
mov
aaa
rcll
gs
add
subb
shlb
js,pt
sar
movsl
push
mov
jae
push
popa
pop
pop
xor
lcall
push
and
arpl
push
es
inc
xchg
imul
dec
outsb
push
je
scas
rclb
bound
lock
push
inc
dec
push
inc
pop
push
dec
inc
dec
enter
lods
mov
xlat
jecxz,pn
push
ss
imul
inc
negb
dec
daa
dec
push
add
lock
insl
inc
sub
loopne
sbb
dec
add
and
pop
loopne
mov
add
mov
xchg
mov
and
dec
pushf
cwtl
sahf
mov
cli
out
vprotd
inc
push
aaa
or
mov
es
ret
jb
enter
pop
adc
xor
push
stos
data16
mov
inc
aas
ds
sub
sub
or
das
fsubrp
mov
xchg
xchg
insb
je
push
addr16
decb
popa
jo
and
jno
outsl
aas
fldcw
cmc
pop
aas
testb
and
mulps
fldl
xchg
or
divl
xor
xor
xor
xor
cmp
mov
and
xor
push
xor
xor
cmp
push
lods
popf
add
add
pop
push
or
fwait
adc
push
adc
xor
or
push
pop
cs
inc
lcall
pop
data16
or
arpl
enter
pop
add
or
std
es
adc
push
les
adc
pop
sub
adc
cmp
mov
rolb
cld
es
sub
ljmp
or
pop
and
sbb
repnz
jo
hlt
das
jecxz
inc
scas
aas
cmp
out
hlt
or
sbb
jno
inc
sbb
addr16
cmp
sbb
into
cmp
rorl
lret
sub
or
or
ja
mov
or
icebp
mov
add
jnp
sbb
aad
daa
cmp
or
shl
lret
enter
cmp
jae
jbe
pop
outsl
adc
add
xchg
in
push
add
scas
push
adc
or
inc
js
cs
sbb
and
pop
inc
push
inc
mov
das
xor
xor
addb
je
lea
loope
das
sub
push
arpl
call
or
adc
daa
fldt
dec
xor
mov
sub
adc
cmp
aaa
xor
nop
push
rorb
hlt
inc
sbb
pop
push
subb
das
popa
sub
or
movsb
mov
push
adc
rcrb
stc
das
lods
daa
insl
sbb
and
mov
je
les
stos
out
in
inc
dec
and
adc
jge
shrl
das
das
mull
rclb
aaa
iret
dec
push
shrb
jmp
lahf
push
push
loope
lods
pop
ret
sub
daa
imul
popa
daa
pop
mov
test
xchg
test
das
js
inc
fadds
xor
pop
inc
adc
repnz
rclb
add
aas
fnstcw
mov
mov
mov
scas
pop
js
js
cltd
daa
lahf
pop
pusha
adc
sub
cmpsb
pop
sub
int
pop
lea
inc
addr16
lret
and
sti
jg
lret
jns
or
fsubrs
inc
outsl
jbe
insl
addl
pop
mov
mov
mov
fwait
cmpsb
xor
aaa
outsl
cwtl
icebp
xchg
sbb
xor
jmp
pop
enter
stos
adc
inc
js
jl
fstpl
mov
sbb
sbbb
iret
inc
pop
fdivl
adc
mov
sahf
dec
cmpb
imul
dec
js
xchg
in
dec
inc
ja
mov
cmp
pop
or
aad
outsb
add
hlt
testb
cmpsl
stc
cmp
dec
inc
fsubrs
mov
es
inc
out
pop
sbb
and
call
mov
xlat
cmp
popf
mov
xchg
ret
lock
ret
or
xchg
push
xchg
insl
rorl
pop
daa
ret
es
inc
add
adc
lea
addr16
sbb
push
mov
inc
push
clc
sub
fcmovnb
xor
or
add
das
dec
pop
in
xor
or
adc
lock
and
mov
pop
adc
xor
adc
dec
lds
inc
adcb
pop
adc
loopne
loopne
iretw
into
mov
cmp
push
in
out
test
pusha
adc
pop
pop
jo
ret
sbb
addl
jp
add
inc
pop
xchg
mov
mov
push
xchg
or
xchg
pop
ds
in
mov
xchg
lock
inc
jno
shll
sub
sbb
mov
dec
movsl
add
xor
dec
jmp
xor
mov
in
add
sbb
mov
dec
pop
sub
nop
sets
cmp
lds
packsswb
lods
aas
dec
pop
rorl
cs
adc
xor
sbb
aad
or
or
movsl
stos
fbld
or
sbb
adc
and
js
aam
in
xor
inc
push
cmp
data16
es
jne
add
xchg
outsb
lcall
inc
sbb
add
sbb
jnp
push
loop
sub
add
mov
or
push
or
cmp
fcom
in
or
sbb
cmp
pushf
inc
sub
jnp
hlt
dec
rorl
or
call
and
adc
insb
add
fisubl
push
sbb
addb
jecxz
cmp
ljmp
sbb
dec
or
xchg
or
xchg
mov
pop
fcomip
les
xor
sbbl
repnz
stc
pop
pop
test
dec
mov
pop
cmp
or
pop
andl
inc
pop
insl
cmpsl
fnstcw
pop
mov
das
add
inc
iret
xchg
xchg
in
lock
shll
test
mov
dec
jae
pop
out
xchg
in
inc
adc
pop
sahf
out
sahf
sbb
push
jl
out
andl
jo
iret
rorl
or
xchg
sbb
loop
out
add
cmpsb
sbb
push
pop
mov
mov
mov
and
sub
xor
mov
insb
sbb
push
mov
ss
mov
popa
xchg
add
shlb
cltd
int
test
sub
shrb
xchg
pop
int
fldcw
push
adc
pop
add
sub
sbb
lret
sbb
data16
add
sbb
stc
das
incl
push
paddw
cmpsb
pcmpeqd
mov
call
lods
aas
fs
addb
add
gs
cs
pop
dec
mov
add
jle
mov
dec
sub
or
sub
pop
adc
add
jnp
push
cmp
xor
inc
pop
and
pop
xor
xor
dec
ds
loopne
decl
pop
push
dec
dec
inc
add
rdpmc
adc
or
push
sub
push
push
aaa
push
pop
cmp
lock
lcall
inc
inc
push
xor
cmp
das
adc
xor
cmp
xor
cmp
push
add
cmp
stos
pusha
or
cs
addb
and
incl
add
inc
dec
das
adc
xor
cs
xor
jg
std
mov
or
add
aas
xor
pop
pop
xchg
and
and
cmp
lcall
adc
adc
ds
inc
xor
dec
dec
sub
decl
inc
cmp
and
inc
sbb
aaa
shrd
cld
or
push
ja
jne
xchg
cmp
adc
fsub
cmp
mov
and
sub
out
adc
xchg
push
sarb
aaa
jo
add
sub
es
mov
or
pop
sti
xchg
add
addb
or
pop
loope
pop
andl
lret
dec
push
jg
inc
mov
xor
movsl
inc
dec
fwait
sub
out
nop
mov
xchg
xor
push
outsl
test
xor
adc
mov
xor
dec
jecxz,pn
enter
les
sbb
lret
add
push
xchg
pop
pop
out
test
mov
rolb
jb
add
push
push
sbb
cmp
push
push
inc
push
dec
inc
dec
push
dec
jg
or
sbb
inc
test
mov
push
push
loop
dec
adc
cmc
inc
mov
mov
or
inc
cmp
icebp
mov
cmpxchg
sub
pop
cmpb
aas
jg
rcr
nop
jo
maxps
orl
and
or
mov
inc
xadd
jg
aas
jo
inc
add
add
pop
push
sub
dec
mov
scas
scas
lock
dec
and
es
scas
sbb
sbb
in
push
hlt
daa
mul
or
add
jne
dec
sti
pop
pusha
addr16
dec
and
daa
add
jnp
es
inc
push
pop
das
inc
add
xorb
outsl
pop
iret
js
mov
daa
arpl
lahf
add
rol
mov
iret
jae
push
sarb
rcll
sbb
and
sarl
push
inc
ds
sbb
lcall
imul
push
xchg
cwtl
ljmp
nop
out
xchg
lock
mov
mov
outsl
xlat
int3
lock
cmp
daa
sbb
bound
sub
xor
es
sarb
data16
fdiv
pushf
jns,pn
add
repz
mov
mov
enter
pop
scas
pop
jb
iret
movsb
add
mov
jg
add
in
in
hlt
ja
add
xor
and
outsb
cwtl
fmuls
xor
add
arpl
lds
xchg
pop
leave
test
jo
fcomps
cmp
add
hlt
loope
mov
xchg
push
call
mov
adc
repz
or
out
sub
fstpt
push
or
push
and
pusha
scas
iret
les
pushl
and
out
bound
mov
mov
and
and
dec
sti
es
enter
inc
js
nop
adc
cmp
or
and
add
fwait
xor
scas
pop
mov
ja
insb
outsl
cwtl
or
sub
xchg
scas
movsb
push
orl
mov
xlat
data16
push
ret
add
loopne
scas
ret
mov
push
adc
popa
mov
ret
roll
aas
pop
out
jbe
cmp
push
das
dec
daa
scas
fs
inc
and
dec
scas
in
inc
cmp
dec
scas
in
xor
in
scas
sub
aaa
in
dec
add
out
xor
sub
or
lock
out
lods
dec
xor
jl
sbb
add
in
nop
je
lahf
out
lcall
sub
or
daa
ds
iret
cmp
repz
daa
es
fs
lahf
out
cmp
adc
cmpsl
clc
xor
les
or
and
adc
add
addl
int3
push
pop
xor
jo
stc
cmp
repnz
jl
repnz
movsb
add
and
cmp
xchg
enter
fiadds
and
push
js
fdivrl
inc
mov
pop
xchg
movsb
jg
leave
aad
ja
aam
dec
xchg
in
jg
leave
xchg
or
xchg
dec
push
and
outsl
push
xor
js
or
sub
filds
dec
outsl
and
filds
pop
jb
lods
inc
lock
pusha
fimuls
lods
pop
leave
and
out
sub
mov
add
js
jl
dec
mov
mov
rolb
sbbl
lods
fs
add
xor
push
fbstp
and
dec
add
jl
and
sub
mov
add
sub
mov
outsl
out
daa
push
xor
xor
iret
test
xchg
stos
mov
inc
scas
in
pop
adc
jae
pop
test
cmp
cmpsl
jns
dec
test
clc
sub
aaa
jno
xchg
add
sub
les
dec
shl
pop
xchg
fmull
sbb
xor
or
or
pusha
sarl
and
sub
lds
jg
ja
pop
enter
sub
mov
dec
xchg
adc
movq
es
and
and
pop
or
pop
sub
scas
adc
mov
out
cmp
in
add
add
cmp
roll
xchg
xor
lret
add
jnp
daa
dec
inc
sub
push
push
pop
daa
and
insb
add
sbb
loopne
shl
mov
mov
sub
pop
push
pop
xchg
sub
sub
fildll
adc
xchg
or
data16
decl
xor
lock
add
xor
ja
inc
bound
test
xchg
pop
leave
add
push
push
push
push
outsl
jg
add
xchg
pop
adc
xchg
aaa
push
mov
daa
testl
mov
xor
cs
push
sbb
push
cld
das
loopne
or
pshufw
dec
mov
adc
and
pushf
int3
fsubrl
push
pop
stos
or
pushl
jnp
or
das
daa
add
mov
push
xlat
or
jo
dec
mov
subb
xor
jno
loopne
push
xor
pop
pushf
das
addb
cltd
mov
inc
testl
sub
add
cmp
push
xor
pusha
push
call
subl
push
mov
mov
ja
incl
mov
outsl
cmp
out
adc
mov
xor
xor
mov
shll
je
clc
daa
mov
jg
mov
mov
add
jg
jns
lods
xlat
fcoml
ja
xor
les
xor
push
enter
sub
xchg
nop
mov
pushl
push
sub
idivb
das
outsl
add
or
pop
ds
adc
cld
call
xor
clc
inc
sub
or
aaa
add
push
xor
ficomps
push
push
xchg
cmpsb
pusha
add
mov
cmp
sub
add
or
daa
call
out
sbb
daa
or
sbb
out
mov
pop
push
push
les
out
mov
sbb
lods
outsl
outsb
stos
or
les
movsb
pusha
dec
adc
or
adc
in
or
push
aas
outsb
inc
pop
enter
hlt
pop
sub
xchg
scas
xor
or
lods
mov
push
jo
test
in
xchg
add
push
xor
add
ss
pusha
shrb
xor
mov
scas
add
sub
mov
loopne
lods
or
lahf
push
cs
andb
inc
or
out
sub
or
ss
nop
add
pop
and
sub
fwait
xor
cmp
aas
addr16
mov
data16
sbb
insb
aaa
lahf
mov
clc
es
mov
scas
inc
out
pop
insl
add
lock
aaa
xchg
insb
mov
inc
xchg
outsl
mov
pusha
hlt
pop
mov
push
mov
or
adc
mov
lahf
negb
dec
repz
lods
iret
add
aaa
pop
int
repz
loop
sub
mov
out
sub
repz
adc
jnp,pt
iret
repz
repz
sub
push
stos
shll
lahf
out
lcall
cs
repz
xchg
cmpsl
stc
and
inc
push
ja
iret
shl
ja
push
aaa
xor
addr16
push
xor
lods
jns
int
rolb
adc
int
lods
add
daa
mov
loopne
aaa
push
xchg
iret
repz
out
adc
xor
imulb
dec
repz
cmp
cmp
divb
cmp
lcall
rorl
cmp
jns
out
ds
aas
xor
out
imul
push
mov
out
sahf
out
inc
inc
mov
xor
rorb
das
push
test
fistl
dec
xchg
lret
repz
sbb
mov
cmp
sub
xchg
repz
inc
fbstp
dec
out
iret
rcll
je
mov
fnstcw
xchg
js
add
repz
push
test
mov
xlat
cli
sahf
out
ds
fcomip
out
sarl
out
push
push
mov
movsb
out
sahf
out
push
xchg
int
push
roll
sbb
lcall
nop
jl
jge
mov
push
rorb
sahf
out
je
pop
sahf
jmp
iret
shll
pop
mov
mov
mov
cmp
out
pop
minps
test
int3
pushl
pop
mov
cmpsl
stc
cmp
adc
andb
sahf
jnp
stc
sbb
aas
pop
sahf
out
cmp
fadds
bound
ds
jns
mov
arpl
shrl
sub
xchg
jns
iret
repz
es
je
je
out
mov
cmp
repz
imul
pushf
mov
repz
adc
xor
mov
ss
push
test
imul
aaa
jne
int
stc
cmp
push
jbe
or
sahf
out
cmp
jmp
js
xchg
cmp
repz
add
cwtl
mov
push
jp
test
ljmp
sar
jl
repz
out
out
sbb
js
stc
cmp
fwait
mov
data16
xchg
mov
andb
imul
xor
scas
ja
imulb
dec
mov
into
aas
mov
call
mov
fdivr
sub
out
xchg
scas
leave
out
xor
test
repz
out
adc
repz
mov
sahf
out
sahf
dec
mov
sarl
pop
jae
mov
fistpll
xchg
jno
fcomps
and
in
out
fidivrs
xchg
testb
mov
int
cwtl
push
test
dec
cltd
jns
jns
mov
push
rorb
fwait
cs
dec
in
mov
iret
int3
nopl
adc
push
aas
aam
jns
mov
adc
and
fbld
inc
testl
test
pop
xlat
or
dec
in
push
cmp
mov
push
subb
sub
mov
cltd
nop
int
das
mov
shlb
mov
leave
js
xchg
gs
bound
xchg
pop
arpl
insb
aas
into
mov
fcoms
outsb
inc
pop
and
daa
cmp
dec
aam
loopne
fists
dec
sub
jp
jle
adcb
pop
es
in
ret
mov
fxch
cmp
int3
mov
mov
pop
jecxz
or
cmp
jmp
xlat
jg
pop
in
mov
inc
mov
xchg
pop
xor
repz
mov
iret
fisubrl
mov
dec
pushf
push
add
bound
inc
xchg
iret
fimuls
push
or
mov
xorb
xor
mov
sub
cmp
dec
mov
pop
push
add
push
out
jmp
daa
out
xchg
xchg
imul
fbld
in
xchg
adc
and
in
dec
jb
and
out
in
jp
mov
add
lcall
jb
vpmullw
in
daa
fisubrl
or
das
cmp
cmp
in
xchg
and
push
es
es
aaa
jb
es
add
sahf
out
pop
xchg
aaa
sahf
out
push
leave
jae
push
sbb
pop
jp
inc
jns
fisttpll
add
hlt
cmpsb
mov
or
out
inc
inc
ljmp
push
daa
adcb
and
push
daa
pop
sarl
xchg
and
jne
mov
xchg
mov
xchg
incl
jb
ret
fiaddl
add
adc
pop
sub
adc
sbb
cmp
sahf
out
fisttpll
daa
dec
push
add
fs
out
add
add
sahf
out
pop
nop
or
or
jns
out
or
or
sahf
out
psubsb
repz
repz
adc
adc
sub
pop
cmp
repz
and
xor
repz
repz
pop
dec
sbb
mov
sbb
xchg
push
add
mov
addb
pop
mov
out
daa
fbstp
and
das
lcall
push
adcb
lock
cmp
lds
pop
femms
push
leave
jae
cmp
xorb
pop
mov
and
pop
fdivr
enter
add
jg
sub
inc
fwait
in
sub
addr16
sub
fs
mov
mov
addr16
jb
inc
es
sub
jo
jae
jo
js
adc
lods
das
ja
dec
rorb
dec
jl
xor
or
ss
inc
mov
cmpsl
movsb
pop
mov
mov
cmp
stc
fisubrs
or
in
daa
push
addr16
sub
and
btr
xchg
ja
insl
adc
sub
and
es
cmp
cs
nop/reserved
and
leave
xor
mov
add
pop
push
pop
addr16
pop
inc
call
cs
dec
cs
push
mov
cs
shl
mov
sbb
out
test
jns
sbb
sub
mov
push
pusha
cs
lods
dec
cs
and
mov
cmpsl
pop
and
ljmp
js
lea
pop
push
add
daa
push
comiss
mov
aaa
aas
dec
or
pop
ja
dec
sahf
or
addr16
mov
push
cmovle
cmpl
inc
fadd
cmp
pop
pop
add
push
add
or
mov
pushf
xor
dec
push
fists
pushf
mov
ror
sub
push
push
push
rol
and
jecxz
xor
out
jo
cmp
sbb
xor
aad
xchg
push
add
icebp
mov
xor
push
rclb
and
push
jb
xor
jne
mov
ja
xchg
mov
out
sahf
out
push
ret
jbe
jns
or
or
scas
or
enter
adc
pop
xor
xor
jb
xor
xor
jo
inc
mov
insb
xor
sub
in
xlat
xorb
or
inc
inc
push
mov
jb
jb
mov
shll
jb
fsub
repnz
mov
jge
xor
xor
dec
xor
inc
into
fiadds
pop
bound
lahf
push
jb
ror
das
jp
lahf
orb
or
xchg
or
push
lahf
or
and
repz
xor
xor
out
ficoms
add
add
fnstsw
jg
xor
xor
in
in
xor
xchg
pushf
cmpsl
push
pop
mov
iret
repz
mov
or
repz
or
or
jmp
xor
jae
cmp
sub
mov
pushf
push
imul
fildl
mov
cmp
pop
enter
push
push
es
jmp
out
add
dec
dec
adc
addr16
push
pop
ss
into
pop
mov
push
inc
ss
dec
ss
ss
xchg
and
bound
scas
xlat
dec
cs
orl
test
xchg
dec
ficoml
push
or
sti
inc
adc
push
out
mov
push
add
mov
cltd
xchg
ss
dec
sahf
fcmovne
inc
dec
ja
mov
bound
jg
aaa
jmp
xchg
xchg
mov
sbb
test
jg
dec
popf
popa
ja
fs
scas
push
in
mov
daa
je
or
mov
sub
fadds
icebp
and
mov
cmp
ds
and
test
cmp
in
cmp
jmp
cmp
mov
adc
pushl
inc
pop
push
dec
fcomps
add
scas
jns
add
cmp
cmp
jns
cmp
cmp
cmp
cmp
jns
fidivrs
out
out
cmp
cmp
push
cmp
push
or
iret
repz
push
adc
ss
pmulhuw
in
push
or
in
or
or
in
in
push
add
in
add
add
and
pop
addr16
jbe
xchg
jle
mov
xchg
cmpsl
mov
and
push
je
rcll
pop
enter
out
add
lcall
mov
and
xchg
sub
cmp
insl
ficoml
insb
addr16
in
leave
lods
jg
xchg
mov
mov
pop
in
mov
icebp
mov
adc
sbbb
js
jmp
xor
pop
push
loop
cmp
addr16
insb
ja
cmp
addr16
je
pop
mov
scas
cmp
sahf
pop
mov
stc
add
dec
xor
daa
mov
xchg
mov
adc
push
ss
push
inc
push
out
jo
aam
insb
cmpsb
inc
push
dec
cmpsb
idivb
cmp
fdivrl
sub
ds
rcrl
cmp
cmovnp
add
popa
in
jmp
insb
leave
repz
ja
or
jns
cwtl
push
or
jns
sahf
push
mov
into
into
icebp
fidivrl
das
or
outsl
sub
pusha
fcoms
js
iret
cmovo
ja
add
fildl
pop
test
cmp
pop
in
push
addr16
push
inc
ja
pop
rorl
leave
inc
jb
aas
in
bound
pop
test
in
test
dec
xor
roll
mov
not
push
leave
inc
xor
sbb
cmp
and
pusha
pop
push
and
in
mov
jne
and
adc
popa
mov
xchg
inc
cmp
scas
cmp
leave
fs
add
pop
leave
jae
daa
jge
add
daa
test
mov
popa
imul
mov
inc
inc
decl
dec
adc
idiv
or
pop
mov
dec
ja
inc
aaa
inc
pop
leave
and
in
daa
daa
jo
push
add
mov
fnsave
push
pop
adc
in
pop
mov
in
xlat
cmp
adc
insl
push
call
scas
cmp
leave
pushf
push
add
jmp
pop
out
lar
xchg
out
es
add
clts
jle
mov
xlat
xchg
das
and
inc
mov
rolb
fs
out
loopne
cmp
das
testl
xchg
sbb
repnz
inc
cs
pusha
in
mov
xlat
pop
or
mov
insl
push
daa
jne
dec
outsb
daa
iret
add
jge
or
popf
pop
movsl
or
mov
mov
imul
fldenv
push
add
adc
inc
cli
push
lea
push
adc
inc
or
xchg
pop
or
and
ja
push
daa
mov
test
dec
jb
inc
call
mov
inc
ja
jg
cmp
mov
cmp
dec
dec
dec
outsb
jmp
in
hlt
and
mov
xchg
inc
and
mov
cmp
add
push
int
into
repz
add
cltd
push
lcall
cmp
mov
pop
iret
repz
push
push
iret
pop
xlat
jns
mov
popl
dec
cli
sbb
add
dec
mov
divb
push
cmpsl
push
shl
xchg
mov
push
aaa
sub
xchg
repnz
dec
pushf
dec
movsb
add
push
add
dec
repz
ljmp
repz
or
or
or
lods
shl
cmp
hlt
or
cld
dec
xchg
or
or
or
push
xchg
xchg
xchg
xchg
add
out
sahf
sbb
adc
sbb
sahf
out
sbb
sbb
sahf
out
pop
cmp
and
leave
leave
inc
dec
push
and
loopne
iret
repz
inc
pop
jle
test
dec
dec
push
loope
add
mov
rorl
in
iret
hlt
out
cld
dec
mov
lar
js
ret
jg
aaa
dec
mov
dec
mull
outsl
dec
jbe
dec
or
jb
xor
call
cmpb
bswap
mov
dec
fcomps
int
clc
out
fs
dec
or
sbb
in
sahf
or
repz
sahf
out
adc
push
adc
jns
leave
push
unpckhps
push
andb
pop
push
jmp
add
or
pop
scas
daa
and
jle
xchg
pslld
movsb
pop
push
add
lret
lock
paddsb
add
and
testl
gs
or
imul
sub
inc
popf
shrb
insb
das
sarb
fnstsw
js
iret
jae
loopne
mov
cwtl
out
loop
push
scas
mov
mov
shrl
fnsetpm(287
sbb
cmovbe
sahf
je
iret
incb
dec
push
mov
push
dec
daa
getsec
das
repz
js
dec
dec
push
dec
outsl
pop
push
or
insl
or
mov
lods
dec
fiaddl
xchg
dec
inc
repnz
test
outsb
scas
dec
cmp
insl
leave
sbb
js
mov
addr16
xor
andb
or
cmpsl
enter
sbb
in
push
test
dec
cltd
dec
dec
adc
dec
pop
dec
dec
inc
loopne
andb
pop
mov
sub
insb
mov
out
cs
sub
or
xchg
cmp
repz
add
add
add
cmp
inc
pop
dec
test
cmp
or
gs
adc
or
repz
repz
into
repz
cmpsl
adc
xchg
cmp
jo
loopne
in
push
push
push
movsb
jo
cmp
repz
push
add
push
cmp
repz
pop
add
dec
jle
imul
xchg
add
rorl
cs
xor
enter
xchg
push
pushf
push
mov
popf
push
leave
add
in
leave
leave
jecxz
stc
add
cmp
outsl
or
add
repz
sbb
and
sub
ljmp
pop
push
and
out
cs
mov
inc
xchg
pop
fs
out
adc
jg
add
push
bswap
push
add
mov
fisttps
and
cmpsl
push
inc
or
xchg
js
or
push
mov
pop
push
iret
repz
add
add
iret
repz
inc
push
push
pop
pop
popf
fcmovne
cmp
lahf
test
mov
mov
push
dec
jbe
xor
mov
cmpsl
in
in
in
in
in
sahf
cwtl
cmp
hlt
mov
cld
vmwrite
lods
je
pop
push
sub
in
add
dec
aas
push
sub
pop
push
push
fwait
loope
xor
popl
leave
push
mov
loopne
add
aas
das
clc
into
popf
xchg
lahf
cmpsl
pop
push
lahf
scas
mov
mov
add
lar
dec
push
dec
pop
cs
iret
push
or
jbe
into
xlat
out
fistps
out
out
mov
or
push
fcoms
xor
bswap
inc
out
mov
add
push
daa
out
outsb
mov
cmovnp
push
add
leave
rorl
add
iret
cmp
jae
or
or
or
or
rep
mov
adc
das
fdivp
sbb
add
push
lahf
andnps
pop
push
pop
push
pusha
jbe
mov
cmp
push
aaa
push
mov
xchg
mov
into
inc
repnz
mov
stos
dec
mov
ja
jb
mov
iret
jl
jno
inc
stc
push
lahf
push
sub
pop
xchg
xlat
sbb
addr16
lahf
sbb
out
loopne
mov
in
xchg
scas
xor
cmp
inc
cmovl
fisubrs
push
subps
sbb
mov
cwtl
push
cmpsl
popf
cmp
in
mov
fnstsw
fisttpl
jecxz
daa
daa
daa
jmp
add
push
mov
filds
or
cmp
fucomi
decw
dec
das
push
subps
loope
out
das
lcall
bsf
add
fnsave
pop
ltr
enter
repz
or
push
or
out
pop
or
or
out
inc
dec
xlat
adc
out
and
jle
jbe
daa
mov
xchg
xchg
popf
mov
addr16
mov
nop
mov
fisttps
iret
in
jbe
loope
loope
or
inc
pop
and
pop
or
sahf
fucomi
in
xchg
sbb
xchg
and
sub
fisubl
mov
push
dec
mov
cmp
sbbb
fs
pop
ja
ja
out
cwtl
jnp
ficoml
mov
je
lahf
lar
push
pop
push
out
or
fmull
push
jmp
push
das
aaa
xor
lsl
sbb
and
push
add
pop
pop
lahf
daa
fnsave
push
pop
sgdtl
inc
or
pop
push
jp
pushf
je
out
or
insb
shl
xchg
or
or
mov
jl
xor
jl
in
outsb
roll
jge
pop
inc
repnz
xchg
cmp
sti
pop
in
inc
dec
repnz
xor
addr16
xor
fnsave
pushw
jno
add
mov
pop
scas
push
pop
loopne
iret
pop
test
pop
pop
sub
mov
dec
adc
push
push
dec
dec
cs
sti
add
shlb
nopl
rorb
out
or
clts
iret
repz
or
or
cmp
cmp
inc
adc
iret
jae
dec
push
adc
iret
jae
cmp
imul
fildl
orl
pop
fildll
mov
outsl
mov
add
pop
idivl
xchg
outsb
jb
lar
pop
pop
scas
or
outsb
fnsave
sub
xor
daa
cmp
mov
pop
push
pop
clc
in
jbe
ror
orb
and
add
push
jbe
roll
out
test
mov
pop
fistpll
sub
xchg
lea
addl
push
pop
jns
jns
pop
pop
gs
insl
pop
jne
jns
in
push
pop
jge
test
or
or
aaa
jns
movsl
or
dec
dec
dec
mov
call
iret
mov
pop
hlt
push
cs
fisttps
in
ss
ds
inc
pop
and
jp
push
out
in
jbe
fbld
repnz
lds
add
ja
push
pop
fisttpll
in
or
sahf
or
cmc
pop
mov
fbstp
pusha
femms
push
or
xorb
pusha
adc
out
cs
push
cmovs
add
ss
sahf
inc
xorl
push
xchg
xchg
jns
cmpb
lods
mov
scas
push
movzbl
fidivs
or
cmp
pusha
out
pop
add
xchg
sahf
mov
outsl
add
xor
cs
inc
inc
or
inc
xchg
dec
pop
jmp
icebp
pusha
test
xchg
imul
aaa
psubsb
dec
rolb
sbb
inc
or
cld
scas
daa
sbb
popa
or
push
mov
xchg
test
pop
ja
mov
mov
sub
pop
rol
cmp
dec
sahf
or
rcll
jmp
fbstp
sbb
ucomiss
add
and
pop
xor
pusha
fists
pop
pop
and
mov
and
addr16
sarb
jne
fisubl
loop
ljmp
mov
adc
add
cmp
or
and
dec
xor
addr16
das
push
add
outsl
push
add
popf
cmp
ja
jg
xchg
pop
test
dec
mov
in
leave
leave
aam
clc
add
in
or
cmp
in
in
mov
in
in
add
daa
iret
repz
sub
cs
push
inc
dec
in
dec
outsb
packssdw
cmp
cltd
push
sbb
test
mov
sub
pop
in
out
xlat
gs
unpcklps
sar
out
mov
mov
dec
and
push
inc
xchg
pop
and
jl
test
xchg
pop
and
aam
xchg
xchg
pop
scas
add
dec
sub
add
cmp
pop
cmc
movhps
push
filds
fs
pop
leave
pop
inc
addr16
popf
pop
insb
iret
dec
cs
out
enter
fiaddl
push
mov
cs
dec
cs
clc
and
xchg
dec
mov
push
mov
loopne
in
pop
popa
or
xchg
mov
xchg
test
cmpsl
in
mov
fs
in
mov
mov
adc
call
lcall
ss
push
add
dec
imul
aas
je
push
jl
jns
leave
repz
or
movsb
rcrl
pop
pop
adc
mov
std
in
inc
sahf
add
sbb
aam
pushf
lock
pop
mov
in
in
dec
push
pop
mov
push
add
mov
add
xchg
push
sahf
jg
in
in
leave
rcr
in
loopne
lock
or
cwtl
ss
rorb
sbb
fwait
dec
imul
imul
mov
lea
scas
das
gs
js
aaa
insl
push
push
jne
cmp
repnz
jge
test
or
or
jns
out
push
mov
mov
mov
insb
loopne
repz
outsb
das
shrb
clts
jmp
push
pop
push
wbinvd
out
sahf
out
or
pop
sahf
out
sahf
or
or
sahf
out
movq
mov
out
sahf
out
adc
jns
adc
adc
mov
jns
xlat
sbb
insb
cs
das
das
in
insb
clc
insb
add
out
sahf
testl
and
sahf
out
sahf
das
and
and
jns
out
push
and
out
sahf
out
jno
jl
sahf
out
sahf
xchg
xchg
sub
jns
sub
sahf
out
leave
cs
pop
aaa
jns
fbstp
out
cs
jns
sahf
xchg
or
cli
ss
fcomip
add
cmp
or
xchg
adc
dec
and
mov
ja
pop
sahf
punpcklbw
cmp
daa
xlat
pop
jo
js
ds
outsb
bswap
subb
fnstsw
jg
outsb
fistpll
jmp
fcompl
sgdtl
repnz
cmp
sahf
in
adc
ss
mov
pop
pop
outsl
movq
outsl
pop
xchg
fwait
mov
push
aas
cmovo
jb
movsb
xchg
xchg
xchg
xchg
mov
cmp
enter
unpcklps
cmp
leave
sbb
adc
xor
in
in
cmp
pop
js
dec
sahf
out
sahf
mov
pushf
pushf
fmull
aam
in
mov
in
leave
in
or
adc
xor
cmp
cmp
inc
and
daa
iret
daa
test
jae
sub
fmuls
loopne
iret
leave
repz
cs
addr16
mov
or
push
adc
jb
push
push
add
lock
xchg
outsl
jb
push
xchg
pop
mov
mov
push
mov
iret
mov
repnz
pop
out
out
add
in
jae
xchg
xor
rcll
sbb
jae
addr16
in
jb
mov
jae
push
addr16
sahf
lret
loopne
into
repz
jmp
idiv
sahf
fcmovne
lods
je
or
pop
and
cmp
aaa
jns
xchg
fcmovne
repz
or
out
jns
adc
adc
jns
xchg
xchg
sahf
xchg
out
mov
sbb
in
pop
aaa
bndstx
aam
fisttps
sahf
out
push
cmc
mov
decl
jne
push
and
jns
sbb
jne
and
and
xchg
push
and
xchg
jb
fisttpll
sbb
fadd
mov
scas
push
in
daa
iret
add
pop
jns
fmull
pushl
out
cmp
outsb
repnz
or
xadd
xor
push
pop
jbe
movups
pop
jns
jbe
adc
das
mov
adc
aaa
dec
aas
push
pop
aad
xor
sbb
dec
cmp
ds
jbe
test
sbb
imul
mov
add
fwait
mov
mov
popf
pushf
cmp
orb
mov
mov
stos
fimull
mov
repnz
cli
mov
shlb
dec
outsb
and
and
cmp
xchg
inc
add
jbe
push
inc
pop
js
mov
cmp
mov
mov
iret
add
lret
psrlq
inc
jbe
jns
jecxz
push
js
dec
dec
add
movhps
and
cmp
cmovns
push
xchg
je
and
pushf
pushf
test
scas
mov
mov
xchg
pop
in
pslld
lea
jge
fwait
mov
dec
les
cmp
add
dec
jns
cmp
into
sub
mov
cmp
jns
rcrb
push
mov
pushf
pop
xchg
xchg
xchg
xchg
fsubp
out
xchg
cmp
xchg
idiv
cmpsl
push
cmp
jnp
jns
jp
rdtsc
jp
cmp
pop
mov
dec
mov
cmp
je
das
jp
mov
xchg
xchg
xchg
xchg
cmpsl
scas
mov
sbb
inc
repnz
loop
mov
aad
daa
popf
pop
mov
roll
adc
xchg
out
and
cmp
cmp
push
jo
jo
jae
cwtl
pop
mov
sbb
mov
ret
mul
leave
jae
popf
jmp
xrelease
fcmovne
xchg
pop
push
jl
jl
pop
shll
cmp
jl,pn
ss
xchg
leave
in
jbe
pop
popa
punpckhwd
leave
jns
lahf
pushf
in
in
in
lods
mov
cmpsl
pop
and
leave
les
pop
out
mov
push
or
push
sub
addr16
pop
jb
xor
pusha
cmp
ja
mov
xchg
jge
inc
dec
adc
push
mov
leave
inc
jb
daa
jns
inc
cld
out
jle
mov
addr16
jle
xor
sbbl
and
jle
jle,pt
int
push
pop
jp
iret
add
inc
addl
mov
addr16
loopne
call
fldl
adc
sbb
xchg
jg
in
mov
outsl
daa
xor
jg
out
mov
fwait
pop
push
sahf
out
sahf
cmpsb
pop
mov
mov
jns
or
or
out
sahf
out
call
jge
xchg
decb
orb
adc
pop
cmp
repz
sub
xor
repz
adc
repz
pop
popa
sbb
cmp
repz
sbbb
sbb
cmp
repz
sbb
jmp
nopl
cmp
cmp
sbb
sbb
cmp
cmp
push
adc
cmp
les
fcmove
repz
fcompl
in
xor
iret
repz
push
orl
xor
iret
repz
xor
cmp
repz
dec
cmp
iret
repz
pop
cmp
je
jl
repz
cmp
sbbl
inc
jns
aaa
jns
cmove
int3
inc
cmp
in
in
loop
in
dec
clc
jns
out
dec
add
leave
in
in
and
das
cmp
push
push
pop
setae
jno
jns
mov
xchg
pop
and
push
mov
mov
pop
or
addb
sbbb
movntq
mov
sbb
pushf
adc
cmpl
sbb
push
dec
xlat
xchg
out
pop
arpl
punpckhbw
sbb
out
push
jns
cmpsb
inc
push
daa
and
sub
mov
mov
mov
add
leave
pop
clts
cmp
cmp
fabs
jmp
icebp
or
sbb
sbb
cmp
and
pop
sub
iret
xor
cmp
ret
xchg
out
lea
mov
test
sub
jne
jg
xchg
xchg
outsl
push
cmp
pop
pop
xor
lret
loopne
fsubrl
jmp
jmp
testb
repz
mov
jbe
cmp
or
in
in
dec
pop
outsl
dec
pop
sahf
out
adc
out
fwait
cs
cmp
cmp
outsb
repnz
sbb
sbb
vmwrite
xchg
sbb
repz
and
xor
or
sub
int
fmull
xor
push
daa
outsb
xchg
insb
xchg
sub
mov
movsl
cmpsl
dec
mov
out
lods
xchg
daa
push
push
dec
sbb
popf
xchg
out
pmaxub
add
sbb
jg
xchg
xchg
xchg
xchg
push
add
push
xchg
repnz
xchg
xchg
sub
repz
cwtl
push
mov
cmp
scas
mov
out
es
adc
jns
in
lock
sbb
aaa
jns
out
sbb
sbb
ja
sbb
cmp
rorl
and
pop
imul
es
push
sub
sub
xchg
mov
out
push
in
inc
call
cmp
sahf
xor
adc
scas
es
out
daa
cmp
mov
daa
jmp
fwait
loop
inc
mov
push
push
sbb
mov
jns
or
dec
add
push
jo
mov
adc
sub
xchg
daa
add
movsl
mov
xchg
scas
movsl
mov
pop
mov
mov
fildl
aas
out
repnz
mov
jno
std
mov
mov
repz
repz
adc
adc
adc
daa
into
xor
mov
pop
push
addr16
jg
aas
xchg
das
xchg
mov
push
or
movsb
call
and
int
ficomps
daa
pop
pop
aad
mov
pop
rcr
outsb
push
fisttps
add
sbb
pop
and
dec
or
cvtps2pi
mov
push
fwait
jae
cmp
cmpsb
pop
mov
mov
iret
adc
fisttpll
dec
lahf
pop
cmp
out
pop
sbb
push
movsb
repz
sbb
jns
adc
pop
sahf
out
add
add
out
and
mov
pop
push
or
mov
push
jo
out
dec
mov
push
fucom
jns
mov
in
xchg
mov
adc
in
and
sti
sbb
lea
out
in
outsb
nopl
and
push
sbb
xor
aas
pop
dec
iret
leave
repz
push
and
and
subl
iret
cmp
lahf
push
sub
lock
sti
sub
mov
mov
leave
jnp
sub
and
sub
jbe
cmp
xor
cmovae
outsl
fmul
xor
jbe
mov
cmp
rorb
repnz
dec
jg
push
cmp
dec
ss
hlt
jno
das
inc
inc
scas
mov
insb
mov
fmull
push
lahf
sahf
jle
add
dec
fbld
inc
nop
out
push
cmp
mov
push
not
sbb
insl
mov
scas
sbb
fwait
in
scas
sbb
or
daa
sub
push
mov
push
jp
repnz
scas
pop
mov
iret
testl
add
mov
dec
and
inc
xchg
dec
add
adc
clc
mov
repnz
jmp
mov
repnz
subb
lahf
xchg
mov
and
test
cs
add
in
fdivr
dec
add
pop
inc
mov
cmpsl
mov
push
and
stos
mov
jne
pop
fs
push
daa
sbb
mov
mov
cmc
in
pop
nop
addr16
leave
jae
cs
jns
push
cld
push
test
add
inc
imul
into
mov
pmaxub
out
out
sub
fisubrs
psadbw
nop
call
mov
fidivrs
add
pop
xchg
inc
fcmovne
sbb
push
xchg
mov
das
mov
cmpsb
mov
xchg
xchg
xchg
mov
dec
rorl
mov
cmp
mov
mov
mov
jp
enter
cmp
dec
cmpsb
in
and
nop
in
nop
xchg
andb
dec
mov
fdivr
and
das
movsb
xchg
call
aaa
daa
mov
or
pop
dec
fbstp
and
xchg
dec
sbb
hlt
enter
add
out
pusha
add
outsb
mov
add
pop
jb
xor
inc
mov
mov
das
mov
scas
add
scas
test
sub
or
mov
mov
adc
mov
scas
add
push
loop
xchg
decl
sarb
adc
inc
ret
dec
scas
push
sub
cmp
shrb
pop
mov
js
dec
int
add
mov
xchg
xchg
pushf
loope
xchg
mov
or
aam
jae
pop
sbb
cmp
jp
xchg
adcb
out
add
js
pop
les
faddl
aas
mov
mov
pop
cmp
xchg
aas
xchg
movaps
push
inc
cmp
xor
lahf
mov
add
mov
pop
mov
movl
mov
cltd
pop
mov
sbb
mov
cs
sbb
sbb
xchg
out
push
movsb
mov
incb
add
add
mov
sub
mov
scas
mov
fistl
lahf
fdivrs
daa
mov
bt
push
insl
mov
pop
repnz
call
movsb
mov
test
mov
and
pushf
inc
inc
imul
fwait
loopne
adc
out
xchg
jbe
cmp
add
inc
mov
mov
mov
and
scas
add
das
nop
xchg
enter
stos
cmp
push
daa
push
addr16
pushl
xchg
pushf
push
cwtl
pop
cmp
insl
cmp
out
cmp
push
addr16
add
mov
mov
pop
sarb
pop
clc
lock
aaa
repnz
add
jns
fsts
cltd
aas
sbb
and
push
sub
icebp
cmp
xor
or
or
push
and
rcrl
cltd
outsb
jns
cltd
or
mov
hlt
ja
out
cmp
fbstp
ret
push
fsubs
in
or
or
cwtl
ret
iret
in
in
fmull
repnz
cmpsb
xchg
pop
and
sbb
jg
into
leave
push
push
pop
pop
pop
outsb
rcrl
add
outsb
push
and
mov
mov
cmp
xor
enter
nop
ret
pop
ret
mov
in
add
fwait
decl
push
aas
cmp
sub
icebp
pop
clc
iret
add
push
inc
dec
sahf
or
imul
sbbb
sbb
sbb
push
jl
mov
pushl
imul
pop
pslld
jns
aaa
test
add
movsb
out
jo
adcb
aas
inc
push
dec
push
fdivp
push
das
mov
dec
add
invd
jg
push
push
push
and
pop
pop
lds
sbb
fdivrl
pop
popf
js
push
pop
dec
and
lds
dec
add
insl
sub
insl
lea
jp
push
lea
add
cmpsb
movsb
sahf
rcll
pop
or
inc
inc
aas
dec
push
or
pop
inc
add
sub
insl
and
aaa
xlat
add
mov
vmwrite
push
add
sahf
out
pop
or
or
aaa
or
mov
imul
daa
adc
adc
xchg
xchg
fisttpl
xor
push
addr16
das
push
xorps
loopne
insb
das
insl
push
and
pop
jo
jns
push
pop
andb
jo
mov
test
xchg
fcmovne
leave
repz
in
adcb
xlat
mov
pop
data16
xor
mov
adc
out
and
adc
lods
loope
inc
xchg
nop
aaa
decl
and
stos
push
sbb
inc
test
or
nop
add
add
movsb
add
fsts
jns
and
cli
mov
loopne
inc
jle
test
shll
mov
inc
mov
pushl
add
mov
sbb
in
mov
mov
push
add
notb
add
fidivl
rcr
fsubp
stc
jb
adc
repz
fwait
out
stos
push
sbb
repz
adc
add
stos
sahf
out
sahf
lock
rol
sarb
jns
mov
repz
test
movsb
mov
iret
repz
cmpb
jns
out
push
pusha
pop
dec
inc
cmp
jns
out
sub
add
adc
clc
test
cmp
lods
dec
push
call
iret
repz
enter
nop
jl
iret
repz
pop
inc
cmp
repz
repz
sbb
or
jns
iret
add
test
in
in
idivb
aam
mov
test
pushf
push
nop
jns
out
push
subb
fdivr
cmp
sub
and
call
add
psllw
push
xor
testl
push
push
or
mov
out
cmp
mov
pop
jmp
ja
mov
sub
mov
add
testb
pop
xorb
aam
in
lock
daa
push
push
push
adcl
xor
aam
fdivr
cli
push
fnstenv
das
add
outsl
insl
iret
mov
repnz
xor
inc
add
and
orb
xlat
lcall
push
fiaddl
lea
ds
data16
inc
pop
out
mov
add
call
adc
divl
jae
xor
sgdtl
adc
xor
addb
xor
inc
adc
rorl
out
mov
scas
movsb
mov
push
sbb
sbb
out
jns
cmp
push
ds
or
repz
insb
adc
mov
iret
test
cs
adc
dec
and
cmp
repz
or
or
jnp
adc
push
sbb
cmp
sbb
push
pop
dec
jae
jns
pop
mov
push
cmp
repz
push
and
repnz
jmp
clc
in
test
cmp
out
pop
or
cmp
inc
inc
daa
xor
arpl
cmp
pop
js
mov
mov
adc
push
dec
repz
fisubrl
cmp
xchg
jns
cmp
sti
dec
das
push
dec
in
adc
cld
xchg
inc
xchg
incl
lcall
or
jnp
lret
imul
jl
dec
push
enter
inc
pushf
or
jl
xchg
mov
adc
lods
roll
mov
inc
add
leave
sbb
into
sbb
rorl
and
sahf
mov
ljmp
test
lds
std
and
sbb
addl
xlat
xchg
inc
push
add
inc
stc
push
mov
adc
mov
decl
js
inc
outsl
loopne
jmp
incl
xchg
test
mov
cmp
inc
mov
popf
sti
jmp
stos
push
inc
mov
jmp
int3
repnz
test
pop
stos
clc
scas
adc
inc
jmp
aam
out
mov
dec
jp
iret
inc
gs
xchg
push
cmpsb
scas
mov
or
decl
leave
dec
dec
pop
inc
in
xchg
cmp
xor
dec
cmpsl
in
cmp
sahf
xchg
lcall
pop
cmpsb
lock
mov
popa
sar
mov
fsubs
stos
xchg
clc
repz
mov
dec
pop
fldl
xchg
and
xchg
ja
cltd
flds
int
add
aas
jno
or
mov
pop
jmp
dec
lea
aas
ret
shrl
mov
icebp
aas
rorb
and
jmp
mov
insb
scas
add
aas
xor
aad
mov
std
std
into
popa
incl
aas
das
dec
pop
loope
les
aas
xchg
les
jne
int
mov
sub
jmp
xchg
cmp
push
mov
xchg
aas
cmp
mov
mov
jp
popa
push
pop
sarl
jl
mov
das
lea
mov
inc
mov
cmp
sub
jge
mov
inc
rcr
push
arpl
int3
and
incl
xchg
cli
cmp
jp
and
cmp
mov
cmp
std
xlat
cmp
mov
mov
jecxz
cmpsb
test
pop
mov
pushl
fldt
cmp
jno
shlb
out
dec
nop
pop
cmp
fisubl
xor
push
call
cmpsl
push
lahf
inc
pop
mov
sub
dec
in
ss
push
scas
into
imul
faddp
jge
call
lcall
sahf
out
pop
push
xchg
cmp
push
andl
dec
dec
gs
std
orl
pop
ficomps
cld
ror
add
cmpsb
fmul
aas
mov
imul
push
inc
scas
fcomps
xchg
pop
scas
popw
popa
daa
mov
rorb
push
pop
mov
test
push
add
mov
addb
pushl
pop
ja
popa
push
out
mov
les
hlt
push
xor
xchg
fs
xor
or
mov
aad
mov
rclb
jl
jle
sub
lcall
mov
repnz
repz
test
ficompl
jmp
mov
hlt
ljmp
incl
insb
adc
test
fs
add
leave
mov
add
insb
push
arpl
jmp
psubd
or
outsb
cmp
imul
addr16
add
aam
dec
fcomip
std
test
movsl
cli
test
xor
leave
mov
jecxz
fdivr
scas
pushl
jne
filds
or
shrl
neg
push
adcb
push
popa
call
mov
and
mov
cltd
xchg
mov
mov
or
or
and
decl
mov
jl
das
adc
stos
sbb
data16
inc
fdivl
jno
add
adc
call
out
mov
mov
movsl
in
lahf
xor
mov
js
stc
mov
xchg
sbb
push
sub
ljmp
add
hlt
push
imul
insb
sbb
xor
dec
add
in
xchg
push
insb
jnp
add
sar
push
or
fnstenv
adc
mov
mov
bound
ficoml
jl
mov
aam
pop
popa
mov
into
pop
cmp
mov
inc
movsl
fisttps
ljmp
sbb
shll
jmp
outsb
xor
mov
sar
mov
add
in
add
pop
dec
or
cmp
add
daa
adc
or
jmp
or
and
test
or
mov
popa
into
push
stc
ficomps
leave
fldcw
and
ljmp
mov
orl
mov
in
mov
mov
add
shlb
ljmp
fildl
push
fdivl
or
test
fs
ds
or
lcall
jp
iret
push
in
decl
xchg
daa
scas
add
mov
pop
jge
xchg
shlb
add
inc
push
imul
xorb
sbb
push
imul
aam
loopne
rorl
int3
decl
outsl
fistpll
mov
mov
aad
mov
call
xchg
shll
push
ljmp
mov
cmpsb
fldl
mov
dec
ss
fisubrl
or
scas
push
dec
add
pusha
jp
inc
ret
out
pusha
fists
addr16
mov
jns
imul
andl
ljmp
and
ja
int3
add
mov
das
es
incl
mov
add
mov
cmpsl
call
ret
shlb
ljmp
ret
es
pushf
mov
insl
add
ss
jmp
addr16
pushl
push
add
adc
mov
jnp
sbb
xchg
or
out
fdivr
jl
or
rcl
xchg
aam
clc
mov
push
int
mov
mul
ja
cmp
outsl
ja
mov
out
cli
jo
ud0
cmp
pop
or
adc
sahf
gs
call
std
clc
sar
imul
push
js
or
push
addl
mov
cmp
jmp
cmpsl
notl
pusha
rorb
imul
push
scas
fcompl
fldenv
filds
cmp
aaa
cmpsb
mov
mov
sahf
mov
inc
jmp
and
mov
xchg
mov
jmp
sarb
sub
push
mov
jp
mov
dec
popa
les
sbb
mov
call
or
filds
sub
sub
aas
jns
and
int3
mov
cmp
inc
sbb
add
out
sahf
push
cmp
push
xlat
fcomp
ficompl
fsubp
jecxz
jns
jns
in
jmp
ljmp
sahf
out
cmc
div
clc
stc
dec
sbbl
shrb
aas
cmp
adc
sub
decl
inc
inc
dec
stos
or
rclb
clc
mov
outsl
push
dec
shrb
mov
aaa
dec
inc
ds
xchg
outsl
sbbl
jg
pusha
jge
popa
outsb
pop
dec
outsb
gs
push
sub
inc
dec
inc
push
dec
pop
mov
orl
jne
adc
or
incb
test
outsl
push
mov
dec
dec
inc
mov
lea
divb
sbb
insb
cmp
aas
and
push
inc
pop
add
adc
pop
ljmp
or
push
add
mov
dec
bound
jbe
jg
push
popa
addr16
ja
or
push
imul
inc
dec
imul
je
jns
shlb
fisubs
popl
xor
push
mov
insl
mov
orb
inc
xchg
insb
sub
xlat
out
add
inc
adc
hlt
inc
inc
dec
or
adc
inc
pop
dec
cs
mov
push
sti
popa
je
push
cmp
dec
orl
jg
dec
xorb
aas
pop
inc
cmp
pop
bound
xor
insl
sti
mov
popa
arpl
cmp
arpl
or
push
sti
outsl
sub
xor
xor
xor
jae
inc
fwait
loope
push
inc
jbe
pop
sbb
sub
push
xor
inc
fcoms
or
dec
bound
dec
xchg
pusha
jno
daa
sbb
mov
dec
outsb
aad
test
and
inc
mov
push
lds
loope,pt
aad
cmp
inc
inc
sub
pop
js
push
nop
call
addl
xor
insb
popa
je
imul
xchg
cmc
mov
aaa
fisubrs
sub
insb
aaa
aas
rcrb
aas
adcb
mov
pusha
insb
scas
dec
popf
imul
int
pop
adc
jbe
enter
inc
dec
insl
outsl
ss
inc
pop
in
ficomps
pop
je,pt
jo
inc
inc
add
negb
xor
ds
scas
add
xor
mov
dec
push
dec
dec
lea
xchg
sbb
mov
add
inc
inc
outsb
jne
rcll
mov
push
pop
xor
xor
insl
fwait
cmp
add
jns
mov
into
pop
ret
mov
pop
adc
imull
push
add
sub
imul
add
ss
and
push
outsl
pop
lret
or
push
jo
and
lods
fisubl
inc
mov
test
inc
inc
push
sub
sahf
fdivs
popa
jo
cmpsl
add
outsl
push
test
push
adc
push
jno
stos
or
mov
in
pop
xor
pusha
xor
nop
test
pop
cmp
test
mov
pop
arpl
adc
or
sarl
jo
push
mov
push
outsl
insb
jns
xor
pop
inc
das
inc
jb
jo
popa
jb
lock
in
addr16
outsl
arpl
adc
cmp
in
daa
sub
inc
push
bound
ja
dec
stos
mov
inc
jbe
jae
addr16
xchg
ja
stos
xor
imul
xor
fcmove
inc
in
and
add
jmp
and
mov
pop
sub
dec
lods
or
add
imul
or
push
gs
test
and
jo
in
cmpsb
call
jno
mov
push
push
addr16
dec
rcll
push
daa
aas
pop
and
push
adc
push
mov
pop
or
mov
add
add
adc
add
mov
xchg
mov
inc
fs
mov
push
add
fdivr
loopne
adc
dec
inc
push
shrb
es
mov
add
add
or
pop
jp
incl
push
or
or
or
or
or
adc
adc
push
adc
scas
std
fwait
lcall
push
adc
adc
adc
in
cmpsb
fldl
add
or
adc
pop
adc
adc
add
mov
add
and
add
sahf
add
les
add
push
xor
xorl
cmp
call
xor
mov
call
push
popa
pop
and
xor
inc
mov
adc
xor
cmpb
daa
adc
cmpsb
stc
xchg
push
rolb
or
mul
cwtl
inc
pusha
adc
xorl
add
inc
test
add
cmp
adc
adc
pop
inc
pusha
xor
adc
cwtl
into
add
or
cmp
adc
int
addl
pop
popa
jno
and
adc
mov
sar
add
adc
loope
icebp
add
pop
push
mov
mov
pusha
inc
roll
adc
fiaddl
or
js
mov
cli
sub
rcr
push
ret
xchg
and
sub
lods
out
mov
std
cmpsb
xor
aas
imul
fdivrl
add
mov
mov
loopne
mov
push
inc
dec
lcall
aas
mov
cmp
out
cmp
xor
in
and
fistpl
jg
inc
cmc
iret
xchg
inc
jl
repnz
dec
or
adc
pop
inc
jl
xor
xchg
or
incl
cld
cli
and
mov
fiaddl
jg
fnstsw
ficompl
cmpsl
xor
std
fnsave
mov
test
mov
movsl
jecxz
sub
aaa
adc
mov
stc
or
xchg
jg
or
insb
sub
addr16
out
or
push
push
xchg
incl
mov
repnz
inc
lock
scas
jle
fcmovnu
clc
cmp
fisubrl
in
mov
decl
sbb
int3
lcall
fs
scas
mov
pop
pop
mov
jg
popl
movb
xchg
sbb
scas
adc
mov
xor
lods
scas
xchg
incl
test
aam
and
sbb
sarl
and
roll
fwait
movsb
jmp
cmp
push
out
in
and
ss
repz
cmpsb
pop
outsl
icebp
mov
call
std
or
pop
mov
daa
test
fisttps
push
out
outsl
loope
loope
rorl
mov
int
arpl
push
out
mov
cld
push
ljmp
jg
pop
clc
sti
jg
jno
lock
jg
inc
icebp
xchg
std
sarl
xor
hlt
and
xchg
jmp
sbb
mov
mov
out
pop
jb
mov
mov
mov
mov
int
inc
fwait
sbbb
mov
dec
jp
push
gs
jg
hlt
push
add
stc
loope
mov
sar
subl
cmp
icebp
testb
mov
aas
pop
xor
jns
mov
in
repnz
jno
pop
sub
jg
scas
cld
or
push
inc
call
jne
sbb
paddb
inc
mov
dec
adc
push
lock
jmp
mov
aad
aaa
sbb
into
fcomps
sbb
sbbl
into
pushl
aas
loopne
cli
adc
aaa
xchg
in
add
inc
adc
mov
dec
fisttpll
out
aas
std
cli
push
push
fists
fstl
jg
cmp
sub
inc
scas
inc
mov
jg
decl
je,pn
sub
jg
imul
mov
mov
inc
es
gs
jns
enter
in
decl
push
pushf
push
scas
xlat
sub
cmp
sti
punpckhbw
cmpsb
orb
mov
adc
cmp
cmp
js
jmp
fistpl
sub
xchg
pop
clc
pop
hlt
lret
movsb
add
mov
add
lea
jg
gs
std
xorb
jg
or
jg
outsl
adc
ret
das
pop
pop
pop
shlb
out
sarb
lcall
incl
lock
or
sarb
std
pop
les
cli
mov
mov
pushl
add
pop
and
insl
add
leave
push
scas
loop
jge
push
shrl
mov
push
xchg
push
mov
adc
and
sbb
xchg
jo
and
out
test
jmp
imul
rcr
lock
sbb
cmpsl
sahf
imul
fcmovnu
rorl
insb
ljmp
xchg
sub
push
xchg
cld
call
js
cmp
scas
lods
hlt
cmp
fildl
mov
push
movsb
xchg
or
mov
stos
dec
lods
xor
fildll
clc
jg,pn
cmpsl
scas
popa
in
pop
or
mov
xlat
pushf
cld
aas
clc
jge
jnp
lcall
dec
xlat
outsb
mov
sbb
jecxz
inc
adc
mov
adc
adc
push
std
pushl
pusha
imul
add
mov
cmp
xchg
mov
mov
pop
xchg
ftst
jbe
xchg
and
ja
inc
out
xchg
test
jg
mov
lahf
cld
ljmp
out
aas
stc
add
out
gs
jno
fidivrl
lock
adc
pop
cld
addl
scas
les
cli
adc
and
lahf
fdivr
jl
fisttps
enter
jecxz
scas
sub
in
pop
mov
icebp
jmp
hlt
sub
mov
dec
incb
fisubrl
aas
mov
fsubrs
mov
inc
or
pop
jg
add
jg
mov
jg
mov
aad
test
mov
mov
adc
or
iret
push
jbe
push
sbb
stos
icebp
pop
aas
js
incb
jno
adc
push
inc
jecxz
sbb
sarl
sbb
mov
lods
loopne
and
clc
addl
mov
imul
scas
fidivrl
or
add
mov
faddl
cmp
push
and
fwait
imul
add
push
sbb
in
or
and
mov
adc
inc
aas
fldl
pop
rolb
aas
fistpl
adc
call
jno
pop
dec
jg
mov
inc
sti
arpl
daa
std
or
sbb
mov
inc
cmpsb
popf
push
loop
inc
call
sbb
or
imul
xor
dec
xor
fsubr
fistps
lds
fidivrl
adc
stos
pop
add
dec
in
stc
clc
pushl
mov
lahf
les
sbb
sbb
cld
loop
pop
fiaddl
mov
in
stc
mov
lahf
outsl
int3
push
sbb
movsl
loopne
test
clc
pop
sti
jle
xchg
popa
out
out
outsl
xchg
inc
test
in
jge
popa
push
test
lock
outsb
hlt
sti
fsubs
shl
dec
jp,pn
adc
hlt
jmp
fistpl
out
lcall
sti
jg
shl
cld
mov
adc
stos
pop
jg
pop
shrb
rcl
jg
adc
decl
mov
popf
pop
rcr
dec
mov
gs
pushf
lea
jp
cmp
jnp
jecxz
adc
inc
lds
push
pop
adc
imul
aam
dec
int
pop
pop
xor
rorb
and
add
jg
incl
cmpsl
push
sbb
mov
pop
inc
cmpsl
enter
mov
into
test
xchg
jg
movsb
insb
or
and
xchg
fidivrs
push
xor
add
insb
test
aas
repz
sbb
lock
add
mov
in
jmp
out
sbb
aaa
clc
push
std
mov
jl
icebp
or
push
ror
mov
xchg
pmullw
mov
push
mov
fsubrp
dec
sahf
enter
call
fcmovb
inc
adc
inc
loopne
test
out
rolb
pop
or
jne
pop
cld
or
dec
ss
clc
aas
fcmovu
lods
movsb
or
repnz
mov
das
or
xchg
imul
aad
or
pop
in
cmp
jmp
mov
adc
aaa
insl
pop
lock
jmp
hlt
dec
mov
cmp
psadbw
xlat
inc
aas
mov
jg
mov
sub
mov
mov
sbb
cld
daa
jp
std
adc
cltd
or
mov
ret
nop
cmp
das
incb
lock
pop
inc
orb
div
cld
idivl
mov
sbb
stc
lahf
loope
jae
jmp
shrl
je
jge
call
push
fbstp
out
xchg
add
out
icebp
mov
loope
lock
js
cmpsl
popf
sti
mov
fbstp
adc
push
adc
jge
aaa
loope
cmpsb
out
cmp
call
xor
incb
mov
adc
mov
and
imul
xchg
sub
mov
cmp
int
add
push
pop
aaa
xchg
std
fisttps
andb
inc
sbb
xchg
fimull
hlt
jle
icebp
ret
ror
sbb
aaa
lds
fidivs
inc
adc
shrb
mov
aas
pop
clc
loope
loope
mov
lahf
jp
xchg
push
jo
add
xlat
rcrl
je
xchg
fldenv
iret
fdivrl
xchg
lcall
push
cmp
repz
add
movsb
loop
dec
sarl
pop
out
jg
jno
ret
shll
cmp
aas
xor
inc
sbb
inc
push
dec
jge
pop
clc
xchg
cmpsb
ljmp
pushl
mov
jne
in
sbb
xchg
imul
ljmp
jmp
std
mov
daa
jmp
faddl
mov
pop
mov
outsl
pop
std
jg
add
pop
stc
push
dec
out
fstpt
mov
enter
es
pop
add
cmc
out
decl
jl
icebp
push
lahf
sti
inc
pop
imul
push
xchg
cmpsb
scas
les
pop
xor
mov
xchg
xor
int3
fildll
fsubrl
dec
add
xchg
cmp
or
add
stos
inc
aas
sti
push
sti
pop
inc
dec
push
mov
and
fdivrs
int3
ljmp
iret
and
add
arpl
xlat
adc
dec
fwait
inc
jb
decl
mov
subl
add
cs
rcrw
adc
jb
cmpsb
push
xchg
or
xor
stc
clc
incl
cmc
pusha
mov
sub
lcall
dec
popf
jbe
into
mov
jbe
xor
adc
decl
sub
pushf
jge
ljmp
add
cltd
mov
sbb
xchg
dec
sbb
iret
shll
mov
jmp
dec
test
push
arpl
out
imul
jno
xor
mov
pop
xchg
decl
sbb
xor
cltd
fnstsw
pop
and
push
aaa
jbe
cmp
pop
pusha
inc
test
pop
ficomps
or
jmp
pop
outsl
sahf
ja
adc
stos
pop
lock
jmp
xchg
lods
test
sti
jae
xchg
int3
add
xor
or
pop
call
stos
adc
mov
cmp
or
mov
jg
cmpsl
or
repnz
ljmp
clc
xchg
adc
dec
ss
sub
lods
xchg
push
cmp
aaa
outsl
into
and
jmp
mov
and
prefetch
std
cwtl
mov
push
enter
jmp
push
pop
dec
add
setp
iret
into
fdivr
lcall
mov
dec
or
mov
sti
out
jmp
jno
adcb
sub
mov
mulb
lds
je
adc
fidivs
sti
push
add
ljmp
fiadds
dec
jnp
mov
int
xchg
cs
lock
and
incl
adc
repz
mov
ds
sbb
shlb
daa
xlat
jmp
into
sbb
mov
mov
scas
cmp
stos
jo
lds
sti
mov
ficoms
inc
add
pop
sbb
cli
lods
dec
lret
push
fwait
andb
mov
pushl
mov
cli
add
stc
pushf
pop
int
and
cmp
jo
int3
cwtl
cld
add
lock
ljmp
clc
ret
inc
pop
mov
or
jno
dec
femms
lcall
push
mov
dec
leave
inc
push
dec
in
push
in
ss
mov
std
lret
add
loopne
adc
mov
push
mov
sarb
mov
std
dec
aas
sub
and
in
push
jne
mov
cwtl
scas
aas
dec
sub
jmp
mov
sub
pop
xchg
jne
int3
mov
adc
mov
incl
sub
xchg
or
mov
xchg
cmp
and
sbb
jmp
dec
call
cmp
xor
cmp
sbb
movsl
ret
adc
pop
orb
lods
scas
mov
decl
loop
xlat
xor
and
xchg
push
orl
ret
insl
jg
sub
and
decl
enter
or
push
stos
mov
shll
cld
jnp
mov
sbb
popa
subb
jl
in
inc
sub
sub
xchg
pop
out
pop
arpl
repz
jns
out
hlt
jge
xor
mov
jb
bound
out
dec
xor
push
imul
lret
cli
loop
xchg
ljmp
mov
or
xchg
cmp
sbb
pop
in
cmp
jb
xchg
ljmp
clc
call
pop
add
out
call
cmc
nop
mov
mov
adc
incl
pop
xlat
pop
dec
aam
jnp
pop
leave
fwait
out
popa
test
dec
negb
fs
add
xor
ds
cltd
test
insb
lods
mov
push
incl
or
dec
pop
sub
stos
xchg
shll
addr16
push
adc
push
mov
jg
fadds
fs
sarb
inc
out
rorl
or
mov
mov
adc
loopne
jne
jne
sub
in
mov
mov
lret
repz
lcall
pop
enter
push
or
orb
shr
repnz
inc
scas
les
call
dec
xor
subb
mov
dec
scas
ljmp
push
xchg
fstpl
jmp
ja
test
add
push
xchg
imul
lcall
bound
xor
lret
mov
shlb
mov
cld
sbb
xor
mov
lea
ljmp
pop
sbb
adc
ljmp
hlt
push
lods
ja
add
dec
pusha
leave
mov
subl
adc
jecxz
add
push
shlb
push
data16
lcall
xchg
in
cmp
add
ljmp
add
lret
mov
movsl
sub
incl
mov
inc
push
movsl
sar
in
push
push
jmp
scas
imul
add
fcomip
and
xor
or
popa
xchg
popf
insl
xchg
inc
loop
push
in
jg
or
in
rclb
aam
cmpsl
ds
jnp
mov
movsl
xchg
daa
mov
jmp
xor
in
fisttps
jae
inc
cltd
fs
jnp
nop
and
inc
xor
jo
sbb
in
scas
loopne
pop
xchg
addr16
and
cmpsl
sbb
inc
sar
clc
dec
scas
out
je
orl
lods
mov
pop
dec
cwtl
or
mov
sbb
adc
stos
stos
jge
jmp
fistpll
rcll
test
xchg
mov
xor
mov
jg
xchg
mov
pop
jl
or
imul
cmc
cli
xchg
ret
xchg
iret
cwtl
ljmp
aaa
mov
fcomi
sbb
ss
aaa
lcall
mov
mov
mov
or
pushl
andl
sbb
sbb
sbb
ljmp
jae
stos
and
sbb
xchg
inc
cltd
add
stc
mov
adcl
jmp
fmull
aad
imul
out
sbb
xor
dec
adc
js
adc
jg
ja
js
add
int
dec
cltd
cltd
icebp
mov
xorl
rcrb
in
and
loope
decl
fldcw
pop
push
adc
ljmp
push
fdivrs
jp
mov
outsl
fnstcw
xchg
add
xor
push
out
cmpsb
or
sub
mov
out
fimuls
inc
or
push
mov
decl
push
dec
mov
in
dec
and
fwait
xor
inc
dec
push
xchg
sbb
add
mov
call
jo
xor
nop
xlat
mov
cmpsb
xlat
mov
pop
ret
push
fcoms
inc
or
mov
shlb
in
pop
pop
sti
jecxz
add
or
out
jl
dec
out
inc
jae
adc
add
xchg
push
faddl
cmp
or
add
jbe
add
push
loop
jmp
adc
rclb
xchg
subb
ja
cmp
stos
sti
popa
int3
loop
call
std
decl
sbbb
cmpsb
stos
addr16
jns
out
and
imul
add
jecxz
stos
outsb
clc
and
sbb
lock
pop
leave
or
lock
es
incl
sub
mov
push
mov
jl
adcl
sub
xchg
fisubl
ret
loopne
add
xor
incl
jmp
mov
enter
push
sub
inc
pop
lahf
in
lods
and
jmp
dec
pop
push
dec
jmp
sbb
mov
cmpsb
insl
test
cmp
cmp
sbbl
dec
sahf
push
das
in
dec
inc
pusha
iret
sbb
pusha
add
sbb
jg
cmpsl
jbe
or
lret
add
ljmp
jo
mov
out
xor
insl
mov
inc
and
lods
push
mov
stos
mov
jg
sbb
mov
xor
ds
mov
add
ljmp
in
jecxz
mov
or
leave
xor
rcr
scas
add
jg
dec
inc
adc
dec
mov
lahf
jbe
dec
pop
adc
ja
out
push
cmpsb
in
in
int3
inc
shll
fcoml
mulb
jbe
push
repz
push
xchg
arpl
pop
icebp
incl
fld
pop
insl
xchg
xor
shrb
sub
js
repnz
dec
or
cmpsl
loopne
les
jmp
or
add
or
js
incl
sbb
xor
lea
xchg
in
popf
sahf
rol
jg
fsts
dec
jecxz
xchg
ror
and
shlb
test
mov
mov
cmp
sub
hlt
scas
clc
pop
jg
mov
test
jno
push
jecxz
adc
incl
push
cmpsl
inc
or
adc
adc
sbb
add
lods
mov
mov
mov
pop
pop
imul
sub
fisttpll
nop
loop
mov
ljmp
hlt
insl
lahf
cmp
daa
out
or
jb
push
aam
les
sub
call
inc
shr
pop
stos
jmp
or
stos
mov
pop
push
dec
test
test
lcall
movsl
insl
jbe
or
fists
decl
push
xlat
sti
mov
mov
mov
cmp
mov
jb
sar
push
sbb
sub
cli
aas
cli
scas
sub
sbb
sti
jnp
in
repz
add
lcall
decl
inc
fsubr
ja
add
dec
lcall
out
stos
and
lcall
xor
sahf
xchg
push
xchg
pop
xor
and
fildl
jb
sbb
ljmp
je
sub
jae
cs
idivb
inc
jne
scas
repz
outsb
fimuls
inc
jge
je
pop
cmp
mov
and
mov
ss
decl
clc
or
lcall
lock
inc
loop
mov
pushf
inc
imul
lcall
sbb
out
add
clc
xchg
insl
test
stos
dec
popf
cwtl
scas
mov
fsubs
stos
in
rorl
dec
js
xorl
in
out
and
rcll
adc
pop
cld
push
sbb
call
inc
fdivs
test
sub
aaa
dec
loopne
pushf
jp
dec
xchg
jg
xor
sbb
decl
inc
sbb
stc
dec
rcrl
adc
dec
mov
fisubrl
scas
mov
call
push
dec
cmp
sub
adc
xor
stos
cltd
sub
loope
xor
jmp
std
std
call
or
aas
pushf
out
jno
out
gs
sbb
rorl
dec
mov
push
dec
lods
call
cmc
stc
lock
inc
loopne
cltd
dec
pop
test
daa
stc
push
repz
nop
aam
or
shll
call
pushf
or
jmp
enter
sbb
ja
jae
fisttpll
ficoms
call
fwait
es
xchg
jno
lods
xor
and
sbb
pop
stc
cwtl
lret
push
jno
ret
lcall
fnstsw
jecxz
call
inc
cli
cltd
insl
mov
fidivs
pop
pop
cmc
ljmp
fadds
mulb
bswap
xchg
adc
dec
dec
or
pusha
mov
jbe
xchg
jae
xor
xchg
scas
sbb
jmp
ja
test
jg
jmp
out
mov
inc
cmp
push
add
jmp
adc
mov
icebp
mov
xchg
imul
repz
movsb
jnp
rclb
std
jae
fbstp
popf
sub
aad
ss
jns
jbe
pop
push
xchg
aas
nop
lea
push
or
inc
ret
xchg
jle
and
les
mov
mov
mov
adcl
rolb
xchg
mov
in
fwait
pushf
scas
adc
int3
jmp
das
outsb
mov
fidivs
push
cmp
je
xor
lcall
mov
nop
ljmp
insl
nop
mov
push
cmc
mov
outsl
les
sbb
mov
in
incl
nop
loopne
inc
lods
lcall
xlat
add
jno
sti
dec
pushf
aam
pop
out
push
xchg
repz
leave
mov
or
push
jmp
jge
adc
mov
orb
ss
repnz
faddl
ljmp
lret
jb
fisttps
and
add
jp
shlb
mov
jns
js
in
repnz
out
call
pop
loopne
mov
jp
outsl
jae
test
fisttps
arpl
lea
movsb
add
div
jg
lds
repnz
xchg
sub
rcrl
sub
mov
decl
push
add
push
cmpsl
mov
lea
in
cmpsb
dec
mov
faddl
fstl
push
cmp
or
mov
movsb
clc
les
or
lods
dec
xchg
or
decl
jns
ds
shlb
pop
or
dec
out
cs
dec
lods
pop
cs
int3
in
call
mov
xchg
xchg
enter
cmp
inc
nop
push
std
loop
aaa
shrb
call
cli
dec
in
mov
mov
clc
and
shl
adc
imul
pop
pusha
mov
inc
mov
xchg
gs
std
decl
dec
mov
jns
xlat
daa
inc
dec
ja
pop
aad
movsl
mov
push
cltd
and
mov
movsl
pop
dec
ret
adc
cmpsb
adc
mov
cs
fstl
stos
xchg
mov
mov
shrb
daa
xchg
cmp
idivl
loope
xor
loopne
incl
inc
push
subl
mov
add
outsl
and
out
outsb
sub
or
inc
jne
cmp
mov
out
test
leave
fdivs
mov
jg
call
scas
in
rolb
iret
push
clc
mov
fisubs
cmp
test
mov
xchg
cltd
push
test
or
dec
mov
push
out
sarl
fwait
aad
stc
sbbl
jne
lods
or
in
stc
xchg
push
dec
sbb
push
test
stos
addl
pushl
and
std
dec
cltd
and
cmpb
ja
xchg
mov
mov
pop
jb
cmp
push
xchg
jno
rorb
mov
ja
scas
lret
or
jmp
lcall
lock
push
jmp
adc
lods
add
sbb
xor
xor
into
sub
out
sbb
rcrl
push
mov
dec
jae
dec
push
push
addb
adc
fwait
push
lret
mov
and
pushf
sub
mov
ja
test
dec
stc
xchg
rolb
cmp
xor
das
push
shl
jb
movsb
xor
mov
out
call
cs
movb
insl
push
adc
fdivrs
lahf
int3
push
aaa
mov
cwtl
sub
call
mov
inc
pop
dec
xchg
pop
inc
mov
clc
fnstcw
xor
hlt
sti
adc
xor
pop
lea
pop
out
mov
jge
call
shlb
jno
xchg
adc
lcall
loope
imul
cmp
ss
cmpsb
xchg
push
push
test
pop
sub
mov
sub
cli
movsb
gs
pushl
enter
jmp
push
les
loop
cmp
sti
dec
ss
jno
sti
sbb
test
cmp
into
mov
inc
inc
or
dec
cmp
insl
cmp
in
stos
add
decl
add
cmp
arpl
mov
xor
xor
fstps
arpl
fmull
out
mov
push
int
pop
sub
hlt
cmp
lea
adc
or
out
notl
bound
adc
mov
nop
call
fidivrl
xor
inc
mov
sar
mov
test
rol
cmp
dec
xchg
stos
les
xchg
add
add
fimull
jmp
xor
aam
add
stc
adc
pop
hlt
daa
hlt
lods
mov
jl
adc
add
incl
mov
mov
xor
add
mov
sub
pop
ljmp
call
loopne
push
xor
sbb
repz
mov
push
out
mov
pop
jmp
popa
push
add
in
xor
dec
stos
je
fsubrl
clc
orb
test
jmp
cld
or
add
dec
push
into
movq
mov
pop
ja
cli
decl
out
jl
scas
sub
orb
out
movsl
in
and
xchg
ljmp
mov
inc
mov
adc
ret
pusha
xor
lds
hlt
jl
inc
sbb
sar
clc
stos
cmp
out
and
inc
jecxz
sbb
pop
out
jg
repz
push
xchg
push
jo
call
cld
test
jecxz
jp
pop
out
xchg
ja
sbb
pushf
inc
out
ljmp
jl
inc
dec
lea
loope
xchg
fsub
or
jmp
dec
test
jp
fwait
mov
mov
popa
fcoml
pop
sbb
cltd
sti
repnz
jg
mov
ret
add
xchg
out
mov
mov
ds
adcl
mov
stc
push
push
movsb
addl
push
add
ja
call
std
mov
cmpsl
js
imul
sti
iret
jb
adc
xchg
and
decl
movsl
leave
insl
cld
mov
add
mov
jb
ljmp
mov
push
xor
mov
in
rorl
push
cld
lret
dec
pusha
lods
lock
incl
shl
das
pop
adc
test
cmp
test
ljmp
scas
test
mov
or
sbb
cli
pop
mov
out
lret
mov
cmp
hlt
jne
and
fwait
or
scas
xchg
fisttpl
cld
loop
fcomip
call
bound
jg
test
adc
mov
xchg
dec
jg
repz
adc
call
cmpsl
and
mov
sbb
xlat
sub
push
sub
sub
jg
adc
dec
add
cmpsl
lahf
arpl
test
dec
mov
cmp
es
imul
je
sub
cmpsb
cmc
jmp
stos
les
xor
dec
adc
or
push
test
mov
decl
dec
or
insl
sbb
jns
fdiv
les
push
sbb
fcomip
add
jl
add
dec
test
decl
test
out
ret
mov
repz
sub
in
xchg
clc
jg
rclb
mov
imul
loop
sub
decl
push
mov
fs
in
push
or
lods
jecxz
call
pop
test
inc
adc
pop
or
dec
jmp
sub
popa
mov
xor
cli
jmp
jae
dec
mov
fldt
add
flds
xchg
movsl
mov
xor
jle
jae
out
test
jg
pop
push
sub
loope
xchg
js
lods
mov
clc
nop
sbb
or
xchg
imul
sahf
in
aaa
mov
or
jae
or
lret
in
inc
sub
mov
jmp
jl
lcall
inc
pop
call
pop
pop
dec
int
jbe
and
cmpsb
subl
incl
pop
inc
fwait
lret
ljmp
sbb
ds
lcall
ljmp
mov
sti
fidivrl
xor
add
dec
ja
scas
cmc
aad
jae
push
and
jecxz
jmp
scas
ljmp
loope
adc
aad
fcmovnbe
pop
fnstcw
mov
hlt
push
popa
xchg
fistl
jmp
sbb
popa
addr16
pop
rorl
fstl
push
fildll
dec
push
gs
gs
pop
leave
shll
stc
xor
insb
in
stos
in
sbb
cli
dec
add
pop
inc
test
loope
jns,pt
adc
mov
cli
lret
dec
test
aad
or
daa
test
fimull
jmp
or
aam
pushf
inc
imul
decb
fs
mov
mov
ja
mov
in
sub
stos
aam
lds
push
jl
add
decl
or
mov
daa
imul
ljmp
movsl
mov
xlat
add
pushl
add
popf
mov
adc
js
outsl
scas
push
or
insl
jns
add
mov
ljmp
stos
and
flds
mov
xchg
lret
jmp
adc
pushl
pop
int3
out
fnstcw
test
mov
mov
inc
mov
add
inc
stos
add
jmp
cmp
jae
jge
inc
cmpsb
fucomip
mov
sbb
ret
xor
adc
push
mov
jmp
xchg
sub
scas
pop
jae
adc
loope
push
push
fcoml
and
int
jmp
cmp
je
ret
test
or
pop
cld
ficomps
addr16
adc
and
jmp
sti
sub
lcall
scas
add
notl
cmp
mov
dec
push
jle
xchg
lcall
mov
dec
sbb
loope
aas
mov
sbb
cs
stc
pop
adc
and
xchg
and
xor
jle
and
call
sbb
mov
addl
and
lret
fwait
gs
xchg
fisubrs
aas
mov
xchg
mov
inc
jle,pn
dec
aas
insb
add
mov
ljmp
je
pop
jbe
es
jge
sub
pop
pop
pop
pop
mov
add
fsts
push
pop
icebp
jns
xchg
and
adc
xchg
adcb
and
jnp
ret
incl
cmc
xchg
cli
ficoml
movsb
adcb
sub
repz
fxch
bound
mov
or
ja
aam
cmp
xor
lock
and
pop
cltd
in
push
xor
pushl
repnz
mov
outsb
or
icebp
stc
inc
shl
fisubrs
xchg
idivl
dec
mov
push
lcall
outsl
inc
fdivrs
insl
test
out
inc
cmp
daa
add
push
pop
dec
lret
into
addr16
pushf
icebp
call
mov
dec
jl
addr16
jl
mov
in
mov
or
loope
call
shll
xchg
lods
mov
std
add
inc
in
lcall
mov
ljmp
push
inc
shrb
sub
gs
iret
and
mov
jg
ffreep
push
scas
xchg
stos
sahf
mov
sbb
repz
and
pushl
in
pop
repz
leave
or
repz
fisubrs
xchg
nop
cltd
lds
dec
dec
mov
ljmp
inc
jns
das
mov
cmp
stos
mov
xchg
shrb
in
incl
data16
cs
pop
lods
aas
jp
stos
sbb
movsl
addb
jmp
popa
ds
jnp
es
cmp
pop
std
mov
pusha
and
in
push
jg
dec
icebp
popa
in
pop
nop
xchg
mov
pop
pop
cmc
push
cmpsb
push
pop
sbbl
cmp
mov
gs
jo
inc
mov
lds
mov
repnz
loopne
incl
dec
jo
testl
inc
enter
or
in
loop
mov
fwait
mov
sbb
push
stc
pop
fsubrl
mov
sahf
jmp
outsl
and
testb
ret
mov
dec
cli
frstor
in
push
inc
push
mov
mov
jg
movsl
or
jecxz
xor
lods
jle
mov
je
xchg
sub
push
mov
mov
add
sbb
repz
nop
dec
cmp
mov
xchg
xchg
jecxz
mov
repz
push
movsb
sti
add
popa
lea
in
clc
lcall
mov
cmpb
das
insl
jbe
test
sub
pop
push
xchg
lcall
inc
pop
xchg
loope
jae
je
xchg
int3
xchg
imul
lret
xchg
xchg
dec
rcr
in
or
pushl
sbb
pop
jg
mov
out
inc
outsb
std
pusha
jl
push
insb
mov
lcall
mov
movsb
sbb
and
iret
loop
mov
jo
jmp
add
lret
push
add
push
push
ss
adc
sbb
mov
popf
pop
incl
loopne
stos
and
cwtl
mov
repnz
cwtl
js
outsb
orl
cmp
decl
mov
or
idivb
adc
gs
and
mov
or
add
test
in
call
repnz
adc
adc
jmp
add
pop
jmp
lods
sbb
cmp
repz
cmp
stos
cmp
pop
add
or
mov
daa
dec
ficompl
icebp
out
cmp
es
loop
sbb
in
imul
into
sbb
sbb
hlt
jmp
push
mov
aaa
inc
push
jnp
in
rep
shll
cmp
add
and
lcall
mov
mov
nop
in
loope
jmp
add
lods
bound
std
jg
adc
call
adcb
lcall
xor
call
mov
hlt
aaa
xor
adc
and
test
push
dec
pusha
mov
jmp
fdivrl
jae
daa
jnp
mov
sub
movsl
lock
xchg
test
pop
and
add
ljmp
push
mov
cmp
outsb
inc
subl
call
les
movsl
and
data16
ret
cmp
fwait
cmp
rorb
push
jns
xchg
test
jns
movl
inc
out
mov
or
lock
push
xchg
mov
xor
cmp
cmp
outsb
int3
push
inc
cmc
push
es
mov
rolb
mov
decl
push
punpcklbw
sub
xchg
ljmp
mov
fcmovu
cmp
repz
sbb
xchg
push
pop
fildl
jmp
bound
les
pop
sbb
addb
stos
cmp
or
push
push
loop
test
mov
dec
shlb
into
adc
out
notl
fwait
push
add
cmp
into
mov
adc
and
test
test
xor
nop
mov
lcall
sti
out
jns
inc
in
ret
movsl
push
loope
out
jns
mov
add
sub
out
decl
mov
dec
jno
inc
and
aas
push
inc
lds
or
bnd
xlat
mov
decl
cmp
push
lds
insb
jb
and
inc
in
sub
popf
hlt
sti
cs
int3
pop
xchg
jo
call
call
test
ja
orb
imul
dec
stc
cmc
dec
push
dec
pop
xchg
iret
int3
decl
mov
cwtl
mov
inc
bound
push
rorl
icebp
mov
sbb
lcall
and
movsb
dec
and
lods
jae
sub
and
push
aam
cli
sahf
dec
inc
decl
insb
test
mov
lock
les
test
jge
stos
notl
decl
mov
xor
movsb
and
fbld
xor
out
jmp
outsl
cmc
jp
jg
sub
call
int
cwtl
add
sub
dec
push
push
test
mov
imul
iret
fimuls
scas
fists
outsb
lret
jno
pusha
push
xor
mov
sbb
or
inc
sbb
cmp
fdivrl
inc
and
pushl
mov
jo
enter
sbb
stos
ret
xor
and
adc
mov
out
sub
pop
stos
xor
bound
xchg
sbb
lock
xlat
subb
inc
in
mov
ret
xchg
or
cmpsb
add
xor
and
ljmp
lock
sub
cmp
push
ss
rclb
icebp
cmpsl
inc
decl
lock
scas
jbe
inc
scas
sub
dec
fnsave
in
nop
mov
jl
dec
imul
bound
mov
inc
stos
sub
xchg
sbb
mov
sbb
push
xor
inc
sub
jecxz
adc
adcb
mov
aaa
fcomip
call
loopne
ja
dec
push
dec
jns
xchg
mov
stos
inc
adc
icebp
lods
call
push
cmpb
stc
ss
out
cmp
xchg
mov
jl
ret
or
dec
cmp
push
push
popa
insl
mov
repnz
xor
clc
inc
jge
sbb
fdivr
out
je
mov
mov
fistpll
dec
idivb
dec
or
pop
inc
aam
decl
fisttpll
xor
push
out
and
sarb
push
std
popa
inc
cmp
gs
fcos
jmp
imul
push
outsb
push
popa
sub
jg
mov
roll
js
xor
scas
enter
mov
mov
cmp
and
mov
decl
call
push
xorl
in
jne
repz
out
or
scas
pusha
shlb
mov
jl
or
mov
push
in
jmp
xchg
mov
cmp
lcall
pop
pop
inc
adc
push
xor
add
xchg
fimuls
mov
pop
cmp
std
push
adc
cmpsb
jno
jbe
jns
dec
inc
lret
dec
sbb
loop
add
lock
js
cmpsb
pushl
cltd
dec
addl
data16
mov
lea
dec
scas
hlt
scas
imul
lcall
lcall
xchg
xchg
and
gs
xor
nop
popf
call
mov
lcall
mov
stc
xlat
jno
test
or
and
add
shlb
mov
push
mov
jp
pushf
adc
pop
sbb
inc
dec
fs
aam
add
decl
add
inc
lock
stc
stos
dec
lcall
push
jo
cmp
xor
and
mov
jg
add
add
lods
xchg
mov
lods
out
lahf
cwtl
sbb
jmp
dec
ja
push
mov
dec
scas
sbb
mov
in
push
js
insb
pop
cmp
incl
fimull
outsb
add
loope
sub
mov
clc
mov
pop
leave
js
fldcw
incl
lods
pop
mov
lds
pop
pushf
and
and
jl
jmp
pushf
mov
xor
les
pushf
push
jno
enter
out
mov
ret
rclb
lahf
xchg
inc
repnz
incl
mov
push
mov
call
mov
lock
stc
test
int3
movsl
test
adc
xlat
lret
dec
push
mov
pop
loope
repz
fs
ljmp
inc
jl
repz
mov
inc
insb
add
xchg
jmp
in
lods
pushf
jne
sbb
outsb
fwait
push
push
jns
ss
insb
repz
jg
dec
dec
and
repnz
fs
daa
mov
gs
lods
shl
xchg
mov
mov
scas
outsb
int3
out
je
xchg
xchg
mov
lds
add
mov
mov
cmpsl
push
dec
dec
or
out
dec
decl
cld
pushf
bound
push
or
out
test
mov
cmp
inc
fildl
clc
pushl
jl
cmc
ja
scas
scas
dec
cs
sub
pop
lock
incl
fwait
push
and
mov
xor
aas
aas
xchg
xor
fdivrp
pushl
mov
aas
cmp
lds
cmp
add
insb
and
dec
ss
fsub
rcrl
inc
sbb
nop
ljmp
cmp
into
sahf
pop
subl
sbb
shlb
and
icebp
ljmp
dec
cltd
daa
test
imul
jmp
add
sbb
idiv
decl
ss
jae
sbb
divl
sbb
mull
and
out
jge
pop
hlt
call
and
push
lods
xor
jmp
movsb
roll
jmp
mov
cli
jne
mov
and
mov
ljmp
push
add
mov
into
mov
mov
ss
pushf
out
fisttpll
stos
mov
addb
fsubs
and
lfs
call
dec
adc
add
jne
je
fcompl
lods
aaa
rorb
jmp
and
ja
adc
pop
sti
jle
out
mov
sbb
push
and
pop
test
jbe
mov
sbb
mov
cltd
insl
fcomip
psrlq
push
fdecstp
mov
pop
xor
pushl
aas
xchg
arpl
movsb
cld
jbe
lea
aas
and
xchg
push
mov
jno
or
loope
mov
and
es
lock
cmpsl
loopne
push
xchg
push
dec
popa
or
adc
mov
decl
repz
inc
jbe
mov
stc
lahf
clc
pusha
loope
ljmp
out
xor
sub
fsubrl
sbb
mov
ljmp
and
lods
repz
mov
fisubl
sarl
test
aam
imul
add
inc
out
inc
loope
xchg
je
stos
inc
repnz
push
xlat
scas
jne
movl
out
xlat
add
test
cmpsb
jbe
jg
fdiv
outsl
push
lds
shlb
add
hlt
out
stos
ja
incl
lret
sbb
pop
sbb
cltd
imull
stos
ret
jg
push
sub
jbe
pop
ljmp
and
pop
lcall
jg
ds
in
pop
jbe
arpl
scas
pop
shll
lock
cmp
stos
ret
imul
lcall
rol
mov
inc
in
jo
in
sti
shll
test
jmp
call
call
pop
push
push
mov
and
cmpb
test
lcall
stc
inc
in
cld
jno
push
repz
jl
or
insl
mov
cmp
je
sub
pushl
pop
icebp
rorl
lcall
mov
mov
incl
lds
test
pop
pop
xor
int
jle
clc
fmull
test
cmp
push
loop
js
cmpsb
lock
incl
mov
aas
in
loope
adc
into
or
sbb
mov
iret
mov
ss
in
ss
pop
jbe
jbe
test
push
xchg
mov
cld
mov
push
mov
sub
push
inc
call
sub
cmp
incl
xchg
sbb
xchg
mov
scas
pop
mov
mov
and
orl
in
decl
lock
jle
mov
cmp
jecxz
das
inc
gs
insb
jecxz
add
call
nop
ret
ljmp
or
or
fsubl
xchg
dec
cmpsl
cld
xchg
inc
pusha
faddl
mov
clc
jg
cmp
or
rol
iret
pop
inc
pop
push
loope
sub
data16
mov
in
dec
mov
sbb
mov
adc
es
xlat
je
sbb
cld
pop
or
lcall
lock
jp
xor
test
sbb
andb
movsl
shlb
clc
in
call
push
nop
xchg
or
xor
adc
jno
pop
pop
pop
dec
mov
aad
aas
jb
lret
sub
fs
scas
and
sahf
or
int
ljmp
or
push
fdivl
lds
rol
pop
std
sti
jl
rorl
shrl
jno
push
ljmp
cmp
aam
es
dec
lret
stos
out
adc
xor
fwait
ljmp
dec
test
dec
dec
or
xor
push
xchg
pop
xor
mov
jg
pop
mov
mov
mul
pop
push
inc
adc
dec
ret
xchg
outsl
pushl
std
js
push
loopne
mov
or
pop
and
pop
hlt
or
pushl
and
inc
je
mov
add
test
adc
push
jecxz
mov
lcall
into
inc
jbe
nop
lret
leave
imul
mov
xchg
push
cmp
je
lret
or
movups
hlt
decl
dec
and
push
mov
push
lods
inc
mov
ds
aaa
cmpsl
les
lcall
xchg
sbb
and
les
cltd
icebp
mov
sub
out
or
pop
jl
mov
outsb
pop
stos
and
sar
pushl
mov
test
mov
xchg
aas
pop
fstp
sub
jnp
and
test
push
xor
sub
ljmp
or
mov
out
rorl
enter
into
inc
adc
test
lcall
mov
cmc
sub
mov
loope
cs
push
fdivp
scas
push
lcall
cmpl
jecxz
mov
pop
dec
shll
aad
mov
push
or
rorb
and
in
ret
shrb
addr16
rcrb
dec
inc
test
in
rcrb
jno
add
fimull
jecxz
pop
repz
inc
incl
add
negl
leave
add
mov
sbb
popa
out
cli
enter
mov
enter
mov
incl
shlb
push
cmp
imul
cmp
xchg
js
ja
add
add
movsb
xlat
jno
loope
les
xchg
push
hlt
push
js
loope
js
cmc
mov
cltd
ficomps
testb
jmp
jno
inc
mov
jmp
and
sub
pushf
cmp
icebp
js
xchg
inc
and
or
mov
push
mov
bound
ss
and
ds
imul
bound
lea
fsubp
sbb
jg
movsb
cli
and
or
xchg
jne
pop
and
outsb
inc
adc
je
pushl
les
mov
mov
add
daa
lret
mov
xor
out
lods
clc
sti
les
clc
push
push
pusha
movsl
sbb
scas
loop
jmp
add
inc
and
dec
mov
mov
jg
xchg
shl
inc
or
fistpll
mov
movsb
xor
push
mov
jb
mov
dec
js
or
decl
jg
pop
imul
gs
jne
inc
xchg
ljmp
mov
imul
mov
xlat
insb
inc
push
lret
cmpsl
jl
push
or
mov
xor
es
call
mov
mov
pusha
pushf
inc
sub
pop
cmp
xor
lods
das
jl
mov
decl
push
cli
cmp
xchg
stc
inc
in
dec
out
push
cmpsb
add
fstl
fldcw
mov
sub
add
pushl
in
in
jae
adc
addl
sbb
jmp
dec
dec
aas
mov
loop
pop
cmc
add
arpl
or
mov
lock
inc
sbb
adc
xor
push
pushf
lock
mov
inc
pop
lods
ss
mov
lods
jge
mov
sbb
jl
mov
push
xchg
mov
jo
xchg
or
xor
jg
and
jmp
icebp
fidivrl
enter
cmc
hlt
fcmovnb
int
int
adc
cmpsb
mov
fildll
or
mov
or
rcrb
add
xor
sbb
test
add
lcall
fdivrs
xchg
mov
pop
maskmovq
notl
push
loop
inc
clc
inc
xchg
or
push
fisubs
mov
lods
inc
fnstsw
clc
lods
hlt
add
orb
cwtl
stc
cs
dec
sub
decl
orb
out
jge
data16
out
push
enter
mov
add
daa
cli
ljmp
pop
fisubrs
xchg
outsb
or
mov
inc
lret
mov
adc
les
cwtl
ljmp
mov
mov
xchg
je
push
xor
rcrl
dec
incl
sbb
xchg
jmp
loopne
push
and
in
into
idiv
lahf
mov
sar
xor
inc
xlat
dec
mov
nop
jg
jge
test
xor
jno
jno
clc
cwtl
stos
lret
inc
pushf
cwtl
ret
inc
movsl
insl
inc
push
cs
iret
dec
daa
out
dec
mov
call
cmp
cmp
and
sub
inc
adc
mov
icebp
inc
sbb
mov
lret
je
scas
mov
add
mov
sbb
dec
movsl
adc
popf
mov
jecxz
test
pusha
aaa
sbbl
call
in
add
int
mov
insb
out
adc
jbe
mov
fisubl
scas
fs
fbstp
sub
frstor
lea
pushf
loopne
cmovbe
xchg
push
ljmp
incl
jnp
jb
mov
cmp
ja
insl
leave
push
test
dec
and
jg
push
and
xchg
jmp
fwait
stc
xor
push
adc
jns
add
stos
es
fs
sar
jo
xchg
mov
cwtl
add
outsb
jne
cltd
ds
scas
dec
dec
push
inc
std
mov
jecxz
lahf
jb
jbe
shrb
addl
push
or
test
call
lcall
sub
in
arpl
out
mov
daa
int
lcall
inc
jg
cmp
push
push
dec
mov
jb
xchg
cltd
dec
jge
outsb
lea
js
pushl
inc
add
xor
adc
sahf
push
or
fwait
jno
sbb
or
dec
fucomip
sbb
pop
mov
fistpl
and
enter
jo
ljmp
and
cmpb
notb
lods
jae
ret
xor
repnz
aas
addl
jecxz
adc
xchg
xchg
pcmpeqd
mov
xchg
cltd
out
rcll
decl
push
pop
movsl
iret
dec
into
scas
int3
sahf
jl
push
jo
test
sbb
sub
call
xor
mov
dec
repnz
imul
push
jecxz
cmp
jns
pop
decl
dec
insb
pop
xchg
jo
aas
xor
movsb
cmp
outsb
lcall
lcall
dec
and
cmp
inc
call
cs
fwait
mov
mov
or
jg
dec
cmp
sub
sub
push
shll
xor
inc
cli
loope
pop
add
popa
lds
and
lcall
push
mov
testl
lret
js
inc
xchg
stos
cmp
fimuls
inc
sbb
cmp
rorb
iret
add
idivl
jmp
xor
push
insl
cltd
pop
leave
aad
imul
subl
xchg
mov
jo
push
mov
push
xor
roll
push
js
ja
xor
ss
xor
std
pushl
popf
xlat
mov
jp
xchg
sub
fistps
rcrl
and
push
pop
mov
sbb
psrad
and
subb
xor
hlt
call
mov
fnsave
pop
fbld
int3
mov
mov
cwtl
notb
movsl
jle
push
dec
repnz
insl
pushl
sub
cmp
js
les
mov
roll
dec
insb
pop
into
cld
call
pop
jecxz
loopne
ljmp
and
stc
xor
pusha
aad
jno
adc
ja
mov
jmp
jno
inc
movsl
push
add
push
ret
dec
cmp
lds
idiv
sbb
out
lahf
in
stos
xorl
fdivr
hlt
scas
fcoms
in
push
lods
cli
lcall
mov
mov
xor
pop
mov
jg
inc
cli
mov
inc
and
fs
inc
inc
dec
inc
adc
xchg
insl
rcrb
addl
sub
pushf
in
aad
aas
in
scas
in
pop
ss
icebp
mov
add
xchg
mov
pop
jle
lcall
mov
nop
adc
or
loopne
outsb
adc
xchg
or
jg
mov
ljmp
inc
data16
dec
cmp
xlat
sub
inc
mov
inc
xchg
mov
scas
repz
mov
cmp
pop
inc
in
dec
and
xor
mov
dec
add
fucomp
popf
sbb
push
insb
call
enter
xlat
mov
inc
mov
imul
jne
iret
or
pop
inc
das
inc
imul
stos
aaa
cmp
jnp
addr16
ljmp
adc
mov
push
popf
push
lods
fmull
call
push
and
xor
mov
mov
mov
arpl
mov
aaa
cwtl
aam
fldcw
inc
in
ljmp
in
jns
nop
add
push
in
loop
inc
xchg
rcr
jnp
fisubl
jb
jb
add
incl
inc
mov
dec
int3
mov
mov
inc
pop
inc
cs
insb
cld
mov
pop
fistps
xchg
sbbb
scas
cs
sti
pop
mov
add
push
or
adc
incl
push
lret
stc
negb
jb
out
lcall
nop
push
xor
popl
out
inc
add
push
addr16
sub
or
outsb
das
or
repz
lret
adc
jnp
int
mov
add
add
decl
mov
and
push
mov
mov
mov
dec
fcoms
cld
ljmp
inc
icebp
mov
mov
sti
out
push
lods
mov
push
fcomps
dec
push
aas
sbb
fisttpl
pop
imull
mov
sub
stos
outsl
adc
incl
movsb
jbe
movsb
dec
mov
lcall
xchg
pop
mov
addr16
mov
lods
clc
ljmp
leave
pop
sar
fucomi
adc
inc
xchg
xchg
push
in
testl
or
adc
mov
int
jg
mov
push
ja
fs
inc
fwait
mov
inc
mov
lcall
cmp
fwait
int
in
out
fidivrs
aad
and
mov
push
sbb
leave
push
add
mov
pop
mov
mov
js
mov
aam
aaa
int3
mov
mov
fidivl
pushl
mov
sbb
mov
outsb
mov
test
lock
incl
mov
xchg
sarl
test
mov
std
sbb
lret
inc
repz
sbb
fistps
inc
jo
lcall
testb
in
js
inc
xor
incl
sbb
rcr
adc
cld
and
pop
mov
jecxz
xorb
incl
pop
shll
jnp
dec
mov
lea
and
call
out
mov
out
mov
lret
pushf
dec
sahf
sub
cmp
fcos
decl
aam
sub
dec
jge
inc
adc
adc
arpl
ficoms
rclw
adc
dec
mov
pushl
daa
js
sub
dec
and
push
cmp
clc
cmpsl
iret
cmpsb
insl
out
out
stos
add
mov
dec
dec
and
sbb
leave
dec
outsl
scas
pushl
mov
mov
sbb
jle
pop
pop
aas
repz
incl
jecxz
xchg
bound
pop
xchg
test
pop
cltd
push
dec
xor
pop
cld
mov
decl
pop
inc
mov
cmp
aad
ss
dec
or
push
and
jns
lcall
incl
mov
stos
imul
bound
test
adc
pop
push
je
mov
adc
lcall
cmpsl
mov
iret
xchg
lret
mov
xchg
shll
xor
imul
test
xchg
inc
add
add
fadds
inc
sbbb
mov
call
fwait
scas
aaa
inc
stos
popa
sbbb
jecxz
xor
cwtl
mov
fs
std
outsb
pop
insl
idiv
fcomip
sbb
cmpb
mov
nop
scas
jl
leave
loopne
sbb
cli
cmp
push
cmp
popl
xlat
sbb
int
test
cmc
int
lahf
lcall
lret
or
and
cs
icebp
adc
imul
adc
jnp
add
sub
mov
js
inc
scas
js
aaa
push
and
decl
out
jp
sti
inc
xor
fidivl
push
call
jecxz
mov
pushl
adc
cmpsb
push
push
popf
add
jmp
shrl
sub
jne
cmc
jmp
mov
in
sub
pop
pop
mov
mov
mov
add
stos
pushf
aam
fidivs
push
scas
sub
xor
push
lock
cltd
dec
arpl
inc
std
cmovnp
les
mov
ds
fistpl
pushl
enter
mov
add
inc
test
nop
jae
aad
or
sahf
jle
stc
fmuls
cld
fbld
xchg
push
imul
pushl
test
popa
and
lahf
cltd
mov
jp
repz
cs
xor
adc
pop
fadds
mov
es
icebp
cmp
push
std
rclb
jbe
pusha
cmpsl
adc
pusha
push
flds
repz
push
stos
pushl
and
stos
scas
and
pop
insl
sbb
mov
sbb
ljmp
or
mov
aam
sub
iret
test
xchg
jg
jmp
sub
sbb
pop
xchg
lret
scas
out
pushf
push
rclb
test
xchg
test
or
scas
lock
cmp
lret
pop
xchg
push
mov
mov
imul
pop
xor
and
mov
xchg
mov
inc
sbb
or
push
adc
adc
imul
in
pop
mov
pushl
xchg
jo
popa
jnp
fildll
ret
notl
leave
cmp
aaa
incl
adc
xchg
cli
loopne
gs
cmp
cmovne
pop
mov
call
clc
sub
sbb
adcb
xlat
aas
push
mov
add
add
pop
inc
dec
adc
into
sub
mov
mov
jno
clc
mov
jbe
leave
cmp
or
decl
cmp
cs
mov
data16
loope
push
or
xor
imul
pushl
std
and
cmpsb
adc
sbb
clc
pop
mov
inc
sub
sbb
push
push
push
mov
clc
roll
call
loopne
out
je
es
push
daa
or
and
in
sbb
icebp
adc
hlt
call
mov
les
popf
sbb
xor
repnz
cli
ja
dec
insl
scas
push
jmp
filds
jns
repz
andb
jne
dec
or
sub
or
mov
ljmp
push
add
push
sahf
icebp
push
push
mov
jbe
stc
cmc
sub
sub
cmp
in
ret
in
popf
pop
shl
shl
ljmp
sti
scas
movsl
cmp
dec
lcall
sub
test
pushl
xchg
cmp
in
xor
mov
outsb
sahf
mov
push
pop
cmp
cli
test
push
pop
inc
cmp
adc
cmp
out
pop
pop
leave
inc
in
aas
outsb
shll
fistps
call
fwait
xor
fbstp
or
sar
mov
jg
mov
and
jp
loop
aas
in
jecxz
popf
fcomps
adc
mov
icebp
in
adc
mov
popa
jle
dec
push
push
push
test
aam
mov
into
push
pop
icebp
mov
ljmp
ss
scas
push
push
ljmp
mov
out
jle
xchg
cmpsb
mov
ljmp
in
scas
rolb
pop
and
loopne
push
rclb
pop
inc
jg
cmp
loopne
pusha
or
inc
pmaxsw
add
repnz
xchg
or
fildl
orb
add
jg
jmp
cwtl
cmc
aad
fdivrl
out
or
add
je
incl
and
xchg
sbb
inc
or
add
rclb
icebp
pop
aad
push
sub
cmp
inc
pop
jecxz
mov
out
in
cmp
cmp
mov
imul
imul
jnp
dec
in
fucomip
add
mov
fwait
es
call
lcall
movsl
jne
mov
dec
iret
cs
cmpsl
fsubrp
fdecstp
cmpsl
test
cli
es
and
in
int3
iret
jecxz
xlat
call
fdivr
and
ret
jae
cmp
add
lret
gs
outsb
fistps
mov
nop
sbb
sbb
out
cltd
sahf
sti
incl
jbe
push
out
jbe
adcb
and
xchg
pop
lods
clc
idivl
dec
jb
cmp
inc
nop
jp
arpl
push
ret
jg
ljmp
mov
mov
cli
push
dec
imulb
xor
xor
mov
adc
mov
js
pop
pop
arpl
push
data16
jb
scas
rorb
jg
cmp
inc
dec
jmp
incl
xor
sysenter
xlat
je
stos
scas
fs
pmulhuw
xchg
push
aad
jnp
mov
cmp
mov
frstor
cmc
mov
loop
nop
jbe
xchg
lahf
jmp
fwait
pop
or
popf
aam
xlat
stos
and
jo
or
repz
decl
int3
rorl
sub
ljmp
push
and
jnp
adc
test
pusha
dec
adc
sti
pop
fcomip
fbld
lret
insl
shrl
in
and
jle
xor
xchg
lcall
pop
sarb
sbb
mov
sbb
jmp
icebp
ljmp
repnz
test
mov
fsubr
jno
sbb
stos
shlb
cmp
and
lret
lret
or
aas
pushf
jno
aas
dec
cmp
dec
xlat
stos
pop
loopne
mov
xchg
test
mov
int3
push
dec
call
mov
jg
insb
andl
or
sbb
add
int3
dec
pop
or
adc
call
movsl
add
xor
movsb
push
jb
add
cli
rorl
dec
sbb
sbb
pushl
nop
cmpsl
inc
test
cwtl
adc
aaa
mov
outsl
mov
iret
clc
repnz
mov
jle
fcomip
cmp
push
aam
into
dec
sub
lret
jbe
lret
xlat
and
mov
decl
and
pop
xor
jae
out
push
lret
outsb
icebp
xchg
jmp
repz
sbb
incl
fisubl
xchg
fstpt
or
add
lods
push
pop
add
mov
lcall
adc
pop
dec
setp
cli
cld
sbbl
and
sbb
xlat
lcall
push
inc
mov
push
jle
repz
lahf
push
fisubs
jno
ljmp
ljmp
scas
je
jge
je
in
lcall
push
cltd
decb
sarl
mov
sub
inc
pushf
jmp
mov
inc
jle
ljmp
es
test
shll
lahf
rcrl
adc
in
sub
gs
cmc
dec
xchg
popa
inc
lret
sbb
rcrl
fidivl
ss
icebp
std
mov
inc
repnz
and
ret
test
setg
push
jns
xor
xchg
shll
in
imul
push
adc
rolb
std
jns
mov
dec
les
cvttps2pi
fcoms
cmp
pop
repnz
sar
xlat
int
sbb
std
pushl
decb
sub
call
xchg
sbb
xlat
inc
mov
push
cmpb
mov
or
pushf
dec
movsl
cmp
adc
decl
fwait
jb
test
sbb
js
inc
sub
jo
sbb
lods
movsb
sub
cmc
push
push
andl
shlb
cmp
cmp
or
ficoms
iret
xchg
sti
push
mov
push
into
sbb
mov
lods
aad
inc
mov
pop
or
add
mov
push
and
push
ja
lcall
xor
push
mov
lahf
ljmp
punpcklbw
mov
pushl
lret
jae
dec
cmc
mov
inc
flds
repz
lods
lock
add
clc
xchg
mov
xlat
inc
pop
cld
sbb
insl
test
test
push
fwait
popl
or
pushf
stc
fcoml
cld
mov
arpl
scas
pop
rclb
pop
jne
pushf
inc
push
sbb
test
adc
adc
fcomip
aam
adc
les
inc
mov
fs
daa
push
loop
popa
add
sti
faddl
mov
ljmp
adc
or
lret
mov
fbstp
leave
xor
mov
je
sbb
adc
and
jae
test
push
jmp
fnstsw
jmp
mov
fdiv
add
ja
testl
jg
fidivrl
mulb
mov
popf
not
lahf
hlt
cmp
outsl
cli
mov
mov
sbb
lahf
jnp
mov
pushf
ja
out
push
mov
adc
jnp
fcmovbe
movsb
sbb
out
nop
aas
imul
and
jbe
jmp
pop
jge
div
mov
xchg
adc
and
push
jmp
lret
pop
inc
lea
add
push
mov
sub
pop
and
mov
sti
inc
ljmp
imul
push
jbe
jg
mov
aad
orl
and
lds
xchg
inc
dec
sarb
sub
mov
xor
pop
mov
inc
loop
cld
sbb
add
and
call
dec
push
sbb
add
sub
jmp
hlt
pop
lret
sar
or
jns
pop
in
push
push
dec
xchg
ljmp
jb
cmpsb
push
ror
fstpl
lahf
mov
cmp
xor
lret
pop
imul
hlt
incl
push
add
and
cmpsl
lods
fcomps
je
pop
adc
fsubs
inc
decl
jbe
and
scas
sbb
rcl
cli
jp,pt
xchg
mov
incl
or
pushf
inc
jb
lahf
movsb
mov
lods
adc
and
mov
push
inc
ja
subb
jmp
lret
negl
mov
sbb
dec
inc
inc
ficoml
je
mov
emms
insl
xchg
jecxz
mov
cmp
std
or
ljmp
adc
xchg
test
jge
sub
jmp
mov
outsl
push
push
cmp
cmp
pushl
mov
fldl
pop
arpl
sbb
dec
pop
in
adc
push
in
xor
adc
loop
push
push
mov
pop
sub
adc
sti
sub
xor
call
sub
dec
or
pop
lods
inc
dec
inc
inc
out
test
dec
cltd
mov
idiv
inc
mov
decl
mov
or
lahf
xor
mov
sub
jmp
jg
push
jle
mov
ljmp
lret
shrb
sub
call
xlat
inc
sbb
add
adc
fistl
mov
cmpsb
inc
add
pusha
pop
xchg
fwait
jmp
ja
notb
adcb
in
inc
loopne
inc
ja
add
lds
xchg
cmc
xor
sbb
shlb
incl
fstps
xchg
push
sbb
stc
sub
mov
push
ja
incl
loop
xchg
lahf
mov
xchg
mov
push
outsl
push
insb
mov
jg
cmp
call
ss
xor
pop
lea
popf
jne
mov
in
add
mov
arpl
jg
decl
cmp
cli
insb
push
add
and
mov
or
fcomip
pusha
mov
insb
mov
bnd
pop
aam
or
pop
stos
leave
in
shlb
push
jno
icebp
mov
dec
add
sarb
daa
arpl
outsb
xor
adc
cltd
push
jmp
decl
stc
insb
sahf
call
or
adc
fnstsw
lcall
notb
xor
shrb
pushf
push
ds
stc
add
push
fldt
aam
mov
pop
ljmp
ficompl
movsb
add
movsb
mov
cli
push
icebp
dec
popf
add
in
mov
push
in
leave
sbb
jmp
and
cltd
jmp
mov
mov
cmp
lcall
lea
loopne
filds
lds
adc
xchg
stos
cmp
dec
outsl
clc
stos
pop
les
scas
xchg
arpl
mov
stos
jp
dec
jg
mov
shl
xchg
outsb
pop
or
idivb
aaa
stos
imul
dec
xor
xor
xchg
jbe
leave
arpl
sbb
pop
push
test
and
mov
insb
jbe
inc
leave
mov
push
jae
scas
xchg
xorb
mov
xor
add
xchg
add
cmp
ss
mov
adc
cmp
or
shll
aas
gs
movsb
add
mov
mov
sarb
pushl
xchg
arpl
xor
stos
or
fsub
mov
jne
dec
movsb
inc
cmpsb
xchg
mov
adc
jo
ds
mov
icebp
jecxz
insb
popf
fistpll
sbb
mov
in
mov
push
add
and
or
int
jmp
mov
sub
and
cmpsb
or
adc
loopne
mov
fsts
add
incl
scas
mov
pop
jnp
aas
mov
pop
stos
pop
jns
outsb
mov
and
inc
adc
lahf
push
mov
sub
jg
mov
test
jns
sbb
dec
xchg
dec
fdivrl
pusha
cld
rcl
add
ds
movsb
cmp
fldt
cmp
dec
inc
sbbb
jbe
shl
jb
adc
xor
outsb
loop
cmp
cmovns
dec
cmp
inc
rcr
into
cmc
adc
xor
stos
es
mov
dec
pusha
test
std
fsts
xchg
pop
call
push
in
xchg
dec
call
add
pop
ret
jns
pusha
out
mov
in
add
inc
pop
test
sarb
push
cmc
xchg
sbb
adcl
jge
mov
insb
sub
push
popa
dec
iret
add
cltd
and
std
and
push
insl
pop
nop
pop
out
fbstp
pop
push
gs
fcos
mov
repnz
js
mov
jecxz
jecxz
ljmp
cld
call
xchg
cwtl
addb
aam
sbb
lahf
xorl
stos
push
mov
or
cmpsl
xor
je
jns
xlat
cmc
scas
loop
decl
xor
mov
xchg
add
sbb
add
cmp
sti
push
and
aam
fs
arpl
inc
lea
hlt
jmp
mov
arpl
pop
in
adcb
jno
sbb
scas
xchg
mov
xchg
outsl
xchg
mov
in
aas
incl
data16
mov
je
leave
or
es
jne
add
cmp
add
jl
js
xchg
std
mov
fsub
inc
pop
adc
push
cwtl
mov
pop
and
pop
add
in
dec
add
pop
pop
add
jne
std
in
add
jo
int3
mov
xor
stos
fisubrs
lahf
call
pusha
iret
jg
mov
jmp
mov
xchg
push
jne
and
cli
incl
xchg
push
in
cmp
loopne
inc
and
sub
insb
xor
sub
call
add
ss
aam
cmp
add
daa
add
mov
insb
loope
or
incl
sbb
in
je
mov
leave
jecxz
push
sub
cmp
xchg
xchg
in
xchg
jp
nop
and
cmp
push
in
mov
mov
insb
pop
jmp
call
mov
mov
cmpsl
mov
inc
inc
outsl
xor
sub
mov
and
fildl
in
pushf
int3
sbb
mov
pusha
stos
push
call
cwtl
enter
jg
mov
xor
les
add
dec
call
and
add
adc
push
mov
and
xor
ljmp
push
mov
mov
lods
jne
lret
cmp
jl
or
dec
inc
pop
sbb
push
mov
pop
push
sub
pop
fsubrl
mov
push
or
test
push
push
movsl
xorl
mov
sbbb
out
into
shlb
push
ja
push
dec
xchg
in
mov
incl
sbb
pop
cld
addr16
btr
dec
pop
fnsave
mov
test
mov
in
fwait
dec
adc
pop
or
int3
jg
pop
mov
pushl
shll
push
inc
xchg
lret
std
std
adc
xchg
cmpsb
aaa
mov
decl
pop
xor
lret
orb
dec
imul
pop
and
ljmp
hlt
jbe
mov
lret
hlt
add
movb
pop
adc
scas
shlb
shlb
or
xchg
lahf
add
pop
inc
lods
and
add
dec
push
push
xchg
iret
mov
dec
popa
icebp
mov
pop
std
mov
and
mov
mov
sbbb
fidivrl
mov
dec
xchg
dec
jp
dec
call
or
sub
cmp
std
jmp
pop
in
pop
cmpsl
faddl
addb
jo
popf
aam
ljmp
inc
pushf
jg
andb
fs
call
pop
fcomp
pop
and
jmp
arpl
insl
jge
or
lods
dec
mov
jne
scas
cmp
movsb
cwtl
add
mov
data16
cmp
pop
ret
sbb
cmp
adc
adc
pushl
gs
pop
popa
fistl
lds
add
push
insl
btc
out
sbb
call
scas
sbb
adc
test
adc
sbb
cmp
ret
sbb
sbb
pop
icebp
push
adc
jg
push
mov
jecxz
add
test
jle
inc
jmp
nop
fildl
cmp
in
stos
or
inc
sub
mov
pop
out
adc
scas
clc
ljmp
mov
pop
pop
cltd
mov
sbb
cmp
in
daa
inc
rcll
pushl
mov
push
sarl
push
xor
jbe
mov
xor
cmp
pop
inc
inc
mov
push
xchg
push
dec
push
push
jae
decl
xor
repnz
fucom
cmp
xor
inc
add
lods
cmp
inc
subl
adc
jp
push
nop
test
lret
push
cli
mov
lahf
inc
jecxz
jmp
aad
pushf
popa
sub
mov
jmp
cmp
push
pop
movsb
lods
jecxz
pop
stos
mov
ljmp
cmp
fmuls
in
mov
inc
iret
fisubrl
call
rcll
ja
and
call
ljmp
jae
push
push
push
push
lods
push
lcall
jg
xchg
sti
push
jb
arpl
cwtl
addl
test
out
notl
jnp
mov
dec
call
jle
jae
adc
jae
hlt
xchg
xor
inc
xor
push
xchg
mov
jns
cmp
push
push
sub
aam
loope
addl
mov
pop
mov
in
add
mov
daa
stc
dec
mov
xor
mov
mov
dec
aas
adc
incl
rol
repnz
mov
add
bound
dec
mov
push
lcall
sahf
and
adcb
cld
lret
scas
aaa
clc
in
cli
dec
pop
loope
sbbl
pushl
xchg
out
jmp
xchg
ljmp
jle
insb
fwait
push
dec
xor
push
pop
insb
test
mov
fmul
pop
lret
sub
stos
mov
inc
out
mov
or
and
mov
and
dec
or
push
clc
stos
xlat
sahf
add
mov
mov
adc
fs
movsl
pop
mov
shr
push
adc
dec
pop
sarb
jmp
xchg
push
xor
dec
fsts
fadds
inc
test
push
int3
mov
mov
dec
jbe
lods
dec
fst
sub
js
aas
mov
sub
and
cmp
mov
add
lods
mov
cmp
push
bound
xchg
loopne
dec
scas
pop
xchg
adc
cmove
ret
je
ljmp
addb
cmp
mov
addr16
pop
push
xchg
in
aas
push
mov
scas
rorl
daa
adc
lcall
out
mov
push
fnstsw
pop
stos
jno
into
jl
gs
inc
js
idiv
jg
sbb
and
pop
dec
mov
and
enter
fs
xor
cli
cmc
imul
lds
cltd
repz
jns
mov
mov
adc
mov
mov
xor
icebp
movsl
xor
pop
pop
mov
scas
jns
mov
mov
in
mov
adc
arpl
inc
or
xchg
inc
ljmp
xchg
sbb
jecxz
mov
inc
cwtl
data16
adcl
inc
jnp
xor
mov
xchg
je
bnd
add
test
sbb
ljmp
push
ds
into
outsl
or
faddl
adc
push
mov
jg
jns
xchg
decl
and
int
or
scas
daa
cmp
push
cmp
cmc
mov
pop
mov
sar
call
lahf
ljmp
movsl
out
gs
sbb
cli
fstpt
mov
sub
decl
inc
xor
adc
jp
or
jecxz
loopne
jg
push
lea
xchg
loope
jle
insb
lret
shr
mov
pop
test
stos
les
cmp
add
mov
jge
push
push
cmp
call
sub
arpl
mov
inc
not
mov
lods
jno
cli
adc
dec
sub
push
dec
ss
fdiv
es
fidivrl
mov
notl
pop
mov
adc
jmp
cmp
inc
cs
pop
jge
lods
lret
sub
dec
popf
xor
mov
lcall
aas
imul
imul
imul
jmp
dec
mov
clc
push
decb
lea
cltd
push
mov
cmp
aaa
mov
lea
jg
lock
leave
add
jp
pop
scas
jbe
sub
and
lea
lcall
cmp
sti
mov
inc
sbb
daa
lcall
cmc
xchg
ret
jno
mov
incl
push
cmp
cmpsb
hlt
stos
dec
fnstsw
aaa
mov
jmp
sbb
sarb
clc
incl
dec
cmpsb
scas
in
sbb
cmp
dec
add
mov
sbbl
jo
cmp
lcall
or
dec
pop
xor
cmp
jbe
fadd
out
mov
lcall
popf
xchg
mov
mov
loope
insl
push
pushf
adc
push
into
and
fbstp
inc
daa
add
test
sbb
nop
push
test
popf
lcall
frstor
ljmp
push
or
sub
dec
std
rolb
mov
fsub
out
xor
imul
sbb
jnp
mov
add
adc
lret
push
jae
push
js
sbb
sbb
xor
dec
sbb
lret
pop
add
mov
adc
decl
adc
push
mov
sub
lock
sub
js
pop
incl
dec
negl
jne
xchg
mov
push
jl
enter
cmp
dec
test
pushf
mov
ret
test
pushl
call
adc
mov
push
adc
pusha
cmpsb
and
and
lcall
shll
into
and
jae
mov
pop
push
mov
int
add
aad
push
push
cwtl
jl
lret
fucomip
sbb
pop
dec
ljmp
orb
shlb
cwtl
dec
cld
cwtl
pop
into
cmpsl
out
cmp
decl
adc
xor
jae
adc
jl
data16
divb
lcall
cmpsl
fsubrl
cli
sub
add
jp
inc
cmp
inc
stos
dec
out
pop
pusha
cltd
mov
call
or
icebp
clc
sarl
loopne
jb
pop
mov
cmp
call
loop
decl
lcall
xchg
lods
daa
repz
sbb
push
lret
aad
std
call
xor
les
push
xchg
cwtl
cmp
scas
fists
repnz
xor
adc
cli
cmp
in
ja
subl
jp
lock
inc
imul
enter
into
test
jmp
dec
mov
add
inc
jge
js
or
or
sbb
sub
lods
mov
jb
dec
mov
ljmp
shr
sahf
into
push
mov
or
bound
mov
mov
push
hlt
fistps
push
shrb
jge
aaa
std
xchg
decl
in
push
adc
xor
out
fsubrs
fwait
bound
ret
xor
incl
lea
enter
jmp
jg
cmp
push
sbb
mov
idivb
call
sbb
jns
insl
push
in
and
pop
sbb
ja
xlat
arpl
fcompl
icebp
aad
ljmp
mov
out
loopne
push
adc
sbb
xor
dec
sbb
mov
cmp
call
mov
das
adc
mov
xchg
lret
lods
test
aaa
lret
or
pop
jmp
call
notl
mov
scas
dec
dec
loop
ss
push
lret
pop
sub
jl
into
push
sbb
push
hlt
les
lcall
movsb
pop
mov
test
call
and
in
incl
and
repz
jno
sbb
in
inc
fsubl
push
mov
ljmp
decl
loop
mov
stc
hlt
loop
sub
roll
mov
std
mov
daa
loopne
mov
incl
and
je
test
stc
shlb
adc
ret
cltd
cmp
ljmp
int3
and
loop
xchg
jl
cmp
idiv
fst
addl
mov
sub
mov
inc
xor
jno
xchg
hlt
mov
lock
mov
jb
jo
sub
fs
sub
sar
xlat
and
xchg
mov
sub
dec
leave
push
inc
cmpsb
pop
movsl
adc
lret
test
sti
lods
shr
jg
xorb
std
mov
adc
and
decl
adc
xchg
pop
and
ss
dec
popf
ret
std
aad
pop
popf
out
icebp
adc
cli
test
outsl
sarl
or
dec
mov
mov
xchg
les
gs
das
std
call
and
cld
test
lcall
push
test
sbb
mov
xor
add
call
jo
fs
jae
dec
jmp
aaa
in
mov
push
add
adc
add
dec
rorb
call
push
sub
jae
test
scas
pop
sbb
fsubl
inc
repz
pop
mov
ljmp
and
ss
iret
in
out
imul
xor
adc
dec
repz
mov
push
xor
push
and
fcoms
lcall
iret
sub
fidivs
call
sar
pop
cmpsb
mov
inc
mov
aad
push
inc
ficoml
decl
or
dec
push
imul
xchg
xchg
adcl
out
lret
mov
mov
ljmp
fs
std
fiaddl
loope
mov
sbb
cmc
mov
leave
dec
outsl
arpl
fdivrl
into
inc
dec
out
push
loopne
pop
repz
add
es
cwtl
clc
int3
test
add
scas
incl
adc
push
xor
inc
mov
dec
jb
jmp
jbe
data16
pushl
jl
clc
jl
push
rcrb
sub
loopne
push
jno
std
xor
mov
inc
add
cmpsb
push
iret
fsubrl
add
fsubs
scas
fcomip
lds
dec
push
jnp
repnz
loopne
fmuls
mov
imul
imul
or
adc
dec
sub
pop
jg
mov
inc
sbb
pop
rclb
sbb
js
test
cwtl
imul
pop
dec
xchg
fwait
decl
and
jge
cmp
sbb
fiadds
cmp
das
test
loope
test
mov
xor
inc
std
pop
and
clc
pop
lcall
mov
imul
inc
icebp
pusha
sbb
shll
jo
shr
xchg
jecxz
sub
das
ja
sbb
dec
addr16
incl
mov
mov
subl
xchg
arpl
xchg
ror
test
mulb
cli
out
mov
pop
ret
pop
hlt
xlat
mov
outsl
jl
mov
ljmp
mov
gs
repnz
mov
add
fdivl
jg
or
movsb
popa
mov
jmp
js
sub
or
sub
and
sbb
push
push
mov
cmp
inc
rorl
stc
mov
mov
je
hlt
int3
cwtl
xcrypt-cbc
cmpsl
adc
cmc
scas
cli
push
add
jecxz
enterw
iret
sbb
inc
lahf
icebp
adc
int3
sbb
in
mov
xchg
pop
orl
cmp
rclb
jnp
std
je
cmp
mov
jb
sub
pushf
lret
movb
mov
incl
jno
dec
cmp
out
adc
jb
push
leave
cmp
mov
scas
call
dec
jno
pop
scas
int
fs
jle
push
mov
xchg
jg
nop
in
idiv
incl
ljmp
test
mov
rcr
mov
and
ss
pushl
hlt
pushl
mov
gs
cmp
push
shrl
jae
out
nop
mov
and
sbb
jmp
push
loopne
xor
add
clc
inc
push
out
xor
mov
es
jmp
fcomip
jg
popf
mov
sbb
xor
imul
outsb
mov
xchg
insb
lcall
lea
sarl
adc
pop
outsb
push
mov
xor
lcall
lret
sub
dec
or
fbld
mov
test
das
cmp
pop
stos
call
fiaddl
mov
sub
mov
xlat
testl
sarb
decl
push
jo
jae
sub
adc
push
ljmp
iret
jb
aad
jmp
movsb
mov
push
xor
jmp
in
pop
xchg
addr16
mov
lcall
jg
rorl
sub
sbb
les
jp
lods
imul
sub
aas
out
pop
arpl
fwait
movsb
push
jmp
xchg
add
or
mov
mov
mov
popf
nop
popf
cld
test
fbstp
and
and
out
mov
push
dec
ja
jmp
jb
sbb
data16
adcl
pop
sub
push
add
rep
or
std
in
jns
push
in
fdivrl
lods
cwtl
adc
dec
out
mov
in
pop
xor
fs
push
std
jo
inc
daa
add
sbb
xchg
addl
push
push
std
ljmp
push
inc
or
inc
mov
jecxz
test
sbb
outsl
adc
cmp
adc
stos
xor
add
les
xchg
mov
cmpsb
and
mov
out
sub
or
aaa
outsl
jne
xlat
mov
outsb
leave
xlat
lret
cmp
cs
insb
adc
shll
inc
ret
pop
xor
pushl
popf
sbb
xchg
gs
mov
fcomip
incl
es
xlat
jmp
int3
cs
sbb
jp
sub
cli
hlt
or
jg
adc
mov
jbe
cltd
scas
ret
jmp
sub
lcall
and
pusha
mov
into
sbb
cmpsl
imull
negb
stos
rcrb
fcom
cmp
fwait
movsl
or
test
or
xor
incl
aaa
and
sbb
sbb
pop
int3
add
and
mov
inc
xor
mov
push
lods
int3
dec
mov
cmp
inc
aaa
push
nop
ja
out
xlat
jmp
inc
xor
sbb
pop
mov
je
testb
cmp
xchg
mov
mov
jle
add
daa
mov
sbb
ret
bound
inc
push
mov
stos
mov
stos
es
roll
cld
mov
and
fisubrl
je
ljmp
mov
ljmp
test
lods
rcll
adc
push
cmp
cs
lods
js
mov
xchg
js
testb
jle
push
ljmp
inc
mov
shr
fwait
repz
sysenter
enter
or
dec
daa
addr16
popa
icebp
call
fisttpll
js
jo
test
xlat
push
cltd
inc
mov
cmc
jmp
enter
lds
xchg
pop
clc
mov
add
test
ret
incl
mov
js
jl
cli
xor
jbe
and
imull
sub
lods
lds
jg
out
fs
fldt
arpl
or
mov
ret
and
jg
mov
xor
sbbb
mov
ljmp
std
test
xor
incl
cs
movsl
or
in
xchg
fwait
fwait
shrb
adc
in
push
and
jbe
push
loope
add
jns
aam
push
call
xchg
mov
mov
out
xor
sub
in
push
sbb
xchg
pop
jg
fs
push
mov
push
kxorw
mov
pop
fldl
aaa
fstpt
pop
inc
sub
mov
dec
cmp
lret
out
hlt
pop
push
cltd
inc
repz
sbb
lahf
mov
mov
icebp
pushl
std
mov
pop
dec
dec
dec
into
add
sti
mov
cltd
shlb
imul
pop
std
fbstp
mov
lea
jns
scas
enter
insl
mov
lcall
cmp
adc
pop
repnz
sub
shld
or
xor
mov
or
lock
out
leave
test
cmp
cmp
lods
xchg
and
ds
rcl
lcall
mov
shlb
shll
xchg
je
dec
jo
popf
clc
mov
in
pushl
jnp
adc
push
repz
jnp
in
push
mov
in
mov
mov
test
int
lcall
mov
sbb
mov
fadds
popa
inc
jle
mov
sahf
xchg
pop
cmc
stc
nop
insb
jecxz
popf
pop
rorb
rorb
cmp
stos
call
pop
lret
cmpsb
inc
cmp
mov
cmpb
pop
shlb
dec
cltd
in
push
push
cmp
ljmp
push
mov
jmp
push
pop
movsl
xchg
jmp
sub
gs
repz
add
inc
in
es
mov
inc
inc
sahf
mov
cmp
stos
adc
cld
and
out
mov
or
lcall
fimuls
rclb
jmp
cmp
imul
mov
or
fs
jmp
enter
lea
sbb
aam
jg
dec
adc
cld
jne
outsl
dec
das
insl
push
out
std
fwait
in
or
jl
lret
jmp
push
in
aam
dec
pop
dec
jno
xor
mov
jb
sti
pop
dec
lret
mov
mov
sub
xor
push
lds
fldt
call
push
loopne
fisubrs
jo
and
enter
pushl
dec
or
adc
fnsave
or
xchg
test
andb
adc
adc
xchg
cltd
mov
insb
scas
test
stc
call
pop
lcall
jbe
loopnew
ret
scas
lock
incl
outsb
fwait
mov
add
fistpl
xchg
add
sub
mov
fmuls
iret
inc
or
xor
cmp
leave
xor
jnp
cmp
std
xchg
push
lcall
and
push
lods
int
inc
add
push
sub
add
mov
or
rcrb
lcall
dec
out
es
pop
or
sbb
mov
inc
jg
inc
inc
int3
aas
jmp
mov
adc
push
xor
int3
sub
call
mov
daa
mov
and
pop
push
xor
aaa
adc
mov
rorb
lcall
aam
lea
jno
stos
ss
push
mov
inc
dec
nop
std
xor
ljmp
mov
movsl
ss
fs
div
xchg
adc
or
pusha
cmp
sub
loopne
or
das
xchg
xchg
jae
sti
imul
lret
loop
movsb
sar
pop
das
gs
icebp
outsl
mov
decl
out
mov
jmp
adc
adc
les
xchg
pushf
mov
das
cli
pushl
and
pop
cmp
fistpll
cmp
push
test
push
pop
ret
xchg
incl
inc
int3
popa
mov
pop
sbb
or
sub
cmp
jle
insl
popf
frstor
lcall
bound
pop
outsb
mov
outsl
rcrl
pop
cmp
inc
cmp
sub
popf
popf
rep
mov
incl
mov
push
ret
jg
test
xor
fisttpl
mov
loopne
mov
jno
pop
popa
ret
mov
dec
out
push
sti
andb
enter
xor
inc
sub
inc
mov
mov
xchg
fadds
mov
sub
sub
test
cmp
pop
loop
es
mov
push
out
xchg
xchg
mov
push
std
ss
push
jmp
test
jp
pop
mov
push
sahf
cmp
popf
mov
popf
push
lcall
cmpsb
sahf
sub
mov
xchg
mov
push
add
lcall
mov
jmp
mov
fiadds
xchg
add
xlat
std
pop
push
shlb
adc
sbb
mov
iret
cmp
dec
out
or
adc
lock
cmp
ja
pop
lods
mov
in
push
xor
adc
aam
imul
mov
pop
sub
add
and
out
adc
decl
hlt
lret
dec
imul
xchg
out
push
sub
push
ljmp
arpl
out
sbb
das
xor
int
xor
ss
mov
mov
mov
mov
scas
sbb
pushl
cld
sbb
and
xor
sub
xor
mov
xor
mov
adc
div
sub
test
mov
adc
mov
cmp
jb
sti
fimuls
in
or
dec
xor
cmp
jno
call
repz
es
outsl
pop
mov
addr16
aam
out
les
bound
lods
sbb
add
decl
push
mov
sbb
jle
andb
fistps
mov
inc
dec
roll
call
mov
pop
pop
pushf
scas
sbb
jo
mov
in
adc
lcall
xchg
lods
push
xor
call
pop
fstpt
stos
add
dec
shrl
cli
call
incl
outsb
or
pop
mov
push
pop
stc
jp
fwait
jmp
lcall
aad
jnp
pop
sub
xor
sbb
and
sub
push
xchg
xor
test
push
xor
outsb
mov
mov
ja
lcall
adc
add
and
cld
mov
outsb
jb
jmp
ljmp
icebp
push
mov
inc
lea
pop
or
les
mov
mov
fdivrl
popf
cmc
and
rorl
div
ret
sbb
js
jmp
xor
icebp
mov
pop
lds
jl
push
mull
stc
mov
fstl
dec
test
jmp
std
pop
cmpsl
add
repz
loop
lds
cmc
movsl
xchg
js
fcos
jg
mov
clc
push
pop
jb
push
dec
stos
pop
lret
dec
mov
fs
in
incl
fucomi
test
ljmp
sbb
inc
mov
push
aaa
pop
pushw
popa
cld
jmp
cmp
loopne
pop
lahf
mov
icebp
or
loop
cmp
xchg
std
and
imul
int
adc
int3
pop
loop
pushl
sbb
inc
pop
cli
jno
pop
pushf
outsl
dec
pmullw
fistl
sub
pop
jmp
ret
in
dec
sti
frstor
sti
cmp
add
addr16
ljmp
pop
arpl
cmp
sahf
rcr
sbb
outsb
xor
jae
mov
in
decl
xchg
push
push
jp
outsb
repnz
in
repz
mov
mov
jg
cmp
outsb
sub
cmp
jmp
push
in
les
lret
or
call
sub
loope
insb
scas
sar
jg
inc
cmpsb
out
jge
sub
lods
xlat
cmp
lcall
arpl
jo
insb
js
int3
jmp
or
pop
mov
jecxz
xchg
movsb
dec
call
stc
pushf
mov
or
neg
xorl
mov
mov
and
decl
push
sbb
mov
stc
pop
inc
push
popa
ss
lret
nop
aaa
insb
lods
mov
jmp
inc
cld
lcall
leave
lret
clc
test
loop
lock
adc
movsl
mov
aam
out
loopne
incl
and
ljmp
push
xchg
test
xor
push
xor
pop
insb
decl
pop
mov
xchg
dec
add
cmp
and
rcr
mov
pushl
fsubp
cltd
cltd
dec
fimull
repz
sbb
rclb
sbb
scas
aam
cmpsl
in
gs
add
sub
sub
cs
adc
add
out
lea
aaa
orb
nop
mov
jge
jg
pop
pop
js
subb
pop
mov
push
push
mov
add
add
ret
in
outsb
mull
push
stos
addb
inc
pop
popa
xor
ja
or
imull
adc
cmpsb
lock
add
lahf
add
sbb
add
test
inc
push
push
adc
or
add
lds
add
mov
add
pop
js
ficoms
push
gs
test
movsb
cmc
imul
dec
outsl
inc
sbb
sbb
inc
and
mov
jnp
dec
pop
push
outsl
outsl
insb
push
push
xchg
jo
mov
in
push
and
gs
push
fwait
insl
sub
iret
sbb
mov
xor
push
shlb
roll
xchg
sub
adc
imul
push
mov
xchg
insl
outsl
std
dec
jne
js
stos
pop
inc
filds
mov
pop
push
popa
fstpt
add
mov
pop
cmpsl
mov
push
mov
and
es
imul
inc
outsb
fs
jo
inc
pop
imul
insl
popa
sub
out
adc
insb
outsl
bound
pop
test
push
outsb
or
imul
rolb
mov
sbb
and
cli
mov
push
inc
jns
sbb
insl
stos
push
push
inc
push
sbb
sub
jae
jb
inc
inc
bound
imul
loop
jne
cli
addr16
loopne
jbe
in
mov
xchg
push
jl
bound
adc
mov
jo
icebp
dec
icebp
dec
pop
push
repnz
jne
jmp
jne
data16
cmp
sbb
cmp
sbb
mov
scas
je
ja
jp
push
je
dec
fstpt
inc
push
insl
lahf
push
outsl
push
add
and
lcall
arpl
sbb
movsb
and
popf
jns
fadd
pusha
jae
out
xor
pop
xor
popa
inc
bound
jns
jge
pop
dec
fs
and
pop
push
xchg
fcoms
bnd
addb
jge
les
dec
push
sbb
loop
sbb
inc
add
mov
in
mov
jns
mov
xchg
daa
pusha
imul
pop
insb
jo
call
pop
sbb
add
mov
outsb
insb
jge
adc
cs
add
test
popw
push
adc
xchg
jb
push
xchg
inc
js
mov
jae
push
ret
insb
jnp
aas
sub
dec
ret
adc
or
pop
in
cmpsl
pop
insb
bound
dec
jb
cmp
gs
pusha
push
mov
ljmp
test
and
dec
sbb
push
add
or
sbb
jns
ficoml
mov
pop
insl
or
out
std
js
pop
popa
es
push
jmp
xor
insl
test
test
cmp
pusha
or
addl
iret
sbb
dec
or
cmp
mov
jns
dec
mov
popa
xlat
mov
sbb
mov
jne
popf
sub
mov
push
stos
mov
and
adc
sbb
outsl
jns
ljmp
jg
les
gs
pop
andl
sti
jae
popa
rcll
aaa
rcrl
inc
fwait
push
sub
push
mov
and
xlat
push
jo
cmp
mov
pop
loopne
push
lds
xor
loopne
push
add
xchg
aaa
sub
cmc
inc
push
sahf
and
xor
lods
sbb
push
sbb
mov
shll
jecxz
mov
sbb
subl
roll
or
movsb
sti
sub
and
adc
sbb
cltd
and
testb
sti
je
popa
int
push
xor
movups
ret
and
mov
inc
and
cwtl
cmp
enter
leave
shl
jno
outsb
mov
push
data16
mov
jo
pop
inc
inc
adc
jno
inc
daa
mov
jmp
or
xchg
sub
add
sbb
push
test
adc
fcoms
imul
shl
mov
outsb
push
jne
inc
aam
pusha
inc
stos
test
add
cmpsl
push
add
adc
push
dec
add
stos
rcrb
icebp
aam
dec
gs
push
inc
adcb
dec
shl
adc
push
jg
pop
mov
js
inc
jne
xchg
pop
sbb
mov
add
or
mov
js
adc
jmp
inc
push
jg
fwait
mov
insl
jg
and
inc
dec
addr16
inc
sbb
fisttpl
sub
dec
aaa
dec
call
and
jae
pmaxsw
or
sbbl
push
insb
mov
jne
sbb
dec
rorb
fsubr
ret
aad
xorb
ja
adc
fsubs
cmp
pusha
pop
ret
jmp
add
add
inc
push
xlat
jnp
mov
outsl
push
fsubs
pusha
inc
jb
and
push
mov
lods
dec
lods
adc
inc
inc
mov
mov
lcall
icebp
inc
imul
loop
pusha
pop
lea
add
xor
or
xorl
inc
insb
jle
punpckldq
adc
icebp
out
push
mov
inc
fs
dec
jae
jno
data16
xchg
nop
loope
into
fs
sub
sbb
lods
pop
xchg
ljmp
into
cmp
sub
imul
add
add
movsl
movsl
add
push
out
mov
dec
push
push
pop
xor
ret
ficomps
xchg
addr16
enter
or
test
sti
imul
pop
pop
and
xchg
lds
bound
insb
push
clc
mov
mov
outsb
dec
test
stos
pop
push
mov
loope
mov
push
pop
out
fidivrl
lcall
imul
add
sbb
movsb
xor
rcrl
or
psrlq
mov
dec
adc
add
pop
add
dec
mov
cmp
dec
subb
outsl
cmp
inc
daa
mov
lods
add
fwait
lods
cmp
aad
outsb
das
add
lock
lock
xchg
cmpsb
and
subb
adc
inc
jb
jne
cmp
sub
outsl
adc
das
jo
sub
insb
inc
xor
inc
adc
sub
xchg
test
lock
cmp
scas
jecxz
push
mov
sbb
jg
jno
push
addb
jl
or
pop
leave
pop
sub
adc
loop
jl
into
sbb
dec
push
inc
dec
sbb
cmp
scas
and
ret
push
idivl
inc
in
mov
stos
inc
out
ja
cmp
andb
divb
xchg
push
fs
mov
aaa
adc
jbe
mov
jne
in
jnp
mov
andl
or
test
aad
cltd
jmp
in
das
sub
pop
jo
outsl
nop
loopne
jae
pop
imul
stc
sub
cmp
adc
sbb
not
inc
inc
imul
les
ljmp
sub
movsl
jge
sub
and
sbb
std
adcl
into
dec
or
pusha
ffree
add
jg
inc
insb
addr16
push
popa
imul
dec
mov
xchg
sbb
movsb
dec
add
es
dec
push
cs
jmp
lret
leave
add
cmp
fs
dec
sub
or
cs
stos
sub
mov
sbb
mov
cmp
ret
adc
in
cmp
push
dec
insl
stc
dec
and
mov
dec
push
ss
in
hlt
out
mov
jmp
push
mov
es
inc
mov
sub
rolb
inc
xor
mov
mov
xchg
add
mov
push
mov
lds
xor
adc
js
push
sub
mov
leave
in
pop
xor
outsb
pop
icebp
adc
xor
inc
outsb
fistl
popa
add
cmp
xor
insb
and
dec
popw
imul
vcmplt_oqss
fidivrs
dec
xchg
inc
xor
in
xchg
outsl
add
pop
pusha
xlat
mov
int3
clc
sub
xchg
add
sub
test
push
mov
dec
sbb
stos
cld
push
push
inc
jo
jge
call
inc
add
lcall
jg
fidivl
xor
xor
imul
imul
outsl
xchg
shlb
adc
cld
inc
add
fidivs
pop
loopne
in
dec
imul
or
out
movhps
imul
sub
ja
outsl
imul
sbb
cmp
xor
dec
add
stos
push
lahf
scas
adc
and
add
adc
out
add
daa
fisubrs
add
adc
jnp
xor
adc
aaa
in
imul
add
or
inc
cmpl
test
push
add
adc
add
push
xor
lock
imul
sbb
add
inc
cs
pop
dec
push
stos
lea
jo
jp
and
adc
add
dec
in
dec
testl
dec
pop
pop
xchg
add
sub
push
sbb
insl
push
jb
push
xlat
movsb
push
imul
lahf
dec
flds
dec
push
lcall
and
out
iret
shlb
add
dec
incl
add
add
pusha
mov
lea
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
add
inc
add
aaa
inc
add
