divb
in
mov
mov
rorb
add
add
fmulp
das
int
in
jg
shlb
or
and
push
je
and
out
je
push
call
push
add
sub
push
ret
in
divl
jne
mov
or
call
xchg
push
push
sbb
stc
out
aas
mov
test
je
cmp
movl
cmp
jae
dec
movzwl
lea
jne
sbb
xor
jmp
and
neg
fidivrs
and
pop
pop
mov
or
call
push
push
sarl
stc
shrl
jp
lock
jge
add
pop
push
push
push
push
xor
mov
mov
movsl
std
in
pop
scas
cmp
movl
cmp
pushf
or
push
rcrb
sahf
push
mov
push
xor
fidivl
fcoms
cmp
adc
mov
ret
mov
jmp
jmp
pushl
jbe
adc
lea
or
lock
dec
test
jg
mov
or
add
cs
add
ret
std
imul
xchg
add
mov
inc
push
adc
roll
das
and
fcmovnb
les
ljmp
insl
pushl
cltd
push
mov
xor
pop
mov
mov
mov
call
data16
mov
pushl
test
mov
or
data16
jg
adc
je
push
lahf
scas
loope
jge
adc
pop
push
sub
mov
hlt
cs
dec
pusha
outsl
in
add
push
adc
xchg
testl
sub
dec
shlb
in
or
mov
mov
int
jbe
or
or
pop
cmpsl
push
jl
in
cmpsb
cmp
lea
data16
push
call
sub
mov
add
pop
pop
pop
push
loopne
jno
sub
jecxz
mov
lea
mov
adc
leave
das
add
stos
movsl
push
sti
sbb
dec
or
jbe
ret
ja
push
and
enter
adc
jo,pt
sbb
push
xchg
mov
inc
cmp
add
cmpb
mov
movsl
mov
xlat
pop
ja
ja
add
and
add
cmp
add
sbb
dec
cmp
je
out
pop
ja
xor
adcl
cmc
jne
imul
jmp
push
sub
xlat
add
sub
insl
sbb
pushl
add
push
push
push
iret
bound
fidivrl
inc
pop
pop
ljmp
inc
lock
push
mov
cmp
or
jge
outsl
push
rolb
js
sti
mov
mov
xor
mov
pop
ret
arpl
xor
stos
pop
roll
pop
imul
rcrl
sar
pop
inc
sub
inc
clc
sub
pop
or
xchg
push
ss
cmpl
adcl
xorl
adc
jg
mov
adc
addr16
dec
or
ret
shrl
out
stos
loop
push
push
lock
pop
outsl
jmp
das
pop
pop
adcl
incl
push
mov
sar
xor
cmp
ja
adc
fisubrs
lock
sub
add
push
movsb
inc
push
jmp
pop
xchg
sbb
jo
push
sub
sbb
mov
out
cli
jg
jno
loop
lds
iret
jle
mov
cmpl
sub
push
filds
ret
add
jge
in
mov
testb
add
pop
cltd
sub
shrl
fwait
in
enter
mov
mov
push
loope
cwtl
dec
mov
dec
push
or
cmp
jl
cmp
jne
pop
mov
inc
bound
aas
mov
cli
jmp
mov
push
jbe
mov
add
rorl
mov
mov
or
adc
lea
adc
fildl
mov
pop
hlt
into
mov
adc
cmpsl
out
and
insl
stc
mov
cmpsl
mov
cld
fisubrs
xlat
ja
lods
lea
stos
mov
clc
cmp
lea
or
test
jle
insb
or
cmp
mov
inc
sahf
mov
add
jl
pop
ds
insl
cmp
icebp
in
pop
pop
fwait
push
push
cmp
adc
jg
decl
mov
int
jns
mov
pop
idivl
add
mov
pop
sub
gs
cli
andl
ret
and
add
es
adcb
mov
sti
jmp
hlt
jg
pusha
cmp
or
inc
sbb
push
dec
cmp
aas
in
adc
hlt
movlhps
hlt
cmp
jle
lds
or
out
lret
clc
pop
pushf
cmpl
je
push
cmp
cmp
jae
push
or
mov
xchg
pop
mov
or
add
xor
icebp
jb
pop
add
xchg
pop
jmp
ret
lea
ljmp
or
mov
ret
push
push
rcrb
jecxz
clc
mov
jmp
xchg
jmp
inc
or
adc
imul
outsb
insl
out
cmp
jo
inc
sub
shrb
sub
aad
aaa
stos
shl
mov
mov
in
pop
or
cmp
fcos
mov
push
mov
lea
cmp
jne
push
push
adc
xor
push
test
pop
mov
add
pusha
pop
pop
ds
push
rclb
fcmovnbe
mov
daa
in
rcr
jne
cmp
stos
xchg
and
add
sub
xor
frstor
insb
cwtl
dec
in
lret
and
xchg
add
out
add
sbb
fstpt
mov
add
repz
testb
cmp
mov
mov
and
push
push
data16
sbb
test
cwtl
ds
xchg
loopne
in
dec
out
mov
ja
stos
or
loope
loop
adc
je
push
adc
aas
clc
pusha
mov
push
repz
inc
xor
push
ss
push
incb
or
out
lea
dec
push
xor
mov
xchg
pop
push
jmp
add
shlb
fldcw
add
add
xlat
pop
rclb
mov
push
or
dec
inc
push
dec
ret
aas
cmp
or
lea
push
add
push
mov
push
push
push
iret
mov
fisttpl
pop
dec
dec
push
mov
mov
das
sbb
push
scas
dec
fisubrl
pop
inc
cmp
push
jmp
pop
lcall
inc
cmp
je
mov
sub
outsl
sbb
jne
lea
pop
sbb
arpl
cwtl
sub
mov
adc
xchg
push
mov
xchg
push
jb
mov
out
sarb
repnz
popa
or
and
test
mov
lock
jp
or
movsl
out
icebp
lcall
mov
dec
or
std
cmp
adc
jge
xor
sahf
outsl
mov
xor
sub
jg
inc
xchg
or
lea
lcall
mov
add
add
or
or
mov
push
adc
or
push
pusha
mov
push
mov
mov
push
mov
or
xchg
fsubr
push
or
and
sbb
int3
ret
mov
push
xlat
adc
sbb
push
fstps
cltd
sbb
out
psllw
stc
decb
adc
xor
aad
add
mov
inc
mov
adc
sub
adc
mov
inc
pop
ret
shrl
pop
inc
xlat
xchg
add
mov
or
je
dec
je
push
adc
push
pop
jmp
push
adc
inc
shl
and
mov
xchg
or
xchg
popf
js
pop
adc
and
jo
out
pop
mov
inc
fmul
mov
push
mov
push
sbb
mov
xor
add
and
mov
aam
xchg
jmp
dec
and
pushaw
pushf
pop
cmc
andl
mov
call
xchg
aaa
xor
mov
or
out
test
fadds
test
js
sbb
inc
push
fisttps
insl
xchg
add
mov
lret
ljmp
jecxz
das
cmp
js
sbb
sbb
ficoms
sub
js
and
adc
sbb
or
popa
add
mov
call
fldl
pushl
out
neg
sbb
inc
inc
pop
xlat
andb
enter
add
test
lea
mov
fldcw
mov
sbb
pop
movsl
push
negl
pop
fildll
das
adcl
pop
dec
sub
adc
mov
push
sbb
or
sbb
push
adc
lahf
cmp
sbb
adc
fists
cwtl
add
pop
sbb
and
add
js
adc
int3
js
jl
ret
adc
jb
pop
adc
test
mov
mov
mov
cld
cmp
jl
jne
dec
jl
mov
push
pop
inc
enter
movsl
cmp
les
or
andl
nop
into
or
mov
je
inc
mov
icebp
into
scas
mov
dec
or
or
push
data16
sbb
sub
pop
pop
pushf
sub
pushf
sbb
pop
aas
push
and
inc
and
or
push
jo
mov
andl
adc
out
in
sahf
adc
je
scas
jnp
mov
adc
lahf
cs
jno
and
ret
lahf
mov
insl
jnp
pop
aaa
push
push
or
mov
xor
dec
sub
leave
xlat
xchg
fmuls
subl
popa
xor
xchg
xor
data16
push
fdivp
jne
lcall
orl
je
and
mov
out
scas
mov
int3
sbbb
ljmp
mov
mov
pusha
push
lcall
jo
jne
push
loope
jp
pop
loope
add
adc
and
in
aaa
sbb
push
dec
mov
lods
mov
jnp
add
pusha
jp
push
in
mov
adc
insb
movsl
sbb
pop
repnz
je
jbe
in
sub
in
rolb
daa
pop
push
scas
and
sbbb
xor
loop
mov
les
repnz
dec
inc
pop
pop
jmp
sub
inc
jmp
mov
xchg
mov
push
xor
mov
pop
aas
aam
jge
decl
inc
and
fisubl
xchg
test
out
add
push
push
add
insl
cmp
jb
lock
bswap
scas
mov
scas
adc
mov
mov
and
push
je
icebp
bound
adc
xchg
in
push
and
push
filds
or
frstor
add
add
add
fldt
pusha
mov
testb
xchg
in
cmp
pop
push
movb
sbb
jo
xor
or
push
mov
jmp
ljmp
sbb
mov
push
lock
pop
push
sbb
neg
sbb
pop
les
ret
je
push
inc
out
loop
in
and
mov
gs
sub
mov
enter
cwtl
sahf
inc
and
fs
mov
dec
mov
mov
imul
loopne
xor
and
pop
push
add
adc
push
cltd
xchg
lret
or
in
add
mov
in
cmpsb
in
mov
mov
jge
pop
fiadds
mov
inc
outsl
mov
in
das
sarb
jae
sub
xor
sub
ds
je
lcall
mov
fcoml
dec
loopne
and
out
jge
out
movsl
jmp
jo
cmp
imul
adc
imul
clc
pop
adc
push
mov
add
jo
adc
jb
movsb
adc
movsb
iret
jno
and
pop
rclb
ss
enter
push
pushf
pushf
xchg
out
lret
clc
mov
mov
in
sbb
jb
and
sbb
int3
sbb
int3
xchg
arpl
and
arpl
ret
sbb
enter
xchg
sub
sbb
ror
mov
sub
ret
sbb
nop
idivb
les
sbb
sbb
negb
mov
movsb
call
pop
pop
pusha
mov
and
fisttpl
pop
mov
xor
fcompl
add
lods
cwtl
arpl
mov
out
pusha
inc
inc
adc
pusha
sbb
ror
enter
sbb
aaa
xchg
add
test
or
dec
jge
or
push
je
sbb
or
mov
and
push
sbb
adc
push
inc
adc
sub
add
adc
loopne
add
test
or
jle
sbb
leave
inc
lahf
add
in
andb
call
and
and
outsb
and
push
movsl
push
adc
cmp
aaa
adc
dec
rclb
out
sub
orl
pop
push
mov
test
xchg
jae
lea
adc
lods
fs
sarl
sbb
xor
sbbl
add
test
xchg
mov
dec
std
and
cmpsb
push
adc
jo
sbb
xchg
and
sbb
adc
sbb
cwtl
sub
push
cmp
dec
subl
cld
add
pop
push
jmp
push
fstpl
sub
mov
lods
pop
rcll
js
or
cmp
mov
loop
xchg
xor
add
enter
movsl
inc
mov
or
sbb
mov
outsb
into
push
sbb
fdivrs
lea
cmp
pushf
or
shll
pmullw
lret
adcl
push
jp
sarl
adc
sbb
adc
inc
adc
leave
or
cwtl
lds
rcl
imul
jne
fidivl
leave
mov
into
adc
mov
xor
inc
adc
pusha
pop
mov
jnp
add
mov
dec
push
dec
mov
pop
add
lret
and
enter
push
inc
xor
sbb
int
jmp
test
mov
neg
pop
inc
jne
push
cmovl
and
bswap
mov
leave
sbb
sbbb
sbb
stos
cmp
cltd
pop
clc
popf
xor
pushf
sbb
cmpb
add
push
shlb
sahf
les
loopne
pushf
pop
nopl
xchg
or
in
loopne
mov
maskmovq
imull
sbb
and
clc
ljmp
or
je
xor
push
push
or
push
mov
adc
xchg
mov
pushw
mov
and
xlat
and
xchg
inc
xchg
and
push
call
daa
add
ret
or
nop
flds
pushf
mov
aas
sahf
sbb
int3
cmp
and
fstpt
sbb
addb
push
in
rclb
push
pop
ljmp
aad
mov
shlb
movsl
pop
or
mov
cmp
cld
dec
test
cmp
adc
pop
lret
add
ljmp
jmp
add
sahf
lock
shrb
mov
mov
sbb
adc
and
adc
and
test
pushf
jl
adc
and
and
xlat
and
add
xorl
push
out
jnp
pop
mov
cmpsl
and
or
sub
negb
aas
incb
inc
scas
xorb
push
push
push
loope
and
test
rol
jns
test
fsubrp
adc
fcomps
aam
stc
scas
sub
pop
repnz
push
sub
push
ljmp
sub
jne
add
push
sub
add
jno
sub
add
inc
lret
ret
inc
stos
push
cmp
call
mov
add
sub
add
pusha
scas
roll
repz
stos
xor
mov
push
in
and
adc
push
fs
lret
mov
imul
dec
pusha
cmp
loopne
repnz
mov
inc
and
movsb
sbb
adc
jl
arpl
inc
ror
push
pusha
xchg
cmp
outsl
xchg
movsl
nop
or
ficoms
je
xor
add
rclb
in
adc
or
mov
das
push
inc
dec
push
push
mov
sti
lahf
adc
mov
pop
test
add
mov
fadds
inc
loopne
sahf
xor
cmp
mov
aaa
pop
bnd
enter
sub
sub
cvttps2pi
push
mov
jo
push
enter
enter
xchg
idivl
das
push
lods
pop
pop
xchg
add
xchg
or
insb
xor
xor
xchg
mov
adc
push
push
cmp
xchg
adc
std
fsubs
imul
mov
cmp
inc
mov
nop
cmp
sub
jae
mulb
add
xchg
and
xor
stc
pop
insb
or
sbb
adc
inc
loopne
sbb
ret
test
repnz
in
cmp
or
pop
cmp
cmp
jne
and
movsb
adc
repnz
and
pusha
pop
xor
xor
aaa
arpl
mov
hlt
add
pop
jns
movsb
jo
dec
pop
mov
popa
adc
add
ds
mov
mov
mov
xchg
add
sahf
xchg
roll
xlat
les
jmp
test
xchg
or
mov
mov
aad
pop
mov
loop
inc
sarl
stc
dec
in
mov
adc
mov
out
lret
adc
mov
pop
xor
ficomps
cmpl
loope
add
push
push
and
scas
xor
mov
or
mov
inc
mov
push
pop
mov
je
adc
sub
sub
ds
jne
push
sub
call
adc
das
mov
jo
lret
jne
inc
in
aaa
cld
and
dec
sub
jmp
cmp
pop
sbb
xor
and
fldenv
add
jge
jmp
mov
inc
lock
lock
mov
rcrb
push
loopne
or
ret
rorl
cwtl
adcb
push
xchg
or
inc
repz
out
jge
orb
xchg
inc
loopne
enter
scas
xchg
add
roll
cmp
mov
test
or
sub
jge
cmp
or
call
loope
add
and
daa
sbb
pusha
nop
andb
mov
mov
and
loopne
sbb
loope
jbe
dec
movsl
push
mov
out
or
sub
mov
add
jecxz
add
icebp
jg
fldt
adc
pop
out
jne
or
je
sub
das
add
ret
adc
inc
jg
and
das
mov
cli
xor
and
das
enter
faddl
sbb
sbb
pop
pop
ret
cmpsl
test
mov
lods
fwait
push
or
out
jne
popf
jp
jnp
add
sbbb
loop
test
jbe
addb
not
mov
mov
lahf
je
cmpsl
jg
lea
sarb
inc
in
inc
jnp
xchg
sbb
fsub
push
out
inc
out
add
sarl
je
push
add
insl
or
or
xlat
div
lds
mov
mov
mov
xor
fnsave
pop
in
inc
push
xor
push
stos
sub
insl
shlb
add
or
enter
or
imul
rorb
shlb
cld
or
arpl
or
ds
in
hlt
push
and
movsb
movzwl
adc
lock
pop
call
ss
jmp
adc
cmpw
je
inc
push
jnp
fnsave
jmp
subb
xchg
lock
int3
cld
mov
xlat
jno
push
test
push
jo
inc
in
das
fs
loopne
in
inc
inc
inc
and
dec
insb
insl
int3
aad
scas
xorl
lock
cmp
lcall
push
mov
xor
inc
mov
sarl
or
scas
sub
and
jl
jae
ret
clc
fs
jle
enter
sbb
cmpsb
sbb
push
add
cld
dec
jecxz
push
mov
xchg
ds
mov
pop
mov
in
paddusb
cmp
ja
mov
mov
push
sbb
sarb
add
adc
sub
ficoml
sub
aaa
jo
mov
stos
insl
sbb
add
xor
jne
push
and
pop
lea
ds
inc
pusha
lock
rclb
pop
add
out
cs
loopne
jne
aaa
or
push
into
add
mov
in
inc
xchg
in
pop
cmpsb
cmpsl
pop
stos
xor
cltd
mov
xor
or
test
or
jno
mov
fisttpl
add
add
popa
mov
test
xorl
dec
lret
ds
fiadds
add
or
inc
cmp
in
std
popa
xor
ret
and
xchg
add
mov
cmp
loop
mov
nop
es
dec
or
movsb
call
cmpl
gs
push
dec
cmp
add
dec
js
xor
cld
loopne
and
fwait
movsb
faddl
add
rorl
push
dec
add
js
loope
jp
fcmovnbe
push
push
test
loop
or
arpl
push
inc
jle
sub
jle
pop
pop
adc
cli
in
imul
mov
cmp
rorb
mov
and
stc
adc
mov
adc
scas
in
mov
xor
in
sbb
imul
sarl
testl
and
pop
sahf
pop
cmp
push
add
ret
jae
call
push
adc
push
mov
rcll
ja
fiaddl
push
fs
adc
test
add
out
decb
rcll
inc
push
mov
or
pop
or
add
mov
xor
subb
xchg
ret
mov
cmp
mull
add
and
add
cmovns
inc
or
loopne
push
mov
sub
inc
daa
push
lock
and
lock
ffreep
push
sub
mov
mov
dec
mov
xor
enter
mov
pop
cmp
adc
aam
fcoms
loopne
pop
pop
fcompl
insl
shlb
xor
cmp
aaa
inc
mov
pushl
call
mov
push
ret
shr
movzbl
push
adc
mov
aaa
mov
ret
push
ret
dec
sti
imul
mov
stos
pop
jae
leave
mov
cmpsl
jle
movb
cmp
arpl
xchg
mov
add
repnz
sbb
icebp
push
gs
add
mov
out
jb
xor
loopne
pop
or
add
push
mov
or
ss
xor
or
jmp
scas
sti
jle
push
dec
enter
add
push
push
mov
cmp
clc
data16
js
jg
mov
mov
jmp
jecxz
and
push
cmp
mov
cs
adc
mov
aas
mov
outsb
jecxz
or
mov
cmpsb
adc
sbb
ds
lea
push
sub
mov
subl
sbb
outsl
sarl
and
push
mov
push
pop
jmp
mov
push
cmp
xchg
stos
test
insb
test
cmp
je
int
jnp
xor
jmp
shrb
cld
jne
movsb
rclb
rcr
cmp
adc
mov
push
sbb
lock
add
sbb
inc
hlt
les
cmp
jae
loopne
or
xor
ja
dec
cmp
je
call
push
mov
xorb
push
sub
fcoms
add
jnp
pop
hlt
add
jl
in
cmp
test
add
push
push
xor
aad
js
mov
roll
jmp
sar
into
add
popa
nop
add
mov
sub
hlt
mov
adc
cli
lea
ljmp
lock
or
iret
mov
scas
incb
xchg
add
mov
leave
pop
in
mov
mov
shll
mov
adc
pusha
cmpsl
mov
dec
lahf
inc
test
jb
outsb
sahf
inc
ret
bound
dec
inc
xchg
je
test
js
sahf
xor
inc
inc
dec
hlt
jg
hlt
or
push
je
sub
pop
movb
sub
sbb
jge
xchg
add
inc
jno
sbb
cmp
push
in
sbb
dec
sbb
fmuls
mov
or
out
jmp
jecxz
fdivp
add
push
jl
cld
cmp
jl
repz
push
in
mov
push
jmp
das
loop
inc
xor
test
pop
clc
inc
or
xor
fwait
mov
cmp
mov
fistl
xchg
bound
push
scas
sub
jge
jnp
rorb
adc
push
pop
mov
push
fisubrl
aaa
mov
ret
rcrl
lcall
aam
cmp
aaa
mov
outsl
cmp
mov
pusha
cmp
xor
dec
jne
fidivrl
mov
pop
pop
mov
pop
cmp
cmp
push
jecxz
or
add
add
or
call
xor
jae
mov
test
add
mov
dec
sbb
testb
fildll
ret
je
push
and
sbbl
ljmp
je
dec
xchg
xlat
lret
jae
push
inc
fisubrl
jb
ret
out
mov
mov
xchg
sub
mov
and
icebp
scas
mov
or
fs
jne
or
je
jbe
movb
xor
nop
or
push
push
and
sbb
mov
icebp
addb
or
add
add
test
and
cmpsb
aad
push
out
shlb
adc
fsts
push
ljmp
fmulp
or
mov
or
mov
jbe
pmullw
xchg
test
mov
or
imul
pop
cmpsl
ljmp
sbb
ds
pop
jo
jg
jo
cmovae
push
loop
enter
stos
inc
or
sub
add
pop
loop
push
push
adc
orb
pushl
loopne
or
jmp
jb
dec
jo
add
xchg
jmp
jno
or
adc
dec
lock
mov
xor
loopne
sub
adc
pop
loope
jo
xlat
or
xchg
pop
dec
loope
subl
je
sbb
cmp
add
xor
incl
push
jmp
mov
add
push
addr16
dec
sbb
clc
dec
cmp
test
sbb
or
nop
push
xchg
push
cmp
push
daa
sub
addl
add
pop
hlt
sub
sar
fbstp
or
adc
lcall
je
jo
mov
jb
movq
pop
mov
enter
jl
add
insb
cld
daa
mov
das
cmp
lea
jbe
mov
and
push
leave
inc
sub
sub
je
loope
add
push
push
mov
cmpsb
hlt
in
addr16
dec
add
xchg
add
push
or
dec
inc
add
arpl
aas
outsl
add
adc
and
mov
and
jb
dec
dec
loope
xchg
mov
lea
sbb
shlb
fsubrs
movb
push
je
sbb
rolb
in
or
xorb
fistpll
jo
stos
mov
or
lods
sarl
shlb
in
lcall
jbe
adc
test
push
iret
add
pop
jb
sub
adc
or
or
add
jb
sbb
mov
in
jb
xor
add
jl
pop
adc
dec
imul
xchg
in
xchg
call
fsubrs
add
xchg
fsubrs
test
jno
add
mov
lret
cmpsl
enter
fsts
stos
add
adc
cltd
add
les
and
nop
ficompl
jge
nop
mov
test
mov
mov
pop
test
inc
mov
xchg
sbb
xchg
fsubrl
mov
push
push
cmp
sub
mov
cltd
jmp
je
adc
enter
test
je
adcl
inc
dec
popf
imul
inc
or
pop
enter
mov
or
pushf
jmp
rcrb
insb
cwtl
sbb
or
pop
je
aas
cs
inc
jne
and
out
mov
cltd
pusha
add
sahf
xchg
mov
push
jns
jg
xor
push
push
out
in
jmp
leave
inc
adc
jne
add
ljmp
test
and
lret
cmp
aam
push
movsb
jbe
pop
inc
lods
stos
lock
es
test
pop
gs
leave
adc
lea
enter
daa
adc
and
push
inc
jge
loop
fmulp
push
lea
mov
lods
test
adc
mov
adc
xor
sub
or
sbb
pop
ret
ret
fdivl
jmp
mov
xlat
sbb
int
sub
arpl
add
nop
jns
sti
pop
dec
in
push
in
adc
pop
adc
fstpt
lds
leave
cmp
mov
mov
push
mov
and
and
stc
mov
and
or
push
sbb
sbb
push
add
sbb
pop
adc
sub
outsl
push
push
je
addr16
push
jge
mov
mov
mov
mov
xchg
notb
stc
movups
and
out
push
cmp
popf
cmpl
pusha
inc
push
mov
loope
adc
lcall
or
mov
add
cmp
add
push
xchg
shrb
jmp
push
xor
xchg
loope
sti
jbe
mov
in
adc
frstor
pop
mov
add
add
shll
insl
jmp
cmp
sub
sahf
nop
lret
jmp
sub
add
push
pop
dec
je
into
adc
in
jge
adc
push
push
sbb
inc
and
out
dec
mov
mov
jge
mov
data16
pop
push
or
cmp
adc
jecxz
jne
ljmp
add
popa
std
scas
jmp
push
add
push
mov
pop
or
cs
and
add
pusha
inc
add
mov
add
xchg
xchg
xorl
push
mov
mov
sar
iret
pop
loope
cli
mov
mov
pop
in
hlt
and
push
or
lock
mov
xor
push
push
daa
pop
pushl
or
imul
lea
push
and
imul
inc
sbb
push
jmp
ficompl
jg
dec
sbb
jae
mov
jmp
inc
sbb
push
imul
mov
div
andl
and
jmp
mov
sbb
and
jmp
pop
fisubl
and
insb
jmp
xchg
sbb
sub
xlat
pop
iret
repz
dec
push
pusha
jns
sarl
cmp
cmc
lcall
mov
jg
sbb
mov
mov
add
pushw
and
sbbl
sub
aad
fstl
lea
imul
adc
sub
mov
negl
movb
add
jae
push
or
xchg
xchg
pop
adc
aaa
pop
jnp
push
dec
push
mov
pop
push
lea
push
jne
sub
push
push
add
push
lea
push
aam
dec
cmp
and
cmpsb
add
dec
mov
fs
cltd
lahf
xchg
sahf
fiadds
data16
movsl
mov
dec
adc
pop
sub
sbb
push
pop
mov
inc
jp
add
mov
mov
cwtl
mov
push
je
push
addl
xchg
mov
int3
push
aam
outsl
pop
ret
ljmp
add
jl
inc
xor
pop
add
add
mov
xchg
sub
add
sbb
sbbl
and
subl
jbe
popa
mov
mov
ljmp
das
and
and
pop
andb
pop
mov
and
mov
push
jbe
insb
cmpsl
mov
add
xorb
cmpsl
aas
aad
andl
add
ret
xor
jno
xchg
inc
add
adc
test
push
repz
popf
push
enter
dec
pop
mov
call
in
pop
popa
xchg
push
sar
ret
and
in
dec
and
add
loop
xorb
xor
icebp
push
fdivrl
icebp
lea
testb
sbb
adc
pop
ret
pop
test
push
push
cmp
jecxz
add
mov
pushf
jl
shlb
in
mov
popa
add
stos
cmpsb
inc
jl
lcall
outsb
fists
mov
ret
cmp
xlat
inc
gs
orb
jl
popa
rclb
pop
mov
popa
aam
push
aam
das
in
push
rcll
insb
sbb
cmpsl
ret
sbb
int3
push
icebp
cltd
rcrb
add
fcoml
sub
dec
fildl
cmp
sbb
loopne,pn
dec
pop
sub
sbb
mov
insl
fdivr
ret
mov
mov
add
jbe
xor
adc
fnstsw
adc
int3
cmp
jne
push
sub
xor
cmp
xchg
adc
clc
js
jg
mov
shlb
sbb
je
lea
push
outsl
inc
inc
imul
add
mov
jo
clc
add
push
sbb
cmp
ja
pop
pushl
call
push
or
lods
out
add
mov
sahf
mov
es
shrb
les
inc
push
mov
lock
cmc
shr
push
adc
dec
lea
dec
push
push
mov
and
jge
fimuls
sub
sub
in
dec
jmp
sub
mov
push
sub
in
cmp
push
mov
add
mov
data16
inc
adc
dec
cmp
jne
lahf
dec
inc
xor
jae
jmp
or
push
daa
bound
lock
aas
and
push
or
sub
mov
lock
jecxz
repz
lcall
mov
inc
and
ss
add
and
jl
lock
into
in
and
insl
lcall
push
push
int
negb
imul
mov
mov
pop
mov
fimull
cld
leave
and
push
push
out
cmp
pushf
cld
push
shrb
mov
into
notl
enter
cltd
mov
jl
dec
mov
inc
in
add
mov
inc
and
push
dec
loopne
fbld
push
push
or
aaa
xchg
jp
and
test
inc
push
adc
pop
pop
sbbb
and
push
mov
in
pop
ljmp
idivl
scas
je
cli
fdivrs
cmpl
jne
pushl
sbb
dec
sbb
inc
xor
adc
and
lds
adc
scas
push
push
inc
xor
dec
lahf
dec
lods
sbbb
add
je
push
sbb
je
cmp
dec
into
jbe
mov
push
sahf
cmp
repz
add
dec
add
ret
xchg
inc
add
movsl
nop
xchg
loope
popa
in
nop
pop
jno
push
push
mov
es
xor
sbb
push
jne
movb
jmp
cmp
sub
loop
jne
popf
movsl
fldz
xor
dec
pushf
inc
cwtl
push
pushf
xchg
jo
movb
push
jle
ret
dec
aas
mov
iret
addb
mov
push
sbb
test
push
jecxz
add
test
sbb
lock
mov
and
test
mov
daa
rcr
mov
mov
into
xlat
ds
push
dec
or
adcb
dec
lods
push
stos
fsubl
stos
pop
push
push
adc
mov
xchg
fcoml
push
nop
pop
cmp
iret
push
adc
enter
ret
cwtl
pop
cltd
shrb
cmp
sti
sub
push
idivl
mov
xor
push
push
fmuls
adc
push
xchg
xor
rolb
cmp
add
daa
sbb
push
test
or
adc
dec
and
stc
mov
pusha
adcl
inc
sbb
mov
push
push
jns
popf
xchg
lret
jl
xchg
andb
das
or
fidivs
xor
popf
adc
and
sub
xor
mov
test
nop
aaa
mov
je
inc
cwtl
imul
outsl
inc
fldl
fmull
lods
jmp
out
push
loopne
push
push
aaa
movsl
addb
stos
inc
rcrl
pushf
jbe
and
fiadds
in
dec
out
andl
xlat
fisubs
add
jno
insb
pop
int
out
negl
popa
in
push
cmp
cmp
push
pop
je
pop
popa
sbb
out
fadd
adc
mov
adc
fmuls
add
add
repz
xor
pop
loopne
sbb
test
fiaddl
call
rol
or
push
mov
xlat
push
adc
adc
mov
add
aas
aas
push
jle
add
and
cmp
cmp
cmp
sub
xor
inc
jle
mov
push
jne
cs
sub
addr16
or
push
mov
adc
sbb
ljmp
repz
lret
mov
jmp
fisubrs
add
addl
push
or
mov
pop
pusha
or
push
cmp
call
jmp
fs
popa
push
sbb
xchg
lret
sub
push
mov
and
sbb
cmp
jo
xor
loopne
shr
sbb
insl
xor
clc
andl
xchg
push
or
popf
movb
lea
clc
sub
cmp
xor
cltd
mov
inc
inc
and
lea
push
or
dec
adc
sbb
loope
push
or
add
mov
jge
mov
daa
and
idiv
push
mov
mov
mov
jno
aam
ret
xor
idiv
cs
std
divl
adc
add
jg
mov
adc
insb
jge
add
mull
mov
mov
jg
in
dec
mulb
jge
sbbl
and
pop
lock
mov
dec
cmp
or
xor
lahf
mov
jle
pop
pusha
push
pop
insb
pop
add
xor
sti
sub
clc
movsb
mov
and
lea
cltd
idivl
dec
push
into
jp
xor
test
dec
test
sti
xlat
pop
loopne
ds
jg
fs
xchg
scas
jnp
or
xchg
arpl
mov
test
aad
mov
lahf
xor
sub
sbb
push
inc
lahf
aas
dec
lea
pusha
jl
fbld
pop
xchg
sub
cmp
or
jmp
xlat
nop
or
out
insb
mov
cld
fucomp
fildl
mov
test
jns
faddl
xor
lock
enter
fdivrp
mov
mov
mov
mov
mov
add
pop
add
les
imul
add
push
shlb
or
clc
fidivl
jmp
sub
xchg
cli
mov
movl
mov
add
or
inc
add
or
jle
or
mov
stos
test
cmp
and
add
mov
lods
dec
lret
shlb
cld
inc
hlt
jo
push
jg
clc
lea
xchg
arpl
pop
push
sbb
sbb
bound
je
or
dec
inc
dec
jne
inc
jmp
stos
sahf
stos
mov
dec
mov
shll
into
pop
leave
ret
daa
adc
pushf
les
cmp
roll
nop
sub
data16
imul
in
add
loopne
insb
lea
inc
into
mov
xor
fs
loope
sub
loope
pop
iret
xchg
pop
ret
addr16
fimuls
jne
xor
mov
clc
or
push
sti
mov
outsl
jl
mov
adc
cs
sbb
push
leave
adc
pop
rorb
into
xor
shrb
sbb
fdivrl
or
sbb
inc
mov
push
dec
pop
pop
in
lea
loopne
mov
mov
or
nop
mov
lea
push
push
out
jle
inc
cmp
js
pop
loop
inc
repz
inc
rcr
aad
sub
fs
andl
add
xor
subl
dec
shrl
pop
jne
sub
les
leave
mov
sub
leave
insl
xor
scas
sbb
jb
xor
sbb
dec
ljmp
adc
inc
pop
push
shlb
int3
dec
mov
pop
in
out
pop
and
or
popf
dec
sbb
loopne
mov
scas
jl
mov
pop
or
nop
cli
and
lock
sub
fbstp
mov
pop
mov
orb
and
das
scas
xchg
dec
xor
dec
cmp
cwtd
sub
icebp
inc
push
cld
rorb
inc
sub
das
sarb
clc
setb
test
rorb
add
cmp
stos
je
xor
dec
adc
rol
aam
sub
pop
or
aaa
sub
jno
push
mov
je
push
fldl2t
cmp
sbb
pop
negl
or
sbb
je
es
dec
mov
and
mov
sub
adc
fsubl
in
sub
cmp
cmp
jmp
scas
sbb
shrl
not
push
inc
and
das
push
loopne
nop
push
mov
int
adc
push
mov
inc
stc
inc
push
add
dec
xor
jo
dec
lea
jo
cld
bound
mov
out
imul
jne
adcl
adc
xor
jo
push
sub
int
or
test
mov
bound
adc
jns
jecxz
clc
movl
dec
mov
sbb
dec
and
or
add
pop
pop
adc
add
sub
sbb
add
das
inc
xor
add
inc
inc
sbb
xchg
sti
xchg
pushf
cmp
or
aaa
or
in
lds
mov
mov
std
int3
js
add
fildll
fildll
das
fdivl
push
push
and
int
popf
jnp
add
adc
push
mov
pusha
dec
sub
int
imul
dec
push
shlb
and
add
pop
nop
xchg
cmp
mov
enter
sub
fmuls
hlt
or
dec
sbb
int3
insb
pushl
xchg
lret
mov
or
mov
sub
or
in
clc
aaa
pushl
dec
fcmove
add
imul
add
pop
shlb
lock
jae
popf
sbb
jge
jge
sbb
push
les
push
dec
gs
stos
test
add
xor
popf
jo
mov
mov
in
inc
mov
mov
adc
addr16
push
aam
adc
mov
es
mov
mov
nop
cmp
push
or
xorb
mov
xchg
mov
or
loopne,pt
out
fbstp
fsubrl
pop
push
push
outsl
daa
fcoms
and
jnp
pop
pmuludq
inc
scas
int
adc
or
rcr
scas
pop
push
in
dec
cmpsl
adc
and
imul
mov
jbe
sbb
cmp
mov
mov
add
cmp
jnp
jle
sbb
nop
imul
test
cmp
enter
mov
adc
mov
je
xorb
add
arpl
sbb
xchg
pop
pushl
dec
ret
pop
cmp
lret
jmp
xlat
aad
mov
cmp
mov
xor
xor
sbb
pop
ret
je
and
jae
pushf
sbb
lret
inc
or
loop
dec
mov
jmp
dec
mov
or
sti
mov
js
push
mov
outsb
pushf
jge
add
scas
or
mov
insb
shlb
xchg
sub
mov
jle
fmulp
js
cmp
jge
mov
mov
mov
cmp
addb
or
push
pusha
jle
cmp
fstpt
call
xor
fdivrs
call
fsubr
nop
out
push
sbb
lcall
shl
out
je
pop
movsb
jp
xchg
mov
sbb
inc
lcall
mov
shlb
or
mov
inc
pusha
in
mov
lock
inc
jo
sub
inc
sete
adc
or
sbb
loope
and
addb
adcl
push
xchg
push
or
sti
cli
popf
mov
mov
fdecstp
sub
adc
mov
mov
jge
add
rclb
enter
sub
or
mov
scas
push
bnd
add
dec
add
sbb
fcompl
add
int3
pop
loop
cmp
add
push
js
jl
push
pop
jmp
sti
sbb
add
lock
loope
ret
out
xchg
push
or
mov
je
inc
push
push
pop
mov
pusha
or
push
js
and
bound
fstps
push
jge
mov
fcoms
ss
lret
rcrl
std
fdivs
dec
pop
sub
daa
push
mov
or
jo
ret
mov
jg
add
sub
ss
mov
and
or
mov
outsl
mov
jne
and
sbb
jno
pop
repnz
pop
adc
int
orl
fmull
jmp
xchg
icebp
xchg
ret
imul
repz
lret
adc
in
call
pusha
sbb
lock
and
mov
pusha
insb
push
xorl
pop
pop
arpl
add
mov
inc
shlb
xchg
adc
add
lock
arpl
cs
popf
add
xchg
jle
or
add
jge
adc
inc
push
inc
or
call
jne
pop
or
mov
scas
je
jb
jbe
mov
aaa
pop
push
xchg
xchg
daa
enter
xor
aaa
dec
enter
sbb
jle
adc
sahf
clc
clc
sub
jge
mov
add
add
xor
hlt
add
adc
push
inc
push
mov
xchg
lea
cmp
inc
outsl
leave
sub
dec
jno
xchg
shrb
pop
ret
push
add
add
mov
in
pop
clc
lock
mov
add
mov
in
jmp
shr
mov
hlt
mov
out
or
mov
xchg
sub
add
into
push
push
add
push
outsl
or
and
or
dec
jp
add
rol
add
sub
movsb
sbb
mov
lock
xor
inc
inc
in
jb
out
test
js
das
sub
jg
lahf
aad
rorb
fdivl
sbb
pop
sbb
dec
mov
aaa
cli
popa
rcr
ljmp
insl
in
mov
mov
or
mov
mov
in
sbb
pop
sub
push
mov
cli
addps
adc
push
xor
xor
fbld
pop
jg
jbe
je
xor
sbb
aas
dec
lods
sbb
rsm
push
lea
andl
push
test
in
pop
sub
or
push
or
jbe
pop
push
mov
cmpsb
nop
sbb
xchg
fwait
sbb
cld
pop
mov
or
mov
mov
xchg
xchg
xorl
add
fsubrs
insl
inc
push
push
fisttps
sbb
cltd
in
sbb
psubsw
es
repnz
int
and
and
mov
nop
xchg
inc
callw
mull
test
fcom
jbe
cs
push
add
xor
jl
fstps
inc
push
idiv
cld
mov
jne
xchg
xor
push
sub
outsb
in
cld
xchg
or
and
inc
mov
lds
les
xchg
push
mov
loopne
cmp
ss
in
pusha
ret
pop
jle
ja
andl
mov
or
daa
mov
xchg
pop
sub
add
std
add
xchg
pop
pop
push
push
ds
addr16
movl
dec
bsr
push
inc
stc
xchg
dec
sub
enter
sub
pop
and
data16
push
mov
dec
and
xor
push
xchg
inc
push
cmp
imul
cmp
jns
sbbl
xchg
nop
pop
lret
mov
jns
cltd
jb
rolb
push
mov
pop
aam
cmp
mov
rcll
xchg
xchg
xor
les
or
and
add
fs
push
loopne
push
sahf
int3
jmp
mov
add
test
push
fs
inc
add
add
mov
push
orl
test
js
jge
push
ljmp
sbb
mov
add
push
aam
clc
xchg
addb
iret
pusha
pusha
cmpsl
fs
cmp
pop
icebp
and
inc
pop
mov
and
xchg
adc
sbb
jnp
aaa
adc
mov
pop
lods
aas
xor
jns
bound
jg
call
fs
push
adc
adc
inc
lea
xchg
xor
mov
push
aad
jne
lret
mov
xlat
jl,pn
jmp
sarb
lock
push
jle
cmp
add
xor
mov
add
inc
and
add
push
aam
inc
mov
adcl
add
adc
ss
add
mov
sbb
inc
rorl
lds
mov
dec
dec
test
fldenv
cmp
sbb
movl
popa
fiaddl
ja
lea
cmpsl
cmp
dec
jge
int
inc
adc
dec
stc
xchg
pop
mov
sbb
ret
lea
and
nop
add
or
or
movsl
fsub
stos
add
lea
int
cmp
xchg
cmp
flds
dec
sbb
fstps
push
ret
sbb
push
jae
sbb
mov
sbb
inc
or
int
imul
sbb
and
and
sub
add
push
mov
shll
mov
inc
sbbb
loope
lock
or
test
test
test
inc
mov
adc
adc
xchg
add
iret
lea
pop
xor
and
loopne
jmp
dec
adc
mov
pushf
sahf
or
rorl
lcall
mov
dec
roll
data16
lret
setp
sub
cmp
push
sbb
add
add
or
shll
dec
rcll
inc
push
faddl
inc
inc
pop
nop
or
xchg
nop
or
adc
mov
rolb
push
push
sbb
lods
and
inc
xor
popa
fists
or
adc
and
xor
sub
push
jns
push
stos
pop
imulb
mov
mov
fidivl
sti
jmp
mov
push
push
shll
push
cmp
popf
push
dec
and
cwtl
and
or
add
ljmp
loopne
sbb
adc
push
mov
mov
cmc
dec
cmc
out
mov
jg
into
dec
stos
or
cmpsb
rcrb
clc
xor
call
mov
jge
sti
pop
or
mov
fdivrs
pop
call
pop
mov
xchg
stos
mov
icebp
xchg
adcl
cmp
sub
pop
loopne
sub
mov
pop
or
mov
rclb
in
lea
jb
psubsb
nop
loope
mov
push
mov
inc
or
in
adcb
jl
pop
push
mov
xchg
pop
pop
add
mov
mov
popf
outsl
xor
mov
pop
add
pushf
rcll
rol
loop
cmc
adc
jne
call
push
mov
or
push
cltd
sub
pop
pop
add
sbb
sub
mov
ss
dec
or
xor
nop
dec
cs
or
sub
cltd
add
sbb
adc
sub
call
outsb
daa
mov
aaa
loopne
cli
push
push
mov
out
loopne
mov
cmpl
add
xchg
in
bound
in
jmp
mov
inc
mov
pop
pop
mov
dec
lret
mov
clc
shrl
mov
int3
lods
xor
adc
xlat
adc
mov
fistl
mov
test
sbb
sbb
lods
shlb
dec
adc
inc
or
push
mov
push
stos
sahf
fsts
mov
mov
loopne
mov
fiadds
jne
add
dec
jae
push
arpl
pop
mov
faddp
xchg
fs
lock
pop
dec
inc
mov
cmp
add
add
mov
orb
fbstp
add
adcb
xor
test
adc
xchg
loopne
mov
cli
sbb
mov
and
push
in
jl
mov
jae
adc
xor
pushf
mov
lea
inc
push
fisubs
test
mov
aam
push
insb
in
ljmp
mov
lahf
mov
pop
mov
mov
out
add
lea
lea
into
inc
pop
pop
xor
fdivr
imul
shrl
xchg
and
push
addr16
cmp
or
inc
ret
mov
bound
inc
dec
cmp
push
aam
in
in
pop
lea
lea
adcl
inc
push
clc
jecxz
inc
inc
add
inc
out
pop
das
ss
cmpsl
add
push
daa
cltd
sbb
shll
pop
lea
ss
adc
test
repnz
mov
ja
cmp
mov
sbb
xor
arpl
mov
mov
into
ror
out
lret
test
outsl
mov
es
or
xchg
je
mov
scas
cmp
rolb
xchg
inc
into
or
jns
or
add
mov
mov
arpl
fistpll
xor
gs
pop
imul
mov
test
add
push
pop
mov
xchg
jno
jns
adc
add
xor
test
xchg
pushf
lea
mov
xchg
daa
jo
push
dec
or
mov
dec
enter
fists
imul
sbb
dec
shrb
add
push
push
pop
ds
add
push
jne
inc
ja
test
inc
mov
xor
jecxz
mov
fldt
test
push
pop
sub
lock
sub
jo
adc
add
ret
and
cmp
adc
push
sbb
push
and
cltd
push
rcrl
sldt
bound
cwtl
sbb
mov
push
loopne
loopne
or
loopne
and
ljmp
hlt
and
dec
popa
pop
loope
pop
hlt
or
sbb
mov
jge
xor
js
adc
xchg
fcomps
mov
in
adc
divl
or
leave
cmp
cmp
dec
faddl
push
or
mov
sbb
ret
cmpsl
pop
push
cmp
push
push
fmuls
adc
jmp
push
add
mov
mov
xlat
sbb
jnp
test
sbb
cmp
stc
enter
shll
imul
rorb
jno
clc
call
jmp
mov
jne
push
pop
cmp
je
stos
jbe
adc
or
jle
jecxz
or
ss
inc
or
cwtl
cltd
dec
popf
andl
cwtl
movsb
or
jns
push
pushf
mov
add
push
fs
aam
je
inc
lea
inc
and
orl
cmp
mov
mov
xor
dec
push
cmp
sbb
and
scas
les
rclb
inc
jne
inc
sub
fsubr
push
pop
enter
or
movsl
or
mov
and
mov
mov
sbb
jge
mov
call
push
fcoms
sub
jle
daa
das
call
test
xor
lcall
sbb
fs
inc
cmp
sbb
or
ds
into
int3
arpl
rorb
push
sbb
inc
sqrtps
xchg
lds
jge
sub
mov
adc
cmp
or
rolb
xchg
push
rol
lret
sbb
lcall
adc
loopne
pop
popf
call
add
icebp
js
loop
mov
mov
lcall
add
and
push
sbb
pop
adc
xor
add
pop
xchg
sub
add
mov
and
jo
stos
add
mov
aas
mov
xor
and
rorb
lods
loopne
sbb
mov
or
je
dec
pop
adc
outsb
mov
push
mov
and
addl
ret
mov
pop
and
fcomps
xor
aam
decb
push
cmp
addb
stos
clc
mov
push
cwtl
lock
cs
xchg
xchg
lcall
shrd
leave
mov
out
mov
enter
inc
movsb
dec
pop
or
push
xor
movsl
insb
clc
mov
push
add
cmp
test
popa
test
add
enter
mov
jnp
clc
cli
aam
or
and
jae
fistpl
out
xor
pop
cmpl
fcomps
int3
mov
cmp
pop
push
test
fsubrl
or
inc
ficoml
jp
out
cld
push
repz
cld
je
xchg
xchg
mov
daa
push
pushw
gs
das
add
arpl
push
mov
and
test
or
or
je
sub
imulb
insl
pusha
cmpb
pop
push
mov
mov
sbb
sbb
jb
dec
nop
pushf
cmp
push
push
mov
or
pushf
push
sub
cmp
pop
mov
sub
push
sbb
js
mov
lahf
inc
add
clc
cs
lret
ds
adc
push
scas
outsl
mov
add
lret
dec
hlt
sub
push
arpl
xchg
or
xorb
mov
and
or
fadds
mov
xor
push
cmp
popa
push
mov
mov
fadds
cwtl
test
inc
pop
push
xchg
iret
clc
cli
xchg
inc
pusha
cmp
ja
add
adc
adc
add
add
add
xor
js
dec
scas
push
mov
pop
clc
adc
add
or
xor
insl
xor
or
push
cmp
xchg
outsb
or
mov
and
mov
pop
cmc
cmp
or
dec
inc
adc
mov
sbbb
push
int3
sub
cmp
push
inc
inc
ret
mov
cmp
loope
and
adc
push
jne
sbb
call
movsb
out
mov
add
add
inc
lock
movsl
sbb
add
push
mov
jbe
hlt
mov
loope
movsb
sbb
inc
add
pop
inc
mulb
push
xchg
add
aaa
loopne
pop
ret
jb
mov
add
push
aam
pop
sub
add
pop
add
orl
je
cmpb
addr16
jmp
jnp
and
xorps
fprem
loop
mov
dec
loope
clc
je
jp
mov
sub
ds
push
loopne
stc
xchg
lock
sti
lea
push
lea
push
inc
push
push
add
xor
unpcklps
insb
xor
sbb
fisubrs
mov
cmp
jl
cmp
dec
hlt
int3
xor
sarl
ret
hlt
icebp
sub
push
jle
stos
sbb
mov
lock
jne
dec
outsl
sbb
push
sar
loop
add
add
mov
stos
push
das
out
cld
sub
out
test
out
or
cmp
je
jmp
dec
cmp
lcall
xchg
clc
xchg
mov
movl
adc
push
sar
sbb
out
cmpsl
popa
addl
sub
adc
xchg
psrlq
jg
inc
stc
in
sub
lea
out
sub
mov
push
dec
or
in
out
adc
add
jmp
aad
aam
or
and
push
bound
punpckhbw
sub
mov
jge
daa
rolb
sub
movsl
mov
push
sub
clc
arpl
add
or
ds
cmp
test
jne
call
cmpsl
xchg
out
lock
push
jle
inc
add
lods
orb
arpl
sbb
mov
jl
loope
adc
out
divl
add
cmp
add
or
ret
or
adc
loop
neg
cwtl
jle
pop
xchg
loopne
test
xchg
xor
or
dec
or
sub
xchg
addl
jb
mov
add
jmp
cmp
xorb
push
mov
pop
mov
or
add
adc
mov
xchg
adc
push
push
mov
ficoms
mov
rcrl
aas
inc
clc
sub
iret
insb
je
cmp
test
pusha
fidivrl
inc
jo
jmp
imul
adc
add
dec
decb
data16
icebp
adc
fisttpll
add
fcoms
cmp
mov
roll
push
or
inc
js
sbb
lock
mov
clc
cmp
jne
ds
jecxz
loope
je
push
in
rolb
mov
hlt
adc
dec
popa
sidtl
aam
jmp
stos
jle
std
faddp
jmp
jl
ret
sbb
shlb
jmp
cmp
and
inc
or
jno
cmp
push
inc
cmp
jae
or
or
push
insb
mov
xor
inc
out
pop
pop
adc
into
ret
cmpl
cmp
ja
lea
inc
cli
in
loop
pop
aaa
cltd
cmp
dec
mov
incb
rorb
mov
sub
ljmp
or
jbe
sub
ret
lods
cmp
inc
data16
leave
jecxz
dec
or
or
call
jae
dec
add
scas
jl
xchg
mov
inc
add
mov
jl
sti
or
mov
push
mov
mov
inc
sbb
dec
and
aam
aad
cwtl
fiadds
add
inc
loopne
sbb
ret
cli
mov
or
out
or
dec
sub
js
and
mov
repnz
jbe
addl
addr16
or
inc
lds
mov
jb
dec
adc
loop
pusha
sahf
xchg
jnp
popl
push
mov
mov
call
lea
push
mov
clc
push
lock
cmp
je
push
pop
and
call
adc
pop
das
xor
je
insl
adc
imul
mov
sbb
sti
or
add
cmp
dec
rcll
mov
adc
xchg
lcall
out
sarb
push
sub
jnp
lret
dec
adc
push
test
cs
movsb
pop
ret
xchg
ljmp
xor
xor
add
testb
in
cmp
aam
add
in
cmp
lahf
xchg
cmpsl
adcb
mov
push
in
or
pop
add
out
cli
jp
cmp
add
or
out
jne
test
mov
add
push
push
je
lods
adc
inc
jmp
pop
mov
int
in
pop
mov
aad
add
mov
or
scas
push
arpl
cs
sbb
mov
dec
or
add
inc
jno
mov
js
scas
jno
insb
das
xor
push
or
push
into
movsl
bnd
outsb
xchg
in
xchg
lcall
pop
fcoml
jecxz
je
dec
inc
outsl
sti
adc
or
jns
jbe
loope
roll
jnp
jno
enter
sub
mov
jne
xor
cmpsb
mov
or
dec
pusha
test
mov
jl
mov
fildl
lock
or
int
cmp
add
mov
adc
cmp
cmpsb
pop
inc
adc
neg
out
imul
es
fidivl
ja
sub
sbb
mov
jmp
rcrl
inc
push
movsl
sbb
je
xchg
push
and
add
test
xorl
inc
nop
ja
sbb
lds
add
adc
fadds
loop
push
add
pop
mov
pop
andl
push
dec
push
push
push
xor
pop
data16
sbb
inc
push
pusha
lcall
pop
pop
push
or
cs
sub
push
je
jo
nop
inc
push
insb
push
sub
dec
lahf
cmp
sub
jb
sub
add
cwtl
or
mov
push
jns
ret
insb
or
lods
cld
adc
mov
pop
or
or
outsl
test
mov
shrl
js
lods
aam
sbb
or
inc
std
sub
je
orl
push
pop
test
dec
add
sbb
movsl
fisttps
sbb
sbb
jmp
loopne
pop
pusha
arpl
pop
out
fadd
fdivs
jno
xor
sub
inc
or
push
add
bound
sub
repnz
popf
dec
insl
and
dec
cmp
add
jmp
mov
andb
imull
xchg
popf
pop
and
mov
or
mov
mov
sbb
int3
cmc
adc
iret
orl
mov
lods
leave
and
push
push
sbb
scas
xchg
sbb
push
and
pop
mov
sbbb
xchg
lds
mulb
testl
pop
fiaddl
adc
cmp
or
pop
inc
jbe
sbb
mov
lods
js
ret
pop
repz
sbb
or
jae
rclb
mov
mov
xchg
leave
pop
xchg
js
orb
push
fcompl
sbb
and
lret
and
push
shrb
pop
insb
xor
inc
mov
mov
movsl
ds
mov
shll
shrl
leave
cmp
xor
lea
jae
insb
aad
adc
enter
clc
adc
enter
hlt
mov
push
dec
xor
inc
inc
pop
or
sub
enter
cmp
sbb
movsl
aaa
cmp
leave
pop
sbb
hlt
dec
rcll
jae
mov
inc
pusha
andl
je
inc
or
sbb
mov
jmp
shll
cmp
jge
gs
out
or
push
push
int3
mov
cltd
mov
cs
pop
lods
out
popf
add
lea
push
cs
add
cltd
and
inc
sbb
jo
xor
stos
add
and
xor
and
mov
enter
dec
and
inc
or
push
insl
jg
mov
mov
popa
nop
and
add
mov
sub
add
mov
js
sbb
ret
out
cld
out
push
push
pop
lcall
sbb
fldl
cmp
or
lahf
and
push
nop
nop
sbb
sbb
or
sbb
addr16
or
sbb
fdivr
faddp
fldt
enter
mov
pop
add
sbb
stos
fisttpl
xchg
ret
inc
inc
sbb
add
sub
add
add
pop
sub
and
adc
add
xchg
iret
sub
xor
daa
std
lods
cmpsl
sbb
sbb
and
and
and
iret
test
fistl
ret
dec
adc
repnz
mov
inc
cli
xchg
push
adc
mov
mov
incl
cld
and
das
pushl
mov
hlt
inc
cmp
repz
jg
dec
mov
add
dec
fstpl
inc
push
xchg
adc
sbb
jne
pop
pushf
ret
jb
dec
mov
in
sub
ret
inc
call
or
push
rclb
xchg
push
inc
pop
or
outsl
and
mov
add
xchg
sub
addr16
push
cmp
lahf
xor
or
popa
cmp
adc
test
push
or
dec
dec
in
push
dec
pop
adcl
inc
cmp
sarl
pop
mov
jo
add
icebp
divb
dec
sar
js
adc
xchg
mov
je
cli
cmpsl
jns
test
hlt
lea
push
addl
add
insl
idivb
mov
pop
mov
jne
adc
pop
aas
aam
adcl
shll
inc
jo
fcomps
pushl
lret
xchg
sbb
or
xor
mov
nop
enter
hlt
sbb
add
lods
faddl
push
mov
stos
scas
xchg
popa
jmp
xor
push
outsb
inc
sub
jle
pop
sbb
mov
pusha
jo
inc
insb
shl
or
pop
mov
fstpl
sub
jne
loope
push
movb
call
mov
inc
pop
mov
mov
jns
inc
inc
cmp
push
test
idivb
popa
mov
fs
jne
mov
rcrl
lock
add
sbb
shl
xchg
sbb
sub
add
sbb
mov
cmp
xchg
mov
inc
or
loope
notl
sbb
int3
push
ret
insl
adc
push
stos
push
jne
jmp
push
cmp
and
jne
xorl
ljmp
int
jle
push
add
push
imul
and
loop
mov
rclb
cmp
inc
mov
pop
lods
ljmp
in
cs
imul
sub
mov
pop
test
aam
inc
lret
in
mov
inc
cwtl
cmp
cltd
outsb
mov
xchg
or
cmp
mov
cmpsb
roll
mov
enter
or
out
inc
push
aas
sub
nop
adc
and
nop
iret
shll
mov
cwtl
inc
push
daa
or
sti
hlt
xchg
rorl
or
fwait
push
sbb
adc
fisttpll
xchg
fldt
mov
and
push
mov
in
push
adc
adcb
xchg
and
sub
or
pop
cmp
loopne
mov
loope
stc
xchg
inc
push
mov
or
push
shlb
xor
dec
stos
insl
and
enter
mov
xchg
pop
rolb
jmp
mov
sti
push
dec
inc
pop
rcr
add
xchg
enter
sub
sbb
test
xor
xchg
xor
xlat
adc
test
xor
movsl
mov
pop
jmp
xchg
lock
cmpb
add
sub
fbstp
out
jnp
orl
push
push
pop
addl
insb
and
xchg
lock
lods
jb
inc
mov
dec
and
inc
pop
cmp
push
pop
cmp
jne
outsb
mov
jge
or
cmp
pop
cmp
push
pop
adc
or
pop
and
inc
out
xor
mov
sbb
test
aad
ret
jne
push
imul
int3
clc
mov
add
mov
cmp
jb
fimuls
mov
andl
push
sbb
pop
push
lods
loop
xchg
push
test
loop
sub
out
push
cmp
fsubrs
mov
cmp
pushf
adc
jle
cmp
jae
cmp
and
inc
inc
or
fsubr
aam
out
shrb
and
xor
pop
push
pop
stos
hlt
outsb
pop
enter
std
hlt
dec
xchg
inc
popa
and
orps
add
test
mov
inc
fsubrl
or
dec
aas
jg
imul
rclb
dec
insb
push
push
push
mov
mov
into
enter
sbb
lods
pcmpgtb
fists
test
dec
xchg
adc
push
das
or
leave
push
mov
hlt
xor
push
inc
lcall
movsl
adc
add
jge
aam
dec
xor
cwtl
pop
jae
add
pop
push
adc
outsb
mov
ret
adc
jg
mov
incl
outsb
pop
test
or
or
mov
or
or
cld
ljmp
cmp
push
mov
enter
adc
inc
push
enter
mov
push
enter
dec
pop
imul
enter
dec
or
enter
sub
adc
nop
addr16
call
in
mov
cmp
mov
imul
popl
mov
jae
add
movsl
arpl
push
mov
es
pop
inc
out
sbb
in
sbb
inc
jb
ret
adc
sbb
sbb
push
add
sub
push
jno
jb
cwtl
inc
xor
mov
mov
stos
cmp
dec
pusha
push
mov
clc
mov
lea
mov
jge
shrb
lret
mov
leave
pxor
in
dec
add
inc
add
and
sub
xor
and
fsubl
lcall
pop
add
mov
clc
divb
xchg
jecxz
pop
xlat
dec
in
jno
lea
xchg
mov
mov
cwtl
nop
loope
and
pop
sbb
bound
imul
or
adc
inc
fimuls
mov
lods
add
cld
inc
and
push
repnz
loopne
mov
dec
icebp
mov
out
pop
pop
mov
mov
add
push
repz
push
cmp
pusha
pop
ret
add
out
sbb
xor
sbb
mov
mov
subb
pusha
daa
mov
sub
pop
mov
std
jns
cmpsl
mov
paddusb
popf
mov
add
test
or
call
pop
aad
daa
inc
dec
add
xchg
mov
or
add
imul
ret
mov
lods
faddl
cs
inc
lock
popa
add
outsl
add
out
aas
jg
outsb
mov
xchg
cmpsl
loope
shlb
cmp
push
loopne
mov
sti
ja
jo
pushf
mov
rolb
dec
lock
mov
cmp
push
icebp
sbb
sub
mov
sbb
movl
inc
cmp
adc
nop
fimull
aad
sub
daa
push
add
add
fwait
imul
and
add
in
xor
lea
mov
movsl
cmpsb
sbb
mov
or
ja
jmp
aad
out
pop
test
aaa
sarl
xor
inc
adc
shl
test
lcall
push
je
dec
jne
pusha
pop
push
inc
cmp
inc
insb
out
mov
xchg
shr
and
jmp
movsl
sub
lahf
push
pop
lods
cmpsl
pop
sbb
mov
aam
nop
lahf
test
cmc
pop
inc
sub
je
dec
nop
lea
mov
dec
cmp
mov
xchg
les
test
jge
sti
andl
mov
xor
inc
rcr
push
pushf
test
xchg
cltd
sbb
mov
mov
lea
cmp
jb
adc
or
or
dec
outsb
mov
sub
jge
cmp
add
ja
xchg
ss
pop
sbb
je
mov
xchg
cmc
push
loopne
push
pop
and
mov
aam
cmpps
out
and
sbb
push
jge
fstpl
push
sbb
pop
repnz
clc
mov
addr16
push
inc
xchg
or
movsb
mov
lahf
push
push
sbb
les
cwtl
inc
pushf
repnz
test
stos
lods
pop
or
jb
pop
jo
frstor
cmp
testb
sbb
psubsw
cld
xor
ds
je
push
lock
add
mov
inc
lods
mov
pop
pop
cmpsl
xchg
cmp
es
lock
or
xorl
cld
stos
scas
inc
lea
push
lods
or
push
enter
jo
popa
lea
push
cltd
xchg
mov
push
iret
add
orb
add
jnp
push
push
lods
adc
and
push
cmp
jno
add
jmp
cmp
je
rol
stos
aaa
js
roll
andl
or
ret
int3
loopne
pop
xchg
roll
mov
push
pop
mov
xchg
adc
mov
jmp
add
lcall
cmp
fisubl
fs
inc
aaa
int3
arpl
pop
fsubs
les
incl
adc
mov
mov
mov
hlt
push
mov
xor
mov
inc
loope
rorl
faddl
push
inc
mov
mov
adc
js
and
add
or
and
aaa
movsb
dec
and
dec
push
lret
imul
mov
jp
mov
ret
aaa
imul
pop
add
adc
sub
mov
pop
jge
dec
add
mov
popa
movsb
sub
add
inc
adc
push
and
sub
clc
inc
lea
lret
ja
mov
adc
pop
or
push
ljmp
pop
lods
in
test
dec
jmp
out
mov
or
mov
adc
push
jle
jno
and
jg
ja
jge
test
movsl
mov
jno
pop
pop
cmc
adc
fdivrs
test
mov
xchg
movl
xor
xor
add
popa
or
xor
test
fmuls
out
mov
mov
jp
inc
test
test
dec
jo
enter
jle
cli
and
mov
mov
mov
add
jbe
lea
out
or
mov
daa
clc
ss
fcomps
xchg
mov
or
test
or
sub
fs
mov
shrl
push
pop
jae
stc
imul
mov
mov
cmp
and
insl
add
cmpsl
xchg
push
call
rcr
dec
aad
popf
mov
inc
cmp
addb
ss
jnp
add
mov
ss
es
leave
mov
xchg
cmp
push
sub
in
imul
mov
les
xor
in
jg
adc
jns
enter
or
dec
push
movsb
mov
pop
mov
pop
or
mov
lods
mov
je
icebp
or
xor
mov
adc
or
pop
and
mov
jae
sub
cmpsl
lret
cmp
cmp
rorl
jecxz
and
subl
mov
fisttps
jae
sbb
testl
inc
dec
cmp
jmp
test
mov
das
jae
push
sbb
fistpl
pushf
in
push
mov
js
and
push
sub
subl
push
faddl
xchg
test
test
sbb
sub
adc
sbb
push
sbb
lea
inc
dec
mov
push
jns
mov
push
jns
inc
dec
xor
aam
dec
pop
push
xlat
lods
and
dec
inc
or
pop
pushw
sbb
sbb
pop
mov
test
in
cmp
lea
adcb
pop
xor
or
sub
lea
sti
pop
jb
cli
sbb
inc
sbb
in
pushl
cld
pop
adc
sub
rclb
lods
sub
sub
pusha
push
outsl
ja
pop
mov
xlat
dec
pop
mov
cmp
mov
mov
cmp
cmp
sbb
mov
mov
add
out
in
test
dec
daa
lock
fucom
subb
in
push
mov
lret
dec
pop
push
pop
rclb
cmp
stos
repnz
or
aas
dec
cwtl
fcoml
add
push
xlat
inc
sub
inc
sbb
jns
mov
push
aas
lret
adc
or
stos
fs
aam
cli
insb
dec
cmp
ds
add
xorb
pusha
add
dec
jge
call
mov
add
fstps
je
and
jge
fwait
lret
xchg
cmp
mov
sbb
stc
add
xchg
sub
dec
and
sbb
nop
mov
add
pop
and
jl
in
stc
mov
cmp
inc
sub
imul
pop
sub
add
inc
pop
fsts
lock
jecxz
inc
fidivrs
dec
out
lock
and
push
adc
je
adc
mov
cmpl
and
pop
push
and
add
add
add
adc
pop
or
mov
and
pop
inc
and
or
in
in
enter
push
adc
enter
testl
add
sti
xchg
pop
add
cld
xor
test
pusha
das
outsl
inc
pop
mov
xchg
inc
jo
clc
inc
push
adc
jo
lds
sbb
out
sub
mov
andl
loope
dec
sbb
inc
dec
mov
fsubl
subb
sub
lcall
or
dec
fnstsw
or
lods
stos
xor
push
fcmove
mov
or
cltd
cld
pusha
movsb
shr
mov
xchg
mov
loope
pop
sub
xor
jne
movsb
daa
inc
lea
or
aaa
sub
inc
insl
mov
cld
fstps
or
push
cmp
lock
std
jmp
inc
mov
add
xchg
xchg
pop
je
pop
mov
out
enter
xchg
or
out
rorb
xchg
das
adc
xor
adc
xor
je
mov
push
mov
mov
insl
nop
inc
push
mov
sub
mov
push
mov
popf
pop
popf
push
enter
sub
push
sub
pushf
cmp
add
ss
les
clc
and
cmp
mov
mov
mov
jno
sbb
pop
push
stos
adc
out
je
cwtl
and
cmp
dec
xchg
sub
setle
or
pop
fistpll
or
and
jne
lea
orb
out
add
push
shrl
or
in
inc
inc
divl
je
xchg
jno
cmpsb
icebp
adc
mov
mov
and
adcl
adc
imul
push
aaa
outsl
loop
adc
repz
adc
stc
adc
sub
add
lods
mov
stc
lea
cmpsb
push
cmp
add
push
lret
push
idivl
mov
xor
cmp
cli
pop
inc
cmp
loopne
cmp
cmp
adc
xchg
fdivl
icebp
sbb
pop
loope
cli
xchg
and
jbe
cmp
popf
dec
divl
mov
pushl
mov
push
pusha
xor
mov
nop
addl
fldcw
or
mov
inc
fldl
pop
pop
fists
inc
pop
mov
call
aam
out
sbb
ret
xchg
cmpl
xor
jns
push
push
loop
lea
sub
mov
pop
sbb
cs
mov
call
xlat
test
hlt
icebp
fnstcw
pop
mov
call
popa
cltd
push
xchg
or
daa
jne
xchg
psubusw
add
sub
lock
pop
xlat
idivb
cmpsb
pop
or
frstor
shl
xchg
cld
dec
push
ljmp
push
cmpsb
jbe
das
adc
or
je
and
testl
shll
daa
aad
mov
inc
inc
cmp
or
add
aaa
sbb
mov
leave
mov
enter
int3
mov
jae
imull
cwtl
int3
jo
dec
mov
pop
loopne
shl
sub
pop
sbb
dec
sub
push
fs
mov
lret
xchg
xlat
ja
cwtl
cmp
sub
dec
ljmp
ss
adc
add
xchg
adc
aam
mov
add
pop
mov
testl
xor
pop
push
or
or
cmpsl
ss
pop
mov
mov
cmpsl
cmpsb
jae
mov
pop
dec
icebp
cs
and
lret
mov
and
push
xor
ret
mov
lcall
sarl
push
loop
cmp
push
pop
mov
sbb
xchg
inc
loope
push
test
push
mov
mov
and
shlb
xor
jecxz
adc
jg
or
mov
test
addr16
lea
mov
pop
jb
int
fisttps
in
int
pop
sbb
push
sbb
or
repnz
and
call
pop
inc
and
push
xor
and
mov
ss
iret
push
and
sbb
and
mov
push
jne
and
inc
cmp
jecxz
rorb
js
sub
dec
rcll
test
movsl
xchg
sub
daa
stc
popa
pop
enter
and
sub
and
test
insb
pop
rcll
in
cmp
and
mov
sub
js
lods
xor
ss
insb
xchg
aaa
arpl
psubw
pop
mov
push
push
dec
mov
imul
test
and
pop
das
nop
mov
inc
in
push
jae
clc
adc
or
dec
xchg
sarb
xor
cs
mov
imul
xor
push
ja
rcll
pop
cmp
dec
add
or
inc
or
pusha
lea
fsubrl
sarb
and
inc
lcall
cltd
nop
sbb
adc
cwtl
mov
or
push
xchg
sub
xchg
inc
movsl
push
push
pop
cmp
or
sbb
jo
pop
in
hlt
in
inc
sbb
test
cmp
movsb
mov
in
cli
push
pop
or
repz
fimull
and
dec
and
xchg
out
cmp
in
xchg
adc
pop
lock
adc
add
adc
and
pop
and
or
or
sub
pop
jbe
scas
loopne
add
push
into
or
mov
jl
mov
add
loopne
fisubrl
fsts
pop
adc
mov
fsubrs
rolb
cmp
shrl
add
and
fdivs
sbb
ja
hlt
dec
sub
stos
aaa
xor
movsl
lock
outsl
xchg
inc
aas
pop
push
pop
push
or
pop
push
push
dec
es
pop
adc
push
xchg
rorb
xor
dec
les
aam
int
sbb
push
push
push
icebp
or
push
add
js
and
mov
lock
in
fistps
test
mov
loopne
pop
push
inc
fisttps
sub
fnsave
xlat
adc
hlt
mov
mov
push
mov
sbb
jecxz
dec
int3
push
inc
xchg
int3
mov
vpdpwssd
daa
cltd
push
loop
mov
add
ja
dec
xchg
addb
std
je
rolb
sub
cs
jecxz
popa
call
xor
ds
jae
lods
push
cmp
mov
in
fwait
pop
into
inc
aad
push
pop
cmpsb
dec
push
fsubl
enter
test
mov
call
ror
shr
and
enter
cmpsb
xchg
rorb
loopne
xor
out
imul
sbb
lods
cmp
sarl
add
jb
pop
mov
cmpl
cld
cmp
and
js
inc
cs
clc
addr16
push
pushl
and
icebp
add
fdivs
push
subb
inc
fwait
mov
inc
push
xor
push
inc
rolb
repnz
or
add
ret
mov
es
es
jg
push
enter
test
cmpl
rcll
jne
push
loopne
sarb
mov
ja
jge
mov
mov
jnp
sub
imul
rclb
mov
add
adc
lods
and
push
mov
push
push
andl
pop
add
movl
ds
pop
mov
inc
je
movsl
adc
mov
fildl
push
add
mov
dec
lea
fnstsw
repnz
mov
adc
adc
dec
aad
and
adc
sbb
sarb
mov
pop
fldcw
xor
or
nop
fdivs
add
jae
unpcklps
cs
jne
cmp
adc
push
cmp
loopne
icebp
xor
mov
inc
pop
or
mov
and
outsb
clc
add
xchg
and
iret
push
pushf
or
in
testb
and
mov
cmc
and
inc
inc
in
stc
and
dec
out
jo
jl
addl
xor
pop
fisttpl
dec
adc
add
insb
aaa
xor
adc
mov
mov
adc
orl
jmp
sub
pop
popl
cmp
fs
ret
inc
sbb
xor
push
test
push
jno
xor
movsb
sbb
inc
stos
mov
pop
nop
inc
out
inc
enter
cmp
xchg
out
mov
and
mov
test
sbb
insb
mov
aam
pop
xor
femms
imul
xchg
dec
nop
pop
out
push
mov
pop
call
sub
ja
and
mov
pop
push
test
add
addr16
mov
out
insl
pushf
mov
add
movsl
mov
sub
mov
or
pop
push
mov
mov
in
inc
pop
loop
or
loop
enter
sub
cmp
jge
mov
ret
pop
pop
rcrb
and
loopne
ret
cmp
ja
loop
repz
sub
enter
cmp
pusha
loop
loopne
fnstenv
popf
add
pop
mov
lret
adc
add
sbb
lock
push
andb
mov
xor
dec
jno
dec
call
stc
in
add
sub
addr16
enter
inc
push
inc
dec
int3
cmp
sub
push
cwtl
js
insl
pushf
sub
stos
xor
xor
iret
xbegin
pusha
adc
pop
mov
xchg
lret
stc
add
adc
add
adc
add
lea
fisttps
js
aam
pop
shll
insb
hlt
movsl
push
push
movl
jp
pop
add
push
add
lret
outsl
or
add
pop
lret
leave
leave
or
pop
or
and
or
sbb
rorl
inc
lret
sti
sub
lods
and
push
jmp
sub
and
jecxz
dec
cmp
adc
xor
push
inc
mov
je
fcoms
add
rorb
or
add
dec
andl
dec
imul
or
cmp
sar
dec
iret
inc
movsl
dec
mov
pusha
paddusb
out
adc
cmp
pop
add
popf
icebp
adc
cmp
fcmovb
cld
add
rol
or
dec
aaa
adc
cmp
movsbl
jbe
adc
loope
cltd
jne
add
addl
xor
enterw
sub
leave
and
mov
mov
mov
mov
leave
fdivrs
mov
xor
mov
lret
add
orl
mov
aam
in
adc
jmp
lea
loope
dec
pop
popa
inc
ja
sub
sub
leave
adc
adc
inc
in
rolb
adc
test
mov
sbb
sbb
adc
and
rorb
xchg
jo
pusha
movsl
or
mov
add
mov
fs
popf
das
mov
gs
mov
mov
fisubs
cmp
and
pop
cmp
jb
and
neg
in
lea
pop
push
push
xor
dec
test
bound
daa
push
test
sarl
pop
lret
ret
je
or
push
sbb
js
or
cwtl
iret
add
push
leave
push
fdivr
pop
rcrb
inc
jg
inc
inc
mov
mov
xchg
xchg
dec
cmp
mov
add
scas
sub
or
sub
hlt
or
pop
mov
es
dec
or
xor
xor
adc
fcoms
cmp
imul
add
leave
inc
sub
and
icebp
push
or
fcomi
add
xor
dec
fsubrs
loopne
dec
jmp
inc
dec
bound
sbb
sub
mov
hlt
imul
push
ds
test
frstor
push
add
add
dec
mov
adc
orl
push
jmp
and
dec
sbb
outsl
bound
iret
movb
pop
jl
or
cld
movsl
hlt
or
inc
cmp
push
jecxz
lahf
and
push
dec
fsubrs
das
fists
roll
inc
js
fcmovu
cmp
adc
sbb
dec
mov
fstps
adc
mov
cs
or
mov
adc
out
loop
test
sub
fs
ja
add
lock
push
adc
in
cli
pop
je
cmp
add
repnz
dec
push
sub
movsb
mov
push
adc
fwait
pop
mov
dec
je
lea
sub
aaa
jge
adc
and
add
jb
sub
fmuls
sbb
aad
stos
imul
insl
dec
mov
push
mov
add
cmp
mov
dec
inc
icebp
push
add
or
or
dec
add
mov
bound
push
add
xchg
andl
xchg
jno
fisubl
push
fisubrl
orl
lret
and
ss
or
int
sarb
mov
jl
pushf
adc
jnp
inc
jl
adc
sbbl
out
and
subl
mov
cmp
subl
add
xchg
push
push
sbb
xorl
subb
mov
push
sbb
bound
sbb
jmp
jne
mov
push
and
push
pushf
pusha
xchg
sbb
push
shl
movl
scas
aad
cmp
xchg
push
mov
xlat
mov
imul
jo
das
or
jo
ja
add
sbb
sbb
xchg
pushf
inc
add
outsl
clc
orl
aad
mov
add
dec
lcall
inc
cltd
inc
lcall
into
or
cwtl
xchg
push
pop
adc
add
push
aas
clc
pop
aad
xor
mov
mov
mov
mov
mov
and
add
sub
add
push
pop
xchg
mov
inc
add
gs
mov
mov
rorb
mov
lea
mov
ja
dec
add
add
adc
mov
insb
mov
rolb
lret
imul
inc
xchg
push
lods
or
loopne
xor
and
cld
adc
add
and
dec
in
jo
add
sub
or
or
xchg
sub
lea
test
daa
push
mov
sub
xchg
incl
push
push
lods
xchg
mov
leave
jno
sarb
mov
mov
idivb
xchg
mov
jg
jb
cmp
sub
dec
and
pop
adc
and
or
xchg
pusha
lods
sarl
fwait
dec
dec
popf
loope
mov
hlt
dec
test
push
dec
sbb
adc
mov
pushf
js
sbb
dec
push
call
or
mov
dec
fnsave
inc
jo
sbb
in
add
out
push
xchg
sub
push
sbb
js
push
mull
leave
movsl
add
mov
add
dec
cmp
js
mov
fadd
push
adc
and
add
jmp
arpl
jle
popa
add
movsbw
inc
jg
mov
jne
xchg
fucomi
and
or
or
fwait
dec
jge
xor
inc
jb
add
cmp
jle
and
std
cmp
push
push
idivb
mov
hlt
push
inc
mov
sbb
inc
mov
addl
shl
js
je
lret
push
sub
adc
and
ret
inc
ds
sti
cmp
xor
dec
mov
nop
test
std
test
aas
lea
int
add
fwait
push
xor
xchg
dec
dec
lods
repnz
jo
push
xor
mov
or
xchg
add
cmp
lcall
pop
lcall
cmp
dec
fdivs
xchg
mov
imul
fmull
pop
pop
repz
sbb
dec
and
lock
shll
inc
xor
jo
or
jmp
inc
mov
fucom
rolb
pop
dec
cmp
faddl
out
sub
cltd
sub
pop
add
sarl
leave
add
pop
je
add
in
mov
movsl
loopne
ret
mov
lods
ljmp
or
inc
mov
mov
rorb
shrl
mov
pop
call
dec
cmp
mov
sbb
and
ret
push
dec
or
add
popa
xlat
push
and
mov
cmp
hlt
push
in
cmp
adc
mov
mov
xlat
mov
jno
xchg
das
push
adc
lcall
push
repnz
inc
test
notl
xor
shll
pushf
test
icebp
mov
inc
test
clc
xchg
xor
icebp
push
inc
push
mov
lods
adcl
xor
call
cmc
mov
stos
mov
leave
daa
or
or
adc
andb
les
and
push
mov
add
outsb
mov
mov
add
xlat
or
in
push
ret
add
mov
loope
test
jne
arpl
mov
cmp
dec
arpl
pop
repnz
pushf
in
loop
xchg
nop
sarb
in
lret
jb
push
add
or
adc
push
mov
movl
sbb
gs
pop
dec
js
cltd
mov
dec
adc
mov
mov
adc
push
mov
andb
leave
dec
adcb
adc
popl
rclb
mov
pop
das
mov
inc
cmp
adc
mov
dec
test
jae
and
pop
adcl
test
cmp
xor
dec
xor
push
adc
mov
movl
add
or
jnp
jno
inc
dec
inc
pop
inc
pop
add
insb
mov
shlb
push
int3
shr
xor
leave
addr16
negb
add
mov
dec
push
pop
jo
es
ret
mov
das
sarl
sbb
sbb
sub
ss
jge
add
movsl
jo
in
in
adc
xor
loopne
movsb
pop
popa
add
add
sarl
or
add
mov
ss
aas
call
adc
push
and
inc
inc
mov
jp
hlt
jb
sub
lods
fwait
inc
sub
aam
clc
sub
lcall
sbb
push
push
push
push
test
aam
cwtl
jl
xor
mov
das
xor
jne
stos
icebp
xlat
scas
adc
mov
push
cmp
movsb
inc
sub
in
movsl
test
push
cmp
jne
mov
and
mov
rolb
push
mov
ds
rorb
sub
sbb
pop
and
xchg
add
dec
rcll
popa
repnz
xchg
nop
mov
sub
adc
jbe
xor
cs
pop
xchg
and
inc
add
jnp
cld
jmp
push
sub
inc
or
xchg
js
cmp
mov
adc
jge
lahf
pushf
jmp
push
inc
cwtl
lcall
in
sbb
hlt
adc
jns
faddl
test
loope
mov
sahf
cld
mov
imul
lods
std
pop
xchg
adcb
stc
or
cmp
js
add
push
in
jne
xor
xchg
xchg
sbb
jb
mov
popf
enter
adc
rolb
sbb
jnp
adc
pop
les
mov
adc
cs
ja
and
cmp
or
jg
push
stos
push
pop
pushl
sbbl
pop
inc
jecxz
xchg
or
adc
xchg
adc
add
les
cwtl
lods
mov
rol
add
cmp
popf
adc
js
sub
outsl
xchg
idivl
inc
movsl
enter
mov
dec
push
cltd
or
xchg
iret
sub
loop
test
push
push
xlat
xchg
inc
sbb
pop
cmp
or
jns
mov
addr16
xchg
incb
and
pop
cmp
in
push
cmp
fwait
cmp
ss
xchg
jne
pop
cmpl
ja
ret
xchg
inc
and
dec
push
push
push
and
pop
push
mov
mov
sbb
add
out
rcll
sbb
and
add
add
jne
mov
push
hlt
jg
icebp
add
adc
orl
push
jbe
xor
mov
cltd
or
ja
jne
mov
jb
mov
stos
insb
jl
jnp
or
add
or
ja
loopne
shlb
add
sti
outsl
dec
add
negb
rolb
dec
outsl
cmp
mov
in
sti
xor
or
stos
jmp
clc
jmp
and
dec
stos
je
shrl
jge
mov
int3
mov
aas
xor
push
mov
sub
push
rcrb
push
push
cmp
add
dec
inc
aam
imul
push
add
pop
dec
pop
cs
cmp
add
xchg
clc
dec
fcomi
jmp
sbb
or
pop
int3
je
pop
adc
pop
ss
int3
pop
push
sub
adc
and
loopne
jmp
nop
push
fisttps
je
push
mov
arpl
clc
xchg
add
mov
sub
or
dec
push
inc
and
mov
sbb
aas
cmp
pop
jp
cmp
sbbl
outsb
push
fwait
out
and
inc
mov
sub
cmp
adc
loope
andl
fcoms
bound
aas
mov
loopne
and
in
mov
push
inc
nop
lret
mov
scas
adcb
outsl
and
sbb
das
int
mov
cmp
dec
add
cltd
sub
por
jl
mov
test
repnz
and
push
addr16
cltd
shrb
popf
jno
push
sarl
cmpsl
cmp
or
clc
pusha
fchs
jmp
test
pop
lods
pusha
bound
push
loopne
or
pop
mov
sarl
jae
sub
mov
int
mov
sbb
fs
jecxz
fs
and
ret
adc
es
out
mov
mov
dec
sbbb
adc
add
idivl
add
cmpw
sbb
cmpb
pop
mov
push
push
add
ljmp
in
pop
push
pop
mov
add
sar
push
dec
mov
je
jl
sub
add
or
adc
adc
jns
inc
pop
adc
or
inc
push
xor
and
mov
mov
inc
add
shlb
pusha
jne
push
dec
push
loopne
pusha
xor
jl
sub
jmp
jg
andb
push
lcall
dec
movzwl
cmpl
outsl
out
pop
add
pop
or
jns
inc
jae
inc
or
dec
sti
rclb
sbb
cmp
inc
nop
lret
add
ret
xchg
fcmove
mov
mov
xor
jb
jo
xor
push
fs
inc
in
ret
pop
push
ret
jl
push
pop
fsubs
inc
aam
add
pop
sub
mov
adc
fs
pop
bound
hlt
jne
jb
cmpsl
ret
sbb
dec
push
cmp
in
jmp
add
pop
push
pop
push
dec
push
inc
push
xor
jo
inc
lret
addl
lock
nop
xchg
inc
adc
int3
loopne
imul
insl
sub
push
sbb
mov
push
and
je
cmp
rclb
imul
icebp
adc
sub
sbb
push
sub
sbb
pop
cs
rol
lods
inc
fisttpll
push
xor
lods
shll
push
jns
adc
jne
dec
inc
mov
or
sub
sbb
push
inc
outsl
loope
lods
call
adc
ficomps
lock
test
inc
or
shlb
pop
xor
test
cmp
les
mov
sbb
dec
cmpsl
mov
iret
mov
xchg
aam
cmpsb
repnz
add
lret
les
sub
bound
sub
nop
xchg
sbb
add
add
cmp
ret
shll
or
mov
mov
cmp
inc
out
cltd
js
stc
pop
dec
push
jns
push
cmp
sub
push
test
or
and
shlb
add
cld
pop
or
test
pop
dec
daa
pushf
push
cmpl
loopne
add
pop
je
or
pop
mov
mov
mov
push
jge
leave
add
movsb
out
aad
in
das
test
jb
xchg
stos
and
cmp
xchg
xor
jl
subl
sbb
and
loopne
cmp
and
dec
mov
imul
movsb
push
sub
xchg
add
or
xchg
push
and
push
adc
jge
scas
push
shll
sub
rclb
push
pop
mov
pop
in
push
fisttpll
sbb
jmp
incl
ja
les
icebp
jmp
aaa
sbb
hlt
movsl
loopne
jecxz
stos
sbb
in
in
roll
xchg
xor
rcll
dec
stos
mov
stc
in
sub
add
dec
mov
push
incl
popa
inc
jmp
cli
dec
cmp
lret
push
outsl
and
orl
adc
lahf
in
dec
cs
and
adc
sbb
shl
mov
clc
mov
add
mov
inc
cmp
pop
cmc
dec
xchg
dec
mov
add
mov
enter
jno
jae
sub
loop
xchg
sub
rclb
push
js
jb
icebp
and
jp
lea
jmp
push
push
das
or
pop
push
pop
pop
jb
loope
mov
adc
pop
mov
inc
dec
andb
ret
ret
jb
mov
in
and
mov
push
dec
cvtpi2ps
inc
sub
inc
inc
pop
adcl
jbe
pusha
add
lea
xor
add
outsl
jnp
mov
jmp
cs
add
addr16
daa
add
dec
sbb
adc
sub
xchg
mov
and
sbb
lods
push
mov
repz
cwtl
cmp
pop
ret
test
push
mov
dec
aas
mov
test
push
dec
sub
push
or
push
adc
rcrb
inc
sahf
sbb
inc
outsl
shlb
fs
add
out
popf
add
mov
dec
and
cmpb
dec
addb
jne
mov
adc
and
jne
push
call
sbb
imul
mov
sbb
mov
subb
inc
sub
xchg
fdivs
inc
xor
fwait
jmp
mov
test
ret
push
dec
push
mov
arpl
call
jp
movsb
adc
xor
and
xor
aaa
divb
subl
scas
add
pop
jge
jge
sbb
adc
add
xchg
dec
int3
clc
xchg
rclb
add
xor
sub
inc
ret
addr16
sbb
dec
mov
or
sbb
rep
cmc
lahf
adc
jge
pop
movsl
cmpsb
add
daa
inc
mov
xchg
cli
in
repz
mov
xchg
in
movsl
mov
push
hlt
mov
add
dec
push
or
inc
clc
jno
dec
shr
inc
aam
rorl
mov
pop
movsl
movsb
ret
push
adc
movsb
push
push
jb
rolb
cwtl
call
adc
hlt
ret
shll
inc
lret
add
enter
outsb
xchg
fists
sbb
addl
push
aaa
adc
add
test
mov
vpaddd
mov
test
inc
cmp
aaa
lea
mov
mov
fwait
les
fsts
jge
push
push
out
adc
jne
cmp
pop
jae
push
adc
jns
push
fdivl
dec
xor
outsb
clc
push
xor
pop
sbb
adc
or
hlt
xor
sbb
xor
jmp
rclb
pop
testb
mov
pop
lods
push
xor
or
push
sub
icebp
cmpsb
pop
repz
mov
adc
je
lods
xchg
push
int3
adcl
pop
add
or
mov
jle
cmp
jbe
adc
cmp
jmp
push
jg
lods
xorl
out
pop
lret
js
loop
int3
mov
aam
push
xor
pop
and
js
mov
push
adc
outsl
xlat
rcrb
inc
push
sub
dec
and
fisttpl
idivl
gs
jp
mov
pop
or
xor
and
jmp
cmp
jne
xor
enter
scas
adc
mov
clc
ret
daa
add
mov
push
jne
push
jb
or
dec
jp
cmp
or
pushf
jne
insb
cmc
xor
push
push
and
out
js
mov
mul
seto
neg
or
push
mov
adc
mov
ror
cmp
popa
mov
in
stos
aas
jbe
in
lcall
jb
push
sbb
or
xor
xchg
das
push
jbe
mov
lret
je
mov
add
es
out
pop
nop
push
push
lret
xor
and
mov
xor
repz
or
dec
xchg
movsl
xor
or
adc
jne
cmpsl
out
repnz
cmpsl
in
decb
adc
insl
mov
enter
xchg
shrb
pop
mov
in
pop
and
sbb
sbb
icebp
add
popl
hlt
cmp
adc
xor
movsl
or
pop
mov
dec
movsl
adc
pusha
xchg
pop
insl
jecxz
fcompl
xchg
aas
xor
nop
incl
mov
cwtl
dec
sub
sbb
push
adc
xchg
push
cwtl
sbb
adc
loop
push
push
and
cmp
pop
int3
cmp
into
and
cmp
xchg
or
xchg
and
push
or
les
push
push
jb
and
stos
and
push
sub
dec
cwtl
cmc
inc
cmp
mov
test
gs
aaa
push
es
ljmp
loope
dec
pop
sbb
and
mov
fstps
pop
mov
dec
les
inc
jecxz
mov
push
leave
sub
fistpl
imul
mov
inc
xor
add
add
iret
and
dec
add
fdivl
push
pop
xchg
sti
xchg
or
pop
and
int
add
lea
jae
in
pop
sub
shll
and
and
push
stos
mov
or
lock
push
push
adc
add
xor
cmpb
cltd
pop
enter
jnp
mov
mov
dec
cmp
sub
or
mov
fld
sub
out
mov
roll
mov
push
jg
hlt
clc
adcl
js
pop
or
test
insb
mov
jno
and
xchg
push
adc
lea
add
in
test
jecxz
and
add
mov
and
sub
sbb
imul
add
sub
mulb
sub
inc
clc
lds
imul
adc
add
or
cmp
mov
push
xchg
add
lods
nop
and
dec
or
adc
dec
cs
jno
push
std
sbb
jae
pop
pop
jb
or
adc
sbb
call
xorl
aad
sarl
inc
shlb
mov
lock
les
push
pop
pop
xchg
add
sbb
in
movsl
xchg
or
imull
push
adc
test
cmp
test
or
add
invd
fst
xchg
sub
jge
mov
mov
out
xchg
scas
fld
cmp
insb
pop
cmpsl
jnp
mov
mov
lock
xor
lahf
or
add
arpl
push
dec
jmp
xchg
scas
add
stos
scas
popa
xchg
fwait
loope
lret
and
fwait
mov
loop
or
ja
inc
push
frstor
imul
cmp
fs
add
loope
fstpl
daa
lahf
add
xor
lods
or
je
cmpsb
scas
sbb
pushf
push
es
movsb
dec
jns
push
dec
jae
pop
aad
sbb
pop
sub
mov
cld
icebp
mov
pop
dec
sub
stos
in
sbb
xchg
enter
scas
call
mov
push
push
add
adc
mov
imul
and
data16
xor
xchg
dec
loop
jns
or
jbe
inc
pop
leave
pop
cwtl
or
movsl
jecxz
jmp
adc
pop
mov
flds
mov
or
and
add
aas
or
and
shll
mov
bound
lock
test
pusha
cmp
and
insl
out
sbb
xchg
or
shl
push
sub
xchg
fisubs
cmp
push
xchg
jo
mov
lea
jae
daa
adc
pop
push
xchg
bound
sub
sbb
adc
adc
pop
add
add
add
jo
lahf
or
pop
inc
mov
jmp
fwait
add
inc
call
bnd
pop
push
pop
ret
or
jne,pn
add
lock
xchg
int3
add
push
xor
xor
sub
inc
lods
lds
push
xor
push
lods
sti
test
sbb
and
xlat
pop
pop
dec
out
pusha
and
adc
mov
mov
or
test
or
xor
sbb
rcrb
mov
push
pop
jmp
getsec
dec
imul
add
insb
test
dec
inc
and
cmp
jnp
inc
mov
test
push
int
inc
lods
pop
fsubl
add
sbb
push
and
xor
leave
push
add
hlt
lods
sub
sbb
inc
dec
ficoml
add
xchg
sub
cli
inc
pop
lcall
loope
jg
and
add
movzwl
add
sub
pusha
pop
imul
mov
add
pop
inc
sbb
test
int
inc
or
xor
add
push
nop
dec
xchg
push
xchg
xchg
mov
mov
push
sub
daa
jne
inc
cmp
sub
pop
iret
dec
arpl
insb
push
jnp
lock
je
or
mov
cltd
push
sbb
int3
jno
sbb
xor
jb
sbb
add
and
dec
xor
cmpsl
rcl
mov
jg
or
xor
imul
inc
in
or
mov
les
cmp
or
and
insb
out
repnz
xor
loopne
or
jmp
push
cmpb
mov
and
xchg
out
adc
cli
add
jl
adc
in
mov
inc
adc
into
adcl
outsl
ds
pop
cmp
pop
mov
nop
push
and
daa
vprotb
dec
jl
or
insl
sub
mov
adc
push
pusha
sub
push
lcall
scas
fisubrl
push
mov
aaa
and
pop
pop
jmp
fadds
mov
adc
sbb
ret
pop
and
pop
jp
pop
mov
sub
sub
xlat
or
xor
adc
les
rcll
pop
jge
es
xor
pop
xor
mov
dec
mov
push
xchg
dec
enter
push
lds
sbb
inc
lcall
mov
jmp
add
jg
adc
sbb
fistl
add
fcompl
push
pusha
cwtl
sbb
adcl
jno
mov
or
add
adc
jbe
je
adc
scas
mov
sub
mov
enter
jbe
xor
cmp
icebp
push
popa
iret
push
jl
mov
sbb
and
push
mov
mov
fisubs
test
movsb
push
jno
filds
repnz
nop
xchg
cmp
lods
loop
fbstp
sbb
jp
cli
add
popa
inc
es
pop
jb
pop
and
jb
push
ss
mov
aaa
or
outsl
add
jae
sub
and
dec
adc
adc
test
loopne
pop
lods
xorb
pop
mov
pop
imul
inc
jge
loopne
push
pop
mov
dec
sbb
jmp
int
and
ja
cmp
inc
push
lcall
roll
insl
adc
and
adc
movsl
and
pop
and
test
push
or
add
and
enter
jo
inc
out
repz
jno
lds
incl
or
fisubs
pop
mov
test
and
push
or
push
test
add
cmpsl
aaa
movsb
fisttps
daa
and
cld
cs
das
rcll
mov
jge
jb
push
dec
lds
jno
std
add
push
mov
dec
fists
aaa
push
jge
jne
mov
lods
cwtl
insl
fisttps
mov
push
inc
scas
int
and
sbb
sbb
add
fs
jp
cmp
push
and
pop
cmc
mov
jne
jmp
scas
imul
repnz
cmc
add
xchg
and
or
pop
cmpb
adc
dec
dec
inc
pop
mov
das
and
mov
push
insb
push
mov
les
mov
popa
pop
xchg
add
test
mov
sub
fisttpl
sub
test
sbb
bound
daa
add
dec
adc
push
flds
scas
dec
loope
sbb
pop
cwtl
push
rolb
test
lods
mov
mov
bound
pop
mov
icebp
pop
cltd
pop
or
adc
inc
sbb
pop
pop
in
jne
cmpsl
rcl
lahf
fnstcw
outsb
cld
mov
pop
testl
sbb
adc
dec
addl
in
push
inc
add
push
adc
aam
sbb
mov
jns
add
or
dec
add
mov
adc
adc
les
xchg
and
sbb
aaa
sbb
pusha
sbb
and
ja
arpl
ss
xchg
mov
iret
ja
or
push
movsl
lcall
sub
adcl
jo
or
outsb
fisttpll
jmp
and
dec
xor
sub
jmp
jbe
aam
push
dec
rcll
mov
push
push
adc
ficomps
rcr
or
bound
sub
pusha
push
mov
test
fwait
inc
and
cld
mov
mov
ret
sub
inc
sbb
into
push
clc
dec
adc
inc
pop
sub
cmp
es
outsl
inc
push
xchg
insb
adc
pop
sbb
xchg
cmpsb
and
pop
sub
add
sub
pop
add
push
jle
sbb
loop
jne
das
fcomps
insl
mov
adc
cmp
push
jg
push
les
dec
mov
pop
pop
test
inc
icebp
pusha
sbb
pop
push
ss
push
push
cs
fcmove
push
inc
pop
add
push
je
and
push
inc
ret
pop
jle
xor
bound
mov
add
ret
nop
sahf
mov
xor
or
test
faddl
mov
lods
fidivl
mov
sub
sub
or
mov
push
mov
pop
repz
push
jge
lock
push
aas
pop
lods
mov
imul
mov
push
sub
sub
fnstcw
dec
iret
jo
pop
inc
sbbb
dec
sbb
add
sub
xchg
dec
addr16
les
push
xchg
jecxz
lret
mov
nop
shl
push
movsl
addr16
jo
bound
stos
je
push
popf
testl
jmp
test
or
in
mov
hlt
or
movsl
setp
aas
or
adc
addr16
call
ret
add
orb
and
lahf
iret
or
xchg
adc
xchg
sbb
cs
or
push
daa
sub
js
stos
mov
das
inc
xor
push
ret
pop
pop
xor
cld
aas
jb
iret
push
sub
lea
push
adc
mov
push
inc
jnp
pop
fsubrs
and
lds
ret
jo
leave
cs
hlt
les
sti
pop
ret
xor
xor
push
gs
adc
adc
dec
sub
push
roll
xchg
mov
ret
mov
inc
dec
mov
xor
pop
fcoml
cmp
push
inc
pop
or
outsl
movsb
mov
rcrl
fwait
lods
push
add
int3
nop
push
mov
cwtl
dec
sub
nop
call
inc
xorl
les
adc
std
rcll
imul
ss
add
inc
pop
push
imul
cld
push
test
fisttpll
add
adcb
orb
mov
nop
xor
loopne
pop
and
xor
xchg
pop
arpl
lods
stos
in
add
js
dec
loop
jg
xor
inc
adc
inc
adc
in
sub
loop
push
pop
in
adc
sub
jne
pop
pop
bound
push
sbb
clc
push
pop
sbb
add
pop
dec
mov
push
test
mov
popf
movsb
cld
bound
jle
and
mov
pop
sub
inc
cs
inc
push
sub
pop
xchg
adc
bound
inc
movl
fimull
adc
fldz
and
fwait
pop
roll
and
cmp
and
sub
pop
xor
cmp
xor
fildl
cmp
jmp
das
sarb
mov
testb
inc
cmpsb
add
andl
aam
les
inc
cmp
adc
push
push
push
orb
push
fcmovb
lcall
ret
shlb
pop
fmuls
mov
js
in
add
sub
sbb
fsubs
mov
jnp
or
xor
adc
je
push
xchg
pop
fwait
pop
jne
or
or
mov
sbb
and
or
or
jg
jle
push
popa
mov
nop
cld
jbe
mov
cmp
jl
push
cmp
push
cmp
jle
cmp
mov
jle
cmp
cmp
cmp
mov
mov
cld
inc
add
push
add
inc
jmp
outsb
push
movw
or
or
mov
xchg
lahf
clc
iret
mov
dec
fwait
inc
or
fs
pop
idiv
imul
call
pop
xor
xor
xor
mov
adc
mov
jns
lret
xor
inc
lock
das
addb
add
cmp
push
cld
outsb
push
push
mov
xor
sbb
ret
dec
mov
dec
and
dec
fists
sub
fwait
sub
jnp
add
dec
movsl
or
adc
and
adc
xchg
pushf
push
add
orb
mov
inc
sub
and
adc
cmp
ret
push
sbb
dec
outsb
mov
andl
in
pop
add
and
sub
pop
add
leave
orb
cmp
and
pop
adc
cmp
jo
mov
mov
add
xor
shlb
mov
inc
sahf
xchg
aam
in
add
loopne
and
lea
mov
rclb
stos
nop
lods
xchg
add
add
enter
mov
pop
mov
adc
add
addr16
adcb
mov
xchg
add
push
and
data16
push
sbb
xchg
adc
shr
adc
or
inc
sbb
in
mov
sbb
repz
stos
jo
sbb
add
nop
or
mov
jmp
js
or
stos
xorb
and
sbb
addr16
fildl
sbbb
inc
popa
shrl
inc
or
mov
mov
sbb
or
lods
xor
shll
sbb
daa
xlat
dec
and
sub
popa
mov
ficoml
enter
sbb
imul
sbb
stc
add
and
pop
pushf
adc
imul
cmp
sub
or
add
adcl
ljmp
xor
adc
and
adc
push
cmp
in
push
sbbb
std
cmp
dec
sub
fld
sub
push
leave
and
movsb
push
add
add
orb
mov
popf
adc
add
adc
or
cwtl
dec
adc
pop
leave
adc
and
mov
pop
add
adc
pop
add
or
add
hlt
inc
or
adc
test
mov
xchg
sbb
dec
test
loopne
push
inc
push
shrl
lea
add
in
dec
insb
pop
mov
and
or
add
pop
push
in
lret
mov
jo
adc
loope
mov
pop
fwait
add
mov
mov
xor
mov
xchg
shll
adc
push
mov
and
jo
pusha
mov
out
adc
inc
add
push
icebp
or
enter
add
add
sub
aaa
rolb
inc
sbb
rorb
out
xor
mov
adc
fs
aad
test
and
jecxz
outsb
adc
add
cmpsl
in
cmpsb
hlt
add
cmpsb
mov
add
test
or
add
shrb
aaa
lock
or
and
scas
or
push
fistl
sub
fs
or
xchg
and
and
jb
xchg
jbe
pminsw
jne
xor
icebp
sbb
mov
mov
mov
inc
sbb
sbb
ret
out
cli
push
addr16
rolb
inc
and
outsb
cwtl
test
inc
jbe
and
and
jbe
and
mov
lods
jbe
add
in
shrb
into
mov
adc
stos
xor
sbb
lock
clc
lret
sbb
push
pop
les
or
or
insb
pop
sbb
push
popa
xchg
jne
sbb
push
insl
xor
mov
rol
popa
xchg
add
lcall
fstps
or
pop
push
add
xlat
cmp
dec
lock
fildl
fildl
dec
push
xor
fs
dec
inc
sbb
mov
pusha
mov
mov
pusha
ja
and
cmp
add
and
xlat
add
pushf
adc
iret
jae
pop
pop
xor
dec
pop
mov
cmp
jg
adc
pop
lods
add
or
or
push
imul
mov
or
mov
xchg
add
jmp
scas
subb
push
pop
jno
mov
pop
or
out
lea
and
push
je,pt
cmp
jle
cli
dec
shlb
ffreep
jecxz
add
adc
xor
inc
add
inc
dec
jl
push
pop
loop
xchg
pushl
xchg
cmp
push
inc
dec
cmpsl
jle
or
xchg
inc
or
xchg
inc
inc
push
adc
fisubl
sbb
push
xor
in
xorb
or
out
repnz
and
or
add
ja
mov
sub
jo
xchg
outsb
nop
sub
xchg
push
call
xchg
add
inc
push
sbb
loopne
les
nop
in
loope
add
pop
push
hlt
ds
push
push
fldl
push
sbb
inc
mov
sbb
and
xor
fstpl
pop
jbe
insl
movsl
test
or
addr16
jnp
xchg
add
and
loope
fsubrp
pop
pop
cmpl
into
in
sub
pop
sbb
repnz
sbb
fs
in
mov
rolb
or
clc
pop
cmp
dec
loop
lods
movl
rcrb
in
mov
mov
dec
mov
inc
jmp
sbb
shlb
scas
sub
or
ficoml
adc
cmpsl
ffreep
jbe
shll
fld
adc
dec
leave
mov
jge
sahf
adc
je
push
cmpb
into
test
push
or
dec
add
call
or
cmp
mov
jbe
cmp
xor
inc
iret
lods
adc
sub
jnp
ja
cmp
es
push
mov
push
insb
insb
adc
and
inc
pop
mov
movl
shlb
sbb
lahf
xchg
sahf
sub
push
ret
xchg
push
xor
jnp
popf
or
mov
mov
lcall
enter
push
inc
cli
mov
mov
lock
sbb
leave
shld
add
add
dec
ja
jb
ja
lea
push
push
icebp
push
cs
je
xor
or
or
bts
or
push
mov
push
add
push
clc
in
rcrl
or
or
cli
mov
push
lods
arpl
test
add
pop
pop
cmp
xchg
mov
adc
and
mov
test
js
insb
mov
pushf
pop
arpl
ja
xorb
ret
loop
mov
lea
push
adc
sub
imul
nop
jle
jle
inc
cmpw
imull
jne
pop
adc
inc
inc
cld
fidivl
mov
push
daa
jmp
push
push
jl
outsl
mov
jns
aas
push
xor
mov
sti
jg
stc
std
mov
or
push
mov
out
push
or
push
push
add
loopne
and
add
xor
or
xchg
or
pop
sub
add
or
add
rolb
adc
in
jno
and
and
sbb
lods
or
in
jle
add
lods
out
xor
inc
cmp
push
les
jne
loope
pop
jnp
dec
add
xor
xor
je
ss
repnz
ret
nop
iret
in
lds
xchg
inc
daa
jns
cwtl
lods
xchg
push
or
shrl
lock
sbb
cmp
in
or
xchg
rcr
dec
ljmp
loopne
rcl
jae
fcmovnbe
cmp
std
xlat
test
inc
mov
xor
mov
xor
outsl
or
dec
aaa
xchg
push
adc
or
aad
addl
orl
pop
xchg
or
test
out
jno
or
pop
je
lret
xchg
and
stos
cmp
add
flds
loopne
adc
loope
lods
nop
dec
shlb
push
test
mov
and
imul
fstpl
cmp
pop
ret
xchg
or
adc
xchg
outsl
data16
or
movsb
dec
ljmp
inc
popf
mov
fisubs
or
pusha
dec
aaa
fwait
and
inc
repnz
mov
int
mov
pop
xchg
push
leave
add
and
ja
push
or
pop
les
or
or
push
adc
popa
and
ljmp
shll
pop
lahf
repnz
cmpsl
add
ss
add
enter
adc
add
add
cwtl
add
fs
decl
aas
cs
push
cwtl
or
push
sbb
xchg
dec
cmp
sbb
movsl
push
adc
sbb
mov
mov
dec
xchg
cltd
loopne
les
add
dec
pop
icebp
push
movsb
cmp
inc
inc
out
test
xchg
jl
stos
pop
popa
inc
ljmp
mov
fldenv
push
jno
shlb
jmp
mov
es
popf
insb
xor
jge
ljmp
jne
shlb
mov
faddl
fs
add
call
or
int3
and
je
add
sbb
cli
cmpsb
sbb
dec
jne
xchg
mov
push
jl
push
or
push
sbb
mov
jg
out
push
lods
out
sub
jns
scas
fdivr
les
or
push
cli
lret
test
add
push
es
shrb
add
ds
test
fs
mov
hlt
push
iret
push
jb
jo
inc
push
jb
mov
cmp
nop
sub
mov
repnz
inc
loopne
jl
rcrb
push
pop
push
pop
cmp
xor
push
push
inc
push
mov
and
and
les
jnp
loopne
jle
adc
and
and
nop
inc
push
jns
jg
push
inc
push
cmp
je
enter
icebp
push
push
iret
imul
xlat
mov
dec
bound
arpl
iret
repz
orl
mov
lcall
and
aaa
inc
dec
push
pop
jns
out
imul
sahf
out
movsl
scas
mov
sahf
int
loope
cmc
call
xchg
jl
or
aaa
call
cltd
push
in
pusha
rcl
loopne
mov
mov
mov
addr16
divl
dec
stos
popf
nop
adc
adc
test
nop
je
mov
add
lea
cmpsb
mull
rol
jno
arpl
cmp
cmp
movsb
movsl
addb
xchg
test
mov
add
fisttpl
shl
push
in
inc
mov
push
xchg
aam
mov
xor
leave
std
add
out
fcompl
mov
push
test
add
fmull
jmp
mov
pop
faddl
or
fisttps
xchg
imul
push
or
arpl
adc
filds
dec
test
dec
adc
adc
aas
addb
sbb
jl
and
les
inc
ja
clc
jnp
xor
push
cmpb
jge
cmp
dec
and
dec
jmp
out
add
shlb
sub
mov
jne
inc
cmpsl
jg
lcall
rorb
inc
add
shl
sub
or
hlt
ja
mov
dec
shlb
mov
lahf
xor
adc
pop
or
xchg
lret
popa
dec
dec
jmp
test
sub
adc
shrb
pop
xchg
cs
bound
and
lcall
sub
or
mov
mov
or
aaa
ss
adc
sub
fiaddl
add
adc
mov
cltd
sbb
and
test
pop
push
adc
lods
dec
pop
fisttpll
sub
inc
push
or
movsb
popa
or
add
popf
shrb
xchg
mov
cmc
push
inc
pop
adcb
out
and
les
pop
inc
rol
fwait
sbb
call
pop
rolb
cmp
add
lea
insl
pop
shlb
add
mov
bound
and
and
dec
and
mov
adc
adc
mov
mov
jl
icebp
push
test
jmp
aad
jnp
dec
imul
test
sub
aaa
ss
lods
xor
fwait
cmpsb
sub
mov
mov
nop
imulb
push
and
cmp
jne
imulb
nop
push
cs
push
pop
xchg
or
adc
adc
jp
sub
enter
adc
xor
push
cltd
xchg
mov
jle
icebp
xor
es
and
mov
xor
sbb
dec
lcall
dec
lcall
dec
lcall
dec
lcall
ss
sbb
add
popa
mov
push
pop
popf
mov
std
int3
jl
mov
hlt
stos
mov
test
into
xchg
add
orl
cmp
cmp
orb
movsb
inc
mov
mov
sbb
outsl
mov
pop
dec
mov
pop
mov
mov
inc
or
push
pop
ret
in
xchg
and
test
jae
add
xor
pop
decb
loopne
rolb
imul
mov
sbb
gs
add
fs
stos
ror
sbb
in
push
cltd
sbb
and
mov
mov
or
dec
jns
sbb
js
xchg
mov
and
sub
sbbl
and
es
test
test
nop
jge
or
mov
xchg
inc
andl
pop
fbstp
shl
dec
xchg
push
mov
sbb
push
cs
push
ficomps
cmp
into
pushf
xchg
or
pop
jle
movsb
loop
xchg
cld
addl
mov
inc
adc
aaa
rorl
imul
aaa
fmul
adc
xchg
pop
cmp
int3
lods
addr16
xchg
cmp
mov
sub
xor
movsb
jo
jp
aas
push
adc
inc
test
and
cmpsl
push
aas
and
ds
bound
in
aaa
loope
orl
dec
enter
ss
push
cmp
nop
adc
push
sbb
in
push
inc
or
pop
sbb
ret
inc
mov
in
pop
rclb
incl
cmp
pop
lea
adc
add
jno
pusha
and
lahf
xor
loopne
arpl
adc
xorl
adc
mov
pop
fstpt
jmp
push
sub
ljmp
stos
mov
bound
lea
popf
pop
dec
pop
movsb
mov
add
lea
add
and
pop
dec
cmp
cmp
add
cwtl
xorl
push
sbb
push
mov
sbb
fidivrs
sub
sbb
and
pop
rcrb
lret
enter
add
test
jne
or
push
push
mov
sar
les
mov
imul
add
pop
fmull
pop
sbb
mov
sbb
mov
xchg
fiaddl
mov
mov
or
hlt
and
les
xchg
syscall
push
push
fwait
cmp
movsl
fwait
daa
mov
dec
push
and
or
mov
push
in
sbb
insl
sub
rorb
pop
ficoml
and
mov
cmp
sbb
in
push
pop
cmp
mov
sahf
jmp
shlb
xor
fmulp
or
lea
out
cmpsl
pop
nop
push
call
out
pushf
rclb
nop
out
out
movsb
adc
adc
xor
and
lahf
push
xchg
jns
add
es
push
jo
cltd
adc
inc
inc
outsb
pop
inc
push
aam
loopne
inc
pop
aad
rclb
imul
fcomps
and
ds
cmc
int
not
dec
enter
fsubrs
sbb
adc
enter
or
push
sub
or
fwait
or
lahf
mov
andb
mov
clc
test
and
adc
inc
dec
mov
push
movsb
shrl
sub
add
test
add
push
add
js
adc
pop
rcrb
xchg
inc
stos
int3
cwtl
and
leave
je
cmp
and
sbb
pop
jb
mov
test
imul
lcall
cltd
nop
fs
pop
popa
xchg
mov
pop
adc
mov
and
xor
int3
ja
cwtl
rorl
ljmp
mov
cmp
hlt
je
xor
and
cltd
inc
xor
cs
xor
push
sbb
subb
add
orl
cmpsl
cltd
pushf
inc
push
in
dec
or
loopne
push
jo
and
dec
cmp
jbe
nop
sub
lret
in
roll
cmp
pop
sub
jp
or
mov
jnp
xor
sbbb
test
lods
add
pop
mov
or
jne
mov
scas
add
jbe
add
dec
aad
xchg
loope
in
aam
push
insl
loope
push
or
sbb
adc
cs
or
adcl
mov
das
mov
push
mov
mov
jge
dec
xor
js
or
dec
fsubr
psllw
jnp
lods
xor
pop
push
mov
or
fsubl
adc
lods
test
push
xor
shlb
adc
ret
sbb
mov
nop
sub
mov
xor
inc
loope
js
mov
cmp
fs
adc
mov
out
dec
xlat
shrl
inc
pop
and
lods
imul
inc
rcll
dec
inc
jmp
ret
rcrl
aam
sbb
mov
outsb
pop
sbb
jbe
sub
xor
insl
inc
sbb
pusha
mov
cmc
ss
pushl
repnz
mov
pop
dec
push
inc
adc
cmpsl
xor
mov
aam
test
pop
dec
sub
pop
and
fwait
and
mov
sbb
and
insl
mov
sbb
das
and
and
test
push
jl
and
stos
sub
push
pop
es
neg
lea
popa
leave
fs
sub
mov
subb
push
or
lods
loopne
test
pop
insb
sub
cmp
sub
sub
pop
jnp
pop
loopne,pn
movsb
push
lret
lea
mov
test
daa
dec
dec
addb
pop
popa
adc
je
dec
lock
mov
mov
clc
pop
inc
push
cs
push
rcl
xor
out
push
loop
dec
popf
das
out
or
shl
inc
cs
dec
fwait
nop
movsb
sub
xor
rcrb
int
lods
sub
rorb
daa
xor
int
test
push
and
and
int
xor
and
dec
xor
test
mov
pop
cwtl
push
nop
dec
dec
xor
sbb
xchg
add
movsb
cltd
nop
sbb
mov
imul
adcb
adc
adc
fdiv
fsubl
mov
or
enter
orl
pop
les
pusha
mov
dec
out
pop
sbb
cs
push
or
dec
test
lcall
fcoms
push
stos
jnp
push
lds
push
inc
ret
push
or
test
sbb
dec
adc
divb
pop
jecxz
repnz
movsb
add
pop
sub
and
orl
push
subb
pop
rorl
jg
jo
inc
pop
adc
dec
dec
sbb
and
or
lahf
add
jno
stos
stos
andb
xor
das
test
testb
aam
ja
fldcw
clc
pop
push
xchg
push
cs
sub
lret
incl
je
dec
cmp
inc
or
cmp
add
add
push
and
dec
test
je
push
jp
or
clc
cmp
mov
test
int
lea
frstor
stos
std
scas
insb
ret
repnz
push
cmp
insb
mov
push
and
pop
cmp
sub
aad
push
popf
ljmp
dec
adc
jp
pop
or
int
jbe
scas
fnsave
lods
imul
add
rorl
jle
sarb
pop
cmp
jbe
mov
mov
push
jmp
nop
movsl
aam
jmp
std
filds
jmp
dec
mov
aad
loope
push
pop
pop
addr16
cmp
mov
cmp
je
inc
xor
outsl
lock
repnz
add
jle
jg
out
dec
push
sbb
mov
cmp
inc
je
push
push
rcll
sbb
loope
push
nop
xchg
xchg
nop
jbe
xorb
inc
jb,pt
mov
jle
adcb
mov
and
addl
jb
adc
mov
divb
leave
sub
aam
pop
cmp
fcomip
pop
fs
sbb
xlat
jbe
mov
xchg
cmp
jne
inc
cmpb
int3
ret
jl
dec
sub
ds
xor
inc
mov
jp
push
push
cmpb
and
pusha
jnp
clc
repz
jae
inc
adc
cmp
bound
and
je
mov
add
add
jb
cmp
pop
pop
js
scas
adc
inc
lods
mov
sub
inc
fnstsw
xchg
sub
popa
adc
and
xchg
add
roll
sbb
fcmovu
loope
xchg
jne
or
xlat
aad
dec
or
js
or
ds
imul
mov
push
out
outsl
imul
jmp
rorl
mov
jbe
lock
in
in
ds
adc
xchg
lret
mov
mov
and
push
sbb
add
pushl
inc
jae
xchg
pop
outsl
jl
push
push
sbb
cmpsb
sub
dec
sub
cmp
addr16
inc
test
sahf
scas
test
sbb
pop
or
jmp
mov
imul
push
int
pushl
ds
jl
or
sar
dec
je
cmp
or
and
mov
movb
movsbl
shr
jg
dec
bound
add
pop
dec
add
nop
inc
mov
leave
jne
pop
xchg
mov
xchg
bound
jo
pop
mov
push
xchg
adc
adc
cmp
loop
xor
mov
push
mov
cmp
orl
push
andl
push
sbb
or
add
rcll
push
rorb
add
sbb
in
add
dec
mov
sti
add
enter
pop
cmc
dec
sub
sti
ret
loopne
jae
lock
and
inc
mov
xchg
jg
cmp
je
dec
and
add
and
jmp
in
push
add
insb
xchg
addr16
xor
adcl
adc
in
inc
or
or
pop
sub
adc
icebp
pop
cmp
pop
pusha
push
insl
gs
push
imul
cmp
mov
push
or
cmp
dec
and
outsl
loop
pop
add
mov
pop
add
and
sbb
jp
pusha
adc
in
xor
mov
sub
mov
push
pminsw
mov
xlat
xlat
test
dec
sbb
ficomps
testb
fstpt
inc
push
aaa
sub
mov
or
pushf
xchg
adc
ret
cltd
int3
push
inc
pop
dec
add
add
popa
xchg
add
xchg
mov
mov
nop
sbb
dec
jmp
mov
xchg
jns
es
xchg
ret
pop
pop
mov
sub
mov
cmp
xchg
or
pusha
cmp
sbb
dec
into
inc
mov
push
lock
loopne
jmp
shlb
in
and
orl
or
dec
daa
subl
xor
rorb
push
adc
mov
push
cmp
je
sub
push
std
adc
mov
loope
out
push
xchg
xchg
inc
cmp
popa
mov
push
call
or
push
fadds
or
inc
leave
pop
in
mov
cwtl
sub
adc
popa
jmp
testb
inc
loopne
ror
sbb
out
rol
pop
adc
add
loopne
shrl
xchg
add
xor
sub
dec
sub
add
sbb
xchg
and
mov
pop
mov
cmp
sbb
cmp
outsl
xchg
ret
sub
dec
js
push
add
mov
push
push
testb
sbb
lcall
or
in
fsts
xor
jg
lock
sub
flds
mov
aad
mov
add
arpl
push
sub
sbb
repz
sbb
inc
xor
push
mov
pushf
sbb
mov
pop
dec
cmp
aaa
sub
add
pusha
xor
inc
add
cmp
insl
cmp
std
cmp
mov
leave
xchg
mov
sarb
mov
cmp
lock
sub
inc
or
fistps
mov
mov
insb
sbbl
jle
imulb
dec
sbb
lods
rcll
mov
jl
or
pop
rolb
test
pop
fdivs
das
cltd
pusha
gs
xor
sub
fcmovb
adc
repz
or
pop
inc
movsl
sbb
push
inc
sbb
sarl
jno
inc
loopne
test
stos
add
or
divb
movsl
jnp
xchg
add
inc
call
xchg
add
jp
rcl
aad
lods
aam
lea
or
xchg
xchg
xlat
xor
int3
cwtl
cmpxchg
dec
mov
dec
jb
mov
mov
push
inc
lahf
sub
imul
cmpb
mov
mov
scas
cmp
sbb
sbb
cmp
cwtl
loope
or
xor
or
xor
push
jmp
add
out
push
dec
rol
test
outsb
add
cmc
mov
cmp
cmpsl
je
stos
mov
cli
leave
mov
mov
push
dec
adcb
pop
cmp
rcll
sub
popa
and
xor
dec
sarl
cmp
inc
push
cmp
les
mov
mov
je
mov
pop
scas
dec
sbb
jmp
dec
enter
les
inc
int
sbb
and
in
add
add
rcll
sub
nop
sbb
push
jle
dec
dec
and
test
or
mov
test
adc
push
dec
adc
push
inc
arpl
jge
mov
xor
jne
je
inc
or
sarb
test
js
adc
jne
add
sub
adcl
sbb
iret
test
adc
mov
inc
cwtl
addb
adc
ret
mov
push
xlat
je
pop
sub
ficoms
cmpsb
movsb
jb
push
enter
outsl
inc
mov
xor
xor
inc
add
xchg
cmp
cmpsl
sbb
std
fsubl
adc
lea
mov
dec
mov
je
lods
inc
jne
imul
cmp
rcr
add
mov
and
out
pop
shl
sub
ret
xor
or
ja
addb
call
ds
mov
jnp
ds
sbb
and
or
scas
push
rcrl
mov
push
xor
inc
fbstp
mov
das
je
jge
sub
mov
lea
fdivrs
jns
jnp
das
adc
es
rcrb
jle
stos
cs
in
cmp
test
jne
push
jo
movsl
es
or
mov
movsl
jno
test
or
dec
mov
cmp
sbb
mov
dec
enter
add
dec
push
and
fistl
nop
xchg
cmpsb
and
cmpl
sub
fcmovnbe
sub
push
sbbb
sbb
mov
xor
scas
sbb
ss
fmuls
out
mov
add
insb
lods
lret
xor
loop
decl
cli
test
push
lret
jp
or
cmp
dec
mov
rclb
add
mov
jbe
mov
add
mov
mov
aaa
mov
add
push
ljmp
insb
pusha
cld
sub
jle
inc
sbb
ficompl
inc
add
mov
rolb
push
mov
pop
pusha
push
js
lds
mov
cmp
enter
movsb
movsl
outsb
jbe
fldl
adc
jle
roll
in
data16
cmp
cmp
inc
add
out
jne
daa
bnd
adc
iret
iret
or
jne
or
jne
or
and
clc
push
mov
mov
dec
push
adc
pop
mov
test
and
jg
pop
push
lea
movl
dec
fwait
inc
dec
mov
test
aaa
mov
push
jl
mov
lea
fstpl
lea
cmp
ja
xor
lcall
and
movsb
in
inc
mov
ss
popa
mov
sbb
xchg
in
fstl
fisttps
fsubl
xchg
int
xchg
mov
es
push
into
or
cmc
int3
rcll
inc
xor
and
add
faddl
cmp
adc
in
jno
add
add
sub
fstl
mov
idivl
jmp
fcom
loopne
shlb
adc
popa
int
jb
adc
mov
xor
repnz
mov
inc
movb
mov
ss
popa
dec
ret
cmp
imul
or
add
or
xchg
sbb
cmpsl
push
xchg
insl
mov
dec
js
and
jmp
jmp
orl
sahf
ret
pusha
pusha
cmp
test
enter
mov
fs
or
pushf
push
jne
sahf
sub
xor
and
fs
pushl
pop
add
icebp
inc
dec
jg
mov
fisubrs
xchg
inc
and
pop
push
mov
inc
push
jg
push
adc
es
mov
out
push
clc
clc
or
add
rcrb
mov
rorb
int3
mov
ror
inc
subl
cltd
xor
xchg
movsb
xor
mov
in
add
add
and
dec
and
cmp
jns
ret
inc
roll
fs
sub
adcl
divl
sub
outsb
dec
and
rcrb
in
insl
fmuls
and
cmp
mov
or
lret
rcrl
jb
xchg
leave
mov
jbe
mov
push
adc
jnp
push
aad
nop
xchg
add
push
lds
mov
negl
xchg
mov
into
pop
clc
and
in
and
mov
add
cmp
dec
or
ret
fisttpll
repnz
mov
mov
add
out
mov
sahf
push
or
dec
das
daa
sbb
add
divb
int3
imul
push
dec
fnstsw
xchg
push
test
xchg
pop
adc
adc
je
and
cmp
fs
adc
js
mov
lds
xchg
xchg
inc
adc
es
sub
pop
xor
pop
or
dec
es
push
adc
dec
xor
xor
push
sbb
or
out
sub
or
mov
push
jne
sti
mov
inc
leave
push
inc
arpl
push
and
lea
or
inc
and
inc
mov
xchg
xor
mov
cmp
ds
nop
mov
jae
leave
test
add
je
and
pop
loope
test
mov
push
outsl
sub
or
mov
insb
and
imul
add
lods
sbb
sbb
out
dec
add
ret
ret
mov
aam
mov
push
adc
pop
jo
adc
or
or
push
add
mov
xor
and
js
jg
push
test
push
xchg
sahf
inc
sbb
adc
rcl
xchg
inc
sbb
fcompl
test
mov
adc
dec
mov
xchg
lock
jmp
pusha
adc
jge
sahf
in
test
leave
mov
add
push
hlt
sub
push
sub
sbb
fmull
cmp
mov
add
add
js
negb
sbb
inc
pop
test
les
add
and
pusha
pop
jl
and
stos
jne
jno
in
movsl
adc
leave
call
adc
and
ljmp
inc
lahf
cmpl
cld
shl
add
xor
lea
jge
jecxz
push
je
mov
add
dec
pop
inc
inc
push
mov
fldenv
sbb
mov
inc
je
leave
mov
and
mov
push
cwtl
shll
aam
nop
sar
fisubl
add
dec
cmc
stc
push
shlb
xchg
xorl
fisttps
pop
ja
xorl
test
or
or
mov
shlb
push
inc
addb
testl
je
inc
les
outsb
fcoml
addr16
loopne
mov
cmp
lret
mov
decl
insb
es
jne
mov
jmp
sub
and
xor
xor
mov
gs
adc
pusha
jne
push
xor
bound
xor
mov
adc
lret
adc
dec
ret
pusha
cmp
cltd
daa
fdiv
sub
insl
test
or
aam
sub
sbb
or
loopne
lret
dec
rcr
xor
cmp
cld
xchg
pop
pop
push
imul
and
or
clc
jle
add
xlat
rorb
mov
cmp
and
lea
test
pop
ret
shrb
scas
push
inc
pop
or
jecxz
add
loope
sub
mov
pop
and
inc
xchg
test
rcrl
xchg
pop
jmp
out
push
cwtl
jp
ds
xor
adc
fcmovu
add
add
inc
and
dec
cmpb
fdivrl
xchg
fcom
es
cwtl
shlb
and
add
sbb
adc
lahf
or
fcom
repz
push
fisttps
ficompl
outsl
movsb
mov
jp
aas
sub
leave
cmp
jecxz
inc
inc
ljmp
jge
mov
sub
adc
aam
push
push
pop
add
mov
push
xor
sbb
lods
bound
push
mov
fnsave
jp
mov
imul
hlt
pop
es
adc
mov
cs
adc
movsl
add
xchg
js
dec
sub
sub
mov
sub
leave
subb
push
or
or
or
inc
hlt
aas
mul
fldl
xchg
add
and
ljmp
jl
lret
addr16
and
test
jl
ret
adc
movsl
ja
pop
xchg
or
mov
incb
xor
cmp
je
or
inc
xchg
in
jb
rolb
sbb
ret
mov
movb
iret
call
ret
xor
hlt
jae
movsbl
outsb
clc
or
sbb
inc
mov
std
dec
sarl
rorb
add
sbb
sbb
bswap
push
das
jmp
call
inc
incl
ret
jmp
shll
jmp
push
or
add
inc
cmp
jl
cmpl
inc
call
inc
cltd
and
add
sar
add
test
clc
mov
pop
xor
ss
cmp
jecxz
lahf
lods
add
add
or
enter
adc
or
jne
add
or
pop
sahf
lret
test
push
rcl
les
push
add
sbb
push
pop
mov
cmpb
sub
jbe
in
hlt
pop
jo
shld
lea
jne
push
pop
inc
adc
roll
sub
cwtl
idivb
mov
push
cmp
jl
sub
outsb
pop
pop
jle
insb
aas
mov
je
rorb
pushf
push
lds
xchg
cli
js
push
mov
add
fildl
aas
arpl
ret
pop
cmp
pop
aam
repnz
imul
lahf
rolb
lahf
push
ret
or
fsts
adc
rclb
dec
leave
xchg
icebp
pop
inc
test
add
cs
adc
xor
stos
shll
pop
ficompl
ss
mov
pop
cmpsl
push
xor
in
push
xor
mov
adc
xor
pop
in
dec
leave
sbb
pop
push
cmp
ret
mov
sub
and
and
add
sbb
add
mov
cld
ret
jnp
sbb
jecxz
add
adc
pop
push
jmp
test
push
pushf
sub
mov
pop
in
push
insl
jp
enter
mov
pop
outsb
dec
fidivrs
dec
pop
add
push
jmp
push
add
dec
dec
in
push
push
cwtl
sbb
xor
add
movsb
sbb
add
addb
ret
xchg
mov
cs
mov
dec
js
inc
lds
stos
cli
cmp
movl
int3
pop
out
outsl
mov
ss
jns
lret
add
add
add
aas
in
push
arpl
and
stc
dec
xor
sub
and
mov
lea
movsb
pop
in
xor
scas
or
lret
roll
fistps
je
push
pushl
adc
fsubr
rclb
insb
jecxz
aas
leave
pop
dec
out
int
fbstp
popf
fcomi
and
dec
mov
sbb
xorb
push
cmp
mov
dec
push
dec
cmpb
les
test
dec
or
js
push
call
rcl
jbe
fisttpll
inc
ret
add
mov
cmp
jecxz
je
pop
jp
mov
add
dec
and
dec
int3
add
aad
mov
das
push
daa
mov
add
mov
fisubl
inc
mov
mov
inc
test
dec
repz
roll
je
dec
insb
adc
pop
jb
mov
cmp
mov
fisubl
inc
push
push
pop
aam
scas
dec
jae
inc
mov
mov
xorb
push
sbb
mov
fs
push
jmp
mov
daa
adc
add
pop
outsb
push
xlat
push
and
dec
lahf
push
cmp
pop
shlb
pop
mov
jae
aad
loope
cmp
xchg
lret
dec
int3
int3
add
mov
pop
mov
cltd
ljmp
sti
lcall
daa
jo
jg
sub
fldenv
mov
add
je
dec
fsubr
add
lods
cmpsl
call
jl
js
out
das
addb
mov
or
es
cmp
test
jo
and
in
pop
rcll
nop
add
insl
mov
push
xchg
divl
push
inc
xor
aam
add
lods
jle
rclb
loopne
or
add
cli
mov
test
sbb
bound
fistpll
clc
jl
cwtl
loopne
fdivrl
mov
jge
sub
ror
add
sbb
je
cmp
daa
movsbl
jo
mov
call
fdivrl
mov
add
mov
adc
insb
lock
out
test
sbb
lret
movb
bound
push
cmpsl
add
enter
add
add
and
dec
cmp
mov
mov
jp
popf
and
cmp
sbb
and
mov
jmp
add
sub
sub
cmc
dec
mov
fstps
outsb
xor
add
mov
loope
inc
aas
cld
les
cld
push
inc
lahf
push
xchg
xor
iret
inc
cmp
cmp
or
xchg
adc
adc
inc
and
rcrb
inc
int
aad
in
adc
pusha
xor
inc
movl
mov
lcall
push
and
pop
adc
jg
into
je
bound
jnp
cltd
pushl
test
mov
mov
clc
pop
cmpb
mov
sub
and
ret
push
sub
jno
incb
cmp
add
push
mov
dec
lods
dec
mov
mov
xchg
outsl
jmp
sldt
movzbl
mov
inc
mov
mov
cmp
mov
scas
dec
clc
addl
int
mov
add
jle
sub
push
icebp
or
sbb
pop
jae
xchg
add
push
mov
lods
add
push
mov
nop
and
push
nop
add
or
cld
push
leave
push
inc
adc
mov
inc
call
jne
pop
das
or
jecxz
mov
mov
fwait
aam
or
push
les
into
in
pop
mov
mov
inc
data16
insb
into
push
cmp
shlb
add
xor
jb
cwtl
push
mov
test
dec
cs
add
in
dec
push
mov
inc
jecxz
adc
push
les
adc
frstor
push
mov
fcmovb
insl
sahf
mov
cmp
push
enter
std
and
fbstp
scas
mov
es
mov
in
popa
sub
and
inc
xlat
mov
adc
xor
inc
pop
mov
test
lock
mov
movsb
xor
dec
jl
pop
mov
jae
sub
inc
pop
and
adc
add
cmp
rorl
and
int3
fsubs
adc
call
popf
lret
push
out
movsl
ljmp
je
in
loop
rclb
mov
sbb
scas
mov
sbb
or
iret
xor
je
das
test
jb
mov
or
stc
sub
outsl
lock
lret
lea
cmp
jbe
cmp
jbe
mov
sbb
lods
dec
push
and
mov
jle
add
lods
xor
mov
mov
xchg
and
dec
add
roll
lret
add
pop
xchg
push
test
or
lea
jle
lock
icebp
cmp
push
testl
fsts
fwait
jae
call
push
push
push
cmc
dec
push
iret
cmp
in
and
adc
test
and
mov
sbb
test
push
addr16
pop
ret
and
enter
or
mov
fsts
lods
test
mov
mov
sahf
push
fcoms
mov
mov
clc
xchg
je
loopne
adc
lea
mov
xchg
push
push
xchg
dec
repz
pushf
int
mov
cli
mov
mov
sub
or
loopne
ffree
add
in
mov
andb
shl
mov
mov
and
jae
sbb
push
mov
mov
aas
jb
mov
sub
add
xor
adc
add
and
push
cmp
push
or
adc
inc
xchg
cmpsb
sbb
adc
mov
push
xchg
aam
cmp
add
mov
jp
add
insb
mov
and
aad
and
mov
outsl
cmc
pop
pop
and
jo
fisttps
out
test
jmp
push
stos
rclb
inc
enter
cmp
add
cmp
vmptrst
jle
xor
xchg
mov
adc
or
dec
std
in
sub
lods
add
fstl
nop
mov
mov
popf
mov
add
enter
adc
mov
adc
loopne
mov
outsl
dec
sti
incb
add
lods
xor
mov
sbb
movsb
ret
shrb
stos
jle
add
rolb
inc
fsubrs
add
push
aam
mov
xchg
shlb
adc
out
add
roll
jbe
xchg
adc
xor
iret
sbb
or
out
fmull
pop
fs
jae
mov
je
jmp
movswl
mov
inc
outsl
cmp
add
push
cmp
mov
or
lret
maxps
mov
mov
sbb
mov
aas
cld
adc
dec
fwait
nop
or
pop
fidivrl
aaa
aas
push
ljmp
cmp
adc
xchg
dec
pop
mov
cmp
daa
add
jbe
pop
imul
jmp
cltd
add
sbb
push
insb
or
sub
add
les
add
jo
fisttpll
or
push
pop
je
lds
ret
repnz
mov
add
lahf
mov
add
popf
lea
cmc
fcmovb
lea
cli
mov
mov
mov
or
push
scas
sub
insl
rorl
xchg
outsb
out
lcall
je
daa
xchg
pop
xchg
or
imull
out
int3
or
add
push
pop
dec
adc
test
gs
lods
pop
mov
inc
loopne
push
push
movsb
je
mov
incb
js
mov
call
mov
and
test
jmp
push
adc
test
or
call
iret
xor
xor
push
push
adc
mov
pop
mov
push
lods
sbb
lahf
imul
dec
jo
scas
lods
push
pushl
rclb
or
inc
pushl
jne
cmp
jbe
add
mov
jmp
push
pop
push
sbb
jmp
fldcw
ja
cmp
adc
lret
ds
lcall
cmp
sub
and
clc
bound
xor
mov
jne
mov
orb
nop
gs
imul
push
pop
mov
leave
sub
push
xchg
cmpsb
out
push
sarl
or
cld
rclb
lret
call
cmp
xchg
mov
cmp
int
jbe
sbb
adc
in
push
call
cmp
sbb
and
jmp
add
cli
call
mov
inc
rcrb
js
rcrl
xchg
enter
xchg
add
add
jae
push
jp
xor
or
or
ficompl
dec
or
adc
aas
jmp
mov
xchg
adc
mov
es
jo
adc
nop
cmp
repz
cltd
pop
or
in
jmp
push
mov
adc
in
fiaddl
mov
xor
dec
clc
add
inc
xchg
jge
and
and
xor
mov
sbb
shll
dec
bnd
pop
sub
daa
inc
test
xor
shll
testl
jae
adc
iret
add
sbb
in
fildll
push
fiaddl
cmp
into
adc
gs
xor
insl
jns
add
mov
push
and
push
sbb
mov
cmp
aaa
push
push
adc
mov
loope
adc
mov
pop
sbb
xchg
mov
adc
lea
mov
ds
or
ret
adc
pop
and
adcl
subl
push
ffreep
xor
loope
push
jo
movsl
jae
jmp
add
and
stos
and
push
fs
ss
xor
lea
or
mov
sbb
fwait
sbbb
pop
xor
mov
add
add
pushf
mov
or
movsb
fwait
and
dec
jno
push
js
ljmp
test
pop
xchg
jge
cld
mov
push
push
sbb
adc
testl
push
out
lea
mov
or
loopne
pop
mov
or
inc
jo
add
mov
adc
imul
jne
std
adc
fidivl
stos
test
hlt
sub
and
push
mov
dec
jmp
cltd
push
dec
sbb
test
lahf
enter
mov
out
cmp
adc
sbb
jb
mov
test
imul
call
push
xchg
leave
aam
mov
inc
loope
dec
jb
and
ret
in
ret
ficoms
popa
stos
fdivrs
inc
mov
and
mov
sbb
add
ja
pusha
mov
pop
push
cmp
sub
jp
pop
and
cmpl
rcrb
and
inc
das
cs
inc
sub
lock
or
data16
sbb
arpl
aaa
mov
pusha
roll
decl
ret
int3
add
shlb
jb
xchg
mov
or
dec
sub
imul
mov
mov
js
adc
add
mov
pop
ret
fadd
and
fsubr
pop
and
jecxz
sub
xor
mov
jmp
add
push
push
jo
insb
cmp
shlb
jbe
mov
cwtl
pop
dec
mov
orb
in
outsb
mov
lea
iret
movsb
dec
sbb
lock
pop
rclb
and
or
push
push
stos
or
ds
push
xchg
or
xor
into
jmp
lock
ss
push
cmp
jb
cmp
leave
rorl
adc
sahf
cmp
aaa
popa
push
ret
cmpsb
mov
push
dec
je
add
add
add
cs
stos
or
push
inc
or
add
adc
bound
cmp
sar
adc
repnz
jmp
push
mov
jmp
add
mov
mov
mov
icebp
sti
mov
filds
or
mov
cmp
or
out
cmp
je
cmp
jne
mov
sbb
add
negl
lea
sarb
dec
xor
mov
cmpsb
push
jmp
testb
je
testl
jbe
sbb
add
inc
mov
or
stos
xchg
mov
jg
cmp
je
sub
inc
jmp
inc
and
xchg
push
xor
push
add
ljmp
pop
or
push
clc
mov
rclb
jo
cmp
xchg
dec
sbb
imul
or
mov
adc
loopne
push
xor
push
mov
hlt
pusha
sub
push
fiaddl
push
sti
cmp
outsb
hlt
cmpb
add
mulb
pop
les
xchg
push
and
insb
lods
mov
ja
js
icebp
and
sub
cmp
xor
mov
push
jp
insb
add
inc
cld
rcrb
dec
nop
popa
mov
in
cmpl
inc
stos
loop
loopne
jne
mov
dec
inc
insl
sbb
vphaddbq
mov
popw
adcb
inc
add
jae
movl
xor
mov
jecxz
add
jmp
pushf
aas
xchg
movsl
addr16
sti
and
cmpsb
and
or
adc
fs
jne
xor
and
cmp
adc
sub
mov
or
push
outsb
pop
jae
mov
jmp
dec
shlb
imul
cmpsb
sub
mov
push
and
pusha
shll
call
mov
mov
mov
cmc
lret
xchg
inc
jg
or
jge
mov
xor
and
es
mov
jle
sub
and
pop
or
jl
or
adc
ret
pusha
bound
mov
jbe
aam
cmp
jbe
and
out
add
clc
pop
arpl
pop
add
je,pn
test
adc
inc
jne
pop
xor
sub
jb
clc
add
test
cmp
push
xor
xor
lock
jg
jae
movb
inc
subb
rorb
and
icebp
push
or
pop
xchg
inc
data16
mov
inc
and
push
sbb
sbb
mov
sub
jmp
mov
push
inc
inc
popl
add
sbb
mov
pop
mov
inc
push
lcall
jbe
clc
push
cmpb
dec
pop
sahf
push
mov
rolb
jmp
popa
or
mov
fiadds
xchg
xchg
out
aam
inc
mov
push
fcom
enter
inc
leave
or
cwtl
test
adc
add
je
hlt
ljmp
jmp
out
test
push
inc
loop
sahf
mov
imul
push
jbe
inc
inc
xchg
mov
jmp
jg
pop
push
shrl
in
cmp
push
and
mov
loop
mov
cmp
cwtl
xor
jecxz
or
add
mov
sbb
loop
test
cmp
mov
mov
out
push
xchg
out
xor
data16
out
ds
pop
addb
mov
jns
pop
lea
out
xchg
sub
rolb
xor
cmp
lds
jmp
andl
adc
imul
aaa
jp
addr16
or
dec
or
adc
cmp
test
insl
iret
ret
xchg
imul
lods
inc
push
mov
movl
push
adc
dec
or
xor
jo
push
push
lahf
jbe
rol
sub
xchg
add
inc
xchg
adc
jle
push
mov
mov
mov
push
add
mov
pushf
outsb
xchg
mov
mov
push
rcrl
outsb
les
mov
pop
outsb
je
pushl
je
push
mov
push
testl
jae
and
push
cmpl
push
hlt
inc
add
cmp
int
jbe
pop
psubd
lea
inc
pop
data16
pop
imul
out
sbb
xchg
pop
push
inc
fcmovbe
pop
ja
pop
mov
jbe
mov
jge
push
gs
add
inc
inc
fwait
cmp
add
xchg
pop
pop
jle
mov
cmp
stc
cmpsl
popf
push
push
or
xor
int3
cmc
add
movsl
xchg
stos
pop
adc
xor
xchg
sbb
clc
fisubrs
push
test
dec
push
mov
inc
jmp
xor
addb
push
fs
push
into
leave
dec
adc
inc
push
nop
pop
xor
push
dec
mov
add
cmp
pop
mov
cwtl
popa
or
mov
test
clc
mov
das
and
fmull
pusha
mov
stc
push
sbb
push
or
push
inc
push
in
mov
or
push
or
add
sahf
mov
mov
push
aaa
les
icebp
orl
add
push
add
add
pop
add
push
cltd
aaa
inc
dec
cmp
ljmp
test
jp
adc
push
ret
or
sti
pusha
jb
loopne
out
pop
fmull
adc
shll
push
add
daa
sbb
cli
cmc
push
adcl
fcoml
lods
mov
mov
dec
dec
dec
add
push
and
inc
or
in
pop
es
push
ljmp
push
clc
mov
rclb
scas
lock
pop
cmp
cld
jle
push
movb
push
popf
test
cmp
add
dec
and
mov
pop
add
fwait
cmp
insb
fsubs
jg
inc
loope
fucom
subb
xchg
dec
ret
pop
or
xchg
and
in
xchg
pop
xchg
fs
popf
push
xor
push
pop
xor
adc
sbb
jl
mov
and
cmp
adc
cmp
mov
mov
fmul
mov
inc
addr16
imul
push
jp
jecxz
mov
movsb
dec
add
mov
mov
dec
xchg
jo
scas
sti
push
add
pop
cwtl
cmpl
dec
push
cmp
imul
push
push
lret
cwtl
adc
dec
gs
call
sar
pop
mov
das
dec
push
sti
sbb
js
js
test
imul
es
andl
push
add
inc
xorl
or
inc
nop
dec
rolb
add
jmp
bound
and
push
cmp
mov
add
push
inc
mov
or
ja
or
xlat
cmpsl
popf
jne
push
pop
lahf
inc
adc
cmp
mov
pop
sahf
sarl
cmp
in
pop
mov
push
xchg
dec
adcl
cmp
adc
xchg
rorl
push
adc
mov
push
ficoml
mov
out
lret
jnp
pop
mov
popa
mov
dec
mov
icebp
nop
mov
fwait
xchg
xchg
cmpsl
mov
lcall
push
aas
je
cmp
push
pop
jne
mov
dec
movsl
aam
cmpsl
jne
push
in
clc
xor
pop
jne
pop
pop
lret
call
test
xorb
insl
in
sbb
shr
xor
loop
jne
pusha
cltd
jecxz
jmp
sbb
sub
mov
xchg
sub
mov
inc
adcb
xlat
or
cmp
pop
lea
fldl
add
je
inc
mov
sub
stos
mov
pusha
pop
je
imul
movsl
mov
jmp
arpl
mov
jae
scas
jg
xchg
dec
in
add
sbb
sbb
roll
xlat
jbe
inc
enter
enter
decb
adc
or
adc
or
pop
push
adc
xchg
pop
fimuls
orl
sbb
pop
cmc
shl
fs
push
add
decb
rcrb
ret
push
bound
adc
rolb
push
mov
mov
cmp
std
mov
pop
loopne
mov
add
repz
movsl
ret
fstpt
add
inc
arpl
mov
mov
push
add
in
or
push
jno
lret
loopne
sahf
xchg
pop
cs
push
push
pop
pop
pop
xchg
lret
in
pop
pusha
pusha
mov
mov
rorb
sub
xchg
cmp
add
add
insl
enter
xor
mov
or
popf
mov
lret
dec
cmpsb
jecxz
enter
push
mov
jmp
push
rcll
lcall
mov
sbb
adc
mov
fs
push
pop
sar
push
in
push
or
inc
adc
imul
sub
int3
adc
cmc
test
outsb
in
test
and
cld
scas
stos
insb
or
or
add
daa
mov
cmp
xor
es
jb
js
xor
sbb
mov
pop
es
xor
or
inc
outsb
mov
cli
jp
push
pop
jmp
or
stos
mov
je
scas
xor
into
or
sti
and
add
or
sbb
daa
frstor
or
je
dec
push
gs
insl
test
ret
lock
jbe
cmc
lock
lock
xor
sti
or
enter
sti
movsl
cmp
dec
pop
push
mov
pop
mov
pop
mov
or
mov
xlat
popa
pop
dec
or
inc
ret
popa
cmp
cmp
test
ffree
xor
lret
je
add
xchg
in
and
push
mov
dec
cld
outsl
sub
dec
add
dec
add
fimull
adc
in
in
lret
mov
loopne
jne
or
inc
addb
je
jg
mov
addb
xchg
adc
xchg
test
nop
mov
cmp
mov
sbb
sub
les
inc
pushf
add
pop
sbb
xor
push
sar
cmp
sbb
test
add
ficoml
fisubl
sbb
sbb
pop
je
jnp
sbb
adc
ds
add
push
jae
add
popa
xchg
faddl
dec
rcrl
call
mov
lock
cmp
jne
or
clc
adc
add
inc
pop
pop
into
jbe
jo
movsl
imul
mov
sbb
int
test
test
cmpb
orb
daa
cs
lcall
xor
aas
mov
or
andl
shlb
iret
xlat
or
incl
cmp
inc
test
or
mov
mov
stos
sub
mov
leave
or
mov
jmp
dec
in
subb
or
es
clc
mov
dec
hlt
cmpsb
int
cltd
mov
ja
xor
divb
push
fildl
aam
inc
jle
or
push
inc
add
loopne
add
cmp
mov
push
add
rorb
out
leave
inc
cmp
sar
xchg
rorl
hlt
adc
mov
sbb
cli
hlt
lcall
mov
mov
sub
inc
inc
mov
hlt
cmp
ljmp
push
mov
enter
pop
mov
pop
push
adc
add
icebp
sbb
js
or
mov
push
jecxz,pt
mov
cld
mov
cmp
outsl
mov
and
call
push
es
xlat
subps
sar
push
popa
pop
xor
pop
lea
add
push
orl
int
and
scas
pop
popf
out
push
pop
sub
cmpl
sbbb
adc
push
push
xor
fwait
jbe
adc
test
add
cmc
add
add
inc
into
push
or
scas
jle
out
adc
inc
aam
inc
pusha
scas
xchg
push
add
bound
jns
enter
imul
dec
and
mov
adc
movsl
xchg
loopne
fsubl
addb
sub
sbb
clc
adc
ja
fdivs
test
in
adc
pop
sbb
push
pop
push
test
pusha
es
add
mov
adc
bound
adc
movsl
adc
inc
jp
xor
pop
jmp
sub
push
push
iret
xchg
adc
push
popa
fwait
in
sbb
and
inc
add
dec
push
loope
lock
mov
mov
aam
fidivl
mov
adc
mov
and
add
add
ret
jmp
mov
sub
sbb
sbb
gs
adc
mov
orb
or
bound
mov
sbb
jmp
dec
dec
jne
jns
aam
and
nop
mov
inc
in
sbb
adc
lds
mov
shr
mov
flds
xchg
cmp
cmpl
push
adc
stc
imul
adc
xor
inc
test
es
add
fadd
iret
in
fdiv
fildl
and
xor
jnp
sbb
shlb
loopne
loopne
mov
fcmovb
jo
and
and
mov
jmp
roll
xor
xchg
arpl
rcrl
xlat
push
fistl
push
mov
fs
fs
sbb
cmc
daa
pop
adc
filds
test
das
pusha
inc
cmp
cmpsb
push
testb
loope
pop
pop
orb
pop
clc
sbb
add
and
movsb
mov
adc
test
xchg
adcl
sti
movl
sbb
sbb
sahf
xchg
rol
mov
xchg
stos
imul
xor
dec
mov
add
xor
out
jge
sbb
and
sub
and
in
dec
fsubr
rep
ret
cmp
xchg
add
jg
fadds
cmp
rclb
pop
add
jmp
add
dec
clc
inc
push
xor
cmc
ds
enter
add
clc
test
cs
push
xor
pcmpeqd
mov
jne
jmp
push
xchg
mov
in
mov
pusha
push
dec
es
dec
and
mov
or
dec
lds
aas
ret
or
pop
rclb
je
sbb
mov
clc
or
sbb
mov
cwtl
hlt
sub
push
cmp
add
sbb
xor
sbb
sbb
int3
gs
lods
add
and
pop
inc
push
cmp
add
test
inc
ljmp
add
daa
mov
xlat
mov
or
jae
sbb
add
leave
sub
notl
stc
cmp
mov
cmp
ret
cs
push
or
popf
xor
ja
add
pushf
pop
imulb
jnp
add
and
push
loopne
loopne
clc
lea
cmp
repnz
jo
daa
xchg
aad
mov
xor
popa
and
jge
cwtl
and
jne
push
data16
inc
ret
nop
push
add
push
push
push
mov
add
clc
sbb
mov
xchg
xlat
lds
pop
ret
pushl
push
iret
outsl
pop
ja
xchg
lods
cmpsl
jo
movb
call
jo
push
add
xorl
stos
inc
adc
insb
jne
or
test
loop
loopne
push
fs
imul
movsl
mov
imul
adc
sarl
and
cmp
pop
iret
mov
mov
lods
ljmp
push
popa
je
jno
pop
movsl
mov
js
mov
dec
loopne
xchg
fsubr
mov
xor
cmp
sub
nop
xor
loopne
push
push
adc
sub
xchg
or
clc
call
sub
push
cmp
cmp
loopne
mov
in
xor
scas
sub
ja
lcall
rcll
insb
cmp
push
mov
jno
mov
cld
sbb
mov
sub
jnp
sahf
sub
adc
add
cmpsb
or
or
jmp
jo
lods
aad
scas
add
jb
pop
pop
scas
sub
stos
sub
push
lds
in
add
xchg
xlat
js
rcll
lods
hlt
push
cs
ds
cld
adc
dec
scas
cmp
subl
push
test
nop
sub
iret
or
fs
pop
jne
adc
xor
add
popa
xchg
jmp
dec
sahf
cmp
push
inc
fists
jp
jo
aaa
jbe
push
and
xlat
imul
push
pop
sbb
push
mov
sbb
xchg
sbb
mov
add
inc
sub
testb
adc
ret
xchg
mov
add
xchg
bound
add
push
adc
enter
imul
push
xor
cmp
das
mov
out
popf
enter
and
pop
clc
add
aam
mov
test
inc
sbb
mov
mov
arpl
add
cmp
inc
xor
mov
lcall
lock
movsl
cmp
push
push
xor
cmp
mov
fsubrl
sbb
xor
dec
insb
mov
push
jns
mov
stos
sub
ret
cmp
sbb
arpl
loope
push
lods
or
in
aam
test
cmp
add
push
outsb
or
pop
cmp
cmp
mull
outsl
test
fdivrs
fs
xor
dec
and
shll
stos
adc
inc
sbb
out
mull
push
shl
jge
das
push
add
leave
outsb
imul
pop
pop
leave
mov
aam
dec
cmp
cmc
testb
das
and
fstl
movl
addl
dec
inc
inc
movsl
dec
xchg
imul
out
or
imul
inc
sbb
push
push
xchg
cmp
cmpb
pop
je
pop
inc
movsl
faddp
mov
cwtl
ficoml
add
stc
add
mov
pop
push
inc
mov
jp
ret
mov
pop
mov
or
adc
push
and
rclb
add
outsb
dec
inc
sub
fldt
dec
cli
lcall
xchg
adc
mov
jno
inc
mov
sub
sbb
sbb
mov
dec
xor
or
cmp
stos
inc
or
and
adc
xchg
sbb
mulb
pop
mov
sub
dec
movsb
pop
cli
outsb
aam
mov
and
push
and
inc
inc
dec
jns
or
aas
test
push
push
adc
mov
sbb
mov
je
add
dec
subb
shlb
pop
lret
fstpl
mov
xor
mov
cmp
shl
sbbl
js
push
jge
adc
mov
lods
je
shrl
xchg
pop
mov
int
mov
repz
insb
lods
xchg
hlt
push
lea
mov
loopne
shll
bound
jo
test
adc
add
inc
cmpl
cmp
adc
and
adc
pop
inc
inc
xor
in
inc
push
cmpl
adc
jne
adc
or
ja
and
mov
and
adc
pop
or
ss
inc
pushf
pop
dec
jge
lods
fs
inc
lods
add
out
fsubl
lods
or
inc
shlb
ds
insb
inc
dec
test
vpmacsswd
or
cltd
jmp
sbb
mov
xchg
fsubrl
push
push
aaa
test
push
sub
lods
add
xor
out
pop
push
cli
or
xor
mov
or
pop
jmp
adc
clc
push
fisubl
push
xchg
clc
jne
pop
xchg
mov
lods
scas
jge
into
out
push
aam
push
xchg
mov
jmp
adc
cmp
or
mov
fildll
inc
and
sbb
jns
xchg
adc
and
jmp
andb
pop
icebp
adc
or
cmpsb
dec
cmp
and
clc
sahf
inc
loopne
mov
add
call
push
pop
jbe
movsb
xor
sub
pop
sahf
pop
jbe,pn
fdivl
ret
and
or
mov
dec
pop
pop
mov
xorb
je
xchg
mov
shll
jno
fidivrl
sub
sub
int
cmp
orl
test
mov
mov
jne
cmp
push
adcb
jo
or
xchg
push
ret
push
dec
add
movsb
aam
push
xchg
sbb
xchg
and
or
mov
mov
jp
mov
insb
pop
shlb
mov
add
add
out
es
cmpsl
mov
xchg
call
cmp
and
cld
rolb
cmpl
add
jmp
mov
mov
bound
cwtl
pop
mov
andb
mov
adc
pusha
orl
and
arpl
mov
jo
loope
in
xor
cltd
cltd
push
or
mov
mov
inc
cs
fwait
sub
pop
dec
xchg
or
bound
divb
jo
popf
lds
int3
pushf
mov
sbb
sub
sbb
fs
test
jns
ret
mov
mov
cwtl
sbb
cmp
xor
je
lea
test
push
or
pop
mov
xchg
jne
jo
test
xor
and
and
outsb
scas
add
or
sbb
test
push
jl
insl
stos
rclb
roll
sub
cmp
rcrb
jbe
sub
add
mov
mov
sub
aaa
push
pop
or
add
lds
ljmp
popa
push
inc
push
sarb
and
jb
mov
repnz
push
stos
or
rcrl
dec
sbb
jo
mov
xchg
mov
int3
imul
lods
cmp
push
push
cwtl
add
hlt
insb
jmp
ds
jne
sti
xor
push
cld
add
aam
test
dec
add
mov
ds
aam
lods
pop
xorl
pop
fstpt
mov
or
add
sbb
sbb
sbb
xchg
cmp
leave
mov
loopne
jmp
cmp
daa
or
mov
pop
xchg
add
jne
ret
rcl
mov
or
adc
and
sarl
jns,pn
and
adc
xchg
movsl
arpl
add
je
inc
adc
and
out
adc
adc
adc
inc
in
push
fs
out
mov
mov
mov
enter
push
ds
dec
mov
cs
dec
sub
pop
sbb
xor
dec
clc
sub
pop
sar
aas
mov
mov
adc
pop
pop
enter
adc
mov
adc
gs
dec
adc
adc
adc
adc
mov
sbbb
clc
push
push
in
fcomps
fsubrs
mov
inc
cs
out
add
and
ret
lcall
push
xor
push
cmp
inc
xor
fldt
push
jne
leave
pop
pop
scas
jo
jo
inc
sub
lret
sub
xchg
inc
mov
sbbb
push
xchg
fs
lock
dec
inc
and
das
jmp
cmp
sti
add
bound
dec
cld
cmp
add
xchg
fcoml
dec
cmp
fmuls
movsb
andb
jge
cmpsl
js
in
lea
test
mov
inc
xchg
movsb
stc
mov
jmp
push
das
mov
fists
fistps
adc
push
dec
xchg
xchg
xchg
insl
loopne,pn
mov
inc
push
add
xor
add
loopne
mov
sbb
outsb
lock
jne
mov
sub
sbb
test
xchg
mov
inc
pusha
popf
in
ja
jb
inc
push
cld
jnp
push
test
pushf
ss
and
jmp
mov
imul
push
aam
sahf
mov
push
xchg
push
xor
jne
push
sub
jmp
mov
push
mov
push
add
rorb
iret
nop
mov
mov
test
insb
aam
mov
dec
pop
jg
and
mov
inc
or
xor
cmpsb
push
pushf
int
ja
mov
xor
dec
cmp
mov
js
sbbb
inc
sbb
mov
into
and
adc
adc
aam
inc
rcl
and
push
jnp
fcom
dec
pop
jne
add
cmp
push
mov
mov
stos
mov
mov
adc
push
negl
mov
xlat
mov
cmp
pop
push
xor
cmp
into
scas
test
repnz
add
cmc
aam
sbb
loopne
pop
mov
sbb
push
je
stos
sbb
cmp
mov
push
js
clc
daa
and
es
sbb
push
push
negb
jge
dec
add
test
iret
or
les
push
fldt
and
das
dec
mov
sbb
pushf
adc
sbb
scas
insl
fnsave
jle
mov
test
add
repnz
jp
enter
lods
fstps
shlb
or
out
sbb
repz
adcl
add
arpl
xor
clc
add
lret
add
or
repnz
pop
dec
test
int3
and
out
std
ret
test
test
jge
and
pop
push
scas
add
dec
pop
in
cmp
lods
adcb
sub
repz
add
rorb
sub
push
pop
mov
or
stos
jno
movsl
rol
mov
dec
insb
sub
xor
rorl
lahf
adc
pusha
dec
pop
mulb
cmpsb
sub
ljmp
scas
push
adc
push
dec
inc
std
rorb
push
int
ret
pop
repnz
cmp
add
js
xchg
mov
dec
add
pop
adc
outsb
add
add
mov
push
xchg
repz
add
clc
out
pop
mov
test
je
push
push
mov
sti
gs
cmpl
push
mov
dec
add
or
jb
ljmp
loopne
iret
adc
or
and
outsl
mov
ja
pop
rorl
into
or
sbb
loopne
cld
cs
cmp
push
loope
or
mov
insb
xchg
xor
loop
xor
cli
mov
jmp
push
std
pop
mov
psubw
mov
jns,pn
mov
pop
add
bound
scas
dec
rorl
xlat
mov
out
call
inc
aaa
mov
neg
push
or
inc
push
or
mov
push
bound
dec
vpsrad
xchg
pop
push
shl
dec
mov
ljmp
xor
push
rcll
outsb
pop
pop
repnz
loope
pop
sub
dec
sahf
andb
pop
jno
dec
push
bound
xor
lea
arpl
in
and
cmp
jne
orl
bound
movsl
jecxz
mov
repnz
mov
mov
mov
aad
stos
add
andl
test
clc
lea
xor
pop
daa
adc
adc
mov
pop
clc
jecxz
inc
jo
adc
fisttpll
push
lea
mov
pushf
aam
jmp
fisttps
mov
add
xchg
xor
test
push
add
pop
mov
push
es
es
inc
loopne
mov
inc
test
inc
addr16
mov
push
clc
js
mov
bound
rcll
dec
les
pop
incl
jmp
pop
mov
loope
js
in
sub
or
aad
xchg
imul
mov
adc
sub
jne
sub
add
and
and
xor
cltd
sarb
sbb
push
or
add
add
pop
add
icebp
je
xor
jecxz
push
leave
and
adc
bound
adc
shll
and
xchg
aas
adc
inc
jle
ja
xor
rorl
xchg
inc
inc
add
stos
dec
inc
test
add
dec
inc
test
int
add
sbb
sbb
cltd
inc
add
sbb
adc
adcl
sub
dec
xor
fisttpl
xor
inc
std
jl
jmp
jge
aad
adc
or
or
jne
shlb
sub
push
or
insb
rol
sub
dec
je
dec
add
enter
testb
inc
orl
sarb
cmpsb
inc
rcrb
lds
inc
in
repz
js
jae
lea
jmp
cmpl
pop
sbb
sub
shll
loop
xor
loope
xchg
push
mov
lods
push
mov
rorb
in
sub
sub
in
jbe
nop
lcall
inc
pop
add
or
js
adc
jne
xchg
hlt
mov
sub
or
in
adc
add
jg
push
or
pop
js
hlt
sub
pop
pusha
insb
movsb
mov
push
inc
sbb
xchg
lock
sub
push
arpl
or
add
sarl
add
xor
cltd
sbb
sub
jne
or
or
sub
cmp
add
sbb
pusha
inc
sbb
lods
pop
cld
push
nop
popa
pop
add
lahf
or
repnz
and
lea
cmp
shr
int3
test
je
rolb
cmp
mov
adc
sub
shl
dec
jecxz
stc
mov
add
dec
mov
insl
sbb
adc
nop
cmpl
icebp
add
movsl
push
je
cmp
cwtl
xchg
jl
popa
cmpsl
adc
push
jmp
cmp
xor
sbb
js
iret
xchg
js
xor
bound
push
stc
xchg
mov
inc
outsb
or
mov
xchg
add
ja
xchg
adc
and
add
or
fdiv
dec
xchg
popa
sbbb
mov
pop
dec
jb
insl
jge
mov
add
cmp
je
cmp
or
ljmp
mov
add
nop
popa
and
jmp
cltd
cli
std
lea
cmp
inc
and
cmc
std
cmp
pop
dec
inc
mov
inc
es
nop
add
inc
or
pop
js
adc
push
pop
cmpl
int3
push
or
xor
inc
sub
xchg
push
outsl
test
pushf
pushf
adc
jae
push
rcrb
inc
adc
push
in
outsl
adc
das
jae
sub
jmp
aad
or
loop
dec
into
pop
xorl
xlat
dec
subb
jb
test
or
inc
adc
lahf
lods
ret
cwtl
mov
ret
adc
pop
or
inc
mov
aas
jnp
cmp
adc
orb
jo
mov
or
cmp
fdivl
or
je
test
dec
fnstenv
in
bound
clc
jne
mov
push
test
gs
or
sub
push
push
loopne
pop
cmp
stos
or
add
es
nop
test
dec
xor
sbb
xchg
inc
cs
hlt
jns
icebp
sbb
jb
mov
push
mov
ds
pop
pop
adcl
cmp
call
jo
dec
xchg
inc
sbb
mov
ror
sub
pop
and
js
loopne
fnstenv
mov
or
push
mov
in
mov
fcomps
dec
inc
jecxz
sbb
cmpsl
scas
out
or
ja
push
cmp
add
lcall
iret
movsl
push
add
lea
in
outsl
cltd
pop
cs
test
or
pusha
pop
loope
pop
push
sub
gs
and
dec
push
hlt
neg
sbb
and
bnd
loop
idivb
mov
push
sub
push
adc
test
cwtl
pop
ret
mov
inc
cmpsb
test
add
or
test
adc
cmc
ds
pop
xor
add
in
jge
sbb
and
adc
sbb
ss
ret
push
je
sbb
in
mov
outsl
ljmp
pop
cmp
jbe
or
jne
push
testb
cmpsl
ret
test
insb
adc
jle
lret
pusha
testb
add
ds
data16
push
fcmovnb
gs
xchg
popa
loopne
shr
inc
cmc
jmp
pop
jl
fadds
cmp
loopne
or
iret
or
adc
sbb
sbb
fists
pop
cwtl
sbb
mov
mov
cmp
clc
pop
movsl
mov
push
jmp
sarb
adc
mov
and
mov
test
xchg
js
add
add
testb
xor
mov
stos
shlb
negb
mov
shlb
dec
loopne
insb
gs
and
test
ret
jnp
xor
bound
mov
push
hlt
loop
mov
add
inc
daa
sub
inc
in
sub
add
adc
std
xor
mov
inc
and
cmp
or
pusha
adc
sub
inc
adc
cltd
cmp
add
and
pop
jo
mov
inc
adc
push
movsl
adc
mov
sbb
xorb
sbb
leave
ret
jns
mov
movsl
clc
add
movl
pop
jnp,pt
and
xchg
dec
daa
popf
add
pop
frstor
xchg
add
mov
cmp
lods
fmulp
lods
jae
dec
call
lock
fiadds
pop
xor
or
cmpl
xor
adc
add
loopew
add
mov
test
out
aad
add
fs
aas
pop
movb
push
xor
push
xor
mov
pop
fcompl
and
cltd
mov
xor
add
jne
lock
xlat
mov
add
fs
xchg
jne
shl
adc
ror
xchg
iret
push
arpl
fcomp
out
mov
inc
cmp
jae
cmp
je
mov
out
cmp
cld
cs
adc
add
insb
push
iret
xchg
jo
and
ja
push
xchg
pop
mov
or
insb
pop
push
jp
jb
push
jae
dec
pop
movaps
xor
or
pop
je
inc
push
shlb
add
jbe
cmc
rolb
pusha
ss
cmp
cmp
adc
hlt
rcrl
push
jns
or
sahf
jno
sub
xor
adc
xor
outsb
and
cmp
pop
dec
jbe
movsl
out
add
popf
sub
push
and
push
mov
lods
fucom
add
sar
or
push
lods
mov
or
cli
fdivrs
mov
hlt
and
lea
into
mov
mull
sbb
out
in
dec
js
mov
jmp
push
dec
add
das
dec
mov
and
add
pop
xlat
cltd
aam
adc
sub
sub
mov
test
adc
xor
test
loopne
jge
enter
cmpsl
fucomp
cmp
icebp
sub
lret
packsswb
test
jbe
and
fdivl
or
or
xor
and
jb
xor
repnz
roll
jp
addr16
and
lock
dec
pop
jl
sbb
test
and
mov
fcoml
cmp
xchg
xchg
mov
inc
add
cwtl
adc
cmp
inc
lock
add
and
pop
push
inc
fcoms
leave
rcll
fsin
sbb
adc
mov
xchg
js
jno
insl
je
mov
das
pcmpeqb
inc
std
push
add
cmp
out
idivb
mov
out
js
cmpsl
inc
push
aam
inc
inc
testl
fsubs
mov
sarl
fcoml
subb
jle
jp
shl
daa
mov
loope
xor
sbb
mov
scas
mov
mov
and
push
jge
mov
ljmp
xchg
out
fdivrs
cmp
push
cli
and
push
sub
xor
inc
in
je
add
mov
mov
inc
or
sbb
cmp
fisttps
mov
adc
jnp
mov
sub
pop
cmp
pop
mov
mov
adc
mov
enter
xlat
ret
pop
lea
fbstp
call
add
xor
push
pushf
mov
fistpl
cmp
popf
pushf
ficompl
fdivl
je
xor
sub
cmp
pop
mov
push
aas
and
scas
mov
dec
adc
add
mov
jae
lea
ja
cmpb
jne
mov
jne
fsubr
xor
bound
lea
jo
or
dec
xchg
jae
xchg
lret
ret
daa
daa
add
add
ss
mov
lea
rolb
sub
sub
or
dec
mov
test
xor
adc
xchg
bound
jae
call
jae
leave
jmp
push
inc
subl
test
cli
dec
and
dec
sarl
mov
sbb
push
adc
add
xchg
mov
dec
pop
imul
cltd
xor
xchg
lods
aam
cmpsb
pop
movsb
adc
notb
rclb
cld
cmpsb
or
insb
and
mov
je
lea
adc
push
adc
jo
nop
jmp
negb
vmovaps
divb
adc
das
dec
and
sub
inc
push
push
fs
lods
cmp
ret
xor
cmp
enter
pop
push
lea
cmp
push
pop
movsl
sub
popf
jmp
ja
push
loop
or
mov
fisttps
jmp
clc
or
fsub
add
dec
or
add
xor
push
outsl
or
dec
dec
lahf
aam
inc
outsb
mov
add
pop
pop
mov
mov
mov
ljmp
mov
arpl
pop
iret
dec
xchg
ret
sarl
sbb
test
jne
adc
xchg
or
push
lcall
inc
and
xchg
or
data16
cmpsl
add
rolb
add
add
jns
adc
pop
pop
in
mov
mov
je
dec
add
adc
push
pop
ss
fisttpl
orl
push
repz
scas
jbe
sbb
sub
jmp
icebp
add
cwtl
loopne
sbb
arpl
push
mov
adc
orb
js
aas
pop
cmp
mov
mov
es
mov
or
cmp
push
cmpb
ret
push
jae
lea
push
sub
sbb
pusha
stos
lods
mov
push
aaa
stos
adc
popa
cmp
ja
sbb
jnp
dec
pop
ret
mov
sub
ret
out
and
adc
pop
cmpsl
imul
add
cmpb
xor
fnstenv
inc
jmp
into
rcrb
push
cmp
cmp
sub
cmp
movsb
push
dec
cmp
xor
push
sub
addl
add
jo
and
sahf
popf
ljmp
ret
sub
out
push
dec
outsl
adcb
cmc
xchg
jo
push
out
insb
mulb
call
mov
push
cmc
dec
dec
jmp
leave
in
rorl
add
and
push
xchg
fcmovb
mov
push
subl
sub
out
popa
rorb
jb
add
test
lock
adc
icebp
push
lea
js
ret
push
test
out
mov
or
add
xlat
push
cmpsl
and
out
in
mov
push
aad
xor
or
iret
mov
dec
jp
mov
adc
pop
push
jecxz
cwtl
lcall
sub
int
or
jp
rcrl
je
xor
xor
cmp
add
loop
lds
pop
lea
lret
mov
mov
and
andl
fimull
push
mov
cmp
sub
push
inc
ret
pop
or
add
es
xchg
or
arpl
pop
lods
add
loopne
or
sbb
mov
clc
iret
jne
jno
jp
std
cmc
imul
dec
or
cmp
inc
int3
test
mov
add
cwtl
out
addr16
cmpsb
imul
pop
repnz
push
add
stos
and
xor
loop
ret
inc
movb
bound
push
js
jbe
arpl
out
std
push
mov
add
cmp
inc
add
lea
or
fdivr
adc
lock
rcrb
add
adc
push
cmp
cmp
xchg
jmp
inc
test
xor
sbb
rorb
loopne
pop
sbb
add
mov
or
sub
jge
pop
mov
bound
notb
xor
push
cltd
iret
xchg
dec
inc
add
cmp
pop
xchg
cmp
sti
ss
bound
fdivrp
inc
xor
jbe
cmp
mov
push
ret
sbb
mov
cmpl
pushl
rorl
jno
xchg
mov
pusha
jo
adcl
xchg
or
andb
das
in
and
movsl
pop
adc
add
add
jo
insb
lea
fadd
mov
cmc
cmp
fildll
fmuls
loopne
roll
aas
xchg
shll
cmp
hlt
pop
xchg
and
mov
out
lcall
cmc
adc
sbb
mov
sub
mov
sbbl
daa
test
ljmp
mov
jge
inc
sub
les
cmp
add
sub
push
and
dec
inc
pushf
cli
xor
pop
adc
or
mov
dec
fsqrt
addr16
push
mov
inc
test
add
mov
test
mov
and
ja
mov
xor
xchg
pop
pop
sbb
push
xchg
xchg
xchg
out
xchg
cmp
pop
push
push
pop
mov
mov
mov
mov
ret
pop
mov
lods
xchg
push
dec
jmp
leave
test
jne
inc
loop
ja
push
sub
add
sbb
nop
inc
mov
jnp
pop
rcll
test
pop
cmpsb
nop
clc
sti
mov
scas
jle
jne
push
dec
insb
mov
rorl
or
mov
cltd
mov
sub
lock
pop
js
js
cmp
adc
or
mov
push
fcoml
and
jns
xchg
jmp
jae
lcall
adc
aam
pop
fimuls
cmpl
call
stos
adc
adc
push
add
test
push
mov
push
or
pop
sbb
mov
cmp
jne
mov
inc
test
xor
or
cmp
lahf
inc
xchg
ret
mov
test
daa
cmp
xlat
sbb
or
add
cld
pop
mov
xor
inc
xchg
pop
fnstenv
push
mov
dec
popa
add
or
adc
in
jae
sub
iret
mov
fildl
mov
jo
rcrb
aaa
pushf
inc
adc
pop
pusha
dec
out
fwait
ret
mov
out
into
push
push
mov
push
ja
imul
push
or
pop
out
nop
adc
push
inc
movzwl
js
xabort
inc
je
test
xchg
dec
pop
or
or
jo
leave
cmpsb
pusha
sub
js
test
mov
xchg
xchg
add
cmpl
push
or
pop
sub
push
mov
mov
popa
cmp
mov
incl
push
imul
ds
push
loopne
jecxz
cmc
push
adc
push
inc
rorb
lar
cs
pop
dec
xor
jmp
xor
push
jecxz
mov
sub
jmp
jl
js
fildl
jo
and
sbb
sbb
push
push
jl
or
mov
xor
add
lcall
rcrb
call
pop
sub
fmul
cmpsl
je
or
mov
imul
pop
or
add
jle
mov
and
int
push
pop
dec
pusha
cli
mov
dec
and
sbb
or
cmp
adc
dec
loope
stos
sti
dec
orb
pop
sub
rcrb
test
push
mov
inc
stos
or
mov
sub
push
pop
cmp
jbe
inc
dec
cmpps
add
pop
push
fs
push
das
pushf
sti
mov
or
inc
sbb
xrelease
mov
cld
lods
ret
fnstcw
push
adc
cld
js
sbb
add
insl
cmp
sti
push
fs
cs
clc
xor
daa
enter
mov
clc
xchg
dec
test
aam
xorb
add
clc
shl
push
cmpsb
jbe
jne
mov
sub
pop
fs
enter
push
push
sbb
clc
popa
and
mov
mov
dec
cli
jp
loopne
or
and
cmp
push
mov
add
mov
insl
popf
xor
jp
cmp
mull
inc
adc
rcrb
pop
jecxz
mov
jl
subl
rcrb
cmp
sub
adc
add
scas
mov
ret
sub
int
lgs
ljmp
mov
jg
xchg
roll
sub
push
sbbl
hlt
out
or
dec
add
inc
or
mov
enter
mov
rcll
dec
and
sbbb
loop
inc
arpl
das
push
repnz
insl
clc
scas
cmpsb
mov
mov
cwtl
jno
pop
test
rcrl
dec
push
cmp
mov
xlat
adc
inc
aas
sbbb
mov
int
jp
mov
daa
xor
fstps
in
mov
mov
out
push
loope
pusha
out
add
orl
pop
subb
xor
clc
push
mov
out
jmp
je
xor
and
outsl
push
xor
pop
scas
adc
jne
inc
aas
mov
sub
jl
dec
loope
aaa
mov
leave
bound
pushw
ljmp
hlt
aas
lea
test
mov
or
mov
sub
pavgb
mov
adc
lret
iret
push
pop
sub
add
sub
mov
sbb
cs
inc
add
fmuls
xlat
add
movsb
jno
sbb
nop
into
mov
cld
or
push
push
adc
mov
fmull
mov
mov
inc
ret
cmp
movb
dec
inc
mov
pop
mov
push
or
fimuls
rcll
push
adc
nop
xchg
adc
push
xlat
sub
je
xchg
mov
les
stos
sub
xor
imul
sbb
mov
mov
and
push
sub
and
adc
out
add
rorb
cmp
mov
imul
jo
mov
insb
dec
fdivrp
js
cmc
push
add
bswap
out
cmc
sbb
inc
push
xor
add
sbb
lcall
push
pushl
sub
sahf
mov
sbb
test
loopne
push
dec
sbb
cmp
add
push
cmp
sbb
loopne
xchg
inc
in
mov
sbb
lcall
lods
test
outsb
cs
push
dec
enter
in
xor
xchg
inc
in
push
mov
sbbb
test
je
sbb
pop
loop
or
orps
jb
test
cmp
cmc
rorb
popf
les
mov
jno
ffreep
jns
add
pop
sarl
jne
andb
jp
cmp
shrl
mov
or
and
pop
lcall
or
sub
mov
pop
jp
jne
or
jne
das
dec
and
mov
shlb
cmp
pusha
ds
ljmp
fs
fistps
lahf
cmp
add
mov
add
jo
into
add
clc
stos
jl
js
sbb
imul
jno
repnz
cld
dec
jnp
add
push
popa
inc
add
mov
dec
outsb
imul
or
jle
lods
push
push
xchg
push
add
xchg
push
jnp
hlt
jne
outsb
xor
sarb
sub
mov
adc
mov
push
push
cmp
mov
jge
fiaddl
or
lea
lods
adc
dec
out
jp
or
mov
inc
out
push
sbb
cmp
pop
mov
dec
scas
lcall
inc
ret
add
enter
lock
loopne
jg
and
lahf
movsb
adc
jo
mov
xor
mov
js
rcll
cmp
add
ret
jmp
gs
mov
sub
insl
cmp
push
dec
inc
sbb
inc
out
adc
sub
lret
mov
inc
cmpsb
mov
dec
cmp
xor
dec
aam
push
rolb
dec
addb
clc
and
mov
fs
rolb
push
jne
dec
xchg
mov
push
cli
or
pop
sub
sbb
jns
xor
jne
add
push
fdivs
push
je
xor
outsl
sbb
dec
or
sbb
mov
pop
push
cmp
scas
aaa
loopne
lcall
pusha
push
mov
test
sub
and
mov
cwtl
int3
or
cmp
je
add
push
push
mov
push
or
jo
daa
les
subb
xchg
xchg
cmpsl
cmp
call
mov
xor
xlat
dec
rcrb
cmp
mov
jnp
push
mov
or
cmp
push
push
pop
mov
fdivrl
jl
mov
mov
js
shl
push
int
cmp
ficoms
call
sbb
push
cmc
addr16
call
xor
je
dec
and
sbb
test
dec
outsl
fcoml
push
sbb
sub
fwait
icebp
add
stc
mov
fprem
cmp
jne
decb
or
pop
fdivs
mov
mov
icebp
mov
jge
and
and
dec
pop
ds
sbb
dec
and
cli
xchg
jbe
lock
inc
movl
or
fwait
bound
xlat
movsb
or
mov
add
js
inc
rolb
or
inc
sbb
inc
sub
shrb
sti
loopne
stos
rolb
add
pusha
sarl
jb
mov
mov
insl
pop
adcl
bound
xchg
add
sbb
lcall
add
dec
shll
jo
nop
xor
jl
mov
or
call
push
ficomps
test
xor
int3
xchg
popf
ss
xlat
inc
mov
xor
push
movl
ja
imul
int
adc
and
pop
mov
add
inc
pop
add
les
mov
mov
pop
dec
dec
test
xchg
cmp
fmuls
rorb
sbb
orb
jo
enter
push
orb
jbe
inc
dec
push
out
push
popf
adc
push
fsts
xor
push
sbb
stos
add
sbb
dec
cmp
add
xor
aam
out
xor
push
adc
push
mov
push
jo
scas
lods
adc
cmp
and
pop
adc
enter
leave
add
cmp
mov
imul
lea
push
inc
stos
cli
xchg
adc
lsl
inc
adc
jne
sbb
test
mov
movsl
cmpsb
mov
sbb
rorb
push
ret
pushl
les
xchg
mov
scas
and
jl
mov
sbb
push
test
in
mov
mov
fwait
jl
dec
mov
das
cld
inc
test
jo
ficompl
and
test
and
and
add
dec
and
dec
push
fwait
out
shlb
xor
sub
fucomi
mov
sub
out
roll
pop
jne
orl
dec
adc
sbb
fidivs
imul
sbb
pop
pop
dec
test
cmp
frstor
or
test
sub
xlat
mov
adc
das
call
stos
push
fldl
sar
lds
cmp
das
add
data16
in
xor
enter
movsl
jnp
clc
sub
mov
inc
xchg
les
mov
add
mov
stc
push
jne
mov
lock
ficoml
mov
clc
jo
push
cmp
push
dec
jo
mov
jne
ds
rcll
xorl
imul
dec
fwait
pop
lahf
mov
hlt
cld
pusha
ret
sbb
dec
mov
sbb
sbb
dec
jge
mov
push
divb
or
xchg
sbb
int3
push
dec
dec
mov
sub
push
pop
popa
push
push
inc
cmp
xor
lock
mov
ljmp
cli
out
fidivrs
sbb
or
iret
lods
pop
mov
sbb
sub
gs
xor
dec
lods
pop
jmp
push
adc
push
push
dec
jns
and
test
test
or
mov
aas
sti
push
jo
inc
insl
adc
aad
insb
aam
sub
and
ss
jecxz
test
adc
out
fcmove
adc
mov
repnz
xchg
sbb
in
push
faddl
lds
scas
mov
rorb
adc
lea
addl
fnstcw
pushl
and
jmp
scas
testl
aaa
add
mov
sbb
inc
inc
lock
sarb
and
add
or
nop
test
mov
gs
je
inc
inc
push
cltd
pop
fs
pusha
pusha
fs
xchg
insb
insb
push
ja
out
movsb
xor
jmp
lods
and
jnp
cwtl
push
xchg
inc
pushf
cmp
pop
mov
mov
je
popf
add
or
or
sbb
loop
lock
lea
push
mov
push
sub
inc
and
jmp
push
jne
enter
mov
roll
imul
pusha
rcll
outsb
dec
adc
jnp
add
cld
test
lock
jge
cmc
cmp
dec
jmp
rcll
into
stos
ret
adc
adc
sbb
sub
dec
popf
inc
mov
mov
push
mov
lret
add
push
ret
adc
dec
mov
fisubrl
clc
jo
sub
sub
xor
cmp
loopne
dec
aad
mov
sbb
cli
icebp
mov
and
pop
rol
roll
mov
test
push
dec
je
and
dec
pop
shlb
or
inc
clc
adcl
and
jle
test
shll
jp
and
jne
adcb
cmp
xchg
xchg
out
sbb
jns
sbb
stc
push
ret
mov
jo
popa
xchg
add
test
mov
and
cs
loope
xor
mov
jne
outsb
fcompl
fsubrs
outsb
mov
xor
fucomi
or
push
ret
jne
or
fidivrs
clc
outsb
inc
jg
sub
mov
cmp
andl
sbb
iret
pop
shll
push
and
dec
dec
rorb
ficoms
xchg
cwtl
push
mov
mov
sbb
dec
push
or
pusha
into
ss
sbb
xor
or
lock
fs
in
fcoms
inc
and
jecxz
fwait
notl
cmp
mov
lret
movsb
mov
outsb
add
adc
sub
sub
add
pop
arpl
sbb
imul
ficoml
jb
hlt
mov
lock
mov
cwtl
or
sub
cmp
out
pop
add
fs
addb
cltd
fnstenv
and
cmp
push
push
popa
pop
fdivs
xchg
std
push
sbb
rolb
test
into
in
outsl
push
ret
jge
int3
mov
dec
xchg
pop
sbb
sbb
cmp
lods
shll
mov
sbb
rolb
lods
xchg
adc
or
addl
mov
and
or
popa
out
pusha
xor
out
jmp
pop
in
adc
dec
push
xchg
push
dec
push
movsb
push
push
push
aaa
pushf
jo
mov
and
adc
add
out
xor
adc
xor
jo
bound
fsubl
nop
push
cli
sub
dec
cmp
mov
jecxz
dec
inc
in
sub
js
cltd
mov
push
push
push
xchg
or
cmp
adc
fiadds
mov
js
lock
cmpl
adc
inc
mov
out
fmuls
aad
push
movsl
pushf
test
rolb
je
push
sub
add
aas
pop
push
cld
xor
mov
mov
loopne
idivb
pop
jae
jp
call
enter
mov
inc
xor
dec
pusha
sbb
pop
mov
movsl
add
dec
les
jl
sbb
and
push
add
sbb
jmp
daa
sub
jo
aad
insl
bound
cmp
jg
dec
or
lods
sbb
out
and
orl
xor
pop
and
mov
mov
cmp
and
sbb
cmp
repnz
hlt
sub
mov
ja
mov
fidivl
and
pop
lcall
ja
movsl
sbb
je
movsl
push
roll
divl
push
pop
ljmp
pop
lahf
push
cmpsl
adc
orl
add
adc
movsb
jo
xor
push
sub
outsl
xor
jbe
sub
lret
in
sub
inc
mov
dec
jmp
or
inc
push
or
cmp
mov
adc
fsubl
xor
and
stos
sbb
jno
push
and
inc
sbbb
pop
mov
add
inc
jg
adc
imul
gs
adc
push
lock
lret
push
or
jo
mov
mov
sbb
push
sub
jnp
out
add
test
jle
mov
add
jp
push
add
jp
cs
or
pop
lods
popf
fsubrl
pop
cmp
cmp
pop
adc
jns
xor
push
xchg
pop
aaa
rcrb
or
xlat
mov
imul
and
mov
jg
xor
call
or
jbe
jge
push
mov
leave
jo
add
icebp
push
xor
sub
cmpsl
popa
fstl
xchg
push
xor
push
or
mov
inc
fimuls
push
mov
add
xchg
cwtl
sarl
mov
xchg
adc
or
sbb
sbb
xchg
jbe
add
sbb
xchg
jb
mov
jnp
xor
fs
push
and
xor
push
inc
xor
cwtl
xchg
mov
and
jl
cmp
ja
mov
fwait
xchg
add
xchg
cmpl
adc
js
jecxz
mov
push
push
push
sbb
shll
inc
push
sbb
iret
frstor
nop
sbb
cmpb
lret
cmp
or
mov
or
dec
pop
movsb
adc
jnp
lds
shll
sub
ret
in
jmp
cmp
add
mov
lods
stc
inc
cmc
js
dec
cmp
sbb
mov
sub
push
pop
mov
pop
add
push
sahf
ds
cmpsl
orb
jnp
idivl
mov
inc
xor
and
ret
mov
es
test
or
mov
mov
sub
mov
add
loope
sbb
and
and
enter
js
pop
fs
enter
add
mov
pop
mov
fs
imul
data16
jno
pop
jo
push
arpl
cmp
xor
mov
inc
xor
shll
fcoml
adc
scas
add
lret
xchg
repnz
stos
pop
xor
sbb
mull
aaa
rorl
rorb
push
ret
popl
inc
and
addl
mov
je
push
pop
cmp
adc
sub
xor
shll
and
mov
mov
jecxz
adc
pop
bound
in
mov
xor
inc
push
xor
pop
sub
and
es
mov
movsl
add
pop
pop
sub
xor
xor
pop
push
in
pop
lock
pop
sbb
sub
mov
push
je
and
jbe
ret
aas
jle
adc
cs
jne
lock
mov
xor
add
jl
fadd
pop
testb
je
xor
jbe
fdivl
cmp
dec
or
dec
jl
loope
xor
push
test
jne
fistl
js
adcb
pop
sbb
push
fisttps
xchg
push
leave
or
xchg
cmc
xor
or
cmpsl
jnp
sub
add
cmp
inc
mov
aas
mov
testb
xor
xchg
inc
push
xchg
sbb
mov
dec
addr16
sarl
aaa
add
mov
sub
push
or
jge
loopne
push
jecxz
movsl
push
push
lock
arpl
inc
ds
or
and
and
cld
push
push
mov
push
push
push
add
shr
aaa
stc
or
or
xchg
inc
push
lock
sub
xchg
mov
mov
mov
or
sahf
xchg
ret
nop
inc
mov
inc
and
out
or
div
neg
adc
ja
jp
pop
daa
mov
xchg
jo
stos
or
mov
lods
mov
add
dec
fwait
inc
fiaddl
addr16
pop
push
push
lcall
or
push
inc
pop
cwtl
imul
cltd
idivl
sbb
lret
mov
inc
nop
adc
icebp
cwtl
add
add
sub
sub
mov
or
push
ret
adc
and
push
fwait
mov
jb
pop
add
or
sub
je
mov
xchg
bswap
pop
mov
jecxz
push
int
pusha
addr16
or
lcall
imul
filds
and
push
mov
adcb
adc
rolb
mov
xchg
fsubs
adc
aad
or
mov
sub
jae
daa
js
cld
sbb
aad
test
push
push
mov
adc
cmp
mov
dec
jp
out
andl
cli
add
outsb
sbb
or
movsl
or
aam
fstpl
or
mov
mov
xor
in
clc
push
jns
or
mov
push
add
adc
lds
arpl
pop
xchg
sub
lods
rcrb
cmpsb
sbb
push
mov
jmp
outsl
push
or
jae
movsb
ret
call
xchg
mov
xchg
lock
orl
cwtl
dec
push
pop
or
or
insb
mull
int
add
dec
dec
mov
lds
inc
clc
add
stos
lcall
cmp
sbb
adc
in
pmulhw
push
cmp
adc
sbb
cmp
push
into
add
inc
cmp
icebp
jle
adc
mov
xor
add
push
jl
into
inc
loope
adc
push
pusha
fs
mov
push
insb
cmc
inc
mov
sbb
ss
cmp
or
addl
lcall
push
int3
and
mov
movb
cmpsl
add
pop
mov
sbb
incb
into
xor
shr
inc
add
push
sti
rolb
dec
and
das
sbb
adc
cmp
out
add
loope
sbb
or
pusha
insb
std
push
or
pop
dec
popa
push
jnp
adc
add
jno
cmpsl
jbe
dec
push
stc
outsl
insl
out
in
cld
mov
jae
movsl
mov
insl
dec
mov
es
sbb
out
fimull
sbb
popa
sbb
push
arpl
push
pop
adc
inc
lock
and
push
xchg
test
adc
and
cwtl
cmp
mov
lret
push
idivl
dec
add
xor
js
pop
js
dec
push
push
mov
xor
mov
and
push
int3
xchg
push
pop
push
sbb
xor
pop
orb
in
xor
bound
or
repz
jae
loopne
adc
nop
lock
or
insb
leave
out
mov
inc
adc
insb
insb
int
push
xorb
cmp
inc
test
jg
pop
imul
fadds
rolb
jmp
jg
inc
xor
bound
mov
test
jle
movsl
xor
je
jo
cmp
add
dec
jne
push
loopne
jno
mov
add
adcb
mov
jl
add
loopne
push
push
jnp
outsl
pop
test
jb
pop
mov
mov
xorb
test
lods
inc
dec
xor
jle
add
inc
xor
adc
cmp
xchg
jmp
imul
shll
fs
mov
repz
or
sbb
jo
in
mov
cmp
dec
xor
xchg
jne
adc
pop
fcmovu
adc
hlt
into
sub
adc
mov
adc
push
lock
dec
lret
test
or
jo
xchg
push
mov
adc
cmpsl
arpl
cmovns
mulb
nop
test
in
cmp
lcall
lea
mov
je
sub
add
and
in
in
lea
push
scas
outsb
xchg
add
sbb
andb
and
inc
xor
ret
pop
cmp
test
in
and
lcall
movsb
loopne
adc
mov
inc
ficomps
flds
cli
xchg
clc
decl
lea
sub
pop
mov
sub
xor
dec
testb
jbe
mov
les
push
xor
test
pop
dec
insl
sub
push
xchg
push
ror
repnz
pop
testl
xchg
sbb
sbb
es
in
adc
out
call
pop
inc
movlps
movsb
sysexit
mov
xor
xchg
sub
insl
inc
xor
inc
aaa
sbb
popa
jo
loop
js
add
cmp
sub
and
mov
push
push
fiadds
test
sbb
ficoms
mov
test
jge
jl
je
add
outsb
mov
jge
test
add
testb
jle
loopne
jle
xor
or
jl
neg
ret
add
dec
roll
je
xchg
and
fcoms
loopne
outsb
jno
cmp
imul
adc
push
push
push
and
inc
js
movl
pop
pop
push
push
push
roll
or
dec
dec
pusha
outsl
and
dec
in
bound
add
pop
and
cmp
mov
or
xor
adc
or
lock
cld
jo
ljmp
jl
pop
loopne
mov
cs
cmp
add
mov
sub
in
or
and
sub
mov
xchg
xchg
mov
sbb
push
add
add
fcmovu
push
lret
mov
shl
pop
pop
aad
adc
addl
in
mov
mov
xchg
sub
pop
jno
jle
mov
in
mov
add
es
pusha
cld
in
rorb
dec
inc
mov
fcmove
cmp
subl
insb
int
inc
xchg
sub
xchg
lret
and
mull
lret
pop
sbbl
inc
mov
adc
ret
cmp
inc
shl
mov
adc
adc
cltd
adc
xor
je
or
pop
adc
push
xchg
sbb
push
nop
fs
outsl
notl
andl
sub
cmp
ja
je
or
je
or
mov
sub
jecxz
jbe
sti
das
adc
sti
add
jns
dec
add
or
or
movsb
xchg
or
outsb
pusha
lock
sahf
popa
jnp
add
push
jmp
cmp
mov
pusha
push
adc
adc
push
xor
inc
les
scas
test
pusha
inc
or
sub
add
and
inc
dec
xchg
sub
lcall
cmp
xor
push
add
test
xchg
mov
mov
lret
push
cmpl
push
or
test
loopne
add
inc
es
or
fs
mov
or
push
sub
adc
mov
mov
ret
dec
test
xchg
and
and
gs
sarl
das
add
cs
inc
or
call
mov
pop
inc
clc
jecxz
dec
je
sub
jmp
sub
or
add
cld
inc
outsb
fcomi
adc
mov
sub
jp
test
daa
or
fs
or
push
adc
inc
push
mov
movsb
adc
sbb
outsb
pop
dec
mov
insb
adc
fnstcw
pop
dec
pusha
lret
cmp
divl
std
test
pusha
xchg
cli
jns
rolb
and
push
adc
inc
test
lods
adc
jne
jne
cmp
or
and
push
in
movl
inc
jmp
sbb
sbb
and
dec
cld
add
ret
out
je
push
push
add
icebp
clc
inc
das
sub
adc
push
mov
push
mov
xor
std
call
out
pop
ret
rolb
mov
push
int
jno
clc
pop
pop
je
push
pop
in
xor
jo
push
or
subl
pop
lcall
fcoml
inc
add
cmp
shrl
sub
enter
inc
rcll
dec
push
dec
movsl
pop
lods
pop
cmpl
sbb
mov
jns
nop
add
add
add
add
pop
shlb
pop
push
dec
mov
inc
mov
in
sub
in
jbe
out
xchg
and
in
add
adc
or
jge
mov
icebp
sub
inc
sti
cmp
js
lods
add
outsl
add
fcoml
shll
sub
in
push
in
and
mov
jnp
push
ret
pop
cmc
fsubrs
and
test
or
inc
sub
add
push
dec
mov
mov
lock
fidivrs
xor
icebp
in
pop
aas
pushf
xchg
adc
mov
mov
jo
mov
enter
xchg
push
xchg
dec
adc
inc
sbb
xor
scas
sub
push
lods
or
sbb
and
jne
arpl
stos
std
decl
or
ficoml
push
cmp
and
dec
pop
cld
sub
test
ljmp
movsb
push
jg
sahf
mov
cs
and
pop
xor
sbb
out
mov
cs
xor
push
cmp
faddl
push
daa
and
xlat
dec
mov
inc
shl
test
mov
inc
fcoml
xchg
mov
adc
daa
loop
jp
hlt
or
aam
mov
mov
xchg
clc
pop
stos
inc
pop
mov
pop
das
or
mov
push
jb
dec
leave
xorl
mov
subl
popa
outsb
or
push
je
daa
dec
mov
fwait
push
shll
cltd
or
bound
daa
clc
movl
cmp
or
and
adc
sbb
lahf
sub
arpl
push
sub
outsl
push
adc
rcrb
mov
or
inc
cltd
stos
sbb
jns
or
inc
mov
or
adc
fidivl
push
or
cwtl
push
loop
std
add
shlb
and
xchg
push
fldenv
in
adc
jg
add
shrl
cwtl
push
lds
jp
sahf
mov
inc
sub
push
inc
leave
je
rclb
dec
in
aam
fsubs
ret
sahf
mov
or
jo
cmpsl
push
xchg
push
sub
dec
sahf
imulb
push
lcall
xor
xor
aaa
divps
push
addr16
cmp
inc
mov
xor
inc
js
bound
lods
or
push
inc
dec
loopne
jmp
add
pushf
orb
out
filds
cmp
sbb
addr16
add
mov
or
ret
movsl
add
mov
stos
lds
sbb
inc
adc
mov
fistpll
ret
adc
adc
push
or
cmp
dec
lock
push
sub
adc
and
lock
ds
enter
scas
or
sub
popf
cmpsb
cmp
xor
cmpsl
xchg
adc
jne
add
add
cmp
xchg
mov
pcmpeqb
nop
jge
popf
add
leave
sub
sbbl
inc
pop
pop
mov
inc
sti
adc
mov
cs
push
das
xor
cmp
ret
xor
mov
movsb
or
inc
pushf
mov
sub
prefetchnta
lahf
xor
or
arpl
enter
jne
dec
jmp
or
adc
in
push
adc
iret
cmp
fcoms
xchg
jne
test
movsb
in
or
and
adc
cmp
add
ret
push
mov
sarl
negl
fmull
dec
sti
or
dec
je
fidivrs
sbb
xchg
cs
das
push
sbb
push
out
add
in
fiaddl
sbb
push
outsb
sub
mov
cmpl
sub
je
pop
cmp
movsl
stos
imul
cmp
dec
shrl
xor
lcall
sbb
test
dec
pusha
popa
and
divb
or
pop
jno
sub
popf
and
sbb
jle
cmpsb
add
jno
jbe
pop
dec
sbb
push
lcall
sbb
adc
xchg
test
movsb
jo
pop
sbb
test
pop
fsub
adc
add
sahf
sub
dec
out
push
sub
add
imul
push
das
test
adc
mov
mov
mov
mov
sub
mov
dec
ja
cltd
rorb
sbb
pushf
leave
jae
inc
mov
xor
and
loope
mov
pop
rcrl
icebp
in
lods
ret
dec
jbe
cmp
xchg
inc
dec
xchg
repz
lock
sahf
xor
jecxz
jne
sbb
mov
fcomp
add
xchg
idivl
cmp
mov
call
cmp
int3
ss
add
sbb
adc
xorl
les
jle
inc
inc
or
push
add
daa
subb
into
inc
add
loopne
adc
je
cmp
je
loopne
push
mov
ss
mov
inc
cmp
in
dec
mov
faddl
adc
push
sbb
fimull
fdivrp
and
mov
push
sub
dec
push
repnz
pop
je
push
add
lods
mov
jg
dec
rolb
test
lahf
stos
mov
dec
mov
and
cld
jae
cmc
call
mov
adc
jo
add
sub
dec
ja
stos
mov
mov
push
js
dec
loopne
push
cmp
sti
add
xchg
dec
xor
inc
xchg
call
cmpb
mov
and
pcmpgtd
inc
push
add
mov
jno
dec
cmp
inc
ret
jp
cld
inc
adc
xchg
or
push
pop
jg
adc
push
cld
movsb
sbb
add
push
in
shl
in
enter
stos
cltd
push
dec
orl
bound
add
mov
sbb
orl
mulb
or
je
adc
or
insb
mov
jl
andl
and
pusha
in
add
fwait
and
in
or
inc
and
sub
int
xlat
sub
sub
sbb
das
lea
or
dec
add
jae
js
scas
nop
or
jge
int
in
adc
insb
and
inc
and
movsb
cmp
aam
add
mov
cmp
pop
xor
cld
inc
sarb
jle
movsl
arpl
cmp
mov
and
dec
fnsave
xor
add
mov
xor
bnd
dec
dec
sarb
mov
add
insl
push
aaa
es
or
push
or
insb
popf
jg
rclb
jns
and
mov
jno
push
adc
cmp
jae
push
mov
cmpl
cmpsb
lahf
andl
dec
sub
jne
push
imul
inc
test
push
call
add
mov
mov
dec
or
sbb
pop
add
mov
repz
pop
lcall
loope
cmp
push
sub
adc
lock
add
xor
rorb
or
fldenv
mov
stos
add
push
movsl
jb
push
or
mov
test
push
pop
fbstp
ret
lock
es
fimull
dec
fsubl
je,pn
jle
popf
add
pushf
lea
addb
dec
je
cltd
cmpl
mov
in
inc
xor
or
in
add
pop
int3
clc
mov
mov
xchg
call
aam
stos
in
and
aas
int
pop
in
push
testb
sbb
call
xchg
out
fs
mov
pop
inc
jnp
add
loopne
loope
jns
add
int3
sbbl
in
xchg
loopne
loop
mov
jb
mov
mov
incl
jne
cmc
add
pop
xor
loope
imul
cli
push
cltd
std
jle
push
gs
in
dec
sbb
popf
add
sub
setb
sbb
add
pop
jg
jne
xor
lahf
push
fs
push
int3
pop
or
adc
in
push
shlb
mov
pop
inc
xlat
sbb
or
add
lretw
loopne
and
dec
and
scas
pop
in
pusha
sub
sbbb
clc
mov
add
lahf
sbb
push
inc
inc
mov
add
mov
mov
jo
sarl
mov
pop
gs
jne
daa
jne
mov
loope
and
jmp
mov
add
push
mov
addl
fmuls
xchg
xchg
sub
add
leave
arpl
push
cmp
pop
mov
jb
lods
jbe
dec
add
faddl
sti
lahf
rorl
jl
lcall
dec
or
or
mov
add
clc
cmp
jne
sbb
mov
aam
add
je
or
shlb
xor
scas
mov
add
leave
pop
lcall
push
xlat
push
push
addl
sub
push
les
jb
orl
fwait
insb
fwait
jns
lahf
ja
dec
lahf
insl
sub
mov
std
inc
cmp
call
cwtl
or
jmp
jae
cmpl
fmul
in
nop
pop
rcrb
adc
sbb
rcrl
sbb
imul
pop
lods
test
in
jo
call
les
jnp
sub
les
jb
push
shrb
sbbl
test
icebp
add
and
outsb
xlat
cs
sub
jge
adc
out
cmpsl
jo
or
xchg
adcl
sbb
and
sub
shll
mov
push
jo
popf
call
loop
adc
in
jnp
pop
and
das
or
mov
add
xchg
mov
mov
popf
mov
rclb
imul
dec
cmpsb
adc
fs
outsb
push
sub
sub
fcmovb
inc
add
dec
lock
xchg
jge
clc
sbb
or
fs
test
popa
das
pop
scas
push
cmp
push
jb
or
mov
cmp
jbe
cmp
inc
push
leave
push
xor
mov
xchg
rcr
enter
fnop
xchg
cmp
jno
je
add
bound
xchg
inc
lock
bound
inc
push
dec
dec
leave
mov
cmpb
jns
xchg
mov
xor
sbb
xchg
lock
popa
scas
xor
popf
add
in
adc
fwait
add
stc
add
test
push
out
subl
add
call
mov
cmp
push
cmp
int
push
ret
push
pop
pop
test
add
sub
and
mov
jne
clc
test
xchg
insb
jecxz
ds
sub
mov
lea
cmpsl
fs
pop
push
dec
nop
pusha
nop
push
push
lret
adc
nop
sbb
test
pop
fildl
fs
repnz
repz
mov
and
lock
push
shlb
xor
std
aaa
mov
ja
push
pop
inc
mov
mov
data16
xor
inc
xor
aaa
out
call
icebp
cmp
fdivs
andl
enter
sbb
adcb
xchg
mov
scas
aad
xchg
mov
push
add
adc
aam
je
inc
adc
sbb
jmp
mov
sbb
int
int
fsubrl
and
cwtl
dec
mov
or
rol
and
jle
jbe
xlat
rorb
fwait
sub
sub
push
push
ret
add
sbb
lds
push
mov
sbb
bswap
mov
rolb
or
rclb
popf
sub
adcb
popa
adc
inc
jecxz
jecxz
jo
daa
xchg
scas
mov
leave
mov
je
es
sarb
lds
adc
add
inc
imul
je
or
cmp
inc
int
pop
jae
or
sub
push
bnd
adc
sub
insb
xor
add
sti
sbb
or
or
rcl
aaa
jbe
aad
fisubrs
addb
arpl
scas
mov
dec
stos
inc
sub
fcomps
adcb
out
xorl
and
or
sub
or
sbbl
das
add
mov
xlat
mov
lahf
adc
and
push
jo
ljmp
arpl
fmull
dec
bound
add
or
pop
das
push
inc
and
push
mov
jl
jl
xor
and
xor
cmp
popf
stos
mov
sbb
adc
add
or
xor
sbb
ret
add
mov
dec
mov
aad
pop
in
gs
cmp
cltd
sbb
sub
sbb
and
and
sbb
add
sbb
mov
loope
arpl
sub
push
ss
adc
and
sub
pusha
jl
ficoms
pop
cmp
hlt
test
pop
xorl
in
call
icebp
push
xchg
add
stos
xchg
shl
je
inc
add
mov
jns
rcll
adc
push
lods
lods
adc
scas
nop
sbb
pusha
mov
daa
adc
add
lods
xchg
es
test
pop
add
pop
push
push
ja
and
adc
xor
adc
mov
sbb
jl
push
call
shll
popfw
cmp
cs
cld
adc
call
clc
pop
pop
mov
aas
push
cwtl
inc
pop
add
in
and
fisttpl
jbe
sub
lea
rcrl
ljmp
cmp
inc
imul
dec
loope
test
dec
cmpsb
add
add
sub
mov
mov
cmp
inc
sbb
cmp
push
js
jne
mov
pop
inc
insb
add
and
add
sub
pop
add
xchg
fidivrs
inc
push
mov
test
inc
sti
jl
test
sahf
fstps
xchg
jg
cmp
addr16
test
jnp
decb
or
push
cltd
pop
mov
jo
or
jg
inc
xor
xchg
dec
add
jmp
sub
push
lods
mov
das
test
jne
adc
push
es
xor
test
icebp
inc
mov
ja
add
pop
aas
sub
jge
loopw
das
sub
hlt
or
dec
xor
xchg
xchg
das
das
xor
cmp
cmpsb
inc
sub
insb
popf
xchg
xchg
inc
dec
fs
mov
imul
add
addb
add
incb
add
jg
or
inc
add
cmp
ja
and
inc
mov
icebp
sub
jg
dec
mov
outsl
and
jno
jne
jmp
cmp
xor
imul
pushf
push
mov
rep
insl
shrb
mov
scas
push
add
cld
push
test
mov
mov
mov
sarl
push
pusha
add
dec
pop
jns
jmp
iret
inc
adc
daa
cmpb
ss
add
sbb
loopne
adc
jmp
andb
adc
push
leave
or
push
push
mov
in
xchg
call
movsb
mov
pushf
xchg
stc
xor
shll
inc
sbb
cmp
and
das
adc
mov
xchg
cmc
jl
cmp
push
mov
push
mov
xchg
mov
mov
jle
add
xor
jle
dec
sub
dec
leave
xchg
and
pop
inc
mov
xor
jge
enter
je
pop
cmp
sub
and
pop
dec
push
cmp
pop
sub
and
mov
inc
sti
rep
inc
inc
xor
outsb
sahf
mov
or
sbb
jmp
sub
jae
test
push
subb
add
push
les
andl
mov
dec
jnp
and
jne
push
push
repnz
and
cmpsb
xlat
mov
and
push
mov
hlt
pop
loopne
adc
imul
inc
sbb
icebp
xchg
out
push
sub
inc
add
adc
pop
adc
xorl
aas
mov
and
popa
mov
rorb
insb
loop
pusha
adc
jno
fistl
jecxz
inc
pop
and
jno
test
sub
xchg
into
add
or
scas
mov
sbb
iret
test
fildll
mov
jmp
lret
pop
int3
jae
sbb
mov
push
push
push
sub
rcrl
adc
sbbb
cmp
and
and
xchg
pop
mov
push
push
cltd
cltd
cmpsb
or
hlt
lock
and
jle
inc
mov
push
dec
xor
or
push
movsb
movsl
push
push
add
addr16
jo
outsb
jle
push
cli
loope
adc
decl
fcomp
ret
cmc
push
push
xchg
adc
inc
test
push
in
sub
xor
xlat
mov
adc
pop
int3
arpl
cmp
loopne
add
xor
or
add
inc
xor
roll
or
and
sarb
dec
jne
adcl
idivb
inc
add
adc
push
loope
sbb
push
dec
mov
test
and
and
and
push
cmp
dec
ss
inc
punpcklwd
or
jns
jb
mov
loopne
insb
sub
sub
into
pusha
fnstcw
fidivs
or
adc
pop
adc
in
inc
sbb
push
push
add
jb
inc
mov
pop
add
add
add
testb
pop
jle
test
adc
add
xor
or
or
xchg
xchg
push
mov
shlb
cmpsl
add
cmp
in
sahf
add
xorl
aas
add
int
and
add
lea
subb
or
dec
mov
hlt
sub
sar
into
mov
or
add
rcrb
mov
sbb
xchg
push
mov
mov
sub
xor
ret
sub
jecxz
es
shlb
in
jbe
mov
les
inc
inc
jmp
xchg
add
call
rcrl
or
ret
xor
fstpt
sahf
ja
test
mov
insb
sub
push
iret
test
pop
xchg
push
int3
rcl
mov
cmp
and
ds
push
and
icebp
mov
ret
and
shr
loop
jo
xor
stos
or
jl
adc
or
xorb
pop
fwait
push
ret
notb
outsb
int3
aam
je
push
cmpsl
sub
or
lcall
fwait
mov
and
inc
andl
push
mov
inc
or
inc
add
sbb
or
cmp
ss
outsb
cwtl
add
sbb
xchg
and
imul
dec
mov
sub
mov
adc
adc
rcrb
scas
mov
mov
rorb
stc
jne
sub
outsb
sar
inc
aaa
xor
mov
mov
add
cmp
jb
jae
push
ja
xor
lret
cmpb
dec
hlt
jae
or
test
mov
jo
push
ret
xchg
scas
repz
icebp
sub
jl
pop
inc
xor
mov
inc
mov
nop
add
push
inc
cli
sub
mov
xchg
or
sub
dec
jae
adc
cmp
es
and
adc
cmp
shl
cltd
pop
sbb
aaa
fidivrs
pop
and
push
mov
pop
ret
mov
pushfw
cmp
and
jb
adcl
sbb
push
test
xchg
out
cli
cmovge
xchg
jne
fdivs
int3
xchg
pop
fidivl
mov
aas
jo
out
jmp
sbb
shr
andb
nop
repz
or
or
popa
mov
xlat
fdiv
call
out
stos
cmpsl
mov
push
push
mov
sbb
xor
push
cmpsl
push
ds
je
test
bnd
subl
jp
adc
cmp
cmp
je
jl
add
mov
mov
and
inc
push
cmp
or
or
mov
adc
or
in
adc
dec
addr16
arpl
and
scas
stc
sbbl
jmp
sbb
and
popa
or
push
and
je
in
in
or
or
or
ja
push
push
test
pop
mov
mov
clc
xor
dec
pushf
je
pop
mov
adc
or
dec
pop
loope
stos
test
test
call
push
jmp
jmp
dec
mov
adc
adc
jecxz
xor
mov
dec
and
xor
push
and
inc
aas
and
sbb
enter
inc
push
cmp
clc
or
and
mov
xchg
es
inc
push
cmp
dec
cmp
cmp
js
push
cmp
movsb
sub
les
cmp
test
sbb
mov
cmp
pop
faddl
jb
push
xor
fs
in
xor
mov
xor
or
mov
mov
mov
hlt
jmp
pop
call
cmp
xchg
fs
or
in
pusha
sbb
lret
std
repnz
mov
inc
or
sbb
adc
call
sbb
sbb
mov
add
push
mov
pop
mov
xor
xor
adc
fwait
adc
mov
cmp
je
push
fcoms
subl
ja
pusha
cmp
sti
sub
mov
cmp
adcb
lds
xor
dec
dec
roll
or
mov
in
loop
fimuls
rorl
enter
push
int3
mov
shr
aam
mov
mov
push
push
cmpsb
mov
mov
sub
jecxz
cmp
jg
add
mov
std
sbb
mov
sbb
push
fs
jmp
jp
mov
cmp
sub
push
mov
loope
xor
jbe
sbb
dec
int
dec
loopne
addb
add
mov
push
or
xchg
sub
jne
hlt
and
pop
lock
add
mov
mov
pop
jne
xchg
jne
ret
leave
cmp
and
test
imul
adcl
lock
mov
rcr
push
adc
sbb
test
aam
push
xor
adc
adc
loopne
insl
push
aas
inc
push
push
mov
mov
sbb
dec
xchg
pop
or
cld
mov
add
mov
adc
sti
add
aas
or
je
xchg
xchg
bound
popf
in
push
cmp
push
cmp
fstp
ja
add
push
je
sub
mov
xor
adc
pop
jns
add
mov
js
or
adc
inc
mov
test
xchg
xor
icebp
test
or
gs
pop
out
jmp
sbb
mov
nop
jge
subb
push
sub
mov
or
and
adc
pop
subl
jp
test
ficompl
push
inc
hlt
add
lret
mov
and
leave
in
das
add
add
sub
insb
mov
mov
adc
clc
lock
xorb
sbb
test
rcll
rorb
cs
ja
fildl
or
in
and
int
nop
mov
and
pop
add
xor
or
add
mov
add
leave
popa
xor
push
in
jmp
js
movsl
call
mov
jl
push
push
out
loope
jno
lcall
and
call
ret
in
cmp
aam
mov
xchg
adc
js
cs
pop
cmp
sbb
aam
rol
dec
lahf
mov
xor
jmp
nopl
and
pop
jnp
dec
push
call
add
or
daa
xchg
mov
pop
ja
in
cli
aam
add
fmuls
adc
push
fwait
fwait
inc
mov
adc
mov
dec
fistl
test
push
sub
aam
insb
and
dec
push
fbld
add
je
jo
pop
jno
or
jb
movsl
test
or
pusha
jg
js
clc
jl
mov
adc
push
pusha
enter
adc
jbe
jmp
lahf
outsl
addb
rclb
jbe
cmpsb
dec
lds
lcall
inc
add
out
fdivrl
mov
push
pop
test
scas
mov
push
push
test
inc
int3
ja
cmpsl
inc
cmovnp
mov
ret
jae
loopne
ret
or
dec
aam
stc
pusha
xchg
inc
sub
addl
adc
lods
push
dec
jp
xor
in
aas
loopne
scas
or
add
data16
subb
pop
rorb
xor
sub
jne
and
jb
adc
shr
mov
add
xchg
pop
push
push
jmp
js
rorb
push
icebp
dec
jo
jae
mov
mov
movb
and
or
cmp
divl
jg
and
push
jb
push
lea
adc
push
pushf
orb
and
push
clc
call
insb
jecxz
test
or
xchg
loop
loop
movsl
faddl
test
push
and
xchg
cmpl
in
push
push
inc
fsubrs
ret
xor
jmp
das
push
or
pop
adc
sahf
push
shlb
xchg
in
pop
pushl
pop
or
lock
je
leave
fs
test
mov
call
mov
nop
adc
aaa
add
int
xchg
daa
loopne
nop
xor
sub
dec
or
mov
pop
pusha
lods
fs
cli
test
pop
xchg
mov
or
aam
out
or
xchg
push
xor
push
xchg
add
sub
insl
push
push
lea
test
mov
or
test
test
pop
into
push
faddl
into
popl
loope
shrb
adc
aam
push
shlb
sub
pusha
or
mov
xchg
fidivl
test
or
rolb
nop
dec
or
outsl
gs
loope
xor
xchg
pop
aam
sbb
or
pusha
push
xchg
cmp
push
or
out
loope
sub
dec
pusha
mov
push
sbb
jo
mov
pop
popf
sbb
push
pop
xor
divl
js
mov
orl
dec
loopne
fdivr
cmpsl
xor
push
sbb
test
pop
push
mov
push
outsl
mov
adc
dec
jge
stc
push
and
pop
rolb
push
mov
xor
scas
lret
sarl
mov
subb
xchg
call
les
xchg
rcrl
popf
jmp
gs
enter
push
sub
and
lcall
pushf
loop
push
add
xchg
mov
and
adc
loopne
adc
mov
lahf
and
push
add
inc
int3
inc
push
nop
lcall
les
add
adc
scas
lea
and
or
or
add
sbb
sarb
add
jbe
push
adc
and
adc
jo
push
fldenv
cwtl
pop
iret
push
pop
repz
test
push
adc
inc
and
jnp
cs
sbb
adc
push
mov
dec
push
arpl
mov
pop
gs
add
subl
sbb
mov
fwait
sbb
enter
fwait
xchg
sub
xchg
or
rclb
insb
ss
test
push
mov
xlat
inc
inc
dec
push
repz
orb
mov
in
data16
popf
cmp
dec
xor
mov
add
into
aad
ss
push
add
iret
subb
dec
jecxz
fucomip
or
sbb
xlat
in
and
sub
sbbl
mov
fistl
fstpl
mov
stos
iret
add
or
call
popf
sub
adc
popf
adc
and
out
and
xor
test
sbb
incb
pop
xor
xchg
fwait
lods
mov
andl
mov
push
push
sub
mov
data16
movsb
stos
and
gs
xchg
mov
dec
pop
cmp
and
dec
popa
mov
inc
test
aam
and
sub
push
sub
mov
in
dec
dec
cmp
mov
lea
div
enter
adc
pop
and
xor
push
sub
push
cmp
cmp
nop
push
push
xor
mov
hlt
inc
or
or
mov
or
add
mov
add
sbb
shr
sarb
rolb
jo
or
add
inc
movsl
fnstcw
or
jp
clc
adc
sub
lods
push
mov
add
ds
jmp
adc
divb
jne
adc
mov
jne
mov
or
adc
movsl
test
mov
jb
jl
nop
xchg
cwtl
pushf
arpl
or
inc
cmp
push
pusha
cld
mov
inc
pop
push
sub
pop
lods
ja
shrb
scas
mov
fmul
or
add
insl
inc
cwtl
aas
clc
mov
test
lea
mov
jg
jns
adc
pop
sbb
std
mov
mov
fisttpll
mov
adc
in
fidivl
scas
icebp
fidivl
out
lea
or
xor
ret
pop
in
mov
xchg
je
aaa
push
jge
mov
call
js
or
cmp
nop
mov
jge
adc
sbbb
xchg
mov
cmp
imul
scas
outsl
xchg
and
mov
mov
adc
jmp
push
add
mov
push
mov
jmp
xor
rolb
cmp
and
and
xchg
mov
sub
dec
sbb
pushl
ja
sarl
lahf
lods
mov
test
ret
add
outsl
mov
sbb
mov
xchg
adc
and
and
dec
dec
in
cmp
sub
sub
mov
cmp
pop
pop
sbb
mov
out
pop
movsb
xchg
lret
xorl
orb
inc
into
les
jne
pop
or
mov
das
push
pop
jo
ret
leave
adc
inc
daa
pop
jns
outsl
xlat
push
push
repz
mov
in
addl
mov
je
roll
add
loopne
push
movsl
sbb
mov
xchg
adc
movsl
mov
outsb
inc
cwtl
sub
lock
inc
jl
andl
jno
outsb
xchg
mov
sbb
xlat
movsb
add
push
lea
movsb
mov
add
cld
sub
add
roll
push
add
leave
rolb
push
dec
jno
add
push
ret
out
ljmp
ljmp
test
shlb
mov
mov
inc
or
xor
cs
mov
rcrb
mov
orl
xchg
push
out
decl
sbb
cwtl
dec
xor
inc
inc
inc
inc
push
jl
pop
dec
daa
mov
or
dec
cmp
mov
inc
pop
mov
inc
xchg
mov
lock
mov
sbb
data16
idivb
cltd
push
or
in
dec
add
inc
rol
or
pop
cmpb
cltd
or
pop
push
mov
lea
mov
pop
push
shll
inc
popf
pop
cld
or
sti
mov
insl
into
stos
push
pop
cmp
lock
fstpt
push
in
push
gs
hlt
add
nop
loopne
popa
lock
sbb
xor
test
movb
add
sbb
xchg
push
adc
or
out
das
test
pcmpeqw
cmpl
add
mov
out
ja
cli
jbe
push
iret
sti
lea
lahf
lods
inc
add
xor
insl
add
faddl
imul
sub
and
xor
cmp
test
jnp
push
xchg
pop
ret
bound
lock
lret
xlat
pop
pop
sub
lock
repnz
int3
mov
jae
clc
add
fidivrl
inc
inc
jb
fistpl
push
and
mov
in
push
or
mov
in
jl
mov
jge
or
addl
mov
fsubrs
ret
popa
push
push
add
lods
jecxz
popa
in
and
cmp
push
sub
rcrb
fsubs
fdivl
push
lods
adc
push
pop
sub
mov
loopne
add
pushf
and
push
adc
cltd
pusha
add
dec
clc
pop
lock
rolb
push
mov
and
sbb
mov
or
mov
adc
mov
add
scas
popf
mov
mov
push
test
cmp
xchg
ret
or
inc
push
or
pop
mov
loop
fcompl
mov
ss
das
push
dec
mov
push
loop
leave
jns
ja
jns
lock
adc
mov
add
push
inc
mov
adc
mov
imul
mov
jecxz
inc
cmp
movsb
test
popf
dec
pop
jp
cmpsl
ss
mov
lods
pusha
add
or
popf
lret
jmp
outsb
lock
cmp
inc
inc
dec
sahf
incb
mov
sahf
cmp
mov
lcall
and
icebp
cmpsb
or
dec
mov
or
inc
hlt
loopne
xchg
pop
push
mov
hlt
mov
inc
add
adc
or
push
das
cld
nop
fistl
sarl
cmpsl
jns
or
or
cmp
lods
ret
dec
jp
je
and
adc
std
add
data16
sub
sbb
sub
jle
and
test
and
cmp
jg
outsb
adc
imul
or
outsb
add
fldt
jl
push
jge
push
jle
loopne
out
xchg
push
imul
xchg
cmp
lock
in
xor
andb
jge
lret
imul
xor
push
lock
shr
or
je
push
cmpsb
dec
cmp
xor
lock
sbb
xor
repnz
and
fs
inc
jmp
inc
jo
add
cs
addr16
and
jne
or
inc
cld
lock
sbb
iret
adc
or
insb
or
movsl
push
or
test
push
rolb
iret
pop
xor
or
movb
idiv
lret
jmp
pop
cmpsb
lods
push
mov
inc
dec
pusha
or
push
mov
pop
je
mov
mov
fstsw
sub
mov
dec
seta
jle
mov
mov
js
jle
push
mov
sbb
andl
and
adc
push
mov
scas
add
shr
cmp
jp
add
fdivl
lret
xchg
lret
mov
xchg
les
aam
in
add
test
lock
mov
add
stos
cmp
sbb
jo
jl
push
inc
movsb
adc
mov
add
stos
pop
push
push
dec
stos
nop
jns
mov
movsb
in
jns
adcb
test
add
mov
adc
push
in
and
jl
rolb
push
imul
xchg
popa
aaa
imull
andl
enter
or
or
popa
add
jo
push
or
xor
push
test
out
or
and
dec
cmp
loop
push
divl
jo
cltd
rcl
xchg
pop
add
pusha
xchg
jb
sbb
adc
add
movsb
add
add
nop
cltd
xchg
ret
cli
loopne
arpl
cmp
lea
test
push
fldl
cmp
jle
inc
inc
js
mov
and
pop
outsl
push
mov
mov
pusha
std
add
mov
xchg
sub
les
or
and
pusha
add
imul
jno
scas
mov
je
xlat
clc
xor
mov
add
xorl
add
dec
rolb
pop
add
jo
lahf
xor
js
mov
adc
addb
cmp
mov
movsb
sub
fistpl
fcomps
cmp
mov
test
push
orl
pop
jno
xchg
add
mov
mov
cwtl
pop
cmpl
xor
pop
hlt
push
into
dec
cmc
xchg
or
loope
in
dec
xlat
cwtl
push
push
xchg
and
add
xchg
imul
mov
jne
ss
mov
incl
adc
je
cltd
test
scas
test
gs
pop
cmp
add
enter
sub
rorl
add
jmp
and
inc
cmc
mov
jge
stos
push
add
cmp
push
xor
mov
nop
call
dec
pop
insb
add
cmp
cmp
mov
push
xor
push
call
mov
cmp
imul
imul
in
dec
xchg
xor
repnz
jle
add
adc
cmpsl
mov
call
mov
inc
xor
push
pusha
inc
test
cmp
inc
cmp
loopne
sub
insl
lea
adc
divb
xor
loop
add
shr
add
fcom
loope
add
sbb
adc
not
cmp
cmp
mov
mov
ret
shr
cmp
jbe
add
jmp
add
pop
rcr
inc
dec
gs
and
add
add
dec
inc
loopne
jg
adc
mov
mov
or
mov
call
xchg
dec
adc
test
xchg
push
dec
mov
mov
cltd
or
and
inc
loope
punpckhbw
scas
mov
jo
lods
or
mov
mov
ss
mov
mov
arpl
cmp
dec
mov
das
sarb
inc
adc
fnstcw
rorl
xchg
imul
jbe
mov
and
and
push
pop
sahf
inc
loop
jl
flds
sbb
aad
inc
mov
mov
mov
jl
xchg
push
or
xorl
test
xchg
les
je
cmc
xor
mov
push
or
sbb
mov
sbb
xor
out
push
or
mov
push
jb
push
lea
sbb
lods
and
sub
subl
nop
mov
rcl
sti
push
push
stos
and
xlat
adc
je
leave
call
jmp
mov
ret
pusha
dec
into
add
ret
or
sub
xlat
add
pop
adc
test
jae
push
in
cmc
cmp
mov
push
jb
mov
insb
imul
add
call
adc
adc
sbb
inc
call
sbb
jnp
cmp
sbb
adc
imul
mov
inc
add
dec
enter
push
call
repz
cwtl
or
or
xorb
ljmp
cmp
sub
loopne
in
push
iret
push
test
add
fnsave
push
and
sahf
xstore-rng
cmpsl
add
jmp
insl
add
fmuls
jne
push
add
or
inc
mov
mov
je
int3
movsb
scas
jns
mov
dec
insb
cs
sbb
ss
je
inc
dec
sub
pushf
sub
jno
int3
outsb
es
or
xor
inc
push
sbb
push
or
and
mov
push
xchg
and
in
rorb
add
adc
fwait
js
shlb
push
mov
cmp
xchg
jecxz
repnz
ss
stos
mov
sub
push
mov
xchg
int
jns
jnp
push
pop
fcoms
or
push
loop
xchg
jnp
push
pushf
inc
movsl
das
insb
in
inc
adc
lods
xchg
mov
pushf
pop
les
test
pop
push
add
lods
leave
vpinsrw
aam
rcr
les
xchg
fistpll
ret
stos
dec
xor
sbb
aaa
inc
add
shll
inc
fsubrs
aam
xchg
xor
mov
aaa
pop
shl
in
and
mov
movl
and
add
fs
subl
or
mov
mov
cmp
or
repz
push
push
xor
sub
dec
hlt
xor
add
es
push
pop
cmp
stos
mov
xchg
test
lcall
es
mov
jb
or
test
ret
push
cwtl
push
mov
jb
je
fildl
cld
push
jecxz
sub
xor
mov
or
cltd
lods
lea
ret
pop
pop
adc
inc
xchg
or
sbb
pop
add
push
cmp
cmp
and
push
add
xchg
and
mov
xor
sub
fdivr
into
idivb
push
or
sbb
and
popa
xor
push
mov
in
aad
jmp
push
cmp
xor
xchg
out
test
cltd
push
ret
dec
call
jne
inc
xchg
mov
cwtl
pop
add
add
dec
sbb
jmp
cltd
mov
inc
je
js
add
in
lret
dec
mov
xchg
ja
jp
xor
cmp
mov
cli
sar
dec
pop
gs
pop
mov
in
adc
sub
ja
fcoml
dec
popa
jp
ja
cmpsl
push
mov
aad
int
jo
mov
jns
je
push
movsl
insl
fildl
or
insl
xorl
xor
add
adc
lods
push
nop
in
lods
repnz
jp
sbb
adc
popa
mov
adc
jo
push
adc
xor
pop
sbb
inc
flds
xchg
jb
or
xchg
test
adcl
ja
sbb
lock
in
lea
mov
loopne
orb
js
push
adc
pop
jns
inc
jecxz
cmp
fwait
mov
pop
divb
pop
cmp
sbb
add
mov
scas
sti
testl
call
aam
push
cmpb
xor
pop
loope
roll
cmp
push
cltd
push
cltd
sub
les
sbb
sub
mov
into
pop
loop
pop
jno
mov
or
iret
cmp
cli
pop
push
add
add
pushf
shlb
pop
je
inc
pop
loopne
fmull
add
mov
add
push
jmp
ret
fstl
mov
les
addr16
pop
pop
or
ret
xchg
loopne
jo
mov
pop
shrl
mov
mov
fs
jbe
jl
or
test
sahf
xchg
pop
push
and
dec
pop
mov
sub
cmp
adc
lods
cmovae
inc
aaa
call
sbb
dec
sbbl
rolb
push
add
loop
push
mov
mov
add
dec
pop
inc
fmuls
push
aaa
loopne
mov
call
orl
adc
leave
mov
mov
cmpsl
push
clc
mov
ret
cmp
jbe
push
mov
push
push
mov
mov
test
imulb
sbb
jb
stos
pop
lods
ret
mov
xor
pop
pusha
leave
push
push
push
insl
lret
and
sub
xor
ss
and
bound
sub
mov
xorb
inc
cmp
loop
pop
mov
test
xor
or
int3
in
pop
mov
cltd
repnz
and
and
pop
aaa
dec
xor
or
jge
jbe
cmp
int
pop
add
sbb
popf
mov
movsl
add
or
mov
and
and
push
sub
cmp
xor
pusha
pop
mov
add
clc
aam
push
adc
adcb
push
adc
pop
andl
inc
fwait
gs
inc
test
nop
mov
int
sbb
int3
fwait
or
and
push
icebp
scas
add
stc
mov
xchg
jo
or
insb
xlat
add
nop
sub
lods
lods
les
mov
hlt
mov
pop
pop
pop
pop
les
push
shrb
add
adc
aas
adc
push
out
rcl
jne
and
add
mov
xchg
inc
mov
xor
adcb
sub
mov
imul
dec
or
mov
cld
push
push
adcl
sbb
xchg
shl
rclb
int
pushf
xor
push
sbb
inc
or
mov
mov
scas
or
add
xchg
jl
or
test
add
xchg
dec
enter
sub
push
xchg
mov
xor
mov
popa
fucomip
add
add
add
sub
inc
add
roll
fwait
xor
or
add
leave
mov
push
loope
in
push
xor
push
add
or
rcrb
cmp
je
dec
cli
dec
rcrb
in
std
sbbl
jne
push
mov
aad
loopne
or
xchg
jo
xlat
arpl
jmp
push
xor
pusha
or
dec
and
pop
into
sub
add
jo
orb
jmp
xor
push
adc
test
cs
lock
mov
xchg
push
push
sarl
mov
cmp
xor
dec
pusha
xor
jecxz
mov
or
movsb
cmp
add
xor
std
add
lret
xorb
pop
out
ljmp
and
not
or
push
adc
addb
adc
dec
pop
cmp
aaa
xor
and
pop
fmuls
add
mov
push
loope
sub
push
sbb
icebp
out
clc
loopne
push
jecxz
sbb
loope
xor
inc
movsb
scas
imul
mov
test
imul
mov
inc
test
cmc
shrl
jp
sub
outsl
inc
xor
in
inc
xor
sar
xchg
jb
jmp
test
not
push
inc
pop
and
pop
adc
add
add
pop
rcrb
hlt
stc
or
and
and
out
sub
mov
xchg
and
les
popa
jmp
mov
call
cltd
mov
dec
push
adc
arpl
sbb
mov
pop
lds
clc
imul
adc
xorl
mov
add
push
fstl
inc
push
pusha
sub
or
dec
scas
movsb
pop
in
push
cmp
add
adc
jb
inc
mov
push
bound
or
or
ds
je
into
ja
dec
push
sub
add
sbb
pusha
or
stos
pop
or
adc
sti
in
push
add
leave
repz
stos
stos
jno
stos
adc
pusha
add
or
test
cmp
pop
loop
jne
mov
cli
mov
ds
and
adc
adc
jl
inc
or
mov
and
ret
nop
testl
mov
add
call
lods
add
xchg
push
push
inc
test
sbb
dec
cli
repz
inc
sbb
scas
or
sbb
push
cmp
std
sbb
fiaddl
or
jne
mov
jmp
fstpl
arpl
jg
enter
mov
mov
lock
pusha
or
out
movsb
inc
fldl
incb
push
push
movsl
dec
mov
hlt
fstl
lods
dec
add
inc
fcomp
fnstsw
xlat
xchg
mov
mov
clc
pop
fsubr
pop
faddp
andl
sbb
add
loope
pusha
mov
push
mov
cs
pusha
jno
jmp
mov
inc
inc
loopne
lods
mov
push
add
mov
data16
into
icebp
enter
imul
es
push
loopne
adc
mov
out
sbb
fdivrs
sub
mov
clc
xor
cltd
cmp
add
addr16
clc
cmp
mov
scas
push
and
jnp
xor
push
or
mov
or
dec
push
dec
adc
add
inc
jmp
sub
arpl
cmp
pop
outsl
mov
xchg
movsb
movsb
jo
out
insl
cli
adc
cli
mov
mov
inc
aaa
push
sub
mov
int3
dec
sbb
popa
jl
outsb
push
xchg
jp
sub
mov
jne
pop
in
out
test
jg
orb
add
mov
pop
loope
or
push
jmp
mov
cld
xor
dec
hlt
jge
and
shll
add
dec
and
adc
fnsave
pop
cmpsl
enter
jmp
pusha
test
dec
pusha
or
int3
lea
pushf
std
cmp
push
pop
cmc
mov
cwtl
ja
mov
stc
test
adc
jne
push
push
ret
push
adc
ja
xor
inc
pop
mov
rorb
into
inc
add
xchg
fs
push
sbb
push
dec
jns
inc
jno
mov
adc
push
popa
jo
pusha
mov
cmpsb
and
pop
bound
pop
fisubrl
pop
aam
push
mov
bound
inc
addr16
lret
jmp
cmpsl
mov
andb
mov
cmp
dec
cmp
lcall
adc
add
ret
and
and
pop
insb
mov
decl
inc
adc
push
sbb
imul
adc
xchg
xor
cs
mov
mov
insl
loope
stos
loopne
gs
mov
adc
fldl
pop
repnz
das
lock
push
or
sti
jo
add
adc
imul
mov
or
push
adc
in
sbb
or
inc
or
kmovw
add
or
rolb
subb
aaa
mov
xchg
xchg
pop
imul
stos
xor
and
inc
or
or
fcoms
mov
popa
sub
out
push
movsb
jo
lods
shlb
and
cs
cmp
pop
mov
ret
and
inc
insb
add
sub
adc
bound
adc
inc
or
add
fsubl
movsb
scas
mov
lret
ret
aas
ret
jae
fdivrl
mov
xchg
mov
pusha
andl
cmpsb
in
fdivl
mov
ret
inc
inc
mov
push
mov
lock
orb
insl
adc
jg
daa
or
sub
and
add
out
lods
cmpsl
mov
push
add
rorb
pop
dec
mov
scas
inc
xor
push
lret
inc
pusha
mov
popa
mov
push
lea
xchg
pop
pop
adc
hlt
repz
hlt
sub
inc
pop
and
add
jns
lock
mov
dec
inc
mov
repz
gs
push
push
hlt
xor
or
cmc
sbb
or
push
fwait
stos
sbb
sub
rorl
js
and
xorl
aam
mov
mov
rorl
cmp
xor
loopne
jae
addb
and
push
cs
jecxz
mov
movsb
mov
mov
push
lret
cs
mov
nop
sub
imul
andb
or
test
push
add
jmp
jae
mov
popa
ffree
in
fstp
mov
add
mov
arpl
sub
xor
add
xor
and
add
sbb
outsb
push
mov
loope
add
leave
and
cmp
ljmp
lods
mov
sbb
js
mov
sbb
call
or
xor
jge
aad
lea
cmpsl
daa
or
push
test
push
mov
and
sbb
mov
mov
in
notb
xor
cmp
pop
or
subb
pop
pop
lods
xchg
mov
mov
ds
push
pop
lods
xor
loopne
loopne
and
test
sbb
and
inc
xchg
call
popf
sbb
insl
movb
and
jecxz
mov
sarl
mov
lods
push
jp
sub
aaa
sub
push
sub
xor
fnsave
subb
or
ds
test
mov
inc
es
push
and
call
enter
cmp
pop
xlat
jmp
xor
sbb
adc
popa
lea
xchg
sbbl
ret
jb
loop
in
dec
test
loope
stos
or
enter
adc
dec
and
or
inc
pop
or
and
inc
and
or
ljmp
cmp
call
mov
cmp
iret
xchg
insb
sub
adcl
and
inc
push
inc
push
inc
xlat
inc
adc
aam
xor
add
jne
cmpsl
dec
push
push
sub
mov
xchg
or
mov
ds
xchg
inc
cmp
push
jbe
movsl
mov
push
sbb
xchg
aas
xor
jne
dec
sbb
or
lock
test
clc
cmp
pop
cltd
sbb
leave
ret
pop
add
or
andl
cmp
and
jnp
xchg
pop
lock
mov
mov
leave
fimull
lret
mov
rclb
test
rclb
movsb
inc
sub
adc
push
mov
and
mov
rcrb
cmpsl
or
js
aam
in
push
dec
mov
imul
dec
cmp
lods
les
inc
xor
fildl
test
adc
mov
cwtl
fs
loopne
in
in
loop
js
mov
sbb
jbe
pop
jne
int3
mov
sbb
add
add
arpl
inc
lcall
dec
or
and
sub
sti
jb
enter
adc
and
and
rcrb
fistps
add
std
sbb
push
add
jbe
enter
push
stos
lock
and
add
mov
leave
push
pushf
lock
mov
cmp
imul
sbb
out
jns
loopne
rclb
ret
leave
loopne
stc
xor
push
inc
push
fwait
sahf
addr16
es
add
inc
and
les
cmpsl
xor
add
in
testl
add
sbb
cld
or
std
lcall
aam
lock
jl
inc
mov
or
mov
ljmp
jp
aad
stc
inc
pop
push
and
xor
data16
pop
jne
fisttpl
push
stos
push
cmp
cmc
dec
inc
mov
out
sub
adc
fidivrs
out
push
adc
xchg
sub
pusha
mov
pop
movsb
inc
push
insl
movsb
nop
push
cltd
jg
push
add
int
data16
inc
rcrl
popa
mov
inc
fstpl
push
push
add
push
hlt
jge
inc
mov
adc
inc
push
adc
pop
and
cmp
mov
pop
or
shlb
inc
jle
or
or
mov
sub
outsb
inc
xchg
faddl
pushf
xor
mov
in
loopne
cmp
sub
test
test
scas
cvtps2pd
mov
add
jl
add
pusha
inc
and
sarl
das
or
mov
shrb
dec
cmp
scas
push
cmp
rol
pusha
or
rcr
and
sbb
int3
sub
dec
daa
inc
sbb
xchg
sbb
sbb
clc
imul
adc
inc
and
jecxz,pn
stos
jmp
push
dec
sbb
ljmp
lahf
cmp
or
push
mov
and
push
loope
ret
sub
roll
push
sbb
pop
sarl
mov
pop
add
jae
popa
xor
and
push
jmp
loopne
cmp
into
add
push
shlb
pop
mov
mov
pop
pop
add
cmp
ret
cltd
outsb
rorb
mov
add
push
fxch
es
stos
imul
push
or
fcoml
mov
inc
or
rcr
and
jmp
adc
mov
inc
sbb
cmp
sbb
andl
and
ret
movsb
fidivs
xchg
cwtl
dec
inc
jnp
xor
pushf
cli
add
in
in
xor
inc
sbb
xchg
jge
loop
fdiv
in
cmp
je
mov
and
and
push
dec
xor
adc
xchg
add
movsb
dec
and
push
inc
add
lret
sub
push
xor
add
mov
add
or
cmp
inc
inc
dec
push
int
pusha
adc
pop
sub
cmp
or
aas
lahf
or
aas
aam
les
cmp
xchg
jl
movlps
sbb
inc
andl
dec
mov
or
loop
inc
pop
pop
lea
sub
jle
mov
xor
or
iret
or
xchg
test
mov
pop
or
pop
adc
mov
sbb
dec
add
ret
sub
add
aas
add
call
push
mov
xchg
add
sub
loop
or
or
icebp
sbbl
push
push
jno
int
xor
pop
and
in
cli
std
jmp
xor
or
cmp
cmp
daa
or
in
pushf
sbb
push
sbb
push
sahf
adc
xchg
or
or
sub
add
or
icebp
and
imul
cmp
and
sbb
and
xchg
jno
adc
xorb
pop
je
xchg
fst
pop
add
test
ffreep
xchg
rorl
aam
js
flds
push
rcrb
pop
mov
shlb
pop
and
mov
scas
cmp
fiaddl
pop
adc
jecxz
xchg
testl
cmc
lret
push
mov
xchg
scas
dec
mov
notb
addr16
nop
push
push
inc
dec
test
outsb
xor
popa
imul
jbe
stos
jno
sbb
mov
iret
pop
ret
in
add
pushf
xor
push
cmp
inc
add
push
add
ds
cltd
mov
push
pop
rolb
inc
push
xchg
push
cltd
int
push
sub
inc
dec
out
jns
je
jl
mov
sub
sbbl
adc
and
add
cmp
jl
xor
lret
into
sbb
mov
fsub
movsb
dec
movsb
loop
push
pop
mov
sub
dec
push
cmpb
ja
repnz
es
jl
sarl
push
pop
enterw
and
sahf
loop
iret
ds
std
fistpll
xor
pop
je
push
mov
mov
adc
rcrl
les
jmp
or
lret
cs
xor
sbb
cltd
inc
incb
je
or
jns
pop
sbb
repnz
push
jmp
push
sbb
sub
and
dec
loope
xchg
int
stos
xor
leave
outsl
lock
jne
jl
out
and
icebp
ret
dec
push
jge
lret
xor
xor
inc
sub
pop
loope
sub
add
sub
push
rolb
popa
push
lock
adc
sub
add
andb
fsubs
pop
inc
xor
or
lock
rcl
stc
adc
or
cwtl
js
movsb
sbb
stc
js
add
mov
lods
pop
push
ss
sbb
adc
outsl
push
jno
xor
sub
cld
rcrb
addr16
je
push
orb
inc
test
or
imul
stos
mov
lahf
and
or
inc
movsb
push
add
add
push
jb
das
mov
inc
addr16
add
or
pop
lods
cwtl
mov
rol
xorb
pop
push
cmp
or
mov
mov
and
adc
pop
stc
mov
sub
mov
mov
lea
jp
cmp
lahf
sbb
enter
cmpl
or
iret
push
or
xor
insl
popa
sub
sbb
stos
fwait
push
and
jge
add
pop
dec
inc
adc
rorb
cmp
inc
and
fiadds
jnp
int3
xchg
cmp
xor
push
cmp
insl
aaa
ret
mov
xchg
test
rolb
adc
jne
mov
mov
jmp
test
sbb
adc
mov
scas
and
mov
sar
mov
or
out
mov
adc
adc
pop
and
movsb
jmp
arpl
push
fwait
dec
lock
fdivs
push
pop
fdiv
je
mov
push
cmp
cmp
in
add
jp
mov
sub
cmp
out
leave
jne
push
jne
mov
jmp
cmp
xchg
push
rol
data16
add
movsl
mov
push
arpl
pop
dec
test
adc
xchg
jne
mov
add
and
in
push
imul
cmpsb
add
test
push
mov
lret
xor
mov
xchg
stos
mov
xchg
mov
cmpsb
shrl
ret
xor
cld
and
and
mov
dec
bound
mov
mov
roll
or
nop
add
lods
or
pusha
sub
cmp
sub
rorb
fiaddl
mov
mov
nop
mov
cmp
jge
iret
push
add
add
insl
divb
jne
add
jne
sbb
dec
pop
mov
mov
pop
popa
xor
add
loopne
movsl
call
mov
jp
cmc
xor
or
or
dec
loope
test
outsb
sbb
pop
stos
and
adc
stos
sti
push
dec
xchg
or
mov
or
int
cmpsl
or
addb
adc
pop
adc
sub
xchg
add
fimull
pusha
xchg
mov
popf
sti
sbb
adc
xor
mov
dec
push
rol
leave
and
and
and
pop
insl
mov
icebp
movsb
xor
aas
sub
or
aas
mov
push
mov
add
mov
stos
mov
cmp
repnz
adc
or
pushf
mov
push
sbb
add
add
jle
cmp
pop
iret
jge
cli
adc
test
loope
in
mov
xor
cmp
pushf
mov
mov
loopne
aam
cmp
dec
in
adc
and
mov
fsubs
cmp
push
cmp
js
push
imul
add
dec
xor
jno
mov
lahf
popa
or
popa
jnp
push
or
aaa
or
gs
rorb
icebp
repz
bound
jbe
or
test
sub
addb
sbb
mov
clc
xor
xchg
iret
fldl2t
adc
pop
bound
inc
jle
call
add
lret
and
test
mov
push
push
add
pushf
add
adc
and
or
sbb
fisubs
xor
popf
shrb
inc
ret
cld
pop
or
ja
pop
add
jl
add
ds
add
push
es
ret
cmpl
lahf
sub
xchg
repz
jo
and
or
adc
cmpsb
adc
mov
test
sub
fdivrp
ljmp
mov
push
adc
jmp
xchg
cmp
jl
push
push
push
inc
and
test
lods
pop
test
cmpsl
mov
mov
xorl
ret
xchg
popa
adc
addr16
pop
jmp
sahf
enter
pop
pop
dec
in
lahf
push
shr
jge
inc
bound
hlt
mov
cmpsb
jns
iret
or
shl
mov
mov
jne
sub
fmuls
jnp
addr16
add
add
pop
dec
loop
lret
lock
xchg
add
xor
shl
adcl
inc
dec
add
adc
roll
mov
fstpl
cwtl
sub
mov
in
xor
in
mov
out
push
mov
jl
test
push
test
mov
push
mov
and
add
les
js
and
jge
mov
mov
and
or
add
pop
dec
push
mov
add
xor
icebp
aaa
stc
lret
or
inc
lods
sub
mov
sub
inc
cmp
jne
pop
adc
mov
mov
mov
add
add
insb
nop
arpl
add
mov
ds
popa
repz
cmp
cs
enter
jecxz
lea
jmp
push
std
sbb
shl
ljmp
inc
jp
and
dec
es
jae
das
add
push
push
jo
xchg
pop
push
fadds
popa
and
adc
loopne
mov
fsubs
mov
test
mov
gs
dec
and
or
rclb
push
push
push
outsb
lcall
add
push
push
xor
sbbb
or
jb
and
insl
cmp
mov
adc
sub
andl
dec
push
dec
loope
sub
je
xor
add
and
push
dec
push
cli
cmp
adc
xchg
out
cmp
jne
or
aam
in
sbbl
push
or
cmp
xchg
add
test
sbb
imul
and
add
fsubrs
push
adc
cmc
shrb
cmp
dec
dec
add
inc
or
push
add
je
adc
js
js
ret
mov
xor
inc
push
inc
nop
stos
loope
pop
adc
pop
enter
mov
cmp
jmp
push
and
ljmp
test
add
addb
in
mov
movsb
adc
mov
and
mov
rorl
xchg
mov
add
mov
dec
or
subb
cmpb
pop
pop
cmpsl
and
mov
push
add
push
inc
push
jno
xchg
iret
dec
sbb
pop
inc
inc
sbb
adc
push
mov
call
enter
subb
stos
xchg
cmp
stos
cmp
push
test
add
xchg
mov
aam
sbb
add
pop
or
mov
pop
adc
push
in
lods
fsubl
adcb
mov
xor
jns
bound
pop
adc
leave
jmp
pop
xchg
jle
mov
aam
dec
lods
and
scas
adc
in
rorb
dec
sbb
test
inc
test
scas
fsubrs
xor
inc
test
xor
mov
sub
ret
mov
dec
in
dec
fcomps
and
cmpb
jo
mov
xchg
fdivrs
jb
mov
pop
mov
push
cmp
imul
add
negb
adc
ret
out
xchg
out
dec
movsl
and
mov
push
pop
dec
jbe
stos
scas
mov
in
in
shrl
rorl
hlt
mov
jbe
push
cmp
adc
sub
rclb
adc
adc
or
or
inc
sbb
or
cmp
xor
cmp
rcrb
or
out
test
xlat
add
adc
adc
fisttpl
xchg
mov
pop
pop
jo
jp
and
test
cld
ja
or
lods
dec
movsb
int3
das
push
push
xor
stos
int3
test
adc
xor
sti
push
pop
push
rorl
and
ret
sub
push
ss
stos
mov
stc
push
test
out
push
hlt
mov
push
adc
mov
out
xor
call
test
sbb
xchg
inc
loop
mov
inc
jo
js
cmp
outsl
shll
add
into
push
mov
test
inc
xchg
popa
cs
js
clc
cs
mov
loopne
adc
stos
adc
push
cmpsb
mov
test
daa
xor
gs
and
mov
mov
in
mov
inc
enter
in
je
daa
fdivs
mov
outsb
arpl
repnz
xor
mov
lds
fwait
push
jmp
std
movsl
movl
mov
in
test
or
pshufw
rorb
xchg
add
adc
rcl
pop
ljmp
and
push
or
push
shl
push
icebp
in
jg
mov
mov
or
mov
stc
xor
pop
adc
cmp
ss
mov
push
ss
sub
dec
repnz
shl
push
out
in
inc
cmp
pop
loopne
lret
fcoml
daa
in
js
sbb
or
add
push
sbb
cmp
scas
push
push
or
mov
out
cmc
sub
push
in
cli
or
testl
add
xchg
add
sbb
rcl
xor
int3
inc
cmp
xchg
cmp
out
inc
mov
cld
mov
out
and
add
addl
in
dec
iret
mov
push
repz
push
pop
xbegin
add
or
scas
or
lods
adc
or
mov
shr
nop
and
or
inc
je
xchg
out
jle
jmp
cmpb
sbb
adcb
nop
jg
push
or
movb
fldenv
shlb
cmpsb
mov
popa
fs
and
pop
and
cmp
jb
jbe
push
paddb
mov
ja
push
mov
push
inc
orl
pop
cmp
pop
add
ds
sbb
pushf
push
hlt
test
pop
movsb
sbb
mov
int3
dec
push
clc
sbb
enter
cli
cmp
or
faddl
push
hlt
inc
add
jle
fdivrs
andl
or
cmp
cmp
xchg
xchg
push
inc
add
or
cmp
cmp
fwait
adc
mov
pop
jmp
cmp
aam
push
mov
popf
jmp
cmp
jmp
add
pop
sti
hlt
push
roll
inc
xor
push
rolb
push
dec
ja
inc
mov
cmp
adc
in
ret
scas
jge
add
repnz
out
in
movsb
push
add
add
in
in
push
pop
or
jae
jae
or
jnp
or
jbe
jmp
or
jae
push
jmp
por
jmp
adc
pop
jae
jae
adc
push
adc
dec
adc
dec
adc
jae
push
jmp
pop
jmp
sbb
xor
jae
jae
jmp
sbb
es
and
jae
push
jmp
pop
jmp
and
or
subb
and
and
test
rcll
inc
packuswb
and
push
sbb
sbb
lock
call
iret
repz
int
fucom
in
cmc
repz
inc
or
repz
sbb
sub
xor
cmp
inc
dec
dec
repz
repz
pop
pop
bound
repz
insb
jno
jnp
test
pop
enter
add
in
or
and
or
or
push
movups
adc
adc
push
pop
sbb
sbb
sbb
push
pop
and
lods
inc
in
and
and
push
adc
imul
icebp
add
pop
ja
xor
sub
mov
push
adc
cmp
cmp
jbe
xor
or
std
adc
insl
aam
adcl
out
push
mov
add
mov
ds
push
popa
les
or
or
fstpl
pop
aad
mov
cmp
popa
mov
and
inc
sti
test
cmp
sbb
mov
sub
ds
xor
mov
loopne
jb
sbb
push
jo
popa
cs
add
addl
loope
fdivrl
lods
cmp
xor
and
xchg
test
call
cmp
mov
xor
rolb
pop
nop
iret
add
dec
jecxz
cmpsb
iret
jno
les
mov
mov
or
xchg
dec
loopne
add
sahf
xchg
pop
mov
push
je
dec
rolb
cmp
jae
mov
jmp
repnz
nop
jecxz
pop
and
mov
outsl
sbb
inc
cmc
push
mov
inc
push
pop
mov
add
add
ret
cmc
xor
dec
aaa
push
in
jo
pop
js
add
push
notb
in
push
dec
loop
mov
pusha
sub
call
push
mov
ror
xor
shr
xor
pushf
rorl
out
mov
or
or
icebp
add
add
add
or
mov
loopne
pop
iret
or
std
mov
and
not
and
xor
add
add
mov
aam
sub
jge
fsubr
add
iret
xlat
in
fisttps
rorb
mov
fisubl
xorl
cli
and
and
mov
push
rclb
data16
test
xor
fs
push
imul
sbb
fmull
pop
push
or
and
not
and
add
mov
lods
xor
out
add
cs
fsubr
rcl
push
aam
mov
pusha
mov
jo
rdmsr
push
xor
sub
mov
cli
mov
rol
shll
add
push
xor
xchg
cmpsb
jb
fsub
in
dec
shll
mov
in
aam
sbb
in
lret
in
push
cmp
xchg
push
rclw
xchg
add
les
pop
add
fadd
xor
das
sbb
mov
call
and
loopne
in
sub
sbb
lcall
cmp
popl
imul
lret
mov
xor
add
notb
inc
jge
and
call
sbb
or
xor
int3
pop
inc
and
xor
add
inc
or
enter
aas
shlb
jge
push
ret
push
jo
inc
inc
scas
add
adc
pusha
out
dec
pusha
pushf
sarb
or
mov
cmpsb
filds
inc
jne
loopne
dec
mov
mov
dec
fadds
pop
fs
js
call
push
and
fisubrl
add
push
mov
shll
push
imul
fs
jl
nop
cmpsb
call
pop
jle
rolb
add
sub
fwait
add
cmp
mov
aam
cmp
xor
xor
sub
mov
les
cltd
lods
shl
rolb
dec
cmp
jecxz
jo
ss
push
xor
push
xchg
inc
dec
shll
sub
dec
loopne
add
adc
dec
inc
cmp
dec
push
cltd
and
inc
push
add
rolb
dec
jae
jb
int3
dec
push
and
xor
xchg
pop
es
push
es
or
pop
xor
adc
scas
push
aam
jae
xor
inc
and
add
pop
fadds
sub
add
scas
push
add
sub
rol
and
scas
inc
sbbl
pop
fcompl
pop
and
jb
rorb
loopne
inc
mov
adc
mov
or
lcall
in
in
adc
sub
mov
movsl
imul
enter
stc
mov
or
lods
jo
pop
push
mov
dec
inc
mov
inc
scas
dec
cmpsb
imul
fcoml
fiadds
loopne
call
and
ficomps
and
inc
mov
pop
les
dec
add
pop
sbb
shrl
mov
or
inc
into
add
cmp
dec
std
andl
aaa
sub
xchg
scas
cltd
add
sub
data16
aad
loope
xor
adcb
dec
push
decl
pop
mov
out
in
aaa
xor
or
rol
and
loopne
mov
mov
test
jge
inc
jae
stos
or
sub
mov
sub
popl
lea
jmp
jl
test
clc
mov
push
sub
pop
mov
jecxz
lret
dec
mov
jne
pop
or
sub
add
inc
neg
mov
sub
push
enter
clc
aaa
jbe
or
sbb
xchg
and
in
adc
cmp
inc
add
inc
pusha
jnp
jae
push
pop
rolb
rep
fisttpll
mov
or
mov
push
imull
outsl
pop
fdivp
ror
mov
hlt
push
shr
pop
pusha
or
xchg
fistps
push
mov
lea
and
push
loopne
xchg
movb
inc
adc
dec
js
ret
movl
mov
adc
jbe
fdivrl
pop
dec
lods
add
cvttps2pi
pushf
mov
xchg
mov
or
pop
sbb
add
leave
mov
stc
ja
lea
or
add
lret
inc
stos
mov
fwait
cmp
cmp
xor
adc
dec
sbb
lock
addl
or
adc
rolb
enter
nop
push
sbb
sbb
jbe
push
in
movups
scas
in
imul
and
mov
inc
and
pop
pop
add
mov
fs
mov
mov
inc
push
sub
neg
cmp
dec
inc
pop
stos
xchg
icebp
jno
xor
pop
pop
mov
outsb
je
dec
test
cmp
movl
loope
mov
loop
and
and
pop
movsl
mov
push
add
mov
mov
push
mov
lods
sub
sbb
add
sbb
pop
lock
jne
push
lret
out
or
mov
or
jmp
fdivs
cmp
sbb
sahf
dec
and
adc
dec
cld
and
add
xchg
orl
xchg
pop
ljmp
int3
pop
add
and
daa
dec
fsubrl
mov
or
mov
xchg
rorl
xchg
or
or
dec
inc
pop
pop
push
roll
adc
inc
sbb
fisubrl
jl
add
sub
sbb
test
cmp
mov
pop
insl
das
and
xor
jbe
cli
es
mov
push
cmp
bnd
and
sbbb
xchg
xor
insl
sbb
js
sbb
mov
call
mov
inc
mov
or
sbb
dec
cmp
jl
dec
xchg
fidivl
js
test
jae
ds
imul
and
pushf
dec
daa
lods
test
or
sub
mov
adc
mov
adc
adc
js
sub
adc
mov
sub
add
add
push
inc
in
ss
sbb
mov
adc
addb
cmp
or
or
and
rorl
jne
ret
lods
jne
imul
mov
loopne
sub
push
icebp
fwait
and
loop
test
and
adc
ret
insb
pop
or
add
xchg
and
add
insb
jbe
xchg
jp
and
add
pop
inc
mov
adc
sub
jnp
and
mov
fildl
push
push
sbb
call
mov
ds
test
data16
adc
popf
ss
add
hlt
jmp
sbb
pop
and
and
and
pop
or
xchg
add
add
fmuls
push
inc
inc
roll
imul
out
ffreep
add
nop
shrb
sub
fwait
mov
rolb
cwtl
push
add
and
pop
ss
mov
add
add
adc
xor
pop
cs
lea
push
pop
inc
es
testl
cmp
pop
pop
cmp
pop
push
cwtl
cmp
sub
pop
pop
dec
es
push
pop
ja
push
add
mov
sub
push
jmp
mov
test
pop
and
enter
sub
pop
pop
add
dec
mov
loopne
hlt
js
add
clc
je
cld
or
xor
inc
jl
mov
or
cmp
sbb
adc
push
pop
shrb
sbb
sbb
pop
pop
enter
jno
sub
sbb
pusha
fcoms
dec
testl
push
pusha
cmp
jmp
dec
pop
repnz
outsl
sub
or
aam
jle
inc
push
push
cmp
sar
aam
mov
fisttpl
popa
enter
xor
imul
int
lea
push
sub
lock
inc
call
lret
inc
lea
test
nop
js
repz
stos
xchg
add
and
cmp
push
cmp
lcall
xor
lods
inc
subb
adcl
mov
cli
push
xchg
sub
xor
mov
je
push
push
aam
setns
dec
mov
jnp
inc
daa
shr
mov
push
scas
pop
jmp
dec
or
negl
dec
arpl
daa
mov
test
cmpl
or
stos
test
xor
xchg
sub
rcrb
in
dec
inc
dec
scas
inc
jg
mov
and
and
sbb
sbb
test
cmp
mov
adc
cli
add
mov
or
mov
mov
lock
call
imul
cmp
push
pop
inc
inc
rorl
or
imul
xor
stc
push
or
or
pop
div
add
mov
adc
or
iret
add
and
inc
lret
das
sub
mov
sbb
dec
je
mov
mov
push
lock
xor
dec
cs
mov
or
or
cltd
jae
clc
jo
cld
cmpl
push
cmpsl
mov
dec
adc
inc
inc
xchg
rol
dec
or
sub
adc
adc
and
in
inc
jl
pop
push
xchg
dec
clc
jo
sbbb
jmp
hlt
je
xor
icebp
push
mov
data16
push
and
enter
addl
lahf
mov
jbe
push
xor
mov
lcall
push
jp
fisttpl
push
pusha
bound
dec
sub
aam
pop
stos
jmp
push
je
mov
in
add
cmpl
mov
sub
dec
sbb
lods
ja
adc
push
xor
scas
jae
or
xor
ss
cmp
and
jnp
loope
cmp
jo
dec
inc
sub
push
mov
jne
mov
mov
push
lock
inc
xchg
lret
add
xchg
inc
dec
inc
jecxz
or
sbb
ds
pop
or
pop
and
inc
dec
fiadds
inc
pusha
sub
adc
ds
lds
call
xor
xor
xchg
mov
lock
rcll
clc
into
icebp
mov
push
xor
mov
jmp
push
mov
ljmp
or
je
sti
xor
and
mov
arpl
imul
and
mov
sbb
xor
test
ss
mov
xchg
cmc
push
mov
push
push
or
orb
sub
xchg
push
xor
xor
mov
adc
xor
fsubrs
pop
jb
and
and
mov
xchg
test
sbb
cltd
xor
sub
or
xchg
add
sub
cwtl
adc
sub
push
sbb
icebp
fs
iret
inc
and
hlt
cmpsb
sub
or
stos
hlt
xor
xchg
test
mov
push
and
and
mov
cmp
mov
in
fwait
out
jo
xchg
cmp
fistpl
rorb
enter
leave
leave
sbb
arpl
dec
xor
movb
and
mov
push
cltd
or
cmp
dec
mov
out
mov
sbb
js
jle
data16
dec
adc
shrb
mov
popf
push
mov
lea
push
mov
imul
or
movsb
out
enter
adc
jg
xor
cmpl
jne
xchg
mov
mov
push
test
xchg
fistps
lods
arpl
sbb
test
dec
mov
and
shlb
add
jmp
pop
pusha
jmp
cmp
je
cmp
add
xchg
push
insb
sub
lcall
sbb
jge
pop
mov
adc
push
cwtl
fimull
add
lds
movsb
mov
cli
inc
mov
cmp
jle
sub
or
add
inc
mov
xchg
sbb
mov
add
or
pop
sbb
mov
shll
push
nop
jo
jns
pop
pop
cs
scas
sub
mov
pop
fidivrs
adc
xchg
into
stos
stc
or
lods
test
cmp
mov
mov
inc
adc
movsb
pop
arpl
xchg
xchg
push
push
lods
fdiv
xchg
xchg
or
test
push
xchg
and
push
rolb
testb
movzbl
cmp
je
or
dec
or
cmp
repnz
push
lods
lcall
mov
add
cmp
test
add
mov
or
shrb
les
sub
mov
lea
daa
decl
jle
je
cmp
out
sub
push
cmp
jge
mov
in
and
clc
sub
punpckldq
pop
lea
jae
inc
test
in
adc
xor
nop
cmp
and
or
lock
clc
call
xor
cld
mov
mov
add
add
repnz
push
ja
fs
pushl
in
dec
je
add
adc
cmp
dec
or
mov
shr
cmp
mov
mov
or
mov
sub
xor
inc
sub
add
lds
js
cli
mov
push
mov
cli
es
cmpsb
adc
sub
adc
je
dec
je
push
add
out
loop
sarl
adc
xchg
repnz
movsl
out
pop
cmp
inc
add
jmp
sub
in
pop
push
cld
incl
push
mov
test
je
cmp
jne
sbb
pop
dec
push
mov
adc
shrb
mov
jmp
or
inc
inc
xor
mov
fildl
pusha
bound
jmp
sbb
and
ret
cltd
idiv
inc
je
ljmp
cmpb
mov
push
adc
pop
xchg
push
fiadds
aam
je
mov
add
add
sbb
aas
cmp
mov
stc
pop
repz
adc
mov
push
inc
or
lock
cmp
mov
out
sub
sbb
jne
jmp
pop
inc
cmpsb
daa
pop
out
push
cmp
adc
aaa
sarb
ret
mov
cld
mov
pop
outsb
gs
jae
xor
sbb
call
mov
mov
mov
aas
pop
testw
in
fs
adc
cmp
je
xor
jg
cmp
push
cmp
jne
inc
jne
push
inc
adc
flds
pop
pusha
repnz
out
inc
mov
jb
mov
je
ret
lea
mov
cmp
jne
dec
test
xchg
sub
cld
repz
inc
ret
mov
icebp
add
mov
enter
lods
shll
xor
call
xchg
xor
cmp
mov
jmp
mov
popa
push
jmp
inc
jl
negb
mov
jp
add
shl
dec
mov
sub
dec
shrb
mov
mov
and
rol
mov
outsl
adc
test
or
cmp
pop
dec
cld
inc
mov
xchg
hlt
rcll
jle
mov
pop
pop
or
sbb
hlt
push
out
sbb
shlb
scas
and
push
push
add
push
pushl
insl
mov
push
inc
cmp
pusha
mov
std
mov
call
imul
mov
addb
roll
aad
inc
lods
aaa
lcall
xor
dec
sub
pop
loopne
inc
cwtl
inc
xor
gs
jge
inc
imul
xorl
xor
xor
mov
and
cmp
sbb
in
ret
pop
ficoms
or
in
inc
inc
push
out
jmp
xor
inc
jecxz
jb
inc
out
mov
lods
and
sbb
ret
subb
idivb
pop
ucomiss
imul
es
xor
push
cmp
mov
or
xor
in
push
cmp
ret
fnstsw
push
cmpsb
pcmpeqb
clc
dec
or
das
dec
fstpl
add
add
pop
clc
arpl
hlt
pop
test
mov
adc
xchg
cltd
jge
cld
imul
mov
int3
in
imul
adc
cmp
or
adc
or
push
imul
or
inc
shl
or
mov
ret
and
scas
ret
aam
or
in
sbb
das
ljmp
mov
or
add
loop
inc
push
or
hlt
fisubrl
dec
cwtl
test
mov
mov
js
sub
pop
push
inc
enter
or
push
lock
sub
jge
jne
test
test
pop
sub
add
and
jle
sbb
lock
sub
and
mov
movsl
movl
and
dec
inc
loop
loopne
sub
sub
add
into
dec
or
xchg
callw
dec
or
or
or
inc
ljmp
mov
sbbb
fstpl
jmp
jo
add
rolb
mov
push
add
out
les
xor
pop
add
pop
xchg
jmp
shll
pop
adc
sbb
pop
popa
jl
dec
xchg
xor
add
mov
or
mov
ret
pop
int
mov
pop
jne
push
movb
cmp
and
mov
es
dec
dec
inc
pop
loopne
mov
push
cmp
pop
xor
xchg
in
adc
cmp
mov
je
int
push
mov
sti
test
rorb
xor
in
or
dec
pop
stc
cmp
inc
push
lcall
loope,pt
enter
xor
pusha
add
pop
lea
movl
or
xchg
mov
es
mov
dec
inc
pop
sub
hlt
cs
loopne
outsl
movsb
sub
or
fs
pop
movb
jbe
push
es
push
test
add
jmp
xchg
jecxz
aas
inc
jns
cmpb
jne
mov
or
idivl
ret
or
sbb
xor
subl
fs
data16
ret
push
push
aas
add
lods
sub
jmp
rcrl
mov
dec
mov
dec
test
aam
push
xchg
loope
mov
test
ljmp
mov
es
inc
xchg
push
adc
inc
add
adc
inc
lock
and
lret
jno
fstps
sub
add
pop
repnz
jp
shlb
adc
jbe
mov
pop
adc
call
shll
test
or
jmp
or
mov
mov
mov
dec
dec
jbe
push
xchg
inc
adc
jmp
lcall
test
jb
mov
lcall
pop
pusha
repnz
adcl
and
pop
fistpll
clc
addl
data16
add
push
adcl
sub
subb
mov
adc
dec
jbe
pop
or
sbb
sub
fisubs
mov
push
clc
push
mov
add
adc
add
jne
sbb
push
addr16
cmp
sahf
popa
lret
push
jo
mov
pop
jl
or
insb
push
jl
sbb
das
mov
jnp
shl
xchg
pop
mov
xor
cmp
adc
dec
sbb
sub
pop
pop
sbb
inc
stos
xchg
loop
inc
loope
xchg
addr16
fistps
fidivl
inc
and
sbb
or
sbb
pop
add
movsb
pop
or
std
jmp
aam
stos
mov
test
fcmovu
lret
xchg
xchg
inc
sahf
mov
lods
std
call
push
jae
lock
cs
xor
lea
sub
inc
jge
lods
jg
inc
cmp
jb
cmp
dec
xor
call
push
push
sti
fnstenv
mov
leave
inc
lea
push
addr16
jecxz
adc
ret
in
push
mov
mov
push
push
hlt
add
movl
cltd
push
rclb
ljmp
mov
xor
dec
jne
add
jecxz
and
test
scas
xor
adc
loope
andb
arpl
inc
icebp
adc
rclb
cld
minps
sarl
cmp
inc
xor
jb
inc
push
scas
push
add
mov
adcl
jg
sbb
mov
mov
xchg
dec
sbb
shl
js
imul
loopne
mov
add
inc
shll
push
jecxz
mov
daa
inc
insb
insb
por
pop
insl
test
data16
and
adc
mov
sub
or
dec
movsl
rorb
lds
in
pop
and
add
add
pop
mov
iret
incb
out
add
xorl
or
movl
mov
mov
inc
fsts
xchg
pop
xchg
sub
cmp
and
sbbb
add
add
push
pop
data16
bound
arpl
or
jno
clc
adc
dec
sbb
data16
adc
out
xlat
xchg
mov
leave
mov
into
je
mov
add
and
std
enter
pop
add
pop
cld
sbb
sbb
lret
mov
test
add
imul
jo
nop
push
sahf
cmp
stos
push
pop
fcoml
in
jmp
imul
pop
inc
mov
out
ret
add
jp
addr16
stos
xchg
cmp
ret
add
dec
mov
imul
cmp
cmc
jno
pop
les
push
add
fists
mov
or
fsubrs
xorl
shl
mov
popa
sbb
dec
inc
sbb
xor
xor
inc
or
lret
ss
cmpsl
leave
push
sub
popa
rclb
fstpt
movsb
imul
xor
pop
daa
stos
jb
xor
jns
in
cmp
rolb
xor
adc
je
pop
xor
xchg
add
sbb
push
jmp
bound
mov
loopne
and
inc
push
mov
jo
rorb
pusha
adc
or
pop
xor
stos
or
insl
fmuls
mov
in
fs
cmp
sahf
je
pushf
aaa
movsb
outsb
push
pushf
sub
fwait
mov
test
cs
addb
push
test
xor
int
cwtl
push
adc
push
cmp
sbb
pusha
test
adc
and
add
adc
sub
or
mov
or
movl
cmovb
mov
push
or
mov
nop
ja
jecxz
in
es
adc
and
fwait
or
xchg
inc
inc
add
cmp
fstl
push
mov
inc
sbb
cmp
inc
add
pop
sti
ret
mov
cmp
mov
add
push
sbb
sub
sarl
stc
push
mov
sbb
pop
or
mov
leave
call
addl
inc
sbb
ret
jbe
pop
js
test
add
mov
or
js
popf
dec
test
mov
or
rorl
out
js
and
jae
adc
cmp
or
mov
jnp
ss
push
xor
cmpsl
imul
fldenv
cwtl
cmp
outsl
xor
jle
adc
add
jg
xor
sarl
lock
and
lock
or
jle
mov
jmp
imul
mov
fildl
mov
inc
inc
sub
mov
cmp
adc
sbb
fcmovnbe
push
and
jo
inc
or
dec
push
pop
imul
and
insl
pop
push
ret
xchg
cmp
outsl
sbb
outsl
pop
cmp
mov
adc
into
mov
jne
pop
test
and
or
dec
imul
and
sub
test
fcmovne
inc
sub
sbb
cmp
inc
icebp
add
mov
inc
mov
pop
jmp
rorb
aad
imul
daa
movsb
add
adc
jecxz
dec
pusha
cs
dec
insl
jecxz
push
int3
les
push
push
addr16
adc
rclb
ret
out
jo
dec
in
or
cli
mov
movl
pop
jo
dec
sti
or
jns
nop
adc
cmp
sub
mov
int
sub
pop
sbb
dec
mov
lods
push
pop
fiadds
pop
repz
or
or
inc
or
push
flds
iret
stos
dec
sub
subl
lock
fcoms
push
ja
test
adc
mov
imul
inc
mov
js
mov
sar
les
mov
in
cmp
push
out
mov
xchg
hlt
je
inc
ja
js
lcall
dec
aad
test
and
lret
xorl
cmpl
loopne
sub
jle
jne
pop
push
push
lods
mov
sub
xchg
sbb
mov
int3
and
push
or
lock
ds
cli
push
sub
sbb
dec
fmuls
push
mov
jl
jmp
lea
aad
and
jle
or
jbe,pt
test
add
cmpl
pop
arpl
sbb
insb
adc
sbb
sub
sub
lahf
mov
jns
dec
xchg
lcall
out
pop
add
dec
outsl
and
cli
cmp
or
loopne
mov
js
add
add
je
inc
sub
mov
sarb
dec
mov
pop
fstl
jmp
loope
aas
inc
push
dec
sub
aas
sbb
or
pop
jmp
sarb
or
push
xchg
sahf
in
or
aam
arpl
adc
pop
add
jno
sub
out
jae
cmp
pop
mov
leave
clc
or
xchg
or
sahf
rol
adc
or
mov
push
hlt
test
jo
arpl
mov
pop
sbb
adc
pop
pop
mov
sarb
adc
popa
std
xor
insl
inc
je
jp
and
mov
push
add
in
mov
ss
dec
xchg
orb
inc
adc
sbb
loop
roll
jmp
or
cmp
movsl
rcrb
or
dec
sbb
in
fisubs
pop
inc
add
fisttps
jmp
into
ja
or
and
pop
mov
push
scas
stos
pop
aaa
jmp
sub
mov
sbb
shlb
pop
dec
sub
insb
les
jge
popf
cmp
ja
scas
shlb
inc
add
cwtl
mov
or
fsubrl
cmp
xchg
divb
pop
es
lods
in
mov
inc
pop
cmp
adc
xchg
xor
pop
mov
add
in
jmp
inc
ja
sub
adc
fwait
lods
sbb
orl
mov
inc
inc
cltd
pushf
adc
inc
jp
pop
js
mov
adc
lock
inc
movsl
jle
pusha
add
fisttps
add
cmpl
je
add
fadd
add
push
mov
loope
xchg
cmpsb
in
sbb
mov
sub
scas
mov
fisttpl
sub
sbbl
sub
mov
insl
pop
leave
sbb
inc
mov
or
cmp
shll
int3
inc
inc
push
outsb
add
and
repz
les
jmp
ja
stos
or
mov
add
xor
pop
lcall
enter
push
push
cs
in
or
mov
add
cmp
mov
call
mov
pop
cmp
cmpb
mov
in
icebp
mov
hlt
rcll
jae
or
insl
push
sub
or
scas
push
test
push
popa
pusha
inc
test
fisubl
imull
inc
in
cmp
popa
inc
inc
insl
or
sbb
xor
push
dec
xor
pop
mov
or
and
mov
test
cmpb
sub
popa
aaa
or
mov
cmp
and
inc
push
or
dec
popa
shll
sub
add
xchg
mov
jb
cmp
mov
adc
mov
clc
je
sar
xor
in
add
stc
in
cmp
and
xchg
push
push
mov
loope
jns
mov
shr
jle
and
pop
cmp
sbb
add
sbb
inc
or
jp
push
pop
mov
adc
ret
push
pop
imul
fwait
pop
jae
adcb
push
and
xchg
or
popa
dec
push
adc
and
add
in
loopne,pt
inc
mov
daa
jne
int
dec
outsl
dec
dec
and
into
sbb
shr
add
xor
cld
pop
cmp
inc
push
je
cmp
jbe
push
pusha
and
and
push
xor
jmp
das
outsl
lea
je
lret
movl
adc
nop
rorl
and
or
or
test
inc
mov
or
nop
and
inc
sub
and
jl
in
and
sub
cltd
push
add
test
xchg
loopne
and
or
push
cmp
mov
hlt
xchg
dec
jo
mov
mov
pop
push
ror
add
aas
loop
mov
mov
testb
scas
dec
js
ljmp
or
mov
lea
cmp
mov
and
std
pop
sbb
mov
mov
and
cs
jb
data16
xchg
cmc
mov
xor
inc
imul
sub
xor
sbb
mov
fwait
rol
or
dec
shll
add
sbb
push
cltd
cli
cli
push
mov
dec
test
cld
cwtl
mov
out
cli
insb
lret
jne
mov
adc
fisttps
cmp
dec
js
scas
cli
outsl
pusha
jle
push
xor
pop
div
hlt
add
lea
xchg
sbb
ljmp
xchg
jmp
lods
mov
dec
push
adc
aam
inc
inc
cli
push
adc
enter
movsl
adc
add
add
xor
push
icebp
nop
mov
adc
sbb
cmp
sti
shlb
cmp
xchg
orl
push
subb
fmull
andl
gs
add
lds
movsl
imul
out
xchg
dec
push
add
or
fiaddl
es
push
insl
ss
movsb
sub
je
mov
cmp
cmp
push
shlb
std
cmpsb
imul
movntps
sub
jne
bound
adc
out
adc
inc
or
in
pop
xchg
lret
adc
hlt
ret
jle
int3
add
nop
sbb
js
add
xchg
add
imul
push
push
mov
push
push
data16
push
pop
cmp
jb
neg
xchg
adc
rorl
jmp
dec
mul
or
rorl
je
push
out
push
rep
mov
dec
ljmp
add
scas
ret
js
hlt
pop
push
adc
inc
cld
add
shrb
movsl
test
clc
into
xchg
gs
mov
test
or
ljmp
xor
adc
lods
sbb
dec
xor
inc
adc
movb
and
pop
adc
mov
scas
je
scas
pop
and
pop
and
sbbb
jge
stos
js
fnstcw
ds
and
clc
jg
fs
sub
add
movd
movaps
add
push
enter
shlb
test
xor
cli
rcl
lret
adc
dec
cmp
and
lret
or
loope
fsts
or
ljmp
insb
std
jnp
mov
and
in
mov
adc
or
add
and
xchg
out
push
cmp
ljmp
fisubl
ret
mov
add
adc
xor
shl
pop
enter
push
adc
sbb
out
jns
sbb
and
push
fdiv
rcrl
aas
cmp
mov
and
orb
decb
aam
xor
xor
pop
add
sub
jle
add
xorl
test
mov
lret
ret
adc
int3
jmp
sbb
out
fdivrl
lret
sub
ret
adc
std
pop
test
xchg
add
arpl
add
and
jne
sub
mov
mov
and
imul
pusha
in
pop
cmp
enter
inc
pop
adc
mov
push
or
mov
jmp
push
es
fwait
add
or
add
and
inc
sub
clc
ja
mov
pushl
jbe
bnd
cmp
mov
pop
inc
cmpb
out
adcb
push
jo
inc
mov
inc
inc
and
jae
addb
or
or
sbb
je
or
cmpsb
ljmp
inc
jno
stos
adc
nop
dec
sbb
or
imul
mov
xchg
cltd
fwait
jp
out
jno
or
js
test
sbb
mov
pop
xor
int3
sbb
jae
add
xchg
outsb
adc
enter
xor
popf
dec
push
pop
sub
shll
mov
je
push
cmpb
jns
add
xor
jl
lea
push
jne
ret
addr16
xchg
fwait
js
cmpsb
lods
sbb
push
sbb
sbb
movb
inc
mov
addr16
xchg
xchg
sbb
xchg
adc
jmp
cmp
scas
das
cmp
imul
add
ja
mov
dec
push
and
adc
lods
mov
pop
cmp
inc
scas
sub
xor
shll
rorb
out
fidivrs
mov
mov
jne
orl
add
xor
xlat
mov
arpl
pop
xor
pop
pop
mov
hlt
push
dec
bound
and
int3
add
aad
int3
testb
adc
inc
inc
cmp
lea
push
pop
arpl
sub
pop
cmp
int3
or
sbb
cld
jecxz
mov
push
lock
cli
lods
and
addl
cmp
jb
or
cmp
dec
dec
movsl
pop
insb
mov
sub
leave
test
adc
sbb
sub
ret
mov
imul
enter
pop
push
ret
add
jle
or
enter
pusha
add
loopne
pop
and
fs
test
add
loopne
sahf
or
inc
sbb
jmp
xor
loop
icebp
movsb
jns
in
push
rcl
add
pop
mov
cs
rorb
inc
mov
push
push
sets
clc
add
xor
inc
inc
push
add
xlat
shl
sub
push
loopne
loopne
and
pop
cld
sbb
jmp
ret
jne
cmpl
cmp
cli
testb
je
inc
mov
cmp
loop
jg
test
es
loope
or
cmp
jne
dec
jmp
sbb
jle
cmp
xor
lret
jne
inc
aaa
push
lds
mov
mov
loope
int
adc
adc
mov
push
push
pop
push
call
dec
push
rolb
inc
and
sbb
stos
inc
xchg
ret
cmp
pop
movsb
roll
cmp
mov
xchg
adc
xchg
movsb
daa
xor
pop
and
pop
decb
pop
pop
jne
fsts
popf
jo
adc
push
cmp
jb
rep
jmp
pop
pop
lock
xor
push
mov
sub
jb
lcall
out
jnp
data16
inc
nop
push
les
push
or
push
movsb
and
add
lcall
add
add
in
mov
inc
cmp
repz
add
into
mov
inc
xor
xchg
mov
iret
jnp
daa
or
push
or
cld
gs
aas
out
imul
inc
mov
mov
out
sahf
out
call
out
sahf
lock
hlt
clc
clc
cld
in
lea
or
clc
sbb
jmp
sbb
out
lock
nop
fcoms
lods
sbb
sti
and
shll
and
dec
jb
in
lea
jl
cld
pop
and
std
jnp
stc
or
cld
out
int3
addr16
sarb
xchg
mov
sub
out
cmp
xchg
pop
nop
loopne
adc
mov
int3
rcr
add
out
add
mov
mov
inc
push
fisubl
add
push
fmull
out
mov
push
push
or
sahf
out
mov
cwtl
mov
jns
ret
addr16
sbb
sbb
jns
out
adc
adc
or
jns
out
or
add
iret
jnp
and
fmull
in
hlt
or
xchg
mov
push
add
add
outsl
pop
movsb
or
ja
push
xorb
xchg
push
jbe
sbb
shrb
jmp
imul
movsb
andl
push
test
dec
loope
fisttps
mov
loope
fnstcw
cmp
jae
sub
hlt
push
nop
push
ljmp
jo
inc
fwait
mov
inc
addps
inc
xor
lcall
shll
sbb
orb
inc
lea
or
push
cmp
and
xchg
push
lea
shll
sbb
pop
popa
sub
int
jne
xchg
and
iret
push
cmp
loopne
inc
test
mov
mov
push
pop
mov
call
sarb
imul
push
sbb
adc
pop
iret
xor
sub
or
push
aaa
movsl
mov
mov
sub
ret
sbb
mov
pop
cltd
pop
pop
jb
and
insl
xchg
cwtl
or
cmp
mov
mov
push
lcall
pop
push
jle
push
adc
repnz
insb
sbb
dec
fistpl
dec
push
aaa
loope
jg
jmp
mov
mov
jle
cmp
sbb
outsl
pushf
mov
cmp
into
lea
cmp
out
ss
pop
or
jmp
sub
cmp
jne
out
ds
jnp
adc
or
add
inc
and
jne
pop
sub
add
aad
jno
fmull
add
loop
xchg
cmp
mov
cmpl
push
and
cmc
mov
sbb
sub
adc
jmp
xchg
mov
jne
pop
clc
adc
pop
and
inc
sti
addb
jp
mov
xchg
addl
shr
mov
sbb
cmpl
sub
mov
ret
adc
imul
stc
jle
mov
pop
scas
pop
and
jb
loop
xlat
xchg
xor
pushf
xchg
out
push
pop
fsubs
add
xor
and
and
and
cld
fldcw
ja
inc
inc
testb
mov
scas
or
push
test
xchg
cmp
push
dec
fdivrl
jne
pop
dec
or
cs
mov
xchg
inc
add
xchg
cwtl
pop
fsubs
mov
mov
rorb
arpl
jmp
and
jle
pop
fdiv
and
lret
push
sbb
pushf
std
mov
mov
add
jg
ret
sbb
add
mov
pop
js
push
ljmp
in
cwtl
sub
scas
or
add
push
push
sub
mov
mov
sub
cmp
stc
xor
or
lds
lods
sti
imul
popf
mov
cs
inc
pop
sbb
sub
pop
fadds
shl
popa
jmp
aam
push
fcoms
pusha
jl
push
sub
ljmp
pop
jbe
lea
adc
sbb
nop
dec
add
jp
adc
loopne
popf
out
leave
push
sbb
xorb
push
stos
add
and
popa
mov
ss
adc
add
jmp
mov
add
jmp
push
add
sbb
scas
push
orl
or
lds
lods
cld
jbe
testb
aam
add
jnp
mov
pushf
pop
popa
mov
movb
inc
js
dec
cmp
es
out
call
dec
cmp
pushf
mov
inc
bound
mov
pushf
add
int
mov
push
add
addr16
je
sub
inc
cwtl
sbb
and
cmc
lock
adc
mov
xor
mov
push
mov
inc
test
jl
pusha
lahf
push
adc
addr16
pop
or
js
hlt
pop
add
daa
or
xchg
roll
push
pop
fwait
push
pop
add
xchg
dec
cld
or
dec
fildl
dec
push
rolb
int
cmp
push
test
shl
ret
mov
rcr
pop
aaa
mov
sbbl
shrb
add
dec
inc
out
repnz
dec
add
jmp
pop
mov
push
and
cltd
lret
lcall
push
push
cltd
push
frstor
push
rolb
sbb
mov
icebp
mov
clc
add
dec
cld
or
test
daa
dec
jne
jmp
adc
pop
pop
pusha
repnz
sbb
mov
jmp
sub
xor
into
ds
sahf
xchg
sub
jo
outsb
adc
jmp
and
xor
es
add
aam
andl
jno
bound
adc
jae
push
outsb
into
add
shlb
sti
scas
xchg
fisubs
dec
mov
push
cmp
rcr
cmp
jne
es
jne
call
aad
adc
or
lods
clc
jb
jmp
push
inc
incl
dec
mov
scas
loop
aas
jmp
std
push
xor
cld
pop
jae
aas
cld
jmp
fldt
push
sar
nop
adc
adc
inc
inc
inc
out
out
or
jl
mov
jne
pop
repnz
cwtl
mov
call
inc
dec
pusha
sub
out
push
dec
lods
lcall
sub
and
stos
jae
test
daa
push
sbb
subb
jns
or
popa
adc
and
orl
nop
or
pop
decl
dec
xor
xor
or
xchg
dec
xchg
dec
pop
pop
add
pop
or
arpl
or
fs
gs
data16
js
into
mov
sbb
movb
jmp
push
mov
mov
movsl
add
rcll
mov
je
mov
stos
or
jg
add
in
mov
sahf
nop
jne
add
out
mov
cld
pop
loop
push
imul
push
push
push
inc
call
and
ljmp
jecxz
outsb
mov
push
jo
adc
inc
push
scas
les
lea
push
aam
push
push
and
add
sarb
push
outsb
xorb
clc
pop
insb
jo
bound
pop
ljmp
cmp
and
jno
je
aas
mov
sub
xor
mov
ja
popa
adc
dec
mov
or
lcall
es
outsl
call
xorl
fstps
adc
pusha
adc
pop
and
es
adc
push
js
ljmp
or
adc
or
test
sbb
data16
sbb
add
fbld
inc
insb
lcall
fmuls
lock
and
sub
pop
mov
jp,pt
jge
cmpb
sbb
sbb
sub
lock
push
loopne
or
stos
rolb
sub
jl
shlb
ja
and
cmpsb
jne
pop
mov
lock
push
or
incl
stc
and
mov
inc
je
mov
std
mov
decb
mov
sbb
or
add
jmp
pop
xchg
or
mov
inc
inc
push
loope,pn
pusha
repz
sbb
scas
mov
pop
adc
jmp
cmp
mov
inc
cmp
jb
jns
jo
xorl
insb
shrb
aaa
add
fs
adc
add
xor
mov
ret
data16
ret
iret
sbb
sub
or
lods
shl
popf
sbb
or
push
ljmp
add
sbb
jo
and
or
je
add
fwait
jo
das
mov
sahf
je
ret
inc
cld
hlt
ss
add
sub
cmp
je
xor
sahf
out
inc
je
adc
sarb
xchg
pop
addr16
mov
or
add
out
mov
xor
ljmp
div
add
in
insl
lea
mov
adc
or
cmp
test
jl
and
popa
mov
push
mov
mov
or
pop
pop
fs
xor
dec
scas
pop
pop
cmpl
xchg
xor
jg
push
bound
mov
inc
jmp
cmp
fstp
fwait
sbb
jmp
adc
jne
sub
cmc
mov
push
mov
scas
jmp
and
cmp
dec
push
xor
add
or
push
pop
and
adc
adc
pop
aaa
outsb
out
mov
pop
add
jle
lods
adc
mov
mov
mov
and
je
loop
xchg
lretw
sbb
add
je
lea
sbb
es
mov
test
and
dec
loopne
test
test
or
sub
push
jbe
push
add
inc
mov
dec
and
sbb
rclb
push
adc
shl
push
push
mov
cltd
sbb
pop
xor
adc
andl
sbb
enter
xor
dec
in
lock
cmp
add
jbe
add
mov
pop
push
sub
inc
mov
push
sbb
loope
push
pushf
jmp
aaa
jne
mov
ja
inc
cs
or
and
mov
dec
jne
fs
add
adc
pop
pop
pop
add
push
insb
xchg
aas
insb
add
jno
xchg
or
push
pmovmskb
push
push
push
sbbb
add
lods
sub
orl
cmp
je
and
or
sub
mov
lock
or
add
add
sbb
xor
pop
and
loopne
jne
test
or
add
xor
loopne
jno
push
adc
mov
adc
shl
and
lea
push
adc
or
mov
ss
adc
add
cmp
fiaddl
mov
push
jb
clc
mov
es
iret
inc
or
roll
sbb
push
pushf
mov
mov
sbb
sub
jne
or
jno
pusha
insl
add
push
adc
pop
or
scas
jmp
mov
xchg
lret
dec
xchg
sub
pop
es
jl
push
push
lcall
mov
int3
xor
testb
call
out
jmp
mov
pop
mov
push
outsl
mov
mov
shrb
add
jmp
mov
loop
rol
stos
push
flds
sub
or
mov
add
hlt
pop
nop
xchg
or
inc
sbb
leave
inc
sub
add
sub
inc
fdiv
lret
cmp
add
mov
inc
sar
add
rclb
in
xor
mov
and
pop
push
or
loope
sti
or
gs
mov
sbb
rcll
mov
inc
adc
push
into
and
loope
pop
push
jmp
xor
xorb
dec
jle
fisttpl
pop
out
mov
les
ja
xadd
sub
pushl
aad
xorl
adc
das
dec
pop
inc
daa
push
adc
lahf
push
add
sbb
rcl
cmp
or
sub
in
inc
or
cmp
cmpsl
mov
and
cli
rcrl
or
insb
push
data16
pop
addl
sar
cmp
jne
pop
jecxz
add
jbe
cli
imul
idiv
mov
mov
pop
push
push
dec
add
punpcklwd
push
test
adc
rcll
xor
addr16
andb
js
ficoml
xor
orb
dec
fs
jbe
mov
mov
mov
and
mov
fimull
mov
xor
movsb
pop
pop
add
mov
push
in
sbb
inc
adc
in
jns
testl
push
or
xor
clc
cld
push
divb
pop
xor
push
and
xchg
loopne
mov
das
and
xor
add
and
sub
cmp
push
push
inc
sub
mov
sbb
add
jbe
and
lods
add
addl
jge
dec
or
jg
push
dec
pop
inc
jo
fsubs
pop
iret
popa
mov
je
lret
adc
daa
loop
inc
repnz
adc
mov
outsb
clc
fs
sub
jmp
daa
adc
popa
jge
scas
dec
jo
pushf
ss
or
call
and
or
aam
jmp
dec
je
mov
sbb
dec
jne
push
pop
jae
push
or
ja
push
push
sbb
add
js
jbe
jmp
sub
dec
push
cmp
repz
push
mov
push
push
ljmp
lea
push
test
jp
imul
addl
inc
xchg
loopne
lahf
sbbl
addr16
jne
mov
addr16
add
dec
mov
xchg
inc
mov
dec
es
fldcw
repnz
dec
repz
xchg
test
je
and
and
fwait
sbb
lods
dec
xchg
cmovp
sub
or
jg
mov
mov
rorb
cmpsl
sub
add
push
push
and
iret
or
mov
lock
xchg
jbe
leave
add
adc
cmp
add
jmp
rorb
add
dec
loope
std
lret
jno
jae
push
jmp
sub
aas
lcall
jns
test
inc
loopne
fcoml
addl
pop
adc
mov
add
jae
popf
mov
rolb
add
or
aas
cmp
jae
clc
call
sub
adc
jmp
or
sbb
cmp
rclb
out
cmc
jg
cmp
mul
mov
add
add
sub
shlb
pop
sbb
push
movsb
push
loopne
inc
adc
dec
mov
sbb
fst
cmpsb
mov
sbb
test
adc
lds
or
dec
and
xchg
shl
fcompl
clc
mov
pop
jle
call
aaa
push
pusha
ss
cmp
mov
lea
xchg
xchg
pop
sub
js
sbb
pop
inc
push
shlb
add
fadds
push
mov
add
push
lcall
das
sahf
pushl
dec
mov
add
aad
jl
leave
sbb
jbe
lcall
push
push
pop
sub
stos
add
add
add
jmp
cmp
push
dec
out
xchg
push
popa
cmp
sbb
loopne
imul
push
xlat
mov
push
push
add
leave
mov
dec
sbb
push
inc
lods
movsl
jnp
push
or
insl
or
rcr
sub
cmp
push
movsb
icebp
ret
fcmovnbe
jl
inc
movsl
push
push
dec
inc
jle
mov
xchg
pop
and
add
inc
je
fsts
stc
xchg
clc
push
mov
stc
sbb
test
mov
mov
cmc
fsubrs
imul
add
sbb
jge
lret
loopne
inc
sub
pop
adc
sti
sub
dec
dec
or
lret
lds
cs
add
xchg
loopne
lock
fstpt
add
and
imulb
rcrb
loopne
stos
cltd
pop
inc
mov
addl
outsl
sbb
nop
ret
clc
sbb
rcrb
xlat
je
xor
xchg
add
stos
into
add
xor
pop
or
mov
cwtl
push
push
loope
pop
cmp
inc
push
mov
js
in
push
add
dec
loopne
js
aam
rcl
nop
fnstcw
imul
mov
lret
inc
dec
cmpsl
xorb
pushf
insb
fiaddl
stos
stc
rol
ja
test
pushf
out
in
or
fnstsw
in
int3
arpl
lock
sbb
and
xor
jl
xor
lea
in
push
push
aaa
jb
xor
or
cs
mov
cwtl
cwtl
enter
pop
shll
aad
jmp
push
and
jbe
hlt
mov
mov
je
add
adc
sub
or
lret
pop
ljmp
pop
movsb
adc
aam
pop
lret
sbb
mov
xchg
xchg
test
leave
outsl
aad
dec
pop
hlt
andb
cmpb
aad
add
push
std
xchg
lret
jge
call
dec
push
and
pop
jp
ljmp
mov
xchg
test
push
adcb
int3
lcall
dec
xorb
insb
cs
and
xor
dec
cld
jmp
ret
rcrb
and
and
inc
push
outsb
xchg
or
in
daa
mov
ljmp
dec
mov
mov
mov
rorl
push
dec
call
and
inc
pop
and
imul
mov
jmp
pop
rorb
sbb
out
movsl
pop
or
inc
jae
leave
cmp
xlat
repnz
add
xor
and
jp
inc
lock
fsubrl
add
clc
jmp
clc
mov
das
test
dec
in
adc
je
mov
pop
loop
into
mov
fisttpl
and
nop
xchg
pop
repnz
and
push
cmpsl
popa
and
jp
cmp
xchg
jmp
xchg
cmp
xchg
sub
mov
xchg
jl
shrb
aad
mov
popf
and
mov
push
leave
add
and
jl
jnp
pop
enter
sarb
pop
icebp
mov
add
and
ljmp
jno
mov
incl
cmpsl
or
push
mov
cmp
fs
jns
ds
jmp
adc
decl
inc
enter
push
xor
pop
divl
nop
pusha
push
test
lods
incl
cs
lcall
inc
fcoms
mov
repz
push
adc
and
orb
dec
jnp
sub
pop
or
mov
or
dec
jns
ret
imul
mov
adc
outsb
pop
cmp
xor
xor
jnp
mov
push
or
je
mov
subl
testb
jne
xchg
roll
pop
jmp
rorb
cld
rol
cli
add
push
pop
push
add
or
sarb
and
jne
lods
push
test
push
sbb
stc
sbb
xor
adcb
lea
inc
and
cmp
mov
outsb
jne
out
outsb
movsb
test
add
or
mov
repnz
mov
hlt
or
mov
lods
or
icebp
jle
popf
push
xor
cltd
fisttps
adc
jmp
testb
ds
aas
pop
mov
or
mov
dec
jns
sub
adc
or
and
loopnew
adc
lock
mov
mov
inc
xchg
js
jns
icebp
inc
push
dec
cmc
adc
std
sbbb
xchg
cmp
test
sub
push
inc
loopne
xchg
push
std
mov
inc
mov
ret
lcall
fdivr
and
sbb
and
cmpb
lock
inc
xor
and
pop
out
xorb
cmpsl
xor
es
add
pop
xchg
pop
jmp
insl
or
dec
xor
sub
std
add
sbbb
pop
and
add
inc
jo
mov
lods
adc
addr16
clc
mov
int
push
mov
repnz
inc
dec
pop
sbb
test
adc
cwtl
add
and
nop
push
sub
pop
fnstcw
adc
std
pop
pop
xor
mov
jns
jns
sbb
subb
pushf
popl
mov
mov
mov
movl
dec
mov
rorb
imul
adc
pop
mov
or
mov
nop
loope
js
rcrl
push
int3
adc
or
xor
mov
inc
push
mov
dec
nop
push
push
sbb
shl
sub
mov
mov
aam
into
xchg
andl
push
les
mov
mov
pop
push
xor
lods
jl
add
or
std
fcoml
lods
popf
aam
sarb
mov
xchg
clc
or
test
mov
shrb
lock
jno
pop
add
hlt
imul
in
testl
adc
and
xchg
xchg
xchg
lock
lea
jne
mov
rorl
jmp
sub
fsub
add
add
mov
test
mov
pushl
sbb
rcrb
or
cltd
orl
sbb
push
mov
add
or
sbb
pop
push
or
dec
or
xchg
xchg
test
xchg
les
les
add
push
fisubrl
clc
jge
out
pop
jae
inc
push
mov
adc
jbe
push
inc
mov
test
lock
pusha
pushf
pusha
lcall
dec
xchg
pop
pop
pop
push
adc
or
lds
ds
mov
dec
pop
sbb
movsb
mov
js
jne
mov
call
pop
pushf
and
jns
cmp
lock
loopne
mov
mov
mov
add
inc
sbbl
lret
and
cmp
jge
and
push
lds
sbb
lret
adc
or
test
push
mov
cmpb
rol
xchg
aad
or
pop
popf
mov
jo
xchg
fdivrs
xlat
sub
mov
popf
jne
ficoml
je
adc
sbb
xchg
in
stos
mov
xchg
jge
shrb
ja
lods
call
iret
cli
gs
pop
imul
mov
mov
cltd
lea
jbe
ja
leave
adc
xorb
ljmp
rcll
sbb
pop
sar
sbb
loopne
fsubl
xchg
push
xchg
mov
inc
xchg
lea
jb
je
mov
mov
and
test
dec
or
je
or
inc
lea
sub
fs
mov
push
pop
add
ret
out
pop
andl
shrb
sbb
push
test
adc
icebp
fdivs
inc
repnz
add
xchg
clc
shll
mov
rorb
int3
adc
ja
movsl
mov
jb
and
mov
hlt
adc
inc
mov
sbb
inc
cmp
push
xchg
or
jnp
or
dec
mov
pusha
sub
xlat
mov
sbb
pop
and
aaa
ss
js
add
movb
inc
xor
pop
sti
movsb
into
movsl
incl
dec
roll
sbb
imul
outsl
and
test
xchg
adc
movsl
inc
aad
lock
rcrb
pop
call
test
lea
fstpl
das
add
mov
xor
or
sbb
jae
mov
je
pop
push
xchg
and
test
add
cwtl
mov
repz
movsb
dec
imul
mov
mov
hlt
sbb
fisttpll
push
arpl
xor
xor
sub
mov
loope
cwtl
mov
push
sbbb
or
dec
and
in
adcl
mov
sub
in
mov
push
add
xchg
testb
jb
push
adc
push
push
popf
cmp
inc
push
insl
cmp
jl
xor
push
xor
cmc
pushf
daa
rcrb
addl
dec
mov
sbb
ss
cmp
mov
sub
mov
loop
add
mov
stc
xchg
test
xchg
rol
arpl
in
maskmovq
jg
jmp
mov
inc
lods
xlat
xor
sete
jo
mov
sbb
mov
jl
stos
mov
je
call
cmp
jmp
sbb
shll
jmp
inc
mov
gs
mov
jmp
push
pusha
je
or
sub
mov
int
sbb
loopne
and
cwtl
lds
and
xchg
aaa
gs
test
add
into
arpl
dec
dec
xchg
mov
gs
add
sbb
or
and
shl
mov
negl
addl
rcl
nop
dec
ficompl
add
mov
xchg
hlt
jmp
lahf
out
pop
mov
imul
sbb
and
pop
push
out
loope
and
and
movsb
out
mov
movsl
jo
pop
lock
inc
cld
adc
mov
mov
js
pop
xor
jno
pop
insb
dec
mov
mov
out
cltd
dec
mov
jne
movsl
push
push
push
in
je
mov
inc
pusha
lds
jb
cmpb
jne
and
nop
ljmp
cmpsb
push
lahf
push
data16
mov
cmp
mov
cli
mov
mov
push
inc
daa
add
jno
sbbb
insb
pop
test
sub
loope
popa
or
inc
scas
push
xor
mov
dec
mov
lock
and
inc
cmp
outsb
dec
mov
cltd
jmp
xchg
sub
cltd
add
dec
sbb
pop
jl
jae
adc
add
sbb
adc
cmp
jnp
or
psrlq
sbb
jge
clc
les
daa
mov
or
sbb
push
imul
lea
es
or
inc
pop
sub
stc
cltd
push
push
push
movzwl
add
clc
aas
ffreep
pusha
mov
cmp
sahf
mov
jmp
jno
out
adc
xchg
sub
inc
cmp
shlb
dec
movb
and
or
in
jmp
push
movsl
sub
mov
es
cld
mov
addb
pop
sub
ret
dec
adc
sar
int
test
inc
add
xchg
pop
in
aas
add
push
add
sub
mov
cld
push
sub
push
cmp
pop
xlat
lret
int3
mov
fisttpll
shrl
mov
mov
jg
test
jne
jmp
and
test
push
and
ret
mov
jg
add
mov
and
icebp
arpl
lods
or
das
adc
lret
mov
push
lds
mov
mov
xchg
and
inc
aam
mov
shl
inc
in
or
adc
movsb
dec
fistl
mov
inc
loope
and
xor
cltd
fst
add
pop
cmp
jmp
adc
popf
jmp
mov
mov
jge
push
lock
jo
or
xchg
and
xor
je
gs
stc
sub
cld
out
out
mov
movsl
daa
pop
mov
sbb
ret
mov
or
or
pop
jl
xchg
mov
js
inc
mov
fdivrl
pop
jmp
xor
cmp
shrl
movsb
pop
ret
nop
and
aam
cmp
fwait
call
leave
lret
ss
cmp
xchg
mov
mov
push
dec
xor
or
mov
aad
dec
pop
mov
ss
jbe
int3
int3
add
fimuls
pop
ret
adc
mov
pop
lret
or
sub
les
test
mov
or
jo
mov
xor
cmp
les
xor
add
ret
pop
add
in
mov
cmp
push
lock
insb
data16
and
divl
push
or
xchg
push
push
mov
leave
repnz
add
fadds
loop
add
push
inc
test
mov
dec
arpl
into
mov
aam
adc
push
adc
mov
into
loope
add
mov
jb
push
xchg
push
xchg
add
inc
insb
jbe
mov
fldt
mov
and
cli
or
mov
mov
stos
and
xchg
jne
dec
aam
clc
fcoms
push
or
int3
dec
mov
mov
aaa
insl
and
lahf
xchg
jno
mov
test
jp
add
push
mov
stos
mov
stos
fimull
mov
jge
or
in
mov
flds
adc
jmp
inc
loopne
leave
leave
lret
loopne
loopne
pop
adc
cltd
sub
or
movsl
push
ljmp
imul
or
aaa
jo
mov
nop
outsl
repnz
xchg
push
sub
movsb
or
sbb
pop
sbb
mov
mov
sbb
xchg
fs
popa
cmp
and
and
inc
mov
adc
push
inc
push
jb
lds
cld
and
cld
add
cmp
pop
push
mov
int3
adc
nop
lcall
xor
add
cmp
aas
adc
pop
std
pop
and
cmp
out
nop
xorb
daa
cmp
add
mov
ds
push
mov
roll
pop
mov
gs
sub
lret
cmp
loopne
xor
insl
mov
daa
ds
push
outsl
adc
pop
jge
shll
inc
sub
sub
lea
pop
out
enter
sar
ret
add
sub
mov
jle
mov
push
and
adc
movsl
int3
in
ds
push
pusha
sub
subb
pop
push
add
lods
or
lea
adc
call
je
adc
or
mov
adc
test
jb
enter
mov
mov
sub
sti
out
and
subb
std
xor
jo
pusha
xchg
mov
pop
and
cmpsb
cmpb
and
subb
push
xchg
sarb
pop
cmpsl
inc
stos
or
test
fnstcw
pop
out
mov
inc
js
push
dec
rolb
xor
mov
xor
pop
jl
and
cwtl
sti
xchg
and
sub
pop
mov
insb
int3
mov
mov
jo
cmp
test
cmpsl
and
leave
adc
ja
clc
sub
dec
xor
test
mov
gs
mov
lock
lock
and
jns
push
leave
xchg
mov
or
rorl
xchg
pop
mov
in
mov
les
xchg
pop
cld
add
xor
push
sbb
pop
imulb
sbb
loopne
jecxz
jbe
sub
sub
mov
mov
sti
sbbb
cld
dec
xchg
sbb
or
pop
mov
fisubs
mov
call
add
jg
jecxz
jb
faddp
into
inc
and
add
and
in
push
cmp
jle
xor
jo
jmp
cmp
add
push
cmp
out
pop
shlb
push
sbbb
sbb
mov
or
das
and
aad
mov
and
ds
jl
rcrl
mov
push
push
adc
mov
sbb
loop
popf
or
shll
aaa
cmp
dec
adc
lret
test
mov
cmp
repz
je
add
and
loopne
add
test
push
out
inc
pop
xchg
mov
cmp
mov
mov
addb
sub
lock
andl
jle
dec
pop
adc
cmp
mov
mov
or
cmp
call
cmpl
sbb
xor
mov
das
pop
pop
jg
pop
into
or
inc
addb
mov
inc
mov
shlb
lods
push
dec
popf
in
lods
clc
imul
mov
imul
rorl
mov
jno
scas
pop
test
lods
push
cmp
jle
call
jne
les
dec
inc
push
bound
mov
cmpb
xor
rep
jp
inc
ret
push
nop
jnp
xchg
xchg
rcrb
test
mov
fbld
hlt
mov
mov
popf
je
ja
cmpsb
in
mov
add
pop
xlat
pusha
enter
out
cmpsb
mov
xor
and
shll
stos
aad
and
clc
push
mov
fldt
arpl
mov
arpl
cmpsb
rorl
jne
out
cwtd
fsubs
aas
fcom
pop
repz
inc
outsb
jecxz
scas
and
jmp
xchg
mov
loopne
icebp
xchg
push
inc
js
nop
inc
int3
fistpll
insb
jne
pop
ret
mov
adc
and
jg
int
outsb
mov
sbb
mov
xor
jg
movsb
pop
fstpt
jb
cmp
xor
and
dec
dec
lcall
mov
je
mov
sbb
add
or
aad
sbb
je
dec
test
lds
mov
jae
sbb
jns,pn
stos
mov
fmul
sub
inc
mov
bound
mov
cld
or
lret
adc
fistl
pop
inc
mov
ja
mov
push
jb
mov
sbb
imul
lret
push
jns
outsb
sub
mov
pop
sbbl
dec
daa
jns
adc
lods
in
push
sarb
xchg
test
in
ret
inc
sahf
xchg
out
and
shll
je
jno
pop
in
jo
bound
and
jae
add
mov
cmpsl
inc
loopne
mov
cltd
add
mov
lret
mov
inc
clc
mov
movsb
dec
loop
addr16
add
dec
xor
cmc
push
mov
lods
mov
mov
inc
scas
movsb
pop
pop
test
sbb
fs
inc
mov
shll
jb
lds
popf
jecxz
fdivr
inc
popf
push
push
loopne
outsb
lods
fildl
aas
incb
add
push
mov
or
and
jg
fsubr
rcrl
push
into
xor
test
jl
jo
adc
jp
pop
push
pop
push
gs
popf
sub
aas
mov
xchg
outsl
push
inc
pop
aaa
push
divb
mov
dec
sub
jnp
loopne
add
dec
lods
pop
mov
inc
push
push
cmp
scas
cmp
mov
push
add
loop
roll
xchg
jns
fs
mov
and
jns
in
jb
cmpsb
add
inc
cmpsb
inc
es
nop
loope
aaa
mov
or
jns
mov
fcmove
enter
loopne
in
nop
pop
cmpsl
ss
daa
outsl
fnstenv
daa
pop
in
push
sub
or
sbb
loop
cmp
pop
mov
add
mov
lds
stos
add
cmc
fnsave
add
arpl
dec
repz
lods
mov
xor
rol
jle
fcomip
mov
pop
pop
adc
test
sub
jbe
add
cmp
cmc
dec
inc
push
mov
aam
arpl
lret
xor
aam
push
clc
xchg
pop
outsl
and
xchg
cmp
jne
sub
rcll
or
adc
and
lret
inc
pop
pop
xchg
xchg
in
jae
jge
dec
pusha
das
mov
or
outsb
cmp
rorb
pop
fwait
hlt
dec
add
push
xor
mov
xchg
inc
push
or
jmp
shr
lds
adc
fucomi
aaa
push
push
add
add
or
cmp
and
jmp
inc
add
sub
dec
inc
mov
xor
xor
rclb
push
insb
mov
rcll
add
xchg
xlat
push
push
sbb
add
out
scas
mov
add
jnp
hlt
push
lds
movsb
fidivrs
or
pop
or
loopne
adc
jns
popf
sub
adc
or
and
inc
mov
sbb
dec
movsb
add
adc
mov
fcoms
int
jo
lods
adc
shrl
push
push
insl
add
sub
mov
jno
adc
mov
inc
add
sbb
push
add
or
arpl
and
sbb
push
mov
mov
enter
jnp
outsl
xor
add
inc
sbb
hlt
mov
mov
or
sub
testb
sbb
push
sub
mov
or
mov
inc
add
mov
leave
fnstsw
in
jbe
loopne
ficoms
push
jns
jmp
das
cmp
ret
sub
sbb
inc
lcall
add
popa
loop
or
sti
incl
hlt
push
orb
mov
cmpsl
je
push
push
std
insb
fmuls
mov
xlat
mov
mov
jle
test
pop
mov
mov
rorb
sbb
mov
rclb
es
sbb
and
mov
add
adc
cwtl
cmc
xor
das
dec
pusha
ja
mov
push
inc
jo
push
inc
fdivs
jg
and
popa
add
das
imul
mov
imull
movsl
inc
loopne
pusha
xchg
fdivrl
xor
add
sbb
shl
jnp
cmp
hlt
fists
push
aas
dec
out
cmpb
rorl
xor
aad
push
mov
cmp
jne
movl
fst
movsl
add
cmp
std
jne
negb
nop
adc
jmp
sub
imul
pusha
fstl
inc
or
leave
pusha
cmp
stos
inc
pusha
cmp
push
sbb
imull
mov
sbb
push
mov
ss
ljmp
cmp
out
jb
or
push
les
in
cwtl
mov
fwait
pop
test
or
push
and
aaa
es
mov
pop
icebp
stos
push
aas
rolb
jnp
dec
sbb
jae
cmp
jbe
cli
sti
shl
jne
movsb
js
dec
mov
pop
inc
push
leave
pop
push
mov
int
leave
dec
jno
xorb
lea
aam
sbb
mov
sub
pop
sub
cmpb
inc
cmp
lods
or
ljmp
or
jg
sbb
jge
add
jb
mov
aam
inc
inc
add
pop
xchg
xchg
inc
and
lock
pop
orb
and
and
push
dec
jne
mov
orl
add
test
or
jbe
mov
inc
dec
jne
clc
jnp
sbb
scas
stos
mov
jmp
add
addr16
loop
or
jmp
cmp
imul
leave
and
subl
mov
popa
mov
cs
mov
in
xchg
or
cmp
adc
and
jp
cmp
adc
mov
and
dec
rorb
data16
lods
jb
mov
mov
sbb
dec
xor
xchg
jne
add
mov
push
idivb
xor
xlat
testb
insb
ljmp
add
xor
and
dec
mov
bound
popf
das
or
push
outsb
xor
mov
add
out
or
cmp
out
icebp
std
sub
jmp
xor
dec
sbb
mov
mov
xorb
xor
add
loopne
gs
cmp
or
jno
es
lahf
stos
sub
mov
popf
xchg
flds
and
mov
add
pop
sub
cmpl
ljmp
pop
pusha
and
subl
xorb
xor
jp
cld
xchg
xorb
sbb
or
lea
push
push
jg
or
popa
mov
ljmp
push
xchg
jo
ret
adc
sarb
movsl
sub
adc
jo
mov
and
sub
cmp
leave
clc
dec
add
adc
mov
mov
sarb
pop
adc
and
pop
sbb
js
lods
pushl
dec
push
xorb
not
pushf
cltd
out
lahf
das
adc
dec
rolb
sub
xchg
xchg
insl
insl
fsubrs
xor
and
mov
outsb
mov
fnstsw
cwtl
daa
xchg
mov
or
mov
aam
rclb
mov
jg
pop
test
mov
cmp
loope
mov
add
push
shrb
jns
inc
cld
es
push
cmp
mov
add
push
mov
frstor
test
xor
and
xchg
lahf
rolb
pop
or
addl
cmp
add
push
jb
add
orb
sub
std
dec
inc
xor
insb
sti
inc
imul
pop
mov
jmp
pop
push
dec
adc
cwtl
leave
es
ret
or
or
add
push
add
fs
sbb
pop
or
inc
mov
movsb
cmp
sbb
push
push
push
pusha
fistpl
xor
or
aas
loopne
push
test
scas
jo
sub
push
pop
fadd
or
mov
or
inc
movl
push
mov
sub
inc
or
and
xor
jg
popa
cmp
sahf
xchg
mov
inc
xor
dec
adc
mov
shlb
push
bound
jo
scas
arpl
in
push
pushf
adc
or
pop
push
inc
faddp
or
loopne
dec
xchg
adc
mov
shrb
push
add
dec
sbb
pop
push
mov
mov
and
adc
mov
loope
out
test
or
xor
shl
pop
iret
nop
lret
pop
iret
in
es
call
arpl
loopne
test
and
enter
sub
xor
sbb
sbbl
loop
pop
cmp
cmp
and
sbb
sub
push
dec
pop
insb
bound
adc
cmpsl
dec
insb
and
pop
cmp
leave
adc
xchg
insb
mov
mov
insl
mov
popf
jge
xor
fnstcw
sub
test
adc
repz
rclb
mov
pop
push
jo
xchg
mov
cltd
leave
test
or
xor
push
adc
mov
test
sti
adc
jno
les
cmp
sbb
jae
rclb
pop
or
addr16
and
jl
xor
cmp
fs
pop
fistpl
outsl
inc
stos
xor
leave
call
mov
rcll
jge
xlat
cmp
xor
push
xor
xchg
sbb
pop
mov
pop
pop
lret
mov
and
lods
adc
rcll
sub
scas
add
and
mov
sub
inc
js
pop
out
inc
pusha
sub
mov
cmp
jle
push
pop
xchg
sbb
jbe
jmp
xchg
mov
sub
lsl
sbb
or
xor
add
jmp
pxor
push
push
add
shl
and
mov
loop
sar
aaa
fists
mov
push
inc
adc
and
ret
movsl
inc
push
pusha
jo
mov
dec
jne
shlb
int
mov
lock
or
or
xchg
les
xor
mov
je
xor
fstpt
xchg
sbb
add
jne
mov
or
dec
sbb
and
inc
cli
pop
pop
ret
je
popf
fnsave
push
mov
bound
add
cli
shr
inc
repz
add
adc
clc
xchg
ja
or
test
lahf
imul
pop
jl
js
notb
xchg
lods
outsb
push
test
adc
loope
ss
adc
jo
ret
push
pop
xor
or
shll
enter
pop
movsb
leave
push
or
mov
mov
hlt
mov
insb
aaa
out
movsb
outsb
ss
xor
adc
nop
icebp
xchg
add
add
or
mov
dec
sbbb
sbb
push
push
pop
push
add
lret
negb
rorl
fsubrl
imul
dec
or
dec
push
das
cmp
dec
cwtl
xchg
add
mov
xchg
pusha
adc
push
call
inc
xlat
cmp
lock
rcl
dec
fiadds
and
sub
xchg
popf
pop
enter
in
imull
bnd
jmp
andb
adc
cmp
test
sub
fildl
mov
das
and
pop
imul
add
mov
add
and
sbb
scas
repnz
test
add
sbb
ja
sbb
push
push
lahf
mov
fbld
stos
pushaw
pop
and
call
loopne
sbb
imul
loopne
cmpsl
xor
pop
sbb
ficoms
mov
xchg
decl
in
jmp
mov
mov
scas
mov
adc
aam
xor
and
js
and
push
mov
clc
bound
mov
adc
lea
xor
and
pop
pusha
int3
dec
xchg
push
iret
repz
lahf
test
mov
repz
sbb
fsubp
sbb
mov
jge
mov
or
insb
andb
mov
sub
and
add
lock
inc
pop
or
push
inc
pop
imul
sub
rcrb
and
inc
and
ret
jge
je
jo
ficoml
cltd
jmp
inc
faddl
mov
adc
popa
add
mov
inc
test
or
outsb
cmp
jmp
xchg
and
ret
and
push
push
test
fs
mov
es
lock
sbbl
adc
daa
or
mov
mov
push
cld
divl
adc
dec
dec
call
pop
push
mov
jl
add
aas
cmp
and
jle
mov
mov
mov
add
les
mov
push
mov
lock
mov
jmp
bound
out
and
cmpsl
add
sbb
mov
inc
cmpl
add
sbb
add
mov
ret
cmpsl
lcall
push
xchg
xchg
mov
dec
mov
outsl
mov
or
mov
and
mov
sub
jns
add
movsb
pop
in
test
lock
mov
jb
std
mov
mov
lods
std
dec
call
push
jne
add
pop
mov
pushf
movsb
or
jmp
add
lret
dec
daa
or
pop
stc
test
add
jne
scas
jno
cmp
jnp
mov
inc
or
lahf
dec
fdivrs
push
jecxz
mov
push
ds
push
ds
push
cmp
inc
xchg
jns
mov
sbb
in
adcl
push
or
cltd
shr
mov
mov
sub
popa
xchg
pop
add
popf
xor
mov
or
pop
add
cmpl
add
pop
fwait
add
add
mov
mov
pop
in
mov
enter
push
mov
dec
call
mov
call
push
fmull
push
push
push
dec
mov
sub
lods
sbb
jne
inc
sub
pop
aad
pop
and
std
pop
mov
cmp
jne
cmpb
ret
add
mov
xor
movsl
ret
je
inc
imul
imul
lcall
pop
pop
sahf
mov
push
mov
and
inc
xchg
shlb
mov
cmp
mov
fsubl
fimull
int3
or
test
xor
repz
pop
xchg
mov
pop
mov
dec
dec
je
push
or
arpl
cmp
cmp
xchg
xor
iret
and
rorb
les
cmp
xchg
cmpsb
or
test
mov
push
adc
loopne
dec
mov
scas
ss
sub
es
lock
mov
outsb
jg
mov
pop
jmp
mov
loope
js
cmpsl
aam
mov
test
jno
pop
aam
xchg
neg
daa
jmp
mov
sub
jns
sbb
leave
and
adc
xor
add
rclb
pop
adc
addb
data16
js
sbb
adc
pop
push
fwait
sub
fwait
cmp
fmul
addb
lret
jl
out
pop
inc
pop
sbb
aas
or
xor
add
out
data16
mov
enter
xorl
sub
imull
lret
mov
hlt
scas
aaa
and
loopne
jno
pop
jmp
daa
xor
scas
loopne
mov
mov
sub
push
adc
mov
cmp
je
mov
aad
subl
popf
mov
and
dec
filds
add
test
cmp
push
mov
popa
dec
int
je
jge
sub
add
subb
imul
lock
lahf
outsb
push
inc
fildl
cmpsb
push
loopne
sbb
dec
lret
in
mulb
rcrl
imul
outsb
dec
sbb
sbbb
pop
pop
or
dec
push
popl
push
xor
jecxz
push
insl
xor
aad
int3
sbb
mov
mov
test
dec
push
test
mov
neg
adc
neg
ret
loop
adc
push
shlb
and
jb
dec
movsl
lea
enter
push
inc
pop
inc
lahf
in
xchg
arpl
lahf
xor
lahf
mov
call
imul
rclb
mov
into
xor
fiadds
or
add
inc
jmp
dec
cs
out
sub
dec
leave
shlb
ss
or
sub
mov
enter
add
movsl
xchg
add
fldl
mov
or
sub
fists
pop
sbb
jmp
dec
adc
inc
sub
les
sub
pop
mov
int3
mov
sbb
sahf
inc
notl
fwait
mov
pop
mov
xchg
or
and
sub
jb
mov
mov
fs
mov
xor
jecxz
les
je
popf
sbb
jno
adc
push
sbbb
sbb
sbb
out
mov
sub
push
nop
pushf
lods
loopne
dec
ficoml
sbb
cmpsb
jmp
sbbl
out
sub
adc
ficompl
push
add
insb
aad
jns
sub
loope
test
adc
insl
test
push
daa
pop
mov
mov
dec
adc
pop
cwtl
ljmp
nop
lcall
add
push
add
cmp
hlt
rolb
sbb
jp
roll
cs
rorl
xor
movsb
daa
inc
enter
mov
and
and
jno
outsb
or
pop
mov
dec
xor
mov
push
mov
mov
inc
gs
lea
pop
or
pop
out
rolb
pop
scas
mov
aas
xchg
pop
ss
sbb
enter
xor
lock
and
lret
stos
pop
ret
jbe
lods
repnz
leave
lock
aas
mov
sub
pop
add
xor
add
fsubr
pop
dec
aas
pusha
repz
outsb
aas
scas
movsl
push
mov
scas
adc
outsb
insb
out
inc
into
adc
jecxz
inc
aad
pop
jo
dec
inc
xlat
test
lret
mov
pop
and
mov
inc
inc
inc
inc
inc
inc
mov
sub
and
jo
aaa
or
call
aaa
inc
xchg
movsb
repnz
push
inc
mov
mov
mov
add
pop
sti
es
sbb
inc
scas
dec
inc
call
cmpsl
aad
cmp
cwtl
pop
jno
aad
cmc
push
hlt
lods
outsb
inc
sub
mov
mov
add
repnz
dec
es
aas
dec
add
movsb
xlat
add
adc
decb
cld
push
push
aam
int3
sbb
nop
and
cwtl
inc
mov
cwtl
lods
mov
push
enter
rcll
lods
rcrl
mov
xor
cmp
jb
dec
jb
test
leave
leave
mov
stos
movsl
adc
aaa
jbe
mov
pop
xor
test
addb
add
in
arpl
dec
adc
aaa
push
mov
repnz
jb
enter
xor
pushf
cwtl
sbbb
nop
mov
movsb
xor
mov
nop
nop
pushf
cwtl
inc
dec
cs
mov
nop
mov
shr
shl
aaa
int3
cmpsb
js
or
test
lds
orb
repz
stos
ljmp
hlt
lea
cmp
jp
or
fld
mov
insb
mov
jnp
dec
js
push
inc
ds
sbb
adc
cli
je
negl
sbb
xorb
xchg
and
pop
enter
pusha
xor
fiaddl
add
sbb
or
xor
add
pop
push
lods
push
jle
xorl
int
or
and
sti
jl
xor
or
push
sbb
add
jmp
inc
fwait
stos
mov
jmp
lock
mov
inc
nop
sbb
dec
add
test
negl
sub
inc
movsl
inc
or
inc
pop
or
imulb
or
add
shlb
push
clc
push
adc
lock
mov
xchg
mov
fadds
dec
dec
sbb
mov
mov
sbb
inc
call
inc
or
test
xchg
push
cwtl
popl
add
fldcw
xchg
mov
sub
xchg
loope,pn
shr
je
jg
adc
outsl
push
loope,pn
jge
dec
adc
push
and
jle
out
lcall
inc
or
adc
lahf
push
jbe
jle
cmpsb
addr16
lahf
out
ja
jo
mov
pusha
mov
jge
jne
jo
in
pop
jnp
int3
pop
ffreep
lea
lea
stos
and
rolb
in
rcrl
mov
fdivs
movsb
mov
jp
inc
inc
call
jle
push
negl
ret
mov
lret
ret
in
inc
push
mov
shr
dec
js
ds
mov
or
lods
or
cmp
push
pop
into
sbb
stc
add
fdivrs
mov
cmp
or
mov
push
dec
pusha
add
or
roll
push
mov
push
add
bts
jmp
mov
jl
dec
repz
out
xor
add
xchg
les
mov
inc
adc
cmpsl
adc
inc
loopne
js
adc
jne
inc
adc
and
out
mov
or
cmp
adc
sbb
mov
cld
push
dec
mov
aas
xor
dec
pop
mov
push
cmp
daa
adc
mov
sbb
out
add
xor
and
icebp
rol
repnz
fadds
ljmp
mov
pop
addl
cwtl
and
pusha
mov
adc
jle
dec
mov
loopne
cmp
ljmp
mov
and
test
cmpl
in
mov
pop
subl
sbbl
test
lea
ds
xchg
in
xchg
inc
mov
cmp
jp
push
test
adc
addr16
add
pusha
subl
outsl
inc
test
cwtl
sbb
dec
in
adc
jns
ja
adc
lret
sub
mov
and
jmp
bound
fstp
inc
or
add
adc
dec
mov
sbb
test
jmp
mov
push
pushf
test
push
adc
loopne
mov
out
movsb
inc
push
cmc
fadds
sbb
fincstp
adc
gs
jmp
outsl
mov
test
push
jbe
add
gs
pop
pusha
jle
test
pop
and
lock
scas
and
xor
pop
add
incl
test
adc
int3
insb
sbb
mov
inc
jne
out
dec
adc
es
lods
int3
stc
inc
push
hlt
adc
xor
popa
mov
mov
stos
add
xor
outsl
mov
push
push
sub
push
notb
or
or
ret
sarl
cld
nop
out
mov
enter
or
jne
dec
rclb
popf
rorb
movsb
loopne
testb
fnsave
dec
add
sub
ficoml
movsl
adc
js
mov
inc
cs
je
cmp
jo
outsb
add
or
js
and
imul
pop
dec
ljmp
add
in
into
shll
add
sbb
inc
test
xchg
or
push
and
pop
pop
mov
and
es
jne
push
sbbl
pop
and
out
test
add
jo
shlb
fcmovnb
es
idivb
cmp
mov
mov
scas
jne
sbbl
push
mov
lret
and
jae
jbe
call
andb
jae
lea
add
add
mov
shrb
push
xor
cmp
sahf
into
daa
orl
mov
dec
pop
mov
shlb
mov
stos
pop
mov
add
dec
add
add
repnz
mov
enter
adc
pop
shrb
cli
push
sub
lea
push
or
push
es
mov
and
push
std
push
push
pop
push
int
sarl
aas
sbb
nop
xchg
jo
daa
test
mov
fnstsw
movl
add
pop
movb
lcall
das
xchg
pop
dec
inc
push
jle
inc
in
add
int
push
das
add
push
xchg
adc
lret
sbb
fidivrs
mov
xor
cmp
movsb
or
js
pop
sub
add
arpl
xor
faddl
add
and
testb
add
cmp
or
pop
pminub
rorb
and
into
sub
shll
cli
test
adc
lds
adc
or
ljmp
jp
lret
pop
push
or
testb
lock
pcmpgtd
out
test
lock
sar
shl
add
nop
adc
push
rolb
mov
jecxz
cmp
push
in
mov
cmp
inc
inc
jo
sbb
dec
and
mov
mov
test
push
orb
jmp
mov
mov
jmp
lea
sub
cmc
push
ds
inc
sub
push
in
or
or
xor
mov
out
cmpb
jmp
xor
adc
popf
or
sub
mov
or
popf
mov
cld
out
add
sahf
ret
adc
out
adc
sub
adc
mov
mov
mov
movsb
rorb
add
adc
movsb
stc
dec
dec
out
imul
push
ljmp
dec
cmpb
or
shlb
push
shlb
xor
je
inc
movsl
inc
and
push
paddusb
sahf
mov
lock
fcmovbe
data16
inc
sbb
cmp
das
adc
out
repz
mov
sbb
or
test
not
push
lret
mov
push
test
hlt
push
test
jb
jae
xor
pop
ret
mov
mov
mov
push
dec
mov
orb
xor
jge
sub
push
lock
jecxz
bnd
sub
int
dec
jbe
pop
enter
mov
push
cmp
add
fcoms
ret
fidivl
pop
arpl
in
xchg
xchg
das
push
push
in
xchg
es
pop
stc
sbb
add
jnp
in
push
sbb
inc
adc
push
sub
xor
add
fbstp
jmp
mov
sbbb
in
mov
sbb
mov
inc
inc
adc
xchg
iret
cmp
aas
cmp
add
jl
out
insb
aas
pop
inc
dec
cwtl
dec
dec
jns
mov
ljmp
out
sub
pop
dec
js
inc
jb
fnclex
or
mov
lods
dec
pusha
or
or
or
push
mov
mov
inc
and
push
inc
mov
adc
mov
xor
and
sbb
jne
or
repnz
scas
and
add
cmp
pusha
scas
sbb
test
inc
sbb
xorb
jne
sbb
add
stc
dec
mov
push
xor
push
clc
stc
adc
push
scas
aad
inc
lock
push
pop
lea
and
das
call
leave
hlt
mov
add
int3
and
push
fcoms
push
mov
loope
sub
adc
faddp
add
popa
cmp
jle
lret
sbb
and
mov
mov
adc
rorb
icebp
or
push
sbb
cmp
jne
rolb
and
mov
mov
add
xlat
mov
and
jbe
lds
movsl
aad
and
cld
sti
in
adc
call
pop
and
hlt
jmp
int
andl
ja
out
fcmovnbe
loopne
inc
xor
cmp
and
inc
pop
loopne
lgs
test
and
pop
pop
and
ret
rorl
test
add
cs
inc
popa
xchg
jb
jns
dec
ja
ret
sub
movsb
je
movl
test
jmp
mov
stos
add
arpl
imul
clc
lock
shlb
loop
pusha
lods
and
or
push
loope
jbe
xchg
add
orb
adc
pop
lea
pop
ret
mov
adc
add
lahf
push
dec
push
xor
aam
fistps
jb
sub
add
enter
add
jb
mov
pop
xchg
mov
add
ret
sub
pusha
lahf
or
or
shlb
push
or
mov
or
lock
mull
ja
mov
jmp
push
pop
push
push
inc
shr
rcll
addr16
fcmovnbe
ljmp
repz
dec
out
test
test
mul
pop
jb
cmp
sbb
push
jbe
dec
sub
sbb
adc
or
fiaddl
adc
cmp
iret
pop
ret
add
outsl
dec
xor
jno
adc
test
test
rcrb
imul
push
add
inc
sbb
testb
out
std
add
sub
out
xor
xchg
or
mov
test
inc
pusha
mov
pushf
sbb
jo
gs
push
cmp
or
cmpb
stos
scas
daa
enter
inc
adc
lret
sub
testb
inc
jo
inc
cld
inc
and
xlat
mov
mov
add
fsub
in
sbb
pop
xlat
inc
repz
add
sbb
xor
fs
rdmsr
push
push
sbb
test
sbb
dec
orb
jmp
dec
and
in
pop
insl
sbb
movnti
ja
and
add
or
in
das
movb
fists
cwtl
movsb
mov
sbb
adc
cmp
jo
add
cmp
loope
sub
inc
adc
pop
pop
jne
lock
lods
push
push
add
in
xor
jmp
popa
rcl
inc
cmp
mov
or
xchg
shll
nop
xor
pusha
shrb
hlt
fiaddl
push
pop
pop
mov
pop
dec
inc
or
loope
add
xchg
jmp
dec
rorb
or
or
pop
or
xchg
dec
jae
mov
nop
rorl
sub
push
inc
sbb
mov
loopne
pop
outsb
add
adc
push
call
lea
fmuls
and
xor
fsubs
mov
popf
mov
sbbb
mov
insl
add
cwtl
push
addr16
js
or
jne
popa
fcomp
adc
je
mov
rol
jne
add
pop
adcb
inc
adc
addr16
mov
mov
cmp
outsb
add
xor
leave
jge
dec
push
add
jbe
nop
xchg
adcb
mov
or
and
pop
jge
or
loope
mov
cmp
les
push
adc
add
sub
sbb
sbb
xchg
aam
fsubr
push
addb
jge
push
stos
subl
add
push
jne
js
in
aas
jmp
adc
outsl
push
test
fdivs
adc
test
ret
or
push
xchg
xchg
movsl
push
imul
fisubl
out
push
nop
aam
loopne
push
outsl
push
inc
int
cmp
fidivl
fcmovnbe
dec
xor
push
mov
movb
lock
inc
sub
xchg
out
out
sbbb
rorl
jecxz
fisubrs
sahf
dec
std
scas
cld
xor
cmp
inc
jmp
mov
in
testb
jne
imul
add
push
xorb
push
add
enter
mov
in
xor
cmp
jne
sbb
mov
xlat
sub
or
dec
lock
xor
xor
pop
icebp
xor
pop
sbb
cmpsb
pop
je
xor
jne
push
adc
and
or
incl
mov
dec
jo
stos
into
mov
pop
mov
adc
push
outsl
dec
cmp
push
cmp
jge
adc
int3
ja
testb
add
push
and
mov
xor
data16
scas
add
mov
sub
sub
out
sti
pop
stc
xor
pop
inc
rclb
hlt
aaa
or
and
shl
adc
sbb
sbb
pushf
or
insb
iret
dec
ret
popa
stos
jl
js
mov
into
pop
cmpsb
ljmp
xor
mov
xlat
sarl
inc
adc
mov
lock
add
ja
mov
sub
rcll
sbb
pcmpgtw
test
nop
insb
mov
lds
adc
loopne
sbb
sub
xchg
je
cs
orl
mov
arpl
mov
add
cmp
or
sub
data16
push
rclb
mov
stc
loopne
addr16
insl
rorl
sbb
mov
push
mov
jl
test
test
fs
push
add
add
inc
movsl
or
and
or
insl
mov
mov
shlb
xor
cli
adc
ja
inc
add
lea
lea
mov
mov
jnp
out
sahf
mov
loopne
cld
push
sbb
adc
inc
jmp
popl
lock
fiadds
xlat
nop
cmp
inc
mov
js
add
xor
pmuludq
addl
outsb
jl
repnz
adc
inc
mov
insl
div
xchg
dec
and
pushl
add
jno
push
pop
pop
cmp
xchg
loop
mov
cmp
push
xor
or
test
sbb
mov
leave
ds
cmp
decb
push
push
push
popa
inc
push
insb
dec
sbb
insb
enter
dec
or
fsubrs
cmp
js
rol
jl
pop
sbb
xor
pusha
mov
add
lea
hlt
cmp
cmp
pop
jmp
mov
and
lcall
ss
push
pop
dec
stos
inc
cmp
push
cmp
and
adc
pop
xchg
cmp
daa
mov
push
pop
out
aam
call
movl
shrb
rcrl
pop
addl
sub
insb
je
sub
dec
mov
push
mov
push
mov
push
imul
loopne
test
loopne
mov
jmp
sbb
lcall
jo
add
stos
jl
hlt
loopne
mov
or
sar
das
xor
loope
shlb
mov
orl
orb
push
adc
sub
leave
dec
lods
hlt
mov
and
inc
loopne
inc
jge
call
adc
loop
ss
xor
mov
cmpsb
pusha
mov
mov
daa
xchg
inc
mov
inc
sbb
cmp
out
adc
mov
cmpsb
push
adc
cwtl
adc
pop
mov
sub
xor
dec
mov
inc
jmp
rolb
pushl
leave
mov
sub
cwtl
cmpsb
sbbb
cs
pop
adc
cmp
adc
rcrl
jle
mov
inc
mov
push
push
nop
mov
pop
add
dec
mov
cwtl
or
test
mov
add
xchg
cmp
arpl
insb
mov
aas
insb
cwtl
push
lods
mov
cmp
std
andb
xchg
inc
jmp
push
mov
xchg
rclb
mov
ja
aad
roll
iret
and
or
pop
dec
es
add
and
mov
push
cmp
or
hlt
add
mov
dec
sub
or
das
jl
incb
push
mov
movsb
andl
jmp
sbb
push
jo
jb
test
stos
popf
add
sub
ds
and
mov
push
pop
mov
das
aaa
push
lock
cmp
jle
sub
cmp
xor
sbb
adc
incb
jmp
dec
push
in
jbe
cmp
jno
add
cmp
mov
clc
aas
lock
inc
sbb
or
adc
sbb
mov
sub
ret
or
mov
pop
jge
mov
mov
xchg
outsb
divl
nop
add
jne
out
dec
jae
and
sbb
ret
fldenv
fs
mov
imul
aaa
mov
or
lahf
and
cwtl
js
mov
orl
mov
pop
dec
push
and
inc
ret
daa
pop
stc
sub
cmp
mov
popa
or
jbe
sub
mov
lock
mov
data16
add
test
nop
mov
add
clc
cmp
loope
inc
sbb
testl
or
mov
jecxz
fldl
pop
or
push
sbbl
dec
or
cmp
mov
pop
cwtl
inc
repnz
fdiv
lea
mov
xor
cmp
or
jecxz
clc
call
inc
jmp
cmp
out
xor
arpl
scas
dec
mov
dec
push
hlt
dec
adc
mov
jne
push
xchg
sbb
add
adc
rcr
lods
rol
cs
jge
add
xor
aam
mov
sub
cmp
xlat
test
cmp
mov
mov
sarl
add
adc
jge
jle
fsubr
in
mov
xor
jne
and
ficoml
int
mov
add
cmp
call
inc
jge
add
mov
sbbl
sbb
mov
jb
or
bound
jge
movsl
add
push
pop
mov
add
arpl
ror
or
jne
mov
push
shll
roll
or
xor
jmp
nop
inc
clc
xlat
jae
mov
std
mov
sbb
push
or
mov
or
mov
xchg
adc
scas
pop
inc
testl
test
int
push
cs
jmp
fsubrl
or
jne
inc
or
cmp
xchg
pop
adc
cwtl
mov
arpl
and
nop
jb
fwait
add
test
push
pushf
fwait
insl
filds
jo
lea
lcall
add
adc
nop
clc
popa
cld
sub
add
bnd
add
push
mov
shlb
and
incl
cmpl
insl
mov
push
xor
ss
sbb
sti
jg
add
add
rolb
loop
xor
ret
xchg
mov
mov
gs
call
lock
mov
dec
push
aas
or
push
jmp
pop
shll
or
test
das
adc
inc
mov
add
into
negb
xchg
jl
idiv
das
push
shrl
shl
shr
or
mov
sahf
dec
mov
lock
jne
outsb
mov
inc
shll
aam
sub
push
aam
loop
cmp
or
push
add
lock
out
adc
rcr
fiaddl
mov
sbb
nop
ljmp
jmp
out
jmp
or
lods
inc
sub
mov
xorl
sbb
mov
jl
fiadds
int3
jmp
xchg
or
xchg
mov
lea
mov
loop
lret
into
jmp
lods
out
xchg
insl
jl
ror
and
mov
mov
mov
inc
sbb
cmpsl
mov
xorb
lret
das
cmp
xchg
inc
test
sbb
sarb
add
adc
les
lcall
mov
inc
mov
inc
mov
pop
xchg
add
mov
push
inc
add
sarl
js
les
cmp
test
mov
cld
and
call
jle
pusha
push
mov
or
orb
mov
in
adc
sbb
mov
xor
push
sub
push
jle
pusha
stos
add
addr16
int3
sbb
addr16
mov
loopne
daa
pop
cmp
inc
cmpsl
or
push
add
jo
pop
add
xor
xor
mov
pop
in
rorl
mov
jbe
paddd
dec
adc
test
rolb
mov
and
jb
dec
mov
popa
in
ret
rolb
or
rcl
repz
cmpsb
or
push
or
push
outsb
cmp
divb
es
cld
lods
popa
dec
mov
mov
mov
pusha
xchg
incb
pop
pop
lea
or
mov
insb
sbb
xchg
call
jle
popf
call
pop
mov
add
in
mov
inc
mov
mov
xor
mov
psubsb
sbb
mov
jmp
sar
or
inc
push
mov
mov
pusha
stos
cmp
iret
jmp
sbb
faddl
dec
cs
xor
mov
dec
push
jg
pop
sbb
adc
mov
loope
mov
add
and
push
lock
int
dec
xor
push
adcl
incb
imulb
loopne
sbb
scas
push
xchg
loopne
gs
ljmp
xor
dec
pop
les
add
inc
dec
pop
push
add
in
loopne
bndldx
or
or
jnp
xabort
enter
cmp
xchg
cmp
inc
loope
push
lea
dec
daa
iret
add
leave
sar
mov
add
lea
or
testb
sbbb
and
adc
outsb
insb
xor
mov
xchg
xorps
cltd
idiv
xor
sbb
cltd
lods
add
pop
ret
push
dec
popa
es
loopne
mov
pop
and
push
inc
pushl
notb
dec
mov
js
mov
lahf
pusha
cmp
or
xor
adc
ds
xor
and
ret
push
push
sub
roll
xchg
push
inc
mov
inc
lods
addr16
pop
sar
mov
fsubl
xchg
lock
add
rcll
push
hlt
mov
and
dec
cmc
andl
outsb
jmp
or
shll
test
mov
lret
add
mov
loopne
insl
cmp
fsubs
in
movsb
int3
mov
popa
xchg
xchg
lock
inc
call
jmp
ret
mov
outsb
mov
inc
xlat
test
dec
hlt
rcrl
lea
lods
inc
cmp
fwait
jnp
xor
pusha
add
push
inc
inc
add
sbb
lea
je
xorb
jns
orl
lods
inc
xchg
scas
mov
and
aam
push
dec
mov
incl
cmpsb
int
push
jnp
imul
push
or
pop
daa
cmp
mov
aas
sbb
push
cmp
test
jne
movntps
rol
xchg
lea
sub
imul
push
jmp
cmovb
sub
xor
jae
pusha
dec
iret
test
stos
or
inc
out
push
mov
and
sbb
sbb
push
push
fisttps
cmp
mov
add
mov
mov
inc
mov
sbb
inc
dec
xor
pop
subb
addr16
pop
ss
mov
and
mov
sbb
sbb
pop
ret
xchg
cmp
add
ret
inc
inc
mov
cli
or
xorps
sub
movb
mov
push
addl
adc
aad
gs
xchg
aaa
inc
icebp
and
lea
fnstenv
push
ds
add
rcl
les
daa
ret
sub
sub
insb
pushl
push
int
shlb
jbe
fs
pop
clc
dec
sbb
jns
adc
fiadds
into
insl
push
jle
jg
sbb
mov
pop
cmp
or
push
sub
sbb
or
and
cmp
popa
add
nop
or
daa
jo
push
andl
adc
cmp
push
or
add
sarb
shlb
push
lock
push
or
push
and
jmp
lods
test
inc
dec
jae
es
es
test
js
sbb
stos
mov
xchg
test
mov
push
jo
inc
dec
js
lret
jmp
inc
mov
pop
mov
adc
call
xchg
aas
push
jae
jo
jae
adc
les
xchg
add
jmp
ja
lcall
je
das
and
pop
cmp
xor
cmp
mov
adc
cmpb
xchg
int3
test
lret
and
sbb
aam
and
sub
xchg
cmp
mov
add
jne
add
movsb
mov
loop
xchg
stos
lock
pop
test
icebp
and
mov
imul
xchg
xchg
push
and
or
xor
scas
js
xor
popaw
inc
ss
xor
xchg
adc
lods
xchg
mov
push
xchg
cmp
inc
and
fisubs
push
push
jns
or
popa
rorl
adc
pop
and
shlb
push
push
xchg
mov
sti
and
pop
cmc
pop
bound
decl
rolb
push
and
cmp
push
mov
or
pop
xchg
xor
xor
inc
adc
orb
loop
mov
enter
jmp
xor
lock
test
cli
inc
cwtl
adc
cmp
movsb
pop
out
add
push
jmp
test
push
pop
imul
jecxz
enter
jl
jmp
and
and
or
in
jmp
scas
popa
push
ja
outsl
sub
push
xchg
je
ljmp
or
inc
jl
ljmp
jb
test
inc
jl
enter
inc
lcall
adc
pop
adc
and
adc
push
inc
gs
test
icebp
mov
sbb
pop
add
dec
lret
inc
test
lret
xor
or
mov
and
add
js
xor
mov
pushf
lods
dec
pop
pop
pop
xchg
jg
les
cmp
and
pop
add
push
jno
dec
sbbb
xchg
data16
lods
inc
dec
dec
mov
or
sbb
inc
adc
add
shll
and
jge
push
stos
dec
jl
jmp
rol
xor
dec
pop
shl
mov
dec
mov
mov
inc
enter
mov
scas
push
xchg
mov
fimuls
jl
sbb
andl
enter
jle
shrb
in
push
mov
arpl
cmpl
lea
rcll
sub
or
mov
pop
cwtl
push
jne
push
pop
xchg
bound
pushl
pop
movl
mov
add
rcl
daa
adc
xchg
mov
mov
insl
push
std
jne
loope
fcmovbe
push
push
jnp
loope
push
pop
jne
pop
push
pcmpeqw
pop
or
inc
imul
jge
push
rolb
xchg
mov
lea
jo
and
ficoms
std
dec
hlt
xor
push
lcall
cwtl
clc
rorl
fistpl
pushf
or
xor
or
push
push
icebp
imul
mov
test
outsb
scas
mov
in
imul
dec
or
lahf
popa
fcoml
cmp
pushl
imul
mov
imul
or
adc
add
and
fistpll
or
jne
jge
lock
pminsw
xor
sarl
mov
mov
dec
imul
mov
jmp
nop
mov
xor
mov
dec
je
jae
out
popf
sti
jmp
mov
push
mov
adc
jo
mov
inc
or
jnp
fmull
sbb
pop
icebp
adc
and
or
cwtl
ret
mov
mov
fsubl
dec
pusha
sbb
mov
inc
pusha
jne,pn
sbb
inc
mov
sub
loopne
adc
mov
sbb
or
mov
adc
lds
lahf
push
icebp
push
insb
call
add
es
cmp
jmp
cwtl
les
pop
adc
inc
lock
sub
add
push
adc
fs
bound
orl
test
jg
mov
inc
jp
inc
arpl
mov
cmpl
and
mov
sbb
mov
add
adc
ja
bound
inc
loop
jno
pop
add
and
sbb
mov
jb
arpl
flds
and
add
int3
lahf
push
push
inc
xorb
out
or
and
or
add
pop
adc
add
andl
daa
push
xor
add
out
and
insb
jo
add
add
cmp
pop
push
pusha
insb
loop
fists
ss
xor
cwtl
cmp
mov
ret
and
jg
mov
add
call
int3
ret
or
xchg
add
fwait
dec
and
or
ds
rcrb
mov
movsb
xor
popf
cmp
mov
and
pop
sub
cmpsl
out
mov
adc
dec
cmp
int3
in
outsb
add
cmp
sub
inc
call
push
inc
cmp
sub
sbb
push
add
cmp
mov
pop
cld
imulb
mov
insb
xor
and
pop
cmp
adc
add
xchg
mov
ja
mov
xor
mov
cmp
lahf
daa
sti
sbb
mov
add
test
jle
or
and
dec
je
jne
sbb
outsl
push
loop
stos
or
out
rorl
pusha
jns
pop
or
je
movl
cld
mov
pop
add
jae
mov
adc
xchg
ljmp
xor
arpl
cltd
pop
push
add
cmp
xchg
into
sbbl
test
in
adc
loop
add
jg
cmp
decl
sub
jg
xor
loope
mov
movsb
jno
cmp
push
in
push
ds
dec
mov
pop
sbb
inc
mov
imul
aam
in
rorl
stos
and
sub
xor
jecxz
xor
mov
mov
rorb
iret
push
or
adc
ss
jb
sbb
sub
jb
jb
xor
cmp
data16
cmp
inc
and
in
in
inc
cmovs
mov
add
cmp
fs
cmp
je
jl
mov
or
sbb
mov
and
nop
xchg
xor
and
cwtl
pushf
mov
movsb
test
fs
dec
es
xchg
dec
xor
cltd
fs
imul
call
cltd
aam
hlt
and
cltd
fs
cld
add
insl
and
leave
add
add
xor
cltd
adc
fs
sbb
and
cltd
fs
dec
sub
xor
xchg
dec
cmp
cmp
dec
dec
mov
and
dec
push
push
pop
test
sbb
insb
sbb
rolb
pop
movsb
cltd
nop
ss
test
mov
imul
les
fbstp
and
adc
xchg
or
movsb
cltd
nop
adc
nop
adc
lcall
pushf
cltd
nop
inc
and
movsb
movsb
cmp
cmp
mov
imul
mov
inc
dec
int3
push
cmp
dec
enter
pop
movsb
or
mov
aam
or
ret
decl
xchg
and
movsb
icebp
movsb
or
or
pushl
cmp
repz
xor
xchg
dec
xor
push
in
imul
or
aas
andl
pop
js
lock
xchg
je
push
fisubs
shld
lret
and
in
or
add
or
sbb
out
push
adc
fdivp
and
fldln2
shll
dec
xor
adc
or
in
inc
dec
push
shr
add
jmp
xor
add
jge
imul
ret
js
in
cmpb
test
adc
mov
add
sbb
xor
imulb
sar
shll
and
inc
addl
loop
mov
es
pop
aad
clc
incb
lods
ret
ficoms
sbb
lock
and
mov
dec
fisubl
and
jecxz
sbb
out
jmp
xchg
jmp
cld
imul
loope
mov
xor
sub
aaa
jge
and
shl
mov
add
fstps
aas
pusha
mov
pusha
loope
pop
sub
xchg
add
movsb
xor
inc
jecxz
dec
sub
adc
fnstsw
pusha
push
sbb
pop
cmp
push
movsl
je
or
mov
inc
shl
inc
testb
xchg
cmpsl
repnz
in
adc
sti
add
movsl
out
cmp
out
test
inc
inc
daa
ret
sub
mov
dec
cs
jo
xchg
push
or
sub
push
and
sbbl
stos
int3
pop
movsl
pop
out
testl
rorb
adc
icebp
lcall
jmp
push
and
or
push
or
arpl
aaa
inc
flds
fstps
jmp
fisttpll
push
xchg
adc
fistpl
mov
loope
push
hlt
adc
fildl
movsl
jbe
inc
push
pop
sub
jl
push
divl
or
add
adc
xor
hlt
sahf
or
or
lock
inc
call
pop
dec
push
aaa
sbb
ret
and
cmp
add
mov
add
jmp
mov
pop
sub
jmp
sub
nop
xchg
add
push
or
push
fldcw
movsb
jns
add
adc
add
jge
xor
scas
test
cmpsb
sbb
mov
mov
je
xor
mov
add
add
and
sub
mov
fstpl
or
test
mov
jge
ffree
repz
xor
push
mov
add
rcll
xorl
enter
cld
repnz
xchg
mov
cli
shrl
scas
lock
dec
cmp
orl
rcrl
nop
loopne
or
push
push
pop
jmp
pop
add
pop
cs
icebp
jno
lcall
cmpsb
mov
faddl
ret
push
push
pop
cwtl
add
subb
push
shr
jle
push
add
jns
fistps
shlw
sbb
cmpsb
pop
adc
jg
add
add
and
and
mov
add
shrb
fcompl
ret
popa
inc
add
fs
adc
fadd
sbb
imul
and
sbb
hlt
adcl
and
je
repnz
sub
add
scas
add
and
dec
and
cmpsl
packuswb
out
push
pop
shlb
pop
das
in
push
push
fsubrp
fwait
jno
bound
xlat
in
leave
dec
inc
and
push
fcomps
lock
add
or
push
test
enter
dec
cwtl
pop
add
or
sbb
out
frstor
lret
jo
sub
pop
lods
lea
in
popa
xor
xor
lock
mov
rolb
add
test
sub
pushl
roll
mov
cwtl
mov
int
xor
jbe
push
das
adc
addr16
inc
xchg
test
mov
adc
mov
or
jl
push
jnp
or
andl
jne
je
insl
rorb
lret
adc
adcb
cld
pop
test
dec
mov
sub
mov
add
sarl
shufps
push
xchg
rorb
jge
in
jecxz
clc
lock
or
sbb
fstpl
add
push
mov
and
pop
add
mov
jmp
dec
xor
mov
sbb
test
and
sub
or
dec
out
fld
in
push
rcl
ljmp
or
lods
mov
leave
test
xchg
orl
adc
cmpsl
mov
and
shll
push
or
mov
and
decb
push
or
cmpl
mov
push
addr16
mov
pop
je
aad
xor
mulb
pop
mov
sbb
mov
push
push
hlt
mov
inc
test
pop
dec
ljmp
adc
fnstsw
lgs
or
mov
loop
scas
sub
mov
fnstenv
add
xor
fdivrl
mov
xchg
push
push
mov
les
sub
lock
fsubs
mov
mov
inc
adc
dec
lock
pop
repnz
sbb
lea
movsb
fldpi
xor
mov
or
sbb
adc
add
sbb
push
lret
dec
sbb
xorb
push
cmp
xsaveopt
lahf
insl
test
mov
mov
cmp
or
andl
pop
popa
cmpsl
xchg
out
jmp
and
loopne,pn
insl
mov
push
jg
xchg
int3
or
adc
es
dec
int
jle
jg
daa
inc
jb
push
pop
inc
js
test
lock
mov
nop
es
mov
inc
mov
addr16
sbb
sahf
adc
push
ja
inc
mov
test
pop
sbbb
and
push
push
pushf
add
mov
inc
inc
pop
mov
pop
mov
test
mov
jo
push
xor
imul
lods
push
nop
lret
je
imul
cltd
xor
pop
add
dec
push
sti
jbe
loopne
rorl
mov
dec
test
test
adc
idiv
or
or
dec
rolb
cli
push
or
add
jo
push
mov
pop
std
cmp
dec
les
jl
dec
or
imul
jmp
add
aas
pop
enter
push
flds
ret
lret
loopne
test
jbe
jl
pop
or
pop
mov
aam
lock
stos
mov
mov
pop
push
mov
sub
add
cmp
insl
lods
cmpsb
or
add
sbb
adc
scas
ret
dec
or
inc
lea
sbb
push
mov
lret
movsb
mov
rolb
fbstp
not
test
add
cld
inc
or
repz
aaa
idiv
xchg
push
pop
pop
and
mov
out
mov
xchg
mov
loopne
adc
iret
jbe,pt
dec
sbb
fisubs
cmp
cli
xor
cmp
mov
clc
sbb
out
cmp
test
adcb
int3
mov
inc
jae
pop
shlb
xor
jns
add
or
sarb
inc
clc
sub
mov
mov
pop
mov
or
lock
inc
mov
xchg
mov
or
scas
andl
xor
lods
pop
je
aam
dec
xor
mov
pop
rorl
cmp
or
loopne
mov
shl
sub
xorb
jl
lds
xor
adc
dec
push
ds
push
or
js
aam
out
mov
jl
fwait
push
cwtl
adc
dec
loop
sbb
into
pop
xchg
push
sbb
mov
fs
loop
dec
mov
xor
dec
sub
xchg
push
push
shl
enter
inc
lods
sbb
mov
or
test
jae
add
out
lock
into
loopne
rcrl
dec
xor
push
cli
inc
jge
rcrb
cmp
adc
pop
pop
push
push
jb
push
lcall
add
xor
cmp
and
ret
ss
hlt
push
aas
movb
rorb
lcall
stos
and
or
cmp
xor
add
jo
xorl
sub
arpl
rolb
dec
add
jne
daa
andl
sbb
out
inc
push
jl
mov
iret
and
mov
xor
out
and
mov
sbb
shll
mov
xchg
and
enter
pop
mov
inc
or
loopne
mov
enter
roll
loope
dec
push
lret
jne
and
and
mov
cs
mov
and
push
sub
enter
push
push
add
les
or
or
leave
add
inc
push
pop
xlat
dec
jecxz
adc
jne
sub
mov
or
inc
sbbl
test
pop
jne
cmp
mov
pusha
jb
lcall
push
inc
mov
add
fimull
mov
rorl
aam
pop
dec
fidivrl
insb
xchg
out
xchg
add
jo
push
sub
jp
xchg
cmp
sti
mov
cs
or
ss
cmp
je
or
sub
xor
mov
dec
add
mov
jg
mov
push
mov
cmp
pop
jne
dec
mov
inc
inc
mov
mov
mov
lea
fistpll
cmp
adc
and
xchg
sub
call
into
sti
xchg
or
add
adc
push
jbe
dec
or
add
xchg
xchg
das
test
adc
pop
fcmovu
jge
add
adc
jno
cs
in
test
jle
out
fwait
imul
subl
and
sub
insl
xchg
cs
jle
test
sub
mov
ret
push
pop
sbb
xor
adc
or
fcoml
cmp
js
add
mov
popf
loopne
fs
inc
cmpl
mov
test
sub
push
dec
add
adc
js
cld
mov
pop
push
mov
cli
sbb
sbb
mov
faddl
lock
xor
pop
fildll
jmp
sub
add
jo
aad
pop
jmp
addb
push
rorb
inc
jg
aam
fidivl
push
neg
movb
mov
add
fs
cltd
push
dec
push
mov
pop
sub
add
add
add
push
mov
enter
shlb
push
daa
test
jbe
jns
pusha
je
push
add
es
mov
push
imul
fldenv
inc
mov
and
jmp
outsl
cmpb
jmp
push
or
sub
fsubrl
adc
movsb
push
push
adc
rorb
sub
loop
insb
sub
lret
mov
add
addr16
gs
push
lock
push
jmp
add
mov
push
out
pop
xor
and
push
fadd
push
fidivs
pusha
xor
add
jl
cmp
jge
js
push
fcoml
and
call
mov
mov
mov
fsubs
imul
add
push
mov
push
sahf
pushf
adc
je
and
cld
push
and
or
jne
xor
stos
lods
xor
incb
dec
mov
fdivl
dec
jecxz
push
cmp
dec
mov
test
cmc
neg
aaa
orl
add
sub
dec
sbb
test
enter
js
or
sbb
fdivrp
ret
add
fcoml
dec
sub
leave
and
andb
insb
movb
iret
and
mov
mov
inc
popf
neg
sbb
mov
inc
into
and
adc
jg
outsl
mov
nop
ret
jb
shll
add
pop
es
pusha
xchg
icebp
add
sub
andb
jmp
inc
xor
mov
jb
add
sbb
aam
ficomps
imul
xor
shlb
ja
mov
push
hlt
nop
or
add
sub
adc
loopne
mov
call
mov
push
pushf
pop
ret
inc
cmp
or
push
inc
xor
cmp
sub
cld
add
lods
clc
dec
or
shrd
sbb
jge
xchg
sbb
jge
inc
xlat
inc
sti
sbb
clc
cwtl
xor
fists
jg
in
inc
and
xor
out
and
or
cltd
cld
sub
jo
lea
pushf
or
rorl
inc
call
insb
xor
imul
jl
ret
lock
or
jo
ljmp
and
fiaddl
sbb
js
jg
jb
out
xchg
xor
jmp
adc
cwtl
shl
fimull
jl
loope
inc
adc
int3
hlt
mov
pop
push
mov
push
lock
or
add
imul
dec
dec
inc
dec
pop
or
sbb
imul
lock
cmp
sarl
inc
and
in
in
ja
enter
adc
ss
adc
or
jbe
iret
and
movsl
mov
jo
sbb
movw
sub
push
push
jle
in
in
jne
rclb
mov
jmp
add
inc
pop
mov
or
and
jns
neg
jmp
sahf
pop
and
or
aaa
push
lods
outsl
lea
pop
pop
xor
add
add
push
xchg
pop
inc
shrl
push
and
mov
or
add
jl
or
add
shll
xor
cs
add
inc
and
xor
xor
adc
pop
push
divb
push
cmp
sarb
nop
cmp
imul
stc
test
xor
enter
push
push
mov
fstps
push
out
pop
cwtl
push
call
outsl
les
adc
sub
pop
inc
test
lock
mov
mov
push
add
adc
popf
jmp
xor
and
add
sbb
clc
gs
jl
mov
pop
data16
cmpsl
fcoml
inc
popa
je
in
pop
sbb
inc
je
dec
aaa
cmpsl
jmp
xor
add
pop
xor
pop
mov
mov
movsb
xor
inc
cmp
mov
or
mov
popa
pop
orl
loopne
mov
add
aam
and
and
arpl
or
push
je
mov
mov
inc
pop
push
ffree
test
and
or
daa
push
or
rcl
ss
cmp
cmp
in
cmp
cmpxchg
jmp
sarl
push
int
inc
fistl
jbe
mov
jne
add
test
jne
cmp
testl
inc
mov
hlt
ja
sub
push
addl
sub
xlat
sub
inc
aam
int
sub
mov
cmc
cmp
mov
fwait
push
dec
mov
push
scas
test
inc
add
inc
sbb
aam
aam
xor
pop
sub
push
and
leave
push
inc
cltd
mov
and
xor
les
adc
sub
push
dec
xchg
xor
cmc
adcl
mov
or
mov
cmp
push
cmp
nop
push
add
mov
aam
and
mov
pop
inc
mov
adc
les
adc
lods
sub
cmpl
inc
clc
test
cmp
or
aam
mov
push
mov
xlat
xlat
aad
mov
push
mov
pop
pop
pop
pop
pop
cld
sarb
and
cmp
jae
xchg
dec
mov
nop
add
sbb
and
in
scas
lcall
lret
je
dec
je
dec
add
sti
push
push
jmp
or
jmp
add
jnp
inc
cmp
or
lcall
adc
rcr
lcall
inc
icebp
pop
ret
roll
cltd
add
add
or
and
je
or
js
rcrb
adc
sbb
das
add
xor
gs
sbb
cmp
adc
aas
cmp
sbb
dec
mov
mov
or
push
sub
lahf
shrb
sbb
or
or
nop
pop
pop
cwtl
or
dec
xchg
lods
lods
jnp
inc
adc
adc
je
fiaddl
sub
nop
into
sub
xor
mov
repz
xchg
scas
jl
jecxz
xchg
jno
or
xchg
push
mov
inc
enter
dec
loope
cltd
popa
or
mov
mov
aas
xchg
add
ret
push
push
call
adc
call
dec
orb
lcall
sbb
bnd
shr
add
or
mov
sub
add
shr
or
mov
les
adc
test
and
add
mov
insl
xor
lock
xchg
mov
mov
add
pop
pop
or
jbe
jle
ja
add
jl
in
sbb
cmp
nop
adc
or
dec
pop
pop
dec
test
je
sti
addl
or
mov
and
inc
sbb
test
bound
xor
lret
xchg
lret
clc
and
xchg
lea
xor
pop
insb
shll
cli
push
push
inc
pop
or
push
xchg
adc
adc
das
or
fcoml
fistps
icebp
xchg
aam
cmpsb
and
xchg
sbb
ret
mov
es
or
lock
icebp
sbb
insl
sub
dec
mov
adc
loope
icebp
insl
flds
imul
mov
sbb
lea
push
roll
incl
cmpsb
or
xchg
or
cmp
mov
shll
fnstenv
pop
data16
popf
push
jbe
les
xchg
dec
dec
mov
pop
xorb
jecxz
push
pop
add
lret
je
repnz
and
xor
sbb
push
inc
call
pop
loope
pop
inc
jb
jecxz
ljmp
repnz
xor
add
ret
enter
cmc
addl
pop
or
sub
testb
dec
jo
mov
and
cltd
sub
sub
or
add
mov
stos
xor
or
insl
test
lods
mov
push
and
or
and
dec
xor
stos
sbb
enter
add
add
rcrl
push
sub
and
inc
sbb
fmul
leave
rclb
add
aad
inc
add
sub
inc
inc
push
xor
push
imul
and
xor
mov
push
test
mov
filds
ret
push
aas
mov
andb
andb
in
adc
cmp
std
sbb
add
pop
je
add
sbb
mov
sub
bound
mov
xor
fsubs
pop
mov
push
mov
sbb
rcll
sub
push
add
fldl
cmp
and
pusha
add
pop
mov
sub
call
in
push
movsb
ss
xor
enter
dec
sub
lea
push
add
or
cmp
and
pusha
push
add
imul
pusha
jbe
mov
cmp
jle
inc
and
std
rclb
pop
scas
and
popf
cmpsb
sbb
mov
dec
insb
xor
outsl
mov
fcoml
mov
jl
xor
fidivl
push
incl
adc
or
sbb
push
cmovnp
dec
jns
jns
jp
push
add
mov
imul
cs
orb
and
mov
cld
cmpsb
push
add
sub
pop
fcomps
and
sbb
jne
cmp
jne
lret
cmp
test
dec
add
lahf
or
loopne
or
or
or
mov
ljmp
out
roll
leave
add
or
je
mov
iret
sbb
cltd
push
adc
cmc
dec
push
xor
jmp
adc
mov
jno
bound
adc
jne
jbe
add
jmp
pop
popa
shlb
and
lret
pop
add
sbb
hlt
and
adc
loopne
pop
mov
addl
adc
rclb
pop
jecxz
add
jge
inc
inc
push
neg
idivl
out
sahf
loopne
sbb
sub
inc
adc
dec
repnz
popa
adc
data16
xorl
push
push
add
xlat
push
inc
and
fnstenv
fcomi
sbb
adc
aad
inc
adc
sbb
mov
add
and
dec
jns
mov
dec
jne
pop
pop
pop
aam
sub
jae
or
jae
or
pop
adc
ret
loope
shr
sbb
dec
fsubrs
adc
push
je
push
push
idiv
and
maskmovq
cld
lock
push
cmp
je
cmpsb
shlb
add
add
mov
sbb
dec
or
into
add
lods
pop
lods
jae
or
adc
nop
ds
incb
or
aad
call
into
jbe
hlt
add
hlt
adc
sbb
pop
aad
and
push
adcb
adcb
inc
xchg
outsb
jo
or
adc
sbb
inc
mov
inc
add
test
jo
xchg
gs
mov
or
scas
loopne
xor
ljmp
cld
inc
ss
test
mov
or
pop
or
fstl
out
cld
mov
rcl
and
leave
jne
pop
inc
cmp
jmp
ss
subb
add
push
add
mov
and
mov
ret
cmp
ret
inc
mov
push
lahf
push
mov
adc
xchg
mov
das
rclb
pop
mov
subb
es
mov
je
adc
jns
das
jl
out
push
cmp
ja
add
cmp
adc
cmp
jne
je
inc
xchg
shll
leave
adc
mov
sbb
add
jl
pop
pop
push
adc
je
adc
push
fmuls
adc
add
dec
ljmp
rclb
mov
xor
or
test
dec
push
sti
aas
cs
push
movb
call
add
and
sbb
mov
cmp
test
add
mov
cmpsb
and
ret
pusha
movw
xor
jb
add
fstl
xchg
xor
stos
xchg
cmp
pop
mov
cmp
mov
inc
loopne
sbb
test
mov
or
sub
cmp
pop
out
add
add
into
push
sarb
add
sbb
cmp
xorl
ja
dec
js
imul
cli
and
call
inc
imul
inc
dec
lea
sar
dec
popf
lds
xchg
data16
fildl
es
ljmp
imul
sahf
inc
ret
inc
call
js
xorl
push
push
dec
test
pop
and
dec
cwtl
mov
xor
and
mov
and
or
dec
movb
repnz
sbbb
adc
mov
mov
sub
and
and
lea
inc
xor
andl
ss
cmpb
pop
cmp
mov
mov
xlat
loopne
out
and
mov
inc
call
in
ljmp
push
inc
mov
cmp
cld
push
mov
mov
jne
lea
adc
lods
xor
push
sub
sahf
inc
mov
push
lea
xor
nop
pushf
or
outsb
stos
fcoml
imul
add
movsb
pop
sahf
push
pop
xor
cmp
lods
shll
inc
insl
pusha
shrw
cmpsl
insb
xchg
mov
mov
pop
push
lcall
and
clc
cmpsl
jne
rorb
cmp
lock
xor
fbld
mov
gs
add
shr
or
and
rorb
sbb
jne
push
push
lret
movl
ret
ds
mov
or
cwtl
shrl
loope
shr
or
mov
jp
or
dec
mov
jmp
push
jnp
hlt
mov
pop
lock
dec
and
test
testb
sahf
cmpsl
mov
dec
cli
cli
inc
cli
div
pop
cmp
and
cmp
subl
and
jnp
jnp
xchg
test
sbb
sahf
les
cli
adc
in
xor
lahf
call
ficoml
pushf
inc
sub
jmp
sbb
enter
push
aad
jg
or
pop
lcall
inc
in
int
mov
push
pushw
dec
sbb
out
rclb
inc
repnz
pushw
sbb
imul
out
jge
cmp
push
out
enter
mov
jb
inc
ljmp
in
sub
inc
daa
adc
jne
fcompl
sub
or
push
roll
jne
add
sub
and
dec
jbe
dec
sub
jmp
popa
mov
adc
shlb
dec
push
adc
cmpsb
xor
add
adc
mov
sahf
lret
fcmovu
mov
mov
insl
test
jmp
mov
jp
mov
add
idiv
adc
xchg
adc
pop
div
jg
or
adc
das
test
jge
or
sbb
das
nop
or
jb
or
and
movsb
jmp
add
in
adcb
enter
loopne
sbb
aaa
xchg
rorb
lret
mov
pusha
add
jbe
stos
cwtl
sbb
sub
inc
add
mov
sbb
aas
in
add
inc
mov
dec
xchg
push
pop
outsb
call
xchg
sub
mov
sbb
lret
mov
shl
shrb
cli
pop
inc
mov
and
fs
lds
neg
and
mov
insl
call
fucomp
imul
call
dec
jbe
jno
fsubs
pop
add
and
mov
push
pop
pop
rol
in
fisubs
out
pop
sti
jmp
add
jne
mov
les
xchg
fcoms
notl
push
adc
fldenv
ljmp
pop
add
adc
sahf
mov
mov
jae
add
sub
adc
adc
test
call
shl
xor
add
add
into
or
mov
inc
xor
inc
and
dec
jg
fistl
inc
sub
jge
sub
cmpb
sub
movb
dec
cmp
or
jle
add
dec
add
add
fadds
mov
call
adc
add
sub
out
jb
int
adc
cmp
in
mov
mov
lret
or
mov
cwtl
push
mov
mov
jo
ret
adc
add
xchg
cmpsb
rorb
add
add
add
popf
ret
test
mov
mov
stc
lret
mull
push
or
push
or
push
push
sbb
sarl
sub
or
push
rolb
pop
or
or
jne
or
xor
ficoms
pop
scas
je,pt
push
ret
cmp
ret
mov
lods
or
mov
or
fsubrs
xchg
xchg
xchg
adc
or
jae
pop
sbb
pop
mov
mov
inc
and
cmp
xor
into
add
inc
sub
and
cli
sub
and
pop
pop
add
insb
orb
xor
prefetchw
inc
adc
cmpl
shlb
or
lret
test
add
add
xchg
rcrl
lret
testb
mov
push
je
lret
pop
or
or
push
pop
cmp
ja
insl
add
adc
xchg
neg
jne
and
mov
jo
ds
dec
jge
aam
mov
out
and
push
or
ret
loop
lea
push
in
add
nop
adcb
clc
mov
test
xor
shll
or
push
testl
or
adc
sbb
fadds
pop
sbb
or
or
adc
gs
lock
cmp
pop
test
adc
xor
mov
add
add
mov
mov
mov
push
cmp
sub
and
sbb
inc
jg
daa
daa
iret
lret
into
into
into
mov
or
js
ja
sub
push
pop
nop
pop
js
xor
pop
mov
mov
or
jl
movsl
cmp
pop
stos
push
or
push
jae
or
inc
and
pop
lcall
add
leave
lahf
pop
mov
adc
add
ret
movsl
movsb
in
dec
loop
fwait
stos
pop
test
mov
lods
and
cltd
and
loopne
popf
ret
cwtl
sbb
lcall
sbb
mov
lods
mov
lret
jo
dec
pminsw
stos
cmpl
mov
out
pop
and
roll
add
adc
fstps
adc
xchg
mov
pop
ret
push
jp
or
rolb
clc
xchg
sbb
add
into
lret
mov
inc
xor
in
push
not
pop
and
sub
loopne
rolb
vmwrite
je
sahf
or
jo,pn
add
repz
add
insb
mov
xor
aas
sbb
cmp
or
sub
loope
jle
xchg
into
cmp
je
mov
push
or
or
or
cmp
jbe
sbbl
jmp
push
xor
movsl
pushf
xchg
loopne
lretw
pop
or
fisubrl
cmc
int
ds
rclb
push
inc
lahf
gs
and
lret
rclb
ret
mov
sub
sbb
adcl
adcl
cs
mov
scas
mov
dec
adc
addb
sub
pop
nop
imul
xor
and
test
xor
mov
pop
and
aam
imul
push
imul
imul
mov
mov
pop
adc
mov
xchg
out
xor
shrl
mov
xor
test
inc
ret
cmp
aas
jne
cmp
push
cs
push
cmp
sbb
push
mov
mov
xlat
or
ret
add
cmp
add
inc
popa
add
flds
or
pop
add
dec
cmp
xchg
pop
jmp
mov
push
into
sahf
mov
dec
cmp
mov
inc
ret
bound
loope
lds
stos
sub
and
jl
testl
sub
lahf
pop
mov
push
loope
popa
and
aaa
jne
mov
pop
pop
mov
orl
hlt
call
ja
ss
or
ret
push
push
add
pushf
int
push
pop
xor
mov
insb
cmp
pop
xchg
sub
pop
ds
sub
mov
add
inc
jnp
mov
mov
and
sbb
lds
dec
in
aad
inc
adc
cli
pop
xchg
addl
fldcw
je
mov
jg
xor
and
sti
fildl
push
cmp
push
mov
adc
loopne
pop
stos
mov
stos
call
xor
andb
test
jbe
cmp
js
pop
pop
xchg
pop
fldt
add
pop
nop
add
clc
adc
pop
je
mov
push
jmp
pop
cmpb
cmp
mov
out
pop
xor
jae
gs
push
push
sbb
cmpsl
nop
or
mov
out
movsb
push
pop
pop
dec
sbb
inc
insl
xor
push
test
rorb
imul
and
inc
sarl
movb
daa
arpl
adc
inc
ss
sbb
sub
sub
decl
outsb
cmp
scas
xor
inc
mov
pop
fcoms
mov
adc
push
adc
push
shrl
orb
pop
and
mov
aas
mov
fs
inc
add
and
pop
mov
nopl
cmpsb
add
push
or
cwtl
inc
jecxz
push
fcomps
cmp
push
push
mov
pushf
cmp
add
and
pop
test
pop
xor
push
sub
sbb
in
mov
cs
dec
rcll
push
and
pusha
imul
or
lea
push
ret
xchg
clc
add
xchg
movsl
shlb
enter
movsb
adc
xlat
sub
sbb
mov
cs
jl
nop
xchg
jmp
push
mov
icebp
pop
orb
pop
pop
daa
cltd
mov
push
add
sub
test
pop
adc
dec
push
sar
bound
push
sbb
mov
jne
pop
aas
mov
dec
repnz
pop
sub
adc
push
rcll
stos
inc
add
add
mov
cmpsl
aas
rcrb
mov
inc
fadd
dec
sahf
xor
in
and
shld
sub
inc
xor
mov
pop
hlt
add
es
mov
xchg
movsl
aas
add
stc
gs
mov
pushf
ret
jb
dec
jl
lcall
jl
or
jmp
cmp
push
sbb
cmpsl
pop
ss
add
or
ja
aad
insl
cld
mov
loopne
pop
pop
xchg
and
popa
sub
fsubs
test
sub
jno
xchg
dec
arpl
jno
pop
in
shrb
and
ret
add
xor
cmp
data16
nop
jne
adc
clc
scas
cld
adc
es
or
imul
inc
int
adc
xor
and
mov
pop
mov
xchg
xor
jns
adc
adc
add
xor
and
adc
pop
add
push
lods
and
xchg
mov
call
xor
push
movsl
add
lods
xchg
rolb
xor
clc
pop
ss
loope
inc
popf
sub
int3
shlb
hlt
movsb
incl
add
rol
push
sub
pop
sub
aam
add
mov
mov
shlb
dec
fisttps
xor
std
data16
xor
inc
and
inc
loopne
and
push
lret
mov
lods
jmp
or
ret
imul
inc
pop
mov
popa
test
std
popa
jbe
push
xchg
int3
bound
mov
adc
pop
fidivl
inc
les
in
jnp
mov
jmp
jb
js
daa
mov
inc
nop
dec
inc
imul
add
xchg
push
cs
jge
cmp
add
or
movsl
jge
adc
mov
xor
sbb
pop
or
dec
jbe
arpl
mov
jge
xchg
mov
xlat
cwtl
out
cld
sbb
daa
push
jmp
dec
cmp
xchg
or
repnz
neg
adc
cmp
adc
imull
cmpsb
lock
sub
inc
test
xor
jmp
inc
add
loope
popa
jmp
call
hlt
sub
hlt
fcoms
imul
mov
jl
dec
push
add
jl
repnz
test
cmp
mov
and
pop
add
dec
jb
lea
mov
sahf
orb
mov
rorl
push
mov
sub
push
xchg
mov
pop
repnz
add
or
test
or
pop
xor
aaa
sub
fcoml
inc
loopne
pop
cmp
cmp
ret
jns
mov
cltd
sbb
mov
mov
dec
cwtl
mov
rcrl
ret
mov
add
jg
cmpsb
test
jae
or
cltd
pop
lret
inc
cmp
push
sbb
mov
cmp
ja
or
push
add
cmp
rorl
mov
pop
pushl
mov
mov
sarl
sarb
and
jmp
lret
fsub
and
data16
rcrl
or
mov
ret
inc
cmp
std
sti
xor
inc
adc
and
and
inc
aas
inc
or
adc
mov
mov
data16
inc
dec
or
and
fwait
lret
and
or
jl
add
mov
test
cmp
dec
pop
ss
or
sub
mov
loop
jl
sub
or
add
add
add
push
or
mov
cmpb
xchg
jo
xor
and
sub
in
add
push
dec
sbb
and
sbb
jg
inc
fwait
push
push
push
add
mov
bound
or
in
inc
dec
or
pushl
hlt
addl
pop
jl
in
mov
es
stos
push
sub
adc
xchg
orb
popf
js
mov
inc
cwtl
loope
add
jo
adc
jns
in
cwtl
dec
xor
int3
sbb
and
clc
pop
and
add
sub
call
movsl
mov
mov
ret
fxch
in
jmp
aaa
adc
insl
gs
dec
fcoml
push
lods
icebp
andb
cli
fildll
cltd
in
adc
or
sbb
filds
jae
js
pop
adc
cmp
jae
mov
stos
sbb
mov
lret
cmp
jg
sbb
add
popa
sub
out
dec
in
clc
xchg
jg
adc
pop
add
xchg
cmpsl
xor
cmpsl
and
cmp
pop
jle
mov
lret
adc
mov
das
inc
cmpl
adc
mov
cmp
xchg
pop
mov
jp
xchg
ret
rorl
jbe
xor
imul
aaa
mov
mov
mov
sti
cmp
adc
or
add
test
xor
inc
inc
push
mov
pusha
call
jbe
ret
jae
out
repnz
loope
push
mov
or
jo
or
xchg
imul
dec
cmpsb
test
je
fwait
popf
and
add
jg
add
dec
or
daa
fwait
jl
jmp
cmp
mov
xchg
je
mov
or
xchg
sbb
jmp
outsl
sbb
orb
push
dec
cli
sar
testb
cmp
mov
dec
sbb
call
push
xchg
or
repnz
or
shl
push
cmp
or
dec
cmp
jecxz
in
jno
leave
push
dec
je
dec
jne
push
bound
adcb
jmp
push
jmp
xor
and
inc
xor
ds
cmpsl
dec
je,pn
adcl
insl
call
add
dec
insb
or
mov
push
icebp
rcrb
fdivrs
sbb
cli
arpl
or
outsl
mov
clc
loope
daa
cmp
mov
add
sahf
pop
loope
inc
sbb
jne
mov
jecxz
jmp
and
add
push
xchg
lods
ss
or
mov
hlt
push
lock
jb
push
and
cld
push
rcrb
or
jae
popf
add
lods
lahf
xorb
pushf
inc
mov
xor
hlt
imul
cmpb
sub
add
and
frstor
xchg
pop
out
insb
out
into
mov
ficoml
mov
lret
pop
mov
pop
sbb
pop
push
aaa
js
mov
add
dec
or
push
adc
cmp
andb
fnstsw
ret
xlat
add
mov
inc
mov
xor
gs
adc
or
add
xchg
push
sbb
adc
ror
sbb
jecxz
rorl
stc
sbb
std
js
mov
hlt
jne
adc
fildl
or
push
gs
mov
mov
and
ficomps
fs
xchg
pop
icebp
sbb
sbb
clc
jle
test
les
mov
adc
add
scas
pop
sahf
adc
mov
or
sub
loop
sub
or
jne
jg
add
cmp
mov
cltd
gs
xchg
iret
xchg
jmp
or
loopne
into
add
push
inc
lock
mov
adc
push
cld
sub
fldt
lea
add
xor
mov
mov
and
mov
faddl
jbe
mov
cmp
fstl
orl
jg
jmp
adc
es
gs
rorl
ret
or
jl
add
and
mov
jb
lods
jo
jb
or
cmpsl
mul
mov
inc
and
mov
pop
aaa
pop
pushf
and
test
mov
jne
jae
js
cmp
jno
sub
pop
and
jns
rcl
in
bound
mov
gs
jmp
or
shll
es
lret
inc
and
and
jo
sti
insb
insb
and
aam
push
mov
adc
mov
mov
mov
jns
cmpl
nop
inc
pop
mov
push
mov
xlat
je
cmp
jg
adc
or
inc
and
add
add
testb
lock
outsb
xlat
daa
movsb
mov
push
jmp
sbb
or
cwtl
and
clc
mov
jb
je
cmp
jle
mov
cmc
pop
xor
cmp
jbe
clc
push
push
or
movsb
in
push
adc
ret
push
loope
mov
rcl
jmp
das
xor
jbe
sti
insl
nop
cmp
mov
addl
pop
xor
jbe
outsb
sbb
pop
mov
pop
es
sbb
sahf
test
sub
inc
mov
sbb
pop
adc
mov
pop
sti
jp
fs
orb
in
push
push
popa
stos
dec
lods
inc
sbb
gs
in
fstl
hlt
lods
mov
arpl
aad
inc
mov
sbb
gs
jne
stos
dec
jns
mov
dec
test
add
and
enter
jne
add
inc
and
in
add
fisubrl
jge
mov
mov
fidivrl
push
daa
fldz
mov
xor
repnz
rclb
push
pusha
xchg
test
push
add
sub
xchg
sbb
test
xor
andb
fistps
dec
pop
je
pop
and
fld
inc
xor
mov
test
fistps
xchg
mov
ds
mov
fsubrp
xchg
fstps
adc
les
adc
arpl
add
fucomi
sub
das
fcomp
jbe
bound
lea
push
and
pop
sbb
push
dec
lods
inc
test
xor
xchg
sbb
pusha
adc
xchg
pop
test
or
dec
cmpsl
xchg
lea
mov
mov
in
xchg
rorb
push
adc
or
mov
jg
or
xor
dec
or
rclb
adc
xchg
jno
add
in
mov
jnp
mov
inc
add
test
or
or
or
adc
sub
xor
cmp
int
adc
lea
jo
cmpsl
add
and
add
pushf
cmp
imul
lock
leave
and
in
push
mov
push
mov
xor
mov
inc
cmp
int3
orb
pop
cld
fs
leave
add
test
pop
mov
mov
fmuls
add
enter
add
cltd
ficoml
pop
cmp
nop
mov
clc
les
dec
leave
ficoml
dec
roll
inc
nop
stos
jns
rcl
lds
pop
ret
push
add
inc
push
jb
arpl
in
enter
sbb
pushf
adc
xor
cli
es
or
stos
loopne
shl
ss
jae
sbb
sarl
or
and
xor
movsb
lods
and
dec
mov
xor
repnz
inc
adc
dec
pop
mov
add
rclb
pop
or
mov
sub
popa
or
push
xchg
pop
inc
sbb
stos
arpl
lret
inc
xchg
arpl
inc
sbb
test
mov
setae
mov
mov
xchg
outsb
in
add
cmp
arpl
jl
push
cld
lcall
pop
test
cs
and
jno
in
lock
adc
dec
or
or
add
inc
adc
les
mov
jne
jbe
test
and
rcl
rclb
adc
fwait
lcall
popa
push
ret
jb
cmc
hlt
movsl
orl
adc
sbb
out
push
jno
pusha
fs
dec
xor
push
xor
and
jl
inc
mov
dec
sbb
testl
sub
pop
mov
xlat
and
push
xor
adc
adc
pop
imul
mov
add
mov
or
in
add
in
mov
mov
orl
cmp
popa
xlat
in
sti
aam
andb
in
mov
fidivl
adc
fs
pusha
xlat
jmp
xchg
pop
insl
push
xor
cmp
sub
and
into
movsb
jno
xchg
pop
and
ret
sbb
mov
lahf
addr16
jbe
add
stos
jmp
sub
xchg
pop
shr
pop
insb
sarb
popa
js
lods
add
idivl
pushf
loope
lock
mov
mov
and
adc
lock
jl
out
rcr
aad
inc
enter
out
push
cs
cwtl
fstl
cmpb
cld
shl
xor
adc
inc
dec
and
ret
mov
adc
shll
ret
push
movsb
popf
lock
lds
mov
push
jne
sub
add
movsb
inc
xchg
in
adc
cmpsb
inc
xchg
sbb
loopne
scas
ret
jg
sbb
push
les
sbb
ss
push
inc
repz
orl
or
je
in
mov
addb
sbb
imul
or
nop
loopne
sbb
jb
aas
jo
jbe
fcompl
jne
jecxz
sbb
rolb
xchg
movsl
ss
cltd
imul
sbb
shll
ficoml
lock
push
adc
and
rolb
ss
or
pop
sub
ficoml
jb
push
pop
xor
push
mov
adc
dec
dec
push
and
push
stc
cmp
insb
sub
in
sub
insb
mov
xchg
or
add
and
add
sbbb
pop
xchg
ds
mov
lea
adc
mov
movsb
and
cwtl
mov
insl
push
call
inc
sub
mov
dec
push
jmp
dec
or
insl
dec
cmpsb
add
fdivl
add
adc
xor
fs
out
mov
jp
es
pop
jle
dec
push
ret
push
lods
add
mov
bound
and
testl
imul
push
mov
push
and
push
push
add
pushf
mov
mov
sbb
adc
inc
sbb
std
in
popa
sub
or
and
addr16
cmp
mov
sbb
dec
call
ljmp
insl
and
and
dec
movsl
sbb
sbb
and
subb
and
imul
aam
sub
jg
movsl
sbb
xor
je
xchg
mov
xor
fs
call
or
or
sbb
fdivrl
fwait
cmp
cwtl
and
xlat
adc
aam
adc
sub
inc
jmp
xchg
and
clc
aad
ds
sbb
add
dec
mov
or
mov
pop
push
in
insb
ljmp
or
or
and
jns
paddusb
std
nop
push
add
fcoml
movsb
loopne
sub
cltd
loopne
fdivs
nop
rorl
rclb
push
leave
or
mov
movsb
sti
xor
xchg
es
sbb
rcrb
test
or
cmp
push
mov
es
dec
daa
add
adc
daa
aas
in
xchg
dec
enter
pop
aaa
cmc
and
xor
cmp
loopne
std
push
in
push
dec
sub
push
les
gs
cmpb
lds
cmp
popf
cmp
jb
and
leave
and
and
lock
nop
ret
inc
clc
sub
xor
xor
and
mov
adc
mov
movsb
xchg
test
call
xchg
sub
orl
mov
pusha
leave
or
mov
or
pop
inc
jae
sub
or
mov
xor
movsl
fisttpll
and
adc
or
mov
mov
lods
sub
mov
push
adc
aam
stc
sbb
sub
xchg
inc
jno
or
cltd
pop
push
add
inc
xor
les
or
fsubrl
int
lret
cwtl
sub
les
sarl
les
pusha
fmuls
or
loope
mov
cmpsb
movl
ret
xchg
mov
cmp
test
add
and
sbb
add
pop
jmp
movl
cltd
inc
dec
push
rcl
insl
loopne
push
add
mov
or
dec
enter
pop
fcmovnb
adc
andl
and
das
or
pop
mov
and
test
test
inc
fs
or
in
clc
sub
jno
insb
adc
shrb
mov
pop
subb
push
insl
insl
push
sub
loope
xchg
mov
shrb
rolb
aas
xchg
hlt
xlat
shll
rcr
sub
ret
cmp
daa
insb
das
and
ljmp
jno
add
das
or
mov
inc
jae
add
stos
je
inc
mov
adc
jo
xor
pop
and
push
inc
lock
xchg
or
cmp
and
jmp
inc
xchg
or
jne
sub
bound
insb
adc
sbb
dec
push
push
xchg
xchg
push
sbb
out
cmp
mov
xor
pop
xor
imul
jne
jge
ret
xchg
mov
punpcklwd
dec
adc
mov
adc
xor
lock
adc
push
shlb
loope
push
test
xchg
add
pushf
bound
adc
xor
cmpsb
sbb
or
or
push
mov
jbe
xchg
sbb
xchg
cmp
mov
pop
sbb
lock
pop
xchg
or
xor
mov
xor
sbb
or
sarl
or
sti
push
mov
pop
cmpsl
mov
lods
lret
movsb
xor
adc
test
push
pushf
stc
jg
jmp
test
or
xchg
xchg
int3
adcl
mov
push
insb
mov
lods
sbb
adc
je
lahf
pop
test
pop
enter
or
cmp
mov
in
mov
int3
lahf
hlt
mov
pinsrw
in
in
sub
arpl
in
int
inc
inc
int3
rorb
pop
pop
and
enter
and
pop
mov
xor
or
inc
or
aam
mov
jno
jg
adc
push
sbbb
roll
adc
mov
add
or
sbb
add
push
mov
inc
jmp
push
jmp
sarb
fdivrs
push
cmp
in
aam
rcr
sti
and
cmp
loopne
int3
ss
push
sub
push
rorl
lock
mov
iret
cmpsb
jl
jne
mov
dec
imul
das
jp
aas
aam
adc
dec
sub
inc
shrb
jecxz
cmpl
testb
in
sub
ds
mov
mov
fwait
mov
xchg
or
leave
and
pushf
mov
test
sub
inc
sub
aaa
pop
inc
adc
fadds
dec
mov
xchg
sub
and
jl
adc
add
push
sbb
cmp
sub
aaa
inc
pop
orl
dec
mov
bound
js
push
and
movsb
fdivr
addb
ret
xor
and
mov
sarb
shl
arpl
imul
call
xchg
mov
fsubrs
xor
pop
push
and
mov
sub
jne
enter
shrb
jmp
ret
leavew
int
aas
sub
dec
xchg
inc
loope
or
cmp
sbb
or
arpl
mov
sub
test
add
jmp
adc
adc
inc
and
arpl
fdiv
lea
mov
bound
mov
sub
insl
loopne
pushf
ljmp
pop
adc
and
pop
and
rorl
mov
push
inc
add
xlat
push
xchg
mov
cmp
push
insl
vmwrite
cli
notb
in
notb
arpl
lahf
or
and
shrb
inc
cwtl
mov
cmp
pop
out
push
dec
in
dec
jns
cmp
bound
pop
mov
add
imul
imul
cmc
xor
mov
jnp
jo
mov
in
jne
or
lods
mov
adc
test
sub
pop
mov
and
in
shrb
jge
inc
push
add
or
add
xchg
or
aad
cmc
rorl
inc
adc
fs
mov
nop
mov
inc
mov
cmc
dec
adc
test
fsubl
fcoml
pop
adcl
ja
adc
lds
jl
popf
push
inc
or
push
add
scas
in
call
pop
nop
test
fstps
xor
adc
adc
addb
push
sbb
orl
inc
sub
add
sub
sub
add
push
lods
shrb
rclb
and
inc
aam
sub
fildl
push
aam
adc
cmp
mov
call
mov
in
sub
mov
dec
or
jno
xor
repz
int
sub
or
in
les
xchg
lock
test
xlat
jb
sbb
add
enter
add
xchg
lret
sbb
mov
lret
rol
mov
pop
add
mov
dec
push
fcoms
pop
int3
gs
inc
pop
dec
not
adc
mov
pushf
adc
pop
dec
fiaddl
aam
movsb
cmp
xchg
xchg
inc
mov
and
nop
add
fldl
shlb
les
lds
rol
dec
dec
call
nop
inc
in
je
insl
adc
pop
sbb
stc
adcl
rorb
sbb
and
pop
rclb
sub
cmp
add
sbb
or
inc
test
cmpsb
dec
popa
aad
adc
dec
das
dec
dec
xchg
or
jne
jne
or
fiaddl
bound
adc
test
je
cmpsl
push
test
dec
sbb
push
fwait
sub
pop
aas
and
jmp
mov
or
or
add
fs
jne
test
subb
gs
lock
subl
push
mov
add
mov
das
jae
in
in
mov
lods
lods
enter
test
sarb
imul
cmp
xchg
dec
lea
mov
inc
lcall
mov
jo
sbb
jns
and
xor
movsb
mov
scas
gs
mov
mov
fidivl
push
fwait
mov
push
movsl
nop
iret
arpl
leave
sub
enter
mov
push
fisttps
or
inc
int3
fisubl
fadd
stos
jne
xchg
xchg
idiv
cmp
jle
xchg
rclb
pusha
jne
sbb
lahf
imul
or
movsb
insl
xor
dec
push
in
push
pop
xchg
xor
xor
pusha
adc
nop
pop
fistl
xchg
adc
sub
cmp
fadds
jle
enter
sbb
mov
and
xor
andb
push
pusha
pop
inc
mov
or
lods
in
adc
sbb
int3
movsl
mov
rcrb
test
or
nop
add
mov
test
mov
add
sub
dec
pop
nop
mov
cmp
jne
jne
adc
shr
aas
dec
leave
and
xor
pop
fiadds
in
push
mov
movsb
inc
cmpl
jge
xchg
stos
test
fsubrl
test
mov
jecxz
adc
adc
aam
orb
fdivr
call
mov
or
push
emms
in
dec
mov
push
cmp
push
nopl
xor
push
fs
test
enter
cli
jo
and
cltd
movsb
adc
push
sbb
push
aaa
xchg
dec
int3
jg
pop
pop
cltd
adc
dec
pop
add
cli
jns
push
xchg
add
call
inc
mov
push
mov
pop
mov
lods
repz
cmp
mov
aam
inc
mov
movsb
mov
lea
push
adc
jns
pop
xchg
fs
loopne
insl
pusha
push
or
pop
orl
cmp
pop
jp
mull
add
notl
push
sbb
mov
pusha
movsb
popf
insb
adc
es
push
insl
cmp
mov
leave
and
dec
dec
push
xor
sbb
dec
xor
sbb
inc
cmp
and
sub
pop
enter
pop
enter
mov
sub
imul
jmp
jne
add
adc
xor
inc
enter
pop
hlt
and
movsb
int3
pop
inc
or
sbb
sub
sti
inc
les
sub
cmp
jl
and
or
pop
add
stos
movsb
pop
stos
rolb
sbb
aam
es
fwait
add
pop
mov
in
and
sub
test
ret
xor
std
in
xor
adc
pop
fwait
movsb
in
pusha
les
jge
loope
fwait
imul
lods
sbbl
pop
or
push
insb
gs
je
and
call
or
dec
inc
jecxz
iret
ret
dec
add
or
xor
xchg
fistps
xchg
pop
mov
sbb
jb
push
and
ret
cmp
shll
add
mov
repz
int3
test
insl
and
inc
dec
int3
int
pop
adc
rcrb
aam
adc
popa
iret
lahf
or
push
push
add
pop
inc
xchg
imul
fs
jo
int3
dec
shlb
stos
int
rorb
bound
add
rorb
scas
inc
mov
inc
insb
jno
inc
in
dec
sub
pop
mov
cwtl
addl
inc
in
and
sbb
sub
jecxz
or
cmp
adc
push
mov
loopne
adc
mov
cwtl
arpl
arpl
mov
movsl
sub
addb
jecxz
pop
xchg
repz
fs
add
sbbb
xchg
cmpsl
mov
gs
lret
aad
xor
xor
stos
or
sbb
cmp
fs
cmpsb
mov
int3
jno
shll
jns
sub
cwtl
popa
inc
in
lods
insl
movsb
pop
inc
mov
push
repnz
adc
repz
push
or
lcall
stos
mov
nop
add
sti
andl
outsl
jne
or
sub
lds
stos
and
imul
and
cmp
bound
shlb
mov
insl
xor
adc
sub
pop
enter
pop
push
push
push
or
pop
mov
pop
popa
cmp
inc
add
ret
addl
cmp
xlat
pop
repnz
je
sub
mov
jns
inc
sub
andb
mov
outsb
imul
lock
ret
inc
imul
mov
or
ja
adc
leave
mov
in
push
xchg
inc
add
fists
stos
xchg
cmp
push
or
pop
sbb
jns
or
inc
push
adc
cmc
sub
ret
push
lea
icebp
add
cwtl
inc
inc
lret
test
lock
ss
mov
mull
dec
dec
adc
aam
or
scas
lods
jbe
aam
pop
aam
mov
sbb
fbld
or
out
fildll
aam
lods
sbb
or
shlb
push
xor
pushf
dec
pop
jecxz
jns
outsl
int3
add
pusha
sub
jo
bound
ss
gs
add
dec
fcoml
test
jge
cltd
inc
pop
mov
pop
cld
inc
inc
in
adcb
xor
daa
das
rolb
sbb
pop
add
leave
in
dec
adc
cwtl
lret
je
mov
int3
jmp
dec
and
jmp
add
xor
mov
inc
lret
and
add
pop
pop
rorb
sbbl
push
xchg
adcb
nop
sbb
push
test
pop
inc
push
fs
jl
fs
push
test
fs
push
push
lods
insb
inc
push
fs
pushf
dec
pop
nop
andl
shll
movsb
adc
and
insb
lods
xor
and
push
mov
xchg
dec
test
and
dec
xor
xchg
dec
xor
mov
xor
and
mov
xchg
aam
mov
sub
daa
lea
insb
sbb
rol
rcl
fildl
es
fcoms
fs
enter
cmp
mov
push
cltd
movnti
mov
ret
mov
inc
loopne
push
mov
inc
jno
sbb
fs
je
push
cmp
fadds
adc
inc
movsb
lods
mov
nop
inc
push
mov
sbb
aam
aam
cwtl
xchg
and
push
test
adcb
and
mov
dec
and
mov
mov
mov
addb
fs
xchg
fwait
and
jb
in
aam
int3
les
jb
mov
jbe
jb
xchg
mov
test
lds
je
or
cltd
fs
in
push
xchg
mov
mov
lds
xor
mov
add
xchg
cmpsb
push
nop
ds
push
xor
pop
enter
push
and
lea
test
movsl
or
cmp
lahf
mov
push
mov
insl
test
inc
aam
push
and
sub
inc
roll
andb
outsb
sbb
or
xor
and
jo
call
test
lds
mov
pop
mov
mov
pusha
jns
hlt
add
stos
gs
dec
leave
jns
js
lods
sbbb
icebp
es
rclb
mov
or
rcrb
in
pop
enter
pop
pusha
sbb
inc
inc
not
xorb
sbb
and
dec
sbb
loope
dec
xor
test
or
push
push
mov
sbb
and
lret
imul
push
loopne
leave
pop
sub
mov
adcb
shll
sub
sub
adc
adc
adc
mov
pop
dec
cmp
adc
and
xchg
in
mov
jo
cmpb
orl
inc
and
cmpsb
sub
enter
arpl
out
mov
setge
sub
aas
outsl
lds
push
or
adc
adc
rclb
test
xor
ret
rclb
and
sarb
sbb
outsl
int3
nop
mov
es
jge
mov
icebp
adc
push
pop
lock
sbb
lea
mov
das
xchg
sbb
xor
nop
add
enter
mov
and
adc
rclb
rclb
fmul
stc
mov
dec
xor
das
mov
enter
mov
and
jl
imul
enter
fs
xchg
sub
or
xchg
sbb
or
adc
mov
jb
pop
aas
mov
pushf
sbb
orl
mov
pop
mov
jno
or
leave
sbb
addl
and
fwait
movsb
sbb
movsb
adc
mov
mov
inc
jne
in
jg
mov
enter
adcb
mov
imul
sub
mov
repnz
imul
mov
xorb
fs
orl
mov
cmp
adcb
or
test
mov
shll
pop
in
pusha
mov
addr16
or
cmpsl
cmp
cmp
cwtl
repnz
inc
addl
push
jl
insl
push
lret
xor
xor
imul
push
mov
push
and
adc
in
hlt
cltd
inc
add
add
repz
in
jg
insl
sub
xlat
sbb
xor
leave
fists
and
add
adc
mov
add
sbb
sub
or
movsb
les
mov
clc
mov
andl
icebp
sar
xor
xor
or
lds
adc
inc
push
clc
icebp
addl
sbb
stos
movsb
in
int3
in
fadds
sub
xor
xchg
imul
adc
and
mov
lods
aas
push
sub
scas
mov
pop
lcall
xchg
mov
jle
sub
hlt
push
mov
das
jg
movsb
ja
adc
imul
mov
in
aas
outsb
and
out
and
or
or
or
pop
add
xchg
rorl
sahf
and
inc
sub
adc
and
fmul
cmpsl
adc
test
sbb
jns
pop
test
shlb
mov
adc
shrb
shll
test
xchg
or
mov
xor
xor
sbb
shr
rclb
xchg
mov
rcrb
or
test
push
fdivs
and
imul
mov
call
divl
mul
fistpl
push
mov
mov
push
mov
js
xor
mov
cmp
sub
call
sbb
lods
add
pop
dec
xchg
or
inc
sub
adc
push
into
ret
lea
pop
mov
popa
test
aam
insl
push
or
adc
aam
dec
aad
icebp
pushf
sub
test
xlat
add
in
xor
mov
xor
sbb
sub
js
icebp
sbbb
jecxz
repnz
add
mov
xorb
jge
popa
mov
fdivl
add
xorl
xchg
or
fcoml
xor
xlat
xor
movsl
mov
dec
in
pusha
xchg
insl
mov
call
push
lcall
and
lods
jmp
dec
cli
inc
adc
mov
dec
daa
rclb
pop
adc
sahf
daa
pop
dec
scas
test
cwtl
gs
inc
sahf
cmp
je
cmp
movb
add
ss
inc
add
mov
in
or
sarl
jmp
arpl
xor
xor
dec
xor
jo
cltd
in
xor
iret
xchg
es
and
xor
sub
adc
pop
pop
imul
cli
mov
sub
dec
fwait
sub
dec
jo
push
lods
stc
insl
add
loope
movb
push
sub
int
pop
pop
pop
xchg
bound
sbb
sbb
xor
fidivl
xchg
and
jo
adc
mov
pop
outsb
and
push
fdivs
add
enter
push
ret
dec
test
mov
test
in
pusha
mov
dec
rorb
add
cmc
andb
adc
lods
adc
and
mov
icebp
movsb
rorb
mov
mov
push
inc
xor
mov
dec
pop
mov
and
cmp
arpl
and
ficompl
movsb
add
add
xor
dec
inc
incl
mov
or
push
push
ret
nop
out
pop
push
or
cwtl
cmp
call
adc
mov
mov
mov
push
push
inc
mov
test
insb
jmp
inc
fs
push
or
xor
cmp
sbb
pop
push
cld
and
nop
out
or
fidivs
inc
inc
ds
sahf
lret
jl
cld
dec
mov
or
jge
loopne
cmpl
push
shrb
lds
and
jle
sti
movl
movb
mov
ljmp
dec
repnz
push
aas
fsubrl
pop
lock
dec
pop
jg
push
and
and
cld
cmpsb
mov
icebp
mov
add
or
and
mov
mov
pop
hlt
fisttpll
or
jb
ljmp
adc
and
popa
and
dec
out
cld
mov
mov
fisubl
and
or
mov
sub
shll
sbbl
push
arpl
in
inc
iret
loop
or
fnstcw
mov
mov
jmp
sbb
mov
push
fbld
jo
cmp
pop
and
mov
cmp
jg
les
and
sub
add
xor
adc
stc
fcompl
daa
push
xor
cmp
sarl
mov
repz
push
inc
pop
ja
jmp
repz
into
add
dec
or
push
es
add
sti
inc
add
pop
push
out
es
dec
in
adc
add
inc
orb
jnp
mov
sbb
mov
or
adc
mov
rcll
xchg
adc
or
cmp
outsl
cmp
adc
mov
test
add
nop
add
into
pop
adc
test
cmpsl
stc
mov
push
loope
dec
xor
cmpsl
stc
mov
dec
test
and
mov
gs
cmp
add
jge
pop
in
incl
sub
jg
mov
sbb
popa
and
insb
outsl
arpl
imul
cmp
lods
jb
sub
scas
jmp
imul
jb
outsb
je
add
das
add
push
insl
adc
push
scas
lock
inc
outsl
jb
fstpt
je
jb
gs
add
or
outsl
add
jnp
lahf
or
add
add
jne
les
scas
fldl
imul
dec
push
add
mov
jl
add
add
aaa
or
xchg
dec
add
iret
icebp
pop
push
add
cmp
sub
pusha
aas
push
add
pop
dec
add
sub
push
insl
xchg
mul
loopne
je
je
and
jae
dec
fucomi
sti
sbb
dec
adc
insl
push
sub
subl
adc
jae
bound
jns
push
jne
imul
andl
xchg
aas
imul
ds
jp
outsl
or
insl
xchg
imull
dec
fs
fnstsw
cmpsl
lret
aas
and
outsl
jmp
jo
ja
ja
mov
lret
jo
jnp
stos
insl
sub
push
imul
scas
cmp
jne
add
push
data16
xor
sub
idivl
insb
jp
sub
insb
lcall
repz
addl
sbbl
arpl
or
cmpl
daa
dec
jbe
fistpll
fisubs
inc
xor
je
lds
loope
jnp
sbb
jo
arpl
mov
xchg
mov
mov
fbld
sbb
push
das
jb
mov
shll
aas
cs
pusha
xor
xor
movsb
daa
outsl
andl
xor
fidivrl
jg
push
sub
jno
in
call
aaa
xor
pop
push
jg
dec
iret
push
enter
ss
or
dec
fbstp
jne
jbe
jb
inc
mov
xchg
jne
pop
stos
nop
mov
jbe
xor
cmc
mov
js
das
rcrl
stos
popa
mov
push
adc
push
jo
insb
push
cmc
fistps
pop
mov
iret
arpl
inc
sbb
add
mov
insl
lret
imul
stos
fs
imul
shll
orb
popa
jnp
xor
jle
pop
cmpsl
outsl
pop
sub
das
xchg
rcll
cmp
pop
add
lds
pop
addr16
cmpsb
mov
mov
cmp
lock
popa
mov
mov
push
jg
scas
popw
inc
stos
pop
jecxz
push
push
ret
or
sbb
cmp
xor
sub
dec
addr16
and
flds
add
repz
push
inc
mov
push
inc
inc
mov
das
repz
sbb
push
sbb
jns
out
sbb
mov
sbb
repz
sbb
das
shrl
int
push
pop
sahf
push
sbb
sbb
out
pop
js
jns
jp
lcall
insl
incl
dec
aaa
add
add
push
jp
ds
xor
push
mov
cmp
setns
jne
cmp
mov
mov
xchg
ja
ds
in
cmp
and
push
sbb
xlat
dec
add
sbb
jnp
negb
sub
add
ja
jbe
and
add
das
or
scas
pop
mov
daa
dec
ljmp
dec
inc
and
or
or
decb
jmp
in
aad
ret
dec
idivl
aas
rcll
xchg
mov
jo
mov
clc
fimull
fucomi
mov
daa
outsl
dec
and
rol
inc
das
fcmovnu
adcb
pop
imul
sbb
outsb
iret
jns
out
out
in
add
and
arpl
pop
pop
jp
cmp
jmp
jae
push
and
mov
dec
jne
dec
fbld
fcmovnu
dec
push
ds
neg
fdivs
mov
iret
mov
jg
outsl
cld
es
cmp
cmp
add
out
stc
sub
dec
and
jns
add
das
cmpsl
jne
das
adc
push
inc
inc
arpl
bound
std
fsubrs
mov
dec
arpl
sti
loopne
sub
inc
jne
jne
xor
insb
xchg
loop
fimull
outsb
xchg
inc
jo
imul
bound
inc
popa
outsb
adc
into
mov
xchg
cmp
sahf
outsb
jns
jg
addr16
popa
imul
divl
xor
and
daa
out
fstps
clc
sbb
dec
outsl
outsb
and
cmp
push
jne
xchg
pop
dec
scas
jmp
add
out
dec
or
rcrl
jnp
mov
jae
mov
push
inc
push
popa
insb
jne
test
stc
pop
inc
inc
mov
push
xor
daa
and
sub
sub
cs
xor
xor
xor
pushl
aaa
cmp
cmp
cmp
ds
inc
inc
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
popf
mov
push
push
pop
out
mov
pop
pop
pop
pop
adc
popa
bound
gs
imul
xor
insb
insl
outsb
outsl
jo
add
jbe
js
jp
jl
jle
xchg
and
lock
loopne
mov
add
orb
mov
ljmp
lret
jno
icebp
pusha
inc
mov
outsl
lcall
clc
ret
movsl
add
xorl
pop
test
outsl
imul
call
std
push
mov
gs
xor
popa
js
fnsave
faddl
dec
pop
add
adc
outsl
ja
ret
jnp
test
int3
adc
dec
push
add
adc
add
add
add
add
xor
cmp
push
add
xor
inc
and
and
mov
or
pusha
adc
js
or
in
out
lods
cmp
add
sbb
addb
jnp
test
push
xchg
test
add
mov
mov
daa
push
cmpb
push
fnstcw
mov
and
sub
jb
int3
push
lods
lods
pop
into
jo
add
mov
push
xchg
call
ja
and
add
xor
adc
loope
add
mov
or
mov
or
leave
jae
add
lea
leave
or
and
out
xchg
dec
pop
mov
mov
sahf
or
imul
cmpsl
sarl
pop
jge
add
lods
mov
enter
add
cmc
jp
push
sbb
cmp
imul
push
inc
sub
test
dec
jmp
dec
inc
adc
movl
shrl
mov
push
jae
adc
bound
je
outsb
data16
push
jbe
mov
out
je
xor
push
pop
pop
divb
xchg
daa
pop
lea
stc
adc
inc
outsl
js
push
xchg
cs
jne
std
and
inc
outsl
insl
jo
jo
and
and
scas
sub
insb
les
dec
imul
or
inc
mov
fistpl
ds
cmp
dec
inc
jb
jns
daa
mov
and
gs
test
insb
and
arpl
mov
in
test
mov
inc
sbb
outsb
jle
jbe
mov
mov
jns
outsb
pop
jb
and
xor
pusha
inc
jbe
push
or
lahf
fs
insl
and
add
push
jp
pusha
xchg
lcall
inc
faddl
and
mov
mov
cmp
push
roll
mov
sub
lock
fcmovnb
pusha
adc
outsb
mov
push
cmp
or
jae
or
xchg
or
cmp
call
mov
adcl
outsb
gs
mov
mov
movb
cmp
mov
push
dec
testl
dec
fcmovb
imul
aam
enter
and
sbb
shlb
jge
insl
pop
or
jle
jb
push
imul
call
loop
or
outsl
or
ret
push
jae
inc
in
push
das
gs
addb
inc
mov
sub
test
mov
pop
push
fldt
outsl
xchg
push
jmp
mov
popw
pop
cmp
push
jl
cmp
or
ds
and
mov
sub
es
lock
addr16
jle
jle
shr
cltd
sub
add
add
fidivrs
cltd
sub
pop
or
sbb
das
enter
push
jb
aaa
iret
push
mov
cmp
ds
out
push
pop
pop
jne
loopne
mov
fs
jbe
push
lock
sbb
jo
ss
gs
imul
mov
dec
int3
and
cmp
pop
enter
sub
popa
sub
mov
jl
out
sub
pop
cs
repz
inc
add
cmp
and
lahf
out
cmp
or
sub
mov
imul
orl
out
sahf
aam
int3
enter
jns
repnz
mov
lods
test
xor
repz
mov
mov
dec
jns
pause
nop
mov
mov
cmpb
cmp
js
jo
repz
repz
iret
repz
push
push
dec
inc
xor
sahf
out
cmp
or
sub
enter
jns
mov
and
cmp
out
in
les
jo
fs
xor
sahf
out
cmp
or
sub
test
sahf
out
sbbb
in
sub
lock
push
pushf
jo
sub
subb
push
and
adc
sub
jb
add
out
and
push
leave
and
sub
dec
push
jb
or
add
addl
fdivrs
add
push
jne
pop
ja
add
sbb
fcomp
add
inc
cmpsb
sbb
sbb
ja
add
push
xchg
add
and
add
jnp
and
lea
fbld
jle
out
add
addb
xchg
lea
xchg
call
lcall
mov
cmpsb
cmpsl
test
stos
stos
lods
lods
scas
scas
mov
mov
pushl
mov
mov
enter
int3
int
iret
rcl
rcl
call
aad
xlat
fcomp
fcmovu
loopne
loop
in
out
call
in
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
std
jmp
and
mov
and
incl
test
adc
inc
push
lcall
gs
popa
data16
testl
cmpsb
pop
jns
push
test
xor
data16
add
lahf
js
mov
aaa
push
arpl
mov
fs
sbb
cltd
out
je
xor
ljmp
add
sub
add
inc
adc
mov
dec
and
xor
push
dec
inc
dec
cmovns
int
adc
inc
das
push
add
imull
adc
jg
ret
popa
into
mov
mov
pushl
inc
jnp
inc
loop
mov
ds
pop
adc
incl
jg
lret
sbb
jb
jge
arpl
cmp
pop
pop
dec
scas
jp
jno
in
fstl
incl
push
mov
and
cmp
dec
imul
decl
dec
out
inc
mov
mov
sub
cmpl
sbb
pop
jns
ds
xor
jmp
incb
int3
dec
dec
xor
dec
popf
pxor
xor
lret
aaa
push
div
jmp
clc
incl
and
cmp
cmpsb
das
xchg
pop
and
xchg
lret
incl
mov
loopne
cmp
inc
mov
xchg
push
pop
xchg
sub
out
lahf
or
mov
jns
mov
add
test
shrl
leave
hlt
mov
adc
xchg
dec
add
scas
lods
dec
lock
xor
pop
dec
enter
into
or
icebp
pop
pop
repnz
ljmp
and
es
sbb
adc
jne
cmp
xlat
lods
mov
mov
or
rorb
fildl
sbb
stos
cmc
sub
dec
fdivrs
xchg
and
lahf
setnp
pop
dec
jns
inc
out
xchg
mov
and
pop
ret
test
or
addr16
es
jae
fadds
xchg
data16
or
mov
xchg
mov
and
bound
rcll
aaa
js
test
jne
sti
jo
sbb
jmp
daa
mov
sub
mov
ret
insb
add
je
fcomi
or
sub
xchg
lret
xchg
in
mov
fisttpl
out
cs
inc
jb
add
xlat
sbb
scas
test
dec
mov
inc
pop
xchg
lock
dec
imul
in
add
jae
insl
jle
push
fimuls
cmpsl
or
and
pop
inc
lods
jecxz
ret
lock
repz
pop
jno
aas
out
fbstp
push
fisubs
aaa
push
push
ret
mov
js
sbb
xchg
sub
das
cmpsl
xchg
stos
fdivrs
add
add
jl
sbb
stos
jg
outsb
add
sub
sti
sbb
aaa
or
jns
outsb
jecxz
xor
xlat
jg,pn
jg
xor
cmpsl
xchg
ret
inc
xlat
adc
into
stos
xchg
push
mov
sarl
xchg
jne
aas
push
out
add
filds
add
cmp
pop
pop
jbe
out
dec
mov
adc
adc
popa
shrl
sti
push
hlt
mov
arpl
inc
sti
jo
sti
cmp
adc
cmp
sub
nop
out
rorl
inc
sub
jmp
arpl
dec
dec
rcr
movsb
mov
cmp
gs
dec
jo
jo
jp
xchg
ja
loope
or
pop
jecxz
jnp
jno
imul
push
in
out
xlat
pusha
inc
pop
inc
addr16
out
daa
fildll
je
and
insl
int
pop
pop
aas
arpl
add
pop
arpl
add
pop
mov
jne
xor
and
push
lret
je
faddl
out
push
pop
inc
mov
cmp
jbe
add
outsl
inc
pop
xorb
jnp
add
add
arpl
push
xchg
lret
les
inc
sub
loope
test
ss
out
mov
fbstp
popa
mov
mov
aas
mov
mov
into
mov
push
loope
je
jb
push
add
or
arpl
pop
call
movsl
rolb
or
rolb
adcl
xchg
cld
xor
fisubrs
bound
mov
inc
push
adc
ja
in
dec
aaa
pop
xchg
pop
int
mov
add
jne
lods
aaa
jecxz
outsl
adc
bound
cmp
sub
dec
aas
push
inc
ja
lahf
lock
daa
jne
cs
dec
subl
pop
outsl
dec
shl
popa
bound
pop
adc
mov
jno
jl
push
ret
js
adc
adc
idivl
rcll
mov
roll
inc
outsb
out
jb
or
ret
dec
sub
push
fdivrl
outsb
sub
add
jge
mov
out
pop
push
fiaddl
bound
jae
push
pop
mov
imul
xor
push
bound
or
or
and
arpl
pop
outsl
jmp
inc
cmp
lahf
add
divb
outsl
jge
adc
cmpsl
jb,pn
mov
pushf
ss
mov
ja
add
dec
mov
aas
mov
push
inc
scas
imul
loop
sbb
arpl
dec
insb
lcall
inc
inc
dec
jae
push
out
add
outsl
imul
cmpsb
out
add
xor
aas
dec
sbb
les
lret
out
jmp
out
pop
je
pop
dec
psrad
insb
aas
pop
in
js
sub
addr16
inc
daa
push
outsl
mov
ja
lds
xchg
div
loopne
inc
arpl
pop
pop
push
adc
mov
aas
testl
inc
inc
mov
mov
mov
inc
jl
jl
pop
adc
xchg
pop
aam
aas
imul
les
lret
call
push
bound
fimuls
mov
mov
adc
stos
pop
adc
bnd
jae
jecxz
xchg
jl
push
adc
out
xor
push
jl
sahf
icebp
scas
loopne
jnp
sbb
ja
js
jmp
es
ja
add
mov
mov
mov
fnstsw
cs
sbb
add
arpl
add
xor
jae
jno
loopne
adc
clc
ds
outsl
lret
jl
jo
lea
cmp
jnp
aaa
push
lock
dec
lock
pop
sub
fs
js
lock
mov
imul
push
popa
lea
repnz
bound
lock
adc
es
cmp
addr16
imul
mov
pop
and
mov
incl
sub
outsl
push
push
push
push
in
jle
fstpt
fisttps
lods
aaa
sbb
inc
xor
or
jae
mov
inc
jns
jae
fcom
mov
jae
inc
adc
lds
dec
adc
mov
mov
cli
add
pop
popa
jl
mov
pop
stos
mov
pop
incl
jb
bound
daa
rclb
pusha
aaa
push
mov
roll
dec
inc
add
aas
popa
popl
or
aaa
lock
jnp
outsl
das
mov
loop
addr16
js
insl
mov
fists
dec
push
adc
imul
sub
push
sbb
gs
add
sub
mov
pmuludq
insl
filds
mov
pop
test
fsts
inc
push
rorl
mov
pop
push
mov
out
in
pop
push
push
mov
pop
ds
push
jp
out
dec
mov
lods
push
cmp
out
adc
pop
ja
out
push
pop
push
push
cmpl
repz
pop
cvtps2pd
pop
fnstsw
pop
mov
add
int3
aas
pop
cmp
or
insl
out
pop
push
mov
jns
fwait
movsb
push
mov
mov
leave
jne
idivl
ficoml
out
sahf
out
push
cmp
dec
cmp
jnp
sub
dec
dec
push
outsb
jnp
or
iret
pop
aaa
xor
and
scas
ljmp
jmp
or
outsl
jo
jns
inc
xchg
mov
sbb
sub
movsb
das
cmpsb
push
push
add
frstor
lret
loop
movsl
rolb
adc
aas
pop
popa
push
enter
jae
fs
and
popa
outsb
arpl
push
gs
insl
pusha
push
popa
jne
cmpsl
out
jo
or
and
dec
bound
fnsave
pop
sub
and
pop
shrb
je
je
iret
jnp
cmp
pop
push
pop
mov
mov
jne
cmp
repz
mov
cmpsl
stc
xor
dec
loopne
adc
adc
dec
fs
ja
push
lea
cmp
bound
or
ds
gs
je
cmp
ret
xor
push
push
jo
jb
in
sbb
mov
and
jae
pop
cmp
sbb
and
and
mov
jae
imul
pop
adc
or
icebp
cmp
in
fwait
test
mov
outsb
add
adc
cs
jbe
pusha
imul
sbb
sub
data16
aam
imul
or
shrb
xchg
aas
push
mov
jne
mov
daa
pop
andb
mov
movb
cmp
ja
inc
push
mov
dec
push
verw
rolb
lods
lahf
js
adc
xchg
scas
inc
cmpl
adcl
pop
addb
pop
xlat
sbb
push
sub
cmp
inc
movsb
ss
cmpsl
add
insb
or
insb
int
js,pn
sub
cmpsl
cmp
jnp
xlat
pop
add
xor
in
repz
sub
mov
outsb
mov
or
or
or
xchg
sub
fsubp
cmp
push
es
aam
pop
iret
pop
scas
xor
ret
fcomps
push
and
jecxz
mov
mov
dec
and
and
fs
fs
bound
jle
sub
out
inc
or
pop
stos
aam
scas
mov
or
aas
sub
sub
dec
mov
inc
syscall
inc
cmpsl
push
scas
jecxz
or
ret
pop
or
inc
imul
movsb
mov
aam
or
inc
daa
daa
dec
fistpll
sti
fildll
stos
push
inc
ja
lods
add
scas
imul
lea
pusha
stos
filds
mov
xchg
mov
xor
xor
fimuls
scas
mov
push
sub
imull
mov
data16
add
outsl
iret
imul
jecxz
cmp
or
and
stos
jno
mov
xor
test
add
and
push
sbb
pop
stos
mov
iret
imul
mov
jae
jnp
mov
arpl
dec
fildl
sbb
out
aaa
pop
bound
jo
xchg
arpl
inc
lahf
inc
cmp
fisttpll
loope
jb
fs
push
jb
mov
and
inc
test
xor
scas
into
sub
jg
sahf
inc
into
inc
add
push
mov
ret
lods
loopne
ror
aaa
push
es
stos
inc
ja
orl
imul
mov
jae
inc
test
repz
and
jb
pop
dec
jae
test
dec
jbe
mov
nopl
pop
mov
and
sti
rolb
incl
das
ret
add
lock
push
cmp
push
roll
inc
push
inc
stos
mov
push
imul
data16
jne
cmpsl
pop
inc
sbb
mov
sub
or
pop
daa
pop
out
stos
int
addr16
mov
adc
jo
fwait
pop
add
or
cmp
jmp
arpl
jmp
jecxz
dec
int3
mov
cmp
dec
inc
jmp
pop
enter
push
or
mov
pop
or
pop
test
sub
cmc
push
or
xchg
cs
roll
cmpsb
addl
lods
inc
xchg
inc
fwait
movsl
dec
arpl
aaa
fcmovnbe
scas
xor
out
sbb
imul
outsb
jae
sbb
insb
push
or
sub
mov
push
or
mov
in
lcall
mov
cmpsb
aas
add
inc
jae
adc
cmp
mov
ret
and
jbe
mov
pop
das
rolb
imul
shrl
pop
in
pop
ret
rolb
dec
xchg
je
push
push
cmp
shll
sub
mov
ret
fldt
dec
and
outsl
add
add
dec
cmp
ret
or
xchg
mov
sti
fistl
arpl
push
loope
insl
scas
lcall
xchg
xlat
pop
mov
ds
dec
in
pop
pop
inc
outsb
loope
sub
fs
fiadds
push
xchg
cmpsl
out
or
push
mov
jbe
pop
jo
arpl
pop
add
mov
pop
cmp
mov
mov
pop
xchg
jnp
lods
ljmp
push
cwtl
fcompl
cmp
inc
iret
ss
xor
add
out
addr16
xor
je
sbb
sub
lahf
aas
xor
mov
sub
fistpll
cmp
pop
rcl
daa
dec
pop
lea
xor
cmpsl
mov
jecxz
sub
or
mov
xlat
sbb
imul
or
sbb
out
sbb
sub
add
mov
sbb
out
inc
cmc
sbb
fwait
cs
shrb
push
test
js
fs
cld
mov
xor
arpl
imul
sbb
cmpsl
fwait
lock
insb
add
push
pop
int3
inc
sbb
subl
mov
sub
cmpb
aaa
xor
das
arpl
xlat
mov
outsl
push
inc
inc
fwait
cwtl
test
add
cmp
stos
pop
xlat
ss
add
inc
cmp
xor
or
test
fs
mov
push
or
cmpsb
cmpsb
sub
push
or
rcrl
outsl
stos
adc
push
setg
inc
sub
lods
push
sahf
xor
sbbb
das
adc
insl
lret
cmp
pop
pop
popa
xchg
pop
sbb
or
rolb
adc
push
push
xadd
sti
cmpsl
mov
ss
add
dec
dec
xor
mov
push
cmpleps
adc
push
mov
adc
cmp
xchg
popa
aad
aas
ja
inc
xchg
adc
les
loope
arpl
out
pop
pop
nop
mov
add
mov
addr16
cmp
xchg
ucomiss
add
iret
sub
sbb
popa
adc
wbinvd
mov
femms
push
inc
das
jb
fiaddl
push
push
mov
lock
pop
minps
aas
push
sbbl
or
dec
mov
mov
repz
inc
in
sbb
mov
outsb
lods
scas
iret
outsl
push
loopne
cmp
nop
nop
outsb
dec
outsl
shl
mov
outsl
outsl
iret
jp
or
rol
pop
dec
pop
dec
in
mov
mov
push
xor
xor
lea
scas
xchg
push
push
and
and
mov
out
inc
push
stos
shlb
cvttps2pi
xor
lcall
add
push
out
inc
pop
scas
xor
pushf
or
or
xor
int
pop
adc
jl
out
adc
loop
adc
jo
push
mov
sbb
or
inc
sbb
incl
ret
and
out
push
and
inc
shlb
ja
push
push
bound
out
adc
add
pop
xor
pop
inc
das
cs
imul
mov
aas
lret
lods
pusha
mov
sub
sysret
orb
jo
push
movsl
loopne
inc
out
jae
mov
sub
mov
adc
sbb
xchg
lods
loope
pushf
outsl
add
pop
icebp
xor
das
add
push
bound
dec
jg
push
movsl
mov
arpl
adc
arpl
cmp
loopne
adc
jecxz,pn
sub
and
out
pop
pop
xorb
add
jno
das
dec
jo
jnp
inc
cmp
or
das
jno
sbb
mov
mov
call
lock
sbb
inc
das
and
and
xor
stos
bound
or
addb
push
mov
mov
xlat
and
sub
das
push
mov
pop
int
lods
and
mov
inc
bound
push
and
ficoml
repz
pop
movsl
icebp
aas
mov
jmp
add
push
xor
das
test
jge
pop
fwait
push
data16
cmp
lods
aas
push
and
jne
xor
fs
xor
jmp
outsb
sbb
inc
lahf
mov
inc
scas
add
andb
push
insl
pop
lods
adc
ret
mov
cvtdq2ps
mov
sti
push
push
jno
push
insl
arpl
bound
out
push
sub
mov
mov
in
out
movsl
jo
outsl
sbb
push
aad
lahf
push
addl
jecxz
stos
in
cltd
mov
and
pushf
dec
sub
cld
loope
dec
scas
xchg
stos
pop
add
xor
cmpsb
xchg
push
leave
adc
dec
sbb
fisubs
and
cltd
dec
pop
rcr
adcb
in
mov
pop
and
stos
sub
lock
hlt
fnstcw
cld
fmul
push
xor
and
stos
in
cltd
pusha
adc
leave
rcl
sbb
sub
enter
scas
xchg
stos
and
aam
jb
dec
js
scas
xchg
test
sub
xchg
mov
xchg
push
leave
push
cmp
shrl
mov
mov
sbb
xchg
shr
xlat
orl
cmpsb
and
pop
insb
inc
add
or
jo
loop
pop
rorl
jbe,pn
cmpsb
ret
mov
inc
push
and
add
push
outsb
imul
xchg
subl
add
ss
das
inc
ret
test
addb
int
ficompl
xor
and
fwait
test
add
movsl
nop
cwtl
imul
add
aas
pop
inc
bound
aas
add
mov
push
testl
inc
fwait
push
sub
xor
sub
xchg
or
aas
push
je
fisubrl
xchg
and
sbb
notb
sbb
das
outsl
adc
xchg
xor
add
int3
fs
addr16
push
mov
pusha
xchg
fmuls
inc
addl
scas
cmpsl
lahf
loopne
jmp
sub
adc
inc
add
dec
xor
add
adc
jb
push
mov
inc
loop
sti
mov
test
subb
bound
filds
fisubs
or
movl
das
push
sbbb
ljmp
push
imul
aas
pop
gs
add
inc
add
aas
lods
cmc
add
mov
jmp
sub
lea
out
test
pop
xorb
scas
pop
cltd
mov
imul
fs
mov
sub
inc
les
call
clc
icebp
sub
jbe
jecxz
cmpsb
pop
inc
out
jbe
pop
xor
xchg
push
add
pop
xchg
xlat
pop
add
add
xchg
idivb
and
inc
inc
mov
sbb
sub
xor
jnp
pop
or
pop
fldt
and
cs
xchg
fnsave
jo
jb
inc
es
dec
orb
inc
mov
fstpt
adc
or
addr16
bound
es
or
push
add
insl
je
fnstcw
shrb
fs
sub
dec
mov
sbb
mov
xor
sbbl
es
jae
push
or
dec
cmpsl
dec
mov
jo
sarl
loopne
inc
divl
imul
dec
mov
imul
push
jbe
xor
xor
dec
lock
daa
outsb
xor
jae
cmp
mov
jg
add
adc
sbb
imul
data16
jbe
dec
js
fs
pop
daa
sbb
imul
or
test
jmp
push
ret
ret
sub
adc
and
push
cmpsl
inc
or
add
add
loopne
mov
divl
pop
pop
adc
sbb
and
lods
repz
andl
repz
cli
dec
push
cltd
or
xchg
ss
add
add
stos
or
pop
or
adc
insb
out
jns
and
sub
xor
inc
out
mov
mov
mov
mov
add
add
shrb
ret
sub
insb
xor
shrb
xchg
pop
adc
mov
adc
pop
add
data16
push
xchg
rclb
lret
verw
int
mov
shlb
stc
das
mov
rcl
add
outsb
pop
inc
adc
dec
push
cmp
stc
cmp
fisubs
push
js
test
pusha
xlat
insb
lahf
cmpsl
mov
test
push
mov
jl
mov
pop
gs
ficoml
iret
cmpsl
pop
dec
lods
stc
pop
inc
xchg
push
scas
and
rorb
and
clc
shlb
es
sbb
inc
mov
sbb
add
or
imul
scas
negl
add
adc
inc
pusha
xor
cmpsl
mov
jle
sub
out
lods
mov
out
xchg
cmp
xor
xor
pop
je
cs
sarb
aam
xor
mov
inc
cwtl
push
das
or
cltd
ss
cmp
adc
mov
xor
push
push
popa
pusha
inc
aas
pop
mov
loopne
xlat
jns
test
mov
ficoms
cwtl
or
add
pop
inc
dec
daa
mov
xchg
xchg
je
mov
ret
or
aam
cmp
push
adc
rcrb
arpl
jg
mov
sub
dec
rol
hlt
cmpsb
cmp
sbb
or
ja
dec
es
xor
sub
out
ret
fst
push
sahf
push
cs
cmp
push
xor
or
out
es
add
jnp
lods
xchg
push
insl
xchg
out
mov
scas
xor
inc
xchg
cmp
jnp
xor
jae
fs
clc
lock
xchg
push
je
xor
pop
loop
push
cmp
pop
pop
dec
shlb
outsl
mov
testl
inc
jle
jl
add
arpl
imul
fwait
xchg
jbe
call
or
inc
push
adc
mov
jbe
push
dec
mov
bound
lcall
incb
aam
mov
jp
inc
cs
lret
mov
cmp
push
sysret
out
pusha
cmpsb
xchg
ja
retw
jnp
jmp
pop
mov
xor
fidivrs
sub
lret
arpl
sub
sbb
out
cs
mov
lds
iret
cmp
addl
jge
mov
cs
sbb
packssdw
inc
pop
pop
mov
mov
es
ss
outsb
pop
push
push
xor
loope
clc
daa
dec
jb
das
inc
pop
dec
es
mov
mov
fbld
data16
idivl
or
sysexit
mov
xchg
aas
dec
cs
sahf
push
outsl
jge
xchg
push
insl
sub
fidivrs
mov
push
scas
push
insl
mov
inc
lds
mov
mov
push
jp
out
loope
outsl
ds
fiaddl
mov
jg
dec
das
xor
sbb
fidivrs
pop
outsl
pop
outsl
in
fstpl
dec
xor
xor
outsl
cs
cmp
push
dec
mov
jg
add
dec
jnp
xchg
mov
jecxz
jcxz
dec
dec
pop
jae
jne
addb
mov
scas
clc
push
push
imul
mov
adc
dec
iret
sbb
jle
inc
cli
adc
and
adcb
jnp
add
fcomi
test
inc
aas
pop
sub
cmp
xchg
mov
adc
nop
lods
pop
cmpsl
inc
out
and
lods
popa
scas
lods
pop
xor
or
ret
dec
jl
scas
sub
and
mov
xchg
jg
dec
insb
sbbl
aam
mov
repz
sbb
testl
pop
add
lea
popa
add
scas
imul
cmp
sti
mov
inc
mov
mov
push
outsl
dec
fs
sub
ja
pop
or
pop
push
fs
pusha
adc
js
cmp
out
outsb
mov
push
mov
mov
sbb
addr16
pop
sbb
test
cmp
mov
jmp
mov
dec
inc
dec
insb
outsl
popa
fs
outsl
push
imul
and
pop
xor
xor
das
sub
adc
cmpsl
addr16
or
pop
iret
pop
push
and
pop
push
aaa
push
sti
stc
scas
mov
mov
add
loopne
jge
mov
fs
addr16
fdivrs
xor
scas
arpl
ljmp
and
ja
pop
mov
mov
mov
xor
pop
adc
mov
lock
xchg
inc
xchg
adc
jns
push
inc
je
outsl
cs
fldt
ja
xor
imull
jne
lret
ss
inc
mov
ja
xor
xor
push
sub
or
inc
inc
add
pop
mov
pop
repz
mov
jae
cs
xor
stos
lods
push
xor
add
lahf
popf
inc
mov
mov
das
push
and
shrl
add
pop
js
lock
lahf
jmp
xlat
jmp
fildll
fisttpll
push
mov
orl
adc
sbb
sbbl
dec
movsl
inc
loop
iret
lods
push
and
cmp
mov
insl
das
push
inc
stos
or
and
and
jnp
cmp
popa
fldt
shlb
repz
mov
and
cmp
xchg
imul
mov
sub
sbb
jnp
dec
aad
rolb
aas
scas
sbbl
dec
inc
daa
jns
or
pusha
mov
or
filds
sub
arpl
ret
outsb
dec
arpl
jae
daa
jbe
sbb
dec
int
lods
inc
outsl
aas
push
insl
push
addr16
das
repz
jne
aaa
insb
aam
or
call
inc
inc
enter
mov
add
sub
sub
push
mov
adc
jle
pop
push
sarb
mov
add
das
mov
ja
mov
inc
aas
lock
xchg
pop
inc
int
addr16
sub
xchg
data16
sbb
push
call
jge
cmp
or
dec
jmp
fimull
mov
das
jl
dec
movsb
pop
es
mov
mov
pop
insb
bound
pop
shlb
mov
mov
in
decl
and
mov
add
adc
mov
shlb
movsl
enter
push
push
mov
inc
push
insl
ss
adc
pusha
or
mov
sub
sub
or
sti
jg
mov
mov
mov
ds
pop
sbb
mov
subb
mov
dec
fsubs
mov
pop
insb
sbb
mov
pop
dec
xchg
mov
inc
stos
jecxz
dec
push
pop
add
pop
jb
mov
push
arpl
dec
pop
and
cmpsl
loopnew
aaa
xchg
mov
mov
in
mull
pop
xchg
mov
mov
inc
inc
test
add
jbe
and
sub
test
xchg
leave
rcl
mov
dec
push
dec
in
jbe
cmp
pop
sbb
xor
xchg
out
sub
fwait
in
jae
scas
pop
pop
inc
fdivl
pop
int3
cmp
iret
leave
xor
cmp
pushf
fwait
pop
mov
jl
or
leave
dec
insb
inc
outsl
adc
xor
lahf
daa
push
push
lea
out
inc
pop
adc
aaa
bound
dec
cmp
leave
or
pop
fwait
loop
sarb
pop
and
push
cmpsb
inc
jnp
cmp
ss
je
mov
sub
adc
sbb
mov
cmp
popf
addb
inc
mov
pop
out
cmpsb
jp
mov
inc
ret
cmp
jo
addr16
adcb
dec
rorb
xor
xlat
push
mov
and
incl
je
bound
imul
aaa
sbb
inc
dec
mov
or
xlat
mov
shlb
push
add
js
lret
mov
push
filds
aas
jae
inc
cmp
dec
xlat
addb
jecxz
mov
pop
mov
notl
adc
fwait
pop
dec
push
test
mov
scas
cmc
fidivs
sub
shr
bswap
sub
push
xor
dec
addr16
lcall
push
mov
xchg
ret
xchg
jmp
call
push
cmp
fst
mov
add
insb
inc
dec
and
or
lahf
test
pop
jb
pop
outsb
arpl
cmpsb
test
repz
pop
jne
sarl
cmp
repz
bound
dec
pop
fbstp
push
and
fbstp
xor
dec
xchg
ljmp
bound
dec
imul
cmpsb
pop
push
insl
cmpsl
movsb
add
cs
jle
cltd
lahf
out
into
pop
adc
mov
pop
push
xchg
push
fwait
push
bound
outsb
popf
jge
dec
daa
xor
mov
mov
mov
push
call
cltd
bnd
cmp
push
mov
dec
sbb
out
xchg
pop
adc
data16
sub
dec
mov
push
sub
jl
repz
push
mov
inc
adc
cmp
add
fadds
test
stos
push
inc
xor
sbbl
andl
push
pop
fidivl
in
dec
hlt
scas
in
cmp
push
test
sbb
in
dec
pop
xchg
jnp
out
ljmp
es
push
inc
ss
in
or
cmp
mov
lahf
neg
repz
aad
cs
mov
lahf
cmpsl
stc
xor
adc
out
inc
adc
fs
pop
stc
xchg
inc
test
mov
push
jecxz
out
mov
inc
dec
and
fisttpl
push
ss
stc
mov
pop
push
xchg
push
mov
fisubs
pop
and
cmp
mov
dec
push
bound
ja
cmpsl
mov
xlat
push
push
cmp
pop
fcomip
fiadds
testb
lahf
xchg
std
jo
jnp
aaa
cltd
pop
push
ffreep
pop
idivl
fwait
xlat
sbb
jns
rcr
cs
mov
xchg
gs
or
inc
jbe
adcl
hlt
outsb
xchg
sahf
imulb
inc
dec
arpl
bound
loopne
inc
loopne
addl
outsl
int3
inc
add
imul
mov
int
dec
push
imul
addb
inc
dec
push
push
pop
dec
out
add
repz
dec
iret
repz
push
dec
es
andb
or
cs
sbbl
push
xchg
jns
mov
repz
shll
push
jo
mov
or
iret
loopne
es
das
call
xor
aad
pop
dec
sbb
scas
sub
or
adc
xor
std
stc
add
adc
adc
push
mov
xor
adc
pop
jnp
add
mov
test
jg
loopne
mov
je
mov
nop
aas
in
mov
hlt
pop
sbb
enter
adc
cld
mov
xchg
or
adc
daa
outsb
pop
in
or
jo
mov
pop
mov
and
nop
dec
imul
sbb
dec
std
stos
push
cmp
xor
cmp
dec
push
and
iret
lock
adc
ja
outsb
outsb
in
loop
jp
xor
push
js
sub
imul
cmp
xor
pop
xchg
jp
sbb
add
outsl
fstpl
adc
mov
inc
sub
lods
dec
jo
xlat
or
pusha
movsl
test
inc
outsl
sbb
add
inc
jb
popa
je
and
subl
push
outsb
scas
pop
testb
out
pop
lods
mov
outsb
push
ficoml
cs
jmp
es
pop
int
cmpsl
push
lea
and
rcl
shrb
loopne
ja
inc
add
imul
sub
jmp
not
sub
movhps
lahf
cmp
out
dec
jae
push
aaa
push
fisubrs
adc
or
inc
add
pop
outsl
xlat
jno
jne
jo
push
jo
lods
subl
movsl
sbb
inc
add
mov
mov
lret
in
cmp
dec
xchg
push
fcomps
ficompl
cmpsl
mov
popa
ficoms
push
push
outsb
jb
adc
lea
pop
xor
mov
loopne
movsb
cmova
add
xchg
push
xor
mov
jae
or
push
add
add
add
dec
sbb
push
cmp
jae
xor
xchg
int
daa
add
or
es
cmp
xor
daa
and
sub
imul
dec
daa
dec
popa
aam
decl
imul
ret
bound
outsb
push
jnp
xchg
into
shrb
adc
pop
movl
add
inc
aaa
insl
mov
cltd
addr16
or
jcxz
imul
daa
mov
xor
pop
mov
dec
inc
sbb
push
jecxz
aas
add
test
ljmp
adc
inc
aaa
pop
adc
pusha
mov
fsubs
inc
js
jne
mov
arpl
outsl
scas
pop
rclb
inc
mov
aad
pop
mov
mov
pop
addr16
arpl
mov
xor
mov
in
jae
fs
addl
es
inc
bound
push
xchg
mov
sti
adc
ja
jo
pop
pop
mov
dec
int3
add
out
add
and
aas
lret
dec
mov
arpl
or
sub
pop
pop
dec
mov
roll
in
loop
popa
cs
popw
outsl
sbb
insl
aaa
imul
popf
int
add
lods
pop
insb
insl
das
testl
jg
popa
add
cmp
popa
or
pop
sbb
rcl
add
lds
push
cs
fiadds
push
mov
jle
add
ja
xchg
add
into
inc
rclb
push
orb
add
xlat
insb
testl
aas
push
xor
xchg
das
inc
pop
mov
bswap
push
adc
xchg
adc
inc
dec
fcmovbe
push
in
pop
pop
mov
add
mov
mov
xlat
sub
pop
pop
out
pop
daa
xorl
aas
add
sbb
mulps
jge
pop
cmpsb
inc
inc
push
inc
lret
imul
daa
sbb
cmp
dec
lds
adcb
cmp
add
jae
sbb
inc
dec
dec
inc
pop
add
add
bound
push
or
xlat
cltd
sbb
push
pop
or
and
xor
mov
lahf
inc
dec
mov
xor
dec
add
fdivs
mov
cmpsl
push
jmp
lods
and
jg
xor
testl
pop
pop
inc
pop
push
test
aam
jns
je
push
dec
adc
jecxz
ret
pop
xor
in
das
adc
and
adc
mov
es
insl
jo
je
add
std
lea
ds
jo
jae
daa
pop
mov
out
jno
outsl
xor
push
xadd
push
xchg
xchg
adc
insb
pop
sub
or
pop
out
jns
je
jne
or
bound
mov
xor
ja
out
mov
jae
lret
sub
gs
pop
faddp
inc
in
cmp
mov
mov
je
xor
imul
dec
orb
sbb
push
test
jbe
inc
and
xor
mov
push
arpl
nop
mov
testl
out
pop
stos
add
rolb
bound
cmp
dec
shll
jb
add
mov
sub
mov
push
push
adcb
jmp
test
push
mov
cmpsl
pop
dec
jne
push
pop
daa
fwait
sub
push
test
bound
loop
inc
mov
push
aam
jns
jb
add
mov
ds
push
ret
pusha
or
xor
adc
out
inc
adc
fldt
or
aaa
inc
insb
jo
js
jp
pop
daa
adc
cs
sgdtw
mov
ret
jb
out
adcl
imul
add
push
pop
dec
sahf
std
fwait
incl
dec
inc
dec
push
xchg
add
loopne
cmp
add
sbb
fiadds
jg
ret
movl
add
pop
xor
mov
adcl
mov
inc
xchg
inc
aaa
jno
sti
shlb
ret
icebp
adc
pop
movsb
incl
sbb
cwtl
stos
pop
fadds
pop
adcl
test
and
jge
push
je
mov
andb
fcompl
shrl
xchg
out
popf
rorl
mov
jmp
dec
fdivr
ljmp
stc
jbe
push
ds
insl
xor
jg
mov
inc
xchg
cmpsl
aad
jmp
push
sub
adc
or
cs
insl
sub
adc
or
or
cs
dec
ret
sub
xchg
mov
data16
mov
call
cltd
test
pushl
push
push
shll
ja
daa
mov
mov
mov
sbb
dec
stos
fmuls
pop
dec
pushf
pop
rep
cs
outsl
arpl
test
add
mov
filds
cwtl
jmp
push
movsb
mull
jno
addr16
push
scas
addr16
push
outsb
cmp
cmc
dec
movsl
jg
push
push
mov
fwait
stos
flds
pop
and
stos
lods
aas
loope
ret
js
pop
out
inc
daa
mov
xor
das
ds
das
sbb
cmp
daa
daa
daa
idivb
sub
push
pop
inc
inc
inc
push
inc
pop
and
jg
pop
pop
or
aas
js
insb
cwtl
jbe
jbe
sbb
push
and
ss
test
ds
adc
orl
gs
nop
loopne
dec
iret
ds
push
add
pusha
popw
push
sbb
or
mov
ds
sti
es
add
push
sbb
lahf
in
adc
and
data16
push
mov
cwtl
sub
inc
mov
sarb
out
insb
mov
insb
mov
imul
and
insb
mov
shll
or
and
dec
add
rcll
jmp
jb
aas
mov
pushf
das
fcom
inc
cmpsl
push
mov
mov
add
pusha
popa
daa
mov
insb
outsl
daa
or
cmp
jbe
lahf
dec
pop
mov
sbb
push
xchg
out
or
cmpsl
dec
popf
push
mov
mov
xor
vmptrld
push
jl
sbb
push
dec
dec
jb
test
ja
out
push
imul
mov
ret
pop
xchg
and
and
arpl
fadds
dec
push
es
xor
jns
in
xchg
and
push
xchg
movsb
outsl
je
mov
popa
stos
adc
pop
loopne
cs
mov
daa
sub
sub
sub
push
add
icebp
xor
jo
loop
dec
inc
cmpl
sahf
and
push
push
ret
outsb
fwait
add
insl
outsl
fs
gs
in
imull
je
mov
adc
sub
imul
and
xor
fwait
pop
bound
xchg
fiadds
les
pop
lods
add
cmp
and
icebp
inc
je
bound
aaa
inc
cld
add
inc
insb
pop
jbe
ret
aas
sbb
pop
inc
popa
imul
inc
sahf
aaa
arpl
mov
outsl
jo
insb
in
cmp
dec
sub
data16
sub
mov
cmp
inc
or
inc
xadd
sbb
inc
cmovo
fdivr
lcall
aas
nop
jo
bswap
fldt
pop
pavgb
mov
mov
pop
mov
andps
inc
dec
or
ss
cmp
pop
dec
bound
sub
out
add
test
fistpll
mov
shlb
dec
xor
in
mov
inc
push
push
push
insb
das
sarl
outsl
pop
iret
ficompl
jbe
cmpsl
ja
lahf
add
push
daa
enter
inc
fsub
inc
jns
mov
daa
outsl
inc
xchg
mov
mov
leave
daa
xchg
jge
jbe
push
je
push
jo
mov
in
push
imul
iret
and
dec
fsubl
fildll
lea
add
push
sti
mov
leave
mov
outsl
jle
int3
xchg
xchg
mov
cmpxchg
ret
or
lret
lret
mov
adc
pop
jnp
scas
push
push
pop
addr16
mov
ja
ss
stc
lahf
mov
sub
cmpsb
pop
and
fadd
jle
inc
lahf
call
inc
inc
add
push
fmuls
nop
imul
lret
xchg
dec
enter
outsl
xchg
js
sbbl
cmp
jb
movsb
mov
int3
fsubs
rorb
int3
out
insl
xor
aas
out
addr16
pushf
pusha
daa
add
push
int3
aad
in
mov
mov
inc
add
push
xor
lods
ds
pushf
ja
iret
test
hlt
pop
jbe
dec
inc
int
push
in
aaa
xor
mov
int
inc
push
stos
fdiv
mov
aaa
dec
aas
nop
addr16
ja
aam
add
repnz
aas
roll
dec
packssdw
or
movsb
inc
hlt
outsl
or
scas
add
ja
idivb
into
dec
imul
jnp
daa
lock
pop
imul
enter
xchg
push
lock
pop
das
sbb
idivl
int3
data16
in
call
test
and
xor
cmp
push
dec
sahf
or
js
mov
mov
inc
addr16
mov
jnp
repnz
rcrb
xchg
mov
adc
mov
aam
imul
or
adc
aas
out
pop
adc
cld
and
daa
out
dec
enter
push
xchg
xchg
pusha
cld
fcmovb
pop
and
mov
mov
fsubrl
jae
addr16
aam
mov
test
inc
cmc
or
pop
sbb
sub
pop
in
xor
nop
dec
aas
ja
nop
out
lahf
rcrb
inc
cs
rcrb
int
add
lods
mov
int3
dec
lahf
lods
jns
iret
test
or
pop
and
mov
shlb
cltd
nop
iret
test
rcrb
cs
pusha
ja
and
mov
mov
mov
cmp
mov
add
push
dec
jl
loopne
rcrl
mov
cmp
push
pusha
shl
fcoml
mov
sub
jg
or
leave
out
nop
nop
mov
cltd
pusha
outsl
push
cmpsl
nop
fucom
inc
sahf
cmp
hlt
or
scas
inc
cs
mov
enter
aam
push
pop
cmpsb
pop
fiaddl
cltd
nop
fisubs
iret
test
cmpsl
mov
cmp
mov
loopne
and
mov
add
mov
test
xor
xor
fistps
inc
loopne
xor
mov
jg
and
mov
lods
call
push
cmpsl
mov
pop
repnz
pop
cmpsb
mov
test
dec
fwait
nop
iret
js
inc
push
push
cmpsb
xor
mov
xor
js
scas
pop
jnp
dec
mov
sahf
movsb
jb
fistl
test
test
enter
enter
enter
stc
pop
clc
and
xor
inc
xlat
push
enter
ja
pop
sar
lahf
and
je
xchg
enter
dec
lahf
je
pop
repnz
push
aam
and
enter
mov
adc
and
cmp
lods
or
cs
lods
jg
test
js
ss
test
cs
nop
push
cs
loopne
loopne
int
mov
fnstenv
jmp
fldenv
cmpsl
in
rcll
cmpsb
fs
fldenv
cmpsl
in
nop
or
mov
pop
mov
enter
dec
add
test
mov
fwait
nop
ficompl
push
sub
out
imul
movsb
inc
jg
loopne
ds
repnz
insb
sbb
mov
pop
sbb
sub
pop
shlb
or
pusha
xchg
push
cmpsl
mov
aaa
and
push
sub
aas
mov
pusha
push
pop
cmpsl
jg
bnd
iret
nop
pop
daa
addr16
scas
jbe
dec
add
out
test
enter
shlb
in
out
clc
or
jo
bound
ja
out
pop
bound
jmp
rcr
add
dec
inc
loopne
mov
jbe
dec
pushf
fsubl
lods
rcr
mov
add
mov
lock
or
inc
fstl
mov
fs
mov
mov
jg
int3
pop
lods
pop
jnp
daa
movsb
lahf
int3
cmp
pop
adc
inc
lock
hlt
or
push
and
add
lock
in
adc
fimuls
or
inc
ja
inc
or
daa
sar
ficomps
lods
fiadds
dec
pop
call
test
insb
cmpsl
jo
fdivrl
lahf
jo
fdivl
and
cmp
and
les
xchg
cwtl
inc
imul
loopne
or
ja
rolb
aaa
lcall
push
inc
lods
lods
add
call
nop
out
shl
loopne
xorb
inc
out
dec
enter
loopne
push
cwtl
push
call
inc
pusha
jg
enter
nop
enter
subb
adc
mov
push
cmp
sub
mov
lods
jg
in
insb
daa
addr16
and
lahf
in
inc
ja
dec
repz
mov
clc
loopne
outsl
push
clc
pop
insb
inc
jmp
movsl
jbe
inc
and
lahf
dec
jns
imul
in
sahf
or
fs
nop
or
mov
or
rcl
enter
mov
add
inc
testb
and
lahf
mov
ja
in
sbbl
lcall
pusha
mov
out
rorb
sahf
or
mov
rcrl
adc
inc
cmc
mov
inc
in
push
cmp
fidivl
aas
mov
test
in
out
iret
mov
out
cs
mov
rorb
lcall
and
movsb
pop
pop
adc
das
fmuls
nop
out
push
fs
sub
outsl
adc
aad
loopne
mov
addr16
add
cmp
in
jmp
lock
insl
add
daa
fs
jmp
adc
insl
scas
pop
cmp
addr16
insb
daa
out
scas
aas
add
sbbb
bound
enter
in
push
pop
add
int
pop
out
test
and
sbb
push
push
nop
popf
pusha
jp
push
enter
xchg
add
cmp
incl
mov
pop
lods
ja
mov
xchg
in
test
xlat
or
data16
out
dec
dec
call
fdiv
push
pusha
daa
aas
addr16
mov
addr16
pop
in
add
shr
fnstcw
sbb
xchg
jmp
dec
inc
inc
sub
xchg
sub
mov
add
add
adc
out
fidivs
dec
ljmp
icebp
cmp
neg
dec
clc
adc
repz
xor
lock
call
dec
int3
mov
push
js
or
jns
push
out
sahf
push
inc
out
ds
push
js
fucom
jns
or
repz
pusha
test
push
aad
sub
fisubs
mov
js
js
adc
xchg
dec
inc
cld
push
fbld
ss
fistpl
and
nop
add
jmp
add
popa
fdivs
mov
mov
inc
mov
cmp
or
fdivr
inc
mov
add
jmp
adc
jg
add
in
ja
push
xor
add
dec
inc
dec
outsl
shrb
in
sti
inc
sbb
in
jl
inc
shr
loopne
mov
cmovle
in
outsl
add
xchg
or
filds
adc
and
inc
in
dec
mov
das
push
pop
in
fildll
leave
xchg
or
fistpll
mov
cmp
inc
test
cmp
mov
cmp
xchg
pop
scas
or
add
outsl
leave
push
lock
out
int3
xchg
xor
fstp
xor
and
add
call
push
mov
bound
fsubs
ljmp
add
lods
xor
xor
out
out
and
outsl
add
sub
loop
sub
sub
sbb
js
dec
sahf
out
aaa
mov
cwtl
add
dec
sahf
out
mov
repz
adc
test
sub
aaa
notl
sub
lahf
mov
mov
or
out
push
xor
ja
add
sub
loopne
mov
repnz
cld
lock
ficomps
icebp
and
add
pop
leave
and
fisubs
add
xlat
mov
fdivrp
and
test
sbb
add
or
out
xor
sbb
roll
xlat
scas
sbb
and
scas
in
xchg
push
add
outsl
xchg
idiv
xchg
or
fisubs
addb
mov
aaa
jmp
call
loopne
pop
jne
out
push
or
imulb
mov
test
in
jg
push
jo
js
dec
dec
pop
loopne
inc
repz
adcl
pop
leave
xor
loopne
add
js
xchg
push
es
cmp
filds
hlt
jbe
fimull
adc
outsl
push
push
outsl
mov
cmp
jg
test
push
pop
pusha
xchg
daa
xchg
mov
push
inc
cmc
scas
ljmp
cwtl
cmc
scas
data16
jbe
testb
xor
push
movsb
or
jmp
cwtl
loope
or
sub
push
sbb
ss
or
xor
scas
add
sbb
stos
outsb
xlat
or
dec
shl
or
testl
in
cmc
pop
add
rorb
cmc
mov
add
and
pop
leave
fwait
push
mov
mov
lock
divb
mov
dec
sub
add
lock
adc
addr16
add
dec
aaa
sub
outsl
addr16
sub
add
cmpsl
adc
in
testl
jecxz
xchg
sbb
pop
les
daa
hlt
shrb
clc
ja
loop
insb
cmp
xor
jg
addr16
or
mov
cs
je
add
sub
mov
clc
push
in
pop
leave
mov
push
mov
das
outsl
add
aaa
pop
in
mov
clc
cmp
pop
dec
pop
cli
aaa
enter
js
pop
stc
aaa
add
and
cs
movsb
push
in
mov
popa
imul
iret
fsubl
andb
add
rol
loopne
insb
cli
scas
in
data16
or
popa
inc
call
int
mov
push
movsb
adc
clc
sti
fsubrl
repz
insb
sbb
outsl
mov
mov
lock
aas
add
decb
cli
cmpsl
bound
aaa
or
or
ss
inc
xchg
sti
push
sti
outsl
add
aaa
imul
movsb
mov
fwait
mov
rolb
add
add
scas
in
js
add
cld
shll
cld
pop
and
mov
add
jl
out
add
sbb
sub
add
adc
inc
or
out
pop
sar
out
les
or
add
ss
mov
addr16
push
mov
aas
addr16
daa
mov
mov
movsb
hlt
fs
in
clc
es
addr16
push
add
mov
dec
divl
or
xor
test
incb
push
incb
imul
movsb
out
pop
add
or
aaa
dec
mov
nop
out
sahf
rcl
lock
mov
filds
inc
lcall
fdivl
test
clc
out
push
mov
das
clc
ja
push
call
inc
decl
shrl
mov
add
dec
adc
shrl
jae
xchg
imul
scas
fdivrl
sarl
cmp
lcall
dec
sarl
stos
xlat
cli
adc
cmp
fs
pop
mov
iret
repz
shl
mov
jbe
or
pop
pop
mov
sahf
out
mov
ds
idivl
jns
inc
nop
dec
push
addb
jns,pt
out
push
dec
jnp
int
repz
repz
aas
mov
fisubs
xchg
mov
sbb
repz
ljmp
out
mov
sahf
out
clc
sbb
cmp
repz
out
ds
shl
xor
jne
iret
repz
int3
sub
fucom
jns
fwait
data16
dec
pushf
push
repz
out
subl
sahf
pop
mov
imul
mov
jns
jg
call
lahf
cmpsl
stc
cmp
adc
dec
fwait
or
cmpsb
movsb
push
inc
insl
test
movsl
ds
repz
mov
sahf
out
inc
insl
nop
int3
out
cmp
repz
test
jl
cmpsl
jb
rorl
xchg
jns
out
stos
das
pop
cwtl
loopne
repz
sbb
lods
out
xor
stc
lods
pushf
in
scas
dec
repz
popa
in
inc
scas
lahf
out
insb
shll
mov
repz
insl
mov
test
add
repz
adc
push
mov
stc
sub
sbb
testb
sbb
out
or
mov
cli
cmpl
cmpsl
stc
cmp
sbb
sahf
out
xor
leave
adc
dec
jb
dec
repz
sbb
push
xchg
fnstcw
stc
xor
pop
lcall
sarl
cwtd
in
aas
ret
sti
xor
cmpsl
jle
xor
outsb
stc
mov
mov
push
hlt
mov
mov
enter
leave
push
stc
xor
out
out
lret
lret
repz
cmpsl
xchg
rolb
sub
cmp
out
int
into
popa
test
out
iret
xor
repz
inc
gs
lret
push
shll
jge
dec
fldt
jbe
push
sarl
lcall
mov
iret
repz
fadds
dec
mov
pop
dec
repz
pop
loop
xlat
dec
jae
cmpsl
stc
cmp
jle
mov
sbb
out
xor
in
xor
insl
stos
cmp
repz
inc
fstpt
negb
fsubrl
ds
repz
inc
fisttps
in
flds
shlb
cld
ss
repz
in
imul
jbe
dec
repz
repz
imul
cld
incb
jp
lahf
add
ds
mov
lahf
int3
cmpsl
xor
movb
mov
pusha
aas
aam
cmp
ret
adc
push
adc
sbb
lods
nop
out
cmp
push
mov
leave
mov
inc
pop
aaa
mov
call
insl
mov
insl
rol
jg
inc
cmp
xchg
adc
inc
sarb
and
test
inc
sti
jae
jge
aas
rcll
jg
movsl
shr
add
sub
aas
andps
inc
in
cmp
pop
arpl
mov
pop
fwait
and
mov
fistpll
adc
dec
xchg
aas
pop
out
push
push
push
outsl
jg
and
mov
sbb
in
push
inc
sti
pop
ss
and
pushf
sub
pushf
divl
aas
test
inc
cmp
dec
aas
pop
jnp
leave
in
xlat
outsb
fldl
inc
insb
mov
jo
daa
pminsw
mov
outsl
addr16
sbb
add
jmp
pop
or
in
pop
cmp
pop
push
je
inc
ffreep
adc
jno
inc
dec
push
iret
shlb
push
pushf
push
enter
lahf
js
sahf
xorl
js
or
les
fiadds
xchg
jns
add
or
or
jno
pop
jns
push
jge
loopne
enter
ds
jl
jne
je
in
aas
scas
orb
les
sbbl
pop
and
xchg
fadds
or
pop
ja
push
lahf
push
dec
movb
scas
add
add
inc
test
xchg
cmp
inc
out
es
pop
inc
or
push
mov
push
lahf
push
xchg
push
push
and
add
dec
sbb
mov
pop
add
push
xlat
push
jns
mov
iret
push
add
cmp
cwtl
mov
and
rcll
shrl
pusha
negl
lea
push
daa
sub
push
xor
stos
js
xchg
decl
push
pop
and
dec
jnp
sahf
or
pop
in
ja
adc
fwait
sub
lret
movsb
push
aas
out
push
daa
jns
pop
rclb
mov
push
leave
xchg
adc
mov
shll
cmp
xorps
inc
repnz
xchg
scas
stos
js
sbb
mov
jb
mov
mov
jg
inc
jo
iret
push
push
out
xchg
mov
add
inc
sbb
andb
push
sub
pop
xchg
rorb
pop
rcr
js
adc
mov
es
sarb
jl
push
jb
add
inc
mov
adc
push
daa
cmp
cmp
jno
dec
mov
xor
pushf
out
mov
lods
push
pop
cmp
repz
add
mov
mov
push
enter
roll
mov
or
sbb
addr16
jbe
xor
push
in
xchg
fildl
mov
daa
daa
pop
add
leave
mov
daa
in
ljmp
call
xor
pop
sub
and
adc
push
out
jae
sbb
pop
mov
add
in
pushf
dec
sub
xlat
popf
daa
pushw
mov
mov
add
xchg
xchg
xchg
xchg
cltd
mov
xchg
sbb
mov
mov
pushf
fsubl
fsubl
dec
sahf
pushf
cld
add
push
daa
push
comiss
mov
inc
lea
pop
popf
xchg
or
mov
lock
add
cwtl
lea
mov
push
add
out
fnstsw
or
jno
out
or
or
xchg
iret
add
or
fstpl
jmp
push
daa
inc
popf
pushf
fsubrl
push
addps
ss
jl
mov
xchg
lods
adc
out
pushf
cmpsl
add
in
add
adc
add
push
ret
je
repnz
es
xchg
subb
adcl
mov
and
fdivs
mov
adc
cmpsl
mov
daa
push
ja
add
ja
push
daa
jo
xlat
pop
push
outsl
lcall
mov
repz
mov
push
pop
aad
loopne
push
repnz
out
cmp
or
cs
call
nop
out
pop
das
enter
dec
and
sbb
stos
ja
push
add
sbb
sub
mov
lahf
cmpsl
popf
stos
sahf
out
pushf
mov
push
add
add
insb
jns
lret
imul
cmc
popl
repnz
xchg
bound
pop
pop
and
or
leave
xor
shlb
sbb
xchg
push
rcrb
xchg
pushf
pop
xor
push
enter
and
daa
cld
mov
mov
and
pusha
xchg
call
push
repnz
je
pop
sbb
test
or
dec
inc
aas
outsl
sub
clc
sbb
sbb
sbb
scas
pusha
add
inc
inc
xchg
pop
xor
mov
negl
push
inc
lea
cmpsl
aam
fbld
cmp
sbb
sbb
pop
enter
stc
pop
out
mov
or
adc
jg
dec
dec
xlat
sbb
xchg
imul
push
pop
xchg
inc
outsl
push
sbb
pop
xchg
xchg
ja
sbb
sbb
pushf
xchg
adcl
dec
ja
adc
daa
xor
insl
mov
pop
rcll
or
cwtl
sbb
jb
xchg
add
cmp
sbb
outsl
add
in
xchg
add
mov
mov
push
and
scas
inc
push
xchg
dec
leave
mov
mov
and
pushf
imul
rclb
push
addr16
addr16
testl
mov
xchg
pop
in
xchg
fneni(8087
out
in
add
xchg
daa
add
sbbb
out
es
xor
cmp
inc
adc
or
iret
enter
lcall
add
xchg
pop
pop
cmp
and
xchg
pop
and
and
jmp
inc
jl
mov
test
das
out
ret
xchg
in
out
xchg
repz
das
cli
xchg
add
leave
repz
sbb
es
xor
xchg
inc
or
mov
xchg
out
xchg
jmp
addr16
and
insl
mov
fs
fnstsw
ja
xchg
or
inc
iret
add
xchg
paddusb
call
addr16
cmp
pop
cvtps2pd
rorl
jmp
cmpsl
xchg
out
xor
pop
in
or
aad
pushf
push
or
enter
in
sub
push
in
into
inc
repnz
je
jl
scas
pop
mov
jmp
mov
rcll
add
mov
and
loopne
es
xchg
mov
pop
fiaddl
cmp
nop
scas
leave
mov
in
les
jne
xchg
or
repnz
xchg
cmp
dec
std
aaa
add
cltd
dec
dec
jnp
lcall
cmp
shld
lfs
cmp
cltd
in
and
in
enter
pop
mov
push
pop
scas
inc
out
push
jns
pop
or
hlt
mov
popf
sbb
fcoms
push
es
inc
dec
and
pushf
and
daa
inc
and
iret
andb
fs
sub
xchg
es
repnz
daa
add
mov
xlat
push
cmp
add
dec
sbb
iret
xlat
cmp
ja
fisttps
add
cmc
mov
add
adc
lahf
sbb
aam
jmp
enter
jg
adc
cwtl
adc
xchg
cmp
xlat
add
sub
dec
sub
enter
imull
aas
popf
enter
popf
popf
popf
popf
xchg
enter
popf
jns
test
cmpsl
aaa
xchg
pushf
mov
cmp
rcl
or
lea
and
push
push
cs
pop
jo
jmp
push
out
sbb
or
push
lahf
stos
addr16
stos
jne
mov
add
in
rorl
divb
mov
lock
and
mov
lahf
ss
das
dec
push
add
push
pop
lahf
or
sub
mov
scas
daa
daa
pop
lods
pushf
add
pop
leave
and
mov
daa
mov
pop
out
mov
cs
mov
push
mov
cs
dec
nop
lcall
add
vmwrite
add
add
and
xchg
aaa
push
pop
ja
ficoml
scas
imul
push
push
xorl
mov
out
les
fsubrl
int3
xchg
add
push
sub
daa
fisttpll
cmp
popf
mov
inc
ja
add
ljmp
orl
xchg
cmpsl
push
insb
add
dec
dec
rcr
loope
xor
icebp
stc
mov
pop
andb
mov
das
push
pop
cmp
dec
sahf
out
inc
push
add
iretw
in
in
push
jno
das
xchg
mov
negb
cmp
iret
or
mov
iret
jae
adc
ljmp
cmc
mov
mov
cmp
movsb
and
xlat
xlat
data16
pop
addr16
movsb
fbld
sbb
mov
nop
sets
add
movsb
daa
dec
das
mov
mov
aas
push
mov
in
pop
hlt
cld
cs
add
or
cmpsl
adc
enter
pop
or
rcr
xchg
decl
pushf
cmpsb
pop
andb
mov
mov
jmp
imul
incl
cmpsb
xor
and
iret
cmpsb
xchg
addb
cmp
lret
inc
push
lea
ljmp
pop
sti
push
ret
xchg
subb
scas
nop
mull
pushl
stos
xlat
push
pop
or
les
xor
mov
push
rol
cmp
sub
xor
add
jb
cmpsl
xchg
cmpsl
sbb
test
fistpll
dec
sahf
ja
dec
push
push
add
enter
fildll
jns
or
or
pushf
fbstp
add
mov
xchg
daa
push
out
pop
test
push
add
cmp
in
pop
pop
cs
add
das
aaa
test
aas
test
jb
pop
add
push
leave
leave
inc
pop
lea
and
xor
test
mov
mov
js
das
incl
femms
add
sbb
test
test
jg
test
mov
jle
mov
mov
pop
mov
dec
dec
cs
iret
daa
fimull
divb
xor
stos
andl
mov
stos
pushl
inc
ja
stos
ja
pop
int
mov
rorb
pushf
loope
enter
xchg
stos
xor
es
ss
incl
stos
push
stos
mov
loop
je
pminub
cmp
mov
int
fsubrs
addr16
xlat
iret
fldt
xchg
iret
lcall
xchg
sbb
lds
xchg
or
aad
fisttpll
add
xchg
in
push
add
cmp
outsl
or
cmp
adc
leave
repz
sub
repz
cmp
inc
adc
adc
adc
adc
repnz
jne
lods
mov
jl
aaa
mov
cmp
lods
aaa
jecxz
out
das
in
repnz
push
dec
cmp
enter
inc
lods
dec
psrld
loop
lods
push
xchg
lods
jmp
dec
dec
xchg
mov
cmp
scas
inc
unpcklps
aaa
leave
leave
add
dec
push
mov
push
scas
mov
int
mov
jg
add
mov
mov
scas
popf
pushf
je
pushf
movsb
lods
dec
or
repnz
mov
mov
repz
fsubrl
int3
push
cmovle
js
aam
add
pop
jns
scas
xchg
mov
aas
in
pop
dec
in
sarb
jp
or
aam
xchg
dec
or
pop
jne
popf
mov
adc
adc
nop
ja
enter
fmuls
and
vmwrite
cmp
cmp
cmp
sbb
pop
sbb
jmp
jge
out
daa
iret
enter
add
mov
pop
cwtl
popf
pushf
pop
enter
jle
or
pop
mov
xchg
incl
repnz
cmp
shr
outsb
add
cmp
scas
add
iret
add
xlat
decl
hlt
cli
inc
incl
push
cmp
jmp
jg
es
xor
push
popf
out
pop
cmpxchg
pusha
push
add
jns
jne
jl
iret
mov
mov
js
out
or
dec
ss
mov
sarb
out
and
sysret
mov
push
add
add
add
add
jns
pop
pop
outsl
or
jns
out
or
pop
mov
or
out
add
add
mov
xchg
das
shlb
jmp
sbb
in
or
in
daa
sbb
enter
push
mov
mov
cmp
daa
and
repnz
jl
ds
and
inc
mov
mov
pop
daa
pop
jmp
lahf
call
add
out
sbb
fsubrl
enter
mov
sahf
pushf
pushf
cwtl
nop
mov
push
inc
aas
shll
sbb
mov
int3
iret
iret
leave
in
jbe
addr16
cmovp
ficoml
jmp
dec
or
es
mov
repnz
mov
js
jmp
inc
lret
mov
in
mov
push
outsl
jmp
stc
sbb
xchg
out
lods
sbb
stos
xchg
xchg
xlat
push
mov
mov
pop
outsl
bound
fsubl
ltr
iret
sbb
ljmp
or
or
cmp
add
push
rol
mov
xorb
imul
inc
inc
hlt
and
pmulhuw
movsl
notb
inc
sbb
scas
popf
loopne
jb
inc
add
pop
or
mov
adc
je
das
mov
mov
pop
idivl
mov
add
mov
js
orb
in
outsb
fucomp
xchg
pop
lcall
stos
iret
or
call
adc
mov
lahf
xchg
xchg
je
mov
add
sub
mov
mov
inc
fwait
js
pop
addr16
cmpsl
push
mov
insb
ja
ja
xchg
xchg
xchg
xchg
fwait
mov
leave
inc
into
pusha
fsubrl
call
xchg
add
es
inc
mov
push
js
cmpsb
aaa
nop
decl
out
and
mov
into
leave
leave
inc
jl
mov
ja
out
das
mov
inc
jns
in
pop
fcos
pop
sub
push
ss
pop
lods
cmp
leave
mov
add
pushf
cmp
test
mov
cmpsl
push
loopne
or
mov
fsub
xchg
add
cltd
dec
jbe
xor
mov
outsb
pop
jg
xor
jg
mov
in
es
xchg
cltd
lsl
test
cmp
jmp
xchg
aad
in
inc
sbb
push
xor
mov
xchg
dec
xchg
imul
orl
pop
cs
or
or
jns
outsb
cmp
das
femms
cmp
lock
out
mov
push
js
push
mov
sahf
add
xor
jns
xchg
xchg
cmp
pop
push
int3
jo
cmp
punpckldq
and
pusha
dec
mov
sahf
packsswb
jns
cmpsb
add
mov
or
adc
add
add
outsb
fnstsw
lahf
cmp
inc
push
pop
mov
or
or
mov
int
ficoml
xlat
addr16
add
outsl
sarb
add
adc
mov
mov
inc
mov
fs
add
out
outsl
jp
xchg
push
pop
lahf
stos
dec
mov
or
xchg
cmp
call
pop
and
mov
ja
movsl
mov
rdpmc
mov
daa
rorb
dec
pmaxsw
mov
xlat
jbe
into
inc
dec
test
push
test
add
aas
and
in
push
iret
shll
pop
in
pmuludq
add
jo
mov
add
cmpsl
or
in
dec
outsl
and
or
das
mov
mov
xchg
mov
mov
push
xlat
push
out
popf
fisttpl
pop
movsl
in
dec
sahf
add
mov
pop
int
or
lock
add
mov
aad
aaa
or
pop
shrb
aam
mov
xchg
xor
ja
out
jbe
xchg
push
outsb
jbe
jle
mov
add
in
in
mov
mov
clc
dec
push
mov
mov
add
push
or
pop
adc
jno
outsb
nopl
sub
jbe
cmp
mov
inc
dec
xor
push
sar
in
sbb
jp
jp
pop
and
add
mov
cmp
mov
and
xchg
mov
sub
add
fiadds
push
mov
fisubl
mov
push
pop
addr16
fcompl
jae
fists
adc
mov
mov
xchg
aas
push
mov
push
add
push
sahf
xchg
out
paddusb
pop
in
push
fidivs
dec
es
mov
push
ret
cmp
insl
or
ja
shld
in
fs
jbe
in
jbe
or
xchg
leave
leave
leave
test
pop
and
push
jbe
push
mulb
popf
lock
pop
and
comiss
in
sub
pop
jnp
dec
ss
push
pop
outsl
les
jo
add
xchg
xchg
add
sbbl
mov
or
cs
idiv
sysret
lds
lea
pop
lds
pop
push
mov
lds
add
push
ja
mov
xchg
fstpt
test
ret
fildl
lds
mov
out
or
or
clc
push
mov
dec
and
iret
add
call
push
add
sbb
insl
divb
jnp
out
xor
cmp
out
inc
aas
daa
iret
jmp
push
negl
or
jl
ds
cmpsb
jle
pshufw
and
fadds
xchg
daa
mov
scas
push
ja
addr16
add
xchg
pop
push
push
push
rdrand
pop
out
jecxz
push
scas
push
add
fst
popf
daa
ljmp
pop
clts
repz
mov
mov
maxps
lds
push
jle
adc
push
mov
cmp
ud0
mov
adc
scas
sbb
jo
inc
fs
mov
outsl
mov
cmovne
mov
dec
push
add
push
fnsave
testl
sahf
xlat
iret
insl
or
enter
jle
or
push
enter
sub
push
inc
inc
inc
sub
enter
scas
adc
or
pop
cmpb
pushf
push
repz
pushf
loopne
imul
jnp
jmp
push
add
in
push
xchg
fwait
mov
push
decl
inc
ret
dec
insb
push
outsl
add
fldt
aas
pop
sbb
dec
ret
xchg
xchg
and
xor
outsl
mov
mov
pushf
je
out
add
cmp
repz
push
scas
mov
cs
or
or
or
or
add
cmp
push
sbb
outsb
xchg
inc
fmulp
rdpmc
das
cs
out
push
xchg
push
mov
pop
lret
movd
insl
fnstsw
jbe
jle
push
scas
lret
mov
or
jno
adc
fcomps
mov
jns
cmpsl
iret
push
add
loopne
or
xlat
ljmp
mov
pop
jl
je
pop
jo
mov
icebp
jns
inc
xor
mov
cmc
add
fcompl
int3
scas
adc
and
push
cmpsl
cmpsb
cmp
filds
out
nop
aaa
dec
call
btr
mov
into
icebp
in
push
fucomip
int3
out
cmc
int3
in
and
int
push
or
out
sahf
out
or
and
int
adc
repz
pop
adc
outsb
adc
iret
repz
adc
cmp
repz
lcall
iret
mov
mov
in
pop
push
adc
in
adc
adc
in
in
push
or
sub
out
push
fs
add
test
adc
loope
test
sub
ds
pop
in
inc
daa
and
mov
into
xor
lahf
cmp
into
enter
inc
into
dec
push
into
pop
roll
pop
daa
repnz
test
outsb
and
pop
mov
pushf
jl
mov
pop
mov
pop
into
xchg
dec
push
and
lcall
dec
adc
ja
cs
xchg
dec
addr16
enter
outsl
push
outsl
ja
add
jb
xchg
iret
xchg
iret
mov
mov
push
in
outsb
push
lcall
mov
ror
cmp
xchg
pop
sub
call
fwait
mov
outsb
mov
pop
int
jg
mov
fisubrl
test
pop
ja
pop
out
fisttpll
es
negb
jmp
add
and
inc
divb
cmp
inc
rcll
add
xlat
pop
fs
insl
js
push
mov
das
mov
out
pop
push
cmpsl
push
push
sahf
mov
sub
and
inc
neg
incb
rorb
xchg
mov
xchg
rclb
nop
fbld
rcrb
outsb
mov
pop
cs
ss
push
or
cmp
dec
push
or
or
pop
push
data16
add
adc
leave
enter
rclb
push
ljmp
pushf
fmull
les
or
clc
cmp
iret
sti
rorb
xorb
push
xor
mov
push
pop
test
shll
rcrl
add
dec
push
out
add
and
sahf
outsb
or
jbe
or
into
mov
xchg
cmpsl
negl
xchg
mov
outsl
test
push
daa
xchg
in
and
ror
in
aam
fsub
mov
in
pmuludq
inc
push
mov
pop
aam
aam
mov
xor
ja
nop
into
in
in
jo
js
xor
xor
xchg
add
cmp
popf
mov
jb
jb
out
lock
cmc
mov
push
in
mov
sub
cmove
jmp
movsl
daa
adc
aad
fmull
pop
addr16
rcl
cwtl
fs
insl
pop
dec
out
out
xchg
jg
sbb
daa
lcall
pop
icebp
aad
xchg
inc
addr16
ds
add
or
ret
jmp
or
xor
data16
es
jb
fwait
sbb
cmovae
mov
js
aaa
mov
or
orb
out
pop
lcall
iretw
push
push
mov
dec
sahf
xchg
pop
add
add
mov
jns
lret
push
xchg
cmp
iret
pminub
fadd
movsl
js
std
add
and
loopne
or
test
mov
incl
das
cmp
add
out
dec
and
cmpsl
jbe
sub
test
or
jg
fsub
push
fwait
cmp
repnz
push
add
push
pushf
fmull
cmp
pushf
pushf
pushf
inc
dec
push
or
leave
leave
leave
pop
fs
jbe
add
or
fcomps
mov
fcmovne
in
and
ja
fcompl
cmpsl
xchg
movzwl
xchg
pusha
push
push
add
push
scas
push
fldt
mov
push
jmp
fldcw
pop
invd
fwait
cmp
in
push
push
or
xor
fildl
aas
pmulhuw
push
enter
fstps
cmp
imul
sahf
pushf
fucom
fstps
jo
mov
test
jecxz
fwait
addr16
in
cmpl
addb
fildl
jp
inc
test
jae
rorl
pop
daa
sbb
or
push
add
push
mov
addb
add
sub
pusha
cwtl
push
mov
insb
xchg
mov
sets
loope
mov
pop
fisubrs
adcl
imul
xchg
dec
jnp
scas
xchg
out
jbe
addr16
add
mov
dec
cs
ja
fcmovnb
adc
and
ljmp
cmp
lahf
adc
aas
sbb
and
repz
add
add
repz
fcompl
push
dec
pushf
pushf
fdivrl
add
cmp
repz
or
or
outsb
repnz
push
repnz
imul
insb
xchg
test
dec
xchg
push
xchg
movsb
fsubrl
mov
add
in
into
insl
pop
movq
mov
fisttpll
push
and
or
adc
or
and
pushf
dec
and
insl
inc
fnsave
dec
fstl
pop
fucomp
arpl
stos
btr
mov
popf
fcmovnb
pop
lret
jg
dec
imul
iret
mov
jnp
repz
testb
jnp
movsb
fwait
cmp
fwait
adc
mov
jecxz
xchg
iret
jae
repz
sbb
fidivrs
leave
sti
nopl
or
pop
sbb
and
push
and
jbe
xor
dec
inc
push
es
repz
fwait
movaps
sub
repz
sub
imul
iret
repz
jnp
subl
lock
mov
add
nop
out
insl
testb
pop
fidivs
ss
dec
push
mov
cmp
xchg
add
push
daa
inc
sahf
mov
cmp
sub
ja
dec
sbb
adc
sbb
jmp
jbe
rcll
iret
in
in
jb
test
pop
and
xchg
xchg
pop
add
out
mov
xlat
loop
out
out
sbb
push
pop
jle
fwait
popf
cmp
loopne
sub
dec
aaa
pslld
jae
or
dec
sahf
ja
push
adc
adc
cmp
in
unpcklps
iret
lds
rclb
fistpl
dec
iret
repz
sbb
sbb
xchg
loope
push
sbb
sbb
cmp
xor
inc
and
cmp
repz
and
push
and
andb
es
daa
mov
jb
loope
loope
loope
loope
xchg
and
loope
loope
loop
cmp
xor
loop
xor
popf
popf
popf
popf
pop
aas
loop
dec
loop
push
loop
pusha
loop
iret
fwait
popf
fildll
pushl
daa
andl
mov
repz
and
cmp
repz
into
pop
fstps
repz
repz
out
sbb
jns
in
sbb
add
push
sbb
jns
out
es
dec
sahf
out
sahf
cmp
inc
dec
push
dec
jns
out
pop
dec
push
ja
dec
pop
aaa
sqrtps
pop
push
jle
mov
dec
cmovp
sahf
out
pop
lcall
mov
aad
xchg
popf
aam
loopne
ss
push
mov
and
xchg
pop
add
aas
in
getsec
mov
femms
popa
pushf
mov
push
out
sahf
addr16
push
pop
orb
sahf
out
sahf
or
leave
and
or
or
iret
repz
jmp
repz
adc
pop
in
iret
repz
adc
adc
cmp
repz
das
sbb
iret
repz
inc
sbb
pop
sbb
iret
repz
sbb
cmp
repz
mov
xchg
and
fcmovne
lahf
test
outsl
loopne
mov
aam
fsubr
out
or
mov
dec
add
outsl
out
sahf
aaa
or
sbb
adc
jp
out
adc
pop
in
ds
or
out
sahf
out
or
mov
das
sahf
jnp
dec
xchg
xchg
out
es
lret
push
push
movsb
cmovo
mov
push
sbb
out
shrb
addr16
wbinvd
popf
cmpsl
pop
ds
add
dec
fidivs
jmp
out
push
pop
push
push
aaa
jns
xlat
wbinvd
push
push
or
setle
jns
or
cs
sahf
out
cmovbe
dec
adc
in
in
pop
pcmpgtd
cmp
mov
mov
sbb
repz
jbe
out
fldl
ja
push
add
push
xor
push
pop
call
rep
push
add
daa
mov
cmp
das
dec
push
pop
cmp
daa
daa
fs
je
jns
iret
repz
mov
in
in
stos
btr
ret
lret
rcr
leave
leave
leave
leave
jecxz
repz
and
fwait
jmp
push
and
sbb
and
inc
jle
and
sub
and
ja
jne
xchg
push
pop
add
add
mov
bound
jb
add
orb
rep
shld
lods
daa
iret
cmp
mov
fcmovne
rep
dec
aam
adc
in
leave
out
xchg
in
hlt
scas
push
sbb
enter
ljmp
outsb
loope
cmp
outsb
inc
ljmp
push
push
push
cmp
jle
mov
xchg
out
jns
int
or
mov
push
lods
movzwl
ret
in
adc
out
psubw
adc
mov
bndldx
and
sbb
sbb
inc
repnz
iret
sbb
sbb
jae
pop
jge
and
iret
jae
xchg
sahf
and
cmp
mov
dec
outsb
daa
loopne
jmp
add
repz
and
and
daa
iret
das
sub
adc
scas
xchg
lock
in
iret
repz
scas
push
add
cmp
add
add
repz
stos
pop
mov
in
sahf
addr16
mov
or
pushf
pushf
cmp
fisttpl
or
jmp
dec
inc
sahf
pushf
sti
add
or
iret
in
in
adc
and
sub
leave
repz
cmp
cmp
inc
es
repz
sbb
mov
pop
push
mov
xchg
iret
and
xchg
xchg
xchg
xchg
mov
ret
xchg
xchg
ret
in
dec
and
in
in
das
cmc
in
xchg
push
add
sbb
mov
movhps
push
add
ds
sahf
pushf
pushf
dec
push
out
outsl
bnd
into
jl
push
or
or
jbe
push
mov
pop
jg
lahf
out
outsb
mov
mov
std
fucomi
enter
or
adc
mov
add
aas
femms
sbb
sbb
cmp
repz
sbb
mov
push
push
pop
pop
mov
fucomi
data16
lahf
jl
mov
xchg
fisubrs
inc
movmskps
decl
sub
push
sub
sub
push
sub
jg
cs
das
popf
xor
repz
xor
sahf
divl
into
leave
xor
fistps
ss
aaa
idivl
data16
lock
cmp
jns
repz
cmp
cmp
cmp
aas
loope
scas
negl
add
inc
or
out
inc
and
iret
mov
push
push
adc
add
aad
repz
jno
or
xchg
xchg
pop
ss
jg
pop
jge
jg
pop
and
add
outsl
mov
outsl
mov
cmp
repz
xchg
inc
iret
leave
in
clc
or
add
mov
nopl
repnz
jns
out
push
push
inc
cmovg
in
sahf
out
adc
je
repz
orl
cmp
leave
mov
ret
setle
in
into
pop
sbb
dec
adc
or
push
push
icebp
in
jbe
cvttps2pi
inc
repz
das
jg
adc
adc
ja
push
mov
ja
cmp
in
enter
jns
cmpsl
add
add
dec
cmp
hlt
hlt
repz
sub
or
sahf
out
fimuls
mulps
movq
adc
jns
aaa
jns
unpckhps
nop
push
in
sahf
out
pop
cmpsb
sbb
mov
sarb
jns
fisttpll
sbb
cmc
repz
out
and
and
adc
dec
pop
fisubs
push
pop
cvtpi2ps
cs
repz
daa
inc
sub
push
lret
rep
daa
popa
emms
push
sub
fnstcw
fbstp
mov
sub
cmc
test
das
push
add
add
add
stc
hlt
cmp
add
push
and
push
div
jg
testb
out
dec
andl
jg
daa
out
mov
addr16
jge
daa
pop
fsubr
mov
xchg
sahf
pop
repz
repz
or
mov
aad
sbb
aad
loopne
idivb
testb
mov
push
adc
sbb
pop
out
sahf
testl
cmp
mov
sbb
push
push
push
sbb
cmp
repz
sbb
repnz
pop
andb
lcall
mov
mov
and
in
xchg
in
jmp
scas
aaa
cvtdq2ps
scas
mov
jg
cmp
sahf
adc
sbb
shrb
out
daa
dec
das
repz
loop
lahf
jb
scas
push
add
repz
mov
xchg
add
out
sahf
fldt
or
or
or
or
jns
or
or
out
adc
nopl
mov
sub
push
adc
jbe
mov
adc
jns
in
jnp
xchg
sbb
xchg
sahf
test
push
sub
out
pop
xor
in
push
add
add
or
jg
push
add
es
mov
pop
xor
or
or
repnz
ljmp
in
jbe
aas
jbe
jle
adc
mov
adc
adc
jbe
pop
mov
mov
out
sbb
sbb
iret
repz
sahf
sbb
out
push
out
pop
bswap
repz
and
and
dec
and
cwtl
xchg
sti
fisubrs
inc
cmp
inc
pop
push
divps
iret
repz
add
ja
cmp
mov
cmc
in
or
iret
shrl
femms
int3
pushf
cmp
repz
adc
clc
outsl
jbe
repz
cld
push
cld
das
sbb
adc
daa
daa
femms
sbb
and
jns
out
das
sbb
iret
cmp
inc
sbb
push
jae
jg
cld
out
iret
repz
dec
and
repz
es
pcmpgtb
rol
lret
cld
pop
sub
xchg
cmc
orb
pop
shr
nop
mov
insb
mov
sbb
push
pop
and
mov
std
inc
xor
dec
std
arpl
jno
outsl
das
jl
pop
movsb
cmpsl
dec
dec
push
mov
lahf
stos
stos
cmpsl
fisttpl
mov
pop
syscall
repz
xchg
lret
pop
loope
in
cmp
es
or
syscall
or
mov
decb
and
jns
out
inc
pop
push
adc
jns
out
data16
jl
in
sahf
out
pop
fistps
ljmp
mov
repz
mov
and
out
cmp
dec
and
push
and
jns
xchg
popf
test
mov
out
sahf
out
leave
daa
aam
cwtl
pushf
je
fisttps
es
cwtl
cmp
adc
jnp
xor
dec
or
xor
push
iret
repz
mov
and
in
in
daa
aaa
push
ss
dec
pslld
iret
outsl
push
sahf
xchg
xchg
pushf
cmp
jbe
push
push
cmp
stc
icebp
aas
push
leave
dec
jmp
scas
mov
outsb
sahf
iret
movnti
jns
in
in
fldt
out
push
icebp
iret
xor
das
or
unpcklps
pop
jbe
cmp
sub
fsubrp
dec
addps
adc
jbe
mov
adc
in
pushf
xcrypt-ctr
cmpsl
push
pop
mov
daa
daa
mov
mov
in
mov
cmp
clc
add
pop
push
sahf
out
outsb
nopl
and
jae
repz
pop
das
and
fisttpl
sub
jns
stos
sub
fidivs
stos
add
das
cs
pushf
cmp
in
push
push
xor
repnz
repz
sahf
xor
in
jbe
mov
insl
mov
add
xchg
dec
ds
xor
pop
add
imul
lret
xchg
idivl
pop
push
rcr
in
out
push
negl
in
psadbw
adc
scas
adc
aam
push
push
iret
ucomiss
dec
dec
es
or
xchg
in
out
or
sbb
or
inc
fsubl
test
mov
mov
daa
inc
mov
push
push
ja
dec
pop
mov
divl
xor
pop
pop
mov
out
subl
stos
sub
inc
and
and
fnstenv
mov
add
push
js,pn
subl
popl
or
cs
aaa
xlat
mov
insl
or
xlat
mov
fisubrl
bswap
repz
add
add
leave
repz
or
or
rclb
inc
mov
adc
daa
popf
fsubr
xorb
and
pop
inc
inc
push
addr16
das
outsb
mov
in
push
xorps
insl
iret
addl
jb
or
push
pop
andb
and
dec
outsb
aas
addl
mov
in
ror
mov
into
aas
xlat
cltd
pop
shl
sbb
data16
inc
loopne
lock
mov
and
add
bound
dec
add
or
imul
imul
pop
sbb
xchg
jecxz
sbb
add
dec
pusha
sbbb
iret
fisttps
mov
popl
jle
test
shll
mov
inc
jg
pop
mov
pop
inc
mov
iret
mov
inc
sbb
in
call
adc
push
aas
and
ficompl
pop
fisubrl
xor
fcomp
loopne
add
jle
jns
xchg
or
pushf
and
xchg
out
sahf
out
mov
jns
je
pusha
push
dec
inc
jns
out
cmp
xor
sub
jns
out
and
sbb
dec
repz
adc
or
and
in
cmp
jnp
and
push
faddl
aam
shl
iret
repz
movsb
mov
iret
xorb
repz
out
insb
push
fs
pop
push
dec
mov
into
out
lret
sbb
clc
and
cmp
repz
aam
mov
cmp
mov
js
sahf
out
pop
jo
pusha
push
cmp
mov
sbb
or
and
jge
cmpsl
call
jle
push
push
fistpll
pushf
push
je
pusha
and
icebp
sub
insb
add
add
mov
out
insb
push
js
clc
mulb
insl
popf
incl
dec
hlt
xor
cmp
pop
aas
sbb
es
push
or
xor
pop
or
or
push
dec
lock
xorb
icebp
call
push
mov
push
inc
jg
mov
mov
scas
pop
shll
dec
inc
sgdtl
push
inc
xchg
pop
adc
jg
lcall
inc
xor
sti
add
mov
arpl
mov
mov
testl
das
outsl
sbb
mov
iret
xchg
into
add
pop
cs
mov
push
js
stc
pop
jg
push
in
mov
stc
pop
out
cmp
adc
inc
sub
out
xchg
outsb
sahf
imull
sbb
popf
out
and
and
cmp
jmp
cmp
adc
pop
jl
jnp
push
sbb
hlt
and
adc
push
dec
push
fdivrs
out
adc
aam
rorb
jnp
out
or
adc
jae
nopl
cmp
out
sahf
out
xor
sub
and
jmp
push
and
cmp
repz
and
or
aaa
inc
out
mov
test
insl
cmp
orb
inc
pop
inc
mov
shll
xor
jl
pop
mov
subb
inc
cmp
xor
lea
pushf
rcr
fistl
cmp
iret
repz
pop
js
mov
repz
out
cmp
dec
insl
add
jns
out
push
pop
ja
mov
loopne
iret
loopne
jae
das
push
dec
insb
push
xor
lods
dec
pop
daa
jns
pop
mov
cli
or
pop
repnz
or
ret
dec
or
and
adc
lret
mov
pop
and
sbb
jmp
ret
inc
and
sahf
mov
sub
inc
rcrb
and
sbb
cmp
incl
xchg
xlat
xchg
inc
push
add
inc
stc
mov
adc
mov
decl
fistpl
js
inc
outsl
loopne
jmp
xchg
test
mov
cmp
inc
mov
fisttpll
jmp
stos
push
inc
mov
repnz
test
pop
stos
clc
scas
adc
aaa
inc
shr
aam
imul
loope
jp
iret
inc
gs
xchg
push
cmpsb
scas
jmp
or
addl
cmpsl
xchg
cmp
xor
dec
cmpsl
in
lcall
lds
mov
cmpsb
lock
mov
popa
sar
mov
xor
jg
mov
xchg
clc
repz
mov
subb
fwait
xchg
and
iret
int3
jbe
inc
add
int3
add
aas
jno
mov
mov
pop
fs
dec
lea
aas
ret
shrl
pushl
mov
inc
sbb
lds
mov
insb
scas
add
aas
xor
jp
aad
mov
std
std
into
popa
test
ja
stos
in
das
dec
pop
loope
les
aas
call
inc
int
mov
addr16
push
mov
xchg
aas
and
loop
mov
jmp
jp
popa
push
pop
sarl
jl
mov
das
lea
mov
inc
inc
aas
jmp
ljmp
mov
inc
rcr
push
arpl
int3
and
call
cmpl
xor
lods
cmp
mov
cmp
std
xlat
cmp
mov
sbb
call
test
pop
mov
jne
ljmp
cmp
jno
shlb
out
dec
nop
pop
cmp
fisubl
xor
push
call
adc
xor
push
scas
into
imul
pop
add
rcr
jge
call
mov
xchg
cmp
push
andl
dec
dec
gs
std
orl
in
xchg
jge
pop
ficomps
frstor
xor
or
adcb
add
shlb
pusha
mov
xlat
add
inc
je
inc
lar
inc
inc
push
dec
addr16
pop
cli
push
sti
jg
pop
dec
dec
inc
push
dec
inc
aaa
xor
jg
push
lret
mov
mov
call
push
inc
dec
inc
jo
inc
popa
push
or
in
outsb
jbe
imul
inc
sbb
loopne
lds
dec
insb
imul
dec
push
mov
pusha
cmp
outsb
push
loope
andl
inc
dec
push
dec
rcrb
push
jo
jb
inc
add
push
inc
inc
inc
test
out
dec
inc
gs
add
and
gs
mov
fmuls
arpl
mov
adcl
jae
outsl
test
fcomp
push
dec
pop
mov
cmp
xchg
xchg
xchg
add
xorb
xor
lods
cmpsb
das
fmuls
inc
push
das
rolb
das
rclb
xchg
aas
dec
sbb
adc
dec
inc
dec
outsl
daa
sbb
daa
daa
dec
jae
imul
mov
inc
inc
inc
jg
inc
jns
lcall
push
rcl
lods
rol
push
cmp
xchg
jb
jns
inc
or
bound
sub
push
dec
in
inc
or
sbb
out
dec
push
dec
dec
fcomps
xchg
lds
jae
jbe
dec
pop
dec
dec
xor
mov
xor
or
cmpsb
dec
daa
sub
cmp
fisttpl
jbe
hlt
jne
arpl
outsl
or
les
dec
pop
xlat
push
sub
push
adc
add
sbb
inc
xchg
push
jbe
fidivl
imul
pop
pop
mov
mov
or
xorb
push
mov
imull
or
jg
notl
jo
cmp
mov
push
outsl
push
jb
add
adc
mov
das
push
adc
mov
push
xorl
push
dec
adc
push
mov
and
gs
and
repnz
insl
shll
outsl
push
inc
arpl
push
lods
fcmovb
push
push
cmpsl
lea
mov
adc
pop
jg
adc
test
xchg
add
mov
pop
xchg
inc
andb
mov
pusha
and
jno
stos
test
cmpsl
outsl
outsl
mov
mov
ja
fs
pop
ja
mov
or
ja
sbb
mov
arpl
pop
pop
cmp
test
pop
push
stc
clc
rorb
lahf
icebp
cmpsb
roll
scas
std
stos
insb
xor
call
xlat
and
pop
push
test
dec
lahf
add
leave
add
mov
sub
cmp
and
push
lds
add
pop
adc
mov
push
adc
push
cmp
out
xchg
stos
push
test
push
xchg
dec
xchg
daa
push
dec
out
push
outsb
sbb
jnp
xor
aam
mov
add
push
dec
push
pop
push
jne
xchg
das
les
outsl
loopne
addb
call
dec
outsl
addr16
push
or
cmpsb
iret
inc
dec
fistl
pop
mov
inc
and
das
xlat
out
js
mov
test
sahf
out
sahf
push
push
mov
sbb
dec
repz
lock
movsb
cli
ds
repz
les
inc
jns
xor
daa
jl
add
lret
inc
ljmp
add
daa
sti
sub
push
inc
addb
xchg
xor
ja
popa
push
out
mov
les
hlt
push
xor
jmp
mov
mov
push
movsb
mov
aad
mov
rclb
mov
sub
mov
nop
adc
push
jno
repz
test
ficompl
jmp
mov
call
hlt
movl
imul
std
in
leave
mov
add
insb
push
arpl
decl
cli
cmc
or
outsb
cmp
imul
addr16
add
aam
dec
std
test
decl
movsl
cli
test
xor
leave
mov
lods
jecxz
fdivs
jne
filds
or
fcompl
shrl
cmp
ficoms
push
xlat
enter
mov
and
mov
cltd
xchg
cmpsb
test
mov
mov
or
or
out
and
mov
jl
das
adc
stos
sbb
data16
inc
fdivl
jno
add
rcrb
mov
mov
movsl
in
lahf
xor
mov
js
stc
incl
xchg
sbb
push
sub
insb
jmp
pop
arpl
hlt
push
imul
insb
sbb
xor
dec
add
in
xchg
push
insb
jnp
add
shl
decl
adcb
cmc
fnstenv
adc
mov
mov
bound
ficoml
loope
rorl
popa
mov
into
pop
cmp
mov
inc
movsl
fisttps
fistl
movsb
sti
hlt
shrl
imul
mov
sarb
add
incl
add
pop
dec
or
cmp
add
daa
adc
or
and
call
test
or
mov
popa
into
push
stc
ficomps
leave
fldcw
and
xlat
pop
cmp
lcall
or
mov
shlb
mov
lcall
mov
cmp
ljmp
fildl
push
fdivl
or
test
fs
ds
or
or
push
jmp
popf
decl
xchg
daa
scas
add
mov
pop
jge
xchg
shlb
add
inc
push
imul
push
lret
xorb
sbb
push
imul
aam
loopne
rorl
int3
dec
frstor
fistpll
mov
mov
aad
mov
call
xchg
shll
push
repnz
fisttps
addr16
cmpsb
fldl
mov
dec
ss
fisubrl
or
scas
testb
pusha
jp
incl
ret
out
pusha
fists
addr16
mov
jns
imul
andl
shrb
ss
ljmp
xchg
ja
int3
add
mov
das
es
lds
or
sub
pushl
ret
shlb
sbb
ret
es
pushf
mov
decl
ljmp
test
ss
jmp
addr16
jb
push
hlt
orb
adc
mov
ljmp
mov
cmp
mov
fwait
mov
xchg
or
out
fdivrl
fisttpl
aam
roll
clc
call
or
mov
dec
ficompl
int
mov
mul
decl
ja
mov
out
cli
jo
ud0
cmp
pop
or
adc
sahf
gs
incl
imul
push
js
or
push
addl
mov
cmp
cmpsl
notl
pusha
rorb
imul
push
scas
fcompl
fldenv
filds
cmp
pushl
push
scas
mov
fidivrs
mov
jmp
repnz
lret
mov
cmpsb
mov
jmp
push
xlat
int
push
ficoms
fldenv
jp,pn
mov
dec
popa
les
sbb
xchg
sub
and
mov
or
sbb
xchg
add
mov
subl
adc
in
jp
mov
jne
aam
add
mov
imul
dec
je
push
insb
imul
sub
filds
mov
cvtps2pd
je
jns
arpl
arpl
add
mov
pusha
jnp
insb
jns
inc
jne
outsl
insl
mov
xchg
pop
mov
fildl
xlat
inc
adc
jge
sbb
add
or
jmp
adc
xchg
or
inc
insl
bound
adc
or
inc
inc
inc
xchg
push
dec
orl
shrl
inc
jno
xor
pop
inc
mov
mov
xor
aaa
cmp
popa
arpl
cmp
arpl
or
mov
mov
sub
xor
xor
xor
mov
push
inc
jbe
pop
sbb
fs
icebp
xor
inc
insb
dec
add
rolb
or
ror
inc
dec
push
push
cmpsb
mov
sub
sub
sub
hlt
mov
test
jbe
arpl
pop
lods
mov
popl
xchg
cmp
jle
jns
push
das
cmp
sub
sbb
push
addl
add
xchg
insb
popa
jns
test
vxorps
adc
or
aaa
je
lock
inc
insb
aaa
aas
inc
push
or
mov
ljmp
jg
and
jae
sub
push
popf
int
jbe
stos
fistps
inc
aas
fldcw
mov
inc
in
int
or
sbb
inc
pop
push
mov
jae
int3
out
std
jo
inc
inc
add
ds
mov
xor
pop
mov
dec
dec
lea
adc
cmpsb
mov
push
cmp
outsb
jne
add
push
dec
jge
in
pop
ja
xor
xor
or
add
addr16
or
into
pop
jo
and
push
cmp
mov
aaa
xor
jmp
cltd
dec
out
imul
add
sub
add
outsl
pop
sbb
mov
aam
dec
xor
fsubrs
dec
jmp
pop
adc
pop
mov
or
sbb
lock
inc
test
test
dec
popa
jo
sub
pusha
lahf
aas
fiaddl
outsl
test
and
sub
xchg
mov
in
pop
dec
push
sbb
mov
mov
arpl
inc
dec
push
cmp
push
jae
mov
jo,pn
push
test
lahf
sbb
push
outsl
insb
jns
push
add
shrl
inc
pusha
push
popa
jb
inc
dec
pop
push
addr16
addb
adc
call
movhps
push
bound
hlt
dec
cmp
mov
pop
adcl
dec
xor
adc
push
popf
xor
adc
xor
push
sub
aaa
inc
pop
addl
pop
cwtl
adcb
shl
jno
xor
testb
or
mov
test
aas
aad
cmc
push
sbb
pop
aaa
aam
in
add
push
aam
push
loop
roll
jnp
aaa
push
outsb
cwtl
add
les
lds
inc
push
daa
aas
pop
inc
and
add
addb
nop
push
addl
add
adc
pusha
cld
mov
pop
dec
pop
nop
and
push
sbb
mov
std
clc
or
pop
mov
fwait
and
add
and
rorb
add
clc
and
outsl
je
jb
sub
sub
cld
and
and
std
outsl
pop
push
cs
cmpsb
dec
shrd
popa
incl
lea
jg
sbb
into
sti
sti
out
jecxz
out
ud0
jmp
repnz
in
push
pusha
ljmp
das
insl
stc
in
lret
cli
push
cld
push
imul
inc
fidivrl
enter
add
dec
loopne
add
or
or
jne
cmp
daa
aam
cmp
add
arpl
repz
add
std
loope
mov
add
sbb
add
dec
or
push
test
mov
dec
adc
mov
js
push
loop
pop
test
add
push
enter
add
cs
add
les
lods
add
or
mov
mulb
inc
fs
xor
cs
mov
xchg
xor
dec
or
dec
jo
mov
sahf
jae
arpl
xlat
out
add
add
leave
repz
dec
sbbb
add
inc
xlat
lea
fs
sti
incb
xchg
mov
adc
jmp
and
mov
mov
lea
cmp
adc
mov
fisttps
sub
nop
mov
push
daa
lret
mov
js
push
jg
sub
mov
ret
fmul
inc
xchg
jns
sbb
aam
cmp
xchg
fs
lahf
and
call
call
shll
dec
out
jg
pop
ja
jne
jmp
mov
dec
and
and
mov
or
call
ss
test
pop
push
jae
pop
lret
int3
loope
inc
mov
jnp
movb
cmp
hlt
mov
in
adc
pushf
jbe
es
fsubl
enter
mov
jbe
cmpsb
or
push
sbb
clc
mov
add
insb
cmp
cmpsl
sub
dec
xchg
xchg
push
mov
out
and
push
sbb
push
movzbl
or
rcll
loope
mov
les
movsl
mov
leave
mov
jnp
inc
xchg
mov
dec
add
jo
sub
jecxz
pop
push
call
xor
jo
mov
or
shll
in
push
sub
ret
mov
mov
and
dec
adcb
loopne
pop
rcll
pop
nop
out
in
inc
call
push
shrb
loopne
call
mov
xor
outsb
std
mov
dec
adc
pop
xchg
pushf
and
aad
fisttpl
push
es
jne
push
inc
xorl
bound
icebp
push
mov
arpl
subb
push
dec
cmp
xchg
jne
push
dec
sti
add
insb
push
inc
xchg
dec
pop
jae
data16
shlb
mov
movsl
popa
rcl
add
lcall
les
mov
fs
imulb
push
push
push
in
adc
add
dec
in
push
insl
adc
cmp
push
xor
push
or
pop
add
dec
cmp
and
push
jp
or
push
cmc
push
popa
push
lods
cmpsl
cmpsl
or
inc
dec
cmc
push
pop
sbb
mov
dec
adc
ret
sub
rorb
push
ficoms
test
jle
xor
pusha
sub
and
mov
dec
xchg
sub
test
push
mov
dec
hlt
call
push
aam
je
fidivrs
decb
sbb
movb
dec
adc
add
fdiv
or
push
mov
aam
lea
into
out
or
lds
xchg
daa
loope
pop
sbb
test
push
push
mov
rcrl
pop
pop
icebp
andb
add
mov
and
dec
rcll
sbb
add
cmp
fiaddl
dec
lock
or
jecxz
or
rclb
add
dec
cmpsl
lods
add
insl
pop
cmp
push
fst
hlt
or
jno
push
pop
mov
movsl
testb
xchg
mov
int
jbe
inc
and
dec
jge
in
and
or
xor
and
popf
faddl
dec
and
add
inc
ljmp
imul
pop
je
call
enter
push
push
insb
fdiv
sub
add
sub
outsb
add
sbb
sbb
mov
xor
xchg
xor
mov
add
jl
inc
dec
xor
sbb
lcall
loop
sbb
jp
fiadds
stc
jbe
testl
pusha
cmc
xlat
pop
jp
push
or
les
add
call
cld
pop
xchg
and
pop
jl
gs
xchg
sbb
test
ja
push
pop
cwtl
push
mov
rolb
mov
roll
push
xchg
xchg
jnp
int
orl
or
jl
insl
lret
loope
subl
das
scas
dec
pop
call
dec
ja
sub
add
and
add
in
add
insl
sub
push
xchg
and
xor
test
add
scas
rclb
pop
push
sub
push
push
xchg
pop
loope
call
mov
and
mov
push
pop
push
clc
adc
jle
pop
push
call
aam
or
call
cmp
xchg
lea
xor
mov
mov
jo
pop
ret
nop
pop
rorl
and
ss
hlt
aaa
mov
add
add
cmp
sbb
inc
lock
loope
call
mov
adc
or
call
shll
fnstcw
jl
insb
rorb
or
jmp
fists
xchg
sbb
daa
ja
sbb
push
inc
into
imul
mov
push
inc
lcall
or
or
cmpsl
push
add
add
mov
mov
fs
sbb
sbb
mov
outsb
sub
push
sub
fidivrs
fsubr
shl
or
fucompp
push
adc
push
hlt
sbb
adc
les
cmp
es
or
out
ja
or
add
ret
sub
or
aas
scas
or
mov
push
jecxz
lods
filds
sti
add
stos
sub
idivl
shlb
inc
inc
nop
mov
pop
sub
xchg
sbb
in
adc
push
in
cmp
pop
lds
and
push
pop
lahf
lea
pop
aad
or
gs
push
push
inc
mov
sub
daa
pop
sub
arpl
push
dec
and
jmp
hlt
push
and
and
mov
cld
push
jns
adc
or
pop
loop
jo
add
ret
cmpsb
and
inc
bound
jne
push
pop
ss
jno
sbb
lret
inc
pop
imul
xor
fwait
lcall
push
and
jne
add
ds
sbb
push
sbb
sbb
sbb
loop
push
push
jmp
mov
and
jb
cmp
mov
push
push
dec
fdiv
dec
adc
mov
cmp
pop
pusha
push
inc
add
push
cltd
inc
call
mov
mov
sub
pop
pop
insb
mov
add
idivl
cmp
xchg
mov
stc
and
add
sti
into
mov
push
jb
call
movsl
inc
mov
aas
lret
popf
sub
sti
je
cmp
cmp
mov
insl
loop
push
push
lea
adc
mov
pop
cmp
push
push
adc
mov
ret
push
inc
mov
mov
push
mov
daa
xor
inc
shlb
imul
fidivrl
push
faddl
pop
dec
shll
out
repnz
sub
into
xchg
xlat
call
mov
repz
loop
aad
push
mov
sbb
js,pt
lea
and
add
stos
pop
mov
add
jmp
enter
sub
xchg
aas
xor
es
call
mov
jle
push
mov
mov
in
push
adc
and
rcrb
push
adc
pop
jne
pop
xchg
dec
out
lea
mov
dec
lcall
jl
mov
rep
mov
mov
movsb
push
enter
adc
shlb
and
shll
jle
rcll
aas
mov
and
adc
push
cmpsb
adc
cli
push
push
lods
sub
movsb
mov
cmpsl
in
push
push
stos
adcl
push
pop
lahf
fstps
into
enter
shlb
or
pusha
clc
loop
rolb
push
testb
add
sbb
outsl
push
jb
mov
call
adc
push
pop
pop
sbbl
push
popa
pop
cmp
mov
fwait
pop
mov
jg
sbb
je
mov
daa
sub
sahf
pop
enter
fistpl
or
push
ror
ljmp
xacquire
aam
adc
jb
adc
xchg
pushf
sbb
inc
stos
ss
imul
ljmp
imul
ret
lret
gs
leave
push
loopne
movsl
out
ljmp
mov
sbb
sbb
aas
js
mov
mov
std
sub
adc
jmp
mov
adc
das
insl
movsl
and
or
insb
or
and
test
subb
adc
inc
adc
jno
cwtl
push
cs
cmp
roll
push
call
dec
add
and
pop
or
adc
dec
and
pushl
push
mov
loopne
dec
in
pop
and
dec
in
push
add
add
lret
pop
and
pop
jmp
dec
cs
cmp
inc
imull
sbb
pop
dec
sub
push
lret
xor
sbb
jne
push
or
inc
leave
leave
xchg
xorl
in
or
dec
in
in
pop
jno
sub
inc
imul
xchg
loope
jbe
insb
cmp
adc
sbb
cmp
mov
cmpsl
adc
sbb
adc
in
or
loope
pop
mov
pop
mov
or
aas
stos
xacquire
cmp
jnp
je
inc
mov
mov
mov
cmp
mov
jne
je
in
repnz
in
in
sub
lea
xchg
mov
mov
mov
mov
lea
pop
cmp
add
imul
xchg
pop
mov
xchg
push
cmpsl
adc
das
fcmovu
aas
push
fists
mov
out
mov
jne
mov
and
sbb
jne
lods
lods
push
mov
std
fidivrs
push
jbe
xor
sbb
push
aam
add
add
inc
xlat
notb
jle
xchg
popa
xchg
rolb
push
aaa
cmpsb
adc
jmp
jnp
push
mov
test
movb
inc
enter
insl
call
adc
or
les
lods
jo
pop
lcall
aad
mov
fisttpll
push
push
mov
jecxz
repz
into
inc
call
xchg
mov
jg
lea
pushf
add
call
add
and
dec
adc
mov
imul
or
or
and
cmp
push
dec
in
add
jne
mov
add
jl
push
jmp
loop
test
cld
into
cwtl
xchg
add
cmp
pusha
pop
in
test
in
add
sbb
loope
sti
sbb
scas
jns
or
add
pushf
sbb
push
sbb
or
gs
ljmp
push
add
add
out
enter
add
pusha
lods
clc
dec
and
push
push
rolb
xorl
sbb
or
mov
jge
mov
inc
and
pop
cmp
mov
popa
inc
dec
pop
and
je
push
mull
js
add
or
je
mov
lea
jmp
pop
dec
or
loopne
outsb
sbb
cld
inc
pop
popa
lret
ds
mov
sbb
xor
bound
jmp
mov
fs
imul
popa
adc
push
pop
insb
stos
xor
sbb
jae
testb
cwtl
xor
mov
aam
scas
cmc
test
popf
rorl
adc
inc
dec
or
nop
add
or
lods
cmp
mov
lods
pop
push
cltd
add
mov
mov
xor
lods
scas
pop
inc
pop
jbe
leave
jne
xor
inc
add
inc
cmp
lods
push
add
popf
out
popa
inc
adc
mov
insb
add
in
aaa
clc
mov
jne
push
loopne
cli
test
xchg
push
mov
mov
fists
push
inc
add
adc
sahf
popa
test
bnd
adc
mov
inc
inc
xor
inc
fnstenv
push
or
or
shr
adc
mov
or
jnp
mov
ss
stos
std
std
enter
push
xor
jb
cld
cmp
sarl
cwtl
sbb
nop
xor
xchg
or
or
jo
push
mov
mov
es
jmp
mov
dec
fisubrs
test
testb
and
gs
orl
inc
pop
push
xchg
jb
sub
rolb
test
mov
std
adc
ds
nop
push
ds
jl
rcrl
mov
and
mov
cmc
push
pop
fldl
jbe
test
add
sarb
sahf
lret
dec
add
mov
je
adc
and
cmpsb
dec
add
xchg
jl
mov
jnp
out
push
sarb
adc
mov
test
push
inc
sub
lock
pop
out
or
int
mov
sub
or
sub
xchg
mov
jmp
cmpsl
in
jp
les
xor
lock
ss
jae
loopne
mov
dec
int3
lods
call
loopne
aam
inc
sbb
fcoml
xor
add
adc
xchg
adc
push
out
or
cmp
les
rclb
popf
jnp
xchg
mov
pop
dec
push
sbb
xor
cld
fildl
cwtl
push
mov
in
int
push
push
call
pop
jge
mov
inc
sub
inc
es
jo
xchg
lea
decb
sbb
sbb
xchg
rorb
xor
ret
push
mov
sti
push
or
enter
outsl
jne
inc
xorb
jmp
or
pushl
add
addb
in
pop
mov
movsb
or
jle
or
xor
sbb
or
add
or
mov
mov
adc
mov
imul
mov
sbb
ret
adc
mov
nop
mov
push
jecxz
xor
or
push
add
push
pop
add
fdivs
adc
pop
push
dec
sbb
sahf
mov
lcallw
mov
cmp
push
add
adc
sbb
cmp
jl
pop
jne
mov
jmp
or
pop
shll
cwtl
or
push
or
sub
es
or
lahf
dec
mov
xor
inc
outsb
jbe
loope
sub
push
pushf
push
insb
add
adcl
inc
sbb
mov
ja
sbb
inc
push
add
call
xlat
or
loope
shrb
push
xchg
ljmp
outsl
dec
test
shll
sub
add
mov
cmp
ss
mov
outsb
add
call
nop
imulb
xchg
mov
pop
sub
aam
inc
mov
add
push
mov
lea
bound
push
out
stos
push
filds
pop
in
out
call
cmp
jbe
and
xchg
jne
mov
subb
sbb
mov
std
pop
cmp
das
cmc
lock
pop
mov
inc
push
in
scas
loope
dec
xchg
mov
pushf
cli
adc
jecxz
fadd
and
xor
pushf
loop
addl
shr
je
adc
cld
imul
pop
xor
fwait
add
imul
xchg
scas
jb
clc
cld
fmuls
or
mov
or
paddb
adc
fimuls
aaa
push
mov
cmp
mov
adc
adc
sbb
xchg
loopne
ficoms
in
mov
into
pop
gs
cmp
lds
lods
sbb
movsl
imul
adc
or
lods
les
sti
push
mov
je
cmp
push
dec
add
mov
jle
test
imul
in
dec
dec
test
xor
jo
test
js
pop
push
jl
adcb
insb
and
pop
and
mov
push
adc
jno
xchg
aam
xor
jecxz
test
int
push
mov
aam
in
loop
dec
mov
inc
cmp
cwtl
sbb
clc
popa
fsubrl
call
xchg
or
fdivs
faddl
push
ficomps
fcoms
add
je
fnsave
js
push
push
jb
mov
lea
insl
mov
or
jo
mov
xlat
or
rcll
stc
push
repnz
mov
inc
pop
xor
imul
leave
mov
sbb
mulb
mov
jmp
leave
lret
add
pop
xchg
mov
jo
sbb
maxps
sbbb
push
xchg
add
mov
hlt
mov
push
adc
mov
ss
mov
clc
and
cmp
iret
stos
push
push
sbb
push
cmp
sub
mov
or
mov
jmp
adc
and
add
adc
adc
sub
mov
mov
sbb
push
or
addl
clc
xchg
or
lods
fldl
pop
mov
dec
testl
mov
mov
push
imul
pop
addr16
movb
pop
sbb
push
mov
int3
sbb
jne
js
xchg
cmp
jmp
fcoms
inc
cmp
jne
push
mov
and
or
je
int3
inc
push
sahf
jmp
or
adc
mov
jmp
clc
jo
mov
sahf
jae
and
pop
js
xor
icebp
or
loop
movsl
cld
lds
mov
mov
and
enter
cld
push
punpckhbw
mov
xchg
push
mov
and
add
test
inc
movsb
sbb
ds
sub
inc
ljmp
dec
jl
lods
or
push
js
negb
imul
mov
xor
out
xor
fxtract
jmp
sarl
and
xorb
movsb
inc
or
mov
outsb
mov
push
sbb
add
loope
mov
or
adc
cmpsl
loop
cmp
add
sbb
jb
mov
repnz
in
movsb
jmp
js
xchg
lret
sbb
fists
into
test
or
dec
push
call
sbbw
cmp
adc
inc
int3
jbe
icebp
mov
loopne
jge
dec
push
adc
or
and
or
push
stc
sub
fcompl
sbb
push
pusha
cmp
dec
or
jo
out
cmp
or
mov
cwtl
or
popf
pushf
or
cmp
test
fidivrs
inc
mov
inc
loopne
cli
dec
mov
mov
mov
inc
mov
aad
addl
jmp
add
lock
push
dec
lea
mov
mov
sbb
cmp
sbb
mov
mov
and
int3
cmpsb
inc
and
loop
mov
nop
push
decl
or
inc
fdivrs
jne
movzbl
add
je
adc
scas
sbb
movsb
nop
jno
sub
cmp
push
jge
pop
lea
incl
nop
sbb
add
xchg
xchg
jno
and
decl
dec
xlat
sub
sub
je
mov
jo
sbb
cli
sub
sbb
adc
cmp
add
sar
mov
lea
inc
xor
inc
pop
rcrb
sbb
and
inc
shlb
insb
cmp
mov
test
std
in
andl
dec
cmp
stos
loopne
push
dec
push
sahf
js
sub
inc
xchg
dec
push
push
arpl
push
call
mov
dec
mov
dec
and
jmp
dec
xchg
in
add
dec
stos
inc
je
mov
push
or
push
incb
aas
dec
dec
mov
jmp
orb
in
mov
inc
add
push
mov
inc
negl
xchg
adc
pop
inc
add
dec
add
sub
push
cli
call
sub
mov
out
push
test
adcb
rorb
push
add
adcb
and
add
add
xor
xor
and
sbb
adc
adc
shl
push
lds
add
push
scas
or
and
add
or
nop
test
cmp
daa
and
push
shll
adc
or
xor
and
stos
cs
pop
popa
pusha
andb
sbb
lahf
roll
pusha
xchg
cli
or
or
or
call
out
out
in
inc
callw
pop
call
call
jle
cmp
dec
aam
sti
mov
mov
push
jns
cmp
call
sbb
call
int3
pop
jmp
xchg
sbb
fstpt
add
ss
mov
decl
inc
jge
mov
or
pop
psubsb
add
out
clc
scas
pop
jmp
mov
xor
pop
xchg
pushl
cmp
jmp
add
pop
xchg
sbb
mov
dec
add
pop
xchg
addr16
jecxz
popf
xor
je
push
into
cmp
adc
fimull
jmp
pop
xor
fldcw
lds
rcrb
cmpb
sbb
movlps
cmp
xchg
sbb
pop
jo
mov
or
adc
or
test
or
sub
stos
dec
mov
sahf
pusha
lock
pop
mov
push
and
inc
pop
pushf
mov
fiadds
sub
sarl
mov
cmp
es
or
add
movsl
push
ljmp
aad
es
jle
add
into
jns
je
jmp
xchg
or
jae
push
es
pop
add
add
jmp
outsb
iret
dec
mov
les
movsb
push
or
in
and
ficomps
cltd
ret
or
inc
and
das
push
shrb
xor
arpl
jbe
push
add
and
imull
push
movsb
shlb
repz
xchg
push
push
sbb
jp
sbb
ror
adc
inc
mov
push
ret
enter
pop
aaa
push
sub
sub
and
ljmp
add
int3
or
sbb
in
mov
ja
es
push
push
push
aad
inc
xchg
pop
and
dec
enter
dec
push
mov
push
fnstenv
pop
aaa
and
les
pop
xor
pusha
inc
xor
xor
out
roll
rol
sub
lret
xor
fistl
loope
jmp
andb
push
inc
mov
or
push
inc
dec
fwait
mov
inc
cs
pusha
out
out
cmp
nop
je
mov
insl
dec
addr16
addr16
sbb
nop
addr16
repz
push
sub
sbb
movsb
repz
add
lsl
addr16
jmp
push
scas
push
jno
mov
imul
adc
pop
daa
test
lock
daa
pop
nop
add
and
dec
addr16
mov
dec
outsb
add
ja
les
mov
repz
repz
add
movsb
addr16
fisttps
cld
or
push
adc
add
insl
dec
addr16
xor
push
bound
cmpsl
adc
push
or
lahf
dec
dec
push
insb
out
adc
dec
out
jge
imul
loop
or
rcrb
adc
lock
xor
pop
jmp
cmp
je
mov
xor
sub
cs
mov
lea
adc
pop
add
xchg
cmp
in
add
add
xchg
xchg
cmp
idivl
or
mov
add
jno
je
xchg
outsl
in
sahf
add
mov
xor
test
push
push
cmpl
jns
out
inc
or
or
sub
or
jb
iret
in
add
or
inc
push
shll
or
in
lcall
xchg
or
push
inc
scas
xchg
or
addr16
push
push
push
xchg
or
sbb
rdmsr
adc
xor
pop
adc
or
scas
testb
xchg
adc
imul
add
sbb
adc
adc
push
adc
addr16
inc
pop
pop
out
rcrb
sbb
sbb
and
sbb
sbb
add
sbb
sbb
dec
in
add
je
push
sbb
cmp
sbb
jo
xor
sbb
pop
push
push
incl
jns
inc
negb
pop
jne
add
add
mov
fcom
sub
and
es
add
pop
xchg
cmpb
and
lods
pop
sbb
cwtl
xchg
repnz
in
push
in
imul
rcl
in
xchg
cmpsb
ret
in
in
in
cmpsb
mov
sub
jns
out
or
mov
je
call
inc
sbb
js
repnz
cmp
enter
add
or
in
in
push
imul
addr16
fsubrp
cmp
mov
cmp
mov
or
and
in
je
lock
sbb
icebp
cmp
stos
mov
repnz
adc
repz
std
test
test
pop
hlt
xchg
push
jnp
scas
std
cmc
cmc
cmp
and
testb
sbb
gs
clc
pop
add
or
mov
stc
and
iret
enter
add
sti
fcoml
fdivrp
cld
cld
je
jnp
orl
std
xor
out
leave
std
sbb
pop
dec
sbb
xor
mov
sub
jb
and
sarl
xchg
or
fwait
xor
stos
or
jecxz
jecxz
dec
fsubp
push
xchg
xor
mov
cmpl
aam
nop
cmpsb
loopne
or
out
xchg
pop
push
lea
cltd
sti
lods
dec
xor
cltd
movsb
mov
jmp
push
and
jmp
daa
in
cltd
and
sti
jmp
orb
jb
inc
out
xchg
mov
inc
cltd
cmp
and
aas
repz
scas
ss
repz
sbb
cmp
stc
pushf
loopne
repnz
imul
mov
mov
clc
cltd
jb
xor
nop
push
stc
sbb
xor
sti
sti
sti
xchg
mov
cld
cmp
jb
stos
in
clc
mov
loopne
test
inc
pushf
stos
dec
mov
lcall
sub
dec
loop
xor
shll
repnz
loope
clc
and
pop
dec
add
or
imul
and
aad
loope
divl
pusha
leave
sahf
testl
ljmp
jmp
mull
or
hlt
notb
imul
mov
loope
notb
sub
nop
nop
testb
repnz
pop
push
and
repz
stos
and
mulb
out
div
mulb
xchg
mov
xor
sbbl
sbb
rclb
xchg
jns
mov
cmp
loope
cmc
and
and
hlt
or
xlat
inc
stos
repz
pop
lock
push
jo
or
adc
jmp
clc
sti
mov
in
iret
movsl
loope
loope
jp
repnz
pop
hlt
cmp
mov
cmp
mov
hlt
orb
push
in
pop
in
xlat
jb
repz
repz
mov
or
xchg
repz
in
insb
repz
repz
or
or
in
mov
in
repnz
or
test
cmp
icebp
icebp
loop
pop
int
xchg
pop
adc
nop
sbb
repnz
repnz
sbb
nop
pushf
mov
sub
lock
in
pusha
leave
cwtl
icebp
or
int
stc
mov
dec
icebp
xor
pcmpeqw
or
scas
pop
mov
test
mov
lea
sub
data16
ficoms
push
sub
fists
jo
rclb
loope
scas
div
aaa
inc
cmp
cmp
sub
mov
adc
mov
lods
add
mov
jne
stc
xor
mov
movsb
xchg
dec
add
sbb
lahf
dec
notl
and
add
int3
dec
push
imul
push
aaa
insb
ds
or
push
add
lahf
out
imul
cli
push
jecxz
sahf
cmpsl
fldcw
mov
lcall
push
aad
in
xchg
out
jns
test
or
mov
and
rcll
xor
xor
mov
lods
leave
jle
sbb
lea
inc
cmp
and
inc
bound
lret
test
push
push
push
pop
dec
push
xor
loope
ss
or
xchg
lods
inc
and
jmp
and
adc
dec
dec
out
inc
test
xlat
or
xor
sbb
movb
dec
xor
ret
mov
sub
fidivs
xchg
push
sbb
mov
mov
push
inc
pop
call
addb
ret
mov
jle
movsb
in
jmp
and
push
dec
push
push
push
nop
push
call
push
repnz
adc
mov
bound
pop
insl
adc
xchg
mov
push
jmp
les
insb
lret
cwtl
mov
jno
push
adc
mov
mov
dec
mov
lahf
popf
adc
cwtl
and
js
pop
mov
and
inc
mov
pop
cmp
add
or
ret
xchg
mov
sub
jmp
adc
adcl
mov
ret
cwtl
jns
call
movsl
dec
pop
push
call
inc
es
jb
add
add
pop
xchg
pop
or
sbb
mov
xor
push
xorb
or
sbb
push
inc
push
xchg
and
xor
adc
xor
inc
and
scas
xor
mov
xor
dec
xor
xor
inc
mov
inc
dec
pop
xor
pusha
push
add
stos
adc
push
and
adc
jo
inc
xor
in
xchg
inc
in
add
and
inc
fbstp
je
cmpl
push
rcll
mov
push
xor
add
or
imul
call
adc
iret
add
mov
push
push
mov
jg
out
dec
out
loop
jp
jb
xor
popf
cs
pop
sub
sti
pop
andb
pop
inc
jb
pop
stc
push
xchg
das
pop
push
xor
add
lcall
and
dec
aam
mov
pop
mov
sbb
xchg
ja
pop
movsb
sti
and
andb
inc
mov
lret
or
pop
int
pop
xchg
xchg
mov
jmp
lcall
mov
cli
dec
cs
pop
in
call
and
cmp
lcall
push
test
mov
fisubrs
sbb
adc
xor
xchg
ljmp
add
push
in
lds
imul
cmp
pop
and
nop
movsb
fwait
ljmp
call
pushf
pushf
je
push
cmp
sub
sbb
movsb
stc
jo
push
push
xor
push
out
sub
scas
cmpsb
mov
mov
jmp
repz
cs
sbb
sbb
aaa
or
xor
push
pop
es
or
adc
xchg
pop
pop
pop
xorb
pop
or
in
inc
mov
in
inc
adc
ds
in
mov
and
popl
jg
push
jmp
mov
or
fs
test
aam
rolb
je
xchg
or
jmp
test
pusha
gs
sbbb
stc
out
dec
push
aaa
push
mov
mov
sbb
push
inc
out
mov
cmp
sbb
ds
leave
dec
ljmp
adc
dec
bound
dec
mov
mov
and
cwtl
dec
push
enter
lea
xor
pop
fidivl
push
cmp
lods
push
fldl
pop
aad
je
std
cmpsb
dec
nop
push
lods
xor
pusha
xorl
arpl
nop
mov
inc
and
sub
in
je
xchg
loop
pop
xor
dec
and
test
or
inc
mov
mov
enter
dec
das
inc
xor
adc
pop
pop
hlt
push
rcl
dec
mov
jns
fisubs
pop
aaa
cmc
pop
add
shlb
test
and
mov
daa
test
data16
call
xchg
jne
or
or
and
movsb
sbb
hlt
adc
loopne
add
incl
pop
cmpb
adc
es
xchg
or
add
imul
mov
add
jo
sub
cmp
jle
movb
aaa
pushf
mov
mov
loopne
xchg
mov
add
add
and
lods
cwtl
adc
sti
jmp
mov
cmp
fsubs
sub
jb
movsl
push
cs
dec
sub
and
xor
mov
lea
out
jmp
add
loope
movsb
mov
ss
cmp
iret
dec
mov
cmp
push
bound
pusha
push
cmp
iret
repz
in
aaa
popa
aas
movsb
and
mov
pop
ret
je
sub
push
pop
xchg
and
fs
mov
xchg
and
add
mov
jmp
vprotb
fs
mov
and
sbb
push
daa
dec
mov
lea
xor
sbb
scas
sbb
inc
jp
mov
dec
mov
and
and
push
xchg
dec
cmp
sbb
or
mov
loop
adc
jl
adcb
mov
sbb
test
loope
xchg
test
nop
sbb
push
rcl
loope
test
adc
test
mov
rclb
inc
aad
in
test
je
test
repz
mov
js
je
loopne
mov
mov
imul
lahf
call
mov
xor
add
rcl
aad
pop
jno
dec
cmc
sbb
pop
jnp
sbb
test
insb
mov
mov
scas
cmpsb
mov
inc
xor
xor
mov
lret
movsl
test
xor
nop
test
pop
pop
test
cmp
pop
test
fs
test
mov
test
or
dec
inc
test
cmp
sbb
test
xor
loopne
xor
push
in
test
sbb
sbb
test
and
mov
push
imul
test
stos
cmpsb
test
push
jp
test
adc
rcll
sub
ljmp
sarl
nop
dec
xlat
xor
mov
inc
subps
test
dec
test
mov
jnp
mov
mov
push
dec
adc
dec
sbb
push
rcll
lcall
inc
push
cmp
mov
xchg
xchg
fstpt
or
dec
sbb
sub
fldl
push
mov
xor
out
add
test
ljmp
pop
sbb
jno
or
daa
test
sub
xor
add
ss
ds
pop
mov
daa
rcl
lods
or
and
js
xor
push
pusha
and
push
test
mov
shlb
aam
pop
sbb
mov
test
or
test
popa
cs
aad
and
into
mov
dec
pop
cmpsb
sbb
mov
or
sbb
rolb
sbb
testb
jmp
rorb
inc
arpl
adc
lds
test
stos
cmpsb
test
cmpsl
dec
aam
je
push
push
jp
test
call
mov
pop
sbb
add
test
enter
adc
loope
xor
and
or
xor
loopne
data16
test
cmpsb
lcall
hlt
fildll
or
int
movsb
fcmovbe
jo
enter
mov
mov
push
int
add
in
mov
into
and
test
cmp
ret
or
xor
pop
mov
insb
fsubrs
aad
push
or
and
jo
scas
cmpsb
mov
shrb
xchg
ja
or
je
leave
push
jmp
int
cld
add
sti
lret
outsb
sbb
imul
sbb
scas
test
subl
dec
or
cmp
xchg
and
pop
inc
mov
inc
push
rcll
arpl
ret
imul
jp
hlt
and
dec
push
inc
jne
rolb
push
rcl
je
lods
push
stos
imul
pop
add
and
clc
js
push
mov
push
xchg
inc
ljmp
dec
inc
test
aam
test
adc
mov
test
mov
cmp
mov
mov
pop
cmp
dec
and
cmpsb
and
adc
push
call
sbb
test
lods
cli
cmp
cmp
hlt
fs
test
sub
ds
setb
leave
jmp
pushf
fsubr
loop
aaa
imul
and
and
dec
add
inc
lods
inc
daa
icebp
mov
repz
stos
cmp
mov
inc
je
ret
or
inc
out
push
out
mov
js
mov
dec
pop
ret
sub
fstpl
inc
push
mov
inc
daa
clc
xchg
xchg
push
cmp
jbe
in
sbb
lods
ret
mov
xor
push
outsb
sbb
test
fisttps
rcrl
mov
aad
xor
pusha
xorl
mov
xchg
addr16
add
xchg
xchg
jl
dec
inc
pop
or
sub
and
and
fiadds
aaa
or
aaa
or
js
fwait
test
xor
outsl
add
cmpsl
or
xor
jae
outsl
sbb
leave
mov
call
pop
xor
or
mov
push
cmp
fmul
jo
mov
mov
or
movsb
mov
xor
repnz
enter
jl
pop
add
repnz
xchg
movsb
stos
enter
je
pop
dec
sar
add
js
test
dec
rorb
leave
rorb
int
add
push
leave
insb
cmp
dec
dec
sbb
sbb
loop
arpl
rcll
das
jae
popf
push
mov
cwtl
xchg
inc
cmp
inc
sub
inc
dec
push
insb
call
or
or
rclb
pop
mov
jne
rolb
jl
rolb
movsl
aam
in
cli
push
mov
push
or
adc
jg
or
nop
aam
mov
and
pop
push
or
jae
xchg
es
adc
add
pusha
stos
adc
shrl
xchg
fadds
xchg
hlt
out
or
shrb
cmpsl
enter
cmpb
xor
adc
xor
cli
testb
ja
data16
sbb
or
xchg
dec
in
cmp
fisttpl
mov
push
sbb
andb
mov
pop
call
inc
rcl
ja
or
call
mov
and
inc
mov
and
fnstcw
shll
rol
sub
push
inc
xchg
ret
cmc
pusha
into
add
mov
mov
add
rolb
sbb
hlt
or
adc
rorb
sub
pop
adc
aaa
adc
push
mov
jnp
add
push
add
and
or
jmp
cld
push
or
xor
loopne
movsb
or
jmp
add
or
leave
pusha
jmp
mov
imul
mov
jecxz
nop
xbegin
shll
xchg
es
scas
xchg
gs
add
lahf
pop
pop
mov
jne
dec
mov
or
mov
test
dec
inc
xor
dec
inc
xor
nop
push
xor
inc
ja
and
xor
pop
xor
fnsave
and
insb
jo
inc
call
jnp
xor
xor
jb
xor
popa
add
xor
mov
enter
adcl
sub
sbb
xor
xor
dec
xor
cmpsl
push
test
push
mov
sbb
and
bound
push
cmp
adc
add
mov
add
fwait
stc
dec
daa
jb
cli
xchg
movsb
add
incl
jl
je
leave
cmp
sahf
xchg
sbb
xchg
andl
sarb
mov
adc
sbb
jecxz
push
dec
pop
loopne
mov
cmp
dec
call
jmp
pusha
addl
pop
dec
xchg
pop
push
ja
push
jns
push
cmp
rolb
inc
sub
repz
or
sub
push
or
push
arpl
add
dec
adc
and
out
das
xchg
mov
dec
sub
ljmp
inc
add
pop
adc
push
fwait
stos
repnz
cs
mov
and
test
jmp
outsb
mov
add
xchg
jb
xor
push
inc
call
rcrb
inc
pop
inc
add
push
incl
jne
scas
add
fsubl
or
or
test
or
jne
push
movb
add
dec
lret
out
outsl
pop
xor
add
cmp
inc
jmp
dec
jmp
xor
ret
push
inc
inc
outsl
mov
shr
inc
jmp
inc
inc
inc
pop
je
pop
es
adc
lcall
add
add
pop
push
push
mov
or
push
mov
adc
dec
stc
add
mov
push
mov
push
inc
or
loope
lcall
push
rcrl
cmp
or
pusha
or
pop
inc
fsubrp
jbe
add
xor
inc
jmp
enter
add
adc
push
inc
sub
cli
popf
pop
pop
pop
cwtl
movsl
and
or
mov
add
in
mov
mov
inc
mov
add
loop
pusha
popa
push
mov
andb
inc
xor
mov
lock
sub
xchg
push
rorl
sbb
or
xlat
push
mov
mov
adc
shl
punpckhbw
ss
repz
mov
lods
mov
sub
push
push
or
cmovs
cmp
sbb
cs
jmp
cmp
xor
mov
and
push
add
ret
push
sar
inc
fidivrl
jl
call
pushf
push
rolb
cmp
mov
repnz
ss
sub
hlt
mov
pusha
loopne
sub
cmc
inc
adc
sub
fimull
or
nop
mov
xchg
imul
sbb
sbb
arpl
nop
movsb
out
pop
ret
dec
sbb
xor
or
add
push
add
scas
filds
cmc
add
in
andl
sub
popa
mov
in
ds
in
sbb
adc
push
ja
mov
scas
xor
add
dec
push
rolb
xor
orl
mov
lock
sbb
scas
add
popa
mov
add
sub
pop
xchg
sbb
mov
xor
mov
add
pusha
les
aas
dec
test
push
add
iret
and
mov
xor
sarb
nop
push
and
gs
rorb
fadds
cs
int3
call
inc
sbb
call
nop
in
xchg
ret
cmc
fists
bound
add
dec
inc
xlat
sbb
add
xorb
inc
or
addr16
pop
or
inc
lret
loopne
pop
movsb
and
xchg
xchg
and
mov
dec
ja
pop
cmp
and
int3
or
push
repnz
sahf
ret
lea
nop
mov
lret
in
lock
xchg
insb
leave
adc
and
jbe
inc
ds
add
pop
add
push
arpl
dec
inc
xchg
inc
xor
add
aaa
xchg
ret
add
adc
push
rolb
mull
int3
push
int3
adc
movsb
repz
xchg
adc
or
and
sarl
rcl
jns
mov
xor
xor
or
jae
aas
sti
and
xchg
inc
pop
jmp
rcl
xchg
dec
pop
and
iret
jmp
jg
push
mov
sbbb
xlat
pusha
pushf
mov
cli
pop
pop
imul
loop
lcall
imul
pop
inc
xchg
xor
enter
xor
cmovb
sbbl
stos
pop
inc
ffreep
and
jle
call
inc
mov
and
xchg
sbb
call
cmp
add
jb
jb
fwait
pop
mov
sub
mov
pushf
rol
dec
push
mov
add
push
mov
dec
xchg
or
test
sub
add
jmp
inc
jecxz
mov
mov
push
jecxz
enter
rcrl
sbb
jns
daa
addb
xor
xor
nop
or
add
movsl
xchg
ret
or
push
mov
jp
or
push
xor
add
xchg
adc
push
cmp
into
in
xchg
pop
inc
mov
or
fistps
pop
sbb
xor
and
push
jmp
enter
fdivl
xor
lcall
add
and
xor
sub
inc
cs
roll
add
sub
mov
add
sbb
sbb
mov
pushf
mov
add
out
add
mov
mov
xchg
mov
jge
lea
add
push
inc
stos
jecxz
movsb
xor
mov
stos
fildl
je
sbb
cmpsb
sbb
loope
xlat
add
pop
stos
mov
jo
mov
nop
sbb
inc
sbb
jno
and
dec
ret
repnz
adcl
ret
sbb
dec
inc
inc
xchg
xchg
push
inc
dec
adcl
sbb
gs
inc
xor
pop
rol
add
fsubs
mov
adc
fwait
pop
nop
scas
rcrl
mov
mov
test
inc
in
nop
mov
cmp
mov
in
sarl
jle
add
or
sbb
cmp
test
fsubrp
and
sub
cmp
je
sub
daa
pop
pop
sbb
outsl
and
pushf
insl
jb
xchg
sbb
popf
insl
mov
xchg
test
push
add
or
and
lea
andl
xor
push
popf
fstpt
pop
xchg
addb
mov
push
xor
or
sub
out
and
sub
xchg
dec
adc
xchg
sbb
into
cmpsb
mov
push
dec
call
in
aaa
lock
movsl
pop
adc
pop
and
xchg
adc
adc
test
jbe
xchg
mov
add
in
pop
adc
mov
sbb
imul
dec
aas
adc
inc
rolb
je
sahf
out
rcrb
mov
outsl
mov
mov
xlat
fsubrs
lea
inc
shlb
add
cwtl
sarb
cltd
sbb
add
out
push
sbb
ds
add
dec
shlb
pop
cmp
cmp
cmp
push
call
xchg
out
mov
sbb
addl
orb
cwtl
sub
rorb
cmp
xchg
call
es
xor
mov
push
rorb
sbb
cmp
mov
sub
cmp
leave
fnstsw
pushf
es
mov
mov
inc
sub
dec
lods
cmp
cmpsl
jl
ss
and
test
or
adc
push
hlt
icebp
or
cmp
int3
push
xchg
call
cmpsb
jo
push
push
fstps
lret
movl
lret
dec
pop
add
addr16
out
add
push
outsl
add
and
lret
inc
or
mov
jbe
loope
aam
pop
call
movsl
push
lret
dec
hlt
push
mov
cmp
stc
inc
sub
jo
nop
cmp
mov
mov
xor
pop
stc
inc
inc
dec
ret
and
stc
jno
rclb
stc
xchg
hlt
and
stos
cmp
out
call
mov
push
add
aad
into
addb
inc
clc
and
call
inc
mov
jo
nop
roll
adc
sbb
adc
push
cmp
mov
ret
lods
aaa
je
sar
or
adc
inc
inc
stc
scas
movsb
mov
lds
pop
loopne
stc
pop
xor
xor
pop
stc
scas
mov
aaa
call
xor
scas
pop
dec
ss
mov
movsb
mov
jecxz
cmp
stc
fxch
mov
arpl
loope
inc
stc
mov
dec
dec
idivb
stc
fadds
cmp
pop
or
adc
enter
stc
hlt
mov
mov
pop
or
jp
adc
or
cs
stc
inc
inc
inc
and
adc
or
stc
movsb
xor
pop
and
stc
mov
xor
das
call
and
jbe
mov
test
cmp
jl
arpl
popa
adc
mov
roll
and
adcb
mov
pop
stc
push
inc
add
or
mov
pop
and
adc
stc
mov
pop
test
lods
and
aaa
loop
mov
stc
ffreep
mov
adc
jmp
sbb
mov
jg
mov
stc
andb
xchg
sbb
add
push
lcall
inc
sbb
fldcw
call
mov
out
mov
sub
int3
lds
test
aam
and
sub
in
ret
and
outsb
mov
stc
iret
lds
mov
and
ficomps
arpl
xor
cs
in
push
aam
adc
mov
test
inc
test
or
sbb
out
cmp
call
and
cmp
and
mov
add
sbb
or
jb
sub
loope
and
mov
dec
xchg
jbe
call
enter
fisubl
fs
frstor
test
jbe
rolb
cmp
mov
cmp
into
and
dec
ss
les
loop
sub
inc
mov
fs
nop
cmp
cmp
xor
pop
dec
popf
cs
cwtl
cmp
add
lret
push
xchg
or
arpl
sbb
dec
repz
or
loope
or
rcrb
xchg
push
fiaddl
pop
mov
cmp
or
call
sbb
xor
dec
scas
mov
inc
loop
ret
cs
aas
loopne
and
scas
xchg
push
xchg
sarb
call
or
xchg
pop
pop
and
jb
cmp
cs
lsl
hlt
add
push
pushf
and
push
ret
pop
cmp
shlb
and
cmp
jg
inc
jecxz
cmc
jns
jb
scas
xlat
pushf
and
inc
scas
call
mov
and
fdivr
scas
pushf
and
rcl
fs
mov
add
loop
scas
pop
inc
adcb
scas
mov
scas
mov
sbb
cmp
ret
outsb
andl
dec
cwtl
inc
add
jae
pop
mov
es
dec
pop
shlb
leave
xchg
jae
hlt
sbb
mov
dec
fwait
sbbb
idivl
and
rolb
pop
nop
mov
mov
fwait
enter
leave
xchg
push
fwait
xchg
or
cmp
shrb
mov
fwait
jmp
fsts
mov
cmp
xchg
fwait
ss
adc
xchg
sbb
sub
mov
in
and
or
mov
roll
adc
xchg
js
loopne
pop
loop
pop
in
fs
leave
inc
mov
dec
sbb
and
popa
inc
and
dec
sbb
test
xlat
lock
adc
mov
pop
xchg
fldl
xlat
cmp
jnp
jecxz
and
pop
adc
push
mov
sbb
and
popa
xlat
pusha
cmp
stos
ret
test
aas
shrl
sub
adc
push
adc
add
push
enter
bound
call
popf
cmc
in
outsl
nop
xlat
shll
cs
dec
mov
xlat
push
mov
push
xlat
pop
adc
lds
xlat
psubd
push
aad
je
fnstenv
add
mov
mov
xchg
push
adc
xlat
push
adc
mov
mov
cmp
xor
cmp
out
in
mov
jge
aam
or
inc
xchg
mov
aas
xor
unpcklps
das
cmpsl
cli
out
or
daa
call
movswl
and
adc
call
xor
clc
lret
in
xchg
sub
lock
call
and
jge
sub
and
dec
call
pop
mov
andps
movsl
pop
call
in
xchg
das
pusha
call
push
stc
repnz
call
je
gs
pop
sub
cmp
call
mov
inc
sbb
cmp
sub
es
sbb
adc
lret
lret
movsb
rclb
push
in
fnstenv
jl
unpckhps
ret
les
xchg
lret
enter
lret
fldl
mov
movsl
jb
jle
jae
jb
pop
sub
pop
call
push
in
inc
aam
movsl
jb
pop
lock
es
sub
adc
add
add
leave
or
movsl
mov
or
loope
adc
cs
sbb
cs
dec
in
mov
stos
and
push
mov
sub
cs
dec
mov
jle
jae
in
mov
cs
inc
gs
dec
mov
dec
xor
push
adc
and
or
pop
add
inc
inc
inc
or
push
or
push
cs
jb
inc
inc
jge
and
int
dec
xor
jo
xor
sahf
jl
test
fistps
enter
je
data16
js
imul
data16
sbb
xorb
dec
lcall
or
cmp
inc
and
cli
cmp
call
lcall
sub
cmp
mov
cli
mov
movsb
mov
mov
movl
lods
push
inc
mov
inc
dec
daa
push
out
add
add
shlb
addb
mov
push
push
bound
test
test
adc
push
mov
and
dec
mov
pop
flds
pop
mov
sbb
xor
cmpsb
dec
mov
mov
sub
mov
cmc
pop
addr16
adc
xor
push
movsb
arpl
movsb
fwait
dec
popf
sbb
add
loopne
sbb
je
popf
or
xchg
cmp
dec
mov
jb
pop
adc
pop
mov
cld
mov
rcrb
mov
sub
pop
xor
sbb
xchg
das
inc
inc
mov
inc
test
popa
fsubrp
addb
pop
adc
cltd
hlt
out
xchg
jp
ret
push
mov
lret
push
dec
sbb
dec
movsl
push
pop
xor
push
mov
inc
push
xchg
mov
and
xor
pop
or
inc
mov
or
pop
mov
push
push
mov
mov
mov
mov
xchg
scas
or
or
sbb
mov
pusha
sub
jno
xor
nop
push
xchg
movb
je
mov
in
inc
xor
adc
or
xor
mov
jp
inc
sbb
rcll
mov
movsb
push
sub
or
xchg
fs
ficomps
push
ret
inc
sub
mov
dec
push
stos
cmpsl
dec
adc
aam
jne
sub
pop
mov
outsb
mov
and
mov
fld1
inc
cmp
sub
push
mov
dec
jnp
mov
adc
test
dec
aam
cmp
cli
mov
pop
lds
stos
mov
adc
adc
pop
mov
imulb
push
dec
xchg
cmp
mov
xchg
cmp
xchg
push
xchg
sub
rclb
or
lods
pushf
xchg
sub
xchg
gs
inc
jmp
in
aam
je
cs
sarb
xchg
jo
push
call
aaa
je
mov
sti
xchg
stos
dec
push
ret
adc
jno
xchg
inc
xorb
jge
mov
pop
or
shlb
xchg
mov
add
xchg
sub
inc
sub
xchg
cmp
jp
rolb
ja
sub
frstor
adc
jno
add
xor
add
bnd
cs
xchg
jns
je
pop
cmpsb
xchg
push
add
lods
lret
xchg
les
or
shl
loope
xor
xchg
and
in
pop
daa
fcompl
xchg
and
push
rcrb
lods
fwait
add
and
shlb
leave
inc
sub
dec
lcall
out
rcl
inc
inc
ja
adc
push
pop
mov
adc
sti
call
fwait
mov
mov
and
mov
or
adc
mov
ss
push
mov
dec
js
jmp
mov
jmp
mov
shrl
mov
testb
mov
int
sub
nop
nop
mov
push
ret
add
je
sar
adc
or
pop
pop
shlb
or
inc
pop
je
movl
adc
or
or
call
xchg
sarl
push
push
call
pop
pusha
and
dec
aad
nop
test
aad
loopne
push
sbb
aad
xor
sbb
aad
mov
ror
addb
sub
dec
repz
sub
dec
aad
mov
and
out
aad
je
nop
xchg
mov
out
sbb
xchg
faddl
mov
mov
inc
lods
and
repnz
fsubrs
pop
add
jnp
dec
push
mov
sub
add
lea
mov
dec
xor
sarb
adc
inc
jmp
pop
mov
inc
dec
xchg
and
mov
push
call
add
xchg
jo
sub
adc
or
mov
popa
pop
add
pop
inc
mov
outsb
inc
cmp
orb
mov
push
bound
idivb
sub
jbe
mov
mov
jmp
adcb
mov
mov
sbb
lds
je
mov
add
pop
nop
mov
or
mov
imul
mov
imul
arpl
xchg
push
cld
lret
or
ds
gs
outsb
add
sbb
aaa
lds
push
fdivrs
subb
mov
and
push
dec
pusha
add
sub
test
or
jae
dec
dec
inc
and
hlt
push
cmp
dec
mov
sarb
femms
cs
mov
call
out
pop
add
sbb
fisttpll
mov
andl
or
out
and
jle
inc
pop
and
add
sbb
fcompl
or
fwait
andl
out
adc
lea
out
and
mov
movsb
aaa
inc
out
xor
out
dec
pop
adc
out
enter
sbb
cmpsl
cmp
out
jp
push
add
loopne
sub
cs
or
push
fwait
cmp
pop
sahf
cmp
push
cmpsl
fwait
pop
mov
rcrb
dec
push
xor
pop
jmp
dec
cmp
push
adc
mov
and
and
pusha
popa
and
add
call
sbb
roll
sub
sbb
bound
test
addr16
pop
in
and
fldcw
inc
adc
mov
in
pop
add
push
out
cmp
adc
hlt
ljmp
push
pushf
stc
cld
sahf
jg
push
mov
test
xchg
je
shlb
test
mov
sarl
inc
jae
add
pop
pop
sub
call
jae
mov
adc
push
xor
and
cmp
and
push
ja
lret
or
cltd
sub
daa
mov
or
xor
inc
fwait
mov
push
or
and
inc
push
or
push
sub
lahf
nop
loope
add
insb
xchg
cmp
jno
xor
sub
subl
ljmp
stos
sahf
sbb
inc
mov
jmp
mov
sub
sbb
shll
adc
fwait
enter
jg
mov
sub
cmp
addr16
arpl
mov
cmp
mov
out
call
mov
mov
fdivrs
xchg
sub
push
jb
pop
fstl
mov
movsl
cmp
enter
inc
loope
dec
mov
movsl
hlt
les
inc
sub
sbb
sub
cmp
sub
stos
jne
dec
add
fistpl
adc
test
or
jp
stos
inc
ss
xchg
mov
aam
subb
xor
sub
add
sti
fwait
repz
adc
inc
fdivl
repnz
xlat
fwait
push
push
out
gs
add
stos
clc
dec
mov
fsub
mov
adc
xchg
fwait
loop
jb
jge
adc
jb
adc
sbb
insl
adc
push
mov
or
mov
cmp
lock
adc
sti
scas
bound
in
sti
lcall
jne
pusha
xlat
ret
xchg
aam
inc
icebp
in
inc
andb
and
mov
movsb
pop
mov
xchg
or
movsb
repz
mov
lret
shrl
inc
pop
add
xrelease
adc
and
pop
push
add
mov
int
mov
jecxz
inc
test
sbbb
cs
inc
sub
inc
sbb
mov
inc
out
sbb
inc
lds
cltd
adcl
mov
and
movsb
pop
jmp
dec
pop
pop
aad
inc
jmp
mov
int3
or
add
add
mov
jmp
push
sbb
jns
mov
cmp
add
and
repz
out
out
sbb
ret
repz
sahf
mov
push
ds
clc
sbb
mov
out
aam
push
mov
pushf
pop
push
cmp
push
mov
fcomip
cmp
inc
push
push
sub
push
nop
movsb
push
jns
out
push
xchg
jl
push
inc
sahf
out
out
cmpb
push
push
out
cmp
sbb
repnz
repz
rcr
into
mov
neg
mov
ret
into
sbb
incb
add
out
repnz
loop
sbb
repz
mov
lcall
pushf
int
jns
scas
lret
or
and
repz
inc
pop
data16
cmp
repz
repz
rcr
in
decb
ss
sbb
repz
inc
push
shr
int3
ds
pusha
jb
jle
sahf
mov
daa
shl
mov
push
clc
adc
sub
cmp
aaa
repz
pusha
je
fs
push
cmp
repz
daa
pop
mov
jbe
mov
cmp
jle
cwtl
cmpsl
pusha
insl
push
jnp
mov
iret
dec
test
sarl
les
jbe
push
scas
test
add
pop
das
out
jmp
mov
addps
jo
add
xor
in
push
lret
inc
sub
pop
or
scas
lea
gs
dec
push
je
or
mov
js
dec
jmp
push
ja
add
add
lahf
lds
jno
es
fisubl
js
xor
xor
nop
sub
or
jae
outsl
fmuls
jbe
mov
mov
pop
add
bound
add
bound
and
xor
outsb
mov
push
jl
and
cmp
das
or
das
sub
push
mov
cmp
mov
jae
bound
or
inc
or
dec
add
push
pmuludq
fdivs
and
imul
and
idivl
inc
add
sub
icebp
jo
outsl
adc
in
mov
das
fistpll
faddl
cmp
mov
jg
jl
dec
or
add
decl
stos
arpl
push
dec
inc
push
push
inc
push
inc
pop
inc
outsl
outsl
cmpsb
int3
fwait
lret
rorb
sbb
nop
subl
es
pop
insb
dec
xor
xor
aas
in
cmc
and
pop
dec
imul
loope
pop
sub
jne
outsb
je
dec
fcomps
dec
arpl
xor
mov
lret
inc
inc
xor
sub
inc
inc
sub
sub
inc
inc
xor
xor
xor
jge
pushl
xor
inc
xor
xor
ss
xor
cmp
fdivl
cmp
xor
clc
inc
inc
xor
mov
aam
or
dec
sub
faddl
test
push
jo
or
jg
or
cmp
xor
incl
fildl
or
push
and
popa
loope
fildl
adc
xor
inc
pop
dec
cmp
adc
lods
mov
push
clc
push
sbb
push
inc
push
dec
and
cmp
shrb
ss
pushf
xor
add
dec
outsl
mov
dec
fs
xchg
loopne
jl
mov
push
ss
pop
inc
dec
hlt
imul
ficoml
pop
push
imul
pushf
inc
push
inc
out
adc
push
sub
iret
sarl
push
in
xor
cs
sahf
add
bswap
imul
outsb
lods
and
hlt
ljmp
iret
jo
xor
add
scas
adc
insl
clc
mov
and
outsl
xor
imul
inc
ljmp
fs
je
push
push
sub
and
inc
cmp
in
adc
mov
sbb
xchg
or
scas
fisubs
cmp
jo
lods
push
inc
jge,pn
je
sub
inc
aaa
clc
push
shlb
insb
insb
mov
xchg
and
test
lret
icebp
xor
add
mov
dec
inc
xor
or
pop
and
insb
pusha
daa
pop
push
outsl
push
out
pop
add
mov
imul
and
adc
mov
and
call
jnp
inc
cli
pop
or
imul
nop
xchg
loopne
jns
cmpsl
mov
or
fs
xchg
gs
cmp
insb
jbe
add
popa
fs
jo
fwait
jo
test
roll
sbb
jnp
imul
jp
push
jmp
outsl
jns
ret
cmc
push
pop
arpl
inc
cs
push
push
push
add
sub
cs
add
mov
outsl
adc
pop
push
popa
imul
dec
add
cmc
sbb
pop
xor
or
mov
pop
add
add
mov
adc
add
push
mov
xor
sbb
inc
rclb
adc
push
pop
adc
or
or
add
sbb
and
xchg
xchg
xchg
pushf
add
sbb
push
sub
and
jg
adc
inc
mov
inc
ret
pop
add
or
ret
enter
or
mov
add
sahf
out
push
orb
or
add
jae
rcll
mov
das
push
adc
iret
jae
add
adc
push
sbb
sahf
cmpsl
stc
cmp
enter
sbb
sarl
sbb
push
das
push
mov
nop
cld
and
cli
imul
imul
iret
pushf
out
sahf
push
cld
fdivr
mov
cmpsl
sbb
cwtl
sbb
aam
xor
mov
aad
mov
mov
es
ds
outsl
inc
lds
arpl
push
adc
test
jno
aaa
ds
cmp
dec
sbb
xchg
or
ret
popl
adc
out
lcall
fcomps
mov
push
insb
xor
iret
repz
nop
mov
mov
repz
push
jns
pop
mov
dec
repz
out
inc
inc
cmp
xor
repz
xor
and
sbb
iret
repz
adc
or
jns
iret
repz
cld
or
hlt
out
sahf
out
enter
jns
movsb
nop
jo
xor
cmp
sarl
int3
mov
insb
repz
repz
sub
adc
out
sahf
out
push
fcom
les
js
sub
aam
cmp
repz
xchg
jo
sbb
add
call
cwtl
pop
dec
les
iret
inc
adc
or
pop
pop
pop
les
pop
pop
and
and
sbb
and
inc
xchg
inc
xor
out
mov
scas
sub
adc
add
adc
fnstsw
push
inc
dec
cmp
cltd
js
or
divb
stos
lods
fisubl
push
push
sbb
pusha
adc
insl
scas
push
lock
sub
pusha
je
add
roll
mov
test
mov
pop
mov
sbb
bound
imul
push
jmp
and
sbb
xchg
dec
mov
sbb
jmp
ret
jae
les
decl
dec
adc
les
movsl
inc
imul
adc
stos
xchg
icebp
or
ljmp
mov
andb
rolb
ret
jns
adc
add
decl
roll
push
inc
push
xor
add
xchg
cld
inc
inc
mov
jnp
out
push
les
loope
inc
cmp
add
out
jae
jne
pop
stc
sbb
or
sub
call
push
je
imul
adc
arpl
aas
and
imul
pop
jb
pop
push
test
or
jp
jo,pn
int3
js
or
sahf
mov
adc
push
push
dec
adc
testb
das
inc
scas
in
stos
scas
outsl
jl
add
cmpsl
ja
lahf
add
jmp
mov
loopne
xchg
outsb
repnz
fsub
ds
mov
insb
addr16
mov
inc
add
or
jbe
inc
mov
and
sbb
aas
fdiv
xchg
or
cmp
mov
ss
movsl
fadd
cmp
sete
int3
loopne
jnp
data16
ljmp
add
xchg
sbb
dec
xlat
jns
pop
jbe
jns
rcr
cmp
ss
push
lcall
lret
jecxz
push
test
adc
aaa
or
push
popf
jl
in
adc
aas
sbb
adc
cmpsb
jg
mov
jbe
push
xor
mov
enter
aam
cmp
mov
sbb
cmpsl
mov
outsl
daa
xchg
inc
add
iret
fcmovnbe
cmp
dec
and
sarl
jbe
fstps
movsl
mov
adc
aam
mov
cwtl
mov
adc
fs
loopne
mov
mov
push
sahf
loopne
daa
jbe
xlat
fdivp
dec
enter
mov
ss
bound
push
xor
push
mov
xchg
xchg
cmp
inc
movsb
cmp
push
dec
imul
add
out
adc
ltr
insb
cmp
push
jnp
lcall
dec
xchg
inc
push
es
pop
adc
add
push
outsl
ja
xor
bound
sub
mov
push
add
pop
pusha
add
out
daa
movsb
and
pop
mov
and
add
inc
repnz
mov
jns
inc
lods
mov
ret
fucomip
cmc
inc
dec
fidivrs
jno
sbb
leave
push
jb
mov
adc
inc
add
insl
jo
lock
add
outsb
push
add
mov
dec
add
xchg
add
push
lods
or
mov
jae
nop
push
adc
sbb
sub
xor
mov
jb
jnp
inc
roll
lret
out
adc
add
jecxz
inc
jecxz
xchg
xchg
sbb
pushf
push
push
add
and
add
es
mov
inc
push
mov
xchg
pop
ret
adc
mov
test
cmp
push
jo
jb
jns
jge
pop
xchg
mov
movsl
and
imul
mov
push
sbb
sub
inc
scas
imulb
push
sbb
in
loope
adc
jge
pop
push
inc
pusha
inc
cmp
mov
inc
cmpsl
movsl
mov
inc
imul
or
xchg
mov
mov
add
pop
add
cmp
sbb
fbld
jne
negl
lods
gs
notb
cli
or
inc
rolb
sub
or
push
push
es
pop
xor
fdivrl
xchg
shll
and
daa
and
pop
xchg
or
sarb
push
fs
lahf
xor
fnsave
dec
inc
ret
icebp
jae
and
inc
cs
sti
mov
jle
test
clc
and
call
or
mov
xor
ret
roll
and
sbb
xchg
push
add
sarl
xchg
jno
je
outsl
mov
rclb
lds
pop
insl
loopne
stc
add
push
pop
rorl
xor
orb
push
jbe
mov
adc
das
xor
dec
dec
pop
add
sub
jns
xchg
fs
lds
push
lret
and
and
push
outsl
pop
rol
cmp
xchg
jle
cmp
dec
and
roll
push
push
add
add
and
xchg
scas
sbb
xor
lock
cs
add
fistps
mov
push
mov
out
push
mov
mov
nop
jge
push
adcb
arpl
inc
jmp
enter
dec
xchg
jne
inc
js
aaa
dec
inc
dec
pop
mov
xchg
or
aas
inc
cmc
push
xchg
test
adc
push
stos
mov
sbb
push
add
inc
jp
xlat
push
add
mov
stos
iret
add
jo
jo
mov
xor
xor
loopne
pop
mov
fs
sub
mov
push
addb
ds
sub
push
jo
in
ror
jno
cmp
push
fs
loopne
arpl
xchg
pop
roll
in
xchg
xchg
add
cmpsl
ljmp
dec
imul
adc
out
jno
add
iret
pop
add
fcom
xor
out
shll
cmpsl
add
push
pop
sbb
mov
xchg
xchg
or
sbb
and
jns
push
jle
popa
insb
cld
inc
jae
xor
cli
adc
sbb
je
ja
pushf
ret
push
testb
outsl
xor
into
add
add
dec
aam
lcall
mov
out
pop
sub
jnp
insb
sbb
add
out
jle
sub
rcl
xor
out
push
dec
sbb
and
pop
outsl
mov
pop
ficomps
mov
push
frstor
mov
fwait
xchg
adc
ja
scas
scas
sub
push
jecxz
push
mov
push
pop
or
or
in
aam
jl
dec
das
lret
jae
mov
add
pop
pop
push
insb
popa
cmpsl
shl
push
sbbb
push
setle
or
push
iret
icebp
xchg
and
jge
and
add
sub
arpl
jns
adc
daa
imull
test
mov
mov
jo
pop
add
add
gs
cmp
iret
dec
int
imul
sti
movsb
push
pusha
stos
fsubrl
ret
xor
jo
pusha
adc
xor
hlt
mov
push
jo
or
xchg
orb
test
mov
daa
sub
fs
add
push
dec
mov
push
push
mov
out
or
or
clc
out
lock
enter
repz
mov
lods
test
pop
mov
pushf
cwtl
xchg
nop
mov
jns
out
js
push
cmp
pop
push
inc
cmp
and
iret
repz
sbb
cld
in
lock
adc
call
mov
enter
cmp
repz
mov
repz
push
cmp
sub
sbb
iret
repz
or
cld
in
hlt
jns
out
in
in
int3
mov
lods
mov
mov
js
out
jns
fs
inc
sub
and
adc
repz
jmp
adc
inc
test
push
dec
pusha
arpl
pop
adc
push
roll
push
jmp
push
mov
daa
adc
or
cmp
out
testl
lock
push
leave
xchg
add
nop
dec
or
aaa
addr16
sarb
push
aaa
cpuid
push
push
push
imull
lret
jbe
add
pusha
pop
testb
push
mov
add
add
dec
add
push
addl
daa
adc
scas
pop
cmovge
fstpl
adc
mov
inc
addl
shrb
adc
jns
mov
push
pop
add
fwait
jo
add
in
cmp
mov
push
outsb
add
sub
fimull
cmp
insl
xor
ffree
sub
jbe,pn
and
es
xchg
lahf
mov
xor
xor
ds
je
mov
xor
mov
xor
loopne
outsl
jb
imul
mov
jnp
lods
popf
xchg
imul
add
inc
inc
js
and
jo
sub
and
pop
rolb
jb
jne
popa
pop
cmp
es
popaw
insb
into
insl
rcrl
pusha
sub
das
sti
ss
sbb
inc
loopne
jmp
jnp
jnp
push
inc
add
inc
pop
pop
adc
jg
mov
aam
add
xor
xor
sbb
pushl
bound
loopne
sbb
das
xor
xorb
xor
xor
xor
xor
xor
xor
movsb
xor
pushl
adc
xor
xor
xor
xor
xor
xor
xor
xor
xor
dec
xor
pushl
enter
ljmp
ss
es
dec
aaa
push
aaa
mov
jmp
pushl
iret
aaa
call
aaa
adc
dec
cmp
cmp
cmp
cli
cmp
cmp
cmp
cmp
cmp
cmp
data16
cmp
call
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
sub
ret
loopne
sarb
aas
push
lock
idivl
or
push
add
adc
and
dec
xor
xor
outsb
xor
popf
xor
xor
call
xor
xor
xor
xor
mov
xor
xor
xor
aas
clc
xor
out
xor
xor
xor
xor
xor
xor
aas
cmp
xor
scas
xor
shlb
jecxz
call
xor
mov
ss
ss
ss
ss
mov
lock
sbb
jno
mov
aaa
loopne
add
or
mov
cmp
loopne
jmp
cmp
cmp
cmp
aas
cld
cmp
push
cmp
jl
cmpl
mov
cmp
push
adc
cmp
cmp
cmp
cmp
cmp
cmp
pop
cmp
imul
cmp
cmp
jg
and
test
jo
test
mov
stos
aas
adc
xor
inc
aas
popa
aas
cmpl
aas
mov
les
into
aas
out
jmp
repz
cmp
pop
xor
xorb
xor
fdivr
pushl
fnsave
ljmp
xor
xor
xor
xor
xor
pop
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
pop
xor
movsb
cmc
lcall
jo
xchg
xor
xor
xor
lock
pushl
xor
xor
xor
xor
xor
push
aaa
push
sub
ss
clc
call
loop
cmp
cmp
cmp
mov
mov
cmp
cmp
cmp
cmp
mov
cmp
loope
std
cmp
cmp
xchg
aas
inc
aas
pop
aas
ja
inc
sbb
pusha
pop
loopne
das
jle
or
cmp
pop
xor
push
xor
pushl
xor
xor
xor
xor
xor
xor
ret
xor
pop
cld
xor
pop
xor
lcall
clc
xor
xor
lock
pushl
test
mov
mov
nop
xor
out
in
xor
scas
clc
xor
outsl
jmp
arpl
xor
cmp
cmp
inc
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
jp
cmp
mov
stc
cmp
cmp
cmp
push
lock
lcall
das
cmp
ds
fidivrl
jmp
xchg
outsb
xor
xor
mov
xor
dec
ss
xchg
cmp
cmp
mov
mov
ljmp
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
clc
pop
and
adc
dec
aas
push
mov
dec
shr
incl
aas
lret
aas
in
out
out
jo
mov
xchg
xor
xor
xor
xor
lcall
cld
add
xor
xor
loop
xor
xor
std
pushl
push
xor
mov
xor
xor
scas
std
xor
cmpsb
mov
xorb
ss
add
or
aaa
and
jg
aaa
dec
aaa
dec
aaa
push
aaa
pop
aaa
imul
xchg
mov
xchg
aaa
mov
aaa
xor
cmp
mov
imul
popf
cmp
xor
pusha
cmp
mov
icebp
cmp
cmp
cmp
sbb
push
cmp
inc
cmp
dec
cmp
popa
cmp
pop
aas
sbb
cmp
cmp
cmp
adc
cmp
cmp
cmp
cmp
cmp
repnz
adc
sub
xor
cmp
cmp
dec
cmp
push
cmp
lcall
insl
cmp
js
cmpl
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
out
cli
push
cmp
cmp
cmp
sbb
cmp
dec
cmp
push
cmp
mov
cltd
cmp
jp
jg
cwtl
ds
ds
call
out
ds
das
aas
cmp
je
jge
mov
movsl
aas
stos
aas
mov
mov
xchg
into
or
push
xor
insl
pushl
stos
lcall
fidivl
in
pop
or
or
adc
and
sub
cmp
jb
aas
scas
mov
xor
xor
xor
xor
xor
xor
jg
fbstp
xor
xor
scas
jno
xchg
xor
xor
ljmp
cmpsb
pushl
xor
xor
mov
pop
pop
pushl
xchg
aaa
fwait
sahf
cmpsb
mov
xor
scas
cmp
sbb
cli
xchg
cmp
fdivrl
aaa
cmp
mov
mov
data16
dec
cmp
cmp
cmp
cmp
and
add
xor
push
or
xor
cmp
bound
data16
push
filds
pushl
outsb
aaa
jb
jbe
xchg
ja
js
jge
cmp
cmp
pop
jmp
cmp
cmp
cmp
cmp
jle
mov
pop
dec
out
sbb
ds
xor
xchg
aas
push
das
clc
stos
dec
mov
insl
xor
mov
fcomip
xor
xor
xor
jl
fiadds
cmpsb
cltd
aaa
mov
ret
aaa
jmp
bnd
ljmp
or
cmp
pop
cmp
jge
mov
cmp
cmp
incl
jbe
xchg
cmp
cmp
cmp
mov
and
and
cmp
cmp
fdivrs
push
aas
jne
mov
xlat
lcall
or
mov
fwait
xor
xor
dec
add
xlat
or
repnz
aas
xor
shll
mov
xor
fsub
adc
es
dec
ret
jg
ss
outsb
notb
ss
in
and
cmp
rorb
xchg
cmp
mov
ds
ljmp
aad
clc
das
push
imul
cmp
test
mov
ret
call
jg
dec
cmp
push
cmp
pusha
data16
aam
fnstsw
jecxz
imul
mov
cmp
cmp
cmp
cmp
pop
sarb
inc
cmp
cmp
jge
mov
pop
and
push
cmpb
cmpsl
ds
loopne
ljmp
idivl
add
sbb
addr16
loope
popa
sbb
cmp
jg
xor
xor
pop
xor
xor
cmp
or
xor
xor
xor
xor
xor
mov
xor
push
lcall
add
xor
ds
dec
aaa
pop
aaa
js
mov
stos
cli
fidivl
out
in
aaa
cli
aaa
ljmp
cmp
cmp
cmp
mov
cmp
jg
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
jmp
ljmp
cmp
cmp
cmp
cmp
cmp
cmp
adc
push
sub
pusha
aas
cmpb
aas
fdivrl
loop
out
out
pop
rclb
dec
clc
loop
sub
jne
adc
xor
jae
sub
xor
jg
xchg
xor
xor
xor
clc
xlat
or
jge
xor
xor
ljmp
lcall
add
adc
sbb
sbb
sub
sub
nop
cmp
cmp
cmp
int3
cmp
cmp
cmp
ljmp
push
out
xor
aaa
adc
mov
inc
xor
xor
lcall
decb
loope
movsb
xor
les
int3
mov
xor
xor
incl
or
int3
xor
cmp
sub
sub
xor
pushl
or
inc
cmp
cmp
cmp
adc
cmp
fiadds
loop
je
js
jl
cmpb
cmp
push
add
push
shl
mov
int3
mov
cmp
cmp
ljmp
call
dec
cld
pop
mov
call
cmp
pop
stos
sbb
and
and
add
lock
cmp
xor
cmp
inc
cmp
pop
jg
dec
cmp
pop
cmp
cmp
insb
cmp
test
sarb
cli
jl
cmpb
push
mov
nop
call
test
xchg
cwtl
mov
sub
xor
inc
clc
mov
push
aas
push
aas
xchg
aas
cwtl
aas
lods
aas
mov
rcrb
cld
pop
sub
aas
fdivrs
loopne
clc
jbe
push
ja
lahf
jle
cmp
pop
bound
clc
xor
lock
pushl
and
inc
xor
xor
cwtl
xor
xor
xor
xor
or
push
cwtl
cmpsb
cmp
outsl
cmp
add
xor
pusha
xor
pusha
cmpsb
and
fimuls
xor
jmp
shlb
sahf
int3
shlb
aam
fdivs
fdivl
loopne
in
dec
sbb
cmpsl
call
ss
ss
ss
pop
loopne
jle
or
or
adc
adc
aaa
sbb
and
and
sub
sub
mov
aaa
cmp
cmp
inc
aaa
inc
aaa
dec
jb
aaa
push
aaa
pop
aaa
pop
aaa
pop
loope
cli
pusha
aaa
jo
je
jl
xorb
aaa
mov
nop
aaa
xchg
faddl
into
mov
dec
mov
mov
jmp
xor
enter
shlb
aam
fdivs
fcoml
pop
mov
in
out
aaa
hlt
clc
dec
pop
mov
cld
aaa
hlt
add
or
adc
adc
sbb
sbb
mov
ret
fdivrl
call
mov
cmp
pop
std
jg
mov
cmp
cmp
sub
cmp
cmp
cmp
cmp
aad
mov
cmp
jl
test
lcall
mov
mov
cmp
mov
mov
cmp
je
movsl
pop
orl
or
in
xchg
movsb
fs
lret
out
out
xchg
lods
pop
push
aaa
cmpsb
punpcklbw
icebp
push
fnstenv
stc
popa
aaa
stos
mov
push
lret
aaa
ljmp
gs
outsb
add
jl
aaa
mov
daa
or
pop
out
push
imul
push
add
inc
ds
loope
addb
push
jns
add
jge
test
sbb
es
stos
xor
out
lods
mov
or
lret
out
addb
cmp
and
push
xchg
sub
sub
add
repnz
and
dec
mov
cwtl
or
mov
rclb
out
add
sbb
push
pop
pusha
or
dec
out
subb
add
cwtl
insb
or
sub
daa
add
mull
fsts
daa
popa
or
test
int
movsb
scas
aas
and
mov
add
inc
pusha
mov
fmull
push
gs
adc
or
gs
dec
add
mov
mov
xor
popa
sbb
ror
pop
popa
addr16
sbb
call
out
lods
cmp
xchg
sbb
sti
push
push
sub
je
and
imul
pop
bound
jle
cld
arpl
incl
jl
or
incl
jb
hlt
cld
mov
adc
add
sub
xchg
pusha
mov
dec
and
push
fdivrs
and
or
in
adc
incb
mov
call
mov
out
sub
aaa
pop
imul
push
std
mov
sub
or
xchg
insl
add
jp
aaa
or
xor
ffreep
and
or
cmpb
adc
jge
mov
inc
imul
or
mov
xchg
add
push
inc
inc
dec
inc
jbe
or
addb
les
inc
ret
push
add
and
ret
mov
add
pop
std
push
mov
inc
sahf
add
lret
cmc
jp
sarb
inc
ds
dec
sbb
icebp
inc
and
jmp
cmp
jne
notb
pop
mov
negl
add
pop
jmp
push
cmp
dec
add
push
call
out
arpl
nop
cmp
mov
or
andb
push
dec
pop
inc
mov
in
je
cltd
adc
andb
int
lds
dec
pop
aaa
movsl
addb
push
clc
pop
add
or
lods
sub
or
push
imul
inc
loop
sbb
adc
xchg
loope
xor
jbe
jo
jo
dec
cmp
inc
enter
and
and
push
sarb
and
push
pop
fidivrl
lea
sbb
fwait
inc
xchg
pop
clc
fldl
inc
mov
mov
cmp
and
test
and
cmp
ret
test
mov
lods
adc
xchg
push
or
or
inc
add
sub
pop
adc
ja
mov
pusha
lcall
adc
fsubs
fs
js
jecxz
pop
add
add
or
adc
rorb
inc
imul
fcoml
inc
push
add
push
jecxz
pushl
push
xor
dec
xor
sbb
sbb
inc
adc
pop
or
xor
push
dec
shlb
cmp
mov
lock
and
subl
add
or
pop
sub
cmpsb
pusha
or
pop
dec
les
pop
adc
dec
adc
inc
or
fstpt
pop
inc
xor
pop
int3
pop
adc
loopne
adcl
leave
inc
jo
inc
jmp
sbb
xor
push
lods
mov
push
sub
cmp
cmp
or
fcmovnbe
mov
xchg
inc
call
jp
dec
xor
sbb
bound
sar
bound
add
ret
inc
or
stos
pop
inc
jmp
and
lods
sbb
test
and
push
lods
sbb
or
gs
testl
je
cmp
push
jge
inc
or
inc
push
mov
hlt
rolb
jmp
addl
inc
imul
add
inc
adc
imul
sbb
mov
es
lret
imul
imul
loope
mov
xchg
push
shlb
outsb
push
and
adc
lods
mov
add
adc
mov
cmp
pop
aaa
xor
scas
stos
inc
adc
fidivl
aas
sbb
enter
inc
jae
add
mov
call
stos
adc
sub
mov
and
and
mov
leave
jp
push
adc
mov
push
enter
push
sbb
inc
inc
and
jbe
sub
mov
push
imul
arpl
sbb
dec
mov
dec
sbb
pop
xor
and
push
jnp
sub
adc
sbb
call
jge
adc
mov
fmuls
inc
stc
jbe
mov
or
mov
push
pop
sahf
jbe
inc
xchg
jne
mov
and
mov
xchg
push
les
pop
call
and
scas
and
push
and
in
adc
push
test
sbb
pop
sub
jmp
add
cmpsl
fsubrl
mov
push
inc
add
adc
cmpsb
jge
or
push
add
push
add
add
mov
pop
and
in
sub
add
loop
dec
adc
fwait
stc
and
outsb
add
sbb
add
sbb
or
pusha
insl
add
cmpsb
and
das
pop
gs
movsl
mov
xor
mov
push
add
fistps
adc
or
push
gs
popf
or
cmp
or
mov
sub
sub
adc
inc
sbb
xchg
xchg
sbb
sbb
stos
fimull
fidivrl
fstl
inc
fimull
stos
stos
add
mov
fcmovu
cmp
es
add
mov
mov
or
push
adc
fldt
sbbb
and
jl
cmpsb
add
movsb
addl
jne
add
adcl
mov
xor
mov
hlt
adcb
adc
and
shlb
insb
mov
daa
gs
out
add
sub
ljmp
and
fldlg2
aam
jg
and
cmp
mov
nop
push
and
es
add
fldl
dec
lret
mov
dec
mov
xchg
fidivs
fs
push
dec
jo
xchg
jns
out
roll
push
mov
sub
cmp
out
push
ja
sub
lret
sbb
in
fsubl
adc
xor
inc
pop
nop
inc
push
fs
mov
add
jmp
jo
out
outsb
mov
sub
mov
cmp
repz
push
call
xchg
gs
cmpsl
push
or
and
inc
cmp
push
xchg
jns
inc
push
push
push
out
pop
out
jbe
add
mov
cltd
jle
and
xor
add
cmp
cltd
and
pushf
mov
xchg
adcb
cltd
mov
in
popa
add
or
stc
adc
out
mov
pusha
mov
cmp
mov
repz
xchg
sbb
repz
stos
jnp
cmpsl
ret
sub
adc
daa
addb
mov
sub
es
repz
es
add
pop
and
daa
cmpsb
mov
daa
lcall
daa
daa
daa
xor
and
daa
daa
xor
dec
shll
daa
sub
jb
sbb
sub
in
imul
sub
dec
shll
sub
or
shlb
sub
inc
lcall
cmpsl
and
cmpl
pop
and
les
cmp
lods
inc
and
sbb
aaa
adc
ret
popa
push
mov
scas
adc
stos
cltd
push
fcomi
out
xor
subl
mov
syscall
sbb
cmp
xchg
fisubl
push
jp
jle
int
or
clc
fs
dec
sbb
inc
sub
push
pop
addr16
inc
add
sub
jbe
call
or
and
testb
xchg
call
fnsave
and
mov
or
or
movsl
jnp
addr16
pop
push
nop
dec
mov
pop
cwtl
addr16
jle
mov
mov
movhpd
addr16
adc
adc
xchg
push
addr16
rolb
iret
adc
mov
inc
mov
push
rorb
test
add
test
cwtl
stos
das
xor
add
or
or
loopne
addr16
inc
push
or
addr16
adc
nop
xor
sbbb
sbb
adcb
test
lcall
inc
inc
inc
mov
das
push
loop
jl
mov
mov
cld
add
sub
sbb
push
adc
sbbl
mov
cltd
cwtl
nop
add
sbbb
ljmp
rol
sbb
mov
les
add
mov
xor
loop
add
js
inc
cwtl
pop
cmp
sbbb
cmp
sbb
repnz
sbb
insb
aaa
xor
sti
sbb
nop
sbb
cwtl
test
test
sub
mov
loope
push
adc
outsl
and
adc
in
pop
int3
or
push
cltd
sub
adcb
adc
pop
fcoms
leave
mov
pop
dec
mov
xchg
popf
pop
dec
sbb
xchg
dec
inc
scas
mov
test
jl
fisubrl
lds
xchg
xchg
jmp
outsb
adc
dec
fstl
or
push
mov
xchg
test
mull
mov
sbb
xchg
add
cs
mov
push
sbb
cmpb
push
xchg
sub
jo
daa
mov
mov
cmp
mov
cmp
mov
xchg
pop
add
push
cmc
es
lds
xor
push
pop
aam
sbb
popf
not
pop
loopne
xchg
fsubs
mov
fwait
adcb
and
pop
xchg
cmp
sub
pusha
cmp
push
test
jl
add
pop
pop
aam
inc
xchg
loopne
inc
mov
push
adc
fstpl
and
or
bound
ss
mov
pop
adc
and
stos
or
and
sub
inc
insb
push
pop
adcb
pop
les
xor
push
adcl
int
push
xchg
das
push
xchg
xor
bound
aad
pop
mov
sub
mov
pusha
popf
and
shr
pop
add
mov
mov
pop
rol
and
fldl
adc
fcoms
or
xor
mov
lea
jmp
nop
mov
adc
mov
pop
inc
pop
mov
enter
add
inc
pop
xchg
adc
lods
mov
pop
and
inc
pop
mov
inc
sbb
pop
push
les
imul
cmp
push
popa
mov
adc
xor
ret
pop
xchg
pop
xchg
xchg
cmp
aam
mov
rcrb
sub
loopne
xor
shlb
pop
mov
inc
movsb
stos
cmp
xor
push
add
sub
enter
xor
cmp
enter
inc
pop
inc
loop
enter
inc
pop
cmp
dec
and
pop
mov
sub
fucomp
cld
push
or
push
call
add
jo
and
pop
dec
adc
cmp
popf
lods
adc
fdivs
lds
pop
stos
fists
out
inc
out
test
pop
call
nop
xor
xorl
mov
add
jo
nop
rol
xor
mov
addb
faddl
xchg
push
mov
jb
nop
orl
mov
mov
or
cmp
push
and
fildl
push
ja
inc
lods
jl
nop
arpl
xor
pop
push
movsb
pop
pop
xor
push
outsb
je
nop
sbbb
outsl
cmp
pop
dec
out
xor
subl
and
xor
test
xchg
xchg
cmp
push
push
mov
aas
lcall
cmc
mov
fstl
pusha
ss
dec
ffree
insb
lret
loop
push
repnz
dec
int3
fdiv
adc
jecxz
mov
arpl
das
sub
arpl
pop
or
into
cmpsb
xor
pop
int3
in
mov
pop
inc
fdivl
fdivrl
pop
lods
lret
call
jne
pop
inc
nop
mov
adc
mov
pop
mov
mov
les
push
mov
adcb
or
xor
in
in
mov
mov
mov
or
add
sbb
sbb
dec
and
fisubl
daa
loop
bound
iret
xor
shl
je
ds
xchg
push
fs
or
popl
dec
test
push
in
data16
loopne
nop
loopne
and
xor
pop
jb
push
imul
andb
and
in
fsubl
rclb
mov
adc
sub
xchg
sbb
in
movsb
adc
daa
xchg
daa
adc
cmp
add
roll
add
sbb
cltd
andl
cwtl
and
jnp
ret
rcrb
pop
adc
and
inc
cltd
push
in
inc
cltd
jp
inc
mov
push
push
cltd
push
adc
test
call
loopne
mov
push
stc
cltd
xchg
rclb
shll
xchg
push
inc
jmp
cwtl
xchg
adc
cmpsl
mov
adc
dec
dec
leave
out
push
addl
xchg
push
adc
js
fimuls
mov
cmpl
mov
mov
stos
lret
push
push
lahf
mov
lods
in
sbb
add
or
cmpb
repnz
xor
sub
mov
mov
jo
cmpsl
or
sub
adc
shrb
mov
and
mov
nop
aam
adc
mov
adc
call
sub
inc
insb
xor
sbb
test
mov
dec
push
mov
aas
in
mov
jmp
add
ret
call
jp
sti
mov
in
push
faddp
xchg
and
je
adc
adc
ret
lahf
and
imul
js
jl
cmpb
test
and
and
arpl
inc
push
mov
dec
push
inc
sub
icebp
dec
sbb
inc
push
cmp
stos
adc
and
sub
or
pop
jl
or
pop
or
xchg
xchg
pusha
jno
and
jp
pop
dec
sbb
adc
or
sbb
and
inc
or
arpl
lods
loop
repz
sbb
js
fld
pop
movsb
xor
jo
jne
xchg
pop
push
add
adc
test
add
sub
fisttps
movsl
inc
mov
es
test
fistps
and
push
fwait
push
xchg
jecxz
test
pop
xchg
push
cmpsl
lds
push
fcoms
push
xor
fiaddl
popf
mov
mov
pop
adc
hlt
xchg
pushf
mov
imul
fdivl
daa
mov
xchg
or
mov
ficoml
push
pop
pop
fwait
xor
push
xchg
sub
xor
push
push
test
into
xchg
add
leave
and
aam
xchg
cmp
aam
aam
fldenv
sarl
sbb
rcll
dec
arpl
xchg
or
cmc
rcrb
or
xchg
sbb
nop
xchg
sbb
adc
cmpb
cmp
rolb
inc
cs
fs
dec
seta
mov
fnsave
les
push
inc
xchg
mov
outsb
filds
rcrb
xor
xchg
and
xorb
xchg
mov
ljmp
cwtl
sub
mov
rorb
xchg
ret
fs
xchg
leave
rolb
pop
lods
and
or
jmp
pop
pop
cmp
call
cwtl
sub
xor
add
and
dec
dec
jl
stos
lret
xchg
inc
inc
test
movsb
icebp
jnp
in
add
push
ret
ja
add
ret
xor
xchg
imul
ljmp
push
xor
xor
xor
push
xor
mov
push
in
insb
aaa
mov
loope
clc
push
stos
adc
mov
test
int3
leave
call
lret
int
mov
fmul
pop
incb
out
sti
das
push
in
mov
sarb
push
dec
scas
inc
int
out
pushf
pop
subl
cmp
insl
sbb
or
fidivrl
dec
arpl
imul
push
inc
mov
xchg
mov
test
sub
mov
adc
dec
sahf
in
out
stos
fildl
adc
and
jb
push
test
nop
or
call
sub
call
sbb
aaa
fildl
roll
outsb
fsts
and
jp
add
inc
fstl
fucomi
nop
cmp
cltd
sub
push
mov
or
and
push
ret
pop
and
add
cmpsl
add
dec
loop
mov
mov
push
or
inc
fistpl
xchg
and
sub
popa
loopne
fildl
fstpt
dec
push
dec
test
or
xchg
mov
repz
push
fidivrl
push
and
aam
mov
xor
adcb
loopne
aaa
out
or
adc
bnd
sbb
mov
test
push
call
dec
push
push
xchg
fcmovnu
jecxz
in
or
inc
test
add
pop
dec
xchg
inc
add
loope
rcr
push
mov
add
test
xchg
add
and
aaa
fistpll
dec
ret
pop
fnstsw
mov
add
adc
or
in
iret
leave
pop
adc
bound
ror
or
int3
push
push
adc
jns
mov
sub
dec
pop
mov
lret
lret
add
mov
lret
lret
adc
cld
mov
hlt
mov
fdivrl
aam
int3
mov
jns
cmp
mov
test
mov
xchg
mov
jns
jns
jns
jno
imul
push
mov
cmp
xor
jb
sbbl
cmp
inc
push
in
mov
sbb
and
lret
mov
push
jb
subl
das
cmp
inc
mov
sbbl
gs
push
jb
mov
and
cmp
cs
nop
sbbl
mov
enter
in
mov
in
das
cmp
mov
jb
sbbl
pushf
mov
inc
push
xchg
in
pop
gs
push
jb
addl
cs
and
sbb
and
mov
push
jb
mov
das
add
adc
mov
daa
add
sahf
or
hlt
movsb
sbb
mov
xor
and
scas
adc
or
push
imul
xor
in
sbb
push
sbb
or
lret
xchg
data16
cli
mov
inc
dec
call
in
sbb
cmp
cmp
lcall
mov
inc
inc
mov
mov
jl
dec
dec
xchg
push
pop
repnz
arpl
xor
lock
sbb
push
mov
push
popa
aam
inc
or
stos
or
and
das
add
pop
js
add
inc
inc
mov
mov
stc
dec
leave
and
sub
jb
dec
repnz
dec
push
mov
or
test
imul
notl
les
mov
hlt
imul
testl
pop
icebp
xor
sub
out
sub
mov
inc
xchg
inc
inc
add
cmpsl
jmp
test
inc
mov
or
rcll
inc
sub
lods
sbbl
lret
lea
test
movsl
sub
cmp
dec
vpmacswd
jns
gs
hlt
push
mov
cs
lret
xchg
mov
add
xchg
and
mov
sub
xchg
jl
stos
push
xchg
mov
jbe
movsl
sub
mov
sub
sarb
sarl
sub
push
lret
sbb
cmp
mov
push
xchg
adc
xchg
and
pop
movsl
sub
stos
repz
xchg
movsl
rcll
push
xchg
movsl
inc
test
int3
mov
sbb
pop
inc
xchg
addr16
and
mov
dec
add
add
insl
popa
movl
lock
jecxz
push
call
call
gs
sub
mov
jnp
pushf
mov
cmp
scas
push
out
xchg
and
push
xchg
scas
mov
and
sbb
gs
dec
pop
pop
sbb
iret
decb
in
sub
adc
jne
cmpsl
mov
sub
sub
mov
ficompl
and
gs
mov
pop
mov
dec
pop
mov
mov
dec
jbe
dec
jbe
test
inc
scas
push
adc
jo
mov
adc
push
pop
jo
mov
xchg
mov
loop,pn
movsl
mov
xchg
movsl
add
mov
mov
fsubr
sub
or
adc
sub
call
out
cmpsl
mov
and
push
dec
mov
out
push
lahf
mov
call
shrb
dec
mov
cmc
xchg
movsl
add
mov
jno
rclb
mov
sbb
xchg
push
adc
jmp
lods
jnp
mov
adc
test
loopne
movsl
mov
sub
mov
mov
daa
xor
cmp
pop
gs
or
es
xchg
out
cmp
xchg
mov
and
mov
pop
lea
movsl
aad
sbb
cmpsl
sub
or
mov
rol
aam
data16
pop
jo
icebp
fwait
and
cmpsl
sub
jmp
sub
mov
insl
stos
mov
inc
push
cmpsl
mov
sarb
js
je
aad
dec
out
imul
sbb
rcrb
ret
jle
mov
sub
fmull
lcall
xchg
mov
push
cmpsl
sub
loopne
mov
push
cmp
repnz
lock
call
sbb
inc
test
cmp
jg
dec
loopne
push
sbb
add
add
xor
or
sbb
add
adc
sub
mov
and
mov
mov
dec
push
or
lret
mov
gs
add
xchg
out
imul
mov
lret
inc
mov
enter
jmp
cmpsl
xor
mov
inc
xchg
rclb
sub
mov
pop
xor
pushf
mov
pusha
stos
adc
mov
ret
jecxz
mov
sbb
add
adc
xor
gs
call
cmp
mov
push
xlat
sub
pop
sahf
shrl
mov
out
test
je
push
les
sub
push
loop
xorb
mov
push
pushf
mov
jne
adcb
stos
mov
push
imul
mov
sub
gs
cmpsl
xor
dec
scas
or
repnz
or
xchg
adc
mov
adc
data16
or
mov
push
xchg
scas
cmpsl
mov
add
lahf
loope
cs
adc
les
push
mov
out
pop
cmpsl
sub
mov
jb
in
xchg
push
cmp
jg
sbb
mov
pop
fisubrl
dec
mov
andb
inc
cmpsl
sub
xlat
inc
inc
sub
cmp
loope
mov
in
sbb
shlb
xchg
test
cmp
mov
out
test
adc
inc
push
orb
jnp
cli
lods
mov
mov
in
das
nop
mov
adc
mov
mov
lcall
xor
push
mov
mul
mov
in
xor
lock
mov
push
xor
test
push
cltd
inc
pop
push
and
sbb
sbb
mov
or
push
ja
pop
xchg
cmpsb
cli
sahf
arpl
movsl
cmpsb
and
fnstcw
mov
ds
adc
jmp
cmpsb
push
testb
jns
out
push
sub
mov
int3
faddl
sbb
repz
sub
inc
push
pop
outsb
cmp
repz
xchg
test
enter
repz
outsb
or
push
ds
cmp
repz
jb
mov
int3
out
push
stos
out
sahf
cmpsl
adc
cmp
out
sahf
pusha
jbe
test
into
out
idivl
add
push
sbb
sahf
out
sahf
xor
dec
pop
insb
adc
inc
ja
pop
cmpsb
add
ret
lods
push
adc
and
xchg
aad
pop
mov
push
lea
ret
or
add
out
mulb
sbb
push
push
mov
repz
mov
cmc
add
repz
clc
mov
mov
inc
adc
iret
mov
xchg
adc
add
push
pop
add
mov
sahf
idivl
mov
add
out
sarb
adc
adc
push
ds
sarl
sbb
sbb
xchg
out
sbb
or
int
xchg
out
test
push
pop
sahf
mov
and
pop
cmpb
ds
repz
jp
cmp
hlt
call
and
lcall
mov
or
enter
outsl
enter
test
add
sahf
out
add
and
out
adc
add
xchg
in
repz
repz
fcom
int3
iret
repz
enter
mov
cmp
movsb
mov
iret
repz
nop
mov
iret
cmpb
insb
cmp
repz
fs
pop
pop
repz
repz
push
dec
dec
inc
iret
repz
inc
cmp
xor
sub
iret
repz
adc
add
nop
jns
out
fmul
test
push
dec
sub
pop
iret
repz
movsb
jl
push
dec
inc
lcall
cld
mov
jns
out
shlb
cmp
out
lock
int3
test
jge
xchg
push
xor
jg
push
add
lock
es
mov
push
sub
push
pop
and
pop
add
add
sub
adc
inc
pop
add
push
aaa
xor
push
push
add
fs
xor
pushw
mov
es
enter
shlb
jbe
xor
add
lahf
testb
adc
das
fdivrs
sbb
daa
add
or
daa
aas
xchg
add
sahf
mov
daa
insl
iret
sar
push
mov
inc
add
outsl
sarb
imul
lahf
add
fwait
addr16
pop
cmpb
inc
pop
fs
insb
shll
jbe
add
mov
imul
push
andb
shrl
into
mov
les
inc
pop
rorl
loopne
cmp
xchg
sub
inc
fisttps
xor
aas
inc
lahf
or
jg
dec
jle
pop
inc
dec
mov
xor
aas
sti
push
sbb
push
push
andb
fsubl
push
clc
push
dec
mov
out
xchg
adc
sub
fisttps
mov
imul
imul
scas
push
xor
xor
pushf
add
rorl
idivl
mov
pop
xor
cmp
pop
dec
push
insb
daa
stos
outsb
cs
outsb
lahf
inc
outsl
rcrl
gs
cs
push
or
sub
rolb
fsubl
cmpsb
daa
add
loop
jbe
xorb
mov
iret
sub
outsl
jne
leave
cmp
div
push
push
arpl
add
movsb
sarl
outsl
and
jb
mov
mov
ljmp
xor
cmp
push
leave
or
mov
outsl
les
adc
and
mov
pop
pop
mov
mov
jp
xor
fwait
dec
add
mov
dec
xor
push
mov
sbb
inc
push
mov
push
push
dec
sbb
sbb
sbbl
pop
inc
or
imul
push
xor
xor
xchg
xchg
mov
push
push
sbb
bound
or
push
or
cmp
add
sub
sbb
add
lahf
bound
sub
arpl
lods
add
imul
scas
sbb
add
add
sarl
insb
pusha
or
pop
push
aaa
mov
jae
add
adc
push
pushf
outsl
xchg
or
bound
mov
ficompl
pop
sahf
inc
js
inc
xchg
movsb
xchg
jle
pushf
jns
out
cwtl
xchg
nop
mov
je
pop
push
pop
dec
cmp
repz
inc
cmp
xor
cmp
repz
and
out
cmp
sbb
adc
xchg
iret
repz
hlt
xchg
in
push
in
enter
cmp
mov
test
inc
xor
xrelease
repz
push
fs
push
dec
idivl
jns
inc
push
and
add
cmp
repz
in
xchg
push
enter
repz
repz
cwtl
nop
mov
js
jo
pop
inc
cmp
in
cmp
push
adc
jns
cmpsl
stc
lock
loopne
mov
out
xchg
insb
pop
add
subl
pxor
test
inc
xor
stos
and
push
sbb
sbb
test
ja
sbb
add
stos
sbb
pop
clc
mov
ds
pop
jg
cld
pop
enter
mov
pop
jbe
and
subl
mov
pop
cs
fcoms
sub
aas
js
dec
pop
fistpll
inc
popa
jne
xchg
sbb
das
xchg
mov
rolb
popf
popa
or
shlb
sbb
xor
les
push
xor
xor
fisttps
mov
fwait
xor
ss
es
ss
ss
nop
ss
sub
ss
aad
dec
sub
xor
outsl
incl
cmp
cmp
aas
cmp
fstpt
push
cmp
xchg
es
les
xchg
lret
cmp
cmp
cmp
fwait
mov
inc
jnp
cmpl
ds
inc
sbb
xor
cmp
cmp
ds
notrack
clc
into
ds
faddl
ljmp
ds
aas
rdtsc
or
aas
pop
aas
and
sub
xor
aaa
into
inc
decl
data16
jbe
jnp
cmpl
movsb
aas
mov
sarl
idiv
sbb
push
xor
jl
xchg
sar
aas
cmpsb
mov
xor
sbb
xor
sub
xor
pop
shlb
pusha
adc
mov
scas
cmp
adc
cmp
xor
je
call
fmuls
cmp
xor
xor
fildll
xor
xor
xor
xor
xor
xor
xor
xor
xor
dec
mov
or
xchg
ss
mov
ss
xorb
pushl
sbb
arpl
std
inc
loop
cmp
cmp
add
pop
cmp
ljmp
incl
sub
xor
xor
cmp
sar
ds
cmp
cmp
pop
cmp
clc
and
push
outsl
cmp
pusha
je
and
cmp
out
pop
fdivrp
outsb
cmp
negb
jg
mov
cmp
cmp
jg
mov
dec
push
outsb
ja
jle
test
add
cmp
iret
cmp
cld
cmp
mov
ds
ds
cs
add
push
cwtl
xchg
aas
cld
pushl
mov
xor
xor
xor
xor
push
xor
or
xor
xor
xor
xor
xor
pushl
leave
inc
lds
xor
xor
outsb
xor
loopne
repnz
ud0
xor
dec
ss
bound
xorl
ss
ss
adc
fnsave
jecxz
clc
cmp
ss
ss
aaa
or
push
push
xor
clc
cmp
inc
aaa
stos
mov
mov
dec
adc
push
cmp
scas
xor
cmp
sbb
pop
xchg
icebp
fnsave
cmpsb
test
mov
xor
sarl
fcoms
cmp
cmp
cmp
cmp
cmp
cmp
and
or
cmp
cmp
pop
push
stos
pusha
cld
pop
cmp
jns
jle
xchg
mov
xchg
dec
lahf
cmp
or
fcmovb
cmp
lcall
stos
push
add
insb
cmp
cmp
cmp
cmp
cmp
cmp
or
push
fs
cltd
xchg
xor
insl
pop
jno
mov
dec
aas
outsb
and
das
xchg
inc
cmpl
aas
ret
aas
iret
out
js
dec
dec
fdivrl
xor
into
xor
sbb
jp
jg
xor
xor
xor
xor
xor
xor
jo
in
sbb
pushl
pop
xor
xor
push
or
cmp
or
dec
xor
leave
hlt
xor
mov
ss
adc
push
ss
ss
arpl
stos
addl
out
ss
xor
mov
adc
jne
jle
or
sbb
sub
pop
add
mov
cmp
sbb
cmp
cmp
cmp
aaa
or
test
sbb
cmp
stos
dec
cmp
mov
xchg
icebp
arpl
outsb
ret
fnstsw
fildll
in
inc
out
ds
or
cmp
aas
fstpt
adc
push
fbstp
divb
data16
cmpsl
sbb
mov
xor
xor
xor
jecxz
xor
movsb
xor
sbb
xor
xor
xor
xor
xor
xor
xor
xor
xlat
xor
adc
clc
pushl
mov
pushf
ss
mov
sbb
xor
ljmp
data16
jb
push
jmp
loop
cmp
pop
cmp
lcall
divb
push
jmp
std
cmp
inc
ds
imul
icebp
ja
out
ds
aas
lods
cmpl
jl
sbb
mov
mov
popa
jl
cld
xor
out
sub
xchg
cli
cmp
cmp
xchg
or
decl
imul
inc
cmp
sub
cmp
xor
xor
xor
xor
xor
push
imulb
or
pop
dec
rorl
loopne
push
xor
pop
add
test
pop
aaa
arpl
pop
pusha
jge
sub
cmpsb
xor
xor
mov
push
je
js
andb
and
ret
inc
daa
mov
jle
xor
rorl
mov
mov
test
pop
lods
popf
xor
popa
push
mov
dec
sbb
cmp
inc
in
xor
cmp
xchg
subb
int3
xchg
pop
pop
ret
sub
insb
jb
mov
jl
mov
inc
mov
inc
xor
mov
ja
fsubrp
pop
xchg
cld
xor
pop
or
decl
xor
adc
adc
sbb
sbb
and
sub
cmp
mov
dec
call
push
xchg
pop
xor
mov
xor
insb
out
call
call
xor
xor
add
mov
loope
repnz
dec
sbb
ror
fdivs
fadds
js
js
test
nop
xlat
sbb
or
jle
jp
cmp
loope
lahf
push
xor
outsb
jo
unpckhps
mov
cmp
dec
add
lret
fmull
push
pop
pop
daa
cwtl
out
shl
ljmp
adc
sbb
sub
push
insb
xor
xor
xor
stos
push
xor
add
outsl
shlb
push
xor
fs
xor
mov
xchg
push
ret
xor
sbb
jb
xor
sbb
fadd
pop
lcall
cs
call
xor
xor
inc
add
iret
inc
addl
sub
jg
in
xor
xor
aam
xor
xor
xor
xor
jg
jo
push
xor
pop
xor
mov
xor
xor
inc
aas
clc
js
jl
andb
pushf
xor
ds
jmp
xor
xor
xor
xor
into
shlb
int3
add
or
mov
push
inc
jecxz
xor
jp
pop
fnsave
sub
jecxz
arpl
es
clc
xlat
sbbb
sub
decl
fdivr
nop
mov
add
inc
adc
push
call
neg
adc
add
or
jg
pop
pop
push
or
or
or
or
or
adc
adc
push
adc
dec
popa
dec
les
or
pop
sbb
adc
adc
outsb
xlat
push
adc
add
data16
or
mov
add
rolb
mov
xor
add
sahf
add
ficoms
add
xchg
or
inc
mov
dec
rorl
add
popa
dec
idivl
jge
inc
add
lea
hlt
incl
adc
pop
and
xor
xchg
and
inc
adc
xor
cmpb
cmp
add
sbbl
les
xchg
xorb
dec
mov
push
xchg
popa
adc
dec
nop
ret
xor
xchg
and
andb
and
add
es
scas
cmp
mov
adc
push
adc
pop
popa
jno
and
and
lods
or
xor
adc
das
stos
and
loope
icebp
mov
mov
mov
and
inc
mov
fiaddl
or
mov
dec
jo
or
decl
bound
add
lds
cld
cli
and
mov
incl
jg
fnstsw
ficompl
cmpsl
xor
mov
test
pop
lahf
mov
movsl
jecxz
cli
pop
dec
and
out
stc
or
xchg
jg
jmp
or
insb
sub
addr16
out
or
push
push
xchg
add
repnz
incl
jbe
scas
jle
fcmovnu
clc
cmp
fisubrl
in
mov
orb
int3
lcall
push
pop
sbb
mov
push
pop
mov
pop
pop
mov
popl
movb
decl
sti
ret
scas
adc
mov
xor
lods
scas
xchg
test
call
scas
and
sbb
sarl
and
roll
fwait
movsb
jmp
push
lret
push
out
in
in
and
ss
repz
cmpsb
pop
outsl
icebp
mov
pop
lock
std
or
pop
decl
dec
aaa
dec
dec
pop
push
out
outsl
loope
loope
rorl
mov
int
arpl
mov
jp
push
out
or
cld
push
push
sahf
pop
clc
sti
jg
jno
lock
jg
inc
icebp
xchg
std
sarl
xor
fdivr
decl
hlt
and
xchg
jmp
sbb
das
mov
out
pop
jb
mov
or
push
xor
mov
int
inc
fwait
sbbb
mov
dec
jp
push
gs
dec
rcrl
stos
hlt
push
add
stc
loope
mov
sar
push
mov
fildl
icebp
testb
mov
lcall
pop
xor
jns
mov
in
repnz
jno
pop
sub
jg
scas
cld
or
push
decl
sbb
cld
andb
outsl
sbb
jb
adc
push
push
movsl
lods
jp
testb
sbb
into
fcomps
sbb
sbbl
outsl
fcmovne
andl
aas
loopne
cli
adc
aaa
xchg
in
add
inc
sahf
fisubs
or
dec
fisttpll
out
aas
std
cli
push
push
ljmp
outsb
push
idivl
cmp
sub
inc
scas
inc
mov
jg
je,pn
sub
jg
imul
mov
mov
inc
es
gs
jns
enter
pushl
cmp
pushf
push
scas
xlat
sub
cmp
sti
punpckhbw
cmpsb
orb
mov
or
cmp
cmp
js
jmp
inc
push
sub
xchg
pop
clc
pop
hlt
lret
movsb
add
fildl
add
lea
jg
gs
std
xorb
jg
add
outsl
adc
ret
das
pop
pop
pop
shlb
out
sar
scas
cli
cmp
lock
or
sarb
std
pop
les
cli
mov
mov
mov
arpl
stos
mov
and
insl
add
leave
push
scas
loop
jge
push
shrl
jmp
mov
push
mov
adc
and
sbb
xchg
jo
and
out
test
jl
imul
rcr
lock
sbb
cmpsl
sahf
imul
fcmovnu
rorl
ljmp
nop
enter
add
cld
call
js
cmp
scas
lods
hlt
cmp
cmp
fistl
mov
adc
push
movsb
xchg
or
mov
stos
dec
lods
xor
outsl
pop
cld
ds
cmpsl
scas
popa
in
pop
or
mov
xlat
pushf
cld
aas
clc
jge
jnp
std
sbb
outsb
mov
sbb
jecxz
inc
adc
mov
adc
adc
call
inc
pusha
imul
add
mov
cmp
xchg
mov
fistps
jbe
xchg
and
add
jae
shrb
shlb
cld
sub
aas
stc
add
out
gs
jno
fidivrl
lock
adc
pop
cld
addl
scas
les
cli
adc
and
lahf
fdivrl
mov
push
enter
jecxz
scas
sub
in
pop
mov
hlt
sub
mov
dec
incb
fisubrl
aas
mov
in
pop
fsubrl
push
inc
or
pop
jg
add
mov
jae
cmp
sub
adc
mov
mov
adc
or
iret
push
jbe
push
sbb
stos
icebp
lcall
cmp
pop
incb
jno
adc
push
inc
jecxz
sbb
sarl
sbb
mov
lods
loopne
and
clc
addl
icebp
mov
mov
imul
push
in
push
cmp
dec
push
in
aas
mov
inc
fildl
push
and
fwait
imul
add
push
sbb
in
or
and
mov
adc
inc
aas
clc
call
jnp
rcrl
rolb
pop
inc
jb
fistpl
adc
call
mov
addr16
pop
nop
mov
inc
sti
arpl
loop
std
or
sbb
mov
inc
cmpsb
popf
push
loop
sbb
or
imul
xor
sub
xor
fsubr
fistps
lds
fidivrl
jg
decl
jbe
dec
mov
sub
jge
xor
lahf
les
sbb
sbb
cld
addl
cs
incl
mov
in
stc
mov
lahf
outsl
int3
push
sbb
std
inc
pop
pop
test
bound
pop
outsl
pop
cmp
xchg
inc
test
in
jge
popa
push
test
jbe
outsb
hlt
decl
daa
shl
dec
jp,pn
adc
lahf
mov
or
out
lcall
mov
pop
shl
cld
mov
cld
movsl
adc
stos
pop
jg
pop
shrb
rcl
jg
adc
xor
pushl
mov
gs
pushf
lea
jp
jnp
jecxz
adc
inc
lds
push
pop
adc
imul
or
inc
pop
jg
pushl
daa
rorb
and
add
cmpsl
push
sbb
mov
pop
inc
cmpsl
enter
sti
dec
inc
mov
into
test
xchg
movsb
insb
or
and
xchg
ficoms
mov
jp
clc
insb
test
aas
repz
add
mov
push
sbb
lock
in
jmp
out
sbb
aaa
cmp
push
std
mov
or
rcll
lods
out
jne
or
cmc
mov
push
mov
decl
sahf
enter
fcmovb
inc
adc
inc
loopne
test
out
rcr
dec
jg
inc
out
pop
or
or
dec
ss
fildl
or
repnz
or
daa
pop
and
imul
cmpsl
lret
pop
in
cmp
aaa
jg
jmp
mov
pop
lock
jmp
hlt
dec
mov
notb
sbb
xlat
inc
aas
mov
jg
mov
pop
cmpb
sub
addr16
sbb
cld
daa
jp
std
adc
mov
or
mov
ret
nop
cmp
das
incb
orb
lock
pop
pop
div
cld
idivl
in
cli
addl
lahf
loope
jae
add
shrl
je
jge
push
xor
jg
stc
add
out
fs
incl
mov
loope
mov
cmpsl
popf
adc
mov
fbstp
push
xor
jge
int
pop
add
cmpsb
cmp
call
incb
decb
adc
mov
and
mov
mov
sub
popf
dec
or
lock
and
int
add
enter
push
pop
aaa
std
fisttps
outsl
js
dec
inc
sbb
xchg
fimull
hlt
orb
ror
sbb
cmp
xor
aaa
inc
adc
pop
lds
aas
pop
clc
loope
loope
mov
xchg
push
inc
lahf
jp
dec
add
xlat
shll
je
xchg
fldenv
iret
movsb
or
xchg
lcall
decb
mov
loop
dec
and
out
jg
jno
ret
xchg
xor
out
cmp
xor
shll
out
inc
push
dec
jge
pop
clc
xchg
cmpsb
ljmp
ds
inc
mov
in
sbb
xchg
imul
test
test
js
add
sbb
mov
daa
jmp
faddl
mov
add
xor
push
imul
pop
stc
push
dec
out
fstpt
es
mov
mov
enter
jo
lahf
add
fsts
dec
jg
xchg
jl
add
sti
push
sti
pop
inc
xor
sbb
push
push
push
push
mov
test
mov
fisubs
dec
lcall
inc
test
push
std
decl
cmp
jge
out
dec
pushf
mov
sbb
ret
xchg
jns
pop
incl
stc
dec
xor
js
or
fistpl
mov
clc
pmaddwd
pop
mov
incl
aas
mov
aad
stc
xchg
lods
xorb
fcomps
fmul
inc
jp
cmp
ret
insl
das
mov
xchg
xor
sbb
push
mov
xor
stos
add
sbb
inc
popf
cli
fildl
dec
xchg
add
ficoml
xchg
std
stc
mov
stos
cmp
xor
js
fcmove
sub
mov
cmp
decl
testl
xchg
repz
xchg
and
loopne
fwait
incl
jns
mov
sbb
pop
in
dec
mov
xor
push
imul
push
lcall
xchg
jg
imul
jo
dec
stos
push
scas
pop
popa
in
sbb
nop
push
sub
cmp
lods
fisubl
movl
mov
scas
in
pushf
cmpsb
add
push
mov
decl
jge
lods
add
sub
cmp
gs
enter
mov
jmp
push
dec
push
inc
and
adc
push
sbb
call
dec
aam
int3
fcmovnu
not
adc
fstp
xchg
shlb
test
clc
subl
cmp
mov
incl
jl
call
mov
loop
mov
shll
es
jmp
aam
out
adc
lahf
dec
mov
fdivr
inc
mov
pushl
pop
in
cmc
mov
shll
test
mov
mov
lcall
adc
or
push
rolb
pushl
push
mov
out
dec
rcrl
insb
push
push
scas
pop
mov
ljmp
mov
aas
int
push
jo
jmp
imul
fdivrs
mov
mov
xor
sahf
sub
pop
lock
ljmp
pop
dec
icebp
mov
addl
jmp
leave
stos
les
fisttps
pop
mov
lods
fnsave
pushf
loope
inc
push
call
xchg
decb
fcomi
pop
inc
adc
sar
mov
nop
rcll
push
xchg
mov
mov
push
cmpsl
push
pushl
lcall
sub
adc
mov
test
jg
adc
int3
push
dec
aas
scas
sbb
mulb
inc
or
adc
or
add
xor
adc
cwtl
insb
sub
stos
fistpll
inc
mov
sbb
shlb
mov
dec
xlat
push
push
stos
xlat
jns
js
decl
sbb
or
scas
mov
sbb
cmp
outsl
jmp
xchg
push
dec
xchg
mov
cwtl
lret
out
pop
sbb
jmp
out
sbb
mov
scas
dec
push
in
addl
mov
adc
enter
sti
jns
xlat
pop
cmc
xor
loope
mov
adc
cmpsb
cmp
jmp
fdivr
out
xchg
cmpsl
incl
sub
icebp
adc
gs
xor
adc
insl
loope
mov
cs
fildl
imul
jns
lret
or
ret
add
jae
subl
adc
ljmp
nop
push
stc
and
push
jne
and
or
cmp
and
repz
decl
sub
add
mov
fldlg2
sarl
xchg
popa
xlat
dec
fdivl
jecxz
incl
fsub
mov
pop
incl
and
mov
jbe
int3
imul
in
sbb
out
clc
aad
push
mov
inc
xchg
shll
outsl
mov
cmp
jnp
in
lock
or
cli
popf
mov
ficompl
loopne
test
setg
bound
sbb
jnp
or
sbb
pop
ror
ret
lcall
les
push
movsl
js
push
inc
add
jmp
outsb
pop
sub
xchg
push
mov
sub
ljmp
clc
adc
mov
daa
add
and
decl
and
add
nop
mov
fcomip
adc
push
fsubp
aad
or
mov
out
and
dec
daa
pop
push
pop
ljmp
scas
cmp
mov
mov
xlat
inc
push
int3
inc
aas
imul
vpmacssww
push
pop
inc
loopne
lcall
aaa
dec
scas
aas
cltd
xchg
mov
cld
jne
cwtl
xchg
stos
lcall
bound
cmp
sti
lahf
ljmp
scas
mov
fwait
jmp
addr16
cmpsb
pop
push
bound
sub
ljmp
sbb
aaa
loope
or
cmpsl
jnp
xchg
dec
testl
xchg
ljmp
xchg
xchg
std
xchg
rcll
xchg
jle
rclb
add
cli
mov
jmp
pop
lcall
cmp
in
hlt
lods
lcall
popa
jmp
std
jge
ljmp
pop
dec
inc
push
bound
arpl
push
imul
jge
fists
dec
jge
push
mov
pusha
ljmp
xchg
nop
icebp
push
push
adc
xchg
and
cmc
cmpl
mov
ljmp
stc
pop
inc
cltd
cmp
inc
jmp
adc
mov
test
pop
lea
lods
jmp
mov
and
xchg
or
adc
std
push
lcall
lret
pop
jns
inc
outsb
test
sbb
jns
ret
and
out
and
jge
mov
loope
inc
xor
pop
je
jle
inc
lret
decb
mov
jmp
lock
imul
push
leave
mov
sti
add
add
lret
jno
adc
sub
xchg
int3
inc
xchg
mov
mov
movsl
data16
lods
popa
jp
stos
ret
mov
mov
std
add
push
cltd
stc
subl
xor
subb
fwait
cltd
repz
dec
sub
sub
dec
cmc
cli
mov
ljmp
decb
mov
test
jnp
sbb
loopne
adc
out
lcall
inc
and
adc
sub
enter
test
mov
fldt
insl
aaa
std
jmp
pusha
sbb
jno
sarb
push
sub
mov
mov
fwait
dec
loop
hlt
mov
inc
jp
ljmp
mov
pushf
adc
add
aas
insl
mov
sbb
pop
je
jmp
mov
xchg
xchg
jge
icebp
aam
jl
adc
ljmp
nop
jge
repz
mov
jmp
out
mov
pop
mov
sbb
loope
sbb
jecxz
lods
xchg
xor
lret
push
enter
pushl
add
aam
mov
add
inc
mov
sub
addr16
adc
mov
cli
ljmp
push
not
xor
loope
cld
inc
mov
sarl
xchg
push
or
sbb
ljmp
aaa
add
addr16
lds
in
xchg
sbb
pusha
dec
xor
jp
loop
sar
incl
add
mov
scas
cs
iret
in
mov
mov
jmp
jg
rcrb
aam
push
push
xchg
push
mov
jne
push
les
daa
ja
call
mov
ret
pop
mov
jl
adc
lods
pop
frstor
adc
push
ficompl
stos
in
loop
out
clc
incl
outsb
xor
jge
loop
mov
rol
adc
ffree
jmp
bnd
stos
sahf
xchg
fdivs
cmp
ljmp
je
lods
je
jns
enter
dec
mov
jl
es
js
push
cli
in
lds
jo
lcall
sbbb
iret
sahf
jl
adc
jg
jg
popa
jbe
xchg
jl
dec
lock
imulb
out
inc
lds
dec
out
sbb
incl
testl
icebp
inc
imul
jmp
and
into
and
mov
lahf
inc
mov
inc
or
xchg
pop
stos
pop
mov
or
inc
mov
fcomip
fs
and
mov
or
insb
mov
int
orb
mov
fwait
mov
sbb
repnz
shl
fcomps
repz
dec
mov
and
jp
sub
add
in
mov
mov
add
stos
loop
mov
push
mov
lods
inc
jg
sbb
rcrl
mov
xchg
imul
ja
nop
into
cmp
or
ljmp
lret
sub
adc
pop
pop
and
outsl
or
cmp
mov
adc
fstps
in
iret
fs
xor
sbb
mov
sbbl
pushl
mov
push
clc
jge
nop
mov
pop
iret
inc
dec
lods
jo
cli
mov
sar
mov
loope
ljmp
inc
dec
arpl
out
xlat
xchg
repz
shl
ljmp
xchg
in
and
push
data16
lods
mov
and
ljmp
decb
add
mov
out
repnz
mov
lcall
pop
loop
out
cmp
mov
testl
mov
int
mov
incl
dec
sahf
xor
jno
xor
sub
fstpl
scas
lret
or
std
enter
inc
push
xchg
aas
nop
jnp
adc
xor
pop
sahf
js
add
pushl
push
and
pop
sub
stos
data16
sbb
repz
mov
fcomip
inc
cmc
mov
test
lret
xor
cwtl
jle
adc
ljmp
test
cmpsb
cmpsb
cmp
and
mov
sahf
adc
pop
int
push
int3
into
lcall
inc
push
mov
pop
inc
adc
mov
sti
or
jecxz
roll
stos
mov
mov
les
int3
sbb
lods
add
std
incl
mov
scas
ss
outsl
lds
adc
pop
inc
aaa
cmp
pushf
add
lock
sbbl
pop
cmp
pop
xor
inc
inc
xor
aad
or
inc
inc
imul
sbb
pop
push
mov
fsubs
xor
pushl
jge
or
ss
inc
notl
cmp
add
push
cli
fs
cld
jmp
mov
inc
push
xchg
jg
jnp
inc
adc
mov
xchg
dec
push
mov
aaa
nop
arpl
jecxz
aas
rcll
in
xorl
push
xchg
push
decl
lock
rorl
dec
sub
lret
lock
cli
jmp
cmp
mov
and
ret
adc
xchg
repnz
mov
call
dec
mov
sahf
stos
shl
push
fdivrl
stos
fnstcw
imul
cli
repnz
jmp
pop
xor
jle
pop
loope
jnp
adc
mov
cmp
xchg
jl
repz
cmp
jmp
mov
adc
cmp
bnd
push
dec
aaa
pop
jge
pusha
cmp
mov
jne
fdivrs
lods
dec
and
lcall
jbe
sub
lods
pop
inc
mov
xor
ljmp
xchg
xor
cwtl
psadbw
gs
adc
dec
jne
ret
pop
jae
inc
ret
sub
outsl
clc
call
add
cmp
cmp
fsubr
mov
test
fistpl
ret
inc
jmp
bound
hlt
mov
jge
dec
push
sub
and
mov
mov
jmp
mov
dec
sub
pop
incb
push
les
xor
pop
std
mov
movsb
fimuls
and
stos
andb
call
inc
lock
aad
ror
inc
pop
stos
or
movups
mov
int3
xor
negl
mov
call
lret
fs
sbb
std
aam
aad
aas
dec
pop
test
push
mov
int3
and
js
movsl
out
cmp
incl
or
cmp
mull
js
cltd
in
xchg
jne
stos
dec
jecxz
lret
pop
push
xchg
mov
xor
decl
sbb
inc
ret
orb
cltd
xor
jp
inc
repnz
mov
jle
popa
mov
inc
test
and
dec
lcall
pop
add
push
xchg
jnp
push
mov
shll
out
push
aaa
lahf
es
test
shlb
jge
out
push
outsb
xchg
sahf
decl
clc
lahf
js
xchg
enter
inc
jb
imul
in
lea
jb
push
adc
xlat
inc
xchg
jle
repnz
sub
lahf
movsl
les
jmp
decl
and
test
xor
fidivs
pop
data16
aaa
fiadds
das
pop
imul
adc
aad
ficoml
jmp
jl
jp
jmp
cld
aad
mov
icebp
lods
repz
rolb
xchg
mov
repnz
add
fcomps
dec
in
gs
movsl
movsl
nop
cmpsb
jb
add
test
fsts
add
mov
cmp
fisttpll
inc
sbb
popa
jg
xor
fs
push
dec
adcb
cmc
arpl
movsl
jp
lret
mov
lcall
mov
cmpsb
cmp
addr16
repz
push
lds
decl
lock
pop
mov
insb
jns,pn
pop
repnz
in
outsl
xchg
add
ljmp
shlb
dec
mov
lods
ljmp
mov
mov
jmp
mov
dec
push
bound
sbb
stc
mov
mov
mov
lock
lock
mov
adc
fisttpll
js
mov
scas
fwait
mov
mov
dec
mov
push
sub
dec
cmp
lcall
pushl
stc
loopne
or
add
js
jl
adc
aaa
cltd
sbb
lret
add
lods
sub
je
test
push
dec
mov
lcall
jecxz
pop
ret
ror
int
xchg
stos
xor
xor
popa
and
jbe
dec
mov
cmp
and
pop
xor
nop
faddl
faddl
mov
outsb
sbb
sbb
mov
and
into
notrack
popa
test
mov
add
push
push
jl
push
or
call
shll
xor
pop
sti
or
fwait
sub
or
lcall
jmp
push
mov
push
sahf
pop
cmp
or
ss
aaa
cwtl
pop
sarl
lret
jg
out
cs
inc
rcrl
xor
mov
in
mov
dec
loope
jmp
decl
push
pop
push
mov
scas
cmpsb
test
iret
pop
and
mov
mov
sar
out
or
pop
mov
stos
mov
or
in
inc
daa
add
loop
lcall
sbb
adc
or
mov
ss
sbb
lea
ljmp
dec
adc
dec
jecxz
cli
sub
add
push
clc
popf
mov
pop
push
idiv
call
pop
gs
inc
mov
cmpsb
add
add
pop
pushf
insb
in
sbb
iret
jae
cltd
jno
xor
cmp
call
adc
scas
xor
fcompl
sub
rolb
rcrb
call
jg
sub
nop
dec
xor
ds
or
xchg
andb
push
sbbl
fdivs
xchg
je
sbb
adc
xchg
jmp
dec
or
test
jmp
in
pop
or
mov
or
popa
inc
lret
adc
ljmp
jnp
les
lret
jns
add
icebp
test
lahf
cmp
out
sub
rcll
fs
in
imul
or
add
daa
lock
cmc
dec
outsb
fmuls
dec
in
jne
ljmp
divb
aas
mov
xlat
mov
push
mov
cli
pusha
dec
pop
in
push
and
out
cmp
lcall
lods
mov
cmp
sub
icebp
popf
pop
stos
sub
loope
adc
call
mov
shl
dec
sub
jnp
andb
imul
jmp
xchg
or
into
jae
xchg
mov
xchg
or
ljmp
clc
test
sbb
dec
sbb
imul
pop
jae
mov
cli
inc
inc
cs
mov
mov
insl
iret
scas
jmp
mov
addr16
mov
push
or
sbb
fiadds
mov
xor
das
out
stc
jle
dec
pop
sub
out
aam
mov
stos
or
rcl
mul
or
insl
popf
mov
jmp
jmp
incl
mov
mov
ret
push
or
jg
ret
jge
ret
lcall
and
clc
jbe
add
push
mov
jmp
xchg
mov
incl
inc
imulb
mov
pop
mov
pop
or
pop
ljmp
dec
push
or
les
lods
sahf
in
cwtl
and
mov
movsb
inc
xchg
xchg
sbb
dec
clc
ljmp
enter
std
pop
push
xor
out
in
popl
popf
je
and
sbb
dec
pop
xor
sarl
adc
mov
xchg
mov
decl
xchg
inc
popa
mov
xor
dec
dec
ja
idiv
into
arpl
jmp
rcrb
sub
jg
inc
dec
loop
sbb
jo
push
and
outsl
ds
sbb
xchg
lea
pushl
mov
clc
ds
inc
xchg
inc
dec
add
insl
adc
inc
subl
add
pushf
inc
and
mov
call
fs
aad
fdiv
mov
mov
mov
xor
decl
lods
jbe
aaa
xchg
fcmovne
lahf
jae
pop
in
or
bnd
fsubrs
add
adc
cli
arpl
loopne
mov
xor
and
mov
sub
sub
inc
xor
lods
dec
cs
and
sahf
push
decl
dec
sbb
mov
mov
jo
in
pop
add
insl
shll
pushl
std
stos
lods
push
push
sub
jne
cwtl
sti
insb
ljmp
mov
xchg
dec
dec
dec
ds
icebp
add
test
outsl
cmp
fwait
lret
add
jae
aaa
jb
pop
sbb
xchg
mov
test
mov
add
cwtl
stos
cmpsl
or
cmpsl
mov
xor
add
incl
and
mov
daa
dec
out
outsb
ja
mov
nop
add
push
xor
sub
bound
sub
xchg
mov
fstpl
dec
push
dec
lds
xlat
and
decl
enter
jecxz
fucomip
mov
bound
dec
mov
lcall
jno
clc
mul
insl
mov
aaa
jmp
dec
inc
cmp
ds
mov
adc
mov
incl
xchg
sbb
out
adc
sub
add
sub
xorl
imul
mov
pop
aas
pop
pop
icebp
cmp
incb
mov
sub
add
call
in
pushl
pop
andb
mov
fmuls
stos
pop
xor
pop
into
fdivr
pushl
mov
xchg
push
xlat
sbb
enter
or
lods
jmp
xor
movsl
call
jmp
scas
adcl
hlt
add
xchg
xor
lcall
enter
sub
in
data16
in
jmp
pop
or
xor
incl
fldl
repnz
mov
inc
mov
sub
stc
movsb
xor
decl
jmp
jo
bound
jp
dec
daa
ss
cs
push
ljmp
sbb
mov
sbbb
hlt
into
cltd
jle
out
lcall
mov
pushf
or
cmpb
stos
in
popa
sti
scas
sbb
mov
stos
incl
xor
add
pop
sbb
fstps
push
dec
sbb
aad
ljmp
aad
mov
jno
sub
daa
mov
das
orl
mov
mov
lods
adc
les
jge
xor
inc
jne
rdmsr
popf
ljmp
cli
ljmp
fiaddl
pusha
test
push
mov
decl
mov
pop
mov
inc
and
dec
negl
add
lcall
decl
jle
in
push
add
test
sbb
outsl
pop
xchg
repz
lret
pushl
jno
xchg
mov
insb
cmc
rorl
mov
loopne
popf
push
incl
dec
add
lods
js
hlt
fdivl
popa
inc
push
enter
sbb
movsl
jno
push
sahf
stos
jg
ljmp
clc
dec
scas
mov
imul
xchg
loope
adc
icebp
push
jno
xchg
in
out
clc
ljmp
imulb
rcrl
data16
inc
push
cmp
call
mov
aaa
std
ljmp
xchg
push
and
fldenv
jo
push
js
jmp
fwait
or
ljmp
jne
scas
or
test
and
xchg
mov
test
scas
mov
mov
lock
dec
push
lcall
or
insl
and
dec
xor
adc
incl
fidivl
cwtl
sbb
push
push
sub
xchg
iret
xchg
lret
mov
out
cli
pushl
int
dec
loope
cs
sbb
lea
gs
dec
repnz
sar
jmp
test
xor
sub
push
lds
pop
nop
aas
out
dec
cld
insl
incl
add
outsb
dec
je
out
mov
sub
sbb
call
iret
add
scas
dec
cmc
shl
aad
dec
shrb
cwtl
or
fisttps
mov
insl
repz
pushf
fistps
inc
pop
mov
cmp
dec
mov
pop
fdiv
jo
push
fs
inc
jae
pop
aaa
or
or
push
mov
cmc
out
xchg
movsl
inc
repnz
mov
jno
jg
mov
add
cmp
decl
pop
fimuls
pop
cmpsl
addl
aaa
sub
jns
lcall
andl
sar
lahf
sbb
sub
and
div
push
inc
imul
jns
fldcw
mov
lcall
adc
mov
cmpsl
adc
push
pop
ss
insb
out
push
push
xchg
jo
lods
inc
outsl
subl
adc
inc
xchg
hlt
in
xchg
cmp
inc
mov
and
loop
cmp
scas
xchg
testb
push
xor
lea
call
dec
test
sub
shll
or
or
aam
icebp
repz
push
or
push
mov
call
jnp
jb
adc
and
orb
int
mov
pop
call
cld
jp
inc
dec
lret
cmp
pop
pop
cmp
or
dec
gs
je
push
incl
push
sbbl
leave
cmpsb
dec
int
push
push
imul
outsl
ret
mov
cmp
dec
lcall
jmp
and
mov
das
mov
cmp
pushl
push
push
add
mov
decb
jae
adc
pop
cmp
incl
xchg
sbb
xor
pushf
jns
xor
scas
call
lret
push
push
lcall
xor
rclb
push
cmc
cmp
adc
pop
push
cltd
push
popa
icebp
pushf
pusha
jge
pushf
ljmp
call
icebp
jae
inc
push
lcall
jle
cli
mov
testb
push
data16
cmpsb
imul
push
ret
sti
adc
cmp
sub
and
mov
dec
dec
mov
xchg
sub
sbbb
add
cwtl
rcrb
lcall
and
icebp
pushl
in
push
add
bound
mov
into
dec
dec
add
pop
sbb
cmp
in
out
xchg
ss
insb
shll
cmp
cltd
and
mov
add
push
xchg
ljmp
lahf
xlat
mov
sbb
adc
cmpsl
inc
test
addr16
dec
push
add
fcomip
dec
bound
sub
fs
mov
mov
cmp
mov
movsb
push
sar
testl
mov
ret
pop
fmuls
test
out
rclb
pop
js
pushl
dec
sbb
movsl
addl
push
int3
sub
sbb
lea
add
stc
xchg
push
push
int3
xor
pop
xchg
xchg
inc
loope
and
loopne
dec
aas
push
jl
test
pushl
mov
jle
push
or
jo
mov
inc
pop
lock
xchg
inc
rorl
adc
call
sub
jo
cmp
mov
bound
push
mov
leave
fstps
pusha
mov
cmc
shlb
or
fucomi
sub
push
dec
cltd
das
fnsave
rolb
lcall
xchg
jno
push
push
cltd
fwait
xchg
sub
mov
fsubs
addr16
sub
lcall
ss
adc
inc
cld
mov
in
mov
test
push
dec
xor
xor
in
ljmp
daa
mov
inc
pop
jae
xlat
jg
jg
pop
repz
mov
push
clc
lcall
add
test
cmpsb
lcall
jp
mov
setbe
stos
and
test
dec
dec
addr16
call
mov
les
and
mov
mov
pushf
xor
add
xchg
mov
ljmp
mov
dec
dec
or
daa
mov
or
inc
gs
xchg
test
adc
sbb
in
xor
insb
pop
cmc
cmp
push
mov
aad
xchg
mov
fidivrs
test
jge
mov
mov
fyl2xp1
pop
shll
mov
out
xor
in
lock
call
shl
mov
cli
int
and
aam
pop
scas
dec
cmp
mov
mov
decl
fcmovne
pop
ret
stos
in
mov
or
xchg
inc
push
xchg
cmp
add
leave
decl
loope
mull
jae
and
jle
sbb
call
push
cmpsl
jmp
outsb
jmp
clc
mov
hlt
xchg
xchg
in
mov
outsl
or
fwait
dec
xchg
jg
lcall
lahf
hlt
stc
lea
test
push
inc
rol
pop
dec
mov
mov
mov
js
cmp
repnz
mov
pushl
ficomps
and
mov
add
inc
dec
sub
mov
pop
xchg
cmp
fcomip
mov
cmp
push
cmp
loope
cmp
fsts
inc
std
imul
mov
jl
subb
mov
idivb
fisubrl
mov
jne
inc
int
das
mov
pop
jae,pt
xor
cli
stos
xchg
sbb
sub
incl
sbb
cmp
pop
inc
mov
icebp
shlb
cmp
sub
iret
mov
mov
push
cmp
int3
mov
xchg
xlat
roll
xor
lods
or
mov
inc
in
into
cmp
pop
sbb
mov
inc
popa
leave
pop
pushf
inc
mov
cmp
adc
add
loope
imul
jnp
inc
push
push
xchg
jno
es
lock
lret
es
cli
aad
jmp
out
mov
cmp
inc
loope
rclb
xor
sti
pop
mov
inc
push
mull
shll
decl
in
dec
mov
out
and
notb
push
push
fsubrs
inc
incl
into
stos
push
add
adc
or
lcall
pop
mov
push
mov
fs
orl
call
and
nop
xchg
fldcw
mov
xor
in
mov
sbb
pop
pusha
inc
in
sub
mov
sbb
jge
cwtl
pusha
icebp
push
hlt
mov
shlb
xchg
pusha
push
pop
sub
inc
or
dec
push
add
push
cld
xchg
xorb
and
mov
test
mov
in
mov
in
popf
inc
arpl
test
pop
mov
shrl
imul
push
inc
sub
pcmpeqb
sub
inc
mov
mov
icebp
pop
jecxz
js
and
mov
loopne
sti
or
or
cmc
decl
sub
add
fnsave
mov
test
cmp
lcall
popf
iret
hlt
push
pop
cmovle
jnp
mov
sarb
sub
in
ljmp
outsl
mov
bound
cmp
sub
push
pop
jno
out
xchg
cmp
incl
jne
lds
adc
adc
outsl
cs
cmpsb
mov
jmp
into
sub
in
or
jnp
pop
arpl
jne
jg
pushl
dec
int3
pop
out
xor
aad
pop
dec
neg
popf
push
sub
sbb
cli
out
cmp
std
lret
ljmp
add
mov
push
or
inc
out
cld
jg
incl
sub
cmp
aad
movsb
or
aaa
mov
sbb
pushl
push
sub
addl
lods
out
fcom
cld
aad
and
mov
fists
jno
incl
adc
aad
dec
clc
or
mov
push
jecxz
lods
testb
jl
jbe
bound
xchg
dec
xchg
negb
xchg
psllq
push
stos
out
sub
pushl
cs
jo
sahf
xchg
mov
sbb
mov
lods
inc
xlat
adc
and
aas
mov
dec
test
nop
xor
xor
mov
xor
mov
lock
cld
test
mov
imul
add
sub
mov
push
dec
jg
sub
mov
push
mov
testb
fadds
das
cmpsl
jp
icebp
hlt
popf
pop
pop
enter
incl
xor
xor
iret
jno
es
dec
leave
xchg
mov
cld
ja
clc
lods
inc
in
xor
js
call
cmp
int3
xor
lds
cmc
mov
jno
sbb
jmp
scas
mov
mov
mov
dec
loopne
test
movsl
pop
into
in
push
clc
cmp
lcall
sub
popf
xchg
cmp
xchg
sbb
sbb
mov
xor
mov
lcall
lcall
sbb
lods
dec
push
push
sbb
jge
and
ljmp
rcl
fsubr
adc
insb
mov
mov
and
adc
push
jns
jle
call
mov
clc
sub
push
cld
adc
out
les
les
push
pop
clc
fwait
sub
push
popa
push
push
dec
loope
ljmp
pop
or
cs
in
mov
scas
cltd
fsqrt
into
insb
bound
pop
push
ret
inc
fidivrl
inc
and
and
xchg
stos
inc
scas
dec
outsl
mov
aam
rcrl
inc
adc
mov
cs
xlat
pop
inc
pop
sub
sbb
lcall
mov
js
cmp
lods
inc
loope
adc
jne
popf
push
pushl
cli
mov
stos
fs
adcb
jne
mov
dec
sahf
cmp
jmp
fildll
scas
sti
fwait
scas
mull
out
pop
idivb
or
xchg
pop
xor
clc
into
pop
sbb
jbe
mov
in
aam
adc
or
lret
push
shlb
mov
lcall
arpl
lret
jecxz
outsl
stos
daa
push
mov
mov
shll
and
jmp
lahf
cli
push
shll
sub
aad
mov
xor
sbb
mov
inc
decl
xorl
loop
cmpsb
sahf
ret
sti
adc
mov
adc
lods
repz
adc
ljmp
insl
add
mov
inc
leave
mov
shll
mov
add
jmp
sbb
lret
dec
sarl
call
addl
push
bound
jmp
lds
xchg
in
or
mov
pop
mov
xchg
jb
les
test
outsl
pop
sbb
jnp
imul
xor
jl
adc
jle
out
push
push
test
in
pop
sbb
push
mov
cltd
mov
insl
mov
mov
cmpsb
lret
mov
adc
lock
sub
clc
ljmp
or
arpl
mov
sub
scas
push
incl
sbb
xchg
bound
aam
repz
pop
pushf
push
xlat
rorb
aas
cltd
ret
incl
dec
cli
icebp
je
push
dec
outsb
push
insb
add
adc
jb
arpl
push
cmp
in
sub
inc
imul
lcall
testl
call
xor
cmp
cli
xor
push
push
sub
orl
lret
sbb
incl
mov
jo
sub
shrb
rcll
test
arpl
xchg
xor
call
xchg
sub
std
mov
add
mov
loop
sbb
mov
jg
divb
cmp
pushl
jmp
loop
cs
xchg
xchg
int3
sbb
insb
jmp
shll
cmc
and
cmp
cmp
and
lcall
jnp
sbb
inc
bound
xchg
inc
fimull
xor
inc
into
inc
or
call
fsubs
jmp
cmp
cmpsl
mov
js
in
mov
in
fbld
or
cmp
ljmp
mov
dec
std
sbb
fidivrs
mov
jae
dec
loope
mov
out
mov
loopne
fdivr
jmp
xor
mov
addr16
inc
dec
cmp
loope
das
or
mov
std
pop
dec
inc
loope
xor
lods
add
add
nop
xlat
or
push
loope
dec
mov
scas
insl
push
lods
lcall
push
bound
jns
rorl
jbe
jbe
or
adc
mov
mov
outsl
sbb
push
lahf
clc
movsl
adc
aam
pop
leave
jb
roll
aas
in
sbbb
ror
mov
stc
sub
jg,pn
jae
in
jb
lret
mov
jae
mov
hlt
pop
addr16
addr16
cli
inc
icebp
xchg
aam
fwait
shlb
or
and
loop
push
repnz
test
pop
mov
ljmp
leave
and
clc
jbe
ja
das
bound
rorl
fistl
outsb
inc
add
hlt
sbb
mov
and
movsl
stc
shr
mov
sbb
jmp
lock
call
add
inc
xchg
push
insl
mov
add
cpuid
dec
mov
cwtl
dec
sar
push
dec
ss
mov
test
jno
movhps
adc
push
jle
shrl
mov
pop
hlt
fcmovne
fiaddl
xor
ss
inc
mov
lret
jmp
ffree
pop
shlb
call
dec
inc
cmp
adc
ret
mov
jg
sarb
xchg
pop
popf
shrb
fstpt
call
outsl
sbb
xchg
mov
cmp
fistpl
sbb
mov
adc
cld
pushl
js
adc
cmp
mov
or
sub
pop
ljmp
call
pop
sub
cmp
lods
outsl
stc
inc
ret
mov
addb
mov
lcall
cs
loopne
cmp
pushf
pop
je
or
pushl
jae
out
aaa
or
lcall
stos
notl
mov
repz
int
lret
mov
mov
pop
lahf
xorb
dec
cmp
ss
pop
mov
xchg
ljmp
cmp
fsubs
inc
jl
xor
mov
push
or
sub
jo
pushl
std
cld
enter
inc
enter
aam
test
mov
add
lcall
pop
or
sub
add
mov
inc
xor
cld
jmp
cld
cwtl
std
add
and
push
inc
cmp
adc
aas
pop
out
add
push
cld
xor
pushf
add
pushl
xor
call
shlb
sbb
sbb
push
lret
loopne
cmp
loopne
setl
sarb
push
mov
mov
add
lret
sub
lcall
xchg
adc
pushl
outsl
js
push
sbb
lods
cmp
ss
xor
pop
dec
test
decl
aad
les
stc
je
je
sub
out
cli
decl
add
call
xlat
dec
xor
mov
notb
mov
aaa
mov
call
sbb
fstpt
dec
icebp
repnz
call
shl
push
repz
jge
or
xchg
lods
ss
inc
loopne
scas
fs
incl
test
jle
out
and
divb
add
pop
mov
sub
jne
push
mov
shrl
decl
push
pop
fwait
add
in
fcompl
lret
push
clc
ljmp
push
adc
bound
xor
addr16
stos
test
jne
pushl
scas
jae
mov
ret
stos
sub
pop
inc
xor
jmp
add
decl
roll
popa
arpl
mov
mov
mov
jge
into
sub
arpl
sub
es
js
mov
adc
int
out
xor
xor
es
fnstsw
xchg
push
sub
push
cld
incl
add
jge
dec
nop
xor
ds
shll
sti
popf
and
add
sti
adc
or
adc
jno
outsl
inc
lcall
decl
in
addb
aam
dec
and
test
aas
mov
sahf
leave
inc
loop
pushf
enter
lods
adc
push
mov
sbb
lds
dec
xor
std
xlat
sbb
push
outsb
cmp
mov
cmp
sbb
xor
sbb
and
cltd
sub
cmpsb
xchg
xor
pop
std
pop
cld
mov
es
lock
adc
pop
lret
incl
repnz
into
xor
jnp
lahf
fcmovnu
enter
in
scas
fsubrl
cmp
test
mov
push
fisubs
push
push
pop
rorb
pop
sbb
push
decl
ret
xor
mov
push
inc
and
call
mov
loopne
in
inc
jp
lcall
jg
int3
imul
cmp
inc
jns
sbb
fisttpll
mov
call
jle
add
add
aas
subl
mov
in
push
dec
das
pop
mov
jg
incb
insb
and
into
loope
mov
xor
pop
sbb
std
pop
ds
mov
test
xchg
inc
fwait
rcll
push
in
lods
mov
sub
xor
imul
addr16
cmp
decl
mov
unpckhps
add
stos
cmp
fwait
ret
pop
inc
mov
push
decl
js
inc
pop
ret
cmp
addr16
in
cmpl
push
leave
xor
addb
sbb
movsl
mov
iret
into
fmuls
sub
inc
add
push
or
in
or
mov
sub
sbb
mov
movsb
push
sti
addr16
cmp
inc
push
outsb
mov
or
fcomps
repnz
out
orb
fisubrs
int3
push
data16
fisubrs
jg
adc
xchg
jne
es
or
mov
jbe
popf
inc
lods
dec
fmull
or
jno
in
lock
or
xchg
stc
repz
hlt
sbb
xchg
adc
push
mov
dec
and
or
decl
jle
out
loope
stos
pop
lret
repz
inc
mov
add
sar
jmp
js
xor
scas
sarl
int
sub
sub
adc
das
jp
mov
inc
fadd
aam
ds
or
decl
xchg
push
in
ljmp
popf
lods
mov
jg
mov
sub
hlt
into
jne
and
xor
inc
ljmp
test
xchg
dec
movl
sub
or
ljmp
sub
orl
jmp
pop
add
lret
lcall
imul
jbe
pop
nop
lea
cmp
js
xorb
mov
cmp
test
adc
int3
dec
addl
sub
push
sar
incl
lcall
inc
jo
add
sbb
daa
cmp
mov
das
xchg
sub
jge
mov
in
shrb
push
dec
pop
cmp
jg
or
pop
hlt
ljmp
cmc
jp
pop
inc
cmp
movsl
imul
dec
imul
mov
or
sub
mov
loopne
popa
inc
inc
xor
xor
sub
mov
imul
cmp
cmp
imul
mov
jns
mov
je
decl
pop
adc
push
mov
adc
mov
sbb
sbb
nop
icebp
pushl
and
jmp
loop
jecxz
sbb
scas
jns
mov
mov
cld
adc
jl
pop
pop
jae
mov
xor
lcall
insl
cmp
lahf
xchg
or
lcall
gs
je
cmpsl
insl
inc
pusha
mov
arpl
cmp
ljmp
sbb
jl
cmp
sub
mov
push
xchg
dec
mov
jmp
pop
in
arpl
js
and
call
fsubrl
mov
jbe
jnp
inc
push
adc
cltd
push
cmp
scas
cltd
jbe
inc
or
or
mov
js
and
and
push
daa
cmp
push
pop
xchg
jo
cmc
inc
sbb
shlb
sbb
les
jmp
sbb
data16
insb
push
pop
movsb
and
outsb
aam
movsb
data16
repz
test
jge
call
xchg
cmp
cltd
xor
add
cmpsb
sti
mov
mov
into
jo
push
xchg
jp
sbb
mov
fcomip
data16
pop
cmp
mov
out
jns
or
mov
jl
stc
add
push
lret
dec
clc
bound
rcr
lds
lcall
push
test
jl
mov
insb
jo
or
enter
mov
pushl
xchg
call
cld
jg
out
jbe
ljmp
out
cmp
imul
mov
call
xchg
orl
outsb
mov
push
cmpsl
push
out
fs
inc
mov
pop
lret
xor
lret
lock
adc
mov
adc
inc
lret
mov
outsb
push
or
imul
test
js
xor
jge
xchg
mov
dec
addb
cmp
mov
aad
cmpsl
cmp
outsl
or
cmpsl
add
mov
subb
sti
fdivr
out
add
clc
dec
add
push
or
cmp
sbb
xchg
xor
mov
dec
xchg
mov
push
scas
movsb
repz
pop
jnp
push
data16
cmpsb
lret
fsubrl
ljmp
and
push
pop
hlt
decl
adc
cmp
jb
jmp
jo
xorb
ret
xor
popa
jmp
sub
rcll
mov
jb
insb
add
or
sbb
lods
xor
clc
fwait
roll
sub
in
fcmovbe
jno
addr16
jg
pop
xor
push
cmp
hlt
bound
test
lock
or
jmp
mov
mov
sbbb
push
jg
jg
aam
push
jo
cs
inc
mov
rcrb
data16
mov
inc
std
ds
add
mov
or
xchg
lock
aad
aad
sti
xchg
test
sub
mov
pop
jle
fbld
dec
or
popa
mov
mov
popf
mov
loope
push
hlt
jmp
lret
cmp
add
adc
hlt
add
sbbb
push
and
mov
mov
in
or
pop
xchg
mov
popl
cwtl
insl
fadd
jmp
daa
loopne
adc
hlt
or
dec
gs
xchg
xchg
movsb
pusha
xchg
movsb
jecxz
add
stos
daa
and
incl
cld
dec
sahf
push
lea
jecxz
mov
pop
cltd
in
clc
xor
and
mov
leave
push
cli
sahf
inc
push
inc
xor
adc
std
pop
andl
mov
jp
add
popf
sbb
sub
inc
orb
jmp
cli
pusha
adc
pop
xchg
xor
adc
int3
pop
dec
aaa
inc
popa
pop
ret
es
icebp
jg
test
sbb
loopne
gs
mov
mov
arpl
test
jo
std
lcall
out
and
push
dec
in
and
inc
or
cs
mov
test
cld
lcall
dec
adcl
and
int3
add
cltd
in
cmp
lcall
mov
adc
cmc
mov
imul
add
loopne
imul
call
xlat
mov
push
mov
mov
push
out
jmp
lods
scas
icebp
sbb
inc
movb
mov
repz
xor
or
lahf
add
jbe
dec
jp
cmp
dec
mov
call
cmp
imul
pop
jno
and
cmc
pop
aaa
lock
arpl
incl
add
repnz
outsb
cmp
pusha
mov
sub
sahf
out
add
mov
std
pop
sbbl
or
jne
or
arpl
test
pop
xchg
jmp
push
pop
jmp
cmp
sbb
out
pop
test
adc
mov
mov
dec
int
jb
pushl
subl
les
inc
xchg
fisubrs
pop
lret
mov
sbb
js
ja
pushl
mov
ja
andb
test
cmp
neg
fcoms
test
decl
mov
es
add
mov
pop
pushf
loopne
out
iret
push
aas
fisubs
daa
xchg
aam
sub
hlt
decl
icebp
mov
xchg
cli
cmpsb
imul
daa
dec
push
insb
rcrl
inc
fildll
aas
aas
test
pop
add
and
xor
cmp
mov
nop
clc
mov
iret
dec
xor
xor
mov
pop
sub
sub
gs
jne
push
pop
enter
call
jo
in
add
lods
pop
mov
dec
or
ja
sarb
call
push
call
cmp
ret
cmp
ds
mov
adc
mov
call
add
adc
sbb
dec
lret
and
in
adc
cmp
mov
mov
ljmp
out
adcl
insb
mov
cltd
adc
fcomps
add
and
lcall
add
call
iret
in
cmp
or
mov
lcall
xchg
loopne
lock
push
lods
xor
or
rorb
mov
js
ja
les
push
iret
pop
sarl
gs
ljmp
fdiv
sti
jno
in
idivb
dec
ret
inc
enter
push
jae
decl
lock
mov
jle
fcoms
ret
data16
loope
or
ljmp
mov
mov
mov
jmp
out
arpl
jnp
bound
ljmp
push
jp
mov
dec
int3
push
sub
adc
fsubl
leave
icebp
push
jle,pt
pushl
inc
mov
pop
and
popf
insb
stos
sbb
sti
lods
fistpl
out
testl
call
or
push
pop
sub
in
push
xchg
mov
adc
mov
sbb
out
movsb
outsl
jno
dec
pop
cltd
loope
out
mov
push
cmpsb
cmc
loop
mull
aas
mov
or
rorl
or
push
jecxz
jbe
jno
and
jg
mov
loop
mov
sahf
jns,pn
cmp
pusha
lret
ljmp
pushf
sub
inc
pop
les
jmp
std
mov
cmp
adc
mov
das
cli
mov
rcrl
pop
lcall
int3
xchg
lret
data16
cmp
add
xor
jp
jp
mov
adc
inc
call
pushl
mov
insl
jns
dec
xchg
andb
adc
pop
popf
bound
fcmovnb
add
mov
add
loopne
int3
inc
mov
stc
aam
xchg
test
mov
xor
jmp
outsl
adc
int
je
push
mov
cmp
mov
inc
loopne
mov
sub
dec
into
mov
test
push
push
cs
xchg
xchg
cmp
or
sarl
fnstenv
xchg
cwtl
dec
lahf
jns
mov
push
rcrb
arpl
jecxz
int3
roll
mov
imul
lock
add
fdivl
mov
sub
push
jns,pt
xor
fcomip
sti
mov
mov
gs
xchg
stos
add
pop
std
cmp
je
loopne
add
test
decl
nop
cmp
jne
xor
lahf
loopne
mov
or
or
outsb
into
repz
decl
xchg
mov
loope
fldcw
fxch
repnz
xchg
mov
inc
je
into
fcmovnb
push
int
jmp
fldenv
sub
pop
mov
mov
rcrb
jmp
sub
adcl
fsubrp
lods
xor
inc
fdivs
xchg
js
decl
pushl
pop
and
add
shll
mov
cmp
push
std
decl
pop
ja
xchg
rol
xorl
add
inc
dec
shlb
out
sub
mov
inc
stc
dec
dec
call
mov
adc
mov
dec
pop
push
ret
call
in
ret
push
mov
pop
push
inc
test
pop
nop
mov
cs
andl
mov
xchg
push
mov
sbb
adc
jae
test
mov
les
fwait
jmp
scas
sti
sub
inc
and
xchg
decl
jbe
xor
ss
dec
xchg
es
xor
clc
or
and
jg
fwait
mov
int3
jae
push
hlt
clc
lock
lret
mov
in
cmp
pushf
pop
loopne
in
in
mov
out
dec
mov
mov
ljmp
mov
xchg
pushf
xor
pushl
push
adc
rolb
pop
xlat
pop
lret
mov
or
or
lock
cmp
loop
sbb
cld
and
les
in
push
decl
inc
or
bswap
test
ja
jb
mov
mov
ret
jo
out
lods
cmp
inc
mov
lret
mov
xor
test
adc
mov
gs
aaa
push
inc
pushf
call
out
push
popa
mov
ffreep
ja
out
push
stos
pusha
loopne
and
jg
or
cwtl
cli
ljmp
pop
shll
push
cli
jg
jne
or
inc
sbb
int3
adcl
test
popa
imul
fdivr
stos
lods
jle
jl
fstps
stos
decl
and
mov
sub
cs
cmp
test
clc
mov
aad
jmp
xor
scas
icebp
sbbl
mov
addl
inc
je
pop
popa
pop
xor
imul
xchg
cld
xor
cld
imul
cld
addr16
stos
sahf
ljmp
out
push
xchg
push
jb
jo
stos
adc
mov
loopne
mov
cmp
push
pushl
inc
xchg
and
mov
add
call
jecxz
addr16
dec
mov
rorl
call
aad
inc
and
fldt
imul
push
icebp
mov
dec
and
lret
mov
xchg
lcall
ljmp
in
mov
xchg
xchg
or
ljmp
aaa
std
ljmp
cmpsl
pop
push
repz
xor
mov
lea
mov
daa
inc
scas
aam
mov
push
dec
cli
mov
dec
push
aam
sub
ljmp
push
cli
jg
lahf
xchg
cltd
add
shlb
inc
ljmp
pusha
adc
cmpsl
xchg
ja
mov
sbb
sub
imul
mov
and
cli
leave
pop
mov
lods
jge
jg
mov
psubq
inc
daa
jo
adc
cmp
mov
pop
sbb
mov
xlat
mov
incl
xor
ret
data16
push
shr
rorb
popf
and
clc
popa
orb
out
inc
out
xchg
add
cmpsb
fimull
xchg
icebp
lret
stc
inc
xor
int3
mov
jge
sub
add
pushl
adc
mov
jno
sub
push
adc
sbb
sti
push
mov
decl
cld
push
outsb
sarl
test
roll
inc
out
incl
imul
push
test
test
pop
in
jae
mov
aam
inc
mov
imul
icebp
cld
xor
in
fisubrs
or
stos
add
mov
popf
push
stos
out
pop
xchg
imul
sbb
jmp
sbb
mov
call
and
pop
cmp
clc
cmp
ljmp
mov
pop
dec
push
sub
aas
jle
mov
call
cmp
lcall
int3
xchg
call
fs
ret
loope
mov
mov
mov
inc
sub
jb
add
or
ljmp
fs
pop
lret
ficoml
cmp
or
enter
lock
sub
inc
sbb
adc
or
test
mov
incl
ret
pop
sub
adc
mov
push
ret
jns
cmp
mov
into
in
popa
sahf
andl
data16
or
lods
xor
mov
pushl
dec
jle
incl
sbb
popf
aam
sub
lds
pop
mov
insb
adc
lahf
pop
push
add
fimull
sbb
xchg
shl
das
add
popf
cmp
cli
insl
mov
dec
jmp
or
mov
dec
or
cmpsb
jne
call
repz
xor
cmp
cmc
jno
sub
push
sbb
out
cs
call
jb
xchg
push
daa
xchg
lea
jl
xor
jne
imul
mov
ljmp
xor
xchg
adc
ja
xor
cltd
xor
pusha
and
ja
rolb
and
test
mov
and
fimull
mov
mov
mov
decl
inc
lds
sahf
int3
xchg
push
ret
ljmp
cmpl
sub
dec
hlt
pushl
pop
sbb
mov
pop
adc
daa
mov
scas
addr16
or
mov
loope
lcall
jecxz
or
pop
sbb
addr16
add
or
stc
test
adc
pop
mov
sub
rcrb
movsb
dec
cmp
and
inc
loop
stos
or
leave
xchg
sbb
jae
dec
inc
pop
inc
pop
xchg
inc
fnstenv
std
incl
out
arpl
push
pop
or
popl
outsl
pop
es
outsl
clc
aad
jg
jp
inc
sub
call
lret
jecxz
mov
xchg
push
dec
scas
iret
dec
push
out
mov
xor
and
or
incl
stc
jb
stos
cmpsl
int
sub
mov
movsl
inc
jo
cli
pusha
in
mov
push
mov
dec
inc
pop
inc
dec
les
aam
jns
jle
cmp
cmp
mov
jge
cs
out
xchg
xor
and
push
sbb
ljmp
scas
push
fisubs
incl
lahf
movsl
movsl
lods
mov
cmp
mov
mov
testb
cmp
xchg
fidivrs
aam
push
xor
adc
cld
aad
call
sub
ljmp
xchg
ret
shlb
and
mov
cli
cmp
imul
js
popf
mov
test
fcomi
jge
cmc
or
lcall
idivl
outsb
ljmp
cmp
ret
int
mov
int3
popa
sbb
sbb
mov
push
cli
ret
sub
test
out
lds
push
arpl
pop
cld
rorl
jne
inc
or
pop
test
sub
test
xchg
cmp
mov
inc
bound
push
ljmp
and
inc
fldl
mov
sahf
sbb
cmp
pop
cmp
xor
xchg
lcall
pusha
mov
or
inc
xor
jno
incl
xlat
cli
pop
cmp
call
aad
es
pusha
cmpsl
into
jns
je
scas
adc
push
iret
movsl
gs
call
fistps
push
mov
fistpl
jle
mov
dec
add
fisttpll
pop
inc
scas
incl
cmpsl
or
dec
fldl
cmp
popa
pop
aas
movsl
notb
mov
mov
lcall
cmp
in
inc
fsubr
jge
mov
insl
scas
imul
sbb
decl
cs
mov
or
roll
mov
call
xchg
jo,pn
repz
cmp
loop
push
in
xorl
sub
cmp
lock
push
push
in
outsl
cwtl
out
push
sub
lds
lahf
dec
push
ds
and
fiadds
out
pop
mov
les
test
int
lods
mov
hlt
jmp
lcall
mov
mov
je
inc
sarb
inc
fdivr
int3
add
fwait
negb
fstpl
pop
sahf
mov
lahf
stos
pop
jmp
sub
push
mov
daa
lea
lahf
mov
cmpsl
push
dec
push
lods
enter
shlb
and
and
iret
icebp
and
in
cmpsl
add
mov
mov
cmp
repnz
pop
test
jecxz
lret
push
mov
ljmp
lcall
lea
fstps
in
imul
les
pop
daa
cli
mov
ljmp
mov
in
xchg
sub
inc
icebp
incl
cmc
mov
or
pusha
repnz
mov
dec
or
lds
fcomps
lcall
pop
pop
shll
pop
sbb
push
scas
or
jmp
cmp
incl
hlt
pop
xor
cmp
mov
add
or
pushf
xchg
mov
jbe
xchg
dec
pop
roll
ret
mov
push
mov
xor
or
fnstsw
sbb
or
pushl
xor
insb
inc
jo
cmp
add
inc
pop
dec
dec
xchg
sbbl
and
repnz
jg
rclb
in
push
cmp
mov
mov
push
pop
push
sub
pop
fs
fcomip
sub
aas
jle
shl
mov
dec
push
cmp
iret
inc
jl
cmovnp
into
push
loopne
ljmp
or
xchg
ficoml
sub
adc
jns
das
add
jge
lahf
inc
lock
jne
out
or
and
jbe
loope
idiv
fcomip
incl
xchg
mov
test
mov
out
dec
pushf
scas
or
pop
cmp
mov
cs
int3
sub
push
mov
out
arpl
fbstp
cltd
jmp
out
xchg
add
xchg
push
daa
addl
movsl
loopne
pop
enter
repz
push
push
insb
push
xor
dec
in
push
daa
incb
call
loopne
mov
pop
xchg
xchg
ret
inc
imulb
mov
fxch
leave
ljmp
ret
push
sarb
sahf
fisttpll
enter
movsl
jo
mov
cmp
mov
js
push
mov
decb
mov
dec
xorb
or
cltd
xor
sub
xchg
add
add
dec
mov
repnz
sti
test
lcall
push
mov
test
leave
pop
movsl
mov
jmp
jae
or
sbb
fmulp
xor
or
std
xor
in
lcall
decl
pop
mov
xchg
arpl
pusha
adc
dec
mov
inc
mov
aas
cmpsb
into
call
call
add
shl
lods
dec
cmp
sbb
ret
pop
pop
sub
sbb
mov
mov
fisubrs
jl
jg
mov
mov
sub
cwtl
outsl
jnp
int
outsl
clc
or
add
roll
xor
xor
bound
xchg
cld
icebp
fwait
pop
push
cmpl
and
enter
cmpsl
jmp
insl
mov
and
popa
loopne
mov
mov
push
push
mov
adc
xchg
ds
outsb
cmpsl
mov
xor
jg
pop
sub
adc
and
jp
test
fldl
lea
ret
lcall
stc
and
sub
das
mov
fcoml
call
mov
cwtl
mov
sub
push
jno
pop
incl
push
sub
mov
dec
insl
inc
daa
arpl
mov
rolb
mov
inc
fcoms
addr16
ljmp
fwait
scas
sbb
mov
repz
cmp
sbb
hlt
insl
push
mov
cmc
dec
inc
jb
sbb
push
cltd
and
sti
dec
and
xchg
and
push
xchg
xchg
out
pop
addr16
inc
pop
jns
int3
movsb
lret
out
push
push
mov
mov
not
loop
out
sub
ljmp
out
fstl
jno
sbb
push
test
loopne
pop
xor
dec
lods
push
out
xchg
out
addl
pop
push
cmp
lcall
jne
insl
xor
xlat
xor
das
xchg
jns
or
pop
xor
inc
mov
lcall
pop
mov
test
mov
cmc
and
stos
ds
lods
jnp
adc
inc
sub
add
inc
cmp
push
sbb
outsl
cmpsb
mov
adc
std
insl
loop
lret
lcall
aam
scas
in
andl
call
je
test
xor
inc
mov
aaa
sub
out
sbb
mov
hlt
pushl
imul
movsb
jno
dec
ljmp
adc
xor
ds
lock
jmp
testl
sub
adc
scas
jp
xor
cmp
mov
call
pop
or
sub
mov
xchg
repnz
ja
popf
sub
dec
and
out
pushl
jne
dec
aas
mov
pop
push
vcvtsi2sd
mov
add
sub
sub
pop
push
adc
call
push
nop
push
dec
addl
pop
cmp
pop
cld
sbb
mov
fwait
lcall
cmp
dec
mov
mov
test
xchg
popf
mov
lea
cli
ljmp
xchg
xchg
test
int
test
out
dec
scas
mov
xor
mov
aam
sar
mov
fwait
pusha
aam
mov
push
sbb
mov
cs
repz
inc
call
jle
xor
pushl
cmp
add
push
sbb
gs
sbb
sbb
cmpsl
push
cld
leave
sbb
cmp
adc
and
sub
test
push
sbb
jae
cli
lret
xchg
sub
ljmp
cmp
cmp
jp
jg
push
addr16
jg
jae
scas
hlt
sbb
inc
mov
mov
pop
les
sahf
pop
ja
mov
mov
jl
jmp
jne
sbb
jmp
lahf
push
ja
adc
shlb
jne
in
dec
and
mov
pop
imul
inc
push
push
mov
add
ljmp
push
out
or
xchg
adc
into
lds
dec
or
decl
sub
test
cld
aad
lahf
out
lods
sub
aad
mov
hlt
mov
call
fimuls
lock
xorl
inc
adc
ss
pop
cmp
adc
push
call
push
dec
iret
push
jge
cs
push
mov
dec
imulb
pop
sbb
fisttps
push
stos
xor
ljmp
rorb
sub
add
loop
cmc
jns
test
out
mov
decl
cmp
sub
or
out
loopne
dec
jle
pusha
jb
xor
inc
and
jae
incl
sahf
test
imul
dec
sahf
flds
xchg
arpl
inc
mov
jl
add
fadds
mov
add
inc
aam
icebp
jg
mov
ss
push
mov
addr16
and
fisubl
decl
pop
xor
mov
int
xchg
imul
jg
fdivrl
and
xchg
repnz
and
outsl
js
cs
lahf
movsl
addb
and
decl
mov
fiaddl
and
dec
cmpb
mov
mov
push
adc
push
sub
xchg
pushf
push
arpl
pop
adc
inc
cmp
push
mov
into
pusha
lcall
fwait
dec
stc
data16
mov
cwtl
test
push
out
mov
cmp
hlt
mov
lcall
mov
popa
out
cwtl
into
sar
pushl
xor
movsb
loopne
sub
stc
jns
and
iret
arpl
sbb
popf
icebp
mov
lret
out
test
pushf
sub
jno
jp
fbstp
mov
mov
rol
les
push
add
xor
std
sbb
aas
enter
iret
stos
sti
ret
leave
in
add
lcall
dec
cmpb
pop
test
inc
push
cltd
dec
pushf
fs
push
mov
nop
stos
pop
cmp
cmp
or
decl
push
test
clc
pushf
insl
and
inc
inc
addr16
mov
addr16
outsl
pop
cmp
andl
in
ljmp
sub
pusha
mov
call
xchg
cmpl
cltd
xor
jno
icebp
mov
xchg
push
in
bound
or
adc
test
jne
enter
xchg
iret
jbe
jg
subl
xor
je
mov
jecxz
mov
mov
ds
inc
push
aaa
add
call
mov
mov
xor
movsb
dec
fsubrl
cs
pop
dec
sub
push
lahf
cltd
mov
fidivl
cmp
dec
in
cli
pop
cli
dec
insl
out
cli
lcall
fnsave
clc
push
arpl
add
int
mov
xchg
inc
adc
add
stc
push
push
pop
inc
pop
scas
pop
aas
in
sub
mov
lock
or
or
fisttpl
dec
les
outsb
or
push
add
lock
inc
test
inc
lret
out
pushf
out
scas
push
iret
pop
push
shr
fwait
mov
or
ror
sbb
cmp
mov
push
mov
loope
ljmp
dec
test
sbb
lret
fwait
mov
jbe
cmpsb
shll
mov
mov
dec
lret
decl
pop
adc
loopne
cwtl
inc
ds
aas
xchg
mov
mov
xchg
mov
insb
pop
add
into
jb
and
push
mov
insb
iret
pop
sahf
mov
adc
push
leave
push
mov
scas
mov
decl
sbb
mov
mov
sbb
pop
push
or
incl
arpl
movsl
les
dec
mov
jl
push
cmp
xorb
call
nop
out
mov
xchg
pop
fldt
hlt
mov
cmpsl
jge
es
and
incl
lahf
fidivrl
dec
out
idivb
es
mov
pop
add
fucom
pushl
sub
inc
pop
int
push
and
inc
out
test
lods
and
ja
scas
pushl
push
xchg
dec
push
push
fldenv
shrb
or
and
pop
jmp
adc
in
adc
dec
and
fwait
jge
xor
ljmp
adc
cmp
xchg
sub
inc
mov
ret
add
push
add
addr16
and
sbb
mov
pusha
push
mov
cmpsl
fdivrl
mov
imul
lock
cltd
addr16
ficompl
sbb
decb
int
add
fisttpll
cli
ljmp
pop
inc
mov
xor
xor
popa
std
mov
ljmp
mov
inc
shrl
loop
inc
inc
adc
jp
ljmp
test
mov
dec
xchg
mov
pmaxub
mov
or
mov
and
es
sbb
popa
jns
jo
sub
out
int
sbb
xorb
outsl
push
cld
out
test
popa
inc
ljmp
pusha
idivb
scas
or
jmp
inc
sbb
pushl
sahf
jne
stos
popa
push
les
stos
sbb
dec
daa
mov
sub
inc
call
incl
jb
xchg
jl
into
fmul
in
in
push
or
cltd
and
call
jno
cmp
mov
add
or
out
jl
into
mov
aad
decl
add
shl
pushf
repz
jecxz
dec
push
pop
push
push
mov
xchg
sub
jg
int3
movsb
sub
push
mov
insl
movsb
mov
shr
aad
and
push
cli
sub
push
mov
cmp
adc
test
jmp
int3
cmp
into
test
mov
in
in
xchg
imul
mov
pop
pop
popa
fisubs
inc
popf
movsb
sub
jp
out
xchg
and
jmp
pop
test
scas
jge
xchg
pop
xchg
or
mov
int3
dec
cmp
xor
decl
lret
in
xor
outsb
push
cmp
push
dec
push
ss
mov
jnp
push
and
cmp
sbb
mov
outsb
call
xor
pop
into
ljmp
sub
xchg
pusha
in
jl
pop
jp
xchg
xchg
jno
lahf
sbb
add
cli
jle
es
subl
or
mov
dec
and
fidivrl
dec
or
xchg
aaa
std
push
fidivs
rolb
icebp
jmp
or
jbe
mov
inc
pop
xor
fcmovnu
shrb
stc
rcll
sub
stc
outsb
or
in
stos
push
jmp
sub
sub
fstps
inc
leave
mov
jne
jmp
test
imul
push
movsb
xchg
push
hlt
mov
mov
jg
sbb
mov
fbstp
jmp
ss
push
mov
filds
insb
loop
std
stc
or
ffreep
test
popa
xchg
nop
add
push
int3
push
das
cmp
aad
jle
pop
gs
call
addr16
jo
mov
and
outsl
mov
daa
mov
mov
dec
test
pushl
adc
dec
cli
ret
in
sub
cmp
lods
ficompl
ljmp
and
test
push
cmc
out
icebp
adc
pop
jl
cmp
icebp
or
call
fisubs
insb
into
and
xlat
es
cld
xor
sbb
data16
aad
cmp
jno
inc
movsl
int3
ja
daa
adc
cmpsb
jmp
jg
jg
callw
sub
popf
scas
scas
out
fstpt
xchg
add
push
xor
and
and
test
cld
out
adc
cmpsl
aaa
incb
sub
fstpl
call
xchg
mov
imul
lock
ret
out
and
dec
lock
push
add
or
pop
lds
movsb
into
aam
inc
das
dec
jnp
pop
clc
stos
ret
lret
push
js
scas
xchg
sbb
push
sti
and
test
pusha
imul
mov
mov
sarb
mov
or
sub
jmp
inc
ss
cmc
mov
aam
mov
in
add
stos
setp
lcall
test
sub
int
rcrb
lock
sahf
xchg
sbb
adc
pop
dec
divb
sub
call
push
jns
or
xor
hlt
xchg
jle
fwait
shr
adc
insb
mov
leave
cltd
xchg
mov
call
decl
jno
sarb
xchg
sub
xor
inc
xor
mov
jmp
lds
mov
loop
jecxz
mov
adc
dec
or
scas
inc
mov
ljmp
sub
jbe
push
std
movsb
cltd
xorl
add
xor
shlb
mov
jo
mov
or
decl
ror
in
into
lret
lds
dec
cld
xor
lcall
sub
cli
pop
cmp
shlb
loope
xchg
fcoml
adc
hlt
lcall
push
xor
dec
dec
inc
dec
scas
lock
push
aad
movsb
mov
mov
sub
lcall
sub
orl
sbb
fisubrl
movsl
ljmp
in
sbb
incl
or
fstps
idivl
or
scas
xor
mov
cmp
out
orl
loop
cs
jp
push
je
lods
jp
fnsave
movsl
orl
xchg
jno
xchg
cmp
in
rcrb
enter
mov
jno
xchg
adc
cmp
and
cmp
ljmp
add
inc
jb
xchg
shrl
decl
jge
cmp
lcall
push
addl
stos
stos
push
mov
mov
and
jmp
mov
fcmovb
pop
dec
pop
cmp
popa
lods
sub
xchg
mov
sbb
je
xor
sub
nop
lret
sbb
pushl
pop
rclb
mov
adc
pop
cmpsl
push
in
ljmp
in
push
jmp
daa
jg
mov
cwtl
xchg
and
ror
add
pop
popa
pop
push
scas
dec
clc
ficoms
xchg
stos
ja
popf
and
jecxz
pop
lock
mov
sar
aad
and
shlb
out
fdivrp
pusha
pushf
xlat
push
jle
jle
xor
inc
jl
loopne
jns
pop
mov
subl
pop
mov
int3
push
or
stos
or
scas
in
jge
jmp
push
lcall
cmp
xor
scas
insl
sub
sbb
sub
popf
or
jl
inc
lock
out
mov
sbb
das
test
sahf
sub
mov
pop
xchg
call
add
adcb
mov
mov
and
test
mov
in
and
rcrl
jmp
sbb
xor
pop
jnp
pop
push
adc
jmp
pop
rcl
scas
xchg
lods
div
sub
icebp
in
outsl
or
mov
jae
jle
notl
cmc
adc
mov
mov
bound
dec
cmp
add
mov
fimuls
loopne
jg
ret
out
out
cmpl
sbb
adc
mov
sbb
fwait
and
push
call
aad
jge,pt
inc
outsb
fisttpll
or
addr16
bound
pop
fnsave
lock
lcall
mov
decb
xchg
mov
leave
test
bound
je
imul
loope
pop
cmp
stos
out
pop
jo
xchg
inc
je
dec
mov
mov
jge
jmp
clc
rcrl
or
ds
clc
iret
push
dec
cmp
jp
sub
xor
lods
cmpb
mov
cmp
dec
ss
xor
test
push
inc
daa
mov
incl
inc
pop
mov
mul
dec
inc
outsl
and
adc
push
mov
mov
aad
dec
jo
inc
fs
xor
call
adc
push
pop
push
sub
pop
mov
xchg
out
mov
push
cmp
adc
call
mov
push
mov
mov
mov
and
call
adc
fs
outsb
sub
jo
push
loop
adc
ljmp
das
in
ljmp
adc
jo
jae
add
mov
cmp
or
mov
xchg
call
lcall
sbb
mov
iret
sub
pop
enter
and
call
loope
insl
jmp
jns
lea
dec
mov
adc
dec
popa
aaa
loope
cwtl
mov
pushl
sbb
ret
lds
lds
lret
fwait
mov
imul
sub
clc
xchg
mov
xor
mov
add
lods
mov
cmp
sbb
fcomip
incl
pusha
mov
push
xor
or
stc
outsb
xor
std
jmp
pusha
loop
mov
jl
vpsrad
adc
not
popf
xor
add
call
or
xor
inc
sub
pushf
sarl
inc
das
xchg
jmp
lret
js
mov
sti
mov
xor
cmp
addb
sub
xchg
xchg
jp
lcall
jno
cmpsb
jbe
leave
test
inc
imul
in
mov
pushl
jns
dec
adc
jno
mov
sub
loop
incb
ljmp
dec
cmpsb
cmp
mov
add
shl
test
mov
mov
xor
call
adc
fistl
cmpsb
sbb
push
mov
lret
jb
cmpsb
pushf
pop
lcall
call
out
sbb
stc
mov
dec
and
ds
repnz
inc
xchg
movsb
mov
lcall
add
hlt
xchg
add
jmp
addb
mov
aaa
mov
out
xchg
mov
jge
xchg
pop
and
lret
xor
or
cmp
in
push
jge
adc
das
push
divb
sub
push
xor
clc
popf
fimull
sub
in
das
cli
pushl
out
dec
sahf
or
xchg
adc
lret
lods
ret
mov
add
idiv
pushl
stos
pop
imul
rorl
sub
cmp
push
xor
movsl
dec
test
adc
jmp
cmpsb
sbb
lret
ljmp
xor
cmp
outsb
sbb
jns
adc
mov
jno
ds
stos
rolb
lods
jnp
dec
jg
dec
mov
add
ret
mov
xchg
add
push
incl
dec
xor
xchg
test
jecxz
cmp
jle
pop
mov
dec
xchg
and
add
adc
stos
icebp
sub
orl
jg
roll
repnz
test
std
mov
orb
fwait
adc
or
xchg
or
call
ret
call
mov
out
jp
and
mov
outsb
arpl
pushl
mov
pop
jnp
pop
mov
icebp
lock
sbb
stos
mov
jl
dec
mov
loope
jo
or
xchg
aas
sub
inc
jle
lret
jo
loop
xor
fwait
lcall
dec
inc
std
mov
xor
cmpl
dec
cmpsb
and
jmp
lcall
add
xor
dec
fwait
push
roll
add
dec
clc
test
lret
imul
adc
dec
sbb
popf
adc
jns
loop
jb
push
add
lea
clc
jmp
push
sbb
gs
mov
push
jnp
push
mov
in
jp
cltd
jle
incl
movsb
enter
inc
adc
fildl
jne
lea
test
xor
push
loopne
push
fstps
dec
ljmp
jecxz
xor
xchg
lods
xor
mov
mov
xlat
je
and
sbbl
jb
fs
sahf
cmp
xchg
sub
cli
xor
fimull
inc
pop
mov
push
mov
iret
pop
cwtl
call
flds
mov
pop
imul
jmp
lods
xchg
inc
je
cmpsb
lahf
popa
pop
test
mov
sub
pop
les
pop
clts
scas
stos
mov
iret
and
mov
call
mov
pop
popf
xor
hlt
jo
inc
dec
pop
jae
xor
dec
pop
or
xor
cmpsb
out
data16
stos
jnp
xor
mov
fsubp
cld
lahf
cs
xchg
das
lcall
xchg
out
jle
mov
xor
das
jo
mov
adc
sbb
std
pop
mov
mov
or
cmp
inc
test
clc
push
cmp
pushf
repnz
call
xlat
mov
pop
clc
in
outsl
xor
pop
jb
loopne
ljmp
aam
mov
sub
enter
imul
movsl
jge
jb
pop
loope
ljmp
push
aad
add
pop
push
xchg
push
sbb
push
or
lcall
xor
loop
push
dec
add
das
add
scas
jmp
adcb
xor
aam
push
cmp
int3
cwtl
cmp
fstps
xor
sbb
in
lock
push
or
push
ret
jae
xchg
or
lret
mov
call
and
icebp
push
xchg
jno
mov
pop
addl
xor
xor
dec
movsb
xchg
ss
sub
xor
mov
lret
xchg
ret
incl
sbb
popa
or
iret
pop
dec
call
dec
outsl
fs
int
mov
lcall
sar
fwait
and
jp
jecxz
xchg
ret
xor
stc
pop
ljmp
lock
ret
das
cli
lcall
incl
neg
cld
xor
testb
fsubrl
ds
jecxz
fmuls
push
ret
push
icebp
outsl
jecxz
in
push
lea
mov
xlat
pushf
add
dec
mov
call
test
xchg
repz
adc
cmpb
js
mov
loopne
or
mov
lcall
shll
add
ss
pop
stc
inc
mov
mov
sbb
xchg
cvtdq2ps
repz
leave
jle
pop
push
pop
inc
pop
sub
ficompl
or
imul
mov
or
nop
lods
imulb
inc
clc
decl
adc
ficoms
adc
mov
aam
gs
ja
decl
loopne
cs
mov
rcll
mov
mov
incl
fnstsw
pop
inc
mov
insb
subl
mov
push
jb
jp
fcompl
mov
mov
jg
dec
cld
jb
lea
cmp
test
xor
cmp
inc
mov
xchg
mov
shlb
movsl
pop
mov
sbb
jmp
pop
fdivr
xchg
xchg
outsb
jle
bound
lcall
enter
adc
xor
jnp
repnz
andl
or
jmp
pop
rol
inc
cs
add
cld
mov
out
push
outsb
push
notl
imul
incl
jmp
mov
cmp
mov
xchg
scas
sbb
xchg
cltd
negb
mov
mov
iret
cmp
adc
ljmp
lret
sti
in
mov
push
int3
shrl
pop
pop
test
sti
je
fstpt
ljmp
aad
push
xor
nop
nop
out
mov
jmp
decb
jmp
call
jp
paddsw
insb
outsb
mov
xchg
dec
mov
and
fsubr
jecxz
and
idivl
or
das
adc
std
push
sub
scas
push
icebp
fistl
out
clc
dec
dec
inc
sub
cld
mov
mov
pop
pop
out
std
and
decl
cmpb
ss
orb
pushl
std
aas
leave
mov
rcrl
ret
xor
rorb
aas
insb
aad
inc
outsl
test
call
lock
js
hlt
and
sbb
xchg
loope
sub
bound
in
repz
dec
aaa
clc
add
adc
imul
aam
repnz
jo
div
mov
das
pusha
dec
and
inc
imul
dec
dec
arpl
in
sub
xchg
mov
adc
rcr
xor
pop
loop
out
hlt
fidivl
mov
dec
loop
notl
sub
es
mov
push
push
pop
out
sub
sahf
mov
pushl
into
out
bound
jo
dec
adc
bound
mov
or
pop
out
sbb
adc
jg
cmp
cmpsb
ljmp
sbbb
cmp
sbb
mov
cltd
mov
inc
push
xchg
loopne
aas
mov
xchg
push
xchg
stos
push
mov
or
xchg
dec
inc
fsubrl
movsb
push
dec
xor
call
sub
pop
mov
test
cltd
hlt
mov
test
dec
mov
sar
sub
jno
mov
cmpsb
jl
jns
mov
sbb
push
stos
ljmp
adc
fnstsw
and
jge
int3
lods
mov
push
inc
inc
xchg
data16
push
xchg
xor
pushl
inc
inc
mov
xor
ss
mov
jge
gs
xor
jne
js
ljmp
pushl
outsl
xchg
outsb
dec
sti
add
ret
add
pop
push
cmp
int3
stc
sbb
out
outsb
xor
aaa
jne
mov
cwtl
jo
xchg
flds
loop
insl
and
inc
pushl
add
push
or
sti
push
dec
dec
mov
insl
test
lret
mov
dec
fstpt
hlt
arpl
jle
push
stos
mov
movsb
pop
loop
cld
imul
mov
incl
nop
pop
fsubrp
popa
movsb
ds
lock
notl
cmp
shrb
test
jmp
mov
mov
mov
test
arpl
dec
push
and
lcall
lret
sarb
neg
mov
jl
mov
cmp
imul
xchg
movsb
or
leave
sbb
enter
decl
xchg
sti
pop
jl
mov
pushf
xor
mov
clc
sbb
pop
icebp
jmp
icebp
loop
mov
jns
mov
icebp
push
cltd
jg
in
xor
icebp
or
decl
in
jp
data16
cmp
or
jns
lcall
push
cld
jge
sub
daa
push
mov
mov
jecxz
adc
mov
incl
bound
sbb
das
mov
imul
clc
mov
jle
xor
mov
push
pop
sub
jp
sti
fcomip
mov
push
pop
sbb
sti
inc
dec
jns
xor
daa
push
mov
pushf
sbb
push
dec
pushl
or
ljmp
jb
push
cmpl
jns
pushl
jne
shrb
cli
inc
dec
xor
mov
fiadds
je
adcl
jmp
mov
mov
inc
cs
or
rcrb
ret
xchg
in
decl
ljmp
adc
fiaddl
add
cmp
rcrb
jmp
incl
stos
mov
dec
push
pop
ret
test
ffreep
push
sbb
add
rclb
test
pushl
push
pop
shl
js
adc
mov
decl
sbb
xchg
jae
mov
dec
xchg
stc
in
iret
pop
pushl
pop
or
popa
sbb
bnd
in
dec
daa
sub
scas
push
adc
xor
sbbl
cwtl
stos
pop
test
jmp
and
xlat
stos
je
dec
mov
inc
leave
xor
lcall
sahf
push
sbb
and
and
leave
adc
push
inc
test
pushl
cwtl
fistl
pop
test
out
aad
or
fistps
scas
in
aad
ss
fbstp
mov
not
dec
mov
cmpb
xchg
pop
rorb
test
rol
jmp
fistl
push
sbb
pop
shlb
adc
arpl
pushl
push
ljmp
scas
ss
pop
xchg
fcomps
fdivl
cli
sar
adcl
cwtl
mov
mov
inc
movsb
ljmp
imul
pop
es
and
sub
inc
cltd
inc
fnstcw
ror
cmp
mov
movsb
seta
nop
sub
ljmp
hlt
mov
test
push
lret
dec
cwtl
xor
mov
and
xchg
pop
mov
jbe
pushl
jbe
ret
and
into
mulb
ljmp
iret
cld
push
stos
sub
jno
push
loopne
lcall
jmp
xchg
idivl
inc
xlat
dec
pop
adc
adc
fcomi
rcrb
jl
scas
sbb
add
adc
aad
sbb
stos
push
pop
rorl
xor
or
decl
dec
jge
dec
hlt
sbb
mov
inc
out
mov
cs
fsubrs
jp
or
call
jmp
mov
mov
inc
or
das
xchg
sub
ret
decl
inc
stc
add
pusha
cmpsl
jp
pop
test
sub
test
and
lods
out
cli
jg
or
subl
fstpl
adc
jae
bound
ljmp
test
popa
mov
ja
pop
hlt
cmp
pop
mov
cmp
sub
xchg
lcall
sub
mov
lahf
add
adc
pushl
xor
push
inc
mov
lea
outsb
mov
in
iret
rorb
sbb
cld
aaa
xchg
cmpsb
les
adc
and
dec
sti
mov
inc
sbb
imul
call
mov
cmpsb
je
ljmp
push
push
mov
scas
fs
cli
movsl
das
sar
test
mov
out
or
loope
adc
inc
push
jg
inc
std
inc
movsb
adc
cs
call
cmc
fs
das
cli
push
iret
leave
stc
xchg
mov
mov
data16
push
adc
push
fildll
test
decl
mov
arpl
push
xchg
adc
xlat
jle
hlt
imul
push
pusha
mov
pop
add
sub
std
bound
jno
js
xchg
sub
push
xchg
mov
ljmp
aad
int
in
cltd
push
adc
pop
filds
ja
cmp
push
fwait
jl
stc
xor
in
xchg
sbb
repnz
jmp
push
and
add
aad
lahf
sub
adc
xchg
movsl
push
shlb
sub
lea
jmp
dec
inc
sub
clc
xor
xchg
inc
push
imul
sub
mov
lods
mov
jmp
pusha
inc
icebp
xchg
outsl
out
std
fwait
loopne
rorl
faddl
call
pop
and
ss
pop
or
dec
out
leave
mov
sbb
push
mov
cs
pushl
in
push
xlat
jg
loop
cltd
pop
cld
sti
xchg
cmpb
dec
fcmovnbe
je
movsl
in
out
lahf
data16
out
add
jmp
hlt
mov
dec
popa
jne,pt
loop
je
pusha
jnp
cs
into
into
jle
jmp
mov
sbb
sub
inc
jnp
cmpb
sbb
xchg
push
cltd
sarl
sbb
and
fdivr
decl
out
imul
jae
sahf
fadds
push
xchg
stos
lea
mov
into
addr16
jmp
inc
or
mov
cmp
pushf
imul
fdivrl
dec
mov
cld
jmp
mov
jecxz
clc
fadds
sub
push
jmp
push
add
sar
ja
stos
jnp
data16
xchg
inc
inc
push
push
inc
call
sbb
xor
incl
fisttpl
push
addr16
jg
mov
std
bound
lahf
mov
xor
push
fsubs
sub
lock
imul
inc
icebp
in
push
rolb
adcb
cwtl
mov
insb
add
inc
xchg
jge
jae
les
cmp
cmpsb
sbb
xchg
ja
stos
loop
jl
cmp
fwait
addr16
loope
mov
mov
popf
lods
addb
roll
push
adc
filds
jns
pop
fisubs
movsb
or
in
mov
loopne
aaa
mov
add
cli
cmpsl
jnp
arpl
pop
stos
mov
insl
mov
pushf
mov
jne
adc
repz
xor
ljmp
xchg
pop
data16
movsb
cmp
dec
mov
lods
in
add
call
add
fs
out
loopne
iret
and
ja
jmp
dec
sbb
lahf
cmpsb
jne
icebp
mov
int3
rcrl
jne
push
mov
decl
insl
int3
ds
fldt
arpl
mov
cmpsl
cmpl
lret
inc
mov
fcoml
or
cmp
add
in
push
add
lods
adc
pushl
cld
and
push
push
repnz
xchg
dec
les
and
push
cs
inc
jae
les
jo
imul
xor
and
inc
push
shlb
jmp
and
and
cli
movntq
jo
imul
insl
scas
sub
pop
sarb
fidivrs
into
notl
incl
xchg
mov
dec
data16
mov
das
cmp
xchg
add
ja
call
mov
dec
cmp
xchg
mov
sbb
scas
xchg
and
incl
cmc
out
pop
lahf
cmp
cs
xchg
xchg
out
dec
std
dec
aad
dec
sahf
push
test
movsl
pushl
dec
pop
arpl
in
mov
jae
ljmp
inc
into
mov
call
xchg
add
pop
mov
pop
xchg
push
in
sbb
ret
or
in
ret
inc
and
lcall
stos
lcall
sti
int3
jo
repnz
aas
pushf
push
and
lods
hlt
jbe
fucom
add
clc
inc
data16
fcomip
ret
mov
aam
les
mov
jl
sbbl
xor
test
das
mov
push
std
dec
jno
jg
call
xchg
xlat
dec
jg
mov
cmp
cld
shrl
mov
cmp
mov
aam
fmuls
sarl
adc
js
or
fwait
ljmp
or
sbb
dec
mov
gs
lods
push
lock
sbb
ljmp
fwait
lcall
xchg
mov
and
sub
daa
jne
cltd
out
es
aas
in
jge
test
lods
mull
and
mov
push
js
mov
sub
ljmp
push
cli
fwait
dec
mov
push
int
insl
lea
test
daa
push
insb
fcomip
pushl
push
sbb
filds
xchg
ror
call
and
out
pushl
xlat
enter
sbb
repz
ja
out
pusha
pushf
shrl
adc
dec
mov
movsl
and
xor
stos
in
jg
dec
xor
aad
jmp
shll
jp
mov
and
add
jl
jl
lods
sbbl
pushl
xchg
aad
testb
push
js
push
adc
sub
icebp
out
xchg
stos
cmp
adcb
inc
cmp
jmp
lret
loop
movsl
mov
add
mov
out
gs
jo
lret
scas
out
movnti
incl
mov
data16
add
mov
icebp
out
jp
fadds
lock
call
push
adcl
or
mov
dec
and
inc
inc
es
jge
sbb
mov
in
adc
das
das
pusha
push
test
or
xchg
mov
fwait
rolb
outsb
mov
xor
loop
ljmp
inc
inc
dec
push
mov
sub
cmp
or
mov
jnp
or
fstpl
filds
clc
mov
mov
push
add
stos
shll
incl
push
jb
lret
pop
and
sti
pop
rorl
lcall
fstpt
pop
cmpsb
xchg
arpl
cli
stos
add
mov
inc
ffree
mov
loopne
lcall
xchg
test
sub
cmpb
int3
inc
fsubrs
push
aad
test
xchg
ljmp
aaa
insl
inc
mov
push
pop
fistpll
bound
in
adc
in
sbb
ljmp
jnp
shl
decl
xchg
cmp
sbb
lcall
push
incl
nop
pusha
xchg
pop
scas
or
cmp
mov
daa
repnz
jg
push
adc
mov
sti
mov
inc
imul
test
mov
or
push
mov
jle
insl
push
fnstsw
idiv
decl
add
mov
pop
pop
loopne
and
xor
das
sar
xor
sti
mov
pop
push
or
sar
jnp
insb
sar
incl
push
into
shll
jns
frstor
adc
push
xchg
cmpsl
adc
sbb
jg
add
jo
in
sub
sti
incl
enter
mov
mov
pop
aad
and
sbb
es
inc
push
jg
push
mov
ja
fisubl
jo
movsb
jne
jle
stc
fidivs
loop
jg
sbb
ja
clc
jmp
cwtl
jae
push
aad
ret
mov
in
pushl
call
lahf
scas
loopne
pop
stc
test
jg
sub
push
jmp
repnz
inc
mov
outsl
jmp
mov
data16
mov
jbe
mov
fs
fwait
sbb
jmp
sbb
fcmovb
or
cltd
push
movsb
lds
lcall
ret
pop
iret
push
decl
cmp
testl
jle
cmp
dec
push
out
lret
jg
loop
cmpsb
inc
xchg
loopne
or
lods
or
orl
pop
fmuls
decl
xor
pop
jle
clc
xchg
push
mov
jno
shr
pop
xchg
and
xchg
adcl
xor
mov
decl
xchg
or
push
jae
xor
mov
fcos
inc
imul
dec
pop
aas
cmp
pop
setg
int
clc
test
cmpsl
xor
add
incl
lcall
lret
ret
fisubrl
sub
nop
aaa
fmull
enter
pop
ret
xor
xchg
or
out
sahf
gs
xchg
and
adc
and
mov
call
cld
inc
sub
mov
or
dec
lea
iret
xchg
adc
and
push
mov
pop
call
addr16
sub
cmp
stc
or
adc
cltd
jns
gs
adc
imul
je
leave
mov
cmpsb
xorl
icebp
fwait
or
imul
or
mov
sbb
and
xor
adc
jg
insb
scas
ljmp
pushw
into
mov
cmp
add
xchg
or
push
call
popf
cmp
mov
add
mov
inc
divb
ljmp
mov
in
pusha
jmp
call
cld
xchg
mov
mov
push
int3
fistpl
aad
jno
inc
jl
pop
out
mov
das
jecxz
pushl
or
and
cmpsb
test
sbb
dec
xchg
andb
sbb
sbb
jg
push
addr16
jnp
sahf
out
or
pop
push
fwait
mov
jl
push
std
sub
and
mov
push
xchg
jmp
fwait
push
frstor
sub
and
or
hlt
jl
and
pop
inc
sbb
sahf
xchg
add
adc
jbe
adc
or
ljmp
push
cmp
jmp
popa
imul
rclb
pushl
out
bound
mov
jl
cmp
and
jmp
sbbb
jmp
lea
mov
les
lods
bound
cmpsb
outsl
cmp
sti
fimull
cmp
gs
inc
loop
int
call
pop
sarb
mov
inc
mov
data16
dec
push
dec
movsl
adc
fnstenv
dec
stos
xlat
inc
adc
mov
sbb
stos
add
decl
sbbb
dec
shl
sbb
mov
jg
dec
insl
icebp
inc
out
lcall
inc
add
xor
inc
cmp
xchg
jnp
adc
push
std
ljmp
fnstcw
loop
mov
sbb
decl
cld
jp
push
add
mov
mov
sbbl
adc
shl
ja
pop
adc
cmp
aad
lret
sti
lock
out
push
testl
or
inc
lods
insb
xor
pop
addr16
call
faddl
sub
cmp
push
mov
lret
test
cmp
mov
add
hlt
mov
mov
mov
ja
clc
mov
push
adc
in
ss
ljmp
inc
mov
idivb
mov
push
xchg
lcall
inc
outsb
fsubrl
pop
movsb
decl
mov
dec
and
in
imul
and
xor
mov
push
popa
call
and
sub
test
test
and
cmp
lahf
aaa
or
mov
mov
int3
sbb
mov
es
or
xor
test
cld
jmp
xchg
push
sbb
push
iret
std
pop
jg
gs
pop
xchg
dec
cmp
jne
push
pop
ljmp
add
fs
les
lods
aaa
bound
dec
fnstsw
decl
notl
push
add
mov
jnp
sahf
jecxz
jae
sub
mov
pusha
cli
adc
mov
lret
mov
and
pop
mov
jb
xchg
jnp
inc
lcall
ja
rorb
cmp
mov
jno
xor
inc
test
aaa
push
call
mov
ret
add
dec
xor
lds
aaa
sbb
out
out
stos
cltd
call
jbe
repnz
stc
jno
les
imulb
sbb
gs
push
call
shl
stos
xor
lcall
mov
mov
icebp
ljmp
mov
pop
mov
xlat
sbb
lcall
repnz
loop
and
aaa
shll
js
sub
outsb
xchg
lds
dec
mov
decl
mov
mov
fisubrs
xchg
addr16
xchg
orl
cmp
fdivrs
lds
jnp
xchg
cmp
adc
je
xchg
hlt
call
inc
insb
xchg
jb
sub
out
lret
imul
leave
mov
xchg
jnp
ret
ftst
ds
js
push
fistpll
cli
lods
out
jo
fbld
nop
cmp
in
scas
mov
mov
dec
mov
out
cwtl
enter
adc
ljmp
lret
rorb
cmp
sbb
lods
aas
xor
filds
stos
mov
add
xor
cmpsl
sbb
add
push
mov
push
dec
pop
sbb
pop
clc
outsb
ljmp
fstl
or
mov
clc
push
mov
in
mov
in
pop
decl
out
push
je
rorb
mov
out
pop
cmpsl
cmp
jmp
outsb
jecxz
cmp
shr
fcmovnb
movsb
xor
ljmp
push
xchg
and
cmpsl
pop
bound
mov
cwtl
sbb
cmp
cmpsb
je
sub
jmp
jl
or
fnstenv
pop
push
pop
mov
fsub
lret
ret
and
je
sar
pushl
mov
inc
push
loope
inc
inc
fsubrl
sbb
and
xor
jp
outsb
jo
pushl
xor
scas
xchg
popl
call
xchg
dec
sub
mov
jmp
cltd
pusha
mov
cltd
ret
jle
sbb
jg
push
inc
dec
iret
sub
roll
fidivrl
mov
in
iret
movsb
xchg
lret
mov
and
std
subl
ja
in
decl
adc
push
stos
daa
push
dec
pop
jae
xor
mov
cmp
lcall
mov
outsl
je
push
outsl
sti
shlb
fistpll
lcall
mov
jb
cld
push
outsl
pop
in
insl
dec
push
dec
push
cld
repnz
aam
call
cmpsb
add
call
adc
test
adc
push
js
add
decl
mov
adcl
inc
sbb
jne
xor
fs
lcall
pushf
rcr
lcall
jmp
inc
jle
sti
scas
ss
fwait
pop
cmp
lds
into
pusha
mov
and
aad
dec
mov
push
or
testl
es
mov
pop
xchg
jne
popf
test
stos
xchg
test
sahf
sahf
aaa
std
lcall
dec
jo
cmp
lock
inc
fcoml
pop
sub
lods
push
ud1
lcall
test
xchg
dec
adc
leave
addr16
mov
std
ss
icebp
frstor
imul
mov
or
mov
pop
hlt
and
push
cmp
dec
lcall
jns
adc
mull
mov
stos
in
mov
fldl
out
ljmp
flds
push
push
aas
push
pop
sbb
rorl
stos
push
ret
shl
popa
mov
incl
fdivrs
sub
jbe
movsl
sub
pop
jge
ret
sbb
xor
outsb
sub
and
sbb
outsb
push
dec
leave
mov
mov
sub
push
push
jo
in
cmp
jae
and
inc
jnp
xchg
fdivs
mov
test
aaa
cwtl
imul
mov
dec
rorb
jp
repnz
lds
lcall
stc
out
adc
aam
hlt
mov
popf
loope
xor
sub
sub
xor
sti
jge
or
pop
inc
jno
inc
aam
push
mov
and
mov
and
pop
jl
loop
and
ret
push
test
sbb
adc
jg
mov
sti
add
dec
and
xor
cmp
out
aad
popa
jecxz
shrb
xchg
into
mov
cmp
in
imul
aam
pop
int3
fists
addr16
jecxz
xor
scas
and
or
incl
inc
imul
mov
dec
dec
mov
aam
stos
sti
repz
lcall
jmp
jg
or
jne
or
in
dec
add
repnz
ljmp
fnstsw
cmp
cld
sub
xchg
iret
mov
add
push
push
adc
fwait
cmpsb
or
decl
cli
inc
sbb
ss
popa
push
jns
inc
and
mov
leave
jb
sbb
outsb
inc
jmp
mov
xor
cmp
push
xchg
cmc
mov
mulb
jo
jo
cmp
lods
aaa
fwait
cmp
cwtl
adc
push
adc
mov
jo
mov
inc
sub
sbb
ret
ja
inc
adc
jnp
adc
orb
insl
sbb
ljmp
sahf
jl
aaa
lahf
add
inc
stos
cmp
icebp
inc
jmp
xor
ficoms
pop
cmp
inc
fdivs
push
imulb
out
jg
std
and
in
mov
sub
sub
inc
push
inc
insb
cmp
adc
xor
cli
jg
fwait
sbb
mov
inc
adc
out
xchg
das
cmp
call
jle
rcll
mov
test
mov
incl
inc
mov
jne
cmpsl
or
adc
jnp
mov
ds
cmp
decb
ret
jmp
inc
insb
lea
mov
es
xor
xchg
movsb
icebp
mov
mov
sbb
fildl
mov
fiadds
in
bound
inc
mov
clc
fdivrl
push
data16
cmp
rcll
cmp
cli
ljmp
repnz
test
fisubrs
push
and
xchg
in
mov
cmp
mov
and
decl
add
mov
jae
push
jne
push
sbb
pop
jne
mov
pushf
pop
jg
mov
jl
push
or
sbb
mov
lcall
decl
push
lock
mov
jge
cwtd
mov
push
nop
push
ja
shl
xor
test
inc
jmp
push
fmuls
mov
add
xchg
push
cli
and
mov
or
and
push
out
clc
sub
addr16
sub
aam
ret
cmp
jmp
gs
arpl
push
incl
ss
leave
push
test
std
jle
jmp
pop
xchg
dec
mov
mov
movl
xor
jns
cli
inc
mov
pop
xor
clc
dec
sub
enter
icebp
in
xchg
das
ret
jmp
mov
add
inc
stos
stos
add
lea
or
xor
sbb
adc
or
decl
fstpt
xchg
add
nop
jle
aaa
std
aaa
ds
pop
cmc
xchg
rorb
push
xor
adc
cld
incl
mov
adc
sar
mov
mov
xchg
mov
push
pop
data16
pushl
test
out
lcall
pop
ret
in
cmp
mov
imul
mov
ljmp
es
xor
sbb
mov
shl
in
dec
dec
in
adc
loope
out
jmp
repz
cmc
pusha
and
ret
ja
shrl
pop
popf
pusha
sub
cmp
repz
andb
or
idivl
sub
sbb
sub
es
clc
jmp
push
imul
xor
mov
lret
mov
pop
dec
cwtl
push
add
incl
ret
sbb
mov
mov
frstor
into
xchg
lea
lcall
jns
imul
jmp
icebp
icebp
outsb
pop
loopne
or
dec
ret
aaa
dec
xor
std
mov
int
test
jmp
lds
iret
jle
sarl
nop
addr16
cmp
pop
cmp
popa
add
sub
stc
test
jb
sbb
nop
dec
inc
int
jg
pushl
xchg
imul
in
push
movsb
mov
sbb
push
enter
popf
add
jnp
data16
and
aaa
inc
pop
rclb
sub
adc
xlat
jo
mov
pop
jo
fcomip
add
arpl
cmp
sbb
repnz
add
or
ss
lcall
insl
push
push
stos
aam
pop
or
in
out
fcmove
les
scas
scas
dec
in
sub
mov
mov
shrl
gs
popf
lock
push
test
adc
mov
incl
cmp
cmp
dec
jecxz
inc
sti
push
orb
sbb
fcomip
mov
push
xchg
jg
cmp
daa
add
call
in
pop
xchg
or
jge
test
cld
repz
test
pop
icebp
cmpsb
clc
xchg
or
xlat
jg
rcrl
inc
pop
jbe
clc
bound
clc
inc
mov
mov
and
dec
dec
out
fcmovnbe
or
mov
pop
xchg
js
xchg
fwait
jmp
inc
sbb
shll
mov
push
lods
rolb
lds
mov
jg
test
repz
fcmove
cmp
pop
inc
mov
int
adc
call
dec
push
insl
fdivrs
push
rcl
out
mov
out
or
xchg
ret
leave
inc
push
push
stc
jbe
decl
push
pop
xor
outsb
sub
mov
dec
sti
sbb
insl
js
lods
mov
in
or
call
sbb
aad
pop
movsb
nop
sub
mov
cmpb
inc
jns
and
mov
inc
incl
enter
rcrl
test
test
rorl
out
and
push
loopne
mov
mov
dec
data16
dec
outsb
fistpll
mov
out
outsb
in
xlat
sbb
push
lcall
addr16
add
stos
push
sbb
adc
push
std
xor
jo
mov
xor
jno
jp
psubusb
pop
adc
dec
xor
call
xlat
fnstcw
loope
mov
lahf
sub
push
and
mov
negb
pushl
dec
test
loope
aad
cmp
aad
sbb
fisubrs
jmp
adc
movsl
and
in
push
fldenv
cmpsb
or
lea
enter
jbe
aad
out
scas
clc
decl
and
jmp
mov
aaa
cmp
add
mov
sub
jle
sub
cmc
push
jg
push
mov
test
call
cld
ljmp
push
mov
pop
or
sbb
sub
push
push
sahf
and
in
addb
fmulp
es
fwait
dec
sub
sub
lods
mov
dec
pop
jno
mov
dec
mov
mov
pop
pushl
push
mov
pop
cli
scas
adc
jg
pusha
ljmp
mov
test
cs
incl
in
xchg
mov
mull
push
jno
mov
je
push
insb
fwait
mov
jg
xor
nop
incb
inc
jg
enter
scas
or
pop
jns
jmp
pop
or
daa
jmp
jnp
xor
add
incl
mov
push
cmp
loopne
add
push
sbb
mov
testb
add
dec
test
push
and
sub
popa
jmp
xchg
jbe
xchg
jp
jg
into
sbb
sub
jnp
call
inc
pop
inc
mov
adc
lds
cmpsb
call
scas
pusha
lahf
std
sbb
inc
mov
jg
push
lret
cmp
mov
mov
or
ljmp
and
mov
add
outsb
or
fcomip
call
bound
jbe
dec
adc
or
or
daa
bound
push
pushl
sbb
lret
sbb
jg
in
pop
or
push
fmull
popa
shl
mov
insl
ljmp
xor
loopne
and
pop
xor
pop
stc
sub
inc
push
insb
idivl
incl
js
jae
lock
push
movsb
fmull
inc
mov
pmaxub
lods
pop
daa
mov
and
loop
repz
xor
stc
fcoml
mov
das
mov
mov
outsb
scas
movsb
lcall
test
inc
es
les
nop
dec
mov
sbb
mov
xchg
cmp
popf
jo
jae
lcall
pushl
addr16
imul
rcrb
outsl
xchg
aas
push
cli
lcall
scas
loopne
out
cmp
psubsw
nop
inc
xlat
rcrb
push
sbb
cmp
incl
mov
xchg
dec
stos
sbb
stos
dec
push
xchg
jmp
std
in
ja
lret
push
cmp
in
push
subl
movsb
pop
imul
and
es
int
iret
fs
pop
shrl
outsb
fadds
mov
lcall
int
push
shl
jge
xchg
or
roll
mov
movsb
or
test
or
jmp
dec
std
or
ficoml
cmp
sbb
push
dec
sbb
adc
jg
mov
mov
les
mov
or
sub
scas
push
mov
repz
gs
sub
mov
lcall
xchg
add
dec
mov
push
dec
mov
movsl
cmp
xor
decl
clc
rclb
out
sti
jns
and
call
xchg
or
cmp
sbb
pop
mov
ja
and
mov
pushf
push
stc
mov
jle
pop
stc
xor
jmp
pop
fldl
daa
enter
jno
xchg
aad
ret
es
jmp
fsubrs
mov
push
inc
jb
push
push
cld
repz
lods
sti
lcall
jg
jns
cli
ljmp
push
jne
sub
int3
dec
push
aas
fnstsw
lcall
sahf
mov
lock
cmp
loop
aam
jge
movsb
fldcw
incl
ss
das
push
adc
es
cld
xchg
stos
outsb
lret
adcl
jg
daa
test
cmp
mov
cli
dec
mov
repnz
in
and
xchg
pop
pop
mov
sbbb
jmp
jge
push
mov
repnz
xchg
add
in
add
jmp
and
sti
mov
arpl
dec
daa
push
rcrl
or
pushl
popl
in
jno
or
cmp
out
pop
xor
pop
test
scas
mov
call
ljmp
mov
leave
outsb
cmpsb
popf
aas
mov
sub
sti
pushf
push
add
mov
pop
test
scas
daa
cmpsb
sbb
aas
repnz
test
xchg
inc
xor
xor
decl
lock
ss
xchg
fs
lods
outsb
lret
xor
in
xlat
lahf
in
xlat
out
arpl
mov
mov
in
xorl
shl
popf
xor
fcoms
shlb
and
mov
sbb
sbb
push
loope
mov
cmp
sub
add
cmpsb
pop
adc
jge
xchg
sbb
xor
daa
xchg
scas
das
fwait
inc
aad
incl
loope
adc
xchg
testl
test
add
mov
lds
scas
cli
sti
shll
stos
mov
pop
aam
cmc
cld
mov
sbb
mov
or
mov
clc
lcall
sbb
add
jb
adc
and
dec
int3
rolb
jg
incl
es
pop
es
mov
cmp
addr16
iret
or
int
sub
jg
or
call
mov
dec
cmpsb
imul
inc
hlt
aad
stos
incb
decl
mov
lcall
adc
inc
adcl
lcall
mov
push
mov
push
jnp
xchg
ss
insl
sar
jmp
loop
mov
add
loopne
mov
lods
sti
cli
out
cli
cmp
daa
add
call
fwait
loopne
mov
and
subl
or
push
mov
push
incl
jnp
jb
out
lods
sbb
in
out
xorl
adc
imul
cs
call
pop
das
sub
ljmp
movsb
aam
bswap
in
int3
mov
add
iret
stc
push
inc
fcmove
or
lods
ret
fwait
inc
cmpsb
jmp
cwtl
inc
push
dec
pop
or
ljmp
push
mov
jle
push
lock
pop
adc
aam
ret
add
icebp
mov
pop
add
inc
fmull
stc
je
nop
and
repnz
add
shrb
ljmp
and
fstp
sub
push
pop
or
sbb
jp
ljmp
sbb
jmp
fwait
sub
mov
test
gs
lea
ljmp
call
push
rorl
dec
cs
inc
fwait
push
mov
adc
pop
js
rcrl
or
scas
cli
sti
add
test
js
mov
clc
les
lcall
xchg
fwait
icebp
dec
insl
xor
cmp
ret
push
mov
mul
pop
sub
xor
inc
pusha
out
dec
jbe
decl
aam
jp
xchg
cmpsl
xchg
xchg
sub
jno
lcall
xchg
incl
inc
ret
push
xchg
cmpsl
fisubl
mov
stos
int3
mov
mov
dec
clc
incl
cmpsl
and
pop
mov
inc
pushf
mov
or
adc
push
mov
in
push
out
nop
mov
subb
cwtl
mov
xchg
cld
xchg
pushf
add
ja
or
icebp
cld
push
push
dec
cltd
inc
or
aaa
lock
jg
shl
cmp
addr16
mov
imul
or
cmc
fs
push
push
add
sub
sbb
das
das
add
sbb
sbbb
jmp
and
cmp
test
inc
mov
sbb
stos
xchg
fimull
xlat
dec
enter
decl
enter
dec
add
mov
jmp
das
sbb
shrl
add
ljmp
pop
pop
lods
imul
sub
fdivrp
jmp
cmc
xchg
imul
lods
lea
mov
dec
dec
std
leave
xor
ja
jae
test
or
xchg
push
repz
inc
popl
jne
sbb
fldcw
dec
dec
pop
ret
push
ds
jle
pop
repnz
test
out
or
iret
xor
iret
inc
xor
popa
mov
pop
rolb
mov
dec
mov
jge
push
sub
adc
ret
insb
fs
das
mov
clc
push
inc
cmp
lret
xchg
xor
aad
das
sar
dec
and
mov
cli
aam
pop
outsb
js
jne
xchg
adc
cmpsb
pushl
test
cwtl
xchg
cmp
scas
push
std
imul
jb
dec
out
jae
mov
jmp
fwait
jbe
mov
lds
in
negb
loope
mov
pop
lods
mov
call
jmp
or
sahf
xchg
push
mov
leave
xor
add
mov
add
incl
mov
push
shlb
sub
jl
lods
dec
les
xchg
ljmp
and
ja
sub
je
je
loope
ljmpw
pop
call
cmp
loop
or
jge
sub
roll
dec
nop
push
rolb
cld
jle
pop
fs
popa
lods
pusha
fstpt
jg
out
popl
push
xchg
add
faddl
daa
outsl
mov
push
nop
push
incl
sbb
fwait
adc
cmp
xchg
sub
push
cwtl
inc
push
mov
aaa
push
call
mov
out
mov
out
jnp
int3
int
dec
incl
gs
es
mov
adc
sbb
sub
rcll
leave
decl
ljmp
sub
out
xor
jbe
add
xchg
mov
mov
push
imul
mov
sub
mov
cmp
adc
sbb
or
std
ret
inc
mov
bswap
xchg
testl
aad
add
xchg
cwtl
mov
clc
cld
outsb
test
pushl
call
test
les
mov
aad
mov
inc
lds
pushl
adc
xor
jo
out
bnd
push
jae
sbb
cmp
or
jl
xchg
dec
out
dec
mov
mov
jecxz
lcall
in
shrb
mov
test
lock
repz
inc
aam
sbb
idiv
incl
inc
je
adc
adc
add
pop
sti
das
pop
ss
xor
sti
and
stos
lcall
sub
clc
fstpl
rclb
fwait
out
add
dec
icebp
in
in
hlt
std
std
rolb
jns
movsb
shll
jbe
imul
incl
in
pop
nop
mov
aam
ss
mov
jl
sbbl
jg
out
dec
add
or
sbb
xchg
imulb
inc
and
fs
test
jmp
jmp
inc
imul
xchg
movsl
jbe
xchg
rcr
imul
push
jne
clc
dec
jg
mov
stos
hlt
imul
pop
push
sarb
ficompl
xor
xchg
push
cmp
push
sbb
mov
jne
fwait
mov
xchg
fwait
jb
pop
movsb
sbb
test
scas
jg
call
aad
and
push
cmp
jb
pop
in
test
mov
ljmp
or
leave
and
imulb
movsl
mov
js
dec
ficompl
pop
icebp
incl
push
insl
or
pop
lcall
sti
xchg
insw
in
mov
aas
lcall
inc
insl
inc
mov
movsb
lret
inc
cmp
dec
sub
out
and
mov
jecxz
sbb
mov
pop
cld
into
subl
or
jmp
xchg
add
shll
mov
movsl
hlt
fs
rclb
fmulp
fldl
insb
pop
and
and
pushl
cmp
sbb
xchg
jmp
shrb
dec
fst
mov
push
jno
inc
gs
adc
mov
out
in
xchg
xchg
mov
mov
inc
mov
push
jae
inc
push
out
mov
decl
dec
in
cmp
in
mov
stc
inc
mov
sub
adc
adc
hlt
pushl
ret
cli
outsb
lods
cmp
lret
lods
mov
inc
dec
add
es
xchg
xlat
jl
add
or
enter
mov
xor
jno
dec
stos
push
sbb
data16
and
popa
sub
pop
xor
or
fsubl
subb
rcrb
mov
int
loope
int
in
gs
or
mov
inc
and
push
mov
mov
fidivrs
aaa
add
daa
rcrb
jg
cmpsl
mov
sub
hlt
cmp
addr16
push
mov
jbe
add
push
cltd
mov
xlat
pop
jg
dec
push
lcall
lahf
data16
jno
inc
sahf
jae
jae
xchg
push
std
loop
add
sbb
push
xor
hlt
jecxz
movsl
dec
imul
ss
nop
add
inc
mov
arpl
js
incl
dec
fwait
push
mov
inc
fistps
call
ljmp
pop
pushl
cmp
push
fidivs
rcrb
mov
cmp
or
mov
pushl
jmp
sub
call
das
cmpsl
jmp
mov
adc
imul
jmp
andb
inc
stos
sub
jecxz
call
lea
pop
push
pushf
add
jne
aam
repz
or
repnz
jb
pop
scas
pop
outsb
lock
sub
fwait
xchg
sbbb
lcall
jmp
cld
incl
or
or
xorb
jbe
test
or
inc
jl
pop
mov
cmp
cli
push
add
inc
push
fwait
ja
dec
rolb
fmuls
lcall
aas
nop
xchg
ja
inc
cltd
sub
addb
cmpsb
inc
mov
stc
fdivr
call
push
pop
xchg
iret
mov
inc
mov
cmpl
inc
or
lds
call
mov
and
jbe
adc
jnp
sbb
pop
mov
add
fdivl
push
dec
mov
dec
pop
in
sbb
pcmpeqb
add
jb
imul
test
pop
push
sar
jmp
movsb
je
or
xor
mov
je
jp
es
decl
cmp
cmp
ss
mov
lods
push
out
or
mov
addr16
call
cmpsl
or
mov
ljmp
mov
jmp
push
mov
dec
cmp
push
xor
clc
int3
or
sub
aad
das
mov
mov
call
pop
ljmp
std
push
pop
insb
xor
adc
and
arpl
decl
jo
movsl
imul
in
lret
outsl
clc
pushl
add
dec
cmp
popf
dec
push
push
pop
mov
mov
adc
hlt
shrl
pop
ljmp
dec
std
stos
or
fbstp
cs
sub
xchg
inc
call
cwtl
outsb
repz
push
adc
pop
addb
data16
ljmp
jo
rorb
mov
aaa
push
push
xchg
les
pop
pop
fsubs
sub
stos
test
jl
jecxz
rcrb
icebp
xor
mov
movsb
arpl
fcomip
ljmp
add
pop
inc
test
scas
stos
lds
loopne
outsl
add
pushf
mov
pop
inc
ret
push
ds
inc
xchg
mov
sub
outsl
sub
dec
sub
xchg
dec
xchg
xor
out
push
mov
pop
mov
push
mov
adc
xor
sub
push
mov
push
lds
mov
cmpsb
in
decl
fisttps
popf
or
sti
cmc
mov
sub
ror
movsl
sbb
hlt
inc
scas
cltd
int3
sbb
loop
sbb
push
mov
and
sub
adc
sub
jmp
cmp
dec
jno
pop
out
xchg
push
rclb
lret
sbb
sar
push
or
jnp
or
stc
cmp
lods
push
les
mov
jg
jmp
in
jle
mov
xchg
mov
pop
nop
fsub
in
xchg
sar
ljmp
mov
cwtl
fstl
outsb
xchg
or
sbb
rsqrtps
or
fidivrs
sub
in
pop
xor
call
or
hlt
push
xchg
adc
repz
jp
inc
dec
mov
mov
lock
lret
inc
ficomps
fucomi
mov
jg
out
pusha
pop
or
mov
dec
xor
subl
jp
and
decl
sub
dec
jno
sbb
pop
cmp
inc
cmp
fwait
xlat
sbb
pop
std
lcall
adc
lahf
leave
aas
jnp
dec
bound
es
cmp
idivb
mov
incl
mov
aad
inc
scas
aam
inc
pop
arpl
mov
idiv
mov
iret
out
jge
loope
dec
xchg
dec
daa
sahf
or
repnz
rcll
pop
pop
cmp
sbb
jge
xchg
in
jecxz
adc
and
imul
clc
stc
xchg
lahf
sti
and
push
jg
jno
sarl
fbld
cmc
xor
mov
leave
nop
jg
pop
test
loopne
test
incl
or
lock
push
idivb
fisttps
sahf
bound
int3
div
mov
sbb
pop
adc
lcall
sub
es
dec
push
jl
insb
dec
and
cmp
nop
or
pop
sbb
not
cmp
push
jns
int3
push
popa
push
rclb
jg
jnp
sbb
sbb
xchg
dec
mov
mov
inc
adc
decl
mov
jns
lret
je
scas
inc
push
xor
inc
sbb
mov
dec
ljmp
test
cwtl
push
mov
test
sti
cmp
data16
fcoms
sbbl
mov
pop
cld
call
loopne
mov
xchg
jg
mov
xchg
dec
jae
pop
test
loope
xor
test
pop
stos
add
mov
movsb
pusha
rorl
repnz
aam
xchg
adc
imul
divl
fistpl
packuswb
xor
mov
outsl
je
ficomps
cmp
and
push
and
rorb
sti
cmp
les
xor
ret
int3
xor
xchg
and
insl
incl
pop
xlat
xor
and
mov
pop
shrl
pushl
and
int
dec
imul
inc
adc
or
gs
lods
xchg
outsl
jmp
mov
nop
cld
aam
test
pop
push
push
pop
cltd
pop
dec
mov
jg
data16
and
sbb
frstor
daa
call
out
lods
cmp
cmp
std
xor
js
call
dec
inc
data16
data16
test
dec
rcll
call
or
and
fwait
mov
push
bound
mov
out
ljmp
push
add
jmp
pushf
push
mov
pusha
mov
mov
and
jno
or
cmp
sbb
sarl
lds
push
notb
mov
int3
pop
sbb
xchg
leave
les
push
leave
movsb
mov
int3
mov
mov
pop
adcb
inc
xchg
inc
decl
fldenv
cld
mov
in
pusha
pop
repz
adc
mov
call
test
lret
fsubr
shl
xchg
cmp
das
lahf
mov
xlat
push
sub
idiv
inc
jge
pop
xchg
mov
cmp
jp
cwtl
lock
test
and
sub
rcrb
jbe
jg
push
mov
stos
fcomi
xor
test
adc
inc
inc
ljmp
xchg
arpl
add
loopne
in
mov
push
adcb
stos
lcall
xor
pushw
ret
adc
movsb
mov
int
add
pop
mov
inc
mov
imul
xor
arpl
xor
mov
mov
rcrl
out
insb
loopne
mov
jl
inc
enter
lcall
popf
jns
jb
push
iret
insl
jo
dec
in
out
enter
out
pop
sbb
mov
pop
std
jg
hlt
sahf
xchg
jge
cwtl
addr16
arpl
jmp
movsb
in
out
movsb
cmp
sahf
adc
repnz
add
ja
das
mov
out
mov
out
int
sub
mov
sbb
pop
imul
xorb
xchg
adc
pushl
dec
xchg
jmp
jmp
xchg
dec
movsl
xchg
es
aad
and
dec
loope
mov
orl
inc
mov
lcall
add
xor
and
lods
mov
sub
lcall
or
pushl
out
jnp
inc
jmp
sub
stos
pushf
pop
jnp
jmp
clc
cmpsl
push
addb
add
pop
ds
insb
dec
push
mov
cmp
dec
push
or
mov
pushl
cld
fisubs
xor
and
in
push
popa
mov
lock
stc
sbb
jg
insb
fstps
mov
daa
adc
mov
stos
mov
dec
sahf
and
jle
out
cli
adc
insl
test
std
call
mov
in
xor
fistl
cltd
xchg
inc
push
jb
cltd
out
sbb
jg
imul
mov
outsb
cli
mov
mov
jmp
rclb
cwtl
cmpb
mov
mov
cmpsl
fld
or
cmp
imul
aas
int
xchg
movsl
rcl
lret
std
cmpl
xor
jle
into
lret
loop
dec
fcoms
outsb
jge
mov
cwtl
int
mov
pop
lds
decl
push
inc
and
data16
in
xor
call
mov
adc
out
jo
ficomps
iret
test
push
mov
jge
lret
aam
or
lret
inc
mov
dec
rolb
mov
lahf
mov
std
mov
fadd
push
movsl
stos
jbe
loopne
fisttps
dec
mov
lcall
std
decl
js
fistpll
adc
je
test
xchg
std
pop
jo
mov
imul
divl
enter
into
xchg
ret
test
mov
sbb
jg
repz
addr16
out
popf
scas
cltd
add
js
add
lret
call
lcall
jp
inc
ss
add
xchg
xchg
fldt
xor
mov
ficomps
inc
mov
pushf
mov
lret
sub
mov
lcall
dec
xchg
inc
sbb
cmp
js
pop
and
andb
lods
mov
les
push
clc
cmp
dec
movsb
psubd
movsl
lock
lods
testb
push
xchg
mov
add
repnz
lock
fdivr
jmp
push
dec
popa
pop
pop
sub
test
int3
out
ficompl
dec
xchg
nop
xlat
test
push
das
clc
jge
repnz
lea
mov
cwtl
ljmp
and
mov
jno
pop
push
xchg
jne
xchg
dec
imul
jmp
mulb
push
js
xchg
push
mov
dec
aas
mov
loop
add
loop
movsb
add
insb
xorb
and
xor
sub
cmp
push
test
sti
ljmp
in
sub
lcall
xor
xchg
sbb
or
jle
push
push
xlat
push
sarl
sbb
lcall
pushl
dec
pop
lcall
add
jno
int
cmpsb
insl
outsl
sbb
mov
xchg
jge
movsb
incl
cmp
push
imul
movb
or
fidivrs
inc
fistps
push
mov
test
ljmp
sub
mov
cwtl
sbb
and
in
jbe
inc
jl
movsb
sub
incl
call
popa
jp
loop
dec
xchg
sbb
stos
arpl
lds
incl
xchg
mov
in
lods
addr16
adc
insb
fldt
mov
push
ret
and
lcall
adc
fs
cmp
adc
sub
mov
icebp
mov
dec
add
imull
movsb
icebp
mov
sbb
clc
push
lcall
push
scas
call
adc
call
jge
cmp
mov
outsb
pop
es
enter
test
mov
xchg
or
inc
push
mov
incl
cld
mov
addr16
stos
pop
lea
jnp
into
dec
jg
push
outsl
sub
sub
or
jae
push
mov
pop
nop
das
cli
call
hlt
mov
rorl
jne
rclb
iret
pop
lret
movsb
insb
cmp
xorl
call
int3
jge
insl
es
xlat
fdivrl
and
das
sub
iret
xchg
nop
push
ret
stc
fwait
push
and
xchg
mov
std
dec
inc
adc
sbb
gs
cmp
ret
mov
out
mov
sarb
lcall
orl
jo
push
mov
dec
adc
xchg
dec
jmp
mov
adc
loopne
cmp
jb
call
inc
decl
and
shlb
cmpsl
or
mov
loope
cmp
mov
sbb
dec
jne
out
in
jnp
out
xchg
stos
std
mov
mov
adc
cmp
xor
decl
int
push
dec
jmp
mov
push
out
cmp
pop
and
push
xor
cmp
dec
dec
pop
adc
popf
push
xchg
add
and
push
dec
stos
mulb
lods
insb
mov
pop
pop
lcall
test
pop
mov
push
inc
jmp
clc
jnp
repnz
mov
fprem1
clc
test
imul
and
mov
push
rcll
sahf
mov
sbb
push
fyl2xp1
mov
mov
cmp
rclb
hlt
mov
aad
sarb
mov
test
arpl
into
mov
sbb
sbb
fdivr
data16
cmp
loop
out
fs
dec
xor
mov
jg
insl
cmp
aad
dec
aas
inc
sub
test
ja
clc
stos
sarb
popf
aad
insl
iret
jbe
or
ljmp
dec
sub
fldt
mov
xlat
jmp
xchg
stos
hlt
sti
pop
mov
xchg
jecxz
mov
jecxz
and
mov
push
mov
stc
jl
or
push
sbb
add
pusha
mov
xchg
bound
mov
dec
and
cmp
and
and
sub
push
or
lock
xchg
adc
aas
mov
hlt
in
cmpsb
fistpll
pop
repnz
inc
scas
fsub
insl
cmpsb
xchg
test
in
rclb
mov
incl
mov
jns
lock
xchg
outsb
jo
lcall
jb
mov
stos
dec
call
xchg
scas
adc
pop
inc
loopne
popa
imul
mov
shlb
lcall
or
sbb
or
xor
pop
push
lods
fcoml
jo
scas
shl
call
decl
adc
inc
std
dec
fs
pusha
lret
or
out
xsha256
cmpsb
xchg
insl
hlt
fidivrs
cmp
sub
xchg
into
testb
xchg
mov
push
sarl
rolb
outsl
fldln2
call
incl
xchg
inc
dec
dec
lods
negl
fdivl
scas
jae
jle
loopne
pop
iret
inc
or
aam
addb
adcb
iret
sahf
ret
adc
xor
lcall
das
inc
daa
leave
or
clc
cwtl
nop
aam
pop
cmp
ljmp
pop
fadds
fldl
clc
sbb
das
cmc
and
pop
mov
or
add
or
pop
gs
fucomi
jp
xchg
dec
push
add
in
mov
cmpsb
pop
xchg
je
mov
sbb
jg
push
aas
addr16
gs
dec
mov
mov
movsb
dec
cs
out
add
and
in
dec
lcall
xor
loop
lret
dec
sbb
dec
lret
stos
or
inc
jle
jnp
out
push
adc
lcall
xor
dec
mov
pop
xchg
jno
sarb
push
orb
ss
jecxz
lea
int3
cmp
mov
jl
push
cmp
jne
xor
mov
push
jmp
cmp
icebp
inc
push
clc
insb
push
mov
scas
out
pop
inc
cmp
es
lcall
dec
add
ljmp
lret
adc
mov
push
cmp
xor
lea
insl
cld
pop
dec
fnstcw
pushl
filds
ret
sbb
lods
sub
inc
shrl
sahf
stos
adc
inc
andl
add
shrb
pop
sar
pushl
les
xor
xor
inc
ffree
je
mov
ja
fdivrl
loopne
out
adc
adc
fs
insb
aad
fildl
out
data16
mov
push
out
loope
xor
cs
test
dec
add
xor
or
lds
xchg
mov
sahf
sub
stc
js
ret
jo
cmp
inc
xchg
push
test
loop
xchg
call
pusha
mov
and
xor
mov
mov
call
test
adc
jae
out
out
stc
mov
ljmp
movsl
je
pop
cmp
push
jl
cmp
popf
test
in
push
xchg
sub
xor
call
and
sti
and
jmp
dec
fdivr
jecxz
mov
lahf
sub
inc
cmp
gs
pop
or
sahf
cltd
mov
inc
sbb
adc
cli
bound
call
pop
mov
ror
jae
sub
pop
out
mov
stos
xor
fs
push
push
repnz
mov
add
cmp
sub
and
and
decl
pop
cmp
notl
and
dec
pop
jo
in
or
test
xchg
push
jmp
sahf
sbb
stos
and
dec
scas
mov
xchg
cmp
shll
mov
adc
fisubs
pop
sbb
mov
and
ss
or
loop
dec
cld
gs
loope
or
ljmp
aad
sbb
pop
cmc
ja
pop
sbb
jb
inc
nop
push
cmp
jmp
test
pop
lods
push
mov
jmp
scas
or
movsb
mov
push
int
in
subb
mov
loop
adc
mov
movsl
push
cmp
sahf
push
xchg
movsl
inc
mov
mov
xchg
inc
rclb
gs
arpl
sbb
pushf
loope
cwtl
push
leave
enter
sub
clc
cmp
insb
jl
addb
out
cmp
decl
push
xchg
dec
mov
adc
andb
dec
addl
fs
incl
es
jmp
mov
xchg
fs
inc
xchg
xor
sbb
adcb
test
cltd
sub
sbb
cli
or
push
jb
cmc
fbld
jb
inc
xchg
stos
jecxz
cmp
into
and
imul
add
dec
push
sub
sbb
incl
mulb
sti
mov
mov
push
cmovnp
je
inc
lcall
and
dec
add
and
test
repz
dec
mov
js
ret
in
push
or
out
popf
nop
test
outsl
in
add
jbe
fcmovb
insb
sub
hlt
popf
jl
adc
cmp
sub
cmp
ljmp
movsl
bound
in
xlat
inc
dec
add
jae
fildll
pop
bound
push
sbb
cli
mov
xchg
jne
icebp
call
pushf
jecxz
and
mov
inc
pushf
pusha
sbb
jmp
mov
mov
std
out
sub
movsb
pushf
jns
push
fstpl
ljmp
sar
pop
test
inc
data16
push
js
pop
je
or
sbb
push
decl
sub
adc
pusha
sub
insb
jnp
loopne
scas
lods
out
shll
decl
mov
jae
loopne
sub
xchg
push
mov
push
and
mov
aas
sbb
lret
ljmp
jae,pn
loop
cmp
or
sub
xor
pop
je
cli
mov
cmpsb
ficoms
decl
jecxz
dec
add
mov
or
stc
aad
into
rcl
cs
jecxz
pop
push
xor
mov
test
jg
mov
mov
lret
orl
push
xchg
jb
pop
sbb
es
or
shlb
hlt
push
dec
das
jnp
sbb
push
scas
add
jb
test
ja
or
imul
cmp
push
rol
loop
jge
scas
mov
jmp
cmp
push
fs
pushf
sbb
mov
sti
rorl
pop
fistpl
pop
pop
test
jb
mov
test
pusha
and
mov
inc
js
inc
ret
mov
pushl
insb
pop
mov
sbb
lcall
roll
mov
lret
fisubs
mov
add
sahf
sbb
add
and
fmuls
sub
xchg
and
lcall
jecxz
mov
sub
aam
daa
mov
inc
arpl
stc
test
inc
mov
ljmp
or
jl
lret
jno
roll
or
pop
and
sbb
popf
mov
pushl
sbb
sbb
incb
mov
popf
adc
out
push
push
or
add
fdivs
dec
or
xor
icebp
mov
dec
mov
int
add
int3
pop
fdivrl
add
mov
mov
std
and
les
mov
fdivrl
sub
push
xchg
scas
ret
loope
push
daa
aam
inc
lods
jg
pushl
adc
dec
jecxz
dec
jnp
mov
into
icebp
pop
test
mov
mov
push
dec
pusha
jl
cmp
push
jge
add
lahf
leave
mov
mov
add
imul
or
pop
and
jno
mov
cld
incl
sub
pop
cmp
pop
fnsave
out
mov
ljmp
mov
ds
mov
lret
push
jno
jnp
mov
cmp
or
in
dec
out
jg
and
std
andl
mov
dec
inc
jmp
jbe
shl
and
notl
ds
mov
pop
xorl
add
xlat
mov
gs
in
stos
pop
xlat
xchg
push
mov
stos
inc
mov
mov
mov
int3
jg
into
adc
insb
cmp
adcl
lods
enter
addr16
stc
cmp
fidivrs
scas
incl
push
dec
inc
sbb
dec
pop
mov
mov
mov
in
mov
add
push
test
dec
mov
push
aas
push
testl
lods
jg
pusha
dec
jle
aaa
and
stos
xor
mov
call
cld
xor
jns
mov
je
stos
enter
jmp
mov
xor
iret
sbb
divl
sub
bnd
lcall
test
popf
jae
sub
xchg
aas
jo
ret
repnz
sahf
mov
ret
jg
add
lods
jmp
int
jnp
jle
sub
and
rcrl
pushl
push
rcll
mov
jl
les
sbb
inc
inc
or
sub
pushl
incl
ret
je
stos
jbe
in
adc
int
mov
pop
loopne
call
or
test
and
sub
fdivs
dec
dec
mov
inc
incl
rcr
push
push
loope
or
sbb
or
or
in
xchg
call
mov
ret
push
mov
xchg
pusha
inc
sub
rolb
fsubrl
dec
mov
leave
sar
call
sbb
inc
movsl
add
mov
push
test
jg
les
push
pop
jge
xchg
add
movsl
add
das
loopne
jne
sbb
jmp
pusha
lods
inc
xchg
rclb
inc
mov
mov
dec
sub
pop
lock
cmp
mov
push
adc
testb
sbb
call
aaa
lcall
xor
cli
insb
xchg
mov
fistpll
ret
dec
clc
pusha
pusha
inc
inc
pushl
adc
jp
inc
push
test
mov
negb
adc
into
testl
out
mov
ret
mov
dec
push
and
decl
repnz
mov
lcall
ret
in
imul
mov
cltd
lret
push
inc
addr16
jmp
test
xchg
mov
dec
pandn
add
fidivrs
std
movsb
repnz
add
dec
push
sarl
mov
pushl
push
enter
cld
mov
mov
cmpb
leave
dec
or
fsubrl
call
loop
outsb
xor
push
shl
pusha
loope
xor
pop
pop
adc
inc
xchg
mov
lods
mov
cmpl
xchg
jbe
je
and
jno
cltd
pop
lret
xor
cli
dec
and
std
pushf
icebp
dec
push
add
addps
sarl
pushf
xchg
mov
lcall
push
xlat
or
sarb
adc
lret
mov
sub
mov
in
mov
pushl
mov
pop
cmc
inc
daa
add
mov
imul
ret
jmp
lahf
cwtl
aaa
add
push
das
inc
push
xor
int3
jg
sbb
js
xor
lret
jmp
lret
push
xchg
push
fstpl
sub
sbb
sbb
xor
pop
cmc
lcall
mov
sbb
push
sub
sub
cmp
outsb
cmp
push
mov
inc
jne
outsb
leave
mov
or
inc
insb
add
push
rcrl
and
dec
sub
mov
sub
nop
jecxz
cmpsb
imul
nop
mov
pop
xor
das
cli
pushl
mov
mov
jnp
insb
xchg
dec
and
dec
ljmp
or
add
cmp
movsb
push
ds
cmpsl
inc
gs
mov
sub
jmp
inc
mov
add
call
mov
data16
mov
cmpsb
fistpll
stos
pop
push
mov
es
and
icebp
lret
int3
cmp
shlb
push
jmp
je
test
filds
mov
js
dec
xor
sub
cmpsb
arpl
sub
lahf
add
enter
popa
dec
jnp
nop
mov
loop
incl
outsb
shll
bound
mov
xchg
test
xor
xchg
mov
sub
decl
aas
insl
add
lods
sub
add
or
rcrl
jbe
mov
xor
jg
sub
inc
out
mov
xlat
adc
pop
cltd
dec
aam
xchg
jmp
loope
sub
aaa
negl
pusha
mov
rcll
xor
inc
cli
enter
aam
hlt
or
mov
cmp
leave
call
jb
loopne
lret
mov
mov
dec
mov
scas
push
add
icebp
sarb
wrmsr
rorl
in
pop
std
mov
outsl
dec
mov
push
int3
mov
jg
lods
mov
cmp
lock
jmp
cmp
gs
mov
add
mov
dec
das
cld
sti
jno
outsb
mov
pop
scas
add
jbe
mov
cs
sbb
cld
cmp
or
cli
mov
mov
call
adc
icebp
test
sub
sub
xchg
aaa
inc
add
cmpsb
pop
ja
cmc
cmp
adc
inc
out
cli
ror
mov
fcomip
jmp
call
out
adc
sub
cmp
popf
mov
mov
or
sub
mov
ljmp
lods
mov
into
mov
das
lcall
adc
loop
dec
outsl
fsubrp
xchg
std
cmp
in
repz
subl
into
inc
mov
lock
jecxz
fsubrp
in
lret
pushl
ljmp
fisubs
inc
out
mov
cmpsl
pop
push
mov
outsb
inc
adc
push
jg
push
frstor
fsub
mov
dec
or
das
enter
rorb
dec
mov
cmpsl
cmp
jmp
mov
aas
mov
out
push
mov
ljmp
lods
xchg
add
mov
iret
jns
xor
loop
add
or
sub
ffreep
idiv
jmp
sub
push
mov
fcoml
jnp
xchg
mov
sub
decl
sti
mov
shr
push
int
xchg
lret
ds
leave
mov
andl
dec
or
hlt
and
rorb
pop
std
add
enter
push
int
out
or
test
pushl
mov
pop
push
jge
aam
sbb
fistpl
outsl
jne
jne
jle
add
pushl
pop
dec
xchg
dec
and
out
push
fisubl
dec
jnp
xor
pop
ret
ror
cli
lahf
xchg
lock
in
sbb
rorb
outsl
cmp
cwtl
call
or
in
mov
mov
pop
jge
mov
test
jmp
mov
out
push
dec
andl
xchg
pop
icebp
jp
xchg
rcr
in
clc
out
clc
xchg
call
pop
push
imul
das
mov
addr16
clc
cs
push
js
imul
sbb
out
imul
xchg
or
decl
cmp
cmc
pop
ljmp
sbb
add
push
rol
push
cld
ljmp
and
mov
jbe
test
jne
test
repnz
xor
incl
jle
jo
leave
pop
xchg
popa
or
dec
xor
movsl
push
pop
into
sub
push
xchg
push
ljmp
ljmp
int
lret
push
and
lods
mov
adc
xchg
adc
sbb
pop
pop
dec
stc
jg
jns
ja
cld
fstps
stos
mov
inc
push
mov
xor
std
mov
mov
xor
ss
pop
jnp
popf
neg
sarb
hlt
and
add
dec
pop
out
or
jae
or
mov
mov
push
movsl
ss
out
sub
test
pop
cmp
sbb
inc
pop
fidivrl
sar
ljmp
push
pop
jp
js,pt
lcall
popf
mov
and
lcall
loopne
loop
add
inc
insl
icebp
cmp
xchg
popf
xlat
cmp
push
imul
xor
or
rol
mov
cmpsl
aas
and
inc
jp
in
mov
stos
ud0
pop
push
pop
lock
or
ds
ss
mov
jge
or
out
jmp
mov
test
loop
mov
or
mov
xor
push
ss
ljmp
lods
jle
mov
mov
loopne
aas
movsl
xor
test
sub
inc
stos
pop
jne
movsb
sbb
idiv
push
stc
daa
sub
jmp
pminsw
icebp
outsl
mov
mov
push
dec
loopne
mov
sub
and
push
clc
add
jg
ljmp
data16
push
pusha
jg
lock
pop
inc
xchg
cmc
bsf
outsl
jg
inc
std
lods
in
and
int3
sbb
and
sub
cli
jno
test
je
pusha
xchg
in
mov
jg
jmp
ss
jbe
jecxz
push
xor
movsb
scas
sub
sbb
sub
xchg
cmp
cli
inc
scas
and
add
dec
insb
jge
inc
mov
fwait
and
incl
fisttps
insl
mov
dec
pop
iret
sub
jecxz
fs
pop
ja
imul
add
jno
push
pop
test
out
out
dec
push
fucomi
pushf
mov
decl
and
or
and
jns
mov
lret
adc
les
jno
cld
test
dec
jbe
pop
xor
cmp
stc
mov
ljmp
jno
jle
in
cmpsb
push
int3
lods
inc
je
test
in
sub
pop
repz
pop
dec
mov
jg
call
cld
adc
ret
xchg
pop
fwait
stc
ret
sub
inc
js
icebp
or
mov
daa
ret
mov
mov
outsl
incl
icebp
pushl
sarl
loop
imul
repz
xor
mov
aaa
pop
sbb
fbstp
push
mov
sub
outsb
ficoms
sub
mov
outsl
enter
pop
cltd
push
outsl
lcall
std
dec
push
lock
rcrl
aad
sahf
xchg
cmp
clc
xor
stos
sub
stos
leave
cmc
fisttps
in
xchg
addr16
xchg
cmpsl
xor
dec
dec
dec
pop
call
sub
shr
pusha
in
scas
and
xchg
sbb
in
xor
fucomp
cmpsb
outsl
xchg
jnp
xor
scas
mov
push
enter
sbb
cmp
lcall
cmp
and
aaa
orl
out
cli
jmp
add
jecxz
lcall
jp
leavew
call
or
jg
xor
adc
stos
mov
jp
das
gs
sahf
scas
pushf
mov
in
mov
push
xor
out
dec
shl
shrb
jmp
and
and
cs
dec
push
mov
sbb
jg
call
in
and
pop
cmp
mov
pusha
push
sahf
dec
out
mov
pop
out
movsl
mov
decl
lock
mov
mov
inc
and
outsl
dec
xchg
adc
lock
and
add
ljmp
pop
mov
cmpsb
cmp
cmp
mov
popf
and
push
loopne
mov
lcall
imul
and
insb
xchg
sarb
aaa
push
jbe
shll
inc
stos
jecxz
repz
cmp
jmp
adc
jnp
push
and
and
jge
fstps
and
pop
add
and
aaa
xchg
pushl
les
sahf
mov
cmp
in
out
inc
in
or
mov
loop
pop
hlt
pushl
fbld
lods
xor
push
test
loopne
imulb
pop
pushl
or
mov
push
add
pusha
lods
cmc
int3
cmp
rcrb
je
and
jno
ljmp
into
lret
fmul
mov
imulb
stc
or
xor
pop
shlb
std
incl
inc
mov
jnp
push
push
jb
stc
insl
add
xchg
pushl
sub
mov
lds
call
lods
mov
int
dec
icebp
mov
pushf
dec
sbb
jb
loopne
loopne
jns
je
shrb
loop
and
add
dec
out
sahf
inc
movsb
mov
mov
popf
sbb
lods
call
pop
jp
adcl
lock
decl
lcall
mov
je
negb
fsubl
jbe
scas
in
sub
xlat
incl
dec
mov
ja
add
out
adc
inc
sbb
rorl
orl
mov
pop
mov
or
shlb
jne
jnp
out
xchg
icebp
xchg
scas
shl
jg
mov
out
mov
inc
push
pop
xchg
sub
stos
mov
movsb
cli
incl
and
xlat
imul
stos
sbbb
cltd
xchg
mov
adc
pop
icebp
call
mov
sbb
daa
leave
pop
stc
push
pop
jecxz
xor
inc
out
out
jbe
xor
decl
fidivl
call
test
push
or
jno
sbb
mov
shrb
sbbl
pop
cli
mov
fwait
mov
mov
cmpsl
xor
pushl
aas
sub
insb
sbb
idivb
sub
stos
jae
or
out
addl
mov
adc
lcall
xor
mov
push
jg
fidivs
mov
adc
shll
fstp
imul
sbb
sti
cmp
fstl
into
fnstenv
cwtl
rcrb
sarl
imul
decl
ret
lods
mov
stc
fwait
inc
idivb
jb
ds
into
and
push
jle
xor
mov
inc
add
pop
test
mov
or
add
fsubrp
hlt
inc
add
rcrl
in
icebp
fisubs
loope,pn
nop
mov
jbe
scas
cmpsl
sti
mov
jbe
ret
dec
das
sub
push
xchg
fisttpll
xor
je
daa
andps
jge
pop
repz
loope
or
js
dec
inc
and
aam
pop
sbb
xor
inc
sbb
pop
enter
mov
std
add
decl
adc
xor
xchg
fildl
sbb
xor
mov
pusha
addr16
nop
decl
add
test
cmp
xor
test
mov
call
pop
std
out
fsubr
or
adc
loop
mov
add
pop
cmpl
cmpsb
inc
cmpsb
daa
pusha
mov
or
sbb
mov
pushl
push
jecxz
sub
add
ljmp
shlb
lcall
xor
test
ja
mov
fdivp
add
incl
push
outsb
je
insl
add
lods
mov
sbb
addl
xor
mov
mov
orl
push
ds
mov
mov
dec
int3
cli
xchg
test
xchg
roll
push
ljmp
pop
fdivrl
loop
fisubl
push
and
adc
dec
lea
fcomip
pushl
out
addr16
fcomi
inc
xchg
inc
orl
sahf
and
cmp
mov
and
inc
sub
cmp
sbb
imul
mov
call
jge
mov
pop
inc
sub
jle
je
aad
lcall
bound
jnp
xchg
or
in
in
jle
dec
xchg
sub
push
enter
hlt
movsl
fildll
call
lcall
and
cmp
shrl
mov
mov
call
jno
lods
lret
cmp
inc
xchg
dec
pop
ret
mov
dec
js
jbe
out
ret
test
jge
int3
out
push
into
cwtl
js
dec
movsb
frstpm(287
loope
xor
jno
ret
pusha
in
gs
call
mov
add
and
adc
insl
ljmp
dec
fs
test
in
stc
adc
or
int
jno
sarb
pop
movsb
nop
mul
mov
xchg
jo
sti
push
jg
or
out
mov
xchg
push
in
call
movsb
xchg
das
scas
nop
push
push
imul
jmp
out
icebp
out
xchg
shufps
dec
and
test
add
inc
decb
aaa
pop
scas
dec
sbb
and
inc
bound
jge
or
jmp
divl
sub
test
in
ret
dec
or
dec
pop
movb
incl
jno
adc
add
adc
xchg
lods
icebp
cmpb
insb
call
imul
mov
cmp
dec
push
lods
mov
sbb
push
push
mov
pop
push
jecxz
cmp
jge
fisubrl
mov
sbb
daa
add
insl
mov
sub
mov
jmp
notl
cmc
sbb
mov
fbstp
inc
jbe
bound
inc
scas
rcrl
push
cmp
cmpsl
sub
les
xlat
sar
mov
repnz
outsl
in
orb
push
out
dec
sbb
push
fdecstp
pushl
fmuls
cmpsb
sub
cwtl
nop
xor
int3
js
inc
add
in
fisttpll
cwtl
aas
jmp
dec
adc
mov
xor
in
jbe
add
xchg
cs
aas
pop
or
pushf
mov
pushl
lcall
lods
adc
lods
and
aas
sbb
cltd
inc
in
mov
movsb
int
imul
mov
in
xchg
mov
pop
mov
mov
or
sbb
xchg
jae
es
int3
sbb
inc
mov
push
lea
call
jp
imul
push
push
xor
xchg
xlat
pop
mov
or
shlb
call
mov
je
rcrb
stos
mov
and
data16
iret
xor
sub
jmp
imul
mov
xor
jmp
enter
dec
inc
in
fldl
pop
cmp
and
adc
popf
test
and
mov
inc
pop
rcr
xchg
or
js
call
adc
lock
add
addr16
std
cmc
mov
cltd
scas
xchg
mov
cmp
aad
insl
sbb
das
dec
xchg
pop
ljmp
cmc
les
inc
cmp
cmp
jg
rclb
fwait
jmp
mov
iret
clc
ret
sbb
into
test
lcall
pop
lods
es
insb
clc
mov
adc
pop
inc
or
scas
test
dec
mov
out
mov
add
xor
fiadds
mov
movsl
jns
mov
xchg
ljmp
jno
and
mov
pop
fldl2e
mov
adc
sbb
pushl
daa
fildll
fst
add
push
jecxz
sbb
jp
dec
aad
push
ret
out
push
dec
outsl
or
jg
dec
xchg
dec
inc
mov
gs
or
pop
push
out
lret
mov
iret
push
or
cmp
mov
outsw
mov
sub
aaa
and
lcall
mov
insl
or
xor
ljmp
cltd
dec
out
icebp
cmc
mov
mov
loopne
clc
lahf
cltd
fmuls
divb
jle
stc
adc
inc
and
sti
and
stc
shl
rcr
mov
lds
lcall
inc
or
flds
je
pop
mov
in
divb
cld
jg
in
hlt
out
call
mov
or
push
jle
sub
stos
repz
pushl
scas
rcpps
scas
cmp
outsb
adc
sub
mov
daa
mov
jmp
push
sbb
cs
push
sbb
sbb
mov
shrb
jbe
dec
testl
repnz
lds
sub
mov
repnz
arpl
lret
clc
mov
sbb
cmp
call
adc
movb
movsl
or
xchg
cmpsb
mov
sub
jle
push
bound
mov
jae
push
adc
jno
ret
incl
cmp
push
add
out
mov
mov
dec
jmp
insl
jg
jmp
jmp
and
sahf
test
fstl
js
mov
push
pop
xchg
icebp
jmp
push
mov
lret
test
out
xor
call
nop
add
js
jmp
push
jbe
or
lcall
mov
fnstcw
cmp
sub
adc
add
outsl
int
shlb
sub
cmp
pop
jg
js
sbb
add
mov
cmp
inc
shl
jle
outsb
dec
dec
std
jmp
lods
into
sarl
add
enter
mov
iret
das
addl
insb
sub
or
pop
out
jg
sub
hlt
cmpsb
adc
icebp
or
sub
test
ljmp
mov
addl
dec
mov
inc
and
call
pop
cmc
clc
ljmp
cmp
sub
cs
jge
sarl
shll
pop
xchg
push
inc
pop
mov
sub
pop
lahf
add
cwtl
movsl
call
insl
cwtl
lock
je
ss
daa
push
iret
xchg
sbb
loope
fwait
and
jo
adc
xchg
ret
dec
pushl
sahf
cmp
das
jl
fisttpl
pusha
test
push
sub
lcall
xor
push
adc
movsl
pop
fsubr
push
sbb
and
or
pop
adc
lcall
add
cli
ljmp
popa
inc
push
sbb
lods
mov
cmpsb
gs
call
lret
mov
adc
dec
xor
xchg
loope
cli
mov
fdivrl
push
mov
pop
xor
xchg
adc
hlt
push
lret
mov
icebp
mov
loope
xor
ja
shlb
mov
cld
aaa
jl
ljmp
imull
addr16
lcall
or
mov
loope
aad
xchg
out
pop
pop
mov
sbbb
add
mov
mov
fldt
fwait
subl
stos
inc
xchg
cmc
push
push
push
fcom
mov
inc
lret
lcall
lcall
insb
fsubp
dec
xor
mov
lahf
mov
xor
push
and
mov
sub
rcll
iretw
cmp
xor
sbb
ljmp
xor
ja
or
jbe
sar
sub
mov
imul
push
inc
in
mov
sub
and
fidivrs
sub
pop
or
ds
jg
mov
mov
mov
adc
pop
cmp
cmp
outsl
stos
add
cmp
stc
xor
in
jmp
mov
jg
in
jle
dec
pop
or
pop
mov
ljmp
out
test
pop
loope
cmp
popf
out
mov
enter
mov
daa
ja
add
shl
adc
add
int
mov
call
lds
xchg
adcl
pop
xchg
xorl
aaa
out
mov
lcall
and
ret
cltd
int
lods
xor
loop
test
orl
and
outsl
xor
enter
mov
in
xchg
cltd
adc
stos
fisubrs
pop
xchg
pop
adc
out
or
jae
lret
xor
clc
gs
inc
inc
push
mov
jle
out
mov
ret
xchg
cmpb
test
push
incl
sbb
inc
cmpsb
adc
addb
outsl
cli
sub
and
das
and
andb
jp
cltd
inc
mov
lods
push
xchg
push
adc
push
sbb
rol
xor
adcl
andl
aad
sbbl
in
shll
pusha
xchg
ja
icebp
jecxz
pop
stos
leave
inc
leave
iret
mov
mov
add
out
xor
decl
lods
int3
inc
icebp
mov
je
loope
ljmp
sub
mov
mov
adc
in
rcl
lcall
inc
sbb
std
jb
cmp
jge
pop
out
les
mov
out
pop
test
mov
jmp
ret
in
sbb
cwtl
cmpsb
ficomps
push
cld
int
sahf
sub
incl
push
sahf
std
daa
adc
sub
aaa
shrb
je
repnz
pushl
mov
pop
sub
icebp
jno
sti
fldcw
xchg
pop
sub
dec
out
clc
pushl
outsb
cmpsb
in
inc
xchg
jb
pop
popf
dec
mov
add
cmp
jo
jp
loop
push
dec
in
mov
stos
mov
insb
pop
inc
add
ljmp
or
mov
lock
xchg
add
fisubl
adc
ljmp
xchg
push
jns
call
shl
orb
or
xchg
push
sbb
insl
call
std
fimull
mov
cltd
xchg
je
mov
push
pusha
push
jmp
mov
int
fstp
scas
in
sub
mulb
and
dec
xchg
mov
pop
jl
cmp
dec
lock
into
test
cmp
loopne
movsb
or
ljmp
shl
and
iret
dec
jge
call
and
je
lret
mov
or
test
out
clc
jmp
cmp
lahf
test
adc
lock
imul
adc
out
fistpll
cmp
lahf
dec
add
shll
adc
inc
pop
mov
scas
mov
call
out
imul
aaa
pop
pop
addr16
or
incl
iret
lods
test
adc
inc
adc
imul
xor
xchg
add
test
lcall
jmp
not
lods
adc
pop
psrlw
ficoml
jae
cwtl
mov
daa
mov
add
mov
pop
dec
ror
mov
inc
push
repnz
rorl
cmp
push
ljmp
xor
push
test
sti
and
adc
pop
mov
pusha
xchg
dec
fsubrl
rcll
testb
rorl
loope
fistpll
test
mov
je
inc
sbb
shl
lods
jo
or
mov
xorl
push
sbb
rorb
sahf
outsb
lgs
mov
call
jecxz
shl
cs
adc
cmp
rcl
xor
xlat
xchg
call
xchg
jno
ljmp
mov
xor
push
aad
imul
mov
push
outsb
and
dec
sar
jnp
inc
mov
rorl
arpl
inc
ds
mov
decl
add
sarb
push
rcrl
in
jecxz
dec
and
sahf
fs
cmp
push
mov
lahf
fcomi
jb
sbbb
mov
fbstp
loopne
jne
cld
js
call
daa
push
pop
add
fs
enter
inc
jl
jle
inc
adc
jecxz
pop
add
clc
hlt
imul
ss
pop
jbe
jne
jmp
or
add
jg
jge
xchg
out
out
pop
pop
add
jge
inc
movsb
mov
and
out
pushf
xchg
cmc
jns
mov
mov
lret
fisttpll
dec
dec
pop
in
mov
fisubrl
pop
and
lcall
clc
cs
imul
pop
mov
mov
xchg
mov
pop
pop
dec
lea
xorl
mov
push
insl
sub
cmpsl
inc
adc
mov
sub
cmp
lds
mov
insl
and
lds
add
adc
cmp
call
insb
stos
sbb
lret
or
and
fildll
add
xchg
jmp
cmp
leave
je
sbb
xchg
shll
mov
jl
pop
mov
cmpsl
nop
ss
pop
push
sahf
imul
fadds
std
in
add
lods
lock
ljmp
xchg
in
movsb
daa
jae
cmp
xrelease
inc
adc
or
cld
pop
ja
ror
rolb
stos
in
andb
and
js
xor
loopne
add
les
mov
sub
call
sbb
jecxz
add
mov
pop
push
or
sub
lea
std
lcall
and
mov
or
dec
pop
dec
stos
sub
xor
lcall
imul
std
mov
ds
pop
add
decl
leave
in
dec
bound
mov
insb
in
adc
xor
movsl
dec
into
adc
das
cli
stos
pop
mov
and
pop
push
xchg
outsb
call
mov
addr16
mov
xor
mov
fs
fcomi
in
dec
mov
jmp
lock
cmp
lret
mov
xlat
add
xlat
push
in
mov
rorb
cmpsl
pop
call
pop
xchg
add
test
repz
fs
lret
pop
call
add
scas
ljmp
pop
cmp
push
jl
pop
adc
cmp
loopne
aam
sahf
xlat
dec
hlt
cmp
movsb
int
ljmp
mov
pop
je
and
je
push
xchg
dec
push
and
icebp
xor
incl
inc
pushf
movsb
mov
leave
mov
cli
shlb
push
pop
sbb
mov
sbb
call
xchg
into
cld
repz
aaa
inc
hlt
movsl
jne
inc
mov
mov
pop
xchg
gs
enter
testb
decl
fistps
or
mov
jno
aad
or
loop
sbb
inc
pop
stos
fcomps
jge
cwtl
les
xchg
arpl
sub
jmp
xor
rorl
xor
cmpsb
push
ret
and
mov
lods
dec
and
jge
das
clc
ljmp
pop
and
xor
pop
test
out
pusha
xchg
lret
clc
std
ljmp
cli
adc
dec
sub
cltd
push
repnz
xor
push
dec
sub
call
cmp
mov
or
scas
punpcklwd
mov
nop
outsl
je
or
incl
aas
adc
push
mov
add
inc
push
mov
fcmovbe
xchg
lcall
ljmp
mov
push
stc
pop
sahf
cmp
test
nop
dec
and
sub
mov
push
xchg
inc
arpl
aam
scas
jp
outsl
mov
pop
add
call
ss
mov
mov
fdivrs
jbe
push
les
popf
subb
loopne
xor
arpl
xor
jg
lcall
clc
add
sbbl
das
jns
cmp
cwtl
aad
popa
or
jmp
imul
cli
xchg
push
mov
add
add
out
jbe
dec
nop
subl
out
std
fwait
pop
push
fsubr
inc
lcall
jl
sbb
pop
mov
and
inc
dec
mov
dec
jp
das
call
ja
jmp
in
faddl
ret
xchg
xor
xchg
icebp
adc
out
sti
sbb
xor
cmpsb
icebp
aaa
pop
jmp
bnd
loop
dec
cmp
xchg
inc
cmc
push
repz
mov
pop
std
ljmp
inc
jae
sti
cmp
test
cs
or
cmp
incl
cld
int
xchg
outsb
jbe
pushf
icebp
insl
loop
iret
call
insl
pop
inc
push
movsl
mov
dec
decl
mov
outsl
stc
mov
imul
sahf
repnz
mov
mov
js
das
in
add
jbe
stos
jle
xchg
test
ljmp
arpl
clc
lahf
and
mov
es
aas
lods
xchg
cmp
and
mov
loop
mov
sub
mov
mov
xchg
rol
jg
adc
push
idivl
cmp
jns
mov
ror
xchg
inc
xor
rcr
incl
mov
jg
rclb
int3
cmp
jne
add
addr16
or
xor
not
shrl
lea
decl
dec
push
xchg
mov
push
jmp
out
xor
cs
fcomip
adc
cld
outsl
cmpsb
repnz
xchg
mov
subb
out
and
mulb
sub
call
and
mov
dec
push
testl
xlat
mov
xchg
shl
mov
jge
adc
mov
mov
mov
loopne
dec
pop
dec
mov
push
cmpl
mov
dec
inc
pop
sar
jo
cmc
gs
mov
dec
push
sbb
cmpl
xchg
adc
imul
cmp
jmp
cld
pushf
out
xchg
cs
lret
add
sbb
mov
lock
cmp
repz
jg
lock
movsl
data16
fwait
in
pop
lea
lods
enter
mov
push
cld
out
cli
aas
xor
sbb
mov
sub
fimull
jg
or
fildll
aam
nop
scas
xchg
push
call
test
pop
push
daa
out
fdivrp
test
jecxz
mov
dec
pushf
cmp
push
inc
loope
mov
jmp
jle
hlt
subl
push
fisttpl
scas
jo
xchg
das
insl
shll
adc
jmp
fsubrp
cmpsb
rol
jg
ds
xor
cli
mov
jge
jae
outsb
mov
das
lods
loop
add
decl
arpl
hlt
push
mov
mov
ja
push
cmp
out
test
aaa
and
jnp
cld
ljmp
mov
or
xor
sbb
pop
ljmp
stos
mov
mov
hlt
push
test
popf
je
mov
xchg
int
inc
cmp
xchg
add
push
sbb
fwait
lcall
mov
jbe
nop
cltd
jmp
cmp
aad
inc
data16
testb
cmp
imul
jmp
popf
push
hlt
cmpsl
xor
or
lea
xchg
mov
cs
jo
arpl
pop
adc
ljmp
test
fldenv
pop
imul
lds
repnz
in
jbe
mov
inc
push
fs
add
cld
add
pusha
filds
inc
jns
or
cmp
pop
bound
cld
dec
jmp
gs
loope
lahf
dec
and
cld
lock
sub
and
decl
mov
jmp
fiaddl
mov
clc
lret
cltd
push
out
fwait
idivb
adc
lcall
jbe
dec
mov
mov
mull
aad
mov
dec
out
in
dec
pop
je
lods
mov
fimull
inc
and
push
in
sbb
std
das
sar
pop
lret
xor
jbe
ja
mov
cmpsb
lock
pop
push
push
mov
pushl
int
test
insb
cld
test
popf
mov
in
and
fwait
adc
push
inc
in
or
fiadds
rolb
aaa
xchg
int3
sub
and
test
stos
fcos
mov
clc
ficomps
xchg
test
ljmp
push
loope
shlb
call
jg
pop
push
cmovp
aas
inc
mov
add
test
xchg
lock
lcall
cli
aaa
push
cmpsb
or
subb
sub
pop
push
xor
decl
push
mov
pop
xchg
xlat
lods
jne
mov
loopne
mov
dec
mov
adc
dec
in
testb
cld
mov
aas
lahf
outsb
fs
and
sub
xchg
das
sub
fistpl
pop
xchg
mov
add
decl
jecxz
popl
rcrb
aaa
pusha
sbb
out
sub
cmpsl
cmp
mov
leave
dec
adc
ds
inc
outsb
std
repnz
push
cmp
inc
pop
leave
and
xor
jne
outsb
es
or
je
add
mov
adc
into
aam
out
mov
aam
push
in
inc
sub
add
decl
xchg
push
pop
pop
lods
clc
jmp
cmp
fmul
mov
pop
and
fldl
xchg
jmp
sub
fsin
mov
imul
inc
repz
roll
xlat
jg
mov
jnp
push
es
jg
into
not
cltd
jle
ljmp
fwait
idiv
or
test
or
or
xlat
or
push
icebp
int
int3
cli
sub
mov
inc
inc
mov
jg
test
cmp
mov
fmul
ljmp
out
js
pop
mov
decl
jmp
outsl
ds
cs
arpl
lcall
ffree
inc
inc
pushl
mov
sbb
and
ss
lds
or
dec
xor
mov
pushl
cld
rol
dec
push
call
pop
pop
or
shlb
jno
add
pop
jmp
pushl
jne
lods
fnsave
jmp
inc
gs
dec
mov
ret
daa
xchg
xchg
sub
into
ficoml
call
dec
repz
in
loope
pop
push
or
inc
dec
and
cmp
cmp
mov
ja
ja
cwtl
inc
inc
cpuid
repnz
dec
sub
incl
fwait
sbb
insl
aas
pop
mov
mov
outsl
jo
icebp
lods
fsubs
subl
incl
push
sbb
lods
imul
enter
stos
es
leave
jbe
sub
imul
xchg
out
shl
ja
jge
jmp
xor
fstps
jae
xorb
std
rcrb
ljmp
ret
imulb
or
data16
cmpsb
add
fwait
cmp
addr16
ljmp
pop
dec
cld
push
test
stc
and
xchg
ja
pop
sbb
call
shlb
push
jg
xchg
mov
icebp
sbb
jns
test
test
pushl
cli
outsb
mov
cs
inc
jb
cmp
mov
out
sahf
out
dec
xchg
orl
pusha
sbb
call
add
icebp
inc
into
push
add
decl
iret
xchg
idivl
orl
xchg
imul
mov
dec
and
mov
inc
xor
xchg
inc
inc
mov
int
iret
lret
test
pop
xchg
aas
mov
or
fbstp
divb
out
cmc
fstp
scas
mov
dec
ja
jae
inc
aaa
xchg
jg
xchg
aas
dec
and
shrb
and
sti
sub
fistps
fdivrp
mov
fistps
mov
pop
push
int
and
aas
out
fisubrl
jp
push
xchg
fbstp
push
in
test
nop
xor
jp
flds
mov
into
sahf
xchg
push
mov
cvtps2pi
and
adc
enter
ljmp
dec
movsl
daa
pop
cld
ret
rclb
or
insb
sub
lret
jle
and
pop
imul
enter
sbb
lcall
scas
sbb
js
decl
cmp
add
jecxz
push
and
js
decl
lock
fwait
mov
enter
mov
out
lds
loop
lock
adc
call
and
jne
sbb
cmpsl
lret
lock
rol
sub
outsb
ret
out
inc
or
ljmp
push
inc
xchg
nop
sbb
pushf
frstor
mov
and
or
or
pusha
les
data16
jg
icebp
scas
imul
mulb
pusha
out
iret
xchg
das
fidivl
je
sar
add
call
jo
fldt
iret
outsb
xchg
jl
out
xor
mov
loopne
aas
dec
in
out
clc
incl
mov
jmp
and
and
fld
int
inc
es
lods
inc
decl
sbb
jno
jp
test
flds
lea
popa
adc
pop
sbb
cli
decl
push
addb
inc
lods
mov
xchg
lea
cli
popa
movsl
adc
jnp
inc
pop
stc
push
fstl
xor
cmp
adc
and
ss
mov
cmp
les
incl
andb
inc
add
mov
pop
and
rcr
mov
dec
movsb
jmp
dec
xchg
cs
jae
popaw
call
xor
add
insl
xor
mov
add
push
jnp
incl
dec
cmp
shrb
icebp
mov
fs
xchg
out
mov
ret
ljmp
fisubl
cmp
stos
outsb
push
jno
popf
pop
mov
jnp
dec
in
icebp
scas
mov
jg
jle
lcall
mov
push
inc
hlt
wbinvd
push
dec
lods
push
setb
jmp
fildll
mov
test
cmp
imul
icebp
hlt
mov
mov
pushl
std
mov
mov
fcoml
inc
adc
fwait
pop
test
loope
mov
ss
push
jns
leave
lcall
dec
lcall
or
fbld
inc
incl
pop
ficompl
call
adc
push
xor
cmp
sbb
incl
inc
lods
cli
sbb
sti
call
notb
outsl
mov
loop
xchg
jg
roll
hlt
mov
and
xor
dec
data16
ja
sti
dec
ss
sbb
test
ljmp
or
aad
adc
and
popa
mov
add
mov
xchg
js
ret
call
mov
mov
aam
lods
or
lea
gs
out
mov
pushl
std
or
lcall
pop
or
pop
pop
aad
mov
adc
icebp
jg
add
in
xchg
cmpl
cmpsl
push
jns
push
push
lcall
jo
loopne
add
repz
mov
andl
sti
inc
lcall
jmp
rcr
insl
xchg
xor
inc
mov
js
stos
stc
push
leave
xchg
rolb
add
pop
or
faddl
fucomi
pop
iret
jge
pop
lock
xchg
add
ljmp
ficoml
push
adc
fwait
push
pusha
testl
jge
dec
sahf
or
jle
aam
cmp
jg
inc
cld
xor
cld
dec
mov
mov
call
lods
mov
pop
fldenv
or
inc
inc
push
insl
jb
or
daa
mov
jno
in
stos
sarb
mov
lahf
and
xor
mov
jbe
clc
xor
imul
add
xchg
mov
aas
pop
mov
bound
and
pop
hlt
cmp
or
xlat
loopne
test
dec
xchg
mov
cmp
jmp
ret
cltd
lahf
xor
xor
repz
scas
inc
sub
js
cwtl
fs
pusha
out
incl
sbb
in
mov
mov
lret
pop
or
mov
lret
add
movsl
pop
mov
jmp
xlat
movsb
je
inc
mov
cwtl
jle
sub
pop
jno
adc
mov
call
les
fadds
lods
iret
icebp
es
adc
adc
es
xor
cmpsb
jb
sar
incl
jae
call
sbb
pushl
fdivs
aaa
add
xchg
jo
xchg
sbb
cmp
mov
cmpsl
jp
sub
rcr
shrl
inc
inc
adc
es
sbb
sub
sti
push
out
rclb
dec
test
movsb
loopne
sarl
xor
pop
rcll
sbb
scas
lcall
test
imul
pop
pop
iret
js
shlb
movsb
lret
adc
adc
jmp
clc
loopne
pop
mov
repz
push
bound
fstpl
jne
std
stc
daa
sbb
enter
pop
pop
cmp
adc
push
adc
dec
std
dec
addr16
pushl
or
inc
push
ret
inc
sarb
push
inc
shrb
es
cld
cmpsb
xchg
sub
jnp
mov
sbb
rcrl
and
aaa
add
out
outsb
xor
decl
add
ror
add
jge
in
push
jg
adc
imul
popa
sub
out
jb
insb
faddl
sbb
pop
lock
push
add
dec
stos
and
std
xor
out
mov
sub
sbb
push
pop
out
push
sub
shrb
push
add
cli
out
cli
call
pop
int
mov
je
addr16
or
push
xchg
add
mov
dec
es
dec
ret
sbb
inc
mov
rcrl
xchg
shll
xor
icebp
dec
mov
xor
pop
in
push
stos
ret
dec
push
pushl
and
cmp
mov
lret
jge
mov
pushf
jg
xchg
loopne
hlt
out
and
les
or
push
jb
movsl
adc
inc
inc
push
inc
and
xor
and
pop
dec
sub
add
mov
push
adc
pushf
ja
xchg
dec
nop
jmp
inc
sahf
ds
pop
push
fidivrs
push
sub
push
decl
daa
jge
enter
movsb
sti
jle
mull
sub
sbb
jmp
in
test
in
adc
in
and
pop
rcrb
cmp
shlb
in
dec
fcmovb
repz
dec
call
ljmp
xchg
outsb
lahf
pushf
and
inc
push
out
daa
push
ret
or
cli
mov
inc
mov
cmp
ret
rolb
adc
hlt
fisubs
cmp
fiadds
adc
sbb
ds
add
into
enter
pop
in
fs
push
dec
test
decl
cmp
idiv
dec
call
cmp
and
xchg
movsb
cwtl
mov
or
aas
adc
bound
stos
xchg
enter
push
jecxz
int
and
movl
scas
clc
push
pushf
fcompl
xchg
es
cmc
enter
pop
aaa
hlt
mov
incl
cmc
in
cmp
pmaddwd
adc
mov
sub
mov
fwait
cmp
imul
jbe
out
add
push
jecxz
in
cmc
push
mov
lcall
jecxz,pn
ljmp
dec
scas
cmpsl
lock
xchg
ret
dec
mov
dec
mov
inc
sbb
test
and
std
jnp
dec
cmp
mov
mov
mov
fisubrs
add
jmp
outsl
orl
pop
and
xchg
xor
xor
mov
es
mov
jmp
shlb
ja
inc
xorl
jnp
mov
adc
pop
je
adc
and
push
push
cli
fistpl
rorb
jne
xchg
lods
nop
xchg
fcompl
ljmp
arpl
jge
ss
lret
js
adc
addl
mov
fldcw
adc
jmp
add
pop
imul
fbstp
xor
sub
push
repnz
xchg
inc
icebp
xchg
out
jge
pushl
test
test
fidivrs
out
sub
mov
imul
call
xchg
xchg
cmp
pop
push
call
imulb
xlat
sub
xor
pop
aaa
aad
movsl
fs
or
mov
sub
pop
clc
xor
add
icebp
mov
test
push
ljmp
ljmp
sahf
and
inc
nop
lea
stos
dec
jp
test
out
mov
pusha
cmp
arpl
movsb
xchg
cld
and
scas
jo
shll
scas
shr
in
sbb
lea
jg
dec
in
insb
mov
into
push
in
mov
call
mov
fisttpll
push
jbe
out
sub
negl
arpl
decl
or
bnd
mov
cmp
out
mov
inc
movsb
xor
rol
ds
push
test
pushl
and
push
aam
out
inc
js
pop
dec
in
mov
sbb
xchg
mov
imul
jl
dec
push
decb
movsb
test
ja,pn
add
ljmp
out
xchg
ret
cmp
pop
and
inc
repnz
shr
fistpll
lcall
bound
lret
adc
loope
push
jle
xchg
add
test
jno
fisttpll
stos
inc
repnz
jle
add
call
inc
loop
out
in
mov
sbb
mov
lcall
int3
mov
pusha
jp
jns
pop
in
push
jp
mov
or
or
push
sbbb
sub
into
shll
hlt
jle
sbb
nop
add
jnp
mov
cmp
sahf
cwtl
add
add
add
push
call
xor
push
test
imul
pop
sbb
fcmovbe
push
sub
jg
jo
jbe
mov
sbb
jle
iret
lock
and
mov
sub
jle
sbbb
jne
sub
and
pushl
mov
sbb
movsb
xor
or
das
sbb
iret
dec
mov
cmp
pop
in
cmp
pop
inc
jmp
pusha
pushf
ret
nop
enter
repnz
inc
outsb
popl
inc
jle
jnp
pop
inc
es
pop
leave
ffreep
pop
xor
push
ja
cmp
sbb
add
jmp
sbb
jmp
int3
dec
adc
lcall
mov
adc
push
lods
or
loopne
lcall
je
adc
in
test
mov
inc
push
jnp
pushl
addr16
aaa
movsl
mov
jnp
mov
div
psubsw
decl
and
pop
incb
dec
je
sahf
das
aaa
adcl
in
sar
jge
xchg
js
mov
mov
das
xlat
out
jecxz
cmpsl
int
cs
enter
lods
xchg
sahf
decl
adc
in
nop
clc
call
pushf
adc
sbb
les
push
cmp
incl
roll
lock
cmp
pop
inc
fdiv
and
cmpsb
call
aad
call
push
in
sahf
lcall
loopne
jp
cmp
xchg
jbe
dec
aaa
cld
dec
push
xor
aad
int
mov
scas
push
test
negb
stos
ja
mov
test
jnp
push
loop
dec
mov
sub
in
xchg
movsb
sbb
pop
mov
sbb
popa
popa
imul
mov
fwait
jne
and
popf
inc
sti
push
dec
pop
pushf
leave
or
stos
push
jp
cltd
pop
push
std
jmp
sbb
cmp
xor
xchg
arpl
adc
adc
ljmp
fcomi
out
int3
stos
dec
mov
xchg
mov
fs
lock
decl
decb
pop
leave
lret
stc
ffree
adc
fsubrl
and
push
scas
jg
out
mov
mov
lds
xor
jns
mov
inc
or
mov
jo
ror
outsl
adc
das
cld
aas
inc
ret
fwait
call
bound
test
decb
cmp
mov
int3
in
cmp
xchg
jbe
fs
dec
fdivrp
ljmp
push
les
adcl
adc
subl
jmp
mov
mov
dec
jl
mov
and
or
aaa
push
cmp
imul
inc
push
bound
subl
xchg
mov
icebp
sub
loopne
mov
dec
jp
int
jmp
jp
pop
sbb
negb
loope
push
xor
and
inc
fwait
inc
lcall
decl
adc
cmpsb
mov
dec
and
mov
jns
nop
jne
pop
test
lcall
sub
xor
ss
push
inc
sbb
xchg
xchg
pusha
and
sar
call
push
test
sbb
inc
adc
mov
outsb
mov
push
pop
lods
std
mov
fidivl
fists
and
dec
dec
jnp
fwait
jns
call
aad
pop
dec
stos
mov
mov
mov
ja
xor
push
pop
fdivs
fsubrs
push
loop
test
inc
xchg
icebp
lret
xor
daa
test
notb
or
lods
insb
mov
mov
xor
in
stc
aam
adc
idiv
lcall
mov
mov
mov
rcrb
pop
pop
test
add
out
xor
call
gs
mov
sub
enter
ret
jne
pop
jecxz
sbb
adc
stos
in
arpl
fdivr
mov
mov
sub
popa
and
push
test
ljmp
decl
movsl
lret
loopne
pop
and
addr16
shl
pop
jmp
adc
sub
stos
push
fdivr
stos
dec
push
inc
jae
push
cwtl
movq
rcr
push
pop
mov
fsts
jg
mov
or
adcl
pusha
add
pop
cli
mov
pop
cmovg
adc
adc
rclb
mov
std
sub
roll
cmp
jg
shrb
sub
insl
mov
aaa
rol
aaa
pop
loopne
scas
jg
incl
daa
icebp
push
mov
sub
lret
adcl
nop
test
cmp
mov
das
xchg
stos
imul
jbe
sub
push
mov
sarl
push
lcall
cli
daa
pop
push
mov
and
out
inc
xchg
push
and
loope
dec
mov
std
xchg
outsb
stc
and
pop
pop
daa
out
cmp
clc
inc
movl
mov
ret
cmp
pop
sbb
ds
and
ljmp
jl
cmpsb
fs
sub
push
sub
data16
or
inc
xchg
sahf
or
xor
and
mov
cmp
add
or
mov
push
fildll
out
and
jno
pop
or
pop
push
push
fstpt
je
cmp
sub
cmp
cld
pushl
cmpsl
imul
or
or
or
fs
pop
cltd
xchg
aad
and
decb
hlt
fiaddl
pushf
dec
outsb
das
ret
mov
orb
pop
or
push
lret
mov
nop
push
xor
xchg
push
sbb
ljmp
push
pop
fdivrl
and
jmp
and
fiadds
jg
pop
call
jl
mov
and
dec
outsb
mov
frstor
dec
push
mov
push
cmp
mov
jg
pop
xor
push
jae
shlb
mov
cld
adc
adc
cmp
cli
sbb
xchg
lds
repnz
in
inc
lret
push
pushl
test
das
inc
and
popa
filds
pushf
addr16
leave
xor
ret
pop
call
icebp
xor
xchg
test
fdivr
js
das
pushf
pushf
pop
stos
in
das
push
mov
dec
xor
cmp
mov
scas
adc
test
xchg
das
sub
sbb
cmp
pop
loope
rcl
jmp
mov
mov
dec
cmc
ljmp
or
dec
adc
orb
pushf
xchg
jge
addb
xor
incb
adc
sub
sub
imul
pop
mov
jmp
dec
mov
cmp
cld
cmpsl
fcoms
lock
sbb
filds
xor
xor
aam
arpl
insb
xchg
clc
inc
lods
fdivrp
xchg
ficoms
roll
jmp
xchg
iret
push
shlb
jo
sub
dec
sbbb
rolb
mov
loope
add
into
pop
adc
and
push
mov
inc
aas
leave
adc
xor
stos
addr16
nop
lcall
or
mov
dec
sahf
lods
loope
jno
inc
push
adc
aad
sbb
adc
ds
frstor
jmp
insb
xchg
cmp
mov
xchg
mov
cmp
enter
pop
clc
or
pop
pusha
inc
outsb
addr16
jg
lcall
adc
pop
xlat
lret
or
pop
movsl
push
sbb
jnp
add
ja
ret
lds
ret
fldl
push
and
mov
call
mov
mov
imul
fsubrl
pop
bound
sti
insl
idivl
dec
pushl
fbstp
pushf
movsb
lret
or
pop
and
dec
cmp
inc
mov
or
pop
scas
dec
sbb
mov
shlb
mov
sti
mov
ljmp
or
mov
push
mov
call
adc
xchg
out
cwtl
jmp
sbb
sti
xchg
inc
and
xchg
movsl
adc
or
jmp
dec
call
dec
cmp
inc
jns
sub
cmp
int
les
movsb
sbb
mov
icebp
call
sub
push
neg
or
push
add
insb
in
mov
adc
iret
cli
mov
movsb
mov
sbb
sbb
xor
dec
incl
push
subb
and
sbb
mov
arpl
aas
adc
mov
cmp
mov
out
xchg
xchg
int
andl
test
mov
jp
pushl
cld
lcall
dec
clc
jmp
cmp
mov
pushf
lcall
xor
adc
pop
add
ss
sub
push
ljmp
ss
call
cmpsb
adc
xchg
dec
mov
int
sbb
adc
push
or
sub
dec
cmp
lcall
add
push
mov
ret
mov
in
cmp
addr16
daa
mov
popa
sar
jae
repz
sub
push
sbb
cmp
jg
orb
jmp
lods
pop
subb
hlt
jno
je
clc
sbb
xchg
loopne
aad
pop
imull
adc
mov
sub
pop
add
iret
cmp
mov
sbb
xchg
rolb
int
pushf
leave
mov
push
das
pop
sbb
loop
daa
js
out
in
adcl
gs
push
inc
adc
inc
mov
in
fisttps
sti
and
inc
adc
push
xorl
push
in
insl
fwait
mov
inc
outsb
and
jp
push
fstps
jb
push
mov
xlat
jb
mov
scas
cli
jg
mov
mov
xchg
cltd
mov
or
decl
aad
icebp
out
popa
xchg
loopne
fisubrl
rcrl
dec
mov
movsl
xlat
mov
xchg
incl
mov
gs
test
inc
inc
insb
lret
push
mov
xchg
xor
gs
fistpll
stc
lds
in
mov
data16
data16
pop
xchg
pop
xor
jl
in
lods
popf
adc
std
pushl
rorl
jno
mov
push
cmpsl
add
adc
jo
and
pop
loopne
jmp
popa
xlat
adc
xchg
aam
pushf
es
out
cmpsb
adc
inc
push
inc
add
shll
add
xor
sti
js
subb
mov
and
pop
leave
add
sub
jmpw
int3
mov
cmp
pop
add
ljmp
int3
fmulp
pusha
mov
push
inc
xchg
lcall
repz
adc
shlb
sbb
ud0
das
and
into
jl
adc
and
in
xor
mov
decl
repnz
dec
cmpsl
push
mov
movsb
jmp
nop
or
in
pop
add
mov
cwtl
or
aam
idiv
mov
ret
pop
repz
adc
mov
lcall
and
jo
sbb
dec
pop
xchg
jns
push
int3
xor
imull
adc
outsb
mov
jmp
adc
push
sub
repnz
xchg
and
cmpsl
lcall
xor
mov
and
mov
push
cmc
loope
imul
in
sar
mov
xor
mov
or
aad
or
push
out
sub
rcr
movl
icebp
cli
bound
mov
std
call
pop
mov
aas
jne
jne
mov
test
pop
ljmp
dec
jb
mov
incl
push
mov
pop
fstpt
mov
pusha
rcl
dec
cmpsb
mov
lcall
gs
imul
js
dec
aaa
sub
rcrl
incl
faddl
in
dec
cmp
cmp
pop
out
inc
out
test
fcmovnu
gs
call
decb
into
popf
sti
pop
and
inc
addr16
add
movsb
cmp
ljmp
dec
subb
dec
and
xorl
pushl
push
loopne
cwtl
and
and
fmuls
pop
inc
inc
adc
fucom
leave
and
sarb
push
xchg
roll
fucomp
sahf
and
repz
jg
cwtl
out
xchg
mov
clc
or
pop
int3
mov
pop
cmp
xor
enter
sub
mov
or
add
outsb
xchg
ss
lods
or
cmpsb
in
sbb
dec
sahf
ret
cltd
xchg
pop
mov
pushl
xor
adc
jnp
arpl
or
fld
call
xor
and
mov
mov
lods
out
inc
insb
mov
in
mov
jo
push
out
xchg
scas
cmc
cwtl
data16
inc
mov
or
mov
cltd
sti
push
dec
fstl
testl
push
test
aam
outsl
ljmp
movd
jl
mov
sbb
cltd
dec
adc
fsubrp
push
sbb
out
ret
mov
jmp
sbb
lret
out
cmp
push
xor
repnz
jo
loope
jmp
and
pop
or
xlat
popf
enter
xchg
hlt
popa
int3
in
fsubrs
adc
negb
dec
cmp
das
mov
add
push
jp
jns
jb
arpl
xchg
push
aad
call
aad
pushf
fnstsw
pusha
pop
xchg
loope
jl
ss
rorb
cmp
insb
pushf
imul
push
xor
xor
sbb
mov
sti
nop
xor
push
aas
cmc
jmp
sbb
pop
nop
jo
insl
out
xchg
mov
ffree
sbb
fists
push
mov
or
push
filds
mov
mov
pusha
jno
xchg
adc
incl
cs
jno,pt
scas
pop
cli
aad
jbe
pop
lods
cli
jo
jno
pop
repz
sbb
mov
mov
dec
cmp
inc
std
pushl
out
loop
xchg
or
mov
sub
push
mov
shll
or
jmp
rcrb
cltd
movsl
push
sub
push
mov
pusha
inc
popf
add
cli
pushl
sub
and
mov
pop
dec
mov
jmp
into
mov
add
std
ljmp
roll
nop
xchg
pop
cmpsl
fwait
popf
dec
in
mov
sbb
sbb
aaa
and
into
iret
sbb
test
sbb
mov
xor
popl
xor
js
std
jg
notb
mov
mov
gs
push
fs
loope
imul
add
pushl
iret
in
inc
adc
pop
roll
pop
cs
pop
xchg
mov
xchg
test
mov
cmp
lret
sbb
stos
notl
xorl
sbbb
lods
pop
fstps
mov
daa
jb
add
pop
xchg
cmp
sti
stos
mov
push
cmp
ja
cmp
fstpt
cs
outsl
cmpsl
loop
sub
fisttpll
repnz
ljmp
test
mov
xchg
add
jmp
pushf
jbe
sti
sub
decl
pop
movsb
inc
aad
sbb
push
xor
pop
in
lret
xor
decb
xchg
imul
dec
lret
pop
push
ficoml
decl
push
stos
in
xor
sahf
xor
mov
mov
ret
xchg
andb
test
out
insl
mov
subl
xchg
rcl
and
push
push
xor
mov
in
push
popf
and
sub
lock
lds
jne
sbbl
jmp
frstor
mov
notl
outsb
cmp
or
aas
adc
fstps
mov
sbb
xor
fs
hlt
gs
ja
sbb
jnp
sti
test
jmp
incl
aas
in
push
jge
dec
gs
loop
mov
aad
mov
or
loope
mov
pushl
adc
in
mov
inc
ja
dec
xchg
aas
je
sbb
into
inc
ds
call
push
push
pop
mov
xor
push
mov
loope
or
sub
cwtl
rclb
mov
cmp
lcall
out
lds
and
outsb
and
in
mov
clc
pushl
jo
hlt
adc
mov
loopne
xor
lcall
sbb
cld
sbb
mov
pop
jecxz
adc
add
ficoms
adc
pop
insl
or
xchg
cli
lcall
arpl
nop
in
inc
mov
push
mov
imul
cmp
movsb
and
inc
xor
popa
xchg
mov
ljmp
aad
shll
cmpsb
cld
int
dec
adc
popf
cmpb
cmovp
gs
stc
test
sbb
addl
sub
sbb
nop
fadds
cld
out
decl
and
addr16
jbe
adc
ja
jle
jo
dec
dec
stos
fcoml
stos
test
das
call
jo
cmpsb
xor
movsb
jle
dec
cs
mov
adc
es
dec
sarl
in
ljmp
jmp
add
fnstcw
xchg
mov
in
inc
sbb
pop
lret
xor
clc
inc
ljmp
add
int
mov
cmp
xchg
sub
insb
shrl
sbb
mov
inc
es
daa
jle
adc
das
aam
add
lods
mov
push
pop
pop
pushl
test
stos
pop
sbbl
and
mov
dec
or
jmp
dec
adc
mov
notb
or
and
pushf
out
lcall
xchg
ljmp
cltd
mov
stos
sub
call
test
aad
mov
rorl
int
push
inc
add
pop
test
xor
call
mov
outsb
cltd
nop
push
popa
fmul
mov
push
in
xchg
outsb
cmp
adc
jo
lods
jae
fbld
pop
pop
xchg
leave
add
inc
push
cs
add
mov
fcomip
fnstsw
xor
cld
xor
mov
scas
add
jbe
inc
popa
dec
sub
add
inc
xchg
pop
outsb
sbb
jne
push
jmp
lcall
lea
xlat
pop
insl
sahf
inc
fadds
or
xchg
repz
jg
das
aas
aaa
dec
xor
cli
pop
or
fsubs
mov
sub
std
std
push
sbb
dec
jae
cmp
cmp
push
push
ljmp
jecxz
call
cmp
fistpl
repnz
adc
or
sbb
stos
pop
popa
outsb
mov
scas
stos
insl
loopne
out
sbb
sahf
or
scas
mov
cmp
cmp
lea
sub
xor
jns
lret
outsl
shr
or
daa
popf
or
loopne
cmp
fwait
mov
or
jg
sbb
xor
bswap
mov
adc
mov
cmp
pop
adc
xchg
cmc
jp
bound
outsl
dec
aas
js
ljmp
cmp
dec
sahf
lods
dec
adc
hlt
fistps
pop
xchg
sub
fwait
mov
shll
ljmp
cmp
sub
xchg
ret
push
push
cmc
jg
loopne
js
push
cmp
lahf
cmp
adc
andl
mov
gs
decl
mov
incl
stos
push
int
fisubs
jp
in
mov
adc
cmp
lret
cmp
push
out
or
jb
jb
pop
sbb
mov
pushf
dec
cli
into
fs
data16
jg
dec
lds
mov
fcom
xchg
fists
enter
sub
stos
fld
adc
decl
sbb
div
addl
into
push
scas
pop
pusha
mov
sub
sub
ljmp
pop
xchg
ficoml
shrb
dec
stos
hlt
push
mov
and
stos
lock
call
xchg
fisubs
jae
push
mov
pop
dec
fcmovnb
shl
jne
add
aad
mov
outsl
xor
ficompl
pop
push
and
mov
pop
xor
pop
lcall
xlat
dec
outsl
mov
or
inc
jecxz
cwtl
dec
out
bound
mov
arpl
sub
scas
jne
sbb
out
xchg
mov
sbb
in
push
decl
dec
mov
inc
add
pop
pop
test
adc
call
mov
fstpl
test
mov
sbb
and
and
mov
mov
je
ljmp
clc
jmp
addr16
jo
sahf
push
inc
dec
int3
ljmp
push
fcmovnu
lahf
ret
fwait
cmc
jmp
dec
popf
fs
vmovddup
and
daa
dec
lock
out
jmp
jnp
jle
xor
pop
dec
js
sahf
scas
fwait
lods
jl
ret
fs
sub
imul
outsl
pop
into
dec
push
sahf
ljmp
inc
test
push
jnp
mov
sub
lods
inc
and
pop
stos
mov
adc
sub
gs
add
incl
pushf
shll
cld
aam
divb
out
push
xchg
jge
incl
sbb
shlb
inc
dec
fdivs
cmp
xor
lcall
std
call
cltd
into
sbb
mov
cs
outsl
xor
inc
jo
lods
orb
jg
mov
mov
stos
fst
sti
in
test
xchg
pop
rorl
decl
xchg
imul
imulb
add
scas
mov
or
add
sub
test
fisubrl
test
mov
stos
roll
or
xor
insl
mov
incl
sub
imul
call
adcl
xchg
repnz
cmp
sub
popa
addr16
jb
ljmp
mov
mov
push
push
data16
mov
clc
daa
lods
sub
fcos
pushl
add
insl
movsb
xor
cmc
or
sahf
jp
or
sbb
aas
test
insl
mov
jecxz
insb
outsb
lret
xor
sbb
and
lods
decl
cmp
cs
test
sub
pop
lods
cltd
aam
cmp
das
movd
and
sbb
out
lods
sub
stc
gs
mov
jne
jp
repnz
push
incl
js
movsb
adc
and
mov
or
push
das
mov
je
xchg
adc
mov
dec
rclb
pushl
sub
xchg
test
jno
cmpsb
aam
out
pshufw
sti
xchg
xchg
out
out
dec
fdivp
cli
lods
push
jmp
jle
mov
cs
cs
jb
sbb
jmp
jg
incl
mov
push
and
pop
sahf
push
inc
fbld
jmp
mov
pop
mov
lret
adc
loope
pop
cli
jmp
pop
lods
pop
ljmp
std
mov
cltd
pop
mov
icebp
cmp
je
std
rcrl
lock
push
sbb
inc
not
jp
stc
cltd
lea
rolb
dec
stc
xor
cmp
cwtl
push
ljmp
sbb
mov
inc
push
das
xor
cmp
push
pop
pushf
lcall
hlt
jl
inc
ja
xchg
loope
sbb
add
stos
gs
lahf
cmpsl
xchg
push
scas
push
imulb
mov
inc
pop
xor
scas
xchg
pushf
fwait
dec
scas
je
insb
aam
jmp
pop
lods
clc
mov
inc
mov
cmp
cld
je
pop
jbe
xchg
dec
int
adc
lcall
bound
imul
leave
jecxz
cmc
loope
lret
hlt
fs
push
addl
outsb
das
push
inc
aad
test
sub
cltd
fwait
repnz
mov
pop
fs
ror
xlat
addr16
xchg
adc
aas
pop
pop
out
imul
xor
ds
scas
fcomip
call
ss
fadds
mov
lcall
bound
scas
xor
add
lret
insl
add
inc
and
push
aas
lock
fbld
xchg
aaa
rclb
jl
loopne
mov
lcall
pop
fisubrl
mov
pushf
inc
scas
lock
insl
cld
popl
and
and
insl
pop
test
inc
xchg
shll
lock
push
mov
xchg
push
into
push
mov
add
jecxz
pop
and
stos
dec
jmp
jmp
imulb
dec
imul
cmp
es
fmuls
xchg
dec
dec
notl
or
or
aam
pop
cmc
mov
mov
lcall
cli
mov
loope
xchg
xchg
sti
imul
xor
jp
ds
xor
xchg
mov
xlat
jmp
call
mov
call
jp
inc
mov
clc
adc
jmp
xchg
fidivrl
pop
cmc
xchg
cltd
xchg
mov
mov
int3
cmpsl
or
jg
pop
call
sub
mov
mov
and
xchg
jmp
roll
mov
pop
inc
cmp
stos
mov
inc
cs
mov
ds
pop
pop
adc
pop
fidivrl
mov
mov
xor
ljmp
mov
lds
xor
jmp
das
mov
jp
hlt
ds
filds
dec
das
sbb
adc
ljmp
or
mov
lcall
jmp
cmpsb
mov
xor
pop
jmp
and
push
mov
pushl
xchg
push
adc
add
imul
mov
test
and
pop
push
imul
pop
ljmp
pop
fs
in
jb
pushf
push
fs
pusha
push
or
fstpt
movsl
pop
and
or
mov
out
xchg
in
rcl
test
inc
push
inc
enter
lcall
mov
arpl
repz
push
xlat
mov
mov
xor
cmpsb
mov
push
jns
gs
movsl
sbb
push
cld
jecxz
push
ja
xchg
je
xchg
call
adc
adc
jb
lds
or
out
inc
mov
leave
dec
cmpsl
push
mov
jmp
sbb
push
xchg
adc
fstl
cwtl
jmp
cli
mov
sbb
ljmp
mov
ljmp
iret
std
shl
shr
cs
jbe
jl
cmp
cld
mov
xchg
dec
mov
scas
repnz
jecxz
push
rcl
xorl
fmull
and
aad
sub
outsb
lret
imulb
int3
pop
decl
sar
sub
add
sbb
pop
bound
xor
movsb
sarb
add
jp
call
mov
int
jo
push
jp
inc
in
cmp
xchg
inc
jno
lahf
nop
jp
stos
in
sub
jmp
movsb
mov
test
setne
test
adc
icebp
push
mov
sti
jne
mov
mov
stos
sub
and
loopne
stc
lods
data16
inc
fs
lcall
decl
jp
push
add
push
icebp
inc
xchg
xor
cmpsb
jmp
subl
push
mov
scas
imul
jmp
xor
add
push
pop
inc
xchg
bound
sbb
int3
pop
adc
cld
cltd
ljmp
dec
mov
jns
outsl
fistpl
lret
enter
movsb
xchg
and
loop
call
mov
pop
pop
push
loop
pop
test
dec
xchg
xor
pop
repnz
imulb
cmc
std
fcomip
decl
pusha
pop
jne
inc
repnz
mov
clc
xchg
test
jle
mov
push
pushf
outsl
fdivr
mov
aad
aas
repz
adc
xchg
out
jne
sbb
das
dec
inc
cli
js
push
fists
jmp
fistpl
jecxz
lahf
pop
jns
ror
hlt
out
flds
cmp
cmpsl
sub
out
vpsrld
je
xchg
std
loop
cwtl
lods
xor
pop
xchg
popf
fcomip
jl
xchg
mov
jmp
inc
in
mov
js
das
adc
and
mov
adc
inc
mov
push
shl
dec
decl
sahf
out
stos
pop
xchg
insl
xor
mov
cmp
repz
pop
mov
lcall
cmpsl
add
cmp
fwait
pop
dec
scas
fisttpl
jnp
sub
aam
ja
mov
in
ficomps
fs
into
jns
in
push
test
ret
int
mov
pop
loopne
ret
mov
sbb
xlat
add
mov
or
in
subl
in
xchg
jnp
mov
dec
xor
add
jbe
ljmp
jnp
shrl
and
mov
sbb
outsb
mov
decl
cs
adc
mov
xor
ljmp
in
cmp
lcall
pop
and
jnp
ja
cmpsl
std
xor
mov
dec
push
mov
pop
jecxz
clc
pushl
and
mov
cmp
or
and
push
sub
outsb
stc
in
ljmp
lret
mov
adc
lcall
and
test
lret
push
ljmp
dec
push
repnz
jecxz
xor
add
loope
int
movsb
pop
sbb
or
ljmp
shrb
cmpsl
or
sbb
xor
inc
es
jmp
cmpsl
sbb
popa
and
iret
popf
push
add
out
rolb
mov
xor
pop
pop
mov
lcall
and
pop
xchg
or
loop
les
orl
jo
inc
adc
pop
cmc
stos
jne
imul
addr16
jae
add
jle
inc
fisttps
mov
ret
cmc
push
lock
incl
gs
xchg
adc
std
inc
jmp
clc
mov
js
push
jae
push
inc
sti
lcall
ljmp
ja
mov
push
inc
notb
call
inc
lcall
push
movsl
dec
jae
cmp
sub
add
daa
fbld
decl
mov
xor
sbb
sbb
lret
xchg
inc
fwait
xchg
adc
pop
sub
cmp
lcall
loopne
arpl
fcmovnbe
push
imul
pusha
orb
adc
scas
and
clc
into
test
incl
out
sub
push
mov
lret
dec
es
ljmp
out
ret
push
sbb
or
adc
jns
fmulp
jmp
and
pop
bound
mov
lds
add
inc
jle
je
cmp
lcall
pop
mov
dec
inc
sbb
inc
gs
dec
in
pop
ficoms
loopne
or
sub
pushf
inc
sarb
adc
lcall
push
cmp
dec
jmp
xchg
int
pop
lea
mov
lret
incl
mov
cmp
pop
sub
and
mov
lds
jmp
jmp
ljmp
xor
push
sub
xchg
mov
int3
or
lods
pop
out
jo
mov
outsb
cs
xor
add
hlt
out
clc
lcall
in
push
pop
lds
int3
ljmp
loope
fistps
pop
fldt
xor
pop
imul
mov
fwait
mov
jecxz
and
mov
js
ret
fldcw
iret
sti
subb
pop
add
xchg
jge
push
push
inc
loop
or
mov
pop
std
sbb
fistl
jnp
pop
jbe
adc
nop
outsb
inc
cmp
imul
jl
sbb
pop
pop
adc
aas
rcl
aas
cmp
mov
rorb
inc
and
lock
push
popf
push
add
jbe
loop
cld
call
mov
add
or
mov
fs
and
adc
aaa
incl
movsb
xchg
push
sbb
mov
imul
call
loope
push
cld
test
lcall
loop
xchg
mov
pop
orb
jl,pt
jne
xor
jns
jnp
insl
mov
incl
pop
cmpsl
pop
mov
popa
lret
rcll
cmp
imul
inc
adc
dec
arpl
dec
lea
repnz
addl
jg
pusha
jns
icebp
jbe
sbb
cs
gs
jl
lcall
jmp
or
shll
repz
xchg
inc
nop
aad
popa
in
pop
hlt
psubd
faddl
ljmp
lock
gs
loop
int
lock
nop
xor
stc
jno
out
daa
fildl
ljmp
mov
call
inc
aaa
add
dec
aam
jnp
dec
lods
and
outsl
mov
ljmp
fmulp
pusha
cmpsb
mov
add
imul
popf
jo
subb
stos
jbe
sbbl
ljmp
mov
push
or
sub
ja
outsb
mov
dec
lret
dec
clc
dec
sbb
dec
sub
cmpsb
rcrb
xchg
sti
xor
pushl
inc
and
add
cmp
ss
testb
fistpll
decl
dec
push
shrb
pop
or
pop
xor
push
push
pop
mov
cld
dec
lcall
imul
adc
sub
pop
icebp
inc
call
clc
push
iret
or
orl
dec
dec
push
in
outsb
jns
jbe
pop
inc
stc
pop
jmp
jae
and
sbb
rclb
call
mov
or
jne
addr16
xchg
mov
xorl
cmpsb
ljmp
pushf
jo
sbb
fdivs
cmc
fildll
add
movsl
mov
cld
inc
idivb
nop
fstps
jmp
xor
sbb
scas
xchg
out
dec
loop
dec
pop
jle
inc
arpl
out
mov
js
push
and
pop
mov
sar
incl
mov
mov
cmp
xchg
iret
adc
mov
xlat
xlat
jo
inc
loopne
add
xchg
inc
pusha
scas
fisubs
sarl
fwait
out
pop
jns
lods
pop
psrlq
add
rorb
stc
sahf
push
insb
call
cmpsl
sub
shl
or
push
fimuls
sbb
adc
push
jne
cmpl
cmp
notb
fdivrl
add
gs
rclb
icebp
xor
mov
push
mov
mov
sbbb
or
jp
adc
ljmp
fwait
pushf
lea
cmp
insl
lahf
and
into
je
push
icebp
cmp
pop
and
sbb
cmp
or
aas
xchg
stc
add
hlt
call
sti
out
ret
cmp
enter
sbb
lahf
sbb
test
aaa
xor
fwait
pop
xchg
fstpt
out
push
sbb
adc
es
and
xor
fs
stos
or
and
jbe
mov
sbb
xor
fcomip
popa
mov
movsb
gs
aad
lods
jae
mov
addl
jae
jne
mov
jg
mov
pusha
aas
lahf
iret
loop
outsl
jle
scas
ljmp
mov
decl
xchg
push
xchg
outsl
xchg
dec
ljmp
jne
mov
call
lahf
push
sbb
dec
and
and
or
hlt
out
cmc
xor
inc
stos
jns
or
movsb
ss
movsb
jl
das
mov
jg
mov
push
xchg
and
cltd
adc
dec
adc
jmp
sti
add
add
push
rcll
pop
shlb
jg
cli
adc
xor
popf
adc
sub
pop
xor
popl
aam
incl
xor
or
mov
movsb
scas
aas
pop
mov
rcll
pop
bound
sub
call
pop
shll
pop
stos
fstps
xor
jo
push
push
mov
in
es
push
aam
imul
int3
push
in
insl
ror
int3
out
icebp
aaa
lret
sub
scas
je
rclb
sub
test
pop
jge
es
ficompl
lods
pop
jge
call
cmpb
shlb
stc
cmp
or
adc
mov
test
inc
cmp
mov
js
stos
popa
rcrl
mov
test
jg
cmp
jmp
pop
jge
jmp
sbb
movsl
and
and
ficoms
pushl
fldcw
sbb
and
pop
xor
sahf
ret
les
jmp
cmp
mov
mov
pop
cmp
pop
pop
xchg
test
adc
rcrl
mov
mov
je
in
cmp
int
mov
adc
xchg
clc
inc
clc
test
cld
std
repnz
cwtl
mov
in
pushl
movsl
xor
xor
aas
pop
push
or
add
sbb
xorl
nop
adc
push
mov
inc
cli
jl
es
xchg
scas
scas
pop
fdivrs
mov
jp
ret
cltd
jnp
mov
pop
in
mov
dec
jge
xchg
push
nop
in
inc
out
clc
mov
movsl
mov
dec
dec
mov
mov
add
mov
in
xchg
popf
lds
lcall
adc
call
pushf
jb
test
daa
cltd
shlb
scas
stc
call
mov
dec
push
jno
mov
xchg
or
and
stc
xchg
mov
data16
or
dec
nop
sti
xchg
fs
fucom
scas
leave
loopne
aas
leave
push
xor
add
dec
lahf
xchg
xor
fs
repnz
mov
push
subb
stos
mov
pop
ljmp
ljmp
sbb
insl
icebp
ffree
push
scas
cmp
xchg
shlb
ds
jmp
xchg
pop
sub
rol
adc
aam
mov
mov
cmc
test
mov
mov
mov
inc
out
mov
jbe
or
lcall
add
jae
mov
xor
lret
jmp
jae
sub
es
xchg
mov
xchg
aad
std
mov
lock
fldl
ss
in
xlat
fidivs
inc
cmp
mov
jno
lahf
decl
ret
or
aas
movsl
sub
mov
std
mov
xrelease
lcall
dec
insb
mov
push
mov
gs
push
push
aam
daa
loope
fldl
insl
roll
call
cmp
adc
add
xchg
and
xor
jecxz
dec
call
call
mov
loop
aad
adc
push
filds
sbb
enter
or
jmp
or
cmc
mov
outsb
jae
push
adc
jmp
mov
mov
or
lcall
mov
push
out
fdivl
je
xchg
jmp
push
pop
imul
inc
and
test
ud0
push
cmp
repz
mov
cmpsb
mov
xor
push
aaa
sub
cld
mov
adc
xor
adc
xlat
push
pop
push
cmp
ljmp
mov
mov
addr16
mov
ds
incb
test
stos
dec
popf
add
pop
lret
cmc
inc
xchg
sbb
mov
dec
jle
push
jmp
lcall
pop
cs
loope
lcall
in
sbb
int
outsl
jns
aad
mov
decl
jle
and
jbe
xor
std
pop
xor
add
xor
cmc
push
loopne
cmpb
sar
call
add
and
sbb
pop
mov
xor
mov
mov
mov
iret
jg
and
lcall
jbe
gs
mov
jno
jge
or
xlat
es
ljmp
xor
rolb
cmp
cmp
fcomi
stc
ret
cmp
ljmp
in
sbb
mov
adc
aaa
fldl
inc
adc
sbb
out
cwtl
sbb
pushl
xchg
pushf
pop
sub
add
js
fstl
push
jle
fwait
mov
jo
out
push
lcall
jmp
cwtl
fcmovne
fadds
dec
mov
jle
popf
cli
jecxz
idivl
and
cmpsl
sub
add
loopne
jl
pushl
push
ja
jbe
inc
pushf
cltd
cmpb
jae,pt
lods
test
popf
xchg
stos
xchg
jg
pop
push
sar
movsl
pop
bound
scas
push
movsb
push
add
je
ds
loop
nop
iret
call
sub
lea
xchg
or
outsl
mov
out
sbb
or
test
fsubs
cwtl
out
inc
pop
pop
cmp
push
cmp
mov
jge
xor
xchg
lock
sub
enter
lcall
in
mov
jle
push
in
push
push
and
mov
or
pop
notl
addr16
incl
arpl
lds
mov
or
mov
mov
adc
push
lods
out
or
decl
fwait
outsl
xchg
pop
jp
mov
dec
sahf
pop
pop
mov
lcall
jae
lret
sbb
mov
inc
jbe
push
and
xchg
xchg
jmp
scas
jmp
mov
fdivs
jne
cmp
xlat
dec
aaa
test
inc
pop
push
imul
add
xchg
xchg
std
out
xor
push
cmp
int3
lret
ds
add
inc
sub
push
lea
push
mov
js
push
jns
dec
cmc
lcall
jmp
xchg
xchg
movsb
xchg
inc
clc
mov
lahf
inc
jl
mov
jmp
and
push
pop
sbb
repnz
xchg
xchg
imul
in
stos
lret
push
pop
cli
jg
mov
pop
cli
or
jge
push
xchg
pop
ja
ljmp
ljmp
popa
insb
dec
scas
jae
outsl
ljmp
in
scas
popf
xor
std
jmp
xlat
dec
pextrw
jns
mov
mov
mov
movsb
clc
sbb
les
sarb
or
mov
jo
arpl
sbb
lcall
mov
adc
enter
jle
test
loopne
imulb
aas
iret
or
decl
scas
add
xchg
xor
jno
sbb
push
inc
jnp
push
jecxz
cmp
cli
pushl
fists
mov
pop
mov
test
loopne
decl
leave
cmp
push
in
out
in
cmp
mov
idivl
jle
imul
into
dec
ds
mov
cltd
sub
and
pop
add
add
imul
sub
or
cmp
jne
adc
mov
jbe
pop
mov
div
sbb
lods
xchg
dec
cmp
lds
or
incl
data16
ljmp
rorl
xor
jecxz
inc
sarl
movsl
cmp
mov
ss
mov
stos
push
outsl
test
mov
push
xor
fldcw
mov
sbb
mov
jle
sub
cs
cmc
movsb
push
cmp
cs
inc
popf
dec
call
in
jmp
mov
test
sub
out
push
xlat
sbb
pusha
pop
xor
mov
aas
lods
mov
call
pushf
mov
and
xor
sti
and
lret
mov
pop
hlt
fcmovnbe
pop
pop
xchg
dec
xchg
and
dec
pop
insb
pop
mov
xchg
cmpsb
ja
cmp
jmp
int
add
imull
push
pusha
push
and
lcall
cltd
adc
loop
mov
sub
sahf
cmp
arpl
loope
mov
jnp
insb
mov
out
xchg
das
and
add
xchg
add
out
add
mov
push
lods
stos
mov
cld
push
lret
mov
loopne
push
out
push
sub
shll
xor
repnz
lcall
mov
dec
pop
push
or
lcall
es
dec
insl
dec
call
cmpsl
call
xchg
pushf
loop
inc
mov
incl
mov
dec
daa
shlb
pushf
jns
jle
cwtl
push
pop
mov
mov
mov
call
mov
sarb
xchg
loope
dec
pop
sti
pushl
mov
mov
mov
aad
sub
mov
sbb
sbb
gs
jle
mov
xor
xchg
xor
jne
dec
pushl
cwtl
popf
loope
cmp
ljmp
inc
xchg
push
out
int
xchg
test
cmpl
aaa
push
mov
jmp
dec
and
cmp
sbb
fcomip
stc
add
mov
fistl
cli
pop
lds
push
mov
ljmp
decl
mov
cmp
imul
and
mov
aam
inc
sub
xchg
mov
mov
sbb
mov
ja
mov
fildl
sub
lcall
fsubp
lods
test
pushf
in
sbb
mov
and
mov
xchg
es
adc
out
and
cmp
cmp
leave
aad
movsl
inc
jg
fs
cltd
sub
rolb
jns
and
cmp
ret
and
pop
push
jae
mov
mov
jg
js
fstpl
test
das
cld
shlb
pop
mov
jg
jmp
sbb
decl
or
stc
push
and
push
lahf
xor
pushl
pop
insb
and
mov
jmp
jecxz
mov
bound
inc
and
cwtl
xchg
das
mov
incl
int3
push
dec
movsl
cltd
or
jo
and
jl
fsts
pusha
mov
jmp
sbb
lcall
pusha
or
mov
lock
xor
pop
pushl
cltd
gs
and
jp
movsb
in
shll
jecxz
jmp
cmp
add
cwtl
daa
or
push
dec
pop
pushf
adc
sub
or
adc
imul
mov
cmp
mov
rcrb
incl
sub
lock
sti
and
or
mov
jp
add
lods
lcall
sbb
shlb
jge
fwait
push
sarl
fwait
out
shll
mov
jmp
repz
adc
test
push
cld
lcall
aaa
mov
ljmp
into
xorl
push
sbb
inc
loopne
xchg
ljmp
cltd
ljmp
dec
cmpsl
adc
cld
pop
xor
ret
jle
mov
shlb
mov
ljmp
repz
mov
cmp
enter
jecxz
jmp
xor
dec
adc
int
imul
das
jg
call
xchg
in
loope
test
jg
xor
mov
cli
rcrl
push
sbb
pop
outsb
cld
out
loope
sbb
fs
mov
imul
mov
sub
scas
pop
imul
lcall
ljmp
in
jno
fisubs
lret
inc
dec
fdivrp
test
rorl
incl
cld
ljmp
gs
or
mov
push
push
es
adc
fcomip
cmpsb
mov
pop
repz
jbe
clc
cltd
enter
jg
out
clc
fisttpll
add
mov
scas
lahf
jbe
mov
inc
pushl
sub
imul
call
hlt
mov
out
cmp
call
cmpsb
adc
shll
orb
mov
mov
inc
test
fcmove
test
inc
jg
jmp
scas
adc
add
sub
pop
mov
sub
in
pop
pop
dec
cli
pushl
mov
push
jp
shll
cld
jae
and
aas
inc
mov
outsl
cli
pushl
or
mov
mov
mov
loope
cmp
loopne
xor
sarl
mov
mov
cmp
mov
push
lock
or
mov
cmp
call
rcrb
in
pop
inc
jg
xchg
xchg
ja
mov
pop
icebp
pop
mov
lock
call
sti
mov
fstl
sub
adc
dec
aaa
inc
mov
mov
lcall
clc
mov
jmp
push
ss
jnp
daa
leave
or
cmp
mov
push
add
in
das
jmp
lds
sub
jmp
adc
incl
inc
sbb
or
adc
fisubs
jo
std
push
cld
inc
fisubrs
les
lock
insl
cmpsb
sbb
repnz
pushl
stc
adc
fcmovnbe
shll
test
push
rorl
pop
xchg
lock
ds
movsb
inc
and
incb
data16
jns
cmp
fwait
insb
inc
mov
fnstcw
fs
sbb
daa
je
jg
jmp
mov
inc
xchg
and
out
rcrb
imul
loop
lock
jne
jmp
mov
fnstcw
mov
mov
ljmp
inc
mov
inc
mov
ljmp
lods
cmp
jmp
loope
and
jae
clc
scas
add
add
xlat
jmp
outsb
cli
les
mov
cli
das
cmp
cld
mov
test
and
mov
arpl
andb
sub
add
xchg
xchg
incl
subl
pop
cltd
icebp
inc
jmp
sahf
pop
jmp
les
lock
decl
adc
fs
in
xchg
arpl
test
imul
ret
pop
fstl
mov
push
jmp
pop
cmc
and
mov
lea
dec
mov
es
dec
xor
jecxz
decl
shrb
adc
sbb
cmpb
dec
cmp
cmpsb
rcrl
add
cli
into
pop
cmp
xor
jmp
push
adc
and
xchg
rolb
dec
jo
inc
pop
jne
sbb
ljmp
sahf
xor
call
out
es
or
aam
aad
mov
sub
ds
incl
and
jns
inc
mov
fstl
push
xor
sahf
or
addr16
fisttpll
idivb
jnp
or
loope
mov
clc
pop
loopne
mov
or
pop
adc
jle
decl
mov
mov
and
sbb
in
push
jg
jle
orl
faddl
pop
push
sbb
mov
dec
jl
mov
mov
push
out
dec
ljmp
mov
xchg
lret
mov
cmp
ljmp
dec
sub
pop
jnp
inc
pop
dec
jns
loop
into
pop
mov
std
cmpsl
jae
cmp
jo
jg
in
or
sbb
and
inc
lea
push
test
push
sub
stc
pop
roll
cmp
gs
dec
aam
cmpl
pushf
fdivr
adc
into
cwtl
pop
gs
inc
adc
clc
push
or
rcrl
adc
nop
cs
nop
xchg
test
mov
xchg
or
mov
dec
push
mov
sbbb
ljmp
cmp
mov
arpl
fidivrs
decl
aad
adcl
add
mov
jmp
mov
mov
jo
mov
les
dec
test
and
mov
repnz
ljmp
mov
push
mov
cmp
pop
sub
shrb
xchg
decl
call
sub
mov
popf
pop
cmp
jg
push
mov
pop
fmul
jl
mov
test
decl
pop
lods
jae
and
fisttpl
adc
int
pop
mov
dec
mov
iret
jp
aaa
jecxz
cmp
mov
in
lock
popa
and
mov
sbb
call
push
lcall
and
cmpsl
push
and
add
inc
adc
and
jg
cmp
mov
pop
add
sbb
mov
shlb
out
shlb
loop
pop
push
xor
xor
adc
xor
add
lock
out
stos
mov
out
aad
jbe
mov
dec
adc
cwtl
dec
inc
into
inc
punpckhdq
sub
shrl
mov
sub
mov
push
jno
lds
iret
rcrb
lcall
lea
mov
popf
jg
lahf
movl
hlt
push
jnp
jecxz
jmp
jae
ljmp
xchg
xor
repz
and
cmp
cmpsl
in
out
bnd
cltd
pop
mov
pushl
push
fsubrp
out
imul
adcb
insl
mov
cld
lcall
cmp
adc
lods
test
inc
cmpb
push
xor
lret
adc
int
pushl
adc
outsl
jnp
ds
jmp
sub
xchg
aad
push
roll
loop
pop
xor
scas
jo
popf
sahf
into
and
and
cwtl
and
in
scas
out
pushl
or
and
and
scas
mov
xor
pop
roll
jae
sub
in
jmp
sbb
lret
sbb
clc
jns
fimuls
adc
test
stos
cs
push
cld
movsb
xor
push
decl
fcomip
adc
repz
les
pop
imul
xor
loop
adc
and
je
ljmp
data16
mov
sub
push
add
rcr
in
lret
hlt
decl
jns
cmpsb
jg
sbbl
mov
js
xchg
pusha
xor
cmp
out
pop
scas
add
mov
xacquire
mov
mov
inc
xchg
aad
cs
inc
popf
pop
call
mov
mov
mov
popa
jle
imul
inc
xor
xchg
jb
cli
lahf
mov
ljmp
loope
dec
lods
and
aas
fcmovu
lret
and
test
sbb
xor
cli
lcall
sti
mov
xchg
aas
mov
sbb
add
jg
cmc
scas
xchg
das
dec
shrb
call
mov
aas
add
pusha
lods
ret
movsb
push
nop
add
push
add
daa
xchg
dec
xor
or
insb
add
mov
jmp
jecxz
lret
xor
jns
jle
sahf
add
fwait
push
mov
aad
sbb
push
lcall
sar
and
cwtl
stc
sbb
and
decl
add
stos
in
pop
and
lods
es
jnp
pop
xchg
or
cld
pushl
sahf
loope
inc
leave
inc
mov
xchg
mov
add
xlat
sar
push
cltd
incl
int3
aaa
dec
xchg
imul
jnp
add
popa
leave
pop
lret
in
adc
adc
push
into
or
mov
jp
mov
cmp
push
stos
es
lds
push
mov
inc
inc
div
mov
and
cmpsl
enter
out
fs
data16
incl
xchg
test
adcb
inc
jmp
push
add
decl
sahf
enter
ds
pushl
lcall
mov
push
cmpb
hlt
clc
movb
push
lds
dec
jbe
pop
pop
xor
fwait
mov
xor
sti
out
sub
jnp
icebp
lcall
iret
clc
lahf
sbb
adc
and
mov
dec
popf
mov
ljmp
sub
icebp
test
dec
jmp
pushf
iret
xor
xchg
and
and
sub
mov
sahf
bound
nop
iret
inc
arpl
aad
jmp
sub
push
push
xchg
xlat
pop
and
out
inc
push
jge
xchg
add
sub
in
outsb
xchg
adc
incl
inc
xchg
jecxz
cli
std
lea
lea
in
incl
aad
xchg
push
xchg
inc
aam
lahf
adc
mov
jnp
push
jbe
jge
ret
aad
cmp
push
mov
adc
cmovne
dec
or
cli
add
outsb
mov
adc
xor
ljmp
clc
sbb
mov
addr16
sub
mov
dec
aam
adc
or
incl
cmp
loopne
push
hlt
arpl
pop
dec
cld
add
rcrl
mov
lcall
mov
mov
push
xor
test
sbb
sbb
decl
out
hlt
imul
les
outsb
push
xchg
sbb
je
jns
jne
jne
jno
decl
ss
dec
xchg
sbb
jg,pt
jle
mov
sub
ja
dec
js
and
ds
repnz
mov
and
jp
adc
pop
jbe
mov
lcall
and
outsl
loopne
popf
mov
movsl
repnz
jg
je
mov
das
cmp
inc
scas
jecxz
repz
inc
sbb
ss
add
sbb
jg
add
lock
and
enter
mov
maxps
sbb
loope
loope,pt
and
adc
pop
xor
mov
jg
or
jne
scas
or
imul
stos
insl
pusha
std
dec
pop
cld
jg
sbbl
cmp
mov
decl
or
dec
and
aaa
out
push
or
lea
mov
jg
mov
mov
adc
fisubrl
add
cmpsl
popa
adc
dec
dec
ljmp
outsl
rol
add
add
pop
into
adc
push
ljmp
push
and
add
mov
fcmovnu
dec
subb
out
test
sbb
xchg
das
cli
ljmp
pop
mov
cmpsb
nop
xor
and
insb
test
loop
stos
push
test
dec
push
push
rcll
icebp
orb
mov
outsb
aam
cltd
adc
dec
inc
xchg
divl
test
lock
incl
push
fwait
or
jmp
mov
out
lock
incl
mov
dec
mov
xchg
and
xor
pushl
adc
adc
inc
ret
imul
mov
jle
sub
mov
lock
cmp
pop
pop
xorl
xchg
cmpsb
mulb
clc
or
in
mov
fdivrp
mov
xchg
and
repz
fcomip
jo
filds
cs
inc
sbb
or
xchg
cmp
adc
data16
dec
cld
aas
xlat
or
add
dec
out
ss
in
pushl
sbb
pop
shrl
inc
repz
push
xchg
dec
sbb
push
xchg
adcb
stc
inc
or
mov
test
mov
sbb
pushf
lret
scas
inc
push
jp
sbb
jnp
loope
incl
cld
jmp
push
mov
push
lret
cmp
hlt
xchg
push
push
mov
incl
push
push
ror
jmp
and
daa
mov
xchg
mov
adc
lahf
adcb
lea
lret
jmp
gs
xor
or
out
testl
mov
icebp
pop
sar
decl
sub
cmp
adc
sub
rol
leave
xor
xchg
incl
sbb
out
xor
loope
xor
ret
xchg
cli
call
les
jg
xchg
dec
or
mov
dec
mov
incl
mov
mov
xchg
jg
sbb
std
imul
out
pop
pop
xchg
pushf
stc
dec
jae
in
inc
nop
fnsave
popf
sbb
pop
sarl
ds
decl
and
xchg
mov
outsb
jmp
adc
jo
cmpsb
subl
addr16
lfs
xchg
sub
incl
adc
mov
and
xchg
and
decl
in
pop
sbb
shlb
aas
dec
movsb
xor
popa
mov
mov
mov
decl
int3
xor
inc
outsl
nop
hlt
cmpsb
pop
xorb
adc
push
cmp
dec
push
and
push
ret
or
sbb
pushf
fnsave
push
fcompl
fisttpll
add
inc
sub
mov
bnd
out
inc
rcll
cmp
push
inc
cs
repz
mov
and
cmp
sub
and
xchg
syscall
aam
inc
shrl
push
inc
es
cmpsb
shll
in
or
call
cmp
push
mov
xchg
xchg
inc
insl
fmulp
outsb
iret
rcll
fsubl
sar
cmp
dec
popf
mov
mov
pop
mov
loopne
ljmp
inc
jbe
dec
jo
out
xor
sub
add
push
xor
shll
lods
icebp
inc
call
adc
add
repnz
push
push
mov
subl
std
fldt
aad
aaa
push
out
xchg
mov
int3
fistpl
add
push
and
aas
sbb
arpl
push
incl
push
add
leave
sbb
sti
sti
pop
shlb
imul
pop
js
xchg
cmpsl
dec
rcl
into
ds
jmp
adc
scas
cli
mov
mov
mov
pushf
adc
mov
call
insb
xor
sub
cs
xor
int3
cmp
dec
loope
movsl
fadds
cmp
loope
push
sbb
jmp
dec
cwtl
cltd
add
cmp
jle
repnz
movsb
lahf
pop
sbb
mov
adc
xchg
sar
decl
stos
loopne
dec
xchg
test
inc
lret
sbb
data16
sar
ljmp
stos
loop
ds
ja,pt
sub
adc
ja
stos
stos
jg
jg
dec
sub
xor
rolw
shrb
mov
xchg
push
xchg
jg
mov
mov
push
insl
cmp
mov
inc
mov
hlt
pushl
data16
mov
or
mov
ljmp
mov
sub
mov
cmp
inc
sbb
xchg
inc
adc
lock
addr16
xchg
sub
decl
ja
movsl
mov
cmp
push
mov
xlat
in
insl
xchg
ja
mov
push
add
jmp
scas
dec
rcl
cmp
jbe
dec
inc
push
fisubrl
or
push
repnz
mov
popa
shll
gs
enter
gs
lahf
out
pop
cmp
or
pop
roll
das
mov
daa
in
into
push
daa
or
push
int
ja
orl
inc
cld
les
lods
movsl
cmc
mov
lret
stos
dec
cmp
lahf
jg
pushf
and
cs
mov
call
lahf
or
jbe
insb
mov
ret
or
pop
jbe
repz
decl
mov
fbld
das
xchg
or
xor
pop
dec
xor
fildll
xor
dec
mov
rol
push
and
and
lcall
cmpsl
test
and
jg
mov
add
bnd
dec
jae
xor
shlb
in
xchg
dec
lret
test
cmp
pop
adc
or
cmp
mov
scas
lea
xor
jmp
shll
xor
lods
push
ljmp
pop
add
adc
adc
imul
pushf
test
outsb
out
push
out
add
add
cmpsb
sbb
idiv
incl
push
sub
jle
cmp
jbe
insb
lock
mov
xlat
lock
cmpsl
sbb
clc
jnp
mov
sbb
xlat
xchg
mov
out
movsl
pop
clc
cmp
pusha
jp
mov
jle
popf
fiaddl
into
jb
in
jbe
jg
lahf
push
enter
and
fabs
mov
ror
jl
daa
sbb
lea
or
push
sub
loopne
pop
lds
pop
cmpsb
xchg
sub
mov
pop
dec
mov
dec
inc
jp
mov
mov
adc
imul
outsl
sbb
es
pushl
mov
lods
sub
add
cs
stos
inc
fisubl
mov
pushf
mov
cmp
jns
cld
push
push
jno
test
enter
cmp
dec
jge
sub
ljmp
and
adc
mov
adc
inc
mov
sti
mov
decl
xchg
add
push
js
xchg
and
pop
mov
sub
dec
jmp
adc
jae
cmp
jmp
or
push
aaa
sub
pop
mov
xor
decl
dec
fcmovbe
outsb
cs
cmc
add
out
sub
mov
std
call
test
in
popf
ret
mov
push
pop
test
ja
adc
inc
fistl
push
loop
pushl
data16
jae
push
vmovlpd
mov
stc
xchg
rcrl
push
jns
lcall
dec
movsl
lds
popf
sub
xor
movsl
inc
or
pop
jae
pop
cmc
cmp
jl
add
stc
dec
fidivrs
jp
dec
pop
popa
aad
add
int
ds
push
loopne
jae
add
mov
insl
xchg
push
or
out
jns
jecxz
vfmadd132sd
ljmp
data16
inc
push
jge
cmp
idivl
into
fldl2t
loopne
lret
arpl
dec
aad
ljmp
add
roll
fisttpll
xlat
inc
mov
jg
popa
jne
aas
pop
push
aam
cwtl
lds
ds
dec
sbb
les
jmp
pop
push
std
add
sahf
aad
mov
and
stos
sub
inc
jo
sbb
cltd
sahf
or
or
sahf
sbb
enter
xchg
inc
xor
xchg
adc
dec
hlt
fidivrl
jle
rorb
jl
dec
insb
xchg
ljmp
mov
sbb
or
xor
loope
xchg
mov
jg
pushl
shl
push
xchg
sbb
inc
xchg
sub
sub
push
popf
orb
mov
mov
rcrl
mov
cmp
out
ffree
mov
lcall
jae
decb
fmulp
shlb
cs
sti
cld
and
jge
xchg
stc
mov
scas
add
xor
mov
addr16
clc
mov
int3
fucomip
mov
xor
ljmp
add
push
adc
jae
and
icebp
pop
lock
pop
shll
sub
push
into
jle
jg
int
sbb
cwtl
sbb
mov
add
push
stos
cli
adc
and
pop
dec
push
loope
incl
cld
incl
mov
sbb
lcall
sbbl
pushl
sbb
jno
mov
mov
pusha
out
in
pop
aas
pop
fcomi
cmc
fsubrl
aad
adc
ljmp
mov
pop
pop
mov
mov
xchg
fwait
lret
inc
lcall
xor
fwait
lock
cmp
add
ret
insb
sub
xor
sarl
std
lcall
daa
cmpsb
mov
ret
inc
loope
sbb
sub
call
jl
std
pop
testl
in
mov
andl
mov
pushl
dec
mov
push
pop
xchg
pop
call
cmp
lahf
loope
and
sbb
loop
cmp
dec
dec
mov
fwait
rcll
sbb
sub
cmp
rcl
jge
cmc
pop
decl
mov
xbegin
lods
subb
sub
pop
jle
adc
add
incl
dec
pushf
sbb
push
in
shrb
add
outsl
call
push
shlb
or
push
pushl
and
imul
mov
sbb
lea
mov
lahf
mov
pop
cmp
ljmp
mov
mov
mov
adc
jnp
psrad
loopne
xchg
call
fstp
fbld
ds
lret
xchg
ret
pop
and
mov
loope
inc
out
imul
mov
sub
es
sub
fs
jmp
aad
cli
inc
aam
sbb
decb
insl
xor
push
ret
pushf
imull
mov
dec
js
ljmp
cmpsb
rcll
adcb
lock
mov
dec
rclb
pop
sar
std
inc
test
rcrl
and
mov
outsl
call
sub
lods
bound
xor
iret
cwtl
out
sahf
jo
int3
add
pop
jo
incl
mov
lds
dec
jb
lahf
jnp
dec
dec
rcrl
in
andb
cmpsb
push
xlat
pushl
pop
xchg
lds
pop
mov
dec
loopne
repnz
mov
pop
fsubrp
mov
in
lds
loop
mov
jmp
xchg
mov
push
adc
cmp
mov
dec
push
dec
xchg
xchg
lcall
les
cmpsl
xchg
mov
ljmp
add
inc
pop
mov
pushl
xor
jo
cwtl
mov
in
push
cmp
insb
jns
lods
incl
xchg
pop
aad
jb
cmc
push
sub
inc
push
out
mov
ret
inc
dec
imul
out
add
pop
jp
mulb
aad
push
sbb
mov
add
or
clc
imul
popf
enter
pop
lret
fucomp
push
in
ja,pn
sti
cmp
add
ds
fsts
lret
fisttpl
sbb
mov
stos
inc
cld
incl
or
imul
repnz
xorb
mov
incl
mov
push
dec
andb
inc
sbb
incl
int
push
into
bound
jb
int
xchg
jo
fildll
dec
scas
mov
lcall
cmpsb
enter
pop
out
fcomip
sbb
rcrl
insb
jecxz
icebp
sar
push
pop
sbb
push
adc
or
mov
outsl
nop
pusha
mov
data16
pushl
mov
fs
jge
mov
lahf
pushl
mov
cwtl
fsubs
in
or
imulb
shrl
jbe
jg
daa
push
jge
std
mov
test
incl
pushl
push
lods
jae
xlat
std
idivb
nop
int
push
sbb
shll
cmc
jecxz
inc
sti
pop
icebp
jmp
movsl
adc
add
loope
xor
lret
push
aaa
sbb
jg
xorb
aam
iret
push
subb
mov
scas
fcompl
xchg
sub
popa
stos
inc
gs
sub
lret
dec
movsb
stos
aad
nop
cld
in
ficoms
pop
mov
xor
mov
decl
cld
pop
je
pop
and
push
inc
mov
les
iret
out
out
add
pop
insl
fldt
incl
dec
out
xchg
inc
mov
sub
cmp
or
push
nop
fbstp
cmp
mulb
call
pop
xchg
test
xor
pop
mov
cmp
out
aad
icebp
icebp
and
loope
adc
test
cs
punpckhwd
loopne
mov
jb
sbb
mov
nop
xchg
outsb
dec
sub
or
fwait
sbb
xor
cmp
adc
cmpsb
int3
nop
aaa
addr16
data16
jmp
and
mov
adc
cmpsl
xor
fstpl
xor
or
dec
or
fwait
vmovaps
pop
jmp
daa
cmp
popa
or
sbb
sar
mov
and
adc
jp
cmp
repnz
jb
pushl
dec
jge
and
scas
push
scas
cltd
push
xor
das
xor
cli
cmc
mov
movsb
insl
sarl
scas
jg
shrl
adc
or
sbb
pop
inc
push
dec
jbe
and
cli
pushl
scas
or
mov
xchg
sbb
stos
lret
ljmp
inc
add
data16
dec
xor
mov
cwtl
xchg
sbb
push
out
aaa
es
fmuls
jmp
mov
mov
push
outsl
mov
pop
sbbb
pop
xor
xchg
push
ret
inc
lock
incl
rorb
xchg
push
loop
nop
cmpb
pop
notl
out
clc
push
int3
lock
mov
push
movsl
loope
or
lods
lret
dec
arpl
dec
mov
jg
lcall
cmp
inc
in
out
bound
ret
nop
inc
mov
inc
xchg
loop
mov
addl
pop
xor
inc
mov
xor
pop
pop
jae
pop
cli
jmp
fistl
fidivs
fsub
gs
jg
and
aaa
fwait
ljmp
push
mov
fdivs
push
jo
ret
cltd
mov
movsb
add
push
or
call
into
jg
inc
dec
mov
cmpsl
call
subb
lret
jl
or
std
cld
jmp
jb
cmp
mov
outsl
push
std
lock
test
and
decl
xchg
cmpsl
push
adc
loopne
push
popf
daa
xchg
jns
in
lret
in
mov
jmp
mov
cmpb
sbb
sub
push
jle
or
idiv
jg
decl
in
add
sbb
fiaddl
pop
test
in
pushl
rolb
pop
outsb
notl
movsl
or
imul
sub
incl
call
sti
cmp
pop
pop
xchg
adc
and
jnp
jge
or
inc
out
imul
sbb
int3
or
enter
out
fimuls
rorb
cltd
xor
ss
mov
push
aam
mov
fdivrs
int
jp
mov
sbb
out
int
sbb
loop
mov
add
in
test
pop
decl
push
lcall
mov
xor
mov
jmp
aad
adc
loop
push
test
pop
fs
data16
loop
mov
jmp
pushl
std
call
push
ds
mov
or
imul
dec
loop
fisttps
loopne
sbb
dec
shll
sbb
pop
inc
cmpsl
xchg
cltd
xor
bnd
negl
loopne
push
data16
jmp
hlt
xor
aaa
sbb
push
dec
add
xchg
push
mov
sar
sub
add
int
ret
and
adc
mov
aad
dec
popa
jge
jbe
sarb
popf
or
fisttpl
inc
sbb
jecxz
sub
dec
add
pop
ljmp
mov
outsl
jae
xor
fimull
jg
call
xchg
adc
cld
outsl
xchg
jae
mov
add
es
jno
push
rcl
jmp
lds
pop
insl
jp
out
jl
cmpsb
jg
pop
scas
pop
cmp
repnz
loope
addr16
movsb
leave
test
sbb
xor
fs
movsb
movsl
mov
xor
fsubrl
or
pop
subb
mov
fwait
cld
fadds
mov
jg
mov
inc
jne
sar
call
push
pop
mov
mov
lock
push
movb
movsb
mov
mov
xor
and
push
jb
pop
jnp
jbe
mov
mov
jmp
mov
stos
fnstenv
rcr
fbld
mov
xor
iret
int3
mov
popf
jnp
or
pop
lret
addb
mov
add
mov
fwait
lahf
jb
jne
scas
mov
test
inc
pop
loop
jb
xchg
loop
push
xor
xchg
sub
pop
mov
nop
xchg
mov
lret
inc
push
mov
fwait
stos
xor
pop
fcoml
xchg
rorl
rol
sahf
xor
or
call
mov
xor
push
out
push
cmp
iret
mov
adc
pop
fs
pop
pushl
out
mov
hlt
mov
add
out
sbb
pop
subb
lahf
cwtl
cmp
jg
decl
mov
jl
cltd
jg
insb
xor
and
push
and
cmp
pop
rcrl
push
mov
das
icebp
sti
fwait
sahf
jns
inc
pushf
aam
sbb
out
sub
pop
loopne
clc
add
xor
adc
fs
pop
lret
lock
pop
lods
pushl
jne
ret
movsl
repz
xchg
add
pop
push
mov
pushl
jbe
ret
inc
test
cmp
scas
cltd
dec
lret
pop
mov
push
rol
push
cwtl
cmp
shll
aaa
std
lcall
shr
jmp
mov
mov
fsub
push
insl
or
js
xor
xorl
imul
aas
mov
and
mov
fcos
jmp
out
in
addr16
jecxz
add
imul
mov
mov
jmp
fsubl
test
ret
fcoml
test
push
sub
or
fstl
mov
mov
icebp
dec
bound
jg
dec
xor
mov
mov
xchg
jp
filds
xchg
mov
jo
fildl
cli
mov
icebp
lcall
mov
push
dec
fidivs
lock
sub
pop
into
push
filds
lcall
ss
scas
rorl
push
cmc
mov
xor
mov
push
aam
sub
pop
jmp
sub
shll
mov
push
mov
sbb
ficompl
scas
adc
push
addb
xor
das
rolb
icebp
jge
les
pop
shlb
jp
pop
icebp
incl
pop
les
out
pop
stos
test
scas
fsts
xor
jg
sub
shll
sbb
push
inc
movl
ljmp
jl
xor
aas
jmp
mov
fidivrl
cmpb
rcrl
mov
mov
inc
cmp
fstps
inc
or
xchg
sarb
cmpsl
jp
dec
and
mov
mov
mov
or
jo
imul
les
test
jg
jmp
iret
lods
pop
adc
movsb
movsb
jmp
ja
push
push
mov
add
dec
fdiv
push
xchg
lcall
jb
enter
std
inc
cmp
xor
lea
pop
leave
push
incl
lods
mov
jmp
insb
andl
xchg
out
mov
xor
jnp
dec
xor
lods
cmp
lcall
es
rcl
adcb
das
cli
push
jge
call
filds
rorl
xor
xchg
int3
int3
adc
pushl
nop
dec
adc
fwait
xchg
aas
jbe
inc
cmp
rcl
enter
dec
pop
pushl
adc
sbb
fistpl
loopne
in
mov
out
dec
mov
mov
mov
mov
shrl
adcl
fidivrl
arpl
ss
jb
jae
jl
add
ljmp
mov
in
jmp
cld
xchg
cs
mov
incl
xchg
insl
xchg
imul
arpl
and
pop
push
rcll
sbb
adcl
in
and
addr16
dec
popf
or
out
scas
dec
cli
pushl
std
push
lock
sbb
inc
inc
cmp
jmp
int
lahf
out
cltd
jg
incl
std
dec
mov
faddp
inc
lods
fwait
ret
add
xor
aas
mov
dec
call
pop
enter
mov
jmp
mov
lods
ja
loope
popf
pop
mov
loopne
jbe
js
and
fdivrs
push
jg
lods
pusha
mov
outsb
stos
sbb
cs
pushf
cli
call
stc
inc
flds
stos
inc
pop
cwtl
bound
into
adc
adc
sbb
jnp
cltd
jae
sub
out
fsubrs
and
lcall
dec
sbb
addr16
nop
aam
cwtl
imul
ljmp
push
adc
out
mov
or
adc
nop
push
iret
sbb
out
mov
mov
je
aam
inc
and
dec
std
inc
jbe
jle
in
iret
mov
lock
out
outsl
mov
inc
inc
imul
shr
js
mov
lods
jge
dec
out
les
aaa
adc
test
shl
clc
mov
mov
subb
push
sbb
jbe
repnz
jl
cmp
mul
sar
or
lods
ret
aas
mov
cmp
mov
mov
mov
es
and
ret
test
and
mov
call
or
jmp
pop
ljmp
lcall
xchg
std
jne
inc
call
cld
pop
out
stc
inc
inc
cmp
stc
into
in
and
dec
ss
and
pushl
push
cmp
mov
inc
or
dec
sub
pop
pop
aad
jmp
jg
neg
clc
pop
jg
and
movsb
in
inc
in
add
stos
movsl
sub
imul
inc
movsb
mov
inc
cmp
adc
mov
or
inc
mov
cltd
adc
ljmp
aam
push
test
xchg
lea
mov
mov
dec
shll
inc
das
and
or
lahf
jnp
lcall
ss
imul
jbe
mov
pop
or
lcall
mov
mov
dec
push
aad
fmuls
iret
fldl2e
popf
dec
mov
icebp
jmp
push
xor
dec
pop
xchg
pop
mov
insb
cli
ljmp
sub
out
out
push
dec
pop
sbb
push
sahf
cwtl
decl
add
push
sub
loope
sbb
lods
or
cmp
mov
mov
mov
push
fsubl
pop
or
cwtl
sbb
stos
int3
mov
xor
add
lods
or
dec
xor
lcall
sub
mov
dec
dec
fstpl
jb
and
aad
pop
pop
ja
and
out
clc
out
or
pop
subps
cs
rorb
xor
jge
shrb
cli
jno
sbb
jmp
lahf
pop
cmp
or
pop
lret
inc
sbb
leave
sub
mov
arpl
shlb
aad
jmp
call
scas
ljmp
arpl
push
sbb
mov
xor
not
cld
decl
add
xchg
and
or
add
push
pop
add
xchg
jl
mov
pushl
mov
xor
jne
add
mov
cmp
mov
mov
es
call
in
test
pop
leave
adc
lcall
decl
pminub
xchg
dec
xor
mov
adc
repnz
cld
clc
mov
incl
pop
scas
popa
xchg
cmpb
in
in
xor
mov
and
repz
jmp
jmp
mov
inc
lock
imul
divl
cli
jl
sti
mov
pop
ja
pop
cmp
call
pop
mov
gs
in
dec
aas
mov
scas
es
dec
clc
pop
sub
sbb
call
mov
lcall
lret
jne
sub
sbb
or
scas
mov
push
in
or
lcall
sub
sbb
repnz
xchg
cmpsl
cmp
addr16
das
cmpsl
mov
add
dec
mov
push
mov
add
in
in
dec
mov
mov
jb
int
sbb
dec
mov
push
dec
fimuls
mov
fpatan
rcrb
flds
sub
enter
mov
and
nop
inc
push
pop
insl
call
rcr
adc
das
or
mov
lahf
mov
cmp
repz
mov
dec
outsl
add
mov
data16
inc
pop
cmp
ficomps
jmp
ret
or
ret
push
test
inc
lcall
cld
pop
cmpsb
out
jno
and
out
imul
pop
mov
xchg
jmp
lods
sub
lea
stos
sbb
incl
sbb
xchg
jae
and
dec
fsubp
pop
cmc
shrl
sub
pop
ds
fidivs
jle
popa
jle
popf
xchg
movsb
jge
mov
scas
cltd
in
fsts
rcl
ds
xchg
cmc
jmp
jae
sbb
xchg
cmp
vaddpd
mov
jmp
call
sub
push
jecxz
or
std
nop
inc
and
cmp
insl
and
mov
mov
lret
call
std
movsb
mov
fwait
mov
xchg
dec
pop
jae
push
decl
jmp
xchg
sub
push
or
adcl
or
call
push
out
dec
jg
popa
or
mov
cwtl
jns
shll
cmp
xchg
cld
ficomps
gs
filds
jnp
sarl
adc
jbe
jmp
push
aaa
cltd
pushl
lods
xchg
and
mov
div
xor
sbb
call
jne
mov
xchg
inc
lods
fcomi
arpl
sub
jl
ja
cmp
xlat
push
cmp
sti
decl
enter
leave
xor
pop
outsl
jg
andl
insl
jle
and
es
pop
call
int3
or
stos
cmp
mov
mov
mov
call
lea
cmp
pop
bound
mov
sub
and
ljmp
xor
adc
out
test
icebp
pop
pusha
xor
xchg
xchg
lret
orb
jmp
aas
dec
push
dec
jecxz
fisubl
or
roll
xor
negb
fs
jg
incl
mov
jle
push
cltd
or
sahf
dec
ret
pop
lahf
imulb
mov
pushl
adc
mov
cs
jge
sub
jno
data16
cmpsl
leave
aad
pop
mov
pushl
enter
fbstp
sbb
js
xor
sti
sbb
fcomip
adc
outsl
shll
je
cmpsb
jo
push
call
or
inc
xchg
pusha
aaa
add
hlt
aaa
push
ret
mov
push
lahf
adc
imulb
cmpsl
mov
ljmp
jmp
add
xor
outsl
mov
and
sbb
lcall
test
mov
pop
and
stos
jmp
scas
mov
sarl
inc
push
mov
add
call
inc
xor
pop
das
and
pop
mov
clc
cld
mov
test
inc
jl
adc
sahf
push
xlat
enter
outsb
hlt
imul
ljmp
dec
jge
arpl
in
xchg
jg
inc
cmpsb
imul
sbb
and
out
push
inc
pop
cld
call
mov
dec
add
scas
dec
icebp
and
lahf
push
xchg
add
and
outsl
mov
in
jmp
xchg
outsb
shl
sub
push
fs
adc
cld
sarl
lea
jbe
cmpb
pop
aas
push
cld
adc
fisttpll
push
dec
in
popf
xor
ljmp
pop
cli
data16
inc
or
jmp
push
mov
sbb
in
mov
enter
inc
test
sub
dec
adc
ljmp
jo
fdivr
adc
nop
dec
xor
int
sbb
inc
or
adc
mov
xor
call
jne
int3
arpl
stc
xchg
and
xchg
icebp
jbe
mov
sbb
xor
xchg
or
dec
int3
lret
sbbb
lcall
mov
inc
mov
inc
sbb
jno
pop
fcompl
js
scas
out
xchg
cmp
lahf
lcall
ljmp
cmpsb
in
pusha
int
pop
fcmovbe
dec
cwtl
outsl
aad
pusha
popa
inc
lea
loopne
jg
jmp
dec
jae
cmpsl
out
sahf
cltd
into
xor
test
xor
push
mov
fs
mov
fsubp
and
mov
incb
cmpl
cmp
bound
adc
incl
cs
or
shlb
dec
mov
xor
subb
pop
arpl
pop
out
jg
lcall
push
cld
pushl
dec
xchg
cmpb
lods
scas
in
or
and
push
dec
and
push
dec
divl
idiv
stos
orl
jecxz
sbb
in
das
and
fidivrl
mov
pop
jge
js
inc
jmp
data16
jmp
xlat
xchg
sahf
popa
xchg
loope
test
cmpsb
mov
enter
jl
mov
xor
xor
pop
or
or
test
push
hlt
lret
jbe
jl
adc
adc
incl
leave
insl
add
call
adc
sbb
inc
stos
outsb
mov
mov
cmc
push
lods
cmpl
pop
mov
ret
mov
sbb
pop
hlt
mov
dec
adc
outsl
hlt
mov
adc
xor
sarl
std
pop
ljmp
pop
lock
push
sbb
mov
jmp
test
push
ljmp
xchg
xor
orb
cmpsb
or
mov
cmp
fildll
and
aas
and
loop
mov
xor
jmp
or
jl
dec
jl
cmpsb
jns
jg
push
ds
cmpsl
fidivl
int3
add
push
bound
add
not
pop
cld
call
mov
mov
or
dec
test
jg
pop
in
sahf
cmc
fcmove
sbbl
iret
mov
fsub
rcrl
pop
cltd
decl
push
jg
cmp
rclb
push
cmpsb
cwtl
cmp
add
nop
enter
or
popf
and
pop
sub
or
cmp
xchg
pop
es
sbbb
mov
stc
aam
sub
mov
inc
adc
push
pop
stc
and
insb
call
scas
or
inc
mov
fdivrl
movsb
push
jnp
pop
cmp
call
decl
outsl
pop
lcall
fists
pop
and
mov
fwait
shll
mov
pop
xor
cmp
xor
mov
bnd
mov
and
and
cs
dec
test
sub
shll
jl
dec
pop
mov
dec
add
lret
add
iret
lods
ret
dec
mov
sbb
test
mov
mov
push
pop
std
fstl
vunpckhps
loope
es
sub
push
xchg
sbb
in
and
pushl
fcomp
fidivs
pop
rolb
cli
mov
cwtl
aad
xor
sbb
pushl
roll
xchg
mov
dec
aam
pushl
std
adc
iret
ja
imul
mov
fst
mov
arpl
xor
fsts
xchg
das
clc
call
dec
or
dec
popa
mov
shrb
loop
lods
cmp
decl
hlt
or
in
fwait
cltd
sub
mov
imul
popa
std
jmp
sbb
and
jg
sbb
lahf
das
repnz
mov
sbb
das
jb
cmc
movsl
in
jmp
test
mov
cmp
lcall
aaa
sub
or
mov
enter
mov
jnp
int3
push
test
mov
shrb
fiadds
fdivrs
mov
push
aas
adc
xor
pushl
std
cmpsl
cli
outsb
push
lret
scas
push
jno
sub
adc
cli
notl
xor
ljmp
mov
pop
inc
inc
out
push
addr16
imul
hlt
jo
mov
insl
sub
cmp
mov
jge
mov
pop
mov
jmp
sbb
push
dec
aad
push
sub
sahf
jecxz
and
mov
inc
and
xchg
leave
decl
out
dec
imul
sbb
inc
xchg
test
sahf
cmpsl
dec
mov
pop
jmp
mov
incl
insb
ja
push
std
lcall
shll
xchg
ret
pushl
leave
mov
adc
cmp
mov
mov
jne
ljmp
xor
mov
ja
mov
das
cmpsb
mov
lock
mov
cmp
inc
jo
or
inc
add
bound
cmp
add
cmpl
scas
decl
jmp
jbe
icebp
inc
test
dec
jnp
stos
xor
xchg
inc
xchg
jle
push
inc
mov
sbb
in
loopne
int3
data16
sub
test
fnstcw
jp
xor
push
scas
popf
jge
es
xchg
mov
std
mov
adc
pop
xor
in
add
cmp
xchg
push
and
mov
sub
gs
outsw
aam
fs
aam
mov
fdivrs
push
inc
add
cmpsl
cmp
mov
cmp
sarb
mov
cmp
xchg
or
ljmp
popa
mov
sbb
movsl
sub
js
icebp
pusha
popl
inc
cmp
decl
mov
adcb
mov
fmull
and
sbb
lcall
xchg
fisttps
mov
fstpt
movsb
xorb
lret
int3
sarl
jbe
repz
sub
insb
loope
jmp
sub
pop
jns
mov
pop
sbb
mov
pop
int
mov
mov
jmp
imul
mov
incl
ss
leave
jno
mov
into
dec
loopne
cmc
pop
dec
jmp
push
cmc
and
adc
sbb
call
aad
repz
inc
cmp
cmp
dec
jbe
dec
jg
in
in
jg
sub
or
pop
pop
jbe
push
imul
mov
adc
dec
decb
mov
inc
sub
jle
mov
enter
mov
cld
pop
xor
repz
dec
pop
ljmp
lahf
leave
std
pop
add
jmp
fcomip
lcall
add
inc
cmp
hlt
lret
inc
lock
jg
sub
pushl
cld
ss
jbe
in
xchg
ret
mov
or
xor
mov
and
fwait
call
mov
stc
or
repnz
clc
mov
push
mov
and
jmp
stc
lahf
test
in
in
sub
fucomp
dec
mov
add
cltd
xor
pop
xchg
sbb
inc
pop
cli
cmpsl
mov
jnp
pop
jae
pop
rclb
mov
cmp
test
push
lret
add
and
sbb
push
ret
mov
or
std
or
fwait
mov
test
lret
outsl
fsubrl
adc
pushl
inc
shlb
sti
xchg
in
outsl
lret
cltd
mov
subb
cmp
mov
add
push
mov
loopew
jno
mov
mov
mov
cli
pop
push
hlt
test
inc
xor
add
daa
data16
js
decl
adc
push
std
lret
and
sub
cmp
sbb
lahf
pop
clc
pushf
xorl
or
pop
ret
mov
les
xchg
dec
and
pop
loop
call
incl
jmp
xor
cmc
insb
mov
add
pusha
pcmpeqw
cli
loop
scas
cmp
mov
cltd
adc
adc
dec
movsl
mov
das
push
xchg
fisttpll
jae
scas
in
jge
xchg
sarl
ret
sahf
xchg
push
movaps
mov
insl
fbld
fistpl
xor
push
adc
pop
xchg
call
decl
mov
jmp
jo
jnp
shr
push
jg
stos
inc
mov
test
mov
mov
std
jmp
dec
pushl
mov
stos
push
sbbb
testl
ljmp
sbb
mov
fdivrs
mov
in
insb
lcall
cld
aam
fdivrs
and
mov
or
or
mov
pop
scas
ljmp
popf
cli
mov
dec
sbb
arpl
lret
gs
jo
fwait
xchg
gs
dec
xchg
pop
mov
fsubrl
aad
divb
mov
stos
xchg
jo
aad
imul
incl
jg
and
xchg
lock
xchg
adc
or
negb
push
push
pop
sbb
mov
jmp
xchg
inc
mov
enter
ja
or
jg
fwait
es
bound
das
jl
leave
add
push
hlt
cli
push
mov
jmp
lods
and
gs
jl
cmp
sbb
and
mov
imul
insl
insl
les
rcrl
les
mov
outsb
data16
inc
jp
cmp
jg
je
xor
or
adc
cmp
lret
fucomi
xchg
outsl
clc
lcall
popa
popf
dec
inc
repnz
jae
dec
pop
mov
xor
call
pop
mov
fs
pop
test
and
add
mov
lret
push
xor
in
adc
incl
cld
pop
or
pusha
shll
cmpsl
testl
inc
xor
call
ficomps
pop
xchg
pushf
adc
push
cld
cld
or
test
in
mull
fcomip
loope
orb
xchg
in
mov
lahf
add
push
dec
adc
lds
inc
les
decl
imul
leave
les
mov
inc
push
stc
scas
mov
cmp
sbb
mov
dec
es
push
aas
bound
inc
mov
pop
dec
dec
sbb
cmpb
jmp
push
pop
stc
imul
out
and
pusha
insb
push
leave
rolb
sub
addl
into
mov
cld
sbb
cmpsb
pushl
lea
lahf
adc
dec
test
dec
pop
fisubs
dec
cmp
insb
decl
push
xchg
or
enter
or
movsl
das
ret
mov
lcall
add
scas
repz
icebp
aad
sbb
cmpsl
outsl
pop
fwait
mov
mov
dec
mov
and
adc
je
lea
dec
aam
pop
fsubrs
pop
bound
jmp
bound
jno
and
mov
clc
popa
xor
popf
add
in
loop
sahf
loope
add
stc
xchg
inc
or
cmp
lcall
dec
aaa
cld
fisttps
mov
int3
rolb
pop
cmp
sbb
jbe
add
and
cli
xor
fmuls
sbb
bound
or
arpl
comiss
jns
xlat
cld
sbb
cmp
mov
inc
xchg
dec
mov
jge
ret
int
adc
test
cltd
add
stos
dec
cltd
daa
dec
jp
in
outsl
decl
sbb
add
jmp
inc
push
cmpsb
jg
stos
movsb
cmp
add
lods
mov
jmp
outsb
and
jmp
jl
addr16
daa
mov
shl
aam
xchg
xor
mov
push
push
dec
and
push
sbb
and
inc
lret
dec
mov
push
pop
pusha
xor
incl
xlat
xchg
test
mov
and
add
push
ds
rorb
ljmp
jmp
aas
fildll
ja
adc
sub
inc
mov
inc
mov
jle
lcall
je
jbe
add
lret
ljmp
lods
int3
dec
or
sahf
aam
mov
sub
pop
pop
pop
adc
and
decl
rcrl
lock
adc
dec
fsubl
idivb
loope
dec
add
cmpsl
mov
add
and
jns
cli
lcall
cli
repz
push
divl
cmovbe
cmp
int3
pand
jl
sbb
mov
mov
jnp
sbb
outsb
mov
inc
push
ljmp
pop
popf
and
pop
test
sub
jno
and
pop
addr16
fstl
arpl
out
clc
rcl
jge
dec
add
pop
adc
add
movl
shrl
xchg
mov
incl
scas
out
lret
in
adc
jge
mov
icebp
sahf
rcl
jmp
mov
pushl
jp
clc
push
imul
cmp
push
mov
lcall
or
xor
decl
fcoml
aad
and
std
xchg
add
inc
cld
jle
gs
mov
cmp
cmpsl
push
lcall
incl
jns
xor
cmpsb
lock
out
bound
cltd
jns
and
js
mov
and
call
sub
add
insl
fs
lods
cmpsb
mov
sbb
outsb
mov
out
mov
shll
shr
xlat
fildl
cmp
add
push
aad
notl
dec
lods
aam
xchg
lahf
pop
inc
filds
jmp
fsubs
std
xor
inc
jne
mov
or
pop
mov
fidivrs
jge
and
dec
lret
pop
push
test
xlat
daa
mov
insb
je
ret
jle
sub
mov
cmpsl
movsl
ljmp
jns
fwait
stos
orb
jg
clc
mov
ljmp
int
ffreep
mov
mov
xor
call
pop
fmull
and
jno
into
in
mov
mov
pushf
mov
or
ljmp
xchg
fdivl
nop
sbb
fisubrs
mov
xchg
dec
adc
push
call
mov
mov
sub
inc
push
adc
mov
cmp
push
ljmp
jl
addr16
pop
push
mov
nop
pop
xor
mov
pop
dec
mov
sub
incl
sbb
repz
cmp
js
push
mov
out
popf
inc
jnp
xor
ret
mov
sub
cmp
mov
fcomip
ljmp
jno
int
xchg
ja
insb
mov
into
test
aas
mov
test
insb
jmp
loop
xlat
mov
mov
pop
mov
or
mov
add
dec
es
rolb
mov
mov
in
ja
cmpsl
out
arpl
pop
xor
daa
jae
std
lcall
cmpsl
sbb
jne
mov
jne
push
add
dec
cld
stos
pop
or
pop
sub
mov
pushl
jmp
daa
cmc
mov
jg
adc
pop
popa
adc
adc
cli
stos
mov
lcall
stos
mov
leave
int3
cmp
mov
xchg
cltd
jmp
ljmp
insb
mov
mov
aaa
adc
mov
add
and
adc
incl
bound
das
jle
in
sbb
cmpsl
mov
and
aaa
xchg
or
sub
sarl
or
push
push
xorb
jg
movsb
sub
int
imul
mov
in
mov
xchg
push
and
jmp
ret
xchg
in
sahf
jmp
adc
jno
popf
stos
jno
xchg
mov
mov
inc
and
pop
xor
fxam
fidivs
sub
les
cwtl
bound
cmp
insb
mov
scas
fildl
filds
cmc
std
mov
inc
add
xchg
call
aam
fs
xor
ss
div
push
pop
inc
shrb
fwait
pop
xchg
cmp
insl
fcmovne
jmp
pop
sub
mov
mov
mov
cmp
lods
xchg
or
ljmp
imul
xor
lods
imul
adc
outsl
idivb
rorb
jmp
popa
adc
addr16
or
test
cmpsb
outsb
xchg
dec
mov
sub
inc
cmp
inc
jmp
jb
dec
and
mov
dec
sti
inc
mov
adc
inc
mov
loopne
and
dec
imulb
cmp
mov
push
lods
outsl
inc
fwait
add
outsl
pop
repnz
incl
jle
dec
add
xchg
push
sub
jbe
push
mov
jp
pop
adc
lcall
out
and
movsl
add
jne
jg
dec
test
int3
cli
jb
pop
dec
test
incl
pusha
notb
cmpsb
test
scas
mov
or
mov
ljmp
mov
adc
push
xchg
jp
and
ja
mov
and
jo
rcr
dec
xor
add
ljmp
pop
lret
das
fnstenv
ljmp
bound
lods
hlt
xchg
pop
imul
pushl
aaa
sbb
push
sar
std
fs
jp
aas
cmpsl
push
or
pop
mov
out
mov
pop
push
inc
out
jnp
add
push
scas
pop
lods
jle
inc
xchg
and
in
mov
cmp
cmp
cmpsl
jno
popf
lds
imul
cmp
outsl
cli
call
jecxz
dec
xor
fwait
cmpsb
pop
dec
pop
pusha
push
push
or
test
push
push
mov
daa
rolb
xlat
ja
cmpsb
sti
cmp
movsl
repz
int
mov
mov
ljmp
add
sbb
xchg
dec
xchg
push
jle
sarl
outsb
shll
out
sbb
mov
jmp
es
hlt
cltd
shll
push
cwtl
fiadds
pop
fbld
movsb
xchg
add
mov
xchg
filds
insl
jl
pusha
imul
jnp
sbb
dec
mov
roll
es
push
and
jae
fucomp
rcr
stos
mov
pushl
mov
enter
xor
xchg
xchg
clc
xchg
std
pop
add
divl
fists
dec
int3
sti
xorl
leave
ljmp
xchg
adc
push
cmp
rcr
mov
inc
data16
stos
in
jp
jecxz
lea
inc
hlt
inc
mov
sbb
adc
pop
in
das
nop
sub
jp
and
out
icebp
clc
inc
cld
mov
nop
shl
out
dec
sbb
inc
movsb
mov
mov
or
inc
stos
lahf
xchg
fimuls
cmp
adc
jle
dec
mov
les
xor
cmc
push
aaa
ljmp
sub
cmp
decl
dec
orb
out
sub
xlat
cwtl
fistpl
rol
jle
pop
popa
mov
popa
scas
pushl
std
test
dec
lahf
imul
bound
push
out
xor
mov
jmp
cld
in
lods
pop
lock
lcall
sbb
movsb
aam
fmuls
je
mov
flds
mov
mov
sbb
imul
pop
sbb
stc
xchg
aas
jecxz
mov
xor
das
in
xchg
push
xor
xor
fstps
jmp
mov
stc
ss
adc
dec
jnp
shll
loope
cmp
push
mov
cmp
jecxz
stos
insb
sti
push
imul
mov
std
jmp
stc
jl
push
adc
decl
aas
pop
scas
xor
pusha
pusha
fdecstp
inc
fmuls
test
add
push
mov
fstpl
cli
sbbb
cld
adc
dec
ret
dec
fucom
leave
dec
fildl
mov
pop
sti
inc
arpl
cmpsl
pop
mov
mov
popf
xlat
and
test
inc
cmp
jb
pop
mov
and
jg
scas
and
mov
ffree
je
in
mov
pop
pop
pop
dec
hlt
jmp
mov
mov
sti
repz
cmpb
pushl
nop
orl
daa
lods
mov
jbe
inc
out
lret
xlat
aam
pop
cld
xor
cmp
adc
dec
fstl
pop
mov
push
outsb
nop
addr16
pop
iret
clc
xor
ljmp
rcrb
stos
inc
outsb
imul
lret
fsubl
push
outsl
mov
ljmp
ret
popa
mov
jbe
test
in
and
decl
mov
out
testb
jp
idivb
push
int3
hlt
ret
stos
cli
cmpsb
pushf
pusha
stos
xor
ds
bound
jp
or
cmp
push
lods
scas
in
sahf
dec
stos
test
and
aaa
std
jmp
xchg
test
mov
dec
stos
adc
mov
call
jnp
mov
add
movsb
subb
rorb
jge
pop
inc
in
adcb
cmp
aam
sub
push
sbbb
pushf
xchg
and
aad
decl
repnz
arpl
stos
inc
cmp
push
les
mov
out
aam
decl
loop,pn
jge
xor
lret
pop
hlt
mov
jns
sub
call
mov
xor
rcrb
dec
cmc
in
or
lock
loop
mov
add
dec
repz
adc
into
vsqrtps
js
sbb
mov
jmp
leave
and
and
push
dec
incl
or
sti
nop
hlt
jle
aam
or
push
xor
xorl
ljmp
mov
icebp
dec
int
shlb
sbb
ja
imull
insl
aaa
mov
jne
incl
jmp
pop
rcll
sub
dec
mov
xchg
push
xchg
test
clc
jg
call
fmull
lods
mov
fs
fsubr
inc
ljmp
push
mov
aam
int
jp
push
sub
popa
jb
cmc
call
mov
jmp
inc
int
fistps
xor
mov
pop
sub
push
push
popa
rcl
jg
cmc
jl
lcall
lret
dec
or
or
jmp
ja
stos
pop
sbb
lock
lods
dec
test
rclb
sbb
popa
fwait
xor
dec
cld
jg
cltd
inc
pop
xchg
mov
cwtl
adc
xchg
add
std
decl
mov
jmp
js
pusha
insl
and
bound
hlt
ss
cmp
iret
stos
pusha
js
aaa
repz
int
bound
stc
ficomps
adc
push
push
cmc
mov
das
xchg
or
loope
jbe
dec
mov
pop
aam
sub
das
sbb
fidivs
dec
sahf
std
test
jp
or
push
cld
jmp
inc
fldl
adc
fistps
cmpsl
jecxz
cmc
call
sbb
mov
enter
inc
rol
orl
adc
sbb
aam
incb
mov
sarl
pop
daa
repnz
inc
fsubs
inc
sar
sti
xor
pop
stc
xor
and
sbb
push
into
sub
sub
ljmp
jg
adc
je
mov
mov
xchg
gs
mov
mov
call
dec
add
mov
jl
jecxz
sahf
add
jnp
test
jb
mov
insb
jg
decl
into
in
mov
pop
cwtl
xor
xor
jle
add
lcall
sbb
add
xor
ficomps
stos
into
jns
shl
call
aas
lcall
cli
lcall
cmc
pop
mov
icebp
xchg
jle
imul
xor
pushl
lret
mov
addb
stc
popa
je
push
and
jnp
rcll
repnz
ljmp
mov
jae
enter
lea
dec
in
mov
push
cmp
lock
frstor
pushf
in
push
push
stos
xor
xor
push
lret
test
jae
lcall
jl
jg
test
xchg
icebp
or
jno
push
and
arpl
pop
loopne
aas
adc
in
pushf
dec
daa
ret
sbb
insl
push
jnp
jb
dec
aam
sbb
jmp
stos
jnp
inc
push
leave
lcall
push
scas
pop
jp
xchg
shl
cmp
fnstenv
imul
mov
fadds
jecxz
cli
adc
pop
mov
add
loop
push
cmc
stos
incl
pop
xchg
xchg
sub
jnp
xchg
mov
shll
mov
push
inc
lret
fwait
loopne
adc
mov
sarl
mov
roll
out
clc
lcall
mov
and
push
cmp
pop
and
or
outsl
or
rcrl
in
mov
and
sub
pop
jg
sbb
mov
adc
incl
jp
sub
dec
fsubs
mov
cmpsl
inc
inc
mov
nop
inc
in
decl
cwtl
lock
je
cmp
mov
ret
xchg
dec
ljmp
mov
test
aaa
mov
inc
push
push
shlb
xor
lahf
outsl
sbb
jmp
stc
ljmp
iret
insl
and
xor
jp
mov
out
lcall
sub
mov
outsb
push
nopl
popa
jmp
ljmp
mov
test
dec
mov
push
nop
xchg
decl
divb
jmp
cli
stos
add
loop
movsl
addr16
das
inc
or
cmc
pushl
popa
fstl
out
xlat
repz
lret
inc
jge
mov
dec
mov
aas
call
jmp
add
xchg
jns
fildll
xchg
or
in
push
inc
mov
and
mov
and
in
xchg
adc
icebp
jno
in
add
shll
std
aam
cld
ljmp
mov
adc
cmc
in
cld
pop
xor
pop
incl
sbbb
or
shlb
cmp
call
enter
mov
or
aaa
jle
pop
or
std
jmp
xor
clc
xor
push
xchg
daa
push
jae
add
xchg
inc
cwtl
loope
mov
fcomps
jg
je
loop
jge
xchg
pop
iret
jecxz
das
test
and
xchg
stos
pop
fcmovnbe
fldl
mov
cmp
ds
sbb
das
dec
xchg
shrb
rcrb
fstpl
ja
cli
mov
sti
dec
jp
push
push
ljmp
ljmp
or
mov
xor
xor
test
jmp
push
xor
cmc
lcall
es
add
icebp
into
or
fwait
mov
xor
dec
lods
pushf
push
sahf
mov
call
jnp
or
jne
fnstenv
and
daa
shrb
div
mov
je
test
sarb
stc
lret
into
movsb
sbb
incl
adc
inc
jnp
mov
sub
cmpsb
scas
ffree
mov
mov
aas
ret
xchg
dec
push
xlat
cmp
cmc
push
clc
fimuls
pop
jbe
icebp
test
idiv
push
dec
mov
and
dec
or
pop
add
jae
mov
dec
xor
clc
scas
lcall
cmpsb
movsl
sbb
mov
mov
cmp
dec
inc
stos
daa
inc
in
js
icebp
jecxz
add
push
jb
fbld
pop
or
push
mov
mov
cmp
lcall
dec
and
adc
lcall
push
sbb
test
dec
push
mov
pop
lods
jae
xchg
pop
icebp
scas
in
sub
test
loopne
mov
shrb
outsl
ljmp
lock
in
xchg
dec
cmp
inc
cs
fdivs
xchg
dec
mov
mov
incl
loopne
icebp
aam
sub
push
inc
imul
int3
push
push
jge
jle
pop
rclb
jg
call
ficompl
adc
sbbl
lods
aad
cmp
es
das
clc
incl
adc
aaa
dec
lahf
mov
jne
iret
mov
jl
sar
scas
push
popf
insb
mov
ja
add
cmp
dec
dec
jmp
icebp
jne
pop
jp
adc
jmp
pop
xor
imul
pusha
xchg
jb
xor
and
xor
movsl
testb
pushl
cld
inc
mov
es
shll
or
dec
dec
inc
inc
mov
mov
cmp
jno
dec
push
divb
adcl
xor
inc
nop
mov
push
insb
xor
rcll
out
push
fs
add
leave
lret
iret
popa
mov
decl
mov
adcl
dec
mov
sub
arpl
incl
lea
sub
mov
les
cmp
jle
push
dec
bound
call
xchg
jmp
lock
or
jae
xlat
jg
mov
and
ds
lds
ljmp
int
mov
setae
popf
fdivrl
jmp
in
push
arpl
jmp
mov
sahf
test
sti
adcl
mov
push
sub
jecxz
lret
mov
cli
pusha
jge
cmpsb
pop
add
mov
cld
cld
call
ret
scas
mull
test
andl
call
or
js
sub
mov
into
lods
push
sbb
sbb
mov
sbb
pop
and
xchg
stc
out
mov
ljmp
inc
mov
sahf
mov
sahf
xlat
punpckhwd
mov
in
loop
fiadds
cmpsl
pop
jg
xchg
dec
mov
cmpsl
movsl
or
mov
inc
cmovg
ljmp
inc
in
pop
jp
mov
sbb
push
or
mov
es
ret
lret
xchg
cwtl
incl
add
xor
test
iret
mov
jmp
mov
gs
pop
adc
ss
leave
loope
call
mov
jg
inc
adc
int
inc
sub
add
jle
push
aad
inc
call
stc
sub
and
cmc
jne
mov
sub
push
cmp
add
lret
sbb
call
add
fldt
aas
ret
cmp
inc
jmp
int
push
pop
dec
xchg
loopne
fwait
call
popf
jno
out
adc
cli
sbb
orl
scas
xlat
xchg
cmp
pushl
cltd
movsb
inc
cmc
imul
sbb
fidivrl
cli
xchg
push
pop
mov
mov
xorb
jnp
pop
shlb
out
pop
jb
mov
cli
shlb
sbb
jg
adc
in
ljmp
xlat
sub
pop
inc
mov
hlt
jb
pushf
js
cwtl
jp
or
movsb
jno
mov
movsl
push
test
cmp
popf
pushf
and
mov
pop
cmc
data16
daa
lcallw
xchg
jecxz
sub
cmp
stc
pop
xor
call
mov
cmpsl
mov
and
rcll
enter
jecxz
mov
and
lock
add
pop
mov
mov
iret
pop
inc
loopne
arpl
xor
ja
mov
xor
into
call
push
testl
inc
sahf
sub
stos
das
xor
sub
lods
daa
rcll
movsl
lcall
adc
mov
jbe
pop
xchg
fcoms
int3
arpl
pop
lock
jbe
sub
mov
cmp
inc
lds
cmpsb
out
pop
xor
sub
fdivs
jl
negl
sahf
dec
fisttpll
lret
or
inc
jg
mov
jle
mov
jmp
jg
add
fdivl
push
push
xor
and
loop
push
das
shrb
mov
and
inc
movsb
jle
inc
enter
sbb
std
lods
cli
mov
cmp
pop
mov
push
jmp
add
sbb
sti
gs
cmp
mov
jg
lcall
cmp
pop
xor
pop
shll
dec
lret
lahf
jno
cmp
jo
cmp
lods
arpl
cmp
insl
jo
cltd
test
lea
mov
jle
xchg
decl
test
inc
or
jmp
insl
pop
aam
mov
stos
daa
mov
sub
test
cmpsl
cmp
or
ljmp
jecxz
repnz
popa
loop
ljmp
sahf
jmp
mov
ss
sbb
clc
pop
and
xor
std
sub
lcall
loopne
ljmp
fcmovnbe
lods
imul
pop
imull
iret
in
xchg
jns
sbb
aas
mov
shl
loopne
fisubrs
pushl
loope
xchg
leave
psubsw
or
incl
into
in
out
xchg
dec
js
xchg
hlt
sub
aas
inc
xchg
shrb
nop
xlat
inc
pushl
xor
xchg
filds
roll
add
sub
in
cld
add
jmp
fwait
lcall
or
cltd
add
push
jnp
ds
sti
inc
and
addr16
insl
jns
adc
cmp
dec
xor
mov
insb
xorb
decl
add
out
mov
aas
mov
lcall
cmc
add
jg
lcall
stos
or
push
jmp
imul
add
dec
jmp
nop
jmp
or
sbb
jmp
lods
pop
daa
jle
subb
mov
mov
mov
sbb
jae
mov
out
xchg
or
push
mov
fstl
push
xor
lcall
in
out
xor
and
jle
or
ficoms
add
repnz
lcall
or
ja
pop
push
xor
addr16
jo
adc
push
out
adc
add
popf
mov
push
push
cli
add
mov
xchg
rcrl
orb
jmp
std
inc
out
dec
mov
ja
mov
gs
je
insl
arpl
test
xlat
hlt
fwait
push
leave
imul
jb
iret
cli
lret
ljmp
test
cmp
xor
into
pop
mov
clc
negb
sub
sub
mov
ljmp
in
jns
xor
imul
rcr
push
scas
iret
pop
stos
cmp
push
dec
das
movsl
movsb
rcr
subb
decl
test
stc
mov
into
xor
mov
cli
shl
inc
dec
or
cmpsb
call
mov
pop
and
xor
decl
std
out
mov
adc
fcmovne
jmp
push
loop
negb
push
mov
and
scas
mov
xchg
lcall
or
imul
mov
dec
and
lods
lcall
js
adc
std
daa
flds
daa
xchg
push
adc
and
jmp
in
addr16
lcall
inc
mov
mov
movsl
mov
cwtl
pop
stos
push
test
sti
ljmp
and
inc
fstl
push
gs
lcall
cmp
es
call
sahf
sbb
mov
mov
mov
and
mov
imul
dec
dec
scas
xor
dec
mov
add
xor
js
mov
adc
nop
call
cmp
ja
rorl
cs
xchg
rcl
mov
das
je
jg
cwtl
stc
xor
ds
cmovns
xchg
lods
sub
sar
ja
lods
movsb
lret
pop
adc
out
and
push
mov
adc
mov
call
mov
ljmp
pop
mov
sbb
jl
pop
lret
insl
mov
decl
xchg
mov
sub
ret
mov
adcb
mov
repz
xor
call
ret
rcrl
mov
sub
test
lea
testb
jp
and
and
fsubr
in
mov
mov
insl
xor
sbb
pop
popa
int
push
or
je
push
sbb
sub
call
pop
movsl
aas
jo
gs
or
popa
jl
push
gs
mov
mov
test
sbb
jmp
call
ret
xchg
sub
push
xor
inc
sub
lret
xchg
fisttps
and
sub
xor
jg
mov
pop
rcrb
xor
mov
cmp
push
sbb
ljmp
pop
or
adc
adc
push
or
data16
loop
add
cli
int3
jb
push
mov
imul
scas
or
xor
mov
cli
lcall
dec
and
mov
popa
jnp
lea
lret
cmpsl
imul
pop
testl
jae
enter
decl
adc
jmp
xor
loop
push
jb
or
cs
mov
push
jecxz
andb
xchg
mov
bound
jmp
call
add
inc
mov
sub
test
add
mov
mov
dec
pop
mov
scas
jg
call
mov
or
xor
js
cmp
mov
pop
push
mov
cmovae
mov
decl
sub
push
mov
mov
cmpsb
xchg
mov
mov
call
out
call
dec
jno
sub
jecxz
insb
pop
inc
inc
and
and
push
in
jg
fidivl
cmp
adc
mov
mov
and
into
jne
push
hlt
cld
pop
bswap
mov
or
mov
shlb
dec
sbb
dec
add
xor
pop
push
mov
fistl
jnp
repz
lcall
mov
xor
leave
mov
movsb
fadds
jmp
pop
or
pop
pop
out
mov
incl
jl
inc
nop
sub
test
jl
test
out
or
jno
xchg
into
call
scas
fmul
xchg
dec
mov
mov
push
jl
mov
xlat
inc
or
dec
xchg
incl
cmp
pusha
mov
push
dec
mov
mov
outsb
pop
in
push
jnp
lea
pop
jg
mov
sbb
scas
pop
ja
lock
lock
ljmp
cli
push
xchg
fs
and
jmp
dec
sbb
add
sahf
ljmp
ljmp
push
cmpsl
mov
adc
push
fldcw
push
rorb
ljmp
ljmp
clc
fcmovb
ret
and
mov
ljmp
jbe
cld
mov
mov
icebp
fcomip
cmp
test
lcall
push
insb
mov
push
xlat
push
popa
mov
or
lcall
pop
jp
cltd
mov
divl
xorb
scas
rcrb
and
clc
mov
decl
cmp
mov
clc
pop
mov
mov
in
and
dec
decl
inc
push
enter
adc
xorl
ljmp
scas
lock
pop
out
daa
cmp
imul
std
scas
nop
std
pop
xchg
jg
jg
imul
cld
sbb
mov
xchg
rcrb
and
mov
mov
xor
pop
sbb
jecxz
mov
jmp
or
test
jle
pusha
push
sub
xchg
mov
push
aaa
les
or
in
or
call
mov
mov
hlt
lret
ds
jns
cmc
fsub
dec
push
and
lods
add
ficoml
mov
push
push
mov
iret
js
pop
pop
cmp
ljmp
int3
dec
sbb
cmp
xchg
xor
mov
lcall
xchg
subb
sbb
mov
pop
adc
leave
pop
lods
lods
fcoms
xchg
inc
pop
mov
lcall
xor
cmpsl
and
fildl
in
gs
jl
notb
mov
xor
stc
mov
xor
fistps
std
pop
sbb
pop
push
mov
aam
xor
incl
cld
orb
inc
jp
sub
lret
and
push
mov
leave
ror
aad
pushl
xchg
adc
mov
push
and
push
or
mov
inc
clc
testl
call
mov
leave
hlt
stos
not
movsl
pushf
jno
sbb
std
es
add
aam
push
gs
cmp
mov
in
xchg
adc
mov
xchg
loope
popf
mov
in
into
add
mov
aas
adc
mov
ljmp
andb
push
movsb
daa
cmp
fildll
xchg
jo
imul
mull
jge
jmp
dec
fnstenv
negl
xchg
mov
pop
xchg
lret
mov
pop
sub
jecxz
mov
fistpl
outsl
mov
inc
ljmp
xchg
pop
ljmp
cmpsl
dec
add
sbb
test
pushl
fsubrs
cli
out
stos
loop
xchg
iret
fimuls
xor
and
sbb
stc
movsb
in
incl
jne
cwtl
pop
pop
sub
adc
mov
in
insl
jno
clc
rorb
lds
ret
push
jg
cmp
pop
ret
push
and
je
and
adc
dec
stos
ss
incl
loopne
jmp
ret
pop
in
adc
jecxz
mov
push
test
push
rolb
inc
outsl
pop
inc
mov
js
icebp
outsb
das
subb
rol
push
dec
loop
add
popf
jnp
movsl
lods
sar
lcall
pop
pop
adc
scas
xor
adc
jmp
aaa
add
rorb
or
add
hlt
xor
xchg
mov
fcomip
decl
adc
inc
xor
dec
cmp
xor
mov
adc
movsb
jle
ljmp
hlt
jge
stos
in
mov
sbb
mov
push
inc
js
movsl
inc
mov
mov
dec
inc
pop
inc
push
out
iret
dec
mov
xlat
cs
pop
pusha
or
decl
and
div
out
push
adc
dec
rol
movsl
dec
pop
dec
shrb
jbe
fidivs
test
scas
call
add
pushl
sub
test
out
mov
cmp
decl
stc
lods
dec
orb
flds
mov
pop
push
jle
cmpl
or
pushf
inc
inc
and
pop
dec
mov
mov
pop
testb
dec
pop
cltd
test
repz
push
test
int3
cmp
and
cmp
add
jg
sahf
loope
repnz
mov
filds
cltd
test
test
pop
scas
and
dec
dec
pop
fistps
cmp
es
ljmp
clc
adcb
aas
add
movsb
adc
xadd
lock
dec
cmp
jmp
xor
jl
push
aam
cmpsb
stos
shrb
xor
pop
mov
insl
aas
lds
ljmp
sub
sbb
mov
movsb
testb
mov
sbb
mov
xchg
jmp
mov
gs
push
outsl
jp
and
leave
jo
dec
mov
mov
nop
adc
out
mov
cmp
cmc
fisubrl
jp
ljmp
je
lret
js
mov
mov
ret
sub
add
mov
inc
pop
cmc
cmp
sbbb
mov
fbstp
inc
rorl
mov
in
push
cltd
xchg
pusha
out
sbb
mov
dec
jnp
jnp
mov
ljmp
and
add
cmp
mov
sbb
xchg
fdiv
fidivs
pop
movsb
add
mov
popf
jno
incl
cld
pusha
adc
stos
sbb
push
cltd
notl
pop
stos
and
jns
sub
fiadds
incl
addb
addb
or
add
pop
imul
incl
and
or
scas
insl
add
js
push
jg
add
andl
rcrb
mov
fwait
xchg
js
add
add
in
pop
dec
orb
adc
inc
pop
mov
add
and
jle
dec
sbb
add
cmpsl
inc
jno
nopl
scas
push
inc
xor
sbb
repnz
jge
aaa
fldt
jnp
xchg
movsl
push
daa
add
xchg
dec
and
fdivp
add
es
push
movsb
push
movsb
repz
incl
push
and
stos
push
and
push
test
and
mov
mov
xchg
imul
push
inc
pop
pop
add
stc
pop
lods
push
mov
pop
sbb
add
out
cmpsb
fnstcw
popa
push
add
push
ds
les
push
adc
lcall
fs
mov
insb
or
lret
imul
imul
out
push
sub
lret
mov
insl
test
sbb
adc
pop
stos
pop
stos
mov
test
jb
ss
add
jo
mov
push
jo
ss
shll
add
outsl
push
shll
fidivrl
iret
outsb
or
fistl
push
ret
je
fidivrs
aam
mov
fisttps
add
fwait
inc
mov
in
movsb
push
add
mov
sbbl
push
mov
clts
arpl
push
push
push
add
ja
jge
jne
push
aam
push
ret
add
aaa
clc
imul
ss
pop
dec
add
jo
outsb
jbe
push
data16
xlat
sbb
pop
aaa
add
push
push
pop
rep
lahf
shlb
lret
stos
aas
add
sti
out
insb
inc
ja
push
push
xlat
jne
add
loopne
push
fdivs
push
aad
push
xlat
ja
mov
or
jns
push
jp
jp
inc
sub
or
push
fidivrl
sarl
ja
fldl
les
je
jmp
ja
insl
mov
push
xchg
sub
xchg
in
xchg
sub
insl
inc
cs
xchg
xor
xchg
push
setbe
xor
ss
dec
fisttpl
push
lcall
cwtl
push
cltd
cmp
cmp
pushf
cmp
pop
ds
out
popf
xchg
popf
aas
push
sahf
inc
push
lahf
inc
idivb
out
mov
push
jecxz
push
negb
dec
std
test
ss
iret
repz
hlt
clc
stc
cli
aas
iret
repz
cld
std
incb
jecxz
insb
lock
mov
jae
add
imul
popa
push
add
pop
add
int3
data16
pop
add
pop
stos
fadds
add
sbb
mov
sti
mov
mov
add
add
insb
mov
or
or
test
test
dec
stos
stos
cmpsl
or
push
sbb
or
pop
pop
adc
xor
lods
add
pop
or
int
stos
femms
lods
lods
pop
aad
mov
mov
add
scas
insl
inc
jo
jnp
pop
pop
adc
and
add
push
lods
adc
sbb
adc
fwait
sbb
scas
scas
scas
scas
sbb
add
sbb
mov
nop
cmpsb
jns
mov
push
mov
add
and
mov
lock
jb
mov
mov
and
and
lods
xchg
mov
add
cmp
mov
adc
pop
sub
mov
xor
mov
push
pop
daa
mov
sbb
mov
inc
and
aas
cmp
pop
cmp
cmp
add
or
mov
pop
xor
pop
or
int3
in
int3
push
or
add
pop
push
fists
xor
mov
pop
das
push
cs
xor
add
xor
das
pop
push
push
jmp
xor
cs
dec
inc
das
inc
inc
xor
adc
mov
xor
jbe
cmp
jl
jge
jno
mov
mov
pop
inc
outsb
decl
cmpb
jo
mov
inc
xorl
mov
xchg
xchg
xchg
popf
pushf
fwait
stc
in
lcall
mov
mov
sub
xchg
lret
dec
ja
jns
dec
push
bound
js
loope
insl
adc
xor
jne
je
mov
pusha
push
jg
mov
es
addb
cmpl
scas
push
lods
mov
aas
outsl
push
adc
xchg
pop
push
dec
add
jg
add
and
cmpsb
push
mov
xor
fldt
ja
push
ja
jb
cs
xor
mov
dec
push
push
push
pop
es
mov
pop
jbe
dec
sbb
and
mov
jg
xor
xchg
jo
push
inc
mov
cmp
mov
inc
in
outsl
or
dec
xchg
jae
xchg
jp
inc
cltd
lcall
mov
aaa
add
xchg
jno
lret
rep
pop
sti
push
bound
mov
mov
inc
sti
mov
xor
add
outsb
add
xchg
xchg
lahf
divb
test
push
dec
push
movsb
jae
pusha
shl
add
jb
shll
outsl
pop
xlat
pushf
push
rorb
add
fwait
imul
lcall
outsb
mov
pop
in
outsl
mov
add
ja
sahf
jbe
fistpl
imul
pusha
add
ds
push
add
and
add
js
mov
data16
shrl
ds
into
insb
pop
outsb
push
outsl
ror
push
lock
push
ds
jno
add
jge
push
jg
or
fisttpll
lock
mov
add
outsb
bound
clc
in
mov
add
test
fildll
loopne
iret
sahf
mov
jb
fmul
mov
jg
jle
cmp
jecxz
or
jns
imul
jne
fildl
adc
push
idivb
dec
movsl
adcl
sbb
adc
fiaddl
test
sbb
test
pusha
cmp
push
xchg
nop
and
out
xchg
add
ja
in
xchg
lock
sub
sub
neg
dec
sti
shrb
xchg
repnz
xor
cwtl
or
cmc
sahf
xor
lcall
pusha
repz
cmp
aam
sub
cmpsl
push
cmpsb
scas
jo
sbb
ficomps
fists
jbe
stos
into
shll
lgs
int
fnstenv
cmpsb
sarb
inc
xchg
mov
aad
jle
rclw
jp
into
add
addr16
dec
inc
mov
sub
add
add
xchg
daa
add
test
mov
nop
ja
cld
femms
or
or
or
out
in
or
es
push
adc
push
add
pop
repnz
sti
add
ds
add
loop
xor
mov
adc
sbb
insl
adc
mov
mov
imul
push
add
and
aad
imul
and
cs
mov
mov
xor
aas
and
aas
pop
dec
lock
cmp
aas
cmp
enter
cmp
jae
cmp
fiaddl
mov
sbb
inc
jbe
xorl
mov
inc
inc
jle
cmp
scas
xor
dec
mov
scas
ds
jle
aas
adc
imul
xor
dec
inc
test
int
scas
add
outsl
mov
mov
addr16
mov
ds
jg
jle
lods
stos
test
cmpsl
cmpsl
cmpsb
cmpsl
add
test
mov
mov
ds
xor
sub
sub
sub
sub
outsl
das
or
ss
and
inc
mov
ds
push
push
push
push
push
push
imul
push
pop
push
push
push
imul
fs
das
pop
imul
cwtl
xchg
pusha
xchg
nop
cltd
mov
mov
nop
test
insl
popf
mov
jge
jns
jns
jle
addl
jo
outsb
pushf
push
insl
push
dec
sti
lds
push
rolb
mov
test
mov
incl
or
add
or
stc
decl
jl
push
add
cmc
repz
dec
xor
aas
std
add
xchg
pop
cmp
test
add
mov
add
mov
mov
push
fnstsw
repnz
inc
add
gs
aaa
jecxz
pushf
add
mov
push
in
lcall
cmpb
or
mov
push
push
dec
ljmp
push
int
jae
sub
xchg
add
in
sti
out
cwtl
add
cmpsb
mov
test
scas
xchg
js
ss
or
rclb
ds
sub
xchg
push
sub
nop
sub
fistl
out
xchg
xor
xchg
outsb
lcall
sahf
insl
es
jbe
negl
fcmove
aas
mov
outsl
fst
es
push
lret
loopne
push
std
and
or
fdivrp
divl
pop
and
add
sbb
add
jge
and
inc
push
xchg
push
dec
dec
dec
dec
dec
dec
add
mov
call
dec
or
adc
cmp
adc
dec
or
dec
dec
dec
inc
add
push
adc
add
or
pop
repz
pusha
pop
cmovg
inc
push
dec
sbb
cmpsl
std
pop
inc
and
dec
and
adc
sbb
dec
in
in
add
dec
adc
inc
ds
cmp
cmp
cmp
daa
and
lcall
sbb
sbb
and
add
dec
ss
xor
sub
sub
adc
pushw
mov
addb
mov
pop
mov
mov
fucomi
inc
mov
ss
add
outsb
mov
push
add
add
and
mov
pop
xor
outsl
mov
cmpsl
rorl
and
cs
incl
or
jmp
xlat
sub
sbb
incl
and
sbb
pop
mov
es
dec
inc
xchg
xor
mov
jnp
pop
stc
sysret
in
lock
hlt
movups
jg
adc
test
ja
pop
push
rorl
outsl
add
jg
push
mov
pop
lahf
pop
or
mov
sbb
cli
add
push
mov
cli
filds
call
add
or
addr16
mov
adc
xor
xchg
jg
mov
ss
das
sti
sbb
add
mov
jle
inc
loopne
xchg
inc
dec
sti
shlb
jg
xchg
mov
mov
push
mov
adc
xor
idivb
nop
or
cld
jg
mov
add
cmpsb
std
ja
push
adc
std
jg
and
and
jg
push
or
jns
std
dec
adc
push
adc
add
jle
inc
xor
data16
xor
decb
and
or
lods
add
incl
inc
inc
dec
xor
shll
incb
jg
or
fidivrs
jg
sbb
insb
or
adc
sbb
xchg
jbe
insb
and
flds
add
push
mov
test
mov
scas
incl
add
incl
lods
jle
lret
imul
inc
xchg
inc
pop
lods
inc
addr16
adc
adc
sub
dec
jg
call
add
pusha
sbb
jg
pop
xor
inc
data16
lods
lea
add
xor
adc
adc
es
adc
adc
pop
mov
lods
cmpb
mov
fdivrp
cmpsb
ljmp
in
popf
notb
add
daa
rcl
mov
aas
aaa
pop
pop
in
push
pop
xor
pop
jle
xor
pop
inc
push
add
test
mov
jle
sbb
decl
push
or
push
dec
xchg
push
fnstsw
je
add
mov
insl
iret
lods
comiss
daa
push
arpl
das
les
aam
insl
xchg
arpl
out
push
xchg
push
and
hlt
dec
and
lcall
jae
lds
ljmp
or
jno
jle
jle
push
and
mov
push
dec
fidivrs
inc
idiv
fnstenv
add
push
jne
dec
out
jl
pop
push
jbe
or
es
push
jnp
push
jp
ja
dec
decb
js
dec
jbe
pop
add
jne
mov
mov
mov
jbe
call
and
or
ljmp
jle
aam
cmp
test
scas
jmp
call
and
mov
jns
fiadds
insl
and
push
mov
outsl
inc
call
inc
out
mov
xchg
cs
aas
popf
inc
push
pushf
cmp
test
cwtd
fstpt
cmpsb
mov
xchg
xor
xchg
xor
sub
sub
jns
insl
push
nop
daa
ss
cs
enter
mov
xor
lcall
cmpsl
sbbl
jg
dec
test
cli
pop
fnsave
xor
inc
int
sbb
push
jbe
data16
ss
rcl
push
cs
add
mov
aam
ja
dec
test
xchg
movb
inc
mov
pop
ja
testb
pusha
add
add
dec
in
adc
inc
bound
inc
outsl
add
push
dec
push
insl
outsl
mov
mov
jns
or
add
push
adc
add
push
orl
lea
jmp
or
xchg
inc
and
cmp
lock
push
jmp
xor
pop
cmp
std
cmovb
icebp
imul
add
sub
lcall
out
pop
sahf
jbe
xor
jmp
mov
pop
call
push
sbb
xor
inc
push
mov
cli
dec
add
push
jle
sti
std
hlt
mov
and
add
fdivs
adc
or
push
incb
xchg
adc
mov
or
mov
sub
daa
cld
pop
das
pop
push
shlb
cld
jmp
inc
dec
or
cmp
in
push
pop
daa
std
out
or
orb
or
lcall
or
push
lds
mov
test
ds
ljmp
or
push
les
jmp
xor
test
lcall
sub
decl
inc
inc
pop
decb
lea
and
lcall
sub
ljmp
mov
add
or
nop
mov
mov
in
inc
xchg
bswap
cltd
mov
adc
inc
pop
adc
mov
out
cmovs
loope
push
incb
adcb
adc
xor
mov
iret
call
mov
mov
adc
xchg
or
add
sar
pop
sti
nop
push
cmp
std
decl
xorl
decl
inc
push
add
and
cld
pop
stc
pmulhuw
and
push
call
jg
sub
ret
movsb
and
loop
roll
sub
nop
call
decl
jmp
pushl
pop
fcmovbe
pop
imul
pop
inc
xorps
and
addr16
mov
icebp
sahf
int
push
shll
roll
mov
push
dec
dec
sahf
ret
decl
jnp
xchg
push
adc
jmp
dec
jnp
fldt
lahf
inc
inc
push
inc
mov
in
fiaddl
inc
pop
mov
out
ss
sahf
movsb
dec
push
stos
push
popf
inc
dec
xor
fldenv
aam
imul
push
add
and
sub
xchg
push
out
push
shrb
jmp
shrl
outsb
shll
xchg
mov
es
push
jb
notb
push
iret
insl
pop
dec
cmpsb
cmp
daa
outsl
pop
imul
push
push
push
sub
call
nop
mov
dec
in
imul
pop
int
repnz
and
push
jmp
pushf
cmp
aas
decb
cwtl
xor
push
inc
push
xchg
jp
in
cltd
push
push
aaa
push
lcall
fwait
dec
xchg
push
xchg
es
xchg
xchg
and
push
sub
aam
xor
scas
adc
inc
jmp
das
xor
and
push
add
pop
add
cmp
fcmovbe
js
std
faddl
inc
fstpt
push
jnp
jp
aaa
int
cmp
or
jl
shrb
jge
jg
es
jmp
mov
fidivrl
push
dec
push
dec
repnz
repnz
jae
aaa
fbld
pop
fidivrl
push
mov
jnp
jge
push
leave
xor
add
int3
outsb
nop
negl
mov
mov
stc
sbbb
xchg
push
inc
outsl
enter
lahf
push
adc
adc
fnstsw
imul
jg
or
lahf
dec
es
xchg
mov
addl
orb
mov
inc
and
xchg
out
push
sub
iret
out
mov
cli
sahf
mov
push
jbe
clc
push
idiv
ja
mov
push
jb
sub
jg
mov
mov
cld
lock
ja
daa
jno
sub
jg
mov
icebp
in
or
mov
jg
je
add
filds
jg
mov
ja
stc
cmp
jns
mov
es
mov
xchg
aaa
add
test
and
mov
jbe
jg
dec
in
rorb
or
movsb
addr16
mov
dec
and
jge
inc
stos
nop
sbb
decl
mov
push
fsub
pop
push
push
dec
lahf
inc
inc
push
int3
decl
and
mov
fidivrl
arpl
clc
xor
nop
cmp
mov
push
pop
jbe
nop
fimuls
pop
push
pop
or
test
mov
and
dec
lcall
push
or
fwait
rcl
jns
mov
push
mov
popf
fldcw
in
sbb
in
sbb
xchg
mov
pop
sti
adc
loop
adc
xchg
out
sbb
loope
and
lret
jg
out
mov
test
add
push
inc
cmp
jp
add
inc
or
lahf
xlat
push
cmovno
jecxz
fwait
sti
mov
adc
push
add
push
and
and
add
push
add
sbb
and
pop
or
inc
sbb
or
push
inc
lahf
add
dec
test
cmp
outsl
fwait
call
mov
sbb
xchg
push
in
mov
test
pop
push
sbb
or
push
aaa
imul
nop
subb
add
or
or
xchg
incl
adc
nop
push
push
push
and
test
pop
nop
mov
mov
add
push
pop
les
sgdtl
out
push
imul
jo
adc
add
inc
stos
add
xchg
sbb
or
add
cmp
adc
lcall
push
aaa
xchg
push
jno
push
pop
add
aam
lea
sub
pop
sbb
push
dec
add
jecxz
inc
popf
sbb
pop
test
add
imul
adc
shlb
sub
add
and
cmp
add
jno
and
aad
add
push
cmp
add
mov
sbb
adc
mov
and
mov
insl
and
mov
out
pop
popf
in
imul
rcll
popa
bound
inc
xchg
adc
jb
outsb
fistpl
jae
inc
addl
lds
inc
sbb
call
xor
cwtl
add
fldenv
pop
dec
mov
adc
scas
gs
sub
add
add
adc
cmpsl
inc
add
mov
les
pushf
push
mov
xchg
test
sbb
pop
cmc
add
sbb
shrb
imul
push
outsb
dec
push
outsl
loop
fidivl
add
and
push
pop
movsl
inc
sub
add
fwait
ljmp
pop
pop
mov
sub
dec
insb
out
inc
imul
sbbl
inc
cmpsb
inc
add
adc
sahf
adc
addr16
adc
mov
add
or
popa
mov
and
sbb
add
add
add
or
cmp
je
fildl
arpl
push
add
mov
addb
push
fiaddl
and
insl
mov
lods
jecxz
adc
aad
cmp
adc
cmp
and
or
test
mov
mov
pop
mov
cmp
xor
push
dec
in
xchg
sbb
push
xchg
inc
pusha
stos
roll
mov
xor
add
mov
mov
adc
cmc
xchg
movsb
cmp
add
test
jecxz
adc
mov
add
adcl
sub
xchg
add
push
or
mov
dec
cwtl
adcb
jmp
inc
orl
xchg
fsubl
jecxz
je
bound
jp
jnp
iret
testb
out
push
shll
xchg
xchg
bound
adcb
inc
adc
pop
test
jae
lds
mov
pop
push
icebp
and
add
add
add
subl
push
add
pop
mov
dec
fbstp
leave
add
push
jae
xor
add
sub
mov
mov
nop
in
pop
add
add
imul
cmp
sbb
or
push
pop
test
jo
add
inc
stos
roll
push
inc
icebp
test
loope
je
jne
inc
mov
sbb
gs
outsl
jae
in
nop
pop
loop
outsl
mov
xor
mov
mov
add
push
add
insl
jb
fldenv
sub
and
aam
mov
hlt
loopne,pt
das
sub
add
xchg
lcall
push
sbb
dec
mov
cmp
xor
push
xorb
jnp
push
cmpsb
jle
push
inc
aaa
push
pop
dec
add
popa
inc
pop
sub
insb
jne
arpl
add
mov
lea
adc
inc
jbe
inc
es
push
das
sarl
sub
xlat
and
and
stos
imul
pop
mov
fstpl
dec
sbb
push
ds
or
push
fsts
and
xor
mov
inc
xchg
jne
mov
or
fs
jmp
imul
lds
insb
push
sbb
push
mov
daa
push
mov
xchg
jo
push
cld
sub
mov
push
pusha
fs
fwait
push
loope
xor
lea
mov
stos
dec
inc
add
xchg
add
mov
out
push
jg
jns
popf
push
or
lock
push
jo
lods
xor
movsb
and
push
les
test
std
xor
subl
mov
push
push
not
xor
and
arpl
mov
pop
sbb
sbb
push
sbb
lods
inc
pop
and
mov
insl
dec
outsb
dec
std
lea
shlb
push
and
mov
sub
push
push
fidivs
pop
js
add
pop
add
add
sbb
mov
mov
sbb
movsb
dec
adc
lcall
lcall
adc
mov
xchg
pop
add
es
daa
pushf
dec
pop
pop
add
inc
add
mov
sbb
and
imul
jp
xchg
push
and
shlb
sub
pop
out
test
popf
or
es
cmp
lcall
push
push
cmp
sbb
inc
insb
dec
mov
mov
sbb
nop
or
cmp
add
sbb
out
xchg
sub
les
inc
popl
push
dec
nop
sbb
add
rorb
sbb
push
adc
mov
scas
or
and
jne
sbb
add
fldl
or
sbb
jge
xor
push
mov
pop
sahf
pushf
xor
xor
push
dec
pusha
and
ret
push
mov
xor
dec
sbb
divb
mov
push
mov
jne
roll
sub
mov
xchg
fcoml
mov
mov
popw
xlat
das
test
lock
inc
add
fistl
and
xor
and
sbb
andl
mov
push
cmpsl
inc
ret
lods
mov
add
outsb
jbe
cmpsl
jb
stc
jno
adc
add
mov
pusha
pop
popf
scas
push
mov
sbb
mov
inc
push
xorb
push
and
or
xchg
shll
cld
cmp
sbb
enter
arpl
test
pop
sub
or
xor
jmp
arpl
mov
and
inc
sbb
pop
adc
inc
push
mov
xchg
mov
xor
mov
stos
and
inc
cmp
sub
jg
out
push
mov
xchg
cmp
daa
outsb
pop
push
xchg
or
sbb
inc
fidivrl
scas
inc
sub
push
jne
xor
lods
xchg
add
or
lahf
add
push
nop
cmc
push
mov
fdivr
push
inc
inc
sbb
mov
xor
push
lret
xor
sbb
pop
push
or
arpl
jbe
xor
mov
xor
outsl
out
inc
test
push
xchg
jae
xor
pop
roll
jo
aaa
sub
sub
inc
aam
leave
add
jp
adc
rclb
movsl
dec
dec
mov
faddl
adc
and
nop
sub
daa
push
add
das
adc
and
fcoms
retw
add
nop
mov
push
shll
add
lods
loopne
nop
movl
fcomp
dec
mov
daa
cld
testl
sbb
sahf
pop
insb
and
push
cld
push
addr16
rcrb
or
nop
pop
lcallw
nop
xlat
out
aam
dec
xor
fsubs
jp
inc
fistl
and
imul
jg
and
xchg
add
add
xchg
incl
add
add
add
call
or
pop
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
add
inc
add
