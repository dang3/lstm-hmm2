divb
in
mov
mov
mov
push
push
call
int3
das
int
in
jg
shlb
or
and
push
je
and
out
je
push
call
push
add
sub
push
ret
in
divl
jne
mov
or
call
xchg
push
push
add
stc
out
aas
mov
test
je
cmp
pcmpeqd
cmp
jae
dec
movzwl
lea
jne
sbb
xor
jmp
and
neg
fidivrs
and
pop
pop
mov
or
call
push
push
sarl
stc
rcll
jp
jge
add
pop
push
push
push
push
xor
mov
push
mov
scas
stos
mov
std
adc
inc
add
cmp
pushf
or
jnp
or
push
mov
push
xor
cwtl
pop
jnp
mov
xchg
push
sbb
add
divb
inc
sub
ret
mov
jmp
pushl
sar
insb
jbe
jecxz
lea
or
lock
dec
test
jg
sbb
xor
adc
push
add
outsb
mov
push
scas
adc
mov
add
inc
jne
sub
sar
mov
je
daa
ret
push
repz
outsl
or
fadd
adc
pushl
mov
or
xor
dec
mov
mov
mov
call
pushl
mov
or
insl
adcb
data16
pop
cld
add
movsb
or
andl
mov
dec
lock
adc
push
xchg
adc
push
jge
pusha
outsl
adc
test
mov
fcomps
sub
dec
xor
dec
and
or
mov
mov
or
or
pop
cmpsl
push
cmp
mov
mov
aaa
ret
data16
call
sbb
add
push
jle
call
inc
mov
lea
mov
adc
cmpl
push
dec
or
add
iret
jbe
ret
ja
pop
xchg
sbb
mov
and
or
ret
test
push
xchg
mov
call
lcall
dec
and
add
xchg
es
pop
xlat
push
sbb
test
or
sbb
push
sub
add
scas
outsb
push
mov
aas
fadd
jae
push
stos
scas
sti
push
pop
pop
push
jno
pop
scas
dec
imul
add
pop
or
push
push
sbb
push
or
sub
add
mov
pop
cmp
push
mov
pop
aad
jp
aaa
xchg
xor
bound
adc
inc
lock
push
mov
cmp
or
rolb
or
sbb
push
clc
jge
insl
cmp
dec
pop
ljmp
push
hlt
mov
xor
mov
pop
ret
push
inc
shrl
pop
jae
cmp
int
inc
sub
inc
clc
ds
subb
or
xchg
inc
pop
push
jo
ss
push
sbb
xchg
or
orl
pop
adc
inc
test
jne
add
stos
add
jmp
js
mov
cmp
jg
mov
adc
addr16
dec
ds
and
pop
movsl
pop
enter
push
dec
test
push
and
dec
hlt
sub
push
mov
idiv
loope
sar
imul
cld
ja
adc
dec
xchg
or
dec
clc
add
push
loop
int
adc
in
and
cmpsb
adc
leave
aam
enter
pop
push
orb
ret
fdiv
lcall
cld
clc
fistpll
iret
jle
mov
cmpl
or
clc
ret
jnp
push
out
jmp
push
cmp
jge
push
sti
add
inc
jle
add
pop
cltd
jge
enter
fisttps
iret
mov
aam
push
sahf
lock
push
xchg
push
mov
cmp
jl
cmp
jne
aaa
loopne
or
add
xor
std
shlb
adc
mov
inc
add
add
add
lea
push
add
push
push
lea
fwait
pop
push
jo
nop
xor
push
jp
fldt
xor
into
mov
aam
push
push
sub
cmpsl
jo
fdivrs
fbstp
pop
adc
cld
fsubrs
pop
stos
mov
repz
or
loop
jge
test
jle
cmp
mov
pusha
outsl
mov
inc
mov
sbbl
inc
icebp
mov
pop
xchg
pop
jmp
push
sbb
push
xor
dec
and
xor
jns
sub
and
add
adc
lods
ret
pop
sub
loopne
leave
mov
lcall
hlt
cmp
pusha
inc
adc
sub
push
and
hlt
jg
pusha
cmp
push
add
or
cmp
scas
cmp
push
shr
mov
rcrl
push
push
adc
cmp
jle
mov
push
pop
or
out
or
icebp
add
cmp
cmp
jae
push
cmp
call
xchg
pop
lret
or
push
add
jb,pt
pop
adc
pop
adc
pop
leave
stos
jle
mov
fcoms
jnp
ljmp
sbb
cmp
lock
adc
push
push
rcrb
sbb
or
adc
or
cmpsb
push
loope
add
jne
pop
enter
cwtl
loopne
cmp
jo
inc
sub
add
ret
aad
aaa
add
ret
or
or
pop
pop
or
cmp
sub
pop
das
xor
jno
cmp
jne
push
push
lock
push
in
and
jl
in
js
push
mov
mov
or
mov
pop
pop
pop
pop
addl
int
push
add
jg
xor
pop
divl
je
movl
jo
add
and
mov
jecxz
mov
popa
leave
iret
add
add
xchg
push
jg
mov
sub
cmc
push
mov
cmp
fdivl
in
jle
pushw
mov
test
xchg
xchg
lret
cwtl
mov
dec
test
cwtl
imul
loop
mov
and
je
push
and
add
dec
ss
js
movl
or
lret
sub
mov
add
rcr
jge
xchg
push
fisubs
fs
clc
imul
dec
add
mov
dec
inc
lods
enter
add
iret
cmp
push
add
in
dec
lock
mov
xor
jo
mov
scas
fnstsw
mov
push
mov
adc
loopne
scas
aas
roll
sub
add
push
cmp
je
bound
sti
icebp
sub
pop
out
or
jne
dec
fimull
sbb
mov
pop
mov
cmpb
flds
jb
cmp
cmc
cmp
mov
and
dec
mov
jae
push
cmp
dec
or
scas
imul
mov
mov
mov
sbb
call
arpl
cs
lods
imulb
jb
push
add
or
ja
repz
cmp
in
cmp
sub
andl
add
or
push
in
mov
push
adc
or
push
in
xchg
ss
dec
or
inc
gs
lock
add
std
push
mov
mov
or
into
lahf
insb
out
xchg
sbb
lods
sbb
pop
jae
ret
loopne
inc
dec
adc
xor
les
push
shlb
sub
call
adc
inc
add
push
lock
outsb
or
mov
sahf
icebp
insb
call
cs
out
popa
inc
and
ror
add
addr16
ret
push
aas
aaa
pop
and
push
push
mov
dec
mov
mov
into
inc
and
mov
xor
sbb
push
js
in
ds
jecxz
fs
sub
jo
adc
adc
lahf
push
pop
int3
or
jmp
mov
shrb
loop
lcall
xchg
lds
scas
aad
mov
mov
cmc
push
cld
jnp
jge
lea
stc
adc
lods
push
pop
or
and
push
js
and
adc
adc
popa
add
stc
int3
in
dec
cwtl
loopne
cmp
fldl
pushl
fadd
jg
shl
fcomps
sar
inc
adc
andb
mov
cmpb
stos
mov
sbb
push
xor
fiadds
pop
iret
push
pop
lods
movsl
lods
mov
cmp
xlat
test
out
das
push
and
pop
and
xchg
and
adc
adc
cmp
test
loopne
loope
incl
sbbb
mov
test
xchg
aaa
out
push
xor
icebp
jb
pop
cmp
sarb
adc
pop
adc
lock
test
fmuls
lret
in
aas
pop
mov
sub
mov
mov
dec
addr16
sahf
movsl
and
nopl
inc
add
pop
mov
into
push
inc
jo
gs
mov
je
cmp
or
icebp
into
scas
mov
xchg
adc
mov
push
int3
test
xor
inc
mov
std
pop
pushf
and
cmp
xchg
das
aas
push
inc
adc
jmp
jo
int3
mov
lds
adc
adc
leave
cmpl
imull
pop
adc
lahf
and
in
dec
xchg
jp
outsb
push
push
or
mov
xor
dec
sbb
mov
test
mov
lea
mov
push
push
push
jl
xchg
sub
xchg
sbb
sbb
roll
cmp
movsl
pop
pop
ljmp
push
rcrb
jne
mov
or
punpckhbw
mov
das
movsl
ss
test
or
sbb
pop
lea
outsl
addb
jbe
dec
add
push
stos
hlt
mov
adc
repz
adc
in
jnp
enter
mov
in
and
in
stos
into
fsubrl
or
push
adc
insl
mov
call
mov
les
jnp
mov
xchg
or
cmp
pop
loopne
in
sbb
scas
and
mov
in
xchg
sbb
push
xor
xor
xor
push
dec
aam
jge
jl
cld
rorb
cld
das
cmp
lock
add
js
adc
lock
pop
loopne
movl
dec
cmpl
xor
addb
je
shlb
cmp
roll
cmpl
xor
adc
adc
call
push
mov
daa
jecxz
incl
add
push
ljmp
xor
push
popa
mov
testb
pop
in
cmp
pop
push
movb
fidivrs
test
addr16
dec
and
mov
stos
xchg
test
lock
jle
mov
xor
sbb
jl
fwait
mov
fistpl
jae
ret
je
push
je
xchg
stos
and
pop
fcmovnb
shlb
nop
nop
leave
enter
mov
mov
cld
pushf
or
pushf
pusha
dec
imul
imul
lock
xor
addps
adc
push
jl
xchg
or
fs
add
cltd
xchg
lret
and
rcl
push
iret
adc
jge
jl
imul
jge
pop
xlat
cmp
jno
pshufw
mov
lahf
adc
lock
adc
cmpsl
xor
sub
les
inc
mov
hlt
fcoml
dec
inc
fidivrl
out
jge
pop
or
mov
inc
adc
cld
mov
and
mov
xchg
out
test
adc
test
xchg
cwtl
adc
and
jo
dec
cmpsb
in
push
int3
int3
leave
enter
les
les
cmp
mov
cmp
mov
in
mov
sbb
push
cmp
xchg
lods
sub
dec
inc
push
sbb
add
shlb
xchg
and
mov
mov
cmp
sbbb
pop
fs
ja
jo
jmp
push
sbb
adc
pop
mov
ljmp
fdivrs
hlt
sbb
inc
add
cmp
adc
mov
dec
jle
push
inc
imul
aas
hlt
push
addb
push
xor
sbb
lds
push
test
add
add
jnp
jb
inc
xorb
or
lea
aam
dec
lahf
roll
or
js
push
add
mov
pop
sbb
les
and
and
shr
xchg
rcrb
push
movsb
xchg
aaa
adc
dec
inc
sbb
jge
orl
mov
jnp
test
sub
lea
mov
rcl
jo
rolb
sbb
test
imul
mov
outsb
pop
jl
mov
add
or
pop
adc
ja
and
aam
add
fcoml
or
cmpl
adc
lret
push
jle
pop
jne
xor
in
inc
mov
fcmovne
push
pop
sbb
push
jmp
loopne
and
or
out
rclb
ja
mov
push
or
lcall
sbb
xor
xor
fisubs
mov
or
mov
sbb
sbb
mov
add
mov
push
scas
in
ret
out
sbb
jl
and
or
push
adc
btc
jp
sbb
mov
ss
adc
test
push
cwtl
lds
push
movsl
jno
or
rcrl
pop
lods
mov
xchg
pop
insl
shr
into
push
pushf
mov
cmc
shrb
adc
mov
inc
adc
sub
push
push
or
pcmpgtb
push
push
xchg
add
iret
sbb
iret
mov
or
pop
inc
shlb
jno
repnz
cmc
jno
test
jb
pop
push
sbb
jns
sub
sbb
cld
mov
add
cs
rolb
jo
push
sbb
xchg
pop
nopl
adc
xorl
cmpsb
sub
testl
mov
clc
add
add
rclb
cmp
or
test
pop
subb
lock
ret
loopne
sbb
pushl
xchg
dec
inc
and
and
pop
das
xchg
adc
mov
add
sub
ds
pop
ret
or
add
mov
andl
into
movsb
repnz
aaa
cmp
stos
xorb
or
clc
and
xor
cmp
jge
fidivrl
pop
hlt
je
push
push
pop
sbb
sbb
test
xchg
add
pusha
lock
jp
bound
adc
and
cld
lock
sbb
ja
mov
imulb
pop
mov
jmp
sub
push
xor
push
sahf
sub
mov
aas
andb
outsb
push
xchg
stos
jmp
and
push
and
dec
mov
pop
and
inc
jg
mov
and
jnp
add
jo
pushf
std
daa
ja
sahf
fstpt
and
xchg
add
cmpb
incb
imul
pop
or
push
clc
fwait
sub
cltd
test
les
jo
xchg
into
push
cmp
nop
aaa
jnp
scas
sub
pop
sub
cmpb
sub
adc
xchg
dec
sbb
or
sbb
xor
inc
lret
ret
inc
lret
ret
test
mov
nop
stos
lret
or
jne
mov
stos
add
adc
xchg
inc
pop
xor
clc
push
insb
push
xor
dec
rcrb
cwtl
ss
pusha
insb
adc
test
arpl
movsb
mov
loope
inc
and
push
loope
fsubs
jne
loope
fdivl
sbb
pop
inc
sub
mov
adc
push
xchg
adc
inc
roll
push
sti
lret
push
push
scas
xchg
add
stc
add
sub
add
rclb
adc
test
or
dec
push
push
mov
or
cmpsl
mov
fsubrs
cmc
or
rolb
cmpsl
mov
fsubl
sub
push
aam
push
pusha
popf
cmp
or
and
add
sbb
sub
xchg
xchg
stos
dec
and
cmp
push
enter
cltd
jge
push
cmc
lock
inc
sbb
xchg
in
lahf
xor
jno
xor
xor
mov
testb
jb
cmp
cltd
mov
std
shl
sbb
outsl
inc
xor
pop
out
jmp
cmpsl
xchg
loopne
cmp
push
fs
mov
mulb
add
pop
dec
xchg
stc
pop
xacquire
xor
push
andl
jecxz
or
ret
push
sbb
mov
insb
sub
iret
sub
sub
push
in
sub
push
mov
jns
and
sub
mov
pop
xor
fwait
xor
ret
sahf
jmp
pop
ret
clc
lret
jns
pop
shll
pop
or
int3
inc
cmp
add
cwtl
dec
mov
adc
sbb
jecxz
lods
adc
inc
fistpl
add
pop
jmp
push
add
adc
out
mov
je
add
or
cmpsb
and
movsb
xor
mov
jo
rorl
adcb
mov
pop
aas
mov
jge
jge
adc
je
push
push
fcomp
push
fwait
add
jno
cmp
adc
ret
mov
sub
sub
and
push
sub
mov
sub
mov
adc
mov
out
pop
aas
mov
sbb
xor
or
push
stc
pusha
daa
push
lock
dec
enter
mov
dec
push
pushl
repz
dec
dec
in
adc
push
shrb
adc
xor
add
cmp
lock
scas
sbb
iret
push
les
push
inc
cwtl
pop
popf
push
mov
cs
fiaddl
dec
mov
jnp
xchg
xchg
lock
jns
clc
sbb
jne
mov
and
jns
or
test
mov
jno
jo
test
test
jl
xor
cmpl
setne
pushf
pusha
pop
rorb
jne
shrb
jge
sub
sbb
jb
push
mov
pop
out
jne
or
je
sub
mov
dec
push
pop
subb
mov
xchg
es
push
sbbb
inc
faddl
dec
dec
sbbl
pop
test
or
jge
lods
push
jne
or
xchg
cmp
outsl
cmpsl
push
inc
sti
test
add
lock
std
mov
rcl
pop
not
add
repz
add
mov
roll
push
cld
sub
loop
xchg
push
out
inc
out
push
je
push
inc
aad
add
fabs
xor
mov
mov
imul
and
pusha
scas
mov
mov
sahf
iret
inc
cmp
in
imul
xor
mov
dec
aaa
insl
inc
push
clc
jg
mov
or
les
or
stos
sub
icebp
ds
inc
int3
add
mov
or
fsubl
mov
cmp
loopne
or
cmp
insl
adc
mov
push
sub
test
xor
or
cmovnp
cmp
negl
and
jge
imul
adc
xor
add
or
mov
daa
sub
int3
mov
lcall
or
push
mov
dec
mov
mov
add
aas
inc
ret
sub
test
or
mov
mov
xor
inc
mov
sarl
add
jae
out
push
pop
dec
dec
push
mov
jl
jae
ret
cmp
jle
inc
mov
cmp
fisubl
test
pusha
ret
add
jp
mov
inc
mov
add
ja
movsl
and
cmp
mov
mov
add
or
mov
mov
jae
add
or
mov
mov
add
adc
fcompl
dec
scas
leave
sti
add
push
mov
filds
jge
push
and
lea
push
into
in
mov
lcall
daa
iret
gs
push
jne
loopne
sbbl
and
push
popa
or
inc
icebp
test
sub
cmpsb
and
lods
in
setns
mov
fcoms
shlb
cmpsb
cltd
fisttpl
dec
outsb
loopne
mov
out
int3
mov
add
push
iret
dec
test
out
push
add
inc
cmp
enter
pop
es
cmp
inc
sub
es
or
out
das
jnp
call
sub
or
shll
icebp
jmp
fadds
test
incl
push
lods
aam
lods
pop
data16
subb
mov
clc
jg
fwait
push
test
pmulhuw
sbb
and
push
push
mov
adc
or
iret
fcoml
in
pop
mov
outsl
cmp
loopne
mov
ja
cltd
test
or
mov
lock
xor
push
lods
sbb
mov
scas
in
push
movsl
imul
arpl
scas
fidivrl
xchg
add
movsl
add
sbb
adc
clc
sbb
cmp
stc
loope
aaa
insl
mov
push
add
in
push
js
call
and
sbb
addl
iret
or
sbb
add
dec
lret
repnz
in
iret
push
adc
pop
call
push
inc
std
or
or
or
mov
test
subb
sub
setbe
insb
rorb
cmp
pop
mov
and
repnz
insb
adc
add
mov
in
adc
mov
add
jbe
aaa
adc
xor
mov
adc
mov
shlb
loopne
cmp
scas
dec
mov
mov
mov
int3
or
out
rcrb
sbb
movsb
fcoms
lock
dec
lret
fadd
jo
in
mov
xchg
push
jo
mov
sub
pushl
call
or
out
ret
shr
movzbl
push
fisttps
adc
push
ret
push
push
inc
push
loopne
inc
mov
xchg
xchg
push
pop
inc
mov
mov
sarl
pop
add
jl
cmp
xchg
add
cmp
jbe
es
gs
xchg
add
mov
lahf
xlat
cmp
mov
ljmp
add
mov
pop
outsl
xor
mov
jmp
sar
xor
sarl
mov
inc
push
push
mov
cmp
jg
mov
dec
aaa
adc
jge
leave
lea
negb
pop
pushf
in
cmp
cs
enter
mov
or
test
push
jecxz
xchg
aaa
in
sub
mov
fnstcw
sbb
jmp
lahf
test
dec
ret
test
push
arpl
std
jmp
mov
push
pop
pop
cmp
inc
jnp
xor
and
or
call
add
or
jg
mov
aam
dec
in
mov
lea
lea
sti
cmp
jae
mov
incl
xor
xlat
and
scas
pop
add
jne
and
jmp
mov
mov
lea
pop
jb
cmpl
mov
cld
push
ret
in
add
imul
add
out
jo
cs
loop
cmp
jg
out
cs
repnz
mov
dec
inc
push
and
sbb
cmpsl
js
mov
add
ret
lcall
je
nop
add
mov
sub
xor
fidivrl
fwait
dec
add
lea
and
push
push
sti
mov
dec
push
push
adc
dec
cmp
and
xchg
add
lock
mov
inc
xchg
or
mov
cmp
orl
push
loope
mov
ljmp
or
xor
mov
cld
je
test
js
push
hlt
jg
in
jno
outsl
pop
dec
xor
push
dec
jmp
sbb
push
mov
inc
or
add
inc
mov
push
push
push
pop
imul
mov
add
or
or
mov
mov
pop
repz
push
or
adcb
ds
push
cmp
inc
mov
or
ret
shll
pop
daa
pop
push
jbe
rorb
add
mov
mov
fldt
xchg
mov
ret
cmp
xlat
sub
xchg
mov
hlt
add
mov
mov
pop
cmpsb
lds
mov
test
jo
inc
scas
jl
cld
add
mov
roll
fstl
rep
push
mov
jb
imul
or
pop
sbb
adc
or
add
xlat
std
add
or
add
scas
add
or
mov
mov
sbb
repnz
jnp
movsl
repz
mov
or
aas
lcall
je
push
sub
and
adc
repnz
mov
mov
sub
add
shl
sti
or
mov
xchg
sub
jmp
icebp
je
sbb
clc
jne
cmp
je
pushl
xor
inc
cmp
or
and
xchg
add
sbb
mov
add
push
ja
sbb
leave
push
and
mov
stos
out
xor
rorb
push
or
setne
rcrb
stos
sahf
js
ret
inc
inc
jne
outsb
pop
sbb
call
adc
pop
js,pt
test
xchg
jo
jg
mov
jbe
and
inc
pop
mov
rcrb
std
push
lock
idiv
ret
scas
xchg
adc
jge
popa
stos
je,pn
sbb
cmp
jne
cmp
mov
add
ficomps
xchg
rolb
stos
imul
lock
cmp
clc
call
xor
add
push
add
pxor
je
push
lods
bound
pop
add
mov
xor
scas
and
enter
mov
inc
cmp
test
or
js
mov
hlt
jecxz
hlt
sub
cmpb
mov
je
pop
aas
clc
add
sbb
xchg
sub
mov
xchg
xchg
insb
cld
cmp
lea
jbe
mov
mov
add
test
push
adc
push
inc
dec
mov
mov
int3
lea
ss
aas
mov
nop
mov
mov
add
mov
lds
cmp
sbb
push
fwait
push
mov
in
fucomip
cmp
ss
es
ds
mov
sub
pushf
nop
sub
xlat
jecxz
and
add
test
mov
clc
and
lea
xor
adc
lock
push
aad
cmp
int3
sbb
mov
in
sub
lods
add
pop
or
outsb
loope
lret
lods
mov
inc
or
cmp
or
xor
in
incl
or
push
pop
shl
sub
fildl
mov
xor
jmp
pop
imul
nop
adc
cmp
cwtl
xlat
jmp
push
sbb
mov
mov
inc
xchg
jmp
call
cmpsb
arpl
test
add
xchg
cmpsl
repnz
sbb
loop
test
aad
nop
push
xor
fldcw
mov
add
jo
push
jns
xor
inc
cs
mov
imul
shr
pushf
mov
mov
pop
test
inc
mov
push
mov
cmp
bound
in
cmp
xlat
mov
sbb
sbb
jmp
nop
cmp
fs
dec
add
or
aas
ljmp
add
adcl
inc
fdivl
imul
inc
pop
lock
pop
jp
and
pop
das
cmpsb
and
sub
push
ljmp
pop
and
rcrb
mov
mov
inc
sbb
cmpsl
pop
fldl
push
out
mov
cltd
pusha
add
inc
into
lcall
stos
dec
jns
mov
sahf
out
adc
imul
jmp
loop
push
int3
inc
add
push
pop
xchg
jns
dec
mov
loope
mov
sahf
pop
lret
sub
pusha
lock
mov
pop
nop
lock
xlat
gs
mov
adc
pusha
leave
and
clc
sub
inc
adc
mov
dec
popw
jb
lret
adc
sbb
push
xor
mov
mov
add
or
and
lds
mov
std
mov
xor
adc
pop
or
sbb
outsb
xlat
jo
mov
loop
inc
and
imul
xor
ret
and
cmp
jns
notl
push
adc
or
testl
or
gs
push
enter
sbb
or
push
and
pop
movw
sbb
sbb
sbb
rclb
jge
shl
test
loop
push
lcall
xchg
mov
icebp
jle
mov
and
enter
notb
cmp
adc
sti
fistl
or
je
cmp
popf
or
scas
sti
cmpl
push
cmp
mov
ret
shrl
pop
negl
sbb
add
add
cmp
add
push
pop
dec
adc
push
into
pop
mov
jge
adc
dec
fadds
insl
push
push
push
sahf
jne
data16
mov
sahf
clc
je
pusha
jmp
fisubrs
mov
push
pop
dec
je
mov
je
sub
sbb
push
and
dec
inc
dec
sub
jmp
mov
mov
loop
fldl
sahf
leave
jmp
mov
inc
mov
jecxz
jne
xchg
aaa
in
popf
pusha
xor
add
push
mov
xor
aas
add
and
push
pop
inc
inc
pop
pusha
xchg
add
mov
fldt
fcomps
xchg
or
pop
push
aas
bswap
out
mov
mov
sbb
mov
push
add
add
ret
jg
cld
mov
insb
push
xor
push
push
daa
movsb
in
sbb
jo
js
insb
jae
and
mov
popa
jg
dec
int3
sub
mov
rorb
jmp
cmp
je
cmp
movsl
imul
inc
sbb
leave
adc
fmul
pop
imul
cmpsb
sbb
fstpl
in
fstpt
jmp
sbb
fldcw
sbb
jmp
and
mov
xchg
sbb
or
pop
bound
lea
lods
rorl
pop
sbb
mov
es
std
mov
mov
mov
add
pushw
and
icebp
inc
sbb
jle
repnz
push
insb
fstl
lea
or
adc
sub
mov
or
movb
es
mov
mov
push
or
xchg
xchg
pop
ds
jge
pop
aas
ja
sub
inc
push
mov
mov
popa
cld
push
cld
pop
push
lea
push
push
push
push
add
push
lea
imul
dec
cmp
scas
jecxz
cmpsb
add
dec
mov
inc
test
cltd
fldcw
adc
ljmp
xacquire
push
pop
or
fists
adc
inc
ffreep
xchg
lods
jle
sbb
and
scas
push
je
xchg
scas
sbb
push
imul
aam
push
push
dec
xor
movl
in
xchg
ret
xchg
and
sub
adc
shlb
jbe
dec
adc
dec
adc
test
pushf
jmp
mov
jo
cld
jne
movl
dec
je
jno
jle
ss
jno
pusha
push
clc
and
pop
sahf
pusha
and
mov
repz
xchg
insb
pop
inc
sub
insl
pop
inc
insl
add
aas
repz
add
add
inc
dec
or
pop
mov
dec
das
mov
subl
imul
sbb
xchg
jne
stos
xchg
call
and
in
inc
adc
or
ret
lcall
sub
ja
cmp
xchg
fsubl
aas
arpl
push
cmp
push
mov
pop
test
push
push
push
xor
push
cmp
mov
loop
jl
sbb
push
sahf
pop
rolb
flds
mov
inc
jl
sbb
mov
add
jecxz
jbe
ret
xchg
inc
fadds
mov
mov
les
push
xchg
lds
sub
pop
mov
aam
inc
sub
fsubrl
in
lahf
push
or
movsb
ss
int3
push
jae
xor
stc
add
or
push
or
add
jle
cli
fucomi
imul
inc
or
ret
outsb
dec
aam
xchg
mov
adc
incl
mov
push
adc
mov
sub
xor
pop
fadd
add
xor
add
iret
je
lea
push
loopne
add
mov
or
mov
mov
out
or
pusha
cmc
pop
pushl
call
push
or
push
adc
adc
adc
mov
sub
jl
rep
or
sub
les
in
mov
ficomps
dec
lock
div
push
add
je
dec
push
pop
js
mov
int3
je
movsb
sub
sub
push
push
pusha
cmp
in
jle
shlb
in
cmp
push
mov
imul
adc
dec
cmp
jl
mov
dec
stos
subb
or
rcr
mov
pop
adc
lea
rep
push
in
push
or
cmpb
mov
sbb
jbe
pop
neg
sbb
dec
sbb
fldenv
shlb
xchg
arpl
xor
lock
movsb
in
dec
shll
dec
cmp
mov
mov
adcb
push
idivb
push
sub
jbe
xor
ret
je
mov
into
neg
notl
loope
push
push
lds
sahf
sub
jle
jecxz
adc
pushf
in
sarb
push
aaa
test
push
dec
fstl
mov
pop
dec
mov
and
addl
ja
dec
repnz
rorl
push
xor
jne
jmp
incl
and
or
adc
xchg
pop
insl
jo
pop
pop
sbbb
jns
mov
add
shl
adc
xor
idivl
xchg
data16
loop
jle
cmpl
jne
incl
push
cmpsb
push
mov
adc
fadd
in
int3
xorl
adc
scas
mov
ss
rcr
dec
add
dec
mov
cwtl
inc
cmc
add
pop
stos
inc
cmp
add
lahf
push
in
cmp
je
cmp
mov
ja
rcrl
push
lcall
shl
or
and
sub
xchg
push
adc
ja
sub
mov
push
js,pn
cs
lods
imul
addr16
es
xor
mov
movb
jmp
cmp
jne
data16
mov
fldz
xor
ds
cwtl
sahf
jo
movb
pop
mov
xchg
fistpll
mov
int
xor
lea
lea
adc
cmp
sbb
or
xlat
jge
push
mov
loopne
fisttpll
fimull
popf
sub
mov
mov
pop
cmp
sbb
dec
sbb
es
push
mov
leave
push
pop
aam
sbb
push
mov
cmp
iret
push
mov
pop
sub
push
push
outsb
cltd
add
icebp
and
jl
ljmp
jl
shr
add
add
lret
cld
ja
je
dec
addl
into
gs
mov
sbb
push
rorb
push
lea
cli
ds
xor
mov
add
addb
xchg
mov
imul
lret
jl
xchg
andb
in
out
jbe
xor
inc
mov
and
inc
jge
rcrb
das
cmpb
pop
lcall
aaa
pop
inc
ficomps
bound
rorb
inc
sub
icebp
mov
fmull
dec
pushf
push
out
out
xor
sbb
es
push
and
push
aaa
movsl
mov
roll
sub
xchg
mov
cltd
cli
daa
dec
pop
push
inc
fiadds
mov
add
jae
imul
jno
insb
inc
negl
movsb
popa
in
and
mov
mov
mov
andl
jge
pushf
outsb
int
adc
mov
fmuls
or
call
add
repz
or
adc
ss
test
jmp
mov
pop
xor
and
shl
pop
test
adc
sub
cmpb
loop
jg
xor
aaa
push
pop
cmp
add
pop
push
es
push
ljmp
sub
sub
push
push
jnp
iret
decb
adc
xor
and
pusha
aad
mov
das
mov
inc
lock
add
sbb
push
cli
or
push
icebp
jo
pop
gs
lcall
pop
xor
sbb
jnp
push
call
jmp
fsts
popa
add
jb
movsl
mov
sub
push
jecxz
call
xor
mov
add
out
jo
cmp
add
mov
mov
jns
pop
or
bound
xor
shlb
xor
daa
xchg
or
add
xor
cltd
mov
das
inc
and
lea
ret
sar
out
orl
jo
movb
clc
out
cmpsl
cwtl
mov
jge
mov
out
ljmp
idiv
push
mov
push
push
mov
pop
jno
push
ret
xor
idiv
xor
mov
jno
sbb
test
jg
mov
push
movsl
je
test
or
cs
push
pop
mov
loope
pusha
scas
mov
inc
add
pushl
scas
and
or
aam
inc
rorb
add
mov
out
jmp
fstpl
push
pop
insb
xor
rcrb
pop
sti
sub
clc
je
out
movsb
mov
inc
lcall
test
test
into
jp
xor
pop
sarb
test
dec
daa
pusha
js
xlat
pop
loopne
out
sbb
dec
fs
or
xchg
daa
cld
xchg
scas
arpl
mov
test
mov
lahf
xor
mov
movb
sbb
dec
lea
addr16
pop
inc
or
mov
je
fists
mov
dec
nop
or
jmp
jge
jmp
mov
hlt
fildl
jg
std
fisttpll
jns
faddl
sbb
sub
xor
out
addl
fdivrp
mov
sub
mov
lea
test
mov
inc
lock
movsl
les
cmp
add
repz
push
insl
sbb
or
clc
fidivl
jmp
push
jo
sbb
xchg
cli
pop
ja
jge
push
pop
mov
xor
jle
pop
movb
push
mov
mov
orb
and
stos
shrl
add
mov
aam
push
das
jne
inc
aam
clc
lea
dec
xlat
and
cmpsl
je
pop
andl
gs
jbe
fnstenv
je
or
inc
pop
and
xchg
test
jmp
out
xchg
stos
cmpsl
cmp
mov
pop
push
pop
pop
into
pop
leave
movsl
daa
mov
adc
ja
xor
sub
je
mov
add
add
in
sbb
inc
add
sub
repnz
mov
adc
int
repnz
ret
or
iret
addr16
dec
jns
and
cmp
jle
arpl
sti
or
sbb
push
movsb
sti
fldpi
adc
push
fldt
outsb
pushf
pop
ljmp
rolb
dec
adcl
movsl
push
out
push
mov
lea
push
mov
push
add
popa
divl
mov
add
lea
data16
adc
sti
das
add
mov
lea
push
push
push
xor
inc
cmp
iret
js
cmpsl
adc
inc
sub
rcr
aad
mov
sub
roll
add
sbb
jae
add
xor
hlt
imul
call
lods
mov
scas
dec
outsb
mov
pop
scas
sbb
xchg
add
adc
and
lret
pop
cli
jo
cli
cltd
lods
pop
push
dec
repnz
imul
cmovle
xor
and
and
movnti
movsl
pop
test
mov
addr16
inc
cli
and
dec
adc
dec
fisubl
cmp
aaa
and
mov
pop
mov
and
pusha
bound
sbb
sbb
push
inc
clc
push
mov
fs
incb
push
cmp
inc
sub
inc
sub
pop
xor
mov
clc
setb
test
mov
mov
sub
cmp
add
xor
sub
andl
push
lea
push
mov
push
cld
outsb
loop
mov
je
push
loope
jne
cmp
lcall
insl
push
add
or
mov
cmp
popf
push
jl
inc
dec
mov
incb
adc
dec
fwait
movsl
mov
call
push
sub
jecxz
xlat
mov
add
fstpt
inc
cmp
adcb
das
push
mov
jp
pop
mov
dec
add
cmp
lods
notb
mov
or
leave
mov
jp
fdivrl
jecxz
jno
cmp
addb
lock
cmp
add
icebp
xchg
adc
cld
xchg
das
mov
cmp
ljmp
pop
shrl
test
jne
jo
addb
out
into
aam
pop
bnd
fs
push
or
mov
pop
jmp
jp
mov
cmp
in
pop
jmp
push
adc
call
mov
jnp
repnz
clc
jne
add
pop
pop
in
sub
aas
sbb
push
movl
jno
mov
cs
fisubs
fidivs
ja
nop
adc
mov
pop
sbb
add
xor
and
lock
into
xchg
insl
or
push
jb
or
inc
out
ss
int3
mov
dec
lods
aam
aam
inc
add
add
xchg
jne
xor
cwtl
enter
pop
adc
enter
xor
push
push
enter
addl
push
clc
pop
add
call
lcall
inc
sarl
sub
arpl
pop
sub
jo
insb
fmull
aas
or
rcr
or
outsb
sbb
push
imul
les
les
sbb
in
pusha
sarb
pop
push
int3
sbb
scas
test
add
call
outsb
icebp
jle
gs
mov
adcb
mov
xor
data16
and
push
cmp
cwtl
pop
bound
pusha
add
xor
rclb
pop
jecxz
push
inc
mov
xchg
or
pop
lock
insl
scas
sar
outsl
pop
cmp
hlt
imul
pop
or
jp
lcall
insl
sub
int
or
sbb
or
adc
cltd
xchg
pop
cmp
adc
xchg
push
pop
lret
xor
imul
jp
adc
mov
daa
jp
jmp
and
out
pop
or
test
leave
adc
jne
loope
inc
out
mov
sub
xchg
dec
sbb
xchg
push
pushl
roll
mov
lret
jmp
dec
add
arpl
dec
cmp
mov
sbb
adc
xor
ret
je
icebp
dec
jae
sbbb
cmp
stc
mov
push
dec
mov
jmp
dec
mov
sub
and
mov
lcall
dec
add
dec
inc
pusha
inc
xor
movsl
jmp
nop
shlb
mov
or
fmulp
js
imul
cmp
sbbb
mov
push
pusha
jle
in
and
inc
mov
mov
aad
cld
mov
std
push
or
push
adc
xchg
lcall
and
out
mov
mov
mov
sbb
xor
jne
fsubr
pop
sbb
sbb
dec
dec
mov
cmp
in
mov
loope
mov
sub
inc
sete
mov
and
inc
push
add
push
and
push
xchg
stos
push
or
fmuls
jnp
cltd
or
cs
testb
les
sbb
enter
add
rclb
subb
mov
mov
ret
push
repz
add
mov
loopne,pn
sub
clc
push
lea
cmp
mov
add
cwtl
adcb
and
xor
push
mov
xor
adc
dec
cmp
add
and
pop
pop
mov
jno
mov
and
clc
fcoms
or
inc
enter
popa
popf
xchg
add
xor
fsts
ss
lret
shrl
outsl
mov
into
mov
daa
push
mov
or
jo
ret
mov
jg
add
sub
ss
mov
and
or
mov
outsl
mov
jne
and
sbb
jno
pop
repnz
pop
adc
dec
xor
mov
xchg
in
adc
cwtl
movsb
fwait
sbb
fldcw
lock
in
repz
dec
mov
xorl
dec
sbbl
in
and
imul
pop
or
arpl
movsb
shlb
in
ret
cmp
jle
sti
cmpsb
cmp
je
dec
xchg
mov
idivl
adc
mov
scas
or
mov
jno
mov
or
inc
fs
outsb
add
loopne
mov
jl
xchg
lock
dec
fnstenv
sarb
or
jg
outsl
movsl
jbe
movzwl
jp
push
push
cmp
push
jecxz
daa
aam
jb
test
adc
cmp
push
push
je
inc
fiaddl
adcl
mov
addr16
pop
pop
test
push
sbb
loope
jne
sbb
mov
jno
iret
adc
movb
mov
std
bound
out
push
rorb
xor
inc
iret
sbb
adc
push
into
lods
xor
in
enter
insl
push
or
and
or
loop
jae
or
into
push
repz
mov
and
mov
aam
inc
jp
mull
mov
add
push
add
notl
add
rolb
mov
inc
arpl
cld
mov
push
loopne
push
hlt
and
dec
adc
fildl
mov
push
mov
push
adc
loopne
icebp
fcom
ljmp
cmpsb
add
mov
sti
add
repz
sub
loope
jnp
clc
addr16
movl
lret
out
loope
inc
stc
xchg
dec
sub
add
icebp
inc
push
sub
and
icebp
mov
xor
xor
add
add
push
hlt
sub
repnz
ljmp
dec
mov
stc
add
and
and
adcl
push
inc
idivl
mov
arpl
xchg
je
nop
sbb
xchg
mov
shll
mov
mov
mov
inc
lea
shrb
jae
pop
or
mov
outsl
cmp
loopne
add
lock
test
xlat
popa
test
jmp
jb
xor
icebp
and
movsb
pop
inc
sbb
sbb
femms
popf
push
insl
stos
call
mov
inc
pop
or
js
sahf
mov
lcall
dec
sbb
inc
fnstenv
dec
jecxz
shr
cmp
int
sub
inc
call
es
mov
shlb
xor
or
mov
mov
rorb
sub
je
cs
arpl
cmp
inc
pop
in
lock
add
adc
push
imul
jg
dec
add
push
jecxz
inc
dec
cmc
cmp
pop
pop
xchg
jnp
or
test
dec
push
ja
jo
sahf
inc
inc
add
fistpl
mov
mov
xor
das
adc
rcll
inc
adc
mov
aas
sbb
xchg
negb
cmp
fstps
push
mov
pushf
xor
adc
js
sbb
adc
inc
or
xor
test
and
dec
sbb
pop
sub
out
mov
add
stos
mov
lods
rclb
mov
mov
cli
push
mov
sti
std
push
mov
fwait
or
rcl
pop
loopne
pop
xor
push
jnp
js
std
addr16
pop
sub
popf
jl
inc
lock
loopne
xchg
mov
ja
daa
popf
xchg
repnz
mov
out
mov
lea
add
jo
pusha
xchg
aaa
repz
lea
dec
cmp
dec
mov
xor
roll
cmpb
or
repnz
add
dec
nop
add
js
enter
mov
lea
inc
xchg
sub
movsl
or
pop
fwait
mov
mov
add
add
loopne
push
in
je
push
cmpl
sarb
dec
test
mov
sahf
or
sub
mov
sub
mov
leave
and
pop
shlb
call
neg
mov
sbb
mov
xor
jg
adc
cmp
inc
jnp
shrb
mov
mov
ja
test
or
addb
push
imul
stos
aaa
stos
push
or
clts
jns
push
roll
sbb
aas
xor
inc
pop
mov
push
orl
pop
lret
xor
movsl
jne
inc
xor
lea
outsb
out
subl
fnsave
xchg
sbb
je
roll
push
in
and
cld
jmp
pop
xchg
inc
fists
jne
push
jns
adc
or
dec
or
dec
and
test
xchg
pop
jb
pop
push
xchg
ret
imul
popf
int
out
inc
sub
push
mov
pop
and
adc
adc
add
mov
push
jb
mov
mov
or
jle
xor
add
test
mov
add
scas
pop
pushf
movzwl
sbb
add
xchg
pop
pop
mov
nop
je
fbld
fnsave
adc
das
xor
lret
adc
ljmp
jl
xor
or
stos
leave
jbe
rorl
mov
int3
jge
push
mov
lahf
ss
testb
adc
incl
mov
test
lahf
out
test
fs
data16
sub
push
arpl
jae
or
mov
cmp
xor
xor
subb
fstl
cmp
mov
fucomip
add
push
imul
psraw
lea
sub
notb
jae
cmp
adc
and
loopne
mov
push
out
mov
lea
push
mov
or
in
jp
or
cmp
add
out
insb
out
pop
mov
mov
xor
cmc
mov
inc
jl
mov
sub
cli
xor
sub
xchg
mov
shll
ret
mov
mov
mov
mov
mov
test
or
mov
xor
xchg
clc
jecxz
add
mov
add
inc
out
clc
adc
dec
inc
aam
or
dec
inc
jmp
mov
jmp
ss
jo
push
push
repnz
dec
sub
les
add
add
pushl
aas
jnp
sub
push
or
enter
push
mov
mov
xchg
or
clc
dec
xchg
pop
add
add
mov
scas
in
jl
aaa
loop
andl
sahf
fstps
inc
or
mov
mov
rcrb
mov
arpl
fisttps
push
adc
push
gs
push
rcr
add
jns
ss
add
xchg
jno
ret
adc
fwait
adc
aaa
les
imul
pushf
lods
xor
arpl
adc
or
pop
sbb
or
dec
movsb
pop
vmread
mov
ja
adc
mov
test
jae
mov
push
pop
ljmp
mov
or
mov
xchg
pop
mov
push
cmp
fistpl
add
push
or
mov
xchg
or
pop
loop
sbb
dec
and
pop
ret
or
out
stos
add
rcl
mov
and
int3
mov
subb
mov
push
inc
ret
dec
in
pop
mov
je
into
popa
pop
inc
mov
pop
jmp
jne
pop
loope
add
pop
das
pop
jge
xchg
je
add
daa
add
mov
rol
push
mov
dec
icebp
jns
pop
popa
testl
je
aam
cmp
dec
loopne
stos
insl
je
push
lods
and
mov
shll
push
mov
mov
pop
push
hlt
sub
sbbl
addb
add
popa
pusha
and
rcll
test
sbb
jnp
inc
xchg
mov
sbb
sbb
stc
shlb
outsl
xchg
xchg
mov
or
rcrb
scas
das
xchg
jno
cmpl
inc
mov
jne
push
pop
cmp
les
or
andb
ss
and
imul
mov
movsb
jns
sahf
movsl
adc
mov
jns
push
adc
aam
insb
test
stc
and
sbb
lea
and
pop
roll
and
das
sbb
or
mov
push
sub
shrl
xchg
mov
es
in
add
pop
sub
sub
push
repz
cltd
fsubs
sub
push
popa
movsl
or
xchg
xor
mov
mov
cmc
or
lock
push
add
test
push
sub
cs
test
jle
daa
das
xor
xor
adc
jge
dec
loopne
out
sbb
sub
mov
dec
nop
pop
into
in
aad
sahf
jbe
into
int3
xor
int
sbb
dec
or
fsubrl
add
xor
and
sub
nop
pop
insl
fdivr
rolb
mov
int
int3
sub
insl
sub
aam
fcomps
call
movsb
out
ja
push
mov
loopne
and
mov
pop
push
imul
mov
add
or
dec
dec
jb
loope
pop
adc
jl
xchg
push
rolb
sub
push
clc
or
add
mov
add
into
leave
sub
xchg
enter
mov
andl
pop
mov
shrb
not
mov
push
addb
data16
loop
bound
pop
and
fadds
cmp
in
push
xchg
cmp
sub
daa
loopne
and
or
or
xor
shl
or
xor
dec
jae
pop
leave
mov
sub
rep
mov
movsb
xchg
pop
or
sub
mov
mov
fdiv
add
mov
cmp
push
roll
mov
andb
jnp
or
arpl
cli
and
adc
in
xchg
cmpl
push
mov
inc
push
push
adc
in
mov
push
adc
int3
test
sub
fildll
ror
divl
push
inc
fld1
mov
nop
mov
lods
inc
or
and
mov
jno
mov
or
mov
sub
add
or
push
stc
sub
push
xchg
and
add
imul
mov
or
pop
dec
sub
mov
popf
orl
mov
push
cmpsb
call
mov
pop
cmp
jg
cmp
aad
push
sub
mov
popf
repz
and
mov
orl
ficomps
addb
adc
pop
cmpsl
adc
hlt
sub
push
sbb
or
out
jno
or
mov
and
jo
mov
cmp
cmc
loopne
js
adc
or
lea
js
cmp
xor
add
push
push
enter
mov
jae
testb
pop
lret
dec
loope
rorb
sub
or
incl
adc
pushl
push
mov
sbb
push
ficomps
lods
rcr
es
pop
stos
js
sbb
mov
ret
mov
add
push
lds
mov
gs
add
sub
pop
mov
pop
negl
cmp
mov
add
dec
movzwl
pop
jp
or
push
aam
or
push
inc
inc
or
or
rorb
push
or
orb
jb
fnstsw
add
jmp
lods
dec
les
add
push
sti
mov
int3
mov
xorl
adc
test
mov
pop
xchg
jns
inc
cmp
push
pop
cmp
mov
or
pop
push
push
jmp
add
test
sbb
ret
sub
nop
sbb
pop
jb
jmp
test
and
add
push
dec
in
lock
mov
push
sahf
or
and
jmp
ret
fsubrs
out
je
cmpb
push
aad
xchg
ds
stos
push
cmpsl
xorps
into
mov
xchg
loope
test
pop
aam
je
je
pop
das
inc
pop
hlt
push
pop
mov
lock
push
outsb
sbb
mov
ja
js
and
push
bound
xchg
cvtps2pd
push
test
push
mov
lods
push
iret
push
dec
fcmovnu
push
mov
lret
cmp
jl
insb
mov
int3
xor
sarl
pop
pushl
sub
cmp
jle
mov
cmp
jne
je
cmpsl
sbb
sbb
push
add
outsl
pop
stos
ljmp
mov
sub
jle
cli
dec
cmp
je
sub
jo
mov
push
loope
fisubl
iret
jae
outsb
test
jo
fstps
sti
mov
jl
sbb
dec
jmp
xorw
stos
cmp
pop
adc
movsb
mov
cwtl
in
xor
out
fldcw
fisttps
js
bound
push
dec
or
in
out
adcl
adc
dec
out
mov
fstl
call
mov
insl
xor
clc
arpl
add
or
movsb
jle
adc
lret
lock
add
test
add
add
add
mov
or
mov
lahf
out
mov
jbe
sbb
pop
xchg
cmp
xor
aaa
mov
or
jne
xchg
xchg
lock
rol
pop
inc
lea
and
or
and
xor
rorb
ret
cmpsb
mov
or
ret
jb
cmp
add
cmp
dec
inc
jo
outsb
push
rol
cwtl
mov
adc
lea
addr16
outsl
arpl
ljmp
mov
sbb
fwait
jnp
push
imul
xchg
insl
and
shr
push
imul
adc
add
dec
or
or
in
inc
jb
mov
push
pop
adc
adc
push
cmp
pop
sbb
sahf
xor
or
lock
aas
or
jne
or
sub
push
js
mov
sub
imul
dec
pop
push
and
jae,pn
mov
pusha
pushf
aam
dec
movsl
add
pusha
loope
faddp
jmp
inc
fbld
loop
jmp
mov
ret
shll
negb
inc
cmp
jae
pop
mov
cmpl
cmp
sbb
jp
inc
ffree
cmpl
cmp
push
icebp
adc
ja
push
pop
aaa
cld
fcmovnb
cmp
mov
inc
shl
jmp
adc
mov
sub
ljmp
sub
add
pop
sub
fisttpl
rcl
ja
lret
xchg
into
shlb
lss
movb
xor
fucom
pop
hlt
arpl
arpl
mov
inc
add
mov
js
mov
orl
cmp
call
adc
lcall
pop
fsub
in
mov
dec
adc
adc
push
push
or
push
dec
hlt
or
sub
test
jmp
imul
push
mov
mov
jmp
or
loope
ret
movl
push
repnz
xchg
dec
jmp
push
ljmp
jne
ret
cmp
lea
dec
popl
push
mov
cmp
je
ret
leave
icebp
dec
mov
add
pop
push
shrb
je
cwtl
mov
dec
fistl
or
or
mov
outsb
push
fisubl
inc
push
jl
push
sub
test
shll
loopne
icebp
add
xchg
lcall
out
sarb
mov
and
es
sub
cmp
sub
mov
cmpsb
lock
pop
ret
adc
lcall
and
shlb
out
dec
inc
jp
popf
mul
out
mov
gs
shl
push
dec
mov
mov
sub
bound
push
add
mov
cmpb
pop
out
jne
test
push
push
push
je
fdivrl
add
mov
int
pop
icebp
cmc
gs
sub
adc
movsb
mov
fcoms
xor
fbstp
mov
and
loopne
mov
call
dec
push
mov
mov
out
mov
movsl
mov
sbb
test
cmp
sub
addl
sub
dec
jnp
sbb
pop
mov
adc
adc
dec
dec
xor
and
cmp
xchg
inc
popa
call
cmp
sbb
inc
pusha
jns
daa
lock
add
movl
cwtl
mov
jae
fstpt
xchg
push
or
test
pop
shrb
lds
xor
push
mov
mov
es
fwait
mov
mov
sub
pop
sbb
shlb
jmp
push
sbb
or
jae
lock
push
movsl
sbb
je
inc
popf
add
mov
cmpsl
push
aam
dec
js
jl
add
repz
xor
inc
int
cwtl
push
inc
add
outsl
les
xlat
rcrb
push
add
push
decl
pop
jg
pop
jnp
add
mov
push
or
in
inc
sbb
add
inc
push
je
in
arpl
jo
push
pop
popf
in
dec
lahf
pusha
cmp
sub
push
xchg
rcll
mov
or
int3
inc
push
dec
xchg
ffree
inc
or
bnd
xor
mov
or
bound
popl
mov
inc
mov
mov
test
sub
push
push
jg
add
je
orl
decb
xchg
push
inc
movsl
insl
cmp
pop
or
push
mov
mov
lea
mov
hlt
xchg
mov
jg
or
mov
dec
cmpb
fwait
test
sbbl
es
mov
add
repnz
loopne
or
push
push
inc
lahf
cmp
push
dec
loop
shll
add
pop
imul
int
mov
mov
fldl
push
and
jmp
aam
cld
lea
add
add
push
mov
popf
test
scas
and
sub
sbb
movsb
and
xchg
sub
test
add
js
into
and
adc
lds
push
push
mov
sbb
jb
push
pusha
jne
pop
ret
pop
repz
imul
cmovge
add
bnd
mov
add
xorl
pop
xchg
arpl
or
push
xor
adc
repz
adc
and
ret
push
push
out
inc
xchg
pop
popa
pop
insb
xor
and
ds
mov
cwtl
fcoml
shrl
leave
lea
lret
scas
mov
add
push
hlt
enter
sub
cltd
fisttpll
mov
cld
push
dec
xor
js
dec
rorl
sub
movsl
add
cmp
daa
in
outsl
sbb
jae
mov
xor
xchg
aam
movsb
rcr
or
jno
mov
mov
jmp
aam
xor
jge
inc
lcall
ds
mov
xchg
out
stos
mov
lods
add
test
push
cs
imul
or
push
nop
loopne
insl
ss
mov
mov
and
mov
cmpl
and
inc
cmpsb
ret
sbbb
and
dec
inc
sub
pop
add
sbb
and
mov
jo
pop
arpl
shl
xor
leave
mov
adc
dec
iret
cmovle
push
push
pop
xchg
sub
ds
mov
push
sub
pushf
mov
test
sbb
jb
mov
int
sbb
xchg
fs
inc
lcall
or
pop
jg
sti
faddp
shl
adc
push
cmpb
enter
add
or
pop
or
pop
lret
ficompl
hlt
adc
fidivs
cmpsb
arpl
and
movsb
sub
adc
pusha
jb
sbb
enter
push
mov
std
lods
add
test
and
iret
xor
dec
adc
push
and
lret
jbe
int
inc
jg
stos
xchg
jbe
jmp
mov
push
testl
pop
and
push
pushl
mov
ficoms
jle
repz
or
adc
add
sub
pop
loope
and
aas
adc
push
mov
add
fadd
movsl
lcall
clc
mov
in
es
jp
dec
sub
xchg
add
xor
test
push
ret
rorb
arpl
xor
ja
push
dec
cmp
xlat
inc
cltd
jp
pop
in
in
cmp
add
pop
into
sbbl
lea
sbb
push
sub
xchg
sbb
movsb
adc
dec
sar
js
loop
jmp
mov
insb
outsl
insb
cmpsl
adc
add
add
sbb
arpl
jnp
or
ss
testl
or
push
es
fldl
mov
or
test
and
fs
icebp
lea
sbb
addr16
adc
jle
loope
outsl
test
pusha
jo
inc
insb
hlt
clc
add
jge
mov
mov
or
xchg
add
rcl
cmp
inc
pop
pop
inc
jo
aam
popa
inc
inc
push
aas
idivb
loop
sub
or
and
mov
mov
mov
mov
sbb
outsl
push
push
mov
loope
in
or
push
or
and
adc
sbb
xlat
push
test
push
movsl
addl
lret
adc
insb
adc
in
jae
mov
faddl
or
aad
int3
ret
jle
adc
push
xchg
xor
fimull
sub
lea
shlb
pop
jg
int3
lea
cmp
movsl
sbb
aam
lret
loope
jae
jnp
add
push
adc
jo
aaa
negb
mov
out
inc
scas
in
repnz
pcmpeqw
enter
mov
cmp
ss
push
bound
xchg
add
outsl
cwtl
mov
iret
fs
daa
int
adc
movsb
pop
fimull
aam
popa
mov
mov
adc
mulb
dec
rorl
repz
xlat
push
mov
sti
and
jnp
mov
sti
add
ljmp
jge
insl
adc
fldl
add
or
xor
lret
pop
mov
repz
dec
ror
and
and
fs
rorl
iret
and
jnp
stc
adc
adc
push
mov
in
inc
xchg
dec
dec
fdivrl
addr16
aas
and
and
dec
push
pop
mov
xlat
push
adc
test
outsl
stos
push
dec
push
aad
or
mov
mov
xor
clc
cs
mov
dec
arpl
es
and
push
test
mov
jecxz
mov
xor
sbb
mov
aas
inc
scas
in
cmpb
int3
das
jmp
lock
scas
pushf
push
or
outsl
fimull
xchg
jnp
orl
push
push
test
and
outsb
xchg
dec
js
adc
pushw
test
cmpsb
inc
pop
cmp
xchg
add
dec
mov
cmp
mov
or
out
mov
int3
fistps
adcb
test
test
ljmp
rorb
cmp
movsb
repz
loop
loop
mov
xor
rorl
xor
jle
sahf
cmpb
adc
inc
lds
daa
push
pop
push
or
push
jb
test
pop
mov
stos
mov
aas
fsubrs
add
and
cld
xchg
jle
cmp
jae
fistl
mov
fsubr
aam
out
orl
mov
loopne
or
mov
dec
push
push
jmp
shrb
push
cmpsb
ret
push
out
add
test
hlt
dec
cwtl
inc
insb
loope
out
movsb
jmp
loopne
jg
ds
rclb
dec
insb
push
push
push
mov
push
mov
sub
dec
jo
jmp
adc
xchg
cwtl
rorl
cmp
pop
push
xchg
add
xchg
data16
hlt
daa
cmp
ja
in
insl
lds
jge
aam
sub
test
adc
sub
pop
pop
xchg
sub
mov
jb
pop
inc
adc
test
adc
adc
sbb
clc
or
inc
ret
lods
inc
push
in
or
or
xor
mov
or
cmpsl
adc
and
xor
or
iret
adc
jge
or
sub
imul
mov
stc
adc
out
lcall
xor
imul
sbb
faddl
jecxz
and
dec
cmp
mov
loopne
lods
out
movsb
xchg
add
fmuls
subb
push
dec
mov
jmp
sbb
fistps
out
pop
and
aad
sbb
fdivl
and
mov
mov
cmp
mov
mov
jmp
jb
sub
jecxz
rolb
ja
js
movsl
ljmp
mov
jl
push
pop
aad
jecxz
jge
orl
lret
inc
add
push
ret
cmpsb
push
mov
push
in
push
sbb
rorb
sub
jge
or
call
xlat
clc
std
in
scas
pop
orl
jno
lea
call
push
mov
es
xchg
xchg
sbb
imul
dec
es
out
or
les
mov
xchg
and
inc
sbb
mov
daa
call
dec
dec
inc
mov
rolb
scas
test
adcl
movsl
mov
stos
mov
or
cmp
cmp
sti
xor
push
pop
sbb
mov
mov
mov
lods
addb
adc
add
inc
test
std
insl
push
add
or
hlt
mov
mov
icebp
xor
push
jle
jno
fs
dec
cmp
sti
or
call
xchg
dec
or
rorb
inc
test
cmp
mov
add
xorl
enter
mov
sub
push
sbb
cmp
adc
lods
push
out
stos
dec
jb
sub
xorb
jmp
roll
mov
cmpb
das
mov
cmpsl
jmp
movsb
out
orl
pop
add
dec
jo
jmp
add
rorb
dec
xlat
scas
sub
popf
jb
pop
shrl
cmp
adc
ret
movl
sbbl
xchg
cmp
dec
push
ret
push
push
inc
cmp
push
xor
dec
fwait
cmp
fstl
mov
jns
in
adc
adc
add
xor
icebp
xor
xor
addr16
push
imul
adc
js
sti
sbb
sub
inc
mov
and
shl
adc
aaa
adc
je
dec
jne
jo
int
loope
jo
clc
adc
add
push
sti
movsb
xchg
lcall
push
insb
and
add
loope
leave
fiaddl
xchg
outsl
cld
lcall
mov
cmp
je
xchg
lcall
das
xchg
divb
mov
xchg
mov
or
jge
jnp
arpl
pop
add
or
inc
movsb
mov
daa
xor
sub
cmp
jne
and
jp
cli
jb
lea
or
mov
add
jno
dec
outsb
or
jmp
lea
lcall
pop
lock
ja
xchg
ss
sub
andl
pop
je
mov
cld
ljmpw
and
mov
out
adc
test
xor
out
cmp
or
iret
mov
xorl
popf
dec
add
adc
outsl
orb
cmp
testb
adcb
adc
sbbb
sub
int3
adc
mov
dec
push
mov
aam
or
aam
or
cmpb
popf
loope
data16
pop
and
ret
or
or
xorb
or
dec
lea
push
jae
sbb
cmp
pop
xorb
adc
stos
jbe
aam
and
mov
dec
adc
in
and
lods
cmpb
mov
pushf
cmp
push
push
les
cmp
incb
icebp
or
jl
mov
mov
aaa
movsb
xchg
sub
nop
adc
push
shll
sbb
push
hlt
push
add
push
xlat
mov
adc
sbb
cmc
jg
out
and
jbe
add
adc
sti
or
pop
add
cwtl
das
add
push
adc
and
sub
and
pop
push
stos
inc
or
pop
or
jae
fs
add
push
mov
pop
lods
in
mov
jmp
inc
popa
popl
adc
adc
mov
inc
sbb
push
inc
movsl
or
loopne
cmp
jge
loope
xchg
push
adcb
or
imul
cmp
lds
test
inc
pop
out
movsb
mov
dec
add
popa
adc
sbb
andb
addr16
or
sbb
inc
js
es
jp
test
lods
icebp
sarl
adc
xor
movsb
mov
lea
rorb
mov
mov
and
xchg
sarl
pop
pop
ja
push
sub
ss
xchg
push
mov
or
push
pop
addr16
mov
jae
inc
sub
add
sbbl
mov
mov
sbb
into
jg
aaa
test
popf
mov
inc
cmp
cmpb
je
lret
loopne
inc
push
pop
pop
sbb
mov
cmp
fcoml
sub
push
and
push
sub
lods
popa
jb
xor
movsb
fdivrl
mov
sbb
ret
adc
sarb
or
or
push
adc
add
movsb
push
lods
gs
dec
mov
aam
sbb
pusha
psubsw
mov
or
jnp
loope
cmp
pushl
sub
daa
mov
sub
xor
sbb
inc
ficompl
nop
lock
push
add
add
mov
js
loope
xor
or
incl
rorl
adc
fsubl
xor
fadds
adc
loopne
inc
enter
xchg
cltd
popf
pushf
jmp
sti
or
cmpsb
mov
roll
subl
loopne
mov
test
sbb
inc
pop
adc
bound
je
mov
sbb
std
aaa
push
je
incl
jl
mov
mov
mov
jle
dec
lods
push
cmp
aam
dec
and
sub
xlat
dec
inc
or
addl
sbb
pop
push
mov
add
sbb
pusha
iret
lea
mov
jl
sub
cwtl
arpl
push
lea
jmp
dec
xchg
sbb
test
movsl
fbstp
sub
xor
adc
xor
mov
push
xchg
xchg
push
je
mov
aad
sub
cmp
mov
dec
cmp
cmp
mov
pop
lds
adc
mov
into
mov
adc
dec
pminsw
pusha
pop
std
mov
in
fidivl
or
movsb
and
push
adcl
lock
dec
cwtl
cmp
or
push
add
jle
or
inc
fadd
sub
cmc
jns
bound
les
das
push
aas
adc
sub
aas
dec
or
cli
insb
cmp
shlb
andb
inc
cwtl
add
pop
pop
loopne
mov
dec
jge
call
xchg
mov
jge
cmp
cmpsb
inc
sub
cmp
cmp
popa
sar
imul
pushf
je
mov
dec
fiaddl
lods
leave
aaa
leave
sbb
test
mov
leave
sbb
lds
xchg
sbb
xor
test
pusha
add
xchg
mov
or
push
mov
push
xorb
jecxz
inc
fidivrs
mov
push
pop
lods
xchg
bound
xor
sub
dec
xor
xchg
xchg
adc
loopne
add
fwait
movsb
repnz
addl
in
lods
add
orl
pop
mov
push
mov
dec
add
sub
sub
fwait
push
lock
in
movl
and
xor
xchg
dec
pop
add
sti
movsb
jb
and
xchg
std
aas
movl
sbb
push
pop
mov
xorb
xchg
inc
push
bound
sub
push
sarl
lods
xorl
les
dec
sbb
in
gs
push
imul
ss
push
sub
sbb
and
dec
mov
lods
stos
xor
dec
fcmove
mov
or
in
pusha
adc
shlb
icebp
push
int3
js
mov
pushf
es
sub
xor
lea
or
xor
mov
imull
jmp
ss
adcl
mov
mov
inc
mov
loopne
fidivl
subl
mov
out
ret
loopne
rcll
out
nop
out
sbb
clc
xor
sub
sbb
dec
lcall
ja
mov
jb
and
movsb
and
roll
mov
or
popf
pop
or
nop
lret
sub
mov
push
sub
leave
xor
pushf
inc
aaa
ss
mov
add
pop
dec
cmp
je
jae
jmp
leave
mov
adc
xor
jno
xchg
sub
jno
stos
adc
out
je
cwtl
pop
xlat
dec
inc
dec
enter
cltd
cmp
jge
imul
outsl
jl
mov
jne
lea
orb
int
inc
jg
mov
scas
shlb
nop
mov
push
loopne
push
adc
sar
mov
and
mov
push
sub
and
js
adc
movsl
sbb
push
movsb
push
pop
iret
push
push
adc
xchg
fisubl
push
dec
jb
scas
push
mov
orl
mov
les
icebp
test
adc
scas
mov
jecxz
int3
add
pop
sub
add
sbb
add
fs
pop
pop
mov
mov
push
jns
clc
int
mov
fs
cld
mov
cmp
jbe
decl
ljmp
pop
into
sub
lret
push
inc
setb
jne
mov
push
lahf
sbb
sahf
into
xor
jmp
dec
mov
mov
jmp
mov
sub
addr16
or
dec
sbb
cmovs
xchg
adc
test
pushf
test
test
dec
mov
mov
inc
push
pop
loopne
jnp
mov
mov
cmp
inc
xor
rorl
fincstp
lret
or
xchg
loopne
or
ss
push
dec
push
add
cmp
mov
jmp
mov
sub
mov
or
adc
sub
pop
dec
std
push
mov
push
adc
loope
inc
jmp
stc
xchg
lret
mov
testb
mov
xor
es
movsb
outsl
pop
adc
data16
mov
mov
xchg
subb
sub
jge
lea
adc
jbe
adc
adc
push
cmpsb
lock
xchg
mov
roll
xchg
in
xchg
add
mov
mov
push
add
push
test
push
and
push
xor
xor
call
sub
js
xor
daa
xor
test
adc
and
mov
lea
push
pop
movsb
enter
popa
das
push
inc
adc
aad
es
add
aad
in
push
test
out
lea
fcom
fdivl
and
subb
inc
xor
sbb
inc
cs
test
mov
in
sbb
add
xchg
mov
push
xchg
sbb
sbb
pop
sbb
mov
push
pop
cmp
jne
jb
dec
mov
jge
and
add
pop
push
xchg
sub
and
and
sbb
cmp
mov
cmpsb
popa
and
or
add
inc
enter
test
and
push
xor
mov
xor
out
inc
jb
and
sub
and
sub
inc
jb
jae
and
push
xchg
push
mov
dec
inc
pusha
lds
insl
addb
and
xor
pop
test
lea
ret
sbb
cmc
sbb
int
stos
roll
inc
add
je
inc
mov
and
or
add
cwtl
and
mov
sahf
sbbl
adcb
or
es
and
xor
jne
rcrl
adc
call
jb
adc
add
add
es
add
shlb
xchg
pop
rolb
and
push
popf
rorl
mov
push
les
sarb
lds
rcr
ja
and
ja
sub
clc
inc
pop
inc
je
repnz
shl
sbb
stc
call
sub
fstp
and
push
add
mov
sbb
leave
or
faddl
xor
inc
cmpsl
flds
mov
into
jae
jle
test
mov
outsb
out
js
jge
xchg
insl
or
jno
xor
xchg
and
in
or
cltd
nop
xchg
movsb
jl
fiaddl
add
ja
into
out
and
mov
mov
add
andb
bound
pop
dec
xchg
inc
outsl
leave
add
in
push
xchg
xchg
pop
mov
xor
sub
stc
mov
xor
mov
mov
jo
movsb
sub
jg
hlt
dec
fidivrs
enter
jae
inc
add
outsb
mov
jo
sbb
and
popl
sbb
loopne
ret
cmpsl
iret
dec
mov
insl
mov
add
sbb
addb
jno
cmp
sbb
sub
cmp
sbb
inc
fdivrl
xor
lock
cmpsl
and
mov
sbb
rclb
inc
xlat
dec
daa
stc
cmpsb
dec
adc
pop
pop
ja
inc
lea
or
mov
cmpsl
sbb
mov
lods
fwait
lock
mov
hlt
jp
jae
xor
insb
enter
mov
push
pop
jnp
mov
dec
mov
pop
mov
xor
add
mov
mov
add
loope
pushf
pusha
and
pop
ds
push
bound
rclb
inc
adc
pop
cmp
pop
cltd
xchg
sbb
xor
add
xchg
in
jle
mov
leave
insl
or
pop
or
and
lret
or
rcrl
cmp
or
stc
test
and
je
insb
mov
lock
xor
lret
pusha
sbb
mov
add
lcall
loop
dec
or
notl
daa
add
mov
jo
jmp
sbb
loopne
inc
jecxz
dec
push
lret
cmp
dec
iret
inc
nop
mov
ret
xor
int
mov
rcr
dec
adc
adc
lea
scas
rclb
popf
adc
jmp
jnp
add
orl
add
add
and
stos
mov
fidivrs
sbb
subb
fsubl
cmp
mov
pop
imul
cmp
mov
imul
loop
mov
fs
pop
aad
cmp
adc
leave
shr
adc
movsb
lds
fcomps
cs
addr16
inc
push
pop
mull
or
fstl
xchg
pusha
rcll
inc
lea
scas
lahf
sbb
inc
test
ret
sbb
mov
push
xchg
adc
adc
outsl
arpl
and
add
test
stos
lds
push
enterw
adcb
jb
insl
lea
inc
hlt
test
mov
int
add
xlat
inc
mov
or
or
push
sbb
mov
int
pop
sbb
push
xor
enter
call
fistpll
pop
pop
push
push
xor
sbb
fs
out
push
cmp
jno
push
push
loop,pt
test
sbb
stos
incl
dec
addl
mov
es
jo
adc
jl
arpl
mov
and
add
int
adc
cmc
add
xchg
out
adc
sbb
inc
dec
movb
popf
mov
or
mov
xor
pusha
popf
movsl
mov
dec
adc
sbb
xor
cmp
repz
inc
lcall
xor
xchg
sbb
cmp
in
inc
mov
je
adc
bound
adc
xor
mov
xlat
adc
mov
test
rol
sbb
jbe
pop
add
fldt
pusha
test
push
adc
push
js
gs
arpl
fmuls
mov
jge
sub
inc
sub
iret
clc
jg
hlt
popa
icebp
lcall
jmp
and
mov
shr
cmp
mov
cmp
jae
sbb
daa
jmp
insl
jge
pop
loope
jp
jle
jge
ljmp
ds
add
les
fstl
es
dec
dec
orl
shl
push
call
and
sub
cmp
cmp
inc
and
xor
shlb
inc
test
push
push
fisubrl
pcmpgtw
imul
data16
push
es
pop
xchg
xor
cmp
mov
cwtl
inc
mov
fiadds
dec
daa
inc
adc
xor
and
dec
and
xchg
lret
xchg
push
or
test
imul
lea
adc
cmp
or
push
jnp
pop
mov
push
push
pushf
es
ret
aaa
push
repz
insl
and
test
js
je
xor
xor
cli
popa
sub
pusha
lock
lea
xor
dec
out
xchg
in
mov
jbe
xchg
push
cmpsb
cmp
xchg
ss
stos
mov
adc
pop
fwait
xchg
rolb
sbb
mov
or
adc
dec
stos
dec
inc
int3
add
ja
mov
adc
cltd
jmp
mov
inc
pusha
test
jae
out
scas
lods
pop
inc
pop
dec
test
add
mov
cs
sbb
fildl
scas
icebp
push
les
mov
pop
data16
mov
fs
xorb
add
movsb
mov
jae
add
cmp
push
sub
mov
xlat
push
dec
add
movb
sub
pop
pop
add
sub
aaa
add
push
inc
add
insb
fstps
orl
mov
fstps
jnp
jo
xor
sbb
xor
fisttps
mov
or
test
movl
xchg
or
push
pop
pop
lock
xchg
subl
mov
xor
cmp
mov
push
or
lcall
movb
and
cmp
dec
sbb
insb
and
scas
ret
xor
test
js
xchg
arpl
push
daa
cwtl
and
scas
mov
insb
mov
cmp
push
push
push
lods
push
sub
mov
jnp
adc
jle
lock
adc
pop
cmp
push
push
or
movsb
jmp
mov
and
push
and
push
adc
lods
xchg
fisttpll
push
mov
add
and
add
int
add
cmp
out
nop
inc
jle
pop
mov
or
cmpb
dec
insl
movsb
sqrtps
cld
test
push
ret
daa
call
loop
sbb
push
push
std
icebp
mov
fcoml
sbb
addr16
or
push
out
ja
fisttpl
testl
clc
add
scas
jle
or
sub
ja
pop
addr16
rcrb
mov
rol
or
cli
aas
xchg
loopne
les
das
test
jne
add
pushf
jle
leave
push
lock
outsb
add
dec
sbb
inc
pop
shr
sbb
add
add
add
pop
add
bound
mov
cwtl
sbb
mov
sti
mov
mov
sahf
jno
repz
sarb
gs
imul
add
mov
sub
mov
sub
mov
adc
das
and
cmp
or
jns
sub
ret
mov
adc
xchg
inc
movsl
in
mov
movsb
ja
rorl
std
mov
leave
push
imul
js
test
xchg
imul
jno
loope
loopne
fs
test
add
in
lock
adc
test
sbb
mov
and
sbb
cmp
jp
mov
jo
test
adc
add
mov
lahf
fldl
rorl
cmp
jl
daa
cmp
push
dec
xlat
stos
adc
sti
incl
add
mov
rorb
arpl
std
scas
push
sub
js
movsbl
outsl
pusha
adc
cmp
jne
fucomi
bound
je
or
je
adc
jge
sub
insl
fisttpl
adc
hlt
fiaddl
cmp
mov
sbb
inc
mov
out
dec
ds
addl
shlb
push
lods
test
xor
fsts
ret
lea
imul
enter
ficoml
jne
pop
mov
xor
jg
loopne
lahf
sbb
adc
cmp
sub
dec
xchg
insb
mov
sti
sbb
je
test
imul
rorb
xchg
dec
jnp
mov
pop
jp
clc
pop
push
pop
cmp
mov
sbb
xchg
adc
lea
add
mov
test
pop
add
sbb
fwait
jp
adc
sbb
sub
ror
mov
pop
xor
inc
es
lds
jg
inc
cltd
lcall
fldl
sub
insl
mov
sub
aaa
lret
mov
sbb
and
inc
movsl
bound
cmpsl
push
fsubs
repnz
push
push
sbb
lea
pop
or
mov
mov
inc
pop
mov
cld
adc
lret
push
repnz
cmp
sbb
xorb
lret
push
inc
sbbb
lods
xlat
in
lods
pusha
xor
icebp
mov
ja
test
jne
andl
inc
test
push
sub
and
xchg
mov
push
push
and
daa
into
or
pusha
fdivp
aam
lock
dec
mov
sarl
jecxz
shrl
xor
jge
out
inc
mov
popa
xor
push
add
rcl
rcrb
scas
xor
mov
sub
mov
int
call
les
adc
cmp
test
fnstenv
adc
jge
mov
fidivrl
jnp
dec
call
xor
push
pop
movl
pushf
inc
or
movb
bound
out
int3
mov
and
movl
testb
xchg
xchg
xor
cmp
pop
loope
test
xchg
clc
sbb
lcall
xchg
or
or
sub
push
clc
add
std
inc
bound
mov
or
les
push
cs
or
push
shlb
adc
pop
lcall
in
cmpsl
sbb
adc
fs
inc
sub
inc
sub
pop
cmpl
adc
dec
inc
lea
jecxz
shlb
inc
or
push
jnp
les
gs
pop
jne
mov
add
pop
ret
dec
mov
clc
push
mov
out
mov
push
cmp
imulb
mov
and
sub
ret
cmp
add
bound
movsl
add
xlat
dec
adc
rorl
cmp
pusha
out
insl
orl
stc
dec
adc
push
and
add
mov
mov
and
or
sub
fisubrl
or
aam
sub
incl
loop
push
stc
push
add
pop
aam
notb
push
push
pusha
in
pop
push
mov
add
or
lcall
test
push
jne
sub
mov
nop
call
test
cld
and
es
push
cmp
jne
add
pop
sub
adc
jle
mov
pushf
xchg
or
cmp
mov
ds
pop
hlt
nop
xor
movsb
mov
scas
push
dec
mov
repnz
adc
insl
lods
xchg
nop
arpl
adc
pushl
pushf
imul
jmp
and
mov
mov
insb
shl
jmp
push
sub
ja
push
aam
xchg
jp
cmp
movsl
sti
xor
imul
jbe
inc
xor
inc
fwait
orl
xchg
test
pushf
ljmp
sub
lea
in
js
imul
mov
and
push
push
jnp
imul
cmp
jle
cmp
js
add
xor
add
jbe
adc
popf
enter
and
cmpb
inc
cld
add
jnp
hlt
push
cmpsb
push
pop
out
mov
inc
sbb
loop
std
ss
cmp
and
cltd
mov
xchg
out
pop
pushl
pusha
adc
xchg
mov
movsl
adc
lds
dec
sbb
or
xor
cli
add
sub
rclb
pop
loope
inc
pusha
movsb
cmp
add
and
pop
xor
xor
outsl
test
enter
add
mov
and
pop
xchg
mov
sarl
push
push
shr
cmp
inc
adc
dec
push
punpckldq
insb
addr16
hlt
outsl
push
test
pop
cmp
and
push
cmp
lcall
adc
adc
std
addl
jnp
add
test
mov
jg
rcrb
pop
rorb
push
push
adc
and
push
lea
mov
inc
push
xor
push
pop
fistpll
imul
mov
rorl
add
xchg
cmp
push
outsb
mov
mov
test
adc
mov
loopne
xchg
push
mov
sub
xor
cltd
call
dec
ret
cmp
sub
aaa
loope
pusha
das
add
mov
mov
in
xlat
inc
xlat
rcrb
inc
jp
clc
popa
sbb
imul
push
push
stos
mov
push
enter
outsb
sub
dec
inc
jmp
dec
inc
rcl
and
dec
mov
adc
in
push
int3
nop
arpl
mov
cmp
push
je
push
mov
jae
add
mov
dec
add
pop
mov
cmp
jg
or
sub
adc
or
pop
int3
cmp
sbb
je
int3
push
int3
pop
push
adc
jge
in
adc
out
sbb
push
jmp
bound
sbb
pop
xor
test
and
xchg
sbb
mov
test
xchg
inc
or
cltd
jb
push
sub
daa
dec
mov
push
jbe
cmp
je
and
sbb
sbb
jle
iret
and
mov
repnz
or
sbb
icebp
push
daa
cmpsb
add
incb
loop
pop
jnp
push
aam
fistpll
xor
dec
popa
cmpsl
add
decb
jge
inc
mov
cmpb
add
data16
sub
movsl
or
dec
jge
scas
jne
ljmp
fdivrs
xchg
jno
sbb
into
aas
inc
push
ret
adc
push
rorl
xor
jl
push
bound
mov
xchg
push
loopne
push
lock
xor
push
inc
loopne
nop
adc
scas
lret
mov
bound
jge
fstps
push
pusha
mov
insb
xor
lret
or
push
inc
ss
popl
sub
dec
and
push
fildll
jne
mov
mov
jle
add
mov
hlt
sti
cmpw
sbb
aad
adc
jp
sbb
add
ljmp
mov
pop
mov
add
sar
sbb
push
je
mov
into
pushl
pop
dec
jecxz
mov
xchg
sbb
jo
add
push
pop
or
sbb
mov
aas
fwait
xchg
mov
push
sahf
ret
dec
mov
dec
dec
dec
push
add
jp
sub
jmp
cmpsb
aaa
add
jae
or
mov
sub
mov
jnp
add
pop
or
inc
test
testl
sbb
cs
add
cmp
add
add
subb
mov
sahf
mov
ret
in
cmp
xorl
adcl
push
add
nop
pop
push
mov
je
cs
mov
sar
and
and
pop
mov
loope
mov
ret
sti
cmp
jne
jb
fs
push
xchg
add
pop
push
in
jmp
pop
push
pop
push
dec
xor
push
xor
push
push
fdivl
and
jle
leave
test
divps
insl
pop
adc
sbb
mov
push
and
je
lds
mov
roll
pushf
push
psllw
iret
adc
test
enter
add
imul
or
xlat
mov
fwait
inc
jge
enter
movsl
push
mov
scas
mov
sub
aad
or
or
stc
jmp
inc
mov
pushf
adc
add
push
xor
dec
adc
cmp
xor
mov
xor
ss
lock
push
test
adc
leave
pop
shr
mov
cmp
or
ds
inc
iret
mov
or
nopl
or
xor
add
inc
arpl
cmp
push
add
adc
adc
test
sbbb
dec
enter
mov
push
mov
imul
insb
cli
adc
xor
or
sbb
enter
push
sbb
add
mov
add
dec
cmp
cld
pop
loope
pop
xor
or
sbb
daa
scas
mov
or
cmpl
pop
jo
or
jp
leave
add
and
leave
dec
pop
adc
mov
fwait
imulb
mov
mov
pop
or
imul
mov
jp
std
push
imull
gs
pop
inc
hlt
sub
lea
mov
jbe
pop
xchg
into
push
mov
ret
inc
dec
pop
jne
inc
push
mov
test
loope
int3
dec
dec
xor
or
fcompl
pop
or
je
push
and
cmc
scas
push
movsb
mov
dec
mov
je
lods
adc
mov
in
push
dec
jo
sub
add
dec
testl
jb
loopne
mov
ret
push
icebp
fcoml
and
in
aad
dec
mov
sbb
pusha
inc
adc
adc
loop
mov
mov
or
mov
ret
inc
xor
es
jbe
psubw
mov
push
ljmp
cli
dec
adc
or
and
jmp
and
push
loopne
jo
add
ds
inc
mov
inc
add
clc
arpl
jbe
jno
push
sub
aaa
mov
les
mov
push
push
sub
cmpsb
icebp
and
mov
push
jecxz
mov
sub
shlb
rclb
aaa
add
loope
movsl
cmp
jmp
push
push
das
dec
pusha
lret
sbbl
jbe
inc
jmp
adc
sbb
xlat
dec
push
aaa
mov
mov
dec
sbb
fdiv
in
push
ljmp
pop
jmp
scas
xchg
add
adc
mov
in
inc
mov
orb
xlat
cmp
negb
nop
xchg
xor
fs
xor
sbb
or
and
sbb
jnp
push
loop
add
push
pushf
and
adc
add
sarb
sbb
push
push
push
mov
dec
clc
pop
aam
mov
cli
mov
call
add
js
test
jo
xor
iret
xor
dec
inc
inc
aaa
imul
mov
add
test
std
dec
push
inc
sahf
dec
inc
inc
dec
and
mov
test
scas
test
fdivs
repz
and
cmp
sbb
sar
aad
push
jne
sub
sbbl
test
inc
inc
add
loop
and
mov
pop
fwait
jp
ret
icebp
int3
clc
mov
test
mov
dec
push
repnz
sahf
test
jmp
daa
mov
loopne
ret
jae
mov
adc
xor
jl
outsl
incb
int3
orl
in
jmp
dec
mov
enter
inc
int3
mov
ror
roll
dec
dec
jns
add
insl
push
enter
inc
jle
pusha
call
test
mov
inc
loopne
ljmp
adc
repz
push
stos
lret
call
iretw
dec
push
xchg
add
lods
mov
and
sbb
cmp
or
stc
or
lock
dec
lret
mov
insl
push
push
ss
dec
pop
in
and
rolb
cmpb
stos
mov
add
lret
in
in
push
inc
or
in
mov
mov
test
aaa
mov
adc
mov
adc
iret
es
ljmp
sbb
cmpb
add
dec
cmpsl
adc
push
mov
pop
adc
sub
cmpsl
xchg
xor
lods
cltd
shlb
pop
out
push
jne,pt
cmp
mov
or
sarl
mov
mov
push
dec
inc
adc
xor
pop
cmpsb
std
sbb
shrl
cld
mov
mov
stos
add
shr
lahf
or
and
rclb
jae
les
pop
stos
jno
mov
sti
cmpsb
pop
lods
scas
push
push
push
push
add
aaa
xor
jnp
sub
lods
or
adc
ret
std
incl
aaa
ret
mov
and
pop
or
adc
cmp
jmp
stos
cmc
mov
push
jg
lods
push
repz
cmp
out
inc
cmp
dec
pop
mov
mov
push
inc
sbb
mov
pop
and
loopne
rorb
addb
pusha
xor
pop
xor
or
dec
and
push
or
or
js
or
push
mov
mov
sub
xor
and
jmp
cmp
jne
xor
shrl
nop
fsubrp
scas
shlb
jmp
ss
shlb
imul
push
dec
add
jne
push
jle
adc
jae
xor
jle
push
pushf
inc
cmp
or
out
or
pop
fmulp
mov
cs
seto
jne
pop
clc
neg
or
push
aam
add
into
jge
adc
int3
ret
rol
cmp
pusha
daa
jge
jbe
in
sub
mov
shl
jl
inc
pop
insb
or
xor
inc
rolb
sbb
les
push
gs
mov
lret
xor
insl
jne
jecxz
inc
mov
xor
repz
addb
imul
movsl
test
or
lret
cmp
out
add
pop
inc
add
lret
cwtl
dec
lcall
ja
rep
jb
subl
inc
inc
cmp
inc
mov
xchg
and
mov
aas
xchg
adc
inc
mov
push
add
adc
and
add
and
mov
dec
sub
inc
fs
push
sar
jno
jmp
xor
push
dec
cmp
mov
js
jo
pop
sub
outsl
adc
sbb
adc
imul
adc
ss
pop
cmp
das
and
dec
flds
popf
pusha
jno
mov
jo
or
loope
js
pop
cmc
mov
bound
clc
or
and
lds
and
pop
and
test
or
arpl
jnp
pop
sbb
aas
out
pop
sbbl
lea
mov
ffreep
sub
add
sub
adc
shl
and
add
movsl
pop
stc
sub
dec
ds
divb
stos
scas
sub
or
mov
cltd
mov
dec
loopne
loope
ljmp
mov
inc
iret
lea
xchg
and
clc
or
aad
and
pop
inc
add
or
repz
push
jb
sub
sub
leave
xor
xor
or
push
mov
xchg
cmp
adc
out
pusha
add
cmp
and
mov
add
add
mov
adc
mov
mov
mov
dec
enter
or
add
addl
mov
ret
dec
mov
xor
test
pusha
loope
stos
or
mov
push
fcmovbe
jp
mov
add
test
arpl
inc
lea
addl
pop
push
in
adc
pop
fistps
lret
pop
nop
adc
and
popa
sbb
sbb
add
addl
or
push
jle
or
shlb
bound
movl
adc
push
xchg
loopne
adcl
nop
and
dec
or
adc
mov
addr16
stos
and
iret
mov
rolb
push
jmp
push
dec
jmp
imul
push
sbb
mov
adc
cmp
inc
test
cmp
mov
fcmovbe
inc
push
dec
xor
xlat
sub
lods
xor
movsb
sub
sbb
sub
movsb
movsb
stc
or
sbb
pushf
adc
aaa
xchg
dec
es
xchg
movaps
bound
mov
popa
es
iret
insl
dec
sub
cmpsb
sbb
sub
cmp
add
fcomps
adc
aad
and
jbe
cltd
sub
xchg
mov
xchg
inc
push
lahf
mov
jmp
adc
add
sub
xchg
scas
lods
andl
sub
jg
lret
and
stos
or
mov
cli
call
dec
lock
sub
mov
lock
jnp
sub
or
and
lcall
jmp
arpl
and
xor
icebp
aad
sbb
jo
xchg
add
daa
push
dec
cli
push
popf
cld
icebp
mov
inc
adc
out
in
in
cmp
push
ss
inc
aas
movsl
fdivl
mov
lods
pop
sbb
rolb
add
hlt
or
mov
mov
sbb
sub
mov
sub
dec
xchg
je
test
lea
outsb
sub
shrd
or
jb
or
mov
pop
gs
xor
add
or
test
mov
and
jae
rorl
or
dec
data16
and
adc
es
push
xchg
ret
add
gs
xchg
fisubs
push
xchg
out
inc
xchg
fcom
jno
popa
das
aaa
lea
and
ss
and
adc
mov
dec
insl
mov
and
add
add
pop
sub
orl
adc
sub
outsl
adc
popa
or
and
mov
or
cs
icebp
subl
cmp
fcoml
inc
sbb
fs
mov
rcll
cmp
xor
pop
iret
dec
sbb
rcll
and
mov
dec
sub
or
mov
mov
aam
push
stos
sbb
push
pop
or
aam
movsl
imulb
sub
adc
push
pop
bound
adc
arpl
xchg
sub
mov
xor
adc
sub
in
push
pop
fists
loope
xor
cmp
mov
fs
mov
faddl
cmp
push
iret
inc
dec
push
and
mov
push
pop
jp
or
push
and
mov
aam
clc
mov
adc
xor
xorl
mov
adc
mov
test
loope
add
movzwl
popa
xor
pop
call
sbb
mov
xchg
inc
outsl
filds
inc
loope
inc
sub
inc
or
inc
jbe
push
pushl
sarb
push
mov
push
subb
xchg
insb
loop
outsb
daa
adc
push
ja
or
xchg
arpl
xchg
cltd
push
push
adc
jmp
fdivr
je
ss
loop
leave
add
and
xchg
push
mov
cmpsl
rolb
cmp
mov
or
or
pop
inc
jg
xor
aaa
mov
sub
push
pusha
sub
movsl
cld
or
rorl
sub
inc
ds
push
push
loopne
or
push
xor
jmp
mov
prefetcht2
sbb
dec
cli
xor
pslld
add
inc
adcb
imul
adcb
clc
and
push
sbb
pop
pop
dec
inc
or
xchg
mov
and
nop
sbb
sub
addb
cmpsb
les
push
test
mov
jno
push
mov
js
jbe
pop
pop
mov
pop
mov
mov
sbb
cmp
cmp
int3
and
pop
xor
pop
add
fiadds
outsb
xlat
or
arpl
scas
jno
adc
das
les
add
xor
inc
mov
sbb
cmp
paddq
add
push
dec
sub
outsl
test
shlb
lods
loop
adc
sbb
inc
dec
dec
fbld
fdivs
add
ss
sbb
dec
pop
loop
xor
cmpsl
scas
pop
arpl
push
adc
mov
dec
inc
ss
test
or
lds
add
xchg
sub
loop
jl
es
divl
jbe
or
xor
push
jmp
mov
jp
iret
push
sbb
and
mov
mov
jmp
mov
sub
jae
in
xchg
xor
jno
inc
adc
fistpll
sbb
jp
cli
add
ret
inc
es
pop
jb
pop
and
sbb
xchg
cmp
aaa
or
jp
es
xchg
sub
jb
push
inc
dec
adc
adc
sub
jmp
test
sbb
mov
dec
inc
jge
mov
cmp
mov
rolb
sbb
sbb
int
cmp
pop
dec
ss
push
ja
out
mov
push
test
adc
loope
sbb
hlt
iret
nop
sub
ds
imul
add
and
in
and
repz
mov
lret
cmp
or
out
mov
mov
test
mov
ja
outsl
pop
subl
lock
les
and
mov
push
sub
mov
adc
mov
xor
fcomip
xchg
fisubrs
mov
cwtl
cwtl
inc
fisttps
adc
jb
in
and
fisubrl
pop
aad
xchg
scas
jp
sub
and
shrb
popa
pusha
cmpsb
jmp
and
out
adcb
xchg
pushf
and
jae
lds
and
dec
je
or
in
or
push
insb
push
iret
inc
sub
adc
add
test
inc
test
mov
iret
testl
mov
std
andb
sbb
inc
cmp
xor
dec
adc
push
js
lea
sub
pusha
ja
movsb
sbb
mov
int
xchg
pop
or
or
sbb
inc
js
xor
sub
ret
add
push
mov
push
jne
popf
push
outsl
sbb
adc
movsl
cwtl
ficompl
mov
popf
ficoml
adc
filds
int
push
mov
xor
add
out
bound
jne
dec
dec
or
in
lea
jle
push
mov
fucomi
sbb
xchg
outsb
sub
sbb
pusha
sbb
and
push
mov
or
add
das
into
mov
add
cmp
int
and
mov
lahf
rolb
push
arpl
cltd
lods
addl
mov
daa
sbb
mov
sub
xor
xchg
mov
cwtl
shlb
mov
and
les
lret
or
push
add
insb
leave
sbb
push
mov
scas
xchg
shlb
lock
mov
or
dec
inc
sbb
fdivl
inc
mov
sub
test
mov
adc
xchg
adc
adc
xor
and
or
pop
add
push
jle
jne
push
push
adc
fdivs
rcr
xor
push
adc
push
mov
push
adc
loopne
jg
push
das
adc
pop
pop
stos
sbb
jle
dec
inc
out
rolb
push
adc
jne
mov
or
sbb
int
shrb
mov
test
ret
push
pop
loopne
xor
inc
fcoms
push
pop
inc
mov
dec
push
into
test
jmp
cmp
imul
add
fidivl
es
cmp
sub
or
test
mov
ffreep
add
lock
push
shll
fs
push
sub
sub
loop
pop
push
push
jmp
dec
sub
cmp
sbbb
xor
or
test
arpl
mov
dec
imul
jne
stc
sbb
icebp
or
stos
shl
idiv
push
lahf
in
xchg
sahf
and
daa
or
push
gs
faddl
pop
outsb
dec
dec
in
sub
and
fwait
pop
jnp
adc
adc
loope
into
ljmp
lock
and
addr16
rcrl
cmp
inc
or
cs
push
js
sub
pop
adc
dec
rcrl
mov
mov
cmp
enter
es
bound
xor
dec
loopne
sub
push
sub
lea
push
in
xor
sbb
adc
sub
inc
sbb
test
push
leave
cs
hlt
adc
mov
popa
add
divl
shll
inc
in
push
push
mov
roll
sarl
and
pop
sbb
mov
add
pop
lcall
fwait
pop
xor
ficoml
adc
je
movsl
cmpsl
pop
mov
addl
dec
mov
xchg
sub
lret
faddp
mov
mov
fdivl
inc
cmpsl
and
sbb
push
jmp
sub
adc
aad
or
add
push
cmp
xor
test
inc
sub
dec
push
pop
sbb
and
in
pop
mov
lock
sub
aad
leave
or
mov
in
add
cmp
adc
out
cmp
mov
stos
dec
xchg
fcmovb
rcrb
and
adc
xlat
loop
mov
cmp
pop
xchg
or
clc
mov
lret
adc
pop
imul
ret
pusha
push
or
cmpl
xchg
lock
pop
cmc
mov
pop
sub
xchg
xchg
movl
adc
and
inc
movl
or
push
stos
dec
pop
and
pop
imul
sbb
es
and
sub
fstpl
push
or
inc
pop
mov
push
cmp
pop
call
adc
sbb
testb
push
mov
or
movsl
lea
pop
adc
sub
ret
arpl
and
sub
sub
rcll
ret
sbb
pop
lock
scas
sub
lea
das
shrb
rcr
sub
and
mov
and
shlb
xor
fsubs
mov
negb
push
fcompl
add
call
test
jecxz
lods
inc
and
cmp
movlps
sbb
push
jge
mov
and
add
inc
bound
add
jle
hlt
pop
jo
pop
mov
clc
fwait
mov
mov
cmp
jl
push
cmp
push
cmp
jle
cmp
repz
cmp
jp
push
cmp
cmp
inc
add
pop
mov
push
add
inc
jmp
rclb
movl
add
mov
stos
and
repnz
mov
mov
bound
inc
or
fs
pop
notl
jne
mov
lock
sub
cmp
or
adc
adc
mov
test
pop
adc
dec
dec
subl
cmpb
xorl
add
xor
hlt
and
fldt
mov
and
mov
stos
xchg
je
xchg
mov
xor
cmp
cmpsl
dec
js
add
xchg
dec
mov
adc
out
and
adc
or
subl
xor
fwait
jnp
int
cmp
add
cmp
push
add
sahf
add
and
cmpsl
fs
add
add
fs
stos
push
insl
iret
pushf
leave
add
scas
or
popl
dec
pop
les
or
fcompl
pop
jecxz
add
and
xchg
dec
and
insl
or
in
mov
or
and
enter
cmp
inc
add
out
arpl
push
shrb
and
movsl
dec
insl
je
add
add
popf
je
add
loopne
mov
cmp
mov
les
daa
cltd
movsl
adc
add
dec
pop
mov
cld
sbb
push
test
into
xchg
pusha
push
add
test
cmp
xchg
mov
inc
dec
or
xchg
dec
cmpsl
and
and
push
lcall
rcl
adc
push
add
xchg
popa
xchg
push
and
pushf
mov
pop
popa
hlt
pop
ret
cmp
push
test
push
inc
sub
xchg
xor
add
ret
inc
lods
sub
pusha
or
sbb
in
sbb
mov
imul
jg
sub
push
or
push
in
add
test
add
sub
inc
fwait
mov
push
dec
test
sbb
stc
add
nop
mov
xchg
pusha
in
or
push
outsb
and
sbb
pop
sub
fstpl
mov
push
lea
sub
nop
cwtl
mov
jns
movb
rcrl
pop
sub
cmc
push
sub
push
stos
sbb
fldpi
or
rclb
xor
and
in
cltd
cmp
rolb
adc
add
jmp
or
lea
adc
adc
andb
mov
enter
pop
add
inc
add
adc
lea
sbb
ret
push
test
cmp
in
jo
imul
aam
ds
xor
test
add
mov
shrb
push
xchg
jecxz
push
and
mov
adc
and
and
ret
pusha
enter
and
or
mov
cli
ficoms
nop
out
imul
pop
int3
popa
fistpl
fs
cs
sub
loopne
loope
mov
mov
stc
cltd
push
test
add
in
rorb
scas
bound
rcrl
and
lock
add
cwtl
dec
add
mov
sbb
sbb
sysret
lcall
or
pusha
mov
inc
add
fadd
push
pop
aaa
or
jp
je
repz
sbb
and
pop
or
lds
pop
aad
leave
icebp
sbb
cmp
or
fimull
pushf
inc
sub
ljmp
add
mov
rclb
add
inc
leave
test
dec
cli
addr16
sbb
jg
ret
sbb
daa
add
inc
jo,pn
xor
and
inc
and
adc
leave
std
enter
add
in
insl
xchg
mov
mov
adc
stos
push
inc
inc
lock
subl
in
leave
sbb
les
dec
adc
popa
testb
popa
jbe
jl
stos
cmp
jne
in
push
and
push
mov
lock
add
pop
add
fnstenv
or
push
add
xlat
pop
sub
xchg
add
test
inc
xchg
pop
add
adc
push
idivb
mov
jl
shl
adc
cmp
add
sbb
mov
mov
lock
sti
add
pop
ficoml
pop
adc
lods
lods
popa
sbb
and
push
imul
roll
cmpsl
fimull
add
aaa
xchg
mov
notl
adc
cli
aaa
lea
mov
es
xchg
test
mov
cmp
push
je,pt
cmp
jle
push
es
push
add
ret
jecxz
add
inc
xchg
mov
and
loopne
pop
pushl
jecxz
dec
les
cmp
movl
andb
js
imul
push
and
out
inc
bound
jbe
mov
mov
aaa
je
mov
out
inc
adc
les
in
pop
daa
loop
pop
and
or
xor
inc
call
idivb
mov
les
nopl
dec
push
adc
add
inc
lock
out
jae
push
push
fldl
push
sbb
cmp
clc
sti
in
ds
and
std
lods
jg
mov
fstpl
into
loop
mov
fld
in
mov
mov
mov
jo
add
adc
pop
fsub
pop
fsubrp
cmp
inc
loope
lods
rcrb
jns
divl
pop
cmp
pusha
mov
dec
ljmp
divb
mov
inc
adc
shlb
scas
scas
sub
call
push
push
dec
cmp
add
xor
shrl
mov
and
adc
stc
jge
cmp
lahf
fidivs
xor
ror
cmp
rorl
int3
dec
add
call
adcb
or
adc
cmp
sbb
jnp
ja
setb
or
xchg
loop
mov
and
and
ret
or
movsb
daa
mov
daa
add
push
lock
jnp
arpl
daa
movsb
fwait
mov
pusha
imul
lods
jmp
movsb
lret
ret
xor
clc
cmp
xchg
or
lock
stos
xor
sbb
cli
shld
add
ja
jb
decb
ja
lea
push
push
and
or
icebp
push
push
je
packssdw
rol
or
add
push
adc
mov
push
adc
push
push
pop
xor
daa
ret
or
popf
cmp
or
cli
push
test
ret
push
push
push
push
lcall
ror
test
mov
shll
inc
dec
push
dec
ss
sbb
dec
push
pop
mov
or
hlt
dec
test
ja
push
jne
jbe
and
ja
push
adc
aaa
test
mov
mov
je
mov
jb
dec
inc
cmpw
jne
cmc
out
repnz
inc
inc
cld
cmp
mov
xchg
dec
push
push
jl
mov
das
mov
popl
sti
jg
stc
std
shll
mov
ja
sbb
add
or
push
push
mov
jmp
mov
and
xchg
sbb
mov
pusha
sbb
lods
sbb
mov
lods
and
mov
pop
add
in
jno
sub
shlb
rclb
sahf
arpl
dec
dec
rol
mov
in
push
xchg
pushf
xchg
cmp
shr
push
sahf
add
dec
cmp
scas
sbb
mov
push
mov
popa
adc
fists
lods
test
outsl
dec
test
insl
gs
dec
or
add
inc
pop
pop
pop
sahf
sarb
inc
lret
adc
std
sub
pop
outsl
loope
mov
test
shl
adc
sbbb
mov
ds
test
movsl
push
cmpsl
orl
imul
and
gs
insl
or
mov
out
or
pop
dec
inc
loop
or
sbb
sub
pop
sub
sbb
xchg
pusha
jg
dec
lods
adc
push
add
push
pop
cwtl
mov
push
cmp
sbbl
or
xor
cmp
pop
ret
pop
push
xchg
sub
add
pop
xchg
in
popa
ja
push
sub
xchg
mov
into
inc
ret
sbb
popa
jno
xor
dec
jne
cmp
rcrb
nop
jmp
push
cs
xchg
and
ss
test
mov
or
push
mov
push
pop
lret
test
or
enter
and
adc
push
adc
and
outsb
pop
cltd
ss
ret
adc
jge
cmp
test
popa
add
je
ljmp
fcomp
or
cmc
dec
gs
ljmp
adcl
cwtl
pop
sbb
push
test
cs
and
adc
add
fadds
push
and
stc
and
adc
push
mov
add
ficoms
xchg
sbb
pop
pop
shrb
pop
sub
or
jp
jo
lods
bound
test
push
ja
sub
or
je
gs
jg
lret
ret
mov
pop
sbb
lock
cwtl
adc
mov
incl
jo
icebp
and
xor
mov
xorb
jne
push
sub
je
sub
dec
test
lcall
dec
jne
subl
xchg
scas
jl
repnz
or
and
or
adc
push
push
test
in
js
xor
add
jmp
push
in
rcr
cmp
imul
out
adc
push
mov
mov
out
out
jl
mov
movsl
push
push
jo
scas
push
and
and
sahf
pop
cld
xchg
fwait
xor
pop
push
inc
cmpsb
inc
arpl
jbe
mov
push
or
adc
es
xchg
push
sbb
sbb
addl
xchg
inc
sbbb
cmp
es
mov
xor
pop
inc
inc
movsb
stc
sub
cmp
clc
push
sub
ss
gs
pusha
inc
in
push
sub
daa
adc
dec
or
pop
mov
push
mov
je
pushf
dec
jnp
or
and
push
cld
mov
das
cmp
mov
daa
cmp
mull
jae
sbbb
cwtl
dec
jp
aas
std
rcrb
push
fildll
dec
xchg
dec
sbb
jo
ret
jo
popa
jg
dec
out
dec
lahf
in
aad
outsl
cmp
push
push
mov
pushl
cmpb
cmp
repz
repz
mov
icebp
sahf
out
ds
inc
jns
out
dec
pop
outsl
jns
jns
out
cltd
mov
sahf
mov
lret
xlat
loope
cmp
repz
add
pop
and
aas
xor
stos
orl
mov
roll
or
and
push
aad
ljmp
out
add
inc
mov
test
xor
cmpsb
adc
test
push
sub
sarl
int
shr
jno
mov
popa
fbstp
cmpl
sti
popa
push
shll
jmp
jl
mov
shll
xor
push
xchg
sub
sahf
or
and
aaa
push
cmp
popf
cmp
cmp
xchg
inc
ja
fimull
nop
or
out
cmpsl
popa
mov
nop
mov
mov
add
pop
adc
xchg
inc
xchg
movsl
shll
add
enter
cmp
push
sub
mov
and
jge
lret
push
dec
test
and
adcb
movsb
xchg
push
cmp
dec
push
ss
mov
cmpl
push
cwtl
push
cmp
idivl
sbb
js
rcll
cmp
and
mov
sub
add
push
rorb
cmp
push
loopne
lea
shlb
arpl
lods
movsb
js
rorb
add
imul
mov
scas
mov
cmp
mov
add
gs
push
nop
dec
xchg
or
add
or
ret
sbb
jo
and
dec
dec
jmp
or
les
cltd
rcl
popa
bound
adc
pop
dec
inc
cs
and
rclb
or
mov
dec
pop
lds
mov
adc
mov
bound
add
or
test
add
fisubl
faddl
add
fbstp
cltd
imul
sahf
and
mov
clc
mov
jae
jo
fists
flds
xor
into
pop
lock
push
arpl
inc
ror
cmpsb
adc
dec
inc
das
and
mov
mov
mov
stos
sbb
int3
incb
push
dec
or
jl
jo
sub
mull
or
fwait
je
mov
test
push
in
je
in
cmp
xor
std
loop
leave
dec
pop
add
add
or
sub
sub
or
xor
mov
mov
pop
mov
dec
cmp
push
btc
push
bswap
out
fidivs
push
popf
inc
jmp
enter
stc
push
cs
jl
das
push
push
pop
push
imul
xor
xor
xor
mov
cs
sbb
and
rorb
and
xor
mov
pop
dec
xor
inc
les
jbe
lea
test
xchg
push
jne
nop
adc
lock
cmpsl
jo
cmp
xor
in
sbb
in
or
int3
lods
test
sbb
or
out
in
leave
dec
mov
cmp
push
into
inc
xor
jo
ds
jl
jb
nop
and
sahf
add
cld
mov
cmp
mov
or
and
xor
sbb
xor
xor
and
enter
dec
sbb
nop
or
and
dec
test
or
sub
jnp
sub
inc
rcrb
sbb
paddq
and
subb
popa
test
cmp
nop
jge
adc
jmp
pop
or
clc
fdivr
inc
jecxz
ljmp
out
add
and
shr
or
fs
ss
aaa
mov
cmpsl
data16
xor
sbb
rorl
aaa
push
inc
outsb
dec
iret
sbb
mov
xor
xor
mov
xchg
adc
bnd
mov
sub
cmp
pop
rcrb
dec
cmp
loop
cmp
rcrl
pop
xchg
sub
push
adc
push
xor
add
xchg
and
dec
enter
in
xor
jo
test
sbb
nop
and
jmp
dec
roll
mov
cmp
bnd
aaa
adc
ja
adc
sbb
das
adc
xor
test
subl
pusha
loopne
add
xchg
jle
loopne
pop
mov
inc
movsb
jmp
rclb
inc
push
in
or
inc
pop
mov
nop
add
adc
inc
ret
xor
dec
ret
cmpsb
cmc
mov
sbb
sub
cmp
ss
lea
inc
push
xchg
and
dec
repz
inc
fs
add
dec
dec
add
xchg
inc
inc
cmp
jno
xchg
push
sub
lret
mov
bound
dec
sti
mov
jle
push
in
xlat
mov
inc
mov
loop
inc
adc
lods
rorb
jl
inc
pusha
xor
dec
sub
test
popf
mov
xchg
gs
push
and
data16
push
js
cmc
and
and
cwtl
nop
shlb
add
in
sub
dec
and
jbe
loopne
mov
sbbb
pop
out
push
jns
insb
push
pop
call
dec
call
ror
out
enter
jae
movsb
sbb
or
and
test
or
cmc
dec
bound
xchg
pop
fiaddl
xor
cmpsb
push
add
fistpll
andb
adc
fiadds
mov
inc
testb
mov
nop
and
pop
mov
int3
pop
jl
mov
mov
fildl
mov
loope
pop
lds
xor
push
push
repz
push
or
adc
fcmovbe
jbe
ds
lock
enter
enter
adc
adc
add
int3
aam
push
adc
jb
pop
xchg
push
sub
mov
mov
test
aam
adc
jb
nop
cmpsb
les
movsb
push
adc
push
jl
nop
fwait
or
cltd
nop
data16
mov
test
dec
inc
mov
sub
dec
and
xchg
fsubs
test
enter
xlat
push
inc
lods
inc
sbb
inc
xor
xorl
sbb
out
movsb
mov
je
push
adcl
push
push
inc
mov
inc
cmc
adc
or
adc
dec
push
inc
and
adc
pop
lcall
xchg
xor
push
cwtl
jno
lcall
in
xor
subb
sub
and
jo
inc
lcall
cltd
nop
pusha
push
pop
add
pop
mov
xor
outsl
pop
add
call
leave
or
adc
add
cmp
int
and
add
je
inc
cmp
cli
notb
vmovapd
pusha
inc
xchg
jno
add
push
test
sbb
add
add
dec
mov
mov
in
rclb
mov
pop
mov
data16
xchg
add
test
mov
cmp
inc
dec
cmp
shr
mov
push
add
dec
xchg
call
popf
sub
sub
ljmp
push
rclb
js
push
in
adc
pop
stos
pop
mov
push
das
jg
cmp
or
pop
lahf
push
ljmp
sti
jge
xchg
dec
repnz
xchg
cmpsb
out
adc
mov
xchg
inc
lcall
xor
push
loopne
fwait
xor
leave
push
pop
insb
dec
das
mov
xchg
dec
push
mov
out
rcl
pushl
sbbb
pop
inc
jmp
movsl
insb
jo
jne
rorb
inc
mov
pusha
sbb
fadds
sub
mov
gs
jbe
je
sbb
lods
push
lcall
push
mov
cmpsb
int3
ret
push
les
sub
push
sub
and
and
push
push
js
outsb
scas
push
and
mov
or
sti
daa
insl
and
xchg
mov
out
adc
push
sub
sub
dec
sub
mov
rolb
push
pusha
cmp
lret
xor
inc
add
mov
sbb
mov
jbe
adc
xchg
scas
xchg
push
push
aam
stos
rcrb
cmp
out
dec
add
mov
or
sub
daa
dec
es
addb
loopne
rcl
and
xor
and
jecxz
les
cwtl
jo
daa
mov
cmp
test
sbb
inc
pushf
add
xor
sbb
es
bound
je
cltd
push
adc
adc
adc
ret
adc
je
ja
punpcklwd
pop
xchg
push
mov
or
jge
inc
jbe
mov
pop
sti
fdivrl
jmp
lods
fldcw
add
sub
inc
inc
lea
cs
leave
aaa
jno
pop
inc
or
adc
or
and
and
arpl
add
inc
mov
jno
add
imul
jae
and
ret
or
push
push
xor
cmp
in
xorb
enter
loop
mov
popf
jl
jnp
fbld
es
jo
mov
orl
int
mov
push
mov
jbe
in
add
jns
inc
fmuls
into
xchg
cmp
cmp
stos
jl
fildll
dec
dec
aad
sub
lea
lret
mov
and
mov
or
xor
xchg
test
faddl
jl
je
mov
inc
inc
addl
sbb
inc
stos
idivb
inc
je
push
cmp
insl
insb
push
or
mov
lods
in
inc
data16
mov
lret
mov
jg
lahf
push
lock
addr16
push
addl
dec
push
test
fld1
adc
rcrb
mov
sub
cmp
jbe
pop
add
pushl
cmp
jne
inc
adc
jb
leave
xchg
loopne
jl
cmp
add
mov
mov
test
push
or
iret
jne
pop
adc
inc
rcr
ds
repz
jae
inc
adc
nop
cmp
sbb
decb
outsl
and
je
mov
dec
sar
xchg
mov
jmp
nop
jge
lahf
dec
mov
movsl
push
jp
test
jbe
mov
xor
sbb
jnp
mov
repz
mov
mov
adc
cld
jo
jecxz
sub
sub
push
mull
aad
aam
or
dec
sbb
imul
push
ret
stos
cmp
push
adc
dec
addl
push
adc
scas
sub
movsb
or
jmp
pop
or
xor
mov
sbb
sub
xor
shll
xchg
pop
mov
ds
icebp
dec
int
dec
add
xchg
loope
insb
pusha
adc
sub
in
cmpb
or
cmc
push
add
imul
inc
push
mov
aaa
xor
and
jg
je
mov
mov
or
and
mov
movb
movsbl
shr
mov
sbb
mov
and
mov
nop
inc
mov
jne
pop
push
faddp
cltd
cmp
xchg
add
ljmp
lahf
sbbl
jb
add
and
cmp
movsl
fs
faddl
mov
test
cmp
push
mov
mov
sbb
mov
std
add
in
stos
push
push
xor
sub
push
add
mov
or
imul
inc
lock
xchg
xor
inc
movsb
pop
cmp
je
dec
and
cmpsb
sahf
adc
fmull
jbe
xor
cmc
pop
shrb
jmp
pop
xor
push
sti
fwait
mov
add
xchg
jne
movsb
adc
pop
jno
sbb
inc
pop
sub
lret
inc
cmp
cmp
sbb
cmpb
fs
inc
sub
fiadds
pop
loop
sbb
cmp
gs
jne
xchg
addr16
and
mov
add
jo
scas
sub
in
or
xor
inc
rol
sub
imul
andb
adc
sbb
rclb
adc
aam
adc
xchg
xchg
push
std
sub
add
mov
imul
add
adc
gs
mov
push
and
or
cmp
add
and
push
sub
lods
add
dec
sub
dec
or
and
or
insb
icebp
sbb
or
xor
cmp
dec
cltd
add
adc
mov
pop
cmp
sbb
scas
mov
push
cmpsl
dec
xchg
jge
jo
orl
mov
shr
lods
adc
push
push
jno
xchg
adcb
push
pop
int
and
pusha
jge
xorb
push
xchg
mov
rdtsc
jb
xor
or
add
mov
adc
cmp
push
jne
and
cmp
lret
js
push
cmp
mov
outsb
roll
jnp
sahf
movsl
leave
or
pop
aam
xchg
dec
mov
pop
mov
and
and
jl
cmp
test
xchg
add
sarl
sahf
test
xchg
adc
sbb
mov
inc
xlat
jle
fmuls
cmpsb
mov
repz
adc
dec
ret
ss
mov
jmp
adc
rolb
int
sub
js
adc
mov
add
mov
push
push
or
xor
call
sub
xor
sbb
sub
fcoml
mov
adc
scas
adc
add
jnp
adc
imul
cmp
ret
lock
add
pop
enter
imul
and
stc
mov
and
lret
xchg
dec
xchg
add
sbb
sub
cmp
enter
fists
mov
negb
adcb
and
ficompl
sbb
cmp
sbb
and
jne
adc
push
jmp
pop
or
push
or
das
rcrb
scas
shll
or
fistpll
jg
pop
andl
test
inc
lock
outsl
insl
mov
cmp
clc
sub
push
sub
sbb
mov
and
je
sub
les
iret
ret
je
inc
mov
push
mov
cltd
loop
stos
in
push
inc
push
push
add
movsb
and
and
add
dec
add
das
add
pop
out
xlat
shr
mov
daa
dec
shlb
push
sbb
rclb
sbb
out
clc
pop
adc
in
jne
pop
push
sub
pusha
cmp
test
mov
mov
xor
jne
je
inc
fimuls
push
cmp
jl
mov
push
xor
mov
xchg
add
int
cmpb
shrb
in
test
adc
adc
lcall
mov
sub
cmp
add
cmp
sub
test
push
es
sub
or
lret
xor
xor
jl
jb
dec
or
pop
in
std
fmull
rorb
sub
sub
imul
sarb
xchg
nop
pop
push
sbb
ds
xchg
add
adc
sub
cmp
mov
stos
mov
or
les
dec
xchg
call
rdtsc
dec
add
dec
xor
or
mov
mov
lods
xorps
inc
subl
das
fmull
sbb
je
jge
lea
addr16
push
inc
dec
outsl
das
xor
nop
xchg
mov
or
addb
movsl
cs
in
insl
idivl
cmp
test
jne
es
pop
mov
gs
jb
jne
jno
pop
mulb
cmpsl
test
mov
sbb
or
add
and
fnstenv
and
mov
fs
xchg
push
sub
push
inc
cmp
push
lea
cmp
lods
clc
jle
sbb
mov
nop
out
sbb
shl
jmp
mov
call
out
fisubrl
lods
inc
dec
jg
outsb
inc
sub
adc
add
or
cli
jg
and
push
cmp
dec
mov
mov
jle
test
fmuls
pusha
pop
add
xchg
xchg
pop
push
fwait
inc
add
inc
or
inc
mov
test
adcl
mov
aas
scas
pop
add
pop
inc
inc
sbb
pop
push
cmp
adc
add
imul
jae
jl
and
push
push
push
push
pop
xchg
add
lods
or
fst
shrl
nop
add
fbstp
data16
cmp
adc
jne
out
popf
sub
adc
hlt
jne
jo
sahf
lahf
or
jne
or
push
or
sub
loopne
dec
or
xor
adc
inc
pop
mov
aad
imul
or
clc
lea
movl
cmp
dec
push
fildll
xor
fstl
mov
jge
mov
mov
pop
mov
fstpl
lea
out
lea
rolb
les
scas
sbb
inc
push
cmovs
movsb
jae
out
add
sbb
jb
xchg
cmp
inc
jp
push
repz
and
sbb
les
mov
or
pop
je
mov
int3
int3
pusha
lea
pop
fwait
or
and
aas
fsubs
pop
fwait
lods
jmp
adc
cld
popf
or
push
sti
loop
adc
sub
fcomp
sub
loopne
shlb
adc
imul
adc
mov
mov
adc
in
inc
cmp
xchg
xchg
mov
cmpsl
int
push
test
shll
ret
add
fcompl
push
or
dec
cld
inc
loopne
or
pushf
jbe
arpl
lds
xchg
cmp
mov
cs
push
push
sub
pop
orl
incl
pusha
mov
mov
lcall
and
int
fs
xlat
add
sahf
cwtl
into
xor
mov
lods
and
enter
into
fsub
fwait
sbb
ficoml
mov
add
xorl
fisubrs
cmp
sbb
sbb
test
into
jmp
push
or
pop
data16
insl
testl
adc
shlb
sub
inc
not
fmuls
rorb
int3
or
orb
inc
subl
jno
and
test
push
add
mov
adc
xchg
pop
inc
insb
sarb
inc
sahf
addr16
xchg
add
adc
pop
xor
pop
and
fldcw
or
jge
pop
fldl
add
sub
inc
dec
sbb
rcr
xor
xchg
push
loope
sarl
push
int
push
decl
pop
fwait
mov
and
add
cld
add
mov
lea
pusha
ret
das
cmp
xor
inc
cmp
and
nop
xchg
mov
mov
shlb
pushf
movsb
lea
push
lods
xor
cmpl
cs
ds
sub
mov
and
dec
push
jecxz
mov
loope
cmpl
pop
pop
pusha
aaa
dec
sti
xchg
inc
pushw
ds
clc
pop
sahf
popf
and
xor
mov
push
and
push
mov
add
loope
sbb
jne
adc
movsl
add
or
and
adc
lcall
bts
cltd
nop
inc
push
hlt
pop
adc
inc
push
dec
push
adc
push
nop
adc
sti
fwait
dec
mov
sti
sub
sub
xchg
adc
adc
sub
sub
and
scas
xchg
pop
xor
push
sbb
lcall
and
daa
adc
sbb
arpl
xchg
push
push
adc
pusha
rorl
es
and
inc
adc
mov
xor
mov
cmp
xchg
and
sbb
popa
or
jg
xorb
ret
adc
add
imul
sub
xor
shrl
popa
mov
sub
push
cmp
inc
adc
movsb
mov
add
jb
and
sub
inc
dec
sbb
rcl
addr16
leave
push
arpl
adc
xorl
mov
push
addl
add
dec
jle
jl
mov
out
dec
mov
pop
mov
jno
mov
or
or
pop
adc
call
hlt
mov
in
imul
shll
and
js
adc
inc
sub
aas
dec
jae
je
push
rolb
mov
push
aam
add
fisubs
test
jp
cli
lock
pop
sbb
push
pusha
and
xor
ljmp
into
int
sbb
leave
mov
and
add
add
shl
stos
sbb
je
mov
adc
add
sbb
jle
push
test
les
and
mov
cwtl
xor
add
xorb
loope
lds
jne
mov
in
mov
fadds
rcrl
test
dec
or
out
and
add
jb
popf
inc
aaa
and
sub
cmpsb
cmpsl
add
int
cmpsl
cwtd
lea
jge
jecxz
lods
shlb
in
mov
add
fmull
sub
push
pop
mov
mov
aam
mov
rorb
cmp
daa
popa
dec
dec
xor
add
ficoml
adc
or
mul
adc
jge
xchg
ficompl
sbb
repnz
xchg
add
and
adc
shl
mov
out
and
gs
push
xlat
add
dec
pop
ja
repnz
cmp
adc
mov
andb
pop
push
jne
shrb
cmpl
ljmp
mov
and
jne
mov
mov
sub
mov
cli
sbb
in
lock
fdivrs
xor
mov
aaa
xor
iret
mov
call
in
bound
sbb
dec
ret
pusha
cmp
cltd
daa
fdiv
insl
xchg
or
push
and
mov
and
push
cmp
movsl
repz
and
add
xor
clc
rcr
xor
mov
adc
cld
fwait
push
adc
adc
and
xchg
lock
mov
rcrb
ja
push
lock
les
sbbb
stos
jl
add
xor
push
inc
jo
cmp
jecxz
cwtl
mov
loope
sbb
adc
lds
loopne
bndstx
push
pop
call
jmp
and
je
cmp
mov
lock
inc
loopne
dec
ret
add
xor
mov
jo
leave
jne
cs
or
minps
in
lahf
iret
add
outsl
jmp
push
repz
mov
or
sbb
cmp
je
fnstenv
imul
push
stc
inc
add
push
cmpsb
mov
pushf
ret
scas
push
nop
push
xchg
mov
mov
rolb
mov
push
leave
sbb
addr16
rolb
push
xor
movsl
test
insb
movsb
outsb
dec
addl
outsl
add
in
add
adc
movsb
mov
dec
loopne
jmp
add
shlb
push
inc
and
inc
xchg
test
push
inc
and
mul
mov
test
call
test
test
mov
test
sub
xchg
test
sbb
leave
jo
popa
mov
jl
fisubl
js
add
movsl
ja
inc
out
or
arpl
std
test
cmp
je
or
sti
dec
adc
xor
add
sbb
icebp
xchg
xchg
sete
fs
clc
jle
mov
xor
push
push
cmpb
pusha
insl
es
ret
pop
cmp
jne
jae
movsbl
sbb
inc
lcall
sbb
or
jmp
cmp
sub
pop
jmp
adc
pop
int
push
das
add
lea
and
dec
inc
jmp
pushf
add
or
jecxz
or
add
inc
cmp
jl
incl
sbb
cltd
and
add
push
bound
add
jle
mov
xlat
popf
clc
xor
ss
cmp
mov
rcl
sahf
sbb
inc
jne
loopne
stos
aas
enter
adc
or
jne
outsb
adcb
jb
sahf
mov
lea
xor
inc
imul
jl
mov
stc
in
cld
xlat
lcall
movsb
ret
or
pop
mov
inc
adc
roll
pop
xchg
mov
sbbl
aam
insb
cmp
jl
enter
insb
aas
mov
sub
std
clc
fstl
cmp
cli
js
inc
mov
add
dec
jne
xchg
and
jo
add
arpl
push
aam
mov
aam
repnz
add
and
lahf
push
ret
or
jle
clc
dec
lahf
adc
icebp
inc
add
add
movsb
test
pop
push
xor
cmpsb
push
mov
adc
dec
jecxz
push
dec
pusha
pop
popa
fisubrl
minps
insl
fcomps
movsb
and
cld
cmc
pop
in
push
xor
push
jnp
aaa
mov
out
push
pop
sbb
jbe
xchg
aad
mov
xchg
pop
popa
aas
repnz
sub
not
add
or
add
mov
xchg
ret
bound
leave
loopne
sbb
sar
jecxz
push
dec
or
pop
push
jmp
jge
push
xchg
aaa
xor
push
push
push
cmpsb
mov
outsb
pop
nop
push
das
in
lods
dec
pop
add
jmp
in
nop
out
push
add
push
add
xchg
lock
adc
push
adc
push
add
into
adcl
mov
in
mov
push
sbb
mov
bound
sbb
cmp
test
inc
cwtl
aad
add
in
push
add
cmc
int3
cld
sub
jmp
lret
iret
jle
inc
mov
leave
sub
and
mov
mov
xor
scas
mov
shlb
sbb
and
shrl
lahf
push
inc
adc
iret
push
mov
fcoml
xchg
cmp
xchg
xor
adc
fbld
outsl
mov
mov
xchg
pop
ret
sbb
adc
test
mov
push
mov
xor
popa
sub
push
jle
movsl
adc
rolb
js
jo
add
stos
mov
shl
jnp
dec
in
call
popf
adc
int3
add
mov
mov
xchg
pop
add
cmp
xchg
or
and
mov
shll
sbb
aam
imul
ret
add
add
shlb
push
push
pop
aam
mov
mov
push
fs
pop
cld
mov
or
aaa
mov
adc
ds
pop
pop
xlat
push
push
or
adc
movb
arpl
mov
cmp
cmp
pop
sub
mov
js
adc
sti
aas
incb
adc
mov
rorl
pusha
shl
je
ds
insl
adc
cmpsl
call
out
das
mov
lcall
and
or
leave
add
mov
or
in
or
adc
lahf
mov
push
pop
test
jnp
nop
lea
sbb
xor
aam
add
pop
jle
rclb
loopne
or
fmul
xor
and
add
push
bound
cmpl
jl
cwtl
loopne
fdivrl
pop
add
sub
xchg
data16
sbb
push
xchg
je
cmp
daa
movsbl
shl
call
push
xor
sub
mov
add
mov
pushl
mov
test
lock
lock
jae
movsb
xchg
outsl
sbb
xor
mov
push
jns
dec
xchg
loope
scas
mov
shlb
cmp
add
pop
dec
push
push
push
inc
sbb
pop
dec
push
roll
outsl
popf
inc
pop
pop
iret
nop
test
cli
jo
test
and
or
adc
les
mov
cli
insl
test
mov
shl
xchg
pop
outsl
mov
mov
sub
adc
add
call
pop
add
sahf
inc
es
rcl
in
adc
sub
push
pusha
pop
inc
inc
mov
xchg
hlt
mov
xchg
pop
and
cmp
push
sub
dec
jae
mov
test
out
pushl
mov
mov
daa
clc
pop
mov
fiadds
jle
sub
jo
add
das
xchg
push
imul
or
mov
inc
or
jo
jecxz
mov
mov
add
dec
mov
mov
mov
add
mov
add
movzbl
cmp
outsl
push
mov
inc
mov
mov
cmp
jl
xor
mov
mov
mov
push
xlat
sarb
sub
push
mov
or
orb
or
mov
add
or
mov
cmc
dec
fisttpl
and
or
xlat
mov
cld
push
leave
push
xor
mov
inc
call
jne
enter
pop
jg
and
stc
fwait
jb
scas
dec
push
pushl
out
push
movsb
push
mov
and
icebp
mov
insl
loopne
std
pop
add
xor
mov
test
add
test
hlt
mov
test
cltd
movsb
jb
or
in
iret
or
push
pop
mov
xlat
mov
adc
xor
mov
push
cmovno
outsb
adc
push
enter
pop
adc
fbstp
mov
inc
out
and
pushf
test
adc
and
imul
stos
mov
dec
mov
mov
mov
inc
or
xor
addr16
mov
jae
push
hlt
rcr
jmp
in
add
add
xchg
mov
or
dec
rcll
cltd
mov
cmpl
push
xchg
xchg
push
mov
pop
dec
pop
pop
je
in
and
loope
mov
add
jp
mov
sbb
les
sub
or
test
test
sub
lahf
rclb
lret
lea
cmp
jbe
cmp
jbe
or
rorl
sbb
movsb
movsb
xor
roll
ret
imul
adc
insl
mov
cmp
movlps
and
dec
icebp
sub
add
xchg
xchg
sahf
add
dec
fisttpl
ljmp
lock
icebp
cmp
push
inc
testl
push
fadds
push
push
push
hlt
dec
push
iret
cmp
jg
and
das
lods
test
push
push
jmp
sbb
test
pop
ret
sub
enter
sub
mov
fsts
mov
mov
insl
popl
and
out
mov
js
movl
hlt
adc
mov
add
xchg
push
push
xchg
push
test
sub
rolb
xchg
lods
or
std
cmpsb
clc
lods
add
add
cmp
fdivs
mov
push
shlb
je
jnp
in
test
push
sbb
adc
sbb
mov
xchg
add
popf
aas
jb
or
push
ljmp
add
pop
cmp
push
dec
add
in
jbe
mov
movsl
sbb
pop
adc
dec
rorl
adc
aam
cmp
jl
push
loope
add
icebp
add
add
les
mov
or
mov
mov
clc
jne
mov
and
test
sub
lret
sub
test
sub
cld
or
enter
enter
inc
xchg
es
jne
pop
xor
or
adc
ss
adc
push
mov
jle
push
mov
adcl
jo
dec
mov
mov
fwait
sub
push
push
loopne
mov
inc
pcmpgtd
dec
lcall
dec
cmpl
test
rcrb
push
inc
test
add
add
stos
pop
inc
add
popa
mov
scas
add
push
aam
dec
xor
adc
and
dec
sbb
test
add
adc
dec
test
rorl
or
out
fdivl
mov
je
hlt
xorb
icebp
es
mov
mov
aaa
loope
inc
rorb
cwtl
ja
maxps
sbb
andb
inc
push
add
or
cmpl
adc
push
push
dec
fwait
inc
ss
ret
movl
aas
push
cs
adc
sarb
cmp
fcompl
add
fsubrl
fdivl
fsub
sbb
add
leave
and
fisubrl
insb
or
sub
add
or
mov
pop
sub
fisttpll
push
pop
je
dec
inc
and
popa
ljmp
fwait
pop
lds
xor
inc
aam
pop
mov
xchg
ficoms
sub
xchg
and
lcall
mov
adc
addr16
rclb
pop
cmp
jmp
out
jle
mov
dec
gs
push
inc
incl
cmp
mov
or
add
inc
xchg
sub
jmp
xor
add
xchg
imul
and
mov
scas
push
or
es
loopne
sarb
xchg
jo
push
push
push
lods
mov
pop
add
jne
popa
aad
xchg
adc
ret
lahf
imul
xchg
fwait
push
push
pushl
mov
int3
inc
aad
sbb
jne
cmp
jbe
add
xor
ljmp
jmp
push
pop
push
sbb
mov
addr16
add
sub
loop
lret
mov
nop
cmpsl
or
push
xor
cmpsb
sub
bound
scas
jg
add
pusha
daa
sbb
pop
clc
jne
mov
cs
adc
lahf
rcrb
gs
dec
pop
and
pop
leave
outsl
jl
jne
push
nop
cld
out
iret
cld
cmp
or
loop
fistl
sbb
push
mov
sbb
adc
fisttpl
call
cmp
sbb
mov
and
mov
mov
cmp
call
pop
lock
pop
stos
stos
dec
cmpsl
pop
cs
cmp
scas
or
or
cmp
mov
push
jmp
add
call
dec
push
pop
movsb
inc
jbe
dec
xchg
pusha
bound
and
mov
push
pushf
pop
jns
das
sub
out
sbb
or
push
cmp
jno
and
pushf
pop
xor
cmpsl
cmp
xchg
and
dec
movb
dec
adc
nop
pusha
cli
mov
xor
aam
loope
in
pop
notb
push
fs
xor
nop
push
xchg
mov
mov
dec
ret
xor
pop
add
xchg
bound
clc
and
push
xchg
out
test
shlb
xor
fildll
enter
push
push
sub
adc
adc
aad
add
mov
add
or
push
aam
inc
nop
sbb
mov
test
dec
mov
jo
sbb
adc
dec
sbb
jecxz
inc
push
dec
adc
mov
out
xchg
lock
adc
lea
push
or
lock
mov
pop
sbb
mov
push
inc
loopne
inc
mov
inc
xor
subl
shll
or
dec
xor
pushf
push
movsl
jae
mov
add
or
and
adc
and
dec
or
add
inc
lods
pop
and
pop
or
jae
lods
shr
sub
add
bound
mov
mov
fiaddl
xchg
push
aad
leave
push
fcomps
adc
popa
and
popa
rcrb
jg
push
dec
mov
inc
push
sub
test
push
sub
or
mov
daa
loopne
pop
adc
adc
aam
or
arpl
and
mov
inc
mov
dec
popa
pop
sub
in
jae
inc
dec
test
or
sub
mov
jmp
and
push
inc
daa
call
mov
or
xchg
cmp
jb
aam
or
cmc
and
cmc
push
dec
or
push
sbb
jl
les
dec
rcrl
sub
ret
sbb
pop
and
adc
rcrl
add
inc
add
xor
mov
outsb
sub
ja
sbb
lock
dec
cmp
jo
sbb
xor
ret
aam
or
and
test
mov
pop
lahf
inc
pop
inc
lods
pop
or
or
push
sbb
inc
add
ja
or
roll
ror
adc
sbb
add
xchg
test
ja
dec
xchg
icebp
jae
insl
push
push
ret
dec
and
cltd
cli
popa
lahf
push
fsubl
add
sub
imul
call
add
dec
cltd
popa
sub
cwtl
stos
add
push
andb
push
lea
iret
xchg
dec
push
or
jbe
mov
xchg
mov
fiaddl
aaa
add
and
movsl
adc
arpl
xor
add
shl
out
outsb
leave
mov
movb
or
push
int
cmp
jb
cmp
repnz
and
sbb
inc
mov
dec
jae
popa
push
ret
imul
push
add
shlb
je
mov
loopne
mov
push
inc
add
pushf
inc
in
mov
push
ret
out
hlt
mov
or
div
imul
cmpl
mov
mov
mov
cli
das
je
fdivrp
fldt
pop
jne
mov
cmp
addr16
je
cmp
jne
mov
sbb
xchg
lock
dec
lea
testb
or
mov
dec
xor
push
cmpsb
mov
dec
fdivrs
sub
inc
adc
je
testl
sub
sbb
cld
cmp
jbe
push
sti
incl
pop
add
inc
cmp
je
sub
inc
jmp
inc
and
xchg
push
xor
pop
mov
in
mov
cli
loopne
add
cmpb
cmpsb
repnz
je
aam
int
jmp
mov
jb
adc
into
mov
adc
jmp
rolb
in
inc
jl
sub
cld
inc
xchg
push
jl
mov
push
jne
mov
insb
outsb
hlt
subb
aam
lds
mov
ljmp
sbb
jb
sbb
push
cmp
fnstsw
sub
push
out
pop
mov
jge
mov
sar
lret
mov
les
and
dec
sbb
push
pushf
movsl
ds
loop
jle
sub
loopne
jne
sbb
add
mov
les
mov
add
mov
mov
add
mov
loop
add
rorb
pop
shl
add
jmp
pushf
aas
insb
mov
and
cmpsb
and
cmpsb
xor
cmp
js
fs
jne
xor
add
push
cmp
adc
fdivs
mov
or
push
incl
jae
mov
jmp
dec
shlb
js
cli
add
mov
stc
insb
push
mov
or
or
add
pop
int3
push
add
xor
jg
or
jge
int
in
adc
or
jle
es
sub
in
test
push
sub
and
pop
or
jl
or
adc
lea
adc
ds
inc
loopne
pop
jbe
hlt
pop
arpl
or
add
je,pn
test
jne
mov
shll
add
fs
push
and
push
xor
xor
loope,pt
es
adc
movb
inc
pop
push
sub
sbb
lret
and
ret
or
inc
and
xchg
push
repz
push
inc
and
push
push
adc
add
mov
adc
jae
xor
xchg
roll
daa
sbb
push
inc
push
lcall
mov
clc
push
and
leave
sub
inc
and
push
ljmp
pop
and
push
rcll
leave
adc
pop
cmp
insb
mov
js
xchg
clc
push
add
incb
xor
loop
pop
rol
inc
sahf
test
movaps
test
add
and
ss
sub
cmp
mov
addl
push
jo
add
pop
hlt
cmp
int
xor
pop
shlb
or
or
jp
push
adc
push
mov
rorl
cmp
and
out
push
push
movsb
and
test
push
jbe
xchg
popa
add
mov
loopne
pop
lea
push
add
fwait
repz
jne
orl
mov
cmp
dec
xchg
sti
jmp
andl
rcl
cltd
pop
popa
dec
jae
cltd
aaa
jp
xchg
and
mov
xchg
adc
push
sbb
add
xor
push
pop
push
movl
push
adc
dec
or
ss
xlat
xor
push
lahf
jbe
mov
add
imul
cli
bound
jl
inc
incb
push
mov
stos
repnz
mov
push
cmpb
add
outsb
xchg
cmp
add
pop
adc
jmp
cmpl
mov
rclb
add
outsb
je
add
xchg
pushl
sti
subl
outsb
add
imull
xchg
jo
cmp
mov
lock
je
in
mov
pop
aam
mov
psubd
lea
push
in
or
mov
xor
pop
push
inc
sub
rcrb
fbld
mov
int
jbe
mov
jle
push
gs
add
inc
inc
imul
cld
pop
inc
pop
add
push
loope
aas
fsubrl
je
cmpsl
popf
jge
mov
mov
mov
push
roll
movsl
xchg
stos
pop
adc
xor
xchg
sbb
cmp
pop
je
test
dec
push
mov
inc
jmp
xor
addb
push
fs
add
leave
dec
adc
inc
push
nop
sub
push
push
dec
mov
add
cmp
xchg
mov
cwtl
popa
or
mov
test
clc
mov
mov
lea
sbb
mov
inc
addl
push
or
push
inc
push
in
mov
or
push
or
inc
and
iret
mov
push
aaa
les
xor
add
push
add
add
pop
and
push
sub
push
sub
xor
sub
outsb
test
mov
dec
push
cmp
ret
or
cmp
add
ficoms
mov
add
add
popa
daa
lea
daa
push
cmpl
mov
mov
fcoml
xchg
sbb
ljmp
out
orl
cs
or
push
ljmp
cmp
add
sbb
mov
sti
sub
and
cld
jle
inc
inc
push
push
popf
test
dec
push
leave
imul
cmpb
xchg
xchg
pop
xor
adc
push
push
lea
or
sub
inc
loope
fstpl
frstor
fwait
xchg
imul
in
cmp
sbb
shll
push
lret
or
call
push
and
cmp
repnz
movsl
fldl
adc
add
and
dec
sbb
xchg
push
jp
jecxz
jge
add
aas
adc
fnstcw
loopne
testl
fcomps
ret
jne
xchg
cmpl
adc
lods
jo
jnp
push
push
lret
push
aam
and
jne
mov
out
mov
jge
adc
add
movl
and
js
adc
clc
out
into
cmpl
mov
clc
in
andl
push
add
inc
fs
sbb
sub
or
xchg
lahf
jmp
bound
and
mov
cli
pop
jge
pop
xchg
mov
bound
or
jne
dec
popf
je
add
jne
push
push
cmp
mov
sbb
jp
add
fcomps
jge
pop
mov
push
sub
subl
std
test
dec
cmp
adc
loopne
push
adc
mov
lods
repnz
rcr
je
out
cltd
jnp
pop
mov
sbb
jne
mov
jo
mov
icebp
cmpsl
lods
fwait
ss
ds
mov
loopne
fsubs
mov
dec
xlat
or
or
je
cmp
push
pop
jne
aam
insl
pusha
sub
cmpsl
jne
push
insb
scas
and
inc
pop
jne
pop
call
sbb
add
in
in
outsl
testl
jne
jmp
lret
sbb
pop
sbb
sub
in
sbb
call
ret
push
adc
add
test
addr16
jmp
jnp
pop
lea
fldl
add
je
pop
sub
subl
mov
add
je
sti
scas
inc
mov
mov
ss
jmp
pusha
fdivl
sbb
int
sub
push
test
sbb
leave
daa
mov
cltd
or
test
outsb
push
mov
sub
decb
adc
cmpl
andb
mov
inc
and
orl
pop
cs
dec
push
pop
pop
fs
loopne
push
mov
dec
inc
bound
out
cmpb
or
or
aas
ret
or
ret
push
add
inc
lods
or
lahf
fadds
cmp
push
mov
push
cmp
cld
or
push
mov
add
dec
adc
rolb
movsl
aas
add
mov
sbb
mov
push
xchg
pop
ret
mov
pop
roll
or
xlat
push
push
push
push
pop
cs
lret
pop
pop
pop
pop
pusha
and
jb
pusha
or
sub
adc
or
adc
xor
shlb
push
add
lods
pop
lock
adc
add
cmp
gs
and
ja
add
dec
push
sub
sbb
jmp
rclb
in
add
rcll
lret
mov
int
and
push
add
sub
adc
push
xor
cmp
sbb
push
or
inc
adc
inc
int3
adc
push
movsl
sub
ds
sbb
les
adc
xchg
rcr
mov
insb
xchg
icebp
mov
or
add
daa
mov
ljmp
es
add
daa
scas
sbb
ljmp
faddp
xor
sub
loopne
or
inc
inc
fwait
cli
sub
pop
jp
push
pop
jmp
shr
mov
mov
into
or
out
out
or
sti
and
add
inc
mov
adc
adc
or
ret
push
lods
jnp
xor
mov
aas
sbb
push
cmc
inc
mov
data16
xor
sti
dec
and
cmpsb
es
sti
movsl
cmp
dec
pop
push
mov
es
push
pop
mov
add
pop
mov
mov
or
mov
jb
test
cmpsl
xchg
inc
cmp
cmp
popf
ret
sti
je
sub
adc
push
rorb
adc
add
ss
mov
sbb
in
sbb
push
pop
loopne
jmp
or
shlb
mov
adc
adc
xorb
out
push
sbb
sbb
mov
pushl
cmp
je
push
pop
mov
jmp
lods
or
mov
add
pop
cmp
test
sbb
pop
add
jecxz
test
sub
std
sahf
add
and
fstl
mov
shr
add
push
adc
ds
mov
mov
insl
sub
fcoml
mov
call
jnp
add
xor
shr
insl
jne
or
popf
xchg
mov
jo
mov
cmpsb
popf
mov
test
sbb
mov
je
or
daa
add
imul
aas
js
pop
jmp
mov
sbb
incl
shlb
cld
mov
mov
push
aad
or
ret
sub
cs
cwtl
and
jp
mov
xor
fwait
test
mov
jmp
loopne
inc
hlt
cmpsl
push
insl
outsl
out
cltd
mov
in
je
divb
push
jge
mov
jl
out
xor
lea
inc
add
ror
xchg
in
data16
cmp
mov
mov
mov
inc
add
and
leave
jo
cmp
push
xchg
rorl
inc
hlt
add
mov
lock
hlt
or
mov
push
mov
ret
xchg
loop,pn
inc
inc
mov
add
cmp
ljmp
add
pop
enter
xor
mov
add
les
mov
int3
js
or
add
mov
in
mov
jmp
mov
and
sbb
push
test
xchg
jg
fadds
loopne
pop
lock
popa
lea
test
cmp
xchg
movsl
orl
int
mov
rclb
mov
jo
fcomi
cmpl
adc
shrl
push
rclb
hlt
test
dec
add
sbb
je
add
sbb
cmp
loope
or
mov
and
mov
inc
pusha
scas
pop
lods
xor
xchg
push
cmpb
jns
add
aad
cmpb
jle,pn
mov
movsl
movsw
jno
or
lret
xchg
and
subl
or
adcb
mov
dec
sub
cld
cmp
fsub
push
adc
aad
imul
mov
pop
push
test
pusha
es
clc
mov
jb
jae
xor
add
and
mov
inc
push
inc
adc
cli
cmp
cltd
and
clc
jmp
sub
xchg
cli
push
push
xor
and
mov
or
add
rorb
imul
out
adc
mov
and
lock
push
jmp
loopne
add
cmpsl
pop
in
add
in
sbb
xchg
dec
push
insb
inc
pop
push
dec
cmp
dec
sbb
mov
xor
xor
mov
dec
dec
jne
jns
adcl
xor
call
push
sbb
inc
jo
jg
jbe
push
aas
paddb
and
shr
mov
add
cmp
cmpl
and
mov
mov
adc
mov
inc
shlb
dec
cs
repnz
dec
cmp
test
aam
jp
push
xor
jnp
sbb
movsb
lods
imul
mov
out
scas
sub
and
inc
mov
or
push
sub
sub
push
gs
push
rcr
dec
es
ljmp
cmp
fs
lock
xchg
mov
daa
inc
mov
das
xchg
inc
cmp
jl
jmp
loope
push
pop
clc
mov
fwait
loope
or
jl
movl
movsb
jo
movsb
mov
jmp
jnp
push
push
adc
push
sarb
adc
push
in
test
in
stos
xchg
mov
je
push
xchg
shlb
fisubl
mov
push
lea
mov
fsubs
sbb
xchg
js
push
and
test
xchg
inc
xchg
pop
rep
data16
clc
int3
mov
and
mov
add
cmp
sub
pusha
aaa
je
jge
sub
dec
clc
inc
push
xor
add
jmp
inc
ds
lret
add
or
push
push
xor
ret
jnp
call
jmp
push
inc
add
rorl
push
push
or
movsb
sbbb
je
int3
or
push
in
add
aas
ret
or
loope
sub
dec
je
sbb
mov
sbb
push
sbb
sbb
mov
sub
cmp
aas
in
test
or
xor
pop
xor
cmp
and
xor
push
das
inc
inc
push
push
data16
push
mov
inc
cmp
jo
add
sbb
fcomps
sbb
mov
or
jae
enter
sbb
popa
pop
leave
sub
jmp
mov
cmp
fld
jecxz
jl
push
push
fs
test
push
sub
ret
idivb
jp
dec
jo
inc
jnp
jmp
push
mov
fmuls
add
add
cmpsb
mov
xor
call
out
jle
mov
and
fadds
dec
add
pop
nop
push
add
push
ret
rol
es
mov
mov
fnsave
test
movb
pop
ret
pushl
push
iret
hlt
and
movsb
mov
sub
testl
or
xor
jo
in
jge
or
xor
and
jns
int3
daa
push
xor
lea
mov
inc
inc
lock
mov
mov
mov
mov
add
push
stos
dec
xor
ret
call
jp
dec
outsl
lock
xor
or
fstl
popa
xor
cmp
rcrb
pop
pop
adc
sub
add
icebp
adc
adc
jle
enter
andb
lock
mov
in
xor
rorb
outsb
enter
or
jp
and
sbb
or
push
add
dec
lahf
fmuls
push
cmpsl
push
pushf
or
mov
stos
ret
inc
sahf
push
loopne
sub
dec
adc
jp
loop
cmp
pop
stos
pop
pop
jbe
jb
mov
pop
sahf
loopne
mov
lock
xor
xchg
xlat
lock
data16
hlt
push
mov
fdivl
push
subl
push
test
iret
or
adc
xchg
xor
iret
pop
stos
xor
jo
cmp
or
popa
adc
ds
cmpsl
or
dec
or
mov
incl
adc
cmp
cmpsl
jbe
push
in
lcall
add
push
or
test
inc
pop
inc
sbb
rcl
pop
addb
xchg
arpl
cmc
sbb
or
mov
pop
lea
jmp
and
sub
mov
mov
adc
and
adc
pop
test
xor
jl
add
push
adc
es
sbb
xor
cmp
and
xor
in
mov
outsb
push
fcmovnb
add
cld
xor
inc
sub
and
sbb
lret
movsl
stc
xor
push
inc
add
in
fs
arpl
dec
fabs
xchg
dec
jnp
mov
sbb
lcall
push
jb
ja
dec
mov
sub
in
and
sub
and
mov
nop
iret
jl
xchg
dec
mov
ret
xchg
mov
xor
lret
or
or
sbb
jl
mov
cmpsl
test
mov
rorb
orb
push
cmp
imull
jge
pop
push
daa
out
outsl
ss
fdivs
push
push
inc
enter
pop
fdivrl
mov
inc
add
or
pop
sahf
lods
mov
sub
lret
das
push
jg
add
and
xor
movl
iret
mov
mov
add
je
mov
js
aas
cs
pop
movl
dec
jmp
dec
test
inc
dec
push
pop
xor
adc
cmp
es
imul
sbb
xchg
push
push
xor
push
or
outsb
push
xchg
pop
mov
inc
sub
imul
or
push
cs
and
addb
sub
and
xchg
int
push
inc
mov
add
dec
mov
addr16
pushf
or
ss
and
sub
pop
add
pop
nop
dec
arpl
out
dec
sub
dec
dec
xchg
mov
and
jno
dec
adc
ljmp
inc
sub
testb
inc
movsb
jnp
sbb
test
add
jnp
dec
dec
sub
test
dec
imul
or
and
dec
mov
sbb
jnp
xor
ja
enter
test
in
push
sub
dec
aam
xorl
push
stos
adc
bound
pop
mov
inc
aaa
push
push
adc
subl
cli
dec
js
insb
sbbl
push
jno
and
dec
in
in
jl
fisttpll
mov
enter
xor
mov
add
or
sbbl
push
jnp
cwtl
movsb
jmp
jge
adc
mov
push
push
pop
out
add
mov
and
in
inc
cli
shl
sbb
movb
xor
loopne
sub
nop
call
clc
orl
mov
xor
mov
sbb
adc
popa
jae
or
push
in
fs
mov
sub
mov
pushf
imul
cmpl
jne
lret
push
pop
adc
dec
adc
mov
test
mov
and
inc
jmp
movsb
gs
pop
mov
pushf
mov
ljmp
add
dec
lods
or
xor
inc
shlb
pop
mov
inc
nop
push
inc
inc
push
stos
xor
sbb
mov
inc
sub
xchg
xor
pop
sbb
popf
pop
enter
jmp
mov
jle
adc
push
pop
add
sub
imull
jge
mov
insb
or
arpl
je
cmp
lods
loopne
andl
mov
jle
jne
incb
jge
bound
test
mov
jo
aaa
loop
and
adc
cmp
call
test
push
push
data16
cmp
iret
and
pop
cmp
jbe
adc
repnz
dec
cli
jmp
or
sbbl
pop
or
dec
cmp
mull
mov
inc
adc
xor
push
xor
fistpll
cmc
ror
aam
sahf
pop
jbe,pn
ss
add
fdivl
ret
mov
aam
test
insb
sbb
add
je
mov
jo
mov
mov
imul
mov
enter
cld
mov
enter
mov
jne
cmp
push
nop
xchg
adc
jmp
cld
mov
jo
adc
adc
pop
das
leave
sahf
int3
movsb
mov
movsl
xor
adc
pushf
das
inc
arpl
les
or
pop
addl
stos
mov
add
add
lret
sbb
inc
mov
incl
cmp
pop
aaa
mov
pop
push
sub
jmp
cmp
jmp
mov
inc
adc
dec
int3
xor
and
dec
and
sahf
test
push
jmp
or
mov
inc
fadds
add
scas
sub
lret
cltd
cltd
push
or
push
rclb
popa
sub
add
jecxz
pop
enter
cmpl
add
push
divb
xor
mov
pop
fisubrs
pop
aam
or
mov
loop
arpl
mov
mov
lock
sbb
jb
mov
into
sbb
cli
mov
pop
mov
xchg
jne
fcmovnb
cmpsl
rolb
mov
mov
pop
push
inc
jle
inc
jmp
adc
and
inc
mov
fidivl
test
cwtl
add
test
mov
or
sub
add
push
fnstsw
sub
rcrb
add
roll
push
fiaddl
jp
mov
das
movsb
push
pop
lds
aaa
or
add
xchg
mov
ljmp
scas
push
inc
push
shlb
cmp
jb
mov
push
sarl
inc
push
adc
xor
xchg
cwtl
mov
dec
push
sub
jp
lods
cltd
int3
imul
pop
inc
andb
or
adc
or
insb
jmp
jne
test
mov
sub
add
out
xor
lock
dec
add
pusha
ja
shlb
push
add
sbb
jns
sbb
loopne
or
or
leave
lods
jo
jmp
mov
add
push
cmpsl
dec
pop
add
mov
enter
dec
add
ret
inc
adc
call
or
adc
xchg
and
sahf
es
xor
cli
adc
lods
ret
arpl
dec
mov
and
mov
ficoms
inc
mov
movsb
fisttpl
sub
pop
add
ret
mov
ror
mov
jle
add
pop
add
call
lret
lods
push
cmp
cmp
push
pushl
push
cmp
inc
shll
ficomps
testb
push
add
jp
cmp
cld
sbb
out
fld
xchg
mov
rorb
outsb
add
adc
roll
sub
add
fidivrs
fadd
mov
nop
adc
xor
xor
sbb
arpl
rcl
add
imul
movsb
add
ud1
shl
and
enter
adc
mov
adc
enter
adc
adc
orl
adc
iret
es
add
lock
add
inc
jae
add
pusha
jl
add
jmp
lds
cmpw
je
push
ret
cmp
fldcw
in
lods
data16
gs
ret
or
or
test
leave
rolb
mov
cmp
add
jl
daa
stc
ret
sub
jo
into
ret
or
cld
pusha
les
fisttpll
inc
je
test
shrb
mov
mov
xchg
inc
in
fcmovnu
xchg
jl
inc
and
das
jmp
cmp
add
mov
jo
out
sarb
ja
bound
pop
and
mov
push
fiadds
nop
pop
lea
cmp
pop
or
mov
add
repz
xor
aam
mov
repnz
xor
test
push
add
movsb
popa
icebp
pushf
xchg
xchg
popf
ror
xchg
push
mov
push
adc
add
xor
sbb
sbb
mov
sbb
outsb
nop
xor
inc
adc
sbb
jo
movb
mov
mov
enter
and
sub
incl
adc
pushf
aad
je
rcrb
xchg
hlt
add
rcpps
adc
mov
orl
mov
mov
jp
call
bnd
cmpl
sbb
out
jnp
das
push
out
mov
adc
in
inc
ret
add
pusha
adc
js
ja
dec
lcall
ret
mov
inc
add
mov
push
ja
dec
pop
adc
jno
lods
lods
cmp
in
push
push
or
xor
mov
fidivs
testb
mov
ret
outsb
dec
clc
test
mov
cmp
cmp
adc
adc
adc
shl
dec
notl
pushf
sub
add
fmull
or
inc
test
add
lds
mov
cli
icebp
push
sub
lods
lock
push
out
add
mov
push
and
mov
nop
out
sbb
and
cmp
xor
jg
sarb
or
pop
add
ja
mov
pop
xchg
fnstsw
sub
fmul
or
mov
push
xchg
pop
push
add
sub
inc
repnz
out
repz
mov
fs
push
jmp
add
push
fdivrl
sarb
jmp
pop
lock
inc
outsb
loope
in
cmp
add
in
add
add
cmpsb
insl
loopne
ficompl
jge
loope
add
or
inc
cmp
and
add
rcrb
pushw
dec
xor
mov
fbstp
jbe
mov
repnz
or
test
fstps
and
ficoms
add
movl
jle
jmp
clc
mov
ljmp
jp
cmp
push
out
ljmp
cmp
sub
sub
xor
icebp
push
outsl
test
sbb
imul
cli
cmp
shl
push
inc
sub
rorb
or
mov
and
int
jl
repz
jno
push
arpl
mov
add
xlat
and
mov
lcall
jge
test
and
mov
stos
cmpsl
icebp
clc
movsb
in
test
inc
pusha
mov
cmpsl
inc
xor
leave
inc
or
ret
mov
or
ljmp
dec
insb
sbb
iret
cwtl
push
loope
int
ljmp
jno
mov
inc
fwait
into
or
mov
jb
add
cmp
incl
adc
roll
push
mov
cmpl
mov
xor
inc
sbb
adc
and
dec
js
addb
lock
popf
dec
fildl
mov
outsl
pop
rorl
mov
cmp
or
add
jmp
sti
loop
addl
mov
lret
jp
mov
xchg
lds
hlt
std
ja
mov
xor
psubw
mov
sub
cmp
mov
jl
inc
lock
cwtl
pop
scas
rorl
xorb
scas
dec
fildl
adcl
roll
inc
arpl
mov
sbb
inc
push
sbbl
and
xchg
imul
pop
push
push
lods
mov
ljmp
or
cmp
cmp
sub
add
loopne
mov
mov
push
mov
mov
ret
mov
push
fadd
lea
daa
cmp
dec
orl
sbb
shrb
jl
ja
mov
ljmp
lods
sub
int3
andl
lea
xchg
ret
mov
xchg
cmp
pop
cld
out
xorl
ror
lods
sbb
loope
leave
mov
shl
mov
call
mov
lret
cmpsl
mov
push
nop
push
leave
flds
mov
jns
lods
orb
dec
inc
cltd
sub
arpl
mov
sarl
adc
inc
and
adc
mov
add
mov
xchg
push
mov
pop
lcall
ficoms
ss
stos
jle
lea
or
add
push
cmc
push
adcb
and
mov
jle
out
mov
nop
movsb
pop
jne
pop
pushl
inc
sbb
rolb
pop
add
push
jecxz
xchg
in
sub
dec
ret
bound
bound
sbb
in
or
lock
mov
enter
jo
push
das
inc
and
in
mov
adc
in
mov
mov
dec
data16
and
addr16
fnstcw
push
xor
popa
cld
and
inc
out
adc
push
call
cwtl
inc
std
int3
push
in
jl
jmp
fs
dec
addr16
mulb
xchg
mov
and
loope
ss
lret
or
pusha
xor
insb
aad
sub
dec
je
dec
movsb
enter
or
loop
mov
jecxz
lea
rorb
test
jle
mov
cmp
cltd
in
sbb
add
pushf
sbb
inc
jae
lea
jmp
cmpl
sub
shll
xchg
aam
incb
mov
aam
mov
xchg
insb
mov
mov
mov
shrb
inc
clc
sbb
and
mov
or
sbb
mov
cmp
mov
and
jmp
hlt
imul
add
xchg
jo
sub
dec
push
dec
cmp
test
imul
pop
popa
repz
sbb
ss
add
clc
adc
dec
xchg
sub
jae
movsb
rol
sbb
pop
or
xorb
pop
xor
popf
sbb
or
mov
ja
rorl
loopne
fisubs
ret
xor
lods
or
add
int
push
bnd
dec
jp
enter
shlb
fnstcw
xchg
pop
mov
mov
test
push
bound
rcl
clc
xchg
mov
fs
mov
cmp
pusha
jg
andl
xchg
arpl
inc
test
cmp
das
jbe
and
scas
loope
notb
push
mov
fsub
xchg
je
mov
sbb
rclb
fs
sbb
fisubrs
inc
pop
sti
js
add
stc
xchg
jns
repnz
mov
loopne
xchg
mov
mov
add
push
adc
mov
or
add
arpl
cmp
push
sub
test
pop
mov
test
pop
js
cmpl
jae
mov
in
daa
push
mov
wbinvd
and
out
lea
pop
and
insl
xor
and
adc
jge
and
jb
add
dec
enter
add
inc
pop
adc
inc
jbe
movsl
add
andl
popf
and
cmp
lret
push
pushf
lea
bound
pushl
push
pop
enter
mov
adc
cs
and
les
fucomip
or
inc
pop
mov
cmp
mov
push
add
ljmp
push
pop
xor
or
das
xchg
inc
adc
lahf
roll
mov
mov
inc
sbbb
cmp
xorb
gs
cmp
inc
les
dec
push
cmp
pop
ja
data16
cwtl
or
mov
shr
and
or
je
test
dec
mov
jns
adc
jne
mov
push
test
cmp
dec
or
sub
scas
lret
in
out
cmp
shlb
test
add
and
xchg
mov
hlt
hlt
out
jb
jns
or
mov
push
test
pop
xor
push
adcb
or
cmp
jae
nop
adc
inc
sbb
fldcw
sbb
hlt
jne
push
js
loopne
fnstenv
mov
or
push
mov
in
xchg
scas
stc
repz
dec
inc
add
scas
out
or
ja
push
cmp
xchg
push
mov
unpckhps
sub
out
mov
push
jnp
pop
xchg
dec
jnp
inc
lods
or
pusha
pushf
lock
cs
cmpsl
mov
movsb
cmp
jnp
hlt
neg
sbb
and
bnd
jp
nop
push
sub
push
adc
or
pop
ret
push
jb
cmp
jl
and
dec
jns
fidivl
insb
les
lcall
jo
cltd
scas
sbb
push
push
sub
sbb
mov
popf
aas
push
cmpsl
insl
or
fs
adc
loopne
aas
in
ret
rolb
jne
cmp
jbe
or
jne
push
cmp
inc
dec
in
dec
cmp
ret
popf
adc
cmp
sbb
push
inc
lods
mov
and
rorb
jmp
cmp
jl
add
sub
jmp
xchg
adc
sbb
ja
lea
jmp
ds
mov
jns
adc
test
in
loopne
sbb
push
pop
inc
pop
adc
or
sub
or
test
loopne
shlb
fnsave
loopne
lcall
hlt
xor
inc
or
js
pusha
xor
sbb
jl
inc
jecxz
mov
mov
stos
xor
push
mov
stc
add
in
mov
sub
inc
xchg
test
aad
and
repnz
scas
cld
pop
gs
xor
es
jae
fwait
push
push
cmp
test
push
in
leave
add
fdivrl
adc
aaa
mov
jb
dec
cmp
add
cwtl
jle
xchg
test
lods
fadds
push
adc
push
popa
adc
push
mov
mov
sbb
outsb
and
add
data16
leave
ret
mov
cmp
inc
or
popa
or
imul
inc
rolb
ret
aas
ljmp
cmp
and
mov
dec
jle
xor
clc
outsb
outsl
inc
jg
xor
or
cmpl
xor
dec
test
jbe
mov
add
add
jp
add
xchg
je
test
jno
cld
jge
adc
push
leave
or
cli
cmp
fsubrl
sub
xor
xorb
jno
inc
sub
mov
sbbb
xor
add
stos
insb
xchg
aam
add
inc
sbb
adc
addr16
mov
jb
addr16
je
mov
push
cmp
cs
imul
cwtl
push
pop
xchg
and
ljmp
jmp
cmpb
xor
jb
push
jae
pavgb
and
xor
add
enter
data16
stos
or
mov
push
pop
je
cmp
cmp
popa
cli
sbb
cs
mov
sbb
pop
sbb
sbb
jmp
add
mov
call
push
lods
add
add
mov
adcb
fcomps
popf
xorl
not
mov
addb
adc
mov
sbb
jmp
inc
mov
stc
mov
jmp
mov
or
xchg
add
cltd
iret
call
sbb
sbb
add
dec
jb
lret
mov
imul
lods
sbb
out
cmc
add
pop
sub
or
jo
mov
loopne
add
fsubl
mov
pop
and
jge
cmp
push
sbb
jle
enter
packsswb
test
arpl
test
cwtl
loopne
push
xor
inc
scas
xor
fs
xor
ret
add
cmp
xlat
xchg
addr16
call
push
je
push
es
enter
push
jmp
push
and
mov
adc
add
xchg
in
mov
jle
xchg
adc
dec
lock
add
sub
mov
add
pop
lock
push
shll
jo
pop
mov
xchg
lock
loop
insl
je
mov
pop
push
je
mov
mov
dec
shll
in
lea
subl
pop
fs
out
push
aam
je
jo
or
lods
pop
fsubs
popf
sbb
faddl
push
jle
imull
or
out
es
xchg
push
ret
dec
push
popf
inc
jl
adc
mov
mov
xrelease
adc
xchg
testb
jge
lea
int
mov
je
pop
fdivs
subl
gs
push
cld
and
push
pop
xchg
shl
outsb
in
call
mov
mov
sbbl
xor
add
or
jo
lret
adc
testb
sub
pop
ja
pusha
push
mov
mov
cs
inc
bound
enter
scas
test
ds
lea
fbld
popa
jge
mov
sub
sbb
add
popf
pushf
xor
mov
mov
imulb
cmp
das
fs
or
and
pop
jns
pop
je
dec
adc
add
lea
ja
cmpb
jne
jp
imul
jne
push
out
add
or
loopne
adc
call
lret
jb
stc
push
and
daa
xchg
lods
inc
lock
cmc
pop
pop
mov
lea
ja
loop
sbb
push
dec
or
pop
test
fs
test
iret
lea
subb
cli
jbe
adc
scas
xor
jae
inc
mov
add
inc
sub
dec
push
pop
xchg
and
dec
shl
push
xchg
xor
add
sbb
push
adc
sarl
add
mov
xchg
ds
cmpl
imul
sbb
adc
lods
and
inc
cmp
outsl
mov
je
mov
rol
stos
scas
pushl
adc
add
adc
lods
mov
testb
inc
lahf
sbb
das
dec
and
sub
inc
push
adc
and
lock
rdmsr
inc
xor
lea
aaa
lcall
movsl
sub
pop
sbb
ja
dec
sub
pop
adc
into
sahf
fimuls
mov
cmp
adc
fsub
add
dec
or
add
aad
add
xor
push
mov
xchg
jbe
lahf
add
sbb
roll
insb
pop
mov
adc
mov
scas
push
add
mov
mov
xor
push
and
cmpl
adc
gs
ljmp
or
shll
and
movsl
add
data16
xor
rolb
cmpsl
enter
jns
adc
push
or
jmp
push
pop
pop
mov
add
jl
les
orl
or
push
push
mov
insl
xor
rorb
add
mov
arpl
icebp
add
aad
rol
mov
sbbb
mov
push
mov
daa
bnd
mov
mov
cmp
mov
cmpb
ret
push
jae
lea
add
jo
push
sub
sbb
orb
jge
lods
or
stos
mov
loop
or
dec
pop
ret
sub
mov
add
in
xor
rcll
jge
insb
les
jg
fmull
pop
cld
cmpb
xor
fnstenv
inc
jmp
push
cmp
sub
push
ja
sti
sub
jg
xchg
fiaddl
bound
cmpsb
filds
movb
add
and
push
jns
stos
ret
sub
jmp
push
sti
lea
mov
iret
pop
ret
insb
mulb
call
idiv
mulb
mov
push
cmc
dec
in
clc
lcall
push
loopne
and
dec
push
push
mov
sub
mov
movsl
loope
mov
mov
cltd
mov
cmp
push
or
out
test
fiaddl
push
lea
cmpsb
test
jns
stc
pushf
mov
sbb
jns
push
inc
cmp
stc
cmc
fcompp
xor
jmp
push
inc
sbb
sub
inc
cmp
and
loopne
enter
xchg
sub
jne
xchg
imul
shlb
loope
cmp
cmp
data16
fildll
or
push
lret
and
lret
in
ret
inc
dec
cmpb
les
mov
js
pop
mov
mov
cmp
sub
push
inc
or
add
es
and
pop
sti
adc
mov
sub
and
add
dec
add
std
nop
sbb
jae
add
push
mov
mov
mov
das
add
mov
in
out
test
cwtl
mulb
cmpsb
imul
imul
outsb
sub
sub
inc
out
roll
dec
js
in
movb
xor
pusha
add
pusha
test
xlat
push
inc
push
inc
push
scas
push
test
mov
xor
push
dec
push
mov
fmull
inc
push
cmp
mov
adcb
cmp
aas
inc
mov
inc
jp
pusha
sub
inc
cmp
adc
jge
pop
push
sahf
add
psubb
inc
push
adc
testb
add
fistpl
std
adc
push
ds
sahf
js
lock
xor
jl
jbe
cmp
cmp
test
dec
xchg
clc
dec
cmpl
inc
mov
pop
pushl
or
ljmp
inc
adc
iret
sub
addl
inc
pop
clc
and
push
es
sbb
popa
adc
mov
mov
push
and
cmp
shrl
cmpsl
and
xchg
or
into
icebp
and
gs
mov
xor
xchg
xchg
adc
mov
out
pop
dec
inc
gs
mov
ret
repnz
mov
shlb
in
mov
sub
and
aam
sbb
push
adc
adc
or
jp
mov
movl
pop
in
sub
dec
inc
hlt
lods
in
dec
cmp
or
or
out
pop
dec
dec
sub
cmp
and
push
add
mov
mov
jo
or
push
mov
sbbl
pop
and
jne
jo
xchg
mov
sbb
mov
mov
cs
stos
mov
into
mov
jmp
and
inc
xchg
jge
js
orb
push
test
fcompl
sub
push
inc
mov
add
cmp
xchg
leave
adc
cmpsb
sbb
dec
sbb
push
push
push
test
sbb
leave
lock
inc
jl
jecxz
push
cmc
sbb
xchg
dec
fdivs
ret
mov
cmc
enter
xorb
cmp
jmp
ja
mov
loop
loopne
sub
add
jmp
nop
das
mov
cmp
xchg
std
dec
push
aaa
test
cmppd
pusha
sbb
sbb
fstp
push
or
pop
mov
adc
shlb
inc
adc
or
dec
les
dec
adc
nop
ror
inc
in
add
or
notb
es
roll
ds
and
leave
push
lods
dec
sbb
jno
lock
and
sub
or
lcall
adc
adc
push
xor
dec
xchg
std
xorl
mov
xor
adc
negl
push
cs
loopne
or
dec
sbb
mov
jo
loopne
inc
pop
xor
pushf
and
pop
fwait
sbb
lret
xor
xor
and
out
adc
sub
repnz
push
cmp
push
fbld
aaa
addb
movzwl
test
ss
icebp
inc
je
test
xchg
lods
mov
push
add
xchg
dec
rcrl
pop
push
mov
push
mov
xchg
outsl
add
or
push
cmpl
adc
jle
das
jmp
daa
add
add
inc
fstl
push
push
fsubr
cmc
adc
sub
push
shl
fnstenv
mov
mov
adc
add
pop
sub
sbb
mov
jmp
fs
push
jecxz
jo
push
jb
xchg
loope
adc
je
mov
loopne
dec
jecxz
pusha
adc
clc
test
faddl
and
adc
xor
inc
xor
jl
inc
fcomp
xchg
shl
pusha
pop
add
test
xchg
cmc
pop
js
sbb
outsl
jmp
adc
push
in
mov
add
cld
mov
mov
inc
sbb
push
mov
mov
andl
sbb
movsl
adc
fsubrl
or
pop
mov
lods
mov
or
nop
test
in
cmpsb
cmp
pop
or
mov
stos
or
pop
aam
pop
push
mov
jmp
xchg
data16
dec
pop
add
lock
outsl
mov
mov
add
std
shlb
hlt
loope
iret
xchg
cmp
sti
pushf
in
jae
sahf
cld
push
adc
cld
pop
fldt
mov
add
xchg
dec
ss
dec
clc
adc
add
test
enter
push
mov
stc
mulb
mov
loopne
jne
mov
sub
nop
push
push
mov
and
clc
popa
mov
inc
xor
mov
mov
std
loopne
xchg
add
fsubl
loopne
mov
jge
mov
add
mov
lret
jp
mov
sarl
scas
cmp
inc
adc
mov
mov
out
ds
lods
sbb
inc
addr16
and
sbb
gs
mov
lea
movsl
xchg
stos
sbb
scas
mov
and
rorb
mov
inc
jg
adc
les
negb
movsb
pop
hlt
jg
jmp
push
sub
push
lock
mov
xor
dec
add
inc
or
mov
mov
lods
or
inc
mov
adc
stc
ja
insb
mov
jl
std
call
push
lea
dec
ja
fidivrl
pop
fsubrs
push
dec
ds
into
push
cmp
jecxz
jp
pusha
rolb
push
imul
or
mov
sbbb
pop
imulb
loope
out
push
data16
mov
jmp
into
out
push
pop
jnp
push
loope
shrl
lock
xor
xor
jl
jg
cld
idivb
xor
add
mov
mov
push
xor
add
icebp
test
inc
pop
adc
mov
jl
mov
leave
ror
leave
sub
es
jl
fildll
aas
lea
mov
jb
cmpsb
loop
ficomps
mov
or
dec
jns
adc
jmp
iret
push
shrb
mov
adc
adc
shlb
dec
popa
sub
add
in
pop
imul
pop
add
push
movsb
bound
mov
fmull
sub
xor
and
mov
or
je
inc
and
adc
call
in
mov
xchg
jo
jle
rcll
and
loope
sahf
adc
push
js
je
dec
cmp
inc
push
mov
jp
or
mov
push
sub
sbb
scas
add
push
sub
ret
js
adc
scas
add
dec
loop
in
sbb
jmp
in
or
popa
insl
add
push
xor
test
ljmp
pushf
dec
test
xor
mov
addl
jp
xchg
mov
pushl
sub
mov
mov
xchg
or
inc
sbbb
dec
in
loopne
ret
push
cmp
daa
bound
xchg
jmp
in
mov
pop
xchg
mov
pop
aaa
add
inc
adc
cmp
popa
push
mov
jno
inc
xor
aaa
dec
xchg
sbb
push
jl
insl
lahf
push
pop
inc
adc
dec
cmp
mov
lret
jl
pop
imulb
loop
adc
push
sbb
je
mov
stc
xor
popf
les
mov
test
add
iret
jp
gs
xchg
jne
push
hlt
mov
and
hlt
or
sbb
or
jmp
mov
adc
das
int
add
jne
or
mov
jne
or
jne
mov
test
cmpsl
pushl
cmp
sbb
loop
int3
cmp
mov
aaa
or
cmp
and
lea
cmp
loopne
pusha
pop
mov
lret
fmul
testl
gs
repnz
inc
mov
cld
notb
popa
lds
push
inc
add
movsl
popf
jne
add
mov
dec
push
jae
test
mov
adc
mov
jne
xor
sarb
jbe
stos
adc
decl
sbb
pop
push
push
jo
mov
test
mov
pop
lea
or
xor
lods
or
rcrl
mov
sbb
addr16
imul
jmp
scas
lcall
add
mov
enter
lock
mov
jg
adc
pop
lds
pop
mov
mov
cmp
orb
enter
mov
dec
sub
insl
cmp
daa
mov
lahf
flds
ja
pop
sub
loop
addb
mov
mov
aam
push
rol
adc
add
xor
cld
adcb
andl
mov
cli
cli
rolb
push
jne
dec
fldt
dec
cli
or
pop
sub
sbb
push
lcall
push
in
mov
xor
outsl
sbb
push
lcall
add
scas
loopne
jne
scas
aaa
mov
push
mov
ficoml
lds
mov
dec
jo
es
cmp
je
icebp
in
push
or
daa
jle
fs
sbbb
lods
xor
jb
into
xorb
or
mov
sub
cmp
mov
jno
push
jnp
push
cmp
jo
cmp
push
push
cmp
sar
lret
cmp
jl
mov
push
in
je
mov
enter
rcrb
fidivs
fidivs
mov
push
das
pop
sbb
in
push
push
testl
xchg
jno
cmp
rcrl
push
lcall
outsl
faddl
mov
nop
loope
icebp
add
xor
clc
stc
sar
mov
dec
loopne
adc
clc
cmp
inc
mov
outsb
movsl
lock
loopne
pop
push
orb
mov
ja
jo
xchg
add
cmp
mov
pop
dec
push
or
mov
sub
or
gs
rolb
rorl
pop
out
and
test
insb
in
imul
dec
roll
pushf
insb
outsb
arpl
push
xchg
addl
or
popa
sub
js
into
aam
sbb
loop
cmpsl
ja
mov
cmpsb
sub
add
sbb
stos
adc
imul
mov
lcall
jae
push
sti
or
call
xrelease
cmpsb
cwtl
adc
sti
or
mov
inc
cmp
sub
and
imul
ret
sub
sbb
movsl
or
mov
add
loopne
nop
in
jle
movb
push
movsb
sbb
sbb
jmp
pushl
dec
dec
dec
xorl
inc
jl
or
rcrb
je
orb
insb
push
fs
push
shll
cmpb
notb
push
add
push
aam
cmp
imul
add
xor
mov
dec
adc
add
pop
pop
sbb
xchg
shlb
and
test
pusha
cmp
sub
sbb
addps
addb
adc
inc
fisttpll
test
add
and
mov
pop
les
adc
test
add
xor
lods
cli
lods
inc
dec
add
adcb
ret
inc
or
jne
sbb
ret
inc
dec
cmp
push
push
push
pop
fs
mov
sahf
jecxz
push
ret
add
sarl
adcb
jle
push
push
mov
mov
dec
add
js
call
mov
pop
inc
or
cmp
sub
ret
sbb
and
test
and
push
pop
and
xcrypt-ecb
cmpsl
dec
xchg
pusha
and
movsl
push
je
neg
dec
ja
jg
ret
and
das
xorl
outsl
mov
inc
mov
mov
ja
mull
mulb
inc
dec
adc
imul
sbb
xor
test
mov
xchg
mov
popf
incl
dec
mov
or
call
pushf
je
mov
das
add
lods
cmp
mov
xor
pusha
mov
nop
fcmovnbe
cmp
mov
fisttps
scas
add
xchg
and
push
jne
mov
sub
inc
sub
js
xchg
and
jl
ss
cmp
and
xor
jb
inc
xchg
ja
fwait
lret
xor
hlt
cld
je
xor
jo
dec
ds
lods
sub
and
movsb
into
js
in
and
testb
or
ficompl
rcr
add
adc
into
cmp
dec
and
jns
push
and
jle
cmp
push
sbb
lock
movsl
adc
cli
out
cmp
lcall
rcrl
lods
pop
mov
sub
or
sbb
dec
popa
add
add
inc
jb
push
adc
or
fdivrl
or
pop
and
loope
and
push
push
xchg
fcompl
gs
sti
insl
adc
sbb
loopne
inc
pop
and
xlat
sbb
xor
cwtl
mov
test
sub
jp
inc
fmul
call
sub
mov
push
ret
call
mov
jb
sbb
lods
inc
jmp
push
sarb
stos
bound
pushl
mov
adc
mov
dec
xor
cmp
dec
inc
inc
outsl
sti
sbb
lock
adc
add
jne
or
adc
or
nop
mov
pusha
mulb
sub
fs
enter
insb
push
mov
insb
push
adc
out
movsb
xor
add
cmp
push
jnp
lcall
inc
js
cmp
cli
adc
sahf
imul
jne
fsubrs
movb
or
enter
sbb
roll
out
cmp
lea
push
adc
lds
fwait
inc
and
jmp
push
jne
nop
mov
roll
rolb
adc
movsl
mov
jnp
enter
lock
or
mov
lock
sti
fs
push
push
fistps
test
push
sbb
cmp
popa
popf
mov
sbb
in
push
mov
mov
leave
add
add
push
and
mov
jle
pop
shl
sub
sub
push
mov
or
cmp
xor
xchg
test
aam
or
or
push
push
xchg
mov
test
inc
and
insb
or
test
push
sbb
lock
push
and
jle
pop
es
pop
jge
jbe
loopne
test
adc
ficoml
xchg
test
push
mov
adc
push
dec
loop
in
insb
push
push
test
lock
jne
or
dec
push
jns
mov
rol
dec
call
loopne
xor
mov
adc
outsb
mov
loopne
mov
repz
pop
sbb
arpl
sub
mov
cwtl
fidivrs
or
sub
xchg
mov
je
sbb
or
push
cmp
outsl
and
dec
push
lea
sub
push
out
pop
xor
jns
rclb
push
or
jmp
dec
sbbb
lock
pushf
fcoms
jo
mov
add
popa
add
fwait
ljmp
nop
push
dec
popa
fs
popf
mov
jb
push
sub
inc
dec
enter
inc
dec
pop
cmp
rorl
jo
push
into
xorb
or
ljmp
cmp
jns
sbbb
add
cmpb
sub
icebp
dec
fcoms
cmp
fcoms
cmp
dec
sub
pop
test
add
notb
jge
mov
mov
stos
push
sarl
adc
add
sbb
sbb
jbe
and
sub
mov
sub
jmp
push
push
enter
push
or
mov
mov
into
adc
adc
mov
jmp
add
adc
push
movsl
movsl
mov
shrb
pushf
aam
sub
jae
push
xor
sbb
xor
pop
xor
shrl
dec
fsubl
sub
loope
jo
push
xchg
dec
mov
in
sub
imul
ja
sub
fiadds
mov
mov
sub
add
int
fistl
dec
dec
lahf
loop
pop
xchg
aad
push
mov
xchg
je
push
clc
add
testl
aas
cs
testl
adc
mov
lcall
mov
dec
pusha
pop
sarb
dec
pop
mov
movsl
add
in
xchg
jl
mov
dec
mov
sbb
and
icebp
lea
push
adc
daa
add
xor
cmp
push
loopne
xorl
adc
push
or
mov
scas
ret
xor
andl
xlat
arpl
cmp
and
sbb
sbb
fdivp
repz
ds
ja
test
fidivl
jns
pop
cmp
lcall
or
push
rorl
insb
cmpsl
pop
ljmp
pop
lahf
push
orl
or
cmc
ljmp
test
or
aam
sbb
sub
add
icebp
movsb
xlat
inc
push
jl
and
or
xchg
mov
or
mov
aas
adc
inc
js
and
and
sub
adc
loop
and
pop
mov
mov
xor
add
je
cmp
test
int
rorl
sbb
push
adc
aas
ret
sbb
push
je
test
cmp
push
ljmp
push
out
push
sub
add
jp
push
je
sar
add
or
cmp
push
and
mov
or
and
arpl
and
xor
and
pop
pop
cmp
shrb
mov
cmp
push
imul
adc
test
dec
and
push
pop
dec
xor
call
or
add
add
jo
add
leave
push
xor
cs
pop
sub
pop
clc
cmpsl
mov
aad
xchg
push
xor
pop
ljmp
push
pop
pop
lock
jbe
pop
push
xchg
je
lods
push
adc
and
or
pop
sahf
inc
sbb
das
inc
mov
ds
add
sbb
and
popa
xchg
jnp
xor
ret
sub
lcall
push
inc
xor
sub
dec
xor
add
add
pop
fcoml
loope
xor
movq
loopne
fwait
xchg
cmp
loope
lods
add
sahf
xor
sub
js
pop
loop
ret
movsb
push
push
push
in
xor
insb
xor
xor
push
pushf
push
test
iret
in
shrb
dec
fscale
incl
ljmp
fnsave
or
push
dec
xchg
push
les
lds
pop
sub
sub
inc
push
inc
in
jmp
xchg
or
add
bound
push
arpl
lods
stc
mov
cmc
js
aas
mov
sub
push
jmp
pushl
add
push
pop
mov
lds
clc
lea
push
subb
ret
cmpsl
mov
inc
in
in
xor
pop
xor
or
or
xchg
dec
into
adc
mov
adc
sub
adc
mov
mov
jl
andl
mov
mov
js
jb
repnz
push
add
cltd
enter
ficompl
or
pop
cmp
fs
dec
xor
pop
test
push
in
js
ud2
adc
scas
inc
xor
add
push
fcoml
shll
movsl
fildll
fstl
scas
test
hlt
mov
xor
inc
adc
test
hlt
pushf
sub
add
push
xlat
push
movsb
mov
pusha
loopne
fdivr
push
push
lds
adc
cmpsl
dec
jl
and
or
sbb
test
jne
je
push
pop
fisubrs
mov
xor
js
push
add
inc
push
jbe
pop
ljmp
aaa
cmp
das
pop
bound
xor
or
mov
fcoms
add
add
sub
mov
movsl
add
pop
pop
sub
movsl
divb
or
push
shll
rolb
add
adc
and
outsl
pop
xor
cmp
cmp
cmp
add
imul
mov
aaa
ret
testb
je
aaa
jecxz
push
fdivl
cmp
decl
dec
jl
loope
xor
push
fildl
pop
pop
adc
test
and
xor
push
fisttps
shrd
inc
mov
leave
jge
push
xor
xchg
cmc
pop
jae
test
cmpsl
cwtl
jl
daa
sub
add
nop
and
inc
mov
aas
mov
sbb
or
jge
push
pop
pop
leave
xor
add
sarl
aaa
add
add
mov
movsl
movsl
hlt
and
frstor
mov
loopne
rol
mov
test
test
or
incb
pop
add
loopne
jl
test
add
pop
fs
jmp
push
cmovle
jo
pop
ds
in
xchg
sub
mov
data16
xlat
and
push
xchg
mov
and
lret
mov
test
neg
adc
or
mov
add
test
push
inc
cmc
sub
inc
pushf
jmp
es
xlat
out
adc
dec
fwait
mov
pop
js
rcrb
push
push
inc
inc
push
std
lcall
imul
cltd
idivl
push
xorb
jo
test
mov
rolb
in
xchg
mov
xor
cmp
push
dec
loopne
outsl
ret
push
push
mov
add
sub
in
or
movsb
mov
push
je
push
pop
xor
dec
shlb
addr16
xor
mov
addl
aas
movsl
add
in
and
sub
inc
inc
and
rolb
push
cmpsl
or
xrelease
fcomp
movsb
stos
dec
mov
aas
or
sub
daa
jp
imul
mov
xor
addl
jmp
je
movsl
dec
andl
dec
test
stos
loope
mov
nop
cmp
or
dec
notl
mov
push
add
sbb
imul
orl
sub
adc
pop
jbe
push
add
or
scas
push
jo
xchg
sbb
mov
push
xor
push
or
test
xor
cwtl
sub
fld
roll
orl
sub
inc
loopne
xlat
inc
in
or
andl
nop
dec
mov
imul
mov
dec
insb
add
sbb
mov
hlt
adc
pop
shl
add
out
sbb
adc
sbb
adc
jae
jg
inc
cmp
adc
sbb
jecxz
inc
sbb
loopne
xchg
cmp
loope
xchg
mov
loope
add
xadd
push
push
or
enter
xor
mov
push
xchg
mov
xor
mov
lcall
adc
sarb
mov
sbb
cmp
cmp
dec
cli
jae
mov
aam
ja
cli
push
cld
pop
movb
sub
dec
pop
movsl
jge
movl
andl
add
test
or
out
push
loopne
adc
cmp
dec
js
sbb
add
outsb
push
movnti
pusha
insb
std
jg
and
mov
in
fcmovnb
mov
repz
inc
and
in
cwtl
cwtl
pop
insl
out
in
sbb
fsubs
mov
or
hlt
sbb
jne
fnsave
mov
arpl
pop
cmp
pop
cmpsl
adc
inc
lock
dec
add
jmpw
dec
jns
in
int
xor
lret
push
int
out
jno
testb
sbb
xor
mov
mov
mov
push
sub
xor
adc
inc
mov
enter
inc
and
in
mov
subl
jge
shrb
mov
mov
inc
xchg
add
and
jge
rcrb
test
adc
or
insb
leave
out
mov
inc
push
insb
insb
int
inc
ss
adc
test
cmp
xor
cmpb
imul
fmuls
rorb
xchg
mov
inc
xor
bound
mov
pushf
add
scas
xor
je
pop
push
cmp
add
dec
jg
push
loopne
jnp
mov
cwtl
adc
push
mov
subb
loopne
push
push
jne
jbe
test
push
pop
mov
sbb
sbb
mov
sub
adc
adc
inc
pcmpgtb
inc
xor
addr16
and
sarl
push
int
sub
test
inc
sahf
fs
mov
out
repz
repz
rcll
arpl
sbb
push
push
xor
js
adc
jo
sti
dec
sbb
movsb
arpl
cmp
minps
movsb
and
je
or
stos
mov
test
cmpb
cmpsl
mov
lahf
mov
shrb
xchg
dec
ret
pop
cld
fildll
fdivrs
sub
inc
pop
cli
nop
arpl
push
cmpsl
addb
push
mov
aad
in
lea
inc
mov
jp
jl
cwtl
cmp
outsl
ficoms
xchg
orb
sbb
push
mov
hlt
and
pusha
pop
rcrb
fwait
pop
fmuls
push
push
sub
shlb
pop
xlat
incl
roll
mov
push
cmp
mov
sbb
jbe
mov
les
jnp
mov
push
loope
and
fs
or
leave
repnz
pop
testl
je
rol
jo
dec
es
xchg
iret
fsubrp
dec
mov
add
test
and
add
and
sbb
jmp
sbb
sbbl
loop
fdivl
add
and
sub
add
dec
loope
push
je
popf
add
into
cwtl
add
jl
sub
pushf
sbb
out
pop
testl
xchg
sub
xor
lods
add
testl
mov
das
inc
jle
xor
or
mov
neg
ret
ja
push
inc
sub
rclb
and
cmpsb
add
ret
adc
imul
xor
pop
mov
or
scas
rcrb
jo
push
orl
and
insb
js
int3
jbe
sbb
sbbl
sub
pop
push
push
push
and
xor
add
or
xor
cld
ret
xchg
add
mov
mov
sbb
sbb
dec
ret
or
rorl
loop
pop
clc
push
imul
js
roll
cmpb
testl
pop
add
ret
jbe
and
sub
jle
ret
pop
sbb
mov
imul
mov
add
lret
mov
rclb
rcll
shrb
adc
sbb
push
cmp
mov
mov
jbe
addl
dec
lea
loopne
jno
xchg
cwtl
and
xchg
adc
pop
lahf
add
out
das
in
daa
sahf
in
add
adc
lret
mov
test
jecxz
jo
cmp
fsubrl
push
or
fimull
ret
loop
or
push
push
cmp
jecxz
add
cmpsl
movsb
pop
jmp
cmp
cld
push
add
cltd
mov
push
cmp
inc
shl
push
clc
dec
inc
xchg
adc
adc
test
xchg
std
mov
je
pop
xchg
popa
psllw
push
xchg
lods
mov
or
push
push
push
sbb
jge
cmpsb
jne
ret
outsl
nop
dec
lcall
dec
ja
je
or
je
or
sub
adc
xchg
scas
andb
jns
mov
push
push
or
add
cli
js
jne
sahf
cmp
negb
pop
add
push
jmp
cmp
movsl
test
bound
sub
cmp
shrl
inc
call
add
loope
inc
aam
out
addr16
jbe
mov
clc
cmp
adc
mov
jae
or
mov
mov
pop
lds
cmpsb
or
add
inc
push
out
push
adc
jo
mov
push
sbb
push
sti
or
adc
and
dec
movsl
loopne
shlb
paddw
xchg
and
test
repnz
lods
cmpsl
nop
xor
and
push
test
outsb
bound
inc
dec
je
sub
push
sti
sub
or
cmovnp
adc
cld
sbb
outsb
fldt
outsl
stos
mov
jbe
cltd
shll
or
push
adc
stos
or
lds
add
fs
inc
add
dec
in
fldt
insl
inc
and
cmc
xor
or
jbe
mov
cmp
adc
or
xchg
js
push
cmp
and
jne
push
or
inc
fldenv
and
rcll
cmpsl
inc
cmp
mov
addr16
cmp
mov
xor
pop
mov
push
out
je
push
loope
push
or
xor
jmp
or
sbb
xchg
mov
push
add
dec
and
xchg
push
jo
mov
or
push
push
add
popa
mov
push
or
in
ret
fsubs
lcall
xchg
cmp
mov
les
std
xchg
add
xor
dec
mov
adc
enter
cmp
and
cmp
inc
add
add
add
cmp
mov
add
inc
fwait
and
sub
add
xor
add
imul
les
sub
jecxz
cmp
aam
in
call
add
fcoml
jmp
in
push
notb
xchg
xor
int
cmpsb
mov
cmc
fcomp
xchg
out
push
mov
inc
orl
or
jbe
inc
cmpb
xor
mov
cmpsl
fs
jl
mov
xchg
js
push
xor
les
stos
dec
aam
jp
jo
fmuls
in
xchg
push
xchg
icebp
xor
dec
adc
inc
add
sub
xchg
lods
or
sbb
push
jne
iret
repz
mov
bound
adc
insl
leave
imul
jmp
cmp
mov
and
or
xor
xor
inc
loop
shll
push
xor
jl
mov
inc
push
xor
or
mov
pop
jae
ret
sbb
or
jge
mov
adc
jo
fists
push
fstl
xchg
div
inc
clc
or
inc
fcoml
push
out
lahf
ds
testb
clc
jne
in
mov
andb
and
pop
mov
rorl
jb
push
repnz
leave
and
loopne
outsl
and
sbb
daa
insl
xor
mov
or
or
mov
pop
jle
rolb
or
outsl
and
sub
data16
inc
mov
ja
dec
pop
cmpsb
xchg
movsl
sbb
add
sub
mov
push
sub
sub
loop
sbb
pop
roll
or
ljmp
mov
xchg
xchg
inc
inc
mov
or
loope
sub
mov
push
roll
ds
test
jmp
add
pop
pop
xchg
or
mov
xchg
or
inc
jo
stos
pop
movsb
call
inc
jp
push
gs
cmp
and
inc
leave
je
rorb
cmpsb
repnz
fsubrs
fsub
jge
adc
sahf
cwtl
in
add
out
push
push
xchg
push
sub
sub
imulb
int
mov
call
inc
xor
xor
out
aaa
divps
xorl
cmp
mov
and
cmp
hlt
sbb
es
jne
jnp
inc
test
dec
or
cltd
or
adc
iret
or
nop
cmp
lock
mov
sbb
jne
jnp
nop
icebp
mov
fcoml
mov
xorb
jno
cmp
sbb
mov
and
pushf
mov
or
pop
adc
or
push
and
gs
in
test
add
sub
or
out
add
push
bound
lods
adc
pop
lahf
mov
scas
dec
mov
mov
sbbl
push
add
and
add
mov
add
push
or
enter
sbb
and
xchg
out
cmp
or
fs
xchg
jo
add
mov
xor
fdivrp
and
notb
jns
mov
lock
push
push
jmp
mov
loope
pop
enter
jne
mov
fldt
adc
les
sub
sub
add
mov
jg
jne
addb
test
adcl
cmp
push
js
xor
adc
fwait
xchg
cmp
lock
out
sar
mov
sti
or
inc
loope
sarb
sbb
call
pop
das
push
sbb
out
push
loopne
jmp
std
and
adc
iret
jmp
cmpsb
inc
sbb
cmp
lods
mov
and
out
sub
adc
pop
inc
daa
cmp
add
insl
arpl
jl
shll
jb
add
xor
mov
inc
adc
mov
stos
add
cld
js
sti
push
pusha
popa
and
divb
ret
pop
jno
sub
add
aas
push
into
jle
out
orl
pop
adc
xor
jbe
mov
lcall
ss
adc
adc
xchg
mov
adc
xchg
inc
mov
inc
inc
inc
dec
add
nop
push
sub
add
xchg
sbb
push
das
adc
fadds
dec
je
mov
popa
push
test
sub
enter
sbb
add
push
rcrb
adcl
clc
xor
sqrtps
lcall
and
arpl
pop
out
pop
and
fstl
addr16
fdivrs
mov
xor
mov
repz
lock
jmp
lock
push
cmpsl
sarl
jmp
xchg
ds
jg
cmp
push
lahf
or
in
je
pushf
lock
je
pop
add
push
inc
cmp
roll
cmc
outsl
dec
or
inc
and
rol
arpl
das
pop
or
out
or
mov
lock
push
inc
push
lret
cmp
je
sub
adc
push
adc
mov
in
dec
mov
mov
jns
jo
dec
add
fdivrp
push
hlt
dec
mov
daa
cli
mov
loop
cwtl
push
inc
dec
dec
xchg
sub
jmp
je
cmp
or
mov
shlb
shrb
push
xchg
cmc
sbb
aam
push
cld
imul
mov
adc
push
and
add
sub
mov
add
inc
sbb
sub
cmp
cmc
add
xchg
dec
xor
xor
out
jle
sub
pcmpgtd
inc
push
add
pop
mov
pop
inc
sbb
add
cld
inc
fmuls
jae
imul
pop
pop
adc
lea
dec
cmp
add
add
jmp
adc
stos
cltd
push
nop
pop
and
adc
jne
loop
mov
sbb
adc
dec
sti
inc
arpl
pop
dec
or
stc
mov
test
sbb
xor
sti
imul
push
xchg
data16
xchg
sbb
jmp
cmp
lock
push
fcmovne
in
or
pusha
sub
xor
das
inc
and
lea
xlat
sbb
lcall
push
xchg
sub
dec
push
adc
mov
jae
mov
mov
cmp
xor
pop
cmp
imul
mov
insb
inc
cltd
or
cmp
inc
or
out
imul
sbb
insb
sbb
movl
jo
add
sbb
dec
jmp
push
outsw
push
dec
test
add
dec
lock
push
insb
mov
xor
jno
add
pop
jp
pop
push
pop
xchg
sahf
testb
popa
int3
push
pop
pusha
push
inc
jg
adc
jns
out
jg
add
sub
mov
pcmpeqw
xchg
les
cwtl
dec
cmp
adc
in
mov
mov
or
push
mov
ds
pop
adc
and
dec
push
xor
ficoms
xchg
pop
inc
sub
push
pop
sbb
lret
outsl
cmp
adc
lods
nop
cmpsl
pushf
popa
or
cltd
cmp
push
sbb
bound
movsl
bound
sbb
insl
or
mov
sahf
iret
test
jl
or
jg
movsb
push
loope
fucomi
lock
sbb
push
inc
or
mov
daa
inc
dec
fcompl
dec
push
pop
sub
add
pop
ss
and
mov
cltd
xor
addr16
into
das
xor
mov
xchg
xor
mov
in
pop
lcall
in
mov
frstor
dec
pop
mov
push
push
add
mov
fimuls
or
shrb
imul
or
pop
aas
loopne
loopne
js
push
push
add
mov
and
leave
pop
rcrl
jb
xchg
pand
incl
jne
cmc
add
or
js
pop
pop
mov
and
fsubrl
sbb
push
sbb
popf
add
sub
movsb
test
movsb
loope
fwait
loopne
xor
popf
mov
or
loopne
jne,pn
push
loope
add
lret
add
imul
ds
xlat
daa
add
sti
lret
loopne
mov
sbb
lahf
fadds
inc
dec
in
bound
xchg
subb
add
add
cmp
adc
je
add
icebp
loop
inc
dec
shll
repz
mov
add
lea
popa
jo
dec
insl
cmp
shll
add
or
fcoml
gs
sub
dec
int
mov
icebp
sub
clc
incl
in
out
addl
mov
insl
add
shlb
cmp
jb
xorb
or
mov
sub
test
or
fwait
add
jp
pop
or
in
stc
add
aam
adc
jne
sbb
xchg
xorl
xor
hlt
mov
or
add
in
mov
jo
xor
aad
rcll
or
and
fs
bound
cmp
add
pop
leave
add
lock
mov
fildl
pop
mov
rcl
jl
jecxz
or
xchg
in
xchg
jbe
dec
and
push
and
or
jmp
jne
icebp
adc
fcoms
enter
in
or
pop
add
sub
jnp
mov
sbb
test
sub
insl
pcmpeqw
mov
adc
enter
push
jp
sbbb
xor
pop
add
or
push
shrb
xchg
or
inc
mov
add
clc
sub
ret
mov
sbb
jge
adc
jb
lahf
outsb
decl
and
dec
push
mov
sahf
sbb
adc
cmpsb
cmpsl
std
js
sub
packuswb
add
or
sbb
imulb
add
lds
call
lods
dec
jmp
scas
lock
sub
mov
dec
add
mov
and
dec
sbb
mov
mov
pop
push
sub
add
sbb
push
sub
jns
aas
sarl
add
push
xor
or
fs
in
mov
or
outsb
add
dec
inc
pop
xor
pop
cmp
jbe
shll
push
leave
push
pop
or
nop
xor
ljmp
mov
mov
es
fnstcw
outsb
push
add
jno
jno
push
test
movb
lock
add
dec
mov
add
dec
sbb
cld
pop
movsb
mov
push
add
push
add
movsb
push
cmpsb
addl
or
jle
pusha
es
push
dec
stc
add
test
mov
jno
push
mov
cmp
jge
cmp
add
mov
cmp
push
shlb
sbb
lock
pop
pop
lcall
pop
xchg
add
aas
xor
test
sbb
add
negl
xchg
sbb
add
shrl
enter
sti
mov
pusha
adc
aad
repnz
mov
andl
push
add
and
lock
aam
outsl
pop
xor
addr16
std
inc
mov
ja
push
cld
adc
mov
scas
push
mov
int
pop
test
and
loope
inc
popl
cmp
pop
xchg
mov
sbb
push
fs
push
adc
ret
push
inc
and
mov
xchg
mov
ret
arpl
pushl
inc
syscall
mov
andl
mov
mov
pop
add
jmp
inc
adc
push
scas
mov
push
push
imul
dec
cld
je
je
mov
push
jbe
jb
pop
icebp
or
nop
push
mov
mov
aam
data16
and
je
nop
repnz
insb
xchg
loopne
sub
or
outsb
jmp
ja
clc
hlt
sub
push
and
add
inc
sbb
push
mov
iret
xchg
push
icebp
or
inc
add
ror
mov
sbb
adc
nop
nop
dec
push
and
pusha
cmpsb
push
mov
adc
cmp
mov
sbbb
adcl
fldt
ds
jo
repz
imul
mov
rcrb
dec
imul
push
and
and
loopne
mov
xchg
and
lods
fcoms
mov
leave
fwait
mov
or
adc
out
adc
mov
add
or
mov
xsha1
cmpsb
or
cmp
movsl
sahf
mov
call
or
mov
dec
stos
xchg
test
dec
stos
movsb
sbb
rolb
inc
mov
test
mov
fs
sub
pop
or
mov
mov
aas
mov
adc
add
xor
sub
sbbl
or
xchg
xchg
sub
inc
stos
fs
mov
inc
nop
pusha
pop
pushf
dec
or
popa
add
jge
dec
fcoml
push
or
push
aaa
add
push
rorl
push
sub
mov
cmp
dec
cltd
push
adc
sbb
sbbb
pop
and
mov
sti
adc
sub
pop
xor
loopne
mov
mov
push
pop
ret
aaa
xor
repnz
sbb
fisttpll
add
sbb
or
shl
rcll
inc
jns
mov
mov
or
inc
in
and
add
push
sbb
call
adc
hlt
inc
das
push
hlt
pop
xor
lods
popa
or
mov
adc
mov
ret
push
in
lods
xor
data16
popa
je
xor
dec
aas
lods
inc
xchg
cmp
movl
push
es
push
add
adc
fisttpll
push
add
pusha
mov
add
test
xor
icebp
push
mov
adc
mov
dec
mov
adc
jp
add
add
cmp
popa
jl
roll
xchg
in
cmp
loope
push
clc
sarl
stos
adc
jge
out
std
ljmp
icebp
scas
fcoml
pop
cld
sub
jge
loope
pop
pushw
mov
pop
add
adc
nop
jbe
sub
lea
clc
or
ret
sub
pop
inc
inc
xchg
add
ljmp
adc
sub
sbb
arpl
mov
imul
sbb
cmp
mov
adc
sub
add
insl
mov
cmp
rolb
sbb
adc
ret
cltd
inc
js
hlt
popaw
push
add
push
mov
inc
fs
push
sti
jl
test
lock
xchg
jg
cmp
js
jp
mov
sub
mov
cmp
cltd
pop
mov
test
push
pop
out
push
clc
mov
jle
dec
add
jmp
sbb
xchg
mov
lret
fsubrs
sbb
out
jnp
int3
dec
lock
es
xor
push
dec
std
pusha
or
inc
mov
xchg
je
jge
add
push
cmp
mov
xor
jo
or
das
sub
xor
xor
jno
cmp
cmp
das
das
inc
push
insl
addb
xorb
icebp
jecxz
addl
add
jg
sub
std
jno
movl
inc
sbb
jae
popf
jno
out
mov
inc
mov
inc
add
loop
dec
xor
add
or
xlat
je
or
push
bound
rclb
and
mov
mov
mov
mov
xchg
loopne
cli
mov
fisubrl
add
movl
push
mov
adc
cwtl
mov
mov
addr16
add
insl
push
iret
inc
adc
popf
cmpb
ss
push
test
inc
sbb
add
adc
jb
pop
or
add
pusha
push
shrl
pop
hlt
rclb
enter
dec
pop
sub
xor
or
bound
dec
adc
xchg
sub
out
dec
loop
inc
push
jl
cmp
mov
mov
mov
mov
mov
sub
aaa
mov
idivb
dec
adc
test
or
sub
lret
sub
xor
out
adc
cmp
xchg
sub
adc
jecxz
mov
or
mov
push
sti
rep
pop
les
adc
xor
rcr
int
or
sbb
jmp
sub
jae
add
ficoms
add
scas
push
inc
add
mov
inc
sbb
andl
call
jnp
and
jne
push
push
dec
mov
and
cmpsb
xlat
push
and
rclb
jecxz
mov
mov
dec
adc
push
data16
push
arpl
jle
sub
std
adc
and
and
adc
add
out
pusha
aas
mov
mov
imulb
xorb
in
adc
data16
jbe
inc
fdivrl
push
xor
inc
pop
arpl
int
outsb
sub
inc
jecxz
sarb
test
or
push
cltd
or
adc
cmp
push
iret
mov
push
add
add
in
jnp
pop
adc
push
push
push
cwtl
adc
sub
mov
add
rcrb
mov
mov
data16
sbb
add
incb
cltd
lock
or
into
popa
xor
push
push
adc
xor
ds
sbb
cmpsl
shrb
inc
push
fdivrp
loope
mov
lcall
inc
push
rcll
clc
inc
test
fidivrl
push
mov
adc
arpl
lods
daa
mov
cmp
or
lock
lock
js
cmp
orl
fisubs
sbb
and
sarb
dec
jne
xor
sti
dec
outsb
loopne
mov
cmc
jp
inc
andl
mov
mul
inc
sbb
loope
test
and
inc
and
rclb
outsb
push
ss
punpcklwd
sbb
shll
adc
insl
sub
jnp
jl
sub
dec
sub
jb
add
adc
mov
adc
add
push
shrb
cmp
into
cmp
and
jno
or
jnp
add
repnz
icebp
push
pop
and
testb
and
sub
xor
jnp
sub
mov
xchg
or
push
xlat
add
int3
add
xor
or
cmp
and
or
or
div
inc
cmp
xorb
ja
lock
or
adc
adc
outsl
mov
loop
lea
mov
sar
loope
shrb
aam
jb
xor
out
ret
cmp
pop
bound
mov
cmp
and
sub
xchg
in
mov
push
xchg
mov
outsl
arpl
imul
mov
loope
aaa
dec
sub
arpl
inc
or
popa
loopne
add
cmp
fmul
mov
adc
xchg
ja
and
xchg
rcll
scas
sahf
shrl
dec
movb
jl
int3
jb
mov
xchg
ret
and
or
pop
jmp
mov
cmp
pop
push
pop
lods
lahf
jl
or
push
cmpsb
cs
mov
push
push
add
je
imul
mov
and
enter
jmp
sbb
mov
or
mov
pop
inc
sub
jne
or
ja
pushf
sbb
jecxz
pusha
and
adc
jmp
movsb
shlb
inc
dec
insl
xor
aad
xchg
sbb
jo
jnp
lods
ljmp
mov
sub
in
fsubrs
incb
mov
jp
cmp
xor
push
mov
jb
mov
xor
lret
in
jns
xor
es
hlt
jae
adc
insl
add
jae
jne
add
pop
in
and
jp
add
icebp
testb
push
sbb
add
popf
dec
cmp
inc
inc
push
push
clc
pop
inc
dec
mov
stos
rcrl
jb
or
inc
sbb
jecxz
dec
jnp
sub
pop
adc
movsb
cmp
and
mov
push
dec
jne
add
mov
sbb
arpl
test
sub
leave
add
xor
subl
scas
test
push
daa
fwait
sbb
movsb
or
cmp
dec
sbb
cmp
and
outsb
fildl
arpl
ss
nop
or
add
cmp
adc
or
imul
outsb
arpl
fwait
lods
dec
mov
jae
jmp
mov
sbb
cmp
xchg
lret
add
jae
sti
js
and
inc
outsb
iret
cmp
aas
or
fstl
push
pop
and
mov
sub
cmpsl
jne
fistl
sub
je
je
and
ret
lods
fucomi
or
fwait
add
adc
or
aam
je
and
sub
add
cmpl
pushf
test
fwait
sub
mov
dec
out
sbb
ljmp
lods
jae
cmpb
aas
and
push
inc
push
xor
add
and
inc
push
and
inc
sbbb
and
jb
cld
sub
sbbb
mov
sub
sbb
jb
and
cs
lret
les
jae
or
jb
lcall
push
mov
cmpsb
lret
inc
push
sub
imul
xor
or
xor
mov
xor
cmp
add
fisttpl
mov
cmp
cld
or
std
pusha
mov
pop
add
fdivp
outsb
imul
pop
sbb
dec
popw
fucom
sbb
sbb
ret
daa
test
fdivl
pop
mov
sub
loopne
nop
insl
sbb
fcmovb
dec
jne
lds
aaa
mov
rorb
mov
jge
pop
loope
lret
pushl
push
or
or
cmpsl
fnstsw
sub
mov
push
add
or
adcb
lds
ja
or
outsl
inc
mov
shl
dec
sti
xor
fimuls
enter
cmp
rorl
int3
loopne
in
mov
mov
mov
pusha
test
add
fiaddl
xchg
mov
mov
jo
loope
xchg
test
xchg
xchg
cmpsl
sbb
movsb
mov
mov
test
push
cmpsb
jle
hlt
push
adc
xchg
dec
cli
push
orb
xor
sbb
xor
push
sub
inc
sub
nop
inc
pusha
jno
insl
inc
xor
jg
push
mov
pop
fcoms
insl
lret
enter
sub
pusha
std
sub
movsb
xorl
loop
sbb
xorl
shll
ret
inc
repnz
lods
cltd
or
fistpll
loope
ret
and
and
mov
call
and
popl
xchg
cwtl
cmp
xorl
adcb
pop
push
mov
scas
dec
pushf
addb
pop
adc
dec
add
mov
push
inc
mov
std
shl
fsubl
xor
aas
mov
mov
pop
nop
jo
push
adc
fdivrl
addl
mov
jbe
mov
pop
adc
mov
aas
push
jns
addl
lods
inc
add
push
sub
dec
xor
in
push
lcall
adc
aam
pushl
sbb
int
inc
xchg
pop
loopne
adc
xor
outsb
xor
xchg
lcall
aam
sahf
lea
mov
xorb
push
and
jne
orb
test
cmpsb
in
cmp
aaa
pop
add
dec
jae
das
ret
push
inc
loop
xchg
arpl
push
mov
mov
or
or
lock
dec
dec
sbb
je
outsb
jecxz
nop
push
and
int
mov
cltd
inc
pop
jno
or
out
mov
or
ljmp
gs
rcrl
pop
aam
dec
add
enter
int3
inc
sbb
xorb
mov
in
pop
push
cli
and
lret
xchg
mov
sbb
lea
les
xchg
cmp
aam
cmp
ret
pop
mov
sub
xor
cmp
enter
gs
shrb
push
jmp
cmp
cmp
xchg
pop
jge
dec
push
test
dec
push
xor
pop
inc
test
mov
xor
ret
lods
dec
push
cli
sub
push
imul
inc
and
les
jmp
adc
outsl
lock
xchg
mov
push
jnp
inc
test
dec
sbb
test
cwtl
or
and
inc
or
or
pop
xorl
decl
cmp
jl
mov
adc
mov
mov
psubb
jbe
jmp
stos
orb
push
movsl
push
subb
ja
daa
sarb
imul
mov
cmp
or
and
pop
sub
filds
push
push
mov
stos
ja
add
mov
cmp
dec
aam
outsb
inc
addr16
sub
add
and
inc
cmp
jl
adc
pop
mov
push
daa
out
pop
sbb
add
push
push
add
or
add
xchg
lea
enter
ficomps
movl
nop
call
loop
or
cmp
in
dec
sarb
sbb
or
inc
or
jmp
xor
pop
inc
jg
mov
push
xor
and
aas
push
jno
pop
push
fisubrl
mov
push
cwtl
call
xor
outsl
mov
clc
bound
push
jno
movsb
xchg
mov
xor
fwait
jo
stos
xorl
push
loopne
xor
or
out
xor
fisttpl
cltd
cwtl
mov
adc
rcr
gs
pop
lahf
dec
call
xchg
push
mov
pusha
decl
ret
adc
mov
or
inc
mov
dec
outsb
inc
lock
push
js
loopne
nop
pop
sbb
in
or
xor
nop
xor
pop
daa
loopne
cmp
and
or
nop
nop
pop
dec
test
dec
push
xchg
push
jns
rclb
dec
pusha
dec
movsl
fmuls
sub
imul
mov
lods
push
loope
inc
mov
movsl
push
mov
sbb
inc
or
int
leave
xor
into
sub
sbb
inc
incb
mov
cmp
add
and
test
and
and
xor
cmp
rolb
gs
icebp
fmuls
out
leave
and
rol
gs
add
xchg
pop
loope
sub
negl
and
in
sub
sbb
pusha
push
clc
jo
daa
push
sub
pop
xor
stos
mov
shrb
sbb
loope
jns
lcall
icebp
push
cs
sub
xchg
js
sarl
sub
pop
addb
xchg
cmc
cmp
jbe
repnz
pop
push
movsb
js
or
mov
add
stc
push
jno
ret
ds
xor
gs
idivb
das
and
outsl
and
xchg
adc
adc
xchg
pusha
xor
cmp
sub
arpl
dec
cmp
sbb
aas
or
insb
xor
rclb
or
mov
leave
or
or
icebp
scas
or
push
pop
sbb
xchg
aam
enter
mov
add
sbb
scas
or
push
inc
lret
add
sbb
test
mov
sbb
xchg
jnp
or
mov
inc
mov
mov
js
xchg
add
push
adc
dec
cmp
cmp
adc
cmpb
xchg
mov
sub
dec
mov
addr16
push
adc
dec
test
xchg
jnp
sbb
add
std
jo
jne
or
inc
lea
clc
add
and
mov
sub
lcall
cs
sbb
ret
pop
or
mov
ljmp
cltd
or
rclb
int3
test
push
push
mov
mov
ja
fwait
inc
jmp
mov
fs
lahf
in
pop
out
lock
aas
add
test
adc
push
mov
xor
sub
sbb
cmp
mov
sbb
push
mov
mov
inc
push
jbe
push
mov
xor
sahf
sarl
pop
ss
ja
outsl
push
cmpsl
mov
cmp
xchg
iret
add
xor
jne
mov
and
std
jb
subl
loope
lds
adc
xor
pop
push
xor
pop
add
pop
xor
xchg
mov
lea
sub
insl
or
sub
mov
xorb
stos
pop
jno
int3
jbe
inc
adc
mov
movb
lea
cmp
push
dec
pop
mov
xor
aam
or
mov
mov
ljmp
push
aaa
ficomps
inc
or
test
sbb
push
lds
xor
test
pop
stos
test
mov
test
pop
imul
in
enter
mov
dec
call
or
subl
mov
shr
sarb
rolb
jo
or
in
ret
movsl
fnstcw
or
jp
clc
and
mov
stc
lock
add
jmp
add
notb
jns
adc
mov
jne
dec
pop
inc
or
test
and
jnp
icebp
mov
jb
jl
nop
xchg
cwtl
pushf
add
or
pop
ljmp
mov
sub
mov
call
jo
shll
cltd
add
iret
sbb
clc
lods
enter
inc
dec
inc
imul
in
adc
popf
push
shl
movsb
rorb
dec
cmpb
lea
cmp
clc
cmc
and
or
jbe
sarb
movsb
sub
mov
cltd
jo
or
and
inc
inc
mov
movsl
or
push
popa
call
movsb
add
cld
jge
lea
shll
xlat
inc
shl
add
ss
lea
mov
mov
lret
ret
mov
cmp
xchg
sbb
inc
outsl
lea
lock
xor
adc
jns
mov
ficoml
movsb
lods
jno
sub
out
add
mov
or
push
rolb
mov
xchg
enter
or
mov
jne
ja
lea
adc
repnz
mov
insl
add
jae
pop
adc
in
mov
sub
sub
icebp
add
lds
das
mov
mov
js
rclb
adcl
rol
cli
fistpll
xor
stc
push
sub
mov
mov
push
test
jo
cmpsl
push
push
aad
scas
je
data16
inc
sub
add
popa
cvtdq2ps
mov
les
daa
pop
jo
lea
out
or
fildl
nop
push
std
xchg
pop
call
sbb
xor
adcl
rcll
out
xchg
int
movsl
xchg
adc
push
or
ret
das
rcl
cmp
pop
sbb
pop
nop
mov
insb
xlat
fndisi(8087
daa
adc
stc
push
sbb
mov
xchg
push
scas
stos
jo
cli
inc
sbb
int3
dec
in
jo
gs
mov
jnp
mov
mov
push
inc
std
xor
jo
add
cmp
ret
sub
push
pop
xlat
ret
sub
or
pop
lea
scas
or
mov
enter
cmp
mov
cmp
subl
push
mov
and
lock
and
clc
lahf
dec
loopne
cmp
adc
mov
fadd
push
sub
jl
loope
daa
xchg
test
jp
je
or
pop
rolb
ja
scas
pop
pop
or
inc
push
leave
sub
mov
lock
fs
sbb
arpl
jge
sub
dec
add
dec
movsl
or
test
out
add
in
test
push
add
pushf
int
dec
out
and
push
mov
scas
mov
and
inc
mov
xchg
mov
pop
push
ret
lgs
mov
in
scas
nop
adc
repz
sub
and
mov
ljmp
test
cmp
sub
xlat
push
or
js
pop
mov
mov
inc
clc
ss
jne
cmp
or
je
add
or
cltd
pop
mov
es
js
pop
push
add
adc
xchg
add
cmp
aad
pop
add
push
push
fsubrl
xlat
ds
mov
or
xchg
add
outsl
or
lea
add
lds
in
pop
or
inc
test
mov
test
decb
imul
push
les
dec
aaa
inc
iret
aaa
enter
outsb
lock
es
loopne
mov
sbb
cmpsb
add
push
add
inc
fcmovne
or
adc
cmp
fadds
xchg
cmp
inc
hlt
cmpsb
adc
hlt
mov
es
mov
push
push
jns
and
into
jns
adc
std
ja
decb
cmp
je
push
ljmp
pop
add
jnp
jmp
sbbb
repnz
xchg
es
fstpt
ret
jg
outsb
adc
inc
fnsave
jbe
or
inc
sub
jge
out
push
inc
adc
jle
xchg
out
lock
push
or
jp
outsb
xchg
and
and
pop
into
sbb
js
call
sbb
outsl
add
inc
cmc
push
lock
fsts
jne
jmp
or
jge
cmpsb
sbb
cmp
dec
cmp
mov
shlb
jp
sbb
repnz
push
xor
fs
inc
jmp
inc
jo
mov
cli
addr16
and
or
inc
ja
inc
push
lock
mov
or
addb
and
stc
push
or
pushf
pop
inc
out
push
mov
add
or
ds
loopne
lret
jmp
pop
cmpsb
jb
jmp
mov
xor
aad
shll
or
push
sbb
push
pop
test
call
outsl
pop
in
push
push
sub
adc
mov
xchg
hlt
pop
jecxz
outsl
inc
ret
adc
add
roll
cmpsl
mov
push
mov
js
mov
pop
mov
scas
jo
insb
aas
add
sub
loop
lods
sub
js
lret
sub
repnz
sbb
jmp
sbb
test
mov
das
sub
in
push
mov
and
sti
or
add
push
and
cli
or
sbb
iret
inc
sub
sub
cmpsb
jl
rcrb
stos
mov
les
enter
xchg
andl
in
test
push
and
in
shl
cmp
imul
rorl
sub
add
adc
xor
movsl
out
and
sbb
pop
and
xor
sbb
cwtl
xchg
shlb
xor
mov
adcb
fidivs
inc
push
icebp
xchg
adc
xchg
jnp
cmp
push
test
jno
daa
inc
jmp
test
lods
in
divb
lcall
fnclex
fcomi
and
pop
outsl
push
nop
int
add
test
cmpsb
add
adc
sub
xlat
stos
fldcw
and
sbb
and
iret
cmp
add
adc
mov
jmp
and
dec
and
lods
mov
sub
push
push
icebp
insb
mov
lock
push
adc
bound
in
sub
sbb
mov
jo
xchg
dec
cmp
fwait
mov
pushf
add
inc
loope
mov
inc
rolb
loope
lret
clc
add
dec
imul
inc
sbb
aas
mov
test
pop
push
stos
addl
push
andb
add
shrb
ret
pop
hlt
imul
mov
sub
mov
inc
or
push
sahf
and
push
rcrb
or
shrb
sbb
or
jne
ja
imul
cltd
jle
fdivs
dec
pop
cmp
push
fmul
xchg
dec
sti
push
adc
cmp
jbe
xorl
cmp
cmpb
fdiv
sub
add
cmp
pop
loope
icebp
push
mov
xor
xor
jno
sbb
dec
inc
or
jp
pushf
testb
aaa
arpl
push
xlat
and
popf
roll
sub
lahf
sbb
mov
fdivrs
or
cmp
sbb
cmp
and
sbb
cmp
sbb
inc
cmp
test
dec
mov
testl
cmp
insl
push
sub
loopne
mov
or
adc
fmuls
fidivrs
shr
xchg
test
push
mov
adc
mov
mov
add
or
enter
test
lcall
mov
shr
cmp
jbe
add
jmp
add
stos
shr
fnstsw
ret
and
dec
loopne
sbb
jl
sbb
or
mov
shrb
adc
aaa
xor
cmp
icebp
push
mov
add
mov
gs
mov
push
js
mov
mov
cmp
ret
inc
xchg
xor
add
iret
and
adc
sti
imul
push
sub
pushl
add
mov
mov
dec
xchg
cmc
cmp
pushf
test
mov
jo
and
push
pop
shlb
mov
test
movsl
sbb
lods
mov
outsb
xchg
and
pop
mov
mov
xor
or
mov
pop
ret
sub
call
jb
pop
push
add
test
and
es
pusha
xchg
jnp
les
pushf
ret
cwtl
jg
movsb
test
outsb
mov
les
dec
jg
and
sub
je
ret
jnp
sbb
mov
addr16
inc
movsb
jb
add
add
in
fiaddl
or
mov
mov
sub
mov
iret
mov
fs
lock
rorb
sub
movsl
mov
or
jns
repz
les
push
xor
lea
scas
xchg
and
add
and
adc
add
sbb
data16
int
popf
inc
ret
mov
xor
inc
int3
adc
cmp
push
in
in
out
cmp
adc
lods
cmpsb
push
jb
lahf
enter
or
xor
or
cwtl
or
or
xorb
ljmp
idiv
sub
leave
dec
loopne
in
push
iret
push
xor
push
scas
fnsave
push
and
or
jl
dec
jmp
insl
add
fadds
sub
add
or
inc
popf
les
sub
inc
movsb
je
lcall
popa
in
jno
ljmp
push
dec
pop
push
sbb
or
xor
xor
sub
push
femms
aam
dec
or
jo
popa
add
adc
enter
jmp
push
rclb
pop
outsl
cmp
outsl
pusha
pop
in
push
fistl
mov
rorl
cld
mov
test
andb
out
sbb
push
repz
sahf
out
fcomip
push
pop
out
aam
adc
mov
adc
dec
add
inc
es
or
push
push
or
mov
inc
push
inc
je
pop
push
add
pop
mov
rol
clc
xchg
test
pop
fsubrs
jnp
and
fnstsw
fucomip
lock
inc
add
mov
push
pop
dec
push
cwtl
sub
fdivrs
adc
jbe
adc
jno
shl
in
xor
test
pop
adc
add
add
popf
mov
fdivrl
add
and
in
pop
add
push
lcall
inc
sub
pop
loope
xchg
dec
push
push
xor
xor
inc
or
es
push
fimull
pop
pop
mov
cmpsl
pop
jg
cmp
mov
xchg
cwtl
es
lods
movsl
and
xor
outsb
pop
adc
xchg
addl
test
mov
lock
dec
jnp
mov
pop
lahf
lock
cli
dec
sbb
adc
jbe
jbe
or
or
inc
mov
push
mov
dec
test
daa
pop
dec
ss
jle
pop
inc
sbb
test
push
outsl
adc
hlt
push
xchg
add
or
add
cmpsb
xor
mov
mov
mov
ds
fistl
and
lods
jl
scas
mov
clc
lods
adc
mov
inc
mov
mov
mov
sarb
loopne
cmpsl
aaa
push
decb
cmp
push
lea
lock
lods
push
mov
addl
dec
cmpb
push
js
mov
andb
add
icebp
adc
jge
cmp
dec
stos
sbbb
xor
cmpsl
mov
jo
jb
std
mov
je
js
add
mov
mov
mov
xchg
jl
orl
decb
test
add
xchg
dec
enter
sub
mov
mov
int3
les
add
xchg
ds
fs
fwait
call
jmp
add
pushf
xchg
xor
or
add
inc
in
adc
pop
loopne
inc
filds
sub
jp
fildll
cmp
je
sbb
pop
std
hlt
push
and
and
push
mov
hlt
ret
sbb
or
or
xlat
and
out
sub
mov
lods
or
xchg
mov
mov
push
sub
repnz
push
sub
sub
add
sbb
or
bound
mov
lret
sbb
movsb
xorb
stc
ret
mov
push
jg
push
or
shll
aaa
cmp
push
cs
mov
inc
push
push
aaa
stos
mov
movsb
stos
mov
push
or
mov
mov
mov
ja
mov
nop
rclb
out
xorb
test
movsl
out
ret
stos
push
push
push
and
jle
xor
stc
test
inc
outsb
sbb
xchg
cmp
popa
lock
add
add
in
test
sbb
out
hlt
pop
push
sub
sbb
cltd
or
jno
insb
or
jecxz
cmp
cmp
inc
sub
cs
imul
dec
imul
test
outsb
mov
xchg
dec
pop
inc
pushf
arpl
mov
outsl
ror
pop
dec
xlat
add
sahf
inc
mov
lea
inc
mov
shlb
leave
cmp
adc
mov
or
dec
or
mov
lahf
cmc
std
adc
imul
sbb
dec
push
mov
aad
or
outsb
or
and
xor
leave
jne
xchg
add
inc
mov
ds
ret
sbb
dec
mov
ret
xchg
rcr
incl
adc
push
pop
adc
lods
lods
pusha
testl
xchg
sub
jmp
mov
xchg
push
push
jo
ljmp
inc
out
repz
enter
leave
je
sbb
cld
add
es
mov
jmp
fldl
aam
lcall
ret
addb
jl
inc
cmp
test
or
xor
ffree
aas
or
or
movsl
sar
sbb
push
clc
push
sbb
pop
or
pop
mov
pushl
clc
pop
fsubr
pop
faddp
andl
sbb
dec
and
ja
lret
faddl
ja
cs
pusha
cltd
adc
loopne
or
clc
andb
data16
mov
movsl
jle
ret
loope
push
inc
popa
clc
push
pop
fs
adc
mov
add
xchg
add
sbb
arpl
jp
inc
loope
shl
test
iret
sub
add
lea
push
or
lea
js
in
inc
lret
sbb
sbb
or
xor
sbb
lret
popl
outsl
sbb
push
dec
pop
xchg
dec
push
filds
mov
cmp
dec
mov
int3
dec
add
lock
jecxz
into
lock
push
sahf
pop
add
jp
jne
cmpsb
mov
sub
pop
insb
in
inc
sarl
mov
add
mov
into
enter
mov
jmp
mov
cmp
jge
adc
dec
push
pop
push
mov
inc
adc
pop
push
ud0
push
pusha
adc
icebp
xchg
jne
inc
lods
push
mov
jmp
out
cwtl
fidivs
mov
adc
pop
add
cmp
xorl
and
pop
popf
sbb
xchg
mov
mov
imul
inc
add
jb
ljmp
push
add
bound
jns
mov
mov
adc
add
xchg
jle
jp
pop
add
and
dec
or
mov
mov
fs
ffree
cltd
add
adc
test
lods
and
xor
ja
out
inc
and
jnp
inc
dec
and
ret
and
push
or
dec
loopne
dec
decl
inc
adc
sbb
jge
test
repz
mov
inc
sbb
inc
pusha
pop
cmp
adc
and
cld
insl
dec
repnz
xchg
rclb
mov
cli
jno
dec
movsl
and
pop
lret
xor
cmc
outsb
and
push
push
adc
push
test
imul
leave
adc
rclb
lods
sub
pop
adc
pop
pop
cmp
fadds
lods
adc
js
adc
sbb
dec
ljmp
sbb
mov
ret
ret
xlat
lods
lock
insb
add
mov
je
popf
push
push
push
jo
mov
and
adc
mov
xchg
sbb
pop
sub
and
or
fdivl
dec
mov
xor
jle
adc
call
call
push
or
js
mov
movsl
mov
std
pop
dec
add
add
sub
mov
std
xor
mov
arpl
sub
push
imul
xor
add
shl
push
push
push
hlt
pop
push
mov
ret
adc
in
daa
in
push
les
cmp
hlt
xchg
xchg
sbb
idivl
popa
cmpsl
lret
sub
xor
and
shlb
jns
fbld
mov
fwait
fs
outsb
int3
jmp
ja
mov
in
mov
mov
orb
inc
mov
rol
nop
sahf
push
sbb
jnp
inc
push
in
and
xchg
scas
inc
loop
fidivrs
pusha
jecxz
or
ss
dec
jecxz
push
sub
push
in
mov
leave
xor
push
cmpl
pop
cs
in
das
inc
xchg
xchg
push
cmp
push
sahf
and
cmp
sub
dec
int
mov
add
mov
add
mov
jge
dec
add
shlb
mov
or
mov
pop
cmp
jl
xor
or
or
or
pushf
cmpsb
xchg
and
lret
xor
push
push
mov
cmp
mov
faddl
mov
mov
sub
mov
lidtl
scas
pop
mov
inc
push
test
cmc
or
jecxz
xor
mov
sbb
test
fsts
sbb
jns
add
push
lcall
cmp
loopne
xlat
idivb
sub
mov
xlat
push
sbb
mov
lock
adc
setbe
js
iret
mov
addr16
clc
ss
cltd
push
push
insl
loopne
or
addl
xchg
mov
or
push
pop
rclb
mov
sbb
ja
add
and
push
mov
jmp
cmpl
or
fadds
into
cmpb
subb
pop
shlb
sub
mov
clc
mov
leave
pop
sbb
and
dec
cmp
fcoml
inc
fsubs
mov
add
es
fcompl
fidivrs
je
bound
dec
inc
push
sub
das
pop
add
sub
dec
sub
adc
mov
adc
add
add
mov
inc
xchg
cmp
inc
sub
add
dec
loopne
or
xor
cmp
pop
cs
push
jne
xchg
ds
lods
add
cmp
iret
cmc
or
adc
pusha
inc
ror
push
flds
push
ds
push
sbb
mov
add
insl
imul
stos
xor
xorb
into
pop
and
cmp
push
mov
lock
pop
xor
cmp
or
sub
or
lock
cmp
xchg
pop
sub
ret
xor
orb
lds
and
push
bt
xchg
and
dec
ds
nop
outsl
jnp
add
inc
mov
jo
ja
scas
loopne
inc
adc
lock
add
xor
mov
call
push
mov
stos
add
add
cmp
aam
in
dec
imul
cmp
aam
popf
xchg
mov
add
les
pushf
pusha
sub
and
dec
push
cld
or
inc
add
fldcw
sub
icebp
clc
in
pop
js
loope
fisubs
fsubs
mov
adcb
aaa
push
faddl
jecxz
xchg
xchg
xchg
inc
cmp
jne
and
call
in
sub
cs
cmp
xor
jnp
dec
enter
push
imul
cwtl
add
add
or
repz
fs
movsb
jns
std
in
pop
jb
and
cmp
je
jb
sub
pop
sbb
cmp
jb
dec
clc
pop
clc
jl
test
dec
sbb
sbb
adc
mov
loopne
in
xor
js
dec
aam
loopne
daa
pop
push
push
inc
dec
fwait
enter
sbb
add
xor
push
les
repnz
inc
push
add
orl
dec
xor
sbb
xchg
dec
xchg
pop
push
aam
mov
ds
aaa
sarb
add
push
pop
or
mov
and
sti
jb
push
inc
repz
inc
pop
aad
insb
xor
stc
pop
aam
and
push
stos
push
cmc
in
sub
or
bound
pop
divb
push
adc
push
test
enter
adc
jecxz
jo
pop
push
mov
repz
or
cmp
cmp
popa
inc
jp
add
or
popf
ret
dec
mov
add
sbb
cmpl
inc
ja
pop
pop
lock
cmp
das
movsb
bound
add
adc
adcl
iret
popa
add
in
cmpb
mov
or
mov
inc
cwtl
outsl
movsl
mov
rcl
mov
add
dec
loopne
sarb
adc
push
and
mov
popa
ffreep
iret
add
pop
cmp
add
ror
les
and
mov
inc
repz
mov
subl
mov
xor
push
in
pop
ja
pop
add
call
rolb
ret
aad
sbb
sbb
xchg
fildl
add
js
int
mov
inc
adc
inc
and
icebp
and
mov
push
shlb
jmp
push
mov
mov
jge
xchg
popf
ljmp
pop
ret
or
rol
mov
je
sub
xor
or
mov
push
sbb
rcrl
in
mov
pusha
and
sahf
cs
add
lret
push
and
xor
sarl
push
inc
and
insl
test
sub
in
rcrb
sub
push
cwtl
and
pop
push
ja
add
mov
push
fstps
cmpsb
inc
sub
dec
iret
mov
mov
lret
mov
mov
pop
scas
xchg
sbbl
popa
add
push
xchg
sub
test
imul
mov
inc
mov
inc
jmp
adc
mov
mov
inc
cmp
sbb
sbb
mov
mov
adc
mov
bound
push
mov
inc
orl
add
in
cmp
je
mov
and
add
push
dec
xor
insl
std
mov
push
add
xchg
test
ds
cmp
lods
lret
sub
push
ljmp
add
fwait
push
mov
mov
iret
repz
jl
push
inc
inc
dec
push
inc
repz
push
pop
sub
mov
cmp
xor
mov
movsb
pop
sbb
setg
adc
xchg
repz
inc
andl
add
add
xchg
testl
lret
ficoms
jle
pop
mov
mov
lahf
ror
rorl
xor
push
inc
push
das
sub
scas
pop
or
mov
push
add
mov
mov
mov
jmp
out
xorb
cmp
jno
aas
andb
shrl
jmp
push
fs
loopne
xor
or
push
shrb
movsl
xor
aaa
cmp
push
sbb
cld
loopne
push
push
jp
int
xor
in
jo
enter
sub
dec
gs
imul
cmp
sub
lret
or
push
xor
fdivs
mov
adc
inc
scas
in
or
push
xchg
add
or
mov
outsb
xchg
mov
in
push
inc
xor
inc
loope
pop
sbb
mov
inc
sub
les
dec
jbe
aaa
movsl
pusha
pop
xchg
add
jne
pushf
cltd
fmuls
pop
jae
jo
inc
js
and
push
add
cmovae
xor
dec
xchg
or
xor
mov
cld
and
call
push
pushf
fcom
adc
or
pop
or
adcb
adc
sbb
pop
cmp
push
sbb
add
inc
inc
movsb
and
add
or
mov
jbe
push
inc
mov
mov
mov
xchg
dec
cmp
ss
pop
or
cmpsb
add
inc
jb
sbb
popa
jmp
int3
cltd
ss
lea
mov
xor
pop
xor
jns
je
sub
enter
orl
mov
imul
mov
pop
es
inc
mov
jmp
push
pop
jge
rcll
cmpb
out
push
in
es
into
jl
shll
mov
pop
enterw
adc
sahf
ret
xchg
xchg
add
ret
xor
pop
je
push
mov
mov
pop
xchg
cmp
adc
mov
jl
jmp
or
xor
push
cltd
inc
and
mov
je
or
jns
pop
sbb
push
sti
push
jmp
push
sbb
data16
je
sub
dec
ret
xchg
pop
int
stos
xor
pop
xchg
lock
jne
jl
fiadds
les
loop
lds
push
jge
lret
xor
fs
sub
inc
sub
mov
cs
into
lods
pop
sub
xchg
mov
ficomps
stos
pop
or
mov
or
sbb
dec
pusha
pop
test
into
sar
mov
add
pop
push
pop
xchg
nop
xor
sti
movsl
mov
js
add
sbb
push
push
jo
add
mov
dec
cld
inc
lock
and
mov
add
fs
stos
or
sub
push
clc
push
clc
mov
and
arpl
mov
push
mov
adc
dec
xchg
add
insb
add
jmp
fs
addr16
loopne
orl
pop
pop
mov
add
mov
jle
push
js
dec
xchg
add
repnz
test
adc
aad
mov
inc
test
jbe
sub
jecxz
mov
mov
outsb
mov
mov
cmpl
call
mov
push
std
jae
ret
push
fnsave
insl
popa
loop
aam
out
fldenv
jge
sbb
ja
sbb
mov
push
adc
add
dec
add
push
xor
inc
xor
push
pop
xlat
push
push
cmp
notl
aam
aas
jne
fcmovnb
in
add
add
mov
xchg
and
mov
out
movsl
mov
inc
jbe
adc
mov
cli
movsl
cmp
lods
and
test
in
call
mov
push
rolb
orl
and
fisttpll
add
cmp
inc
mov
jb
push
pop
notb
push
sub
popf
xchg
push
bswap
movl
fiadds
jmp
adc
adc
leave
jne
push
jmp
cmp
and
in
xchg
push
arpl
bound
enter
fadds
pushf
inc
inc
je
lcall
and
ja
gs
push
xor
adc
repnz
jb
and
adc
fs
dec
or
dec
pusha
je
movsl
stos
jo
lret
or
or
inc
enter
enter
lret
mov
sbb
pop
xchg
mov
mov
or
mov
xchg
mov
mov
iret
incl
xor
pushaw
cmpsl
dec
cmp
shlb
fcmove
test
mov
sub
sub
add
jge
adc
dec
jnp
or
mov
and
xor
jne
pop
push
push
in
icebp
dec
xor
subb
mov
jp
sub
adc
or
xchg
push
dec
mov
test
lret
movsl
sub
mov
fs
xor
stos
int3
xor
lcall
sub
adc
pop
push
jmp
bound
js
inc
mov
add
lods
inc
shlb
out
ss
or
and
stc
dec
adcb
dec
xor
sub
xchg
xchg
ret
cmpl
daa
stos
aas
mov
sbb
or
push
mov
pop
xchg
lods
ja
or
jne
jecxz
or
mov
adc
aam
rcrb
fcompl
dec
inc
inc
mov
and
das
icebp
add
jge
ss
push
dec
ret
xor
mov
and
aas
imul
cmc
mov
loopne
pop
in
sub
pop
popa
or
sub
add
pop
and
mov
xchg
jmp
jecxz
mov
jp
mov
ja
daa
and
insb
or
jns
cltd
cmp
andb
std
gs
rol
and
test
jbe
cltd
sbb
dec
jnp
sbb
loopne
lret
std
iret
push
xchg
test
mov
fldl2t
test
pop
jge
test
add
jae
push
add
mov
jle
call
idiv
clc
mov
adc
xor
xchg
dec
testl
sti
cltd
rol
or
add
jo
or
mov
jmp
inc
fisubs
cmpb
cmpl
sbb
xor
popf
shrb
jp
ret
pop
pushl
or
add
jl
cmp
cmp
fwait
dec
push
in
popa
ret
subl
es
mov
call
bound
insb
mov
mov
adc
mov
adc
sahf
fisubrs
push
xchg
sub
lods
jmp
inc
lahf
mov
jg
push
stos
jno
js
cmp
jl
sbb
push
push
adc
dec
mov
arpl
add
mov
aam
rclb
daa
jo
pop
cmp
push
hlt
stos
cli
lea
lock
sbbb
outsl
add
and
test
fsubrs
adc
jne
cmpsb
rcr
and
cmp
in
dec
sub
push
loope
and
xchg
adc
in
or
mov
insl
xchg
xor
mov
pusha
xchg
dec
or
and
pop
leave
outsl
xchg
call
add
inc
test
inc
movl
jne
lret
aam
mov
jo
mov
hlt
in
shr
push
push
sub
aam
loopne
lea
add
mov
sbb
mov
pop
add
add
and
jne
cmp
push
cmpsb
inc
xor
cld
cld
push
sbb
daa
lods
fsubr
add
fnsave
lods
imul
addl
jp
ret
push
lsl
nop
imul
sbbl
add
imul
je
add
daa
dec
insb
das
jle
loop
sub
jne
les
in
fucomp
add
test
mov
adcb
shl
dec
sub
jmp
in
cmp
nop
add
sub
sub
add
je
cld
into
push
push
add
push
ljmp
mov
cmc
xchg
or
jp
xor
cmp
pop
xchg
faddl
rolb
adc
mov
mov
out
nop
jo
inc
add
test
xorb
js
xorb
int3
sbb
push
adc
or
test
adc
idivl
adc
mov
test
adc
push
xor
push
inc
sbb
xchg
rorb
inc
jp
or
and
mov
icebp
or
mov
sbb
push
and
test
fiaddl
sbb
xchg
xchg
cmp
and
jbe
and
aas
iret
push
fwait
add
insb
nop
imul
ds
icebp
aad
mov
jno
enter
inc
dec
jecxz
mov
enter
add
adc
pop
ja
and
add
sahf
iret
dec
or
and
cltd
in
add
fidivrl
add
push
push
or
push
and
dec
pop
push
adc
jae
popa
jne
fsubs
sahf
mov
aam
loope
in
dec
adc
add
sti
add
add
or
push
mov
add
aas
pusha
push
push
cmp
or
jb
and
add
in
mov
call
inc
cs
or
xchg
addl
inc
inc
mov
dec
or
or
in
push
push
dec
push
enter
cli
ss
gs
repz
or
sbb
or
std
popa
imul
sub
sub
pop
jge
shrb
adc
add
leave
test
loope
add
push
nop
stos
add
add
dec
int
lret
fdivrs
add
adc
fiaddl
or
addl
adc
mov
dec
loope
xor
cld
rcrl
pop
push
add
rolb
adc
enter
adc
push
dec
cs
and
adc
addb
aam
inc
or
addb
cmp
clc
addr16
mov
daa
popa
mov
mov
sti
add
push
mov
push
cmp
dec
in
xlat
lods
test
dec
jns
inc
mov
rcrb
push
mov
adc
pop
cmp
adcl
xor
pusha
inc
push
jno
xchg
mov
inc
and
inc
dec
sbb
mov
dec
mov
call
and
lods
adc
shlb
push
add
mov
inc
sub
add
jo
mov
sub
adcl
hlt
push
jmp
in
push
lea
fs
add
push
and
dec
in
inc
loopne
pop
and
cmc
sub
or
test
loope
cli
sbb
push
pop
inc
push
adc
lcall
cld
fdivrl
repnz
scas
fsubrs
test
pushf
rorb
loopne
aas
and
fcompl
push
ficoms
je
jnp
ret
popf
mov
fsubrl
lods
test
insb
or
int
mov
mov
pop
mov
xor
push
jle
imul
add
negb
adc
ret
out
xchg
out
enter
lea
sbb
push
inc
inc
int
push
mov
in
inc
in
les
hlt
mov
jbe
push
cmp
sarl
adc
int3
ret
dec
adc
cmpsb
cs
fstpt
mov
add
cmp
jecxz
sbb
mov
out
int3
test
mov
out
add
test
mov
sbb
xchg
loope
xor
sarl
pop
mov
adc
mov
roll
ja
or
in
mov
pusha
adc
das
push
push
xor
or
cltd
add
pusha
and
or
adc
pusha
inc
notb
pop
push
rorl
popa
mov
pop
jo
cmc
dec
push
pop
and
orb
lahf
mov
or
cwtl
sub
aam
and
lea
and
mov
sub
ret
lea
es
insb
test
movsl
jnp
xchg
adc
push
pop
shll
loopne
enter
shrb
jno
push
in
es
adc
cmp
stos
ds
lret
nop
push
adc
aam
ja
jecxz
inc
pop
fcoms
mov
inc
test
sbb
sarl
call
mov
jle
repnz
add
pusha
mov
and
push
es
mov
xchg
push
insl
loop
fimull
push
out
in
pop
dec
dec
push
push
and
shl
push
push
dec
into
out
mov
je
andb
inc
lcall
in
movzwl
cwtl
mov
cltd
scas
jmp
fstps
and
sti
jl
cmp
std
jecxz
pop
jp
rcrl
adc
mov
test
push
cmp
cmp
cmp
cs
jg
iret
iret
xchg
push
cmpsb
mov
sub
shrb
mull
subb
aam
ds
ds
in
sbb
adc
mov
lret
push
js
js
adc
sbb
fstpl
shll
scas
jp
lods
cmp
fdivrl
rolb
movb
sub
or
ds
enter
push
add
shlb
xchg
mov
enter
es
loope
sti
add
cmp
lret
out
and
cs
add
sbb
nop
push
pop
sbbb
mov
ret
push
call
sbb
movsb
decl
sbb
cmp
fildll
adc
ljmp
or
movsl
jno
movsb
enter
popa
mov
cmpb
add
cs
add
jg
push
mov
mov
mov
mov
dec
movsbl
xlat
mov
lahf
cmp
jb
jbe
into
inc
pop
repnz
paddb
push
divl
fadds
sbb
outsb
testb
cmp
popf
dec
or
insb
cmovnp
and
mov
jl
pop
ret
bound
inc
add
jmp
cmp
cld
sub
pushf
mov
mov
jnp
mov
cmp
je
jmp
xchg
or
or
xchg
cli
mov
pop
mov
lahf
xor
dec
jp
and
imul
xor
or
add
lods
mov
pop
cli
adc
pop
xor
cmp
add
in
rclb
add
jl
inc
pop
or
rolb
fs
or
call
subb
addr16
or
fcompl
movb
call
xchg
xchg
add
xchg
pop
or
or
jnp
or
int
int
jbe
jmp
or
addr16
int
int
bound
jmp
adc
pop
adc
push
adc
int
int
dec
adc
dec
adc
aas
pop
int
int
jmp
sbb
xor
jmp
sbb
int
int
es
and
pop
pop
mov
jmp
and
jo
push
and
pop
hlt
inc
psraw
sbb
xor
sbb
jnp
sbb
ret
repz
loopne
out
repnz
and
sub
cmp
repz
inc
dec
push
pop
fs
cmp
repz
jbe
addb
xchg
cltd
repnz
out
sahf
out
test
mov
sahf
out
sahf
mov
aad
sahf
out
fcmovu
in
jg
pop
gs
fadds
add
and
or
or
push
pop
idiv
call
adc
adc
sbb
sbb
push
pop
and
and
aas
lcall
xor
dec
cmp
cmpsb
and
and
inc
ss
dec
push
dec
adcb
inc
adc
mov
addr16
fnstcw
mov
pop
fildl
les
movsb
out
adc
notb
shrb
add
test
add
lock
add
push
xor
dec
sbb
aaa
xor
pop
in
xor
int3
sbb
and
xor
inc
lea
shlb
cmp
sbb
adc
and
mov
add
pushf
daa
add
jp
daa
enter
sti
insl
sub
mov
fdiv
jbe
add
ljmp
sti
mov
adcl
aam
mov
roll
inc
jmp
xchg
xchg
and
push
push
xor
xor
loope
and
mov
sahf
xchg
pop
mov
mov
cmp
sub
xchg
popf
adc
and
jmp
decl
pop
and
mov
and
inc
fidivrl
sbb
leave
xchg
adc
ret
out
nop
loope
js
clc
cmp
movhps
sbb
cmp
add
cmpl
or
test
adc
and
bound
lods
movl
push
sbb
mov
and
fmuls
test
add
mov
cmp
imul
push
ss
insl
and
les
lock
in
add
dec
sub
out
xorb
rolb
push
and
lock
movb
js,pn
ret
movl
xchg
inc
int3
pop
fdivrs
inc
jae
cmp
cmc
add
add
aas
sub
mov
outsb
add
lgs
lock
push
inc
arpl
incb
mov
xor
mov
stc
ja
lea
imul
cmp
ja
mov
stos
mov
andl
inc
arpl
fcomip
aaa
inc
or
lret
adc
and
in
xor
orl
and
xor
adc
pusha
jbe
push
xor
xchg
add
add
sbb
add
pop
mov
push
and
pop
pop
in
inc
je
or
adc
add
push
or
stos
xchg
or
test
mov
pop
aad
fsubr
fnstsw
je
add
push
and
pop
and
mov
or
lock
pop
fsts
adc
sbb
inc
add
add
add
adc
mov
add
adc
add
sbb
subb
add
sbb
xchg
lock
mov
out
push
inc
xor
test
xor
mov
sbb
adc
push
and
pop
cltd
xchg
cmpl
xor
or
adc
jnp
pop
jb
repnz
aam
add
mov
add
sub
and
and
sub
and
jg
inc
jns
or
inc
imul
and
jl
inc
sbbb
ljmp
lock
push
loope
cmp
jl
xchg
cwtl
nop
push
xor
sub
pop
add
arpl
cmp
add
cmp
jne
lea
cmp
xor
jbe
ret
and
or
js
xor
mov
or
sbb
fsubrs
aad
or
xor
ffreep
or
cmpb
mov
dec
cmp
jl
movsl
fnstsw
cmp
push
js
je
cmpsb
jb
mov
and
test
xchg
and
fwait
lret
cwtl
cmp
jae
movzbl
push
push
inc
push
add
push
mov
outsl
adc
js
clc
push
add
and
aam
xorl
inc
xchg
pop
push
inc
jecxz
addl
jl
loopne
or
jg
mov
xor
movl
mov
sbb
mov
inc
outsl
push
jmp
pop
push
lahf
cltd
fidivl
lock
jmp
nop
jbe
cwtl
test
sbb
loopne
mov
cmp
inc
in
inc
shll
test
add
daa
and
ret
push
mov
sbb
shlb
sbb
in
js
adc
rol
sub
mov
adc
cmc
jmp
sbb
add
pop
clc
add
xchg
mov
mov
dec
mov
js
adc
adc
sbb
or
cli
mov
cmp
sarl
add
adc
dec
xor
xor
cmp
add
and
adc
cmp
loopne
jg
test
outsl
ret
sub
cli
popa
fwait
nop
mov
dec
rolb
insb
sub
scas
in
mov
or
and
neg
dec
xchg
cmpsl
cmc
mov
sbb
mov
or
jns
fucomi
insb
pop
je
int3
and
scas
je
sub
icebp
mov
loopne
popa
push
sbb
and
sbb
adc
and
test
call
jmp
or
add
adc
or
jg
fcoml
dec
pop
pop
dec
imul
add
sub
xor
cwtl
clc
je
jmp
push
adc
mov
bound
or
add
dec
xor
and
mov
sbb
les
push
mov
lock
loope
inc
inc
enter
sbb
imul
mov
push
mov
push
add
sub
sub
or
pop
inc
push
jb
sbb
push
cld
adc
add
inc
mov
fndisi(8087
test
add
inc
push
push
sarl
arpl
xchg
inc
adc
cmpl
jo
je
ss
js
fdivrl
inc
adc
pop
sbb
test
clc
push
es
sbb
addb
xor
mov
adc
and
and
push
add
out
sub
repnz
sub
adc
xor
sbb
les
dec
js
loop
por
loopne
outsl
inc
and
inc
in
pop
dec
xchg
int
outsl
and
pop
and
push
movb
push
adcl
es
cmpsl
cmp
hlt
or
lock
push
nop
jmp
test
adc
sbbl
mov
clc
movsb
mov
and
orl
imul
cmp
and
mov
push
inc
rorl
add
fstl
xor
mov
add
xor
push
sbb
lcall
cmpsb
imul
cmp
inc
xor
shlb
sbb
iret
in
adc
stc
push
scas
dec
popa
dec
or
jmp
mov
icebp
pop
push
or
xor
cmpsl
data16
cmpsl
jno
adc
mov
loop
ds
sbb
inc
mov
jne
xor
inc
or
push
fwait
jae
jo
xchg
pop
mov
dec
jae
clc
cld
cmpl
push
adc
push
xor
jle
push
sbb
adc
pop
jmp
xchg
or
lea
jbe
xor
sbb
leave
jno
xor
lock
movsb
sbb
push
dec
je
inc
mov
push
hlt
xchg
mov
adc
call
bound
je
lea
movsb
loopne
mov
xchg
xor
sbb
pop
push
cmp
inc
push
jg
and
push
adc
adc
jmp
adc
sub
ret
and
add
lcall
sub
adc
or
mov
cmp
sbb
push
orl
cmpsb
or
call
sbb
sbb
xor
aaa
nop
push
pop
xor
stc
test
push
pop
jnp
sub
test
les
mov
or
sahf
adc
fstl
mov
daa
addl
loope
sbb
xchg
lret
inc
loopne
inc
dec
inc
push
ds
nop
cmp
ds
js
pop
pop
and
in
xchg
inc
pusha
dec
adcl
cmp
ds
lds
mov
xor
lock
cmovle
cmpsb
xchg
mov
push
sbb
cmpl
push
sub
js
sbb
and
mov
insb
push
nop
pop
mov
imul
xor
xchg
bound
and
imul
pop
mov
xchg
and
mov
xchg
pop
leave
js
xor
or
xchg
test
push
and
ss
rorb
and
mov
cmc
push
out
push
lds
rorb
cmp
out
xchg
and
and
mov
xor
xchg
sub
and
imul
cmp
push
insb
stos
test
outsl
shlb
pushl
adc
xchg
mov
adc
jl
add
stos
add
rorb
adc
mov
je
inc
adc
hlt
sub
sbb
call
push
and
and
andl
jo
pop
sbb
repz
push
push
dec
adc
cmp
cmpsb
cmp
dec
fistpl
cmp
leave
xor
call
ret
push
adc
fisubl
and
xor
or
pop
movsl
je
jge
cli
dec
mov
inc
or
das
sub
adc
pop
add
lea
adc
jp
sbb
pop
lea
xchg
and
or
scas
test
mov
push
insl
push
and
sub
sar
rorl
das
inc
fildl
daa
imul
jo
in
mov
dec
test
dec
loopne
push
aas
fistps
lods
cmp
sbb
int
cmp
sub
and
movb
mull
pusha
jmp
inc
sbb
xor
add
push
push
dec
movsb
xor
mov
mov
lcall
into
pop
and
mov
ret
xchg
ds
mov
mov
popf
cmpb
xor
mov
cmpl
add
xor
or
es
add
aad
ret
inc
fstpl
test
bound
cmpsb
pop
or
in
or
push
fisubs
adc
dec
test
out
lods
mov
movsl
and
pop
addr16
nop
xor
aad
imul
nop
and
mov
dec
mov
daa
shlb
enter
jae
fiadds
mov
fisttps
xorb
mov
jbe,pt
stos
adc
push
cmp
pusha
cs
clc
cmp
cmp
sbb
sbb
sbb
mov
ljmp
push
aad
lds
cli
arpl
mov
inc
cs
and
je
cmp
pop
push
inc
jg
sub
push
cmp
jge
sbb
aad
mov
inc
inc
mov
cmp
mov
mov
data16
scas
in
loopne
std
add
mov
or
lock
clc
decl
mov
or
add
fnstcw
sub
push
add
add
add
add
and
sub
xor
insl
xor
dec
std
ljmp
je
add
adc
cmp
dec
or
mov
shr
jp
jg
sbb
loopne
lret
ljmp
xor
push
sub
jp
jg
xor
mov
cli
std
mov
adc
dec
push
or
je
push
add
push
push
fsubrp
loop
mov
es
dec
out
xchg
repnz
cli
movsl
pusha
add
lret
sub
scas
inc
add
push
add
jne
sbb
jnp
mov
pushf
cmp
mov
jmp
or
inc
inc
lret
adc
adcb
inc
jmp
sbb
clc
das
insb
ret
cltd
idiv
inc
inc
imul
pusha
clc
adc
sub
jb
aad
or
ljmp
movsb
pop
je
mov
loopne
loopne
pop
sbb
aas
cmp
mov
outsl
push
roll
mov
mov
lcall
cmp
outsl
dec
jge
dec
add
mov
sbb
jne
ret
adc
pop
call
jmp
push
cmp
jle
xor
repnz
cld
insl
sbb
add
jae
cli
lcall
add
push
ds
jne
inc
pop
repnz
decb
xor
mov
cmp
je
cmp
pop
cmp
je
cmp
jne
inc
jne
mov
sub
push
or
xlat
out
pusha
cmp
sub
mov
xor
jb
mov
nop
cmp
in
dec
loopne
jge
and
test
add
jp
add
loop
cmp
push
outsl
mov
sarb
sbb
mov
cmp
push
add
or
sub
jmp
push
jl
or
jg
in
cmp
mov
and
xchg
fwait
fwait
dec
push
jmp
inc
jl
inc
jg
aaa
aaa
pop
lock
shl
mov
sub
mov
imul
push
les
outsl
adc
imul
and
inc
into
test
loope
and
rcrl
cld
push
pop
bndstx
fnstenv
sbb
aad
mov
push
xor
gs
add
scas
and
stos
push
push
pushl
iret
push
je
testl
movsb
inc
jl
pusha
mov
jg
mov
fs
imul
mov
add
jge
mov
roll
outsl
adc
lcall
adc
orb
sub
cli
inc
pop
xchg
aaa
mov
mov
or
pop
das
js
mov
xchg
xor
xor
fsubs
inc
cmpb
pop
or
add
or
mov
inc
idivb
sahf
clc
push
mov
inc
out
jmp
xor
sub
frstor
adc
dec
sub
adc
lret
aam
or
lods
movb
lret
test
dec
sti
add
push
cmp
dec
addb
fs
add
mov
cmp
je
cmp
je
add
push
shlb
insb
adc
push
and
mov
or
sub
push
clc
inc
xchg
mov
aaa
loopne
mov
add
lret
jne
mov
mov
cmp
sub
sbb
mov
jmp
adc
je
dec
fsubrs
or
mov
add
lods
jp
ret
inc
add
adc
inc
ret
mov
sbb
adc
shl
or
shl
fsub
push
lcall
clc
andl
inc
or
shlb
push
or
mov
ret
push
push
add
fucomip
and
sub
mov
sub
jge
jne
cs
das
dec
inc
sub
jp
xor
sbb
pop
or
adc
pusha
add
mov
xchg
or
lds
cltd
js
or
inc
add
push
test
into
jg
cmp
and
xchg
imul
inc
bound
popa
push
cmc
adc
in
jne
add
outsl
xlat
sbbb
inc
js
mov
jmp
inc
rolb
mov
add
sub
mov
mov
adcb
and
add
andb
orb
jl
jo
sbb
mov
xchg
je
inc
add
rclb
pop
test
push
pop
rol
mov
jne
mov
movb
push
mov
xor
add
cltd
testb
pushf
mov
dec
jmp
dec
cld
leave
shll
lcall
call
addr16
or
sub
rorl
sbb
pop
fs
mov
inc
mov
stos
xor
addl
cmp
push
mov
fisubrl
xor
jno
or
repnz
je
mov
dec
imul
sbb
enter
shrb
lds
cli
movb
jbe
nop
mov
mov
push
jo
addb
inc
add
cli
pop
mov
cmpb
jne
imul
jno
notl
mov
je
cmpb
sbb
mov
fstps
xlat
jne
clc
sub
xchg
add
inc
jo
mov
aam
pshufw
adc
dec
xlat
je
les
dec
cli
inc
inc
or
mov
push
push
xchg
test
push
cli
jb
inc
stos
add
clc
ficoml
cmp
jno
stos
or
mov
rolb
xor
nop
cmpsl
sbb
jecxz
mov
sub
shlb
add
adc
cmp
xchg
arpl
jp
das
push
addb
sub
rcl
rorl
cwtl
or
adc
jle
add
jne
pushf
mov
mov
dec
dec
inc
xchg
xor
inc
xchg
inc
cwtl
mov
jne
scas
cwtl
inc
lret
push
inc
inc
outsb
and
sub
mov
jo
clts
ret
adc
je,pt
loopne
adc
inc
in
push
push
jl
adc
xchg
push
scas
subl
rcrb
mov
dec
cmp
push
jp
jne
sarb
inc
in
movsb
shr
fildll
or
sbb
cwtl
in
pop
lock
push
add
push
scas
push
arpl
add
addb
stos
adc
out
pop
jne,pt
xlat
xchg
mov
ror
aad
pop
roll
or
inc
sbb
jnp
roll
cmp
rclb
imul
cmp
sub
dec
xchg
and
cli
xchg
sub
call
inc
out
loop
out
pusha
call
ficoml
mov
sbb
pop
andl
outsl
jmp
sub
fwait
addl
adc
addr16
or
std
jmp
aam
push
adc
leave
sub
adc
sub
fsubrs
fistl
or
adc
xor
lea
lcall
pushl
cmp
jb
sbb
aas
push
lcall
pop
leave
fwait
fadd
inc
nop
or
je
ret
sbb
cmpsb
sbb
test
or
shl
push
or
add
mov
mov
movl
setno
inc
jmp
adc
mov
push
or
mov
cwtl
pop
dec
jne
mov
mov
and
inc
je
or
not
mov
xor
andb
dec
or
sbb
je
cmp
pop
mov
dec
pop
inc
push
lahf
push
inc
push
or
pop
push
jge
test
or
mov
test
jo
subb
jp
adc
mov
scas
dec
sub
ret
adc
or
and
fbstp
jbe
je
cs
mov
inc
cmpsl
test
rcrb
fnstenv
push
add
inc
call
cmc
fstp
add
adc
inc
and
or
js
call
push
jno
xlat
add
das
sti
jne
dec
push
mov
cmpsb
inc
stc
cmp
jmp
je
adc
daa
fsubrl
fdivl
xor
jne
sbb
sar
add
pop
lea
loope
push
xchg
add
sub
xor
adc
pop
fcmovu
ds
adc
aam
shlb
jmp
inc
inc
jne
movsl
cli
and
bound
jne
sbb
sbb
push
xchg
adc
faddl
pop
dec
inc
outsb
jne
aaa
pop
ret
or
mov
sub
mov
jmp
push
mov
mov
inc
jno
or
xor
inc
mov
cmpsb
jmp
adcl
or
mov
xchg
mov
sub
nop
or
aam
cmc
dec
push
mov
or
mov
test
shll
xchg
mov
bound
add
fst
cmpsl
fsubrs
mov
mov
das
or
xchg
sub
shrb
xchg
inc
xor
and
mov
mov
and
jge
lods
cmp
lock
pop
cmp
sbb
in
movl
add
sbb
loope
shlb
xchg
pop
clc
adc
xor
xor
mov
xchg
mov
pop
add
loopne
or
jno
mov
idivb
mov
andl
mov
sti
movsb
jmp
subb
pop
adcb
cwtl
cmp
inc
push
test
jmp
adc
pop
cmp
push
popf
loop
cs
out
test
jae
push
xor
jmp
or
push
inc
movsb
or
std
cmp
nop
mov
or
xchg
sub
daa
shld
ficoml
sub
push
fs
dec
jbe
dec
rcrb
ds
pop
scas
xchg
mov
rclb
xor
popl
xor
inc
cmp
lock
cltd
push
loopne
add
adc
adc
mov
push
jmp
push
es
es
sarb
ljmp
in
jp
cmp
inc
cmpsb
xor
in
nop
dec
mov
in
mov
cmpsl
aas
or
jg
xchg
and
les
push
fwait
cmc
ret
ss
scas
mov
jl
inc
adc
cltd
fisubrl
add
mov
inc
dec
xor
mov
movsb
mov
inc
push
add
push
or
pop
or
jmp
push
lea
xchg
dec
xor
inc
xor
sarl
adc
insb
sub
push
adc
clc
and
call
jmp
xorb
pop
mov
adc
inc
call
adc
cmp
insb
or
nop
mov
mov
sub
adc
inc
push
xchg
popa
add
pop
cmpb
cmp
lock
and
pop
push
ret
mov
mov
outsl
icebp
jno
ja
fs
sub
pusha
leave
imul
or
stos
or
arpl
mov
or
jle
xorb
xor
lods
mov
dec
adc
adc
jne
insb
push
sub
xlat
inc
or
mov
push
pop
jmp
rorb
inc
adc
rclb
push
or
push
push
jne
jns
adc
adc
push
mov
and
mov
stc
adc
xor
aaa
ss
push
arpl
sub
pop
adc
out
adc
dec
jo
cmp
inc
or
adc
or
sti
xchg
inc
sahf
outsl
or
or
push
lock
mov
sub
push
aad
in
adc
mov
ja
cmpsb
cmc
push
xor
and
push
ss
dec
adc
test
jns
or
lods
push
inc
or
aad
xor
push
dec
sub
add
in
subl
stos
sub
sbb
adc
push
and
adc
loope
adc
dec
mov
inc
mov
sbb
push
sbb
out
xor
pop
dec
cmp
rcll
sbb
add
je
test
adc
dec
sub
out
cmp
dec
aad
inc
movsl
addr16
les
lds
and
pop
pop
mov
cmp
sub
or
push
jae
or
es
bound
scas
and
jae
test
pop
push
lock
xor
stc
lahf
ds
fdivrp
rorb
or
movsl
fsts
jmp
lea
fdivrp
dec
daa
push
inc
mov
and
scas
fs
xchg
or
cmpl
push
sbb
aad
sbb
in
or
mov
or
and
sbb
dec
movsl
inc
push
sub
or
jle
test
xor
xor
movzwl
jle
rolb
push
jbe
js
sub
sub
shlb
call
inc
cmp
sbb
inc
cmp
jecxz
jl
mov
sub
adc
push
rorl
pop
jmp
popl
repz
push
push
push
jb
hlt
adc
xor
adc
pop
mov
pop
out
sub
out
shlb
jae
cmp
pop
mov
jmp
jo
mov
sub
add
push
fstps
push
pop
push
sub
sahf
aaa
addr16
xor
andl
add
shl
push
cmp
jmp
data16
mov
mov
mov
mov
jb
fs
push
cmpsl
daa
mov
les
add
mov
mov
pop
pusha
inc
pop
jg
sub
mov
push
imul
sbb
jae
add
jge
sti
loopne
outsl
xor
jae
cmp
fistps
push
or
mov
in
daa
rclb
add
add
rcrl
imul
mov
cmp
xchg
loopne
mov
pop
add
pop
or
add
daa
mov
std
mov
fwait
jne
xor
or
vmovups
dec
ss
loope
popa
add
sbb
pop
js
je
fwait
mov
adc
in
lret
sbb
add
push
add
cmp
loopne
cmp
insl
loopne
dec
faddl
or
ret
pop
fisttpl
adc
push
push
icebp
shl
jbe
imul
loopne
test
call
aad
sbb
jns
rol
push
fcomps
mov
inc
adc
sbb
out
loopne
add
add
xchg
pop
adc
pop
adc
or
adc
xchg
je
pop
inc
loope
push
cmp
dec
pusha
cwtl
or
xchg
js
enter
scas
loopne
dec
loop
or
adc
push
aas
xor
loopne
adc
rcrl
test
xorb
addb
out
inc
ret
or
shr
mov
es
mov
push
push
dec
mov
pop
cmp
push
jmp
and
mov
mov
sub
out
rcrl
sub
nop
adc
pop
sti
mov
inc
jmp
movsb
push
je
sbb
mov
dec
aam
clc
stos
and
scas
and
popa
sbb
js
sub
cmp
xor
jo
setb
xchg
push
insb
dec
cld
lods
fiadds
pusha
sbb
ss
out
xor
sub
fiadds
addr16
clc
jb
in
sbb
cmpsb
push
lret
push
adc
aam
ss
bound
ret
mov
pop
testl
sub
aas
nop
je,pt
sar
icebp
sahf
xchg
xor
fs
mov
divl
js
sahf
xchg
push
push
mov
sub
and
loop
push
jg
xor
pop
ret
ret
rcr
xchg
aam
out
xchg
adc
cs
adc
lock
dec
outsb
test
push
idivl
jmp
imul
popa
xor
push
mov
lsl
pcmpeqw
in
mov
or
and
in
sub
or
lock
testl
inc
xor
mov
clc
pcmpeqb
lret
push
addr16
ret
jmp
sub
inc
subb
lret
lds
and
push
es
mov
clc
pop
ret
int
xchg
lea
sub
xor
sbb
cltd
jg
lock
pop
inc
icebp
test
and
adc
rolb
pop
xor
pushf
push
cmp
in
mov
mov
mov
shll
pop
or
pop
adc
call
jns
mov
or
jo
jp
cwtl
mov
lods
fs
cmp
in
nop
imulb
scas
adcb
mov
jg
testb
ljmp
pusha
push
int3
jp
pop
rorl
jo
pusha
or
mov
push
adcb
jl
jg
mov
jb
mov
jmp
xor
mov
add
pop
test
sbb
or
dec
shll
mov
and
xor
jne
push
cli
sub
push
mov
inc
add
fldcw
jne
push
sub
outsl
fcomi
cmp
jmp
push
jle
push
xor
pop
div
lcall
lea
movsl
icebp
imul
roll
push
dec
shl
mov
inc
jnp
or
mov
mov
push
lds
orb
in
shl
mov
push
pop
dec
or
js
cmp
mov
lea
mov
popa
jo
lods
xorb
std
sub
rorb
add
and
rorb
jne
or
movsb
or
and
je
sbb
adc
cmp
outsl
mov
adc
sub
sub
lock
bound
adc
sbbb
jmp
dec
das
pushf
cmpsb
test
or
dec
inc
lods
xchg
or
out
out
shrb
pop
idivb
jnp
push
dec
int3
add
lret
addb
cmp
jno
lock
mov
or
scas
pop
and
in
pop
jp
and
sbbb
psubusw
mov
outsb
add
loopne
clc
jg
fs
test
pusha
jmp
movq
movaps
push
pop
outsb
fcmovne
clc
jae
xor
jle
xor
cli
shrb
std
pop
outsb
ror
test
decl
fisubl
push
xchg
jge
repz
or
jg
dec
mov
xchg
adc
jnp
mov
out
mov
mov
adc
push
je
and
dec
test
popf
stos
and
add
fxch
mov
roll
jbe
and
sahf
add
pop
mov
int
cmp
test
sub
ret
adc
xchg
cmpsl
mov
pop
xor
out
sbb
or
xchg
jmp
mov
ds
and
fnsave
push
pop
into
test
rcrl
push
orb
mov
mov
shlb
sub
js
cmpsb
mov
cmp
in
repz
mov
sub
adc
scas
adc
and
push
imul
dec
cmp
ret
jne
popw
dec
inc
lock
cmp
jne
or
addr16
mov
loop,pn
jg
push
mov
push
push
or
or
movb
ret
and
lcall
jmp
or
pop
leave
leave
sbb
incb
sbb
adc
cmp
and
fcmovbe
test
sbb
and
push
pop
add
xchg
jle
sub
xor
mov
jnp
je
jp
leave
rcll
movsb
movl
fiadds
in
call
in
pusha
pop
ja
pop
inc
cwtl
pop
cmp
in
push
push
adc
out
fidivrs
push
or
or
and
pop
mov
or
rorb
lcall
jo
outsl
hlt
push
dec
movsb
or
orl
leave
cwtl
push
or
adc
sub
lret
inc
cmp
pop
mov
pop
arpl
push
cmp
inc
inc
adc
push
mov
imul
jg
je
cwtl
inc
inc
ss
cmpsl
xchg
inc
fsubr
call
cmp
inc
jb
or
mov
sbb
push
jp
movsl
pop
inc
add
inc
aaa
dec
add
data16
aas
xchg
cmp
in
mov
gs
dec
pusha
je
gs
enter
add
mov
idivl
or
enter
mov
jge
jge
or
ljmp
adc
fists
shr
arpl
andb
sub
mov
out
rolb
rorl
xchg
subl
shlb
cmpb
sub
push
cwtl
insb
and
pop
rol
hlt
int
pop
lods
cmp
call
mull
rcrl
pop
sub
add
pusha
adc
xor
xor
adc
aad
cmp
bt
jb
out
aaa
adc
int3
or
sub
adc
push
or
pop
add
adc
mov
pop
std
incl
mov
cmp
jne
inc
cmpb
add
jb
pushf
loopne
push
add
mov
inc
inc
and
fmul
les
or
mov
arpl
push
sbb
ljmp
rorl
fld
xor
jecxz
inc
inc
int3
hlt
mov
nop
pop
mov
cmp
or
jo
mov
cmp
hlt
enter
lock
cmp
xor
sbbb
mov
cmp
mov
es
or
or
lret
jne
dec
jmp
rcrl
sbb
je
xor
lret
jne
in
adc
push
lds
jg
push
loope
or
dec
jo
sub
adc
scas
cmpsl
xor
pop
or
adcb
sub
mov
push
jbe
lods
nop
xchg
sbb
jae
add
pop
add
inc
imul
scas
add
sub
or
push
mov
mov
sbb
addr16
pop
adc
fidivs
sub
and
fists
pop
movsb
add
test
faddp
xchg
call
loop
je
cltd
inc
rcrb
mov
add
jae
sub
test
pushf
fdivrl
test
addb
or
aas
sub
andl
add
pop
ja
cmp
xor
cmp
xor
inc
andb
or
rcrb
jb
cmp
gs
push
or
imul
inc
enter
lock
sub
adc
or
rcl
and
mov
jecxz
add
cmp
mov
jne
cltd
sub
jb
and
or
adc
inc
jne
sub
mov
push
sbb
lcall
pop
scas
in
ss
mov
arpl
sub
push
jbe
lahf
cmpsb
dec
subb
cmpsb
cli
aaa
pop
cmp
pushf
mov
cmp
into
lea
cmp
aaa
xorl
sub
cmp
jne
lahf
cmpsb
mov
or
add
xchg
jnp
mov
sub
sbb
cltd
xor
in
sub
pop
je
push
shrb
jne
mov
das
add
mov
into
rcrb
mov
xor
add
cmp
inc
popf
gs
mov
add
pusha
and
sbb
xchg
mov
push
mov
je
outsl
pop
ljmp
fadds
add
push
push
jbe
cmp
dec
add
stc
scas
push
dec
or
les
filds
adc
xchg
cmp
popf
jp
js
stos
jl
fwait
std
xor
mov
mov
dec
or
inc
cs
and
insb
xchg
lock
pop
arpl
int3
testb
fmuls
in
mov
sbb
push
jo
or
push
pop
mov
test
cs
or
sub
rclb
xchg
adc
xchg
pop
stos
jb
add
pop
inc
imul
cli
jno
fnsetpm(287
sub
and
sbb
std
aas
mov
loopne
or
add
jg
add
sub
js
lock
gs
ljmp
shrb
push
or
sub
icebp
sub
fdivs
les
or
outsl
js
or
pop
pop
pop
test
fs
mov
pop
pop
gs
sbb
adc
sbb
add
mov
sbb
testl
xchg
rclb
sbb
les
sbb
pop
jbe
insb
repnz
inc
lahf
adc
sbb
jp
push
add
sub
or
xor
jb
outsb
add
clc
jbe
add
xchg
jp
lds
add
jbe
aaa
shrb
dec
mov
or
loopne
mov
rcll
jmp
test
jp
mov
clc
cmp
xorl
ja
lods
cld
jbe
fildll
int
mov
xchg
je
jmp
and
pushf
pop
pop
fcmovu
dec
fs
das
pop
int
xor
cmp
les
icebp
fstl
and
xor
cmp
dec
jecxz
mov
add
and
xor
add
addb
sbb
sbb
js
hlt
lods
aad
or
pusha
sub
add
insl
adc
add
inc
into
and
or
sub
fwait
mov
or
or
rolb
jns
xor
push
test
shl
popa
adc
ljmpw
sbb
lods
cmp
pop
pop
add
js
dec
ret
mov
jnp
mov
xor
aad
test
cmp
adc
jnp
push
pop
mov
jbe
push
jnp
lcall
inc
rclb
push
rcrl
aam
ret
js
mov
and
and
pop
dec
test
dec
jne
jmp
mov
and
push
rcr
icebp
dec
sub
dec
es
jne
add
pop
shlb
adc
sahf
xchg
dec
imul
inc
loopne
push
or
pop
xor
jge
cmp
xchg
sub
sub
repnz
pop
jno
xor
push
push
loope
rol
lea
outsb
add
iret
into
fcoms
repz
fwait
icebp
mov
push
cmp
jne
mov
push
cmp
aaa
dec
jae
jne
es
jne
jmp
repz
or
clc
and
mov
dec
cmp
iret
imul
jmp
std
sbb
iret
stos
push
xor
cld
cld
jmp
fldt
adc
in
adc
adc
inc
inc
inc
xor
lahf
push
add
push
test
or
repnz
add
sbb
pop
pop
pop
hlt
mov
sub
in
or
dec
and
stos
repz
jae
aaa
push
mov
rcl
or
or
inc
adc
mov
xor
add
inc
push
or
adc
xchg
std
xchg
or
sbb
sbb
or
and
or
mov
leave
js
inc
push
sarl
pop
in
sbb
dec
dec
xor
add
add
lock
push
or
inc
jg
or
add
adc
adc
push
pop
cli
hlt
or
add
xlat
xchg
sbb
iret
je
mov
hlt
pop
insb
or
or
jg
add
mov
popf
inc
or
mov
or
mov
pop
mov
push
push
push
push
mov
and
mov
or
jae
out
mov
js
inc
or
mov
cmp
mov
movsb
pop
and
mov
addl
andb
and
inc
add
js
mov
cmp
adc
stos
call
test
ss
dec
nop
push
xchg
push
jnp
rcll
xor
lock
gs
push
clc
popa
inc
mov
ret
mov
popa
aam
lods
add
mov
hlt
mov
or
push
mov
and
out
push
xchg
cmpsb
lea
jl
ljmp
or
jbe
or
lea
jl
or
add
in
jg
inc
and
lea
add
not
and
sub
test
push
sub
push
cmp
insl
inc
mov
add
fsub
xchg
inc
add
push
or
mov
adc
adc
loopne
mov
xchg
sbb
insb
pop
mov
js
jae
push
lcall
out
call
add
incb
mov
inc
je
mov
les
mov
stc
sbb
shll
add
jmp
or
mov
inc
inc
push
insb
sahf
out
sbb
scas
jecxz
dec
pop
mov
pop
add
mov
inc
cmp
jb
jo,pn
or
jae
mov
add
pusha
and
ret
adc
inc
loope
movsb
and
outsb
adc
pop
xor
hlt
mov
push
clc
mov
ret
iret
pop
js
insb
push
or
push
add
shl
push
adc
jle
and
sbb
divl
lret
add
stos
outsb
jg
dec
and
xor
jo
and
movsb
lret
sbb
or
inc
and
jne
mov
and
sarb
push
sbb
into
out
cmp
je
test
je
out
sahf
inc
cwtl
and
faddl
in
or
aam
xchg
pop
addr16
outsb
or
sbb
and
aaa
sbb
les
push
inc
push
adc
and
jno
or
xchg
js
sbb
lock
out
or
bound
add
aaa
pop
call
mov
lock
add
popa
adc
mov
cli
repz
add
inc
call
xor
inc
jns
pop
inc
fsubr
lods
icebp
jmp
cmp
sbb
jmp
adc
jne
sub
or
out
lcall
pop
inc
adc
cmp
pusha
push
xor
negl
fcoms
mov
cmp
je
cmp
and
mov
adc
pop
outsl
fmul
cmpsl
fmuls
fmuls
sbb
sbb
adc
mov
aam
outsl
test
adc
mov
and
je
sub
dec
cld
addb
pop
lea
jle
sub
jmp
sbb
adc
sbb
and
sub
xor
and
add
and
jo
call
sbb
sbb
xorb
push
test
mov
add
loopne
std
mov
sbb
inc
mov
lea
mov
insl
fdivs
xor
jns
mov
cmp
gs
adc
add
cs
mov
mov
mov
xor
adc
scas
xchg
rcll
aas
std
lds
sbbb
mov
inc
mov
dec
jne
or
movb
movb
rorb
loopne,pt
add
adc
sub
sub
sub
dec
jb
lds
push
test
outsl
das
push
inc
xor
pusha
inc
imul
or
cmp
ret
loopne
aaa
fimuls
adc
mov
cmp
xor
mov
insb
sbb
inc
push
xor
xor
mov
jne
push
and
adcl
push
xchg
test
cld
fwait
lea
dec
js
int
jo
adc
or
lea
push
adc
or
or
insb
or
clc
push
pop
cmp
lcall
mov
mov
and
inc
or
and
or
mov
mov
xor
popa
jne
or
testl
pop
or
jbe
sub
dec
std
dec
xchg
sbbb
xor
sbb
push
push
in
stos
in
movsb
mov
push
adc
or
or
push
mov
pop
pop
add
push
mov
pop
pop
out
mov
sub
add
jmp
mov
loope
rol
stos
push
fldcw
jnp
jp
leave
mov
fs
clc
pusha
hlt
pop
nop
lahf
or
aas
jne
fs
inc
sub
adc
int3
add
andb
fdiv
out
sub
and
mov
inc
sar
add
xchg
or
inc
and
sbb
and
or
loope
sti
daa
frstor
cmp
pop
sbb
rcll
add
in
cmpsb
inc
adc
push
into
and
loope
pop
push
jmp
xor
push
mov
mov
dec
fmuls
mov
or
pop
sbb
jne
ja
xadd
cmp
decl
test
aad
xorl
adc
dec
dec
pop
inc
imul
mov
jb
out
pop
in
insl
sub
rclb
inc
fsub
movl
cmp
adc
jbe
sub
mov
and
cmp
je
push
insb
push
xor
pop
addl
movsl
aam
out
decl
cmp
pop
aad
or
mov
jbe
mov
pop
idiv
adc
push
mov
call
mov
pop
fimull
popa
push
stos
pop
aad
mov
pusha
adc
popf
add
rol
xchg
inc
xor
xchg
and
mov
dec
shll
ficoml
push
std
cmpsb
dec
loopne
dec
movsl
sub
pusha
add
or
pop
aam
sub
sbb
mov
inc
sub
mov
daa
movsl
lahf
xor
add
add
in
sbb
out
scas
jle
adc
or
repnz
imul
or
ja
push
imulb
and
inc
add
fcoml
nop
ret
push
add
rolb
adc
js
stos
push
pop
dec
pusha
psubusb
push
fisubrl
mov
sbb
sub
push
jbe
and
lods
xlat
rolb
add
addl
or
les
call
in
mov
jmp
aaa
add
xor
je
js
push
push
inc
mov
faddl
testl
jg
adc
jmp
daa
adc
inc
je
ret
add
push
test
popa
xchg
push
ret
or
jbe
cli
dec
sti
xchg
jo
jmp
dec
je
add
or
fwait
mov
pop
inc
mov
or
stc
ja
lret
push
inc
add
sub
dec
or
aad
push
lcall
jmp
push
push
ljmp
lea
push
test
lahf
add
mov
ret
add
lahf
testl
pop
push
fimull
push
push
addr16
jne
insb
movsbl
mov
addr16
add
dec
dec
jo
xor
popa
mov
mov
loope
rcrl
rcll
add
jl
shrl
jecxz
dec
xchg
cmovp
repnz
jns
inc
pop
sbb
or
push
add
jle
mov
sbb
xchg
push
iret
or
jmp
xchg
jbe
leave
add
add
jmp
rorb
add
pop
in
pop
push
dec
inc
lds
push
jmp
sub
dec
cmp
or
sub
les
jp
loopne
fcoml
inc
shll
inc
test
cmp
dec
mov
nop
push
inc
outsb
jmp
adc
xor
rcr
fucomi
aas
cmp
jae
cli
subl
mov
add
push
clc
inc
xor
mov
push
add
ljmp
xchg
ss
loop
pop
lea
add
sub
add
test
jmp
hlt
push
outsb
push
push
adc
dec
mov
sbb
fst
cmpsb
mov
sbb
test
adc
lds
or
dec
and
xchg
shl
fcompl
clc
mov
pop
jle
call
aaa
push
pusha
ss
cmp
mov
or
lea
xchg
xchg
pop
sub
dec
jae
jo
push
inc
push
shlb
add
fadds
ja
push
pop
int
add
lahf
daa
sarl
xor
mov
add
enter
push
push
pop
dec
mov
cmc
dec
jmp
pop
sub
iret
sub
push
pop
stos
leave
push
idiv
or
sbb
loopne
push
into
cmp
lret
push
xlat
push
push
add
sbb
or
leave
mov
inc
lods
movsl
stos
sbb
mov
push
lcall
mov
sets
ret
inc
dec
lock
add
jl
inc
inc
pop
and
data16
mov
inc
cmp
inc
jns
adc
stc
xchg
test
mov
fists
mov
cmc
mov
add
mov
jge
insl
inc
and
call
test
dec
or
je
ret
inc
cmp
add
cmp
xchg
ret
mov
cmp
ja
jmp
dec
or
mov
ficompl
inc
mov
push
jne
add
push
sbb
add
stos
xlat
je
lret
outsb
enter
inc
and
cli
xorb
push
fsts
mov
cwtl
sub
lods
popf
push
push
shl
jo
lods
int
push
mov
inc
into
icebp
in
push
add
in
add
dec
subl
inc
fdivrs
mov
or
inc
dec
xchg
pop
push
dec
stos
in
in
loope
jne
pushf
ret
lock
lret
aaa
inc
inc
xlat
stos
mov
sbb
and
xor
repnz
mov
test
call
mov
loopne
enter
mov
push
push
ljmp
ret
loop
fcomps
hlt
mov
inc
adc
sbb
jl
jns
test
jge
cli
adcl
icebp
adc
imul
xchg
push
sbb
movsb
sbb
mov
popf
xchg
sub
leave
inc
mov
sub
or
jecxz
test
add
adc
or
xchg
lret
lods
in
call
cwtl
sub
or
mov
dec
pop
dec
notl
jle
inc
out
notb
and
or
aam
mov
and
lcall
ficompl
and
adc
dec
cld
jmp
add
mov
adcb
add
push
out
in
push
sbb
inc
out
fstpl
add
mov
xchg
fcmovu
out
ja
or
mov
and
ret
test
ret
popf
or
scas
dec
inc
push
hlt
xchg
movsl
push
lock
movsb
lea
jmp
pop
sub
aad
mov
xchg
ja
daa
lcall
repnz
bound
jecxz
lcall
cmpsl
lock
xchg
sar
add
mov
dec
add
adc
dec
cld
push
into
je
aad
xchg
popf
pop
jne
mov
cltd
or
dec
add
mov
dec
add
cmp
andl
dec
leave
dec
cmpsb
movsb
pop
movsb
mov
xor
xchg
enter
mov
mov
jge
push
cltd
cmp
push
aad
mov
and
push
rcll
inc
adc
dec
pusha
int3
add
jmp
and
dec
jmp
cmp
mov
jb
push
pop
cwtl
jb
jl
fstpt
pop
and
loopne
outsl
and
dec
pop
pop
jne
push
les
test
popf
adc
mov
jb
cmp
jmp
mov
and
or
out
fxch
insl
add
test
push
xor
mov
lock
adc
and
imul
inc
inc
pop
pushf
mov
or
lods
xchg
adc
lea
push
dec
add
int
jbe
cmpsb
nop
inc
xor
xchg
jnp
inc
sub
jl
iret
repz
je
fs
push
mov
mov
mov
call
sahf
out
lock
hlt
clc
test
cld
push
sbb
addb
lcall
jmp
xor
cld
nop
inc
pop
sbb
fildl
mov
push
lea
jl
cld
pop
rorl
and
std
cld
out
cmp
adc
add
in
popa
daa
out
scas
xor
stc
sub
inc
pop
xor
je
pushf
fiaddl
jl
sub
out
add
dec
inc
fcomps
add
nop
dec
dec
addr16
push
xorl
mov
cmp
push
clc
push
add
das
ds
repz
adc
and
bound
sbb
iret
repz
sbb
adc
repz
repz
or
or
add
inc
push
icebp
jns
dec
or
js
aaa
loop
imul
push
inc
pusha
mov
daa
ja
jb
and
cmp
xor
movsl
clc
and
pop
dec
cld
cmp
or
std
pop
sbb
push
lahf
hlt
or
je
mov
data16
sub
push
inc
or
jne
pop
movl
nop
enter
sar
mov
loope
cmp
or
pusha
imull
sbbb
add
inc
and
jne
push
sbb
mov
sbb
sar
pop
pushw
rcll
ss
mov
test
cmp
outsb
mov
and
enter
add
mov
push
ficoms
leave
sub
push
movsl
jo
jp
sbb
push
push
and
or
sub
inc
divb
das
sbb
xchg
sbb
cmpsb
adc
movsb
sbb
sbb
or
dec
inc
data16
or
and
mov
jbe
add
out
scas
cmpsb
fs
sbb
hlt
popa
or
push
mov
sub
lock
push
mov
aam
push
rorl
call
fbstp
aam
and
add
sbb
sbb
fs
orl
mov
lcall
push
xchg
cmpb
call
ret
daa
mov
adc
xor
rcll
jmp
or
cmp
mov
mov
jp
pop
xchg
pop
jmp
test
xor
aad
add
mov
sub
push
sub
jne
or
stos
int
and
mov
shrl
adc
or
adc
roll
adc
js
inc
test
inc
inc
adc
test
inc
dec
jnp
nop
sbb
inc
mov
xchg
push
les
xlat
xchg
inc
js
mov
pusha
xor
pop
ret
jmp
add
xor
add
je
sub
pop
cld
jmp
sub
add
mov
data16
xchg
fsincos
je
rep
mov
dec
ljmp
push
pop
sub
cmp
subb
xchg
xchg
xchg
js
je
jo
insb
data16
cwtl
or
add
lahf
xchg
pusha
sub
nop
add
test
add
mov
pop
add
loopne
movl
cmp
es
sarb
dec
fadd
cmp
jecxz
in
sbb
add
adc
fdivl
ss
sbb
mov
xchg
movsb
shrb
mov
or
adc
js
loopne
mov
xor
mov
loopne
inc
xor
leave
mull
or
subb
imul
xchg
dec
mov
rorb
dec
adc
sub
pop
push
xor
xor
lahf
sub
std
fcoml
sub
int3
jns
stc
insl
jle
clc
or
test
outsb
ret
jns
movsl
shrb
mov
push
fbstp
scas
cmp
cld
xor
test
adc
and
xor
xchg
clc
jno
insl
push
jne
pusha
in
jbe
mov
or
pop
adc
xchg
mov
pusha
cmp
mov
sub
and
push
push
lods
roll
pop
ljmp
or
push
int3
sbb
pushf
sbb
add
mov
je
xchg
mov
into
jb
test
lock
call
mov
aas
fwait
pop
push
je
nop
pop
xlat
ret
jecxz
pop
or
test
cmpsl
add
sbb
pop
imul
mov
adc
jbe
push
inc
aad
sub
test
lds
leave
fsubrl
mov
or
inc
jno
jbe
add
test
mov
frstor
divl
sbb
mov
ds
mov
dec
shrb
push
adc
or
das
orb
cmpsl
xor
sbb
mov
sub
stc
rcrl
test
mov
enter
add
add
push
pop
movsl
and
orb
popf
push
and
sahf
or
push
push
into
jo
test
popa
add
dec
jmp
popa
jmp
shlb
cmpsb
sbb
adc
hlt
dec
or
nop
or
xchg
lret
lret
popf
mov
jae
pop
fdivrs
in
aaa
cmp
popf
sub
je
add
gs
movsl
sub
xor
xchg
call
in
or
xchg
loopne
cmp
jo
lods
pushw
loop
add
cmpl
pop
sar
lahf
lea
mov
ja
push
movsbl
and
jmp
adc
and
imul
test
xor
pop
sar
pop
lods
movsb
mov
mov
xacquire
push
add
add
lea
mov
rcr
clc
lods
push
out
rol
xchg
lret
dec
inc
mov
je
or
push
mov
sub
or
pushf
pop
xchg
dec
scas
or
add
xor
sbb
mov
xor
mov
adc
loop
imul
mov
sub
arpl
push
mov
outsl
mov
ja
movsl
mov
dec
enter
es
pop
mov
movsl
hlt
hlt
int
push
and
fidivl
push
loope
add
lock
into
push
add
push
test
loope
insb
jle
sub
xor
pop
and
push
ss
js
add
rolb
jb
cmpb
xor
movsl
into
pushl
insb
cmp
xchg
out
xor
sub
sub
movsl
mov
loopne
add
mov
inc
mov
push
call
dec
xorl
fs
add
nop
and
add
or
sbb
sahf
cmp
xchg
inc
je
pop
push
or
or
lock
mov
mov
inc
adcl
mov
dec
shll
dec
adc
jge
sbb
je
push
arpl
imull
xor
daa
xchg
add
cmp
aaa
jbe
mov
dec
pop
gs
mov
sti
or
dec
and
in
out
shrb
mov
sbb
push
sub
in
mov
out
add
mov
adc
mov
loopne
into
sahf
add
push
insl
cmp
shl
arpl
sub
insl
lods
xchg
push
shl
ror
push
dec
mov
adc
aam
shr
adc
test
daa
clc
push
dec
mov
faddp
std
or
or
cmp
add
lret
fistpll
data16
out
mov
xlat
mov
push
pop
dec
call
mov
xor
mov
je
xor
repnz
push
sbb
pop
mov
imul
add
call
gs
add
outsb
mov
mov
xchg
pusha
je
or
sub
mov
test
shrb
xor
ss
gs
lds
fildll
mov
pop
jbe
xchg
or
xchg
push
or
insb
rorl
jne
lds
push
jmp
shl
add
push
add
lahf
mov
fidivs
movsb
addr16
mov
jmp
cmp
mov
popa
mov
daa
fcompl
add
push
loopne
jge
mov
sub
rcll
je
or
or
inc
sub
shr
push
push
insb
push
pop
push
and
cmp
mov
rcl
into
and
adc
adc
sbb
push
sarl
sbb
cmp
add
push
rorb
push
rolb
pop
jne
popf
rorb
scas
data16
cwtl
test
or
je
loop
cmpb
jne
xor
inc
dec
sub
stos
push
das
fnstcw
mov
mov
sbb
cld
pusha
cld
jp
xor
or
mov
jo
inc
daa
add
adc
imul
sbb
shlb
push
push
into
xor
pusha
mov
mov
sub
sbb
inc
test
mov
or
mov
sub
cltd
push
andb
push
xor
jae
push
shlb
fidivrl
nop
xor
pop
shll
loope
jnp
or
sbb
jno
jg
add
mov
or
and
rcr
jecxz
mov
test
sbb
cwtl
inc
mov
insb
jg
add
stc
cltd
push
xchg
mov
lsl
cmp
cmp
jg
sahf
add
mov
mov
faddl
in
push
jnp
js
pop
gs
addb
mov
mov
out
nop
lret
outsl
cmc
movb
inc
jmp
nop
mov
in
add
push
jmp
dec
sbb
sub
repnz
sar
ret
rcll
nop
inc
fildll
sahf
std
push
sub
add
sub
mov
adc
and
xchg
fmuls
rcll
sub
or
jbe
in
push
inc
sti
in
jle
cmp
or
dec
sub
add
fdivrs
fiadds
faddp
subl
cmp
lcall
adc
xor
inc
aam
adc
addl
sub
aam
data16
add
dec
jge
rorb
adc
jle
loop
cltd
push
sub
js
xchg
ret
jg
jmp
sub
add
adc
push
pop
int
flds
pop
sub
sbb
cmpl
imul
mov
div
movsl
daa
pop
mov
mov
mov
in
cli
movsb
add
loope
adc
mov
sbb
sarl
orl
filds
and
iret
mov
add
cmpsl
stc
mov
push
test
insb
push
pop
movsl
or
jmp
xchg
or
ja
add
jbe
add
add
ja
ja
cmpsb
imul
ja
nop
cmpsb
imul
gs
ja
ja
xchg
jns
lcall
js
sbb
mov
jae
or
js
xor
shll
jns
jns
imul
jns
add
add
fidivrs
jae
add
xchg
mov
sarl
push
les
out
stos
mov
imul
int3
in
loop
ret
adc
adc
loopne
nop
fidivs
mov
cltd
add
dec
gs
pop
pop
pushf
in
loop
mov
ret
xor
pop
ljmp
mov
je
pop
add
rcll
inc
test
mov
jae
xchg
call
in
das
rcrb
and
cmp
mov
or
sub
movb
filds
lret
mov
or
test
push
push
pop
mov
rclb
into
js
imul
shl
jo
adc
pusha
scas
or
push
fsubs
pop
xor
loop
cltd
mov
loope
cltd
add
mov
je
in
int3
push
nop
loop
jp
and
insb
pop
pop
jg
call
add
xchg
push
out
sti
and
add
es
sub
push
mov
loopne
jbe
mov
shr
pushl
insl
insl
fdivrs
and
lahf
xchg
test
jp
out
dec
fdivr
add
push
mov
mov
adc
stos
mov
push
andl
jae
popa
pop
mov
push
adc
jmp
inc
loopne
loopne
add
pop
pop
sbb
insb
sbb
or
or
and
xorb
mov
adc
dec
pop
push
sub
xchg
je
into
sbb
pop
sbb
hlt
fistpl
push
pop
popa
inc
and
mov
out
inc
xchg
ja
jecxz
pop
push
jb
lds
xor
mov
jmp
cmp
xchg
jbe
or
jl
xor
xor
add
push
std
pop
and
cmp
nop
jo
ss
ds
out
cmp
mov
icebp
inc
adc
mov
jp
push
xlat
push
xor
adc
mov
adc
cmpl
fdiv
sbb
and
xor
ss
addr16
fmull
xor
jbe
sbb
aad
xchg
out
enter
sar
xchg
xor
jae
and
adc
mov
push
and
out
jne
pushl
es
push
pusha
sub
notl
pop
pop
push
add
subl
xor
fwait
push
arpl
jl
inc
push
or
mov
push
clc
sub
sbb
divb
sbb
push
mov
mulb
and
cs
jo
pop
pop
xchg
inc
dec
push
jecxz
or
cmpb
add
mov
psllw
push
xchg
add
inc
flds
push
sub
fwait
lcall
inc
push
cltd
sahf
pop
je
add
push
ret
mov
je
lret
pop
jl
cmp
sbb
hlt
or
insb
int3
push
pop
cmpb
mov
lods
addl
mov
mov
sub
xchg
or
test
mov
adcb
leave
mov
popf
es
push
lock
fsts
xchg
dec
rclb
add
fdivl
xor
lock
testb
movsb
in
loop
inc
add
iret
xor
push
sbb
sub
orb
mulb
push
pop
inc
data16
sbb
dec
lods
mov
pop
or
mov
add
pop
decb
fadds
dec
xchg
xor
add
loope
mov
bound
mov
push
in
cs
pop
xchg
add
cli
or
cwtl
clc
inc
into
mov
and
mov
cmp
sbb
fwait
xchg
jo
jmp
test
cmp
inc
dec
sub
push
push
mov
sar
push
inc
xor
adc
and
pop
jmp
xor
sub
cmp
pusha
and
add
push
cs
inc
mov
mov
adc
test
sbb
rcl
mov
orl
add
imul
xchg
cmp
xor
out
jmp
mov
js
pop
and
and
dec
jecxz
xchg
inc
ds
cmpl
jne
mov
call
cmp
iret
das
nop
add
sub
dec
push
jno
out
lea
jno
mov
aaa
ss
mov
xchg
push
clc
hlt
ret
fsub
or
push
mov
shlb
jae,pn
imul
test
iret
ret
cs
jbe
or
les
jbe
enter
adc
add
cmc
mov
js
push
loopne
cwtl
mov
mov
or
or
jo
mov
add
adc
or
sub
push
pop
ja
sub
rcl
pusha
enter
push
out
std
pop
add
add
fwait
lcall
outsb
and
xchg
clc
push
xchg
lods
or
pop
add
sbb
mov
les
xchg
call
movsl
insb
push
pusha
mov
stos
add
scas
add
jo
hlt
adc
in
hlt
icebp
and
inc
rclb
in
outsb
fistpll
insb
jne
fimuls
or
pop
and
or
adc
mov
cmpb
add
jb
add
inc
jae
jb
cmp
es
pop
fwait
xor
add
add
sub
in
dec
jb
test
jb
dec
rol
mov
xchg
pop
xor
and
mov
fwait
jmp
scas
or
nop
test
in
dec
gs
mov
je
sbb
dec
divl
test
notb
or
xorb
int3
mov
mov
int3
add
or
add
orb
insb
mov
sbbb
jne
outsb
sub
dec
sahf
lods
jne
add
mov
inc
insl
and
add
loopne
jecxz
push
add
xchg
call
push
xor
in
mov
sub
lahf
dec
add
mov
mov
jp
rcl
xchg
stc
pop
mov
lret
inc
adc
xchg
xchg
dec
sahf
call
mov
xchg
mov
mov
push
jo
ja
adc
lcall
push
cltd
in
insl
pop
mov
addr16
lret
lods
lret
enter
js
call
call
push
cwtl
lods
enter
pop
dec
mov
or
or
mov
add
enter
add
jb
aam
in
add
xchg
pop
sub
add
xor
inc
push
push
and
orb
aam
inc
add
aam
xor
and
in
push
ret
sbb
test
xchg
test
pop
sub
adc
ja
add
shr
sub
jb
in
adc
fadds
mov
fildll
xchg
push
push
in
inc
test
inc
addl
idivl
es
arpl
sub
lods
std
dec
cltd
scas
cmp
sbb
cmp
push
ljmp
adc
xchg
sub
ret
je
lock
lret
mov
fisttps
sub
clc
xchg
mov
xchg
arpl
mov
hlt
jne
cmp
rcll
sub
xor
dec
mov
push
xor
movsb
add
mov
cmc
ds
insb
das
mov
or
out
cmp
rclb
inc
das
aam
sbb
in
jnp
cmp
jmp
mov
cmp
add
dec
std
outsb
inc
fmul
je
cmp
jne
or
inc
jge
mov
cmp
and
or
jne
mov
adc
fiaddl
xchg
inc
cmpsb
xor
rolb
insl
mov
sbb
rcll
pop
cmp
push
sbb
add
fstl
add
das
xchg
jmp
sub
jl
je
out
or
ret
imull
out
mov
inc
or
push
or
andl
cmp
cmpsb
stc
xor
xchg
push
es
mov
daa
add
xor
rclb
or
push
stos
iret
addb
aas
pop
sub
mov
mov
inc
add
cwtl
out
push
sbb
dec
add
out
add
inc
cli
shlb
mov
outsl
jmp
jo
pusha
add
xchg
clc
das
push
hlt
mov
outsl
add
mov
and
js
add
mov
add
ja
sub
xor
fildl
and
jmp
inc
add
xor
cs
loopne
ficoms
push
push
mov
lods
adc
psubd
sub
mov
andl
test
les
and
pop
out
push
xchg
int
mov
mov
push
sbb
lods
jmp
and
jge
out
and
push
ret
or
mov
lea
mov
mov
sub
mov
cmp
and
sti
sbb
mov
sub
aaa
cwtl
push
imul
add
dec
bound
inc
xor
add
cmp
iret
ja
mov
movsl
inc
jo
imul
in
mov
pop
pop
xchg
mov
xchg
lods
jmp
cltd
inc
xchg
mov
cmp
nop
out
sbb
push
add
cmp
cmp
out
sahf
xchg
mov
push
pusha
hlt
in
cmpsl
jmp
mov
add
std
push
fbld
mov
jne
movl
mov
lods
or
inc
pop
cmp
std
jne
xor
xor
lods
jmp
sub
adc
push
das
add
jmp
sbb
rolb
lea
arpl
add
flds
repnz
and
push
mov
sbb
test
mov
and
push
xor
incb
out
jb
adc
std
je
jmp
lock
add
inc
in
push
into
dec
fwait
sub
and
aaa
stos
xchg
adc
jne
mov
jnp
jae
cmp
push
push
xchg
jbe
sub
xor
aam
dec
icebp
inc
inc
push
leave
movsb
push
jnp
test
pushf
loop
mov
loopne
mov
aaa
jmp
adc
dec
imul
mov
fs
subb
inc
cmp
pop
sbb
movb
pop
xlat
adc
push
ds
jge
add
jb
mov
add
mov
leave
dec
insb
fadds
je
sub
and
aas
xchg
int3
sahf
push
dec
jne
mov
lea
mov
subl
sbb
dec
xchg
idivb
fnstsw
testb
mov
inc
dec
jne
mov
stos
mov
jmp
or
fisubl
sub
cltd
push
jnp
cmpsl
cmp
adc
adc
js
pushf
shlb
subl
mov
pop
daa
or
stos
dec
test
push
and
scas
and
out
fcmovne
leave
mov
push
and
lcall
xorl
pop
xchg
xor
lahf
inc
pop
sbb
pop
push
sbb
cmp
das
push
pop
push
xlat
testb
imul
stos
insb
ljmp
lods
and
add
and
sub
or
xor
xchg
lock
add
sti
insl
mov
out
inc
sbb
inc
jmp
xor
jge
mov
mov
out
add
pusha
sbb
ss
jne
ljmp
adc
ja
pop
fwait
jno
es
xchg
and
adc
cmp
lock
dec
xchg
loopne
lods
inc
add
push
mov
and
xchg
xor
push
negb
push
cli
and
enter
mov
mov
inc
push
push
jg
cmpl
cwtl
popa
mov
cmpl
ret
dec
nop
jo
adc
addb
outsl
xchg
push
push
addl
sbb
adc
add
leave
in
loopne
adc
fcmovb
je
cmp
dec
loop
push
inc
pop
xor
pop
sbb
jo
lods
pushl
jae
imul
sbb
ficomps
inc
xchg
pop
cmp
sub
dec
cmpsb
mov
ljmp
and
xor
sub
add
cwtl
daa
sbb
dec
ljmp
jle
jg
cmp
dec
faddl
or
imul
inc
add
add
and
pop
aad
jns
pop
push
lahf
add
test
xor
pop
adc
mov
cmp
fsub
sbb
popf
xor
xchg
pop
add
js
mov
pop
inc
scas
lock
add
lock
jle
sub
insb
or
ss
add
leave
mov
decl
add
dec
jb
dec
fwait
sbb
or
add
js
inc
loop
mov
sbb
or
inc
cwtl
std
xor
mov
mov
push
pop
xchg
xor
pushl
push
test
mov
pop
orl
cmp
or
inc
pop
xor
pop
inc
rcrb
sub
lds
xor
dec
add
push
cmp
jg
jo
ret
xchg
mov
clc
lret
inc
sub
imul
pop
dec
pop
arpl
mov
and
rorb
jae
cs
dec
xchg
ficoms
in
add
ret
in
mov
loopne
xchg
dec
jl
dec
xor
lea
cmp
xchg
xor
push
ds
xor
or
push
mov
push
sahf
testl
pop
or
push
adc
push
outsb
shl
iret
push
adc
mov
add
inc
jno
mov
mov
enter
sub
xor
sbb
sbbl
loop
pop
cmp
cmp
and
sbb
sub
push
dec
fildl
jb
cmc
lods
jbe
lock
dec
insb
and
pop
cmp
sbb
xchg
fucompp
popf
in
nop
mov
fsubrs
popf
jge
sbb
push
fsts
push
mov
daa
xor
xchg
hlt
xchg
mov
insl
gs
jo
movsb
cmp
pop
and
push
daa
cmpsl
bound
imul
jp
fsubs
mov
mov
sbb
add
sbb
ja
mov
stos
and
cmp
fwait
push
ja
add
nop
arpl
xor
pop
fcomi
push
movsb
pop
pop
xor
outsl
hlt
xchg
arpl
fwait
inc
fwait
xor
cmp
shlb
enter
xlat
xchg
sbb
pop
mov
pop
pop
stos
mov
cltd
ret
lods
adc
insb
xchg
add
loopne
jmp
mov
cmp
inc
jp
inc
jmp
aam
jmp
fcmovu
std
jle
push
jge
nop
lret
insl
xor
insb
repz
in
call
rorb
sub
lsl
sbb
or
and
cld
stos
push
inc
mov
pop
dec
icebp
xchg
add
push
bound
test
sub
add
adc
lock
inc
xchg
adc
and
and
mov
pop
sub
push
or
shll
enter
or
sbb
pop
mov
add
leave
scas
push
andb
jbe
ret
inc
inc
mov
ljmp
xor
out
data16
insl
lods
sub
test
cmp
aas
gs
or
rcrb
les
gs
aam
xor
lock
pop
cmpsb
push
add
pusha
adc
push
call
lock
adc
push
and
jp
enter
insl
xchg
and
cmpl
fidivs
fadds
nop
inc
jo
into
pop
fsubrl
cltd
das
add
pop
jg
sbb
lods
imul
adc
fdivp
fildl
adc
mov
lock
pusha
xor
push
push
lahf
mov
shll
cmp
pushf
movsb
shll
aas
fdiv
out
pop
or
stc
shlb
mov
xchg
xchg
jmp
decl
or
orb
imul
adc
dec
in
pop
mov
fmull
fstl
sbb
mov
mov
push
hlt
xchg
jne
lea
jo
and
xor
nop
mov
push
dec
lods
push
mov
rcrl
fbstp
cs
push
or
jns
push
lcall
pop
repnz
adcb
aaa
movsl
movsl
xchg
mov
testl
mov
out
push
mov
mov
rcll
jno
fbstp
inc
cmc
mov
and
pop
mov
add
or
push
ja
jge
je
push
cltd
jmp
inc
faddl
or
or
jmp
test
or
sahf
add
fucompp
cmp
sti
iret
mov
xchg
and
ret
and
push
push
test
dec
mov
ret
adc
xchg
testb
and
xchg
loop
inc
dec
faddl
and
sbb
add
push
lock
sub
sub
or
pop
lcall
cmpl
push
pop
insl
daa
out
xor
aas
xor
es
add
xchg
xchg
push
aaa
mov
loop
popf
fadds
xchg
lret
int3
call
mov
adc
mov
lods
std
mov
sbbb
scas
inc
pop
mov
push
pop
push
mov
sar
sub
mov
mov
push
fwait
xchg
movsl
and
mov
ret
pop
push
jle
jno
idivb
rorl
mov
leave
scas
or
and
lahf
mov
xchg
out
push
and
jecxz
or
dec
call
jns
xchg
jl
mov
xchg
popa
xor
xchg
scas
sarl
sbb
mov
xchg
jb
jl
inc
gs
or
dec
dec
jne
idivb
pop
or
add
mov
nop
xor
je
movnti
mov
xor
inc
add
jnp
sub
add
sub
arpl
mov
add
or
xor
shrb
xchg
test
imul
mov
push
or
out
int3
je
jbe
dec
loope
je
sbbl
jne
inc
sub
in
adc
pop
and
jne
cmpb
add
ja
cmp
inc
xor
adc
and
dec
popa
mov
pop
cmp
lcall
loope
fstps
pop
leave
inc
inc
stc
push
mov
andl
scas
mov
aad
add
lahf
mov
in
mov
lea
pop
or
pop
push
cmpsb
scas
fs
or
push
clc
fs
nop
push
xchg
jbe
out
ret
push
clc
lahf
stc
jle
push
or
hlt
sub
mov
mov
sbb
cmc
jo
aas
inc
push
inc
lea
loop
aad
lods
pushf
adc
sub
icebp
cmpsl
lock
lcall
adc
in
inc
push
cltd
add
es
cwtl
xchg
or
sarl
lods
jecxz
test
sub
adc
js
push
and
cmpsl
xor
sti
test
jns
daa
mov
add
add
xor
mov
cld
xchg
inc
jno
cmp
push
movsl
add
jb
push
jmp
enter
mov
and
dec
repz
xor
cmpsb
sbb
lcall
push
outsb
xchg
xor
add
sub
jo
add
mov
add
adc
jo
pop
sub
iret
hlt
add
mov
adc
dec
lcall
std
and
xor
test
jecxz
js
popa
icebp
imul
xor
in
mov
iret
sub
iret
mov
pop
push
add
ja
popa
jne
sbbb
push
inc
int3
arpl
add
jno
ds
jle
mov
rolb
loop
call
pop
mov
lret
mov
in
or
out
push
inc
repnz
mov
imul
mov
int
sub
lea
scas
and
sub
shrb
mov
dec
mov
xchg
shrb
mov
loope
roll
add
jb
lock
inc
mov
sub
add
and
scas
jns
jo
inc
add
jb
sub
xor
lret
jae
jo
inc
push
ret
sub
nopl
xchg
push
inc
dec
mov
add
or
and
inc
outsb
mov
mov
or
xchg
aas
pop
mov
lea
xchg
xchg
cltd
sub
std
cmp
inc
pop
inc
setnp
xor
sbb
sub
cmp
cmpsw
lock
sub
or
push
sub
data16
rolb
fcoml
xor
repnz
mov
pop
dec
popa
fs
divl
push
cmc
sarl
sub
jge
movsl
adc
or
cmp
popa
aas
sub
sbb
jmp
test
sti
sub
int3
cmp
adc
sub
test
jne
loopne
inc
dec
dec
and
or
lcall
mov
sar
test
out
shl
lods
dec
fs
mov
jne
jmp
fwait
cli
sbb
mov
fstpt
sbb
mov
ret
orl
je
push
push
mov
out
sbb
push
fcmove
add
nop
dec
movsb
test
inc
ret
push
or
cwtl
sub
xchg
orb
shr
mov
xor
mov
dec
nop
popf
inc
mov
inc
pop
or
mov
adc
or
mov
sub
push
icebp
daa
pop
mov
mov
mov
andl
mov
xchg
in
mov
adc
pop
aaa
sbb
cmpsl
inc
out
ds
add
cmpsb
pop
gs
push
jecxz
stos
fdivl
push
mov
xchg
dec
sub
mov
arpl
leave
stos
push
push
xor
lods
jno
pop
lods
pop
or
inc
xor
popa
fs
pop
pop
adc
push
stc
add
pop
cmp
adc
jo
pop
lret
push
imul
loope
xchg
jbe
inc
mov
mov
push
add
inc
mov
and
sahf
xor
jmp
xor
xchg
arpl
sbb
test
mov
pusha
xchg
int3
jecxz
movsl
cmp
mov
mov
push
lea
inc
lea
jge
mov
xchg
adc
and
inc
mov
test
in
in
sbb
sbb
aad
lds
aaa
add
mov
xchg
xlat
fcoms
fiaddl
mov
daa
xchg
ljmp
xchg
pop
xchg
cltd
lea
and
leave
sbb
push
movsl
mov
cltd
movsb
repnz
add
sub
xchg
movsb
test
pop
pop
cmp
or
push
pop
mov
popa
outsb
push
sub
push
pop
sbb
in
fsubrs
xor
xchg
mov
and
stos
rep
es
in
add
mov
mov
sub
lods
dec
push
add
mov
inc
popf
add
xchg
stos
icebp
ret
jg
sbb
xchg
xchg
xchg
mov
and
test
fwait
in
add
xor
inc
dec
in
jne
test
shrb
movsl
push
andl
stos
lods
lods
add
jne
pop
mov
or
test
hlt
adc
add
add
jbe
popa
idivl
mov
lea
int3
pushf
or
out
inc
add
push
scas
xor
pop
add
je
add
push
pop
adc
js
popa
out
pop
and
shlb
push
xor
sub
xchg
dec
addb
pop
pop
xor
push
adc
mov
jne
inc
and
xorl
push
sbb
or
sub
or
jl
adc
aaa
in
test
shlb
push
icebp
jmp
subl
add
push
jg
mov
jnp
pop
sti
adc
dec
lods
xor
rol
or
pop
mov
adc
nop
movsl
test
imul
pop
mov
fs
dec
testb
shlb
or
inc
cltd
sbb
cmp
xor
jl
cmp
fadds
test
jge
mov
mov
out
add
or
add
push
add
clc
ret
sbb
push
std
jb
test
mov
add
or
je
cmp
jmp
outsb
lret
sub
ret
dec
push
cmp
insl
cmp
sbb
lret
add
jl
js
mov
mulb
divl
adc
add
jle
dec
cmp
je
or
add
shll
jne
lea
popa
add
adc
and
mov
sbb
pop
lahf
std
and
stos
bound
inc
cmp
pushf
lret
ljmp
and
jg
dec
hlt
mov
test
jne
push
movb
inc
clc
xor
xchg
mov
sub
enter
lea
ljmp
push
pop
add
dec
pop
cs
test
xchg
clc
sbb
mov
mov
jmp
mov
or
imul
sti
add
push
dec
or
ror
cmp
and
mov
jmp
sub
es
add
or
bts
jmp
scas
out
sub
or
cli
pop
xor
fwait
mov
adc
jno
incl
test
sub
and
neg
inc
lret
add
cmp
and
cmp
loopne
dec
mov
ss
enter
mov
dec
pop
sub
cli
xchg
cli
rcll
lock
sti
mov
out
add
xor
adc
lods
aas
aaa
test
fnsave
jne
mov
and
lock
icebp
cmp
pop
pusha
mov
adc
add
push
test
gs
cmp
ljmp
jbe
jl
mov
adc
div
mov
inc
cmpl
pop
adcl
cmp
test
lea
enter
cs
pushf
mov
lea
dec
pop
mov
fs
mov
xor
pop
or
sbb
push
sbb
clc
sub
mov
loope
rolb
and
jmp
sub
lods
adc
mov
cmovnp
sarl
and
inc
or
push
inc
imul
xchg
loopne
ret
dec
inc
or
mov
push
clc
cmp
imul
inc
ret
fcmovb
out
xchg
inc
push
sbbl
sbb
popf
cmc
andb
inc
fmuls
outsl
mov
jbe
add
gs
sahf
inc
jno
es
jbe
jecxz
dec
lea
pop
hlt
test
cmp
dec
and
cmp
loop
pop
fistpl
out
dec
adc
add
in
int3
mov
inc
pusha
mov
or
sbbl
adc
xchg
shrb
add
xor
cmp
push
pop
pop
sub
add
sbb
inc
sub
test
gs
cmp
enter
es
push
or
jne
dec
mov
test
dec
mov
mov
pop
addr16
add
dec
or
out
sub
fidivrl
movsl
fisttpl
adc
jmp
push
sbb
roll
je
cmp
lods
xchg
pop
jb
outsb
stos
or
js
outsb
mov
and
cmp
push
out
ljmp
pop
sub
dec
in
cmp
mov
shll
cld
add
sbb
addb
push
int3
pop
pop
insw
push
mov
and
es
gs
orl
ds
dec
bound
and
push
pop
sub
xor
push
pop
mov
mov
enter
or
scas
push
int3
cmp
rcrb
jle
xor
and
and
sar
adc
lea
add
add
mov
mov
es
lahf
mov
jnp
andl
lea
push
xchg
and
rcrb
mov
push
mov
or
sbb
adc
or
shlb
enter
je
lods
add
lock
sub
lea
pop
hlt
mov
mov
pusha
push
cmp
add
and
dec
dec
adc
push
mov
push
pop
push
int
sarl
mov
lea
daa
mov
or
dec
jg
out
mov
incl
or
movb
xor
out
xchg
pop
dec
inc
add
cmpl
push
or
dec
inc
call
ja
push
sbb
add
ret
mov
rclb
push
sbb
mov
mov
add
addl
pop
lret
imul
faddl
add
xor
mov
cmp
or
rorb
data16
and
into
sub
shll
add
jmp
jno
mov
jle
sahf
xchg
sub
pop
push
jge
xlat
xchg
xchg
or
or
or
sbb
aaa
cld
cmp
pop
ret
add
xor
jmp
jns
mov
mov
sub
insl
movsl
pop
incl
lret
or
jo
sbb
dec
scas
jmp
aam
mov
xor
mov
orb
jmp
mov
dec
push
pop
jmp
lea
cmpsb
mov
push
adc
cmpsl
xchg
dec
inc
sub
push
aaa
xor
lods
add
jne
jmp
mov
add
or
and
sub
mov
movl
mov
lds
adc
out
inc
push
add
push
xlat
or
mov
push
mov
aam
movsb
sbb
xchg
push
movsb
jno
es
sub
das
cmp
test
mov
stos
ds
rolb
mov
pop
add
gs
das
cmp
add
inc
rcrb
ja
enter
fimull
cmp
dec
fwait
or
sbb
cmp
push
aas
inc
in
mov
repz
mov
bound
lock
add
push
lret
mov
mov
fucomip
jb
jae
pop
cmc
outsl
dec
jl
ret
mov
inc
mov
jb
push
sbb
lea
pop
pop
push
sub
push
mov
fs
cmp
jecxz
or
sub
lea
daa
pop
mov
add
sbbl
push
fimull
push
jle
or
xor
mov
out
arpl
mov
push
push
jb
pop
xor
fwait
or
es
add
push
add
jnp
incb
sbb
or
loopne
daa
jg
test
xor
xor
add
repz
xlat
xor
or
mov
mov
jle
sar
adc
and
negb
ds
out
stos
sub
xor
xchg
out
repnz
xor
inc
js
cmp
cmp
mov
inc
push
inc
xchg
pop
mov
nop
cwtl
add
pop
fnclex
out
add
fsts
data16
ja
add
iret
push
adc
js
jne
push
nop
pop
sbbb
or
data16
leave
push
clc
add
and
stc
push
cmp
add
mov
lea
mov
pmulhuw
hlt
push
lock
sbb
adc
and
sub
mov
orb
mov
daa
add
adc
addb
leave
push
jbe
adc
sub
dec
ds
inc
je
out
cmpl
jo
iret
jne
mulb
and
push
sahf
leave
add
test
xchg
test
daa
cmpl
add
lret
sbb
not
aam
push
ret
hlt
jge
inc
push
sbb
pop
and
jb
les
sub
jns
jp
mov
and
jo
xchg
sbb
inc
inc
cmp
into
add
insb
mov
in
cld
sti
enter
std
mov
mov
enter
jmp
adc
scas
mov
out
repnz
in
movb
shl
cmp
sarb
sbb
pusha
jnp
add
int
cmp
ret
addb
daa
pop
pop
test
sbb
sbb
outsl
cwtl
add
mov
xchg
jb
dec
ja
add
jo
movsb
je
movl
in
jmp
cmp
xchg
pop
lods
cmp
clc
lock
jb
add
adc
and
or
push
and
dec
out
dec
mov
xchg
js
fisubs
outsb
adc
pop
lea
inc
or
push
lds
add
xor
insb
inc
push
hlt
inc
mov
mov
fcom
xchg
fmul
ja
mov
and
pusha
jl
enter
rcrl
add
ret
sub
inc
add
jmp
add
or
shlb
push
or
pop
mov
or
lock
mull
lsl
popf
jns
shr
inc
push
pop
push
push
inc
shr
rcr
shr
rcr
or
div
pop
dec
cmp
mov
out
jb
cmp
or
cmp
std
push
jbe
dec
sub
sbb
inc
mov
or
fisubrl
hlt
inc
je
push
lret
iret
pop
leave
shlb
mov
mov
clc
dec
sbb
and
push
roll
mov
add
testl
fsts
inc
in
addb
sub
out
sti
mov
jge
xor
add
inc
adc
fidivs
shll
icebp
mov
cmp
rcll
mov
adc
jb
ds
push
mov
mov
test
xchg
inc
xchg
mov
xchg
mov
test
jnp
mov
push
sub
loopne
jecxz
cmp
or
or
adc
jmp
push
push
sbb
cmp
sbb
rclb
sbb
and
dec
and
push
pop
mov
rcll
ret
and
add
xor
sarb
push
dec
inc
aaa
or
mov
lret
jne
xor
jo
add
or
out
dec
adc
addb
and
cli
inc
jne
pop
add
lds
jnp
pop
inc
cmp
mov
rclb
or
mov
push
push
mov
adc
push
jnp
xor
pop
dec
test
mov
mov
js
out
add
hlt
pop
nop
add
push
xor
clc
imul
leave
or
sub
repz
cmpb
push
popa
sarb
pop
push
push
sub
adc
ffreep
push
mov
dec
out
mov
sbb
push
scas
rcrb
and
lods
fsubs
loopne
imul
icebp
pop
rcrb
decl
jle
add
mov
clc
mov
test
jne
es
outsb
stos
dec
je
mov
gs
pop
addl
sub
mov
jbe
mov
jg
inc
jmp
mov
cmp
mov
jo
cmp
xor
insl
mov
inc
ret
lods
sti
stos
or
mov
xor
add
addb
add
or
sarb
loop
sbb
sbb
mov
cwtl
pop
cltd
mov
sub
mov
pop
loopne
add
push
rorb
aas
sub
rcl
fs
add
sub
femms
jne
mov
sti
inc
mov
jmp
adc
outsl
fists
dec
push
int3
mov
test
imul
loope
mov
push
adc
lds
test
pop
mov
ret
pusha
nop
aam
inc
int
fs
inc
fidivl
dec
xor
xor
xor
inc
xlat
movb
sub
out
lock
out
push
lea
rcl
jecxz
bound
sub
std
das
mov
cmp
jg
inc
jmp
cli
testb
jbe
in
and
cmp
imul
fildl
jge
aas
sbb
cmp
nop
pop
adc
in
lret
cmp
nop
pop
je
dec
clc
xlat
sub
dec
je
mov
loope
inc
pop
fadds
xor
icebp
xor
shll
xor
push
je
jbe
insb
jne
push
adc
cld
and
add
jo
les
mov
stos
addb
xchg
clc
fwait
cmc
ljmp
je
jbe
jo
jbe
subb
int3
out
push
dec
adc
push
and
lods
jl
lahf
out
push
dec
and
push
jg
outsl
inc
or
jl
idiv
jbe
jle
xor
jg
jg
mov
jg
lea
sbb
stos
les
repnz
in
push
lods
sbb
lea
lea
inc
out
add
xchg
add
rcr
inc
and
mov
xor
rolb
add
inc
enter
cmp
or
inc
inc
push
negl
xorl
sub
sub
push
mov
sbb
in
inc
push
mov
shr
dec
sub
pop
les
push
mov
shl
mov
loop
inc
adc
pop
sbb
rcrb
push
je
lods
mov
aad
in
cwtl
and
dec
push
and
and
ja
mov
and
sbb
sub
out
pop
cli
cltd
fdivr
and
ljmp
pop
stos
cmp
ret
add
dec
in
ljmp
and
shl
sbb
clc
or
pop
nop
add
and
aam
jnp
inc
js
jnp
pop
add
or
lock
cmp
jb
iret
mov
push
inc
inc
mov
dec
and
popf
or
adc
in
dec
clc
orl
mov
dec
add
jge
adc
subb
mov
orl
or
repz
shll
fistps
cmp
or
sub
rclb
push
pop
ja
mov
out
inc
adc
adc
push
pop
dec
pop
xchg
mov
lods
rolb
xorb
add
loop
push
adc
fiadds
push
push
and
jg
into
std
or
and
or
xor
mov
add
je
xchg
cli
adc
lea
lea
or
mov
jnp
adc
push
pop
jbe
sub
and
cmpl
mov
add
es
jle
add
mov
xor
into
js
add
xor
outsl
mov
addb
mov
dec
pop
inc
cmp
mov
mov
arpl
jno
add
jno
push
push
rolb
ljmp
jp
sub
imul
add
cmp
cmp
inc
push
push
push
push
xor
push
ds
es
enter
or
rcl
jmp
out
jae
adc
shll
shlb
sbb
add
mov
je
test
lea
and
mov
hlt
adc
dec
xor
push
sbb
out
aas
adc
test
xchg
adc
xor
mov
daa
fcmovbe
scas
je
fisubl
mov
sbb
es
xchg
ss
inc
pop
pop
mov
pop
mov
push
or
inc
test
rolb
shrl
ds
add
rol
fsubs
mov
fdivrs
test
and
mov
jmp
xorl
aad
lcall
sub
inc
add
rorl
lret
sbb
xor
das
xor
js
xor
pop
gs
adc
sub
adc
dec
or
push
inc
fimull
or
in
lods
into
lods
push
ss
push
repz
jl
cmp
lea
inc
or
sbb
add
orl
out
push
push
push
inc
xchg
push
push
mov
nop
stc
inc
mov
test
add
xchg
lea
insb
adc
movsb
push
fprem
leave
push
or
push
test
clc
jae
and
ljmp
inc
jmp
xchg
popf
pushl
rorb
mov
cmp
sub
cmp
dec
sub
add
push
fsts
sub
or
pop
test
jmp
stos
inc
mov
push
push
nop
lods
adc
mov
cwtl
or
xor
mov
dec
jmp
xor
mov
push
lods
mov
cmp
sub
xor
or
or
push
mov
cs
mov
mov
xchg
ret
mov
add
iret
and
xor
pop
dec
cmpsb
mov
subb
outsb
mov
push
cmp
clc
add
faddl
out
or
sub
std
add
xchg
mov
movsb
andl
jo
adc
jmp
mov
stos
popf
inc
push
dec
sbb
scas
dec
roll
lea
mov
push
xor
jle
sub
cmp
clc
push
xchg
xor
in
mov
or
cmp
xchg
bound
dec
jae
out
int
lds
or
lock
jo
adc
sbb
mov
sub
ret
pop
jmp
adc
clc
pop
jge
push
jnp
jnp
mov
nop
sti
lods
dec
mov
movsb
jne
dec
dec
jae
imul
sbb
aad
cmp
loope
jmp
and
outsb
mov
rclb
bound
fisubrs
sub
xchg
xchg
shlb
in
cwtl
rcrb
outsb
push
and
lahf
inc
addb
sub
cmp
mov
insb
movsl
jbe
sub
mov
lods
inc
stos
loopne
je
mov
dec
faddl
insb
push
jge
inc
nop
mov
mov
enter
inc
mov
add
testl
mov
jecxz
fldl
pop
orb
or
xchg
call
mov
data16
repnz
test
lea
cmp
mov
push
jg
cmc
jecxz
push
sbb
pop
push
push
inc
jmp
cmp
xor
xor
mov
icebp
inc
loop
dec
hlt
cld
pop
ret
jne
adc
pop
cmc
push
adc
cs
jge
lcall
mov
cmpsb
push
sbb
test
xor
jl
cmp
adc
or
push
mov
mov
fldln2
inc
jge
call
xor
frstor
xor
jne
loopne
adc
push
push
add
or
sbb
call
add
je
mov
mov
sbbl
sbb
mov
jb
dec
test
mov
lea
enter
test
lds
popa
adc
or
call
shll
roll
lods
mov
lea
nop
inc
ficoml
jae
mov
std
mov
sbb
mov
mov
sub
scas
daa
and
testl
adc
jne
inc
or
and
les
popw
dec
into
sub
jne
inc
or
cmp
sbb
push
data16
xchg
pop
dec
call
nop
ljmp
add
test
mov
pushf
fcoml
inc
add
fistpl
mov
lock
or
add
sub
add
bnd
aas
movsl
mov
mov
pop
inc
ja
sub
pop
cmpl
insl
mov
push
pushf
mov
mov
or
sbb
sti
jg
subl
cmp
jle
xor
xor
sub
push
shll
shr
mov
add
or
shr
or
dec
aas
or
push
clc
gs
and
jg
or
nop
push
or
adc
inc
mov
shrb
test
lods
decl
or
cmpsb
push
shrl
shl
shr
or
mov
adc
sahf
dec
mov
jne
lcall
mov
sub
aam
loop
mov
cli
sub
jne
inc
mov
xchg
into
add
shl
add
adc
jg
or
inc
jmp
mov
fildl
or
or
fisubrl
aam
fldenv
icebp
adc
iret
push
mov
mov
int3
add
pop
mov
loope
jl
dec
rcrl
cmpl
out
or
daa
cmc
adc
mov
lret
pop
mov
push
lods
adc
jge
shlb
mov
les
push
out
insb
inc
les
mov
mov
jp
lret
das
sub
test
sbb
lret
sub
movups
ficompl
mov
les
mov
inc
mov
cmpps
aam
inc
in
xchg
add
push
nop
push
adc
neg
inc
add
push
and
push
cwtl
shl
jns
iret
in
movsl
lcall
push
mov
out
and
test
rcll
incb
jne
xchg
xchg
ret
dec
adc
sbb
mov
testb
push
push
int
lods
subl
insl
jg
or
pop
and
mov
rorl
sbb
pusha
rcrb
dec
addb
nop
pop
mov
or
in
xchg
mov
jo
xchg
je
sbb
popa
lea
int3
stc
out
and
rcrl
or
adc
inc
jns
sbb
les
add
add
movsb
rcl
repz
adc
sti
subl
push
lea
xchg
fcmovbe
mov
adc
int
test
rclb
and
or
adc
pop
addb
and
xor
rcrl
mov
sbb
js
mov
rolb
inc
dec
roll
sbb
sbb
pusha
pop
je
subl
push
movsb
push
add
inc
adc
and
cmp
push
out
inc
inc
inc
jo
mov
jne
shlb
mov
jo
testb
stos
dec
rcrl
xor
mov
push
xor
xchg
test
fcomp
add
sub
xchg
loopne
mov
push
inc
cli
pop
pop
ret
add
inc
sub
dec
push
dec
ja
inc
dec
cli
shr
add
les
xor
ljmp
and
and
push
mov
sbb
lods
mov
push
rcrb
lods
loope
adc
mov
orb
push
or
ja
sahf
sub
push
adc
outsl
inc
jmp
lea
pop
dec
lea
and
leave
xor
sub
xchg
mov
mov
dec
xchg
testb
aad
rorb
pop
rcrl
mov
loope
loop
xor
xor
and
xchg
push
loopne
sbb
adc
push
sbbb
nop
cmc
je
mov
enter
adc
sti
nop
sbb
xor
loope
add
jmp
mov
popl
sti
das
mov
sbb
add
leave
shlb
add
outsl
popf
and
mov
add
sub
outsb
insb
xor
mov
xchg
xchg
xorps
cltd
ljmp
push
cltd
add
loop
pop
ret
push
data16
insb
shlb
and
loope
jl
js
inc
pushl
mov
js
push
cmc
imul
cmpb
sub
xor
jns
push
test
dec
sub
xchg
add
ds
sbb
mov
mov
mov
sahf
adc
sbb
rclb
xchg
cmpsl
adc
lahf
test
push
hlt
mov
andl
fs
add
loopew
adc
out
lret
add
stos
in
nop
xor
cmp
fsubs
add
scas
js
pop
push
push
inc
inc
dec
les
ds
sbb
inc
call
pop
push
mov
hlt
pop
lea
xor
fadds
jnp
mov
cmp
int
xchg
sub
inc
mov
add
mov
xchg
dec
or
inc
fs
add
fidivl
mov
shrl
mov
fisubl
incl
cmpsb
int
push
test
push
or
add
jmp
cmpsl
mov
sbb
loopne
add
add
cmp
call
rol
inc
xor
sub
sbb
jp
scas
test
push
jmp
cmp
inc
jge
push
adc
iret
push
pusha
dec
iret
test
out
movsl
add
dec
pop
dec
loopne
scas
sbb
pop
sbb
inc
sbb
cmp
mov
jle
fistl
mov
sbb
inc
dec
xor
iret
ss
addr16
pop
ss
mov
and
mov
pop
adc
cmp
pop
ret
xchg
adc
cmp
add
ret
inc
inc
mov
cli
or
xorps
inc
loop
add
mov
push
addl
adc
aad
gs
xchg
aaa
inc
icebp
and
lea
sub
add
mov
adcl
sub
enter
shll
add
cmp
pop
loopne
and
in
pop
add
or
jns
adc
fiadds
into
jg
or
add
addr16
mov
sub
or
lret
adc
cmpl
add
mov
or
movl
mov
lcall
xchg
inc
scas
add
sbb
mov
shlb
add
test
sarb
or
push
jmp
or
sub
sub
push
adc
push
or
fidivs
stos
mov
lock
pop
andb
lret
jmp
jo
and
pop
mov
jb
movsb
lret
sbb
clc
xchg
aas
push
jae
adc
lcall
and
ja
lcall
jne
adc
sub
sub
loope
adc
mov
fidivrs
jno
xchg
mov
push
jl
inc
je
xor
ds
fs
or
mov
sub
cmp
mov
dec
bound
test
mov
lock
insl
stos
aad
pop
cmp
xchg
stos
test
add
test
adc
xorb
subps
or
fistl
mov
sbb
popf
xchg
cli
xor
cmc
inc
and
adc
mov
mov
adc
adc
jb
int
icebp
inc
push
mov
lcall
add
stos
pop
push
and
xchg
lcall
mov
mov
and
sbb
push
or
fcompl
movsb
in
dec
fimuls
ret
mov
insl
mov
cmp
or
push
and
sub
inc
push
xchg
sbbb
dec
insl
hlt
loop
divl
scas
subb
push
adc
xor
adc
sbb
cmp
jbe
int
loopne
inc
mov
jmp
test
mov
stos
test
inc
cmp
rorb
jmp
addl
js
pop
sbb
jmp
js
add
adc
loopne
cmp
pushl
add
mov
jl
ljmp
jb
test
inc
jl
enter
and
jns
fs
inc
add
xchg
lock
cli
sbb
es
adc
push
aad
loope
test
shlb
xchg
cmp
mov
push
dec
add
lret
dec
mov
push
jge
jnp
clc
jo
mov
push
push
add
ret
ficoml
movsl
sti
add
insb
pop
pop
mov
lea
jb
cmp
push
sbbb
push
or
pop
nop
dec
popa
add
daa
js
inc
sbb
sub
in
xor
fnclex
sub
dec
inc
jmp
and
scas
incb
sahf
mov
sub
cmp
dec
mull
les
adc
movb
xor
test
and
shl
hlt
pop
sbb
push
andl
repz
fsubs
adc
mov
adc
int3
xor
sbb
rcll
clc
push
sbb
or
fcoml
int
or
jne
push
aas
mov
inc
int
xor
pop
jb
jo
aas
xor
shrb
add
jecxz
lods
les
jo
inc
pop
mov
xor
jp
fs
add
insl
push
adcb
std
shlb
push
js
loope
push
sbb
popa
clc
mov
jne
pop
push
pcmpeqw
xchg
mov
add
imul
mov
jmp
jb
cmp
loop
adc
sbb
mov
loopne
mov
jne
pop
jae
call
ss
je
arpl
jl
lds
cmp
add
ljmp
or
pop
insb
jecxz
jle
jb
imul
adc
pop
lock
jb
enter
xchg
lock
fbld
fcoml
fdivrs
or
xorb
outsl
add
ror
or
cwtl
mov
push
clc
push
pop
andl
lcall
or
cmp
andb
mov
add
mov
shlb
jb
pcmpeqb
sti
lds
je
jae
mov
je
popf
or
sbb
pop
jl
mov
push
or
inc
inc
sub
jno
jo
fildl
loop
loopne
fnstsw
sbb
pop
lds
in
xchg
add
push
sbbb
xor
mov
fsubrl
dec
pusha
and
fbstp
sbb
inc
mov
sub
rorb
les
sbb
or
mov
adc
fsubr
fisttpll
inc
or
in
push
insb
call
push
cmp
jmp
or
fdivrl
cwtl
cmp
lock
xchg
add
add
test
daa
ds
sbb
adc
fs
push
loope
cmp
mov
incl
test
dec
fldl
add
add
roll
loop
xor
dec
sbb
mov
addl
mov
insb
insb
or
cmp
mov
cmp
jo
dec
xchg
stc
jb
push
fxch
call
inc
mov
push
jo
mov
pop
adc
xchg
adc
divb
xor
push
inc
xor
clc
jnp
into
add
mov
lret
add
and
mov
daa
push
xor
or
or
repz
and
inc
fsubs
insl
xrelease
jne
dec
add
nop
subl
shl
fcmovb
aad
je
jl
xor
push
and
pop
inc
add
pop
rcrl
popf
cmp
jge
or
sub
in
popf
add
or
sub
addb
cli
sbb
push
cmp
insb
and
cwtl
out
mov
adc
push
sub
or
out
mov
dec
xchg
fadd
in
push
je
inc
lcall
mov
inc
push
sub
cmp
push
pop
test
es
cld
cmpsb
testb
adc
cmp
ss
mov
mov
pushf
imul
adc
xor
mov
cmp
faddl
push
sar
mov
push
adc
mov
out
mov
mov
jecxz
pusha
jl
adc
stos
out
rcrl
add
testl
in
stos
pop
cmpsb
cmpb
add
out
dec
mov
stos
stos
or
ljmp
add
arpl
and
pusha
push
test
cltd
clc
outsl
dec
jg
cmp
call
xor
xchg
or
mov
push
sbb
push
in
mov
rclb
rcrl
sbb
lahf
nop
add
inc
cltd
outsb
bound
mov
jne
out
and
lds
aam
test
add
push
pop
push
imul
inc
dec
dec
dec
adc
cmp
mov
and
sub
cmp
cmp
xor
cmp
or
cmp
inc
and
jb
jb
inc
cmovs
pop
jo
push
pop
add
pushf
pushf
fs
pushf
pushf
je
jl
fidivl
test
cltd
fs
mov
dec
cwtl
pushf
mov
movsb
test
xor
and
rol
dec
es
dec
int3
rorb
mov
adc
leave
and
in
in
leave
and
dec
aam
hlt
nop
xchg
dec
xor
cld
add
adc
or
and
dec
fwait
adc
xor
sbb
and
dec
xor
and
xor
leave
and
cmp
sbb
inc
dec
dec
fs
dec
cmpsb
mov
pop
ret
cltd
pop
pusha
sbb
mov
pushl
add
jl
rorb
add
je
js
xorl
bound
and
nop
cmpsb
jge
test
dec
fwait
adc
adcb
test
sbb
xor
and
rclb
sarl
inc
mov
test
inc
mov
mov
dec
mov
push
enter
pop
rolb
add
notl
mov
ljmp
ret
daa
leave
nop
mov
movsb
rcll
mov
add
dec
mov
bnd
pop
push
or
or
inc
or
and
mov
add
cmp
sub
inc
rclb
push
test
and
add
or
or
jns
or
jo
adc
into
shlb
int3
not
xor
loope
xor
daa
pop
mov
and
shr
add
in
and
jmp
lock
lret
and
out
ret
js
inc
push
jbe
lock
or
popa
push
adc
adc
or
xlat
xor
or
and
je
sub
hlt
mov
or
or
sub
or
call
add
insb
adc
adc
lock
in
shr
inc
and
mov
and
fsubrl
jg
jecxz
sbb
add
or
rorl
dec
adc
lods
push
std
or
or
jmp
jge
je
mov
ja
outsl
mov
fstps
aas
pusha
mov
pusha
loope
adc
pop
sub
xor
inc
and
adc
fisttpll
pusha
pusha
fldl
cmp
test
insl
shll
pop
addl
jns
adc
adc
sti
jg
sahf
lret
add
test
fisttps
or
scas
ret
mov
push
or
das
or
or
sub
push
and
sub
sub
call
out
and
adcb
cmp
popl
push
ficomps
jb
sbb
jmp
push
and
or
aad
adc
mov
flds
fstps
jmp
fisttpll
add
adc
fcmovnbe
or
hlt
adc
push
or
pop
sub
nop
orl
popa
ja
adc
xor
test
fidivs
test
sti
cltd
xchg
push
inc
hlt
pop
xor
xor
push
aaa
sbb
out
sbb
stos
mov
push
clc
addb
dec
jmp
sub
sub
nop
xchg
add
jmp
sub
push
push
rorb
fldcw
inc
test
into
adc
sbb
sub
lds
or
mov
jnp
nop
and
dec
loope
mov
fstpl
mov
jmp
cmp
repz
daa
mov
in
loopne
mov
rol
mov
enter
fwait
mov
mov
xchg
cld
inc
add
dec
je
cli
shrl
scas
lock
orl
rcrl
nop
loopne
or
push
push
pop
jmp
pop
dec
rolb
jno
lcall
cmpsb
mov
faddl
leave
stos
push
pop
movsb
and
addb
adc
jg
or
shll
sbb
cmpsb
push
test
jno
add
pop
adc
push
pop
adc
repnz
test
add
and
add
sbb
mov
outsl
ret
lods
test
vaddps
push
je
add
jl
xor
add
insl
pop
lods
call
test
rcrl
cld
sbb
hlt
fmuls
inc
cmp
rolb
out
or
test
mov
inc
mov
pushaw
mov
repz
pop
fstpl
ret
xor
jmp
jno
adc
sahf
aad
inc
and
xchg
add
adc
int3
inc
add
pusha
imul
jo
gs
scas
adc
mov
and
mov
mov
fcoml
mov
insb
add
sbbl
loopne
or
mov
icebp
js
and
push
das
push
and
ss
imul
loopne
int3
out
pushf
arpl
mov
sahf
xor
andl
mov
add
mov
adc
je
add
jecxz
into
cmpsl
hlt
sub
arpl
mov
push
nop
jle
add
sbb
or
mov
stos
sub
jge
lock
or
sbb
ljmp
sbb
mov
loopne
fsubs
into
pop
sbb
or
lods
sbb
testl
pusha
or
xchg
pop
or
outsl
subb
rcr
pop
flds
pop
fnstenv
neg
push
stc
jbe
lods
push
xor
test
cmovge
and
mov
jne
cmc
sbb
gs
insl
shrl
add
fidivs
push
out
mov
mov
push
xchg
xor
push
and
nop
or
scas
jge
es
sub
push
push
push
xchg
xorl
sahf
mov
xor
stc
jo
loope
mov
fnstsw
movswl
lods
jge
lret
sbb
loop
inc
fldcw
or
sbb
sub
rclb
xor
fmull
or
insl
or
push
mov
roll
js
fldt
fwait
out
and
cld
test
fsubs
outsb
fwait
sbb
xor
and
adc
nop
call
movsb
sbb
xor
xor
sar
imul
je
loop
xlat
dec
inc
je
sbb
xorb
scas
sub
mov
cmp
mov
dec
popa
add
movsl
pop
ret
loope
or
mov
or
jmp
and
jns
daa
adc
stos
add
dec
or
sub
sbb
pusha
cld
insl
or
jg
push
adcb
loopne
mov
test
data16
sub
push
jbe
mov
je
or
xor
movsl
mov
cmp
push
add
outsl
add
mov
adc
inc
mov
jae
rclb
fwait
pushf
add
cmp
push
shlb
sarl
or
ja
cmp
mov
jne
addr16
xor
mov
lret
je
clc
mov
inc
xor
cmp
add
sti
jbe
cmp
shrl
idivl
cmpl
or
lods
sbb
std
or
loope
push
or
sbb
xchg
loopne
sti
loope
rcrl
cmp
adc
cwtl
mov
and
dec
or
push
stos
sub
ss
push
or
dec
add
jecxz
sub
aas
add
add
and
sub
daa
mul
pop
test
jbe
jl
xchg
mov
movsl
lock
stos
jp
pop
sub
test
aas
sub
jl
sub
inc
pop
dec
push
rcr
fadds
cmp
add
xchg
adc
scas
mov
pop
adc
add
inc
lea
pop
mov
sub
inc
shrl
inc
sbb
lcall
mov
rolb
cmpl
clc
andl
pop
pop
and
mov
out
mov
inc
adc
iret
mov
mov
jno
iret
xchg
ss
cmp
jb
cmp
push
add
dec
cmp
adc
das
roll
jae
push
bound
pop
dec
dec
decb
stos
jns
fsubl
les
sarb
out
xor
push
and
fildl
push
mov
enter
cwtl
je
sbb
andl
xchg
mov
inc
std
push
pop
adc
sbb
or
xor
xor
cmp
shll
movsl
push
fcmovnu
das
sub
loopne
sbb
adc
shl
sub
sub
mov
loopne
pop
popf
cmp
lock
rorb
out
loope
dec
sbb
or
and
aam
out
mov
add
popa
and
jl
inc
shl
mov
fwait
sbbb
popa
sbb
xor
or
jg
lcall
dec
lea
test
rcr
and
sbb
test
sub
or
push
rol
out
or
adc
lcall
xor
mov
pop
pop
lock
lods
mov
lods
fsubr
pop
pop
push
mov
repnz
adc
aam
mov
dec
jns
cmp
subl
cmc
hlt
push
cmp
or
mov
or
sbb
mov
mov
daa
clc
movsb
addr16
cmp
push
ret
jno
adc
rclb
arpl
add
stos
popa
add
pop
xchg
add
jne
mov
filds
daa
andl
imul
icebp
dec
call
and
mov
mov
or
sub
mov
in
xchg
jge
xor
or
xchg
dec
push
sarb
shl
test
cmp
mov
fidivl
or
adcb
jle
cmp
and
mov
push
gs
lret
jne
and
sbb
mov
add
add
add
xor
add
cmpsl
inc
xchg
pop
adc
sbb
add
inc
xorl
xchg
lret
je
dec
add
mov
and
adc
test
stos
xorl
loope
add
leave
pushf
jmp
inc
mov
loop
rcrb
cmp
adc
sbb
jb
test
inc
inc
mov
cwtl
inc
push
lods
jge
inc
mov
mov
rorl
jle
lods
fadd
repz
sub
xorl
pop
xchg
xchg
xchg
adc
fidivrl
lret
cs
or
ss
cmp
je
incl
xor
mov
dec
cmpb
je
mov
jg
mov
cmp
pop
jne
dec
mov
inc
inc
mov
cltd
mov
ds
and
adc
fistpll
xchg
xor
add
or
sub
ss
sbb
cmp
mov
lods
mov
xor
sbb
adc
fs
imul
dec
adc
outsl
neg
inc
push
add
adc
jno
mov
jbe
add
jle
insb
cmpsb
adc
lods
sbb
fmuls
frstor
in
fnstenv
xlat
shlb
mov
fcoml
pop
mov
jbe
or
add
jns
je
pop
add
inc
ffreep
push
mov
sbb
rorb
xor
cs
sub
test
sbb
popf
sub
push
cmpsb
adc
aas
sub
jl
call
add
jle
test
dec
jbe
cld
inc
cmp
bound
add
jo
lcall
add
lods
jge
loope
pop
sub
add
dec
cmp
push
or
or
ljmp
inc
cwtl
and
inc
inc
sbb
outsl
xchg
pop
mov
dec
dec
jns
neg
movb
out
ss
jl
cltd
push
movsl
cmp
push
or
add
add
add
push
add
fs
mov
add
push
push
push
pop
and
push
inc
sbbl
add
int3
ss
push
mov
add
or
pop
lds
xchg
sbb
sbbb
add
lahf
pusha
mov
mov
iret
ret
jmp
add
jmp
mov
pop
xchg
jge
xchg
sub
adc
or
xchg
rorb
fbld
push
adc
shlb
add
add
cmp
push
test
fcmovbe
sbb
in
sub
mov
and
push
or
loopne
addb
jno
xor
add
cwtl
xor
das
pop
and
push
fadd
xor
add
flds
xor
popa
bound
jge
cld
movsb
sub
adc
and
call
jp
les
jbe
pop
or
dec
ss
mov
push
addb
enter
xchg
add
sahf
sbb
add
push
and
push
lret
sarb
push
loopne
adc
pop
dec
ret
lea
jae
loope
fmull
sub
adc
mov
divb
push
jbe
sub
repnz
test
enter
js
aad
add
subb
push
lahf
mov
mov
dec
sub
leave
and
ror
mov
add
insb
movb
scas
and
cmp
enter
jge
inc
pop
inc
popf
neg
sbb
mov
and
jecxz
adc
jg
push
pop
mov
shll
ljmp
ljmp
sub
add
inc
mov
inc
xor
nop
pop
divb
mov
jb
add
mov
or
pmaxub
or
mov
push
adc
xor
nop
or
add
dec
add
inc
adc
clc
lods
mov
bswap
sub
fcomps
push
xor
jbe
movsl
pushf
ss
fs
cld
shlb
shrd
sbb
sub
dec
cmp
add
test
push
movsl
clc
cwtl
xor
jb
add
pop
push
insl
clc
inc
and
xor
out
dec
arpl
xchg
cld
sub
xor
cmp
cmc
loopne
lcall
pop
mov
add
jno
or
shll
sbb
jnp
mov
and
lock
sbb
js
jg
leave
js
fdivl
xor
jmp
pop
cld
scas
repz
fimull
jl
jae
mov
push
shll
push
mov
xchg
sbb
add
mov
push
xorl
mov
push
jg
mov
mov
enter
mov
dec
inc
dec
pop
or
daa
mov
sbb
mov
add
cmp
xchg
mov
mov
lods
ja
fstps
frstor
inc
orl
es
inc
outsl
cmpb
xlat
mov
push
mov
sbb
data16
scas
adcl
ja
imul
xlat
roll
ss
jmp
pop
or
adcl
sahf
fwait
adc
sbb
es
decl
inc
or
or
sub
cli
ret
aaa
push
lods
mov
flds
rolb
mov
or
insb
rcl
add
push
and
out
repnz
je
aad
or
adc
fnstenv
jl
into
adc
sahf
rolb
sbb
sbb
mov
add
sarb
cmc
orl
sbbb
add
and
jne
push
cmp
addr16
nop
push
and
xchg
push
xchg
add
jbe
hlt
leave
jle
adcl
push
push
aad
or
push
adc
out
dec
out
inc
and
push
adc
sub
dec
sbbb
sub
popa
push
push
add
or
add
jmp
xor
ds
fldcw
mov
je
or
pop
data16
scas
add
xor
mov
popa
je
inc
je
fsubrs
ss
or
or
adc
enter
into
adc
push
je
and
xchg
popf
rorb
clc
adc
jge
mov
add
push
pop
mov
or
mov
inc
les
ret
pop
cmpsl
roll
cmp
add
inc
jmp
mov
cmp
lret
or
cs
adc
and
cmp
js
mov
int3
testl
xchg
and
mov
incb
hlt
int3
test
sub
test
inc
push
sbb
cmp
jl
push
mov
xchg
cmp
je
mov
jbe
xor
stc
push
sbb
cmc
add
daa
pushf
bound
mov
add
inc
loop
mov
lea
mov
adc
add
int3
sbb
iret
pusha
cmp
mov
mov
aaa
es
aam
dec
sbb
test
mov
outsb
pop
inc
sub
and
sarl
jge
pop
xor
push
adc
dec
pop
das
push
addr16
ljmp
subl
or
cmp
pop
dec
insl
outsb
or
cmp
or
and
jl
cs
inc
mov
iret
test
ret
adc
jg
push
push
adc
mov
cmpl
pop
add
xor
or
push
sbb
dec
push
mov
adc
xlat
dec
insb
mov
push
jecxz
add
mov
pop
dec
shlb
dec
inc
mov
cmp
xlat
nop
scas
nop
icebp
jb
inc
mov
and
in
cmc
jg
or
adc
or
outsb
fbld
push
jmp
or
jmp
jp
pop
test
and
mov
adc
pop
test
sbb
pop
ret
fisttps
and
add
sbb
data16
mov
lret
jo
cmp
pop
and
or
sbb
jmp
mov
jecxz
jno
sbb
cmpsl
inc
orl
cmp
adc
cmp
je
mov
jp
lods
inc
mov
or
inc
xchg
fwait
incl
or
fimull
mov
mov
fcoml
jl
xchg
and
lret
adc
fiaddl
sub
nop
into
sub
xor
pop
add
sbb
push
add
mov
mov
xchg
xor
xchg
push
jecxz
mov
adc
sub
or
pop
dec
in
dec
add
and
add
add
arpl
adc
push
dec
mov
rcll
or
or
or
xchg
cmp
addb
inc
decl
jge
shr
add
or
outsl
int
incl
leave
shr
or
mov
push
push
adc
test
adc
mov
and
add
mov
notb
sete
lock
dec
add
jp
lods
add
movsl
pop
cmp
imul
je
inc
jl
in
adc
add
sbb
cmp
or
dec
pop
test
test
les
or
add
and
addl
fisttpl
cmp
adc
bound
mov
push
xor
xchg
lret
xorb
xchg
loopne
or
inc
out
mov
jmp
dec
pop
or
lcall
dec
leave
aam
inc
pusha
cmpsb
and
xchg
add
rcr
jo
dec
sbb
push
mov
sbb
push
xor
push
mov
shlb
mov
sub
sub
in
xlat
cli
jne
mov
sbb
in
test
add
or
xchg
or
mov
xchg
shll
data16
and
push
jbe
test
and
xchg
sbb
sub
test
aas
pop
add
and
sbb
jmp
adc
dec
jmp
sbb
push
pop
enter
or
fisttpll
rorb
or
mov
or
lret
fs
addl
lret
shll
sbb
test
dec
jo
les
jecxz
or
mov
dec
sub
sbb
out
xchg
dec
add
mov
or
mov
sbb
inc
and
jo
add
roll
push
jge
pop
shlb
sbb
sbb
mov
rorb
int3
pop
std
cmp
sbb
scas
add
outsl
inc
add
sub
push
mov
fisubs
inc
lcall
clc
and
xor
lret
mov
sbb
popf
test
sbb
fistps
lods
adc
insl
jg
repnz
mov
or
out
add
mov
sbb
pop
je
add
pop
fsubl
ret
sub
xor
push
mov
fadd
movsb
mov
fdiv
cmp
xor
lret
fnstsw
push
sub
push
add
mov
cmp
and
add
ds
ss
mov
pusha
sub
call
ss
dec
dec
arpl
cmp
incl
ror
add
push
pop
inc
inc
out
xor
lock
movsl
mov
sbb
lods
scas
shl
mov
cmp
jle
inc
and
test
inc
daa
aam
pop
add
lea
in
dec
xor
fidivl
pop
out
adc
pop
mov
lea
xor
addb
pop
cli
cmp
je
sbb
push
add
ret
incl
adc
push
mov
xorb
test
push
add
lea
push
fidivl
add
imul
mov
ds
mov
inc
and
orb
data16
dec
cmp
sub
add
cmp
jne
sbb
popa
int
adc
inc
dec
add
popf
add
mov
test
inc
ds
rorb
push
cltd
aas
xorb
fprem
out
roll
leave
cmpl
js
je
mov
iret
lea
cmc
mov
call
je
inc
mov
jecxz
add
adc
jne
add
stos
movsw
sti
int
cmp
or
pushf
or
mov
mov
add
mov
and
add
and
add
mov
add
push
clc
daa
add
in
sub
inc
inc
mov
neg
neg
sbb
sub
mov
sbb
add
cltd
add
sbb
xchg
adc
sbb
push
push
inc
and
fldcw
xchg
cmpsb
xchg
xchg
fcomi
sbb
mov
xchg
inc
adc
sbb
and
dec
add
push
jbe
adc
pop
pop
sub
push
aam
cmp
adc
lods
rcl
ljmp
dec
and
shr
sub
adc
push
idiv
and
lgs
jl
neg
cld
lock
je
lret
bound
add
xor
sbb
icebp
fmulp
dec
or
add
pop
fildll
jae
adc
dec
lahf
push
test
push
jne
xor
xor
and
push
or
aad
inc
cmp
jbe
pop
inc
xor
aas
orb
pop
cli
hlt
adc
and
aam
shlb
or
push
or
jp
jns
lret
xchg
and
sbb
inc
cmp
paddusb
xchg
inc
mov
in
lcall
popa
jne
inc
mov
popa
inc
cmp
je
jne
dec
call
sahf
aam
xchg
shrl
add
add
ss
fs
and
sub
cmpsb
testb
inc
jns
cmp
je
cld
xchg
and
jne
pop
sbb
inc
jmp
xor
push
clc
or
enter
ret
test
adc
jo
loope
push
orb
mov
mov
mov
sar
prefetchw
es
mov
je
std
mov
jl
out
push
cmp
ja
add
cmp
pop
sar
out
ret
cmp
jne
shll
leave
hlt
adc
mov
or
and
pop
pop
je
and
cmp
xor
mov
iret
and
jb
lret
pop
sbb
push
and
push
mov
addb
lods
int
aam
sti
aas
scas
mov
sub
push
movb
jmp
or
aam
movsb
dec
push
cmp
jbe
cmp
stos
or
or
cmp
ret
push
movw
jb
mov
sub
pop
xchg
push
js
push
into
cmpsb
mov
and
push
adc
jp
movb
mov
cld
xor
mov
mov
stc
inc
jb
enter
mov
push
and
sbb
push
xor
push
add
push
add
cmp
mov
jmp
adc
shr
shr
pop
insb
or
rorb
or
adc
mov
lcall
movswl
pop
neg
stos
mov
push
ljmp
cwtl
pop
fsubrp
arpl
xor
pop
lock
xorl
push
imul
rorl
int
and
cwtl
or
pop
dec
mov
push
add
inc
js
jb
jl
sbb
push
dec
jle
repnz
lcall
mov
mov
pop
loopne
or
and
lea
inc
xor
nop
push
cmpsl
add
into
repnz
mov
sahf
add
loop
adc
ja
lods
or
enter
or
inc
call
loop
ljmp
push
cmp
das
jbe
mov
lea
rolb
add
jle
mov
pop
jp
les
dec
or
and
shrl
xchg
dec
push
xor
cmp
nop
sbb
mov
cmp
lods
rol
mov
movsb
sub
lret
sbb
data16
xchg
mov
and
in
inc
cmpsb
imul
and
shlb
repz
push
popl
cmp
mov
shll
mov
add
shr
or
sub
and
and
rorb
sbb
negl
push
lret
movl
mov
and
insl
adc
mov
jle
int3
shrl
loope
shll
or
mov
dec
mov
xor
insb
jge
sar
lock
dec
and
sti
stc
repnz
in
add
cli
divb
add
cmc
mov
add
fadds
loopne
testb
mov
adc
mov
pop
fisubrl
cwtl
fimull
xlat
pushl
and
pop
push
fidivl
fldenv
enter
ret
pusha
and
xchg
cmpsb
mov
enter
xor
xor
mov
sbb
sbb
add
es
inc
repnz
pushw
cmp
loop
out
jge
xchg
pop
xchg
enter
subb
ret
fwait
dec
movsl
and
daa
adc
cmp
push
push
or
mov
inc
shlb
fdivrs
aam
xchg
pop
xchg
add
jbe
dec
sub
sbb
sbb
shrb
dec
inc
add
es
adc
or
push
hlt
push
add
lret
fiaddl
insb
xchg
lret
mov
or
sub
insl
test
cli
add
sub
jg
add
xchg
into
repz
add
add
adc
push
into
or
adc
nop
xchg
mov
enter
jge
or
jge
dec
add
mov
push
and
jge
jb
or
aas
add
jne
out
sub
or
push
mov
nop
sbb
lret
xchg
ljmp
xor
xchg
insb
sbb
psubq
shl
inc
add
inc
mov
mov
or
adc
pop
outsb
call
imul
sub
and
or
pop
adc
add
rcrb
cli
pop
and
rcrl
push
cli
fcoms
xor
fiadds
mov
imul
jmp
scas
mov
imul
call
mov
sbb
push
and
mov
push
in
rcr
push
fisubs
addl
popf
add
or
inc
les
enter
hlt
into
or
mov
dec
mov
ds
lods
stos
mov
dec
enter
sahf
mov
notb
jae
add
sub
test
jge
addl
add
add
cmpb
into
or
mov
inc
ljmp
jmp
add
dec
ret
cmpsl
mov
cmp
jge
sub
cmpb
or
add
dec
ja
fiaddl
aam
inc
dec
add
add
fadds
add
adc
rorl
mov
icebp
out
jmp
add
or
or
pop
adc
test
inc
test
jbe
subb
and
add
push
add
inc
mov
mov
or
or
dec
push
imul
ret
lcall
add
push
mov
mull
or
push
push
mov
push
push
or
pop
adc
or
repz
add
pop
jne
xchg
cltd
aam
or
push
pop
scas
in
inc
xor
je,pt
push
ret
sbb
adc
mov
je
mov
rcrb
xchg
adc
and
jae
jo
jbe
test
lret
movsb
repnz
and
cmp
xor
into
pusha
pusha
popa
pusha
fs
and
int3
push
cmpsb
sub
and
pop
pop
orb
cmpps
prefetchwt1
mov
inc
ret
or
adc
push
loopne
add
sub
rolb
cmp
or
or
adc
and
pop
jo
fsubl
fisubl
test
mov
je
aaa
jecxz
or
pop
or
inc
call
insl
add
mov
adc
jne
and
and
jl
add
test
pop
loop
jge
out
and
push
push
lock
or
scas
sbb
push
popa
fcoms
add
nop
clc
mov
test
push
andl
or
push
scas
or
adc
orl
mov
test
xchg
ss
add
xchg
rcrb
mov
loopne
addb
adc
inc
sub
xchg
lock
imul
adc
or
movsb
sbb
adc
xchg
jb
into
mov
mov
sahf
pop
out
sbb
push
inc
jg
into
jnp
dec
dec
into
into
mov
out
fsubrp
sub
pop
sub
push
pop
nop
ss
out
icebp
pop
sahf
pop
mov
aam
push
shlb
imul
sbb
stos
sub
or
push
fs
adc
lcall
test
out
adc
loope
jo
add
movsb
es
jno
and
negb
test
mov
and
jo
jo
cltd
and
xor
scas
sbb
sub
addl
mov
mov
lret
es
lret
rcrl
push
xor
rcl
pop
mov
clc
aaa
lods
adc
adc
fabs
dec
pop
add
or
sub
cmpsl
cmc
pop
enter
xchg
add
scas
inc
sbb
inc
lock
mov
fcomps
shrl
popa
in
hlt
pop
cmpsb
mov
add
mov
pop
cltd
cmp
mov
enter
cmp
jo,pn
daa
sbb
div
jle
xor
adc
sbb
adcb
popf
and
je
dec
sub
dec
loop
jb
into
cmp
je
mov
pop
sub
hlt
mov
cmp
jb
push
test
add
lret
dec
sub
jmp
inc
push
stc
push
push
xchg
cwtl
sub
aam
insb
or
imul
lahf
gs
out
push
or
aam
mov
inc
ret
movsl
test
rol
jle
fwait
repz
nop
mov
movl
adc
dec
cs
faddl
and
push
aam
loopne
cmp
add
test
mov
aad
xor
mov
subl
pop
and
out
shl
js
int
aam
in
fmul
or
add
push
sub
and
imul
pushf
pop
sbb
nop
push
repnz
pushf
cmpsb
cmp
xor
lcall
mov
ljmp
inc
js
inc
cs
push
inc
push
aaa
sbb
add
mov
mov
lea
mov
shl
pop
cmp
add
mov
fldcw
add
xchg
inc
std
aam
pop
jmp
mov
mov
mov
pop
push
cmp
mov
bound
dec
sub
adc
aaa
lds
sub
lahf
xor
aaa
ljmp
lods
xchg
push
pop
mov
and
add
call
xor
push
ret
les
mov
inc
sub
xor
insb
cmp
pop
sbb
add
mov
mov
xor
mov
and
sbb
lds
dec
in
sbb
push
repz
clc
cli
jle
mov
jg
test
sbb
cmp
enter
mov
cmp
push
pop
adc
push
mov
flds
lods
outsb
or
push
lcall
mov
loop
enter
jle
add
xor
add
lock
dec
mov
sub
dec
mov
jecxz
cmpsb
loopne
jmp
dec
mov
add
fs
lock
fnstcw
jae
ja
jno
pop
loop
or
inc
call
out
xchg
cmp
dec
sbb
inc
insl
enter
push
sub
pushf
iret
cmpsl
cmpsb
mov
push
cmp
push
mov
sub
add
mov
dec
test
lods
dec
and
xor
loopne
sbb
cmc
sbb
je
subl
scas
sbb
rol
pop
sbb
out
icebp
popa
push
mov
pop
cmp
clc
inc
aam
jbe
adcl
aad
pop
gs
mov
movsl
int3
or
dec
and
pusha
rorb
inc
fs
inc
inc
cld
and
push
andl
js
add
xchg
jmp
push
or
mov
fcomps
aad
test
xchg
loope
adc
incb
jge
pop
js
inc
or
das
or
dec
pop
xor
test
sbb
and
sahf
or
xor
dec
add
frstor
push
push
push
mov
cmp
jl
mov
mov
mov
clc
outsb
leave
push
pusha
push
add
popa
push
rorb
movsb
test
push
inc
out
sbbb
cmp
xchg
inc
inc
mov
sub
loopne
mov
add
imul
loope
adc
pop
insb
push
sar
xor
sbb
pop
pop
push
and
rolb
push
lods
inc
cwtl
pop
sub
addb
rol
mov
push
sarl
setb
adc
sbb
mov
cmpsb
inc
fadd
dec
sahf
xor
in
add
push
pushf
mov
cmp
add
es
mov
mov
xor
adc
gs
mov
pushf
ret
adc
js
mov
push
add
dec
or
jmp
pop
fsubs
adc
xchg
mov
xchg
add
and
insl
cld
mov
loopne
sub
pop
xchg
loopne
and
movb
jo
dec
inc
in
push
xchg
inc
xchg
adc
es
sbb
fadd
les
add
in
test
cmp
iret
pusha
rcl
dec
scas
cld
adc
adc
daa
dec
cwtl
mov
add
shlb
xchg
or
push
mov
adc
into
inc
and
sub
mov
adc
adc
mov
push
mov
sbb
fs
sbb
add
jl
scas
cmp
xchg
push
rcll
std
cs
mov
sbb
xchg
xchg
repnz
cmpsb
sub
rolb
push
dec
call
add
cltd
push
outsb
insl
clc
pop
xor
jo
popf
iret
push
xchg
push
nop
aad
shrb
jp
incl
ds
inc
push
aam
or
fmuls
pop
sub
dec
inc
insl
imul
xchg
or
push
and
or
shll
cmc
popa
std
data16
movl
add
push
popa
stc
sbb
sbb
adc
add
xchg
gs
mov
or
push
xchg
insl
xchg
int3
cmp
sbb
movsl
ret
jo
arpl
imul
xor
mov
les
mov
jmp
jb
or
dec
xlat
outsl
and
pop
cmp
adc
cs
jge
cmp
push
mov
aas
or
movsl
jge
jl
aas
jp
inc
mov
sbb
cmp
ja
insl
pop
xor
sbb
xlat
lret
test
mov
popl
pop
mov
or
rcl
jp
repnz
dec
subb
mov
adc
lock
jge
pop
lcall
sub
mov
mov
cmp
push
pop
sub
imul
jecxz
add
loopne
mov
fadds
push
scas
mov
in
repz
dec
mov
icebp
popa
shr
pop
add
and
adc
repnz
in
or
inc
mov
or
and
dec
jb
loopne
sahf
orb
dec
adc
mov
sbb
mov
negb
push
test
fs
jae
mov
test
or
and
sub
fcoml
inc
loopne
pop
cmp
cmp
sti
jns
mov
cltd
adcl
decl
mov
std
xor
add
jg
dec
push
aad
test
addb
imul
inc
test
jl
cltd
jo
xor
subb
cmp
adc
jge
or
pushl
xchg
shrb
or
add
mov
mov
nop
mov
or
test
and
ret
and
inc
stos
or
xor
push
imul
mov
and
inc
sbb
push
icebp
xor
mov
std
xchg
xor
call
sub
and
dec
push
sbb
test
stos
cwtl
aam
dec
sbb
pop
jae
cmp
ret
loopne
repnz
cmpsl
mov
add
add
mov
in
mov
pop
mov
mov
lret
push
pop
mov
aas
loopne
cmp
push
loop
es
cmovns
pushf
sbb
call
xor
or
ficoml
bound
add
adc
adc
jnp
shlb
pop
jg
dec
add
inc
push
cmc
addr16
pop
jl
testb
xchg
je
into
pusha
test
or
adc
call
iret
adc
or
loopne
adcb
clc
addl
ret
inc
cmp
adc
movsb
push
loopne
dec
fs
or
scas
mov
jne
sub
aaa
fiaddl
fdivs
sbb
pop
xchg
outsl
inc
sahf
inc
mov
push
lods
cmc
jecxz
dec
inc
xchg
outsl
dec
sub
andb
sub
leave
xor
std
dec
cmpsb
pop
adc
loopne
adc
inc
or
sbb
push
sbb
decl
cmp
jg
push
dec
shlb
xor
and
dec
test
mov
push
aas
adc
jns
cmpsb
lock
and
jmp
and
inc
xor
insb
jo
fcomps
pop
mov
pop
mov
ds
add
stos
cmp
iret
inc
js
xor
pop
cmp
inc
data16
movsb
push
mov
sbb
or
sbb
ret
or
cmp
xorb
in
nop
xor
dec
mov
andb
adc
or
dec
imul
test
inc
fbld
or
xor
lods
dec
inc
addb
cmp
dec
push
stc
repnz
xlat
mov
and
mov
add
adc
es
inc
dec
adc
test
je
xor
aam
xchg
add
cmpl
popf
add
sub
jl
std
add
ss
jmp
cmp
or
cltd
mov
xchg
je
mov
cltd
neg
add
cmp
movsl
xor
arpl
add
inc
push
rcrl
dec
dec
sbb
push
ss
or
scas
add
sti
sbb
popa
sbb
repnz
sar
out
fadds
or
adc
in
jno
or
leave
aas
out
lea
jecxz
dec
je
dec
jne
push
arpl
loopne
add
fcoms
jmp
mov
cmp
add
cmp
fldl
inc
outsb
fsubl
xchg
jmp
add
xor
cli
mov
push
icebp
dec
pop
push
hlt
enter
loop
add
mov
arpl
mov
push
add
add
mov
call
scas
daa
std
sub
loope
pop
mov
loope
adc
jg
mov
adc
or
shll
lahf
in
addb
xchg
lods
push
lea
jbe
inc
hlt
push
sbbl
inc
cmpb
push
jle
or
in
jmp
or
js
cmp
jl
addb
sbb
loopne
std
lret
cmpb
sub
add
and
add
xchg
and
xchg
push
out
inc
sub
cwtl
fcmovb
mov
lret
loope
mov
mov
sbb
adc
mov
rclb
or
jl
enter
fwait
out
mov
mov
and
rcrl
push
xor
pop
out
jb
or
add
cmp
add
push
ror
rolb
xlat
add
push
sbb
test
xchg
sbb
mov
add
hlt
jne
adc
fistpl
or
push
mov
or
mov
lock
jmp
pop
fs
rcrb
mov
sbb
mov
lock
test
xor
inc
add
jp
jecxz
sbb
scas
adc
and
pop
push
or
loope
fistpll
rolb
sub
jg
add
jo
xchg
or
testl
test
imul
add
push
je
popf
negb
mov
or
hlt
adc
pop
cld
mov
mov
out
nop
lea
add
in
dec
adc
add
cmp
sbb
jge
incl
ret
fimuls
fstl
orl
jg
jmp
adc
cwtl
add
arpl
and
xchg
movsb
inc
and
cmp
call
cmp
cmpb
jb
mov
jb
or
cmpsl
push
fiadds
gs
xlat
push
aaa
pop
pushf
and
adc
jae
loope
loop
scas
or
test
pusha
pop
and
jns
add
xchg
inc
bound
xor
scas
ret
cmpsl
adc
fwait
or
jnp
es
lret
or
test
rolb
insb
and
push
pop
dec
mov
test
rcr
jns
or
pop
mov
or
cmp
je
cmp
clc
call
mov
and
cmp
jb
testb
xchg
arpl
add
testb
cmp
mov
ret
jge
pusha
daa
movsb
mov
ss
mov
in
sbbl
ljmp
jb
cmp
jbe
jecxz
mov
or
ret
shrb
shll
shr
jmp
das
test
and
inc
jne
mov
jg
inc
std
add
add
push
mov
and
dec
mov
adc
mov
pop
es
push
jmp
inc
ss
push
inc
pop
pop
nop
nop
or
mov
iret
pop
jg
xlat
mov
mov
mov
push
dec
or
pop
mov
lret
ret
or
or
imul
inc
inc
stos
fnstsw
or
push
cmp
jle
and
sbb
ja
jne
push
push
add
mov
sub
stc
add
cmp
jo
inc
mov
mov
and
inc
in
add
and
movsb
dec
xorl
and
enter
nop
test
add
push
push
sbb
push
sbb
add
xlat
mov
fdivs
xor
adc
and
pop
je
pop
and
outsl
lock
fxch
fisttps
or
jbe
insb
or
jge
cmp
jmp
es
mov
mov
xor
sahf
fcmovnbe
add
int3
mov
ss
cmp
fcomp
push
les
cwtl
adc
ret
dec
loopne
mov
sbb
pushf
pop
inc
lahf
pop
bound
aad
in
cmp
push
pusha
aaa
mov
sub
or
add
sub
cmpsl
xchg
pop
push
or
in
sarl
outsb
mov
mov
mov
aas
or
mov
push
ret
jg
aam
popa
jge
pop
xor
pop
pop
xchg
or
sbb
mov
xor
insl
lock
add
and
frstpm(287
les
sub
cmp
add
xor
aad
or
add
cmp
nop
or
inc
sbb
fucomp
add
cmp
dec
xchg
xchg
jbe
rcr
call
or
or
in
fdivrs
add
mov
inc
fs
sbb
fmul
inc
nop
inc
ficompl
pop
lds
add
jmp
inc
in
dec
leave
cld
rcr
add
cld
rcll
xlat
inc
mov
shl
pop
pop
cs
in
xchg
mov
fistps
mov
mov
sbb
pop
shl
dec
mov
sar
and
adc
pop
movsb
pop
cltd
add
inc
in
fadd
out
pop
pusha
fmuls
push
sbbl
fdivs
bound
ljmp
addl
xchg
xchg
subb
and
adc
add
ficoml
enter
add
lea
xchg
mov
ficompl
dec
ret
repnz
dec
mov
adc
jl
shll
in
inc
adc
xchg
pop
mov
or
and
popa
adc
pop
cs
cs
or
nop
scas
sbb
push
shrl
or
pop
cmp
add
sbb
or
ss
ret
mov
dec
cmc
addl
in
sbb
loopne
cld
mov
imul
push
js
fcoml
push
add
and
mov
cs
daa
enter
in
fmul
pusha
bound
imul
rcr
les
push
shlb
fs
test
add
shl
fstl
or
pop
pop
adc
xor
loopne
push
cmc
jo
pop
aas
sbb
cmp
pusha
cltd
in
xchg
fsts
pusha
fs
dec
es
es
je
jl
in
dec
pusha
add
cmp
call
test
ficoms
aas
jge
sbb
sar
jle
nop
adc
mov
enter
mov
and
mov
mov
or
shlb
bound
stc
xor
imul
sbb
mov
mov
cmp
pop
ss
das
inc
jne
dec
and
push
outsl
or
sbb
dec
popa
adc
dec
jecxz
lods
ret
js
jne
popf
add
out
repnz
cmp
fnstsw
and
inc
cmp
dec
xor
rorl
adc
loopne
cmp
add
or
or
xchg
jnp
in
xchg
add
mov
cmpl
jns
adc
loope
fs
xchg
or
fdivrs
push
das
ret
push
movsb
sub
lock
push
lds
loop
xchg
cmpsl
mulb
popf
sub
pop
or
test
pusha
loop
popa
nop
mov
or
pop
mov
ret
loopne
dec
push
rcl
int
loop
popa
mov
push
jne
dec
or
add
and
ret
pop
call
rclb
and
loopne
fs
leave
xor
lea
pop
cmp
pop
jne
in
mov
rolb
cltd
enter
imul
in
shl
repnz
out
sub
imulb
and
in
ficoml
or
pop
je
xor
int3
add
clc
inc
push
fwait
pusha
aas
call
or
mov
loopne
or
les
ret
mov
push
cmp
dec
sarl
leave
lock
add
sbb
sbb
or
add
sub
lods
out
scas
pop
or
loopne
cmp
add
ret
cmpsl
adc
cmpsl
shll
repz
mov
call
and
das
sbb
insb
xor
inc
lcall
js
sbb
pop
xchg
jl
mov
inc
jle
mov
lret
and
loope
ja
and
push
jbe
mov
jns
sti
inc
jno
loopne
or
dec
mov
aam
addr16
addb
mov
sahf
mov
pop
add
ror
mov
mov
mov
jnp
mov
jb
ljmp
repnz
mov
add
inc
lcall
mov
inc
lock
icebp
pop
adcl
and
adcb
iret
loopne
mov
inc
xor
sub
aam
flds
loope
in
popa
push
lds
in
and
stc
jo
add
adc
push
push
movsl
sbb
and
lods
mov
je
mov
ret
test
mov
xchg
jmp
cmp
hlt
nop
in
loopne
fcoml
sub
popa
dec
adc
sbb
cmp
scas
cmp
stc
loopne
mov
sub
sbb
jbe
and
xlat
clc
test
add
add
and
pushf
xchg
decb
add
jb
push
in
in
jecxz
sub
and
sbb
jo
or
arpl
sbb
xchg
or
xchg
in
sbb
movsb
sti
sbb
or
insb
xchg
pop
inc
lds
test
add
mov
out
and
adc
cmp
xlat
pop
out
mov
mov
inc
inc
xchg
in
xchg
cli
dec
jmp
test
cmp
push
lcall
xchg
and
fisubs
xchg
lock
cmpsb
fildl
repnz
cmp
cmp
xchg
inc
or
or
xchg
dec
push
or
or
push
icebp
inc
adc
inc
enter
dec
mov
lcall
sub
enter
push
pop
mov
mov
push
movsb
icebp
pop
or
xchg
sbb
orb
mov
call
xlat
adc
repz
adc
inc
push
mov
aam
dec
dec
addr16
jnp
sub
arpl
imul
les
loopne
sub
xchg
push
mov
adc
lods
sbb
sbb
fadds
out
jns
add
xchg
fdivl
mov
add
mov
mov
test
sub
orb
cmp
test
pop
and
sti
or
sbb
insb
and
xor
adc
add
inc
xchg
xchg
loopne
mov
sub
jne
aad
outsl
gs
inc
adc
cwtl
addl
call
in
mov
push
and
xchg
dec
enter
add
ret
adc
or
insl
fadds
ret
fmuls
or
sbb
push
xlat
test
testb
call
test
in
xor
insb
xchg
mov
fs
sub
sub
test
test
mov
sub
test
push
dec
imull
inc
mov
ficompl
nop
xlat
ja
dec
pop
fcmovbe
or
enter
in
add
pavgb
andb
and
lahf
mov
popl
stos
scas
cmpsb
mov
sbb
sbb
adc
int
inc
mov
inc
es
jo
inc
inc
aas
cmc
or
add
test
cmp
test
enter
adc
sbb
fldt
daa
sbb
lds
stc
cli
inc
adc
push
out
fsubs
nop
popa
jne
jge
sub
movsl
lods
loop
jge
call
xchg
mov
push
insl
jmp
sar
add
in
cli
mov
inc
fmul
popa
push
push
hlt
sbb
push
mov
and
test
movsl
aaa
inc
mov
ret
popf
inc
mov
pop
sbb
inc
call
ret
lock
orb
jne
fwait
icebp
adc
sbb
enter
inc
mov
enter
and
dec
jb
mov
mov
jmp
cld
cld
xor
sub
mov
sarb
mov
sbb
dec
add
sbb
xor
inc
sbb
ret
cmp
add
dec
adc
pusha
std
stc
enter
cwtl
stc
mov
sub
stc
sub
or
les
in
pop
fwait
scas
dec
adc
inc
sbb
jp
movsl
push
imul
pop
int3
iret
call
pop
shrl
les
enter
les
xchg
in
test
movsb
dec
or
inc
int3
insl
stos
mov
pop
aam
subb
enter
mov
mov
movsl
mov
push
mov
je
in
shrb
add
pop
inc
enter
mov
inc
outsb
aam
or
inc
popf
mov
mov
aam
add
insb
iret
loop
paddusb
xlat
enter
inc
fs
in
jge
pop
xlat
jl
loope
adc
fcoml
dec
lea
push
xor
fcomp
loopne
leave
add
aam
aam
jb
cwtl
adc
fcom
mov
add
sbb
rorl
stos
ret
dec
test
xor
or
adc
sub
leave
clc
orb
pop
fidivl
scas
gs
adc
imul
ljmp
cmp
mov
add
jp
loop
add
testb
mov
xchg
adc
cmc
pop
leave
sbb
adc
les
mov
xchg
pop
nop
dec
es
pushf
mov
test
inc
add
inc
in
xchg
cltd
fwait
adc
ret
cli
mov
icebp
insb
sub
add
inc
les
dec
test
mov
ss
cmp
xchg
pop
lcall
insl
mov
push
jge
int
imul
mov
hlt
and
nop
sub
aaa
test
sti
enter
pushf
pop
dec
add
add
loope
in
pusha
ret
fadds
data16
and
push
push
and
imul
call
sub
aam
imul
mov
jmp
les
adc
imul
mov
jmp
dec
add
dec
int
dec
popa
cmp
test
jmp
sbb
pop
inc
or
adc
imul
pop
xchg
mov
clc
adc
pop
addl
mov
dec
test
jp
daa
add
jmp
nop
pop
dec
shll
xor
cwtl
pop
cmp
pop
ljmp
jmp
or
cmp
inc
dec
mov
inc
shl
nop
mov
cli
notb
sub
xchg
and
and
adc
cmp
leave
or
inc
add
in
mov
xor
pop
sub
dec
xlat
mov
xchg
cmp
in
dec
in
les
or
and
cmp
or
jno
pop
and
ret
cs
lock
push
mov
or
push
aad
bound
leave
aam
call
adc
mov
pusha
nop
pop
adc
std
enter
mov
and
jb
or
aad
js
arpl
pop
inc
or
sbb
inc
jo
and
xchg
jno
adc
mov
dec
xor
dec
xchg
std
lock
adc
cmp
scas
push
xor
das
call
xchg
call
push
or
cmpsl
mov
add
sbbb
jl
jno
sbb
xor
push
sbb
push
xchg
call
invd
daa
int3
imul
int3
adc
jmp
lods
in
int3
scas
lods
movsb
test
aam
ret
or
sub
lds
and
stc
jecxz
or
mov
lock
cmpsb
fs
mov
inc
jb
adc
adc
inc
je
adc
shl
push
add
int
or
int
or
call
push
add
or
enter
cmpsb
outsb
stos
xchg
lret
cmp
pushf
sbb
inc
int
arpl
add
shrb
loope
push
inc
push
pop
pusha
enter
mov
stos
pop
int3
fsubrl
rclb
dec
adc
in
in
mov
push
mov
add
aam
add
mov
inc
inc
mov
sub
jbe
cmp
adc
gs
xchg
int3
test
in
sbb
push
jno
and
lock
add
in
sbb
inc
jge
mov
or
pop
xor
xchg
xchg
or
xor
xor
xchg
add
and
adc
sub
pop
inc
xor
lods
push
mov
cmp
popa
or
dec
sub
test
dec
dec
sub
pop
insl
adc
insb
xor
adcb
jnp
test
test
add
lds
push
sbb
test
insl
and
aas
inc
mov
xchg
std
inc
or
jbe
jne
and
in
sub
pop
gs
pop
push
sub
test
cs
cltd
bound
or
add
mov
jno
in
in
mov
lods
and
dec
jae
test
sarb
cwtl
or
xor
rolb
test
sub
cmp
sub
or
sbb
sbbb
jo
icebp
pushf
mov
and
mov
dec
mov
and
jl
xchg
enter
mov
sbbb
sarb
jge
out
or
sbb
js
test
adc
inc
jl
xor
and
xchg
xchg
addr16
imul
flds
or
in
xchg
inc
sbb
pushf
or
fldcw
les
mov
add
xchg
or
jo
call
fwait
or
decb
stc
xchg
or
push
ret
xor
std
dec
fwait
and
enter
and
sub
and
jns
or
push
loopne
and
inc
or
leave
mov
data16
xor
shr
aam
xchg
inc
push
cltd
jmp
and
add
dec
and
lock
enter
mov
push
dec
lods
test
lret
test
out
sub
xchg
adc
push
jl
idivl
imul
aam
pop
test
in
imul
je
sub
push
push
or
fldt
push
sti
fsubs
js
jne
xor
movsl
xchg
push
xor
adc
xchg
inc
adc
or
pop
xor
jmp
pop
popf
in
push
nopl
test
and
mov
dec
adc
nop
pop
clc
pop
dec
movsl
mov
clc
xchg
ret
sbb
pop
cwtl
mov
push
aad
gs
and
jp
idivl
and
push
push
out
insb
adc
fs
push
insl
ret
push
jmp
cmpsb
sbb
adc
xchg
push
fs
dec
sbb
and
es
cmp
or
cltd
sub
xor
push
movsl
add
fdivr
push
nop
dec
mov
and
roll
fmul
lods
or
mov
cmp
xchg
fsub
inc
enter
mov
add
das
and
dec
and
and
or
rcr
stc
aam
or
mov
mov
or
adc
and
or
fcoms
jb
mov
cmpsb
enter
ret
shlb
shr
push
in
or
inc
adc
test
add
sbb
inc
es
fs
lods
test
inc
inc
xchg
test
jne
mov
mov
adc
mov
movsb
adc
push
movsb
sbb
or
dec
data16
jno
sub
inc
int3
mov
pop
fidivl
daa
int3
rorb
mov
mov
daa
adc
pop
dec
daa
fwait
and
push
sbb
adc
sbb
dec
push
inc
call
dec
rcrb
and
rclb
test
jb
lds
mov
inc
arpl
mov
push
adc
fdivl
or
jne
cmpsl
movsl
insb
dec
cmp
sbb
jl
imul
or
push
rcrb
loop
add
xchg
push
sub
pop
mov
adc
sub
mov
test
insb
movsl
aam
jne
mov
or
sub
add
xchg
adcb
dec
cwtl
and
fisttpll
inc
push
movsl
push
inc
popa
pop
mov
movsb
fwait
lods
movsb
pop
shlb
ljmp
mov
xor
xor
add
aam
ljmp
test
fwait
push
fildll
dec
test
fcoms
xchg
inc
cwtl
shrl
and
enter
push
add
shll
inc
mov
adc
std
jbe
sub
jns
dec
xor
leave
add
sub
enter
pop
adc
xorb
dec
test
cs
inc
push
inc
pop
ret
lods
outsl
bound
add
jne
pop
mov
test
ds
pushf
das
inc
insl
push
dec
cmpsb
pop
cwtl
mov
adc
and
or
jae
mov
xor
movsb
pop
and
sbb
jne
in
push
adc
inc
insl
jmp
mov
xor
adc
sti
dec
adc
aam
push
xor
fstpl
xchg
xlat
sti
mov
lods
add
and
jg
or
jns
mov
push
je
push
xor
test
mov
pop
xor
out
or
and
lock
push
andl
fldl
in
imul
in
sbbb
dec
loopne
fsubr
mov
fsts
fildll
mov
dec
lods
sbb
or
and
les
pushf
out
cwtl
xor
repnz
pop
int3
cmpsl
sub
aam
sub
sub
push
icebp
and
dec
lods
xchg
lock
xor
in
mov
mov
ret
fucomp
bound
push
pop
adc
xchg
or
mov
aam
mov
mov
sub
pop
or
das
mov
roll
je
lods
cmp
in
test
xchg
lods
mov
xchg
mov
rcr
nop
icebp
adc
cwtl
cmp
js
push
test
xorb
mov
inc
out
mov
in
and
test
and
in
cwtl
pop
nop
pushf
pushf
pushf
fmull
int3
les
lods
movsb
pushf
xchg
in
xor
je
in
xchg
test
pop
aam
pop
and
das
and
mov
mov
pushf
pushf
push
les
mov
cmp
ja
fisttps
movzbl
mov
jb
pop
xorb
sbb
out
mov
rcrb
test
imul
dec
mov
pop
dec
dec
sub
jecxz
test
mov
adc
lods
leave
adc
in
sbb
dec
pop
dec
push
enter
push
sub
loope
mov
jmp
or
popf
pop
sub
cmp
sub
or
jge
and
mov
jne
loope
jne
mov
and
jecxz
cmp
xchg
sub
jbe
dec
sbb
inc
dec
ret
es
lock
sub
sbb
sbb
nop
sbb
sbb
mov
shlb
ja
xchg
mov
mov
test
cwtl
mov
ret
lods
movsb
inc
cmp
je
xor
adc
sbb
mov
inc
mov
cmc
addl
jmp
sahf
xchg
mov
fldt
rcrb
sub
dec
cmp
and
and
mov
sub
lea
dec
dec
push
ss
sbb
pop
dec
and
out
mov
adc
or
mov
rcrb
rcl
mov
push
cltd
sub
repz
sub
jns
jbe
push
inc
cltd
push
sub
inc
nop
pop
xor
or
lods
and
ds
mov
xchg
ja
sbb
test
roll
btc
sbb
push
int3
or
enter
sbb
cmp
or
xchg
sub
popa
adc
pop
dec
cmp
jno
aad
iret
int3
decl
loopne
pop
addb
pop
mov
cltd
ss
movl
shrb
or
pusha
add
or
subb
pushf
adc
and
jmp
sub
cltd
mov
xchg
adc
int3
das
mov
sub
cmpsb
dec
xchg
adc
sbb
jecxz
adc
push
add
pop
popf
inc
dec
ret
cwtl
ror
fs
inc
or
mov
movsb
sbb
aaa
test
movsb
enter
xchg
lods
xchg
pop
and
sub
movsb
mov
pop
mov
out
add
mov
popa
sub
or
test
xchg
adc
sti
arpl
orb
inc
lods
adc
adc
xor
mov
sub
ficoml
movsl
dec
mov
pop
xchg
imul
jl
push
fs
pushf
mov
pop
xor
nop
movsb
repnz
cmp
in
fs
lods
aas
or
push
or
xchg
mov
std
jnp
imul
ror
add
fdivrs
adc
andb
jno
dec
or
mov
inc
or
lret
lock
leave
push
lods
insl
hlt
or
pop
cmp
mov
xor
repnz
es
push
and
fcmovu
aad
adc
cmp
lds
repz
insl
imul
leave
push
or
and
add
and
pop
movsb
bound
lds
push
add
sbb
cltd
scas
ss
xlat
cltd
add
icebp
jns
pop
adc
clc
xor
repz
aaa
or
cmpsb
push
call
mov
test
bound
xor
adc
enter
loopne
lds
fcoms
or
leave
adc
add
mov
test
enter
pop
fsubs
sete
out
call
dec
cmp
sub
mov
int3
ds
mov
mov
popf
pop
or
mov
mov
mov
inc
mov
faddl
outsl
ret
test
sbb
out
idivl
aad
dec
add
sbb
rorl
add
cmpsb
pusha
fcmove
sub
jae
out
pop
inc
negb
xchg
push
mov
scas
outsb
imul
xor
sbb
dec
sbb
roll
or
xor
inc
adc
mov
test
fsubrs
cmp
mov
mov
sbbl
sub
rclb
testl
insb
movsl
divl
enter
push
loope
dec
xor
insl
adc
test
orb
fwait
mov
mov
lcall
xchg
test
faddl
fildll
mov
test
or
mov
rcrl
lods
negl
and
mov
pop
sbb
rorb
adc
mov
ret
xchg
sub
ficoml
xchg
aam
adc
fildl
lods
enter
aam
or
fdivrl
mov
push
and
dec
clc
sub
xor
sub
inc
or
inc
fstpt
in
push
imul
mov
pop
test
add
nop
cmp
xor
xor
aad
aas
aaa
ret
xor
std
xorl
add
pop
subb
or
dec
cmp
xchg
stc
xor
pop
pusha
pop
popf
push
insl
mov
call
cmp
inc
xlat
imul
push
aaa
or
sbb
repnz
cli
inc
adc
mov
test
and
push
stos
adc
mov
xchg
scas
test
cwtl
pop
inc
sbb
xlat
cmp
push
sbb
ret
add
cmp
xor
xor
add
mov
enter
test
mov
aad
roll
movb
imul
js
add
or
xor
mov
nop
cmp
fs
mov
pushf
or
jno
adc
imul
movsb
fs
sbb
rorb
mov
imul
and
and
clc
loopne
mov
push
mov
int
mov
imul
bound
or
sbb
nop
xchg
mov
mov
and
fiaddl
pushf
adc
mov
jo
movsl
sbb
fs
inc
add
push
shrb
in
ret
pop
insl
cmp
test
cmpsl
mov
push
xchg
dec
insl
test
push
dec
flds
push
pop
xor
cltd
jbe
mov
mov
xor
dec
mov
add
inc
cmpsl
int3
push
test
sbb
jns
jbe
iret
or
bound
inc
adc
add
mov
or
adc
xchg
pop
inc
or
imul
or
add
inc
sub
push
push
ret
stc
insl
mov
pop
cltd
mov
ret
sbb
fs
and
imul
sarb
cmp
iret
fsts
cwtl
fsub
mov
leave
and
jg
jb
mov
fisubrs
sub
xor
movl
fdivr
adc
add
clc
xor
das
scas
xchg
add
adc
push
imul
or
pop
addr16
nop
mov
lods
jmp
sbb
sbb
push
and
lock
fs
outsl
add
or
mov
sti
ret
bound
push
imul
or
rcrb
enter
enter
mov
sbb
xchg
imulb
sbb
push
popa
dec
inc
adc
mov
ret
imulb
clc
adc
xor
xchg
loope
xorl
or
sub
adc
jnp
stc
pop
adc
pop
mov
aaa
aaa
fbld
mov
test
mov
inc
add
iret
shr
add
push
aam
repz
pop
push
jns
repz
cld
pop
outsb
xor
lods
aaa
in
add
sub
sti
imul
mov
mov
fstpl
dec
das
push
or
jg
jbe
add
inc
orb
jnp
mov
add
pushl
or
adc
mov
rcll
xchg
adc
or
cmp
rclb
cmpl
jns
mov
test
add
nop
add
into
pop
adc
test
and
push
imul
stos
ret
pop
int
lahf
out
adc
and
clc
popl
in
mov
add
lock
rdpmc
add
psubusb
pop
sub
insl
mov
mov
xor
popa
and
insb
outsl
arpl
imul
cmp
test
sub
out
pushl
imul
jb
outsb
je
add
das
add
push
insl
adc
xchg
add
insl
push
test
push
inc
outsl
std
in
fdivrp
jb
js
je
jb
gs
add
or
outsl
add
gs
jnp
add
add
add
jne
les
inc
out
xlat
scas
and
and
and
add
cmp
add
add
or
es
add
inc
xor
fisubrs
add
aas
push
add
fidivl
push
pop
dec
add
sub
jnp
in
add
xchg
je
je
and
xor
das
dec
fisttpl
fs
fcomip
daa
cmpsw
insl
push
push
or
mov
jns
push
jne
popf
pop
in
sahf
imul
divb
xor
insb
jp
out
fisttpl
out
outsl
or
mov
outsb
dec
fldt
gs
bound
and
outsl
jmp
jo
mov
out
xor
stos
insl
sub
pusha
nop
loopne
push
imul
idivl
jb
jne
inc
push
data16
xchg
out
sbb
insb
jp
sub
mov
lcall
ret
or
lahf
popa
push
jno
pop
pop
outsb
inc
arpl
loopne
fildl
jae
daa
dec
jbe
mov
xor
ret
jge
outsb
bound
jnp
sbb
fimuls
arpl
mov
xor
bound
lds
filds
push
das
or
jbe
xor
fidivrl
sub
adc
cs
js
shll
ret
bound
test
gs
popa
rorl
push
outsl
xchg
mov
aaa
jg
add
fbstp
fisttps
jne
xor
xchg
jb
jne
pop
rorl
inc
jnp
and
bnd
mov
sbb
sub
cmp
cmpsb
ljmp
outsl
pusha
or
iret
arpl
sbb
push
mov
xlat
cs
subl
je
lret
imul
arpl
mov
imul
shll
jnp
mov
stos
rdtsc
cmpsl
outsl
add
cld
pop
sub
loope
bound
mov
stos
jnp
mov
pop
insl
lret
je
scas
loope
test
mov
fcomp
mov
push
pop
scas
popw
pop
inc
cmp
push
sub
push
addb
mov
int3
addr16
add
out
sbb
push
inc
or
and
repz
inc
inc
orb
sub
out
shlb
adc
adc
push
iret
repz
sbb
clc
sahf
out
lcall
cmp
push
pop
xor
lahf
jmp
lahf
and
out
push
jns
xchg
jo
jnp
iret
push
cld
loop
jns
adc
push
pusha
dec
aaa
lods
lock
add
mov
jp
fldl
add
push
cmp
sbb
lret
pop
mov
lock
imul
mov
ds
mov
rcrl
sbb
cmp
cmpsl
push
fwait
cmp
dec
negb
sbb
xor
jnp
sub
add
and
and
das
das
das
and
pop
mov
mov
dec
inc
and
test
push
push
decb
aad
or
jmp
je
dec
test
pop
aas
dec
inc
mov
daa
mov
imul
mov
daa
outsl
rol
or
pop
inc
adcb
sbb
pop
pop
outsb
fcmovnu
imul
iret
jns
dec
outsl
sbb
out
out
and
mov
arpl
pop
pop
jmp
pop
jp
jae
push
fdivs
sub
pop
fimull
cmp
addr16
ds
mov
insl
fcomi
mov
dec
fdivs
jg
imul
cmp
add
dec
fbld
jns
add
das
das
jns
push
sti
dec
push
inc
inc
arpl
bound
dec
outsl
jbe
mov
mov
outsl
adc
jo
sub
pop
cld
inc
jne
jne
xor
insb
xchg
outsb
xchg
hlt
mov
inc
jo
imul
out
popf
or
into
mov
cmp
jns
out
mov
addr16
popa
je
jb
xor
mov
jae
push
gs
sbb
jnp
jne
dec
outsl
outsb
and
jbe
ja
pop
dec
inc
aas
add
jecxz
popf
lret
or
or
out
mov
jae
push
and
inc
push
popa
insb
jne
inc
sub
mov
inc
mov
adc
cmp
jg
es
sub
sub
sub
cs
xor
xor
xor
ss
cmp
cmp
cmp
ds
inc
inc
inc
outsb
sar
incl
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
test
mov
rcrb
pop
pop
pop
xchg
lcall
pusha
popa
bound
gs
imul
jo
add
decl
jns
jnp
jge
jg
adc
lcall
loopne
pop
popa
fistpll
add
orb
sar
in
stc
test
icebp
pusha
inc
mov
clc
ret
movsl
add
mov
cmc
loop
je
arpl
imul
mov
outsl
das
sub
adc
push
add
jo
xor
popa
js
addl
je
pop
dec
pop
sbb
clc
sahf
pusha
gs
ret
ret
sub
iret
loopne
int3
adc
mov
sti
out
add
push
add
add
add
test
pop
and
push
pop
push
add
xor
pop
hlt
and
add
pusha
push
lcall
add
or
xor
fidivrs
addb
add
xchg
imul
ret
add
orb
dec
daa
push
cmpb
push
and
sub
mov
jnp
jb
int3
push
jo
add
jbe
pusha
mov
push
outsb
imul
outsb
and
push
xor
add
add
sub
test
mov
mov
mov
pop
sbb
in
lea
mov
nop
xchg
and
mov
add
xchg
ja
mov
sahf
or
push
leave
inc
scas
mov
je
out
add
lods
push
stos
aad
mov
mov
in
add
sbb
push
pop
scas
sub
pop
sbb
inc
push
inc
sub
ss
test
jge
js
dec
dec
inc
dec
inc
adc
mov
je
notl
fs
je
add
push
jae
dec
bound
je
mov
shrl
xor
push
jbe
dec
out
outsl
push
add
je
xor
push
xchg
daa
sti
iret
xchg
gs
lea
mov
outsl
js
aas
xchg
das
inc
push
xchg
cs
and
insl
ficoml
jo
and
and
daa
pop
and
aaa
insb
les
dec
imul
mov
mov
mov
ds
cmp
cmpsb
and
jb
jns
daa
pop
and
stos
ss
jns
mov
mov
and
arpl
je
inc
inc
imul
addr16
outsb
jle
cmpsb
sbb
jo
or
insb
lock
jne
imul
mov
push
push
lahf
adc
mov
insl
and
lods
jp
cmp
inc
and
pushw
mov
faddl
mov
cmp
pop
pusha
gs
sbb
adc
pop
and
mov
lock
push
outsb
lods
mov
or
pop
pop
pop
push
push
jae
jno
mov
or
cmp
push
shrb
fdivrl
push
subl
gs
adc
sub
cmp
xchg
inc
push
push
push
push
dec
mull
fnstenv
fs
push
mov
fisttps
dec
jge
test
add
insl
jle
lock
imul
call
or
test
jg
jae
enter
inc
in
adc
mov
das
gs
sbb
pop
xor
jg
fadd
subl
push
or
push
lea
test
mov
mov
daa
xchg
mov
in
mov
daa
popw
pop
cmp
jnp
sti
cmp
or
ds
and
sub
fst
cmp
push
addr16
jle
imul
add
add
sub
cmp
mov
sbb
das
push
jb
lea
ret
aaa
aaa
and
push
inc
hlt
in
mov
xchg
out
mov
pop
pop
jne
stos
addr16
push
jmp
push
xchg
sbb
jo
push
xor
gs
imul
ret
xor
addr16
dec
sbb
ret
sahf
inc
pop
sub
mov
cmp
push
jl
push
push
out
sub
incb
push
int
jns
sub
add
std
lock
repz
push
sub
inc
sahf
enter
sub
repz
mov
out
sahf
out
pushf
cwtl
xchg
nop
mov
repz
cmpb
jge
ret
push
aam
iret
repz
jo
push
push
cmp
repz
push
push
dec
dec
iret
repz
inc
inc
cmp
xor
cmp
repz
and
add
cmpsl
stc
call
mov
jns
out
dec
sub
sti
iret
repz
les
iret
repz
xor
or
cli
jns
out
in
shlb
lahf
out
or
stc
int3
test
sbb
iret
jl
xor
jg
push
add
test
push
lock
jle
mov
adc
add
add
adc
leave
and
dec
cmp
push
jb
add
addl
pop
sbb
push
jne
and
fsubs
addl
add
add
ja
push
lret
jbe
push
add
lea
or
in
and
push
pop
fbld
ss
jle
add
out
or
test
mov
xchg
xchg
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
popf
sahf
lahf
mov
movsl
cmpsb
cmpsl
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
rol
enter
int3
int
iret
rcl
rcl
aam
xlat
fcomp
fcmovu
loopne
loop
in
out
call
in
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
or
and
mov
loope
adc
lds
test
incb
loopne
lcall
gs
popa
data16
mov
shlb
jns
push
xor
add
fiaddl
lahf
js
test
push
arpl
inc
insb
fs
sbb
mov
je
xor
cmc
or
push
invlpg
jae
pcmpgtw
xor
push
inc
lcall
adc
dec
push
push
dec
and
xor
push
dec
inc
das
mov
inc
add
adc
push
jo
ljmp
adc
aaa
adc
popa
into
mov
mov
jnp
jnp
std
adc
outsb
mov
ds
pop
adc
clc
idivb
stc
lret
sbb
jb
jge
arpl
cmp
pop
dec
scas
jp
jno
in
fstl
mov
repz
in
and
cmp
dec
imul
std
dec
lret
add
inc
mov
mov
sub
ficomps
fadds
inc
sbb
pop
jns
ds
xor
incb
ljmp
int3
dec
dec
xor
dec
popf
pxor
xor
lret
aaa
push
div
inc
sub
dec
ljmp
cmp
cmp
cmpsb
das
xchg
pop
and
xchg
lret
sahf
icebp
lock
mov
cld
or
loopne
cmp
inc
mov
xchg
push
pop
xchg
sub
jg
fstps
insb
mov
out
leave
ljmp
orb
popa
pop
lock
push
or
scas
int
mov
leave
hlt
mov
ja
decl
sahf
xchg
dec
add
scas
lods
dec
lock
xor
pop
mov
pushf
fdivr
icebp
pop
pop
repnz
icebp
iret
mulb
and
es
sbb
cwtl
test
dec
inc
loopne
pop
mov
dec
or
rclb
add
jmp
fildl
sub
cmp
push
into
mov
xchg
and
lahf
cmovg
mov
out
xchg
jmp
and
test
jle
imul
xor
sti
es
jae
movsl
xchg
mov
lret
out
and
data16
scas
sub
inc
cmpsl
subl
js
sub
ret
bound
jg
subb
jne
fs
pcmpeqw
ss
sti
or
ja
popa
daa
fucomi
push
or
add
je
push
lods
push
mov
pop
mov
je
mov
dec
loopne
mov
ret
sub
fcomi
test
jb
add
ja
add
sbb
push
nop
nop
push
pop
xchg
add
xchg
imul
sbb
lret
idivl
jae
insl
jle
push
lods
cmp
cmpsl
mov
and
loope
mov
jmp
arpl
repz
mov
fbstp
out
push
sbb
inc
mov
push
mov
pop
jg
mov
xor
insb
daa
jnp
and
push
das
cmpsl
cmp
or
push
add
add
push
xor
adc
faddl
sti
sbb
jns
outsb
xlat
cs
cmp
fs
mov
cmpsl
xlat
pushf
or
mov
je
add
andl
push
pop
je
call
je,pt
lods
xchg
iret
push
push
pop
je
or
notl
add
pop
aaa
cmp
ret
stos
push
pop
jecxz
sbb
inc
pop
inc
add
adc
dec
dec
outsl
mov
aas
ret
gs
xor
dec
jp
add
outsl
ja
pop
adc
bound
adc
fwait
ja
add
insb
push
pop
inc
addr16
mov
inc
pop
addr16
je
push
fbstp
pop
aas
arpl
daa
pop
arpl
sti
push
outsb
sbb
push
jae
pop
push
pop
lods
hlt
int3
mov
mulb
push
je
pop
jmp
js
scas
inc
dec
mov
fwait
jae
mov
pop
adcl
push
xor
mov
subb
iret
push
out
inc
fadds
push
and
ficoms
xor
popa
mov
rolb
jns
inc
aas
mov
xchg
jle
push
push
xchg
adc
loop
je
jb
push
loop
pop
mov
push
arpl
mov
imul
push
adc
jae
fs
addb
sub
into
or
lods
pop
xor
dec
inc
pop
pop
ja
pop
xchg
mov
lcall
adc
adc
inc
orl
or
arpl
sub
push
sbb
xor
inc
sub
jge
xor
xchg
push
mov
iret
les
mov
lock
mov
cltd
test
add
dec
mov
clc
scas
inc
out
repz
loope
loop
notb
pop
js
rolb
mov
movl
jb
lods
push
fwait
subl
push
sub
outsb
add
add
ja
outsb
out
pop
push
lret
test
push
outsl
and
cli
mov
cmp
aaa
rcrl
insb
dec
cltd
push
cmp
pop
out
inc
inc
add
sbb
dec
mov
mov
or
lds
mov
jno
sbb
dec
pop
pop
add
imull
ja
lods
loope
push
ret
fwait
out
inc
push
inc
mov
loope
pop
je
jo
arpl
dec
insb
out
lcall
dec
add
cmpsb
jae
push
outsl
imul
inc
ss
inc
xor
sbb
inc
stos
es
pop
out
jmp
je
pop
dec
ud2
mov
mov
insb
sub
jecxz
popf
xchg
pop
scas
inc
bound
sbb
pop
pop
cmpsl
mov
ja
adc
cmpsl
xchg
inc
addl
bound
pop
outsl
push
dec
or
add
testl
inc
inc
mov
mov
mov
inc
jl
jl
pop
sbb
or
pop
jl
fldl
pop
imul
and
and
addr16
loopne
mov
cmpsl
sub
lock
push
das
mov
jnp
fs
cmp
jns
mov
mov
xor
es
out
push
or
out
or
mov
ja
jecxz
out
imul
out
lods
js
mov
mov
stos
popf
addr16
imul
mov
outsb
jo
popa
pop
arpl
jp
jl
rcr
je
imul
clc
mov
jl
jo
lea
cmp
ja
xor
push
mov
dec
lock
sarl
pop
sub
fs
js
lock
mov
imul
push
loope
aaa
es
jl
into
test
bound
lock
jl
xor
xchg
push
outsl
or
pop
pop
push
js
mov
add
push
push
outsl
push
pop
pop
or
pop
xchg
mov
fbld
adc
ret
daa
pop
ds
pop
add
push
and
icebp
daa
jae
out
add
loop
push
stos
mov
pop
pop
pop
mov
pop
fwait
xchg
push
mov
pop
pop
push
mov
jb
sarb
aaa
ret
mov
insb
arpl
push
mov
aas
adc
inc
xchg
stos
xchg
fdivs
pop
popa
ret
ret
das
lods
inc
aas
das
imul
push
sub
ljmp
add
xor
inc
add
data16
mov
push
loope
pop
dec
sbb
dec
pop
call
push
sbb
inc
add
adc
fnstenv
inc
pop
enter
pop
adc
jg
cmp
push
jmp
repz
in
dec
jl
dec
push
mov
and
ja
push
jp
and
xlat
repz
jge
push
push
push
ret
push
xor
xlat
insb
pop
mov
in
add
push
pushf
sub
xor
hlt
roll
lock
pop
into
lds
pop
mov
mov
push
rcrb
filds
sahf
imulb
jecxz
xor
lock
push
and
jne
out
push
arpl
inc
outsl
jg
iret
repz
push
imul
xchg
cmpsl
lcall
dec
inc
mov
push
testl
adc
dec
and
paddq
aad
lcall
ja
jg
jo
jns
orl
mov
cmpl
push
mov
arpl
push
mov
aaa
das
jae
mov
test
bnd
push
jae
push
push
and
popa
outsb
arpl
push
gs
insl
pusha
push
popa
jne
cmp
or
and
dec
bound
fcomi
or
xchg
sub
and
pop
lock
push
jb
push
push
jb
iret
jnp
je
xchg
push
xchg
enter
xrelease
js
out
sahf
out
aam
clc
dec
repz
cmp
xchg
mov
sahf
bound
jne
pop
inc
mov
add
pop
ds
gs
pushf
ret
je
cmp
sahf
pusha
mov
xchg
jo
jb
dec
jb
into
pop
sti
add
cmp
ss
sbb
aas
fcom
xor
and
and
jae
imul
cmp
fs
adc
add
test
push
sahf
testb
push
adc
mov
imul
dec
outsw
sub
ja
or
cmp
imul
xor
push
mov
or
adc
mov
sbb
xchg
push
xchg
sub
sub
push
inc
fdivl
in
push
daa
inc
out
dec
push
je
scas
and
mov
pcmpgtd
pop
adc
sbb
out
or
insl
or
pop
minps
add
xlat
adc
pop
rorb
jnp
cmpsl
imul
cmp
mov
or
fsubrs
adc
add
add
imul
add
jbe
mov
data16
aas
sbb
imul
add
fistpll
or
add
xlat
xchg
or
adc
jae
loop
sbb
aaa
and
and
fs
shll
mov
popa
mov
aaa
and
incb
fwait
inc
or
jae
mov
lea
sub
push
mov
xchg
sbb
dec
insl
xchg
mov
dec
fistl
add
inc
das
or
outsl
add
call
push
imul
push
pop
movsb
roll
loope
cmp
dec
pop
pop
dec
inc
dec
icebp
push
dec
sti
sub
adc
and
dec
movsb
add
popf
jp
lds
addr16
push
xchg
outsb
push
jnp
stos
or
mov
imul
subb
add
imul
rcrb
jae
and
push
daa
popa
adc
jg
dec
cmp
push
and
and
out
mov
jo
out
xchg
aad
shrb
jae
arpl
outsb
jp
ljmp
mov
fildl
jnp
xor
sbb
pop
loope
push
ret
bound
inc
arpl
nop
or
aas
adc
rclb
jb
fs
test
push
add
push
mov
and
fwait
test
xor
push
cli
mov
filds
je
fisubs
push
mov
mov
xorl
add
pop
arpl
mov
mov
lret
inc
pop
fidivs
or
je
push
xchg
dec
xchg
out
mov
mov
or
idivl
arpl
movsl
scas
pop
sti
pop
adc
sahf
jg
jnp
pop
scas
cmp
inc
aas
push
sbb
push
inc
push
mov
jne
mov
aas
sbb
add
cmp
fucomi
adc
add
push
sub
fs
push
scas
inc
or
adc
jns
sub
imul
push
je
jns
aam
imul
mov
inc
jb
pop
scas
aaa
test
pop
jne
rcrb
and
push
movsb
outsl
xchg
cmp
inc
dec
imul
push
sub
fwait
and
cmp
mov
iret
xor
mov
mov
or
sub
mov
and
cmpsl
jno
sub
cs
and
add
imul
inc
pop
or
imul
pop
in
fisttps
adc
mov
push
stos
in
mov
imul
inc
pop
add
sub
aaa
inc
cmp
loop
mov
sub
aaa
gs
mov
xor
mov
insl
aaa
xor
xchg
xchg
sub
inc
test
daa
push
lret
jae
mov
sbb
outsl
dec
pop
rol
ret
fists
out
push
out
fwait
test
jmp
inc
aaa
sbbb
ret
jo
rol
shlb
mov
xchg
jnp
push
popf
shrl
fs
xor
jb
arpl
pop
dec
inc
mov
inc
rcrb
xchg
adc
fwait
daa
push
inc
shll
jne
pop
sarl
jae
fildll
cmp
jb
xchg
inc
addb
bound
scas
pop
jbe
cs
xchg
iret
cmp
adc
push
xorl
arpl
mov
push
xchg
gs
add
repz
decl
notl
pusha
clc
mov
push
call
mov
enter
push
jle
arpl
imul
hlt
loop
shlb
push
movsb
or
xchg
stc
lds
push
aam
mov
xlat
jnp
or
test
mov
in
cs
push
arpl
fs
pop
add
imul
enter
negl
xor
push
xor
bndstx
fimull
adc
inc
cmp
adc
icebp
stos
push
jle
sub
adc
push
repz
cmpl
pop
pop
push
les
imulb
movsb
inc
mov
xchg
es
popa
xchg
mov
cmp
lret
sub
pop
push
cmp
and
arpl
mov
mov
mov
test
inc
inc
inc
push
or
dec
imul
xchg
inc
arpl
mov
aad
push
dec
aaa
mov
stos
push
push
je
outsl
dec
out
sti
insb
rclb
pop
pop
bound
inc
cmp
pop
push
mov
xor
sub
xlat
dec
pop
or
and
cmp
sub
push
mov
mov
add
setp
aaa
xchg
rol
pop
push
shlb
dec
daa
ds
lcall
or
jg
fisttps
fisttpll
push
sub
pop
notb
mov
out
add
add
fistl
mov
push
xchg
rorl
shufps
cmp
jg
loopne
cmp
sti
sbb
nop
nop
gs
mov
jp
sarl
xchg
aas
imul
mov
in
lds
xor
sbbl
pop
outsl
or
and
pop
fbstp
call
out
movsl
inc
lea
and
pop
iret
rcrb
or
jbe
out
xabort
lock
stc
sarl
cld
cmp
pop
lods
push
idiv
aam
jns
dec
mov
and
pop
add
dec
repz
push
jp
or
movsl
test
dec
repz
or
or
or
imul
and
mov
add
mov
bound
popa
or
pop
or
pop
xor
adc
fmull
ss
arpl
mov
cs
sub
shrl
adc
divl
cmc
sbb
outsl
dec
movsb
pusha
shlb
movl
shrb
adc
mov
pop
ljmp
mov
loope
bound
push
lds
aam
das
ss
popa
mov
sub
mov
es
imul
insb
shll
xor
sbb
mov
mov
xlat
sbb
scas
aas
add
and
ss
out
mov
out
and
mov
pop
pop
and
jmp
stos
cmp
cmpsl
xlat
sub
mov
aas
daa
xor
pop
shrb
mov
aaa
pop
cmp
mov
lods
fldt
test
subb
arpl
xor
loop
cmpxchg
cmp
jge
rcr
sub
pop
xor
and
fs
icebp
sbb
outsb
sbb
lea
dec
pop
pop
mov
das
mov
insl
shr
pop
aas
aaa
adcb
mov
and
add
mov
jge
pop
pop
push
mov
js
iret
bound
aam
pop
pop
pop
pop
dec
adc
push
push
jb
data16
jae
push
add
adc
jb
dec
mov
inc
lods
pop
xchg
push
leave
push
or
stos
sub
push
leave
push
repnz
cltd
dec
pop
and
stos
in
xor
cmpsl
xchg
pop
and
sub
cmpsb
xchg
dec
and
movsl
mov
dec
cld
movsb
dec
scas
xchg
test
sub
and
mov
dec
push
stos
les
pop
sbb
mov
je
rcrb
xorb
test
nop
xchg
mov
popf
push
leave
push
xor
xchg
pushf
cwtl
inc
leave
push
repnz
fwait
pushf
dec
pop
and
stos
in
cltd
test
dec
and
cltd
push
sbb
psrld
xchg
popa
mov
cmp
sbb
dec
and
mov
jg
pop
inc
rorl
loop
xchg
adc
push
bound
sbb
in
inc
dec
pop
fildl
fildl
stos
mov
add
push
mov
insb
in
sbb
dec
inc
inc
jb
sbb
lcall
inc
pop
dec
sub
xor
mov
rcpps
les
inc
xor
and
stos
sbbl
ss
pusha
testb
dec
movsl
xchg
filds
push
push
add
mov
shlb
cmpsl
inc
aaa
pusha
rolb
cmpl
mov
mov
push
test
push
sbb
add
mov
push
adc
push
jo
mulb
das
mov
mov
outsl
mov
pop
ret
es
mov
addr16
stos
data16
xchg
neg
scas
lods
mov
inc
inc
scas
jp
or
scas
cmpsl
or
insl
adc
aaa
inc
imul
dec
push
or
aad
mov
jp
call
rorb
add
aaa
mov
mov
arpl
das
or
jbe
out
aaa
fistpll
iret
aaa
adc
scas
pop
mov
add
das
inc
or
outsl
mov
or
jecxz
sti
lahf
dec
mov
loopne
lahf
xchg
cmp
xor
aas
aaa
popa
test
mov
jg
aaa
or
push
or
xor
insl
adc
movsl
aaa
xor
iret
inc
dec
push
sbb
cmp
cmp
pop
out
gs
push
inc
cld
outsl
jbe
inc
iret
sbb
outsl
push
cmp
jae
and
and
jo
outsb
add
add
mov
and
pop
jbe
mov
rcll
pop
or
add
push
and
js
xchg
push
ficoms
mov
rclb
adc
and
data16
aas
jecxz
movl
mov
dec
jne
addr16
bound
adc
insl
je
xor
je
fs
jecxz
push
sub
lahf
mov
sub
cmp
or
adc
popa
push
dec
andl
pop
faddl
xchg
fnstenv
xor
bswap
push
pop
bound
add
insl
les
in
ss
dec
pop
xor
sub
popa
jae
js
outsl
les
sbb
xor
pop
mov
inc
and
pop
pop
or
jecxz
or
andb
roll
pop
xor
jecxz
inc
xchg
mov
out
stos
add
inc
or
mov
xor
mov
pusha
lods
adc
pushf
inc
movzwl
inc
push
out
sahf
out
xorb
int
push
stos
add
outsb
jnp
lahf
out
mov
dec
push
push
and
add
add
pop
dec
sarb
xlat
xlat
rolb
subb
rorb
add
push
inc
mov
cmpsl
inc
mov
sbb
punpcklwd
mov
adc
xchg
shlb
fcomps
pop
scas
fsubrs
push
outsl
mov
adc
xlat
mov
add
sub
bound
add
inc
mov
daa
xor
push
rorb
xor
mov
int3
inc
ja
adc
dec
cmovno
and
or
idivl
iret
adc
adc
ret
jg
dec
adc
sbb
roll
ss
test
add
pop
or
sbb
fwait
outsl
decl
sbb
xor
xlat
jecxz
ja
es
dec
and
cmp
idiv
pusha
jp
pop
dec
push
cs
daa
ljmp
dec
sub
imul
mov
aam
pop
sbb
jecxz
mov
mov
inc
je
arpl
addr16
pop
add
mov
gs
mov
sbb
stos
dec
mov
outsb
and
fst
inc
roll
bound
push
push
cs
mov
xor
dec
push
aaa
out
es
xchg
sub
pop
jp
xchg
mov
insl
xchg
mov
jnp
mov
jns
xor
jae
cmp
jnp
fs
dec
mov
fcmovb
mov
jnp
jecxz
pop
in
pop
scas
dec
shlb
fwait
inc
mov
loopne
stos
decb
js
xor
fucom
jmp
inc
cmp
xchg
ficomps
dec
or
inc
push
mov
out
inc
lcall
dec
repz
push
fimull
pop
incb
mov
xor
ret
lds
outsb
jb
loop
pop
pop
push
ss
ja
pop
das
jge
ret
pop
inc
inc
data16
fnstsw
fidivs
out
inc
mov
arpl
sub
arpl
fs
sub
xchg
inc
mov
cmp
push
dec
dec
daa
jge
fiadds
mov
scas
cmp
cs
add
imul
jnp
sbb
push
sbb
dec
ss
outsb
jnp
fidivrs
daa
dec
jb
das
xor
pop
dec
es
das
add
pop
out
mov
and
or
xchg
jne
sysexit
mov
cs
sahf
xchg
push
push
mov
mov
push
scas
push
in
mov
insl
push
inc
ja,pn
xor
push
jns
lds
jp
jp
ds
pop
outsl
loope
arpl
sahf
dec
lock
cmp
das
xor
das
loopne
lock
outsl
pop
outsl
dec
xor
js
push
into
xor
inc
add
outsl
imul
pop
xor
test
xchg
sbb
pusha
loopne
jnp
stos
es
gs
add
mov
xchg
mov
add
lret
inc
lods
adc
and
inc
pop
ret
cmpl
add
nop
sarl
xor
inc
fildl
mov
sbb
jmp
ja
imul
xchg
jns
aaa
pusha
adc
cwtl
pop
xor
adc
inc
cmp
lret
mov
pop
cmp
sarl
movsb
dec
pop
popw
lret
in
add
es
cmpsl
fs
loopne
add
xor
adc
mov
scas
cmpsl
arpl
lods
mov
sub
push
stos
scas
mov
loopne
addl
push
jae
lahf
xchg
mov
pop
pop
push
mov
sub
mov
inc
or
xchg
mov
jmp
mov
sub
add
mov
jae
arpl
cmp
inc
sub
shrl
dec
fiaddl
bound
mov
push
fwait
and
adc
inc
es
das
dec
insb
outsl
popa
fs
outsl
or
inc
pop
hlt
clc
aas
aas
add
dec
jecxz
pop
mov
pop
sbb
mov
inc
ret
mov
pop
xor
iret
ja
xlat
lcall
mov
sbb
mov
mov
pop
js
sub
and
add
or
fs
out
mov
nop
sbb
jle
into
sti
jae
sbb
add
pop
xor
mull
lods
pop
pop
jmp
idivl
sub
iret
imul
xor
mov
lods
jns
out
push
cs
mov
lahf
out
add
jbe
adcl
ja
pop
pop
cmp
jne
jo
arpl
xor
shlb
xor
jae
pop
xor
mov
sbb
or
lcall
cwtl
or
inc
dec
addl
inc
outsl
call
mov
jnp
lahf
sub
sub
xchg
mov
sbb
cmp
push
sub
add
xorl
pop
fildl
pushl
jg
ret
inc
sub
pop
dec
arpl
iret
notb
push
iret
aaa
cmpsl
popa
roll
mov
movsl
cs
fsubs
push
inc
sbb
lods
stos
cmp
mov
ret
das
inc
stos
or
add
iret
inc
jnp
cmp
mov
popa
fcmovnb
lock
loopne
sub
dec
and
xor
add
addb
pop
adc
arpl
adc
inc
out
push
or
addr16
clc
je
pop
inc
daa
jns
adc
popa
mov
pop
iret
fbld
call
and
dec
arpl
jae
jbe
sbb
add
imul
outsl
iret
push
pop
aad
pop
das
xchg
xor
push
outsl
pop
fistps
xor
call
rcll
xor
cs
cld
out
add
cmp
adc
jp
dec
xlat
jle
push
lock
scas
mov
cs
add
das
pop
test
data16
inc
pop
loop
dec
fbstp
pop
addr16
sub
insl
mov
jmp
fidivrl
push
lcall
in
sub
add
xor
mov
sbb
xlat
call
add
addl
ds
repz
add
dec
cltd
or
fwait
int
imul
push
mov
insb
ss
or
adc
sahf
int
das
adc
sbb
and
inc
iret
xor
data16
inc
mov
mov
mov
loopne
mov
popa
xchg
add
shrb
fldcw
ret
sub
shrb
xchg
pop
ss
data16
add
and
add
outsb
pop
sbb
lret
insb
ss
int
add
add
inc
in
scas
fyl2xp1
das
incl
mov
push
adc
inc
repz
xor
mov
outsl
les
adc
pop
add
nop
and
mov
ds
adc
and
mov
add
adc
fildl
xchg
mov
mov
lods
pop
dec
movsl
enter
push
push
mov
inc
push
insl
ss
mov
test
pusha
or
mov
sub
sub
idiv
bound
mov
sbb
mov
ds
pop
sbb
addr16
pop
subb
mov
dec
fsubs
mov
pop
test
xor
dec
xchg
sarl
push
pop
fsub
cmpsb
sub
pop
mov
scas
hlt
xchg
and
lahf
clc
jp
dec
sbb
je
sbb
and
push
push
mov
xchg
xchg
test
inc
jle
xor
xlat
xchg
inc
mov
and
push
shrb
ss
ds
leave
rcl
je
dec
fs
mov
sub
in
xchg
sub
adc
sarb
cs
hlt
data16
iret
leave
jae
cmp
inc
les
pushf
cmp
mov
dec
pusha
shl
xchg
inc
outsl
cmp
inc
add
xor
mov
adc
pop
inc
pusha
mov
clc
cmovs
sub
dec
pop
push
in
push
xchg
test
pop
mov
sarl
ficompl
loop
pop
push
repz
cmp
out
xchg
cmp
sub
adc
sub
push
jp
inc
mov
inc
mov
mull
mov
dec
pop
cmp
dec
imul
std
inc
stos
aaa
dec
pop
dec
inc
int3
mov
imul
bound
je
bound
imul
rorb
sbb
push
push
push
pop
mov
test
xlat
mov
aam
add
pop
dec
mov
sbb
push
xchg
pop
dec
push
pop
dec
mov
push
scas
test
add
add
das
outsl
lods
push
mov
lahf
imul
mov
cmp
aas
xor
sub
inc
mov
sarb
xchg
mov
mov
or
psubusb
xlat
dec
imul
cmp
jb
pop
pop
dec
in
mov
push
repz
ret
cmp
cmc
and
ljmp
jno
push
pop
je
mov
outsl
jbe
mov
add
outsl
dec
mov
dec
and
push
pop
outsl
inc
imul
inc
arpl
imul
popf
mov
les
jbe
inc
mov
in
fwait
jge
push
es
incb
xchg
and
pop
mov
inc
mov
jnp
fxch
addb
xchg
sbb
fwait
inc
xchg
jge
xchg
in
push
or
cmp
mov
xchg
cmp
cmpsb
pop
mov
xor
and
pop
inc
shll
data16
loop
push
xchg
mov
xchg
inc
popl
data16
push
jecxz
inc
fildl
fiaddl
fneni(8087
psubsb
and
fstpt
mov
insb
mov
jbe
cmp
adc
and
add
dec
sahf
out
sahf
into
lea
mov
fldcw
push
sti
ret
mov
outsl
and
iret
sbb
mov
popa
lcall
imul
mov
push
mov
jl
mov
inc
icebp
aas
xor
out
insb
mov
ljmp
test
mov
push
filds
out
dec
sahf
cmpsl
fldenv
jns
in
jnp
dec
jp
pop
mov
ds
cli
cmove
cmovne
cmpsb
adc
jnp
repz
push
scas
addb
std
jo
fisttps
inc
xlat
cmp
xchg
inc
idivl
xor
fsubrl
ss
sbb
aas
push
adc
fidivrs
movsb
pop
jl
insb
push
mov
add
out
lcall
imul
dec
dec
in
ficoms
imul
push
shlb
xor
out
test
loop
ss
cmp
and
in
pushf
aaa
push
cmp
pop
out
xor
cmp
fcomps
imul
fs
cmp
roll
jl
fdivr
sbb
cmpsl
aas
bound
int
cmp
pop
mov
fmul
repz
push
ds
lcall
or
lds
jns
jl
std
mov
and
jg
dec
sbb
scas
sub
mov
test
and
and
rcr
mov
jg
push
push
mov
xor
adc
mov
lds
mov
das
jbe
mov
loopne
mov
sub
int3
push
das
in
sti
and
pop
sbb
enter
adc
push
cmp
iret
pusha
or
mov
pop
adc
add
or
inc
sub
sub
mov
insb
lds
mov
xlat
push
inc
and
xor
ja
outsb
outsb
stc
sahf
js
jp
xor
push
js
sub
push
xor
leave
fstps
cmp
push
pop
sub
lcall
imul
sbb
fwait
lret
sbb
xlat
or
pusha
addl
jb
popa
je
mov
sub
mov
iret
ja
push
loope
add
sti
inc
fcmovb
inc
mov
out
pop
pop
cs
push
ficoml
out
pushl
jbe
jae
daa
mov
sbb
cmpsl
push
inc
inc
ljmp
sbb
mov
js
inc
inc
cli
imul
adc
scas
lahf
pop
sub
aaa
xchg
push
xor
ret
lahf
mov
outsb
jae
push
movl
or
add
pop
mov
movsb
pop
jo
push
jo
test
jecxz
inc
mov
push
pop
push
daa
mov
inc
jecxz
mov
or
outsb
insl
xchg
lret
les
dec
xchg
push
sbb
mov
popa
jb
sbb
popf
mov
add
dec
pop
filds
push
sub
popf
mov
sub
fs
push
or
xlat
add
jo
xchg
adc
xor
inc
outsb
mov
add
push
or
xor
xchg
ret
mov
adc
dec
arpl
sub
ljmp
jbe
jo
xor
mov
scas
or
imul
jnp
push
dec
pop
dec
mov
pop
jle
pop
add
aaa
push
adc
cltd
sub
ds
jb
addr16
cmpl
jbe
add
xor
mov
or
out
dec
adc
push
lock
push
sbb
shrb
jg
loopne
adc
cmpsl
fcoms
sub
aas
jmp
sub
rcr
inc
iret
das
pop
js
cmpl
pop
inc
aaa
push
and
mov
jne
add
push
fwait
inc
push
push
stos
push
xchg
inc
xchg
or
mov
iret
xchg
das
ds
gs
adc
inc
cmp
sti
stos
cmpsl
je
xchg
sarb
das
daa
jg
add
xchg
and
sbb
pop
aaa
xor
or
lods
add
jbe
lods
cmp
outsl
aaa
mov
mov
mov
ret
adc
out
xchg
das
ss
cs
inc
das
push
clc
sub
fucomip
popa
mov
subl
mov
pusha
imul
mov
mov
fisubl
xchg
add
push
mov
inc
ret
pop
mov
ret
sub
jo
push
arpl
js
jmp
jae
scas
out
jbe
or
inc
or
push
aam
inc
push
pop
iret
add
mov
scas
pop
mov
add
sbb
inc
jg
push
or
sbb
ja
lods
mov
pop
or
bound
push
in
cmp
inc
push
inc
fildll
pop
dec
jae
or
add
daa
inc
cmp
add
pop
adc
pop
sbb
lods
addr16
orb
add
insb
sahf
setp
and
xorl
mov
xlat
xchg
sbb
push
pop
or
jno
pop
inc
ss
inc
pop
xor
mov
lahf
inc
dec
mov
xor
dec
add
fdivs
inc
cmpsl
push
out
lods
mov
daa
ret
pop
pop
add
lods
and
add
inc
mov
pop
xchg
inc
and
sbb
inc
inc
pop
jne
jg
push
jecxz
pop
mov
in
sub
adc
and
push
stos
stos
in
jle
lods
or
cmp
insb
je
outsl
movsb
fisttpl
ds
jo
jae
daa
push
ret
pop
jno
outsl
xor
push
aaa
or
bound
push
cwtl
pusha
or
repz
mov
test
jne
or
mov
pop
scas
mov
lahf
pop
mov
rcrb
inc
sbb
jl
jae
fisubrs
mov
insl
mov
call
cmp
inc
test
imul
arpl
dec
outsb
push
call
add
xlat
inc
xchg
lcall
or
pop
mov
push
inc
fisubl
testl
pop
stos
test
sub
pop
or
push
push
cmp
dec
sub
pusha
sub
push
push
adc
sbb
into
dec
mov
inc
and
jae
jo
push
mov
jb
dec
add
test
jp
stos
mov
pop
xor
invd
stos
sub
push
aam
inc
or
jns
jb
iret
mov
test
jmp
mov
ret
mov
xchg
test
inc
xlat
mov
out
inc
outsl
outsb
or
aaa
inc
insb
dec
aad
or
mov
movsl
jecxz
adc
xchg
sub
mov
aaa
jbe
lret
out
push
arpl
add
scas
decl
pop
aas
inc
push
dec
inc
dec
push
xchg
add
mov
xchg
xor
pop
jnp
js,pt
fiadds
jg
ret
push
add
pop
push
jb
add
addr16
add
mov
lahf
incl
lods
cmp
into
and
and
and
cmp
cmp
adc
out
xor
das
ds
das
sbb
int
popf
or
or
daa
daa
mov
push
and
push
pop
inc
inc
jo
div
inc
push
inc
pop
and
or
aas
js
insb
cwtl
xchg
jbe
es
sbb
push
adc
add
outsb
cs
add
ss
pop
jg
mov
adc
pop
gs
xlat
sbb
push
or
add
sbb
out
rcrb
sbb
pop
push
push
adc
maxps
xchg
push
fadd
pusha
mov
add
xchg
add
sbb
jae
lahf
lahf
dec
stos
mov
cmp
mov
out
inc
adc
testl
sahf
data16
sahf
xchg
test
lock
sbb
clc
push
jo
mov
push
push
push
addb
loop
stc
pop
add
es
cld
ret
and
fsubrs
or
jno
in
outsl
cmpsl
push
daa
lahf
mov
xchg
enter
sub
imul
dec
mov
repnz
lods
pop
or
or
fisttpll
or
jmp
mov
fldt
mov
push
imul
into
add
pop
inc
popa
outsl
dec
push
divb
and
bound
dec
faddl
mov
push
es
insb
jns
in
mov
and
mov
cmp
stos
jo
orl
and
xor
sub
sub
push
nop
js
xor
inc
dec
inc
and
add
in
xor
jo
movsb
push
mov
insl
outsl
fs
gs
jo
jns
iret
add
imul
mov
mov
outsl
insl
jne
mov
pop
fisubs
add
addr16
mov
inc
je
push
pop
push
jbe
pop
gs
inc
insb
popa
or
cmpsl
out
jbe
xor
push
incb
inc
popa
imul
mov
sbb
mov
outsl
jo
std
sub
sahf
dec
sub
in
jno
xlat
lahf
mov
sti
mov
or
inc
xadd
sbb
inc
bswap
lods
sub
inc
mov
jge
cmpb
aas
nop
jo
maxps
fldln2
pop
pavgb
frstor
leave
sarb
dec
mov
push
pop
ret
les
enter
mov
jo
nop
inc
pop
cmp
add
daa
ds
mov
push
addr16
dec
push
daa
fcmovnu
jnp
into
fs
jo
mov
inc
pop
lods
pop
lods
add
lods
lods
pop
add
mov
sub
ja
repnz
xchg
inc
fimuls
inc
xchg
lods
test
push
fwait
insb
dec
xchg
daa
xchg
imul
push
pop
push
xchg
xchg
push
nop
push
rclb
or
mov
je
int3
scas
fisttps
sahf
mov
add
mov
pop
mov
xchg
mov
push
jle
in
shl
fnstsw
jbe
cmp
xchg
jg
xchg
outsl
add
mov
lahf
add
pusha
scas
push
jb
scas
jo
js
lods
outsl
or
negl
ror
add
and
pop
adc
clc
lahf
cmp
imul
adc
inc
xchg
inc
inc
add
clc
cmp
xchg
inc
jns,pn
push
pusha
cmp
iret
mov
outsl
xchg
push
jae
lods
push
nop
xchg
fsubr
pop
and
daa
xchg
test
sub
mov
aas
out
addr16
enter
hlt
jo
adcb
add
aam
hlt
inc
lcall
mov
int3
aas
add
pop
inc
add
daa
adc
mov
mov
and
adc
bound
xchg
pusha
insl
iret
jnp
jo
sar
dec
add
push
les
mov
xchg
lods
aas
adc
fsubrl
shll
adc
scas
pop
and
and
ja
mov
loopne
insb
mov
pusha
mov
daa
loopne
addr16
clc
mov
movsb
daa
divl
cmc
ss
das
or
pop
jnp
in
hlt
add
subb
aaa
movsb
fistpl
xchg
push
push
pop
daa
out
pop
mov
addr16
jl
in
nop
mov
imul
push
mov
aaa
and
push
in
xchg
mov
add
cwtl
or
inc
sub
xor
les
ss
lods
sub
fs
cmp
inc
je
mov
sub
pop
in
add
scas
scas
add
fs
mov
hlt
cld
ds
mov
mov
cmpsl
stc
fiadds
push
dec
push
jl
mov
sbb
insl
dec
aas
ja
in
nop
out
jl
pushf
or
nop
out
sahf
hlt
int3
fsubr
das
in
mov
mov
inc
ss
sub
cmp
lahf
mov
aad
dec
lahf
ja
push
and
test
jl
pop
enter
insb
jl
cmp
repnz
pop
enter
adc
es
fwait
sbb
sub
lahf
test
pop
pop
and
sar
sahf
shll
andb
sub
repz
enter
rcl
inc
es
movsl
cld
mov
nop
int
sub
stos
mov
aam
push
cmpsl
or
imul
pop
enter
push
enter
pop
js
es
pop
mov
lahf
or
popf
mov
and
shlb
jg
fsub
repz
enter
fs
mov
iret
jae
int
mov
rcr
test
test
cmp
or
add
lods
cmpsl
cmp
jl
in
push
ds
pusha
je
stos
push
jg
nop
movsb
daa
mov
pop
mov
mov
les
in
lahf
movsb
mov
or
adc
mov
hlt
call
iret
test
xor
mov
ja
adc
xchg
outsb
and
test
rcrb
iret
test
add
inc
jl
in
in
xor
push
aad
push
movl
push
loope
jg
cwtl
cmpsb
iret
test
cwtl
lods
mov
cmpsb
cwtl
cmpsl
mov
dec
fldl
mov
dec
shlb
outsl
inc
xor
addr16
pop
int
push
cmpsl
jg
cli
pop
enter
xchg
test
and
insb
push
xor
jae
fsubs
sahf
clc
mov
dec
add
aaa
and
cmp
push
add
lds
xchg
inc
cs
jg
sarb
insb
push
jl
mov
movsb
jns
or
shl
shrb
jl
mov
ds
jb
dec
and
shll
mov
sahf
outsl
insl
jg
cmpb
mov
jmp
mov
lahf
and
test
enter
jae
call
insl
ja
loopne
movsb
sbb
clc
sub
cmp
ja
xchg
pop
pop
adc
jg
pop
sub
movsb
lahf
dec
pop
insb
inc
mov
lahf
cmp
inc
int3
loopne
cmp
mov
mov
push
lahf
push
add
push
cmova
test
in
js
aam
nop
inc
sahf
pop
imul
mov
adc
lahf
mov
xchg
pop
jmp
nop
cmpsb
mov
sub
pop
xchg
jmp
fstpl
dec
add
in
lahf
pop
xor
inc
mov
in
loopne
inc
test
cwtl
fimull
jns
or
lahf
pusha
lahf
or
dec
cmpsl
adc
push
rolb
add
adc
insb
mov
mov
sarl
iret
lock
sbb
sub
test
lock
mov
pop
pop
jg
xchg
mov
test
dec
iret
les
inc
jbe
push
xchg
push
jl
subb
imul
jbe
iret
add
sub
lahf
loopne
or
test
lods
cmp
enter
lods
inc
lods
outsb
in
stc
jg
fmull
mov
lahf
faddl
movsb
stc
pusha
inc
add
fsubr
mov
inc
call
clc
pop
insb
inc
jmp
pop
insl
and
lahf
dec
inc
repnz
push
ja
push
or
cmp
nop
mov
pop
cmpb
repnz
loopne
jl
iret
test
and
xor
inc
stos
lahf
test
sahf
outsl
insl
ja
aam
add
aam
movsl
fidivl
sahf
shlb
cs
dec
lahf
repz
push
ja
xor
dec
in
dec
dec
lods
push
xor
xorl
jmp
daa
addr16
inc
fidivl
aas
test
or
cwtl
daa
iret
lds
clc
lods
iret
test
enter
mov
push
les
enter
iret
jae
iret
call
pop
pop
and
call
js
mov
lods
addr16
iret
hlt
test
or
enter
scas
rcr
jl
inc
scas
popl
in
fadds
xchg
loopne
fistpl
mov
aas
or
push
andl
and
sub
mov
fadd
es
daa
add
hlt
pushl
scas
xlat
lgs
loopne
pop
inc
lcall
pop
cli
sahf
push
push
mov
call
daa
cmpsb
pop
nop
scas
jmp
andb
int3
ja
mov
outsl
pop
lcall
pop
mov
adc
sbb
addr16
sbbl
data16
scas
push
fwait
push
js
aas
movl
ss
out
in
cs
pop
lahf
ja
daa
pop
leave
enter
mov
dec
inc
xchg
pop
leave
xchg
inc
cmp
xchg
pop
leave
xor
sub
leave
xchg
pop
sub
fwait
push
xchg
sahf
inc
or
mov
push
jl
lcall
mov
sahf
out
xor
mov
lcall
mov
mov
stos
cmp
cwtl
push
inc
sub
iret
repz
cwtl
inc
sub
imul
push
pushf
andb
insb
push
xor
enter
ljmp
mov
xchg
inc
xchg
dec
hlt
insb
movsl
addr16
inc
push
bound
aas
dec
inc
repz
lcall
mov
jae
dec
pusha
add
add
fdivs
shlb
rcrb
fs
call
clc
les
pop
leave
mov
add
sbb
add
mov
ret
dec
xchg
jg
xchg
fmul
xchg
or
adc
jns
xchg
mov
pushf
mov
and
inc
push
lock
xchg
sub
xchg
mov
or
outsl
add
insb
and
jns
daa
inc
pusha
mov
popa
dec
sahf
jo
outsl
add
cmp
filds
pushf
or
mov
xchg
adcl
mov
add
jmp
sub
outsl
out
in
in
sub
cmc
push
test
mov
inc
xchg
or
push
mov
aam
push
xor
decl
sub
in
xchg
or
xor
popf
fbld
pop
enter
jo
xor
jl
outsl
add
jnp
ret
fildll
mov
add
cmp
dec
xchg
scas
in
dec
test
push
in
mov
mov
dec
xor
enter
and
lahf
mov
rol
jg
insl
mov
mov
pop
jg
jb
and
sub
fwait
nop
pop
sbb
sub
cmp
sub
add
and
in
and
fs
js,pn
jmp
pop
push
shrb
scas
and
rolb
hlt
mov
cmp
lock
add
xlat
rclb
getsec
rcll
out
add
or
daa
jns
xor
call
pusha
add
adc
mov
xor
mov
push
enter
jg
adcb
call
je
fs
push
xchg
mov
and
mov
ss
mov
cmpsb
lahf
xchg
push
dec
and
ja
lahf
and
mov
sbb
stos
outsl
jg
mov
xchg
daa
testl
push
fs
ljmp
mov
dec
dec
ja
insb
push
xchg
enter
imul
mov
add
test
mov
dec
mov
pop
insl
or
mov
sbb
test
add
xlat
or
lcall
sub
dec
lock
je
movsb
mov
sub
pop
or
pop
sbb
push
or
aaa
and
cmp
xchg
out
xchg
add
pop
add
push
push
mov
push
pop
pop
fs
shl
aaa
mov
lods
xor
xchg
stos
sbb
add
mov
mov
or
nop
mov
mov
pusha
fstp
add
jg
mov
adc
jg
iret
aam
out
ja
add
jg
addr16
mov
test
add
cltd
inc
outsb
dec
sub
out
jnp
adc
push
or
rol
das
imul
or
icebp
sbb
shrl
inc
pop
push
push
jl
enter
aaa
add
mov
les
not
cmpsl
add
xor
cld
out
xlat
add
jo
push
sahf
iret
in
aad
sub
daa
mov
mov
daa
leave
xchg
pop
leave
or
lock
xor
negl
adc
jl
testb
xor
cld
ret
out
cmp
shrl
ficoml
sahf
test
ljmp
lahf
or
ret
sub
addr16
or
ret
xchg
and
ret
push
ret
aaa
imul
and
ffreep
fwait
mov
mov
mov
scas
in
leave
add
add
movsl
das
adc
lcall
test
pop
leave
mov
pop
scas
add
insb
and
sub
adcb
add
lahf
addr16
adc
dec
mov
or
pop
roll
ret
in
leave
xchg
fsubl
or
mov
cmpsl
inc
add
push
lods
daa
aas
addr16
subl
xor
fists
outsl
xor
mov
lods
lret
clc
es
and
push
adc
jbe
push
jl
sub
inc
xchg
jo
mov
rcrl
pop
jb
je
mov
mov
in
fcomps
or
adc
nop
adc
mov
push
push
enter
lods
imul
fstpt
push
lods
push
hlt
das
inc
jae
add
and
decl
cmp
rcl
int
pop
mov
nop
and
inc
push
std
dec
sbbb
repz
fistl
out
test
push
stc
cmp
repz
ret
out
pop
out
sahf
cmpsl
sub
ja
ljmp
sub
popf
ret
sahf
cmpsl
stc
cmp
inc
popa
jbe
lret
idivl
and
push
jo
out
repz
xlat
and
sarb
jns
out
push
std
and
imul
pusha
addl
and
jns
out
jl
into
add
repz
daa
inc
push
out
ds
imul
dec
arpl
iret
repz
repz
jno
sar
repz
hlt
sbb
adc
cmpsl
push
jbe
adc
cmp
insb
xchg
mov
add
out
sahf
sub
jo
lcall
es
cmp
out
lods
sbb
pop
jl
out
faddl
jae
leave
adc
iret
shrl
out
jne
repz
out
hlt
pop
jbe
jbe
imul
ja
iret
repz
fidivs
pop
xchg
loopne
out
xor
jns
jp
mov
jnp
out
sahf
bound
push
fdivrp
clc
cmp
stos
jl
jge
push
out
out
iret
cli
ss
push
xchg
cmpsl
stc
cmp
adc
lret
pop
orb
jns
mov
push
and
sbb
imul
pop
adc
out
int
xchg
xchg
stc
cmp
repz
adc
cmpsl
push
xchg
mov
stc
cmp
mov
clc
sbb
sahf
shl
mov
cmc
int
imul
and
cmp
les
fs
dec
repz
add
ds
sarl
pop
scas
loope
xchg
cmp
repz
stc
adc
adc
dec
shrb
lahf
out
into
add
cmp
jb
clc
dec
cltd
mov
repz
flds
cld
sub
mov
adc
shll
scas
shll
ja
repz
ds
cltd
xlat
repz
out
mov
mov
mov
mov
aam
movsl
push
test
cmpsb
jns,pt
out
push
mov
cmpsl
dec
cmpsb
loop
ds
repz
push
test
push
test
mov
iret
sarl
mov
int
imul
repz
inc
scas
jl
repz
fnstcw
scas
cmpsb
push
and
mov
xor
testb
dec
mov
mov
jne
fidivrs
push
int3
out
insb
ss
mov
add
int
insb
ss
lds
enter
lret
iret
mov
incb
sbb
test
cs
out
mov
nopl
sub
xor
add
sarb
adc
aas
dec
sub
xor
aas
mov
inc
and
cmp
in
pop
inc
addr16
or
inc
jb
pop
in
pop
aaa
pushf
mov
test
ds
shlb
push
test
adc
rcrb
fdivr
jle
add
lahf
adc
push
jg
arpl
aas
mov
jg
and
xchg
mov
aas
into
mov
xchg
push
fwait
inc
pop
inc
and
cmp
dec
negb
fdivs
cmpsl
mov
scas
dec
mov
adc
es
mov
adc
in
das
fs
and
xchg
repnz
fcomi
add
pop
inc
nop
cmp
jo
aas
data16
inc
jnp
and
and
in
pop
jnp
enter
mov
insb
mov
daa
nopl
sarl
sahf
pop
push
xchg
adc
jmp
pushf
popf
pop
or
rorb
sarb
inc
pop
adc
lock
in
rorl
sub
shlb
pop
dec
sahf
popa
dec
leave
test
pushf
shrb
sbbl
mov
ja
inc
lock
cmp
push
bound
pop
cmp
xchg
ds
adc
shll
jns
imul
mov
lcall
loopne
add
in
sub
pop
xor
cmp
or
inc
enter
mov
dec
mov
inc
scas
les
xchg
mov
cmp
in
je
leave
cmp
sub
daa
dec
scas
fcomp
xchg
negb
dec
or
out
and
inc
addr16
ja
pop
aaa
fistpll
jb
addr16
gs
fbstp
jb
pop
lock
sahf
pusha
fwait
dec
pop
sub
les
pop
xor
daa
push
out
mov
pop
pop
adc
or
and
inc
jae
xchg
call
imul
jo
pop
xor
popf
sub
mov
mov
pushf
aas
ficoms
in
jb
add
adc
in
and
xlat
out
pusha
jae
dec
inc
push
scas
addr16
dec
xor
aaa
scas
out
dec
mov
inc
nop
xchg
sbb
andb
mov
dec
xchg
pop
lcall
leave
mov
fcom
out
sbbb
dec
fcoms
push
push
pop
mov
inc
test
fcomp
inc
iret
sbb
daa
dec
pop
cmp
mov
notl
daa
iret
insl
push
pushf
mov
add
scas
mov
inc
jns
pushf
sbb
add
add
xchg
mov
jne
mov
pop
push
fwait
in
out
pusha
xchg
inc
inc
jb
rclb
leave
inc
jb
mov
push
popa
xlat
or
sbb
push
lahf
push
add
fninit
cmp
cmpsl
push
insl
daa
pop
leave
inc
pusha
imul
mov
lahf
cwtl
addr16
push
mov
mov
pop
mov
addr16
in
popa
jns
dec
add
xlat
movsl
mov
cmp
cmpsb
add
mov
je
dec
jl
pop
mov
bound
test
mov
and
mov
mov
daa
push
iret
xchg
in
sbb
inc
into
icebp
add
or
arpl
daa
pop
insb
xchg
arpl
leave
enter
arpl
inc
jb
leave
pop
gs
jbe
into
mov
nop
cmpsl
cwtl
pop
mov
fldt
mov
push
cmp
xchg
and
addr16
xchg
xchg
xchg
jecxz
stc
add
popf
out
fimuls
push
add
jns
xlat
xor
or
or
out
sahf
or
pop
or
fs
imul
mov
mov
xchg
fs
ds
cmp
das
xchg
add
packsswb
orl
mov
in
jg
fisubs
insb
xchg
scas
jne
inc
sahf
dec
jb
sbb
das
cmp
fs
fistps
cmp
je
jbe
xchg
and
andl
jb
enter
gs
sbb
decl
mov
inc
into
dec
and
out
data16
adc
cmp
test
in
adc
int
aaa
leave
and
push
pop
mov
jnp
loopne
mov
cmpsl
stos
mov
cmp
cmp
push
add
add
push
adc
mov
loope
data16
testb
mov
pop
jb
jns
clc
pop
loope
addr16
stos
dec
nop
inc
push
aas
pop
or
sbb
dec
dec
imul
testb
xchg
daa
and
mov
mov
add
mov
loop
in
repnz
loop
rcr
and
subl
jl
mov
adc
daa
xor
add
pop
push
inc
pop
push
adcl
mov
add
sbb
lods
scas
shl
xchg
pop
push
je
in
xor
pop
xlat
sbb
daa
cld
cmp
jge
imul
aam
mov
jb
cmp
pop
add
xchg
mov
and
jbe
inc
in
enter
in
mov
leave
add
bswap
iret
add
addr16
cmp
leave
or
in
enter
in
and
pushf
cmpsb
push
lock
push
testl
dec
repnz
sbb
inc
out
jb
dec
jg
mov
in
insl
scas
iret
jl
pushf
leave
and
in
jmp
cltd
bt
dec
and
xlat
sub
push
add
out
dec
outsb
ja
inc
ja
in
enter
adc
pushf
addr16
out
jb
xor
shl
daa
addr16
pop
add
xchg
lods
xchg
setl
xchg
push
mov
mov
call
dec
leave
xlat
adc
orb
enter
dec
adc
jmp
sub
out
pop
and
add
pop
iret
repz
push
push
add
imul
repz
add
in
popf
popf
xlat
or
and
aaa
shrl
mov
mov
xor
push
lahf
insl
in
inc
sub
insl
iret
out
and
pusha
ljmp
pop
lgs
pop
mov
cmpsl
push
mov
xor
imul
addr16
mov
pop
xor
adc
push
xchg
or
xchg
fs
add
insb
lods
fcomps
outsb
cs
cli
clc
xchg
xor
outsl
mov
pop
jo
in
mov
dec
cs
pop
mov
scas
mov
pop
and
adc
dec
sahf
pop
jo
in
inc
ja
xchg
imul
add
addr16
mov
cmp
outsl
femms
daa
push
nopl
jns
mov
rcr
jno
out
or
add
pop
xchg
scas
push
popf
pushf
inc
daa
dec
sub
pop
xor
iret
pop
out
xchg
test
testb
les
nop
out
cmpb
dec
lahf
fsubr
int3
out
test
out
jno
scas
and
cmp
xor
and
xlat
inc
out
adc
inc
dec
dec
jb
push
mov
or
mov
addr16
cmp
mov
outsl
xchg
push
add
test
mov
mov
jb
into
jb
pop
xchg
scas
divl
cmpl
inc
cs
in
add
pop
mov
es
push
push
xlat
cmp
mov
lock
jae
enter
xor
jae
jae
cmp
mov
push
jge
cmpsb
xchg
sbb
push
mov
jae
lock
and
leave
mov
xor
scas
mov
je
outsl
aad
inc
fisttpll
bound
xor
push
out
nop
fcmovne
outsb
and
mov
push
push
lahf
pop
je
enter
and
repnz
mov
pandn
and
ja
cmp
jne
jmp
push
ss
in
in
fstpl
push
add
das
jae
jns
gs
add
jb
pop
leave
mov
jne
fwait
dec
dec
add
fisubl
daa
js
pop
cmp
jbe
pop
jbe
sub
imul
mov
xlat
push
into
inc
jb
pop
int3
xchg
into
aam
jmp
cltd
bt
adc
mov
hlt
nop
dec
repnz
shlb
ja,pn
push
pop
inc
push
outsb
pop
sub
ja
pop
mov
dec
or
mov
pop
mov
ja
cmc
adc
out
stc
add
or
adc
add
fisubl
dec
push
fists
daa
fnstsw
ja
mov
or
out
shr
ja
addr16
mov
push
push
hlt
jne
repnz
es
out
pop
add
jns,pt
repz
inc
jns
pop
dec
mulb
jg
pop
jg
jne
sahf
add
repz
stos
push
mov
das
mov
or
out
das
xor
sahf
ja
push
or
add
xchg
out
stc
push
jp
adc
and
sahf
das
adc
jp
test
cmp
push
pop
jp
inc
jb
push
mov
mov
addr16
int
pop
dec
loopne
jp
push
ja
pop
loop
mov
incb
push
jnp
jnp
fsub
jb
push
daa
push
jnp
or
cmp
jnp
xchg
jbe
ja
mov
cmpsl
call
clc
lods
sub
jnp
mov
jnp
jnp
jnp
mov
pop
and
jl
push
jl
and
sbb
fwait
pop
shlb
sbb
test
and
push
stc
pop
call
pushf
scas
add
or
stos
scas
nop
pop
pop
xor
in
add
cmp
sbb
mov
xchg
jl
lcall
jl
cli
lds
mov
mov
xchg
fisttpll
add
fucomi
in
out
xlat
testl
mov
and
mov
push
inc
adc
xlat
popf
xorl
mov
xchg
push
add
daa
iret
repz
add
inc
cmp
insl
fisttps
inc
xlat
sbb
fcmovne
ljmp
mov
jle
cmp
mov
adc
xchg
into
sub
jl
sbb
add
inc
cld
pop
out
xchg
scas
mov
outsb
rorb
add
xchg
call
iret
add
adc
insb
mov
sub
mov
in
daa
js
jg
jbe
das
test
sbb
jb
jg
jg
jg
pushf
dec
mov
and
out
lcall
ja
in
or
das
sbbb
ja
push
add
inc
addb
subb
jge
outsb
adc
mov
dec
dec
mov
out
add
outsl
jl
stc
iret
pop
dec
loop
orl
fwait
dec
dec
test
xor
aam
fisttpll
jns
ja
xchg
xchg
pop
push
add
out
insb
je
jl
xchg
out
test
mov
push
or
out
lods
mov
mov
jns
int3
adc
cmp
sahf
xlat
unpckhps
fcoml
in
cmpl
lock
mov
xorb
sbbb
and
xor
cmp
push
out
icebp
in
mov
sbbl
dec
adc
inc
andl
jmp
mov
aam
je
cmc
lds
adc
inc
push
test
pop
test
cwtl
fsubrl
fidivl
dec
addr16
daa
pop
int3
push
mov
add
lods
cmp
jg
xchg
movsb
jae
into
inc
stos
add
inc
mov
bswap
in
cmp
rcr
dec
or
loop
mov
or
xchg
out
jbe
or
add
push
out
movsl
inc
fcmove
pop
fs
xor
mov
pop
push
cmc
aas
pop
cmpsb
or
jmp
mov
push
mov
adc
iret
aas
dec
adc
mov
cmp
xchg
sub
mov
pop
xchg
scas
out
sbb
daa
cmp
pop
sub
fistps
dec
test
jns
or
imul
and
jb
pushf
push
jo
add
jb
xchg
mov
fsubr
mov
ret
clc
sahf
xchg
mov
push
testl
call
xor
fisubs
iret
or
inc
lcall
out
orl
jns
xchg
into
rep
push
out
nop
push
add
mov
lods
push
iret
mov
or
iret
repz
jmp
push
testb
imul
pop
jns
sbb
sub
xchg
jns
jns
xchg
jae
push
sahf
out
sahf
push
xchg
pop
mov
out
or
or
mov
xchg
mov
or
mov
repz
add
inc
filds
cld
daa
xor
inc
das
in
dec
dec
push
inc
sahf
inc
pop
xor
ja
mov
push
xchg
fstl
lahf
xchg
call
popf
add
adc
mov
in
fdivr
and
loop
fimull
dec
outsb
psrld
ret
jne
jne
pop
xchg
iret
or
or
in
andb
xor
leave
inc
mov
getsec
imul
add
sbb
scas
mov
jb
cs
or
mov
dec
dec
cmp
mov
js
cmpsb
ja
cmpsl
sub
leave
mov
imul
orl
mov
verw
in
and
xchg
mov
in
jecxz
and
inc
int3
movsb
lsl
mov
fiadds
push
aaa
in
jg
mov
popa
mov
daa
int3
pop
mov
mov
inc
decb
daa
or
dec
and
mov
mov
outsb
sahf
rcrb
push
aas
ja
mov
mov
jg
cvtps2pi
icebp
movsb
mov
popf
cmp
mov
mov
inc
or
faddl
sub
outsl
lcall
pop
mov
add
sbb
aas
sub
jg
cmpsl
fldt
mov
push
cmpsl
pop
ja
daa
daa
pop
lods
lods
ja
mov
and
sarl
daa
fstpl
mov
leave
dec
into
pop
in
mov
adc
sbb
fimuls
dec
cmp
lea
inc
dec
ja
push
daa
daa
pop
int
iret
cmpsb
scas
mov
outsb
or
push
add
cmc
movsb
into
lock
mov
repnz
cmp
mov
popf
mov
fmull
sahf
add
leave
leave
inc
repnz
and
xchg
xchg
add
push
mov
test
inc
pop
adc
iret
subps
mov
jg
xchg
popf
das
lods
adc
shlb
cmpsl
push
push
jl
pop
dec
repz
add
pcmpeqd
cmp
xor
in
sahf
out
add
push
iret
repz
fmull
cmpsl
cs
pop
or
leave
repz
or
push
or
xchg
das
femms
lahf
pop
lock
rsm
mov
jg
push
cmp
xor
loope
aaa
psubb
cmp
invd
adc
sbb
das
movaps
aas
or
inc
pop
repnz
xchg
jl
add
out
xchg
xchg
add
repz
mov
aas
negl
decl
pop
xchg
adc
or
sbb
fwait
sahf
and
js
dec
xchg
mov
decl
adc
lea
scas
push
outsl
mov
outsb
mov
aam
mov
xchg
push
nopl
fildll
push
add
ja
dec
pop
push
pop
gs
imul
mov
jmp
scas
xchg
call
popf
out
pop
loope
jmp
iret
in
in
stc
out
add
sahf
flds
aaa
push
dec
sbb
mov
adc
lea
rcll
ja
aas
out
fstl
pop
push
aas
push
iret
xchg
and
cmpsl
push
inc
stos
cmp
in
mov
mov
cmpsl
jb
pop
jb
xchg
add
js
jb
std
add
adc
fisubl
xchg
xchg
xor
shll
xchg
iret
pop
leave
repz
add
pushf
cmp
jnp
orl
xchg
xchg
xlat
xchg
xchg
xchg
xchg
mov
into
leave
inc
jmp
xchg
iret
les
loope
xchg
xlat
or
xchg
xchg
adc
xor
cmove
pop
or
out
fmull
emms
jg
add
add
jb
mov
mov
in
mov
xchg
into
icebp
std
xchg
jg
xchg
pop
packsswb
leave
adc
mov
in
mov
push
pop
xor
insl
addr16
mov
xchg
decl
xchg
xchg
in
in
movb
insl
jmp
dec
leave
or
sbb
out
and
xor
inc
push
imul
push
js
push
out
pop
lea
lahf
cwtl
lcall
cmp
pop
xchg
enter
ja
xchg
push
xchg
push
add
pop
aaa
jns
push
dec
call
jae
lock
sub
cmp
cltd
and
sub
mov
ja
pshufw
xchg
leave
leave
in
jbe
out
lods
lgs
shll
ret
hlt
addr16
testl
das
sbb
iret
adc
pop
nop
sbb
ds
outsl
jno
lahf
jl
xchg
into
add
add
out
mov
xchg
mov
fsubrl
ffreep
jmp
inc
lods
out
sbb
fwait
ja
inc
cmp
cvtps2pi
setle
in
mov
inc
dec
push
pop
jns
dec
dec
outsl
jp
in
sahf
out
or
in
stos
mov
iret
leave
repz
sahf
adc
out
adc
loope
jl
std
into
adc
pop
mov
xor
dec
push
pushf
sbb
mov
popa
ja
jl
pop
daa
xchg
sbb
cs
out
mov
or
xchg
in
sbb
cmp
popf
out
xor
adc
outsl
das
popf
cmp
emms
aas
popf
mov
xchg
inc
das
push
decl
movntq
pop
add
pop
push
or
in
sahf
or
outsl
ja
jmp
into
or
in
repnz
mov
push
enter
popf
jg
popf
or
aas
adc
pop
sub
scas
pop
testb
jmp
inc
xchg
sbb
daa
fisttpll
insl
scas
add
xor
outsl
pcmpgtw
fisttps
add
push
xlat
xchg
push
fistps
push
iret
cmpsb
sahf
decl
mov
and
sahf
push
pop
mov
das
hlt
cld
into
in
or
lahf
das
or
pop
adc
cltd
jne
pop
lahf
mov
inc
inc
pop
adc
jg
lahf
lahf
jb
mov
maxps
and
xchg
add
into
in
lcall
cmp
outsl
int
dec
outsb
pop
inc
aad
fucom
xchg
pop
sub
clts
cmc
lahf
stos
add
jns
lahf
pop
pop
into
mov
ss
mov
mov
push
inc
mov
mov
popa
test
inc
seto
mov
cmp
and
daa
inc
dec
pop
adc
aam
fsubrs
push
shrl
sahf
push
addr16
dec
inc
popf
stos
aas
jmp
jbe
mov
sub
out
add
repz
repz
or
or
pushf
cmp
jp
test
iret
fwait
push
cmpsb
pmaxub
jns
fs
push
adc
adc
adc
adc
adc
repz
pop
or
sbb
push
pop
sbb
sbb
push
pushf
pushf
pushf
pushf
adc
pushf
pushf
pushf
adc
femms
out
cwtl
pushf
or
add
loopne
pop
mov
pusha
mov
push
rol
popf
jne
jnp
and
iret
mov
and
push
daa
mov
divl
push
cwtl
mov
pushf
je
mov
mov
mov
daa
push
jp
jp
mov
and
jl
and
and
sahf
and
repz
cs
push
mov
fs
mov
xchg
out
jns
push
into
pop
mov
mov
movl
addr16
mov
icebp
mull
mov
movsb
pop
or
add
xchg
out
sahf
adc
cmp
add
sub
out
or
cmovae
sbb
divps
adc
pop
adc
ljmp
lea
xchg
iret
cltd
movsb
dec
cs
sub
addr16
jo
ja
insb
cmp
mov
pop
mov
movsl
incl
sub
add
jns
daa
dec
xchg
add
in
jne
jge
add
es
mov
leave
test
mov
jns
ja
push
add
jns
in
fcomps
push
or
or
sahf
xchg
lock
or
cmpsb
push
or
cmp
or
dec
ds
xor
movl
add
sub
repz
jns
push
add
lcall
push
add
sub
aas
mov
addl
daa
or
xadd
leave
leave
call
cmpsl
ud1
aaa
or
add
adc
sbb
or
or
and
aad
cmpsl
jbe
pop
cmp
add
fstpl
push
daa
pushf
fiadds
mov
outsb
frstor
jbe
or
daa
or
mov
mov
sub
int3
xlat
push
enter
add
sub
imul
and
xchg
or
leave
inc
push
dec
test
fcoml
add
mov
mov
int
in
fisubrs
push
out
out
test
sub
pop
ret
test
daa
pop
sub
popf
sub
sub
mov
aas
xchg
add
cltd
test
mov
ret
incb
mov
inc
cmp
inc
daa
pop
or
xorl
out
data16
add
inc
iret
int3
cmpsb
loope
in
les
in
test
mov
stos
sbb
jmp
xor
sub
adc
stos
imull
xor
fdivrs
fnsave
aas
push
mov
lock
pop
pop
clts
jb
repz
invd
adc
jae
jb
and
or
andb
daa
ds
push
stos
xlat
dec
das
xchg
adc
stos
call
jnp
subl
inc
jmp
outsb
pop
leave
iret
rcr
pop
jecxz
in
jb
mov
xchg
pop
into
fisttpll
pop
push
scas
sbb
cmp
jmp
daa
pop
syscall
push
xor
cmp
invd
dec
push
push
or
outsb
repnz
imul
cmpsl
lods
roll
insb
cs
jbe
jb
xchg
adcl
ljmp
testl
push
push
sbb
jo
and
pop
push
dec
das
in
adc
jo
sub
daa
inc
test
or
mov
pop
push
loopne
push
ja
inc
dec
inc
aaa
dec
lods
push
lods
pop
add
jo
lods
shrb
ss
jo
imull
iret
in
in
lahf
cmpsl
push
cld
rorl
outsl
hlt
pop
and
dec
pop
push
xor
scas
xchg
dec
jnp
pop
ja
shl
jbe
addr16
lahf
cmp
cld
iret
cmp
add
sub
lods
cmp
xchg
xor
addr16
push
scas
aas
push
scas
push
scas
jne
jns
es
add
xchg
ss
jns
out
add
xchg
xchg
xchg
pop
add
add
add
dec
or
jae
dec
adc
je
xchg
pop
mov
adc
mov
inc
xchg
push
push
mov
mov
dec
outsb
ja
in
push
je
or
cmpsl
mov
cmpsl
jns
std
add
and
sbb
je
fwait
dec
inc
pop
cmovs
out
negl
pop
out
pop
test
hlt
int3
fimuls
mov
mov
mov
out
jg
dec
push
jbe
pop
pop
push
jo
js
cwtl
pushf
je
out
mov
daa
daa
xchg
fsub
call
daa
clc
sbb
pop
iret
jae
mov
adc
sbb
in
es
sub
and
mov
dec
inc
push
es
cmp
jmp
movaps
sub
cmp
repz
push
iret
jo
js
subb
mov
sets
rorb
ds
push
loop
xchg
add
rcrl
das
mov
xor
hlt
xor
add
mov
mov
xor
sub
mov
and
mov
addr16
mov
ret
xchg
mov
mov
mov
mov
pop
psrld
jb
ja
xchg
or
jne
xor
loopne
xchg
xchg
movsb
scas
mov
paddusw
popf
xchg
push
cmpsl
enter
fcmovne
repz
or
out
fwait
add
out
dec
testb
mov
or
sahf
out
fimuls
push
cs
adc
jns
out
adc
dec
adc
jns
out
adc
adc
sahf
push
adcb
sbb
sbb
jns
out
sbb
sbb
sahf
push
rcrl
in
sahf
out
and
and
and
cmp
repz
mov
adc
iret
es
daa
xor
ds
repz
dec
sub
fucomi
jbe
pop
addr16
outsl
pop
ja
int
outsb
mov
lahf
xchg
jmp
push
and
out
sahf
rcrb
push
rcrb
fcomps
sbb
loope
sahf
out
lock
pop
cmp
push
and
adc
cmp
repz
adc
or
mov
mov
repnz
ss
xchg
popl
pop
xchg
mov
jns
xchg
xchg
mov
mov
mov
pop
out
sahf
out
or
or
xchg
popf
jp
or
or
divb
mov
push
push
adc
push
jns
out
adc
adc
adc
jns
out
adc
push
sahf
out
sahf
adc
jno
sahf
out
sbb
mov
out
sahf
out
sbb
jns
sbb
int
in
in
and
loope
jmp
mov
outsl
cld
popl
scas
movzwl
and
jg
pop
mov
mov
pop
jns
cmp
xor
dec
mov
jns
aaa
push
adc
pusha
repnz
or
push
adc
jo
repz
dec
push
or
iret
or
or
xchg
push
or
iret
repz
roll
mov
aaa
jns
push
cmp
in
outsl
daa
repz
sti
mov
add
sbb
int
fistpll
jns
out
add
push
popl
add
dec
push
pop
pop
or
in
in
imul
scas
enter
jns
nop
mov
pop
sbb
dec
mov
dec
sahf
out
add
in
aas
daa
and
hlt
pop
cld
mov
outsb
daa
sbb
and
xor
out
dec
cmp
inc
adc
popf
fmull
pcmpgtw
jne
cmp
cmp
lea
popf
movsl
lods
sbb
cmp
mov
test
mov
cltd
or
cld
mov
iret
leave
in
adc
sbb
add
pushf
xor
ds
rdpmc
outsb
repnz
push
pcmpeqd
mov
push
outsb
jbe
mov
push
adc
pushf
dec
adc
mov
rorl
add
fimuls
sub
add
decl
or
repz
mov
sub
or
or
inc
mov
pop
pop
pcmpgtb
movq
cmp
fstpt
test
nop
adc
adc
mov
mov
sbb
fstpl
daa
iret
jae
call
repz
push
adc
pop
and
xor
cmp
mov
ja
cmp
cmp
pushf
dec
sub
sub
mov
add
fidivrs
mov
add
add
sub
ficoms
mov
or
push
or
xor
push
or
iret
leave
leave
leave
pop
fs
je
out
popf
cmp
test
mov
xchg
pushf
pop
movsb
paddusw
jns
sbb
lods
sbb
cmp
sbb
push
repnz
out
invlpg
or
sbb
xchg
xor
sub
mov
rcr
enter
das
push
mov
leave
and
scas
xchg
jb
addr16
push
add
lahf
stos
pushf
pop
jo
mov
jl
out
ljmp
addr16
fidivs
sbb
pop
daa
mov
jg
mov
dec
rcpps
jns
out
adc
adc
mov
jbe
jle
idivl
inc
push
sbb
jg
sbb
jg
push
js
and
test
pop
fwait
jg
lahf
mov
iret
in
jbe
mov
cmpsb
cmpxchg
repz
jae
push
sub
sub
iret
repz
sub
sub
fdivp
cmp
xor
iret
repz
xor
xor
lahf
ja
iret
cmp
ss
aas
call
sahf
cmp
cmp
sarl
ss
cmp
and
mov
sahf
out
aas
inc
inc
dec
in
in
sahf
inc
pop
inc
addr16
movsl
repz
push
adc
testb
and
lret
xchg
or
dec
fimuls
inc
dec
adc
test
inc
imull
sub
inc
jg
sarl
jg
shl
jmp
mov
pop
push
pop
push
and
repz
sub
inc
out
sahf
fistl
pop
or
jns
ja
test
xchg
adc
test
daa
iret
repz
in
pop
sbb
clc
lsl
popf
cmp
adc
push
sbb
iret
mov
dec
push
punpcklwd
push
dec
dec
insb
ja
fbld
addr16
xor
push
push
fistpll
ret
jno
sub
mov
xchg
inc
out
bnd
iret
cmp
push
add
les
cmp
xchg
fisttps
add
daa
iret
jae
or
dec
dec
or
out
push
pusha
or
or
jbe
orl
in
cltd
shld
scas
adc
unpckhps
lds
rorb
out
pop
fistpl
out
inc
ds
repz
sbb
lds
xchg
fcmovne
repz
sbb
sahf
out
sahf
xor
and
out
ss
jns
maxps
cs
cmp
repz
sub
mov
push
sub
insb
pop
adc
xor
inc
inc
dec
xor
sbb
pop
in
cmp
push
add
sahf
out
xor
sbb
dec
aas
push
pop
xor
lcall
mov
push
cmpsl
outsl
xchg
mov
pushf
pop
leave
iret
aam
fbstp
pop
ljmp
add
push
or
push
or
leave
repz
or
sahf
idivl
push
inc
adc
dec
adc
gs
adc
jg
mov
xchg
cmp
out
mov
sahf
out
sbb
sbb
out
call
cmp
enter
iret
push
enter
enter
and
sub
pop
test
testb
mov
and
push
out
dec
mov
push
out
out
outsb
add
jb
pop
lar
jns
out
jge
push
add
mov
sub
enter
out
fiadds
into
or
or
or
or
decb
or
adc
adc
mov
pop
leave
push
adc
daa
iret
repz
inc
adc
pop
fucomi
in
push
push
gs
jnp
daa
iret
repz
sbb
outsl
leave
js
dec
leave
pop
push
add
cmp
xchg
daa
add
or
in
and
and
sub
pop
xor
popf
cmp
wbinvd
cmp
or
repz
or
imul
movd
adc
repz
adc
adc
daa
test
sahf
out
sahf
sbb
sbb
sbb
cmp
in
sbb
out
push
out
hlt
cmp
repz
mull
jmp
xchg
int
xor
dec
xchg
lret
pop
cmpsb
sahf
fldt
add
iret
mov
jg
jns
ja
mov
dec
sahf
out
stos
mov
shl
iret
rorl
push
int3
adc
pushf
cmp
loop
in
clc
adc
outsl
jbe
add
push
int3
das
sbb
adc
out
daa
daa
push
sbb
and
sahf
out
sahf
das
sbb
inc
sbb
push
pop
push
pop
push
xchg
jg
int3
decl
cmp
repz
and
and
repz
bswap
int3
inc
and
dec
add
xchg
aas
insb
dec
sbbl
sbb
sbb
and
sub
xor
mov
arpl
jl
add
cmp
mov
mov
daa
daa
daa
daa
stos
stos
mov
fcmovne
shrl
syscall
lret
pop
xchg
out
sahf
loope
in
or
inc
ds
je
add
or
into
das
and
inc
pop
push
jae
cmp
adc
data16
repz
adc
jae
cmp
ljmp
xchg
iret
or
sbb
sbb
jns
sub
dec
and
leave
repz
xchg
push
and
pushf
cmp
mov
leave
repz
sub
mov
repz
das
sub
sub
sub
iret
or
movsb
fwait
mov
pop
jns
iret
repz
cs
aaa
push
ss
in
in
dec
movq
sahf
xchg
jbe
cmp
xchg
popf
push
push
cmp
mov
aas
scas
leave
into
fstl
inc
adc
into
cmc
lods
mov
emms
mov
pand
out
int3
fimuls
push
icebp
das
or
unpcklps
leave
repz
sub
inc
das
dec
addps
adc
out
in
adc
push
adc
das
pushf
xcrypt-ctr
cmpsl
push
pop
mov
in
in
sbb
jl
xchg
xchg
loopne
clc
push
add
sahf
out
lea
nopl
and
iret
jae
jns
jle
das
and
daa
mov
xchg
sub
sub
sahf
test
pop
das
cs
daa
iret
cmp
push
push
xor
mov
jno
sahf
xor
mov
paddsw
jb
in
jbe
outsl
push
sar
fnstcw
sete
das
inc
inc
dec
pop
mov
jp
repz
push
aam
push
aam
sbb
femms
in
xchg
in
shrl
sarl
mov
dec
push
aam
aaa
mov
aaa
es
or
in
push
les
or
aad
inc
xor
pop
enter
fcmovnb
pop
lea
xchg
cmc
iret
or
jae
inc
mov
adc
cmp
push
or
stos
rorb
inc
or
stos
sub
sub
ja
ss
testl
aas
inc
pop
jp
adcb
push
dec
and
inc
testl
pop
inc
and
aaa
popa
pop
cmp
pop
aaa
mov
lcall
xchg
scas
and
sbb
in
sahf
out
push
or
or
outsb
leave
in
in
or
or
or
daa
fmull
ja
adc
and
popf
pushf
inc
push
addr16
das
push
fucomi
push
mov
insl
xchg
out
pop
xchg
jb
fildl
orl
iret
add
sub
mov
sbb
aas
xlat
sbb
data16
dec
adc
mov
mov
pop
adc
in
add
and
mov
inc
popa
add
decl
adc
stos
adc
jb
add
movsb
add
addr16
mov
andb
fisttps
mov
jb
lahf
loopne
inc
jle
test
shll
mov
mov
add
mov
in
call
nop
pop
jle
adc
push
ficompl
fisttpl
pop
push
pop
fisubrl
xor
fcomp
loopne
jb
jle
shlb
gs
or
or
movsb
js
sahf
out
sahf
je
insb
push
out
push
dec
inc
xor
out
sahf
out
sbb
adc
int
jns
or
add
cld
repz
cmp
repz
lock
aaa
sti
int3
repz
les
mov
repz
mov
je
loop
cmp
push
or
iret
repz
outsl
mov
cmp
sub
jl
repz
push
cld
repnz
iret
repz
fadd
mov
cwtl
nop
cmp
cmpb
out
sahf
out
pusha
pop
push
dec
inc
mul
jns
xor
add
icebp
mov
sahf
out
push
fmul
mov
sbb
push
or
jl
push
inc
enter
inc
icebp
and
and
add
imulb
push
jo
inc
sarb
pop
add
jbe
js
or
add
add
push
out
inc
aas
sbb
imulb
push
push
or
or
xchg
call
insb
push
sbb
pop
icebp
jmp
push
push
mov
addr16
jp
push
pop
arpl
inc
xchg
pop
roll
push
adc
jg
loopne
inc
mov
inc
xor
xchg
mov
sbb
xchg
mov
add
mov
push
mov
pop
push
imull
mov
mov
int3
iret
add
sbb
pop
or
neg
cmpsb
mov
pop
in
pop
clc
rolb
out
sarb
adc
add
out
xchg
es
mov
sbb
or
adc
push
sbb
cmpsl
pop
push
sbb
add
dec
popf
xlat
pop
dec
or
jp
fisttps
repz
out
aas
lock
paddq
xor
jnp
add
mov
jns
out
mov
int3
or
pop
and
repz
repz
sbb
iret
push
sbb
sbb
push
aas
push
iret
repz
filds
push
and
and
cmp
repz
in
and
xor
lsl
dec
cmp
shr
pop
fldl
movups
xor
dec
sbb
xchg
cld
or
loopne
xchg
incl
fcompl
sbb
xorl
fistl
cmp
pop
js
out
cmp
repz
xor
dec
out
sarl
insl
add
push
pop
ja
loopne
sahf
xchg
mov
bnd
das
add
dec
insb
dec
enter
aas
pop
mov
daa
jns
add
or
repnz
push
ret
mov
adc
jl
push
and
sbb
jg
in
int3
into
sbb
rorl
and
sahf
mov
sub
inc
rcrb
and
sbb
incl
xchg
inc
push
add
inc
stc
mov
adc
mov
in
dec
pop
js
inc
outsl
loopne
jmp
xchg
test
mov
cmp
inc
mov
popf
sti
jmp
stos
push
inc
mov
repnz
test
pop
stos
clc
scas
adc
inc
cli
inc
jmp
aam
imul
loope
jp
iret
inc
gs
xchg
push
cmpsb
scas
mov
or
pushl
xchg
leave
dec
dec
pop
inc
in
xchg
cmp
xor
dec
cmpsl
in
cmp
sahf
xchg
pop
sbb
jecxz
pop
cmpsb
mov
aaa
popa
sar
mov
mov
pop
mov
xchg
clc
repz
mov
std
lcall
subb
fwait
xchg
and
ret
xor
sti
aas
jno
or
mov
pop
fs
cmp
dec
lea
aas
ret
shrl
mov
icebp
aas
rorb
and
cmpsl
out
aas
inc
cmpsb
mov
insb
scas
add
aas
xor
aad
mov
std
std
into
popa
test
call
ja
stos
in
das
dec
pop
loope
les
aas
xchg
les
jne
int
mov
addr16
mov
push
mov
xchg
aas
and
loop
mov
jp
popa
push
pop
sarl
jl
mov
pop
aas
xlat
out
das
lea
mov
inc
inc
aas
movsl
jmp
jg
sub
jge
mov
mov
fstl
arpl
int3
and
call
cmp
jp
and
cmp
std
jmp
mov
cmp
std
xlat
cmp
mov
sbb
jg
incb
jne
fldt
cmp
jno
shlb
out
dec
nop
pop
cmp
jmp
fisubl
xor
push
lahf
inc
pop
mov
sub
dec
in
ss
push
ljmp
pop
add
rcr
jge
call
mov
xchg
cmp
push
andl
dec
dec
bound
outsl
std
orl
pop
ficomps
frstor
lcall
mov
mov
inc
movzbl
inc
inc
and
ds
insb
inc
inc
push
dec
inc
das
mov
notl
and
dec
dec
inc
push
dec
inc
aaa
xor
jg
insl
adc
cmp
call
push
inc
dec
inc
jo
inc
popa
pusha
mov
outsb
push
outsb
jbe
imul
push
lods
sub
outsl
mov
aas
dec
insb
imul
dec
push
mov
iret
imul
xor
inc
jbe
je
or
pop
pop
dec
push
inc
dec
push
int3
sahf
orb
pushf
push
test
addb
inc
test
out
dec
inc
gs
gs
and
adc
push
movsl
mov
fildl
addr16
outsl
add
dec
outsl
push
dec
pop
jbe
insl
mov
push
push
xchg
cmpsb
add
xchg
out
cmpb
push
mov
dec
cld
cmpsb
das
or
xor
daa
and
bound
or
out
dec
inc
dec
daa
jg
dec
xor
dec
jae
imul
xor
sahf
loope
mov
jns
dec
addl
lahf
push
push
les
push
mov
jmp
data16
les
jns
lret
push
add
push
insl
rcl
and
inc
sbb
out
das
or
adc
dec
dec
in
mov
testb
dec
jbe
dec
and
xchg
push
add
cmpsb
je
xchg
int
xchg
bound
inc
cmpsb
dec
iret
jmp
dec
popa
jne
arpl
add
hlt
outsl
dec
dec
add
pop
mov
push
lret
push
xor
push
pop
mov
mov
add
inc
xchg
push
or
in
pop
mov
js
cli
dec
push
or
mov
push
outsl
dec
sbbl
test
aad
idivl
pop
test
push
notl
imul
mov
cmp
push
jb
and
mov
lds
das
push
xlat
and
inc
push
clc
jp
lock
stos
push
in
jne
push
inc
stos
bound
jg
push
popa
dec
dec
mov
xchg
les
stos
movsl
pop
push
cmpsl
int3
sbb
pusha
out
lds
sub
xchg
sub
push
push
insb
pop
xchg
inc
popl
xchg
in
mov
data16
rcl
add
outsl
outsl
andb
ja
sbb
popa
cltd
insb
and
ret
inc
arpl
adc
jne
pop
pop
sbb
les
stc
lahf
sbb
adcl
orl
push
push
dec
sub
xlat
dec
push
inc
push
dec
lahf
inc
or
xchg
or
lods
or
inc
xor
inc
sub
inc
jo
pop
orl
cmp
scas
call
mov
ret
pushf
and
push
push
cmpsl
out
dec
sub
dec
pop
xor
sub
dec
and
inc
jmp
aam
fdivrl
mov
or
arpl
aaa
test
mov
imul
dec
push
pop
push
jne
les
add
loopne
push
mov
xor
rcll
outsl
addr16
push
sub
push
xchg
mov
pop
les
shl
sbb
inc
sbb
out
out
icebp
push
rorb
jns
mov
andb
cmp
out
sbb
call
cmp
repz
or
bound
test
rclb
iret
jae
cmp
int3
ds
add
fsubs
lahf
decl
xor
ja
popa
push
out
mov
les
hlt
push
xor
xchg
fs
lcall
movsb
mov
aad
mov
rclb
mov
sub
mov
nop
adc
push
jno
repz
test
ficompl
jmp
mov
hlt
movl
insb
adc
test
fs
std
in
leave
mov
add
insb
push
arpl
psubd
or
or
outsb
cmp
imul
addr16
add
aam
dec
std
test
decl
movsl
cli
test
xor
leave
mov
lods
jecxz
fdivs
jne
filds
or
fcompl
shrl
cmp
ficoms
push
xlat
enter
mov
and
mov
cltd
xchg
addb
movsl
mov
sub
mov
ljmp
jl
das
adc
stos
sbb
data16
inc
fdivl
jno
add
rcrb
mov
mov
movsl
in
lahf
xor
mov
js
stc
call
mov
sbb
push
sub
insb
jmp
pop
arpl
hlt
push
imul
insb
sbb
xor
dec
add
in
xchg
push
insb
jnp
add
shl
decl
adcb
cmc
fnstenv
adc
mov
mov
bound
ficoml
loope
rorl
popa
mov
into
pop
cmp
mov
inc
movsl
fisttps
fistl
movsb
sti
hlt
shrl
imul
mov
sarb
add
incl
add
pop
dec
or
cmp
add
daa
adc
or
and
call
test
or
mov
popa
into
push
stc
ficomps
leave
fldcw
and
xlat
pop
cmp
lcall
or
mov
shlb
mov
lcall
mov
cmp
ljmp
fildl
push
fdivl
or
test
fs
ds
or
or
push
mov
mov
scas
add
mov
pop
jge
xchg
shlb
or
inc
push
imul
xorb
sbb
push
imul
lcall
aam
loopne
rorl
int3
dec
frstor
fistpll
mov
mov
aad
mov
call
mov
shll
push
repnz
addr16
cmpsb
fldl
mov
dec
ss
ljmp
or
scas
testb
pusha
jp
inc
ret
out
pusha
fists
addr16
mov
jns
imul
mov
lret
sbb
outsl
and
xchg
ja
int3
add
mov
das
es
cmp
mov
pop
mov
add
mov
cmpsl
call
ret
shlb
sbb
cli
inc
fs
es
pushf
mov
insl
add
ss
jmp
addr16
jb
push
ljmp
orb
adc
mov
jnp
sbb
xchg
or
out
fdivrl
jmp
or
rcl
xchg
aam
clc
mov
push
int
mov
mul
ja
outsl
pushl
ja
mov
out
cli
jo
ud0
cmp
pop
or
adc
sahf
gs
ljmp
cli
clc
sar
imul
push
js
or
push
addl
mov
cmp
jmp
notl
pusha
rorb
imul
push
scas
fcompl
fldenv
filds
cmp
aaa
push
scas
mov
fidivrs
mov
jmp
repnz
lret
mov
cmpsb
mov
call
mov
sub
push
mov
jp
mov
dec
popa
les
sbb
xchg
sub
aaa
mov
or
ffreep
out
add
popl
mov
mov
sbb
outsl
mov
jne
ja
rclb
fimuls
je
insb
imul
rdtsc
lahf
pop
inc
jbe
push
jns
arpl
arpl
jbe
mov
ja
push
inc
insl
jnp
insb
add
inc
jne
or
insl
addr16
adc
mov
ret
xlat
sbb
sbb
scas
push
out
cmp
push
jp
dec
inc
and
frstor
bound
dec
or
inc
inc
xor
dec
inc
js
push
dec
adcl
inc
jno
idiv
push
xor
pop
inc
cmp
pop
bound
xor
aaa
cmp
popa
arpl
cmp
arpl
xor
xor
bound
ficoml
movsb
popa
push
inc
jbe
pop
pop
inc
shlb
fs
mov
push
cmp
inc
xor
inc
mov
int3
dec
sbb
dec
inc
mov
mov
fbstp
inc
mov
mov
ss
jbe
arpl
into
into
cli
or
inc
aas
mov
cmc
or
sub
mov
inc
mov
sbb
push
sub
sbb
or
adc
popa
jns
push
adc
insb
or
mov
and
cmp
ret
pop
add
aas
inc
add
mov
push
lret
push
in
and
jg
mov
stos
insl
and
jae
popf
int
xor
inc
aas
stos
ljmp
aaa
sbb
fs
sbb
or
pop
xor
inc
inc
inc
add
rcrb
lods
sbb
aad
dec
add
mov
dec
lea
xchg
sbb
mov
hlt
andl
insl
mov
popa
mov
push
jge
xor
fidivs
adc
arpl
add
mov
push
clc
xchg
into
pop
mov
push
fdivs
or
pusha
add
mov
add
lock
stc
mov
dec
or
inc
mov
inc
outsl
pop
mov
add
lahf
mov
fwait
incl
or
xchg
imul
adc
rorb
lds
dec
adc
addr16
or
push
js
popa
jo
lahf
or
add
push
outsl
outsl
test
mov
add
cmp
push
jno
lds
and
sub
sub
in
nop
test
pop
cmp
aam
pop
ljmp
xor
sarl
jo
test
xchg
pop
adc
insb
jns
das
mov
and
sbb
je
push
and
dec
clc
insb
or
cs
test
add
inc
push
bound
adc
xor
ret
test
ja
pop
adc
xor
jno
popf
xor
rclb
add
sub
adc
jns
or
negl
dec
mov
mov
xlat
dec
jo
imul
pop
and
mov
outsl
xchg
fisubl
aad
aas
mov
popa
add
jg
push
outsl
rcll
push
sbb
and
pop
insb
mov
push
loop
aaa
pushf
and
cwtl
jb
adc
dec
test
daa
push
inc
lds
aas
pop
inc
addl
and
inc
xchg
mov
sbb
xchg
lcall
add
xchg
in
xchg
iret
incl
pushf
jae
mov
pop
popf
out
pop
push
lcall
decb
rcll
adc
add
idivl
mov
stos
mov
call
loop
push
push
jmp
roll
data16
sbb
pop
and
xor
addr16
inc
popf
adc
imul
in
cwtl
std
dec
lahf
rolb
aad
jb
jbe
loope
call
adc
ret
or
dec
and
mov
sbb
push
dec
sub
push
incl
jbe
ds
movsl
fistpll
add
mov
call
imul
imul
out
sbb
adc
add
cmp
call
loop
daa
mov
pop
lods
push
enter
pop
add
jge
sub
mov
ljmp
cmpb
inc
lods
adc
sub
cmp
iret
outsl
cld
or
ljmp
jl
fisubrs
test
push
push
aas
loopne
adc
ss
repnz
pop
dec
push
imul
gs
dec
fmuls
jmp
data16
fists
jecxz
jecxz
call
call
lds
mov
sti
repnz
xor
shll
dec
out
lods
push
push
mov
and
push
sar
call
push
sub
aam
jmp
imul
mov
loope
add
xlat
decl
sub
shll
dec
shlb
inc
aad
cmp
jae
pop
or
orb
pop
cmp
call
pop
sbb
test
mov
jbe
push
fucomi
pop
mov
add
jae
inc
aam
push
inc
cld
lock
das
push
ficoml
lods
subl
jg
lcall
sahf
dec
fstps
and
adc
push
fdivrs
scas
and
cmp
fs
jmp
lods
shlb
fimull
repz
aad
dec
push
and
int
hlt
loopne
cmp
into
popa
jecxz
xchg
fcmovnb
inc
jecxz
xchg
xchg
jb
inc
xchg
or
sub
add
add
sar
mov
mov
inc
repz
push
cltd
testl
push
jns
enter
mov
cld
loope
fildll
mov
lcall
test
inc
aaa
inc
cmpsl
and
call
lock
sub
int
cs
push
mov
xchg
in
call
sub
xor
ja
loopne
aaa
in
enter
bnd
imul
pop
adc
pushl
les
scas
add
xlat
inc
xor
jno
js
xlat
in
add
sbb
mov
jmp
jmp
push
pop
lcall
imul
stc
lret
sub
mov
sub
cltd
es
push
je
or
adc
in
adc
inc
sub
fbstp
mov
sbb
mov
xor
cmpsl
jne
xor
push
jbe
aad
outsb
insl
stos
xor
mov
cmp
fmull
insl
call
rcrb
test
pop
pushf
and
lods
sbb
fcoml
addl
push
incl
shr
mov
add
mov
lock
inc
mov
dec
xchg
gs
and
ljmp
jb
sub
sbb
sbb
sbb
dec
mov
jmp
sub
xchg
inc
xchg
mov
mov
aas
mov
sarb
add
cwtl
mov
mov
stos
sti
xchg
int3
jae
out
ret
sbb
mov
and
negb
fidivrl
jge
lea
cli
mov
xchg
neg
add
pop
ficomps
add
in
clc
mov
outsb
loopne
test
arpl
push
pop
inc
loop
mov
push
sbb
or
or
data16
inc
inc
inc
dec
xchg
cmpl
dec
sbb
call
out
add
gs
decl
or
mov
sub
dec
test
outsb
unpcklps
jecxz
cmp
imul
mov
notl
dec
cmp
jmp
mov
call
mov
xor
aaa
enter
fldenv
jmp
add
pop
or
and
dec
stc
and
in
decl
or
test
and
fistpl
mov
ljmp
and
mov
inc
leave
add
rcrb
or
jnp
call
and
aam
mov
das
es
mov
cmpsl
cmp
mov
xchg
mov
fcoms
jg
cmp
test
dec
push
incl
jg
cmp
inc
fldcw
addr16
xlat
fwait
mov
lods
ret
push
bound
stos
scas
sub
in
incl
cld
jmp
ds
ss
pop
subl
pop
add
aad
out
clc
ljmp
and
or
iret
dec
sahf
xchg
push
xchg
or
push
mov
stos
add
call
or
cltd
push
cmp
popa
cmp
in
lock
je
xor
stc
inc
idiv
dec
call
and
mov
or
hlt
arpl
pop
das
sbb
loope
pop
scas
xchg
mov
cmp
jge
lock
adc
daa
stc
mov
xor
inc
int
fidivrs
jmp
sub
dec
xchg
lock
ret
test
xor
daa
pop
xor
mov
jo
repz
cld
incl
ret
inc
fsubr
push
out
out
jns,pt
push
pop
or
cmpsb
xchg
mov
jo
in
call
and
cmp
cli
test
mov
xchg
cli
dec
push
jle
and
inc
enter
mov
shl
loope
and
movsb
arpl
setg
dec
sbb
call
pushl
sub
movl
mov
jmp
call
mov
xor
repnz
pop
and
and
jp
lahf
negl
xor
and
decl
and
mov
rcl
xchg
lahf
ja
pop
idiv
sub
stc
shlb
in
push
jo
adc
arpl
push
mov
and
lods
icebp
leave
jbe
sbb
ljmp
int3
cli
or
popf
loop
sti
imul
pushl
ja
cmc
jl
rol
pushf
xor
inc
mov
call
inc
mov
call
loopne
pop
rorb
jle
mov
pushf
xchg
jmp
outsl
xor
mov
jle
ss
add
jp
sub
dec
xchg
fbstp
fisttpll
sbb
cltd
loopne
xor
and
pusha
ds
mov
ljmp
xchg
cltd
in
outsb
nop
cs
orl
xor
push
iret
loope
and
sub
add
jge
xchg
add
adc
cmpsb
mov
into
stos
push
int
leave
mov
in
push
lock
mov
and
iret
test
out
jb
out
cs
filds
pop
push
divl
inc
addr16
sbb
xlat
out
rorb
pop
sub
mov
ds
sub
fsubs
lret
scas
repnz
incb
or
std
dec
cwtl
xchg
push
adc
mov
xchg
mov
dec
pop
movsl
ffree
pushf
outsl
scas
iret
lahf
fsubl
jecxz
mov
dec
xor
mov
xchg
xlat
sti
movsl
sbb
ja
les
or
adc
out
clc
mov
ds
mov
es
lret
mov
fbld
pushl
nop
push
push
roll
enter
popa
or
cmp
shll
pop
xor
cmp
fnsave
out
je
loope
push
inc
push
sub
lcall
loop
or
mov
mov
std
notb
iret
cmpsb
ljmp
xchg
add
mov
cmp
jbe
leave
dec
arpl
dec
jg
xor
sub
cld
pushl
mov
nop
or
mov
out
ja
jmp
xchg
aaa
ds
mov
pushl
into
loopne
jecxz
cli
jnp
xchg
ljmp
jns
in
idivb
mov
and
cmp
jecxz
jp
mov
call
dec
and
jns
into
pop
fdivrl
pop
adc
push
repnz
and
jbe
dec
scas
pop
push
push
inc
cmp
push
mov
mov
xchg
and
or
insb
jmp
out
mov
xor
mov
addr16
in
call
adc
or
adc
popf
sti
mov
push
and
rcl
push
fdivr
ljmp
lcall
mov
xchg
mov
xor
pop
dec
xor
lock
or
sub
pop
push
jbe
fbstp
jae
lods
cmpsb
jg
rcl
int
lret
xchg
sbb
mov
aam
hlt
push
lret
in
jno
pushl
or
or
inc
scas
dec
adc
jmp
push
adc
imull
incl
inc
ret
xor
mov
jnp
jbe
xlat
push
push
test
jle
mov
int
clc
call
loopne
xchg
repz
sarb
fcos
xlat
mov
aad
aad
out
cmpl
sbbl
ficomps
leave
or
mov
xor
sbb
mov
jb
insb
iret
xlat
popf
sub
pop
push
jmp
iret
mov
jle
call
mov
ret
addr16
mov
stc
cmp
fsubr
fdivl
inc
nop
incb
cmp
add
adcb
stos
inc
std
ljmp
repz
ret
fucomi
sbb
pop
push
xchg
ljmp
push
pop
dec
push
dec
loop
jmp
adc
fmuls
shrl
subl
incl
fwait
jne
and
lahf
lret
mov
cmp
mov
adc
adc
pushl
adc
out
xchg
hlt
sbb
outsb
and
jecxz
and
cwtl
in
jl
dec
jae
sbb
out
decl
hlt
xchg
jne
xlat
or
addr16
xor
jl
popf
dec
sbb
sahf
mov
out
or
mov
pop
sar
adc
jno
mov
cli
mov
rol
add
cmp
in
jge
shll
or
rol
repz
ljmp
push
adc
sti
mov
xchg
add
test
outsl
cmc
push
pop
xchg
mov
dec
stos
scas
inc
push
es
lcall
push
insl
andb
fcomps
lret
scas
dec
repnz
mov
mov
mov
inc
push
inc
cmp
mov
mov
rcrl
ljmp
adc
movsb
add
sbb
pop
cmp
pop
fsubs
in
xchg
bound
dec
jmp
sbb
shrl
cmc
jp
sbbb
roll
sbb
cmpsl
jmp
imul
xor
pushl
jecxz
outsb
lods
in
les
or
jne
mov
xchg
sbb
dec
adc
aad
push
cmp
sar
mov
dec
rcr
ret
adcl
dec
retw
add
jg
xchg
loope
das
outsb
mov
mov
sahf
bound
cld
mov
incl
mov
adc
jb
cmp
mov
stos
fisubrs
jo,pt
shr
movsb
mov
push
std
add
or
mov
shl
push
xchg
mov
decl
stc
les
dec
mov
inc
cmp
push
hlt
cmp
sub
mov
call
hlt
mov
mov
data16
pop
pop
or
mov
push
pushl
jnp
js
movsl
inc
inc
sbb
repnz
popf
sbb
mov
rolb
dec
fsubl
xchg
push
jg
pushl
dec
pop
je
aas
decb
fstp
imul
mov
push
add
icebp
jmp
leave
jge
repnz
dec
fimull
lcall
mov
ljmp
cmp
fisubs
jecxz
cmp
stc
call
loope
dec
movsb
xchg
inc
cmp
jmp
mov
imul
lret
sub
stc
xchg
dec
ljmp
incl
jp
sub
adc
imul
ljmp
push
ficoms
clc
std
in
lcall
pusha
aaa
into
xor
lret
sub
arpl
jmp
mov
push
pop
out
scas
adc
push
movsb
push
mov
test
xor
das
xor
lcall
pop
cld
and
and
std
xchg
mov
xchg
repnz
add
stos
sbb
xor
test
pop
or
mov
sbb
pop
aam
scas
dec
lcall
lahf
cwtl
mov
pop
xor
jge
icebp
test
and
cmpsb
lret
call
rclb
adc
inc
xor
jmp
push
and
dec
inc
sbb
pop
test
jmp
xchg
daa
fwait
inc
inc
xor
push
movb
pushl
sub
pusha
cmp
inc
push
gs
scas
jns
punpckhdq
scas
cmp
decl
insl
call
pop
rol
fists
sti
shlb
mov
xor
mov
pop
loope
xor
inc
jl
inc
add
mov
cmpsb
iret
leave
pop
mov
fwait
push
cmp
cwtl
push
sub
push
ljmp
cli
jmp
mov
pop
repnz
jle
scas
jge
cmpsl
ret
push
cwtl
sub
call
xchg
in
inc
mov
pop
ret
adc
or
ljmp
shll
sar
mov
xchg
fwait
mov
test
hlt
shrl
pop
int
adc
xor
push
cmp
xchg
xor
mov
stos
int
minps
jg
arpl
sub
call
lret
and
or
mov
sub
cs
mov
cli
push
imulb
test
sahf
push
push
mov
xlat
pop
bound
and
sub
pop
iret
cmp
mov
aad
push
std
aas
inc
arpl
sub
movsb
adc
cmp
mov
test
cmp
and
ljmp
movsb
or
divb
nop
lea
fldt
dec
fwait
add
lcall
pop
bswap
mov
lock
adc
jmp
sahf
comiss
call
push
aad
test
sbb
flds
or
sahf
popa
in
stos
mov
dec
adc
push
cmpsl
pop
jl
or
push
popf
mov
mov
lods
mov
xchg
jae
pop
clc
sbb
nop
mov
aaa
pop
int3
adc
mov
mov
cli
jle
mov
dec
jmp
test
fldl
add
dec
incl
outsb
lea
in
xchg
dec
aaa
or
loopne
test
or
pushl
cmc
les
mov
xor
out
mov
mov
aas
decl
adc
push
es
je
sub
mov
lds
sbb
inc
xchg
test
pushl
data16
mov
sub
lcall
sti
mov
stos
add
outsl
jg
ljmp
mov
int3
dec
and
mov
lods
into
dec
inc
pushf
lea
fdivrp
decl
imul
adc
cltd
pushf
mov
push
insb
sbb
cld
movsl
adc
int
into
and
mov
ficompl
pop
popf
clc
or
sub
dec
into
cmp
sbb
xlat
jge
divl
mov
incl
ja
mov
aam
push
push
sub
in
xchg
and
push
call
shlb
mov
jmp
fwait
int3
pop
flds
push
repnz
pop
jge
adc
sbb
imul
test
sub
jge
mov
mov
adc
outsb
inc
jp
sbb
daa
insl
leave
sbb
pop
push
cmp
xchg
in
adc
jne
in
and
std
stos
cmpsb
decl
lock
mov
xor
stos
mov
call
push
and
std
movsl
mov
in
add
mov
stc
fsubrs
mov
xchg
sub
call
jb
fistps
dec
mov
cmp
mov
test
cli
xor
mov
incl
cmpl
in
mov
cld
adc
bound
cmp
test
jmp
stc
out
and
pop
cmp
mov
aad
gs
idivb
sti
scas
lods
fcoms
pop
aas
push
lock
std
xchg
mov
add
or
dec
xchg
and
mov
and
cltd
outsl
out
popa
ljmp
mov
shrb
ret
and
sub
adc
loope
scas
cwtl
decl
test
pop
mov
pop
or
cmp
sub
inc
xor
jmp
test
pop
xchg
pop
popf
lods
pusha
lret
call
shrl
jp
jmp
fwait
jno
and
inc
imul
lahf
hlt
or
ljmp
mov
out
cs
stc
sbb
cmc
and
xchg
mov
inc
cwtl
stc
fs
out
cmp
sti
pop
xor
cmp
daa
mov
sub
jb
out
mov
push
inc
call
in
pop
jnp
test
cmp
out
out
cltd
test
push
xor
jns
mov
leave
lcall
inc
in
xchg
pushf
call
pop
pop
movsb
jle
dec
rorl
and
sti
and
jp
ret
stos
lea
insl
bound
xor
push
js
ret
in
or
sahf
leave
addr16
mov
push
fidivrs
jbe
test
sbb
xchg
xchg
mov
pushl
dec
push
pop
add
aam
shr
decl
stos
fcompp
pop
inc
lods
push
scas
enter
and
pop
mov
cmp
loopne
ret
jmp
das
jbe
sub
ror
cmp
and
mov
mov
mov
in
les
idivb
push
loop
sbb
cmp
clc
decl
xor
adc
aaa
xor
mov
jp
mov
xchg
mov
scas
cmp
leave
inc
lcall
pop
push
lret
lock
or
lahf
xor
test
inc
adc
lock
jmp
pop
mov
fmull
add
shr
add
decl
sti
cmpb
mov
aas
xor
add
popf
mov
xchg
jp
mov
pushl
and
out
fcoml
jg
test
mov
call
jae
mov
lcall
mov
mov
and
push
sti
sub
inc
pop
xchg
or
cmpsl
repz
xor
leave
xor
push
bound
test
das
cmp
xor
imul
lret
push
stc
push
les
pusha
int
inc
outsb
loope
pop
or
imul
pushl
outsl
mov
adc
repnz
mov
int3
rcrl
mov
lcall
fs
jmp
jb
push
and
xchg
xor
cmpsb
cmp
loop
shrb
and
jmp
xchg
cmp
fcmove
dec
fistpll
cmp
mov
xchg
mov
lret
and
decl
inc
gs
int3
add
pushf
pop
stos
mov
std
jnp
adc
outsb
xor
dec
shlb
fcomip
pop
mov
mov
dec
jl
sbb
lret
out
lods
sbb
vmovntps
decl
push
fst
mov
fcmovnbe
pushf
mov
fsubr
mov
xorl
and
adc
xchg
andl
xchg
lahf
fisubrl
pop
loop
das
out
repz
fucomp
stos
jae
jne
pop
push
testb
lcall
popa
or
jae
lods
pop
pushf
in
data16
ret
inc
jg
mov
cmp
mov
lahf
xlat
or
fsubrs
or
daa
or
std
sbb
mov
leave
push
jns
jle
jno
cmp
scas
lahf
cmp
jl
imul
call
cwtl
pushf
dec
rorb
mov
sub
mov
in
imul
shlb
cwtl
leave
imul
jmp
pop
mov
pop
call
sbb
loop
mov
xchg
aas
sub
fnsave
fldl
incb
hlt
loopne
push
xorl
stc
mov
or
fstl
jne
or
mov
lds
jmp
addb
pop
or
insb
inc
ds
ljmp
pop
or
pushf
fildll
mov
push
cmc
add
insb
fmuls
mov
iret
ljmp
lock
jno
shll
or
and
gs
pop
mov
cwtl
movsl
imul
xchg
sarb
fmull
int3
xchg
push
loop
push
fdivrp
jmp
cmp
icebp
jg
xchg
test
pop
add
or
sub
pushl
xchg
mov
adc
adc
into
arpl
push
sub
test
adc
enter
stos
dec
ficoml
mov
aas
dec
lret
push
pop
out
push
orl
lcall
push
cmp
shrl
subb
jl
cmpsl
aam
out
fdivl
outsb
push
push
dec
div
mov
out
ficoml
or
xorl
sub
fwait
enter
movsl
sbb
mov
ja
jne
lods
mov
decl
push
mov
sbb
dec
xchg
int3
scas
leave
or
pusha
stos
fs
pushl
call
cs
mov
ds
add
xor
lock
and
lcall
addl
sbb
push
loopne
sub
sbb
xchg
dec
pop
ljmp
pushl
mov
pop
mov
push
pop
xlat
adc
loopne
ficompl
inc
ljmp
call
pusha
mov
cmpsl
mov
mov
test
fadd
std
sub
call
xor
jl
jns
mov
pop
lcall
cmc
sbb
lcall
and
xchg
inc
mov
dec
leave
ljmp
cmp
mov
sub
movsb
in
sti
ljmp
pushf
fidivl
imul
mov
js
cltd
js
ljmp
mov
lock
and
xchg
inc
sbbb
sbb
fisttpl
movsb
mov
jmp
cmc
pop
jp
or
test
lods
xor
dec
call
ret
xor
dec
mov
testb
push
aam
or
fwait
and
sbb
mov
push
inc
jb
aas
mov
mov
xlat
adc
incl
mov
or
shl
mov
jg
sub
jmp
ret
pushl
dec
mov
push
lcall
outsl
sub
push
fldt
pop
add
sbb
sar
imul
pop
pop
lods
repnz
mov
mov
clc
mov
icebp
lods
js
sub
inc
int3
cmpsb
dec
and
and
xchg
and
pop
mov
mov
dec
movsl
pop
rep
out
add
jg
dec
lahf
enter
ljmp
jl
xchg
mov
and
xchg
sub
jnp
imul
in
sub
mov
flds
cmp
xor
lcall
jno
imul
mov
ror
push
scas
repz
sbb
add
cmpsb
stos
pop
inc
or
sub
int3
mov
imull
call
es
out
and
jo
ljmp
push
cmp
inc
inc
or
inc
lds
and
popa
fst
jae
cltd
imul
push
dec
incl
xchg
xor
in
sub
inc
jo
cmp
cmp
and
mov
test
int3
push
fnstsw
dec
fcomip
jmp
adc
xor
int3
xchg
jno,pt
arpl
ja
xchg
xor
incl
adc
ljmp
xchg
jp
dec
test
jg
sbb
jecxz
sar
clc
push
sub
ljmp
hlt
repz
mov
ljmp
shrb
in
cmp
cli
sbb
inc
push
test
push
adc
stc
fcmovnb
das
ret
and
das
rcrb
mov
mov
aaa
outsl
pop
inc
cli
out
imul
aas
lcall
mov
mov
mov
int3
xchg
mov
rolb
push
ljmp
loop
in
add
fists
mov
clc
and
cld
fimull
jp
and
xor
inc
stos
jecxz
pop
push
jecxz
cltd
push
lea
jp
xor
push
add
jg
lcall
push
xor
dec
jnp
lret
sbb
fnstcw
xchg
cs
insb
in
lock
aad
ret
pushl
cmp
movsl
add
std
mov
aam
inc
add
ret
push
jle
xchg
es
cmp
lds
sub
sbb
add
mov
mov
inc
js
push
aam
inc
mov
fdiv
aad
sarb
stos
mov
cmp
pushl
jle
je
std
loop
insl
bound
aad
xorl
jge
jns
std
incl
lds
sahf
push
inc
bound
jmp
sub
push
test
mov
aam
push
in
pop
push
push
fdivrl
xchg
aam
xchg
sbbb
xchg
out
inc
std
adc
incl
xlat
fisttpl
jmp
cmp
in
gs
lea
daa
pop
push
or
inc
adc
in
sub
test
dec
or
mov
dec
mov
adc
cmpsl
stos
sbb
test
sub
ljmp
inc
mov
push
mov
imul
fcomps
adcb
lds
or
inc
mov
decb
sub
fdivl
or
icebp
sahf
cmpsb
dec
fbstp
stos
lods
mov
loop
push
jge
jb
pop
xor
push
mov
inc
test
decl
dec
mov
xchg
fiadds
jne
call
mov
cmp
mov
sub
dec
ffreep
cwtl
insl
pop
push
xor
mov
fnstcw
mov
sar
ljmp
push
jo
push
xchg
std
sub
out
lea
mov
in
fs
aas
xor
mov
jg
daa
pop
ljmp
ljmp
mov
out
add
bound
rcl
in
add
pushf
push
dec
hlt
jp
push
jmp
jp
rcrb
bt
mov
jno
inc
cmc
mov
fs
mov
add
jns
lcall
popf
lods
insl
outsl
shl
in
mov
adc
in
add
out
mov
ljmp
add
repnz
sbb
call
icebp
xorl
xor
daa
scas
mov
repz
or
rcrb
xchg
inc
decl
mov
sbb
lret
lods
inc
sar
pop
inc
jbe
pop
ss
sub
neg
fisubl
enter
mov
push
fwait
sbb
push
fldt
or
sarb
xor
sbb
mov
decl
sub
or
call
dec
out
mov
mov
ljmp
or
in
push
enter
aaa
imul
pop
arpl
jno
pushf
mov
cltd
addr16
cmp
test
xchg
xor
mov
pop
scas
in
jle
mov
cmp
pop
push
stos
and
fcomip
ljmp
xlat
rcl
iret
mov
movsb
jne
mov
jnp
std
jae
mov
outsb
xchg
arpl
cmp
pushf
cmpsb
pop
jl
lds
mov
mov
jmp
sub
shll
fs
int3
cmpsb
scas
imul
mov
cmpsb
outsb
pop
aaa
xchg
setno
mov
mov
sbb
es
xor
fwait
decl
insl
push
inc
mov
mov
js
enter
push
loop
xor
xchg
fs
call
sbb
pop
or
call
push
mov
bound
mov
aam
push
ljmp
jmp
subl
pop
xacquire
cmp
test
int3
lods
jg
jmp
xor
pmaxsw
xchg
aam
xchg
adc
mov
jle
sub
test
push
aaa
cld
pushl
fildll
add
xor
cs
pushl
insl
pop
mov
push
es
cmc
idivb
xor
jg
and
das
dec
in
jg
pop
xchg
or
andb
jne
cmp
dec
test
jae
ljmp
cs
addr16
jl
shll
sbb
xchg
idivl
jbe
es
enter
pop
pop
cmc
lcall
adc
xchg
bound
sti
lock
adc
lock
pop
ret
aam
jle
addb
sub
int3
fnstcw
add
mov
fidivrl
jo
daa
xor
cmp
xor
aaa
shrb
loopne
lret
cli
inc
pusha
push
popf
repz
test
scas
mov
pop
aam
aad
data16
loopnew
ds
clc
pop
icebp
sbb
incl
inc
dec
out
add
xor
cli
mov
lret
cld
std
aad
jle
push
into
fwait
scas
decl
and
pop
lahf
fmul
mov
mov
bound
and
rorl
lcall
mov
sbb
ss
bnd
push
out
fsub
and
sub
ljmp
pusha
lahf
int3
mov
ret
orb
ja
loop
jnp
jp
or
jp
mov
std
add
int3
test
pop
leave
cmp
es
test
push
push
lret
lcall
pusha
ficoms
pusha
into
data16
inc
in
mov
lods
lds
inc
lods
xchg
ljmp
mov
cwtl
mov
jmp
mov
std
into
push
push
sbb
rcr
inc
add
inc
adc
mov
repnz
jae
xchg
pop
sub
adc
ficompl
out
mov
jno
lcall
incl
inc
push
xchg
imul
repz
stc
adc
lcall
push
xchg
lods
jl
sti
lret
and
call
std
inc
push
cmc
jns
flds
xchg
ljmp
shr
inc
jecxz
imul
sbb
adc
jg
dec
mov
jns
fstps
nop
in
mov
test
mov
xchg
pop
mov
lcall
cmp
clc
xor
xor
push
xchg
jbe
inc
mov
xchg
sbb
cmp
out
xor
adc
data16
mov
jecxz
lcall
xor
xchg
popa
addr16
call
jne
and
jbe
in
or
in
ret
lahf
pop
mov
aas
mov
cmp
xchg
push
push
std
decl
les
add
gs
cmp
xchg
cld
xchg
lea
call
push
add
repz
sub
sub
mov
xchg
unpcklps
les
lcall
push
or
cmpsb
adc
test
inc
repnz
imul
incl
in
fwait
jbe
push
inc
stc
loopne
iret
loop
mov
mov
pop
xor
xchg
sbb
pop
sti
loope
fxch
cmp
add
mov
iret
lcall
ffree
jp
xchg
push
fucom
mov
loopne
nop
arpl
mov
call
lret
mov
mov
cmpl
shrb
sarl
cmp
call
or
fwait
je
push
jns
inc
icebp
mov
incl
test
sub
inc
xchg
adc
stos
mov
mov
imul
mov
ljmp
xor
lods
pop
xchg
insl
fwait
pop
xor
pop
lret
mov
sahf
aas
loope
ret
repnz
mov
add
outsl
mov
loopne
pop
mov
adc
dec
scas
cmc
push
mov
ret
or
mov
ljmp
mov
fisttpll
fbld
mov
xchg
jge
mov
pop
push
or
imul
out
aad
push
mov
mov
inc
lret
cs
pop
das
int3
cli
pop
mov
adc
ljmp
fwait
and
movsl
push
sub
mov
btr
lods
jg
cltd
xor
mov
mov
push
daa
inc
roll
inc
adc
scas
mov
jmp
xchg
mov
scas
adcl
out
lea
push
adc
cmpb
stc
push
sbb
imul
push
js
test
push
popa
mov
and
jns
cmpsl
ljmp
lcall
push
testb
jae
scas
hlt
adc
cmc
loopne
mov
cmc
mov
cmpsb
sub
lcall
xchg
mov
lahf
imul
not
jl
cmp
cmp
fsubrs
mov
jns
xorl
add
mov
inc
stos
gs
push
xor
ljmp
add
fnstsw
sbb
xor
andb
or
js
inc
lahf
out
or
or
sub
push
enter
inc
add
add
cmc
mov
xor
cmpsl
pop
cmp
pop
push
repz
ret
or
pushl
jmp
repz
sub
fisubrs
jmp
mov
ja
ja
stc
or
fdivs
mov
test
pusha
loopne
cmp
mov
arpl
incl
dec
fidivs
clc
cmp
out
push
jl
rolb
jno
lret
lods
push
xchg
ljmp
dec
hlt
das
iret
sub
out
cltd
push
jns
cmp
popf
fnsave
into
mov
into
pushf
inc
lret
pushl
dec
xor
ret
jb
int
shll
jbe
inc
in
xlat
jae
pop
inc
xor
pop
inc
push
dec
pop
scas
in
adc
jb
cmp
shrl
cmpsb
pop
in
scas
jmp
mov
lods
adc
inc
not
and
gs
cmp
add
scas
je
push
nop
inc
jmp
lret
decl
pushf
cmpsl
rorl
inc
sbb
mov
jno
incb
cmp
pushl
inc
jae
mov
xchg
into
icebp
fdiv
mov
jbe
aaa
cmp
inc
pushf
lock
fcomps
push
add
adc
idiv
incl
decl
xchg
adc
pop
decb
pop
shll
aam
shll
mov
lret
cltd
jmp
int3
popa
call
or
addr16
xor
and
enter
incl
add
push
dec
rcrb
jl
subb
xchg
int3
jle
in
rorb
jbe
in
rcl
incl
outsl
or
dec
add
or
jl
pop
cltd
cmp
push
decb
dec
pop
je
pop
scas
xchg
std
mov
lds
pop
jno
pop
xor
stos
jo
mov
pushl
and
out
xchg
dec
rcr
dec
ja
pop
outsl
inc
dec
sbb
fdivs
push
ja
mov
dec
or
xor
mov
xchg
mov
sahf
pop
popf
inc
enter
mov
dec
cmpsb
dec
mov
fisttps
lea
sbb
xor
out
or
pop
push
call
inc
xorb
inc
xor
in
fmuls
iret
ss
dec
xchg
push
stc
lret
leave
loope
mov
incl
jp
ss
out
lock
lret
ds
loop
pop
mov
and
call
or
leave
mov
pop
fsubs
xchg
stos
divl
imul
adc
or
add
ljmp
push
cmp
mov
lcall
mov
mov
push
xchg
jmp
aaa
fisubl
xor
lods
xchg
decl
sbb
add
sub
pop
or
ds
push
sahf
loop
sahf
insl
rclb
dec
fsubrs
xchg
xchg
xchg
pop
pop
test
repz
and
cmp
dec
mov
leave
aas
out
clc
dec
jl
lods
jmp
loop
mov
mov
lods
dec
insb
daa
ja
sar
jmp
adc
mov
mov
add
inc
aad
xor
pop
sub
mov
dec
pusha
xchg
movsl
std
mov
jne
jnp
and
popa
test
pushl
or
xor
lret
xor
mov
jb
push
add
dec
in
pop
mov
dec
inc
inc
xchg
push
push
sbbl
adc
and
insl
fcomip
lcall
test
push
bound
add
addr16
push
call
adc
fisubrs
mov
es
movsb
jmp
test
adc
jns
fldcw
pushf
jo
lea
pushl
movsl
xlat
jg
sbb
lret
cmp
testb
cld
jmp
lea
addr16
and
sub
decl
jl
sbb
push
mov
lret
inc
lahf
jmp
stc
pushf
pop
sub
push
mov
std
mov
popf
call
jbe
orl
dec
pop
pop
ret
loop
xchg
mov
xor
clc
subl
add
or
ds
jb
out
or
mov
jmp
cmp
fsubrs
jp
and
inc
lret
insl
movsb
sub
cmp
push
mov
ljmp
ficompl
adc
jmp
test
scas
lea
mov
sub
stos
push
shrb
and
dec
add
xchg
jecxz
dec
pop
test
incl
lock
adc
jmp
cld
sub
mov
roll
std
cmp
inc
stos
adc
xor
push
idivl
int
jnp
xor
dec
inc
data16
mov
jno
fisubrs
pushl
inc
sbb
sub
jl
cli
pop
mov
out
test
pop
out
push
repnz
add
adc
and
sub
scas
adc
sub
dec
lcall
daa
ljmp
jnp
dec
mov
or
lea
jl
jge
mov
fldcw
shlb
lahf
mov
scas
xchg
push
mov
adc
movsb
xbegin
ljmp
mov
push
fildll
xchg
jp
ret
test
lods
rol
sub
sub
ljmp
inc
inc
sti
xor
movsl
or
testl
gs
imul
outsl
cli
stos
pop
out
xchg
cltd
sahf
mov
add
fdivrs
mov
repz
and
pushl
inc
mov
cmp
adc
outsb
cltd
cs
mov
andb
mov
dec
xor
lcall
push
xchg
test
mov
out
clc
sub
addr16
decl
sub
fcmovbe
xor
xchg
mov
jo
inc
xorb
and
cs
dec
pop
xchg
scas
fistpll
push
xchg
pop
xchg
movsl
iret
xor
fmuls
sbb
jmp
jo
sbb
ja
repnz
mov
leave
outsb
iret
aad
test
jne
or
fsubs
sbb
jb
xchg
xor
stc
pop
sarl
mov
inc
nop
gs
stos
incl
sbb
or
xchg
aas
loop
cmp
inc
lcall
xor
cmp
es
mov
sha256rnds2
enter
js
jmp
xor
jmp
insb
pop
sbb
je
arpl
sbb
out
lods
cli
lods
mov
iret
sbb
pop
lea
lret
cmp
add
lret
push
stos
jg
cwtl
scas
push
mov
outsl
or
loopne
xchg
outsb
loopne
ljmp
rcr
adc
sbb
lret
cmp
cmp
jns
push
inc
clc
mov
ljmp
cmc
sarb
pop
mov
fs
xor
in
and
add
ficoml
decl
lock
js
push
mov
cmp
cltd
mov
jnp
lods
je
mov
icebp
aad
or
cwtl
aam
push
xchg
ljmp
lods
out
add
lahf
inc
inc
or
or
les
jmp
test
add
pop
aad
sbb
mov
jecxz
xchg
sbb
shll
decl
add
test
push
dec
in
fcmovu
xor
push
incl
in
dec
adc
mov
inc
xchg
mov
mov
in
mov
loopne
dec
pusha
pop
ljmp
adc
ljmp
sbb
or
das
push
mov
or
lea
cli
xchg
fsubs
lret
mov
mov
test
ljmp
test
add
clc
push
sarb
or
and
call
in
jl
fisttpl
cld
jbe
jmp
mov
jp
pop
shlb
sarb
outsb
frstor
hlt
jg
push
mov
les
add
imul
rorl
test
mov
mov
mov
fisubl
xchg
and
fdivs
loope
ljmp
mov
push
data16
pop
jecxz
xchg
sbb
cmp
lods
jl
loopne
adc
add
dec
xchg
decl
pop
dec
inc
push
notb
pop
cmpsb
hlt
adc
icebp
and
jg
cmp
popf
inc
mov
xor
dec
pop
xor
loop
popf
or
add
js
sbb
ljmp
stos
and
jge
xchg
push
push
cmc
dec
std
xor
loopne
or
mov
decl
pop
or
cltd
push
loopew
outsl
out
fsts
adc
dec
pop
pop
mov
cld
and
mov
push
movsl
adcl
push
imul
push
lock
cmpsl
std
ja
mov
xor
lds
mov
testl
xchg
data16
dec
call
cs
sub
xor
fstl
jo
or
out
pop
cmpsl
xchg
sub
sub
adc
push
xor
inc
xchg
mov
sti
jne
sbb
pushl
mov
outsb
sbb
sbb
test
cli
nop
push
decl
jo
imul
add
sub
inc
repz
cli
decl
xchg
cwtl
jg
loope
sbb
aam
in
js
and
insb
jmp
ds
int
dec
cmpl
lcall
shrl
and
fmull
dec
lods
push
jae
xlat
scas
data16
jmp
aaa
jmp
fcomp
mov
daa
ljmp
aaa
inc
and
loop
mov
nop
and
pushl
pop
enter
mov
cmp
test
gs
xchg
mulb
pop
call
mov
add
in
fwait
popa
int3
or
sub
ljmp
rolb
xlat
push
pop
push
push
ljmp
arpl
pop
mov
sarb
jns
mov
lcall
adc
lret
or
movsb
mov
sbb
dec
xchg
sub
xor
add
fs
sbb
jmp
into
aaa
es
subb
xor
dec
xchg
leave
sub
sbb
inc
fidivl
scas
add
mov
inc
jbe
push
mov
loopne
aam
mov
jo
sbb
push
push
dec
je
dec
test
mov
fucomp
incl
xlat
mov
xchg
xlat
cltd
sub
out
jp
lea
push
xor
sbb
xchg
push
push
test
and
loopne
or
ficompl
inc
push
add
repz
or
pop
int3
and
rorl
stos
aam
xchg
imul
add
outsb
fwait
sbbl
mov
sbb
in
enter
std
decl
data16
push
jge
lock
pop
ja
xor
jg
xchg
adc
fs
mov
mov
mov
repz
ret
sahf
jge
js
stc
push
cltd
dec
mov
mov
in
rcll
lock
inc
pop
fists
pop
mov
outsb
jecxz
mov
xor
call
jmp
push
fcom
mov
jo
imul
pop
inc
cmp
sub
call
jbe
mov
fcomip
mov
je
sarb
fs
xchg
addl
lret
jmp
lods
out
aad
xchg
and
hlt
adc
mov
roll
cmp
aad
cmpsb
or
dec
pop
shr
jb
pop
out
cmc
sub
addr16
insb
mov
add
cmc
jo
out
lcall
sahf
loopne
dec
push
cmpsl
cmp
sti
jle
mov
adc
pop
in
push
mov
pop
stos
outsl
jmp
jns
push
inc
rcll
cmp
repz
jg
lret
jae
sub
dec
sub
jb
fdivr
pushl
push
or
sub
pop
pusha
ror
das
sbb
mov
aad
mov
mov
mov
pushl
fisubrl
cwtl
rcrl
mov
fcompl
mov
or
scas
fadds
mov
mov
push
mov
rcrb
rcrl
ljmpw
and
incl
push
push
cs
jnp
out
sub
popf
mov
pop
adc
hlt
lcall
jmp
fst
mov
add
jne
mov
in
xor
xchg
push
mov
inc
pop
sahf
cmp
dec
mov
push
dec
jp
xor
jo
xor
mov
pushf
test
cld
xchg
jp
leave
sub
add
nop
fldenv
cwtl
xchg
stos
mov
jle
faddl
cmc
cmc
rolb
mov
fiaddl
mov
xchg
or
lahf
fstl
out
jns
jl
jb
data16
mov
add
lret
push
jmp
call
fwait
adc
xchg
jle
sbb
or
les
icebp
jbe
popa
or
cmp
mov
mov
notl
or
sbb
mov
data16
decl
and
shlb
mov
push
push
cmc
fldl
in
xchg
xchg
outsb
sub
loopne
xchg
cs
mov
or
inc
jb
xor
dec
aam
xchg
push
dec
incb
pop
mov
popa
popa
or
pop
xchg
hlt
mov
push
xor
ljmp
cmp
loopne
cmp
popa
push
loope
jbe,pt
outsb
xchg
mov
cmp
pushl
inc
lds
add
mov
jbe
movsl
inc
leave
pop
call
or
dec
and
pop
jno
mov
xlat
stos
cld
mov
shl
adc
xchg
mov
testl
js
fdivrs
inc
xchg
fistpl
jmp
scas
jg
test
jle
mov
lcall
popa
adc
jl
pop
jle
leave
gs
mov
mov
mov
aad
pop
jo
call
pushf
dec
mov
fcmovnbe
mov
jg
xchg
sbb
push
decl
and
mov
clc
insl
or
das
xchg
lahf
or
mov
push
pop
sbb
lcall
inc
jo
push
or
and
popf
lret
jmp
and
inc
or
in
pop
mov
decl
jecxz
cmc
lea
sbb
pop
in
lds
mov
push
jne
ficoml
fimull
decl
aaa
pop
std
push
outsl
xchg
cmp
pop
dec
inc
xlat
test
shl
sbb
ljmp
call
sbb
insl
or
adc
insl
or
aaa
cmp
faddl
iret
idivb
imul
sbb
and
shlb
inc
add
fdivl
fcomps
je
sub
call
dec
out
xorb
testb
pusha
dec
sbb
incl
pusha
ja
js
int
push
push
jle
mov
push
test
sbb
popf
push
xchg
sar
sbb
push
gs
cli
std
mov
or
sub
lods
fs
scas
xlat
xlat
mov
call
xchg
shlb
js
in
bound
and
push
mov
push
lods
xchg
mov
mov
dec
sbb
pop
daa
inc
pop
jmp
ljmp
pop
cld
xlat
filds
imul
mov
add
mov
pop
sub
push
lea
add
pmaxub
in
js
stc
mov
je
jns
decl
jb
outsl
dec
in
adc
iret
scas
stos
cmp
fidivrl
mov
add
jnp
mov
test
push
test
mov
xchg
push
inc
push
or
fcompl
adc
cltd
ret
push
leave
pop
ds
jg
nop
sbb
jmp
in
repnz
adc
je
js
cmpsb
cmc
adc
lods
xor
dec
cld
call
mov
jmp
add
cwtl
cld
rcll
and
push
jg
xor
sbb
pop
in
jmp
push
outsl
ljmp
mov
or
mov
lods
inc
adc
shll
push
mov
mov
idivb
jmp
lcall
out
cwtl
ffree
stc
mov
jg
jge
jecxz
mov
jno
out
cmp
cmp
inc
pop
mov
cmpsl
mov
push
jno
push
adc
ds
adc
fdivrp
pushl
push
add
stos
ret
sti
push
lock
mov
push
ret
push
aam
cld
fiadds
aaa
cs
decl
sub
loop
sbb
iret
jl
add
add
add
scas
sub
inc
shll
shlb
xchg
into
sbb
scas
cltd
ja
add
leave
fildll
roll
jg
aas
pop
xchg
inc
ds
repnz
loopne
push
lea
jl
in
adc
decl
add
xchg
rorb
arpl
xor
adc
jl
mov
call
mov
test
loop
mov
inc
icebp
mov
test
lods
in
out
mov
stos
xchg
jl
sub
jle
xor
lds
rorb
pop
and
gs
incl
arpl
mov
cltd
shll
packsswb
lds
int3
jne
repnz
es
jl
jmp
idivl
call
iret
adc
and
lods
nop
pushl
pop
add
popf
pop
inc
xor
cltd
pop
dec
or
shll
fsin
pushl
xor
mov
ds
pop
add
fwait
pop
sbb
adc
shl
jg
orb
cli
mov
es
sub
fbstp
sbb
je
push
cmpsb
jl
sahf
aad
out
rorl
add
jg
out
sub
cli
ljmp
andb
mov
in
outsl
data16
cwtl
mov
mov
clc
decl
out
pop
cld
and
cmp
cltd
lea
mov
in
in
mov
bound
fdivr
pop
cld
scas
mov
xchg
sub
push
das
inc
adc
addl
ds
sbb
mov
cmp
xor
rolb
aaa
movsb
dec
mov
nop
iret
into
negb
into
jb
shll
pusha
adc
mov
ja
movsl
mov
jmp
mov
jns
jmp
sbb
ret
xchg
and
and
adc
xor
xchg
jg
fwait
incl
xchg
sub
lods
mov
out
push
inc
inc
cmp
mov
into
add
dec
leave
imul
xlat
adc
ret
lcall
add
decl
sub
cmp
cmp
ss
lods
std
adc
popf
call
lods
push
decl
clc
imul
nop
filds
sbb
xchg
fnstcw
stc
shll
dec
lcall
loope
sbb
orl
mov
lret
mov
pushf
mov
xchg
mov
scas
xchg
cmc
sub
jb
xchg
neg
xchg
jns
pop
jle
arpl
dec
jmp
out
call
mov
les
cmp
mov
mov
insl
sbb
nop
cmp
aam
xor
call
int
dec
pop
xchg
movsb
pop
loop
inc
jne
iret
mov
pop
xchg
sbb
jmp
dec
or
iret
call
xlat
xor
adc
clc
dec
xor
std
sub
pushl
inc
test
xchg
mov
rorl
xchg
jecxz
lods
add
pushl
xchg
fcmovnbe
xchg
dec
clc
and
call
lcall
sbb
jmp
rclb
jmp
mov
pop
out
dec
push
test
cwtl
jb
rorb
cld
fmuls
out
jb
ljmp
das
call
mov
je
loope
mov
ljmp
cmp
test
test
mov
dec
dec
imul
flds
call
cltd
dec
mov
fwait
sbb
sti
sub
xor
dec
mov
lahf
mov
jecxz
dec
outsl
pop
daa
pop
in
pop
jns
xchg
sbb
push
das
ss
aam
mov
inc
push
push
lds
push
out
clc
incl
movb
vunpckhps
cmovnp
std
sarl
call
push
loope
add
fmull
test
push
mov
cmp
jmp
in
sbb
mov
loopne
shl
jne
notb
cmp
and
mov
pushl
xchg
ss
jmp
clc
or
aam
fcmovbe
cmp
sbbb
test
icebp
je
sar
ret
decl
aad
sub
add
push
jg
scas
addl
dec
jl
addr16
jnp
les
aad
das
inc
sub
dec
shl
hlt
inc
lahf
clc
test
ljmp
ljmp
pop
sbb
lea
push
rol
cmp
loop
push
and
inc
lahf
mov
decl
dec
rcr
movl
push
pop
data16
pop
cmp
sbb
xor
in
jne
decl
mov
ret
leave
dec
fwait
pop
les
dec
mov
subb
stc
jmp
mov
dec
aaa
ja
sbb
inc
or
xchg
xchg
ret
cmpsl
inc
mov
pushf
or
movsl
pop
dec
nop
loop
and
lcall
fdivl
and
dec
push
adc
idivl
mov
int
mov
cwtl
adc
ret
xor
lods
sub
pusha
mov
aam
jmp
std
xchg
lock
mov
inc
inc
dec
ds
or
xor
xlat
je
sahf
cmp
lcall
cmc
mov
ja
call
rol
mov
ljmp
mov
incl
arpl
or
cmpsb
pop
fs
inc
push
clc
adc
lcall
push
sti
jmp
jns
stos
sbb
mov
sub
mov
mov
fstl
stc
decl
jl
xchg
in
mov
das
clc
gs
jae
dec
loop
cmpps
push
sub
lcall
add
and
xor
lahf
pop
inc
in
pop
lock
mov
jecxz
lcall
push
add
inc
jg
fcmovbe
inc
rsm
pop
clc
jno
pop
sbb
xor
int
jmp
popf
mov
dec
dec
sahf
ret
push
xlat
scas
mov
scas
addr16
lret
dec
pop
incl
push
dec
pop
mov
mov
ror
ja
adc
fwait
lcall
call
loop
gs
adc
repz
fimuls
ret
shrb
cmc
pop
ficompl
jge
xor
in
pushl
mov
xor
pop
cmp
je
stc
sbb
andl
push
cmp
scas
mov
jg
lcall
int
xchg
in
xor
in
inc
inc
push
test
cltd
cmp
decl
sahf
cmc
add
push
jle
loop
mov
mov
lea
incl
add
shlb
ficompl
mov
shll
or
pop
test
mov
fdivrl
adc
xchg
push
and
sub
jmp
push
stc
andl
xchg
mov
and
push
mov
add
push
rolb
addl
lret
ljmp
je
push
test
and
mov
lock
cmp
mov
push
cmp
mov
ret
in
cmc
mov
dec
cli
lcall
and
lret
pop
pop
into
rorl
shl
mov
xor
aam
and
int3
ljmp
adc
cmp
mov
test
enter
mov
lcall
pop
jno
or
inc
int3
fstpl
cmp
push
mov
fsubrl
jmp
inc
xor
movsl
lcall
fisubrl
shl
push
lahf
fidivrl
inc
push
cs
scas
xor
pop
ljmp
inc
jo
mov
jbe
pop
cmp
jg
imul
in
aas
lock
pop
bound
lahf
imul
jmp
sbb
es
out
cmp
dec
mov
ljmp
sub
mov
stos
add
std
scas
inc
mov
fldcw
js
fwait
inc
cmpsl
jmp
mov
jns
pop
jnp
out
pushf
fsubrs
dec
cmp
sbb
stc
mov
xchg
ret
mov
pushf
push
call
or
gs
sub
dec
aam
fbld
and
sbb
add
pushl
pop
push
lret
adc
jno
leave
push
out
test
inc
aaa
push
loope
enter
mov
lret
push
bound
jmp
movsb
xlat
es
xor
pop
sbb
sbb
cmc
and
push
push
shr
hlt
stos
cld
outsl
lret
decl
push
popa
cwtl
sti
xor
or
pop
push
jge
stos
xchg
dec
push
push
je
add
jecxz
enter
lcall
shll
insl
fistpl
and
xor
imul
xor
lret
mov
out
nop
movsl
lods
cli
dec
out
jp
mov
in
incl
cmc
test
jp
aaa
fwait
arpl
aas
mov
add
sub
xchg
scas
loope
jmp
jmp
jns
sbb
fwait
jns
inc
xlat
out
mov
pop
ja
mov
xchg
sbb
sti
rcll
sub
pop
insb
inc
nopl
pusha
stos
sti
shlb
ret
xor
push
cwtl
lret
sbb
jg
ret
lcall
add
or
and
cmp
add
aad
lahf
jmp
outsb
xchg
js
mov
in
mov
addr16
fnsave
ja
xor
jae
ret
xchg
negl
lock
xor
pop
cmp
pop
jmp
iret
mov
jmp
jle
mov
decl
call
push
enter
cwtl
iret
xor
dec
lret
mov
loop
inc
imul
test
xchg
pop
pop
add
inc
int3
js
nop
xchg
jmp
sub
inc
cmp
or
pop
js
mov
daa
jno
aas
xlat
cmp
jmp
dec
lret
mov
pop
cmp
jns
jl
push
cmp
bound
popf
rolb
rcrb
mov
mov
sti
repnz
sahf
pushf
xchg
movaps
mov
cwtl
cmpsl
sbb
cmp
pusha
or
dec
xor
mov
lods
pop
insb
sub
call
lds
out
repnz
lods
xchg
xchg
cmc
mov
xchg
popa
stos
add
add
fwait
pushl
loopne
dec
imul
ds
cmpsl
nop
mov
test
ljmp
sbb
jl
push
sbb
xchg
mov
sub
mov
xchg
push
cmp
cli
push
hlt
lcall
dec
dec
add
mov
xchg
mov
loopne
cli
out
pop
add
jae
jmp
addr16
pusha
imul
js
xchg
sub
mov
mov
or
in
sti
mov
mov
inc
and
ja
in
nop
sub
mov
push
and
mov
aaa
aaa
sti
xchg
test
fcoms
ljmp
pop
xchg
lock
in
in
cli
movsb
cmp
dec
jns
lods
lock
orb
pushl
std
call
dec
outsl
jmp
imul
cmpsb
sti
cmpsl
bound
into
jbe
pushl
cmp
sub
mov
dec
mov
in
movsb
mov
lock
push
out
jo
push
enter
sub
cld
and
pop
xchg
je
data16
out
mov
add
sbbb
int
scas
pop
cmp
cmp
lds
mov
xchg
inc
cmpl
dec
jnp
scas
sbb
int3
addl
dec
test
adcb
cmp
scas
imul
popa
inc
pushf
inc
out
dec
fldt
mov
into
aam
sbb
jae
repnz
ljmp
dec
xor
mov
cmpsl
xchg
dec
sub
pop
push
call
and
mov
iret
aad
loop
jae
jbe
mov
mov
shll
fisubrl
lods
incl
inc
jmp
inc
ja
and
fs
nop
es
movsl
sbb
add
jmp
dec
fcomip
ljmp
adc
in
cli
bound
popa
shr
js
pop
xchg
rcl
mov
decl
popa
cmp
jb
out
out
pusha
jnp
fcomps
sahf
mov
mov
fidivl
lea
jnp
dec
jmp
xchg
fsub
inc
and
movsb
pop
rolb
mov
cmpsb
mov
mov
out
cld
imulb
sbb
dec
dec
cli
mov
decl
jp
xor
test
xchg
les
and
call
cmp
mov
xchg
ret
mov
shr
cld
sbb
xchg
jnp
fstps
aaa
rol
add
jbe
ljmp
cwtl
jnp
loope
lods
fstpt
popf
in
sbb
addb
push
leave
mov
lcall
movsb
movsb
rorb
es
inc
mov
mov
jno
fdivrl
sti
sub
mov
call
or
push
jno
cmc
add
out
push
inc
incl
data16
outsl
mov
jg
push
popl
pop
aam
lcall
std
pop
out
mov
lock
and
add
add
adc
inc
mov
daa
bound
out
push
adc
shll
cld
cmp
pushl
ljmp
cmpl
pop
pop
mov
sahf
dec
in
push
rcrl
lcall
test
sub
jnp
xor
sub
call
movsb
push
nop
popf
popa
jmp
ljmp
xor
pop
add
pushf
movsb
xchg
call
addr16
adc
loope
mov
push
lret
enter
adc
in
xchg
or
cmp
lcall
push
cmpsl
adc
add
clc
xor
inc
lcall
clc
pop
mov
cltd
inc
icebp
sti
pop
rorb
jb
push
mov
mov
push
int3
xlat
fdivrl
mov
jmp
pop
out
pop
cltd
xchg
sti
mov
repz
es
andb
cltd
push
or
jmp
call
jno
and
or
or
mov
adc
addr16
add
incl
dec
cld
xor
inc
and
or
jo
lcall
movlps
jmp
ljmp
neg
pop
adc
mov
rcrb
cmpsl
jg
mov
lds
jne
repnz
incl
fisttpl
adc
or
shll
push
lock
call
push
xchg
mov
pusha
in
adc
mov
jnp
dec
in
xchg
cmp
jno
mov
sub
repnz
arpl
mov
push
js
sbb
lcall
jnp
aaa
or
mov
out
fs
in
dec
jmp
add
xchg
fistpll
incl
mov
mov
lock
sub
push
insb
add
mov
js
in
mov
pop
divl
ljmp
out
fs
jbe
jl
mov
decl
lods
sahf
in
xchg
jle
movsl
arpl
loope
aas
mov
pushl
sbb
push
mov
andb
xor
mov
or
test
lods
lea
aaa
cld
call
out
in
add
push
dec
xchg
push
add
into
mov
push
dec
fucomip
cli
pushl
faddl
iret
lahf
divb
xorl
lret
mov
dec
repnz
fsubr
fidivs
in
lods
xchg
pusha
fcoms
cs
and
rorl
sti
cmp
out
sti
sbb
std
pushl
cwtl
test
out
mov
pop
mov
or
movl
ja
pop
jb
jae
call
push
lcall
push
add
fsubs
mov
ljmp
or
fistpll
cli
jmp
pop
push
sub
cbtw
jle
inc
dec
ficomps
sub
jmp
sub
xchg
dec
in
adc
inc
or
dec
stos
shll
aam
push
dec
mov
movsl
lahf
fbstp
xor
and
lcall
rcrl
push
popa
pop
jge
adc
lds
sbb
push
adcl
mov
ljmp
cli
mov
bound
cwtl
push
negb
or
imulb
adc
repnz
fdivl
mov
jle
inc
movsb
inc
xor
loopne
mov
lods
jmp
or
incl
pusha
or
or
in
mov
popl
ds
mov
or
ljmp
iret
xor
xor
movsl
xchg
jb
mov
out
outsl
ds
negb
lret
jle
dec
dec
dec
movsl
inc
pushf
pop
lret
sbb
and
insb
mov
jmp
mov
add
les
pop
sbbl
and
fists
fcmovbe
xchg
push
jmp
scas
call
dec
inc
xor
or
xchg
xor
mov
out
cmp
decl
insl
adc
xlat
lds
rorb
jno
jnp
push
mov
or
xchg
and
negl
dec
dec
jbe
jne
loopne
cltd
je
mov
pop
sbb
in
add
jnp
out
push
decl
repnz
push
rcll
hlt
and
or
mov
ret
mov
jb
sub
roll
or
sub
inc
cli
adc
adc
call
push
mov
int3
nop
call
ljmp
inc
xchg
mov
pusha
cmp
and
lret
inc
outsl
in
insb
repnz
or
mov
das
mov
sbb
jb
mov
sub
lcall
sahf
sub
mov
mov
mov
fimull
scas
cmp
jb
fisubrs
or
and
push
mov
adc
negb
sahf
stc
xchg
push
decl
out
inc
cmp
fisubrl
pop
leave
push
test
test
cmovle
call
cmp
add
or
and
xor
cmp
pushl
pop
or
pop
pop
aad
xchg
test
push
sahf
mov
mov
push
add
xchg
pop
push
in
inc
xchg
call
pushf
pushl
and
mov
fcomp
cmp
cmpsl
orb
sub
ja
xor
xchg
jmp
mov
mov
sub
fdivrp
sbb
lcall
lea
mov
repz
cs
add
jbe
mov
inc
pushl
sub
test
xchg
test
mov
and
fwait
xor
mov
mov
incl
mov
ljmp
pop
bsr
dec
add
pop
iret
mov
sbb
incl
sub
ror
jno
pushf
xchg
xor
adc
call
aam
into
mov
jo
jmp
push
mov
or
add
mov
std
aaa
outsb
repz
xor
pop
push
xchg
and
cmc
dec
lcall
dec
clc
cmpl
add
jae
aam
xor
mov
enter
pop
je
sar
mov
sub
sbb
sbb
test
sti
jno
or
ljmp
shrb
inc
and
fistpl
int
gs
test
lret
pop
push
lahf
sub
call
pusha
clc
or
shl
xor
sub
lods
cli
call
dec
push
imul
iret
call
rclb
or
xor
decl
into
std
push
ja
adc
sub
lcall
out
aaa
xor
sbb
jno
push
and
test
pop
or
xchg
mov
sahf
inc
in
pop
test
call
mov
cmp
dec
ljmp
incl
mov
rcll
mov
mov
jb
dec
xor
js
mov
test
decl
scas
or
cmc
cltd
in
xchg
pop
xor
mov
cmp
xchg
mov
cltd
cmc
add
call
push
and
sarb
jmp
and
push
mov
or
push
and
sbbb
lcall
jle
ret
in
ljmp
jnp
xchg
call
loop
dec
add
mov
adc
bound
movsb
sbb
test
push
hlt
aam
pusha
ljmp
je
xchg
push
mov
mov
xor
fisttps
rcll
scas
cli
lcall
cmpsb
repnz
dec
fistps
cmp
sub
xchg
cld
shlb
jmp
add
push
or
ljmp
test
popa
xchg
dec
inc
cmp
sbb
add
mov
adc
add
shlb
mov
sahf
add
cwtl
dec
imul
aam
fists
jge
xor
dec
mov
sbb
jl
rcrl
dec
imul
sbbb
mov
fisttpl
sbb
incl
lds
in
mov
movsl
sbb
aas
jb
arpl
test
lods
inc
jg
push
jmp
incl
cmc
mov
jge
mov
int3
mov
add
xchg
dec
cmc
jge
pop
scas
or
fs
cmp
cmp
loopne
lock
jo
mov
pop
insl
cmp
xchg
xchg
push
xor
dec
jmp
xchg
inc
rcrb
imul
mov
stos
jno
ficomps
mov
sub
inc
pop
rcll
outsb
or
ds
and
ljmp
fwait
mov
fs
cmpsb
xlat
fsubs
xchg
movsb
dec
call
std
notrack
jge
repnz
cmp
bound
movsb
hlt
decl
aas
roll
cmp
sbb
cs
movsl
ret
incl
es
lea
imul
inc
sarl
hlt
clc
test
arpl
or
mov
inc
pop
push
in
addr16
sti
pop
xor
dec
adc
incl
mov
mov
jne
sti
sbb
mov
call
mov
fcmove
aas
sub
push
popa
push
insb
loopne
shll
mov
mov
sbb
mov
mov
adc
sub
das
inc
push
int
or
jle
add
incl
mov
ret
sbb
jg
xlat
xchg
adc
xor
jnp
sbb
add
clc
xchg
ds
pop
add
mov
mov
aad
cmc
jmp
andb
popf
xor
xchg
push
xchg
pop
lcall
sbb
xchg
ss
jge
add
and
into
scas
imulb
sahf
dec
inc
cld
ljmp
dec
pop
lcall
dec
cltd
pop
std
mov
cmpsl
rcr
lret
mov
mov
test
call
test
mov
fsubp
and
lahf
leave
inc
cmp
es
dec
mov
movsb
cmp
ljmp
xchg
pop
lcall
pop
mov
dec
sub
psadbw
ljmp
mov
jmp
mov
jns
stos
adcb
mov
rcll
cltd
popa
test
adc
pop
repz
sbb
or
movsl
fcomip
fisubrs
rolb
inc
scas
mov
movd
pop
ljmp
int3
incl
mov
out
in
roll
int
dec
scas
mov
and
xchg
lcall
outsl
aad
andl
sbb
imul
push
adc
inc
mov
or
decl
dec
call
dec
roll
test
lahf
fs
mov
push
mov
leave
xor
lds
sbb
loope
enter
lcall
sub
ljmp
pusha
mov
fsub
mov
int3
add
call
lods
mov
js
scas
mov
mov
sub
popf
in
jae
jno
je
inc
rolb
xor
jmp
push
sub
ja
xor
mov
cmp
xchg
ficoml
scas
adc
sub
out
imul
mov
lret
adc
repnz
stos
test
incl
lock
popf
movsl
push
pusha
xchg
fisttpll
inc
je
mov
cli
xorl
adc
stos
fwait
decl
lock
repz
std
jno
jecxz
jns
fst
into
loopne
add
je
mov
and
roll
call
pop
mov
xor
sbb
add
daa
dec
pop
dec
mov
lea
mov
cli
bound
cmp
fdiv
sahf
jle
cld
ret
xor
jns
sti
and
mov
lcall
sub
movsb
xchg
jnp
and
mov
cmpsb
in
pop
fwait
mov
out
cli
jge
fcoms
mov
push
outsl
pop
cmp
adc
mov
cltd
int
jns
rorl
sbb
sar
jle
repz
inc
inc
cmpsb
out
ljmp
pop
ret
in
xor
in
ret
jge
movsl
or
fiaddl
sub
or
push
mov
hlt
psrad
mov
imul
aad
cmp
lock
flds
and
inc
aaa
cmp
cld
into
fildl
pop
mov
mov
mov
dec
xchg
repz
adc
sub
or
cld
jecxz
hlt
ljmp
pushl
xchg
lret
push
ret
jbe
nop
subl
mov
adc
ljmp
stos
jle
xchg
sar
pop
mov
daa
stos
push
and
bound
xchg
fsts
popf
add
out
inc
loopne
ret
int
and
sar
jmp
mov
pop
sbb
ds
pop
dec
jle
cwtl
dec
jbe
repz
cmp
das
cli
jg
mov
pop
mov
cmp
push
or
sub
jnp
adc
mov
imul
lcall
cmp
xor
enter
fcoms
mov
loop
add
cltd
jp
pop
test
in
aaa
sbb
movsl
test
pushl
lods
lahf
mov
rcrb
fwait
xchg
lods
cli
jnp
cwtl
ficoms
sbb
out
xchg
cli
inc
scas
int3
xchg
cmpsl
das
dec
ljmp
outsb
xchg
jne
aas
frstor
xor
out
pushf
lods
adc
xor
push
pop
adc
inc
fwait
loopne
incl
mov
jecxz
and
jne
inc
or
enter
je
mov
fbstp
cs
pop
dec
std
inc
xor
mov
outsb
adc
mov
add
ljmp
jmp
fistl
rcr
popa
jl
jo
mov
adc
jo
and
incl
mov
in
roll
sarl
stc
pop
cmp
jl
movsl
into
enter
imul
ret
adc
inc
out
inc
lock
aas
push
add
xchg
stos
aaa
je,pt
dec
scas
es
pusha
inc
sbb
insl
sbb
leave
and
inc
mov
dec
mov
subb
and
cmpsb
adc
mov
dec
cli
jg
fnsave
fidivs
or
xor
aad
and
loopne
aaa
add
jmp
sub
imul
add
pop
push
mov
mov
mov
lea
or
add
cmp
push
jae
adc
jle
or
ljmp
add
and
push
add
push
dec
mov
daa
adcl
jmp
jmp
lret
adc
fildl
aaa
pop
push
gs
ficompl
sarb
adc
outsb
pushl
cld
popf
insb
xor
inc
out
std
push
stos
inc
loope
jne
dec
push
sar
fwait
fcomi
mov
mov
mov
push
inc
sub
int
sub
sbb
rorl
call
movsl
aam
sub
push
jae
push
mov
jo
in
cmp
std
rcrl
outsb
jecxz
das
sar
jbe
call
jg
cwtl
sbb
add
adc
xor
iret
jne
in
call
xor
pop
das
mov
xchg
fcmove
xor
jbe
scas
stos
pop
inc
std
mov
ljmp
adc
xchg
or
push
lahf
out
dec
stos
add
nop
push
sbb
or
push
mov
add
call
adcb
xor
out
imul
sbb
adc
fs
mov
fisubrl
jmp
lcall
push
mov
dec
cld
pop
jb
mov
pop
and
pop
insl
fnstcw
cmp
je
xchg
or
hlt
mov
pop
mov
xor
movsl
out
fsubrl
pushl
lret
dec
mov
clc
test
sbb
adc
loope
add
inc
lcall
outsb
pusha
or
sub
ljmp
in
mov
pusha
aad
lret
xchg
inc
out
and
adc
sub
dec
fcomp
fstpl
ss
loope
adc
cmp
sub
sub
into
dec
lret
ljmp
mov
push
mov
and
repz
add
cwtl
lret
jg
sbb
ficoms
mov
gs
xchg
leave
mov
jmp
aas
sbb
sbb
decl
push
push
sahf
mov
or
mov
adc
js
mov
ss
mov
jg
cwtl
push
into
dec
fbstp
flds
iret
bound
fnstenv
pushl
mov
addr16
lret
adc
mov
int
filds
push
addr16
decl
and
mov
jne
jo
int3
hlt
adc
stos
mov
or
pushw
mov
pop
ss
call
add
cltd
mov
cmpsb
hlt
in
xchg
mov
pop
inc
and
mov
mov
jnp
mov
loopne
stos
out
inc
add
sbb
addr16
sahf
icebp
adc
or
cmp
pop
mov
xor
imul
push
mov
lds
call
jmp
sti
or
daa
clc
add
scas
jns
scas
dec
jns
xor
pop
mov
pushl
mov
inc
pop
dec
nop
dec
push
out
cmpsl
mov
sub
pop
mov
data16
push
dec
sbb
sub
inc
add
xchg
sbb
mov
add
call
add
lock
and
xchg
ficompl
xor
jmp
pop
loope
inc
int3
ja
cmp
pushf
cmpb
sbb
inc
mull
mov
pusha
shlb
shlb
rcll
push
gs
push
ljmp
incl
test
ret
add
jns
test
movsl
lods
pop
jbe
cmc
es
daa
fidivs
inc
jmp
imul
sbb
inc
cmp
jbe
pop
movsb
push
fbld
xchg
add
sub
outsl
call
jl
into
push
outsb
add
inc
and
stc
add
mov
cmc
pop
std
mov
sbbb
andl
fstpt
mov
loope
mov
or
lcall
cmp
movsl
xchg
inc
aas
xor
pusha
ss
rclb
incl
shrb
out
jg
mov
cmp
mov
cltd
pop
push
or
sub
inc
pop
mov
scas
decl
jne
sub
push
jge
and
mov
data16
outsl
cli
decl
push
jp
aam
adc
js
imul
cli
btsl
cld
jne
lcall
in
gs
insl
aad
fistl
xor
mov
inc
or
sub
xchg
pop
dec
pop
icebp
js
xchg
addr16
mov
cld
pop
int3
mov
test
dec
bound
push
test
inc
xchg
sub
incl
aad
sbb
pop
ljmp
fstpl
dec
fldl
clc
sbb
pushl
jg
xor
adc
ret
cmp
add
inc
mov
pop
js
and
pop
cmc
jmp
out
ret
mov
xchg
fs
iret
pop
mov
jmp
pushf
xchg
sbb
enter
mov
repz
pop
icebp
decl
int
vpshuflw
cmc
jmp
into
jo
adc
mov
movsb
pop
ja
mov
jle
imul
fwait
out
sub
dec
xor
es
jmp
in
ret
fs
push
cld
jnp
fldt
or
xchg
popf
xlat
lret
pop
mov
mov
ljmp
xchg
add
repz
jnp
pop
cmc
push
clc
cmc
push
fcomp
mov
decl
ds
cmp
sti
dec
fsubp
mov
sub
pop
jp
jle
hlt
fmuls
sbb
incl
add
subl
inc
or
pop
xor
jnp
jle
ficomps
lcall
test
mov
in
mov
pushf
inc
and
jmp
cmp
lahf
test
jp
adc
jecxz
xchg
enter
or
inc
sbb
jge
enter
sbb
ret
gs
dec
dec
decb
fcomps
jmp
jmp
and
adc
in
mov
out
ja
psrlw
cwtl
jmp
incl
cld
ljmp
mov
sbb
or
xchg
cmc
and
inc
movsl
pop
xor
mov
fcmovne
test
movsb
bswap
inc
imul
out
aam
pop
or
shr
sub
bound
ja
mov
cwtl
out
mov
mov
sub
cltd
xor
sbb
fdivs
repz
mov
push
push
dec
push
mov
lods
jl
xor
mov
fs
mov
in
iret
repz
inc
mov
adc
stc
push
jno
sti
mov
lret
adcb
fdiv
mov
std
pushl
call
pop
xchg
jno
jg
jg
sbb
sub
js
xchg
insb
mov
scas
nop
lahf
pop
xor
xor
sti
jbe
mov
xchg
pop
call
lock
mov
scas
xchg
mov
incl
xchg
cltd
jge
loope
pop
sub
xchg
iret
les
icebp
push
inc
outsl
call
lcall
imul
fdivs
jbe
adc
testb
roll
pushl
jmp
xor
or
test
cmpb
mov
mov
out
lods
ror
sbb
aam
test
jg
in
xchg
mov
je
mov
dec
pushl
cmp
push
int
pop
xchg
daa
add
popa
inc
pusha
jb
jl
iret
jno
sub
insb
bound
xchg
inc
je
and
test
mov
cmp
incl
ret
adc
jg
inc
dec
mov
jmp
adc
dec
sbb
jnp
cltd
mov
fucom
lret
outsb
mov
and
loope
cmp
icebp
cld
xchg
int3
xchg
or
mov
out
push
jne
jns
sarb
enter
or
je
aaa
daa
fwait
jbe
popf
outsb
out
ljmp
jle
cli
add
insl
mov
lcall
fwait
pushf
popa
fidivrs
push
add
ret
mov
jb
sub
out
or
sarb
or
divl
push
jecxz
ljmp
dec
mov
sbb
pop
xor
jg
ss
sbb
lret
or
inc
inc
cli
call
jge
sbb
lahf
hlt
lcall
xor
fcmovb
hlt
mov
cmp
ja
add
in
xor
xchg
cmp
jb
jg
xor
adc
shll
mov
sub
sarl
mov
pop
mov
arpl
jg
jno
sahf
call
or
rcrl
or
jnp
aad
pushl
cltd
and
mov
push
sarl
sub
push
popf
std
mov
ds
add
clc
sbb
pushf
jmp
adc
lds
mov
pop
stc
adc
pushl
xor
popa
jno
inc
dec
outsl
pusha
stc
fsubrs
pop
xor
jmp
cmc
dec
jb
outsb
pushf
pop
xor
pop
fyl2x
jge
jae
jbe
pusha
mov
jge
add
pop
hlt
decl
bound
sub
mov
cmp
daa
add
daa
mov
cmp
jle
call
in
dec
cmc
jecxz
loopne
jmp
or
xor
dec
inc
aaa
adc
pop
jmp
enter
into
lret
add
lret
sub
lcall
jae
outsb
es
mov
loope
sahf
mov
adc
mov
cmp
or
push
lcall
jo
mov
imull
out
xchg
xchg
shlb
subl
popf
sub
das
mov
jmp
pop
cmp
scas
sbb
test
ret
in
cmp
into
adc
lds
sub
cmp
cmp
sub
movsl
arpl
insl
in
fisubrs
pop
es
clc
sti
fs
pop
insl
adc
out
cmp
mov
jge
in
mov
pop
mov
adc
cwtl
jecxz
sbb
jmp
aam
in
or
scas
lock
inc
icebp
dec
jns
scas
mov
cld
xchg
insb
cld
pop
fdivrl
xchg
movsb
sub
or
jg
inc
in
enter
add
hlt
aaa
xchg
ficompl
out
pop
mov
push
cld
decl
loop
cmp
pop
inc
les
mov
out
xchg
nop
push
call
pushl
int
mov
pusha
test
pop
stc
out
xchg
shlb
sub
or
lods
push
imul
aam
push
add
dec
popf
inc
jne
pushl
imul
clc
mov
addl
pop
mov
push
jno
insl
int3
add
or
call
cmc
dec
arpl
push
adc
les
mov
pop
xorb
and
decl
pop
push
pusha
pushf
inc
lahf
rcrb
js
movb
pop
jg
xchg
xor
or
arpl
decl
add
mov
or
int3
js
mov
and
fistl
movsb
pusha
and
inc
add
xchg
lods
movb
xor
and
or
pop
adc
loope
and
pusha
aad
call
push
mov
add
push
mov
pushf
stos
dec
push
jb
jnp
movsl
out
mov
cmpb
lcall
xor
lock
mov
pop
inc
inc
mov
cmpsb
push
aad
jp
add
mov
and
mov
push
mov
inc
int3
pusha
cwtl
pop
test
dec
enter
or
pop
xchg
and
inc
ljmp
fmuls
push
mov
pop
ljmp
sub
roll
test
or
or
and
fimuls
in
adc
jmp
ss
lahf
xchg
push
cli
lahf
je
out
push
xchg
jno
inc
mov
dec
pop
pop
push
push
icebp
lcall
sbb
shl
es
in
xor
xor
push
dec
fnstsw
push
mov
mov
lret
fnsave
dec
xorl
dec
out
popf
aam
sbb
int
pusha
or
push
jmp
test
pop
dec
adc
adc
sub
xor
push
lcall
xor
jl
in
psubsb
xchg
mov
or
sub
mov
clc
add
push
xchg
ret
pop
lock
loopne
inc
in
cmc
stc
testb
mov
mov
ss
in
push
or
loop
mov
dec
or
out
cmp
incl
call
fdiv
ds
out
shll
or
adc
test
jle
nop
lahf
jp
sti
inc
cli
and
out
mov
fs
loope
sbb
xchg
add
inc
and
decl
call
jle
imul
nop
mov
lcall
incl
ljmp
jecxz
clc
lods
pop
test
add
xchg
xchg
aaa
incl
and
mov
pop
cmp
mov
enter
insl
push
lret
cmp
xchg
jbe
jns
xlat
xorl
sub
or
sbb
mov
test
jmp
push
leave
popf
dec
xor
dec
or
out
dec
out
add
ds
add
mov
fisttps
xchg
repz
mov
or
push
or
dec
clc
incl
dec
and
ljmp
les
sar
jmp
out
jno
lahf
push
pop
ret
mov
inc
lods
dec
les
aad
imull
sar
mov
jns
and
dec
sbb
dec
add
xchg
or
movsl
insl
lcall
aad
gs
out
jns
inc
mov
mov
lcall
sbb
repz
and
mov
add
lcall
aas
call
rcl
xchg
stos
shl
dec
push
test
sar
xlat
movsb
mov
cmpsb
loop
lcall
rorl
arpl
aaa
fwait
sbb
xchg
add
mov
ljmp
int
push
push
pushf
xchg
dec
or
ss
shlb
or
mov
psrlw
hlt
inc
dec
in
int
xchg
hlt
xor
mov
loope
cmp
mov
lock
cltd
cmp
lcall
push
loop
je
pop
sub
imul
adc
arpl
push
lcall
dec
sbb
push
addr16
mov
adc
adc
push
jp
fadds
push
call
int
stc
cmp
xchg
into
inc
xorps
fcomps
adc
cs
into
push
scas
cmp
loop
inc
sub
std
xchg
xlat
mov
and
leave
xor
addr16
pop
pusha
jmp
push
inc
stos
daa
aaa
add
mov
pop
icebp
push
push
xchg
pop
insb
inc
adc
decl
mov
jno
mov
es
xor
cmp
scas
aaa
enter
incl
sub
dec
mov
ret
leave
dec
adc
clc
call
jo
sti
movsb
fisttpll
je
sbb
test
mov
stos
movsl
scas
fcomip
sub
inc
add
cmpsb
and
mov
icebp
clc
ja
cmpsb
filds
lods
sbb
int
fisubs
repz
sub
cmp
cmpsb
icebp
xor
cmp
call
cmp
iret
push
xchg
outsb
fwait
incl
and
push
inc
inc
jo
shlb
out
lret
mov
outsl
cli
out
pop
fists
jb
dec
ljmp
scas
adc
aaa
std
lcall
into
outsb
jle
sar
push
rcl
xchg
fadds
pop
out
js
add
xorb
mov
dec
push
jbe
dec
pop
mov
outsl
jbe
test
adc
std
adc
jmp
cld
int3
mov
icebp
ds
sbb
mov
inc
fidivs
in
push
addb
fcoml
cmp
out
fisttpll
pop
or
es
or
lahf
clc
push
mov
mov
in
pop
cmp
jg
mov
scas
or
dec
jb
jno
dec
xchg
bound
adc
popf
mov
add
out
stc
jle
xchg
test
ljmp
xchg
inc
rclb
sub
jecxz
mov
jge
mov
call
xchg
je
inc
fsubrp
jo
mov
in
es
leave
dec
cmp
insl
in
lcall
mov
cmp
lods
addl
push
pushf
ds
imul
fs
lcall
jle
clc
arpl
push
and
push
cld
jmp
lods
cli
jge
or
out
fs
in
sbbb
out
popf
icebp
insb
cmp
loopne
cmp
icebp
aas
cmp
mov
and
inc
jecxz
lods
in
lea
fisubrl
decl
mov
mov
cmp
bnd
xor
pop
in
push
mov
movsl
xchg
fucomi
jo
pop
std
jmp
mov
jecxz
stc
add
dec
fwait
ja
sbb
call
and
jge
fisttpl
lods
fidivl
push
dec
cltd
pop
addr16
ss
sub
and
call
ret
mov
fstps
lods
xor
loope
loop
popa
or
sub
mov
dec
insl
clc
xchg
xchg
mov
mov
jp
fnstsw
lcall
jmp
cld
xchg
aad
fbstp
jb
xchg
pop
mov
mov
jo
call
dec
mov
jl
arpl
xor
push
lock
bound
or
scas
jle
ret
out
arpl
mov
fucomi
cli
fbld
out
xor
lahf
mov
mov
sbb
mov
pop
ficoml
pop
std
mov
shl
sarl
pusha
insl
stos
mov
lcall
decl
mov
mov
inc
dec
pushf
lahf
aad
xor
imul
mov
jmp
cmp
xor
test
pop
das
mov
lret
cmp
pushf
cld
dec
addr16
jmp
outsb
loop
hlt
mov
lods
notl
idivl
std
lret
cmp
hlt
add
push
ljmp
xchg
push
and
xchg
sub
sub
add
push
xor
shlb
das
cmp
push
jmp
gs
repnz
mov
out
push
dec
push
incl
fcmovbe
add
in
pop
add
and
imul
insb
andb
incl
adc
mov
test
add
popa
test
je
lcall
out
adc
sbb
fcomps
std
xchg
nop
mov
clc
cmc
pop
jbe
je
enter
sti
mov
pop
xchg
lea
subl
push
push
xchg
inc
xor
sti
add
mov
xchg
fadds
fisttps
cld
adc
cmp
sbb
loope
dec
mov
aaa
std
lcall
into
addr16
adc
sbb
pop
in
sti
jecxz
dec
xor
repnz
ds
incl
jne
movsb
test
int
dec
fisubs
or
cltd
rcll
sub
mov
inc
pop
dec
mov
push
mov
xorb
aas
imul
pop
adc
add
jmp
adc
roll
idivb
push
and
andb
repnz
in
push
xlat
mov
push
jge
dec
popf
cmp
aas
jbe
roll
inc
xchg
pop
xchg
mov
fwait
ljmp
pop
iret
xor
outsl
mov
jno
stos
pop
dec
rcrb
out
arpl
dec
insb
push
mov
pop
mov
sub
inc
mov
call
xor
lcall
mov
xchg
pop
jb
mov
dec
lods
sbb
test
or
call
cmpsl
sbb
sub
push
add
int3
sti
sbb
negb
lcall
cwtl
rcr
shrb
adc
int3
shlb
and
les
or
lcall
push
test
insl
inc
xor
jmp
rorl
out
aam
mov
ljmp
out
repz
mov
push
js
fildll
cmp
or
jmp
xchg
mov
adc
adc
adc
mov
push
sbb
adcb
int
mov
jge
insb
ljmp
mov
sub
jo
push
xor
dec
jp
mov
xor
jne
dec
jb
dec
jl
sub
pop
ret
pop
add
lret
aad
shrb
dec
mov
cld
jle
sub
sbb
in
sbb
mov
xor
jg
icebp
incl
movsl
jne
mov
in
shll
out
call
and
or
sub
test
adc
lock
xchg
stos
popf
xchg
cmpsb
shrb
dec
shr
call
pop
mov
inc
xchg
mov
movsb
adc
lcall
mov
lods
mov
out
cltd
push
mov
add
mov
jle
push
ljmp
fadds
dec
daa
mov
xchg
jp
adc
sbb
leave
ret
clc
mov
data16
les
decl
cwtl
stos
movsb
js
cmp
push
in
rolb
rcll
lret
lahf
jecxz
or
xchg
mov
aaa
cld
decl
lcall
imul
mov
jne
push
addb
pop
cmpl
mov
out
mov
fisttps
stc
rcrl
adc
jecxz
xchg
std
and
rcrb
xor
aas
sti
icebp
fsts
pop
divb
call
aad
clc
int3
and
aaa
adc
int3
cmc
jp
jne
out
xchg
je
ret
jb
fnsave
adc
mov
lret
mov
into
jmp
cmpsb
cwtl
das
fstpl
pusha
xchg
imul
cwtl
mov
pushl
jecxz
movsb
xor
mov
loopne
inc
add
fsubl
xor
out
and
inc
inc
test
es
nop
pusha
jns
loop
xchg
xchg
push
loopne
decl
jg
aas
or
mov
and
scas
fisttpl
jae
mov
jmp
xchg
lods
loopne
enter
daa
jmp
out
sub
xchg
std
and
mov
cltd
jg
jo
mov
loopne
jge
mov
push
mov
jge
movsb
inc
xchg
inc
jg
loop
pushl
xchg
test
decb
jno
mov
lock
into
jge
dec
loop
incl
add
mov
gs
lds
pop
cmp
xor
popa
and
test
fnstsw
and
scas
push
test
push
aam
lods
mov
call
rorb
pop
mov
xchg
mov
outsb
sbb
dec
mov
incl
push
cmp
xor
cmp
ljmp
fisubrl
mov
cli
fmull
shl
xor
mov
xor
fsubl
mov
mov
jmp
pop
mov
dec
xor
ss
or
sub
loope
mov
push
sbb
lock
incl
push
jno
out
movsb
inc
inc
divl
sbbl
decl
mov
pop
and
push
int3
das
adc
push
repz
sub
imul
bound
shrb
dec
lahf
dec
insl
xor
mov
insb
clc
sbb
jo
decl
xchg
inc
stos
sub
mov
adc
adc
sub
push
cmpsl
pop
dec
je
sub
hlt
pop
js
call
adc
aaa
int3
mov
loope
pop
xchg
fsubrl
mov
pop
out
hlt
into
les
decl
cmp
mov
es
inc
fs
ret
xor
sub
out
cmpsl
lds
lcall
ficomps
int
inc
in
enter
lock
scas
sbb
pop
fcomps
sbb
mov
loop
scas
pop
cli
dec
pop
incl
sbbl
gs
insl
dec
xor
lods
push
sbb
repnz
in
out
lods
xor
cs
idiv
push
sbb
dec
jle
mov
push
lods
out
adc
inc
pop
out
xor
ljmp
mov
sub
xchg
in
in
cmpl
fisttpl
js
jmp
decl
adc
xchg
mov
adc
dec
mov
jb
in
and
incl
in
sub
movsl
pushl
sbb
clc
pushl
cmp
mov
xor
loop
add
jmp
dec
test
and
out
pop
subb
pushl
std
push
test
adcl
cmpsl
adc
mov
call
mov
mov
mov
nop
outsl
shl
call
je
sbb
jns
dec
sbb
mov
mov
sbb
int3
shrl
sub
test
mov
jl
jge
cld
in
inc
cmp
mov
and
push
sbb
mov
pushl
mov
xor
rorl
and
shll
push
mov
aad
lcall
xchg
inc
push
push
xor
or
cmpsb
mov
lret
testl
scas
add
adc
lret
xchg
stc
sub
cld
jb
cmp
icebp
hlt
iret
pop
mov
and
inc
sub
and
lods
hlt
add
mov
into
sbb
enter
fsub
or
mov
ffreep
out
mov
sbb
out
mov
inc
lods
pop
dec
rcl
mov
fldt
rorb
orl
mov
xor
dec
jae
out
lock
cmp
inc
iret
jo
mov
jae
dec
lret
pushl
mov
xchg
in
adc
call
sub
push
stc
adc
dec
loopne
call
xlat
jbe
scas
orl
leave
sbb
mov
sub
mov
add
data16
aad
xor
adc
int
lods
in
xchg
in
popa
push
punpcklbw
jg
mov
dec
push
adc
movsb
imul
mov
inc
je
cmp
decl
or
inc
and
js
lret
inc
hlt
aam
inc
pushf
faddl
lcall
sbb
fwait
push
das
test
adc
adc
dec
lea
mov
aad
or
lcall
ja
or
mov
jnp
int
testb
call
adc
incl
adc
out
inc
xor
cmpsl
ret
cmpsl
mov
jns
out
pop
pop
push
enter
push
imul
push
aas
dec
mov
jge
rcl
fisubrs
loope
sti
call
mov
sbb
cmp
jns
aaa
rcl
lods
xchg
lock
dec
out
outsl
call
lcall
cmpsb
fistpl
mov
inc
pop
dec
dec
push
jns
jl
adcb
push
mov
in
arpl
pop
fcos
dec
cmc
add
cmp
xchg
fsubs
pop
add
mov
dec
mov
imul
in
mov
pop
jg
incl
in
dec
out
xor
push
inc
jge
sub
inc
test
add
cmp
lcall
out
call
lahf
mov
pop
sbb
cmp
jmp
inc
ret
jno
aam
cmpsl
inc
cmpsb
cld
stc
mov
cmp
sub
aad
ja
add
ljmp
and
pop
xchg
jg
in
loope
xor
jecxz
xchg
lods
inc
call
add
xor
jbe
out
clc
incl
xchg
shl
adc
cmc
pop
push
mov
sahf
enter
dec
sarb
scas
and
push
out
push
incl
dec
push
shlb
out
push
jns
push
jg
xchg
shll
push
xor
jmp
rorb
sub
xchg
or
cmpsl
movsb
pop
aas
das
mov
cltd
inc
mov
fwait
or
mov
push
mov
jo
mov
dec
mov
and
jmp
cmpsl
xchg
mov
rcr
outsb
ret
adc
xchg
push
lods
jmp
mov
pop
adc
jmp
dec
add
add
nop
cwtl
jg
scas
pop
lcall
fcomps
fptan
stos
mov
or
jmp
mov
push
daa
dec
mov
push
sub
or
aaa
out
lcall
xchg
mov
jmp
out
and
lods
jae
fbstp
sub
push
fcomip
jmp
out
cld
rolb
adc
ljmp
sti
into
jne
and
sub
arpl
call
jp
jb
mov
enter
xchg
test
ljmp
sarl
pop
cmc
clc
test
mov
test
cltd
jle
out
mov
lds
insb
push
inc
mov
outsl
stc
lret
inc
decl
and
push
adc
dec
loope
orw
movsb
je
mov
hlt
scas
aam
fucomp
sahf
inc
out
pusha
jae
jg
mov
jb
push
mov
or
mov
scas
loop
and
jmp
jbe
shll
xor
movsl
push
xchg
stos
sbb
cmp
jmp
cmpsl
mov
push
sbb
cmp
test
adc
dec
mov
pop
add
pushl
and
ljmp
aad
and
stos
and
xchg
test
in
sti
insb
repnz
loope
cmp
cmpsb
ret
jmp
lea
test
mov
call
aaa
jb
lcall
or
jle
push
data16
lock
out
jg
movsb
mov
sub
hlt
adc
testl
mov
add
adcb
sbbl
fmull
orb
push
fistl
lcall
mov
imul
clc
leave
and
inc
push
std
push
shr
jnp
cs
aaa
mov
cmp
jnp
sbb
in
stos
xchg
xchg
ja
es
inc
sbb
jp
pop
inc
outsl
push
fcoms
fcomip
mov
adc
out
test
outsl
das
fdivs
sub
arpl
cmp
pop
xchg
insb
lahf
inc
imul
sbb
pop
out
mov
add
decl
fs
sbb
sbb
jp
sbb
jle
push
mov
adc
dec
xchg
add
fcoms
inc
popa
shll
mov
mov
jns
jecxz
xchg
pushl
std
sbb
cli
sbb
inc
aad
jg
jmp
ljmp
pop
int3
pop
dec
add
inc
loope
jmp
setns
orb
mov
and
decl
aam
loope
faddl
sbbl
jecxz
insl
je
mov
lock
out
jg
mov
out
push
or
xor
decl
lock
js
push
bound
cmp
dec
cmp
ljmp
cli
fs
movsl
sar
out
aam
scas
mov
fwait
dec
andl
pop
inc
cli
cwtl
pop
inc
test
pusha
imul
sub
mov
add
call
test
push
mov
adc
int
adc
aad
repnz
or
icebp
lret
rcrb
lcall
inc
mov
rorb
rorb
ss
aam
mov
jo
loop
fsubrl
mov
movsl
fiadds
sahf
outsl
hlt
fidivs
pop
inc
pop
sub
popa
pop
cmp
jmp
sbb
neg
ret
lods
dec
adc
cmp
les
mov
jno
fs
push
inc
jg
xchg
mov
ret
sbb
add
cmpsl
loopne
aas
or
daa
cmp
imul
ss
inc
sbb
icebp
adc
push
cmp
addb
loope
mov
dec
mov
incl
adc
mov
mov
iret
sub
inc
sbb
and
decl
mov
iret
push
mov
xchg
xchg
ret
pusha
leave
xor
pop
mov
and
jge
push
decl
xor
push
shrb
jne
mov
clc
or
xchg
pushf
iret
fmul
into
loopne
lock
dec
push
movsb
inc
cwtl
sti
push
shlb
outsb
js
jp
call
je
inc
adc
out
aad
daa
jns
test
test
shrb
inc
cltd
sub
std
jg
gs
loop
gs
inc
nop
scas
push
flds
jl
cli
inc
fimull
bound
inc
jg
imul
cmp
push
adc
cmpsb
mov
mov
jbe
add
fisubs
lods
pushf
xchg
lret
incl
je
hlt
rorb
jp
inc
jle
mov
push
pop
or
cs
jmp
jnp
into
push
xchg
inc
sub
fcomip
stos
daa
and
pop
pop
cmpsl
fistpl
les
subb
jmp
rcrb
mov
mov
cmp
sub
aaa
inc
lcall
mov
cmp
push
mov
jp
enter
mov
daa
sti
mov
and
jge
loope
outsl
or
jecxz
arpl
mov
iret
test
popa
or
in
lods
dec
pop
test
lret
add
ja
loopne
rolb
xchg
pop
xlat
lcall
dec
mov
stos
js
or
sti
cmp
pop
mov
out
sti
push
les
mov
call
pop
xor
dec
mov
jg
adc
into
or
enter
jnp
fistl
incl
pop
in
sbb
shll
and
divl
xor
pushf
pop
filds
mov
or
jg
pop
pop
jg
or
xor
and
loope
insl
mov
lcall
neg
xor
inc
xor
arpl
mov
stc
ret
out
loopne
pushf
ja
ret
xchg
adc
inc
lods
jmp
push
out
lahf
xchg
loopne
in
jo
mov
push
xor
pop
or
shl
idivl
push
lods
test
decl
xor
sub
dec
cmp
outsb
mov
push
mov
pop
mov
jo
fisttpl
fs
jecxz
mov
xor
les
or
mov
je
imul
mov
ja
cmpsw
popa
je
stos
in
mov
imul
mov
mov
xor
mov
stos
sbbb
or
pushl
dec
leave
loopne
popf
ja
fdivp
xlat
es
jne
or
and
and
call
mov
inc
inc
lret
jb
jnp
push
out
ljmp
pop
in
jmp
cmp
xchg
mov
frstor
cmpsl
mov
and
mov
movl
pushl
mov
jno
mov
lahf
xlat
lcall
dec
cmp
dec
or
adc
cmp
int
insb
dec
jmp
jne
fidivl
jecxz
negl
iret
cmp
stos
mov
jmp
sub
repz
bound
std
jp
add
int
or
out
sarb
ss
pop
add
shrl
call
cmp
enter
and
idivl
pushf
jle
pushl
xor
addb
xor
mov
cmp
inc
xor
sbb
push
mov
jb
fnstenv
jmp
mov
xchg
cmp
lret
stos
dec
xor
outsb
pop
pop
insl
sbb
leave
es
adc
jmp
and
jmp
mov
dec
cmpsl
xchg
leave
jne
mov
sbb
movsl
aas
jbe
ret
nop
pop
popf
call
std
mov
addr16
lret
cmp
sbb
push
loop
dec
adc
dec
mov
jmp
jbe
sub
sub
sarl
jmp
shrb
push
and
arpl
clc
xchg
fldt
adc
mov
out
scas
or
jmp
ret
sahf
loopne
mov
mov
jge
lahf
data16
mov
xchg
ss
lods
sub
fwait
mov
call
fidivl
inc
inc
sarl
subl
aas
xor
sbb
dec
clc
decl
std
aad
movsl
adc
jb
pop
loop
mov
push
out
mov
dec
in
or
ret
fldt
dec
es
or
in
and
cmp
jg
add
mov
adcb
jmp
into
bound
xchg
ljmp
xor
push
push
adc
aad
lahf
or
scas
test
pusha
jecxz
outsb
mov
hlt
decl
mov
iret
mov
popf
or
or
sub
pop
lods
dec
je
fxch
mov
pop
ljmp
dec
call
aam
mov
scas
clc
mov
push
clc
gs
mov
hlt
adc
call
icebp
cld
clc
aad
ss
sbb
mov
cmp
cltd
cmpl
cld
push
xor
push
pop
adc
mov
dec
add
insl
jne
or
push
push
into
and
mov
mov
cli
call
push
into
scas
clc
or
addr16
stc
cmpsb
ljmp
sbb
adc
adc
call
jp
cltd
and
cmp
shll
mov
lds
mov
outsl
aas
fcomip
decl
or
pop
inc
jo
or
ljmp
fndisi(8087
rclb
mov
outsl
xchg
movsb
int
leave
out
data16
xlat
notl
xchg
pusha
mov
movb
inc
sbb
dec
sbb
mov
movsl
sahf
lcall
repz
dec
mov
jg
sbb
cs
jnp
sbb
cmpsl
cmpsl
ljmp
cmp
xor
pushl
inc
adc
xchg
es
lods
dec
shr
and
and
pop
movsl
gs
ljmp
adc
xor
inc
push
pop
xchg
out
out
out
push
icebp
andl
ljmp
test
out
add
jl
clc
mov
pusha
mov
shrb
xchg
loope
movsl
mov
ret
xlat
data16
stos
sbb
ss
in
cmp
inc
out
repnz
test
mov
mov
mov
dec
mov
test
in
test
inc
and
pop
pusha
in
mov
into
stos
inc
jl
pop
jb
jge
mov
sahf
scas
xor
jo
inc
inc
and
jmp
xchg
popw
dec
movsl
sub
jb
xor
pop
add
cmpsb
mov
dec
inc
pusha
xor
and
mov
out
pushl
add
out
mov
sti
mov
imul
dec
push
je
mov
jmp
aaa
pop
dec
pop
mov
rcl
out
stos
stc
mov
outsl
lock
aad
pop
fidivs
pushl
es
cli
sub
insl
xor
inc
shrl
std
mov
aad
incl
cld
cmp
sub
push
mov
sub
dec
jle
push
out
int
jmp
dec
pop
nop
sbb
and
stc
cmp
or
std
dec
cmp
mov
jmp
sbb
ret
into
ja
gs
mov
repz
lret
lret
scas
sbb
sbb
mov
imul
mov
add
fwait
mov
xchg
xor
hlt
call
into
or
jge
mov
jecxz
push
dec
sub
jg
imul
imul
leave
jo
fiadds
pop
out
sub
inc
icebp
cld
decl
js
call
mov
push
testl
outsb
sub
jmp
loopne
dec
cmc
out
adc
outsb
mov
fst
and
sysret
and
test
fdiv
sti
sbb
inc
call
ljmp
lret
mov
or
lret
mov
jns
inc
cmp
xchg
nop
push
incl
cld
cmpb
rcrl
fdivr
mov
incl
das
pop
jns
adcb
adc
in
lods
cli
jg
shlb
inc
inc
jno
incl
jnp
xor
push
out
push
sbb
mov
hlt
stc
push
cmp
dec
fldcw
mov
jmp
mov
lcall
rcl
sub
sbb
repz
fisttps
shll
divb
outsl
and
sahf
xor
cmp
cmp
inc
fcomip
nop
jmp
ret
fimuls
addr16
mov
daa
mov
ja
jmp
xor
sbbl
lea
fs
fstl
mov
test
push
push
hlt
jl
mov
hlt
add
loop
imul
in
mov
push
mov
mov
clc
xor
pop
mov
sti
movsl
fistpll
cwtl
mov
inc
pop
sbb
decl
xor
shll
orl
aaa
stos
sti
xor
cmpsb
xchg
shrl
xchg
mov
pushl
daa
sub
jno
sub
cmpsl
inc
aad
popa
int3
cmp
push
jne
aaa
sar
decl
mov
divb
adc
push
and
sub
jge
icebp
call
lock
sub
sub
mov
dec
in
stos
xchg
rorl
decl
xor
sbb
sbb
cmpsl
mov
or
cld
mov
outsb
cmp
cmp
mov
js
pop
bound
jl
dec
outsb
push
orl
pop
lcall
in
int
xor
push
dec
sbb
out
jl
or
dec
cmp
xchg
xchg
hlt
call
add
mov
mov
aad
lock
jg
decl
mov
xor
sahf
shll
add
jge
sahf
rol
in
mov
sbb
decl
gs
insl
aad
xlat
ret
jecxz
fwait
pop
mov
xchg
lret
sub
filds
cld
dec
pop
insb
sbb
push
data16
jge
mov
xchg
or
incl
cld
dec
inc
pop
call
jmp
in
mov
mov
xlat
dec
pop
jecxz
hlt
call
sbb
lea
push
push
cli
and
sbb
inc
cltd
cmp
ds
dec
test
ds
cmp
inc
shr
mov
sbb
xor
lret
xor
xlat
call
int
sahf
addr16
test
fwait
mov
cmp
xor
jo
mov
cld
orb
lcall
pop
mov
cmp
cmc
lea
push
jae
fimuls
inc
bound
repnz
pusha
dec
fcomip
incl
pop
lds
sub
add
test
outsb
mov
sub
lock
ljmp
andl
and
jae
mov
mov
add
loopne
bound
nop
mov
pop
xchg
imull
push
les
clc
call
push
jmp
das
jl
cmp
mov
into
scas
push
or
push
pushf
or
pop
fucom
mov
mov
cmp
adc
ficoms
pop
and
test
addr16
cmc
jne
andl
shrl
dec
xor
mov
inc
sbb
das
mov
lcall
mov
sub
sub
inc
add
mov
adc
test
arpl
scas
fsts
mov
out
push
popa
mov
sub
pop
cli
jg
and
adc
fwait
aam
enter
ljmp
add
filds
xchg
xchg
add
mov
aas
test
xlat
outsl
shrb
cmp
sbbb
xor
lea
outsl
jae
aas
je
mov
cmc
and
aas
cmc
jg
sub
add
sbb
add
leave
jg
dec
addr16
repz
stos
fbld
sub
mov
enter
mov
xor
call
icebp
out
mov
mov
inc
fwait
jmp
daa
pop
jns
adc
decl
push
aaa
jo
and
cmp
loop
pop
or
lds
mov
in
loope
dec
movsb
or
gs
and
aad
and
jp
fwait
pop
adc
sbb
dec
fisttpl
ret
pop
decl
sub
cmc
lcall
mov
adc
mov
sbb
mov
mov
xchg
xor
lods
clc
icebp
sti
pop
add
hlt
dec
xchg
mov
loope
decl
sub
stc
fabs
outsl
pop
into
not
lock
dec
xchg
pop
jo
jno
mov
jg
incl
xchg
pop
xchg
loop
add
sub
xor
data16
hlt
mov
test
mov
pop
inc
xchg
cmpsb
inc
mov
mov
repz
lcall
fwait
xchg
in
lds
mov
mov
mov
jmp
mov
pushl
add
xor
dec
adc
mov
outsl
test
push
es
mov
int3
outsl
jecxz
add
xchg
jg
push
jge
or
sbb
lock
cmp
mov
sbb
stos
adc
ljmp
dec
mov
dec
jle
test
pop
pop
paddsb
inc
fcompl
popa
sbb
incl
mov
xor
sbb
cs
sbb
inc
cltd
push
dec
scas
insl
jge
mov
ljmp
lds
sti
test
xchg
inc
lret
clc
jmp
bound
ret
addr16
cmc
and
sbb
cs
mov
inc
sbb
in
or
ss
jne
or
fsubrl
rcll
fldl
bound
sti
js
add
sar
shll
xor
decl
lock
rorb
test
and
cmp
push
fadds
insb
jp
decl
in
mov
out
mov
insb
cmpsl
lret
push
inc
dec
push
out
out
imul
bts
push
mov
pushl
mov
jb
hlt
cltd
and
xchg
inc
shll
xchg
lods
ja
clc
mov
stos
and
adc
into
jge
xlat
imul
lock
shr
sub
pop
jmp
add
inc
cld
popa
movsb
add
mov
out
adc
mov
movb
addl
call
cmc
dec
sub
push
gs
fstpl
mov
jmp
cmpsb
inc
jp
imulb
mov
shll
mov
jne
inc
xor
daa
movsb
lcall
ljmp
dec
cmpsl
mov
add
push
sub
xor
push
pop
in
dec
sbbl
sarl
rorl
cld
rorb
enter
fsin
adc
push
xlat
int3
dec
pop
cmc
lcall
push
add
push
and
pop
cs
xor
into
mov
or
dec
fisubrs
fcomip
fisttpll
int
out
cmp
xchg
insb
add
push
sbbb
js
and
popf
cltd
lret
adc
out
or
call
dec
cmp
push
adc
mov
mov
xor
out
lea
or
mov
inc
or
mov
shr
mov
adc
pusha
and
mov
or
push
pushl
testb
adcl
hlt
leave
dec
stos
cmp
mov
test
xor
jae
in
add
sub
dec
mov
cmp
cmpsb
std
push
adc
or
arpl
loope
jg
push
xor
divb
fisttps
jecxz
mov
mov
into
stos
test
cmp
sbb
pushl
cmp
jg
scas
cli
sub
or
mov
bound
into
test
flds
adc
dec
sub
pusha
cmp
pushf
xor
push
cli
loopne
das
inc
sub
pushl
aad
mov
jmp
es
jno
mov
cli
bound
mov
in
jae
adc
call
mov
jnp
decl
sbb
inc
outsb
leave
add
notl
jle
fs
jmp
notb
and
jl
stos
xchg
push
jns
sbb
orb
sbb
mov
mov
sahf
cmc
mov
fstl
ja
pushf
aaa
mov
fnstsw
adcl
and
int3
cmp
add
ljmp
clc
ret
int3
stc
push
mov
pop
pop
and
addr16
sbb
clc
popf
inc
sbb
repz
jo
mov
cwtl
xchg
pop
js
jle
rol
sbbb
mov
test
insl
xchg
cld
jl
sub
xchg
pusha
jge
mov
ljmp
jb
int
insl
cwtl
lds
jne
out
dec
lods
xorb
push
inc
das
push
push
gs
loopne
clc
stos
loopne
cld
movsl
xchg
in
xchg
mov
ss
add
mov
std
in
jns
mov
push
fdivr
pushl
sub
leave
cltd
pushf
lret
pop
mov
ds
sahf
push
and
xchg
clc
stos
add
dec
scas
jge
fs
push
add
push
jge
std
ds
arpl
fldcw
jmp
daa
xchg
das
int
xor
iret
sbb
gs
mov
mov
clc
push
cmc
and
in
stos
jmp
inc
adc
outsb
mov
cmp
sub
jb
xchg
lcall
mov
testl
xchg
pop
cmp
test
rcrb
jmp
bound
shlb
sub
mov
aas
add
add
jecxz
leave
loopne
xlat
cmc
ljmp
xchg
cwtl
mov
push
pusha
and
insb
into
js
data16
cmpxchg
or
cli
or
xchg
or
decl
fcomip
push
xchg
sub
out
mov
pop
pusha
jo
and
decl
xor
jae
mov
xor
xchg
xchg
lods
sub
repz
in
or
dec
mov
jp
mov
cmp
dec
sarl
sbb
sbb
icebp
clc
mov
jecxz
fcomip
jmp
movsb
mov
nop
or
cmc
cmpsl
inc
pop
add
push
movsb
lcall
inc
movsl
mov
pop
fistl
outsl
jb
lock
rorb
bound
decl
add
add
jmp
test
fbld
pop
fsubr
push
adc
mov
xchg
jmp
inc
mov
pusha
mov
and
inc
cli
int
imul
fwait
and
mulb
pushl
sbb
add
mov
sbb
jno
xchg
loopne
ljmp
shlb
testb
cli
pop
lods
aam
ljmp
lret
sbb
lcall
jl
mov
repz
aaa
lock
sbb
xchg
scas
fnstcw
add
cld
sarl
lret
xchg
movsb
in
into
daa
pushf
cwtl
add
dec
les
dec
sahf
xor
pop
loopne
xchg
nop
jle
mov
data16
icebp
xchg
test
xor
xchg
cli
push
pop
nop
cltd
pop
int3
pop
gs
fs
cld
call
inc
pop
popa
cld
mov
sub
and
insl
push
adc
jo
dec
or
gs
pushl
nop
ja
and
and
int
ss
mov
sbb
and
cld
sub
fisubrl
leave
pop
cwtl
inc
mov
cmp
fcmovnbe
shr
adcb
roll
idiv
jmp
and
mov
mov
or
jb
loopne
inc
jo
inc
sub
cmp
call
xor
push
jg
sub
pop
test
lea
xor
add
mov
mov
cmp
cmpsb
stos
adc
scas
lahf
inc
jne
bound
call
mov
shr
adc
mov
cmp
orb
lret
fisttps
mov
xor
js
fmull
out
mov
mov
incl
push
add
in
jge
cltd
dec
pushf
adc
out
cs
scas
inc
xchg
scas
dec
call
fwait
mov
mov
jnp
jecxz
scas
mov
fs
out
icebp
nop
ljmp
ja
inc
loopne
cmp
call
stos
sbb
push
pusha
aaa
add
loopne
jmp
je
loope
pop
sub
popf
lret
js
dec
sti
sbb
mov
push
pop
ret
mov
mov
jae
fwait
inc
mov
sub
lcall
xor
push
bound
mov
in
out
in
jle
pop
aaa
ljmp
test
adc
loop
adc
sub
nop
stos
mov
xchg
sub
notb
jge
mov
cmp
mov
jnp
jno
hlt
addr16
pop
push
dec
adc
inc
xchg
sbb
fs
outsl
cli
push
mov
lcall
push
sub
push
dec
jo
cmpsl
nop
addr16
inc
in
adc
push
push
or
push
loopne
cld
paddusw
ds
mov
lcall
pop
pusha
test
fs
cmp
xor
inc
mov
dec
enter
clc
mov
rcrb
jns
cmp
fcoml
jae
ficoml
jne
mov
sbb
sbb
rcrb
mov
out
enter
jg
pusha
popf
pop
lret
je
je
ds
mov
mov
flds
push
incl
test
xor
jns
enter
xchg
xor
mov
mov
sub
mov
in
iret
outsl
or
mov
sbb
js
cmpb
out
fstpl
push
xor
cmp
test
xor
mov
inc
hlt
ss
or
mov
cmpsb
mov
lds
rclb
inc
add
pop
mov
les
xchg
shr
decl
cmp
and
pop
sbb
fcoms
jo
sbb
cmc
cmp
lcall
int3
aas
adc
pop
push
dec
mov
orb
mov
sbb
cwtl
popf
xor
adc
in
outsl
clc
jmp
sarb
rolb
je
inc
or
fs
data16
add
sbb
pushl
into
dec
dec
cmp
cwtl
imul
lret
add
and
call
out
test
popa
ja
fimull
xchg
cmp
xchg
pop
cmpb
jecxz
push
std
push
insb
stos
jge
mov
xchg
ja
sub
fs
lahf
popa
adc
pusha
sbb
mov
stos
dec
jle
xor
push
sub
push
out
push
fcmovu
jne
xor
sarl
shlb
in
push
or
and
incl
int3
cwtl
xlat
enter
mov
data16
std
inc
movsl
mov
push
dec
enter
int3
lcall
jne
aas
rcrb
test
call
iret
adc
fisubrl
fwait
sti
mov
aam
jp
aaa
xchg
jmp
jle
decl
sahf
outsb
mov
xor
pop
mov
push
leave
and
pop
icebp
sub
in
ljmp
jp
loopne
xchg
jb
loope
loopne
inc
rorl
xchg
cmp
stc
jae
insl
sarl
jmp
push
jo
sub
push
call
inc
lods
jmp
lahf
or
mov
lcall
pusha
out
cmp
rcrl
mov
fists
inc
cmpb
or
daa
hlt
sbb
cmpsl
loope
inc
adc
mov
mov
ss
repnz
loope
mov
sub
cld
mov
dec
inc
or
sldt
inc
pop
test
call
inc
push
mov
mov
fldcw
stos
shrl
mov
loope,pn
cld
imul
stos
movsl
or
test
ds
icebp
stc
popa
xorl
das
dec
scas
mov
mov
and
fsubs
jle
je
orb
adc
or
jb
stos
and
jmp
mov
jle
cmpsl
add
xor
and
shld
ss
cld
call
cmp
lcall
mov
xchg
aad
repz
pop
cwtl
cmp
sub
test
ja
xor
in
loopne
pop
mov
xchg
aaa
lock
push
aas
out
int
dec
adc
dec
inc
dec
xor
xchg
pop
fwait
ljmp
je
sub
xchg
gs
mov
mov
cmp
cmp
cld
shr
ljmp
testl
les
ret
rcll
fadds
inc
sbb
ljmp
sbb
subb
clc
jnp
insb
cwtl
dec
cmp
out
jecxz
std
pushl
outsl
fs
imul
cmp
enter
popf
xchg
pop
cld
cmc
cld
jg
sub
push
mov
mov
loopne
dec
repz
dec
adc
push
aaa
sahf
mov
stc
push
mov
inc
int3
dec
dec
mov
hlt
jp
aam
and
mov
roll
mov
test
push
lcall
cmp
dec
repnz
decl
daa
sbb
roll
daa
in
loop
call
aas
and
lahf
mov
pop
incl
pop
pop
jge
divl
ret
ja
mov
int3
or
inc
push
jae
cmp
aas
cmc
lahf
or
ljmp
mov
sahf
jae
data16
sub
inc
mov
pushf
inc
inc
inc
in
or
ret
ret
hlt
push
incl
cmp
sbb
test
pop
jne
pop
cmp
fdivr
lcall
xchg
mov
mov
or
roll
call
inc
jnp
je
xchg
enter
and
cmpsl
or
push
or
or
mov
out
ret
pop
xor
sbb
test
lods
inc
jmp
add
pusha
xor
xchg
or
lcall
sti
imul
out
fiadds
dec
les
sub
in
cmp
fwait
mov
xchg
stos
mov
mov
ljmp
jmp
pusha
hlt
mov
and
xorb
mov
sarb
faddl
decl
ret
and
es
xor
dec
je
ja
pop
test
aaa
mov
ret
enter
in
les
aad
jle
ljmp
jg
insb
out
dec
fmuls
cltd
dec
nop
fdivs
std
lret
popa
jmp
sar
decl
lock
pop
fmull
aaa
and
fdivrl
inc
sub
xchg
and
lcall
roll
cwtl
pushf
lret
scas
negl
inc
mov
movq
sbb
out
inc
fwait
dec
inc
call
push
jl
les
in
stc
xchg
lods
or
push
lcall
or
mov
loopne
ljmp
add
mov
inc
sbb
jbe
mov
outsl
lcall
out
mov
cs
scas
negb
or
test
rorl
enter
aas
outsl
cmpsl
sti
add
and
sbb
mov
jb
popa
dec
sub
int3
push
jp
adc
push
clc
push
push
and
sbb
iret
mov
shrl
pop
orl
xor
decl
push
icebp
and
dec
test
dec
adc
add
jecxz
mov
imul
inc
out
xchg
sbb
imul
mov
clc
pop
cli
int
and
out
shlb
ljmp
sbbb
jns
lret
or
fisubs
push
aas
jge
inc
xchg
xchg
ror
push
cmp
jbe
mov
add
dec
pusha
mov
outsb
dec
xchg
xchg
mov
dec
popa
cmp
ss
cmp
inc
add
sub
lds
jb
iret
push
les
fists
fs
popa
mov
pop
sub
pop
jmp
imul
mov
shrl
or
pushl
das
daa
xchg
xchg
cli
jecxz
test
rorb
js
and
lret
jmp
sbb
push
dec
cs
pop
pop
jge
mov
lods
jbe
call
decl
dec
pop
mov
test
inc
mov
cwtl
xchg
into
push
bswap
xchg
jb
push
jno
ljmp
lcall
add
mov
retw
out
pop
je
cmp
or
les
pushl
pop
movsl
sub
and
jg
addb
sbb
rorb
dec
jbe
lret
mov
out
mov
dec
test
repnz
mov
cli
and
push
jb
or
add
mov
loopne
dec
rcll
mov
sub
or
jmp
ficoms
ja
in
add
dec
mov
jl
inc
mov
repnz
dec
bound
and
arpl
jmp
jnp
std
or
ljmp
or
sbb
enter
std
insl
mov
insb
jmp
push
int
cltd
out
int
sub
ds
mov
xchg
fidivs
xor
aaa
outsb
out
add
pushl
inc
nop
sbb
inc
xor
js
cltd
shlb
test
mov
jnp
inc
xchg
jle
popf
pop
movsb
cmp
sbb
push
roll
outsb
ffree
imul
lahf
int
cs
jae
decl
lret
loope
mov
xlat
sub
inc
xor
inc
pop
push
sub
aaa
xor
decl
test
sbb
push
or
mov
mov
xchg
ja
rep
cmpsb
out
loopne
out
je
add
and
std
pusha
lock
sbb
jbe
incl
test
push
lret
add
fnstcw
rcl
jle
testb
hlt
das
cmp
adc
jb
aaa
cld
pushl
scas
mov
adc
fidivl
inc
std
icebp
test
inc
dec
xor
std
and
loop
lahf
sahf
dec
jle
and
sub
sub
xchg
lahf
or
rolb
add
lds
sti
pop
pop
push
lcall
fbstp
dec
inc
jl
dec
push
pusha
dec
mov
loopne
mov
pushl
clc
or
ficoml
fimull
call
orb
cmp
call
lcall
jmp
lahf
sbb
icebp
fnstcw
jmp
pushl
push
jo
imul
jl
push
add
fldt
lods
sub
scas
push
imul
xchg
sbb
and
outsl
xchg
jno
pop
popa
xchg
mov
mov
std
adc
iret
je
adc
cmp
push
push
xor
in
mov
sbb
pop
sub
jmp
pop
mov
stc
or
incl
mov
icebp
lcall
imul
adc
out
cli
adc
fs
decl
outsl
mov
dec
gs
jecxz
dec
shr
div
pop
adc
aas
fsubrl
sbb
ds
pop
incl
in
testb
xor
cmp
bound
shr
movsb
sub
loope
adc
mov
fcomip
add
jno
mov
shll
test
cmpsl
add
xlat
decl
mov
cmp
scas
pop
mov
dec
jbe
repz
scas
bound
mov
cmp
ljmp
xor
loopne
push
pusha
data16
jno
adc
rolb
adc
add
and
incl
pmaxub
xor
jno
pop
daa
out
mov
push
loopne
sbb
imul
test
decl
out
push
ficoms
scas
cmp
roll
cmc
pushl
mov
lods
jecxz
adc
xchg
and
sbb
outsb
lahf
in
daa
cmp
mov
ret
jb
shl
mov
jns
std
or
inc
out
dec
outsl
xchg
loope
dec
dec
addr16
pcmpeqd
mov
pop
jmp
or
add
incl
popf
xorb
pop
pusha
add
lock
js
js
dec
ret
stos
adc
cmc
decl
inc
xchg
fwait
xor
and
in
pop
jmp
jmp
xchg
xchg
in
and
lcall
lea
cmpsb
incb
cltd
xor
push
lret
jmp
fdivrs
mov
inc
loop
dec
sub
jl
ja
dec
fisttpll
jo
mov
js
movsb
mov
lods
cld
in
ror
inc
pop
sub
in
cmp
call
fimuls
adcb
mov
ljmp
dec
or
or
push
sub
stos
push
repz
outsl
push
shrl
jg
jmp
in
mov
enter
std
ds
ljmp
leave
das
loopne
mov
shlb
pop
testl
mov
mov
popf
mov
stc
jmp
bound
scas
dec
repz
xor
sbb
adc
in
mov
pop
lock
in
pop
movb
inc
in
push
dec
pop
popa
add
imull
jmp
call
add
clc
push
jne
pop
mov
push
decl
sbb
pop
adc
lahf
xchg
dec
lods
and
mov
jp
faddp
sbb
ljmp
mov
jmp
xchg
xchg
or
jmp
or
xchg
jo
cmp
or
icebp
pop
das
hlt
jae
sbb
mov
inc
mov
jae
jbe
into
mov
ds
push
repnz
pop
cmp
dec
mov
add
or
gs
cld
aas
add
cmp
incl
or
scas
stos
int
or
pop
or
dec
push
cmpsb
daa
pop
xchg
test
pop
ja
dec
ja
cmp
cmp
jle
jb
sbb
jg
hlt
inc
push
ljmp
cmpb
push
shlb
scas
jns
and
ret
sarb
dec
cld
add
cmpsl
call
test
nop
out
jp
cmp
into
cmp
in
cmp
lret
aad
loope
jnp
mov
out
addr16
xchg
insl
bound
mov
pop
fists
cmp
into
jge
ljmp
sarl
xchg
xor
jmp
popa
xor
push
jl
push
ljmp
aam
es
mov
aam
sbb
mov
and
and
cmp
gs
lcall
pusha
js
test
mov
jecxz
jl
push
in
ljmp
adc
in
push
pop
inc
lods
stos
aas
ret
jne
push
fisttpll
and
xor
incl
fld
jecxz
fisttps
and
jl
mov
mov
or
loopne
imul
pop
push
mov
pusha
cmp
jmp
inc
mov
pushl
leave
fiaddl
add
ss
push
imul
or
ud0
std
aad
repz
sbb
and
lcall
out
dec
scas
stos
out
rcll
and
in
push
cmp
cmpsb
inc
ss
and
xlat
lock
in
nop
or
jg
call
add
sbb
inc
cli
adc
push
rolb
fidivrs
or
jp
lcall
sbb
mov
fistps
imul
mov
cmp
push
hlt
push
pushf
inc
or
ljmp
adc
sahf
sbb
ljmp
push
fisttps
cmpsl
lods
jecxz
jmp
mov
dec
jns
push
mov
jmp
in
in
int3
rol
aad
push
test
xchg
lret
cs
out
jmp
push
jmp
js
ss
inc
dec
enter
mov
xchg
cmp
inc
jl
aaa
flds
dec
jnp
adc
or
popa
ljmp
lock
mov
addl
cltd
xor
in
jb
sub
rclb
lret
sti
adc
std
test
sub
ljmp
jns
iret
lret
sbb
popa
leave
lahf
xchg
jnp
pop
sub
aas
jmp
pop
push
jecxz
les
dec
loope
aad
dec
ja
sti
cmp
clc
pusha
clc
dec
rcr
xchg
outsl
flds
idiv
pop
imul
add
mov
dec
das
jl
sbb
pop
mov
fcomip
andl
xchg
test
mov
and
mov
jmp
popa
mov
jb
sub
xchg
xor
int
sub
add
enter
scas
decl
mov
clc
jbe
inc
mov
fcompl
loop
int3
cld
incb
adc
dec
insb
fcompl
loope
gs
movsb
mov
lods
stos
add
pushf
inc
xchg
adc
hlt
ss
mov
sub
or
imul
imul
insb
xor
ljmp
inc
inc
data16
mov
jge
jmp
loop
adc
mov
sub
fiadds
dec
xchg
int
int3
jp
cmpsb
int
jge
jne
or
sahf
loop
mov
fcomip
out
pop
out
shlb
mov
adc
or
sbb
outsl
aam
inc
aam
xchg
pusha
pop
adcl
sti
inc
jge
adc
clc
jecxz
cmp
icebp
adc
dec
pop
out
jmp
fisubrl
mov
and
scas
ljmp
and
xchg
inc
jb
stos
pusha
movsl
add
cmc
aad
movsb
pop
ss
jmp
stos
dec
cld
seto
pop
mov
sub
lds
in
in
mov
fdivrl
xchg
sub
and
lcall
add
add
or
dec
mov
movsl
jecxz
xor
pop
sub
xchg
lahf
mov
stos
mov
lcall
lods
ds
ljmp
xor
repnz
cmp
std
lcall
adc
loop
leave
push
pop
sbb
xor
xchg
sbb
pushl
inc
or
xor
dec
mov
dec
dec
cmp
int3
adc
mov
sub
das
daa
jns
push
std
incl
movsl
fdivr
ja
lods
dec
inc
push
pop
das
lods
aad
js
aad
addr16
insl
imul
pop
out
jmp
fldenv
dec
out
sub
push
std
mov
fidivs
mov
je
lcall
jno
imul
jo
mov
xchg
fcompl
cli
push
xchg
dec
cmp
lcall
in
xlat
mov
data16
sbb
ret
inc
aas
enter
js
xchg
mov
in
jmp
pop
mov
repnz
dec
mov
or
lahf
loope
mov
inc
xor
sbb
call
mov
test
nop
add
jmp
and
aad
inc
js
cs
push
mov
or
ljmp
inc
sub
add
dec
hlt
pop
imul
xchg
pop
clc
jg
dec
shll
lahf
push
xchg
daa
fcoms
aad
mov
lods
inc
nop
push
inc
inc
ljmp
dec
mov
rclb
push
mov
int3
xchg
push
incl
sbb
int
xor
mov
int3
fildl
sbb
cmpsb
lock
sbb
pushl
mov
iret
pop
test
loopne
push
dec
cmpsb
push
and
mov
adc
jne
in
sbb
call
pop
adc
mov
rclb
mov
jmp
rcr
idivl
cmc
and
daa
jg
rcr
add
push
pop
xchg
out
sbb
pop
push
fbstp
xchg
popf
push
push
in
call
cmp
xor
repnz
lods
inc
or
and
insb
xor
into
sbb
ljmp
idivl
mov
xor
jne
aam
add
xor
xor
jl
add
in
cmpsl
daa
enter
pop
cli
stos
inc
in
cli
dec
dec
movsl
add
mov
rcll
cmp
inc
out
mov
push
and
xchg
mov
ret
gs
push
or
mov
or
test
push
mov
lods
sub
mov
xor
jnp
aas
ljmp
push
push
sbb
decl
inc
bound
cltd
fdivs
in
pop
out
and
lcall
pop
aaa
call
gs
aad
cs
ret
popf
lret
call
pop
xchg
add
sti
add
fwait
cmp
pop
mov
movsl
fistps
mov
lock
addl
mov
ret
cmc
xlat
inc
adc
outsl
mov
and
ljmp
mov
add
scas
cmp
sub
in
loop
xchg
push
cwtl
add
jg
dec
call
dec
aam
xchg
or
mov
es
pushl
and
sbb
mov
cmp
sub
mov
incl
loop
mov
push
add
mov
push
pop
int3
push
jle,pn
jo
pop
cmc
pushl
das
ror
push
add
leave
inc
and
imul
cmc
pop
cmp
mov
xchg
mov
shll
pop
cltd
xor
stos
sarb
lcall
jg
ljmp
pusha
mov
sbb
out
sahf
mov
or
ljmp
mov
mov
xor
mov
les
add
pushl
lcall
rcrb
in
cmp
pop
ljmp
test
mov
pop
test
and
or
sub
push
cltd
jmp
js
dec
dec
lea
jmp
jp
push
pop
mov
aad
hlt
cmp
dec
xor
xchg
dec
jo
pop
pop
pop
loopne
decl
popf
insl
loopne
jnp,pn
out
or
stos
popf
in
push
cli
in
loope
sbb
lcall
add
and
arpl
mov
push
mov
ret
mov
les
loopne
mov
inc
into
scas
push
stc
decl
ljmp
mov
outsb
push
pop
or
push
adc
imul
mov
decl
fwait
jmp
outsl
dec
xor
sahf
inc
in
pop
mov
mov
sbbb
push
dec
cwtl
sti
inc
jns
incl
mov
pop
sbb
imul
adc
jmp
pushl
xor
jb
jg
inc
mov
pusha
jbe
xor
and
xchg
xchg
sub
pop
pusha
mov
or
push
ljmp
ss
pop
push
jb
jl
out
mov
lcall
xor
xor
add
cmp
fdivl
sbb
cmpsb
jmp
mov
pop
data16
add
hlt
mov
insb
pop
xchg
mov
mov
push
cmpsl
push
leave
dec
xchg
inc
inc
push
shlb
stos
lods
sub
mov
sbb
aam
mov
sub
pushl
ja
adc
addr16
shlb
inc
sbb
and
ds
sahf
push
lcall
mov
push
imul
aas
inc
mov
pop
mov
je
insl
in
dec
sub
pushl
pop
js
incb
popf
out
pop
jnp
in
das
inc
std
and
and
xor
push
sbb
fcomip
bound
jl
test
adc
xor
push
out
inc
mov
call
std
mov
in
sti
mov
add
mov
in
js
call
cltd
insb
ret
stos
lcall
scas
adc
fadds
and
mov
ljmp
jb
xor
xchg
sahf
mov
repz
fadd
out
ud0
ljmp
xchg
rclb
adcl
rcrl
push
sbb
xchg
jle
shlb
mov
sub
decl
fildl
mov
daa
in
loope
jb
push
sub
popa
xchg
iret
loop
push
faddl
mov
shlb
icebp
cmp
jg
mov
or
adc
add
int
ret
add
dec
test
cmpsb
lods
cli
loope
mov
pop
aaa
into
mov
mov
inc
jmp
pop
mov
fisubrs
lds
iret
incl
xchg
clc
rolb
cli
pop
fcmovu
aaa
imul
stc
cmp
mov
or
cmp
mov
pop
or
xchg
movsb
insl
add
pop
mov
call
out
mov
adc
rcl
add
add
pop
cwtl
aaa
repnz
sbb
cwtl
jmp
xor
jle
pusha
fs
decl
sar
aad
mov
mov
shlb
push
orb
xchg
and
inc
cld
sub
sbb
mov
hlt
jmp
mov
jb
mov
pop
cltd
pop
push
jb
inc
xor
adc
mov
ljmp
dec
pop
mov
out
sti
mov
loopne
push
inc
sbb
cmp
je
mov
xor
mov
cmp
pop
pop
pop
add
lcall
jmp
jbe
fisttpl
dec
fcmovbe
sub
aaa
push
xchg
or
mov
or
jae
std
push
push
mov
fistl
inc
lret
add
lret
jnp
std
or
cmp
inc
push
push
push
cmp
push
xor
test
add
pusha
ljmp
call
incl
aaa
xor
adc
adc
cmp
cmp
sbbb
call
cli
out
repz
mov
add
add
call
push
dec
mov
jp
sub
or
in
push
loopne
ljmp
test
jg
add
mov
andl
fdivrs
mov
popf
adc
mov
mov
ret
out
rcrb
pop
daa
rcrb
lods
mov
jno
dec
pushl
sbb
mov
gs
fdivr
add
xor
jb
xlat
mov
jnp
sub
decl
sub
xlat
sub
bound
sti
mov
xor
loopne
and
pop
xchg
push
mov
lcall
dec
inc
lret
adc
in
les
test
div
mov
js
mov
jle
push
cmp
mov
or
mov
jmp
or
imul
adcb
aam
ret
ss
mov
xchg
xchg
cmp
aas
test
dec
lcall
lock
mov
jbe
mov
stc
cltd
int
mov
cmp
loope
addr16
fiadds
jle
in
loopne
pushl
andl
outsl
sbb
mov
lret
int
adc
jg
aam
lods
xchg
repnz
jbe
insl
push
ljmp
js
dec
push
in
pop
nop
mov
xchg
and
xor
adc
out
or
insl
out
add
insl
ja
and
dec
cmp
rorb
out
or
sbb
popa
xchg
daa
test
xchg
sbb
call
jl
mov
lods
or
mov
cmp
and
pop
incl
cmpsb
std
out
inc
and
adc
sub
push
jbe
inc
jno
sbb
clc
push
push
xchg
clc
push
out
mov
or
xchg
in
xchg
push
add
lret
fcom
add
shr
loope
push
push
std
jg
lahf
push
push
lret
or
adc
mov
add
in
das
daa
scas
or
jo
add
clc
ljmp
and
or
divb
add
or
or
sub
decl
ljmp
mov
cmp
aam
into
arpl
aam
adc
pop
sbb
mov
ljmp
pop
push
pop
jns
jb
ljmp
xor
adc
stos
mov
pop
lock
leave
mov
sbb
sbb
pop
pop
lods
iret
add
fisubl
xlat
xchg
dec
lcall
mov
xchg
insb
mov
les
sbb
into
sub
jmp
push
pop
fdiv
lcall
cmovns
movsl
push
cmp
loope
xor
sbb
sub
test
aad
ljmp
ljmp
test
cmp
or
cmp
in
test
sub
leave
pop
sub
jno
pop
mov
jmp
inc
pop
andb
fstpt
mov
mov
jp
ret
pop
jnp
call
decl
aam
push
jo
sbb
inc
and
adc
sbb
cli
sbb
decl
mov
sbb
lods
add
aaa
mov
push
add
sub
sar
call
jge
frstor
es
xor
test
sbb
jge
xchg
add
je
test
ljmp
js
scas
test
mov
or
out
lret
push
dec
lret
dec
ja
ljmp
imul
push
jb
out
je
jmp
ds
sarl
adc
or
rorb
dec
cli
inc
mov
cli
rcll
dec
add
cmpsl
ret
adc
adc
clc
cmc
and
cmp
sub
popa
mov
mov
fisubrs
mov
lods
push
sbb
push
sarl
mov
cmp
pushf
enter
sti
stos
or
jbe
or
and
pop
icebp
incl
add
int3
cmp
mov
lea
push
enter
or
incl
mov
ljmp
push
sub
leave
ret
xchg
pop
movsl
sbb
lods
mov
lahf
jle
inc
inc
add
js
xchg
xchg
adc
leave
test
mov
or
xor
popf
adc
decl
into
movb
pop
mov
es
mov
cli
lea
int
jecxz
in
mov
std
jge
popf
xchg
testb
mov
jne
add
add
push
add
incl
addl
ret
inc
movsb
sub
insl
jge
subl
or
pushl
jnp
push
xor
xlat
cltd
adc
out
shlb
push
jl
mov
jnp
mov
pushl
mov
jnp
push
mov
faddp
fistpl
add
adc
jno
lcall
sub
mov
xchg
ficomps
push
mov
jnp
dec
inc
insb
and
inc
ja
jp
dec
out
clc
out
testl
mov
sarb
imul
mov
jmp
fiaddl
loopne
out
push
push
scas
push
enter
cli
or
decl
sbb
pusha
or
stos
adcl
jl
ss
aas
daa
mov
repz
incl
out
mov
les
cmpsb
adc
out
je
pop
rcrb
out
or
mov
movsb
sub
cmpb
or
mov
lcall
sub
rclb
push
pop
pop
aaa
pop
jno
and
cmp
sti
jmp
or
bound
int
mov
into
notb
mov
fiaddl
lcall
in
insb
loope
adc
rolb
rcrl
imull
and
cmp
cmc
or
add
pop
sbb
or
or
js
jo
xchg
mov
mov
jecxz
jl
mov
sar
mov
sbb
enter
push
lcall
xchg
push
push
jne
xlat
and
jnp
cmpsb
xchg
scas
lcall
fs
push
sbb
in
or
dec
xchg
subb
jg
pushl
jo
out
or
jle
lret
or
push
fnsave
push
divl
cli
lods
imul
shlb
popf
push
cmp
pop
pop
les
pop
es
faddl
jge
fsubrs
dec
lods
into
out
ljmp
xor
push
sub
stos
test
mov
mov
or
mov
push
cmp
and
mov
and
xchg
pop
fst
sub
sahf
and
shrb
lcall
mov
dec
fistpll
out
dec
jo
test
test
and
in
scas
mov
cmp
mov
jns
sub
incl
pop
or
mov
pop
or
xchg
jnp
arpl
cs
in
mov
dec
add
incl
arpl
inc
rclb
leave
lock
or
inc
aad
push
xor
jb
cmp
incl
or
mov
pop
pop
and
rcl
adc
push
push
sbb
leave
mov
ljmp
xchg
push
mov
lods
sbb
fists
push
daa
das
mov
cld
lock
or
sub
mov
popf
mov
decl
mov
push
adc
sbb
shlb
in
sahf
or
test
in
sahf
out
filds
dec
push
popl
push
jne
in
dec
ss
gs
out
fs
inc
clc
lret
xchg
mov
subb
aaa
cmp
test
jg
hlt
orl
cmp
cmp
jnp
sti
int3
add
push
lcall
jae
mov
out
stos
stos
inc
jp
pop
in
test
ret
iret
xor
decl
lock
popf
js
cmp
testl
xchg
int3
call
mov
jle
nop
push
add
fdivl
iret
xor
mov
sti
lcall
lods
push
xor
adcb
loope
jo
fwait
int3
cld
sub
mov
or
xor
sbb
sti
popf
sahf
shl
in
pop
sbb
adc
je
jg
mov
inc
sub
sub
sbb
call
std
cmpsb
push
cwtl
sbb
movsb
testl
popa
or
decl
sub
push
jnp
push
push
mov
in
sub
jmp
mov
mov
sub
sbb
sub
mov
mov
push
das
clc
incl
xchg
cmp
push
sbb
mov
and
and
jge
fcompl
xchg
mov
iret
mov
js
in
dec
test
mov
push
and
xchg
dec
in
mov
loop
mov
dec
sbb
mov
decl
mov
mov
fisubl
cmp
xor
in
ret
mov
mov
lret
inc
ret
sbb
cwtl
clc
sar
sahf
xchg
insb
xor
mov
inc
jbe
or
movsl
lock
je
xchg
jg
cwtl
fistpl
lods
roll
jns
pop
outsl
xchg
add
pop
and
aaa
sbb
inc
icebp
pushl
push
stc
imul
scas
pushw
lret
in
jecxz
imul
jb
jg
ficoml
lock
jno
fwait
imul
out
xor
pop
jl
stc
and
stos
dec
lahf
inc
cmp
insb
xchg
out
lcall
sub
lcall
xor
std
or
xchg
xchg
mov
xchg
rclb
lahf
lahf
push
aas
test
xor
pushl
add
xor
call
inc
sbb
mov
inc
xchg
test
lcall
or
push
scas
xchg
dec
mov
outsb
mov
fbstp
iret
cmpsb
lahf
shlb
jmp
fs
call
fwait
out
stos
sbb
lods
push
and
pop
cmp
xchg
add
movsl
repnz
jmp
rolb
fnstcw
jg
or
je
daa
or
int
ret
cs
fbstp
adcb
pushl
push
call
jo
or
inc
aas
je
sub
arpl
adc
sbb
lcall
imul
fisubs
scas
inc
test
or
test
jmp
dec
and
sti
lods
mov
fimuls
nop
dec
das
dec
pop
mov
std
pushl
xor
xlat
push
cld
outsb
or
fisubl
daa
push
cwtl
in
bound
ljmp
imul
jg
cmp
mov
fildll
add
sub
jno
mov
in
fcomps
mov
decl
jmp
or
int3
dec
dec
idiv
pop
fcomp
mov
and
iret
shrb
into
int
ljmp
dec
scas
cmp
insl
rclb
loop
das
cmc
xchg
inc
push
shrl
push
ja
sub
out
cli
mov
cmp
popl
in
fcompl
dec
int
loop
aas
lods
repnz
clc
sbb
adc
inc
popl
sbb
stos
js
lods
xor
mov
cmp
cmp
and
dec
sti
icebp
loope
jo
xor
fs
cmc
mov
xlat
dec
lcall
fstp
or
push
pop
sti
xor
lds
fsubrs
in
mov
fistl
sub
jbe
sahf
lahf
xor
jae
cmpl
iret
insb
dec
das
jecxz
call
lret
mov
mov
loopne
or
sub
imul
add
pop
out
js
sbb
mov
icebp
and
inc
push
mov
fnsave
data16
push
sti
pop
repz
addr16
ret
out
jno
dec
into
or
pop
or
scas
mov
into
cmp
pop
mov
fidivrl
ds
decl
and
add
aad
loopne
inc
je
nop
stc
mov
ss
jmp
jb
jae
ja
pop
mov
nop
rcll
sub
inc
sbb
sbb
push
iret
fdivrp
das
clc
outsl
and
roll
stos
push
push
addr16
fs
out
mov
push
mov
movsb
das
enter
lcall
or
pop
or
cmp
sbb
jmp
bound
pop
ficoms
or
rcrl
lds
sub
decl
mov
sub
xchg
mov
nop
repz
mov
aad
es
pop
mov
adc
call
push
rcrl
inc
out
cmp
mov
dec
pop
mov
mov
incl
js
pushl
jb
gs
lea
aas
inc
popa
sub
mov
mov
push
icebp
pushl
outsl
sub
sti
frstor
fcoml
mov
incl
inc
imul
mov
filds
testl
lods
pop
scas
sahf
pop
cmp
int3
repz
in
jnp
in
xchg
insl
push
adc
or
sbb
subb
cs
jns
push
jge
scas
pushl
sub
mov
jne
cmp
sbbl
or
adcl
mov
loope
fs
hlt
rcrl
xchg
pop
je
cmp
add
aad
lcall
scas
sbb
lcall
data16
dec
sti
fsubrs
or
jb
jg
inc
into
pushf
add
in
andl
sbb
sbb
xchg
ret
xchg
adc
or
bound
and
jle
aam
jnp
rcrb
into
cmpl
adc
daa
dec
iret
enter
xchg
fidivl
jmp
and
ljmp
mov
decl
aaa
stos
pop
mov
je
outsl
lret
mov
scas
jb
dec
imul
dec
in
pushl
adc
push
lret
mov
fiaddl
int3
push
mov
mov
arpl
cmpsl
fldl
jno
cmp
mov
icebp
inc
mov
xchg
decl
loope
dec
das
mov
xor
es
dec
out
mov
push
es
xchg
lds
cld
cmp
and
push
loop
add
inc
pop
data16
jp
xchg
pop
jns
mov
jmp
je
sub
jmp
scas
push
lods
mov
cltd
lods
adc
cwtl
arpl
arpl
ljmp
aad
out
fsts
pusha
jae
mov
inc
fistps
int3
mov
mov
mov
test
or
dec
in
sub
mov
sbb
std
adc
xchg
popa
push
dec
popf
jb
add
int3
xchg
mov
cmp
cmpb
incl
push
sbb
mov
add
repnz
xorb
ja
out
pop
imul
or
pushl
cmc
inc
aas
lock
cmpsb
mov
scas
ja
push
mov
jo
xchg
sub
xchg
inc
ljmp
xlat
add
iret
jns
jb
and
test
fimuls
mov
fwait
fwait
xor
and
jmp
loop
pop
lahf
jo
das
pushl
or
adc
mov
fwait
add
or
dec
rep
fdivrs
cmpsl
mov
icebp
dec
jne
fldt
mov
repz
loope
jg
mov
mov
jge
add
pop
jge
adc
adc
pop
decl
and
aam
cs
aaa
dec
inc
outsl
test
lods
ljmp
mov
movsl
popf
mov
mov
xchg
jg
sub
dec
rolb
call
xchg
fdivrs
inc
fisubs
dec
and
test
shl
imul
fmuls
mov
adc
adcl
xor
adc
add
jg
jbe
inc
sub
inc
mov
sub
inc
stos
mov
pop
jg
sbbl
dec
test
or
test
or
xchg
fimull
stos
pusha
mov
xor
fs
call
jmp
lea
ror
into
scas
adc
and
aad
sub
add
and
jae
aam
pop
jmp
dec
test
adc
xchg
mov
stos
in
mov
loope
mov
imulb
cli
jmp
daa
into
dec
lods
cmpsb
jg
pop
jns
out
push
dec
sub
dec
adc
push
add
push
add
ds
ror
imul
test
jbe
add
adc
push
dec
xchg
loopne
lock
adc
das
jmp
mov
inc
mov
leave
and
sub
sarb
stos
fwait
pushf
enter
pushl
pop
sub
jl
movsb
aas
jecxz
xor
sbb
xlat
inc
int3
jle
jb
pop
cmc
movsl
sub
sar
call
push
fisubl
xchg
pushf
mov
cmpsl
mov
test
jg
clc
jg
or
mov
dec
push
inc
add
bound
insl
sub
gs
or
insl
push
je
add
scas
inc
rcrb
and
adc
daa
adc
cli
dec
pop
mov
or
jmp
lods
call
xor
jno
jg
push
dec
mov
cmc
xchg
xor
lahf
add
arpl
or
mov
xchg
insl
adcb
pop
std
ds
mov
sbb
pop
pop
lret
cmp
dec
mov
insb
fstpl
jp
sti
xor
xlat
push
xchg
cmc
lods
sahf
das
add
cmp
dec
out
addb
repz
pop
and
adc
pushf
inc
imul
hlt
ljmp
and
push
add
and
outsl
pop
mov
das
cmp
mov
insb
add
inc
inc
das
stos
pushl
mov
pop
mov
clc
int
arpl
jo
stos
sahf
dec
mov
add
in
sub
scas
cmp
and
sahf
jns
aas
or
or
dec
std
jo
jns
out
dec
cmp
cli
lock
pop
lcall
sub
mov
push
xchg
orb
lods
cmp
sub
xorb
mov
adc
cmp
decl
orb
push
jbe
test
js
jmp
lods
jno
test
jo
add
jae
and
dec
call
scas
dec
incl
mov
sub
push
fdivr
xchg
das
imul
add
jecxz
jmp
cld
or
fnsave
aaa
rcr
pop
xchg
cwtl
call
xor
out
lods
divl
add
bound
sti
adc
shll
ja
inc
mov
ficoms
push
imul
push
pop
mov
lcall
repnz
decb
and
sar
cmp
lds
dec
add
es
and
sbb
loop
inc
xor
ret
out
jg
insl
xor
leave
mov
sbb
add
or
mov
mov
inc
sub
mov
imul
adc
jl
sub
mov
mov
decl
shl
mov
adc
mov
repz
inc
inc
xchg
jmp
mov
decl
inc
xor
pop
inc
call
and
jbe
outsl
jmp
pusha
outsl
dec
inc
lods
xorb
adc
jg
xchg
out
out
pushf
sub
cmp
pop
dec
lahf
sbb
test
inc
in
mov
and
aas
es
mov
lret
add
mov
enter
push
inc
andl
inc
addb
movsb
fmull
xlat
fcmovb
movsb
push
dec
stos
jae
sub
movsb
cmc
mov
or
inc
call
hlt
loopne
add
jl
mov
cmp
jmp
pop
add
jns
cmp
pushl
mov
das
xor
push
mov
test
sub
jmp
fidivrs
mov
jg
adc
ret
rcll
cmpsl
lcall
sub
mov
int3
sar
mov
or
imul
test
xor
or
lods
inc
adc
call
xchg
clc
ret
test
xchg
push
jns
push
sarl
clc
decl
mov
hlt
jne
pop
cmpl
mov
xor
sbb
jl
in
jge
idivw
or
xchg
sbb
sbb
adc
xchg
das
fistps
lcall
mov
xchg
inc
arpl
and
push
push
cld
gs
cmp
filds
adc
push
dec
pop
sarb
mov
jmp
and
jb
lret
mov
inc
jp
xchg
ljmp
mov
cmp
ret
bound
outsl
cmc
mov
push
shr
cwtl
mov
dec
cmp
lcall
sbb
andb
pop
imul
adc
push
shl
push
call
ffreep
stos
rcl
inc
lahf
sahf
pop
add
pop
lds
cmc
or
addl
pop
lret
decl
xchg
pop
fsubl
cwtl
sahf
inc
cwtl
pushf
cld
repz
mov
xchg
addps
jae
jg
rclb
inc
cmp
dec
movsb
mov
jo
gs
push
js
ljmp
cld
cmpsb
call
dec
mov
in
mov
sub
mov
clc
push
lret
incl
add
int3
std
or
outsb
sub
mov
std
xlat
lods
sbb
xchg
mov
aas
xlat
sub
stos
pushl
mov
aad
add
repnz
stos
sahf
inc
xor
cmpsl
xchg
dec
xchg
decl
sbb
cltd
ret
push
cmp
jg
mov
cltd
xchg
sti
scas
ljmp
lods
lret
push
stos
gs
lods
jmp
movaps
into
mov
cmp
sub
ror
push
add
aam
incl
or
mov
xchg
pop
pop
push
lods
cmp
not
call
mov
xlat
clc
sub
xchg
clc
mov
adc
decl
mov
mov
data16
lock
pop
push
or
sub
lcall
std
jp
fldcw
jnp
sbb
mov
mov
push
pushl
jb
ljmp
push
sbb
adc
lret
mov
aas
je
cltd
outsl
cmpsl
stc
lcall
decb
pop
pop
or
sub
xchg
ret
fistpl
iret
pop
fsubrs
mov
dec
push
sbb
loope
push
xlat
loopne
cmp
xor
and
sahf
push
outsl
hlt
and
mov
adc
dec
cmp
ljmp
jbe
test
add
pop
add
and
or
push
xor
sbb
jge
int
and
test
mov
sbb
or
mov
sbb
add
lcall
push
pusha
sahf
imul
insl
subl
repz
sbb
ljmp
adc
mov
pop
and
sti
aas
cltd
xor
mov
iret
sbb
mov
sbb
ret
mov
jbe
pop
das
dec
and
nopl
incl
ljmp
sub
mov
jno
arpl
cmp
xchg
push
nop
sbb
fwait
das
jg
dec
pop
bound
mov
add
out
lcall
inc
ljmp
lret
mov
popa
push
push
lods
and
aaa
cwtl
mov
dec
or
jo
incl
cli
push
addl
xchg
xchg
popf
push
ret
or
jnp
popf
add
inc
clc
xchg
fstpt
lock
cli
ljmp
dec
movhps
mov
in
mov
les
xchg
pop
dec
scas
clc
jmp
mov
xchg
js
jmp
popf
imul
mov
mov
cmp
jmp
dec
xchg
stos
sbb
incl
movsb
and
inc
fmulp
xchg
xchg
jo
mov
dec
dec
js
sub
arpl
dec
inc
pop
and
and
das
addr16
jge
jo
push
sahf
pop
xchg
mov
out
pop
or
rolb
imul
jno
fistpll
std
jae
sahf
mov
xlat
lret
xchg
mov
dec
jle
in
xchg
dec
fs
and
push
ljmp
push
add
loopne
jge
xchg
xchg
pop
in
pop
mov
loope
xchg
int3
ds
inc
jmp
subl
xchg
and
adc
dec
movsl
add
call
bound
fs
mov
cmc
cmp
inc
mov
das
xchg
xor
cmp
nop
cmpsl
push
movsb
stos
jp
lret
sahf
inc
incl
mov
fadd
cmc
dec
jno
roll
into
sarl
aam
jns
mov
xchg
mov
outsl
sti
mov
pop
sub
push
mov
mov
xchg
push
xchg
add
adc
mov
ljmp
pop
mov
pop
andnps
mov
mov
stos
dec
adc
jmp
clc
ljmp
mov
xchg
pop
aad
loop
gs
cmp
mov
loopne
xor
shll
inc
cmpsb
incl
js
sub
dec
mov
dec
insb
inc
in
in
incl
sub
mov
pop
lods
mov
arpl
je
push
decl
cmp
movsl
pop
cwtl
push
incl
lea
jbe
test
scas
push
push
xor
mov
jae
xchg
nop
fdivl
jg
pop
mov
adc
lcall
pop
or
pushf
xchg
call
pushf
icebp
pushl
cld
xchg
or
xchg
sahf
je
mov
push
adc
leave
inc
push
pusha
xchg
mov
inc
add
xor
mov
aam
cltd
add
xlat
fstps
cmp
jmp
setnp
mov
cmp
xchg
mov
adc
aam
inc
pop
test
aaa
cmp
sbb
call
inc
dec
sub
out
mov
sub
pusha
test
ficompl
xchg
mov
repnz
jmp
jle
or
shl
imul
jg
and
stos
mov
repnz
dec
push
fsubrs
mov
mov
aas
push
pop
jbe
inc
pop
je
pop
ljmp
cli
and
mov
adc
jmp
mov
ljmp
pop
cmpsl
pop
dec
mov
aam
fsub
popl
rorb
fisubrl
mov
and
ljmp
rcl
popa
jle
mov
aam
dec
movsb
lods
out
mov
movsb
mov
inc
dec
dec
fdivr
jg
call
cmpsb
ljmp
pop
faddl
clc
sub
js
out
and
jmp
test
fisubs
cmp
adc
push
sub
jbe
repz
or
dec
cltd
rclb
push
lods
sbb
adc
xchg
cmp
push
jae
hlt
test
les
mov
adc
or
cmp
fcoml
xchg
repnz
scas
cld
mov
dec
cmpsb
clc
call
adcb
dec
dec
lods
sahf
std
pop
and
xchg
xchg
je
xchg
sar
lcall
sbb
mov
fidivrl
cltd
std
mov
lock
sub
rorb
xchg
push
xor
sbbb
or
inc
outsl
sbb
clc
adcl
mov
jmp
sbb
lcall
lods
pop
icebp
mov
insb
jle
jecxz
push
xor
shll
das
aaa
pop
icebp
decl
cmp
scas
push
into
inc
cmpsb
sbb
mov
out
sub
fsubp
sar
fnsave
ja
test
dec
and
pusha
mov
iret
jmp
push
ja
aam
callw
imul
int
icebp
int3
mov
leave
and
cld
cld
aad
call
aam
adc
mov
fiadds
lds
pushf
scas
pop
sbb
in
fs
out
clc
test
loopne
hlt
inc
int3
pushf
mov
data16
shl
push
fistpll
xor
adc
mov
imulb
imul
sbb
or
push
imul
xchg
inc
sbb
cs
cmpsl
ljmp
mov
cmp
dec
fistpll
mov
jb
cmp
nop
push
jno
out
ljmp
jbe
ljmp
addb
cmpsl
dec
cwtl
test
call
sahf
or
popf
inc
frstor
lods
cmp
mov
inc
arpl
cmpsl
jecxz
clc
incl
push
cli
jnp
mov
mov
fsubs
mov
jae
popa
cld
imul
imul
xchg
int3
insl
mov
dec
mov
sub
fiaddl
lcall
fcomps
pop
call
xchg
sahf
adc
addr16
aas
and
pop
jb
insb
fcomip
lcall
xor
fiaddl
jo
push
loope
outsb
xchg
pushf
mov
lcall
sti
push
pop
xchg
adc
adc
ljmp
test
clc
mov
mov
xchg
jmp
mov
inc
jns
push
pop
mov
sbbb
call
sbbl
fsubl
adc
add
push
fcomps
js
push
imul
mov
cmpsl
dec
jbe
cmpl
or
pop
sbb
pop
lock
jmp
sub
push
test
js
cmp
mov
dec
xchg
jmp
adc
fs
jno
xchg
or
pop
mov
dec
pop
sbb
fiadds
ja
call
ds
aas
push
pop
xchg
adc
rorl
aaa
jns
cmpsb
rclb
xchg
das
jg
pushl
mov
out
fwait
into
out
xor
mov
xchg
insb
inc
pop
mov
and
shrl
incl
test
adc
mov
gs
mov
sar
dec
mov
out
and
loope
push
decl
hlt
roll
adc
jns
mov
mov
cmp
lods
inc
add
jmp
mov
jmp
push
add
es
repz
adc
fsubrl
cmp
mov
fwait
mov
cmp
sbb
out
imul
cmp
je
xchg
pop
or
call
cmp
shll
mov
dec
mov
mov
jg
cmpsl
outsb
xchg
cwtl
test
sbb
cld
call
fmulp
add
add
dec
adc
orl
cmp
xchg
out
jg
dec
push
cmpsl
add
lcall
jle
jbe
jmp
lcall
mull
ret
rorb
popf
inc
int3
cwtl
fcomp
call
cmp
outsb
lcall
lahf
pop
subl
nop
clc
lds
mov
inc
mov
or
jmp
sbb
out
hlt
and
popf
jns
roll
scas
inc
jmp
enter
call
scas
mov
aas
sbb
push
adc
mov
add
jecxz
js
mov
call
hlt
test
daa
lock
dec
jmp
ljmp
dec
lods
cmp
sub
jnp
sub
push
xor
xlat
popa
repz
mov
cli
ljmp
mov
cwtl
clc
inc
out
xor
sub
insb
ljmp
icebp
js
pushl
and
push
sbbl
xor
sub
imul
call
stos
imul
jns
out
mov
push
shrb
mov
clc
fs
in
int3
dec
icebp
out
add
cs
pop
lcall
add
jg
inc
mov
movsb
mov
and
lgs
pop
inc
dec
sub
cli
add
sbb
mov
insl
dec
ljmp
js
mov
xor
mov
lods
mov
jp,pt
pop
sub
pop
cld
call
push
sub
mov
aam
fiaddl
add
mov
dec
jne
cmp
aam
add
xor
js
out
inc
jno
imul
jmp
mov
xchg
cmc
sbb
dec
sub
call
cld
rorb
and
push
cmp
jae
mov
test
out
in
adc
out
clc
aam
sarl
faddp
inc
fldt
mov
pop
test
push
mov
jae
movsl
into
adc
pushl
mov
stos
sub
cmc
pop
adc
bound
dec
xorl
xor
iret
incl
inc
pop
outsl
in
mov
push
add
sub
and
adc
gs
jg
adc
dec
cmp
mov
out
inc
xchg
mov
push
call
jle
jge
dec
and
lea
les
push
call
push
pop
shll
sar
rol
cli
das
sbb
sub
push
add
cmp
repnz
push
ljmp
fidivl
cmpsb
add
fildll
sub
ret
add
andb
add
push
mov
mov
xchg
inc
mov
test
lret
push
inc
inc
fdivr
loopne
adc
dec
xchg
sbb
or
add
pusha
add
jnp
data16
add
add
or
mov
pop
push
or
cmp
or
or
adc
aaa
mov
mov
adc
mov
adc
adc
adc
add
data16
or
pop
vunpcklps
rolb
or
xchg
add
add
adc
add
and
lcall
roll
add
jge
mov
aam
xor
adc
pop
and
xor
jmp
rcll
bound
js
fisubl
cmp
adc
xorb
pusha
insl
ja
push
pop
sub
and
test
mov
pop
and
sub
mov
scas
pushf
jae
adc
into
add
subb
ja
adc
pop
pusha
inc
lods
push
adc
pop
popa
jno
and
adc
pop
xor
inc
mov
or
xor
adc
loope
roll
mov
sbb
xorb
scas
fiaddl
or
js
mov
inc
dec
nop
std
or
outsl
clc
mov
sbb
cli
and
mov
inc
jnp
test
fnstsw
ficompl
cmpsl
xor
mov
test
pop
lahf
mov
movsl
jecxz
cli
pop
mov
and
jmp
clc
cmpl
jg
decl
insb
sub
addr16
out
or
push
push
xchg
add
repnz
inc
pushl
pop
js
jle
fcmovnu
clc
cmp
fisubrl
in
mov
decl
sbb
int3
lcall
mov
push
pop
mov
pop
pop
mov
jg
popl
movb
xchg
sbb
scas
adc
mov
xor
lods
scas
xchg
mov
movsb
cltd
jns
lcall
xchg
sarl
and
roll
outsl
lcall
cmp
push
out
in
and
ss
repz
cmpsb
pop
outsl
icebp
mov
inc
or
push
pop
lock
std
or
pop
mov
daa
test
aaa
dec
dec
pop
push
out
outsl
loope
loope
add
lea
int
arpl
call
jp
push
out
or
cld
push
fcmovnb
mov
sahf
pop
clc
sti
jg
jno
lock
jg
inc
icebp
xchg
std
sarl
xor
lcall
mov
jmp
sbb
add
mov
out
pop
jb
mov
or
push
mov
incl
int
inc
fwait
sbbb
mov
dec
jp
push
gs
jg
aas
add
add
stc
loope
mov
sar
andl
outsb
outsl
adc
icebp
testb
mov
jg
xor
jns
mov
in
repnz
jno
pop
sub
jg
mov
sbb
sbb
cld
andb
ljmp
clc
jb
adc
push
lock
lods
jp
testb
sbb
into
fcomps
sbb
sbbl
into
andl
aas
loopne
cli
adc
aaa
xchg
in
add
es
or
dec
fisttpll
out
aas
std
cli
outsl
mov
push
push
push
idivl
cmp
sub
incl
inc
mov
jg
je,pn
sub
jg
imul
mov
mov
inc
es
lcall
gs
jns
enter
or
push
pushf
push
scas
xlat
sub
cmp
sti
punpckhbw
cmpsb
or
or
orb
mov
cmp
shl
in
stos
js
jmp
xchg
pop
clc
pop
hlt
lret
movsb
fistl
add
lea
jg
gs
std
xorb
jg
aas
pop
addr16
adc
ret
das
pop
pop
pop
shlb
scas
cli
incl
push
jno
outsb
lock
or
sarb
std
pop
les
cli
mov
mov
inc
arpl
stos
mov
and
insl
add
leave
push
ljmp
push
shrl
mov
push
mov
adc
and
sbb
xchg
fbstp
and
out
test
jae
push
iret
sti
cmp
ficoms
aam
sahf
imul
call
mov
mov
enter
add
cld
call
js
cmp
ljmp
dec
shrl
push
mov
push
movsb
xchg
or
mov
stos
dec
lods
xor
sbb
ds
cmpsl
scas
popa
in
pop
or
mov
call
pushf
cld
aas
clc
jge
jnp
sbb
outsb
mov
sbb
jecxz
inc
adc
mov
adc
xor
stos
adc
dec
adc
pusha
imul
add
in
incl
das
xor
daa
xchg
mov
cwtl
pop
mov
call
xchg
and
jae
incl
jle
jg
mov
lahf
cld
sub
aas
stc
add
out
gs
jno
fidivrl
mov
adc
pop
cld
addl
adc
and
loopne
push
cmp
fmull
enter
jecxz
scas
incl
jmp
sub
in
pop
mov
sub
mov
dec
incb
fisubrl
aas
shr
mov
or
cld
inc
or
sti
lds
pop
jg
add
jg
mov
aad
pop
in
divb
xchg
movsb
mov
iret
push
pushl
push
sbb
stos
icebp
pop
incb
jno
sti
fcomip
call
push
inc
jecxz
sbb
sarl
adc
loopne
sbbl
xorl
aad
mov
and
cmp
dec
push
js
mov
aas
mov
fsubrl
lock
incl
ss
and
clc
xchg
inc
rcrl
sbb
jne
cld
adcb
std
mov
adc
inc
aas
push
shll
cld
decl
inc
jb
fistpl
adc
call
jno
lcall
pop
pop
nop
mov
inc
sti
arpl
daa
std
or
sbb
ljmp
mov
inc
cmpsb
popf
push
loop
sbb
or
imul
xor
dec
xor
push
fsubr
fistps
lds
fidivrl
jg
stos
inc
pop
add
dec
mov
sub
jge
xor
lahf
les
sbb
shrb
xor
inc
and
mov
in
stc
mov
lahf
outsl
int3
push
sbb
pop
sar
jmp
arpl
out
out
outsl
xchg
ljmp
sar
test
in
jge
popa
push
test
jbe
outsb
hlt
sti
fsubs
shl
dec
add
incl
xchg
aad
loop
lahf
mov
or
out
lcall
mov
pop
shl
cld
mov
adc
stos
pop
jg
das
in
loopne
shrb
rcl
jg
adc
xor
pop
rcr
dec
mov
push
pushf
lea
jp
jnp
jecxz
adc
inc
ds
pop
adc
imul
or
inc
pop
xor
rorb
and
mov
lods
test
xchg
cmpsl
push
sbb
mov
pop
inc
cmpsl
enter
mov
into
test
pop
insl
mov
movsb
insb
or
and
xchg
cmpsb
test
fidivrs
clc
insb
test
sar
aas
repz
sbb
lock
in
jmp
out
sbb
and
jle
aaa
clc
push
std
mov
out
sub
mov
jne
or
cmc
mov
decl
push
mov
fsubrp
dec
sahf
enter
fcmovb
inc
adc
inc
loopne
test
out
sarb
out
pop
or
or
dec
ss
sti
adc
inc
lods
movsb
or
repnz
clc
dec
cmc
mov
jl
call
scas
cli
in
add
pop
in
cmp
jmp
outsl
inc
jmp
mov
pop
lock
jmp
hlt
dec
mov
sub
aas
mov
jg
mov
cmp
or
addr16
sbb
cld
daa
jp
std
adc
adc
loopne
cltd
or
mov
ret
nop
cmp
das
push
mov
add
lock
pop
pop
div
cld
idivl
pop
aas
adc
fs
loope
jae
push
xor
jg
ljmp
cmpsb
jge
fbstp
out
xchg
add
out
insb
clc
pop
inc
icebp
mov
loope
mov
cmpsl
popf
bound
cmp
ja
push
daa
outsl
das
jge
fxtract
mov
call
pop
lock
decb
adc
mov
and
adc
call
add
dec
or
pop
in
mov
inc
add
cltd
mov
mov
aaa
std
fucomip
or
inc
sbb
xchg
rcrl
jle
icebp
ret
ror
sbb
cmp
jmp
jg
idiv
stos
cmp
aas
pop
clc
loope
loope
mov
sub
lahf
jp
dec
add
xlat
mov
inc
rcl
je
xchg
fldenv
iret
mov
mov
lcall
decb
jno
pop
gs
imull
jg
pop
out
jg
jno
ret
xchg
xchg
cmp
xchg
cwtl
arpl
out
inc
push
dec
jge
pop
clc
xchg
cmpsb
ljmp
ds
inc
mov
in
sbb
xchg
imul
jle
bswap
pop
outsl
jmp
adc
mov
daa
jmp
faddl
mov
mov
outsl
xchg
pop
add
pop
stc
push
dec
out
fistl
movsb
mov
mov
enter
std
repz
add
fsts
dec
mov
xchg
scas
or
add
push
sti
pop
inc
add
and
xchg
push
push
nop
mov
mov
iret
and
or
cwtl
out
dec
sub
fwait
dec
mov
or
cmp
and
cmp
or
add
push
add
mov
mov
and
jg
add
pop
jb
movsb
add
das
push
popa
push
inc
add
test
xor
or
push
sub
iret
and
test
and
mov
jle
imul
inc
add
mov
cs
nopl
dec
test
repz
dec
decl
or
jnp
data16
xchg
xchg
movsl
push
daa
add
xchg
dec
and
cmpsl
push
and
imul
and
movsb
push
movsb
inc
scas
push
rclb
add
jbe
push
test
and
imul
push
inc
aas
ljmp
scas
pop
dec
lods
push
mov
pop
sbb
add
pop
sbb
inc
mov
pusha
sbb
mov
mov
adc
adc
fs
mov
insb
or
lret
imul
enter
imul
imul
into
mov
jbe
fnstenv
fdivs
pop
add
imul
aaa
xchg
or
call
add
outsl
fcmovnbe
jo
mov
push
shll
add
outsl
push
shll
fidivrl
mov
push
ret
mov
fidivl
and
jge
fisttps
add
and
ds
in
movsb
push
mov
add
mov
fcompl
push
mov
push
push
fnstcw
push
jne
push
aam
push
ret
cld
mov
mov
mov
push
xor
add
outsb
jbe
push
jmp
out
mov
add
inc
xchg
jns,pn
iret
mov
jno
lret
jge
mov
stos
aas
add
ja
push
push
xlat
jne
jo
pop
add
ja
push
aad
push
mov
insb
jae
ja
js
push
jns
push
jp
add
or
push
fidivrl
sarl
ja
lds
les
je
mov
mov
jmp
ljmp
xchg
in
xchg
mov
push
pop
cs
xchg
xor
xchg
push
pcmpeqw
lcall
fisttpl
mov
cwtl
aaa
push
lcall
push
cmp
pushf
cmp
ds
push
out
popf
xchg
popf
aas
push
sahf
inc
pop
mov
inc
lahf
mov
mov
sti
push
jecxz
push
imulb
movl
out
out
pop
lock
hlt
clc
stc
cli
sti
test
incb
jecxz
inc
push
jae
add
xchg
fldcw
add
add
pop
data16
insb
add
pop
add
pop
or
mov
add
repnz
add
add
or
add
cmpb
or
in
lods
stos
test
test
or
test
mov
add
pop
adc
pop
adc
lods
fnstsw
xor
femms
lods
lods
cmp
sbbb
pop
push
scas
add
mov
insl
scas
scas
insl
lods
pop
pop
adc
pusha
in
add
lods
adc
sbb
sub
scas
scas
scas
inc
and
scas
sbb
mov
mov
lcall
mov
push
sbbb
mov
push
mov
push
and
aaa
xor
and
mov
test
pop
and
ficoms
pop
sub
pop
sub
mov
stc
or
popa
pop
sub
ret
and
mov
aam
dec
sub
es
or
pop
aas
cmpsb
pop
or
mov
fdivrs
mov
cmp
cmpsb
add
mov
xor
xor
pop
or
mov
push
add
pop
pop
xor
jmp
mov
pop
das
push
cs
xor
add
xor
das
pop
push
push
xor
fbstp
inc
dec
inc
das
inc
inc
xor
adc
push
xor
mov
pushl
push
push
popa
jbe
cmp
jl
jge
jno
outsl
add
pusha
pop
pushw
dec
dec
incl
add
mov
mov
cwtl
sahf
mov
pushf
fwait
lcall
xchg
mov
test
xchg
xchg
sub
es
pop
jle
ja
jns
dec
push
bound
js
ret
adc
xor
jne
je
pusha
adc
bound
or
jo
test
push
jae
add
pop
pop
scas
lods
pop
popa
mov
sub
dec
jle
xchg
pop
push
dec
add
mov
mov
dec
and
cmpsb
push
mov
xor
mov
sti
dec
xor
ja
push
ja
jb
cs
xor
mov
mov
push
add
mov
and
out
out
outsb
and
mov
xchg
jo
sar
pop
push
inc
mov
cmp
mov
inc
add
jae
xchg
jp
fildll
inc
push
popf
inc
mov
aaa
add
xchg
jno
lret
addr16
iret
push
bound
mov
mov
loope
out
inc
push
sahf
mov
insb
add
inc
imulb
leave
xchg
xchg
pop
push
test
pushl
dec
push
movsb
jae
add
jb
shll
add
pop
xlat
pushf
push
sar
ljmp
rcrb
insl
outsb
mov
repz
dec
mov
add
ja
sahf
jbe
fistpl
add
fstps
outsb
ds
push
add
and
pusha
xchg
mov
js
mov
or
shrl
insb
pop
jns
imul
push
ds
add
jge
push
jg
fiadds
or
pusha
call
mulb
mov
in
adc
mov
add
test
xor
sahf
mov
outsb
push
insl
push
jb
out
in
push
jle
or
jecxz
sti
popf
int
or
push
aad
push
imulb
int
pop
jne
fildl
adc
push
adcl
addb
sbb
test
outsb
faddl
in
mov
push
xchg
fwait
add
push
out
xchg
in
xchg
lock
pop
cmpb
scas
outsb
out
in
outsb
ficoml
cltd
xor
cwtl
push
cmc
sahf
xor
mov
ss
pushf
cmp
sub
es
aam
jle
test
cmpsl
push
cmpsb
scas
jo
test
sahf
mov
sub
shrb
fmul
mov
lgs
add
into
mov
shll
cmpsb
sarb
sarl
push
aad
jle
data16
add
add
std
dec
mov
jne
je
dec
daa
addb
cltd
sub
incl
sbb
es
push
adc
aas
and
push
add
add
ds
imul
mov
adc
sbb
xchg
push
mov
and
sbb
or
push
add
and
loopne
lods
pop
and
cs
mov
aas
and
sub
xor
or
aas
aas
cmp
in
inc
cmp
and
cmp
sbb
inc
jbe
cmp
mov
insl
inc
inc
jle
cmp
adc
ds
jle
sti
ds
cmp
adc
ds
xor
outsl
jbe
dec
dec
inc
test
mov
pop
in
mov
mov
addr16
jg
in
pop
mov
ds
lods
stos
test
cmpsl
cmpsl
cmpsb
cmpsl
add
decl
dec
test
mov
mov
ds
xor
xor
sub
add
add
mov
fildl
xor
inc
mov
push
push
push
push
push
imul
lcall
push
pop
push
push
push
imul
das
pop
imul
cwtl
xchg
pusha
xchg
nop
cltd
mov
mov
nop
test
insl
popf
push
jg
je
xchg
jns
jle
addl
jo
inc
pop
adc
lds
subl
out
push
addb
add
sbb
shlb
or
incl
push
add
cmc
repz
dec
xor
add
aas
add
add
jg
xchg
pop
cmp
test
add
mov
add
fcomi
aas
nop
fstpt
push
mov
fnstsw
repnz
loopne
add
mov
es
gs
jecxz
pushf
add
mov
push
in
iret
sti
dec
sti
lcall
or
mov
push
pop
mov
jo
dec
lret
js
into
xchg
add
jp
add
mov
mov
test
scas
xchg
js
in
and
out
fnstcw
jmp
push
xchg
push
sub
nop
sub
pop
xchg
das
push
xchg
xor
xchg
xor
xchg
outsb
lcall
es
jbe
negl
data16
int3
fst
es
push
lret
loopne
sub
jle
std
into
fdivrp
mov
pop
inc
imul
xchg
add
test
fldcw
add
jge
sub
xchg
inc
push
dec
dec
dec
dec
xchg
jmp
decl
or
pop
or
add
push
dec
or
adc
cmp
fsubr
in
outsl
adc
dec
or
add
push
adc
add
repnz
inc
or
pop
pop
cmovg
inc
dec
sti
mov
push
dec
sbb
inc
adc
inc
inc
fscale
adc
sbb
dec
add
dec
adc
inc
ds
cmp
xchg
nop
icebp
cmp
cmp
daa
and
sbb
and
jmp
adc
sub
xor
xor
sub
sub
push
add
aam
stos
lods
mov
addb
mov
pop
mov
flds
mov
mov
add
add
mov
outsl
add
push
mov
sbb
add
mov
cmpsl
mov
and
jbe
add
pop
nop
or
adc
jmp
ret
sbb
incl
add
push
outsb
sysret
mov
es
xor
andl
ja
cmpsb
pop
stc
sysret
in
jo
leave
leave
lock
hlt
sbbl
jg
sbbl
mov
xor
add
or
jg
lahf
test
add
into
jg
cli
shlb
add
inc
test
mov
jg
sub
repnz
push
xor
add
xchg
jg
mov
mov
roll
das
sti
mov
jle
push
leave
scas
inc
dec
sbb
pop
jo
jg
xchg
orl
push
add
loope
idivb
mov
cld
jg
mov
and
jle
cmpsb
std
bound
adc
jg
bound
into
jg
mov
nop
pop
jg
xor
and
and
add
add
data16
arpl
movb
sar
inc
or
lods
call
js
push
dec
xor
or
dec
adc
mov
orb
jg
rcrl
inc
add
adc
jg,pt
adc
jbe
inc
bound
adc
and
sbb
scas
incl
add
enter
jmp
lods
jle
lret
imul
dec
add
add
add
adc
push
test
add
xchg
push
cmp
pop
add
adc
pusha
adc
jmp
mov
jg
add
imul
and
lea
incl
xchg
add
jg
cwtl
add
pop
sub
xor
dec
jg
pop
je
lods
jle
ljmp
pop
fdivrp
cmpsb
ljmp
mov
pop
pop
pop
add
fcmovu
mov
daa
aas
aaa
pop
pop
push
add
jle
lock
cmpsb
aaa
add
add
mov
jle
sbb
or
or
dec
xchg
cmp
sldt
mov
in
mov
daa
push
arpl
test
mov
das
pop
push
mov
arpl
out
lcall
decl
dec
test
pop
dec
test
stos
ljmp
dec
je
jle,pt
test
mov
dec
test
push
dec
push
popf
iret
mov
push
jne
push
push
jne
pop
fildl
out
push
jnp
push
mov
mov
js
dec
sbb
pop
add
mov
fnstsw
pop
es
mov
push
outsb
notrack
jle
fs
cmp
inc
outsb
ss
ljmp
decl
fisttpll
xchg
dec
ja
xchg
dec
push
movsl
test
lods
insl
inc
fiadds
mov
mov
mov
xor
int
push
sahf
inc
out
mov
ss
adc
aas
popf
inc
and
mov
push
pushf
cmp
fistl
push
xchg
xor
mov
jnp
xchg
xor
sub
sub
nop
daa
ss
sahf
adc
out
cs
mov
xor
or
insl
cwtl
aaa
outsb
incl
push
xor
mov
adc
jg
pop
fnsave
xor
inc
sahf
nop
mov
jbe
fisubl
ror
pop
cs
add
ja
cltd
mov
shll
aad
xchg
movb
ja
pop
bound
divb
mov
add
push
push
imul
or
sbb
mov
xor
inc
add
outsl
shrb
add
push
iret
adc
add
or
and
out
fwait
cs
adc
pop
push
xor
inc
sahf
mov
mov
push
imul
mov
sbb
test
push
lock
cmp
cmp
pop
cmp
icebp
add
push
in
add
mov
pop
push
fdivrp
decl
addb
inc
out
pop
adc
shrl
push
mov
mov
pop
push
enter
push
sbb
xor
dec
cli
push
idiv
andb
inc
xchg
std
dec
add
out
into
jmp
syscall
mov
sub
sub
incb
outsl
add
xchg
pop
lcall
or
mov
add
mov
sub
adc
adc
pop
cld
sbb
mov
data16
sti
push
rclb
lcall
std
out
add
popa
xchg
pmaxsw
lcall
or
or
mov
xor
incl
cmp
ds
incl
xor
or
mov
or
push
nop
mov
incl
rorb
inc
mov
sbb
dec
or
ljmp
scas
jns
dec
push
mov
lods
xchg
clts
add
movsl
add
mov
pand
adc
pushl
sti
out
push
mov
push
rcl
push
incb
dec
add
pusha
add
add
iret
outsb
push
push
and
push
call
imul
push
je
add
sub
dec
ficoms
add
push
std
insl
or
call
and
call
or
adcb
cld
pop
and
add
call
jg
aaa
push
popa
mov
idiv
add
imul
je
es
call
or
inc
pop
mov
insl
repnz
pop
pop
inc
rcr
fcmovu
xorps
aaa
mov
adc
shll
mov
mov
push
and
add
sahf
ret
pushl
hlt
pop
xchg
push
adc
jmp
ljmp
sahf
int
inc
lahf
inc
inc
push
inc
inc
pop
lea
mov
in
mov
dec
push
stos
push
popf
inc
cmpsb
dec
cmpsb
xchg
int3
jnp
inc
cs
and
negb
add
and
insl
dec
rcrb
push
shrb
rorl
xchg
int
outsb
shrb
es
and
fwait
push
push
jb
imulb
dec
and
insl
pop
daa
dec
xchg
jmp
call
push
push
test
cs
addr16
cmp
dec
push
sti
ficompl
add
repnz
mov
popfw
cmp
aas
jmp
xchg
decb
cwtl
xor
xchg
inc
push
xchg
push
xchg
fisubs
push
aaa
push
lcall
fisubl
push
xchg
es
xchg
xchg
notb
sub
call
and
dec
mov
scas
decl
push
xchg
inc
jmp
or
jb
fimuls
push
dec
push
fidivl
aad
or
faddl
jge
imulb
push
jnp
jp
or
jl
or
fnsave
fdivrl
jge
jg
std
add
jle
repnz
push
dec
fwait
std
std
fwait
push
dec
repnz
repnz
jae
pop
fidivrl
push
mov
fdivrs
jnp
jge
push
and
cli
int3
outsb
nop
negl
and
shll
pop
add
push
or
jne
push
adc
adc
or
imul
cmp
jnp
lahf
dec
es
incb
in
inc
and
orb
call
in
xchg
out
push
sub
iret
outsb
test
outsb
out
mov
cli
pushl
or
clc
push
idiv
push
outsb
sbb
jb
sub
jg
mov
icebp
dec
pop
fildll
jno
sub
jg
sub
je
daa
jg
mov
sub
xchg
pop
ja
loope
xchg
sub
in
cld
jp
es
xchg
fiadds
push
jo
incb
sbb
test
mov
dec
in
sarb
stos
push
pop
ja
jmp
and
jge
mulb
push
lcall
push
nop
cs
fsub
pop
push
dec
adc
int3
decl
push
jle
mov
fidivrl
arpl
clc
jbe
int3
cmp
push
pop
movsb
fnstsw
movsb
push
pop
or
dec
ljmp
sti
and
lcall
jns
shl
ss
subb
mov
jmp
xchg
jmp
mov
push
xchg
mov
pop
test
loop
adc
xchg
out
sbb
loope
and
stos
in
dec
jg
out
mov
or
cmp
inc
add
ja
cmc
in
daa
cmc
inc
or
pminsw
icebp
push
push
mov
or
add
mov
sbbb
movb
mov
adc
loop
sub
push
inc
lahf
orb
push
lret
adc
shlb
rclb
dec
sbb
sbb
xchg
push
dec
cmp
into
pop
push
sbb
in
ja
add
push
sbb
push
or
imulb
xor
or
inc
or
and
outsb
or
push
stos
mov
addb
nop
adc
or
inc
inc
movsl
inc
add
mov
and
mov
mov
sbb
or
add
adc
jb
gs
inc
cmp
pop
inc
into
ficompl
push
dec
mov
or
addr16
adc
ljmp
ljmp
int
insb
push
ss
das
adc
cltd
adc
shrb
data16
mov
jb
push
imul
clc
cmpsb
test
push
popa
imul
pusha
sub
sbb
scas
sub
inc
hlt
jb
cmp
loopne
adcl
xchg
out
or
push
testb
jge
and
movsb
pusha
jbe
jno
push
shlb
fists
xchg
inc
mov
insl
lea
push
jo
adc
push
test
outsl
sbbb
cmc
inc
push
mov
aaa
push
repz
or
dec
sbb
push
dec
in
push
addl
sub
adc
insl
inc
cmpsl
jmp
jo
and
cld
push
sub
sbb
jbe
shrl
data16
xor
mov
ret
sahf
mov
stos
inc
xor
jo
or
pop
mov
push
dec
std
jae
cmp
push
pushw
mov
push
rcrb
adc
inc
push
push
ja
outsl
lcall
or
mov
stos
clc
pop
pop
imul
subl
jns
pop
insl
cmp
jge
mov
add
jne
push
push
push
outsb
nop
fisttps
jmp
inc
leave
gs
and
cmp
lods
lret
push
sbb
sbb
inc
aas
fcompl
sbb
push
pop
mov
out
mov
jo
mov
sbb
xor
fs
cld
in
sahf
rolb
dec
mov
not
cmp
andb
outsb
aaa
pop
out
mov
pop
mov
cmp
aas
inc
imul
das
sbb
sbb
cmp
pop
pop
movsl
mov
sbb
inc
mov
in
and
inc
sarl
and
inc
fisubl
xchg
push
ret
inc
dec
fistl
xchg
ret
test
sarl
leave
lods
fucom
lea
jb
cmp
out
adc
into
push
fadd
popa
ret
cmp
loopne
inc
test
popa
call
sub
mov
scas
addl
popa
es
sbb
aas
push
xor
mov
inc
push
sti
test
rcrl
cmpsb
push
es
je
push
xchg
in
cmp
sbb
in
mov
inc
jne
sub
lahf
push
mov
push
cmp
adc
jno
adc
sub
xor
jns
and
inc
loope
outsl
mov
push
ss
push
adc
int
sarb
adcl
xchg
nop
add
or
sbb
mov
pusha
add
sbb
adc
imul
lcall
add
insb
repz
adc
mov
mov
pop
stc
ja
popf
sarb
fdivrs
repz
push
lods
lods
mov
xchg
xor
fldenv
movlps
lea
lcall
jbe
inc
cmpl
jo
sub
sub
push
xor
arpl
inc
movsb
sub
je
add
test
cmp
jmp
mov
xor
addb
scas
push
jecxz
in
or
sub
mov
pop
shll
imul
push
inc
imul
loope
in
jb
test
bound
test
lds
cltd
sti
movsb
and
inc
xchg
inc
push
ret
es
cmp
jns
cmp
push
jne
inc
scas
xchg
sub
gs
pop
adc
pop
mov
add
xor
fwait
ret
add
gs
ss
mov
xchg
ja
shrl
and
jns
inc
arpl
lods
test
cmpsl
test
clc
and
mov
sbb
push
sub
imul
pop
or
dec
out
into
push
push
dec
mov
mov
jne
push
xchg
jg
es
mov
push
inc
scas
push
cs
fistpl
imul
fwait
add
mov
xlat
inc
sbb
in
cmp
inc
and
xchg
into
mov
sbb
jmp
cmp
fstps
or
pop
js
dec
pop
dec
sub
pop
mov
jo
inc
movsb
aam
jnp
inc
insb
sub
rcpps
js
push
mov
das
inc
inc
jl
sbb
xlat
lret
out
sbb
imul
add
push
sbb
ror
or
ret
orl
jo
push
outsl
and
sbb
inc
jb
popa
xchg
jmp
dec
hlt
and
outsl
xchg
dec
pop
imul
pop
dec
jne
jns
jno
jae
push
sti
js
inc
add
into
xchg
push
and
into
push
mov
rolb
dec
fbld
xorb
lret
pushf
jge
dec
push
push
pop
xor
mov
and
adc
jle
jne
outsb
add
sbb
push
sub
sbb
pop
and
xchg
imul
sub
xchg
aad
lcall
out
and
shrl
ss
xchg
int3
sar
pop
add
add
sbb
mov
or
movsb
dec
adc
add
or
or
push
xor
shll
mov
xor
pop
add
js
jl
es
cmp
repnz
inc
jo
add
insl
mov
and
cltd
lock
and
mov
ficoml
mov
push
outsb
jae
pusha
sbb
daa
out
mov
inc
inc
jo
sbb
cmp
push
imul
xor
push
dec
stc
pop
push
mov
stos
inc
insb
scas
and
sub
int
in
test
xorl
sbb
add
fcomp
cmp
jecxz
or
fs
ret
gs
sbb
add
ret
push
jo
and
adc
roll
mov
popa
test
adc
hlt
mov
jne
hlt
and
sub
divb
in
sbb
cmp
gs
aas
ss
cmp
pusha
imul
and
ret
or
notl
sbb
insb
sub
in
popa
inc
outsl
inc
inc
xor
addb
lret
inc
lock
sub
mov
dec
mov
jp
jg
mov
scas
enter
adc
or
mov
sbb
mov
cmpsb
jg
arpl
xchg
xor
push
fs
enter
pop
lret
xchg
out
mov
shl
and
mov
jecxz
inc
ret
add
cmp
subb
cld
adc
xor
insb
mov
mov
push
mov
cmp
push
rorl
dec
inc
push
movsl
and
sub
inc
popf
adc
push
add
cld
addr16
adc
arpl
ficoml
test
pop
xor
xor
cmp
fidivl
adc
test
cmc
inc
sbb
pop
adc
inc
push
mov
xchg
mov
xor
adc
cmp
cmp
sub
inc
push
out
push
mov
xchg
cmp
daa
outsb
pop
push
jo
shrl
inc
and
aas
rcrl
sub
sbb
push
pop
dec
pusha
mov
mov
adc
test
add
outsl
jo
test
xchg
repz
mov
orb
iret
mov
inc
dec
mov
ds
incl
sub
add
in
mov
xchg
push
or
arpl
dec
cmp
mov
mov
cltd
mov
outsb
inc
test
cmp
xchg
jae
xor
shrb
and
out
addb
push
rolb
pushf
movsb
rcl
push
cmp
add
dec
in
pop
mov
nop
dec
add
cli
iret
dec
insl
pop
cmpl
or
enter
out
mov
nop
add
sbb
push
adc
mov
xor
out
jg
jo
sbb
idiv
sbb
test
push
add
cmp
pop
push
push
int3
jmp
push
fmuls
xor
push
mov
sahf
fcomps
mov
adc
pusha
lods
add
dec
push
jo
cs
insl
ret
xlat
add
and
jb
es
clc
lea
testl
cs
add
adc
push
dec
rcrb
jb
push
xlat
out
push
xchg
xor
xchg
push
lods
lock
push
mov
or
inc
inc
ss
jg
mov
and
xchg
test
add
add
add
pusha
mov
lea
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
lock
add
enter
add
