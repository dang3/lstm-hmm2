divl
in
mov
mov
mov
push
push
call
int3
cmpsl
std
in
pushl
add
call
test
jne
pop
ret
push
push
sbb
mov
test
je
aas
mov
dec
adc
movb
lock
sti
in
decl
dec
movzwl
lea
jne
sbb
xor
jmp
and
neg
sbb
and
in
jbe
mov
mov
call
push
mov
mov
add
sbb
daa
or
add
les
mov
rclb
addr16
push
enter
and
jg
lock
push
push
push
mov
push
into
pushf
add
jge
jmp
jmp
stos
adc
push
push
sahf
jp
push
testb
clc
test
ds
jmp
pushl
sar
dec
sub
ret
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
ljmp
cmpsb
push
mov
andl
push
dec
add
mov
add
repz
punpckhwd
add
mov
mov
in
or
push
push
outsb
iret
negl
inc
cld
add
fisttpll
incl
sti
inc
add
add
call
jle
add
mov
mov
mov
mov
lock
add
sti
adc
pushl
sbb
pop
dec
push
fs
jae
and
subb
cs
loop
inc
adc
popa
mov
mul
or
dec
sbb
int3
sbb
push
push
mov
in
push
lock
cmpsl
enter
faddl
in
push
mov
push
or
add
mov
loopne
sti
push
push
lods
pshufw
dec
fdiv
fistpl
fstpt
jg
or
ret
add
test
je
mov
add
pop
mov
push
dec
sbb
loopne
push
rolb
add
sbb
add
punpckhbw
push
dec
in
mov
les
xchg
dec
add
inc
lcall
loope
daa
dec
call
pop
sahf
or
negb
sbb
cmpsb
dec
in
loopne
fisttps
in
push
push
mov
xchg
pusha
repz
inc
inc
mov
pop
sbb
mov
pop
jge
mov
jmp
iret
repz
pop
and
push
inc
inc
dec
push
and
push
and
jge
loopne
and
jmp
cmp
adc
data16
std
int3
push
pop
mov
aaa
or
mov
xchg
aaa
pop
mov
adc
rolb
and
inc
cmp
jae
pop
sub
cmp
pop
stc
push
outsb
inc
add
mov
add
and
ljmp
pushl
sub
add
inc
mov
mov
push
adc
add
out
and
pop
sbb
jle
push
icebp
add
push
sub
add
loope
pop
mov
test
hlt
push
sbb
dec
lock
add
call
cli
and
xor
pushl
and
popf
sbb
pop
xchg
gs
mov
jno
sub
and
sbb
sbb
lahf
xor
inc
in
push
sub
push
div
mov
hlt
push
rolb
push
stc
stc
fisubl
js
shlb
and
ss
shlb
and
loope
xchg
xor
lahf
out
pusha
or
push
or
cmp
and
or
and
fisubrl
repz
push
popa
pop
fbld
je
bound
add
lods
punpckhdq
mov
loopne
push
push
daa
mov
int3
push
icebp
xor
xchg
mov
or
cmp
fdivrl
jb
add
sbb
xlat
popf
xchg
push
xchg
clc
lea
loop
std
xor
shlb
dec
cmp
sub
sbb
outsb
push
shrb
push
add
adc
xor
push
sub
push
pop
sub
jns
inc
movsl
fldl
pmulhw
cmp
jmp
adc
push
and
daa
adcb
repnz
in
adc
subb
cld
adc
xor
orl
push
fimuls
sbb
inc
xlat
push
push
mov
sbb
roll
cltd
mov
mov
add
xchg
pop
or
push
jg
fdiv
in
push
js
sbb
mov
sub
repz
jno
mov
or
in
push
popa
test
xchg
lods
and
loopne
xchg
sbb
out
lahf
lds
inc
cmp
push
mov
mov
mov
out
loope
add
lea
or
pop
push
push
fcmovu
cmpsb
call
cmp
ficompl
jl
or
notl
jmp
clc
out
mov
cld
pop
push
xchg
sti
ds
xor
mov
sub
xor
fwait
cmpsb
pop
jecxz
xchg
mov
shrb
test
test
out
cltd
aaa
shrb
mov
push
mov
and
sbb
mov
bound
rclb
mov
xchg
pop
mov
jae
adc
or
dec
mov
adc
cmp
je
or
xor
push
mov
aaa
je
std
out
push
nop
sub
cmp
cli
mov
and
pop
or
mov
scas
inc
insb
mov
arpl
adc
out
mov
inc
lds
mov
hlt
cmp
inc
icebp
inc
inc
or
or
arpl
jae
push
fisttpl
mov
xchg
and
or
inc
mov
sub
out
push
cmc
push
jne
pop
cmc
push
stc
lock
xchg
sbb
mov
inc
fwait
and
mov
xchg
adc
testb
mov
sbb
gs
bound
xor
or
ret
push
mov
loop
cmp
ficompl
dec
insl
icebp
sbb
jp
stos
sbb
jge
cmp
cmp
inc
and
cmp
jne
pop
mov
loopne
xchg
sub
fs
mov
cmp
je
sub
dec
pushl
pop
in
adc
fmull
rclb
adc
dec
mov
xchg
rcrb
imulb
lahf
mov
lds
sbb
push
push
mov
cmp
pop
push
sub
loopne
mov
push
lods
pusha
sub
call
mov
test
jne
fs
dec
jl
inc
cmp
jl
jmp
pop
adc
pop
push
mov
push
pop
push
gs
adc
jl
loope
cmpb
pop
ret
mov
lock
xor
lea
jns
adc
loop
loopne
jne
sbb
bound
and
mov
dec
jl
out
mov
adc
stos
push
jmp
add
jns
add
add
push
dec
push
adcl
ret
and
scas
push
mov
xor
adc
or
lret
cmp
and
pusha
adc
adc
pop
ret
push
adc
pushf
in
sub
shr
jbe
xlat
jmp
and
push
dec
mov
pop
jmp
test
jne
pop
ja
lods
add
cs
out
dec
outsl
jg
fwait
inc
aam
push
mov
sub
pop
js
sub
pop
cmp
mov
inc
jg
cld
jge
jecxz
out
cwtl
cmp
je
outsb
shlb
add
sub
cmpl
pop
lea
push
mov
imul
divl
add
jmp
mov
addr16
test
in
lods
loop
or
mov
push
inc
mov
loope
leave
ret
icebp
cmp
cmp
push
std
or
in
add
or
std
or
adc
adc
adcb
mov
rorb
jne
mov
jmp
xchg
in
sbb
add
push
repnz
icebp
cmpb
repz
push
ja
lea
decb
pushl
xor
sub
cmp
jmp
xchg
pop
pushaw
lock
fsubl
pop
pop
arpl
adc
pop
xor
orl
fcoml
test
je
add
shlb
mov
iret
test
insl
pop
push
push
movsb
mov
xor
pop
jle
je
ljmp
imul
push
and
sbb
push
popl
adc
pop
and
pop
xchg
mov
push
call
je
test
ret
mov
add
icebp
inc
js
aas
or
add
push
popa
popl
fwait
sbb
adc
adc
cmp
clc
mov
aaa
fs
cmp
je
cmpl
std
das
bnd
mov
cmp
jne
push
push
imul
xchg
popf
ret
jl
pop
jmp
fcoms
jg
mov
cmp
rorl
leave
push
inc
sub
hlt
bound
inc
or
sbb
enter
fldenv
or
adc
jo
clc
push
inc
clc
jg
inc
fimuls
movb
dec
aad
cmp
shr
mov
and
add
lods
adc
out
je
or
inc
inc
or
shlb
adc
ret
inc
pop
push
inc
outsl
or
pop
pop
out
lcall
push
mov
das
inc
pop
and
mov
adc
xchg
cmpl
or
push
test
or
dec
push
push
call
outsl
sub
inc
ror
adc
add
adc
sbb
push
cli
pushf
mov
push
jnp
inc
mov
mov
mov
mov
cld
xor
out
lods
shll
jge
inc
or
push
or
jae
push
pushf
cli
loop
add
clc
cmp
sbb
add
cmp
jmp
xor
cmpl
jle
push
cmp
jmp
mov
cmp
jge
mov
jle
ret
jbe
xor
shlb
push
out
cmp
push
hlt
loopne
inc
cmp
push
sub
mov
adc
test
cmp
mov
loopne
jl
add
xor
add
add
fwait
pop
fsubrl
or
adc
adc
mov
push
ljmp
pusha
les
or
bound
hlt
mov
mov
mov
lock
ss
cltd
add
fs
cmp
in
pop
push
ret
push
lds
jns
popa
jge
sarb
jo
out
cmp
xlat
sahf
and
and
xchg
xor
inc
mov
dec
mov
cmp
daa
or
in
js
mov
rol
push
call
filds
decl
pop
cmp
imul
clc
and
fcoms
lea
push
mov
xchg
push
mov
pop
pop
jmp
mov
sbb
fs
movl
dec
sbb
ret
ja
adc
sbb
js
insb
fs
sbb
pop
stc
mulb
pop
scas
into
add
push
int3
jno
andb
jp
pop
movsl
push
xor
inc
mov
enter
add
mov
or
inc
sub
inc
push
fimuls
push
pop
or
scas
push
mov
adc
inc
and
cli
add
or
sbb
das
or
cli
sbb
add
in
loop
pop
ret
push
push
rolb
cs
inc
adc
aaa
or
adc
sbb
or
jb
andb
aas
sbb
fucomip
sbb
sbb
sbb
pop
add
mov
loop
sub
or
rorl
into
adc
pop
jb
xchg
xor
push
dec
imul
and
lcall
adc
pop
mov
add
cwtl
lods
dec
or
enter
incb
enter
je
das
in
cmp
adc
and
stc
adc
cmp
pop
test
adc
sbb
push
cmp
mov
jo
mov
push
cltd
pop
testl
push
adc
shrl
je
push
roll
push
je
pop
mov
sub
mov
sub
inc
pop
mov
add
push
push
jbe
call
das
pop
pop
xchg
push
sahf
lods
lret
aaa
std
and
jmp
sub
dec
je
inc
adc
add
out
sub
test
and
mov
dec
es
mov
jo
mov
lcall
fisttpl
iret
ret
int
cmp
jmp
nop
jecxz
pop
jne
mov
add
cmpsb
and
jg
cld
add
mov
stc
or
lea
sub
pop
fnsave
add
add
mov
scas
adc
sarl
enter
clc
adc
push
mov
ds
mov
cld
sbb
mov
mov
push
std
mov
pop
and
push
fistps
repz
push
sub
cmpsl
pop
sub
sub
in
in
iret
int
pop
daa
adc
mov
std
mov
jmp
mov
adc
jmp
cmp
cmpsb
std
xor
mov
out
jmp
inc
sbb
imul
andl
jle
fstpl
imul
in
xchg
push
int
adc
jmp
and
adc
sbb
inc
bound
aam
push
cmp
repz
js
ror
cmp
repz
std
cltd
movsb
scas
xlat
enter
push
fs
push
scas
xlat
sbb
xor
xor
add
adc
push
push
pusha
aaa
mov
dec
adc
and
jae
xchg
in
or
clc
movb
add
or
jecxz
jns
adc
lret
xchg
gs
push
jmp
dec
and
and
push
pop
push
lea
push
subl
jb
pop
xor
xchg
cmp
mov
sahf
dec
aam
les
inc
adc
scas
pop
or
stc
fs
popf
jge
mov
dec
adc
movl
push
xchg
fdivrl
push
ja
push
sbb
xchg
dec
xor
mov
jo
and
in
frstor
add
movsl
in
lock
cli
sti
jbe
bound
ja
mov
sub
in
xor
mov
sbb
into
lock
xor
sbb
and
femms
sbb
jl
jge
adc
add
jle
add
add
mov
sti
push
pop
sub
arpl
in
out
dec
mov
adc
dec
mov
js
adc
cmp
sbb
test
xchg
sbb
adc
stos
stos
rclb
mov
and
mov
push
dec
stos
xor
sbb
pop
mov
mov
xor
vpdpbusd
in
cmovno
nop
jnp
push
push
push
push
mov
aas
repz
filds
das
push
push
push
xchg
mov
sub
push
mov
dec
xor
dec
lods
and
sahf
xchg
fidivrs
add
mov
pop
pop
daa
lea
je
mov
loopne
push
lea
cwtl
pop
sub
cmpl
add
mov
sbb
add
push
cli
hlt
dec
pop
roll
adc
outsb
xor
xchg
pop
fstps
push
ljmp
adc
clc
push
sti
incl
xor
mov
pushl
mov
adc
cmp
dec
push
mov
ss
dec
or
negl
pop
cld
je
xor
call
cltd
sub
sar
add
bound
dec
lcall
cmp
push
mov
insl
fistpl
add
mov
inc
adc
dec
cmp
test
aaa
inc
pop
pop
leave
test
push
dec
xor
cmpsl
inc
pop
or
or
ret
pop
add
sub
push
mov
test
and
sbb
pop
jl
jl
pop
push
and
sub
and
out
xchg
push
and
mov
adc
mov
pushl
test
sbb
and
and
adc
add
out
mov
andl
int
jbe
outsb
fwait
cmpsb
imul
dec
or
push
lahf
push
insb
mov
jns
adcb
push
sub
cs
lea
sub
neg
sbb
and
test
aas
enter
mov
or
jbe
mov
call
dec
xchg
bound
js
in
or
add
mov
repz
sbb
mov
je
push
mov
push
js
filds
jmp
pushl
and
repnz
adc
adc
and
mov
daa
sbb
inc
mov
mov
adc
aaa
cmp
cmpl
je
cmpl
lods
jne
adc
dec
je
in
cmc
in
int
sbb
cwtl
pop
push
add
fsubrp
rorl
mov
add
xchg
andl
mov
push
leave
or
dec
mov
lods
xchg
or
push
lods
fsubs
push
popa
pop
sti
jle
adc
mov
js
push
push
sbb
sahf
gs
sub
lock
cmc
cmp
hlt
movb
addr16
lock
push
jge
sbb
out
enter
adc
cwtl
jo
movb
loope
adc
outsl
aas
mov
adc
mov
out
cmp
mov
dec
jl
pop
fs
xchg
push
and
incl
test
push
test
inc
pop
loopne
jmp
mov
mov
pop
imul
mov
test
cmp
or
scas
popf
mov
pop
lea
inc
dec
push
test
pop
jbe
adc
cli
add
push
sub
cmp
mov
mov
mov
shlb
push
xchg
enter
push
sub
or
nop
or
out
add
leave
lret
dec
shll
jb
jl
pop
insb
inc
or
je
fs
jo
ret
inc
enter
stos
jo
mov
lea
add
cmp
lock
dec
lock
jne
pop
insb
pop
sbb
sub
jae
xlat
call
xor
addb
add
sbb
cmpsl
data16
cli
cwtl
cmpl
pop
push
cmpb
icebp
iret
sbb
cs
fwait
jnp
ret
aaa
faddl
sub
les
inc
imul
inc
dec
fldl
fmull
imulb
ljmp
push
outsb
add
add
and
pop
push
add
add
ret
rcrl
xor
repnz
lock
sbb
or
movsl
pusha
rclb
loop
test
pop
or
mov
rcrl
push
dec
ds
sub
lahf
or
sahf
mov
js
push
pushf
and
or
jo
mov
arpl
or
arpl
dec
push
add
push
push
sbb
addl
sub
push
test
rcl
cltd
xchg
cmp
dec
dec
sbbb
hlt
mov
es
adc
sti
and
ret
cmp
in
imul
insb
mov
or
sbb
inc
push
inc
mov
mov
sbb
add
xchg
adcb
or
ficomps
cli
cmp
xchg
cld
je
cmpb
mov
je
jo
cmp
cwtl
pop
sarl
and
jmp
stc
cmp
clc
mov
jmp
push
push
cmp
cmp
add
cmp
ret
adcl
push
test
inc
test
pusha
rcrl
shlb
mov
scas
mov
loopne
push
add
add
in
adc
lcall
sbb
lcall
and
sbb
popa
dec
push
mov
fs
into
mov
sub
out
jo
pusha
popa
ds
jecxz
and
outsb
cltd
cmp
and
mov
movl
mov
arpl
mov
in
sbb
xchg
in
sti
add
jl
jp
popf
sbb
in
mov
xlat
add
sar
push
int
xor
push
adc
jl
dec
inc
mov
cmpsb
lock
cmc
mov
fists
mov
mov
pop
mov
sti
push
pop
push
adc
ja
push
xor
idiv
jle
mov
fwait
aaa
jp
push
jecxz
iret
mov
add
jne
loopne
fmul
or
pop
jmp
fldl
insb
cmpsl
int
mov
and
mov
xor
push
mov
cmp
mov
adc
insb
shrb
or
out
xor
jge
push
or
pop
pusha
push
ljmp
sti
sub
clc
je
test
out
out
mov
lcall
add
cli
xor
dec
scas
mov
mull
pusha
paddb
mov
jg
out
mov
jl
movl
mov
cmp
lahf
xor
outsl
adc
sbb
and
lods
lea
clc
add
ds
inc
pop
xchg
imul
cmp
or
sub
jge
jmp
mov
pop
hlt
fstpt
hlt
pusha
or
add
adc
roll
or
enter
or
stc
mov
dec
sub
mov
mov
add
pop
add
fsubp
or
xchg
pop
pop
push
js
out
add
inc
mov
mov
cmpb
or
clc
fidivl
jmp
sub
xor
outsb
mov
mov
push
push
stos
sahf
lods
jmp
jne
add
or
jl
dec
lcall
jle
mov
aad
cmp
mov
lea
cmp
or
lock
push
aad
aam
push
adc
add
loope
and
dec
mov
jne
push
jbe
mov
je
je
xchg
popa
push
push
push
inc
pop
and
jne
jo
sbb
cld
mov
lods
add
rcll
sti
adc
sbb
xchg
pop
addr16
sbb
sbb
or
mov
or
nop
arpl
clc
into
arpl
and
push
std
pushf
jae
popf
roll
pop
lods
and
mov
adc
push
into
adc
mov
xchg
dec
sbb
sbb
pushf
loopne
outsl
sub
scas
jmp
leave
push
leave
add
test
push
mov
xor
xor
push
mov
push
iret
sub
pushf
sbb
xorl
popa
rclb
dec
mov
sub
dec
push
dec
add
push
xchg
arpl
or
xlat
enter
loope
mov
ficompl
pop
and
adc
lock
add
jp
test
insb
popa
push
addb
in
xor
adc
jne
insb
adc
fs
xchg
jmp
loopne
pop
xchg
mov
bswap
sbb
movnti
lea
dec
push
mov
xchg
inc
adc
push
mov
xchg
in
xchg
sbb
jne
or
sbbb
arpl
or
add
cmp
mov
push
sub
jno
xor
lea
movsl
loope
dec
mov
pop
cmp
clc
add
push
xchg
clc
jbe
cmp
setb
test
add
mov
lcall
mov
cs
dec
dec
adc
pop
add
shrl
pop
or
out
mov
sub
hlt
cmp
aam
mov
loop
mov
mov
nop
lock
hlt
mov
popa
mov
xchg
test
push
add
pushf
lods
cmp
sbb
add
add
cmp
push
cmp
and
jge
xchg
les
fs
scas
lea
jne
imull
mov
xchg
lock
push
push
lcall
lret
mov
push
or
pop
jbe
xchg
and
fdivrs
lods
adc
cs
add
lret
fnsave
jle
push
sbb
pop
jae
dec
mov
int3
cli
sub
clc
or
and
push
je
out
test
and
je
lahf
push
mov
shr
hlt
pop
or
js
addl
sbb
sbbl
sbb
adc
add
and
std
xor
xchg
movl
mov
test
jno
mov
into
jnp
insl
arpl
in
lock
xchg
pop
clc
adc
fdivr
aaa
push
xchg
arpl
mov
popa
add
out
add
rclb
or
rcll
xor
push
push
pop
push
in
lock
or
xchg
ret
imul
inc
mov
jg
sbb
fsubrs
ret
jne
jb
icebp
es
push
cmp
or
divb
jmp
jbe
arpl
jp
or
mov
outsb
xchg
sbb
mov
gs
and
mov
fiadds
push
xor
cmp
xor
and
lahf
aaa
mov
xchg
clc
jae
push
nop
sbb
mov
pop
add
int3
fadds
jecxz
sbb
inc
or
repnz
ror
inc
push
add
dec
and
sarb
xchg
lret
pop
dec
mov
push
test
lock
adc
mov
inc
mov
out
mov
lcall
jmp
push
mov
repz
repnz
mov
mov
call
or
pop
aad
rcll
dec
shrl
xchg
lea
rorb
into
jecxz
or
pop
push
imul
insb
hlt
or
push
xor
fsubs
cld
pop
les
inc
repz
adc
ss
xchg
add
or
mov
outsb
repz
adc
mov
in
mov
sbb
add
addl
add
stos
jb
scas
pop
sub
xor
test
aad
mov
stos
or
and
push
outsb
and
stos
and
add
xchg
add
or
adc
cmp
jne
xchg
iret
call
mov
mov
enter
add
pop
popf
ja
xchg
mov
cwtl
movsl
mov
sbb
shll
popf
inc
pusha
mov
push
pop
jne
mov
call
cmpb
dec
outsb
addr16
jnp
sbb
stc
sub
push
sub
andb
or
mov
fadd
ret
or
pop
sahf
pop
call
add
enter
jo
cltd
test
in
adc
fdivrs
lahf
pop
sbb
mov
mov
loop
push
add
es
and
shl
daa
add
sub
psubd
fsub
test
in
fadd
mov
in
inc
adc
adc
jge
jl
bound
jo
je
fsubrp
adc
cmp
or
aam
in
mov
outsl
icebp
or
push
int3
mov
test
xorb
dec
sbb
arpl
mov
aaa
push
aam
fidivrl
sub
adc
fdivrl
or
mov
fdivl
adc
fs
cli
rclb
stos
and
lods
test
sbb
pop
jb
xor
add
int3
adc
push
imul
test
int
mov
sbb
adc
adc
rolb
add
push
push
scas
inc
inc
into
shrl
xchg
pop
jecxz
repnz
xor
or
fmuls
push
neg
sbb
bnd
insl
hlt
mov
and
popf
fsubrp
jo
dec
push
scas
or
das
insb
sub
inc
sub
push
adc
mov
push
lods
lahf
sub
rolb
push
in
mov
frstor
lds
in
cltd
pop
push
mov
jo
call
fcmovne
pop
outsb
cmpsl
mov
mov
sbb
mov
movsl
in
or
mov
sbb
lahf
dec
push
add
repz
add
xstore-rng
cmpsl
cmpb
add
mov
lock
sbbl
fadds
push
sbb
pushf
mov
jmp
out
inc
cmp
xlat
add
lds
sbb
sub
xor
loopne
inc
outsb
adcl
fwait
adc
sbb
mov
das
movsb
lcall
cmp
repnz
jne
pushf
and
push
push
jae
rcrb
push
iret
inc
sub
ljmp
repnz
inc
fdiv
push
dec
fstpt
mov
dec
and
scas
rclb
push
imul
je
mov
mov
push
rclb
cwtl
lds
adc
shlb
popf
dec
mov
test
or
in
or
mov
std
and
mov
pop
jnp
pop
cwtl
push
stos
sub
pop
orl
and
ret
and
lods
stos
jp
xor
push
xchg
lds
xor
push
pusha
jg
push
push
lods
cmpsb
and
xor
call
adc
add
mov
and
bound
jno
lret
ja
and
pop
or
push
lods
xchg
mov
inc
and
sahf
or
in
cmpsb
adc
add
mov
xor
and
push
add
or
add
lcall
daa
xor
add
cld
cmp
sub
push
push
sub
mov
jb
shrl
sub
pushf
js
xor
sbb
repnz
sbb
cmp
xor
mov
shlb
sub
xchg
push
popa
mov
push
push
cld
inc
mov
xor
cld
fmull
scas
jno
add
aad
push
push
xor
imul
sub
pop
orl
jno
dec
or
jbe
push
push
push
arpl
and
pop
or
jle
jle
or
push
addl
inc
je
mov
jmp
xor
mov
mov
xor
popf
lock
adc
pop
push
sub
or
insl
arpl
inc
and
cltd
xchg
xchg
les
sub
insb
push
mov
inc
cmp
xor
in
dec
mov
push
outsl
push
and
mov
jmp
pop
filds
xor
adc
int
xor
pop
popa
int
icebp
jae
imul
or
xchg
or
adc
inc
push
jl,pn
sbb
jl
sarb
push
and
in
dec
nop
mov
inc
and
idivb
jo
jle
hlt
pushl
add
pop
pop
mov
sahf
cmp
je
ja
test
dec
add
jmp
mov
mov
mov
in
push
mov
sub
sub
push
jo
dec
rorb
xor
push
or
jge
lds
dec
sbb
inc
fnsave
orl
and
movsl
or
or
push
outsl
aaa
dec
in
dec
outsl
testb
mov
jne
fsubrs
lret
pusha
inc
adc
cmc
js
mov
sbb
or
insb
push
jb
scas
or
inc
dec
lea
jns
or
push
lcall
add
daa
rorl
pusha
pop
xchg
inc
cli
inc
xor
cli
add
nop
cmpsl
jb
repz
jl
pusha
sub
lock
add
in
arpl
add
sti
cwtl
push
mov
mov
andl
mov
sub
jl
or
movsl
in
mov
ja
pop
lds
push
cltd
rorl
notl
push
andl
xchg
adc
enter
inc
or
and
jp
inc
sahf
inc
ffreep
inc
push
aam
add
add
imul
js
xor
add
fwait
add
faddl
cmpsl
xchg
cmp
push
andl
inc
pop
ror
dec
sbb
int
or
xor
imul
adc
orb
rcll
je
or
xchg
outsb
adc
sub
jns
inc
inc
adc
push
mov
jbe
pop
or
fildl
leave
cmpsl
adc
call
jae
rcr
inc
add
sub
and
add
clc
test
xchg
adc
icebp
or
mov
aad
sysexit
test
push
mov
pop
pop
adc
adc
rolb
and
insb
mov
push
fsubl
jnp
jg
lock
das
jb
rorb
adc
xchg
mov
push
test
in
mov
pop
adc
mov
arpl
push
pusha
aad
out
mov
xor
daa
adc
cs
adc
lods
sbb
push
cmp
sbb
push
inc
xchg
movsb
shl
insl
jnp
notl
pop
negb
out
lea
andl
push
mov
sbb
xor
addr16
fwait
push
pop
gs
cmp
fnstsw
out
jge
je
movsb
outsb
or
mov
fs
clc
xchg
pop
add
push
xor
fisttpll
lret
mov
mov
imul
sub
inc
sub
inc
pusha
sub
mov
mov
leave
pop
push
cld
xchg
mov
insb
out
int
push
jbe
popf
icebp
pop
pushl
push
sub
enter
or
jb
and
inc
bound
pop
pop
dec
shlb
mov
sbb
popf
lock
pusha
cmpl
jne
push
mov
xor
int3
cmp
test
jge
mov
pop
inc
or
pop
aas
jl
movl
cwtl
cmp
or
or
jp
lods
push
push
orb
push
pusha
pop
cmp
or
dec
test
mov
inc
add
aaa
loop
adc
push
push
jl
sub
push
outsl
lcall
neg
je
inc
ds
fstl
and
in
js
js
xchg
xor
mov
adc
sbb
xchg
rcrb
nop
push
jb
test
xchg
lcall
jl
sbb
fildl
adc
cmp
jns
add
add
mov
pop
sbb
xchg
push
xor
add
lock
inc
push
movb
fisttps
pop
sbb
out
inc
cmp
mov
fsin
sbb
fiaddl
mov
test
pop
out
add
inc
push
sbb
pop
lods
cmp
outsb
movsb
rorb
jne
add
dec
stos
les
adc
outsb
xor
cltd
aad
dec
movb
js
sbb
xchg
jl
fs
pop
test
sar
pop
pop
jne
cmc
mov
and
frstor
mov
mov
flds
inc
pusha
mov
and
cmovnp
dec
add
dec
jge
pop
mov
cltd
enter
mov
dec
lock
imul
sahf
testb
popa
lock
rsm
jmp
mov
pop
cs
test
lahf
push
fs
sub
sub
xor
xor
ljmp
sub
mov
mov
mov
pushf
iret
add
orb
roll
sub
in
and
xor
dec
mov
and
sbb
sbb
leave
sbb
and
sub
lods
xchg
inc
movmskps
imul
push
rorb
adc
hlt
fdivp
cmp
or
lds
sbb
push
sub
add
dec
push
fldcw
dec
in
inc
pop
repz
loop
pop
hlt
setne
je
loopne
pop
repz
sti
aas
push
push
push
idiv
iret
push
or
pop
hlt
jne
push
push
push
jecxz
lods
mov
jb
addb
adc
push
faddl
xor
pop
rclb
popa
xchg
mov
clc
mov
push
pop
or
mov
scas
xor
dec
xchg
inc
nop
push
and
sbb
ss
sub
mov
sbb
js
rorb
inc
add
and
xchg
jb
mov
inc
push
and
cld
jo
mov
or
sbb
add
gs
insl
test
insb
and
pop
sub
addb
enter
push
mov
sbb
fwait
push
sbb
add
sbb
add
imul
lods
push
add
daa
push
sbb
and
or
jmp
xor
or
push
sete
and
push
lret
adc
xchg
jns
and
push
fwait
dec
ror
pop
arpl
push
push
mov
push
lock
sbb
and
add
scas
inc
cmc
push
xchg
stc
sbb
pop
sub
dec
and
or
xchg
adc
dec
cmpsl
xchg
adc
and
jne
and
push
adc
mov
xor
fs
bound
pop
ret
jbe
ret
es
lcall
jmp
dec
insb
repnz
scas
xchg
inc
ffree
xchg
xor
add
lea
mov
lds
out
xlat
and
pop
mov
mov
scas
adcb
inc
imul
mov
cmp
sahf
mov
mov
xchg
inc
jle
xor
add
orb
push
mov
rclb
in
icebp
jle
movzwl
ljmp
inc
ljmp
push
test
adc
push
pop
cmp
shlb
or
cmp
subb
cmc
push
cmp
leave
jb
fdiv
add
rol
nop
sub
push
insb
and
add
clc
lret
icebp
sbb
cli
movsl
mov
jo
popa
push
cwtl
add
sbb
mov
push
pop
dec
insl
sub
lods
ja
shlb
add
push
adc
xchg
push
push
sbb
jl,pn
dec
repz
push
push
xor
mov
xor
loope
sub
cmp
lahf
in
xor
add
push
fmuls
idivl
mov
adc
xchg
loope
mov
mov
add
lea
aas
push
inc
add
sub
jno
rorb
jno
mov
mov
in
add
push
sahf
sub
sub
in
shlb
outsl
movsl
add
fcmovnb
mov
js
mov
mov
outsl
popa
add
push
leave
ret
sbb
scas
mov
aaa
push
mov
mov
daa
xlat
push
popa
ret
inc
mov
xchg
mov
lret
out
and
addr16
adc
shll
sbb
aaa
dec
shll
or
clc
cmp
jae
push
push
pusha
mov
add
cwtl
shl
and
jbe
pusha
es
sub
test
push
add
cmp
mov
cmp
dec
hlt
jge
mov
test
mov
add
mov
outsb
test
ja
mov
mov
sbbb
jmp
cmp
ljmp
inc
cwtl
push
iret
pusha
pop
test
jecxz
or
test
jl
mov
cmp
jg
loope
shl
jge
push
sahf
cmp
push
jmp
fdivs
pop
mov
hlt
mov
adc
and
int3
xchg
cmp
push
imul
hlt
sub
rcll
popf
or
lcall
decl
add
cmp
nop
or
sub
push
cmp
push
aas
nop
mov
inc
sbb
adc
pop
aas
pop
jns
imul
add
mov
and
xorb
mov
out
sbb
mov
scas
js
add
iret
cmpsb
mov
xor
mov
adc
clc
pop
and
jo
sub
outsb
es
inc
push
cmpsb
cmp
push
inc
or
mov
or
cli
cmp
push
addl
inc
leave
push
inc
xor
inc
js
mov
fsubrs
and
mov
jo
dec
rol
xchg
adc
data16
sahf
push
inc
and
ret
rclb
fistpll
mov
jp
mov
pop
push
ds
push
push
and
mov
inc
xchg
add
push
pop
push
push
pop
push
popa
sub
sti
mov
add
and
lds
push
cmp
cli
or
psubd
es
or
lock
movsb
jb
aam
jmp
lea
jb
repnz
loop
xchg
or
mov
mov
call
bound
insb
jno
cmp
ljmp
pop
es
ljmp
mov
pcmpeqw
pop
or
mov
and
pop
pop
add
mov
test
lods
jp
pop
add
scas
push
cmp
outsb
push
js
add
xchg
outsb
or
sub
push
hlt
inc
and
mov
pop
adc
inc
push
lods
push
push
jbe
mov
bound
fs
xchg
push
cltd
cli
adc
or
out
jno
test
lcall
rorb
fadds
fimuls
or
test
mov
sbb
movsb
into
push
stos
test
pushl
jle
lods
push
jmp
push
aad
jb
pop
rclb
dec
jne
adcl
mov
aam
sub
push
push
popf
scas
test
shl
mov
aam
add
adcb
in
inc
test
or
mov
mov
mov
je
push
or
or
int3
sbb
push
pop
icebp
push
repz
add
add
lcall
push
jl
adc
in
in
add
push
sti
adc
sbb
mov
mov
push
sbb
movsl
jle
pushf
and
push
mov
xchg
sub
dec
mov
lock
mov
clc
push
dec
xor
jno
cmpsb
pop
leave
sbb
inc
cmp
insl
sub
sbb
or
sbb
hlt
shrb
push
aaa
nop
test
orb
nop
outsb
mov
test
mov
xorb
push
mov
popa
cli
lock
inc
cmp
xchg
sbb
xor
insl
push
int
jns
mov
call
dec
add
lock
adc
call
mov
mov
pop
inc
in
jne
jne
mov
sbb
gs
or
sbb
gs
shlb
sub
add
adc
adc
lods
popf
mov
mov
mov
inc
fsubrp
jo
lahf
sub
or
rolb
leave
inc
imul
and
aad
pop
lods
or
mov
sub
in
loope
clc
lds
pop
roll
fistl
repz
jne
inc
push
mov
push
sub
outsb
cmp
stos
rcrb
sbb
add
dec
ja
rolb
add
push
scas
das
stos
pop
mov
xchg
testb
push
push
ret
int3
pop
ja
pop
jns
jmp
push
lret
push
push
mov
add
pop
adc
mov
push
xchg
into
push
jno
or
and
or
mov
pop
fldcw
test
add
mov
mov
mov
outsl
lret
hlt
ds
call
xorl
adc
inc
jae
jnp
xchg
inc
mov
and
xor
xor
scas
mov
fistpll
add
sbb
paddw
nop
push
fstpt
and
pushf
cmp
popa
in
nop
shlb
push
dec
adc
pushf
mov
loopne
and
pusha
and
or
loopne
inc
subb
popa
out
loopne
stos
arpl
xchg
add
leave
xchg
add
pop
pop
push
je
or
sub
push
mov
data16
or
movsl
pop
cmp
rcl
stos
xchg
pop
leave
sbb
aas
insb
jno
ljmp
fsubrs
jp
sbb
mov
mov
xchg
xor
push
jne
ljmp
in
test
xchg
pop
jp
inc
add
lret
addl
or
sub
lods
test
in
sbb
fidivs
or
enter
xchg
into
shlb
cmpsl
push
and
hlt
pop
cmpsb
jl
push
mov
mov
shlb
jl
or
xchg
adc
hlt
or
push
dec
pushf
pop
jmp
cmp
add
stos
add
pop
leave
pop
out
adc
sarl
or
addb
or
cmpsl
jo
mov
mov
int3
jno
loopne
and
fisubl
and
xor
mov
cmc
ret
pop
out
push
add
xchg
or
dec
sub
daa
xchg
and
imul
mov
dec
out
jb
lods
cmp
inc
out
add
or
inc
pop
push
pop
cli
cmp
sub
cmp
push
xor
sti
jmp
mov
sub
jne
xor
push
push
mov
cld
cli
jge
inc
push
je
push
lock
pop
inc
ficoms
addl
lea
or
push
mov
add
xchg
subb
lea
push
lock
lret
lcall
cmp
sub
mov
imul
jo
fimuls
loopne
jg
adc
inc
in
add
call
loop
xor
hlt
shr
jge
push
out
rolb
push
sub
sub
add
imul
add
push
xlat
mov
outsb
or
inc
ret
outsl
out
mov
add
add
or
push
rcrl
cmp
lods
cmpsb
xchg
inc
jo
enter
loopne
cmpb
dec
rolb
inc
cmp
pop
push
xor
daa
pusha
dec
mov
mov
push
mov
sub
add
lock
sub
xchg
add
subb
das
mov
jp
dec
ret
rcll
mov
or
push
movsb
test
out
or
add
xor
inc
add
push
mov
push
call
ret
adcl
pop
je
fs
mov
cmp
je
sbb
push
adc
mov
mov
cmc
lds
aad
cmp
xchg
push
shr
xchg
pop
into
pop
and
sub
push
imul
ja
jle
cmpb
lods
adcl
adc
cmc
push
aam
pop
sub
pop
shrb
sub
jae
jmp
push
push
sub
cmp
scas
push
test
sbb
sub
xlat
in
push
adc
inc
inc
or
mov
mov
cmp
je
push
and
push
cld
push
push
inc
movsl
fucomi
arpl
cmp
sub
push
sbb
cmp
pop
jg
push
negl
pop
or
adc
sarb
ret
inc
push
adc
call
push
aas
mov
adc
test
push
sahf
nop
rolb
mov
inc
dec
pushf
stc
jbe
adc
push
clc
add
hlt
push
in
inc
add
sub
mov
mov
neg
push
add
dec
mov
mov
loopne
jle
pop
in
jl
push
inc
xorl
push
je
sbb
dec
push
decl
mull
test
ja
jbe
inc
movsl
push
test
in
push
push
cmp
cmpsl
loopne
je
fcmovbe
push
push
xchg
test
mov
pusha
or
rcr
inc
incl
call
ljmp
cs
int3
sub
shlb
jmp
in
movsl
testl
sub
fdiv
mov
inc
mov
jns
cltd
in
or
test
loopne
add
imul
cli
rolb
js
cli
rorb
xchg
adc
into
gs
cltd
push
xchg
decb
jnp
andb
push
and
imul
xor
lods
cmp
shlb
pushf
push
arpl
ds
js
aad
cmp
pop
insb
pop
or
and
cmp
sub
inc
adc
xchg
clc
sub
adc
add
jb
pop
movsl
dec
sarl
nop
inc
sbb
mov
ss
std
mov
aam
pop
movsl
push
and
shl
jb,pn
js
lea
ret
out
repnz
cmp
je
cmp
je
cmp
jne
add
jo
cmp
mov
cmc
je
push
in
stos
add
call
outsb
or
mov
jmp
outsl
outsb
dec
lock
pop
mov
cmp
xor
adc
mov
pop
repz
xchg
push
clc
jo
ljmp
mov
jmp
enter
mov
cmp
jne
xchg
mov
and
sbb
test
add
jns
outsl
shlb
sub
add
xor
loopne
push
imul
adc
cli
jb
xlat
pop
pop
aam
leave
ret
rorb
out
xor
cmp
cmc
outsl
call
cmp
jb
cmp
ja
dec
sahf
jbe
xchg
sub
sbb
inc
aaa
add
in
popa
push
ret
mov
call
add
cs
lods
add
std
insb
or
push
inc
adc
addl
cmpsl
add
ret
fstpt
ss
cmpl
in
xor
cld
mov
mov
cmp
add
mov
cmp
gs
je
call
jne,pn
mov
sbb
add
push
dec
inc
cmp
lock
mov
pop
dec
xor
push
inc
pop
lds
sub
inc
adc
lcall
adc
sbb
cli
cmp
jbe
jnp
fldl
mov
cmp
rcll
jmp
fldenv
outsb
xor
pop
mov
mov
pusha
sub
ret
pop
push
and
test
push
clc
clc
aaa
fwait
inc
lahf
ficoms
je
mov
lea
adc
cmpb
jl
lret
pop
in
inc
xor
jle
mov
inc
cmpl
cmp
testb
cmp
push
loope
jno
gs
je
sub
inc
fdivl
cmp
or
ja
shrb
enter
push
popa
cs
cmp
stos
cmp
cmp
push
sub
and
outsl
int
outsb
femms
cmpsb
inc
sub
popa
loop
jne
sbb
push
test
mov
ss
inc
insl
aad
mov
pushw
mov
aaa
rcr
push
lret
cmp
std
dec
pop
shl
add
jmp
cwtl
aas
les
sub
dec
hlt
add
shrb
fs
jne
xor
mov
dec
lock
test
mov
pop
sub
or
add
pop
jae
mov
jmp
dec
or
xor
cld
jbe
test
sub
cs
fmuls
dec
add
xor
mov
adcb
sti
rorb
in
mov
lret
cmp
jg
or
jge
int
int
push
aaa
or
jle
es
sub
sub
jp
jle
jmp
cmp
jl
pop
jle
pusha
mov
and
or
jb
lock
pop
popa
test
fwait
and
mov
je,pn
test
jne
je
outsb
roll
and
xchg
je
je
out
sub
and
add
add
inc
sbbl
push
sbb
aad
or
inc
add
shlb
inc
push
push
mov
inc
and
sahf
call
adc
mov
outsl
push
mov
push
mov
mov
jp
inc
es
outsb
jmp
scas
sbb
push
movl
sub
mov
clc
or
xor
push
cmpsb
imul
mov
xor
mov
shlb
dec
cmpb
rorb
call
pusha
sub
xchg
inc
loopne
fisubs
push
in
shl
sub
fwait
mov
xor
mov
inc
cli
and
lea
mov
mov
add
pop
jb
scas
test
in
pop
stos
pop
cmp
mov
test
mov
loopne
sti
sti
repnz
mov
or
xchg
lods
cmp
pop
cwtl
xor
lock
sbb
stos
dec
daa
mov
add
fsubs
arpl
mov
addr16
inc
and
jae
push
cmpsb
movsb
xor
ret
lea
push
cmp
je
test
adc
pop
cld
mov
add
mov
rclb
or
xlat
mov
sti
pop
daa
dec
add
cmp
cmp
push
and
mov
ss
test
push
rorl
stos
mov
push
rolb
aam
xor
pop
sub
adc
mov
pop
adc
mov
add
pop
stos
adc
sbb
scas
jl
ret
inc
fimull
add
cmp
add
add
mov
add
mov
scas
push
or
mov
sahf
push
cmp
lock
hlt
sub
inc
push
les
add
pop
adc
push
cwtl
and
xchg
shll
outsb
xor
aaa
or
subl
xchg
mov
imul
sti
test
and
pusha
jb
xchg
orl
xor
or
out
jg
mov
inc
fisttpl
lea
inc
sbb
push
dec
pcmpgtb
push
sbb
mov
jp
je
xchg
insl
mov
lods
dec
mov
insb
std
sbb
push
mov
sub
and
sbb
jmp
cld
pop
adc
lahf
jne
sub
pop
cwtl
addl
xchg
xchg
lock
dec
mov
or
jne
push
fidivl
mov
cmp
or
and
bound
sbb
jne
fldenv
inc
daa
aas
mov
test
mov
mov
xchg
lret
sbb
cmpsl
push
inc
and
lret
xor
jae
rorb
aam
fnstsw
pop
push
push
add
lret
loope
mov
xor
loop
or
dec
notb
cmpsb
es
push
rolb
push
push
pop
sub
and
jne
out
add
inc
adc
cmpsb
popf
push
mov
jne
sbb
aas
jnp
mov
inc
fdivrl
sbb
das
bound
add
into
cmpl
and
mov
or
push
rcrl
mov
jb
fdivrs
inc
lods
jmp
fucom
xchg
cmp
je
mov
cli
lds
or
inc
mov
inc
inc
inc
xchg
in
loope
jge
pop
or
adc
cmpsl
das
mov
xchg
cmpsl
sub
inc
jne
cwtl
mov
imul
pop
mov
adc
mov
pop
ret
push
aam
fsubr
cmp
in
test
ret
dec
mov
push
push
cmpsl
rorb
movsl
inc
fsubp
insl
mov
sub
call
xor
jbe
jo
or
or
je
push
incb
ret
incl
jmp
pop
inc
cmp
je
lea
cmpb
mov
cmp
jne
les
aam
adc
push
sbb
jmp
cmp
mov
mov
inc
cli
push
dec
sbb
dec
into
ss
mov
jne
mov
push
adc
xchg
cmp
sub
sbb
je
jmp
js
add
add
add
lcall
or
push
ljmp
insb
or
pop
jl
cmp
sbb
mulb
adc
pop
sbb
dec
ret
test
pop
push
fnsave
jg
push
insb
cmp
orl
adc
add
int
fadds
sbb
dec
mov
jne
mov
inc
iret
test
inc
dec
add
mov
popf
mov
jbe
xor
test
in
mov
mov
add
test
add
mov
and
mov
addr16
clc
add
push
push
push
sbb
add
rolb
push
push
pop
shrl
push
das
mov
rolb
adc
cmp
dec
push
mov
sub
cmp
jbe
lret
lret
mov
cmp
and
jae
xor
push
fadds
mov
sub
in
mov
xor
cs
lret
cmp
cmp
ffreep
into
push
adcb
adc
rolb
stc
pop
sti
jnp
es
cwtl
push
in
add
addl
xchg
test
out
mov
adc
ds
mov
push
arpl
push
punpcklbw
or
aam
push
or
ficoml
rcrl
enter
cmp
push
cmp
stos
movsb
push
ficomps
mov
mov
popf
xchg
sahf
insl
lods
jne
push
pusha
mov
sub
lds
movsb
test
sub
push
mov
dec
loopne
fidivrs
add
pop
inc
dec
movl
pop
cmp
shll
mov
pusha
mov
inc
inc
xor
lock
inc
inc
repnz
hlt
xor
fucom
test
jnp
xchg
gs
pop
test
or
jmp
repnz
or
add
lcall
sbb
add
or
dec
xor
pushl
push
push
push
loopne
in
cmpsb
xor
out
jne
cld
aam
xor
add
or
jmp
fbstp
fadds
add
push
lcall
hlt
cmp
ljmp
inc
dec
rclb
jnp
sub
cmp
sti
jg
inc
jl
adc
fucomi
ud0
add
mov
mov
test
jnp
ret
mov
add
je
xorl
and
cmp
dec
bound
lea
fsub
and
cmp
rcr
jne
mov
andl
push
xchg
rclb
imul
mov
inc
fsub
in
in
add
loopne
jo
mov
in
out
sbb
jo
cmp
xchg
mov
shl
orb
jg
push
xchg
jmp
cmp
fidivl
push
jle
adc
mov
push
adc
mov
lock
idiv
push
adc
addb
pop
daa
shlb
repz
xor
lcall
or
bound
mov
cmp
call
inc
mov
ret
fcompl
mov
or
cmp
icebp
add
cmp
and
add
cmpsb
sub
imul
bound
or
loopne
popa
ss
loopne
repnz
xorl
imul
sbb
or
adc
cltd
inc
push
jns
out
pop
popa
adc
pop
or
loop
ret
dec
scas
dec
cld
mov
outsl
notb
aaa
sub
lods
pop
fnstcw
ja
sub
pop
xor
stc
cwtl
pop
sbb
int
subl
orl
outsl
sarb
inc
jmp
push
jg
push
pop
mov
mov
or
int
fistl
add
add
push
imul
xor
push
adc
dec
sbb
dec
rcrl
push
xor
cmp
xor
jo
enter
mov
jl
pushf
out
das
loope
dec
clc
inc
mov
or
pop
sbb
sti
das
mov
xor
push
fidivs
pusha
mov
dec
dec
dec
sbb
dec
jo
aad
push
push
mov
xor
push
mov
pushf
jle
mov
mov
add
hlt
and
pusha
outsb
xchg
push
movl
cmp
cli
popf
mov
subb
in
dec
rol
sub
lock
movsl
sar
xor
stos
xor
sbb
out
xor
loope
stc
cmp
pop
or
inc
clc
inc
inc
or
testl
ja
or
dec
cmp
jecxz
add
inc
sub
add
jecxz
add
into
mov
rolb
lea
shrb
dec
inc
out
pop
aaa
testl
push
mov
inc
jecxz
les
add
mov
pop
pop
add
aas
sbb
xor
rcrb
adc
jmp
movsl
pop
andl
lea
pop
pushf
out
shrl
scas
int3
jo
cld
sub
out
pop
gs
adc
orl
lods
xchg
xchg
xchg
dec
stos
xor
leave
sbb
movsb
ja
cmp
xchg
rcll
lret
mov
cmp
push
cmp
lods
push
jns
xchg
xor
push
inc
add
xor
int3
jecxz
sbb
adc
insb
adc
sbb
icebp
add
xchg
push
dec
mov
outsb
call
and
push
and
jge
popa
jle
out
pop
dec
inc
pop
cmp
jbe
insl
inc
pop
inc
push
jl
cmpsl
js
and
rorb
xchg
jbe
mov
push
inc
push
xor
jecxz
pop
cmp
mov
mov
stos
mov
imul
out
and
pop
pop
mov
or
jp
sub
mov
and
mov
pop
sbb
jle
jge
inc
enter
push
xor
push
pop
pop
cmp
loope
pop
push
inc
dec
fimuls
lea
lret
clc
insb
mov
into
mov
dec
xor
icebp
mov
int3
jl
jae
out
and
movsl
add
sub
test
fisttps
in
pop
push
inc
xchg
sti
inc
addl
pop
imul
test
push
popa
enter
pop
cmp
ret
mov
and
mov
lds
fcomps
fistpl
add
sub
jge
mov
sub
dec
adc
push
subl
popf
or
mov
mov
mov
ret
sub
xor
popf
push
sbb
or
mov
clc
or
divl
jecxz
jmp
in
sub
sahf
push
sub
or
jmp
inc
jne
in
adc
arpl
mov
pop
or
adc
sbb
sub
xor
das
or
lea
add
lock
add
jo
jle
push
cmp
sbb
jge
stos
xchg
shlb
mov
daa
aaa
pop
adc
pop
outsl
adc
std
push
ret
mov
push
mov
inc
aam
outsl
imul
mov
cmpsb
cmp
scas
jecxz
adc
out
cmc
rclb
adc
jl
mov
push
or
add
ja
in
push
jb
push
cmp
jne
fcmovne
adc
xor
cmc
pop
in
mov
lods
pusha
adc
or
int
in
cwtl
and
or
sub
jge
push
mov
or
pop
mov
lock
aam
ja
or
pop
adc
xchg
inc
or
test
push
mov
sbb
outsl
loop
or
mov
sub
push
je
and
and
shl
fcomps
cli
in
call
in
sbb
in
inc
and
sub
adc
push
or
sbb
mov
xor
adc
push
cmpsb
adc
cmc
pop
test
pop
add
jmp
push
into
sbb
or
mov
push
mov
fwait
sbb
insl
sbb
and
pop
cmpsl
ljmp
lcall
xchg
pop
pop
mov
int
movb
pop
mov
out
pop
push
sbb
dec
enter
fcoml
sbb
sbb
xor
add
and
repnz
dec
ret
push
addr16
in
call
or
push
pop
push
add
cmp
mov
lea
push
cmpb
or
pop
mov
pop
xor
xor
pop
xor
and
jo
ss
adc
iret
xor
cmp
mov
cmpsl
cltd
push
mov
push
or
test
loopne
add
and
pop
pop
stos
mov
int
js
push
cli
xor
fs
inc
popf
xchg
sub
mov
mov
psubsw
pop
call
jle
test
push
add
sub
cs
aad
or
sbb
add
sub
xchg
or
scas
fs
sub
adc
stos
xchg
mov
jmp
dec
sub
sbb
push
out
add
cmp
inc
ljmp
orl
push
inc
inc
jecxz
mov
sub
xchg
and
adc
jae
mov
sbb
jns
push
adc
add
cmp
add
xor
inc
lret
sarb
test
xchg
add
sub
je
cmpsl
push
add
mov
aad
in
mov
pop
xchg
push
add
out
push
xor
mov
and
sub
in
sub
dec
dec
pop
loop
lods
cmp
mov
ss
lcall
xor
add
jmp
xlat
dec
xlat
mov
hlt
xchg
sbb
sub
aad
or
out
xor
add
ret
xor
repnz
stos
lock
inc
cmp
jne
mov
jmp
loop
add
daa
add
mov
or
movsl
sahf
add
cmp
or
xchg
dec
add
fs
xor
push
sbb
cmp
sub
and
sub
xchg
push
push
jmp
scas
sbb
xchg
test
jno
sbb
sub
cmp
xchg
test
nop
push
mov
cld
les
loope
sub
mov
push
push
adc
jecxz
xor
push
adc
push
fisttpl
cld
and
cmp
jne
push
test
ds
mov
in
rorb
jl
or
pop
pop
add
pop
dec
adc
dec
or
movsb
aam
ret
dec
mov
or
scas
dec
mov
sub
inc
sahf
into
cmp
and
repnz
insb
inc
bts
push
movsb
fdivs
xor
add
test
xchg
mov
ffree
or
icebp
lahf
movsl
push
mov
push
cmp
in
pop
adc
inc
mov
pusha
xor
orl
jge
movsb
shr
xchg
fwait
dec
in
jns
jne
fnsave
fcomip
push
call
repnz
orb
fs
repz
jmp
int
xchg
push
mov
dec
sbbl
sbb
and
imul
clc
cmp
call
inc
fsts
push
push
mov
rorb
or
scas
jno
and
sbb
pop
push
pop
pop
cmp
int3
push
push
or
push
mull
imul
int3
fdivl
cmp
mov
pop
adcb
cmp
fmull
psrad
xor
xadd
and
adc
cmp
pop
mov
and
rcrl
or
cmp
gs
mov
add
fcoms
push
fwait
xlat
bound
enter
mov
pop
jmp
je
xchg
pop
inc
cwtl
and
sti
or
cmc
xor
jg
fisttpl
ror
push
insb
jae
or
inc
xor
pop
ja
ffree
aaa
inc
cmc
cmp
jnp
enter
test
mov
cmp
lret
iret
mov
pop
xchg
data16
mov
clc
into
cmp
jmp
enter
jne
mov
test
add
push
data16
repnz
push
xchg
xor
push
je
push
dec
jae
fwait
add
xchg
or
enter
adc
sub
andb
icebp
adc
fucomip
mov
sbb
pop
xchg
inc
push
lock
rep
sub
inc
fs
push
out
and
mov
push
sbb
jns
or
inc
std
les
aas
push
mov
jns
xor
call
pop
xor
movsl
push
sub
push
dec
in
sti
inc
add
pusha
jp
addr16
mov
sub
shrl
popf
insb
and
cmc
sbb
stos
sbb
adc
lcall
jo
pop
imul
pop
les
push
dec
adc
inc
pop
add
push
mov
jmp
stos
add
popf
push
fcmove
shlb
cli
push
andb
ja
jmp
scas
ja
inc
mov
andl
inc
insb
out
add
ret
mov
fiadds
cld
adc
lea
push
xchg
and
mov
js
fs
jmp
popa
sub
xor
pushf
xchg
cmp
add
xor
lods
cmpsb
pop
add
cmpl
cmp
xchg
movsb
pop
rcrl
inc
in
cld
cmp
aam
mov
adc
sub
mov
push
popf
pushf
add
fs
mov
fwait
iret
dec
sbb
push
sub
push
fstl
pop
push
mov
popl
js
daa
pop
jmp
insl
rolb
sbb
stos
movb
pop
dec
add
xchg
xchg
enter
iret
out
mov
push
xchg
cltd
iret
jb
adc
cmp
push
mov
adc
push
arpl
and
stos
pushf
jne
ret
adc
jge
movzbl
push
xor
sub
xor
dec
cmp
je
loope
jg
xor
mov
inc
data16
inc
mov
fisubs
pusha
xor
add
je
insb
and
or
pop
push
fwait
ljmp
cmp
adc
adc
fdivl
jmp
rcrb
invd
jnp
lock
movsb
jg
imul
pop
orb
add
adc
push
inc
push
andl
daa
or
jp
adc
test
sbb
xchg
cmp
xor
sbb
dec
loope
xchg
arpl
pop
ret
int3
rolb
cwtl
add
icebp
fcomps
push
or
pop
ret
pop
cmp
fnstsw
movb
movl
cmp
push
mov
push
rcrl
jge
mov
adc
jge
jb
cmp
mov
in
jge
cmp
jne
inc
ret
push
mov
inc
fs
push
test
xchg
xor
ja
mov
mov
sbb
out
adc
jle
pop
adc
sub
mov
ds
loopne
jno
and
cmp
je
xor
inc
cmp
mov
push
and
pusha
mov
into
inc
mov
dec
or
cmp
fisubl
push
ret
sub
adc
cli
jo
sbb
insl
sub
mov
jge
add
fadds
mov
shll
pop
adc
mov
fs
jg
je
cs
or
in
lcall
pop
jge
fmull
lret
mov
aaa
push
mov
mov
add
xor
out
fwait
subl
popa
xchg
mov
cmp
jbe
cmp
jbe
mov
sbb
push
xor
mov
add
into
push
ret
lahf
mov
sti
xchg
call
enter
add
and
adc
and
xchg
les
push
or
lea
in
dec
lea
es
mov
pop
es
mov
and
push
push
adc
in
lea
popl
lea
gs
jne
mov
lsl
cs
mov
pop
adc
ds
stos
sub
es
or
xor
cs
fadds
pop
lods
fistpl
movsl
push
sub
ss
bound
sub
mov
jmp
add
je
push
xlat
imul
ret
or
push
pop
scas
mov
daa
and
stc
fdivrs
cmp
shlb
lcall
jne
mov
push
and
loop
dec
push
jne
adc
sbb
and
and
mov
out
pusha
jle
jmp
out
leave
jb
roll
mov
cwtl
sbb
insl
or
push
cmp
sbb
stos
or
call
or
cmpsl
inc
and
sub
sbb
lcall
mov
inc
cmp
jb
pushl
mov
xorb
jo
pop
xor
out
lea
cmc
jg
flds
cmp
ja
daa
fstps
and
dec
sbb
ds
imul
adc
mov
adc
push
inc
push
add
mov
push
sub
fnstenv
sub
sub
lret
fwait
subl
insl
popf
jg
fwait
mov
fsubs
pop
mov
mov
add
or
les
fcomps
jno
inc
xchg
ficoms
fwait
pop
ret
movb
int
mov
lret
mov
lds
cld
push
adc
cmpsl
cli
inc
push
inc
lea
lea
add
push
outsb
mov
xor
push
lea
and
xchg
xor
dec
call
or
jecxz
push
out
sarb
dec
enter
and
and
aaa
mov
fstps
cmp
les
xchg
lcall
clc
add
inc
jno
push
and
pop
fwait
rcl
mov
mov
pop
cld
cmp
test
ret
je
jle
push
xor
sbbl
push
sbb
xor
mov
sti
test
movsb
xchg
inc
jbe
cmp
out
push
ret
ret
out
mov
push
dec
sub
cmp
adc
xor
sbb
pop
cmp
jne
pop
imul
fnstcw
jl
adc
mov
cld
push
add
push
and
in
sub
cmp
jb
adc
shlb
dec
mov
icebp
and
movsb
xor
mov
or
xchg
inc
fsubl
push
pop
add
add
add
lea
shrb
into
bound
sub
lods
xor
or
cmp
arpl
or
stos
pop
mov
loope
and
dec
ljmp
add
inc
mov
xchg
faddl
and
push
xor
movsb
orl
add
pusha
adc
fcmovnb
dec
int3
stc
jmp
or
mov
mov
mov
cwtl
mov
mov
mov
or
add
and
ss
scas
jp
mov
inc
dec
lcall
mov
xchg
jg
cmp
cmp
pop
jl
cmp
add
jmp
clc
add
testb
stos
es
es
jmp
in
sbb
adc
je
or
dec
pop
inc
dec
mov
ret
insl
shrl
loope
rorb
add
sti
cs
xor
hlt
fcmovb
or
adc
adc
jmp
pop
popa
sbb
sbb
inc
push
jmp
adc
fstpt
cmp
jge
jno,pn
mov
lahf
lods
mov
pusha
js
pop
pop
pop
punpcklwd
ja
inc
daa
mov
push
jge
popf
pop
push
pop
dec
or
cmp
test
hlt
sbb
mov
mov
clc
fidivrl
cmpsl
inc
push
loop
enter
sbb
cmp
ljmp
push
xchg
rcrb
or
xchg
clc
dec
outsb
add
push
lock
adc
sti
lret
ret
or
std
inc
mov
sub
pop
pushf
pop
xor
add
push
repz
xbegin
mov
pop
push
mov
push
xchg
mov
pop
rcrb
jle
add
rclb
add
outsb
cmpsl
pop
inc
add
pop
sbb
push
push
push
test
mov
and
pop
test
lods
inc
pop
pop
mov
mov
lcall
lea
rclb
pop
pop
dec
inc
push
rolb
cmp
in
insl
push
incl
sbb
add
jge
jle
jbe
adc
mov
mov
sbb
cmp
mov
push
and
jnp
pop
pop
into
dec
inc
inc
inc
ja
mov
imul
les
mov
xor
inc
sbb
adc
jmp
push
clc
inc
push
mov
mov
scas
jle
adc
inc
sub
or
sub
mov
mov
mov
js
jb
pop
jno
lods
ret
cmpb
and
rclb
lods
std
mov
and
fiadds
push
mov
add
xchg
or
jmp
rorb
push
jecxz
mov
movsb
push
addb
and
pusha
mov
adc
insb
xchg
dec
daa
lock
jge
adc
mov
sbb
mov
cmp
inc
clc
in
xadd
add
sbb
adc
and
pop
xchg
sbb
aad
lea
sub
lea
sbb
jnp
mov
mov
int3
aad
mov
mov
or
inc
adc
notl
clc
mov
mov
lods
sti
mov
repz
inc
jns
icebp
and
imul
inc
mov
jmp
aaa
lret
pop
clc
clc
xor
leave
lods
and
xor
adc
cmp
je
int3
xchg
lea
ja
adc
je
pop
add
mov
test
mov
jp
sub
adc
xlat
je
xchg
cld
dec
in
call
inc
cld
push
shlb
popl
test
mov
sub
pop
cmp
jmp
popa
mov
scas
ret
push
sarb
or
inc
in
mov
dec
push
push
mov
xchg
adc
xor
mov
aas
xor
roll
call
mov
dec
das
pop
or
mov
lea
push
cwtl
pop
inc
cmp
xchg
and
fmuls
mov
adc
xor
or
daa
or
or
adc
orb
mov
or
jmp
jmp
hlt
into
push
outsl
or
int3
xchg
pop
cmp
cmp
mov
rorb
je
das
add
cmpsl
sub
mov
testb
dec
pcmpgtb
out
inc
cmp
mov
sub
add
add
dec
add
inc
in
rol
push
jo
ss
jne
mov
loope
std
aam
or
xlat
xchg
cmp
mov
dec
mov
jnp
push
sub
add
inc
aaa
sbb
and
add
inc
sub
mov
or
dec
dec
sub
sbb
dec
shlb
dec
mov
rclb
js
pop
cmp
je
mov
lock
mov
mov
sub
add
xchg
adc
adc
fstpt
mov
bnd
popf
movl
sbb
adc
nop
dec
jp
je
inc
xor
cmpsb
imul
clc
add
in
cmp
lock
cmp
inc
inc
outsl
rclb
and
cmp
mov
pop
test
js
scas
rorb
mov
jl
mov
mov
lahf
add
daa
and
adc
dec
push
stc
mov
cmp
jae
lea
jmp
cmpl
pop
pop
filds
cmp
jbe
mov
faddl
mov
adc
test
mov
push
jmp
sub
sub
sub
movsb
sbb
xor
and
cwtl
jo
jo
lods
outsl
pusha
push
xchg
lods
push
pop
rcrb
or
mov
int
add
add
inc
inc
nop
adc
clc
push
jmp
mov
mov
dec
and
add
inc
and
mov
mov
push
dec
addl
add
rcrl
and
sub
jmp
mov
add
inc
inc
in
xor
rorb
ss
jb
pop
jo
rolb
cwtl
fcomps
cmp
ret
into
jnp
les
pop
add
les
nop
test
ss
push
repnz
inc
fcompl
xor
ret
bound
mov
xchg
lock
xchg
jge
les
into
adc
xchg
dec
insb
icebp
mov
mov
pop
inc
hlt
daa
aad
popf
mov
sub
addr16
or
sbb
sbb
sahf
sbb
xor
sbb
mov
aas
inc
and
incw
push
je
jo
xchg
loopne
cwtl
xlat
push
aaa
jno
std
jmp
xor
sbb
loopne
jae
gs
mov
mov
add
or
xchg
push
call
shlb
push
or
cmpl
fwait
xor
shrb
int3
fwait
fwait
or
and
fidivl
inc
faddl
lea
mov
lods
cld
sbb
insb
imulb
js
adc
and
fcompl
inc
lock
nop
pusha
cmp
cmpb
inc
mov
adc
imul
push
push
call
nop
sbb
inc
stos
sub
daa
dec
sbb
sub
xor
addr16
sub
adc
arpl
xchg
mov
test
pusha
mov
andl
adc
lea
sahf
xor
bound
or
sbb
pop
rorb
xor
pop
mov
mov
dec
push
xchg
jp
loope
hlt
cmp
es
mov
sti
mov
or
xchg
mov
or
jnp
inc
ljmp
xor
pop
sub
in
jmp
cmp
jbe
mov
or
dec
dec
dec
clc
jne
iretw
mov
mov
push
test
cmp
dec
or
rcrl
aaa
sub
push
push
pop
add
sbb
cmp
stos
test
aam
mov
mov
add
or
mov
hlt
hlt
jae
mov
inc
add
inc
fcomps
or
add
sub
pop
mov
xor
add
cmp
jae
stos
add
inc
sbb
inc
pop
jl
jne
push
js
fldt
clc
shl
cld
loopne
fnstenv
mov
add
cwtl
sbb
or
repz
lcall
add
lock
adc
clc
pushl
div
rclb
dec
add
sbb
adc
mov
nop
sub
into
orl
data16
or
pop
jbe
in
cmp
movl
cmp
push
mov
fists
cli
and
je
loopne
mov
mov
push
or
push
nop
or
cmp
fmull
and
adc
push
pop
flds
inc
adc
xchg
xor
cltd
test
hlt
and
adc
xor
outsl
std
stos
sub
in
fwait
dec
lea
aam
inc
lods
arpl
loopne
xor
xor
xchg
mov
inc
mov
jnp
mov
mov
jmp
jbe
push
cmp
adc
adc
fucomp
jge
jbe
push
add
dec
hlt
adc
dec
xchg
jle
adc
out
dec
jae
lret
dec
mov
imul
insl
fstpt
roll
sub
das
push
jmp
pusha
ret
mov
cmc
lahf
lahf
jne
push
push
hlt
xor
inc
cmpl
xor
mov
lea
gs
mov
loopne
loopne
sub
lods
push
mov
pushf
mov
ds
mov
xchg
jmp
mov
jg
popa
or
mov
repnz
ficomps
push
movzbl
lds
jbe
sub
mov
add
xor
mov
pop
push
mov
add
aam
dec
ret
cmp
mov
dec
or
push
jns
stos
or
mov
mul
seto
inc
sub
or
insl
adc
push
out
into
mov
xor
adc
rol
lea
jp
pop
inc
push
shl
push
cmc
xor
mov
sub
or
in
push
and
fcoml
or
mov
iret
cli
pop
xor
rolb
lret
lock
jle
stos
fldcw
jmp
jo
sbbl
enter
cmpsl
andb
test
xor
sarb
inc
dec
cli
cli
add
insb
and
call
and
ja
repnz
test
sarl
cmpb
lds
insb
pop
addb
jge
add
aaa
es
jmp
fcoml
jo
add
xor
aas
ret
iret
mov
cmpsl
sub
test
mov
sub
popf
pop
sbb
nop
pop
adc
lock
push
fsub
es
gs
xor
lock
xchg
xchg
inc
outsl
pop
into
jmp
mov
popa
lret
xchg
and
inc
les
push
out
sub
jne
inc
cmp
jne
add
jae
cmp
lret
pop
or
cmp
and
or
pusha
push
ss
cmp
adc
or
jle
jl
and
sbb
dec
pop
or
jb
les
lahf
addl
add
push
pop
sbb
js
loopne
add
out
out
fistpll
and
addr16
lock
add
push
mov
test
je
sub
inc
xchg
pop
adc
push
enter
fs
and
dec
bound
ja
cmp
enter
jmp
cmp
movsb
mov
sar
add
pop
daa
in
jo
movb
add
and
adc
inc
jg
sub
pop
sar
out
add
mov
mov
bnd
imul
in
inc
sbb
out
adc
scas
ret
jmp
out
xchg
mov
adc
push
cld
sbb
mov
add
add
lcall
mov
push
popf
pop
lods
xor
test
add
movsb
lds
dec
lods
or
push
jbe
je
add
inc
js
xor
sub
sahf
mov
call
repz
in
in
jl
cmp
jmp
or
mov
cmp
call
sub
enter
inc
jl
sbb
jno
shlb
out
dec
add
jge
jmp
clc
jo
stos
shlb
pop
mov
push
or
add
icebp
cmp
add
div
jne
decb
sahf
or
pushf
loope
add
or
mov
in
jecxz
and
add
and
je
adc
xor
lea
or
jle
test
jmp
outsb
or
adc
aam
std
jo
jb
pcmpeqw
fsubrl
push
push
in
push
pushl
scas
leave
xchg
in
xchg
and
loopnew
jg
in
push
or
sub
add
mov
jb
test
pop
push
and
rorl
dec
push
mov
sub
sarl
sbb
push
int3
in
pop
rcrb
pushl
jmp
mov
je
imul
xor
mov
mov
mov
lds
sub
mov
jo
mov
cmp
jb
sbb
mov
roll
int
push
negl
cmp
rol
mov
dec
mov
addr16
ret
pop
int3
inc
jmp
cmp
add
int3
push
out
mov
dec
andl
push
xor
xor
sub
mov
mov
add
xor
adc
push
lods
pop
cmp
sbb
lea
pop
xchg
pop
out
xchg
push
lea
push
ret
add
jecxz
jp
icebp
mov
inc
imul
cmpsb
and
sti
loope
sub
lcall
andl
xchg
rclb
addr16
clc
loope
jmp
movb
or
in
std
cmp
jae
sub
loopne
adc
xlat
mov
adc
ljmp
dec
mov
cmc
xchg
dec
adc
shlb
fstpt
jecxz
inc
mov
sbb
das
adc
dec
idiv
mov
dec
daa
incb
mov
xor
data16
pop
mov
sbb
mov
or
sti
mov
or
jae
adcb
xor
lock
aas
push
add
xchg
jle
sub
push
in
add
and
enter
addb
mov
adc
test
ja
or
cld
pop
sub
enter
pop
and
addl
fisttpl
xor
roll
cmp
add
add
add
mov
xchg
mov
or
test
enter
lds
mov
xchg
inc
cmpsl
xor
fistpll
mov
mov
outsl
je
push
xlat
xchg
clc
inc
cmpl
adc
sbb
xor
imul
sub
gs
negl
or
or
adc
xchg
xor
das
sbb
push
mov
in
pushf
pop
pushf
outsl
cmp
or
sub
stos
ret
add
xchg
and
insb
add
pop
lods
mov
das
jle
out
jns
xchg
push
push
sbbl
lock
mov
fcoml
mov
imul
sub
mov
push
out
push
imul
xchg
aas
bnd
mov
fistpl
cmp
jne
cmpb
ret
push
jae
lods
adcl
push
sub
sbb
cmp
and
adc
gs
sbb
xchg
divl
push
es
daa
fs
or
or
adc
nop
pushf
adc
daa
inc
sub
or
inc
popf
jbe
leave
push
shrb
cmp
stos
out
das
push
cmp
jae
inc
jmp
push
or
mov
mov
jge
mov
faddp
xor
movb
add
add
mov
sub
mov
or
push
jmp
lods
push
mov
push
popf
adc
ror
int
cmp
jne
and
clc
test
adc
fimull
movntps
mov
pop
add
mov
test
dec
add
in
cmp
or
es
or
sbb
push
adc
sub
sbb
push
test
add
mov
xchg
mov
mov
in
pop
pop
aaa
adc
sub
inc
or
add
or
or
xchg
test
std
arpl
mov
cmpsb
lcall
pop
nop
aad
or
mov
push
pop
sbb
stos
pushf
pop
jbe
pushl
mov
jmp
je
mov
clc
inc
sbb
adc
and
cmp
ja
cmpb
push
push
or
or
xor
addb
sbb
cmp
sbb
lret
sub
sbb
ds
fsubs
jo
push
jl
pop
imul
data16
sub
jmp
pop
push
inc
or
add
xor
fsubs
jbe
out
mov
imul
adc
out
or
mov
jmp
mov
adc
lods
leave
mov
lea
cli
ja
cmpb
out
ret
adc
push
inc
pop
je
or
adc
sub
into
iret
pop
cwtl
mov
push
xor
ret
mov
add
mov
popf
rcrb
xchg
push
addr16
shrb
pop
sbb
xchg
push
pop
nop
das
es
inc
test
pop
in
mov
xchg
rclb
cmc
popf
pop
xor
push
or
out
mov
or
rorl
add
nop
mov
repz
pop
sub
xor
dec
sbb
rolb
cs
xchg
cmp
jne
js
mov
lea
insl
jae
xchg
or
dec
and
loop
call
shl
dec
cmp
lea
jl
mov
mov
mov
push
dec
cld
cs
jns
mov
xchg
repz
ret
jne
jmp
ss
adc
pop
dec
mov
ss
std
cli
dec
add
iret
pop
aam
inc
fldl
mov
add
push
test
clc
data16
dec
or
xor
sub
inc
sbb
cmp
sub
mov
or
repz
add
jbe
adc
jae
add
cld
xor
cmp
daa
cwtl
or
adcl
rclb
dec
jb
int
call
pop
movsl
sbb
clc
rorb
mov
cld
push
mov
push
mov
mov
dec
enter
or
ljmp
xchg
lods
rol
pop
mov
dec
cmp
in
adc
arpl
sbb
and
hlt
add
pop
pop
xchg
daa
loope
fadds
pusha
lock
push
adc
or
out
jecxz
fildl
pop
test
dec
pop
cmpsb
and
mov
or
cmp
adc
push
xor
loopne
mov
pop
add
fmul
cli
add
push
ret
mov
pop
mov
out
jbe
pop
adc
aas
xor
push
jg
sbb
cld
cmp
cmp
mov
mov
adc
push
xchg
or
cmp
jne
push
pushf
and
and
je
in
aam
add
lret
push
test
push
in
xor
jle
inc
inc
mov
jp
adc
cmp
and
es
aam
mov
xchg
xchg
sub
lock
mov
add
in
in
cmp
pop
xor
mov
adc
sbb
in
jmp
mov
and
add
repnz
int3
xor
arpl
roll
push
in
add
movsb
enter
movsb
add
mov
ja
cwtl
testl
add
es
or
jns
call
xchg
cmp
or
lds
sbb
clc
adc
iret
or
xchg
sub
push
inc
push
cs
sub
push
jb
fmull
pop
sub
inc
test
dec
addl
mov
je
call
int
pop
aas
inc
push
in
seto
and
test
push
sbb
fs
insb
sbb
pop
pushl
and
stc
xor
shlb
or
xchg
cmpsl
sub
bound
orl
jmp
mov
mov
cld
push
ja
andl
mov
jmp
jne
or
add
test
adc
icebp
add
fisttpl
iret
and
push
push
imul
fildl
pop
ja
rcrl
ret
jo
mov
add
pop
mov
add
mov
pop
dec
mov
dec
cld
inc
fldl
nop
mov
dec
rclb
cmp
mov
push
inc
pushl
leave
add
and
enter
dec
in
cmpsb
adc
pushl
shrb
pop
pop
jmp
or
dec
nop
ja
mov
out
repnz
notl
into
mov
pop
pop
and
sub
fstp
pusha
cmp
mov
hlt
hlt
call
add
ja
lcall
rcrl
rolb
mov
push
loopne
scas
nop
mov
lcall
dec
or
sbbb
mov
dec
fmuls
add
lock
rorl
cmpsl
jno
push
jbe
inc
addb
mov
and
jb
in
lock
nop
cmp
jge
jp
add
fcoml
loopne
mov
push
mov
es
inc
pop
and
test
int3
mov
nop
inc
jl
inc
je
ret
jns,pt
rclb
push
adc
pop
or
enter
sbb
add
mov
into
or
add
fprem1
or
cmp
jbe
push
test
and
dec
adc
cmpsb
nop
mov
cwtl
je
cmpl
imul
cli
cmp
arpl
xchg
pushf
fimuls
push
sub
sub
pop
push
dec
sub
popa
jbe
xor
or
push
pop
aad
mov
lret
fs
fsubrl
rcrl
in
sub
mov
fists
add
sub
mov
push
jmp
call
ret
pop
inc
mov
mov
lock
mov
iret
popf
mov
push
sti
xchg
adc
dec
stos
xchg
aas
xchg
pop
add
adc
mov
push
movlps
inc
lahf
sbb
jmp
fisubrs
mov
jl
daa
xchg
ljmp
pop
adc
rorb
faddl
shlb
test
lock
fstp
jge
push
std
ror
sarb
push
test
add
jo
test
add
rclb
xor
pop
rcl
inc
pop
pusha
or
out
adcl
call
xchg
aam
mov
push
or
inc
pop
pop
lods
pushf
dec
lcall
fmull
or
mov
loopne
shrb
jmp
jo
cmp
push
daa
cmp
dec
outsl
insl
test
inc
daa
inc
jecxz
jno
cmp
jge
jb
das
js
sub
add
push
ja
mov
iret
fiaddl
lea
ds
jb
or
pop
xor
pop
test
imul
mov
xchg
adc
imul
lea
js
add
mov
jno
or
mov
into
call
inc
push
jae
cmp
rcll
mov
aad
sbb
pop
imul
add
add
stos
mov
push
ret
or
fldcw
adc
pushf
lock
ret
push
aas
push
lock
movsl
enter
pushf
mov
pop
imul
dec
pop
cwtl
dec
push
or
add
add
push
jle
and
mov
xchg
inc
jb
push
add
out
xchg
mov
cmp
jge
punpcklbw
movsb
pusha
mov
subb
push
cs
adc
je
dec
inc
push
sub
out
xor
movsl
mov
mov
rclb
adc
and
adc
call
push
out
add
cmp
jl
es
jl
aaa
xor
rclb
pop
or
and
add
inc
cwtl
test
adc
or
sub
mov
xor
adc
outsl
pop
dec
cld
adc
outsl
push
lock
fs
and
xchg
add
cmp
js
js
jbe
fdiv
rcrb
pop
rorb
inc
inc
push
xchg
fnstsw
and
cmpl
test
lods
dec
movsb
pop
es
sub
cmp
aas
jne
sbb
loopne
or
or
push
xchg
call
adc
jg
nop
push
insl
pop
add
or
into
testb
rol
cmp
cmp
test
jne
pop
fcomp
add
pushf
fwait
in
shr
rclb
sub
xchg
mov
cmp
ficoms
adc
iret
lds
adc
sub
jne
mov
mov
add
es
lret
mov
into
stos
xchg
popa
ja
add
push
fs
shrb
loopne
movsl
negl
mov
ja
lock
mov
sub
inc
mov
stos
out
mov
cmpb
je
nop
sti
mov
dec
sti
jmp
call
push
and
in
out
fiadds
in
in
cs
movsl
cmp
sbb
addb
test
mov
fidivl
adc
rcl
cmp
inc
dec
aam
adc
xchg
and
and
lret
in
mov
jl
repz
mov
ret
add
lds
add
cmp
bnd
jg
cmp
jb
mov
insb
add
add
xchg
pop
push
fisubl
and
jp
add
popa
pusha
cmp
movsb
push
cmp
dec
mov
push
test
add
ret
repnz
inc
add
rcrb
data16
clc
fs
imul
pop
lea
test
pop
mov
mov
dec
sbb
imul
mov
je,pn
mov
jle
push
loope
je
add
popl
ret
mov
add
jmp
aas
dec
cs
mov
pop
ret
cmpsl
jmp
jo
pop
adc
pop
push
sub
pushf
push
aad
jmp
add
test
decl
lahf
data16
adc
mov
jo
popf
cld
push
jae
adc
cmp
mov
lcall
and
js
gs
jle
test
hlt
cmpb
mov
push
push
dec
in
ss
or
ds
mov
add
xor
negl
repz
ja
dec
inc
hlt
add
cmpsl
xor
push
lods
jne
out
mov
imul
aaa
or
nop
or
aas
adc
test
add
mov
out
dec
test
adc
out
mov
ss
pop
test
fmull
add
jae,pt
jp
iret
or
popf
push
push
ja
pop
lock
jae
xlat
pusha
push
ret
xchg
add
xor
hlt
decb
push
mov
mov
in
in
sbb
push
clc
enterw
mov
mov
jg
sub
mov
cmp
dec
pop
pop
and
ret
cmp
mov
insl
mov
cmp
push
ljmp
jnp
rcrb
jns
cld
add
jo
xor
jb
fsubr
mov
in
push
xchg
test
push
push
ret
push
out
sbb
pop
jb
sub
xor
add
mov
setle
adc
int
fsub
or
mov
fadd
mov
cld
roll
xor
jne
and
dec
mov
popf
jg
scas
adc
xlat
fcomps
inc
jmp
jb
mov
xchg
push
sbb
loopne
or
pop
sbb
nop
cmpsl
das
pop
sti
sub
xor
jb
push
popa
mov
push
sub
mov
insb
mov
fcompl
fdivrl
dec
sub
adc
and
fisubrs
cs
stc
test
xor
in
test
imul
pusha
mov
mov
loope
cmp
enter
adc
sbb
sbb
les
sbb
pop
sbb
movsb
repnz
popa
or
fstps
adc
xchg
lret
adc
sbb
sub
xchg
and
test
or
cmp
cmp
xchg
lret
inc
or
or
dec
push
fs
adc
push
pop
xchg
out
adc
imull
mov
adc
mov
mov
pop
mov
jmp
into
jne
int3
xor
and
jbe
mov
pop
push
or
sahf
fsubrs
movsl
aaa
xchg
lcall
pop
sar
fidivrs
movb
sbb
sahf
loopne
popa
add
add
pop
lcall
popa
or
leave
dec
sbbl
mov
sbb
sbb
out
inc
pop
mov
sbb
enter
inc
shl
pop
push
xchg
enter
adc
add
push
xor
dec
push
jb
fs
inc
inc
sbb
enter
xor
enter
sub
enter
and
adc
xchg
adc
cs
fisttpl
adc
push
mov
enter
popl
xor
cld
incb
icebp
test
xchg
or
dec
push
sbbb
mov
out
movsb
stos
add
cs
sbb
iret
pop
cld
es
int
adc
or
or
popa
and
push
add
nop
pop
loope
lods
sbbb
lods
add
add
sub
sbb
pop
ds
out
xor
and
push
imul
jne
cmp
add
loope
and
insl
mov
push
popf
jmp
push
cmpsb
and
dec
add
xchg
or
sbb
xchg
add
cmp
mov
pop
sbb
add
adc
pushl
xchg
ds
pushl
push
mov
test
out
test
test
push
push
push
pop
push
lock
inc
mov
mov
mov
jmp
call
inc
push
jmp
lea
mov
adc
pop
jo
add
adc
sub
popf
mov
rcrl
add
daa
inc
mov
jo
sbb
in
nop
or
pop
add
sbb
or
and
mov
add
ficomps
jp
mov
inc
sbb
push
mov
gs
icebp
or
adc
outsl
add
jb
cmp
mov
repz
mov
roll
jo
nop
mov
mov
bound
fs
insl
insb
push
dec
not
push
lcall
and
scas
push
or
mov
mov
mov
orl
sbb
or
daa
or
sbb
stos
mov
mov
or
push
xchg
or
enter
in
jmp
xor
add
add
mov
in
cs
lods
orb
jbe
aas
jmp
sbb
adc
and
icebp
pop
jmp
inc
adc
aas
pop
xor
pop
push
jp
xor
adc
cld
xor
fcoml
xchg
inc
mov
add
xor
mov
pop
sbb
xorb
xchg
jbe
jbe
jmp
xor
cli
cs
push
xor
sahf
sbb
je
sub
mov
push
shrl
xchg
js
and
cmp
js
jge
mov
lret
mov
xor
popf
or
insb
leave
push
or
xchg
cmp
push
jl
mov
mov
lods
mov
adc
ret
jmp
ljmp
push
pusha
jne
pop
ljmp
cld
or
adc
lahf
inc
orl
sub
jg
testl
mov
pop
testb
sub
pop
add
push
cmp
jae
push
imul
add
cld
sti
jmp
mov
inc
leave
jmp
adc
and
fcomps
add
cmp
pop
add
loopne
popa
mov
mov
mov
sbb
mov
sub
test
ret
jns
loopne
add
dec
mov
inc
cmp
dec
cmpsl
add
dec
test
inc
pop
pop
icebp
inc
push
sub
and
mov
or
sub
sbb
out
fnstcw
in
data16
and
mov
lds
lea
inc
or
mov
loop
push
outsl
cmp
xor
and
inc
xor
into
push
mov
lea
pop
mov
xchg
inc
sub
out
loope
push
pop
shrb
pop
or
lods
stc
jno
test
or
sub
mov
icebp
lea
ja
repz
mov
dec
add
xchg
out
adc
or
clc
xor
out
xor
add
sub
xorl
adc
mov
xchg
mov
push
or
sahf
fidivs
cmp
inc
add
adc
xor
sub
sub
hlt
addl
test
dec
adc
sub
clc
push
pop
mov
int
sbbl
mov
push
mov
xchg
cmp
push
lods
adc
mov
scas
xorl
js
mov
and
sbb
call
icebp
jne
jnp
push
stos
xor
mov
mov
mov
or
sub
mov
mov
les
test
mov
add
addr16
out
std
xchg
xchg
xchg
cmpb
push
add
xchg
xor
popa
or
hlt
jne
push
xchg
nop
or
adc
mov
xchg
xchg
xchg
push
xchg
add
or
adc
test
adc
pop
or
pushl
pop
jmp
sub
xchg
call
jmp
icebp
punpckhdq
in
adc
das
mov
cmp
push
iret
xor
add
add
ret
push
loopne
add
mov
pop
mov
sti
mov
es
mov
jae
ja
mov
ds
push
dec
testl
les
pop
jmp
sahf
clc
xor
add
mov
mov
rorl
sbb
mov
or
in
and
fwait
sbb
cld
loop
shlb
stos
xor
dec
popf
pop
orl
es
enter
cmp
js
sbb
jp
mov
nop
jmp
imul
movsb
dec
lock
xor
jno
inc
xor
loope
sub
leave
jg
nop
dec
pusha
adc
cli
xor
cmpl
jle
add
mov
ss
cmpsl
inc
inc
repz
cmpl
addl
cmc
scas
pop
lret
push
jno
sub
sbb
testl
adc
cmp
nop
mov
add
inc
icebp
das
popa
mov
sbb
inc
leave
dec
jge
pop
add
mov
out
or
adc
cld
jae
push
inc
mov
xchg
lock
sbb
xchg
mov
pop
add
cmp
leave
pop
or
loope
jecxz
rdtsc
ret
clc
lret
aad
jmp
rorl
jne
shr
popa
call
int
in
mov
flds
sbb
or
jae
inc
push
inc
or
jns
or
rolb
lock
out
pop
lock
xor
orl
sahf
loopne
mov
out
and
test
jmp
or
ret
pop
pusha
pusha
call
mov
lret
pop
sti
lods
xor
add
nop
mov
lock
lahf
lock
push
lea
test
xor
mov
inc
dec
roll
cld
pop
imulb
and
mov
adc
loop
pop
and
xor
jle
mov
jne
xchg
push
fs
adc
mov
daa
sbb
test
xchg
inc
addl
dec
bound
adc
add
push
cmpsb
stos
sbb
rclb
adc
mov
pop
enter
nop
ja
out
jl
roll
push
and
leave
in
call
movzbl
jmp
es
repz
mov
push
sbb
jg
icebp
and
fs
shlb
test
add
pop
jns
mov
push
sahf
imul
movb
or
or
jbe
ret
push
insl
into
jnp
popf
adc
shl
push
jg
fstps
frstor
mov
add
adc
jecxz
mov
push
xor
cmp
out
test
mov
mull
int
insl
or
xchg
adc
inc
js
mov
enter
push
es
pusha
or
sbb
rcll
fcmovnb
shll
adc
mov
xchg
inc
xor
clc
aad
add
mov
xchg
mov
popf
mov
mov
pop
ret
jmp
mov
ja
je
cmp
jle
push
movsb
loopne
jnp
ds
pop
and
rcr
add
jo
fisubrl
popa
inc
cmp
and
xor
loopne
or
cmc
add
cs
push
mov
cld
add
movsl
or
push
or
loopne
in
cmp
movl
or
pop
shll
into
jmp
in
pusha
mov
and
inc
sbb
bound
shr
adc
or
or
aam
mov
cli
push
dec
sbb
mov
add
inc
lods
mov
mov
aas
lds
icebp
mov
rolb
mov
add
jg
mov
add
getsec
cld
mov
rorb
push
dec
jne
rcrl
xor
adc
add
and
push
inc
lahf
jp
into
inc
sub
sub
call
mull
sbbb
push
jmp
cmp
sub
mov
jae
mov
sarb
inc
sbb
xor
ror
sbb
dec
dec
mov
sbb
push
inc
dec
jns
jp
push
xor
mov
push
lcall
xchg
repz
xchg
mov
add
fildll
aas
push
sub
push
inc
push
sub
inc
sub
ss
or
adc
add
or
jnp
xchg
ja
ret
ja
push
cltd
outsb
sub
lcall
popa
daa
in
dec
or
inc
or
inc
mov
jmp
les
add
mov
pop
lcall
xor
mov
pop
lock
ljmp
js
subl
test
inc
add
cld
jno
pop
das
sub
cli
xor
push
and
add
jp
pop
mov
stc
add
cmp
or
cmpsl
bound
xchg
stos
test
sub
popf
inc
cld
cmp
je
mov
inc
inc
xor
decl
and
and
repnz
add
inc
or
inc
stc
cld
roll
jne
mov
add
and
inc
in
add
dec
sub
imul
lcall
pop
ja
dec
sub
jnp
add
pop
pop
push
xor
sub
lods
jno
enter
cmp
nop
dec
xchg
test
inc
fs
and
and
and
sub
jp
push
sub
inc
movb
mov
pop
cs
mov
movsl
push
inc
test
dec
or
xor
iret
sub
fs
xchg
fisttps
add
xor
pusha
and
fisttpll
jae
add
pop
add
jae
xchg
inc
loop
jle
mov
lret
andl
dec
jns
incb
iret
rorl
into
xchg
sbb
pop
fistps
adcb
js
imul
loop
mov
inc
dec
pusha
es
stos
sub
sbb
mov
ds
and
adc
ret
ss
cmp
out
push
add
lcall
or
dec
ret
sbb
dec
dec
cs
push
and
notl
pop
pop
cwtl
dec
xor
push
sbb
jp
imul
js
pop
or
scas
cmpsl
mov
jno
jp
and
ljmp
jnp
lock
push
aas
sbb
jbe
es
inc
mov
inc
adc
rolb
inc
inc
adc
loopne
test
enter
imul
int3
in
shrb
out
add
mov
xor
js
and
shl
bound
test
sbb
mov
jnp
aad
jnp
inc
xor
and
fidivl
jle
shlb
add
xor
addb
lea
cmpsl
sar
rol
pop
repz
shll
cmp
test
push
push
inc
lahf
push
mov
dec
adc
lock
adc
clc
andl
inc
stc
clc
cmpb
rorb
sbb
mov
xchg
adc
jmp
push
and
cmp
gs
push
xchg
adc
inc
pop
sti
mov
jae
jp
js
jne
add
repz
jnp
scas
jge
icebp
sub
je
or
jle
xchg
call
add
sbb
jnp
jmp
push
jmp
addr16
xchg
mov
sahf
popf
dec
pop
rclb
push
int
je
jae
lea
xor
cwtl
pop
xchg
in
xor
jl
xor
mov
xchg
rcrb
push
ljmp
xchg
xchg
enter
movsl
push
les
mov
mov
out
and
mov
rclb
add
push
xlat
push
mov
jno
lds
bound
inc
lock
jle
mov
rclb
rcrb
or
rcrb
mov
mov
cmpl
bound
orps
jae
inc
push
lods
lock
mov
sbb
push
push
mov
mov
nop
xchg
iret
andl
std
xor
aas
sbb
push
icebp
imul
mov
adc
jmp
cld
inc
inc
pop
stc
add
aaa
adc
jns
cmp
ret
icebp
stos
or
push
push
sbb
jmp
bound
scas
mov
aam
pop
and
incl
lret
in
adc
jae
in
in
in
addl
pop
adc
pop
push
pop
mov
add
adc
test
inc
inc
add
pushf
cmp
adc
shlb
pop
add
test
inc
pusha
inc
fmuls
addb
add
fs
add
sub
xchg
es
push
mov
cmp
or
cmp
mov
pop
jne
add
dec
fdivs
pop
mov
test
cld
add
ret
xor
inc
mov
push
sbb
in
jne
sbb
xor
pushf
rorl
fdivr
cmp
or
mov
sbb
sbb
pop
daa
out
iret
and
sbb
imul
mov
les
in
ja
dec
mov
mov
lods
push
in
icebp
push
mov
movsl
and
leave
hlt
jo
cmp
xor
jp
adc
sub
cmp
icebp
dec
out
fwait
dec
daa
popa
add
sbb
pusha
dec
xchg
pop
stos
outsl
mov
scas
enter
pop
sbb
jae
stc
sbb
jnp
mov
andl
add
rorl
xor
inc
sub
sbb
push
movsl
pusha
test
sub
clc
cmpsl
cld
pop
lea
test
mov
icebp
stc
push
test
cmp
cmp
in
push
inc
sar
and
sbb
mov
mov
out
adc
sbb
adc
add
or
cli
inc
push
or
imul
out
mov
lds
les
sub
xor
aam
addb
xchg
lret
les
or
sbb
mov
add
xor
inc
push
dec
or
fadds
add
or
mov
iret
xorb
sbb
pop
popa
ja
sbb
inc
xor
fldenv
pop
rolb
add
add
addb
sub
fidivrl
and
dec
sub
lcall
jmp
clc
xor
fmull
dec
test
int
mov
sbb
add
jns
shl
inc
pop
arpl
mov
inc
cli
fidivl
fsts
adc
gs
xchg
mov
pop
je
push
outsl
xor
lret
leave
xor
adc
loop
mov
sbb
adc
inc
pop
lret
movsb
jb
mov
lret
or
inc
sbb
inc
and
push
lret
or
and
add
push
in
sub
xchg
sbb
outsl
mov
or
push
jl
out
cltd
mov
xchg
rorb
fcoms
push
inc
sbb
sbb
xor
sbb
sbb
rol
pop
inc
repnz
sbb
and
push
mov
shll
mov
jb
adcb
movsb
ljmp
cmp
mov
push
mov
frstor
das
rclb
rcrb
mov
dec
dec
sahf
add
sbb
adc
sub
test
fisubl
pusha
int
in
sbb
repnz
push
and
inc
repz
int3
cmp
mov
sub
dec
or
jns
pop
xor
loopne
cmc
add
ret
iret
cmpsl
repz
mov
and
mov
mov
sub
out
add
movsl
push
xchg
inc
decb
ret
push
ja
orb
push
mov
out
lock
jge
dec
dec
js
sub
push
add
jo
adc
add
sbb
adc
orl
or
in
push
xor
add
repnz
test
push
push
shl
nop
icebp
xor
xor
push
aam
enter
movsb
mov
push
icebp
cmp
je
out
dec
push
inc
mov
or
cmp
testl
gs
test
add
cmp
mov
sti
xor
movsl
mov
loop
cmp
pop
js
lret
stos
push
imul
inc
loopne
sbb
dec
and
mov
xchg
push
sub
inc
ss
fldenv
jnp
push
add
or
lods
and
mov
shrb
orl
jb
in
inc
mov
or
add
add
int
dec
xor
sub
and
movsb
add
mov
dec
mov
mov
pop
or
sbb
out
push
cmp
sub
repnz
sub
sysenter
cmp
sbb
js
shll
mov
adc
fcomps
sub
cltd
insl
loopne
jns
in
call
rolb
lock
xchg
outsb
add
loope
mov
inc
cwtl
dec
mov
jns
xchg
cwtl
insl
enter
inc
push
mov
mov
enter
insl
mov
jae
jo
aam
sbb
add
and
xchg
sub
ja
ret
xor
mov
push
test
jnp
jo
mov
push
and
test
out
pushl
or
lods
push
stc
into
testl
movsb
mov
repz
inc
subb
in
lock
cld
mov
push
or
push
out
pop
ret
fs
fdivrs
and
fwait
push
loop
je
je
outsl
leave
test
vprotb
test
mov
dec
enter
jge
push
xlat
es
sub
push
les
push
push
insb
inc
and
mov
pusha
sub
sbb
divl
cmpsl
add
pop
aaa
xchg
lods
cmc
or
mov
sub
adc
inc
daa
and
and
xor
stos
sbb
dec
data16
pusha
pop
aas
outsl
pop
and
xor
push
call
jne
push
inc
enter
cmp
inc
fildl
lea
andl
jmp
and
jbe
stos
ljmp
jg
popa
and
push
pop
sbb
cmp
shrb
insl
xor
pusha
pop
je
jne
daa
sbb
cmp
or
orl
push
les
sbb
push
dec
inc
add
fsubp
pop
xchg
xchg
and
sub
mov
lds
push
or
mov
and
daa
clc
andb
cmpsl
or
push
mov
sub
sbb
xor
in
dec
xchg
xor
les
push
lea
enter
pop
sub
sub
jnp
push
loopne
mov
adc
push
dec
adc
adc
mov
push
hlt
scas
xchg
leave
mov
jo
xor
push
ret
stos
xor
jae
cs
add
aad
push
test
cmp
cmp
hlt
dec
add
das
fs
mov
cmp
pop
dec
xor
adc
sbb
push
sub
lea
test
inc
repz
lret
mov
add
sub
sub
bts
repnz
add
sbb
xor
aam
out
xor
xchg
push
xchg
pop
shl
dec
sbb
leave
adc
shrl
pop
sbb
mov
popa
sub
punpckhbw
inc
lods
add
cmp
outsb
fadd
mov
add
dec
test
leave
enter
shlb
mov
cmp
pop
cmp
aam
adc
push
aaa
pop
cltd
and
push
call
pop
shrl
xor
or
push
repz
outsb
jo
pop
push
fs
mov
cmp
xchg
cmp
sub
enter
ds
jle
cmpsl
sbb
test
cmpsl
js
mov
or
rcrl
inc
aas
add
in
sbb
xchg
and
push
xor
shlb
fs
insb
sbb
lods
les
rcrl
popa
aam
xchg
out
xchg
mov
add
nopl
xor
and
xchg
jl
insl
inc
fsubrs
mov
cmc
fwait
dec
push
adc
sbb
inc
dec
repnz
pop
pop
mov
push
and
pop
cmpb
xchg
mov
jns
add
or
mov
and
xor
sub
aad
test
add
jge
pop
add
cmp
lcall
sbb
xor
jmp
inc
sbb
adc
push
jo
jne
pop
in
or
inc
sub
xor
cmp
mov
adc
add
sub
and
push
dec
popa
cmpl
mov
inc
in
das
fwait
movsb
rol
popa
fisttpll
fwait
mov
xchg
bound
jb
sub
inc
dec
enter
add
xchg
mov
push
add
mov
cmc
sahf
andb
push
push
add
mov
add
jmp
adc
sbb
ret
dec
cmp
sub
mov
mov
mov
inc
inc
push
or
stos
push
xor
sub
mov
xor
pop
adc
outsb
pop
or
roll
ret
mov
test
jne
and
roll
inc
jae
aaa
add
cmp
adcl
push
add
push
pushl
aaa
pushl
aam
or
call
ds
stos
std
adc
xlat
inc
push
sub
xchg
push
lods
addr16
and
push
sbb
and
inc
arpl
jl
test
je
xchg
sub
adc
movsl
ficomps
adc
jns
inc
and
or
mov
adc
addr16
je
add
or
rclb
sbb
adc
rclb
das
lock
ja
rclb
pop
scas
mov
push
data16
and
push
leave
push
adcb
cmp
pop
pushl
xchg
pushl
bound
sub
sub
xor
fidivl
outsl
adc
stos
dec
jmp
add
dec
jb
test
int
jp
or
leave
adc
movsl
adc
rorb
xor
mov
xor
aam
arpl
and
call
mov
xchg
push
add
pusha
call
test
mov
sbb
push
call
dec
xorb
pusha
or
scas
in
loopne
sbb
pop
xor
jb
add
fcompl
xchg
mov
sbb
and
add
sub
sbb
sbb
sub
outsl
push
mov
adcl
push
mov
sbb
pop
jb
xchg
cmp
sub
mov
nop
fsubr
xor
pop
sbb
pop
pop
pop
or
push
jl
add
imul
insb
cmc
sub
ret
gs
dec
cmp
cmp
leave
push
jge
xchg
cwtl
lods
adc
mov
mov
jmp
jbe
out
xor
pusha
in
cwtl
jbe
pop
movsl
cltd
test
xorl
pop
and
repnz
add
mov
fidivrs
ret
inc
lret
dec
in
mov
cwtl
imul
or
sbb
cmp
scas
popa
sub
inc
and
cwtl
cwtl
xchg
mov
inc
cmpsb
jne
cmp
jns
pop
loopne
inc
add
jo
or
xor
inc
sub
shlb
pop
xor
leave
dec
sub
aaa
mov
cmp
std
cmp
adc
insl
mov
cwtl
test
enter
mov
cmp
fadd
test
cmp
in
and
sbb
add
or
and
sbb
dec
outsl
dec
and
xor
add
nop
sbbl
shrb
xor
mov
xlat
or
push
dec
jb
popf
cmp
mov
jo
or
and
cmpsl
adc
loop
mov
and
inc
dec
push
push
fcompl
aaa
cmp
loopne
mov
dec
adc
cmp
rolb
dec
xor
push
addl
dec
push
leave
mov
adc
sub
test
dec
mov
sub
sbb
lods
aaa
std
push
aaa
shrl
ret
push
lds
dec
in
fs
inc
mov
mov
push
sub
mov
daa
lock
gs
adc
shlb
dec
mov
xor
sub
or
loope
mov
sbb
inc
xor
cmp
loope
add
dec
lds
daa
mov
leave
dec
or
xor
rolb
inc
dec
dec
andl
and
xor
insl
and
mov
push
bound
inc
sub
pusha
or
aam
sbb
pop
dec
test
dec
dec
dec
imul
mov
test
fisubrs
rcrl
jne
mov
inc
sbb
sbb
gs
mov
dec
and
sahf
icebp
addr16
mov
jbe
aam
cs
shll
pop
mov
push
add
pop
push
fs
test
xchg
fwait
inc
lds
mov
inc
es
push
shll
or
lds
mov
js
jg
and
pop
test
push
lods
push
test
fwait
inc
aaa
das
movsl
dec
arpl
jnp
int
ja
pop
clc
jae
je
jns
jle
pop
enter
xor
ljmp
popl
push
xchg
add
push
push
inc
das
mov
sbb
push
shll
pop
iret
outsb
rorl
movsl
rclb
dec
rcrl
pop
push
push
add
stos
cld
rcll
outsl
push
dec
pop
int3
nop
mov
mov
adc
sbb
jno
scas
and
and
stc
aad
cmp
in
test
adc
loope
enter
inc
int3
sbb
ljmp
mov
popa
icebp
dec
test
es
xor
sbb
enter
and
sub
xchg
inc
xchg
aam
mov
cld
push
inc
cmpsl
jle
dec
das
insl
insb
sbb
cmp
jae
int3
push
mov
mov
cmpb
addl
test
jl
hlt
mov
pop
and
pop
add
sub
mov
jp
cmpsb
fs
adc
dec
push
lods
sub
adc
mov
ss
call
inc
adc
add
jae
aas
addl
add
movsb
stos
xchg
shlb
or
mov
insl
xor
and
or
lret
push
inc
pushf
sbbb
push
sbb
dec
inc
push
inc
jg
jmp
adc
cltd
lods
mov
ret
push
fmull
popl
dec
pusha
xor
sub
jle
push
pop
dec
imul
and
xchg
int3
push
fimuls
aaa
adc
loope
cmp
xchg
hlt
add
loopne
arpl
ljmp
sub
add
cmpsb
pusha
or
inc
je
add
sub
and
pop
popf
sbb
push
je
mov
mov
addb
pop
push
xchg
cmpb
xor
pusha
dec
stc
test
fildll
mov
bound
iret
push
add
nop
pop
imul
loope
add
jae
adc
pop
push
ror
js
mov
jbe
adc
jne
jns
sahf
lods
adc
int
xor
call
test
push
lods
sbb
add
or
imul
jl
jle
and
test
cmp
movsb
cmp
adc
shlb
inc
jg
push
je
xor
aaa
ss
mov
pop
jo
dec
jnp
lock
fdivl
fs
jmp
movsb
adc
mov
xor
adc
out
add
in
arpl
xchg
into
movl
lcall
xchg
mov
add
out
add
call
push
pop
jg
inc
push
mov
jbe
inc
inc
in
push
sbb
xchg
fildll
pop
sub
insb
jo
pop
adc
fildll
dec
sbb
fstps
mov
dec
imul
adc
and
sub
mov
lock
movl
push
out
xchg
push
lret
push
xchg
out
sub
push
fdivl
movsb
add
test
cmpl
fwait
xor
push
fistps
mov
mov
inc
insb
inc
inc
sub
cmp
or
mov
dec
jecxz
repnz
roll
pusha
and
movl
leave
sbb
push
push
push
mov
cmpb
xlat
mov
dec
insb
mull
dec
imull
push
sbb
lea
fiadds
and
add
dec
pop
int3
push
pop
inc
dec
and
cwtl
or
dec
dec
leave
sub
jae
fs
sbb
pop
add
and
lahf
addb
jo
cltd
sarl
shr
lds
push
andl
imul
sbb
movsl
sub
and
in
jo
or
ret
ret
inc
push
outsl
jp
lcall
sbbb
inc
push
test
les
rorb
test
les
rolb
or
js
dec
lret
or
mov
add
xlat
push
mov
jecxz
insl
mov
add
cld
push
popa
jo
xchg
mov
adc
aas
push
mov
pop
add
les
or
bound
jo
stos
dec
cmpsb
push
mov
and
add
or
adc
dec
or
daa
push
pop
add
sar
adc
mov
fildl
cmp
enter
insb
dec
test
lods
andb
or
jne
pop
push
cmp
insb
ss
dec
mov
xor
cmp
cmpb
or
or
or
jg
mov
fdivrl
je
cmp
je
icebp
mov
je
cmp
je
push
inc
cmp
add
imul
imul
jns
inc
hlt
jne
push
fidivrs
scas
mov
pop
pop
sbbl
nop
mov
loopne
adc
cmp
push
mov
stos
sbb
or
ret
aaa
mov
xchg
rolb
nop
test
xchg
add
stc
adc
push
add
xchg
test
add
pop
inc
push
call
in
xor
adc
jmp
cs
das
loopne
pop
mov
sub
add
les
rolb
jl
lea
sub
sbb
insb
icebp
daa
imul
mov
cmp
ret
jp
in
xchg
int3
sbb
jge
out
and
pop
or
dec
sub
push
add
mov
fninit
sbb
push
mov
aam
mov
push
push
stos
and
hlt
sub
pop
xchg
incb
je
cmp
movsb
rclb
or
or
push
daa
iret
sub
cld
rcrb
xor
xchg
sbb
out
push
adc
push
and
comiss
inc
xchg
pause
clc
ja
fs
and
sub
lock
inc
and
jns
adc
test
fcmovne
mov
inc
test
add
lock
jl
ret
cmp
test
test
jl
repz
shrb
subl
je
add
movsl
adc
ss
pop
xchg
push
bound
xchg
loope
sub
pop
jmp
imul
rol
dec
rolb
mov
test
xchg
cltd
add
inc
lcall
xor
hlt
and
loopne
hlt
rorl
mov
mov
jno
lods
xchg
andl
cmp
push
ss
and
add
insb
test
sub
xor
mov
push
jp
repz
jmp
in
pop
jo
mov
insl
psraw
xchg
gs
xchg
addl
cmc
add
orb
adc
lea
push
clc
addb
outsl
or
jmp
fildl
in
pop
mov
sub
les
in
test
xor
enter
subl
pop
pop
xor
mov
insl
cmp
je
push
adc
xor
adc
xchg
push
ret
stc
out
mov
inc
adc
sub
fwait
mov
mov
add
or
jo
push
insb
or
jbe
and
mov
lods
ret
mov
cs
fisubrs
push
es
push
jge
clc
xor
jno
cs
lock
testl
xor
fnstenv
and
sbb
add
inc
and
lahf
subb
inc
mov
and
or
mov
cmp
add
jl
push
andl
push
ret
add
pop
rcrl
jl
adc
cld
lea
xchg
outsb
mov
or
outsb
inc
cmp
sbb
movswl
or
inc
push
add
aad
inc
leave
pop
push
add
pusha
loopne
pop
leave
clc
popa
loop
adc
mov
jne
movsl
add
movsl
out
mov
adc
popa
shrb
loop
std
inc
pusha
xchg
dec
push
push
add
negb
cmpb
add
mov
sub
sub
addb
je
lahf
mov
sbb
sar
xchg
js
dec
cmc
clc
push
add
jo
and
jbe
rorb
jmp
sbb
inc
jb
mov
jb
and
mov
jne
movsl
jg
jne
cmp
jne
add
pop
cmp
mov
adc
mov
out
orb
push
adc
xchg
xchg
test
shrl
mov
mov
stc
or
in
mov
jle
adcl
cld
cli
or
pushl
aam
movsl
adc
mov
add
or
mov
lea
adc
adc
ljmp
sbb
int
pushl
or
or
jbe
adc
loope
or
adc
filds
push
movb
pop
adc
int
mov
or
push
adc
out
jno
call
add
pushl
xor
je
in
mov
leave
or
mov
lahf
fists
cmp
jb
cmp
fs
xchg
cmp
inc
jne
pop
sub
jo
or
jnp
xchg
mov
adc
pushf
jecxz
dec
push
shl
daa
inc
jge
test
movsb
jecxz
imul
addb
cmp
or
or
sbbl
jg
sub
mov
inc
push
pop
dec
xlat
dec
mov
mov
adc
xor
mov
add
push
ja
or
dec
cmp
xlat
or
adc
or
jne
dec
jmp
pop
xor
push
adc
sub
es
xchg
lds
sub
cwtl
js
std
les
rclb
add
mov
lods
mov
mov
push
xchg
dec
mov
stos
add
inc
rclb
mov
fst
sub
dec
cli
cmp
mov
push
add
push
xchg
in
and
and
in
push
pop
add
out
fdivs
jae
push
dec
aas
xchg
fsubl
cmp
sti
mov
lock
push
jmp
push
add
cmp
xor
push
push
pop
leave
mov
adc
jecxz
sbb
shll
mov
std
adcb
scas
rolb
jle
mov
dec
push
dec
mov
mov
sbb
gs
dec
mov
dec
dec
fadds
enter
sub
ret
add
xchg
in
out
xor
shll
push
push
inc
xor
mov
sbb
andl
mov
clc
aas
mov
test
out
into
test
mov
dec
pushf
push
sbb
add
add
test
imul
mov
mov
dec
mov
lret
push
mov
mov
test
add
enter
ds
xchg
loopne
cmp
push
mov
xchg
flds
or
and
jne
mov
mov
mov
sub
outsl
bound
and
imul
movsb
or
xor
jnp
addb
xor
push
cmp
mov
jg
aaa
lcall
bound
sbb
mov
mov
cmp
mov
fmull
push
scas
fidivl
jne
cmp
pushf
and
les
sbb
pop
sub
sbb
mov
mov
jo
loope
xor
or
mov
dec
orb
sbb
movsl
xor
mov
xor
jle
sub
inc
push
or
mov
inc
pushf
out
nop
and
jmp
cmpsb
mov
jl
add
xchg
xorb
loop
pop
mov
jns
and
sbb
mov
adc
pop
lds
jbe
mov
rclb
ret
mov
and
add
loopne
in
orb
inc
or
ds
jo
out
cmc
mov
mov
add
dec
jmp
cmp
aad
adc
inc
js
add
xor
sbb
push
js
adc
lock
adc
mov
push
js
lods
jae
loopne
push
push
and
mov
pop
jo
sbb
inc
fisubs
int3
sbb
pop
es
sbb
or
aad
popa
mov
pusha
cmp
dec
mov
cmp
or
sub
sub
stc
add
into
pop
out
mov
icebp
or
xor
pop
and
ss
das
icebp
aaa
mov
adc
inc
inc
inc
sbb
sbb
pop
xor
cmp
sbb
std
mov
push
mov
inc
pop
push
push
push
push
enter
mov
nop
add
mov
xor
pop
add
jne
push
cmp
or
pop
jmp
or
pusha
jmp
pop
cmp
es
test
je
xchg
jmp
pop
cmpsb
push
scas
jmp
stc
push
sbb
lock
pop
pop
outsl
jne
cmp
mov
dec
ljmp
add
push
or
sbb
sbb
cs
lea
test
cld
mov
fdivl
cmp
jne
lcall
popa
pop
mov
sbb
iret
sub
popf
fdivp
mov
je
shlb
push
sub
push
mov
loop
in
sbb
popf
push
leave
mov
and
add
push
in
xchg
mov
inc
and
pop
enter
fstpt
cmp
ja
pop
ret
lcall
or
pop
lods
push
push
push
aam
lock
jo
mov
xor
xor
sub
sbb
push
in
call
dec
sub
clc
push
out
data16
add
sub
jne
scas
pop
cmp
mov
or
inc
or
dec
mov
fs
sub
scas
inc
xchg
push
cld
fidivs
xor
adc
sub
jmp
inc
cmp
dec
pop
sbb
lods
mov
sbb
push
add
gs
and
call
mov
push
pushf
push
jecxz
sbb
outsb
mov
cs
subl
pop
gs
test
xor
mov
pop
sbb
add
sbb
xor
nop
idivl
sub
or
test
jns
test
pop
mov
cmpsb
inc
addr16
aaa
rcrl
jl
loopne
lea
dec
jmp
sbb
ror
mov
cmp
sbb
and
jmp
pop
int
push
pop
inc
sub
outsl
pop
add
in
mov
dec
pop
sbb
sub
cwtl
jno
sub
dec
adc
test
and
xor
dec
pop
inc
and
push
lea
push
or
pop
bound
out
adc
add
aad
mov
and
shll
lahf
inc
test
or
cmp
dec
cmpsb
dec
push
or
movsb
add
push
xchg
sbb
scas
dec
gs
loopne
aam
je
mov
and
push
movb
push
mov
into
mov
dec
or
adc
xchg
repnz
cmp
push
andl
jge
push
xchg
xchg
in
xor
mov
loop
sub
imul
push
loope
mov
lret
push
inc
fmull
cmp
xchg
hlt
mov
mov
push
mov
push
sbb
cmp
fidivl
jg
je
jne
sbb
and
jno
xlat
int3
fldcw
xor
push
xchg
jmp
sbb
out
xchg
cmp
pop
in
test
mov
add
fistps
xor
pop
dec
push
jle
lea
cmpb
inc
pop
fidivrl
nop
pop
repz
andl
incl
movb
push
mov
sub
cmp
and
sti
pop
jl
pop
je
cmc
inc
sub
mov
add
fdivl
mov
mov
sub
adc
nop
jecxz
movb
or
cmpsb
fdivrl
cmp
mov
ret
mov
imul
jae
inc
out
pusha
loope
cmp
cmp
push
pop
aad
jns
stos
push
sti
or
jp
pop
cmp
push
ret
test
popa
movsl
mov
test
hlt
fadds
xor
divl
mov
dec
or
cmp
adc
or
jmp
xchg
mov
repz
rorb
jb
jg
mov
pushl
sbb
inc
test
dec
dec
pop
rcrl
cvtpi2ps
in
and
test
push
sub
sti
mov
test
int3
repnz
inc
cmp
jb
pop
pop
ret
popa
sbb
ds
sbb
adc
pop
ret
mov
push
jne
jno
sub
mov
nop
xor
and
jmp
cmp
jne
xor
mov
aad
inc
lret
out
stos
push
mov
movsb
inc
inc
stc
mov
in
push
push
sbb
or
jnp
pop
push
inc
mov
cmp
movsl
test
inc
push
pop
xchg
shl
movsb
gs
clc
push
mov
or
lret
je
idivl
inc
cmp
outsb
pop
ret
sbb
dec
lret
mov
mov
inc
ds
mov
sbb
cmpl
jne
adc
push
pop
cmp
sbb
inc
push
in
or
testb
cmp
test
leave
pop
inc
insb
xchg
test
sbb
xor
mov
enter
mov
mov
pusha
adc
and
mov
nop
inc
mov
cmp
mov
test
nop
or
cltd
push
cmp
sub
and
inc
shrl
pop
mov
adc
ds
and
data16
mov
cmp
xor
sbb
adc
xor
or
and
sarb
inc
adc
or
repnz
jp
sbb
push
push
sbb
clc
adc
js
cmp
xchg
adcb
out
add
test
inc
mov
scas
fcoms
call
fnsave
mov
adc
adc
push
cld
push
add
push
or
inc
dec
lds
jne
dec
dec
push
loopne
ret
pop
pop
push
pop
rclb
jg
jl
cmp
xchg
sarl
add
mov
aam
add
hlt
cltd
rol
rclb
push
popa
es
mov
mov
jmp
mov
add
mov
and
xchg
sbb
scas
std
cwtl
fwait
rclb
push
test
pusha
ja
gs
iret
mov
sub
loopne
loop
test
fadds
mov
push
adc
add
inc
jg
scas
cmpsb
jnp
xor
or
sub
jb
pop
push
and
xchg
imul
or
mov
mov
insb
cvtps2pi
sahf
xor
or
push
sahf
adc
xchg
cwtl
mov
push
or
into
mov
in
jl
cmp
xlat
xchg
push
xchg
xchg
into
xor
dec
adc
cmp
addps
movsb
add
pop
int3
push
mull
loop
aaa
xchg
sbb
push
out
lea
cmp
inc
or
mov
imul
stos
push
sub
les
imul
orl
pusha
mov
cld
pop
ljmp
aas
mov
movzwl
test
je
ret
pop
rorb
mov
lret
or
enter
fwait
es
pop
push
mov
inc
mov
mov
xorb
xchg
push
cmpl
xor
jecxz
nopl
lock
ss
movsl
aad
push
mov
add
mov
adc
mov
rorl
pop
dec
mov
or
or
adcb
inc
scas
in
int3
test
mov
sub
pop
ret
push
inc
xchg
shlb
jl
push
or
xchg
adc
dec
and
sbb
lcall
jecxz
xor
sbb
test
sbb
pushf
jmp
pop
and
xchg
pop
mov
sbb
fcmovnb
jb
or
outsb
data16
mov
mov
add
mov
cmpsl
pop
mov
aam
hlt
xchg
and
mov
scas
xchg
aad
add
push
test
loopne
stc
in
pop
mov
in
pusha
pop
pop
dec
pop
cmp
je
js
sbb
sub
jge
mov
add
je
mov
mov
inc
xchg
add
jo
mov
rolb
pop
inc
loope
inc
fmuls
call
test
jbe
rclb
xor
add
or
jb
loope
mov
inc
jmp
adc
adc
es
movsl
in
ja
or
push
xor
popa
inc
imul
inc
loopne
add
add
aaa
enter
and
icebp
adc
cmpb
test
sbb
rcl
dec
stos
push
or
pop
das
pop
jb
xor
pop
in
mov
pop
in
xchg
pop
inc
and
cld
or
mov
push
inc
mov
rcrb
xor
frstor
ret
pop
push
push
into
add
out
fs
push
push
jg
cmp
stos
push
loopne
push
mov
imul
addr16
lock
jo
fistps
inc
or
inc
mov
xor
subl
je
mov
loopne
das
push
je
sub
mov
inc
sub
jo
rorl
cwtl
call
xor
dec
jb
mov
push
push
in
imul
hlt
cli
and
push
add
push
sbb
aad
nop
loop
inc
push
punpckldq
cmpl
pop
and
sbb
or
mov
and
xchg
lret
or
cmp
das
xchg
lock
sub
push
mov
cmp
mov
dec
add
inc
or
mov
cwtl
xchg
cmpsb
pushf
das
lods
push
pop
aaa
cwtl
adc
movsb
adc
repnz
push
mov
jb
fisttpll
mov
jg
pop
ss
pop
xchg
neg
sahf
adc
push
push
adc
mov
mov
lcall
push
les
push
adc
sbb
seto
ret
rorl
xchg
popf
adc
sub
int3
cmp
jnp
fst
or
push
rorl
nop
xor
dec
shrb
cmp
ds
push
push
fdivs
jmp
in
add
das
push
aam
jne
bound
adc
jle
dec
cmp
push
jl
mov
or
inc
xor
jne
xchg
add
je
add
xchg
add
idivb
mov
push
rol
push
cmpsb
sub
or
negb
push
pop
push
mov
jmp
cmp
movsl
jno
mov
push
test
je
je
inc
and
ret
enter
jae
andl
jbe
pop
pop
clc
fcompl
loop
cld
and
pop
push
mov
xchg
adcl
push
imul
insb
cld
loopne
sbb
adc
jo
cltd
fisubrl
je
pop
inc
push
xor
in
add
jns
data16
jmp
mov
push
xchg
add
mov
fsubrl
dec
or
shlb
clc
insb
bound
adc
sub
xchg
jbe
scas
test
jo
faddl
or
addb
add
movsb
pop
dec
xchg
cmc
cmp
lcallw
adcb
inc
sbb
sub
mov
add
nop
rorl
imul
lahf
ret
xor
enter
mov
test
mov
adc
add
push
data16
jbe
dec
loopne
outsb
mov
hlt
sbb
call
out
inc
adc
sbb
inc
inc
aam
push
lea
out
pusha
push
adc
push
xchg
outsb
dec
cmpsl
in
pop
inc
adc
cmp
movsb
add
addb
sub
sbb
sub
aam
dec
or
stc
sbb
sbb
mov
pop
and
xchg
sub
ds
loopne
lock
addr16
jnp
jne
fucom
xor
lods
pop
in
outsl
ja
mov
sub
mov
sbb
cmp
jb
push
sbb
enter
rcl
mov
and
cltd
mov
push
inc
loop
insb
mov
push
mov
inc
icebp
jae
lock
push
mov
and
push
cmp
xor
cmp
jg
mov
sbb
pusha
sub
sbb
and
add
cli
jg
push
cmp
or
fldcw
sub
bound
mov
mov
jne
pop
xchg
push
in
add
push
ret
cmp
jmp
mov
sbb
push
icebp
aad
push
imul
add
subb
test
stos
push
in
pusha
call
push
push
add
inc
lods
sub
popf
sub
dec
mov
insb
lock
push
adc
mov
xor
addr16
xchg
or
mov
test
pushf
jmp
andb
xor
mov
gs
xchg
or
mov
loopne
pop
fs
jmp
xchg
jns
movsb
or
imul
pusha
in
insb
xor
por
add
dec
sub
test
add
popf
jmp
jmp
popa
add
xchg
mov
add
xor
call
mov
test
pop
shrb
or
mov
mov
mov
adc
movb
imull
out
js
aam
push
mov
je
adc
dec
inc
or
jae
add
pop
sahf
out
push
jae
arpl
push
repnz
push
je
inc
or
pop
sahf
ja
push
or
and
jle
cmp
pop
inc
cli
sbb
push
sub
hlt
push
add
lea
ret
and
push
dec
mov
adcb
fidivs
cmp
orb
test
popf
mov
push
xor
push
subb
or
nop
xor
cmp
enter
faddp
or
add
sub
cmp
movb
lahf
popf
xchg
jmp
fs
shlb
fidivs
call
adc
push
push
mov
xchg
xchg
inc
add
dec
cwtl
cli
pop
es
push
add
mov
pop
and
fucom
sbb
push
sub
push
push
ds
fstpl
and
push
rclb
push
jae
sbb
pop
clc
sbb
mov
inc
cmpsl
mov
stc
pop
and
jne
jne
sbb
lea
mov
into
cmpb
outsb
and
loope
rolb
pop
leave
add
add
filds
mov
lret
ss
aam
popa
mov
xchg
incb
mov
dec
fstpl
faddl
jl
sub
inc
mov
les
lods
jns
jbe
adc
inc
and
add
cmp
xor
rcll
push
dec
jo
js
mov
rorb
fsubr
mov
and
cmpsb
cwtl
test
or
shrb
inc
mov
inc
int3
ss
data16
test
inc
mov
in
sbb
dec
inc
and
pop
or
mov
adcb
int
adc
pop
loopne
add
test
sbb
pushl
int3
loope
sub
push
enter
fadds
sbb
enter
jo
orb
push
enter
and
jbe
push
pop
ret
pusha
xchg
jns
repz
ret
jg
add
in
adcb
cli
xchg
ficoms
clc
adc
and
cmp
jne
pop
push
xor
sbb
shrl
dec
xchg
push
jne
jne
adc
test
inc
push
insl
scas
xor
pop
bound
pop
mov
xor
in
dec
adc
in
xchg
int3
fbstp
jmp
cmp
sbb
mov
iret
jo
jne
outsl
push
xor
sbb
ror
add
adc
test
lcall
jg
cli
push
ja
out
lock
clc
jne
mov
jb
mov
add
push
inc
xor
fcmovnb
jmp
push
cmp
dec
mov
pop
add
or
xor
cmc
pop
ret
outsl
clc
add
push
mov
mov
rcll
mov
xor
dec
xorl
sbb
xor
cmp
rol
ljmp
shl
ret
mov
or
test
push
jnp
xchg
pop
jne
lea
add
popa
vmovshdup
jne
adc
pop
mov
fmul
notb
push
clc
out
test
xlat
andl
fbstp
cmp
mov
add
add
outsb
lahf
scas
add
or
in
andl
cltd
in
cmp
das
add
iret
sbb
stc
or
push
ljmp
clc
imul
add
nop
fcmovnbe
cmp
fnstenv
rolb
mov
stc
push
adc
lock
xchg
and
sbb
loopne
push
sub
je
icebp
jne
stc
mov
pop
xor
ja
fcomps
xchg
ss
inc
lahf
push
sbbl
mov
fsts
jmp
add
and
and
test
js
sarb
testb
or
adc
rcl
cmp
xor
nop
sub
push
mov
jne
lret
in
loopne
pusha
clc
mov
adc
jg
loop
jmp
cmp
cld
scas
or
jmp
adc
dec
sbb
movsb
roll
mov
pop
dec
popa
mov
dec
or
fiaddl
std
inc
or
dec
jno
push
dec
loop
xor
dec
add
add
jae
pop
or
xor
pop
rol
jmp
push
fwait
outsb
dec
jg
icebp
mov
movsb
pop
stos
test
popa
sar
rolb
sub
lods
pop
pop
or
jne
rclb
xchg
je
pusha
push
mov
nopl
mov
test
push
scas
jo
gs
push
and
sbb
rorb
enter
loopne
dec
xor
xor
push
inc
xorl
ror
mov
sbb
lods
outsl
mov
pcmpgtw
mov
xor
insb
enter
insb
push
test
movsb
add
xchg
mov
sbb
mov
xchg
jg
pop
into
out
cmp
divb
xchg
hlt
xchg
mov
inc
mov
cmp
out
lock
je
xor
lds
push
lock
push
sub
add
pop
xchg
jmp
lea
and
mov
sub
push
add
lock
mov
lock
in
in
lock
cmpsl
test
dec
jmp
xchg
push
push
into
ja
insl
adc
mov
sub
push
dec
ss
push
pop
out
dec
mov
jbe
ret
xchg
test
into
add
push
mov
cld
cmpsb
mov
std
lea
in
and
sbb
mov
loop
inc
xchg
lock
cmp
dec
cli
leave
inc
sahf
shlb
jo,pt
sbb
mov
cmp
or
push
inc
sub
add
fidivs
and
ja
or
orl
test
je
test
ljmp
sbb
push
add
fisubs
adc
testb
jle
ret
push
bound
sbb
adc
push
test
inc
add
jo
popa
mov
xchg
or
mov
and
sbb
cs
or
popa
push
pop
mov
adc
cmp
daa
fstl
fs
fsubs
xlat
push
cld
test
or
data16
fistl
fidivrs
pop
inc
lods
sub
push
test
sub
mov
loopne
je
sbb
mov
cmp
popw
out
out
push
and
dec
push
lea
push
jo
dec
loope
add
lea
lods
sub
lret
push
or
mov
add
sbb
lods
add
adc
es
cltd
push
pushf
outsl
fcoms
jo
mov
jb
out
loope
push
popa
mov
adcb
ret
and
sub
sub
aam
loop
add
jns
adc
lea
pop
mov
push
pusha
xchg
ficomps
test
fmul
inc
icebp
inc
jmp
std
mov
mov
arpl
push
pop
cmp
hlt
adc
add
loopne
inc
dec
inc
push
pop
jne
leave
sbb
sbb
pop
loopne
or
pushf
lods
andl
adc
paddsw
test
jge
sbb
jg
adc
test
sbb
fisubs
or
adc
adc
jp
jo
or
pusha
pop
cmp
inc
incl
or
lods
subl
mov
adc
enter
fcompl
in
inc
push
add
xchg
xor
pop
into
jecxz
js
adc
in
int3
clc
mov
cmp
push
jmp
leave
fnstsw
push
sub
loopne
xchg
lret
loope
adc
movsb
and
lea
lret
or
inc
adc
enter
jecxz
jb
outsb
jp
mov
add
ja
sahf
scas
add
mov
jecxz
add
pcmpgtw
mov
mov
jecxz
shlb
sub
mov
jo
lret
gs
pop
xchg
es
dec
sbb
mov
lods
mov
xor
lds
mov
lcall
fcoms
rolb
aam
sbb
adc
loopne
es
out
jo
push
cli
shrl
push
xchg
sahf
inc
xor
insl
cmp
push
xchg
popa
cwtl
bound
shrb
push
dec
popa
inc
and
mov
jmp
inc
cmp
mov
jne
test
aaa
rolb
and
cmp
movsb
lds
mov
xchg
mov
adc
cmpsb
jnp
inc
int
popf
daa
jae
pop
sahf
xchg
imul
push
inc
lcall
or
test
rcrb
inc
aam
adc
cmp
mov
aas
aam
pop
lea
push
push
nopl
xlat
mov
adc
cs
insl
loop
icebp
push
add
push
sbb
hlt
mov
dec
cs
xor
dec
or
jp
dec
sub
sbb
sub
adc
inc
js
sbb
inc
sub
imul
add
mov
adc
lds
add
and
cmp
cmp
or
mov
dec
sbb
xchg
jmp
pusha
lods
add
faddp
sbbb
add
cli
or
push
sbb
xor
inc
add
add
mov
mov
cmp
data16
adc
sbb
lods
mov
mov
and
and
int
or
sbb
call
dec
mov
adc
popf
imul
inc
pop
cmp
rdmsr
shrb
stc
dec
stos
fstpl
stos
push
sbb
dec
ret
lods
inc
mov
shr
and
xor
sub
aad
mov
shrb
pop
mov
outsb
ja
push
sub
dec
cltd
or
xor
push
xor
push
or
jo
push
add
push
and
dec
xchg
mov
or
mov
rclb
push
lock
push
lret
jecxz
push
or
xchg
pop
cwtl
fbld
out
test
sub
fld
pavgb
add
ficompl
rclb
es
and
cmp
inc
je
pushf
adc
lock
cmp
orb
inc
and
push
jb
and
push
adc
sbbb
dec
popa
pushf
sbbl
inc
inc
inc
lcall
insb
xor
and
sahf
pop
inc
xchg
dec
cwtl
adc
js
loop
jecxz
push
or
add
inc
jo
ficompl
push
gs
pop
sub
push
pop
stos
lahf
adc
inc
lea
sbb
lock
and
in
adc
dec
push
inc
das
shrl
inc
push
xchg
cmpsb
mov
mov
pop
pop
pop
jge
inc
ret
inc
idivb
jb
add
and
add
mov
jl
andl
adc
jl
orb
cmp
and
cwtl
scas
mov
add
or
shlb
push
xchg
xor
and
xor
jbe
jno
pop
sahf
push
xchg
dec
outsb
mov
mov
adc
push
lea
or
xor
cmp
ljmp
dec
stos
cltd
xor
lods
test
inc
mov
fmul
test
mov
push
mov
fidivs
adc
jl
dec
cmp
xchg
push
adc
push
mov
adc
or
jmp
jmp
xor
jecxz
add
lock
fmuls
adc
pop
cmp
jbe
inc
push
inc
adc
inc
movsb
mov
nop
push
aad
add
add
sarb
jmp
out
jmp
pop
shll
mov
pop
push
outsl
push
adc
or
or
je
incb
adc
or
mov
cmp
jne
fisubrs
sub
dec
mov
imul
pop
fiadds
testb
mov
add
xchg
jge
mov
and
adc
and
addb
add
or
xlat
push
sbb
call
xor
push
push
mov
push
fsubl
push
mov
mov
aam
loopne
lret
movsb
mov
lahf
sbb
test
shlb
add
addl
jp
jo
jbe
add
and
cmp
or
cmp
aaa
add
test
add
jp
xor
ret
sub
push
push
test
and
shlb
sti
push
cmp
rol
filds
aam
cld
mov
sbb
lods
cmp
jne
push
pop
std
add
outsb
and
popa
imul
jno
sbb
cmp
push
loope
jp
xchg
and
rcll
addl
mov
lea
les
inc
fs
lea
fmul
lods
ret
ret
mov
mov
pushw
pushf
xchg
inc
xlat
adc
push
aam
mov
push
and
mov
loopne
test
inc
cmp
xchg
orl
mov
push
sbb
rorl
mov
push
pop
andb
lock
mov
ret
jmp
or
or
int3
popf
rcrl
xchg
fwait
jmp
nop
push
push
lea
loopne
push
mov
subb
negl
cwtl
xchg
es
mov
sub
fistl
test
les
push
jnp
out
push
xor
and
mov
negl
nop
dec
in
ds
les
xor
addr16
test
inc
pop
xor
inc
push
mov
xchg
lret
sbb
subb
outsl
mov
lods
push
addl
inc
xchg
add
jnp
xchg
std
gs
out
gs
dec
push
mov
test
incb
daa
add
ret
or
fildl
pushl
rcl
lods
or
or
cvttps2pi
test
add
xchg
sbb
push
add
and
sti
push
test
or
mov
aam
incl
lods
shrb
mov
push
mov
dec
dec
sub
pushf
scas
add
ljmp
outsl
cmp
jbe
pop
clc
xor
loope
loope
cmp
xchg
sub
idivb
ret
mov
mov
pop
lret
pop
mov
or
jae
pop
or
push
int3
push
push
mov
lahf
mov
mov
sub
jle
dec
insb
das
jbe
and
pop
mov
data16
negl
outsb
sub
mov
dec
insb
add
js
pop
add
test
into
add
nop
mov
adc
sbb
movsb
addr16
jge
adc
sbb
xchg
fisubrs
cmpb
cmp
cmp
and
imul
add
and
bndstx
rclb
mov
andb
sbb
xchg
mov
ss
push
pop
and
aas
scas
dec
dec
mov
cmp
xor
jae
pop
fstpt
lea
push
cld
and
test
rolb
repz
cli
jge
movl
shr
inc
add
ja
sti
and
push
fmuls
loope
add
cmp
pusha
sbb
xchg
pop
ret
sbb
stos
ds
insl
jp
insb
std
stos
sbb
mov
aam
jnp
rcll
xlat
out
xlat
and
int
adc
push
and
scas
arpl
xor
fsubrl
dec
pop
add
mov
sbb
insb
aas
xor
push
lock
popf
repnz
pop
adc
xor
hlt
lret
xchg
jne
testl
and
mov
add
jge
mov
iret
cmp
mul
je
lcall
mov
dec
sub
in
js
or
int
pushf
adc
js
dec
push
rolb
push
sbb
xor
add
bound
and
xlat
jbe
xor
add
loope
pop
out
adcl
adc
jbe
in
pop
jmp
sbb
sbb
movsl
add
sub
aas
inc
sbb
push
cmpb
test
ja
mov
repnz
add
add
inc
jne
cmp
cmp
je
add
inc
push
ss
sub
pop
dec
sub
addb
push
adc
sub
add
sub
gs
add
hlt
push
pop
inc
mov
lea
cmp
mov
mov
sub
xor
repnz
jbe
lods
jno
icebp
xchg
es
dec
inc
jbe
jo
rorl
dec
mov
sub
add
xchg
cmp
mov
jg
xchg
sub
jo
dec
in
push
xchg
mov
in
scas
rcll
or
cmp
cmp
mov
popf
aaa
dec
pop
loope
adc
pop
and
adc
inc
mov
xor
fnsave
or
adc
pop
sbb
call
gs
test
test
mov
movnti
insl
mov
test
mov
pop
and
mov
xchg
xor
dec
int3
call
add
push
in
ss
mov
ret
adc
push
adc
push
push
adc
jge
push
int3
pusha
xor
rorl
popf
pop
fs
or
or
mov
ret
orb
sub
xchg
lea
std
adc
push
cmp
mov
mov
insb
aad
xchg
mov
dec
mov
cmp
pop
push
pop
scas
lock
xchg
lods
mov
sub
in
loopne
pop
testl
cmp
cmp
xor
adc
jl
ret
and
test
or
dec
or
dec
sbb
mov
xor
jnp
xchg
pop
sub
pop
aaa
sbb
cmp
xor
cmp
cmc
jle
jmp
or
test
popa
dec
sbb
mov
jbe
into
jl
sbb
or
pushf
test
mov
leave
xorl
xchg
shl
inc
test
sbb
sub
add
mov
jle
xor
or
aaa
push
add
xor
pusha
xchg
test
xor
jae
lret
mov
and
add
cmp
loope
fmuls
in
or
or
push
mov
repnz
jo
push
mov
fmul
jbe
xchg
jl
movl
xor
aas
add
lcall
inc
xor
dec
in
lods
imul
jne
rcll
in
dec
push
or
sbb
or
pop
aas
inc
stos
xor
mov
sbb
out
mov
jae
add
int
cmpl
mov
push
rcrb
adc
sub
sbb
inc
and
fisubrl
lods
push
jns
lods
xlat
add
testl
mov
sub
enter
aaa
adc
xchg
jge
imul
sub
sbb
aaa
mov
xchg
cmp
pop
cltd
pop
pop
stos
sub
push
sbb
xor
jmp
sub
rclb
or
push
xor
xchg
mov
inc
push
push
dec
mov
adc
or
xor
add
mov
imul
lahf
dec
les
jge
in
cmp
add
testb
dec
add
ret
testb
cmp
in
addb
test
pop
and
imul
jae
mov
sbbb
jne
ret
outsl
mov
ret
mov
ja
out
aaa
mov
je
or
je
or
sub
xchg
adc
adc
rcrb
add
xchg
or
or
add
test
sbb
and
jnp
jl
loope
mov
sti
sbb
pusha
push
adc
adc
xchg
xor
inc
xchg
add
inc
sbb
int
sub
jno
xchg
jo
sub
dec
cwtl
hlt
mov
call
cmp
push
loopne
mov
insl
loope
pop
ret
and
popa
test
cmp
adc
je
rclb
push
dec
je
lcall
fs
int
nop
xorl
loope
rcrb
adc
and
lea
add
in
movl
push
lds
or
inc
sbb
add
mov
mov
sub
inc
add
dec
je
sub
add
movsb
add
push
adc
or
push
lea
je
nop
adc
push
int3
xor
sub
je
ss
daa
or
push
add
xchg
adc
inc
xchg
outsl
cmpsb
push
nop
inc
mov
sti
lret
aas
ds
ljmp
mov
cmp
gs
decb
movl
push
ljmp
insb
xchg
ret
or
mov
xchg
emms
sub
sarb
addl
pop
mov
sbb
in
dec
ret
adc
fdivrl
notl
popa
add
push
call
in
or
inc
das
and
push
and
and
adc
inc
push
push
push
push
in
push
add
aam
call
sbb
cmp
xor
loopne
push
cmpsl
pop
inc
cmp
fdiv
cmp
fdiv
das
xor
push
push
adc
in
and
xchg
mov
inc
xchg
add
cmp
pop
dec
sub
cmp
movb
in
roll
mul
mov
xchg
xchg
cmp
and
scas
adc
adc
lds
inc
addb
or
fwait
out
les
jp
adc
mov
adc
nop
inc
es
fmul
xchg
mov
xchg
push
xor
sub
add
cmp
push
xor
ret
rorb
rol
push
xchg
movsl
dec
push
cs
pop
fdivrs
repz
sbb
repz
lcall
adc
icebp
mov
out
jns
and
fisubl
xor
dec
push
pop
subb
loopne
jo
xchg
ror
cmpsb
ja
mov
xchg
imul
fs
xchg
xchg
add
aam
push
jb
add
fmul
xor
sbb
push
movsl
or
rcll
clc
lods
mov
aas
or
push
xlat
cmpsl
jnp
test
sbb
repnz
insb
xchg
and
dec
lcall
sarl
rorb
arpl
or
and
mov
fidivrl
add
sbb
mov
jl
js
sbb
ja
fstpt
sbb
leave
mov
mov
pop
or
xor
jb
fisubl
mov
mov
cld
sbb
sbb
rcrb
xchg
dec
xchg
movsb
adc
std
and
mov
adc
cmc
xor
add
mov
ret
xor
movsb
popf
das
xchg
or
jmp
jle
adc
mov
or
push
push
ret
roll
push
inc
daa
ds
dec
hlt
enter
out
push
push
sub
scas
adc
les
mov
xor
les
and
push
or
mov
les
jo
call
daa
aaa
pop
inc
out
push
xor
inc
enter
stos
mov
inc
push
jne
add
or
addr16
and
jbe
dec
in
sub
dec
sbb
sub
add
sub
cwtl
mov
fadds
inc
pop
push
jo
sub
loopne
mov
daa
subb
adc
and
xchg
inc
andl
pop
in
fsubl
mov
ja
movl
add
or
in
out
mov
adc
and
jmp
call
cmp
inc
std
inc
scas
xor
mov
pop
xor
push
mov
mov
popa
or
xorl
push
cmp
loopne
pusha
ficoms
push
add
imul
loopne
push
xor
cld
push
mov
or
insb
inc
xor
clc
mov
gs
incl
sub
cmpl
dec
mov
daa
xor
xor
mov
nop
add
push
fdivrs
xchg
ds
dec
and
sbb
scas
push
mov
in
and
lahf
mov
and
hlt
add
pop
ficomps
test
mov
push
inc
nop
std
mov
sbb
ja
neg
sbb
mov
loopne
adc
pop
pushf
lahf
push
add
pop
nopl
pusha
shrb
cmpb
pop
jp
push
xor
dec
cmpsl
lahf
mov
pop
fimull
cmp
dec
mov
or
leave
add
mov
in
mov
mov
xchg
ds
mov
sbb
push
jp
into
das
in
jl
mov
jno
daa
sub
mov
adc
and
push
movsl
add
cmp
xchg
dec
shl
add
or
push
inc
pop
rcrb
sti
je
mov
push
sub
push
lahf
xchg
sub
out
subl
je
push
sbb
jp
pop
jo
inc
and
lock
xor
push
scas
mov
jbe
lods
movsb
dec
sbb
inc
lds
les
add
pop
inc
fcmovnu
ljmp
mov
das
sbb
call
je
or
push
pop
push
push
push
inc
pop
js
je
mov
mov
movsb
rol
mov
out
cmp
jl
sbb
xchg
cmp
mov
lock
push
inc
enter
mov
cmp
mov
movsb
mov
sti
mov
sbb
mov
js
sbb
mov
pop
adc
and
lret
js
dec
pop
xor
sub
fnstcw
jnp
enter
cmpsl
imul
push
add
mov
add
clc
and
adc
lret
mov
hlt
jle
vcmpsd
dec
xor
jge
inc
mov
jne
cmp
sbb
test
mov
sbb
pop
divb
lea
pop
pop
sbb
push
lahf
dec
adc
movsb
mov
push
sbb
mov
adc
xchg
jge
loopne
and
mov
pusha
cmpsb
ss
adc
stc
mov
sbb
mov
stos
or
jns
sahf
popa
xlat
out
pop
ficomps
pop
xor
rorl
int3
mov
xor
aaa
stos
sbb
sbb
pop
or
xchg
mov
es
xchg
insl
adc
hlt
je
jo
push
xchg
js
cltd
jecxz
and
stc
mov
lahf
add
push
adcb
cltd
jmp
push
shll
add
adc
outsb
movsl
cli
pushaw
je
inc
adc
push
adc
mov
push
fs
adc
mov
fwait
add
iret
clc
dec
add
sti
and
add
or
dec
dec
insb
dec
hlt
add
pop
je
or
push
cmp
pop
or
and
jp
pop
mov
stos
je
lods
adc
push
mov
xor
mov
lret
test
lret
push
sub
cs
mov
leave
call
mov
or
xchg
out
add
xchg
mov
dec
mov
adc
sub
pop
movb
pop
ret
cli
push
fiaddl
add
dec
push
call
cld
hlt
adc
and
cltd
lock
adc
lea
inc
insb
mov
add
or
in
out
and
enter
inc
outsb
cvtps2pi
or
mov
push
sbb
mov
push
and
or
push
addr16
stc
lds
dec
aam
add
add
push
sar
mov
xchg
add
mov
sahf
mov
fsubr
dec
or
je
adc
ja
test
push
aas
xor
mov
sbb
push
dec
popa
lds
xchg
fnstcw
add
push
and
xchg
out
lret
and
cmp
int3
push
and
sub
add
xchg
sub
in
lret
push
sub
pop
push
inc
sub
jg
xchg
add
xchg
mov
mov
jns
ljmp
or
inc
push
push
sub
and
mov
lea
xor
ror
xor
dec
xchg
inc
mov
pop
sbb
push
inc
scas
xchg
cmp
mov
jecxz
sahf
push
rolb
lahf
push
cmpsb
sbb
enter
sbb
mov
inc
inc
xchg
mov
jns
aam
push
push
cs
inc
add
dec
mov
inc
in
push
fs
dec
xchg
hlt
xor
push
in
dec
add
jmp
daa
xor
sti
pcmpeqd
mov
push
dec
mov
rolb
mov
daa
stc
fimull
popa
and
nop
jae
lcall
leave
cmpsl
dec
push
mov
mov
add
cmp
sub
add
mov
mov
dec
sub
jne
push
movsl
dec
inc
loopne
inc
outsb
iret
add
je
scas
add
mov
insb
imul
add
cs
and
push
adc
dec
test
inc
adc
arpl
add
or
inc
jnp
movsl
mov
mov
and
adc
subl
lods
add
mov
mov
dec
jmp
pusha
add
xchg
subb
int3
jp
lea
hlt
adc
loope
cltd
outsb
add
test
loopne
mov
pop
repnz
add
sbb
bound
jb
add
push
inc
or
inc
or
add
pop
add
jp
and
mov
mov
daa
push
ljmp
jns
push
jl
cmp
jae
mov
dec
mov
push
shl
pop
cmp
jne
add
adc
pop
lds
pop
adc
jo
dec
shlb
scas
outsb
mov
ret
jmp
clc
pop
lret
stos
push
jge
sbb
jo
loopne
pop
push
add
aaa
movsl
sbb
adcl
dec
sub
sbb
or
add
call
sahf
or
mov
xchg
jge
pop
rcrb
cmp
and
xor
pop
fiadds
add
jmp
xchg
sysexit
stos
add
xor
aam
adc
in
mov
hlt
subb
or
push
jle
fisubrl
jge
jecxz
fildl
push
add
sub
shlb
repnz
mov
push
andl
push
xor
adcl
in
push
push
pop
push
fsubl
enter
mov
les
enter
push
stos
jae
fs
imul
iret
dec
ja
jne
dec
addl
andl
dec
int
mov
push
dec
push
insb
call
push
pushf
sub
aad
test
fdivrl
lock
jns
mov
lock
jge
push
loope
cmp
lds
scas
mov
mov
std
fadds
test
mov
cmp
jbe
sar
rol
xor
leave
push
xor
inc
in
push
aas
lret
push
add
and
cmpsb
push
xor
dec
mov
jno
fstpt
divl
inc
mov
push
lock
lock
push
or
sbbb
dec
pop
sbb
mov
jne
repnz
cld
adc
push
and
push
and
int
push
or
push
and
mov
ret
jle
or
jne
test
lds
test
lea
add
mov
jae
sub
or
lock
push
push
sahf
shlb
enter
xor
inc
sbb
xchg
hlt
into
aaa
jbe
mov
mov
mov
lea
sbb
sub
in
push
adcb
add
mov
push
scas
nop
and
push
sbb
push
sbb
xchg
inc
xchg
or
mov
mov
or
add
sbb
push
xchg
inc
popl
rolb
fdivrl
xchg
dec
inc
mov
incl
aas
ja
push
insb
dec
push
push
pop
dec
cli
add
add
je
mov
pop
arpl
sbbb
dec
jb
scas
push
stos
je
push
pop
cli
repnz
cmp
and
testl
inc
adc
adc
lret
push
jmp
sbb
or
scas
jo
sub
or
jmp
cmc
or
cmp
xchg
js
push
fdivs
andl
iret
sub
sbb
mov
jno
xchg
fiadds
iret
filds
movsl
dec
xor
cmp
or
into
in
xchg
cld
movsl
or
adc
or
pop
add
mov
fadd
jge
jo
dec
je
jno
lea
mov
lret
pop
push
cmpsl
push
inc
adc
push
lods
or
int
mov
fs
or
data16
es
mov
xor
add
push
adc
inc
ds
pop
pop
ffree
sub
or
mov
repz
or
xor
inc
nop
rcll
dec
lcall
pop
pushaw
pop
pop
ret
mov
in
imul
enter
dec
sbb
imul
mov
and
and
popa
mov
scas
and
add
in
pop
fcoms
push
out
push
filds
ja
scas
add
push
and
or
fdivrl
mov
leave
lret
out
and
iret
adc
sub
inc
imul
icebp
push
pop
dec
or
in
add
lea
cmp
add
js
adc
and
inc
or
fcomps
imul
xchg
lcall
sbb
aaa
add
mov
xchg
and
data16
out
xor
pop
mov
pop
xchg
xorb
pop
xchg
or
sbbl
mov
cltd
sbb
dec
sbb
rcr
mov
ret
pop
rorb
pusha
dec
adc
leave
inc
insl
js
lods
dec
rcl
add
xchg
or
add
xor
mov
mov
jbe
loope
adc
mov
mov
xor
sub
in
push
jp
sub
pop
dec
mov
lcall
fwait
jg
add
xchg
ret
add
insl
mov
or
rolb
push
sbb
fmuls
jmp
jg
add
lock
xor
inc
and
sbb
add
add
and
shr
std
ja
outsb
pop
js
imul
sbb
mov
ljmp
cld
lock
call
jo
sub
mov
cmpsl
js
in
inc
xchg
pop
iret
inc
and
jbe
sub
lea
loope
pop
add
push
xor
cmp
sbb
jb
add
insb
and
aaa
mov
rcrb
sub
jmp
adc
lcall
push
and
inc
test
or
in
dec
mov
fadd
mov
dec
movsl
mov
push
xor
sub
sub
lea
jne
and
jmp
in
shrb
popf
xchg
roll
shl
push
leave
xor
sbb
mov
or
sbb
push
popl
mov
sbb
lret
inc
push
pop
adc
sti
jl
test
adc
cmp
adc
addl
sub
mov
cmpsl
and
push
or
mov
out
movd
mov
shr
not
pushf
push
rol
pop
xor
aas
push
sbb
cwtl
pop
out
out
add
push
rcrl
xor
push
xor
push
sbbl
or
test
inc
push
or
je
or
pop
pop
push
mov
mov
test
les
pop
pop
pop
inc
fmuls
dec
dec
sub
addb
pop
push
sbb
cmpb
cmp
pop
movl
jmp
add
jecxz
lods
push
addb
imul
mov
leave
add
decl
or
lods
mov
or
xlat
pop
aaa
xor
push
lods
fiadds
daa
sub
xor
ljmp
adc
pusha
mov
mov
sarb
jb
sbb
dec
sub
icebp
pop
or
fsubrp
xor
push
push
inc
add
inc
scas
inc
imul
sub
push
or
xchg
jae
subb
movb
repnz
inc
sub
mov
jle
add
xor
loopne
rclb
andb
shrl
or
js
sub
popa
cmp
out
aad
cmp
push
sbb
mov
dec
xor
cmp
cmp
pop
testb
and
add
fs
push
dec
cmp
adc
mov
xor
out
sub
sub
mov
mov
or
adc
xchg
mov
jb
cwtl
fsubr
outsl
imul
bound
ficompl
or
adc
jmp
sub
jnp
js
pushl
add
and
xchg
orb
sbb
fildll
mov
mov
adc
rcr
push
int3
mov
ja
jae
push
push
mov
ret
push
and
push
mov
fcoml
pop
adc
push
pop
data16
inc
sub
mov
mov
cmp
or
in
pop
cmp
inc
mov
xor
dec
xor
btr
xor
fiaddl
test
xchg
mov
mov
ljmp
sub
call
test
and
andl
popa
inc
cs
push
sub
mov
mov
add
push
das
and
add
mov
inc
cs
insb
jge
test
or
add
jmp
adc
adc
cs
sarl
repz
and
cld
push
pop
shrb
or
xchg
push
inc
ds
lds
lcall
adc
pop
mov
shl
jle
mov
pop
test
jge
inc
inc
or
add
lret
loop
add
das
pop
mov
push
push
push
sub
call
push
inc
sbb
dec
adc
fsts
or
mov
adc
add
push
pushf
rclb
jbe
jg
push
orb
mov
dec
ljmp
mov
test
inc
cwtl
mov
lods
stos
adc
loope
ljmp
mov
enter
and
inc
sbb
cli
cmpsl
fcomps
push
xlat
mov
adc
arpl
insl
xor
and
add
pop
int3
add
inc
fcmove
fs
pop
inc
add
or
and
sarb
dec
inc
popa
pop
imul
lods
ret
add
bound
lock
pop
incb
roll
mov
sub
or
add
pop
mov
jmp
popa
xor
and
je
mov
fbstp
testl
jo
pop
cltd
push
shr
in
or
and
xor
icebp
jl
ret
fs
jb
push
scas
test
add
push
mov
xor
jno
jo
dec
mov
call
aad
cltd
adc
leave
adc
rorb
add
jle
jae
xor
sbb
adc
int3
adc
add
fadd
add
sbb
pop
nop
es
test
or
ss
std
testb
jbe
mov
and
add
movsl
jo
jle
int3
pushf
lret
pandn
pusha
scas
daa
movsb
loope
insl
push
adc
xor
or
cmpl
add
adc
aam
xchg
cltd
push
rcll
add
push
or
outsb
and
dec
or
xor
out
adc
push
lret
sar
cmp
jbe
or
add
jmp
and
lret
or
inc
pusha
in
inc
ret
xor
add
jecxz
addl
push
aam
jp
repz
mov
add
cmp
aam
xor
movsb
fiaddl
xchg
rorb
fiadds
add
lock
xorb
lea
mov
fdivp
mov
mov
sti
daa
add
test
inc
out
movsl
jbe
sbb
inc
cmp
js
inc
jl
pop
in
mov
pusha
lea
jmp
data16
dec
sahf
jno
jns
push
pop
or
incl
xchg
sub
pop
sbb
inc
mov
sbb
cmp
inc
mov
repnz
and
xor
rolb
call
sbb
dec
push
sbb
or
adc
clc
call
or
cmc
enter
shlb
pushf
xor
pop
adc
push
ret
loope
jmp
dec
ss
rcrl
arpl
dec
add
jne
sub
outsb
sar
jbe
shlb
mov
and
mov
sub
aad
jae
jb
pushl
and
pop
mov
pop
or
iret
add
clc
jae
cltd
sub
adc
jmp
and
jp
rorb
adc
test
adc
icebp
cmc
dec
xchg
add
out
push
test
mov
repz
mul
xchg
daa
mov
mov
sub
insb
lods
movsl
out
xor
adc
sbb
inc
and
inc
xchg
jmp
pop
sbb
xor
loopne
movsl
push
xor
lahf
ret
inc
jb
sbb
xor
jb
pmulhuw
pop
leave
push
sbb
insb
and
movsb
stos
je
lock
daa
or
and
fsts
lret
sub
and
cmp
mov
adc
or
adc
mov
int3
push
arpl
dec
or
and
addr16
insl
add
and
in
dec
or
mov
and
xchg
sbb
cmp
shll
xorb
xchg
outsb
and
mov
inc
add
in
jle
cmp
sub
addb
or
jo
or
jns
add
inc
cmpsb
js
out
add
cmp
and
inc
repnz
add
pop
xor
or
push
imul
ljmp
cmpsb
push
shrb
sub
ss
push
test
mov
and
test
and
and
xchg
pusha
and
and
and
sbb
xchg
int3
sub
daa
and
inc
push
nop
sub
nop
inc
push
sub
inc
pushf
or
in
add
jmp
push
push
add
inc
push
leave
sub
or
xor
or
js
cmp
pop
mov
mov
jmp
lea
jmp
jb
xchg
cld
sub
or
pusha
push
or
and
push
add
jl
ja
repnz
adc
lea
add
sbb
pop
adc
ss
mov
rolb
mov
cmpb
in
or
adc
inc
adc
sbb
xchg
aaa
lcall
sub
dec
dec
dec
popa
push
or
lret
repz
cs
pop
adc
lea
add
xor
subb
pushf
mov
mov
or
sbb
inc
mov
jg
push
add
mov
push
inc
popa
lock
dec
imul
sbb
adc
jl
notl
int3
adc
or
dec
jmp
sarl
sbbb
pusha
lret
movsl
mov
xlat
and
and
dec
mov
fsts
push
xor
xchg
sbb
rolb
pushw
lds
push
add
js
rolb
pop
mov
mov
cld
mov
repnz
stos
xchg
or
icebp
push
and
add
subl
imul
lock
test
or
clc
popf
or
add
sbb
jo
stos
lods
loope
mov
jne
push
cltd
inc
int
jae
es
sbb
and
inc
jp
jae
adc
es
sbb
js
es
mov
and
xor
inc
mov
sysexit
loop
sbb
stc
gs
ja
jne
andl
lock
je
daa
add
and
mov
sbb
sbb
rcrl
push
je
sbb
sbb
adc
adc
sbb
loop
and
mov
mov
sbb
shrl
pop
pop
xor
mov
movsb
inc
push
add
pop
xchg
adc
dec
jmp
cmp
xchg
inc
cmc
dec
movl
pop
or
sub
mov
sub
clc
pop
lock
orl
icebp
incb
shrb
das
sti
lea
pop
neg
xor
arpl
jl
and
sub
ltr
pop
test
push
enter
data16
or
adcl
cmp
dec
daa
arpl
jp
push
dec
sbb
inc
cmp
dec
inc
je
cmp
inc
repnz
pusha
add
push
testb
add
jne
push
pop
or
insb
xor
arpl
and
ret
loopw
push
das
or
fadds
or
or
adc
xchg
shrb
in
mov
sbb
lret
bound
mov
mov
push
adc
sub
adc
inc
mov
call
pop
inc
popa
call
mov
rclb
add
hlt
sub
and
cld
fadds
in
adc
or
mov
push
push
test
xor
ds
mov
stos
or
inc
testb
lods
mov
fstp
cld
lock
fmull
pop
xchg
call
test
stos
and
and
add
lock
push
jge
adc
outsl
inc
subb
insl
mull
push
lock
sbb
andl
sbb
inc
and
add
and
sbb
and
decl
loope
pusha
push
mov
cmp
jl
cmp
jle
cmp
push
outsb
and
cld
jp
or
pop
pop
cmp
test
aad
mov
inc
cmpsb
cmp
sahf
cmp
jge
mov
pop
in
out
xchg
and
cmp
jl
je,pn
cmp
je
and
sub
mov
lods
sbb
mov
push
xchg
adcb
lea
insb
subl
pop
jmp
add
adcb
loop,pt
testl
sub
sbbb
cmc
mov
inc
inc
pop
inc
mov
pop
push
pop
adc
popa
or
adc
into
clc
add
pop
mov
add
clc
add
inc
or
in
add
cmp
mov
xor
cmc
push
shrb
testl
jp
lock
xor
lock
rorb
mov
cmp
mov
mov
mov
loopne
es
dec
popf
dec
inc
cmpsb
dec
mov
sbb
adc
pop
shlb
and
out
or
cmp
pop
or
mov
in
mov
ss
mov
into
loopne
mov
faddp
in
es
pop
mov
orb
inc
sub
add
cld
xchg
rcrl
pop
or
and
aaa
push
add
or
sub
add
cs
mov
pop
popa
jge
xorl
sbb
or
cld
xor
dec
push
mov
inc
rcl
mov
push
test
ss
cmp
and
test
cmp
repz
lcall
inc
inc
loope
pop
in
jl
pop
insb
lea
sub
sbb
mov
data16
mov
popf
mov
and
das
adc
sub
sbb
inc
inc
xor
add
pop
adc
sbb
or
push
pop
pop
and
pusha
sbb
gs
jge
js
and
cmp
lea
pop
mov
mov
lea
sub
sub
xor
cmp
sub
icebp
dec
and
push
out
inc
pop
inc
add
and
bound
jne
jo
or
xchg
in
push
adc
push
movl
cld
je
or
mov
jns
and
loopne
adc
iret
test
sub
jno
push
inc
pop
test
fstl
mov
sub
push
sub
jne
nop
pop
rclb
inc
and
ret
sbbb
inc
jle
fnsave
and
or
sbb
outsl
xchg
push
mov
les
sbb
flds
mov
and
pop
lods
movsb
adc
fstpl
bound
or
jo
xchg
in
jmp
outsl
por
inc
xchg
or
nop
and
add
add
or
and
add
fwait
adc
mov
mov
jmp
inc
icebp
icebp
mov
jl
fucomi
mov
mov
cmp
cli
test
mov
adcl
test
dec
in
jecxz
cld
xchg
xor
or
and
add
cld
or
sub
loope
pop
sbb
dec
mov
add
xchg
or
mov
dec
cmc
fwait
mov
rorb
adc
xor
jo
mov
xchg
and
sahf
andl
fsubrl
pushf
popa
mov
mov
leave
outsb
pop
loopne
or
mov
clc
and
daa
je
insl
sbb
lret
adc
and
sub
pop
push
pop
push
inc
add
mov
incb
jmp
mov
adc
daa
je
mov
and
jle
daa
add
je
push
jle
cmp
mov
and
inc
xchg
mov
jl
xchg
mov
shll
jne
push
repnz
test
lret
mov
add
cmp
cmp
xor
xorb
mov
and
xlat
insb
and
or
insb
add
xor
and
fadds
sub
icebp
mov
push
decl
xor
pop
fimull
es
enter
adc
loopne
and
adc
xchg
addb
dec
ds
or
mov
fcomps
imul
and
add
data16
ds
nop
xchg
mov
inc
popl
call
filds
sbb
add
jle
into
push
mov
ret
inc
sub
mov
rcl
sbb
fs
data16
cmp
sti
lds
xchg
push
sub
push
add
push
xchg
sbb
cs
pop
leave
push
mov
jl
sub
das
mov
push
hlt
jg
mov
sub
mov
mov
xor
stos
sub
jmp
adc
push
jns
ret
orps
push
sub
data16
xor
dec
popl
pop
repnz
repz
or
sub
lea
mov
lret
pop
ret
cmpb
mov
adc
cmp
adc
or
push
or
add
pushf
and
and
adc
shrl
or
or
pop
mov
inc
adc
repnz
mov
mov
adc
movsb
add
dec
dec
and
add
add
or
add
addb
jl
push
pop
xchg
aam
sti
insb
or
lods
xchg
lcall
cmpsl
lret
pop
mov
cmp
mov
in
add
mov
or
jmp
int3
jecxz
sub
imul
enter
ret
jmp
outsb
jno
dec
pushf
arpl
add
fnsave
or
pushf
hlt
inc
add
push
adcb
mov
lret
xor
js
mov
int
lods
mov
repnz
lea
popa
sbb
ds
mov
or
push
mov
aaa
push
push
adc
dec
cmpl
fst
out
jmp
in
or
pop
push
icebp
lea
push
jnp
cmp
pushl
test
xchg
and
in
cs
push
inc
sbb
and
jae
test
je
jbe
sbb
daa
sub
pop
es
xchg
xchg
in
nop
push
in
push
lods
clc
pop
sbb
add
dec
inc
xor
nop
pop
mull
inc
and
sub
and
mov
loopne
push
fdivrs
test
pop
je
frstor
aas
push
fstpl
dec
in
subb
push
cmp
insl
adc
adc
jne
push
divb
jns
sahf
lahf
or
jne
or
jne
or
add
cld
loope
or
hlt
fldz
lret
andl
mov
inc
cmp
sahf
stos
dec
call
pop
mov
mov
push
test
fisttps
mov
mov
mov
or
aam
arpl
je
jo
test
lea
fstl
jecxz
fadd
rolb
mov
adc
decl
push
xlat
add
and
sbb
rorb
sub
sbb
xor
lahf
dec
push
stos
push
add
inc
mov
jl
call
mov
fdivl
jbe
mov
inc
and
cmc
rol
sbb
testl
mov
mov
movsl
pxor
fisubs
lcall
xor
inc
rolb
dec
sub
ljmp
rol
loope
lds
pusha
fmull
push
push
lods
and
mov
cmp
jle
xchg
insl
lods
fcomps
jbe
push
imul
fisubrs
xor
nop
sbb
sbb
les
cmp
lock
mov
pop
insl
scas
inc
mov
add
push
ret
push
and
ja
add
add
push
sbb
notl
or
enter
add
mov
push
pusha
and
add
pop
loopne
lret
adc
xor
xor
and
push
mov
add
adc
outsl
jno
xor
jbe
std
push
stos
adc
pop
push
arpl
ja
aaa
push
mov
sub
imul
ret
add
int3
test
cmp
insb
inc
inc
imul
lods
leave
add
cmp
ja
enter
push
lea
cmpb
enter
jno
add
sbb
jno
add
and
xor
or
in
enter
pop
loope
inc
jo
nop
xchg
inc
leave
fmull
int3
or
rorb
ret
dec
jmp
arpl
xor
fmuls
enter
or
fs
loopne
fdivs
fucom
imul
out
mov
dec
mov
shlb
cmpsb
pop
push
mov
fs
dec
mov
adc
sub
xchg
movsb
hlt
and
sub
add
jecxz
mov
xor
xor
push
dec
leave
xchg
dec
mov
inc
add
out
push
mov
xchg
ja
testl
cmp
out
jge
push
and
cld
call
push
mov
pop
and
cmp
jne
lcall
sub
mov
inc
mov
push
mov
icebp
add
mov
cmpsb
ljmp
lods
adc
xor
and
add
mov
cmp
xor
je
pop
add
lock
lock
xchg
cmp
jp
inc
int3
push
inc
xor
add
adc
or
add
fldt
add
lgdtl
push
mov
add
pandn
add
jns
aad
push
push
rorb
xchg
cli
or
pop
cmp
mov
and
push
aas
gs
daa
or
adc
dec
les
xor
pop
ljmp
adc
or
jmp
or
push
rcrl
das
imul
test
xchg
pop
fcompl
add
roll
gs
leave
or
cli
dec
mov
sub
xchg
mov
push
call
mov
sub
push
xor
or
or
loop
pop
shld
mov
inc
fnstsw
das
insl
dec
add
out
cltd
jne
add
mov
xor
jnp
imul
mov
or
fsubrp
mov
sub
xchg
xchg
xchg
inc
add
mov
cmp
fildll
fnstenv
fdivrl
in
and
dec
rcl
xor
cwtl
dec
out
cmp
call
xor
sbb
push
add
and
inc
ljmp
xchg
dec
sbbl
jg
in
in
sbb
pop
sub
popf
pop
out
jns
xchg
xor
cmp
push
es
cmp
pop
dec
add
sbb
inc
stos
adc
sbbl
pusha
and
fwait
dec
test
movsl
mov
ja
pop
mov
loop
in
sarb
enter
add
filds
aam
xchg
xchg
pop
je
sbb
adc
into
mov
movsb
orb
jo
fcoms
xchg
cmp
push
pop
sbb
xchg
or
mov
mov
xchg
ljmp
xchg
sarb
lea
jmp
movsb
push
or
sarb
mov
xchg
jo
xor
cmp
aaa
dec
clc
pop
inc
dec
fcoml
les
push
sub
jmp
add
je
mov
pushf
xchg
mov
cmc
notl
stos
loopne
fstps
je
mov
icebp
sbb
xlat
out
pop
jb
loopne
in
xor
add
xor
jp
pop
adcb
push
mov
mov
fs
mov
mov
push
push
pop
or
jns
fdivl
inc
sbb
sbb
xor
popf
push
mov
push
mov
popa
add
scas
inc
xchg
aam
mov
push
jle
mov
bound
adc
add
test
jnp
xchg
dec
movsb
andb
add
movsl
pop
mov
push
mov
and
mov
insl
sub
and
xor
movsl
jecxz
bound
xor
push
nop
xor
push
sbbb
mov
pusha
xchg
movsb
cmp
adc
pop
add
add
inc
mov
aam
mov
adc
in
je
or
cmp
lock
lock
shrb
cmp
xor
cld
or
les
or
cltd
sbb
movsb
dec
mov
inc
adc
pop
ljmp
add
jg
mov
addl
add
cs
out
mov
fwait
xchg
sub
add
pop
jb
popa
mov
mov
lods
jns
ss
aad
aam
cltd
enter
xor
and
inc
add
je
inc
rolb
or
mov
fwait
dec
cs
push
ret
lret
test
ret
and
mov
jecxz
shlb
lock
cld
jmp
maxps
adcl
pusha
add
outsb
mov
xor
sub
add
bts
add
aaa
cmpsl
out
add
push
inc
add
jle
lea
add
mov
arpl
jmp
dec
call
andl
xor
das
push
or
jl
jp
lock
or
lret
jecxz
lock
popf
sbb
add
ret
dec
dec
jle
mov
push
add
jne
stos
xchg
test
adc
mov
xor
push
adc
and
sarb
or
movsb
dec
gs
test
add
xor
es
jo
mov
int3
insl
sub
stos
pop
xchg
movsb
inc
adc
inc
bndstx
mov
sti
push
cwtl
test
mov
je
and
xlat
xor
pop
push
icebp
call
test
bound
dec
push
insl
adc
movsl
jp
shrl
jg
mov
add
sub
add
fidivs
mov
jbe
add
xor
mov
ljmp
add
jne
xchg
loopne
xorb
divl
xchg
cmp
sbb
aam
jg
dec
jae
cli
cmp
push
into
adc
and
and
bound
addr16
jne
inc
ret
jnp
jecxz
xor
popa
pop
pop
sbb
add
pop
inc
pop
scas
pop
mov
adc
add
shrl
rcll
sti
sahf
and
xor
or
inc
cld
jle
cld
add
in
add
daa
sbb
pop
ds
or
add
sub
mov
cltd
sbb
aas
and
push
push
ds
mov
mov
and
gs
jmp
fldt
xchg
cmpsb
clc
or
pushl
sbb
addl
or
and
addb
xor
shr
add
loope
push
add
jnp
inc
add
xor
mov
push
andl
xchg
fisttpl
lds
add
sub
push
test
or
es
sti
pusha
inc
push
or
sub
mov
scas
or
les
push
cmp
dec
imul
sbb
cmp
push
pushf
pop
pop
add
pusha
lods
or
inc
or
dec
push
pop
enter
fimull
add
and
xchg
add
sub
xchg
or
or
leave
adc
and
or
inc
push
inc
in
mov
mov
sub
mov
pop
sub
mov
divl
mov
test
add
lock
lcall
lods
push
xchg
and
sub
and
sbb
cmc
sbb
rcll
dec
loopne
or
shll
push
adcb
sti
xor
push
pop
gs
icebp
or
and
sub
hlt
clc
and
popa
cmp
aaa
and
dec
loopne
lods
popa
and
mov
cmc
pop
mov
arpl
sub
neg
add
adc
dec
aad
addb
jns
sub
mov
xor
push
mov
adc
mov
xchg
addr16
and
and
insb
add
daa
imul
test
inc
cmpsb
enter
pop
pop
dec
jo
pop
cli
jle
push
bound
lcall
in
fiaddl
lret
sbb
insb
imul
xchg
cmp
push
or
in
jo
push
sub
ficompl
or
leave
inc
push
mov
popa
adc
pop
inc
sbb
dec
sub
test
dec
mov
sbbl
pop
jge
sub
add
les
imulb
cmove
jo
fwait
imul
stc
inc
sub
out
jnp
xchg
hlt
aam
in
and
in
jo
inc
add
inc
movsb
sarl
add
test
sub
rorl
sub
mov
loopne
add
insb
mov
push
mov
ret
sub
or
adc
in
sbb
dec
sub
test
testb
sbb
lds
std
jle
rolb
int3
xchg
jo
and
pushf
add
mov
push
fldenv
fisttpl
pop
sbb
int3
jne
mov
and
xchg
mov
pop
xchg
dec
or
dec
loopne
and
pop
xchg
add
les
int3
mov
ljmp
rolb
fnstcw
popf
leave
inc
ds
push
adc
add
bound
push
fildll
add
dec
lds
mov
jg
mov
push
hlt
jb
add
xchg
cmpsl
or
jp
pop
test
mov
inc
in
cmp
js
xor
ret
ja
push
adc
cmp
lahf
sti
std
push
push
mov
lock
xchg
out
inc
mov
pusha
xor
in
add
xchg
les
nop
aam
imul
cmpb
rclb
sub
xor
cld
lock
or
mov
and
mov
add
or
or
lods
cli
inc
insb
inc
inc
in
jne
aam
inc
ret
xchg
repz
cmp
jae
insl
lret
pop
add
out
outsb
and
push
inc
lods
jmp
jp
push
push
sbb
xchg
fstl
ret
pslld
add
loopne
add
icebp
cmp
push
inc
das
clc
shl
jbe
add
cmp
adc
push
jmp
shll
test
xchg
ret
dec
test
cs
cld
in
jp
lods
dec
lods
dec
int3
dec
cld
adc
adc
test
push
les
push
inc
repz
and
pusha
push
sub
test
mov
xchg
push
es
add
push
and
jnp
fdivs
into
and
pop
mov
notb
adc
inc
cmp
insl
add
push
mov
imul
inc
cmpb
adc
sbb
std
inc
shlb
out
rclb
int
mov
add
rorl
jmp
imul
or
bound
mov
mov
mov
mov
and
int3
jle
cltd
jp
cmp
je
cmp
sub
add
sub
push
inc
mov
add
loopne
decb
push
mov
std
mov
jmp
jne
jmp
fnstsw
push
pop
fdivl
test
je
and
jp
fsubs
scas
mov
roll
xchg
sbb
inc
xchg
dec
push
aam
xchg
aas
and
into
bound
fistps
fsubrl
push
xor
fldcw
or
out
out
cmp
add
adc
or
fsub
pop
fsubrp
stos
nop
xor
into
or
jo
call
loopne
lods
jg
add
fldlg2
icebp
and
xor
push
shrb
xchg
insl
and
add
outsl
sub
subl
aaa
add
lea
or
xor
mov
jmp
add
xchg
ss
jae
cmp
push
sbb
loope
adc
movsl
adc
bound
push
jne
and
or
add
push
or
sub
push
dec
sub
inc
lcall
int
rcll
push
xchg
push
cmp
sub
push
ja
or
or
and
jnp
pop
aaa
in
nop/reserved
xor
lea
sub
clc
inc
sbb
lcall
push
dec
xor
jle
mov
xor
cmpsb
and
mov
enter
repnz
movsb
sahf
xor
enter
mov
ror
sub
push
in
push
cmp
cld
lret
add
adc
call
or
in
repnz
xor
and
sbb
roll
orb
mov
insb
cs
lock
sub
push
jecxz
or
pop
mov
cmp
ret
mov
bnd
xor
xor
inc
idivl
add
cmp
pop
loop
mov
pop
jns
or
gs
and
push
adc
popa
das
xchg
lret
push
xor
ret
insb
or
jns
jl
cmp
cmp
lahf
mov
or
xchg
mov
popa
das
loope
dec
les
sbb
xchg
fmuls
push
push
xchg
inc
hlt
mov
inc
rcrb
iret
inc
std
sbb
and
lret
and
push
mov
scas
sbb
push
inc
popf
add
das
xchg
in
rclb
js
pop
add
jns
sbb
mov
shrl
test
pop
adc
push
je
cltd
add
orps
ja
fwait
cmp
sbb
jns
xlat
adc
push
dec
pop
outsb
jg
out
sahf
nop
mov
cmp
repz
pop
sbb
push
popa
repz
repz
xchg
movsl
mov
repz
fsubr
cli
or
out
sahf
sbb
ds
pusha
jno
sahf
out
adcb
sahf
out
call
xchg
mov
cmp
mov
mov
mov
inc
sub
das
aad
xorl
push
push
and
xor
mov
insb
add
xor
dec
add
ds
jne
pop
add
scas
adcl
mov
adc
sbb
adc
push
sub
xchg
mov
mov
sbbb
das
sti
dec
arpl
repnz
fcmove
add
addb
jne
pop
xor
cld
dec
ja
add
cmp
clc
lds
cs
sbb
add
leave
xor
lahf
add
mov
sub
pop
sarl
jb
xchg
leave
ds
js
lods
movsb
inc
ret
xor
roll
pop
aaa
sub
adc
in
push
sbbl
nop
subl
adcl
push
mov
cmp
arpl
push
orl
adc
and
shr
or
sub
mov
sbb
dec
pop
inc
rclb
push
cmp
adc
popa
enter
imul
add
add
or
aam
sub
aaa
jmp
dec
scas
in
add
int
fnstcw
sbb
and
mov
pop
movsl
add
jns
rcrl
push
mov
enter
sbb
jle
cltd
mov
leave
sub
pop
push
popf
dec
add
and
inc
cmpb
add
cld
ss
sbb
cmpb
loopne
adc
xchg
in
pop
loopne
push
sbb
cmpsl
and
fcmovnbe
push
ret
add
add
test
inc
jle
fadds
aam
xchg
in
imul
pop
loope
ret
push
or
ror
add
adc
or
mov
xchg
in
mov
xchg
rcll
sbb
sbb
or
xor
push
dec
das
cltd
movsl
fiaddl
xor
add
or
adc
inc
ret
sub
mov
enter
lea
in
sbb
push
or
xor
or
xchg
xchg
sbb
or
sbb
cld
les
jne
shl
pop
shl
xchg
push
cltd
mov
jp
aaa
push
fs
lds
ja
in
test
cmp
cwtl
cmp
lods
sub
jge
mov
sbb
in
sarl
pop
cmp
fldenv
adc
jmp
push
pop
and
pop
dec
mov
adc
int
dec
shrb
xchg
fisttpll
cmpsl
sbb
push
jg
mov
sbb
les
sbb
popf
test
adc
push
stos
ret
mov
or
xor
mov
movl
leave
lock
imul
sub
mov
cmp
add
cltd
mov
lods
and
arpl
dec
insl
and
adc
cmpsl
xchg
fistps
inc
test
sbb
mov
add
inc
push
aaa
and
push
test
mov
movups
push
lea
push
loope
pop
lea
mov
or
inc
or
je
into
dec
add
lahf
pop
aaa
mov
sbb
or
xchg
fcmovnu
fidivl
insb
or
xor
test
jb
pop
aam
sbb
lods
lea
xor
dec
adc
ret
pusha
sbb
flds
seto
add
stos
aam
inc
inc
mov
xchg
and
pusha
ja
jmp
push
add
mov
pop
add
mov
inc
and
jb
mov
mov
add
iret
add
xor
cmp
fisubrs
aad
and
inc
movsl
daa
std
xlat
push
inc
xchg
call
or
pop
subl
or
add
push
inc
pop
addr16
add
add
or
pop
sbb
xchg
sub
mov
dec
sbb
jecxz
js
and
mov
adc
add
test
sbb
pop
sbbb
and
into
addb
lods
nop
jl
mov
xchg
xor
lret
or
adc
mov
or
sbb
stos
ret
movsb
sub
xorl
add
add
add
aad
push
adc
sub
adc
test
sub
scas
and
pop
icebp
adc
and
pop
out
mov
or
push
dec
mov
jno
sete
sub
inc
popa
ret
shrl
aaa
fldcw
sub
add
add
nop
mov
xchg
xchg
add
mov
or
mov
add
subb
sbb
mov
imul
or
mov
xchg
push
jnp
popf
test
push
sub
cmp
and
jge
lods
inc
loope
pop
jbe
inc
pop
cmpsl
inc
push
pop
mov
mov
mov
mov
mov
push
cwtl
inc
jne
mov
and
adc
aaa
addb
mov
add
xchg
ja
jge
inc
or
pop
pop
je
jge
orb
xchg
cmp
out
inc
add
or
add
cs
dec
cltd
dec
or
sub
or
mov
xchg
push
ficoml
fcmovbe
pop
adc
add
sub
int3
inc
mov
sub
sar
jne
mov
bound
push
imul
movsb
aad
and
inc
xor
push
sarb
or
inc
adc
roll
shrb
cmp
jne
xor
outsb
into
inc
arpl
sub
test
add
mov
jmp
push
inc
inc
fmul
xchg
lock
fmull
fstl
lea
rclb
mov
xor
repnz
out
xor
or
and
jp
ret
pop
add
dec
sbb
dec
xor
adc
cmp
mov
push
sarb
or
dec
push
xor
inc
sbb
jp
add
adc
xchg
jge
cmp
ja
pop
xor
push
jg
jnp
adc
jno
lods
mov
push
insb
andb
push
jns
sbb
pop
scas
inc
test
mov
cmp
jne
mov
popa
stos
repnz
pop
fwait
std
dec
add
and
sbb
xchg
in
push
mov
sub
fwait
adc
cmp
mov
hlt
dec
add
pop
loopne
inc
movsl
and
push
xchg
ret
movl
sbb
roll
loopne
and
cwtl
lret
or
add
and
jmp
bswap
mov
loopne
fistpl
and
dec
xchg
sbb
cmp
or
push
add
add
imul
adc
push
or
lods
sbb
lcall
test
sub
rolb
sbb
mov
mov
add
nop
push
adcl
loopne
dec
stos
std
scas
push
xlat
cmp
lret
sti
sbb
adc
and
or
in
pop
jle
sbb
es
ret
or
adc
jl
xor
jmp
cmp
jl
or
pop
imul
cmp
cmp
xchg
lock
std
je
mov
mov
push
add
inc
jmp
movb
mov
adc
mov
cltd
idiv
sub
mov
in
ljmp
jno
in
push
and
lods
xchg
mov
cmp
cmp
orl
jg
push
movsl
pusha
mov
push
fstl
jo
dec
fcmovb
test
pop
repnz
cmp
cmp
in
add
dec
call
dec
in
mov
push
in
in
in
cmpsl
sarb
xchg
call
sbb
popf
and
pop
daa
fcmove
cmp
mov
imul
cmp
daa
cmp
push
fmull
pop
push
push
push
lock
lret
ficomps
push
inc
enter
cmpsb
inc
cmp
out
in
and
mov
aas
add
jnp
inc
jl
jns
les
fwait
inc
sbb
or
xchg
test
dec
repnz
xor
add
or
jne
lock
enter
loope
clc
sub
enter
jo
xorl
pop
xchg
lahf
sub
push
mov
mov
mov
adc
push
and
xor
pxor
fcoms
adc
lock
pushf
jmp
fwait
or
pop
shlb
lods
adc
sub
cmp
dec
adc
movsl
pop
sub
pop
cmc
dec
jb
or
sbb
js
xor
add
xchg
sub
mov
adc
std
repnz
out
pop
jns
repz
pop
push
push
cmpsl
add
adc
mov
stc
sbb
sarl
jae
mov
add
out
ds
jae
out
das
out
imul
nop
sbb
div
leave
dec
nop
push
fsubrs
mov
ja
leave
enter
dec
aam
repz
dec
cwtl
and
push
daa
filds
pusha
lret
daa
and
shlb
fs
ret
mov
inc
rolb
out
and
hlt
sub
data16
pop
or
jle
imul
push
mov
add
xchg
lret
lret
adc
daa
dec
movsb
pop
mov
cltd
in
jno
sub
adc
pop
sub
and
cltd
in
inc
mov
pusha
cwtl
dec
loopne
cmp
rolb
pop
xor
cltd
sbb
js
xor
cmp
jo
xchg
dec
cmpsb
pop
lods
adc
cltd
fs
mov
and
lock
xor
imul
sbb
int3
sub
mov
rorb
sub
or
imul
and
dec
movsb
scas
jno
idivb
or
decl
add
jo
xor
sub
int3
jge
cmp
xor
dec
pop
xor
loopne
inc
add
stc
push
mov
pop
dec
or
out
int3
in
movsb
cld
add
fcompl
movl
loope
ret
push
insb
fildl
cmp
jecxz
out
or
jg
mov
push
mov
push
pop
das
xor
xor
pop
hlt
out
stc
rorb
pusha
add
inc
ljmp
jl
mov
pushf
add
jbe
push
aas
xchg
or
xchg
pop
push
xchg
or
int3
xlat
xor
sbb
insb
movsl
fucomip
push
arpl
lret
dec
or
aam
fimuls
push
out
insl
or
or
sbb
sbb
mov
dec
cmp
push
xor
sbb
imul
add
pop
mov
iret
jle
xor
lret
test
decl
mov
mov
pop
sti
mov
aad
pop
out
jne
jp
jmp
rcrb
in
daa
xchg
add
out
xchg
or
and
pop
and
shrb
inc
sbb
daa
mov
jo
jmp
and
xchg
and
mov
and
jo
sbb
aaa
mov
fstl
fstpt
sub
fsubrs
ss
test
sub
ds
mov
ja
ss
xchg
add
pop
mov
mov
subl
mov
pop
sub
ja
inc
add
sbb
add
inc
into
and
sbb
rolb
inc
sub
mov
ljmp
jge
push
inc
mov
push
jo
jmp
push
cmc
add
add
inc
or
insl
push
imul
bound
dec
cmp
mov
dec
leave
xchg
rcrb
mov
sub
inc
pop
cli
lds
sub
xchg
sarb
sub
and
xchg
mov
and
and
dec
mov
add
push
nop
add
repnz
and
dec
sarb
push
ds
adc
dec
rcll
pop
pop
aaa
call
movups
int
mov
mov
mov
jge
shlb
pop
ja
pop
add
pop
mov
inc
arpl
add
adc
adc
xchg
movsl
cltd
in
movsbl
and
xchg
and
shrl
xchg
add
add
mov
in
or
inc
hlt
aad
inc
adc
jmp
add
rcll
int3
inc
cmpsl
add
xchg
mov
add
push
pop
negb
pop
shrb
mov
sbb
add
or
jle
inc
and
inc
cmovle
inc
jne
mov
mov
cmpsl
add
mov
lahf
mov
cmpsl
mov
shll
aaa
in
scas
addr16
cld
and
add
lods
sbb
or
mov
dec
dec
sbb
xor
cmp
out
add
femms
jne
fisubrl
mov
sub
loopne
imul
sbb
jl
cli
mov
xor
aas
out
es
add
arpl
xchg
dec
and
cmp
jne
mov
mov
push
add
jne
xchg
orb
cwtl
push
push
rcll
mov
testb
int3
adc
sbb
adc
mov
jno
addr16
idivb
in
cs
mov
aam
add
jb
pop
pop
fwait
movsl
xchg
and
push
rclb
rcr
fdivr
mov
push
int3
int3
popa
adc
or
cmc
fdivs
sbb
or
int3
adc
addb
add
xchg
test
popa
test
test
cmp
rcrb
lods
and
jecxz
sub
add
fistl
and
push
outsb
sbb
aas
lds
dec
inc
pop
add
loope
popa
or
xchg
daa
movsl
or
xchg
xchg
call
xchg
xorps
fnsave
sbb
push
repnz
aam
add
rcl
dec
insl
mov
sbb
lcall
and
andb
pop
pushf
iret
xorl
xor
in
adc
cmpsl
push
in
outsl
je
cmpsb
and
rorb
push
adcb
cmp
out
add
in
adc
test
das
add
and
xor
movsb
pop
push
dec
or
movsb
pop
mov
dec
add
xchg
mov
lahf
inc
mov
pop
stos
xor
and
insb
pop
jge,pn
lock
insl
daa
dec
or
lods
fiadds
int
test
test
adc
lods
jp
rorl
cmp
in
xchg
sub
xlat
push
cmp
scas
pop
mov
inc
cmp
xor
ljmp
in
es
dec
stc
jns
sbb
adc
cmp
invd
xchg
push
and
push
cmp
mov
xchg
orl
and
dec
sbb
dec
imul
sub
dec
and
and
add
add
or
xor
or
push
mov
fdivs
insb
or
push
rolb
pop
push
add
into
cmc
and
jle
rolb
or
mov
add
int3
ss
push
adc
es
jmp
cmpb
addr16
rorl
push
xlat
pop
insb
push
push
add
xor
in
or
add
in
scas
push
add
mov
or
add
xchg
mov
or
xor
pop
popa
loopne
test
in
pusha
aaa
inc
or
jbe
add
jo
push
and
jbe
rorb
in
in
mov
lods
jns
push
fimuls
adc
enter
bound
inc
loopne
inc
jg
pop
scas
nop
adc
push
mov
in
fs
loopne
pop
push
add
ret
call
add
push
inc
movsb
rorl
add
cmpps
push
and
adc
sti
leave
inc
mov
xchg
lds
je
daa
xorl
xor
rcl
dec
lea
inc
cmpsb
out
lahf
mov
cmp
sub
cmp
adc
aam
js
sbbl
adc
or
sub
push
pop
add
inc
call
in
dec
and
mov
flds
mov
popa
xor
mov
repnz
out
push
rcrl
push
popa
mov
push
or
popf
dec
fwait
adc
nop
nop
mov
loopne
or
adc
jp
cmp
push
lahf
or
mov
pushf
xchg
add
and
sub
ds
das
mov
add
push
mov
dec
lods
sbb
and
out
add
and
adc
push
add
arpl
xor
outsb
pop
push
and
adc
adc
es
or
std
push
xchg
pop
arpl
ret
jge
xorps
loop
add
sbb
mov
fildl
mov
jle
add
push
inc
movsl
push
int3
sbbb
and
les
lock
jbe
les
mov
pop
sbb
lret
sbb
jg
add
jmp
js
jnp
jne
pop
je
imul
and
push
xor
mov
clc
adc
push
push
xor
pop
and
adc
lret
mov
add
xchg
pusha
push
ret
js
hlt
je
cmp
jne
jo
sbb
dec
mov
jp
mov
add
lcall
movsl
mov
sbbb
in
mov
adc
dec
jno
out
xorl
cmp
fnstsw
push
add
push
cltd
jb
or
sbb
or
pop
mov
rcrb
xchg
lcall
fistpll
add
xchg
mov
push
lock
push
or
addl
lods
push
ljmp
ret
dec
aam
dec
imul
xor
xor
cmpsb
div
inc
cmp
jae
mov
jo
call
cmc
aaa
call
mov
test
pop
lods
std
dec
jno
mov
and
notl
clc
xchg
gs
cli
mov
fcompl
adc
push
and
jmp
pop
fninit
add
sub
add
push
mov
jmp
sub
lods
sub
pop
dec
call
or
mov
shlb
push
rol
or
ret
mov
enter
mov
push
sbb
and
xor
or
push
xchg
bound
shl
push
iret
adcl
in
cmp
or
pop
sbb
rcrl
add
push
gs
push
out
sub
xchg
cmpsb
bound
popa
sub
add
add
pop
stos
xor
pop
push
push
jnp
imul
roll
or
cmp
in
inc
add
orl
test
enter
dec
mov
or
or
cmp
ds
xchg
or
xor
add
or
call
add
cs
xor
std
mov
je
inc
jo
or
add
pusha
jmp
mov
ja
sbb
into
and
ds
and
orb
add
pop
add
inc
or
or
ret
pop
mov
sbb
lods
je
fnstsw
jg
pop
or
lock
push
movsb
test
push
add
mov
xor
nop
outsb
pop
and
or
push
push
pop
stos
rcll
xchg
sbb
dec
repnz
push
roll
or
cmpb
cmpsl
mov
rorb
add
sub
and
adc
orl
popf
mov
hlt
mov
movl
or
sbb
mov
dec
pop
xchg
je
shll
dec
mov
ja
aad
pop
add
mov
aad
mov
adc
lods
arpl
outsb
int3
mov
mov
xor
add
push
arpl
adcl
es
movsb
or
cmp
clc
dec
add
and
add
add
sub
inc
pop
push
dec
shlb
mov
loop
divl
aaa
add
push
push
in
mov
jne
xor
leave
or
lods
test
enter
in
sbb
pop
lods
and
into
sub
xor
das
or
or
aas
push
sbb
xchg
cmp
roll
push
leave
ret
je
testb
jg
push
xchg
lret
test
inc
pop
xchg
mov
mov
or
pushf
pop
adc
pop
lret
rcll
pop
push
lds
aad
pop
xchg
jbe
inc
sub
cmovo
mov
dec
icebp
cmp
jmp
adc
inc
push
pushf
pop
wrmsr
out
push
mov
inc
femms
and
movsl
cmp
sarb
bound
fs
add
sti
and
enter
ret
adc
ret
xor
test
aaa
xchg
mov
lock
pop
aaa
dec
pop
sbb
sbb
xor
push
push
jae
and
lods
add
adc
jbe
adc
pop
repnz
or
push
call
xorb
push
add
or
std
dec
sbb
cmp
or
add
scas
ss
sub
xor
add
lcall
in
xlat
cmp
push
inc
sbb
cltd
or
outsl
sub
add
xchg
adcl
js
dec
sbbl
lret
pop
xchg
push
cmp
push
clc
xor
into
jo
lcall
pusha
sahf
loopne
xchg
push
sahf
dec
xor
dec
je
push
jo
loope
add
imul
lock
pop
lods
push
mov
mov
faddl
les
bound
fildl
or
je
cmp
adc
jmp
sub
or
push
cmp
outsb
add
imul
and
jbe
sub
data16
scas
fs
push
sbb
dec
sar
loopne
sbbb
or
mov
outsl
jmp
pop
jns
lahf
sub
push
mov
and
inc
pop
xor
test
and
lds
stos
imul
inc
pop
dec
sub
inc
lahf
cmp
and
jecxz
lods
outsb
data16
sbb
adc
jne
dec
and
add
xor
cltd
push
xlat
lods
dec
inc
outsb
pop
sub
mov
mov
push
or
xlat
and
sbb
or
or
cs
scas
test
fstps
push
in
sub
int
dec
add
push
jg
and
mov
sbb
jo
xchg
sub
cmp
and
push
push
inc
sub
adc
imul
push
roll
and
das
lea
xor
daa
aaa
lods
push
pop
sbb
pop
pop
or
adc
cmp
repnz
sbb
sarb
jne
mov
pop
fs
movsl
add
pop
or
adc
cmp
and
add
push
mov
dec
add
cwtl
cld
sub
push
cmp
shrb
add
mov
add
adc
inc
and
roll
in
lds
adcb
jne
xor
cmp
mov
add
popf
push
mov
push
push
adc
mov
xchg
in
inc
add
and
or
add
inc
orb
test
call
xor
les
push
clc
xchg
push
movsl
les
dec
daa
sub
xchg
and
inc
inc
rorl
mov
mov
cmp
sub
popf
mov
andb
cmp
fwait
and
add
addr16
mov
jecxz
gs
lods
cld
add
rcl
inc
adc
sbb
and
and
add
cmpsl
es
add
xor
pop
sub
insb
push
imul
mov
dec
jo
mov
je
out
mov
mov
push
out
dec
inc
and
jb
mov
cltd
insb
cld
jbe
push
mov
movsb
push
mov
test
inc
cmp
inc
jb
pop
pop
int
insl
addr16
cmp
mov
fstp
ret
push
movl
decl
xchg
mov
mov
lret
scas
hlt
shlb
and
fcmovbe
test
cmpsb
mov
cmp
rcll
xor
mov
aaa
push
adc
pop
rorl
out
cmpsb
in
repz
mov
fisubl
add
jne
stc
mov
push
into
into
stc
xchg
add
adc
push
jle
inc
or
mov
psubw
out
movsl
cmpb
ja
xchg
xchg
cmp
pop
add
pop
pop
sahf
sub
add
clc
push
inc
sahf
lret
jge
jbe
in
pop
xor
stos
addr16
js
jb
jp
push
pop
cmpl
xor
dec
xchg
movsl
xchg
jle
je
mov
in
inc
cmp
mov
int
cmpsl
xchg
cmp
div
add
and
push
adc
ret
dec
mov
inc
push
ljmp
test
movsl
test
sub
or
pop
xlat
push
adc
xchg
stos
xor
in
mov
inc
dec
pop
push
and
int3
and
jp
das
sbb
mov
pop
adc
jl
or
data16
in
rcll
dec
cmpb
test
xchg
js
push
dec
das
insl
es
add
add
and
and
pop
and
mov
mov
fildl
jno
dec
fmuls
pop
xor
mulb
sub
popf
sbb
fisttpl
sbb
cmc
inc
loop
stos
adc
lea
cs
imulb
inc
dec
adc
sub
icebp
ss
add
sub
std
or
cmp
mov
inc
add
push
pop
aam
mov
adc
mull
mov
addr16
inc
push
sarb
xor
pop
call
pop
and
fisttpll
push
cmp
int3
push
div
pop
fdivrs
mov
pop
inc
xchg
out
or
push
add
xor
loop
mov
xor
std
pop
add
pop
lret
push
lods
adc
xchg
dec
add
add
pop
loope
loopne
and
push
xchg
jl
cmpsb
xor
lahf
jbe
movsb
adc
cmpl
pushf
xor
cwtl
loopne
ret
fildll
clc
push
sbb
inc
or
in
mov
rclb
sti
repz
mov
cmp
mov
add
sbb
ret
pop
cmc
xchg
xor
add
bound
sbb
setb
lret
fldcw
les
mov
mov
sbb
out
and
xchg
scas
cmpl
pushl
xor
mov
frstor
or
pop
ret
lods
sub
decl
test
xchg
sbb
push
push
les
jle
inc
pop
lea
sbb
cltd
repnz
cmp
mov
mov
or
add
inc
push
adc
mov
verw
dec
and
incl
xchg
out
and
stos
inc
fsubrl
or
fsubs
xchg
push
ficoml
inc
aam
or
loop
lea
or
or
mov
aam
and
test
rcr
loope
sbbl
inc
popa
jp
cmp
fnstcw
dec
fwait
xor
scas
push
das
sub
dec
aad
pop
mov
mov
lods
loop
fbld
mov
subl
cmp
es
lcall
pavgb
imul
dec
adc
and
or
cmp
div
call
and
xchg
or
insl
lret
call
test
orb
jno
sarb
xor
jge
out
jne
xor
or
xor
mov
inc
adc
cmp
xor
mov
dec
adc
xchg
mov
add
cmpsb
out
xchg
cmp
and
adc
into
add
std
and
lock
and
jno
mov
and
mov
jns
pop
aad
mov
push
sbb
sti
rolb
scas
sar
imul
sar
and
pushl
shlb
and
mov
shrb
sbb
jge
xorb
add
inc
or
sub
or
push
push
push
out
push
push
inc
or
push
inc
pop
jbe
mov
das
cwtl
dec
call
add
int
sbb
sbb
push
and
out
decl
adc
push
or
adc
xchg
rcl
dec
adc
fnsave
fnstenv
test
or
add
jecxz
xor
adc
push
sbb
push
adc
fildl
lds
inc
rcrb
popa
cltd
jmp
mov
mov
inc
mov
push
push
cmp
mov
or
dec
movsl
push
test
or
aaa
xchg
jmp
in
dec
cmp
test
inc
mov
test
test
cmp
flds
subl
sbb
ds
push
fsts
xlat
ja
or
add
push
stos
mov
adc
dec
lea
inc
push
jl
or
jg
ds
add
cmp
jbe
inc
pusha
add
xor
pop
inc
clc
fcmovb
sbb
movsb
test
jae
or
xor
shll
add
pusha
sbb
aaa
aaa
or
pusha
das
cmc
sbb
adc
add
pop
int3
mov
inc
ret
cmp
enter
mov
enter
push
imul
or
sbb
mov
add
sahf
mov
pop
ds
call
icebp
push
or
test
add
cmp
mov
js
dec
shll
lods
fiaddl
xlat
cmp
adc
in
in
int3
add
add
bound
push
movsl
sub
inc
sbb
and
cmc
sub
and
push
pusha
mov
xchg
cmp
mov
push
loopne
mov
pop
mov
xorl
jne
cmp
cmp
or
or
in
add
mov
push
cwtl
add
add
adc
push
enter
int3
addl
or
orl
aas
pop
adc
push
push
xor
rorl
cmp
arpl
adc
rolb
cmpb
and
iret
out
dec
adc
out
enter
xor
mov
push
loope
dec
adc
int
rolb
dec
aam
andl
clc
sbb
xchg
xor
cli
popf
lock
hlt
mov
jbe
dec
test
pusha
icebp
and
aas
pop
mov
cmp
call
cmp
les
mov
add
pop
pop
push
push
jb
jmp
out
push
lea
xor
mov
insl
xorb
hlt
push
or
test
aam
or
ds
call
orl
lods
push
negb
mov
push
pop
fs
das
inc
adc
xchg
in
mov
jecxz
movsl
popa
std
ss
and
inc
nop
lret
and
int3
xor
fdivrs
fstl
pushf
repnz
adc
iret
mov
movb
test
test
call
lea
push
ret
icebp
and
stos
push
nop
mov
aam
jmp
mov
repz
mov
cmp
pop
adc
ret
sti
test
stos
cmp
jae
js
orl
sbb
pop
xlat
out
add
jge
ja
je
lock
and
cmp
cmp
mov
movl
andl
pushf
push
add
mov
test
test
adc
inc
out
das
inc
sbbl
mov
fisubrl
add
add
es
mov
out
loope
mov
sub
and
js
inc
es
cmpsb
sahf
mov
pop
cld
adc
add
popa
add
pushf
add
out
addb
sub
cwtl
add
add
or
call
leave
pop
add
out
add
add
push
neg
pop
sbb
nop
sub
rorb
icebp
rcrl
pop
push
sbb
lret
sub
cmp
jmp
mov
popa
js
mov
ret
jnp
pop
arpl
in
ljmp
or
sub
sarb
push
test
mov
jg
sub
mov
popa
sbb
or
inc
ss
bound
cli
imul
jne
nop
mov
lcall
mov
test
xchg
dec
js
sbb
sbb
sbb
adc
mov
outsl
cmpl
es
push
push
hlt
xor
jmp
sub
push
sbb
jne
insb
or
pop
sub
loop
ss
inc
out
es
and
xchg
out
cmp
xor
je
ljmp
cmp
out
adc
xor
and
mov
scas
push
fwait
addb
and
movsl
adcl
sub
mov
sub
repz
push
test
and
gs
or
stos
pop
out
sub
divb
ret
test
adc
mov
push
cmp
cmp
test
inc
mov
insl
jecxz
repz
inc
dec
push
fwait
add
push
push
push
push
call
cmp
adc
jl
inc
push
and
dec
mov
push
xor
or
jnp
jmp
mov
rolb
pop
mov
enter
add
pop
push
jmp
add
mov
or
inc
adc
cs
xlat
outsl
inc
insl
add
pop
add
push
mov
add
inc
push
sub
adc
pop
adc
rolb
mov
push
push
sub
jmp
sbb
cli
or
inc
dec
pop
test
movsl
ret
jecxz
popf
lret
adc
popf
add
incb
loopne
jno
in
push
aas
sbb
cwtl
dec
mov
fwait
push
push
push
mov
shlb
push
test
ror
mov
shr
push
push
and
mov
aas
mov
and
add
mov
mov
lret
sahf
mov
xchg
enter
inc
and
push
subb
leave
cli
insl
shl
push
hlt
sahf
scas
fisttpll
pop
dec
scas
jno
mov
sub
insb
push
push
movzwl
inc
mov
inc
scas
insb
jnp
es
out
cmp
jg
pop
jp
adc
sbb
cmp
jmp
sub
mov
or
andl
mov
lret
jbe
and
mov
out
in
les
sbb
cmp
sub
adc
in
add
inc
dec
jg
add
jne
dec
add
push
scas
push
mov
push
inc
cmp
or
push
movb
push
loop
hlt
or
cmp
aam
jg
mov
mov
mov
mov
jmp
in
sbb
adc
cmp
sbb
jmp
lock
add
push
push
push
pop
mov
sti
lret
xchg
outsl
rep
movsw
push
cld
cltd
cmp
or
ja
hlt
push
or
mov
shr
mov
inc
mov
pop
pop
fdivrp
adc
movb
cmpb
scas
cmpsb
and
data16
jg
push
and
daa
push
cmp
shr
mov
movsbl
xor
xchg
ss
push
pslld
jb
and
push
cld
or
pop
je
push
push
add
mov
imul
add
mulb
mov
pop
bound
mov
mov
dec
outsl
cmp
push
inc
add
mov
aam
and
stos
dec
vpsubd
jle
and
cmp
jl
adc
sbb
xlat
inc
pop
sbb
lahf
xor
mov
sbb
dec
dec
pop
cmp
mov
paddb
ss
pushf
pusha
fwait
xlat
adc
pop
push
lock
fdiv
inc
test
rorb
or
loop
mov
jle
inc
aas
inc
testb
ljmp
adc
cmpb
daa
add
daa
pop
or
or
jnp
or
jbe
jmp
or
fwait
fwait
fwait
fwait
por
jmp
adc
pop
adc
fwait
fwait
fwait
fwait
push
adc
dec
adc
dec
adc
fwait
fwait
fwait
fwait
aas
pop
jmp
sbb
xor
jmp
fwait
fwait
fwait
sub
jmp
sbb
and
fwait
fwait
fwait
fwait
pop
pop
jmp
and
or
jmp
stos
xchg
fimull
push
dec
loopne
or
push
mov
adc
adc
shrl
mov
push
add
iret
adc
and
xor
cmp
repz
inc
dec
push
push
repz
repz
pop
imul
js
addb
xchg
xchg
fwait
mov
rep
scas
mov
mov
ret
sbb
add
and
or
or
decl
adc
adc
push
pop
sbb
sbb
sbb
push
pop
and
and
aas
mov
cld
repz
in
arpl
sbb
add
imul
sti
aaa
fdivs
cmp
jle
mov
mov
arpl
mov
ljmp
xor
jo
inc
sub
jae
je
call
fisttpl
mov
xchg
xor
xchg
mov
or
jbe
pop
sub
sub
sub
mov
dec
inc
xchg
inc
cmp
jbe
push
fmuls
adc
cmp
mov
test
or
ficoms
std
cmp
fwait
cmpsb
push
jmp
inc
push
push
and
pop
pop
imul
scas
push
loope
pop
mov
adc
leave
frstor
xor
push
stos
xchg
push
sub
insb
out
dec
je
adc
test
dec
fcoml
mov
sub
rcll
adc
inc
pop
mov
ss
test
inc
dec
in
pop
push
adc
or
sbb
sub
push
cmp
cmp
push
push
shrb
mov
fstpl
lret
mov
add
push
scas
fmull
mov
add
lret
adc
push
push
cmp
pusha
add
adc
cmp
stc
xchg
and
xor
xor
adc
mov
inc
dec
stos
add
lock
jp
jmp
adc
pop
push
clc
add
addl
adc
push
xor
and
dec
insb
inc
xlat
fwait
push
fnsave
cmp
push
push
cmp
jne
dec
arpl
add
andl
scas
addb
jne
test
ss
mov
or
jno
js
outsb
push
mov
std
pushf
mov
jmp
mov
jne
and
mov
or
movsb
jp
mov
jo
sbb
jmp
inc
xchg
ds
popa
sub
and
outsb
insb
mov
adc
fsubl
inc
pop
mov
aas
adc
or
pusha
mov
xchg
je
dec
sahf
mov
rcrl
push
test
inc
insb
out
xor
xor
xor
out
sub
test
aad
ds
add
or
or
add
inc
pop
mov
mov
add
cmp
into
xchg
sub
cwtl
js
and
inc
mov
rol
mov
push
cld
roll
sbb
andl
popl
ret
dec
ds
mov
shl
pusha
sbb
pop
sbb
xchg
add
or
pusha
rcrl
inc
sbb
mov
and
loope
mov
mov
pop
or
loop
leave
adc
pop
cs
inc
inc
test
push
aam
sub
shr
or
sub
and
adc
in
pushf
test
or
lret
cmp
push
add
inc
ds
cmp
xchg
in
jp
les
push
sub
push
cwtl
or
mov
push
mov
add
sub
test
pusha
clc
add
cmc
outsl
inc
or
jmp
imul
cmp
and
sbb
push
add
pop
cmp
enter
fmuls
inc
push
in
add
sub
xchg
xor
subl
pop
push
push
stos
push
loop
xor
sub
pop
push
add
mov
movsb
into
sbb
shr
adc
adc
das
mov
or
push
push
xchg
loop
or
lret
mov
or
xchg
or
setg
je
cmp
movl
shlb
mov
jno
cmp
pop
xchg
popa
pop
mov
mov
or
cmp
call
xchg
test
dec
sbb
cltd
test
pushf
sub
imul
faddl
jp
push
add
sbb
cmc
lods
incl
adc
push
das
push
ret
lds
add
loopne
out
jno
sbb
xor
xlat
sbb
or
and
and
sub
add
inc
arpl
pop
mov
and
adc
add
sub
or
jmp
pop
xchg
or
inc
aad
and
adc
dec
lock
add
dec
inc
push
nop
xchg
xor
add
add
add
fcmovnbe
add
add
push
or
nop
movsl
outsl
sbb
push
sub
sub
mov
sub
call
or
xor
rol
cmp
jmp
mov
in
cmp
xchg
inc
ss
rolb
outsb
cmp
push
or
push
mov
push
push
cmp
xchg
pop
test
insb
jl
xlat
mov
or
ds
inc
add
pop
inc
cmp
subl
inc
fs
push
subb
jo
aas
fwait
movsb
jb
enter
sbbb
pop
cltd
movsb
test
movb
add
enter
inc
cwtl
lahf
pushf
push
push
pop
and
movsb
push
je
je
test
lods
mov
mov
dec
sub
andb
and
push
rclb
icebp
add
jbe
add
rol
ss
cmp
cli
add
sbbl
out
lar
js
inc
lahf
mov
ret
inc
lret
test
or
jb
fdivrs
or
xchg
jge
add
jl
sub
cmp
lcall
and
mov
outsb
dec
push
or
jecxz
lea
or
sbbl
imul
js
dec
fdivrp
jmp
sub
and
cwtl
jne
pusha
add
pusha
loope
aaa
pop
jl
jmp
out
push
js
popa
sbb
xchg
sbb
loope
jne
dec
mov
cmp
je
lret
inc
inc
and
and
lret
gs
dec
jo
repnz
pop
jmp
rcrl
mov
sub
jmp
subl
dec
xchg
push
mov
pop
bound
push
sahf
das
sub
popl
ret
cmp
mov
dec
mov
sarl
jmp
cltd
dec
lds
rcr
xchg
xchg
das
or
call
int3
sub
movsb
scas
mov
dec
add
sub
sti
jge
pop
jo
jo
push
hlt
cmp
jl
cmp
jle
aad
mov
pop
loopne
movsl
add
pop
inc
push
scas
jne
xchg
sbb
xor
ret
ds
mov
incb
pop
mov
mov
iret
sub
ds
add
pop
pop
shld
movsb
adc
adc
js
xchg
xor
add
pop
push
pop
movsl
das
sbb
xor
mov
or
add
in
jge
jp
cmp
ret
sbb
pop
pop
in
aad
sub
inc
scas
nop
add
js
movsb
pop
xchg
and
and
insl
dec
sub
xchg
and
out
lret
sbb
sbb
sub
cwtl
pushf
and
call
daa
or
and
js
subb
adc
sbb
ret
jmp
and
adc
adc
xchg
imul
mov
jns
xor
rcrl
loope
mov
lock
jge
lahf
loopne
rorb
inc
pop
push
clc
mov
in
sbb
pop
push
das
add
lcall
xor
jne
ret
pop
push
xchg
daa
inc
xor
clc
adc
mov
lods
scas
pop
xchg
es
mov
sbb
mov
jle
popf
fcoms
mov
jno
out
loopne
aad
lock
or
mov
or
insl
adc
clc
mov
adc
popa
and
call
dec
jno
jne
cwtl
cmp
shlb
adc
jle
mov
push
or
inc
ret
js
push
jmp
sbb
push
dec
inc
mov
jo
fbstp
xlat
jmp
inc
rorb
rdpmc
leave
test
jo
inc
add
push
stos
dec
cmpsl
cmp
inc
sub
cwtl
popa
xor
lcall
dec
add
dec
or
adc
mov
or
inc
addb
xchg
or
int3
loope
scas
mov
xchg
pop
cltd
or
test
mov
mov
nop
scas
pop
add
inc
mov
push
push
push
ret
mov
jecxz
add
adc
mov
daa
adc
sub
add
aaa
sub
or
pushl
push
fwait
mov
sbb
jno
push
pusha
add
dec
lret
jge
dec
outsl
test
mov
xor
jl
adc
push
outsb
mov
test
or
movzbl
jle
mov
jmp
decl
mov
gs
sub
roll
jb
rcrl
es
inc
add
mov
xor
inc
rol
and
add
ja
xchg
cltd
sahf
inc
sbb
and
arpl
mov
add
cmc
into
loopne
jbe
cmp
rclb
mov
sti
rolb
push
sbb
stos
lahf
out
ret
popf
insb
aam
jl
push
test
jbe
cmovb
jle
dec
jbe
sub
dec
cmp
jmp
inc
cltd
cld
popf
or
call
arpl
push
dec
add
adcb
jmp
xor
imul
xchg
daa
sbb
fmull
rol
add
lea
scas
jo
jns
mov
push
stos
mov
repnz
rclb
dec
pop
lds
add
cmpsb
gs
dec
ss
jle
lock
ret
push
in
arpl
jns
jo
xor
pop
jae
jo
dec
push
pop
gs
mov
jmp
inc
ret
in
xchg
scas
ret
outsb
push
xchg
outsb
mov
mov
sbb
daa
or
das
pop
sbb
xchg
mov
scas
sbb
in
xor
add
fadds
jns
and
xor
or
mov
test
push
dec
ficomps
xor
adc
inc
in
repnz
pop
mov
push
push
push
xchg
mov
insb
fisubrl
xor
fmuls
push
push
jecxz
inc
int3
pop
gs
xchg
in
dec
lock
adc
lds
out
test
mov
cs
jns
xorl
push
test
and
and
xor
in
jae
movsb
loopne
sub
ret
mov
sbb
ljmp
adc
add
faddl
fstl
fldz
fcomp
fnstsw
scas
rolb
aaa
arpl
pop
fsubr
pop
and
mov
faddp
cmp
push
test
js
inc
adc
pop
dec
addr16
or
adc
sbb
aam
dec
jmp
pop
mov
hlt
dec
dec
jg
pop
hlt
jl
cmp
leave
push
ret
push
lea
jge
xchg
lock
loop
pop
jg
les
rcrl
call
pop
call
arpl
push
icebp
das
mov
jns
sub
push
test
cmp
push
bound
mov
jnp
jge
jmp
fldl
cmp
xchg
xchg
dec
and
push
jg
add
xchg
scas
sarb
xchg
nop
push
and
mov
test
jne
out
scas
push
dec
dec
inc
iret
and
cmpl
pop
adc
inc
or
ja
mov
inc
jmp
mov
fcoml
push
mov
pop
ret
mov
lea
mov
sarb
jns
fimuls
enter
rcrl
int3
loopne
rorb
ljmp
cmp
add
lods
pop
pop
pop
in
aas
clc
push
cli
pop
xor
pop
std
call
in
and
mov
jo
sub
inc
arpl
cmp
sbbb
mov
or
lods
jmp
add
fiaddl
or
cmp
je
or
popf
xchg
mov
adc
fiaddl
cmp
aam
xor
xchg
sbb
or
ficoml
dec
and
inc
les
jne
xchg
xlat
xchg
xchg
das
shrb
dec
and
out
add
push
push
inc
and
or
inc
inc
cmp
cmpl
adc
test
jo
sub
push
sbb
push
popf
mov
jecxz
mov
jge
sti
mov
ss
loope
fidivrl
add
sbb
cwtl
aaa
mov
inc
add
jb
or
aaa
add
in
aaa
push
jne
push
push
sbb
fs
push
pop
inc
in
lret
sbb
jb
push
ja
push
inc
daa
dec
pop
jb
ficoms
or
test
mov
lock
sbb
mov
je
or
jg
fs
test
adc
fmuls
add
push
xchg
pop
xchg
stc
add
or
cmpsb
adc
push
and
das
sub
jecxz
aaa
lea
pop
adc
movsb
jne
dec
mov
add
push
add
pop
push
jae
xchg
add
mov
and
jnp
add
mov
call
cmpb
xchg
and
sbb
pop
sub
dec
or
or
and
loop
ficoms
add
ljmp
mov
pop
movhps
cmp
inc
in
ret
mov
xor
adc
fs
test
adc
rcrl
adc
aad
add
sub
jp
or
mov
and
lea
aam
decb
xchg
pop
mov
pop
and
fs
jmp
sbb
cmp
mov
mov
mov
leave
cmp
pop
push
pop
insb
mov
lock
pop
ficoms
xchg
or
mov
add
fcomps
push
jmp
or
movsl
into
sub
fsubrs
fwait
lods
sub
cmp
and
xchg
test
test
lret
jne
adc
or
es
jb
ret
jne
jae
scas
ja
ja
sub
pop
jbe
adc
xor
mov
sbb
push
mov
add
push
or
cmpsl
push
imull
push
pop
jne
jne
int
rclb
push
dec
loope
push
pop
ret
mov
jmp
inc
test
or
add
dec
jmp
and
and
inc
pop
imul
fistl
xchg
mov
mov
test
jle
test
pop
inc
xor
call
jmp
or
xchg
dec
pop
sarl
mov
mov
add
pop
push
dec
xor
push
mov
in
or
sbb
shlb
loope
lea
and
test
sub
aad
xchg
dec
lds
lods
cmp
test
movsl
fbld
call
jb
test
mov
int
inc
cmpsb
dec
jns
add
push
aas
int3
sub
add
push
push
xchg
stos
out
mov
test
mov
xchg
or
insb
sub
movsl
rorb
add
xchg
mov
cmpsl
pop
inc
aam
daa
imul
and
mov
nop
fildl
jns
mov
sub
xor
push
mov
mov
mov
insb
adcb
mov
add
test
dec
xor
sahf
ss
int3
lea
mov
adc
sub
jne
lcall
lea
movsl
jmp
add
divl
loope
push
cmp
dec
fdivrs
faddl
add
pop
rolb
out
cmp
aam
mov
or
dec
or
dec
or
push
pop
push
inc
sub
call
xchg
adc
pop
cmp
popf
xchg
push
gs
xor
add
in
sub
flds
or
pop
test
imul
jbe
pop
outsl
push
add
fiadds
and
cmp
push
mov
push
sahf
pop
lret
shld
dec
cli
add
cmp
divl
cltd
xor
or
pushf
std
xchg
jge
push
inc
addb
xchg
mov
jo
pop
ja
mov
mov
je
mov
outsl
add
sarl
and
dec
rcrb
out
push
cmpsb
mov
pop
push
adc
mov
mov
add
jmp
or
addb
sub
ret
sub
sub
push
push
lock
add
mov
clc
mov
sbb
or
lock
stc
push
roll
push
and
mov
mov
pop
lods
nop
stc
push
add
sbb
add
cs
aas
test
cmpsb
mov
sbb
lods
xchg
dec
mov
xor
add
xchg
addl
gs
mov
xchg
sbb
pusha
shll
mov
sub
int
pop
mov
xchg
pop
lret
xchg
clc
shll
push
push
xchg
fadd
loopne
mov
mov
js
aaa
nop
nop
or
imul
movsl
add
les
mov
pop
or
adc
jb
sbb
sub
add
push
call
repnz
cmp
jo
bound
xor
sub
add
fildll
add
and
nop
inc
test
adc
enter
es
incl
and
in
adc
je
add
cmp
loopne
inc
pop
xor
xor
nop
filds
jge
mov
jle
js
orb
lods
loope
sub
imul
lahf
mov
mov
or
push
mov
pop
imul
fsubrs
cltd
nop
outsl
adc
cmpsl
repnz
xor
push
or
in
mov
jo
sbb
ffree
mov
add
lahf
or
push
arpl
incl
test
dec
insb
repnz
test
push
js
das
scas
movsb
outsl
inc
mov
sub
in
call
inc
hlt
add
adcl
mov
add
or
pop
jnp
mov
mov
shr
add
lret
stos
add
sbb
fcoml
inc
mov
daa
inc
or
imul
jo
and
cmpb
cmpsb
or
mov
adc
in
jne
or
pop
sub
adc
xchg
push
push
cmp
xchg
cltd
add
rcll
orb
adc
mov
xchg
push
rorb
cmpsl
imul
add
xor
inc
xor
aaa
cmpsl
adc
mov
sub
inc
les
faddl
jns
outsl
mov
fs
jo
mov
add
addl
push
sub
xor
add
inc
jb
lret
addb
out
xchg
and
movsb
adc
imul
or
dec
dec
jo
xchg
pusha
mov
or
cwtl
inc
addb
aad
or
js
test
loopne
mov
mov
js
jb
loop
xor
or
mov
inc
or
jmp
xor
dec
or
sahf
fimuls
sbb
push
test
mov
and
jl
popa
fstl
aad
insl
popf
test
and
xchg
pop
lret
in
subl
mov
ret
out
sarl
push
adc
add
jb
cmpb
clc
xor
dec
mov
mov
or
enter
mov
inc
xchg
pop
push
lret
dec
adc
pop
outsb
movsb
cmp
and
pop
jge
push
scas
adc
xor
insl
inc
imul
test
jp
sti
fldl
jl
call
push
xorb
and
adc
rorl
lea
out
cli
and
popf
test
mov
insl
bound
rcrl
sub
mov
lcall
loopne
fs
xor
addb
dec
popa
imul
sbb
sub
add
push
inc
push
xchg
add
lods
in
mov
mov
cmp
and
jp
push
or
adc
pop
xchg
jl
mov
pop
mov
or
cmp
fmull
inc
or
call
cli
popf
inc
in
and
repz
adc
sub
dec
jl
add
stos
xchg
dec
fsubrl
rcrl
pop
pop
dec
and
cmpsb
adc
hlt
xchg
lods
aas
and
mov
ja
das
dec
mov
movzbl
xchg
outsl
xor
sahf
and
push
sbb
cmp
sbb
cmp
jge
mov
inc
and
and
mov
lods
pop
test
sub
test
test
dec
mov
sbb
inc
ds
movsl
and
push
jnp
mov
cmp
sbb
es
popf
out
or
scas
ret
aam
dec
rol
daa
push
scas
insb
add
pop
shlb
adc
adc
mov
sbb
inc
add
or
repz
and
dec
cmp
add
add
add
push
movsb
or
pop
push
loop
inc
mov
push
add
shll
hlt
or
xchg
mov
jecxz
and
pop
gs
hlt
dec
fisttpl
cmp
std
aaa
incb
test
jmp
inc
jmp
push
je
or
je
mov
sub
cmpl
mov
test
and
add
ss
mov
inc
rcl
lea
ret
push
int3
add
test
lcall
or
inc
xchg
les
lret
insb
mov
jmp
or
insb
adc
je
xchg
or
pop
fwait
sti
mov
inc
gs
push
lea
pop
js
push
jecxz
das
and
xchg
jl
or
fbld
gs
loop
test
icebp
bound
scas
pop
inc
les
sub
or
sbb
rclb
into
push
push
xor
daa
mov
pusha
lods
push
clc
stc
movl
mov
mov
mov
lea
cltd
adc
test
mov
pusha
pop
loope
test
je
fdivrs
mov
out
push
mov
dec
fcmovnbe
sub
popf
adc
cmp
add
lcall
out
jle
aaa
mov
test
out
fldl
int
cld
pop
cmpb
es
loope
push
lahf
hlt
xchg
dec
dec
sti
dec
inc
push
pop
sbb
xchg
jb
in
enter
and
pop
insb
out
loop
ss
imul
fimuls
cmp
adc
or
pusha
xchg
nop
mov
or
inc
call
xor
inc
popf
dec
jae
shlb
push
push
push
mov
xchg
push
cmp
std
and
jne
rcrl
jne
jle
movsl
enter
inc
pop
or
sub
rolb
movsb
lock
push
push
push
cld
dec
out
cmp
jp
clc
sbbb
inc
cmp
cmp
std
mov
dec
movsb
xor
ds
call
rolb
roll
loope
jl
or
lret
inc
mov
inc
adc
sbb
push
lea
mov
out
test
mov
xchg
fildl
and
mov
sahf
aaa
push
mov
lea
cmp
mov
jbe
mov
repz
mov
pop
jg
idivl
jno
pop
inc
pop
cmp
rorb
jbe
pop
add
pop
jge
push
sbb
pop
pop
dec
push
jmp
sbb
aam
push
mov
negb
dec
mov
sbb
push
lock
pop
adc
pop
and
push
rorl
insb
inc
xor
lock
mov
jnp
bnd
and
push
inc
sahf
or
icebp
jbe
test
adc
push
and
pop
cmpl
lret
adc
dec
jg
mov
subl
in
outsb
sbb
cmc
lret
xor
ljmp
out
push
or
jle
push
imul
mov
or
hlt
or
xchg
xor
adc
lock
inc
adc
or
xchg
outsl
jns
add
dec
xchg
sahf
out
sbb
popf
or
mov
push
push
mov
in
add
and
hlt
mov
arpl
or
adcl
test
xor
xchg
out
sbb
mov
cmovbe
shlb
add
fcomp
mov
jns
push
push
add
das
push
sbb
ror
mov
sbbl
mov
push
add
loop
hlt
shlb
fwait
shll
dec
jne
test
sbb
xor
sbb
xor
call
repnz
loopne
xor
or
into
add
push
rolb
push
xor
jecxz
outsl
xchg
aam
mov
mov
mov
sub
xor
xchg
pop
ret
call
test
mov
les
pop
xor
inc
ret
out
add
mov
mov
inc
in
push
dec
dec
loope
out
mov
and
push
lods
in
push
in
push
mov
jmp
pop
je
cltd
sub
icebp
dec
push
in
lods
insb
sbb
adcl
xchg
inc
sub
popf
adc
sub
inc
cmpsl
cmp
pop
push
out
mov
dec
movaps
outsl
sub
into
jo
in
sbb
hlt
xchg
xchg
push
push
mov
or
nop
ja
adc
das
adc
add
lds
sub
mov
lea
xchg
orl
and
lods
mov
shll
sub
mov
or
das
enter
sub
sbb
inc
cmpsb
pusha
add
pusha
loop
jne
iret
mov
xcrypt-ctr
cmpsl
popf
mov
into
lea
cmp
sub
mov
outsb
adc
int3
add
push
cld
mov
sarb
jg
mov
sbb
stc
push
mov
or
sub
lea
jle
cli
pop
cmpsl
mov
push
jb
es
push
adc
jge
jb
xchg
mov
incl
stos
add
ljmp
shlb
mov
ret
cmp
imul
pushf
xor
sti
imul
dec
in
pop
bound
shll
inc
inc
jmp
inc
fs
sub
push
mov
cmp
fmul
icebp
add
call
adc
ja
push
jmp
test
popf
sub
ds
sub
jle
sub
fimull
add
arpl
mov
shrl
or
inc
cmp
xorl
test
cmc
mov
mov
je
sbb
xchg
add
js
mov
dec
in
and
xchg
test
fnsave
scas
aam
pop
in
mov
cli
add
sbb
adcb
xlat
daa
in
fs
shr
popf
inc
int
jne
xchg
pop
stos
je
mov
xor
push
js
nop
test
addb
inc
mov
dec
xlat
inc
pop
jne
out
lods
xchg
push
push
sub
aad
iret
cmp
add
add
adc
push
mov
push
add
or
sub
stc
rol
add
lret
les
enter
out
je
mov
and
adc
and
xor
rorl
ds
push
and
loope
les
je
add
sbb
sub
pop
pop
lret
dec
clc
or
je
outsl
pop
inc
mov
mov
cwtl
outsl
jle
loope
stos
mov
fisubrs
sbbb
nop
imul
and
and
aaa
lods
nop
xchg
mov
imul
loop
push
mov
movsb
push
cmpsl
mov
aaa
xor
insl
pop
push
sbb
rcrb
inc
fiadds
push
out
test
mov
test
and
jb
add
mov
test
pop
or
push
mov
or
hlt
clc
mov
sub
jmp
cmp
clc
lahf
je
sbbb
sub
in
adc
das
sti
jne
repnz
inc
mov
je
cltd
test
gs
pop
cmp
jge
sbb
nop
xchg
les
push
dec
addl
mov
xor
je
push
xchg
cmp
dec
lods
ret
or
fsubp
xorl
addr16
pop
push
or
dec
sub
push
and
fiadds
push
push
mov
outsb
mov
mov
pop
mov
push
outsl
mov
jne
inc
jecxz
int3
sub
insb
sbb
sbb
push
ret
mov
fcoml
push
or
arpl
add
inc
inc
mov
mov
rorl
addb
lcall
and
sbb
push
unpckhps
mov
xlat
push
lock
xor
shr
xor
and
mov
movsb
push
test
test
mov
lea
movl
fmull
cmp
jbe
add
movsl
rcr
add
mov
or
fstl
mov
pop
and
mov
enter
jg
adc
test
pushl
add
aas
inc
and
add
or
dec
aas
cmp
mov
xor
dec
adc
adc
arpl
sahf
aas
add
inc
inc
pop
add
imul
fsubrs
sbb
fsubr
mov
cld
mov
mov
push
inc
push
int3
pop
or
jl
jl
lods
aam
pop
dec
cmp
inc
jmp
add
loop
dec
and
les
push
or
jb
push
mov
mov
rolb
rol
xchg
into
push
pop
pop
and
mov
cs
enter
repnz
inc
push
in
push
lahf
nop
mov
fs
xor
stos
test
out
stos
and
and
sub
add
adc
scas
add
push
int3
sbb
or
pop
pop
push
call
test
inc
add
xchg
inc
pop
mov
mov
adc
stos
mov
lahf
sub
arpl
and
lods
daa
jp
dec
and
mov
rorl
mov
xor
cmp
daa
lret
xor
cmp
lock
movb
mull
push
pop
insb
shll
shrb
xchg
andb
adcb
pop
syscall
cmp
pop
mov
add
out
adcb
sti
add
sub
push
add
or
sar
gs
add
adc
sub
add
push
or
and
inc
pop
push
push
pushf
and
cmp
out
xchg
sbb
push
dec
and
lods
xchg
iret
push
push
mov
xchg
inc
xchg
push
inc
fdivrs
xor
je
andb
push
mov
cmp
dec
ret
xchg
cmp
mov
enter
int3
push
or
xor
add
popa
and
loopne
stc
jns
lds
push
push
pop
inc
or
mov
or
rolb
lea
mov
add
or
adc
fadds
ljmp
cwtl
mov
fsubs
cmp
or
lahf
adc
inc
inc
adc
ss
mov
or
adc
xor
or
mov
fwait
push
lret
rorb
or
adc
test
sub
sbb
cmp
arpl
daa
xlat
push
mov
int
xor
je
mov
and
cmp
test
mov
prefetcht1
clc
fisttps
mov
adc
lret
stos
js
sbb
pop
sub
cmp
push
push
or
mov
sbb
popa
lods
stc
test
cmp
bound
dec
bnd
and
leave
inc
xchg
and
cli
inc
push
movsb
movsb
sbb
mov
int
xchg
sub
daa
xchg
and
xchg
fldenv
andb
ja
push
add
mov
inc
cmp
inc
jne
push
dec
imul
jmp
nop
daa
pusha
lahf
xor
cwtl
sub
dec
xchg
lret
dec
mov
or
adc
rep
test
mov
mov
mov
lods
cwtl
repz
xchg
daa
lods
dec
test
ss
mov
out
mov
ljmp
ljmp
ss
lret
mov
out
es
push
or
sub
enter
sbb
test
ss
fdivrs
add
cmpsl
lods
mov
xor
mov
ljmp
sahf
jo
jge
or
rorl
clc
xchg
push
lahf
dec
push
popa
call
jb
lock
push
push
push
add
call
insb
fcom
dec
adc
xor
push
and
pop
fldenv
jo
and
movsb
sub
mov
lcall
fiaddl
and
sub
cmpsb
fs
mov
inc
fisubrs
fidivrl
add
add
xchg
push
mov
add
clc
lods
into
ss
test
add
inc
insb
jecxz
push
std
cmpsb
icebp
arpl
jmp
call
mov
push
adc
xor
leave
jecxz
xchg
les
fists
pop
cmp
cwtl
pop
lock
sbb
sub
pop
mov
cmp
pop
jg
jbe
mov
fwait
fwait
sub
dec
imul
es
and
or
add
mov
dec
xchg
cld
add
ds
sbb
adc
loop
cmp
xchg
or
test
dec
iret
xchg
leave
sti
add
sbbb
rcll
fadds
loope
notl
push
sbb
push
or
scas
or
sbb
pop
fadds
xor
mov
pusha
mov
adc
test
scas
rsm
flds
mov
aam
mov
cli
mov
xchg
lcall
dec
orb
cmp
push
sub
add
in
inc
dec
stos
and
adc
hlt
pop
mov
movsl
cmp
je
rorl
loop
test
in
dec
xchg
cmp
je
sub
add
mov
sub
push
dec
je
or
and
popf
or
mov
gs
lds
out
sub
call
iret
add
enter
pop
mov
loope
push
in
cli
xor
push
stc
frstor
adc
inc
cmpsl
xor
adc
pushf
nop
push
sub
push
and
mov
fstpl
adc
sbb
in
add
icebp
mov
daa
call
or
cs
or
push
add
or
dec
jnp
mov
sbb
dec
movsb
adc
and
or
loopne
mov
decb
lahf
mov
adc
sub
xchg
mov
fs
mov
ja
or
push
insl
adc
add
enter
push
pop
sub
iret
mov
xor
mov
push
popa
stos
subb
cmp
add
and
xchg
xchg
movsb
xchg
xchg
push
lret
dec
mov
icebp
xor
cmp
test
lock
pusha
mov
push
das
cli
sub
aam
lret
inc
add
push
add
push
mov
push
pushl
mov
pushf
push
sbb
sub
and
xchg
mov
les
inc
xor
xchg
loopne
sbb
xchg
jle
mov
lods
mov
or
imul
out
pop
sbb
test
xchg
sub
jmp
std
mov
mov
fsubl
mov
into
add
mov
jmp
adc
sub
int3
jbe
add
mov
decl
inc
adc
shl
and
add
add
imul
sbb
je
pop
or
and
adc
mov
push
xchg
push
or
add
and
add
inc
daa
mov
inc
call
mov
mov
inc
enter
dec
test
icebp
adc
test
push
fnsave
andl
popf
adc
xor
fldl
pminub
and
push
jecxz
cmp
cmp
push
stos
mov
push
add
lcall
sub
inc
shrb
nop
sub
orb
cs
add
mov
out
cs
scas
mov
jmp
ret
xor
andl
and
and
mov
mov
inc
dec
fdiv
dec
add
mov
pusha
nop
out
aad
cld
pop
or
and
or
jle
ret
push
add
hlt
lcall
movb
mov
es
pop
jge
test
mov
mov
or
jecxz
add
jg
movsl
pop
push
out
sub
cmp
pop
mov
cltd
ljmp
stc
addr16
mov
rorl
repnz
push
and
inc
add
push
stc
jmp
and
imul
mov
push
js
cmc
or
lcall
inc
cs
add
lret
loope
add
leave
cmp
add
xchg
pop
push
outsl
push
add
mov
push
outsb
dec
adc
into
xchg
push
test
aas
mov
not
cmp
sbbb
push
cltd
fcmovb
sbb
push
je
fsubr
sub
push
pushl
stos
cwtl
mov
add
push
inc
cwtl
popa
orb
lds
cmp
jl
push
in
addb
cmpl
test
or
mov
mov
push
add
je
push
inc
dec
and
push
adc
push
shl
adc
or
adc
and
cltd
jmp
sbb
pshufw
in
jmp
inc
int3
stos
cmp
stos
adc
pusha
and
push
jno
dec
cld
bound
adc
addl
add
push
sub
inc
cmp
xor
mov
xlat
jl
add
adc
or
cmp
mov
xchg
push
push
stc
pusha
or
push
ret
xor
or
pop
or
mov
mov
sub
mov
push
lods
rcr
je
push
les
pop
push
pusha
sub
cmp
jl
push
push
imul
je
adc
add
sbb
mov
xor
popa
int3
call
pop
sub
lds
faddp
push
scas
pop
adc
loop
shlb
xchg
pop
mov
push
data16
int
inc
aam
push
popl
rcrb
jge
adc
ljmp
into
pop
inc
jle
adc
iret
inc
and
out
adc
movsl
or
aam
xchg
and
mov
or
xor
movsl
fwait
pusha
push
fadds
icebp
ds
andb
or
loopne
repnz
or
add
sbb
pop
and
sahf
push
fwait
jno
mov
mov
rcrb
sub
mov
jecxz
arpl
imul
sbb
adc
lock
insb
ss
lods
push
rolb
dec
cmc
ret
imul
cwtl
stos
imul
jne
push
add
stos
imul
jnp
insl
mov
pop
daa
rcl
sbb
stos
fsubs
add
inc
cmc
cmp
mov
add
loopne
dec
js
sbb
adc
mov
inc
or
stos
xor
push
mov
jo
pop
lea
add
ret
push
in
xor
adc
mov
rol
mov
ror
xor
shr
xor
idiv
ljmp
mov
rol
xor
shr
xor
add
add
add
mov
lahf
dec
orb
cmp
mov
push
or
and
xor
add
add
aam
sub
jbe
or
push
mov
sar
imul
or
testl
cli
and
and
cwtl
mov
xchg
push
aam
xor
push
repnz
cmp
mov
repnz
imul
fdivrl
pop
push
or
xlat
cmp
push
rol
in
rcl
add
add
push
mov
xor
fsubr
sbb
call
call
dec
xor
int
cli
mov
rol
imul
push
xor
and
add
loopne
xor
in
aam
xor
inc
in
shl
or
cmp
ud2
and
bound
push
bound
andb
and
les
mov
adc
mov
call
and
cwtl
loopne
in
dec
push
sbb
imul
lods
movsb
aam
pop
xchg
jge
push
xor
or
int3
lcall
in
push
xor
in
mov
clc
and
and
out
iret
or
xor
and
add
test
adc
inc
and
add
jb
mov
inc
jo
ret
push
jo
ficoms
add
mov
movsl
pusha
je
xor
mov
iret
push
loop
mov
imul
add
add
pop
jbe
sti
rcll
call
lretw
stc
loope
in
push
clc
jp
push
and
add
gs
fmul
add
push
cmp
enter
call
stc
xor
inc
mov
push
fmuls
loopne
pop
jo
cli
stos
adcb
aam
aaa
cmp
imul
in
in
inc
inc
sub
xor
out
rolb
inc
aaa
lret
loopne
xor
xor
dec
push
sbb
inc
xor
roll
add
loopne
or
jb
call
inc
bnd
add
push
inc
or
add
sahf
dec
pop
xchg
pop
mov
dec
xor
rorb
push
and
dec
xorb
and
nop
out
fs
push
pop
xchg
or
pop
or
lcall
push
xor
push
fimuls
rol
push
or
enter
pop
pop
add
jae
pop
fs
and
inc
pusha
pusha
pusha
push
pop
and
xchg
movsl
and
xchg
or
repnz
rolb
dec
sahf
and
dec
shr
and
add
fs
shlb
stc
test
addr16
stc
mov
adc
rorb
inc
dec
jb
test
mov
dec
shll
sbb
mov
or
and
add
and
loope
mov
add
orb
aas
pop
add
sub
fsubrl
mov
into
add
inc
cld
sbb
mov
inc
aaa
sub
add
sub
pop
ja
andb
xor
pop
shlb
push
scas
sub
mov
jmp
or
pop
inc
enter
and
mov
push
add
adc
mov
in
outsb
es
jae
mov
sub
icebp
xor
loopne
lea
jmp
lea
push
sbb
jns
out
mov
add
outsb
fbstp
pop
dec
jne
pop
adc
addb
mov
lock
ficomps
or
cmp
jbe
or
test
dec
sub
dec
sbb
aaa
add
push
jae
push
pop
fadds
repz
or
mov
in
notb
or
mov
push
pop
loopne
shll
mov
xchg
or
xchg
ljmp
mov
and
data16
inc
inc
mov
dec
sbb
sbb
outsl
adc
adc
sbb
dec
ss
movsb
rcrb
inc
add
dec
lea
inc
and
add
add
cmpsb
adc
cmp
fcmovnb
hlt
sbb
add
push
fsubs
aas
roll
add
adc
lea
jno
popf
xor
mov
pop
dec
add
mov
and
subl
loope
rorb
movb
mov
adc
ret
stos
or
sub
xor
push
sbb
xchg
shrl
sub
jo
and
and
aas
and
and
bound
dec
add
dec
add
adc
dec
xor
add
cmp
jo
cwtl
loope
inc
dec
xchg
adc
sbb
or
push
mov
inc
arpl
push
add
dec
jne
outsl
dec
bound
pusha
ljmp
shrl
add
sub
and
inc
cltd
push
add
mov
scas
pop
mov
ret
sub
or
sahf
notl
and
and
sub
or
test
dec
xchg
pop
aam
sahf
xchg
inc
negl
fildll
mov
inc
and
adc
adc
xchg
sub
cmp
mov
or
lock
sbb
lcall
inc
cmp
add
rorl
sub
cmp
wrmsr
and
gs
adc
adc
and
add
insl
push
jns
push
xchg
loopne
add
lock
or
dec
jle
es
cmpsb
lret
or
data16
pop
push
in
add
pop
push
enter
mov
push
jle
or
insl
and
in
sysenter
mov
jge
and
add
test
push
xor
mov
test
dec
ljmp
mov
jns
mov
push
pop
push
jmp
gs
xor
popa
and
lahf
movl
aam
sbb
scas
push
mov
ja
repz
aas
popa
push
shll
sbb
fidivs
sub
enter
pushf
mov
cmpsl
sahf
sbb
test
add
xchg
addb
or
jae
mov
and
add
test
add
aas
jns
test
or
mov
jmp
inc
lock
dec
lock
xor
clc
or
or
dec
dec
std
testb
pop
cmpsb
push
outsl
in
dec
mov
and
insb
loopne
or
rcrb
mov
or
cmp
jmp
aaa
jp
stos
mov
fcomp
sub
dec
andl
mov
mov
jnp
pop
add
idiv
push
lret
mov
std
lock
cwtl
inc
or
dec
xchg
aaa
inc
js
xor
push
push
push
js
ja
xor
add
dec
sub
push
insb
mov
ds
add
mov
dec
lods
push
jbe
loope
xor
adc
sub
push
loop
mov
dec
es
or
cmp
xor
cld
push
es
and
pop
subl
rorb
xchg
ret
movsl
adc
cli
in
in
sub
xchg
push
xor
and
push
dec
out
jge
xchg
xlat
pop
push
jbe
xorl
pop
hlt
out
push
sbb
dec
inc
or
scas
pop
stc
out
cs
and
addl
mov
test
jbe
mov
outsb
xor
ret
adc
cmp
icebp
divb
jbe
pop
mov
or
dec
add
lods
insb
rorl
jb
push
cs
popa
shl
fistl
push
pop
mov
inc
pcmpgtd
mov
fmuls
dec
and
sub
jb
inc
add
subb
mov
nop
enter
cli
xchg
je
out
xor
push
mulb
mov
push
js
subl
jb
adc
mov
fwait
cmp
jmp
loopne
in
dec
cld
jbe
push
push
sub
stos
jecxz
adc
jno
xor
imul
shl
stos
fidivl
sub
adc
cli
push
in
sbb
imul
dec
adc
andl
je
out
fnsave
stos
sbbb
xor
shlb
inc
rcl
or
push
and
or
push
js
xchg
mov
mov
xchg
mov
push
rcll
or
mov
pushf
xor
add
clc
mov
or
xchg
stc
mov
out
pop
jne
lods
cmp
or
sbb
test
jo
and
call
push
or
ss
adc
sub
cmp
lret
add
cli
jbe
sub
add
mov
sub
orl
push
bound
mov
ss
push
jl
ret
ljmp
or
repnz
adc
mov
jmp
mov
mov
decl
test
vpsubusb
adc
xchg
add
mov
inc
push
push
jle
pop
mov
cmp
jne
or
add
pushf
xor
cmp
insb
or
lret
xor
dec
lret
repnz
cmc
xchg
mov
and
sub
clc
push
xor
dec
and
sub
add
ret
mov
add
and
mov
pop
ret
xchg
inc
test
inc
les
cmp
inc
cli
inc
add
scas
xor
outsl
dec
mov
add
ja
imul
sub
xchg
pop
add
sbb
sti
jbe
xchg
imul
loopne
add
mov
cs
mov
push
dec
mov
leave
dec
sub
mov
pop
scas
bound
dec
jle
repnz
xchg
sbb
aaa
inc
mov
fidivs
stc
ja
add
jne
push
cmp
jb
mov
push
mov
push
sub
clc
mov
mov
loope
or
push
adc
dec
push
in
mov
pop
push
jmp
mov
dec
into
dec
jns
push
pop
pop
js
cmp
in
mov
sahf
into
movsb
dec
data16
test
jle
les
add
in
ret
or
ret
dec
xlat
fcoms
xor
mov
mov
push
cmp
xchg
icebp
sar
jae
xchg
mov
dec
xor
pop
ret
jmp
or
mov
xchg
mov
mov
push
or
add
push
add
jns
test
loope
add
hlt
adc
shrb
stc
and
adc
pop
mov
mov
inc
cmp
mov
jl
out
fstpl
inc
cmp
mov
movb
out
lock
jnp
insl
aam
sub
movzbl
adc
mov
pop
cwtl
xor
mov
jne
movsl
insl
sub
xchg
or
ficomps
incb
repz
adc
enter
adc
xor
iret
adc
repnz
mov
add
push
aaa
imul
xor
or
adc
icebp
out
popa
add
or
pop
push
pusha
sti
out
inc
fisttpll
xor
inc
cmp
jl
inc
mov
and
push
push
mov
adc
ret
push
xor
fcmovbe
add
jns
jbe
push
or
pushf
adc
fsubrs
and
push
out
or
jle
aaa
mov
sbb
xor
scas
cmc
xor
pop
ret
push
mov
add
das
iret
or
push
sub
push
jl
xchg
inc
sub
mov
xor
or
bound
xor
js
xor
mov
out
pop
jecxz
inc
dec
dec
adc
rsqrtps
and
cmp
sbb
mov
cmp
push
lea
stos
xor
mov
sbb
sub
popf
sub
push
das
mov
loop
inc
outsb
mov
pop
mov
xor
mov
pop
xor
push
add
or
push
mov
push
in
jg
jg
and
loope
and
add
mov
enter
sar
push
and
xadd
add
lret
mov
push
mov
dec
icebp
or
movsw
movsb
mov
adc
add
jne
push
aam
jp
jge
mov
iret
push
fidivrs
mov
lea
add
mov
mov
imul
add
sub
scas
lock
xor
add
inc
sub
fs
rcll
add
sub
adc
cmpsl
adc
lock
mov
inc
jp
popa
add
aas
cmc
lret
push
and
frstor
xchg
dec
sarl
inc
and
push
mov
rcl
jp
xor
test
push
sti
jl
mov
jmp
movsl
add
int3
or
shl
icebp
or
adc
jle
push
or
mov
stos
cmp
mov
sub
pop
divb
xor
es
cmp
sbb
and
add
aam
sbb
ret
xor
inc
and
scas
adc
divb
test
xchg
add
popl
popf
mov
push
push
mov
add
xor
lds
rcrb
jns
cwtl
les
and
or
popf
jno
sub
push
loopne
cmp
jmp
adcl
pusha
popa
mov
movsl
sub
xor
xchg
dec
adc
push
mov
add
inc
and
int
rclb
lcall
add
jp
inc
adc
es
jp
or
shlb
insb
ss
sbb
fwait
or
jg
jl
push
or
push
and
out
sti
pop
test
inc
add
call
and
mov
clc
sarl
pop
test
aam
or
out
push
pop
fwait
xchg
xor
aam
movsl
sub
push
dec
mov
push
ret
movsl
xor
mov
add
sub
inc
cmpsb
popf
sahf
pusha
cmp
mov
loop
mov
fimull
jmp
sbb
sbb
mov
pop
jmp
xor
mov
jae
loope
and
rcll
inc
push
jo
movl
dec
sub
addl
adc
sub
shl
sar
mov
in
adc
sbb
mov
popa
out
push
mov
and
adc
pop
mov
push
push
pop
ret
stos
pop
pop
pusha
fmuls
sbb
pop
jmp
rorb
adc
mov
push
cmp
addr16
in
movsb
add
ret
orb
and
daa
sub
mov
adc
sub
push
and
xor
int3
dec
cmp
or
mov
mov
push
fimull
or
adc
pop
xor
imul
sub
push
xor
fwait
and
or
mov
movsl
inc
sub
mov
or
and
inc
or
xor
and
dec
cmpsl
rolb
mov
add
adc
push
rcl
cmp
adc
inc
add
inc
mov
addr16
sbb
out
lock
xchg
dec
clc
enter
adc
xor
add
push
fistpl
mov
sbb
mov
mov
inc
aam
add
push
xor
fsubs
sbb
nop
push
cld
clc
je
lcall
sbb
imul
mov
push
in
lret
mov
pop
hlt
addb
fwait
pop
icebp
inc
fnsave
outsb
cmpl
add
add
pop
push
cmp
outsb
out
int3
pop
pop
mov
outsl
jl
repnz
push
xchg
push
push
push
or
pushf
lods
adc
into
dec
jmp
and
cmp
adc
imul
adc
es
push
and
mov
mov
xchg
in
addb
adc
pop
mov
adc
lds
fsubs
mov
or
inc
lcall
and
mov
pop
and
inc
packsswb
and
xor
add
out
cmp
jle
push
popa
rcrb
rorb
add
push
inc
cmp
in
mov
test
push
dec
sbb
cmp
add
in
xor
xor
push
in
lcall
ret
test
stos
jno
jmp
mov
or
popf
imul
sub
mov
roll
dec
insb
mov
or
loop
fnstsw
or
or
mov
pop
jbe
add
cmp
ds
or
les
xlat
cld
inc
jo
jne
addl
into
or
mov
add
out
dec
cwtl
push
enter
xor
and
xchg
lock
pop
jg
out
dec
add
add
call
arpl
and
cmc
movl
int3
xor
cmp
push
add
mov
sub
std
or
sarl
sbb
test
imul
lds
sbb
adc
push
add
sub
push
cmp
mov
dec
jnp
movsb
push
cmp
jne
push
adc
add
and
out
ds
mov
sub
int
inc
sti
or
pusha
mov
or
ficoms
add
sub
inc
loopne
addl
subl
add
push
adc
je
loop
pop
mov
dec
and
pushf
mov
jo
jmp
out
jge
xchg
jle
ret
adcl
imul
jne
jg
add
es
dec
adc
and
jmp
inc
add
fisubrs
push
xor
stc
pop
push
sub
je
inc
pusha
movsl
or
test
loope
xor
hlt
push
push
mov
jb
test
sbb
or
inc
mov
push
mov
cmpb
ljmp
mov
cmp
scas
cld
push
push
add
push
push
sbb
cwtl
iret
flds
mov
aaa
cmp
cmp
cli
dec
xor
pop
mov
and
scas
rcrl
std
add
mov
xor
enter
or
testb
push
cmp
sbb
or
clc
test
roll
add
cmp
jle
aaa
pop
leave
jmp
lea
push
sbb
mov
sbb
dec
adc
js
adc
inc
unpckhps
pop
sbb
lret
into
jne
data16
pop
pop
push
sbbb
or
jmp
cmpl
xor
lret
jmp
push
and
mov
xor
mov
mov
push
cld
pop
sbb
imul
or
fnstsw
out
int3
out
std
cwtl
nop
inc
xor
fnstenv
ret
push
ss
dec
sub
cmp
js
testl
xchg
ja
enter
jb
call
jne
cmp
jne
push
xchg
inc
pop
xchg
mov
inc
pop
adc
jbe
xchg
add
stos
push
subl
adc
xlat
xor
scas
jae
insl
pop
and
sub
loop
iret
shr
push
test
pop
push
sbb
add
rol
sbb
icebp
sbb
test
lock
adc
ja
sbb
xor
ret
xorl
mov
xor
pushf
push
push
push
jmp
ds
mov
or
hlt
jo
cltd
push
and
ret
push
fwait
push
pop
pusha
jo
or
pop
fwait
loopne
or
and
loopne
or
add
add
int
xor
sbb
add
lcall
loopne
inc
mov
xor
jmp
dec
rorl
dec
cmp
sub
int3
add
xor
push
je
mov
add
fbld
pushf
dec
and
add
and
fcomi
decl
jle
rolb
add
sti
in
nop
mov
add
xor
xor
lcallw
add
int
jo
ret
inc
push
imul
je
xchg
cld
sub
pop
imul
orb
and
hlt
sub
ja
loope
mov
mov
test
nop
cmp
popa
cld
mov
jae
sub
push
sub
shlb
test
loopne
shr
out
adc
sbb
lods
and
inc
or
or
cmpsb
mov
mov
fisubs
adc
mov
mov
ds
in
insl
pusha
fldl
decb
loopne
inc
adc
cmpl
push
ljmp
adc
dec
lods
pop
adc
mov
shlb
dec
and
int3
cwtl
add
xor
fistpl
inc
aad
inc
hlt
sub
mov
adc
push
jmp
xchg
fcmovnu
daa
push
dec
and
pop
ret
orb
push
and
scas
adc
nop
mov
xlat
push
mov
repz
mov
add
mov
jbe
movsl
jmp
push
cmp
cmp
or
xchg
test
mov
js
inc
in
popa
mov
or
adc
pop
test
mov
fcmovbe
aas
pop
cmp
pop
mov
ljmp
dec
dec
dec
pop
jns
dec
cmp
adc
pop
mov
xor
fs
sub
adc
jmp
dec
test
push
fwait
pusha
xor
add
pop
outsb
clc
stc
push
adc
mov
aaa
adc
inc
cmp
and
xor
adc
push
leave
js
xor
add
xor
orl
negl
out
add
sub
pop
clc
push
ds
jae
add
adc
add
add
and
loop
mov
pop
in
insb
mov
inc
je
aas
mov
rol
xor
cwtl
or
pop
xchg
mov
inc
sbb
pop
xchg
xor
fwait
jl,pt
mov
ret
push
dec
push
adc
adc
inc
dec
or
ficomps
and
pop
xchg
sbb
ret
sbbb
pop
or
lock
vunpckhps
push
pop
in
sbb
pop
push
ljmp
es
dec
lea
in
and
adc
gs
inc
push
out
jb
mov
and
ficomps
shl
dec
test
inc
push
mov
mov
adc
mov
add
adc
lcall
sahf
jbe
rolb
pop
fs
mov
and
push
mov
sub
mov
push
cmc
mov
dec
movsb
jbe
add
pop
sbb
les
inc
inc
cwtl
cmp
lock
pop
jb
cmp
pop
js
jmp
lcall
xchg
pop
xor
jp
push
mov
shll
loop
or
fcoml
mov
je
mov
jge
mov
shlb
fs
or
lret
inc
daa
fsubrs
cmp
push
out
push
push
inc
call
adc
and
push
shlb
sub
in
sarb
sbbb
or
add
sub
movsb
cmpsb
xor
xor
push
lock
dec
adc
xchg
insl
adc
dec
and
mov
or
icebp
std
jns
pop
je
jmp
or
push
dec
xorl
push
dec
out
push
or
sbb
mov
sub
cwtl
movsb
inc
sbb
js
jae
xchg
sub
push
cmp
adc
sub
pop
loop
inc
mov
push
xor
icebp
loope
sub
jnp
frstor
cmp
mov
jle
sub
dec
sbb
and
pushf
es
push
sbb
outsb
cmp
pop
pop
and
pop
mov
gs
jo
adc
mov
jae
or
and
push
inc
clc
jo
add
sbb
add
and
lret
lods
add
in
inc
orb
push
dec
movsl
push
loop
sub
push
cmpsl
sbb
jnp
sbb
push
stos
mov
inc
add
cld
ss
jb
push
es
push
pop
in
lock
jl
mov
push
push
test
mov
add
xchg
icebp
cmpsl
and
aaa
add
cltd
adc
push
push
add
mov
mov
addr16
xor
pusha
pushf
cmp
push
push
test
cmp
mov
sarb
xor
out
add
adc
ja
cmp
adc
jmp
adc
pusha
jne
jae
rcrl
sbb
inc
mov
or
dec
xor
adc
sbb
push
movl
loopne
mov
in
and
bound
mov
ret
add
inc
js,pt
xor
jecxz
and
dec
add
shrb
mov
les
mov
jmp
fdivrs
add
xchg
jne
sbb
mov
or
scas
cmp
jae
ja
and
or
fnstcw
mov
and
cld
sti
mov
clc
jg
fs
test
movd
movaps
sbb
jae
xor
jle
xor
add
lret
je
mov
or
xor
jg
push
push
sbb
in
xchg
ret
adc
jnp
mov
mov
or
add
adc
push
add
adc
add
sub
pop
add
outsb
ret
mov
mov
xlat
xor
pusha
addsd
int
add
fdivrp
fcmovb
sbb
sbb
inc
mov
push
push
and
jmp
dec
adc
imul
mov
mov
sub
cmp
push
movlps
incl
adc
das
cltd
nop
dec
sbbb
push
out
rcrl
mov
jge
push
mov
push
push
sub
push
push
sahf
frstor
mov
rolb
or
inc
sub
dec
ja
push
pop
add
inc
loope
ss
adc
xor
fnstcw
je
sub
mov
adcl
lahf
out
or
add
or
ficomps
push
rep
mov
dec
ljmp
lea
jb
das
or
fists
or
outsl
inc
push
int
pop
test
sbbb
add
push
cmp
lock
pusha
clc
jb
push
pop
mov
insb
adcl
and
cmovs
push
cli
and
scas
push
mov
inc
in
incl
adcl
jb
rep
jmp
mov
jo
sub
cmp
or
mov
enter
xor
lea
fdivp
sub
test
cmp
fs
mov
test
loope
rcll
xlat
xor
jbe
inc
add
add
mov
int3
lea
dec
add
movl
movsb
rclb
sahf
out
testl
push
loopne
sarb
jns
mov
mov
call
repz
in
lock
mov
cmp
hlt
clc
clc
cld
adc
das
push
adc
clc
fldcw
xchg
jns
jmp
and
add
nop
inc
pop
sti
popa
xor
and
pop
jno
fcomps
lea
jl
cld
or
mov
cld
out
mov
xchg
into
out
adc
pusha
xchg
daa
stc
mov
push
inc
sub
fwait
sbb
mov
fiaddl
jl
mov
push
jbe
out
add
cmpsb
and
push
add
nop
dec
dec
addr16
in
aad
lcall
repz
dec
fs
push
je
test
ds
mov
repz
repz
adc
adc
repz
adc
or
add
xchg
enter
jns
fsubr
xor
push
add
pop
setge
pusha
daa
ja
rclb
js
inc
dec
and
jl
bndldx
mov
js
jns
adc
fisubs
mov
in
or
fistps
or
fmull
notl
clc
lcallw
push
xor
clc
pop
lcall
add
cmp
or
orb
push
inc
and
pushf
push
lods
pop
jmp
test
cmp
mov
inc
inc
sub
mov
add
in
cs
jp
je
mov
dec
cld
jbe
mov
cmp
jne
mov
pop
push
movsb
sbb
xlat
mov
add
test
add
arpl
mov
cmp
adc
cmp
je
cmpsl
dec
mov
mov
mov
mov
pop
sbb
sub
testb
and
hlt
in
sbb
xchg
inc
lock
push
pop
sub
fcomi
add
add
push
sub
in
iret
jne
xchg
push
push
inc
dec
jmp
push
test
jne
push
scas
rclb
sub
notb
add
push
xchg
inc
push
lahf
sub
mov
push
out
and
adc
adc
jne
inc
cmp
push
or
dec
xor
dec
loopne
push
pushl
dec
adc
push
inc
inc
cli
xchg
fadds
pop
mov
jbe
and
test
and
dec
adc
adc
call
inc
cmp
cmp
sarl
mov
jae
arpl
dec
adc
out
adc
cmp
lret
jnp
or
es
or
add
adc
mov
inc
and
add
lods
pusha
inc
in
sarb
sbb
pop
cs
daa
shlb
imul
mov
or
cmp
xchg
iret
enter
fstl
clc
jnp
sub
add
ret
test
shl
fiadds
or
dec
leave
sbb
or
or
inc
pop
push
sbb
rcrl
pop
movsb
push
rol
inc
inc
cmp
aam
dec
adc
or
jne
sbb
shl
or
jg
jmp
xorl
jnp
mov
mov
xor
jmp
lods
jne
add
or
movl
jbe
sub
sub
jae
jno
seta
movsb
sbb
popf
inc
or
add
loope
imul
pop
cmp
out
out
add
orl
outsl
mov
stc
push
bound
hlt
cmp
jae
mov
push
hlt
aad
adc
lret
rcrl
je
or
inc
sub
fidivrs
or
push
add
xorb
jmp
je
mov
and
inc
movsb
outsb
in
inc
add
inc
cmp
daa
inc
cmp
xchg
cli
mov
and
pusha
into
and
cld
push
clc
movb
lea
neg
mov
in
mov
cli
or
add
jmp
or
push
ds
mov
inc
ds
jbe
xor
push
cld
jb
jl
fstpt
sub
add
jmp
mov
dec
mov
mov
dec
dec
mov
inc
cmp
jb
lds
or
adc
mov
or
push
push
dec
aad
popa
ja
cs
push
cmp
imul
sub
inc
or
fs
lcall
sub
jb
lea
lods
and
mov
or
cmp
jne
mov
push
cmp
aaa
dec
jae
jne
es
jne
fsubs
ss
or
nop
jge
ret
adc
push
dec
jmp
sahf
lahf
out
adc
jmp
std
std
jmp
cld
js
out
cld
ret
pmaxub
dec
adc
push
jb
jge
cmp
add
sub
jmp
rclb
inc
pop
adc
jb
cmpl
jno
aam
pushf
mov
out
or
testb
andb
test
adc
jo
js
je
adc
jne
loop
inc
mov
aad
mov
std
or
sub
andb
add
mov
adc
cmp
xorb
or
push
les
mov
lods
xor
ficoms
push
into
and
call
adc
or
jg
add
mov
mov
dec
cs
add
sahf
jno
f2xm1
les
popa
sub
and
sub
jmp
jae
adc
pop
cmc
imulb
pop
jle
push
push
pop
div
add
les
jb
push
cmp
mov
rcll
pop
pop
clc
les
js
push
jne
or
lods
arpl
js
pop
sub
pop
adc
push
ss
push
mov
add
es
jo
sub
push
sub
or
xor
call
or
lea
sub
nop
xlat
loope
shll
or
or
pop
add
aam
or
clc
cmpsl
lock
cmc
loope
pop
add
mov
mov
sub
add
and
xor
adc
fnstenv
mov
or
lods
push
mov
dec
push
mov
adc
jle
mov
sbb
mulb
cmp
test
inc
fstl
xor
lcall
inc
jmp
cmp
jne
orl
jmp
adc
jne
sub
add
sti
add
dec
lea
adc
sbb
jns
jg
pop
mov
xor
dec
or
lret
je
cmp
and
aaa
fbstp
or
adc
dec
add
add
addl
xchg
incl
push
lock
lret
or
test
lahf
dec
clc
or
lret
sub
jmp
xchg
fidivs
cmpb
lret
sub
cmp
ja,pn
xor
leave
cmp
jae
push
movsb
and
xor
add
and
push
fmull
or
adcb
sbb
lods
and
es
pop
cld
inc
adc
mov
add
inc
cmc
mov
nop
test
jne
test
jne
push
addl
or
or
push
jnp
jne
jbe
inc
mulb
inc
xlat
lcall
sub
mov
mov
fcoml
sub
das
in
rolb
sbb
loop
pop
lds
pop
pop
push
xchg
aaa
mov
push
mov
jmp
mov
movl
sub
popa
push
sub
popf
dec
mov
pop
nop
xor
jmp
adc
stos
mov
push
jecxz
shr
cmp
push
fisttpl
adc
jmp
jno
jbe
stc
jle
les
or
fdivs
and
or
jge
and
test
mov
adc
xor
ds
adc
adc
imul
xor
inc
adc
or
data16
test
aaa
outsb
mov
clc
dec
and
shll
inc
aaa
sbb
fs
pop
add
mov
or
push
test
sub
testb
inc
mov
mov
xorb
mov
orl
ss
sub
out
sbb
push
aas
push
push
bound
xlat
es
push
jmp
xor
adc
cmp
jg
pop
pop
inc
test
jne
stos
lock
push
int3
push
push
dec
push
movsb
ret
bound
stos
and
adc
sbb
or
hlt
adc
and
fs
add
and
pusha
inc
dec
ret
inc
nop
mov
inc
and
nop
add
fsts
jae
fwait
or
jecxz
roll
sbb
xor
cltd
mov
rcrb
cmpsl
xchg
loope
cmp
jae
sub
add
inc
mov
icebp
add
jmp
outsb
call
call
je
inc
cmp
jb
lea
push
adc
cmpsl
popf
mov
les
in
jp
push
add
mov
cmp
mov
and
pop
sar
mov
dec
add
enter
es
mov
mov
test
ret
mov
lret
icebp
out
popa
cmp
jne
push
out
cmp
and
xchg
insb
sbb
adc
fldenv
and
pop
jmp
pop
ret
add
pop
ret
sbb
fcoml
and
add
movsl
jl
pop
jle
mov
inc
in
gs
gs
leave
jae
test
mov
sub
xchg
andl
pop
mov
jnp
add
mov
or
ja
test
call
xor
or
dec
xor
adc
decb
std
movb
sub
outsb
fiaddl
leave
sub
std
add
mov
icebp
aas
xchg
push
clc
push
push
push
mov
sbb
nop
shlb
stos
and
je
adc
xor
aam
or
rorl
loop
sti
pop
adc
push
pop
lahf
sbb
loopne
push
add
mov
sbb
jp
jbe
cmp
fcomps
ficomps
decl
mov
add
scas
shrb
les
jle
lods
fwait
jle
push
insl
popf
inc
xchg
aad
push
popf
aaa
sahf
pop
loope
clc
stc
decl
int3
push
jg
orl
jo
scas
push
imul
pusha
jb
pop
add
lsl
inc
adc
mov
inc
rorl
in
xor
bnd
fwait
xchg
cld
pop
negl
or
and
shrb
out
mov
or
movsl
scas
inc
push
mov
or
aaa
repz
push
imul
sbb
scas
cmp
adc
inc
shlb
and
or
add
test
ljmp
sbb
ficomps
mov
mov
rol
add
popf
scas
imul
pop
pop
fmuls
js
xor
dec
fcompl
fwait
loopne
out
add
dec
adc
mov
addr16
xlat
cld
in
sbb
ss
jp
and
lods
call
test
ja
dec
mov
cmp
je
cmpsb
faddl
xchg
jnp
ret
call
push
enter
pop
pop
push
jmp
push
sbb
mov
loope
mov
movsl
je
loopne
in
leave
testb
add
aas
sub
sbb
mov
out
and
pop
sbb
add
pop
imul
inc
and
add
fstpl
push
mov
push
pop
shlb
fistpl
int3
add
push
push
ret
lcall
cmp
jne
or
mov
adc
or
je
jbe
inc
mov
adc
cmp
or
sub
add
xor
mov
cs
sbb
rcrl
add
xchg
and
imul
add
mov
out
scas
mov
pop
push
mov
mov
into
mov
dec
add
mov
jbe
mov
dec
nop
dec
push
push
pop
push
inc
push
inc
cwtl
adc
sbb
push
pop
cmp
test
pop
dec
pop
loop
pop
call
cmp
fnstcw
daa
mov
sbb
mov
adc
mov
adc
sbb
mov
cmp
shl
data16
ljmp
jg
sbb
adc
jp
sti
or
stc
and
fyl2xp1
pop
in
xor
les
dec
jge
pop
jne
aaa
clc
inc
pop
sub
mov
jl
lret
loop
or
loopne
or
inc
pusha
pop
out
xor
pop
push
inc
add
or
test
and
push
jb
enter
sbbl
test
scas
cmp
cmp
sub
inc
adc
add
pop
mov
mov
adc
xor
mov
bound
gs
mov
pop
push
and
out
jmp
popa
cmpsb
push
and
call
sub
cmp
mul
in
dec
mov
cwtl
dec
mov
gs
push
push
pop
jle
ja
xor
xor
add
add
sub
je
fisubl
cld
or
pop
sbb
adc
imul
jo
pop
add
mov
iret
add
daa
add
enter
or
cmpsl
jnp
dec
add
in
pop
dec
cmp
je
lcall
flds
add
pop
enter
xchg
pop
push
push
and
push
pop
jb
or
nop
out
or
or
add
or
sub
nop
or
pop
or
loop
or
add
or
lcall
out
or
ror
repnz
ja
push
imul
adc
inc
push
fcomps
adc
fwait
sub
ret
enter
inc
or
ds
pop
enter
adc
dec
push
jns
ret
adc
jb
mov
adc
nop
adc
in
cmp
pop
pop
mov
sbb
sbb
sbb
sbb
nop
out
add
add
sbb
inc
push
sbb
sbb
mov
sbb
je
pop
sbb
mov
jge
sbb
sbb
jae
addb
pop
mov
and
ret
sub
cmp
fldt
xchg
mov
add
cmp
xchg
daa
loopne
push
and
mov
repz
in
jg
push
push
in
jno
repnz
sub
rcr
repz
ret
adc
aad
cmp
nop
out
inc
mov
jns
fwait
out
push
pusha
shlb
jbe
add
mov
aaa
jb
je
call
and
popf
dec
cwtl
jmp
add
mov
ljmp
sbb
out
in
cmp
xorl
cltd
mov
mov
out
xor
cmp
jge
lcall
lock
push
nop
inc
lock
addr16
jns
pslld
seto
out
std
repz
cmpsb
repnz
std
hlt
hlt
roll
fdivs
or
fwait
mov
jnp
inc
jg
idivb
sbb
pop
idivl
dec
push
jns
cmp
clc
clc
mov
cltd
adc
inc
stc
enter
lock
cli
cli
and
and
iret
sti
sbb
fcoml
cld
cld
cld
je
cld
aad
mov
push
ss
leave
jnp
std
xor
sbb
outsb
arpl
iret
adc
dec
shrb
mov
popa
bound
data16
movsl
lea
in
imul
ljmp
jecxz
ja
inc
xor
mov
push
inc
push
nop
in
icebp
xchg
stc
daa
nop
or
xchg
sti
out
out
and
insb
out
outsb
call
inc
dec
sti
sub
xor
and
mov
cltd
in
jns
cmp
add
push
adc
orb
inc
repnz
add
cli
cmp
push
cli
sbb
dec
push
repz
pop
and
sar
push
stc
loop
xor
sbb
stc
div
negl
mov
xor
add
and
adc
out
clc
xor
inc
or
lret
sti
sbb
pusha
cmp
mov
pop
enter
rcll
inc
pusha
sbb
cmp
and
mov
cld
sub
mov
xchg
pop
insb
loop
icebp
mul
pop
and
imull
xchg
mul
sbb
pop
insb
nop
out
cltd
out
xchg
inc
pop
pop
inc
mull
test
sti
testb
lcall
mov
testb
pop
xchg
negb
cs
out
jno
loop
push
inc
negb
notb
sub
xchg
add
sbb
repnz
cmc
pop
pop
repnz
cmc
jae
movsl
test
cmc
div
jne
cwtl
xlat
idivb
and
pop
add
clc
clc
sbb
popa
cmp
mov
pop
push
jno
xchg
hlt
pop
sub
xchg
cmp
hlt
push
hlt
pop
lock
sbb
data16
frstor
idivl
jo
pop
xor
push
sti
lahf
pusha
imul
ds
pop
test
adc
loope
loope
repz
mov
repz
or
pop
mov
test
xchg
repz
repz
jno
xchg
andl
or
sbb
jmp
jno
mov
xchg
repnz
pop
je
jo
sbb
dec
in
in
popf
dec
push
jno
and
add
add
pop
je
loope
sbb
mov
and
nop
outsb
divb
icebp
and
icebp
test
lcall
cmc
cmc
xchg
inc
fcompl
add
aam
and
jns
mov
ret
popf
lock
dec
push
stc
stc
cmc
mov
lock
lock
sbb
scas
jne
and
test
inc
cli
test
ret
mov
out
add
sub
out
mov
and
jl
ds
add
add
enter
stos
add
adc
add
push
jnp
adc
loopne
sub
push
sbb
add
jmp
and
mov
dec
or
add
sahf
pop
and
push
inc
add
mov
insb
push
push
push
push
int
fxch
repz
pop
cli
pusha
pop
cmp
insb
ds
push
scas
push
mov
repz
aas
pop
sub
repz
int
push
pushf
pop
mov
imul
or
out
sahf
add
inc
or
pop
lahf
or
hlt
push
rcrb
das
sub
add
mov
aad
pop
aam
lock
scas
mov
push
or
stos
adcl
pop
pop
aas
imul
enter
or
adc
inc
aad
pusha
or
push
add
fdivs
fildll
mov
js
fcomps
bound
and
add
insb
adcb
sub
dec
lret
int
xor
sub
and
mov
mov
jecxz
enter
push
inc
jl
sub
lock
mov
add
fs
adc
in
inc
xor
pop
mov
loopne
movsl
or
fsub
stc
push
adc
js
cmp
fdivrp
add
push
movsl
jne
insl
test
push
inc
movsb
popf
adc
cmp
mov
or
lcall
sub
cmovp
inc
inc
inc
inc
pop
insb
jo
inc
sarb
mov
jmp
jb
cmc
xor
jmp
mov
mov
and
gs
iret
js
in
pusha
xchg
add
popa
sub
pop
js
cmp
cmp
or
adc
dec
repnz
je
pop
pop
mov
xchg
roll
sub
inc
inc
stos
notb
pop
cmp
enter
add
xor
push
mov
jmp
push
cmp
dec
sarb
jne
xchg
xor
inc
cmp
lret
pop
inc
sub
push
shlb
sub
xchg
mov
xor
add
mov
fimull
ljmp
jne
or
xchg
cltd
jo
sub
roll
pusha
dec
cmc
int
loopne
xor
xchg
pop
xor
inc
push
stc
aad
mov
jne
lret
loop
sbb
ss
mov
push
adc
or
mov
push
jmp
sbb
test
dec
outsb
out
jns
mov
pop
shlb
dec
mov
dec
push
mov
mul
push
lcall
push
rcrl
sub
jno
mov
clc
mov
ja
add
inc
mov
pop
pop
movsb
dec
jmp
out
clc
push
enter
add
mov
add
jmp
insl
or
ljmp
sbb
add
in
fimuls
pop
or
hlt
mov
adc
dec
jne
leave
adc
cmp
pop
push
sbb
add
inc
call
pop
adc
mov
xor
das
mov
stos
xor
repnz
jg
adc
mov
mov
incl
inc
decl
jne,pn
loop
lock
iret
repnz
mov
push
cmpl
mov
jbe
push
cltd
pop
idiv
pop
mov
pusha
or
xor
add
negb
mov
mov
xor
cltd
clc
ja
jo
jmp
cmp
jae
dec
jge
pop
push
jb
pop
jb
pop
pusha
loop
jbe
mov
dec
nop
jo
jno
jmp
dec
ret
dec
adc
cmc
xchg
fs
fs
jmp
push
jg
lret
imul
add
call
or
sbb
sbb
dec
dec
je
push
push
inc
sbb
adc
add
js
or
xchg
jno
pop
insb
adc
adc
dec
pushf
movsw
pop
decb
push
lret
dec
repz
test
mov
inc
pop
or
cmp
xchg
inc
lcall
popa
and
pop
xchg
adc
add
fs
div
stc
mov
cmp
mov
push
push
pop
add
or
inc
popa
add
test
jmp
mov
push
fisubrl
pop
lds
stos
addr16
pushf
sbb
and
pop
cmp
inc
enter
ja
insl
mov
aas
jge
ss
push
push
cltd
pop
idiv
xchg
inc
xor
xchg
inc
out
cmp
mov
cli
es
xchg
push
jmp
or
push
or
mov
inc
mov
push
enter
popf
sub
adc
test
insl
rclb
adc
pop
adc
xor
loopne
or
je
xchg
xchg
sbb
sbb
jae
mov
jae
mov
sub
sbb
mov
pop
inc
or
add
mov
popf
mov
pop
jg
pop
jno
rcll
pop
sub
loopne
pushf
hlt
dec
loope
hlt
inc
xor
daa
sub
sub
cmp
push
mov
ror
xchg
push
cmp
js
push
jmp
jge
pop
je
sbb
pop
pop
cmp
jle
add
or
push
mov
adc
outsl
mov
je
int3
dec
jo
mov
je
sti
push
fldt
inc
mov
mov
dec
or
int3
mov
bound
lret
mov
xor
insb
ret
ret
pop
popl
call
lods
jnp
jno
out
ja
push
leave
push
or
add
sub
mov
jle
or
stc
pop
pop
std
loopne
push
adc
lcall
push
lock
das
xchg
or
sub
add
pop
adc
push
je
mov
push
movsb
sbb
adc
xchg
aad
mov
pop
cli
and
or
mov
push
hlt
or
add
ficomps
inc
or
loopne
adc
adc
idivb
jnp
push
out
call
inc
or
lods
movsb
out
pop
pushl
gs
dec
ljmp
insb
ret
xchg
rorb
inc
and
pop
xchg
cwtl
sub
xchg
rolb
hlt
dec
cmp
sub
and
sbb
outsl
daa
sub
mov
aam
add
push
add
in
les
mov
aam
ret
js
inc
enter
cs
pop
mov
incl
clc
mov
inc
inc
cmp
je
xchg
pop
lcall
fs
orb
xchg
add
fidivrl
dec
xor
jle
dec
je
popa
dec
mov
and
mov
fcoms
adc
add
inc
adc
fdivr
hlt
push
mov
inc
sub
imul
sbb
or
pop
dec
lret
pop
sbb
mov
or
bound
shll
add
ret
outsb
or
xchg
dec
push
add
test
movl
inc
leave
lock
mov
addr16
test
add
xchg
lret
test
sbb
imul
daa
je
mov
inc
sarl
mov
or
lock
or
loopne
inc
roll
push
pop
inc
adcb
rol
dec
push
imulb
add
and
cli
frstor
in
ja
sbb
dec
movsb
jb
or
inc
lret
jns
xchg
xchg
addr16
lret
sbb
mov
adc
adc
push
lahf
lock
fcom
cmp
iret
add
shrl
inc
ret
stc
lea
add
popa
dec
or
push
in
or
pop
mov
jmp
cmpb
dec
sbb
cwtl
sarb
mov
addr16
imul
sub
and
and
xor
sub
clc
ret
and
cmp
cmpsl
pop
call
inc
in
inc
sbb
cmpsb
les
cmpsb
dec
out
dec
js
in
or
add
aam
hlt
jbe
je
xor
dec
ljmp
inc
push
pop
push
push
adc
push
sbb
mov
shrb
mov
or
mov
fsubl
xchg
sarl
push
jmp
cmp
incb
or
inc
inc
ss
jns
mov
lcall
out
xor
ja
or
mov
movsb
sbb
cltd
pop
xlat
xchg
xor
add
push
mov
mov
pop
clc
xor
clc
and
fucomp
xchg
xor
es
inc
pushfw
and
aas
pop
pop
cmp
in
pop
sbb
lods
pop
push
mov
inc
mov
mov
inc
cs
jmp
in
add
add
repnz
inc
cmp
pop
fidivrl
mov
xor
adc
repnz
jo
xchg
mov
test
into
xchg
mov
inc
adc
lcall
add
fdiv
mov
pusha
hlt
add
jp
mov
rclb
loope
punpckhdq
mov
cmp
xchg
push
arpl
jmp
pop
arpl
xchg
rclb
pushw
jno
fs
cmp
and
iret
cmpb
push
xlat
out
std
rol
inc
add
mov
movsl
cmp
fnstsw
movsb
cld
mov
add
adc
loop
cli
inc
pusha
into
or
xlat
test
sar
or
into
push
mov
jbe
jbe
sub
jbe
push
cmp
and
ret
inc
push
mov
mov
ds
shrb
bound
pop
orb
js
xor
lcall
or
call
imul
xor
ja
pop
mov
aam
mov
imul
or
imul
rorb
int
gs
push
adcb
xor
jne
inc
push
aam
pushf
enter
pop
push
pop
sub
inc
out
cmp
mov
add
xor
test
add
jo
pop
sahf
std
data16
jno
repz
or
xor
sub
sbb
adc
adc
imul
ret
dec
inc
stc
fs
add
jl
mov
gs
sbb
addr16
sbb
imul
cmp
mov
push
roll
and
cmovo
movsl
in
je
or
imul
add
sbb
adc
cmp
hlt
inc
or
std
xor
jp
sbb
jge
loopne
faddl
inc
mov
sbb
ja
fldt
dec
dec
jbe
cmpl
out
mov
xor
xchg
or
mov
sub
pop
mov
sbb
xchg
jle
repnz
inc
mov
imul
adc
or
pop
lcall
add
test
push
pop
icebp
cmp
push
pop
xor
shlb
pop
clc
pop
lret
shl
cs
cmp
lock
fdivrs
fwait
push
fadds
in
adcb
call
loope
out
sbb
sti
sub
push
xchg
push
fs
inc
subb
cmpsl
aam
test
push
mov
mov
sub
xchg
or
sub
mov
lock
add
fldl
jmp
mov
and
daa
test
std
add
pop
les
mov
mov
jecxz
lods
movsl
jmp
push
lea
loopne
out
inc
cmp
xor
push
inc
fisubrl
add
call
xor
das
add
jg
push
xor
cmpsl
call
and
pop
jnp
cli
sbb
je
add
iret
xor
push
dec
or
aad
dec
mov
jecxz
sub
jne
inc
xchg
mov
push
or
sti
sbbb
add
loope
sbb
dec
xchg
xchg
pop
push
or
cwtl
xlat
lock
icebp
mov
push
jl
jg
mov
fmulp
dec
adc
sbb
adc
cmp
test
jo
leave
or
inc
adc
sub
roll
mov
punpcklbw
and
mov
pop
pusha
out
push
call
xchg
popa
jl
lcall
push
sub
enter
or
lock
add
mov
cmp
mov
adc
lds
sub
lock
or
push
sbb
and
mov
jle
or
sbb
sbb
cmp
sub
dec
push
lods
pop
or
mov
pop
outsl
push
push
movl
cmp
es
rcl
stos
sarb
sti
or
nop
cmp
adc
fmul
adc
adcb
pop
jo
sub
cmp
imul
inc
rorl
mov
data16
pop
cld
sub
movsb
je
and
out
fs
dec
xor
push
fisubrs
adc
or
or
es
and
lret
dec
xchg
cld
lret
ret
or
shl
or
xor
or
cmp
add
aas
adc
repz
aam
add
testl
mov
dec
cmc
mov
sbb
jb
call
mov
or
outsl
sar
mov
pop
frstor
test
out
sti
hlt
mov
and
xor
mov
or
ja
sub
inc
call
or
popf
add
lret
lcall
cld
push
mov
push
push
dec
jns
xchg
mov
sub
cmp
push
push
and
out
enter
and
int
jg
or
push
orb
mov
jmp
and
je
and
mov
adc
aad
xor
jo
jmp
mov
movsb
lahf
test
pop
mov
aas
in
scas
out
cmp
and
sbb
lret
add
lahf
dec
sti
and
jae
ljmp
add
inc
or
add
popa
repnz
call
jbe
addr16
inc
jo
jg
or
push
mov
mov
push
pushf
out
push
jo
mov
or
jno
xorb
rorb
or
sbb
lock
aas
adc
cmp
dec
popa
mov
cmp
push
hlt
addl
arpl
rorb
add
cmp
mov
push
add
cli
mov
cmpsb
push
sub
or
jb
jge
in
cmp
std
jne
fsubr
stos
enter
outsb
call
sub
or
xchg
inc
pop
ret
push
mov
inc
call
insb
int
xor
mov
es
push
nop
xchg
repz
jle
into
shlb
lock
out
into
dec
shlb
jmp
push
mov
xor
loope
dec
mov
and
xor
nop
push
stos
and
inc
jae
dec
sub
cmp
jbe
aam
add
test
push
cmp
pop
leave
inc
lea
and
leave
xor
xchg
ret
mov
aaa
jmp
loopne
jg
movsb
fisubrl
push
loopne
andb
jg
or
lcall
pusha
and
jne
jle
pusha
pop
outsb
incl
loopne
inc
sbb
incb
xor
inc
dec
aas
xchg
sahf
push
push
inc
adc
mov
mov
inc
mov
inc
inc
inc
dec
jne
mov
inc
insl
xor
jo
jl
sbb
sbb
mov
mov
jo
mov
inc
dec
jne
jle
add
mov
add
mov
inc
push
jnp
test
xor
or
rorb
fsubl
or
fmull
je
loopne
adc
addl
push
mov
push
or
and
mov
test
sbb
sub
rcrb
lcall
add
adc
mov
push
xchg
push
add
push
xchg
ss
int3
cmp
mov
xlat
cli
jo
insb
ljmp
sub
jl
or
mov
or
insb
add
psraw
frstor
call
loopne
or
pop
sti
sti
sub
jmp
xor
dec
sbb
mov
xor
movsb
jmp
aad
out
ss
push
out
arpl
adc
xchg
jno
es
push
pop
ljmp
xchg
out
nop
leave
insb
inc
and
int3
imul
cmp
ret
lret
stos
int
cmpl
inc
cmp
add
cmpsb
mov
add
les
outsl
cmp
adc
mov
pop
out
pop
inc
andb
mov
pop
cmp
cmpsl
ds
lods
inc
jae
scas
nop
mov
sbb
adc
cli
rolb
mov
inc
xchg
int3
xchg
and
or
cwtl
rol
aam
xchg
sarb
int3
push
cwtl
mov
outsl
scas
jl
jne
cld
sar
aaa
out
jle
in
stc
mov
or
push
cmpl
add
ffree
inc
jno
cmp
rolb
dec
pusha
mov
sub
jne
add
xor
in
fldl
xchg
sub
mov
mov
or
mov
lea
jnp
adc
cmpl
push
pop
mov
jo
xor
sub
inc
and
xor
push
sub
es
cli
dec
xor
pop
inc
or
je
push
mov
jo
jecxz
lret
lahf
jne
test
loopne
in
or
pop
jbe
mov
enter
je
mov
push
inc
ret
sbb
jo
xor
test
add
dec
mov
jo,pt
call
mov
hlt
jbe,pt
jmp
push
ficomps
push
jbe
pop
mov
out
add
mov
xchg
mov
jne
sbb
push
cmp
rcl
pop
sbb
daa
mov
jle
pusha
xchg
jns
aaa
inc
pop
lret
xchg
mov
push
ficoms
jnp
mov
jns
add
push
xor
je
cmp
cs
call
cltd
sbb
cwtl
sub
cmp
mov
xchg
push
push
mov
or
aas
push
cs
ds
jmp
lcall
lea
pop
cmp
inc
lret
test
out
xorl
and
sbb
pop
xchg
lret
or
outsl
insb
push
cld
push
jo
ficoml
gs
inc
mov
addl
jecxz
mov
js
add
cmpsb
insb
test
movl
mov
fnstcw
inc
sub
push
outsl
mov
dec
cmp
dec
push
sub
add
ret
dec
push
fisubrl
scas
and
lret
bound
movsb
pushf
xchg
filds
push
pop
jecxz
mov
inc
test
xor
xchg
rol
jns
movsb
mov
fdivp
iret
adc
and
jle
xchg
rorb
clc
and
sub
and
jb
cmp
pop
jb
pop
inc
dec
pop
inc
test
mov
lcall
push
ud0
test
dec
jp
idivl
and
scas
add
jne
shll
mov
or
mov
mov
insl
jg
jno
jo
jge
andl
or
inc
dec
loope
fisubs
cmp
jle
mov
mov
pushf
cmpl
jbe
mov
rcrl
movsb
shll
cmpsb
and
daa
test
into
jno,pt
xchg
dec
ja
mov
stos
xchg
mov
pop
iret
cmpl
mov
jge
and
imul
addr16
nop
lret
loopne
aas
add
push
mov
sub
dec
mov
inc
add
dec
rcrb
shll
jp
inc
sub
andl
orb
or
inc
lret
sbb
mov
sub
testb
or
fsubl
gs
fcomps
int3
in
in
data16
popf
enter
icebp
out
movsl
shrb
test
xorl
cmpsl
in
cs
mov
dec
cld
adc
jno
aam
sub
aam
addb
jp
push
adc
jno
aam
or
or
sbb
mov
mov
das
pop
jno
movsb
test
and
jmp
jge
adc
add
jl
mov
adc
sub
xchg
mov
bts
jmp
out
test
mov
or
movb
adc
adc
add
loop
stos
pushf
inc
dec
fs
js
je
sub
lahf
push
clc
mov
mov
cmp
xchg
adc
pop
or
push
iret
repz
inc
cmp
sub
sbb
xchg
pop
add
mov
and
lahf
add
adc
xchg
mov
add
and
jnp
pop
nop
adc
cmp
pusha
nop
add
adc
lahf
add
add
out
fidivrs
in
cmp
notl
ret
inc
adc
sbb
sub
mov
lahf
andl
bound
push
xchg
test
das
into
push
popa
sbb
adc
ffree
cmp
js
and
and
data16
xor
int
adc
dec
es
mov
notb
int3
rorl
jge
inc
mov
mov
xlat
mov
mov
movsb
stos
test
cltd
inc
imul
and
or
push
mov
aam
or
xchg
adc
inc
bound
mov
add
add
inc
or
and
pop
movsb
fimuls
jno
mov
adc
dec
rcr
mov
sbb
hlt
fdiv
mov
lods
push
hlt
call
inc
and
mov
inc
enter
and
fld
roll
popa
testl
je
loopne
popf
fs
dec
adc
insb
stc
jae
mov
add
cmpl
xchg
dec
or
popa
push
and
addl
imul
sbb
divl
bound
xor
xchg
and
and
or
push
adc
mov
jns
je
jbe
ret
addr16
lods
push
js
in
aaa
inc
lcall
fcom
or
pop
test
andb
imulb
xor
data16
and
outsl
push
or
push
inc
das
dec
ret
xor
aam
add
cmp
and
sbb
scas
sarl
loopne
cmp
sub
loope
ret
ffree
pop
sub
faddp
ret
movsb
push
mov
sbb
fsubrs
sbb
bound
mov
dec
add
fsubrs
inc
and
imul
or
jl
ljmp
pushf
loopne
mov
jg
test
add
add
sbb
sbb
adc
mov
adcl
stos
xchg
in
test
xchg
mov
lea
inc
inc
nop
pushf
lods
lret
or
inc
dec
mov
ficompl
pop
test
and
xchg
mov
push
inc
leave
rolb
adc
adc
data16
and
hlt
add
incl
and
pop
push
add
shrb
sarb
sbb
inc
inc
mov
jl
mov
inc
or
test
pop
popa
or
adc
push
dec
or
dec
loope
add
sub
mov
sbb
and
lock
push
test
cmp
sub
mov
fnsave
jbe
push
inc
mov
test
insl
test
or
inc
mov
sbb
adcb
or
pop
divl
in
sub
ds
or
or
mov
shr
adc
jle
push
push
jne
dec
cmp
ljmp
jns
andb
push
jg
test
sub
pop
mov
add
add
mov
loopne
add
add
xor
je
aam
sbb
and
addb
ljmp
xchg
push
push
add
push
lock
adc
or
adc
and
add
or
inc
sbb
decl
les
test
pop
mov
pop
rorl
nop
xchg
dec
xchg
adcb
push
push
jg
sbb
test
out
jecxz
or
inc
xor
sti
rorb
popf
in
mov
clc
aam
inc
out
fadd
cmp
mov
cmp
mov
mov
cmp
xchg
imul
movzwl
test
in
or
call
loop
push
or
pop
jmp
dec
sub
mov
dec
repnz
lea
ficompl
xor
loope
jl
cmp
mov
add
bound
hlt
pop
sbb
pop
sar
pop
mov
movsb
cs
pop
cmp
mov
inc
mov
sbb
aam
pushf
lret
in
clc
fsubs
inc
jae
clc
lret
decb
add
ljmp
je
sbb
scas
pushf
lret
and
push
pop
add
jnp
mov
int
add
sub
add
mov
adc
out
cmp
mov
pop
or
imul
lret
or
mov
mov
ja
movsl
mov
mov
sahf
dec
enter
or
adc
movsl
hlt
hlt
stc
out
mov
cwtl
je
or
inc
insb
je
and
sbb
mov
test
outsb
loope
insb
cmp
in
sbb
sub
adc
jnp
loop
and
pop
or
xor
mov
movb
dec
xor
repnz
movsl
jg
jmp
cltd
sbb
imul
lcall
pushf
data16
loope
xlat
je
or
stos
mov
mov
push
jbe
jbe
pop
cmp
adc
ja
dec
mov
sbb
jle
inc
je
adc
push
or
add
ds
mov
movsl
push
cld
cmp
lock
push
dec
nop
and
and
into
testl
mov
lock
add
negl
dec
and
in
and
add
or
sub
outsb
imulb
es
sub
inc
mov
ficompl
add
clc
stos
mov
add
push
insl
cmp
xor
xchg
test
int3
negl
lea
pushf
cli
repnz
lret
or
lcall
loopne
cmp
pushf
jbe
std
je
mov
push
mov
add
mov
aas
push
and
add
add
icebp
fimuls
setp
hlt
mov
pop
sub
enter
mov
mov
cmpsb
daa
lods
dec
pop
add
sub
adc
xorb
add
lea
out
pop
cmp
jns
push
sbb
ret
jle
sub
shl
sub
loop
aad
sub
add
addr16
mov
pop
sbb
cmp
je
test
or
sbb
push
mov
popa
aas
add
xor
rorl
test
adcb
mov
push
pusha
pop
add
mov
adc
push
jb
xchg
negb
lds
test
pop
jo
addb
fsubrs
fcoml
into
ret
jge
out
jne
dec
jne
addr16
mov
jmp
cmp
je
cli
pop
jle
insl
cmpl
incl
data16
push
mov
xor
int
pop
adc
mov
mov
call
cld
adc
sti
fdivp
scas
jnp
fidivrl
sub
fwait
adcb
or
ret
and
in
out
stc
lcall
mov
cwtl
inc
call
in
sub
nop
cmpb
jne
jl
stos
mov
push
push
lea
push
outsb
mov
add
addr16
incb
pop
dec
mov
adc
inc
daa
add
adc
push
pop
data16
push
loope
ds
sub
lret
ja
scas
cmp
test
popa
jbe
fbstp
inc
push
fwait
imul
add
or
mov
aaa
int3
je
cltd
dec
ret
push
dec
sub
add
push
pop
jl
jae
inc
or
adc
in
dec
jge
nop
pop
fimull
jmp
or
sbb
dec
idiv
mov
add
pop
mov
or
jne
and
mov
sti
jbe
sbb
scas
fdivs
es
inc
xchg
cli
roll
and
jg
shrl
xor
xchg
clc
cmp
jg
sahf
add
mov
dec
jmp
pop
xchg
sub
mov
mov
aas
test
or
je
into
cmp
imul
or
add
inc
jp
je
jmp
mov
pushf
insb
loop
loope
or
mov
inc
inc
inc
repz
and
adcl
gs
data16
ss
data16
jg
add
sub
sub
push
test
lcall
mov
sub
cltd
sub
sub
sub
or
pop
shl
push
jp
jb
or
xchg
mov
fdivrl
mov
ret
lea
stos
dec
add
add
push
dec
push
pop
jbe
dec
sbbl
pop
pop
xchg
test
jno
aaa
add
mov
call
pushf
push
rcll
pop
popa
jle
sbb
popa
lret
lods
add
jg
dec
push
dec
or
cmp
xor
cmp
push
and
jo
icebp
jl
testl
push
xchg
cld
push
or
movsl
adc
daa
pop
mov
mov
dec
insl
mov
mov
add
jbe
sub
movsb
cmp
adcb
mov
fbld
orb
pop
cmp
push
cmp
pop
mov
sahf
cmpsl
stc
add
adc
ss
push
add
jmp
call
data16
sahf
sub
or
pop
sub
idivb
push
cmp
insb
or
lea
cmc
push
push
inc
mov
add
dec
scas
mov
sub
shl
mov
test
and
test
pop
mov
push
push
mov
xchg
dec
aam
add
push
jg
adc
jb
push
popf
or
clc
mov
inc
jl
push
pop
movsl
or
data16
push
jne
push
aas
out
std
xor
loope
xor
pop
in
js
pop
pop
cmpsb
cwtl
xor
ffreep
movsb
jge
inc
sub
dec
jle
popa
cmp
stos
lods
push
or
jmp
push
xor
lods
pop
jne
dec
sbb
push
ds
push
cmp
inc
adc
xor
cltd
cmp
mov
xchg
sbb
pop
fisttps
pusha
adc
sbb
lea
mov
adc
imul
adc
leave
adc
enter
sub
ret
adc
fdivl
rclb
push
fsts
jmp
shlb
pop
mov
std
sub
and
pop
into
cld
shr
mov
imul
lods
xor
and
or
pushf
cltd
push
adc
xor
mov
rclb
hlt
mov
add
cld
jmp
test
or
jne
sar
dec
cmp
jbe
push
pop
or
adc
or
cmc
pushl
subb
jae
mov
shr
lea
not
and
decb
jne
push
std
movsb
shlb
sbb
lea
xor
mov
add
add
xchg
adcb
cld
and
rcr
add
pop
and
push
or
imul
pop
clc
subl
and
jecxz
push
shlb
pop
or
sti
add
dec
dec
pop
cmp
das
imul
fcmovu
mov
imul
imul
xorb
cmp
ret
clc
shr
not
and
popa
bound
jne
sub
ja
std
xor
sbb
pop
xor
addr16
pop
dec
add
mov
push
or
add
xchg
mov
sbb
fisubrs
lea
mov
cwtl
testl
jg
adc
dec
pusha
mov
mov
inc
mov
and
cmp
js
mov
or
pop
xchg
add
or
jmp
dec
adc
push
mov
cmp
and
add
and
repz
es
and
add
icebp
outsl
stos
and
adc
push
movsb
jo
shl
add
scas
fistps
add
push
call
aas
gs
push
or
ret
js
cmp
andl
add
decb
adc
inc
pop
ljmp
and
pushl
sbb
xchg
push
push
mov
push
sti
sbb
add
mov
adc
push
adc
dec
adc
jge
jle
cmp
push
cmp
lahf
outsb
jp
or
mov
sbb
das
mov
or
imul
lock
data16
cmpsl
test
add
js
add
dec
adc
les
or
mov
pop
inc
adc
outsb
and
push
sub
test
sahf
push
sub
jge
fucomi
fwait
orl
insl
lods
fisttpl
add
and
inc
jae
mov
push
jbe
jno
xor
add
inc
dec
stc
ljmp
rorb
clc
incb
pop
repnz
mov
dec
jne
or
pop
push
cltd
out
cmp
int
lcall
add
xor
mov
jbe
sub
shr
push
xchg
rcrb
je
les
fsubr
adc
jge
inc
clc
or
adc
out
mov
cld
lock
call
stos
mov
lret
je
clc
add
movsb
adc
daa
jp
lock
sub
cmp
sahf
bsf
pop
hlt
inc
inc
mov
lock
push
dec
inc
jne
or
icebp
stos
popl
and
stc
jo
xchg
les
pop
mov
nop
sub
and
pop
mov
scas
xchg
push
inc
lods
cld
jo
cmp
push
mov
pop
and
pushf
jle
jl
test
inc
xchg
flds
sub
adc
lock
stc
add
mov
int3
push
sub
pop
aam
dec
pop
mov
movsb
inc
stc
sbb
clc
jge
jb
rolb
es
add
mov
nop
dec
or
push
add
push
jns
sub
mov
repnz
pop
push
sub
adc
pushf
sar
dec
mov
xor
pop
out
out
sub
sti
jbe
jg
jmp
jle
mov
xchg
cmpsl
imul
shll
sbb
iret
jp
rclb
aaa
mov
dec
test
lcall
inc
insb
xor
out
cmpsb
push
insb
mov
sub
inc
mov
push
inc
or
jno
out
xchg
dec
insb
pop
xor
sub
pop
jle
sar
dec
jp
movsb
adc
test
in
fstps
cmp
xor
or
cmp
dec
mov
xchg
push
fisttps
mov
test
fbstp
jmp
ja
ja
dec
fiadds
sti
mov
adc
outsl
ret
dec
lea
mov
sahf
and
shll
mov
cmp
push
cmp
lods
cs
lret
lret
mov
push
rdmsr
cmp
inc
dec
mov
loop
sbbb
jg
add
sub
insb
mov
and
pop
and
inc
cmp
add
rcll
push
push
push
jge
inc
xchg
adc
in
adc
lret
dec
subb
rorb
ss
fstpt
and
and
or
into
ret
adc
xor
mov
call
sbb
leave
xor
fnstenv
jmp
lock
jbe
pop
lock
aaa
arpl
add
lock
cwtl
btr
mov
sub
cltd
dec
ja
rorb
or
pushl
in
loopne
mov
in
cli
and
mov
loope
mov
jl
and
iret
jne
sbb
push
mov
icebp
and
dec
push
bound
xor
out
repz
gs
dec
mov
and
jne
mov
lock
sbb
push
pop
outsb
leave
inc
test
inc
push
aad
inc
fcompl
sbb
jle
xor
je
cmp
xchg
dec
add
xchg
dec
jo
jp
jge
iret
push
mov
cmp
push
mov
push
xor
push
decb
jne
xor
and
int3
or
dec
mov
mov
or
and
push
clc
into
xor
inc
imul
xor
push
xor
pop
lock
das
pop
xor
orl
and
cli
jmp
out
or
dec
mov
or
inc
or
lcall
mov
out
or
sub
or
test
add
fnsave
xor
cmp
lods
sbb
dec
jne
cmp
das
sbb
push
ds
push
mov
inc
add
mov
push
iret
xchg
repnz
sbb
loopne
or
jle
inc
nop
in
jb
or
xorl
add
rolb
lock
inc
test
jbe
and
push
mov
cmc
xor
cmp
fdivr
push
rol
pusha
and
or
or
test
ss
stos
imul
and
fimuls
inc
adc
add
test
push
add
xchg
pop
scas
and
inc
inc
cmp
cmp
popa
ret
sub
add
push
mov
adc
sbb
movsb
add
subb
fidivs
push
dec
add
or
scas
fsubs
dec
push
inc
or
inc
ljmp
dec
or
cmp
cmp
adcl
xor
sbb
mov
lahf
pushl
adcl
add
in
leave
xor
push
sbb
adc
mov
std
pop
insl
sbb
lods
mov
test
sub
xlat
movd
nop
mov
inc
pusha
repz
push
or
pop
cmpl
inc
lods
sbb
cmpsl
shlb
sbb
add
xchg
fdiv
and
outsl
sub
pop
mov
iret
or
test
inc
or
lcall
lock
xchg
jg
xor
sub
or
mov
or
dec
jne
or
mov
cmp
jno
inc
aas
xor
inc
sbbb
lods
jns
sub
xchg
adc
jbe
push
dec
gs
jo
popf
call
xor
mov
inc
jns
int3
shr
xor
jb
sarb
pop
dec
adc
jge
jmp
int
add
jl
or
stc
or
cs
test
in
mov
pop
into
je
cmp
mov
mov
mov
cwtl
mov
xchg
imul
test
mov
mov
pop
ljmp
xor
sbb
pop
pop
ja
push
and
add
loopnew
dec
xor
adc
add
adc
xchg
mov
push
ret
pop
outsl
int
xor
ret
sbb
orb
stc
fsubrl
cmp
sub
seto
leave
lea
scas
push
sbb
scas
and
hlt
fidivrs
nop
hlt
hlt
icebp
test
cmp
push
inc
pushf
or
movsb
mov
or
in
sbb
mov
mov
pop
loopnew
mov
or
jnp
outsb
mov
add
cmp
mov
add
xor
push
lcall
enter
loope
dec
jae
int3
les
xchg
data16
or
ret
in
jns
cmp
pushf
shll
sub
pop
stos
sbb
test
jb
adc
call
push
sbb
repnz
sub
test
cmpsb
cwtl
orl
xchg
dec
gs
enter
and
mov
inc
inc
push
lods
shr
lods
enter
and
daa
xchg
neg
lret
adc
cmp
scas
dec
sbbb
outsl
xchg
call
push
pusha
xchg
sbb
and
mov
inc
in
int
add
fimuls
cld
stos
xchg
stc
test
dec
inc
add
rolb
xchg
lret
mov
shr
pop
and
in
jle
adc
test
push
hlt
xchg
xchg
push
and
in
sbb
add
add
xchg
call
call
or
add
add
or
or
out
xor
loop
in
xor
mov
xchg
les
sbb
in
sbb
jb
test
test
inc
cmp
icebp
adc
mov
or
enter
cmp
adc
lcall
int
sub
test
pop
cli
xchg
mov
iret
sarl
push
mov
mov
mov
cmp
and
jo
mov
sub
jbe
push
data16
cmpsb
mov
sub
loope
js
mov
arpl
push
or
cltd
pop
clc
xchg
or
sub
push
mov
mov
inc
or
fwait
and
xchg
or
adc
xor
mov
add
or
mov
and
cmp
inc
adc
sbb
inc
adc
loopne
or
mov
mov
mov
xor
add
dec
bound
push
adc
pop
jno
mov
lds
mov
testb
mov
add
or
xor
pop
inc
add
mov
clc
jnp
jne
imul
cmp
call
push
cs
add
add
fdivs
enter
nop
cmp
add
adc
adc
xor
pop
sub
mov
and
mov
mov
not
and
inc
or
and
cmp
or
sub
xor
dec
xor
dec
ret
clc
add
cli
shll
jmp
mov
mov
insl
es
push
fs
gs
fcoml
cmpsb
xor
jg
mov
pop
sbb
add
jg
jmp
pop
sub
sbb
dec
xor
ss
add
add
push
jae
je
dec
xchg
push
or
pop
mov
fmul
mov
xchg
lret
pop
xchg
jg
pop
loopne
fldl
or
fldl
or
sbb
ffree
imul
mul
mov
push
fbstp
pop
jmp
jo
fldt
push
dec
mov
sti
sbb
les
xlat
das
sub
mov
lret
sub
je
dec
je
add
and
xchg
pop
and
sbb
sti
fldenv
lcall
xchg
jns
insb
int
test
cmp
xor
imul
fnsave
mov
push
xchg
lock
jmp
rcrl
stc
sbb
lea
test
jno
mov
lock
stos
cmp
test
in
lock
in
jns
and
faddl
imul
lock
fstl
push
xor
psrlq
push
repz
mov
aaa
jne
das
and
inc
lock
cli
ret
cmp
les
or
ds
jnp
push
push
daa
mov
xor
push
aas
dec
push
push
out
pop
push
add
push
add
mov
adc
stos
enter
dec
inc
sbb
push
or
push
sub
lock
push
mov
fdivs
ds
les
addl
adc
pop
loop
pop
push
inc
in
sub
clc
add
add
jb
push
xchg
andb
jmp
inc
faddl
cltd
or
popa
push
jmp
test
and
clc
push
fmull
out
aas
mov
cmp
test
jne
push
push
rorl
outsb
inc
rol
fdivrs
testb
and
adcb
js
mov
adc
mov
test
or
xor
test
cmp
ret
popa
push
add
sbb
mov
cmp
mov
or
jne
jmp
gs
call
test
xchg
int3
call
bound
arpl
das
cmp
lock
push
daa
jecxz
scas
pop
mov
test
mov
sar
jo
jecxz
fadds
or
pop
add
ficomps
jg
xchg
dec
sbb
pop
sar
test
lea
testb
shrb
loope
aaa
cmp
dec
pop
jg
decl
stc
mov
mov
sbb
push
mov
push
int
cmp
std
push
or
ret
ja
adc
shlb
shl
shll
mov
ret
ror
lods
adc
lea
inc
or
int3
rcl
loope
cs
sbb
jno
lds
push
cs
mov
pop
add
scas
sub
xor
pop
add
sbb
cmpsl
iret
mov
cmp
hlt
es
jmp
mov
or
xchg
dec
push
mov
xor
sub
and
mov
mov
fsubl
push
or
out
je
cli
cmp
imull
push
lahf
sti
dec
cmp
inc
sub
bound
push
ss
imul
testb
jl
jne
jl
jne
inc
jne
filds
sbb
movsl
lods
rol
cld
inc
push
imul
cmp
push
int
rclb
lds
js
repnz
sub
cmp
gs
push
fdiv
mov
mov
hlt
repz
xchg
lea
jns
xchg
in
mov
movsb
lret
imul
call
push
cmp
add
vmread
or
add
adc
sti
push
inc
cmp
frstor
in
cmpsl
cmp
std
mov
mov
mov
inc
gs
add
in
inc
dec
mov
xor
cwtl
xchg
mov
push
adc
and
sub
mov
and
mov
mov
lods
dec
enter
mov
jns
daa
mov
loopne
xlat
out
add
sub
mov
inc
cld
cmp
loopne
loopne
pop
sti
inc
pop
enter
dec
shr
mov
sub
je
add
jno
or
add
adc
into
sbbb
fidivs
int
add
adc
insb
popf
mov
or
cmp
std
mov
dec
sahf
pushf
mov
inc
subb
insl
outsl
bound
aaa
xlat
fwait
cmp
cltd
das
lock
fdivr
adc
adc
ret
adc
and
rcr
insb
cmp
push
add
ret
inc
pusha
add
jb
testl
mov
bnd
fsubr
std
call
jns
xor
mov
jo
push
ret
dec
mov
mov
fdivrs
cmpsb
pop
sub
mulb
fmull
stos
mov
jne
std
cli
mov
sub
cs
fnstsw
mov
mov
imul
mov
inc
lods
mov
fnstcw
data16
daa
jle
push
ja
pop
popf
mov
xchg
jno
ret
clc
call
test
jno
std
out
jg
arpl
imul
pop
adc
jae
test
jle
psrlq
dec
xor
roll
adc
mov
dec
inc
adc
ret
fmuls
cmp
cmp
xor
jb
inc
call
std
xchg
dec
test
pusha
imul
test
fs
push
mov
mov
daa
push
mov
cmp
push
popa
mov
ja
mov
data16
push
imulb
add
dec
jmp
out
push
rolb
dec
add
lds
mov
std
pop
lock
push
pop
sub
or
jmp
data16
mov
adc
and
pop
sub
int3
cmp
cli
jo
or
roll
dec
lret
and
and
popf
jns
lock
push
movsl
and
dec
cmpl
push
test
jno
les
insl
dec
xchg
pop
rcrb
add
hlt
ds
cld
cmc
inc
push
inc
lret
jne
cmp
pop
cmpsl
mov
cmovge
or
mov
addr16
fdivr
mov
jae
das
push
dec
pop
nop
lret
jno
push
je
enter
cmp
std
or
jb
loope
pop
push
xor
test
ds
ret
xchg
aaa
fsubrl
mov
lods
add
xchg
and
hlt
push
jnp
mov
out
push
mov
sbb
addr16
out
pop
inc
ret
xor
lock
js
mov
iret
roll
cmp
push
jne
push
and
in
es
aas
xor
and
leave
mov
and
leave
and
test
and
pop
mov
nop
pop
and
cmp
and
dec
jb
push
loopne
aad
xchg
jno
push
add
jmp
push
adc
sub
cmp
ja
add
and
stc
dec
push
or
scas
icebp
or
dec
jo
lock
pop
repz
fisttpll
ds
ds
mov
xchg
lock
sub
mov
ljmp
ret
push
repz
arpl
xor
add
out
inc
dec
push
jecxz
repz
enter
scas
movsl
call
pushf
dec
call
push
sub
inc
cmc
int
and
push
xlat
xchg
adc
and
sahf
adc
mov
aam
inc
inc
inc
int3
les
out
xor
dec
jns
enter
xor
leave
and
sub
repz
xchg
lret
push
or
pushf
cmp
add
mov
xor
dec
in
push
add
movsb
jecxz
and
enter
mov
push
sti
lret
sahf
pop
pop
dec
in
xor
sahf
xchg
xchg
xchg
loope
xor
push
xchg
mov
inc
mov
aaa
adc
int
cmpsl
add
mov
mov
or
pop
and
lods
fstpl
xchg
stos
xchg
pushf
pop
repz
divl
add
clc
mov
lock
aam
dec
stc
lret
xor
icebp
mov
mov
xchg
imul
dec
cmp
das
mov
add
and
pushf
movsb
mov
push
aas
dec
mov
leave
adc
mov
incl
cmpsb
or
add
nop
nop
nop
in
or
jecxz
cmp
jmp
dec
push
sub
pop
je
jmp
dec
ret
aaa
ds
cmp
mov
aad
add
aam
sahf
out
popa
insl
mov
lods
xor
imul
shrl
xchg
enter
or
clc
out
cmp
nop
sbb
jg
adc
and
pop
test
push
pusha
jo
inc
sbbb
dec
xchg
pushf
iret
sub
xchg
pop
lods
adc
subb
xor
sub
gs
push
je
and
mov
lret
lret
cmc
add
int
and
add
add
adc
adc
xchg
dec
repz
jnp
mov
test
or
addr16
lock
push
lods
iret
inc
lret
pop
xchg
into
test
push
lcall
xchg
das
pusha
or
or
popa
pushf
adc
int
repz
xchg
push
dec
adc
push
and
out
cmpsl
push
mov
outsl
inc
or
push
ds
push
jbe
jle
sbb
or
push
test
cmpsl
mov
out
sbb
sub
sbb
aas
ret
daa
mov
cmp
lods
lret
daa
mov
clc
or
and
mov
fwait
sbb
and
call
jecxz
sub
push
lret
mov
fsubrs
ja
aam
sub
cs
sub
mov
add
sub
push
pop
rcr
adc
in
lock
rep
jge
les
xchg
movsb
sbb
xchg
in
in
cmp
cmp
add
jp
or
and
adc
into
push
iret
daa
jmp
mov
mov
pop
jae
mov
loopne
push
pop
add
jo
vcvtps2pd
jne
int3
rclb
loopne
mov
popf
clc
loopne
push
mov
mov
add
mov
sub
cmpsb
push
mov
cmp
and
and
icebp
inc
divl
xorb
sub
ja
in
dec
add
or
stc
cld
cmp
jnp
lds
stos
fs
mov
cmp
cmp
adc
and
push
push
sub
pop
mov
sub
push
outsb
xchg
xor
inc
adcb
stos
adc
add
rcl
fists
ret
or
int3
inc
mov
xchg
cld
xor
cld
push
mov
int3
sbb
outsl
mov
test
je
idivl
adc
loop
ret
aaa
mov
pop
pop
mov
sbb
and
add
dec
fs
jne
xchg
mov
jmp
add
sub
add
les
mov
push
mov
add
mov
and
stos
bound
cmpsl
nop
lock
adc
jae
or
mov
mov
add
or
xchg
add
cld
xchg
orl
mov
cli
dec
jl
mov
sub
es
sti
call
movsl
lods
xor
jmp
jb
adc
loope
sbb
and
stos
sub
xor
lahf
or
add
dec
and
icebp
ffreep
cmp
inc
or
push
add
je
push
push
stc
in
daa
clc
inc
push
inc
sbb
jae
push
cwtl
inc
testl
insb
jl
add
in
and
sbbb
jne
and
jmp
scas
mov
jae
push
xchg
pop
xchg
fmuls
sahf
pop
or
pushf
ficoms
push
or
mov
push
shl
fs
popf
jns
ret
pop
push
push
inc
shr
rcr
shr
rcr
or
out
sti
leave
jne
div
pop
dec
adc
inc
mul
pop
jb
lret
mov
jb
cmp
or
xor
and
aas
iret
dec
cmpsb
adc
or
ficoml
mov
lret
iret
xor
adc
stos
inc
mov
add
movsb
jbe
xorl
adc
xchg
and
jmp
mov
clc
mov
movb
mov
and
movb
popf
mov
cmpsl
fwait
push
imul
adc
fstl
subb
cmpsl
sahf
push
and
sub
add
sbb
or
add
testb
lods
sub
lret
adc
cmpsl
sbb
jo
sbb
mov
bound
mov
jge
repz
sub
dec
and
sbb
push
mov
sbb
popa
pop
mov
sbb
adc
jo
pop
insb
imul
and
rcrl
cmova
dec
sbb
sbb
mov
inc
cmp
out
gs
cmpsl
test
add
xor
jb
or
aas
mov
push
inc
lods
push
lret
push
sub
test
into
push
retw
cmc
jne
and
pop
lea
jbe
lea
xchg
adc
dec
jae
adc
pusha
pop
add
or
sbb
daa
or
add
dec
adc
sbb
or
inc
adc
inc
inc
mov
push
into
out
dec
mov
shll
add
cld
sbb
loop
xor
subb
mov
push
jno
lret
sub
sbbb
lock
or
sbb
aaa
add
mov
lret
jo
dec
repz
xor
ficoms
push
in
lret
push
test
add
and
and
int
inc
sub
stos
add
jo
jmp
push
xorb
imul
add
scas
fs
loopne
lods
adc
cmp
or
mov
xchg
frstor
lock
lods
inc
rorb
add
xchg
hlt
hlt
les
add
ret
cltd
mov
scas
sub
mov
fwait
pop
cmp
in
sub
loopne
and
lea
and
add
add
xor
addl
fs
hlt
or
or
sbb
loopne
test
sub
mov
adc
stos
dec
cmp
iret
jle
sub
or
and
push
adc
jo
into
loopne
xor
aas
sarl
ret
icebp
jmp
iret
xor
or
outsb
jo
and
mov
shll
push
or
cmpb
sbb
pop
inc
adc
mov
jl
push
out
cmp
je
ss
repz
shlb
mov
pop
addr16
outsb
or
or
or
cld
pop
adc
mov
pop
add
cs
sbb
xchg
dec
sbb
outsl
or
push
mov
sub
or
adcb
sbb
repnz
inc
and
jecxz
add
or
jbe
cmp
jo
and
cmp
jb
inc
fisttps
dec
pop
sub
sbb
push
roll
and
xor
daa
fcmovnu
xor
sbb
mov
pop
jne
or
imul
sub
add
mov
jno
push
dec
sbb
sbb
jp
push
mov
adc
jb
inc
in
scas
add
sub
or
pushf
lahf
push
push
mov
mov
or
jne
mov
dec
sub
lock
andl
imul
imulb
inc
xor
std
inc
and
pop
pop
push
sbb
movsl
pop
dec
les
push
lock
add
test
cmc
fwait
jbe
dec
adc
cmp
xorl
mov
sub
push
lret
adc
mov
shrb
dec
dec
push
imul
sarl
out
cmp
and
mov
inc
movsb
inc
inc
sbb
rorl
test
rcr
adc
sti
add
or
add
popf
inc
push
inc
dec
pusha
add
add
xchg
in
sub
nop
test
jmp
lock
loop
sbb
imul
jle
ja
or
cmp
loopne
add
and
loop
xor
add
jle
cmp
lahf
enter
cmp
pop
sbb
dec
cmp
xchg
test
nop
sub
cmp
cmc
push
scas
or
push
cmp
outsb
xor
movsl
fs
inc
sbb
sbb
pop
leave
push
sbb
pop
adc
popf
int3
pusha
sbb
jae
les
or
lcall
out
adc
push
mov
push
daa
or
and
andb
add
pop
adcb
add
add
sub
nop
push
into
jns
dec
push
dec
fbld
sub
jle
pop
stos
dec
lock
inc
mov
repz
or
xchg
icebp
sbbb
fbld
mov
pusha
inc
popa
pusha
in
ds
lods
mov
add
mov
xchg
ret
pop
test
test
pop
pusha
sub
sbb
jmp
push
mov
xchg
push
push
mov
mov
sub
push
mov
sbb
fidivrl
sti
inc
mov
add
jb
in
push
in
adc
add
rcrb
push
or
je
sub
add
fbstp
jne
sbb
inc
mov
cs
sub
adc
jbe
add
cmp
jge
mov
mov
pop
mov
add
and
fildl
cmp
pop
sbb
imul
and
and
rolb
add
xor
add
test
sub
adc
sbb
fs
and
add
sbbb
js
push
sahf
mov
xchg
insb
in
das
push
je
inc
aaa
test
int3
in
addl
dec
mov
inc
or
rcrb
fdivrs
add
sub
sbb
bound
ja
push
cmp
inc
xchg
cmp
pusha
test
lods
out
inc
mov
addl
add
add
imul
jmp
and
inc
test
and
sbbb
stc
mov
dec
ret
loope
rcll
addl
test
mov
and
or
call
sbb
cmp
push
cs
enter
push
cli
ljmp
mov
outsb
dec
adcl
popa
les
mov
orb
je
sbb
pop
push
cs
sbb
inc
mov
inc
sub
repz
add
negl
and
test
pop
pusha
cltd
movsb
jge
ret
dec
add
mov
push
or
in
mov
push
out
mov
add
push
sbb
lods
mov
add
adc
fdivs
lcall
and
jmp
incl
cwtl
inc
mov
or
mov
loope
rorb
adc
inc
imul
xor
movb
or
les
dec
leave
insl
xor
and
mov
ret
push
jl
jne
xchg
add
inc
js
int3
sbb
stos
sub
mov
ss
rorl
jmp
xor
push
inc
loope
icebp
enter
add
add
inc
pop
je
pop
es
es
or
adc
mov
rorb
push
mov
mov
pop
movsl
shr
outsb
adc
add
mov
adc
push
push
push
cwtl
sbb
add
sub
clc
cmp
cmp
leave
inc
sub
xchg
pusha
mov
std
push
xor
inc
pop
loop
cmp
pop
add
adc
add
pop
mov
scas
mov
or
mov
cmp
push
mov
je
lds
mov
dec
mov
inc
pop
push
dec
dec
inc
xor
adc
or
pop
aam
ss
stos
xor
clc
xchg
push
aas
jae
mov
push
add
dec
ss
dec
pop
xor
pop
lock
xchg
jge
ds
cmp
orl
or
inc
mov
add
daa
mov
inc
sub
push
cmp
inc
inc
dec
add
or
and
jo
xchg
stc
push
and
push
enter
mov
enter
into
cmp
dec
inc
inc
or
jne
loopne
je
repnz
clc
rorb
add
dec
inc
hlt
sbb
pushf
dec
arpl
pop
dec
cmp
outsl
jae
pop
clc
sbb
lea
dec
jb
cld
test
cmp
sbb
xor
ret
jmp
sbb
dec
cmp
addb
lods
cmpsl
ficompl
jnp
push
add
and
or
cmp
or
int
add
mov
push
shl
fcmovnb
xchg
pusha
pop
lds
mov
push
push
mov
push
push
pop
push
dec
aas
adc
add
mov
int
or
dec
lea
insl
cmpsl
add
orb
or
or
mov
and
push
and
xor
ret
xchg
inc
mov
in
pop
pop
inc
test
mov
and
subb
loop
es
mov
jl
sbb
jge
pop
adc
mov
sbb
outsb
lock
mov
add
jle
and
andb
mov
push
cmp
daa
insl
mov
inc
cmp
jg
popf
ficoms
xchg
sub
jle
mov
jo
push
mov
sbbb
xor
dec
bound
xchg
hlt
dec
push
pop
push
mov
or
mov
add
out
add
mov
push
out
inc
add
lods
pop
mov
or
jno
std
lret
incl
hlt
inc
adcl
test
xchg
xlat
ret
jp
xorl
push
ss
xorb
xchg
test
and
idivb
mov
cmc
push
or
jge
sub
mov
aas
push
aaa
xor
ds
ss
rorl
test
add
or
in
mov
je
and
push
and
fdivl
mov
hlt
je
scas
pop
notb
lods
push
mov
adc
and
fisttps
aaa
dec
dec
out
mov
push
loopne
or
ffreep
not
mov
xlat
push
mov
push
xor
in
addr16
xor
push
xchg
movsb
loope
dec
lret
lock
mov
filds
inc
push
or
mov
or
xor
not
push
sarl
sbb
mov
mov
and
insl
cld
loop
jb
rcrl
add
ret
sub
mov
jmp
mov
push
mov
dec
pusha
and
mov
dec
push
cmp
in
mov
pusha
or
xchg
rcl
scas
sbb
sub
mov
popa
push
mov
push
bound
jae
xchg
andb
jecxz
rcrl
cmp
pop
add
add
jmp
pushl
leave
mov
popf
xor
sti
xchg
jae
and
add
sub
imul
mov
jns
scas
add
je
roll
adc
jns
lret
jae
rolb
sahf
lret
inc
fs
mov
and
cmpsl
inc
xchg
xor
js
sbb
mov
cmp
mov
je
pop
or
loop
mov
jne
inc
fdivr
push
jne
add
sbb
pop
jno
out
sbb
add
cs
or
nop
mov
lods
jmp
in
sub
jbe
push
shlb
aam
in
adcb
pop
mov
test
jnp
int3
jmp
test
jmp
inc
pop
lods
xor
shld
xor
add
pusha
mov
sub
out
lahf
ss
iret
decl
cwtl
push
push
jb
popf
das
les
mov
js
push
xchg
pop
js
and
cmp
add
or
pop
mov
cmp
test
cmp
jg
push
adc
add
jmp
adc
add
dec
jmp
xorb
dec
jnp
or
ss
jb
lret
sarb
sbb
rcrb
xor
add
sub
int
sbb
sub
push
cmp
jmp
and
dec
mov
dec
push
jnp
test
clc
ficoml
test
sti
call
negb
call
or
sub
adc
jp
sbb
add
fsubrs
lret
adc
mov
imul
sti
roll
jmp
fsts
rcr
mov
jmp
adc
fdivp
pop
push
push
mov
aaa
leave
xor
add
movsb
ret
icebp
orl
inc
push
pop
imul
enter
dec
and
cmp
jg
inc
jmp
mov
xchg
ret
pop
jbe
xor
jne
imul
rclb
push
jecxz
sub
or
jno
rcl
and
in
fsubrl
mov
mov
mov
mov
adc
xor
add
imul
idivb
xor
push
sti
and
repnz
dec
xorl
mov
mov
test
xor
or
push
jb
stc
jg
sbb
call
sbb
movl
mov
or
fsts
inc
sub
adc
push
jl
aas
sbb
xchg
mov
or
add
je
testb
je
fcmovne
or
mov
sbb
in
sub
or
mov
push
cmpl
pop
popf
in
stc
sub
mov
nop
and
and
jle
sbb
lods
sbb
clc
xor
jg
sub
dec
cmp
push
or
sbbb
sbb
adc
inc
test
cmp
jl
and
dec
mov
sbb
enter
loopne
add
icebp
adc
xlat
addb
cltd
sti
sub
mov
in
push
dec
loopne
dec
in
and
xchg
call
lock
lret
xlat
sahf
sub
push
xchg
ret
sub
mov
cmp
sti
xor
and
and
inc
sbb
push
mov
jmp
mov
pusha
aam
inc
adc
push
fadds
adc
add
mov
add
xor
mov
add
adc
lods
inc
xor
pop
xchg
adcl
lock
pop
add
call
les
or
push
add
add
outsb
or
jg
inc
and
sti
aas
add
imul
daa
sbb
mov
sbb
xor
and
bound
clc
nop
roll
push
adc
inc
out
mov
dec
sahf
out
pop
jg
sub
or
lea
push
pop
jl
mov
sub
jmp
xor
fmul
xchg
or
sub
or
dec
loope
test
xor
xor
lcall
flds
dec
loope
push
gs
add
scas
jbe
les
addr16
lea
mov
outsb
lret
loope
fdivs
aaa
pop
xor
clc
add
inc
movsw
test
stc
xchg
pushw
jmp
mov
cmp
fdivrl
cmpsb
pop
mov
pop
cmp
dec
ret
mov
ja
inc
or
gs
sbbb
je
shlb
fidivrl
pushf
jg
dec
dec
cmc
lcall
lods
add
out
addr16
pop
xor
lods
adc
jmp
addr16
addl
cmpsl
and
sbb
jne
or
aam
rolb
popf
flds
jle
mov
stos
stc
mov
cmpl
ljmp
lods
sarl
lock
adc
or
hlt
jp
in
dec
mov
popf
imulb
cmp
adc
or
shrb
test
xchg
cmp
mov
js
push
cld
sbb
mov
out
inc
psllw
clc
jbe
mov
and
repnz
loope
push
rorb
mov
adc
lock
lods
popa
pcmpeqd
lret
xchg
ficompl
mov
cltd
inc
test
aam
push
repz
inc
cli
cmpl
jne
aaa
inc
lods
out
jl
push
jmp
cmp
fdivrl
je
xchg
je
mov
cs
mov
adc
sub
add
pop
add
inc
movl
popa
jmp
add
push
lods
stc
xor
repnz
adc
call
sbb
mov
adc
adcl
add
fxch
repz
or
pop
mov
jmp
xor
add
cmp
push
mov
ljmp
pushf
sbb
add
and
jp
fcoml
push
icebp
imul
icebp
enter
outsl
sbb
or
icebp
iret
popf
pusha
dec
xor
xor
jns
inc
mov
test
ja
mov
mov
mov
andb
stc
cs
sbb
flds
je
pop
cmc
and
mov
ret
ss
imul
mov
add
add
fs
bound
inc
mov
and
roll
xor
push
cmp
adc
ret
mov
inc
test
and
loopne
adc
jbe
cltd
pop
jns
jle
pop
lock
jne
inc
ja
and
push
mov
fld
stc
push
or
cmc
jl
ljmp
jb
mov
gs
movsb
sub
dec
inc
orl
inc
add
mov
mov
dec
dec
xor
and
movsb
adc
sub
stos
insl
leave
mov
icebp
cmp
scas
mov
lret
repz
add
orb
push
mov
or
add
adc
push
or
xchg
cmp
shll
adcl
inc
xlat
jns
jne
jmp
fcomp
vpand
or
push
mov
jl
sbb
dec
out
mov
icebp
or
dec
xchg
pop
jle
loop
push
mov
mov
sbb
xor
inc
jp
xchg
mov
sub
inc
fistps
push
lret
adc
outsl
push
enter
mov
push
and
nop
jle
add
and
add
mov
mov
pop
push
aam
lock
adcl
sbb
pop
sbbl
and
cmp
out
insb
aam
fs
or
repnz
in
dec
inc
sub
pusha
jbe
add
sbb
decl
sahf
insb
fldt
xor
dec
jg
adc
orl
cmp
mov
hlt
or
and
loopne
js
out
cmp
xlat
or
shrb
orl
push
push
stos
push
adc
pop
scas
pop
and
sbbl
jb
sub
mov
out
lds
popa
sarl
add
push
ljmp
and
inc
inc
aad
push
adc
aaa
fadds
push
jnp
es
lret
ljmp
mov
ljmp
xor
lret
aad
out
or
mov
mov
mov
cld
incl
je
cmp
adc
cmp
jb
testb
and
xchg
sub
jl
les
jp
dec
rcll
mov
dec
jmp
inc
movb
cmp
cmpsb
xor
cmp
jb
adc
pop
shll
push
push
or
xchg
subb
push
jmp
push
imull
call
and
ret
neg
cmp
outsl
pop
mov
mov
push
push
out
jno
or
xor
insl
cld
jle
inc
and
pop
cmp
fstpl
pop
jmp
jecxz
inc
add
pop
or
pusha
push
sub
mov
adc
push
push
inc
mov
mov
mov
push
ret
pop
sub
sbb
sub
or
cmp
std
pop
rclb
bnd
lea
lea
or
lods
inc
push
int3
mov
adc
mov
push
std
popa
sbb
popl
arpl
mov
pop
inc
xchg
push
dec
je
test
enter
pushf
icebp
cwtl
push
push
inc
adc
loopne
pop
inc
mov
sbb
mov
dec
and
or
sbb
sbbl
add
add
loop
mov
mov
rcrb
ljmp
cmp
jne
shll
leave
xor
push
xchg
jecxz
stos
shrb
add
push
ds
mov
or
in
lret
and
fisubrl
push
or
fldl
dec
adc
ss
mov
xor
cmp
cmp
cmp
imul
inc
inc
jb
jb
dec
push
push
pushf
pushf
pop
jo
add
pushf
pushf
pushf
push
xchg
fidivl
mov
adc
mov
cltd
mov
xchg
cwtl
pushf
mov
dec
test
sub
test
je
sub
add
mov
fiaddl
lock
enter
hlt
and
jle
inc
fiaddl
and
rcrb
data16
or
xor
sbb
and
test
or
and
or
ror
mov
pop
inc
or
in
dec
mov
jo
xchg
test
cmp
sub
cltd
dec
inc
ret
cmp
pop
mov
add
dec
jne
inc
loop
imul
jbe
inc
push
imul
lea
sub
mov
adc
dec
inc
pop
and
fnstsw
cmp
aam
xor
dec
sbb
push
adc
outsb
es
cs
mov
es
int3
mov
aam
repnz
mov
pusha
inc
add
xchg
push
or
subb
add
xchg
addr16
dec
out
or
and
inc
inc
in
pop
movsb
fucomip
push
fadds
pop
mov
stos
add
jle
cmp
adc
or
das
cmp
adc
jl
cmp
rol
add
shlb
xchg
inc
adc
mov
fmuls
jbe
mov
popf
mov
add
dec
mov
rcrl
inc
xorb
lcall
cwtl
negb
into
movsb
aam
add
je
pop
sub
cmp
pushf
insl
inc
xchg
negb
in
sub
and
loopne
test
and
mov
or
fld
adc
push
test
push
gs
lods
xchg
test
lahf
repz
cmp
mov
add
int3
dec
push
xchg
pop
add
add
jecxz
xor
outsl
test
sbb
pop
fwait
and
inc
push
mov
or
xchg
fimull
and
testb
xor
rcrl
orl
jmp
jbe
iret
les
xor
xchg
js
adc
add
dec
loopne
and
or
int
add
sbb
add
and
fcoms
popf
push
push
hlt
cmp
decl
loopne
or
and
test
loopne
aas
xchg
js
mov
adc
and
jle
or
cmp
pusha
mov
enter
sub
std
pop
inc
cmp
xor
mov
psubb
loope
shlb
mov
pop
mov
inc
pop
inc
add
xchg
fisubrs
cmp
dec
mov
or
jmp
fwait
mov
inc
push
cmpsb
cmp
mov
inc
daa
loopne
jns
inc
sub
inc
jb
lods
in
mov
in
cmp
lret
sar
or
mov
mov
or
aas
jecxz
clc
push
pop
xchg
roll
test
add
cmp
and
out
lock
imul
sar
mov
or
xchg
mov
jle
shlb
les
and
iret
les
test
shlb
adc
add
xor
shlb
xchg
loope
inc
insb
push
dec
mov
bound
cs
inc
pushl
dec
ja
out
mov
jns
call
sub
dec
dec
dec
push
add
popf
xchg
cvtdq2ps
jae
and
outsb
xchg
sbb
and
inc
inc
mov
mov
or
or
fcmovb
mov
sub
or
pop
sub
push
hlt
mov
cmp
add
and
jo
stos
pop
add
cmp
add
ss
push
mov
mov
ds
push
mov
xchg
adc
mov
rolb
cmpsb
scas
inc
call
jmp
dec
pushf
pop
ss
dec
inc
lea
rorl
xchg
push
es
orl
lea
mov
jnp
iret
les
sbb
xchg
data16
inc
and
js
fisttpl
dec
sub
sub
sarl
cmp
test
mov
cmp
add
int
push
test
cmp
add
add
rcrl
mov
sbb
rcr
pusha
ss
jne
movzwl
and
lock
cmp
rcrl
sbb
out
inc
int
adc
daa
sub
and
dec
dec
pusha
push
fadd
or
sub
in
lcall
add
sbb
fisttps
clc
fs
test
mov
pop
rclb
mov
sbb
inc
dec
add
push
mov
or
cmp
add
inc
lret
clc
clc
sahf
dec
and
jmp
xchg
mov
inc
outsb
andl
jne
sahf
fcoml
jae
mov
adc
cli
dec
icebp
pop
scas
or
inc
mov
adc
das
ficoms
cmpl
fmuls
push
and
scas
loop
dec
sbb
jge
cmp
inc
add
sub
jmp
cmpsb
leave
push
or
pushl
in
mov
dec
add
enter
cmp
mov
xchg
rclb
inc
scas
in
lods
push
orl
pop
mov
inc
inc
subl
and
mov
cmp
mov
add
push
cmp
adc
jl
xchg
shlb
stc
pop
xchg
cmp
pusha
mull
mov
mov
add
xchg
push
push
fs
dec
xchg
sub
addb
adc
test
mov
mov
jmp
mov
shl
adcl
std
jno
xchg
add
fcoms
and
and
mov
sub
xor
xchg
xorl
lret
loopne
mov
repz
push
lods
sti
mov
in
jl
lea
mov
jns
cmp
cltd
sub
sub
cmp
movsl
imul
or
cmp
adc
das
lods
mov
fidivrs
xor
fildll
inc
cmpb
mov
jg
jecxz
leave
sbb
orb
mov
pop
and
jns
xor
ja
xchg
xchg
mov
jb
mov
or
leave
mov
mov
imul
add
mov
shr
aad
in
or
ret
xchg
xchg
sbb
xor
mov
clc
mov
scas
inc
clc
or
mov
or
sbb
cmp
and
es
dec
adc
adc
unpckhps
pusha
sub
sbb
subb
pop
dec
sbb
push
xor
adc
inc
add
inc
std
insl
pop
or
mov
adc
push
add
jge
add
mov
push
and
mov
dec
mov
and
insb
cwtl
sbb
add
sub
and
xchg
ljmp
inc
inc
push
mov
out
pushf
cli
or
inc
mov
arpl
inc
js
or
inc
jo
aam
adc
add
xor
inc
cmp
mov
in
and
adc
insb
sbb
sub
adcb
sbb
or
mov
in
test
add
mov
shlb
adc
push
sub
pop
pop
mov
xchg
jge
inc
out
push
gs
outsl
and
cmp
fstp
shrb
xchg
insl
jl
add
cltd
ja
dec
call
sub
adc
pop
xchg
push
test
inc
or
and
fwait
cli
adc
jnp
mov
clc
add
mov
fmuls
lret
mov
sub
and
adcb
push
pop
xor
pop
pop
lods
pop
lods
pop
pop
adc
mov
and
cmp
ljmp
push
lahf
push
scas
mov
clc
je
xor
loopne
test
lcall
lcall
jl
add
xor
js
mov
mov
adc
sub
fsubrp
push
push
in
push
or
and
je
inc
cmp
in
mov
test
add
js
pop
add
icebp
sbb
push
add
push
popa
add
sbb
xchg
inc
bound
sarl
clc
add
mov
sbbb
xchg
adc
and
mov
xchg
ret
test
lret
jae
dec
dec
fstps
dec
rorb
dec
sbb
test
rclb
xor
jecxz
int3
mov
loop
jle
mov
push
call
mov
ret
push
add
dec
and
pop
pop
push
sub
xlat
movsl
cmp
and
pop
add
sbbb
or
cmp
push
sbb
or
pop
adc
jnp
aaa
or
push
cmp
jle
rclb
ret
adc
mov
rcl
mov
dec
mov
cmp
and
inc
dec
xor
push
push
repnz
sub
ficompl
cmp
and
mov
lret
xor
pop
dec
inc
es
jb
pop
mov
mov
das
push
adc
or
or
sbb
push
pop
dec
test
pop
clc
arpl
loopne
loopw
inc
sbb
xchg
sbb
dec
inc
adc
mov
cmp
dec
jbe
jbe
mov
and
lahf
mov
insb
cld
xchg
int3
push
or
dec
cmp
popf
not
cmpsb
fidivrs
repnz
xchg
ficomps
mov
adc
inc
hlt
in
adc
jl
mov
jle
ds
mov
jmp
or
inc
adcb
es
in
inc
inc
dec
inc
xchg
pop
mov
and
jne
or
test
push
inc
les
hlt
daa
inc
jns
inc
mov
mov
in
popa
adc
add
fiadds
jmp
nop
icebp
jne
and
sbb
cmp
and
leave
gs
adc
xor
jmp
sub
xchg
dec
mov
add
dec
lods
adc
adc
inc
push
pop
push
das
sbb
hlt
push
pushf
mov
outsl
icebp
pop
mov
xor
pop
sub
je
push
popf
ds
cmp
inc
push
test
adc
pop
testl
adc
sahf
test
hlt
add
push
repz
outsb
dec
repz
push
or
or
shrl
sbb
test
or
daa
adc
enter
fsub
jge
push
mov
xchg
test
and
cs
dec
xchg
add
or
or
nop
fldln2
out
inc
nop
and
shll
dec
xor
adc
or
jb
and
shr
add
leave
in
inc
shr
and
adc
and
and
adc
add
or
and
adc
test
xor
and
xlat
out
insl
add
sbb
xchg
test
sub
inc
jmp
pop
clc
incb
testb
or
jmp
inc
and
mov
inc
jl
in
and
aaa
jecxz
rcr
outsb
data16
add
or
popf
sub
pop
sub
jle
or
or
pop
aam
and
je
sbb
loope
xor
adc
add
add
ja
js
pusha
mov
pusha
loope
pop
sub
sub
rorb
inc
jecxz
nop
mov
repnz
fstp
ds
dec
sbb
imul
mov
xor
icebp
adcb
repnz
inc
jg
testb
push
es
adc
scas
cmp
cmpsl
sti
add
add
test
push
and
xor
mov
sbb
stos
aam
cwtl
mov
add
or
sub
push
leave
jb
pop
mov
ret
scas
mov
pop
testl
cmpsb
insl
or
je
jb
dec
mov
sub
and
inc
add
adc
in
movb
push
fnstenv
pop
add
or
pop
push
test
addl
mov
inc
imul
aas
les
sbb
lds
neg
sbb
mov
adc
push
sti
lret
lods
ja
cmp
mov
shll
pop
xchg
push
add
and
aaa
sbb
pop
xchg
lock
sbb
in
mov
inc
jl
add
sub
sub
inc
dec
push
in
jmp
sub
push
mov
mov
mov
test
int3
adc
div
add
insb
dec
xor
pop
cmc
jnp
jp
clc
sbb
cltd
inc
ret
pop
in
lds
imul
or
or
in
out
push
mov
inc
cltd
sub
pop
pop
mov
sub
repnz
mov
add
enter
mov
cld
mov
mov
not
insl
in
cmp
sub
in
testl
mov
sub
push
jp
push
sahf
jmp
pop
cmp
inc
mov
push
aam
adc
push
pop
xor
and
mov
and
lcall
adc
add
cmp
jg
addr16
fwait
and
sbb
pop
lock
das
adc
add
mov
and
lret
cmp
xchg
push
mov
add
or
mov
lds
push
lea
add
adc
je
jl
push
sbb
js
or
adc
cmp
sbb
adc
adc
or
or
pop
sub
pop
sbb
loopne
pop
pusha
out
add
push
rcrl
add
rorl
sti
mov
fsubrp
fwait
jno
mov
dec
inc
and
mov
add
or
mov
adc
ret
xchg
or
dec
outsb
sbb
imulb
jnp
cmp
bound
mul
loop
xchg
es
mov
xor
repnz
mov
sbb
or
mov
sub
mov
cltd
mov
add
decb
rcrl
sub
xor
jb
fnstsw
adc
push
jns
in
rorb
dec
xor
pop
std
movsl
mov
jecxz
jp
or
or
jecxz
popa
mov
js
and
cs
cmp
cmpps
sahf
push
icebp
stos
add
xchg
shl
jne
in
ret
movsl
xchg
pop
gs
ljmp
xchg
mov
xchg
cmpsl
pushf
mov
mov
pop
sbb
xchg
push
pop
sub
fadds
into
das
sub
fdivs
cwtl
test
je
push
push
xor
test
cmovge
mov
pop
or
mov
test
icebp
sbb
shll
push
or
stos
inc
add
or
les
out
mov
cli
mov
je
mov
sbb
xorl
dec
mov
fsubrs
sub
ljmp
cltd
pop
sub
dec
aad
add
frstor
mov
loop
xchg
and
inc
fldcw
push
inc
andb
repnz
push
or
insl
or
push
mov
mov
sub
or
enter
fwait
int3
and
push
imul
aam
loope
outsl
cmp
jle
call
xchg
cmp
push
mov
or
bound
and
jp
mov
sbb
adc
ldmxcsr
sub
and
jb
mov
or
jmp
and
cmp
repz
jle
jbe
out
add
and
or
pop
add
sub
insl
jmp
rclb
nop
adc
pop
pusha
push
cwtl
jo
fidivrs
ss
mov
je
or
sbb
sbb
add
insl
push
inc
dec
push
or
push
sub
das
pop
rorl
push
jecxz
push
jnp
add
and
inc
xchg
int3
cltd
and
adc
ljmp
adc
push
bound
gs
xchg
jle
es
repnz
sti
xor
testl
xchg
or
fsubl
cmp
jecxz
add
adc
enter
les
loope
push
sub
pop
or
sub
add
adc
adc
mov
sub
pop
jle
std
dec
sbb
cmpl
xor
pop
adc
mov
add
pop
push
push
inc
cmpsl
int
rclb
mov
push
mov
loopne
add
push
or
or
add
jmp
aas
sub
lock
sbb
sti
add
clc
and
push
daa
mov
pop
test
jne
sbb
movl
and
roll
stos
stos
test
pusha
fs
aad
aam
xor
cli
sbb
and
add
dec
pop
mov
dec
jns
dec
xchg
loopne
lea
xchg
mov
push
subb
inc
shl
shlb
mov
pop
add
outsb
call
shl
not
test
add
lods
call
outsb
push
cltd
insb
pop
and
mov
loop
mov
dec
or
inc
insb
sub
mov
lea
xor
repnz
xor
cmp
std
jae
les
pusha
sub
adc
jnp
or
jb
incb
jae
sub
push
mov
sarb
je
pop
add
and
or
insb
xor
test
push
mov
inc
mov
lock
cmp
dec
dec
stos
inc
and
cmp
rsm
xor
xor
movsl
cmp
sub
loop
xor
outsl
sbb
or
lock
and
push
cld
or
in
popf
je
adc
fs
iret
pop
ds
mov
and
and
lock
test
andl
or
test
out
mov
aaa
sub
sarb
je
mov
and
jge
popa
mov
sub
pop
in
add
int3
or
pop
hlt
test
xchg
sub
adc
adc
lcall
lea
dec
add
cli
jne
mov
mov
push
pop
xor
pop
sub
and
iret
dec
jns
inc
lock
sahf
inc
inc
add
push
inc
or
add
jae
cmp
cmp
cmp
imul
mov
and
out
loopne
inc
sbb
jl
pop
sbb
js
andl
xchg
push
cmpsb
into
out
jo
fucomip
mov
iret
and
mov
loopne
or
xor
or
addb
sub
dec
aas
sbb
shl
out
addl
and
call
mov
or
insl
add
sbb
mov
in
loop
xchg
jp
and
bound
pop
pop
add
or
sub
sub
enter
adc
adc
adc
nop
inc
xchg
cmp
adc
repz
add
adc
sub
cmp
or
adc
or
sbb
or
xchg
sub
mov
test
sbb
xor
xchg
lahf
movsb
ds
lods
mov
xor
subb
into
mov
dec
shll
test
mov
pop
lds
jne
imul
sub
imul
or
fidivrl
add
jmp
xor
or
pop
push
loope
das
add
mov
jmp
ja
push
dec
jmp
fs
push
test
mov
insl
mov
jmp
jle
sub
and
dec
dec
dec
and
xchg
add
xchg
jo
ljmp
jmp
andl
jmp
cmpsl
push
or
sub
mov
push
dec
push
sub
and
lds
mov
jle
cmp
jle
cmp
push
xor
vprotw
dec
push
mov
cmc
push
jbe
push
lods
mov
sub
loopne
add
push
jmp
mov
movsb
add
mov
jae
push
rcrb
dec
mov
inc
mov
pop
jge
fdivp
sbb
pop
cmp
test
lods
xchg
in
nop
add
jne
dec
dec
jae
nop
lret
sti
je
jmp
mov
or
pushf
adc
and
imul
outsb
mov
sbb
fimuls
lods
out
push
sub
jae
adc
gs
andl
rorb
pop
mov
adc
sub
cmp
shlb
inc
mov
stos
sub
mov
and
call
mov
pusha
aaa
fimull
nop
mov
mov
pop
cmp
ret
mov
add
testl
mov
jmp
fiadds
xor
hlt
pop
push
adc
push
mov
fldl
sbb
and
sub
bound
cmp
add
jecxz
add
pushf
jmp
push
shlb
cwtl
pop
mov
mov
mov
dec
mov
dec
clc
hlt
push
imul
jne
xor
push
dec
pushf
xor
inc
int
push
cwtl
jge
neg
add
mov
push
inc
sbb
xlat
test
cmp
jnp
mov
sbb
push
shr
ret
ja
jnp
jge
jle
add
sub
xor
jne
push
adc
inc
xadd
or
dec
test
loop
jge
cli
push
inc
lahf
lods
rcrl
and
inc
aad
test
jb
mov
dec
mov
cmp
andb
mov
ror
sbb
xlat
std
pop
push
xor
and
and
and
adc
imul
out
jle
jbe
adc
sbb
ja
aas
mov
or
stos
mov
movb
testl
jne
enter
jmp
fmull
les
test
into
jne
outsl
push
lock
or
cmp
cmp
jne
lock
add
jne
push
fimull
add
xchg
pop
cmpsl
adc
aaa
cs
lea
cmp
mov
or
pusha
ret
xchg
scas
sbb
cld
cmp
mov
mov
or
jl
ja
cmp
add
sahf
sub
sub
dec
xor
stc
jg
add
sub
or
js
enter
sub
hlt
test
lods
add
or
shr
add
cmp
fidivs
mov
jg
mull
into
or
adc
inc
mov
les
int
push
add
notb
fnstcw
push
mov
mov
std
mov
insl
fadd
loopne
shr
or
mov
sahf
dec
push
ret
popf
and
mov
xor
mov
enter
sub
and
mov
mov
cmp
add
mov
push
sar
pop
loopne
outsb
andb
inc
jmp
imulb
cmpsb
lcall
mov
fidivrl
jb
dec
push
pushf
in
je
fmull
mov
insl
xor
lock
cmp
or
sub
outsl
or
into
jmp
scas
jne
imul
and
inc
int
sbb
movsb
int3
or
cmp
int3
add
xchg
sbb
das
sub
add
negb
sarb
add
adc
push
nop
cltd
and
ret
or
aad
inc
mov
inc
sbb
add
cmp
lcall
mov
xor
jnp
push
mov
ds
lods
push
and
pop
test
aad
testb
add
leave
sub
jmp
inc
and
fdivrs
pop
jne
cmp
cli
adc
inc
scas
inc
mov
mov
fcoms
pop
mov
adc
mov
dec
pop
cmp
in
push
or
test
pop
sahf
mov
stos
push
xchg
xchg
adc
inc
cs
imul
or
ss
cmp
je
or
incl
pxor
xor
mov
push
mov
cmp
pop
jne
lahf
ljmp
inc
mov
out
add
or
rcr
mov
inc
packuswb
mov
lret
pop
jae
rcrb
fisttps
push
xor
imul
or
clc
add
add
mov
test
mov
jnp
add
push
adc
mov
and
mov
mov
test
orb
sub
mov
mov
and
cmc
jmp
mov
shlb
push
subb
jle
pop
dec
leave
in
and
test
push
push
pop
mov
shll
je
setg
sub
cld
clc
add
mov
mov
loop
aas
sub
push
jne
movb
lea
sarb
shlb
ficompl
xor
add
popa
jnp
xchg
pushf
sbb
loop
lock
add
lcall
jmp
sub
add
xchg
lods
adc
add
mov
xor
lds
imul
dec
add
mov
adc
rcrl
jns
les
sub
cmp
ficomps
cld
jo
jns
xor
push
or
add
dec
pop
sub
add
xchg
shlb
pop
sub
push
pop
dec
stc
mov
loopne
adc
inc
pop
adc
xor
inc
aam
clc
loopne
adc
or
insb
push
cwtl
rclb
jmp
cli
sbbb
jbe
jle
cmp
dec
adc
jge
mov
ror
add
adc
pushl
cmp
xor
enter
dec
cmp
or
xchg
rolb
or
mov
xor
inc
cmp
pop
add
push
mov
and
jle
popa
sbb
fsubs
xor
sbb
test
jge
adc
mov
dec
out
jmp
xchg
xchg
fldl2t
call
in
cmp
mov
lret
mov
or
add
fcoml
lea
add
cmp
adc
lret
lret
adc
stos
lret
pop
repz
mov
or
sar
mov
jmp
ss
mov
dec
test
je
lods
add
pusha
loopne
lds
scas
testb
mov
pop
push
xor
push
mov
adc
add
sbb
xchg
lcall
pop
push
dec
inc
xor
leave
and
add
mov
cmp
mov
das
gs
je
cmp
bound
imul
pop
fdiv
inc
neg
sbb
jecxz
mov
jg
adc
inc
daa
xor
or
jne
pop
cmp
sahf
pop
sub
rorl
cmp
repz
js
scas
test
movb
adc
xor
xor
andb
mov
jg
ja
and
adc
xchg
int3
push
inc
push
sub
adc
push
adcb
inc
push
pop
mov
arpl
mov
loop
pop
sub
inc
jecxz
fsubl
incb
mov
jbe
add
mov
add
push
mov
lods
enter
sub
cmp
ss
add
test
push
cmpsl
clc
mov
sbb
pop
or
cmp
xchg
stc
inc
dec
cs
dec
jmp
xchg
clc
sub
in
mov
push
or
mov
call
and
push
xor
pop
cmp
mov
jmp
add
jo
jge
cmp
mov
shrl
mov
add
sarl
jg
jb
push
sub
or
pop
cmp
fidivrl
rorl
dec
lahf
orl
mov
inc
xor
jns
xor
jbe
not
jmp
cmpl
jg
sahf
xchg
hlt
lods
jb
mov
repnz
mov
pop
or
or
out
inc
lcall
add
daa
jne
add
mov
test
push
cmpsb
stc
mov
add
jecxz
fisubl
sub
push
scas
movb
mov
cmpsb
je
int
push
dec
ljmp
sub
movups
call
mov
mov
and
sub
test
cwtl
or
andb
add
xchg
inc
sub
sarb
mov
push
or
sarb
rclb
cs
push
sbb
pop
movsb
add
adc
popf
jo
ficompl
add
shlb
pop
jo
add
nop
test
jl
cmp
je
xchg
dec
inc
push
je
push
shl
jne
loopne
inc
cmp
cmp
inc
jmp
imul
xchg
xor
sbb
cmp
mov
stos
sub
icebp
cwtl
out
and
push
push
insl
push
jmp
insl
cmp
add
jl
jp
hlt
or
mov
mov
inc
push
bsf
stc
mov
inc
rolb
loop
mov
xlat
add
jns
outsb
mov
clc
gs
or
pop
sbb
mov
mov
sub
popa
je
inc
je
fsubrs
ss
cmp
xor
ss
mov
jmp
dec
xchg
and
or
cmp
or
or
aad
jp
cmp
sub
repz
nop
adcb
mov
or
lods
std
pop
call
jne
fmull
insl
push
pop
clc
fstps
and
filds
mov
xchg
push
mov
xchg
inc
sbb
inc
dec
shlb
movsb
iret
stos
cmp
jecxz
xchg
pop
inc
arpl
adc
pop
loop
adc
xor
dec
outsl
outsb
and
push
inc
push
add
addl
inc
stos
clc
jmp
mov
jmp
jbe
mov
cmpb
jne
jp
sbb
pop
dec
push
pop
mov
xchg
shll
sub
add
hlt
popa
or
and
pop
dec
push
sbb
or
gs
shlb
sub
sbb
mov
dec
push
sub
and
push
xor
cmp
popf
pop
dec
sbb
popf
ret
pop
sub
dec
jge
add
mov
aaa
sub
mov
pop
cmp
or
or
cmp
xchg
ss
sub
rcr
mov
jl
jnp
pop
lcall
add
jmp
insl
sarl
pusha
mov
cmpl
pop
lret
push
pop
fs
or
push
data16
pop
inc
pop
dec
push
mov
push
les
cli
movsl
pop
aaa
rcl
imul
inc
test
andb
mov
xchg
enter
rclb
jno
or
pop
push
inc
out
pop
mov
fdivs
sbb
or
jge
pusha
aas
cmp
adc
dec
or
jl
cmp
inc
cmp
cmp
sahf
adc
add
je
aas
int
lock
adc
jcxz
repz
pop
cmp
jecxz
push
mov
icebp
mov
mov
in
and
inc
fcoml
xor
hlt
inc
xor
or
xchg
movsl
dec
pushw
jmp
or
jmp
cmpsl
fildll
testb
sub
adc
sbb
icebp
aam
aad
add
stos
lret
and
push
aaa
mov
cmp
jne
test
fdivrs
jno
adc
add
add
add
popf
mov
rcrl
lret
gs
es
push
sbb
mov
jne
in
or
sbb
and
lcall
cmpsl
mov
or
adcl
add
add
insl
jno
sub
fdivl
push
mov
push
cld
cwtl
adc
dec
fs
add
jg
mov
add
cmp
push
adc
sub
push
dec
shlb
iret
mov
cwtl
or
cs
xor
les
add
mov
ret
pop
pop
mov
push
sahf
movb
cmpsb
jae
dec
add
xor
add
daa
pop
jecxz
fadd
pusha
movb
ret
fstpl
push
loopne
cmp
jge
notl
xor
sbb
sbb
sbb
movb
lcall
sti
mov
das
add
call
sub
filds
fiadds
arpl
and
xor
cmp
cmp
es
sbb
inc
jmp
addl
mov
les
ss
or
pop
ret
xor
stc
inc
inc
test
leave
mov
sub
sub
sub
push
cmp
shll
outsl
mov
push
mov
sub
test
mov
pop
test
adc
or
mov
pop
push
ljmp
fnsave
inc
cmp
das
adc
cmp
pop
testl
jge
lods
pop
repz
js
mov
push
movsl
jo
mov
test
jge
cmp
fdivrl
inc
and
mov
push
xchg
lods
cld
sub
es
xchg
mov
dec
movsb
cmp
je
loope
sub
jmp
cwtl
cli
xor
ret
rorb
js
xor
ffree
ljmp
push
pop
sbb
repz
inc
or
nop
adc
dec
mov
adc
sbb
mov
or
inc
lea
loope
pop
incl
outsb
and
movsb
lea
cs
xchg
mov
mov
sub
les
inc
xchg
mov
inc
xor
sub
inc
inc
mov
pop
loope
adc
aaa
adc
sbb
cmpsl
sub
jmp
pushf
popa
mov
and
xchg
push
and
loop
shr
cmp
mov
in
adc
and
pop
and
testb
cmp
xchg
loopne
xchg
pop
inc
or
rorl
dec
cmp
lea
or
es
push
shr
add
or
pop
div
out
fidivs
shr
or
xor
ficompl
lock
add
or
bound
scas
push
bound
sti
in
stos
mov
cmp
push
sbb
cmp
fcmovnbe
cmp
jmp
inc
bound
scas
add
and
adc
fnstcw
dec
and
jne
imulb
addr16
les
add
xchg
or
jg
or
mov
shr
cmp
mov
mov
stos
or
mov
pop
mov
adc
adc
mov
sbb
cltd
repnz
orb
or
cmp
add
movsb
sbb
stc
out
loopne
jo
mov
cmp
sub
and
jmp
cmp
fimuls
inc
sbbb
cli
and
adc
les
loop
andl
inc
ds
test
xor
sbb
fsubs
pushf
clc
stos
negb
push
push
pop
sub
or
test
test
pop
add
test
je
dec
call
test
or
xchg
add
ret
inc
rcl
movsb
cmp
out
fiadds
push
xor
and
leave
mov
cmp
or
xor
cmpsl
push
cld
xlat
out
add
add
call
or
ss
adc
adc
mov
xchg
mov
cmpsb
sahf
inc
add
adc
dec
cmpsb
push
fldl
mov
jle
subl
ja
cmp
add
pop
fcomp
popa
imul
inc
xor
mov
inc
jbe
cmp
lock
jl
cmpb
jl
xor
cmpb
idiv
push
push
test
or
push
push
xchg
adc
or
addb
push
adc
inc
push
push
mov
je
enter
and
cs
iret
ds
inc
adc
fldcw
and
and
push
dec
cmp
inc
aam
rclb
sub
and
push
rorb
inc
adc
loopne
andb
call
jbe
dec
add
mov
adc
enter
out
add
loope
into
adc
push
sub
flds
and
shll
jns
fisttps
test
je
mov
dec
jo
or
test
jmp
and
dec
stos
pop
pop
mov
push
outsl
dec
pop
mov
movsl
xor
rol
ljmp
mov
add
aam
bound
push
jp
or
jmp
and
and
pop
test
push
xor
in
cld
pop
std
and
jge
inc
inc
div
fdiv
fiaddl
adc
adc
sbb
xchg
xor
adc
stos
mov
sbb
push
push
imul
rcr
xchg
movsl
icebp
sbb
adc
xchg
adc
sbb
test
test
test
push
jbe
fwait
dec
jne
pop
pop
pop
fldt
fldcw
adc
cld
jae
or
jae
or
inc
sbb
lds
test
shr
test
stc
jecxz
cmpsl
test
push
idiv
and
not
cld
lock
je
mul
sub
jb
or
add
fisttps
inc
loopne
mov
inc
js
mov
pop
jecxz
lods
add
pop
movsl
es
inc
in
jle
sbb
and
jne
xchg
lds
or
mov
or
into
jbe
jns
or
loop
aas
or
xor
test
mov
mov
add
push
jb
stos
movsb
sub
iret
cmp
bound
adc
es
mov
sahf
push
sbb
and
push
or
jo
and
mov
pop
sub
fiaddl
dec
insl
loopne
or
push
iret
stos
cs
int3
push
fwait
cltd
mov
ss
dec
pushl
add
dec
fidivs
jg
add
mov
fs
jge
rclb
lods
and
popa
in
leave
jne
sub
arpl
testb
imul
sub
leave
je
pop
inc
clc
movq
and
es
fwait
test
je
les
mov
out
jmp
jb
cmp
ja
add
cmp
adc
cmp
jne
lea
sti
lret
shll
leave
adc
mov
xor
idivl
pop
add
add
jp
das
xlat
push
rolb
ja
je
pop
add
mov
pop
lahf
mov
movsl
sbb
pop
pop
test
push
inc
es
scas
sbb
jg
insl
xchg
ret
jmp
imulb
aad
mov
je
iret
push
pop
sbb
push
xor
push
nop
cmp
mov
or
pop
and
sbb
pop
mov
js
movsl
xchg
cmpsl
inc
clc
jne
inc
dec
loope
add
cltd
fstpl
lods
mov
aaa
inc
pusha
adc
pop
xchg
test
cmp
jmp
mov
inc
js
adc
pop
adc
jge
mov
add
jne
mov
jb
cmp
push
sub
je
pop
inc
rclb
adc
xchg
inc
out
mov
sub
subl
adc
inc
lods
cmp
or
adc
in
cltd
push
adc
shrb
sbb
ret
int3
push
dec
inc
inc
sub
sbb
rorb
or
pop
jle
repz
dec
mov
push
rcl
ror
repz
aam
xlat
fcomp
inc
inc
insb
ds
fstpt
mov
inc
nop
data16
divb
inc
inc
add
push
into
bound
das
cmp
test
or
mov
mov
mov
adc
mov
mov
add
push
jl
sub
inc
push
add
xchg
fisubrs
aas
jne
sub
mov
inc
out
divb
in
cmp
frstor
icebp
adc
idiv
pop
idivl
push
xor
push
test
shrb
testb
add
adc
push
push
sbb
add
xor
mov
imul
xchg
mov
jmp
sbb
sbb
lea
or
mov
inc
js
mov
test
sbb
neg
scas
add
pusha
popf
test
pop
addl
adc
outsb
outsl
loopne
sub
mov
xor
inc
adc
sar
fisubs
addr16
call
jecxz
les
mov
adc
les
decl
test
add
push
or
or
adc
add
hlt
pop
sub
icebp
in
out
mov
testl
into
and
lea
pop
and
js
subl
jae
xchg
ja
add
add
push
mov
lods
mov
mov
outsl
in
pmulhuw
ljmp
loopne
inc
or
jmp
or
lea
fld
repz
test
ret
dec
rolb
push
mov
push
or
mov
lea
dec
xchg
mov
or
or
mov
cmp
mov
ret
movsb
repz
mov
mov
push
addl
push
cmpl
mov
ret
and
rorb
jle
jle
adc
fsubrs
sub
jecxz
adc
sar
fbstp
hlt
rorb
add
movsl
push
push
push
lret
push
jo
dec
inc
xchg
test
push
or
mov
test
dec
shrl
in
shr
xchg
mov
or
dec
pop
inc
sub
inc
dec
add
pop
repnz
push
lock
imul
xchg
out
lods
cli
inc
cli
div
wbinvd
sub
sbb
pop
adc
or
xor
loopne
mov
push
jnp
sbb
adc
mov
test
adc
clc
or
and
push
aaa
push
fnstenv
xchg
cmp
xor
mov
imul
ret
xor
dec
pop
jnp
xor
lcall
or
pushw
sub
loop
int3
shll
xchg
testb
or
mov
adc
jp
cmp
or
adc
xor
into
xchg
out
mov
inc
shlb
fdivs
aam
inc
inc
test
dec
ret
sub
jge
mov
lods
dec
pusha
add
icebp
mov
xor
mov
or
push
xchg
cmpsl
call
lea
fcmovu
mov
mov
push
xchg
inc
xchg
inc
add
lods
add
aaa
rolb
out
inc
mov
clc
call
xchg
add
call
negb
notb
test
cmpb
jge
or
or
xor
jge
inc
or
sbb
jmp
add
push
stc
inc
pushf
jne
sbb
in
das
inc
pop
loopne
aaa
outsl
add
pusha
mov
jge
add
jbe
stos
cwtl
sub
insb
sbb
adc
inc
add
inc
mov
pop
data16
push
add
push
nop
cmp
cmp
outsl
push
in
test
adc
adc
mov
mov
pusha
pop
pop
nop
mov
pop
add
or
scas
xchg
jb
push
shll
test
jne
sbb
neg
and
pop
jle
inc
imul
clc
push
adc
jmp
loopne
loopnew
pop
inc
mov
pop
add
je
xchg
lock
add
jecxz
pushf
jmp
sub
out
icebp
ret
sbb
sti
and
ljmp
lock
mov
test
or
into
les
shl
enter
dec
push
test
in
stos
jbe
sub
clc
js
and
lods
mov
test
cmp
push
shlb
add
div
add
sbb
dec
mov
add
in
into
or
or
icebp
lock
inc
xchg
inc
in
in
imul
mov
clc
push
jg
dec
cmp
jge
sub
cmpb
or
add
dec
cmp
into
dec
sub
jae
mov
sub
jle
incb
sub
orb
pop
mov
repnz
ficoms
jp
jne
dec
mov
jb
int
and
add
pushf
adc
icebp
scas
ret
and
add
push
add
inc
jbe
ret
adc
jge
mov
add
add
add
add
test
sarb
adc
vorps
ret
and
xor
ljmp
cmp
or
jmp
jge
jae
mov
or
leave
clc
cmp
add
or
xor
je
pop
pop
scas
add
adc
push
mov
mov
add
pop
pop
mov
aad
xor
les
adc
or
jae
sbb
ret
mov
mov
inc
and
cmp
xor
into
pop
adc
test
mov
add
rcrl
inc
mov
add
ret
jne
or
mov
inc
ret
and
and
inc
push
pop
jae
or
or
add
add
push
or
inc
add
mov
push
je
dec
pop
or
adc
xlat
dec
pop
es
xor
out
pop
mov
and
and
and
pop
fabs
mov
mov
push
dec
vmptrst
xor
cmp
pop
pop
jb
push
pop
mov
fsts
int
insl
cld
mov
cld
iret
enter
je
ja
or
push
mov
jg
rclb
dec
addr16
sub
dec
popf
or
jge
adc
adc
pop
mov
pop
out
cmpl
ss
or
add
xor
mov
add
add
loopne
add
inc
xchg
pusha
mov
xor
in
lock
inc
jg
into
into
sub
pop
and
inc
pop
sub
push
pop
nop
dec
xor
pop
cwtl
pop
mov
cmpb
shlb
mov
pop
aam
aas
cld
nop
push
xor
cmp
pop
adcl
add
leave
lahf
mov
out
adc
add
enter
add
add
mov
into
and
push
and
je
and
mov
inc
sub
pop
jo
sub
sbb
lret
cmp
lret
push
xor
jae
testb
addb
sbb
push
dec
xchg
faddl
and
pushf
add
mov
ret
pop
fmul
cmp
mov
mov
xor
push
dec
jo
or
cmp
mov
cmp
int
rol
ficomps
adc
sbb
test
push
and
daa
xlat
xor
or
and
adc
sbb
jge
bound
ret
dec
mov
lea
jno
sbb
mov
dec
mov
mov
push
rclb
xlat
nop
rorb
mov
push
loop
sbbl
pop
xor
jmp
adc
dec
sub
xchg
sub
jb
sbb
insl
or
out
je
inc
sub
enter
or
push
cmp
in
adc
jbe
inc
inc
int3
call
jle
ret
ficoms
imul
xchg
add
sbb
or
jns
jl
lock
into
or
push
or
clc
insl
sbb
aam
fbld
add
sbb
movsl
rolb
push
cmp
jns
push
sbb
sub
movl
loopne
and
loopne
movsl
or
fsubr
inc
jmp
lods
test
fs
and
inc
push
pusha
rcrb
js
test
pop
sbb
jle
pushl
xchg
inc
repnz
pushl
shr
in
pop
push
xor
mov
call
and
cmp
and
push
loopne
mov
xlat
and
jo
out
jge
shlb
and
int3
subb
mov
cli
shlb
xchg
adc
outsl
lahf
fcoml
and
pusha
xchg
xchg
dec
sahf
sbb
clc
lcall
add
mov
inc
and
mov
or
lret
pusha
push
pop
push
adc
or
imul
cmp
push
adc
ljmp
fbld
push
shll
in
inc
and
mov
mov
push
sbb
cltd
js
aas
outsl
aas
out
rorb
mov
or
mov
sub
push
xlat
xchg
test
mov
jb
pop
sbb
push
mov
sbb
subb
sar
add
sub
jmp
cmp
jp
xor
mov
inc
adc
or
adc
notl
das
adc
shlb
loopne
movsb
nop
dec
jmp
sub
ficoml
cmp
sub
lcall
sbb
sbb
outsb
push
outsb
inc
add
jbe
fsub
mov
xor
inc
cwtl
jo
rolb
xchg
jno
jle
pop
add
sbb
clc
mov
sub
mov
out
or
and
sbb
dec
sbb
dec
rcll
fldt
notl
jge
adc
sbbl
mov
sbb
xor
mov
call
push
sbbb
movsb
adc
push
push
and
dec
lea
popa
sub
sub
int3
jns
loopne
sbb
add
sbb
pop
nop
shlb
push
and
movd
push
jmp
dec
loop
and
scas
xchg
fisttps
inc
add
ss
jne
sub
js
xor
and
inc
xchg
mov
adc
cld
sbb
inc
js
inc
add
push
sbb
xor
cmc
inc
sar
fcompl
sbb
das
cmc
jmp
sub
sub
add
sbb
xchg
sbb
fcmovnb
push
jb
loope
cmp
imul
push
and
sub
inc
cmpsb
pop
and
xor
sub
sub
push
add
add
adc
push
mov
xchg
pop
testb
and
sbb
inc
inc
and
or
push
push
mov
js
cld
sbb
xchg
cwtl
clc
cs
or
popa
inc
pusha
push
or
xchg
and
add
xlat
or
popa
inc
pop
add
mov
shlb
int3
pusha
js
or
push
sarb
add
inc
add
push
les
test
cli
int
cs
jg
data16
add
shlb
push
pop
movsl
jo
lea
roll
adc
test
out
mov
or
add
sub
in
loope
call
pop
cmpsb
ss
dec
sub
or
outsl
out
cvttps2pi
mov
xor
lods
and
or
and
test
cs
push
xchg
fildll
sbb
or
fsubrp
test
jns
fstps
icebp
insb
sub
push
lahf
or
add
bound
andb
cmp
enter
ficoml
test
adc
pop
sbb
push
push
dec
ja
xchg
cs
and
in
mov
pop
sub
mov
out
rsm
or
or
pop
cmp
dec
in
iret
mov
sub
gs
sub
scas
inc
pop
sbbl
fdivr
add
ret
faddl
dec
pop
mov
mov
sbb
jecxz
or
mov
xchg
dec
jb
in
aad
xor
mov
sub
dec
mov
in
jo
xor
cmpsb
xchg
gs
fmuls
inc
cmpsb
in
xchg
lcall
inc
push
in
lock
enter
and
mov
dec
inc
or
and
pop
push
xor
adc
movsb
jp
push
and
sbb
cld
jp
jnp
aaa
or
xor
mov
mov
fdivrs
add
adc
and
je
int3
jl
inc
lock
jge
adc
jl
sbb
jne
cmp
es
inc
inc
adc
push
mov
in
fs
jne
push
std
and
loopne
popa
mov
cwtl
pop
and
dec
jle
adc
cmpsb
sti
push
cmp
inc
ficoml
pop
fstl
add
es
and
mov
sarb
dec
dec
pop
call
pop
and
sub
jg
adc
lret
mov
push
pop
out
xchg
aam
movsb
gs
xor
les
imul
pop
aam
inc
xor
shlb
dec
insl
cmp
test
adc
ret
sub
fcomps
andb
mov
repnz
and
add
jb
inc
sbb
imul
insl
fwait
adc
call
add
nop
push
or
stc
lods
pop
hlt
add
adc
lock
lock
push
shr
lea
mov
mov
fcmovnb
aas
clc
pop
add
ss
arpl
aam
push
or
inc
xchg
mov
add
or
or
call
testl
pop
mov
cmp
ror
sub
cltd
aam
mov
push
xor
daa
call
and
out
inc
adcb
shrb
or
dec
jb
inc
cmp
and
adc
xchg
dec
es
lods
adc
fs
xor
cmp
cltd
fs
dec
inc
dec
fs
insb
inc
es
jle
mov
sbb
add
mov
add
add
adc
popa
repnz
push
rcr
add
pop
xlat
test
andl
jl
in
xor
cmp
mov
aam
jb
aad
in
in
leave
mov
jmp
in
dec
shll
xor
mov
mov
xor
sbb
call
xchg
push
xor
dec
nop
mov
sbb
push
or
bound
ja
or
lahf
outsb
in
and
cmpsl
jae
stos
les
cmp
mov
jmp
jbe
gs
add
aad
or
or
movsb
pop
rclb
add
xchg
mov
jb
lods
call
aam
cmp
je
call
in
mov
add
orb
dec
pop
fmuls
js
add
sub
sub
insl
cmp
cmp
adc
test
cmp
insl
mov
mov
mov
cmpsb
in
leave
in
loopne
in
popa
inc
pop
cmpsl
and
inc
ret
xchg
inc
mov
in
dec
adc
out
xchg
push
jno
xchg
cli
mov
aam
cmp
or
es
xchg
xchg
mov
out
popf
in
int3
out
xchg
cmpsb
shrb
enter
loopne
daa
int
in
sar
cmpb
mov
inc
mov
ret
out
mov
inc
add
aas
sahf
dec
mov
movsb
mov
fcomp
aam
sub
dec
insl
sarb
test
mov
sub
or
test
lods
dec
dec
dec
dec
mov
mov
dec
rol
int3
xor
dec
dec
rcl
lds
and
leave
xchg
mov
mov
pop
jno
sbb
add
in
and
rcll
rorb
das
nop
and
sbb
pusha
sbb
scas
fmul
adc
or
or
inc
movsl
dec
mov
mov
call
imul
fmull
or
das
inc
lea
mov
nop
mov
lock
inc
mov
daa
iret
aas
dec
fwait
cld
inc
mov
dec
xor
insb
push
xchg
stos
int3
das
unpcklps
in
shlb
fbld
rolb
outsl
fdivr
xchg
inc
enter
xchg
lret
mov
xor
cli
leave
scas
mov
cmc
lock
sub
pop
aas
jo
pusha
leave
in
enter
push
insl
inc
hlt
pusha
lods
les
pop
sbb
xor
push
test
cmp
push
xchg
and
or
test
les
pop
enter
pop
xor
movsl
mov
pop
dec
fbstp
test
nop
jecxz
mov
adc
push
pop
sbb
cwtl
lock
sub
mov
sbb
ss
dec
in
stos
adc
xchg
jecxz
ret
xchg
inc
xchg
popf
push
xlat
or
cwtl
xor
dec
xor
add
push
pusha
mov
push
movl
loop
popf
or
dec
mov
mov
add
dec
cltd
ret
dec
hlt
add
push
add
imul
call
nop
lds
pop
pusha
pop
stos
add
cwtl
jbe
aad
outsl
in
sbb
mov
xor
cltd
ss
fs
sbb
dec
jo
insb
jo
stc
add
call
nop
inc
out
push
or
or
or
and
in
or
push
shll
cltd
daa
in
and
call
adc
lcall
push
push
inc
or
mov
sbbb
or
pusha
jb
daa
mov
add
adc
mov
cmp
test
je
jns
xlat
add
test
lcall
jbe
cmp
dec
frstor
add
daa
mov
xchg
xchg
add
push
inc
add
nop
int
mov
xchg
iret
pop
jae
nop
decb
and
sub
xor
inc
das
mov
test
pop
aam
mov
fsubl
sbb
data16
leave
mov
repnz
inc
xor
push
and
subb
in
cwtl
inc
andl
add
movsb
nop
pop
add
int3
popf
cmp
add
arpl
sahf
jno
lds
aad
les
scas
adc
sahf
adc
mov
int3
pop
pop
or
lods
stos
leave
leave
leave
insl
mov
int3
enter
leave
leave
sarb
mov
cwtl
mov
pushf
addr16
dec
mov
dec
xchg
pop
shlb
movsl
push
das
fcmovne
xor
push
mov
xlat
or
mov
inc
xor
je
in
or
nop
jbe
push
clc
and
or
imul
fcomps
xchg
rcrb
test
movsb
xchg
nop
pop
or
sbb
mov
mov
mov
add
gs
sub
or
inc
adc
or
fadd
add
or
in
orl
jno
repnz
push
call
xor
inc
lods
mov
xor
mov
add
rolb
cmova
sbb
mov
pop
or
mov
mov
add
mov
inc
adc
rorb
push
push
sbb
call
sbb
jg
in
pop
pop
int3
sbb
je
push
fsubs
push
rcr
es
inc
les
sbb
aas
wrmsr
lds
dec
int3
and
xchg
xor
inc
dec
and
sbb
rcr
push
xchg
nop
inc
mov
pop
inc
sarl
mov
cmpsb
inc
in
or
sub
xchg
mov
jle
lret
adc
and
sub
mov
cltd
in
xchg
rolb
enter
cmp
inc
mov
std
inc
push
and
xor
movl
jmp
sbb
aam
pop
movsb
cltd
in
mov
hlt
and
dec
or
test
dec
adc
je
ja
or
lds
fmuls
adcl
mov
or
or
xor
adc
rorl
cwtl
ss
mov
fwait
in
call
cld
fld
inc
lcall
sbb
repnz
stos
adc
ret
hlt
mov
dec
stos
pop
inc
xor
sub
inc
or
insl
jnp
in
nop
add
pop
ret
aad
adc
inc
push
push
shll
test
add
cli
lds
test
pop
mov
jmp
repnz
sbb
movsb
int3
sub
mov
mov
and
in
or
mov
pop
dec
push
sub
test
lods
mov
push
shlb
sbb
push
jecxz
fwait
loopne
dec
and
ss
pop
adc
or
inc
fwait
loopne
fdivl
or
movsl
adc
repnz
cwtl
scas
stos
or
or
stos
push
and
in
scas
sti
and
mov
in
xor
adc
push
mov
lret
mov
insb
std
pushf
std
fidivrl
test
pop
adc
add
dec
mov
jge
cmp
dec
repnz
xchg
test
cwtl
in
inc
push
mov
test
pop
xchg
mov
and
enter
mov
in
adc
sbb
mov
cmp
ret
fadds
aam
sbb
sbb
and
inc
sbb
mov
push
adc
pop
mov
fidivrl
adc
and
mov
xor
mov
push
sub
ret
test
cmpsl
jl
mov
adc
imul
jge
movl
mov
adc
pop
mov
add
pusha
mov
cmp
fs
mov
add
loope
xor
sbb
dec
shlb
fadds
inc
cmp
jecxz
xor
inc
mov
in
insb
and
insb
mov
xor
inc
gs
xchg
mov
dec
repz
rolb
xchg
out
jp
or
js
dec
dec
pusha
out
mov
loopne
test
shlb
mov
push
and
insb
xor
leave
test
adc
mov
or
fcmovnb
mov
fmull
pop
sbb
cmpsl
mov
mov
mov
jne
jbe
add
loopne
cld
and
insl
sub
xchg
loop
test
cmp
and
ret
mov
pop
mov
es
sub
shl
adc
div
and
adc
pop
jne
or
aad
or
cmp
xchg
jne
mov
mov
in
inc
in
loope
mov
push
sarb
adc
stos
lcall
dec
and
adc
pmulhuw
xor
imul
push
mov
cmp
ljmp
mov
sbb
inc
shrl
ror
daa
aaa
inc
enter
adc
shll
popf
enter
adc
dec
sub
inc
les
xchg
pushf
adc
in
push
adc
or
add
jae
pop
imul
jb
lock
sub
adc
inc
lcall
out
out
dec
stc
jae
mov
sbb
lret
or
cmpsl
xor
out
cmp
das
cmp
add
adc
sbb
xchg
lret
add
cmp
mov
test
add
mov
idivl
aaa
stos
xor
mov
and
sbb
xor
mov
add
test
adc
loopne
aaa
mov
loopne
fsubr
xchg
mov
out
out
ss
in
and
mov
sub
repz
stos
xchg
imul
mov
in
cmp
and
add
add
xor
pop
nop
mov
rorl
push
xchg
lock
int
sub
les
rorl
adc
lea
sub
cwtl
fs
xchg
scas
pop
je
test
xchg
jne
push
nop
pushf
lods
fwait
stos
jo
aaa
mov
xor
push
addb
inc
xor
insl
xchg
pop
nop
and
dec
jb
mov
and
push
pop
inc
stos
test
enter
inc
xor
inc
mov
insl
adc
aas
les
daa
or
les
sub
test
fwait
xor
int3
inc
dec
cmp
inc
js
inc
test
xchg
sbb
mov
call
call
ljmp
adc
lahf
push
sbb
sarb
rcll
jo
xchg
sbb
mov
roll
mov
cmp
adc
and
sub
ret
pusha
or
call
push
in
mov
les
insl
fsubs
in
outsl
xor
std
add
cltd
nop
inc
sti
or
or
fs
adc
pop
ss
and
adc
add
inc
mov
add
jge
add
mov
in
aam
or
pop
cmp
std
enter
add
or
xchg
or
daa
aam
fldl
add
and
fists
sbb
and
pusha
inc
xor
jb
push
aam
add
fdivs
std
xchg
jb
mov
dec
movsb
sbb
sti
adc
xor
imul
inc
aam
or
mull
or
int3
mov
aad
aad
cltd
push
leave
add
pinsrw
fidivrl
push
add
mov
adc
jmp
psrlq
sub
pusha
test
lods
pop
adc
and
adc
dec
gs
fwait
bound
sbb
and
pop
pop
cmp
adc
inc
int3
sub
dec
pop
nop
mov
adc
int
inc
test
xchg
pusha
lods
cmpsb
pop
test
adc
and
adc
jb
fwait
pushf
test
call
call
cmpsl
cmp
xorl
adc
push
lods
gs
xlat
jno
les
adc
or
shlb
mov
mov
movb
rolb
aam
cltd
jbe
insl
in
in
adc
dec
xor
and
and
fisubl
adc
sbbl
add
and
cld
mov
insl
test
dec
cpuid
xchg
imul
cmpsb
dec
xor
inc
fsub
adc
or
sub
sub
loopne
shlb
insb
mov
push
inc
sbb
in
and
adc
or
shlb
add
psubusb
ret
adc
jl
mov
cmp
int
or
jo
add
adc
xorl
in
dec
xor
mov
adc
leave
and
cwtl
fs
and
dec
mov
fs
push
cmpsb
outsl
mov
cmp
rol
add
clc
and
call
cmpsb
ljmp
cld
push
add
pusha
jae
rol
jo
xchg
sub
cmp
pop
inc
pop
je
jo
pop
insb
test
push
sub
jne
cltd
insb
xlat
push
in
adcb
adc
xchg
pop
dec
pop
adc
pop
dec
sbb
mov
cmp
test
add
adc
ret
mov
out
movsl
sbb
es
xlat
add
fldt
sbb
dec
stos
jge
test
xlat
mov
adc
mov
or
cmp
shrb
and
inc
xchg
push
push
std
out
xchg
orb
adc
sarb
les
jne
int3
add
add
pusha
ret
mov
in
flds
shlb
fnclex
je
push
enter
fistl
fcomps
stos
test
addb
test
and
mov
test
and
xlat
out
daa
icebp
xchg
fistps
repnz
cltd
mov
iret
test
andb
and
cmpsl
adc
jmp
and
fcompl
adc
les
leave
mov
lock
outsl
xor
mov
in
push
clc
inc
lock
jns
leave
jmp
lds
mov
pop
sub
pop
mov
adc
dec
sub
adcl
mov
and
cld
in
push
inc
test
lea
xlat
push
mov
in
push
shl
aaa
iret
aam
dec
movb
frstor
rolb
xor
or
call
fnsave
enter
test
aaa
pop
in
and
callw
pop
jmp
cmp
movsl
xor
fidivl
in
in
sti
test
ficomps
xchg
imul
adc
and
sahf
into
push
push
es
je
scas
mov
stos
or
push
nop
sub
sub
push
or
pusha
dec
xchg
scas
test
or
enter
dec
inc
insl
pusha
enter
sbb
cmpl
xlat
push
insl
xchg
inc
adc
js
inc
fcompl
cmp
loopne
nop
ficompl
mov
sbb
mov
push
sbb
mov
cmp
lret
jb
outsb
enter
sarb
in
ret
adcl
cmpb
fwait
push
adc
popa
mov
nop
mov
aam
insl
in
fistps
add
sub
sar
push
pop
inc
sbb
std
pop
shlb
pusha
or
stos
test
ljmp
mov
pop
repnz
mov
es
inc
sub
loope
rorb
in
or
fistl
or
inc
pop
jb
mov
test
and
cltd
sbbb
dec
sarb
and
fs
aam
jle
sub
jmp
push
ds
sarl
fs
imul
out
pop
mov
xor
mov
sarl
push
dec
fs
fnstcw
bound
cmp
push
outsb
add
out
cmpsb
push
rcl
aas
data16
hlt
stc
and
in
and
sbb
pop
push
sub
jg
push
inc
adc
cmp
dec
mov
les
fistpl
or
jnp
mov
add
and
outsl
lahf
pop
shlb
leave
or
adc
les
rcr
out
leave
ljmp
cmpb
or
iret
repz
push
sub
mov
cmp
ds
inc
mov
loop
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
push
or
popf
subb
pop
pop
popa
bound
gs
imul
ljmp
jno
jae
jne
ja
jns
xor
xor
xor
ss
cmp
sub
daa
stc
dec
call
pop
das
mov
rcll
xchg
adc
push
or
cmp
rclb
cmpl
mov
push
push
je
xchg
lret
out
lcall
imul
sahf
je
dec
outsb
je
jb
outsl
arpl
fs
out
sbb
sbbl
imul
push
sbb
jb
gs
xor
cs
adc
popa
fs
sti
out
popa
insb
popa
je
outsl
outsb
push
cwtl
push
add
lock
rdpmc
add
psubusb
and
sbb
mov
jg
jmp
jb
js
je
jb
gs
cmp
or
or
outsl
add
add
add
cs
sbb
push
gs
push
je
mov
cmp
popa
jb
mov
outsb
dec
jg
mov
xor
xor
cmp
cmp
sahf
lahf
ja
add
dec
and
jns
sarl
das
das
adc
push
dec
push
inc
in
into
mov
inc
gs
insl
bound
daa
dec
outsl
jbe
pop
mul
jle
arpl
push
jo
sub
addr16
pusha
out
push
orl
loopne
aas
inc
jo
imul
bound
testl
into
mov
pushf
cmpsl
xchg
popl
ret
jg
addr16
push
jne
xor
mov
daa
xor
lds
clc
sbb
dec
cmp
dec
js
push
jne
xchg
xor
dec
inc
ds
popa
das
jo
inc
adc
pop
fcomip
or
jb
mov
in
dec
push
test
jl
pop
insb
sub
push
push
pop
loop
or
and
add
andl
sub
adc
aas
cmp
cmp
ds
inc
das
pop
pop
aas
inc
aad
xchg
pusha
cmp
jge
jg
xor
arpl
test
sbb
dec
and
push
pop
or
in
jecxz
inc
adc
push
inc
insb
jae
rorl
fs
mov
pop
inc
inc
mov
dec
mul
or
jo
insl
and
jb
je
mov
jbe
dec
push
push
sbb
inc
fistps
dec
dec
inc
and
add
stos
push
insl
xchg
add
inc
outsb
push
jo
imul
push
pop
mov
je,pn
jnp
inc
inc
jo
xchg
idivb
mov
inc
and
fs
push
orl
insb
gs
cltd
xorb
inc
popa
and
shr
mov
mov
jne
pop
xor
and
adc
insl
push
xchg
push
jo
xor
mov
mov
dec
rolb
les
adc
add
push
fisttpll
xchg
and
or
imul
add
or
fs
into
hlt
xor
bound
in
add
dec
in
pushf
add
test
int3
fidivrl
popf
jb
loopne
outsl
mov
ret
or
sub
dec
addb
das
arpl
orb
cmpl
xchg
dec
popa
sub
pop
push
fwait
outsb
mov
addl
insb
imul
lret
int3
or
add
or
gs
or
and
insb
popa
pop
xor
gs
push
shrb
fistps
push
and
pop
aaa
xor
in
xchg
shll
adc
add
pop
dec
add
add
insl
push
fcoms
adc
jae
lods
call
jne
jbe
add
jmp
xchg
push
mov
or
gs
or
lds
scas
inc
out
inc
jle
outsl
push
mov
imul
lcall
bound
cmp
jno
filds
insl
in
ljmp
imul
xchg
bound
imul
push
pop
in
inc
jno
stos
pop
out
rclb
leave
nop
loop
jp
inc
insl
imul
cmp
xorl
in
xor
add
mov
and
and
or
into
lret
cmp
sub
jae
xor
add
jo
sub
test
cmp
jb
push
sub
add
xchg
lret
inc
sub
pop
dec
jmp
dec
or
jo
and
mov
fstp
cmp
cwtl
ja
ds
inc
inc
sbb
push
push
dec
cmp
jg
insl
xor
inc
add
cmpb
rol
jmp
filds
jno
icebp
pusha
inc
mov
clc
ret
movsl
mov
jno
add
or
outsb
orl
imul
test
cmpsb
gs
popa
dec
add
xor
jg
js
mov
imul
mov
add
xchg
sub
in
imul
xchg
adc
out
add
adc
add
add
add
add
xor
cmp
pop
or
aaa
ds
push
pop
imul
hlt
and
or
pusha
add
js
mov
pop
sub
add
sbb
sahf
mov
xchg
push
xchg
test
add
orb
into
in
fnstenv
enter
lret
jb
shrl
push
jo
add
xchg
loop
pusha
push
inc
add
loop
push
stos
fbld
ror
js
jo
dec
rorb
cmp
pop
sbb
cmp
mov
nop
xchg
xchg
xchg
mov
dec
lock
es
pop
and
adc
xor
dec
pop
cmp
test
pop
add
loope
adc
cs
adc
dec
pop
data16
cmp
je
nop
out
pop
jns
mov
dec
ficomps
mov
in
stos
sub
inc
sub
dec
add
dec
push
xchg
adc
addl
adc
mov
and
rolb
add
loopne
roll
add
subb
add
mov
add
push
mov
sbb
add
add
inc
sbb
out
aas
sub
add
incl
mov
mov
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
mov
jmp
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
ret
inc
enter
int3
int
iret
rcl
rcl
aam
xlat
fcomp
fcmovu
loopne
loop
jmp
in
out
call
in
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
std
incl
inc
roll
incl
inc
test
dec
mov
xchg
sarl
aam
pusha
lcall
int3
fisubl
outsl
ja
add
cs
jae
jb
bound
dec
icebp
popf
mov
stos
inc
ss
popa
outsl
mov
fimull
jne
daa
outsl
lcall
dec
mov
outsl
js
push
push
inc
push
dec
sbb
dec
and
popf
mov
out
mov
dec
mov
stos
aam
mov
in
dec
imul
pop
jns
inc
mov
imul
into
push
and
inc
jb
jns
daa
scas
inc
mov
mov
gs
cmp
bound
mov
xchg
fs
sub
pusha
les
push
mov
mov
jns
outsl
pop
sbb
push
pusha
inc
jbe
push
jnp
jbe
push
push
lahf
mov
jecxz
jns
and
mov
push
dec
clc
jle
dec
fiaddl
cmp
push
or
rcll
and
cmp
xchg
mov
push
push
jae
cmp
and
pop
pop
cmp
call
movsl
jae
addr16
subl
gs
movsl
push
mov
xchg
mov
inc
or
add
out
push
push
dec
testl
dec
divb
xor
cmp
fildll
dec
jge
loope
mov
jg
imul
call
lds
dec
xchg
sbb
xchg
jg
popa
mov
ret
pop
jl
mov
jg
sub
inc
aad
push
or
cmc
fcomps
das
je
outsl
xchg
daa
negb
ret
daa
popw
pop
cmp
sahf
jl
cmp
cmp
push
das
push
fcmovnbe
cmp
inc
jl
push
jle
jbe
imul
addr16
sub
sub
inc
stc
mov
and
cmp
mov
dec
pop
stos
jb
pop
pop
cwtl
jb
sbb
push
jb
lods
xor
adc
xor
int3
lock
lret
lods
or
add
sbb
and
nop
mov
jo
sub
test
sub
cld
jns
push
add
hlt
push
call
sahf
out
mov
rcrl
add
inc
sti
push
aam
cwtl
imul
add
jl
je
fs
out
mov
pop
pop
cmp
out
dec
sti
data16
inc
push
int3
adc
int3
jns
repz
push
fmuls
dec
dec
push
inc
inc
cmpsl
sbb
mov
lods
je
cmp
xor
and
jns
out
sbb
adc
add
cmp
lock
decl
repz
shrb
repz
or
incb
test
iret
repz
pusha
inc
xor
sub
sahf
out
ds
std
in
loopne
mov
sahf
out
xchg
insb
inc
sbb
cld
repz
rcl
mov
pusha
xor
pop
sbb
aam
mov
lcall
fisttpl
outsb
push
xor
movsl
add
cmpsl
pop
push
outsl
pop
cmpsb
bound
fs
jns
sub
sbb
je
ljmp
dec
sti
push
lods
pcmpgtw
xor
add
jle
push
mov
cmp
inc
inc
dec
jae
insb
divl
pop
flds
mov
sbb
decl
push
dec
inc
dec
xor
inc
dec
dec
dec
push
push
loop
and
inc
mov
add
dec
dec
inc
add
adc
pushl
or
sub
adc
incl
popa
into
mov
mov
int
mov
adc
outsb
mov
ds
pop
in
stc
pop
jae
pop
clc
lret
sbb
jb
pop
enter
jge
arpl
cmp
adc
dec
scas
jp
adc
in
sbb
xchg
fisubrs
and
cmp
dec
jmp
push
cmpsb
iret
lret
add
inc
mov
idivb
pusha
add
pop
sahf
fwait
jns
pusha
pop
ss
sbb
pop
jns
ds
xor
incb
mov
xor
dec
popf
pxor
xor
lret
aaa
push
div
inc
sub
dec
xchg
cmp
push
int
das
xchg
pop
and
xchg
lret
sahf
icebp
mov
call
loopne
cmp
inc
mov
xchg
push
pop
popa
push
or
scas
int
mov
ds
leave
loop
mov
xchg
dec
mov
filds
scas
lods
jb
xor
mulb
negb
out
mov
pop
and
es
popa
cli
iret
mov
flds
sbb
push
mov
jg
or
outsb
jbe
and
push
jb
add
inc
std
inc
icebp
jne
mov
daa
inc
mul
mov
push
je
dec
push
dec
jg
push
sub
mov
push
dec
and
pop
xor
dec
cmp
incl
push
pop
dec
or
add
adc
pop
inc
cmp
mov
lcall
pop
xor
dec
adc
add
push
and
xor
xor
dec
dec
inc
cmp
add
jb
jbe
inc
inc
ss
ds
flds
sbb
xor
xor
sbb
inc
in
jle
ds
dec
xor
dec
push
sub
push
push
inc
and
aas
mov
xor
pop
inc
add
adc
inc
ret
mov
sbb
adc
ljmp
adc
xor
inc
and
lock
or
pop
xor
pop
push
or
out
push
dec
adc
decl
jl
jnp
add
pop
adc
pop
pop
inc
add
add
fildl
push
pop
push
push
pop
adc
push
inc
push
push
adc
push
adc
jge
adc
push
inc
and
pop
xchg
jge
insl
dec
push
inc
push
and
or
dec
repnz
xor
inc
adc
or
test
pusha
sbb
sbb
adc
push
cmp
adc
pop
pop
ds
dec
mov
cmp
inc
inc
push
add
ds
dec
inc
sbb
inc
sbb
dec
inc
push
fisubrl
sbb
xor
cmp
pop
dec
dec
pop
push
int3
inc
insl
test
sub
dec
add
xor
lock
push
inc
or
dec
xor
add
mov
dec
cmp
push
cmp
adc
xor
push
mov
push
or
jb
push
lea
es
pop
push
gs
mov
sub
and
ss
mov
pop
dec
incb
or
sbb
sub
adc
cmp
xor
push
and
ret
fbld
add
cmp
cmp
jnp
inc
pop
adc
dec
mov
dec
cwtl
in
push
cmp
imul
jmp
jl
testl
inc
lea
xchg
lahf
push
mov
idivl
lret
jg
push
repz
sahf
out
sub
daa
cmp
xor
or
es
addl
push
hlt
and
ds
cwtl
data16
mov
xor
adc
jl
outsl
cmp
outsl
insl
mov
popa
adc
push
lret
and
mov
popl
test
push
dec
bound
fistpl
into
xor
and
cmp
out
es
sub
fiadds
out
xchg
xchg
ds
mov
out
push
idivl
aas
aas
push
push
push
out
cmp
jno
lods
fisubs
popf
in
repz
notb
xchg
jecxz
or
insl
repz
pop
ds
and
lds
les
adc
or
xor
scas
test
call
xlat
inc
add
push
sbb
sbb
push
and
pop
push
jne
fisubrl
pop
mov
push
imul
pop
or
inc
sub
or
nop
push
or
mov
sahf
inc
fisttpll
push
idivb
push
push
cmpsb
and
xor
push
fcoms
fistpl
jmp
and
mov
xor
xor
ss
sub
roll
push
sbb
push
and
and
push
fildll
sbb
sub
dec
pusha
sub
pusha
inc
idivl
sbb
cmp
and
pop
and
in
mov
inc
cmp
in
adc
iret
ds
in
sbb
sub
add
mov
jae
fnstcw
mov
xor
out
ret
roll
pop
cmp
jecxz
dec
add
cmp
xor
outsb
scas
dec
popa
dec
jo
dec
pop
jo
xlat
in
inc
pusha
sub
daa
dec
xor
xor
add
jo
push
push
push
adc
sbb
movsl
add
push
adc
das
fwait
lcall
das
push
bound
shll
cs
addl
adc
mov
jl
jbe
inc
inc
adc
xchg
pop
cmp
jo
xor
dec
pushf
xor
sbb
adc
ffreep
pop
dec
inc
scas
scas
push
push
pop
cmp
loop
pop
add
push
imul
add
cmp
mov
xchg
testl
and
push
add
sbb
push
icebp
dec
or
cmp
and
clc
cmp
test
pusha
pop
outsl
arpl
mull
clts
icebp
in
xor
inc
dec
sbb
mov
outsl
jle
push
cmc
or
popa
into
aaa
daa
push
pop
inc
sub
xor
mov
sbb
test
or
scas
jne
jo
mov
dec
inc
test
leave
or
cmp
add
pop
inc
scas
in
xor
divl
adc
and
mov
js
add
or
sbb
aas
add
aaa
out
and
jle
push
cmp
in
dec
pop
cmpl
push
sbb
cmp
jmp
pop
sbb
aad
loopne
pusha
inc
sahf
cmp
outsb
sarl
lcall
movsl
jmp
adc
and
adc
ds
pop
ficoml
ss
decb
and
jbe
add
sbb
sub
pop
inc
mov
add
and
test
inc
or
insl
pop
add
cwtl
mov
cmp
or
scas
fnstcw
ja
fcoms
lods
push
daa
pop
pop
lcall
adc
push
push
sbb
jg
push
ss
sbb
aaa
sbb
mov
adc
cmp
adc
and
sbb
and
ja
sbb
sbb
mov
push
subb
js
sub
add
lods
cmp
ja,pt
and
mov
jae
insl
popa
imul
inc
sbb
push
iret
fiadds
jo
jle
sbb
push
ja
and
cmp
push
adc
into
js
adc
cs
out
cmp
add
cmp
mov
xchg
pop
add
sub
push
lahf
ja
pop
cmp
and
add
and
adc
or
out
or
xlat
pop
mov
mov
dec
or
pmullw
loopne
out
and
and
xchg
mov
pop
daa
push
loopne
and
sub
cmp
inc
xor
push
cmp
xor
push
pop
aas
in
dec
add
mul
int3
aas
inc
xor
or
or
mov
push
cs
mov
push
shl
add
ds
pop
jge
cli
pop
das
push
out
push
push
inc
xchg
add
mov
cli
pop
mov
mov
cmp
inc
cmp
ret
sub
daa
lea
cmp
or
pop
int
add
dec
dec
ja
nop
xchg
and
push
into
pop
adc
sbb
mov
xor
scas
mov
and
bound
add
out
inc
mov
mov
mov
les
push
gs
sub
or
add
pop
cld
negl
dec
push
push
push
das
xor
xor
lock
and
jnp
sub
sbb
xlat
or
pop
sbb
xor
scas
jge
loop
and
dec
sbb
cmp
xor
dec
fsubl
je
jae,pn
push
mov
arpl
fldcw
dec
fidivs
test
push
movsl
mov
imul
xchg
std
inc
and
lods
pop
cs
cmpsb
int
push
ja
xchg
dec
xchg
movl
inc
add
adcl
xor
mov
cmc
or
push
dec
fistl
adc
cmp
adc
add
dec
dec
sub
sbb
cmp
dec
pop
pop
xor
sub
xor
xor
cmp
mov
inc
or
cwtl
mov
inc
xor
add
adc
inc
jle
pop
in
adc
mov
or
fildl
push
and
sbb
repnz
fsubrl
adc
mov
insb
cmpsb
jle
mov
and
push
inc
sbb
xor
orl
adc
pop
mov
mov
add
pusha
dec
pop
add
cmpsb
das
mov
sub
add
jno
pop
or
push
adc
mov
xor
filds
cli
sbb
mov
and
xchg
shr
ljmp
movsl
outsl
xchg
out
push
and
push
push
dec
sbb
xchg
lods
and
mov
pop
test
ficompl
adc
sbb
or
push
hlt
lods
adc
xor
add
in
dec
test
mov
sbb
pusha
mov
aaa
or
push
ds
mov
daa
adc
add
repnz
adc
cmp
pop
repnz
pop
in
pop
icebp
dec
pop
cmp
fmul
out
sub
jae
jns
fnstsw
fnstcw
nop
lret
fistps
dec
int
jecxz
cwtl
call
js
xchg
pop
add
dec
les
xchg
inc
push
in
push
jo
in
add
loopne
repz
inc
loope
add
inc
cmp
test
and
and
pop
cmp
or
rorl
inc
inc
push
loopnew
mov
imul
jbe
outsb
mov
inc
rolb
xchg
aas
sub
push
sub
insb
mov
push
comiss
pop
push
dec
mov
sbb
scas
daa
push
pop
pusha
inc
sub
cmp
xchg
xor
cmp
addl
add
aam
sub
es
cmp
or
adc
lds
aaa
and
or
fadds
xor
add
ds
not
test
test
adc
ret
inc
daa
testb
into
mov
inc
xor
sub
add
mov
xchg
scas
imul
sub
shrl
insb
push
and
jno
loopne
jmp
cld
nop
xchg
mov
movaps
out
cmp
and
inc
jns
cmp
enter
lcall
xor
mov
pop
out
dec
add
shl
add
push
enter
mov
aaa
and
add
rdpmc
rorl
ds
insl
push
xchg
sbb
call
cli
pop
xchg
add
lea
loopne
pop
cmp
and
cmp
adc
pop
or
adc
adc
push
pop
sbb
push
xchg
and
dec
or
fistps
pop
push
int3
cmp
and
cmp
cs
lcall
das
mov
loopne
das
les
cmp
mov
cmp
xor
fadds
xchg
sbb
pop
aaa
mov
cmp
push
add
add
push
divb
jae
push
pop
cmpsl
hlt
ss
fadds
mov
dec
cwtl
push
hlt
lcall
add
jae
sbb
adc
hlt
push
mov
sbb
xchg
sub
cmp
sub
push
inc
cmpsb
mov
or
pusha
popa
mov
pop
cmp
adc
repz
and
push
add
mov
mov
cmp
dec
call
dec
cltd
pop
dec
or
pop
and
pusha
xor
lock
pop
push
or
les
xchg
push
hlt
mov
mov
sub
and
pop
sbb
cmp
pop
scas
add
inc
outsb
jo
adc
adc
push
in
pushf
or
pop
inc
cmp
mov
icebp
and
xor
add
add
and
and
dec
pusha
dec
cltd
xor
into
mov
fists
xor
add
push
add
insl
js
or
xchg
fistl
sub
fstpt
adc
sbb
das
sbb
test
lods
testb
pop
xor
mov
popa
xchg
xchg
xchg
call
and
pop
insb
xor
jns
aaa
int3
xchg
mov
and
inc
add
or
aam
cwtl
shll
cmc
addr16
imul
xor
sub
xchg
pop
les
mov
pop
popa
push
push
dec
xor
enter
adc
adc
dec
xchg
and
inc
add
in
add
out
add
push
push
and
push
pop
pop
add
jae
pop
dec
jg
pushl
inc
or
aas
xor
dec
and
mov
mov
jbe
cmp
mov
add
test
sbb
daa
adc
or
cs
cmc
sbb
xchg
dec
ss
and
aad
loop
push
sub
cmp
out
rolb
sbb
mov
arpl
or
cmp
pop
xor
ss
je
pop
ret
dec
mov
inc
adc
pop
xchg
push
dec
push
ret
jle
out
inc
xor
inc
push
dec
pop
subl
cmpsl
dec
nop
mov
test
flds
aaa
jbe
ret
dec
je
sub
ja
loope
add
es
aam
pop
je
jo
insb
gs
ja
fs
sbb
imul
mov
add
pop
das
cmp
push
inc
or
mov
movsb
inc
cmp
push
jecxz
out
inc
add
push
push
sqrtps
cwtl
lcall
mov
imul
dec
repz
ret
pop
pop
fsubl
shrl
push
mov
lea
das
inc
or
xchg
push
mov
add
dec
xor
loop
dec
dec
push
aaa
filds
jg
and
mov
mov
out
push
and
mov
mov
adc
mov
mov
lods
pop
dec
movsl
enter
push
push
mov
inc
addr16
jg
push
insl
ss
adc
cli
mov
sub
sub
das
idivb
mov
sbb
mov
ds
pop
sbb
jg
subb
mov
dec
fsubs
lods
cs
pop
sbb
mov
pop
repnz
dec
xchg
pop
shl
dec
push
add
pop
in
pop
cmp
adc
repz
and
xor
aaa
xor
cmp
and
fcoms
inc
pop
push
popa
insl
insb
test
lcall
push
dec
imul
jns
dec
jl
pop
pop
jb
pushf
cmp
dec
sub
iret
and
sbb
imul
out
cmp
inc
fmull
out
int3
mov
roll
mov
mov
xor
inc
xor
push
dec
out
dec
pop
aam
adc
pop
xor
sub
mov
ss
cmp
xor
sub
sub
xor
inc
es
stos
xor
xor
test
loope
add
jne
cmp
adc
notl
insb
push
outsb
add
mov
sahf
push
mov
js
push
or
lock
loopne
jne
sbb
js
in
adc
jbe
cmp
jo
jg
jg
pop
bound
je
bound
mov
push
cmp
or
mov
add
pop
jg
pusha
push
loopne
addr16
or
xlat
pop
pop
ja
test
xor
insl
pop
or
das
or
push
fimull
lods
das
and
dec
add
filds
add
pop
iret
add
sub
add
aaa
repnz
ror
pop
or
movsl
ret
or
push
outsb
lock
cmp
inc
pop
dec
cmp
aaa
jg
or
xchg
xchg
mov
push
add
cmp
loop
cmp
sub
add
and
jge
pop
inc
dec
xor
jns
lret
shl
inc
pop
or
loopne
data16
out
cwtl
jae
pop
xchg
ret
and
xchg
push
adc
cmp
in
das
inc
lods
xchg
ds
add
and
mov
sbb
fs
repnz
je
nop
add
addr16
adc
pop
add
xchg
imul
aad
pop
test
mov
sti
sahf
mulb
mov
enter
cld
and
mov
cmp
in
sarl
iret
push
es
fstps
in
fstpl
lret
cs
sahf
xlat
insb
mov
xor
add
data16
les
mov
inc
outsb
iret
subb
aaa
les
lahf
iret
in
pop
ss
pop
xor
mov
js
push
inc
pop
pop
pushf
popa
mov
pop
mov
add
mov
shrl
jle
jb
rcll
pop
shlb
aas
push
js
rclb
das
jp
lret
jnp
and
mov
cs
push
jnp
mov
cmp
out
andl
inc
ljmp
ss
xchg
test
sbb
fistl
aad
addr16
std
xchg
xchg
xchg
jns
fwait
cmp
dec
add
xchg
iret
jnp
in
xchg
aaa
mov
mov
push
repz
xchg
out
cmp
dec
outsl
sti
jns
fwait
jge
cwtl
pop
orb
push
movsb
rorl
lahf
out
dec
cltd
out
push
push
sbb
repz
divb
enter
mov
lcall
out
xlat
insb
push
mov
out
jns
iret
call
cwtl
push
ss
fcompp
ds
xchg
ss
mov
xor
xchg
mov
repz
ficompl
sarl
sbb
sub
faddl
out
xor
cmc
xor
iret
repz
jl
mov
clc
xor
push
pop
mov
ja
jb
sahf
pop
ds
sahf
and
push
push
iret
repz
mov
mov
cmp
mov
jb
mov
jns
iret
fiaddl
nop
sub
out
ds
xchg
flds
xchg
or
sahf
inc
fs
mov
cmp
jns
sbb
jmp
inc
mov
jmp
aad
pop
dec
sbb
scas
sub
adc
and
and
rcrb
push
push
mov
xor
adc
imul
mov
jbe
pop
mov
jg
adc
das
add
idivb
jg
jg
adc
push
and
pop
sbb
enter
adc
stc
jg
xchg
inc
repnz
iret
pusha
or
test
mov
in
push
add
add
xor
sub
data16
inc
stos
outsb
push
push
jae
les
test
fistpll
inc
push
mov
pop
daa
inc
sbb
or
aaa
push
inc
sbb
aas
jno
ja
jae
fisubl
push
out
jge
iret
mov
es
dec
cmp
sub
je,pn
aam
mov
pop
cmpsb
dec
sbb
pop
add
push
inc
cmpsb
jp
stos
mov
insb
pop
push
dec
pop
je
mov
aaa
push
fisttps
outsl
mov
push
ret
scas
xorl
xlat
jbe
lds
pusha
iret
push
pop
retw
push
ret
inc
inc
dec
or
dec
subl
pushf
push
xor
aad
into
mov
jl
es
rolb
push
push
pop
jo
cmp
push
push
out
adc
mov
das
adc
fwait
test
sahf
xor
popa
insl
jo
notl
insb
je
push
addr16
jo
jae
mov
scas
bnd
outsl
and
aas
cmpb
sub
insb
cmp
or
cmpsb
mov
mov
xor
xor
xor
xor
xor
jle
outsl
mov
and
xor
push
xor
xor
cmp
push
add
cmp
push
gs
imul
sti
mov
out
xor
push
aas
push
pop
add
inc
and
or
cmpb
push
cmp
aas
imul
or
add
test
shrb
lods
jne
and
ds
adc
or
pushf
push
mov
inc
and
ds
push
add
jne
loope
xchg
add
inc
dec
and
bound
jmp
push
lahf
sbb
push
inc
adc
mov
mov
add
cvtps2pi
mov
add
ds
subl
inc
add
js
sub
lods
repnz
xor
cmp
pop
inc
and
ffreep
imul
cmp
fsts
and
inc
or
popa
xor
fcoms
sub
sub
inc
fcomps
jbe
pop
mov
or
xor
sti
push
into
clc
push
cs
lods
push
test
out
jecxz
inc
mov
mov
sbb
pop
int3
adc
sub
mov
sub
adc
and
fadd
xchg
out
and
push
jnp
rcrb
daa
mov
testb
sbb
test
jns
movsl
sbb
or
and
js
mov
push
jecxz
add
cmp
push
bound
idivb
push
pop
inc
cmc
aaa
lahf
lea
mov
xchg
lods
mov
push
mov
inc
add
push
pop
outsb
mov
adc
daa
lods
shrl
shll
jge
lods
testb
das
add
adc
aaa
iret
or
mov
pop
das
stos
test
cmp
ret
adc
imul
sub
xchg
daa
mov
das
dec
cmp
mov
test
dec
dec
dec
inc
dec
mov
and
or
inc
cmp
fnstcw
adc
dec
lcall
mov
imul
pop
scas
pop
lock
lock
daa
lahf
pop
shrl
push
xchg
outsb
popl
pusha
in
lods
dec
pop
pop
int
mov
push
andb
or
mov
push
sbb
cmp
ret
lock
sub
and
xor
fisubl
insb
lcall
push
or
daa
pusha
es
jb
pusha
pushf
pop
bound
add
adc
xor
js
adc
jl
jl
xor
mov
sbb
pop
fcoml
add
ss
mov
adc
mov
ret
sbb
xchg
adc
fstpt
cmpsl
call
pop
add
xchg
pop
add
mov
addr16
adc
inc
dec
and
inc
mov
sbb
mov
mov
je
clc
repnz
cs
cmp
das
mov
jns
push
test
xchg
iret
sbb
inc
sub
dec
add
loopne
shlb
out
lret
adc
sub
or
adc
inc
sbb
push
dec
fcoml
pop
add
pop
or
or
and
das
pop
add
mov
mov
sbb
or
dec
cmp
insb
xor
or
popa
cmpl
push
loopne
pop
insb
test
cmp
or
enter
jo
out
addr16
mov
rorb
sub
ljmp
mov
sub
push
push
filds
in
xor
mov
ds
call
mov
dec
mov
adc
stos
pop
les
pop
mov
pushf
jbe
gs
cs
mov
lea
arpl
sub
mov
pop
loope
repnz
cmovno
push
push
add
jp
adc
push
jbe
sti
cmp
bndstx
pushf
in
inc
pop
fs
ds
pop
fmull
cmp
add
imul
cmp
fisubrl
mov
dec
aad
and
fmull
adc
and
nopl
xchg
and
fwait
push
fs
loop
xor
data16
or
push
push
sbb
xchg
cmp
pop
sete
push
mov
jo
xor
or
sbb
jmp
mov
shlb
sbb
adc
hlt
adc
test
add
push
xor
loop
jp
lcall
addb
rorb
mov
orb
mov
xor
push
inc
push
adc
xlat
jb
inc
sbb
cmp
dec
mov
adc
icebp
les
cmp
ja
sub
jno
sbb
add
xor
adc
inc
dec
dec
dec
cmp
inc
aas
fldt
addps
test
dec
ljmp
jo
adc
push
inc
add
ljmp
xor
sbb
xor
in
cmp
pop
xor
push
push
das
cmp
mov
pop
sbb
repz
stc
cmp
andl
stc
xor
cltd
or
xchg
fwait
int
or
pop
or
insb
add
das
adc
sbb
and
sub
iret
xor
inc
mov
mov
mov
lret
mov
popa
xchg
sbb
sub
das
or
xchg
pop
adc
pop
add
data16
mov
pop
adc
push
push
fldcw
lret
str
add
mov
inc
stc
das
incl
pop
incl
arpl
push
pop
pop
cs
and
in
fs
cmp
nop
pop
add
loopne
fsubrs
xor
inc
movsl
xor
jmp
daa
mov
pusha
std
jb
jo
mov
lds
shlb
fsub
xor
xor
add
cmp
repz
adc
or
pop
sub
adc
adc
push
jne
rcr
add
dec
push
cmp
push
pop
push
out
clc
mov
push
push
push
inc
add
sub
pusha
das
add
push
add
ss
inc
push
and
call
sbb
inc
adc
and
or
adc
xor
clc
aaa
cld
pop
cwtl
sbb
or
and
fs
adc
push
mov
xor
push
hlt
sbb
inc
lret
roll
call
cmp
adc
push
dec
cmp
push
mov
xor
push
xor
sbb
das
push
adc
push
inc
ss
mov
and
xor
sbb
inc
adc
dec
or
add
push
sbb
dec
add
jne
lcall
dec
push
or
inc
xor
or
and
pop
dec
push
xor
jno
shll
and
adcb
pop
xor
add
push
dec
mov
push
std
orb
mov
cmpsl
sbb
xor
xor
push
pop
dec
arpl
push
pop
add
loop
cmp
mov
mov
sub
add
iret
inc
out
and
or
xor
mov
rcrb
adc
xchg
inc
and
xchg
xchg
clc
inc
loop
push
dec
fstl
mov
inc
cmpsb
push
inc
movzwl
cmp
and
cmp
lret
add
sbb
incb
lahf
mov
int3
push
push
out
dec
pop
or
inc
push
dec
inc
dec
push
dec
inc
arpl
push
dec
add
outsl
add
inc
sub
jg
das
mov
inc
aaa
jno
sti
shlb
ret
icebp
adc
pop
movsb
cmpb
aad
sbb
sbb
stos
pop
fcom
adcl
test
ret
jge
push
je
mov
pushl
fcompl
shrl
xchg
out
popf
rorl
mov
jmp
incl
pop
fimull
ds
insl
xor
jg
mov
inc
call
lret
sub
adc
or
cs
insl
sub
adc
or
decl
push
cs
ret
sub
xchg
mov
data16
mov
call
incl
cltd
test
push
push
shll
ja
daa
mov
mov
ja
call
movsb
sbb
dec
stos
fmuls
lret
rep
cs
arpl
call
enter
mov
mov
movsb
mull
jno
addr16
push
scas
addr16
jb
outsb
cmp
cmc
dec
movsl
jg
orb
pop
sbb
loopne
dec
je
stos
pushl
or
sub
push
outsl
xor
imul
xor
jno
jns
je
jmp
js
push
outsb
pop
pop
and
daa
pop
pop
jnp
pop
dec
jo
push
insb
cmp
and
sub
cmc
ljmp
pusha
and
aas
dec
cmp
push
jp
push
and
push
aaa
xor
popa
jl
aam
inc
out
jne
pop
cmp
rorb
loope
daa
adc
dec
push
dec
and
pop
or
jbe
adc
sbbl
ss
xor
inc
or
sahf
ja
and
xor
scas
sbb
xchg
pop
dec
daa
pop
daa
or
mov
push
inc
and
and
out
and
push
sbb
lock
aaa
push
xor
inc
add
mov
push
xor
push
inc
add
inc
add
inc
xor
or
aaa
inc
push
inc
cs
mov
into
ucomiss
xor
pop
cmpsl
ss
and
inc
mov
enter
jp
lcall
ja
mov
adc
jge
test
and
sub
adc
sub
jecxz
sub
aam
add
call
hlt
scas
bound
sbb
add
jae
push
push
fsubrl
testl
enter
xchg
shll
shr
cmp
inc
data16
push
fs
cmp
jle
jo
test
inc
clc
cmp
xor
inc
dec
cwtl
or
shrb
xor
sbb
loopne
fldcw
push
sbb
dec
push
loopne
or
adc
outsb
shl
xor
xor
push
addr16
mov
insl
gs
jbe
cmp
xlat
adc
sbb
pop
or
sarl
mov
push
shlb
stos
fadds
loop
lock
or
sub
mov
push
mov
add
or
cld
sbb
xor
push
inc
dec
cli
mov
xor
jnp
lret
rorl
mov
dec
dec
cmp
and
push
jns
xchg
or
enter
sub
pop
mov
aaa
cmp
or
xor
pop
fidivl
pop
push
cmp
jmp
ss
cmp
daa
mov
fs
pop
adc
stos
subl
shl
sbb
inc
pop
out
inc
add
cmp
push
call
test
xchg
mov
or
inc
fisttpll
test
or
popf
pop
outsb
outsb
je
xor
js
into
mov
jbe
jae
popa
insl
gs
cmp
dec
xor
push
rorb
into
or
push
inc
aad
sub
idiv
mov
je
loop
add
xor
adc
inc
lret
testb
les
dec
push
popa
je
push
jle
mov
ss
adc
aaa
adcl
dec
adc
clc
adc
add
or
fcmovnu
fcomps
dec
outsl
es
pop
movsb
popf
movsb
adc
rcl
dec
aas
pop
inc
les
add
lret
sbbb
pop
int
push
inc
add
pop
ds
jg
pop
shrb
and
or
add
add
xchg
xor
shll
fmull
inc
sbb
in
aad
xor
pop
dec
stos
xor
mov
jae
xchg
mov
scas
adc
cmpsl
push
outsl
push
jmp
adc
rorb
xor
pop
jo
idivl
push
mov
rclb
xor
dec
call
pop
inc
add
push
dec
adc
popa
dec
call
pop
push
ja
jb
pop
lock
les
repz
mov
pop
inc
jne
dec
push
inc
mov
jmp
into
jecxz
xor
mov
pop
sbb
mov
mov
fidivrl
and
and
add
adc
lock
adc
lds
cmp
enter
xor
mov
ljmp
fs
jo
out
and
sub
inc
stos
push
outsl
imul
push
pop
out
mov
iret
movsl
push
inc
pop
pop
add
mov
cmp
cmp
cmp
pop
pop
das
scas
or
sbb
pop
pop
push
aam
or
sbb
inc
andl
ds
inc
lea
dec
cmp
push
lea
sub
dec
pop
notb
push
xor
sub
insb
cmp
dec
cmp
lods
push
call
sbb
mov
ja
xor
inc
bound
add
inc
std
mov
cs
dec
push
dec
outsl
xchg
test
insb
xchg
imul
mov
and
pop
pop
pop
add
scas
aas
add
adc
popl
dec
pop
pop
pop
inc
pop
inc
cmc
push
pop
stos
into
inc
insb
jnp
lcall
fcmovu
out
repz
pop
repz
out
push
stos
push
push
push
arpl
cmp
ret
dec
push
cmp
cmp
mov
arpl
pop
rcrb
cmpsb
inc
gs
push
pop
and
jge
xor
sub
mov
jo
scas
cmpsb
add
sub
js
loop
inc
dec
and
pop
inc
xor
or
dec
or
dec
arpl
gs
add
andl
out
cmp
out
test
aaa
jmp
mov
subb
add
or
sub
jb
sub
call
jae
push
popa
test
outsl
dec
outsl
fmuls
and
movzbl
and
imul
push
insb
rolb
pop
sbb
jl
inc
insb
mov
lods
out
push
push
inc
dec
push
inc
pop
push
dec
inc
dec
inc
push
pop
mov
mov
gs
xorb
fwait
sbb
js
pop
daa
dec
push
dec
or
lods
adc
inc
inc
aas
pop
or
xchg
jmp
sbb
nop
adc
rcl
aam
inc
inc
xor
cmp
lock
sub
enter
sar
addb
or
pop
push
leave
xorl
sbb
mov
aaa
push
adc
push
loop
inc
or
loopne
xor
and
addb
sbb
maxps
or
subb
cmp
aas
sub
push
fldenv
aad
add
pop
and
lock
add
xchg
pop
add
pop
push
pop
test
test
jne
add
adc
add
andb
pop
daa
in
or
ljmp
and
dec
test
push
call
inc
sub
lret
fcomps
pop
mov
add
pop
inc
movsb
adc
inc
pop
dec
stos
add
stos
sbbb
insb
add
xor
or
outsl
push
pop
xlat
dec
in
mov
rolb
add
int
sbb
and
sahf
mov
cmc
mov
outsl
or
or
fisubrs
cmp
sbb
or
mov
addr16
fsubrs
mov
das
movsb
insb
dec
jge
mov
dec
xchg
dec
inc
fwait
enter
shll
cmc
inc
jg
inc
xor
cmovo
in
inc
pop
inc
cmp
push
outsl
fcmovnb
mov
jo
maxps
addr16
and
pushf
fadds
das
test
lods
push
inc
insl
das
xchg
mov
outsl
push
les
mov
add
test
addr16
mov
pop
dec
movsb
hlt
daa
add
xor
push
sub
pop
mov
mov
xchg
outsl
ror
push
pop
pop
fwait
or
pop
lahf
add
repz
daa
mov
sub
inc
push
outsl
mov
out
pop
in
aas
repz
fsubrs
jg
dec
outsl
nop
sbb
pop
push
daa
dec
inc
xchg
sub
mov
sub
sub
sbb
clc
pop
sbb
cwtl
push
push
enter
dec
jns
insb
jl
fs
fs
repz
adc
jge
out
pop
sbb
in
xchg
je
cmp
pop
sahf
pop
pop
ds
jl
out
pop
push
je
add
pop
jns
iret
ror
mov
pop
mov
out
fs
push
jo
and
mov
add
pop
add
out
add
mov
jnp
adc
dec
mov
xchg
data16
add
sbb
jns
movsb
add
add
or
scas
lock
add
fcomip
mov
mov
mov
add
movl
jg
and
pop
mov
ret
mov
add
jb
dec
outsl
hlt
push
inc
clc
sbb
or
and
xor
cmp
fmuls
movsl
dec
outsl
add
and
scas
fs
adc
inc
xchg
cmp
jb
mov
imulb
nop
cmp
cmp
ss
mov
add
dec
sub
and
pop
pop
scas
add
rorl
outsl
adc
test
mov
pop
mov
in
orl
pop
pop
add
pop
push
lods
fs
scas
add
xchg
or
insb
outsl
out
xchg
sub
mov
xor
sahf
or
xchg
xor
roll
fildll
xor
les
outsl
sub
dec
in
mov
aaa
fcomps
push
shrb
add
repnz
pop
fs
sahf
negl
clc
push
jl
push
fs
loopne
leave
mov
add
or
insb
test
ja
lods
ss
lods
out
ja
pop
leave
adc
ja
mov
dec
sti
es
pop
pop
push
push
mov
or
fbld
outsl
and
fs
es
push
cwtl
sbb
and
sub
sub
pop
clc
pop
fnstenv
add
outsl
out
shrb
cmpsl
filds
or
cmpsl
and
or
xor
push
aaa
and
stos
sub
sbb
fwait
in
push
push
cld
daa
xchg
ja
ret
add
bound
cmpsb
loop
cwtl
andb
xlat
push
insb
popa
mulb
fidivs
clc
push
xor
jg
push
rclb
xchg
notb
xchg
push
popa
dec
mov
push
pusha
pop
test
sbb
sbb
in
test
divl
sbb
push
popa
pusha
popa
outsl
xchg
outsb
pop
push
push
outsl
jg
add
xchg
pop
mov
xchg
loopne
or
hlt
push
add
sub
icebp
cmpsb
call
mov
cmp
jns
xchg
jo
jp
bound
dec
xor
bound
add
jbe
bound
in
dec
mov
shlb
mov
push
mov
or
mov
xchg
movsb
fs
jo
cmp
arpl
jbe
cmp
pop
dec
arpl
testl
and
add
and
in
arpl
push
mov
adc
lods
fs
aaa
mov
adc
insb
pusha
pop
leave
add
jl
mov
add
and
dec
jo
shlb
nop
cs
cwtl
add
xor
jbe
xchg
adc
jg
in
xchg
pop
leave
add
gs
sahf
test
jb
insl
fdivrs
addr16
add
jae
pop
mov
int3
faddl
sub
jmp
scas
jnp
push
cmp
addr16
outsl
pop
leave
mov
or
push
popa
test
cmpsb
mov
lock
ss
pop
or
cwtl
aaa
add
leave
out
sbb
xchg
xor
pusha
pop
leave
mov
add
push
xor
xlat
add
jo
sahf
iret
mov
aad
daa
push
out
mov
and
pop
call
int3
push
inc
xchg
push
out
cmp
hlt
imul
push
mov
or
and
or
mov
push
jb
xchg
pushf
aas
or
nop
es
nop
push
lods
fsubrs
pop
jb
sub
or
fcomip
enter
add
adc
and
and
xchg
mov
ss
jo
loopne
imul
scas
add
int3
outsl
out
and
add
mov
and
addr16
lea
add
or
sbb
inc
pop
mov
dec
scas
or
add
es
sub
in
rcll
and
cld
xlat
or
test
xlat
mov
fdivrs
pop
imul
int
sbb
push
jl
mov
mov
cwtl
imul
subb
inc
ret
lds
in
lods
pop
or
pop
jb
dec
or
mov
push
and
xlat
data16
add
out
iret
les
pop
jo
add
jae
mov
sbb
addr16
pop
mov
js
out
xorb
jbe
adc
int
pusha
or
lret
push
sarl
jp
jns
out
gs
sahf
out
mull
jnp
push
jg
enter
repz
sub
test
out
lahf
sub
popa
stc
cmp
out
and
outsl
mov
sahf
cmpsl
xor
iret
repz
das
dec
push
mov
ds
andl
decb
imul
push
test
dec
ja
lock
out
ds
inc
ja
loop
iret
sarl
xor
sahf
cmpsl
stc
add
int3
repz
out
sub
jns
out
mov
mov
ds
ret
call
iret
repz
mov
mov
lahf
and
out
lcall
xchg
dec
repz
nop
inc
pop
sahf
out
cmp
flds
xchg
push
mov
fisttpll
xchg
push
mov
cmp
cmpsl
stc
pop
xchg
cli
xchg
stc
pop
xchg
dec
nop
enter
jl
inc
xchg
cmpsb
push
pop
xchg
pop
jle
sahf
out
cmp
cmp
fnstcw
or
out
jl
fwait
mov
out
idivl
push
popf
push
in
cmp
ds
sahf
push
lahf
sahf
push
pushf
int3
ds
stc
aas
mov
add
and
mov
sub
aaa
addr16
jns
pop
movsl
scas
push
lock
stc
cmp
cmp
sahf
out
cmp
loop
test
repz
sbb
jl
cmpsl
stc
cmp
lods
xor
iret
sarl
lods
push
scas
xor
iret
repz
xchg
repnz
jno
out
out
adc
negb
mov
iret
dec
mov
sahf
cmpsl
fnstcw
sub
iret
sarl
sahf
shl
mov
insb
jg
aad
mov
repz
mov
lahf
cmpsl
stc
xor
cmp
ret
repz
mov
sub
pop
cmp
out
test
les
stc
aas
lds
fnstcw
iret
roll
inc
arpl
lahf
cmpsl
stc
out
int
push
dec
into
data16
iret
int
stc
xor
push
rcl
cltd
shrl
mov
xor
aam
aad
js
out
iret
aad
es
add
ret
add
lahf
cmpl
add
decb
inc
pop
and
mov
addr16
push
add
jb
and
sub
addr16
repz
dec
ja
add
pop
and
add
lea
fistps
jb
pop
mov
aam
push
and
repnz
cs
ror
and
and
sub
call
and
xchg
or
push
and
push
fs
in
in
adc
pop
aas
shlb
jb
pop
jbe
inc
pop
enter
cltd
nop
dec
mov
adc
jns
pop
insb
subb
mov
jg
push
sbbl
sahf
loopne
inc
pop
out
fmuls
jbe
mov
fildll
leave
inc
movsl
jge
xorl
pop
mov
aas
add
mov
jmp
shr
dec
insb
cmp
out
aas
mov
xchg
add
pop
idivl
mov
sub
test
adc
xchg
std
sub
dec
push
push
aam
lret
push
inc
mov
pop
sub
aaa
scas
dec
ja
jne
inc
dec
push
daa
pop
cmp
add
mov
push
fdivrl
dec
fiaddl
inc
or
fiadds
add
in
inc
xchg
lahf
or
sbb
jp
dec
mov
pop
mov
adc
sarb
cwtl
outsl
test
and
je
sub
push
aas
mov
push
incl
jb
push
add
push
inc
iret
movsl
pusha
cmp
dec
and
popa
aas
adc
and
sbb
adc
mov
pop
js
pop
pushf
sbb
or
mov
mov
mov
cmp
inc
dec
hlt
js
xchg
and
in
add
scas
mov
adcl
add
jb
jns
in
lds
out
lcall
loopne
cli
jnp
push
jl
scas
out
and
push
jnp
jns
push
rcrl
push
inc
fimull
jp
ja
mov
push
lcall
pushf
sub
inc
mov
jns
in
je
leave
fdivrs
push
mov
repnz
xor
inc
or
jb
jnp
jnp
fldl
and
iret
daa
daa
iret
enter
add
cmp
test
test
loop
sbb
add
or
dec
leave
mov
push
jl
mov
pusha
fld
inc
nop
xchg
dec
mov
leave
mov
adc
xchg
lock
jl
iret
sbb
jb
jl
jl
push
add
cmp
repz
icebp
add
cmpsl
stc
pop
jge
adc
sbb
out
dec
inc
dec
push
leave
add
je
int3
jge
and
enter
jge
adc
and
adc
xor
mov
cmp
addr16
xchg
stos
mov
scas
into
repz
add
leave
inc
repnz
loop
incb
jle
push
jle
jle
inc
repnz
cmpsl
push
in
jle
sbb
jb
jle
jle
pop
dec
and
cmp
jg
pushf
pushf
pushf
pushf
xchg
lcall
mov
aad
outsb
mov
paddusw
cmc
leave
xor
cmpsl
std
pop
add
xchg
jl
pop
sub
cmp
test
out
out
ss
jg
jo
js
add
push
dec
push
adc
and
lods
sbb
jb
and
add
xor
addl
leave
push
gs
inc
jl
pop
movsb
nop
and
addl
les
out
pop
and
push
lock
in
lods
mov
ja
out
sbb
xchg
push
jb
push
shrb
cmpsb
xorb
pop
cmpb
aad
adc
dec
mov
sti
push
add
add
faddl
leave
and
movb
or
jb
loope
daa
xor
sbb
cmp
jb
addw
fwait
mov
dec
leave
or
test
in
dec
clc
sbbl
or
jne
adcl
daa
outsb
sbb
sbb
lret
lret
aaa
addb
cmpb
repnz
subb
push
or
repz
or
iret
repz
or
cmp
mov
adc
repz
adc
adc
jns
out
adc
adcl
out
pop
sub
idivb
subl
mov
addb
add
add
add
xchg
push
cmp
adc
jecxz
daa
pop
std
cmc
adc
xchg
xor
push
xchg
les
xchg
mov
shrb
mov
test
cs
dec
hlt
xchg
push
add
insl
and
sub
adc
test
das
fadds
xchg
test
mov
push
pop
insl
add
push
aas
stc
ficoml
add
push
lret
inc
pop
add
add
fstl
add
adc
out
jo
add
sbb
es
out
and
mov
mov
cmp
pop
pop
inc
lock
pop
aas
jge
inc
aas
add
decl
leave
add
mov
cltd
jbe
or
mov
mov
xchg
int
out
sarb
iret
add
std
and
jp
scas
mov
add
inc
dec
repnz
mov
jo
and
xchg
mov
xchg
cltd
xchg
cmp
mov
xchg
dec
cs
iret
out
addr16
and
sbb
dec
js
mov
mov
enter
mov
leave
or
add
xchg
xchg
scas
jo
mov
mov
outsb
xchg
mov
xchg
add
repnz
mov
mov
or
cmp
mov
mov
hlt
scas
daa
xchg
add
adc
stos
mov
adc
dec
lea
repnz
fisttpll
mov
mov
repnz
mov
mov
repnz
mov
repnz
mov
mov
mov
gs
cmovle
dec
push
or
dec
dec
or
or
dec
dec
dec
dec
push
add
dec
dec
add
add
and
xchg
mov
outsb
mov
xchg
xchg
xchg
add
les
leave
and
xchg
popl
mov
jb
pop
aaa
mov
mov
dec
cs
out
push
repnz
movsb
cmpsb
push
xor
fmuls
cmp
fcmovnbe
xlat
mov
aas
stc
sidtl
js
pop
adc
push
sbb
sbb
out
pop
mov
mov
bswap
jae
mov
add
xchg
hlt
mov
scas
ret
add
movsb
mov
pminub
aaa
leave
ja
ljmp
ds
popf
out
repnz
bndldx
jns,pn
cli
movd
add
rclb
inc
das
jnp
jbe
pop
pop
push
aas
popl
dec
jnp
leave
subl
cmp
leave
push
enter
push
and
shlb
fistpll
sbb
lea
push
lea
inc
jb
lea
adcb
mov
add
dec
sahf
out
add
pop
and
leave
rorl
xor
mov
mov
mov
inc
mov
pop
mov
mov
jbe
add
dec
mov
mov
outsb
daa
adc
sbb
roll
ja
je
das
jb
jb
mov
sahf
ja
in
push
push
sti
pop
repz
mov
sbb
or
repz
daa
or
or
or
push
dec
cmpxchg
dec
xchg
xchg
and
stos
pop
lret
repz
rcrl
fisttpl
jecxz
jmp
ss
leave
repz
popl
nop
pop
or
inc
ss
cmc
adc
add
fimuls
ss
nop
lahf
out
fsubr
fcomps
add
out
xchg
test
sub
iret
in
dec
push
lods
xlat
je
add
pushf
xchg
xchg
test
sub
pushf
subl
xchg
fdivrl
cmp
nop
inc
pop
and
jg
pop
ret
mov
push
pop
xchg
pop
and
dec
dec
test
xchg
jecxz
add
movsb
scas
in
or
sbb
and
das
xchg
and
cmp
xchg
dec
xchg
cld
xchg
cmp
mov
orb
aas
lcall
xchg
dec
pushf
xchg
xchg
or
fcmovb
xchg
dec
push
fists
fsubrs
clc
out
add
in
das
xchg
loopne
xchg
xchg
cmp
inc
xchg
dec
xchg
cwtl
outsb
daa
daa
adc
xorl
pop
mov
jb
shrl
lock
lret
vmread
xchg
das
push
xchg
adc
sbb
daa
xchg
xor
lret
dec
xchg
push
xchg
outsl
or
cwtl
cmp
sub
incl
cmp
lcall
cmp
rcr
ljmp
repnz
cltd
xchg
je
and
xchg
ss
inc
xchg
dec
xchg
push
nop
xchg
xchg
xchg
xchg
bound
fildl
rcrb
leave
mov
int3
xchg
outsb
mov
ss
out
mov
inc
repnz
movsb
sub
insl
and
add
jmp
ja
mull
jns
xchg
mov
jb
and
mov
loopne
xchg
stos
sbb
cmpsb
pop
mov
daa
push
pop
mov
jae
popa
out
push
add
adc
mov
mov
xchg
outsb
repnz
fisubrs
enter
xchg
out
out
push
or
pop
aaa
jns
ud2
push
or
or
pop
xchg
seta
push
pushf
mov
xor
mov
in
ja
push
add
inc
repnz
roll
int3
in
in
pop
xorb
filds
and
add
insl
xchg
and
in
daa
daa
pop
data16
jno
adc
out
sub
xchg
pushf
ljmp
scas
jae
pushf
pushf
iret
cwtl
cwtl
psubsb
jecxz
xorl
scas
clc
cwtl
repnz
mov
cltd
or
aas
loopne
sub
cltd
addr16
das
das
inc
cltd
dec
cltd
push
cltd
fistps
cld
mov
and
cltd
iret
jae
mov
cltd
sbbl
mov
mov
pop
or
daa
daa
daa
daa
or
push
add
add
add
cmp
repz
sbb
iret
repz
sbb
cmp
lret
pop
rorl
and
xchg
xchg
fninit
jmp
repz
sahf
out
sti
es
jl
sub
lahf
es
jl
jmp
dec
ja
push
outsl
mov
in
in
add
xchg
lcall
pop
mov
orb
jae
mov
fisubs
in
mov
and
pushf
jg
fwait
and
repnz
push
cmp
and
fildll
outsb
ja
orb
add
loopne
mov
and
jns
fdivl
out
push
fwait
stos
or
sbb
in
stc
inc
ja
dec
ja
mov
mov
xchg
in
mov
mov
ss
pushf
jnp
addl
sbb
leave
mov
frstpm(287
scas
pushf
mov
roll
add
add
stos
aad
xchg
adc
pop
daa
xchg
push
add
pushf
repnz
xchg
xchg
pushf
push
popf
push
popf
shlb
xor
ja
es
iret
add
push
mov
decl
cmp
iret
rep
add
pop
jo
loope
add
sahf
adc
sbb
cmp
repz
add
add
repz
pushf
pushf
cmp
or
or
pop
push
jns
out
jb
jp
out
sahf
xchg
addb
rcll
adc
movsb
pop
dec
enter
fimuls
ja
das
out
add
daa
nop
sahf
push
fiadds
xchg
pop
mov
movsl
inc
mov
push
sub
lahf
cs
xchg
out
int
ss
add
xchg
jl
push
scas
dec
lahf
sub
pushl
push
in
mov
mov
out
repnz
or
adc
ja
pop
sub
or
push
test
xor
sbb
add
sub
pop
cmpsl
or
jl
push
pop
jl
pop
push
lahf
ja
jg
add
daa
fucom
xchg
add
cs
out
jns
xchg
mov
lahf
mov
or
shlb
and
tzcnt
rcll
push
add
cmpsl
fwait
sysret
sbb
push
or
ja
sub
or
or
dec
sahf
out
or
pop
mov
scas
arpl
ss
stc
xor
jb
cmp
scas
push
add
out
jb
iret
mov
in
cmp
cs
pop
push
jb
stc
cmp
add
sbb
pop
push
inc
mov
enter
mov
xchg
mov
push
ja
out
call
jb
jnp
inc
xchg
repz
stos
mov
and
repnz
add
shrl
out
in
in
clc
pop
jns
cmp
test
or
ljmp
out
nop
inc
sub
jb
add
pop
inc
mov
sbb
pop
mov
jp
sahf
out
push
add
out
sahf
out
or
jns
or
sahf
out
or
and
mov
mov
dec
jb
call
movsb
sub
test
push
pop
pop
or
push
push
sbb
jb
mov
movsb
and
mov
pop
daa
and
in
movsb
inc
sub
and
mov
mov
lods
frstor
repz
das
outsb
sbb
pop
movsl
daa
pop
push
pop
das
insl
in
xchg
movsl
aaa
movsl
aas
movsl
inc
setne
scas
push
movsl
shrd
adc
jp
aaa
andb
xchg
lcall
pop
mov
or
lods
pop
mov
or
ffreep
mov
loopne
jns
xlat
movsl
psubusb
test
pop
loopne
call
inc
push
leave
test
subb
add
nop
scas
or
mov
daa
sbb
push
aas
push
pop
ss
pushf
in
cmpsb
enter
in
in
dec
push
push
push
stc
pushf
cmp
pop
mov
popw
sbb
in
and
iret
in
mov
mov
in
add
xchg
dec
xchg
xchg
out
mov
cmpsl
inc
mov
xor
dec
shll
das
adc
fidivrs
cmpsl
pop
outsb
xchg
daa
pop
leave
push
xchg
mov
cwtl
je
lods
mov
add
aam
ljmp
cmp
test
test
test
test
dec
sahf
or
or
repnz
and
cmp
into
leave
jg
pop
movq
adc
xchg
pop
push
mov
mov
mov
test
dec
outsb
xchg
test
rcr
xchg
add
lods
std
add
jb
test
and
cmp
push
xor
stc
dec
or
cmp
leave
enter
push
cwtl
and
mov
xchg
pop
xchg
test
in
pop
mov
ja
in
dec
icebp
add
jg
ja
mov
into
enter
inc
daa
dec
pop
and
insl
fimull
arpl
popf
pop
xchg
xchg
xchg
mov
int3
aam
loopne
inc
mov
stos
fcmovne
pop
xchg
out
push
or
insl
popf
sbb
adc
decb
adc
xchg
mov
stos
mov
stos
mov
fsubl
out
outsb
jbe
vmwrite
add
jle
rorb
out
or
bound
xchg
stos
sahf
stos
pop
in
leave
out
mov
xor
inc
inc
mov
cmp
stc
aaa
inc
mov
in
and
mov
jae
jl
mov
pop
lods
femms
add
out
in
sahf
add
add
das
push
add
aaa
sysret
aas
push
daa
cmp
inc
lods
fisttps
call
xchg
adc
fs
jbe
rcll
xchg
pop
and
add
fists
jmp
mov
adc
xchg
out
push
push
into
sub
jbe
pop
jg
movd
in
jbe
jle
pop
xchg
cmpsb
push
pop
je
out
scas
or
pop
cwtl
aaa
lods
jg
repnz
lods
sahf
lods
mov
iret
in
into
pop
adc
out
iret
leave
repz
notb
lahf
cltd
into
sahf
push
scas
femms
scas
pop
sbb
push
leave
adc
or
mov
xor
daa
push
idivl
scas
push
scas
push
mov
mov
dec
fcomps
xchg
scas
outsl
enter
orl
mov
shrb
pminub
or
ljmp
inc
pop
roll
int
sahf
test
jo
inc
xchg
or
or
daa
mov
daa
js
mov
xchg
adc
cmp
leave
repz
mov
xchg
dec
popa
imul
leave
add
pushf
bswap
repz
movsb
pop
mov
in
jmp
aad
int3
cmc
in
in
decl
mov
or
dec
lock
mov
sub
lahf
fisttpl
adc
jg
xchg
xchg
mov
sbb
pop
push
jmp
ja
out
fcoml
adc
or
xchg
mov
push
pop
inc
add
lds
scas
push
mov
pop
pop
and
or
xchg
jbe
popf
seta
lahf
pop
cmpsl
iret
aaa
jns
leave
scas
mov
push
mov
dec
add
or
sahf
pop
and
repnz
repnz
lahf
cli
mov
mov
out
fsubrp
adc
sbb
push
and
cmp
sub
xor
mov
cmp
mov
mov
xchg
insl
pcmpeqw
mov
test
xchg
mov
xor
mov
enter
push
out
shr
icebp
psubw
pop
scas
mov
push
mov
test
mov
xor
faddl
sbb
mov
mov
orps
jg
pushf
pushf
pushf
pushf
mov
dec
inc
sahf
add
or
inc
pushf
pushf
pushf
fsubrl
popa
jg
movsl
popf
cmp
repz
int
cmp
add
cmp
adc
int
loopne
mov
and
cmove
das
xchg
dec
fmuls
jb
xchg
mov
mov
xchg
daa
adc
add
fninit
jmp
cld
mov
stc
mov
pop
mov
xchg
mov
dec
inc
mov
mov
mov
xchg
xchg
and
mov
cmp
xchg
mov
lods
mov
ror
mull
mov
mov
pop
mov
cmp
inc
mov
mov
mov
mov
pop
pop
pop
pusha
mov
mov
mov
jns
out
or
fdivrl
popf
nop
out
iret
mov
sub
test
mov
adc
stos
das
sti
pop
rcr
daa
pop
fmull
pop
jecxz
jmp
lret
or
insl
pop
sbb
and
mov
lret
lret
dec
mov
mov
lret
lret
outsb
mov
xchg
mov
test
ret
movswl
lret
lret
sarb
push
in
in
mov
iret
pop
cmc
ss
push
and
idivl
and
adc
sbb
jns
out
es
jns
cmp
inc
sub
xchg
out
push
sub
sub
shlb
outsl
cs
mov
iret
xor
popf
iret
lods
cmp
pop
shld
lods
pop
mov
in
fwait
cmp
push
inc
mov
int
enter
mov
or
mov
sub
and
leave
add
fisubrs
mov
adc
dec
ja
xchg
mov
mov
jb
cmp
test
dec
pop
jb
in
or
iret
lret
add
es
daa
xor
inc
dec
outsb
daa
iret
add
jae
fucom
jns
jle
or
or
lahf
pop
stos
out
jns
mov
ret
cmp
xchg
fsub
adc
stc
mov
mov
push
sbb
out
push
sbb
sbb
in
cmp
in
pop
pop
and
pop
inc
dec
jge
jmp
lds
sbb
cltd
push
xor
push
sbb
jb
jb
pop
jb
jb
jb
xchg
lods
lret
cmp
jae
psrad
ljmp
adc
add
dec
dec
sub
sbbb
js
mov
daa
daa
mov
pop
mov
cmp
daa
out
mulb
adc
iret
leave
rcrl
mov
leave
repz
cmp
jle
xchg
cmp
fisttpl
sub
repz
mov
inc
dec
icebp
or
mov
jl
out
ud0
add
rorb
jns
fdivp
sysret
cs
pop
or
dec
sahf
out
or
aaa
push
or
repz
ds
cmovg
push
pop
push
adc
leave
repz
outsl
push
adc
lar
pushf
out
jg
xchg
sbb
push
scas
pop
mov
dec
lods
fs
pop
enter
xchg
cs
ror
inc
shrb
cmp
rol
loop
and
stc
add
and
pop
pop
push
rol
ljmp
xor
jmp
mov
punpckhbw
js
jbe
xchg
jl
lret
in
in
stos
mov
xchg
test
leave
leave
inc
fsubp
out
xlat
addr16
jbe
pop
decb
push
ret
jns
mov
or
ds
in
cmp
cmovns
xor
jae
cltd
dec
insb
je
jl
cmp
iret
add
jb
scas
movzwl
jo
psrad
dec
cmc
jbe
repnz
pop
add
aas
or
jecxz
repz
pop
adc
sbb
ret
in
jbe
cmpsb
clc
xlat
inc
addr16
ja
xchg
iret
leave
push
add
in
dec
dec
orb
fsubr
fs
mov
jbe
jb
ret
lret
rcr
xchg
xchg
out
hlt
incb
in
dec
data16
push
lcall
les
or
jg
fcmovne
leave
repz
add
popa
pop
iret
jae
mov
jns
xorl
movsb
fucomi
jbe
lods
mov
mov
int3
pop
in
in
les
jl
push
int
mov
pop
in
and
js
lds
lds
daa
daa
daa
adc
push
pop
leave
and
popf
fsubrl
movsl
shrd
cmp
iret
dec
sahf
fcmovne
call
jmp
xchg
and
jb
shll
dec
dec
sahf
out
push
pop
pop
add
or
in
add
pushf
fsubrl
fcmovb
mov
fs
xor
int3
aam
inc
sbb
xlat
movb
push
xchg
pop
leave
lods
shrb
xor
xchg
dec
push
add
add
popa
push
outsb
insb
ja
das
das
das
das
add
cwtl
mov
das
scas
mov
repnz
outsl
fcmovb
in
lock
repnz
movl
enter
repnz
enter
enter
repnz
enter
enter
dec
mov
sbb
dec
dec
sbb
sbb
dec
dec
dec
dec
push
adc
out
mov
xchg
stos
mov
shll
out
sahf
int3
xor
xor
xor
sahf
out
in
xor
out
iret
shll
push
cmp
sbb
sahf
out
sahf
and
das
cmp
cmp
sahf
out
inc
sub
ds
daa
iret
jae
data16
jno
jl
daa
iret
repz
xchg
sahf
out
outsb
push
inc
mov
mov
dec
leave
dec
aam
and
dec
ljmp
in
push
push
push
rsqrtps
sahf
pushf
pushf
pushf
sub
inc
dec
lret
add
lahf
pop
fcom
xchg
pop
movsl
inc
mov
xchg
lret
insl
xchg
lret
fidivs
sbb
lret
fmul
jecxz
in
xchg
lret
stc
lret
in
sbb
bswap
sbb
fbld
call
lret
inc
lret
push
lret
repz
addr16
adc
iret
push
jge
mov
xchg
cmp
repz
sahf
sbb
repz
mov
cmp
push
aad
loopne
jmp
cmp
mulb
inc
int3
dec
fcmovne
in
repnz
pop
mov
das
xchg
out
xchg
cmp
dec
xchg
out
sahf
dec
sub
fs
repz
outsl
das
test
nop
daa
iret
repz
fwait
xor
outsb
pop
mov
cmp
fcmovnu
pop
call
jl
out
cmp
int
in
in
fidivrs
push
adc
pop
sub
jns
xchg
push
aas
sahf
xchg
out
popa
insb
inc
fidivs
pushf
dec
and
shll
mov
push
add
mov
rcr
pavgb
pop
and
lret
call
pop
sbb
es
into
push
out
dec
sahf
add
sub
push
or
add
or
nop
insb
test
call
cmp
or
daa
sub
pushf
or
jg
mov
cltd
pop
add
cmp
clts
mov
sar
pushf
pushf
leave
rorl
sahf
fxch
loop
repnz
pushf
loopne
add
adc
in
enter
iret
lahf
and
sub
fisttps
cmpsl
loope
iret
lahf
clc
xlat
push
dec
outsb
fnstsw
outsl
ja
fisttpll
jg
mov
cltd
pusha
and
jle
fmul
jg
in
cmp
ror
lret
mov
repz
in
loope
in
pop
testl
add
or
leave
in
and
cmp
iret
leave
dec
pop
adc
cmp
cmp
xchg
jns
ja
xchg
pushf
push
sbb
out
sbb
daa
fisttpll
sbb
rcr
jns
leave
repz
hlt
push
and
out
cltd
cmp
and
js
jns
sub
ss
das
dec
sarl
xchg
jl
jg
mov
cmp
sbb
scas
in
daa
iret
add
cmpsl
xchg
iret
in
into
iret
or
fiaddl
shrb
and
aaa
jb
cmp
iret
cmp
inc
push
fucom
jns
push
dec
pop
pop
syscall
lret
and
mov
lret
lret
lret
jo
jnp
xchg
xchg
pop
das
das
loopne
scas
pushf
shlb
iret
repz
rcrl
pop
jmp
dec
aaa
jns
movhps
shr
push
push
jg
and
ss
and
iret
repz
bound
push
cmp
rep
sub
incb
dec
add
mov
mul
inc
decl
das
sub
repz
inc
addr16
mov
xchg
xchg
xchg
xchg
ror
rcl
shl
shll
in
cs
add
femms
push
sbb
and
mov
push
fcoml
jg
aam
addr16
outsb
xchg
xchg
xchg
aam
aam
xchg
pop
sahf
repnz
mov
or
sysret
pop
lret
icebp
repnz
loopne
jmp
not
push
inc
inc
into
outsl
add
or
lcall
into
aad
loopne
and
push
mov
adc
aad
outsl
aad
fsubrl
fbstp
jg
or
sub
xchg
cmpsl
fwait
cmp
ret
jns
lret
push
pop
fimull
add
pushf
cmp
or
ljmp
std
push
or
adc
leave
repz
sbb
adc
sub
out
popf
cmp
cmp
inc
or
pop
push
sbb
pop
jle
pusha
scas
push
sbb
ficomps
xchg
xchg
pop
lods
movzwl
dec
repz
ret
int
fadds
cmp
repz
pop
out
or
jns
or
bndldx
or
fucomi
in
xor
cmp
inc
sahf
xchg
xchg
xchg
push
pop
addr16
jns
out
jge
mov
xchg
out
pop
aaa
nop/reserved
sahf
sbb
sbb
push
repz
iret
push
loopne
and
iret
call
mov
fsubrs
pop
and
call
fsubs
push
daa
leave
repz
cmp
cmp
inc
out
cmp
dec
sub
cs
outsl
jp,pn
push
xor
fcomps
nop
out
mov
shlb
arpl
psllq
cmp
xor
mov
jmp
adc
sub
pop
arpl
mov
cmp
cmp
xor
add
aas
inc
push
jge
je
push
pop
cmp
movsl
adc
cmpb
pop
sbbl
or
aaa
cmp
jns
push
push
add
iret
repz
sbb
jbe
repnz
or
or
mov
mov
or
adc
adc
adc
and
daa
mov
pop
inc
inc
push
addr16
in
jbe
push
xorps
repnz
shrl
jo
jb
mov
andb
cmpb
mov
pop
xchg
sub
mov
xchg
sahf
mov
ret
xchg
fildl
sbb
data16
bound
ret
push
push
mov
cmp
push
push
xor
and
repz
and
adc
cld
call
lock
jns
out
int3
enter
iret
repz
mov
movsb
cwtl
sahf
ja
cmp
mov
sahf
out
fs
push
inc
inc
lock
out
xor
or
and
movsl
ljmp
inc
adc
sub
mov
jo
jb
sbb
adc
and
in
popa
test
and
sbb
addb
mov
push
jne
adc
cmp
fsts
movsb
add
cmpsb
fisttps
mov
movsl
sbbl
sbb
fisubl
inc
jae
add
mov
inc
mov
sbb
iret
mov
call
sti
sbb
push
add
mov
pop
fisubrl
xor
fcomp
loopne
jb
jle
cld
mov
and
ja
pop
and
lds
or
add
mov
inc
and
push
clc
mov
cli
inc
aaa
push
subl
lds
dec
ss
pop
add
and
add
mov
out
push
or
or
out
adc
adc
adc
inc
sbb
in
sbb
je
dec
push
out
ds
sub
enter
dec
repz
imul
cld
pushf
out
push
push
cmpsb
push
mov
out
adc
cmpsb
aas
rorb
in
into
xchg
push
add
pop
push
xor
or
pop
pop
mov
dec
or
add
inc
dec
add
cmpsb
lock
jo
in
mov
out
icebp
addr16
push
push
mov
dec
xchg
mov
inc
adc
push
lea
pop
roll
xchg
aas
pop
push
arpl
daa
idiv
jle
xchg
negb
pop
lahf
push
fistl
out
addr16
mulb
add
rcll
xor
out
adcb
daa
pop
sbb
adc
cmp
mov
xor
cmp
sbb
sbb
and
inc
aas
lock
repz
out
and
push
and
dec
sbb
cld
lock
addr16
mov
repz
mov
das
push
or
mov
in
adc
in
jns
repz
adc
rcrb
out
sahf
mov
and
out
movsb
and
sahf
out
xchg
mov
loope
dec
pop
clc
mov
nop
jg
movups
push
pushl
test
cmp
andl
sbb
out
sbb
js
mov
int
jns
repz
xor
add
insl
add
mov
adcl
bnd
popf
out
dec
das
push
dec
insb
bts
stos
cmpsl
add
dec
inc
leave
arpl
enter
inc
pushf
nop
psubw
and
adc
cmpl
push
and
sbb
sub
ret
inc
and
sahf
mov
sub
inc
rcrb
and
lcall
mov
jmp
inc
jno
xlat
xchg
inc
push
add
inc
stc
mov
adc
mov
cmp
cmpsb
iret
decl
js
inc
outsl
loopne
jmp
xchg
test
mov
cmp
divl
jl
mov
popf
sti
jmp
stos
push
inc
mov
repnz
test
pop
ljmp
inc
jmp
aam
imul
loope
jp
iret
inc
gs
xchg
push
cmpsb
scas
mov
incl
gs
or
addl
cmpsl
xchg
cmp
xor
dec
cmpsl
in
cmp
cmp
pop
cmpsb
lock
mov
popa
sar
mov
fsubs
stos
xchg
clc
mov
push
daa
mov
subb
fwait
xchg
and
and
jp
int3
add
sti
aas
jno
or
mov
lcall
cmp
dec
lea
aas
ret
shrl
mov
icebp
aas
rorb
and
inc
cmpsl
out
aas
inc
cmpsb
mov
insb
scas
add
aas
xor
aad
mov
std
std
into
jmp
adc
stos
in
das
dec
pop
loope
les
aas
xchg
les
jne
int
mov
fisubs
xchg
cmp
push
mov
xchg
aas
and
loop
mov
jp
popa
push
pop
sarl
jl
call
mov
das
lea
mov
inc
inc
aas
movsl
jmp
jg
sub
jge
jmp
inc
rcr
push
arpl
int3
and
call
cmp
jp
and
ljmp
addb
add
xlat
cmp
mov
sbb
add
movb
lcall
cmp
jno
shlb
out
dec
nop
pop
cmp
fisubl
xor
push
mov
cmpsl
push
lahf
inc
pop
mov
sub
dec
in
ss
push
scas
into
imul
faddp
jge
call
push
sahf
out
pop
push
xchg
cmp
push
andl
dec
dec
gs
std
orl
pop
ficomps
into
ror
add
cmpsb
fmuls
das
pop
cmp
pop
adc
insb
inc
inc
push
dec
push
dec
dec
xchg
jnp
cmpsl
fbstp
pop
ja
popa
push
out
mov
les
hlt
push
or
pushl
movsl
arpl
mov
mov
push
movsb
xor
jg
jmp
rclb
mov
sub
mov
sbb
ljmp
jno
repz
test
ficompl
jmp
mov
hlt
movl
imul
mov
xchg
in
leave
mov
add
insb
push
arpl
psubd
or
ljmp
pop
adc
in
pusha
aad
jno
mov
inc
aam
dec
std
test
movsl
cli
test
jg
pushl
inc
leave
mov
jecxz
fdivs
jne
filds
or
mov
lods
xor
es
ficoms
push
xlat
enter
mov
and
mov
lcall
movsl
mov
sub
mov
and
or
adc
ljmp
sub
fdivl
jno
add
aad
mov
mov
daa
inc
cld
jmp
aam
call
xor
in
jg
or
mov
cmp
fs
add
hlt
push
imul
insb
sbb
fdivs
test
insb
jnp
add
shl
adcb
cmc
fnstenv
adc
ljmp
cld
fistps
ficoml
gs
aam
pop
popa
mov
into
std
cmp
insb
pop
cmp
xor
dec
mov
shll
jmp
outsb
xor
mov
sarb
fidivl
add
in
add
pop
dec
or
cmp
add
daa
adc
or
dec
and
test
or
mov
popa
into
push
stc
ficomps
leave
fldcw
and
xlat
inc
pop
cmp
mov
cmp
lods
insb
mov
in
mov
mov
add
pushl
aad
scas
ja
popf
adc
push
fdivl
or
test
fs
ds
or
and
jp
iret
push
in
decl
xchg
daa
scas
add
mov
ret
decl
lock
add
inc
push
imul
xorb
sbb
push
imul
call
loopne
rorl
int3
dec
frstor
fistpll
mov
mov
aad
mov
call
call
jle
shll
push
repnz
addr16
cmpsb
fldl
mov
dec
pushl
mov
fisubrl
or
scas
testb
pusha
jp
inc
ret
out
pusha
fists
addr16
mov
jns
dec
mov
popa
lret
sbb
outsl
and
ja
int3
add
mov
mov
es
lds
or
add
mov
mov
xlat
ret
shlb
scas
ficomps
ret
es
lcall
insl
add
ss
jmp
addr16
jb
push
add
adc
mov
ljmp
sbb
xchg
or
out
fdivrl
fisttpl
aam
roll
clc
mov
push
int
mov
mul
ja
outsl
ja
mov
out
cli
mov
push
dec
cmp
pop
or
adc
sahf
gs
clc
sar
imul
ljmp
loop
mov
push
addl
mov
cmp
cmpsl
notl
pusha
rorb
imul
ljmp
fldenv
filds
mov
pusha
mov
fidivrs
mov
out
mov
jmp
mov
xor
jmp
sarb
sub
push
mov
jp
mov
dec
popa
les
sbb
add
call
or
filds
sub
inc
pop
pusha
xor
pop
push
popa
push
ja
dec
inc
push
xlat
test
push
sahf
out
sahf
xlat
fcomp
fcmovu
fdivrl
out
fstp
loop
in
out
cs
jmp
out
in
in
repz
cmc
out
sahf
out
idiv
stc
cli
sub
sti
cld
pop
adc
add
jg
inc
lahf
or
push
push
movsb
sub
push
jbe
sbb
inc
push
lods
mov
dec
dec
hlt
jbe
cmp
push
aad
jecxz
bound
inc
lcall
arpl
inc
inc
in
fbld
push
ret
ds
and
cmp
fisttpl
inc
jno
xor
pop
inc
cmp
pop
bound
xor
aaa
cmp
imul
pop
popa
arpl
cmp
arpl
or
xor
jnp
push
pop
xor
popa
push
jecxz
fistpl
jbe
pop
insb
imul
push
insb
imul
dec
mov
test
or
test
jp
rol
xchg
test
dec
jno
mov
daa
fs
sub
xor
push
je
xor
gs
xchg
fsubrs
int
aas
pop
fnstcw
ret
bound
inc
push
sbb
ret
mov
pop
aaa
xor
and
xor
insb
popa
jns
sbb
into
dec
push
dec
insb
adc
sub
cmp
xchg
aaa
aas
inc
add
aas
xchg
pusha
lds
add
cltd
and
movl
insb
daa
int
xor
inc
aas
nop
or
and
xlat
inc
inc
and
sbb
inc
pop
mov
je
jo
inc
inc
add
sub
xchg
popa
mov
lcall
mov
dec
push
dec
cmp
inc
mov
fsubrs
sbb
mov
test
jne
andl
dec
jge
imulb
xor
or
stos
mov
arpl
add
addr16
mov
outsl
in
clc
xchg
into
pop
jo
xorb
inc
cmp
pusha
add
cmpsb
jle
cltd
dec
cld
push
addb
ss
inc
mov
pop
roll
lahf
inc
dec
xchg
fwait
push
mov
ss
xlat
lea
nop
scas
mov
xchg
out
jb
push
and
addr16
or
cmpsl
lahf
lret
dec
lahf
push
outsl
outsl
test
mov
xchg
mov
mov
lds
in
push
or
nop
test
adc
aad
arpl
cmp
mov
add
lahf
pop
mov
jns
pop
shrl
adc
push
mov
je
cs
cmp
adc
mov
or
iret
inc
push
bound
mov
push
inc
jbe
xor
mov
addr16
mov
dec
repnz
dec
xor
je
mov
das
xor
mov
inc
repz
dec
aaa
adc
jg
adc
xchg
scas
lods
xor
jb
xor
inc
dec
inc
sub
sub
daa
mov
xchg
sbb
sbb
je
adc
dec
xchg
lods
pop
jno
bound
outsb
arpl
int
adc
je
pusha
in
mov
sub
stos
inc
fs
inc
jne
push
pop
xchg
lea
test
add
xlat
out
mov
push
daa
sub
stos
and
or
add
dec
add
sbb
pmaddwd
lds
jo
add
pop
add
fdivr
loopne
add
es
inc
dec
add
add
add
fistl
outsl
lcall
or
pop
pop
push
or
or
or
or
or
adc
adc
push
adc
outsb
xlat
decb
add
pop
sbb
adc
adc
adc
add
inc
mov
shll
or
mov
add
nop
add
add
add
adc
add
data16
add
les
add
pop
shlb
xor
add
pop
fdivl
imul
ds
xor
adc
pop
add
jmp
jno
xor
inc
mov
adc
xor
cmpb
lock
mov
add
or
aaa
adc
mov
add
pop
pusha
xchg
andl
push
adc
inc
or
and
adcb
dec
add
add
adc
mov
xor
es
add
subb
ja
adc
pusha
inc
lods
push
adc
pop
popa
jno
and
adc
xchg
mov
or
xor
adc
loope
icebp
cwtl
and
mov
mov
adcb
sub
or
js
out
mov
cli
sub
rcr
push
ret
xchg
and
sub
lods
out
mov
std
cmpsb
outsb
imul
inc
lcall
cmp
inc
or
pop
les
fsts
dec
cmpb
add
jecxz
decl
dec
pop
pushf
ret
ja
out
cmp
xor
in
and
fistpl
jg
inc
cmc
iret
xchg
inc
jl
repnz
dec
or
adc
pop
inc
jl
xor
xchg
or
incl
cld
cli
and
mov
fiaddl
jg
fnstsw
ficompl
cmpsl
xor
loop
mov
test
pop
lahf
mov
movsl
jecxz
pop
mov
or
mov
xchg
jg
or
ljmp
insb
sub
addr16
out
or
push
push
xchg
add
repnz
inc
lock
ljmp
fcmovnu
clc
cmp
fisubrl
in
mov
orb
int3
lcall
outsl
cli
cmp
mov
scas
mov
pop
pop
mov
popl
movb
xchg
lcall
scas
adc
mov
xor
lods
scas
xchg
test
aam
and
dec
sbb
sarl
and
roll
fwait
movsb
jmp
push
lret
push
out
in
and
mov
aas
repz
cmpsb
pop
outsl
icebp
mov
pop
lock
std
or
pop
mov
daa
incl
pop
push
out
outsl
loope
loope
rorl
mov
int
arpl
in
outsl
call
push
out
or
push
sahf
pop
clc
sti
jg
jno
lock
mov
call
sarl
xor
hlt
and
xchg
jmp
sbb
xchg
outsl
pushl
cld
mov
mov
out
pop
jb
mov
mov
mov
sub
pop
mov
scas
sbb
arpl
dec
jp
push
gs
jg
idivb
hlt
push
add
stc
loope
mov
sar
andl
aas
icebp
idiv
test
fisttpll
sbb
scas
fadds
icebp
jmp
jns
mov
in
repnz
jno
pop
sub
jg
scas
cld
or
push
inc
sbb
paddb
aam
subl
jb
adc
push
lock
lods
jp
testb
pushl
sbb
into
fcomps
sbb
sbbl
into
andl
aas
loopne
mov
adc
aaa
xchg
in
add
inc
adc
loope
fisttpll
je
hlt
es
aas
std
cli
push
push
push
idivl
jg
inc
cmp
sub
inc
scas
inc
mov
jg
je,pn
sub
jg
imul
mov
stc
mov
mov
inc
es
gs
jns
enter
or
push
pushf
push
scas
xlat
sub
incb
aas
sti
punpckhbw
cmpsb
orb
mov
lock
jmp
xchg
pop
clc
pop
fistpll
xor
movsb
add
lea
jg
jmp
lock
std
xorb
jg
aad
adc
ret
das
ljmp
sar
pop
pop
shlb
out
sarb
sbbl
jno
or
jg
sarb
std
pop
les
cli
mov
mov
inc
arpl
stos
mov
pushl
and
insl
add
leave
push
scas
loop
jge
push
shrl
mov
push
mov
adc
push
pop
jns
and
sbb
xchg
jo
and
out
test
jae
push
iret
sti
cmp
fdivrp
call
aam
sahf
imul
fcmovnu
rorl
insb
stos
arpl
add
cld
call
js
cmp
scas
lods
hlt
cmp
fistl
mov
adc
push
movsb
xchg
or
pop
cld
lcall
mov
stos
dec
lods
xor
jg,pn
cmpsl
addr16
jg
scas
popa
in
pop
or
mov
xlat
pushf
cld
aas
clc
jge
jnp
sbb
outsb
mov
sbb
dec
jecxz
inc
adc
mov
adc
adc
push
jo
pusha
imul
add
push
ja
xor
cmp
xchg
mov
cwtl
pop
xchg
ftst
jbe
xchg
lea
cmc
inc
and
fisttps
sbb
jg
mov
lahf
cld
sub
aas
stc
add
sti
jmp
pop
gs
jno
fidivrl
lock
adc
pop
cld
addl
adc
pop
lock
and
lahf
fmull
enter
jecxz
push
cltd
mov
pop
mov
sub
mov
dec
incb
fisubrl
aas
mov
or
cld
inc
or
bound
cmpsb
push
pop
jg
add
jg
jbe
mov
aad
test
mov
mov
iret
sar
fldt
push
jbe
push
sbb
stos
icebp
pop
incb
sti
jmp
dec
jno
adc
push
inc
jecxz
sbb
sarl
in
pop
std
adc
loopne
sar
adc
lahf
stos
mulb
imul
dec
ret
imull
mov
mov
aas
mov
fsubrl
cmpxchg
and
decl
mov
clc
xchg
pushf
mov
repnz
and
mov
mov
lahf
or
push
rcrl
in
xor
call
pop
pop
inc
jb
fistpl
adc
call
jno
pop
outsl
lcall
mov
inc
sti
arpl
daa
std
or
sbb
mov
lcall
incl
popf
push
loop
sbb
or
imul
xor
dec
xor
fsubr
fistps
push
cld
lds
fidivrl
jg
stos
pop
iret
incl
jbe
dec
mov
sub
jge
xor
lahf
les
sbb
sbb
call
outsb
push
cld
addl
sbb
mov
lahf
outsl
int3
push
sbb
add
call
ljmp
bound
pop
outsl
xchg
inc
test
in
jge
popa
xchg
das
rolb
cmp
jbe
outsb
hlt
sti
fsubs
shl
dec
jp,pn
movsb
decl
xchg
aad
loop
lahf
mov
or
out
lcall
fisttpl
shl
cld
mov
adc
stos
pop
jg
pop
shrb
rcl
lcall
jg
adc
xor
pop
rcr
dec
mov
gs
pushf
lea
aad
sti
jp
jnp
jecxz
adc
inc
lds
push
pop
adc
ljmp
fisttpll
dec
int
sbb
inc
pop
xor
rorb
and
add
cmpsl
push
sti
iret
mov
lock
inc
cmpsl
enter
mov
into
test
xchg
movsb
insb
or
jg
es
xchg
fidivrs
clc
pushl
jo
aas
repz
outsl
lock
in
jmp
mov
stc
out
mov
clc
push
std
mov
loopne
sahf
or
mov
mov
mov
push
mov
fsubrp
dec
sahf
enter
fcmovb
inc
adc
inc
loopne
test
out
mov
inc
out
pop
or
or
dec
mov
inc
in
ss
lods
movsb
incl
pslld
pushf
imul
cmc
mov
jl
call
fistps
jno
lret
pop
in
cmp
or
mov
jmp
mov
pop
lock
jmp
hlt
dec
mov
and
aas
mov
mov
out
cmp
or
addr16
sbb
cld
daa
jp
cld
jbe
adc
cltd
or
mov
ret
nop
xchg
clc
push
std
cmp
das
incb
lock
pop
pop
div
cld
idivl
cmc
add
scas
stc
lahf
loope
add
lahf
jmp
std
scas
bound
jge
fbstp
out
xchg
add
leave
xchg
mov
mov
loope
mov
cmpsl
popf
push
mov
cmp
ja
push
daa
outsl
das
fwait
dec
das
push
add
cmpsb
cmp
call
ret
data16
add
add
decb
dec
adc
sbb
jo
call
popf
iret
jb
jo
or
mov
cmp
int
add
push
pop
aaa
std
ja
test
dec
inc
das
js
xchg
xchg
fimull
ret
and
pusha
dec
ror
sbb
aaa
inc
push
pushf
jecxz
adc
shrb
adc
aas
pop
clc
loope
loope
mov
lahf
jp
pop
inc
push
jg
jmp
lods
mov
fldenv
iret
fdivrl
xchg
lcall
push
cmp
repz
add
movsb
loop
dec
sarl
pop
out
jg
jno
ret
shll
cmp
jmp
iret
push
dec
jge
pop
clc
xchg
cmpsb
ljmp
ds
inc
inc
mov
in
sbb
xchg
imul
jmp
outsl
jmp
add
mov
daa
jmp
faddl
mov
inc
push
jae
lcall
push
imul
pop
stc
push
dec
adc
jmp
cmp
mov
mov
enter
inc
add
decl
out
daa
icebp
push
lahf
sti
inc
pop
imul
push
xchg
cmpsb
scas
les
pop
xor
mov
incl
mov
mov
fildll
fsubrl
dec
add
or
inc
or
add
jle
sti
push
sti
pop
inc
dec
push
mov
fs
push
cmp
call
dec
int3
pop
iret
and
add
mov
les
jmp
outsb
dec
xchg
push
movsb
push
xor
inc
add
pop
cwtl
jbe
orl
adc
add
cmp
push
out
jb
sbb
scas
and
mov
inc
imul
pop
cmpsl
clc
mov
fs
decl
insl
mov
mov
lret
cmp
adc
pop
xlat
decl
lret
dec
push
mov
sub
inc
enter
imul
pushf
dec
aad
sbb
jmp
mov
push
jbe
jo
in
push
xor
jns
lock
xchg
mov
jno
mov
ja
aam
pushl
outsb
cmp
repnz
mov
and
fucomip
ss
and
xchg
push
cmpsl
xor
mov
pushl
std
add
jle
dec
pop
fidivl
push
dec
jne
ja
xchg
out
push
es
jecxz
jg
xor
das
sbb
xchg
push
lret
pusha
pushf
test
mov
decl
mov
mov
lahf
and
mov
dec
dec
ljmp
dec
sub
cmpsb
push
jmp
imul
sbb
jmp
xchg
cmpsb
xchg
pop
pop
and
xor
insb
shr
cmp
inc
notl
inc
sbb
test
out
xchg
jne
fidivs
jne
sub
js
cmp
stc
nop
ret
dec
cmpsb
enter
les
mov
inc
jns
pmaxub
sub
ljmp
or
mov
push
sbb
or
jmp
shlb
push
jge
enter
ljmp
jle
pop
cld
xchg
in
xchg
bound
pop
icebp
jle
adc
mov
sbb
push
xchg
push
and
jle
sbb
rcrb
inc
jle
cmp
fisttps
data16
jnp
pop
push
scas
dec
lcall
jne
mov
loope
insl
inc
test
push
je
lret
aam
jle
and
aaa
lcall
xchg
bound
adc
fs
push
inc
mov
add
sbb
push
mov
in
je
shr
out
xchg
xor
jbe
jbe
sbb
sub
sub
mov
cmp
adc
cmp
add
pop
bound
enter
sub
xlat
leave
or
ja
enter
pushl
inc
pop
cmp
ficomps
lret
pop
flds
fs
adc
mov
ret
jg
js
hlt
and
decb
fldenv
mov
test
jp
mov
lds
cmp
in
insb
and
je
sbb
cmp
scas
ss
pop
and
ljmp
addl
sub
inc
mov
mov
aad
pushl
pop
jl
repnz
orb
lds
sbb
lret
sub
pop
adcb
sbb
mov
or
mov
lret
cmp
adc
rcll
stos
js
stos
icebp
cmp
jl
jmp
xor
push
pop
pop
movsb
jnp
push
rcll
aas
stos
jmp
pop
jmp
push
aam
pop
lcall
jae
out
imul
pop
dec
jo
add
pushl
nop
mov
pop
xor
pop
std
in
icebp
mov
mov
fwait
js
ret
aaa
cld
pop
pop
insl
jmp
cmp
add
push
stc
or
mov
sbb
in
xchg
mov
sar
mov
mov
pop
fisubrl
stc
mov
les
sarl
loop
xor
into
lcall
and
pusha
je
inc
movsl
sbb
sbb
les
andb
test
mov
jb
aas
scas
and
dec
mov
jb
cmp
loopne
or
lret
jnp
xchg
outsl
adc
movsb
xorl
lea
push
pop
outsb
xor
call
sub
pop
into
mov
movl
faddl
sub
push
mov
jmp
cmc
dec
push
ret
sbb
ret
jl
cld
pusha
adc
fbld
sub
push
xchg
adc
decl
dec
sub
mov
mov
dec
test
pop
movsb
incl
hlt
cmp
iret
stos
mov
sbb
pop
jmp
xchg
lret
cli
xor
mov
pop
in
lods
out
test
call
mov
mov
adc
out
clc
cmp
incl
pusha
xchg
inc
movsb
pop
std
sarl
pop
aad
push
add
clc
mov
jg
mov
cli
fs
or
mov
add
in
push
movsb
xor
pop
icebp
jl
pushl
arpl
daa
out
fmuls
fstpt
mov
jo
sbb
sbb
lcall
lds
push
jmp
push
pop
sbb
icebp
jg
jnp
out
iret
repz
out
std
daa
push
push
lods
lock
sbb
mov
fmull
ljmp
repnz
fistps
cmp
stc
dec
bound
xor
add
into
pop
jnp
or
ds
push
pop
and
cmp
imul
mov
cmpl
mov
add
iret
arpl
jbe
ja
xor
ss
ljmp
test
fwait
scas
xchg
dec
or
push
xor
sbb
mov
icebp
cmp
jg
stos
hlt
shl
bound
ret
pop
ret
and
xor
aad
in
add
xchg
rcll
lcall
imul
mov
lcall
lret
adcb
mov
mov
je
mov
pop
mov
sub
cmc
incl
jp
push
xchg
cmp
and
mov
fcoms
or
jmp
and
sbb
scas
mov
xor
test
out
outsl
ret
addr16
fcomip
pop
lock
cmp
nop
fdivrl
xor
mov
sti
fisttpl
mov
aaa
std
decl
notl
mov
xor
pop
and
dec
jg
push
mov
iret
imul
pushl
fwait
ss
test
es
jmp
cwtl
loopne
mov
arpl
test
fildll
fimuls
aaa
stos
mov
out
shrd
mov
jecxz
or
fstp
jmp
pop
mov
mov
cs
xlat
mov
enter
insl
or
out
jne
mull
clc
dec
add
test
cmp
addb
push
ljmp
add
inc
or
pop
xchg
mov
lods
arpl
sbb
xchg
mov
outsl
pushf
push
mov
pushl
sarb
rcrl
out
add
fldt
ss
mov
arpl
xor
les
mov
add
shr
pushl
pop
pop
int
xlat
call
xor
lods
enter
lret
jecxz
fildll
out
popa
add
cli
cltd
arpl
andl
pop
jnp
movl
lret
out
std
sti
xor
add
adc
mov
arpl
stos
cmp
call
repz
mov
adc
push
add
xchg
or
fwait
mov
scas
sub
xor
xchg
mov
and
into
jno
push
jmp
pop
loop
push
out
sub
clc
push
insb
or
ss
sbb
jmp
cs
outsb
mov
or
popa
dec
mov
int
pop
stc
js
fildll
add
ljmp
ret
mov
xor
push
xchg
jg
jnp
lahf
ss
inc
jg
adc
push
pushl
jb
loopne
sub
sbb
pop
dec
test
dec
fisubs
out
sti
sub
bound
jbe
decl
arpl
add
jo
pop
repnz
mov
sbb
jg
pop
push
jno
fs
les
packuswb
fwait
mov
into
push
les
fwait
das
decl
out
xorl
out
rorb
push
adc
jne
mov
fidivrs
int
sbb
shrl
or
pop
xchg
add
pushf
test
sub
xchg
icebp
jmp
out
adc
jl
cwtl
sub
int
out
xor
mov
insl
scas
xchg
mov
loop
inc
jp
fstpt
aas
mov
fsts
ljmp
lea
stos
pop
push
dec
sub
inc
push
mov
jbe
jo
inc
or
jge
and
inc
pop
test
adc
cmp
pop
lcall
mov
push
loop
cmpsl
xor
or
xor
cmpsl
std
decl
adc
adc
scas
and
xor
loop
shlb
into
call
cmp
and
fwait
cmpsl
lcall
or
sbb
ret
cli
mov
xchg
lock
adc
xor
cltd
or
inc
sub
mov
inc
leave
mov
outsb
xor
add
pop
dec
pop
xor
fcomip
jl
loope
push
mov
call
dec
jecxz
mov
fstp
mov
decl
pop
push
sbb
outsl
je
jae
stc
das
adc
icebp
ljmp
push
sub
jbe
pop
jmp
mov
mov
out
cmp
out
push
mov
and
cmp
jne
jp
mov
inc
adc
cmp
andb
pop
mov
push
ret
fbld
shr
cmpsl
ljmp
sub
imul
pop
xchg
mov
lcall
stos
aad
inc
lahf
mov
pop
cmc
das
sbb
and
mov
jno
push
movsl
sub
lcall
lcall
lret
imul
sbb
in
cmp
std
xchg
aaa
js
sub
jmp
jbe
outsb
mov
loop
or
aad
sub
push
sbb
push
inc
jae
add
test
jg
pop
lock
xor
and
xlat
cmp
sub
ret
es
adc
decl
jo
lock
scas
cmp
jp
and
scas
es
ja
xchg
sbb
call
pop
loopne
mov
leave
dec
jmp
and
mov
mov
jp
add
std
inc
sbb
loope
lcall
xchg
push
insb
inc
jle
or
insl
push
fidivl
mov
adc
add
pop
and
ljmp
jp
pop
in
sub
mov
dec
jmp
jl
sbb
sti
xlat
dec
push
mov
ljmp
pop
lea
pusha
or
daa
cmp
or
adc
lcall
sub
inc
test
or
popf
dec
adc
cmp
push
push
lcall
push
pop
or
lahf
ds
mov
aad
cmp
lcall
inc
jle
incl
inc
cmp
inc
or
mov
aam
inc
mov
and
xchg
leave
cmp
sub
ljmp
pushf
negb
mov
cwtl
sbb
push
outsl
hlt
js
mov
aaa
xor
decl
xlat
test
jbe
adc
rol
mov
ret
imul
jmp
inc
mov
or
jne
js
add
lahf
lock
sub
call
loopne
mov
cmp
adc
rorb
stos
in
and
pop
ret
xchg
mov
jno
push
mov
cmp
sub
push
jg
or
push
icebp
incl
in
test
loopne
out
push
incl
scas
jmp
mov
push
cmp
repz
orb
pushl
and
cmp
add
sbb
fidivrs
stos
push
and
aas
subb
add
imul
gs
mov
dec
mov
xchg
in
call
jmp
call
lds
push
mov
and
fcomp
and
cmpsb
inc
jbe
lret
adc
mov
fildll
daa
mov
mov
jmp
dec
movsb
pop
or
lock
sub
fsubrs
sub
mov
add
xor
incl
or
xchg
and
stos
xchg
outsb
or
or
mov
ficoms
leave
pop
sar
jg
lret
ret
push
sub
mov
es
or
outsl
jmp
idivb
mov
mov
sbb
cld
orb
inc
aam
enter
and
ljmp
inc
cld
subb
lea
call
dec
stos
mov
sbb
dec
and
testb
adc
xor
cmp
stos
outsl
out
adc
mov
mov
in
and
or
es
sub
jecxz
test
movsl
mov
inc
jmp
inc
cmp
fsubrl
out
in
ficoml
lods
cmp
sub
dec
xor
mov
fsubl
or
cmp
imul
push
dec
lods
movsl
shl
arpl
adc
ljmp
push
mov
adc
jecxz
call
pop
adc
sbb
movsb
mov
jmp
push
fildll
loope
sub
jne
or
inc
jl
cmpsb
xor
pop
aam
jae
mov
adc
fildll
fstpt
lret
testb
jp
inc
test
sub
mov
clc
lcall
add
cmc
notb
mov
adc
pop
lcall
jno
mov
in
sbb
cmp
lret
jecxz
pop
fidivs
mov
pop
lock
push
inc
mov
sub
decl
inc
and
push
lret
test
das
cli
mov
adc
aam
sti
enter
adc
xchg
xor
and
call
sbb
int
mov
das
pushf
test
push
push
pop
lret
popf
mov
mov
jmp
test
cltd
push
mov
mov
decl
test
push
xchg
pop
sub
decl
xchg
out
lds
xor
xchg
push
mov
fldcw
cld
out
mov
movsb
sub
dec
and
cmp
pop
dec
mov
in
sbb
movsb
mov
scas
in
mov
dec
xor
mov
fcomip
aaa
pop
in
or
lods
xor
in
jae
jne
jne
jmp
inc
xor
dec
lcall
out
cmp
cmp
aas
mov
shll
sub
ja
add
xor
sub
mov
or
enter
push
es
adcl
xchg
mov
int3
loope
jp
adc
jmp
fildll
mov
jge
xchg
sub
sbb
lret
call
enter
cli
push
inc
add
mov
xchg
dec
adcb
push
pop
add
cmp
sbb
mov
pop
push
in
jg
mov
in
lock
push
jbe
es
inc
aad
mov
cmpsb
decl
cmpl
and
xchg
ss
pop
sbb
xlat
clc
jle
out
pop
jle
and
inc
sub
icebp
sahf
xchg
and
fucom
inc
sub
int
push
orl
call
add
test
pop
clc
mov
jmp
add
adc
nop
xor
jmp
in
ds
add
mov
xor
pop
jae
int3
mov
add
jp
out
incl
cmp
inc
out
test
int3
add
push
pop
adc
data16
push
stc
cld
mov
call
dec
jae
push
push
dec
ljmp
push
es
aas
inc
dec
gs
adc
dec
lret
or
clc
out
idiv
mov
fisttpl
js
cli
add
mov
jle
cmp
ljmp
scas
jl
inc
jo
pop
test
inc
jle
push
sbb
xchg
in
mov
push
mov
push
leave
fcmovne
pop
sbb
ljmp
in
lea
icebp
idivb
xchg
lods
lahf
dec
jmp
fcomi
dec
mov
dec
js
test
bound
shll
push
jne
adc
das
fcomip
adc
sub
mov
cmp
call
xor
sub
push
pushf
lcall
lock
dec
popf
mov
rclb
daa
shrb
push
jno
and
xchg
ja
iret
adc
sar
mov
cmp
fs
xor
jle
push
int3
inc
popa
pop
add
fsubs
and
push
add
jmp
cmp
dec
mov
idivl
inc
aad
push
xchg
cmc
pop
das
ret
inc
lods
shrb
shrb
jecxz
subl
lods
data16
add
xchg
jge
sti
or
lods
insl
inc
xor
sbb
popa
roll
ljmp
sbb
xor
jno
pop
daa
cmpsl
push
notb
sarb
jmp
incl
aad
xchg
fcoml
loope
lret
cmpsb
mov
subl
mov
leave
scas
divb
jmp
push
movsb
std
rorb
fwait
adc
shl
sub
fs
test
inc
add
xchg
lods
jg
fdivrl
and
aaa
cmp
inc
loope
mov
xchg
rorl
popf
in
ljmp
sbb
push
inc
dec
push
mov
jae
adc
jmp
cmpsb
fs
mov
jg
cmp
sbb
fmul
dec
cmp
testb
jp
mov
ret
imul
adc
sbb
push
xchg
call
push
push
sarl
out
dec
jno
sbb
cmp
roll
push
test
dec
mov
incl
sbb
das
adc
xlat
pop
fsubl
mov
pop
and
ja
sbb
mov
shl
xchg
pop
call
decl
inc
cwtl
sbb
and
dec
sub
add
jg
or
dec
or
hlt
inc
outsb
std
jp
clc
dec
cmp
jmp
test
sti
aaa
push
lcall
cmc
jns
fldl
out
cmpsl
jb
jg
cmp
or
cmp
fisttpll
int
sub
push
push
repnz
jmp
int3
flds
es
mov
push
inc
sbb
xor
ljmp
mov
clc
repnz
push
xor
xchg
dec
mov
adc
pop
incl
jl
rcr
xor
xchg
xor
adc
xor
jmp
push
repz
xchg
das
aam
lods
shlb
aaa
fs
mov
fisubrs
cmp
pop
popf
cmc
lods
add
dec
pop
ljmp
dec
shrb
cmp
add
sbb
pop
les
fisubrl
pushl
or
stos
cs
mov
movsl
loope
mov
imulb
pop
cli
mov
cmpsb
xchg
outsl
addr16
and
ds
div
push
rcrl
pop
pop
ljmp
mov
push
push
pop
fldcw
xor
dec
mov
sbb
mov
mov
add
test
adcb
mov
mov
jg
mov
xchg
stos
int3
ror
mov
les
or
aaa
cwtl
or
decl
imull
mov
loopne
leave
inc
int3
sbb
sbbl
lods
jmp
outsb
call
push
test
jae
xchg
add
pushf
loop
xchg
mov
xor
insb
call
aam
xor
mov
push
adc
test
incl
sbb
xchg
pop
daa
dec
ret
roll
test
insb
imul
jp
popa
dec
dec
mov
add
push
jne
dec
dec
in
lret
adc
dec
mov
xor
dec
fists
mov
sub
push
jno
ljmp
addr16
fbld
fwait
mov
in
lcall
add
sbb
hlt
lods
xchg
inc
pusha
add
xor
cmp
xchg
idiv
decl
and
dec
shrb
inc
andb
inc
imul
jle
add
jp
push
dec
mov
in
xchg
stos
movsb
mov
jne
lea
mov
cs
mov
fwait
xchg
mov
mov
aas
call
pushl
or
fistps
jmp
ret
subb
cltd
sahf
shr
xorl
mov
incl
scas
lret
push
fnstcw
jns
adc
and
popa
fmul
cmc
pusha
push
fcomip
pushl
push
jl
mov
jno
adc
jns
imul
dec
repz
je
ljmp
mov
mov
movsl
cmp
shl
cmpsl
shr
inc
push
insb
mov
out
loop
js
bound
pop
insl
data16
xchg
xchg
pop
sbb
jne
push
or
or
js
and
pop
adc
icebp
or
pop
cmp
jb
lret
push
rol
cld
sub
mov
jg
incl
mov
sub
xlat
and
fs
call
cmp
cli
gs
gs
shrl
adc
insb
push
mov
lea
inc
call
out
add
pop
jno
adc
and
int3
mov
inc
jmp
in
inc
ja
inc
insl
xor
pop
mov
das
inc
stos
fucomp
ss
scas
hlt
mov
push
jnp
aas
bound
mov
fyl2x
daa
jmp
mov
lock
js
xchg
inc
sti
insb
stc
mov
jp
loop
scas
sub
cmp
int3
cmpsl
mov
xor
dec
lods
mov
xchg
dec
je
call
stos
pop
xchg
adc
jno
into
mov
repnz
outsl
cmpsb
lods
pop
mov
cmc
cs
jmp
or
mov
daa
xchg
push
or
int3
inc
xor
shll
mov
out
sbb
mov
call
mov
lahf
rcrb
ss
cmc
cmp
aaa
stc
testb
jne
ret
sti
or
mov
negb
cltd
pop
push
sbb
fnstcw
cmp
std
mov
decl
sub
dec
in
es
sbb
and
inc
in
test
loope
push
cmpsb
lea
pop
push
cs
lcall
jbe
sbb
mov
inc
icebp
push
hlt
pop
out
stc
jbe
cmp
jo
test
filds
xchg
and
mov
clc
adc
mov
xchg
mov
mov
adc
ficoml
xchg
cs
repnz
cmpsl
icebp
xchg
pop
mov
pop
mov
jmp
incl
loop
jecxz
cmpsl
ds
cmp
xrelease
mov
push
lret
cmpsl
pop
sbb
xchg
scas
jbe
ljmp
dec
lods
cmp
std
pop
loop
shrl
push
leave
daa
sahf
es
mov
jmp
test
pop
mov
sbb
adc
and
mov
mov
hlt
or
dec
jp
aam
xchg
jnp
jecxz
sub
imul
incl
setno
and
lock
call
data16
add
loopne
fsubr
int3
int3
inc
dec
stos
mov
lcall
mov
mov
movsb
inc
aas
ss
incl
ljmp
adc
add
mov
rcr
stos
stos
js
mov
cmp
xchg
lret
jp
push
mov
cmpsb
mov
cld
icebp
mov
mov
pop
or
inc
loop
les
out
les
lcall
sub
cmp
mov
into
fstl
pop
sub
jl
lods
in
adc
mov
call
cld
push
push
mov
inc
sbb
ss
jbe
push
movsl
shll
repz
add
lcall
sbb
scas
out
rclb
aam
dec
mov
mov
movl
mov
jg
xchg
inc
stos
rorl
mov
mov
sti
xchg
push
mov
clc
inc
jmp
dec
shl
inc
pushf
and
std
idiv
mov
push
arpl
cwtl
int
mov
lods
pop
cmp
ljmp
xor
test
test
sbb
out
sbb
jp
push
into
and
push
cltd
dec
fisubrl
fsts
mov
orb
dec
aaa
sub
lret
out
repz
lods
add
mov
lahf
xchg
dec
fwait
and
sti
fildll
add
cmp
hlt
mov
sbb
sbb
jae
cwtl
inc
and
xchg
mov
sarl
decl
sub
mov
cmp
dec
and
mov
pusha
mov
mov
jle
pop
xor
ficomps
testb
lock
movsb
loop
sub
leave
mov
jge
mov
xor
sub
test
mov
incl
int3
add
fdivrl
cmp
mov
add
js
mov
jl
push
cmp
fsubrl
pop
mov
jmp
mov
inc
nop
cmp
lods
inc
sbb
jg
jge
xor
mov
add
pop
insb
and
push
jg
les
cmp
popf
inc
cmp
xchg
mov
push
adcl
jmp
or
orb
sub
cmp
clc
mov
cmp
lds
popf
icebp
xchg
insb
loop
gs
mov
in
incl
cld
jl
adcl
dec
dec
add
pop
rolb
stos
jmp
fiadds
in
or
adc
jb
sub
mov
ret
and
das
and
ja
mov
lea
test
inc
decl
sub
leave
mov
mov
popf
lcall
mov
lret
sbb
out
sub
shrb
lcall
jg
ret
push
push
adc
test
fcompl
pusha
inc
xor
icebp
mov
cli
adc
stos
dec
jno
mov
lcall
adc
jno
stos
add
clc
shr
add
jnp
xchg
push
lret
ret
dec
cmp
notl
sub
imul
decl
dec
mov
movsb
lods
js
and
jb
notb
insb
rorb
clc
fildl
jmp
mov
pop
lahf
cmc
sahf
aas
inc
call
mov
sbb
notl
mov
inc
out
pop
inc
adc
outsl
xchg
out
sarb
int
cmp
aam
cld
jg
adc
or
jns
inc
inc
inc
jb
xchg
lret
sbb
xchg
mov
lcall
enter
cmp
mov
stos
sub
mov
fnstenv
ja
pushl
jb
add
lea
dec
popa
xchg
push
push
andb
add
arpl
pushl
ja
pusha
sbb
mov
and
and
ret
jmp
jecxz
push
das
xchg
jnp
add
adc
jmp
dec
mov
outsb
fildll
cmp
cmpsl
xchg
lock
imul
ljmp
out
adc
cltd
or
jmp
xor
js
ja
mov
imul
decl
xor
xchg
mov
inc
aaa
and
je
in
and
dec
sub
pusha
iret
mov
movsb
pop
jmp
das
popf
fisttps
loopne
dec
push
mov
repnz
outsl
ret
xor
pusha
decl
shrl
aaa
push
push
inc
in
jnp
adc
insb
mov
push
lods
aaa
in
mov
call
cwtl
scas
cmp
inc
mov
shlb
jo
dec
mov
js
mov
fwait
ljmp
jmp
mov
xor
sahf
cli
and
mov
mov
xor
mov
jmp
dec
enter
je
jg
loope
jbe
cmp
test
jae
pop
push
mov
pushl
mov
lcall
mov
push
sbb
or
xchg
roll
jg
mov
sub
shll
mov
hlt
fldt
lock
pop
vmwrite
mov
xchg
gs
push
out
jl
daa
jecxz
shlb
mov
ror
push
sti
pop
lret
loope
inc
pop
mov
push
cld
pop
daa
mov
add
mov
push
push
dec
push
test
sbb
push
mov
mov
dec
fcmovnb
inc
mov
loope
inc
sar
ljmp
fistpll
mov
dec
insl
imul
jg
ffreep
fs
mov
inc
cmp
or
imul
inc
xor
loopne
call
cmp
dec
jnp
scas
and
je
xlat
or
mov
call
cmp
jno
icebp
and
ss
mov
movl
rclb
lcall
adc
jno
inc
push
xlat
into
cwtl
pavgb
ljmp
jle
enter
dec
jg
pop
jae
imul
iret
mov
adc
cmp
jno
push
out
inc
mov
lods
sbb
cmp
sti
incl
sbb
aad
cmc
pop
fdivs
sbb
add
fstps
loopne
xchg
dec
call
stos
xchg
mov
and
imul
out
mov
outsl
andb
shll
lea
call
call
cwtl
mov
jl
pop
adc
add
mov
ret
xchg
xchg
ljmp
lcall
dec
fistpl
daa
aaa
mov
inc
fs
xor
ret
sub
sub
mov
jo
jo
sub
xor
test
ljmp
lods
enter
insl
out
repnz
sbb
mov
subl
pop
jmp
fcom
repz
mov
dec
cmpsb
ljmp
sbb
push
lcall
xor
lret
xchg
pop
or
add
pop
mov
ror
jmp
xor
xor
in
insl
loop
loop
mov
add
jl
add
in
mov
fucomi
mov
mulb
inc
adc
dec
jl
jmp
sbb
es
fstps
xor
rcrb
andb
jbe
xchg
ret
mov
xchg
loope
add
dec
cmp
mov
mov
pop
cltd
inc
shlb
js
push
jg
pushl
mov
or
push
xchg
lcall
push
and
jns
mov
add
mov
or
leave
lcall
outsb
into
movsl
fwait
sub
mov
das
and
mov
or
adc
sub
in
add
push
fwait
fwait
scas
hlt
arpl
jmp
jp
pop
fildll
or
mov
repz
test
xlat
ret
xchg
and
sti
sbb
mov
scas
inc
cld
fcoms
dec
fsubrs
call
push
push
cltd
leave
xchg
or
add
das
arpl
add
add
into
add
ljmp
ljmp
scas
js
iret
out
dec
inc
fldt
inc
test
decl
clc
test
adc
stos
shll
ficoms
sub
call
loopne
mov
aaa
jmp
cwtl
pop
mov
and
fisttpll
stos
push
sarb
push
fwait
decl
inc
mov
aad
leave
mov
adc
repnz
sbb
jae
imulb
mov
mov
mov
dec
and
inc
fdivrs
ret
lods
push
sub
mov
lods
icebp
jb
incl
fsubrl
sahf
subb
movsl
jg
and
lds
sbb
popf
test
jbe
jg
ljmp
addr16
in
mov
sub
push
ljmp
lods
mov
enter
dec
jmp
or
aam
jns
gs
ljmp
lea
in
pushl
imul
push
sarb
ficomps
data16
loope
sbb
inc
pushf
sti
xchg
sti
sub
in
mov
ds
leave
mov
xor
push
gs
push
cmp
inc
aaa
fnstsw
jecxz
aam
pop
das
aad
and
push
push
clc
aam
add
cmp
adc
mov
dec
ljmp
lock
cmp
filds
dec
int
or
out
dec
fcmovb
incl
jb
push
dec
scas
ja
adc
sbb
adc
cmp
or
adc
dec
sti
sbb
decl
es
xchg
scas
cmp
dec
idivl
xor
cmp
repnz
mov
andl
movsl
loopne
arpl
mov
inc
adc
dec
fsubs
lcall
adc
inc
sub
push
xchg
int
pop
or
jg
push
test
fwait
mov
cmp
movsl
jg
mov
mov
aaa
std
das
jle
ficoms
mov
into
stc
je
mov
cli
decl
scas
popf
jbe
mov
inc
sbb
std
enter
or
fiaddl
jp
jg
out
cmpsb
daa
in
dec
pusha
jg
cmpsl
push
add
sahf
je
es
add
decl
cmp
push
push
int
ss
jge
outsl
rclb
out
notb
popa
cld
inc
sub
ja
and
jle
cs
aam
ljmp
sub
jge
popf
js
inc
or
jne
pop
push
pop
ret
add
aam
out
dec
rcrl
mov
push
adc
les
addr16
lods
xchg
in
dec
or
les
in
inc
inc
mov
or
in
push
sub
dec
mov
ret
xchg
orl
call
or
push
adc
mov
jbe
sbb
cmpsl
arpl
inc
ljmp
mov
jg
mov
lret
fwait
movl
jb
stos
insl
jne
inc
jge
call
dec
jne
lret
ljmp
ljmp
add
pop
out
rorb
mov
dec
mov
jns,pt
mov
shlb
imul
int3
jg
sub
movsl
lock
dec
lahf
icebp
xchg
mov
imull
jg
test
fiadds
mov
dec
rolb
jle
inc
cmp
std
scas
lcall
xorl
sbb
scas
adc
cli
lods
or
testl
icebp
push
jbe
lods
es
dec
shlb
sub
jno
js
inc
test
test
sar
les
mov
adc
jno
cmpsl
xchg
xchg
dec
mov
decl
xchg
push
shl
bound
ljmp
jle
aaa
sub
clc
inc
inc
xor
cmp
out
cmpsb
stos
ljmp
sub
cltd
inc
incl
shrb
jo
sub
mov
data16
push
call
pushf
cli
shll
pop
ljmp
cmpsl
mov
pop
inc
ret
add
notl
test
fbstp
xchg
and
inc
add
sbb
incl
mov
pop
lock
mov
mov
roll
xchg
clc
ret
and
mov
movsb
cli
test
add
les
xor
in
mov
lcall
mov
cmp
movsl
adc
int3
adc
mov
adc
call
decl
cs
fiaddl
insl
push
mov
jns
dec
pop
jmp
aam
add
add
jmp
das
aam
dec
mov
push
or
mov
call
scas
cmpsb
mov
jmp
popf
lock
jge
in
ret
das
mov
int3
push
stos
lahf
jg
sbb
push
std
test
mov
pop
scas
jg
js
addr16
or
jmp
jae
icebp
aas
pop
daa
sub
sub
ss
mov
inc
dec
add
mov
es
test
out
xor
jp
jne
je
insl
or
or
mov
cmp
jno
mov
lods
ljmp
hlt
or
dec
outsb
data16
jmp
xlat
test
imul
stos
cmp
and
sbb
icebp
clc
pop
sub
fs
mov
pushl
mov
adc
lcall
mov
repz
jmp
popa
fs
fwait
test
insb
pop
sub
inc
dec
mov
imul
decl
clc
loope
ret
subl
xchg
gs
fldl
leave
call
push
out
lret
test
sbb
inc
imul
cmc
cmc
lret
ljmp
mov
jge
mov
sub
jmp
dec
lea
lods
imul
lcall
ljmp
mov
scas
mov
jp
idivl
popa
fcomps
sar
jg
aas
shr
pop
pushf
nop
fcmovbe
xchg
nop
dec
jecxz
xor
mov
mov
inc
jg
pop
loop
js
xchg
cli
lock
lahf
outsl
call
int3
mov
mov
cmp
outsl
pop
push
and
add
call
xor
sub
push
lcall
jg
stos
lock
and
and
mov
pop
out
inc
cld
mov
and
fstps
fwait
imul
call
out
fsubrs
jo
jns
in
stc
mov
lods
or
aad
decl
fs
pop
add
cli
enter
pop
sbb
out
pop
pop
mov
pop
cmp
and
and
mov
stos
sbb
sbb
clc
dec
pop
add
outsl
xor
lcall
jmp
xchg
les
out
lret
add
std
pop
pushf
in
add
jg
fst
push
cmp
and
popa
pushf
add
test
mov
add
negl
fucomip
sbb
cs
cmc
or
fs
lock
outsl
ja
sub
push
lret
icebp
sar
mov
push
push
in
add
rclb
push
cltd
jb
push
lret
xor
mov
decl
push
scas
loope
pop
rol
add
mov
jbe
gs
out
pop
add
call
aas
add
loop
aad
aad
jns
push
xchg
into
dec
lods
outsb
mov
decl
pop
or
or
ror
dec
cmpsl
movsl
cmp
hlt
mov
mov
push
in
pop
lret
out
cli
push
jmp
jb
push
fs
mov
mov
inc
pop
fimuls
gs
lcall
ljmp
ret
fisubrs
adc
adc
lods
ljmp
movsb
pop
or
xchg
lret
sub
xchg
push
and
ljmp
subb
aad
dec
out
insb
pop
insl
adc
ret
pushf
jecxz
mov
incl
outsb
pop
mov
inc
pushf
and
fstl
out
sbb
pop
mov
and
push
mov
pushl
testb
pusha
or
jo
push
sub
call
mov
leave
inc
cld
jle
into
xchg
ret
int3
sbb
mov
dec
mov
inc
stos
add
dec
pop
jl
xchg
push
pop
or
and
arpl
adc
and
pop
orb
jmp
sub
sti
mov
ljmp
xchg
nop
aad
pop
stos
fstpl
mov
lock
jmp
test
mov
jo
mov
inc
arpl
subb
daa
push
addr16
push
xchg
mov
mov
jle
push
mov
ljmp
call
fidivl
orb
enter
cmpsb
outsb
jns
test
inc
out
jnp
fwait
push
dec
xor
or
cmp
cmpsb
ret
push
insl
fcompl
mov
mov
lock
decl
push
and
cmp
scas
push
gs
js
in
test
icebp
mov
scas
leave
mov
bound
push
mov
xor
popa
jb
pop
fsubl
jge
add
fwait
sub
add
sub
outsb
xor
push
stos
rorl
pop
mov
xor
and
xor
pushf
jnp
push
add
mov
stos
xor
test
loope
pushl
sub
cmp
jns
addr16
push
sub
inc
mov
shlb
sub
das
ret
icebp
push
and
mov
pushf
fcomps
mov
mov
add
jecxz
aad
jno
mov
or
in
xchg
push
fcomip
lcall
dec
adc
je
jl
pop
enter
orb
pop
pop
idivl
inc
mov
jno
xlat
daa
dec
pop
cmp
inc
dec
and
test
data16
ljmp
decl
jmp
xchg
dec
xor
lret
push
cmp
bound
insl
lods
inc
cli
loop
call
call
in
push
jnp
ret
and
xor
loope
nop
clc
js
sahf
frstor
loopne
dec
idiv
mov
push
adc
sbbb
jge
jp
and
add
fiaddl
sti
call
lock
add
pop
cmp
out
out
mov
scas
outsl
push
movsl
or
call
mov
jnp
cwtl
nop
lods
das
add
mov
adc
cmp
sbb
cmpl
daa
pushf
scas
lds
xchg
ljmpw
pop
loope
pop
mov
iret
jle
xchg
adc
lock
lcall
inc
shlb
lret
ret
cmpsb
idiv
pushl
xchg
jle
xor
mov
lea
or
jo
lret
dec
push
xor
lcall
push
or
cld
andl
movsb
and
mov
int
pusha
xchg
call
ja
test
in
ret
push
mov
sbb
sub
out
mov
clc
sub
mov
jbe
negb
fcomip
adc
dec
push
sub
xchg
test
insl
xor
test
mov
cmpsl
add
cmc
push
out
xor
fs
rol
xchg
mov
xchg
lock
incl
imulb
mov
push
pop
fmuls
jo
jg
inc
mov
mov
stc
adc
aaa
dec
or
stos
ljmp
incl
sub
lock
adc
mov
mov
in
orl
sub
fcomip
incl
pop
xlat
push
inc
in
rcrl
rol
test
or
mov
cmp
pop
repnz
mov
mov
jp
pop
cltd
cltd
cld
sub
push
jno
jmp
push
data16
test
jle
pusha
outsl
jp
fwait
add
dec
mov
inc
decl
loope
in
jb
push
fisttps
out
mov
out
mov
movsl
mov
mov
insb
push
mov
fs
mov
add
xchg
cld
repz
lock
call
cwtl
pushf
gs
test
add
push
dec
fadds
bound
jne
fistpll
lods
push
cmpsb
pop
sahf
jnp
sub
clc
push
out
inc
jns
adc
cmc
ljmp
sti
ja
jl
jb
add
dec
mov
fstl
mov
addb
ljmp
mov
popa
xchg
pop
pop
mov
pop
mov
ljmp
add
jmp
mov
xor
xchg
cmp
mov
push
sbb
inc
xchg
xchg
or
sbb
pusha
or
lret
mov
popf
dec
push
repz
cmp
enter
mov
cmc
or
mov
pop
insb
mov
push
cmp
or
sub
cs
mov
jmp
xor
lret
and
cmp
call
cld
int3
dec
or
test
mov
bound
stc
add
out
push
lcall
subl
movsb
jo
subb
xchg
mov
insl
cs
clc
jmp
cltd
push
and
sub
adc
lcall
sbb
jnp
test
stc
and
inc
fstpl
pop
add
xor
popa
xchg
pushl
cltd
es
add
sub
mov
mov
add
cs
mov
ljmp
pop
push
jne
out
lcall
xor
add
lods
out
out
mov
out
xchg
jp
xchg
call
jl
out
bound
adc
in
lcall
sbb
cld
or
lock
addr16
outsb
xchg
push
lea
lcall
fisubs
out
fldl
xchg
jne
cs
and
decl
xchg
xchg
lret
lcall
repnz
mov
push
inc
or
fildll
and
mov
push
sbb
pop
int3
leave
stos
jns
jecxz
xchg
les
mov
call
and
cltd
rcr
fwait
stos
sti
test
inc
cs
mov
arpl
jg
out
loope
sbb
jbe
xchg
or
movsb
repnz
or
jle
icebp
cmp
cmp
loope
mov
insb
xor
inc
negb
dec
int
push
into
jae
int
xchg
outsl
cli
out
mov
aam
or
cld
pop
add
rolb
cmp
and
dec
fwait
nop
cmpsb
xchg
jp
inc
and
jb
xorb
aaa
pop
lcall
or
popa
push
mov
decl
cltd
mov
or
lods
mov
rorl
sub
add
in
and
incl
cli
jge
int3
gs
lret
outsl
das
jge
push
or
xor
or
jmp
adc
mov
cli
cmpsl
fnstenv
pop
pop
dec
jno
sbb
mov
mov
mov
lcall
std
iret
sti
mov
pop
je
loop
cmc
stos
add
mov
into
fs
push
inc
adc
fdivs
push
inc
idivl
mov
mov
sub
dec
sbb
inc
push
dec
pop
sub
mov
adc
jmp
popa
imul
rolb
out
fs
cmp
xor
ret
inc
inc
add
push
or
and
clc
jmp
mov
decl
rol
aam
inc
or
jg
mov
pusha
loopne
mov
sarl
fwait
dec
sbb
decl
inc
imul
mov
mov
decb
dec
test
in
dec
decl
lock
mov
imul
dec
imul
cld
das
outsl
ja
inc
les
notb
rcll
and
call
mov
je
outsb
cmp
rcll
decb
push
sbb
add
and
ja
cmp
mov
mov
xor
clc
leave
and
cltd
int
mov
fimull
jge
ljmp
jmp
cmpl
ds
mov
dec
inc
test
int
enter
scas
clc
imul
lret
push
add
rcrb
xchg
movsl
decl
pop
aam
jg
sbb
stc
add
pop
loopne
leave
jo
inc
dec
ljmp
cld
or
cli
loopne
push
adc
add
push
mov
lcall
js
sar
dec
decl
add
mov
sub
roll
mov
es
ja
cmc
cltd
mov
or
cmp
jg
or
rol
movsb
xor
xchg
xchg
and
jo
jg
add
incl
lcall
adc
sbb
fstps
push
jecxz
ret
call
insb
cmp
inc
xchg
icebp
push
lahf
lahf
add
outsl
jns
jl
mov
in
call
jmp
jne
sub
out
cli
adc
inc
sub
jb
jne
mov
mov
fistpl
in
xchg
aaa
push
fdivr
lcall
imul
es
and
popf
sub
and
sbb
pushl
es
push
push
pop
out
mov
incl
inc
fistl
mov
icebp
and
notb
or
adc
pop
cwtl
mov
push
insl
mov
mov
mov
jg
fists
dec
sub
ljmp
cwtl
xchg
push
cmp
std
mov
ja
into
pop
mov
loope
mov
and
and
std
add
pop
xchg
mov
xchg
sbb
enter
and
les
and
mov
scas
cmc
pop
mov
mov
aaa
inc
sbb
dec
into
sub
lret
repnz
pushl
icebp
je
arpl
lods
or
fcmove
dec
xchg
lods
jecxz
in
mov
jecxz
aas
lret
cwtl
leave
xchg
adc
pushl
dec
iret
xor
mov
mov
ret
push
es
out
scas
das
test
mov
pop
repz
lcall
popa
dec
aam
es
cmpsl
das
cmp
in
rorl
jo
cmp
mov
cmpb
call
adcl
add
push
jmp
adc
cmpsl
fadds
mov
adc
mov
aas
sbb
jmp
imul
in
in
jo
std
or
lods
mov
sahf
mov
xchg
xor
pop
sub
in
loop
jns
mov
scas
cmp
test
call
incl
mov
mov
pop
cmp
ljmp
call
incl
dec
outsl
loopne
inc
xor
es
ss
push
sahf
rcll
mov
and
xor
ljmp
xchg
or
loopne
jmp
pop
rcrb
outsl
cmp
dec
fdivs
clc
int
cmp
xlat
fbstp
cmp
test
stos
js
test
dec
pop
jle
pushl
sub
aaa
and
push
ljmp
shll
and
pop
and
call
adc
in
test
dec
add
jmp
in
int3
das
cmpsb
enter
pushl
xchg
testl
loope
stos
mov
mov
jo
decl
lahf
dec
lock
xor
jo
ret
ss
pusha
stos
inc
mov
xorb
push
cld
sub
ljmp
sarl
push
cld
sbb
popf
test
jmp
mov
cmp
loopne
movsl
call
movsb
mov
inc
xchg
daa
daa
dec
jge
cwtl
push
push
decl
stc
div
sahf
fucomip
int
cld
mov
out
and
call
and
lods
cmc
ljmp
xor
jp
negb
sbb
cmp
cs
dec
cmp
mov
fwait
xchg
pop
sub
out
insb
push
jno
test
ss
jle
sahf
lret
sarl
out
cli
leave
addr16
push
cwtl
adc
mov
mov
lods
mov
lret
mov
or
lcall
imul
push
cs
cmp
cmp
movsb
xor
xchg
dec
mov
push
call
pop
inc
lret
sbb
leave
cmpsl
pop
clc
bound
out
xchg
adc
inc
push
call
mov
sti
inc
cltd
imul
xor
ljmp
jge
add
jle
mov
jmp
pop
push
mov
xchg
mov
and
mov
jmp
jns
sbb
and
adc
jg
xor
aam
push
incl
lret
jae
xor
xor
or
push
push
jg
inc
std
movb
aad
adc
je
int
adc
dec
mov
loop
decl
into
xchg
xchg
dec
pop
scas
add
jge
int3
ret
imul
inc
sahf
cmp
std
cmovp
or
jmp
or
stc
sbb
cmpl
lods
leave
ljmp
lock
xlat
jnp
stos
mov
popf
in
or
std
pop
call
incl
rcll
stos
and
cmp
subb
cwtl
call
fs
pop
mov
xchg
lahf
bound
push
push
ss
jmp
repz
lea
pop
cmp
test
inc
mov
xor
sbb
cld
ljmp
mov
call
roll
in
and
xchg
dec
dec
mov
call
cmpsb
sub
in
push
xor
push
mov
out
jg
incl
jbe
push
in
xlat
xchg
dec
rorl
sub
pop
insb
add
in
push
mov
cli
adc
xor
jb
cli
mov
push
mov
pop
mov
leave
in
sub
fcomps
bound
inc
pusha
lock
jg
push
mov
mov
adc
addl
add
and
jle
adc
insb
loope
lock
ljmp
add
pop
push
or
ret
out
add
lods
cmp
mov
pop
aaa
cld
js
mov
push
sahf
lods
sub
push
cmp
pop
jmp
cmp
ficoms
ljmp
clc
scas
scas
push
in
sub
jecxz
pushf
add
sub
push
mov
incb
sti
push
mov
mov
xchg
movsb
es
push
fs
imul
out
sub
adc
lcall
dec
mov
xchg
cmc
add
outsb
fisubrs
pop
imul
and
adc
cld
fcomip
jp
inc
mov
jg
lcall
xchg
sub
loopne
dec
push
mov
pushl
xchg
rcrl
data16
sub
cmp
pop
mov
pop
iret
cli
pusha
cld
sub
fstl
mov
scas
xchg
and
add
orb
nop
add
add
xor
xor
and
dec
arpl
test
and
push
pop
insb
push
inc
or
out
adc
xor
jno
lret
add
stos
addb
inc
inc
jae
mov
ja
imul
out
repnz
jo
imul
or
mov
or
ds
add
adc
push
inc
push
sub
inc
dec
nop
shrb
xor
sbb
inc
jb
addr16
adcl
inc
mov
pusha
sub
xorb
daa
sbb
adc
push
push
dec
jo
daa
sbb
xchg
and
xor
gs
movaps
push
xchg
push
outsl
outsl
insb
push
push
jo
push
outsb
popa
jo
push
fstpt
push
mov
sub
push
or
dec
dec
jne
js
or
pop
inc
scas
ret
sarb
aaa
push
popa
loop
shll
cmp
sbb
inc
jns
push
and
out
adc
jb
or
jecxz
push
es
ljmp
dec
dec
cmp
mov
mov
insl
insl
ret
sbb
sub
xchg
cmpsl
and
adc
jo
or
add
inc
in
int3
int3
jl
loopne
sub
cld
inc
or
imul
data16
stos
sub
sub
inc
or
mov
push
testb
push
outsb
flds
sub
ss
push
dec
inc
or
jae
cli
arpl
mov
xchg
push
test
push
ds
pop
pop
add
jo
mov
xchg
adc
mov
jne
addl
xchg
sub
push
xor
icebp
insl
clc
imul
dec
xorb
xor
fiadds
fildl
subl
jbe
ret
jnp
mov
jne
subl
mov
or
jb
or
push
add
rcrb
jae
adc
or
pop
dec
ret
push
push
push
hlt
adcb
inc
jecxz
pop
xor
std
dec
cmp
push
or
sub
pop
mov
mov
flds
push
jo
pop
subl
push
fidivl
dec
pop
lods
ret
sbb
adc
and
les
stos
push
aas
sbb
adc
jns
imul
imul
or
jl
pop
mov
xor
inc
xor
imul
jnp
sub
pop
cmp
popw
push
gs
push
mov
pop
divl
push
inc
xchg
popa
and
pusha
rol
xlat
das
ljmp
jae
pushf
inc
or
mov
mov
dec
or
inc
test
mov
dec
jb
xlat
subl
lahf
or
fs
sub
icebp
sbb
rcl
je
ja
mov
mov
push
mov
ja
fisubrl
mov
cmp
and
test
cmp
es
jp
adc
push
in
mov
sbb
adcb
or
inc
cmpl
aam
sub
outsb
adc
jbe
ret
pop
test
mov
dec
pop
pop
cmpb
outsl
test
flds
xchg
and
lods
in
cmpsb
adcb
mov
pop
stos
aad
jns
add
aaa
xchg
inc
je
push
inc
inc
and
xlat
out
sti
xlat
add
inc
sbb
mov
and
jno
push
xchg
pop
insl
adc
or
push
es
mov
fs
xlat
add
sub
shr
outsl
sbb
jb
and
sbb
imul
or
add
out
ret
pop
aaa
cmp
adc
inc
pusha
mov
lock
push
stc
pushf
push
jne
inc
pusha
adc
adc
sub
fbld
or
jae
xor
popa
xlat
xchg
scas
mov
or
xchg
cmp
cwtl
adc
xor
fsubs
outsl
jg
push
dec
add
adc
mov
cmp
repnz
outsb
push
outsl
add
add
fadds
js
add
pop
jbe
fildl
movsl
sub
test
and
jns
cmpsb
mov
stos
data16
inc
nop
or
arpl
fdivl
sti
mov
add
fs
pop
adc
or
andl
sbb
add
out
jmp
rcl
mov
jo
testb
pop
jge
shl
xchg
push
popa
sbb
cmpsl
push
outsb
adc
enter
jno
cmp
mov
jns
push
sub
add
movl
cmp
negl
xor
scas
mov
inc
jb
and
jl
test
lods
jo
mov
and
arpl
sbb
pop
inc
imul
add
push
sahf
mov
inc
pop
mov
insl
notl
jle
unpcklps
inc
call
push
movsb
jae
into
cmpsl
cmp
xor
aad
ja
test
mov
or
clc
push
push
lds
inc
mov
push
and
sbb
cwtl
add
push
mov
xchg
mov
ret
and
sbb
push
int3
fincstp
and
inc
dec
push
push
pop
xor
shlb
mov
or
imulb
push
push
adc
and
xor
pop
cmp
fists
or
dec
outsb
dec
adc
cmp
scas
jnp
fwait
dec
ret
cli
ss
sar
pop
add
add
mov
add
mov
xchg
movsb
imul
dec
rcrl
push
xchg
mov
inc
push
addb
pop
adc
js
jl
in
inc
rcrl
inc
jb
and
xor
out
dec
and
jl
outsl
bound
dec
movsb
bound
orl
inc
jb
stos
jg
inc
push
jb
inc
jae
fcmovu
fcmovu
inc
leave
inc
shll
xchg
cs
imul
ljmp
sbb
jo
insb
and
rclb
push
add
push
clc
adc
mov
inc
orl
pop
push
mov
or
mov
popa
push
sbb
inc
cmpsl
push
push
dec
mov
push
adc
and
fcompl
push
inc
mov
aad
sbb
hlt
adc
movsl
outsl
or
and
xchg
or
xorl
mov
test
and
icebp
or
es
loopne
push
out
jb
inc
outsb
imul
xchg
rorl
cwtl
fidivs
jl
shlb
mov
js
push
xlat
push
mov
pusha
dec
mov
jnp
dec
mov
popa
add
rcll
notb
fs
ret
pusha
mov
inc
cwtl
dec
push
cmp
push
push
adc
xor
int3
outsb
push
push
xor
gs
cltd
lret
inc
pop
sbb
cwtl
mov
in
and
inc
push
cltd
dec
shrb
cwtl
loopne
mov
test
arpl
jo
popa
push
lret
inc
lds
ret
inc
and
and
xchg
mov
roll
rolb
inc
fcomi
xor
call
jno
inc
mov
outsb
pusha
adc
out
mov
jno
or
pusha
push
mov
icebp
add
das
sbb
or
jo
cmp
mov
andb
ja
int3
add
pop
push
sbb
inc
iret
xlat
push
pusha
mov
cmpsl
cmp
int
nop
inc
insl
inc
outsb
push
fs
cmp
outsl
rol
outsl
and
push
pop
lds
fisttpll
pop
scas
inc
ljmp
add
push
adc
xchg
and
test
add
vmwrite
sbb
enter
push
addr16
or
flds
js
push
push
inc
out
adc
add
sub
lret
imul
sbb
push
imul
mov
dec
jae
int3
lock
inc
ror
jne
subl
xchg
outsb
lods
movsl
xchg
add
jmp
jg
mov
sbb
adc
jp
out
push
fs
std
inc
or
add
dec
adc
jo
test
or
or
add
jecxz
ror
dec
add
loopne
inc
pop
lret
mov
add
add
out
push
outsb
dec
testl
push
lcall
fsubl
and
add
mov
mov
pop
dec
pop
add
jle
cs
push
lret
add
xlat
add
cmc
pusha
bound
sub
jb
popa
adc
sbb
negl
push
rclb
out
icebp
fiadds
dec
adc
sub
mov
rcrb
mov
jnp
pusha
dec
jo
push
lahf
push
xchg
and
pop
out
rcl
add
test
dec
incl
add
pusha
mov
lea
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
xor
inc
add
insb
inc
add
add
