divl
in
mov
mov
lock
add
add
cmpsl
std
in
pushl
add
call
test
jne
pop
ret
push
push
sbb
mov
test
je
aas
mov
dec
adc
movb
lock
sti
in
decl
dec
movzwl
lea
jne
sbb
xor
jmp
and
neg
sbb
and
in
jbe
mov
mov
call
push
mov
mov
add
sbb
daa
or
add
les
mov
rclb
addr16
push
enter
and
jg
lock
push
push
push
mov
push
into
pushf
add
jge
jmp
jmp
stos
adc
push
push
sahf
jp
push
testb
clc
test
ds
jmp
pushl
sar
dec
sub
ret
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
ljmp
cmpsb
push
mov
andl
mov
or
push
add
add
punpckhwd
aaa
mov
imulb
mov
in
iret
negl
push
in
loopne
movb
inc
xchg
outsb
ds
inc
add
add
call
mov
cmpl
jne
mov
in
mov
jl
das
add
push
mov
sbb
out
std
jnp
add
jbe
sbb
pop
inc
push
push
test
xchg
in
in
lret
add
loop
inc
adcb
adc
or
imul
into
push
or
movsb
into
push
cwtl
in
and
fs
push
lock
sbb
out
inc
mov
push
push
out
mov
xor
sbb
push
push
lods
pop
inc
clc
addl
add
fdiv
fistpl
fisttpl
ret
add
iret
icebp
sub
test
je
pop
add
pop
mov
push
push
pushf
add
mov
xor
push
sarb
sbb
enter
clc
sbb
add
jne
mov
add
in
pusha
out
adc
mov
xchg
dec
add
sub
in
push
call
lock
pop
sub
sahf
or
lcall
in
xchg
rcll
out
xchg
and
push
push
mov
in
inc
mov
mov
pop
sbb
mov
lahf
leave
cmp
jge
mov
jmp
mov
xchg
mov
inc
dec
jb
mov
jno
and
and
insb
sarl
sbb
adc
shrb
insl
xor
push
pop
mov
aaa
jb
jnp
pop
mov
xchg
add
xor
cmp
jae
out
idivb
adc
push
mov
add
mov
scas
sbb
add
mov
push
mov
adc
xor
push
lock
icebp
sbb
enter
jle
push
push
mov
sub
pop
mov
test
or
stos
mov
pmaxsw
push
dec
lock
add
call
loop
ds
cld
jb
and
mov
sbb
pop
xchg
gs
jno
push
xor
mull
sub
lahf
lret
xor
pop
push
sub
sbbl
test
iret
sub
jo
push
rolb
imul
in
add
push
or
push
push
rcr
adc
and
or
and
ret
leave
sbb
subl
and
or
push
or
xor
outsb
and
int
and
repz
cmp
mov
fwait
je
bound
add
prefetch
adc
push
daa
mov
sub
int3
push
xchg
mov
or
inc
jmp
push
cmp
cmp
icebp
jnp
aad
cmp
xchg
add
stmxcsr
and
mov
loop
jb
shrl
pop
test
jne
data16
cmp
repnz
es
adc
push
shrb
mov
push
test
sub
push
andl
scas
inc
pmulhw
movsb
fistl
adc
sub
or
push
push
and
pop
push
or
and
adc
in
pop
movsb
jbe
xchg
sbb
nop
popa
in
or
push
push
sahf
or
subb
xchg
fucompp
xlat
inc
int
sbb
rorl
test
mov
xchg
push
iret
outsb
jg
jmp
pusha
sbb
mov
and
inc
clc
pop
xor
mov
inc
mov
pushf
xchg
lret
lods
test
sbb
xchg
push
dec
out
inc
call
mov
push
push
push
mov
test
mov
mov
pusha
mov
test
push
push
in
pop
clc
push
push
push
adc
flds
fiaddl
jl
or
pandn
pusha
push
mov
insb
pop
push
add
xor
cmp
jae
mov
sub
sti
loopne
lahf
mov
shrb
or
mov
movsl
imul
test
jl
adc
sbb
lret
inc
ret
pop
xor
mov
ss
xorl
mov
mov
inc
inc
or
dec
mov
or
mov
pop
hlt
je
xor
lea
mov
jae
mov
nop
sub
cmp
push
faddl
sbb
jno
insl
lea
jno
add
les
insb
mov
insb
adc
ficomps
mov
inc
or
mov
rorl
or
add
insl
sbb
lahf
or
mov
test
xchg
xchg
cmp
int3
mov
push
xor
aad
cmp
pop
cmc
push
inc
bound
stc
or
mov
or
mov
xchg
iret
mov
sbb
sti
push
cwtl
bound
xor
or
leave
ret
push
mov
jmp
dec
cmp
push
jmp
insl
icebp
std
lcall
and
movsb
sub
sub
cmp
inc
out
sbb
hlt
jne
pop
mov
sub
insb
jo
sub
push
or
cmp
je
sub
stos
dec
pushl
pop
in
push
push
mov
or
jp
sti
xlat
clc
and
pop
mov
mov
mov
pop
mov
push
push
push
mov
mov
sbbb
push
push
mov
push
sti
mov
xlat
mov
test
jne
fs
inc
cmp
jl
jmp
pop
push
pop
repnz
pop
push
push
in
sahf
mov
push
pop
push
pop
jmp
sub
sub
cmp
adc
pop
ret
add
rolb
sarb
aad
push
jne
lea
sbb
or
loopne
and
mov
mov
insl
fmul
add
gs
add
add
push
ss
adcl
ret
and
lcall
xor
adc
or
lret
and
decb
push
push
push
and
jbe
ret
pop
pop
ret
push
push
js
loopne
fcomps
sarl
or
repnz
dec
mov
mov
push
push
jp
and
xchg
pop
arpl
sbb
push
cs
rcrl
fistpl
cmpsb
xor
add
pop
or
jne
js
sub
pop
cmp
jl
lahf
clc
mov
jge
iret
xchg
out
test
inc
or
lock
jle
mov
mov
outsl
xchg
pop
lea
push
mov
sbb
in
cmp
ja
add
jmp
mov
push
adc
hlt
dec
clc
adc
insl
cmp
dec
icebp
cmp
cmp
ret
jle
cmp
je
or
std
adc
fistpll
mov
jmp
xor
adcb
int
push
mov
cwtl
add
pop
mov
jmp
xchg
in
push
pop
xor
shr
push
repnz
mov
repz
push
ja
lea
decb
pushl
or
mov
mov
data16
rclb
fsubl
pop
pop
arpl
pushf
adc
adc
pop
xor
loopne
shlb
rclb
test
je
add
lods
pop
loopne
rcl
mov
adc
jo
pop
push
push
movsb
mov
cmc
lds
cmp
push
push
cmp
push
cmpsl
mov
pusha
lret
sbb
push
push
push
popl
adc
push
and
pop
xchg
mov
cli
shlb
shlb
ret
or
loope
mov
mov
sbb
xor
mov
imul
mov
outsl
xor
addl
fistpll
call
cmp
or
lds
jmp
aaa
js
incl
cmp
je
cmpl
pop
mov
cmp
jne
push
push
jge
pop
dec
shlb
test
jmp
or
pushf
dec
dec
mov
dec
dec
dec
dec
mov
clc
loopne
leave
xor
dec
and
sub
add
and
or
mov
out
jl
push
inc
clc
jg
inc
out
addr16
inc
xor
shr
mov
or
out
mov
or
inc
sub
jmp
mov
ret
outsl
mull
pop
push
ja
scas
add
pop
push
movsb
sub
pop
and
sub
and
xchg
cmpl
js
mov
test
or
popa
push
push
push
adc
into
mov
push
lds
ss
cmc
ljmp
mov
mov
push
repnz
mov
mov
xchg
cmp
adc
aad
adc
insl
stos
jge
inc
push
dec
adc
pop
test
xchg
inc
add
scas
push
int3
dec
clc
cmp
sbb
test
xchg
lahf
cmp
inc
repnz
pop
cld
js
add
push
cmp
jmp
mov
mov
mov
jle
ret
shlb
rol
mov
inc
cmp
mov
cmp
test
cmp
sahf
stc
loopne
fstl
add
xor
add
mov
or
adc
test
inc
adc
in
push
ljmp
pusha
fcomp
or
jbe
bndldx
push
pop
push
or
cmpsb
shlb
xchg
orl
ret
je
cmpsl
ficoml
and
jge
iret
orl
rcl
cmp
dec
orb
sahf
and
inc
adc
and
jb
int
or
lea
push
shll
daa
or
and
sub
add
xchg
call
or
jmp
rolb
dec
push
and
xor
outsb
fcoms
lea
push
mov
fisttps
jmp
mov
rolb
mov
mull
push
fstpl
push
dec
adc
fwait
xor
pop
sbb
pop
stc
test
or
xlat
add
xor
jno
subl
andb
sti
aad
movsl
push
xor
inc
mov
enter
add
mov
or
push
pop
mov
sbb
sahf
add
cmp
add
mov
mov
inc
and
mov
test
stos
or
xor
add
or
cmp
or
shll
adc
mov
sub
movsb
les
lret
ds
fcmovne
insb
stc
inc
adc
sbb
ret
fiaddl
frstpm(287
push
outsb
jecxz
cmp
sbb
mov
sbb
fildl
push
pop
cmp
pusha
pop
lret
push
inc
into
adc
xchg
popa
pop
pop
pop
push
lods
mov
ret
push
sbb
xor
or
mov
xchg
add
adc
pop
add
lods
dec
or
pushf
add
xor
cmp
movsl
std
jle
ja
or
stc
negb
je
or
je
cmp
popf
cmpl
repz
lds
pop
sbb
inc
hlt
jmp
shrl
pop
mull
add
inc
mov
pop
jo
mov
cmp
push
sbb
cmpsb
comiss
adcb
push
pop
mov
inc
sbb
imul
mov
adc
sub
add
push
push
jl
jo
jbe
call
push
sti
sti
mov
je
and
jmp
sub
mov
je
sbb
je
sub
test
adc
xchg
mov
dec
xor
clc
mov
jmp
push
and
test
movsb
cmp
in
fldcw
mov
jmp
nop
jecxz
pop
icebp
fsubrp
jne
test
or
rolb
ret
push
test
push
stc
or
lock
and
in
sub
push
add
mov
scas
adc
mov
lea
ret
cmp
out
adc
push
mov
or
sub
sbb
mov
mov
clc
iret
xchg
and
push
or
push
mov
jg
sub
jo
js
inc
aaa
imul
daa
adc
movl
xlat
loopne
mov
cmp
je
cmp
cmpsb
push
lcall
sbb
leave
adc
mov
std
xchg
adc
xor
dec
fstpl
imul
ja
mov
je
scas
push
and
xchg
mov
and
sbb
je
sub
data16
xchg
sub
sbb
imull
fs
out
mov
xor
bound
sahf
out
stos
mov
out
pop
inc
lahf
out
cltd
push
push
fs
inc
lret
cli
push
js
ljmp
adc
push
cs
push
pusha
aaa
outsl
dec
adc
aaa
sbb
sub
in
or
int3
rcrb
add
lret
in
push
or
adc
xchg
scas
mov
dec
pop
outsl
cli
push
dec
push
dec
mov
xchg
or
push
pop
push
lea
push
andl
push
lea
add
push
cmp
mov
or
inc
les
scas
sub
xorb
arpl
jge
mov
pop
and
sti
imull
mov
sbb
ja
push
sbb
popf
mov
idivb
testb
in
push
cmc
pushf
adc
jo
call
add
add
add
jg
ljmp
cwtl
cmpsb
rcll
movl
lret
stos
popf
mov
test
mov
roll
sbb
and
push
roll
jmp
adc
cmpl
int3
inc
test
pop
add
gs
mov
adc
iret
arpl
sbb
mov
in
adc
imul
xchg
adc
pop
ljmp
lock
dec
dec
rclb
not
and
push
mov
xor
push
mov
or
inc
xor
jecxz
ss
jno
shl
pop
pop
push
push
cmp
and
gs
jnp
push
push
push
lea
lahf
or
pushf
test
fsubrp
sbb
add
push
xchg
push
ja
js
mov
imul
jp
sahf
rcrb
addb
push
scas
jb
insb
je
pop
daa
lea
je
xchg
insl
and
jo
mov
repz
sub
push
faddl
pop
mov
add
mov
sbb
loopne
sub
push
push
cli
hlt
dec
sub
or
pusha
adc
outsb
xor
sub
ljmp
adc
clc
push
lcall
inc
xor
mov
pushl
mov
outsl
cmpsl
mov
adc
dec
adc
mov
dec
lea
std
dec
daa
push
negl
pop
cld
je
in
mov
dec
call
cltd
sub
sar
add
bound
mov
dec
in
cmp
push
mov
xor
mov
add
mov
inc
adc
dec
cmp
mov
pop
leave
jge
mov
scas
sbb
xor
jnp
insl
and
pushf
adc
sub
mov
push
repz
mov
mov
sbb
outsl
icebp
pop
or
and
sub
and
sbb
and
mov
pop
loop
inc
cmp
adc
push
cld
cmpsl
dec
test
sbb
and
and
popf
rolb
icebp
ja
andl
fldenv
inc
mov
jbe
add
push
shll
mov
push
lahf
push
insb
mov
adc
jg
or
push
push
lea
sbb
pusha
icebp
leave
and
test
aas
mov
or
adc
les
xor
mov
dec
ja
inc
pusha
ljmp
nop
push
loopne
inc
or
mov
dec
push
lods
lock
push
mov
inc
mov
jmp
pushl
and
repnz
loopne
mov
xor
pop
and
mov
daa
sbb
sub
in
lock
cmpl
je
cmpl
sbb
adc
xchg
sbb
cwtl
pop
push
add
hlt
inc
pmaxub
jg
jmp
mov
add
xchg
andl
aas
aad
leave
fmull
mov
bound
add
rcll
or
aas
js
push
push
sbb
imulb
dec
aad
in
or
ds
hlt
movb
pop
loopne
lock
adc
enter
imul
subb
mov
ret
dec
cmp
dec
stc
aas
mov
dec
test
enter
add
jbe
fs
pop
fs
add
push
jbe
cmpsb
push
test
inc
pop
loopne
mov
jne
fldl
mov
pop
addr16
jl
adc
xor
pusha
mov
test
repz
jle
or
jae
sub
push
fwait
push
hlt
cmp
pop
jbe
adc
loope
aas
sarb
je
mov
mov
shrb
aam
and
loopne
sbb
push
sub
or
nop
or
repz
jp
push
enter
adc
js
jb
jl
pop
insb
push
andl
daa
cmp
jo
dec
or
xor
mov
cmp
or
pop
loope
cmpsb
dec
lock
pop
sbb
add
and
sub
or
call
xor
addb
and
iret
sbb
cwtl
cmpl
aam
inc
mov
push
cmpb
lock
sbb
jb
test
icebp
mov
dec
xor
push
xor
loope
lcallw
inc
pusha
fmull
mov
ljmp
push
jae
rolb
xor
pop
push
out
and
ret
rcrl
cmpsl
rcll
loope
push
mov
inc
add
movsl
pusha
es
mov
or
pop
xchg
sbb
mov
rorb
xchg
cmp
push
andb
or
lods
jl
jne
pushf
and
push
popa
test
scas
push
push
into
loop
arpl
cmc
cltd
mov
add
push
addl
lret
dec
sub
mov
dec
adc
xlat
stos
fcoms
pop
dec
dec
or
sbb
mov
add
add
inc
loope
mov
and
add
push
mov
das
adc
adc
and
in
rorl
inc
mov
mov
sbb
mov
mov
push
adc
test
xchg
xchg
ficomps
jge
std
dec
cld
je
cmpb
mov
je
mov
pop
rorl
nop
inc
sub
xchg
push
stc
pusha
cs
pop
cs
sub
push
push
cmp
cmp
or
xor
push
insb
repz
dec
cmpsl
dec
jmp
nop
push
inc
xchg
mov
movsl
imul
pop
inc
shlb
mov
pop
mov
loopne
push
add
or
dec
push
in
adc
jl
xor
push
je
sbb
inc
ret
xchg
mov
xlat
rolb
pushf
popa
dec
xor
jo
rol
test
jecxz
inc
mov
sbb
cmp
sbb
dec
dec
adc
je
cwtl
adc
rclb
sbb
mov
sti
hlt
or
cltd
mov
incl
and
add
sar
push
int
xor
push
adc
jl
dec
inc
mov
cmpsb
lock
cmc
mov
fists
mov
mov
pop
mov
sti
push
pop
push
adc
ja
push
xor
idiv
jle
mov
fwait
sub
sti
iret
mov
add
jne
loopne
fmul
or
pop
jmp
fldl
insb
cmpsl
int
mov
and
mov
add
cmp
mov
mov
shrb
or
out
xor
jge
push
or
pop
pusha
push
ljmp
sti
sub
clc
je
test
out
out
mov
lcall
add
cli
xor
dec
scas
mov
scas
mull
pusha
paddb
mov
jg
out
mov
jl
movl
mov
cmp
lahf
xor
outsl
adc
sbb
and
lods
lea
clc
add
ds
inc
pop
xchg
imul
cmp
or
sub
jge
jmp
mov
pop
hlt
fstpt
hlt
pusha
or
add
cmp
roll
or
enter
or
stc
mov
dec
sub
mov
mov
add
pop
add
fidivs
pop
push
js
out
add
inc
mov
mov
cmpb
or
clc
fidivl
jmp
sub
xor
outsb
mov
mov
push
push
stos
sahf
lods
jmp
jne
add
or
jl
dec
jmp
dec
mov
aad
cmp
mov
lea
cmp
or
lock
push
aad
aam
push
adc
add
loope
and
dec
mov
jne
push
jbe
mov
je
je
xchg
popa
push
push
push
inc
pop
and
jne
pop
jmp
sbb
mov
lods
add
rcll
sti
adc
sbb
xchg
pop
addr16
sbb
sbb
repnz
xor
push
and
into
arpl
and
push
std
pushf
jae
popf
roll
pop
lods
and
mov
adc
push
into
adc
mov
xchg
dec
sbb
sbb
pushf
loopne
outsl
sub
scas
jmp
leave
push
leave
add
test
push
mov
xor
or
lea
push
mov
push
mov
hlt
xorl
popa
rclb
sbb
decb
dec
add
push
xor
xchg
or
inc
or
aas
imul
flds
pop
or
nop
dec
and
adc
push
ja
shll
ja
pop
push
push
push
fsubrp
dec
mov
inc
dec
xchg
pop
dec
add
mov
outsb
adc
js
lahf
push
fs
pushf
jbe
push
push
pop
add
mov
pop
push
sbb
lock
js
movnti
imul
push
repz
xchg
add
push
xor
cs
ret
and
mov
testb
and
and
dec
pusha
inc
scas
or
jae
push
or
push
sub
xor
xor
ds
movsl
ret
adc
push
pop
or
shl
cmp
push
roll
mov
cmp
setb
test
jne
mov
enter
cld
cmp
sbb
mov
xor
adc
jl
lea
push
pop
adc
dec
fidivl
mov
sub
pop
mov
aas
mov
lcall
inc
dec
lods
adc
lods
nop
lock
hlt
mov
fsubrs
add
call
and
xor
lods
aaa
sti
xor
ds
shrl
inc
or
mov
cmp
push
adc
xchg
hlt
popf
shll
loope
lea
or
push
sbb
and
jl
add
inc
pop
mov
es
cmp
in
fs
adc
cs
add
inc
adc
xor
push
aad
test
pop
out
sub
sub
clc
or
and
push
je
and
je
sbb
jnp
mov
hlt
pop
inc
pusha
inc
in
or
pop
rorl
pop
cmc
add
mov
shlb
and
sbb
inc
push
or
jl
jnp
movl
mov
loop
test
adc
loopne
movsl
loopne
or
gs
inc
sub
les
and
mov
ffree
add
int3
ret
sub
rcll
adc
pop
push
in
push
loopne
test
ret
decb
test
mov
mov
call
inc
jne
push
push
cmc
or
xchg
or
xchg
dec
mov
jmp
fadd
fidivrs
fsubs
add
xchg
jno
push
mov
and
xor
dec
or
mov
lret
js
inc
mov
jo
push
pusha
jl
arpl
inc
xchg
test
sbb
sbb
or
sbb
fs
mov
es
or
into
push
add
sub
mov
loopne
in
inc
or
repz
add
add
repz
inc
jnp
shrl
add
dec
sub
and
test
call
fs
int
sub
mov
lcall
dec
pop
pop
jmp
push
mov
decl
repz
mov
mov
call
arpl
enter
rcll
shrl
inc
lea
shl
push
push
test
or
mov
pop
push
inc
fmuls
sbb
mov
add
es
or
push
stos
inc
repz
cwtl
or
ss
xchg
add
or
mov
outsb
repz
adc
mov
xchg
out
test
mov
es
add
adc
push
arpl
cltd
pop
or
stos
or
in
inc
and
imul
mov
stos
and
pop
push
and
jbe
pop
cli
inc
add
out
outsl
stc
jl
or
orl
xchg
push
icebp
out
push
xchg
popf
cmpb
inc
jle
fnstsw
cmpsb
cs
popf
inc
pusha
mov
aad
sbb
call
loopne
mov
cmc
decb
loopne
sbb
cli
sub
push
nop
push
pop
add
adc
lea
sbb
ret
int3
pop
call
adc
pop
inc
pop
and
add
or
jl
mov
mov
mov
fwait
pusha
push
mov
js
push
add
or
push
and
shl
daa
add
sbb
inc
aaa
mov
sub
mov
fdivl
loop
add
adc
inc
adc
adc
jge
jl
bound
sbb
in
adc
adcb
sbb
push
in
jl
xchg
mov
push
int3
mov
cmp
std
pop
test
sbb
arpl
sub
roll
scas
adc
push
mov
fdivl
adc
xchg
rcrb
bound
or
adc
sti
je
or
cmp
leave
xor
fadds
adc
cmp
jb
imul
push
push
or
sbb
movw
adc
sub
aam
add
add
roll
pop
rcl
inc
nop
xchg
adc
push
in
push
neg
call
pop
bnd
xor
inc
and
mov
clc
aam
fidivs
push
lds
jo
add
pop
leave
lds
push
int3
jo
shl
cmpsl
push
lods
lahf
sar
or
jns
add
pop
mov
inc
fimuls
fwait
and
jb
in
push
mov
jns
or
add
cmpsl
dec
mov
jl
sbb
mov
sbb
dec
leave
pop
adc
pushf
add
sahf
in
pop
fnsave
jne
pop
push
pop
sbb
mov
xor
adc
fsubr
xchg
orb
sbb
jbe
mov
js
inc
cld
inc
cmp
add
push
mov
enter
adc
mov
mov
sbb
jo
ror
push
lcall
loope
pushl
inc
adc
cmp
repnz
test
cmp
jne
pushf
xchg
testb
repnz
xor
movl
into
push
lcall
push
loope
mov
mov
adc
lock
mov
inc
int3
dec
push
scas
shrb
stos
dec
aad
mov
aam
stos
je
les
sbbb
jge
cwtl
sub
xor
mov
inc
xchg
adc
xchg
xorb
and
or
adc
sbb
cwtl
iret
scas
cmp
orl
mov
jl
cmp
popa
shrb
and
rorl
std
adc
lret
mov
push
cmp
loopne
cmp
and
or
mov
xor
and
das
leave
dec
pop
xchg
pop
sub
ja
jbe
sbb
pop
sub
lods
or
xor
adc
and
mov
add
sti
pop
movsl
cmp
mov
ret
xchg
pop
inc
cmp
outsl
and
inc
jle
inc
or
xchg
add
in
push
and
push
loope
pop
add
ja
mov
movaps
sub
mov
nop
adcb
scas
in
dec
xor
xchg
adc
and
cld
pop
dec
pop
popf
xchg
scas
or
adc
nop
or
outsl
sub
mov
push
push
add
xchg
jl
inc
mov
xor
in
aas
mov
ds
pop
push
sbb
es
add
ss
add
inc
adc
jp
add
and
mov
ds
repz
or
mov
jecxz
push
addl
mov
jmp
xor
mov
popf
icebp
mov
popf
jns
adc
pop
mov
insl
xchg
xchg
sbb
push
enter
xlat
lret
adc
in
insb
push
mov
sub
inc
xor
icebp
movsb
subb
dec
dec
mov
push
outsl
adc
push
ret
pop
pop
inc
js
jo
movb
dec
out
mov
adc
pop
lahf
xor
lcall
imul
mov
or
sbb
mov
push
fucomp
jl,pn
jl
mov
ret
push
dec
mov
loopne
fdivr
inc
and
idivb
jo
jle
movsb
jg
sub
pop
mov
sahf
cmp
je
ja
xchg
mov
pop
test
dec
rorb
add
mov
popl
inc
mov
rolb
dec
inc
sbb
loop
in
addb
dec
or
lds
jne
cmp
hlt
js
dec
push
daa
xchg
and
outsl
outsl
imulb
sub
inc
push
je
and
gs
and
in
xor
nop
pop
outsl
lea
mov
stos
jae
test
and
inc
es
dec
or
mov
mov
dec
dec
dec
or
ror
mov
xor
testb
add
add
out
add
std
jecxz
adc
and
push
pop
and
lock
push
jns
outsl
enter
dec
enter
popa
and
jl
pop
pop
jl
sub
jl
or
int3
push
repnz
divb
pop
je
test
add
xor
call
dec
xor
sbb
call
out
dec
xchg
adc
mov
inc
inc
or
shlb
inc
fistps
push
add
insb
shrb
pop
inc
adc
mov
add
dec
fwait
bound
add
xor
imul
pop
sbb
int
rcll
subb
repz
adc
adc
add
xorb
sti
adc
cmc
pop
fdivrs
dec
enter
adc
push
ret
push
mov
jne
fistl
inc
fsts
and
repnz
push
push
test
add
std
adc
test
lock
adc
push
or
mov
dec
in
vminpd
test
jnp
outsl
push
mov
pop
adc
cmp
cmp
and
cmp
sbb
shlb
push
fsubl
lock
nop
push
adc
int
pop
popa
call
mov
mov
in
int3
pop
adc
out
fcoml
push
in
add
or
mov
sbb
mov
xor
jecxz
test
out
jmp
cmp
sub
insl
jnp
notl
inc
dec
negb
lea
rorl
add
push
mov
xor
sbb
int
filds
pop
xchg
icebp
dec
sub
pop
adc
out
or
ljmp
repnz
je
mov
jge
pop
add
push
jnp
pusha
dec
out
daa
or
or
mov
sub
int
push
sbb
sub
adc
cld
xchg
bound
insl
inc
idivl
jbe
jne
and
aaa
int3
sub
pop
push
in
sbb
sbb
mov
and
movsl
js
xchg
sbb
pop
push
andb
xchg
mov
sbb
pusha
cmpl
repnz
jne
int3
dec
sbb
inc
xor
push
xchg
int3
cmp
test
jge
mov
push
push
inc
push
aas
jl
movl
push
dec
lods
sub
sbb
pop
and
dec
push
inc
xor
inc
push
pusha
mov
xchg
pusha
mov
je
mov
adc
add
notl
js
std
in
repz
mov
stos
lcall
testb
push
sub
inc
sahf
inc
and
xchg
dec
fwait
cmpsb
js
pop
adc
ret
and
gs
xor
cs
roll
test
mov
lcall
push
ds
xor
rcll
cmp
add
cmpb
mov
xchg
push
ret
xor
sbb
push
lock
mov
sbb
jmp
cmp
mov
sbb
out
add
cmp
into
mov
test
inc
cs
pop
out
add
sbb
pop
mov
mov
push
cmp
out
xchg
push
adc
nop
add
push
and
dec
leave
js
lods
xchg
aad
in
xorb
add
fs
xchg
fsts
data16
mov
pop
in
sbb
push
and
jne
mov
icebp
xor
nop
loop
nop
and
add
push
inc
add
ds
lods
mov
pop
cltd
mov
fisubs
cmpsl
mov
lock
and
enter
bound
mov
mov
push
pop
dec
sub
pop
cs
orb
sub
sub
pop
push
xchg
xchg
cmp
ret
pushf
jge
xchg
nop
or
or
mov
add
cmp
xchg
xchg
lret
and
sub
popf
aam
xor
and
pusha
mov
imul
insl
loope
call
pop
lods
lcall
in
and
mov
outsb
rorb
movsl
test
mov
pop
pop
push
jbe
rorl
sub
dec
sub
push
in
inc
push
repz
jl
psrad
pop
hlt
setne
loopne
movsb
sahf
std
cmp
jne
sti
aas
push
push
or
cld
lcall
adc
hlt
jne
push
push
push
push
cmpb
push
imul
sub
xor
pop
cmp
dec
push
sbb
or
sarb
test
out
scas
in
push
dec
push
or
xchg
mov
daa
lods
scas
xor
inc
es
nop
push
and
pusha
mov
lds
pop
movsl
mov
dec
inc
sbb
mov
inc
add
and
xchg
enter
jb
jne
push
push
maskmovq
pop
dec
add
push
sbb
add
mov
push
sbbb
hlt
adc
mov
jmp
mov
push
or
rcrb
shlb
mov
ss
jno
add
ficompl
imul
rorl
mov
scas
push
xchg
daa
push
je
xor
or
clc
add
push
aam
or
xchg
add
pop
jp
fwait
enter
cmp
push
bound
mov
adc
sbb
and
add
insl
fwait
lret
push
gs
inc
dec
push
dec
mov
and
mov
xchg
adc
add
jne
and
mov
and
loope
fwait
mov
push
mov
xchg
jbe
mov
xor
push
mov
mov
repnz
icebp
into
lret
xor
in
in
add
mov
jbe
ljmp
xor
mov
sub
or
into
mov
push
notb
gs
call
cmp
sahf
mov
in
loope
inc
inc
jle
xor
add
je
bound
or
rclb
movzwl
mov
or
ljmp
pop
cmp
pop
xchg
sbb
sbb
xor
sub
inc
adc
rorl
push
icebp
push
pop
aas
and
xor
jb
mov
ret
subl
cld
add
and
enter
pop
sbb
sbb
es
add
sbb
mov
fs
lods
ja
shlb
xchg
aam
jb
xrelease
push
call
aaa
dec
repz
rclb
or
shlb
vcvttsd2si
test
mov
add
push
incl
ljmp
adc
xchg
adc
mov
xacquire
mov
inc
add
mov
inc
add
in
rcrb
mov
test
pop
cmpsl
clc
dec
jp
in
add
lret
sahf
sub
cmp
jne
pop
out
sbb
sti
jecxz
shll
xchg
aam
and
lock
push
aam
jmp
mov
pop
add
jmp
add
dec
mov
jl
test
or
das
dec
push
mov
xchg
mov
mov
lret
into
lock
pop
shll
cmp
je
cmp
je
lcall
lea
add
cmp
jae
push
xor
pop
add
cwtl
push
mov
add
es
sub
or
mov
add
add
std
mov
jno
jmp
cmp
dec
hlt
jge
mov
shl
out
inc
mov
mov
outsb
test
push
mov
or
mov
jne
popf
jmp
imul
ljmp
pusha
pop
test
lcall
test
je
test
jl
mov
cmp
jg
aaa
movsb
ss
add
in
pop
dec
add
push
mov
add
bound
mov
movsl
mov
hlt
mov
cltd
mov
mov
adc
adc
lret
sub
mov
sub
mov
pop
aad
push
pop
movsl
addb
bound
mov
pop
or
lock
ret
sub
push
nop
mov
inc
xlat
mov
cmp
call
cmpb
push
sbb
cmp
scas
xchg
cmp
push
sbb
ret
mov
shrl
cmp
iret
mov
cmpsb
mov
mov
mov
int3
clc
dec
test
push
je
and
test
xlat
sbb
cmpsb
and
sub
lcall
cwtl
jge
or
cli
cmp
push
inc
push
mov
mov
dec
xor
inc
js
jle
shlb
cmp
dec
cmp
cmp
pcmpgtd
sahf
push
push
lret
ret
js
sbb
icebp
bswap
xchg
sbb
mov
pop
push
ds
sub
push
pop
and
push
pop
data16
push
ret
popw
hlt
insl
pop
sbb
and
aam
js
or
push
addr16
ja
cli
or
andl
sbb
or
add
into
ljmpw
lea
lock
test
jecxz
mov
rorl
sub
mov
call
bound
insb
jno
cmp
cld
sbbl
imul
test
xor
leave
cwtl
cli
sub
jne
ret
xor
mov
xchg
xor
xacquire
mov
add
aas
inc
lods
shrd
cmp
outsb
push
jbe
int3
or
pop
sbb
or
and
and
cmp
add
je
push
mov
sbb
or
push
test
xor
xchg
adc
cli
adc
or
ds
adc
scas
test
test
dec
inc
lahf
je
fadd
mov
cmp
mov
pop
jg
daa
lods
addb
mov
int3
mov
push
stos
mov
push
xor
in
inc
dec
ss
movsb
push
pop
rclb
cmpsb
jb
inc
jne
push
add
jmp
adc
addl
popf
scas
in
fnstcw
test
imul
sub
adc
cld
xchg
stc
inc
sbbl
test
insb
mov
mov
push
xchg
jbe
lahf
adcl
mov
cs
inc
inc
push
jp
and
nop
add
out
rorb
adc
adc
jne
mov
test
adc
loope
je
lret
push
sti
adc
or
inc
mov
jge
jmp
add
pop
adc
daa
rclb
xchg
or
dec
mov
pop
lock
dec
jmp
and
inc
ds
add
mov
loop
leave
cmp
repnz
sbb
cmp
or
cmp
lret
pop
mov
sub
ret
push
adc
mov
and
push
jne
jbe
inc
bt
psadbw
inc
cwtl
adc
mov
pop
mov
xor
sub
insl
push
int
call
mov
cmp
dec
add
mov
jno
out
cld
les
pop
inc
jno
aad
in
jne
sbb
pushf
adc
gs
mov
or
sbb
fs
fists
add
adc
rcll
mov
cmp
xor
sbb
aaa
and
and
hlt
sbb
pop
loopne
lds
mov
shrb
lods
or
in
and
adc
jno
lds
ret
loopne
out
pop
mov
ret
shl
mov
stc
popf
pusha
sbb
jne
clc
and
push
push
nop
or
dec
add
sbb
jne
lods
xor
xor
pop
and
pop
ficomps
nop
aas
mov
pop
jmp
push
push
fidivrl
dec
int3
pop
jns
mov
ja
sub
je
cltd
nop
push
push
add
bsf
int3
pop
adc
or
or
push
enter
test
or
jp
mov
push
test
je
movb
pop
int
dec
mov
scas
enter
jle
jo
fcomip
xlat
outsl
ds
call
fldl
shlb
mov
popa
lock
in
rcrb
and
jmp
iret
ja
mov
jne
xchg
pop
jmp
jae
jbe,pt
add
sahf
test
jno
fsubrp
nop
push
popa
pushf
cmp
adc
add
ret
or
ss
dec
sub
xchg
dec
movsb
outsl
andb
and
fchs
adc
popa
das
pop
adc
push
lock
pop
pop
push
xchg
aaa
inc
bnd
push
add
mov
adc
pushf
xchg
or
lods
dec
jmp
lock
std
aam
push
pop
leave
sbb
pop
adc
pushf
inc
insl
jae
mov
fsubrs
andl
push
in
and
in
shlb
das
in
lods
outsb
xorl
mov
or
mov
loopne
add
leave
fldl
dec
adcb
inc
or
push
add
lods
push
ror
xorb
and
int
mov
push
add
and
lock
stc
add
push
jle
in
je
dec
sbbb
push
loop
xchg
adc
lods
lcall
addb
nop
mov
leave
loopne
jno
pop
in
lea
decl
xorl
or
imul
push
push
cmpsl
add
fcoms
pop
and
xor
rolb
add
push
push
and
in
dec
push
or
repnz
nop
gs
cmp
lea
push
pop
ja
test
stc
int3
gs
or
mov
sub
push
xor
dec
jmp
mov
sub
jne
xor
push
push
xchg
inc
sub
cld
cld
fmull
data16
es
lock
dec
popa
pusha
sub
addl
cli
clc
mov
push
mov
push
mov
push
xchg
testb
decb
jb
cmpl
incl
or
cld
sub
mov
imul
mov
push
mov
loopne
jg
aaa
aam
movsb
adc
lock
call
aaa
xor
cmp
loop
pop
push
shr
adc
inc
clc
fistl
push
sub
sub
add
iret
push
push
add
push
xlat
sbb
test
cmp
or
jge
jp
mov
add
adc
dec
or
or
push
mov
stos
aad
lods
hlt
addl
cmpb
rol
dec
sbb
orb
ss
pop
pop
push
dec
add
movsb
lahf
mov
mov
push
add
mov
sub
movsb
pop
mov
sbb
pop
mov
add
mov
arpl
into
in
or
hlt
and
out
cwtl
mov
inc
sub
enter
add
sub
add
push
or
addr16
or
pop
push
mov
cmp
je
shlb
push
lret
inc
cmp
pusha
movzwl
clc
cmp
xchg
push
lods
dec
mov
into
pop
and
fnsave
dec
mov
roll
jl
loope
sub
outsl
mov
push
outsb
pop
sub
jnp
adc
inc
decl
nop
in
dec
in
jl
push
push
movsl
out
popa
sub
jecxz
imul
add
add
add
mov
test
push
inc
jmp
push
inc
inc
or
mov
mov
cmp
je
push
lea
push
sti
xchg
nop
adc
cmp
sbb
xchg
outsb
mov
sub
push
sbb
sbb
call
pop
or
icebp
xor
or
mov
sbb
data16
xlat
push
aas
push
or
xchg
imul
lods
repnz
push
mov
enter
ss
clc
add
hlt
push
in
inc
pop
sbb
in
mov
lea
neg
push
add
push
fsubrl
loope
add
hlt
pop
in
jl
push
push
cmp
test
dec
push
mov
fs
test
ja
jbe
pop
sub
xor
push
push
cmp
je
add
ds
xchg
inc
aad
lods
pop
or
rcr
inc
ss
inc
push
inc
push
mov
adc
cmp
je
push
push
je
inc
lods
aas
sub
int3
sub
push
xchg
test
add
and
cs
cs
push
lods
pop
push
inc
icebp
mov
and
or
inc
cmp
jp
int
dec
push
test
loopne
in
sbb
pop
repnz
cli
add
cmp
sahf
movsb
mov
call
je
aad
decb
jnp
push
ss
cltd
adc
imul
push
mov
cmpsl
mov
shlb
xor
dec
cmpl
je
mov
pop
insb
pop
or
and
sub
push
js
adc
andl
and
or
ret
add
jb
pop
cmp
xchg
push
cmp
cs
les
pop
jge
insl
and
push
and
jb
cmp
cmp
int3
js
lea
in
cmp
cld
lock
je
cmp
je
cmp
jne
add
cmpsb
mov
rclb
xor
int3
call
outsb
or
mov
jmp
outsl
outsb
pop
mov
cmp
ret
adc
ret
adc
mov
pop
clc
loopne
sub
cwtl
jp
mov
enter
andb
jmp
enter
sub
out
adc
jmp
test
xchg
add
and
sbb
mov
mov
cmpsl
jp
ret
or
aad
mov
sub
cld
lcall
jl
ds
jge
and
inc
adc
pop
movsl
dec
arpl
aam
leave
ret
add
pop
pop
add
add
adc
cli
aaa
adc
icebp
cmpb
or
ja
xor
dec
mov
sbb
inc
aaa
popa
lcall
mov
call
hlt
dec
je
add
push
sbb
add
jns
iret
mov
push
inc
adc
xchg
add
xchg
jmp
add
ret
or
adc
xchg
mov
mov
push
pop
lds
pop
jne
mov
cmp
gs
je
cmp
jne
xchg
add
add
push
dec
inc
fcomi
jle
lock
mov
pop
dec
xor
push
movsb
jne
push
test
jmp
testb
lcall
add
cli
cmp
jbe
mov
aam
nop
lea
mov
cmp
fs
dec
inc
rclb
and
or
push
pop
outsb
xor
pop
mov
test
inc
or
push
and
dec
push
clc
aaa
fwait
nop
cmp
cmp
je
mov
lea
push
movsb
sahf
clc
lret
test
hlt
and
testl
xor
inc
cmpl
mov
jne
cmp
notb
cmp
xchg
push
popa
adc
loope
jno
je
sub
jb
or
inc
fmull
in
ja
shrb
enter
push
jp
cs
test
add
push
cmp
stos
cmp
push
mov
cmp
int3
cmpsb
inc
push
jno
movaps
popa
loop
jne
mov
sbb
mov
insl
aam
mov
lretw
add
mov
aaa
jb
rcr
push
push
cmp
sahf
fwait
mov
fsubr
adc
aas
les
fisttps
hlt
add
je
fs
jne
shrb
and
push
push
test
mov
or
adc
push
jae
mov
jmp
dec
shlb
or
jbe
test
sub
lea
cld
inc
call
mov
aam
xor
push
mov
data16
std
lret
cmp
or
in
inc
jg
or
jge
cmp
or
dec
int
jle
es
sub
sub
and
pop
cmp
jl
sarb
adc
adc
inc
test
mov
and
jbe
jp
jb
jbe
mov
outsb
lock
jne
or
je,pn
test
jne
je
outsb
and
sub
roll
je
je
xor
and
adc
movb
inc
mov
push
sbbl
add
shlb
and
push
mov
inc
and
fstpl
adc
push
mov
icebp
js
mov
mov
add
mov
inc
es
xchg
inc
outsb
incb
jp
stos
push
or
push
movl
sub
mov
js
cltd
inc
cli
and
and
imul
xor
mov
pop
data16
ror
jno
loopne
inc
mov
jecxz
or
out
jb
fsubrl
pushf
es
sub
cmpsl
ret
jne
xchg
shll
stos
push
sub
pop
mov
lahf
mov
movb
push
inc
pop
popf
mov
pushl
sub
faddl
cmp
in
pop
add
cmp
mov
xchg
daa
xor
loopne
inc
das
mov
or
push
or
cmp
pop
cwtl
xor
ficompl
lahf
inc
mov
jne
daa
mov
add
inc
pop
ds
dec
fadds
and
and
jae
mov
outsb
je
ret
insl
and
cmp
jo
sub
pop
in
mov
scas
push
fsts
sti
add
and
ret
sbb
jbe
pop
mov
or
cmp
push
stc
and
pop
add
jo
ds
or
add
stos
movb
mov
push
aam
xor
pop
mov
or
xchg
mov
add
and
push
shr
pop
es
jl
add
cmp
mov
sbb
addb
mov
mov
scas
mov
or
xchg
mov
fdiv
and
popa
hlt
pop
xlat
cld
sub
pop
add
inc
xchg
xchg
add
and
loop
add
mov
les
jne
sub
push
sbb
vmovaps
je
adc
sti
pusha
jb
cs
push
inc
or
and
add
inc
fisttpl
sti
imul
lea
cltd
add
xor
pushl
pop
sbb
pop
repz
lods
dec
mov
or
add
into
push
mov
cmp
and
outsb
dec
sub
mov
dec
in
jmp
xchg
jne
insb
in
mov
add
daa
cmpsl
addb
xchg
mov
bound
push
ret
pop
inc
mov
or
sub
push
push
leave
add
and
mov
pop
leave
or
xchg
dec
push
test
and
fs
stos
test
lahf
cld
aam
and
add
sbb
call
jle
setne
mov
sub
rorb
sbbl
rcl
subl
jge
cld
loope
mov
xor
pop
cmp
test
and
push
dec
xor
es
adc
sub
pop
xor
push
out
and
jne
adc
mov
fdivl
jne
sbb
cmpsl
pop
mov
jnp
das
movl
cmp
das
bound
in
add
enter
sti
dec
adc
stos
xor
mov
rclb
addb
shlb
sti
jmp
jb
fcomps
std
loope,pn
inc
lods
jmp
cmp
je
jg
clc
and
lds
add
insl
negb
inc
xchg
in
loope
jge
pop
and
aaa
addl
sbb
pop
call
cwtl
mov
roll
mov
adc
push
imul
jmp
jle
test
jo
push
fwait
push
xchg
and
dec
movsl
movsb
inc
fsubp
inc
dec
fisubl
push
call
xor
jbe
add
sbb
jp
sbb
incb
jae
jmp
clc
xchg
pop
pop
inc
cmp
je
lea
cmpb
cmp
jne
push
inc
mov
or
jne
push
loopne
mov
pop
mov
mov
inc
incl
or
or
data16
out
insl
js
push
jmp
test
movsb
push
popa
ja
mov
xchg
sub
js
ja
lods
cmp
cmpl
jmp
add
bound
fidivrl
push
and
xor
mov
or
sarb
ja
into
jae
or
ret
or
adc
sbb
cmp
sbb
dec
ret
cmpsb
push
lret
or
xor
add
enter
adc
rclb
xor
or
mov
xor
xchg
pop
cmpsl
iret
test
mov
in
sbbb
leave
jb
xor
test
push
lahf
lret
in
cmp
or
add
mov
add
sbb
into
mov
push
push
push
sbb
pop
add
mov
push
add
jmp
xchg
adc
cmp
xor
pop
lock
cmp
xchg
xchg
imul
adcl
mov
xchg
push
sub
xor
xor
cmp
add
fbstp
sbb
pop
ret
stc
fwait
movsb
add
push
rcrb
or
call
adc
or
pop
and
mov
pop
adc
ds
shlb
xchg
push
lea
ljmp
js
test
mov
les
adc
enter
cwtl
cli
jne
push
push
stc
shll
sub
or
adc
aas
cmp
cmp
mov
insl
pusha
pop
jmp
mov
les
push
ljmp
or
sub
in
dec
inc
rorb
loopne
insb
mov
or
pop
inc
dec
movl
test
sbb
js
or
mov
push
mov
or
inc
inc
ret
imul
hlt
test
pusha
lods
mov
cltd
cmp
push
addb
cmp
popa
pop
lcall
inc
js
lods
aas
or
xor
clc
popf
nopl
push
push
loopne
in
jne
dec
add
cld
aam
xor
test
hlt
or
fadds
outsl
je
mov
jmp
lcall
hlt
cmp
add
aad
and
push
cmpl
pop
adc
cmpsb
inc
jl
inc
shl
adc
fucomi
ud0
add
mov
shrb
ret
sbb
jno
faddl
je
push
shll
xor
addb
mov
add
roll
xor
lods
mov
sbb
sbb
xchg
rclb
mov
in
mov
inc
fsub
in
in
dec
add
jo
mov
out
sbb
out
ja
outsb
push
orb
add
push
xchg
nop
outsb
movsl
aad
cmp
inc
mov
mov
sbb
push
adc
push
inc
lea
sbb
notb
push
adc
pop
sahf
dec
lock
daa
shlb
push
outsb
jns
enter
or
movsb
std
fdivl
mov
push
call
inc
out
jmp
mov
jo
cmp
and
daa
or
jg
xchg
mov
add
sub
pop
test
push
pop
imul
and
mov
dec
cmp
sbb
loopne
rcrl
add
mov
in
xorl
imul
and
xchg
push
shlb
mov
xchg
cmpsl
jnp
popa
adc
pop
or
push
das
dec
cmp
divb
adcl
sub
fldcw
sub
pop
pop
inc
inc
lcall
pop
fstpl
sbb
lock
jmp
push
pop
add
mov
mov
or
fdivrl
mov
xor
push
adc
dec
sbb
cmpsl
aad
lods
push
xor
cmp
ret
lahf
or
in
pushf
pop
sbb
or
jl
popf
add
adc
sub
add
stos
pop
pop
sbb
mov
aaa
imul
pop
sti
pop
mov
mov
dec
lods
in
enter
call
aas
push
push
mov
adc
jb
and
clc
adc
cmpsl
pop
mov
xchg
push
push
add
lret
xor
es
jecxz
push
jae
mov
add
xor
or
or
stos
test
add
pushf
xor
sahf
test
es
lcall
hlt
movsl
out
stos
roll
call
pop
pop
push
pop
xchg
stc
cmp
pop
or
cmp
inc
inc
or
mov
sbb
jecxz
mov
cmp
jecxz
add
sarl
push
sub
jecxz
into
outsl
cmpsb
nop
mov
jg
xchg
xlat
mov
out
cmp
sub
fadds
mov
or
and
and
and
loopne
mov
jcxz
addb
fst
insl
aas
or
sbb
andl
push
mov
loope
pop
sub
imul
inc
inc
or
gs
push
xor
fisubl
xchg
dec
stos
xor
leave
sbb
movsb
ja
cmp
xchg
rcll
lret
mov
aas
mov
pop
and
add
repnz
test
push
into
sub
add
xor
int3
jecxz
lea
mov
push
adc
jb
push
or
lods
mov
enter
mov
sub
cmp
mov
add
push
and
pop
pushf
sbb
jmp
inc
pop
iret
push
mov
and
rorb
inc
imull
ds
je
push
xor
jecxz
pop
test
pop
mov
pop
xor
mov
das
stos
inc
xchg
push
xchg
rcrb
fstps
mov
or
mov
test
adc
and
bound
insb
jle
jge
add
push
test
push
test
test
nop
cmp
inc
dec
sub
xor
int
clc
insb
call
int
pop
xor
mov
int3
sub
insl
sub
and
xor
imul
jl
dec
adc
pop
pop
push
inc
xor
mov
sbb
pop
lea
add
or
or
mov
dec
adc
jne
mov
test
jb
jmp
lret
mov
pop
neg
pop
or
lods
pop
jnp
jnp
add
insl
push
subl
pushf
into
inc
cmp
or
icebp
and
sub
dec
ret
insl
jne
sbb
jne
rcrl
mov
repz
jmp
or
in
push
mov
or
sub
cmovle
cmpsb
clc
repz
aam
add
gs
data16
cmpsl
sub
mov
sbb
leave
pop
test
sub
cmp
pusha
lea
xor
add
push
sub
mov
pushl
jl
and
xor
jo
push
repnz
jle
pop
adc
addl
xchg
in
out
or
jne
aaa
pop
adc
outsl
ds
mov
adc
add
lret
inc
das
xor
inc
or
mov
mov
adc
out
or
and
in
add
adc
ds
add
add
push
icebp
mov
mov
ret
cmp
jne
fildl
pop
scas
in
push
adc
inc
jno
cmc
pop
dec
or
leave
pusha
adc
jnp
xor
mov
or
mov
enter
lret
pop
adc
or
fadds
aam
sbb
adc
mov
xchg
and
inc
call
jmp
jno
or
nop
stos
pop
orb
sub
pop
xchg
sub
xchg
inc
sub
sub
sbb
and
sbb
jb
jb
dec
call
adc
sub
sub
push
or
cmp
sbb
popa
pop
fucomi
jge
sub
bound
mov
cmc
pop
call
sbb
pop
aam
add
dec
or
ret
adc
sbbl
xor
insl
push
dec
sbb
and
ljmp
pop
fwait
push
jmp
xchg
push
pop
pop
add
jae
mov
push
or
mov
push
pop
dec
dec
es
lock
aam
xor
xchg
cmp
add
test
dec
rcr
rclb
outsb
enter
sub
test
pop
push
dec
mov
and
mov
lea
or
pop
push
pop
xor
and
push
dec
ret
sub
jbe
inc
jo
iret
adc
cli
outsb
xor
sbb
mov
and
xchg
rorb
adc
test
fs
pop
sub
xor
mov
insl
int3
xchg
lock
cmp
jecxz
xor
mov
enter
mov
jmp
es
imul
rolb
cmp
stos
push
dec
mov
and
adc
jmp
enter
sub
add
sbb
xor
xor
mov
sub
dec
pusha
hlt
sarb
push
mov
sbb
in
push
or
popf
rclb
addb
jo
lods
pop
test
sub
das
jno
sti
mov
movsl
inc
push
push
jl
push
adc
add
mov
xor
xor
inc
enter
inc
and
xchg
add
sub
dec
stos
cld
add
test
dec
stos
pop
jo
in
mov
pop
xchg
sbb
jmp
in
push
xor
cld
push
sbb
movsb
and
sub
stos
jae
in
js
dec
dec
les
pop
adc
pusha
xor
sbb
inc
or
test
sub
push
scas
or
mov
dec
push
sub
enter
mov
fadds
mov
xor
add
stos
gs
push
loope
inc
lock
cmp
jne
mov
jmp
loopne
es
mov
daa
add
sbb
popf
pusha
mov
pushf
cmc
imul
adcb
and
xor
push
adc
add
xlat
enter
inc
xor
gs
je
or
pop
xor
jp
lds
xorl
clc
sbb
sub
cmp
mov
iret
aas
push
mov
aad
outsl
loope
cmpb
push
add
or
insl
pusha
daa
cs
sar
inc
sub
fisttpl
sub
pop
hlt
jne
push
jge
push
push
in
adc
or
mov
add
scas
jl
pusha
mov
dec
ret
mov
clc
rorb
dec
mov
push
mov
outsb
pop
mov
pop
inc
sahf
xchg
cmp
mov
or
jmp
jb
sub
xor
adcb
adc
cmp
lds
cld
dec
lahf
push
mov
add
add
fsubs
in
fwait
les
or
xchg
or
jge
pushf
add
outsl
and
adc
inc
or
adc
in
mov
xor
cmp
fs
inc
fisubrs
loope
aam
push
repz
test
orb
sub
cltd
ret
test
test
or
call
cmovo
repz
call
push
inc
push
mov
aas
pop
xchg
test
ljmp
in
xor
shrb
xchg
fwait
or
inc
out
pop
push
xchg
jmp
pop
repnz
lret
xchg
dec
fdivs
xor
pop
inc
jle
movb
into
bswap
je
ds
xchg
xor
lea
sbb
mov
push
inc
enter
inc
xchg
icebp
pop
outsb
push
inc
cmp
jmp
pop
imul
inc
mov
xlat
decl
arpl
movq
or
jmp
sub
push
push
sbb
sti
aad
imul
imul
loope
fmuls
sbb
insl
popa
mov
sarb
adcl
xor
xchg
push
inc
mov
push
xchg
fstps
mov
or
rorl
sbb
ja
ret
inc
sahf
arpl
dec
mov
sbb
lahf
rcl
test
add
in
int3
scas
inc
sbb
dec
shrb
sbb
in
sbb
ds
mov
pop
movsb
add
cwtl
sub
add
jns
xor
or
add
add
mov
mov
out
sub
adc
add
sub
fs
adc
cmp
add
sbb
xchg
pop
jae
sub
push
or
or
je
out
daa
sbb
andl
adc
inc
and
xorb
cld
test
and
push
mov
or
mov
dec
scas
nop
mov
dec
movsl
call
sub
and
xor
insb
and
js
out
cmc
ds
roll
out
push
sub
daa
pusha
or
push
jle
fistps
inc
sbb
les
shlb
xor
push
mov
jmp
and
loope
inc
dec
pop
xor
shlb
icebp
pusha
jl
push
in
jmp
cs
inc
push
push
jp
mov
negl
insb
out
add
ret
mov
jg
mov
add
inc
test
mov
frstor
mov
mov
sbb
adc
adc
lret
movsb
or
lds
sbb
jae
cmp
add
cmpsb
and
add
cmpl
lock
sub
or
stos
push
fisubrl
aam
or
jmp
mov
pushf
lahf
xor
add
dec
sbb
loop
inc
sub
and
cmpl
push
loope
out
out
jl
xlat
mov
jp
icebp
xlat
call
add
mov
pop
inc
test
pop
insb
lods
push
lcall
jns
jl
pusha
les
jmp
jb
push
sbb
inc
push
and
jne
ret
repnz
jge
movzbl
push
xor
add
push
cli
xor
aaa
mov
je
xor
mov
inc
pop
mov
ficomps
xor
dec
outsl
push
test
xor
pop
int
movsb
pop
fcoms
jmp
push
and
cmpsl
jmp
fsubrs
lock
movsb
mov
testb
add
adc
push
inc
push
xor
pop
sub
mov
movl
cmp
xchg
cmp
xor
dec
loope
xchg
arpl
pop
ret
ffree
adcl
mov
pusha
pop
push
or
mov
sbb
or
pop
cmp
xchg
xor
test
testl
sub
jmp
movl
xchg
push
push
mov
xor
dec
mov
adc
cmpsb
and
push
cmp
call
mov
inc
in
jge
cmp
jne
push
popa
inc
lods
fiaddl
fidivl
push
ret
lods
insb
xchg
stos
ja
mov
or
adc
jle
jbe
test
rclb
xchg
lea
lock
inc
movb
out
cmp
je
adc
inc
cmp
in
sbb
adc
pusha
mov
into
mov
mov
inc
push
or
xor
mov
test
mov
jge
add
divb
or
repz
test
push
ss
mov
repz
add
insl
and
mov
fwait
jmp
call
pop
add
mov
je
scas
dec
sbbb
in
dec
in
out
pop
adc
push
lret
mov
dec
clc
movb
mov
add
xor
out
fwait
pushl
xchg
xchg
add
enter
iret
jbe
mov
mov
jbe
mov
jno
add
push
mov
and
insl
mov
mov
inc
sub
push
sbb
adc
divb
add
or
ror
or
clc
sarl
mov
dec
test
loopne
sbb
enter
xchg
mov
adc
cmpsl
lea
cld
mov
lea
gs
pop
lea
insb
cld
sbb
mov
inc
call
mov
xlat
adc
jle
mov
xchg
push
jmp
mov
popa
dec
cmp
cld
fadds
pop
mov
xchg
cmpsb
das
sub
ss
push
or
bound
sbb
xlat
or
je
push
xlat
test
mov
xor
or
pop
insl
add
stc
fdivrs
cmp
jnp
add
cmc
xchg
mov
mov
loop
sar
add
push
sbb
and
sbb
test
and
jnp
out
sar
and
leave
test
jb
ret
cwtl
sbb
and
push
cmp
xor
or
adc
dec
sbb
add
or
dec
push
incl
mov
sub
sub
fidivs
mov
inc
cmp
jb
pushl
insb
roll
shrl
mov
jp
lea
cmc
ret
xor
jle
jae
cld
ja
imul
or
push
orl
jge
data16
push
mov
adc
sub
xbegin
out
imul
sub
mov
dec
dec
sbbl
adc
enter
xchg
popa
mov
mov
imul
add
or
jle
fmuls
jno
std
lret
xor
jnp
add
pop
ret
test
pop
mov
aaa
mov
lock
test
out
js
dec
jl
test
cld
push
push
dec
and
push
jg
inc
lea
lea
dec
mov
outsb
incb
sub
xchg
mov
xchg
xor
mov
inc
in
arpl
shl
dec
enter
and
and
aaa
aas
xchg
test
mov
pop
fdivrl
mov
les
cmpsb
push
mov
or
rorb
int3
pop
clc
sar
jl
inc
sub
push
fistps
and
aam
cld
mov
mov
push
je
and
push
shl
inc
mov
cmpsl
xchg
mov
sbb
push
sbb
scas
add
movsl
fstps
inc
shlb
xchg
and
pop
movsl
jb
inc
enter
arpl
inc
xchg
je
cmp
add
mov
or
cmp
xchg
bound
pop
cmp
jne
arpl
and
inc
lea
sub
mov
lahf
adc
fldenv
js
jb
lcall
shlb
xlat
mov
xchg
dec
jp
call
xchg
stos
outsl
loope
pop
fwait
jecxz
or
pop
inc
jns
or
mov
sbb
rolb
fbld
adcl
or
cmp
jne
sbb
addr16
mov
loope
inc
das
push
test
jns
es
and
faddl
sbb
addb
mov
adc
sbb
adc
ret
insb
and
jmp
aaa
int3
jo
pop
addr16
adc
inc
inc
mov
inc
sahf
movsb
mov
and
push
and
lret
arpl
rcll
pop
movsb
jo
jns
push
cmpsl
call
mov
movsl
outsl
imul
xor
or
and
and
out
cs
add
ja
div
outsl
dec
addl
pop
ja
ja
cmpsb
sbb
push
je
add
or
push
push
sub
add
fldenv
and
lock
inc
repnz
mov
adcb
test
mov
cmp
sub
jae
or
jmp
pop
lock
mov
lods
pusha
push
jmp
std
add
lret
dec
test
jl
ja
add
fistpll
push
mov
adc
mov
dec
rorl
add
pop
pop
xor
sbb
mov
aaa
shll
das
jmp
movsl
pop
ret
je
test
jp
movzwl
insl
sub
adc
andl
icebp
mov
or
xor
das
imul
push
push
dec
push
js
dec
add
inc
in
jge
popa
jle
lds
aas
les
incb
mov
sub
adc
rcrl
add
add
jnp
sbb
push
cmp
push
mov
push
xchg
inc
sbb
movl
inc
cmpb
pop
inc
add
pop
sbb
push
push
inc
dec
sub
jno
mov
ret
adc
ret
f2xm1
inc
pop
pop
pop
call
fcmovnb
popf
pop
div
lea
rclb
pop
pop
dec
adc
mov
jno
sub
push
incl
outsl
adcb
or
je,pt
cmp
jbe
lds
adc
mov
push
pop
aam
jnp
pop
es
inc
pop
cld
sbbl
int3
pop
sahf
sarl
fdivrl
inc
sbb
adc
sub
bound
mov
cmc
scas
jle
push
inc
sub
mov
adc
mov
cmpsb
cmp
inc
add
adc
js
pop
pop
push
icebp
add
jmp
and
adc
xchg
popf
scas
ds
and
pop
clc
push
mov
mov
lret
test
jmp
jge
push
call
movsb
push
addb
or
mov
scas
xchg
inc
mov
adc
lock
aam
adc
mov
les
scas
enter
sub
mov
push
dec
fadd
in
inc
pop
ret
aam
les
push
loop
loopne
icebp
or
in
xchg
fiaddl
rcll
pop
dec
push
enter
fisubrl
mov
add
dec
lds
sub
pop
std
rol
divl
ret
mov
clc
mov
jno
aam
adc
notl
add
test
sbb
sti
mov
es
xor
jns
stos
and
or
clc
je
jmp
aaa
lret
mov
cmp
jl
jle,pt
scas
arpl
add
jmp
dec
sub
movsl
lret
cli
push
int3
add
mov
jae
je
mov
add
adc
dec
test
sub
adc
mov
and
mov
xchg
inc
cld
push
sbbl
jnp
loop
xor
sub
pop
inc
mov
testb
pop
clc
inc
inc
inc
pop
push
movsl
adc
jecxz
xchg
push
imul
in
push
and
xor
adc
jle
mov
stos
popa
icebp
cs
fistpll
sbb
xor
xlat
xchg
dec
das
pop
popf
mov
add
push
push
fists
stc
cwtl
adc
movb
mov
inc
jo
mov
push
mov
or
data16
or
add
cmc
or
adc
hlt
rorl
adcb
xchg
fs
les
faddl
cmp
in
testl
int3
in
cmp
jle
mov
idivb
pop
dec
inc
cmp
mov
add
bound
lea
adc
mov
add
add
rcll
push
ss
jne
mov
cmp
xor
sbb
xor
mov
push
mov
xor
stos
push
push
dec
test
iret
sub
and
add
inc
fcompl
cli
outsl
out
rcrb
ret
dec
cld
mov
add
pusha
pop
jge
or
add
pop
or
jns
mov
add
orl
adc
andl
or
push
cmp
sbb
jne
and
sbb
rcrb
or
cmp
je
xchg
sbb
mov
push
mov
push
lahf
shrl
cmp
lea
dec
repnz
or
adc
or
js
cwtl
lods
sti
fldenv
jmp
ret
jecxz
repz
nop
rcrl
pop
clc
jecxz
jp
leave
xor
mov
jne
add
in
hlt
out
cmp
mov
ja
scas
rol
xor
cmp
jl
pop
or
aas
test
jo
inc
out
pushf
sahf
insl
orl
je
jl
cmp
shlb
cs
int3
adc
mov
cmp
cwtl
lea
jmp
cmpl
jp
mov
jbe
cmp
ljmp
shll
scas
clc
sub
jmp
sub
shrb
jae
and
mov
cmpl
xor
mov
sub
bound
pop
ffreep
rcrb
scas
xchg
xchg
mov
jle
hlt
mov
int3
shr
call
sub
sahf
popf
and
aaa
js
cmp
sbb
cli
pop
ret
or
rcl
and
mov
loop
addb
addl
jo
sbb
int3
pusha
or
sub
sahf
fists
pop
add
enter
in
or
adc
cmp
filds
rol
sub
sbb
enter
movsl
les
pop
add
sbb
push
test
repnz
sbb
cmp
mov
pop
mov
ret
jo,pn
rorb
and
mov
pop
inc
hlt
test
shrl
dec
ret
jmp
stos
int3
inc
stos
xor
add
test
adc
jb
mov
cmp
je
cmp
test
inc
loopne
mov
xor
sbb
loopne
jae
or
ss
xchg
addb
inc
test
inc
outsb
xchg
xchg
call
inc
sbb
jb
sub
cmp
fwait
insb
add
push
mov
xor
xlat
mov
cmp
dec
in
add
adc
lods
cld
xchg
jnp
jp
xchg
mov
xorl
xchg
mov
gs
inc
lock
and
cmp
push
pusha
adc
add
inc
lcall
or
jne
push
dec
rol
dec
xor
pop
notb
jecxz
or
ret
pop
arpl
cwtl
lods
jge
lret
andl
adc
lea
clc
lea
ret
addb
rorb
sub
fsub
or
sub
push
pop
clc
xor
pop
xor
test
mov
lahf
lret
or
sarl
or
cli
sbb
je
mov
cmc
xchg
mov
jmp
cmp
jbe
xchg
addb
push
dec
inc
jns
xor
insl
dec
dec
dec
clc
jne
mov
push
test
cmp
dec
or
sub
lea
shl
iret
sub
xor
stos
es
in
mov
jbe
data16
push
xor
jns
or
inc
pop
and
and
pop
and
pop
pop
mov
mov
adc
call
insb
orl
xor
jne
push
js
rorl
push
fistl
cld
loopne
fnstenv
mov
cld
lods
push
mov
jb
mov
in
add
or
add
xlat
cld
clc
pushl
xchg
add
mov
mov
pop
sub
les
pushf
out
data16
or
xor
rol
xchg
je
fiadds
add
cmp
push
mov
mov
hlt
test
iret
je
mull
rorb
hlt
push
mov
js
cmp
lea
mov
mov
xor
add
nop
adc
fwait
test
mov
and
and
lock
loopne
int
inc
in
pushf
add
add
sub
cs
sub
leave
xor
mov
or
enter
mov
mov
sarb
lea
sbb
cmp
adc
mov
sub
jge
jbe
push
inc
cmp
movsb
les
pop
jp
jg
jne
lea
pop
mov
aas
mov
mov
imul
inc
jne
sub
das
nop
jbe
rolb
jmp
add
jo
and
mov
stos
cmp
push
mov
enter
dec
jnp
out
outsb
loope
jmp
adc
loopne
fidivs
test
in
lods
push
cmpsl
jmp
mov
inc
dec
ret
bound
shrb
lock
decb
loope
jne
mov
inc
adc
orl
popa
push
movzbl
ret
push
sub
imul
jl
xor
ds
in
addr16
push
and
pop
stos
scas
test
or
jle
jo
lret
lock
cmpsb
mov
mov
mul
seto
inc
sub
or
mov
scas
cwtl
pop
mov
adc
mov
or
ror
cmp
les
mov
xchg
fsubrp
jge
cmp
test
aam
xor
sub
mov
lret
je
pop
aam
xor
call
inc
cmp
mov
mov
lret
cmp
lret
mov
jecxz
idiv
mov
mov
mov
mov
add
mov
adc
cmp
add
fadds
add
fldcw
adc
rcr
dec
sti
es
mov
adc
sbb
xor
adc
data16
pop
pop
inc
popf
dec
xorl
leave
mov
jmp
popa
pusha
xchg
pop
push
lret
ret
cmpl
ret
push
movb
mov
mov
test
je
mov
jns
xchg
iret
stos
xor
xlat
in
pusha
or
lret
scas
shll
pushf
pop
push
pop
pop
cmp
clc
sub
pop
rcrl
jp
sbb
inc
test
imul
loope
lcall
pop
inc
xchg
and
outsb
pop
and
and
test
sarl
cmpb
fsubrs
je
test
adc
mov
data16
addb
jl
jmp
push
fldl
aad
mov
in
pmulhuw
add
mov
cmp
enter
test
and
sub
jne
repz
mov
cmp
xchg
jmp
sub
push
lahf
clc
cmp
cmp
jp
rorl
into
jmp
test
mov
jl
xchg
xchg
mov
pushf
test
dec
fcomp
out
popf
aad
inc
cmp
jae
cmp
je
pushf
andl
cmp
pop
push
dec
pop
pusha
push
sbb
or
and
jle,pn
mov
ja
mov
or
jb
ret
pop
mov
pop
add
jl
clc
and
andl
je
pushf
jle
je
pop
add
push
mov
jmp
mov
mov
or
pop
sub
sub
mov
push
jg
push
mov
xchg
inc
jb
add
jb
add
hlt
mov
mov
mov
cmp
xor
add
pop
dec
cmp
das
xor
add
or
adc
pop
jg
pusha
and
scas
jne
dec
shlb
add
jle
rolb
fsubr
pop
add
dec
sub
gs
xchg
mov
cmp
sub
push
pop
jmp
in
mov
pop
repnz
add
cmpsb
loopne
loopne
push
add
cli
rolb
or
dec
movsb
out
andl
adc
adc
xchg
mov
jle
jge
sbb
mov
dec
cmpsl
call
jmp
or
cmp
cmp
call
in
jl
cmp
cmp
pop
clc
mov
and
clc
jle
adc
enter
inc
jl
clc
popa
inc
push
sbb
call
dec
out
popl
or
fdivr
clc
add
clc
jno
mov
add
or
sub
mov
icebp
or
sub
jne
sbb
or
cmp
sub
or
sbb
je
sti
push
xor
orl
pop
sahf
cmp
enter
sub
call
cmpb
test
jmp
push
fsubrs
mov
or
rolb
inc
ficoml
push
pushl
cmp
cmc
negl
xchg
and
cltd
cmpsl
push
xor
jo
add
jo
xor
jb
adc
push
sbb
mov
mov
sahf
repnz
mov
mov
sbb
sub
in
test
adc
pushl
jmp
mov
aam
or
xlat
scas
popf
xor
push
mov
mov
adc
faddp
mov
xchg
rcll
mov
pusha
jg
add
lret
jb
sbb
aaa
jbe
pop
fcompl
int
dec
add
and
das
das
mov
std
and
xlat
mov
jmp
fcoml
iret
cs
add
add
movsl
or
std
cltd
sub
imulb
movb
cmp
add
sbb
mov
fdivl
inc
dec
adc
push
lods
outsb
pop
lea
lods
mov
leave
add
lds
cmc
sub
mov
lods
aaa
inc
mov
popa
enter
imull
push
sub
lcall
xchg
sbb
xchg
rolb
mov
jecxz
cmpsl
mov
mov
out
movb
cmp
jae
sub
loopne
movsb
xor
testb
iret
rcrw
inc
sub
xor
add
in
adc
xchg
shlb
fistpl
cmc
push
inc
in
sbb
cmp
fstpt
add
dec
dec
xor
lea
inc
pop
push
pop
fimull
or
sti
enter
push
or
pop
or
rcll
shlb
xor
pop
xor
push
add
xchg
jle
sub
xor
int
cltd
negl
sbb
insb
int3
add
fmull
sub
incl
rorb
xchg
cld
jb,pn
cmp
adc
cld
pop
push
test
insl
enter
scas
adc
addl
fildl
loopne
add
pop
add
test
jne
add
addb
dec
test
sbb
lea
push
push
roll
push
mov
je
mov
cmp
int
addb
enter
inc
cmpl
adc
lea
repz
xchg
or
lds
les
add
data16
mov
jo
push
test
sbb
cmp
mov
cwtl
sub
les
jp
adc
jbe
stos
dec
sbb
lds
jmp
data16
mov
sbb
loop
test
out
in
pop
push
push
cld
mov
hlt
fcoml
mov
sub
and
fists
lock
mov
push
out
push
push
mov
aas
bnd
mov
xor
ja
jg
cmp
jne
cmpb
ret
push
jae
lea
push
dec
mov
sbb
cmp
pop
dec
push
loop
popa
cmp
cld
dec
loop
aas
xor
push
dec
enter
aam
or
or
and
mov
xchg
sbb
mov
sbb
push
rclb
cmp
pop
aad
add
add
hlt
push
or
push
xchg
decb
lea
test
pop
movsb
pusha
test
inc
xchg
add
sbb
sub
mov
adc
cmpsl
shlb
push
add
xchg
mov
lahf
divl
movsl
jae
cmp
clc
test
or
fimull
movntps
in
js
pop
add
mov
test
outsb
add
in
ds
lret
or
ret
or
pop
jmp
adc
lds
sub
sbb
push
scas
subb
enter
pop
int3
mov
pop
ficomps
test
cmpsb
push
pop
mov
fldl
or
pushf
and
mov
arpl
jae
sti
daa
cmp
or
mov
and
repnz
sbb
int3
push
in
jbe
pushl
sbb
xchg
add
cmp
mov
mov
mov
or
add
cmpb
push
push
or
or
lcall
push
cmp
push
xlat
paddsw
pop
jecxz
lret
inc
mov
adcl
cli
stos
and
and
data16
jmp
pop
and
push
pop
push
inc
or
add
mov
jbe
mov
xor
sbb
jmp
jmp
into
and
addl
jmp
mov
adc
shlb
lea
cli
ja
cmpb
add
push
imul
ret
push
xor
add
mov
xchg
les
cmp
bound
or
inc
dec
pop
or
fwait
arpl
cmpsl
add
push
cmpsb
imul
lea
add
push
nop
test
mov
insb
inc
fists
movsl
mov
xor
mov
or
sbb
adc
jns
sbb
popa
imul
pop
repz
add
aas
mull
push
lahf
xor
push
and
adc
sbb
or
dec
int
cmpl
add
push
cmp
jo
xchg
push
mov
mov
jne
mov
fildl
mov
push
mov
sub
pop
test
jo,pn
test
mov
push
pop
sub
pop
sub
cmp
ja
outsb
sbb
ret
cmp
mov
and
rol
loop
dec
cmp
lea
jl
mov
mov
mov
sub
dec
jns
mov
lods
cld
insl
adc
jne
jmp
add
or
cmpsb
clc
in
ss
dec
mov
pop
cmp
insb
add
subl
or
cltd
or
add
or
insl
mov
dec
or
xor
sbb
add
inc
sbb
pop
and
jns
sbb
ja
cmp
adc
mov
xor
push
dec
sub
xor
js
mov
xchg
cwtl
cmp
insl
xor
sub
adc
xchg
popf
or
pop
movsl
inc
jl
push
ljmp
jle
cmp
push
mov
push
into
movsl
frstor
mov
les
adc
sbb
sbbb
jne
cltd
and
lea
in
mov
cli
add
in
push
adc
pop
cs
in
add
inc
aam
rorb
fimull
dec
or
lock
hlt
jge
cmovne
mov
test
nop
inc
cwtl
or
pop
fisubs
lahf
outsl
mov
movsb
roll
lahf
fs
loopne
stos
fbstp
or
call
or
mov
hlt
scas
jge
cli
fucomip
je
push
push
jg
or
add
push
sub
sti
or
push
js
jne
and
movsb
or
and
int3
adc
je
push
daa
sub
pop
adc
adc
mov
mov
jae
sbb
push
xchg
fildl
js
jle
arpl
jp
and
add
jg
les
cmp
and
xor
hlt
adc
ret
test
adc
or
test
pushf
cmp
in
lds
rcr
test
sbb
sbb
fdivrl
dec
fcmovnb
bound
out
inc
jle
jbe
fiadds
mov
out
jl
cmp
sub
cmp
mov
rcll
sub
out
mov
leave
or
push
xor
adc
in
inc
cltd
inc
test
cmp
cmp
adc
jns
bound
adc
push
or
dec
lock
push
cs
fs
std
sbb
adc
out
or
inc
jl
push
push
seto
jns
add
mov
push
imull
and
in
ds
and
je
pop
pop
outsl
jge
xchg
ja
push
mov
popa
add
push
sahf
in
or
or
fldt
sbb
sub
pusha
sub
cld
push
ja
sahf
inc
push
fsubrl
push
jmp
clc
stc
mov
add
lahf
mov
push
xorl
test
add
mov
cli
stc
xor
lds
adc
rcll
add
pop
mov
jg
mov
pop
mov
mov
stos
incb
dec
mov
inc
push
loopne
cmp
repnz
out
punpckhbw
int
and
mov
outsb
fisttps
aam
dec
movsb
enter
pushl
add
jbe
sbb
jmp
or
jns
sub
jbe
jp
sbb
outsb
adc
ret
jge
js
pop
pop
adc
mov
push
mov
add
and
jbe
adc
dec
loopne
call
clc
push
lods
lcall
cmp
negl
mov
insl
lods
scas
cwtl
mov
add
sub
dec
movsl
jmp
mov
dec
fsubs
jecxz
hlt
jo
ss
inc
daa
test
add
int
mov
fwait
test
push
mov
add
es
mov
scas
les
lock
mov
mov
jp
add
lret
mov
mov
adc
movsb
pop
inc
sbb
mov
cltd
das
push
mov
sub
add
cmp
int3
xor
movsb
das
ret
inc
ret
mov
int3
push
dec
adc
pop
cmpl
enter
sbb
adc
and
iret
into
or
xchg
adc
sbb
outsl
or
inc
js
xchg
in
pop
data16
mov
xor
cmp
and
jle
je
cmpl
or
lods
movsb
rolb
test
push
inc
adc
xor
flds
das
push
adc
iret
stos
sbbb
xchg
or
pushf
push
and
adc
and
push
add
je
adc
pushf
xchg
xor
test
sbb
shl
xor
sbb
add
ljmp
adc
xor
and
call
cmp
pop
push
lock
xor
push
add
sbb
inc
out
rcll
push
push
add
add
sbb
repz
loop
and
andb
add
pop
adc
push
inc
push
jae
push
pop
push
inc
dec
lret
outsb
ficoms
push
test
jge
push
std
inc
jp
adc
push
mov
pusha
dec
mov
inc
cmp
sub
cmp
ficoml
sub
adc
and
lock
pop
fisubrs
frstor
in
xor
popa
mov
movsl
sbbl
jae
imul
popa
sbb
les
inc
mov
rolb
mov
push
dec
jae
jno
add
clc
nop
jne
pop
stos
sbb
cmc
out
js
dec
mov
test
aad
xchg
sub
mov
clc
and
lea
ds
sbb
inc
jmp
divl
or
add
add
pusha
xor
jecxz
repz
adc
lock
mov
je
add
cld
sub
or
mov
into
add
jl
adc
jae
add
mov
aad
sbb
imul
xchg
jmp
add
stos
mov
dec
ret
or
fldcw
pusha
fcompl
push
push
and
cld
fcomps
add
dec
push
push
popa
cwtl
sub
sub
jle
lea
aaa
inc
call
dec
call
xchg
jae
cmp
testl
daa
movsb
pop
or
jne
mov
les
adc
daa
leave
call
push
iret
push
dec
mov
xchg
mov
mov
sbb
pop
call
cmp
jl
loope
das
test
sarb
ficompl
pop
and
shrb
nop
xchg
les
popl
add
imull
lods
pushf
add
mull
js
adc
add
pushf
push
out
in
sub
xchg
popa
adc
outsl
outsb
dec
jb
clc
jne
xor
jle
ficoms
sub
xchg
imul
movsl
cmp
pop
rorb
dec
mov
inc
push
xchg
pop
push
mov
or
sub
nop
push
dec
iret
add
shll
xchg
cmp
cmp
call
loopne
or
or
cmp
xchg
in
mov
mov
stos
and
and
into
testb
ret
add
add
pushf
sub
cmp
lods
movsb
push
and
mov
mov
pop
mov
pop
daa
sub
ficoms
mov
nop
insb
les
jns
pop
int3
adc
fdivrl
push
ret
add
pop
pop
adc
lret
mov
stos
into
leave
add
or
shlb
push
xor
fildl
cmp
pop
test
aad
pushf
test
test
add
nop
adc
adc
mov
xor
stos
cmpb
je
nop
sti
mov
fidivl
jmp
call
push
and
xchg
cs
pusha
push
xchg
lods
add
xor
cmpsl
mov
mov
mov
das
aad
jne
rcl
ret
dec
cltd
es
nop
mov
in
mov
jne
inc
ljmp
mov
xchg
cld
gs
jle
mov
cmp
adc
sbb
push
cmp
jb
mov
mov
adc
out
cli
xorb
rclb
cmp
and
add
and
push
and
ljmp
jl
pusha
push
push
adc
add
and
inc
add
rolb
fdivp
fiaddl
mov
lea
cld
outsl
sbb
inc
or
xor
daa
mov
mul
cmp
je
insb
add
aas
dec
outsb
add
sbb
dec
add
ret
mov
add
add
inc
pop
sarb
or
pop
mov
pop
shlb
add
pop
test
sub
or
xchg
and
mov
or
aam
lods
cmc
jb,pn
lock
incl
adc
test
dec
in
mov
add
mov
cld
sub
adc
pop
nop
in
rcrb
dec
loop
je
or
fadds
pslld
add
pop
jnp
xor
sbb
enter
adc
ds
mov
sub
repz
mov
lea
jb
hlt
add
mov
xchg
add
xchg
movsb
lods
add
mov
rclb
add
rorb
mov
mov
mov
movsl
loopne
or
movsl
sub
test
int
inc
mov
push
adc
push
lock
js
or
ud0
sbbb
lret
mov
push
jb
aad
xchg
pop
out
mov
scas
or
adc
xchg
or
in
nop
test
data16
mov
mov
out
push
sub
add
test
and
js
jecxz
pop
mov
arpl
xchg
push
jmp
jnp
test
add
or
je
out
adc
mov
out
mov
xchg
clc
rcrl
or
pushf
test
jo
push
fnstsw
enter
jb
sub
arpl
lods
jb
add
lahf
mov
adc
push
lret
fdiv
inc
shll
popf
js
sbb
xchg
shl
mov
sbb
pop
es
push
pop
bound
xchg
jg
pop
out
add
xchg
pop
mov
in
fidivs
mov
ds
sbb
sbb
jmp
sti
pop
pop
sub
es
mov
sub
into
mov
insb
mov
fcompl
push
push
add
jo
and
fiadds
shl
cmp
xor
lods
sbb
sbb
clc
dec
pop
jb
cld
dec
cmp
xor
dec
adc
rolb
aam
cwtl
cmp
cltd
mov
push
mov
push
or
rcrl
adc
test
add
add
jb
cmp
add
dec
in
pop
xor
dec
sub
xchg
xor
cmp
cmp
test
or
in
jb
or
xchg
lret
push
jmp
stc
out
daa
pop
adc
cmp
les
int3
gs
sbbl
rcr
mov
imulb
add
dec
mov
or
sahf
fsubrs
arpl
xchg
pop
out
in
push
loopne
inc
pusha
add
pop
mov
fwait
dec
xchg
pop
cmc
push
add
push
or
sahf
mov
pop
or
inc
and
dec
sbb
fdivrl
ucomiss
sbb
orb
les
call
popa
enter
xchg
in
out
and
mov
jg
and
inc
and
cmp
xor
sbb
enter
adc
enter
or
ret
or
clc
add
in
sbb
rorl
xor
add
cld
pop
lahf
pop
je
push
push
xchg
cmpsb
lock
cmp
orl
or
jmp
rcrb
stos
les
jmp
jmp
xchg
sub
add
xchg
xchg
cmp
mov
sbb
adc
mov
or
mov
pop
sub
sbb
cmp
outsl
andl
arpl
dec
lock
add
and
adc
push
add
xorl
pop
stos
decl
add
ss
sub
xchg
and
xchg
or
in
dec
sbb
push
xor
sbb
imul
sbb
loopne
cmpsb
lock
ja
adcb
and
insb
or
add
lcall
test
lret
popa
shlb
fstpt
outsb
movsb
cwtl
jge
add
dec
and
inc
or
imul
lea
xchg
lds
mov
pop
jo
int3
dec
rclb
xchg
add
stos
pop
xlat
scas
popf
mov
shll
js
mov
pop
inc
and
daa
xchg
add
push
adc
and
or
pop
dec
outsl
xor
in
sbb
adc
mov
or
mov
es
cmp
push
gs
inc
repz
mov
roll
mov
jbe
push
icebp
xor
out
and
dec
mov
pop
mov
fs
jo
add
add
and
test
mov
mov
mov
push
clc
mov
out
insl
orb
shlb
add
mov
dec
cmp
xchg
or
test
fidivs
cmp
jle
loop
add
add
push
xor
dec
roll
orb
mov
mov
fwait
mov
mov
mov
pop
xor
cmp
roll
sub
and
ds
xor
sbb
pushf
and
cld
movsl
sbb
inc
fcoml
scas
add
les
lds
pop
mov
pop
sbb
popf
dec
jbe
test
rcrl
icebp
or
cld
cmc
insl
push
addb
adc
sub
imul
push
jmp
mov
or
and
jae
jmp
pop
movsl
in
xor
mov
push
inc
test
insb
leave
xchg
add
inc
adc
js
mov
lods
mov
xchg
stc
fldpi
dec
adc
xchg
aam
or
sub
pop
in
jmp
inc
shll
adc
push
orl
mov
push
stos
orb
loope
jnp
mov
mov
adc
hlt
sbb
filds
ja
push
cmp
jae
push
imul
jmp
mov
test
dec
pop
xchg
mov
mov
cli
push
out
mov
mov
jo
cmp
test
sub
push
aaa
sub
lea
sbb
push
sub
sub
xor
insb
add
loope
out
mov
fcmove
xor
fldenv
shlb
mov
add
addl
lahf
test
repnz
cli
or
nop
or
jge
sti
shrb
dec
fwait
mov
dec
pop
cmp
lea
or
inc
mov
movb
jb
jb
imul
sbb
push
pop
xor
push
and
subl
and
add
pop
shrb
cmp
add
cmpsl
cmp
icebp
and
add
sub
mov
ja
repz
add
js
dec
mov
out
adc
imul
lds
cmp
insl
popa
push
popa
add
addb
push
in
mov
hlt
divb
and
add
addb
inc
adc
cmpsb
pop
xor
jne
ja
jp
sbb
mov
push
dec
cmpsb
fnsave
in
inc
push
inc
call
push
mov
push
adc
clc
jnp
rolb
lods
or
ja
and
sbb
add
push
mov
jo
stos
xor
mov
shrb
cmp
inc
jp
xor
cmp
push
and
jg
or
cmp
pop
xchg
xor
addl
mov
aas
rclb
cmpb
inc
pusha
pop
push
adc
xchg
ds
jne
push
mov
dec
orl
mov
mov
ja
adc
ljmp
call
pop
in
nop
sub
push
in
inc
adc
adc
pop
dec
in
adc
das
inc
repnz
mov
and
xor
add
adcl
repz
mov
ret
adc
sti
mov
ja
mov
lock
ds
push
sub
push
sarb
mov
mov
add
sub
mov
fs
fmuls
lods
adcl
or
jb
xor
test
jno
ret
inc
push
sub
dec
jg
aad
leave
mov
and
cmp
outsb
xchg
adc
aam
jp
mov
sbb
push
and
pop
and
cmc
mov
xchg
addl
js
mov
sub
test
jg
lret
lods
add
jmp
sub
jle
add
and
jmp
mov
ss
scas
xchg
jl
jp
cmp
or
sub
shl
fsubs
push
pop
xor
and
inc
sub
sub
lahf
addr16
nop
adcb
out
fisubrs
out
push
setg
icebp
push
inc
sub
das
popl
sbb
leave
add
mov
aas
aas
pop
aas
xchg
repnz
dec
push
or
mov
test
and
and
aaa
mov
mov
outsb
xchg
in
xchg
gs
testb
iret
sbb
jo
and
cmc
dec
xor
inc
mov
test
flds
inc
rolb
fcoms
cmp
pop
xor
push
push
or
push
movsl
test
negl
cmp
jecxz
xchg
lock
mov
jle
ret
roll
mov
arpl
pop
or
add
mov
xchg
jo
add
nop
sbb
or
je
loope
outsb
test
xor
dec
or
inc
insl
adc
je
xor
enter
jo
sbb
inc
mov
rol
inc
hlt
test
cld
pop
and
add
xchg
mov
mov
lods
add
jns
mov
jbe
xorb
mov
imul
mov
dec
or
jne
rclb
loop
js
xor
push
push
adc
mov
adcl
int
popa
cwtl
or
movsb
or
ss
push
sbb
test
mov
pop
enter
enter
pop
jl
push
pusha
mov
push
leave
in
call
lahf
movzbl
jmp
adcb
es
repz
mov
mov
fs
adc
push
or
sub
leave
out
or
push
out
mov
add
mov
fimull
mov
jbe
jmp
jbe
pmuludq
movsb
lock
clc
insb
push
movsl
outsb
arpl
mov
add
dec
pop
rorb
add
jp
lahf
icebp
xor
mov
test
dec
stc
jmp
int
adc
inc
push
mov
test
inc
enter
pop
into
in
mov
rcrb
sahf
or
mov
lods
pusha
mov
dec
imul
adc
fisubs
add
cld
fdivs
mov
mov
aad
add
outsl
xchg
mov
mov
mov
rcl
adc
jmp
cli
ja
ret
popf
sub
pop
or
push
ds
push
push
movsb
loopne
push
rorl
and
rcr
movsl
es
and
pop
push
sbb
pop
popa
inc
cmp
mov
loopne
and
add
push
mov
movsl
fdiv
inc
push
mov
cld
add
inc
pop
mov
xor
add
or
das
mov
test
jmp
sbbb
loope
bound
xchg
mov
addl
cmp
lret
xor
or
pop
jg
ficompl
lcall
fidivrl
jg
pop
sbb
or
cmp
aas
or
pop
test
inc
adc
loope
push
or
jmp
mov
ret
mov
mov
xor
dec
or
cld
push
je
dec
jne
rorl
cltd
imul
xor
adc
mov
bound
jmp
dec
into
inc
lds
call
std
sbb
add
push
jmp
cmp
pop
cmp
sub
mov
leave
dec
xor
jne
sbb
xor
pusha
cmp
or
dec
rcll
mov
sbb
jns
jp
mov
or
mov
rolb
sbb
push
in
dec
jle
xchg
lds
add
je
push
sub
ljmp
lock
sub
adc
dec
scas
adc
dec
test
sub
xor
add
mov
jnp
dec
mov
mov
push
push
xor
and
sub
cwtl
nop
incl
clc
or
inc
or
inc
mov
and
orb
test
lret
jle
add
sbb
dec
mov
xor
xor
movsb
int3
cmpsl
mov
push
mov
testb
pop
das
inc
or
pop
in
cli
or
and
aas
add
ret
dec
sub
mov
mov
pushf
pop
into
ret
mov
mov
cli
jbe
sub
nop
std
sub
jne
cmp
jbe
and
test
sbbb
ret
int3
inc
pop
push
jmp
sbb
adc
rcll
call
lret
imul
or
and
aas
fadds
pusha
imul
stos
mov
mov
pop
sbb
sbb
stos
pop
sbbb
scas
sbb
add
xor
or
cmp
orl
push
bound
cmp
je
mov
adc
das
or
dec
and
mov
push
lock
inc
pop
and
cltd
mov
cmp
and
push
mov
fwait
xchg
adcb
into
jg
subl
and
xor
dec
sub
cmpsb
imul
dec
imul
add
pusha
push
andl
pop
jmp
push
xor
sub
js
xchg
popa
outsl
pushf
pop
pop
test
cmc
outsb
mov
lods
fs
and
jb
and
sub
sub
inc
movb
xor
cmpb
mov
cmp
nop
dec
push
xchg
add
jecxz
cmp
loop
push
fucomp
incl
lea
mov
jmp
cmp
jae
add
loop
add
xchg
lret
divl
ds
in
mov
inc
rcrb
and
add
lret
mov
sbbb
fistps
cmpb
xor
in
je
fs
or
sbb
xor
xchg
inc
dec
mov
sbb
xchg
ds
and
mov
jb
adc
adc
cmp
ret
sti
push
mov
sbb
mov
test
push
insb
cmp
xchg
jmp
fdivl
test
dec
dec
sub
push
sbb
pop
pop
stc
mov
push
sbb
lahf
or
mov
lahf
push
cmpsb
jne
std
jmp
or
mov
push
jnp
ds
mov
jae
inc
mov
mov
rolb
sbb
xorb
lea
mov
sbb
aam
push
cmp
sbb
orb
mov
jae
imul
xchg
dec
rolb
mov
pop
mov
mov
aaa
div
sbb
int
test
test
jbe
pushf
cltd
sub
push
jmp
inc
loopne
xor
xor
inc
mov
xor
jo
pop
jb
pop
push
sbb
sub
loopne
add
mov
inc
inc
mov
xchg
sbb
push
mov
pop
mov
and
loopne
and
jo
stc
testl
sub
fucomp
jns
add
sbb
pop
jmp
push
cwtl
cmpl
and
or
pop
mov
fcompl
clc
xchg
jne
mov
scas
jge
xor
inc
pop
or
pushf
jle
dec
rolb
enter
add
jmp
clc
xchg
gs
mov
aam
jmp
je
jae
lea
or
xor
cwtl
pop
and
loope
mov
xor
sbb
mov
push
aad
and
sar
xchg
jp
push
jns
xor
mov
adc
or
aaa
mov
or
push
iret
mov
jle
push
sub
bnd
arpl
add
pop
jne
movsb
sub
xorps
stos
loopne
pusha
jne
cmpl
bound
ret
push
pushl
inc
push
xchg
fldl
sub
mov
sbb
iret
xorl
js,pn
sbb
sbb
rclb
dec
or
adc
mov
mov
test
mov
rclb
or
nop
fldt
inc
movsb
push
push
push
and
movl
aad
and
fs
pop
int3
cli
adc
lret
xor
in
inc
dec
in
in
mov
leave
pop
push
cmp
cmp
and
testb
je
adc
mov
sbbb
pop
scas
and
and
repnz
rcrb
jg
mov
jb
pop
xchg
mov
sub
movsl
movsl
loope
push
lds
push
mov
je
loop
or
pop
jne
add
inc
mov
out
adc
sub
cld
pop
mov
insb
in
lock
push
cmpsl
sbb
mov
push
sbb
fisttpll
sub
sti
in
in
adc
pop
sbb
and
fs
jecxz
pop
dec
and
sbb
mov
cmp
and
xchg
mov
and
lods
add
fadds
mov
add
add
and
mov
inc
outsl
ss
cmp
movsl
pop
test
or
jnp
add
and
das
mov
sbb
aaa
push
jb
orl
mov
sbb
stc
jnp
insb
insl
rclb
sbb
inc
push
icebp
jp
pop
sbb
lock
add
add
adc
sub
sub
lea
pop
stc
lods
mov
aaa
nop
or
push
adc
andb
fmull
sub
push
cmpl
pusha
or
es
sbb
sub
push
mov
inc
cli
das
push
daa
lods
lods
int
roll
shr
in
push
push
cmp
and
daa
inc
movsl
jbe
inc
jae
jbe
lock
in
or
cmpl
cmpb
rol
fs
ds
add
dec
sub
fiadds
add
or
mov
pop
movsl
shrl
sbb
addr16
or
test
dec
mov
cmp
leave
lea
add
push
sbb
mov
xor
xor
mov
lahf
lock
and
data16
adc
call
ss
mov
push
add
sbb
shlb
inc
pop
arpl
cmp
das
ret
mov
jo
push
push
or
xchg
mov
jl
hlt
sub
xor
or
inc
aas
or
lock
outsl
leave
and
in
dec
mov
add
push
sbb
lret
mov
lret
or
add
in
add
lret
or
stc
add
pop
pop
push
xchg
xchg
mov
jno
mov
or
stos
es
cmpsl
sbb
sbb
xchg
andl
fcoms
in
mov
push
inc
sbb
sbb
in
loopne
lcall
out
push
sbb
cmp
stos
pusha
xor
xor
push
dec
aad
imul
cmp
sbb
pop
mov
mov
arpl
cmpsb
and
inc
popf
dec
xlat
pop
scas
loopne
and
xor
xchg
lret
xor
lea
mov
xor
imul
mov
sub
rcrb
cltd
sbb
cmc
add
test
sub
lods
repz
mov
and
cwtl
js
xchg
int3
dec
push
mov
and
clc
dec
inc
mov
add
push
pushaw
inc
call
fcompl
jl
ret
push
adc
mov
lds
mov
jmp
pop
sub
push
loop
push
and
out
out
lds
add
fwait
xchg
mov
adc
pushf
mov
in
test
repnz
nop
add
add
add
jmp
xor
call
addl
movsb
mov
cmp
cmp
ret
add
mov
sub
enter
das
mov
and
add
adc
xor
movsl
mov
loope
cmp
pop
js
lret
stos
push
fsts
mov
sbb
mov
push
shlb
adc
add
test
inc
ss
fistl
mov
and
test
lcall
jge
in
mov
xor
xchg
inc
nop
inc
mov
mov
pop
sbb
loopne
rorb
lea
or
inc
rorb
inc
shl
lods
gs
dec
sbb
push
lods
cmp
sbb
or
inc
dec
rorb
mov
pop
xor
mov
xchg
push
push
jmp
inc
xchg
shlb
outsl
adc
fcomps
sub
cltd
insl
loopne
xchg
inc
sahf
and
adc
lret
shlb
mov
inc
lock
out
fwait
sbb
nop
mov
fs
dec
mov
push
inc
sahf
cwtl
insl
enter
adcl
pushf
popa
xchg
sbb
sbb
out
pushf
sbb
aam
sbb
jle
inc
dec
or
js
sbb
pop
shll
mov
inc
sub
cmc
add
jo
jnp
loope
lahf
push
pushl
or
and
and
and
cwtl
adc
subb
pop
repnz
test
push
enter
adc
sub
mov
push
and
dec
je
lods
rcr
xchg
or
test
xor
test
xchg
pop
jb
pusha
pop
push
nop
imul
dec
scas
dec
adc
pop
cmp
imul
inc
and
adc
and
jl
movsl
xor
dec
pop
mov
xchg
lods
sub
mov
or
and
dec
es
adc
pop
pop
sbb
insb
pop
sbb
outsl
pop
jmp
sbbb
push
sub
test
cltd
xchg
xchg
cmp
inc
cmpl
xor
push
jmp
cmp
jbe
add
sbb
ret
push
xorl
sti
push
pop
sbb
xchg
inc
sub
cs
mov
es
xor
or
mov
daa
mov
iret
shl
cmp
or
sub
sbbb
jne
mov
lea
rcll
inc
push
pop
and
xor
add
fadds
add
sbb
xor
pop
cmp
rcl
leave
add
inc
xchg
or
nop
mov
sub
push
nop
pop
pop
sub
push
fildl
mov
orl
rcrb
inc
sbb
push
sub
aas
cli
aam
movsb
data16
sub
cmp
sub
xor
mov
leave
sbbb
sbb
adc
lds
and
mov
adc
iret
subl
sbb
ds
sub
stc
aam
mov
imul
das
cmp
pushf
sub
push
out
push
sub
lea
mov
bound
test
out
jbe
sub
push
sbb
arpl
dec
andl
xchg
int3
jno
out
xor
adc
xor
xor
mov
leave
inc
enter
fidivs
mov
sbb
adc
mov
and
in
punpckhbw
add
ret
mov
inc
add
andb
sub
iret
movl
adc
mov
dec
insl
jmp
dec
pop
or
stc
add
mov
pusha
pop
sbbl
aaa
sbb
scas
mov
sti
fcoms
clc
mov
into
pop
or
dec
mov
cmp
dec
movhps
or
adc
nop
add
loop
add
cmp
int3
das
ret
test
add
test
cmc
xchg
add
dec
es
aas
xor
adc
xorl
pop
mov
test
fs
mov
int3
adc
clc
les
sahf
and
popa
inc
jg
enter
mov
push
ds
xor
and
cs
fsubrl
ficompl
addr16
cmc
pushf
add
cmpsb
mov
mov
mov
rclb
mov
rcrl
rcrb
mov
xchg
mov
xchg
sbb
dec
jns
shrb
xchg
jo
int
sub
ljmp
sub
inc
sub
dec
jge
ljmp
repz
jecxz
je
xor
sub
or
mov
adc
inc
dec
push
inc
inc
sub
xchg
lea
add
imul
sbb
and
rcll
js
adcb
inc
in
cmpb
and
sbb
fadds
add
mov
adc
shrl
dec
and
mov
add
xchg
add
push
adc
std
out
mov
push
loopne
sub
xchg
clc
xchg
mov
sub
cmp
idivb
cwtl
leave
mov
mov
push
push
dec
sbb
or
mov
lods
mov
push
mov
mov
and
jg
decb
mov
and
cmp
ret
jne
and
inc
cmp
loope
aas
jb
js
aaa
add
cmp
add
movsb
jb
clc
pop
push
add
add
dec
aaa
pushl
call
in
sub
push
imul
adc
mov
jp
xor
and
cmp
aam
sbb
push
test
add
sbbb
movsl
inc
scas
pop
rcll
lods
xchg
inc
mov
dec
outsl
int
or
inc
repnz
dec
stc
out
inc
xchg
cmp
and
or
cs
or
pop
adc
addr16
inc
or
or
pop
sub
sbb
inc
pusha
lock
or
and
dec
or
add
add
push
lock
adc
cmpsl
push
imul
scas
mov
pop
pushl
in
mov
daa
adc
mov
push
nop
add
ljmp
inc
pop
les
outsl
cmpsl
sbb
or
and
sbb
lods
mov
jp
adc
movsl
adc
adc
call
ljmp
movsl
and
inc
adc
or
leave
fcoms
adc
or
test
inc
mov
push
lahf
push
xchg
mov
xor
adcl
fdivr
xor
in
sbb
jns
mov
sbb
push
push
sbb
sbb
mov
xchg
mov
sbb
repz
push
cmp
lcall
jb
in
sbb
testb
mov
pop
ror
add
add
cmp
xchg
sbb
jp
stos
in
mov
inc
call
and
inc
xchg
std
imul
jne
sbb
rcll
or
sub
sarb
mov
pop
pop
push
mov
mov
arpl
inc
adc
movsl
ja
lcall
pop
jp
cmpsl
lock
add
inc
jb
stos
push
sti
mov
adc
outsl
pop
inc
inc
pop
push
dec
push
jecxz
push
aam
inc
es
sbb
push
xor
sub
inc
scas
pop
xor
inc
and
dec
xor
sub
push
das
cmp
testl
xor
xor
xor
movsb
pop
sub
pop
sub
cmp
sbb
aaa
mov
fwait
cmpsb
std
cmp
shll
fcompl
sarl
add
push
sub
dec
vcvtps2dq
fdivrs
push
pushf
adc
ret
jmp
loopne
and
mov
outsl
lcall
mov
les
pop
cmp
mov
mov
jb
sarb
xor
cmp
add
add
aam
ret
cmp
test
mov
push
mov
ret
xor
push
push
test
sti
adc
add
xchg
int
loopne
ja
push
ds
jnp
mov
dec
stos
dec
or
out
arpl
pop
push
ss
sub
ss
lods
movsl
sbb
leave
cmp
dec
loope
xor
jb
jl
inc
and
rcll
mov
jbe
cmp
jmp
sub
inc
pop
js
and
scas
sub
mov
xlat
jmp
xchg
lods
mov
cmp
insb
inc
mov
push
in
dec
pop
int3
mov
shlb
mov
cltd
jne
shlb
adc
inc
or
dec
out
lret
in
movsl
and
cmp
add
xor
and
inc
lods
mov
lods
and
push
inc
sub
pop
sbb
sbb
jb
sbbb
in
push
mov
xor
mov
je
fiaddl
or
sahf
mov
sub
dec
pop
mov
js
mov
test
xchg
mov
xchg
ficoms
ja
jp
mov
xor
sbb
sub
pop
or
dec
shll
dec
jb
sub
jnp
sub
enter
dec
push
bound
lahf
push
rol
or
adc
adc
jg
and
popf
push
das
push
test
push
pop
stos
outsb
xlat
and
ret
sbb
je
jns
jle
cs
xlat
or
ds
jg
xor
pop
in
jb
adc
push
adc
pop
push
or
pusha
pop
stos
ret
push
outsb
roll
xor
mov
and
push
add
bound
sub
push
rorl
dec
pop
int3
xchg
pop
nop
inc
dec
xchg
adc
jmp
sbb
xor
std
icebp
push
and
xor
fsubrl
aad
jg
in
pop
adc
xorb
enter
cmp
int3
jnp
sbb
fists
mov
popa
dec
shl
dec
es
xor
cld
sbb
pusha
push
xchg
xor
push
adc
ja
lret
fwait
mov
sub
cld
pop
inc
in
dec
pop
jle
dec
add
add
push
movd
mov
push
push
call
cmpb
jo
jge
cmpsb
das
mov
idivb
pop
fcmove
jl
cmp
and
pop
add
fldl
or
dec
jl
rcrl
push
lods
and
mov
pop
int3
jb
leave
inc
mov
xchg
aam
call
pop
pop
pop
ror
fs
dec
mov
and
movsb
cli
xchg
xor
jnp
test
fsubrl
add
xchg
cmpsb
or
xor
in
pop
sbb
mov
bound
push
inc
jg
jmp
sub
pop
fistpll
insb
daa
pop
inc
je
decb
jmp
inc
inc
jl
mov
aam
mov
pop
into
aad
test
out
add
lea
sbb
jne
inc
js
sbb
andl
pop
and
xor
cmp
fiadds
ret
orl
bound
insb
inc
je
and
push
rclb
inc
lods
int
out
adc
sub
aaa
sub
push
test
arpl
jge
mov
xchg
imull
add
push
sbb
addb
or
xor
add
inc
mov
shlb
pop
jae
cmp
sub
rcrb
test
std
mov
cmp
rcrb
inc
push
jns
lock
in
mov
inc
xor
push
sbb
call
adc
pop
dec
loopne
subb
or
or
fadd
addr16
sub
jle
and
pushw
pop
inc
stos
push
in
jge
inc
pusha
and
push
push
hlt
cmpsl
test
push
je
pusha
in
or
mov
sbb
stos
jo
or
fdivrl
xor
ss
jmp
lods
push
and
loopne
push
sbb
pop
sbb
pushf
mov
and
and
incl
pushf
es
jae
sub
mov
add
mov
push
sbb
dec
inc
mov
cmc
mov
dec
movb
loop
push
jae
sbb
mov
dec
add
insb
cmp
jo
pop
dec
dec
sbb
fstps
mov
lods
xor
sbb
adc
and
and
mov
movl
or
dec
inc
push
cmp
push
push
ret
test
mov
rorb
test
fs
popf
xor
sub
outsl
and
cmp
pop
jnp
inc
insb
inc
cmp
pop
jo
cmpl
sbb
cmp
adc
ret
xor
cmpsb
loope
adc
movl
scas
int3
adc
push
lcall
outsb
xor
insb
sub
push
sbb
mov
sahf
fildl
and
or
pop
imul
sbb
es
pop
mov
inc
and
js
rcll
fisubl
movsl
cwtl
pop
rcrl
sbb
xchg
out
adc
jmp
in
xor
ljmp
mov
jp
cmp
inc
ja
add
dec
inc
inc
ja
and
fldenv
stos
inc
push
mov
xor
or
lcall
clc
rolb
arpl
out
or
pop
mov
mov
std
mov
gs
mov
aaa
push
adc
and
test
and
out
mov
std
sbb
add
movsl
loop
fldenv
adc
dec
mov
inc
mov
sbb
add
loopne
pop
das
dec
add
pop
xor
adc
fmuls
nop
sub
xor
inc
lods
push
and
lock
add
lods
push
daa
pusha
or
inc
loope
ret
fistl
or
dec
push
sub
add
push
cmp
mov
xchg
test
sbb
fisubrs
fmull
add
adc
decl
mov
mov
or
or
je
push
inc
jns
enter
dec
mov
rcrb
hlt
jne
push
fidivrs
test
je
cmc
pop
pop
cvtps2pi
xchg
je
and
cmp
push
mov
enter
clc
adc
jno
mov
xchg
or
pusha
fdivs
mov
cmp
push
stc
adc
mov
dec
loope
test
cwtl
test
mov
cmp
add
pop
in
loopne
push
push
adc
adc
mov
aaa
in
sub
enter
je
xchg
add
lea
lods
xor
push
add
mov
sub
movsb
or
popl
in
inc
pop
ret
nop
dec
inc
fidivrs
sbb
add
add
sbb
les
lea
call
xor
add
add
sbbl
sbb
hlt
es
stos
arpl
and
xchg
aaa
hlt
incb
xor
jp
sar
inc
or
lcall
jo
faddl
cld
rclb
lret
inc
mov
inc
imul
inc
add
stc
lock
inc
xchg
pause
clc
je
inc
push
and
sub
and
das
adc
fcmovnu
sub
pop
sbb
mov
add
and
nop
sub
lock
and
bound
cld
adc
daa
xchg
pushf
add
sub
lock
push
add
aaa
push
in
adc
stos
in
mov
pop
xchg
xor
mov
les
inc
loopne
jb
add
aad
inc
xchg
dec
sub
add
sub
and
incb
xchg
sbb
sub
hlt
or
addl
scas
inc
pusha
aad
adc
or
jl
mov
cmp
frstor
dec
sbb
in
sbb
rorb
clc
loope
gs
jne
adc
repnz
sahf
hlt
inc
addr16
popa
xor
sbb
and
mov
lret
loopne
inc
xchg
and
or
mov
sahf
fsubs
loopne
dec
aaa
or
inc
push
testl
movsl
sahf
pusha
leave
dec
dec
mov
dec
popf
rcl
sub
mov
jmp
push
lcall
inc
and
and
pop
xor
adc
mov
mov
jle
je
nop
lea
fcompl
bound
and
stc
loop
in
sub
cmp
mov
push
sub
rclb
jle
add
adcl
rcr
sbb
cmp
add
mov
jo
dec
cmpsb
push
inc
repnz
xor
push
inc
push
es
push
jmp
nop
jp
pop
enter
daa
int3
mov
adc
adc
jbe
and
dec
mov
dec
inc
inc
and
lock
adc
inc
mov
dec
jne
or
push
push
inc
mov
cmp
sbb
add
push
sbb
add
test
dec
hlt
in
pop
add
inc
jg
dec
stc
pop
iret
mov
enter
mov
imul
dec
or
push
cld
add
push
testl
pusha
loopne
ljmp
jecxz
mov
adc
mov
lea
sub
loopne
add
out
outsb
ret
mov
insl
push
push
es
or
xchg
mov
js
push
push
mov
push
mov
incl
xor
clc
mov
sub
sub
add
or
dec
mov
cmp
sbb
sar
imul
cltd
xchg
ljmp
test
movsb
mov
or
sbbl
outsb
and
in
inc
pop
aad
inc
jmp
mov
push
incl
jne
cmp
jne
orl
sbb
xor
lahf
jl
jne
inc
dec
cmp
insb
dec
leave
jmp
or
ret
inc
inc
push
xchg
cld
cmp
add
ret
or
mov
stc
or
in
mov
jle
cmp
pop
clc
or
pushl
aam
movsl
sub
xor
mov
push
call
fimuls
xor
shrl
mov
mov
push
xchg
inc
adc
mov
filds
and
sub
adc
push
or
fwait
js
sbb
or
jg
jp
sbb
jbe
aaa
mov
adc
aad
scas
sub
jbe
pushl
and
je
lahf
lods
dec
ds
mov
gs
push
jmp
movsl
cmp
cmp
fisttpll
mov
fidivl
or
jnp
je
pushf
jecxz
inc
daa
mov
ds
testl
sbb
rcrl
js
test
cmpb
pop
jne
xchg
mov
sub
jg
sub
sbb
push
push
pop
inc
cmp
movsb
int3
xor
daa
cmp
xchg
mov
push
push
mov
dec
cmp
xlat
inc
popf
add
sub
clc
dec
jge
or
out
push
lea
adc
add
inc
sbb
push
fimull
cmpsb
sbb
icebp
push
std
les
jo
stos
mov
out
sbbb
cmpsb
and
jno
sub
inc
pop
aam
add
dec
rclb
mov
in
sub
dec
cli
cmp
sbb
js
adc
pop
mov
and
dec
mov
xor
pusha
and
mov
mov
fisubl
cmp
mov
fs
jmp
push
add
mov
dec
mov
mov
dec
and
sub
lret
adc
mov
dec
add
pop
test
dec
cmp
mov
pusha
lcall
sbb
or
inc
adc
aas
dec
cmpsb
inc
rcr
dec
mov
dec
dec
fdiv
mov
add
rol
dec
adc
or
push
loop
push
push
inc
xor
scas
mov
gs
test
sbb
and
xor
add
pusha
into
test
dec
adcb
add
shufps
cmpsb
mov
sub
stc
add
test
call
addb
pop
cmpb
xchg
fdivl
in
into
inc
addr16
mov
pop
fwait
cmp
aam
push
filds
leave
push
aas
pop
fldt
loopne
cmp
push
mov
leave
and
or
lock
push
push
aad
pop
cmpl
xchg
fcoms
sbb
xchg
push
outsl
leave
aam
adc
xchg
dec
xor
test
cmp
add
leave
outsl
jnp
inc
outsb
ss
or
sbb
subl
inc
cs
mov
mov
fmull
push
in
push
pop
mov
jne
cmp
pushf
and
and
add
sbb
cs
push
push
icebp
test
mov
mov
jo
or
sbb
test
imul
daa
cmp
push
sub
inc
push
or
into
pop
clc
cmp
pushf
out
cmp
test
mov
sub
xchg
xchg
out
cld
loop
pop
mov
jns
push
fmuls
loope
test
and
dec
jbe
push
sbb
shrl
ret
imul
and
fiaddl
dec
mov
pop
loopne
in
or
and
ret
int
cmp
mov
or
std
rorb
push
cmpsl
mov
dec
adc
stos
and
ret
pushf
or
mov
js
xor
cmp
push
enter
sbb
mov
inc
cmp
lock
imul
push
jo
or
js
or
xchg
sub
sub
cmp
or
jmp
sub
jb
xchg
sbb
push
or
movsb
leave
and
or
adc
jecxz
lods
push
inc
andb
pop
mov
add
dec
xor
dec
fistl
ror
add
test
loope
mov
pop
dec
and
jnp
das
shl
pop
dec
or
cmp
mov
add
push
push
loope
mov
mov
mov
or
cmp
cmp
jns
mov
movsl
mov
jns
add
xor
inc
loopne
ret
adc
cmp
jmp
mov
shlb
mov
jmp
insb
mov
add
jae
adc
dec
ret
ret
mov
add
sbb
andb
cmpsl
loope
sbb
mov
push
lcall
ficomps
sqrtps
push
pop
mov
lea
ret
mov
dec
pop
pop
sub
cmp
jne
inc
scas
cs
lods
into
or
add
sbb
lret
sub
sub
xor
push
add
repz
or
pop
andps
fwait
sub
popf
push
leave
add
cmp
push
push
and
lahf
push
mov
loope
xchg
in
inc
or
test
mov
mov
mov
xor
xchg
sub
bound
aam
pop
gs
mov
inc
test
es
orl
xor
in
cmp
sub
and
test
and
sub
cmpsl
push
add
call
cld
dec
dec
or
jns
fdiv
add
jmp
dec
sub
sbb
stos
idiv
cld
xchg
inc
negb
fidivs
xor
pusha
es
push
or
out
dec
mov
pop
push
pop
mov
sbb
cmp
mov
inc
cmp
lcall
rcrb
sbb
xor
and
mov
loope
jne
jge
movsb
pop
adc
add
cmp
pop
and
insb
add
push
sbb
sbb
jl
xor
scas
pop
pop
cmp
adc
or
lea
iret
test
pop
in
sbb
jns
mov
sbb
or
pop
js
lods
lea
push
rorl
out
push
fwait
push
push
int
cmp
sbb
and
outsl
rcrb
push
pop
iret
sar
popf
add
jmp
push
xor
cmpb
test
dec
adc
imul
xor
out
or
dec
pop
push
stos
popa
pop
lea
jle
pop
loope
inc
dec
adc
or
dec
pop
add
or
js
and
pop
inc
sub
jb
and
sub
pop
pop
pop
push
loopne
cs
ret
pop
aam
jne
mov
nop
leave
xor
push
movb
push
sbb
and
cmp
cmp
sti
repnz
scas
fmull
add
mov
xchg
inc
mov
add
jge
push
jge
cmc
rclb
pop
jns
xchg
lock
xchg
out
mulb
push
push
mov
lret
push
or
and
jmp
add
repz
push
loopne
loopne
mov
mov
xor
sbb
cmpb
scas
add
inc
sub
dec
add
sbb
pop
mov
adc
mov
sbb
and
cltd
shll
lds
add
in
add
aam
mov
push
inc
cmpb
aaa
cmpb
inc
jecxz
jp
test
push
cs
xchg
and
sub
idiv
or
add
ret
clc
sub
cmp
pop
jl
pop
xor
or
and
dec
add
fdivl
mov
ficoml
cmp
adc
jae
call
test
cltd
aam
fdivrl
push
push
mov
ret
loopne
dec
test
lea
loope
mov
insb
pop
jae
sub
add
outsb
popa
add
mov
push
sti
or
adc
jo
pop
and
xchg
cmpsb
std
cmp
movsl
mov
test
hlt
and
negb
sub
out
and
enter
pop
or
ds
jmp
dec
adc
and
shll
and
pusha
bnd
arpl
or
push
es
mov
push
xor
xor
jl
push
xchg
test
icebp
pop
movsl
scas
je
mov
test
xchg
repnz
inc
cmp
jb
pop
pop
movups
adc
adc
clc
mov
sbb
mov
push
cmpsb
add
push
leave
rolb
je
jmp
incl
xor
and
jmp
cmp
jne
xor
inc
pop
in
rcrb
out
stos
push
mov
sahf
out
adc
xchg
mov
adc
push
mov
adc
icebp
lahf
es
mov
inc
data16
adc
push
add
iret
shl
push
xor
adc
cmpl
jne
xor
test
mov
ss
in
cs
test
test
dec
ret
leave
dec
inc
and
loope
or
xchg
adc
into
add
xchg
add
add
push
mov
push
xchg
js
push
cmp
adc
not
mov
fwait
aaa
jne
roll
sub
out
adc
cmp
add
fstp
push
stos
mov
sub
push
adcb
push
or
dec
or
dec
hlt
sbb
mov
cs
xor
and
daa
inc
mov
jl
cmp
or
aam
aam
jns
imul
add
push
orl
jecxz
xchg
addl
faddl
jl
gs
jb
sti
std
cwtl
sarl
decl
iret
push
push
mov
sub
addb
and
mov
test
xchg
and
lods
inc
sbb
dec
adc
outsl
push
sbb
adc
xor
hlt
cmp
mov
cwtl
or
shlb
shrl
gs
or
sub
xor
fsubrp
jmp
call
jbe
dec
loop
dec
shrl
cmpsb
insb
ljmp
out
mov
data16
or
mov
ret
into
iret
jne
adc
push
dec
cmp
movaps
mov
push
in
or
xchg
loop
aaa
xchg
sbb
aam
sub
sbb
pop
mov
or
stos
push
sub
lahf
mov
sub
or
shlb
or
inc
and
fwait
inc
movsb
cmp
fcmovb
sub
dec
xorw
lock
inc
add
scas
dec
mov
fstpt
push
mov
mov
xor
in
enter
pop
push
mov
and
loop
testb
incl
hlt
ds
jne
cmpl
adc
mov
test
lock
ss
push
xchg
pop
leave
jnp
out
fisttpll
mov
sbb
xchg
mov
lock
push
lods
mov
lret
shl
cmc
int3
test
fidivl
popa
mov
leave
sub
adc
cld
add
jl
jno
je
lock
sbb
sub
aas
push
mov
icebp
cwtl
xor
cs
sbb
bound
add
jmp
andl
leave
in
sbb
loope
sbb
je
add
push
jb
and
pop
repz
loopne
push
sbb
aam
mov
xor
push
sub
ror
pop
jl
iret
in
pusha
and
lahf
and
pop
pop
cmp
je
jmp
ja
aaa
xlat
sub
popa
outsb
adc
add
jle
pop
rolb
mov
in
dec
push
call
xchg
xchg
fmull
sbb
add
push
sub
outsl
dec
mov
add
mov
mov
movsb
aad
int3
lahf
je
sbb
repnz
pop
jmp
call
and
push
pop
dec
jmp
ss
cmp
sub
call
inc
call
and
shlb
icebp
in
loopne
sbb
test
sbb
or
mov
add
jo
sbbl
cli
xor
mov
lea
push
mov
ret
loope
inc
add
add
inc
sti
mov
pusha
in
es
cli
push
fwait
lock
pushf
stos
int3
cmpl
push
push
test
jbe
jmp
leave
push
push
icebp
std
test
stos
push
loopne
push
mov
popl
sbb
mov
mov
inc
je
popa
jg
adc
dec
inc
lods
dec
adc
lock
subl
je
roll
or
lcall
dec
push
adc
call
xor
mov
in
sbb
shrb
inc
dec
das
push
hlt
inc
incl
stc
xchg
adc
in
call
and
loop
inc
mov
cmpl
and
mov
cli
mov
pop
or
sub
push
sub
push
mov
inc
cmp
inc
or
mov
cwtl
xchg
xor
out
cmpsb
pushf
add
cwtl
cwtl
add
shlb
scas
lahf
mov
push
je
add
mov
dec
pop
push
ss
pop
je
adc
add
push
movsl
cmp
rclb
mov
push
push
adc
push
adc
mov
and
negb
ret
shl
popf
iret
int
adc
int3
fst
or
adc
mov
cwtl
adc
xchg
jmp
cmpsl
dec
cmp
cmp
push
push
mov
jae
fildll
push
popf
xor
add
hlt
shr
and
xor
negl
sub
incb
mov
dec
add
dec
or
pusha
mov
pop
and
cmp
mov
cltd
test
idivb
push
rolb
scas
mov
cmpsb
sub
sub
imul
push
or
ljmp
cmp
movsl
pop
out
hlt
es
aad
cmp
ret
test
fadds
push
orl
call
push
daa
and
cmp
mov
mul
xor
sub
mov
add
setb
clc
roll
int3
test
sbb
adc
je
inc
mov
je
inc
add
test
add
jns
jmp
adc
jae
sbb
call
push
fsubrl
scas
lods
jo
dec
or
mov
or
mov
jbe
scas
faddl
test
add
sub
movsb
pop
add
test
imulb
and
loopne
push
xor
push
xchg
stos
in
mov
jo
sub
mov
xor
mov
fisubs
ret
inc
nop
inc
inc
sub
xchg
ljmp
and
pop
push
jnp
pop
scas
xorl
addb
mov
cmpsb
adc
adcl
sub
test
jb
push
lea
aaa
dec
fidivrl
push
adc
adc
xor
mov
addb
add
lcall
and
sub
repnz
sub
jecxz
and
ljmp
inc
loopne
lock
sbb
sbb
mov
pop
in
mov
in
cs
mov
mov
shll
cmp
jb
push
adc
jae
inc
andl
sbb
xorl
xor
push
data16
mov
sbb
cmpsl
mov
push
mov
mov
jge
popf
cmp
jg
add
inc
sarl
rol
sbb
jo
xchg
into
pusha
cmp
cli
jg
push
cmp
cmp
nop
xchg
mov
jmp
outsl
push
or
mov
mov
push
shr
popf
adc
or
xchg
pop
jmp
pop
andl
loope
out
fnsave
jp,pt
mov
leave
add
sbb
pop
js
xchg
adc
call
add
push
push
push
push
add
dec
inc
popf
cmp
sbbb
dec
cs
xor
jle
add
insb
lock
inc
fstl
adc
mov
pop
jl
or
push
push
mov
and
fwait
inc
jae
aam
push
push
push
flds
mov
pusha
push
mov
ds
pop
data16
sbb
mov
xchg
pop
xchg
and
shll
push
xor
jmp
add
add
sbbl
popf
jmp
push
jbe
fnstsw
mov
in
push
jg
scas
add
fidivrl
add
shr
sub
mov
or
pop
imul
mov
dec
pop
movb
not
xchg
push
mov
daa
mov
enter
inc
or
jae
mov
push
push
jae
arpl
iret
repz
push
je
in
xlat
sahf
inc
or
push
or
push
insb
jne
or
cmp
push
push
push
adc
and
inc
sbb
cmp
fidivs
push
inc
clc
add
inc
mov
fisttpl
popf
pop
sub
xchg
adc
cmp
es
jle
mov
and
or
or
mov
aas
test
fwait
jne
nop
cwtl
in
enter
enter
aam
xor
pusha
push
and
movb
les
xchg
jmp
push
iret
dec
add
xchg
jnp
inc
cmp
out
push
sub
mov
rorl
xchg
rclb
cmp
sbb
push
dec
push
fucom
nop
and
sbb
push
out
inc
jecxz
sub
sbb
xor
and
or
fstpl
push
test
jae
xor
rcr
call
add
ret
aad
and
jne
std
popf
jle
mov
or
mov
mov
movsb
sti
sahf
xorb
add
push
inc
mov
sbb
xchg
rcrb
shll
test
lea
je
cmp
push
es
and
subl
adc
mov
mov
mov
ret
jbe
jle
or
lcall
sbb
cmp
xor
shll
fs
dec
shll
mov
test
fsubr
mov
adc
loop
sti
or
and
inc
int3
jp
arpl
inc
mov
scas
rcr
add
pop
push
mov
sub
mov
jnp
add
xchg
int
adc
ret
and
and
lea
xchg
pushl
int3
xlat
xchg
add
fadds
jl
js
orb
jo
or
orb
pusha
push
or
adcb
mov
push
pop
ret
add
cltd
xor
and
es
clc
adc
dec
es
adc
or
adc
and
push
icebp
inc
cld
cmp
jne
pop
push
xor
test
dec
pcmpeqw
cwtl
add
or
lea
adc
or
pop
jae
repnz
pop
mov
xor
popa
add
mov
jae
jmp
cmp
sbb
pop
xor
jb
jne
cs
push
add
ror
test
inc
loopne
rcrl
xor
mov
cli
push
ja
loopne
aas
movb
jne
mov
jb
mov
add
shr
xor
mov
push
cmp
dec
inc
cmp
and
xchg
add
js
rcr
sub
cs
adc
in
xor
pusha
pop
add
cmp
push
shl
inc
loope
jp
push
rorl
mov
call
add
pop
fmull
shr
and
test
and
push
pop
add
cmp
jmp
ret
lcall
cmp
pop
jne
lea
add
pop
mov
test
pusha
shlb
xlat
push
clc
lret
notb
adc
out
test
cmpl
mov
fdivrs
insl
or
adc
test
jb
je
add
adc
or
or
stc
add
and
frstor
out
add
loopne
fmul
iret
cmp
cltd
mov
push
stc
lcall
fcoml
sub
shlb
ret
roll
mov
stc
push
adc
xchg
pop
mov
stc
or
dec
shl
clc
push
stc
push
push
push
je
icebp
jne
leave
cmpsl
jge
xor
ja
mulb
sub
mov
int3
cmpsb
cmp
push
mov
and
dec
jge
cwtl
iret
js
repnz
xchg
lods
outsb
aaa
or
ret
adc
shrb
mov
inc
ret
mov
jne
lret
clc
imul
cmp
mov
cld
jg
fsubr
jmp
cmp
nop
scas
or
jmp
test
sbb
push
sar
or
xor
push
fadds
dec
or
nop
pop
aas
cmp
push
push
xchg
cmp
xchg
es
and
rolb
push
imul
movsb
add
adc
push
push
cmp
sbb
lods
cmpsb
pop
jecxz
mov
test
sbb
incb
mov
xchg
inc
jmp
fwait
or
cmp
add
sub
rolb
into
int
mov
add
ds
adc
loop
or
pop
pop
pop
cmp
out
cmp
notl
add
sbb
adc
sbb
lods
gs
push
gs
je
pop
push
sbb
fs
pusha
insb
xchg
xchg
inc
inc
insb
push
or
movsb
add
sub
or
movb
or
ss
and
cmp
divb
shrb
pop
add
enter
aam
push
cmp
pop
fsub
iret
je
xor
mov
addr16
push
lock
push
sub
or
sub
inc
pop
xchg
jmp
lea
inc
fmull
add
sbb
int
or
dec
lock
add
lock
lock
cmpsl
out
xor
jmp
and
into
ficoml
pusha
in
adc
sbb
cmp
push
dec
ss
movsb
push
fcompl
mov
jg
mov
add
push
mov
clc
cmpsb
mov
xchg
lea
ficoml
push
lret
mov
cs
add
push
inc
xchg
out
xor
shlb
cmpsl
into
rorl
mov
loopne
testb
and
jne
sahf
add
jb
xchg
adc
in
orl
test
and
les
loopne
sbb
subl
push
adc
call
mov
push
sbb
adcl
or
pop
jl
push
push
jge
jne
mov
xchg
inc
mov
xchg
pushw
jle
mov
shr
popa
push
lods
fildll
pop
fcoml
sbb
push
xor
xchg
fsubrs
inc
es
jne
xchg
stos
or
mov
mov
xchg
mov
cwtl
fidivrs
sub
lods
sub
inc
test
sub
fimuls
mov
je
sbb
pop
fisubs
add
pusha
xchg
xor
push
push
and
dec
push
lea
mov
cwtl
push
adc
sub
aam
rcl
popl
or
imul
in
lods
add
adc
pushf
fcmovnu
xchg
loope
loopne
or
and
push
shrb
pop
xchg
sbb
lock
sbb
adc
imul
loopne
pop
pop
arpl
mov
sub
aad
shrl
sbb
inc
push
mov
out
lea
adc
ja
into
into
inc
clc
movsb
cmc
cmp
mov
xor
push
adc
cmp
jp
add
ret
nop
je
inc
jo
dec
sub
cmp
je
sub
ja
lock
aaa
fsubrs
ret
push
jge
sbb
jg
adc
test
push
cmpb
jo
xor
xchg
sub
push
sbb
add
andb
inc
sbb
or
push
mov
adc
add
pop
xor
test
inc
or
push
test
pusha
pop
or
pop
ret
loope
xor
push
pop
into
jecxz
nop
mov
lock
fs
and
adc
loopne
dec
data16
in
cmp
sarl
loope
add
xchg
lret
jl
or
inc
verr
sbb
dec
gs
cmp
cmp
fwait
sbb
adc
mov
nop
jecxz
loope
mov
in
jo
cmp
push
out
pop
movb
xor
push
test
push
shlb
mov
adc
pop
add
popa
mov
aaa
ret
mov
sub
mov
jo
lret
test
add
push
pop
mov
xchg
sarl
scas
rcl
fstps
mov
cmp
mov
xlat
lret
pop
mov
loopne
push
mov
ret
push
cli
or
xlat
ss
mov
aaa
push
xchg
popa
lock
inc
xor
lock
adc
insl
cmc
inc
int
mov
inc
and
inc
pop
ljmp
js
aaa
outsl
pop
out
movb
xor
ret
mov
jne
dec
inc
or
jne
imul
int
dec
push
insb
movsb
mov
das
inc
popf
inc
cmp
jnp
cmp
push
dec
shrb
decl
push
sbb
icebp
rcrb
mov
mov
dec
push
xor
ret
push
push
gs
mov
xor
mov
xor
mov
scas
or
jp
push
push
jbe
aas
adc
mov
out
cmp
daa
or
sbb
ds
rclb
les
jl
js
aad
nop
push
cli
imul
std
and
stos
out
shll
cmp
orb
inc
dec
je
adc
lods
add
push
fcmovb
sbbb
cli
decl
aam
push
sbb
xor
rcrb
mov
pop
xorb
mov
push
daa
loop
call
sbb
dec
dec
cmp
xchg
ret
adc
mov
xchg
dec
je
out
ds
sbb
data16
sarb
push
loope
roll
outsb
sarb
mov
sbb
mov
dec
xor
call
or
adc
push
and
jmp
mov
scas
xchg
jns
ljmp
jle
xor
mov
sub
push
lea
push
mov
push
jo
pop
jmp
xchg
fimuls
cli
mov
xchg
out
or
int
push
and
int3
ficomps
cwtl
fbld
out
in
inc
or
ret
filds
cs
add
ficompl
rclb
cmp
ret
or
pop
xor
and
loope
mov
xchg
movsb
lcall
pop
mov
inc
js
xchg
mov
xor
push
xor
add
add
packssdw
fwait
daa
dec
adcl
add
inc
lcall
insb
xor
sahf
pop
inc
xchg
xor
lock
daa
inc
jne
lock
int
sbb
fidivrl
push
jmp
add
fimull
cltd
push
pop
mov
std
insb
push
cwtl
loop
lea
and
lahf
loopne
test
cmc
ss
push
test
test
and
and
orl
mov
pop
pop
pop
jae
inc
imulb
adc
mov
mov
jl
andl
adc
mov
adc
push
test
and
scas
je
cltd
add
pusha
dec
xlat
inc
or
cltd
adc
mov
xor
pop
sahf
push
pop
or
mov
sbb
adc
add
xor
add
jb
dec
movsb
shll
aad
jl
cltd
push
jno
in
test
sbb
loope
mov
fdivrl
out
test
push
mov
inc
pop
inc
shl
cmp
sub
jl
or
mov
subb
adc
push
in
icebp
push
sbb
shr
pop
add
loopne
insb
dec
dec
adc
outsb
js
adc
push
inc
push
push
push
adc
inc
push
addb
imul
or
jo
jmp
addl
pop
shrb
xor
inc
cs
jecxz
push
shll
lods
mov
pop
sub
rorl
adc
outsl
aaa
jmp
cmp
cmp
cmp
pop
mov
imul
ret
add
add
testb
or
or
ffree
mov
jg
mov
sbbb
lea
dec
fsub
add
or
or
xchg
jo
mov
inc
cmpsb
sbb
js
push
dec
rcrb
push
lock
ss
mov
mov
sbb
mov
lret
mov
mov
pushf
mov
add
addl
cltd
mov
mov
inc
cmp
subb
lea
cltd
xchg
popf
enter
inc
lahf
aaa
add
pop
enter
lods
aaa
push
mov
push
xor
push
push
test
xchg
pop
sub
or
mov
imull
rol
filds
xchg
clc
insl
mov
lods
cmp
jne
scas
mov
pop
loop
mov
outsb
and
icebp
imul
jecxz
out
push
mov
and
and
and
add
and
mov
mov
xor
and
jge
and
jmp
or
enter
fcoml
lods
ret
neg
xchg
pushw
pushf
xchg
inc
xlat
adc
out
sahf
mov
dec
pop
fsubrl
neg
adc
mov
inc
adc
inc
push
jp
push
sub
mov
pop
test
adcl
movl
andb
adc
dec
loope
ja
mov
mov
shlb
cmp
rorb
jmp
nop
push
push
lea
cmpsl
hlt
add
dec
mov
pop
pop
xchg
popa
cltd
negl
cwtl
inc
push
or
clc
loop
neg
data16
jmp
push
adc
dec
add
popa
mov
inc
xor
xchg
lret
pop
add
or
pop
inc
and
aas
pushf
jne
testb
dec
xchg
add
popa
pop
sbb
add
in
cmp
xor
out
and
inc
leave
aaa
inc
lods
push
addl
cmp
imul
pop
mov
xor
cmp
je
mov
xor
push
add
aas
pop
mov
inc
cmpsb
daa
add
jno
cmpsl
or
push
pop
lods
xchg
sbb
jmp
or
pop
ss
sti
xor
add
xchg
xor
push
dec
mov
leave
sub
sti
stos
out
and
sahf
jbe
fcoml
movsl
aam
incb
lods
shrb
mov
push
mov
cmc
mov
ljmp
inc
je
es
ret
or
jbe
pop
clc
xor
cmp
in
add
int3
cmp
je
mov
sbb
mov
xchg
pop
mov
or
jae
push
cmpsb
mov
add
mov
sbb
jp
dec
insb
and
dec
sub
lahf
cmpb
data16
notl
scas
cmc
in
or
insb
mov
mull
shlb
cmp
lods
sub
test
adc
sbb
cmp
or
jge
adc
sbb
mov
cld
aaa
adc
cmp
sbb
mov
xchg
jns
push
loope
sub
popa
mov
dec
aam
lea
xor
dec
push
ret
xchg
cmpsb
fcoms
push
les
pusha
or
add
xorl
push
pop
and
mov
cwtl
hlt
aas
pushl
lods
fidivrl
fdivrs
cmpl
int3
and
xor
in
mov
movb
inc
in
mov
sbb
pop
adc
inc
insb
shr
mov
loop
inc
add
sti
push
pop
xor
into
dec
adc
cmp
push
sbb
mov
inc
xchg
sbb
cmpsb
addr16
insb
std
mov
in
jecxz
dec
dec
lret
dec
int
and
imul
jb
jge
dec
and
push
fs
adc
mov
enter
sbb
push
push
pop
adc
inc
hlt
rcrb
xchg
jne
jl
and
xor
jno
ror
mov
xor
not
je
mov
lods
jnp
orb
push
dec
sub
adc
mov
mov
push
mov
lock
add
addb
sti
xor
orb
shlb
push
mov
inc
add
xlat
or
pop
sbb
adc
mov
imul
push
sbb
pop
lods
fldl
test
insb
insb
sbb
loope
mov
inc
es
xor
ud0
mov
xchg
daa
sub
testb
movb
xor
dec
cs
push
cmp
push
sub
add
inc
xor
loop
pop
dec
sub
ss
jbe
test
adc
add
lock
cmpsl
sub
mov
mov
aam
scas
push
pop
mov
and
pop
ret
mov
xor
pop
adc
or
mov
jecxz
dec
sub
dec
in
xor
or
cwtl
jmp
push
orl
pusha
testb
sbb
mov
xor
adc
and
pop
ret
std
dec
jo
jno
add
jns
je
push
adc
repnz
and
rclb
fistl
sub
or
sbb
mov
push
lea
cmp
push
ds
pop
and
mov
gs
aaa
pop
nop
cmp
ret
push
cmp
push
in
lea
jl
pop
insb
mov
decb
inc
jb
in
sub
push
push
xchg
nop
adc
sbb
sub
mov
pop
fs
nop
push
arpl
test
cwtl
daa
lods
add
pusha
or
adc
mov
les
xor
dec
xlat
je
idivl
jecxz
mov
js
sub
pop
ds
dec
inc
adc
les
push
ror
jp
loopne
pop
testl
dec
je
out
rcrb
inc
and
xchg
iret
pushf
call
or
shlb
jno
out
push
dec
or
mov
cmpb
push
xchg
adc
inc
lret
xorl
repz
add
and
out
dec
out
sub
aam
test
imul
pushf
add
hlt
sub
cmp
mov
jmp
popf
je
add
icebp
lock
cmpsb
testl
popa
je
jle
sbb
cmp
mov
push
les
xor
jae
loope
dec
lret
mov
cmp
and
insb
dec
add
imul
or
or
jg
or
jae
push
push
in
mov
pop
rorb
es
jl
movl
pop
pop
push
push
add
les
add
cltd
rcl
xor
les
ret
rolb
scas
mov
mov
mov
in
dec
push
mov
bound
push
gs
inc
lret
jb
mov
mov
cs
push
add
int
jae
cmpl
mov
push
rolb
mov
sti
subl
sbb
sub
lods
int
inc
and
dec
pop
lods
push
popa
sahf
mov
add
pop
lret
mov
add
lds
inc
sub
aaa
adc
push
mov
push
cmp
mov
sti
sub
mov
xor
xchg
cmp
sbb
aad
daa
sub
dec
sti
inc
and
pop
in
inc
cmc
add
mov
or
int
insl
es
xor
xchg
scas
jo
lcall
or
push
push
add
in
pop
dec
ja
mov
push
push
es
add
rol
dec
pop
add
imul
dec
lcall
adc
add
testb
rcrl
lock
xchg
push
and
cmp
decl
in
andl
xchg
cmc
outsl
loop
fucomi
fbld
cmp
ja
je
or
je
or
sub
imul
jbe
adc
mov
adc
loope
jge
add
or
js
jne
lcall
dec
rolb
jmp
cmp
inc
je
push
adc
adc
push
xor
inc
es
ret
rol
popa
adc
ret
inc
sbb
xchg
mov
mov
sub
call
cli
cmp
mov
lock
and
jg
adc
gs
sub
sbb
je
ret
or
jp
fwait
sbb
inc
in
or
adc
adc
dec
enter
sbb
mov
test
mov
addb
or
mov
rolb
add
adc
mov
push
cltd
imul
clc
aaa
enter
jp
addl
sub
ljmp
insb
adc
add
pusha
data16
in
das
mov
mov
stos
daa
or
mov
adc
sub
sbb
adc
and
xor
out
mov
dec
push
or
cmp
sbb
lock
xor
movl
push
dec
enter
and
push
adc
mov
movsl
push
sub
jge
pop
xor
pop
ss
movsb
inc
push
sbb
cwtl
in
mov
pusha
mov
cli
sbb
adc
fdivrl
notl
add
and
fcomp
addr16
xor
hlt
das
xor
push
sub
push
inc
push
inc
push
pop
push
dec
xor
popa
in
push
mov
adc
cmpsb
movsb
leave
sbb
enter
loopne
xchg
aad
sub
test
xor
xchg
cmp
push
imul
sbb
cmp
push
push
test
adc
cmp
ds
jne
add
mov
mov
xchg
test
inc
lcall
xchg
jmp
mov
adc
aaa
add
jnp
push
add
fwait
int
gs
lea
les
xor
and
jecxz
iret
xchg
push
enter
mov
push
xchg
and
fs
cmpsb
ret
ret
rorb
pop
ret
push
cltd
enter
adc
cmp
ret
sbb
sahf
dec
xor
clc
fistl
inc
push
xlat
lods
adc
cmc
jns
and
xor
jae
mov
jge
loopne
push
push
xchg
lcallw
ja
mov
in
ljmp
xchg
xchg
add
aam
push
jb
add
fmul
xor
sbb
push
stos
or
rcll
clc
aaa
add
aas
add
push
xchg
je
pop
xchg
mov
fs
sbb
and
mov
imul
xor
ret
sar
inc
rorb
xor
pmaxub
sbb
push
jno
mov
adc
xor
sahf
push
adc
jmp
ljmp
add
fstpt
sbb
mov
out
mov
lock
xchg
js
fisubl
mov
sbb
mov
js
sbb
add
or
popa
push
jecxz
inc
notl
sbb
shl
mov
dec
jae
jo
pushf
xor
dec
jb
or
adc
cmp
and
mov
jo
iret
sar
dec
sub
hlt
jb
push
mov
dec
push
adc
adc
loop
popa
dec
bound
out
inc
arpl
mov
cs
push
inc
adc
stc
xchg
mov
int
mov
jne
push
xor
inc
enter
into
mov
mov
inc
or
jae
sbb
xchg
push
lahf
dec
mov
sub
nop
push
cmpsb
xchg
sub
rolb
lods
data16
cwtl
mov
fcoms
movsb
pop
les
sub
daa
inc
push
cs
dec
xchg
sbb
cmpsb
je
and
shll
add
and
orl
add
sarl
jle
or
mov
add
loop
stos
jns
mov
sbb
dec
and
inc
ljmp
clc
cmp
aas
xor
mov
add
push
mov
xchg
add
mov
lret
xchg
sub
cmp
mov
and
pusha
push
cmpsl
push
or
push
aas
pop
dec
movsl
cmp
call
xchg
popf
inc
cmp
mov
mov
pop
incl
add
clc
iret
popf
aas
rcrl
decl
xor
xor
inc
push
sti
dec
ret
sub
cli
sbb
inc
dec
and
dec
xor
into
pop
enter
mov
or
sbb
cmpsb
add
add
pop
push
inc
mulb
jbe
or
sbb
popl
sbb
sbb
mov
push
xorl
push
add
cmp
nopl
inc
cmp
add
addl
cmpb
fsubr
push
popf
pop
jmp
and
push
or
pushf
ret
push
push
push
pop
mov
rcrb
test
mov
out
inc
jl
cmp
call
mov
cmp
repnz
inc
inc
mov
xchg
in
add
or
js
pusha
add
adc
rolb
xchg
daa
push
fiadds
jg
sti
je
loop
rcl
add
test
push
fildl
std
addl
xchg
lds
and
lock
pop
or
jmp
push
adc
movsb
dec
sbb
inc
adc
mov
ds
lea
or
jno
push
dec
pusha
push
je
and
sbb
call
jo
or
sub
push
push
add
dec
ret
jl
mov
data16
vucomiss
sbb
mov
mov
sarb
sbb
xchg
mov
push
inc
add
ret
push
insl
movsl
rorb
mov
xlat
or
mov
push
jle,pn
cmpl
inc
lea
adc
pop
rclb
rorb
mov
fiadds
jle
lcall
test
jnp
or
imul
adc
jge
or
into
add
adc
lock
jle
push
hlt
jge
mov
xor
cltd
mov
les
aad
cmp
sub
pop
push
jp
jl
mov
incb
sbb
lds
push
movsb
jb
es
mov
imulb
test
mov
pop
loopne
inc
sbb
fcmovbe
stos
cwtl
xchg
add
sarl
cli
adc
or
add
sti
sbb
inc
les
sbb
mov
push
out
cmp
int
and
sbb
rorl
jnp
xor
rcl
aaa
stos
or
jne
jbe
jge
or
lods
out
es
into
hlt
je
loop
sbb
inc
sbb
call
add
cmpsb
rcrl
push
adcb
push
ss
add
add
outsl
push
jl
je
cmp
push
xchg
xchg
ljmp
adc
pusha
vucomiss
dec
je
data16
cmp
adc
cwtl
add
loopne
jbe
sar
and
add
shll
enter
inc
dec
dec
dec
hlt
add
pop
add
mov
or
push
cmp
push
pop
das
clc
mov
push
adc
sarb
xchg
xor
push
and
pop
xchg
cwtl
and
cld
sbbl
inc
test
inc
sub
in
cmp
dec
pop
sbb
rorl
subb
nop
adc
jb
or
mov
mov
jmp
inc
fiadds
sub
pop
and
imul
push
add
int
sti
movsl
dec
push
add
ficoml
jmp
push
arpl
adc
aas
adc
and
lea
push
add
or
add
and
in
out
pop
fildl
enter
jmp
mov
nop
push
add
nop
or
out
adcl
in
aaa
sub
pop
add
mov
ss
add
adc
lods
test
fsubr
or
movsl
cmp
push
adc
and
push
pop
mov
sbb
dec
push
fiadds
dec
clc
mov
and
sbb
and
jle
push
push
and
andl
mov
push
add
push
enter
mov
lret
sub
or
xchg
rcll
popl
pop
and
and
xor
sbb
adc
sub
push
mov
shlb
push
enter
cmp
dec
in
adc
sbb
test
xchg
cmp
add
push
out
inc
mov
cmp
or
xor
das
shll
xchg
or
and
out
addl
jo
adc
sub
and
push
inc
sbb
mov
nop
dec
dec
xchg
adc
daa
aad
and
or
in
push
in
sbb
mov
or
push
push
push
dec
sbb
add
push
mov
mov
popa
and
xchg
mov
faddl
and
pushf
in
mov
dec
popf
cmpb
loope
cmpsb
nop
add
imul
incl
sub
jne
push
push
cmp
and
push
icebp
sbb
xor
adc
xchg
es
xchg
add
rolb
add
and
xor
push
mov
filds
daa
push
or
xchg
lock
mov
inc
mov
and
dec
jl
push
movsl
add
mov
mov
and
ss
adc
push
insb
add
xor
int3
lea
hlt
adc
xchg
jae
push
add
mov
sarl
cltd
sarb
jge
jl
pop
aaa
movsb
add
dec
push
and
xor
add
dec
inc
or
inc
or
add
imul
push
push
inc
das
push
add
mov
pop
and
or
call
dec
jp
dec
mov
push
shl
pop
cmp
jne
mov
add
jg
mov
dec
test
ficoms
aam
data16
mov
jecxz
add
sub
lret
stos
fidivl
or
xor
fwait
cmp
cli
aaa
sub
inc
pop
push
imul
arpl
iret
cmpl
fdivrs
push
mov
ja
sbb
add
call
mov
mov
sahf
or
jge
jmp
jge
aam
cmp
cmp
pop
jecxz
xor
subps
sbb
and
pop
sbb
in
jbe
push
mov
mov
xchg
jle
fldt
add
sub
ja
pop
add
pop
mov
mov
adc
sti
dec
inc
nop
mov
ficoms
jbe
jecxz
and
or
daa
jp
xor
shll
fsubl
nop
and
enter
repz
fdivr
pushl
fs
push
mov
cmovle
sarl
ja
out
jmp
hlt
mov
dec
xor
xchg
ljmp
pop
sub
adc
add
call
imul
sbbb
faddl
js
lock
adc
sub
jns
add
loope
xor
cmp
mov
or
xlat
scas
dec
and
fadds
inc
hlt
test
mov
push
cld
lcall
out
shll
push
leave
push
xor
lret
sbb
push
xor
pop
fwait
add
fstpt
xchg
add
mov
notb
cmp
addl
inc
push
add
inc
inc
or
mov
jns
mov
cld
cmc
dec
push
je
cmp
push
dec
and
cmp
scas
dec
push
push
cmp
sub
mov
adc
loopne
push
dec
stc
add
test
push
std
sti
pop
sbb
cmp
jo
add
mov
cmp
adc
cmp
push
inc
lock
push
sub
shlb
jmp
ja
fs
sbb
leave
inc
adc
js
xor
pusha
mov
xchg
sub
lea
xchg
xchg
out
in
push
jp
mov
adc
dec
xor
enter
scas
enter
sbb
sub
push
inc
sub
mov
xor
pop
xchg
dec
add
inc
test
pop
inc
in
add
dec
incb
sarb
add
ja
push
push
pop
xchg
adcl
xchg
incb
insb
mov
push
aam
rolb
xchg
pop
lods
data16
je
push
pop
xchg
mov
pop
push
cmp
arpl
clc
push
adc
and
daa
push
mov
adc
lret
push
jmp
sbb
pop
test
subb
mov
or
or
jg
jp
sti
cmp
fdivs
cmpsl
or
fiadds
lods
rcll
xchg
sbb
sbb
iret
or
ret
popf
push
sub
outsl
outsl
sub
mov
or
or
add
sahf
test
lea
pop
cmp
lea
mov
pop
popa
jmp
push
inc
and
xchg
or
and
sbb
mov
jecxz
pusha
xorl
fmull
add
inc
aaa
jno
les
sub
push
add
or
lahf
iret
mov
in
cmp
pop
mov
adc
jo
rorl
or
sysret
lock
ret
push
imul
scas
push
push
rolb
lods
test
sub
push
push
sbb
add
adc
adcl
sub
dec
add
pop
push
popf
sub
push
mov
mov
push
pop
ret
out
test
mov
lock
cwtl
lea
movsl
ret
data16
lock
fcoml
hlt
xchg
sahf
sub
stos
xchg
inc
xchg
mov
sub
inc
sub
cwtl
pop
iret
mov
pusha
leave
add
and
push
add
adc
test
pop
or
or
push
testl
dec
cmp
lret
mov
jbe
adc
xor
pop
pop
sbb
pop
jg
mov
xchg
or
fadd
orb
cmc
jae
pminsw
loopne
add
jns
dec
in
popa
xor
int3
adc
in
pop
mov
stos
or
add
push
and
or
xor
es
dec
sarb
cmp
mov
mov
push
cmp
mov
pop
push
mov
jo
mov
rolb
cmp
xor
cli
push
sub
sbb
push
push
sbb
pop
dec
xor
or
dec
push
or
sbb
add
adcl
or
stos
scas
hlt
add
test
dec
repnz
push
add
int
and
shr
imul
push
clc
sarl
hlt
cmp
inc
ljmp
cld
lock
call
movsb
cld
sub
mov
fs
xchg
inc
xchg
insl
adc
cmp
jmp
and
sbb
adc
lea
ret
push
xor
imul
inc
inc
cmp
jb
cmp
imul
dec
and
xchg
cs
adc
add
mulb
and
add
or
xor
mov
inc
imul
mov
xor
in
shlb
clc
fs
je
jne
inc
imul
mov
push
lods
testb
xchg
mov
cltd
push
leave
pop
mov
dec
or
pusha
je
xor
sub
imul
mov
loopne
inc
push
mov
inc
movsl
pop
mov
jl
test
int3
push
imul
jg
sbb
mov
mov
sub
add
ret
mov
mov
or
cmp
push
outsl
repz
ss
les
shr
not
je
mov
sub
in
cmp
and
add
push
xor
data16
push
jne
xchg
xchg
or
rolb
aaa
push
cmpb
aam
mov
in
cld
xor
xor
cmp
pop
stc
repnz
faddl
adc
dec
add
hlt
and
sti
movb
movl
lock
sbb
add
addr16
cmp
inc
movsl
sub
jge
mov
data16
decl
andb
jno
popf
mov
aaa
sub
add
dec
inc
dec
mov
adc
ljmp
rclb
jo
xchg
into
mov
jb
adc
push
sub
icebp
pop
or
outsb
xchg
jno
es
scas
insl
inc
push
add
repnz
cmpsb
or
imul
testb
movb
loope
sbbl
add
scas
lret
icebp
or
mov
loopne
xor
push
loop
aad
sub
cmp
cmp
lods
mov
inc
or
xchg
test
je
ret
pusha
std
add
je
ja
cmp
mov
sbb
lret
adc
add
adc
gs
dec
mov
dec
mov
or
adc
and
push
popa
or
xchg
cmp
fs
adc
pop
jne
pop
cmp
sub
popf
mov
push
or
inc
in
imul
pop
sti
rep
bound
pop
fsubs
sub
inc
js
or
sbb
cmp
jae
dec
shlb
loope
add
sub
inc
sbb
mov
arpl
fisubrl
jnp
and
jne
in
and
inc
push
push
mov
int3
cmpsb
xlat
push
and
push
mov
scas
and
loopne
adc
push
or
pop
mov
mov
adc
xchg
mov
lock
cmp
pop
inc
pushf
fsts
mov
cwtl
xchg
btr
mov
test
enter
jne
ficompl
xor
test
and
call
and
push
adc
and
std
push
inc
dec
ss
fs
and
loope
out
lcall
notb
lock
je
insb
test
pop
mov
add
cs
and
xor
xchg
ret
inc
mov
shl
shlb
cld
sub
inc
data16
sarb
into
mov
inc
pop
mov
mov
in
mov
cmp
pop
test
or
xor
xor
pop
inc
inc
lret
loop
push
jnp
pop
sub
add
adc
push
push
mull
inc
sub
inc
ja
inc
mov
mov
pop
cmp
ret
rol
inc
call
jg
push
das
rclb
mov
push
pusha
ljmp
mov
mov
mov
fcompl
lock
pop
adc
jno
incl
daa
dec
mov
ja
or
pop
and
cmp
xor
sbb
push
and
pop
pop
out
add
fs
sbb
clc
sbb
data16
orl
sbb
imul
sarb
dec
jne
into
loopne
mov
inc
popa
lods
insb
add
ret
add
lods
push
sub
lock
sbb
or
int3
and
mov
cmp
scas
push
mov
jge
je
data16
adcb
add
ds
cmp
testl
push
lcall
sbb
sub
das
jo
stos
inc
jo
loopne
icebp
xor
mov
lret
push
sbb
xlat
mov
xlat
ret
adc
xchg
xorb
mov
or
jmp
xor
add
adc
lods
dec
mov
test
or
mov
pop
mov
pop
mov
jle
add
sbb
dec
loopne
pop
clc
adc
arpl
push
loop
adc
pop
insb
jge
shl
es
orl
and
adc
and
add
mov
ds
cmp
xchg
xchg
push
jp
mov
jo
sbb
xlat
adc
insl
push
adc
mov
push
shll
or
cmp
ret
bound
dec
adc
push
loope
mov
adcb
cmp
je
call
sub
jg
dec
call
pop
sub
shl
clc
clc
add
clc
jbe
or
add
add
hlt
jmp
ret
inc
mov
pusha
in
inc
ret
pop
js
add
jecxz
mov
inc
xchg
push
movb
mov
mov
sbb
shll
inc
ljmp
inc
push
insl
and
rol
mov
inc
or
and
ja
sbb
cmpl
es
xchg
fiaddl
icebp
fcmovne
mov
mov
cmp
xor
cmp
pop
or
hlt
jl
mov
in
mov
jne
pop
pop
and
lea
cmpsb
inc
addr16
or
lods
add
or
add
stos
xchg
inc
or
or
rcrl
pop
leave
jo
jns
in
xchg
pop
or
je
arpl
scas
mov
add
dec
or
rcrl
lds
fwait
jns
sbbl
adc
push
lret
testb
stos
and
fistpl
jmp
dec
ss
cmc
push
in
push
arpl
dec
add
jne
sub
outsb
sar
mov
mov
mov
add
call
jae
jb
pushl
or
loopne
mov
pop
or
jmp
xor
jae
and
es
mov
mov
pop
ret
adc
imul
icebp
jmp
mov
sub
arpl
adc
les
out
insl
sub
mov
sub
cltd
in
sub
adc
dec
int
adc
inc
and
xor
test
pop
imul
mov
push
shrl
sub
jne
push
ret
xor
mov
or
mov
stos
in
push
cmp
sbb
or
and
movsb
mov
jmp
or
cmp
sbb
or
popf
dec
push
add
leave
jb
daa
dec
outsb
pop
in
add
ss
or
adc
and
addr16
mov
sub
mov
cmp
dec
call
jb
sub
dec
add
lods
add
dec
cmp
out
popl
inc
das
addb
or
push
into
or
mov
arpl
dec
pop
repnz
cmp
and
xchg
mov
jecxz
push
add
add
inc
push
nop
test
xchg
sarb
dec
adcl
int3
sti
jae
mov
mov
lods
add
xor
and
imul
scas
push
add
in
and
add
in
xchg
and
in
cmp
add
in
cmpb
or
daa
sbb
sbbb
push
sub
cs
push
push
fcomps
int3
cmp
pop
push
and
inc
push
scas
or
and
and
xor
shrb
pop
jne
cmp
pop
mov
mov
loope
jmp
sub
jecxz
fadd
cmp
sub
or
pusha
push
lea
xor
outsl
es
adc
mov
adc
sbb
pop
add
jle
dec
loopne
xchg
cmpsb
mov
and
add
adc
inc
adc
mov
add
push
add
adc
and
and
das
pop
adc
lea
add
sbb
scas
jo
movsl
adc
aas
aaa
push
jge
mov
pop
pop
jge
mov
and
pop
sarb
push
push
pusha
mov
xchg
push
adc
inc
and
and
sub
mov
cmpl
pop
fildl
in
jge
and
shrl
int
mov
mov
or
repnz
pop
cmp
sbb
rorb
data16
push
ficoml
out
inc
jmp
push
fistpl
add
fsubrl
add
push
and
cmpsb
adc
lock
enter
cmp
add
mov
pusha
and
and
pop
xor
jne
push
inc
add
mov
popf
mov
add
adc
out
or
xchg
mulb
xor
in
mov
lock
mov
sbb
pop
xor
push
xor
mov
stos
push
jl
sub
or
sbb
outsl
ret
and
lods
xor
daa
add
incb
ds
orb
in
ret
mov
and
dec
xorl
int3
sbb
xor
sub
fwait
mov
xor
jmp
add
inc
test
sub
sbb
dec
adc
dec
movsl
scas
fucomi
fmuls
or
jmp
cmp
xor
xchg
mov
sub
lock
jne
add
jmp
mov
add
inc
loop
xor
push
dec
cmp
jg
jnp
test
neg
and
add
pop
sbb
mov
or
cmovg
sahf
sub
add
add
loopne
lock
or
loope
ror
pop
lods
jb
push
adc
push
push
push
pop
lods
je
jae
pop
fld
or
rolb
add
mov
cmp
mov
inc
fstpt
lock
andl
add
cltd
test
mov
loop
push
das
or
lock
inc
inc
bound
or
push
adc
iret
xchg
fsubrl
mov
lret
and
mov
nop
xchg
mov
insl
mov
push
adc
sbb
and
inc
cmp
call
std
add
or
fildl
fwait
push
and
fsts
adc
sbb
push
sahf
enter
sub
in
push
jmp
xor
xor
inc
out
sbb
or
push
inc
sub
jge
out
push
pop
fidivl
pop
repz
xor
sub
lahf
and
test
in
rorl
popa
mov
or
lcall
insl
sub
dec
jmp
adc
cs
mov
mov
add
and
test
push
mov
lock
incl
cmp
jl
cmp
jle
cmp
push
jp
or
pop
adcl
cmp
mov
add
mov
test
jge
mov
pop
and
cmp
jl
fdivs
adc
into
push
mov
inc
out
push
mov
add
rol
hlt
iret
and
cs
add
sbb
mov
testl
rorb
inc
sbb
sub
dec
aam
mov
xor
enter
xorb
sarb
loopne
jmp
in
add
mov
mov
rcrb
add
inc
mov
mov
lock
push
pop
rorb
stos
pusha
pop
sbb
jno
xorl
mov
jae
lret
mov
push
and
push
dec
aam
push
xchg
mov
test
inc
cmp
mov
push
lret
in
or
mov
fisubrs
push
daa
clc
in
pop
mov
shlb
pop
fisubrl
jb
mov
pop
test
adc
popa
sub
push
sarb
sub
rolb
loopne
ret
xchg
xor
mov
xor
sbb
or
mov
sub
or
push
add
cli
cmp
mov
pop
or
adc
or
dec
pusha
jo
mov
push
pop
adc
pop
lds
sub
xor
mov
into
cmp
inc
cmp
das
test
inc
das
notb
add
pop
adc
push
push
push
or
push
pop
pop
or
pop
pusha
or
lcall
and
cmp
jecxz
jle
mov
out
push
jge
xchg
popa
lret
xor
cmp
mov
sub
jl
cltd
pop
add
sbb
aam
add
inc
inc
pop
movsl
add
mov
jecxz
pop
and
jo
or
inc
gs
movl
pop
mov
inc
dec
sahf
push
int3
and
add
add
or
pop
jno
push
inc
pop
ljmp
lret
and
nop
add
push
in
adc
testl
jne
nop
pop
rclb
icebp
dec
sti
xchg
ret
sbbb
inc
jl
aaa
popf
outsb
jle
and
fs
inc
or
inc
push
outsl
loope
andl
sbb
inc
xchg
xlat
les
aad
inc
adc
xor
sbb
pop
fisttps
add
and
inc
lock
ds
jbe
jmp
outsl
por
mov
and
add
xchg
and
add
fwait
adc
pop
push
stc
movsb
inc
jmp
inc
pop
pop
cmp
jne
jmp
gs
es
in
xor
test
sbb
test
es
out
or
icebp
and
adc
dec
stos
pop
inc
les
mov
andb
adc
adc
or
test
jmp
setp
adcb
icebp
lahf
cld
loopne
push
add
adc
and
mov
sbb
xchg
fmull
scas
pop
fadd
adc
cmc
and
cltd
adc
and
sti
leave
or
mov
clc
and
add
out
je
cmp
lds
jle
and
pop
push
call
adc
lods
push
mov
push
jno
mov
adc
adc
add
xchg
jne
xor
pusha
jbe
or
je
out
pop
jnp
push
jle
dec
add
and
imul
les
mov
dec
insb
mov
jne
lods
fcoml
push
repnz
jmp
and
sbb
jne
xchg
nopl
and
xor
fst
or
repz
jo
insb
addr16
fcmovnb
pop
lret
xor
fdivrs
add
cltd
les
inc
jmp
push
push
pop
mov
mov
mov
fdivrl
cmp
inc
rorl
mov
aas
dec
add
stos
cld
jecxz
loope
jno
inc
jnp
addl
pop
jo
xor
dec
cmp
and
pushf
test
and
stos
push
stos
and
fdivrs
mov
andb
insl
push
xchg
arpl
sub
mov
cmc
xchg
xchg
push
mov
pop
and
mov
repz
push
js
adc
add
aam
sbb
sub
lret
test
sti
push
or
pop
push
push
mov
rorl
fsubr
or
aam
sub
mov
xor
jl
xchg
push
hlt
jg
mov
ja
and
jb
xor
mov
pop
jmp
inc
adc
sub
push
js
push
dec
sahf
stos
push
mov
xor
dec
pop
pop
or
sub
or
repz
or
sub
lea
mov
add
adc
sahf
or
cmp
push
test
pusha
sahf
lcall
pop
adc
call
shrl
or
clc
push
adc
add
sub
dec
jns
or
and
add
sub
inc
dec
scas
cmpsb
test
insb
add
jo
pop
orb
add
xchg
cmp
pop
mov
push
xor
lock
dec
out
xchg
addb
pop
pop
inc
and
int
sbbb
and
push
or
or
in
jo
or
jns
pop
cld
and
push
or
jmp
dec
xorb
pop
push
lret
mov
mov
jo
bound
push
inc
add
rcl
mov
sub
push
and
or
sbb
mov
mov
xchg
ds
and
or
dec
popa
jo
mov
cs
adc
fldl
imul
and
push
cmpb
mov
sbb
jae
jae
in
adc
sbb
inc
in
cmp
inc
sbb
inc
jp
test
ret
xchg
shlb
int3
daa
sub
pavgw
stos
push
incl
nop
add
lods
les
pop
test
add
dec
nop
pop
negl
sub
or
push
and
mov
loopne
push
push
js
push
fdivrs
stos
push
pop
je
fldl
ja
fnsave
and
in
mov
or
shrb
iret
repz
adc
jne
push
divb
or
lock
iret
jne
or
jne
or
cli
flds
sub
fldz
or
pop
andl
xchg
dec
add
sub
cmp
cmp
inc
dec
test
mov
adcl
and
jnp
out
mov
nop
leave
and
das
mov
fdivl
test
lea
push
dec
and
fstl
jecxz
fsubs
into
or
scas
mov
decl
push
xlat
or
cs
jae
and
ret
inc
lea
mov
notb
add
pop
jg
and
push
fists
cwtl
cmp
cwtl
das
adc
cmp
imul
jecxz
sbb
push
push
push
ljmp
xchg
cmpsb
loopne
sti
movsl
pandn
or
lcall
push
inc
sbb
xor
xor
adc
push
inc
adc
or
test
fsubr
mov
or
pop
pop
nop
mov
test
aas
adc
adc
mov
jbe
test
or
push
jo
sub
xor
xor
and
jbe
les
push
pop
push
push
or
cli
add
mov
ljmp
push
xchg
adc
enter
pop
insl
aaa
mov
push
inc
cld
inc
adc
adc
xchg
sub
loopne
lods
pop
iret
add
stc
adc
aaa
clc
cltd
and
ds
nop
xor
push
add
adc
mov
adc
mov
lds
add
xorb
push
sub
lods
fwait
push
lret
add
cmpsl
loope
insb
pop
mov
fwait
or
mov
imul
imul
push
sbb
mov
fs
adc
jno
add
mov
out
add
enter
push
add
and
xor
les
shrb
xlat
jnp
adc
mov
or
xor
or
or
dec
push
sbb
inc
sbb
adc
inc
inc
jo
loopne
dec
test
es
bswap
enter
in
call
mov
adc
in
inc
pop
dec
push
pop
or
shlb
int3
xchg
xchg
dec
xor
rclb
mov
popf
andb
add
pusha
mov
sub
lcall
das
pop
imul
add
lret
sub
sbb
insl
mov
pop
push
xchg
cmp
mov
repz
add
and
ret
js
sbb
mov
push
int
pop
pop
mov
lods
gs
cmpsb
les
adc
add
fsts
push
flds
cmpsb
in
mov
fwait
lock
adc
jbe
repnz
xor
aad
lret
xor
je
ret
jb
sahf
test
inc
pop
or
test
call
ret
cmp
jl
ret
xor
push
cmp
pusha
popa
cmp
loopne
inc
mov
call
mov
enter
add
add
pusha
add
pandn
pusha
sbb
pop
mov
rolb
imul
dec
sub
push
mov
inc
es
adc
inc
sub
inc
and
and
mov
fldcw
inc
adcb
rclb
inc
mov
push
pop
inc
jmp
das
ret
cmp
pusha
add
insl
add
lcall
inc
push
rorb
shlb
and
imul
in
mov
xor
movsb
in
in
xor
mov
dec
fmull
add
add
dec
les
pop
psllw
and
and
imul
das
pop
paddsw
mov
jne
out
lret
add
cmp
dec
stos
repnz
sbb
sbb
pop
loope
mov
or
mov
mov
xor
mov
iret
sarb
mov
push
fwait
sub
mov
out
and
dec
enter
add
adcb
push
pop
jle
adc
and
add
xchg
xor
popf
pusha
mov
jns
cs
cmp
xor
inc
sarl
or
push
xor
subl
pushf
lcall
and
push
add
mov
psubb
mov
int
cmp
xorl
mov
add
xor
pop
dec
mov
movsl
sub
push
insl
fmul
or
sub
lldt
cltd
out
push
dec
sbb
sub
loope
movl
psrlw
adc
adc
xchg
add
push
add
dec
test
pop
insb
xor
int3
xor
push
movsl
sbb
push
push
stc
outsb
xor
lods
je
lea
cmc
xor
push
pop
or
xor
xor
jnp
mov
push
loop
xchg
inc
dec
out
or
add
pop
add
nop
sub
inc
ret
push
mov
pushf
mov
sbb
in
orb
mov
sbb
xlat
fisttpl
cmp
sbb
and
add
arpl
or
xchg
mov
cmp
test
mov
je
sub
dec
xor
test
mov
aam
repz
cmp
push
mov
adcb
jns
mov
pop
sub
dec
insl
movsl
push
xchg
or
rcrl
push
push
xchg
addb
xchg
aad
xchg
or
jnp
fmuls
andb
or
and
sub
cmp
movsb
push
push
push
fbld
mov
and
pop
xchg
ljmp
outsb
rolb
popf
mov
outsl
xchg
add
jbe
mov
mov
and
cmp
mov
add
pop
or
jo
cmovb
inc
push
sbb
shll
fistl
dec
cmp
and
push
xor
xchg
add
inc
stos
out
movsl
repz
stos
sbbl
and
sub
adc
xchg
xchg
adc
lahf
ds
cmpsb
popa
and
shrl
cmc
pop
xor
jg
mov
xlat
push
pop
xor
jle
rclb
mov
cmpsl
pushl
cmp
aad
shll
or
lods
fdivs
add
popa
jno
push
int
mov
and
push
xchg
adc
xchg
cmp
adc
push
insl
and
jecxz
add
jge
push
add
aaa
push
pushf
jnp
lods
rcrl
add
test
clc
test
ret
ljmp
out
add
stc
adc
aaa
call
rol
sbb
and
stos
sbb
and
or
or
call
add
push
test
sub
cld
les
repnz
mov
pop
aam
mov
or
das
aad
cmp
mov
rcrb
sub
dec
dec
shlb
push
or
jle
xor
sahf
pop
lea
adc
pop
add
sbb
cmc
lea
incb
xor
inc
inc
sub
lcall
adc
imul
add
aam
inc
jecxz
inc
push
and
dec
addr16
and
pop
push
inc
aam
pop
int3
mov
or
shr
sbb
pop
push
sub
addr16
mov
sbb
mov
dec
stos
arpl
jp
subl
popa
mov
mov
or
fdivs
pop
push
cmp
lea
push
sub
out
pop
push
jne
add
inc
sub
popa
push
and
adc
cli
mov
push
loopne
jg
cmp
jbe
cld
adc
and
adc
mov
mov
shl
fimull
and
add
rol
add
popa
adc
sbb
adc
mov
jne
shrb
outsl
call
sub
sbb
push
jle
sub
add
mov
or
cwtl
pop
mov
fisubs
cmpsb
adc
adc
mov
jge
sbb
stos
ret
xchg
mov
daa
pop
in
push
ret
mov
icebp
lea
xchg
in
lahf
push
or
mov
ud0
outsl
leave
mov
cltd
repnz
xor
fwait
addb
and
adc
and
dec
lods
out
inc
add
mov
js
call
push
xor
movl
cmp
add
push
or
push
or
mov
sahf
mov
add
or
sbb
mov
dec
nop
pop
imul
push
adc
pushf
frstor
xor
pusha
or
cmp
dec
mov
inc
or
xchg
push
pop
enter
add
inc
sub
xchg
inc
adc
or
or
mov
push
adc
fldl
xor
jl
push
leave
adc
and
and
push
adc
movsl
mov
sbb
icebp
xor
mov
xor
add
xor
mov
push
jne
and
fsubrs
sbb
and
mov
cmc
sbb
loope
pop
movsl
push
dec
loopne
ja
add
mov
adcb
mov
int
inc
test
inc
add
mov
xor
xchg
adc
je
or
add
je
cwtl
popa
add
cmc
insl
xchg
out
and
and
arpl
xchg
and
lcall
adc
inc
push
add
pop
sahf
xchg
push
cwtl
and
push
jo
icebp
int3
sub
imul
shlb
and
and
mov
xchg
jno
outsl
inc
scas
sahf
pop
and
insw
add
inc
cmp
pop
or
mov
sub
lret
sbb
rorl
fsubrs
std
sbb
or
and
arpl
stos
xor
lcall
adc
fisubl
and
cmp
adc
sub
mov
fdivrl
sbb
xchg
pop
and
and
pop
or
lahf
adc
pushf
mov
scas
jge
cmpsl
inc
or
popf
fnstenv
test
mov
jo
sub
add
dec
pop
loope
sbb
in
push
shlb
push
mov
rolb
out
add
add
mov
inc
out
test
aad
mov
adc
in
sub
sub
mov
push
inc
loopne
mov
subl
jmp
or
addb
in
ret
rcrb
pop
push
insl
hlt
add
adc
pop
pop
sti
cmc
adc
cs
jmp
icebp
int3
cmp
push
sbb
add
dec
lcall
shl
enter
scas
fcoml
test
stc
mov
stos
add
or
and
xchg
push
aaa
inc
dec
in
fsts
sbb
sbb
add
outsb
sbb
and
pop
push
push
adc
add
dec
aaa
or
test
sbb
sub
mov
dec
loop
les
push
hlt
jb
add
ljmp
pop
xorb
fwait
jno
jno
cmp
cltd
sub
js
xor
jmp
or
jp
repnz
std
js
addr16
push
out
or
out
or
add
dec
dec
pop
or
add
js
inc
sub
rclb
movsl
pop
movb
mov
test
cmpsl
add
push
pop
hlt
loop
aaa
xor
stc
mov
jne
cli
dec
dec
sub
inc
cmp
jae
add
mov
fs
inc
add
add
loopne
pop
jp
bound
es
mov
gs
mov
jge
push
and
insb
fcos
cmp
inc
add
push
mov
fildl
scas
fdivs
sbb
dec
pop
jnp
cmc
in
xor
adc
jbe
inc
cmp
mov
out
orl
lcall
pop
clc
add
fmuls
jmp
imul
mov
add
inc
mov
xor
add
icebp
dec
mov
mov
or
pop
push
out
bound
cmp
je
cmp
mov
mov
cld
and
pushf
mov
add
mov
inc
push
popa
inc
mov
inc
pop
fs
fisttpll
lods
fists
jne
jmp
popa
fbstp
and
sbb
add
loopne
les
jmp
and
add
loop
sbb
andb
add
fldl
add
push
jno
insb
jmp
enter
mov
and
insl
clc
push
xor
push
sbb
fldz
out
cmp
call
sbb
and
pop
fsub
pop
fsubrp
outsl
scas
test
into
scas
or
and
shlb
add
add
and
xor
xchg
sub
rclb
scas
add
lds
cmp
lcall
aaa
es
rclb
ret
out
mov
inc
sbb
cld
lret
push
pusha
sub
push
mov
or
or
fcmovb
outsb
or
sub
xor
and
or
adc
lahf
push
dec
adc
cmpsb
shrl
out
int3
mov
int3
lea
outsb
sub
movsl
adc
push
ficoms
sbb
ss
mov
mov
ja
mov
or
cmp
or
lock
iret
nopl
push
inc
xor
das
mov
xchg
cltd
sbb
ds
dec
pop
cs
add
je
inc
sahf
pop
adc
and
mov
pusha
enter
divl
adc
add
or
notl
mov
lret
cmp
or
mov
and
leave
subl
cmp
das
lret
pop
and
repnz
sbb
cmp
push
xor
and
nop
xor
sub
gs
in
xor
push
jecxz
push
jns
lret
add
adc
push
pop
and
inc
gs
shll
or
iret
pop
stc
and
xor
and
mov
push
sub
or
stc
dec
stos
push
lret
inc
sub
fs
and
shrb
cmc
adc
mov
push
pop
xchg
in
mov
push
repnz
nop
out
lds
aam
push
dec
sahf
pop
or
xor
in
paddsw
ss
cmp
in
cmpsb
pop
inc
sub
push
xchg
out
sbb
jge
inc
mov
cmp
fs
cmp
je
push
vmwrite
pushf
cmp
in
sbb
push
mov
dec
repnz
aaa
add
movsl
inc
lea
jle
out
sahf
xlat
adc
ror
sarl
cmc
push
sbb
sub
cmp
repz
pop
xchg
movsb
mov
cmp
repz
xlat
call
jns
cmpsl
sbb
jns
jo
xchg
mov
out
out
or
repz
push
cmp
pop
outsb
add
mov
jno
or
pusha
faddl
adc
sub
mov
mov
sahf
xchg
add
xchg
popf
push
dec
jmp
xchg
inc
shlb
mov
push
pop
push
sbb
jns
icebp
xchg
test
push
mov
mov
rcll
jmp
jmp
add
jo
jo
cld
sar
int
pop
ds
add
and
or
mov
add
add
das
hlt
fsts
test
mov
lds
in
fs
fildl
push
fwait
gs
fs
sbb
pusha
sbb
call
xchg
xor
jmp
mov
add
xchg
mov
inc
orl
stc
adc
push
shrb
pop
adc
mov
aas
xor
add
lods
adc
jb
adc
test
push
push
inc
add
sbb
dec
test
mov
cmp
xchg
push
sbb
sbb
mov
cmpsb
adc
mov
push
push
xor
aaa
jmp
in
push
filds
loope
in
mov
cmpsl
mov
cmp
andb
fwait
sbb
or
inc
mov
clc
jbe
jle
xchg
mov
add
sub
xchg
cmc
fbstp
mov
aam
sub
daa
jnp
sbb
aaa
aaa
int3
xor
sbb
arpl
sbb
adc
add
call
mov
pop
cs
call
pop
or
add
or
push
xchg
hlt
or
in
in
mov
mov
mov
push
adc
and
or
pop
and
add
mov
mov
out
lock
lds
or
rcll
sbb
push
stos
pop
push
dec
xlat
sub
add
test
cltd
add
pop
dec
mov
rcrl
push
pop
enter
mov
and
enter
sub
or
aas
and
test
xor
and
cmp
push
dec
enter
addl
shl
loope
or
gs
outsl
mov
stos
popa
jne
and
inc
dec
sub
adc
jns
ret
gs
push
add
dec
sub
jge
or
dec
call
pop
fcmovnb
roll
ss
inc
jnp
cltd
adc
in
dec
and
adcl
movsb
dec
sub
dec
jo
inc
scas
adc
adcb
sbb
sub
ret
cmpsl
inc
shlb
mov
push
stc
xorb
ror
lock
fst
stos
or
scas
scas
dec
insb
push
mov
sahf
inc
add
xor
push
mov
adc
dec
out
fsubrs
adc
xchg
adc
cwtl
adc
cmpsl
jo
icebp
or
push
and
stos
ret
adc
jb
sbb
adc
sbb
lret
pusha
lods
repz
push
pop
dec
fs
adc
das
add
lcall
movsb
addb
loope
push
push
or
add
or
fidivl
or
std
or
les
addb
push
push
cltd
sbb
ret
mov
fwait
mov
dec
pop
push
or
cmpsl
xchg
cmp
or
adc
mov
dec
and
add
sub
push
es
bt
add
mov
sub
addl
push
cmp
leave
add
xchg
iret
add
ljmp
movsb
pusha
fnsave
push
pop
pop
daa
push
or
inc
mov
mov
sub
xchg
or
gs
inc
cmpsb
lea
push
lds
ret
mov
in
scas
or
or
sbb
adc
addb
std
add
push
or
mov
pop
inc
push
add
jb
sbbl
leave
pop
and
push
or
or
fistpl
roll
xor
lods
lea
mov
jg
leave
and
add
push
or
mov
inc
ret
stos
sub
dec
ret
movsb
xor
or
lret
sub
test
or
mov
lret
push
sbb
lods
and
das
mov
push
push
jg
shrl
adc
test
xchg
sub
pushf
or
outsl
inc
loop
loopne
add
or
mov
mov
mov
add
jnp
sbbl
xchg
or
test
addl
ret
add
popa
mov
or
add
add
lods
mov
sbb
add
add
add
rorb
sbb
jns
imul
sub
pusha
or
push
jnp
fwait
test
xchg
push
xor
sub
cmp
fs
call
push
push
fstps
mov
xchg
cmpsl
xor
push
cmp
or
mov
adc
pop
mov
popa
sbb
adcb
stos
addb
add
pop
cmpb
je
pop
sub
or
sub
nop
sub
push
xchg
out
or
clc
add
sub
cltd
inc
and
add
mov
push
stos
ja
inc
leave
arpl
inc
mov
mov
xor
aaa
gs
shll
adc
pop
test
cmp
in
mov
bound
push
imul
add
data16
dec
adc
mov
into
add
sbb
mov
add
ret
or
test
jl
cmp
mov
movsl
fisubrs
cltd
push
jne
fldl
ss
push
inc
xor
mov
fmull
fstl
add
push
sbb
dec
bound
mov
mov
xor
shlb
jp
add
or
loope
mov
sub
dec
xor
pop
adc
jl
xchg
push
fs
mov
mov
test
arpl
and
adc
sbb
xorl
dec
out
push
insl
adc
icebp
test
mov
ret
push
ficoml
pop
pop
or
pop
sbbl
insb
std
call
or
lret
push
push
push
add
push
fwait
std
nop
inc
pusha
sbb
push
in
nop
aaa
jno
addl
loopne
add
push
mov
or
fisubs
loopne
inc
xor
call
cli
sbb
xor
mov
mov
sahf
push
loopne
add
jmp
loopne
dec
or
enter
and
fs
dec
inc
mov
adc
pop
nop
pop
add
test
sbb
lock
iret
mov
fld
and
dec
gs
sbb
je
xorb
pop
lret
ficompl
xor
adc
add
ljmp
shrl
mov
inc
sub
stc
xchg
push
test
add
or
mov
and
mov
fsubs
stos
mov
mov
ret
or
adc
jl
xor
jmp
cmp
jl
or
sbb
popa
std
pop
imul
shll
pop
mov
test
inc
jmp
movb
mov
push
pop
cltd
idiv
xchg
jge
ljmp
pop
ds
add
inc
mov
gs
push
ret
clc
arpl
sbb
push
hlt
xchg
scas
mov
dec
inc
inc
ja
in
push
sbbb
shrb
test
or
xchg
pop
sub
pop
lds
cmp
push
or
xchg
addl
out
xchg
jl
hlt
incb
test
or
add
push
sub
in
dec
fsubl
daa
cmp
ljmp
push
push
push
mov
cli
add
cmpl
cmp
lock
and
mov
sbb
loop
lret
add
push
les
jmp
push
xor
mov
xchg
das
inc
gs
pop
call
leave
popf
add
mov
sub
mov
dec
sub
add
rcrl
stc
je
cmp
dec
lcall
xor
add
outsl
mov
push
push
mov
jb
cmpsl
shlb
mov
scas
and
iret
icebp
and
xchg
inc
adc
lods
imul
inc
add
cmp
inc
cmova
sub
sbb
and
js
cs
xor
cmp
xchg
mov
or
ss
adc
adc
dec
sbb
sub
jb
and
js
push
pop
mov
rcl
jge
js
push
insl
ljmp
enter
clc
jle
sbb
cltd
les
stc
sbb
adc
push
testl
rorb
sbb
repz
jmp
adc
fsub
nop
mov
push
test
in
pop
fmuls
loopne
movsb
cwtl
and
fmul
fs
sarl
out
and
pusha
out
movsb
mov
enter
stos
add
and
aam
jo
inc
loopne
test
enter
popa
fsubr
dec
adc
cmp
pop
push
cmp
es
bound
and
pop
inc
popa
leave
dec
mov
inc
arpl
sub
mov
add
jge
xor
xor
subl
dec
orl
add
mov
sbbb
int
adc
js
jo
fs
xchg
dec
mov
movsb
pushf
dec
xor
and
mov
jl
enter
adc
sub
and
push
call
xchg
fsubrl
adc
in
sub
data16
gs
add
std
inc
les
jecxz
dec
divb
and
js
cmpb
xchg
icebp
add
imul
cwtl
pusha
xchg
cmp
ljmp
cmp
enter
pop
pop
fldz
out
adc
jle
pop
push
jecxz
pop
movsb
roll
or
mov
adc
jecxz
fisttpll
add
cmp
mov
gs
jg
cmp
sbb
push
divb
in
xor
pop
add
add
mov
sbb
imul
adc
push
or
lcall
or
int3
xchg
je
lahf
add
call
xchg
cmc
xor
inc
ret
aam
arpl
fmuls
and
daa
adcb
mov
jns
add
xor
mov
inc
imul
lods
push
mov
fldt
movsl
lods
pop
dec
and
push
xor
cs
rcll
mov
push
push
sti
lods
sbb
sub
es
rorb
out
xor
nop
or
sub
add
rclb
and
cmpsl
hlt
sbb
rorb
push
enter
inc
sub
fidivs
xor
and
xor
mov
pop
pop
test
and
jo
pop
dec
inc
out
xchg
push
cmp
sahf
inc
imull
fsubrs
xor
dec
aam
ds
movsl
xorb
int3
xchg
pop
dec
test
rolb
xor
pop
dec
subl
jnp
pop
sub
ja
inc
add
sbb
add
inc
mov
push
pop
jno
mov
cmp
inc
sub
mov
jmp
fisubrl
decl
jmp
push
push
xor
pop
inc
or
sub
popa
xchg
cwtl
aam
mov
sbb
pop
rcrb
subl
push
pmullw
inc
or
aad
mov
fldenv
sbb
mov
cli
and
and
mov
mov
shrl
rclb
imul
arpl
jl
and
and
leave
xor
or
add
jp
push
mov
lea
pop
insb
shrb
mov
cmp
ja
pusha
push
pop
mov
add
xorl
cmp
adc
xlat
movsbl
and
cs
rorb
mov
push
sarb
movl
push
adc
pop
in
adc
cwtl
mov
add
add
hlt
push
rcll
pop
or
sbb
xchg
call
xchg
sbb
in
push
inc
push
test
push
or
stc
and
daa
insb
and
xchg
xor
stc
cld
jmp
out
int
stos
and
daa
or
inc
jmp
je
jae
sarb
rclb
push
stos
push
xor
shlb
mov
cmp
push
sarb
jne
mov
sub
loopne
imul
sbb
jl
dec
or
adc
out
es
add
xchg
sbb
dec
loopne
cmp
jne
mov
push
xor
add
jne
mov
and
mov
testb
int3
rol
in
sbb
jecxz
sub
ds
xchg
dec
cmp
or
mov
mov
in
orb
ds
sahf
fmull
xchg
imul
adc
push
mov
add
test
xchg
pusha
or
pop
inc
xchg
jmp
add
orl
adc
lock
sub
push
pop
xchg
dec
and
jmp
adc
cmp
mov
rcrb
or
adc
adc
push
inc
and
or
jo
popf
lds
or
jo
ret
mov
dec
sub
mov
xchg
cmp
push
mov
inc
ret
rorl
test
inc
push
aam
stos
add
dec
rorl
sahf
insl
mov
add
pusha
pop
pop
ss
and
push
cmpsb
loope
push
push
sbb
movsb
in
or
mov
cmp
and
sete
in
mov
cmp
pusha
cli
add
adc
adc
add
sahf
sbb
mov
dec
pop
adc
sub
enter
mov
add
mov
push
mov
dec
xchg
xchg
push
movsl
adc
add
int
sub
jne
ja
inc
pop
bound
jmp
daa
loope
int
in
insb
pop
test
iret
in
push
xchg
adc
or
pop
mov
gs
push
cmp
push
push
cmp
inc
cmp
in
cmp
sub
cmc
iret
sub
pop
cmp
adc
sbb
cmp
inc
js
neg
add
fwait
rcl
pushaw
cmp
xchg
add
inc
sbb
jo
and
jne
dec
jo
jmp
add
add
popf
in
adc
sub
add
cltd
and
pop
pop
jb
fcomi
mov
mov
shlb
add
movb
test
push
inc
inc
xor
sub
push
sbb
clc
adc
in
cmp
jne
add
add
mov
adc
add
mov
aad
mov
jg
data16
dec
add
and
jns
ss
xor
mov
rorl
and
or
je
and
adc
test
insb
dec
adc
or
xor
dec
ret
in
mov
popa
test
je
add
loopne
lret
jo
or
mov
cmpsl
cmp
jmp
mov
push
add
adc
cwtl
inc
in
fisubrs
add
or
ret
xchg
jo
sbbl
inc
jb
test
call
in
push
adc
ret
call
mov
mov
mov
or
sub
in
sub
shl
pop
lds
sbb
in
je
or
sbb
or
shll
out
mov
xor
icebp
roll
push
pop
lock
xor
xchg
cmp
aam
imul
dec
cs
add
or
test
and
add
xor
adcb
lds
loop
xchg
pcmpgtw
sbb
mov
xor
mov
mov
mov
jmp
adc
aam
push
fwait
adc
js
adc
sbb
iret
adc
push
inc
inc
stos
pop
sub
push
or
pop
and
push
imul
sub
add
ss
test
lods
aad
inc
inc
xchg
ret
std
or
mov
push
dec
inc
aam
jno
int
mov
adc
adc
ja
push
es
add
mov
mov
xchg
push
sbb
popa
mov
lods
loop
add
mov
inc
arpl
push
jne
inc
cmpsl
rcr
or
orb
and
cld
push
mov
mov
lods
adc
fs
pop
add
cmp
mov
xchg
mov
or
shlb
in
xor
orb
or
push
push
mov
push
mov
sub
imul
outsb
cmp
je
cmp
jne
mov
mov
mov
pop
movsb
pusha
ljmp
lcall
movsl
pop
in
cmp
out
andl
loope
fnstsw
imul
addl
cltd
jb
or
inc
sbb
jp
pop
mov
sbb
jle
movb
pop
mov
cmp
in
fs
cmp
test
pop
adc
ret
cmpl
jne
movsb
cmc
dec
ds
add
jmp
adc
add
pop
sub
fcompl
inc
mov
jne
add
jg
inc
cmp
jae
mov
xchg
pop
mov
rclb
mov
jmp
popf
shrd
int3
add
xchg
add
push
in
and
lods
clc
and
cli
push
fmull
mov
inc
lcall
mov
add
or
out
push
pop
and
push
out
sub
mov
push
cmc
jmp
movsb
shrb
xor
mov
pop
loopne
push
pushf
leave
push
push
push
ret
push
or
or
fcompl
pop
and
mov
punpckhdq
pop
push
popa
dec
outsb
mov
cmpsl
and
push
push
push
lds
jb
shll
pop
add
rcrb
add
outsl
push
loop
pop
sarb
cmp
aad
lock
or
pop
sub
push
adc
xor
pop
inc
add
sub
and
outsl
or
xor
cld
inc
inc
add
in
sti
clc
cmp
cmp
push
cmp
pusha
and
cmp
in
push
xchg
incb
mov
sbb
or
cmp
ds
xchg
mov
cmp
cmp
xor
iret
jo
aad
push
add
adc
imulb
leave
xor
fnstsw
cmp
jo
or
add
insl
popf
adc
into
and
and
repz
and
rcll
test
ret
adc
inc
nop
or
adcl
addb
pop
decl
sub
je
pop
or
test
dec
jbe
ret
jle
cmp
and
xor
mov
jo
lods
sbb
rcrl
aas
stos
stc
dec
push
fs
rolb
jb
adc
push
add
fimull
mov
xor
dec
cmpsb
push
cmp
stos
xchg
push
xchg
das
inc
in
pop
test
push
mov
or
fs
sbb
test
push
sbb
pusha
pop
add
loope
js
orl
lods
cmp
lods
mov
xchg
cltd
add
dec
mov
je
movsl
or
pop
mov
dec
mov
cmpsb
push
add
push
cmp
xor
pop
enter
es
outsb
mov
cmp
pop
add
push
mov
jmp
xchg
nop
pop
sbb
mov
add
adc
xchg
fwait
push
or
xlat
mov
nop
sbb
sbb
dec
iret
in
and
jo
hlt
les
or
xor
adc
or
cmpb
fs
adc
dec
lds
jecxz
subb
inc
fnsave
or
adc
add
insl
adc
add
pop
scas
fimull
pop
out
or
dec
pop
adc
xchg
and
push
addl
cmovo
inc
cld
icebp
cmp
dec
adc
ds
jns
mov
jno
in
cmp
mov
aaa
movsb
out
pushf
xchg
push
sbb
movsl
cmp
rolb
mov
mov
sub
shrl
stos
mov
add
sti
mov
dec
or
pop
push
jb
xor
mov
xor
sbb
mov
xchg
repz
add
lods
add
mov
pop
arpl
lods
clc
punpckhbw
jb
push
call
es
mov
adc
sbb
dec
test
cmp
test
test
adc
mov
pop
sbb
dec
or
or
xlat
cmp
add
test
inc
sbb
sub
adc
inc
stos
push
mov
mov
sbb
in
ficoms
xor
push
sbb
push
and
jmp
mov
shlb
lock
cmp
je
push
jo
outsl
or
push
jne
and
bswap
shrl
sub
fstps
push
pop
mov
or
sbb
cmp
testb
aaa
jmp
sub
adc
push
cmp
adc
faddl
enter
and
inc
or
pop
sub
es
xor
fs
push
outsl
lods
mov
cs
and
or
jl
js
shr
mov
push
xor
add
sbb
cmp
mov
or
and
adc
add
imul
sub
xchg
pop
arpl
outsb
inc
jns
jnp
arpl
and
and
sbbb
xor
push
xlat
cmp
xor
cmp
mov
mov
adc
dec
movsb
jns
lea
inc
jno
sub
jae
enter
in
jle
xor
sbb
andb
repnz
mov
inc
dec
nop
xchg
pop
xchg
sub
je
sarb
shrl
inc
repnz
lret
in
sub
inc
je
aam
add
or
push
imul
daa
add
jo
add
pop
nopl
or
testb
push
dec
push
or
pop
fs
leave
les
bound
push
xor
adc
sbb
addr16
sub
std
sahf
push
es
and
sub
add
mov
jmp
cs
je,pt
sub
push
jnp
or
adc
sub
stc
jb
add
cmp
xorl
stos
aas
mov
out
adc
add
ret
mov
cli
lods
insb
jge
sahf
fwait
dec
pushf
push
add
loopne
in
xchg
push
loopne
xorb
nop
add
nop
in
jb
cmp
add
add
adc
add
adc
adc
mov
xor
mov
jno
lods
mov
insb
dec
pop
ret
sbb
je
pop
stos
jne
cld
rclb
adc
xor
add
sbb
sub
xor
iret
mov
and
or
xchg
clc
stc
bound
lock
lods
cld
leave
mov
add
dec
orb
mov
sbb
mov
adc
loope
add
lods
sbb
and
inc
orb
push
shll
ss
sarl
dec
or
mov
incl
jl
push
adc
and
mov
and
mov
inc
fs
lock
test
dec
out
gs
cmp
pop
mov
sub
sbb
ja
sbb
push
or
adc
ret
and
push
cmp
leave
scas
add
pop
or
rcl
rorb
rcl
push
mov
rcrl
ss
pop
into
ds
aam
lock
sbb
ja
or
sbb
loope
sub
mov
in
xchg
dec
inc
fcoms
aam
into
frstor
push
cwtl
cld
bound
mov
loope
dec
pop
psubw
or
ja
and
jle
add
pop
sub
rolb
ror
rorl
sti
stos
pusha
add
pop
cltd
js
lret
iret
push
pop
cmpl
pop
test
and
movsb
jns
mov
into
clc
clc
lds
in
inc
cmp
jb
jmp
xchg
cmp
sub
out
fdivs
sti
dec
rol
mov
inc
push
ljmp
test
xlat
jp
mov
xchg
cmp
or
enter
jns
mov
jno
add
cmp
enter
lods
out
sbb
jp
mov
lds
dec
mov
cmp
xchg
adcb
jne
test
cmp
rcl
push
mov
in
das
dec
test
xchg
js
insl
cmpb
pusha
add
dec
dec
xor
pop
ds
or
sub
mov
or
mov
out
sbb
dec
fmuls
sub
sbb
and
push
pop
sub
pop
pushf
adc
inc
sbb
and
dec
std
cs
inc
nop
pop
inc
sbbb
ljmp
push
psrlw
pop
test
cmpsb
arpl
les
add
inc
inc
adcl
mov
cmpsb
sti
adc
lods
xchg
cltd
or
ds
xchg
or
xor
call
movsb
cmp
sbb
loope
inc
pop
pop
fdivrs
mov
add
popa
xchg
mov
push
cmp
mov
es
lahf
int3
ret
xchg
fdivr
or
sbb
xor
mov
insb
fsubr
mov
popf
std
mov
add
loopne
orl
push
xchg
mov
std
out
sbb
fidivrs
or
adc
lea
xor
push
jge
push
gs
or
push
mov
add
pop
rclb
out
iret
iret
pop
dec
lret
test
mov
cmp
lock
inc
lea
mov
xchg
xor
push
in
bound
jne
test
cwtl
jae
cmp
sbbb
mov
sbb
mov
add
cmp
mov
or
lea
frstor
inc
or
fwait
leave
mov
push
xor
popf
inc
push
add
adc
push
dec
mov
orl
dec
mov
sarl
adcl
and
lret
enter
popa
or
push
jno
push
les
aam
addl
ss
data16
and
pop
jge
or
mov
fsubrl
adc
add
movsl
sub
aam
jl
pop
and
or
sbb
cmp
or
nop
fsubrs
aam
add
subb
inc
pop
jp
mov
inc
cld
mov
xchg
dec
sub
inc
cmpl
xchg
pop
in
loopne
push
mov
mov
jecxz
or
es
adc
lcall
in
imul
insb
dec
addr16
xchg
adcb
sub
lods
dec
inc
sahf
testl
nop
mov
lret
or
sbb
call
dec
gs
loop
mov
mov
repz
jge
fwait
adc
popa
xor
xchg
and
mov
mov
adc
pushf
outsb
inc
cmp
adc
cmp
in
sub
dec
adc
dec
orl
dec
sahf
jle
push
pop
movsb
push
aaa
jno
nop
adc
pop
inc
cwtl
adc
mov
push
sbb
fiadds
push
imul
imul
std
jl
pushl
dec
shlb
mov
and
mov
je
shrb
mov
jge
xor
add
or
sub
push
push
out
push
xchg
outsb
push
push
inc
pop
or
xchg
dec
mov
jo
popf
inc
or
cwtl
dec
call
popf
add
int
sbb
or
dec
adc
dec
and
ret
shlb
out
incl
and
pusha
adc
das
jbe
cmp
gs
nop
sbb
xor
mov
push
inc
cmp
jo
aam
add
add
inc
repnz
cmp
cwtl
dec
mov
xchg
mov
or
inc
cli
adc
outsl
mov
push
movsb
cmpsl
movsl
inc
sbb
inc
push
push
push
movzbl
or
in
in
push
test
jmp
jb
dec
out
push
rcll
mov
faddl
dec
and
aad
inc
sub
inc
add
popa
loopne
dec
xchg
lcall
dec
pop
pop
sub
sub
pop
leave
and
ds
cli
push
xchg
cmpsb
add
mov
cmpsb
or
insl
pusha
xor
jb
rol
push
inc
int
lods
sub
fadds
int3
leave
sbb
dec
loope
arpl
fdivl
std
xor
push
rolb
xor
fcmovb
roll
add
mov
add
pushf
mov
add
jnp
dec
rorl
add
inc
enter
and
in
rolb
bound
imul
mov
sbb
hlt
sub
mov
and
fwait
loop
and
xchg
lods
and
push
je
adcb
je
test
dec
and
adc
xor
mov
mov
or
adc
or
inc
adc
fisttps
popa
or
adc
add
inc
repnz
push
cwtl
pop
jmp
adc
or
jne
adc
dec
and
loopne
push
mov
sbb
adc
add
push
orl
xor
lock
add
nop
inc
insb
adc
lcall
lahf
push
adc
out
sbb
mov
jo
push
cmp
data16
imul
or
cmp
push
add
mov
adc
lret
retw
hlt
jg
dec
adc
jbe
cmp
cwtl
into
aas
dec
popf
adc
pop
js
xor
dec
sub
sti
sub
adc
daa
mov
and
sub
push
sub
xchg
mov
inc
lea
pop
ret
cmp
add
inc
mov
push
loopne
pop
out
in
mov
or
loopne
xor
inc
or
aaa
push
test
push
aad
sbb
rcll
xchg
sub
xchg
pushf
add
jo
and
push
lock
mov
jg
dec
mov
das
or
mov
mov
int3
and
enter
aam
pop
or
jno
rcl
and
push
mov
and
mov
repz
aam
pop
test
mov
shlb
push
js
inc
or
add
std
inc
mov
inc
fidivl
dec
aam
enter
jp
or
adc
aam
sub
das
jge
push
arpl
jae
sbb
rorb
push
loopne
add
je
add
xchg
mov
jns
fsubrs
loop
test
ja
ja
je
popa
jnp
sub
xchg
sbb
in
sub
mov
or
sbb
pop
mov
xchg
mov
pushf
jl
sti
push
ret
mov
mov
test
shlb
and
mov
in
push
jno
add
inc
and
dec
add
popf
jmp
dec
add
outsb
scas
std
adc
fdivp
dec
mov
pop
in
sar
xor
mov
and
jo
or
test
mov
mov
push
or
push
sbb
test
fwait
or
sub
movsb
lret
push
adc
inc
loop
jge
in
pushf
and
push
add
xchg
icebp
xchg
dec
push
neg
pop
sbb
jp
mov
add
popf
add
jns
push
outsb
test
cmpsl
and
sub
mov
aaa
or
lock
into
jmp
mov
mov
stc
lods
loope
push
popa
adc
call
push
fwait
lds
dec
inc
mov
insb
sarb
sub
adc
mov
enter
adc
pop
or
inc
mov
flds
xor
loope
pop
mov
mov
jne
int3
movsb
cs
es
sub
or
test
xchg
or
or
jbe
sbb
sbb
sarl
imulb
cmpl
xor
hlt
xor
mov
inc
loopne
sbb
dec
testl
or
mov
xor
push
popa
xor
or
mov
sbb
ljmp
lcall
adc
sbb
dec
in
movsb
and
inc
add
scas
cld
and
nop
je
out
mov
mov
lods
ss
push
mov
pop
push
lret
xchg
or
push
push
mov
or
add
out
xchg
cmp
mov
sub
ret
nop
cmp
pop
jnp
int3
push
push
or
push
dec
or
mov
push
sahf
jg
dec
push
jg
inc
sub
push
push
push
push
call
push
jge
pop
rolb
add
addl
mov
cmp
cmpsb
mov
add
lcall
imul
sti
or
cmp
jae
sbb
shlb
or
add
icebp
movsb
or
push
mov
lods
outsl
push
pop
push
cs
insl
push
mov
push
call
fwait
stos
int3
mov
out
les
mov
inc
dec
cmpsl
lods
push
mov
inc
popa
jne
lret
fsubrl
xor
cld
cs
xor
cmp
and
jns
inc
jmp
cmpsl
mov
xchg
jne
push
lods
adc
loopne
loopne
xchg
lock
stos
dec
or
or
sbb
cwtl
insl
imul
push
add
or
mov
outsb
movsl
and
fwait
push
fs
ror
test
call
adc
and
add
mov
add
std
mov
push
push
vmread
xchg
enter
push
pop
push
push
or
insl
shl
push
jl
push
mov
pop
dec
push
adcb
cmp
xor
cli
mov
adc
mov
xchg
rclb
xchg
cmp
out
cmp
jo
mov
jp
adc
sbb
cmp
andb
mov
mov
arpl
cmp
out
sub
ljmp
std
mov
mov
sub
push
add
cld
mov
fidivs
rcrl
push
cmp
mov
adc
adc
in
add
dec
cmc
test
jp
dec
sti
jp
and
sub
push
push
ret
fnstsw
loop
hlt
or
push
push
arpl
cmp
mov
neg
mov
mov
mov
jl
adc
sbb
shlb
add
cmp
mov
cld
mov
out
sub
add
add
int
pop
pop
pop
pop
mov
cld
sti
rep
movsw
push
jo
add
cld
movsb
mov
cmpsl
or
pop
or
mov
shr
mov
lahf
int3
mov
inc
mov
adc
movb
jmp
push
lea
push
fmull
push
adc
mov
insl
or
sub
paddsb
fdivrs
into
pop
ss
mov
mov
adc
and
dec
mov
paddb
or
push
push
test
fwait
push
mov
testb
mov
push
es
mov
dec
push
outsl
xlat
pop
pop
dec
pop
jge
inc
add
ss
cmp
mov
or
xchg
sbb
and
mov
mov
sbb
and
or
sub
adc
sbb
dec
pop
cmp
lahf
xor
aam
jb
inc
xor
dec
dec
pop
mov
inc
xorl
insb
roll
push
lock
stos
shl
loope
or
fiaddl
das
mov
loop
mov
inc
xchg
inc
jecxz
enter
xchg
or
inc
jle
insl
andb
orb
in
in
add
in
or
or
jnp
jae
jae
or
jbe
jmp
or
addr16
jae
por
jmp
adc
pop
adc
push
jae
jae
adc
dec
adc
dec
adc
aas
jae
jae
pop
jmp
sbb
xor
jmp
jae
jae
sbb
es
and
pop
jae
jae
pop
jmp
and
or
jmp
insl
dec
cmc
jo
adc
fimull
push
bound
pop
pop
xor
pop
adc
mov
push
fs
xchg
mov
aam
repz
fsub
in
hlt
cld
add
out
lcall
jns
out
and
sub
ss
sahf
out
inc
inc
dec
dec
sahf
out
sahf
push
pop
pop
arpl
jns
out
jb
jl
xchg
fnstcw
or
add
and
or
or
push
movups
test
call
adc
sbb
sbb
push
pop
and
and
aas
or
or
jecxz
pushf
loop
jle
push
test
xor
mov
pop
inc
dec
imull
or
mov
cmp
jle
mov
cmp
mov
add
cmp
ret
fistpl
cmc
movsl
mov
pop
jae
or
inc
andl
clc
pop
mov
sbb
pop
movsb
xchg
shll
fldcw
cld
mov
lock
sub
mov
cld
inc
mov
inc
cmp
jbe
decb
or
in
push
push
adc
enter
dec
sarl
inc
jg
pop
sbb
push
jmp
inc
push
or
lods
push
pop
pop
pop
jns
mov
push
jne
mov
das
xchg
ja
in
or
and
push
add
in
fisubrs
inc
je
push
jl
aam
dec
nop
and
xorl
sub
add
in
sbb
and
and
add
push
repnz
xchg
and
into
test
sbb
inc
and
testb
and
lret
adc
scas
inc
push
add
mov
ja
dec
movsl
insl
xor
mov
jb
sbb
add
add
or
or
jmp
sbb
loop
jmp
mov
xchg
inc
xchg
adc
cmp
roll
inc
cmpsl
mov
imul
cmp
push
xchg
lahf
repnz
mov
xchg
push
adc
jmp
cwtl
enter
add
jecxz
mov
call
js
push
xor
rorl
lret
cmp
mov
aam
sub
pop
dec
jp
push
ss
ss
sarl
xchg
xlat
andl
cmp
add
test
sahf
jae
or
push
inc
pop
or
and
loopne
or
push
mov
pop
insl
std
add
or
xor
test
jmp
mov
jne
mov
sbb
jne
jno
aad
inc
dec
aas
jo
orl
ss
je
or
inc
mov
or
jo
push
mov
mov
fcoml
pop
loopne
cmp
sbb
and
andb
testb
pop
cli
inc
or
xor
xchg
je
dec
ds
xor
adcl
lock
sbb
clc
sbb
lcall
xor
inc
rorl
clc
adc
subb
pop
sub
and
jno
test
push
pusha
xor
mov
inc
cmpsl
add
adc
cmp
inc
adc
test
stos
loope
cmp
push
shlb
rdpmc
mov
mov
insb
jns
mov
pop
push
mov
sub
inc
cmpsb
dec
testl
popl
dec
dec
ds
mov
je
sbb
mov
push
test
xchg
add
ret
add
jae
or
adc
sub
mov
or
or
lds
loope
mov
mov
ret
mov
mov
push
pop
add
jo
test
and
in
repz
test
jne
push
mov
andl
inc
movb
aas
jp
mov
pop
or
push
cwtl
or
popf
popa
sbb
push
aas
test
xor
add
add
push
mov
test
mov
jmp
cmp
jb
add
in
push
cmp
add
cmp
addr16
xchg
fisttps
fsubs
add
mov
add
scas
rorb
je
scas
pop
push
scas
pop
mov
push
push
adc
pop
lds
rcrl
push
loopne
cmp
pusha
adc
aam
mov
adc
popf
pop
lret
xor
mov
ljmp
movsb
and
add
pushl
adc
push
mov
or
cwtl
mov
lahf
jge
imul
pop
push
cmp
imul
daa
or
push
lahf
mov
imul
enter
ja
mov
or
test
nop
adc
addl
inc
loopne
pop
pop
or
mov
xchg
adc
pop
add
adc
push
jmp
add
push
ret
add
je
scas
loopne
pusha
sbb
pop
adc
sub
cmp
pusha
and
mov
js
or
add
arpl
nop
jae
loopne
fs
add
mov
or
adc
add
sub
cmp
or
bound
inc
mov
jp
cmp
xchg
push
add
movsl
add
fisubrl
int3
xor
adc
add
sahf
stos
adc
fucomi
xchg
or
or
nop
dec
xchg
xor
int
inc
pop
sbb
mov
mov
mov
call
push
lods
adc
sbb
add
cmp
jmp
xorl
lock
or
pusha
lds
jmp
in
ss
cmp
push
or
inc
mov
push
add
push
push
rcll
mov
ds
out
in
adc
ds
inc
xor
test
pop
jb
add
inc
nop
dec
rcrb
pop
cwtl
pushf
xchg
push
push
fnstcw
rclb
movsb
test
sub
or
enter
mov
add
jns
mov
lret
dec
enter
int3
outsb
xchg
outsb
xchg
push
rcrb
fcomps
xor
fistps
or
movsb
in
lock
adc
add
and
sbb
dec
gs
lods
push
rclb
jmp
push
lods
daa
js
add
subb
mov
mov
add
ret
sbb
in
xchg
je
jl
and
pop
shlb
inc
push
cmp
xor
sub
jl
sub
lea
leave
inc
mov
add
cmp
or
cmpl
popf
push
and
hlt
inc
mov
push
push
xchg
in
xchg
outsb
std
jmp
xlat
call
and
xor
pop
and
jne
adc
jnp
lahf
popl
pop
jl
jmp
out
push
sbb
sbb
test
mov
test
mov
push
adc
pop
sti
cmp
je
lret
mov
cmpsb
in
jge
inc
jnp
and
dec
mov
jmp
rcrl
ss
push
aaa
mov
in
shll
jl
nop
bswap
xchg
sbb
jl
jmp
pop
das
sub
fldt
js
or
sbb
sbb
push
fwait
dec
imul
rorb
je
mov
call
lods
add
dec
mov
xor
jne
xchg
cmp
jge
push
mov
hlt
cmp
jl
cmp
jle
pusha
xchg
aad
ret
add
sbb
mulps
lret
pop
or
movsb
adc
add
loopne
mov
pop
ret
ret
sub
lock
sub
ljmp
lock
add
adc
adc
js
add
pop
das
sbb
inc
pop
inc
cmpsb
push
jbe
inc
shrl
cmp
or
inc
push
bound
data16
xchg
adc
mov
push
inc
mov
sahf
mov
xor
xor
pop
or
or
or
and
test
or
push
mov
lock
ret
pop
lret
pop
sbb
push
fldl
inc
loope
mov
filds
mov
and
shl
mov
mov
push
sub
cmp
mov
loop
arpl
sub
dec
xchg
cs
in
dec
push
stos
cmp
jns
sbb
mov
and
loope
jge
lahf
or
daa
stos
or
test
push
in
repnz
je
add
mov
inc
ret
nop
cld
inc
lock
xor
jne
push
pop
and
pusha
cmp
clc
cmp
and
adc
adcl
jmp
mov
mov
popf
lods
inc
jno
fcoms
loopne
insb
or
adc
loope
push
lock
dec
lock
mov
mov
adc
fs
xor
les
in
jne
shlb
adc
and
adc
sarl
fsubl
mov
call
leave
rcrb
sbb
push
pop
inc
fbstp
xlat
or
fldl
leave
test
inc
sbb
mov
push
rorb
aaa
or
xchg
mov
dec
pop
xchg
scas
push
cwtl
leave
xor
aas
sub
dec
add
dec
loop
mov
add
push
iret
shrb
jno
cmpsl
pusha
adc
sbb
aad
repz
push
scas
cltd
or
jmp
mov
test
push
sub
scas
cmp
inc
push
aas
push
push
int3
mov
adc
lea
insb
and
lods
xchg
popf
andl
push
test
lea
jmp
xor
pushl
push
loope
and
dec
jno
fcoml
outsl
pop
mov
sbb
push
pop
add
insb
loopne
mov
adc
push
addr16
dec
dec
inc
cmpsb
adc
cld
or
std
decl
mov
adc
push
nop
and
pop
imul
mov
add
ret
lods
mov
sub
hlt
or
xchg
add
xchg
pop
ror
loopne
xorl
into
xchg
jmp
jbe
mov
add
cmpsb
inc
icebp
jne
std
je
xchg
call
jmp
and
cli
xorb
add
psubw
xor
add
test
cmp
popf
or
adc
rcrl
push
pop
cmpsl
push
cmp
add
lds
adc
cs
push
dec
imul
adc
pop
sbb
pop
mov
inc
ret
add
out
scas
test
add
or
clc
mov
mov
rolb
mov
pusha
xor
mov
xorl
jle
lock
push
push
hlt
in
arpl
push
lahf
xorb
push
pop
mov
push
ja
adcl
add
in
and
mov
mov
cmp
xor
jp
mov
add
and
movsl
test
inc
mov
repz
pusha
dec
adc
or
dec
leave
repz
push
inc
sub
scas
or
dec
inc
push
push
call
mov
stc
push
push
mov
inc
dec
and
es
cmp
mov
rcl
xchg
push
sbb
and
inc
push
push
inc
scas
and
pop
or
sbb
gs
push
or
aad
lock
dec
sbb
sti
push
repnz
push
cmpsl
xchg
out
daa
push
push
adc
add
clc
cmpl
jbe
inc
clc
xor
push
fwait
inc
xorb
or
push
mov
or
faddl
and
pop
and
call
fldz
fcomp
fnstsw
adc
pop
sbb
pop
faddp
cmp
push
and
inc
test
repnz
inc
or
adc
inc
adc
xabort
add
repnz
sub
push
mov
pop
es
pop
hlt
xlat
hlt
pop
hlt
ds
cli
inc
jl
cmp
nop
dec
ret
push
lea
hlt
popa
frstor
dec
fs
loop
push
jno
pop
jne
test
fiadds
mov
mov
aas
push
icebp
imul
insb
das
mov
shlb
adc
std
add
cmp
mov
clc
jnp
rcr
dec
jbe
mov
xchg
xor
or
sahf
and
rcrl
lea
gs
nop
test
not
cmp
shll
popa
xor
mov
stos
addb
rolb
lea
in
inc
mov
mov
fwait
adc
xchg
or
hlt
add
clc
es
jmp
or
inc
push
jecxz
test
jp
mov
mov
pop
sub
or
mov
clc
imul
movsl
dec
jnp
in
push
int3
loopne
shr
dec
iret
scas
orl
sub
in
sbb
push
sub
decl
mov
push
pusha
pop
test
rorl
dec
pop
dec
pop
sarl
inc
xor
es
jmp
mov
stos
mov
in
faddl
cmp
shlw
or
lea
adc
xorb
xchg
dec
jp
aam
inc
pop
xorl
rclb
or
xor
and
jne
xchg
mov
fistl
mov
sbb
cmp
add
push
add
or
inc
inc
cmp
cmpl
sub
test
faddl
dec
lock
and
dec
inc
add
and
clc
popf
mov
jge
sti
pop
inc
loop
and
ss
pop
xchg
rcr
sub
sti
or
add
mov
jo
add
aaa
add
add
xor
push
rcll
push
insb
sarb
test
test
add
push
push
sub
je
and
pop
jb
jns
movsl
pushf
adc
or
data16
mov
lock
mov
rorl
push
push
dec
loope
arpl
jo
ds
sbb
pusha
xor
dec
fsubr
jo
testb
cmpsb
or
and
lret
movb
dec
das
testl
sarb
out
movsb
push
cli
movsb
jnp
add
stos
fcom
cmp
mov
inc
jae
leave
subb
std
fnstcw
mov
xlat
or
gs
pop
nop
pop
and
insb
add
into
mov
push
inc
mov
add
push
pop
clc
rolb
mov
pop
adc
add
inc
pop
int
data16
mov
push
jge,pt
cmp
cwtl
adc
xor
int3
adc
fs
xor
push
dec
out
xor
cmp
or
jae
ficoms
cmc
pop
add
xor
daa
cmp
add
pop
mov
cmp
je
xor
push
jmp
or
mov
adc
push
push
push
cmp
cmp
int
add
fsubs
inc
mov
dec
sbb
gs
mov
adc
inc
lret
add
vmovsldup
fcoms
ss
leave
add
test
mov
subl
mov
lods
nop
and
dec
xor
sub
jbe
dec
push
pop
push
das
xor
mov
or
pop
push
mov
lea
outsb
popa
pop
jbe
jp
and
jnp
jne
push
push
rorl
push
mov
add
cmpsb
roll
mov
iretw
jnp
push
xchg
push
push
push
dec
add
cmp
or
mov
pop
ret
dec
popf
clc
mov
inc
test
or
inc
pop
sub
pop
add
loopne
and
mov
stc
xor
and
add
and
es
pop
lock
push
xor
lret
mov
inc
loop
pop
adc
mov
dec
push
mov
iret
call
and
mov
xchg
dec
mov
push
sbb
pop
push
xor
adc
cld
fstps
mov
or
xor
mov
dec
packuswb
shlb
jl
repz
sub
mov
mov
int3
lcall
push
fdivr
push
xor
dec
pop
and
push
call
add
test
and
pusha
or
daa
push
bound
push
adc
stos
stos
rclb
leave
test
ficompl
xchg
xchg
jo
movsb
sub
inc
add
ret
lock
fucomi
inc
sbb
loop
mov
in
xchg
pusha
ret
mov
dec
fistpl
push
js
sbb
das
jno
pop
push
push
bound
xchg
inc
xchg
mov
and
je
sub
lea
mov
sub
sbb
xor
sub
movsb
movsb
lcall
xchg
dec
pusha
xchg
pop
jno
jo
les
je
and
mov
aam
sub
dec
fcomps
faddl
add
pop
mov
in
arpl
aam
jl
mov
sub
call
sub
pop
sub
push
inc
test
adc
call
clc
fs
add
xchg
dec
inc
cmp
cmpsl
mov
xor
push
rorb
sbb
push
cmp
and
cmp
popa
inc
pop
mov
push
fcompl
push
rcrb
mov
inc
mov
push
push
mov
mov
movsb
cmp
pusha
xchg
hlt
pusha
push
xor
xchg
or
andb
mov
jge
or
dec
dec
stos
cs
inc
or
subl
js
outsl
mov
in
pop
into
int
pop
dec
jo
test
rorb
outsl
add
push
fcmovbe
and
add
add
inc
sub
movsb
xchg
sub
push
pushf
xchg
mov
push
fisttpl
pop
outsb
inc
pop
xorb
mov
clc
pop
cli
cmpb
xor
sub
cmpsl
adc
pusha
in
xchg
xchg
imul
subl
jae
push
and
jne
filds
stos
nop
iret
sbb
add
icebp
mov
leave
fwait
inc
dec
js
sbb
push
adc
sbb
inc
jnp
in
pop
test
push
xchg
add
js
stos
xchg
xchg
imul
sub
scas
xchg
ja
or
add
rcll
xchg
pop
lret
sbb
xor
inc
or
mov
inc
rcr
push
xchg
mov
mov
js
add
add
or
mov
push
les
in
cli
mov
sub
and
pop
sub
sub
cmpsl
dec
sub
add
cmp
xacquire
cmp
xlat
mov
push
sub
add
sbbb
jae
nop
rorl
pop
xchg
repnz
or
jae
mov
cs
push
incl
cmp
pop
push
lock
jmp
adcl
or
xor
mov
test
incb
aad
mov
pop
pop
mov
cmp
int3
fiadds
pop
sbb
rorl
add
imul
testl
fsubrs
cli
fsub
pop
imul
call
in
sti
or
bndstx
ds
mov
cmp
mov
dec
popf
push
push
js
cmp
les
jo
sbb
shll
sub
xorb
pop
xor
inc
push
cwtl
or
es
loopne
idiv
push
adc
add
lret
push
add
dec
sub
pop
inc
testl
or
leave
inc
orl
in
add
pop
push
mov
les
int3
int
xor
push
pop
sub
icebp
ret
loopne
mov
xor
dec
add
daa
int
loopne
test
inc
pop
cmp
insl
xchg
andb
mov
xchg
push
andl
and
dec
lea
mov
jne
mov
cmpsb
jmp
sub
mov
xchg
inc
or
lods
pop
out
mov
shrl
push
jo
aam
xchg
adc
cmp
and
sub
xor
add
inc
sbb
subb
adc
mov
les
push
dec
add
mov
aad
pop
pusha
nop
and
clc
jo
and
cwtl
add
fcompp
push
fwait
js
push
xor
jo
add
xor
inc
loop
cmc
mov
sbb
mov
icebp
jmp
cmp
sub
rcrb
dec
sahf
ficoms
test
sub
mov
aad
mov
sub
cmpb
or
adc
in
popa
inc
cmc
cli
and
add
roll
out
jbe
adc
pop
xor
imul
inc
pop
outsl
hlt
lods
sub
movsb
dec
mov
fmuls
dec
ret
jb
pop
jmp
cli
add
lret
adc
xchg
push
loopne
xor
cmp
out
roll
lcall
or
or
imul
cmpb
inc
adc
fisubrl
cmp
cmpsb
mov
pusha
cltd
daa
xchg
adc
push
movsl
inc
adc
out
xchg
inc
std
adc
cld
inc
or
es
xor
daa
je
or
add
in
fs
push
xorb
push
insb
add
dec
sub
cs
orl
aaa
test
outsb
dec
orb
push
pop
imul
std
push
and
inc
adc
cmp
add
ret
sbb
jnp
push
cmc
sub
je
popf
mov
rorb
sub
movsb
mov
call
std
popf
inc
in
and
stc
and
push
jl
add
mov
sub
fwait
and
push
or
das
lods
push
dec
and
sub
dec
sahf
hlt
or
xlat
add
cmpsl
mov
mov
call
mov
xor
and
add
pop
fwait
fs
stos
sbb
insl
out
lock
jge
inc
and
pop
add
mov
lods
pop
and
das
pop
test
sub
out
or
sub
mov
or
sbb
icebp
mov
adc
or
add
test
insb
add
push
dec
push
dec
adc
test
fsubrs
inc
ret
rcrl
outsl
sbb
in
repz
testb
dec
movb
sub
adc
mov
pusha
mov
xchg
pushf
xor
icebp
adc
jl
push
dec
xlat
sub
add
hlt
or
cmpsb
or
lods
bound
lret
gs
hlt
dec
std
aaa
xchg
loopne
add
inc
cmp
in
mov
push
je
or
je
out
arpl
std
jo
cmpl
mov
push
jo
or
jo
mov
ss
mov
lea
jnp
push
and
cmpsl
pushf
mov
xor
data16
xchg
ficompl
lods
pop
daa
jmp
push
insb
mov
mov
and
pop
lea
add
mov
lea
xchg
push
mov
lods
or
scas
dec
loop
or
sbb
inc
gs
lds
mov
loopne
and
sub
pushf
push
xor
push
inc
pushf
nop
push
add
add
push
rep
sbb
mull
je
or
movl
dec
mov
jp
xlat
test
sbb
lea
add
loopne
stos
mov
dec
sbb
in
rcll
mov
fs
popf
xor
popf
sbb
ficoms
sbb
cmp
dec
mov
adc
mov
test
rcr
pushl
cmpb
sbb
fs
jns
xchg
jp
popa
mov
adc
jo
xchg
adc
push
xor
cmp
scas
insl
int3
loop
ss
test
enter
std
popf
lret
notb
les
loop
adc
xor
or
push
dec
dec
xor
mov
cmp
mov
stos
rclb
push
cmp
into
push
mov
or
jne
xor
add
enter
xchg
mov
add
push
xorb
add
movsb
gs
lret
sbb
cld
clc
or
jp
ds
cmp
std
mov
loop
xor
ds
and
dec
movsb
cmpsb
rolb
sar
loope
call
jns
dec
or
push
add
inc
adc
fsubrs
lea
xchg
and
jne
jnp
xchg
fucomi
je
xorb
imul
and
addr16
sbb
mov
lea
adcl
mov
fimuls
jg
mov
jns
jno
pop
inc
pop
cmp
rorb
mov
pop
add
xor
ds
pop
sbb
jge
je
jmp
add
pusha
mov
nopl
xchg
sub
push
mov
pop
adc
pop
pop
lock
push
insb
inc
xor
data16
mov
push
nop
or
jmp
inc
and
call
inc
sahf
sbb
jbe
test
into
adc
mov
xchg
cmpl
lret
lcall
mov
jne
cwtl
sbb
xchg
filds
add
dec
repz
push
push
jle
cmc
push
pop
jecxz
mov
xor
sbb
adc
mov
pop
inc
fstl
imul
lock
cld
xchg
pop
mov
outsl
jns
sbb
xchg
sahf
out
inc
or
sbb
loopne
push
stos
inc
in
mov
add
push
hlt
mov
cmc
into
push
mov
sbb
nop
orl
out
mov
add
lret
shlb
cmpsl
sub
mov
fcoms
adcl
sub
adc
orl
add
dec
shll
sbb
mov
pop
add
jne
cli
shl
fwait
shll
in
mov
repz
xor
push
call
add
loopne
mov
mov
addl
add
push
jno
mov
call
jp
fmuls
fmull
orb
xor
psraw
dec
loop
addr16
push
ret
pop
mov
les
pop
xor
and
and
mov
imul
negb
js
cmpb
adcl
imul
add
dec
movsb
out
and
pop
dec
in
dec
mov
mov
or
adc
pop
repnz
sahf
daa
xchg
adc
sbb
mov
inc
adcl
cmp
xchg
dec
mov
or
fsubrl
cwtl
iret
xlat
jo
cmp
xor
pop
jle
lcall
inc
add
mov
mov
mov
xorl
mov
mov
aad
add
adc
or
and
sub
pusha
add
inc
xchg
call
and
dec
arpl
int3
adc
add
xchg
lock
ret
les
repz
std
sub
or
xchg
js
data16
popf
cmp
cmp
push
adc
jg
mov
mov
stc
push
or
imul
insl
push
add
xchg
lea
jbe
cli
pop
cmpsl
mov
push
push
es
jne
dec
add
push
pushf
fucomp
sarb
sbb
jb
inc
xor
adc
adc
push
imul
pop
ret
cmp
jmp
sti
imul
bound
test
jne
inc
inc
jmp
inc
fs
sub
sbb
cmp
adc
icebp
add
inc
add
pop
sbb
mov
push
xlat
lock
push
jmp
test
lret
scas
xor
addr16
sub
jne
scas
popf
fimull
fisubrs
cmpb
mov
xor
cmp
jno
cmpsl
push
adc
mov
inc
cmp
inc
push
mov
add
mov
or
loopne
in
push
mov
test
inc
in
and
in
pop
adc
je
cmpsl
aam
pop
in
mov
repnz
ss
add
mov
setle
or
add
aam
fcoms
jmp
movsb
pop
add
inc
mov
xchg
inc
push
and
mov
xor
or
and
push
stos
inc
test
xchg
push
test
or
mov
cs
shrb
adc
sub
and
stc
rol
pop
les
enter
fwait
mov
and
adc
test
rcl
pop
dec
clc
aam
insb
and
push
lahf
add
xchg
jo
je
or
mov
sub
push
inc
fisubl
cld
je
jge
andb
je
pusha
fisubrl
ret
sub
inc
scas
test
mov
nop
nop
lds
jae
xor
mov
mov
cltd
push
mov
enter
jle
fdivl
push
sbb
push
in
inc
clc
adc
cltd
stos
and
adc
loop
imul
addl
push
push
jge
stc
and
jge
push
cmp
pop
sbb
mov
imul
push
add
xor
adc
hlt
mov
jne
imul
xor
test
jle
pop
cmp
pusha
ret
leave
xor
xchg
sub
les
int3
out
fldenv
mov
xlat
xor
jne
push
dec
and
bound
inc
and
pop
addl
sub
push
dec
mov
fldenv
repz
in
dec
sub
push
addr16
jne
xor
inc
sahf
push
insb
dec
hlt
mov
jle
loope
sbb
imul
mov
fcoml
cmp
xor
mov
add
arpl
mov
xchg
or
sysret
ja
arpl
mov
jmp
mov
cmp
or
rorb
or
jg
call
out
or
cmp
test
xor
jb
pushf
inc
push
not
loop
test
jb
lds
push
movl
call
add
das
or
add
mov
or
jmp
pop
and
xor
push
in
enter
ja
or
test
cmc
mov
or
aaa
and
or
xchg
pusha
sbb
jo
inc
sbb
sbb
adc
ret
pop
sbb
fwait
sahf
cmp
inc
pop
add
aaa
xor
push
sub
nop
loope
and
jp
jo
fdivrp
leave
pop
js
xchg
out
cmp
jge
adc
mov
iret
jne
rcr
xor
push
jb
cwtl
lahf
and
test
lock
or
lahf
xor
adc
push
pop
sub
inc
push
nop
mov
cmp
add
enter
xchg
or
and
out
dec
mov
dec
sub
pusha
and
add
sub
jno
inc
lret
fs
add
outsl
add
lret
xlat
pop
pop
lahf
inc
popa
mov
call
xchg
inc
add
aas
sahf
adc
lcall
or
and
pop
sub
push
inc
test
lods
daa
and
fsubrl
ss
xor
dec
cmp
mov
pop
xchg
je
adc
pusha
add
jmp
mov
lds
cltd
add
repnz
jae
aas
adc
push
xorb
push
cmp
push
lods
ficomps
push
add
pop
pop
add
pusha
fistpll
bound
adc
js
test
push
or
and
xchg
inc
and
pushf
and
add
cmp
data16
push
js
loope
xor
sbb
pop
and
es
int3
xchg
mov
xchg
jp
and
in
stc
push
or
fldl
push
lea
mov
sbb
add
adcb
pusha
and
or
or
jo
add
hlt
add
sub
or
lahf
inc
cmp
add
mov
fisttps
or
mov
and
or
dec
and
insb
shrl
add
dec
xor
mov
push
adc
mov
inc
mull
add
out
dec
adc
xor
or
insb
adc
sbb
inc
push
mov
or
xor
xor
or
cmp
push
cwtl
push
ret
sbb
sbb
cmpl
pop
add
add
mov
cmp
or
cmpsl
adc
push
enter
dec
clc
and
subb
mov
sbb
call
les
movl
add
jns
inc
adc
sub
cmp
js
sbb
xchg
aas
xor
mov
dec
enter
pop
push
outsb
mov
test
jle
loopne
cmp
mov
mov
in
and
and
dec
xchg
test
sbb
test
mov
clc
into
roll
mov
fimuls
sbb
and
ret
inc
andb
fimull
push
out
fisttpll
insl
or
jnp
js
cs
popa
daa
add
cwtl
sub
inc
adc
mov
and
mov
lea
movsb
ja
in
push
aaa
sbb
pop
fisubs
shrb
xchg
data16
ljmp
xor
add
call
mov
adc
mov
xor
dec
and
pushf
dec
rcrb
sub
sub
subb
arpl
mov
aam
cmpsb
test
add
test
sbb
repz
push
into
pop
pop
mov
push
jno
loope
rorl
rcrb
call
jbe
push
push
add
jge
pop
add
call
mov
pop
les
or
fs
or
movsb
push
pop
mov
nop
or
mov
pop
cmp
arpl
test
pop
decb
mov
dec
enter
jmp
test
lods
xchg
push
push
into
pop
pop
stos
and
jmp
enter
mov
and
mov
mov
call
push
and
les
fwait
addr16
bound
inc
push
outsb
inc
in
or
int3
sbbl
jns
cmp
and
ret
lret
mov
dec
imul
inc
movsb
mov
mov
mov
cltd
adc
adc
dec
or
rolb
inc
xchg
jbe
scas
movsb
call
jno
add
iret
ja
cmp
and
dec
cmpsl
int3
dec
sub
aaa
lahf
movsb
inc
jge
add
and
fcomps
aaa
push
dec
add
arpl
or
mov
push
insl
xlat
rcll
fs
ds
inc
mov
adc
sub
fsts
sbb
loope
or
adc
dec
rcl
pusha
sbb
mov
nop
data16
jp
dec
arpl
dec
jg
mov
pop
bnd
jp
adc
in
shrb
orl
jbe
inc
mov
stos
adc
ja
jle
cli
sti
dec
je
or
and
in
in
shrb
bnd
sub
mov
sbb
sbb
rolb
fcomps
lcall
repz
push
in
push
mov
lods
arpl
notl
jge
cmpsb
push
in
mov
stos
popa
test
ret
adc
pop
push
mov
dec
mov
push
fstpl
pop
cld
mov
clc
daa
call
add
dec
xchg
andb
xchg
ret
or
add
test
in
std
dec
jno
ret
xor
push
mov
dec
push
or
add
mov
mov
ljmp
repnz
xchg
js
mov
cmp
das
mov
or
push
insl
enter
push
cli
jne
add
xor
adcb
scas
mov
subb
sbb
in
add
cmpb
add
out
loope
adc
mov
cmpsl
push
jle
daa
dec
js
mov
or
jne
lock
mov
xor
hlt
pop
sub
push
mov
out
lret
inc
mov
and
push
push
add
push
mov
mov
xor
fldl
sbb
imul
cmpsl
inc
mov
repz
inc
mov
les
xor
inc
xchg
loopne
cmp
lcall
pop
add
test
mov
out
out
pop
sbb
cmpsl
sub
xchg
in
mov
mov
movsb
add
add
out
and
push
adc
jmp
lock
jne
xchg
jl
fcompl
xorb
sbb
add
jl
adc
cltd
mov
jecxz
test
jl
xor
sbb
add
dec
push
xor
cmp
mov
lret
add
adc
xor
push
sub
call
mov
cmpsb
xchg
mov
push
inc
inc
xchg
leave
cmpsb
adc
ret
fidivrs
inc
dec
sbb
adc
ss
ret
push
fisttpll
sbb
rcrl
ret
cmovae
pop
sbbb
jl
mov
jmp
sub
mov
and
push
add
mov
repz
lahf
xchg
sub
push
adc
popa
shl
xchg
sbb
adcl
into
loop
mov
call
jmp
sbb
xchg
inc
cld
aam
inc
sub
mov
aas
push
nop
sbb
cwtl
aad
mov
and
in
data16
add
repnz
repnz
pop
or
leave
cltd
popa
or
lret
or
nop
push
add
hlt
decb
jg
sub
push
movb
push
adc
inc
push
add
sbb
cmpsl
lods
and
jg
jl
shlb
mov
lret
ret
ss
lock
jge
adc
inc
pop
cmp
add
sub
mov
jl
mov
int3
shlb
push
dec
push
inc
add
or
sub
call
cmp
call
ja
jne
push
adc
fldl
sbb
or
push
xor
or
adc
mov
fmuls
push
add
out
adc
pop
push
outsl
push
out
inc
push
xchg
push
outsb
dec
adc
jp
mov
aas
in
aam
cmp
sarb
imul
mov
push
add
xor
push
mov
bound
add
pusha
stos
rolb
pusha
cmp
popa
dec
vhaddpd
icebp
jle
je
in
xorl
push
test
xor
dec
or
push
jo
sti
xchg
push
inc
and
add
je
push
sbb
push
adc
push
loop
addb
adc
pshufw
cltd
jmp
push
fwait
in
stos
sbb
pop
jmp
inc
hlt
adc
mov
test
inc
add
mov
dec
and
push
adc
push
sbb
loope
cltd
iret
dec
adc
add
loope
iret
cmp
pop
push
xor
in
add
repnz
or
pusha
push
push
stc
lret
dec
enter
jo
les
cli
add
inc
scas
xor
daa
inc
lods
mov
mov
push
mov
sahf
or
push
loope
jns
jne
call
inc
sarl
orl
popa
inc
and
add
jbe
adc
adc
xor
xchg
test
popa
int3
call
out
dec
inc
push
add
loopne
sub
enter
loope
or
and
sub
imul
pop
adc
pop
or
or
adc
and
ret
or
jmp
add
adc
inc
rcrl
mov
loope
mov
lock
dec
or
dec
mov
mov
or
stc
fs
pusha
pop
stos
addb
or
add
je
insb
in
add
push
sub
sbb
out
sbb
cltd
push
jg
push
sub
or
insl
fs
int
in
pop
mov
push
call
pop
lea
mov
imul
add
mov
ret
repnz
rolb
dec
scas
mov
insb
cmc
ret
imul
int
cs
stos
mov
add
mov
cmpsl
inc
lods
adc
mov
jbe
or
andb
movsb
gs
aam
pop
cmc
mov
cmc
cmp
or
or
or
insl
mov
cmp
jo
daa
xor
ja
push
xor
lds
add
sbb
mov
xor
xor
sub
cmc
cmp
jo
pop
lea
in
push
in
dec
pusha
daa
or
mov
dec
pusha
decl
rol
mov
ror
xor
shr
xor
sub
jnp
mov
pushl
repz
xor
add
add
add
mov
ror
repz
or
mov
and
not
and
xor
add
add
jb
fistpl
outsb
sub
nop
sbb
stos
mov
mov
ror
cli
push
xor
add
xor
and
and
xchg
add
or
push
aam
xor
and
push
fs
sub
sub
fmull
push
push
or
xlat
ret
sbb
sub
rolb
testl
hlt
add
xor
fsubr
orl
in
or
push
xor
sub
jae
stc
ljmpw
ret
shr
xor
jae
add
push
xor
xchg
xchg
cmpsb
jb
loopne
inc
xor
dec
shll
in
call
in
shl
in
add
cmp
bound
push
bound
add
adc
aaa
sbb
add
ret
test
call
loopne
push
nop
cmpsb
shl
call
mov
loopne
xor
pop
cmp
aam
cmp
push
xor
dec
es
or
int3
call
add
in
push
xor
and
and
lahf
neg
jne
out
iret
or
xor
lcall
push
test
adc
mov
inc
jo
mov
push
jo
ficoms
sub
mov
lahf
test
xor
inc
adc
push
cld
rol
xor
jne
mov
filds
cltd
dec
pop
xchg
mov
inc
fadds
pop
jbe
call
or
ret
lret
push
clc
jp
cld
jo
xor
xlat
add
gs
fdivrs
lcall
call
in
rclb
icebp
ret
cld
lret
inc
mov
lods
push
or
xchg
clc
jo
cli
movsb
inc
jo
stos
adcb
sbb
aaa
cmp
test
call
in
push
inc
shr
shlb
sbb
push
roll
xor
shlb
add
inc
lcall
in
add
lahf
jo
add
imul
inc
and
pop
imul
add
adcb
in
push
xor
es
lcall
adc
fs
add
jae
push
pop
and
int
pop
push
pop
mov
sub
add
rol
movsb
sbb
push
or
or
or
add
xchg
and
sub
xchg
movsl
fcoms
stc
enter
andl
add
and
cmpsl
cmp
in
subl
cltd
add
push
imul
xor
mov
adc
icebp
inc
mov
orb
jne
aad
dec
xchg
fmuls
adc
imul
fidivs
push
sbb
sub
movsb
lock
jno
nop
push
filds
push
aas
pop
add
sub
mov
enter
loopne
incl
jle
loopne
pop
insb
lea
rolb
aas
push
add
sub
mov
insb
test
xor
jp
pop
sub
pushl
add
push
adc
xor
mov
fwait
xchg
or
rol
and
mov
adc
mov
sbb
in
cmp
jno
jbe
jae
mov
sub
or
mov
fidivrl
add
sub
sub
pop
out
out
sarb
mov
ret
dec
or
mov
outsb
add
pop
and
add
add
lock
jl
sub
jg
or
cmp
jbe
or
test
adc
fs
adc
rol
div
fwait
add
push
jae
push
pop
fadds
rep
or
fildll
and
sbb
jbe
or
mov
push
pop
loopne
ror
mov
mov
xchg
or
xchg
ljmp
mov
mov
nop
cmp
inc
xchg
adc
fcoms
pop
push
loop
and
aam
jns
sub
sbb
test
push
inc
add
mov
inc
add
dec
lea
int3
aas
and
cld
in
lea
mov
add
or
in
and
repz
xchg
aas
sub
mov
int
jecxz
sub
and
dec
scas
or
push
xchg
ret
mov
push
test
hlt
jg
adc
loope
movsb
cwtl
test
adcb
dec
aad
or
pop
jge
dec
mov
fwait
xchg
aas
fsubs
jae
mov
andl
adc
pop
push
std
or
or
addr16
add
dec
add
lock
pusha
xor
inc
call
pusha
sub
loope
inc
test
add
mov
orb
test
or
add
jle,pt
or
imul
adc
add
cs
push
sub
and
inc
cltd
add
push
mov
mov
sub
push
dec
push
or
sahf
notl
and
and
sub
orl
dec
adc
faddp
cmp
imul
hlt
push
clc
adc
push
test
pop
inc
pusha
push
mov
sbb
mov
push
xor
and
lcall
outsb
fiaddl
or
cmp
popa
insb
stos
mov
lahf
stos
mov
fstl
adc
and
add
loop
imul
mov
add
clc
int3
shl
dec
jle
es
push
dec
add
add
jle
push
nop
add
arpl
inc
dec
push
pop
dec
inc
in
lds
lea
adc
or
xchg
mov
jl
pop
hlt
pop
mov
das
or
test
fildl
std
ss
sahf
enter
fndisi(8087
push
xchg
fs
gs
xor
push
in
lods
push
lahf
loop
adcb
xor
lods
sbb
arpl
test
popa
push
pop
test
jl
dec
lea
adc
sahf
jle
dec
fisttpl
cmpsl
sahf
xlat
and
cmp
pop
jnp
add
inc
out
addb
loopne
sbb
in
add
add
add
xor
pop
jge
call
inc
nop
out
add
fcom
test
rolb
testb
pop
sub
dec
mov
and
insb
loopne
or
fdivrl
inc
mov
lock
push
or
inc
cmp
popa
mov
addl
and
push
adc
dec
and
or
inc
cmp
in
cli
pop
jmp
mov
pop
add
sub
mov
cmp
sti
testl
mov
push
add
es
or
in
pop
push
push
imul
mov
iret
xchg
add
mov
ret
cmpsb
dec
xor
jbe
adc
sub
inc
iret
sub
scas
push
jno
pop
cmp
xchg
push
es
and
pop
xorl
sub
mov
lods
repnz
lret
xor
xchg
push
push
adc
add
fldcw
dec
out
jge
xchg
jbe
andl
jae
sbbb
dec
in
loope
iret
or
movsb
nop
add
cs
push
pop
add
or
xchg
filds
shlb
mov
xchg
je
inc
enter
dec
push
mov
rorl
mov
mov
adc
cmp
cmp
mov
pop
jne
or
xchg
xorl
lock
pusha
aas
or
fistl
push
xadd
xchg
sbb
jnp
or
loope
mov
pop
cmp
sbb
or
icebp
mov
ret
mov
leave
cltd
sub
pop
or
inc
rcrl
pop
fsts
cli
sarl
sti
test
jbe
push
push
repnz
bound
jae
push
inc
lahf
push
mov
sarl
jb
jmp
int3
jbe
bnd
sub
push
xchg
mov
xor
mov
sub
or
mov
push
mov
xchg
sbb
xor
dec
pop
mov
mov
sbb
push
xchg
xchg
sub
js
mov
jns
jns
je
lds
mov
int3
sahf
and
add
and
inc
xor
lea
mov
xchg
and
mov
mov
dec
inc
jge
xchg
addl
and
jne
push
add
ret
xor
and
pop
mov
adc
or
sbb
cmpsl
inc
inc
push
gs
mov
in
adc
incb
sub
cmp
pop
pusha
or
jbe
sub
add
xchg
mov
push
pop
cli
push
int3
data16
ljmp
xlat
sbb
mov
jecxz
push
adc
pop
pop
dec
int3
or
add
int
inc
push
cmc
dec
repz
inc
sbb
xchg
push
sub
mov
mov
mov
push
push
scas
xchg
jmp
sub
cmp
jne
push
sarb
movsb
pop
test
sbbl
sbb
mov
sub
rorl
clc
and
fisttpl
scas
sub
adc
insl
add
adc
les
repz
and
xchg
inc
and
mov
jnp
xlat
jbe
xchg
scas
jo
les
lret
xchg
dec
and
push
popf
push
or
push
enter
in
jo
jo
dec
pop
cmp
xchg
adc
add
je
orl
outsl
test
movsb
mov
mov
push
mov
xchg
fsubl
adc
or
jp
add
sub
subl
dec
inc
jne
or
ja
inc
aaa
inc
arpl
out
push
bound
stc
ja
lahf
pusha
dec
in
ja
ss
cmp
jb
shl
lock
push
mov
mov
loopne
jp
adcl
sahf
inc
xor
in
sbb
ja
pop
push
loope
add
jmp
mov
stc
dec
cmpsb
jo
add
ljmp
loop
mov
nop
mulb
lods
sub
ret
dec
lahf
mov
ret
mov
mov
scas
mov
in
xchg
inc
dec
xor
pop
ret
jmp
sbb
in
xchg
fidivs
shlb
cmp
add
sub
bnd
jo
ret
pushf
loopne
add
clc
inc
aam
sub
or
sub
fisttpll
mov
inc
cmp
mov
cli
cmpsl
jl
lea
les
aam
out
lock
imull
mov
mov
ret
sti
adc
mov
pop
cwtl
xor
mov
jne
dec
leave
popf
xchg
or
mov
lret
add
or
rorl
movsb
imul
xchg
xchg
or
jl
and
push
dec
add
add
sbb
subl
std
pop
rorb
or
add
outsl
sub
jle
push
add
xor
and
xchg
xor
inc
cmp
jl
pop
test
jo
sti
or
adc
or
cmp
push
xor
xor
dec
pop
xor
adc
outsl
push
adc
int
out
or
jle
add
clc
cmpsl
jo
adc
dec
jbe
xor
pop
ret
push
das
ret
or
jl
les
mov
push
sub
xor
arpl
popa
cmpsb
ds
ss
xchg
add
adc
xor
and
pusha
test
xchg
xchg
cmp
sbb
push
call
cmp
xor
stos
inc
and
adc
movntps
das
mov
in
inc
mov
sbb
and
inc
xor
mov
sbb
or
movsb
mov
push
in
cmp
loope
push
mov
and
add
mov
enter
shl
add
mov
shl
xor
mov
mov
shl
rorl
movsl
movsb
mov
cmc
add
arpl
fstl
jge
mov
add
push
fidivrs
lock
lea
add
adc
pop
add
or
or
roll
gs
add
pop
or
fs
xor
jp
imul
pop
adc
loope
sbb
or
sar
push
cmpb
call
mov
adc
cmp
jl
inc
sbb
testb
mov
and
mov
xor
add
jl
dec
mov
shll
push
mov
ja
bound
mov
call
add
cmpsl
xchg
or
jae
sbb
shl
and
shrl
sub
sub
loopne
gs
and
sub
hlt
and
mov
cmpsb
ljmp
mov
mov
shrl
addr16
push
imul
or
sbb
sbb
test
cltd
insl
push
xor
mov
and
cltd
add
dec
and
xchg
jae
or
orl
adcb
cmpsl
xchg
in
mov
ficoms
mov
xchg
add
adc
or
call
push
jmp
inc
dec
push
and
and
push
dec
je
les
mov
adc
and
aaa
inc
adc
dec
sub
ret
jp
or
mov
rol
jle
pop
push
fld
enter
pop
push
mov
jbe
movsl
jmp
push
xchg
mov
jo
inc
add
call
push
mov
int
inc
mov
clc
sarl
lahf
xchg
push
and
add
adc
enter
out
jns
mov
sub
aam
fstps
add
mov
push
ret
pop
push
sub
cmp
sub
dec
add
fisubl
in
aam
push
sub
imul
or
sbb
pusha
sbb
mov
push
jle
add
lcall
sub
push
js
xor
cmp
rcrl
add
mov
xchg
xor
xchg
addb
inc
adc
sbb
inc
or
mull
insb
pusha
in
popf
pop
pop
ret
add
or
pop
pop
gs
jmp
rorb
sub
or
sarl
pop
in
push
addb
add
add
push
push
sub
push
fbstp
cmpsb
subl
subl
dec
rclb
and
cmp
scas
mov
mov
adc
and
push
cld
sub
mov
sbb
int
inc
in
xlat
dec
mov
stos
sbb
lock
mov
cmp
push
lds
sub
inc
or
cmp
sub
pop
inc
mov
dec
mov
lods
jnp
int3
stc
push
gs
adc
in
pop
es
addl
test
and
clc
inc
xchg
andb
mov
xor
jbe
out
add
mov
or
sbb
push
mov
mov
push
aam
xor
dec
push
push
mov
push
or
shll
popa
cmpsb
jo
clc
je
xchg
clc
and
adcl
push
in
push
das
hlt
dec
sub
mov
loopne
addr16
icebp
cmpl
fisttpll
daa
xchg
clc
add
add
or
cmp
pop
pop
mov
pop
push
cmpsl
or
or
xor
jmp
mov
add
adc
imul
arpl
mov
push
and
mov
mov
test
addb
adc
sbb
adc
lds
mov
mov
or
inc
lcall
and
mov
pop
cmp
inc
packsswb
and
daa
pusha
cld
add
out
cmp
jle
pushf
outsb
rcrb
rorb
pop
inc
cmp
jmp
cmp
xor
lret
dec
sub
test
imul
pop
cmp
shrl
es
jo
push
insl
scas
imul
mov
jno
jmp
and
jl
jne
repz
imul
es
sub
push
movsl
in
inc
push
dec
insb
mov
or
repnz
insb
test
jg
inc
or
or
jo
add
mov
sub
pop
cmp
ds
or
jg
jl
test
add
cmpl
push
add
into
or
inc
add
xor
jne
out
add
dec
ret
cmpsb
pushf
xchg
mov
push
iret
rclb
add
jecxz
add
add
call
xor
or
arpl
movl
or
mov
sub
push
cmp
sarl
sbb
add
mov
add
cli
testb
je
cmp
mov
push
add
push
add
push
cmp
xchg
jmp
mov
inc
lret
cmp
jne
push
adc
add
out
out
shll
add
mov
sub
int3
scas
add
loopne
or
mov
or
sbb
lock
adc
inc
inc
out
aas
js
push
pop
mov
push
add
xor
sub
sub
jae
dec
and
into
fsts
pop
es
out
jge
xor
or
adc
in
sti
mov
jne
jg
add
or
orl
push
xchg
mov
mov
cmp
fidivrs
sbb
jl
sub
and
push
pop
test
push
mov
or
test
mov
push
sbb
push
push
mov
test
or
leave
or
inc
mov
andb
cmpb
cmc
dec
dec
cmp
jno
fsubr
mov
add
dec
push
push
sbb
out
xchg
xlat
adc
cmpsb
lcall
mov
and
scas
rcrl
std
add
mov
sub
enter
or
push
mov
sbb
sbb
mov
repnz
roll
add
nop
sbb
pop
cmpb
leave
jmp
lea
push
arpl
add
sbb
dec
adc
inc
loopne
or
bswap
lret
into
jne
mov
mov
cmp
pop
or
inc
mov
stc
jmp
fdivp
mov
xor
lret
jmp
push
rorl
pop
xor
push
sub
ret
xchg
inc
inc
mov
ficompl
inc
pop
mov
jb
aas
pop
cmc
pop
sub
cmp
jne
push
xchg
add
aam
inc
mov
ss
ficompl
cmp
xchg
addw
xor
add
jmp
jecxz
add
sub
fsubrs
fstps
push
mov
dec
sbb
addl
mov
rclb
adc
xchg
sbb
cmpsl
call
inc
aas
rorb
add
loopne
xchg
push
lahf
jb
pusha
mov
sub
mov
sahf
test
or
cli
lods
mov
push
sub
pop
jmp
and
xchg
test
mov
push
fcompl
or
paddw
ret
fwait
add
inc
inc
add
mov
xlat
roll
lcall
adc
pop
mov
jae
das
in
adc
or
ss
dec
and
dec
add
or
ret
int3
add
addr16
sahf
je
mov
add
iret
ds
add
and
loope
and
jle
rolb
pop
and
add
pusha
add
jbe
pusha
divb
test
mov
pop
lcall
icebp
je
jmp
lret
sbb
test
adc
std
test
es
jle
inc
and
push
inc
shrl
push
cmp
push
jne
popf
add
addl
movsb
and
jno
push
mov
rcll
sbb
sub
mov
and
adc
mov
push
mov
and
ss
mov
pusha
sti
dec
pop
dec
insb
sub
jae
decl
or
sbb
js
mov
add
sbb
xor
jmp
ss
fs
in
mov
cmp
insl
loopne
ljmp
add
mov
outsb
adcl
push
sbb
and
add
adc
sbb
or
mov
lock
add
xchg
mov
adc
cmp
add
or
mov
pop
scas
sahf
adc
push
mov
adc
cmp
pop
adc
incb
sbb
jne
mov
ljmp
and
je
xor
xchg
fwait
shlb
adc
push
in
fstps
js
pushf
cmp
mov
mov
jmp
movsl
addb
or
dec
insl
cmp
nop
mov
pop
in
es
or
mov
popl
es
adc
dec
cltd
pop
fidivl
xchg
test
stos
and
xlat
in
jmp
jmp
or
lock
push
scas
sbb
adc
and
push
push
fmulp
mov
adc
add
outsl
je
push
cli
and
xor
mov
xor
stos
pop
pusha
add
push
and
addb
mov
int
out
add
ja
adc
or
loop
jae
arpl
xor
mov
xor
jl
and
scas
xor
cmpl
out
push
sbb
je
sar
xor
repz
mov
cmp
mov
movb
insl
xor
loop
ljmp
cltd
jns
dec
and
in
xchg
icebp
sahf
push
sbbl
enter
pop
pop
ret
dec
or
inc
sbb
lds
pop
in
subl
stos
adc
cwtl
cmc
dec
jnp
xor
mov
mov
adc
gs
iret
inc
and
push
out
jb
and
mov
es
dec
addl
shl
push
mov
adc
pop
aam
mov
mov
xchg
test
pop
fdivrs
movsb
add
add
cmp
js
stos
lods
push
pop
sti
push
aas
lock
scas
mov
aad
rcrb
dec
movsb
jbe
add
call
adc
nop
push
sub
mov
cmp
in
pop
clc
mov
loop
or
fdivrl
push
dec
inc
mov
and
jo
sbb
cmp
cmp
jo
cmp
add
mov
cmp
push
hlt
pop
jp
ss
push
mov
add
and
push
outsl
pop
test
fisubrs
dec
popf
cmp
in
push
push
dec
sbb
mov
fsts
cltd
les
push
fnsave
js
adc
push
dec
adc
or
xor
and
enter
clc
cmp
inc
or
pop
je
jmp
or
push
cmp
loope
sub
add
push
jns
add
add
cmp
ret
sbbl
sub
mov
sbb
pusha
sub
push
jno
nop
and
jecxz
push
xor
icebp
jo
xchg
js
imul
and
inc
xchg
pusha
out
and
and
pushf
es
push
mov
aaa
sbb
pop
pop
and
pop
lcall
push
cmp
mov
adc
or
inc
jl
and
inc
loope
add
clc
push
gs
mov
xchg
add
and
and
inc
xchg
dec
push
shl
xchg
mov
xor
subb
movsl
ljmp
or
icebp
mov
pushf
push
lahf
jl
xlat
add
push
lock
roll
pop
or
adc
int3
push
stos
jmp
cmpsl
and
addb
cltd
adc
or
adc
sbb
loop
adc
push
gs
fcmovb
mov
cmp
mov
xchg
push
mov
test
adc
rol
cmp
lds
dec
sbb
ret
and
sbb
dec
je
test
test
jne
imul
rorl
jbe
loop
pusha
jne
shll
sbbb
nop
sbb
adc
rcl
je
movl
dec
sub
mov
test
adc
pop
mov
push
addb
pmaxsw
rcrb
js
xor
add
shrb
aas
ficoms
loope
cmpsb
and
cmp
lret
ret
ljmp
and
xchg
mov
mov
sarb
cmp
mov
and
clc
jg
fs
test
jmp
movq
out
or
sub
push
clc
jae
xor
jns
insl
or
xor
cli
rcl
lret
test
mov
pop
jge
shrl
repz
or
jg
or
xchg
ret
adc
jnp
mov
out
jge
test
mov
adc
push
add
mov
and
mov
pop
add
imul
ret
mov
imul
mov
pusha
addsd
int
out
std
out
fldl
sbb
sbb
inc
pop
fistpl
and
sbb
xchg
xchg
sub
inc
or
les
pop
and
adc
incl
xchg
adc
pop
dec
dec
and
pop
xor
addr16
push
push
ret
jge
mov
test
ret
jge
xchg
pop
enter
lds
fldl
dec
mov
or
jb
pop
add
lock
mov
aam
cli
cmpsb
mov
xor
fnstcw
mov
adcl
jmp
loopne
add
or
jle
and
je
rep
mov
dec
inc
dec
pushf
xor
rorb
sbb
lea
daa
pop
adc
aaa
jno
xor
outsb
or
test
add
cmp
imul
push
insl
addb
adc
add
mov
add
dec
add
jb
push
out
stc
repz
push
pop
and
mov
add
dec
pop
pop
mov
jle
into
out
jecxz
enter
sti
incl
rep
jmp
int3
mov
xor
jb
mov
data16
xor
in
push
clc
es
dec
push
and
cmp
mov
mov
or
scas
cmp
mov
mov
add
movsl
push
dec
add
movl
cmpsb
inc
add
add
jnp
push
mov
or
push
mov
cmp
cmp
cwtl
jno
mov
out
sahf
out
in
call
jns
lock
hlt
clc
clc
pop
stos
les
mov
push
mov
add
fldenv
jmp
mov
sti
or
and
push
nop
inc
push
fildl
inc
cmp
sbb
lea
dec
scas
mov
or
sub
out
jo
dec
adc
and
and
xchg
daa
stc
sub
sub
test
rcr
xchg
frstor
add
out
add
or
cs
mov
loop
addr16
add
jnp
sbb
push
sahf
mov
or
push
iret
repz
xor
inc
dec
push
addr16
mov
aaa
sbb
sbb
iret
repz
adc
adc
or
and
repz
or
jl
fwait
and
or
dec
lcall
adc
js
sahf
pop
xor
pop
out
add
add
and
xor
movsb
mov
nop
sti
and
mov
pop
mov
fbld
pushf
mov
idivl
bound
adc
push
sub
xchg
mov
test
je
add
add
or
xchg
repnz
lds
or
jle
mov
jmp
jp
jo
jl
je
mov
mov
push
lods
adc
sahf
mov
pushl
pop
test
sbb
add
rcll
pusha
or
daa
icebp
cwtl
sbb
cmp
mov
inc
les
sbb
je,pn
cmpsl
add
sub
sarl
mov
push
sbb
dec
insb
shr
int
or
or
push
hlt
cmp
fiadds
ret
add
sub
les
cmpl
push
in
outsl
jne
xchg
adcl
and
test
push
mov
add
push
xchg
inc
or
mov
fs
mov
cli
adc
adc
jne
inc
add
int
sbb
xor
adc
aam
lcall
dec
adc
xchg
inc
inc
in
and
popa
cmpsb
push
push
adc
mov
and
leave
mov
enter
int3
mov
cli
push
pop
inc
inc
cmp
cmp
push
and
dec
mov
jns
repz
xchg
dec
adc
in
xor
push
add
push
push
lret
push
pop
add
es
or
sahf
or
or
js
add
sub
jns
xchg
mov
pop
mov
cmpl
daa
andb
imul
hlt
cmp
movsb
movsl
repz
mov
dec
daa
mov
add
add
sahf
cmp
ret
insl
adc
loope
idivb
or
dec
leave
sbb
or
or
inc
cmp
icebp
rcrl
mov
mov
and
ret
cmp
ds
int
or
jne
sbb
je
add
jg
jmp
and
push
out
or
orb
add
lods
lods
pop
movl
fnstsw
int
dec
int3
sbb
seta
sbb
inc
or
xchg
inc
mov
je
add
mov
or
orl
sbb
stc
adc
sti
hlt
daa
sti
push
add
fcoml
xor
and
dec
push
sub
add
sbb
pop
mov
add
sahf
roll
lea
mov
insb
outsb
mov
fidivl
outsb
sub
mov
push
inc
cmp
cmc
cmp
iret
jecxz
jmp
jg
cmp
ja
push
mov
rorb
push
aaa
ret
test
in
sub
fmuls
or
add
jmp
lock
mov
or
mov
inc
ds
jbe
movsl
inc
jl
mov
fiaddl
fildl
jmp
mov
dec
mov
mov
dec
dec
mov
inc
cmp
sub
repnz
ret
adc
inc
sbb
mov
jb
or
add
icebp
test
or
xor
or
sub
sbb
sub
ljmp
in
jg
insl
push
cmp
jb
lea
xchg
mov
cld
outsb
mov
scas
and
cld
jne
mov
push
fdivrl
aaa
es
jne
mov
int3
sar
adc
or
pushf
jge
ret
adc
push
jle
lahf
testl
jmp
std
std
jmp
fstps
ret
pmaxub
adc
adc
in
cmc
cmp
movb
mov
sub
jmp
stc
hlt
or
dec
mov
jle
out
add
shll
dec
inc
rolb
mov
testb
cmpb
hlt
dec
adc
jo
xor
xchg
or
cs
push
add
stos
sub
std
or
or
sub
or
pop
add
or
mov
adc
adc
sbbl
ss
aas
push
dec
xchg
cs
adc
rolb
add
fadds
pop
add
mov
push
adc
or
jg
add
mov
mov
dec
mov
jno
ret
adc
push
popa
or
lock
and
inc
sub
mov
repz
sub
jmp
sub
push
push
adc
cmp
div
jb
cmp
and
adc
movb
nop
mov
dec
lea
or
int
jmp
clc
pop
adc
lock
pop
mov
add
or
shrl
add
sbb
sarb
gs
jne
adc
fsts
mov
inc
pop
add
andl
adc
outsl
adc
aam
inc
and
adc
xor
mov
sub
loopne
sbb
cmp
adc
xor
dec
dec
mov
add
and
lods
es
or
push
mov
mov
jle
cmpl
aaa
pop
fidivs
rcrl
fstl
xor
decl
cmp
jne
orl
jmp
adc
jne
sub
adc
push
dec
pop
add
xchg
xchg
fistpl
and
cmp
fisubl
or
in
sbb
cmp
and
fwait
out
mov
jne
pop
jne
dec
add
add
and
inc
lds
mov
xor
or
test
iret
and
test
lret
sub
jmp
fidivs
mov
sub
cmp
ja,pn
xor
lea
dec
adc
sbb
loopne
daa
movsb
nop
lock
fldl
dec
test
push
push
and
lods
inc
lcall
xchg
fsubs
cs
cmc
mov
and
add
sbb
addb
or
or
jne
jbe
mov
mov
inc
mulb
sub
xchg
add
mov
add
mov
and
add
into
mov
out
dec
xor
in
sarb
sbb
mov
mov
pop
aaa
cmc
cmp
jbe
cmp
in
push
dec
loop
add
andb
insl
adc
jbe
popa
push
sub
call
or
pushf
or
imul
imul
stos
mov
shr
gs
jl
jo
inc
mov
pop
sub
test
pop
mov
jmp
jno
jbe
push
cmp
mov
pop
push
mov
fsubs
mov
jne
testb
and
pop
je
adc
xchg
rcrb
fs
ds
adc
adc
mov
shlb
nop
sub
lahf
adc
mov
inc
inc
data16
outsb
fmull
dec
and
daa
or
shl
mov
je
hlt
fs
push
adcl
mov
pop
adc
testb
inc
mov
inc
add
rol
add
lret
dec
jmp
xchg
roll
fdivl
sbb
adc
sub
ds
popf
pop
mov
push
es
push
leave
stos
inc
mov
xor
adc
adc
es
int
out
sbb
jno
lock
leave
xchg
int3
pop
mov
clc
stos
and
outsb
mov
lea
icebp
jo
paddusb
push
inc
fs
add
add
push
push
test
inc
dec
ret
pop
fstl
xor
xor
inc
jbe
sub
clc
jae
fwait
sub
dec
push
or
add
mov
ret
push
cltd
daa
call
incl
sbb
adc
fidivs
sub
jbe
push
or
sbb
incl
pop
and
int
hlt
je
inc
cmp
jb
xor
ret
dec
in
push
adc
cwtl
dec
imul
ss
add
dec
lcall
mov
lcall
add
xchg
adc
or
dec
xor
pop
clc
adc
push
mov
lods
mov
cmp
ja
add
xor
out
cmp
push
mov
sbb
adc
rcll
mov
jmp
pop
test
pop
adc
xchg
in
xchg
push
push
mov
pop
ds
mov
inc
arpl
sbb
mov
mov
mov
xor
add
test
jns
sbbl
mov
shl
add
mov
leave
ljmp
test
outsl
pop
jmp
aam
jge
or
dec
and
shr
adc
mov
movb
sub
sbb
cld
std
lret
fldl
inc
mov
xor
ds
test
imul
stos
and
lret
je
cmpsl
push
xor
inc
stc
xlat
rorl
xor
pop
adc
mov
loopne
xor
ret
push
pushl
mov
or
sub
xchg
dec
ja
ficomps
int3
mov
pop
xchg
mov
add
pop
cltd
dec
cmpsl
jmp
lods
fwait
inc
jmp
jle
push
stc
sahf
insl
popf
aad
push
popf
aaa
pop
pop
decl
jo
inc
clc
int3
push
pop
ds
add
aaa
lock
push
or
cpuid
fldt
pusha
jb
pop
add
vmwrite
adc
mov
cwtl
jl
jb
xor
repnz
test
fidivrl
div
and
shl
adc
hlt
xchg
int
or
aaa
rolb
jecxz
inc
adc
mov
in
insb
mov
push
pop
je
push
sub
and
addr16
push
sub
test
insb
adc
rcr
pusha
ljmp
aam
jno
ret
or
mov
mov
mov
jp
popf
pop
pop
xchg
divb
cld
fmuls
or
imul
jnp
sub
push
xchg
std
mov
mov
dec
pushl
pop
pop
cmc
in
push
jp
and
xlat
test
xor
cmp
and
out
loopne
push
cmpsb
fdivrl
sbb
mov
push
pop
xchg
xor
in
jno
and
cmp
adc
mov
clc
adc
add
xlat
fbstp
adc
imul
cmpl
sbb
add
fisttpl
mov
jle
xchg
fnstsw
mov
jmp
add
aam
lds
cltd
push
and
daa
jbe
mov
add
pusha
pop
test
cmp
jne
or
mov
adc
xor
cmp
push
dec
aam
sub
add
add
fstl
pop
ficoms
sbb
rcrl
add
xchg
mov
add
mov
cld
push
movsl
add
mov
mov
lds
mov
push
mov
add
jl
push
pop
push
pop
and
add
lock
pop
pop
dec
pop
mov
fidivl
cmp
cmp
push
push
daa
outsl
mov
out
mov
sbb
mov
aam
aam
adc
mov
adc
dec
and
mov
jmp
xchg
push
jg
cmp
aam
jp
and
cmpsb
std
test
xorb
scas
or
sbbl
xor
sbb
and
dec
mov
nop
mov
or
loopne
or
jge
mov
hlt
and
push
inc
fistpll
test
dec
enter
add
jl
hlt
ret
or
cmp
pop
jne
cmp
pop
adc
xor
cltd
or
cwtl
cmovne
les
mov
stos
fmull
loope
pushf
pop
and
jmp
cmpsb
push
and
mov
sub
adc
cmp
testb
mov
in
dec
dec
or
cwtl
xor
dec
mov
push
push
push
pop
jle
aaa
mov
cmp
je
movzbl
add
sub
je
add
dec
lahf
ret
lea
repz
rclb
adc
imul
nop
addr16
inc
dec
add
in
inc
push
daa
add
adc
cmp
add
jno
je
lcall
flds
add
cmp
push
push
nop
adcl
jae
sub
or
pop
enter
or
xor
sub
or
or
or
or
or
ja
cmpb
jns
push
cwtl
push
push
and
pusha
in
nopl
in
lods
xor
push
adc
pop
adc
fwait
cmpb
inc
add
popa
in
adc
adc
sahf
lret
out
adc
ret
fisubs
lcall
adc
and
and
push
push
push
lret
adc
mov
pop
xor
in
lcall
cmpb
add
pop
enter
sbb
pop
push
sbb
out
sbb
jb
sbb
add
subl
pusha
push
push
inc
decl
in
push
pop
pop
jne
add
add
sub
lret
les
cli
outsb
lahf
test
pop
mov
movl
xchg
aam
mov
mov
add
jl
xchg
out
std
in
push
in
jno
repnz
sub
rol
enter
lea
aad
cmp
add
cmp
mov
cmp
fwait
out
push
outsb
or
jbe
add
call
repnz
call
xchg
add
mov
sub
ljmp
cmp
out
in
xchg
pop
insb
nop
in
in
cltd
mov
add
in
sahf
out
push
inc
push
nop
out
jge
sbb
dec
jae
inc
pop
lock
enter
xor
icebp
repnz
pslld
and
in
out
std
repz
push
push
leave
std
hlt
hlt
rorl
iret
enter
hlt
fwait
mov
cmp
jg
notb
idivl
push
imul
clc
clc
nop
aaa
jb
cltd
adc
inc
stc
add
cld
cli
cli
and
pusha
in
sti
sbb
mov
cld
cld
cld
je
cld
push
imul
add
pop
ss
jns
sub
std
sbb
aad
or
adc
ret
or
or
ss
pusha
lahf
and
int3
cmpsb
shl
sar
pop
push
imul
es
jecxz
cs
mov
in
stos
enter
inc
les
mov
push
push
jns
sti
out
out
mov
sbbb
inc
repnz
sti
sub
nop
out
inc
sbb
xchg
pop
insb
jmp
in
add
cli
popf
cli
lcall
out
out
lea
inc
out
cltd
push
lock
das
cli
push
cli
sub
stc
repz
push
imul
xchg
or
push
push
stc
inc
pop
dec
xchg
fstpl
mov
div
pop
fwait
adc
enter
add
mov
adc
out
clc
nop
cmpsb
jb
cmp
jns
pop
insb
sti
cltd
mov
push
in
orl
add
jmp
cmp
and
push
xlat
dec
sub
cld
sub
mov
mov
repnz
mul
pop
mov
inc
repnz
scas
notl
cmp
jg
mul
sbb
imul
or
in
repnz
mull
notl
inc
mov
sti
imul
jb
or
jno
testb
mulb
pusha
leave
xchg
negb
int
out
jno
inc
pop
lret
inc
negb
mulb
andb
pop
lcall
mov
pop
xchg
cmc
pop
dec
pop
and
cmc
pop
mov
cmc
div
idivb
fwait
and
push
add
clc
clc
adc
stc
popa
cmp
mov
inc
pop
lret
and
and
hlt
sbb
das
pushw
data16
dec
scas
mov
jge
jo
push
or
sti
lahf
pusha
adc
dec
sbb
ljmp
in
xlat
loop
scas
repz
popa
leave
mov
test
xchg
cmpsb
in
repz
and
and
adc
xchg
pop
push
sbb
jmp
leave
and
mov
mov
sbb
dec
in
in
cmc
scas
adc
and
repnz
orl
sbb
mov
mov
add
divb
icebp
mov
inc
xlat
jb
test
dec
push
cmp
cmp
inc
jb
sbb
add
pushf
mov
ffree
lock
or
push
jno
imul
je
dec
push
lock
scas
inc
add
sbb
inc
repnz
fldl
ss
enter
push
add
sub
out
jne
adc
in
cmovno
push
add
add
mov
cmp
add
push
fwait
push
jnp
and
xchg
adc
jne
adc
add
and
add
sahf
and
ljmp
and
pop
and
pop
test
sub
add
push
sub
insb
mov
dec
popa
lods
push
push
lea
pop
mov
cmpsl
push
std
push
or
mov
fwait
int
outsb
jp
fwait
pop
call
push
cmp
shrl
or
push
pop
repz
push
loope
rol
out
adc
jns
pop
push
xor
pop
add
and
push
call
mov
lock
mov
clc
loope
gs
aam
sbb
push
lock
cs
loopne
add
pushf
jge
push
mov
xor
movsb
lock
push
fistpl
pop
sub
movsb
mov
rcl
pop
sbbb
adc
or
jne
jp
movsb
cs
je
add
sbb
fdivrs
fmuls
and
inc
mov
insb
push
push
test
xor
jl
mov
xchg
inc
add
sub
adc
icebp
shl
mov
xchg
xchg
sbb
imul
jge
mov
or
nop
sbb
and
movl
push
inc
adc
mov
sub
in
in
lcall
adc
imul
mov
nop
adc
and
mov
aam
mov
pop
and
and
pop
rolb
pop
inc
inc
inc
inc
add
or
cmp
cmpb
jb
mov
xchg
imul
mov
gs
vmread
add
xor
dec
outsl
cmpsb
or
nop
rclb
sbb
repnz
je
pop
roll
mov
add
sbb
pop
cmp
adc
mov
enter
add
xor
orps
push
xchg
sbb
pop
adc
xorb
lret
pop
rclb
or
leave
or
jl
xor
repz
add
mov
ljmp
dec
mov
jo
sub
dec
or
in
cmc
sub
push
mov
fldt
inc
loopne
test
inc
push
outsl
ret
stc
aad
loop
xchg
mov
lahf
adc
es
pushl
jne
mov
mov
inc
inc
cmp
push
push
jmp
sbb
xor
xlat
outsb
out
jns
mov
dec
mov
mul
pop
rolb
pop
push
lcall
push
sbbl
jno
and
popa
mov
clc
add
mov
aaa
addb
movsb
dec
mov
rcll
xlat
clc
lods
add
adc
enter
sahf
test
mov
push
stos
add
testb
add
push
sahf
int
inc
or
mov
dec
push
in
sbb
mov
shrl
test
push
push
or
leave
adc
cmp
stos
and
pop
jo
imul
aam
insb
mov
push
ror
xor
sub
shrb
and
repnz
test
mov
mov
inc
xchg
sti
incl
inc
decl
jne,pn
loop
cmpsb
sbb
repnz
mov
pop
ljmp
push
xor
aaa
jbe
push
cltd
pop
idiv
rclb
add
mov
lcall
ja
jo
shlb
adc
adc
xchg
sbb
jmp
cmp
jae
dec
jle
mov
stos
xchg
pop
jae
pop
jbe
mov
loop
les
dec
cli
jmp
loope
pop
sub
adc
cmc
push
push
leave
lock
jg
lret
imul
fildl
call
dec
gs
je
or
dec
inc
xor
in
dec
je
push
push
jne
icebp
dec
adc
xchg
jecxz
pop
insb
adc
adc
cltd
cmp
dec
pop
decb
push
xchg
xchg
out
test
mov
inc
pop
leave
sbb
push
xor
xchg
sbb
or
rolb
and
mov
xchg
rcr
add
fs
xor
mov
push
jo
jge
test
push
pop
add
xchg
stc
ret
push
pop
and
xor
adc
fidivl
sarb
mov
stos
shrb
cmp
rclb
jmp
jge
daa
cmp
lahf
scas
sub
sub
insl
or
aas
lock
push
cltd
pop
idiv
sbb
ret
mov
btr
xchg
inc
out
cmp
pop
push
xor
or
mov
loopne
pop
mov
inc
cmpsl
mov
enter
add
or
imul
dec
inc
jmp
add
jl
mov
sub
pop
adc
cs
je
insb
sub
subb
sbb
sbb
sbb
jecxz
dec
mov
and
sbb
or
add
in
and
jg
pop
loop
add
sti
sub
loop
sub
sub
cmp
hlt
push
jmp
pop
jae
cmp
popf
push
pushf
pushf
push
mov
icebp
push
add
loope
push
jmp
enter
jge
pop
je
sbb
adc
aas
push
jl
fs
das
mov
jle
lcall
adc
outsl
mov
int
int3
dec
jo
aad
movsl
in
pop
je
dec
inc
hlt
and
std
pusha
jne
mov
push
mov
adc
lretw
test
jae
and
adc
insb
lahf
pop
inc
xchg
or
shrb
push
or
cmp
mov
xchg
inc
mov
out
aaa
subl
inc
xlat
jl
test
pop
push
adc
mov
rorl
jg
mov
pushf
add
jp
ret
lea
filds
je
jb
ret
push
je
mov
flds
cmpb
ret
movb
inc
dec
sbb
insl
and
mov
push
hlt
mov
inc
add
sahf
ja
jbe
push
loopne
adc
adc
or
cmp
or
add
jmp
push
jae
sbb
bound
cmpsl
pushl
push
int3
dec
ljmp
pop
imul
ficoms
dec
jg
push
pop
lock
pop
and
adc
sbb
and
dec
test
loop
data16
fildl
mov
aam
add
out
xchg
outsb
decl
inc
jg
cmp
je
gs
lret
xchg
dec
xor
add
jg
fisubl
mov
inc
inc
cmp
je
xchg
mov
cmp
dec
sbb
adc
add
fidivrl
dec
mov
dec
popa
inc
fiadds
mov
sbb
ss
ss
std
clc
xchg
rolb
mov
incl
lcall
sbb
mov
push
inc
sbb
push
bound
sbb
dec
push
aam
cli
ret
pop
sbb
lods
sbb
jnp
mov
popa
adc
mov
sbb
or
xchg
add
jo
dec
push
cmp
sti
dec
bound
add
sub
cltd
mov
nop
hlt
mov
addr16
test
cmp
test
cmp
loopne
pop
cmp
je
mov
or
mov
cmpb
loopne
mov
sbb
push
enter
pop
inc
int
lcall
push
pop
add
out
push
cli
frstor
sbb
inc
sub
dec
movsb
jb
jns
push
add
hlt
mov
mov
adc
fiaddl
clc
dec
mov
add
xlat
pop
add
shrl
lea
popa
bound
pop
lcall
dec
or
pop
jns
add
and
cs
dec
jmp
test
add
mov
pushf
into
inc
pop
icebp
inc
icebp
xor
dec
pop
sub
and
sbb
imul
addl
in
pop
call
fndisi(8087
gs
or
ficompl
xor
sbb
pop
dec
ret
adc
sub
movsb
ret
mov
push
jns
and
jne
xchg
lcall
add
call
rcrl
cmp
or
xor
int
xchg
js
sbb
inc
in
movsb
mov
push
jmp
cmp
ja
gs
hlt
pop
or
inc
inc
ss
pop
mov
test
or
adc
jge
cltd
pop
add
mov
mov
xor
mov
mov
rorl
call
filds
aas
and
rolb
fidivrl
push
push
imul
inc
inc
jns
and
inc
pop
inc
mov
mov
in
jns
jmp
push
imul
sbb
add
adc
pop
mov
out
push
xor
and
data16
or
inc
or
mov
xor
xchg
dec
xchg
pop
lret
inc
jo
fdiv
mov
pusha
lods
add
js
add
movsl
add
loopne,pt
out
sbb
dec
jmp
xor
outsb
mov
inc
add
push
insl
push
arpl
jmp
pop
arpl
xchg
gs
push
jno
fs
outsb
ss
inc
call
or
add
push
push
jno
loope
std
rol
inc
push
or
add
out
cmp
enter
or
adc
test
sbb
push
addr16
add
sbb
xor
ds
mov
cld
push
or
into
mov
add
add
jbe
xchg
out
inc
es
adc
jp
sti
cmp
and
dec
or
push
mov
jecxz,pt
cmp
jno
sbb
cs
aas
dec
or
mov
movsl
cmp
dec
or
call
shr
and
pop
jmp
sub
jp
mov
aaa
test
add
out
mov
sbb
fimuls
rclb
scas
lret
xor
push
aam
fs
pushf
enter
ds
pop
sub
or
jne
mov
test
adc
dec
lcall
std
data16
loop
out
mov
sub
mov
popa
pusha
add
gs
mov
adc
imul
test
loope
ds
fs
add
push
sbb
into
jl
jo
arpl
imul
cmp
mov
sub
mov
inc
cld
es
inc
inc
mov
or
in
rclb
xor
add
cmp
hlt
inc
or
cli
popa
cwtl
xor
lret
mov
xor
ja
mov
mov
jbe
cmpl
out
mov
push
daa
insb
fistl
jle
mov
mov
dec
mov
cmp
inc
inc
addr16
push
mov
jne
pop
lock
sub
lods
popf
lcall
add
test
lods
push
fistpl
push
pop
xor
rcr
cmpsb
lock
shll
call
sbb
mov
sbb
inc
jne
ret
icebp
add
mov
jl
or
adc
adc
mov
and
ljmp
sub
mov
mov
sub
je
lret
test
lods
sub
inc
push
gs
fadds
add
ffree
mov
mov
leave
xor
xchg
rolb
sbb
mov
jecxz
dec
imul
insb
push
lea
loopne
out
adc
in
xor
push
nop
test
loope
repnz
and
dec
add
adc
pop
xor
push
mov
sbb
jnp
jecxz
mov
je
add
iret
xor
push
push
mov
rorb
mov
jge
push
imul
push
rorl
lods
mov
sti
sbbb
add
insb
push
mov
dec
xchg
xchg
pop
push
movups
call
dec
jl
cld
sub
jl
jg
and
jle
adc
xchg
pop
push
dec
cs
in
mov
leave
or
push
test
pop
jne
push
repz
stc
mov
and
repz
mov
mov
loopne
cwtl
mov
das
and
popa
sbb
pop
or
daa
lcall
je
adc
pop
test
or
lock
roll
mov
push
adc
loop
fsubrl
pop
sub
outsb
mov
or
xor
and
mov
push
or
add
lahf
xchg
sbb
dec
push
push
inc
out
lods
cmp
add
inc
scas
mov
in
pop
test
push
movl
cmp
xor
mov
dec
xchg
sarb
cmpsl
sub
mov
cli
adc
loope
push
adcl
jno
or
adc
add
jo
push
push
loopne
push
dec
mov
pop
xchg
icebp
pusha
sub
mov
outsl
or
add
xchg
ja
or
push
or
ret
cmp
xor
cmp
or
xor
shlb
bound
rcll
or
loope
or
or
add
and
add
dec
add
pop
sub
mov
xor
mov
inc
dec
jne
lea
or
lock
xchg
xchg
cld
and
add
mov
ret
push
mov
push
mov
jle
hlt
mov
and
mov
lea
xchg
loopne
xor
sub
adc
or
inc
fldl
out
roll
out
popf
cld
ficoml
push
push
fiadds
jno
sub
push
loopne
imul
push
enter
cld
cmp
xor
pop
dec
and
int
pop
add
push
sbb
fcmovne
movsb
lods
jmp
and
je
and
sti
push
notb
or
test
add
mov
mov
lahf
test
pop
mov
mov
add
lea
sub
ja
lret
lds
and
jae
ljmp
jmp
add
xor
ret
push
ret
and
inc
cwtl
jl
push
mov
jo
jg
xchg
ja
lret
add
sbb
shrb
jno
loopne
loopne
fdivs
addb
sbb
test
lahf
add
jno
xor
mov
iret
popa
xor
push
hlt
and
inc
or
outsl
pop
jmp
sbb
je
or
lds
fsts
sub
mov
cmpsb
push
sub
inc
out
cmp
jb
lahf
add
jne
fsubr
fisttpl
xchg
imul
lods
sbb
jmp
iret
rorb
add
xchg
xlat
xor
test
push
sub
push
adc
fwait
push
pop
push
not
insb
lea
dec
mov
nop
xchg
repz
shlb
lock
out
into
std
adc
imul
fs
mov
jno
xor
loope
add
and
xor
stos
mov
sub
inc
rcrb
xchg
cli
xchg
nop
sarb
call
call
jne
mov
test
rcll
push
cmp
leave
inc
pop
inc
pop
lods
and
jne
stos
mov
js
jmp
dec
mov
test
into
sub
clc
sar
jmp
loopne
andb
cmp
dec
xor
cmp
mov
inc
shrb
push
cmp
outsb
incl
std
dec
push
jge
add
jb
mov
xor
inc
movsb
push
xchg
dec
inc
pop
out
insl
xor
inc
or
adc
mov
inc
mov
inc
pop
cmp
dec
jne
mov
inc
icebp
outsl
jl
sbb
adc
mov
mov
inc
inc
push
mov
inc
or
inc
dec
jne
inc
add
sahf
adc
movsb
mov
fimuls
xor
gs
jnp
sbb
scas
jmp
cmp
ret
stos
lahf
insb
adc
loopne
add
jp
mov
push
movsl
ret
loop
push
and
out
xor
mov
inc
sub
pop
sbb
les
mov
sub
outsl
movsb
mov
idivl
push
inc
push
enter
push
in
aam
cmp
jo
insb
ljmp
xor
add
fs
les
pop
or
insb
ret
pop
fwait
cmp
enter
clc
jle
lret
pop
sub
jmp
xor
inc
sbb
decb
mov
add
sbb
ss
push
out
add
inc
jo
insl
adc
pop
sbb
jb
jmp
mov
stos
xor
cmp
cmp
jo
sbb
mov
cmp
push
push
movsb
cld
mov
add
adc
lock
les
outsl
and
imul
push
loopne
imul
adcb
sub
dec
in
pushf
sbb
int3
call
sbb
sub
hlt
mov
int3
mov
xor
cwtl
shlb
aam
pop
cmp
filds
push
cwtl
mov
jne
cld
xchg
pushl
out
mov
rorb
cmpl
push
in
adc
pop
cmp
ffree
pop
cld
rolb
sub
push
decl
jne
sbb
dec
xor
rclb
xchg
xor
fldl
mov
loopne
add
lea
jnp
movsb
mov
or
cmpsb
or
pop
ret
jo
add
or
xorl
sub
jo
clc
cwtl
js
and
push
je
push
mov
adc
mov
lds
in
or
popa
lahf
jae
pop
jbe
mov
enter
lock
push
inc
ret
sbb
jo
xor
test
add
and
call
sub
hlt
jbe,pt
jmp
push
ficomps
push
jbe
pop
mov
out
add
mov
xchg
mov
jne
sbb
push
cmp
rcl
pop
sbb
daa
mov
incb
xchg
jns
aaa
add
xchg
mov
push
ficoms
mov
cmc
add
push
xor
je
cmp
cs
call
sbbl
cmp
mov
xchg
push
push
mov
or
aas
push
inc
and
test
sbbl
and
cwtl
jge
mov
fadds
cmp
inc
pop
ret
in
jecxz
jns
jb
and
sbb
push
xchg
lret
and
insb
push
cld
push
jo
sti
mov
or
inc
mov
cmp
push
sbb
movsb
xchg
js
imul
insb
mov
cmp
bound
xlat
adc
stos
fnstcw
or
lock
sbb
popa
sub
roll
pop
mov
lock
push
or
cmp
xchg
xor
push
movsb
pushf
xchg
add
jns
xchg
je
clc
orl
xchg
or
or
shlb
sub
adc
dec
rorb
push
scas
mov
imul
sub
cmp
add
nop
inc
inc
dec
sub
and
rorl
sbb
decl
repnz
push
dec
jp
out
pop
inc
sti
jbe
xchg
jge
xlat
and
pop
cmp
je
jle
stc
sub
mov
rol
xchg
insl
insl
jg
or
push
sbbl
adc
sub
repnz
mov
bt
gs
test
aam
jbe
mov
pop
lcall
and
popf
ds
mov
ds
push
xchg
dec
ja
mov
xchg
mov
jp
xorl
or
out
mov
inc
dec
push
mov
cwtl
mov
pushf
loopne
mov
loop
xchg
push
xchg
sub
scas
dec
mov
nop
and
xor
push
inc
ja
add
das
nop
cld
xchg
fisubs
shll
dec
das
jns
add
mov
int3
dec
lea
mov
das
mov
pop
test
push
push
push
fimull
loopne
fcoml
jg
push
mov
mov
clc
or
pop
pop
popf
enter
shrb
pushf
popl
jp
xchg
add
sarl
hlt
aaa
dec
cld
adc
sub
mov
pop
xchg
mov
add
dec
in
fdivs
pop
setg
inc
mov
mov
nop
pop
das
pop
sbb
mov
jno
movsb
cmovo
push
js
jmp
jge
jl
ret
adc
pop
mov
cmp
add
sbb
bts
jmp
mov
es
mov
add
in
jno
lahf
and
repz
xor
push
mov
fimuls
je
cwtl
mov
and
and
iret
jnp
pop
xchg
or
push
add
shl
lcall
ret
inc
lahf
flds
ds
adcl
pop
popl
jns
sbb
rclb
and
pop
nop
aam
inc
shl
push
and
jb
nop
rclb
je
jl
test
pushf
movsb
mov
fimuls
loopne
inc
rorb
fadd
and
repz
call
jmp
adc
scas
mov
test
cmp
push
pop
mov
push
push
imul
mov
cmp
pop
xor
sub
popa
xor
mov
and
add
cli
dec
add
inc
ret
lret
jne
mulb
rorl
xlat
push
pop
repz
inc
mov
jmp
mov
stos
add
inc
and
add
pusha
pop
add
push
and
add
and
push
adc
ds
clc
loopne
lds
mov
or
scas
orl
and
mov
idivl
aas
dec
mov
hlt
fdiv
mov
data16
and
add
daa
and
loopne
fs
orb
sti
cmpsl
push
insb
sub
or
inc
or
dec
mov
mov
sub
pop
ss
dec
adc
inc
pusha
jae
cmpl
movsb
cmp
cmp
push
xchg
roll
push
push
jge
or
lods
imul
sbb
addr16
or
inc
mov
and
jne
lock
insb
or
push
adc
and
or
xor
add
mov
jbe
push
sub
mov
lock
sbb
adc
push
lret
aaa
int3
push
call
mov
add
cwtl
outsl
push
faddp
xor
mov
add
sub
testl
ret
enter
ret
loope
movl
or
ret
mov
bound
ficomps
and
jecxz
inc
dec
data16
out
popa
jmp
and
dec
sub
lock
imul
or
xchg
push
ljmp
daa
test
loopne
adc
jno
leave
cmp
aas
or
rolb
shlb
loopne
mov
adc
adc
lock
adcl
test
or
xor
mov
jecxz
push
decb
lea
inc
cmp
dec
add
inc
mov
sub
xchg
sbb
insb
push
jecxz
jmp
inc
dec
push
cs
or
mov
xor
lahf
shlb
sbb
ljmp
imul
push
in
add
shrb
test
cmp
aam
inc
sti
inc
cwtl
test
push
pusha
fldl
es
inc
or
pop
test
adc
or
adc
push
dec
or
and
dec
cmp
xor
orb
lods
push
inc
dec
or
test
xor
cs
scas
xor
cltd
adc
jbe
push
inc
mov
mov
test
loopne
fimull
pop
inc
fstl
mov
add
idiv
cmp
pop
divl
in
cmp
mov
adc
push
clc
dec
fstps
jle
push
push
jne
mov
hlt
dec
ljmp
jns
and
mov
push
fbld
xchg
sub
pop
repnz
add
in
adc
add
add
dec
dec
dec
sub
and
loope
into
xchg
add
ret
and
les
add
sbb
mov
pop
test
or
jecxz
test
mov
jg
add
inc
add
jmp
xchg
mov
mov
lcall
ret
dec
mov
sub
aas
xor
ds
rorb
loope
rcrb
and
push
and
push
jbe
xor
popf
in
mov
clc
aam
fdivl
popf
lret
fdivrs
xor
push
negl
test
mov
mov
adc
sbb
pop
dec
xchg
and
imul
push
leave
test
in
or
call
or
mov
sbb
movsl
xchg
inc
cmp
push
outsb
and
ljmp
rcrb
fadds
cmpb
mov
xcrypt-cfb
mov
rcrl
pop
sar
pop
mov
sbb
xchg
push
inc
pusha
lock
loope
mov
xchg
lret
movsl
jnp
mov
fdivr
loop
jo
fsubs
into
lret
out
adc
or
je
or
sub
je
sbb
out
hlt
scas
pushf
pop
or
cs
int3
pop
add
addl
nop
cli
adc
pop
adc
mov
pop
cld
adc
es
fdivrs
mov
mov
adc
shlb
and
sbb
in
mov
mov
dec
jns
hlt
out
sbb
and
stc
nop
xor
or
inc
insb
je
lock
test
mov
pusha
sub
imul
adc
and
push
xchg
ss
or
xor
mov
and
outsl
and
xor
incb
fs
addr16
or
adc
pop
outsl
data16
sbb
jne
js
jo
xchg
loope
xlat
je
popa
add
test
lock
repnz
outsb
lret
fisubl
and
fdiv
xor
sbb
jle
inc
je
push
sub
negl
or
add
fcmovb
and
rcll
cld
jmp
loop
and
inc
dec
nop
and
jae
xor
jl
mov
test
les
imul
xchg
stos
out
mov
adcl
pop
sbb
outsb
sbb
sub
xchg
or
fmuls
mov
mov
mov
test
popa
add
and
push
or
in
mov
stos
into
sahf
add
push
insl
cmp
mov
call
shll
adcl
ljmp
add
pushf
add
cmp
pushf
fucomip
movsl
pushl
test
sti
test
push
mov
roll
aas
les
jmp
mov
jno
sahf
loope
setp
hlt
mov
add
add
inc
mov
jmp
cmp
js
jecxz
cwtl
ret
mov
pushf
mov
jns
push
sbb
pop
cmp
pop
sub
loop
sbb
into
add
addr16
push
mov
jno
clc
outsb
je
test
ss
adc
popa
aas
add
cs
fistps
or
jo
je
data16
sub
add
movsb
orb
adc
or
xchg
mov
lds
test
into
or
addb
inc
insb
xor
push
add
dec
ficompl
ret
nop
push
jne
mov
jne
mov
jmp
lahf
out
pop
mov
insl
cmpl
incl
adc
add
int
xchg
adc
insl
xlat
out
jl,pn
call
cld
adc
sti
fdivs
inc
fcomi
mov
sub
lock
mov
mov
test
lea
movsb
fstpl
lcall
push
mov
inc
call
pop
cmp
nop
cmpb
jne
rcpps
adcl
inc
sbb
hlt
outsb
mov
inc
cmp
out
addr16
sub
shrb
mov
out
inc
daa
add
adc
orl
sbb
sub
cmpsl
push
sub
lret
scas
call
adc
inc
xor
dec
aad
je
adc
xor
mov
mov
or
jmp
aaa
int3
je
cltd
dec
js
xchg
dec
sub
shlb
jl
jae
call
rolb
jecxz
test
pop
fimull
pop
sbb
ds
aas
jno
mov
or
jne
pop
ja
push
and
lea
adc
push
push
inc
push
aas
cmp
and
dec
not
xchg
xor
adc
clc
sahf
add
mov
dec
faddl
pop
xchg
sub
inc
cmp
pop
stos
aas
je
xchg
test
dec
shlb
cmp
xor
ss
test
loope
or
ss
inc
and
adc
sar
roll
je
gs
cs
jg
lea
adc
push
adc
push
sub
push
test
sahf
and
mov
cltd
sub
sub
sub
sub
pop
ror
or
jae
push
jp
mov
data16
fdivrl
lea
dec
add
adc
pop
stos
mov
xor
push
pop
xchg
test
jne
jno
lds
xchg
or
rcr
sbb
push
rorl
pop
push
xchg
nop
popa
jle
sbb
mov
stos
add
dec
clc
add
cmpsb
lcall
ss
push
and
imul
je
mov
inc
push
mov
jnp
cmp
movsl
daa
pop
mov
mov
mov
ret
fisubrl
movsb
cmp
add
cmp
mov
movsl
pop
sub
adc
mov
xor
out
movsb
add
push
push
cltd
jae
ret
iret
int3
adc
mov
sti
push
add
fsubl
js
or
or
pop
jns
mov
adc
xor
mov
movsl
idivb
lea
jecxz
shl
dec
cmp
push
sbbb
inc
cli
fisttps
pop
imul
jl
loopne
pop
rolb
rcrb
rcr
out
mov
mov
add
ljmp
sub
push
push
jge
or
push
lock
inc
jl
push
pop
popf
or
jne
push
aas
out
sti
popa
sub
inc
xor
pop
leave
xchg
ret
negl
call
pushf
jge
mov
loopne
fstps
jl
inc
push
xor
cmp
mov
jmp
push
xchg
lock
push
jne
jecxz
je
jl
push
push
xor
xor
adc
xchg
imul
or
push
or
int
cli
xor
sbb
insl
or
and
cmp
loopne
notl
push
add
ss
jnp
cwtl
movsb
jae
or
mov
adc
imul
add
jmp
clc
sub
test
jb
rclb
call
xor
mov
hlt
or
pop
add
sub
inc
sarb
jnp
mov
inc
pop
dec
sarb
testl
and
xor
jecxz
fmuls
mov
sbbl
ret
inc
push
or
jne
sar
dec
cmp
jbe
push
pop
sbb
outsb
addl
lock
in
subb
jae
mov
shr
lea
not
and
decb
jne
test
scas
jp
and
adc
mov
pop
cmp
pop
add
mov
add
push
or
cld
add
pop
inc
inc
jl
and
push
or
sub
jmp
clc
and
std
pop
mov
shlb
and
sti
add
mov
dec
pop
cmp
out
lret
pop
and
fimuls
and
xor
inc
pop
jp
xchg
dec
shll
cmp
fdivs
out
not
and
shrl
xorb
xor
sbb
sbb
xor
mov
mov
add
mov
cltd
or
add
sbb
dec
lock
lea
mov
inc
add
pop
dec
or
adc
negl
ss
mov
mov
inc
mov
mov
sub
push
lods
push
or
pop
mov
inc
dec
or
jmp
dec
adc
push
mov
or
into
xor
add
xor
mov
dec
shlb
inc
pop
scas
or
and
add
je
and
adc
incb
sub
dec
or
fidivs
push
call
aas
gs
push
or
cli
cmp
js
mov
sub
dec
inc
adc
sarb
pusha
add
and
inc
mov
hlt
jne
push
push
mov
sbb
clc
mov
inc
das
das
int
mov
mov
or
sbb
fisttps
cmpsl
lods
jl
push
cmp
cmpsl
sbb
or
mov
pusha
test
loopne
ret
mov
xor
ds
adc
jne
data16
cwtl
outsl
push
fst
shrb
addl
adc
dec
ret
les
cmp
xorl
mov
mov
push
push
cmp
outsl
and
adcb
fwait
orl
mov
lds
mov
xor
outsl
push
popa
movl
scas
mov
ret
imul
cmpsl
test
rolb
push
mov
jne
or
add
popa
aas
lret
sbb
popa
lcall
xchg
mov
adc
test
or
sub
roll
adc
inc
lods
or
and
fucom
adc
adc
or
adc
out
mov
cld
lock
call
jmp
add
je
clc
add
pushf
fimuls
mov
adc
dec
popa
push
sub
fs
pop
mov
fistps
inc
inc
mov
lock
dec
dec
inc
sbb
cli
clc
jne
or
lds
not
and
and
les
push
xlat
sub
sarb
mov
fsubl
cld
or
icebp
scas
inc
jnp
clc
mov
and
pushf
jle
clc
cmp
ret
int3
inc
mov
add
adc
add
mov
int3
push
push
subb
pop
inc
pop
mov
dec
inc
stc
sbb
clc
sti
dec
in
rolb
es
add
cmp
add
or
mov
add
push
jns
add
push
shrb
into
add
ljmp
adc
pushf
sar
dec
mov
test
push
shrb
fisttpll
sti
jbe
int3
fcompl
jg
or
shll
pop
pop
push
cmpsb
imul
lcall
sub
xchg
adc
js
pop
shl
ss
and
js
test
inc
jne
imul
rcll
insb
xor
sub
sahf
and
shrl
and
clc
jl
or
mov
mov
push
fldcw
mov
inc
dec
insb
pop
xor
push
rcll
dec
jp
movsb
pop
sub
inc
cwtl
rorb
pop
cmp
xor
ss
jo
cmp
dec
je
lret
sbb
push
mov
xchg
fbstp
pop
mov
fnstenv
dec
ficoms
add
bndldx
sbb
dec
lea
mov
xchg
jbe
and
mov
mov
pop
sbb
lods
decb
in
mov
cmp
sbb
cmp
inc
adc
add
imul
pop
rcrb
ret
cmp
pop
and
inc
cmp
outsb
and
jge
sbb
out
cmpl
cmp
lcall
and
ret
fldcw
push
nop
cmp
pusha
add
and
decb
xlat
fs
adc
add
inc
data16
lahf
or
fiadds
jne
mov
jne
mov
lods
jnp
add
xor
pushf
outsb
in
or
arpl
cwtl
or
jl
fsubs
xor
lock
cmc
rcrb
or
inc
jle
std
fimull
jle
pushl
sbb
in
cli
push
sbb
and
mov
dec
pop
popa
push
outsl
loope
jne
fwait
jno
cpuid
xchg
push
xchg
mov
add
out
in
pop
jbe
repz
mov
and
jne
mov
mov
and
leave
inc
test
inc
push
in
sub
or
out
icebp
sbb
fdivrl
bound
xchg
dec
add
xchg
add
stos
inc
sbb
iret
push
stos
inc
cmp
xchg
cmp
dec
and
jecxz
mov
decb
jne
adc
or
sub
dec
mov
pop
pusha
dec
bound
dec
push
and
push
clc
into
xor
xchg
cmpsb
imul
pop
shll
inc
mov
roll
pop
xor
add
and
cmp
mov
or
push
or
dec
jp
or
push
mov
push
mov
hlt
jb
out
or
or
stos
addr16
xor
shrl
or
sbb
dec
jne
cmp
xchg
push
cli
imul
ds
inc
add
lock
leave
repnz
js
out
sbb
testl
or
or
or
sahf
add
adc
inc
pop
jmp
mov
add
mov
add
jecxz
dec
cmp
aas
ljmp
lock
sahf
dec
sarb
add
push
cmp
ret
jl
fldl
add
and
mov
and
es
jle
push
lock
xchg
inc
in
sbbb
sbb
push
mov
les
add
test
pop
ret
repnz
sbb
and
or
pop
push
aam
std
cld
inc
add
loop
xor
dec
ljmp
jp
add
fisubrl
test
std
lahf
pushl
adcl
xor
push
mul
xchg
imul
out
pop
jne
push
in
adc
pop
inc
xor
mov
lods
test
movsl
movsl
or
bound
icebp
iret
lcall
inc
js
push
or
pop
hlt
or
mov
mov
fcompl
cmpsl
pop
jl
sub
adc
jl
mov
lahf
insb
int3
push
rorb
mov
xor
or
je
insl
sbb
sub
inc
int
adc
mov
cmp
enter
add
dec
push
cmpl
je
rclb
addb
xor
adcl
and
lret
and
js
popf
call
lods
aam
hlt
and
xorb
addl
in
jge
mov
mov
sbb
call
aas
push
jmp
movzwl
dec
in
int3
test
in
in
xchg
push
into
je
cmp
mov
stos
dec
inc
rorl
sbbb
xchg
imul
test
mov
mov
loope
lcall
mov
ja
pop
dec
gs
movsb
mov
jmp
out
into
dec
xor
cmp
popf
xchg
sbb
adc
xchg
or
std
lods
or
pop
xor
add
xchg
arpl
ficomps
pop
jno
pop
leave
rorb
orb
sub
push
in
in
sub
push
dec
faddp
mov
test
icebp
sub
push
inc
pushf
or
aas
insb
jne
jp
loopne
in
sbb
adc
and
addr16
adc
out
inc
cmp
xor
sbb
scas
cmp
pushf
sbb
or
cmc
int
xor
jmp
int3
les
adc
and
int
push
lcall
imul
in
test
lea
mov
xchg
sbb
call
test
nop
imul
test
dec
mov
pop
dec
sbb
enter
push
mov
leave
enter
adc
test
lods
mov
jb
lods
mov
fisubrs
iret
enter
insl
and
push
cmp
inc
dec
outsl
xchg
sbb
call
jo
lahf
mov
inc
push
jns
add
add
mov
xchg
addr16
mov
stos
push
stc
lock
dec
adc
test
xor
lahf
mov
enter
shr
inc
enter
mov
sahf
pop
in
test
push
hlt
xchg
lahf
push
lods
test
shrb
xchg
test
or
call
in
inc
scas
in
add
mov
scas
inc
xchg
les
shlb
loop
in
pop
enter
in
and
les
test
popa
xchg
ret
fwait
mov
inc
test
mov
ret
adc
mov
dec
add
cmc
or
xor
nop
xchg
cli
sahf
dec
popa
push
mov
mov
jle
jno
sarl
xor
ss
add
repz
arpl
sub
jbe
push
pop
lea
push
sub
mov
es
lret
cmpsb
lock
ret
mov
pop
or
ret
lods
adc
in
jbe
faddl
je
shrl
mov
xor
xchg
and
rorb
std
or
adc
test
and
mov
test
mov
jne
push
scas
popa
pop
cmp
and
shll
push
bound
daa
sbb
push
dec
add
jp
enter
pop
daa
xorb
popa
xorl
mov
add
xlat
push
testb
sti
mov
sub
lods
or
fsubs
push
clc
xor
fistl
jne
push
mov
in
jne
imul
add
mov
inc
cld
push
cs
fdivs
nop
add
add
int3
rclb
adc
and
inc
pop
shlb
sbb
mov
aam
lret
not
and
sub
out
lret
cmp
sub
rol
enter
shll
stc
cli
sti
rcl
xor
cld
std
mov
mov
es
and
mov
gs
adc
cmpsb
xor
jg
mov
pop
sbb
add
aad
fidivrl
shrl
pop
sub
sbb
dec
mov
ss
dec
je
push
adc
push
or
inc
xchg
sbb
fmul
lret
ss
fldl
or
int
in
call
and
bnd
fwait
inc
push
adc
xchg
neg
leave
pop
jmp
jo
push
jns
mov
mov
pop
sub
fs
xlat
das
sub
xchg
fstpl
aas
add
and
sbb
scas
xor
push
sti
fldenv
lcall
or
es
out
sbb
lahf
repnz
pop
jge
js
xor
sub
sbb
fwait
pop
dec
dec
stc
fwait
add
or
inc
add
jno
mov
sbb
hlt
test
xchg
div
pushf
in
lock
push
in
inc
stos
cmp
mov
push
fdiv
fsub
xchg
sub
push
push
shl
push
lds
or
aaa
jne
das
adc
jo
repz
lock
mov
aad
jns
out
out
repz
adc
sahf
push
decl
les
leave
std
pusha
or
push
add
jae
adc
stos
enter
jmp
inc
sbb
or
loopne
jbe
sub
xor
sti
cmpl
ds
xchg
dec
jecxz
sub
adc
js
pop
push
inc
clc
add
les
in
or
jb
push
xchg
jmp
inc
int
pusha
mov
cmp
sub
cltd
frstor
popa
push
jmp
push
sbb
cli
mov
push
fmull
in
inc
jp
push
clc
and
ret
and
push
push
sbb
jge
outsb
cmp
inc
adc
lcall
add
adc
bound
adc
push
mov
jo
mov
inc
mov
mov
xor
vmread
or
scas
and
lods
in
mov
faddl
in
int3
call
lods
add
mov
inc
lods
std
shrl
loopne
cld
gs
pop
mov
mov
clc
push
pop
rol
add
sbb
or
pop
add
sbb
fnsave
dec
sbb
pop
sar
ret
push
lea
testb
add
and
dec
jmp
decl
aam
aas
xchg
loopne
mov
pop
sub
and
push
mov
push
daa
idiv
push
or
push
push
xchg
les
leave
shlb
rcll
jp
rorl
mov
jb
into
aas
or
int3
sar
xor
lret
lock
int3
shr
mov
dec
dec
push
pop
pop
cs
mov
add
push
xor
ljmp
mov
sbb
cld
cmp
hlt
es
or
add
jno
es
test
lods
fdivrl
sub
call
mov
test
push
mov
cli
cmp
lahf
mov
dec
cmp
inc
sub
mov
es
aad
pop
mov
ss
sbb
inc
fsin
xor
pop
inc
jne
push
filds
cmp
inc
xor
cld
inc
add
imul
push
int
rclb
lds
js
repnz
sub
cmp
pop
mov
push
fdiv
mov
mov
hlt
repz
inc
lea
jns
xchg
in
mov
movsb
lret
imul
call
push
cmp
add
vmread
or
or
adc
sti
push
inc
cmp
xlat
gs
in
cmpsl
cmp
std
mov
mov
mov
inc
gs
add
in
inc
dec
mov
xor
cwtl
xchg
mov
push
adc
outsl
ret
sub
mov
and
mov
mov
lods
dec
enter
mov
jns
daa
mov
jecxz
xlat
out
add
stos
in
push
inc
cld
cmp
and
sub
jnp
inc
pop
enter
mov
movsb
mov
jno
add
orl
mov
pop
adc
into
je
test
pop
insb
jbe
add
jno
or
cmp
std
mov
sub
jecxz
xor
subb
dec
mov
sbb
aaa
pop
cltd
bound
std
fcomps
adc
pop
lds
out
mov
test
fcomps
shlb
movb
arpl
cmpb
mov
pop
cmp
fsubr
std
call
cmp
mov
fadd
push
leave
xchg
mov
std
dec
mov
mov
pop
sub
ret
jge
mulb
fmull
cmpsb
inc
mov
jge
jnp
lret
nop
std
lds
sub
cli
arpl
mov
mov
push
and
mov
mov
cmpb
fmuls
pop
lret
jle
pop
pop
data16
push
push
mov
and
std
mov
mov
mov
jg
arpl
inc
add
dec
push
daa
pop
push
xor
stos
shrb
psrlq
dec
xor
roll
dec
in
sub
inc
adc
push
jmp
mov
in
ret
dec
cmp
cmp
loop
sahf
inc
mov
cmp
std
call
xchg
dec
test
imul
mov
std
mov
std
std
inc
repz
daa
push
mov
popa
mov
push
fdivrp
or
ja
mov
stos
mov
xchg
hlt
sub
test
sub
pop
repnz
jmp
dec
jp
out
push
cli
add
sub
pop
lock
xor
push
pop
or
jmp
mov
cli
sub
or
adc
and
outsl
negl
int3
cmp
add
cli
or
cmpsl
jl
mov
fxch
cmp
aam
pop
jns
and
std
dec
xorl
and
fbstp
push
test
les
insl
mov
add
loopne
xchg
fsubrp
inc
push
inc
add
jne
cmp
xchg
sbb
cmovge
or
lds
das
pusha
dec
jl
push
dec
pop
jno
mov
xchg
inc
dec
cmp
std
std
sbbb
loope
pop
sahf
lret
mov
test
xchg
aaa
fmull
mov
xchg
xchg
nop
and
dec
imul
add
push
jge
daa
enter
mov
fistps
das
xchg
xor
mov
mov
mov
fdivs
mov
and
aas
xor
pop
pop
leave
and
movsb
in
and
mov
int
sarb
dec
push
mov
and
loopne
into
inc
lea
cmpsl
or
adc
sub
addb
icebp
stc
pop
ja
and
add
sbb
sbb
outsb
leave
or
mov
xchg
loope
ds
dec
mov
xchg
int3
lock
jmp
lea
push
lock
stos
mov
pop
repz
add
push
in
xor
js
out
test
int3
enter
jmp
sbb
adc
call
mov
cmc
int3
jmp
int3
jmp
xlat
adc
and
sbb
int3
jmp
int3
jmp
and
xchg
mov
push
sahf
xchg
or
push
fstl
ds
enter
in
jb
int3
jmp
jb
dec
sbbl
push
or
and
movsb
xor
dec
push
lret
decl
xchg
lret
sub
sbbl
or
lret
fs
aam
xor
inc
lea
pop
in
movsb
push
cmc
loope
xor
and
mov
cmc
sbb
inc
repnz
test
int
add
mov
inc
clc
mov
lret
pop
imul
inc
inc
lods
in
popa
dec
xlat
stc
pushf
sbb
divl
xchg
pushf
nop
pop
arpl
and
mov
xor
stc
lea
mov
ds
mov
dec
in
imul
dec
or
xor
add
lret
movsb
nop
sbb
add
and
dec
call
adc
adc
incl
cs
xchg
stos
inc
scas
mov
imul
in
xchg
lods
lods
lods
xchg
movsl
push
lea
mov
rol
push
dec
pop
je
push
mov
jmp
sbb
inc
aaa
mov
inc
add
out
mov
push
jns
and
sub
jnp
ss
cmpsl
mov
fs
shlb
test
inc
jmp
or
sbb
jg
push
test
and
inc
push
push
pusha
movsl
pusha
jo
stos
dec
mov
adc
jp
pop
add
lret
pop
sbb
or
push
loop
fmuls
fdivs
sub
jmp
movsb
pusha
js
sub
add
cwtl
cmp
add
jge
out
mov
stos
ss
neg
pop
mov
sub
or
lock
push
lods
add
addl
push
scas
inc
imul
or
mov
xchg
xlat
adc
fwait
iret
imull
push
push
dec
adc
push
and
dec
in
xor
dec
push
pop
outsl
data16
jl
inc
or
jbe
jle
sbb
dec
movsl
push
outsl
ja
mov
or
xor
sbb
shrl
lock
sbb
cmp
fsts
or
pop
dec
or
test
and
call
mov
sub
cmc
into
pusha
ret
stos
pusha
or
sub
ja
fbstp
sub
mov
add
sub
jl
jae
adc
in
lock
rep
adc
insl
cmp
jne
outsb
sbb
inc
lcall
ss
out
faddl
or
push
push
ret
out
xchg
lds
sbb
add
push
pushf
test
pop
add
cmp
hlt
pop
push
loopnew
insl
imul
sub
sub
in
pop
sub
push
sbb
test
shl
pop
mov
or
jne
pusha
lods
pusha
mov
sbb
dec
sar
add
inc
xor
sbb
gs
sbb
jl
rol
loop
sbb
cmp
add
and
push
or
out
inc
pop
mov
sub
test
nop
loopne
jb
stos
adc
jecxz
andb
ds
ret
jl
adc
test
xchg
dec
inc
lahf
cld
push
mov
or
mov
mov
jmp
jno
test
je
divl
adc
loop
lcall
aaa
mov
sbb
or
cmp
movsb
mov
adc
jle
popa
add
pop
xchg
lcall
mov
sbb
sub
jmp
bound
test
adc
fcom
mov
sbb
loop
inc
cs
add
cltd
inc
fisubrs
loope
xor
das
mov
bnd
sbb
mov
adc
in
inc
sub
add
xor
lock
inc
js
xchg
add
loope
and
rcll
call
adc
dec
sbb
filds
and
ret
or
daa
out
int
push
add
je
hlt
daa
clc
inc
push
ret
xor
pushl
testl
es
ss
jecxz
or
sub
les
scas
xchg
aam
andb
inc
dec
bound
scas
inc
push
andb
clc
xchg
xor
pop
push
fimull
loopne
ds
sahf
pop
adc
or
mov
pop
nop
arpl
pushf
sbb
in
shl
fs
int3
jnp
cmpsb
mov
push
out
fcos
out
inc
shr
rcr
shr
rcr
or
jne
div
pop
dec
adc
inc
fnsave
mul
pop
jb
cmp
or
cmp
or
jns
pop
divb
sbb
adc
add
fcmovu
fcmovu
lret
mov
cmp
mov
addb
inc
add
jno
xchg
jmp
add
mov
repnz
int
cli
or
movb
cmp
adc
push
jbe
call
lahf
sub
pop
mov
adc
adc
push
and
cmc
mov
push
lea
mov
cli
cmp
add
sbb
or
clc
out
sub
mov
enter
ret
sbb
pusha
jl
orl
mov
xor
nop
pusha
dec
leave
call
jne
mov
dec
xor
cmpsb
sbb
or
mov
pop
daa
sbb
wbinvd
fisttpll
stos
insb
lcall
dec
movsb
dec
ret
sbb
aam
add
scas
sub
jle
jne
lea
and
push
stc
or
aas
pop
and
push
lret
push
sub
push
test
ret
cmc
jne
sub
or
fs
xchg
cmpsl
std
cmp
adc
adc
cmpsl
cmp
pusha
adc
add
rcrb
mov
sbb
add
daa
ljmp
inc
lods
test
rclb
into
pop
and
xchg
jl
mov
xchg
mov
cld
sbb
push
icebp
in
lds
add
pop
and
js
inc
dec
aas
adc
sbb
push
stc
pop
add
test
mov
add
xchg
xchg
movsb
stc
xor
add
stos
push
mov
xor
gs
add
add
add
xchg
out
dec
pop
sbb
adc
stos
add
push
xor
mov
mov
imul
push
jge
in
jo
xor
rorl
cli
cmp
or
adc
pop
sbb
lock
adc
and
xchg
pusha
jp
pop
add
dec
int3
inc
cmp
push
xchg
sarl
cltd
js
pop
xlat
mov
stos
mov
add
sbb
je
repz
push
leave
scas
je
lea
and
jle
fisubrl
mov
les
sbb
rcr
clc
pop
ret
add
cli
test
dec
test
sahf
adc
inc
pcmpeqb
iret
addr16
jle
sub
or
sarl
jecxz
push
adc
inc
pop
outsb
loopne
xor
mov
push
icebp
incl
and
mov
and
push
push
push
jo
or
test
or
mov
dec
inc
pop
mov
je
ss
out
fcmovbe
and
faddl
aam
xchg
pop
gs
or
outsb
or
cld
movl
mov
and
adc
sbb
inc
ret
loop
pop
xor
fs
dec
push
mov
aaa
and
nop
mov
push
ds
xchg
lods
hlt
icebp
repnz
insb
insb
scas
add
xchg
in
mov
fmull
mov
cmp
sbb
fwait
mov
call
les
sub
jle
ljmp
cmpl
and
xor
daa
dec
sbb
adc
mov
orb
add
data16
aam
mov
push
dec
sbb
icebp
dec
ljmp
ja
out
push
mov
sbb
jb
inc
mov
cmp
or
pushf
lahf
push
or
push
rolb
mov
sbb
mov
adc
xor
jecxz
sub
pop
ja
push
cs
push
shl
test
cwtl
pop
nop
sbb
imul
xchg
mov
sbb
add
arpl
jecxz
nop
andl
mov
mov
add
push
lret
mov
imul
or
mov
out
lods
or
cs
ret
xor
mov
push
inc
or
sbbl
fnop
adc
sti
add
fmull
ret
dec
pusha
lcall
js
pop
jp
test
cmp
stos
rorl
fisubs
leave
and
andl
cmp
lods
roll
and
loop
lock
jle
cmp
aas
lahf
lcall
orl
xchg
test
cmp
and
cmp
jmp
pop
sbb
mov
or
fs
inc
xor
pop
leave
push
sbb
mov
push
cmp
pusha
sbb
fucom
cwtl
mov
dec
mov
xor
gs
add
push
and
imul
or
sbb
pop
fnstsw
pop
add
add
push
mov
mov
mov
jne
call
sti
or
std
dec
mov
shll
fwait
out
or
fxch
and
mov
in
add
mov
jmp
sub
jecxz
xor
enter
add
pop
xchg
mov
je
sub
dec
je
mov
jmp
mov
scas
je
push
mov
mov
cltd
xchg
push
xchg
jge
adc
fidivrl
es
xor
push
les
in
push
in
andl
add
or
je
fistpll
push
cwtl
add
inc
pusha
jne,pn
mov
mov
movl
fwait
jbe
ret
pop
sub
adc
cmp
inc
clc
cmp
or
adc
sub
add
fisubrs
push
push
sbb
add
sbb
push
dec
cmp
cmp
or
lcall
adc
cmp
pop
mov
sbb
lcall
add
pop
and
jmp
cwtl
or
outsl
jnp
addr16
pop
xorb
shlb
mov
add
jne
cmpl
out
jbe
adc
xchg
sbb
and
into
adc
cmp
xchg
adc
insl
loopne
out
inc
mov
or
dec
cmp
dec
jae
daa
or
push
in
sub
dec
movl
or
rolb
stos
and
adc
imul
pop
ds
adc
push
pop
inc
or
aam
cmc
sbb
dec
pop
inc
insl
mov
and
mov
inc
outsl
loopne
cmp
jbe
fists
adcb
jge
js
mov
push
jmp
in
mov
outsb
dec
adcl
popa
es
sub
xor
or
sbb
cs
ret
cmp
sub
add
enter
adc
mov
in
daa
imul
push
mov
pop
add
and
or
dec
add
mov
orb
stc
mov
mov
inc
dec
push
out
mov
push
outsl
dec
xor
push
add
adc
fdivs
cmc
xlat
jl
xchg
cld
mov
inc
and
cmp
pop
mov
adc
dec
or
mov
push
jbe
xchg
cmp
and
xor
push
xchg
popa
xchg
inc
mov
xchg
mov
sbb
and
push
adc
xor
or
xchg
add
inc
inc
xchg
popa
jge
stos
ja
popa
mov
ss
jmp
push
pop
ret
rcrb
inc
inc
or
mov
incl
mov
loopne
xor
add
inc
pop
je
pop
es
xor
or
xchg
or
lods
and
adc
xor
xor
sti
sub
jmp
add
push
inc
inc
pop
push
addl
sbb
add
dec
call
clc
cmp
cmp
leave
inc
dec
andl
fnsave
inc
add
xor
inc
pop
loope
mov
pop
add
adc
mov
popl
ljmp
cwtl
mov
inc
sbb
cmp
dec
inc
push
insb
xor
call
mov
sbb
mov
inc
mov
dec
mov
or
aas
aam
testb
mov
jae
mov
push
jbe
out
sub
push
mov
cwtl
daa
stos
mov
bound
and
orl
adc
jecxz
or
add
or
andl
adcb
push
loope
lds
push
shlb
pop
and
adc
or
or
lea
out
test
jne
inc
outsb
mov
cmp
dec
inc
inc
or
jne
repnz
rcr
mov
sar
add
and
dec
inc
hlt
fcomps
das
mov
push
ret
adc
pop
clc
roll
outsl
fsubl
jb
cld
dec
jne
scas
gs
ret
mov
cwtl
ret
jmp
sbb
push
fiaddl
lock
imul
xor
ficomps
int
push
cwtl
push
sbb
data16
push
sbb
xchg
add
xor
sub
or
or
push
pop
push
dec
clc
xchg
rcrb
mov
insb
mov
call
jmp
fwait
outsl
cmp
or
or
sbbl
sbb
cmp
or
mov
in
js
cmp
xor
test
sbb
sbb
mov
mov
pop
loop
xor
push
out
mov
shl
add
pop
pop
xchg
add
sbb
mov
sbbl
rcrb
and
jns
sub
pusha
and
addb
add
adc
popa
mov
mov
sar
sarb
jg
popf
arpl
iret
inc
ficoms
adc
fidivs
repz
mov
dec
push
or
bound
inc
push
decl
and
clc
add
or
pop
shl
add
or
jae
popa
mov
and
jns
sub
inc
or
inc
adcl
jmp
repz
or
addl
pop
in
inc
fnstcw
jmp
xchg
andl
testb
xor
shl
inc
and
mov
mov
cmc
adc
mov
shrl
push
push
cmpsl
adcb
adc
sub
sbb
push
add
filds
fidivs
mov
jmp
shrl
pop
notb
jae
lcall
mov
fnsave
sbb
mov
inc
mov
pop
rcrl
mov
stos
inc
out
push
xlat
cs
lahf
dec
mov
xor
sahf
mov
push
xchg
movsb
loope
lock
add
xor
and
jg
push
mov
test
adc
loopne
or
sub
fisttpl
push
shll
sub
sbb
cld
mov
mov
and
jb
rcrl
icebp
mov
mov
sbb
cmpl
dec
loopne
xchg
sbb
das
mov
pop
clc
in
mov
shll
pop
mov
popa
push
mov
push
sub
jle
mov
imul
and
mov
push
xor
dec
filds
jmp
pushl
jae
sub
add
outsb
push
push
jae
arpl
and
orb
gs
mov
and
mov
cs
sti
or
inc
jl
stc
cs
jae
jmp
inc
and
push
mov
nop
adc
xchg
js
add
hlt
inc
repz
cmp
cmp
pop
je
cmpsb
xor
push
cmp
fnclex
test
push
iret
lcall
or
pop
or
or
jno
add
sti
or
add
mov
and
xchg
dec
push
or
sub
add
jb
fmull
sub
or
insl
mov
in
jmp
movsl
insl
test
xor
call
add
imul
sti
lahf
mov
int3
mov
add
cmp
push
inc
jb
pop
das
les
andl
ds
inc
push
loopne
and
cmp
jbe
or
xor
jbe
movsb
movsb
mov
pop
mov
inc
fistl
mov
into
cmp
jg
mov
or
dec
jmp
jo
sbb
adc
lods
xor
dec
out
and
dec
pop
or
leave
subl
pushf
sbb
mov
xor
add
sub
xor
sbb
sub
dec
icebp
fsubr
push
and
mov
aas
mov
test
jecxz
push
mov
xlat
fnstenv
pop
call
or
sub
adc
ljmp
fdivs
jne
fbld
or
imul
in
dec
sbb
mov
fcoml
fcomps
adc
xor
in
jno
aam
mov
push
push
mov
aaa
leave
enter
adc
ret
loope
jl
mov
push
cmp
and
imul
or
jmp
adc
inc
jmp
scas
jbe
call
jbe
jne
imul
add
add
sbb
jge
aas
sbb
xchg
and
test
in
rcr
dec
cmpb
fsubs
popa
dec
fadds
jb
pop
adc
mov
mov
js
mov
xchg
rcrl
mov
hlt
mov
idivb
xor
push
ja
cld
cmpsl
rcr
and
add
adc
or
push
mov
cmp
sub
cmp
stc
pop
xor
rol
movl
repnz
repz
or
xchg
jno
or
fs
call
dec
mov
out
add
and
push
add
inc
add
je
testb
je
subl
or
test
or
scas
xchg
or
cmp
dec
daa
test
loopne
stc
pop
jmp
push
sub
mov
int3
rorb
jle
sbb
sbb
cmp
push
inc
pop
adc
jg
in
and
inc
add
adc
mov
or
mov
lahf
cmp
test
imul
jl
mulb
and
and
enter
add
add
insl
mov
push
adc
std
pushl
cli
in
xchg
mov
pop
cmp
lahf
adc
pushf
and
xchg
je
cmp
out
in
jmp
sahf
push
loopne
sub
mov
sub
rcrb
push
stc
das
adc
and
jbe
push
inc
sbb
mov
add
or
adc
sbb
sbb
dec
dec
cmpsl
mov
arpl
mov
sbb
and
mov
jb
push
or
push
fs
rorl
xor
add
jecxz
sbb
add
push
jl
push
or
int3
mov
or
add
add
push
stos
sub
les
add
mov
ret
mov
daa
sbb
pushf
sbb
xor
subl
test
add
cmp
add
xor
push
adc
adc
adc
inc
out
jg
sahf
test
mulb
fs
pop
jl
es
pusha
mov
push
sub
mov
leave
xchg
or
fstl
dec
adc
mov
fdivrl
fneni(8087
test
les
push
loope
xchg
call
sbb
aad
gs
add
or
dec
mov
jbe
push
dec
cmp
sub
lea
sbb
adc
dec
inc
fdivs
inc
push
and
sub
lcall
stc
xchg
jp
outsl
mov
or
mov
sbb
hlt
rcrb
jle
dec
lock
or
inc
or
sbb
je
ficoml
fmuls
inc
pushf
jg
dec
imul
popf
xor
pop
pusha
xchg
enter
or
adc
jge
repnz
cmp
fs
cmpsl
and
mov
test
pop
mov
mov
pop
adc
sbb
cmp
inc
push
outsl
xor
and
jge
push
mov
sbb
lods
xchg
or
add
fimuls
mov
in
adc
mov
insb
xchg
dec
jle
test
push
or
dec
or
movsl
xor
and
mov
mov
cld
or
cld
dec
and
sbb
lahf
inc
mov
sbb
adc
loop
in
repnz
loope
sbb
fcoms
repz
jbe
mov
pop
mov
or
in
or
aam
push
js
hlt
mov
cmpl
and
idivl
jmp
cmp
xor
push
sbb
je
xchg
je
mov
xchg
sbb
jmp
and
nop
imul
clc
adc
testb
pop
inc
add
je
mov
add
push
lods
stc
inc
in
and
or
mov
cmp
pop
adc
loope
mov
add
in
leave
repz
addb
ja
add
fcoms
jmp
xor
pop
add
inc
cmp
sbb
adcl
sahf
add
jne
push
and
mov
aaa
mov
icebp
xor
adc
inc
mov
int3
ret
arpl
mov
dec
xor
lcall
sarl
cmpl
les
fists
aas
sbb
flds
je
pop
cmc
and
shlb
sub
rorb
xor
or
insb
mov
mov
push
mov
in
pop
pop
adc
inc
cmp
jae
push
cmp
and
loope
jl
mov
inc
add
sbb
mov
sarl
jns
jle
pop
lock
andl
push
mov
or
cmc
cmp
ljmp
jb
mov
sahf
xor
movsb
sub
test
xchg
xorb
in
dec
dec
test
adc
pusha
stos
mov
leave
mov
icebp
cmp
fwait
push
sub
mov
pop
xor
push
cs
fsts
incl
sbb
adc
xchg
sbb
lods
mov
loopne
push
shll
push
dec
or
insl
sbb
jne
jae
xlat
sti
jmp
frstpm(287
or
push
pop
ss
arpl
mov
ljmp
lock
xchg
icebp
mov
xchg
ss
lret
test
sbb
xor
inc
jp
jecxz
adcb
subl
mov
adc
das
push
and
xchg
add
mov
inc
add
xchg
dec
adc
cmp
push
ss
pop
push
lock
adcl
sbb
stos
push
jg
or
lock
push
jle
aam
xchg
pop
sub
repnz
in
and
lods
call
mov
push
clc
and
sbb
decl
js
insl
stos
xor
dec
jg
adc
orl
out
push
mov
hlt
sub
sbb
aad
aad
jno
jecxz
xlat
or
shlb
clc
pop
nop
mov
or
mov
negb
add
paddw
sbbb
mov
or
loop
pop
or
adc
test
push
ljmp
and
pop
or
adc
xlat
pusha
adc
orl
enter
inc
lret
cmc
sub
adc
ljmp
test
inc
xor
mov
mov
test
mov
inc
dec
and
jg
call
sbb
mov
and
cmp
jb
testb
andl
xchg
sub
add
inc
add
mov
movsb
loopne
sub
jge
push
push
push
movb
popf
test
pop
je
cmpsb
xor
sbb
pop
adc
push
sub
or
sub
lret
inc
push
cmp
shr
jmp
jno
xchg
xchg
das
xor
negb
mov
cmp
push
push
out
adc
push
pop
mov
cld
jle
add
mov
or
pop
mov
pop
es
add
addl
sbb
pop
cltd
ret
push
pusha
dec
dec
inc
push
mov
dec
or
es
push
ja
mov
or
mov
cmp
xor
sub
sbb
outsb
je
xchg
jg
in
xor
cli
adc
jbe
lea
lea
or
sub
int3
mov
mov
fcompl
jbe
sbb
mov
popl
movsb
push
fldl
push
dec
je
jp
mov
cltd
jbe
movsb
mov
pop
icebp
cwtl
push
hlt
adc
adc
fcompp
pop
sti
cmp
mov
mov
or
cmpsl
movsb
mov
add
sub
rorb
loop
mov
mov
shlb
call
pop
add
xor
jbe
cmp
xor
sbb
sahf
shl
stos
shrb
inc
or
aas
jnp
push
iret
cmpsb
jge
inc
push
pop
adc
or
in
mov
jns
inc
test
sbbl
lea
and
jb
jb
and
sub
jo
jb
xor
cmp
shlb
and
inc
inc
pmulhuw
in
dec
dec
push
push
cmp
mov
pusha
cmp
cmp
push
or
cmp
and
mov
mov
adc
mov
nop
xchg
cwtl
dec
xor
and
mov
xchg
test
sub
push
insl
call
push
add
mov
mov
and
sub
bound
push
mov
or
mov
imul
adc
or
imul
or
sbb
or
and
or
ror
mov
pop
inc
or
push
fcoms
jo
and
dec
leave
push
xor
inc
ret
cmp
push
inc
int
shlb
mov
out
jbe
sbbb
pusha
lret
sbb
and
cli
insb
mov
daa
pop
or
xchg
mov
jp
mov
fnstenv
dec
sbb
test
sbb
es
cmp
shrb
push
fwait
dec
jmp
add
dec
int3
inc
xchg
lret
call
pop
imul
add
sub
sbb
add
pop
fiaddl
jne
cs
jle
testl
lret
movsb
fucomip
rolb
fcmovu
pop
pop
sbb
pop
or
add
or
fidivs
or
nop
fists
das
cmp
andb
fdivl
clc
inc
js
rol
add
subb
orb
mov
inc
lret
je
lea
push
jle
in
ret
aas
push
popf
arpl
or
lret
pop
int3
lcall
sbb
inc
add
inc
ret
cmp
int
fnstenv
negb
mov
pop
je
xor
test
push
dec
and
sbb
or
xlat
test
inc
andb
jge
pop
and
dec
pop
lods
or
addr16
daa
or
repz
sbb
jb
inc
cmpsb
add
int3
nop
cmp
add
push
add
outsl
push
sarl
dec
pop
fwait
dec
cwtl
mov
and
xor
sbb
mov
cs
cmc
push
adc
adc
cmpsl
xor
mov
jl
pop
scas
cmpsb
mov
or
jmp
jbe
popf
add
dec
xor
sahf
jg
adc
xlat
xor
adc
int
add
pop
inc
ljmp
push
sbb
xor
call
ja
decl
loopne
or
sub
icebp
loop
pop
mov
adc
std
notb
jle
jl
cmp
cmp
inc
insl
lods
push
outsl
jmp
mov
sub
pop
lea
xor
mov
jno
add
loope
addl
pop
mov
test
mov
mulb
adc
arpl
or
lods
sub
jmp
fwait
push
push
ss
and
pusha
xchg
push
xchg
mov
pop
dec
cltd
mov
inc
mov
sub
in
add
in
out
test
cmp
xor
call
std
or
cmp
pavgb
push
test
dec
ret
push
and
out
sti
imul
mov
or
xchg
sbb
sahf
mov
add
testl
jne
aad
test
adc
mov
push
adc
xor
mov
add
mov
inc
sbb
xchg
inc
insb
or
mov
sbb
ja,pn
out
mov
inc
pushl
mov
jns
inc
out
dec
pusha
dec
sub
push
call
js
dec
cmp
pop
addl
pop
outsb
xchg
in
jae
sbb
mov
add
inc
adc
mov
mov
stc
or
lods
mov
or
jnp
sub
push
hlt
mov
add
and
cmp
stos
jmp
mov
cmc
mov
cmp
popa
mov
mov
mov
jecxz
mov
mov
xchg
adc
adcl
mov
scas
inc
call
dec
sub
loopne
sbb
inc
lea
test
and
push
es
pop
faddl
mov
loopw
fwait
jnp
dec
orl
pop
pusha
fcoms
xchg
lea
cmpsl
lods
and
jl
dec
sub
call
mov
xor
sarl
cmp
pop
add
xchg
test
mov
sbb
add
out
lods
pop
push
or
push
js
loopne
add
ljmp
sub
fnstcw
cmp
jne
movzwl
dec
js
popa
mov
loop
cmp
mov
inc
cmpsl
notl
daa
inc
in
js
add
insb
jecxz
lahf
test
pop
int
inc
fcomp
pop
cmp
sub
repnz
xor
out
fisttps
andb
mov
jl
adc
adc
xor
mov
sbb
dec
add
xchg
sbbb
out
xchg
adc
lret
iret
sbb
jmp
xchg
jmp
mov
mov
andl
aaa
dec
and
push
cmp
mov
xlat
pushl
adc
cli
or
inc
mov
outsl
cmpsl
mov
adc
cmpl
fmuls
push
icebp
xchg
push
push
and
inc
gs
add
sub
daa
jmp
addl
or
pushl
cmp
les
in
in
and
movsl
dec
add
loop
add
xchg
xlat
repnz
inc
lods
push
orl
dec
imul
inc
inc
sbb
or
cmpsl
sarb
xchg
push
bound
pop
add
nop
or
mov
mov
xchg
dec
dec
stc
pop
mov
adc
cmp
add
addr16
js
push
xchg
sub
and
test
mov
pop
push
cmpsb
pop
ror
into
lock
scas
sub
out
mov
add
fs
std
jno
adcb
pop
cmp
mov
sub
lret
test
add
push
jo
lret
jmp
or
bts
and
pop
mov
jl
lea
sbb
sbb
xor
cmpsb
cmp
inc
ja
shlb
ljmp
pop
cmp
adc
push
fsts
xor
jnp
xchg
jecxz
mov
fprem
rcrl
cmpb
icebp
ret
mov
jg
or
pop
or
xor
sub
aas
and
test
dec
leave
pop
mov
flds
cmp
aaa
push
xor
add
mov
loope
ret
in
stos
or
or
xchg
sbb
incl
arpl
push
mov
ret
or
sbb
jmp
sbb
xor
jno
and
adc
outsb
dec
or
cmp
adc
jp
inc
push
test
sbb
or
cmpsb
push
es
add
mov
test
add
inc
xor
xchg
decb
imul
mov
jge
mov
mov
arpl
fdivrl
sbb
push
and
mov
dec
mov
and
insb
cwtl
sbb
add
sub
and
xchg
in
pminsw
pop
inc
inc
push
mov
out
pushf
cli
or
inc
mov
arpl
inc
js
or
inc
jo
aam
roll
add
xor
inc
cmp
mov
insb
and
pop
and
insb
sbb
sub
repnz
aam
test
orl
test
add
mov
shlb
adc
push
sub
pop
pop
mov
xchg
jge
inc
out
push
gs
outsl
and
cmp
fstp
shrb
xchg
sub
cs
ja
dec
call
sub
adc
pop
xchg
push
test
inc
or
and
fwait
loop
test
fidivs
push
jne
dec
es
mov
sub
and
adcb
push
pop
xor
pop
pop
lods
pop
lods
pop
pop
add
mov
and
cmp
aas
imul
mov
clc
je
xor
loopne
test
add
push
dec
into
lcall
jl
add
jle
mov
js
mov
mov
pop
test
popf
push
roll
push
in
push
or
and
je
inc
cmp
in
mov
test
add
js
pop
add
icebp
sbb
push
add
push
popa
add
fadd
xchg
inc
bound
sarl
clc
add
mov
cmp
test
adc
and
mov
xchg
lcall
and
jae
dec
dec
fstps
dec
mov
push
or
rclb
xor
jecxz
int3
mov
loop
jle
mov
push
je
arpl
pop
scas
xchg
ret
push
add
dec
and
pop
pop
push
sub
xlat
movsl
cmp
and
pop
add
sbbb
or
cmp
push
sbb
or
pop
adc
jnp
aaa
or
push
cmp
jle
rclb
ret
adc
mov
rcl
mov
dec
mov
cmp
and
inc
dec
daa
mov
sti
mov
push
repnz
sub
fstps
jae
and
das
mov
lret
xor
pop
dec
inc
es
jb
pop
mov
mov
das
push
adc
or
or
sbb
fs
sbb
dec
test
pop
clc
arpl
rolb
loopw
inc
sbb
xchg
sbb
dec
inc
adc
mov
cmp
mov
jbe
jbe
mov
and
lahf
mov
insb
cld
xchg
int3
push
or
dec
cmp
popf
not
cmpsb
aas
repnz
xchg
ficomps
mov
adc
inc
hlt
in
adc
jl
das
add
or
adc
mov
jmp
or
inc
adcb
es
in
inc
inc
dec
inc
xchg
pop
mov
and
jne
or
test
push
inc
les
hlt
adc
mov
mov
in
popa
adc
mov
int
inc
fsubr
mov
in
push
icebp
jne
and
sbb
cmp
and
leave
gs
imul
jmp
sub
xchg
dec
mov
add
dec
lods
adc
adc
inc
push
pop
push
das
sbb
hlt
push
pushf
mov
outsl
icebp
pop
mov
xor
pop
sub
je
push
popf
ds
cmp
inc
push
test
adc
pop
testl
adc
sahf
test
hlt
add
push
in
js
outsb
dec
repz
push
or
or
shrl
sbb
insb
push
or
daa
adc
enter
fsub
jge
push
mov
xchg
test
and
cs
dec
xchg
add
or
or
nop
fldln2
out
inc
nop
and
shll
dec
xor
adc
or
jb
and
shr
add
leave
in
inc
shr
and
adc
and
and
adc
add
or
and
adc
test
xor
and
xlat
out
insl
add
sbb
mov
cmpsl
or
or
sub
inc
jmp
pop
clc
incb
testb
or
jmp
inc
and
mov
inc
jl
in
and
aaa
jecxz
rcr
outsb
data16
add
or
popf
sub
pop
sub
jle
or
or
pop
aam
and
je
sbb
loope
xor
adc
add
add
ja
dec
aas
pusha
mov
pusha
loope
pop
sub
sub
gs
inc
jecxz
nop
mov
repnz
fstp
ds
dec
sbb
imul
dec
sbb
ss
adcb
repnz
inc
jg
testb
push
es
adc
scas
cmp
cmpsl
sti
add
add
test
push
and
xor
mov
sbb
stos
aam
cwtl
mov
add
or
sub
push
leave
jb
pop
mov
ret
scas
mov
pop
testl
cmpsb
insl
cmp
je
jb
dec
mov
sub
and
inc
add
adc
in
movb
push
fnstenv
pop
add
or
pop
push
test
addl
mov
inc
imul
aas
les
sbb
test
neg
sbb
mov
mov
push
push
sti
lret
lods
ja
cmp
mov
shll
pop
xchg
push
fs
lret
mov
xchg
fcompl
jne
mov
adc
les
sub
sub
leave
sbbl
fwait
rcrb
mov
xor
mov
add
adc
div
add
mov
sbb
pop
cmc
jnp
jp
clc
jecxz
cmp
ljmp
adc
imul
or
or
lods
pop
add
mov
inc
xchg
add
rcr
add
jb
enter
leave
stos
repnz
inc
es
xchg
test
lahf
mov
xor
shrl
mov
stos
push
in
fs
shl
cmp
fmull
jle
jp
push
adc
ret
jmp
pop
movsb
ss
lock
in
aam
and
and
mov
jno
push
and
rorb
cmc
adc
sub
in
js
dec
mov
push
add
outsb
mov
add
and
test
push
or
jecxz
jmp
or
dec
sbb
ret
push
mov
mov
movzbl
jnp
xor
or
mov
pop
add
fs
jl
jecxz
add
push
or
imul
jnp
hlt
jg
add
adc
xor
mov
and
scas
add
jo
sub
pop
sbb
pop
sbbl
pusha
jl
test
sbb
pop
mov
imul
add
mov
rcr
mov
imul
pop
add
pop
fimull
or
mov
pushf
jns
sub
or
roll
idivb
scas
adc
mov
or
in
bound
xchg
loop
mov
adc
add
sbb
or
sbb
or
pop
loope
jbe
sub
xor
js
mov
push
dec
mov
popaw
sbb
mov
jnp
inc
lock
inc
adc
push
mov
mov
mov
jae
pop
std
mov
cs
mov
popa
xor
xchg
jno
pop
cld
pop
test
data16
cmc
mov
jbe
loopne
jl
loope
ret
sahf
push
scas
push
and
push
shl
seta
jne
pop
gs
and
xchg
sbb
inc
mov
xor
out
mov
sbb
insb
imul
push
clc
jecxz
fadds
into
aaa
in
xchg
popa
cmpsl
mov
das
pop
testl
test
outsl
jne
jne
dec
pop
or
mov
aad
icebp
sbb
gs
or
shll
push
or
push
dec
jg
js
push
mov
push
cmp
or
cld
push
imul
loope
sbb
jl
sbb
sub
shr
loop
pop
sub
ret
enter
aad
push
jo
push
rcrb
lods
jge
test
inc
fldenv
insb
sbb
xor
or
lret
fldcw
push
push
mov
or
lock
sub
fwait
sahf
jbe
cltd
loopne
fwait
int3
and
sbb
inc
insb
xchg
adc
and
jle
adc
fdivp
jb
mov
dec
push
mov
fs
ljmp
dec
lret
fstps
loopne
inc
xchg
scas
push
mov
and
mov
test
or
mov
inc
outsl
ljmp
jbe
xor
mov
out
add
pop
add
add
cmp
jbe
adc
mov
addl
std
sbb
pop
pusha
fidivrs
ret
shlb
mov
sub
dec
pusha
adc
push
imul
and
sub
aaa
dec
and
jns
ja
mov
iret
jl
pop
jnp
add
mov
lcall
adc
fs
pusha
in
mov
adc
dec
enter
sub
cli
es
xchg
mov
fwait
xor
add
sti
jbe
hlt
push
mov
dec
xchg
mov
adc
adc
enter
gs
cmpb
gs
subl
lcall
sub
cwtl
mov
inc
mov
cmpw
inc
inc
cmp
mov
ret
mov
cmp
ror
aas
inc
pop
mov
mov
loopne
nop
xor
cmc
shlb
jecxz
mov
sub
push
lods
add
add
push
daa
xor
inc
clc
daa
sub
jne
or
jl
mov
and
stos
test
pusha
inc
outsl
stos
pop
pop
adc
sub
sbb
clc
orb
shrl
loop
add
inc
pop
pop
dec
xchg
mov
loopne
add
lea
pop
orb
jl
lret
loopne
test
outsb
inc
jb
inc
aam
loop
rolb
sub
es
jmp
mov
cltd
insb
pop
and
mov
out
mov
inc
int
loop
insb
sub
dec
jbe
nop
cmp
xor
repnz
jb
cmp
sbb
jnp
std
jae
cmp
or
jb
in
popf
and
add
dec
mov
xor
adcl
or
and
cmc
push
add
mov
mov
add
hlt
ljmp
sti
cmp
dec
dec
xchg
add
loope
inc
sub
rsm
test
rclb
xor
cmp
ret
fcoms
mov
movsl
xor
or
clc
out
and
push
cld
not
push
pop
adc
in
popf
je
mov
pop
ds
push
or
inc
mov
lock
and
sub
test
shl
mov
jl
cltd
sbb
xchg
mov
xchg
test
sub
push
sbb
pop
in
mov
cmp
shlb
adc
and
ljmp
push
lea
inc
lret
loop
dec
add
cli
cmovg
int3
push
mov
pop
push
sub
pop
add
push
icebp
pop
mov
jns
inc
lock
lock
or
sbb
sbb
loope
loopne
dec
es
jo
sbb
jecxz
cmp
imul
mov
movsb
adc
adc
sbb
ja
dec
cmpl
gs
aad
shrb
movsb
out
mov
outsl
xchg
mov
out
and
pop
add
jle
lods
cld
inc
lcall
rorl
sub
test
scas
shl
out
add
add
or
loopne
imul
mov
in
add
stc
and
xchg
aam
add
xchg
enter
sub
adc
or
adc
sbb
adc
push
and
mov
adc
adc
and
cmp
mov
adc
mov
sbb
cmp
adc
push
imul
sub
test
and
cmpsb
mov
xor
push
adc
into
mov
adc
mov
push
cmpsb
add
movsb
mov
jp
xchg
ljmp
imul
addl
aad
dec
or
cmp
in
jne
inc
jmp
mov
sub
pop
shrb
or
xchg
add
int3
mov
sub
cmp
ja
mov
adc
push
dec
jmp
fs
jecxz
fisubrl
mov
rolb
or
jle
sub
mov
add
jmp
ljmp
jmp
andl
pop
sar
jmp
cmpsl
mov
mov
lods
push
sub
mov
or
and
mov
testb
mov
inc
jle
cmp
push
xor
cld
or
jg
orl
jbe
jno
push
jbe
and
lahf
shll
sub
add
out
xchg
out
movsb
jno
sbb
mov
ret
cmp
dec
sbb
push
pop
out
sbb
jge
pop
cmp
and
idivl
jbe
nop
add
jne
pop
fisubs
dec
dec
jae
imul
sbb
ret
pop
and
js
and
outsb
mov
call
decb
pop
sahf
sbb
push
sub
sahf
add
shlb
in
orl
andl
test
ret
sub
ds
sub
cmp
mov
xchg
std
xorb
je
scas
call
pushl
mov
shll
test
nop
mov
pop
cmp
mov
rol
incb
testl
mov
hlt
pop
push
add
bound
xorb
call
cld
push
sbb
and
rclb
pop
fsubrs
mov
stc
push
adc
std
add
ss
jecxz
add
pushf
jmp
ss
or
pop
mov
xlat
shlb
pop
push
mov
dec
imul
xchg
hlt
push
jne
dec
push
push
push
xor
shrb
push
cwtl
jge
add
inc
int
adc
sub
ds
xlat
test
cmp
ljmp
sbb
mov
sarb
ret
jge
jle
outsb
ja
mov
xor
jne
or
push
cmp
loop
rcl
dec
test
pop
adc
dec
cli
push
inc
mov
test
popf
add
mov
and
test
add
mov
dec
mov
pop
cmpb
cmp
fwait
jmp
fmulp
mov
push
xor
and
and
xorl
into
nop
fs
out
adc
andl
adc
in
fisttpll
mov
ja
push
stos
inc
ja
ja
mov
pop
mov
pop
icebp
mov
movb
testl
inc
xor
enter
les
test
into
dec
dec
inc
into
jne
inc
or
cmp
in
int
sarb
xor
hlt
int3
add
and
pop
xchg
jne
mov
rolb
loop
add
add
add
mov
push
faddl
or
movsb
push
clc
adc
scas
sbb
cld
out
shlb
adc
dec
lock
add
inc
mov
inc
push
js
subl
lcall
popa
lcall
stc
jg
add
add
mov
push
lret
js
add
in
nop
shll
adc
fbld
or
shr
pop
rcrl
or
push
out
mov
das
jmp
bound
or
adc
inc
mov
lret
mov
add
negb
ret
je
adc
mov
fcom
insl
fadd
loopne
shr
or
mov
sahf
push
adc
insb
mov
data16
push
push
lds
and
mov
dec
mov
pop
add
mov
push
sar
pop
loopne
dec
xorb
imulb
cmpsb
lcall
mov
fidivrl
jb
dec
push
pushf
insb
lcall
test
insl
xor
lock
cmp
or
sub
outsb
or
into
jmp
lahf
imul
dec
and
jae
jno
les
sbb
pop
xor
xchg
js
lds
sbb
das
sub
add
notb
sarb
add
push
nop
cltd
lds
insl
and
ret
ficompl
bound
inc
sbb
sbb
xchg
xchg
add
sarl
cmp
push
inc
cmp
mov
ds
pop
dec
leave
mov
insl
lods
mov
or
push
or
fcom
add
xor
sub
pop
jne
xchg
ds
cmp
add
scas
xchg
movsl
pop
add
push
mov
mov
mov
or
test
pop
cmp
sub
or
pop
push
xchg
xchg
js
pop
sti
adc
inc
cs
or
pushl
stc
gs
or
out
mov
dec
cmpb
out
decl
je
mov
cmp
pop
jne
dec
mov
inc
inc
mov
push
lock
hlt
add
mov
fcompl
addr16
rorb
xlat
mull
jae
test
int3
xchg
outsb
fisttps
les
or
or
adcb
dec
add
sbb
cmc
push
sbb
mov
jnp
add
jbe
outsl
xchg
push
adc
gs
dec
pop
sti
add
and
enter
andb
xor
dec
cwtl
add
xchg
sub
push
xor
ficoml
call
xor
or
add
push
ret
xchg
dec
adc
mov
lcall
lahf
sarl
aas
push
cmpl
out
clc
add
mov
mov
ljmp
test
sub
movb
lea
mov
jmp
add
icebp
sub
sbb
ficoml
je
cmp
add
add
add
add
lcall
adc
jmp
sub
add
sub
xor
ret
lds
test
xchg
inc
dec
mov
out
adc
jns
les
pop
dec
mov
jl
repnz
xor
push
or
add
testb
cmpsb
add
push
cli
lds
push
add
sub
mov
push
repnz
sub
and
ror
xor
or
and
aam
rolb
shl
dec
sub
js
adc
jmp
ja
push
ret
jbe
shlb
add
dec
adc
shlb
jge
mov
rcll
or
xorl
adc
inc
enter
xchg
addl
pop
mov
mov
cs
cmp
mov
mov
sub
jno
adc
lea
jle
and
pushl
ret
xor
dec
xchg
or
jge
adc
testl
in
arpl
call
xchg
or
jo
jge
enter
je
popa
repnz
cmp
pop
add
add
mov
lret
lret
out
xor
fstl
lods
inc
add
test
or
sbb
lahf
fadd
jmp
lock
nop
loope
test
add
enter
sub
lds
outsl
push
add
push
xor
enter
test
loopne
js
push
cmpsb
movsl
icebp
sub
push
dec
sar
mov
leave
and
add
mov
add
adcl
enter
or
popf
cmp
dec
fwait
sbb
inc
neg
sbb
jecxz
mov
lock
ret
daa
xor
or
jne
pop
adc
sahf
mov
jmp
out
loope
outsl
scas
test
movb
adcl
into
mov
or
adc
xlat
or
sbb
or
xchg
cmp
cmpsb
lret
adc
or
ss
mov
jo
les
pushf
sbb
mov
pavgb
add
mov
add
dec
shrd
push
jle
jle
loop
cmp
ss
jl
rcl
xor
xor
imul
stc
inc
add
dec
jmp
pop
into
in
xchg
clc
sub
xor
mov
jle
incb
mov
push
xor
add
inc
mov
mov
mov
lcall
xor
jo
cmp
aaa
mov
pop
and
mov
mov
or
xchg
lds
push
sub
or
jg
shl
fidivrl
rorl
sbb
inc
shll
mov
jns
add
jbe
add
and
sub
xlat
int
push
jg
lods
jb
jb
lods
cmp
dec
pop
add
jb
or
sbb
sarb
test
add
jae
stc
mov
or
sub
mov
push
scas
cmp
jbe
xchg
aam
adc
sbb
and
les
loop
call
mov
and
mull
in
add
push
add
cwtl
or
call
lock
inc
sub
add
inc
sarb
mov
jne
adc
jl
or
popa
push
mov
pop
xor
add
add
out
into
mov
es
xchg
adc
loopne
test
pop
dec
shrl
xor
pop
push
rolb
jne
cmp
dec
loop
push
cmp
inc
lret
jbe
rol
or
shlb
xor
lea
mov
stos
sub
icebp
adc
fldl
rcll
push
jmp
insl
cmp
add
cld
jl
hlt
outsb
call
or
js
or
mov
inc
rorb
shll
mov
sbb
scas
pop
ret
jge,pt
jle
inc
jle
gs
or
pop
aaa
lock
frstor
sbb
pop
cmp
popa
je
inc
je
mov
insb
sbb
cmp
jmp
xor
add
adc
and
cmp
sbb
or
stos
inc
hlt
adc
dec
mov
mov
enter
and
or
fldl
fdivl
fmull
insl
push
pop
clc
fstps
or
and
fs
and
push
mov
and
dec
rol
ret
or
test
loopne
xchg
pop
adc
or
adc
xor
js
je
dec
das
mov
inc
push
inc
push
pop
push
imul
sbb
dec
loopne
jmp
sbb
cmc
mov
push
cmpb
jne
jp
dec
adc
pop
dec
push
rorl
sub
scas
hlt
ret
dec
sbb
push
cmp
push
aaa
add
insb
cmp
pop
cmp
push
ficompl
xor
dec
cld
lock
aaa
lea
push
and
jo
pop
inc
cmpsl
fs
pop
popf
addb
push
mov
pop
dec
sbb
aaa
pop
cli
rolb
add
mov
aaa
sub
push
insl
outsb
lea
cmp
xchg
dec
fsubrl
mov
hlt
xor
lahf
movsl
sub
mov
pop
push
imulb
sub
mov
int3
add
sahf
xor
mov
cmpl
push
lret
or
push
mov
mov
push
mov
test
adc
lea
mov
push
jp
pop
call
cli
rorb
mov
test
test
movsb
das
loop
add
sbb
je
sub
and
jbe
jge
xor
adc
pusha
mov
pushf
push
adc
stc
mov
inc
cmp
jl
jecxz
daa
mov
aas
int
lock
add
or
jl
cmp
sub
mov
add
mov
icebp
sub
cs
add
xor
sbb
sub
bound
dec
out
hlt
jmp
or
dec
push
jae
jmp
testb
adc
cmp
adc
xchg
aam
ss
enter
push
insl
pop
scas
int
jae
mov
shll
add
jbe
push
and
pop
cmpsl
or
into
or
xchg
rorl
rcll
dec
cmp
gs
sbb
add
push
sbb
es
icebp
sbb
inc
mov
cmc
push
sbb
xor
cmpsl
mov
and
jns
es
push
into
push
jne
pop
sub
aad
add
cmp
pop
icebp
in
cld
cwtl
adc
fs
daa
mov
sub
push
sbb
jo
push
movsl
add
mov
fldenv
jns
jne
test
xchg
iret
mov
icebp
hlt
hlt
fsts
xor
lock
or
sub
mov
jl
xorl
jae
pop
and
imul
jo
shl
or
sbb
inc
sub
xor
sbb
xlat
add
cmp
sub
cltd
sbb
sbb
push
ret
cmp
lcall
sbb
dec
lock
add
or
adc
sub
push
add
addr16
nop
and
xor
cmp
sbb
inc
jmp
xchg
sbb
jo
add
inc
add
cwtl
pop
outsl
or
jbe
addr16
xor
stc
inc
inc
test
data16
sub
jecxz
sub
xchg
fmuls
ss
les
wrmsr
mov
inc
pop
mov
jmp
xor
mov
jo
mov
jl
mov
xchg
sbb
stc
pop
jmp
adc
jnp
push
addb
pop
test
ror
push
insb
pop
xchg
add
xchg
repnz
push
push
and
mov
jo
sbb
xor
xchg
and
push
xor
mov
cld
fs
lret
mov
dec
cmp
movsb
cmp
sub
jmp
xchg
push
cwtl
sbb
sahf
mov
rclb
sysexit
popa
sbb
ljmp
inc
jmp
test
inc
imul
add
inc
lret
ret
sub
fcoml
sub
movsl
sbb
or
lcall
pop
and
xor
movsb
lea
call
pop
or
xchg
inc
push
sub
enter
mov
push
sub
xchg
mov
jo
push
loope
inc
xor
leave
pop
lock
out
sub
adc
jmp
pushf
or
cmp
les
adc
mov
xchg
push
cs
and
loop
cmp
adc
nop
cmp
push
insl
loopne
loop
testb
std
dec
loopne
mov
push
ljmp
sub
cmp
lea
decl
sbb
shll
repz
add
or
sahf
mov
and
not
ficompl
out
fcmovb
jmp
shr
or
mov
add
add
or
bound
rcrl
repz
push
sti
push
sbb
cmp
xchg
sbb
inc
sub
jmp
sub
frstor
sub
adc
jne
add
fnstcw
inc
les
ds
jg
pop
dec
add
lea
mov
shr
subb
cmp
mov
adc
dec
insb
mov
or
push
sbb
mov
mov
adc
dec
lock
dec
movsb
sbb
es
stc
jo
add
out
decb
loopne
cmp
sub
sbbb
imul
push
cli
push
notb
or
shl
andl
adc
aad
fs
push
add
sbb
decl
pop
fsubs
stos
imulb
or
test
sub
push
xchg
lret
je
test
add
push
or
rorl
sub
andl
fcmovu
add
sub
mov
lods
cmp
jo
negb
add
adc
fisttpll
cmp
cmpsl
enter
push
cld
sub
jne
dec
mov
call
ss
inc
inc
and
adc
mov
mov
sub
int
xchg
mov
adc
cmc
add
adc
insb
call
push
fldl
mov
jle
cld
insl
stos
sbb
ja
flds
les
or
and
pop
cmp
add
out
cmp
leave
inc
xor
mov
jg
lock
jl
cmpb
jl
xor
rorb
cmpb
idiv
test
inc
stos
insb
xor
inc
inc
xor
bound
inc
shrl
and
dec
inc
push
push
mov
push
push
jo
imul
rorl
cs
inc
adc
fldl2e
imul
cld
aam
mov
or
sub
mov
jne
and
cmp
mov
adc
mov
call
out
aad
cmp
and
adc
or
test
push
sub
adc
push
fcmovu
add
push
shll
cmpsb
mov
je
mov
dec
scas
or
ret
dec
cmp
dec
pop
in
or
pop
pop
ret
jl
push
fidivl
jl
rolb
movsl
xor
dec
outsb
rorb
push
add
ret
lea
hlt
aam
xchg
and
push
jmp
and
push
pop
mov
ret
enter
sahf
loopne
call
neg
neg
sbb
sub
sbb
sbb
inc
sbb
es
sbb
and
pop
gs
push
push
inc
and
fldcw
dec
inc
or
and
sbb
test
fs
inc
and
fwait
dec
inc
xor
pop
pop
adc
das
fidivl
into
jae
or
jae
lods
rcl
ljmp
dec
and
shr
test
inc
sub
cmc
adc
jmp
mov
cld
je
jmp
jb
or
outsl
add
add
lahf
mov
push
test
or
adc
pop
add
inc
pop
in
rolb
sub
push
jge
faddl
jnp
pop
sub
je
push
or
into
into
addb
xor
push
xchg
or
les
jle
ss
and
xor
pop
pop
in
iret
das
bound
sbb
xor
pusha
adc
add
mov
adc
test
adc
cmp
les
sub
js
mov
or
cs
int3
jne
sbb
cld
and
jo
ss
dec
pushl
dec
fidivs
inc
push
pop
mov
fidivs
lock
jge
cmpsb
adc
sub
and
and
leave
jne
sub
testb
popf
push
jmp
sbb
pop
nop
icebp
mov
or
je
int
scas
and
mov
mov
mov
out
es
mov
je
dec
push
inc
les
mov
push
cmp
ja
gs
adc
cmp
jne
xchg
std
shll
leave
adc
mov
arpl
add
cmp
pop
ss
add
add
imul
push
add
call
push
inc
cmp
add
pop
sbb
sbbb
xchg
lea
es
test
scas
sbb
mov
jmp
neg
je
push
jecxz
xlat
iret
push
push
fdivrs
inc
loop
or
mov
sbb
xorl
or
inc
mov
ja
jo
enter
cwtl
jne
movsl
push
repnz
xor
test
sbb
dec
jns
cli
fstp
pop
in
jmp
mov
pop
repnz
cmp
push
cmp
mov
add
jno
cmp
push
imul
adc
and
xor
adc
sub
lods
xor
mov
test
adc
or
mov
in
inc
lods
sti
cltd
push
inc
inc
adc
popa
test
roll
sbb
or
jle
mov
or
dec
repz
and
push
rcl
ror
repz
aam
xlat
fcomp
inc
inc
insb
ds
fstpt
mov
in
nop
data16
divb
inc
inc
add
push
into
bound
das
cmp
test
or
mov
mov
mov
adc
mov
mov
add
push
jl
sub
inc
push
add
xchg
fisubrs
aas
jne
sub
mov
inc
out
divb
in
cmp
frstor
icebp
adc
idiv
pop
idivl
push
xor
push
test
shrb
testb
add
adc
push
push
sbb
add
xor
mov
imul
xchg
mov
jmp
sbb
sbb
lea
or
mov
inc
js
mov
test
sbb
neg
scas
add
pusha
popf
test
pop
addl
adc
outsb
outsl
loopne
sub
mov
xor
inc
adc
sar
fisubs
addr16
call
jecxz
les
call
jb
mov
and
call
test
add
inc
rcll
add
hlt
pop
sub
icebp
in
out
mov
testl
into
and
lea
pop
and
js
subl
jae
xchg
ja
add
add
push
mov
lods
mov
mov
outsl
in
pmulhuw
ljmp
loopne
inc
or
jmp
fbstp
lea
pop
shl
test
ret
dec
rolb
push
mov
push
or
mov
lea
dec
xchg
mov
or
or
mov
cmp
mov
ret
movsb
repz
mov
mov
push
addl
push
cmpl
mov
ret
and
rorb
jle
jle
adc
fsubrs
sub
jecxz
adc
add
cld
or
fbstp
hlt
rorb
add
movsl
push
push
push
lret
push
jo
dec
inc
xchg
test
adc
or
mov
test
dec
shrl
in
shr
xchg
mov
or
dec
pop
inc
sub
inc
dec
add
pop
repnz
push
lock
imul
xchg
out
lods
cli
inc
cli
div
wbinvd
sub
sbb
pop
adc
or
xor
loopne
mov
push
jnp
sbb
adc
mov
test
adc
clc
or
sub
push
aaa
dec
fnstenv
xchg
cmp
xor
mov
imul
ret
xor
dec
pop
jnp
xor
pop
imul
or
pushw
sub
loop
int3
shll
xchg
testb
or
mov
add
jp
cmp
or
adc
xor
into
xchg
out
mov
inc
shlb
fdivs
aam
inc
inc
test
dec
ret
sub
jge
mov
lcall
adc
xchg
dec
mov
mov
or
push
xchg
cmpsl
call
lea
fcmovu
mov
mov
push
test
inc
add
lods
inc
jl
aaa
rolb
cltd
add
sbb
clc
sbb
xchg
add
sbb
mulb
call
testb
xchg
lock
xor
cmpb
jge
jno
or
inc
lock
adc
jmp
inc
pushf
xchg
aas
add
jne
inc
pop
push
stc
sbb
in
add
or
mov
pusha
mov
jge
add
sub
pop
adc
jbe
sbb
data16
add
inc
add
add
push
nop
mov
hlt
adc
adc
adc
add
cmpsl
sub
inc
pop
shll
jno
popa
call
jb
mov
push
shll
test
jne
sbb
neg
and
pop
jle
inc
imul
icebp
sub
loopne
loopnew
test
add
mov
loope
mov
mov
push
cmp
fnstcw
in
out
loop
xor
push
sti
and
aad
stos
cltd
xchg
mov
repnz
mov
add
mov
or
into
les
enter
cld
sbb
stos
jbe
pop
lcall
inc
inc
pop
mov
and
jne
scas
mov
cmp
push
shlb
add
mul
add
lahf
add
add
add
in
into
or
sbb
mov
inc
xchg
inc
in
fcmovbe
test
dec
nop
dec
mov
dec
lock
hlt
cmp
jge
sub
cmpb
or
add
dec
cmp
jae
mov
push
xchg
jb
add
add
fadds
add
or
fidivrs
jne
dec
mov
jb
int
inc
push
or
adc
loop
ret
and
add
push
add
inc
jbe
ret
adc
sti
sub
enter
or
or
and
ret
lcall
add
push
mov
ret
and
push
adc
fisttps
jmp
cli
inc
out
mov
or
xchg
icebp
jns
add
or
popa
sahf
jmp
add
adc
pusha
test
adc
mov
stos
or
push
ret
les
adc
or
jae
cmp
ret
aas
test
lret
push
cmp
pop
cmp
xor
into
push
sub
push
pusha
inc
mov
mov
rcrl
dec
mov
or
pop
cmpps
or
nop
mov
adc
xchg
mov
lock
ret
mov
inc
push
pop
jae
or
add
add
add
ja
add
jl
push
test
jl
or
mov
push
je
dec
pop
or
push
mov
or
dec
pop
dec
pusha
test
and
fidivrs
xor
and
ds
mov
mov
movsb
sahf
pop
mov
popa
cmp
or
pop
push
pmulhuw
fldcw
dec
lcall
xchg
or
xorb
or
cmp
stos
jg
xchg
sub
shrl
into
xchg
into
addb
cltd
cmp
out
xor
add
pop
mov
faddl
and
cltd
ss
or
sbb
add
or
into
rcrl
into
out
push
add
lret
je
leave
repz
and
sbb
inc
jg
into
push
into
mov
lods
push
and
pop
sub
push
pop
push
out
icebp
push
nop
pop
cwtl
pop
mov
cmpb
rclb
jnp
adc
pop
add
je
mov
dec
dec
lods
sub
loopne
pop
lcall
pop
mov
shl
adc
inc
sahf
xchg
addr16
add
add
lds
add
test
and
imul
scas
push
sub
orb
sub
jmp
jmp
lret
ret
cwtl
ret
lods
xor
xchg
and
sbb
push
scas
sbb
flds
push
shlb
call
or
add
jo
cmp
and
cmp
add
xor
push
sbb
sub
mov
dec
mov
add
hlt
add
ret
ficomps
adc
stos
imul
or
sub
daa
or
and
push
cli
xor
loop
bound
push
scas
mov
or
jo
mov
cmp
icebp
popf
sub
push
mov
inc
push
cwtl
dec
sbb
mov
cmpb
adc
cwtl
orb
add
inc
jmp
adc
cli
and
dec
sub
jb
mov
pop
sbb
ds
je
pop
das
mov
sub
rorb
cld
or
jbe
inc
inc
int3
call
dec
mov
jo
lds
enter
mov
out
adc
xchg
sub
sarb
into
or
in
add
arpl
or
sbb
lahf
xor
aam
fisttps
cmp
movsl
mov
into
or
repz
or
movl
test
and
ret
vmovaps
cmp
dec
fsubrl
lock
push
push
sahf
and
cmp
xchg
imul
jnp
inc
pushl
xchg
cld
push
inc
inc
test
je
insb
sti
test
test
push
xor
mov
cmp
aam
pop
dec
jbe
cli
popf
push
fcoms
jecxz
lret
push
cwtl
pop
mov
dec
out
sbb
jne
jge
sbb
mov
adc
sbb
mov
mov
sti
pop
xchg
and
push
hlt
cmp
and
jbe
pusha
xchg
dec
inc
sbb
cmpsl
mov
clc
incl
enter
popa
pop
jge
lea
jae
lret
pusha
push
xorb
or
add
les
jl
and
xor
adc
iret
lds
lods
lods
push
rcrl
cmp
and
xchg
dec
pop
mov
sbb
adcb
das
aas
add
cmp
sub
sub
outsb
mov
pusha
add
jae
inc
mov
and
xlat
push
test
pop
xchg
jb
lcall
fistl
fsts
xorb
clc
or
rorl
loopne
pop
jmp
xor
loopne
xor
mov
inc
hlt
or
push
jne
push
inc
add
mov
das
lods
and
enter
dec
jmp
xchg
push
rorl
sub
inc
add
fdivrs
and
push
aam
int
or
sbb
pop
ret
mov
ret
sbb
cmp
mov
inc
jle
pop
add
pusha
arpl
adc
push
dec
inc
test
jo
inc
jnp
lretw
enter
cmp
dec
sbb
dec
roll
push
clc
or
cwtl
and
in
addl
sahf
xor
or
call
add
lahf
lock
jl
add
clc
push
inc
js
pop
jl
sub
dec
lea
imul
or
mov
mov
xchg
pop
fistpl
pop
nop
sbb
sti
scas
jae
fsubs
loope
out
adc
scas
loopne
jmp
dec
loop
adc
xchg
fisttps
sbb
ss
cwtl
mov
ja
call
and
mov
sbb
cld
sbb
or
adc
inc
pusha
jo
out
or
inc
sar
add
push
das
std
dec
adc
roll
sub
sub
sub
add
fwait
cmp
sub
out
xor
lcall
add
jl,pt
out
inc
hlt
xor
push
mov
subl
cmp
sub
mov
add
ja
addb
inc
add
fisttpl
mov
fs
sbb
add
cwtl
or
push
fistpll
and
inc
add
push
xor
or
pop
add
sub
pop
and
inc
ss
mov
addr16
and
daa
adc
sbb
cmp
adc
addr16
mov
test
or
aaa
adc
data16
cli
adc
jbe
shlb
fwait
pop
lea
xchg
ret
push
pop
or
mov
test
pop
outsb
mov
sub
fwait
or
loope
and
mov
mov
loopne
clc
out
cvttps2pi
aam
test
aaa
push
push
in
fbstp
mov
fsts
sub
mov
xchg
fildll
add
push
xor
inc
jge
lahf
adc
jmp
fstps
icebp
lahf
xorl
xchg
mov
sub
das
fadd
fidivl
test
in
mov
sbb
mov
inc
ja
je
mov
mov
mov
mov
dec
jo
or
dec
sbb
dec
in
push
pop
cmp
iret
mov
or
loope
push
sub
scas
inc
cltd
or
incb
gs
pop
nop
inc
mov
lods
mov
dec
call
dec
es
in
call
push
or
lods
int
xabort
inc
loopne
mov
into
andb
cmp
outsl
jl
inc
push
mov
shlb
jns
push
or
loopne
xchg
push
jb
inc
dec
add
adc
jp
rcrb
in
lock
inc
es
jne
jo
push
mov
loopne
inc
add
adc
lock
mov
jnp
adc
mov
and
aam
movsb
push
cld
pusha
mov
add
icebp
cld
arpl
fdivrs
mov
xchg
insb
jl
les
sbb
xchg
dec
repnz
sbb
jb
cltd
sub
cmp
aaa
pop
inc
lret
out
fwait
inc
adc
push
xlat
jge
lahf
dec
jo
push
std
or
mov
fsubrs
sub
inc
jle
cwtl
sub
cmp
mov
arpl
int3
pop
dec
lret
or
and
fisttps
inc
xor
and
mov
in
xchg
pushf
mov
sbb
inc
push
sub
mov
sub
mov
jmp
shr
aam
xchg
xchg
and
in
les
imul
test
in
inc
xor
sarb
insl
cmp
test
adc
rcpps
fdivs
xorl
rolb
in
sbb
imul
call
push
adc
scas
rorl
stos
push
pop
hlt
add
cmpl
nop
xchg
and
or
push
xorl
jb
cmpb
pop
aam
mov
addb
xor
orl
sbb
adc
cmpb
ljmp
test
shl
dec
xor
aaa
call
push
xchg
cmpl
rcpps
repz
aam
je
int3
or
fldenv
mov
call
shlb
cmp
or
out
shrb
sub
test
adc
aad
cltd
sbb
adc
and
xor
xor
and
cmp
inc
enter
dec
fs
jge
insb
in
add
sbb
add
add
add
sbb
adc
and
lock
xchg
dec
lock
adc
int3
test
inc
stos
adc
inc
in
jnp
sub
fwait
aam
fadds
xchg
pop
xchg
fs
inc
cmpsl
pushf
xchg
hlt
xor
dec
xchg
push
loopne
in
mov
and
scas
rorb
jbe
sldt
shr
fsubs
adc
ds
cmpsb
in
adc
movsl
aam
jne
sub
mov
aad
pop
dec
push
xor
adc
adcb
rcrb
inc
test
leave
sbb
cwtl
ss
movsl
faddl
sahf
cwtl
mov
mov
xchg
inc
les
jmp
mov
lock
pop
fcoms
pop
pop
and
xor
or
insl
mov
dec
repnz
test
out
lock
mov
pop
bound
gs
push
cmp
mov
push
in
test
push
cmc
inc
mov
sbb
js
or
movsb
cmp
and
lods
mov
ficoml
movl
pop
add
sbb
or
xchg
int
cmpsl
int3
out
sub
xchg
out
push
adc
jo
rolb
cmpb
jl
testb
jl
pop
sub
sub
adc
sbb
mov
mov
popa
repnz
jb
fcom
mov
hlt
jnp
pusha
and
test
leave
in
dec
push
rorl
leave
leave
leave
mov
mov
leave
rol
int3
lcall
in
or
jns,pn
mov
movsb
enter
imul
pop
ret
cwtl
dec
cwtl
jl
push
dec
xor
shlb
vfrczsd
rorl
fs
or
cmc
ret
cs
inc
scas
fmul
test
add
and
push
imul
adc
daa
fmull
in
bound
or
das
push
test
sub
or
or
sbbb
clc
xchg
lahf
jmp
repnz
mov
push
or
fcom
fisubs
das
unpcklps
sti
sub
movsb
sbbl
nop
daa
cmp
movsb
inc
adc
test
pop
and
pop
aas
loopne
rclb
push
insl
inc
sbb
stos
adc
pop
cli
add
subl
add
xchg
aad
xor
nop
push
js
in
dec
test
daa
mov
pop
or
sbb
pop
sub
xor
xchg
outsl
jmp
pusha
cltd
ss
in
fs
add
add
cwtl
jl
addb
stc
push
xchg
xchg
or
leave
les
js
jl
push
in
inc
insb
shrl
dec
in
inc
jne
leave
add
les
ljmp
enter
adc
xchg
or
psubsb
mov
test
and
xor
adc
xchg
xor
dec
jp
outsb
adc
out
mov
and
ret
dec
sub
or
xchg
push
movsl
lcall
pop
cmpb
and
inc
stos
add
mov
sbb
std
sbb
mov
nop
daa
pop
fcompl
lcall
cmpsb
or
inc
or
inc
xchg
sbb
xchg
push
or
popa
in
or
and
and
sub
jb
xor
fwait
cltd
daa
in
dec
push
cltd
and
call
and
lcall
jl
shlb
int3
xor
in
test
pushl
aam
leave
inc
andl
adc
add
push
adc
mov
mov
sub
push
fwait
adcb
fwait
mov
mov
insl
add
fnsave
add
fwait
icebp
in
nop
mov
aam
mov
pushf
aas
mov
incb
fcompl
out
mov
movsb
adc
mov
or
or
mov
add
imulb
out
lock
aam
pop
mov
lret
cmp
orb
push
xchg
or
mov
nop
gs
test
cmp
les
outsl
sbb
add
pusha
sbb
lret
push
stos
push
js
adc
nop
lea
xor
push
xlat
dec
xchg
or
enter
daa
mov
mov
int3
enter
daa
daa
sarb
mov
cwtl
mov
pushf
addr16
dec
shrb
pop
rolb
push
shrl
cmp
xor
xor
sbb
mov
push
xor
adc
or
in
test
and
push
mov
arpl
fimull
push
imul
push
sub
mov
jnp
xchg
fmull
lods
test
adc
add
mov
xchg
lock
sbb
sbb
rcr
jg
shlb
das
in
das
sub
adc
jp
fsubs
xor
in
sub
xchg
test
mov
inc
loopne
sbb
movsb
sub
or
jecxz
push
inc
mov
in
enter
movsb
sbb
loop
add
sbb
cmp
mov
insb
xchg
sub
ljmp
rorb
punpckldq
and
rorb
mov
cwtl
int3
cmp
mov
fdivl
shll
fdivl
ret
shrb
cmp
loopne
xor
or
inc
in
adc
test
sub
pop
cmpsb
in
fcoms
test
and
pop
pop
push
and
mov
fdiv
mov
inc
in
adc
xlat
repnz
rolb
push
sub
xchg
movl
cmp
rcrb
aam
xor
jl
push
jo
mov
push
test
xchg
fwait
cltd
xchg
mov
fsubrs
aas
fdivs
fisttpl
shrb
sbb
repz
pop
or
jo
mov
test
cmp
add
movsb
sbbl
stos
outsb
loope
frstor
mov
xchg
les
mov
sbb
push
sbb
stos
addl
mov
shl
xor
mov
test
inc
leave
mov
ja
sbbl
xor
add
lods
sub
jle
add
movsb
imul
aaa
mov
fcomp
adc
in
lock
jb
inc
adc
scas
add
xorb
mov
inc
inc
scas
decl
rcrb
das
mov
xor
inc
push
mov
pop
and
xchg
fs
fdivrl
adcb
mov
and
or
stos
and
adc
inc
lods
sbb
aam
pop
jnp
sti
popa
jb
sarb
mov
dec
or
std
pop
inc
cwtl
lods
pushf
std
in
add
movsb
mov
adc
and
ja
and
adc
xchg
test
dec
es
fs
mov
push
repnz
test
daa
and
sub
daa
in
mov
and
aam
in
jl
ret
je
sbb
shrl
cmp
inc
xor
mov
xchg
or
mov
mov
xor
mov
push
xor
in
mov
mov
orl
and
mov
mov
adc
je
mov
pop
inc
stos
and
test
xlat
sub
lcall
movsl
shll
mov
inc
int
dec
add
lahf
loopne
sbb
xchg
lods
dec
or
or
cltd
shrb
sub
clc
aad
pop
enter
mov
add
es
stc
mov
adc
inc
cmp
add
cmp
imul
xor
test
inc
gs
ja
xor
shl
adc
fs
inc
out
dec
add
stos
adc
dec
js
dec
adc
test
aas
aam
mov
and
lret
outsl
mov
add
leave
test
mov
cltd
pusha
mov
cmpsl
pushf
mov
mov
loopne
sbb
lea
js
mov
pop
add
add
sub
jbe
pop
loopne
hlt
les
push
insl
cmovno
mov
insl
push
lds
adc
inc
shll
add
sub
dec
push
test
call
push
mov
jne
lds
mov
pop
xor
xchg
das
enter
jmp
mov
mov
mov
xor
loopne
or
pop
int
or
mov
push
add
adc
and
sarb
imul
shrb
int3
aaa
cs
sbb
or
mov
add
mov
lods
push
mov
and
enter
cmp
push
in
enter
inc
stos
add
imul
jge
pop
daa
add
sub
push
push
lcall
pop
rcrb
xor
lock
xchg
xor
imull
nop
pop
loope
out
adc
and
push
nop
out
inc
lea
movsb
cmp
inc
mov
push
fbstp
dec
shlb
add
in
lret
adc
and
add
push
movsb
xor
cmp
cmpb
movsl
mov
or
xchg
lret
adc
out
enter
xor
pusha
enter
sub
and
push
adc
sbb
leave
mov
inc
xchg
les
sarb
pop
xchg
out
mov
out
and
out
out
addl
mov
inc
mov
sub
cmpsb
sbb
in
sub
lods
dec
add
rclb
lock
mov
js
add
rolb
adc
mov
mov
inc
mov
lea
movsl
shlb
dec
pop
pop
je
test
adc
and
cltd
pushf
je
popa
inc
lods
fwait
stos
jo
test
xlat
fildl
leave
push
addb
inc
xor
insl
xchg
pop
nop
and
dec
jb
mov
and
push
pop
sbb
add
leave
mov
adc
loopne
ret
adc
xor
test
insl
aas
mov
jge
lcall
xchg
fwait
sub
mov
cmp
mov
add
stos
lock
pop
or
pusha
gs
shll
cmp
inc
mov
enter
sbb
or
call
dec
xchg
or
call
in
lds
scas
sub
mov
lods
lods
adc
adc
adc
imul
adc
sbb
roll
sub
add
sbb
sub
xor
add
call
lods
push
xor
xchg
xor
std
enter
add
or
and
jb
adc
mov
xchg
adc
nop
inc
mov
ficompl
sub
in
jge
enter
test
in
loope
mov
mov
std
xchg
add
or
mov
inc
mull
jmp
pop
adc
and
and
loopne
sub
add
xchg
sbbl
push
jb
aam
add
jo
std
imul
xchg
invd
xlat
sub
sbb
sahf
cmp
mov
and
orb
in
call
ljmp
rorl
loop
adc
sub
orb
in
xchg
adc
sub
cmp
mov
push
inc
xchg
leave
jns
push
add
or
fcoms
vmread
or
call
cmp
lret
or
ss
inc
or
or
orb
pop
push
mov
inc
cmp
lds
lods
xchg
jne
sub
dec
push
dec
test
inc
adc
lds
push
call
leave
adc
into
stos
mov
shrl
loopne
movsl
nop
inc
shlb
test
inc
cmpsl
or
adcl
jae
push
xor
insl
inc
mov
call
push
jno
rolb
mov
dec
push
arpl
fadds
cmpsb
jne
daa
int3
inc
cmpsb
sbb
pop
in
in
dec
jb
dec
adc
or
ss
and
or
enter
es
sbb
aam
mov
cld
fistl
push
insl
mov
mov
clc
scas
add
and
es
fsub
adc
call
dec
xor
adc
xor
insb
aad
or
cmpsl
or
hlt
and
xor
mov
or
sysret
add
jnp
lds
pop
jl
jbe
inc
in
push
sbb
cltd
cmp
mov
lods
ss
lret
pop
insl
add
push
push
cmp
shrl
es
adc
dec
xor
fs
dec
xor
jo
mov
nop
imul
cltd
mov
xchg
jmp
shlb
cmp
add
jne
add
in
sbb
sti
xchg
add
xchg
pop
jo
dec
shll
cmp
sub
cmp
lds
pop
insb
test
jl
insb
lds
cmp
subb
jns
and
pop
inc
in
push
pop
sbb
push
xchg
inc
aam
test
aas
mov
push
xlat
mov
outsb
loop
icebp
lock
inc
fwait
mov
mov
xor
add
sub
and
mov
jo
mov
arpl
inc
in
fdivs
sub
stos
or
ret
mov
push
pushf
movsl
test
and
dec
aam
stos
cs
int3
jmp
and
dec
cwtl
mov
orb
lods
xor
sub
inc
test
enter
insl
or
jb
rcr
mov
cltd
scas
and
jb
test
mov
call
test
adc
adc
jmp
fidivs
push
jae
repnz
cltd
add
adc
mov
dec
xor
loop
sbb
and
xor
lahf
fcompl
mov
jns
inc
lock
lods
cmpsb
stos
inc
mov
in
push
cmp
lock
push
leave
add
arpl
jns
filds
xlat
xor
sub
dec
xor
adc
mov
addl
mov
mov
sub
adc
push
ja
cltd
loopne
pop
shrb
lock
icebp
dec
movb
aam
sub
add
or
xor
adc
xchg
ret
div
fnsave
mov
mov
and
pop
enter
inc
push
call
imul
loope
cmp
mov
movsb
xor
push
test
fidivl
shl
xor
or
test
fildll
xchg
fmull
fisubl
push
push
fs
jo
or
sub
cwtl
stos
adc
push
or
dec
pop
pusha
dec
sbb
subb
cltd
mov
push
cmp
inc
insl
mov
adc
pusha
sbb
andl
enter
inc
inc
and
cmpl
add
or
or
xor
ret
and
in
xor
push
xchg
xor
or
push
adc
imul
test
push
cmp
cmp
cld
add
push
cmp
lods
and
sbb
xchg
mov
in
jp
xchg
aam
mov
out
xor
add
jl
push
std
and
add
pop
stos
sbb
std
adc
add
fs
xlat
ds
lret
push
or
push
jb
or
push
add
sub
pop
or
cld
and
movsb
popf
imul
sbb
mov
adc
daa
inc
xor
call
and
and
leave
out
out
sarb
and
fs
fxch
xchg
pop
adc
or
fs
lock
insb
push
ja
or
loopne
out
andl
inc
inc
lods
fldenv
jmp
ficompl
fcomp
insb
pusha
idivl
pop
jnp
negl
push
arpl
insb
fstl
addl
les
data16
sbb
out
inc
push
pop
pop
mov
pusha
cs
mov
mov
repnz
ljmp
add
fistpl
or
jnp
mov
add
jmp
pop
and
shlb
leave
or
adc
insb
dec
mov
out
leave
ljmp
cmpb
or
cmp
jmp
call
sub
adc
cmp
and
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
push
jg
mov
pop
pop
pop
popa
bound
jmp
addr16
insl
outsb
outsl
jo
jb
je
jbe
js
jp
xor
xor
jg
mov
adc
mov
rcll
xchg
adc
push
or
scas
loope
cmp
rclb
cmpl
inc
push
pop
sahf
out
cmp
scas
gs
and
lcall
inc
dec
outsb
je
jb
outsl
arpl
pusha
addr16
fs
out
sbb
push
dec
imul
push
sti
jne
push
gs
xor
cs
sbb
stc
iret
adc
popa
and
popa
je
outsl
outsb
pop
cmp
fs
jno
pop
lock
bsr
lret
push
xor
incl
mov
sti
subb
aaa
outsb
test
ljmp
inc
js
je
jb
gs
cmp
or
outsl
add
jbe
or
add
add
add
je
push
orb
push
je
mov
popa
jb
mov
mov
dec
xor
arpl
push
insl
cmp
cmp
and
jns
add
das
clc
mov
xlat
das
adc
dec
push
inc
inc
gs
mov
bound
daa
dec
outsl
jbe
dec
arpl
cmp
jo
sub
addr16
divl
fdivrs
push
mov
inc
jo
ss
dec
popa
jb
push
inc
out
cmp
mov
into
cmp
xchg
scas
xor
ja
inc
push
jne
xor
mov
daa
push
push
int3
fimuls
sbb
dec
js
jae
fdecstp
push
jne
xchg
pop
dec
push
ds
popa
das
jo
or
push
lds
sub
sbbb
jnp
adc
add
or
or
mov
push
sbb
adc
or
dec
sar
push
and
sub
sub
cs
movsl
cmp
cmp
cmp
cmp
pop
pop
jmp
pusha
cmp
jge
jg
pop
dec
dec
mov
arpl
test
cs
ja
push
insb
and
push
pop
or
adc
pop
sti
mov
inc
insb
jae
xlat
je
and
push
fs
mov
inc
loopne
leave
inc
inc
mov
bound
imul
and
dec
dec
push
push
sbb
inc
sbb
fimuls
inc
and
add
xor
sbb
push
jo
imul
call
pop
mov
je,pn
jo
pop
pop
push
and
push
addl
fs
pop
push
pusha
scas
mov
push
insb
xorb
fidivl
and
daa
mov
jbe
cmp
dec
insl
and
insl
push
or
fistpll
inc
cs
xor
push
adc
sub
mov
jnp
pop
push
mov
lcall
cmp
dec
mov
xchg
and
or
imul
popa
add
or
fs
popf
jmp
and
push
mov
rcr
xorl
cmp
push
or
fidivrl
popf
jb
loopne
outsl
mov
xchg
fcmovu
push
daa
sub
dec
addb
das
arpl
cmp
adc
dec
popa
sub
mov
pop
pop
push
idivb
inc
xchg
insb
imul
xchg
xor
int3
or
add
sbb
push
lcall
ret
insb
popa
pop
xor
add
mull
push
push
mov
sbb
cmpsb
cmp
sbbb
xor
shll
and
cwtl
add
pop
dec
add
add
fisubl
outsl
outsl
sub
and
je
pop
roll
cli
jbe
add
sarb
push
mov
adc
gs
or
lds
pop
mov
inc
jle
outsl
push
outsl
mov
arpl
lcall
bound
cmp
jecxz
mov
ljmp
imul
sub
outsb
popa
pop
or
in
inc
jno
push
aas
into
add
push
push
leave
nop
lds
add
imul
xchg
fnstsw
adc
or
or
and
and
adc
popf
lret
cmp
addr16
jae
xor
pop
pop
popf
push
pusha
jo
sub
test
jo
jb
push
sub
or
aas
lret
inc
sub
pop
dec
jmp
dec
or
jo
and
cmp
mov
mov
imul
inc
inc
cmp
pushf
mov
push
push
dec
cmp
jg
pop
fisubl
pop
loopne
add
cmpb
rol
das
dec
mov
jno
icebp
pusha
inc
mov
clc
ret
movsl
add
or
xorl
push
adc
push
loop
imul
or
gs
popa
dec
add
adc
jg
js
js
mov
jae
je
pop
dec
pop
add
and
ja
sub
sahf
leave
icebp
imul
xchg
adc
int
add
adc
add
add
add
add
imul
pop
pop
or
aaa
ds
push
pop
xlat
in
pop
jns
and
or
pusha
add
js
jbe
data16
pop
sub
add
sbb
cmp
addb
push
xchg
test
int
lods
add
orb
popf
fnstenv
push
and
sub
jb
sbb
in
int3
push
jo
add
dec
jno
mov
stos
outsl
xor
int3
js
jo
dec
rclb
sbb
xchg
pushf
cmp
mov
nop
xchg
xchg
xchg
les
fsubs
inc
pop
adc
mov
sub
pop
pushf
jo
adc
adc
or
and
cmp
or
pushf
dec
pop
mov
pushf
jo
adcb
pop
push
push
cs
ficomps
sub
arpl
cs
and
scas
xchg
inc
sub
dec
add
dec
push
xchg
adc
addl
adc
mov
and
rolb
add
loopne
roll
add
subb
add
mov
add
push
mov
sbb
add
add
inc
sbb
out
aas
sub
add
incl
mov
mov
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
mov
jmp
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
ret
inc
enter
int3
int
iret
rcl
rcl
aam
xlat
fcomp
fcmovu
loopne
loop
jmp
in
out
call
in
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
std
incl
inc
roll
incl
inc
test
dec
mov
xchg
sarl
aam
pusha
lcall
int3
fisubl
outsl
ja
add
cs
jae
jb
bound
dec
icebp
popf
mov
stos
inc
ss
popa
outsl
mov
fimull
jne
daa
outsl
lcall
dec
mov
outsl
js
push
push
inc
push
dec
sbb
dec
and
popf
mov
out
mov
dec
mov
stos
aam
mov
in
dec
imul
pop
jns
inc
mov
imul
into
push
and
inc
jb
jns
daa
scas
inc
mov
mov
gs
cmp
bound
mov
xchg
fs
sub
pusha
les
push
mov
mov
jns
outsl
pop
sbb
push
pusha
inc
jbe
push
jnp
jbe
push
push
lahf
mov
jecxz
jns
and
mov
push
dec
clc
jle
dec
fiaddl
cmp
push
or
rcll
and
cmp
xchg
mov
push
push
jae
cmp
and
pop
pop
cmp
call
movsl
jae
addr16
subl
gs
movsl
push
mov
xchg
mov
inc
or
add
out
push
push
dec
testl
dec
divb
xor
cmp
fildll
dec
jge
loope
mov
jg
imul
call
lds
dec
xchg
sbb
xchg
jg
popa
mov
ret
pop
jl
mov
jg
sub
inc
aad
push
or
cmc
fcomps
das
je
outsl
xchg
daa
negb
ret
daa
popw
pop
cmp
sahf
jl
cmp
cmp
push
das
push
fcmovnbe
cmp
inc
jl
push
jle
jbe
imul
addr16
sub
sub
inc
stc
mov
and
cmp
mov
dec
pop
stos
jb
pop
pop
cwtl
jb
sbb
push
jb
lods
xor
adc
xor
int3
lock
lret
lods
or
add
sbb
and
nop
mov
jo
sub
test
sub
cld
jns
push
add
hlt
push
call
sahf
out
mov
rcrl
add
inc
sti
push
aam
cwtl
divl
push
lods
inc
push
test
sahf
jl
je
es
ja
cmpsl
stc
clc
or
scas
data16
push
fimull
xor
push
adc
jns
sahf
div
push
dec
dec
ds
inc
cmp
jo
ds
je
cmp
jns
repz
mulb
xchg
out
sahf
sbb
adc
add
repz
imul
lods
lahf
idivl
mov
inc
or
repz
cmp
test
pusha
inc
out
cmp
xor
sub
hlt
std
sahf
out
sahf
in
loopne
mov
insb
cmp
out
inc
sbb
cld
aam
loope
iret
repz
sbb
adc
aam
lcallw
shlb
jns
push
xor
data16
add
push
pop
push
sti
lods
cmpsb
bound
fs
sbb
jae
jb
xor
aas
movsl
ficoms
shrd
sub
or
sarb
insb
cmp
inc
inc
dec
xchg
sub
insb
inc
mov
jg
mov
sbb
dec
inc
dec
xor
cld
std
or
dec
push
push
loop
and
inc
dec
add
dec
dec
inc
add
mov
adc
sub
adc
subl
incl
popa
into
mov
mov
adc
dec
sti
inc
loop
mov
ds
pop
push
pop
dec
sahf
jg
lret
sbb
jb
xchg
jge
arpl
cmp
test
adc
dec
scas
jp
adc
fisubrs
or
mov
and
cmp
dec
imul
aas
iret
lret
add
inc
mov
mov
sub
testl
inc
sbb
pop
jns
ds
xor
lcall
dec
xor
dec
popf
pxor
xor
lret
aaa
push
div
inc
sub
mov
jmp
dec
xchg
cmp
cmpsb
das
xchg
pop
and
xchg
lret
clc
lcall
imul
or
cmp
jle
inc
mov
xchg
push
pop
mov
push
push
pop
jge
xchg
dec
xchg
scas
lods
shlb
xor
into
mov
pop
add
mov
and
es
mov
flds
testl
adc
inc
or
outsb
jbe
and
and
add
inc
std
js
loope
mov
imul
add
jg
repz
dec
push
cs
sub
mov
ss
aas
ljmp
incl
sbb
push
and
and
xor
sub
inc
cmp
fbstp
push
sbb
sbb
sub
pop
pop
sub
sbb
xor
dec
sub
jle
fildl
push
jno
jb
jbe
cmp
aas
cmp
or
xchg
add
pop
ss
dec
sbb
inc
pop
adc
sbb
sub
sub
sbb
pop
es
mov
and
adc
and
lods
or
xor
idivb
ljmp
or
push
ss
cmp
dec
lock
sbb
inc
pop
or
sub
xor
jg
std
incl
pop
push
pop
pop
add
push
adc
push
push
ss
or
pop
sub
mov
sub
sub
inc
and
pop
dec
inc
cmp
sbb
out
or
aas
cmp
cld
dec
xor
or
sub
je
lea
adc
pop
aas
push
sub
cmp
ret
sti
and
pop
pop
push
cmp
sbb
inc
insb
jns
mov
cmp
das
sbb
xor
and
cmp
btrl
dec
push
pop
push
int3
push
sub
push
movsl
lods
mov
jle
xor
xor
or
or
or
sub
dec
cmp
adc
test
xchg
pusha
jb
mov
sbb
and
gs
icebp
jb
xchg
pop
and
dec
adc
sbb
sub
pop
mov
inc
push
and
daa
clc
push
inc
pop
push
pop
dec
mov
negb
ja
adc
xchg
mov
pop
xor
pop
das
jnp
jg
dec
inc
pop
adc
dec
nop
dec
cwtl
in
push
cmp
mov
jne
jns
xchg
xchg
jns
out
xchg
dec
ds
cmpsl
ret
sahf
out
lret
outsl
lahf
out
fnstsw
push
decl
xor
out
cmc
loope
push
sbb
and
dec
push
sub
pop
shl
sbb
push
stos
push
clc
data16
scas
adc
sbb
cmp
outsl
insl
mov
pop
and
outsb
insb
test
fistl
inc
xchg
pop
sbb
sub
mov
push
xor
pavgb
or
cmp
ds
dec
push
js
out
cmp
lahf
mov
sahf
out
sahf
inc
push
pop
jb
lods
jns
out
fbld
xor
repz
sub
push
cmp
add
xor
les
lcall
cmp
inc
lahf
cs
sub
aas
adc
add
sbb
xor
sbb
divb
jbe
jl
pop
dec
aad
fucomip
or
push
cmp
push
xor
pop
jne
scas
out
sahf
adc
push
xchg
or
push
fadds
push
int
jmp
push
sbb
xor
xchg
pop
sbb
pop
and
insb
push
cs
and
push
cmp
push
iret
lods
mov
sub
sub
sub
xor
nopl
inc
sbb
mov
or
adc
mov
mov
popa
in
sbb
push
ja
lcall
ss
and
in
xor
out
dec
aas
pop
inc
jmp
roll
pop
sub
mov
andl
sahf
jge
fs
jo
pusha
xor
hlt
outsb
scas
xor
popa
dec
dec
pop
pusha
sub
in
inc
cmp
daa
add
cwtl
pop
pop
popa
mov
xchg
cltd
fucom
jo
dec
or
xor
sub
mov
add
add
lcall
loopne
pop
sarl
daa
xor
addl
adc
jne
inc
and
mov
push
xor
pop
sbb
adc
out
jo
pushf
es
cmp
xlat
outsb
mov
mov
fistps
sub
add
or
enter
adc
push
imul
enter
mov
xor
push
div
fldt
add
cmp
sbb
xor
push
or
or
rorb
pusha
js
push
clc
and
or
cwtl
and
pusha
pop
arpl
testl
in
adc
and
outsl
jle
push
lret
popa
push
adc
aaa
daa
sub
cmc
push
pop
xor
jle
add
cmp
divb
jo
into
xor
pop
sbb
or
push
mov
inc
mov
and
mov
xor
hlt
push
xor
xor
andl
loop
ret
fisubrl
pop
pop
mov
cmp
mov
aas
or
aaa
or
out
and
cmp
pop
jle
in
dec
pop
cmpl
outsb
push
mov
adc
push
aas
cmp
loopne
jmp
and
rcl
pop
int
cs
movsl
jmp
mov
adc
fiadds
inc
mov
inc
into
call
out
bound
shlb
dec
adc
pop
stos
sub
pop
push
push
and
add
cmp
pop
test
or
add
jae
dec
dec
xor
repnz
and
pop
ja
cmp
sub
or
push
daa
inc
pop
xchg
imul
adc
clc
aas
push
insb
pop
jg
xor
push
adc
push
sbb
push
adc
or
adc
pop
and
loopne
cmp
or
jg
pop
ss
mov
and
jns
insb
js
sub
and
je
sahf
repz
or
int3
add
inc
test
jae
insl
popa
imul
fistpl
push
pop
outsl
jo
push
clc
in
pop
outsb
data16
push
ja
pop
out
and
adc
push
inc
sahf
out
sahf
push
inc
cmp
push
xor
insl
idivl
mov
sub
fsubrp
imul
sahf
jns
das
add
filds
sub
arpl
pop
je
sub
enter
int3
pop
sub
sbb
push
loopne
mov
mov
add
mov
aas
sub
pop
pop
push
and
pushf
jns
fists
pop
dec
sbb
dec
add
cmp
add
mov
inc
fs
add
mov
sub
loopne,pt
mov
mov
pop
dec
jmp
sub
jge
jbe
dec
fucomip
push
pop
cmp
or
rorb
ret
or
pop
push
inc
xorl
jbe
mov
daa
xor
stos
mov
lea
sarb
aaa
pop
ret
outsb
aaa
push
sub
lods
or
add
sub
or
out
mov
push
push
es
dec
mov
pop
push
aaa
es
out
scas
fwait
or
es
pop
mov
jbe
or
sti
add
push
mov
clc
mov
gs
mov
push
jo
push
cmp
mov
dec
push
push
push
das
xor
xor
adc
pop
fmull
outsb
and
js
stc
pop
sbb
add
fisubrs
adc
js
inc
addr16
or
push
dec
sub
mov
cmp
xor
je
add
adc
rol
jge
arpl
es
data16
inc
add
adc
fdiv
push
xor
lods
aad
int
outsl
sub
xchg
jbe
mov
and
pop
inc
add
xor
ret
pop
pop
cmp
push
adc
add
pop
mov
mov
ss
inc
dec
dec
pop
dec
das
icebp
inc
or
add
pop
sbb
mov
mov
test
dec
push
and
dec
cmp
mov
xchg
adc
or
xchg
jle
adc
push
mov
int3
cmp
jle
dec
js
mov
pop
or
mov
pop
popl
sub
insb
lock
or
fmuls
loop
into
leave
and
ret
daa
and
or
xchg
enter
sub
fcomps
inc
dec
mov
add
negl
and
repz
adc
es
repnz
push
inc
add
push
out
inc
mov
pop
loop
sub
or
xchg
push
pop
mov
push
mov
push
pop
add
cmc
xor
pop
loope
in
push
pop
sub
add
lods
add
push
inc
test
in
push
push
inc
out
mov
pop
das
jge
jge
in
es
and
xor
xor
xchg
lret
es
add
dec
daa
int3
jle
sub
inc
push
pop
sbb
xor
push
push
and
ljmp
scas
push
loopne
out
pop
adc
mov
sub
int3
pop
mov
test
fstpt
stc
mov
push
aaa
lahf
loopne
cmpsl
fnstcw
inc
loop
push
in
jo
loopne
leave
in
push
jmp
pop
test
push
das
sub
ljmp
push
in
push
jo
adc
pusha
pop
jo
mov
orb
and
call
mov
dec
pop
insl
jo
inc
or
add
cmpb
daa
pusha
movsb
aas
dec
cwtl
pop
or
pop
dec
outsb
cmp
bound
mov
orb
fwait
dec
dec
sbb
cmp
adc
cmpsl
fnstcw
comiss
inc
or
sbb
jp
sbb
pusha
cmp
pop
dec
sub
popa
and
add
jno
pop
xchg
icebp
addl
aaa
adc
lods
sbb
cltd
imul
cmp
test
xchg
cmp
clc
aaa
jmp
pop
clc
ficomps
cmpsl
mov
ja
ljmp
in
movsl
mov
pushf
or
and
dec
in
add
aaa
pop
in
lea
dec
sub
mov
push
xor
sub
stos
xchg
lea
push
cltd
sbbl
dec
and
pop
pop
arpl
cmp
add
je
sub
pop
lods
int
sbbl
push
xor
jns
and
mov
inc
lods
aas
sub
xor
push
adcb
out
cmp
daa
xor
andb
cmpsb
sbb
insb
enter
cmp
ret
dec
mov
add
or
movsl
incb
pop
jmp
push
xchg
inc
mov
lcall
pushl
sub
add
inc
pop
sub
adc
pop
add
xor
sbb
mov
inc
xor
pop
dec
inc
pop
add
xor
or
inc
xor
sbb
pop
adc
fs
pusha
push
fs
push
push
adc
jg
shll
jae
sbb
sti
adc
and
cltd
and
or
push
adc
push
add
inc
decl
adc
add
imul
pop
cmpsl
hlt
mov
insb
mov
pop
dec
cwtl
xchg
int3
sbb
xor
pop
sbb
mov
xor
pop
popa
push
test
das
cmp
js
add
cmp
and
mov
sub
imull
sbb
push
pop
or
push
adcb
adc
xchg
jg
push
push
add
mov
enter
pop
aas
cmp
dec
sub
mov
pusha
and
jnp
push
pusha
les
add
cmpb
out
push
pop
xor
movsb
andb
or
and
mov
imul
pop
lss
pop
aad
adc
sub
add
add
cmp
add
dec
cmp
mov
pusha
out
inc
cmp
and
xchg
mov
and
pop
and
cmpb
in
pop
dec
idivb
cltd
adc
mov
add
outsb
fildl
js
xor
fnsave
cmp
sbb
in
fcmovnu
and
fidivs
xor
sbb
insb
mov
pop
xor
mov
adcl
cmp
or
and
jns
out
shll
sbb
and
insl
mov
lods
inc
add
fisubrl
insb
cmp
sahf
cmc
addr16
jno
insl
and
lea
das
int3
push
insl
dec
pop
aam
mov
xor
lcall
inc
cmpsb
adc
adc
mov
pop
ja
cmpsl
push
inc
cmp
adc
push
xor
out
push
popw
push
add
fidivs
or
sbb
aas
dec
adc
das
mov
jnp
inc
lea
aas
pop
loop
or
cmpsl
push
shlb
push
daa
jne
or
pop
daa
or
imul
and
scas
xchg
es
adc
mov
daa
adc
dec
dec
sbb
mov
add
das
dec
dec
pop
dec
lret
add
jae
ss
mov
dec
rcrb
push
push
adc
lahf
in
adc
xlat
push
push
je
in
and
adc
pop
add
push
push
push
cmpsl
add
push
insl
stos
pop
add
jbe
adc
sub
add
call
push
clc
es
outsl
jo
mul
pop
cmc
insb
gs
ja
fs
imul
pop
lcall
rolb
mov
movl
scas
movsb
cmp
xchg
dec
mov
push
push
in
push
cmp
push
or
fisubs
jbe
mov
pop
push
adc
repz
cwtl
mov
fnsave
pop
aaa
popa
xchg
fs
bound
add
jbe
push
dec
pop
lds
pop
add
adc
mov
dec
push
dec
dec
test
getsec
cmp
and
mov
mov
aaa
sbb
dec
call
ljmp
mov
ja
mov
lods
pop
dec
movsl
enter
push
mov
idiv
push
mov
inc
push
insl
ss
adc
cli
mov
sub
sub
jmp
cmp
mov
sbb
mov
ds
pop
repnz
pop
sbb
xor
mov
mov
fsubs
sbb
mov
dec
xchg
jecxz
dec
push
or
loopne
pop
jb
pop
pop
ret
push
popf
push
xor
out
sub
aam
xchg
pop
fwait
loope
movsl
les
mov
and
rolb
pop
push
jl
jb
mov
imul
outsl
push
leave
leave
sti
mov
imul
out
mov
sub
xchg
xchg
sub
inc
mov
cmp
xor
and
dec
sahf
xchg
out
cmp
hlt
and
mov
pop
aam
lock
je
inc
js
int
jp
cmp
xchg
push
dec
push
dec
pop
dec
call
dec
rcrb
pop
push
push
dec
sti
dec
or
cmp
xor
sub
sub
lds
sub
xor
inc
pop
xor
inc
xchg
add
jne
cmp
cmc
jnp
insb
push
outsb
add
pop
add
in
js
xchg
xchg
cwtl
adc
mov
dec
jp
jo
inc
rcr
push
jb
jo
mov
bound
je
bound
mov
pop
and
push
aaa
mov
addl
sub
addr16
add
inc
ja
inc
sub
bound
or
test
das
and
push
adc
out
add
out
xor
lock
subl
popf
xorl
in
insl
xor
iret
lret
daa
inc
xor
shl
push
xchg
nop
outsb
js
sarb
and
inc
push
pop
aas
ja
add
orb
add
add
push
pop
es
arpl
out
cmp
neg
lcall
sbb
xor
lret
pop
es
xor
int3
mov
mov
adc
hlt
adc
pop
or
js
dec
aas
in
das
mov
sbb
sub
add
sub
inc
je
test
fwait
add
shlb
aaa
fstpt
lods
mov
fadds
test
out
imul
lds
insb
sbb
ss
sahf
testb
faddl
push
sbb
lahf
aaa
in
repz
mov
xchg
dec
int3
xlat
mov
mulb
xor
and
pop
pushf
ds
int3
repz
imul
cs
jp
cmp
pop
leave
xlat
add
jle,pn
loopne
lcall
sysret
mov
lahf
jp
bound
jp
aaa
mov
call
mov
in
add
cmpsl
and
pusha
dec
mov
jge
mov
rcll
add
rcr
insb
fistpll
push
xchg
cmpsb
clc
push
mov
fidivrs
sbb
into
in
mov
xchg
push
cmpsl
mov
xchg
or
cmp
push
jae
rcrb
fdivrs
mov
lahf
retw
sbbb
sahf
aaa
sti
enter
dec
inc
nop
push
sarl
mov
push
add
sahf
out
cltd
push
orb
lcall
push
mov
out
add
repz
xchg
push
test
insb
sahf
sbb
pop
fistpll
dec
out
pushf
xlat
xchg
push
xchg
hlt
jns
sarl
adc
ss
fnstcw
out
mov
xor
xchg
cs
idivb
xchg
jbe
xchg
mov
jns
cmpsb
pop
popf
pop
or
inc
inc
es
jl
xchg
mov
repz
jge
ds
repz
mov
cmp
dec
repz
jle
test
mov
push
lcall
repz
push
nop
ret
flds
xchg
jns
out
xor
xchg
mov
xor
out
cli
and
lcall
xchg
sub
inc
test
stc
cmp
adc
pop
test
pop
and
jg
dec
sbb
scas
sub
test
sub
adc
stc
add
adc
lcall
push
push
mov
xor
adc
mov
mov
mov
scas
int
mov
pop
in
bound
loop
and
push
pop
mov
inc
pop
mov
jmp
and
adc
push
and
pop
incl
mov
ds
adc
or
or
repz
adc
daa
or
jl
add
add
adc
cmp
inc
imul
bound
inc
xchg
addr16
dec
push
push
jae
popa
sub
aas
inc
push
cli
add
pop
pop
daa
inc
sbb
or
aaa
push
pop
nop
mov
pop
cmp
jae
jecxz
out
dec
fisubl
push
subb
fdivrp
mov
cmp
jbe
pop
mov
je,pn
push
ljmp
cmpsb
dec
add
aaa
aam
xorps
push
insb
pop
adc
cs
push
dec
pop
je
jnp
jo
jns
push
fisttps
jp
das
inc
ficoms
inc
push
ret
rcrb
outsb
pop
jbe
iret
test
retw
xlat
or
jae
dec
mov
stos
add
test
les
into
mov
push
jl
add
dec
mov
int3
out
sbb
ds
cmp
das
adc
das
xchg
in
into
jp
insl
jo
xchg
pop
insb
je
push
addr16
jo
jae
es
outsl
and
aas
mov
cmp
adc
and
cmpsb
ljmp
or
cmp
mov
add
xor
cmp
cmp
push
xor
xor
cmp
push
add
xor
pop
add
xlat
notb
out
dec
inc
or
push
out
jno
add
add
or
mov
adcl
adc
sub
daa
push
sub
movb
add
adcl
cmp
sbb
and
inc
or
xor
lock
daa
pushf
mov
add
fstpl
add
sub
push
adc
adc
shlb
adc
cld
add
adc
inc
jmp
add
sbb
cmp
and
xor
data16
insl
popf
repnz
test
xchg
cmp
mov
sbb
push
je
push
aaa
xor
mov
loopne
push
adc
dec
xorl
jbe
jecxz
nop
ja
sbb
mov
sbb
push
cs
iret
dec
testl
or
adc
push
bound
lea
xchg
sbb
sub
pop
or
pop
sub
push
daa
or
mov
mov
daa
test
fs
mov
or
test
nop
dec
or
lods
jno
adc
add
dec
cmp
arpl
cmp
jo
fstp
repz
pop
aaa
test
addr16
insl
pop
xchg
and
push
sbb
lods
inc
sbb
lock
inc
sbb
addr16
cmpsl
lock
mov
fimull
mov
das
das
mov
inc
mov
aaa
iret
sub
or
inc
pop
mov
pop
ret
pop
test
daa
or
das
popa
pusha
mov
mov
pop
xchg
das
dec
mov
mov
xor
into
icebp
add
or
pop
sub
mov
ja
dec
inc
cmp
add
inc
push
lods
lods
loopne
mov
scas
pop
rcr
pop
cltd
daa
lahf
pop
mov
outsb
mov
ss
pop
push
add
faddp
pop
jg
movsb
pop
push
test
stos
fdivs
and
mov
or
xor
aaa
add
pop
cmp
or
adc
xor
js
mov
jl,pn
mov
ja
xchg
adc
cmc
jg
mov
mov
fwait
xor
or
js
xor
popf
adc
sub
outsb
cmpsl
cmpb
aas
sub
add
popa
sbb
data16
in
xor
sub
inc
cmp
dec
movsl
sbb
jae
and
sub
das
das
lahf
imul
sbb
inc
sub
data16
push
xor
mov
sahf
mov
mov
push
sub
rorl
es
rcr
or
jo
out
jge
xor
push
repz
cwtl
mov
fadds
and
jg
pop
pop
and
adc
mov
or
xchg
jb
andl
adc
inc
mov
ret
js
sub
or
adcb
mov
fcmovnbe
inc
or
sbb
push
loope
pop
adc
xchg
clc
sbb
inc
push
andl
jnp
pop
sbb
and
jg
sbbb
popa
pushf
pop
push
pop
gs
xchg
push
and
add
adc
xchg
out
push
cmp
xor
test
popf
fwait
das
pusha
adc
test
add
cs
mov
popa
cwtl
sub
repnz
test
push
pop
adc
push
ret
lods
ljmp
push
adc
push
and
cltd
frstor
pop
int3
orl
add
rcrl
repnz
adc
xchg
fidivrl
in
sub
adc
ljmp
adc
xchg
insb
xor
xchg
adc
adc
push
mov
adc
je
xor
test
sub
xchg
ja
pop
fistpll
rclb
andb
xor
or
es
shlb
jbe
add
hlt
adc
or
or
fsubrs
xor
shll
mov
and
test
cltd
push
push
sbb
inc
sets
push
jo
mov
and
js
les
out
and
stc
add
dec
mov
cs
jno
cmp
pop
ja
adc
call
inc
mull
outsl
idivl
cmpsb
in
xor
call
pop
incl
push
pop
jecxz
pusha
pop
or
xchg
mov
sarb
pop
and
ret
enter
mov
adc
out
and
sahf
out
inc
adc
pop
sbb
sahf
out
inc
push
addr16
jl
mov
cltd
or
xchg
add
pop
push
add
or
adc
insb
das
adc
sbb
and
sub
xor
data16
inc
mov
mov
mov
mov
popa
xchg
sbb
fldcw
sub
add
or
adc
adc
pop
add
fstps
adc
push
push
dec
psubusw
add
add
inc
inc
and
das
incl
pop
add
jg
cld
push
arpl
push
pop
pop
cs
and
enter
fisubs
sbb
add
loopne
scas
xor
push
sub
inc
cmp
push
sbb
jo
dec
and
ret
in
hlt
inc
jmp
fs
xor
xor
jo
or
add
sbb
inc
repnz
add
pop
dec
lock
mov
pop
push
pop
cltd
add
or
xor
push
pop
pop
add
test
daa
and
pop
adc
and
push
pusha
inc
pop
pop
xor
incl
pop
or
or
push
add
cmp
add
or
cmp
or
sbb
pop
push
cmp
sbb
dec
push
pop
xor
add
add
dec
adc
and
in
decl
mov
or
xor
push
or
and
fwait
in
jmp
daa
sub
cs
or
adc
pop
and
cmp
or
sbb
jmp
sbb
and
sbb
cmp
and
push
sbb
xor
push
daa
cmp
daa
pop
pop
hlt
incl
push
sub
add
dec
mov
les
and
ret
cmp
xor
or
lahf
add
cmp
add
cwtl
pusha
cmpsl
cs
mov
xor
dec
dec
es
xor
pusha
and
xor
dec
mov
movsl
dec
in
rolb
test
cmp
out
push
xor
xor
or
imul
pop
leave
mov
jle
push
push
dec
int
outsl
inc
dec
add
aas
mov
das
adcl
inc
adc
das
mov
mov
es
lret
add
sbb
addb
jb
sub
push
push
icebp
loope
or
jno
mov
fimuls
dec
mov
add
and
bound
ljmp
mov
inc
aaa
jno
sti
shlb
ret
icebp
adc
pop
movsb
cmpb
aad
sbb
cwtl
incl
add
adc
or
je
mov
andb
pushl
rol
fwait
in
inc
mov
bswap
mov
jmp
dec
fsubrl
fimull
ds
insl
xor
jg
mov
inc
xchg
cmpsl
aad
arpl
push
jmp
sub
and
cs
insl
sub
adc
or
or
cs
ret
incl
call
sbb
mov
call
cltd
test
pushl
push
push
shll
ja
daa
mov
mov
movsb
sbb
cmc
lcall
dec
lret
rep
cs
arpl
dec
test
add
mov
mov
movsb
mull
jno
addr16
push
scas
addr16
ljmp
cmp
dec
movsl
jg
push
push
mov
fwait
stos
flds
pop
pop
xor
pop
popl
cmp
jl
dec
aaa
inc
decl
imul
ds
outsb
push
dec
ja
jo
dec
pop
xor
gs
xor
data16
incl
imul
popa
sub
inc
sub
push
dec
and
sub
cmp
jmp
or
and
and
fs
or
icebp
push
xor
push
adc
test
ljmp
dec
dec
and
pop
push
add
adc
std
inc
popa
sub
xchg
xor
adc
ja
lea
aaa
fstpl
daa
pop
daa
and
and
dec
xchg
and
dec
add
inc
loope
std
ss
and
dec
mov
xor
inc
add
xor
xor
fstpt
pop
sub
push
cmovbe
xor
loope
pop
inc
inc
dec
and
aaa
inc
push
inc
scas
flds
xchg
pop
push
cmc
mov
inc
add
pop
cmpsl
ss
or
xchg
dec
clc
dec
das
or
fxch
sbb
fiadds
add
or
and
sub
mov
add
sbb
push
xor
inc
mov
and
bound
scas
iret
cmp
xor
in
jno
push
fcmovnu
or
call
lcall
pop
and
int3
les
into
push
outsl
dec
mov
adc
mov
push
adc
dec
sbb
push
sbb
adc
push
addl
stos
in
sub
sbb
xorb
fldcw
loopne
aad
sbb
cmp
sbb
mov
xchg
push
cmpsl
push
mov
loope
mov
ret
or
aaa
adc
sbb
mov
adc
sahf
sbb
hlt
push
sbb
stos
fdivs
movb
loop
xorl
out
in
adc
gs
add
sbbb
pop
and
or
sbbb
push
jmp
popa
andb
mov
sahf
lret
shrl
or
fistpll
sub
sbbb
lds
jns
andb
mov
add
and
shll
jecxz
push
or
push
pop
leave
adc
and
in
scas
cmp
adc
mov
add
lods
xor
sbb
and
mov
push
outsl
pop
sahf
cmp
in
enter
mov
lds
cmpsb
pop
adc
adc
pop
and
or
lods
or
ja
aaa
outsb
outsb
je
xor
js
cmp
int
xor
jae
popa
insl
gs
ret
cmp
xor
sarl
test
or
and
inc
mov
scas
imul
fdivs
insl
loop
push
push
sbb
push
icebp
out
es
adc
adc
jp
popa
je
xchg
icebp
push
rolb
or
push
xor
push
ss
adc
negb
add
out
push
gs
insl
in
push
and
dec
add
sub
dec
rclb
add
cmp
push
push
aas
pop
adc
add
cli
xor
ror
push
les
pop
std
pop
pop
and
adc
outsb
fistpll
jmp
push
out
and
mov
add
add
and
fmull
je
xchg
push
es
add
es
xchg
mov
inc
sbb
xorl
hlt
movl
out
inc
pop
or
mov
sti
mov
xlat
bound
das
sub
mov
mov
pop
and
fdivs
fs
dec
popa
dec
hlt
or
push
push
ja
jb
pop
clc
punpckldq
and
pop
inc
jne
and
test
outsb
jno,pn
sbb
fldt
aaa
pop
cs
lods
push
or
test
inc
in
jl
pop
push
push
test
daa
mov
pop
adc
mov
push
sub
xchg
pop
pop
das
enter
add
and
push
or
imul
or
jne
sbb
or
push
xchg
call
pop
add
pmulhw
icebp
sub
inc
cmp
decl
shld
push
cmp
sbb
ds
pop
aam
or
pop
xor
test
loop
aas
outsb
lea
andl
add
movb
lea
sub
or
pop
out
int3
pop
inc
data16
and
push
lret
adc
add
inc
outsl
sbb
bound
dec
movsl
xor
ja
movsb
mov
sub
stos
dec
mov
mov
daa
imul
xchg
aas
mov
and
pop
scas
mov
or
mov
pop
pop
adc
rcr
aas
mov
jle
pop
dec
outsl
jae
mov
movsl
repz
pop
add
insl
repz
pop
adc
insb
mov
aad
sub
cmp
icebp
popa
daa
fdivl
xchg
iret
mov
xor
maxps
push
push
lods
mov
dec
xor
cmp
jle
inc
imul
sub
sub
inc
dec
fildl
and
or
inc
and
inc
int3
push
or
add
cmp
mov
mov
adc
pop
pop
aaa
jo
fldcw
or
stos
push
push
sbb
add
jb
pop
push
add
and
xor
fnsave
push
popa
shrb
cmp
jae
add
je
push
punpckhwd
call
dec
outsb
push
je
scas
dec
rorb
popf
add
push
inc
dec
push
inc
pop
push
dec
inc
in
xor
fmuls
jb
gs
mov
mov
js
cmovae
add
pop
daa
jne
addl
mov
shll
mov
popa
cmp
mov
rclb
push
jb
add
and
out
loop
or
sub
add
and
push
clc
jge
idiv
or
pop
xorl
jns
jb
jnp
dec
xchg
adc
push
scas
test
les
add
inc
jae
or
sub
ljmp
inc
call
pop
xor
aas
sub
or
inc
imul
add
nop
sub
add
imul
jne
inc
xor
mov
push
ret
dec
inc
pop
loopne
xchg
inc
and
add
inc
mov
and
pop
pop
jne
inc
sub
inc
xor
pop
lds
adc
fisttpl
pop
dec
sub
pop
pusha
aad
pop
mov
or
mov
dec
insl
or
stos
mov
enter
aas
insb
push
xor
test
and
outsl
or
mov
sbb
sbbl
inc
sbb
or
dec
shll
cmp
inc
jnp
push
push
xlat
shlb
xchg
outsl
or
mov
insb
imul
jo
scas
and
mov
xchg
bound
loopne
bound
inc
das
int3
insb
dec
add
dec
adc
inc
xadd
sbb
mov
iret
mov
inc
pop
push
adc
scas
lock
mov
mov
cmp
mov
jo
jo
pop
inc
dec
add
mov
insl
inc
add
push
sbb
int
add
push
inc
sbb
push
in
daa
aas
add
jge
mov
test
addr16
movsb
sbb
in
mov
push
push
cmp
push
das
sarl
outsl
ror
pop
mov
jo
ja
lahf
add
push
daa
mov
out
ror
out
mov
daa
outsl
mov
cmp
or
adc
mov
addr16
sub
sbb
xchg
sub
mov
xor
mov
sbb
mov
sub
pusha
sahf
push
lock
push
dec
repz
aam
je
gs
rcrb
pop
enter
dec
repz
pusha
pop
inc
sub
fisubs
sbbb
mov
ds
pop
pop
push
cmpb
sub
hlt
pop
fdivr
pop
sub
iret
shl
les
jns
int
sbb
push
sub
and
es
and
out
dec
inc
aas
or
and
fnsetpm(287
imul
pop
iret
jae
int
sbb
pop
xor
mov
and
sub
cmp
inc
or
push
push
outsl
pop
leave
mov
add
push
cmp
insb
jg
jg
adc
and
xor
sbb
xchg
dec
repnz
push
mov
fs
dec
inc
clc
sbb
add
dec
pop
das
pop
push
fs
lods
fs
or
add
repnz
xchg
inc
adc
inc
leave
jae
pop
mov
push
outsl
fistpll
sub
cmp
and
pop
dec
pop
xchg
subl
pushf
pop
pop
scas
adc
rorl
out
vpmacsww
xor
cmp
dec
pop
mov
sub
enter
push
fs
sub
pop
adc
sbb
ret
push
sbb
add
dec
xchg
xor
out
xchg
xor
and
rcr
and
scas
scas
sub
les
sub
xor
sbb
jns
and
rcrb
fs
sub
pop
sub
aaa
mov
and
js
lahf
pop
sub
xchg
mov
rorl
pop
jg
add
adc
ret
dec
xchg
jg
xchg
insb
in
or
pop
sbb
out
jns
pop
je
push
test
sbb
jb
xchg
and
outsl
and
or
add
pop
cwtl
sbb
and
push
lock
and
andl
push
xor
outsl
out
sarb
pop
or
nop
cmpsl
add
cmp
roll
xchg
addr16
pop
in
or
mov
pusha
pop
sbb
and
sub
mov
add
jecxz
mov
subb
lahf
mov
out
dec
mov
mov
jg
shll
push
mov
in
mov
pop
leave
xor
sbb
cmpsb
scas
in
add
inc
jbe
pop
cmp
daa
cmp
dec
popa
testl
sbb
pop
insb
mov
push
outsl
add
pop
and
ja
int3
inc
jle
popa
cs
popf
cmp
int
data16
scas
loopne
rcl
cmpsl
push
les
cwtl
shll
mov
add
stos
adc
pop
xchg
bound
pusha
daa
movsb
bound
pop
or
inc
mov
int
out
add
xlat
or
lahf
push
andb
arpl
fs
adcb
lahf
pushf
and
push
arpl
je
mov
testl
and
ss
scas
pop
add
scas
and
out
inc
dec
sbb
mov
cmp
dec
xchg
shrl
aaa
push
xchg
or
aaa
movsb
sub
add
add
in
lock
add
adc
mov
imulb
jg
outsb
leave
xchg
cmp
insb
mov
jl
and
test
scas
or
inc
add
cs
fsubr
hlt
sbb
pop
and
jmp
jge
and
fs
sub
outsl
sub
jb
shlb
lds
or
pop
cmpsb
mov
pop
mov
ss
aam
dec
and
adc
add
ss
adcb
dec
scas
dec
cmpsl
add
xchg
popa
imul
xlat
add
andb
iret
out
in
or
mov
add
loope
push
setbe
pop
insb
sahf
cmpsl
jge
and
sbb
imul
into
sarl
nop
je
sub
cmp
or
sub
adc
push
mov
or
cmp
das
lods
push
pop
leave
mov
outsl
add
or
dec
das
push
sub
push
cmp
in
movsl
testl
lock
add
orl
push
scas
in
inc
mov
add
push
rorl
test
and
add
dec
push
inc
xchg
add
and
addr16
push
sbb
ret
out
jb
test
push
jl
cld
push
cmp
outsb
or
and
and
xlat
xor
push
repnz
test
xlat
sar
mov
daa
xor
or
xor
push
loopne
enter
insb
inc
or
shlb
mov
shrb
rcr
outsb
in
addb
mov
insb
outsl
lahf
dec
outsb
cwtl
lods
pop
add
xor
insl
mov
and
xlat
push
orl
filds
pop
mov
cwtl
pop
int
sahf
test
aas
sbb
sbb
addr16
subb
pop
out
ja
sub
fisttpl
push
sarb
or
sbb
push
xchg
jns
lcall
pop
xchg
sarl
mov
push
iret
repz
jae
mov
repnz
lahf
out
lcall
jge
iret
repz
push
subl
jle,pt
aam
jg
imul
repnz
sahf
out
test
cmp
adc
cs
out
lcall
test
iret
repz
xchg
in
test
out
aaa
jb
shl
repz
repz
out
sahf
out
xchg
mov
out
cmp
adc
mov
sarl
jp
mov
out
jnp,pt
or
pop
loop
lea
mov
popl
jns
iret
fildl
nop
push
dec
cltd
jl
ja
rcll
push
popf
enter
lcall
mov
iret
shll
mov
xor
jae
loop
xchg
insb
ds
mov
pop
push
pushf
aad
cwtl
ds
imul
lcall
push
fwait
mov
jl
cmpsl
stc
xor
jl
out
mov
sahf
fwait
repz
lahf
insb
ds
sarl
imul
stc
cmp
shll
in
mov
pop
jg
jmp
mov
mull
movsb
sbbb
bound
ds
mov
cmpsb
scas
push
mov
stc
cmpsl
in
xor
ja
jl
cmpsl
stc
or
add
cmp
sarb
stos
push
repz
out
in
shrd
jl
out
lods
icebp
sub
xchg
jns
iret
roll
scas
xor
int
mov
xchg
out
mov
stc
xor
aam
mov
mov
cmpsl
stc
xor
stc
dec
mov
xor
int
mov
mov
repz
fsubrl
mov
pop
mov
cmc
cmpsl
stc
cmp
cmp
jnp
or
inc
iret
sarl
loop
ret
push
jns
les
test
out
repz
jecxz
push
movsb
repz
iret
adc
and
lcall
into
sbb
iret
stc
rclb
data16
sarl
rcl
mov
sub
aad
fmul
lahf
orl
add
push
test
rorb
packuswb
cs
out
scas
push
add
mov
ja
fimull
jb
inc
bswap
jae
dec
dec
daa
push
ja
xor
daa
pop
orl
aam
pop
sub
orb
push
aas
in
dec
enter
cmp
es
jno
lcall
mull
shlb
test
int
jl
test
lahf
cwtl
mov
mov
xor
daa
pop
shlb
enter
loop
pop
enter
mov
dec
ss
inc
add
jmp
inc
adc
mov
scas
rorl
mov
xchg
mov
mov
scas
fmuls
jecxz
jns
mov
dec
repz
fdivrs
mov
adc
cmpsb
pop
mov
mov
rorl
sarb
loopne
and
out
jmp
jmp
rcr
or
out
cs
ss
out
aas
or
das
cltd
mov
test
aas
push
enter
jo
and
xchg
iret
push
std
jmp
lods
or
mov
xchg
jb
stos
xlat
mov
jnp
dec
cmp
das
pop
mov
mov
fnsave
pushf
push
daa
lods
push
ja
mov
inc
and
fistpl
mov
lcall
push
rdpmc
add
enter
lahf
pop
ja
ja
hlt
xchg
pushf
mov
pop
jns
adc
adc
sarb
enter
outsl
inc
and
and
call
sub
aas
inc
rorl
push
jg
cmp
into
push
pop
lcall
pusha
inc
popa
aas
shlb
and
and
movl
aaa
int3
js
pop
pushf
sbb
in
bound
sbb
add
call
add
push
inc
cmove
jne
dec
inc
jns
in
dec
xor
push
jns
outsb
scas
xchg
imull
or
out
jb
xchg
jl
push
sub
int3
stc
jnp
pop
jbe
dec
jl
aas
or
cmp
and
xor
into
repz
push
add
dec
in
and
xchg
imul
xchg
mov
push
mov
leave
inc
or
jg
jbe
test
push
cld
jp
jp
jnp
scas
leave
and
and
aad
push
jnp
add
cmp
ljmp
jnp
or
jl
push
inc
outsl
mov
or
add
call
lods
xchg
xchg
jnp
mov
pop
pop
outsl
inc
xchg
dec
jl
nop
and
jl
pushf
sbb
dec
lret
mov
adc
sbb
adc
in
clc
call
sub
test
into
hlt
add
pusha
scas
jl
mov
inc
les
add
sahf
out
sahf
add
add
lock
jge
xchg
adc
cmpsb
jge
or
in
je
jle
push
xchg
add
inc
pop
inc
dec
cs
je
test
in
mov
add
adc
mov
lock
in
and
mov
and
leave
xchg
jge
jge
jg
inc
dec
jno
jle
adc
jle
iret
in
enter
jle
jle
push
pusha
pushf
pushf
pop
and
popa
imul
pushf
pop
and
lods
mov
pushf
pushf
pushf
mov
ja
xchg
sub
mull
lcall
pop
jg
movq
in
and
mov
pop
inc
push
loop
and
add
cmp
cmpb
jg
xchg
cmp
xchg
out
add
lcall
inc
je
leave
mov
push
mov
loopne
addb
or
inc
int3
mov
repnz
insb
xor
push
push
jmp
inc
xor
add
dec
fdivrl
xchg
insb
andb
and
subb
enter
mov
and
sub
push
lds
inc
pop
orl
inc
jo
pop
and
lock
or
sub
and
cmp
cmpl
fildl
cmpl
mov
dec
leave
or
test
cmp
dec
dec
test
push
pusha
flds
add
dec
outsl
pop
cmpb
jns
sbbb
ja
jns
orb
sbbb
out
sahf
or
jne
cmpb
jns
mov
sahf
out
shrd
sahf
out
sahf
adc
adc
adc
jns
out
adc
adc
dec
repz
pop
adc
mulb
sub
jns
sbb
dec
push
dec
es
iret
add
test
ja
xchg
lock
dec
and
add
ror
dec
sahf
xchg
out
add
add
xchg
pushf
mov
test
subb
rclb
sbb
daa
loopne
cmp
sub
xchg
shrb
xchg
xchg
sbb
xchg
xchg
xchg
jo
lods
addr16
rcr
enter
test
das
int3
test
aam
fdivl
cmp
incl
inc
pop
add
inc
mov
test
sub
or
daa
cmp
add
jns
call
das
test
daa
sbb
mov
push
test
lods
mov
outsl
ljmp
cmp
mov
aas
add
aas
lock
mov
inc
mov
inc
lcall
lret
jns
pop
jb
nop
adc
mov
mov
xchg
mov
jae
adc
mov
dec
push
mov
mov
inc
test
adc
or
dec
dec
push
sqrtps
inc
repnz
clc
jl
es
xchg
pushf
aas
test
dec
scas
scas
addr16
pop
jb
pushf
mov
adc
leave
or
lock
mov
mov
mov
arpl
xchg
mov
test
in
lds
xchg
xchg
out
mov
adc
pop
push
call
push
inc
lea
mov
push
push
and
jns
mov
in
mov
mov
in
in
mov
mov
in
in
mov
mov
mov
mov
in
in
mov
mov
frstpm(287
in
mov
setl
or
or
pushf
pushf
pushf
pushf
push
add
pushf
pushf
add
add
stc
mov
and
lea
fldt
fistl
pusha
cmpsl
insl
jnp
pushl
mov
jnp
push
ret
fs
roll
incl
mov
pop
leave
xor
nop
sub
inc
addr16
data16
enter
outsb
rcrb
mov
mov
iret
mov
mov
leave
sahf
out
daa
rorl
or
or
pushf
dec
cmp
decl
lahf
nop
add
sarb
and
xchg
xor
lahf
xor
loopne
mov
and
les
mov
mov
adc
lcall
dec
or
lret
repnz
or
fnstsw
push
cmovle
adc
les
outsl
es
mov
push
aas
xchg
cmpsb
add
scas
add
pop
or
jns
push
out
or
ja
xchg
adc
dec
daa
adc
rcr
mov
xchg
and
lea
leave
in
inc
inc
lea
mov
push
add
add
xchg
pop
xchg
or
mov
dec
lock
xchg
xlat
fisttps
sahf
pushf
pushf
ljmp
in
enter
mov
inc
pop
mov
dec
ja
rcll
mov
pushf
mov
test
jns
out
mov
push
mov
sahf
out
rorl
fmull
shrb
repnz
fisttps
aaa
psubusb
pusha
mov
cmp
inc
push
orl
sbb
pop
stos
push
leave
repz
cmp
mov
aam
lret
psrlq
xorb
divb
movsb
mov
fildl
add
lret
out
inc
xchg
add
xchg
push
xchg
fmull
pushf
scas
add
lods
jg
or
enter
nop
outsl
enter
dec
add
in
adc
mov
dec
es
add
nop
in
jb
call
xchg
addr16
jb
in
dec
xchg
xchg
xchg
mov
push
fcoml
dec
adcb
nop
in
out
nop
cmp
xchg
and
nop
or
jbe
xor
xchg
push
mov
push
aas
pop
xchg
das
bound
push
jb
or
pusha
mov
push
lahf
or
mov
or
lock
add
outsl
xchg
xchg
outsb
mov
xchg
aaa
ja
in
in
jns
je
fistps
movsl
mov
repnz
xchg
rcll
fcoml
std
xchg
ss
icebp
repnz
lock
mov
inc
xchg
dec
xchg
enter
pop
xchg
gs
jo
sbb
jb
jnp
xchg
in
cmp
ja
xchg
test
loopne
enter
testb
or
mov
jb
xchg
and
and
sub
clc
cltd
popa
xchg
mov
and
imul
mov
pop
int3
rclb
ficoml
leave
jae
psrad
clc
adc
dec
mov
adc
push
pop
xchg
fisubrl
insl
js
fwait
iret
mov
or
mov
leave
fmuls
xchg
jo
mov
inc
sbb
cmp
sbb
daa
sub
push
loop
add
xchg
ja
insl
and
or
ja
jns
leave
mov
mov
xchg
ret
cmp
ss
push
or
sahf
cmpsl
or
or
repnz
aaa
push
sbb
dec
scas
adc
popf
ja
daa
daa
adc
imul
xchg
filds
in
and
mov
leave
inc
mov
lock
cwtl
pop
push
push
mov
xor
dec
mov
sahf
dec
out
in
mov
outsl
pop
push
add
add
mov
xchg
cwtl
xchg
out
jb
cwtl
movsl
fisttps
mov
enter
jb
cmp
loopne
call
lahf
jno
adc
cltd
adc
sbb
xor
insl
xchg
cltd
cmp
ud2
pop
or
in
in
or
push
in
in
add
jns
out
inc
sbb
sahf
out
sahf
push
sbb
sbb
out
push
iret
jae
bnd
mov
stos
ret
repz
cwtl
es
das
xchg
insb
ds
sub
lahf
data16
stc
pushf
cmp
add
inc
jbe
decl
pop
lcall
sub
scas
lcall
lar
inc
lcall
xchg
add
fcmovne
repz
jae
jnp
push
adc
scas
dec
dec
cmp
repnz
into
push
lcall
push
in
enter
fwait
adc
fistps
fwait
inc
mov
xor
fwait
dec
fwait
in
jns
iret
or
jno
mov
mov
mov
xchg
out
xchg
iret
lcall
outsl
outsl
dec
lret
jmp
sbb
xchg
cmpsl
mov
inc
testl
rolb
enter
daa
add
jb
pushf
sbb
and
je
cmp
pushf
iret
cld
mov
add
push
cmpsl
pop
add
pushfw
sbb
ja
sub
pop
andb
je
nop
xchg
xchg
push
loopne
in
fwait
out
mov
mov
in
mov
cmp
or
pop
popf
enter
adc
popf
int3
mov
popf
push
popf
mov
jle
pushl
push
nop
xcrypt-ofb
cmpsl
scas
cmp
iret
bswap
jae
jb
or
js
repnz
idiv
pop
sahf
repnz
sahf
pop
push
push
pop
repnz
jae
adc
adc
xchg
jl
jp
sahf
scas
adc
movsb
insl
xlat
or
pop
sahf
jae
out
into
repz
addl
add
and
cmpsl
fstl
test
push
sub
call
mov
lret
pop
fildl
jecxz
xchg
das
outsb
push
scas
jmp
and
push
lahf
jl
leave
inc
jb
xor
jb
test
fiadds
add
movsl
cmc
cmp
jbe
aas
outsl
pop
sub
inc
lcall
or
and
inc
add
push
cmpsl
adc
sbb
scas
cmpsl
out
pusha
cmpsl
add
popf
mov
pop
push
lahf
adc
fistpl
sahf
add
pop
getsec
repnz
add
cs
xor
cmp
dec
sahf
or
jb
stc
mov
dec
dec
sahf
aaa
mov
add
push
stc
pop
lahf
test
pop
sysret
outsb
pop
pushf
cmp
rcrb
pop
ror
repz
or
or
daa
lock
mov
mov
xor
dec
push
add
repz
add
fs
sahf
xchg
out
insb
pop
in
jl
mov
test
mov
pop
push
imul
inc
pushl
iret
dec
pop
das
xchg
test
mov
adc
mov
cmp
push
or
test
enter
stos
inc
xor
dec
les
push
mov
fwait
add
stos
ja
cmpl
or
or
inc
mov
out
xchg
xchg
movsl
mov
shrb
dec
sahf
add
push
call
fbstp
nop
stos
cmp
daa
pop
fisttps
mov
mov
das
and
das
mov
das
faddl
dec
lcall
cmp
sbb
mov
or
cmp
xrelease
or
iret
push
test
fidivs
jno
and
mov
ds
push
add
and
cmp
mov
pop
inc
movsb
das
dec
movsb
and
sbb
movsb
pop
movsb
bound
movsb
jb
addr16
inc
xlat
mov
add
out
add
enter
mov
lods
in
leave
or
in
in
iret
xlat
filds
mov
pop
out
movsb
mull
movsb
pop
movsl
push
out
enter
movsl
movsl
mov
dec
lods
mov
inc
movsl
dec
movsl
test
and
movsl
pop
movsl
das
push
jl
mov
jno
je
daa
sub
pop
xor
pop
nop
mov
cs
push
pop
mov
out
pop
lods
test
enter
scas
mov
repnz
movsl
shll
pop
mov
push
pavgw
aad
push
cmpsb
cmpsb
jns
ja
push
pop
push
aas
pop
add
and
xchg
out
add
inc
scas
popf
pushf
pushf
dec
dec
push
pop
popa
xchg
mov
mov
xchg
xchg
xchg
popf
movsl
lsl
sub
push
in
outsb
pop
pop
fdivs
loop
repnz
cmp
dec
dec
out
cmpsl
ja
cmpsl
pop
cs
pop
leave
mov
xchg
je
lods
cmp
jle
mov
lldt
xchg
cmpsl
stos
cmpsl
mov
cmp
cmpsl
out
shlb
cmp
inc
dec
loope
rcrb
test
test
sbb
mov
push
iret
popf
xchg
mov
dec
mov
dec
push
add
in
daa
pop
cmpsl
outsl
test
mov
push
dec
mov
xchg
lahf
lcall
lss
mov
add
xchg
xchg
movsb
add
shrb
xchg
cmc
idiv
setb
les
test
push
dec
test
iret
iret
aam
push
out
addr16
in
ja
and
mov
aad
ss
jne
fistps
psubb
xchg
dec
sbb
add
cmp
push
stos
rorl
sbb
ja
mov
pop
push
iret
pop
out
repnz
stos
cmpsl
imul
jns
daa
push
push
enter
mov
test
mov
jmp
mov
or
sti
out
add
or
add
pop
add
in
sahf
out
or
or
in
fisttpll
pop
into
sub
xor
and
dec
push
fdivr
sub
xchg
enter
sbb
cmp
cmp
jns
fwait
mov
xchg
add
movsb
sbb
les
pushf
stos
movsb
stos
fisttpll
mov
bnd
out
add
ljmp
in
loopne
and
mov
mov
daa
cwtl
sub
dec
inc
lods
dec
dec
jle
outsb
rcpps
sahf
ja
fwait
jbe
jle
push
add
lahf
xchg
stos
dec
mov
xchg
cmp
iret
push
rorb
jb
jbe
repz
lsl
jae
cmp
lods
sbb
sbb
cmp
iret
repz
inc
or
mov
daa
lods
das
das
das
pop
aas
sub
pop
lods
leave
repz
arpl
imul
repz
cmp
jnp
orl
xchg
fwait
bt
and
mov
or
sbb
leave
cmp
sub
dec
mov
loope
jmp
repnz
mov
xor
push
das
out
fistl
outsl
sarb
xchg
dec
push
scas
jg
scas
mov
das
movq
or
and
pop
enter
mov
pusha
pop
jle
pop
fldl
dec
fdivp
les
or
or
ja
jo
or
mov
leave
leave
add
push
daa
mov
leave
mov
aam
scas
outsb
daa
fstpl
ja
cmp
xchg
jl
mov
scas
addr16
pop
leave
xor
push
dec
push
out
sti
cmp
fs
jge
in
sahf
add
add
pushf
cmp
or
cmp
pop
or
loopne
fnsave
enter
add
aaa
decl
das
sbb
xchg
pushf
loop
sysexit
mov
cmp
mov
push
les
pushl
stos
push
mov
insl
scas
xlat
mov
pop
pop
js
aas
fmull
dec
mov
pop
xchg
int
sbb
mov
or
movups
add
iret
repz
and
add
cmp
cmp
add
push
or
cmp
push
add
subb
pmaxub
in
mov
sahf
xchg
out
lods
or
jns
les
and
pop
psubb
testl
lss
test
dec
xchg
mov
mov
setge
jbe
aas
jae
push
jnp
cld
jo
out
or
or
mov
mov
xchg
xchg
mov
loopne
xchg
daa
daa
call
xchg
xchg
xchg
adc
inc
pop
xchg
xchg
xchg
xchg
jne
xchg
scas
xchg
fnstenv
mov
daa
daa
iret
repz
das
adc
inc
out
dec
outsb
pcmpgtw
dec
sahf
sbb
mov
xor
mov
push
inc
push
add
icebp
mov
xchg
xor
sbb
daa
mov
das
pop
sub
call
daa
js
mov
jb
mov
mov
mov
mov
rol
cmp
in
jmp
add
mov
pop
xchg
cmp
inc
dec
mov
mov
mov
cmp
sbb
xchg
iret
push
xchg
pop
lahf
or
or
pop
cmpsl
repz
mov
cltd
pop
mov
mov
adc
ror
dec
and
mov
iret
insl
in
mov
pop
adc
and
vmwrite
jns
dec
mov
mov
mov
mov
jns
jns
mov
mov
mov
mov
jns
jns
mov
mov
mov
mov
jns
jns
mov
mov
mov
mov
pop
js
fdivs
mov
jns
jns
mov
mov
sahf
out
sahf
push
sbb
and
das
jns
out
and
and
out
sahf
out
and
and
sahf
es
dec
sahf
out
or
leave
rorl
sub
sahf
mov
mov
dec
pushf
out
pop
paddq
pop
rorl
out
add
push
das
push
cmp
hlt
mov
iret
mov
dec
popf
pop
mov
es
mov
add
add
pop
pop
mov
or
mov
push
mov
mov
add
pop
leave
mov
iret
test
pop
leave
mov
sbb
mov
dec
dec
outsb
addr16
mov
xchg
xchg
xchg
mov
icebp
and
lahf
outsl
shl
in
jns
add
jmp
mov
or
pop
sub
ss
cmp
or
dec
push
pop
dec
sahf
out
bound
jp
sahf
out
jns
nop
fwait
adc
out
jns
mov
mov
sahf
sbb
rcrb
fucom
jns
sahf
sbb
repz
cmc
or
and
cltd
call
out
and
lds
jb
push
push
mov
cmpb
cmp
shr
add
pushf
pushf
es
pop
gs
repz
insl
pcmpeqw
jge
xchg
out
test
lea
daa
daa
mov
iret
sti
cmpb
sub
pop
xor
jns
dec
orl
int
es
lock
adc
cmp
in
in
sub
xor
and
test
das
test
rorb
mov
pushf
loop
lahf
mov
cmp
iret
mov
mov
iret
xrelease
daa
iret
repz
out
push
or
je
in
femms
idivl
mov
add
adc
fucom
jns
daa
push
adc
lar
into
repz
pop
aas
scas
sbb
outsl
sbb
inc
aas
std
pop
mov
sbb
sbb
add
mov
enter
leave
rep
mov
jb
jp
add
mov
mov
inc
nop
xlat
lds
xchg
add
fnsave
outsb
paddsw
insl
in
rcrl
and
rcll
roll
outsb
daa
pop
packsswb
pushf
pop
and
xchg
pushf
xchg
sahf
daa
mov
sahf
cmpsb
rcl
mov
jae
cmp
movb
or
daa
pop
leave
call
dec
ds
ja
dec
lret
and
pop
ret
sub
xor
in
jns
xchg
pop
loopne
leave
in
movq
int3
in
in
setp
in
mov
mov
ds
daa
iret
push
rcr
or
int3
call
add
dec
ds
pop
sbb
jae
ret
jl
fcmovne
leave
enter
pop
pusha
xchg
mov
orl
xchg
fwait
add
ds
into
mov
xchg
out
fsubp
pop
out
lret
cmp
idiv
ret
dec
sahf
dec
cwtl
pop
dec
or
mov
fbstp
les
cmovno
repnz
iret
add
add
jae
pop
imul
jns
or
rcrb
movsb
lods
pop
mov
mov
jae
dec
into
fists
out
idiv
cmp
mov
cwtl
and
das
sub
mov
vzeroall
push
iret
jae
cmp
gs
add
jl
daa
jge
push
and
xchg
out
xor
jns
or
lret
xchg
add
outsl
push
sbb
jg
repnz
and
pop
push
add
andb
jae
add
or
inc
pop
addr16
fs
pushf
add
leave
repz
mov
pop
and
add
mov
mov
mov
clc
mov
push
add
pushf
add
mov
cmp
inc
push
mov
data16
jno
jl
lret
lret
dec
jp
lahf
xchg
popf
lret
lret
lret
lret
test
mov
mov
lret
lret
lret
aam
ffreep
ljmp
lret
add
or
push
enter
jmp
aaa
pop
nopl
cmp
cmp
sbb
sbb
cmp
cmp
push
adc
cmp
inc
sub
pop
iret
repz
dec
arpl
xor
cmp
repz
xor
iret
repz
xor
cmp
mov
cmp
repz
cmp
cmp
ds
leave
repz
or
push
ds
fucom
jns
push
inc
sub
inc
mov
out
cs
aas
dec
andnps
repz
pusha
inc
imul
iret
repz
orl
dec
pushf
cmp
in
sqrtps
fnstcw
out
cli
filds
dec
outsl
pop
sarb
lret
enter
lret
pop
pop
dec
hlt
cwtl
mov
outsl
lret
and
lret
nop
lret
jb
fwait
lret
mov
mov
mov
lret
lret
xchg
and
iret
call
lret
fmulp
or
adc
adc
cmp
repz
xor
cmp
repz
sbb
popa
iret
repz
sbb
sbb
iret
repz
lea
cwtl
mov
push
and
in
in
iret
fisubrl
in
iret
repz
cmp
lock
sub
faddl
push
int3
adc
sbb
iret
repz
daa
das
xor
cmp
cmp
push
pop
pop
xor
outsb
mov
imul
sahf
out
xchg
xchg
cmp
in
stos
cmp
in
in
int3
pmovmskb
and
clc
push
inc
add
push
stc
mov
js
inc
into
sbb
dec
fcom
and
int
out
and
push
add
out
mov
jb
xchg
xor
mov
sahf
ja
mov
int
sahf
out
add
add
and
iret
or
mov
sbb
jmp
and
adc
and
fstl
daa
xor
and
jns
inc
mov
into
xor
cmp
add
dec
sahf
out
add
clts
leave
leave
leave
leave
push
pop
arpl
in
loop
into
pop
jnp
jo
inc
add
nopl
cmp
pop
mov
call
add
xchg
into
into
lahf
add
into
dec
lock
mov
iret
out
iret
adc
fsts
and
sub
mov
mov
dec
iret
jg
fsubrl
xchg
iret
bound
js
add
mov
lahf
cltd
iret
daa
iret
mov
lds
dec
outsb
pop
rcr
out
mov
jns
cld
adc
rorb
out
fmulp
adc
iret
repz
sbb
push
es
repz
pop
sbb
in
jmp
or
dec
sahf
and
jns
xchg
fldt
push
daa
cltd
jecxz
in
jecxz
out
sarb
outsl
in
repnz
shll
push
add
repz
add
pop
xchg
out
pusha
push
add
jb
aad
inc
fcmove
mov
jb
fistpl
push
push
icebp
pop
cld
ret
dec
syscall
or
sahf
pop
rclb
rcrb
or
xor
setle
sarb
repnz
rclb
push
adc
repz
jne
pop
mov
je
out
xchg
sbb
jns
lods
push
push
mov
fmulp
repz
and
fcomps
and
cmp
jns
out
pop
and
lahf
es
femms
sub
mov
and
shrl
push
inc
sub
cmp
sub
fsubrl
cmpb
sarl
ja
pop
test
add
in
movsl
cmpxchg
mov
or
add
leave
cmp
pop
fdivr
jg
aam
push
mov
push
add
jns
out
add
add
out
pop
dec
or
rorb
or
pop
pop
pop
pop
jle
insb
aam
ja
adc
aam
sahf
out
cwtl
push
adc
cmpsl
rorl
cmp
and
icebp
mov
popl
aad
aad
adc
fistps
mov
fstp
aaa
jb
push
inc
aad
aad
push
leave
rorl
add
outsb
repnz
push
pop
jl
dec
dec
sahf
xchg
add
test
or
iret
leave
repz
mov
ja
popf
cmp
fimull
loop
ljmp
repnz
add
stc
mov
adc
lahf
sbb
sbb
cmp
enter
fs
sahf
out
sbb
jp
push
test
sahf
xchg
out
nop
or
pusha
jns
pushf
pushf
fsubrl
rorb
fucomp
repz
pop
sahf
pushf
decb
xlat
imulb
enter
xlat
sub
xor
mov
iret
mov
dec
insb
emms
push
push
or
cmp
andb
and
mov
scas
push
and
mov
iret
leave
repz
fisubrl
in
sub
rcrl
push
sub
repz
es
xor
xchg
out
dec
push
xor
in
dec
outsb
pop
imul
mov
xchg
fdivr
cmp
fisttps
sub
lds
andb
daa
xchg
mov
mov
mov
and
cmp
call
xlat
inc
push
xchg
push
and
xor
sbb
mov
dec
stos
inc
mov
aaa
fadds
sub
outsb
daa
iret
cmp
push
push
add
jns
out
sbb
dec
sahf
out
or
or
jbe
xchg
fdivl
or
rorb
in
adc
adc
adc
and
in
jbe
pop
inc
inc
push
fistl
push
xorps
out
mov
jo
jb
pop
fmull
pop
andb
or
popf
fdivrl
addl
push
adc
mov
adcb
xlat
xor
data16
add
pop
inc
mov
or
sub
out
and
sbb
or
cmp
repz
call
iret
repz
aam
int3
enter
sahf
idivl
mov
cmp
out
cwtl
nop
mov
iret
js
fs
push
inc
cmp
repz
cmp
sbb
nop
push
clc
or
push
xchg
adc
test
cmp
in
add
sub
sbb
andb
mov
pop
add
mov
lock
cmp
ss
movsb
add
pusha
cmpb
cmpsb
fisttps
mov
repnz
mov
cmp
decb
inc
mov
out
in
inc
mov
iret
mov
in
call
mov
push
add
insb
aas
and
push
xor
fcomp
loopne
jb
jle
push
push
mov
xlat
inc
dec
inc
mov
add
mov
add
xchg
dec
jnp
or
and
push
clc
ja
mov
jle
inc
aaa
push
mov
pmovmskb
add
mov
das
inc
dec
leave
inc
aas
pop
dec
add
add
loopne
push
or
or
out
adc
adc
cmp
jo
jns
jns
dec
inc
out
or
in
lods
in
cltd
adc
je
dec
in
paddsw
stc
cwtl
js
in
lahf
nop
in
jmp
iret
push
lcall
jns
xor
into
cmp
cmp
or
loope
xchg
ja
dec
icebp
xchg
push
fcoms
mov
adc
inc
pop
loopne
or
vmread
outsb
shlb
jle
adc
mov
cwtl
mov
xorb
push
jnp
icebp
addr16
push
push
mov
inc
je
adc
jo
rcl
pop
aas
pop
daa
mov
pop
aad
ffreep
and
xor
leave
cmpsl
aad
jg
out
addr16
cmc
mov
aas
inc
sub
push
add
and
mov
out
xor
add
repz
sbb
sbb
cmp
mov
aas
lock
and
jns
push
and
ds
cld
lock
add
cmp
adc
fsubl
das
out
jns
out
or
or
adc
out
sbb
in
enter
repz
rcrb
push
mov
cmp
repz
and
repz
and
mov
fadds
orb
test
out
xor
fwait
dec
in
inc
mov
xorb
outsl
in
add
iret
jmp
stc
idivb
cmp
pop
js
iret
repz
mov
repz
push
dec
insl
add
xor
push
add
cmp
sbb
dec
insb
pop
push
inc
ljmp
pop
dec
inc
pop
enter
jl
cli
or
or
ret
nop
cmpl
adcb
sbb
pop
stc
and
leave
sbb
into
sbb
rorl
and
sahf
mov
pushl
test
lds
std
and
sbb
addl
xlat
xchg
inc
push
add
inc
jg
stc
mov
adc
mov
decl
js
inc
outsl
loopne
jmp
dec
inc
mov
test
daa
cmp
inc
mov
popf
sti
jmp
stos
push
inc
mov
pushl
int3
repnz
test
pop
stos
clc
scas
adc
inc
jmp
aam
imul
loope
jp
dec
inc
gs
xchg
push
cmpsb
scas
mov
or
addl
cmpsl
xchg
cmp
cmp
dec
cmpsl
in
cmp
sahf
xchg
pop
lcall
lock
mov
popa
sar
decl
pop
mov
xchg
clc
repz
mov
subb
fwait
xchg
and
aas
mov
aam
jne
int3
add
sti
aas
jno
or
out
xlat
mov
pop
fs
dec
lea
aas
ret
shrl
mov
push
aas
rorb
and
cmpsl
out
aas
inc
cmpsb
mov
insb
scas
add
aas
xor
call
xchg
mov
std
std
into
popa
test
ja
stos
in
das
dec
pop
loope
les
aas
xchg
call
jne
int
mov
addr16
push
mov
xchg
aas
and
loop
mov
mov
jp
popa
push
pop
sarl
jl
mov
das
lea
mov
inc
inc
aas
movsl
jmp
cmp
sub
jge
mov
inc
rcr
push
arpl
int3
and
call
call
arpl
cmp
mov
cmp
std
xlat
cmp
mov
sbb
incl
test
pop
mov
jne
fldt
cmp
jno
shlb
out
dec
nop
pop
cmp
call
movsl
andb
mov
cmpsl
push
lahf
inc
pop
mov
sub
dec
in
ss
push
scas
into
imul
pop
add
rcr
jge
call
mov
xchg
cmp
push
andl
dec
dec
gs
std
orl
push
xchg
jge
pop
ficomps
frstor
add
inc
inc
je
inc
xchg
shll
cmovno
jnp
jmp
xor
popa
decl
out
mov
les
hlt
push
xor
xchg
fs
xor
fdivrl
jmp
aad
mov
rclb
mov
sub
mov
sbb
dec
jno
mov
test
ficompl
jmp
mov
hlt
movl
imul
jmp
in
leave
mov
add
insb
push
arpl
psubd
or
outsb
cmp
imul
pusha
aad
jno
mov
inc
aam
dec
std
test
movsl
cli
test
xor
leave
cli
dec
mov
insb
fdivs
jne
filds
or
shrl
out
push
ficoms
push
xlat
enter
mov
and
mov
cltd
xchg
mov
mov
incl
sub
mov
and
or
adc
stos
sbb
data16
inc
fdivl
jno
add
aad
mov
mov
movsl
in
lahf
xor
mov
lds
pop
js
stc
insb
test
xchg
sbb
ljmp
sub
insb
fs
add
hlt
push
imul
insb
sbb
xor
dec
add
in
xchg
incl
insb
jnp
add
shl
adcb
cmc
fnstenv
adc
mov
mov
loope
frstor
sub
rorl
popa
mov
into
pop
cmp
mov
xor
dec
adc
ret
movsb
sti
hlt
shrl
imul
ljmp
inc
mov
sarb
add
in
add
pop
dec
or
cmp
add
incl
daa
adc
or
and
test
or
mov
popa
into
push
stc
ficomps
leave
fldcw
and
xlat
pop
cmp
mov
cmp
lods
insb
mov
in
mov
mov
add
inc
aad
scas
ja
popf
adc
push
fdivl
or
test
jmp
push
or
or
push
in
decl
xchg
daa
scas
add
mov
pop
jge
xchg
shlb
or
inc
push
imul
xorb
sbb
push
imul
aam
loopne
call
mov
ficoml
int3
dec
frstor
fistpll
mov
mov
aad
mov
call
xchg
lcall
shll
push
repnz
addr16
cmpsb
fldl
mov
dec
ss
ljmp
or
scas
testb
pusha
jp
inc
ret
out
pusha
fists
addr16
mov
jns
imul
mov
lret
sbb
outsl
and
ja
int3
add
mov
decl
lock
es
lds
or
add
mov
cmpsl
call
ret
or
xor
shlb
scas
ficomps
ret
es
pushf
mov
decl
xchg
insl
add
ss
jmp
addr16
jb
push
add
adc
mov
jnp
cmp
mov
fwait
mov
xchg
or
out
fdivrl
fisttpl
aam
roll
clc
mov
push
outsb
sbb
int
mov
mul
ja
outsl
ja
mov
out
cli
jo
comiss
dec
cmp
pop
or
adc
sahf
gs
clc
sar
imul
push
js
ljmp
rorb
dec
ret
cmp
cmpsl
notl
pusha
rorb
imul
ljmp
fldenv
filds
mov
pusha
mov
fidivrs
mov
jmp
rcrb
mov
xor
mov
incl
push
xlat
int
push
ficoms
fldenv
jp,pn
mov
dec
popa
les
sbb
xchg
sub
movmskps
pushl
mov
or
sbb
add
sub
popa
pop
js
jo
pop
push
daa
pop
push
shl
pop
js
aad
push
xlat
fcomps
fcmovu
fsubp
xchg
out
loop
in
sahf
out
sahf
call
in
jns
out
repz
cmc
div
jecxz
sahf
out
stc
cli
sti
cld
push
adc
aas
test
pop
das
adc
movsl
add
movl
jae
inc
push
dec
sub
rorb
inc
insl
bound
push
dec
cmp
je
push
pop
stos
inc
in
fistpll
and
cmp
adc
ljmp
inc
cmp
pop
bound
xor
aaa
cmp
pop
popa
arpl
cmp
arpl
or
xor
and
xor
popa
icebp
sub
insl
pop
insb
imul
push
insb
imul
dec
fistl
ret
movb
inc
or
push
inc
jp
jecxz
aam
and
sbb
mov
or
jbe
in
push
je
sbb
jbe
dec
in
or
pop
roll
mov
je
inc
inc
or
xor
pop
imul
ja
test
xor
insb
popa
jns
push
adc
insb
or
mov
fldenv
cmp
ret
pop
add
aas
inc
add
inc
aam
push
aas
dec
mov
pop
add
cltd
and
arpl
insb
daa
int
sbb
inc
daa
pop
inc
aas
enter
outsb
mov
xchg
push
xchg
shl
sbb
inc
pop
into
out
std
icebp
jbe
jae
inc
inc
inc
add
ds
cmp
scas
add
pop
int
mov
aas
int
push
dec
cmp
inc
mov
insb
mov
sbb
mov
aam
ds
outsb
jne
andl
dec
jge
jnp
pop
aad
xor
xor
or
aad
arpl
add
addr16
pop
fwait
aaa
jbe
xchg
into
pop
jo
rcr
daa
popf
pop
inc
cmp
mov
adc
mov
inc
ret
add
addr16
xchg
and
pop
imul
mov
cmp
mov
inc
sbb
xlat
inc
add
push
mov
xchg
out
jb
sub
cmp
or
add
popa
dec
popa
jo
lahf
gs
lahf
push
outsl
outsl
test
mov
ret
xlat
in
jno
lds
bound
sub
sub
in
nop
test
pop
cmp
test
push
arpl
cmp
mov
add
push
dec
sub
outsl
insb
jns
subl
das
inc
jb
push
fwait
sub
gs
pop
sahf
inc
outsl
arpl
insb
paddw
bound
cmpsb
jbe
lods
ja
inc
jbe
xor
jg
pop
daa
es
dec
xor
imul
les
das
xor
inc
shlb
xchg
iret
inc
repz
movsb
sbb
and
and
push
and
dec
jle
xor
cmp
cwtl
pop
inc
dec
and
cs
dec
add
adc
add
inc
cwtl
sbb
inc
and
dec
sbb
sbb
cmp
or
sub
inc
dec
cmp
je
jns
arpl
mov
cmp
pop
pusha
in
pop
in
xchg
insb
insl
aaa
push
and
push
pop
lret
sub
and
sahf
xlat
out
lds
sub
adcb
adc
or
addb
cmova
fildll
mov
push
add
fdivr
loopne
adc
dec
mov
add
pusha
add
fstpt
xchg
add
add
or
mov
or
pop
pop
push
or
or
or
or
or
adc
adc
cmpsb
push
lock
adc
push
add
pop
sbb
adc
adc
adc
add
data16
or
pop
adc
inc
add
pusha
mov
pushf
nop
add
add
add
adc
loopne
add
add
mov
repnz
sbb
cmp
decl
call
xor
adc
pop
and
xor
inc
mov
adc
cmp
and
bound
js
add
mov
pusha
xchg
fcoms
subl
add
addl
add
inc
or
pop
xor
pusha
add
aas
xor
adc
or
pushf
into
add
cmp
scas
adc
mov
or
adc
push
adc
int
mov
adc
or
xchg
mov
lock
add
and
adc
inc
mov
mov
dec
rorl
scas
fiaddl
or
aaa
cwtl
adc
dec
xor
sub
inc
fists
xchg
and
sub
std
cmpsb
xor
aas
imul
pushl
fdivrl
add
mov
mov
loopne
mov
fsts
rcrb
orb
mov
cmp
and
ret
sub
xchg
sti
push
call
in
and
fistpl
jg
inc
cmc
iret
xchg
inc
jl
repnz
dec
or
adc
pop
mov
inc
xchg
pusha
add
std
or
incl
cld
cli
and
mov
fiaddl
jg
fnstsw
ficompl
cmpsl
xor
inc
mov
test
pop
lahf
mov
movsl
jecxz
pop
mov
push
cmp
push
stc
or
xchg
jg
or
push
push
addr16
out
or
push
push
xchg
add
repnz
inc
lock
call
xor
fdivrp
cmp
fisubrl
in
mov
orb
int3
lcall
std
aaa
cmp
mov
scas
mov
pop
pop
mov
popl
movb
call
adc
adc
mov
xor
lods
scas
xchg
test
aam
and
ljmp
sbb
sarl
and
roll
fwait
movsb
jmp
push
lret
push
out
in
and
stos
lahf
fdivs
aas
repz
cmpsb
pop
outsl
icebp
mov
pop
lock
std
or
pop
mov
jmp
test
aaa
dec
dec
pop
push
out
outsl
loope
loope
rorl
mov
int
arpl
mov
jp
push
out
or
push
sahf
pop
clc
sti
jg
jno
lock
jg
inc
icebp
xchg
std
sarl
xor
hlt
and
xchg
jmp
movsl
sub
outsl
push
lcall
jle
mov
jb
mov
mov
mov
sub
pop
add
arpl
dec
jp
push
gs
jg
jg
aas
stos
hlt
push
add
stc
loope
mov
sar
andl
aas
icebp
idivb
aad
or
mov
scas
fadds
jmp
jns
mov
in
repnz
jno
pop
sub
jg
scas
cld
or
push
inc
sbb
paddb
ljmp
sbb
jb
adc
push
lock
lods
jp
testb
jmp
sbb
into
fcomps
sbb
sbbl
into
andl
aas
loopne
mov
adc
aaa
xchg
in
add
inc
adc
loope
fnstsw
out
aas
std
cli
push
push
push
idivl
mov
sub
inc
scas
inc
mov
jg
je,pn
sub
jg
ljmp
mov
scas
call
les
jne
gs
jns
enter
or
push
pushf
push
scas
xlat
sub
pushl
inc
cmp
sti
punpckhbw
cmpsb
orb
mov
clc
xor
jmp
xchg
pop
clc
outsl
pop
dec
fistl
hlt
sub
movsb
add
lea
pushl
jg
gs
std
xorb
jg
aad
adc
ret
call
loopne
das
pop
pop
pop
shlb
out
sarb
sbbl
jno
or
mov
cmp
pop
les
cli
mov
mov
inc
arpl
stos
mov
lcall
insl
add
leave
push
scas
loop
jge
push
shrl
mov
push
mov
jg
call
and
sbb
xchg
jo
and
out
test
jae
push
iret
sti
cmp
ficoms
aam
sahf
imul
fcmovnu
rorl
insb
stos
arpl
add
call
ss
cmp
scas
lods
hlt
cmp
fistl
mov
adc
push
movsb
xchg
lock
decl
pop
mov
stos
dec
lods
xor
jg,pn
cmpsl
addr16
mov
pop
or
mov
xlat
pushf
cld
aas
clc
jge
jnp
sbb
outsb
mov
cli
lcall
into
jecxz
inc
adc
mov
adc
adc
push
jo
pusha
imul
jmp
xchg
das
adc
cmp
xchg
mov
sti
es
sub
loop
pop
xchg
ftst
jbe
xchg
and
jmp
jae
shrb
shlb
out
aas
stc
add
out
gs
jno
fidivrl
lock
adc
pop
cld
addl
adc
clc
mov
repnz
cmp
fmull
enter
jecxz
stc
int3
mov
pop
mov
sub
mov
dec
incb
fisubrl
aas
mov
or
cld
inc
or
pop
jo
pop
ret
cmpsb
push
pop
jg
add
jg
mov
cmp
sub
adc
mov
mov
iret
call
mov
push
push
sbb
stos
icebp
pop
incb
jg
out
dec
jno
adc
push
inc
jecxz
sbb
sarl
jbe
adc
loopne
sar
adc
lahf
push
sti
rorb
xor
imul
dec
loope
clc
sti
push
in
aas
mov
fsubrl
pop
fcom
ss
and
pop
inc
call
xchg
pushf
mov
repnz
and
mov
push
jle
icebp
adc
inc
aas
push
rcrl
lock
pop
call
pop
pop
inc
jb
call
outsl
mov
data16
pop
nop
mov
inc
sti
arpl
clc
mov
ds
mov
inc
cmpsb
popf
push
loop
sbb
or
imul
xor
pop
cld
jg
xor
fsubr
fistps
lds
fidivrl
jg
stos
call
sbb
add
dec
mov
sub
jge
xor
lahf
les
inc
mov
sbb
cld
addl
adc
cld
lcall
mov
lahf
outsl
int3
push
sbb
sti
incl
mov
jle
xchg
popa
out
out
outsl
xchg
mov
test
in
jge
popa
push
test
jbe
outsb
hlt
sti
lcall
fsubs
shl
dec
jp,pn
adc
lahf
mov
or
out
lcall
xchg
cmp
shl
cld
mov
adc
icebp
outsl
js
pop
jg
pop
shrb
rcl
jg
adc
xor
inc
sti
lcall
fisttpl
sub
jmp
lea
jp
jnp
jecxz
jg
add
ds
pop
adc
imul
or
inc
pop
xor
push
in
inc
nopl
xor
subb
iret
mov
outsl
decl
aam
enter
mov
into
test
xchg
movsb
insb
or
and
sbb
cwtl
inc
mov
insb
stc
push
mov
fistps
outsl
lock
in
jmp
stc
out
rcll
clc
push
std
mov
ja
jl
or
mov
xchg
pmullw
clc
decl
repnz
dec
sahf
enter
fcmovb
inc
adc
inc
loopne
test
out
rcr
hlt
mov
inc
out
pop
or
or
dec
ss
mov
incl
pslld
pushf
imul
cli
daa
pop
and
imul
cmpsl
lret
pop
in
cmp
dec
filds
mov
pop
lock
jmp
hlt
dec
mov
push
mov
sbb
xlat
inc
aas
mov
jg
mov
loopne
fisttps
addr16
sbb
cld
daa
jp
std
adc
outsb
cmp
inc
cltd
or
mov
ret
nop
cmp
das
incb
adc
stos
imul
cmc
cld
idivl
mov
and
loope
jae
shll
je
jge
call
mov
jg
stc
add
out
f2xm1
aas
inc
icebp
mov
loope
mov
cmpsl
popf
lds
aaa
cld
sti
mov
fbstp
push
dec
outsl
das
jge
mov
inc
add
cmpsb
cmp
call
mov
iret
decb
adc
mov
inc
sbb
and
call
mov
pop
add
jg
push
mov
inc
add
nop
test
aaa
std
fisttps
fdivp
push
dec
inc
sbb
xchg
fimull
cmp
aas
icebp
ret
ror
sbb
jae
arpl
adc
jbe
mov
mov
pop
clc
loope
loope
mov
or
scas
sbbb
jg
mov
xchg
stos
jmp
xor
sarl
jne
push
cmp
repz
jno
pop
gs
imull
jg
pop
out
jg
jno
ret
xchg
xchg
cmp
mov
cwtl
arpl
out
iret
push
dec
jge
pop
clc
xchg
cmpsb
ljmp
ds
inc
mov
in
sbb
xchg
imul
ljmp
pop
outsl
jmp
std
mov
daa
jmp
faddl
add
inc
push
jae
push
pop
mov
pop
add
push
imul
pop
stc
push
dec
out
fstpt
mov
enter
mov
add
cmc
out
daa
icebp
push
lahf
sti
inc
pop
imul
push
xchg
cli
jmp
pop
xor
mov
xchg
mov
fildll
fsubrl
dec
add
sub
inc
or
add
smsw
inc
xchg
int3
les
push
cmp
pop
mov
bsf
popf
int3
pop
iret
and
add
pop
pushl
push
fucomi
fstpt
pusha
in
in
jecxz
lods
adc
jo
test
push
aaa
test
mov
incl
mov
stos
andl
pushf
fadd
cmp
dec
mov
fs
decl
or
sub
xor
rclb
outsl
jae
sub
add
scas
sub
ja
aaa
js
incl
inc
repnz
jmp
mov
lds
mov
shrl
leave
pushl
outsl
xchg
imul
jbe
loopne
dec
das
mov
int
xchg
sub
inc
jle
fidivl
push
xchg
push
pushf
stc
in
movsl
shll
iret
leave
xchg
xor
pop
or
ljmp
cvtpi2ps
jecxz
inc
and
push
xchg
in
lahf
fldt
popa
ljmp
jnp
push
lea
out
data16
push
dec
leave
mov
mov
ja
push
dec
pop
adc
mov
out
in
rorl
or
or
and
call
jmp
fadds
xchg
adc
push
stos
pop
push
bound
pop
divl
jecxz
mov
addr16
call
sbb
mov
loop
jecxz
loopne
sbb
cli
adcl
add
cli
inc
aas
and
aaa
insb
adc
sbb
push
sub
sbb
cmp
out
pop
daa
inc
jecxz
cmp
and
in
pop
call
jp
inc
ss
popa
imul
jmp
insl
subl
inc
push
lret
or
insb
stc
mov
stc
stos
popa
or
mov
test
cmp
sbb
inc
outsl
xor
jb
fisubrl
sbb
jae
inc
into
es
adc
lret
in
cli
mov
jl
adc
loopne
push
push
mov
imul
sti
pop
decl
ljmp
pop
mov
ficomps
lea
xor
daa
decl
mov
mov
movsb
insb
or
mov
aam
mov
add
or
pushl
in
and
or
sbb
mov
rcrl
outsl
rclb
cmp
cmp
fninit
sbb
lods
adc
enter
ret
adc
mov
add
xchg
jg
shlb
mov
sbb
jmp
xor
and
sbb
jl
pop
push
out
xchg
pop
mov
or
out
ljmp
mov
inc
lahf
fimull
das
int3
xchg
jle
mov
add
daa
test
inc
ljmp
jns
adcb
and
cmp
in
lods
popf
inc
bound
lcall
push
loope
jg
inc
test
jne
jae
mov
jge
jnp
lea
adc
pushl
les
dec
outsl
daa
ficompl
lea
aam
lcall
jl
data16
in
lcall
pop
mov
movsb
mov
inc
cli
hlt
fs
test
inc
add
ljmp
mov
add
fstpl
mov
std
fwait
daa
jae
outsl
push
mov
add
pushl
dec
jmp
leave
lock
out
jecxz
and
jge
push
mov
mov
push
cmc
adc
decl
fisubrl
imul
out
inc
repz
dec
in
fidivrl
jg
mov
test
hlt
mov
sar
lcall
enter
xchg
mov
scas
rcll
mov
inc
jne
mov
sub
cmp
in
shl
jo
cmp
pusha
mov
cltd
movl
nop
ss
fcos
fcomip
pushl
cmp
sub
sub
loop
fisttpll
dec
and
lret
ljmp
fwait
rol
sub
aaa
rcr
lcall
jle
or
push
outsb
and
jae
test
out
jno
push
adc
mov
ss
mov
jg
adc
aaa
mov
mov
bound
movsb
call
adc
xchg
lret
es
mov
sbb
push
js
cmpsb
int
das
inc
mov
shlb
add
inc
mov
add
pop
pushl
jne
aad
loopne
push
pop
loopnew,pn
adc
ss
outsl
ds
pop
sbb
loop
das
clc
jmp
pop
pop
mov
lock
push
movsl
repz
inc
adc
clc
jmp
cmc
add
and
mov
shlb
pusha
sar
xchg
int3
les
mov
addr16
cltd
bound
pop
pusha
cmp
and
lods
dec
jp
pop
lods
cwtl
adc
daa
lret
mov
cmp
lret
stos
fistpll
mov
inc
dec
dec
dec
inc
xlat
jmp
call
adc
push
adc
pop
and
xchg
mov
dec
mov
stc
push
decl
jns
push
bound
jge
leave
jg
sbb
sub
cmpsb
clc
push
xor
fdivrs
push
mov
leave
flds
jne
ret
adcb
or
negb
push
incl
lcall
and
in
pushf
out
mov
mov
dec
mov
adc
jmp
int3
scas
xchg
movsl
and
pusha
clc
xchg
mov
repz
sub
or
faddl
sub
mov
mov
fcomip
mov
adc
jbe
insb
pop
add
mov
fistpll
mov
nop
dec
idivb
mov
ret
lret
or
out
in
mov
jg
mov
in
add
pop
jecxz
xor
inc
push
shr
xchg
ljmp
cmpsl
aad
cli
and
push
push
cmpsb
insb
test
mov
dec
sub
xchg
push
fldcw
pushf
lods
mov
pop
movsb
sbb
popf
jae
xor
lret
in
add
std
or
mov
jne
ret
mov
jbe
jnp
mov
into
dec
lock
inc
xchg
inc
or
call
dec
cmp
loopne
repz
sbb
cmp
add
out
gs
call
mov
jecxz
ja
or
sub
repz
stos
mov
in
dec
push
movsb
sub
add
inc
mov
test
sbb
clc
inc
jge
imul
mov
jle
fsubrs
xor
int3
jbe
mov
push
dec
mov
outsl
push
push
pop
inc
test
cld
cld
in
fsubr
push
xchg
daa
xor
pop
adc
lret
inc
dec
iret
mov
scas
sub
test
decl
xchg
sti
test
ss
sbb
adc
cltd
cmp
cltd
adc
dec
add
pop
xchg
orl
sar
lcall
popf
stc
sbb
fst
insb
fistpll
jo
out
cs
cli
fdivrs
dec
mov
jmp
ficompl
cltd
xchg
xlat
dec
cltd
xchg
mov
fsubl
and
incl
in
dec
and
into
xchg
mov
cmp
or
and
movsb
add
cmp
mov
xchg
xchg
test
or
hlt
notl
push
nop
sbb
inc
fmuls
movsl
or
sti
lods
rol
divl
fistpl
mov
pop
sub
sub
or
incl
sub
subb
cmp
sbb
int3
repz
rorb
call
repnz
into
pop
inc
inc
mov
sub
add
aam
and
sbb
incl
call
pop
test
xor
cltd
jl
xchg
adc
inc
and
ja
shrl
stc
out
cli
dec
mov
mov
test
sub
loopne
sub
fisubrl
push
cld
dec
ss
inc
or
insl
loope
dec
or
popf
insl
inc
sti
outsb
adcl
mov
lcall
or
imul
cs
lods
add
scas
cli
cmpsb
adc
sub
scas
clc
xor
clc
sub
or
mov
fcmovnb
jle
jmp
push
add
stos
lods
fidivs
dec
push
xor
jl
cli
xlat
out
xlat
mov
inc
call
mov
mov
xchg
bound
ljmp
divb
ret
outsb
fdivrl
lods
dec
jno
lds
mov
ds
call
stos
lds
mov
imul
xor
inc
loopne
movsl
mov
jg
in
cwtl
xchg
gs
cmp
aam
popf
jle
cs
cld
ja
jmp
or
insb
push
leave
es
sahf
cmp
push
movsb
inc
or
dec
add
cmp
sbb
jg
or
mov
inc
cmp
sub
add
jb
dec
mov
sub
jg
decb
cltd
in
movsl
lcall
pop
ljmp
out
decl
enter
mov
xchg
ret
imul
dec
enter
int3
lock
insl
decl
sub
loop
int3
jecxz
dec
mov
cmp
addr16
inc
call
or
dec
mov
or
das
enter
aaa
dec
jp,pn
inc
cmp
xor
roll
lcall
push
lret
jnp
and
xchg
in
sub
sub
inc
push
test
cld
call
mov
addr16
cmp
push
jnp
sti
pusha
movl
ljmp
lret
sub
subb
xchg
inc
push
pop
xchg
xchg
push
ljmp
cmp
mov
adc
rcll
pop
pop
push
ret
sub
clc
xor
incl
and
leave
scas
dec
mul
scas
std
into
mov
jl
sti
inc
xchg
dec
add
mov
and
ljmp
fs
cli
inc
mov
sbb
mov
inc
fisubrs
adc
call
xor
out
dec
pop
lahf
out
lods
repnz
mov
xchg
lods
insl
cmpsb
ljmp
fmul
sbb
jmp
cmc
cmpsl
flds
push
mov
mov
or
mov
in
push
ss
jns
fcomip
adc
or
nop
ss
lock
loop
add
pop
push
out
scas
ret
out
sbbl
icebp
fs
add
pop
mov
push
mov
inc
inc
data16
jg
shl
add
imul
jne
enter
xchg
cli
subl
mov
arpl
cmp
mov
int3
jno
pop
mov
push
push
in
rorb
call
inc
scas
adc
in
add
jmp
cmp
or
or
decl
leave
outsl
ret
mov
clc
stos
jno
xor
insb
aam
in
lcall
jp
pop
and
mov
pop
movsb
addr16
sbb
daa
out
pop
pop
repz
pushl
vunpckhpd
rcrl
sbb
inc
cmp
sub
mov
fld
lock
outsl
pusha
or
fidivrs
inc
sub
fsubrs
shll
mov
fwait
xchg
and
inc
into
jae
xchg
cmp
cwtl
cwtl
out
push
iret
push
jo
xor
js
mov
lcall
movsl
and
cmp
mov
loope
mov
call
lods
adc
and
popa
lret
enter
jge
lahf
mov
dec
push
popf
popa
sub
mov
sub
ret
xor
pop
dec
dec
gs
and
clc
cmp
call
push
jg
outsb
jg
decl
sub
scas
cs
je
push
mov
dec
mov
xor
cmc
incl
jnp
daa
xchg
mov
in
test
mov
inc
xor
lcall
or
ret
sub
pop
addr16
cmp
out
loope
cmp
jno
aas
fwait
ret
cmp
mov
cli
and
outsl
popa
xor
sbb
movsl
pop
xlat
inc
das
outsb
and
push
movb
es
mov
loopne
test
ds
ljmp
cli
pop
cmc
jle
aaa
negl
inc
xchg
xor
mov
sub
mov
nop
shrb
clc
test
mov
incl
jle
mov
fidivrl
stos
lea
cmp
imul
mov
cmpsb
aam
inc
dec
iret
jle
fiadds
mov
shlb
dec
test
es
jp
xchg
imul
aaa
cmc
scas
lahf
push
aas
lods
hlt
adc
xor
out
popa
or
insb
sbb
aaa
push
push
iret
repz
jg
insb
mov
lods
cmp
lods
cmp
iret
call
imul
cmpsl
fwait
dec
daa
mov
scas
stos
sub
xchg
dec
lret
cmp
add
mov
decl
or
ja
xor
add
mov
fldz
inc
int3
dec
sahf
jo
cli
decl
mov
adc
lds
xchg
pop
iret
adc
rcl
add
ljmp
fists
jno
add
push
xor
imul
add
jl
lahf
mov
call
mov
xor
push
fwait
in
mov
sub
aaa
sbbb
loopne
xor
jg
jmp
mov
out
add
push
sub
leave
dec
out
add
cmp
pop
insb
dec
mov
int
dec
mov
dec
call
sar
scas
push
and
icebp
in
in
sub
push
pop
sub
push
outsl
clc
jmp
leave
xchg
call
pop
xlat
scas
int3
addr16
push
xor
jb
lcall
pop
sbb
pusha
aam
mov
cwtl
sbb
aam
dec
mov
inc
and
or
adc
lcall
push
ret
xor
scas
and
in
lock
inc
cs
or
push
lcall
pop
push
hlt
filds
inc
mov
lds
iret
pop
ret
xor
mov
mov
decl
ss
jno
inc
mov
jae
mov
cmc
dec
popf
and
decl
incl
rorl
push
movsl
out
test
es
in
stos
pop
cmpsb
fldcw
sbb
add
jmp
pop
add
cmpps
mov
notb
and
ret
jg
orl
in
mov
cmp
and
test
mov
mov
dec
inc
adc
cmc
mov
out
test
sub
out
xchg
loopne
push
fwait
iret
xor
js
push
std
cli
or
setge
pushf
sbb
xchg
push
in
dec
add
jge
cld
test
xor
push
push
loop
movsb
scas
xchg
jmp
in
hlt
sbb
inc
push
repnz
lret
add
sbb
pop
push
mov
sbb
push
sub
pop
call
xor
xchg
je
movsb
outsb
pop
es
dec
jge
clc
mov
or
or
adc
sbb
mov
jno
repnz
loope
mov
mov
popa
mov
or
scas
mov
ljmp
push
daa
xchg
lods
lds
xchg
push
movsl
lods
lea
clc
cmp
sub
out
lock
incl
mov
fnstsw
jo
pop
adc
and
clc
mov
ljmp
lcall
sarl
add
leave
out
or
xchg
or
inc
pushf
and
adc
dec
inc
mov
imul
js
cwtl
xchg
int
icebp
cmpsb
dec
sti
out
test
insb
nop
jg
mov
fidivl
enter
mov
insl
sbb
cld
loop
int
div
dec
pushf
fs
adc
push
cmp
jae
fwait
bound
mov
xor
jmp
add
cmp
lock
sti
add
sbb
xchg
cmp
or
ljmp
or
std
ret
data16
cmp
cltd
mov
lahf
mov
call
push
pop
push
or
adc
pop
notb
pop
pushf
mov
and
xchg
and
test
incl
cmp
push
scas
insl
pop
rcrl
push
jne
ds
sar
mov
or
icebp
ss
pop
fstps
faddl
push
push
sbb
pushl
adc
jo
cmp
cwtl
xchg
loope
cli
ret
dec
pop
cmpsb
and
lods
scas
clc
jg
enter
mov
iret
jp
dec
daa
jne
rolb
aam
push
lds
push
imul
dec
popf
inc
or
cmpsl
push
lods
test
cs
add
repz
jp
dec
ss
and
lcall
jb
pop
popf
aad
repz
aam
pop
rorb
pop
icebp
fstps
sub
jnp,pn
sub
inc
inc
pop
sbb
lock
fnstenv
jg
aaa
mov
sub
xlat
popf
xchg
xchg
sti
xchg
dec
scas
fsubl
clc
adc
jo
pusha
cmpsb
dec
inc
jbe
push
cmp
fisubrl
push
mov
fbstp
and
out
loope
cmc
or
sub
xor
ret
add
cmp
lcall
or
cltd
test
pop
jmp
rep
mov
xor
loope
shr
cs
mov
or
ficoml
mov
loopne
jg
ljmp
xor
enter
jge
push
cmp
or
sub
mov
stc
clc
test
dec
out
scas
cmpl
daa
stos
mov
sbb
jmp
mov
mov
mov
mov
shll
dec
xchg
insb
call
push
rcr
mov
and
jecxz
insl
add
jp
and
andb
aas
push
push
lock
push
std
mov
mov
lret
cmp
inc
cmp
push
loop
shr
or
mov
stos
mov
stc
add
xchg
outsl
add
das
cli
jmp
movsb
cmpsl
dec
bound
cmpsb
filds
and
scas
repz
pop
insb
stc
xlat
jecxz
push
add
mov
jns
imull
sbb
xchg
push
sbb
push
lahf
jl
lock
lcall
push
rcrb
in
es
inc
mov
testb
push
cmc
push
imul
push
lret
mov
xchg
popf
lahf
sub
mov
dec
and
and
inc
scas
bound
and
mov
sbb
incl
sahf
adc
xor
adc
int3
adc
incl
or
scas
pop
add
add
inc
add
jnp
daa
imul
add
mov
mov
and
cmp
pop
fucomp
jns
loopne
xchg
mov
mov
xchg
sbbb
or
out
push
or
aas
shlb
sub
movsb
pusha
xchg
pop
pushl
loope
jmp
mov
mov
maxps
subl
mov
pop
or
call
loopne
in
pop
inc
fucom
dec
pusha
push
mov
inc
push
adcl
in
lret
mov
lcall
mov
ljmp
das
fbstp
sbb
mov
lcall
adc
jo
ret
lds
sbb
outsl
mov
sub
push
int
loope
clc
sar
pushl
enter
lret
out
or
sub
xchg
dec
ret
mov
mov
jb
sbb
sbb
pushl
mov
xor
addr16
fildl
mov
cwtl
sbb
dec
mov
incl
loopne
mov
lds
cs
aam
inc
cltd
insb
cltd
ljmp
rcrb
mov
decl
push
aas
mov
rcll
sub
enter
and
mov
ljmp
test
into
ret
xchg
jmp
les
lret
lea
xor
decl
outsb
lods
divb
pop
inc
mulb
inc
mov
insl
mov
xchg
bound
cmp
bound
decl
or
insb
fs
sbb
fldenv
add
insb
in
jnp
call
cld
insb
mov
inc
lods
pop
cmpsb
jb
pop
mov
insb
push
in
lea
pushf
sub
fcos
mov
and
xlat
xor
pop
sbb
out
inc
shrb
daa
fwait
adc
push
inc
rorl
iret
cld
in
push
ficoml
sbb
jg
jo
cmp
sahf
add
std
xlat
sar
test
mov
adc
sub
add
mov
call
test
jp
jnp
sub
push
icebp
mov
bound
mov
pushl
nop
shlb
in
cs
pop
mulb
add
jecxz
or
jmp
push
dec
xchg
inc
lea
mov
mov
lret
pushl
std
mov
aam
adc
cmp
lods
xchg
xchg
adc
ljmp
ror
dec
add
inc
movsl
nop
fldl
notl
lock
add
lds
mov
pop
or
cltd
push
call
imul
enter
mov
mov
jecxz
sarb
lcall
sub
sahf
or
leave
fsts
roll
or
mov
enter
icebp
sti
insl
mov
xchg
mov
and
nop
or
test
lret
pop
ljmp
pushl
jg
fildl
jnp
sub
lret
cmp
sahf
vmread
jmp
ret
add
and
insb
push
lret
push
icebp
inc
pop
sub
call
nop
test
nop
xchg
mov
in
cltd
push
out
cmp
int
sahf
cmp
inc
lds
jecxz
pmovmskb
cmp
outsb
clc
popf
or
repz
xchg
cltd
int
jcxz
stos
and
pushl
sahf
lds
cmp
ss
iret
or
inc
adc
imul
push
push
stos
sbb
decl
mov
stos
jns
shll
push
jg
lahf
push
lahf
cmp
mov
push
lock
cwtl
or
jb
pop
xchg
push
clc
mov
insl
insb
incl
inc
cmpsb
ja
filds
xor
int3
dec
jge
mov
dec
inc
rcrl
jmp
incl
sub
dec
leave
push
out
xchg
dec
push
loopne
inc
add
lret
inc
cmpsl
pusha
mov
xor
pop
xchg
fnstenv
mov
cli
jnp,pt
lahf
add
fsubrs
push
test
insb
push
addr16
ja
incb
clc
and
rolb
and
push
ss
pushl
dec
mov
mov
adc
xor
mov
dec
cltd
stc
cmp
mov
pop
or
push
and
pop
rclb
lcall
mov
repnz
cmp
push
xor
sti
ljmp
lock
icebp
mov
mov
clc
cmp
pop
std
lfs
jmp
into
pop
rolb
lods
mov
scas
mov
sar
fcomip
jp
dec
loop
neg
dec
icebp
jne
pop
mov
jg
inc
or
jb
push
cwtl
lcall
sub
fnstsw
xchg
mov
jns
cmc
imul
cmp
mov
or
add
pop
mov
push
lcall
clc
jmp
push
sti
xchg
popa
dec
dec
and
mov
jns
mov
jmp
sub
insl
jp
ljmp
sbb
cmp
das
fwait
stos
aaa
mov
into
mov
mov
leave
repnz
filds
mov
pusha
jmp
inc
sbb
repnz
stos
xor
jle
aaa
dec
int
adc
popa
loop
and
jecxz
adc
xor
cmp
lcall
pop
or
andl
dec
stos
or
jno
or
pushl
jl
mov
aas
mov
insl
roll
jns
adc
xchg
mov
ljmp
stc
cs
inc
sarl
xor
jmp
cltd
js
repz
jecxz
aaa
push
xor
cli
pop
mov
push
bound
and
in
cmpsb
out
clc
lret
push
mul
cmpsb
pop
push
pushf
addb
or
pushl
mov
or
cmc
movsl
pop
jl
out
adc
orb
cltd
xor
ljmp
xor
adc
xor
sbbb
or
in
jmp
lods
std
lods
cmpsl
ret
in
incl
jmp
pop
add
fwait
call
add
aad
pop
and
stc
inc
fisttpl
xchg
pushl
std
cltd
cmpb
push
mov
aas
sahf
int
mov
and
loop
xchg
sbb
push
incl
add
pop
lret
mov
dec
mov
popa
fsubrs
movsl
xlat
das
xor
mov
and
jne
or
inc
int
add
rcrb
cld
rcrl
mov
mov
mov
jno
decb
ret
test
int3
jb
movsl
lods
out
jns
dec
dec
stos
pop
stos
sub
lcall
add
inc
push
jbe
mov
and
aaa
stc
xor
adcb
lret
push
push
es
adc
pop
mov
insl
into
or
ss
stos
scas
ds
test
mov
incl
lcall
cmp
mov
cwtl
ljmp
adc
loope
add
push
mov
pop
dec
push
push
cli
or
test
push
xchg
movsb
ljmp
jb
fdivr
call
pop
sbb
test
dec
xchg
shrb
mov
inc
vpunpcklqdq
mov
ljmp
mov
stos
aas
mov
mov
rcl
leave
sub
ds
jbe
decl
jmp
jecxz
lret
movsb
sub
cwtl
dec
addb
xlat
cmpsb
into
push
sbb
test
mov
scas
icebp
mov
or
out
int3
sbb
in
mov
sahf
cmp
pop
mov
xchg
pop
repz
and
imul
pop
loop
jmp
into
movsb
decl
repz
push
push
popf
fcompl
rcl
inc
or
lret
lcall
cwtl
inc
mov
test
lds
mov
loopne
xchg
and
rcll
cs
orl
outsb
mov
mov
dec
ficompl
and
stos
je
jecxz
ljmp
xor
outsb
adc
and
jge
scas
out
lret
das
popa
clc
loop
mov
sub
icebp
cmp
mov
int
push
pop
sbb
inc
push
addb
das
test
fwait
cmpsb
gs
sarl
or
pop
idiv
decl
pop
inc
xchg
flds
sahf
inc
or
pop
sub
cmp
jg
cli
test
inc
push
dec
xor
pop
lds
mov
cmp
add
cmp
jmp
xor
sub
cli
mov
mov
mov
outsb
mov
lretw
pop
shl
je
in
repz
cs
scas
cmp
call
and
in
stos
pop
xor
fs
in
fcoml
push
fimull
std
jg
push
jno
jg
jge
jp
pop
dec
inc
and
push
lock
mov
xchg
jno
ljmp
call
dec
inc
sub
xor
xchg
sub
bound
cwtl
ljmp
scas
addr16
lea
fisttpl
fs
insl
add
add
lcall
mov
adc
push
das
inc
insb
cmp
shlb
daa
shl
aaa
add
decl
mov
push
clc
enter
inc
mov
push
pop
in
out
or
les
into
sbb
incl
test
arpl
mov
clc
adc
and
lock
mov
jno
mov
std
cmc
pop
pop
lret
add
sbbb
fisttps
xchg
stc
nop
stc
arpl
out
dec
adcl
xchg
nop
sbb
mov
sbb
clc
inc
daa
decl
ss
push
and
pop
lods
ds
repnz
ss
pusha
and
ret
fsubl
dec
scas
fwait
mov
xor
adc
sbb
mov
and
add
xor
call
jbe
dec
out
test
arpl
mov
js
aam
into
ss
cmp
lcall
test
jne
test
cmpsl
fidivrs
jg
out
popf
push
loope
dec
stc
sub
paddusw
cmp
jp
enter
and
inc
adc
jle
popa
mov
mov
jmp
imul
cmp
popa
lret
sbb
push
sub
sub
dec
jg
aaa
je
lods
jmp
xchg
hlt
rcr
jp
dec
icebp
nop
int3
ds
pop
xchg
dec
lds
lcall
adc
mov
cvtps2pd
adc
int
lcall
call
push
addr16
rcll
fsub
pop
jns
cwtl
mov
mov
mov
push
repnz
xchg
inc
xor
pop
add
call
push
fistps
push
mov
xchg
addr16
cmp
or
fsubrl
xor
js
lds
aaa
fnsave
call
out
mov
cmp
push
nop
rolb
xchg
and
or
outsl
jmp
cmp
add
std
jmp
lcall
mov
adc
jecxz
jg
mov
in
dec
aas
pop
sbb
adc
pop
insb
repz
mov
xor
aas
xchg
rcrl
xlat
decl
cmp
add
lods
mov
jo
es
repz
pushf
sub
sbb
sti
decl
ds
arpl
push
fidivl
jecxz
pop
ret
xor
lods
inc
fbld
mov
push
sbb
sar
jmp
inc
scas
test
mov
or
subl
cmp
add
cmp
adc
call
mov
fidivs
jnp
ds
rol
scas
xor
test
pop
jg
jmp
pop
dec
inc
mov
test
mov
cmp
or
sbb
call
jecxz
bound
jl
jmp
and
ss
iret
ror
outsb
data16
mov
data16
pop
cli
inc
out
dec
arpl
mov
inc
cli
mov
pushl
fldl
dec
pop
out
lret
insb
popf
test
mov
adc
adc
push
dec
or
pop
mov
cmp
cwtl
dec
fnsave
mov
movsl
mov
incl
hlt
jecxz
clc
data16
dec
xor
stos
xchg
jl
fsubs
and
mov
decl
xchg
add
cmp
outsl
jb
inc
push
ficoms
adc
loop
out
popf
mov
push
inc
and
leave
ss
pop
cmp
movb
inc
sar
in
cmp
xor
xchg
sbb
fsubl
in
push
push
jo
rcrb
add
ljmp
shrb
jmp
jp
ret
push
inc
jnp
cmpsb
sbb
mov
sub
sahf
call
cmp
ds
lods
into
clc
mov
mov
sahf
in
jl
stos
ficoml
incl
xchg
add
in
pop
add
fsubs
mov
lock
imull
sub
jg
xor
je
int3
jo
stc
cmp
xchg
or
xor
sub
cmpsl
pop
push
das
ret
jo
jp
call
or
popf
mov
inc
arpl
call
fldenv
lea
pop
mov
sahf
pop
stos
push
adc
aas
xor
xchg
push
cld
call
jp
aam
pop
sbb
pop
mov
sahf
iret
mov
xor
inc
dec
ljmp
ja
xor
shll
dec
and
lcall
lock
insl
mov
xorb
mov
xchg
cltd
push
fdivl
or
sub
in
pushl
xchg
dec
dec
mov
sub
icebp
sbb
xlat
inc
cwtl
mov
cmp
push
xchg
decl
call
sbb
subl
outsl
sarl
ret
mov
cmp
push
adc
xchg
xchg
xchg
adc
pop
daa
push
adc
data16
cmpsb
pop
add
pushl
rcrb
mov
loope
leave
mov
out
clc
test
jle
fstps
mov
sub
sarl
adc
sti
and
decl
cmp
mov
leave
adc
cmp
dec
mov
sbb
js
and
aaa
in
lock
xor
sbb
pop
out
inc
xchg
pop
ljmp
dec
inc
or
or
rol
gs
cmpsb
pushf
daa
adc
mov
mov
pmaxub
sbb
sbbb
mov
out
clc
clc
xchg
pop
aaa
das
or
and
or
es
ljmp
jmp
addr16
rolb
xchg
in
jge
and
cmpsl
fisubl
inc
push
das
cmpsl
jecxz
lcall
stc
out
inc
icebp
je
sub
orl
pop
mov
leave
xor
pop
lcall
test
mov
inc
in
add
sbb
repnz
sub
sub
mov
jns
adc
fnsave
inc
dec
pusha
into
dec
fistpl
call
jno
adc
xor
xchg
or
pop
xor
cld
push
pop
pushf
pop
jecxz
incl
push
dec
pop
push
shlb
inc
loopne
ret
in
xchg
aaa
je
dec
insl
cltd
ljmp
and
mov
out
inc
inc
mov
lea
jge
jns
pusha
es
jns
arpl
adc
clc
xchg
push
pop
mov
fwait
out
fiaddl
idiv
ds
xchg
jecxz
or
and
std
decl
xchg
jle
add
leave
inc
mov
mov
cs
movd
fdivp
sub
incl
cli
or
mov
mov
pusha
sub
pop
xchg
icebp
dec
dec
lods
divl
bound
mov
pop
aas
scas
xor
inc
adc
push
mov
cld
add
aas
push
lret
mov
mov
movsb
mov
push
popf
and
rep
ljmp
lcall
lret
ret
add
cmpsl
dec
sub
test
loope
pop
jmp
dec
and
orb
stos
sub
adc
popa
loope
xlat
arpl
mov
stos
xor
hlt
jp
mov
stc
inc
push
std
mov
mov
jg
call
fldcw
add
fsubrp
jb
aad
xor
mov
cmp
cmpsb
clc
mov
aaa
mov
cmpsb
hlt
outsl
mov
mov
inc
xchg
xchg
push
in
stos
sub
arpl
adc
jg
sub
sbb
sub
adc
mov
jle
cwtl
cmp
push
dec
or
inc
sub
push
ret
sti
adc
xchg
mov
outsl
pop
in
xchg
sub
cmp
xchg
push
push
xor
enter
cwtl
xor
and
mov
lcall
jmp
mov
sahf
loopne
mov
fsubl
jmp
test
dec
lret
outsl
or
incl
outsb
rorl
loope
add
arpl
cmp
adcb
mov
decl
pop
lods
xchg
out
popf
call
test
dec
push
inc
inc
insb
lahf
ljmp
orl
cwtl
xchg
add
sti
xor
push
push
push
int
push
les
push
pop
ljmp
imul
adc
dec
mov
or
pop
mov
cmpsb
in
loopne
add
ljmp
mov
arpl
pop
out
ret
rol
daa
dec
insb
push
jno
int3
incl
jg
sbb
es
mov
add
scas
cmp
ds
sub
test
sahf
mov
call
pop
shl
mov
shll
xlat
push
jnp
enter
mov
fists
push
icebp
mov
lcall
scas
cmc
mov
outsl
sub
aas
xchg
add
jmp
jno
xor
out
cmp
adc
gs
push
push
lahf
bnd
adc
scas
pop
jo
push
scas
aaa
jecxz
decl
mov
insl
lret
pop
jae
and
stos
push
ret
sbb
add
insl
and
push
jl
pusha
mov
repz
je
call
push
dec
out
shrl
sub
out
sub
movsl
xchg
xchg
pushl
inc
sbb
push
gs
mov
adc
ret
pop
mov
push
add
movsb
in
xchg
add
lock
incl
adc
jno
and
test
rorb
and
arpl
pop
rcl
xor
out
xchg
mov
jg
test
sbb
cmp
xor
and
repz
jae
mov
enter
int
or
xchg
mov
cltd
mov
pop
lret
add
decl
fwait
push
mov
stc
je
faddl
cmp
stc
js
arpl
ljmp
clc
inc
sbb
mov
mov
scas
mov
push
testl
adc
or
mov
xlat
xchg
jo
jo
mov
decl
pop
sti
sub
jb
xor
inc
adcl
movsl
pop
push
imul
mov
adc
mov
adc
add
add
test
dec
addr16
incl
int3
imul
lea
jp
pop
xchg
mov
mov
or
ljmp
lahf
aad
outsb
aas
pop
mov
in
inc
je
icebp
int
mov
incl
xchg
pusha
lods
xor
icebp
mov
shll
jle
cmp
add
lahf
je
dec
lea
push
lcall
aad
cmpsb
cltd
xorl
sbb
shll
std
mov
mov
xor
call
jmp
jle
hlt
jge
and
jl
jge
sub
stc
mov
inc
popa
jp
dec
mov
push
test
inc
aaa
ss
data16
stc
xor
popa
cmp
adc
xchg
mov
test
add
int
xchg
insl
cmp
jbe
lret
push
call
jmp
push
mov
add
call
sub
jae
jg
lods
mov
push
repz
nop
sbb
push
das
cli
decl
js
jecxz
pop
pop
mov
push
js
xor
and
push
cmp
pushl
fdivs
cmpsl
dec
mov
incb
pop
jge
scas
cmp
jl
sbb
dec
mov
xor
out
clc
xchg
sub
not
in
xchg
sub
call
push
xor
push
gs
pushf
sub
test
ror
lret
fnstsw
jbe
cmp
inc
cmp
jecxz
push
cmc
scas
arpl
inc
mov
sub
sti
inc
sub
clc
decl
cmc
mov
out
add
pop
dec
incl
jbe
xor
cmpsb
jbe
ds
lock
aas
mov
jl
inc
fmuls
ljmp
mov
xor
jmp
sbb
pop
shr
sbb
dec
add
inc
inc
pushl
add
loop
arpl
lods
lret
leave
push
or
lods
orb
xor
and
incl
add
add
cmp
fmuls
lea
imul
pop
xchg
fs
mov
mov
inc
ljmp
mov
repz
mov
sahf
pop
cmc
pop
cmc
mov
sbb
lahf
in
insb
mov
mov
pop
sub
lds
xor
xchg
push
rorb
andl
inc
sbb
push
jns
aad
xchg
cs
aad
push
arpl
lcall
or
aam
clc
jl
daa
dec
icebp
pop
mov
mov
roll
sub
pop
sbb
jno
pop
clc
ljmp
call
push
gs
mov
or
data16
and
out
clc
out
lret
pusha
sub
dec
adc
push
mov
sbb
test
call
adc
or
inc
push
mov
iret
xor
dec
inc
arpl
shlb
mov
bound
fistpll
or
sub
add
jmp
adcl
push
fmull
xchg
jno
sub
ljmp
cmp
dec
scas
pop
and
into
jl
aam
imul
pop
mov
push
adc
cs
lret
mov
add
lcall
sar
jp
fnsave
fdivl
inc
mulb
lods
and
cld
jle
fdivrl
std
nop/reserved
leave
divl
mov
int3
jecxz
mov
cs
fnstsw
enter
pushl
inc
outsw
aaa
xchg
shr
dec
push
mov
arpl
jnp
jp
jge
ljmp
je
pop
xor
sbbb
out
nop
xor
iret
shrb
nop
xor
and
pushl
push
enter
cmp
andb
mov
ljmp
dec
enter
sti
incl
mov
cmp
in
dec
mov
pop
dec
ss
mov
dec
cld
enter
incl
sbb
cmp
stos
stos
xor
arpl
push
push
int3
popa
dec
mov
push
cmp
cmp
addr16
dec
ja
in
sbb
rorl
mov
mov
mov
rcl
orb
popa
adc
pusha
aam
jmp
sub
sub
je
fildll
pop
out
insl
aam
fwait
cld
add
xchg
sti
dec
pop
xlat
shlb
mov
ret
fcomip
pushl
in
inc
divl
mov
mov
push
and
addr16
jge
jmp
hlt
mov
mov
sarl
test
ljmp
fcmovnb
and
decl
add
push
jb
dec
cmpsb
jno
pop
icebp
mov
roll
call
arpl
push
mov
mov
sub
mov
jbe
inc
in
push
pop
fsubrs
cltd
daa
jecxz
and
les
data16
jp
push
fwait
gs
in
clc
mov
ret
pushf
mov
cld
lcall
pop
sbbl
mov
jecxz
js
xor
aad
mov
shld
insb
loop
shrl
frstpm(287
jae
je
xchg
dec
jno
outsl
cli
lcall
mov
xchg
push
sbb
add
jb
in
jp
fmull
inc
in
and
in
xchg
push
repz
mov
sti
add
inc
mov
jns
or
cmp
xchg
das
fs
xchg
mov
mov
pop
xchg
or
lahf
inc
mov
mov
js
pop
push
cmpb
pop
gs
fisubrl
ret
daa
mov
lret
pushl
incl
xorl
pusha
push
mov
adc
adc
pop
int
ud0
jg
scas
and
hlt
loopne
test
sbb
test
lea
cmp
mov
mov
sub
aad
or
andl
loopne
insl
adc
incl
add
hlt
xor
push
pop
jecxz
pop
pop
lret
adc
das
adc
sbb
push
sub
decl
sub
xor
jno
loopne
push
jl
nop
inc
popf
adc
das
jbe
aaa
jge
cmp
out
leave
mov
mov
in
shll
fwait
cmc
add
jnp
pop
jnp
ss
imul
mov
mov
mov
cmpb
jge
mov
mov
clc
jmp
jg
cmpsl
cmp
loope
pop
idivl
decl
mov
jg
nop
repz
out
mov
push
stos
cmc
ljmp
and
insb
sub
call
loopne
sub
int3
xor
mov
aaa
push
rcll
fsts
shrl
mov
jmp
rcr
std
pop
push
test
cmpl
mov
mov
outsb
int3
fadds
repz
es
jecxz
jl
out
cmp
fcoms
push
mov
xchg
dec
jmp
jnp
sub
push
lods
shrb
dec
jg
popa
pop
jl
jle
xchg
sub
ljmp
cmpb
mov
cmp
and
lock
mov
push
call
int
dec
mov
dec
aaa
lahf
incb
add
jmp
sub
mov
or
lods
ljmp
add
and
push
ret
push
fadds
sbb
jno
in
and
cld
std
rcr
stos
loopne
adc
mov
add
decl
mov
std
inc
xor
test
sub
xchg
sub
mov
daa
js
xor
movsb
mov
xor
test
aam
dec
xor
call
mov
cmp
icebp
dec
xor
push
stc
roll
lock
fcomip
xchg
lea
push
or
mov
sub
cwtl
aad
add
mov
cld
out
leave
das
dec
cmpsb
jp
dec
mov
jge
sbb
mov
jb
sub
add
sub
add
add
dec
adc
sub
iret
imul
jnp
push
mov
cmp
jge
sub
mov
mov
syscall
and
cmpl
lods
mov
in
cwtl
sar
xchg
inc
push
bnd
cmpsl
rcrl
insl
imul
lods
test
aaa
gs
mov
cltd
adc
nop
imul
cwtl
inc
arpl
out
out
je
in
push
popf
arpl
addr16
push
lds
mov
push
cmpsb
sbb
jl
ret
inc
insl
mov
mov
xor
decl
test
out
test
in
cmp
ds
jmp
fisttps
inc
aas
cmpsb
fmul
imul
dec
mov
add
xchg
sub
cmp
in
jbe
cmpsl
mov
push
lret
dec
inc
bound
sub
pop
decl
push
ret
xchg
or
clc
sbbl
insl
cwtl
test
sub
sbb
arpl
mov
pop
inc
fsubp
jl
outsb
aas
test
adc
or
xchg
into
jno
mov
das
mov
mov
call
cwtl
in
pop
pop
pop
hlt
ljmp
mov
into
push
dec
xchg
into
push
pushl
cld
mov
xlat
lock
rcr
stc
xor
xchg
pushl
jecxz
pop
sub
gs
xchg
aam
dec
pop
rcrb
xchg
fwait
jnp
sbb
adc
mov
mov
dec
mov
les
je
mov
adc
pop
test
bound
sub
mov
lcall
es
xchg
enter
cmp
push
xchg
daa
arpl
xchg
sbb
xor
das
pop
call
aas
inc
xor
xchg
push
add
aad
add
in
jb
fiadds
pop
or
sbb
pop
add
adc
fstpt
mov
adc
pushf
int
sar
dec
popf
out
dec
ljmp
jbe
mov
push
icebp
jb
jns
jmp
add
mov
dec
daa
ffreep
xor
mov
push
jbe
outsb
jp
incl
push
lcall
xor
or
mov
outsl
loopne
lods
xchg
out
dec
fstpt
scas
les
sar
clc
call
cwtl
out
cmp
f2xm1
rclb
mov
orl
call
insb
sahf
sub
pop
add
mov
out
ljmp
sti
cltd
sub
mov
sub
push
loopne
mov
adc
jecxz
sbb
lods
js
push
mov
inc
loopne
sub
lcall
jbe
cmpsb
xchg
shrl
lcall
test
pusha
cmpsb
dec
mov
std
sbb
mov
mov
inc
cmc
cmpsl
lret
xor
call
sbb
clc
xchg
xchg
cmpsb
icebp
sar
inc
push
jecxz
xchg
mov
and
outsb
cmp
out
push
cwtl
jb
negl
clc
lcall
sub
xor
mov
add
bound
inc
dec
lcall
pushl
jns
popa
je
faddl
push
out
mov
push
xlat
mov
inc
pop
lcall
mov
pop
cmp
les
mov
jne
cmp
push
cwtl
stc
mov
jae
std
jmp
push
sahf
sbb
out
sbb
cmp
gs
add
jge
push
ja
popa
stc
push
pushl
pop
scas
addr16
jg
shr
jae
push
andb
in
int3
rclb
mov
decl
push
and
outsb
inc
ja
cmp
mull
arpl
movsb
mov
hlt
hlt
push
lock
jmp
out
shl
cs
push
xlat
lods
dec
mov
jl
incl
jo
popa
mov
sbb
nop
sub
pushf
sar
ljmp
jmp
cmp
insl
idivb
mov
or
xlat
and
mov
lods
jg
push
adc
incl
cwtl
xchg
push
xchg
mov
inc
test
mov
rcll
cmpsb
pushl
mov
test
add
movb
mov
push
std
push
outsb
or
mov
scas
ljmp
jo
jle
push
dec
aam
incl
dec
pusha
movsl
sbb
xchg
inc
int3
mov
jp
jle
mov
mov
add
cmp
push
popa
pop
ss
jb
cwtl
std
jl
ret
inc
push
sar
decl
lods
push
ret
and
imul
add
add
mov
cmpsb
push
inc
lret
dec
testl
xchg
stc
fbstp
shlb
lock
leave
dec
add
movsb
adc
pusha
sbb
scas
inc
xchg
dec
cmp
fwait
mov
insl
insl
outsb
jp,pt
aas
js
outsl
cmpb
repz
aas
pop
test
adc
add
les
into
xchg
xor
ds
repz
ljmp
add
mov
dec
push
jg
shrl
mov
pop
mov
aaa
out
movsb
subb
jb
sub
aaa
add
push
mov
sbb
sbb
insl
pop
loopne
out
clc
out
int3
push
cwtl
fs
lahf
xor
cmp
iret
sub
das
jns
in
mov
jns
and
sti
mov
mov
xor
or
pop
jge
jp
pop
call
jg
sbb
pusha
xor
xchg
or
lds
loop
adc
lahf
call
and
jmp
push
mov
cmp
jb
fs
fsts
jp
and
fs
in
clc
adc
outsb
ja
mov
xlat
inc
push
loop
adc
jg
jp
loopne
cwtl
test
pslld
icebp
ret
adc
jns
jecxz
aad
and
cmpsl
sub
jns
pushl
pop
sub
sbb
and
orb
rolb
sub
xor
call
sbb
rcl
aad
xchg
mov
add
adc
push
cmpsl
mov
dec
ljmp
dec
add
push
das
stos
loop
and
adc
xchg
jmp
stc
ficompl
xchg
sub
adc
adcb
pop
xlat
jo
fwait
sub
lock
call
push
dec
xor
in
daa
rclb
rclb
mov
inc
fisttpl
or
stc
sbb
jns
push
sti
mov
je
sub
ret
negb
xchg
xlat
fdivrs
cmpsl
cs
stos
jmp
cltd
adc
xchg
add
or
sti
ja
adc
inc
pop
mov
scas
filds
add
adc
pop
xor
xor
lea
add
fs
mov
inc
dec
xorl
fisubrl
aas
ds
fstps
movsl
cmp
popf
stos
mov
sti
or
call
pop
sub
cmc
inc
je
rolb
or
jmp
inc
cmp
cli
test
mov
aas
jg
jmp
mov
dec
jge
cmp
mov
sbb
mov
call
inc
pop
pop
sbb
shll
jno
lahf
loopne
dec
push
inc
negl
in
adc
jmp
int3
jle
xchg
jb
rcrb
mov
push
mov
sbb
mov
jecxz
lcall
jg
arpl
add
outsb
cmpsb
jmp
hlt
mov
addr16
mov
mov
jb
fidivs
std
push
popa
xorb
sbb
inc
mov
push
inc
int3
pop
scas
jnp
popf
dec
sar
dec
mov
sbb
loope
add
push
scas
filds
pop
dec
adc
mov
push
popa
xchg
pusha
rolb
mov
mov
and
popf
cmp
sbbb
push
das
dec
pop
pop
xchg
les
insb
clc
call
pop
jo
pushf
pop
fwait
push
sarl
pop
jbe
je
cmc
sar
inc
cmpsb
or
jp
sbb
mov
pushf
aas
repz
cli
inc
cltd
fists
xor
push
les
out
call
ret
mov
lahf
ror
xor
cld
mov
lahf
or
shll
pop
ret
call
jnp
popf
lahf
mov
mov
nop
dec
add
loope
cmc
lods
loop
das
lahf
xchg
sti
inc
pushl
insl
xor
aad
inc
inc
mov
push
xor
aaa
jmp
sub
ret
popa
int3
out
mov
jl
and
pop
mov
movsl
push
mov
mov
repnz
dec
arpl
scas
add
js
std
pushl
repz
add
sbb
mov
clc
push
loop
xchg
lods
lcall
mov
push
jno
xchg
add
insl
es
mov
stos
pop
push
xchg
incl
in
nop
and
sbb
into
scas
sub
das
cwtl
call
notl
jg
jno
rcll
cmp
in
xchg
shll
push
outsl
lock
inc
inc
ds
daa
cmp
jns
fisttps
es
fcomp
add
push
pop
jae
inc
inc
addr16
pushl
scas
pushf
inc
or
jno
bound
sbb
aas
push
sbb
xor
movsl
sahf
test
pop
je
mov
and
stos
xchg
ljmp
int
cld
mov
aam
add
or
xor
jmp
pop
push
aaa
mov
inc
fdivrs
mov
mov
mov
out
or
in
pop
lret
push
jmp
push
lret
je
ror
xchg
loop
mov
and
mov
cli
decl
jae
shrb
jg
adc
or
ficomps
xchg
sbb
aaa
cld
scas
cli
jle
pop
or
sbb
stos
ja
movsl
dec
jmp
push
jmp
mov
ljmp
push
xchg
loopne
lcall
and
adc
inc
out
test
popfw
int3
push
daa
enter
lahf
mov
cltd
lods
stos
sbb
jmp
sub
pop
hlt
or
cld
out
aas
aad
and
iret
out
push
and
jl
out
sti
insb
lds
mov
pop
cltd
xor
loop
stos
scas
in
fists
int3
in
mov
std
lcall
sub
mov
insl
push
cmp
xor
insl
ret
jmp
push
jno
scas
cmpsb
hlt
xchg
sbb
subl
xor
pop
sub
fdivr
jmp
xchg
movsl
popf
inc
std
and
jno
sub
call
sub
pushl
cmp
test
int
push
stos
adc
xchg
pusha
xchg
or
fbstp
fnstenv
push
pop
jns
push
shrb
sub
sub
or
bound
fdivl
icebp
mov
ret
adc
ds
std
ds
loope
adc
ret
lock
js
mov
push
push
dec
inc
out
mov
hlt
sub
sbb
inc
mov
adc
push
call
into
pop
mov
fisubs
mov
rcl
sbb
jle
paddw
movsb
pop
out
mov
decl
and
ficoms
mov
xchg
shl
push
stos
cld
mov
add
cltd
clc
cs
sub
sysenter
gs
popf
pop
lahf
cli
ljmp
arpl
cs
lahf
outsl
ret
jmp
in
stc
shl
xchg
lods
push
mov
jp
incl
orb
cmp
dec
inc
test
mov
adc
mov
xor
fbld
jge
movsb
and
out
dec
sub
pop
pushf
in
testl
call
add
and
mov
ja
sahf
mov
dec
mov
mov
int
jbe
xchg
mov
jmp
daa
in
gs
outsb
lods
inc
mov
mov
in
mov
out
idiv
std
mov
int
fisttpll
inc
sbb
aam
adc
cmp
aad
mov
decl
popf
adc
lret
pop
sub
or
mov
scas
mov
mov
clc
cmp
insl
mov
push
mov
loope
popa
mov
mov
xorb
jp
and
in
xlat
sahf
push
ljmp
mov
loop
dec
lret
and
xchg
push
push
loope
pop
fadd
push
mov
jg
dec
jnp
stc
stos
mov
repnz
enter
and
dec
aas
dec
ficoms
decl
leave
mov
cs
mov
mov
les
cld
outsb
push
mov
fbld
and
cs
sub
add
pop
int3
movb
ljmp
xchg
fnstcw
mov
adc
out
pop
andl
push
mov
adc
int
add
mov
xlat
adcb
add
les
mov
sub
jmp
push
xor
lret
push
ret
pushf
and
addr16
iret
cmp
xchg
inc
fucomip
cmpsl
push
cmp
fisttpll
sbbb
test
jae
rolb
add
mov
inc
xchg
inc
repnz
lret
cs
mov
fbstp
pop
out
push
scas
or
jmp
pmaxsw
mov
std
pop
lahf
inc
in
aas
inc
jmp
ljmp
cmp
sub
nop
add
sub
jle
cmp
incl
add
jl
dec
cmp
or
fisubrl
sti
stos
adc
dec
inc
adc
pushl
mov
ja
cmp
data16
push
push
iret
test
in
adc
ret
imulb
dec
pop
loopne
pop
xor
jg
push
mov
mov
inc
fdivr
jg
mov
inc
push
xchg
pushf
lret
xchg
push
call
inc
inc
jecxz
xchg
leave
mov
stos
test
jno
incl
mov
push
mov
inc
aas
and
scas
fdivl
mov
ljmp
sbb
push
sbb
jnp
xchg
dec
sub
pushl
fldt
mov
sbb
jne
mov
and
sbb
jp
divb
cli
inc
nop
repnz
xor
sub
inc
fwait
sbb
ljmp
sub
nop
stos
stos
push
cmp
ficomps
aaa
adc
pushf
nop
into
mov
shrl
mov
push
jg
loopne
jo
mov
pushl
jno
cmpsl
imul
rol
lock
sub
add
xor
add
fcmovu
andb
jmp
pop
in
outsb
outsl
lret
loop
sbb
je
or
push
pop
push
repz
lcall
outsb
xor
jnp
stc
add
xor
jne
cmp
xor
jne
sub
pop
incl
cld
push
fidivrl
ss
and
arpl
js
fidivrl
in
sar
ret
push
into
popf
cli
cli
xor
dec
mov
or
inc
jae
test
lock
jae
movsl
xor
cmp
xchg
add
fs
ljmp
adc
mov
dec
jnp
mov
test
out
push
je
leave
movsb
ss
mov
call
and
inc
xor
lret
push
repz
mov
push
popa
movsl
xlat
lods
xchg
jns
pop
fmulp
roll
inc
jb
pop
sub
xor
rcrb
out
add
dec
leave
lods
or
bound
mov
sub
mov
das
mov
pop
mov
cld
lods
int
cli
pop
mov
jo
enter
sbb
sbb
imul
fidivs
repz
push
shl
and
jmp
cmp
inc
add
and
shll
rcrl
jmp
jae
jo
cli
cmp
mov
std
imul
pushl
push
xorb
xor
inc
mov
shll
outsl
fwait
cmpsl
mov
sti
push
jb
shl
scas
dec
sahf
mov
pushl
mov
or
and
xchg
xchg
jl
jg
sbb
popf
loopne
stos
repz
mov
pushl
and
xchg
and
pop
lret
mov
aas
xor
sahf
add
xchg
pop
ljmp
loopne
inc
rol
inc
ds
jne
and
xchg
dec
test
ljmp
fdivl
pushf
inc
dec
xchg
xor
push
pusha
cld
adc
testb
fidivs
cmc
cli
add
ds
jae
lods
imul
dec
sarb
movsb
pushf
fcomi
test
fs
jmp
mov
sub
push
jno
dec
ffree
fs
ret
test
xor
fwait
jg
add
xor
lods
push
inc
push
xchg
pop
or
jle
test
sub
call
pop
push
repnz
adc
gs
fiaddl
cmc
sub
sbb
int3
adc
dec
jmp
inc
mov
cmp
mov
sti
dec
push
jns
outsl
mov
imulb
stc
aad
loopne
call
pushf
out
rolb
push
sub
jns
sbb
lods
aas
jno
or
mov
mov
cmpsb
mov
cmp
call
lret
into
xor
pop
push
mov
pop
loopne
xchg
pop
shll
xchg
xor
mov
decl
psubusw
enter
or
and
xchg
xor
mov
jno
decl
mov
xchg
cmp
repnz
and
jg
iret
js
xor
sub
dec
nop
pop
cli
js
pop
les
jae
imul
pushl
lcall
xchg
cwtl
add
sub
mov
or
int
je
mov
pop
or
loopne
sub
mull
mov
mov
pushl
cmpsb
sub
and
push
fsts
or
subb
addr16
cmp
lcall
jmp
jmp
into
lods
jge
inc
xorb
in
push
add
in
mov
ljmp
sbb
sub
push
bound
icebp
lahf
movsl
in
idiv
fdivp
outsb
ljmp
es
lahf
fcmovne
sub
dec
rorl
ja
aad
sbb
fisttps
mov
xor
les
add
sub
incl
inc
imul
or
pop
cmp
iret
inc
inc
mov
cmovge
cmc
rcl
std
ljmp
repz
inc
inc
xchg
mov
sub
add
inc
test
push
ds
cmp
jns
cmc
inc
mov
mov
mov
adc
sub
mov
jno
popf
sbb
aam
push
lea
dec
push
and
addb
bound
xor
imul
clc
fists
out
sub
mov
test
icebp
test
clc
mov
int3
mov
loop
cmpsb
or
ljmp
mov
pop
ds
push
imul
int3
sub
push
adc
mov
ja
rcll
nop
data16
pop
jmp
dec
call
out
lret
mov
test
jae
repz
cld
scas
or
inc
lock
lcall
jno
cmp
mov
mov
cltd
scas
stc
xchg
jge
out
sbbb
mov
cltd
add
pop
jns
jns
or
cmp
pop
out
pop
inc
xchg
out
clc
jmp
xchg
adc
push
cmpsb
pop
int
or
rorl
in
and
imul
pop
or
adc
test
mov
sbb
shr
push
cmp
pushl
loopne
fldlg2
mov
xchg
loop
sbb
push
in
nop
out
or
testl
sub
jmp
cmc
mov
aas
cmp
pop
cmpsl
dec
xor
mov
test
xchg
adc
bound
test
int
cld
call
ret
test
sti
or
dec
hlt
cs
icebp
out
xchg
out
fwait
lds
ja
call
cmp
or
pop
clc
in
jo
sbb
mov
mov
and
shll
inc
cmp
int3
sub
mov
jl
aad
adc
push
xor
push
sbb
or
incl
mov
mov
mov
cmc
jp
fcompl
mov
mov
adc
pop
mov
loope
lret
mov
dec
pop
repnz
ds
mov
iret
loop
movsb
lcall
or
jle
xchg
dec
inc
or
lods
incl
out
clc
pop
push
cwtl
cwtl
adc
or
jecxz
jl
cmp
dec
inc
lahf
movsb
fwait
xor
and
push
inc
jnp
lcall
and
xchg
cwtl
adc
or
addb
xchg
cmp
mov
sbb
dec
incl
push
popf
add
or
mov
pop
stc
sub
mov
mov
jge
mov
inc
aad
xchg
inc
in
mov
pop
repnz
pslld
popa
pop
xor
cld
push
inc
add
incl
push
dec
mov
add
mov
xchg
lcall
adc
pushf
dec
push
iret
cld
inc
cld
jle
adc
pop
scas
adc
scas
scas
int3
jns
lret
pop
imull
inc
mov
mov
jo
lock
or
sahf
outsb
out
mov
stos
test
ljmp
inc
cmpsl
adcl
loopne
mov
cli
mov
adc
js
xor
cmp
idiv
push
icebp
rcrl
ljmp
subb
stc
dec
mov
fstpt
mov
push
xchg
inc
pop
lcall
mov
orl
daa
sub
sbb
loopne
pushl
hlt
dec
xchg
jle
jb
inc
mov
jmp
lret
mov
sahf
adc
mov
in
add
shl
dec
fs
and
pushl
negb
push
jecxz
hlt
jbe
and
je
fldcw
shlb
outsl
lock
push
insb
sub
pop
or
in
add
add
test
sbb
les
push
push
mov
repz
data16
repz
jp
or
mov
arpl
hlt
in
inc
push
inc
cmp
jno
fwait
popa
imul
insb
xor
nop
add
jle
lods
mov
jecxz
jge
call
leave
std
lret
jecxz
pop
daa
mov
movsb
push
push
and
shlb
jns
cs
cmp
insl
movsb
cld
jg
pop
dec
iret
imul
xchg
or
sub
jg
lods
push
test
mov
push
add
adc
push
xchg
xor
push
addb
pushl
dec
inc
sahf
mov
in
and
pop
scas
aad
pop
lahf
push
cwtl
adc
je
sub
jns
sub
mov
xor
loopne
or
mov
adc
test
push
loopne
outsl
loop
ljmp
ror
cmpb
insb
adc
sub
sub
popa
jge
adc
ljmp
bound
jne
call
jno
push
adc
mov
xchg
dec
jge
cld
xchg
repnz
and
dec
jae
stos
dec
into
push
adc
in
loopne
jae
test
outsl
or
jae
ret
xor
out
jmp
jno
out
aas
pop
pop
dec
mov
sub
cmp
inc
push
push
in
shll
xor
jl
mov
add
push
xor
mov
mull
xchg
aam
cld
jg
decl
jle
das
sahf
pop
or
xor
ret
jne
rcll
jb
and
mov
lock
int3
push
dec
xchg
or
cmp
sbb
nop
push
test
shrl
pushl
lods
mov
push
lods
fsubrs
push
xchg
jg
inc
add
push
fadds
lds
cmp
adc
mov
pop
lock
ljmp
mov
cs
add
in
dec
aas
xchg
daa
adc
test
mov
inc
dec
jbe
enter
pop
pop
mov
les
jg
sar
adc
not
int
mov
push
iret
pop
sub
mov
decl
daa
mov
fs
lods
fwait
push
adcl
sub
mov
dec
push
and
sahf
push
mov
xchg
nop
adc
inc
stos
pop
inc
pop
lcall
mov
cli
mov
idivb
mov
jne
and
call
out
cmpb
sbb
out
inc
xchg
adc
pop
iret
xchg
hlt
sub
mov
inc
ret
fnstsw
lods
pop
inc
xchg
push
cmp
mov
int
cmc
aad
xchg
inc
lcall
lcall
mov
imul
lahf
sub
fcmovbe
nop
add
mov
fnstcw
cmc
jmp
and
mov
inc
or
xchg
mov
dec
xor
push
and
cmpsl
cmp
loop
icebp
jmp
dec
inc
inc
mov
in
icebp
push
cmpsl
xor
ror
faddl
call
mov
movsl
jns
xor
adc
jbe
ljmp
pushl
daa
and
push
ds
xor
xor
cmc
stos
dec
stos
fdivrs
out
xor
cmp
scas
cli
lcall
adcb
pushf
test
dec
sub
mov
sahf
insl
mov
jno
incl
js
mov
cli
lods
and
adc
rcll
pushl
aad
or
xor
or
pusha
cmp
gs
data16
cld
jmp
pop
clc
jl
sarl
mov
mov
inc
pop
push
in
jno
ss
js
push
sub
cmp
jp
mov
scas
mov
mov
push
test
xchg
sub
daa
inc
adc
pushl
repnz
and
xor
out
nop
adc
cld
test
xor
cltd
pop
fdivl
sbb
ja
xor
xchg
mov
insb
loope
sub
push
jle
ret
add
das
xor
je
mov
andb
mov
pop
cmp
outsb
mov
mov
sbb
stc
xor
hlt
or
call
pop
loope
jae
loope
pop
push
push
cli
mov
jns
pop
out
pop
sti
ljmp
or
arpl
cmp
outsl
adc
pop
aaa
jne
insb
dec
mull
pop
inc
pop
jl
out
fwait
add
cmp
movsl
cmc
push
fists
dec
testb
in
fimuls
mov
scas
test
and
repz
cmp
fcom
loopne
out
xchg
ljmp
clc
ss
mov
rcr
mov
mov
sub
sbb
lock
pavgw
and
sbb
cmp
and
mov
add
test
cmp
xlat
mov
xchg
stos
xchg
rcrb
shrb
decl
jo
jnp
popf
jne
mov
test
int
test
ljmp
pushf
movsb
popf
ss
rcll
adc
mov
sbb
rcll
sub
das
sar
adc
or
add
pop
fildl
lahf
jmp
pop
mov
rolb
out
pop
or
gs
sbb
cmp
test
mov
pop
insb
loopne
arpl
pushf
push
cmp
sub
lret
out
aaa
scas
mov
incl
adc
outsb
pop
nop
push
mov
sub
hlt
pop
pop
mov
ss
cmpsb
sar
mov
loopne
cmpsb
ljmp
jae
lahf
aam
or
jg
push
roll
xchg
cltd
pop
je
out
mov
je
sbb
lods
js
stc
inc
call
cli
lcall
js
jo
aam
sbb
add
pushl
or
dec
insl
xor
mov
pop
outsl
xchg
out
inc
dec
fistpll
call
adc
faddl
mov
mov
cltd
jns
incl
lcall
fidivs
scas
dec
jae
movsb
cmpl
fistpl
leave
xchg
test
inc
push
add
fs
sti
mov
pop
shl
push
xor
insl
xchg
pop
out
adc
and
add
lcall
scas
jne
cs
shlb
lcall
push
popf
fistpl
ss
mov
out
cmp
inc
pop
into
in
mov
adc
push
imul
incl
test
or
inc
shr
sti
pop
dec
movsb
fdivl
hlt
jmp
jg
dec
lods
cwtl
jo
xor
fstpl
pop
pop
add
mov
inc
sar
mov
int3
scas
popf
or
pop
cli
fldenv
pop
sbb
mov
sbb
ret
aaa
scas
incl
adc
push
in
in
aam
xor
pop
sti
lods
scas
je
mov
decl
inc
inc
xchg
popa
xor
repz
popa
sub
lret
cmp
sbb
lock
xchg
out
cli
mov
or
popf
jns
inc
cli
pop
xor
pushf
mov
sbb
lods
stos
push
decl
clc
ds
or
mov
scas
js
sub
adc
fimull
jnp
lods
rcrl
fxch
loope
in
pop
jmp
mov
ljmp
dec
stos
adc
xor
xchg
cmp
call
sbb
mov
adc
notb
mov
xor
jg
add
leave
cmp
inc
pop
loop
cmp
mov
fildll
add
cwtl
fadd
enter
gs
call
xor
cmp
inc
mov
pop
add
clc
data16
enter
icebp
jo
stos
lahf
or
dec
or
adc
fwait
aas
xchg
sar
cld
pushl
fwait
ds
fwait
sbb
cld
sub
outsb
popa
mov
dec
cs
cli
in
jmp
popa
inc
and
testl
test
les
cmp
add
xorb
gs
inc
in
cmc
das
mov
repz
or
push
cwtl
jle
aam
out
jge
incl
xchg
push
mov
jbe
xor
fwait
sub
insl
push
push
out
push
cli
jmp
cmp
pusha
xchg
jmp
jb
int3
or
mov
pop
jl
or
sub
outsl
mov
fs
mov
push
adc
test
push
movsb
pop
pop
daa
inc
icebp
mov
push
imul
sbb
mov
mov
scas
call
outsb
dec
mov
mov
mov
jae
push
shl
sbbb
or
call
std
sub
sahf
sub
adc
dec
xchg
rolb
mov
stc
dec
arpl
jg
pop
sub
ftst
aas
sub
adc
iret
sti
rcll
outsl
jg
xchg
mov
jno
out
fidivrs
add
or
mov
jo
jmp
mov
popa
sar
clc
insb
imul
add
xchg
pop
gs
lock
pushl
lret
call
push
out
xorb
pop
dec
add
ficompl
fsubrl
outsl
xlat
decl
jle
icebp
dec
ds
out
loope
push
out
xor
push
cld
jmp
jg
leave
cmp
jge
stos
iret
mov
sbb
mov
js
sub
dec
cmp
jmp
sbb
and
cli
dec
ret
xchg
nop
es
fdivl
call
cwtl
dec
jg
xor
pop
jp
lret
jge
inc
sub
hlt
or
cmpsb
decl
add
pop
cwtl
adc
or
xchg
jbe
cmp
idivb
fmul
pop
cmc
loop
fiadds
fimull
mov
jo
lods
sub
mov
jg
ja
bound
adc
lods
cs
testb
aaa
cmp
dec
daa
sti
mov
out
js
mov
jmp
cmp
pop
div
and
int
leave
dec
in
cltd
or
ret
roll
into
jmp
repnz
jp
xchg
adc
shll
arpl
mov
fidivrs
decl
pop
insl
sbb
scas
leave
or
subb
sub
sub
pop
add
ret
lcall
fwait
mov
out
das
mov
adc
xchg
and
pop
stos
incl
xchg
jge
fs
fs
insb
movsl
cli
pushf
add
inc
pop
xor
in
inc
xchg
scas
dec
sar
lcall
subl
xchg
push
not
jecxz
cmpsb
mov
rorb
cmpsb
mov
xchg
decl
aam
pop
xchg
jecxz
add
sbb
cmp
out
sbb
mov
and
pop
lret
rolb
decl
ljmp
cld
mov
inc
sub
or
ss
mov
test
insb
xchg
ja
inc
mov
fmul
dec
xor
fadds
lret
push
fabs
fisubs
rcrb
outsb
mov
ficoms
push
aam
ret
inc
data16
out
clc
mov
sub
xor
push
dec
cs
mov
in
fwait
or
cli
out
add
cmp
out
and
pop
outsl
clc
incl
push
cmp
icebp
lods
or
in
sbbl
push
xor
and
dec
andl
jge
mov
cmp
mov
call
dec
fs
push
dec
lret
inc
scas
sub
add
mov
sbb
shr
in
imul
mov
stos
data16
lcall
aam
clc
test
fisubrs
adc
xor
cmc
xchg
inc
ljmp
addb
and
sbb
rcrl
sub
out
decl
pop
pop
imul
into
xor
lods
nop
out
addr16
mov
and
pop
out
xchg
test
incl
push
insb
dec
jo
xchg
mov
out
jb
pop
and
sub
cld
pushl
or
inc
movb
rcrb
cmp
into
repnz
aaa
mov
aad
mov
mov
add
outsb
out
lcall
jg
pop
xchg
idiv
mov
fdiv
pop
lock
lods
popl
mov
pop
add
outsb
out
out
ljmp
enter
dec
mov
lret
inc
jns
adc
pop
or
xchg
cmpb
jmp
mov
sbb
mov
leave
adc
pop
pop
int3
cld
mov
mull
inc
inc
fisubs
push
loopne
push
loop
jns
test
imul
pop
push
and
jecxz
mov
inc
pop
insb
iret
mov
inc
in
xor
aas
sbb
inc
or
scas
notl
clc
cmp
add
call
shrl
ds
cmp
adc
pusha
push
sti
inc
call
and
mov
fists
lahf
ss
loop
xchg
lldt
fsubrl
sbb
mov
mov
addr16
in
cmp
mov
lea
sub
call
mov
xchg
inc
jp
and
pop
lods
adc
xor
lret
sbb
hlt
jmp
repnz
cmp
movsl
mov
loopne
lea
adc
sbb
sub
xchg
push
cmp
enter
ja
add
andb
sar
or
adc
and
cmc
cmp
and
push
xchg
and
es
popa
or
jbe
sub
sar
or
mov
xor
and
cs
lea
jmp
idivb
addr16
pop
add
pop
and
cmp
cmp
stos
idivb
cmpb
clc
lcall
xchg
add
adc
push
fucomp
mov
jmp
or
pop
sbb
call
mov
icebp
xor
add
and
inc
sbb
add
and
stos
filds
gs
sarb
outsb
adc
arpl
outsb
dec
pop
dec
mov
loope
dec
loop
dec
xchg
pop
mov
lahf
mov
jmp
xor
cld
mov
mov
aam
stos
push
pop
push
mov
je
pop
mov
mov
cmp
incl
test
pop
in
shlb
pushf
jge
ficoml
gs
xchg
dec
ljmp
scas
fstpl
loopne
xchg
push
test
jnp
adc
jmp
rclb
inc
ret
sub
adc
and
adc
cmpsb
ret
ljmp
pop
fldl
cmc
inc
jl
lds
xlat
sbb
sbb
call
test
in
pop
pusha
and
jae
pop
pop
rclb
nop
and
push
sti
inc
push
pop
dec
scas
sbb
adc
call
mov
adc
cltd
out
dec
shll
test
xor
or
test
call
adcl
movd
add
push
mov
pop
loop
or
jmp
dec
mov
xchg
js
clc
imul
stc
mov
clc
sub
test
ret
pop
cmp
jnp
push
dec
or
incl
out
jp
xchg
bound
loopne
lods
and
out
stc
jnp
ja
mov
mov
call
jg
test
das
dec
adc
sub
adc
arpl
clc
or
mov
dec
aad
mov
aaa
push
xchg
stos
daa
mov
mov
out
mov
cld
addl
scas
add
jp
mov
mov
pop
mov
mov
repz
pop
adc
lds
jo
aas
lret
push
pop
xor
outsl
clc
pushl
xchg
test
fidivs
popa
pushf
dec
in
fidivrl
xor
jne
call
fwait
jge
or
adc
dec
cld
mov
shrl
jecxz
addr16
jle
and
lcall
mov
js
outsb
adc
adc
mov
movsl
sbb
fcomip
inc
fadd
cmp
ljmp
pop
mov
mov
lcall
ljmp
jl
pop
dec
sub
jne
and
or
xchg
dec
push
lret
std
loop
movsb
lret
sahf
lret
pop
add
push
adc
incl
cmp
outsb
enter
test
fdivrp
jmp
sbb
out
insb
mov
fsubrs
sub
cmp
adc
movsl
pop
loope
jmp
pop
xchg
sbb
lock
sub
adc
push
ss
inc
loopne
shll
ljmp
rcr
stos
mov
popf
and
inc
or
int
cmp
push
adc
jae
push
lods
cwtl
lcall
lcall
idivb
xchg
lcall
sub
mov
in
sub
ljmp
push
jae
stos
popa
hlt
pop
daa
pop
outsb
jne
mov
jmp
scas
xchg
cmp
push
in
bound
mov
sbb
pop
xchg
xor
incl
ja
dec
mov
jne
imul
cltd
sbb
out
lock
push
and
adc
jecxz
mov
call
in
repz
mov
test
or
cs
call
add
xchg
test
jle
push
push
inc
out
push
inc
or
add
pop
and
lret
sbb
or
add
lcall
bound
imul
imull
mov
jo
imul
or
rcrb
ss
add
mov
add
icebp
mov
inc
clc
inc
push
sub
nop
shlb
adc
add
imul
adc
inc
sub
orl
nop
mov
sub
inc
mov
imul
push
push
jecxz
loopne
xchg
push
dec
gs
call
cmovne
insb
push
outsb
popa
jo
push
and
fwait
xchg
xchg
jo
dec
sbb
fdivrl
or
dec
dec
lea
mov
push
js
or
xorb
ret
aaa
add
jp
popa
adc
lds
inc
inc
jns
adc
incb
popa
jb
add
cmpsb
xchg
sub
dec
ljmp
adc
mov
sub
insl
insl
bound
jbe
sbb
jo
or
cmp
das
add
int3
cmpsb
cwtl
adc
loopne
or
in
sub
imul
inc
pop
add
sub
in
data16
inc
or
div
fcoml
mov
push
outsb
fyl2x
push
push
testb
pop
dec
inc
inc
lds
outsl
cli
arpl
xchg
test
mov
inc
pop
add
fisubs
xchg
and
mov
loop
fcoms
ds
insb
jne
andl
adc
dec
push
xor
push
inc
rcr
push
icebp
sbb
jo
inc
push
fildl
mov
inc
push
push
ret
pop
push
mov
sarl
xor
subl
inc
sti
or
jb
sbb
or
das
push
jns
mov
inc
jae
pop
mov
popf
adc
jae
int
or
push
push
hlt
fs
inc
xor
xchg
jecxz
std
dec
sbb
lock
cmp
push
xorl
xor
arpl
sub
mov
inc
or
dec
packuswb
mov
orl
pop
ret
mov
and
pop
insl
mov
adc
adc
sbb
adc
jns
nop
stos
push
mov
imul
mov
xor
or
mov
xor
sarl
inc
adc
jnp
jno
test
pop
add
pop
and
popw
push
mov
shlb
lret
mov
rcrl
inc
xchg
popa
and
das
fidivrl
dec
jae
pushf
inc
mov
push
stos
pop
dec
inc
dec
or
mov
adc
or
pop
rcrb
mov
dec
jb
sbbl
sbb
subl
std
xchg
rcl
imulb
ja
mov
inc
inc
jg
daa
dec
cmp
mov
mov
outsl
cmp
imul
arpl
es
mov
jae
jp
mov
xor
sbb
xchg
scas
inc
adcb
cmp
aam
or
ret
mov
outsb
adc
outsl
jns
cmp
jbe
int
push
cwtl
pop
sbb
es
sbb
lods
in
add
stos
aad
aaa
stos
mov
jns
inc
je
pop
xlat
fildl
inc
inc
out
jbe
and
xlat
push
inc
sbb
add
and
pop
fcmovu
and
insl
adc
push
xchg
or
mul
stc
mov
add
add
ljmp
add
sbb
stos
loope
xor
sbb
imul
loope
push
xchg
or
fnstcw
roll
mov
aaa
cmp
xlat
nop
mov
dec
iret
push
pusha
mov
push
stc
pushf
push
jne
jmp
add
fmuls
sub
adc
pop
fbld
jecxz
xlat
xchg
and
or
loope
inc
popa
aad
and
and
jnp
or
cwtl
adc
outsl
add
pushf
mov
loope
dec
sti
inc
adc
imul
add
and
repnz
push
outsl
add
add
pop
inc
adc
jbe
or
inc
fldt
rcl
cmp
dec
gs
jne
inc
cmpsb
mov
or
adc
inc
arpl
sti
mov
js
cmp
dec
js
adc
pop
adc
and
jo
adc
sbb
jmp
add
mov
jae
add
mov
mulb
nop
jge
push
popa
sbb
push
push
outsb
sub
ret
dec
shr
mov
mov
cmp
dec
push
sub
mov
inc
jns
xchg
pop
dec
cli
pop
stos
idivl
and
mov
or
outsl
xor
jb
and
jl
inc
cmp
jo
inc
inc
and
mov
sbb
inc
imul
fidivl
mov
xabort
mov
inc
insb
notl
icebp
ret
ljmp
inc
push
stos
mov
and
jae
xor
push
ror
aad
iret
clc
push
ja
mov
push
lds
inc
add
inc
mov
and
popa
inc
nop
sbb
mov
jns
cli
sbb
mull
enter
push
xor
int3
pop
xor
shlb
or
rcll
cmpb
outsb
inc
push
push
adc
sbbb
adc
cmp
sub
fbstp
dec
outsb
dec
adc
jnp
ss
lcall
add
add
mov
mov
adc
xchg
movsb
dec
adc
lcall
cmp
xchg
mov
jl
lcall
mov
dec
js
pushf
wrmsr
sarb
inc
jb
and
mov
add
outsl
mov
and
push
or
inc
add
orl
push
jb
inc
fcmovu
add
inc
cs
fcmovu
shll
ss
iret
push
repz
jo
push
mov
lcall
das
mov
insb
and
xchg
push
subb
pop
test
loopne
push
mov
adc
imul
test
ret
push
pop
push
mov
push
mov
sbb
and
or
in
das
fcoml
mov
dec
fcoms
and
fstl
inc
mov
or
adc
push
xchg
or
inc
and
fisttps
mov
inc
pop
mov
and
test
push
icebp
or
and
jb
and
cmpsb
stos
lods
fdivl
in
mov
and
or
push
ss
push
cmpsb
insb
jl
pop
inc
cs
xor
mov
xlat
push
xor
pop
xchg
add
mov
push
test
hlt
dec
push
or
int3
adc
shrl
push
xchg
adc
sub
add
push
adc
jne
push
add
sbb
outsb
push
push
fcompl
lret
mov
roll
xor
data16
pop
in
mov
xchg
mov
roll
xchg
lods
pop
and
sub
jecxz
test
cwtl
add
mov
and
inc
xor
sbb
lds
movsb
xchg
inc
outsb
dec
dec
aas
or
rcr
cli
xor
or
push
push
test
movsl
outsb
out
mov
fs
or
movsl
push
pop
push
pusha
jno
pop
adc
sbb
sbb
cmp
mov
bound
xchg
scas
fxch
add
pop
inc
pop
lods
pop
push
iret
jns
add
or
int
mov
inc
push
fs
pop
shll
outsl
and
cmpsb
pop
jnp
push
dec
and
sub
push
or
loope
addr16
push
add
cmp
xchg
sbb
mov
add
cmovno
push
sahf
pop
mov
mov
jmp
push
inc
out
adc
inc
mov
repz
sub
cmc
jb
pop
xchg
dec
push
dec
push
imul
add
rorb
jne
data16
shlb
xchg
add
pop
movsb
pop
add
jae
negl
loop
pop
bound
sbb
sbb
int
sbb
add
loop
loopne
fmull
loopne
test
or
or
xor
dec
add
adc
inc
mov
lret
rcrl
push
cmp
push
mov
es
jbe
adcb
or
and
cld
jae
loope
repnz
push
add
push
xchg
js
mov
jnp
mov
pop
add
adc
lock
and
add
and
stos
pop
sub
jb
popa
adc
mov
rclb
inc
cs
adc
xchg
mov
add
or
arpl
xlat
pusha
dec
nop
frstor
jge
push
lahf
es
out
shll
pop
in
inc
and
add
add
pusha
mov
lea
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
xor
inc
add
insl
inc
add
add
