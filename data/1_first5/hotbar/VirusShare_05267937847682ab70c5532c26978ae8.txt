divb
in
mov
mov
rorb
add
add
sahf
int3
das
int
in
jg
shlb
or
and
push
je
and
out
je
push
call
push
add
sub
push
ret
in
divl
jne
mov
or
call
xchg
push
push
sbb
stc
out
aas
mov
test
je
cmp
movl
cmp
jae
dec
movzwl
lea
jne
sbb
xor
jmp
and
neg
fidivrs
and
pop
pop
mov
or
call
push
push
sarl
stc
shrl
jp
lock
jge
add
pop
push
push
push
push
xor
mov
mov
movsl
std
in
pop
scas
cmp
inc
add
cmp
pushf
or
push
rcrb
sahf
push
mov
push
xor
fidivl
fcoms
cmp
adc
mov
ret
mov
jmp
jmp
pushl
jbe
adc
lea
or
lock
dec
test
jg
mov
or
add
cs
add
ret
std
imul
xchg
add
mov
pop
inc
push
adc
add
inc
fcoms
rol
jo
mov
push
mov
xor
sbb
add
push
add
aaa
fwait
mov
mov
or
data16
sbbl
sarl
push
lahf
add
xchg
notl
andl
mov
push
sub
mov
hlt
cs
jbe
xor
sbb
adc
cwtl
mov
lock
pop
imull
dec
shl
in
or
jo
mov
xor
hlt
or
pop
cmpsl
push
repnz
in
cmpsb
cmp
lea
fwait
popa
xor
push
call
sub
add
out
push
sbb
push
loopne
xor
test
mov
lea
mov
adc
daa
mov
push
dec
or
add
iret
jbe
ret
ja
pop
xchg
sbb
fdivrs
xchg
sub
ret
test
push
xchg
mov
call
addb
das
or
push
dec
and
add
xchg
es
pop
xlat
push
sbb
test
or
sbb
push
and
add
push
dec
dec
cmp
je
out
push
out
jmp
mov
mov
pop
pop
fs
pop
lods
mov
aad
add
mov
push
sub
mov
pop
push
insl
and
orb
add
push
iret
bound
fidivrl
inc
pop
pop
ljmp
inc
lock
push
mov
cmp
or
jge
outsl
push
rolb
js
sti
mov
mov
xor
mov
pop
ret
arpl
xor
stos
pop
roll
pop
imul
rcrl
sar
pop
inc
sub
inc
clc
sub
pop
or
xchg
es
cmpl
adcl
xorl
sbb
pop
cmp
cli
js
mov
cmp
jg
mov
pop
and
adc
ret
pop
dec
add
mov
pop
and
jmp
enter
xchg
das
pop
push
sub
push
mov
sar
imul
lea
push
cmp
ja
adc
pop
dec
clc
add
push
mov
inc
loope
adc
in
inc
jno
xchg
adc
in
outsb
int3
clc
scas
cmp
jle
mov
cmpl
or
clc
loope
incl
shr
sub
or
cmp
push
inc
jle
add
pop
cltd
sub
rcl
enter
shrl
iret
mov
movsb
pop
cmp
orb
sub
cli
cmp
mov
push
jne
js
incb
add
xor
pop
mov
jle
add
call
jo
add
testl
inc
add
adc
lea
adc
stc
std
mov
and
xor
into
mov
adc
cmpsl
push
cmpsl
inc
cmp
mov
cmpsl
mov
cld
fisubrs
xlat
ja
lods
lea
stos
mov
clc
cmp
roll
mov
mov
jge
test
jle
insb
or
cmp
mov
inc
mov
stos
pop
pop
inc
insl
cmp
loope
or
push
push
cmp
adc
outsl
add
sub
repz
push
jmp
push
lea
lea
inc
push
inc
add
pop
sub
in
pop
push
cli
push
andl
ret
and
sbb
outsb
hlt
adcb
or
jbe
inc
and
cmp
mov
cmp
and
xor
push
push
sti
rcrl
hlt
das
push
out
cmp
jle
mov
inc
or
xor
cmpl
je
push
cmp
cmp
jae
push
cmp
inc
and
adc
cs
or
or
add
jb
pop
adc
pop
adc
pop
leave
fwait
jle
mov
fcoms
jnp
ljmp
in
aaa
cmp
lock
loop
push
push
push
rcrb
sbb
or
adc
or
cmpsb
push
loope
add
jne
pop
nop
out
loop
loopne
cmp
jo
inc
sub
add
aaa
lret
shll
mov
inc
or
pop
or
cmp
add
add
xor
jno
cmp
jne
push
push
push
push
xor
push
test
push
mov
mov
or
pusha
pop
pop
jle
sbb
xor
mov
daa
in
rcr
jne
cmp
lret
xchg
and
add
sub
xor
frstor
insb
mov
lock
mov
cld
pop
stc
add
out
add
sbb
fstpt
mov
add
repz
testl
xchg
pop
mov
and
push
je
xchg
sbb
test
cwtl
ds
xchg
loopne
in
dec
out
mov
ja
stos
or
dec
adc
je
push
adc
aas
clc
pusha
mov
push
repz
inc
xor
push
ss
push
incb
sbb
out
lea
dec
push
xor
adc
lahf
testb
lea
out
jae
pop
shlb
fldcw
add
add
add
jge
repnz
lea
push
dec
pop
xchg
push
cld
fists
mov
fistps
add
push
mov
jb
push
outsl
dec
xor
mov
push
out
fsubrl
adc
and
push
scas
push
inc
sti
add
or
test
cmp
iret
insb
push
cmp
push
push
cmp
je
shll
adc
or
loopne
jne
imul
mov
imul
adc
fwait
or
xor
jb
ja
adc
inc
fsubl
shlb
xchg
cmp
mov
xchg
paddq
mov
aaa
movsl
iret
xlat
mov
mov
mov
or
mov
call
arpl
cs
jno
lods
imulb
xor
sub
jg
inc
dec
mov
or
cwtl
in
cmp
mov
add
andl
or
sub
in
mov
shrl
ss
push
mov
mov
push
adc
lock
lcall
sbb
int3
ret
mov
push
testl
jae
and
mov
aas
pop
loopne
push
loopne
pushl
push
cmp
icebp
add
daa
lret
call
sub
adc
pop
inc
lods
or
enter
add
sbb
je
dec
je
push
xor
push
pop
jmp
push
adc
inc
pop
loop
sbb
movsb
call
add
mov
inc
adcb
push
rcll
jg
int
mov
push
mov
insb
sbb
mov
sbb
mov
inc
and
mov
jae
mov
aam
and
pushaw
pushf
pop
cmc
subl
sub
and
sub
add
xor
aam
test
pop
jle
or
mov
mov
sarb
pop
or
pop
rorl
xchg
and
loop
xlat
sub
lret
ljmp
out
shr
sbb
fisttpl
or
sub
js
and
adc
arpl
loope
popa
add
jle
in
dec
xchg
ds
and
sbb
sar
inc
pop
xlat
andb
je
or
cmpb
lea
mov
fldcw
mov
sbb
pop
movsl
push
negl
pop
ds
das
adcl
pop
dec
sub
adc
mov
push
sbb
or
sbb
push
adc
lahf
cmp
sbb
adc
fists
cwtl
add
pop
sbb
and
add
js
xor
in
js
jl
ret
adc
jb
pop
adc
test
mov
mov
mov
cld
cmp
jg
jne
dec
sbbb
push
cmp
enter
movsl
cmp
les
or
andl
nop
into
or
mov
je
inc
mov
icebp
into
scas
mov
dec
or
or
push
data16
sbb
dec
mov
pop
pop
pushf
sub
pushf
sbb
pop
aas
push
and
inc
and
or
push
jo
int
in
jae
bound
cltd
adc
out
in
sahf
adc
je
scas
jnp
mov
adc
lahf
xor
jbe
pop
ret
lahf
mov
insl
jnp
pop
aaa
push
push
or
mov
xor
dec
sub
fmuls
subl
popa
xor
xchg
xor
data16
push
divb
lcall
orl
je
and
mov
out
scas
mov
int3
sbbb
ljmp
mov
mov
pusha
push
lcall
jo
jne
push
ret
das
pop
add
pusha
add
and
in
aaa
sbb
push
dec
mov
lods
mov
jnp
add
pusha
jp
push
in
mov
adc
insb
movsl
sbb
pop
repnz
je
jbe
in
sub
in
rolb
daa
jo
scas
and
orb
xchg
xor
test
lds
repnz
ds
pop
pop
jmp
sub
popa
jmp
mov
xchg
mov
push
xor
mov
pop
aas
aam
jge
decl
inc
and
fisubl
xchg
xchg
je
out
out
add
push
push
add
insl
cmp
jb
lock
bswap
scas
mov
scas
adc
mov
mov
and
push
je
icebp
bound
adc
xchg
in
push
and
push
filds
or
frstor
add
add
add
fldt
pusha
mov
testb
mov
incb
or
and
test
add
in
sbb
jo
xor
or
push
mov
jmp
ljmp
sub
mov
push
lock
pop
push
sbb
neg
sbb
pop
les
ret
je
push
inc
out
loop
in
and
mov
gs
sub
mov
enter
cwtl
sahf
inc
and
fs
mov
dec
mov
mov
imul
loopne
xor
in
pop
push
add
adc
push
jb
or
sbb
add
mov
cmp
xchg
pop
mov
add
jge
pop
incb
jecxz
dec
inc
outsl
mov
in
das
sarb
sbb
sub
xor
sbb
sub
mov
test
fcoml
dec
jo
xchg
mul
mov
shlb
loopne
jo
cmp
movsb
sarb
js
mov
adc
pop
adc
push
mov
xorl
cmp
cmp
rclb
xchg
rcl
ret
les
pushf
pushf
leave
jae
gs
mov
mov
xchg
dec
mov
xchg
sbb
xchg
xchg
sbb
push
test
mov
xchg
int3
clc
arpl
ret
sbb
leave
enter
ror
cmp
sbb
shlb
sub
ret
sbb
dec
jnp
mov
mov
dec
leave
jae
mov
sub
test
push
test
add
test
jle
pop
pop
pusha
inc
xor
and
insl
inc
ja
and
cmp
testl
loope
hlt
shrb
add
mov
inc
iret
and
cwtl
sub
jo
inc
sbb
call
test
push
or
dec
pop
mov
es
push
ficompl
push
loop
jnp
and
cs
push
xor
sbb
and
add
ret
xor
add
lcall
pop
add
enter
or
jle
lahf
cmp
mov
in
addb
test
and
outsb
and
ficompl
inc
sbb
movsb
and
push
aaa
adc
dec
sbb
orl
pop
push
mov
mov
mov
jae
or
cld
sarl
sbb
ret
lods
pop
test
cwtl
sub
lret
xchg
and
std
and
adc
adc
popl
daa
add
sbb
fsubl
adc
addb
cwtl
mov
mov
cmpl
and
push
pop
push
jmp
popa
mov
ret
push
or
mov
fiaddl
adc
or
sbb
adc
movsb
adc
xor
mov
insl
pop
sbb
push
sbb
fstl
scas
and
jl
and
enter
or
adc
sbb
jecxz
pop
dec
push
dec
mov
in
mov
nop
aaa
xchg
xchg
add
adc
test
sbb
inc
adc
adc
movsl
jno
mov
stc
loope
add
inc
xchg
mov
adc
cmp
aaa
pop
inc
adc
xchg
adc
sub
push
cmc
mov
push
sbb
push
nop
imul
lret
xor
push
and
iret
sbb
sbb
aas
loop
add
inc
jne
shlb
jno
jb
mov
test
enter
sbb
movsb
dec
out
lcall
xchg
mov
loopne
dec
jo
lea
mov
sbb
lcall
fbld
das
jne
push
pushf
pop
nopl
pop
xlat
sbb
shrd
popa
testl
outsl
jg
cmp
je
or
je
xor
push
push
or
push
mov
adc
xchg
mov
pushw
mov
mov
xchg
inc
xchg
and
pop
loopne
das
jecxz
daa
add
inc
ret
or
inc
pop
add
mov
mov
add
test
mov
dec
in
lret
xorb
and
sbb
lock
cmp
add
sti
cmp
je
push
push
pop
ljmp
test
xchg
add
mov
sub
inc
mov
mov
clc
adc
and
shrl
pop
mov
xorb
jmp
dec
cmp
sub
mov
mov
xchg
insb
push
sar
and
stc
sahf
sub
sub
or
bound
inc
xlat
in
add
popa
and
sub
sub
pushf
fstps
add
movsb
std
div
faddl
cmp
negb
aas
rcrl
inc
incb
xchg
inc
mov
cmc
pusha
shrb
test
sbb
loopne
push
fdivl
jns
inc
stc
scas
sub
pop
bswap
pop
test
sub
sub
pop
leave
aam
inc
imul
cwtl
lods
jno
ss
je
sbb
inc
lret
ret
test
cmp
cmp
or
mov
fstpt
cmp
push
stos
add
adc
jb
pop
add
xor
clc
push
insb
push
daa
movsb
xor
test
pop
insb
adc
push
lods
mov
mov
sub
pop
stos
jo
fsubs
jne
jo
out
pop
and
pop
xor
xchg
lahf
mov
inc
sbb
arpl
dec
adc
inc
ret
jecxz
lret
push
push
or
sub
pop
adcb
push
add
test
test
adc
mov
mov
enter
push
push
cld
sbb
sti
lahf
mov
adc
add
pop
cmp
add
or
adc
xor
push
sahf
xor
and
add
mov
hlt
sbbl
sub
nop
negl
inc
mov
jo
push
enter
int3
ds
lds
lea
pop
xchg
add
sub
pushl
jnp
fidivs
dec
xlat
test
xor
dec
push
mov
fsubs
roll
aad
imul
sub
inc
repnz
cmp
mov
and
xor
stc
pop
pop
and
dec
dec
xor
ficoml
cmpl
cmpsb
cmp
mov
repnz
sub
rcll
and
sbb
jne
and
enter
and
xor
andl
lods
rclb
nop
inc
in
xchg
or
ds
cmp
push
jl
jne
bound
pushf
dec
inc
inc
adc
ds
popf
fstpt
rorb
dec
mov
mov
push
or
xchg
pop
icebp
pop
dec
les
adc
dec
stos
xchg
adc
pushl
push
mov
sub
mov
loop
add
in
and
adc
sub
ret
push
je
nop
sub
adc
les
rcll
cmpl
add
iret
sbb
push
mov
mov
dec
sbb
outsb
loopne
sbb
fld
sti
cmpb
jae
jne
push
sub
xlat
ret
call
sub
fisttpll
jne
inc
adc
or
in
gs
orb
jmp
cmp
push
mov
nop
out
adc
pusha
cmp
loope
nop
sbb
mov
jmp
mov
clc
cmpb
daa
fs
push
loopne
and
push
shrb
push
outsb
scas
push
dec
lret
add
inc
das
xchg
sti
sub
inc
repz
out
jge
and
xchg
orb
enter
or
lret
jo
inc
mov
cmp
mov
test
pusha
xchg
push
les
jge
jo
and
cmp
out
jo
xor
daa
dec
rcll
sbb
mov
xor
mul
dec
xchg
jo
inc
xchg
add
pop
or
setne
or
dec
or
mov
rcrb
into
add
icebp
aaa
arpl
adc
pop
out
jne
or
je
sub
fadd
mov
in
sti
loopne
je
loope
jg
inc
das
adc
mov
or
in
sbbb
push
inc
faddl
jl
test
dec
push
pop
pop
sub
jo
test
mov
lods
cmp
lock
fsubrp
out
xchg
or
xchg
cmp
fsubs
add
call
neg
test
imul
sub
repz
je
cli
pop
ror
dec
sarb
inc
mov
pop
jns
sbb
fsub
push
out
inc
out
loopne
cld
inc
test
and
or
nop
inc
aas
fnstenv
imul
lock
or
loopne
lods
sbb
cld
or
mov
push
pop
or
push
or
jg
scas
fdivl
add
or
enter
add
int3
add
mov
or
es
fisubrl
jle
push
fdivr
or
sub
call
dec
xchg
call
mov
add
mov
jnp
lock
dec
inc
sbb
je
sub
jle
cld
out
jmp
jge
imul
cmc
jbe
push
xor
jmp
mov
xorb
int3
int
mov
mov
xchg
int3
test
push
sbb
in
icebp
inc
xorb
xor
fstl
inc
sbb
mov
lea
rolb
mov
mov
inc
hlt
xor
inc
mov
mov
jle
push
dec
cmp
adcb
push
pavgw
ret
jle
call
in
sbb
lock
push
mov
orb
mov
shll
in
paddusb
cmp
pop
filds
mov
push
push
add
pmulhw
mov
jbe
pop
clc
add
inc
sbb
sbb
movsb
adc
fcomps
sub
mov
stos
insl
std
adc
sbb
dec
test
pop
lea
roll
sub
or
cmpl
push
push
jne
aaa
or
rcrb
pop
dec
xor
mov
in
inc
xchg
in
cmp
inc
ficomps
cld
test
sbb
or
mov
imul
or
sbb
add
mov
or
xor
push
push
add
pop
ljmp
or
inc
pop
or
cmp
std
popa
xor
add
mov
das
jle
popa
cmp
inc
nop
es
dec
xorb
push
imul
pop
fmull
jp
fcompl
movsb
adc
add
pop
sar
in
loopne
pop
cld
loopne
orb
add
test
lds
lahf
call
into
sarl
aam
enter
test
or
rcrb
push
nop
or
push
cmove
or
cmp
push
push
in
addb
cmp
sbb
mov
cmp
cli
in
mov
push
rorb
mov
ret
or
in
adc
scas
in
mov
push
push
in
sbb
inc
mov
scas
sbb
or
jno
testl
nop
adc
and
add
cmp
test
shrd
rcr
jb
push
pop
push
push
call
and
fistl
rorl
test
mov
mov
pop
daa
mulb
mov
rcll
dec
or
cmpb
jge
out
clc
sub
mov
mov
out
or
push
jge
in
arpl
and
pop
arpl
xor
pop
or
sbb
pop
lock
loopne
mov
cmp
addb
and
and
das
subl
adc
mov
mov
jbe
in
mov
int3
pop
cmp
fxch
rclb
sbb
jl
adc
pushf
xor
in
mov
fbstp
rolb
je
inc
in
fdivr
pushl
call
mov
inc
shr
movzbl
push
adc
push
ret
push
jo
ffreep
push
es
add
je
loope
cmpsl
jle
jbe
dec
testl
gs
nop
sbb
inc
add
push
mov
push
or
gs
or
jg
sub
jb
xor
int
out
push
loopne
pop
or
add
mov
push
sbb
xor
fisubs
push
jmp
scas
sti
jle
push
add
lahf
nop
lods
adc
push
push
mov
cmp
jg
mov
xchg
icebp
int
adc
jae
enter
cmpl
std
sbb
scas
mov
aad
js
pop
and
test
xor
fldt
xchg
jno
outsl
ds
lea
andl
outsb
sub
sbb
subl
call
mov
push
jne
inc
sub
loop
jo
push
ret
push
pop
jmp
mov
popa
xor
lods
push
cmp
mov
and
cmp
je
stos
mov
in
in
add
fcompl
shrb
cld
jne
fdivrl
push
push
test
adc
lock
sbb
or
xor
clc
add
inc
cmp
jae
mov
hlt
lea
movsb
jp
dec
ja
dec
add
sub
je
push
mov
je
add
mov
outsl
push
sub
fcomps
hlt
sub
imul
add
adcb
ret
jl
in
cmp
jg
push
push
push
inc
js
push
pop
cmp
inc
and
jbe
xlat
sar
into
popa
nop
add
mov
loopne
push
pop
xor
adc
call
lea
ljmp
cmp
loopne
sub
add
xor
jo
fnstcw
jb
mov
mov
roll
mov
mov
push
sub
inc
js
or
cli
xchg
adcb
out
ret
cmp
cmpsb
hlt
pop
pop
xor
inc
xchg
je
test
js
inc
dec
hlt
aaa
cmp
fidivrl
hlt
or
and
sub
pop
movb
dec
push
inc
inc
dec
rclb
jge
jmp
dec
inc
cmp
push
mov
insb
sbb
in
out
fdivs
pop
push
push
mov
sbb
xor
cwtl
dec
mov
insb
sbb
fdivp
add
pop
push
push
mov
idiv
cmp
jl
repz
jmp
or
and
pop
cmp
xlat
das
xor
ret
inc
mov
inc
or
cmp
jbe
mov
mov
test
pop
or
xchg
bound
xlat
push
sub
mov
push
stc
jns
lods
sarl
push
mov
push
and
add
or
jle
ret
je
mov
imul
lock
aaa
ljmp
xor
movsb
push
dec
fidivrl
sbb
or
fstps
pop
cmp
mov
or
add
jne
or
sbb
sub
jle
push
call
jl
xchg
jecxz
sti
test
dec
sbb
mov
mov
sbb
ret
je
push
pop
pop
and
xor
mov
mov
jae
jb
jmp
mov
ret
and
adc
mov
xchg
jmp
or
jbe
jb
mov
icebp
scas
fs
jne
cmp
je
jbe
movb
xor
lods
std
or
or
and
sbb
icebp
addb
cmp
test
addl
out
les
xlat
imul
daa
push
pop
and
setne
shrb
ret
jne
pop
jo
pop
in
xchg
cld
add
fiaddl
jne
adc
js,pt
aam
add
jo
jg
jo
prefetch
xchg
das
or
es
into
push
cmc
jmp
test
or
sbb
push
adc
add
sub
jp
shll
aad
mov
js
push
leave
inc
lret
jmp
call
bnd
rorl
cmp
jmp
mov
dec
adc
daa
sahf
jmp
cmp
push
test
mov
imul
cld
ficoms
sub
push
push
jmp
sbb
pop
sti
adc
rolb
pop
rolb
add
scas
sbb
inc
push
mov
lock
pop
nop
mov
sub
inc
mov
add
lcall
je
das
test
push
xchg
dec
jno
mov
loopne
enter
jl
add
insb
cld
cmp
ret
dec
push
add
push
test
lds
pop
push
dec
cld
rorb
push
pop
popf
mov
enter
add
std
push
movl
call
sub
dec
enter
movsb
xchg
xor
sub
imull
push
and
cmp
fld
mov
sahf
fsubs
sub
pop
push
adc
pop
enter
xlat
jecxz
sbb
insb
icebp
inc
roll
shlb
in
shl
mov
cmp
jp
fdivs
push
adc
shr
pop
sbb
push
push
imul
sub
push
add
aas
lods
jo
xchg
dec
ret
outsl
dec
mov
adc
lods
sbbl
inc
mov
lds
sbb
mov
in
push
sub
les
push
ss
sub
push
in
insl
fldt
lods
sub
mov
xlat
and
enter
mov
and
aad
jo
es
sub
jl
push
jno
cmovl
pop
dec
scas
jecxz
dec
xchg
call
sbb
cmpsl
jb
sbb
fsubrs
enter
or
test
pushf
mov
dec
leave
inc
jo
fnstcw
into
or
adcl
jb
leave
les
adc
imul
test
stos
out
or
mov
push
sbb
xchg
xor
pop
and
xlat
or
sbb
add
xchg
sub
stos
adc
jmp
je
add
movsb
das
ljmp
in
or
outsl
and
jns
mov
or
push
enter
icebp
mov
or
inc
mov
rcll
mov
dec
push
adc
pop
mov
call
jne
pop
add
inc
bound
xor
fwait
hlt
cmp
xchg
dec
mov
push
mov
jns
xor
push
and
mov
push
push
sub
add
cmpps
das
cwtl
jl
test
pop
bound
in
push
stos
lock
xor
pop
je
sbb
mov
mov
sbb
push
adc
cmp
jg
adc
in
jns
add
dec
addr16
xor
push
lea
mov
add
or
mov
lods
xor
scas
jno
lahf
rcrl
add
pop
pop
cmpsb
mov
mov
in
sbb
add
or
jns
insb
fdivrs
popf
pop
daa
js
adc
dec
cmp
pop
lea
addr16
test
shlb
imul
and
and
sbb
rcr
sbb
sbb
sbb
jne
cmp
push
sbb
sub
outsl
push
push
stos
pop
xor
xchg
mov
mov
and
adc
ja
xchg
notb
stc
movups
and
out
push
cmp
popf
cmpl
outsl
inc
push
mov
push
cltd
clc
cmp
ret
jne
mov
add
cmp
mov
jle
push
xchg
jmp
loop
stos
sbb
and
sti
lods
dec
and
ret
xchg
arpl
pop
lods
push
dec
pushf
push
jbe
ficoms
jmp
cmp
cmp
fucomip
sub
jne
sub
dec
je
mov
adc
in
jge
adc
push
lret
ss
jge
cmp
jmp
mov
mov
and
inc
rorb
leave
jmp
fiaddl
cmp
push
jecxz
jne
out
popa
hlt
or
jmp
push
add
push
mov
xor
pop
or
and
cld
pop
inc
add
mov
mov
lret
sti
divl
or
pop
push
mov
xorl
dec
icebp
mov
mov
dec
mov
loop
loopne
push
or
push
imul
pushl
js
sub
jbe
pop
jbe
mov
fcomps
or
int3
sub
mov
rolb
jmp
cmp
je
cmp
ficompl
push
pop
lahf
jmp
inc
sbb
leave
adc
repz
lcall
cmpsb
sbb
fstpl
mov
cmp
jmp
sbb
addr16
cmp
sbb
je
arpl
pop
or
sbb
jge
in
incl
into
pop
push
aaa
push
inc
push
push
out
sahf
out
jnp
ret
in
add
jns
cmc
xchg
pushf
cmpsl
fcompl
mov
inc
sbb
mov
mov
add
data16
mov
sub
or
xchg
push
mov
lea
adc
xchg
out
fwait
sub
mov
fadd
push
test
add
out
push
int
mov
sbb
xchg
pop
jge
mull
cmp
push
dec
push
mov
das
push
lea
push
lea
push
push
push
push
add
push
lea
fs
dec
cmp
cmp
adc
mov
inc
test
lods
add
dec
or
or
adc
pop
mov
dec
call
add
xor
mov
insb
sbb
mov
imul
lea
aam
sbb
push
xchg
das
imul
cmpb
add
jl
inc
xor
add
into
sub
push
xor
pop
inc
mov
inc
push
push
and
push
fidivs
mov
addl
mov
add
movl
cmp
push
notb
jmp
mov
pusha
and
mov
push
jbe
insb
jne
mov
add
xorb
jne
mov
pop
jne
push
add
ret
data16
jns
inc
add
xchg
adc
test
push
repz
imul
dec
cmp
sub
movsb
in
in
xchg
dec
sar
ret
out
in
dec
and
add
orb
mov
movsl
push
cli
loop
lea
neg
push
int
test
js
repz
dec
bound
push
cmp
sbb
sbb
jl
xchg
xchg
sbb
pop
xchg
adc
mov
lea
jl
lcall
adc
mov
ret
or
push
push
xor
popa
push
loopne
jecxz
push
xchg
pop
mov
popa
aam
push
aam
das
in
jb
mov
ds
mov
add
fcoml
bound
dec
fildl
cmp
rcr
loopne
add
dec
shlb
cmpsl
nop
xchg
aam
pop
movsb
jmp
mov
sub
inc
scas
xor
adc
xchg
cmpsb
int3
cmp
jne
push
sub
xor
inc
sar
pop
clc
js
sti
stos
adcb
je
lea
push
loopne
adc
pop
rolb
mov
jo
ret
pop
add
sbb
cmp
fdivrl
call
push
or
adc
pop
shrb
cmp
rorb
xor
push
les
inc
push
mov
lock
lods
movd
lea
dec
push
push
sbb
cmp
fidivrs
pop
xchg
or
in
dec
jmp
sub
decl
sub
in
cmp
push
mov
add
mov
shll
add
inc
inc
dec
cmp
scas
xchg
clc
dec
adc
xor
mov
lds
push
mov
cmp
vpunpckhwd
insb
repnz
sub
inc
rcr
pop
dec
in
dec
sbb
mov
cmp
or
lea
and
mov
add
and
dec
insl
xor
into
in
and
dec
out
insl
shll
cmp
push
push
mov
negb
pop
adc
decl
dec
popf
jp
fimull
leave
and
jbe
loope
push
push
out
cmp
out
ja
adc
mov
push
out
enter
enter
mov
sub
xlat
adc
mov
scas
add
sbbl
punpckhdq
push
lods
mov
and
adc
aaa
and
dec
jae
push
ret
test
clc
daa
xchg
pop
pop
loopne
fmull
push
dec
das
sbb
jl
in
pop
ljmp
pop
mov
icebp
jg
fwait
enter
cmpl
jne
pushl
out
loopne
pop
or
push
or
adc
je
xor
mov
outsl
cld
adc
add
adc
and
mov
ret
add
inc
adc
inc
shl
xchg
sub
sti
je
cmp
xor
sbb
mov
jno
add
pop
adc
or
mov
mov
xchg
in
inc
push
int
push
or
xor
jg
push
jne
movb
jmp
cmp
jne
cmpsl
enter
movsl
fldz
xor
sub
popa
push
push
movb
loope
stc
insl
dec
aas
mov
cmp
mov
push
insl
inc
pop
ja
mov
sub
cmp
xchg
test
sbb
lock
scas
sti
or
test
and
test
int3
mov
mov
mov
pop
sti
push
push
dec
or
adcb
xor
push
stos
push
mov
adc
fcoml
sbb
push
nop
pop
cmp
iret
push
adc
enter
orb
sub
in
movsl
out
mov
mov
jl
adcb
pusha
xchg
scas
mov
mov
adcl
dec
rcll
adc
adc
lret
xor
sbb
push
cmpsb
adc
lea
and
ss
xor
mov
push
mov
push
jbe
jno
call
push
lret
out
ja
jl
xchg
andb
mov
sbb
mov
xchg
out
dec
imul
mov
test
mov
out
lcall
aaa
pop
inc
ficomps
mov
rorb
inc
cmp
mov
fmull
insb
cmpsl
mov
int3
dec
add
pop
je
push
aaa
movsl
or
cmp
or
ja
jl
cltd
cli
jno
cltd
mov
idivl
out
andl
pop
pop
out
add
jno
insb
inc
sbb
arpl
in
cmp
js
ds
pusha
rorl
fstpl
and
push
cmp
je
or
adc
or
call
and
iret
dec
or
rclb
cmc
jmp
mov
mov
xor
rorl
cmp
cmp
dec
rcll
lea
cld
clc
push
jle
add
and
cmp
cmp
cmp
negb
push
add
push
jne
cs
sub
push
sahf
std
aad
push
mov
adc
sbb
stos
mull
push
insb
repz
mov
jmp
fisubrs
add
stos
add
push
cli
or
push
sub
push
push
popa
cs
push
testb
movsl
mov
xor
push
sbb
push
sub
jecxz
mov
jl
xlat
sbb
in
loope
or
out
jo
into
inc
sub
insl
mov
insb
xorb
or
sub
sbb
add
and
popf
mov
jl
push
cld
inc
clc
mov
cltd
mov
lea
push
sti
js
decl
orl
or
shlb
add
cmp
jge
ds
daa
les
idiv
push
mov
mov
jno
aam
mov
ret
xor
idiv
notl
adc
add
std
test
jg
mov
sbbb
jg
push
ljmpw
lds
scas
mov
test
xor
sub
scas
aas
out
jge
add
adc
push
pop
lock
lahf
mov
or
out
dec
fstpl
push
pop
add
xor
sti
sub
rcrb
jge
je
out
sbb
test
out
movsb
mov
add
fisttpl
fiaddl
movsl
daa
pusha
js
sti
ds
jg
scas
jnp
dec
fs
or
xchg
arpl
mov
leave
jle
cmp
xor
sub
negl
pushf
movb
push
inc
lahf
mov
inc
ljmp
jl
push
adc
sub
cmp
jmp
dec
nop
or
out
jp
into
test
jle
pop
sub
hlt
mov
test
jns
cld
mov
inc
add
xor
xor
mov
fdivrp
movsl
mov
sub
mov
jmp
sbb
pop
add
les
cmp
add
push
lods
mov
cmpb
cld
mov
je
into
clc
fidivl
jmp
push
xchg
cmp
rolb
fstp
cmc
push
pop
mov
pop
jne
pop
pop
movb
clc
mov
push
cmp
mov
mov
xor
push
inc
mov
add
imul
lret
rorb
cld
inc
hlt
adc
lea
adc
adc
sub
in
jne
push
gs
bound
out
sub
xor
in
inc
pop
and
aad
cmp
sbb
loopne
or
push
cmc
bound
out
push
pop
pop
push
sub
jecxz
and
jle
lds
pusha
cs
scas
push
stos
sub
ret
push
mov
add
call
push
and
cltd
add
int3
pushf
push
push
test
or
push
and
mov
fxch
adc
int
sbb
loope
rcrl
or
iret
addr16
dec
jns
and
cmp
clc
loope
mov
inc
jne
sti
sub
lds
adc
mov
push
les
jmp
punpckhdq
leave
adc
jno
test
add
add
add
xchg
push
popf
int
mov
lea
push
mov
push
loope
mov
pop
in
dec
and
mov
push
lods
das
add
hlt
jno
sarl
mov
push
adc
pop
adc
fcmovbe
iret
js
and
andl
shlb
adc
push
add
cmpsb
jle
add
imul
pop
mov
sub
mov
mov
or
add
popl
nop
dec
outsb
scas
sbb
push
pop
push
xchg
sbb
mov
mov
ds
nop
adc
fs
cli
xchg
int3
push
push
pop
in
pusha
cmp
out
pop
popf
dec
daa
add
stc
sbb
jl
aad
sbb
dec
and
lds
inc
push
icebp
in
cmp
jge
orl
and
fs
scas
mov
push
jbe
push
and
shll
sub
aas
outsl
add
xor
inc
inc
push
add
inc
jae
inc
sub
clc
push
sub
clc
setb
test
daa
add
mov
cmp
jo
movsb
je
xor
dec
adc
data16
pop
or
mov
lods
aaa
adcb
jle
loopne
icebp
sub
or
out
mov
pop
inc
add
push
xor
cld
mov
dec
dec
mov
jo
adc
pop
push
push
hlt
jo
add
jecxz
sub
add
mov
fsts
add
shrl
inc
scas
sbbb
das
push
scas
xchg
enter
int
xchg
popf
or
stc
inc
bound
sbbb
sbb
sbb
push
in
pop
or
pop
xor
popa
sub
pusha
sbb
bound
mov
fisubs
mov
mov
inc
inc
in
aas
jmp
test
push
or
add
adc
arpl
movl
popa
cld
mov
dec
jl
je
and
add
or
lock
push
pop
adc
mov
pop
or
jg
inc
xor
adc
xchg
push
push
push
add
jmp
mov
sub
mov
jnp
xchg
jo
add
mov
idivl
aam
mov
and
jb
inc
aaa
adc
xchg
xor
jmp
rolb
xor
cmc
xchg
push
add
push
out
adc
push
shlb
icebp
and
pop
push
and
enter
and
dec
fwait
popf
or
or
pushl
imul
insb
aam
lock
or
aam
mov
jp
lods
inc
mov
jae
imul
mov
sbb
stos
pusha
sarb
sbb
sbb
xor
mov
test
dec
in
call
jo
or
xor
mov
fcmovbe
mov
sbb
mov
adc
push
sbb
out
pop
push
push
mov
pusha
das
call
jo
mov
push
popa
cmp
xchg
loope
aam
and
pop
cmpsb
jo
cmp
fsubrl
in
mov
pop
push
push
outsl
sbb
jmp
sti
dec
jnp
mov
mov
scas
adc
int3
jp
or
push
cmpsl
pop
fs
fcoms
dec
cmpsl
adc
ja
add
push
cmp
mov
shrb
push
mov
add
and
dec
jae
cmp
sbb
xchg
sub
test
or
jne
mov
outsb
pop
je
out
cmpsb
loopne
arpl
sbb
xchg
mov
pop
pushl
push
lret
mov
shl
jmp
enter
andl
dec
cmp
mov
add
addr16
arpl
ret
je
call
fidivrs
test
je
stc
mov
push
dec
mov
jmp
dec
mov
sub
and
mov
lcall
dec
add
jo
pusha
inc
xor
movsl
stos
add
shlb
mov
or
fmulp
js
out
std
cmp
jge
mov
mov
mov
cmp
sbbb
push
add
or
push
pusha
jle
call
sub
fcom
or
push
sahf
or
fsubr
sbb
popf
fwait
and
jns
fdivrs
out
je
xchg
data16
pop
mov
sbb
mov
jno
or
stos
shlb
test
into
cmp
xchg
iret
andb
add
jo
sub
cld
inc
cmp
sete
adc
loope
adcb
inc
sbb
adcl
push
ret
mov
mov
jo
jp
jno
shrb
mov
or
jno
sbb
and
add
subb
bnd
and
fwait
mov
popf
xor
loopne
add
sbb
mov
int3
imul
xchg
mov
pop
push
pop
sbb
sarb
pop
cmp
lods
pop
dec
rorb
jae
add
sti
push
dec
lock
mov
ret
movb
add
ror
xchg
push
in
sbb
imul
outsb
mov
movsb
ss
sbb
call
cld
fnstsw
insb
dec
sub
push
iret
ss
lods
aad
fdivs
push
and
push
sbb
push
xchg
push
or
mov
bound
mov
mov
or
mov
adc
inc
outsl
mov
enter
jne
in
roll
pop
pop
adc
loopne
sbb
clc
mov
fmull
mov
lcall
test
test
in
call
ja
fdiv
in
sbb
sbb
clc
push
mov
sub
jns
pop
pop
arpl
andl
or
je
movsl
imul
xchg
lock
insb
sti
cmpsb
cmp
je
dec
xchg
mov
idivl
adc
mov
daa
xor
insb
shll
shlb
jg
adc
jbe
cs
jb
xchg
or
mov
in
push
lds
xlat
sbb
cmpsl
adc
pop
inc
clc
adc
add
clc
sub
inc
mov
cmp
das
xor
xor
hlt
add
and
mov
push
dec
push
pushl
xor
mov
xor
lret
push
add
add
cmp
pop
clc
dec
xchg
nop
jb
jnp
adc
lods
hlt
das
mov
cmp
jmp
das
hlt
dec
jo
outsb
mov
out
or
in
sub
add
into
push
push
add
push
outsl
or
or
jp
loopne
gs
adc
dec
dec
push
in
imulb
mov
mov
jl
mov
jbe
xor
rcrl
sbb
sub
jg
mov
addr16
aam
loope
and
ret
lahf
std
mov
aad
xor
dec
aas
or
sub
xor
jbe
or
mov
sbb
push
add
clc
sbb
out
mov
pop
daa
pop
push
mov
js
mov
adc
inc
incl
repz
xor
xor
push
jg
icebp
fwait
or
jbe
movzwl
adc
add
xor
pop
test
lea
push
jl
mov
in
push
rcll
in
pusha
gs
sbbb
cmp
jbe
pop
push
mov
hlt
mov
add
adc
add
jo
and
ljmp
cmp
add
xor
sti
mov
inc
push
push
fisttps
in
lods
xor
sbbb
push
mov
pop
rolb
mov
int3
sub
rcrb
mov
add
inc
cmp
pop
xchg
adc
pop
mov
push
retw
add
push
lods
lea
and
mov
jne
xchg
xor
push
sub
shlb
popl
jmp
adc
cltd
mov
xchg
push
aam
inc
arpl
push
cmp
or
sub
sub
mov
ja
sbb
lock
cmpsb
add
mov
jo
scas
movl
jle
or
pop
pop
push
es
push
mov
movl
dec
bsr
push
inc
stc
xchg
dec
sub
enter
sub
pop
and
data16
push
mov
dec
and
xor
push
xchg
inc
push
cmp
imul
cmp
jns
sbbl
xchg
nop
fisttpll
aaa
jns
popf
lcall
push
mov
fstpl
cmp
mov
add
enter
cmp
fadd
mov
lods
jmp
or
and
add
sub
lock
push
sahf
int3
jmp
mov
jb
js
add
dec
fs
adcb
shlb
add
add
lea
dec
jnp
js
inc
insl
xchg
shr
aad
inc
sbb
shrl
add
sbb
call
iret
pusha
pusha
xchg
mov
mov
mov
sbb
mov
sbb
mov
in
cmp
les
das
sub
aas
xor
jns
cmp
jmp
pop
neg
xlat
xchg
sub
pop
daa
cltd
add
push
adc
sahf
dec
pop
push
int
les
test
adc
scas
ret
pushf
into
mov
jl,pn
jmp
cmpl
jg
inc
mull
jo
leave
cmp
jo
fwait
add
rolb
xor
fnstenv
lret
adc
sbb
pop
sub
addl
xchg
inc
mov
pop
push
stos
dec
shrl
pop
insb
add
add
pop
and
cmpsl
add
outsb
cwtl
adc
sbb
in
in
jmp
pop
in
mov
pop
ds
add
nop
add
push
stc
ljmp
add
dec
xor
daa
cmp
push
pop
flds
add
in
scas
dec
call
adc
out
mov
or
fidivrl
ret
adc
inc
or
lcall
mov
lret
and
sub
mov
jp
push
cwtl
push
test
cwtl
xor
stc
popf
sub
lea
test
add
mov
nop
push
sub
pop
or
adc
mov
nop
cmpsl
lea
jmp
mov
xor
cmovle
dec
js
jge
iret
mov
jae
sbb
test
fwait
mov
out
clc
inc
pushf
push
setne
sahf
push
sub
lret
jns
or
fs
push
push
pusha
daa
in
mov
repnz
add
mov
sbbb
mov
push
push
jno
push
and
loop
leave
lea
andb
sbb
xchg
or
and
or
add
test
push
push
inc
add
addr16
push
scas
mov
mov
xor
popa
fists
jb
adc
or
sbb
jns
xadd
sbb
mov
cld
cli
stos
push
add
mov
push
mov
stos
or
xor
shlb
popf
push
rorb
pop
xchg
cmpl
in
shrl
cld
dec
pop
ret
adc
popa
push
das
adc
jmp
sbb
fistl
or
loope
pop
int3
imul
pop
shlb
call
test
inc
xchg
sbb
cmp
pusha
pop
inc
xchg
loope
lods
xchg
scas
mov
outsl
out
bound
clc
out
mov
mov
pop
or
loopne
add
in
push
hlt
add
lea
loope
pusha
or
jecxz
in
lret
and
jge
ds
push
mov
adc
mov
push
pushf
mov
mov
adc
and
leave
popf
push
xor
stos
sbb
push
xchg
mov
push
dec
rcll
xor
scas
or
dec
call
pop
loope
dec
or
push
fnstsw
mov
sbb
rorl
shll
or
jb
and
xor
nop
or
test
sbb
rolb
push
les
adc
mov
es
fwait
xor
xchg
inc
xor
push
mov
mov
inc
or
xor
add
pop
fidivs
js
sahf
jnp
movzwl
jbe
add
mov
ss
ret
mov
mov
repnz
int3
lods
xor
cmp
xchg
mov
add
cmp
add
ror
push
mov
faddp
orb
leave
sahf
xchg
rorl
or
xchg
mov
push
and
pop
push
repnz
mov
addl
cmp
outsl
pop
test
fs
jp
or
xchg
fs
and
aad
lock
dec
push
stos
rcrb
mov
cmp
xchg
ret
sbbb
out
cmpb
fucomp
aas
movsb
fdivrs
fucomip
add
imul
push
sbb
adc
xchg
mov
fmull
inc
insl
movsl
jbe
and
push
movd
push
in
jae
adc
orb
xchg
pushfw
mov
push
add
lea
fs
mov
cwtl
pop
enter
mov
mov
in
push
arpl
mov
loopne
cmpsl
jnp
aaa
pop
mov
mov
cmp
fcmovne
xchg
je
mov
mov
pop
ja
mov
fdivr
insl
sub
fstps
and
mov
or
add
jmp
testb
jae
fs
add
rolb
or
or
inc
lret
jnp
dec
jbe
mov
icebp
inc
mov
inc
inc
mov
cld
add
inc
out
cwtl
das
ss
xchg
roll
std
das
aam
gs
dec
cmp
lret
jmp
push
add
ss
incb
or
cmpsl
add
adc
push
inc
jecxz
popa
into
pop
ja
das
add
data16
lea
cwtl
dec
loop
fstpt
enter
push
outsl
repnz
cltd
gs
mov
push
and
scas
outsb
cmp
pop
loop,pt
andl
cld
dec
jnp
ret
dec
and
lret
out
loopne
jns
dec
pop
push
lods
pandn
push
arpl
call
mov
pop
push
gs
sub
mov
in
push
addl
add
arpl
loopne
mov
cli
xor
movl
mov
sub
mov
lds
dec
rcll
dec
or
fimuls
lock
mov
sub
adc
push
jo
or
sahf
sub
out
push
aaa
inc
pop
push
push
jo
push
rol
movsb
push
add
mov
mov
mov
add
sub
mov
cs
jl
jns
inc
js
in
xor
js
sbb
push
add
push
movb
sbb
xchg
mov
push
loopne
or
lcall
fnstenv
adc
xchg
movsl
cmp
jo
xchg
and
in
test
arpl
pop
loope
adc
pop
pop
scas
sub
shll
stos
loopne
jge
sbbb
pusha
sub
push
adc
dec
push
orb
sbb
je
mov
jno
or
pusha
xor
dec
xchg
mov
add
xor
popf
push
test
pop
pop
or
hlt
or
enter
leave
inc
push
sbb
in
jg
push
jmp
push
pop
in
add
popa
push
xchg
mov
sbb
test
sbb
jnp
inc
xchg
mov
sbb
sbb
stc
xor
xchg
mov
or
rcrb
scas
das
xchg
jno
cmpl
inc
mov
jne
push
pop
cmp
je
xor
mov
movsb
mov
mov
or
sbb
dec
add
fs
cwtl
xchg
data16
dec
adc
stos
pusha
and
push
push
add
lea
push
lods
or
mov
fiaddl
cmp
lea
je
lea
and
add
push
or
cmp
mov
and
cli
bound
stos
enter
mov
xchg
sbb
push
inc
sub
sti
or
icebp
fsubrl
mov
xor
sub
jl
shll
mov
mov
test
test
enter
xor
sub
loopne
sub
fwait
psubusb
aas
aam
xor
sbb
das
rorb
sbb
xchg
das
jo
es
jns,pn
icebp
xorb
sbb
jo
insl
je
xchg
cmpsl
into
int3
xor
dec
test
ja
push
fmull
pop
push
xor
sub
adc
adc
addb
xor
xor
sbb
fsubrl
enter
xchg
pop
popf
call
add
lods
out
mov
mov
add
sahf
add
and
sbb
push
xor
mov
fldl
mov
push
pop
adc
xchg
sub
add
jne
pop
add
gs
jo
mov
outsl
or
jne
pop
pop
fstp
xor
mov
ljmp
leave
fs
nop
mov
clc
into
stos
sbb
mov
push
mov
push
orl
cmp
lea
pop
and
fcomps
aam
incb
imul
cs
out
clc
mov
shrb
call
add
adc
cmp
xor
nop
out
mov
fmul
pop
pop
pop
shll
inc
movsb
push
pop
or
inc
pop
fdivr
mov
movsl
aam
add
std
adc
test
xor
divb
loopne
cmp
mov
lahf
pop
push
mov
mov
pop
and
jae
fisttpl
adc
ret
cmpl
scas
scas
or
pop
test
push
xchg
test
ret
test
dec
ficoml
mov
repz
cld
je
dec
sbb
inc
xchg
xchg
inc
daa
push
mov
mull
inc
dec
mov
mov
test
xorl
add
and
cmp
jne
je
fistpll
popa
xchg
pusha
cmpb
pop
push
mov
mov
jbe
dec
or
cmpsl
and
lret
out
mov
bswap
rcrb
in
mov
lock
cmp
sub
mov
sbb
rclb
mov
cld
sbb
clc
mov
mov
lret
hlt
inc
int3
iret
rorb
cltd
popf
outsl
inc
imul
lods
add
je
push
dec
hlt
sub
push
arpl
rorl
lock
movsl
shlb
push
in
add
mov
das
movsl
mov
movsl
cmpl
cmp
std
mov
sub
sbbb
jmp
push
push
iret
pop
dec
fs
fnstenv
add
shlb
xchg
and
sbb
ret
aaa
sbb
add
push
clc
out
or
push
push
xor
push
cmp
or
rorl
push
ret
xor
or
sbb
mov
pop
mov
jns
stos
mov
mov
or
dec
in
sbbb
cmc
push
push
int3
push
inc
inc
mov
lret
pop
mov
cmpb
pop
popa
loope
in
push
cmpsl
sahf
mov
call
lods
mov
movsb
mov
gs
lock
inc
add
add
hlt
sbb
test
push
mov
pop
dec
inc
testb
loopne
pop
inc
lcall
ret
mov
xor
notl
push
aam
pop
adc
addb
adcb
enter
dec
xor
test
adc
or
ljmp
jnp
jmp
ret
scas
fsubrs
out
push
insb
cmpb
addr16
cmp
ret
push
mov
icebp
mov
sub
clc
je
cmp
sub
xchg
dec
sub
push
add
adc
push
inc
push
and
cltd
jecxz
fwait
push
bswap
cltd
scas
add
ret
xlat
xor
push
fisubl
std
inc
cltd
outsl
xchg
lret
cmp
jl
test
mov
int3
xor
sarl
pop
sub
lcall
xor
cmp
jne
lret
fbld
sbb
push
add
iret
imul
aad
shll
mov
popf
ss
out
stos
adc
mov
sbb
and
iret
leave
loope
push
stc
push
popf
fcmovnu
loope
in
cmp
add
push
push
sahf
adc
push
sar
repz
xor
and
xor
bound
in
pop
adc
push
mov
lahf
in
xor
das
in
sub
movsl
loope
lock
out
push
dec
or
in
and
out
xorl
cli
adc
inc
or
pop
pop
call
push
cwtl
pop
imul
ja
adcl
and
mov
jne
call
cli
mov
inc
out
lock
rol
pmaxsw
push
shll
push
add
jl
cld
adc
sub
divl
add
cmp
fbld
ljmp
ret
or
loop
adc
fwait
xor
int
incl
and
cmp
je
sbb
jbe
push
punpcklbw
cmp
je
sti
mov
popa
pop
pop
mov
push
pop
sbb
jbe
add
inc
or
pop
pushl
test
mov
xor
fsts
push
mov
push
xchg
add
daa
add
test
push
sub
dec
and
cmpl
cmpsb
dec
or
shlb
adc
test
clc
mov
mov
mov
add
shlb
mov
inc
imul
in
scas
cltd
or
jne
ret
adc
dec
or
aaa
sbb
dec
and
mov
aas
dec
mov
hlt
mov
add
js
or
cld
daa
jecxz
push
cmp
je
xor
je
mul
seto
scas
push
filds
enter
imul
dec
aaa
dec
push
jmp
jnp
cmpsl
mov
push
xor
test
jbe
jge
movsb
inc
jb
iret
shl
cltd
push
insb
or
mov
aad
lret
cs
dec
inc
add
xchg
sbb
pop
popa
sub
inc
ja
or
inc
sbb
inc
add
push
sbb
loop
dec
cltd
inc
and
adc
andl
pop
sbb
inc
daa
push
inc
add
mov
or
nop
push
dec
mov
mov
hlt
xor
pop
sub
ds
xor
xchg
cmp
lods
addr16
mov
mov
jmp
push
and
leave
add
nop
cmp
push
in
pop
mov
mov
pop
lock
pop
sub
sbb
cmp
je
sbbb
add
mov
cs
lock
cmp
jne
xor
hlt
add
lret
xchg
adc
ss
add
decb
adc
insb
and
mov
faddp
jmp
jl
ret
fwait
jle
lahf
pop
push
test
je
cli
jmp
mov
inc
jno
test
negb
inc
cmp
jae
add
xor
mov
inc
xor
cmp
add
mov
push
sbb
cmp
jne
and
xor
subb
add
mov
push
ss
push
inc
aad
inc
jmp
repnz
scas
mov
test
dec
cmp
les
sub
lcall
mov
cmp
xor
scas
sub
lret
je
jno
pop
das
movsl
negl
clc
push
push
jne
les
mov
sbb
stos
dec
or
xlat
dec
enter
and
or
insb
in
cmp
jne
sub
fisubrs
ja
lea
cld
xchg
test
dec
mov
roll
rorb
push
jle
add
ljmp
jns
mov
pusha
loope
or
inc
jae
je
subl
shr
addl
or
mov
or
push
or
mov
push
mov
inc
sub
xchg
inc
sbb
jg
push
rcrb
sbb
cmp
mov
cmp
or
insl
stos
shrl
mov
fwait
or
pop
add
mov
mov
sub
jno
or
mov
push
or
addb
jnp
add
inc
aad
push
push
movsl
or
or
clc
sub
lea
push
mov
jl
mov
push
imul
in
push
je
gs
xor
xchg
jmp
mov
ret
and
cmp
xchg
test
js
sbb
inc
push
add
adcb
inc
icebp
dec
push
test
sub
out
push
clc
test
sub
js
push
push
iret
sbb
adc
dec
imul
pop
ret
rclb
add
push
jae
fiadds
jmp
test
mov
add
jne
mov
rolb
push
sub
mov
neg
addl
ret
sub
cli
jp
or
push
adc
js
jne
test
mov
push
push
pop
adc
je
inc
jmp
in
or
int
mov
xor
dec
add
popf
cmp
or
sub
in
ljmp
adc
push
ret
or
rolb
inc
mov
mov
pop
ret
xchg
outsl
xchg
popf
dec
pop
bound
in
push
lods
xchg
mov
in
adcb
mov
cltd
jbe
and
jnp
jno
cwtl
test
xchg
add
jmp
jg
imul
add
sub
lock
add
loope
and
movl
and
add
mov
or
cmp
clc
and
inc
adc
imulb
mov
mov
pop
and
mov
in
pop
add
pusha
or
aam
mov
int
add
cwtl
fmull
sbb
je
outsl
test
sbb
aam
mov
icebp
xor
enter
sub
lahf
mov
push
add
imul
movl
jg
pop
inc
or
mov
push
or
xchg
pop
sub
sbb
enter
pop
cs
in
dec
lahf
or
mov
fmull
sub
into
addr16
jmp
inc
push
scas
leave
ret
cmp
mov
mov
sbb
mov
or
test
mov
cmp
js
mov
and
ljmp
pop
je
orl
push
mov
test
dec
rcll
sub
movsl
or
push
mov
jp
jle
mov
sbb
sbb
sub
mov
jnp
mov
ljmp
push
addb
add
dec
sub
movsb
repnz
popf
dec
fisttpl
push
push
add
inc
rcll
sub
orl
shll
loope
pop
inc
mov
insl
lods
mov
pop
and
mov
pop
popf
xchg
or
int3
cmc
repz
lea
push
fnstcw
sub
sub
or
sbbl
sub
daa
sub
xor
add
cmp
adc
rcrb
dec
outsb
adc
rcll
fisttps
cmp
jbe
call
sbb
inc
ret
pop
cmp
aad
repz
imul
pusha
inc
sbb
test
adc
iret
mov
in
insl
shlb
cltd
xchg
daa
andb
out
fcompl
repz
lret
and
adc
push
pop
mov
and
ficoml
insb
xor
jecxz
iret
sar
or
sub
push
cltd
fsub
call
pop
push
daa
pop
leave
lea
cmpsl
adc
mov
in
push
loopne
hlt
enter
clc
adc
aad
push
iret
enter
push
dec
outsb
inc
les
sub
sbb
add
cmp
cmp
jp
sbb
adc
and
jae
mov
push
push
pop
inc
xor
test
and
and
int
sbb
mov
jmp
mov
jecxz
aaa
push
sahf
js
push
rolb
jp
ret
loopne
mov
loop
push
in
or
popf
add
mov
sub
lods
mov
adc
sbb
daa
aaa
inc
inc
mov
jb
mov
loop
mov
bound
xor
cmpl
and
inc
or
aad
pop
andb
push
stc
pop
xor
pop
and
lahf
adc
and
sub
sbb
fwait
addl
pushf
out
sbb
jg
push
cs
push
pop
fwait
aas
pop
pop
push
movsb
loopne
cmp
in
pop
xor
fimuls
and
sbb
sbb
in
sub
test
ljmp
lahf
push
fdivr
faddp
nop
mov
mov
js
push
ret
fisttpl
test
pop
inc
inc
das
add
mov
pop
sbb
mov
pop
hlt
push
dec
aad
mov
rolb
mov
xchg
and
outsb
cmpb
and
std
lods
es
cmp
cmpsl
and
xor
mov
dec
ret
dec
adc
into
and
cmp
scas
mov
stos
dec
or
rolb
mov
call
clc
adc
das
pushl
mov
sub
test
hlt
mov
adc
add
mov
push
push
adc
sbb
xchg
xchg
enter
mov
sbb
or
test
pop
lods
sbb
add
cmp
jl
test
jno
xor
xchg
sub
test
inc
mov
addr16
jmp
adc
pop
xchg
pop
ja
xchg
fiaddl
popa
xor
push
in
push
push
mov
in
test
push
fcoml
scas
and
test
pop
dec
push
std
lods
mov
mov
dec
sar
js
loop
out
push
push
push
in
mov
mov
lret
hlt
cwtl
or
or
add
xlat
cltd
or
mov
pop
mov
cs
push
add
push
insl
inc
test
mov
dec
hlt
add
push
imul
ret
jo
shll
ss
xor
dec
lcall
jno
orl
stos
nop
or
or
mov
sbb
imul
js
xchg
popa
inc
inc
dec
jmp
mov
lods
test
out
dec
push
sub
adc
jmp
jae
loopne
movsl
pusha
jo
inc
insb
pop
mov
and
loopne
fmull
in
movb
add
mov
inc
pop
ret
sbb
cmp
inc
push
popf
idivb
loopne
mov
xchg
mov
add
add
cmpsl
adc
in
xchg
sbb
pop
sarb
ljmp
inc
or
inc
jno
mov
mov
xchg
inc
or
or
jg
loope
mov
jne
pop
xchg
je
popa
push
push
lock
xchg
fstpt
mov
or
jbe
ljmp
xor
jle
xor
in
sarb
test
fmuls
rcrb
jnp
jl
rorb
pop
cmp
inc
mov
gs
insl
test
push
imul
inc
xchg
mov
push
icebp
adc
enter
out
jle
sbb
add
xor
cltd
xor
sbb
mov
loope
shll
add
cltd
inc
sbb
adc
fists
clc
cld
outsl
mov
clc
inc
push
sahf
sbb
fadds
or
sbb
mov
cmpsb
adc
fmuls
xchg
loope
shl
or
mov
xlat
loopne
pop
rol
inc
cli
inc
lock
daa
in
add
add
xchg
push
popl
or
repz
neg
test
inc
or
cld
sub
mov
mov
xchg
cmp
sub
xor
stos
jle
push
into
dec
xor
inc
incl
scas
es
add
xchg
push
js
inc
push
pushf
pusha
out
or
mov
shlb
js
lds
and
xchg
rcrl
repnz
sbb
adc
fucomip
in
and
daa
and
jno
or
outsb
adc
icebp
xchg
clc
aas
dec
add
add
xorl
xor
add
or
imul
dec
sbb
or
sahf
xchg
cmp
sub
lahf
sbb
cmpb
pop
or
loope
push
adc
cld
mov
out
jnp
orl
push
push
lock
push
jp
inc
je
out
xor
or
push
outsl
adc
cmp
or
shlb
add
dec
loope
add
xor
adc
dec
rorb
xor
xchg
cmpb
out
add
pop
jne
push
mov
pop
ret
push
inc
or
mov
out
mov
popf
mov
dec
stos
and
rorb
pushf
add
movsb
adcl
rcrl
dec
adc
cmp
jbe
sbb
inc
outsl
aas
sbb
sbb
adc
mov
xchg
stc
jae
cmp
jb
cmp
dec
mov
dec
adc
rcrb
mov
add
incl
cmp
lcall
adc
inc
je
ret
add
cmpsb
sbb
addb
dec
call
enter
andb
fildl
insb
pushf
add
pushf
inc
and
inc
xchg
push
cmp
dec
pop
or
push
push
or
out
add
push
aas
adc
push
push
fdivrs
aaa
push
addl
add
sbb
mov
adc
push
aas
ret
aam
out
and
add
shlb
push
test
sbb
jmp
test
mov
mov
imul
icebp
rorb
xorl
fmul
or
loope
adc
rclb
outsl
lcall
push
push
lea
out
arpl
cmp
adc
lea
xlat
jno
and
push
es
fwait
push
push
aam
push
pop
add
pop
mov
adc
in
insl
xlat
push
inc
pop
xchg
or
pop
adc
lock
pop
sti
jb
popf
dec
adc
add
xor
or
or
fmuls
loop
mov
scas
sub
cmp
mov
push
xor
fs
mov
cld
cmpsl
andl
push
ret
pop
xor
and
aas
pop
sbb
inc
pop
push
and
cmpsl
or
les
inc
adc
mov
jp
xchg
orl
in
mov
mov
and
xor
repnz
and
roll
inc
sbb
or
loop
sahf
jle
sbb
sub
pushl
add
dec
shlb
roll
data16
inc
cmpsb
pop
ffreep
inc
or
push
sbb
les
sbb
fcoml
faddl
addb
inc
sub
dec
shl
sub
cwtl
jle
lea
and
stos
jb
dec
pusha
xchg
ret
push
pop
lea
mov
jge
add
add
js
lret
in
dec
add
inc
add
mov
enter
sahf
shlb
sbb
xlat
and
les
popa
and
mov
cmp
je
sbb
incb
pop
sbb
pushl
lea
lea
xor
mov
or
xor
and
imul
enter
test
fimuls
mov
push
sub
lret
int3
pop
aam
and
xchg
push
inc
add
ja
hlt
dec
stc
mov
and
pop
pushf
xchg
add
and
cmpsl
imul
lcall
shlb
sub
cmp
cmc
add
test
mov
sbb
sub
mov
loope
cmc
and
iret
ja
repnz
popf
jmp
cmp
mov
adcl
call
pop
int
daa
and
inc
pop
inc
cmp
in
aaa
mov
rolb
or
xor
out
adc
pop
in
test
mov
push
out
cmpb
push
lock
daa
or
idivb
je
sub
mov
out
hlt
aas
mov
cmp
lods
jo
jg
and
xchg
lret
mov
adc
imul
inc
mov
jne
sub
sub
mov
pusha
add
fisubl
xor
das
cwtl
por
push
add
fwait
popl
xor
jge
int
jns
and
add
pusha
pop
ret
aaa
mov
cmp
add
ss
or
mov
out
pop
and
orl
sub
decl
xchg
xor
dec
push
je
dec
jne
dec
js
sbb
out
clc
adc
push
inc
loope
insb
and
das
lahf
xor
or
add
test
inc
leave
mov
nop
int3
pop
cli
lea
dec
lea
repz
in
cmp
sbb
mov
mov
movsb
popf
les
or
push
cmp
popf
lret
movl
fsubl
xor
fdivr
xchg
gs
mov
lea
cli
jb
adc
loope
xchg
rorb
xor
adc
sbb
or
xchg
ja
xchg
pop
sbb
insl
je
movsb
mov
inc
aas
add
cmpsb
push
lret
mov
inc
and
sbb
jge
popf
popa
test
dec
mov
arpl
adc
adc
add
fs
push
xor
push
push
xchg
pop
adc
dec
inc
ret
xor
add
into
mov
and
cmp
testb
push
add
push
sub
sub
ds
je
lahf
push
sarb
rorb
mov
aam
or
pop
jno
adc
xor
sub
xor
add
lock
les
and
jg
sub
inc
lea
push
and
mov
push
or
sub
loope
out
out
jle
jo
push
jne
cmp
jbe
sub
push
ljmp
pop
mov
into
jmp
sbb
fcomps
popa
dec
pusha
clc
nop
mov
xlat
cwtl
cmp
ret
arpl
clc
jb
fists
into
ret
mov
push
test
pop
push
xorl
cld
dec
test
mov
pop
pop
ret
adc
out
push
xor
jo
cmp
adc
sbb
lock
push
lods
adc
rol
add
push
test
push
xlat
mov
jbe
shr
and
je,pn
aaa
js
in
inc
loopne
stc
cmp
sub
push
xor
addl
adc
mov
bound
cmpsb
stos
xchg
adc
xlat
inc
pop
dec
push
jmp
je
test
testl
mov
xor
jmp
add
dec
xchg
icebp
in
xorb
adc
enter
push
sub
mov
or
pop
pop
ljmp
adc
mov
sbb
push
sahf
inc
cmp
adc
mov
xchg
and
push
mov
cmp
push
and
fbld
idivl
push
mov
mov
cltd
push
push
push
cli
mov
into
cmp
jnp
add
jnp
lds
inc
movsl
jbe
lock
pushf
movl
aaa
sti
jo
add
inc
adc
push
and
sub
dec
push
add
les
xchg
and
sbb
xchg
fidivs
add
push
mov
pop
pop
leave
jecxz
sti
rclb
mov
in
ss
mov
add
sub
adc
cmp
std
push
jecxz
sbb
and
jge
icebp
mov
mov
or
adc
add
insb
sub
ret
test
inc
pop
int
int
gs
dec
add
andl
xchg
popa
push
mov
ja
xor
loop
lds
add
dec
add
lods
jnp
jo
pusha
jo
enter
insb
mov
xor
xchg
push
dec
inc
jge
call
in
jnp
dec
mov
popf
mov
faddl
xchg
jl
daa
mov
xor
push
repz
test
xchg
sub
fs
push
imul
xor
mov
mov
pop
jae
inc
cmp
add
jns
mov
shlb
imul
cwtl
mov
xchg
adcl
std
cmpb
je
push
sbb
stos
popf
pop
push
loope
fiaddl
xchg
xchg
and
in
loop
stos
push
sub
lods
adc
fdivrl
imul
cli
pop
or
nop
out
and
or
jge
xor
mov
imul
or
mov
in
fadds
and
mov
xor
lret
jle
jnp
lods
and
mov
jae
into
and
aas
rorl
mov
daa
inc
in
lret
push
pop
pop
xchg
push
add
daa
jne
div
test
xor
subl
mov
add
mov
inc
test
jl
ss
or
fs
mov
inc
dec
mov
push
mov
popa
lock
cmpsb
mov
fs
je
subl
cmc
mov
test
sbb
out
daa
dec
je
mov
fsubr
sbb
sbb
cmpsb
pop
lock
incl
inc
sub
jns
push
test
cmp
pop
ret
orb
cmp
aam
dec
and
dec
cmp
dec
inc
or
sbb
pop
pushw
sbb
pop
push
popf
cmp
in
mov
or
test
pop
xor
sub
lea
in
aaa
sti
mov
sbb
and
sbb
cld
pop
inc
std
xchg
adc
sub
xor
in
addl
hlt
mov
mov
xlat
push
ret
dec
pop
mov
cmpsl
mov
es
daa
iret
push
or
push
mov
adc
jno
into
test
or
adc
sbb
push
mov
push
xor
mov
sub
imul
outsl
cmp
jg
popf
or
aas
loop
sub
dec
cwtl
stos
imul
jl
push
outsl
arpl
xor
inc
mov
xchg
cmc
jns
mov
in
xchg
pop
mov
xor
gs
inc
aam
dec
test
push
cli
insb
cmp
sbb
xchg
push
xor
rcl
test
or
and
inc
push
pop
dec
test
cmc
adc
push
out
cmp
jge
xchg
stos
dec
sbb
movsb
sahf
xchg
jmp
pusha
jbe
lahf
xchg
cmp
insl
out
sbb
push
push
dec
and
sbb
sbb
cmp
xchg
ss
and
dec
inc
in
push
int
fbstp
sbb
add
sub
adcb
int
push
mov
jecxz
lods
dec
add
inc
fidivrs
shlb
out
pop
or
jp
sbbl
inc
dec
xchg
add
xor
sbb
aaa
cmc
andb
add
inc
sahf
loop
movsb
pop
xchg
and
pop
mov
aaa
fistps
cmp
imul
fstl
add
out
subb
sub
fwait
xorl
lock
push
adc
xor
or
in
push
testl
push
mov
pop
cmpsb
loope
lret
std
aas
in
pushf
pop
pop
test
in
pop
mov
xchg
inc
push
or
cmpsb
cwtl
or
push
and
out
adcl
sub
dec
sbb
in
and
imul
inc
dec
adcb
sub
sub
dec
fisttpll
and
jl
stos
or
shrl
fcmove
or
push
mov
or
jmp
out
subl
lods
loope
rclb
movsl
xchg
mov
cmp
daa
xlat
lea
loop
jne
push
or
aaa
sub
push
add
inc
cld
lods
mov
lods
pop
pop
cltd
adcl
jo
cmp
and
xchg
and
and
inc
jo
mov
mov
mov
and
sbb
adc
rorb
xor
dec
dec
sbb
nop
mov
mov
and
lea
cmp
xor
jo
insl
nop
xor
mov
je
push
push
mov
jb
push
enter
sub
add
add
pushf
inc
aaa
ret
dec
ss
and
cmp
xor
lret
pop
push
adc
jno
pop
mov
inc
push
test
cmp
je
cwtl
xlat
cmp
push
daa
dec
xchg
inc
dec
dec
cmp
jecxz
cwtl
and
add
movsb
outsl
jne
lea
icebp
movsl
cmp
inc
pusha
enter
xor
add
mov
inc
divl
or
sti
stos
je
icebp
adc
outsl
mov
mov
imul
push
cmp
jecxz
dec
rcll
adc
ja
adc
sub
test
sbb
adc
cmp
fwait
pop
push
lods
xor
lret
cmpl
sub
push
xchg
cmpsb
gs
inc
fidivrs
push
adc
cmp
or
in
cmp
push
and
sbb
imul
sub
cltd
adc
loop
and
test
cmc
jbe
mov
mov
mov
jo
mov
push
mov
pusha
adc
fstpl
jb
lock
add
scas
movsl
fldl
inc
pop
mov
in
mov
int
jecxz
adc
mov
lock
mov
mov
and
jl
xor
pop
cmp
xchg
jb
shlb
or
outsl
jmp
pop
iret
jbe
inc
adc
mov
mov
imulb
xchg
or
xor
mov
iret
push
add
jmp
pop
cmp
not
sahf
fwait
mov
xor
cmp
or
adc
cmpsb
jmp
mov
je
and
sub
shll
pushf
push
andb
ja
push
adcl
loope
adc
imul
popa
dec
and
sarb
mov
mov
pop
jecxz
dec
cltd
cwtl
lret
cltd
loope
dec
movsl
pop
sub
pop
sbb
xchg
ret
enter
push
cli
popf
mov
xchg
cwtl
cmp
lret
repz
in
divb
mov
adc
ss
xchg
xchg
mov
lcall
outsl
pop
fcomps
pop
push
pop
jge
roll
push
lea
cmp
xorl
in
pop
push
cmpsb
or
loopne
int3
lret
inc
adc
adc
mov
mov
xorps
lret
loope
shlb
push
sub
or
xor
packuswb
ret
cmp
sub
push
das
cmp
sbb
push
cmp
js
push
push
sbb
jb
push
jecxz
push
dec
push
xchg
adc
jp
lds
push
pop
sti
sbb
or
ret
pusha
fcoms
jnp
fidivrl
dec
test
pop
repnz
inc
sub
int
pop
orl
sbb
dec
and
nop
sbb
and
nop
or
call
and
and
and
mov
pop
jb
and
or
jne
sub
ret
mov
nop
es
shl
dec
lds
push
or
popf
push
hlt
rorb
xchg
daa
xchg
sub
test
inc
jmp
stc
cwtl
sub
and
stos
jae
sub
jb
sbb
pop
sub
mov
sub
xchg
sbb
pusha
pop
push
insb
jbe
dec
add
mov
pusha
xor
arpl
pop
mov
push
push
sbb
mov
mov
inc
das
or
push
roll
mov
dec
mov
and
les
outsl
jne
sub
or
inc
push
repz
dec
mov
add
cvtdq2ps
shlb
push
sti
fcoms
and
movsb
jns
lcall
jns
and
fistpll
movsb
adc
and
and
test
add
arpl
add
mov
add
xor
daa
imul
inc
xchg
inc
or
dec
push
inc
pop
and
adc
cmp
test
and
fisubl
movsb
xchg
add
or
movsb
push
add
aad
in
mov
sti
push
adc
and
jle
or
and
cmpsb
es
cmp
in
ficoms
xor
lock
xchg
loope
pop
jne
xor
inc
popf
push
rclb
sub
lock
add
enter
mov
pop
insb
dec
leave
daa
or
sub
pop
popf
lds
pusha
loopne
add
push
aam
outsl
mov
sbb
push
in
js
mulb
mov
and
jne
add
call
push
test
test
in
cmp
je
mov
and
sub
jne
fildll
mov
or
pop
and
stos
pusha
push
pop
push
xor
loopne
push
push
dec
mov
test
adc
je
mov
push
push
icebp
sahf
cmp
xor
lock
adc
test
push
push
icebp
or
adc
xor
and
scas
sub
pop
lock
sbb
xor
inc
fisttps
push
pop
mov
je
inc
xlat
adc
hlt
jecxz
test
push
mov
and
adc
bswap
push
shrl
mov
arpl
mov
jl
inc
add
les
mov
mov
sbb
dec
test
gs
xchg
int3
jge
xorl
xor
lcall
mov
jnp
jp
xor
adc
cmp
fnstcw
scas
imul
xchg
adc
test
mov
mov
sarb
aad
pop
enter
push
fidivl
les
adc
pop
mov
pushf
cmp
shll
cs
clc
pop
xor
scas
out
or
loop
push
push
addl
jg
testl
ja
cmpb
lock
je
adc
cltd
jp
aaa
sbb
inc
or
push
cmp
clts
bnd
jl
adc
lahf
or
adc
mov
sub
sub
es
push
orl
adc
subb
loopne
sarb
adc
out
cmpl
repnz
fincstp
pop
push
clc
imul
shrb
dec
add
jle
inc
inc
push
push
adc
add
andl
in
inc
jo
movl
push
dec
jecxz
mov
adc
mov
sarb
jno
inc
aas
xchg
daa
xor
cmp
inc
aad
adc
movsb
rcrl
mov
aam
pop
pop
mov
sub
inc
jcxz
mov
mov
mov
popf
mov
loope
clc
lea
jae
jle
ret
sbb
adc
jl
mov
lea
inc
sub
nop
add
fnstenv
add
loopne
les
in
mov
adc
and
pop
cmpsb
dec
dec
mov
bound
mov
and
dec
or
cmpl
inc
dec
subb
push
inc
jmp
mov
jo
cmp
bound
aaa
imul
bound
pop
out
lds
fistl
enter
adcl
loope
icebp
and
inc
add
cmp
pusha
pop
mov
inc
sbb
nop
popf
jg
mov
mov
add
add
movsb
inc
or
popa
ja
stos
mov
test
mov
repnz
sbb
xchg
mov
mov
fiadds
mov
mov
dec
cmpsb
or
sub
add
fisttpll
or
int3
nop
pop
sbbl
or
mov
aas
sbb
push
mov
or
das
or
mov
add
cmp
push
add
xchg
in
fchs
test
dec
push
in
push
sbb
jp
out
jecxz
imul
fsub
cmp
jle
cld
jae
inc
add
outsb
mov
mov
sbb
and
or
mov
cmp
rolb
shlb
pop
xor
fiadds
or
pop
sub
dec
ret
cvtps2pd
div
sbb
mov
lret
jp
cltd
sub
daa
repnz
push
jmp
add
daa
loop
sbb
outsb
push
rolb
sub
inc
inc
or
mov
pop
inc
push
mov
dec
sub
mov
lods
add
aas
push
ror
cmpsl
rcrb
cmc
mov
add
stos
xor
mov
cli
sbb
cmp
rcrb
add
mov
arpl
add
pop
xor
dec
add
adc
inc
mov
inc
fisubs
call
out
push
add
jle
push
movl
jp
pop
xchg
add
inc
add
or
cld
lea
dec
cmp
or
xchg
xchg
inc
or
mov
sbb
inc
or
cs
loopne
inc
adcb
insb
sti
in
push
ficoms
pop
add
lds
inc
scas
loopne
lds
push
push
push
imul
gs
push
push
adc
andl
add
pmaxub
cmp
iret
inc
test
sbb
mov
pusha
pop
lea
dec
jmp
adc
adc
dec
pop
subl
popf
pop
adc
jp
add
dec
loopne
or
mov
inc
mov
jbe
scas
push
sub
and
add
push
fimuls
inc
mov
cmp
inc
xor
mov
mov
adc
mov
push
cmpsl
mov
mov
out
xor
loopne
cmp
lods
pop
adc
adc
push
adc
xchg
mov
inc
lea
inc
pop
dec
pop
popa
push
mov
push
or
xor
and
popf
adc
pop
pop
scas
or
cmp
push
js
inc
add
test
lret
lods
adcb
movsl
inc
lods
fidivl
addb
jo
adc
push
cmp
popa
nop
clc
cwtl
sbb
mov
xchg
inc
notb
outsl
popf
scas
sti
orb
xchg
mov
mov
adc
push
pop
xor
mov
mov
xchg
push
lea
dec
jge
int
push
push
xor
dec
mov
fsubrs
xchg
out
push
daa
mov
sbb
jnp
pushf
movsl
inc
je
sahf
loopne
mov
incl
das
inc
addb
and
add
push
fdivr
js
popf
fs
sbbl
rorl
sbb
outsb
sbbb
jmp
mov
cmpsl
push
or
adc
ljmp
adc
es
lahf
inc
filds
jns
add
push
sub
dec
pop
push
dec
cmp
xor
rorb
add
sub
adc
pop
aaa
xchg
pop
xchg
mov
jp
js
fisubrl
fdivs
pop
add
jb
xor
add
in
call
cmp
rolb
jbe
pop
test
fnsave
jmp
dec
addl
jg
mov
mov
js
mov
fistpll
movsb
pop
mov
callw
xchg
push
push
lcall
dec
adc
test
xor
dec
iret
or
loope
inc
cmp
in
xor
movsb
push
push
lea
xor
jne
inc
js
ficompl
cmp
nop
mov
movlps
enter
pop
sub
adc
mov
mov
and
outsb
stos
xor
add
data16
push
pop
rolb
test
sti
adc
fidivs
xchg
add
test
aas
push
xlat
push
and
adc
xor
inc
or
sub
dec
add
dec
aaa
jb
add
jmp
adc
xchg
and
scas
cmp
push
sbb
inc
pop
andb
jle
lret
jge
enter
popl
cli
push
sbb
add
lcall
mov
add
sar
dec
lret
inc
inc
push
mov
add
outsl
in
inc
cmp
dec
dec
inc
icebp
movsb
sbb
dec
or
xchg
ret
sahf
lods
fcoms
mov
arpl
jge
push
inc
jecxz
fstps
pop
jecxz
mov
xchg
ss
or
xchg
push
lcall
out
mul
sub
jl
adc
sbbl
jo
push
add
adc
subl
mov
cmp
shlb
push
lods
nop
out
bound
lret
movsb
xchg
jge
and
adc
sbb
xchg
cmc
loopne
xchg
addl
xor
out
jae
sub
cmp
xchg
jns
push
ljmp
cmp
pop
xlat
addr16
push
fdivs
mov
pop
cmp
insb
xchg
insb
jo
push
xorb
mov
sti
push
and
mov
into
xor
mov
sub
adc
dec
dec
fs
or
add
dec
and
and
add
inc
test
and
add
jbe
cmp
out
inc
cwtl
xchg
adc
jecxz
jne
dec
in
clc
xchg
push
pop
push
int
mov
test
mov
mov
sbbl
cmpsl
aam
and
mov
cmp
push
and
mov
push
push
or
add
cmp
dec
jae
lea
jno
scas
push
jo
dec
inc
add
xchg
xorl
test
adc
push
add
test
mov
mov
jnp
imul
andb
adc
xor
mov
or
rcrl
add
xchg
out
movl
pop
add
bnd
scas
loopne
jnp
inc
mov
dec
cmp
sbb
subl
push
dec
jp
mov
adc
ret
sub
push
je
add
js
lods
iret
push
fnstcw
pop
das
sti
sbb
pop
subl
sub
mov
scas
mov
inc
mov
in
jb
sub
and
jne
mov
enter
pop
xchg
cwtl
sarl
add
int3
adc
sbb
push
mov
cmp
pop
sbb
sbb
mov
xor
inc
sar
adc
ret
sbb
add
adc
mov
adc
push
mov
nop
lds
loopne
mov
mov
mov
sub
bts
or
imul
fdivl
mul
mov
testb
xor
dec
loopne
movsl
add
mov
fsubrp
push
js
popa
add
movsbw
mov
jno
jne
and
outsb
mov
or
je
adc
fwait
dec
testl
arpl
adc
mov
pushf
mov
cmp
push
inc
fldpi
mov
hlt
push
inc
div
sbb
mov
or
je
mov
in
pop
dec
lret
pop
js
je
lret
pop
mov
pop
insl
mov
pop
add
lock
imul
mov
mov
movsl
jecxz
std
xor
mov
aas
lea
stc
lock
gs
inc
dec
cmp
ss
add
xchg
push
xor
loopne
je
fs
adc
subl
lcall
scas
push
xor
pop
pop
iret
gs
jbe
mov
fwait
and
sub
mov
sbb
jns
std
lock
sub
gs
jmp
inc
pop
push
inc
or
sub
sbb
mov
cmp
inc
mov
adc
add
out
fidivrs
inc
imul
jno
pop
sbb
xchg
pushl
push
push
ja
in
jmp
mov
sub
das
ret
mov
stos
mov
hlt
and
inc
loope
sub
ffree
leave
inc
mov
push
push
rorb
sbb
and
jl
adc
mov
rorb
sub
push
ret
imul
and
test
insb
add
dec
xlat
popa
cmp
mov
sbb
xchg
das
push
lock
and
jno
adc
test
cmp
cwtl
in
adc
mov
das
aam
mov
inc
adc
jecxz
xor
out
add
imul
in
mov
mov
hlt
sub
xor
lcall
shrb
cld
adc
or
sub
andb
adc
lret
test
xchg
in
add
mov
cmp
adc
clc
mov
pop
and
je
inc
and
mov
push
jbe
pop
jae
xor
test
in
loope
jnp
push
dec
pusha
leave
orl
insl
and
lret
enter
mov
in
or
inc
ja
mov
hlt
in
dec
mov
movl
sub
mov
cs
sub
gs
mov
cmp
inc
xchg
jbe
xor
mov
adc
adcb
or
rclb
adc
loopne
mov
pop
cmp
call
adc
add
sbb
insb
and
sub
jno
adc
mov
jns
xor
or
mov
movl
clc
push
popa
cmc
mov
mov
cmp
inc
dec
inc
pop
inc
scas
cmpl
test
int3
shrb
add
pop
int
sbb
add
sbb
addl
icebp
sub
sbb
dec
jmp
and
sub
cld
or
jne
movsl
add
and
movsl
rcll
mov
sbb
dec
xchg
inc
in
subb
jp
push
push
and
aam
hlt
jo
mov
fsubrl
sub
or
arpl
es
clc
sub
dec
stc
add
pop
sub
push
add
push
push
push
push
shlb
loop
xor
in
and
popf
lds
xor
push
roll
xchg
mov
call
sub
cmp
and
push
cmp
jne
pusha
dec
ret
mov
popa
push
je
jns
xchg
xchg
pop
xchg
icebp
test
mov
sbb
cmp
data16
loopne
lahf
rcll
dec
pushf
popf
lds
dec
xchg
sbb
mov
das
adc
adc
pop
shr
cs
sahf
mov
shl
mov
pop
push
sub
test
js
and
lret
mov
lahf
pushf
jmp
push
inc
cwtl
lcall
orl
hlt
adc
mov
pop
in
clc
inc
add
push
pop
add
lret
xchg
ret
lods
fnstsw
mov
mov
mov
idivb
or
cmp
js
add
xor
pop
sbb
jbe
sub
or
dec
popf
enter
jmp
push
inc
lret
dec
clc
sbb
jnp
add
add
mov
dec
sbb
adc
cmp
ss
cmp
mov
push
xchg
pushl
pop
or
inc
sub
movsb
icebp
inc
sub
add
rcll
sbb
xchg
dec
inc
inc
movb
iret
pop
inc
cltd
icebp
imul
addr16
stos
enter
dec
add
xor
outsl
cwtl
mov
and
push
imul
sub
jb
jg
push
push
shll
arpl
movsb
adc
pop
in
insw
xchg
addr16
cli
adc
lock
xchg
cmc
std
pop
dec
jbe
cmp
push
mov
out
cmp
inc
jne
push
jno
add
or
jnp
add
lret
adc
push
push
pinsrw
loopne
inc
faddl
lea
xchg
xor
add
mov
add
add
push
push
jl
mov
xor
jg
sbb
push
push
inc
adc
cmp
push
jo
mov
adc
xor
jmp
clc
add
adc
clc
es
fmull
push
mov
push
movsl
dec
adc
sbbb
jns
fadd
mov
and
das
arpl
rorb
js
xchg
les
dec
in
bound
mov
cmp
addr16
inc
pop
por
and
dec
lods
mulb
jge
mov
jl
adc
jl
movsb
mov
dec
cmp
adc
ss
outsl
mov
jbe
xchg
scas
sub
pop
into
pop
dec
pop
jo
scas
add
jmp
cmp
push
inc
rolb
jmp
sbb
lock
pop
int3
je
ds
int3
pop
loop
and
push
xor
loopne
daa
adc
adc
or
jmp
cmp
push
push
in
and
imul
mov
sub
negl
dec
mov
jle
insb
xor
pop
cmp
cmp
push
dec
jge
inc
jo
and
xchg
mov
cmpsb
test
add
jecxz
push
pop
add
decb
test
jge
push
loope
daa
aas
fstpt
dec
pusha
in
mov
sbb
lret
test
mov
ja
or
pop
add
inc
test
mov
xor
lea
jns
push
mov
addl
stos
jno
scas
adc
push
shll
lea
fldenv
jge
std
popa
sub
aas
push
lea
push
loopne
or
imul
loopne
int
test
test
add
xor
xchg
xlat
adc
jnp
mov
pop
sub
andb
sbb
adc
xchg
mov
adc
pop
mov
pusha
push
nop
stc
jle
add
cmpw
sbb
cmpb
stos
adcb
sbb
push
lret
testl
add
add
sar
dec
mov
push
je
jl
ja
mov
jns
icebp
sbb
pusha
adc
pop
jns
pop
adc
or
add
xor
popf
xchg
je
and
mov
cld
rolb
mov
dec
push
loopne
pusha
sub
jl
sub
jmp
out
jg
and
pop
sti
lcall
dec
movzwl
cmpl
push
adc
dec
outsl
or
loope
dec
dec
add
add
xchg
dec
sti
rcrb
sbb
add
insb
andb
jl
repz
lock
insb
cwtl
jae
outsl
xchg
xchg
dec
inc
addr16
inc
pop
mov
add
add
sbb
bound
pop
sbb
pop
in
or
pop
xchg
pop
and
pop
add
jo
pop
enter
cmp
jne
jb
fs
dec
xchg
add
enter
pop
dec
pop
push
pop
push
dec
aad
mov
jo
cmp
lock
and
lea
jle
int3
roll
pop
push
add
ficoms
sbb
out
in
and
andb
push
push
inc
and
and
sub
orb
or
sbb
xor
push
aaa
pop
mov
popa
sub
adc
and
push
mov
or
adc
rolb
pop
xor
and
adc
shr
inc
pop
mov
xor
lock
cmp
mov
movhps
fwait
jle
adc
push
inc
jg
mov
add
pop
dec
inc
iret
mov
ss
cmpsb
addl
dec
das
in
lret
push
mov
cld
test
lock
jmp
sub
sub
mov
and
or
mov
xchg
shll
lods
popa
adc
stos
mov
jbe
inc
adc
orl
int3
and
push
add
or
jne
inc
pusha
mov
push
dec
inc
and
cld
pop
lods
or
inc
push
pop
dec
daa
xchg
fisubrs
outsb
push
cmpl
pop
je
or
adc
inc
add
andb
dec
or
mov
faddl
cmp
push
lahf
leave
sbb
jl
rolb
in
push
or
xchg
mov
inc
hlt
ds
inc
lea
mov
pusha
push
enter
mov
mov
mov
jne
imul
dec
movsl
shrb
mov
sub
divb
and
and
scas
push
pop
xchg
dec
xchg
mov
add
movsl
aad
lods
adc
in
push
or
scas
xor
xchg
sbb
hlt
lcall
ja
jnp
dec
pushf
nop
sbb
and
mov
jmp
loopne
inc
xchg
repnz
mov
in
add
jecxz
pop
pop
inc
fdiv
imul
push
mov
stc
and
adc
loope
incl
cli
dec
xor
fimull
push
data16
lock
adc
lahf
in
and
adc
cli
and
in
mov
sbb
arpl
sub
lret
nop
dec
sub
sbb
mov
jmp
icebp
sub
inc
mov
jae
sub
sub
les
or
inc
aaa
jmp
mov
sub
mov
push
das
pop
inc
lea
mov
cld
notl
or
xor
adc
adc
adc
ljmp
pop
in
pop
xchg
mov
adc
dec
or
sbb
adcl
test
xchg
scas
jno
test
idivb
insl
xchg
xor
add
sbb
inc
mov
add
inc
sahf
imul
sbb
sub
nop
and
nop
in
pop
aaa
adc
mov
pusha
mov
pop
ret
adc
push
mov
dec
clc
loope
push
add
dec
sub
push
or
push
inc
add
js
or
popa
inc
sahf
sbb
inc
ss
mov
jl
sub
pop
dec
mov
in
pusha
popa
dec
inc
inc
lock
jns
orb
test
jne
and
nop
repz
rcrl
and
xlat
sbb
test
mov
addr16
test
jno
mov
inc
sub
mov
push
loope
fwait
in
test
sbb
fnstsw
inc
and
call
pop
pop
xchg
lock
andl
add
xor
div
insl
daa
jo
push
cmpsb
loopne
adc
push
shr
cmpb
inc
out
fdivl
add
xchg
into
shrb
fs
popa
xchg
push
inc
add
push
enter
dec
pop
xchg
pop
rcll
jo
sbb
imul
rcrl
addr16
cmpl
loope
mov
movsl
inc
mov
adc
call
jge
add
andb
push
add
inc
call
cmc
add
dec
add
mov
aam
mov
mov
adc
movsb
rolb
cmpb
mov
jne
push
sub
movsb
cmp
enter
mov
dec
xchg
popa
xor
or
clc
iret
sub
in
jmp
add
inc
inc
sbb
adc
les
leave
js
pushf
outsb
dec
jnp
pop
mov
rorl
andl
add
out
and
jae
push
and
xor
pop
faddl
xor
test
pop
sub
cmp
lods
or
add
es
cld
hlt
xor
leave
test
or
sub
rclb
insl
fldenv
mov
xor
bound
push
push
pop
jo
add
stos
in
inc
stos
push
and
pop
inc
cmp
sub
mov
and
push
jne
adc
push
fcmovnu
or
lods
cmp
jmp
push
jg
lods
inc
inc
fldt
repz
cmp
out
pop
rorl
push
je
xor
and
out
or
jge
push
pop
sub
or
push
push
pop
subb
mov
push
mov
pop
sub
cmp
rcll
mov
fistpll
in
lds
mov
sub
adc
test
xchg
or
enter
rol
add
lods
and
ret
icebp
mov
pop
or
inc
or
pop
jo
pop
and
imul
mov
mov
dec
sub
nop
inc
cmpb
roll
decl
mov
orb
outsb
repnz
dec
inc
sub
and
push
or
and
icebp
or
iret
lret
mov
sar
mov
icebp
dec
pop
je
lods
dec
mov
test
aam
jecxz
xor
shlb
add
mov
icebp
andb
sbb
or
push
and
push
add
pushf
inc
xor
jne
lea
mov
xor
scas
dec
repnz
pop
sub
xchg
mov
pop
mov
or
adc
xchg
dec
jne
push
testl
and
dec
and
pop
inc
cmpsb
push
loope
lods
sbb
nop
lea
jae
nop
dec
pop
jb
or
or
or
nop
jge
es
jge
test
shlb
jo
add
pop
das
and
adc
pop
cmp
out
pusha
testb
xor
jbe
push
or
mov
inc
dec
or
xorl
mov
pushf
scas
shlb
or
add
add
or
push
or
fwait
add
cmp
adc
push
jp
cmp
cmp
pop
lea
mov
inc
inc
sbb
mov
rcr
adc
pop
cwtl
add
pushf
mov
sbbb
inc
mov
or
or
xchg
add
add
in
negb
push
ret
push
test
adc
cwtl
add
adc
sbb
inc
adc
arpl
adc
fnsetpm(287
rcr
rclb
adc
mov
pushf
ret
popa
xchg
shrb
pop
pop
shrl
pop
mov
sbb
mov
pop
mov
lcall
inc
add
es
lock
sbb
shr
rclb
fldt
sbb
pop
cs
stc
or
imull
adcb
fcoms
xor
adc
mov
divl
movaps
movsl
mov
pop
pop
cmc
js
mov
dec
jmp
mov
cmp
enter
xchg
xor
stos
dec
pop
sub
test
dec
ljmp
push
xchg
push
and
imul
sub
andl
sbb
shl
lret
and
fnstenv
pop
fwait
mov
mov
inc
hlt
push
rcll
and
pushf
pusha
jnp
xorl
in
xor
inc
or
push
jbe
pop
xor
xchg
and
adc
jb
push
dec
inc
dec
ljmp
xor
sbb
add
xchg
sti
mov
cld
icebp
mov
sub
cmp
and
push
rorl
enter
imul
fs
xchg
adc
add
mov
imul
pop
adc
cmp
xor
aas
ret
mov
sub
jmp
pusha
inc
mov
flds
and
jb
popa
test
hlt
or
addps
xor
or
sar
cmp
mov
scas
rorl
adc
dec
mov
cmp
push
inc
arpl
xchg
push
add
sub
scas
cli
xchg
mov
lret
push
cmp
popf
add
mov
lea
mov
sbb
lea
push
les
daa
test
inc
mov
push
sbb
dec
and
add
adc
andb
test
xor
mov
jmp
or
cmpsb
movsb
xchg
repz
test
mov
ljmp
lock
shll
dec
jg
or
inc
jns
pop
jecxz
push
pop
das
test
or
xor
nop
and
test
sbb
lods
pop
inc
and
inc
pop
pop
dec
xchg
fisubrs
inc
adc
sbb
nop
in
testl
je
adc
inc
mov
and
pop
les
inc
cli
adc
cmpsl
ds
movsb
push
dec
in
cmp
dec
inc
ret
fists
loope
xor
cmp
mov
fs
mov
faddl
cmp
push
iret
push
mov
cmp
inc
add
jp
sbb
lods
sub
push
and
mov
aam
js
dec
adc
mov
lcall
push
xchg
sbb
dec
and
add
movzwl
add
addl
fstps
dec
movsl
loopne
sbb
mov
cmp
inc
or
or
or
or
mov
mov
xchg
pop
pop
or
mov
xorb
dec
cmp
sbb
fistl
insb
roll
push
push
jnp
or
insl
inc
shll
cltd
push
and
ret
insl
dec
dec
mov
xor
cs
popl
or
mov
test
inc
push
mov
mov
mov
or
mov
xor
mov
pusha
sub
dec
imul
ds
push
inc
insb
out
push
mov
repnz
push
xor
jmp
adc
cmp
cmp
fsubs
mov
fisubl
roll
adc
or
add
sbb
into
jle
adc
ds
pushf
pop
pop
repz
dec
jl
test
inc
clc
jl
push
adc
and
push
adc
push
pusha
and
arpl
lcall
fisubrl
mov
sbb
mov
fmuls
xor
xchg
sbb
mov
mov
ret
movsb
pop
loope
jp
pop
pushf
pop
add
fidivs
sub
sti
adc
mov
das
in
sbb
mov
pop
jge
jmp
pop
cmpb
mov
mov
jae
sbb
xor
std
dec
push
sbb
xor
sbb
inc
lcall
imul
sbb
cmpsb
fstpt
pop
hlt
adc
add
push
dec
leave
popa
adc
or
mov
adc
adc
dec
push
sbb
adc
mov
dec
bound
pop
jl
es
xchg
fsubrl
xor
fst
icebp
push
sbb
pop
sbb
and
add
das
mov
xor
xchg
and
sub
dec
ds
nop
cltd
xchg
xor
fs
jno
lods
loop
filds
sbb
je
sbb
push
pop
rorb
xor
inc
scas
inc
pop
and
out
nop
sub
insb
mov
aaa
jmp
add
sub
dec
rorl
xor
jmp
xorb
pop
sbb
sub
es
inc
jge
add
push
push
cs
jmp
lods
push
xor
cmp
scas
dec
ss
push
ja
jae
push
inc
sbb
add
and
subl
into
mov
insl
lret
push
imul
push
or
adcb
and
repz
or
adc
xor
cmpsb
js
inc
sbb
cmp
test
je
test
sub
inc
test
ja
fistl
stc
mov
xor
hlt
lock
das
jmp
push
sub
cs
adc
movsb
pop
push
push
mov
loopne
cmp
push
mov
inc
cwtl
insl
sub
mov
jmp
pop
rcr
ja
lds
insl
in
and
cmp
sbb
sbb
fildl
dec
mov
push
and
jne
stos
push
push
aas
jmp
scas
imul
dec
sahf
cmc
add
and
jbe
pushf
add
xorb
cmp
push
xor
dec
call
inc
and
mov
push
or
or
or
xchg
sbb
and
imul
sub
pop
test
jno
ljmp
test
sbb
add
mov
cmpl
adc
push
xor
loopne
ja
sbb
pop
cwtl
add
rcll
or
movsb
test
lcall
inc
pop
or
fsubrs
pop
or
out
int3
pop
xor
jmp
cmp
fidivs
mov
fbstp
sbb
adc
fsubrs
jg
dec
test
add
mov
cwtl
ficoml
jecxz
xor
or
nop
int3
xor
lods
dec
xchg
mov
pusha
add
inc
in
xor
inc
int3
or
sbb
insl
test
aaa
sbb
pusha
sbb
dec
js
sub
cmpsl
rol
and
inc
imul
or
xor
test
add
out
stos
and
or
fstp
cvtps2pi
cvttps2pi
mov
sti
aad
push
pop
andb
sub
and
xor
dec
cwtl
les
push
mov
jno
push
nop
addr16
dec
clc
popa
or
leave
sub
scas
sub
and
cmp
push
clc
add
sub
xor
pop
ds
mov
cmpl
adc
mov
enter
or
sarl
push
jle
adc
das
fcomps
inc
sbb
dec
lahf
push
adc
imul
rorl
or
es
sub
mov
pop
pop
and
mov
cs
add
push
cmpsb
in
jo
jo
fcmove
push
xor
sub
rolb
push
je
and
pop
jnp
push
push
mov
movsl
bound
daa
push
sbb
and
jae
arpl
pop
mov
add
sahf
mov
push
or
xchg
or
add
loope
out
cld
aam
loopne
iret
push
pop
push
push
lret
sub
sub
mov
sub
nop
sbb
push
fnstenv
and
out
or
pop
pop
sub
mov
mov
jns
addr16
faddp
loop
push
sbbl
nop
shlb
add
push
sub
push
je
fldcw
adc
push
fbstp
ja
ret
inc
hlt
test
and
hlt
xchg
setp
sbb
xorw
ret
call
shlb
add
orb
clc
sarb
dec
or
adc
call
push
inc
pop
or
pop
mov
push
jmp
push
rcrl
pop
xor
iret
push
sub
lea
pusha
add
push
add
mov
pop
inc
cmpl
pop
add
pop
lds
push
aad
ss
cs
hlt
mov
test
imul
lcall
jl
add
add
ret
and
inc
dec
mov
in
mov
add
loopne
fcoml
fcom
lea
inc
push
lock
or
enter
shrl
jg
lret
xchg
push
lods
push
fisubs
sbb
fwait
lret
and
xor
mov
addr16
push
and
adc
mov
xchg
and
aam
add
push
or
adc
imul
push
test
std
mov
xor
xchg
mov
and
xchg
inc
inc
sbb
or
sarb
xor
scas
push
lods
ss
mov
add
jecxz
xor
sub
adc
das
add
aam
in
adc
mov
xlat
lea
pop
adc
in
clc
insl
sahf
lret
or
mov
leave
mov
repz
push
or
sti
or
push
cmp
ficoml
fwait
xor
mov
pop
and
decl
adc
pop
push
adc
cmp
sub
ja
inc
movl
or
inc
or
inc
adc
pop
rcr
fldz
and
add
and
cmp
and
or
sub
pop
xor
cmp
flds
scas
fcoml
push
xchg
sarb
push
sbb
testb
and
adc
mov
sub
push
xchg
mov
add
mov
xchg
fsubrs
adc
lahf
adc
sub
inc
mov
inc
push
mov
or
mov
pop
movsb
jg
or
fmuls
sbb
or
ds
data16
lea
fcoml
fsubs
mov
in
sub
xor
adc
pop
mov
adc
sbb
sbb
lahf
test
subl
cmpsb
jno
add
jle
push
jmp
fstps
add
cmp
jl
repz
push
cmp
jle
cmp
jp
push
cmp
cld
sti
dec
cld
cmp
inc
add
add
inc
jmp
xchg
icebp
mov
movl
insb
popa
lret
mov
xchg
repnz
jecxz
and
cltd
pop
idiv
lock
xchg
enter
cld
adc
cmp
inc
movsb
pop
rcr
adc
imul
and
mov
inc
lock
das
addb
add
fstps
add
jbe
scas
mov
cmpsl
mov
outsl
xor
ret
dec
mov
xchg
and
sbb
cmpsl
mov
xor
dec
js
and
xchg
pop
dec
xlat
or
mov
cmp
jb
adc
and
xchg
lret
adc
inc
sub
mov
fs
inc
daa
int
cmp
push
js
inc
fwait
mov
dec
outsb
loop
jo
mov
loope
mov
adc
ror
mov
xchg
pop
insl
iret
cmpb
or
jo
popf
movsb
pop
outsb
ss
sbb
pop
or
nop
loope
and
pop
pop
pop
and
cmp
xor
and
insl
or
cltd
fs
or
add
shrb
jb
cmp
incb
rclb
pop
or
and
pop
mov
popf
je
mov
push
stos
outsl
mov
out
pop
adc
adc
dec
pushf
jno
add
push
data16
push
sbb
jo
push
enter
sbb
add
shlb
sbb
in
jno
add
dec
repz
or
dec
or
dec
leave
mov
les
stos
fs
add
ret
xor
out
fistl
cltd
or
push
lods
inc
jnp
add
lods
or
add
iret
ret
or
aaa
xchg
xchg
inc
push
sbb
or
sub
mov
mov
xchg
popa
mov
inc
mov
inc
push
cmpsb
add
test
xchg
sahf
sub
inc
fwait
in
mov
mov
and
or
fidivl
pop
pushf
pop
xor
adc
outsb
and
leave
adc
and
pop
sub
cs
movl
jae
push
push
ljmp
stos
and
gs
adc
fcomps
add
cmc
push
in
jo
std
cmp
stos
push
add
adc
ret
xchg
fs
or
push
and
add
add
add
nop
push
inc
sbb
xor
shrb
leave
xchg
jb
adc
adc
insb
or
aas
pop
sub
adc
add
sbb
xchg
adc
sbb
xchg
sbb
js
mov
and
stos
loopne
mov
loopne
push
add
xchg
sub
and
xchg
jge
pcmpeqd
lret
mov
sbb
push
loope
push
ret
pusha
pop
sbb
lods
call
shrb
out
les
inc
sahf
rol
sbb
mov
shrl
imul
sbb
adc
dec
push
rcll
and
add
test
enter
adc
add
sbb
and
add
sbb
cli
xor
push
mov
je
shrl
fsub
fsubrs
mov
cmpsl
xor
in
rolb
sbb
inc
outsl
xor
or
add
jb
add
add
dec
aaa
and
push
mov
mov
pop
aad
inc
fistl
sub
dec
xchg
scas
adc
icebp
push
repnz
cld
je
mov
cmp
pminsw
jne
rcrb
nop
es
pop
mov
shlb
or
sub
push
adc
push
ret
aaa
int3
inc
jge
inc
and
inc
jbe
xchg
xchg
or
jbe
and
inc
mov
std
lods
jbe
jb
test
testb
adc
jae
outsb
subl
push
clc
push
mov
pop
les
xor
xchg
gs
orl
pop
in
push
popa
stos
cmp
jne
fwait
mov
test
imull
insl
cmpb
push
popa
xchg
mov
subl
add
adc
pop
xlat
cmp
fildl
lea
cltd
xchg
dec
add
loopne
adc
xchg
push
icebp
pop
decb
daa
fadds
sub
xor
enter
add
repz
push
pop
clc
or
stos
xchg
dec
add
push
adc
dec
cmp
jg
jo
add
adc
lods
popa
push
add
imul
rcrb
pop
mov
outsl
lahf
cwtl
fisubl
or
adc
push
lea
mov
and
add
sbb
and
lahf
dec
push
xchg
rol
inc
xor
iret
adc
jle
ffreep
jecxz
add
insb
cmp
int3
fildl
adc
loopne
inc
adc
es
mov
test
jns
push
xchg
inc
add
mov
inc
push
pop
cmpsl
sbb
mov
xor
in
pusha
xorl
lods
pop
rcrb
or
or
movsl
loop
fmuls
sbb
or
xchg
sub
wbinvd
std
fisttpl
dec
fldl
or
movsb
std
loopne
les
nop
add
andl
fldl
push
sbb
dec
ja
sbb
fstpl
and
mov
mov
push
pop
push
pop
pop
imul
mov
jo
sti
idivb
dec
pop
and
loope
fsubrp
pop
fs
push
or
pop
mov
repz
push
repnz
jl
int3
mov
in
push
in
in
leave
inc
or
push
push
cs
or
cmp
ja
inc
rorb
mov
sub
pop
int3
in
notb
mov
sub
aaa
inc
cmpsl
xor
inc
xchg
sub
sub
pop
inc
inc
dec
sub
xchg
addb
scas
or
ffreep
jbe
shll
stos
adc
dec
arpl
mov
jge
sahf
sbb
je
lahf
cmpb
into
dec
dec
mov
add
xor
insl
dec
or
cmp
mov
lods
jbe
fmul
mov
cltd
jnp
ja
push
and
dec
xor
mov
or
adc
js
sub
and
mov
pop
push
in
and
adc
dec
les
dec
iret
arpl
loope
fcmovne
daa
xor
jnp
xchg
add
imul
mov
int
xchg
xor
clc
add
pop
pop
mov
out
or
lock
sbb
leave
shld
add
adc
jb
ja
lea
push
push
js
pop
push
je
lcall
filds
push
leave
adc
mov
push
adc
or
nop
push
push
xor
sbb
sbb
call
push
push
push
sarl
mov
lods
add
pop
pop
enter
int3
leave
pop
add
cmp
sub
sbb
adc
cmpsl
roll
push
mov
cmovns
ja
cmp
test
adc
add
and
dec
pop
mov
adc
sub
cmp
xchg
cld
pop
or
jle
out
inc
cmpw
jne
fdivrp
mov
inc
cld
cmp
mov
push
jl
mov
aad
sub
test
popl
sti
jg
stc
mov
mov
or
mov
cld
mov
lret
push
push
push
jp
push
push
push
jp
mov
pusha
inc
push
add
ss
or
inc
jle
js
mov
or
xchg
mov
les
aam
icebp
mov
mov
adc
pop
mov
ss
adc
add
sbb
in
jle
ja
sbb
sub
sbb
scas
movl
fwait
jp
lock
pop
andb
mov
add
je
cmovo
jns
dec
pop
or
sbb
jle
movsl
xchg
pop
push
pop
iret
inc
imul
or
pop
test
rcll
xchg
sub
xchg
push
mov
push
popf
push
push
sub
xchg
adc
mov
inc
pushf
into
jne
adc
mov
imul
fadds
pop
push
xchg
lock
rorb
lods
xor
mov
mov
loopne
push
int
adc
add
insb
ret
lods
aad
and
cmp
imul
pop
test
into
gs
lds
dec
inc
lods
je
lret
xchg
or
pop
lock
sub
xlat
cmp
and
lods
push
orb
dec
sbb
pusha
push
jno
lods
mov
pop
adc
cwtl
push
xchg
rcr
and
imul
fldt
ds
scas
pop
ret
pop
pop
dec
cmpsb
nop
add
aam
mov
xchg
ja
and
adc
rclb
xchg
and
xor
or
or
inc
sbb
fwait
lret
xchg
xor
push
mov
lahf
add
dec
rol
push
dec
mov
add
push
adc
lods
and
jb
push
add
in
les
mov
xor
fistpl
jo
add
outsb
pop
add
bnd
mov
add
in
je
js
dec
sbb
add
add
repnz
mov
dec
add
jecxz
mov
xchg
push
repz
int3
test
outsb
inc
push
add
test
or
loopne
jg
andl
or
inc
lret
mov
pop
aam
cmp
dec
pop
mov
psrad
add
ret
mov
movsb
mov
or
inc
pop
pusha
rcrb
test
adc
push
ja
sub
xchg
insb
mov
jno
leave
pusha
jmp
mov
mov
adc
insl
push
icebp
and
jno
imul
add
jg
je
or
xchg
nop
add
cmpsb
std
fcmovnbe
sub
dec
je
add
sbb
dec
lock
jo
dec
jmp
push
out
or
push
dec
loop
or
mov
out
or
jg
out
push
shl
mov
sarb
nop
or
mov
dec
scas
push
and
sub
push
es
mov
cmp
test
inc
arpl
jp
push
imul
cmp
nop
push
jo
mov
faddl
jnp
jb
and
nop
xchg
adc
and
out
adc
push
pop
enter
add
push
push
sbb
mov
push
cmp
pop
push
cmp
nop
subb
add
lahf
adc
push
cmp
inc
push
cmp
mov
xor
add
push
je
jb
and
rcl
push
mov
ret
jmp
insb
cmc
push
decl
gs
rcll
sbb
repz
inc
dec
pop
arpl
cmp
repz
stos
mov
leave
repz
repz
out
sti
out
sahf
out
nopw
sub
aaa
inc
dec
push
pop
imul
xchg
in
movsl
xchg
ss
das
bound
scas
popa
pop
sbb
push
std
aaa
add
scas
fucom
icebp
mov
mov
push
push
xchg
outsb
add
adc
popf
nop
sti
das
je
xor
out
cmpb
lea
scas
int
rol
add
les
imul
orb
movsb
xchg
test
jmp
jl
mov
shrl
xchg
cmp
or
inc
mov
or
ja
fwait
xchg
call
fldz
fcompl
and
cmp
ja
ficompl
xchg
test
loope
movsb
sbb
movsb
mov
arpl
int
pop
adc
sbb
cmp
cmp
mov
jl
jge
lret
out
push
dec
test
lods
adc
bound
cld
add
push
sbb
aas
repz
les
inc
ja
rorb
adc
loope
cmp
jge
out
mov
cmp
push
cld
lock
movsl
out
add
jp
scas
cmpsb
push
cmc
popf
add
pop
stc
ficoms
test
ja
imul
rol
or
mov
mov
mov
xchg
mov
push
ret
gs
push
sbb
das
push
mov
adc
lock
or
xor
filds
or
enter
or
mov
adc
xchg
js
mov
and
decl
sub
pop
fdivs
mov
and
stos
and
or
cmp
outsb
faddl
pop
fcomip
push
mov
mov
xor
je
inc
push
or
or
fs
insb
movb
push
aad
xchg
and
inc
leave
adc
pop
sbb
les
repz
pop
lea
jo
add
sbb
push
add
mov
cmp
pop
xchg
test
shlb
adcb
xchg
mov
mov
cmpb
jecxz
cmc
jb
mov
int3
fiadds
sub
push
xchg
xchg
sarb
dec
div
push
add
mov
mov
xor
or
lods
and
sub
cmp
mov
fwait
pop
cmp
push
sub
jo
test
rsqrtps
mov
or
bnd
xchg
adc
jp
adc
or
mov
xor
sub
push
mov
xor
jle
icebp
scas
jecxz
mov
xor
sbb
enter
dec
xor
das
insb
lcall
jl
dec
lcall
dec
lcall
add
in
jae
add
mov
mov
sbb
mov
cltd
mov
hlt
push
int3
jl
mov
test
add
cmp
orl
lret
cmp
jns
xlat
movsb
inc
xor
add
in
cmp
mov
pusha
mov
mov
sub
or
pushf
js
stos
push
nop
and
in
jbe
test
sbb
ljmp
shlb
sbb
sbb
sbb
nop
stos
shlb
sbb
push
cltd
fs
sbb
in
mov
push
into
push
rorb
adc
sub
or
sbb
sbb
pop
aam
movsb
sub
sub
sbbl
mov
pop
inc
and
jmp
pop
mov
shl
xchg
inc
adcl
pop
gs
pusha
int
mov
mov
xor
cmp
pop
push
ficomps
push
lret
mov
into
pushf
xchg
xchg
loop
push
jle
enter
adc
mov
jb
sbb
aaa
rcrl
jp
xchg
imul
dec
movsl
mov
mov
int3
cmp
sub
sub
orb
cmp
movsb
aas
ret
dec
int3
mov
push
push
inc
cmpsl
pusha
mov
and
mov
nop
mov
aaa
and
and
ss
mov
adc
daa
cmp
sahf
dec
sbb
push
inc
push
cmc
sub
inc
push
pusha
or
sub
cmovp
addl
jo
test
outsl
mov
adc
popa
inc
jno
movsb
roll
ret
arpl
sbb
inc
xor
dec
loop
mov
nop
mov
sbbb
push
outsl
inc
sbb
pushl
jmp
push
sub
pusha
adc
outsl
aaa
je
stos
mov
and
sub
mov
adc
and
rorb
mov
imul
xchg
in
add
pop
dec
cmp
pop
je
mov
int
pop
push
mov
adc
pop
adc
mov
das
xchg
pop
ret
jecxz
sbbl
out
add
pop
sub
test
jne
or
sarb
jecxz
pop
mov
push
fmull
add
add
movsb
pop
sbb
mov
sbb
mov
inc
lods
out
repz
ficoml
test
pop
fwait
jo
mov
inc
xor
xchg
psubw
push
push
les
push
xchg
pop
jno
roll
mov
ret
stos
xchg
jne
adc
in
and
pop
ficompl
adc
insb
enter
inc
rorb
jge
enter
iret
mov
mov
jl
imul
enter
add
loopne
test
or
mov
rcrl
push
call
xchg
setl
pop
repnz
adc
movsb
adc
cmc
adc
push
sbbb
leave
push
add
and
dec
adc
lock
push
es
push
call
int3
push
and
out
and
loopne
cmpsb
push
or
test
pop
sbb
in
jecxz
or
fdivrl
negl
lods
fsubrs
sbb
push
lods
sbb
test
imul
sub
dec
add
nop
fwait
push
mov
rcrb
aaa
adc
sub
mov
mov
and
mov
lock
xchg
adc
lea
test
dec
mov
and
movsb
adc
sub
xorb
xlat
jge
test
push
push
inc
dec
and
int
js
movsb
mov
pop
pop
push
sub
inc
cmp
sub
mov
inc
push
in
test
xchg
mov
test
rcrb
pop
and
je
test
or
pusha
dec
xor
pop
pop
ret
es
add
add
lods
push
arpl
inc
or
or
sbbl
sbb
addl
call
add
aad
imul
test
sbb
popf
in
addl
and
shl
adc
test
mov
or
shlb
jo
inc
xor
jb
jbe
in
and
xchg
dec
in
roll
jne
dec
mov
adc
add
mov
neg
dec
mov
movb
lods
add
mov
shl
and
cmpb
adc
outsl
or
aad
sbb
sbb
divl
xor
push
cmpsl
test
sbb
data16
sbb
adc
mov
or
imul
mov
outsb
addb
jle
sbb
inc
out
and
psllw
jnp
sub
xchg
mov
mov
mov
fsubl
adc
insb
popa
scas
insl
lods
sub
push
xor
shr
adc
ret
sbb
mov
mov
mov
dec
dec
mov
sub
inc
xchg
mov
and
xchg
fdivl
shrl
inc
leave
dec
sub
sub
adcb
inc
jmp
adc
rcl
sbb
sbb
sbb
jbe
or
shrb
sbb
or
sbb
pushl
movsl
push
add
push
sbb
mov
xchg
lcall
xor
mov
sub
dec
dec
roll
push
hlt
push
mov
xor
or
and
add
sbb
das
and
movsb
shrb
adc
stos
sub
push
pop
es
mov
push
pop
daa
push
fs
sub
movsl
cmp
sub
movsl
dec
enter
lods
loopne
in
dec
sub
sub
adc
pushf
fsubrs
fcmovbe
movsl
pop
loopne,pn
push
push
dec
insb
movsb
lea
mov
mov
addb
fwait
test
mov
adc
add
mov
test
pop
inc
push
cmpsb
popl
push
aad
xor
mov
loop
dec
popf
iret
pop
jo
das
not
icebp
inc
cs
fiaddl
movsb
cltd
nop
data16
sub
imul
cltd
nop
inc
sub
fs
push
and
imul
and
lcall
cltd
nop
mov
lcall
xchg
adc
sbb
sbbb
js
test
les
and
aam
lods
add
rcl
push
vprotb
sahf
adc
push
jge
mov
add
test
add
xchg
in
orl
add
les
pusha
mov
dec
out
pop
sbb
cs
push
or
dec
test
lcall
fcoms
push
stos
jnp
push
lds
push
inc
ret
push
or
test
sbb
dec
adc
divb
pop
jecxz
repnz
movsb
add
pop
sub
and
orl
push
subb
pop
rorl
jg
jo
inc
pop
adc
dec
dec
sbb
and
or
jns
mov
int
inc
sub
rorb
pop
icebp
cwtl
popa
add
xor
mov
clc
pop
call
scas
ss
xchg
inc
jbe
leave
add
mov
inc
or
cmp
push
shlb
pop
add
pusha
jl
dec
push
ds
clc
cmp
lahf
daa
lcall
icebp
inc
push
jmp
ss
adc
push
cmp
pushf
fcoms
push
mov
or
test
cmp
pop
sbb
test
sub
addr16
push
or
sub
scas
cmc
addr16
lret
lods
imul
or
popf
pop
cmp
std
mov
jbe
mov
mov
push
jmp
pusha
and
jmp
cli
inc
add
clc
sub
aad
and
mov
jmp
fistpll
inc
fstp
adc
inc
xor
aaa
sbb
cmp
mov
xor
jae
and
sbb
pop
adc
and
pusha
ljmp
clc
loope
push
enter
jbe
inc
mov
jb
mov
pop
pop
adcb
mov
xchg
inc
adc
push
addl
jb
adc
enter
jno
repnz
cmpsl
mov
js
les
jle
mov
push
sbb
xlat
jbe
mov
xchg
cmp
jne
inc
add
roll
ret
jl
xchg
addl
pop
sbb
subl
mov
cmp
jne
mov
inc
sbb
div
lods
repz
jae
inc
adc
adc
and
je
mov
add
or
dec
roll
mov
jmp
out
mov
outsb
push
stos
sub
xchg
inc
or
movsl
xchg
cmc
xor
or
mov
or
xor
pop
sbb
or
mov
add
mov
fcmovu
pushf
cmp
xlat
aad
or
and
lea
jmp
mov
push
out
sub
pop
push
and
ljmp
test
and
leave
sbb
clc
xchg
icebp
or
sbb
sbb
inc
sbb
add
pushl
inc
jbe
xchg
pop
lea
ret
sbb
test
out
cmpsb
sbb
jno
popa
or
or
jmp
xchg
xor
lahf
stos
xchg
adc
jmp
aam
adc
imul
push
mov
cmp
ds
jl
or
ud0
mov
cmp
or
and
mov
movb
movsbl
shr
mov
movsb
test
push
add
pop
dec
add
nop
inc
mov
leave
jne
pop
pop
xchg
cltd
pop
movsl
xchg
je
and
pop
and
dec
or
push
inc
sub
mov
cmp
mov
hlt
ficoms
push
lods
add
push
mov
aas
push
imul
jmp
dec
daa
inc
and
pop
jbe
enter
add
sbb
shll
sti
add
adc
mov
pop
cmc
xor
mov
dec
sbb
mov
xchg
sbb
or
je
dec
and
add
xchg
and
mov
jnp
push
rcll
dec
jmp
aaa
xchg
sbb
sub
lods
fsubr
and
decl
jge
adc
pop
fs
lock
pusha
push
cmp
push
push
shrl
xor
sub
ficomps
aaa
jno
mov
pop
pop
bound
add
or
push
adc
push
lods
push
mov
rclb
mov
data16
xchg
ficomps
mov
inc
je
mov
add
leave
mov
inc
mov
dec
pushf
xchg
adc
fcomps
sub
sub
or
cmp
xchg
test
and
and
leave
inc
or
out
xchg
jl
pop
add
mov
enter
lock
das
mov
loope
test
push
in
lock
dec
mov
pop
sbb
and
and
fcompl
jmp
pop
lock
and
lret
and
mov
repnz
or
or
int3
repnz
std
or
gs
idivl
adc
enter
nop
xor
and
jmp
cmp
inc
add
xor
inc
or
mov
leave
or
aad
lcall
sub
popa
xor
test
jns
lea
cmp
je
pop
xor
and
daa
daa
adcl
addr16
imul
xor
sub
xor
orb
cmp
aam
xor
add
movsb
outsb
xor
rcll
imul
mov
push
cli
dec
lea
sub
dec
xor
adc
mov
scas
shld
addb
pop
or
push
fadds
and
hlt
flds
fdivrs
rorl
rcrb
les
in
adc
js
add
add
jno
sub
xor
jecxz
xchg
subl
pushw
bound
mov
push
addr16
xchg
pop
into
cli
adc
mov
es
or
push
fcoms
and
jne
fsub
popa
add
js
mov
sbb
push
inc
leave
enter
mov
push
scas
sub
pop
lods
pushf
loopne
fcomps
cmp
gs
add
mov
cltd
jb
add
jecxz
imul
je
sub
enter
mov
iret
cltd
insb
sbb
outsb
or
or
and
mov
test
xchg
mov
xor
je
icebp
movsl
sbb
and
in
lock
jle
imull
xchg
icebp
ror
repz
sub
loope
lea
add
or
out
test
test
jmp
mov
repnz
test
dec
fadd
and
and
scas
jne
cmp
dec
in
and
adc
push
mov
push
xchg
cmpsl
mov
xor
jmp
bound
push
lahf
pop
push
cmp
adc
or
pop
inc
in
push
pop
bound
lea
or
mov
lea
mov
ret
xor
xchg
add
inc
dec
and
add
and
and
add
mov
sub
cld
ds
jle
xor
lods
test
and
push
mov
mov
or
cmpb
xchg
outsb
imul
or
add
push
jmp
loop
push
sbb
sub
lock
out
push
mov
loop
mov
pop
stos
lods
sub
mov
mov
push
dec
pop
cmp
test
push
sub
cltd
xor
push
mov
je
push
rcl
in
push
push
je
mov
je
out
dec
icebp
sub
sbb
jmp
in
jbe
test
mov
sub
mov
inc
hlt
in
rorb
sahf
nop
xchg
or
aad
add
loopne
loop
shr
jecxz
xchg
sbb
sbb
jno
and
subl
in
aad
sub
adc
add
rolb
mov
xor
jne
je
inc
scas
xchg
xorb
sarb
test
js
pusha
maxps
inc
test
hlt
add
sub
das
pop
sub
inc
fcmove
divl
ss
iret
test
adc
xorl
mov
outsb
int
jbe
xchg
cmp
imul
test
rolb
mov
filds
divb
jno
adcb
sbb
dec
or
lea
adc
shll
mov
lret
imul
pop
notb
mov
xchg
add
cmp
lock
in
mov
pop
mov
or
dec
cmp
rolb
mov
add
fidivrl
mov
mov
lods
xorps
or
pushf
and
clc
inc
das
mov
rcrb
mov
xor
mov
mov
push
sahf
fcoml
dec
and
adc
shlb
cmpsl
dec
in
cmp
test
jne
es
loopne
xor
movsl
jno
in
inc
dec
add
mov
sbb
add
jg
es
test
je
xchg
and
xor
dec
or
mov
je
add
sub
push
push
stos
add
adc
sbb
xchg
xchg
sarl
addr16
sbb
or
mov
sbb
xchg
scas
push
mov
pop
notb
test
add
pushl
and
push
cmp
dec
mov
mov
jle
test
fsubs
mov
scas
adc
add
jb
clc
mov
mov
inc
push
pop
insl
rcrb
hlt
add
pop
push
inc
sbb
mov
ret
faddl
jmp
fiaddl
addl
dec
mov
shl
jbe
push
push
cmp
add
enter
sbb
outsb
mov
fldl
push
in
daa
adc
test
lea
hlt
mov
mov
sub
aaa
adc
adc
jne
daa
bnd
repz
mov
jne
or
jne
sub
push
iret
or
push
mov
cmp
xor
in
rcll
fcomp
xchg
rcl
pop
adc
cmpsl
or
push
lea
movl
jl
inc
dec
cmp
inc
stos
inc
cld
data16
fstl
mov
hlt
mov
pop
je
pop
hlt
lea
loop
mov
hlt
pusha
mov
xor
cmp
mov
cmpb
and
orl
xchg
lea
sub
xchg
pop
ret
int3
int3
push
and
dec
fldt
sbb
or
stc
int3
movsl
mov
std
mov
mov
jne
inc
cmp
adc
loop
push
add
push
adc
adc
sub
fcomp
loopne
rcrb
ds
inc
lea
jbe
adc
js
pusha
jo
popf
add
mov
jl
icebp
pusha
ss
sbb
push
ss
jl
fnstenv
andl
pop
inc
loopne
or
xor
and
push
xchg
insl
mov
rol
mov
mov
jmp
orl
pushf
xor
pusha
pusha
movsb
sbb
pop
rorb
xchg
fs
jb
pushf
push
jne
or
and
mov
fs
call
dec
ficoml
mov
add
idivl
mov
push
clc
sarb
and
test
jg
outsw
mov
mov
mov
jae
mov
jbe
shlb
or
fmuls
mov
or
or
into
mov
subl
movsb
pop
and
test
les
xchg
flds
stos
dec
pop
inc
fsubl
xor
fsubl
in
insb
add
and
test
inc
mov
fs
push
or
testl
and
mov
movsb
test
fmuls
cltd
call
push
and
or
mov
jbe
xorl
sbb
dec
mov
xchg
mov
sti
jnp
push
in
insl
push
add
push
insb
xor
lahf
scas
mov
push
sub
mov
or
lods
add
push
mov
in
and
xchg
dec
pop
pop
pusha
sbb
jmp
pop
push
pop
ret
push
xor
clc
jecxz
add
push
jmp
xor
inc
in
test
sbb
fisttpl
push
scas
test
divb
add
sarl
andl
xor
pop
fs
dec
sbb
adc
inc
mov
mov
mov
pop
inc
adc
sbb
inc
lret
mov
adc
enter
sub
and
scas
xchg
pop
xor
push
sbb
lcall
and
daa
adc
inc
rolb
ss
sbb
jb
jno
sub
dec
xchg
mov
inc
or
adc
inc
arpl
mov
daa
and
add
sub
xor
fiadds
xchg
cmp
enter
push
lea
ret
inc
push
das
push
dec
imul
jnp
cmp
push
push
mov
je
inc
lcall
lods
inc
dec
arpl
icebp
pop
xor
dec
push
jmp
sbb
imul
rcr
mov
add
add
and
loope
shrl
cmc
pop
adc
cmp
and
js
dec
push
jae
jg
ljmp
jae
je
push
mov
pop
lea
xchg
xor
xor
sbb
fdivr
loopne
fcmovnbe
xor
jo
test
imul
lock
sbb
negl
int
cmp
leave
mov
adc
adc
aas
dec
xchg
mov
stos
mov
or
push
adc
push
adc
add
loop
imul
sbb
jnp
cmp
pop
test
les
sub
ret
xor
je
popf
or
or
in
call
pushf
add
orb
cmp
sub
sbb
pop
js
mov
orl
enter
aam
test
lgs
fisttpl
jecxz
mov
pop
inc
inc
pop
popa
push
lock
data16
sub
dec
pop
inc
std
xor
pop
push
test
fstpl
sbb
mov
testl
cmp
dec
ret
or
sub
mov
mov
inc
sub
stos
cmc
mov
inc
and
pop
pcmpeqd
fwait
add
imul
xchg
mov
sub
xor
imul
leave
fadd
add
insl
sbb
or
push
push
xor
test
push
add
xor
cmpsl
dec
je
cs
push
inc
add
inc
outsl
roll
or
push
jne
pop
scas
mov
ret
inc
cwtl
mov
and
lahf
outsb
mov
jne
mov
ljmp
xor
jo
push
push
adc
popa
mov
jbe
xchg
adc
out
rcll
xor
sbb
adc
roll
ret
add
push
add
shrb
mov
dec
ret
adc
add
add
dec
xchg
mov
clc
lds
js
inc
je
and
pop
push
mov
ja
jmp
stos
cmp
add
add
or
ja
in
les
mov
dec
pop
lock
xchg
clc
cmpsl
xchg
pop
add
inc
xchg
pop
add
push
adc
or
push
or
test
loope
popa
sub
sub
stos
jbe
stos
loopne
jno
pop
call
mov
out
je
je
lock
call
pop
lock
add
or
xor
add
xchg
mov
sub
add
xor
repnz
ds
lods
fnstenv
shr
sbb
push
push
fisttps
push
adc
arpl
nop
aam
xor
xchg
stc
adc
cmp
lods
cmpsb
movsb
addb
mov
call
mov
jl
lds
mov
sbb
aad
sub
addr16
add
jmp
jecxz
dec
int
sahf
inc
das
inc
or
and
fmuls
outsb
and
mov
cld
pusha
cwtl
or
in
inc
sub
push
push
push
push
bound
jmp
add
adcb
inc
push
mov
pop
adc
ds
cmp
in
add
push
add
loope
pop
or
out
mov
mov
aaa
aas
sbb
popa
mov
and
jl
js
push
and
mov
je
out
movsl
ja
or
test
xor
cmp
je
aas
mov
dec
or
jbe
rolb
sbb
test
ret
clc
aas
lods
dec
push
sub
sub
andb
sbb
adc
pop
loopne
js
hlt
jae
movsbl
sbb
cmpsb
stc
movsb
fldl
xor
lahf
mov
sbb
xchg
or
sbb
pop
jmp
jg
mov
enter
ret
incl
incl
add
or
jecxz
or
add
inc
cmp
jl
cmpl
ss
mov
test
cltd
and
popa
xchg
pop
add
sar
add
jae
push
in
hlt
clc
xor
add
sub
cmp
jecxz
sbb
inc
scas
cli
adc
jne
enter
adc
or
fidivs
fs
inc
sbb
insb
pop
pop
sahf
repz
xchg
or
lods
and
push
inc
xchg
loop
pop
ficoml
stc
sbb
mov
rolb
jo
shld
lea
orb
rolb
roll
scas
adcb
sbb
or
lret
mov
cmp
jl
mov
aas
mov
xchg
add
or
mov
js
out
add
movb
jne
out
inc
ja
addb
rolb
or
repnz
jl
out
add
or
sub
mov
adc
jae
jmp
xchg
mov
aaa
test
and
xor
push
orb
adc
insl
scas
push
sbb
ficompl
push
dec
or
push
dec
sbb
mov
add
in
push
xor
sbb
aam
mov
in
ret
sbb
push
repnz
cmc
mov
add
loope
icebp
fs
or
not
and
stos
sub
outsb
dec
or
xchg
xchg
lret
hlt
add
nop
je
add
sub
das
sub
jecxz
lock
pop
push
jmp
leave
loopne
lahf
call
lret
or
jge
sbb
lahf
cmc
out
fsubrs
addr16
outsb
pop
mov
stc
jle
daa
lock
push
dec
dec
push
add
push
push
les
add
clc
mov
jbe
add
push
movsb
jae
dec
mov
add
xchg
cmp
lret
add
jle
push
and
mov
stos
movsb
push
and
stos
lds
jns
lret
push
jo
jnp
test
int3
roll
xchg
pop
push
xor
aaa
lea
mov
sbb
cmp
lea
jo
dec
adc
push
and
testl
mov
xor
ror
mov
movsb
fwait
inc
pusha
pop
cmp
add
add
jnp
sbb
jmp
sbb
popf
frstpm(287
mov
xchg
sbb
sbb
mov
push
cmp
call
dec
xchg
mov
les
test
arpl
das
push
mov
dec
rcl
sbb
dec
push
ret
add
and
jl
dec
push
push
sub
dec
repz
int3
add
fcomps
cs
daa
jno
or
or
rorb
inc
mov
aaa
push
push
test
inc
shll
adc
aam
fs
shrl
jbe
sbb
jl
mov
push
push
lcall
inc
mov
mov
xorb
push
sbb
rcrl
pop
jne
or
jmp
mov
dec
dec
and
push
sti
push
ret
xchg
es
pushf
fwait
sbb
cmp
xor
add
int3
int3
add
mov
les
cmp
cmp
sahf
or
push
pop
cmp
sarl
fldenv
repz
je
dec
pop
test
arpl
adc
test
push
ret
cli
and
xchg
das
lods
mov
pushf
adc
xlat
push
aaa
jge
jo
das
or
jo
and
and
inc
les
mov
fs
xchg
sub
or
lock
les
mov
push
add
cmc
lret
rcr
dec
aam
in
loopne
int3
ja
loope
mov
clc
jl
pop
mov
push
cwtl
loopne
fdivrl
pop
jge
sub
add
js
push
fistpl
push
je
cmp
daa
packsswb
mov
add
test
cli
decl
inc
loopne
jmp
mov
out
test
sub
clc
jo
dec
out
test
les
fsub
sbb
lret
movb
ret
nop
inc
loope
cli
or
shlb
sbb
jle
sub
jnp
shlb
sub
dec
dec
test
cmpsl
pop
aas
push
xchg
xor
push
addr16
xchg
je
add
mov
inc
add
lods
xchg
test
jo
iret
adc
mov
insb
jmp
jne
shlb
iret
cmp
jle
pushf
in
out
sub
add
xor
sub
push
add
call
cmpsb
xchg
cmp
sub
adc
aad
push
push
scas
inc
inc
mov
outsl
jecxz
inc
push
pop
fwait
and
xor
lock
je
bound
ljmp
xchg
mov
mov
jg
mov
mov
and
out
add
mov
clc
xchg
rolb
das
fistl
pop
mov
mov
add
xchg
add
xchg
pop
push
or
fmull
clc
mov
adc
add
movzbl
mov
inc
mov
mov
cmp
push
call
clc
addl
int
mov
cltd
sarb
sub
push
icebp
or
cmpb
int
xchg
add
mov
int3
pop
add
push
mov
nop
and
xchg
nop
add
or
cld
push
leave
push
xor
push
cld
or
mov
inc
call
jne
pop
mov
mov
scas
pushf
mov
into
and
pop
or
sbb
mov
insb
adc
into
push
sahf
pop
add
push
mov
fwait
enter
xor
push
nop
cmp
hlt
rclb
gs
push
add
in
fs
lret
in
mov
push
int
cli
ret
sub
movsb
and
adc
sub
cli
inc
mov
mov
cmp
push
enter
in
pop
daa
fbstp
cmpsb
lret
pop
or
scas
and
sbb
mov
popa
and
push
mov
add
loope
loopne
cmc
test
loop
dec
mov
pop
lahf
popf
inc
xor
and
adc
pop
orl
add
and
and
push
daa
or
sbb
push
sub
test
hlt
test
mov
mov
mov
mov
clc
jns
add
rclb
xchg
adc
lds
jb
cwtl
mov
or
dec
cld
stc
sub
ss
lea
cmp
jbe
add
sbb
cmp
jbe
mov
sbb
sbb
cli
enter
sbb
repnz
into
aas
insl
mov
insb
leave
or
cmp
int3
push
adc
divb
inc
dec
xor
xchg
mov
pop
enter
or
cmpsb
push
cmp
or
xor
daa
push
test
stc
push
incl
push
push
push
cmp
cwtl
inc
push
jnp
and
insl
test
jp
add
mov
shr
test
pop
ret
and
nop
arpl
adc
push
mov
in
lods
test
sub
stc
pop
jge
lahf
cmc
pop
sub
push
add
call
cli
mov
xchg
xchg
jns
sti
lea
jo
mov
loop
push
push
movsl
jns
faddl
add
in
enter
mov
test
mov
cmpsb
mov
or
add
fs
mov
into
push
add
xlat
jnp
xor
jmp
js
test
and
inc
lods
sbb
mov
push
mull
cmp
aas
jb
and
sub
add
mov
adc
mov
movsb
cltd
jge
leave
pop
in
adc
and
int
xor
mov
cmp
sbb
and
jp
insl
pop
loope
add
add
and
or
sub
mov
jecxz
push
mov
and
arpl
shl
xlat
loopne
out
test
xchg
mov
xor
int3
iret
sbbb
out
and
inc
or
jle
insb
and
xor
shlb
and
lock
xchg
mov
jecxz
xor
fnstsw
inc
xchg
adcl
jo
and
and
enter
int
mov
and
movsb
pop
sbb
sarb
or
cmpl
lods
push
stos
and
ret
shrb
jle
add
or
fst
scas
add
push
js
jl
aam
ja
xchg
shrb
add
rorb
stc
add
shlb
popf
movsb
pop
je
inc
outsl
dec
out
out
fdivl
mov
je
or
imul
hlt
es
adc
test
mov
lret
maxps
das
add
mov
add
aam
out
mov
and
adc
dec
fsts
out
fwait
movl
aas
push
mov
and
jge
cmp
mov
jo
cmp
outsl
pop
cmp
adc
inc
add
popa
fs
push
sti
or
or
sub
add
loop
mov
sub
or
push
pop
je
bound
mov
pop
and
es
and
xor
das
popf
cwtl
jp
loop
mov
xchg
ds
addl
mov
add
sub
xorl
add
xchg
lcall
dec
dec
repnz
sbb
jo
out
int3
or
jmp
push
sub
inc
incl
sub
mov
and
aas
add
fisttps
jmp
ret
mov
jmp
push
dec
mov
adc
xor
stos
or
les
addb
xchg
mov
push
push
push
test
imul
out
lock
push
xchg
push
push
ret
lahf
imul
cwtl
jo
mov
push
pushl
and
cmp
fidivs
cmp
jbe
sub
sub
cmp
pop
push
sbb
pop
outsl
and
ret
mov
mov
add
sub
adc
lret
out
xor
nop
cmpsl
or
push
add
sub
bound
xor
jmp
or
pop
clc
jne
mov
cmpl
inc
push
xor
mov
movsb
dec
mov
mov
add
cld
out
dec
cld
rclb
or
adc
fistl
pop
movsb
jg
jmp
push
mov
add
push
adc
mulb
pop
xor
push
call
cmp
sbb
xchg
and
sbb
sub
fisttpll
mov
ret
push
mov
ret
movsb
aam
ss
push
adc
add
rorb
dec
mov
cmp
jae
inc
jmp
add
or
icebp
push
test
lock
push
scas
movsb
push
xchg
fisubrs
sub
mov
add
push
add
cmc
outsb
mov
sub
addr16
sub
enter
dec
movb
sub
push
mov
xor
push
inc
loope
dec
stc
pop
testb
sub
movb
movsb
add
add
mov
test
sub
jnp
ret
add
pop
add
xchg
bound
shlb
push
xchg
out
test
shlb
or
insb
pop
jmp
js
lea
sub
adc
adc
movsl
cmp
sbb
sub
mov
pop
mov
jecxz
daa
ss
pop
jne
inc
or
sahf
test
ret
add
xor
pop
loopne
add
pop
jge
mov
movsl
or
lods
test
mov
or
lods
test
jle
lea
push
or
sahf
mov
push
or
pusha
mov
inc
inc
xor
sub
sub
lock
insb
addr16
dec
xor
clc
adc
rcll
mov
xchg
and
push
or
mov
dec
mov
insb
add
and
sbb
lahf
jo
rorb
shr
sub
cmp
pop
lods
sahf
pop
mov
rorb
xchg
rorb
push
xor
mov
dec
cmp
icebp
jne
xor
xchg
inc
insl
push
push
aam
cmp
mov
cmp
stos
dec
sbb
aam
lahf
add
movsl
addl
add
icebp
aam
cli
add
imul
adcb
mov
notl
cwtl
fidivrl
inc
das
adc
sub
pop
mov
or
enter
xchg
push
or
xchg
enter
ror
and
and
xor
cwtl
push
sub
mov
arpl
fcompl
cmp
sub
sti
sub
les
inc
cltd
push
mov
and
ret
ret
in
ret
int3
pop
ret
jmp
cmpsb
xor
adc
or
jne
movsb
push
jb
mov
ja
negl
xchg
jecxz
jle
pop
sub
cmpl
rcrl
cs
inc
movl
loope
or
andl
test
cld
push
ret
int3
add
shlb
adc
or
stc
pushl
sti
or
aaa
push
push
push
ret
js
push
jecxz
bts
jbe
fdivr
and
pop
jecxz
sub
add
and
mov
orb
jo
std
bound
mov
rclb
or
gs
iret
fs
xor
sub
cld
dec
mov
mov
push
cwtl
jl
mov
and
adc
xchg
push
inc
imul
mov
lock
push
push
cmp
jb
popf
or
or
mov
inc
cmp
lcall
ret
jnp
dec
fs
add
dec
insl
dec
pop
push
sbb
jp
addr16
ss
cwtl
or
je
pop
push
inc
adc
outsb
add
mov
fisttps
pusha
push
in
push
scas
repnz
loop
jnp
jmp
add
mov
mov
mov
fldt
push
filds
or
mov
cmp
addr16
je
cmp
jne
mov
adc
sbb
add
pop
dec
lea
cmp
mov
pop
dec
xor
push
dec
fdivrs
cmpsb
push
jmp
testb
je
testl
or
cld
cmp
jbe
jg
mov
inc
cmp
je
leave
dec
fdivr
sub
inc
jmp
inc
and
or
pop
mov
pop
daa
shrl
xor
int3
test
lcall
clc
mov
cmp
add
sbb
cmpsb
fs
adc
into
cli
jo
inc
jl
lcall
xor
push
sub
cld
inc
dec
cmp
sub
pop
cmp
jo
hlt
adc
sub
les
clc
je
faddp
movb
xchg
mov
mov
mov
xchg
ja
js
sub
ss
push
nop
adc
jge
stos
js
sub
add
inc
cld
shlb
sbb
bound
es
outsb
sahf
push
lds
loopne
jne
mov
sbb
sbb
mov
mov
data16
mov
ljmp
lcall
outsb
inc
shlb
pop
shl
add
hlt
or
adc
aas
insb
sti
and
cmpsb
and
or
adc
push
popa
mov
add
xor
lock
pusha
pop
adc
test
mov
or
push
mov
jmp
dec
shr
mov
cwtl
sub
cltd
andb
push
sbb
ret
mov
push
add
push
xor
sub
or
and
jno
xchg
inc
jg
mov
add
pop
xor
and
aaa
aaa
es
sub
sub
and
pop
or
jl
inc
xor
adc
pop
jle
pusha
push
inc
test
jbe
bnd
aam
cmp
jbe
loopne
pop
push
and
pop
arpl
pop
and
popf
add
je,pn
test
jne
pop
mov
sbb
adc
clc
add
push
xor
insl
loop
add
jae
movb
inc
scas
fcoml
fdivp
push
sub
mov
adc
and
out
lahf
enter
jno
mov
inc
and
inc
add
xor
adc
mov
adc
sbb
add
sbb
jp
sbb
dec
inc
push
je
mov
cmp
test
cli
and
jno
push
lahf
push
mov
sbb
aas
jmp
xchg
pop
jne
rorb
test
push
push
shl
mov
push
inc
mov
insb
dec
jl
and
pop
ret
add
pop
add
cmc
mov
mov
cld
cwtl
push
mov
inc
sahf
rol
das
cmp
push
imul
pop
repz
inc
inc
xchg
mov
cs
cwtl
inc
jg
push
daa
push
jecxz
fidivrs
in
cmp
push
xor
test
pop
mov
adc
push
lock
cltd
call
xorb
jbe
sbb
adc
ret
push
mov
cld
xchg
cmp
and
cmpb
push
andl
mov
jns
pop
lea
adc
ljmp
sbb
xchg
imul
pop
or
jecxz
push
andl
inc
sbb
jae
nop
rcr
cltd
aaa
jp
mov
dec
pushf
inc
subb
cmp
sub
dec
nop
cmp
dec
sbb
cwtl
ret
sbb
popa
xor
push
push
movl
push
adc
dec
or
xor
clc
jb
and
jbe
xor
and
inc
add
sbb
gs
filds
push
mov
mov
nop
sbb
xchg
aam
add
imul
xchg
outsb
xchg
sub
loope
pop
dec
scas
push
sbb
popf
int
aad
cmp
lock
mov
je
pushl
shll
cmp
pop
lea
outsb
fsubr
jae
pop
adcl
pusha
push
cmpl
push
bound
cmp
jne
sub
pop
psubd
lea
push
pop
data16
pop
scas
cltd
adc
sub
enter
jae
inc
push
inc
enter
stc
fbld
jbe
mov
jge
push
gs
add
push
ja
inc
sti
inc
inc
fwait
cmp
add
repnz
pop
pop
sti
loope
rclb
cmp
sbb
push
or
xchg
test
cmc
lock
push
cs
sbb
movsl
xchg
stos
pop
adc
pop
mov
sbb
jnp
dec
data16
pop
je
test
dec
scas
rcrl
push
inc
inc
jmp
xor
push
nop
xorb
fs
cmp
adc
sbb
mov
push
push
dec
mov
popl
incl
cld
pop
mov
adc
ret
mov
andb
jle
mov
add
push
lea
sbb
js
cmp
add
push
sbb
inc
push
add
pop
sub
mov
loop
sbb
add
sahf
mov
rcpps
fdivrs
les
add
push
add
adc
leave
add
pop
jns
addl
pop
fidivs
mov
dec
ljmp
adc
sbb
ret
or
sti
pusha
jb
mov
ret
lea
xchg
lret
adc
roll
ds
mov
jbe
push
adcl
inc
movb
dec
mov
loop
push
dec
mov
push
divl
das
push
and
gs
and
pop
or
sbb
jo
push
ljmp
or
mov
mov
jmp
jno
sti
sub
and
fndisi(8087
mov
inc
inc
push
push
popf
test
xchg
jb
dec
pop
addl
add
jmp
xchg
pop
lods
dec
movsl
out
push
scas
std
xor
mov
ret
jle
inc
loope
fstpl
es
insb
pop
frstor
pop
cmpsb
or
xchg
pop
mov
cmp
andb
xor
push
cld
or
sbb
loop
out
and
cmp
mov
mov
jp,pn
lret
movsl
or
int3
jbe
lods
lods
or
mov
pusha
push
adc
imul
add
out
lods
and
testl
mov
jne
xchg
cmpl
jne
in
cmp
lods
jo
pop
mov
add
shlb
jne
mov
aad
lods
xor
insl
jnp
sti
pop
pop
out
das
movl
rorb
mov
mov
xchg
out
out
sub
movsl
cmc
push
add
jbe
mov
inc
fs
rcr
in
pusha
ret
or
xchg
add
xchg
sbb
sbb
sbbl
inc
je
fstps
cmp
ja
lea
inc
inc
fadds
jne
daa
rcrb
inc
push
push
addl
sbb
add
adc
jg
pop
mov
push
xorl
dec
roll
out
push
cmp
adc
push
adc
sub
mov
add
cmp
xchg
add
std
jnp
loopne
ret
adc
mov
xchg
sub
fdivs
mov
icebp
cmpsl
mov
fwait
loopne
mov
repnz
fsubs
test
dec
xlat
push
aas
je
cmp
imul
and
jne
push
imul
cmp
pop
jne
pop
call
repnz
mov
in
xor
jl
pop
jle
xchg
jne
jmp
sbb
sbb
lret
sub
mov
sbb
mov
push
sub
and
addr16
ret
jne
mov
sbb
loopne
add
je
pop
in
cmp
arpl
stc
mov
cs
pop
je
sti
jno
out
dec
xchg
repz
jmp
pusha
mov
dec
in
arpl
scas
jg
add
mov
pusha
add
std
and
xchg
mov
sub
shl
mov
add
cmpl
jl
adc
xchg
out
and
inc
fldl
shr
mov
push
pop
loopne
mov
push
scas
or
inc
decb
push
mov
or
cld
or
fwait
ret
push
add
inc
and
mov
les
pusha
pop
call
cmp
cvttps2pi
and
push
mov
nop
fcoms
adc
push
adc
in
add
inc
pop
rorb
arpl
xchg
or
xchg
add
ja
mov
push
gs
sahf
xchg
movsl
push
push
push
push
pop
pop
in
mov
pusha
flds
mov
xor
adc
jecxz
push
push
sub
xchg
movsl
xchg
add
sbbl
cs
xchg
js
sbb
mov
lods
fisttpll
daa
jecxz
and
and
pop
rclb
sub
xor
in
add
rcll
lcall
mov
sbb
adc
mov
cmp
sar
push
sbb
or
inc
adc
fildll
add
pop
cmc
test
outsb
in
test
and
push
imul
jbe
or
add
daa
mov
cmp
xor
es
and
xor
test
push
jp
ljmp
sti
xor
or
clc
pop
dec
cmp
outsl
jnp
jp
push
pop
jmp
jecxz
test
mov
inc
push
aam
je
into
or
divl
mov
mov
cmp
or
popa
ret
push
push
sub
mov
repz
lock
testl
sub
int
xor
sti
es
sti
fcoml
or
imul
mov
xchg
mov
mov
sub
decl
cmpsl
test
sbb
mov
lock
push
or
ljmp
xchg
fwait
add
in
and
push
mov
je
mov
cmp
jne
xchg
adcb
adc
in
mov
loopne
inc
jbe
xor
or
je
jg
jo
adc
frstor
sbb
mov
jne
cmp
je
ds
xchg
pop
int3
loope
inc
push
mov
mov
add
pop
sbb
pop
les
push
imul
pop
lock
jb
or
testb
jbe
push
adc
call
jne
rolb
into
and
mov
push
lret
dec
add
cmpsb
add
in
lock
fsubrp
lock
cmp
jne
or
or
push
ror
sbb
mov
call
hlt
adc
sbb
sbb
mov
je
or
daa
aaa
adc
cmp
cmc
nop
data16
aas
js
bound
xor
push
or
or
incl
lock
out
jl
push
icebp
push
and
pusha
mov
jmp
xchg
jle
aaa
jp
push
mov
subb
popa
lahf
pop
mov
cmp
cmpsl
cmp
fstpt
cltd
mov
pusha
je
divb
push
sbb
sbb
inc
or
add
dec
in
xor
add
test
fisubl
jb
xor
outsb
out
pop
pop
inc
cmp
lea
adc
inc
hlt
subb
mov
lock
hlt
andl
arpl
add
cmpb
add
mov
hlt
cmp
ljmp
inc
movsb
pop
enter
cltd
mov
jb
les
iret
cmpsb
icebp
pop
adc
lock
mov
mov
aas
push
fcomp
xchg
into
xor
outsl
mov
mov
add
and
mov
je
orb
sar
push
and
lea
test
push
out
add
orl
int
and
call
lea
cmpl
fidivl
jne
addr16
fnstenv
hlt
test
shrb
je
inc
addb
add
js
insb
add
mov
mov
mov
mov
inc
pusha
scas
xchg
adcb
int
cmpb
jns
pusha
shlb
xor
lock
and
mov
movsl
movsw
orb
xchg
and
test
add
or
sbb
and
sub
adc
adc
in
adc
sub
dec
pop
sbb
push
int
adc
pop
push
test
pusha
es
push
xor
ja
je
adc
jns
loope
bound
adc
and
and
adc
jmp
sub
push
xchg
pop
sahf
xchg
adc
and
mov
push
bound
adc
inc
add
ret
loopne
xor
sub
cmp
mov
aam
ficoml
adc
xor
scas
and
jmp
mov
dec
add
aam
inc
pop
push
gs
adc
dec
push
pop
or
mov
sbb
and
jmp
jne
jns
pop
push
loop
sbb
xor
mov
push
xor
sbb
jg
jbe
lods
loopne
adc
ja
jmp
mov
and
cmpl
and
into
aas
int
bound
adc
out
inc
xchg
iret
in
shlb
and
mov
fdivrs
into
jae
dec
adc
stos
and
xchg
loopne
in
cmp
shlb
add
fldt
mov
add
push
push
mov
jmp
roll
xor
xchg
push
sbb
sarl
int3
lds
fistl
push
mov
fs
fs
sbb
cmc
daa
pop
adc
filds
test
das
dec
inc
cmp
cmpsb
push
testb
loope
pop
pop
je
add
inc
clc
sbb
add
daa
sub
into
inc
popa
adc
mov
mov
ss
cmp
sti
pop
mov
push
mov
mov
sahf
push
xchg
aam
mov
outsl
push
add
jge
xor
lea
mov
inc
out
jge
push
sbb
or
push
out
fmuls
stos
ret
imul
mov
add
cmp
and
sub
jmp
add
lods
dec
clc
inc
push
mov
xchg
mov
and
inc
ds
rcr
add
push
push
xor
xorl
sbb
jmp
push
incl
call
add
push
adc
and
add
fmuls
movsb
int3
or
aas
ret
ret
pop
pop
xchg
or
dec
je
sbb
gs
cmp
sbb
xchg
cwtl
hlt
sub
jno
mov
fdivrs
pop
outsl
sbb
fdivs
pusha
xchg
mov
pop
xor
gs
jp
and
lea
push
stos
inc
adc
jb
es
add
xor
lds
xlat
mov
or
dec
sarl
or
popa
pop
leave
sub
pop
xchg
pop
mov
cmp
cmp
ret
pop
push
push
cs
or
int
data16
pushf
pop
push
mov
insl
pop
mov
mull
add
pop
jmp
push
pop
add
loopne
mov
repnz
fcom
mov
xor
inc
push
adc
jge
cwtl
jle
mov
sub
cmp
pop
ds
add
push
push
push
mov
js
out
mov
jo
pop
xchg
fstpt
hlt
adc
jecxz
ret
pushl
push
fldenv
xor
push
ja
cmpsl
jo
inc
out
add
iret
add
pushf
pop
sbb
jo
repnz
cmp
push
insb
jne
or
adc
push
push
push
dec
sarb
pop
add
inc
inc
data16
testb
pop
iret
mov
pusha
push
pop
mov
jae
movsl
mov
dec
loopne
rdmsr
dec
loopne
xchg
mov
stos
or
inc
inc
xchg
mov
add
mov
repz
push
or
clc
call
and
out
add
cmp
or
loopne
xor
scas
sub
rcrb
ja
repnz
sub
aas
mov
or
mov
and
sbb
sub
cmpsl
mov
stos
cmpsl
inc
sahf
cmpsb
add
cmpsb
pop
pop
jmp
or
loop
lods
pop
js
lret
push
fmul
jp
push
loopne
sbb
push
ret
and
adc
add
xchg
add
cmpsb
rcl
cld
test
push
repnz
leave
cld
adc
int
mov
and
adcb
shll
iret
or
sub
dec
adc
pop
arpl
cmp
add
cmp
pusha
popa
adc
pop
mov
cmp
inc
fbstp
rcr
adc
jbe
push
and
repz
aad
mov
push
pop
sbb
aad
dec
or
inc
sbb
lret
xchg
adc
hlt
add
mov
push
push
pop
cmpb
mov
adc
inc
adc
iret
mov
test
adc
xchg
bound
add
push
adc
or
adc
dec
sbb
xor
das
mov
and
and
loop
adc
add
aam
lock
das
inc
sbb
mov
test
arpl
add
cmp
lock
dec
jo
sub
cmp
aaa
sbb
xor
jmp
mov
jbe
lret
cs
pop
or
das
dec
mov
cmp
sbb
push
stos
imul
dec
mov
add
xchg
pop
lret
ret
or
loope
addb
inc
es
lcall
mov
pop
popa
mov
daa
fsubl
add
cmp
mov
dec
jne
out
outsl
aaa
inc
adcb
lcall
push
lcall
mov
mov
loope
and
js
sbb
add
in
loope
mov
pushf
mov
or
push
nop
or
pop
leave
mov
clc
or
mov
xchg
and
addb
pop
movl
cmp
inc
dec
fwait
or
dec
mov
nop
ficoml
dec
xor
xchg
test
sbb
cmp
push
sub
sbb
fwait
les
inc
sbb
cmpsl
insb
push
inc
and
xchg
xchg
xlat
rcr
fwait
js
xor
cs
and
dec
mov
jnp
mov
and
inc
mov
mov
dec
sbb
mov
or
sahf
ss
adc
push
and
sub
daa
add
dec
leave
out
inc
sub
dec
cli
sahf
outsb
mov
or
push
pop
sbb
adc
incl
ss
jno
inc
cli
sub
xchg
push
mov
jnp
jnp
inc
mov
andl
stos
push
sarl
inc
or
and
rorb
adc
jbe
pop
or
add
outsb
xchg
pop
mov
add
mov
shld
adc
aaa
adc
dec
push
sub
jae
popf
push
push
adc
sbb
out
mov
sbb
add
sbb
inc
push
jl
fmuls
leave
mov
and
call
and
adc
push
shlb
fistpll
adc
rcrb
ret
roll
ss
xchg
dec
dec
dec
rorb
push
and
dec
adc
mov
test
push
loopne
lcall
pop
cmpl
lret
or
inc
fcomps
les
dec
inc
mov
pushf
sahf
outsb
cli
xor
cmpl
jne
adc
insb
out
xor
and
int3
mov
and
sbb
pop
ss
pushf
pusha
adc
pop
fs
aam
ljmp
into
inc
imul
xor
shlb
jge
out
ret
push
iret
push
xor
fsubrs
test
xchg
pop
xor
movsb
jmp
sbb
test
jo
adcb
or
sub
loopne
jmp
dec
sub
push
movsl
aas
loop
dec
xor
insl
lock
pop
jmp
adc
push
xchg
add
jne
pusha
xchg
stos
mov
scas
jge
bound
jbe
add
and
adc
cmp
xchg
adc
adc
mov
sub
push
adc
xchg
bound
jns
inc
jbe
adc
int3
mov
addr16
data16
pop
add
clc
icebp
adc
sahf
inc
loopne
mov
call
fbstp
push
xor
jnp
pop
jbe
lret
pop
sahf
pop
cs
mov
jbe
fdivl
ret
mov
mov
sbb
insb
out
add
data16
xchg
je
mov
lock
jbe
pusha
adc
mov
push
dec
adc
aad
pop
mov
mov
cmp
cmpl
imul
js
ret
add
outsb
mov
fwait
inc
test
pop
lock
or
mov
xor
js
xlat
lcall
add
jmp
cs
data16
pushl
leave
lods
mov
adc
rolb
cli
add
add
lods
dec
mov
mov
sarl
cmp
and
cmpl
mov
iret
jmp
mov
mov
push
push
and
dec
mov
pop
add
jl
push
pop
mov
cli
xor
inc
imul
bound
add
mov
lret
cltd
cltd
push
or
push
xchg
and
mov
pop
sbb
inc
roll
xchg
xchg
mov
jecxz
sub
negb
inc
or
mov
or
mov
or
jmp
test
jge
xor
lea
cmpsl
or
add
mov
lods
xor
inc
ret
mov
sub
mov
pop
push
lds
and
or
sbb
dec
add
cmp
pop
mov
mov
les
inc
add
sar
ljmp
sub
rcrb
jbe
sub
add
mov
das
pop
dec
dec
imul
xchg
push
mov
xchg
push
push
add
rcl
adc
adc
xor
jnp
stc
and
sarl
add
xchg
test
mov
sub
mov
xchg
cmp
cmp
pop
push
pop
xchg
jmp
add
data16
jp
xchg
hlt
jne
adc
mov
sub
add
out
xor
enter
add
mov
mov
cwtl
jp
sbb
pop
jno
inc
lretw
leave
sub
adcl
add
cmp
dec
or
adc
sub
mov
push
dec
mov
pop
mov
jne
ret
mov
push
dec
mov
int3
sub
data16
shr
mov
adc
shlb
lds
mov
and
arpl
lock
push
imul
push
adc
enter
ljmp
adc
inc
dec
or
and
xor
pushf
mov
mov
mov
lods
cmpsl
mov
inc
xor
ds
enter
cmpsb
rorl
xor
addr16
sub
out
inc
inc
mov
sbb
add
xor
mov
lahf
in
xchg
or
adc
and
add
sbb
adc
and
push
adc
adc
adc
adc
push
adc
adc
adc
fcom
inc
rorb
sub
shll
lock
pop
add
lds
adc
jg
dec
jmp
clc
push
mov
cmpw
je
inc
ret
cmp
aad
imul
out
or
mov
icebp
add
or
xor
sbb
or
scas
cwtl
mov
mov
lock
mov
inc
fisttps
leave
dec
jo
pusha
mov
xor
loop
les
add
mov
jmp
in
popf
mov
add
add
cmovae
xor
jo
pop
jmp
cmp
add
pushf
idiv
add
bound
add
or
push
sbb
es
in
mov
sbb
mov
lea
adc
shrl
cmp
cmpsl
push
das
jle
fists
mov
pushf
ret
mov
xchg
add
xchg
mov
arpl
popf
into
xor
add
into
imul
jne
sarl
sti
popf
push
sbb
push
notl
mov
mov
sbb
and
jb
shrl
adc
dec
cld
inc
rolb
lea
push
add
aad
popf
insb
cmp
in
mov
push
sbb
sbb
add
pop
sub
cmpsl
push
mov
scas
je
cmp
mov
testb
ret
inc
mov
call
cmp
mov
lcall
nop
push
mov
and
or
setp
add
jmp
xor
pop
fiadds
dec
cmp
lea
push
mov
fiaddl
or
jnp
adc
adc
dec
mov
je
mov
pop
into
fiadds
xor
xchg
inc
call
and
pop
out
cmpsl
das
inc
pop
push
push
adcl
scas
mov
sub
cmp
xor
and
cmp
outsl
popa
add
ja
in
pop
sarb
push
jmp
or
sub
loop
or
or
dec
push
inc
in
sbb
xchg
adcl
push
scas
or
add
out
lcall
mov
xor
pop
sub
clc
sbbb
loopne
jno
push
push
pop
push
notb
fcomps
add
sub
dec
repz
and
push
out
inc
sbb
shlb
inc
clc
push
pop
aad
cmpsb
push
or
rorb
sbb
hlt
and
fsubs
jno
mov
insb
sbb
xor
cmovge
sub
pop
adc
sbb
sbb
sbb
mov
shll
ret
fs
movb
sbb
int
add
pop
cmp
jp
and
js
xchg
cmc
add
pop
push
es
jno
mov
inc
test
xchg
mov
xchg
repz
add
pop
outsb
out
push
fiaddl
adc
rol
push
push
mov
not
jmp
addl
inc
sub
sbb
cli
ja
jecxz
cmc
les
sub
or
sub
loopne
add
dec
push
or
in
mov
rorl
push
imul
mov
nop
cltd
jge
xor
sbb
xor
jp
xor
bound
inc
out
push
fistl
bound
jl
psubw
xchg
jnp
adc
lret
or
cmp
xchg
scas
dec
shrl
scas
xchg
icebp
push
iret
pop
je
fld
add
pop
xorl
dec
push
ja
or
sbb
aam
jge
mov
jne
cs
dec
loopne
imul
adc
ror
ret
sbb
adc
mov
or
nop
inc
sbb
iret
lds
sarb
pop
out
sub
add
inc
popa
repnz
test
ret
xor
mov
jmp
repnz
pop
pop
arpl
mov
loop
movq
sub
repnz
cmpsb
push
mov
mov
adc
push
stos
add
andl
sub
xor
pop
mov
adc
cmp
pop
clc
jecxz
inc
mov
dec
call
mov
pushf
mov
or
mov
bound
sub
mov
subl
dec
push
cmpsb
lea
ja
lcall
xchg
xchg
leave
fsts
jns
es
adc
rcrl
daa
mov
and
adc
inc
test
and
adc
add
mov
mov
ljmp
pop
mov
or
jne
inc
fs
and
push
cmc
rorb
fimull
jmp
pushf
fstpl
jo
xor
lahf
mov
pop
aaa
cmpsb
or
incl
dec
dec
cmp
js
mov
adc
add
pop
add
push
jecxz
adc
inc
dec
or
or
add
or
xor
pushf
or
ror
add
ja
aaa
ja
adc
test
inc
add
data16
fs
jmp
aaa
movsl
adc
in
or
add
lods
push
xchg
stos
jmp
push
mov
nop
push
cmpsl
das
xchg
mov
or
js
sbb
lock
les
cmp
mov
loopne
mov
enter
inc
orl
ret
push
xorb
shrb
adc
mov
scas
repnz
jae
lea
jmp
cmpl
sub
mov
les
roll
dec
add
cmp
out
mov
imul
mov
in
sub
xchg
jbe
xorb
add
add
or
and
fs
das
add
xchg
push
fistps
cmc
xchg
mov
jg
clc
inc
mov
cltd
addr16
incl
add
aad
pop
and
push
inc
shl
adc
xchg
sbbl
sub
addr16
mov
add
out
add
add
push
or
pop
roll
cwtl
pop
sarl
sti
add
pop
pop
or
sbb
lods
addl
or
mov
hlt
test
pop
mov
adc
call
sahf
pop
test
addl
mov
add
or
pop
cmp
dec
cmc
nop
pop
jo
stc
shrl
xor
aad
jnp
xlat
mov
movsl
sbb
adc
inc
and
or
incl
icebp
inc
sti
push
je
cwtl
xchg
popf
dec
out
inc
cmp
sbb
mov
loopne
ds
xchg
js
add
stc
xchg
lret
or
mov
push
inc
jo
mov
ja
xchg
mov
shll
test
in
dec
ret
ss
mov
in
add
add
xor
add
gs
sbb
shrd
sbb
outsb
dec
scas
jno
or
das
or
pop
add
xchg
and
cli
outsl
lea
cmp
leave
and
add
cmp
pop
sbb
add
inc
push
nop
or
inc
xorl
pop
cmpl
int3
push
or
daa
lea
xchg
push
pushf
lds
imul
push
xchg
sub
sub
outsl
adcb
jno
lea
sub
jmp
in
mov
sbbl
outsl
in
xchg
sub
test
test
or
jb
testb
adc
sbb
sbb
sbb
ja
sti
data16
inc
jnp
cmp
loope
or
or
data16
jbe
add
cmp
jmp
push
jbe
or
je
test
xor
push
jns
mov
mov
in
cltd
push
push
test
cmp
dec
or
sbb
shrl
nop
inc
cld
add
lock
stos
es
sbb
push
fcoml
and
clc
hlt
push
and
hlt
jns
or
lds
cli
mov
pop
cmp
add
cmp
call
pusha
stos
and
fldcw
adc
or
mov
push
push
push
lock
jne
mov
inc
loopne
mov
repz
ss
cld
fcom
dec
or
push
scas
inc
xchg
jno
out
or
ja
pop
or
push
cmp
js
inc
in
aam
xor
jno
or
popa
popa
lea
ret
pop
inc
mov
xchg
lret
movsl
or
pusha
push
js
xchg
add
je
mov
ficompl
shlb
std
fisubs
shl
jo
movzwl
push
jo
js
adc
fistps
mov
dec
jp
push
jb
cmpsl
test
sbb
clc
mov
inc
aam
adc
outsl
xor
repnz
jg
sbb
sbb
mov
xor
sub
fidivrl
insb
adc
inc
pop
and
push
cmpl
jne
mov
jl
cmp
jbe
or
jne
push
ja
sarb
hlt
mov
std
cmpb
data16
push
xchg
push
cs
popa
inc
add
cmpl
mov
shrb
add
cld
mov
cmovns
or
adc
sbb
lds
xor
xor
or
sub
push
mov
jne
pop
orl
cmpsl
rclb
xor
mov
and
inc
pop
js
and
pop
mov
in
test
rorb
js
vmread
sub
and
imul
push
andb
and
and
or
add
jne
and
rorb
bnd
jle
lds
adc
bswap
add
movsl
clc
into
fstpt
pop
in
xor
dec
rcrb
sbb
clc
fsubl
ficoml
dec
cltd
out
ds
add
mov
mov
std
mov
dec
outsb
inc
sbb
pop
fucomip
in
pop
xor
or
cmpl
xor
popf
addl
mov
call
es
loope
aam
rcl
ret
cld
xor
push
mov
rorb
sub
or
pop
ja
pusha
adc
push
test
insb
lock
fwait
and
jmp
jae
xor
xchg
ljmp
xchg
dec
fs
mov
fisttpll
cmp
addr16
je
mov
ljmp
and
inc
xor
adc
les
cmp
jb
and
mov
or
fdivr
mov
push
jae
dec
mov
xor
inc
sub
cs
add
and
and
clc
outsl
push
add
xchg
cmp
cmp
adc
daa
call
inc
cs
decl
cltd
push
push
mov
rclb
outsb
sub
mov
std
ss
leave
dec
int3
inc
sahf
outsl
jmp
mov
add
mov
pop
loopne
cmp
and
cli
mov
jbe
cld
aam
orl
add
call
adc
rcrl
je
jmp
push
xchg
in
aad
cs
jp
dec
mov
fnstcw
or
push
je
push
adc
popa
push
rorb
jle
test
adc
and
jge
data16
pop
dec
dec
call
pop
fbstp
packsswb
adc
mov
and
fdivl
or
scas
xor
and
dec
dec
xchg
ret
add
pop
xlat
push
fcmovbe
emms
add
loopne
mov
orl
fs
cmp
mov
out
mov
or
and
pop
mov
add
rorb
lea
inc
roll
or
sub
mov
adc
push
loop
push
and
inc
push
and
rcr
mov
lds
insl
je
mov
mov
xor
jmp
clc
es
and
out
inc
idivb
int3
out
add
addr16
adc
sub
add
and
cmpsl
add
xchg
adc
and
xchg
out
es
xchg
xor
xchg
mov
das
or
mov
roll
xor
outsl
rorl
lea
mov
xor
or
fdivrs
cmp
ret
fldenv
push
push
add
sbb
jecxz
pushl
dec
or
pop
mov
mov
mov
mov
or
cmp
sub
cmp
pushf
adc
mov
rorl
xchg
add
sti
cltd
cmpl
jb
mov
and
mov
enter
sub
or
cmc
mov
pop
jb
xor
test
sbb
add
popf
pushf
fsubp
loopne
xor
je
xor
sub
popf
jge
sarb
sub
or
js
adc
cld
pop
js
push
jae
lea
ja
cmpb
jne
cmc
push
fidivl
aam
add
pop
sbb
mov
and
pushl
sbb
and
aaa
outsb
inc
daa
daa
pop
js
jle
add
imul
cmp
sbb
pop
push
sub
jle
dec
or
dec
mov
mov
lea
outsb
add
or
add
add
xor
jae
xor
add
inc
sub
dec
and
dec
shr
push
xchg
add
xchg
xchg
pop
sbb
push
adc
add
mov
mov
or
gs
add
and
sahf
popw
cmpsb
pop
push
sbb
adc
sub
out
xor
xor
xor
pushl
adc
add
cmc
sub
cs
inc
mov
shll
dec
and
sub
inc
inc
and
push
push
lods
ss
xor
jne
or
mov
mov
data16
ljmp
movsl
sub
sub
ja
xchg
jb
pop
adc
pushf
cmp
mov
nop
and
je
sub
or
fsub
add
dec
or
jb,pt
stos
pop
add
xor
push
arpl
orl
aaa
mov
addl
pop
mov
cmc
push
or
je
lea
js
fists
or
shrb
dec
out
inc
cmpl
adc
fmulp
pushf
adc
mov
xor
je
inc
and
data16
dec
add
ret
lret
pop
adc
add
lods
xchg
inc
jae
cmp
scas
jmp
push
je
dec
add
in
mov
push
xor
or
or
and
std
incl
mov
orb
jl
add
add
pop
add
xor
push
loop
add
jg
mov
icebp
sbbb
adc
dec
pop
and
daa
bnd
mov
icebp
mov
cmp
push
cmpb
out
fldt
push
jae
lea
push
sub
push
lods
andl
adc
stos
ret
es
ja
lret
dec
cli
dec
pop
ret
adc
pop
pusha
mov
ret
lods
xchg
cmp
enter
adc
ffreep
imul
jg
out
insb
fdivl
cmpb
xor
fnstenv
inc
jmp
push
xchg
mov
cmp
sub
xor
cmp
add
or
inc
mov
and
movb
or
push
xchg
xchg
cmpsl
cli
fdivs
sub
sub
out
push
sti
test
sbb
sub
aad
mov
insb
neg
inc
popa
jns
call
jnp
flds
push
cmc
dec
in
sbb
outsb
rorl
pop
mov
cmp
imull
sub
mov
xor
int3
mov
loop
jo
nop
push
adc
out
test
inc
pusha
ret
push
mov
lret
and
push
mov
xor
push
cmp
fs
aad
xor
mov
sub
inc
shll
xor
adc
sbb
mov
idivl
add
cld
or
movsl
popa
xlat
jnp
or
jge
pop
mov
pushf
cmp
lds
lret
jmp
jecxz
lahf
mov
cmp
jb
inc
dec
insb
xor
adc
adc
jge
add
jo
or
cmp
sub
push
inc
or
mov
jge
add
es
xor
or
sbb
test
sbbl
adc
icebp
ret
jge
out
std
cmc
imul
orl
push
inc
mov
psubw
imul
out
addr16
cmp
xor
cmpsb
imul
inc
pop
push
imul
xorb
mov
and
arpl
pop
in
or
adc
adc
add
jp
push
adc
stos
jbe
movsl
mov
xchg
std
push
mov
add
fisubl
xchg
pushl
lahf
inc
xor
mov
scas
mov
push
cmp
mov
inc
test
and
test
inc
or
pop
xchg
xor
loopne
pop
sbb
cmpl
sbbb
lock
xchg
cmp
add
or
mov
sbb
xchg
xchg
icebp
jnp
add
lret
into
cli
inc
cmp
xor
jbe
cmp
ret
loop
ret
jg
dec
adc
je
mov
cmp
rclb
adc
jg
xchg
js
fsts
jo
adcl
xchg
mov
push
pusha
es
andb
imul
pop
adc
loope
xchg
jg
test
insb
or
ja
pop
inc
pop
or
sub
test
adc
jno
aas
lret
push
imul
pusha
xor
shrb
mov
adc
rorl
orl
cmp
outsl
insl
das
or
add
or
mov
dec
lret
cli
das
test
push
clc
cmp
test
mov
inc
sbb
inc
mov
and
ja
std
sub
inc
xchg
pop
pop
sbb
push
sbb
push
xchg
mov
in
cmp
push
pop
repnz
mov
jae
in
rclb
lds
sub
and
insl
push
dec
sub
mov
les
mov
and
and
and
test
in
jnp
pop
adc
clc
clc
mov
and
fsubrl
mov
sub
mov
jb
adc
fisubrs
les
ret
add
xchg
add
mov
add
test
adc
test
push
in
fildl
pusha
dec
loope
dec
fdivs
popf
lahf
adc
and
push
xor
sbb
adc
inc
cmp
mov
jo
stos
sbb
fs
mov
cmp
and
aad
push
ficoms
cli
add
or
ja
daa
inc
adcb
sbbb
xor
lcall
adc
cmpl
push
add
mov
adc
add
push
or
enter
cld
or
dec
or
ja
sbb
mov
mul
inc
dec
xor
push
pushf
iret
jl
inc
push
push
mov
push
fbstp
add
sub
jecxz
loope
lods
or
pusha
mov
mov
mov
lods
lar
out
push
jne
nop
cmp
scas
adc
cmp
cmp
rorb
and
jbe
mov
test
push
adc
push
sbb
fmull
jge
imul
aaa
pushf
inc
adc
pop
sbbl
fwait
ret
xor
pushf
andl
out
dec
hlt
sub
fimuls
push
or
pop
mov
test
movzwl
test
loopne
sbb
je
test
xchg
or
add
es
adcb
push
loope
mov
xchg
ficomps
adc
cmc
push
cmpl
adc
pop
sbb
scas
xchg
pop
das
jmp
add
adc
mov
cmp
cmpsl
icebp
adc
xchg
mov
jmp
daa
jo
sub
push
movsl
xorl
push
adc
das
push
fidivs
mov
inc
jb
roll
jmp
leave
and
push
jecxz
loope
mov
ret
stos
sub
js
fistl
rclb
add
sbb
push
push
mov
movsl
and
mov
add
or
mov
mov
mov
stos
int
dec
jmp
ds
jo
push
les
add
notl
mov
in
loop
rclb
out
mov
ss
xchg
in
adc
sub
orb
sub
inc
loopne
mov
out
and
sub
pop
dec
pop
xor
sbb
push
pop
or
hlt
inc
in
stos
or
mov
movsb
pop
ret
jge
push
daa
lea
jge
sub
hlt
sub
aas
or
push
test
nop
cwtl
jle
mov
loopne
sbb
cmp
ud2
rdmsr
ja
loope
lahf
cld
push
adc
cld
js
push
notb
mov
add
sti
add
and
dec
clc
xor
and
pop
lret
jecxz
or
sbb
add
cmp
inc
jbe
jne
mov
mov
sbb
shrl
fs
sbb
popa
pusha
lret
mov
jge
das
mov
les
push
mov
rclb
and
loopne
and
addb
mov
cmp
dec
mov
sarl
mov
cmp
jmp
mov
cmpsl
loope
call
pop
jl
int3
mov
fldl
cmp
into
xor
cmp
sbb
gs
aam
push
testl
sahf
into
dec
add
inc
dec
and
sub
int
fmuls
cmp
aad
mov
xor
xor
sub
push
sub
push
stos
movsl
jg
nop
dec
add
inc
or
mov
enter
dec
push
jg
inc
and
push
cwtl
stc
ja
add
pop
call
je
push
daa
mov
xor
xor
pop
push
dec
jge
sub
adc
icebp
cmp
addb
push
aam
clc
mov
mov
adc
or
das
dec
pop
mov
sub
inc
ficomps
into
jmp
into
out
add
roll
dec
xor
xor
jns
pop
sub
push
cmp
xor
in
and
imulb
xor
add
mov
sub
out
jle
cwtl
jl
mov
leave
xor
jb
xor
sahf
mov
aas
lea
jp
push
inc
xor
mov
fiadds
dec
dec
jns
adc
jne
pop
jo
iret
push
shrb
pop
dec
mov
adcl
adc
shlb
inc
add
jmp
loopne
insb
lea
into
mov
rorl
faddl
mov
and
and
aam
push
inc
mov
adc
mov
or
push
out
jl
movsb
gs
scas
push
and
das
inc
jle
add
aam
aaa
mov
pusha
jbe
outsb
jmp
xorl
and
mov
in
add
push
or
sbb
inc
mov
xchg
add
xchg
sbb
pop
fnstsw
mov
lea
test
popa
rcrb
bswap
sub
inc
jmp
inc
push
add
xor
jo
sub
mov
mov
pushl
cmp
jne
sub
xor
sbb
adcl
roll
adcl
daa
bound
fadd
movsl
jnp
xchg
inc
in
mov
jnp
mov
pop
xchg
aaa
xor
roll
rorb
iret
add
push
dec
enter
fadd
dec
xchg
inc
scas
push
push
pop
inc
adc
mov
jg
loope
add
je
dec
sbb
ret
lods
pop
loop
and
mov
les
sbb
test
movb
add
in
rcll
jne
andb
ljmp
cmp
sbb
scas
test
jl
and
jne
imul
or
pop
mov
pop
jne
or
jne
aas
push
xchg
mov
and
addl
cmpb
ljmp
cmp
mov
pop
lahf
cmp
sbb
lea
movb
push
add
or
mov
mov
or
xor
push
cld
notb
cmpsl
mov
sub
sub
in
dec
add
xchg
shr
aad
or
push
xchg
push
fs
movsb
inc
mov
xchg
fdivrl
push
inc
xor
sarb
cmp
lret
mov
sub
ds
push
push
fcompl
fiaddl
pop
push
pop
lea
testl
or
pop
les
xor
sbb
cmp
mov
popf
pop
addr16
scas
lcall
insb
inc
fbstp
mov
pop
mov
jg
imul
sbb
imul
mov
rcll
cmp
jl
inc
inc
push
jmp
cmp
adc
insl
cmp
insl
adc
lret
sbb
mov
sub
dec
adcb
das
inc
mov
inc
jle
testl
rcrb
dec
andb
andl
xor
call
sarl
mov
rolb
stos
xor
jne
sub
xchg
out
rcrb
push
jae
push
add
push
jne
push
push
je
xor
outsl
loope
out
sbb
dec
insb
jne
pushw
mov
or
cmp
scas
aaa
xor
inc
sarb
andb
jmp
mov
push
mov
adc
sbb
adc
cmp
je
push
add
dec
add
jne
add
mov
adcb
and
test
cmpsl
mov
cmp
mov
jg
add
repnz
cmp
add
cmpl
jnp
push
cmp
push
xor
cli
push
pop
cwtl
fdivrl
jl
sti
inc
mov
mov
mov
or
out
aaa
les
lret
jae
pop
movsb
cltd
adc
push
pop
sbb
or
sbb
in
push
cmc
push
and
sub
mov
pop
xor
rcrl
push
test
jecxz
xor
es
pusha
push
jnp
pop
aaa
jecxz
clc
stc
lds
mov
icebp
dec
loopne
adc
or
mov
jb
mov
mov
shr
xor
mov
push
mov
sahf
jge
mov
pop
dec
dec
or
jmp
inc
or
lea
and
add
es
or
lea
insb
aaa
movsb
mov
fcmovb
inc
sbb
and
sbb
lcall
mov
add
jae
push
or
sbbb
shlb
imul
data16
shll
insb
jo
pusha
shll
js
mov
shrb
pop
sbb
mov
add
adc
push
or
or
dec
jnp
les
shr
inc
mov
xor
pop
scas
sub
jo
add
lea
xor
add
loopne
nop
in
mov
or
movb
sbb
xor
and
rclb
xor
add
mov
inc
jl
js
and
xor
jo
xor
add
push
and
push
cmp
or
rclb
push
test
inc
negb
mov
imul
cmp
or
cmp
add
or
push
inc
adc
mov
shrl
cld
jo
fcmovu
sub
cmp
xor
hlt
inc
aam
adc
jmp
xchg
add
push
adcl
sbb
mov
mov
or
lea
add
cmpsb
cli
and
add
repnz
push
sahf
loope
addl
jb
mov
push
cmp
sub
sbb
sbb
adc
es
mov
mov
daa
push
add
lock
out
xor
push
mov
test
or
mov
movsb
jb
mov
sub
and
inc
sub
loopne
sub
add
shl
ret
mov
add
rclb
aam
jl
insl
pusha
and
imul
je
xor
xchg
imull
jne
das
xorl
cld
addl
jl
inc
addr16
jne
orl
clc
jnp
inc
dec
adc
imul
pop
pusha
int
pop
dec
test
aas
jmp
and
xchg
mov
add
das
call
test
sar
cltd
in
cmp
das
add
sti
cmp
sub
sub
sub
add
imul
fcoml
add
mov
stc
push
jne
mov
sub
outsb
sub
mov
inc
icebp
jne
cmp
lds
je
xor
sub
xor
or
push
sbbl
cld
out
cmpsb
imul
lods
mov
or
add
sub
cmp
js
mov
testb
add
or
mov
xchg
sbb
enter
sub
into
dec
aas
icebp
pop
cmp
inc
cmp
sbb
jne
popf
dec
cmp
lock
mov
insl
cmpsl
or
cli
out
fidivrs
pop
dec
adc
add
lods
pop
mov
cmp
cwtl
mov
or
xchg
xchg
dec
push
jle
lods
pop
mov
inc
or
movsb
jo
and
adc
lret
fs
sti
sarb
pop
xor
mov
pop
add
pop
inc
in
cmp
adc
rorb
jp
enter
repnz
jb
sub
mov
mov
dec
aaa
loopne
jb
sbb
lea
push
push
mov
xchg
bound
pushl
and
mov
sbb
fstl
lods
xor
int3
lock
arpl
cmp
testl
xchg
and
adc
lea
or
push
pushf
icebp
mov
je
sbb
fs
pop
fs
pusha
xchg
inc
inc
push
insb
insb
push
push
xor
or
pop
cmp
adc
nop
and
push
icebp
push
xchg
xlat
idivb
je
cmp
je
popf
add
add
xor
or
push
adc
push
mov
fsubl
lea
mov
push
push
hlt
sti
push
sub
inc
and
shrb
jmp
push
jne
inc
xor
movsl
jg
roll
andl
dec
inc
push
outsb
dec
adc
jnp
in
adcb
lock
xchg
xchg
cld
lock
rcl
out
mov
stos
or
push
pop
adc
adc
cmc
jo
add
ja
and
mov
movswl
in
push
mov
imul
lret
add
push
and
mov
cmpsl
loopne
add
ret
push
cmp
cmp
xor
ljmp
flds
pop
pop
sub
add
mov
test
adc
add
or
adc
lret
leave
sbb
add
and
xchg
mov
clc
jle
jae
fisubl
das
jbe
out
jne
adcb
adcl
sbb
sbb
pop
and
sarb
in
insb
push
clc
insl
ljmp
add
mov
inc
xorl
and
popa
movsb
cltd
cs
cmp
xor
leave
je
push
aas
jne
outsb
fsubr
sbb
add
xlat
ss
outsb
cmp
mov
stos
or
fcmovnbe
pusha
pushf
cwtl
xor
mov
clc
outsb
inc
ja
sub
mov
cmp
andl
sbb
iret
pop
shll
push
and
dec
dec
rorb
ficoms
xchg
cwtl
push
mov
mov
sbb
dec
push
or
pusha
fidivs
xchg
sbb
xor
cmp
xor
pushfw
fs
in
fcoms
inc
or
jecxz
mov
loope
inc
orl
add
adc
sub
adc
mov
outsl
lds
pop
arpl
sbb
imul
adc
je
fdiv
lods
cmp
mov
bound
ficoms
push
sub
and
cmp
sub
sbb
adcb
repnz
loope
pop
cmpsl
jne
sarb
flds
aaa
lods
sahf
subb
sbb
push
add
dec
pop
xchg
into
in
ret
jge
int3
mov
stos
mov
lret
lods
adc
sbb
enter
sbb
and
rolb
xchg
adc
or
pop
add
nop
addl
and
pop
cmp
dec
pusha
xor
lcall
adc
push
movl
push
add
insb
mov
adc
and
adc
movsb
data16
xchg
sbb
cmp
dec
fsubl
pop
push
cli
sub
xchg
jp
push
jle
xor
test
dec
inc
in
sub
mov
push
push
push
push
mov
ja
adc
fiadds
mov
mov
cmpl
cltd
test
loope
lahf
loop
int
fmuls
aad
push
arpl
sarb
dec
adc
pop
jb
test
add
mov
xor
push
xor
icebp
rcrb
and
and
pop
leave
rcrb
adc
fdivl
cmovge
or
mov
movsl
add
pushf
mov
jl
mov
mov
xor
sbb
and
push
jo
adc
adc
movsb
add
push
jmp
fnstcw
xor
pop
push
orl
push
pop
out
xchg
mov
orl
xchg
in
mov
andb
pop
cmp
cmp
and
shl
test
fdivp
push
stos
flds
pop
fdivp
sub
sub
mov
jne
test
sub
pop
lcall
xor
or
divl
movsl
dec
repz
dec
and
cmc
sbb
adc
jns
jl
repnz
and
cmp
inc
or
or
or
imul
sub
adc
inc
jne
mov
fsubl
xor
pushf
mov
and
lods
mov
and
or
push
ret
mov
fsubl
xchg
jae
or
add
xchg
add
shlb
popf
inc
jg
adc
adcb
pop
lret
sbb
jle
adc
push
je
xchg
fimull
je
mov
xchg
lock
aam
jnp
filds
push
xchg
mov
sbb
mov
push
or
or
dec
outsb
pop
push
and
push
lods
call
aaa
xchg
arpl
push
xchg
pop
cmp
enter
jge
imul
mov
or
imul
and
xchg
add
cmpsl
test
add
add
push
mov
xchg
jo
lahf
xorb
dec
xor
test
and
insb
popf
cli
ss
addl
or
mulb
jbe
pop
out
xchg
int3
call
sub
pushf
adc
cmp
add
push
sbb
push
sbb
cmovne
outsb
mov
sbb
xchg
cmp
push
jnp
xor
xor
ss
xor
adc
dec
leave
push
jb
cmp
nop
add
ret
ret
xor
add
fwait
xchg
insb
loope
sarb
ret
xchg
mov
dec
adc
js
fisttps
adc
jle
cli
push
push
push
rcll
dec
rcll
push
sbb
jmp
movb
jp
ljmp
jg
inc
cld
aam
add
dec
pop
nop
and
outsl
lds
sub
adc
popl
jmp
push
pop
push
fdivl
jle
xor
stc
inc
cmc
js
adc
xor
imul
and
push
pop
mov
pop
add
push
cmpb
pushf
dec
fmull
out
dec
push
inc
sub
pop
inc
or
and
push
jmp
jecxz
jae
push
lcall
sub
push
sbb
sbb
popa
pop
sub
mov
jl
inc
inc
lock
andl
adc
adc
push
ret
push
in
in
fs
cmp
mov
add
jae
cmpsb
cmp
or
mov
repnz
jo
push
fimull
hlt
add
scas
inc
xor
add
push
fcoml
fistpll
into
mov
inc
in
nop
jo
or
clc
dec
xchg
cmp
pusha
adc
faddp
test
dec
adc
or
ficoms
push
xor
mov
ds
jl
and
clc
mov
sbb
je
push
cmp
sub
xchg
out
adc
pop
push
sbb
jmp
push
cs
adc
push
pop
cmp
adc
mov
mov
xor
cmp
sbb
adc
lret
outsb
sub
mov
or
add
ljmp
nop
or
in
pop
push
add
mov
das
push
sub
or
jle
sub
add
rcr
cs
cmp
jo
imul
ret
fcoms
lock
sbb
mov
push
fdivr
int
or
cmp
jl
loope
xor
xlat
lds
lret
or
adc
jl
inc
dec
dec
insb
loopne
mov
jbe
fisttps
aam
out
addr16
mov
leave
pop
adc
gs
sub
or
pop
mov
sub
or
rolb
xchg
or
test
inc
mov
jo
ds
push
add
inc
push
adc
add
popa
popf
fstl
add
dec
scas
inc
cs
xor
rol
jle
lea
sbb
movsl
push
inc
mov
or
shlb
or
mov
mov
mov
clc
lret
inc
arpl
push
test
rolb
scas
nop
in
or
sbb
icebp
or
or
rorl
stos
push
pusha
and
mov
pop
xlat
mov
data16
cmpsl
cmp
push
xchg
lcall
movl
and
adc
ficompl
dec
sub
adc
xchg
daa
repnz
mov
or
mov
es
mov
insl
dec
fwait
xor
fimuls
push
push
inc
dec
push
aas
push
cwtl
imul
cltd
idivl
push
andb
pop
jne
hlt
jbe
lds
fidivs
in
cwtl
add
jne
lock
int
inc
loopne
outsl
ret
push
push
mov
add
sub
in
or
movsb
fxch
push
mov
push
pop
add
dec
shlb
addr16
xor
mov
addl
aas
movsl
add
in
and
sub
inc
inc
and
rolb
push
cmpsl
or
inc
aaa
adc
popa
movsb
stos
dec
mov
aas
or
sub
jp
imul
pop
clc
xor
fwait
adc
cmp
pop
mov
out
andl
call
xor
pop
sbb
mov
mov
popa
jns
jo
inc
or
sub
hlt
and
dec
sub
inc
sub
lds
push
nop
sbb
sbb
inc
mov
dec
out
xchg
jb
pop
push
or
jae
sbb
sbb
test
loop
xchg
or
fucomi
pop
dec
orl
add
dec
loopne
pop
pusha
push
jge
add
cmp
jg
rolb
mov
mov
add
dec
push
jb
sbb
mov
dec
adc
sbb
in
mov
cmp
cs
cmp
adc
sbb
sub
insb
sahf
pop
cmp
lods
sti
into
add
jg
pop
mov
xor
adcb
push
push
mov
rclb
imulb
addb
pusha
push
pusha
insb
out
add
test
in
jnp
mov
aas
loope
cmp
mov
outsb
add
cmpl
int3
and
add
sti
xchg
movb
pop
inc
dec
dec
cmpsl
scas
jge
xchg
sti
sarb
sub
insb
shr
inc
add
stc
push
mov
dec
adc
adc
and
call
cli
popa
dec
sbb
inc
mov
xchg
pop
cmp
xor
adc
adc
in
popa
inc
dec
std
repz
dec
inc
mov
or
lock
and
dec
cld
mov
mov
es
or
sub
or
push
mov
rclb
arpl
pop
adc
push
lods
les
cld
pop
adc
push
dec
dec
jns
mov
test
or
mov
lret
push
int
les
je
fdivs
call
dec
push
push
icebp
or
pop
mov
xchg
lock
out
arpl
popa
inc
pop
cmpb
pop
js
shll
sub
and
test
pushf
pop
test
jmp
dec
cmpsb
js
and
add
mov
adc
movsl
rol
insb
insb
lds
sub
lods
adc
lds
test
lcall
fdivrs
hlt
test
movb
inc
test
adc
mov
xchg
movsl
xor
je
adc
cmp
arpl
dec
jne
add
mov
mov
cwtl
pop
inc
or
adc
addb
or
add
jmp
push
jne
pop
add
push
and
pop
mov
xchg
mov
loopne
mov
nop
inc
xor
jle
add
xor
ds
cwtl
cmp
jbe
loop
cmpsb
fs
addb
sub
fs
mov
push
jne
repz
or
sbb
sub
jo
cmp
xchg
or
jo
into
je
or
jl
dec
nop
bound
adc
testl
pop
fwait
or
nop
mov
dec
push
or
scas
jb,pn
fiadds
cmp
add
mov
cmovbe
jg
cltd
push
mov
dec
cld
or
xor
sbb
mov
es
dec
pop
sahf
testb
aaa
pop
inc
fbstp
in
lea
pop
add
or
add
fsubl
pop
cwtd
ret
inc
and
inc
pop
ja
sub
mov
mov
dec
pusha
adc
adc
sar
inc
dec
movsb
add
pusha
push
cmp
rolb
mov
push
in
inc
leave
cmc
jnp
mov
arpl
cmc
pop
sub
subb
pop
test
repnz
xchg
adc
into
pop
testl
xchg
aaa
xor
adc
sbb
call
xchg
mov
mov
das
movb
mov
fsubrs
imul
adc
or
cmp
loop
pop
push
fisubrs
jmp
or
jb
add
adc
sub
push
shlb
into
mov
jnp
inc
nop
push
pushf
mov
mov
jl
je
insl
les
lock
fld
jge
mov
push
mov
jle
xor
or
aaa
push
neg
ret
jne
sbb
push
int
fcoml
and
sbb
inc
nop
jne
imul
add
sbb
xchg
pop
pop
mov
jae
push
push
xor
inc
xor
mov
sbbl
sub
pop
mov
lods
push
push
push
or
dec
and
out
push
xor
or
fwait
add
sub
and
lock
dec
int
sbb
daa
bound
imul
outsb
and
sub
jb
testl
xorl
lret
rolb
pop
popa
inc
sub
and
pop
test
push
sub
daa
inc
or
mov
rcll
cmp
push
dec
jnp
ret
push
cwtl
add
lret
mov
loopne
sub
adc
test
adc
cmp
mov
mov
xorb
test
stos
sti
push
rolb
rorb
jnp
sahf
add
in
daa
push
in
or
cmp
add
pop
cmp
cmp
mov
js
or
lea
loop
sbb
fnstcw
push
push
cmp
sbb
add
xchg
add
cld
push
or
je
pop
cmp
inc
shl
adc
adc
fwait
adc
adc
cmpsl
andl
adc
add
inc
pop
xchg
popa
pop
out
push
xchg
jecxz
mov
nop
pop
mov
je
cmpsb
jne
ret
iret
add
jl
mov
cmp
or
in
divb
je
or
je
or
sub
dec
call
das
adc
sbb
cmp
ficoml
push
or
add
add
sbb
sahf
sbbb
pop
jnp
dec
jnp
das
and
jmp
cmp
adc
rclb
adc
sub
adc
add
mov
inc
mov
xchg
jo
push
dec
lock
cli
mov
cmp
call
jmp
lea
test
cld
lds
pushf
stos
inc
mov
adc
add
sbb
or
repz
std
dec
cmp
jmp
and
out
adc
dec
fsubrs
adcb
add
add
inc
push
sub
adc
das
cli
cmp
sbb
je
ret
jle
xchg
sbb
pop
aaa
inc
dec
je
sub
sbb
sub
or
xor
adc
cld
inc
mov
sbb
fstpt
shrl
shl
mov
ret
push
adc
and
int3
pop
fidivrl
movsl
add
insb
adc
stc
xor
pusha
pushf
adc
cmp
push
loopne
test
movl
push
test
jnp
and
dec
jne
cmp
cmp
hlt
jne
push
or
mov
pop
and
fiadds
lds
and
mov
test
pop
fsubl
js
add
xor
out
je
push
xchg
rclb
jmp
cmp
dec
dec
add
mov
jo
push
push
push
or
or
xchg
call
loopne
pop
jo
or
mov
sub
adc
xchg
xchg
je
push
outsl
cmp
or
pusha
lcall
dec
roll
notl
fdivrl
xor
mov
sub
add
sbb
xchg
pop
cmpl
mov
mov
xchg
add
ret
inc
in
push
push
or
mov
ds
jb
inc
leave
push
fs
and
jb
in
shll
adc
cmp
mov
add
out
repz
jge
mov
mov
mov
push
leave
js
lods
call
xor
xor
sub
in
adc
pop
mov
int
push
ret
pop
cmc
xchg
out
cmpsb
fsubrs
fcoms
or
or
jmp
jbe
push
push
or
adc
addb
mov
fdivrs
xor
addb
xchg
xchg
mov
fimuls
mov
mov
inc
test
dec
fs
les
in
xchg
icebp
xor
sub
add
negl
test
dec
inc
sbb
mov
and
cld
lods
or
sbb
fiaddl
ss
mov
mov
test
bound
adc
imul
or
adc
push
cmp
insl
sbb
test
mov
pop
xor
push
movsb
push
iret
pop
fiaddl
jg
sahf
and
or
mov
push
xor
testl
adc
mov
lea
out
inc
loop
js
cmp
stos
jne
mov
or
push
xor
xchg
loopne
repnz
pop
out
xchg
sub
jae
dec
ret
sti
call
icebp
inc
in
divb
or
sbb
inc
or
sbb
pop
stos
inc
pop
mov
jo
or
enter
push
in
sub
sub
mov
test
outsl
in
push
shrl
bound
pusha
dec
sub
dec
leave
outsl
loope
fisubl
adc
inc
movl
pop
mov
orb
mov
outsb
xchg
mov
cmp
loop
dec
lahf
rolb
test
pop
push
add
and
sub
icebp
cmpsl
roll
push
push
loope
inc
pusha
push
xchg
cmp
sbb
or
inc
push
jbe
mov
daa
xchg
sahf
mov
subl
daa
push
mov
dec
shrl
imul
inc
or
fabs
pop
mov
and
xchg
loopne
int3
cmpsl
mov
pop
add
inc
jp
push
sbb
or
call
jle
pop
push
inc
leave
je
in
pop
rcl
add
cmp
fdivrl
es
loopne
mov
jo
cmpsl
ret
xchg
push
sub
dec
sahf
lcall
repz
inc
xor
push
outsb
int
xor
aaa
divps
jo
aaa
in
mov
inc
push
dec
cmp
hlt
cld
inc
bound
or
cmpsl
or
mov
mov
adc
adc
mov
repnz
pop
or
or
or
fwait
push
sbb
mov
cmp
scas
add
mov
or
xchg
add
push
mov
sbb
mov
enter
xchg
mov
mov
adcl
or
arpl
adc
test
push
add
push
sub
adc
out
test
inc
or
push
and
mov
popa
sub
popa
daa
cmpsb
mov
adc
inc
or
jne
cmpsl
insb
adc
xchg
pop
int3
xchg
xchg
shrb
enter
je
ds
clc
leave
sub
inc
cmpps
pop
scas
mov
ret
or
test
sbb
cmp
inc
push
ret
xor
fisubs
mov
jnp
into
fcomi
sub
pop
or
ss
cwtl
dec
das
mov
cmp
mov
xor
enter
jne
xor
add
push
in
push
cmp
and
push
dec
adcl
call
test
nop
adc
jp
cmp
xchg
inc
cmc
jns
adc
jge
lock
cmp
cmp
or
sub
sbb
xchg
inc
das
push
sbb
pop
or
pushf
std
and
adc
iret
js
les
add
aad
and
pop
enter
adc
call
push
xor
mov
and
cmp
cmpsb
pop
add
in
xor
xchg
mov
adc
lods
sub
inc
and
fistl
and
notb
add
pop
jno
sub
inc
clc
inc
movsb
into
jle
push
jecxz
lahf
add
pop
lret
in
lcall
fs
adc
sahf
rcrb
sbb
test
sbb
test
sub
roll
pop
jb
nop
push
sub
add
gs
push
fs
mov
outsl
mov
push
push
mov
xor
adc
sub
xor
sub
and
sub
adcl
out
xchg
lods
das
mov
fsubrs
fmuls
pop
lds
out
pop
out
dec
mov
cs
in
sbb
in
cmp
push
pop
cmp
inc
lock
xchg
jmp
lock
jle
jmp
ret
fcomp
inc
jnp
sbb
jg
cmp
adc
pop
gs
insb
out
pusha
xchg
lock
add
sbb
adc
jae
iret
outsl
dec
and
lock
dec
add
mov
push
repnz
pusha
je
rolb
pop
add
data16
je
cmp
je
ljmp
aad
adc
mov
in
dec
mov
mov
add
dec
adc
push
or
sti
and
inc
in
inc
shll
popa
hlt
das
mov
in
dec
dec
push
repnz
pop
je
add
outsb
xchg
stos
je
cmp
cmpb
sbb
cli
fsubl
data16
xchg
or
jecxz
into
fsubs
cld
lods
inc
cmpsl
push
insl
mov
add
andb
mov
leave
inc
push
jo
push
add
add
outsb
jmp
cmp
pop
adc
adc
outsl
cmp
imulb
mov
push
data16
push
pop
mov
mov
inc
mov
pushf
cld
inc
adc
and
jo
mov
or
cld
insb
fs
cmp
std
out
jl
pop
nop
add
cmc
adc
nop
lret
and
pop
and
mov
mov
adc
andl
push
arpl
fucom
adc
or
fcoms
dec
or
je
adc
mov
scas
sbb
jge
push
xchg
out
push
pusha
add
and
add
and
adc
pushf
sbb
jmp
mov
sub
sub
pop
add
lea
xchg
movsb
loope
xchg
aaa
or
js
rcll
jle
adc
sub
jae
andl
or
movsb
cmp
xor
and
and
cld
and
push
jg
pop
cmp
xchg
jg
xor
add
xor
sbb
ret
lret
nop
add
fs
and
insl
push
dec
andl
ss
les
enter
sub
add
lahf
out
cmp
jb
in
push
daa
jae
sti
je
neg
and
push
push
adc
dec
push
xchg
push
mov
mov
dec
negb
dec
clc
call
stos
inc
pop
add
jmp
sbbl
js
fsts
dec
or
adc
or
mov
repz
ret
movsl
test
pop
dec
adc
sub
push
addb
sbb
cmp
aas
fsubl
cltd
push
sbb
mov
sub
jb
psubsb
adc
push
xchg
cmp
fistps
jl
and
cld
or
sbb
cmpsl
lea
xchg
sbb
fmull
loopne
cmp
adc
fnstenv
and
xor
fwait
dec
je
cltd
xor
addr16
into
das
xor
mov
mov
jp
in
pop
lcall
in
mov
in
and
jge
rcrl
testb
and
or
or
dec
movb
ficompl
pusha
mov
rol
xor
adcl
sub
mov
fld
incl
jne
cmc
push
mov
pop
xor
loope
imul
cmc
cmp
push
sbb
popf
add
sub
xchg
mov
mov
sbb
add
adc
add
mov
int3
sbb
jne
xchg
push
rolb
pop
jge
pop
adc
or
inc
xlat
aaa
add
sbb
loopne
dec
and
loop
scas
pop
pusha
sub
sbbb
pop
clc
inc
mov
rcrb
scas
outsl
cmp
mov
out
or
add
mov
scas
shl
pop
push
lock
lock
dec
xlat
sbb
rcl
or
lret
cmp
push
mov
rolb
adcb
mov
push
xchg
and
add
loop
push
leave
arpl
push
cmp
call
add
shlb
mov
xlat
lahf
adc
jl
scas
gs
lcall
push
shlb
push
mov
add
cmp
jne
sbb
ja
mov
clc
or
add
push
scas
mov
add
cmpsl
dec
jmp
sbb
test
or
push
push
mov
arpl
xchg
lds
push
inc
scas
orb
or
cmp
xor
sub
call
jg
js
dec
sub
push
and
or
jmp
outsb
je
xchg
repz
lcall
mov
and
jge
loope
out
enter
je
lods
test
out
aam
adc
xchg
adc
xchg
cmp
les
mov
pop
push
shrb
ss
xor
pop
jo
cmpsl
add
or
jbe
clc
sub
jge
adc
jo
or
sub
pop
mov
enter
das
fcoml
mov
dec
es
sti
call
loop
mov
lds
and
cmpsl
cmc
and
imul
ja
jg
mov
movsb
xorb
adc
jle
or
adc
sub
orl
sbb
jp
add
lock
ret
xor
or
es
rorl
repz
push
fstpl
add
mov
cmp
jbe
shll
nop
pop
xor
leave
push
xor
nop
pop
or
and
add
xchg
fnstenv
lods
cmpb
sbb
add
mov
add
adc
mov
add
dec
dec
dec
pop
lods
sbb
sar
adc
popa
leave
xchg
nop
mov
nop
mov
orb
push
or
imul
sbb
push
dec
stc
add
test
push
call
insl
dec
sub
jo
add
mov
inc
lahf
mov
push
cmp
push
pop
sub
and
or
gs
jp
test
mov
shlb
lock
sub
sarb
shlb
repnz
pusha
test
loop
inc
jne
fildl
fs
mov
push
aad
repz
lock
test
push
shl
inc
adc
inc
mov
aas
ja
push
cld
adc
mov
push
adc
add
mov
adc
add
out
lock
fwait
mov
jne
andl
nop
inc
and
test
mov
sbb
jnp
shr
imul
sub
jnp
or
lahf
cld
je
nop
out
xor
jbe
jb
pop
xor
sbb
mov
insb
sbb
sbb
or
and
xchg
repnz
jle
cld
push
push
fsubrl
fwait
sub
sbb
icebp
push
sub
shlb
iret
loopne
push
pop
ds
push
cmp
lea
scas
push
push
loopne
dec
add
mov
in
mov
rol
push
repnz
popf
stos
add
add
mov
mov
ficoms
icebp
jo
and
dec
dec
adc
leave
mov
rcl
loop
cmp
xchg
and
push
sbb
mov
shll
negl
mov
in
jmp
sbb
push
add
add
or
inc
jecxz
aam
leave
sbb
xor
jb
mov
arpl
stos
xor
imul
push
dec
stos
rcrb
imul
push
in
inc
rorb
and
inc
testl
inc
shlb
dec
add
and
cmpl
rcrb
sub
xchg
mov
sbb
sbb
call
fcoml
lods
test
stc
dec
inc
arpl
stc
jl
out
and
mov
and
dec
add
push
lds
daa
or
push
adc
scas
pusha
push
imul
push
ret
cmp
sub
aaa
test
add
mov
jl
fwait
dec
insb
add
push
pop
ret
lret
ret
lret
push
test
aaa
mov
or
jns
sbb
add
test
or
add
cmpb
push
mov
xor
sahf
ret
ss
pushl
and
add
jp
xchg
xor
out
aad
cmp
test
push
hlt
test
cmp
jecxz
into
les
icebp
push
cmp
jp
roll
dec
inc
or
lea
cld
push
imul
mov
or
or
lock
sbb
or
sbb
or
pop
js
mov
adc
pop
sbb
hlt
adc
int3
sbb
sub
or
imul
mov
or
xchg
aam
adc
ljmp
stos
rcrl
stos
jl
push
clc
testb
ffree
xor
jge
xchg
pop
fists
call
clc
notl
test
pop
jbe
insb
in
inc
pop
add
mov
inc
and
lea
test
mov
push
ljmp
imul
je
inc
or
xchg
icebp
jbe
adc
cmp
das
rcll
leave
nop
sbb
cmp
adc
pusha
lds
or
jno
shlb
sbbl
popa
inc
xor
lock
cmpb
xchg
aaa
das
cltd
push
add
inc
push
inc
inc
sti
jl
test
jg
cmp
jg
sahf
pop
mov
or
ret
mov
push
cltd
pop
daa
sbb
ret
mov
aas
clc
fistps
mov
push
add
dec
add
jmp
add
rcl
aaa
inc
sub
push
imul
dec
popa
jbe
out
adc
push
es
xor
and
add
icebp
mov
xchg
insl
addr16
mov
movsb
jge
sbb
shlb
push
fdiv
or
jns
pop
sub
xor
xor
cmp
cmpsb
mov
sub
inc
dec
fs
mov
push
data16
and
ret
push
sti
jecxz
push
mov
or
movl
pop
jg
or
inc
add
cmpl
ror
sub
cltd
mov
mov
js
mov
decl
jno
jne
pop
shll
add
bound
dec
outsl
adc
movsb
dec
xor
pushf
push
mov
in
pop
xchg
andb
popf
push
cmp
scas
insl
cltd
and
push
mov
and
cwtl
enter
sarl
push
pop
jp
enter
jmp
cmp
push
fcmovb
cmpb
ss
sbb
lock
test
popf
andb
cmp
and
or
push
mov
push
in
jo
das
push
lahf
add
call
mov
outsb
out
xchg
pushf
mov
mov
inc
and
lods
pop
test
and
xchg
mov
xchg
cmc
or
cmp
push
mov
push
mov
xchg
add
loope
ffree
lods
inc
pusha
mov
out
xor
inc
mov
dec
sub
and
mov
xchg
out
test
jge
je
pop
cmp
inc
jl
popf
sub
out
pop
sub
push
cmp
or
aaa
mov
clc
cmpl
rep
add
xor
popf
mov
pop
or
dec
and
add
insl
jmp
sub
jae
sbb
inc
pushf
pop
js
push
jae
sbb
fwait
sub
mov
adc
pop
push
daa
pop
or
mov
push
mov
mov
push
push
mov
push
imul
mov
pop
xchg
adc
inc
xor
push
adc
xorl
adc
pop
popa
or
addb
xor
mov
mov
imulb
cmpb
or
data16
xchg
lahf
push
xor
push
test
sub
test
scas
jno
xchg
adc
xchg
xchg
mov
dec
rolb
push
iret
test
adc
xor
das
mov
int3
jae
sbb
shlb
lock
mov
push
push
push
jne
inc
popa
mov
pop
rcrb
and
and
sbb
jbe
jle
lcall
hlt
lock
xchg
cltd
test
inc
mov
push
or
sbb
dec
push
push
shrl
push
test
loope
mov
xor
pop
cs
adc
ljmp
add
outsl
push
fmuls
in
gs
xlat
mov
lds
push
lret
mov
cmp
out
mov
add
icebp
addl
roll
inc
push
add
cmp
xor
cmp
jne
lcall
adc
lea
push
inc
scas
push
loope
fadds
adc
inc
and
loopne
rcl
cmp
dec
xchg
lret
adc
pop
sbb
test
adc
lods
add
dec
nop
addr16
xlat
cmpsl
sub
add
add
clc
adc
jbe
sbb
fisubrs
call
xchg
add
psrad
sbbb
mov
mov
mov
add
dec
rorl
and
out
test
rclb
test
pusha
or
push
sldt
lahf
or
xor
dec
adc
mov
inc
cmp
xorb
test
xor
add
or
push
push
ljmp
sbb
rol
add
popf
addb
or
add
and
cmp
cmpsb
add
test
int
jo
and
sub
or
mov
add
xchg
sbb
push
movb
xlat
jb
xchg
add
push
or
imul
ret
sub
rol
insl
pop
add
sahf
ja
test
mov
xor
adc
cmp
cmp
out
fs
xchg
push
andl
cmp
mov
and
jg
cli
clc
pusha
inc
popf
cs
ret
adc
push
add
xor
jmp
cmp
int
mov
aad
and
das
lret
push
ret
ljmpw
mov
push
push
mov
sub
or
add
jl
jno
xor
push
mov
inc
or
jle
fistpl
or
jbe
mov
sbb
iret
jne
or
es
add
icebp
push
xchg
cmp
jge
add
enter
or
xchg
xchg
adc
mov
aaa
test
inc
jmp
stos
push
mov
jo
loope
stc
jne
sub
outsb
sar
ror
les
pop
jp
cmp
shll
adc
mov
xor
lret
pusha
iret
jmp
xchg
jmp
dec
hlt
jae
adcb
mov
jg
sub
ret
movsb
stos
in
adc
icebp
lret
add
jnp
pop
adc
popa
loop
shlb
inc
inc
clc
add
push
inc
mov
les
inc
sub
jb
daa
jmp
adc
and
data16
pop
add
jecxz
mov
std
nop
mov
sub
push
sub
sbb
xorb
loopne
jae
add
adc
add
dec
sti
xchg
insl
push
xorb
mov
pop
enter
pop
enter
adc
cmp
push
and
mov
xchg
add
and
sbb
sbb
push
ds
js
mov
adc
daa
or
cmp
and
cmp
cmp
add
dec
and
ftst
nop
inc
or
mov
outsb
imul
adc
push
jb
push
or
or
insb
bound
xchg
insl
lahf
sbb
cmp
jl
and
imul
jb
insb
cmp
push
adc
popa
movsl
xchg
sbb
pop
jecxz
cld
or
pop
arpl
pusha
loop
mov
mov
cmpsl
jne
outsl
inc
jbe
inc
xor
dec
pushf
je
and
cmp
or
outsb
dec
pop
sub
jbe
pop
rclb
shlb
lret
mov
gs
sbb
leave
nop
js
inc
adc
roll
loopne
jmp
inc
adc
cmp
push
inc
aas
and
lahf
sbbb
and
jb
sbb
and
and
sbb
sbb
cmp
jg
jb
sbb
sub
sbb
sbbb
movsb
sbbb
sub
xchg
mov
cs
or
xorb
cmpsb
mov
in
pop
cmp
inc
push
std
insb
leave
push
jne
cmp
jmp
mov
mov
shrb
lea
and
leave
in
into
cmp
cld
or
std
push
jae
mov
adc
pop
add
sti
fisubrs
or
sbb
jbe
shl
adc
sbb
sbb
xchg
scas
test
and
push
push
loope
sub
jne
hlt
nop
xor
adc
adc
mov
jne
arpl
cmp
mov
popa
je
push
fsubr
mov
subl
adc
outsb
cmp
dec
sub
arpl
mov
xchg
mov
sbb
lds
dec
fldl
or
mov
in
loop
fimuls
roll
enter
ret
mov
shr
aam
js
mov
push
mov
test
sbb
jo
pop
and
icebp
jae
stos
pop
hlt
mov
jb
mov
add
fs
ja
push
mov
or
pop
push
cmp
subl
movb
mov
loopne
cmp
mov
pop
add
inc
or
insb
add
mov
adcl
pop
lock
mov
push
addl
xchg
ljmp
inc
call
push
push
pusha
pop
leave
loopne
adc
inc
jbe
cmp
sbb
fs
pushf
sub
movsl
iret
push
out
jecxz
stc
lock
adc
add
and
out
pushf
xchg
add
jno
loope
es
out
pop
or
adc
insl
push
clc
and
in
sbb
cmp
push
or
pop
or
loopne
lcall
es
adc
and
fisttpl
add
je
xchg
and
jmp
cmp
lret
jl
push
cmp
popf
jmp
inc
push
je
sub
mov
xor
adc
out
lret
push
lret
sar
mov
mov
or
js
test
push
pop
pop
cmp
pop
aas
pop
sbb
add
sbb
xchg
je
inc
lahf
sub
adc
add
jne
test
mov
add
loop
movl
mov
mov
add
fmul
sub
test
mov
or
mov
and
pop
lock
movsb
pusha
or
add
mov
cmp
mov
push
pop
inc
jp
inc
xorl
xor
sub
inc
push
add
sub
pop
lock
rolb
jns,pt
jecxz
cld
nop
aam
arpl
fwait
popf
cmp
push
in
cmc
call
jg
dec
and
inc
or
loopne
outsb
adc
lea
push
mov
cmp
mov
push
rcll
rclb
jae
sbb
shlb
les
aam
mov
jmp
jl
jo
out
jnp
dec
push
xor
and
imul
in
sarb
je
cmc
adc
fadds
xchg
xorb
stc
stos
xlat
aad
fistl
inc
and
js
mov
test
pusha
adc
push
push
dec
sbb
ljmp
inc
adc
lcall
push
xorl
filds
mov
adc
mov
dec
adc
jbe
jmp
lahf
mov
mov
test
sub
dec
orb
inc
mov
insb
ja
sbb
and
pop
test
push
adcb
mov
push
add
jo
mov
mov
popaw
inc
cmpsl
loopne
ret
int
aaa
add
adc
sub
movb
pop
or
dec
loope
scas
insl
mov
std
adcl
push
aaa
rclb
cmp
loopne
lahf
pop
add
sub
sub
pusha
idiv
jge
mov
pop
push
push
or
in
fcoms
jmp
push
cmp
stos
adc
mov
inc
sbb
dec
adc
popa
sub
je
jle
call
push
push
nop
mov
aas
push
ss
push
es
fwait
add
call
mov
jb
icebp
lret
inc
scas
clc
or
and
shl
outsb
adcb
shll
nop
out
enter
lods
add
mov
stc
jae
add
dec
mov
ret
pushf
and
decl
xor
and
xchg
xchg
mov
incl
or
lock
pop
xor
pushf
push
in
mov
ret
or
and
pop
xor
push
push
sbb
loopne
shll
pushf
and
xor
add
pop
ss
mov
jmp
sarb
cmp
xor
rcrb
and
push
add
imul
push
insl
push
push
lea
test
jo
push
mov
imul
adc
mov
sbb
mov
add
popa
int3
sub
add
jnp
and
rolb
or
and
or
icebp
dec
pop
xchg
cmp
or
test
cmp
and
bound
loope
xchg
inc
pop
xchg
aam
sbb
xor
pusha
push
clc
jo
daa
push
lret
ret
out
loope
movsl
cmpsb
sbb
add
mov
lods
mov
sbb
inc
sbb
jno
push
stos
mov
ljmp
push
dec
in
xor
mov
mov
mov
call
dec
loopne
aam
cmpsl
xor
jbe
push
sub
inc
pop
push
mov
push
outsl
mov
and
cli
mov
push
add
push
push
pop
mov
xor
inc
pop
xchg
xorl
sbb
add
call
les
xchg
cmpl
ror
xchg
adc
and
shrb
xor
push
pusha
xor
xchg
lahf
and
inc
dec
pop
jne
inc
scas
leave
adc
add
push
fbld
lahf
and
push
inc
or
push
push
mov
mov
and
nop
subb
mov
mov
jmp
dec
mov
pushf
ss
in
repz
shlb
bound
adc
add
adc
pop
sbb
pushf
test
xor
and
addr16
pop
repz
test
and
push
adc
push
rorl
pushl
cmc
or
pop
mov
and
inc
test
dec
clc
add
js
xchg
push
pop
xor
pop
or
adc
sbb
movsb
ljmp
xchg
ss
int
or
rclb
push
push
and
hlt
inc
mov
pop
shll
push
cltd
inc
add
mov
and
add
jno
in
pop
dec
mov
add
ss
add
adc
stc
outsb
arpl
cmpsb
jecxz
sbb
xlat
pop
cmp
orb
mov
push
mov
cmp
pop
ss
mov
test
call
add
js
push
xor
enter
sub
jmp
in
pop
adc
mov
and
sub
mov
scas
incb
pop
xor
xor
ljmp
push
push
sub
push
loope
xor
or
jno
movsb
stos
loope
dec
pop
mov
testb
in
sbbb
cmp
js
push
or
dec
in
pop
or
call
inc
jns
bound
popf
mov
dec
lret
jmp
adc
imull
cmpl
test
adc
push
icebp
nop
push
push
rolb
popa
cmp
nop
push
push
aad
and
xor
movsb
hlt
loopne
pusha
aam
or
or
sbb
add
add
mov
enter
or
rolb
jo
mov
and
int
popf
pop
insb
inc
imul
movaps
push
mov
aad
das
add
pop
inc
clc
mov
adc
mov
and
xchg
inc
pushf
sbbl
jo
rcrb
push
push
pop
lea
jmp
mov
nop
xchg
cwtl
pushf
add
adc
lahf
sbb
pusha
cld
sbb
lea
sub
push
stos
sub
test
pop
mov
fmul
rolb
mov
or
mov
pop
inc
mov
mov
into
sbbb
movsb
inc
fimuls
mov
movsb
rcrb
push
mov
cmp
int
jmp
movsb
lods
jmp
or
sbb
cmp
in
and
mov
lea
mov
cmc
cmp
dec
xorb
jle
clc
jnp
sbb
mov
push
loopne
cs
dec
or
fmulp
push
mov
mov
push
mov
sbb
push
push
lret
mov
mov
ljmp
scas
outsl
jecxz
popa
inc
push
pop
mov
cli
mov
in
mov
mov
dec
add
nop
xchg
dec
sub
mov
xor
or
cmp
mov
sub
mov
xchg
mov
sti
pop
inc
sbb
addr16
bsr
adc
shl
mov
fdivrl
lock
inc
push
pop
add
mov
mov
cmp
ss
adc
loopne
or
and
mov
stos
cmp
sub
lods
sub
addl
push
adc
rolb
adc
xor
mov
je
push
stos
add
fcmovnb
int
mov
fwait
dec
fadd
adcl
push
push
jns
outsl
xlat
test
mov
push
push
repz
js
ds
mov
sbb
ds
je
shll
push
lock
push
movsl
ds
adc
jmp
sbb
hlt
and
jle
mov
in
pop
lock
or
icebp
push
sbb
xlat
lods
dec
jne
sub
xlat
adc
aam
mov
or
jo
or
clc
repnz
adc
mov
fnstenv
insb
out
loope
jl
ljmp
add
xchg
jne
cmp
pushf
daa
shlb
mov
divb
mov
fcom
cmp
fabs
or
mov
dec
and
hlt
loope
lahf
cmp
mov
push
lret
push
inc
je
mov
outsb
cwtl
cmp
lock
stos
dec
cmp
cmpl
enter
test
fs
lock
sbb
sbb
pop
pushf
imul
xchg
or
repz
add
xor
xchg
push
add
nop
sub
lret
sub
fwait
pop
push
mov
push
imul
pop
push
mov
std
push
sub
dec
push
adc
inc
inc
or
lock
fisttpll
test
stos
push
cwtl
pop
cmp
xor
push
pop
dec
in
push
hlt
add
sub
lock
dec
cmpsb
jo
jae
inc
insl
lea
cmp
cmpb
adc
mov
add
sbb
or
or
out
cmpl
sbb
test
cli
sbb
push
sbb
jbe
push
dec
jecxz
sbb
sti
lea
add
sbb
imul
aam
test
or
mov
dec
add
xor
mov
sbb
mov
jnp
push
ret
xlat
cmpsb
xor
lock
pop
pop
sub
leave
cmp
push
lahf
call
dec
and
das
mov
jae
fiaddl
adc
fiadds
and
fidivrl
jno
jo
sub
sub
push
in
inc
cmp
leave
imul
test
inc
fdiv
cmpb
fsubrs
ret
popa
push
outsb
add
lods
sti
cmp
push
adcb
push
sub
shrb
fsubs
fdivl
push
lods
adc
push
pop
sub
mov
loopne
add
les
loope
lahf
filds
or
pusha
add
inc
clc
pop
lock
rolb
push
mov
and
adc
or
je
mov
or
mov
adc
mov
add
scas
popf
mov
mov
push
test
cmp
xchg
ret
or
inc
push
or
cmp
jb
popf
loopne
sbb
int3
lret
cmpl
ss
repnz
dec
mov
push
loop
and
ja
jns
lock
adc
mov
push
mov
mov
mov
adc
mov
or
rcll
pop
inc
cmp
movsb
test
popf
dec
pop
jp
cmpsl
ss
mov
lods
pusha
add
or
sub
lock
cmp
sbb
incb
mov
sahf
pop
sbb
fwait
pop
int3
xchg
xchg
cmpsb
or
push
xchg
xchg
jns
cmpsl
cmp
pop
xchg
pop
push
or
hlt
mov
xorb
push
enter
das
xor
cmp
pop
std
pusha
fdivl
outsb
jp
je
add
adc
je
data16
test
xchg
incb
mov
push
sarl
ret
jg
add
adc
lret
jbe
fnstsw
add
push
jge
push
jo
repz
jle
xchg
push
cmp
sbb
jp
outsb
cmp
pop
ja
mov
sbb
xchg
sbb
cmp
in
sub
je
push
cmpsb
and
sahf
rorb
mov
mov
or
sbb
sbb
jns
nop
sub
data16
jmp
inc
jo
pop
pop
jns
add
addr16
and
add
mov
lock
fcmove
add
addr16
mov
and
movsl
push
or
jno
mov
aam
sub
scas
mov
or
sti
jl
lods
lret
jmp
pop
cmpsb
push
push
lods
push
leave
fs
add
xchg
push
mov
mov
mov
fwait
jb
rcr
test
mov
jle
mov
mov
or
sarb
and
sub
sbb
pop
ret
mov
push
rcrb
daa
mov
mov
or
add
test
incb
push
sbb
insb
testl
adc
pusha
push
test
scas
push
fisubrs
mov
mov
and
jl
pop
ret
jge
add
loopne
adc
add
inc
movsl
xor
stos
add
lret
in
jns
pop
dec
and
push
add
scas
push
fcomp
adc
mov
in
and
test
dec
xchg
testb
jbe
dec
mov
and
adc
and
dec
mov
add
jns
sbb
or
adc
push
mov
xchg
xchg
lds
adc
mov
push
testl
jo
and
xchg
push
into
je
pusha
in
scas
xchg
out
rcrl
dec
sub
mov
mov
nop
cltd
movd
test
push
push
test
lods
lea
test
addb
addr16
pop
fnstcw
jle
inc
inc
lcall
and
pop
add
mov
mov
and
adc
xor
cmc
flds
and
mov
pusha
popa
mov
or
and
test
js
rcrb
lea
push
xchg
insb
mov
mov
jg
and
dec
adc
push
adc
add
jo
fwait
cmp
repnz
mov
add
xor
pop
xchg
stos
nop
imul
add
push
cmpsl
fldt
inc
aas
mov
test
loopne
dec
push
popa
jne
mov
cmp
pop
pop
jl
push
jno
gs
hlt
push
into
dec
cmc
or
popa
imul
xchg
outsb
and
xchg
xlat
mov
imul
je
mov
insb
call
mov
ss
jno
inc
inc
adc
je
scas
mov
cmp
inc
testb
xchg
and
push
fwait
shrb
rorl
xor
pop
dec
add
mov
jge
and
inc
push
stos
push
add
cmp
pop
mov
inc
out
xor
add
cmp
daa
add
xchg
mov
out
push
xor
push
call
inc
in
cmp
imul
pop
adc
add
inc
fldt
xor
jle
add
jae
cmc
mov
adc
pop
inc
or
push
pusha
and
cmp
xor
mov
testl
fdivrs
lea
lds
add
cmp
dec
xor
loop
add
shr
add
ficoms
sbb
adc
and
loope
rorb
pushl
pop
jl
ret
shr
cmp
jbe
add
jmp
add
pushf
inc
dec
or
test
ret
and
dec
loop
inc
dec
loopne
jg
loopne
jl
mov
addb
sub
sub
adc
mov
mov
popf
lcall
dec
sub
push
xor
mov
enter
dec
or
or
call
sarb
mov
add
xchg
test
and
rorl
das
fsts
mov
gs
rcll
or
or
mov
loop
and
aaa
cmpsb
mov
mov
test
fstl
cltd
movsl
mov
push
mov
jl
dec
fcomps
mov
loopne
fcomps
xorl
popf
addb
add
dec
inc
adc
mov
adcl
jo
fldenv
fdiv
xor
daa
push
or
pop
aaa
xor
jb
push
push
push
xor
push
shll
out
mov
aad
nop
xchg
loope
arpl
or
adc
outsb
cmp
jg
and
stos
jl
cmp
je
pop
negl
xor
mov
or
push
shrb
rclb
das
sbb
scas
cmpb
mov
and
sbb
push
add
adc
xchg
mov
cmp
insb
ret
pop
xchg
and
or
jno
push
imul
mov
scas
dec
xchg
pop
push
call
mov
bound
sahf
inc
les
repnz
in
orb
pop
mov
popl
ds
add
mov
repz
push
out
sub
lea
imull
adc
cwtl
pop
mov
mov
and
push
push
add
fsts
fnsave
push
or
shl
loope
cltd
jmp
insl
add
add
adc
adc
or
leave
or
add
loope
inc
mov
sarb
cmp
int3
xchg
xor
insb
cs
mov
pusha
je
pushf
push
push
sub
int3
xchg
add
add
sbbl
dec
enter
lret
out
mov
sbb
in
lds
adc
jmp
shlb
mov
aam
mov
lods
xchg
cmpsl
enter
adc
dec
sub
xor
outsl
test
mov
push
repz
push
jl
dec
jae
fcoms
mov
fcmovnb
inc
jnp
in
mov
test
in
inc
imul
lods
xchg
mov
push
fcomps
in
test
pop
push
push
inc
mov
adc
ss
repnz
adc
mov
push
lahf
fistpll
sbb
popa
popa
shlb
mov
add
inc
fsubrs
aam
adc
sbb
por
aaa
pop
and
jmp
movsb
shll
fldl
add
add
ja
lods
pop
sub
jo
xchg
movups
pop
mov
adc
push
test
sub
and
ret
jbe
push
push
xor
sub
mov
es
push
pop
inc
push
adcb
or
cmp
pop
insb
adc
sbb
pushaw
cwtl
es
dec
pop
outsl
cmp
fcmovnb
sub
incb
adc
add
mov
cmp
lahf
jb
je
push
addr16
sub
inc
push
dec
das
mov
or
adc
int3
inc
ret
pop
inc
or
sbb
movsl
fabs
or
push
mov
mov
in
or
add
xchg
dec
xor
aaa
and
jns
pop
xchg
jecxz
scas
or
mov
loopne
cmc
andl
lea
stos
mov
mov
push
sti
push
add
or
jg
ljmp
int
push
mov
cmp
jne,pn
inc
and
ljmp
sub
ret
lret
push
add
and
jmp
jge
and
rolb
and
orb
xchg
sub
mov
pushf
xor
cmp
mov
sarl
rcrl
testl
mov
dec
roll
mov
mov
outsb
or
test
mov
inc
and
fistl
inc
xor
mov
add
xchg
leave
cmp
insl
popf
mov
add
insl
cli
push
insb
and
jp
sbb
and
adc
mov
icebp
mov
pop
sbb
inc
mov
lret
neg
inc
or
xchg
or
jnp
arpl
pop
sbb
data16
lock
push
cmp
in
or
stos
jo
dec
push
mov
sub
imul
pop
jns
inc
jecxz
cmp
fwait
mov
pop
divb
pop
cmp
sbb
add
mov
scas
sti
testl
call
aam
push
cmpb
xor
pop
loope
rclb
push
cltd
xor
les
sbb
sub
mov
into
pop
loop
pop
jno
mov
or
iret
cmp
cli
pop
push
add
add
pushf
shlb
pop
je
inc
pop
loopne
fmull
add
mov
add
or
cmpps
ret
fstl
mov
les
addr16
pop
pop
or
xchg
jo
mov
pop
shrl
mov
mov
popa
jl
jbe
jl
or
test
sahf
xchg
pop
sahf
ret
rep
mov
dec
pop
mov
sub
xchg
adc
lods
addr16
inc
les
call
sbb
dec
sbbl
rolb
push
add
loop
push
xchg
and
jl
ret
jle
mulps
adc
aaa
loopne
movsb
push
call
insb
cli
dec
xchg
jno
jle
push
pop
xchg
mov
cmpsl
push
cmpsl
cmp
dec
jbe
push
cmp
mov
push
mov
mov
jno
ret
addr16
inc
pop
cmp
stos
cmp
out
xor
pop
pusha
pusha
loopne
leave
lret
and
add
xor
inc
jb
jmp
push
bound
sbb
imul
mov
arpl
imul
inc
adc
inc
xor
imul
mov
cltd
repnz
pop
adc
add
dec
and
cltd
jno
hlt
xor
pushf
les
mov
rcrl
mov
insl
mov
or
inc
imul
dec
push
or
and
inc
inc
cmp
addb
fs
stos
icebp
test
scas
add
movsb
adc
push
add
lods
adc
pop
pop
mov
cmp
or
mov
cwtl
fwait
mov
test
mov
add
test
dec
lahf
nop
xor
rcl
insb
xlat
add
nop
nop
sub
lods
mov
les
or
pop
pop
pop
push
shlb
int3
push
shrb
jne
fcompl
add
add
sub
push
je
pushf
and
mov
subb
dec
xorb
insb
xor
pop
roll
testb
loop
rorb
mov
push
push
xor
test
mov
push
add
lods
adc
pop
mov
mov
lods
inc
pushf
sub
sub
test
push
mov
xchg
jl
push
lcall
in
andl
xchg
dec
enter
test
lds
rcll
icebp
popa
fists
jmp
add
jmp
sub
or
call
sbb
fwait
xor
adc
adc
leave
dec
adc
push
xor
and
mov
lahf
xor
and
jae
sbb
or
jge
jns
and
lods
cli
mov
cmp
jne
push
mov
aad
lock
lcall
sub
mov
xlat
arpl
jmp
push
adc
out
xor
outsl
into
sub
mov
stc
pusha
rolb
fs
sbb
imul
mov
jmp
xor
inc
sub
movsl
addb
push
mov
inc
in
lock
adcl
outsl
and
sarl
aaa
cmp
pop
test
bound
cs
mov
rcrl
mov
add
add
ret
cs
mov
movsl
lret
mov
out
xchg
push
sbb
or
xchg
les
mov
push
pop
lock
inc
shlb
cmpsb
ljmp
mov
adcl
loopne
xchg
mov
loopne
pusha
aaa
sub
js
xlat
daa
pop
aam
lock
test
imul
xchg
pop
gs
in
mov
push
popa
mov
mov
mov
sbb
fsubrl
push
test
add
or
push
popa
or
rclb
cltd
jge
dec
pop
icebp
mov
or
movsb
je
mov
push
loopne
jo
in
pop
shlb
xchg
sbbb
or
ljmp
inc
jno
sub
pop
and
mov
daa
jno
and
aas
sbb
aam
movsb
rorb
dec
push
loop
insl
mov
divw
or
mov
sub
daa
and
xchg
xlat
pop
jns
inc
shll
mov
push
add
push
sub
stos
or
outsb
adc
inc
cmpsl
inc
sub
imul
add
jmp
pop
inc
mov
dec
sub
jno
mov
or
or
push
jle
cli
je
cltd
pop
lret
data16
or
mov
mov
in
inc
add
jns
sub
les
add
addl
dec
fcoml
pusha
adc
cmpsb
pop
cmp
out
fimull
aam
jle
jl
add
aam
bound
jnp
ljmp
adc
cpuid
movsl
mov
fsubrp
inc
or
filds
mov
xchg
push
push
into
sub
adc
push
dec
cli
repz
scas
or
push
jmp
or
pop
push
std
sbb
scas
or
add
jne
mov
jmp
fstpl
ljmp
aam
and
dec
lds
popa
out
lock
rcrl
lds
ja
fnstsw
add
dec
movsl
push
push
movsl
decl
inc
hlt
fstl
dec
fcomp
fnstsw
call
add
inc
clc
pop
fsubr
ret
sti
pop
faddp
andl
sbb
les
push
mov
xchg
jo
cmpsb
push
mov
cs
pop
shl
rol
cmp
dec
xchg
fs
pop
subb
iret
inc
into
adc
and
pushf
add
add
icebp
les
jge
rolb
pop
out
bound
mov
es
or
popf
insl
lods
inc
inc
add
jmp
lret
leave
pop
inc
shl
xor
push
or
or
and
push
mov
add
xchg
dec
bndldx
fmuls
mov
arpl
xchg
out
stos
ss
pushl
dec
jp
stos
cmp
mov
jg
aaa
push
dec
sbb
ret
outsb
test
jl
sub
ja
scas
or
sub
mov
push
mov
pop
popa
or
mov
pop
fnstenv
cld
xor
dec
hlt
jge
and
ret
add
mov
jmp
roll
lock
pop
sub
and
mov
mov
clc
cmp
adc
rorb
pushf
push
dec
jns
dec
leave
xor
mov
test
loope
adc
pop
add
cmp
xor
movsb
aad
adc
sbb
pop
sarl
or
xchg
mov
shrl
into
inc
add
aas
or
add
push
in
jns
mov
mov
movsl
and
jp
outsb
mov
jmp
or
rol
add
bound
mov
jmp
lods
xor
mov
insl
adc
cmp
adc
ja
data16
dec
xchg
and
dec
mov
adc
or
ret
dec
jge
pop
inc
in
xor
jp
popa
imul
decl
inc
adc
mov
mov
mov
push
xchg
pop
int
hlt
add
mov
push
leave
mov
xor
sbb
repnz
pushf
mov
loope
or
add
mov
sub
jle
or
adc
pop
push
sub
xor
fs
mov
adc
lds
or
nop
clc
test
and
addl
or
leave
mov
dec
dec
push
and
dec
pop
stos
xor
xorb
insl
xor
inc
dec
xor
pop
fcoms
rcl
mov
adc
push
shl
sub
pop
aaa
mov
or
loopne
pop
and
shll
add
xchg
je
adc
inc
lea
les
fsubl
ret
sub
jge
dec
or
fldl
dec
sti
mov
mov
bound
pop
mov
xor
ret
push
sub
add
push
mov
dec
adc
cltd
and
insl
bound
arpl
add
dec
add
push
add
lods
cmpsl
lods
lea
sub
pop
xor
dec
dec
mov
in
pop
scas
push
lret
aas
mov
inc
pusha
pushf
rclb
adc
sbb
clc
and
pop
pop
jae
repz
jns
je
pop
and
lock
inc
lock
clc
mov
mov
jge
gs
push
in
push
hlt
lahf
mov
lock
jns
jae
xchg
cmp
loope
sbb
inc
xorb
orl
pushf
lret
add
addl
push
ficoml
sub
jge
pushw
add
ja
jmp
push
sbb
push
xor
outsl
js
add
push
clc
enter
fmul
jecxz
mov
pushf
lret
pop
mov
push
xchg
pop
push
mov
je
and
imul
inc
push
test
push
das
mov
cmp
jnp
sub
sbb
pop
mov
mov
jns
mov
imul
push
inc
xchg
push
pop
add
loopne
incl
rcr
sub
pop
outsl
subb
mov
pop
std
inc
sub
push
inc
mov
push
or
dec
adc
lods
add
inc
js
mov
dec
bound
sbb
mov
repz
pop
das
or
push
cmp
scas
in
xor
loopne
test
dec
pop
dec
push
andl
sbb
int3
dec
lods
add
in
cmp
sub
jne
or
mov
push
mov
rclb
or
loope
stos
js
adc
les
loopne
sbbl
cltd
test
dec
insb
ret
xchg
sti
movsl
rcll
popa
fdivr
cs
add
and
fidivl
adc
mov
push
cmpl
mov
cmpsb
mov
inc
add
mov
xor
iret
test
adc
leave
les
push
jge
mov
scas
push
jae
pop
fs
pop
inc
pop
sub
pop
xlat
xchg
mov
xor
mov
push
dec
adcl
push
cmpsb
mov
and
fs
dec
test
push
lret
test
je
loopne
push
hlt
and
adc
test
xor
inc
sub
mov
jns
or
cmp
ljmp
cmp
call
mov
sub
add
sahf
dec
xor
mov
stc
inc
push
mov
mov
fmuls
xor
mov
or
push
push
dec
or
xchg
xchg
inc
movsl
scas
xor
aas
leave
mov
cmp
push
in
cmp
orb
inc
push
shll
xchg
aas
xor
addb
jne
or
or
loop
mov
outsl
pop
fldenv
add
add
push
sbb
andl
xor
idivb
sbb
arpl
add
test
mov
mov
lret
repz
stc
xor
inc
andb
and
xchg
and
bound
loope
mov
rcrb
js
daa
imul
mov
in
roll
fcoms
pop
fsubr
aam
lods
imul
xor
dec
cmp
fistpl
adc
inc
pop
test
mov
pop
inc
sbb
in
js
in
fnstenv
pop
sbb
jbe
pop
sbb
xorb
xchg
sbb
andb
adc
cmp
jne
lcall
or
sub
test
enter
push
add
inc
add
add
xchg
sub
test
add
adc
xchg
std
rcr
cs
test
outsl
add
add
jp
cmp
sbbb
or
loopne
clc
jl
or
dec
xchg
cltd
xchg
sbb
sbb
subb
loopne
rolb
ret
leave
loopne
fs
xchg
cmovne
sbb
in
push
les
enter
or
or
testl
sti
sbb
aas
loope
sbb
lcall
inc
add
sbb
lahf
sarb
sahf
add
ds
or
mov
in
sahf
and
cmpsl
push
stc
inc
xor
data16
pop
xchg
push
cmpsl
mov
push
push
sub
stc
cmc
xchg
jb
jb
mov
cld
mov
cmp
adc
jmp
sub
push
jg
sub
jmp
or
or
jecxz
je
xor
call
mov
jmp
xor
movsl
push
push
add
push
hlt
jge
inc
lods
adc
mov
push
and
imul
or
cmc
stos
jne
call
loope
scas
xchg
xchg
mov
sbb
fxch
jle
popa
xchg
sub
or
push
and
fdivrl
sbb
jecxz
icebp
sub
shrl
lahf
roll
roll
scas
cvtps2pd
mov
add
jl
add
pusha
inc
and
sarl
das
or
mov
shrb
pop
in
scas
push
cmp
rol
pusha
or
rcr
and
cmp
int3
sub
or
sbb
sbb
sahf
cmp
clc
imul
adc
inc
and
jecxz,pn
stos
jmp
push
dec
sbb
mov
das
mov
xor
mov
inc
and
cli
inc
insb
mov
js
jo
sbb
call
push
push
ret
sbb
push
mov
xor
cwtl
dec
pop
cs
hlt
pop
inc
fcoms
xor
cmp
sub
inc
cli
push
jg
dec
adc
xchg
jne
inc
jno
add
mov
cltd
inc
sub
fld
adc
and
jno
adc
stc
dec
test
imul
dec
pop
lea
xchg
mov
adc
push
jl
inc
rolb
dec
shrb
pop
inc
jmp
pop
cmp
inc
inc
cmp
fbld
aam
mov
insb
loop
xchg
incb
mov
mov
fstpt
and
inc
sbb
xchg
jge
loop
fnstenv
in
fidivs
out
add
and
pop
inc
mov
dec
xor
loopne
pop
xchg
xor
lea
adc
pop
cmp
and
lret
inc
pop
add
outsb
sub
cmp
add
add
cmp
inc
inc
dec
repz
les
pop
pop
sub
and
push
outsl
out
lahf
dec
add
pop
sbb
jbe
add
andl
mov
xchg
fmul
lock
xchg
mov
mov
loopne
add
pusha
out
add
out
or
sbb
les
std
jbe
or
add
lods
mov
and
sarb
dec
or
and
leave
add
ss
cmpb
mov
sbb
adc
jns
js
orl
sbb
out
loop
jmp
cmp
push
jp
inc
adc
push
push
scas
xchg
xlat
xor
in
sbb
add
jge
jb
sbb
or
cmp
leave
xchg
lret
cmp
push
popa
dec
iret
into
sbb
scas
xchg
out
adc
push
nop
sub
xchg
inc
or
or
cmp
cmpsl
cwtl
js
loope
aad
add
push
fistps
sbb
and
dec
xor
jbe
mov
lret
loopne
xlat
jo
mov
inc
clc
inc
popf
test
inc
aaa
adc
sub
dec
pop
mov
push
jle
and
xor
sar
add
cmp
or
cmp
lahf
or
dec
adc
push
clc
push
push
flds
iret
jno
sbb
fcompl
sbb
push
push
inc
mov
adc
adc
inc
mov
shll
push
inc
mov
ja
adc
xor
jbe
pushf
xor
aaa
inc
mov
inc
add
sbb
test
push
dec
mov
xor
pop
lock
lea
xchg
xchg
or
and
lcall
sub
inc
dec
pop
js
and
pop
jl
subb
lret
into
xor
outsl
push
push
dec
fdivr
jo
jo
cmp
pop
push
jns
dec
sub
dec
push
cmpb
punpckhbw
jl
shrl
pop
enterw
xchg
sub
in
jnp
sbb
in
pop
je
push
mov
cmp
enter
gs
loopne
cmp
or
push
xor
xor
or
inc
mov
in
testb
xor
pop
jne
jns
dec
shl
pop
sbb
nop
notb
add
sbb
in
adc
jmp
int
stos
in
loope
mov
outsl
lock
jne
nop
fmuls
into
jl
inc
mov
sub
mov
push
jge
popa
lret
xor
dec
sub
shl
cs
mov
loopne
cmpsb
mov
je
popa
push
sub
push
cmp
mov
sbbl
inc
xor
or
stc
adc
or
sbb
insl
fisubrl
dec
dec
js
add
or
mov
addb
mov
xchg
xchg
cld
adc
je
lahf
inc
loopne
push
aas
add
stos
or
ret
and
sbb
add
dec
mov
dec
mov
push
movsl
dec
xor
dec
adc
rcll
das
inc
add
addr16
add
push
lods
dec
jle
push
mov
mov
jle
daa
mov
adc
push
iret
aas
aad
xchg
leave
out
fdivrp
mov
lahf
adc
pop
mov
test
pushf
out
dec
lret
leave
xor
das
cmpl
movl
iret
push
or
xor
insl
popa
out
xchg
sbb
or
arpl
lods
dec
pusha
shll
adc
inc
add
outsl
shl
enter
or
jbe
loopne
adc
or
aad
mov
push
xor
push
cmp
sub
test
cmp
aas
jne
aam
add
mov
mov
xchg
add
aam
faddl
imul
scas
or
adc
xor
ret
out
or
xor
shlb
aaa
xchg
nop
dec
orb
mov
xor
sbb
and
and
shll
fdiv
je
lock
and
aaa
push
lret
fcomp
dec
jmp
mov
jmp
subb
adc
push
or
push
jmp
cmp
fwait
aad
notl
divl
bound
push
jp
push
sub
or
mov
mov
inc
push
enter
imul
adc
adc
lcall
fsts
loopne
adc
add
ljmp
cmpsb
jl,pt
sub
jmp
mov
das
loop
adc
jmp
or
inc
add
or
loope
push
pusha
in
mov
movsl
xorb
cmp
shlb
nop
cmpsl
rorb
test
mov
cmp
cmpb
sahf
adc
iret
rcr
das
push
and
jmp
jne
aad
data16
jne
mov
mov
ret
jecxz
push
mov
movsl
call
add
xor
jp
mov
pop
dec
scas
in
or
pop
sub
dec
mov
shll
fwait
fs
and
mov
aad
adcb
cmpsl
dec
xor
rorb
or
xor
pop
xchg
lcall
dec
icebp
or
lods
int
or
xor
ss
sti
ss
or
pop
and
idiv
stos
loope
and
add
jp
push
and
and
lea
pop
and
aas
sbbb
sbb
mov
push
jo
insl
add
aas
push
inc
xchg
and
lods
mov
call
lcall
xchg
neg
cmp
adc
mov
xchg
dec
pop
xchg
xchg
add
sub
mov
roll
jp
mov
cmp
aaa
adc
pop
xlat
add
xlat
cmp
push
xchg
xor
stos
loopne
dec
in
inc
mov
mov
pop
or
andl
push
sub
pop
xchg
jmp
mov
push
adc
rorb
sarb
pop
lock
dec
lahf
xchg
mov
in
or
lock
insl
lret
push
jp
or
push
and
inc
popa
jmp
mov
xchg
outsb
inc
pop
lock
jmp
jge
dec
inc
or
add
popa
imul
inc
jle
call
jno
and
insl
sub
stos
insb
popa
into
adc
enter
mov
stc
or
shll
push
jns
jmp
and
adcb
dec
or
sbb
movsl
jg
cmpl
popf
shrb
mov
pop
and
push
imul
pop
add
jl
and
cmpsl
imul
add
leave
add
mov
lret
jb
cmpl
lahf
sub
xchg
repz
jo
and
xorl
ds
icebp
adc
dec
lret
fistps
jmp
inc
lahf
mov
or
xor
stos
add
jg
xchg
cmp
jl
push
push
push
cmp
add
pop
sbb
repnz
arpl
cmp
shll
xor
hlt
lea
cs
stos
cli
fists
push
inc
pop
pop
push
jns
sahf
shll
xchg
rol
dec
in
lahf
add
inc
dec
cltd
jo
mov
hlt
mov
lcall
dec
jnp
or
imul
shrb
or
pop
push
jnp
mov
add
inc
and
pop
push
cmpsl
pushf
push
pop
or
cmp
add
cmp
or
mov
jecxz
xchg
cmp
add
test
mov
inc
mov
mov
rcrl
test
jne
sarl
in
jno
je
jmp
add
nop
push
lret
fsts
mov
xchg
pushf
mov
push
lds
inc
push
pop
lock
aad
mov
and
test
adc
popf
idiv
push
xchg
aas
insl
push
adc
inc
mov
icebp
push
cli
lea
sbb
jp
push
jns
and
mov
or
xlat
cmc
push
inc
adc
mov
push
jle
add
push
mov
fidivl
pop
add
jge
or
mov
repz
or
push
outsl
sub
sbb
lea
jmp
push
pop
xor
add
in
or
add
and
xchg
dec
scas
add
add
add
push
push
pop
leave
and
push
fadds
pop
leave
jae
dec
push
adc
clc
sbb
jne
fsubs
mov
test
mov
cmp
dec
or
push
or
push
sbb
add
push
push
xor
pop
push
sahf
aam
push
and
jb
add
or
cmpsb
pusha
mov
xor
jno
or
in
or
or
sbb
inc
cmpsl
adcl
mov
jg
or
add
push
push
dec
push
cli
push
in
jo
xor
adc
in
jo
sbb
sbb
std
daa
mov
cmpsb
loopne
mov
orb
pop
scas
fs
scas
push
xchg
cmova
idiv
lock
test
shrl
jae
or
aad
add
rcrl
xchg
adc
mov
xchg
lahf
dec
add
inc
or
stos
or
mov
or
loopne
in
jo
test
mov
fs
inc
push
inc
and
arpl
adc
mov
mov
js
jmp
push
and
lods
and
jecxz
fwait
mov
addb
fsubs
dec
and
and
mov
push
sbb
sahf
lock
add
mov
dec
sbb
lods
aad
or
jnp
adc
inc
mov
scas
add
push
inc
push
jecxz
push
mov
bound
inc
dec
ss
xor
pop
sbb
push
add
lods
adc
xchg
movsb
cmp
and
imul
cmp
sbb
jns
dec
lock
and
mov
add
mov
jbe
xchg
in
push
pop
mov
mov
push
or
in
mov
or
pop
jmp
ds
fs
aam
xchg
pop
inc
jo
adc
lret
and
sbb
or
fsubrs
imul
movsl
xor
cmpsl
mov
sub
test
mov
adc
lret
and
ja
push
aaa
adc
xchg
fdivrs
mov
push
push
lret
or
aaa
fistpll
lds
adc
push
shr
dec
ret
out
xchg
out
mov
nop
dec
cld
jbe
fldenv
in
les
hlt
mov
rcrb
insl
mov
fsubs
xchg
push
or
xchg
push
cmp
movb
or
lock
insb
cmp
jecxz
mov
daa
or
push
pusha
mov
out
test
dec
scas
out
add
sbb
jmp
push
cmp
cmp
xor
mov
jno
js
ja
pop
xchg
dec
mov
or
das
or
testb
xor
or
faddl
cltd
or
adc
pop
push
rorl
and
mov
inc
rorl
sub
ret
fiaddl
jne
pop
mov
mov
ljmp
test
mov
aad
mov
push
inc
add
jmp
ja
or
mov
gs
imull
and
int
inc
jo
fstpt
push
popa
outsl
lea
and
push
mov
enter
test
test
inc
add
popa
add
stos
clc
cs
js
mov
adc
inc
ljmp
lods
cmpsb
mov
test
mov
gs
or
and
out
push
mov
mov
add
pop
movsl
in
in
daa
fdivs
push
sahf
mov
push
movzwl
xor
mov
addr16
add
pop
jns
pop
push
movl
fucomip
test
mov
mov
mov
imul
or
ljmp
shl
and
push
or
push
shl
push
in
jg
pop
mov
mov
or
mov
mov
dec
nop
lahf
dec
cmc
mov
dec
cmp
fs
mov
enter
xor
ss
iret
push
mov
lcall
inc
loopne
cmp
aam
ds
add
sbb
adc
data16
push
in
js
pusha
adc
js
sbb
das
sbb
mov
fwait
sarb
les
or
test
pop
repnz
in
aas
and
xchg
push
or
enter
enter
clc
push
add
clc
shlb
xchg
mov
enter
xor
xchg
cmp
sarl
inc
and
cs
add
in
dec
add
push
push
push
call
sbb
movsb
scas
clc
sbb
sarb
cmp
and
mov
mov
and
pop
out
jle
jmp
cmpb
and
adc
inc
or
cs
jg
push
xchg
movsb
mov
mov
dec
dec
ss
mov
mov
mov
and
sub
xchg
pop
mov
clc
adc
jbe
popf
mov
cld
je
ja
push
sbb
mov
inc
cmp
mov
pop
dec
inc
dec
rorl
hlt
mov
hlt
cmp
shlb
mov
es
lea
cli
fcompl
icebp
inc
fadds
hlt
inc
add
loope
xor
sub
rcr
fldenv
dec
mov
insl
dec
call
dec
push
cmp
pop
or
jl
cmp
loop
std
adc
push
mov
dec
je
clc
push
ret
dec
movsl
pop
lock
xchg
pop
cmp
jmp
cmp
push
add
hlt
push
or
xor
shll
push
rorb
and
jecxz
orb
inc
jle
jnp
xchg
jnp
or
js
cld
lods
mov
sbb
push
add
daa
daa
daa
add
daa
pop
or
or
jnp
or
jbe
jmp
or
fwait
fwait
fwait
fwait
por
jmp
adc
pop
adc
fwait
fwait
fwait
fwait
push
adc
dec
adc
dec
adc
fwait
fwait
fwait
fwait
aas
pop
jmp
sbb
xor
jmp
fwait
fwait
fwait
sub
jmp
sbb
and
dec
fwait
fwait
fwait
pop
pop
jmp
and
or
add
adc
test
adc
mov
mov
jne
push
loop
insl
ss
fiaddl
push
add
sahf
out
cwtl
mov
jns
out
enter
sahf
out
sahf
jmp
jns
jns
add
sahf
out
sahf
push
sbb
and
out
xor
ds
dec
call
out
pop
enter
add
and
jmp
or
or
push
movups
adc
adc
push
pop
sbb
sbb
sbb
push
pop
and
and
aad
push
push
push
pushf
movsl
push
nop
leave
cmp
add
bound
add
mov
mov
sub
mov
data16
sbbb
sub
cmp
cmp
pop
mov
les
sarb
call
add
out
push
mov
push
jge
push
add
sub
fdivl
sarl
cmp
jb
inc
xor
cmp
inc
mov
dec
or
xor
jns
adc
out
sbb
scas
adc
pusha
cs
lret
adc
inc
push
xlat
hlt
fdivrl
mov
jge
jbe
cmp
inc
pop
mov
cmpl
shl
xor
xor
inc
jmp
xchg
ss
sbb
add
clc
add
xchg
js
lock
loop
fldenv
mov
xor
mov
lds
test
je,pt
test
rclb
cmp
jae
rcr
sbb
repnz
mov
jge
push
das
mov
pop
mov
adc
sarb
add
mov
jecxz
repnz
or
add
js
and
or
in
xor
pop
lcall
sar
mov
sti
shr
xor
pushf
sarl
repz
xor
add
add
add
jne
jmp
mov
adc
iret
or
insl
push
or
and
not
and
xor
add
add
in
in
push
aam
sub
jge
fsubr
add
or
mov
ror
mov
idiv
jl
fisubl
aam
cli
and
and
mov
sbb
mov
push
rolb
leave
xor
fs
fisubl
repnz
sub
fdiv
mov
push
or
xlat
and
jle
sbbb
xor
lods
xor
imul
fsubr
int3
dec
in
rcl
call
pusha
mov
push
xor
and
push
cmp
dec
xor
ljmp
int
ret
push
xor
add
pop
dec
shll
xor
fdivl
imul
add
xor
in
aam
bound
in
jns
mov
adc
sbb
adc
add
adc
mov
pop
cmp
aaa
fadd
xor
call
rclb
call
nop
loopne
lahf
cmp
xchg
cmpsb
imul
cmp
dec
mov
pop
aaa
mov
or
cmp
jae
add
cmpsb
xor
pusha
pop
or
and
call
mov
imul
and
xor
add
inc
adc
addl
pop
inc
in
insb
fwait
jge
push
ret
push
jo
ficoms
or
les
pushf
addr16
call
cmp
add
xor
js
inc
jne
mov
ucomiss
dec
fadds
pop
fs
xor
scas
leave
js
call
mov
lret
push
clc
jl
push
and
add
movsb
jmp
imul
add
in
in
or
rol
aas
int3
inc
aam
xchg
fcmovbe
or
sbbb
inc
sub
mov
adc
cmp
sub
shll
in
in
fstps
shl
rolb
add
adcl
sub
push
xor
inc
adc
dec
rorb
adc
dec
loopne
adc
ror
enter
sbb
adc
stos
imul
in
inc
push
xor
dec
int3
dec
xorb
push
dec
xor
shlb
js
in
push
pop
mov
xor
scas
push
mov
aam
lcall
pop
xchg
inc
mov
pop
add
ficoms
add
or
rorb
inc
pop
cs
push
cmp
pop
pop
movsb
cltd
add
inc
pusha
inc
leave
in
loopne
jl
or
sbb
xor
add
fs
xor
adc
fs
dec
xchg
xchg
dec
rorl
stc
stc
pop
loope
lahf
stc
mov
int3
pop
push
in
adc
mov
jb
push
adc
fmuls
adc
xor
fcoml
fisubl
mov
call
and
and
loope
cmpsl
push
mov
aaa
es
push
dec
pop
out
pop
inc
xor
cld
add
sub
mov
fadds
add
inc
loopne
lret
jb
loope
xchg
cli
cld
lea
mov
pop
cld
sub
ret
add
xor
pop
pop
stos
fcoms
ljmp
outsl
ss
mov
xor
or
rol
adc
add
rcr
jne
cs
push
add
test
test
stos
or
sub
loopne
ret
aas
lea
jmp
jg
mov
sub
out
cs
or
jecxz
lret
add
mov
jne
pop
jbe
add
inc
dec
sti
adc
dec
jl
sub
push
enter
mov
adc
clc
aaa
jbe
or
mov
in
adc
dec
or
sub
jae
push
pop
rolb
mov
fsubrs
rep
fimuls
mov
sbb
lret
fs
pop
fdivp
ror
orb
std
mov
hlt
push
shr
xchg
pop
sbb
mov
and
rol
mov
pop
push
mov
movb
dec
js
pop
and
add
movl
jl
pushf
mov
cmp
pop
jo
popa
jbe
fdivrl
leave
mov
cmp
les
shlb
lock
rorb
fwait
sbb
and
andps
add
mov
inc
pop
jle
ja
lea
imul
cmp
ja
sub
fmull
sub
stos
mov
andl
and
or
adc
or
test
in
enter
adc
sbb
xchg
jbe
and
orl
test
test
shll
add
and
mov
push
and
test
adc
icebp
pop
pop
sbb
mov
adc
push
xchg
mov
jno
inc
pop
stos
xchg
icebp
mov
arpl
je
cmc
out
or
movl
pop
sub
and
pop
jge
mov
adc
adc
push
add
mov
xor
dec
imul
add
sbb
push
dec
jb
xchg
sbb
lret
push
sbb
out
fists
ljmp
mov
inc
inc
mov
mov
inc
sbb
adc
xor
or
add
sbb
add
ret
dec
ja
loopne
jge
lods
ljmp
xor
movl
pop
xor
push
sub
add
push
xchg
and
inc
addb
xor
pop
or
pusha
sbb
or
sbb
dec
inc
mov
adc
fidivrl
inc
cmp
jl
nop
sub
sbb
sub
test
sub
pop
mov
cmp
add
out
pop
add
cli
es
lea
cmp
xchg
mov
test
jg
and
or
js
insl
orb
jl
or
call
inc
inc
push
aad
or
int3
mov
mov
or
or
sti
dec
cmp
jl
dec
dec
sahf
cmp
push
js
test
xchg
dec
sti
jmp
and
xchg
nop
pusha
dec
in
imul
mov
test
and
movzbl
lods
lods
or
adc
mov
and
adc
adc
adc
out
mov
or
push
aam
push
sub
fcomps
inc
sbb
add
mov
push
cmp
sbb
les
and
mov
mov
sbb
mov
lods
rcrl
inc
ret
imul
into
loopne
sub
ljmp
and
mov
stos
dec
and
ret
adc
insb
and
mov
pop
or
add
mov
mov
or
add
pop
dec
pusha
pop
inc
mov
add
xchg
xchg
jp
adc
push
mov
push
adc
sub
inc
push
fbld
xchg
mov
int3
test
dec
sti
bound
push
or
jle
rorb
dec
sbb
pop
and
test
adc
cmp
and
xchg
push
or
add
fmuls
and
add
push
out
nop
lock
and
mov
push
sub
scas
add
mov
cmpsl
and
inc
ss
or
ficompl
xchg
mov
add
rcll
nop
imul
fistl
ret
popa
and
out
fstpt
enter
sbb
xchg
sub
ljmp
sbb
mov
pop
ja
lods
adc
push
iret
test
adc
push
jmp
push
adc
filds
test
jle
or
enter
jae
pop
pop
mov
and
loopne
loopne
jecxz
inc
js
sub
je
rol
gs
in
mov
pop
mull
pushf
insl
cwtl
fcomps
leave
call
fistpl
fcomps
jne
push
sbb
and
xchg
ss
mov
ret
ret
ficomps
fwait
add
in
dec
inc
push
mov
sbb
sub
sub
or
dec
ret
inc
push
push
ds
mov
add
aam
mov
popa
enter
in
mov
dec
cmp
lock
xchg
or
repz
adc
int
int3
jo
add
jae
je
inc
call
aam
adc
lea
and
repz
and
jns
and
cmp
push
cmp
xor
pop
and
mov
xor
lods
mov
dec
andl
cmp
cli
push
xchg
sub
loopne
adc
fwait
ret
loope
push
aam
jbe
rdpmc
mov
and
jnp
pop
dec
sbbb
push
or
sbb
adc
jmp
inc
mov
icebp
inc
insl
cwtl
mov
imul
xor
pop
lds
pop
sub
jb
push
movsl
xor
add
adc
es
and
popf
jmp
add
xor
sub
push
cmp
and
rclb
dec
jl
mov
fildl
cmc
add
mov
add
mov
in
dec
push
sub
or
cmp
lcall
inc
pop
inc
pop
ret
movsb
inc
inc
rorl
int
and
pusha
cmp
stc
push
or
cmpsb
test
ret
xchg
jns
mov
loopne
iret
xor
dec
xchg
push
xor
fnstenv
das
inc
push
les
imul
sbb
sub
and
cmpsb
push
sub
cltd
jae
lods
xchg
pop
push
cltd
icebp
loope
and
sub
sbb
dec
arpl
inc
mov
lds
inc
xchg
sub
or
inc
iretw
leave
add
push
and
push
pop
lock
in
xchg
aam
cmp
dec
clc
cmpsb
jmp
hlt
je
inc
mov
data16
lret
xor
and
push
mov
or
xor
lahf
sub
mov
sbb
jno
ss
push
push
jp
notb
and
bound
pop
stos
jmp
ljmp
in
add
mov
sub
adc
jo
mov
lods
add
scas
dec
sbb
pushl
ss
ja
cmp
aad
adc
pop
jnp
sub
dec
inc
loope
stos
sub
push
jo
adc
rcrl
xchg
sub
push
je
mov
call
loop
lret
test
movb
pop
or
and
push
lcall
stc
xchg
inc
pusha
sub
jle
and
ds
je
rorl
mov
xchg
orl
push
adcl
mov
pop
cld
and
pop
into
icebp
mov
push
push
shrb
add
dec
sub
mov
sbb
jne
xor
push
dec
imul
xor
test
push
ficompl
sub
and
xor
or
jo
mov
ss
sarb
dec
pop
mov
xchg
xchg
push
dec
push
cmc
push
out
push
lds
rorb
push
or
out
xchg
and
and
xchg
data16
inc
jg
mov
xor
cmp
mov
fsubrs
cmp
inc
xchg
das
and
scas
fidivs
test
or
xor
das
and
lea
jb
add
mov
mov
and
or
inc
hlt
and
sbb
xchg
outsb
lcall
sbb
andl
adc
arpl
in
push
in
cld
xchg
in
repz
sbb
pop
add
pop
jmp
fnstenv
fistpl
xor
jb
jne
inc
add
sbb
push
cltd
or
je
in
mul
dec
mov
out
sbb
or
jle
push
cmp
sbb
or
mov
mov
ret
arpl
or
jne
pop
or
mov
xchg
lds
adc
mov
or
test
adc
repnz
jg
add
popf
out
jo
cmp
mov
pop
adc
adc
push
jno
out
cs
dec
dec
sbb
int
cmp
add
jbe
call
mov
xor
mov
mov
ror
dec
push
inc
cmp
cmc
shlb
or
rol
jbe
nop
push
inc
xor
sbb
adc
addr16
and
imul
lods
ds
movsb
and
ret
pop
std
xchg
and
cmpb
mov
or
mov
pop
pop
pop
fcomps
fsubrp
inc
fstpl
ret
sbb
bound
or
sub
scas
add
adc
leave
dec
adc
xor
fiadds
adc
push
push
or
mov
cmp
push
adc
mov
xchg
mov
pop
mov
xchg
repnz
ret
push
xchg
pop
push
adc
stc
mov
add
push
xchg
xor
movzbl
popa
mov
or
or
call
repnz
push
cmp
lock
test
mov
int3
xor
add
ss
aam
andb
adc
push
xor
jg,pn
push
hlt
mov
lea
daa
stos
je
cmp
sar
push
adc
sub
push
cmp
jge
mov
xchg
adc
inc
insb
lock
cmp
popf
ficoml
mov
mov
lock
dec
shlb
mov
hlt
clc
clc
cld
test
xorb
mov
cs
add
add
lcall
push
and
aaa
add
test
je
add
sar
pushl
adc
cmp
dec
or
mov
shr
sbb
cld
aas
mov
mov
or
mov
sub
mov
add
adc
dec
or
pop
mov
sahf
add
mov
sub
mov
adc
je
dec
je
push
add
loop
and
aas
sarl
dec
mov
add
dec
movsl
out
lret
sub
testb
mov
test
mov
push
cld
je
cmp
jne
sbb
adc
mov
pushf
cmp
rcrb
roll
xor
add
xor
and
mov
sbb
bound
lret
idiv
inc
inc
imul
and
jb
pop
cld
mov
addb
lahf
dec
rol
pop
je
mov
add
or
stos
subb
cmp
mov
stc
push
or
mov
adc
push
push
sahf
cli
push
lock
dec
add
enter
repnz
jbe
inc
test
jmp
daa
pop
jmp
pop
cmp
adcb
loop
mov
push
mov
test
xchg
imul
jae
repnz
mov
mov
sub
pop
jo
inc
sub
in
nop
xchg
adc
cmp
je
cmp
push
es
outsl
push
cmp
jne
inc
jne
loopne
push
or
and
pop
dec
or
or
es
add
fimull
aas
leave
cmp
jne
add
xchg
pop
sub
sbb
test
dec
ret
or
sub
sbb
sub
addb
fcomps
or
mov
call
fsubrs
xor
cmp
mov
jmp
and
fwait
dec
sub
jmp
inc
jl
inc
jg
call
iret
add
shl
dec
mov
sub
and
and
mov
mov
cmp
fadd
jg
jbe
int
imul
and
inc
sbb
xchg
rcrl
inc
pop
adc
pusha
aad
mov
out
mov
mov
sbb
xlat
dec
add
push
xchg
mov
fsubs
fistpll
mov
jg
pop
sarb
jle
imul
mov
adcb
inc
lods
aaa
jecxz
mov
insb
cmpb
orb
and
inc
xor
fnstenv
sub
add
mov
jge
xchg
mov
pop
das
movsb
xor
sub
inc
cmpb
mov
out
pop
call
add
cmp
in
inc
inc
push
icebp
les
push
out
jmp
xor
dec
sahf
dec
bound
sbb
andb
loopne
add
xor
or
in
pop
shrb
cld
cmp
cmp
mov
ret
sub
lds
loop
je
and
cmpsb
syscall
test
ret
clc
insl
dec
fstpl
loope
and
mov
scas
aam
clc
ficompl
jg
or
into
hlt
add
jne
mov
lock
imul
or
inc
mov
jnp
lcall
adc
cmp
jne
into
sub
or
xchg
sahf
shll
mov
addb
adc
aad
add
out
dec
xchg
cmp
xchg
js
and
mov
jne
mov
cwtl
add
dec
mov
mov
hlt
mov
cli
mov
orb
sub
jle
je
outsl
testl
adc
sub
je
and
js
add
lock
push
add
and
mov
movsl
inc
or
inc
inc
loopne
xor
inc
loop
or
add
dec
sti
sub
insl
fsubl
shlb
or
or
cli
fs
ljmp
mov
cmpb
icebp
jmp
push
rolb
mov
add
xchg
fstl
mov
ss
mov
sbb
shll
mov
xor
dec
jle
ret
mov
adc
xor
mov
call
xlat
xchg
ret
dec
adc
mov
dec
push
movb
xchg
cmp
mov
mov
add
cmp
incl
cmp
pop
loopne
aam
cmp
lods
es
cmp
push
adc
inc
sbb
or
mov
mov
sub
ficompl
cmp
jb
pop
roll
inc
out
mov
out
cmp
outsb
mov
pusha
add
xor
shrl
mov
or
enter
dec
imul
sbb
xchg
outsl
mov
sub
or
movb
in
ss
jmp
jmp
pop
repnz
pop
mov
xor
jns
orb
pop
jne
leave
or
mov
pop
imul
test
aaa
sbb
jne,pt
jo
lods
fnstcw
ja
mov
and
lea
adc
xor
mov
and
dec
push
adc
pop
out
xor
aam
cmpsl
sbb
test
push
pop
jb
shlb
sbb
daa
mov
leave
sub
inc
add
adc
mov
jecxz
lock
in
sahf
xchg
mov
int3
pop
repnz
xchg
adcb
sbb
rcrl
add
pop
adc
push
das
push
addb
shll
shll
outsb
or
mov
stos
mov
mov
dec
sbb
cmp
dec
and
int3
fsubs
in
mov
movsl
pop
push
push
inc
test
adc
mov
pusha
data16
ret
popf
inc
int
sbb
insb
je,pt
inc
jl
pop
add
fsubrl
scas
jmp
clc
add
cmpl
test
rcrl
push
movsb
push
cmp
inc
cmp
or
in
mov
push
in
lock
inc
shlb
addb
adc
adc
mov
jno
add
mov
sbb
roll
or
movsbl
ret
push
xor
jno
jmp
xchg
pop
dec
sbb
cmp
or
popa
mov
nop
sbbb
sub
ljmp
inc
jb
loop
jo
inc
xlat
inc
push
sub
addr16
shl
sbb
or
aam
xor
or
xorl
push
sbb
int3
mov
cmp
jmp
aam
push
adc
leave
sub
mov
lret
sub
fsubrs
fistl
or
add
xor
lea
lcall
clc
xor
cmp
out
jmp
add
xlat
aas
push
dec
call
push
jbe
rcrb
mov
fnstenv
sbb
xchg
test
push
push
jo
mov
or
cmp
lret
movb
hlt
cmp
movl
mov
xchg
sbb
lock
cltd
inc
ljmp
gs
push
mov
jecxz
fdivs
and
add
and
inc
je
dec
adc
push
out
inc
addr16
loope
insl
jne
rclb
cld
call
pop
or
cmp
lret
mov
cli
jb
mov
inc
push
scas
push
inc
addl
mov
hlt
mov
pop
fdivl
dec
sbb
in
dec
fwait
jo
pusha
js
inc
add
cltd
mov
push
mov
push
mov
push
jecxz
arpl
mov
push
fildll
or
out
jo
movsb
cmp
je
and
xchg
mov
movsb
or
push
neg
or
pusha
inc
lds
pusha
sub
in
in
or
add
or
push
xor
iret
test
cmp
in
aaa
movl
mov
mov
inc
sub
dec
pop
xchg
das
rcr
movsl
cmp
jmp
cmp
jne
adc
dec
add
add
push
bound
sub
xor
xor
xor
pop
leave
add
andb
xchg
data16
iret
mov
je
std
leave
mov
into
je
mov
enter
aas
sbb
enter
pop
xor
dec
icebp
pop
sub
sbb
push
jmp
sbb
rorb
xchg
enter
in
shl
adc
movsl
lcall
stos
push
or
dec
pop
fdiv
xor
jb
in
jmp
call
mov
nop
in
jnp
ret
addr16
mov
xchg
mov
xchg
js
jle
dec
inc
aaa
cs
cmc
in
sbb
aaa
sbb
push
cmc
jno
or
cmp
adcl
fists
dec
movsl
ljmp
push
add
pop
je
push
dec
mov
jecxz
sbb
and
add
lods
in
dec
pop
loope
dec
jecxz
insl
je
pop
mov
gs
push
js
xchg
sub
cmp
push
shrb
dec
xor
sub
daa
scas
lea
dec
push
mov
mov
sbb
xor
pop
nop
cmpsl
add
pusha
lock
push
push
sahf
mov
sub
sub
mov
mov
insb
push
fmuls
cmp
xchg
add
pop
xchg
jmp
cs
loop
pop
add
or
in
fs
je
movsl
imul
int
push
out
mov
test
xchg
addb
and
push
xlat
or
nop
pop
popf
cwtl
lock
or
jmp
int
push
dec
pusha
cmp
test
push
mov
add
movl
movsl
stc
inc
or
push
or
movl
add
dec
inc
inc
sub
sbbl
in
add
mov
fwait
or
or
add
xchg
mov
lock
ss
sarb
inc
xor
mov
add
in
fdivrl
imull
cmpb
sub
sbb
push
shl
fistpl
or
in
andl
xchg
add
imul
jnp
sub
push
mov
sbb
sub
push
fadds
dec
pop
fwait
sbb
js
or
sub
push
push
inc
or
mov
or
rorl
out
js
and
pop
and
mov
dec
push
xor
out
dec
push
mov
inc
lcall
clc
lods
gs
push
aas
in
jmp
jle
adc
inc
add
xor
or
jg
sub
shlb
jb
inc
mov
sub
sub
clc
mov
xor
jmp
mov
dec
pop
mov
loopne
and
pop
mov
cmp
add
test
es
xchg
fs
jo
inc
jnp
xor
cmpsb
cmp
les
cmpsl
jge
dec
pop
push
ret
outsl
mov
xor
or
cmp
jecxz
pusha
cmp
dec
dec
les
daa
pushf
and
loope
or
cmp
sbb
fsubrs
mov
adc
xchg
mov
repnz
test
fistpl
cmp
sbb
inc
orb
pusha
add
inc
adc
notb
push
or
popf
xchg
adc
add
inc
sbb
ss
out
out
push
xor
adc
pusha
je
adc
sbb
or
decb
daa
sub
dec
push
mov
movl
pop
jo
add
sti
or
or
aaa
cmp
repz
sub
insb
insl
and
lods
jne
ret
dec
mov
pop
rcll
and
outsb
loop
adc
iret
fwait
xchg
pop
test
adc
inc
or
dec
leave
cmp
push
jge
lods
sbb
popf
subl
sub
sub
in
adc
ja
add
push
and
adc
popf
mov
xchg
dec
adc
add
lock
mov
ret
mov
fisttpll
mov
jg
dec
inc
mov
cmp
push
out
push
dec
pop
and
addl
movsl
addr16
lea
push
and
ret
jne
cmp
lds
mov
push
pop
daa
sub
pop
push
sahf
pop
shrl
lods
mov
adc
adc
cmp
ljmp
push
or
lock
pmullw
ds
jge
push
adc
dec
or
cmp
push
jmp
lea
adc
jmp
xchg
push
xor
pop
dec
sbb
xor
adc
mov
fisubl
dec
fcoms
inc
jne
in
add
andb
add
dec
add
and
test
or
in
insl
popa
and
and
jle
cmp
and
adc
loopne
mov
js
add
push
sbb
sub
addb
loopne
call
add
adc
inc
inc
adc
inc
add
mov
or
icebp
aas
mov
cld
or
lock
jmp
jne
repz
mov
out
push
xchg
xchg
xchg
push
pop
inc
add
adc
xchg
jl
addr16
in
jae
cmp
pop
xor
fisttpl
xchg
andl
flds
js
sub
fcoml
push
and
adc
pop
add
ret
gs
mov
xchg
push
pop
or
ret
rolb
call
or
and
cwtl
shl
mov
out
loopne
adc
ljmp
loop
sarl
aaa
or
shr
add
leave
data16
imul
and
dec
sbb
or
mov
in
inc
add
fistpll
adc
pop
push
inc
mov
mov
pop
pusha
inc
pop
aaa
xlat
sub
jle
in
jecxz
sbb
pop
dec
or
jge
popa
imul
loopne
outsl
inc
add
in
jae
lea
cld
std
ficompl
xchg
pushf
push
pop
es
pop
scas
cmpsb
xor
pop
push
shrl
mov
and
sub
xchg
fsubrs
mov
mov
adc
ja
adc
and
or
lds
insl
in
xorb
xchg
pop
pop
push
sub
cmp
lea
mov
xchg
or
adc
add
add
loopne
cmp
insl
loopne
sub
mov
fadd
pop
mov
insb
pop
mov
mov
popf
mov
add
dec
lcall
sbb
xor
mov
test
aad
push
mov
sub
inc
cli
xchg
or
sbb
cmp
dec
scas
inc
xchg
dec
mov
pop
adc
or
int3
inc
fidivs
or
popf
fs
repz
rol
and
jmp
iret
loopne
or
je
sub
jl
aas
xor
leave
rclb
cld
push
lea
xchg
das
sub
aaa
push
inc
ret
or
cmp
dec
or
lds
add
and
aas
clc
xor
add
add
pop
fcomps
mov
in
call
add
adc
push
inc
jmp
or
jl
sar
in
gs
adc
sub
and
dec
fcmovnbe
cs
clc
imull
push
loopne
cmp
cmp
xchg
adc
dec
outsb
xor
clc
dec
or
cld
pop
jae
ret
mov
inc
push
mov
mov
sbb
add
cmp
das
sub
frstor
cmpsb
out
jb
loopne
xchg
inc
push
inc
push
add
pop
jae
int
add
xchg
les
pop
test
cmp
inc
adc
ds
add
sar
xor
jb
out
sub
add
in
push
xchg
out
push
push
mov
sbb
int
int3
mov
jle
and
mov
cmc
jg
imul
xchg
ret
mov
mov
cmp
lock
into
lret
mov
mov
cmp
ret
push
xlat
pop
and
stos
cmpsl
inc
mov
xchg
push
pusha
mov
popa
dec
xor
loopne
push
adc
in
mov
inc
mov
mov
or
fs
in
sub
in
lods
mov
and
add
add
lds
mov
sarb
cmp
jbe
push
popf
in
add
push
jb
jmp
das
js
and
or
pop
push
movl
ficoms
rcrb
mov
nop
and
or
mov
and
lock
add
and
xor
adc
stos
into
inc
cli
and
aam
in
add
loopne,pt
data16
push
outsb
dec
insb
xchg
or
fneni(8087
lahf
sahf
push
cmp
or
dec
jo
add
jne
mov
ja
dec
adc
mov
sbb
scas
lods
divl
loop
sub
inc
jo
ljmp
add
sub
sub
push
push
mov
push
aas
push
movl
dec
je
mov
dec
add
mov
pop
gs
xor
test
mov
sub
popa
add
cmpsb
dec
fmull
pop
ja
shll
mov
sbb
add
fnstenv
push
mov
out
mov
cmpsb
cmc
cwtl
push
lret
jne
mov
in
xchg
sub
cmp
dec
cmp
inc
push
xor
pop
div
adc
stos
hlt
add
lea
sub
pop
mov
inc
or
xchg
jmp
lods
push
dec
xor
adc
inc
jne
ret
xor
push
adc
xor
dec
add
push
adc
cmp
dec
adc
and
imul
call
pusha
xchg
xchg
xchg
out
mov
dec
sbb
sub
jo
gs
and
in
mov
shr
mov
imul
sarb
jne
or
add
jb
push
fwait
lea
je
outsl
jmp
mov
sub
jo
shlb
adc
sub
or
fidivl
bound
add
or
adc
pop
mov
lret
fidivrl
mov
int3
add
add
nop
mov
imul
or
sarb
test
xchg
call
mov
add
xor
fsts
mov
or
rorl
jmp
dec
mull
cmpsb
loopne
add
or
push
out
fildll
je
rep
mov
dec
ljmp
ret
or
jb
hlt
sub
lds
call
push
lahf
call
je
and
rcrl
or
and
dec
jne
sub
stc
lods
sbb
es
xor
inc
adc
hlt
sarb
or
add
mov
jle
fldl
cwtl
scas
pop
push
pop
and
sbbb
lods
loop
mov
cmp
and
clc
sti
mov
cmc
jg
fs
pusha
jmp
movq
jnp
cld
movapd
push
clc
jae
pop
outsb
fcmovnbe
xor
jle
xor
cli
rcl
lret
fs
adc
or
and
lret
or
jg
ljmp
adc
jnp
mov
mov
ficomps
aam
ret
or
adc
pop
lock
call
add
fadd
roll
jbe
and
shl
mov
shl
pop
enter
push
push
inc
pop
push
pusha
sbb
out
cmp
dec
sbb
pop
jo
pop
test
sar
in
mov
orb
xchg
mov
mov
rolb
pop
add
sti
std
or
add
xorl
test
mov
or
or
int3
jmp
dec
mov
sub
ret
adc
pusha
lcall
mov
sbb
hlt
fldenv
mov
push
pop
mov
dec
aad
dec
and
push
pop
inc
dec
pusha
outsl
loope
sbb
popa
inc
pusha
mov
sub
mov
jmp
push
or
mov
mov
push
sub
add
idiv
ja
mov
cmp
mov
push
in
je
cmp
jne
inc
cmpb
out
orb
shlb
or
adc
add
xchg
or
sub
or
mov
aaa
insb
ret
daa
mov
shr
dec
pop
imul
push
push
push
sbb
adc
mov
rcrb
ljmp
je
movb
mov
js
pop
notrack
xor
pop
push
push
xor
dec
dec
sbb
sbb
adc
xlat
cwtl
cmp
or
mov
adc
and
clc
add
test
popf
push
lea
cmpb
or
xor
ss
xlat
cld
sub
dec
addl
outsb
loop
daa
mov
mov
push
sbb
movb
pushf
js
sbb
pushf
pop
addr16
sbb
sbb
sbb
push
mov
mull
push
cmpsb
enter
movsl
pop
inc
sub
movl
mov
dec
dec
inc
xchg
push
fisubs
pop
mov
dec
adc
sbb
sub
dec
add
lds
imull
dec
inc
testb
or
jnp
sub
or
call
fsubs
popf
or
or
jmp
pop
loope
push
adc
ja
and
xor
lock
adc
in
or
ret
cmp
inc
lock
arpl
mov
sub
cmp
int3
je
jl
pop
sbb
out
sub
je
push
xchg
orb
adc
mov
inc
sub
fdivrl
bound
or
popa
pop
ja
scas
xchg
outsb
mov
dec
shlb
and
add
data16
data16
dec
test
add
adc
pop
inc
je
pop
sbb
mov
jle
or
enter
and
testb
movsb
adc
lock
shlb
jns
adc
jl
mov
xchg
pop
rcrl
push
jmp
xor
loop
icebp
xor
test
push
rcl
add
pop
lret
xchg
shrl
rcr
or
jmp
add
iret
cwtl
mov
rorl
pop
inc
inc
add
sbb
sar
or
cld
dec
jne
insl
cmp
sbb
jmp
ret
adc
outsb
jne
out
jmp
add
ljmp
hlt
testb
je
inc
mov
cmp
mov
leave
es
loope
or
cmp
jne
dec
jmp
inc
lods
dec
js
ss
xor
lret
jne
inc
aaa
push
lds
daa
push
mov
sbb
es
push
outsl
jno
mov
roll
push
or
inc
dec
push
rolb
test
pushf
stos
inc
xchg
dec
sub
stos
jge
dec
push
roll
cmp
add
adc
fsub
mov
stc
xor
pop
and
daa
outsb
push
add
pop
pop
jne
ret
clc
ficoml
pop
adc
add
stc
or
rep
jmp
xchg
jmp
mov
mov
add
test
lea
addr16
sahf
fcomi
push
test
adc
inc
push
and
cld
pop
lcall
add
add
imul
dec
push
dec
add
nop
into
enter
nop
inc
adcb
inc
xchg
mov
neg
out
aam
int3
push
les
lods
movsb
mov
mov
call
call
hlt
cmp
repz
clc
clc
cld
lock
jo
out
add
lock
repz
jmp
or
or
lock
nop
inc
sbb
pop
sti
and
mov
pusha
and
lea
add
cmp
pop
and
std
cld
mov
mov
fsts
xchg
mov
addr16
cmp
in
pop
nop
mov
fiaddl
jl
lret
fisubs
add
sahf
inc
push
out
push
add
xchg
push
mov
push
out
fs
faddp
dec
push
mov
or
push
push
loop
cmp
pop
pusha
push
cmp
repz
sbb
sbb
adc
repz
adc
adc
or
repz
add
adc
pushf
or
ficoms
add
push
add
sub
daa
ja
pushf
adc
lods
inc
mov
mov
pop
cmovb
xchg
js
loopne
fistpll
adc
push
bswap
add
mov
add
dec
lahf
call
pop
inc
lods
push
jae
mov
inc
imul
pusha
or
subl
leave
les
pop
inc
jae
adc
popf
mov
adc
repz
push
pop
and
rclb
add
cmp
inc
jp
sub
sbb
adc
sbb
sbb
ror
add
add
rcrb
sbb
loop
mov
mov
sub
mov
or
push
daa
fwait
pop
push
test
sbb
dec
or
sarb
pop
inc
xor
xor
inc
push
pop
xor
cmp
dec
mov
orb
sbbl
enter
xor
or
pop
xor
stos
or
ret
and
mov
push
inc
and
cs
pop
mov
mov
and
dec
xor
or
mov
jecxz
mov
cmp
xchg
js
loope
cmp
jle
or
sbb
fistl
cld
popa
mov
dec
push
jbe
sub
inc
inc
mov
pop
cmp
pushf
mov
cmp
into
lea
cmp
jl
jmp
sub
in
mov
jne
push
adc
or
mov
mov
jne
pop
cmpsb
push
adc
sbb
add
pop
clc
mov
mov
mov
into
adc
ds
or
pusha
push
cmp
insb
and
add
push
es
jne
insl
clc
dec
addr16
lods
adc
pop
sbb
stos
loopne
cli
inc
int
or
mov
push
inc
pop
ljmp
add
sbb
cmpl
dec
faddl
cmp
call
test
sti
sbb
movsb
push
pop
scas
pop
and
js
in
ljmp
pop
push
loope
xor
ja
pop
fucom
or
add
inc
pop
stc
jle
mov
dec
or
cld
add
lret
fisubs
xchg
xchg
aaa
pop
add
sub
inc
les
mov
cmpsb
outsl
sub
add
addb
bound
orb
test
in
das
adc
jne
pop
push
or
jmp
repz
leave
imul
sbb
fsubl
or
cltd
or
push
pop
and
out
or
add
fucom
sub
sbb
insl
or
sbbl
inc
shrl
pushf
std
xor
pusha
push
push
or
add
roll
jo
js
sub
pop
aaa
push
ljmp
and
sub
jmp
loopne
mov
inc
insl
imul
fsubrl
repz
inc
js
or
pop
pop
pop
not
mov
xor
fs
mov
pop
pop
gs
or
push
inc
mov
add
mov
nop
shl
inc
fcmovb
insl
rcr
addl
clc
shrb
push
ja
cwtl
dec
fidivrs
jbe
lea
adc
sbb
jp
mov
xchg
add
pop
leave
and
pusha
ss
dec
add
push
clc
jbe
add
push
or
and
insb
out
jb
ret
mov
add
popa
aaa
add
add
push
in
cmp
adc
jmp
scas
adcb
test
jne
test
cmp
xorl
ja
sub
jbe
divb
negl
scas
mov
pushf
pusha
push
add
ss
ret
lret
hlt
negl
sbb
mov
in
rcrb
mov
cmp
mov
orb
mov
ds
sub
adc
popa
pop
popa
and
push
shlb
hlt
sbb
lods
int3
je
push
and
push
addb
insl
adc
add
inc
sub
sbb
add
outsb
xor
testb
push
or
rolb
repz
sbb
test
shl
adc
sub
push
sbb
clc
or
lods
cmp
pop
add
add
cmpb
mov
pusha
sbb
int
jge
push
cltd
rclb
or
rcrl
jns
aaa
adc
sbb
and
sbb
je
mov
repnz
cs
add
andb
jle
daa
dec
jne
jmp
push
or
or
pop
adc
mov
dec
es
jne
mov
xorl
or
sbb
sbb
pop
xor
enter
lods
aad
lds
sub
mov
aaa
js
cmp
jno
arpl
rorb
mov
outsb
into
push
or
fdivrl
push
cld
jne
mov
push
cmp
jne
cmp
int
es
jne
call
jne,pt
int
or
lcall
incl
dec
or
sub
repz
jmp
std
push
xor
cld
cld
jmp
fldt
std
lahf
in
adc
adc
inc
inc
inc
inc
out
rolb
or
push
adc
sbb
adc
mov
lret
xchg
dec
mov
push
push
push
sub
ret
sub
dec
and
mov
or
push
loopne
dec
mov
arpl
lea
or
add
adc
add
xlat
outsb
and
adc
mov
or
xchg
xchg
or
or
and
movsb
pop
pop
pop
pop
orl
adc
pop
ffree
fs
lods
xchg
fisubl
fmulp
in
shll
add
xlat
push
mov
pop
add
dec
addr16
sbb
cli
out
xor
pop
jg
add
mov
into
sub
test
xchg
pop
subl
call
push
push
push
jmp
jp
xchg
ja
jae
out
ljmp
inc
fadd
getsec
dec
add
lea
and
cmc
dec
push
ja
or
and
mov
popf
and
jmp
loopne
inc
das
pop
addb
sub
pop
and
or
pop
pop
outsb
loopne
aaa
int3
sub
insb
sbb
jb
shlb
mov
mov
gs
lret
inc
jno
test
xchg
mov
pop
inc
mov
push
rolb
shlb
xor
and
jge
test
int
ljmp
in
hlt
mov
adc
fsubrs
stc
push
xchg
lret
es
pop
xchg
xor
ljmp
or
adc
or
add
push
xor
pop
aam
je
add
sbb
sti
fildll
add
not
and
sub
add
or
sbb
mov
cmp
xchg
lock
sbb
lock
adc
daa
push
add
add
lock
xchg
sub
jne
pop
add
ja
xor
mov
jne
pop
mov
ljmp
inc
or
pop
lret
cmp
ja
mov
inc
je
mov
lea
in
mov
mov
lcall
ret
add
xor
adc
push
and
roll
scas
mov
pop
add
mov
aaa
cmp
mov
inc
cmp
jb
add
cmp
inc
fwait
push
int3
cli
cld
divl
xor
fs
sub
ds
cmp
aaa
or
or
ret
mov
push
icebp
or
mov
push
sub
or
pushf
shl
push
scas
sbb
into
and
xor
iret
subb
stc
addl
mov
jo
and
or
mov
mov
mov
push
jne
cwtl
inc
add
test
cld
cmp
push
xor
cmp
je
xor
out
sahf
adc
and
faddl
dec
lods
or
aam
xchg
pop
addr16
mov
xchg
std
cld
sbb
inc
add
adc
xor
pop
lock
in
mov
ret
or
jl
cmp
lahf
shlb
lret
push
mov
clc
subl
mov
pop
inc
pop
test
jae
cltd
xchg
pop
inc
cwtl
or
jns
xchg
xor
not
clc
pop
pop
mov
inc
jmp
cmp
sbb
jmp
adc
or
out
sub
sub
lods
mov
pushf
jg
and
cmp
mov
xor
ss
ja
js
or
and
adc
adc
pop
mov
jno
fmuls
or
mov
pop
inc
mov
and
je
clc
adc
lret
sbb
je
lea
mov
sub
jmp
and
ljmp
or
test
push
add
mov
sbb
and
sbb
and
push
push
and
adc
shl
cld
std
mov
adc
sbb
sbb
movb
shlb
xchg
xor
add
pop
cmovno
cmp
add
mov
push
in
imul
mov
and
sbb
mov
bound
jmp
dec
or
cld
aaa
jne
mov
rol
lahf
lock
mov
inc
mov
dec
jne
fs
add
pusha
inc
or
shufps
lret
add
pop
insl
push
and
lock
push
or
mov
adc
dec
push
inc
xor
add
xor
fidivs
sahf
test
or
dec
rcrl
adc
shr
sti
nop
mov
insb
sbb
xor
dec
or
push
ljmp
jne
jl
add
fmuls
push
imul
or
loopne
icebp
add
push
and
add
nop
mov
fdivrs
sbb
lea
push
adc
jbe
sub
ss
adc
clc
xor
enter
or
dec
pop
scas
mov
bound
mov
dec
es
and
add
cld
push
pushf
cltd
mov
or
mov
adc
daa
jne
or
add
idivl
pop
mov
jno
adc
or
test
xor
xor
pop
ret
jp
inc
imul
in
pop
nop
sub
inc
int3
mov
jbe
ja
or
loope
loop
out
jmp
mov
add
mov
mov
pop
add
jg
add
jmp
mov
or
stos
push
sub
or
adc
hlt
add
outsb
push
cmpsb
sub
sub
push
loope
xor
add
jp
mov
and
mov
mov
mov
inc
sar
or
mov
sub
adc
push
je
adc
or
gs
jnp
dec
int3
rcrb
cmp
adc
rcr
data16
ljmp
adc
push
jmp
xor
or
ds
jle
mov
les
ja
paddsb
pop
or
mov
cwtl
test
lods
aas
or
push
push
adc
rorb
cltd
jge
adc
pusha
gs
rolb
sub
in
inc
add
jo
adc
clc
inc
imul
adc
sbb
insb
push
adc
pop
addl
fisttps
decl
cmp
pop
insl
xor
inc
push
pop
mov
jbe
xchg
out
hlt
cltd
pop
idiv
ljmp
cmpb
loopne
in
sub
popa
xor
stos
push
push
mov
pusha
adc
rorl
into
xchg
xchg
xor
cmpsb
and
sub
xorl
push
or
push
scas
jp
loopne
dec
pop
push
imul
push
pop
push
dec
daa
cmp
pop
aam
mov
push
loop
sbb
loopne
mov
mov
arpl
add
sub
add
push
in
sbb
inc
adc
or
repnz
add
dec
push
or
ja
jecxz
test
and
xchg
loopne
mov
adc
or
rolb
roll
or
call
dec
ret
fcoms
test
and
ret
fbstp
mov
adc
enter
cmp
xlat
mov
in
xor
or
push
sbb
sbb
adc
mov
xor
push
faddl
idiv
orl
enter
addb
sbb
adc
xor
imul
or
call
ret
jbe
aam
aas
cli
dec
sti
jmp
dec
je
add
or
pop
je
push
neg
sarl
jb
push
sbb
xchg
addr16
add
jmp
sub
push
push
push
and
sti
add
mov
sub
push
ljmp
lea
push
test
push
testb
add
jo
arpl
lock
xchg
lcall
in
push
addr16
jne
mov
addr16
add
cmp
push
dec
mov
addb
jae
push
imul
xchg
sub
xor
cmp
and
rep
or
dec
xchg
xlat
pop
insb
inc
sbb
jns
or
mov
jg
mov
mov
adc
lods
repnz
jle
xor
or
jmp
xchg
jbe
leave
add
add
jmp
rorb
add
pop
in
pop
push
dec
jb
je
push
jmp
sub
dec
xchg
clc
rorl
sub
dec
pop
sub
pop
jp
loopne
fcoml
sub
notl
js
adc
imul
repz
or
mov
orb
jmp
cmp
jae
xchg
cs
sbb
mov
cmp
mov
sbb
dec
loope
jl
push
add
call
test
mov
loop
pop
lea
add
sub
insb
push
push
pop
dec
sbb
inc
push
push
sub
pop
shlb
sbb
add
xor
jl
sub
je
or
dec
and
sbb
shl
std
jns
push
or
clc
mov
pop
jle
rcll
add
push
pusha
xchg
pop
pop
imul
lea
lret
out
popf
cmp
push
sbb
punpckhwd
push
addr16
insb
subb
xchg
push
pop
int
add
decl
das
pop
pushl
pop
add
iret
sub
push
pop
or
push
pop
ja
lcall
inc
push
pop
sub
sbbb
cmc
push
adc
cmp
push
dec
test
sbb
inc
outsl
mov
leave
imul
cmp
lret
push
push
fisubrl
addl
inc
lods
adc
add
lcall
insl
or
cmp
clc
mov
insl
sub
and
sarl
inc
js
adcl
add
jg
mov
cmp
jne
fsts
stc
xchg
clc
push
jle
in
mov
stc
mov
mov
out
lret
mov
fs
in
push
insb
sbb
jge
insl
inc
sub
xchg
cs
call
cmp
movsl
bound
ret
add
add
xchg
fucomip
mov
inc
mov
jmp
dec
or
inc
testb
cwtl
rclb
add
aam
xchg
mov
loope
mov
and
sbb
dec
shrb
or
jno
jb
add
cs
lods
popf
fsts
sets
push
mov
sbb
dec
int
push
mov
in
js
in
push
add
add
enter
popa
imul
mov
lret
inc
dec
adc
or
stos
loope
repnz
test
pushf
lock
add
outsb
and
test
in
mov
nop
test
pop
lea
dec
and
clc
xchg
push
cmpsb
aaa
mov
jmp
xchg
and
jg
clc
enter
mov
cmp
ret
xchg
and
test
inc
and
ds
mov
mov
xchg
mov
lret
ret
jge
cli
push
fcoml
adc
cmpsb
and
movsb
adc
popf
out
lret
movsb
sbb
mov
sbb
xchg
xchg
sub
pop
hlt
test
popa
sbbb
lret
sbb
inc
add
iret
sub
xor
add
jge
sbb
mov
add
adc
pop
jp
pushf
jo
inc
pop
imul
pop
ss
mov
adcb
sbb
mov
xor
popf
enter
inc
push
inc
xor
pop
jp
fisttpl
jmp
adcb
das
sbb
andl
xchg
jo
in
sub
mov
fwait
or
mov
imul
add
mov
dec
call
insl
xchg
xchg
xchg
cmp
cmp
sub
push
arpl
mov
adc
rcrl
lea
dec
push
mov
cmp
xor
lahf
push
or
lock
cmc
fsubrl
xchg
sar
lea
xchg
imul
xor
rclb
xor
je
fnstenv
int3
adc
in
pushf
fstpt
sahf
and
loopne
add
bnd
add
repnz
xchg
inc
jnp
jl
jae
add
dec
sbb
leave
enter
fidivl
xchg
add
push
lods
xchg
cmovne
sub
mov
and
mov
push
les
adc
leave
jge
add
add
jo
push
jns
repnz
add
es
push
in
jmp
push
pop
test
sub
incl
lahf
out
sahf
dec
inc
cmp
sub
popl
sbb
ds
sar
mov
xchg
test
cmp
stos
loop
or
mov
or
xor
pop
nop
and
inc
pop
mov
nop
lcall
pop
rolb
push
outsb
mov
enter
repz
rcr
loopne
lock
jmp
mov
or
xor
loopne
push
jmp
in
adc
lds
mov
outsb
inc
dec
loopne
push
sarb
out
sarb
shll
push
or
sub
xchg
in
je
mov
icebp
lret
add
das
repnz
jne
pop
repnz
inc
sbb
add
add
push
adc
jle
or
mov
mov
dec
imull
int3
testb
jne
push
sbb
mov
loopne
mulb
add
mov
and
inc
sbb
outsb
jne
out
cs
ror
mov
push
pop
shlb
mov
push
xor
push
cmp
xorb
ds
adc
test
clc
stos
rcrl
cld
fsqrt
jbe
je
movsl
movsl
dec
push
fistpl
pop
or
dec
sub
sbb
xchg
mov
into
or
inc
push
push
popa
lock
mov
ss
or
and
test
and
or
fimuls
cmpb
jmp
lods
push
roll
shr
pop
or
mov
jns
sbb
dec
sbb
add
lcall
cmp
cmp
lods
mov
out
sbb
sbb
aas
xchg
mov
push
lock
pop
push
out
call
add
pop
js
js
loope
negb
loop
cmp
insb
mov
dec
je
sbb
pop
std
movb
jmp
insl
test
in
xor
sub
std
add
orl
adc
shrl
push
jo
or
je
clc
mov
or
fmuls
or
repnz
inc
mov
lock
loope
dec
cwtl
adc
dec
xor
mov
add
push
or
mov
or
lods
sbb
mov
adc
cld
or
add
jbe
mov
add
psubusb
test
mov
jnp
push
push
lods
movl
cmp
es
mov
sarb
testl
test
popa
enter
call
lcall
push
ret
imul
in
add
xchg
mov
pop
or
dec
adc
mov
add
add
dec
or
stos
xchg
andl
xor
mov
add
sub
ds
add
arpl
loopne
fcoml
push
push
xchg
fcomps
int3
repnz
xchg
clc
or
xchg
repnz
movsl
shrb
faddl
add
hlt
mov
jae
fbld
cld
xor
jnp
push
ljmp
sub
adcl
xchg
clc
jno
insl
push
jne
loopne
pop
insb
repnz
jmp
cli
xor
mov
addr16
pop
inc
test
mov
pushl
or
add
add
ja
int3
shll
cltd
int3
add
xchg
sbb
test
scas
add
add
sbb
or
dec
or
pop
sbbl
mov
dec
enter
jl
xchg
lret
jge
stos
sub
inc
cltd
stos
add
adc
jbe
push
inc
fisubrs
sbb
scas
hlt
pusha
and
or
inc
mov
sub
sbb
or
cmp
divl
pushf
inc
js
mov
sub
cwtl
movsb
aaa
push
sahf
mov
dec
sahf
jno
xchg
insl
in
sbb
jb
pop
aaa
loopne
call
sbb
push
adc
add
lock
stc
rcrl
xor
mov
dec
nop
rcr
cmp
or
cmp
push
xor
shlb
push
jbe,pn
rclb
dec
push
pop
dec
jmp
ret
add
mov
jl
push
in
or
push
mov
dec
lret
inc
aaa
nop
or
lret
popf
mov
popa
xorl
push
mov
mov
popf
jne
fnop
mov
cmp
nop
in
xchg
cmp
call
lods
outsl
je
dec
call
or
sub
mov
into
pop
add
sbbl
mov
sti
rcrb
lea
jbe
ja
fiadds
xorb
xchg
cld
ja
or
test
push
sbb
pop
sar
pop
leave
rclb
mov
push
loop
rolb
inc
jnp
jo
mov
or
lret
movsl
mov
loopne
sbb
pusha
xchg
loope
aam
sub
add
inc
sub
xor
enter
idivb
pop
or
add
setg
jb
movsl
sbb
add
inc
popa
pusha
dec
popa
xchg
mov
adc
lds
add
mov
loop
fbld
push
imul
ljmp
or
ja
movsl
mov
mov
leave
test
adc
movsl
hlt
hlt
stc
rcr
push
add
push
sbb
adc
test
in
and
loope
aaa
test
ds
xchg
pusha
sub
scas
pop
ret
sbb
pop
and
fnsave
jne
js
add
movb
inc
xor
movsl
sbb
xchg
cmp
incl
cs
sbb
sbb
imul
imul
pop
or
xchg
rcrb
jb
out
mov
test
pushf
dec
xor
or
adc
add
into
shlb
jo
sbb
inc
je
pop
push
imul
filds
cwtl
mov
dec
xor
repz
movsb
cmp
test
mov
mov
lea
and
arpl
mov
call
inc
fimull
mov
add
outsb
sbb
sbb
js
pop
add
push
xor
mov
loopne
sbb
es
mov
push
add
add
enter
repnz
pop
jne
xor
add
push
insl
cmp
sbb
xor
ds
cmc
add
push
pushf
sub
test
add
repnz
xchg
loopne
lcall
cmp
movsb
xor
mov
push
data16
es
mov
stc
push
push
cwtl
inc
iret
adc
or
decl
jmp
mov
inc
lods
cwtl
ds
xlat
mov
mov
dec
movsl
cmc
inc
sarb
rol
xor
addr16
xchg
les
cmp
clc
pushf
mov
or
push
jmp
pop
orb
sbb
inc
inc
mov
mov
jmp
stos
pusha
je
or
sub
mov
ss
push
fwait
pop
loopne
popa
xor
xchg
fisttps
pop
xor
mov
push
and
xchg
cmp
jb
sbb
call
or
and
out
test
push
outsl
add
mov
shlb
add
push
addr16
xchg
hlt
jmp
cmp
jle
jae
mov
xor
cmpsb
lock
pop
push
out
mov
shll
add
or
mov
nop
cmp
inc
cld
adc
mov
leave
imul
popf
lea
mov
dec
mov
aaa
enter
out
cltd
sbb
divb
movsl
push
push
push
pushf
enter
iret
sbb
inc
push
stos
adcl
adc
mov
dec
inc
les
lcall
and
jae
imul
cli
mov
bound
in
jo
inc
daa
add
xchg
les
mov
insb
sub
ret
inc
test
out
push
push
into
xor
jecxz
bound
sub
sbb
adc
dec
sub
mov
or
jmp
xchg
sub
cltd
add
adc
jl
add
or
push
mov
add
fidivrl
adc
mov
xor
jnp
or
sbb
push
lock
adc
daa
pusha
or
lahf
mov
or
mov
jnp
fsubl
mov
mov
sbb
and
push
inc
out
ficomps
push
push
push
jmp
fnstsw
faddl
stc
cmp
fimull
mov
dec
jmp
sub
mov
movb
movsb
in
ja
lock
pop
inc
movb
xor
and
or
fsubrs
jmp
in
push
stos
rclb
push
rcrb
dec
cld
mov
in
ja
sbb
andb
mov
aad
sub
mov
sub
sub
push
mov
test
int3
mov
lock
shrl
mov
test
pusha
inc
clc
or
and
push
and
dec
std
xor
or
push
mov
popa
subl
mov
mov
jp
or
jge
inc
sbb
adc
lret
add
xchg
mov
mov
and
inc
aam
mov
sub
mov
or
adc
insl
loope
add
or
mov
xor
gs
add
cli
adc
mov
adc
xchg
pop
jmp
jge
lods
mov
scas
mov
xchg
and
je
push
or
sub
mov
sbb
out
mov
sub
movsl
daa
pop
mov
mov
xchg
xor
or
add
rcll
add
mov
mov
fdivrs
aaa
xor
or
stc
and
stc
mov
jmp
cltd
push
pop
lcall
sti
push
adc
or
dec
xchg
mov
stos
mov
push
ljmp
ret
outsl
mov
adc
dec
mov
pop
adc
int3
mov
or
or
jne
jle
inc
mov
mov
daa
test
test
xchg
or
jbe
lcall
sarl
pinsrw
jb
inc
aam
xchg
add
mov
cmp
push
jl
adc
or
and
out
jno
push
or
adc
dec
push
push
or
inc
add
fmuls
decb
pop
jb
mov
insl
imul
mov
aam
add
pop
bound
pushf
ret
add
imul
and
pop
push
and
test
test
nop
ret
adc
inc
mov
jb
in
push
hlt
mov
xchg
xchg
cmc
adc
xchg
jo
pop
ljmp
inc
aam
clc
fmuls
out
lock
adc
nop
addb
test
idivl
pushl
insl
and
pop
rcrl
jne
cmp
je
lods
cmp
ja
mov
jmp
pop
cmp
cmpl
lea
inc
adc
jmp
inc
loopne
push
loopne
loopne
push
xchg
loopne
xchg
stc
pop
push
xor
inc
imul
jo
imul
or
es
xorl
add
sub
sbb
pop
sbb
mov
mov
xchg
and
jg
inc
push
jo
adc
ds
jb
inc
test
lret
cld
scas
add
nop
add
popl
push
sbb
les
sub
icebp
jae
sub
add
leave
pop
std
arpl
lods
pop
and
std
sub
mov
xorb
sub
add
and
adc
mov
jmp
push
subl
mov
sub
add
and
mov
and
pop
push
xchg
sub
outsl
ss
js
add
mov
sub
sub
lea
into
pusha
and
pop
inc
sar
sbb
fxch
outsl
mov
mov
or
mov
movsl
jl
add
int3
in
xchg
push
sub
push
sbb
loop
jns
push
add
push
pop
adc
or
cmpsb
shlb
jl
inc
cmp
cmp
lods
sti
inc
mov
sbb
sbb
jle
divb
mov
nop
jnp
shl
test
out
and
mov
xlat
imul
pusha
jo
pop
leave
shrl
mov
pop
sub
add
icebp
add
arpl
icebp
pop
es
sub
cmpsl
inc
fstps
pop
flds
imul
inc
js
push
inc
sahf
pop
push
roll
mov
shrl
cltd
mov
nop
and
sub
insb
int3
push
sbb
dec
xchg
cwtl
pop
adc
test
ds
test
insb
push
lea
loopne
fstps
test
mov
sbb
mov
inc
inc
pop
sbb
mov
es
lock
pop
enter
leave
sbb
insb
add
mov
test
inc
or
mov
or
xchg
add
xor
lcall
pop
mov
outsb
data16
sbb
cmp
jo
push
cld
mov
or
sti
sbbb
adc
push
fs
dec
xchg
xchg
pop
mov
imull
call
clc
sub
pop
jp
mov
and
dec
adc
and
leave
cmp
dec
jo
sbbb
jmp
cmp
sub
shlb
push
xchg
mov
adc
das
rcrl
pop
add
stos
pop
or
xor
mov
rcl
sub
pop
adc
inc
push
adc
add
xor
lds
shl
aaa
cmp
js
stos
rorb
lret
test
push
pop
sbb
js
jp
movb
or
loopne
popl
jle
add
sbb
mov
out
inc
pop
ss
mov
or
mov
inc
sbb
jg
jp
push
jmp
andl
jle
and
or
mov
test
or
cmp
pushl
cmpl
bound
xor
das
pop
pop
jg
mov
into
jo
jo
push
fdivl
movsb
dec
adc
cmpsl
rolb
fstpl
clc
hlt
mov
mov
lds
sub
rolb
sbb
iret
in
push
jae
cli
call
test
test
xchg
loopne
mov
hlt
xchg
bound
es
ja
cmpb
jp
aad
bound
xorl
lods
sub
test
mov
dec
icebp
xchg
push
hlt
pop
addr16
popf
je
leave
fistpll
ja
mov
nop
dec
ds
clc
adc
mov
sub
sahf
dec
xor
xchg
and
shll
mov
pop
popa
push
or
mov
fwait
sbb
lea
push
nop
arpl
mov
jmp
and
mov
mov
popa
mov
repz
lods
mov
cltd
scas
and
hlt
push
xchg
pop
roll
and
inc
int3
jno
icebp
outsb
fistpll
insb
jne
jp
mov
adc
and
fisttps
adc
imul
mov
imul
leave
leave
leave
dec
inc
cmp
lret
sbb
aam
sub
in
in
test
sbb
stos
sarl
loope
xchg
jl
ret
lds
outsb
popf
push
lea
loop
jae
sbb
mov
sbbb
leave
mov
scas
mov
xchg
cmp
cld
adc
mov
adc
fildl
adc
or
adc
test
rorl
shl
pop
aaa
imul
shll
sub
jns
sub
mov
mov
inc
sub
or
aad
and
inc
pop
sarb
lods
pop
leave
cmpsb
inc
sub
in
and
int
outsb
and
push
xchg
lds
mov
js
push
jae
lods
mov
mov
inc
fs
add
mov
outsl
jle
cltd
add
mov
mov
movsl
push
pusha
cmp
xchg
loop
addr16
push
dec
inc
mov
xor
jmp
adc
mov
mov
mov
out
test
enter
add
outsl
pop
xor
inc
mov
push
xchg
mov
cld
push
push
cmc
test
in
jecxz
push
pop
sbb
inc
push
add
push
aas
inc
pop
js
add
into
fdivrl
push
jnp
jb
mov
pushf
push
into
lods
cltd
nop
inc
loopne,pn
lods
shrl
add
cltd
ficomps
pop
push
mov
sub
in
je
adc
push
pop
xchg
mov
mov
mov
dec
sub
dec
fsub
jb
add
aad
lds
cmp
jnp
jo
leave
rorb
dec
push
add
and
mov
lods
jns
and
and
nop
mov
aam
leave
and
cmpsb
ret
in
xor
rolb
rclb
mov
or
aam
and
enter
cmp
inc
mov
aam
idivb
test
pop
inc
cmp
lret
mov
sbb
sbb
sbb
mov
pop
loope
sahf
popf
mov
mov
je
pop
add
cmc
loopne
sub
sbb
sbb
inc
push
scas
dec
out
imul
scas
inc
ds
mov
push
pop
hlt
rcrb
stc
xchg
inc
mov
add
in
fidivs
dec
sbb
dec
adc
xchg
sbb
sbbb
scas
lret
xchg
mov
add
ret
adc
rcll
pop
sbb
mov
jmp
lret
inc
pop
pop
push
inc
jp
mov
das
and
out
ret
mov
or
test
rorb
gs
out
dec
add
hlt
and
sbb
dec
out
cltd
cmc
test
stos
cmp
jmp
mov
dec
rcrb
mov
inc
jmp
dec
fildll
dec
add
add
or
cmp
and
add
inc
add
sub
xor
lret
cmpsb
xor
lea
jo
sbb
rcll
add
xchg
push
sbb
add
push
add
add
mov
mov
fisttps
mov
xchg
mulb
or
add
jo
adc
xchg
lret
or
lock
add
dec
pop
xor
sbb
and
pusha
and
mov
mov
add
adc
push
jle
add
jo
inc
pop
sub
mov
mov
inc
cmp
push
sbb
int3
repz
or
or
add
sbb
push
fcoml
dec
fstp
mov
mov
adc
mov
cmc
hlt
mov
shlb
pop
hlt
push
popf
out
cli
out
or
push
sub
aad
adc
push
sub
inc
add
and
or
cld
dec
dec
out
push
notb
out
int3
arpl
adc
cs
fadds
adc
cmp
scas
mov
adc
sbb
fisttps
aaa
add
xchg
mov
decl
orb
mov
ret
movsl
push
mov
mov
loope
out
addr16
mov
dec
cmp
mov
in
leave
sub
mov
cmp
and
in
sbb
mov
and
jmp
or
loopne
jmp
mov
in
inc
or
shrl
ret
sub
jg
pop
add
push
or
scas
mov
idivl
or
xor
mov
push
ret
jno
push
dec
fists
mov
mov
push
cmpb
sti
imul
xchg
pop
mov
xchg
xor
mov
jne
movl
inc
sbb
cmpsb
sarl
jne
dec
shll
jmp
dec
jmp
add
jmp
pop
push
mov
add
adc
leave
ret
add
shl
lods
fwait
push
fcoms
add
push
imull
rcrl
add
pop
jmp
psubsb
jb
sbbl
mov
in
push
jmp
lock
dec
rorb
push
aad
imul
aaa
inc
push
jne
ret
aas
sar
stos
mov
jnp
jae
cmp
jbe
addr16
shll
jne
xchg
sbb
lods
rcll
inc
push
leave
inc
fwait
lea
sbbb
leave
xor
jo
fwait
orb
push
mov
sub
stos
jmp
cli
fs
cmpb
inc
cmp
js
push
add
pop
movb
sbbb
shlb
inc
bound
loopne
xorb
dec
xor
push
fsub
std
es
pop
dec
test
orb
clc
dec
xor
dec
jne
loopne
pop
jnp
stos
addr16
scas
dec
jle
sbb
pusha
xor
mov
jecxz
xor
push
mov
inc
dec
jne
sahf
xchg
push
push
scas
stos
mov
jmp
rcl
push
addr16
add
jmp
cmp
lcall
cmp
adc
addb
sbb
mov
push
movsl
ret
cmp
adc
and
push
add
test
cmp
leave
mov
push
and
lcall
scas
pop
pop
pop
pop
sbbb
shll
dec
pop
pop
push
cmp
cmp
das
pop
pop
push
xlat
testb
imul
stos
insb
ljmp
lods
and
add
and
dec
mov
or
push
or
mov
add
jl
sbb
rorb
call
jnp
jge
mov
mov
add
mov
ret
cmp
out
imul
ljmp
ljmp
mov
jmp
popf
jmp
and
cmp
xor
shlb
cmpl
and
test
pop
pusha
and
or
jne
jns
push
sahf
or
dec
fimull
fnsave
icebp
nop
push
js
sbb
mov
pop
aad
jecxz
pop
fimuls
test
jnp
xchg
test
clc
xor
in
aaa
sbb
pop
loop
jnp
test
pop
ret
adc
mov
jecxz
jo
xchg
and
mov
sbb
xor
or
sub
mov
or
clc
adc
clc
xchg
addb
cmp
arpl
pop
sub
sbb
xor
fdivr
mov
test
push
addr16
rolb
pop
cmpsb
sbb
das
adc
mov
fiaddl
les
mov
sub
and
rcrb
cwtl
shrb
xlat
cmp
pop
pop
sbb
cwtl
daa
sbb
das
ljmp
jle
jg
je
lcall
js
test
pop
cld
inc
add
add
inc
and
movsb
or
mov
xor
cli
xor
cmp
mov
fstpl
addr16
out
or
mov
pop
scas
lock
add
add
lock
pushf
push
mov
sub
aad
add
mov
lock
adc
pop
push
out
pop
movsl
pop
mov
jmp
pop
push
fwait
sbb
add
or
andb
or
test
dec
mov
mov
or
sbb
pop
or
inc
mov
fisubs
test
push
push
push
pusha
adc
inc
adc
aas
push
scas
addl
sub
lcall
cmp
inc
sub
push
push
mov
pop
and
fadd
std
jo
pop
scas
mov
pop
inc
or
and
push
add
les
shl
and
mov
shlb
push
bound
pop
inc
add
mov
push
imul
dec
fidivl
adc
ret
cwtl
clc
and
or
dec
inc
pop
sbb
sub
test
imul
push
push
ds
adc
js
push
mov
mov
add
mov
mov
lock
out
cmp
sub
iret
push
adc
xchg
sbb
stos
clc
mov
adc
sbb
pop
jb
cmp
pop
jb
pop
inc
dec
pop
inc
test
mov
cmp
jmp
push
adc
leave
test
dec
mov
ds
mov
mov
enter
pop
cmp
lea
mov
ficoml
scas
loop
popa
popf
jge
adcl
sarb
jg
and
lods
adc
mov
mov
add
in
push
rorb
mov
outsl
jo
les
pop
dec
dec
sarl
xor
cmpsl
mov
adc
pop
ds
je
shl
mov
mov
inc
inc
rcll
sbb
ja
mov
imul
add
lret
xchg
loopne
cltd
aad
sub
xor
test
fistpl
das
ds
or
xchg
arpl
cmp
inc
jne
cmp
stos
inc
lahf
xor
cmpl
hlt
xchg
pop
mov
cmp
clc
pusha
lods
adc
xchg
add
rcr
sub
loopne
or
js
push
add
mov
inc
js
sub
vmovd
add
or
cmp
add
in
pop
mov
or
inc
lsl
in
or
rcrl
or
xor
sub
sar
add
out
rclb
jmp
jg
loop
sarl
aaa
fistpll
jg
push
inc
adc
push
jmp
push
xor
jo
mov
dec
jne
shlb
mov
imul
or
or
xor
mov
je
xor
adcb
or
jne
sbb
add
jne
push
inc
outsl
stos
and
inc
cli
pop
pop
ret
fnsave
sub
sbb
shl
je
popf
bound
add
cli
shr
add
clc
enter
aaa
push
popf
cmp
jg
mov
xlat
jl
js
in
adc
xchg
test
outsb
adc
adc
add
push
adc
ret
mov
push
xor
push
or
shll
enter
or
and
push
sbb
fdivs
xor
call
xchg
add
ljmp
add
nop
push
pop
mov
and
sbb
push
add
negb
shrb
lret
or
push
sbb
test
addl
push
or
mov
sbb
orl
xchg
jo
add
xchg
pusha
outsb
mov
push
xlat
cmp
imul
push
fldl
or
mov
rcl
fiadds
mov
popf
pop
dec
enter
bnd
in
jno
xchg
mov
jp
les
out
fcmovnbe
jle
sbb
jmp
and
add
and
pop
mov
imul
push
dec
add
and
sbb
stc
jbe
test
add
sbb
xchg
adc
fbld
lods
jno
imul
in
shl
aad
call
jmp
loopne
or
stc
pop
sbb
int
adc
jmp
pushl
jge
mov
jmp
mov
mov
in
in
fcomps
adc
cld
and
sub
js
and
push
xor
bound
mov
adc
jne
lea
xor
inc
lock
nop
dec
dec
sahf
out
ficoms
pop
push
dec
repz
loope
fcoms
in
into
cmpsl
jge
mov
rclb
pop
stc
es
mov
add
int3
and
and
mov
mov
jb
push
inc
and
mov
fs
jle
imull
pop
ficompl
loopne
pusha
or
mov
cmp
jp
push
push
cltd
jmp
inc
faddl
or
or
jmp
test
and
inc
xor
jmp
sti
iret
mov
xchg
and
ret
and
push
push
test
mov
sub
pop
or
mov
xor
fst
scas
cld
outsl
mov
test
cld
divl
adc
xchg
xchg
and
pop
dec
mov
sbb
jl
add
jg
xor
jle
mov
sbb
sub
mov
sbb
shlb
je
jmp
bound
add
loopne
loop
sbb
popa
out
or
inc
cmpl
sbb
mov
push
aad
adc
inc
clc
adc
loop
ret
or
adc
xchg
dec
cwtl
or
xchg
ds
jl
mov
jbe
xchg
lcall
jne
cmp
outsl
jnp
mov
sub
dec
addb
jmp
movsb
pop
mov
or
data16
jb
mov
pop
and
xchg
std
mov
lods
std
rorb
jmp
jne
xchg
xchg
xchg
add
cmp
adc
xchg
dec
shlb
js
add
xchg
dec
rorb
push
inc
dec
push
stc
test
mov
jno
or
gs
cmp
adc
testb
mov
outsl
or
jge
lcall
mov
jns
mov
enter
shlb
rorb
push
xchg
enter
mov
xchg
out
inc
mov
mov
mov
pop
rol
mov
pop
cs
int3
pop
or
add
subl
xor
sub
iret
es
lock
pop
sbb
sub
popa
mov
jns
idivl
jb
inc
xor
lods
es
adc
adc
mov
fsubl
cwtl
pop
xor
or
inc
sbb
test
sub
dec
cmp
inc
sub
jo
lods
pop
aad
pop
pop
inc
call
ss
cmpb
ret
add
cmpb
xor
mov
mov
cmp
push
outsl
ss
cmpsb
rclb
js
pop
xchg
cmpsl
loop
push
mov
and
and
ret
clc
adc
mov
mov
push
pop
sub
rolb
sbb
inc
in
test
es
inc
push
cmp
mov
pop
mov
rorb
push
or
stos
nop
cmpb
out
xchg
mov
push
iret
and
mov
pop
sti
cmp
movsb
test
stc
mov
push
adc
loopne
push
insb
cwtl
imul
roll
or
les
movsb
ret
and
mov
jg
orb
cmp
sahf
cmpsl
aam
sub
jnp
mov
pop
aam
mov
adc
fcomps
pop
fnstenv
adc
loopne
push
rolb
adc
xor
sbb
add
mov
mov
push
dec
adc
cs
fwait
sub
fwait
cmp
outsb
inc
sbbb
jns
jl
out
scas
mov
and
test
test
add
jae
mov
or
jo
in
sub
xorl
sub
fdivrl
jecxz
inc
fstpt
and
loopne
cmp
add
test
adc
pop
scas
loopne
mov
mov
push
fisubs
adc
sar
and
cmp
je
pop
clc
ljmp
cmpl
mov
xchg
sub
mov
test
stos
test
ficomps
sar
dec
int
mov
xchg
lea
addb
mov
push
fsubrl
pushf
adc
cmpb
insl
inc
lahf
xor
cmp
lahf
js
in
push
jl
lds
sub
dec
outsb
push
inc
scas
xchg
dec
or
scas
add
push
mov
adcb
cmpsb
icebp
xlat
mov
push
xor
mov
cs
mov
jb
je
jle
adc
xchg
sbb
pop
test
neg
adc
neg
ret
lods
or
cmpsl
cmpsl
sub
cmp
mov
daa
movsb
movsl
movsl
lea
enter
cmp
and
mov
mov
mov
lret
mov
lahf
inc
repz
cmpsl
lock
or
mov
sbb
idiv
push
pusha
ficoms
inc
jmp
dec
data16
pop
inc
dec
leave
shlb
test
cs
sti
mov
jmp
dec
and
lods
sbb
roll
mov
xchg
xchg
cs
or
sub
jl
pop
sbb
jmp
dec
adc
scas
adc
sub
out
ljmp
or
sbb
sbb
jnp
fisttpll
mov
incl
sbb
or
mov
sub
mov
mov
mov
iret
jmp
mov
xor
jecxz
les
je
jmp
mov
adc
inc
inc
lea
push
add
hlt
in
sbb
add
jne
cmp
hlt
push
nop
loopne
add
xchg
loope
outsl
nop
sbb
cmpsb
jmp
sbbl
jp
andb
sahf
rcl
dec
push
add
pusha
stos
xchg
je
imul
or
inc
adc
cld
push
inc
daa
pop
mov
mov
pop
lcall
xlat
ret
pop
mov
push
jno
push
or
hlt
sahf
cmpsl
stc
mov
push
fdivrl
rolb
ret
jl
aam
lods
enter
test
pushf
or
add
sbb
inc
mov
and
fsubrs
sbb
xchg
mov
lea
pop
or
pop
out
rolb
aas
jl
xor
call
xchg
seta
mov
test
xchg
xlat
loope
pop
pop
sbb
fisubrl
push
lock
aas
pop
lea
aas
xor
sub
or
aas
pusha
fs
das
les
scas
movsl
push
fnstsw
adc
mov
shll
scas
outsb
inc
aad
ss
outsb
inc
xlat
adc
sbb
mov
outsb
rorl
enter
cmp
xor
and
add
aaa
or
call
call
push
jle
inc
mov
xchg
pop
jb
test
rol
and
pop
rcrl
sti
enter
aad
sbb
adc
push
leave
call
in
add
aad
cmc
push
xchg
fidivrs
and
add
test
inc
leave
add
aas
dec
movsb
bound
in
xlat
stc
decb
out
mov
mov
push
cwtl
mov
cwtl
adc
inc
faddl
cwtl
inc
add
lods
mov
sbb
sbb
in
rcr
mov
lea
cmp
push
mov
and
cmp
push
mov
jecxz
loop
mov
addr16
test
inc
cwtl
xor
jb
test
push
nop
sbb
inc
dec
mov
and
repnz
push
dec
push
or
inc
cwtl
nop
push
nop
dec
dec
nop
mov
mov
pushf
cwtl
jb
leave
add
cmp
add
popa
xor
aaa
insb
lcall
or
hlt
jne
xor
shrb
arpl
cmp
repz
mov
insl
inc
sub
addr16
mov
mov
and
popa
mov
test
add
addl
and
and
xorl
pusha
xor
int3
xchg
lods
aam
or
inc
or
pop
pop
iret
add
add
sub
add
pop
mov
addl
push
sbb
fmuls
jns
xor
aaa
int
or
iret
push
jmp
jnp
jno
das
mov
push
jg
mov
or
sbb
fsts
dec
jne
add
jno
pop
mov
clc
adc
movsl
jecxz
ss
rcrb
or
add
and
xchg
inc
cltd
js
test
mov
orb
sbb
ja
js
sbb
mov
push
sbb
cmp
adc
and
sbb
xchg
test
loope
imul
and
loope
pop
push
loopne
xchg
xchg
dec
sbb
les
loope,pn
shr
je
mov
fwait
pop
outsl
push
push
dec
adc
push
and
and
pop
dec
push
out
fnstsw
outsl
inc
or
jbe
repz
ret
cmpsb
outsl
ja
daa
loop
jg
lea
mov
jo
in
int3
pop
adc
jg
ffreep
lea
lea
inc
out
leave
inc
xchg
and
sub
fwait
mov
shrb
pop
xor
dec
cltd
xchg
movsb
pusha
jp
in
aaa
add
inc
push
negl
cmp
aas
ret
mov
shrb
lret
ret
mov
inc
cwtl
cmpl
popa
mov
rcr
xchg
sbb
sub
mov
push
aad
lret
and
inc
leave
test
loopne
adc
or
clc
xchg
cmp
cmpl
shlb
adc
xchg
loopne
leave
loopne
inc
jns
mov
lock
xor
xchg
pop
test
rcrb
in
mov
pop
mov
ds
or
hlt
push
mov
into
sub
dec
and
dec
test
or
add
mov
push
or
leave
cmp
bts
jmp
mov
cs
sub
push
jbe
fwait
mov
and
lods
imul
decb
js
add
inc
adc
and
cmp
and
cmp
xchg
idivl
inc
inc
inc
add
mov
pop
or
cmp
add
cmp
pop
xchg
sub
rol
push
mov
lret
out
add
xor
test
adc
lods
aas
xor
ficomps
cmp
jne
cmp
mov
add
add
inc
mov
add
inc
inc
or
loopne
cmp
andl
dec
mov
ljmp
mov
adc
or
and
jmp
cmp
nop
pop
subl
sbbl
test
lea
ds
xchg
in
xchg
inc
mov
cmp
jp
push
test
aas
pop
popa
fs
rcrb
xor
pop
roll
add
pop
adc
inc
or
andb
cmp
loop
jae
ja
adc
mov
sbb
and
icebp
sub
rcll
jmp
inc
or
int3
add
push
xchg
add
mov
fists
rorl
test
or
mov
loope
inc
out
movsb
lods
rolb
inc
push
cmc
fsub
sbb
cmp
adc
gs
ret
in
jmp
outsl
mov
jbe
add
sbb
gs
mov
inc
cmp
jg
inc
sbb
and
xor
pop
add
call
js
dec
and
adcl
lods
mov
cmpsb
ss
out
dec
adc
add
in
int3
or
xor
xchg
call
mov
mov
adc
add
push
pop
pop
add
lods
sar
notb
adc
lahf
and
push
push
pop
push
sarl
cld
enter
add
std
or
jne
dec
pop
dec
incb
pop
push
popf
shl
jnp
pop
adc
addr16
add
mov
call
adc
incl
mov
inc
pusha
loopne
pop
cs
je
cmp
in
add
dec
stos
dec
mov
add
mov
and
dec
cld
clc
daa
and
adc
or
aaa
popa
push
pop
jle
in
sbb
cld
add
or
cmp
sbb
or
jmp
or
push
mov
xor
adc
and
push
ds
and
cld
mov
clc
es
fcomi
js
mov
mov
popa
inc
mov
dec
fsubrs
clc
int3
pusha
mov
sub
fbld
sahf
mov
orb
jbe
int3
jae
cs
aas
lea
add
add
push
xor
out
scas
mov
cmp
lea
push
mov
push
jbe
andl
pop
mov
rolb
fldenv
or
push
movsl
rolb
pop
pop
lock
test
add
into
js
push
je
cltd
sub
mov
mov
push
sub
lea
push
fabs
mov
jbe
daa
mov
loop
and
sub
pop
dec
std
pop
adc
xor
and
aas
sbb
push
int
sarl
jle
lea
daa
test
hlt
orb
mov
dec
lock
dec
sub
add
pop
movb
lcall
das
xchg
pop
dec
inc
push
jle
sbb
jb
push
push
inc
add
push
xchg
pop
pop
movsl
pop
call
push
add
mov
ret
mov
xor
cmp
movsb
or
js
pop
sub
add
arpl
xor
faddl
add
and
testb
add
cmp
or
pop
pminub
rorb
and
into
sub
shll
cli
mov
xor
lds
adc
or
ljmp
jp
lret
pop
push
and
push
or
or
or
pop
push
and
cmp
pop
test
lock
sar
shl
add
nop
adc
bound
outsb
jecxz
mov
add
mov
inc
inc
jo
sbb
dec
daa
test
add
mov
mov
test
push
orb
jmp
mov
mov
jmp
lea
sub
cmc
push
jge,pt
cmc
rep
inc
sub
push
insl
or
or
xor
mov
out
cmpl
add
or
je
push
mov
sbb
lods
mov
cld
call
add
adc
out
pop
test
push
pop
sub
adc
mov
mov
mov
movsb
rorb
add
adc
movsb
cmp
imul
push
lcall
push
cmpb
or
shlb
push
shlb
xor
je
inc
movsl
inc
and
push
paddusb
sahf
mov
lock
fcmovnbe
dec
pop
sbb
cmp
inc
adc
out
repz
lea
test
not
push
lret
or
lea
dec
test
hlt
push
test
jb
jae
and
mov
mov
mov
mov
push
dec
mov
orb
xor
jge
sub
push
lock
jecxz
bnd
sub
int
dec
jbe
pop
enter
mov
push
cmp
add
fcoms
ret
fidivl
pop
arpl
in
xchg
xchg
das
push
push
in
xchg
es
pop
stc
sbb
add
jnp
in
push
sbb
inc
adc
push
sub
xor
add
fbstp
jmp
mov
sbb
loopne
in
loopne
inc
sti
cmp
mov
inc
inc
adc
cs
cmp
stc
cs
sub
pop
inc
dec
inc
pop
dec
dec
repz
mov
stos
aas
push
and
lods
out
insb
test
jb
fnclex
sub
sbb
mov
add
fnsave
mov
iret
jmp
addr16
mov
add
movb
inc
add
add
clc
stc
push
pop
sbb
jo
mov
push
leave
test
xchg
in
hlt
jle
enter
adc
and
sub
int3
add
jo
add
ficoml
sbb
testl
sbb
sbb
mov
into
mov
sbb
xchg
jge
inc
push
sbb
inc
clc
cmp
jne
add
xchg
push
test
and
subl
or
adc
add
jmp
data16
xchg
stc
jmp
xor
aas
ljmp
add
mov
out
jecxz
bswap
loopne
xor
add
inc
push
movsb
icebp
gs
ret
or
popa
call
adc
and
inc
pusha
adc
jno
mov
jge
sti
jle
jns
cmp
push
movsl
popa
sub
adc
pop
movsb
push
add
and
aas
clc
or
mov
lock
cmp
pusha
mov
insb
pop
lods
and
or
push
aad
adc
insb
dec
mov
jb
shl
subb
adc
pop
lea
adc
test
push
es
mov
sbb
in
push
shl
popf
scas
mov
lahf
add
jnp
shrb
push
enter
add
js
jb
mov
pop
xchg
fadds
ret
sub
xchg
add
jmp
sti
insb
rorb
rcl
addb
fdivrs
or
lock
mull
lsl
jmp
lock
push
push
inc
shr
rcr
shr
rcr
or
xchg
xchg
cmp
div
pop
dec
test
mul
pop
jb
cmp
or
cmp
or
roll
push
adc
stos
test
jle
neg
inc
lret
scas
enter
pop
ret
adc
ret
sub
je
sarb
xchg
stos
pop
jmp
jbe
and
mov
inc
adc
cmc
inc
in
addb
and
inc
xor
call
cwtl
jbe
xchg
or
xchg
icebp
cmpb
sub
pop
or
pusha
mov
mov
xchg
add
cmp
push
cmc
ljmp
stos
test
xchg
mov
repnz
adc
mov
dec
cmp
notb
adc
inc
and
add
xlat
mov
add
subl
mov
push
repz
xchg
inc
clc
pop
xor
inc
add
push
sbb
and
sbb
cmp
sbb
insl
and
out
mov
xchg
and
ret
ret
es
pop
ret
mov
push
lcall
and
and
add
xor
in
out
fildll
push
push
pop
nopl
imul
add
cmp
mov
sub
inc
loopne
xchg
popa
adc
ljmp
jne
push
add
test
out
cmp
pop
inc
cmp
mov
add
stos
adc
shll
popa
dec
add
push
fs
push
mov
fadds
dec
and
loope
or
pusha
and
or
pop
inc
push
inc
push
or
xchg
lret
movsl
mov
add
lock
adc
cmp
mov
or
pop
outsb
je
add
or
jge
dec
cs
xchg
jbe
and
in
rep
fsub
cmp
inc
and
sbb
sub
sub
mov
movsb
cmpsl
cmc
roll
add
cwtl
push
pop
cmpsb
mov
daa
loop
les
je
mov
sub
or
xchg
sub
mov
xor
sub
mov
imul
inc
push
push
add
mov
xchg
xchg
faddl
add
pop
push
imul
push
add
adc
pusha
iret
call
mov
sarb
ja
dec
fcompl
aam
sarb
push
data16
ret
push
je
mov
js
test
sub
push
mov
sub
push
mov
fcompl
test
int3
cmp
mov
lds
lods
int
mov
jmp
adc
outsl
push
lret
dec
jae
adc
imul
inc
push
lods
mov
xchg
jbe
dec
xchg
fdivrs
icebp
lock
nop
aam
xor
in
adc
inc
inc
fidivl
jge
add
aad
mov
movb
and
enter
jae
push
sub
push
into
sub
push
ljmp
cmp
jg
inc
jmp
mov
mov
data16
jne
imul
bound
fnsave
movsb
dec
push
inc
mov
enter
jno
in
dec
xor
jbe
je
dec
xor
je
mov
xchg
mov
rolb
xor
icebp
xor
pop
aad
and
mov
push
adc
and
add
adcl
push
stos
xor
mov
bound
sbb
sub
adc
jnp
lcall
jge
mov
sahf
jge
jae
add
push
and
mov
aaa
xor
or
scas
add
mov
push
pop
stc
xor
pop
inc
rclb
std
dec
add
mov
cli
and
shl
test
push
pop
pushf
or
shll
lcall
mov
cmpsb
ljmp
mov
jp
xor
sub
and
mov
cld
adc
ja
mov
sub
rol
clc
ret
adc
orl
and
mov
test
js
xchg
adc
and
orl
das
adc
push
gs
and
fildll
pop
cmp
or
cltd
sbb
rclb
pop
notl
stc
loopne
mov
stos
sub
inc
lock
popa
and
xchg
add
or
adc
outsl
xorb
fs
push
fs
and
icebp
jg
into
std
or
and
or
xor
mov
or
je
xchg
cli
adc
lea
lea
or
mov
jnp
out
sahf
pop
jbe
cmp
push
sbb
sbb
fmull
or
faddp
fiadds
loopne
push
pop
inc
mov
adc
adc
push
push
add
and
inc
jle
ret
mov
mov
mov
and
pushl
add
jno
push
cmp
andb
loop
mov
push
push
daa
shl
push
xor
jo
mov
push
dec
mov
leave
ds
arpl
ret
jmp
push
add
out
bound
enter
xlat
insb
enter
js
adc
add
or
jo
outsl
rol
jl
or
sbb
cmpsb
shlb
push
sub
add
jns
mov
pop
push
hlt
cmp
cmp
lret
cmp
and
movsl
pop
mov
xchg
and
pop
adc
test
aas
push
ds
call
add
xor
xor
loopne
repz
mov
jg
jo
scas
call
aam
sbb
in
rol
cmpsl
mov
pop
cmp
sahf
fs
add
sub
mov
xor
insb
je
sub
and
push
or
sub
ss
dec
hlt
push
mov
push
imul
adc
loopne
mov
jmp
imul
pusha
jg
lcall
stos
ret
add
adc
adc
scas
add
and
clc
das
xor
lock
mov
gs
adc
ds
rol
pop
ja
and
push
adc
adc
movsl
fisttps
jp
mov
adcb
add
ret
xor
adc
push
sub
ss
or
push
xor
lock
out
xchg
inc
mov
mov
das
ficoms
push
mov
cmc
pushw
mov
adc
sti
add
mov
inc
fsubr
es
outsl
subb
inc
jmp
mov
cli
popf
pushl
leave
xor
dec
sub
jg
sbbb
xchg
pop
cmpsb
daa
add
sub
adc
cmp
jge
and
inc
mov
push
orb
rorl
nop
decb
fsubrs
cmpsb
mov
or
loopne
icebp
cmpsb
mov
cmp
jecxz
aas
insb
popf
std
sub
push
lods
mov
cmp
andb
or
std
inc
jmp
push
mov
cs
push
or
xchg
aad
rcll
lea
and
cmpsb
nop
out
add
mov
aad
or
and
sub
add
fcoml
dec
sub
or
das
jl
incb
push
mov
movsb
andl
mov
fwait
mov
stos
popf
push
mov
scas
and
sbb
push
pop
mov
cmp
jle
jle
sub
cmp
xor
popf
shl
sbb
jmp
dec
push
in
jbe
cmp
inc
sub
jae
ret
or
cld
data16
ret
test
sbb
sbb
mov
sub
insl
xorl
mov
pop
jge
iret
rcrl
mov
fucomp
jge
negl
movsb
jne
repnz
cs
mov
jae
imul
sbb
inc
popa
cmp
and
dec
jo
xchg
rclb
outsb
js
push
bound
lahf
and
cmp
jnp
lea
push
and
inc
mov
xor
mov
push
movsl
jbe
sub
mov
mov
loopne
je
mov
loop
sub
in
mov
popf
es
insl
ret
repnz
sbb
add
or
loope
testl
fnsave
clc
inc
jmp
sahf
dec
dec
or
cmp
cmp
inc
cmp
and
dec
mov
ja
lock
cmp
or
jecxz
call
push
inc
jmp
cmp
int3
je
pop
xor
scas
mov
dec
push
adc
jne
stos
pop
rorb
aas
enter
stos
xchg
push
fsubrs
cwtl
jge
dec
aam
jb
dec
adc
loop
out
sub
cmp
cmp
mov
mov
pusha
movsl
sub
mov
out
in
mov
or
sub
xor
jne
add
xchg
mov
loope
add
ss
cli
int
call
add
aaa
or
and
add
mov
push
data16
movsl
xchg
cmp
add
enter
ret
cmp
mov
out
addl
jne
pop
neg
sarb
roll
dec
pop
daa
lea
nop
inc
mov
jne
inc
xlat
jae
inc
not
pop
mov
push
or
mov
xchg
aas
into
ja
mov
decb
adc
pop
inc
testl
out
jne
sbb
cs
lock
sub
decl
lret
jne
inc
or
pop
adc
cmp
pushf
and
iret
int3
lcall
and
pop
xchg
nop
fwait
add
cwtl
xchg
test
push
pushf
insl
fildll
push
lea
lcall
test
mov
adc
clc
and
cld
sub
mov
cmp
jb
mov
push
mov
inc
ja
mov
incl
cmpl
insl
mov
xchg
pushf
xor
imull
movsb
mov
sbb
sti
jg
adcl
add
xchg
loop
sub
in
shll
shr
pop
insb
ljmp
ljmp
push
adcb
mov
bound
or
adc
inc
mov
lea
xchg
mov
aaa
or
ljmp
jg
and
shrl
shl
shr
or
mov
mov
adc
sahf
dec
mov
jne
outsb
mov
mov
aam
das
mov
push
sub
push
cmp
sub
jne
xchg
jo
sar
sub
rcr
loopne
aaa
xchg
fiaddl
mov
pop
inc
jo
fiadds
push
out
jmp
mov
in
aad
fisubrl
push
lds
add
dec
mov
mov
mov
and
push
int3
jmp
hlt
push
or
daa
mov
inc
add
outsl
popl
lods
test
ljmp
ret
jne
add
add
add
or
xorb
dec
adc
jmp
sub
test
sbb
sub
repnz
movups
xchg
pop
xchg
jo
mov
inc
mov
mov
inc
sbb
add
out
add
and
push
ret
or
iret
repz
test
enter
push
out
imul
ret
call
mov
or
add
testb
adc
sbb
mov
dec
jecxz
sub
push
outsb
clc
add
pop
int3
sbb
jne
xchg
pop
jno
mov
arpl
cmp
mov
add
xor
add
faddl
or
cmp
pop
test
arpl
pushf
add
or
jne
dec
fld1
mov
push
add
mov
sbb
dec
adc
jo
in
ret
mov
rcl
repz
inc
sbbl
mov
push
outsb
cmp
mov
xchg
std
insl
ret
dec
mov
mov
pusha
xchg
inc
mov
test
pop
pop
lea
adc
fwait
mov
imul
rorl
sbb
push
andl
pop
add
insl
fs
xorl
inc
outsb
test
or
pop
call
inc
outsl
pop
rcl
dec
sar
pop
rorb
lret
mov
sbb
push
jno
iret
jmp
sbb
hlt
andb
loope
cwtl
pop
mov
xchg
inc
lahf
cmpsb
jns
movsb
lods
movsb
adc
mov
test
sahf
add
push
add
or
push
lock
shrl
dec
xor
push
lcall
xor
or
repnz
mov
pop
jmp
ret
jmp
mov
imul
push
xchg
or
jmp
mov
in
sti
cld
add
push
in
add
or
fs
cmp
movsb
iret
lock
inc
loope
push
lea
std
jg
iret
add
leave
sar
mov
aas
or
testb
adc
andl
sub
mov
adc
test
cmp
lret
loope
cmp
pushl
push
mov
mov
sbb
cltd
lods
loop
inc
loopne
inc
pop
ret
test
sub
in
loopne
clc
subb
inc
pushl
mov
rcll
jmp
pusha
cmp
mov
cmp
cmovb
popf
and
pushw
push
sub
xchg
enter
push
inc
mov
add
add
mov
js
mov
mov
add
fists
outsl
adc
push
hlt
mov
andl
test
sbb
outsb
jmp
and
jae
pop
imul
sub
add
mov
enter
scas
fsubs
in
adcb
popa
xchg
inc
adc
fadd
inc
call
jmp
mov
adc
dec
inc
outsb
mov
push
dec
hlt
lea
pop
or
inc
pusha
jge
cmp
pusha
xchg
sbb
lea
addb
jns
lock
movb
rcr
pop
add
cmpsb
inc
mov
shrb
jo
not
mov
incl
cmpsb
int
push
test
push
or
add
jmp
cmpsl
mov
sbb
cmp
test
jne
gs
inc
xor
mov
pusha
cmpsb
sbb
pop
ret
jnp
sub
push
jmp
sub
inc
sub
inc
cmc
scas
dec
mov
jl
pusha
dec
iret
test
arpl
mov
addb
add
pop
cld
jnp
mov
std
sub
jge
mov
mov
inc
mov
sbb
add
xchg
dec
xor
enter
or
out
ret
and
mov
std
xchg
clc
jo
inc
lret
movsb
adc
dec
xor
jae
mov
pushf
loopne
imul
jmp
sbb
push
addl
pop
movsb
lds
xchg
and
out
sub
jne
jge
dec
cmp
ret
sub
clc
and
les
push
xor
jne
push
sbb
shlb
and
jns
add
or
adc
fiadds
into
jg
sbb
movsb
or
pop
data16
mov
test
sub
sbb
and
or
and
add
mov
movsl
sub
push
jne
sbb
adc
xchg
inc
rolb
push
cmp
jmp
mov
lock
dec
test
push
shrb
adc
lock
enter
lods
std
cmpsb
test
inc
push
es
andb
sub
fiadds
mov
mov
test
or
mov
jg
jmp
push
mov
and
mov
sbb
pop
xchg
aas
push
jae
adc
inc
lods
cmp
out
sub
mov
cs
loope
pop
negb
add
ret
mov
fidivrs
adcl
rdtsc
andb
cmp
lret
and
sbb
into
push
xchg
cmpsb
or
jmp
les
test
or
mov
cmp
sub
pop
test
icebp
and
or
lds
les
lock
loope
inc
ss
icebp
jbe
lret
jmp
sbb
mov
addr16
xor
adc
orb
mov
push
fsubl
inc
out
or
xor
inc
mov
mov
fwait
dec
test
xchg
add
add
xor
cmpb
int3
inc
popf
mov
mov
mov
mov
adc
fcompl
push
nop
mov
mov
and
cmp
mov
jns
shlb
or
xchg
push
inc
push
mov
push
adc
pop
xor
es
aaa
scas
lock
je
aaa
inc
insb
pop
cmp
aad
mov
mov
jmp
test
push
and
enter
jl
add
jg
jmp
addl
js
pop
sbb
xor
shr
or
aaa
mov
cmp
cmp
loope
add
mov
jle
ljmp
jb
ret
mov
add
inc
lcall
adc
or
clc
pop
adc
push
inc
mov
dec
ret
pusha
push
sarl
inc
mov
dec
addl
push
xchg
push
dec
lret
push
or
loope
jmp
xor
xor
mov
dec
add
adc
test
rclb
push
into
push
and
jecxz
lahf
les
cmp
and
pop
add
cmp
sbbb
xchg
data16
push
and
testl
jb
daa
or
sub
inc
nop
mov
add
sbb
and
addr16
push
loopne
push
inc
dec
pop
shl
mov
daa
mov
mov
and
inc
jl
mov
scas
add
inc
lods
xchg
sbb
data16
rcrl
push
andl
sbbb
add
push
inc
in
in
push
mov
or
fdivl
push
enter
mov
jo
or
push
out
and
pop
cwtl
push
jne
push
jge
mov
out
int
xor
pop
movsb
dec
rcrb
or
fcoms
cmp
lcall
push
pop
inc
inc
pushf
or
sbb
mov
adc
ret
std
add
test
push
push
push
jnp
xchg
pop
pop
jne
pop
push
pcmpeqw
sbb
add
adc
or
js
or
in
or
mov
xchg
mov
adc
xor
lret
les
push
jmp
cwtl
clc
pop
dec
cmp
mov
in
incb
mov
or
push
dec
icebp
imul
add
adc
adc
mov
imul
dec
or
in
xchg
and
or
cmpsl
shrl
clc
mov
fadd
or
push
sbb
dec
cmpb
pop
dec
and
push
push
jne
jge
push
rcll
test
xor
cmpl
push
mov
or
movsl
sbb
fisubl
or
jmp
nop
or
cmpl
and
adc
push
mov
mov
mov
mov
sub
pop
push
mov
adc
jno
lods
in
mov
jge
add
cmp
test
xchg
push
and
sub
cwtl
or
int3
mov
jo
inc
mov
pop
inc
fnstsw
mov
sbb
inc
mov
or
in
in
out
add
or
bound
adc
adc
icebp
cmovnp
pop
add
loopne
jmp
cwtl
or
les
xchg
das
mov
or
cwtl
daa
push
adc
jmp
jbe
or
push
test
mov
inc
inc
dec
cld
movb
roll
das
out
sub
inc
pushf
xor
mov
ret
add
add
bound
inc
loop
push
push
pop
and
sbb
pop
add
adc
or
stc
jb
ljmp
xchg
inc
stos
sub
call
add
push
orb
mov
xorb
or
clc
jnp
cmpsl
or
add
inc
in
test
pushf
push
jne,pn
arpl
sub
or
add
out
and
inc
fsubs
movsl
out
add
rcr
nop
subl
shl
sbb
aad
je
jl
xor
push
ret
sub
pop
inc
test
cld
pop
in
cmp
jne
cwtl
add
add
xchg
xorb
test
mov
push
adc
jge
mov
rcrb
push
movsb
xor
mov
pop
mov
mov
dec
cs
and
ljmp
fistpl
incb
or
je
sarb
inc
cmp
mov
movsb
push
sub
add
push
mov
dec
jp
sbb
or
imulb
mov
orl
and
sbb
cmp
mov
fdivl
mov
add
in
cmp
lahf
daa
testl
lods
jle
lcall
scas
adc
fisttpll
call
jne
stos
out
repnz
sub
pop
or
inc
mov
add
stos
clc
adc
jle
out
arpl
mov
mov
movsb
dec
mov
sbb
mov
inc
add
enter
xchg
out
lret
adc
sbb
iret
add
jg
cmp
call
les
jae
add
loope
mov
jo
push
push
in
xchg
pop
sbb
addr16
addr16
ljmp
and
add
mov
adc
jo
jecxz
cltd
mov
or
cmp
cmp
adc
in
jbe
ss
in
in
sub
xor
int
loopne
cmp
inc
leave
leave
in
movsb
and
inc
cmovs
leave
leave
push
push
pop
add
jb
fs
jb
je
jl
iret
sbb
add
adc
fs
dec
mov
xchg
cwtl
pushf
dec
es
mov
dec
repnz
xor
enter
leave
and
es
xchg
dec
xor
in
xchg
dec
xor
in
aam
hlt
dec
xor
and
cld
add
inc
jo
inc
add
add
xor
or
adc
and
sbb
and
and
dec
sub
and
dec
xor
cmp
xchg
dec
roll
dec
dec
es
jbe
mov
daa
cltd
fs
pop
pop
pusha
sbb
cmp
jg
pop
add
add
or
add
test
push
rorb
xor
mov
xor
lcall
mov
and
adc
nop
adc
rorb
sbb
xor
and
and
cmp
cmp
mov
dec
rolb
int
xor
dec
int3
add
sub
enter
pop
sbb
mov
adc
add
loope
js
ret
and
and
jmp
or
pushl
je
dec
repz
sub
fcom
sbb
pop
push
or
jle
dec
sub
pop
add
xchg
xor
sub
faddp
jle
xlat
mov
lret
and
sbb
dec
xchg
add
or
or
out
and
mov
mov
or
not
xor
loope
xor
and
pushf
sbb
or
jmp
xchg
fucomi
add
and
rcl
add
test
js
add
fcoms
adc
xchg
test
dec
cmp
fcmovbe
xor
ss
mulb
shll
and
test
rorl
or
sub
or
call
add
pop
orl
lret
jmp
inc
popf
mov
mov
cld
mov
and
jae
mov
sbb
add
or
dec
or
jg
dec
clc
or
or
inc
and
sbb
es
inc
ljmp
aas
pusha
mov
pusha
loope
pop
add
push
jmp
sbb
xchg
push
sahf
sub
pop
fstp
cmp
ds
pusha
fldl
cmp
jmp
mov
loope
dec
jg
testb
dec
in
mov
adc
sti
add
pop
jns
testl
fistpll
xchg
sub
mov
imul
jne
orl
and
adc
or
add
add
out
and
sbbb
or
jnp
jb
sbb
jmp
push
and
or
push
or
std
fwait
adc
inc
push
fstps
jmp
fisttpll
sub
adc
fldt
aam
outsl
loope
push
hlt
adc
push
stos
push
jbe
je
adc
divl
push
sbb
push
cmp
push
xor
test
or
add
push
or
inc
call
loope
push
aaa
sbb
mov
test
out
cmp
pop
add
rolb
fsubr
dec
sub
sub
jmp
sub
jb
jp
push
or
das
add
lods
sbb
test
das
add
sub
dec
add
mov
rclb
mov
inc
mov
dec
xor
mov
push
add
mov
add
sbb
in
or
test
xchg
mov
frstor
jne
repz
mov
push
mov
test
rcll
jg
data16
pop
xchg
scas
cld
aam
xchg
mov
cli
shrl
ficoml
orl
stos
xchg
sub
jle
jp
addr16
push
pop
jmp
pop
data16
lock
icebp
lock
pop
lcall
cmpsb
mov
sbb
jae
push
pop
cwtl
out
add
addr16
jle
push
add
push
sarb
sarl
fistps
and
pop
mov
jmp
push
pop
adc
adc
ret
and
lcall
add
outsl
add
dec
pop
fsubs
inc
cmp
je
sbb
fmull
pop
cltd
cmpsb
imul
and
hlt
adcl
and
je
pushf
sub
cmpsl
add
scas
stos
and
or
sti
dec
and
out
push
cmp
fstpl
inc
popa
add
fsubrp
mov
mov
leave
dec
inc
outsl
mov
and
lock
add
test
popa
inc
js
or
or
mov
ss
jle
or
fildl
sub
xchg
cmp
sub
lock
or
add
or
mov
cmp
adc
jae
mov
and
jbe
shrb
push
das
adc
inc
cmpb
scas
mov
imul
push
xchg
or
jl
push
jno
addb
add
push
or
mov
out
jne
je
mov
xchg
loopne
jecxz
into
shlb
dec
add
push
cmp
add
shufps
mov
stos
xchg
lret
lock
or
sbb
decl
add
push
mov
sub
into
pop
out
addr16
mov
sbb
inc
andb
ret
lea
sub
enter
test
dec
out
fld
fucomp
pop
fnstcw
lahf
add
mov
mov
xchg
orl
dec
pop
and
mov
adc
sbb
shll
push
or
js
mov
adc
add
or
push
out
mov
sbbl
or
or
push
and
jo
mov
sbb
sub
or
sub
push
sbb
hlt
mov
dec
ljmp
xchg
jnp
fnstsw
movswl
shll
inc
flds
and
rorb
xchg
xor
fdivl
or
insl
lahf
and
mov
push
push
mov
or
or
nop
fcmovnbe
fwait
mov
adc
sbb
pop
mov
adc
repnz
jp
sbb
lea
movsb
fldpi
xor
mov
or
sbb
adc
add
sbb
push
lret
dec
sbb
xorb
push
cmp
xsaveopt
pop
insl
test
mov
mov
cmp
or
andl
pop
popa
cmpsl
xchg
out
jmp
and
loopne,pn
insl
mov
push
jg
xchg
int3
or
cmpsb
test
mov
dec
int
mov
jo
and
stos
push
pop
inc
js
test
lock
mov
nop
es
mov
inc
mov
popa
mov
sbb
sahf
adc
push
ja
inc
mov
test
sbbl
push
pushf
add
lcall
dec
sbb
imul
mov
add
jo
fwait
mov
rorb
je
push
cmpb
test
repz
push
sti
jbe
xchg
les
test
pop
js
adc
daa
xor
push
jb
sub
or
loope
push
mov
add
jne
lret
pop
les
inc
std
cmp
stos
or
or
mov
dec
imul
dec
push
or
inc
cltd
lock
add
jle
sub
pop
test
test
sti
into
jne
mov
mov
mul
pop
test
in
sub
jl
mov
xchg
fisubrs
stos
stos
jp
pop
pop
push
movl
jbe
cmp
push
test
rorb
push
mov
push
push
pop
add
popa
gs
xor
cmp
ret
dec
or
sbb
fiadds
mov
pop
mov
lret
push
inc
xor
rolb
ljmp
lret
loop
rolb
cmpl
and
fwait
sti
std
dec
dec
pop
pop
and
mov
out
mov
fsub
iret
loopne
adc
iret
jbe,pt
dec
imul
outsl
mov
add
cs
or
and
clc
sbb
sub
cmp
inc
dec
inc
push
pop
addps
add
lock
sahf
jns
add
sarb
and
mov
mov
or
cmp
pop
pop
clc
in
cmpl
add
xor
daa
or
idivl
pop
or
push
js
sub
inc
aam
iret
inc
mov
dec
xor
cmp
pop
addl
das
das
call
inc
loopne
dec
aam
lock
shl
sub
sub
in
lea
xor
adc
iret
push
ds
push
or
dec
dec
scas
and
aam
out
ret
xchg
and
inc
loope
test
fwait
or
pop
sub
mov
sbb
mov
and
lahf
or
cwtl
pop
jb
xor
push
and
test
lods
daa
dec
fbld
sbb
test
arpl
dec
cwtl
rorl
loopne
rcrl
dec
xor
cmc
and
sbb
add
jmp
pop
push
push
jb
or
add
mov
cmp
push
daa
jo
sbb
cmc
hlt
cmp
sub
push
aas
mov
sbb
xor
mov
inc
ret
frstor
jge
lock
movsb
addr16
das
cmp
test
arpl
arpl
daa
add
shll
sub
andps
cmpl
lock
stos
pusha
out
into
out
add
test
icebp
es
mov
and
mov
sub
mov
and
jge
mov
dec
lods
shl
test
cld
pusha
mov
jo
or
xor
xor
inc
or
fisubs
dec
add
lret
nop
lret
or
inc
lock
and
push
or
cs
or
sbbl
push
xchg
dec
push
in
inc
push
sub
mov
push
jne
in
push
mov
push
pop
dec
sub
pop
mov
push
pop
adc
mov
or
lock
dec
lret
push
adc
mov
or
stc
add
jbe
pop
jne
cmp
js
add
das
xor
es
mov
jle
inc
mov
fmuls
stos
mov
adc
or
repz
nop
mov
fcoms
xor
sti
scas
push
mov
xchg
cmp
insb
idivb
pop
inc
cs
or
ss
cmp
je
or
clc
mov
xor
mov
dec
add
mov
add
sbb
sbb
add
or
mov
imul
add
add
sbb
and
fcompl
fistpll
jb
inc
adc
cltd
dec
enter
outsb
push
and
das
push
inc
leave
into
mulb
inc
iret
test
add
adc
push
jbe
xchg
or
xor
popl
loop
xchg
xor
adc
adc
push
add
adc
cmp
xchg
xchg
xor
sub
rol
fadds
or
sub
rcrl
or
fdivs
or
jle
xor
scas
cmp
ret
scas
dec
loopne
push
pop
sbb
rorb
sub
dec
adc
inc
les
sub
mov
popf
mov
inc
cmpl
mov
aam
shlb
sub
adc
push
pop
xchg
jecxz
adc
or
sbb
xchg
add
lods
ja
push
xor
jmp
sub
add
mov
mov
aad
sbb
mov
cmpsb
push
hlt
mov
mov
inc
aam
das
fsubrl
mov
fadd
inc
add
fs
cltd
popa
cmp
push
lcall
or
rcrb
testb
lcall
fldt
push
push
mov
daa
test
insb
in
jns
and
dec
or
xchg
push
mov
or
pop
gs
cmp
adc
movsl
and
and
mov
iret
ret
jmp
aad
and
scas
jmp
sbb
sub
adc
ja
add
adc
movsb
push
push
adc
shlb
or
lret
sbb
inc
sbb
pop
gs
or
mov
jmp
inc
shll
out
pop
xor
test
push
fadd
xor
xchg
mov
pop
add
xchg
test
mov
stos
cmp
jge
adc
cmp
push
inc
and
jb
xchg
ss
mov
or
mov
cli
mov
enter
or
or
adc
cld
push
and
fstpl
mov
or
jne
jb
sub
imul
lea
xchg
sub
cmp
inc
bound
cmc
mulb
test
sahf
push
add
sub
dec
sbb
test
enter
js
andb
bound
pushf
std
das
fdivrl
sub
leave
and
add
or
sbb
movb
and
mov
xchg
movsb
mov
neg
sbb
mov
adc
and
adc
jg
ret
pop
hlt
es
bound
shll
add
xor
popf
gs
or
dec
subb
pop
fidivrs
daa
and
call
xor
push
jb
add
cwtl
push
inc
aam
fisubs
or
mov
fldt
ja
setns
mov
or
xor
push
add
dec
loopne
push
clc
gs
sbb
rolb
fadds
movb
cmp
xchg
push
adc
fs
cld
add
inc
mov
enter
mov
dec
cmp
jge
mov
jl
movsl
clc
cwtl
xor
mov
mov
xor
out
andb
cmp
push
shr
pusha
cmp
subl
incb
push
adc
sahf
xchg
add
daa
and
ficompl
lock
push
ret
mov
xor
jo
out
shl
dec
nop
in
and
push
ret
in
sbb
js
jg
or
or
jmp
adc
or
shl
fimull
jle
cmp
jl
mov
fcmovb
jb
xchg
xchg
sbb
add
cwtl
push
in
lock
or
add
rcll
dec
dec
inc
dec
pop
rorb
sub
jb
or
sbb
cmp
sarl
in
in
icebp
push
orl
jo
and
and
adc
es
mov
dec
adc
push
loopne
mov
mov
push
inc
cmc
movw
shlb
push
jle
jmp
cmpb
push
sbb
lods
add
jmp
lock
sahf
fwait
lods
inc
enter
cmpl
neg
call
adc
lock
cli
ret
aaa
push
lods
sbb
pusha
addb
inc
mov
aas
mov
push
push
insb
shrl
lock
repnz
je
aad
or
inc
and
jbe
adc
addb
bound
or
push
push
mov
addb
sbbb
jne
push
adc
bound
nop
cmp
pop
sbb
sbb
push
sub
cmp
sbb
enter
push
lock
push
push
scas
sbb
out
dec
out
sbb
add
loopne
jge
inc
or
pop
inc
mov
mov
push
add
sub
add
cmp
sbb
mov
ds
andb
fnstenv
outsb
outsb
mov
pop
or
pop
data16
in
add
imul
lds
aaa
inc
popa
je
inc
je
dec
add
add
cmp
xor
xor
sub
pop
sub
int
mov
sbb
push
mov
add
xchg
and
addb
bound
add
sbb
inc
mov
mov
and
arpl
add
pop
cmp
push
mov
or
sbb
test
and
out
ds
and
insb
daa
push
adc
cmpsb
xchg
cmpb
jne
nop
cwtl
mov
testl
cwtl
push
xchg
sarl
push
fprem
popa
sbb
hlt
adc
test
push
inc
dec
mov
mov
cmp
notl
ljmp
inc
mov
hlt
ja
in
and
mov
popl
mov
sub
add
aam
mov
lea
and
add
inc
test
setnp
jno
dec
sti
push
test
loop
push
pop
pop
decl
xor
gs
sub
and
stos
sub
ror
mov
std
es
pop
ret
push
addb
adc
xchg
movsb
jle
or
mov
and
fidivrs
aam
jbe
add
cmp
push
sub
test
sub
movsb
push
mov
pop
inc
mov
cmp
nop
xchg
adc
and
dec
fwait
xchg
mov
mov
cmpl
mov
rclb
cmp
cmp
mov
push
mov
fsubrl
or
mov
pop
pop
adc
mov
lock
pop
pop
pop
dec
sar
add
jl
cmp
enter
loope,pn
test
jb
adc
test
mov
ss
mov
sbb
dec
je
dec
push
push
or
hlt
jmp
or
jmp
add
inc
out
add
xchg
orl
pop
adc
fistps
dec
ja
imul
sbb
push
adc
pop
ret
rorl
add
psllw
ret
stos
data16
test
leave
js
add
dec
mov
arpl
mov
dec
xor
gs
sbb
loopne
call
sbb
cmpsb
enter
loopne
cmc
int3
push
fidivl
outsl
mov
or
rcrb
fmuls
xor
mov
jle
stos
test
or
jnp
and
adc
fiaddl
into
or
mov
sub
xor
xor
pop
and
stc
push
adc
pop
mov
mov
stos
dec
xchg
or
or
and
pusha
outsb
add
sbb
repnz
jmp
inc
add
add
call
rorl
or
ljmp
add
ja
loop
clc
shr
add
or
xor
add
shr
or
mov
push
push
adc
fistpll
shr
lret
add
mov
testb
test
or
add
mov
mov
mov
cmp
pop
cmp
and
add
jl
adc
movsl
dec
in
sbb
cmp
or
dec
push
inc
lcall
adc
and
sbb
inc
fisttpl
cmp
dec
sbb
adc
adc
sub
xor
inc
sub
call
xorb
push
rorw
cli
and
push
rolb
or
add
mov
cmpb
addr16
aam
cmpsb
and
xchg
or
orl
test
sbb
gs
inc
stos
xor
push
loope
pusha
fmuls
mov
fsubrl
add
cmpsl
std
sbb
jne
mov
sbb
dec
roll
or
cmpsb
or
xchg
or
push
pop
je
data16
sub
inc
data16
lea
outsb
sbb
dec
or
lock
pop
add
orb
loop
leave
mov
sbb
push
inc
test
loope
aaa
push
sub
pop
dec
mov
lea
repnz
sub
ret
faddl
pop
or
cmc
mov
xchg
add
lret
pop
cmpsb
fs
subl
popa
mull
push
stc
and
or
adc
ret
mov
and
jno
or
adc
insl
mov
jo
fdivrl
ja
pop
pop
xor
stos
sbb
pop
and
and
loope
pop
adc
test
xchg
repnz
ret
mov
sub
add
jbe
ljmp
dec
xchg
xchg
dec
icebp
adc
add
sub
push
adc
sbb
mov
and
xor
or
js
or
js
jmp
clc
sbb
mov
and
mov
scas
faddl
out
add
aam
sbb
add
pop
je
add
xor
adc
addb
movsl
xor
cs
dec
cmp
mov
push
std
inc
or
and
subb
sub
push
add
mov
cmp
and
or
ds
mov
sbb
add
call
ss
imul
push
inc
adc
loope
rolb
push
pop
and
add
leave
cmp
xor
aad
enter
cmp
in
mov
cmp
jle
inc
call
ja
shlb
jp
stos
or
cmpsb
sbb
mov
fwait
inc
xor
fucomi
mov
xchg
adc
test
and
jl
xor
ss
add
xor
inc
aam
push
or
xor
rclb
stc
push
test
or
jns
push
in
jmp
add
test
and
push
dec
test
insl
fwait
orb
and
aaa
jne
cmpsb
sahf
and
push
cmp
sub
mov
aas
jmp
mov
adc
lret
mov
jnp
imul
inc
dec
add
addr16
jbe
rclb
rorb
add
ret
or
and
sbb
fprem
out
roll
leave
add
or
je
mov
iret
push
inc
cmpsb
add
adc
inc
sbb
xor
les
bound
enter
ror
xchg
add
movsl
sti
lods
pop
xchg
adc
pushf
jo
subb
mov
lret
arpl
popa
sbb
rorl
jo
orb
scas
mov
push
dec
add
jg
jg
dec
jge
inc
inc
push
neg
neg
cmp
jnp
fcomps
sbb
inc
ss
shlb
sbb
xchg
fwait
mov
xorl
push
push
or
pop
adc
and
fnstenv
imul
push
jnp
adc
sbb
mov
add
or
jns
mov
dec
jne
pop
pop
pop
aam
shll
adc
xchg
test
lods
rcl
ljmp
shr
sub
cmp
adc
shr
pop
push
idiv
and
maskmovq
cld
lock
je
pop
pusha
or
clc
rorb
push
shrl
cmp
addr16
dec
or
fidivrl
pop
add
jae
adc
movsb
into
xor
adc
inc
cli
xor
dec
push
es
pop
or
push
or
aad
mov
into
jbe
rclb
aam
aas
xor
scas
je
hlt
dec
and
adcl
sarb
sbb
dec
inc
push
outsb
rolb
inc
cmp
cmovae
or
jg
popa
add
arpl
insl
or
sbb
adc
jecxz
dec
pop
pop
andb
test
data16
pop
add
push
ljmp
cld
inc
ss
adc
sub
and
pop
adc
popa
xor
out
cltd
movsb
cmp
cld
mov
enter
fcmove
jne
pop
cmp
inc
jmp
sub
add
rolb
inc
push
inc
mov
mov
sbb
or
mov
or
sub
adc
decb
add
es
mov
je
ljmp
subb
jl
out
push
cmp
ja
add
cmp
inc
xchg
jns
ret
cmp
jne
sarl
je
xor
adc
mov
inc
mov
pop
jl
pop
pop
je
dec
push
adc
adc
adc
iret
and
jb
dec
adc
push
and
push
mov
add
imul
or
fdivr
aas
cs
fisttps
push
movb
jmp
or
cmc
push
aaa
and
sti
add
mov
mov
jl
xchg
ret
mov
movw
jb
add
sub
inc
rcrb
les
out
xor
pop
mov
popf
testb
sbb
ret
mov
lods
sti
test
add
test
mov
fdivr
inc
jb
dec
mov
push
and
adc
rorb
adc
push
add
pushf
add
jmp
push
pusha
loop
mov
sub
push
imul
call
mov
imul
lea
sar
cs
mov
dec
into
movswl
xor
mov
neg
push
es
stos
mov
out
jge
cmp
mov
ret
inc
call
cwtl
inc
xorl
push
rcll
dec
sti
add
jmp
addr16
or
cwtl
mov
push
sub
inc
fwait
and
jl
mov
or
dec
jle
repnz
lcall
mov
mov
mov
mov
and
and
lea
out
daa
adc
andl
lcall
mov
mov
addl
ja
cmpsl
cmc
mov
dec
rorl
inc
testl
lahf
push
push
fsubrl
mov
xlat
or
inc
adc
loopne
lea
rolb
xorb
inc
mov
bound
scas
les
dec
or
xchg
pushf
fcoml
dec
or
adc
into
movsb
xor
sub
xor
cmp
lods
sarl
repnz
sub
sub
xchg
mov
xor
pushf
push
mov
jl
lods
fwait
cmpsb
jge
inc
lods
and
rorb
aas
jae
jle
cmp
decl
popa
add
rolb
rol
nop
popf
loope
pop
or
and
rorb
lods
sti
sub
sbb
push
lret
rcrl
inc
mov
fadds
push
dec
mov
jle
cwtl
shrl
sarl
shr
or
mov
dec
mov
pushf
ret
jp
cmc
cmp
lock
dec
and
jnp
repnz
add
cli
adc
repnz
repnz
rol
and
andl
loopne
rolb
es
push
fcom
or
cli
adc
and
fisubrl
popa
push
mov
dec
dec
nop
loopne
mov
push
fidivl
fldenv
enter
pop
and
or
push
pop
lret
enter
sahf
out
inc
mov
mov
dec
sbb
add
push
mov
or
inc
shll
clc
out
icebp
push
dec
dec
jge
out
mov
jb
pop
sub
jnp
adc
dec
in
aam
daa
adc
jne
cli
or
rcrl
fistl
inc
shlb
fdivrs
aam
enter
int3
jbe
dec
sub
movsb
sub
sbb
shlb
add
and
adc
dec
pusha
or
fmull
or
dec
rcll
mov
sbb
fcmovu
add
mov
or
inc
rcrb
cmove
add
xchg
add
idiv
and
xor
adc
mov
into
or
adc
inc
inc
mov
lock
and
repnz
add
inc
js
pop
hlt
lock
or
incb
jne
jne
cltd
add
loopne
pop
roll
sbb
lret
mov
dec
cmc
out
pusha
add
sbb
sub
xchg
sbb
idiv
xchg
mov
inc
add
inc
mov
dec
inc
cmp
jle
inc
aaa
stos
ljmp
sub
and
cltd
and
or
cmp
in
or
rcrb
stos
call
sahf
mov
xchg
cli
fcoms
xor
fiadds
mov
insl
call
mov
imul
call
leave
outsb
xor
mov
pusha
lea
push
js
dec
loope
mov
mov
add
lcall
add
fisubs
lods
jbe
add
into
sbb
or
ja
enter
loop
mov
sbb
sti
je
inc
ss
ljmp
or
lods
add
enter
outsb
fwait
pop
push
sahf
mov
and
dec
int3
addl
cmpsl
sub
test
call
add
add
xchg
add
into
or
mov
inc
ljmp
jmp
pop
add
dec
inc
sub
jge
add
jmp
cmpb
or
add
dec
cmp
repnz
inc
dec
add
add
fadds
and
mov
pop
and
sub
mov
jp
jne
loopne
roll
or
or
add
cmp
ja
dec
sub
add
add
add
push
mov
enter
mov
mov
fisubrl
mov
or
push
fcoms
test
outsb
or
stc
lret
add
or
push
push
das
push
movsb
adc
pop
or
or
imul
fdivrl
pop
scas
je,pt
or
ret
sbb
adc
mov
inc
cld
mov
ret
movsl
shlb
orl
pusha
inc
adc
jae
test
inc
pop
mov
mov
iret
enter
xor
into
pusha
inc
std
rcrl
and
pop
pop
in
cltd
lea
pop
cmpps
ret
dec
inc
prefetchw
sahf
inc
ret
or
push
lea
add
scas
rolb
xor
jbe
jne
or
or
mov
and
movsl
push
or
inc
je
pop
mov
pop
rol
push
je
lret
mov
or
sub
rcrb
add
stc
sahf
jnp
adc
jne
and
mov
lock
test
add
push
add
shlb
ret
cmp
cli
cmp
ret
mov
jl
add
movsl
ret
fldenv
sub
adc
nop
clc
mov
inc
es
nop
test
sbb
pusha
xor
push
scas
addl
push
or
mov
mov
fadds
inc
es
and
out
or
in
clflush
jge
pop
mov
repnz
test
lcall
or
adc
pop
addr16
add
fiadds
mov
sbb
xor
in
lock
inc
jg
into
into
and
mov
fisttpll
sarb
push
pop
arpl
push
outsl
nop
pop
sahf
pop
mov
aam
mov
daa
mov
or
sbb
stos
push
lret
fcoms
loope
pop
xor
push
adc
lock
hlt
add
leave
jge
sbb
cltd
push
pop
addr16
add
movsl
movsb
adc
adc
outsl
pop
test
mov
and
movl
inc
shl
or
cmp
pusha
sub
sbb
mov
push
outsb
jb
lret
int3
popa
push
sub
xor
pop
sbb
add
jno
add
mov
lahf
xchg
xchg
rol
ret
mov
les
sbb
add
clc
cwtl
pop
test
xchg
sbb
inc
and
ds
aaa
mov
mov
rcrl
in
popa
dec
arpl
jge
xor
push
cli
add
je
cmp
cmp
cs
xor
jo
div
gs
cmpb
addb
dec
jo
sarl
cmp
sbb
je
dec
fistl
call
cmp
je
test
icebp
fmuls
sub
icebp
mov
or
cmp
jbe
dec
or
sbb
mov
pushf
pop
out
mov
adc
mov
andl
xor
push
or
aam
sbb
jle
out
addl
push
les
and
gs
test
daa
push
add
push
mov
inc
pop
adc
loopne
cmp
js
add
and
pushl
push
fistl
fists
xor
mov
pop
fnsave
pop
and
shrb
xor
or
shrl
add
adcb
rclb
inc
popf
inc
popa
adcb
test
rcll
add
and
dec
cmpsb
push
xor
sbb
out
ljmp
jne
xchg
fidivl
dec
inc
push
aaa
sbb
dec
mov
scas
push
xlat
mov
ret
add
cmp
ret
pop
add
add
lea
fldcw
fsubs
clc
xchg
pop
inc
aam
popf
jmp
mov
aad
sahf
mov
mov
mov
jp
notl
add
stos
xchg
xchg
ret
jl
add
adc
out
or
push
loope
aaa
movsl
ds
cmc
mov
imul
outsb
adc
ret
dec
mov
push
dec
push
pop
xchg
test
sbb
pushf
inc
and
dec
je
cmp
pop
mov
mov
fiadds
push
mov
pop
shll
sarl
sbb
mov
adc
add
push
clc
cli
neg
xchg
gs
test
sbb
enter
xor
dec
sbb
call
mov
sub
jg
stos
test
pop
call
mov
mov
pusha
sub
sub
jbe
ljmp
sbb
gs
dec
mov
push
fiadds
test
mov
loopne
jmp
dec
fs
movsb
fistpll
add
cmp
in
subl
push
js
push
icebp
das
lret
mov
mov
add
out
dec
sbb
mov
insl
push
xor
and
ja
andl
push
mov
sub
sub
add
pop
and
mov
or
mov
es
dec
hlt
fnstsw
push
mov
je
jg
inc
adc
aam
les
loopne
jnp
cmc
clc
mov
pop
cmp
jbe
cld
and
push
push
push
inc
pop
adc
shrl
shlb
pop
movsl
sbb
and
in
rorb
nop
pop
fs
mov
inc
cmp
repnz
push
and
nop
test
cmc
rclb
lret
lea
add
lret
or
push
addb
pop
sbb
ds
insb
adc
add
sbb
mov
xorb
test
pop
xor
cwtl
dec
cli
in
sub
pop
or
sub
shrb
rcll
push
dec
push
or
out
jmp
push
push
ss
clc
addr16
jo
outsb
repz
or
movsl
sub
in
push
add
in
popa
enter
jmp
add
adc
add
mov
push
add
jg
rcll
clc
xor
sub
jo
dec
pop
inc
add
es
and
push
aaa
enter
inc
cwtl
pop
adc
mov
sub
cmp
xchg
pop
rol
shll
fabs
sub
and
mov
cmpsl
aas
add
add
test
in
adc
incb
push
inc
or
jo
mov
cmp
sub
das
or
lods
testb
dec
push
push
pushf
ret
sub
cmp
push
add
out
sar
ror
int3
jmp
sbb
sbb
xchg
jg
mov
insl
cld
mov
addr16
or
pop
xchg
loopne
addb
test
pop
xchg
les
cmpsl
clc
jo
adc
mov
sbb
inc
add
jmp
lcall
cld
mov
dec
outsl
scas
cld
lret
or
adc
add
dec
test
mov
sarl
int
aaa
adc
into
inc
enter
mov
or
fstps
adc
mov
cmp
and
sbbb
cmp
mov
push
scas
arpl
xchg
int
mov
fwait
mov
push
push
repnz
push
inc
add
or
sub
mov
fisubrl
clc
pop
add
mov
rcll
and
dec
stos
sar
addb
and
push
aam
enter
pop
cmc
pop
sub
add
add
mov
pop
xor
or
push
or
dec
or
clc
std
popa
and
std
data16
xor
inc
and
pop
xor
push
or
xlat
or
sbb
adc
fisubl
xor
hlt
and
mov
sub
mov
loope
pop
xchg
int3
arpl
out
sub
imul
dec
sub
push
outsb
mov
fsubrp
sub
dec
adc
xlat
lcall
inc
imul
add
xchg
jge
cmp
jle
aas
or
movsl
jge
loope
cld
jp
inc
mov
sbb
cmp
ja
push
test
fnsave
add
jle
dec
repz
mov
daa
push
inc
scas
inc
mov
inc
cmp
or
jnp
or
test
jg
add
pop
lock
mov
aas
lcall
mov
pop
lods
xor
push
pop
pusha
adc
shlb
inc
ret
call
xchg
push
into
lock
fadds
in
in
mov
popf
rcrl
dec
mov
xor
dec
add
push
cmp
sub
leave
inc
jo
fstl
or
sub
jb
aad
xlat
inc
lea
loope
xor
xchg
lret
push
push
aaa
push
ret
sub
push
xor
mov
add
pop
fs
out
mov
test
or
dec
inc
imul
sub
fcoml
inc
loopne
pop
cmp
cmp
sbb
mov
xor
push
and
mov
das
pusha
or
sbb
add
jg
xchg
shrb
fdivl
stos
xor
or
imul
cmp
bound
inc
cmp
ja
loope
movd
push
fldt
or
cmp
add
pushl
dec
fbstp
sbb
adc
inc
jns
add
jnp
jmp
mull
in
add
and
or
mov
ret
inc
cmp
xor
xor
lahf
cmpsb
sarb
inc
adc
and
and
inc
or
push
sbb
xor
aam
loop
or
std
data16
push
aas
sub
and
call
jl
mov
mov
or
cmp
ret
xchg
adc
or
sub
mov
pop
dec
xchg
jl
jle
inc
and
push
or
add
add
dec
popa
fcoml
dec
adc
add
cmp
jle
push
cmp
dec
sbb
movsb
cmpsb
fwait
add
sbb
call
push
push
add
mov
inc
jg
data16
or
popf
sub
add
insl
cmpsl
incl
addl
pop
jl
in
mov
movsb
inc
xchg
inc
call
jb
mov
leave
rcl
test
add
cmp
call
ret
loope
add
sbb
fs
mov
ret
push
mov
sub
add
jmp
mov
sbb
into
outsb
outsb
xlat
shr
aaa
loope
fdivs
pusha
pop
push
gs
sahf
je
mov
test
adc
jl
outsl
jbe
lods
pop
sub
push
adc
aam
inc
jnp
filds
add
adc
cmp
ljmp
cmp
jle
cmp
jg
mov
sub
add
xchg
jbe
data16
inc
dec
in
clc
xchg
jg
adc
pop
add
push
cmpsl
xor
cmpsl
and
cmp
pop
ds
mov
lret
adc
mov
das
inc
cmpl
adc
mov
cmp
xchg
pop
or
push
mov
jp
xchg
ret
rorl
jbe
addr16
scas
sub
mov
mov
mov
sti
cmp
adc
or
add
test
xor
inc
inc
push
mov
pusha
loop
inc
cmp
jbe
aam
fnsave
repnz
loope
push
mov
or
jo
or
inc
outsb
insb
sub
es
orb
pop
je
fwait
popf
and
inc
loopne
adc
and
inc
sub
ljmp
push
sbb
mov
je
xchg
je
mov
pop
nop
xchg
sbb
jmp
outsl
sbb
sbb
inc
dec
aas
cli
testb
cmp
xor
dec
mov
xchg
sbb
notl
shll
mov
dec
push
rcll
sub
in
pop
adc
push
xchg
mov
iret
push
dec
je
dec
jne
push
mov
ja
fcoms
jmp
add
mov
xor
inc
cli
add
add
je,pn
xchg
inc
je
push
subl
sub
jne
push
sub
sbb
pushl
mov
or
int
icebp
mov
mov
arpl
mov
xorb
test
jb
jns
cli
push
in
stos
add
xchg
pop
loope
inc
sbb
jne
mov
ret
and
sbb
add
push
xchg
lods
inc
sbb
fsubl
push
ss
push
lock
jb
fs
icebp
adc
add
lea
jae
popf
clc
push
lea
mov
inc
clc
ss
inc
mov
add
outsl
push
je
cmpb
sub
add
and
add
xchg
pop
pop
fisttpll
jnp
clc
cli
dec
cmp
fcmovb
mov
lret
mov
scas
or
xor
pop
sbb
push
xchg
cmp
or
bound
push
fildl
cmp
aad
add
pop
and
sbb
xor
xlat
addl
adc
sbb
adc
sarl
sahf
jecxz
add
xchg
push
rorl
stc
dec
mov
std
hlt
jne
adc
add
push
pop
dec
jmp
mov
sbb
adc
sub
or
pop
out
jle
jecxz
imul
les
push
xor
inc
call
cmp
jne
pop
enter
dec
sub
cmp
dec
push
js
xchg
push
xor
jne
jg
add
adc
adc
add
fmul
scas
and
inc
das
test
adc
into
add
xchg
dec
adc
jp
pop
popa
inc
lock
or
hlt
dec
adc
adc
insb
imul
out
orb
fiaddl
and
mov
and
dec
adc
test
ljmp
or
cmp
fstl
adc
enter
jg
jmp
adc
xchg
movsl
mov
fadds
sub
and
movsb
inc
daa
cli
and
mov
ljmp
jb
ret
jb
or
andl
mov
push
and
fisubs
pushf
and
xor
test
adc
test
pusha
push
jno
and
jns
scas
xchg
arpl
bound
add
mov
or
adc
or
inc
lret
les
outsb
stc
pop
les
push
sub
insl
insb
and
mov
ret
mov
xchg
jns
xor
adc
inc
pop
mov
mov
xlat
je
cmp
das
je
mov
and
mov
testb
and
adcb
or
cmp
xlat
test
add
jge
push
mov
push
sbbl
je
cmp
cwtl
jbe
mov
cmp
jbe
clc
push
push
or
movsb
in
push
add
or
cmp
pop
das
xor
outsb
mov
push
cmp
xlat
repz
push
orl
pop
xor
out
lods
and
mov
pop
es
les
dec
scas
xor
push
inc
pop
pop
sub
push
scas
mov
pusha
int3
sub
mov
mov
xchg
lods
pushf
adc
popa
mov
gs
in
fstl
hlt
bound
xor
sbb
gs
jne
adc
sub
enter
stc
add
push
movsb
push
xchg
mov
nop
jne
add
mov
add
add
and
mov
imul
fldz
mov
xor
pop
fiaddl
adc
pusha
adc
shlb
ficoml
mov
test
mov
and
jnp
test
pop
and
inc
xchg
lock
fldcw
mov
fildll
roll
shlb
xchg
fstps
mov
xor
in
xchg
rolb
mov
or
sub
das
fcomp
out
inc
in
adc
adc
ret
fstps
add
cmpsb
pop
sbb
or
and
in
dec
xchg
inc
pop
or
shr
xchg
mov
xchg
nop
mov
inc
lea
mov
mov
jge
rorb
and
push
push
nopl
cmpsl
xor
jg
or
dec
subl
mov
ljmp
iret
and
sbb
mov
shlb
aam
in
xchg
adc
xor
in
or
or
popa
pop
enter
jne
cs
add
jo
add
mov
mov
pushf
xchg
call
rorb
in
lock
mov
inc
lock
enter
push
fmul
or
dec
fwait
pop
cld
cmp
xchg
faddl
test
lds
mov
imul
repnz
prefetch
adc
xchg
je
lock
sbb
dec
dec
shl
mov
add
rorl
push
xchg
push
lods
jmp
cmpsb
fdivs
pop
ret
pop
ret
push
add
inc
lahf
fdivs
adc
jl
inc
ljmp
jge
pop
jb
adc
inc
xor
inc
dec
and
jge
dec
xchg
add
nop
sub
test
lahf
jl
xchg
push
inc
test
mov
mov
rorb
and
mov
sar
in
inc
in
inc
cltd
fsubs
adc
push
add
push
adc
mov
adc
push
xchg
cmp
add
fwait
mov
cmp
xor
lods
jbe
call
jns
pop
sbb
cmp
mov
pusha
scas
dec
dec
sub
popa
xor
mov
mov
inc
sub
mov
or
mov
pop
mov
mov
cmpb
push
jns
js
adc
push
mov
cs
push
pusha
and
cmp
dec
adc
dec
or
xchg
mov
call
adc
mov
sbb
les
ja
test
outsl
rclb
rol
adc
lcall
push
ret
jb
adc
cmc
push
fisttps
add
xor
cmp
xor
repnz
adc
and
push
xchg
dec
je
jl
ss
add
sbb
push
shll
jb
test
scas
sbb
mov
xor
or
sbb
mov
push
int3
int3
lea
cmc
rorb
call
xchg
sbb
mov
sub
rorl
fucomi
sti
gs
or
mov
lods
ljmp
and
pop
mov
jns
ss
cmp
inc
outsb
sub
xchg
adc
sbb
inc
test
and
imul
cs
fistpll
popa
js
lods
add
jno
cmp
ret
push
orb
shlb
sbb
test
mov
push
test
adc
sbb
jnp
stc
rcr
inc
inc
or
xchg
insb
fwait
xchg
adc
mov
int3
aam
and
addr16
adc
and
mov
fmuls
popf
lock
pusha
push
test
fistps
xchg
popa
fisttpll
pop
push
cmp
sbb
aam
inc
jb
fbld
sbb
add
sbb
jl
imul
cmpsb
dec
movsb
dec
or
stc
cmc
sub
sbb
sbb
test
in
fcoms
loopne
lea
xchg
mov
clc
cli
sti
jne
shll
shlb
mov
imul
push
xor
and
push
lock
mov
test
sub
xor
loopne
mov
push
xor
adc
add
repz
mov
pop
or
or
adc
xchg
xlat
loopne
lock
add
cmpsb
pop
add
xchg
fbstp
xchg
call
or
dec
or
push
push
call
test
fistl
and
rol
and
adc
push
fmull
and
sbb
stos
adc
inc
dec
es
fiadds
adc
gs
dec
fs
loopne
es
ret
xchg
lods
add
or
repz
fnstsw
or
fcmovbe
push
push
push
xor
adc
pusha
xchg
in
arpl
mov
and
or
in
and
adc
in
pop
and
jge
or
lods
add
or
add
icebp
ljmp
sub
sub
mov
mov
arpl
out
stos
and
aaa
add
sbb
inc
test
inc
loopne
pop
and
mov
in
mov
mov
and
xor
cmp
jg
sbb
mov
mov
add
arpl
push
mov
daa
sub
sub
jo
pushf
addr16
enter
fsubrl
nop
ret
icebp
enter
adc
aam
adc
loopne
outsb
and
leave
mov
jg
out
repnz
and
ljmp
and
push
sbb
ljmp
jecxz
imul
xchg
pop
outsb
sbb
std
dec
or
subb
dec
aam
loopne
xchg
mov
fmuls
es
test
nop
inc
bnd
mov
movsb
sti
dec
adc
push
pusha
xchg
aam
aam
enter
rorb
fwait
fwait
dec
sub
test
les
or
inc
cmp
daa
and
popf
and
lods
daa
stc
adc
sbb
in
cmpsb
push
movsb
lock
jmp
mov
lock
push
std
add
sti
dec
push
test
js
inc
inc
or
add
aam
mov
lock
mov
or
cmp
nop
inc
or
or
nop
dec
or
or
mov
sub
add
mov
xor
cmp
in
push
add
rcr
adc
rcrl
mov
jns
sbb
fs
or
or
in
or
or
insl
add
gs
mov
addr16
fsubrs
mov
shrb
push
and
adc
mov
or
test
mov
jne
sub
sbb
cwtl
jl
fld
sbb
push
and
add
adc
lea
sbb
or
mov
sub
ret
push
mov
add
and
int3
xchg
aam
aad
xor
bound
xor
ja
imul
popa
jp
mov
popa
aam
in
or
loop
xor
fdivrs
dec
call
cmp
insl
aam
and
xor
push
enter
add
adc
or
iret
mov
dec
pop
das
rcrb
add
lahf
loopne
mov
insl
and
call
or
in
cmp
push
fsubs
stc
fs
adc
shrb
cltd
sub
subb
push
insl
insl
push
sub
loope
mov
push
addb
or
ja
xlat
mov
push
xor
das
add
in
loopne
dec
sbb
pavgb
pop
push
rorl
xor
cld
test
push
inc
mov
addr16
sub
push
dec
cmp
imul
adc
ss
orl
ret
add
arpl
or
add
add
enter
and
adc
dec
jne
pusha
pop
adc
push
jb
adc
fstpt
xchg
ja
sbbb
cmp
fcoms
icebp
fdivs
jno
and
ret
or
call
inc
cmp
mov
leave
loopne
adc
jns
mov
cmp
fsubr
adc
xor
movsb
mov
cmpsl
mov
aaa
or
or
or
push
sub
adc
mov
test
cltd
jo
pusha
stos
ret
in
in
adc
dec
and
jne
or
stos
icebp
xchg
adc
xchg
sbb
enter
or
mov
enter
or
jns
jno
xor
cwtl
nop
mov
das
dec
imul
cmp
ret
mov
test
loop
jl
lret
ja
mov
push
add
sbb
enter
jle
gs
mov
add
adc
mov
mov
es
xor
js
scas
pop
mov
pushf
stc
dec
push
jo
jb
cwtl
and
lds
add
or
popa
push
mov
fs
pop
mov
out
stos
adc
mov
push
call
jo
or
and
mov
xchg
and
mov
dec
aaa
int3
pinsrw
imul
ficoml
dec
pop
inc
int3
cmpsb
ficompl
pop
aam
mov
fmul
enter
pop
push
cs
mov
cmp
nop
cmp
subb
sbb
test
pop
sbb
dec
xor
add
aaa
cwtl
jge
add
ss
xor
add
outsb
vpmullw
shlb
jnp
pop
lods
leave
or
add
stos
fadds
loopne
pop
inc
lea
mov
scas
cmp
stmxcsr
jns
add
cmp
les
orb
pop
ss
int3
das
rsqrtps
cmp
sbb
aas
mov
in
cmp
inc
cmp
inc
or
or
icebp
adc
cmc
pop
leave
or
iret
mov
jbe
cmpsl
fwait
mov
xchg
pop
nop
dec
es
pushf
mov
test
cmp
cmovle
add
sti
mov
xchg
sub
add
jl
xchg
iret
xchg
xor
sbb
mov
mov
aaa
inc
ficoml
imul
shrl
lods
insl
pop
fnstenv
mov
push
fistps
in
xchg
and
movsb
fdivr
enter
adc
inc
cmp
adc
sbb
mov
jno
outsl
pop
in
jnp
or
inc
ds
call
and
xor
outsb
xor
mov
xor
inc
pop
inc
stos
mov
lock
ret
push
fcoml
jne
in
mov
jns
adc
inc
pop
inc
dec
xor
sbb
test
sbb
inc
enter
in
jne
mov
test
mov
xchg
jb
cmp
and
lea
and
push
jp
sub
test
xor
movsb
setbe
daa
ljmp
or
ss
jo
push
pop
popa
daa
cmp
call
xor
xor
xor
in
js
push
imul
cmp
mov
in
sbb
insl
test
pop
adc
mov
jb
xchg
inc
test
dec
add
dec
lods
in
dec
jns
fdivs
decl
rolb
sarb
lcall
adc
mov
movsl
and
out
jo
hlt
jne
or
jnp
lock
out
test
inc
in
sbb
sbb
arpl
rorb
pop
subl
lods
sar
jge
inc
es
add
or
push
ret
ret
movsb
adc
rolb
sbb
enter
ret
sub
leave
push
add
xor
pop
inc
movl
push
push
or
inc
in
mov
call
call
and
flds
pop
xchg
cmpsl
cmp
dec
push
cltd
add
andb
inc
and
and
icebp
nop
sbb
inc
xchg
mov
fiaddl
adc
fwait
int3
inc
aam
ret
push
adc
adc
insl
push
orb
js
lods
shll
adc
dec
rcll
loopne
jno
dec
push
add
push
loope
dec
dec
dec
repz
push
jmp
cltd
rorb
push
mov
push
add
mov
adc
loope
enter
aam
xchg
xchg
lret
rorb
inc
cmp
add
sar
dec
adc
push
fsubrl
sbbl
rolb
in
sub
int3
gs
mov
das
not
adc
cmp
mov
sub
sub
aam
dec
rcrb
xor
rolb
dec
dec
mov
push
lock
pop
aam
in
dec
jg
test
in
shlb
mov
sub
mov
divl
mov
adc
mov
subl
sbb
stc
pop
fmull
dec
arpl
mov
xchg
pop
dec
cmpsb
push
jne
mov
int3
in
std
xor
je
adc
aad
sti
cmp
or
shll
adc
test
aam
sub
mov
xor
cmp
xchg
fiaddl
lcall
pusha
mov
pop
adc
aas
mov
cmpsl
xchg
mov
dec
xchg
mov
fs
xchg
push
or
pop
jne
and
or
inc
add
push
sbb
jne
fistpl
gs
mov
jbe
mov
mov
mov
inc
dec
mov
mov
cmp
sti
ret
push
mov
rcrl
sbb
mov
and
mov
pushf
cwtl
mov
test
and
mov
jo
pushf
mov
mov
mov
and
pop
inc
orl
push
jmp
xchg
and
add
or
loope
push
dec
lods
xchg
shl
fstl
inc
xor
push
adc
mov
cmp
push
mov
adc
add
xor
or
pop
push
loopne
fdivs
jecxz
mov
adc
or
rolb
mov
xchg
push
add
sub
imul
or
inc
sub
cmpsb
pop
gs
mov
push
or
nop
sbb
es
je
mov
bound
enter
test
mov
xor
in
pop
add
sub
fmull
test
sub
xchg
shl
pop
addl
nop
shr
aas
lds
and
int3
testl
sub
push
or
jo
jno
fsubs
dec
sub
insb
push
roll
call
pop
loopne
push
iret
cmpsb
data16
pop
and
inc
mov
sbb
add
sub
and
push
sbb
in
sbb
fs
sbb
dec
or
push
sub
dec
or
cltd
cwtl
andl
pop
cltd
jbe
es
cltd
push
and
jnp
cs
xchg
or
add
sub
mov
gs
mov
imul
mov
jmp
xchg
dec
mov
lcall
ret
insl
cmp
pop
jmp
loop
adc
pop
std
aad
test
adc
jp
idivl
call
push
sahf
mov
insb
dec
cmp
fs
movsb
mov
push
insl
push
sti
xchg
dec
cmp
pusha
adc
leave
and
and
xor
and
sbb
and
and
dec
inc
cmp
adc
xor
sub
xor
dec
fcoms
pop
pop
aam
cli
push
jmp
cmc
es
cmpsb
dec
shlb
xor
or
xor
mov
pop
xor
inc
inc
or
inc
mov
adc
shrb
dec
and
xchg
pop
call
orl
ja
aam
cltd
sub
mov
pop
sbb
jp
dec
cmpsl
lods
pop
xlat
add
loopne
jl
pop
xor
jne
xor
dec
adc
std
inc
adc
cmp
add
adc
jge
and
push
inc
icebp
mov
je
nop
mov
mov
and
push
mov
cltd
nop
outsl
test
insl
dec
lock
pusha
gs
dec
mov
fidivl
rcr
mov
pop
fsubl
in
int3
cmp
pop
enter
les
rorb
jno
shl
aam
mov
and
popa
xchg
adc
mov
je
imul
inc
xchg
push
push
fs
xchg
push
stos
sbb
sarb
rorb
lds
inc
jae
push
shrb
and
inc
adc
ja
lods
xchg
mov
adc
iret
arpl
push
mov
inc
dec
mov
inc
ror
je
or
inc
xchg
gs
xorb
out
pop
and
scas
loopne
enter
test
arpl
out
xor
and
inc
or
lods
and
pusha
add
test
xchg
push
pusha
sbbb
add
add
leave
test
sbb
imul
nop
test
or
dec
test
xor
mov
and
add
int3
jmp
inc
leave
pop
outsw
in
add
or
cmpxchg
in
fcoms
sbb
or
dec
repnz
jg
add
aam
sti
add
add
mov
arpl
jno
push
stos
sub
cwtl
and
rorb
jbe
sbb
clc
xor
test
xor
inc
sub
dec
adc
js
sbb
mov
les
shrb
mov
addl
lea
xchg
test
sub
sbb
ss
inc
roll
inc
inc
addr16
sbbb
mov
rolb
in
das
inc
xchg
aam
lret
pop
insb
dec
mov
nop
mov
test
push
call
dec
jo
lret
cld
push
je
nop
cltd
insl
lock
push
dec
je
cmp
xchg
adc
je
ror
mov
and
ja
sbb
loopne
fsubrl
jne
sbb
and
test
movsb
sbb
lea
pop
add
idivl
push
lods
jg
mov
test
inc
mov
out
push
dec
mov
dec
arpl
lret
out
sub
stos
sbb
testb
pop
aam
aam
scas
lods
and
or
fiaddl
or
pop
in
movsb
ret
leave
mov
push
in
sbb
out
fildll
mov
das
aam
jmp
movsb
rorl
mov
jg
mov
mov
pop
cmp
outsl
int3
mov
pop
and
pusha
gs
dec
ret
mov
xor
xchg
movsb
inc
int3
shlb
andl
lock
lods
mov
imul
push
dec
push
testb
dec
outsb
das
dec
adc
and
je
mov
xchg
jg
ret
cmp
sub
test
add
leave
mov
or
stos
inc
outsl
adc
sub
mov
and
fcomp
mov
enter
aam
les
pop
adcb
nop
sbb
and
xor
add
and
test
add
and
and
xor
orb
movsb
lods
dec
ss
inc
jecxz
adc
dec
pushf
insb
dec
es
lods
push
mov
cltd
fs
test
cltd
fs
dec
pop
je
fs
dec
mov
es
mov
inc
and
fs
aam
in
add
jg
jl
cmp
decb
jmp
lds
flds
in
shl
jns
xor
mov
fcoms
xchg
dec
enter
mov
sub
mov
mov
cmp
pop
mov
out
loopne
mov
pop
add
sbb
and
xor
enter
inc
test
mov
movsb
lods
xchg
enter
int3
not
fsubs
aam
dec
sub
cwtl
js
fdivs
adc
in
pusha
mov
leave
mov
mov
popa
and
test
pushf
std
and
pop
aam
int3
xchg
xchg
xchg
xchg
les
xchg
movsb
pushf
xchg
mov
test
adc
leave
and
pop
xchg
stos
mov
movsl
adc
xor
in
sub
push
pop
mov
in
push
nop
cmp
enter
sub
inc
test
xchg
inc
lods
sub
inc
sbb
mov
push
adc
imul
inc
mov
inc
aam
xchg
dec
adcl
inc
jo
aaa
cmp
jb
cwtl
sbb
add
xor
jne
pop
jo
xchg
sub
movsb
call
mov
cs
xchg
rcrb
add
fldt
xchg
sbb
jns
xchg
mov
sub
lods
add
pop
sub
cmovs
pop
orb
xchg
mov
and
rcrb
xchg
or
sarb
jns
sub
idivl
or
rcrb
dec
adc
and
dec
xor
and
xchg
cmp
push
pusha
testl
jecxz
push
int
mov
xchg
adc
sub
movsb
jg
dec
imul
pop
sub
push
xchg
pop
popa
shll
test
insb
inc
enter
scas
sub
nop
sub
adc
push
insl
dec
cmp
mov
or
add
push
das
in
xor
pop
std
pop
rorb
pop
aam
lea
out
xchg
inc
cs
invd
push
aas
outsl
cs
fadds
aam
sarb
jl
xchg
mov
or
or
adc
popa
rcrb
xchg
mov
inc
dec
or
shlb
or
jge
mov
imul
pop
fwait
mov
lret
xchg
sbb
or
sbb
xor
pushf
mov
fsts
rclb
rclb
xchg
enter
les
mov
das
mov
xchg
test
jb
and
ss
enter
xchg
dec
pushf
xchg
nop
xorb
lds
shl
ror
aas
adc
xor
enter
stos
loope
push
sub
add
pop
or
sbb
mov
sbb
or
mov
sbb
movsb
adc
mov
and
jns
pop
in
add
cmp
rcll
repz
mov
jno
adc
xchg
mov
das
insb
mov
das
orb
sbb
es
mov
movsb
pop
cli
inc
mov
subl
sub
or
pop
mov
std
push
das
inc
sarl
je
jo
lock
pop
repnz
add
sbb
adc
mov
mov
insl
cmpsl
dec
lea
mov
xor
in
sub
cld
sub
push
pop
in
lods
jbe
sub
movsb
popf
cltd
inc
loop
add
repz
mov
jae
sti
loopne
ret
xchg
leave
fists
cltd
in
and
and
sub
inc
sub
push
movsb
add
jbe
les
aam
push
or
mov
sub
cld
icebp
inc
shll
clc
xor
push
push
in
or
lds
and
add
clc
icebp
addl
inc
in
sbb
mov
add
push
mov
xchg
and
sbb
xchg
adc
and
and
adc
add
mov
rcl
das
scas
ret
xchg
dec
push
hlt
inc
insb
jle
sub
mov
sub
jg
cmp
mov
mov
pop
pop
mov
sub
in
aas
out
sub
jmp
mov
sarl
call
inc
sub
pop
sahf
and
or
xchg
jb
sub
test
cmpsl
adc
test
jno
and
or
adc
daa
dec
pop
outsl
xchg
jbe
mov
sub
rclb
xor
lods
inc
sub
insl
inc
pop
sbb
add
or
fsubrs
inc
mov
leave
add
and
fs
jecxz
sbb
bound
dec
jnp
fs
mov
call
cli
pop
inc
stos
addb
xor
es
xor
aas
pushf
xchg
shr
or
add
xor
sbb
pop
adc
fsts
dec
cmp
and
mov
pop
mov
ret
fsubs
adc
sub
mov
cltd
adc
fiaddl
jmp
sub
cmc
call
jns
xchg
sbb
push
gs
adcb
cmpsb
adc
pop
sbb
js
and
pop
repnz
mov
jmp
or
lds
sub
ffreep
xor
std
xorl
inc
fdivl
add
xorl
inc
sbb
pop
xchg
push
pop
sub
jb
mov
jg
insl
mov
call
or
mov
lods
cmp
outsb
xchg
dec
cli
inc
adc
fidivrl
add
and
leave
xchg
rclb
adc
in
shlb
pop
cmpsb
dec
mov
lods
sbb
icebp
nop
cmp
push
je
cmp
imul
movsb
sbb
mov
inc
mov
divl
sub
sbb
push
or
xchg
cmp
jmp
add
xchg
dec
sahf
sbb
bnd
mov
and
and
sub
adc
sub
jmp
je
sbb
mov
repz
mov
insl
sub
das
roll
int
popa
mov
insb
test
inc
int
pop
mov
jnp
imul
sbb
sbb
enter
mov
inc
mov
xchg
ret
ds
jge
sbbl
sbb
inc
add
dec
test
pop
inc
adc
fxch
and
xor
test
or
xor
cltd
jbe
lods
adc
xchg
dec
mov
icebp
movsb
imul
ret
adc
pop
cmp
movsl
lahf
sbb
mov
orb
bswap
mov
popl
movsb
mov
adc
roll
in
int3
add
dec
jnp
sub
ret
push
imul
jp
push
je
push
jb
out
inc
or
xor
mov
in
push
inc
mov
mov
lock
mov
cld
inc
mov
enter
sti
out
push
iret
dec
push
jns
hlt
adc
and
or
mov
add
jecxz
sahf
or
sbb
leave
mov
and
or
dec
push
sar
cmp
cmp
push
sti
or
add
push
fcomps
jbe
jle
movb
and
repnz
imul
push
inc
lahf
push
dec
pop
rcrb
inc
or
lahf
rorb
jmp
loopne
mov
data16
and
gs
pushf
stc
incl
ret
xchg
ret
push
je
xchg
andb
je
push
push
add
jno
lods
mov
xor
mov
out
cld
mov
orb
hlt
sub
notl
sub
dec
mov
and
cmc
movsb
lea
cmp
in
addr16
jns
inc
jmp
xchg
lds
sete
jmp
or
pop
push
or
push
fildll
mov
jl
pop
mov
adc
mov
jg
les
add
add
out
mov
testl
xor
xor
sahf
out
test
push
popf
out
fisubrs
inc
bound
xchg
jae
inc
push
roll
lret
cmp
add
inc
aas
sub
data16
mov
inc
test
mov
orb
jnp
mov
add
pop
das
mov
mov
adc
or
cmp
rclb
cmpl
pushl
mov
add
into
pop
adc
test
dec
out
cmp
or
test
out
sahf
sbb
aaa
xchg
subb
ja
divb
xor
vmmcall
ds
scas
incl
sub
frstor
ljmp
test
inc
mov
and
insb
outsl
arpl
imul
sub
mov
sub
popa
arpl
jne
mov
jmp
popa
outsb
je
add
das
add
push
insl
adc
push
sub
cs
inc
outsl
jb
js
je
jg
mov
jae
add
or
outsl
add
add
add
ja
sahf
insb
add
jne
les
inc
and
add
fstp
jb
dec
push
add
add
xor
aaa
or
mov
repnz
inc
mov
fdivr
push
add
aas
push
add
pop
pop
mov
and
cmp
mov
push
je
and
jae
push
idivl
adc
out
loopne
cmpsl
insl
push
push
or
jae
out
loopne
mov
lret
repz
popa
fstpl
xor
insb
jp
outsl
in
fndisi(8087
or
mov
fsubrp
imul
addr16
and
outsl
pop
rcrb
jmp
jo
mov
in
loopne
dec
lret
stos
insl
sub
push
push
or
pop
imul
fnstsw
inc
push
data16
shll
out
mov
jp
sub
mov
sub
arpl
andb
lahf
popa
push
cmp
jecxz
outsb
inc
arpl
loopne
pop
jnp
jae
daa
dec
jbe
enter
fbstp
outsb
fidivrl
je
adc
sbb
jo
ficomps
jbe
mov
arpl
insl
mov
scas
xor
scas
js
xor
inc
mov
js
sbb
xor
fidivrl
cs
add
das
xor
sub
pop
or
pminub
jg
ds
or
sub
outsl
xchg
lahf
pop
pop
push
sbb
jg
dec
xor
adc
fbstp
adc
adc
push
xor
xor
lods
cmpsb
in
xchg
jb
jne
in
mov
xor
push
bnd
das
pop
jno
jbe
sbb
inc
inc
shrl
ljmp
push
jo
lahf
outsl
aas
push
lods
roll
iret
arpl
sbb
mov
inc
jb
aaa
insl
jno
lahf
cs
imul
add
imul
shll
jnp
sbb
cmpsl
outsl
pop
pop
loopne
subb
das
xchg
mov
daa
mov
pop
in
jno
add
pop
stos
imul
insl
lret
je
scas
cmp
fisubs
adc
jae
subb
pop
pop
jecxz
ret
ja
push
sub
lock
xor
sbb
xchg
add
mov
push
inc
sahf
imull
and
inc
inc
mov
xchg
cmpsb
jnp
das
sbb
sahf
cmpsl
stc
cmp
sbb
sbb
mov
cmp
out
sbb
test
sbb
dec
repz
pop
sahf
push
sbb
cmp
stc
mov
mov
clc
pop
js
jns
repz
mov
sbb
mov
jp
incl
sub
addr16
jp
mov
cmpl
mov
dec
jb
fcmovne
add
xchg
pop
mov
clc
pop
es
xchg
ja
imul
inc
shll
mov
push
fwait
cmp
dec
add
mov
push
xor
mov
pop
pop
add
and
add
in
repnz
das
das
and
pop
mov
jbe
jge
bound
dec
inc
and
add
loope
decb
jnp
pop
ret
je
dec
idivl
repnz
aas
dec
inc
sbb
pusha
xor
ret
fdivr
ds
daa
outsl
inc
jo
mov
and
mov
add
das
pop
pop
divl
iret
jns
out
adc
out
and
push
outsb
sti
push
arpl
pop
dec
xlat
mov
daa
push
and
imulb
ret
sub
pop
dec
mov
shrl
pop
testl
pushl
mov
jg
dec
cmp
cmp
add
dec
and
jns
add
scas
imul
dec
push
inc
aas
testb
insl
bound
dec
outsl
jbe
dec
arpl
popa
or
jo
sub
addr16
clc
mov
xor
insb
xchg
outsb
xchg
inc
jo
imul
popa
jb
jg
bound
inc
jae
fnstsw
popa
outsb
adc
xchg
into
mov
outsb
jns
jg
iret
fdivrl
addr16
popa
je
jb
xor
push
push
gs
sbb
into
fdecstp
jnp
outsl
outsb
and
jbe
pushf
jae
dec
inc
aas
add
jge
imul
or
mov
filds
fildll
push
push
mov
push
popa
insb
jne
inc
inc
mov
adc
push
scas
call
and
sub
sub
ljmp
xor
xor
ss
cmp
cmp
cmp
ds
inc
inc
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
test
mov
dec
dec
dec
dec
mov
sbb
rcrb
pop
pop
pop
xchg
pusha
popa
sbb
jmp
fs
imul
jo
add
jbe
divb
jp
jl
jle
dec
adc
lcall
cs
fs
pop
add
ret
mov
rorb
ljmp
lret
jno
icebp
repz
inc
mov
clc
ret
movsl
add
xorl
outsl
shrb
outsl
imul
xor
outsl
das
cmp
sarb
daa
push
add
jo
xor
popa
js
addl
test
dec
pop
sbb
out
shl
rol
sub
je
lods
rcrb
add
adc
add
cld
imul
add
and
push
pop
push
or
push
push
add
xor
jbe
and
add
pusha
push
mov
or
cmp
add
sbb
sahf
mov
xchg
push
xchg
test
add
orb
into
in
fnstenv
enter
lret
jb
shrl
push
jo
add
sub
push
jmp
ja
icebp
dec
or
jo
add
js
push
add
ret
nop
les
addl
rorb
add
pop
jb
pop
lea
mov
nop
xchg
xchg
fs
xchg
pop
xchg
mov
mov
movsl
enter
or
shl
inc
scas
mov
rcr
out
add
mov
lods
push
lods
mov
xlat
push
repnz
sbb
pop
jns
sub
pop
sbb
out
fisubs
push
inc
sub
ss
mov
push
dec
dec
inc
dec
inc
push
divl
lret
push
nop
fs
je
pop
loopne
mov
push
jae
dec
bound
je
outsb
cmp
jge
xor
push
jbe
dec
out
je
mov
imul
daa
in
aas
push
xchg
pop
lea
mov
outsl
js
push
decl
add
cs
and
insl
jo
imul
jo
and
and
daa
aaa
jle
loopne
insb
les
dec
imul
fcmovbe
shlb
ds
cmp
dec
fwait
xchg
fdiv
inc
jb
jns
daa
pop
and
ss
jns
mov
ljmp
in
and
addr16
add
cmp
outsb
jle
fwait
outsb
rcrb
jbe
mov
jo
or
outsl
mov
outsl
jb
and
xor
add
jbe
push
push
lahf
dec
xorl
imulb
push
jp
lret
out
cwtl
add
pushw
popl
andb
inc
imul
pusha
gs
push
daa
xchg
push
sarl
and
popa
push
outsb
mov
divb
mov
push
jae
mov
dec
or
cmp
add
hlt
clc
jo
sbb
outsb
gs
inc
pusha
adc
mov
das
mov
xchg
inc
push
push
push
push
dec
negl
dec
push
jne
repnz
push
jbe
enter
fbstp
mov
dec
jge
mov
jle
dec
ret
pop
xorb
imul
call
xor
jg
jae
and
xor
das
gs
sbb
pusha
rcll
outsb
bound
subl
push
or
pop
das
je
scas
idivb
daa
xchg
mov
mov
mov
cmp
out
mov
cmp
or
ds
and
sub
dec
imull
inc
jl
push
addr16
jle
cmpsb
or
sub
sub
add
repz
add
sub
pop
loope
negl
das
push
jb
xor
aaa
and
push
sbb
mov
mov
xchg
xchg
dec
pop
pop
jne
stos
addr16
push
lods
xor
sbb
sbb
jo
mov
push
gs
imul
or
frstor
dec
sbb
pop
or
sahf
inc
pop
sub
and
divl
sub
iret
sti
outsb
xchg
sub
pop
cs
add
cmp
iret
repz
and
adc
jnp
cmpsl
stc
cld
sub
call
cmp
push
aam
int3
cmpsl
mov
mov
dec
jns
lods
test
outsb
mov
negl
nop
nop
cs
push
sahf
mov
repz
repz
insb
push
iret
pusha
pop
pop
push
push
dec
cmp
repz
xor
and
jns
cmpsl
stc
cld
sub
enter
jns
out
dec
and
in
iret
repz
les
iret
repz
xor
sbb
jns
cmpsl
stc
lock
test
pop
sahf
ja
out
adc
sub
push
pushf
jo
jnp
jl
sub
push
and
adc
add
jno
test
add
add
xor
push
jb
dec
mov
sbb
inc
addl
add
ret
push
and
add
ja
sub
sbb
xchg
push
imul
add
insl
or
and
push
add
mov
add
jnp
and
add
push
pop
or
das
cmp
mov
addb
addl
mov
xchg
xchg
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
mov
mov
cmpsl
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
inc
ret
enter
int3
int
iret
rcl
rcl
aam
xlat
fcomp
fcmovu
loopne
std
jmp
jecxz
in
out
jmp
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
std
jmp
push
test
and
add
ljmp
push
sub
push
jno
popa
push
adc
sub
lods
lcall
gs
popa
data16
pop
shl
std
add
xor
add
fidivs
sub
add
push
sub
daa
dec
arpl
inc
insb
fs
jns
jecxz
sbb
mov
mov
les
iret
pushf
jp
pushf
pcmpgtw
xor
push
inc
push
loopne
add
dec
push
push
dec
pop
test
mov
push
dec
inc
dec
cmovns
cld
mov
das
push
adc
sub
adc
sub
into
mov
rclb
mov
out
xor
jnp
inc
loop
mov
ds
in
xchg
popa
pop
adc
clc
lret
sbb
in
xchg
jb
jge
arpl
cmp
jg
mov
in
fstl
mov
and
and
mov
imul
lret
add
inc
mov
sarl
or
push
test
sub
fwait
ss
sbb
mov
jns
ds
xor
incb
int3
dec
dec
xor
cld
dec
popf
pxor
xor
lret
aaa
push
div
inc
sub
dec
xchg
cmp
cmpsb
das
xchg
mov
xor
sahf
icebp
mov
cld
or
loopne
addr16
cmp
inc
mov
xchg
push
pop
xchg
sub
pop
mov
stc
pushl
ljmp
orb
mov
jle
call
lods
dec
lock
xor
aas
mov
pop
or
and
pop
repnz
popa
mov
and
es
mov
fcompp
add
test
ja
mov
push
nop
fwait
pushl
mov
adc
push
loope
or
aad
pop
inc
fildl
sub
dec
fsubs
cmpl
or
cmovg
sbb
or
dec
xchg
pop
xchg
nop
outsb
loopne
pop
fwait
loope
pop
in
imul
cmp
sti
es
jae
push
jp
mov
fcomi
push
push
data16
scas
ret
je
sub
test
xchg
mov
and
adc
shrb
aaa
pcmpeqw
outsl
mov
loopne
push
mov
fildl
daa
je
loopne
sbb
mov
movsl
dec
add
sbb
jmp
xchg
mov
sahf
ror
ret
sbbl
push
fnsave
add
jo
xor
sbb
mov
or
and
imul
jae,pt
loope
jl
insl
jle
fs
popa
rcr
pop
cmpsl
mov
and
push
jle
or
jg
out
dec
mov
adc
mov
fbstp
out
jno
sarl
push
mov
clc
jg
mov
cmova
das
adc
cmp
popa
ret
xor
add
inc
inc
subl
jg
out
shrl
sbb
xlat
jg,pn
jge
and
mov
cmpsl
xlat
data16
fnstenv
adc
arpl
js
sub
shll
aas
cmpsl
call
ja
inc
add
cmp
pop
pop
mov
testl
jne
cmpps
push
imul
sti
arpl
out
mov
lahf
es
es
sti
cmp
or
push
adc
push
cmp
and
lds
jge
add
insl
test
cmp
dec
dec
incl
xchg
gs
scas
sbb
ja
dec
jp
xchg
adc
ja
pop
ds
fsub
bound
mov
mov
imul
push
fmuls
sti
jne
sbb
daa
sbb
call
pop
mov
aas
arpl
daa
pop
arpl
add
sbb
pop
gs
jne
out
mov
and
stc
lret
arpl
pop
mov
and
pop
stos
pop
ret
out
sbb
insl
inc
add
mov
fldt
test
push
mov
dec
cmpb
ja
cmpl
xchg
lret
sub
inc
mov
sbb
out
daa
loope
faddl
xor
xlat
or
jo
add
push
cmp
cld
js
ret
mov
je
jb
adc
jl
push
add
sbb
arpl
mov
xor
push
arpl
clc
mov
pop
mov
dec
popa
adc
inc
jnp
and
jo
out
or
xor
lock
je
jae
pop
outsb
out
out
nop
mov
adc
aaa
mov
testl
shlb
push
or
and
jecxz
stos
scas
mov
subl
sub
sbb
dec
aas
adc
outsl
popa
push
inc
pop
daa
imul
add
dec
dec
sub
cmp
dec
fwait
push
mov
cmp
push
dec
imul
inc
push
ret
inc
and
test
imull
sbb
and
push
addb
js
mov
outsb
push
pop
out
jb
sub
orl
cmpb
pop
sahf
fisubs
daa
bound
jae
hlt
mov
mov
addr16
sti
and
ss
push
insl
cmp
out
bound
or
jge
outsl
out
arpl
pop
pop
stos
and
outsl
jmp
les
mov
lahf
ja
cmpb
mov
shll
jb
pop
mov
push
es
int
jo
mov
out
inc
cmp
inc
mov
push
inc
scas
imul
mov
arpl
dec
insb
xchg
pop
push
jnp
inc
inc
dec
add
shll
outsl
imul
sbb
ss
mov
or
mov
dec
sbb
pushf
lret
inc
pop
je
ret
iret
pop
dec
por
pop
icebp
outsl
insb
aas
pop
mov
scas
fimull
addr16
outsl
mov
dec
cmp
lods
pop
adc
sahf
push
aas
pop
pop
push
aas
loopne
bound
testl
mov
mov
mov
loopne
mov
jl
loop
and
jl
imul
mov
and
addr16
jnp
sbb
push
loopne
sub
ja
mov
adc
bnd
jo
or
mov
fsubl
push
adc
sbb
sbb
jnp
xor
imul
jmp
es
pop
icebp
into
adc
add
push
cmp
mov
outsb
mov
cmpsl
outsb
jg,pn
jnp
push
jecxz
inc
add
loop
cmp
jno
filds
fsubl
insb
sub
lret
jl
out
pop
cmp
bound
or
mov
inc
inc
mov
lea
fidivrs
or
stos
sub
iret
imul
dec
pop
adc
jl
lods
jno
repnz
sahf
jo
repz
adc
mov
cmp
es
addr16
push
imul
add
mov
aad
xlat
incl
outsl
sbbb
xchg
rol
fstpt
dec
xlat
aaa
sbb
jl
xor
inc
testl
pop
jno
xchg
out
inc
jns
jae
jae
sbb
jae
pop
add
dec
adc
mov
negl
mov
add
mov
sub
imul
pop
in
sar
pop
data16
aaa
push
ret
insb
roll
dec
push
aas
popa
pop
popa
sub
xchg
pop
push
mov
es
fcompl
jle
outsl
das
addr16
mov
dec
lcall
sub
adc
inc
xchg
inc
jnp
dec
xor
push
cmp
push
sub
xor
sbb
inc
add
hlt
lret
ss
push
repz
push
push
mov
fimull
push
jl
negl
cs
ds
push
pop
push
push
lds
fstps
push
rol
adc
ja
out
imul
pop
push
iret
push
les
ds
pop
jmp
cmp
and
jbe
xor
pop
add
inc
lds
cmp
inc
pop
or
mov
push
sub
jl
sahf
divl
mov
sbb
push
leave
fucomp
fmulp
jnp
pop
or
adc
repz
adc
inc
and
pop
dec
daa
outsb
mov
iret
pop
sbb
aaa
dec
and
scas
jne
xorl
outsl
jo
jns
mov
inc
inc
fisttpl
imul
add
outsb
rolb
pop
insb
lret
jno
push
pusha
sbbl
sti
aas
pop
popa
push
in
add
and
popa
outsb
arpl
push
gs
insl
pusha
push
popa
jne
shll
jo
pop
and
dec
bound
out
sbb
sub
and
pop
shrb
adc
ficoms
das
push
dec
push
push
jg
jecxz
repz
fildl
jne
jne
jns
fwait
push
mov
xchg
scas
mov
repz
lock
push
or
mov
ds
fs
outsb
jbe
lea
cmp
bound
or
ds
gs
je
cmp
ret
xor
push
push
jo
jb
in
sbb
mov
and
jae
pop
cmp
sbb
and
and
mov
jae
imul
pop
adc
or
icebp
cmp
in
fwait
test
mov
outsb
add
adc
cs
jbe
pusha
imul
sbb
sub
data16
aam
imul
or
shrb
xchg
aas
push
mov
jne
mov
daa
pop
andb
mov
movb
cmp
ja
inc
push
mov
dec
push
verw
rolb
lods
lahf
js
adc
xchg
scas
inc
cmpl
adcl
pop
addb
pop
xlat
sbb
push
sub
cmp
inc
movsb
ss
cmpsl
add
sbb
or
xchg
js
sub
adc
sahf
mov
sbb
dec
outsb
ret
push
sbb
leave
idivb
xor
inc
dec
jp
ror
lea
push
jnp
pop
push
lock
ja
into
or
inc
pop
mov
insl
pop
fdivrp
adc
data16
cmp
insb
into
pop
lret
mov
inc
lret
bound
add
pop
and
mov
fdivl
xchg
inc
loop
lcall
sbb
and
jle
xor
jo
inc
or
imul
movsl
add
aaa
sub
dec
mov
inc
loopne
aam
jecxz
or
inc
cwtl
cs
or
lods
push
push
adc
pop
movsb
pop
arpl
push
call
dec
mov
mov
push
scas
sub
jne
imul
mov
ret
fs
and
xchg
mov
xor
and
outsl
rcrb
inc
scas
mov
adc
add
and
imul
and
testl
cs
and
shrl
add
and
push
movsl
dec
andl
push
cs
xor
imul
sbb
jp
out
jb
push
jp
arpl
insl
das
mov
xor
arpl
pop
cli
add
push
scas
pop
jmp
jb
fs
push
jb
mov
or
inc
jbe
jae
sub
scas
into
sahf
mov
loop
inc
into
out
and
push
mov
or
jbe
push
sbb
mov
and
scas
mov
add
inc
fwait
mov
imul
in
add
fbld
xlat
adc
add
push
lret
inc
sbb
sub
mov
dec
mov
pop
test
aas
mov
mov
fbstp
cmp
das
ret
ret
dec
adc
add
pop
or
out
cmp
inc
jg
push
inc
cmp
inc
imul
data16
pop
xlat
lods
add
dec
or
mov
stos
push
and
jmp
pop
daa
stos
imul
sbb
mov
lahf
fwait
cmp
jns
and
data16
mov
hlt
test
mulb
xchg
arpl
bound
xor
scas
jecxz
pop
test
dec
filds
add
sbb
aam
ja
or
cmpsb
cmp
aam
sub
xchg
cmc
push
cs
jmp
cmpsl
push
or
mov
push
jo
dec
cmpsb
pushf
subl
lea
js
fucomi
sbb
imul
outsb
jae
sbb
sub
or
repz
pusha
push
cmpsl
out
mov
and
imul
inc
push
imul
aas
cmp
stos
add
inc
jae
in
cmp
out
pop
aaa
cmp
rorb
or
cmp
jge
and
xchg
pop
add
or
das
imul
arpl
shrl
pop
imul
lds
js
xchg
cmp
shrl
ret
fistl
test
fldt
or
loope
add
ret
and
es
xor
lahf
arpl
xchg
mov
repz
lcall
xchg
xlat
and
inc
sbb
cmp
pop
push
scas
jmp
cmp
fimuls
push
xchg
test
dec
cmpsl
out
jo
dec
xor
mov
mov
jbe
mov
adc
fadds
popa
pop
cmp
inc
push
pop
xchg
push
or
jnp
jnp
jb
xlat
pop
lcall
inc
fstpt
popa
cmp
ss
xor
add
out
jo
jp
addr16
xor
je
scas
loopne
setg
xor
push
push
addr16
push
sub
es
push
in
cmp
out
inc
outsl
daa
dec
fcmovb
clc
push
pop
ja
arpl
ret
xor
ss
aad
pop
xlat
cmp
icebp
sbb
imul
or
cwtl
inc
shll
push
cmpsb
adc
test
out
gs
mov
out
aad
sbb
scas
fwait
cs
mov
stos
add
adc
lds
addb
jne
arpl
shlb
je
outsl
fs
aas
dec
clc
movsb
test
insb
add
push
hlt
or
add
add
sti
push
add
test
push
enter
scas
insl
push
outsl
das
outsl
xor
cs
inc
dec
ja
bound
scas
popa
adc
iret
shrb
push
pop
dec
mov
stos
push
cmp
jo
sub
cmpsb
sbb
scas
push
pop
outsl
out
lods
adc
setg
pop
and
pop
push
sahf
xor
dec
das
es
insl
jl
dec
call
clc
les
pop
popa
xchg
call
daa
xor
rorl
adc
adcl
xor
add
rolb
loopne
loope
out
mov
push
push
add
inc
sbb
jecxz
add
jae
ret
stos
sub
ret
cs
ja
rorl
bound
ret
and
arpl
push
mov
out
pop
sub
add
pop
add
je
adc
sub
cltd
aam
dec
cmp
outsb
add
cmp
push
ret
and
jnp
cmp
jp
inc
das
jb
daa
sbb
push
fisubrl
add
minps
ret
aas
push
mov
mov
dec
mov
mov
sbb
xor
dec
push
mov
fcoms
iret
jo
stos
scas
outsl
push
mull
shlb
dec
and
push
mov
jp
fdivs
cli
pop
dec
add
bound
popa
xor
jmp
rcll
pop
scas
sub
and
inc
in
sub
ret
nop
out
addl
mov
das
hlt
inc
adc
rcr
inc
add
or
push
in
inc
or
mov
sbb
mov
push
mulps
aaa
adc
xchg
and
sbb
xor
cmpsl
sbb
sbb
int
mov
sbb
sbb
sbb
adc
jmp
pop
and
adc
and
out
fstpl
out
and
inc
cs
push
sbb
outsb
bound
out
mov
cmp
test
dec
sbb
mov
add
cmpsl
arpl
sbb
cs
xor
inc
fs
jo
adc
adc
push
out
jae
inc
sub
lods
push
pop
lahf
add
xor
cmpsl
cmc
test
mov
aam
inc
cmp
aas
dec
sub
xchg
arpl
mov
arpl
cmp
rorb
or
and
mov
pop
out
mov
rol
mov
mov
adc
sbb
mov
or
das
sbb
out
iret
loopne
sub
adc
iret
adc
loop
cld
stos
inc
das
and
add
fistps
or
stos
pop
cmp
pop
dec
sub
lods
xlat
and
xchg
das
aaa
stos
or
bound
inc
jbe
mov
push
bound
push
imul
mov
fiadds
adc
and
xor
pusha
sub
addr16
cmpsb
add
or
jnp
jge
mov
ljmp
repz
jae
xor
fs
pop
jno
lods
xor
das
outsb
aad
daa
icebp
sbb
inc
and
pop
add
insl
pop
sub
test
add
dec
pop
add
mov
dec
pop
sti
push
push
xor
fldt
aaa
bound
inc
ja
pop
pop
pop
or
andl
sti
mov
push
mov
sbb
and
jecxz
and
cmp
cltd
dec
pop
in
loop
push
leave
stos
in
cld
loope
jb
pop
and
in
mov
pusha
xchg
mov
fists
push
xor
mov
je
leave
push
repnz
fldl
sub
fsubrl
cmp
leave
in
xchg
inc
sub
lock
hlt
fsts
xchg
dec
movsb
push
scas
xchg
test
push
repnz
and
adc
cltd
dec
pop
rcl
push
leave
stos
in
enter
xchg
pop
and
stos
sub
xchg
dec
and
test
fcom
mov
cmp
ror
push
xor
xchg
push
clc
rorb
xchg
inc
sbb
je
dec
loop
xor
out
pop
and
sub
xor
inc
aam
inc
sarb
sbb
pop
addr16
rorl
cmp
mov
sub
sbb
loope
movsb
inc
ret
or
inc
sbb
xor
iret
dec
fdivs
adc
xlat
inc
xor
sbb
adc
push
imul
push
dec
pop
jae
sub
sub
and
cmpb
movsb
imul
or
sub
push
dec
inc
xor
push
testl
inc
aaa
mov
aas
mov
or
movsl
and
xchg
sbb
mov
inc
xlat
push
lcall
or
pop
dec
notb
add
ret
das
and
sbb
or
dec
aaa
sub
xor
addr16
xor
push
xchg
mov
scas
or
arpl
jg
mov
lahf
jnp
arpl
xlat
pop
inc
sub
sbb
dec
pop
dec
push
pop
enter
push
mov
mov
push
sti
mov
sbb
mov
ljmp
out
js
popa
les
filds
scas
mov
iret
aaa
outsl
inc
mov
js
scas
mov
das
push
fisubrl
pop
fmuls
rcrl
test
aas
pop
gs
add
or
mov
lods
mov
mov
andb
add
mov
bound
xor
or
adc
sbb
rclb
push
loop
mov
jbe
pop
lcall
shrb
jg
xchg
xchg
add
push
pop
xlat
pop
add
sbb
bound
movsb
insl
pop
lea
ds
pop
sbb
push
pop
add
sub
pop
or
and
add
mov
pop
sbb
cs
xchg
jb
add
pop
inc
popl
or
or
mov
fisttpl
cmp
inc
es
addr16
bound
adc
je
or
test
cmp
xor
sahf
gs
cltd
add
or
cmp
xor
mov
es
jae
and
sub
sub
rcl
inc
divl
aaa
imul
adc
mov
push
jbe
cmp
jnp
xor
xor
daa
outsb
xor
pusha
insb
and
mov
push
push
int3
add
in
ja
adc
ss
mov
bound
jge
or
pop
outsl
dec
js
fs
enter
pop
daa
sbb
dec
mov
stos
invd
xor
mov
add
ret
add
and
xor
push
inc
popf
or
addl
jae
stos
and
sbbl
in
add
into
popa
push
in
mov
or
push
adc
push
inc
imul
mov
repz
div
in
and
push
dec
pop
mov
addr16
cltd
filds
sbb
cmpsl
dec
lods
xchg
pop
inc
mov
pop
mov
sub
lock
and
bound
pop
jb
xorl
js
inc
imul
mov
mov
das
sbb
mov
pop
mov
adc
mov
push
fisttps
jo
pop
inc
ja
addps
push
sub
shrb
push
incl
pop
and
rdmsr
cs
add
rclb
xor
xchg
dec
movlps
das
or
pop
cmp
xchg
imul
popa
lods
adc
push
push
push
outsl
out
push
add
mov
ficomps
insb
fiadds
add
subl
jo
xor
cmpsb
je
push
scas
ret
dec
rcll
xchg
inc
push
inc
jecxz
dec
adc
xchg
push
add
xor
popl
lea
stos
lret
mov
adcl
movsb
mov
inc
imul
mull
ja
dec
es
outsb
cmp
push
out
ret
push
push
push
cmp
scas
lods
xor
repnz
out
es
mov
aad
add
loopne
mov
inc
push
mov
inc
xchg
cmp
inc
jns
neg
pop
ret
fs
dec
sub
orl
je
xor
pop
jecxz
pop
jnp
pop
sub
dec
shlb
or
inc
or
sti
push
lret
inc
jle
js
xor
inc
cmp
xchg
scas
jbe
dec
or
fiadds
and
ss
push
sbb
dec
mov
bound
xor
mov
incb
add
inc
ffree
inc
cs
lret
jb
push
cmpsl
xchg
loop
push
cmpsb
xchg
ja
cli
jo
xor
outsb
sbbl
mov
mov
xor
js
mov
arpl
sub
arpl
fs
lock
inc
iret
syscall
or
fidivrl
push
push
mov
into
sti
pop
js
inc
orb
cmp
pop
imul
pop
pop
mov
push
es
lock
outsb
pop
push
push
xor
dec
js
ret
divl
das
inc
pop
dec
es
das
push
fisubs
add
and
or
out
sti
pop
push
sysexit
mov
cs
dec
gs
sahf
push
outsl
push
push
cli
push
push
insl
sub
out
mov
insl
mov
inc
ja,pn
xor
mov
fimull
jp
pushl
push
fiaddl
jg
mov
das
xor
das
xor
outsl
pop
outsl
dec
xor
js
push
into
xor
adc
test
outsl
imul
or
sbb
lahf
xchg
inc
and
pop
add
lods
mov
lcall
add
aam
ljmp
lock
fsubrl
lret
fmuls
ljmp
ds
sub
and
push
lock
aas
add
xor
dec
jno
mov
mov
sbb
ja
jmp
xor
xchg
out
adc
add
sub
mov
imul
test
adc
je
shrl
mov
and
and
fs
das
or
pop
addl
mov
iret
sbb
das
arpl
cmp
sbb
out
scas
xor
or
xchg
mov
lahf
push
inc
das
stos
pop
mov
jg
mov
add
out
call
lahf
inc
mov
loopne
or
jmp
xor
mov
cmp
mov
mov
jae
outsb
mov
stos
fsubrs
shl
mov
sbb
or
xlat
inc
rorb
add
mov
sti
mov
push
dec
inc
pop
insb
outsl
popa
fs
outsl
aaa
mov
push
mov
or
adc
add
sbb
call
lods
or
in
cmpsl
addr16
push
xor
iret
lods
sub
mov
push
pop
stos
std
jl
mov
push
add
neg
sub
iret
addr16
in
fimuls
sbb
jecxz
arpl
pop
lods
je
addr16
in
cwtl
xchg
scas
repz
pop
pop
pop
push
outsl
mov
bound
xchg
pop
and
sbb
clc
cwtl
xchg
inc
cmpsl
adc
faddp
push
jle
jl
push
xchg
out
cmp
add
fisubrl
dec
ja
mov
int
pop
cmp
jne
jo
arpl
xor
das
rolb
pop
pop
ja
xor
xor
mov
imul
sbb
inc
push
pop
mov
xor
pop
repz
xchg
xchg
jae
and
jae
xor
cwtl
mov
sub
dec
mov
pop
add
sbb
pushl
add
das
push
sub
test
sub
xor
ret
push
loope
push
lahf
mov
lahf
scas
xlat
xor
sub
inc
sub
iret
add
xchg
or
in
nop
aas
jecxz
mov
jbe
les
imul
lods
cwtl
dec
daa
sti
pop
aad
shll
mov
fisubrl
adc
dec
xor
mov
and
loope
ret
popa
fldt
inc
or
xor
pusha
je
int
mov
int3
fs
xchg
or
mov
inc
push
and
push
mov
inc
inc
sub
rcrl
dec
loopne
push
sbb
jns
add
mov
aaa
iret
mov
xchg
cmp
nop
outsb
dec
arpl
mov
daa
popa
ss
pusha
jbe
stos
pop
movsb
push
testb
xlat
fmull
das
repz
aam
mov
outsl
pop
or
aaa
sub
je
int3
inc
push
fs
mov
das
jne
mov
mov
sub
daa
add
dec
xlat
jle
mov
mov
push
add
jmp
add
ss
inc
cmp
shr
add
loopne
test
imul
sbb
sub
xor
xchg
sbb
add
push
and
push
cld
outsl
pop
out
mov
or
add
push
adc
push
sbb
mov
iret
xor
repz
mov
mov
repz
or
xchg
data16
insb
or
pop
or
int
or
adc
adc
sbb
and
fwait
int
sub
xor
inc
mov
mov
jnp
mov
mov
popa
xchg
add
mov
push
shrb
ret
sub
shlb
data16
or
adc
insl
jo
stc
pop
add
xchg
rclb
ss
push
dec
str
int
mov
add
inc
stc
das
incl
nop
call
push
cmp
call
pop
outsl
movsb
push
sub
dec
dec
add
inc
sqrtps
decl
mov
mov
mov
push
and
mov
add
adc
xchg
mov
mov
lods
pop
dec
movsl
enter
jmp
jb
push
push
mov
inc
push
insl
ss
adc
cli
mov
sub
das
mulb
sub
mov
sbb
mov
mov
and
xor
pop
sbb
xor
mov
mov
fsubs
sbb
ret
ljmp
dec
pop
dec
xchg
jecxz
dec
push
sbb
xchg
add
pop
jb
mov
pop
push
and
cmp
jle
scas
loopnew
xchg
push
mov
inc
and
pusha
dec
jns,pn
insb
pop
add
add
aaa
jbe
or
or
push
insb
xchg
mov
xchg
andl
iret
leave
jae
sub
sbb
or
mov
fwait
in
pop
inc
xchg
out
pop
fdivl
pop
int3
xor
jns
sahf
mov
fwait
xchg
out
adc
mov
jl
add
inc
outsl
rolb
loop
xor
or
lahf
mov
add
pop
inc
cmovs
lods
mov
xorl
movb
fistl
je
lea
and
pop
pop
xorb
inc
mov
sbb
jnp
cmp
inc
mov
pop
xor
inc
adc
rcrb
inc
jecxz
add
xor
fisubs
mov
cmp
andl
jbe
pop
push
lock
movsl
and
xlat
push
mov
add
bound
je
bound
imul
pop
jns
inc
aas
mov
add
push
and
push
add
lret
jge
das
aaa
push
fisttps
push
imul
jecxz
inc
popa
aam
lahf
pop
mov
out
andl
inc
fwait
pop
dec
push
or
inc
push
scas
mov
mov
loopne
je
aaa
or
jo
aaa
bswap
or
mov
push
xor
xor
nop
cmpsb
lea
das
inc
mov
push
mov
xchg
mov
call
dec
or
rclb
aaa
xor
pand
push
dec
andl
mov
lahf
push
jl
jae
jb
pop
fistpl
in
inc
decl
mov
adc
fdivrs
push
outsl
xlat
push
sbb
aaa
rclb
fbstp
or
inc
or
jbe
mov
mov
dec
mov
push
lahf
dec
push
adc
inc
aaa
add
or
cmpsb
push
and
cli
mov
mov
rcrl
sti
xchg
jle
jnp
mov
dec
push
push
xor
mov
xor
rcll
and
push
mov
push
xchg
stos
pop
push
movsl
lcall
inc
shlb
push
pop
xchg
aaa
sti
mov
xchg
pop
mov
cmp
fnstenv
and
arpl
sub
mov
jbe
mov
addl
sbb
pusha
cs
incb
xchg
push
lods
push
lret
test
rclb
pop
pop
dec
hlt
scas
pushf
testb
mov
es
xchg
cmp
xchg
add
cmp
xchg
push
cs
dec
pop
push
and
mov
mov
and
ss
negl
push
ror
or
int
imul
repz
pop
stos
inc
pop
pop
xchg
fldenv
mov
push
cmc
dec
push
daa
data16
idivl
sub
aaa
outsl
out
ds
repz
je
mov
adc
out
jns
xor
fiaddl
pop
repnz
mov
mov
mov
lcall
mov
test
ds
jnp
testb
xchg
fsubrp
adc
xlat
pop
xlat
sbb
xor
icebp
jns
cs
movsl
pop
pop
out
cmp
push
mov
mov
sbb
outsb
inc
dec
pop
repz
push
push
jns
es
cmp
aas
repnz
pop
ds
outsb
nop
outsl
int3
inc
mov
push
adc
xchg
dec
rclb
dec
push
insb
jl
out
test
cmpsl
stc
out
shll
and
mov
sahf
out
push
xor
cmpsl
enter
dec
sub
stc
cmp
repz
mov
jns
cmpsl
es
jno
ss
out
and
push
mov
sahf
fprem1
adc
ds
repz
mov
cli
push
push
decl
or
dec
sbb
scas
dec
aam
aad
or
adc
and
rcrb
push
push
mov
xor
adc
mov
pop
pop
mov
scas
in
bound
int
mov
leave
loop
and
push
pop
sub
lahf
add
idivb
pop
sub
adc
push
and
pop
sbb
stc
sarl
enter
adc
repnz
inc
cmp
iret
ds
or
outsb
pop
adc
add
stos
jo
mov
xchg
rcrb
sbb
dec
std
shlb
push
cmp
xlat
adc
loopne
pop
push
and
iret
popf
lock
std
ja
outsb
outsb
jp
in
loop
xor
push
js
xor
stos
pop
inc
imul
cmp
xor
addl
sbb
pop
mov
aad
lods
iret
imul
push
dec
add
adc
jmp
aas
pop
push
dec
out
xor
push
push
outsl
inc
jb
popa
je
or
subl
push
fstpt
sub
pop
inc
mov
sti
inc
fisubrl
out
pop
push
ficompl
cs
decl
xchg
ss
sti
es
mov
sbb
ljmp
shlb
adc
scas
pop
in
daa
adc
and
dec
not
push
mov
push
pop
addr16
jno
fcoml
and
add
outsl
xlat
jecxz
jmp
jo
push
jo
pop
add
inc
jg
mov
dec
xor
inc
or
daa
jecxz
outsb
insl
jno
sbb
xchg
lret
in
jnp
mov
ficoml
mov
test
mov
jb
adc
imul
mov
fwait
mull
sbb
cmova
sbb
loop
lahf
and
dec
cwtl
pop
test
push
adc
orb
add
xchg
xchg
sti
rclb
jae
xor
daa
add
pusha
mov
sysexit
les
push
dec
daa
and
xorl
dec
daa
dec
mov
fs
jo
xor
daa
fists
push
outsl
imul
je
mov
add
pop
sub
add
jo
jg
aaa
mov
jb
loopne
add
jecxz
mov
mov
xor
ret
shll
test
cwtl
and
sbb
pop
pop
inc
dec
movsl
or
push
add
mov
jmp
aaa
fldt
das
das
sbb
scas
pop
sbb
scas
out
push
pop
mov
aad
ja
xchg
pop
addr16
arpl
mov
jae
fs
sub
adc
es
adc
mov
psubq
imull
jo
cmp
mov
pop
das
xchg
es
out
pop
shll
add
lret
dec
add
jge
arpl
or
fildl
cs
pop
dec
add
adc
mov
jne
cs
popw
mov
mov
outsl
aaa
imul
pop
aaa
imul
mov
das
testl
jg
insb
adc
shlb
xchg
das
sub
insl
or
add
das
push
fildl
mov
xchg
mov
inc
dec
push
mov
inc
jle
pusha
push
pop
imul
pop
push
fsub
jecxz
out
inc
pop
push
fmulp
inc
xor
or
add
lahf
push
add
cmp
loope
testl
aas
push
mov
rol
repz
popa
fldl
das
cmovns
adc
sahf
pop
inc
add
inc
dec
fidivl
xchg
aas
adcl
inc
stos
scas
mov
xlat
pop
or
pop
out
add
push
test
pop
outsl
clc
mov
aas
add
sub
or
jp
divl
inc
inc
push
inc
scas
sub
pop
cli
cmp
dec
pop
out
or
push
popl
pop
or
lret
fidivl
mov
xor
add
xchg
sbb
jbe
inc
aaa
ret
pop
outsl
bound
dec
and
pop
mov
inc
and
fdivs
dec
cmp
ret
outsl
dec
stos
arpl
lock
cmpsl
push
pushl
jg
ret
mov
add
inc
aaa
jno
push
dec
pop
pop
inc
dec
es
inc
mov
je
and
fildll
or
out
xchg
nop
outsl
or
das
adc
and
adc
jbe
dec
add
cmp
insb
je
aaa
shr
or
ds
jo
jae
inc
loope
mov
outsl
xor
push
call
xor
dec
mov
pop
sub
fdivrs
out
jns
je
jne
or
adc
sahf
dec
fbld
ja
mov
mov
dec
jae
mov
sbb
mov
cmp
jp
inc
pop
mov
push
inc
xor
xor
imul
adc
iret
jbe
xor
data16
jmp
push
inc
fiaddl
maskmovq
testl
out
pop
stos
mov
mov
icebp
sub
cmp
dec
shll
push
mov
jg
pop
and
loop,pn
pop
into
dec
inc
push
pop
stos
mov
jmp
mov
push
and
pop
aad
inc
inc
pop
daa
fwait
cwtl
ss
add
lods
addr16
add
push
add
aam
jns
add
adc
adc
inc
mov
push
and
rol
ret
mov
rorl
inc
adc
out
or
outsb
or
aaa
inc
insb
loopne
ljmp
mov
rolb
inc
pop
push
or
dec
out
jb
pop
loope
cmp
ds
aaa
add
add
push
pop
jns
outsl
incl
dec
inc
dec
push
xchg
add
inc
loop
and
pop
aas
mov
out
sbb
sub
movl
and
push
dec
into
add
mov
negl
sets
mov
inc
aaa
jno
sti
shlb
ret
cmp
adc
pop
movsb
cmpb
aad
sbb
cwtl
stos
pop
fadds
pop
adcl
test
and
jge
push
je
mov
jb
mov
andb
fwait
rol
fwait
in
inc
mov
bswap
mov
jmp
sub
fsubrl
stc
jbe
push
ds
insl
xor
jg
mov
inc
inc
xchg
cmpsl
aad
arpl
push
sub
adc
or
cs
insl
sub
adc
or
jmp
or
cs
ret
sub
xchg
mov
data16
mov
call
call
and
cltd
test
push
push
shll
ja
daa
mov
mov
mov
sbb
cmp
fmuls
lret
rep
cs
outsl
arpl
test
add
mov
jg
insb
mov
mull
jno
addr16
std
ljmp
scas
addr16
cmp
dec
movsl
jg
push
push
mov
fwait
stos
flds
pop
and
dec
ret
js
sbb
mov
mov
das
sbb
xor
add
pop
daa
daa
dec
in
xlat
daa
push
and
push
pop
inc
inc
inc
push
sar
fildl
and
or
aas
js
insb
cwtl
pop
fisubrl
push
pop
adc
fsubs
outsb
ds
or
inc
pop
ss
sub
pop
gs
inc
sbb
pop
aas
ds
push
pushw
push
mov
pop
push
sbb
xchg
push
js
loope
mov
lahf
daa
inc
add
sub
loop
lahf
jbe
inc
add
shrb
sub
mov
pop
inc
xor
lahf
stos
fdivrs
outsb
cwtl
push
insb
mov
cmpsl
xor
inc
adc
cmp
setg
neg
imulb
push
and
lcall
sar
ret
adcl
fcom
mov
push
fisubrs
xchg
mov
ret
add
pop
or
mov
sbb
daa
or
jno
jecxz
lahf
dec
pop
mov
push
xchg
push
aaa
test
push
rdmsr
pop
dec
rcrl
adc
xor
inc
les
push
adc
jb
lock
sub
out
push
imul
ror
jne
popa
loope
fwait
sub
out
and
bound
xor
add
es
sbb
sub
in
xchg
and
add
movsb
outsl
je
mov
popa
stos
mov
out
std
xchg
sub
sub
sub
push
cmp
mov
js
ret
dec
inc
sarl
xor
jo
movsb
popa
mov
addb
insl
outsl
fs
mov
mov
gs
jo
jns
iret
inc
mov
adc
outsl
insl
jne
adc
lcall
dec
fiadds
les
sub
das
cmp
and
js
je
bound
aaa
and
cmp
pop
jbe
pop
or
insb
mov
inc
inc
mov
lds
outsl
jo
mov
lods
cmc
push
sahf
dec
sub
jmp
mov
movsbl
popf
negb
xchg
inc
or
inc
push
stc
std
fisttpll
shrl
cmc
inc
cmovo
out
imul
cmpb
aas
adc
in
nop
jo
maxps
loopne
cs
add
mov
add
inc
smsw
and
dec
jne
pop
push
inc
enter
les
imul
sbb
cmp
out
ss
add
aas
add
shlb
mull
in
dec
xor
add
inc
push
push
push
jmp
jmp
insb
das
inc
add
fstp
add
lahf
ds
jnp
add
daa
les
or
fsub
in
fsubrs
jo
daa
outsl
inc
xchg
outsb
mov
out
lds
leave
daa
xchg
cmp
je
push
jo
mov
mov
push
and
dec
fsubl
xor
scas
fisttps
inc
test
add
in
and
scas
mov
inc
pushf
leave
mov
outsl
jle
pop
lods
pop
jb
mov
dec
or
sbb
or
jg
lret
rol
adc
in
jne
scas
push
push
pop
addr16
dec
ficoms
nop
xchg
out
lahf
mov
cmp
pop
and
sti
cmp
call
inc
inc
mov
xchg
fmuls
adc
and
xor
inc
lret
xchg
dec
iret
mov
inc
outsl
xchg
js
jb
jae
orb
movsb
mov
int3
fsubs
rorb
int3
out
aad
insl
daa
sbb
aas
out
fs
mov
daa
add
push
int3
jmp
mull
pusha
push
insb
push
mov
inc
add
push
xor
lods
ds
test
jb
push
in
xor
daa
push
hlt
mov
xor
jb
repz
push
push
mov
stos
aas
ja
aam
dec
enter
or
mov
aas
dec
pop
xor
movsb
inc
hlt
nop
sub
lods
outsl
scas
add
ja
fsub
inc
cs
into
sub
push
daa
lock
stc
lods
addr16
inc
enter
jo
cmp
sbb
testl
stos
mov
add
idivb
iret
xor
push
in
negb
cmp
push
in
mov
add
add
mov
in
dec
enter
iret
rcrb
xchg
inc
jo
jo
mov
daa
scas
jns
iret
aam
or
adc
pop
jb
lock
daa
cld
and
aaa
and
push
xchg
xchg
pusha
adc
pushf
cld
jl
decl
scas
iret
lds
aam
bound
in
es
out
or
pop
sbb
sub
shlb
aas
inc
sahf
outsl
insl
ja
rcrb
nop
out
jl
test
in
add
lods
shrb
mov
cmp
jb
xor
orl
xor
ds
jb
pusha
dec
rolb
mov
pusha
test
fidivl
mov
mov
enter
cld
or
or
mov
in
loopne
rcrl
in
cmp
shl
fcoml
fisubrl
or
out
lcall
cmpb
or
cmp
hlt
or
mov
cmpsl
cmp
aaa
and
dec
push
or
pop
cmpsb
pop
fisubs
bnd
jg
mov
mov
mov
iret
test
loopne
enter
add
mov
jb
loopne
xor
test
inc
push
pop
cmpsb
inc
loopne
push
enter
and
repnz
rorb
pop
in
push
push
cmpsl
mov
pop
enter
in
pop
cmpsb
jb
dec
enter
fsubrl
ds
js
inc
push
push
push
enter
xor
js
in
stc
jg
mov
outsb
dec
mov
dec
add
test
aam
pop
enter
enter
jae
clc
and
xor
and
sti
push
inc
xlat
lahf
clc
ja
dec
repz
lahf
and
je
pop
in
push
repnz
dec
lahf
je
enter
aam
and
repnz
les
mov
test
fadd
and
pop
stos
cli
push
cmp
xorps
nop
addr16
jg
test
fcom
hlt
mov
test
nop
out
cs
out
int3
loopne
loopne
das
in
mov
movsl
cmpsb
outsl
inc
and
xor
testl
cmpsb
aam
mov
fldenv
inc
fadds
fs
xchg
jl
xchg
mov
fsts
jb
fmull
inc
mov
ds
sbb
sub
out
sub
jg
pop
enter
pop
insb
sbb
fsubrs
pop
dec
repz
mov
aam
in
pop
stos
aas
push
cmpsl
mov
test
add
adc
sub
fiaddl
cmpsl
jg
lods
cmp
daa
addr16
leave
js
dec
add
or
test
fiaddl
mov
mov
lock
or
push
mov
lock
mov
sarb
lahf
dec
iret
les
inc
jbe
dec
pushf
inc
jl
sbb
lods
rcr
inc
scas
lea
cmpsl
pushf
push
xchg
out
lock
andb
lock
inc
fstl
fs
mov
push
enter
jg
outsb
in
stc
dec
int3
xchg
daa
movsb
lahf
pusha
insl
inc
jo
inc
ja
pop
enter
in
or
pop
adc
dec
enter
sarl
fimuls
sub
lahf
dec
inc
ja
sub
aaa
daa
sar
fisubs
jne,pn
push
lods
fdivrp
push
pushl
mov
cmpsl
jo
faddl
lahf
jo
test
fcompl
adc
cmp
push
fists
imul
dec
roll
lahf
int3
inc
or
or
rolb
push
hlt
mov
or
push
inc
jg
inc
lcall
lahf
push
orl
lahf
or
je
test
add
push
call
xorl
or
inc
enter
inc
mov
cmp
lock
cmp
iret
mov
mov
dec
in
insb
daa
or
lahf
in
inc
and
pop
imul
sarl
loopne
outsl
push
jae
add
jmp
loopne
loop
and
lahf
dec
cltd
lods
lods
add
lahf
or
in
jo
out
cs
fs
mov
in
nop
mov
rorb
mov
aaa
and
push
and
lahf
mov
ja
in
jb
iret
test
in
pop
enter
aam
fldl
or
in
lahf
mov
add
sbb
cs
inc
lock
in
mov
push
xchg
inc
stos
xchg
outsl
aas
mov
dec
sahf
imul
add
sahf
mov
rcr
or
das
adc
lahf
fmuls
in
push
and
inc
jo
push
movsb
das
fmuls
outsl
xchg
clc
push
fs
dec
sahf
jo
clc
outsl
lock
aad
cs
xchg
mov
iret
add
nop
or
flds
clc
push
repnz
and
nop
or
out
outsb
in
pushf
adc
daa
addr16
insb
or
add
sahf
pop
pushf
daa
lods
in
xchg
mov
xor
ljmp
mov
scas
xlat
pop
push
sbb
mov
push
sbb
push
sub
cmp
aas
call
les
incl
lods
pop
adc
ja
mov
mov
add
dec
in
repnz
cld
sub
fiadds
out
dec
dec
call
fwait
pop
push
pusha
daa
aas
movl
addr16
or
add
pop
out
repz
mov
ja
daa
sbb
dec
scas
fs
jmp
scas
in
cmp
in
scas
xor
dec
scas
in
and
aam
push
call
enter
add
push
pop
push
inc
xor
data16
icebp
cwtl
neg
dec
clc
adc
stc
mov
push
xor
lock
out
int3
mov
push
js
out
push
jns
out
sahf
push
inc
out
ds
ja
out
push
js
or
jl
jl
test
push
add
adc
scas
fisubs
jg
add
inc
inc
adc
dec
ja,pt
inc
cld
push
mov
push
ret
inc
lcall
add
nop
cmp
sub
in
mov
xchg
mov
idivl
push
or
fdivr
inc
push
push
incl
mov
jmp
ja
ss
arpl
leave
adc
popa
xchg
dec
inc
dec
outsl
scas
fs
pop
movsb
sti
inc
sbb
adc
add
shr
ret
xchg
cmp
loopne
in
in
outsl
add
insb
and
mov
daa
inc
in
ret
sarb
in
fildll
push
xor
cmp
filds
jb
scas
test
cmp
push
lock
adc
popa
and
push
rcrl
out
int3
sbb
and
xchg
mov
cmp
add
and
ljmp
dec
repnz
mov
scas
add
or
and
xor
push
jno
pop
xor
out
or
repnz
out
out
outsl
add
mov
fildll
loop
rolb
js
lcall
cwtl
add
jns
sub
add
jnp
xlat
add
adc
test
sub
leave
mov
je
negl
loopne
pop
jg
lods
or
out
adc
mov
sub
dec
enter
cld
lock
pop
in
and
outsl
sbb
xchg
and
fisubs
jl
adc
mov
fdivrp
and
push
xor
jbe
fcoms
add
aam
shl
xchg
add
cmpsl
pop
dec
out
sbb
daa
add
xlat
callw
cmpsl
in
push
xchg
aaa
sbb
add
fisubrs
divl
insb
jnp
jmp
push
fsubs
push
jbe
aaa
jmp
call
loopne
popa
popf
pop
mov
mov
sub
test
in
jg
push
jo
add
xor
cmovle
inc
repz
push
repz
jnp
ret
nop
pop
sbb
jecxz
push
ds
dec
add
js
mov
cwtl
mov
mov
divl
fisttps
hlt
adc
outsl
push
mov
mov
push
outsl
jg
inc
pop
cmp
pop
pusha
xchg
daa
cli
push
repnz
mov
mov
push
mov
cwtl
cmc
fnstsw
test
dec
xor
lcall
push
mov
pop
hlt
mov
loope
or
or
ficoml
and
or
decl
testb
aad
xlat
or
pushf
xchg
xchg
insb
dec
shl
push
testl
in
cmc
and
push
pop
cld
cmc
mov
testl
dec
push
push
mov
mov
testl
divb
xor
aaa
adc
divb
call
cmp
dec
divl
sub
outsl
sbb
or
js
cmpsl
push
pushf
nop
adc
xor
fiaddl
dec
mov
pusha
mov
jg
daa
cmpsl
mov
mov
clc
ja
loop
in
addb
xor
jg
in
fiaddl
int3
add
mov
jl
or
adc
bound
clc
and
in
push
mov
das
outsl
add
push
or
pop
mov
cmp
pop
dec
pop
cli
pop
adc
pop
stc
aaa
add
xchg
dec
and
mov
push
in
mov
lods
or
addr16
dec
xchg
add
add
daa
loopne
sub
daa
or
mov
inc
fcomip
sahf
xchg
test
movsb
adc
clc
sti
cmp
mov
fldt
ret
mov
or
aas
sub
push
test
xchg
sub
fdivrs
sti
sbb
movsb
mov
sti
push
sti
outsl
fsubl
inc
cs
fbld
rolb
add
add
xchg
aaa
and
cld
xchg
mov
mov
pop
pusha
and
xor
jl
out
lods
or
add
lahf
addr16
dec
loopne
or
out
les
jb
push
jb
add
pop
rcl
adc
mov
adc
push
mov
aas
arpl
or
idivb
fwait
sub
addr16
push
add
push
inc
mov
push
dec
mull
test
incb
sub
jns
or
jmp
das
aaa
and
outsb
dec
lcall
rcl
lock
or
inc
rcl
adc
mov
push
inc
ljmp
ja
shrb
clc
out
push
or
negl
mov
aam
clc
ja
pop
test
outsl
call
mov
mov
aad
shrb
add
dec
jns
int
shll
jae
xchg
repz
out
in
mov
cmpsl
stc
cmp
pushf
ret
mov
out
sahf
jo
mov
add
cmp
xchg
mov
sahf
out
cmp
repz
call
mov
sahf
cmpsl
stc
cmp
lea
repz
sarl
jbe
es
loope
jns
out
nop
cmp
jmp
cmp
pop
sbbb
jns
pop
mov
cmp
repz
insl
xchg
shl
sahf
cmpsl
stc
sub
cmp
out
or
jns
iret
rolb
xchg
and
iret
repz
add
add
arpl
cmp
imul
push
popf
rcrb
dec
repz
push
pop
movsb
sahf
ja
ds
pushf
ficomps
iret
sarl
inc
loop
lahf
push
out
out
lods
repnz
repz
ljmp
mov
out
ds
ds
mov
mov
mov
cmp
sbb
mov
cmpsb
movb
mov
loopne
cmpsl
jp,pt
jl
stc
sahf
mov
push
lahf
sbb
rcrl
push
stos
mov
push
stos
jbe
cli
xor
mov
lahf
lods
adc
jle
ds
jnp
jns
iret
sbb
repz
dec
jmp
mov
mov
xchg
imul
mov
lahf
iret
sarl
cmc
inc
mov
jmp
lahf
out
lcall
mov
iret
repz
mov
cmp
out
cmpsb
leave
pusha
mov
cmpsl
stc
add
mov
cmpb
enter
cmpsl
stc
out
repz
mov
sahf
mov
push
xchg
mov
cmp
repz
cmp
jns
out
ret
cli
xor
dec
jo
into
add
push
out
jl
cmpsl
out
lds
jns
push
mov
popa
push
enter
sahf
dec
subl
es
mov
fnstsw
lret
fiadds
mov
sarl
enter
xchg
mov
cmpsl
stc
cmp
push
iret
fwait
out
ss
jge
ja
push
mov
xor
pop
push
lods
cmp
out
xlat
cli
sub
stc
out
repz
ds
or
or
cmp
mov
add
out
lcall
mov
faddl
fdivs
cwtl
cmp
ja
push
lods
inc
fidivl
iret
sarl
imul
mov
ds
mov
or
test
test
daa
loopne
iret
imulb
shl
xchg
call
iret
div
jmp
push
sub
mov
xor
push
div
lcall
cli
loope
movsl
std
int
lods
mov
dec
add
xor
add
lahf
cmp
fnsave
int3
nopl
inc
incb
aas
mov
inc
cmp
repnz
popa
nopl
scas
adcl
lea
or
add
pop
aaa
int
mov
jge
inc
pop
mov
outsb
pop
leave
or
addb
adc
aas
pop
xchg
xor
das
fs
fsub
adc
pop
fildll
das
stos
popf
push
cmp
xchg
mov
sarl
aas
pop
cmp
into
mov
pop
and
movl
mov
or
out
aas
int3
adc
mov
sbb
push
outsl
adc
inc
movl
dec
sbb
inc
dec
pop
iret
mov
cmpsl
fmul
and
fwait
xor
and
inc
dec
pop
dec
jg
jb
cmp
dec
aas
in
xchg
outsl
test
scas
xlat
ss
push
inc
pop
or
lods
adc
movq
mov
clc
add
daa
hlt
push
ret
jl
pop
cmp
lods
cmpl
adc
shlb
ja
or
inc
push
push
pop
push
lahf
cmp
enter
inc
js
jns
xchg
xchg
pushf
movsb
or
mov
fists
inc
ffreep
movl
pop
cmp
mov
sarb
hlt
jne
repnz
pcmpeqb
scas
orb
les
dec
leave
sbbl
inc
inc
xchg
pop
inc
leave
or
jne
xchg
inc
shlb
lahf
leave
out
loope
push
dec
xchg
or
mov
add
inc
lds
inc
pop
inc
or
push
or
jmp
xchg
leave
mov
dec
fldenv
add
in
xchg
outsl
pop
iret
ja
pop
mov
mov
xor
in
mov
ja
fildl
outsb
fbstp
mov
mov
cmp
in
pushf
lea
push
mov
js
xchg
mov
push
push
pop
and
cmp
lret
push
inc
dec
mov
out
xchg
mov
fimull
cmp
aam
xchg
rorl
xchg
xchg
add
pop
ja
pop
jb
mov
xlat
popf
popa
scas
xor
push
mov
cmpsl
sbb
and
das
mov
pushf
in
mov
jo
push
fisttps
mov
push
scas
mov
xor
add
repnz
sub
pop
ret
or
inc
mov
mov
jl
add
cmp
push
push
lea
fdivrl
scas
in
leave
aam
xchg
lock
dec
cmpsb
popf
push
dec
mov
je
sarb
pop
ja
xchg
pop
mov
iret
fcompl
out
add
pop
fisubl
or
int3
adc
enter
cmpsl
xor
and
jb
call
sbb
push
addr16
pop
mov
push
daa
push
or
in
outsl
mov
xchg
xchg
xchg
add
pop
roll
adc
pop
xlat
movsl
ja
data16
aaa
dec
cmpsl
cmpsb
test
push
adcl
lea
test
mov
shrl
push
add
jne
popf
fldt
jne
jge
movl
je
dec
dec
mov
shl
popf
xor
push
dec
dec
cs
jo
repz
enter
add
out
and
ds
in
jbe
in
cmovbe
divps
popw
outsb
mov
sbb
pop
xchg
add
andb
jmp
repz
push
fcmovnb
out
iret
repz
or
or
or
repnz
lcall
mov
js
dec
push
add
jbe
scas
push
push
daa
pop
pop
addr16
ret
in
in
xorb
daa
mov
stos
xchg
mov
add
iret
repz
add
add
xchg
or
and
test
imul
xchg
leave
inc
cmp
push
cmpsl
add
cmpsl
in
inc
scas
ja
dec
pop
or
cmp
pop
mov
jb
das
jge
mov
and
nop
stos
nop
mov
fnsave
jb
ret
nop
rclb
mov
out
xchg
icebp
ss
or
sbb
sbb
cmp
aas
add
cmpsl
sub
pusha
sbb
leave
dec
lods
daa
jo
jne
das
mov
scas
test
inc
in
hlt
nop
in
inc
add
into
sbb
xchg
out
in
xchg
xchg
icebp
xchg
cld
xchg
or
sbb
fcmovnb
add
xor
add
bound
push
fists
test
jo
jno
pop
push
aas
mov
xchg
lock
jp
or
repnz
sbb
cmpsb
roll
scas
push
shlb
in
mov
push
add
mov
xchg
inc
dec
leave
add
sbb
sbb
sbb
jns
bswap
aas
nop
inc
push
sbb
nop
and
inc
sbb
xchg
push
mov
and
notl
ja
xchg
dec
enter
cmp
mov
aaa
sbb
xchg
mov
mov
sbb
push
daa
push
sbb
inc
jo
add
mov
sbb
jg
xchg
fildl
pop
mov
xchg
sbb
xchg
js
mov
aam
aas
pop
cmpsl
cmp
dec
jb
sbb
pop
pop
xor
pop
xlat
mov
outsl
into
out
inc
rcll
popl
mov
inc
sub
jb
sbb
leave
stos
push
mov
mov
push
filds
fs
push
je
jbe
das
and
inc
ucomiss
push
jmp
rclb
add
dec
lcall
dec
outsb
pop
int
xchg
inc
lds
ja
addr16
pop
dec
shl
pop
in
push
repnz
adc
paddw
mov
pop
adc
daa
lahf
add
mov
and
cmp
and
mov
sbbb
popf
adcl
push
add
iret
repz
add
ror
pop
in
sti
inc
or
pop
leave
mov
xchg
and
push
ret
mov
mov
sbb
movsb
sub
and
pop
and
xlat
test
movsb
in
es
and
rorb
repnz
cmc
xchg
or
sbb
and
jg
cmpl
push
inc
out
jb
add
fsubrs
xchg
cwtl
mov
int
push
out
clc
mov
adc
and
int
cwtl
je
popa
aaa
mov
test
mov
mov
pop
rclb
and
push
lcall
xchg
pushf
pop
mov
scas
add
mov
fnstsw
out
ja
cmp
icebp
xchg
es
rcrl
fbstp
and
out
push
sets
test
mov
mov
fistps
fs
pop
in
mov
mov
clc
stc
fcmovbe
out
adcb
push
pop
mov
cmp
adc
and
addb
mov
pop
sbb
es
popf
push
popf
add
iret
mov
cs
pop
cld
es
in
in
es
pushf
jbe
jecxz
jmp
scas
inc
daa
pop
jo
mov
cwtl
cltd
push
daa
aas
mov
ret
lret
outsl
rorl
add
out
fucomi
add
hlt
in
pop
sahf
out
setle
or
daa
sahf
mov
inc
jg
adc
inc
lret
adc
and
xor
mov
inc
push
push
mov
ja
pop
ja
pop
daa
jbe
daa
orl
mov
sbb
xlat
cmpsl
cltd
push
scas
movsb
push
lahf
scas
sahf
call
pop
push
leave
aam
fildl
sub
push
xlat
mov
cmp
xor
add
inc
xchg
adc
cmp
pop
mov
outsb
js
out
mov
jns
fstpl
lahf
sahf
lahf
sbb
push
pop
call
shlb
pminsw
vmwrite
sub
or
fstpl
dec
outsb
daa
iret
jnp
push
add
das
jo
fcmovne
repz
add
es
ja
xchg
cwtl
mov
cmpsl
addr16
pop
int3
sbb
in
daa
repnz
or
rcrl
xchg
and
pop
lods
inc
push
xchg
leave
and
int
mov
scas
ja
cmc
mov
mov
fs
mov
into
push
mov
push
pop
leave
jae
pop
dec
ja
test
fwait
bt
out
iret
cmp
mov
add
and
daa
daa
fiadds
push
pop
sbb
ljmp
dec
inc
cmovnp
add
in
fisubrs
ja
mov
mov
cmpsl
push
into
sub
sub
jae
iret
repz
sti
pop
movsb
pop
repz
or
ja
mov
ja
pop
repz
cmp
dec
add
add
cmp
leave
insl
js
orl
cltd
or
scas
das
mov
in
dec
sahf
push
adc
iret
enter
adc
pop
movsl
adc
shr
es
cmp
xor
ljmp
jmp
fbstp
pop
das
push
lcall
rsm
mov
jae
push
addr16
xchg
push
idiv
pop
push
cmpsb
mov
push
add
and
xlat
fcomps
shrb
setb
dec
cmpsb
xor
fnsave
ja
xorb
ss
cmp
push
inc
jb
and
push
shl
inc
jb
sti
cld
push
cmpsl
mov
pop
and
daa
cs
add
add
xor
pop
xchg
xchg
cmpsl
loopne
test
mov
int
das
add
in
test
addl
in
scas
mov
out
inc
scas
cld
xor
in
push
mov
call
les
orb
xor
xor
jo
add
pavgb
call
lock
adc
mov
test
and
loope
cmp
cmp
mov
or
mov
push
mov
mov
out
in
in
add
fucom
in
pop
inc
mov
test
test
xchg
and
mov
das
push
test
pop
je
out
mov
inc
mov
push
add
mov
jns
leave
xrelease
or
leave
leave
in
and
idiv
adc
sete
sub
es
xchg
stos
xor
pop
stos
xchg
popf
out
add
bound
add
jnp
jle
fsubrs
popf
pop
cmpsl
scas
addr16
cmp
adc
in
cmp
rolb
decb
sbb
push
push
mov
dec
mov
jo
outsb
stos
dec
xor
mov
xor
repnz
pushf
stos
cmpsl
stos
ss
fimull
loop
ljmp
repnz
jns
xchg
js
lods
lcall
in
and
mov
out
adc
jo
adcl
fldt
mov
mov
dec
dec
sub
fists
popa
sub
dec
out
pop
imull
dec
incl
lods
femms
push
push
pop
out
jns
pop
or
das
or
jns
xchg
aaa
aas
or
or
dec
push
push
pop
adc
repz
adc
jg
sahf
xlat
insl
pop
unpckhps
xchg
vphaddbw
xchg
lods
xlat
sbb
int3
mov
lods
das
std
repnz
scas
das
fsubl
sub
push
pop
cmp
int
ja
push
xchg
scas
js
shll
scas
scas
in
movsl
inc
jmp
cmp
cmp
scas
push
hlt
xchg
sbb
ss
das
pop
cmp
mov
imul
ja
cmp
xchg
pop
add
ja
or
scas
push
movzbl
dec
or
into
cmp
and
fimuls
pop
repnz
cmovle
add
outsl
jp
pop
cmp
push
aas
ret
jnp
in
rcll
jl
aas
pop
dec
or
pop
cmc
jo
aaa
or
push
adc
adc
pop
out
jo
adc
in
sbb
push
cmp
and
in
xchg
cmp
cmp
cmp
enter
xor
aas
push
add
xlat
outsl
dec
push
add
daa
daa
iret
enter
add
pushf
cmp
test
mov
lea
lret
or
pushl
repnz
sub
xor
loope
xlat
iret
inc
push
pop
jb
add
add
dec
and
incb
lcall
pusha
cmp
inc
fimuls
dec
mov
add
insb
jmp
repz
jp
add
xchg
push
repz
push
mov
inc
pop
cmp
push
loopne
or
inc
xchg
call
mov
jns
out
push
add
add
add
jns
out
add
add
sahf
push
jns
mov
xchg
jp
out
or
ss
add
push
push
repz
std
mov
add
mov
fnstcw
mov
ds
xchg
sbb
sub
repnz
cmp
in
fs
mov
ficompl
iret
pushl
lds
into
mov
and
arpl
or
aam
leave
add
aas
mov
xor
in
pop
in
in
in
in
aad
lds
push
adcb
lahf
addb
addr16
inc
cmp
inc
leave
in
mov
xchg
cmp
incb
xchg
add
leave
inc
mov
xchg
xchg
mov
in
mov
cmp
adc
lods
mov
pop
ss
ds
inc
shll
punpcklwd
insb
mov
inc
inc
lahf
jbe
cmp
cmpsl
scas
mov
ret
out
fisttpll
add
pop
cmp
enter
testb
or
mov
scas
js
push
mov
mov
or
or
stc
or
add
cs
and
gs
hlt
inc
and
insl
inc
mov
insb
scas
roll
scas
jl
pop
adc
sub
mov
mov
je
fildl
ja
fucomi
sub
call
jns
out
xlat
pop
fbstp
outsb
pop
out
maskmovq
or
inc
mov
sub
mov
inc
sbb
nop
cmp
frstor
add
push
mov
mov
lods
xchg
mov
nop
lcall
daa
adc
loopne
enter
dec
or
fcmovu
sbb
das
and
dec
je
test
push
addr16
pop
and
add
rorb
sahf
cmpl
dec
jecxz
mov
daa
mov
iret
in
hlt
mov
out
mov
xlat
mov
mov
mov
call
pop
jo
pop
hlt
loope
rcll
add
flds
dec
mov
cmpsl
push
and
fstps
xor
xchg
iret
add
mov
mov
out
add
das
jg
cmpl
xchg
fimuls
add
sahf
dec
pop
cmp
cmpsl
or
adc
stc
nopl
mov
fisubl
bound
jp
xchg
inc
daa
mov
mov
mov
fstpt
push
rcrl
psllq
movsb
add
fmull
out
jns
iret
or
std
push
or
mov
adc
push
push
setle
js
sub
out
adc
insb
cmp
scas
mov
daa
iret
add
das
jbe
leave
leave
jg
seta
xor
imul
mov
mov
mov
por
in
add
adc
xchg
add
and
aaa
mov
sahf
aaa
xacquire
fs
add
iret
mov
jle
xchg
pop
nop
subl
or
test
leave
movsb
mov
das
pop
xchg
xchg
mov
mov
decl
pop
mov
leave
and
push
push
mov
push
mov
xchg
setl
jbe
fildll
jns
leave
repz
in
pop
jo
out
dec
cli
dec
or
sub
sbb
je
pusha
punpckhbw
sahf
ja
mov
orb
push
add
dec
push
dec
cwtl
xlat
or
adc
lods
adc
push
xchg
pop
pop
push
aas
push
pop
leave
xor
shlb
mov
shlb
cmp
add
mov
cmpsl
push
sub
das
daa
daa
mov
je
jl
mov
mov
insl
xchg
outsb
pop
sub
iret
fidivrl
pop
ja
loop
ljmp
cli
add
pop
add
shl
xor
rcrl
repnz
scas
push
add
movsl
sarb
sar
iret
leave
in
in
mov
popf
pushf
pop
and
fiadds
mov
dec
iret
leave
insl
in
ret
sbb
add
insl
xchg
pop
xchg
sub
push
xchg
dec
dec
dec
outsb
daa
push
subps
sbb
das
popl
xchg
setg
iret
cmpsl
addr16
leave
leave
scas
mov
push
leave
inc
repnz
or
ljmp
mov
addr16
adc
xchg
mov
ret
mov
mov
punpcklbw
int3
pushf
pushf
fsubrl
mov
fwait
add
pop
push
mov
fbld
out
je
jmp
fists
aas
sbb
ja
lret
les
sub
xchg
jns
xor
add
setnp
push
cmp
rcr
popf
or
xlat
mov
les
push
inc
call
fmull
pop
aas
int3
paddq
xchg
mov
lds
cmp
and
lds
cmp
mov
leave
leave
leave
mov
xchg
pop
leave
aas
dec
outsb
mov
jecxz
out
xchg
lds
add
in
sub
aas
shufps
push
popa
pushf
pusha
push
aaa
push
rorb
imul
jae
in
push
fisttps
xchg
cmp
sbb
ja
scas
and
mov
clc
scas
fcmovne
in
iret
mov
loope
add
cld
movsb
adc
pop
pop
adc
iret
jae
mov
and
insl
xchg
inc
pop
dec
outsl
push
stos
cwtl
in
lcall
push
dec
ficomps
iret
xchg
fsubrl
sub
pop
popf
fildll
es
mov
das
lret
repz
cs
rcr
rorb
or
dec
and
push
pop
invd
push
push
cmpl
movsb
fstpt
add
setb
add
fcoms
fmull
fstpt
enter
pop
xchg
mov
mov
or
in
in
mov
or
leave
push
push
push
jle
leave
cmp
push
dec
leave
mov
imul
push
add
icebp
in
push
orl
inc
mov
or
pop
or
daa
sbb
lret
xchg
cmp
pop
rolb
fiaddl
fwait
mov
push
ljmp
out
push
iret
cli
push
or
das
or
pop
leave
out
decl
push
inc
shll
pop
sahf
pop
jmp
add
add
and
leave
cltd
lret
les
mov
mov
or
adc
leave
repz
add
stos
daa
aaa
inc
out
sub
lret
jmp
mov
mov
out
pop
outsl
in
jbe
insl
addr16
setg
cmpsl
bt
mov
pop
sahf
and
leave
cmp
mov
mov
push
sbb
add
and
push
sahf
out
sahf
or
pop
or
pop
out
or
int3
dec
and
sbb
cwtl
pop
mov
mov
xadd
push
fildl
xchg
lcall
addr16
repz
add
scas
test
fwait
pop
or
add
adc
and
sbb
pop
fbld
adcb
int
dec
mov
pop
int
cwtl
addl
out
loopne
repnz
pop
xchg
add
jg
pop
xor
mov
dec
pop
je
sub
add
dec
repnz
int
int
out
inc
dec
jne
sbb
out
outsb
mov
cmovo
dec
add
out
in
sahf
add
push
or
repz
or
leave
repz
cmp
repz
les
iret
adc
repz
ficoml
in
lock
adc
iret
adc
jnp
push
sbb
daa
sbb
repz
xor
cmp
dec
mov
adc
adc
adc
dec
dec
dec
dec
adc
push
or
push
sub
pop
xor
lock
out
iret
iret
jnp
xchg
mov
add
xchg
inc
xor
je
aas
push
xchg
out
push
jns
daa
lods
pop
jl
daa
daa
pop
leave
popf
mov
jmp
push
test
ffree
fidivs
scas
adc
das
add
scas
xchg
outsl
dec
sahf
or
pop
daa
or
push
mov
cmpsl
rcrb
ja
scas
push
dec
and
ljmp
rorb
mov
ja
push
pusha
test
jmp
cmp
mov
pop
mov
cmpsl
pop
sarb
cmp
enter
fsub
cmp
dec
mov
add
pop
xchg
iret
or
leave
lret
and
adc
sub
and
dec
push
and
xchg
jp
adc
iret
loopne
repnz
iret
cmp
rcll
pop
lcall
pop
adc
sar
and
mov
dec
push
pop
dec
xchg
xchg
out
add
out
mov
xchg
push
mov
ja
jbe
cltd
mov
ror
inc
dec
xor
xchg
repz
in
rorl
push
add
add
jns
leave
sbb
push
add
mov
xor
pop
cmp
or
repz
sahf
or
push
or
or
popa
push
imul
dec
adc
repnz
mov
xchg
pushf
inc
ss
movsb
xchg
push
popa
pop
pushf
fmull
movl
repz
shl
ja
loopne
cmp
inc
das
fdiv
inc
mov
add
rcrb
xor
lret
test
movsl
xlat
push
dec
inc
aam
push
lret
test
iret
add
aam
pop
les
outsb
push
fildll
jno
add
mov
or
xlat
gs
outsb
negl
jmp
sub
fs
iret
mov
dec
iret
xlat
pandn
outsb
pop
pushf
out
out
maskmovq
testl
sbb
and
and
push
mov
fcmovne
leave
inc
arpl
shld
fcomps
jmp
cmpsb
addr16
adc
or
sub
pop
jb
and
cwtl
rcrb
push
hlt
xchg
xlat
cmova
incl
push
jg
fldt
sub
or
xor
imull
push
mov
cmp
adc
jmp
mov
gs
movl
and
outsb
xchg
add
jmp
loope
add
or
psubsw
mov
cmova
push
pop
pop
xlat
iret
mov
inc
iret
popa
xlat
push
push
jno
jb
es
pop
add
mov
iret
leave
jns
or
movntq
out
cmp
adc
fsubrl
xchg
sarb
cmp
int3
paddq
mov
mov
jl
xchg
idiv
addr16
inc
jmp
enter
sub
js
xchg
dec
cld
dec
data16
jg
xor
mov
lahf
pxor
push
xchg
push
add
setae
in
idivl
enter
fsts
or
sub
xor
add
addr16
push
ret
test
outsb
fnstenv
leave
sub
push
mov
fwait
pop
movsl
xchg
pop
push
enter
lar
push
pop
sub
fldt
es
ud0
vmwrite
enter
ficoml
mov
aaa
fidivrl
or
mov
es
imul
mov
push
add
imul
dec
mov
ficompl
mov
fidivl
decl
xchg
mov
loope
cmp
push
cmp
push
daa
adc
xchg
cmp
scas
or
or
jnp
test
push
ja
in
xchg
push
or
adc
pop
fcmovnu
add
nop
push
xchg
cmp
dec
xorps
add
int3
test
sub
mov
popf
pop
pop
fisttpll
fisubl
imul
psubd
mov
and
xchg
in
fsubl
xchg
mov
xchg
pop
int3
xchg
fnstsw
add
loop
xchg
nopl
lods
daa
aaa
das
jg
xchg
xchg
fcomip
fdivr
pop
jb
outsb
or
pop
push
add
iret
jae
jb
add
or
sbb
and
or
rclb
dec
adc
mov
fisttpll
mov
pop
push
add
arpl
mov
mov
je
cmp
mov
es
mov
sahf
or
xlat
or
leave
out
or
insl
add
inc
inc
xchg
ficomps
push
mov
push
xlat
fmulp
pop
cmp
add
das
xchg
jae
js
push
popf
pop
dec
pop
lods
jns
pop
stos
iret
mov
dec
andnps
or
pop
fsub
pop
push
pop
gs
out
sahf
out
adc
jge
xchg
pushf
je
test
adc
mov
pop
vpmullw
jns
in
sbb
nopl
in
je
out
cmc
pop
std
mov
out
sbb
add
adc
mov
dec
and
sub
out
dec
xor
out
sahf
out
dec
sub
sub
pop
cs
insl
mov
mov
fildll
xor
insl
pop
lds
mov
sub
pop
cltd
and
dec
fsubrl
jmp
into
adc
push
aas
push
repnz
inc
fistps
jp
dec
jo
loopne
sbb
cltd
fnstsw
xchg
daa
pop
leave
test
andps
fmull
pop
xchg
add
leave
enter
outsl
mov
cmpsl
fwait
mov
push
mov
popf
scas
cmpsl
mov
mov
leave
repz
loopne
jmp
idivb
imull
add
or
cmp
iret
cmp
push
adc
adc
mov
adc
jns
iret
repz
test
push
pop
lcall
sbb
repz
sbb
sbb
out
repz
loope
cmp
rorl
and
repz
daa
and
inc
and
dec
es
daa
push
sub
subb
repz
sub
repz
cs
das
shlb
fucomi
aas
repz
addr16
jg
jecxz
adc
mov
jecxz
repz
inc
es
cmp
repz
push
and
and
cmp
rep
and
or
cmp
and
cmp
repz
scas
sbb
repz
iret
sbb
iret
repz
pop
in
lock
sti
sahf
cmpsl
stc
cmp
push
in
adc
cmp
repz
sbb
sub
scas
fwait
mov
inc
pop
push
jle
jb
jmp
pop
dec
cmovp
pop
pop
data16
sahf
ja
das
jle
mov
push
xchg
or
lahf
add
in
in
push
leave
bound
jno
outsl
call
psadbw
in
pop
in
inc
pop
pop
daa
in
in
pop
sahf
out
sahf
aas
or
or
out
or
cmpb
loopne
jle
in
setle
cmp
repz
repz
mov
adc
ficoml
in
out
xchg
pop
iret
repz
sbb
repz
sbb
sbb
xor
cmp
cmp
and
push
in
jo
js
orl
mov
cmpsb
push
sbb
repz
iret
repz
adc
in
iret
repz
in
adc
adc
ret
repz
movd
or
or
adc
sbb
and
cmp
repz
or
or
sbb
dec
inc
out
out
push
ds
dec
aaa
jns
cmovo
fsubrs
out
push
je
jp
ljmp
mov
mov
fistpl
pmaxub
pop
jo
mov
int
aad
or
mov
lahf
in
mov
in
push
pop
std
out
lea
pop
add
push
adc
sbb
iret
leave
leave
in
aaa
pop
aas
inc
push
sbb
adc
cmpsl
sbb
addb
cwtl
jbe
call
dec
ja
call
push
push
daa
mov
xchg
out
add
jecxz
add
jbe
psubq
jmp
jb
sbb
and
in
sahf
out
adc
popf
cmp
push
push
adc
jb
jb
jp
orb
lcall
jb
ret
and
and
jmp
shlb
ljmp
ljmp
jns
cmp
dec
sahf
pop
push
pop
packsswb
or
je
imul
jae
push
out
dec
sahf
push
orl
daa
mov
fwait
mov
scas
daa
push
leave
addr16
adc
loope
jb
daa
out
ljmp
iret
repz
adc
add
iret
leave
repz
xor
leave
repz
push
or
jns
out
pusha
push
imul
cmp
out
adcl
dec
sahf
ja
push
adc
into
psubusw
out
pop
in
out
sbb
iret
in
pop
cmp
in
pop
adc
pop
sbb
xor
cmp
pushf
cmp
inc
and
and
and
leave
repz
xchg
lahf
rsm
sahf
xchg
xchg
xchg
mov
lret
lds
in
imul
outsl
movsb
push
leave
xor
call
jne
addr16
iret
push
pop
sub
dec
push
add
dec
in
out
sahf
pop
push
add
out
sahf
pop
je
jle
xchg
lcall
mov
jae
jb
lret
jns
daa
loop
ljmp
cli
sbb
out
bndldx
dec
aaa
jns
or
adc
sbb
cmp
and
xchg
inc
pop
maxps
pushf
pushf
pushf
jno
orl
out
mov
insl
lods
das
mov
or
jl
xchg
xchg
test
fidivrs
push
std
or
push
jl
mov
and
fildll
push
or
cmp
repnz
fwait
push
or
bound
mov
jp
outsb
mov
in
test
lahf
fwait
mov
cmp
repz
adc
adc
fcmovne
aam
paddsb
lock
iret
repz
push
fistpl
sbb
cmc
push
add
mov
cmp
push
nop
pop
and
lahf
in
in
cmp
icebp
mov
add
maskmovq
jae
movaps
sub
sub
jae
cmp
sub
cmp
repz
pop
xor
repz
repz
jge
mov
repz
fidivs
xchg
sahf
sahf
ss
aaa
xchg
cmpsb
repnz
cmp
cmp
mov
lahf
icebp
aas
jb
cmp
sahf
out
fidivrs
aas
mov
stos
scas
mov
roll
iret
repz
inc
xlat
inc
in
outsl
daa
iret
inc
icebp
das
or
dec
adc
cmp
repz
adc
add
lock
daa
je
dec
int
dec
adcl
sarb
js
movsl
xchg
jge
jg
pop
repnz
fcoml
mov
jle
mov
push
ja
cmp
push
mov
in
jns
or
or
fdivrl
and
repnz
iret
repz
push
sbb
adc
inc
push
adc
adc
push
popa
insb
pop
sbb
fsubrl
orb
pop
lcall
mov
bswap
push
and
in
repnz
por
dec
ss
icebp
add
jg
or
cmp
inc
push
add
pop
xchg
cwtl
fs
hlt
sbbl
push
add
popf
add
mov
pop
mov
pop
cmp
fcompl
cmc
hlt
jl
mov
pop
or
cmovle
cmc
cmp
mov
push
adc
adc
mov
adc
repz
pop
pop
sbb
out
fidivrs
sbb
repnz
mov
sub
iret
jnp
xor
push
shll
jae
mov
fimuls
jmp
cmp
daa
ljmp
or
cs
and
push
sub
fnstcw
fbstp
cwtl
addl
dec
jg
mov
sbb
div
popf
cmp
repz
add
mov
fidivrs
lahf
out
jecxz,pn
repnz
adc
outsl
jp
pop
testl
negl
cmp
push
push
push
sahf
out
dec
pop
punpckhbw
or
je
out
jle
mov
or
xchg
push
lahf
stos
adc
cmp
repz
rclb
mov
sbb
out
pop
jecxz
out
sahf
adc
ds
pop
stc
and
and
sbb
sbb
mov
out
push
sbb
sbb
sahf
out
pop
aas
and
out
pop
and
in
sahf
out
and
mov
in
popf
out
leave
scas
loopne
rcr
testb
push
or
sbb
test
sub
enter
inc
mov
xor
out
sahf
out
add
push
add
cmp
xchg
pop
push
iret
repz
or
cmp
repz
mov
mov
repnz
ficoms
xor
pop
mov
out
cmp
cli
push
adc
push
adc
and
cli
outsl
cmp
inc
cs
dec
sahf
out
sbb
cli
dec
and
js
cmpsb
cli
xchg
out
adc
push
add
ror
xlat
push
add
scas
push
pop
out
bnd
out
testl
sbb
sti
prefetch
sti
daa
iret
repz
adc
cmp
inc
cmovge
adc
daa
iret
repz
pop
insl
js
out
outsb
pop
sbbl
sbb
sbb
sbb
out
in
mov
and
iret
and
and
repnz
out
cmp
cld
adc
sub
add
add
adc
leave
repz
pop
or
pop
in
cld
pop
test
repz
aaa
femms
fwait
jae
cmp
adc
outsb
daa
iret
adc
call
in
femms
sbb
sbb
cld
or
push
push
sbb
mov
pop
aaa
inc
std
repz
lahf
dec
std
fisttps
iret
repz
arpl
and
popf
cmp
setp
cmovs
pop
pop
sub
xchg
and
xor
enter
decl
add
outsb
mov
out
sbb
xor
das
dec
pop
in
sbb
mov
enter
jns
push
mov
mov
pop
syscall
lcall
mov
mov
repnz
syscall
or
fucomi
in
or
movntq
enter
adc
sub
iret
repz
adc
repnz
lcall
out
cmp
les
iret
fisubrl
sbb
cmp
sahf
in
lock
decl
jne
jmp
push
das
popa
push
and
jns
xchg
insb
ja
orb
cwtl
daa
mov
xchg
scas
pop
das
sub
dec
sahf
out
sub
movsb
fwait
cmp
fidivl
in
pop
jnp
cmp
xor
lock
push
add
cmp
adc
sbb
ds
in
xchg
add
jmp
insb
por
jns
ja
cmp
in
repnz
cwtl
incl
mov
sbb
jl
btc
popf
stos
das
mov
fsubrl
iret
push
ror
fmuls
jecxz
iret
leave
repz
stc
or
add
frstor
adc
das
sbb
daa
push
adc
cmp
xor
cmp
out
outsb
daa
pusha
das
imul
push
pop
jbe
jns
sbbl
pop
sahf
out
in
mov
repz
psubsb
repz
dec
inc
ds
add
cs
xchg
and
arpl
outsb
jae
cmp
sub
test
stc
icebp
sub
pop
cs
iret
fwait
sbb
push
xor
xor
xor
outsb
xor
mov
bsf
cmpsb
js
jb
fisttpll
iret
push
in
jecxz
packsswb
cmp
pop
add
mov
push
add
iret
mov
push
pop
mov
daa
mov
or
mov
pextrw
das
smsw
add
in
add
add
xor
push
or
jl
rcrl
xor
dec
jo
mov
outsb
adc
push
cmpsl
mov
iret
aaa
cmp
cmp
adc
dec
js
and
pusha
mov
add
pop
sbb
sub
mov
out
aaa
mov
add
pop
in
push
rcll
fs
push
daa
xchg
ss
add
add
aas
inc
push
or
les
pop
ljmp
outsb
pop
cmp
dec
aaa
test
add
xlat
xacquire
add
push
rol
push
push
mov
xchg
and
push
pop
or
in
in
or
or
or
outsb
mov
scas
or
daa
dec
outsb
ja
push
adc
and
pop
inc
inc
push
addr16
das
mov
in
jbe
xorps
insl
out
sbb
notl
fildl
pop
andb
iret
add
addl
cmp
mov
fsubrl
cmp
sbb
and
dec
sbb
add
or
sbb
pusha
inc
adc
add
lods
and
add
mov
inc
and
adc
adc
stos
cmp
pop
test
lds
adc
inc
xchg
or
lods
pusha
cmpb
cmpsb
fisttps
mov
stc
sbbl
mov
sbb
cmovo
add
mov
sbb
in
mov
mov
push
add
notb
add
fidivl
rcr
fsubp
stc
jb
xchg
mov
xor
sahf
addr16
out
pushf
and
xchg
nop
jns
out
mov
jns
out
pusha
push
dec
inc
sahf
out
sahf
cmp
xor
sub
jns
out
and
sbb
adc
xor
out
or
and
in
and
repz
push
aam
shlb
mov
movsb
repz
repz
push
fs
pop
push
cmp
jns
dec
mov
cmp
sbb
out
fdivrp
clc
and
aam
mov
mov
mov
cmp
jns
js
jo
pusha
ja
cmp
push
cmp
and
push
iret
repz
or
and
fadd
mov
jnp
mov
pushf
push
je
pusha
or
adcb
icebp
or
add
adc
imulb
sbb
add
mov
pushf
lock
js
clc
mulb
mov
dec
hlt
xor
cmp
cltd
pop
aas
sbb
es
push
test
insl
add
or
clc
pop
and
cwtl
xchg
xorb
addr16
outsl
lock
call
push
mov
mov
jg
mov
cmp
mov
inc
dec
inc
sgdtl
push
adc
mov
sbb
dec
lock
mov
or
and
sti
add
add
fadd
xor
insb
push
insl
jb
testl
inc
outsl
and
test
iret
xchg
sub
mov
js,pn
cmpsb
fiaddl
inc
stc
pop
jg
jl
add
negb
stc
pop
out
insb
sbb
add
out
mov
adc
xchg
es
iret
cmp
xor
ss
repz
jle
cmp
sahf
out
push
and
sbb
push
adc
ds
and
iret
jnp
push
dec
push
fcoms
push
aam
iret
repz
rorb
or
jnp
repz
pop
inc
sbb
fcompl
jns
idivl
adc
xor
sub
push
sahf
out
and
push
and
iret
repz
adc
and
add
clc
aaa
inc
int
xchg
int3
out
clc
shr
cmp
pop
imul
daa
xor
pop
mov
xchg
cld
subb
inc
xor
lea
add
loopne
rcr
fistl
cmp
iret
repz
pop
js
mov
repz
out
cmp
dec
insl
add
jns
out
push
pop
ja
mov
loopne
iret
loopne
jae
das
push
dec
insb
push
xor
lods
dec
pop
daa
jns
pop
mov
cli
or
pop
repnz
or
ret
lar
repnz
adc
pop
and
sbb
jmp
ret
inc
and
sahf
mov
sub
inc
rcrb
and
sbb
cmp
incl
xchg
xlat
xchg
inc
push
add
inc
stc
mov
adc
mov
decl
fistpl
js
inc
outsl
loopne
jmp
xchg
test
mov
cmp
inc
mov
fisttpll
jmp
stos
push
inc
mov
repnz
test
pop
stos
clc
scas
adc
inc
cli
inc
jmp
aam
imul
loope
jp
iret
inc
gs
xchg
push
cmpsb
scas
mov
or
incl
dec
dec
pop
inc
in
xchg
cmp
xor
dec
cmpsl
in
cmp
sahf
xchg
pop
incl
lcall
lock
mov
popa
sar
mov
sbbb
xchg
clc
repz
aam
jmp
mov
subb
fwait
xchg
and
out
aas
xor
xor
int
add
aas
jno
or
mov
clc
aas
pop
fs
dec
lea
aas
ret
shrl
mov
icebp
aas
rorb
and
incl
lds
mov
insb
scas
add
aas
xor
aad
mov
std
std
into
popa
test
ja
stos
in
das
dec
pop
loope
les
aas
xchg
les
jne
int
mov
ljmp
xchg
cmp
push
mov
xchg
aas
and
loop
mov
jp
popa
push
pop
sarl
mov
call
adc
das
lea
mov
inc
inc
aas
movsl
jmp
jg
sub
jge
mov
inc
rcr
push
arpl
int3
and
call
cmp
jp
and
pushl
shrb
inc
xchg
mov
fmull
call
pushl
xchg
test
pop
mov
jne
fldt
cmp
jno
shlb
out
decl
pop
cmp
fisubl
xor
push
lahf
inc
pop
mov
sub
dec
in
pushl
xor
push
scas
into
imul
faddp
jge
call
mov
xchg
cmp
push
andl
push
decl
gs
std
orl
pop
ficomps
frstor
leave
adc
add
add
mov
jo
xlat
add
lock
inc
je
inc
inc
push
dec
addr16
pop
and
dec
dec
inc
push
dec
inc
aaa
xor
insl
fwait
gs
dec
mov
mov
call
push
inc
dec
stos
insl
jbe
inc
jo
inc
popa
push
outsb
jbe
imul
push
sub
outsl
lock
mov
imul
dec
push
sub
outsl
add
cmp
pop
xor
rcl
or
push
dec
pusha
push
or
push
inc
dec
push
inc
push
and
mov
jo
jb
push
sbb
inc
test
lock
dec
inc
gs
gs
mov
jbe
addb
arpl
inc
or
mov
sbb
sub
dec
outsl
push
dec
pop
mov
inc
push
xchg
xchg
add
aaa
lcall
add
rorb
insb
push
das
push
fs
sub
imul
inc
adc
daa
dec
sub
mov
imul
xor
inc
jg
mov
clc
inc
inc
jns
dec
lahf
push
imul
adc
les
push
cmp
lods
mov
push
je
dec
add
xor
mov
adc
dec
in
inc
ds
je
sbb
out
dec
push
dec
dec
lods
std
dec
add
dec
bound
jbe
movsl
cmpsb
sbb
xchg
sub
scas
push
mov
or
inc
cmpsb
dec
adc
fstpt
dec
cli
adc
outsb
arpl
outsl
push
bound
inc
dec
dec
pop
xlat
int3
xchg
add
push
jmp
adc
mov
push
mov
ja
inc
xchg
push
push
in
sbb
imul
imul
mov
fisubl
push
mov
pop
inc
add
loope
jg
idivl
mov
push
push
push
imul
sbb
pop
outsl
push
jb
push
mov
jbe
lds
das
jo
adc
push
xlat
push
inc
mov
push
dec
stos
fcoms
gs
lods
mov
mov
cmp
push
insl
cmc
inc
arpl
push
push
push
pushf
nop
push
pusha
out
or
inc
pop
jg
push
mov
outsl
xchg
fisttpl
mov
movsl
add
mov
data16
inc
add
fisttpl
xchg
mov
pusha
pop
pop
ja
or
pusha
pop
es
inc
pop
stos
mov
push
pop
jno
add
pop
push
pusha
add
sbb
lahf
pusha
mov
scas
mov
inc
sar
cmpsl
push
and
aad
dec
je
dec
lahf
mov
push
xchg
inc
dec
sub
stos
and
leave
dec
cmp
mov
mov
mov
leave
adcl
stos
iret
aas
decl
lahf
sub
nop
lods
mov
inc
adc
or
cmpsl
dec
push
orl
rsqrtps
push
dec
daa
dec
dec
sub
or
out
cwtl
xchg
cmp
cmpsl
xchg
push
inc
in
arpl
dec
outsl
sbb
insl
imul
xchg
clc
pop
push
jne
les
outsl
rolb
loopne
push
sbb
pop
dec
outsl
or
aad
iret
insl
mov
popa
inc
iret
pop
les
addb
fdivrl
inc
das
xlat
mov
dec
jg
repz
and
push
mov
stc
cmp
cmp
lock
out
sahf
shlb
cwtl
or
mov
daa
jl
iret
leave
mov
das
push
mov
mov
push
and
lahf
incl
inc
addb
sub
push
out
mov
les
push
push
xor
xchg
fs
xor
fdivrl
jmp
rclb
mov
jl
jle
sub
mov
sbb
dec
jno
repz
test
ficompl
jmp
jmp
mov
hlt
movl
imul
std
in
leave
mov
add
ljmp
arpl
or
pop
adc
in
pusha
aad
jno
mov
inc
call
add
std
test
movsl
cli
test
xor
leave
mov
lods
jecxz
fdivs
jne
lcall
iret
or
shrl
cmp
ficoms
push
xlat
enter
mov
and
mov
cltd
xchg
mov
mov
or
or
jg
and
mov
jl
das
adc
stos
sbb
data16
inc
fdivl
pushl
add
aad
mov
mov
movsl
in
lahf
xor
mov
js
out
mov
stc
mov
push
loope
or
cmp
fs
add
hlt
push
imul
insb
sbb
xor
dec
add
in
xchg
push
insb
jnp
jmp
or
fnstenv
adc
mov
mov
bound
or
adc
gs
aam
pop
popa
mov
into
pop
cmp
mov
inc
movsl
fisttps
xchg
fadd
shll
jmp
outsb
xor
mov
sarb
pusha
fidivl
add
in
add
pop
dec
or
cmp
add
daa
adc
or
decl
and
test
or
mov
popa
into
push
stc
ficomps
leave
fldcw
and
call
pop
cmp
mov
cmp
lods
insb
mov
in
mov
mov
add
pushl
ljmp
fildl
push
fdivl
or
test
fs
ds
or
ljmp
or
push
in
decl
xchg
daa
scas
add
mov
pop
jge
xchg
shlb
add
inc
jmp
pop
push
test
ss
sbb
push
imul
aam
loopne
rorl
jp
adc
dec
frstor
fistpll
mov
mov
aad
mov
call
xchg
shll
inc
fdivrs
push
repnz
addr16
cmpsb
fldl
mov
dec
ss
fisubrl
or
scas
idiv
decl
ss
jp
inc
ret
out
pusha
fists
addr16
mov
jns
imul
andl
call
outsl
and
xchg
ja
int3
add
mov
das
es
lds
or
lcall
sub
mov
cmpsl
call
ret
shlb
sbb
ret
es
pushf
outsl
cli
jmp
insl
add
ss
jmp
addr16
jb
push
hlt
orb
call
mov
jnp
sbb
xchg
or
out
fdivrl
fisttpl
aam
roll
inc
loop
icebp
clc
mov
push
int
mov
mul
ja
outsl
ja
mov
out
cli
pushl
jo
ud0
cmp
pop
or
adc
sahf
gs
clc
sar
imul
ljmp
mov
loop
mov
push
addl
mov
cmp
cmpsl
notl
pusha
rorb
ljmp
ds
push
scas
fcompl
fldenv
filds
cmp
aaa
push
scas
mov
fidivrs
pushl
xor
mov
lret
mov
cmpsb
mov
sarb
sub
ficoms
fldenv
jp,pn
mov
dec
popa
les
sbb
xchg
sub
aaa
mov
or
sbb
or
out
add
iret
push
add
movsl
and
aam
sbb
mov
inc
xchg
jne
mulb
imul
pop
sub
aam
imul
mov
fistps
jbe
push
jns
or
std
outsb
arpl
arpl
mov
sbb
insl
jns
add
jne
outsl
insl
addr16
xchg
fildl
xor
out
or
push
cmp
or
out
and
dec
dec
inc
js
inc
insl
bound
inc
out
push
jo
jne
inc
inc
inc
js
fadd
mov
push
dec
orl
jno
mov
and
xor
pop
inc
cmp
pop
bound
xor
aaa
cmp
call
mov
popa
arpl
cmp
arpl
or
xor
bound
pop
xor
popa
add
ret
xlat
push
inc
jbe
pop
sbb
mulb
icebp
xor
inc
or
in
cmp
add
ror
lret
add
inc
loope
ljmp
cs
hlt
lods
test
ss
jbe
divb
aad
arpl
popl
add
aas
test
xor
inc
loopne
and
push
lock
aaa
addl
mov
test
mov
push
xorl
sub
dec
mov
je
aaa
roll
fidivrs
inc
push
bound
add
ljmp
mov
and
jae
popa
jne
and
xor
scas
pop
inc
aas
dec
push
mov
inc
adc
xor
mov
es
inc
inc
inc
add
insl
test
adc
ds
imulb
pop
sbb
push
dec
dec
lea
imul
xchg
add
mov
mov
ja
outsb
jne
pop
insl
inc
dec
add
push
xchg
jge
xor
cmp
adc
arpl
add
mov
xor
addr16
push
jns
pop
jo
or
push
inc
imul
aas
std
or
cltd
dec
loopne
push
jbe
je
sbb
popf
sbb
dec
mov
subb
test
lahf
inc
mov
or
sub
push
pop
xlat
arpl
add
mov
daa
inc
jb
pushf
xor
or
lock
popa
jo
lahf
sbb
outsl
test
mov
jbe
push
jno
mov
lds
in
push
or
nop
test
adc
das
aam
arpl
push
mov
cmp
mov
jo
push
inc
mov
push
pop
push
and
push
loopne
insb
jns
das
insb
jmp
loopne
pusha
push
popa
jb
or
sub
test
adc
or
add
push
bound
sub
addr16
test
push
aaa
ja
mov
adc
jae
push
loop
popf
xor
add
ret
push
mov
aaa
pop
sar
sub
sub
mov
addr16
pop
cmp
add
jns
lods
sub
scas
sub
aas
arpl
ret
jg
mov
add
aaa
aam
pusha
das
fcoms
push
loop
aaa
cmp
cmp
cwtl
mov
sub
test
pop
inc
inc
adc
mov
add
push
add
push
pusha
aaa
jo
fwait
add
or
dec
and
rorl
pop
nop
pop
add
jb
repnz
stos
clc
or
pop
mov
int
mov
mov
adc
jo
xchg
add
add
cwtl
outsb
outsl
je
sbbb
jb
testb
dec
push
and
cs
push
jo
jmp
sub
pop
lea
in
movq
stc
repnz
mov
out
ud0
jmp
bnd
push
pusha
ljmp
lret
cli
push
sar
push
cld
push
imul
sbb
pushf
dec
popa
das
adc
rcl
mov
daa
loopne
add
or
or
sbb
insb
daa
aam
cmp
add
xchg
lcall
out
nopl
mov
add
sbb
add
prefetch
pop
xor
push
test
mov
mov
fistl
pop
subb
or
loop
and
add
pop
add
cs
lock
and
and
or
es
add
jb,pn
leave
xorb
filds
fs
cs
leave
jbe
sub
fs
dec
or
addb
jb
push
xlat
out
push
repnz
adc
sbb
and
loopne
inc
xlat
cmp
jecxz
cmp
xchg
imul
movb
leave
mov
mov
std
lds
lea
loopne
leave
cmpsb
or
test
pop
or
dec
jne
sahf
pop
lods
test
mov
sbb
sub
inc
outsb
xchg
imul
jbe
xor
push
sti
or
cmp
sbb
xchg
fucomi
gs
push
incl
faddp
ja
jne
jmp
mov
pop
sahf
ja
push
cmpsb
cmc
mov
mov
out
pushf
xor
in
dec
cmpsb
sbb
into
int3
loope
add
mov
imul
lods
fisttpl
xor
adc
mov
mov
jl
les
movsl
sub
icebp
xor
loopne
adcl
or
mov
pop
xchg
clc
add
rcll
xor
hlt
mov
stos
ja
fiaddl
push
mov
sbb
push
pmulhrw
mov
call
nop
fadds
mov
in
fs
mov
xor
sub
lds
cmp
jbe
mov
add
pop
and
outsb
inc
aad
push
sub
pop
sti
mov
nop
dec
adc
roll
popa
loope
or
adcb
loopne
out
fstpt
xor
movsl
sbbb
and
jbe
xchg
call
add
outsb
xchg
xor
arpl
mov
clc
pushf
jbe
add
add
fbstp
test
jne
push
inc
imul
add
adc
lret
jne
push
mov
mov
add
xor
in
dec
inc
in
inc
dec
and
shlb
jno
ficoml
mov
adc
adc
and
ret
loopne
shrb
mov
movsl
les
mov
jl
hlt
cld
add
xchg
push
push
lea
add
imul
or
enter
ja
push
push
push
fcmovnu
imul
leave
push
inc
addr16
cmp
mov
cmp
pop
add
mov
dec
or
push
pusha
sbb
mov
cmpsl
jae
lock
js
outsl
push
loope
cmp
sahf
jp
dec
pop
push
cmp
push
dec
mov
nop
sbb
pop
cltd
test
push
lods
and
sub
and
sbb
add
nop
dec
pop
cmp
or
test
push
mov
es
hlt
rcrb
push
aam
je
inc
test
lock
pop
movb
dec
adc
add
push
mov
inc
jl
in
aam
lea
dec
out
or
lds
inc
mov
loop
adcl
or
jno
popf
mul
andb
add
mov
popf
je
rcl
inc
or
dec
lock
imul
dec
sbb
adc
add
repnz
xchg
dec
inc
cmp
xor
rclb
or
mov
xor
inc
repnz
mulb
pop
sbb
lcall
call
int
jge
in
push
fstps
inc
test
ret
enter
xchg
popf
clc
cmp
xchg
push
dec
and
loopne
jnp
xor
mov
inc
ljmp
and
or
loopne
decb
push
inc
push
push
insb
add
dec
fdiv
sub
sbb
lahf
push
mov
adc
aam
fiadds
mov
in
nop
sub
add
imul
mov
dec
divl
add
jl
sbb
int
pop
lcall
or
stc
jp
into
sub
mov
push
lea
lods
lds
mov
cmc
xlat
pop
jp
es
add
call
or
pop
mov
and
pop
xchg
sbb
test
ja
pop
adc
add
rolb
xchg
or
roll
xchg
ja
push
jnp
int
or
mov
loope
xor
das
scas
insb
loopne
call
add
add
and
cmp
in
add
add
pop
repz
and
add
cmp
push
pop
inc
push
adc
xchg
pop
and
push
mov
pop
clc
movsb
shl
mov
jo
mov
pop
push
js
sub
cmp
push
push
call
call
xchg
sub
xchg
lea
xor
mov
or
imul
scas
in
rorl
and
nop
je
xchg
imul
test
add
aaa
add
push
dec
inc
lock
sarb
loope
call
and
cmp
or
sub
call
fcom
mov
insb
sarb
or
daa
inc
sbb
xchg
xchg
sbb
dec
call
mov
pop
in
dec
push
inc
mov
je
or
push
lcall
insl
movsb
mov
mov
cs
sbb
sub
and
mov
push
or
in
shl
or
dec
subb
scas
shl
xchg
push
inc
push
xor
dec
adc
clc
sbb
push
push
aas
or
ja
int3
or
add
ret
sub
or
mov
ljmp
subl
jecxz
inc
movzbl
mov
notl
mov
inc
jl
je
pop
lods
xchg
xchg
sbb
adc
push
in
cmp
in
sub
lds
and
push
pop
add
bound
lret
gs
mov
je
sub
sub
inc
adc
or
imul
push
mov
sub
mov
mov
jb
nop
jo
inc
bound
inc
mov
mov
shll
sbb
lret
pop
comiss
inc
sub
pop
lcall
roll
xor
ds
sbb
pop
scas
loope
push
sbb
sbb
sbb
push
jmp
fdivr
jno
inc
das
jb
lcall
shlb
push
dec
fdiv
adc
popf
add
sbb
cmp
pop
pop
pusha
push
fiaddl
int3
call
push
and
sbb
or
cmp
cmc
jb
shrb
addr16
push
mov
jb
add
xchg
dec
or
loopne
test
and
out
cmp
jb
call
adc
xchg
xor
test
fsubr
adc
inc
cmp
cmp
xchg
test
in
push
add
push
adc
outsb
mov
movsl
inc
jbe
dec
enter
add
inc
dec
and
and
or
xor
call
mov
add
sub
daa
rclb
push
push
fcmovbe
xor
in
cmp
xchg
add
out
xchg
pusha
xor
xor
xlat
call
jb
hlt
fdivrp
xor
fdivr
rcl
into
mov
ret
dec
inc
sbb
xor
jecxz
ss
call
pop
mov
push
xchg
jl
or
das
sbb
pop
hlt
cltd
loopne
or
mov
pop
mov
mov
mov
mov
mov
add
mov
pop
aas
jl
les
adc
pop
mov
pop
mov
lea
sub
enter
lds
repnz
dec
or
mov
and
incb
movsb
push
fs
and
cltd
arpl
aad
sahf
shll
jle
rcll
mov
mov
cmp
jne
mov
adc
add
sub
sti
xchg
sub
xchg
loop
repz
cmpsl
outsl
mov
pop
int3
mov
pop
femms
inc
or
cmpl
shlb
sub
js
pop
mov
push
or
addb
xor
add
push
push
das
outsl
push
jb
je
ljmp
ljmp
pop
pop
stos
je
nop
add
fsubs
shr
xor
cmpl
push
fistl
sbb
add
cld
popa
je
mov
adc
fisttpl
pop
fldt
scas
or
or
xor
push
lret
stos
push
xor
add
sub
cs
adc
xchg
pushf
data16
insb
outsl
push
add
ljmp
ror
rcl
fiaddl
mov
cmpsl
xor
mov
mov
adc
pop
fwait
xchg
sahf
xchg
roll
dec
scas
hlt
sbb
in
test
jb
repz
mov
cmpsb
jnp
ss
sub
adc
mov
mov
adc
push
mov
and
and
scas
dec
adc
xor
cwtl
sbb
push
scas
xchg
sbb
add
add
adc
call
inc
cmp
jle
jmp
pop
xor
push
adc
dec
decl
push
gs
in
pop
add
dec
in
in
imul
push
and
adc
outsb
adc
mov
jg
scas
adc
and
in
xor
sub
xor
cmp
loope
and
nop
dec
in
or
xchg
bswap
push
xchg
in
enter
xor
pop
jno
push
mov
imul
hlt
call
cmp
adc
and
imul
sub
mov
inc
pushf
popf
dec
jl
xchg
lods
inc
aam
push
gs
in
mov
ss
pop
mov
inc
sbbb
dec
xor
push
or
test
out
inc
mov
mov
mov
cmp
mov
push
xor
shl
aam
push
sbb
lret
fsub
push
shll
adc
repz
mov
lcall
mov
or
mov
sub
imul
es
cmpsl
adc
and
fists
sub
fiadds
cld
cmp
pop
mov
jne
push
cmp
les
std
fidivrs
into
jbe
xor
inc
ds
mov
mov
dec
mov
mov
jle
xchg
popa
xchg
cmpsb
adc
lods
push
or
into
aam
mov
test
test
jecxz
inc
enter
test
popw
mov
je
mov
nop
add
movswl
into
mov
fcompl
and
inc
mov
lods
lods
dec
xlat
push
push
dec
aad
mov
lea
or
and
hlt
lret
jg
lea
jb
shrb
fstps
das
pushf
in
dec
adc
or
jo
ftst
and
test
aas
movsb
clc
jmp
rclb
jl
jb
loop
insl
shr
test
cld
jb
add
arpl
popf
add
ss
ret
sahf
in
jne
sbb
xchg
sbb
insb
mov
or
xchg
pushf
sbb
sbb
ss
cmp
mov
add
add
out
enter
jo
loop
push
jl
aaa
cld
mov
push
sub
push
call
or
nop
pop
ss
mov
gs
inc
and
jmp
sbbb
inc
dec
pop
and
je
sti
adc
pop
je
mov
inc
test
jmp
cmovp
call
inc
mov
inc
pop
xor
sub
push
sbb
xor
bound
jmp
mov
fs
push
test
loopne
mov
adc
test
mov
xor
sbb
mov
push
cld
lcall
iret
xlat
cli
cs
popf
rorl
adc
mov
nop
add
or
push
mov
push
mov
sub
dec
add
mov
movsl
xchg
orb
andb
xor
mov
sbb
nop
push
add
into
jae
mov
adc
mov
mov
mov
sbb
pop
cmp
push
loopne
jge
loopne
ja
push
mov
mov
outsl
push
xchg
push
inc
add
push
loopne
add
aam
repnz
pop
dec
insl
dec
inc
inc
xor
mov
or
or
shr
lods
fstp
pushw
or
jnp
fcomip
mov
call
jmp
sbb
push
xor
cmp
sbb
pushf
cli
adc
inc
rorl
call
sub
enter
mov
dec
out
mov
push
xor
inc
adc
adc
mov
in
inc
dec
mov
jo
cld
adc
fmull
push
jle
pop
dec
adc
std
adc
xor
and
push
push
ds
pusha
test
fisubrl
sbb
scas
outsb
inc
xchg
cmp
in
add
pop
add
mov
loopne
add
mov
jne
movsb
addr16
or
mov
and
jl
mov
mov
adc
sarb
negl
test
sub
adc
add
mov
mov
add
add
orb
jmp
les
xor
insl
test
fs
or
adc
ret
and
shll
aam
mov
push
push
add
mov
daa
scas
fdivr
jl,pt
adc
xchg
adc
cmp
adc
rclb
mov
cld
popf
mov
xchg
mov
add
cwtl
inc
jecxz
fwait
xor
pushf
enter
call
pushf
cmpsl
pop
ds
ret
ss
jo
in
jbe
pop
dec
fcoml
dec
or
dec
add
inc
adc
push
imul
push
or
enter
gs
fsubs
jne
xor
adc
std
jmp
and
xor
pop
call
inc
jmp
in
in
dec
es
or
or
push
mov
js
int3
rcrb
sarb
add
cmp
and
cmp
mov
ret
sbb
cmpb
fs
std
or
icebp
ljmp
jge
sbb
pop
push
mov
in
test
dec
mov
mov
adc
ret
xchg
adc
data16
sub
mov
cmp
push
adc
xchg
cmp
in
mov
jl
xor
jne
mov
jmp
or
sbb
or
xor
push
or
or
je
push
add
es
xor
je
dec
rcll
add
inc
in
mov
and
add
push
adcl
or
cmp
fiaddl
sub
add
call
out
test
loope
xchg
aaa
pusha
xchg
mov
push
sbb
cmpsl
xchg
std
test
shll
popf
cmpsb
cmc
iret
mov
ljmp
mov
test
shl
cmp
dec
cmp
dec
mov
mov
mov
mov
push
mov
lea
andl
out
xchg
stos
lods
div
ss
fucomip
cmp
je
cmp
jbe
ds
push
movsb
xchg
jne
and
subb
dec
jg
nop
clc
push
and
std
xchg
loope
ficompl
das
adc
or
sbb
xlat
jo
out
push
in
xchg
push
inc
or
lahf
shl
pushf
cli
adc
mov
fadd
and
xor
pushf
loop
mov
ret
int
cmp
shr
je
or
push
xorb
add
xchg
mov
test
ret
scas
jb
clc
mov
or
inc
mov
mov
inc
push
mov
pusha
cld
jbe
clc
or
jbe
fwait
jmp
push
mov
rorl
fsubr
jo
push
sbb
cmpb
lock
pop
mov
into
pushl
mov
push
lds
lods
sbb
mov
adc
pop
xor
loopne
lods
stos
loopne
loop
jbe
sti
push
je
aad
fs
ljmp
jle
cmpb
dec
stos
mov
cltd
in
loop
movsb
movsb
push
stc
jg
ja
or
sub
pop
push
sbb
mov
and
pop
cmpb
push
inc
jne
xchg
xchg
aam
xor
push
movsb
jno
int
push
xchg
mov
push
cmpsb
aam
in
jl
shll
sbb
push
orb
subl
ret
loope
fsubs
faddl
push
xchg
inc
fcom
xor
scas
dec
je
push
lds
push
push
dec
test
push
ret
add
add
or
int
shrl
mov
or
aam
jns
insl
shrl
or
or
fs
mov
nop
mov
ficoms
lock
pop
xchg
dec
xchg
jmp
inc
ja
mov
das
mov
imul
sub
lock
dec
in
cltd
add
push
hlt
push
push
adc
jo
adc
jne
jne
ror
clc
and
cmp
push
sub
out
cld
push
mov
adc
mov
jmp
adc
and
add
or
or
sub
mov
fidivl
or
jl
dec
push
dec
aam
xorl
test
mov
insl
movsb
mov
push
fdivrl
lea
mov
add
or
or
pop
addr16
pop
jecxz
pop
sbb
cmp
push
int3
sbb
jne
into
mov
cmp
jmp
ss
in
dec
shrl
js
es
add
shll
jo
test
int3
jecxz
and
iret
dec
decb
mov
fdivrl
jmp
and
jl
nop
xor
add
add
imul
sarl
icebp
call
push
jp
inc
sarb
inc
call
cld
mov
inc
jmp
dec
movaps
pop
xchg
push
arpl
filds
movsb
fs
mov
xchg
sub
sbb
nop
inc
inc
lcall
dec
jl
movsb
test
negb
divl
push
dec
xor
sbb
call
xlat
jmp
jne
push
lods
and
pop
mov
aam
sub
push
xchg
add
jo
adc
add
or
fdivrl
sti
xlat
jnp
out
xchg
jne
add
push
call
cmp
fisubs
in
movsb
jmp
js
lret
dec
in
sbb
test
mov
stos
jae
mov
dec
push
call
pusha
cmpsb
sub
call
int3
lock
adc
mov
push
mov
and
dec
sub
or
or
test
je
push
stc
sub
fcompl
addr16
xlat
out
push
lock
push
arpl
or
mov
cwtl
or
popf
fildl
mov
cld
test
outsl
cmp
test
stos
sbb
mov
push
fs
cmp
and
mov
jg
xchg
pusha
in
pusha
ja
cmp
pop
mov
push
dec
lea
shrb
pop
mov
orb
insl
xchg
popf
jbe
test
aas
mov
popa
xor
icebp
pusha
jo
shr
and
xchg
fsubs
or
or
in
pop
icebp
mov
cmp
fadds
dec
jne
movzbl
add
push
or
aam
nop
fstl
test
jbe
jge
adc
sbb
stos
incl
andb
sub
es
add
arpl
lods
jmp
or
je
mov
push
cli
sub
subb
sbb
and
ja
push
mov
lea
inc
xor
inc
pop
test
dec
rorb
in
xchg
ss
pop
xor
out
add
mov
jge
pop
leave
aam
push
imul
or
aad
sti
loopne
and
xor
adc
and
xchg
mov
push
push
call
push
or
shrl
dec
test
inc
mov
int
hlt
cs
test
dec
dec
testb
je
roll
dec
or
mov
push
inc
sar
add
pop
aas
dec
dec
nop
je
lds
dec
imulb
enter
or
pop
rol
add
add
mov
mov
inc
shl
xor
xchg
adc
pop
inc
or
sub
shrl
inc
add
shrl
adc
push
add
out
shll
inc
push
roll
adc
pop
ret
mov
sarl
add
xor
faddl
rcrl
imul
mov
test
rcrl
mov
push
add
pop
roll
add
shll
push
imul
sub
add
shll
in
adc
mov
or
mov
push
inc
pop
popa
pusha
add
nop
dec
or
push
inc
inc
ret
mov
or
or
sbb
out
call
flds
pop
call
call
std
je
cmp
dec
aam
inc
mull
jge
cwtl
inc
push
jns
cmp
call
jne
inc
js
dec
adc
adc
pop
xchg
jmpw
movsb
dec
pop
leave
mov
pop
cmp
or
inc
mov
mov
or
xor
psubsb
add
call
jns
jae
jmp
mov
xchg
pushl
cmp
xchg
fs
jmp
mov
loope
or
sbb
xchg
loop
addr16
jae
les
rolb
divl
loopne
imul
cmp
xor
mov
sub
dec
dec
jmp
sub
inc
jmp
pusha
xchg
and
notl
and
ljmp
push
sbb
xor
cmp
adc
leave
test
dec
aam
sub
and
cmp
cs
mov
push
loope
xor
pop
arpl
jge
push
and
inc
fiadds
inc
mov
arpl
incb
jge
push
push
es
cmpsb
add
mov
push
and
aam
fs
into
sbb
je
incl
push
or
sbb
jae
push
es
add
mov
shufps
add
or
iret
dec
push
cmp
jg
push
or
in
ficomps
clc
push
mov
cmp
dec
test
xchg
int3
push
xchg
subl
das
sbb
js
movsb
movsb
or
flds
rorb
jbe
push
imull
push
imul
movsl
sbb
jp
xchg
and
dec
add
sbb
sub
jecxz
xchg
xchg
pop
xchg
movb
stos
push
arpl
movsl
adc
inc
and
or
cwtl
ror
inc
mov
adc
in
dec
call
test
or
push
cwtl
nop
sbb
rcl
inc
inc
adc
call
inc
rcrl
jbe
inc
addl
and
pop
rolb
or
inc
orl
adc
inc
or
cmp
and
addl
pop
and
lret
call
and
inc
pop
shl
or
out
rcll
out
jnp
jnp
inc
cs
pusha
nop
push
in
nop
je
nop
into
jnp
mov
pop
and
cmpsb
and
push
dec
jns
ss
xchg
xor
sub
jns
out
sbb
or
push
shrb
mov
jmp
mov
dec
dec
inc
pop
mov
out
dec
adc
rclb
lock
cmp
in
cs
pop
nop
add
and
dec
jb
bound
out
faddl
inc
out
ss
nop
out
sahf
out
out
mov
mov
out
shl
mov
inc
cld
or
fsts
sub
add
out
mov
push
mov
or
roll
lahf
lea
xchg
and
jge
mov
mov
insb
push
cmp
and
loopne
ja
push
pop
jmp
cmp
je
mov
jmp
jb
add
sub
or
lahf
ret
lea
test
sub
add
scas
mov
pop
add
sahf
lret
sub
add
add
fiaddl
lret
jg
jo,pt
cmp
je
xchg
add
dec
fmulp
xchg
mov
in
in
push
push
push
gs
jns
pop
pop
inc
push
repnz
or
xchg
or
lret
sub
or
cld
add
dec
sahf
or
fisttpll
xchg
subl
add
leave
mov
or
enter
or
jb
iret
push
push
push
punpckhwd
pop
enter
adc
mov
pop
adc
pop
in
adc
and
and
adc
adc
rclb
add
adc
adc
xor
adcl
push
fs
push
pop
and
enter
and
movsl
mov
sbb
jns
ljmp
dec
sahf
xchg
fcompl
sbb
sbb
sbb
fwait
sbb
je
push
sbb
sub
xor
xor
sbb
pop
push
push
inc
negb
jecxz
add
pop
jne
add
add
sub
cmp
mov
mov
pop
decl
movl
xchg
and
lods
pop
cld
popf
pop
add
cwtl
xchg
push
in
push
in
imul
adc
repnz
ret
leave
jnp
xlat
in
in
repz
leave
repz
mov
enter
in
call
call
adc
in
arpl
jmp
cmp
adcl
adc
jno
push
or
in
mov
xchg
aad
in
cmp
and
out
out
add
out
or
mov
lcall
mov
icebp
cmp
das
and
pop
jnp
or
cmpl
in
cltd
push
hlt
imul
std
inc
scas
negb
cmp
sub
mov
sbb
sub
nop
mull
clc
clc
sbb
aas
stc
jns
scas
in
and
cli
inc
sahf
xchg
sub
sti
sti
sbb
cld
cld
je
cld
push
xchg
idivl
push
nop
shlb
mov
xor
mov
iret
fwait
sbb
xor
inc
ret
sub
dec
pop
sub
jb
dec
jp
lahf
shll
push
jg
sbb
or
fwait
or
stos
pusha
nop
xchg
adc
jecxz
enter
xor
push
ljmp
cmp
or
aam
or
fisubl
dec
out
out
scas
nop
mov
sti
and
bound
or
dec
jmp
jmp
das
test
scas
daa
in
cltd
or
add
push
and
cli
or
cli
out
out
out
subb
xchg
mov
inc
repnz
xor
aas
repz
xchg
sbb
add
stc
push
cmp
mov
mov
stos
dec
div
mov
xchg
and
xor
pushf
pusha
pop
repnz
stc
sbb
movsb
test
or
sub
cld
cmp
jmp
push
in
push
mov
filds
dec
mov
stos
xchg
cmpb
clc
mov
jmp
loop
subb
shll
loope
in
repnz
clc
and
inc
dec
add
or
stos
or
out
xchg
pop
leave
or
in
rorl
mov
push
jmp
nop
mov
pop
notl
sub
hlt
imul
pushf
mov
into
mulb
jns
mov
scas
negb
testb
repnz
inc
and
test
repz
notb
push
dec
push
or
mov
xchg
cmc
div
testb
jbe
jne
mov
sbb
cmp
jmp
cmp
movsl
cli
xchg
cmp
inc
repnz
cmc
aaa
inc
mov
cli
hlt
or
push
inc
lock
push
out
add
dec
sbb
shl
mov
clc
sti
mov
loope
enter
loope
jp
bswap
and
pop
hlt
cmp
cmpsb
jb
popa
mov
hlt
in
add
xchg
in
repz
leave
or
in
rcll
push
dec
jmp
add
insb
repz
repz
andb
repz
int
in
mov
in
repnz
andb
repnz
movsl
jmp
das
xchg
cmp
adc
repnz
pop
repnz
repnz
cld
icebp
cmc
cmc
insb
and
inc
mov
xchg
push
push
test
push
cwtl
icebp
lcall
stc
xchg
adc
pop
mov
pop
pop
xor
movups
lods
jmp
rorl
xchg
pop
mov
test
jp
jmp
sbb
mov
mov
push
sub
ffreep
push
inc
jmp
sub
insb
loope
inc
cmp
mov
add
mov
push
mov
jmp
jge
xchg
push
mov
in
pop
ret
jne
sti
in
bound
xor
jmp
xchg
cmc
enter
add
ss
cli
xchg
mov
rcll
addr16
push
inc
mov
dec
push
nop
push
jns
rcrl
test
dec
push
aaa
or
cmpsl
fnstcw
add
fldcw
jp
sub
push
jecxz
repz
repz
mov
dec
jae
insb
sbb
xor
push
aad
in
xchg
gs
dec
je
repz
or
mov
mov
and
mov
inc
xchg
add
push
pop
stc
pop
and
lea
inc
cmp
and
ficompl
pop
mov
sub
sbb
jb
ret
or
xchg
dec
jmp
into
mov
sub
fists
push
add
nop
xchg
inc
jmp
xor
push
mov
mov
stos
add
push
movsb
sub
test
cmp
push
rcrl
sbb
push
xlat
pop
mov
ss
and
jecxz
pusha
mov
jle
pop
call
adc
add
std
and
pop
jmp
xchg
inc
inc
add
pusha
subb
and
in
fsubl
call
xchg
xchg
je
jmp
xor
sub
sub
imul
and
insb
and
xor
divb
jno
jo
and
xchg
xchg
je
lahf
popf
adc
push
dec
xor
das
pop
xor
stos
adc
mov
adc
mov
cwtl
add
shll
add
ret
sub
sub
sub
cmp
jecxz
add
cltd
test
mov
pop
inc
imul
inc
sbb
inc
ds
dec
ret
add
dec
xchg
pop
in
scas
add
js
jo
xorb
add
mov
rorl
mov
pop
and
bound
decb
mov
dec
nop
outsb
cltd
sbb
inc
adc
and
movsb
mov
dec
inc
inc
andb
jbe
call
mov
xor
mov
loope
dec
nop
mov
inc
and
inc
mov
data16
gs
xor
add
mov
pop
sahf
popa
jmp
xor
push
xor
add
or
movsl
xchg
aas
rcll
inc
adc
mov
rcl
cmp
mov
imul
or
jbe
loopw
stos
dec
nop
into
mov
hlt
and
in
xlat
lods
and
dec
lahf
sub
sti
iret
push
cwtl
add
les
and
lahf
xor
leave
and
stos
imul
and
cwtl
and
mov
lock
fcomps
pop
outsl
fbld
mov
mov
in
adc
lahf
stc
fsubs
int
pop
add
mov
or
test
dec
lcall
jo
nop
cli
lahf
fstl
pop
and
rclb
mov
es
add
call
sbb
pop
daa
cwtl
imul
aad
dec
lahf
aam
or
sbb
rcl
or
and
out
pop
and
nop
and
aaa
aad
imul
inc
cmp
cmp
cmp
sub
sbb
cmp
sbb
movsb
push
shl
loope
xor
push
out
inc
push
xor
lahf
jecxz
mov
dec
sub
lahf
mov
and
sbb
rcrb
lahf
mov
xor
data16
fs
lahf
adc
dec
enter
es
add
pop
lahf
fbld
lahf
dec
adc
enter
dec
subl
lahf
cmp
sbb
inc
inc
cmova
and
cmc
add
dec
jae
jg
push
jmp
mov
insb
pop
fs
and
xor
or
imul
or
add
sub
call
sahf
sahf
push
dec
nop
sahf
loopne
je
or
fcompl
xorb
das
push
or
mov
cwtl
add
cmp
hlt
dec
dec
fstps
jmp
push
mov
and
data16
mov
and
movsl
cltd
xchg
and
xchg
xchg
xor
dec
inc
mov
pop
xor
mov
popf
push
push
cmp
or
int
inc
cmp
std
lods
xchg
dec
xchg
and
daa
and
and
xor
aaa
or
enter
pop
or
and
fildl
dec
mov
nop
in
xor
hlt
mov
int3
mov
clc
mov
mov
call
movsb
repz
inc
push
push
cmpsl
test
jecxz
inc
lcall
ja
data16
decl
mov
sti
hlt
jle
rol
dec
push
popf
add
and
xor
sbb
xchg
cwtl
mov
pusha
and
fsubrs
add
xor
rorb
inc
mov
pusha
aaa
lods
jo
sub
dec
xorb
fs
dec
and
pushf
mov
and
pushf
nop
sahf
sub
in
add
clc
or
dec
mov
sub
jmp
mov
in
popa
fsubs
add
test
and
movsl
inc
sbb
subb
xor
loopne
jg
pop
lea
data16
sub
mov
ja
test
jnp
test
imul
cmp
in
aaa
popa
aas
xchg
sub
pop
mov
movsl
sub
mov
mov
cmp
add
xor
jno
cmp
and
loopne
inc
adc
xchg
nop
cmp
hlt
cwtl
cmp
sbb
and
sbb
cmp
into
dec
pop
jmp
sti
push
inc
mov
mov
xor
movl
movsb
loope
movsb
cmp
sbb
xchg
hlt
mov
pop
push
mov
sub
and
mov
and
lea
movsb
mov
mov
inc
ret
or
shlb
adc
adc
mov
rcll
sbb
dec
inc
adcl
or
xor
sub
sbb
test
pop
xor
shl
sub
aam
inc
or
rorl
dec
sub
jmp
cmp
add
cltd
loopne
mov
mov
xchg
dec
scas
sbb
lahf
call
jmp
sub
lcall
sub
lods
push
mov
dec
je
sbb
ja
and
mov
mov
mov
data16
fwait
dec
sub
shr
je
sub
pop
std
je
aam
sbb
pop
sub
int
sub
pop
data16
sub
sub
dec
inc
subl
pop
add
mov
xchg
rclb
xor
sub
jae
push
mov
dec
inc
jbe
leave
loopne
inc
out
pop
test
mov
shrb
sbb
sub
sub
mov
les
sub
ss
cmpsb
mov
lcall
xor
mov
cmpsl
inc
ljmp
sarl
cltd
hlt
dec
inc
sub
sub
mov
jno
adc
push
mov
mov
lods
data16
dec
xchg
jmp
xor
fsubrs
cwtl
imul
xor
xor
mov
sub
mov
mov
mov
cmp
sbb
xor
in
dec
xor
sub
rcl
pop
imul
jno
nop
mov
js
lods
xor
std
xor
push
cmp
test
sub
addr16
push
ds
pop
jmp
dec
inc
sub
rcr
push
enter
cmpb
shrb
push
dec
inc
dec
xor
and
xchg
pusha
sub
sub
dec
add
sub
sub
nop
shr
sub
push
pop
popa
cs
inc
and
in
into
mov
gs
sub
inc
sbb
sub
sbb
xor
cld
sbb
ffreep
dec
sub
and
test
jecxz
adc
sbb
or
mov
cmp
aam
dec
inc
cmpsl
cmpsl
sub
mov
cltd
xchg
dec
sub
sub
pop
sbb
pusha
cmpsb
mov
xchg
fimuls
and
or
rcl
call
ss
jo
add
int3
sbb
lock
das
cmpsl
inc
das
fildll
or
int
pop
or
cmp
dec
jbe
pop
aad
or
fucom
pop
mov
pop
and
sub
mov
dec
xor
or
inc
cmpsl
aad
sub
cmp
dec
sub
sbb
inc
jo
data16
pop
sub
imul
sub
jle
xor
sub
sub
cld
add
sti
lret
xchg
mov
sbb
mov
cltd
sub
jbe
adc
jo
movsb
shrb
pusha
pop
xchg
and
pop
and
sbb
sub
or
push
cmp
adc
cltd
xchg
lock
rol
jmp
out
dec
push
inc
mov
sbb
xor
lods
movsl
cltd
xchg
fisubrl
cmpsb
mov
add
js
insl
dec
arpl
call
xor
shrb
jg
dec
ret
dec
inc
sub
xor
xor
enter
sub
xor
enter
cmp
inc
push
enter
pop
dec
dec
push
xchg
into
loop
cmp
lcall
mull
adc
push
call
mov
jo
cli
jo
sub
dec
inc
dec
daa
adc
xchg
sub
loope,pt
std
sarb
mov
cs
jge
aaa
imul
and
popf
aaa
dec
push
pop
aam
lds
icebp
mov
repz
mov
mov
inc
out
lods
mov
add
cltd
je
mov
out
push
pop
rcll
add
dec
pop
ret
sub
sub
mov
subb
push
cmp
jbe
popf
xorl
inc
outsb
dec
inc
add
cmpsb
and
add
lods
add
movl
ja
mov
ja
imul
insb
jns
test
dec
inc
mov
ret
sbbb
adc
sub
push
pop
rcll
sarb
js
fwait
push
shll
add
add
inc
xor
jae
cmpsb
mov
lcall
and
shl
pusha
out
mov
loop
and
and
fmull
cmp
or
sbb
sub
das
mov
or
push
dec
cmp
das
and
dec
mov
dec
mov
mov
and
test
dec
shlb
cmp
es
dec
insb
cmp
movsb
les
dec
sbb
xor
push
das
fdivs
jae
popf
push
cmp
xchg
jb
push
cmp
inc
dec
push
xchg
leave
ret
inc
shlb
add
or
sub
pop
inc
stos
push
add
sub
pop
jp
aam
in
cli
xchg
dec
orl
and
and
add
sub
xorb
fs
push
xchg
and
xchg
leave
xchg
es
popa
orb
add
pop
fwait
add
add
xchg
hlt
out
or
inc
popf
xchg
enter
sbbb
and
xor
adc
stc
add
and
lcall
ss
pop
sbb
or
inc
cmp
mov
push
sbb
or
adc
jp
outsb
inc
and
jbe
and
inc
fimuls
call
cmp
inc
cmp
or
outsb
inc
cmp
outsl
inc
mov
shll
sbb
or
xchg
inc
push
jb
psadbw
ret
idivb
inc
rcrb
test
xchg
and
mov
inc
mov
mov
dec
mov
ffree
insl
dec
inc
inc
sub
add
mov
or
mov
jo
mov
xchg
nop
push
push
inc
xor
sbb
inc
xor
mov
nop
into
loopne
inc
sbb
or
fistl
imul
lcall
cmp
clc
cs
call
movsb
shll
scas
jbe
xchg
lahf
pop
xor
call
sub
cmp
mov
dec
call
xchg
and
xchg
mov
jo
and
and
cltd
push
mov
pusha
xchg
and
pop
mov
mov
or
inc
cs
fnsave
push
push
mov
or
call
dec
adc
and
ja
mov
or
test
and
mov
fsubl
mov
cmpsb
nop
shll
push
xchg
mov
ret
mov
xchg
and
lcall
dec
push
mov
fdiv
dec
outsb
jae
lea
jle
push
cmp
adc
add
call
loop
call
pop
jmp
cmp
je
mov
sub
mov
mov
scas
dec
insl
sbb
xchg
or
imulb
push
xchg
or
loope
add
mov
imul
sbb
adcl
pusha
addl
pop
gs
jo
enter
jns
push
cmp
sub
pop
inc
sub
repz
mov
and
add
mov
add
arpl
xor
push
loopne
or
push
sbbl
out
adc
imul
push
ljmp
mov
lret
shll
pop
adc
in
mov
stos
repnz
cs
mov
push
inc
and
cmp
pop
dec
in
push
ljmp
mov
ret
push
inc
call
sbb
aam
inc
push
ss
pusha
imul
addb
rcr
add
xor
inc
mov
test
or
lahf
push
movb
xor
jmp
mov
add
cmp
inc
jmp
dec
jmp
xor
cmp
pop
das
push
inc
inc
adc
mov
add
inc
inc
xor
je
pop
es
insl
add
mov
shlb
pusha
xor
mov
xchg
jmp
pop
cld
or
xchg
subb
inc
or
je
sbb
movsb
and
and
cmp
xchg
pusha
pusha
adc
or
sbb
cld
outsl
je
mov
test
jmp
fdivrl
xor
arpl
jmp
jge
pop
pop
jo
xchg
mov
sbb
lds
adc
std
enter
loop
inc
mov
sbbb
mov
xor
mov
and
jo
lock
xchg
lea
roll
or
xlat
push
lret
push
lret
pop
hlt
lods
inc
inc
shl
mov
cmpsb
addps
cmp
repz
fscale
inc
fisubrs
jge
push
push
or
pop
dec
mov
sahf
push
or
divl
and
xor
jmp
jmp
cmp
xor
pandn
xor
and
push
add
ret
push
sar
insl
pop
pusha
addb
jl
call
dec
sub
adc
insl
jns
sbb
sub
hlt
fidivl
jo
sub
outsb
sub
push
out
xor
pop
lret
test
mov
xchg
outsb
mov
sbb
and
addr16
push
dec
rol
addr16
mov
and
mov
lea
inc
and
andb
xchg
call
add
clc
mov
xchg
mov
stos
add
sahf
in
push
cmp
jmp
ja
mov
das
sbb
adc
out
das
or
push
es
das
sarb
lock
fimull
adc
or
push
das
add
xor
lret
rolb
add
add
les
xor
mov
add
lret
movsb
aam
inc
ds
pop
adcb
cmp
xchg
push
xor
xchg
gs
js
add
or
in
mov
insl
rorb
fadds
xchg
lret
int3
call
and
inc
push
dec
jbe
popa
push
xlat
cmc
fists
xor
push
in
add
movsb
and
sbb
dec
bt
mov
push
rorb
push
dec
and
pop
inc
pop
rclb
add
aas
mov
or
movsb
mov
adc
xchg
push
dec
add
int3
or
jl
out
push
lea
nop
mov
jb
shl
jge
xchg
insb
xor
dec
push
jbe
nop
dec
push
add
pop
add
push
fcoms
rclb
inc
xor
add
aaa
pop
ret
add
add
mov
mov
mov
pop
dec
lea
mov
imull
int3
push
int3
les
jmp
add
adcb
lods
ret
popf
dec
enter
cmp
test
ficoms
test
adc
sbbl
push
dec
adc
pop
jmp
hlt
rcll
jmp
mov
push
jg
inc
outsb
sub
add
sbb
movsl
add
push
jg
xor
cli
pop
pop
repnz
lcall
loop
es
cmpsb
rcr
js
pop
add
lods
or
inc
xchg
add
enter
or
loopne
and
rcl
shlb
mov
pop
or
cmp
pcmpgtd
mov
and
in
sbb
call
repnz
pushf
pushf
pop
dec
sbb
nop
out
mov
subb
mov
cmpsl
xor
dec
push
mov
sbbl
mov
shlb
iret
add
or
mov
jo
jecxz
mov
mov
enter
rcll
shufps
nop
push
jae
out
cmp
or
inc
inc
jb
pop
push
ret
or
inc
scas
add
inc
nop
push
xor
add
push
mov
and
or
ffreep
pop
pusha
xor
and
push
leave
repz
jecxz
enter
faddl
xor
lcall
rorl
xor
lret
xchg
xchg
nop
add
add
loopne
or
push
add
movsb
sub
and
cmpsb
sub
sbb
and
sub
pushf
clc
add
or
leave
repnz
movsb
mov
fildll
xchg
lea
add
add
sbb
arpl
sub
inc
sbb
or
in
jmp
pop
sub
lock
lcall
push
mov
in
pushf
pop
dec
gs
rorb
shll
push
ret
lret
hlt
sbb
and
pusha
and
mov
lret
rcl
or
pop
shl
addb
in
mov
adc
fwait
pop
movsb
imul
xchg
adc
and
in
dec
sub
in
adc
add
in
dec
stos
push
push
jne
shrb
jo
test
jle
imul
test
pop
sbb
dec
or
cmp
loopne
pop
and
mov
addl
test
call
jb
and
mov
in
lea
add
pop
add
or
in
popf
aam
dec
call
jecxz
loope
es
mov
loop
push
mov
inc
test
loopne
stos
dec
sub
jne
cmp
xchg
dec
adc
push
call
jmp
mov
out
mov
dec
call
int3
inc
mov
cmp
inc
sub
adc
pop
and
test
adc
test
mov
daa
pop
sub
add
push
stc
outsb
pop
adc
pop
pop
fdivrs
mov
mov
ror
les
rolb
je
cmpsl
stc
cmp
push
mov
outsl
mov
adc
jbe
daa
lds
push
cwtl
add
es
mov
rclb
add
addr16
inc
popa
inc
addr16
push
addr16
or
jb
cmp
push
loopne
add
mov
addr16
mov
or
lock
adc
loopne
xor
or
dec
or
cmpsl
or
xor
cmp
xchg
cmp
push
xor
and
cmpsl
dec
push
test
cmp
mov
adc
mov
fnstsw
pushf
es
mov
and
adc
push
push
lods
mov
daa
jl
mov
daa
push
pop
sub
pop
sbb
or
xchg
je
fnstcw
pop
pusha
inc
addr16
and
sub
push
push
jbe
mov
movl
dec
dec
pop
sub
packuswb
jnp
jmp
dec
loopne
add
sarb
xchg
dec
and
dec
inc
or
sbb
aam
pop
call
test
push
mov
xchg
and
jns
sub
push
and
cmp
mov
and
movsl
out
mov
nop
xchg
mov
cmpsl
stos
dec
call
jns
and
push
int3
jns
cmp
cmp
stos
dec
enter
mov
cs
roll
and
nop
xor
lret
xchg
ud1
js
dec
push
call
adc
xor
jns
test
pop
rcll
push
mov
mov
int
lods
or
or
push
xchg
shlb
jns
movsb
and
xlat
or
xchg
lds
mov
inc
es
mov
aaa
call
mov
int
shlb
mov
test
push
inc
inc
jns
int3
shrb
fdivrs
sbb
jns
std
xor
xchg
adc
mov
jns
fadds
pushf
pop
inc
ja
inc
jns
ds
push
inc
jns
fcomi
loop
sub
jns
push
inc
inc
dec
jp
inc
inc
inc
ja
inc
jns
rclb
dec
ret
add
movsb
xor
add
dec
lea
dec
push
or
sbb
adc
mov
jl
sbb
pop
add
sub
jb
jns
xchg
shl
and
pusha
push
mov
arpl
inc
inc
jns
and
stos
xor
or
mov
call
dec
enter
mov
jns
mov
outsb
stos
dec
call
out
test
test
jg
adc
xchg
sbb
jns
and
adc
mov
fs
adc
sbb
inc
jo
imul
sbb
ret
fistpl
dec
shrl
int3
lds
sbb
dec
aam
mov
inc
dec
in
xor
stos
dec
jns
scas
and
lds
xlat
jns
or
or
ficomps
jecxz
mov
mov
adc
mov
and
and
ret
push
int
cmp
dec
lret
and
jns
dec
sbb
cwtl
mov
dec
xchg
ret
mov
add
test
enter
mov
xchg
mov
sub
test
sub
jb
pop
sbb
nop
add
test
push
xor
cmp
or
adcb
js
pop
and
cmp
mov
push
sbb
nop
sub
cmp
push
xor
clc
cmp
push
pop
xchg
or
pop
dec
cmpsl
mov
pop
cwtl
cmp
inc
and
mov
and
xchg
shlb
push
and
pop
xor
or
jge
xchg
pop
mov
push
pop
fiaddl
pop
sub
sbb
ret
or
call
pop
jae
dec
push
xchg
das
mov
js
lock
dec
cs
mov
das
xchg
push
and
outsl
cmp
jns
test
repnz
pop
pop
enter
cmp
dec
cs
and
mov
subb
xchg
das
inc
adc
das
sub
jo
cmp
or
lea
dec
and
filds
shrd
das
xor
das
call
push
das
adc
ljmp
and
fs
call
addb
and
sti
inc
mov
or
mov
cmp
mov
das
xchg
aad
fdivp
or
cld
dec
or
shlb
or
adc
rcrb
mov
xchg
jae
mov
and
in
adc
xor
jle
enter
pop
ss
add
add
sahf
and
add
mov
pop
or
push
push
pop
fs
dec
test
inc
ss
pop
sbb
pop
and
mov
inc
ss
jl
mov
int
sub
or
and
and
dec
call
or
mov
xchg
testl
adc
mov
mov
imul
pop
int3
sub
in
mov
mov
dec
push
cwtl
nop
add
inc
push
push
push
inc
in
stos
xor
push
test
sbb
es
push
push
test
imul
mov
ret
shrb
les
dec
push
pusha
cmp
push
cwtl
rclb
mov
pop
sbb
shrb
ret
push
and
inc
notb
dec
xchg
test
insb
add
and
adc
push
sbb
inc
bound
call
mov
in
outsl
nop
sub
push
mov
cwtl
shlb
sub
push
or
mov
push
push
pop
mov
dec
call
adc
orps
int3
je
adc
inc
jo
xchg
mov
xchg
inc
test
sub
or
mov
cwtl
rorb
and
push
xor
rcrb
out
fstl
std
dec
aam
or
inc
repnz
mov
or
aas
xor
unpcklps
das
push
fistps
shlb
call
xchg
das
pop
decb
and
adc
call
xor
in
clc
lret
xor
lock
call
and
mov
in
int
inc
call
mov
xchg
mov
push
call
jl
repnz
call
fs
xchg
das
pop
mov
call
js
inc
out
call
cs
jbe
std
inc
sbb
cmp
in
mov
nop
push
cs
dec
sbb
pop
mov
out
pop
sub
fldcw
xchg
out
dec
unpckhps
ret
in
mov
int3
frstor
shlb
xchg
mov
push
fdivrs
jae
xchg
dec
in
push
push
mov
aam
cs
dec
cmp
xor
es
in
mov
push
push
cs
add
add
mov
leave
gs
loope
adc
adc
sbb
movsl
jb
pop
sbb
and
and
sub
mov
jle
test
cmp
pop
movsl
shll
inc
xchg
outsb
nop
lret
dec
xor
push
in
mov
sbb
cs
dec
or
mov
add
or
and
std
insb
and
sbb
imul
mov
xchg
sar
cmp
pushf
and
mov
mov
xchg
data16
daa
int
dec
js
adc
inc
mov
sbb
xor
test
and
or
mov
cmp
mov
enter
inc
test
add
lods
mov
cli
mov
xor
daa
mov
and
lods
outsb
inc
mov
sub
and
adc
aam
shlb
xchg
je
jne
adc
xor
add
xchg
push
sub
and
fwait
loopne
add
inc
pop
pop
mov
add
mov
in
adc
aam
mov
pop
stos
pop
dec
aam
and
lods
mov
adc
stos
mov
and
out
sub
dec
inc
dec
shrl
and
sbb
adc
xor
mov
mov
push
cmp
cli
cs
or
add
mov
ret
sbb
or
scas
sbb
mov
inc
add
stos
mov
pop
sbb
xchg
das
inc
inc
jmp
inc
sub
inc
shlb
call
push
or
jmp
xchg
jp
ret
push
mov
dec
dec
mov
or
dec
negl
mov
enter
aad
mov
aad
orl
mov
inc
data16
aad
dec
and
or
cmp
inc
mov
or
pop
pop
push
rcl
aad
mov
xchg
push
movsl
ret
stc
mov
mov
add
push
pop
push
xor
xchg
sub
mov
adcb
push
aad
push
cltd
lea
pusha
aad
xor
or
mov
sub
mov
add
sbb
dec
or
cmp
push
rclb
inc
inc
fs
or
test
movsb
xor
and
push
pop
push
dec
push
stos
call
sbb
aam
jne
mov
mov
cmc
mov
sbb
sub
push
shlb
sbb
test
sbb
rorl
xchg
test
adcb
test
xor
push
inc
pop
in
sbb
je
ja
jecxz
push
in
push
and
sbb
pop
mov
cmpsb
xchg
mov
xchg
in
cmp
mov
mov
xor
push
pop
dec
or
lods
pushf
push
jb
xchg
adc
shrb
adc
test
movsl
sti
loop
adc
add
xor
test
stos
dec
push
ret
mov
inc
adcb
and
roll
sub
cltd
mov
mov
push
mov
sub
adc
cmp
adc
jp
adc
lret
adc
xor
push
gs
xor
fs
jmp
dec
jmp
mov
rclb
cwtl
mov
sub
xor
adc
mov
and
dec
stc
sbb
pop
shlb
dec
push
push
cwtl
or
test
out
mov
adc
or
cmp
xchg
adc
sti
call
adc
cmp
inc
cmp
and
or
adc
adc
xchg
rcrb
cmp
sarb
mov
jmp
adc
inc
xchg
clc
leave
lods
mov
clc
testb
gs
or
inc
mov
ja
inc
pop
rcrb
push
nop
and
pop
push
inc
add
ja
push
pop
rolb
mov
adc
fs
inc
pop
insl
xor
jmp
adc
xor
andb
sbb
leave
push
andl
adc
and
sub
lcall
add
lods
or
push
mov
adc
mov
mov
or
add
sub
repz
add
fs
or
inc
xchg
or
push
call
int
adc
jge
or
gs
mov
popl
in
les
and
pop
add
jnp
dec
aam
call
lea
push
add
stos
xor
sarb
and
call
mov
xchg
inc
loop
aaa
rolb
stos
roll
rcl
aaa
add
je
ror
aaa
nop
cmpsb
mov
sbb
sub
mov
popa
pop
sub
inc
sbb
push
pop
inc
cmp
sbb
add
pop
nop
cmp
aaa
shrb
imul
xor
or
add
sub
aaa
in
and
bound
aam
mov
add
or
imul
shrb
push
and
stc
push
xchg
add
ds
mov
mov
mov
mov
mov
inc
mov
sub
add
iret
add
daa
ror
or
or
adc
call
and
mov
mov
sbb
pushf
mov
ret
faddl
call
push
icebp
sbb
inc
aaa
and
or
outsl
inc
jp
andb
movsb
or
sbb
mov
mov
into
jle
outsb
inc
loopnew
sarb
sbb
mov
and
je
addr16
inc
jp
push
adc
nop
mov
lea
addr16
nop
push
inc
aaa
addr16
xor
sbbb
das
xor
les
andb
movsb
xor
xchg
ret
add
dec
jno
push
and
push
ja
pop
scas
push
push
pop
rorb
push
sarb
pop
cmp
test
or
pop
cmpl
dec
sbbl
rorb
xchg
adc
movsb
and
xchg
nop
mov
xchg
push
sbb
rol
popa
testb
sbb
jo
inc
imul
shr
sbb
mov
dec
cmpsl
cli
push
es
inc
sahf
pop
in
sbb
cmpsl
adc
mov
xchg
mov
clc
mov
push
outsb
dec
push
mov
cmp
adc
stos
adc
push
cmpb
jg
pop
cmp
push
mov
and
rclb
inc
repz
cmc
pop
xchg
movsb
divl
push
add
lods
pop
xchg
repz
mov
xor
cmp
repz
fnsave
xor
test
inc
xchg
lods
mov
push
sbb
mov
leave
push
fwait
xchg
mov
repz
xchg
and
sbb
repz
and
xor
inc
aad
repz
xchg
sub
xchg
mov
xor
push
xchg
movsb
repz
bound
imul
and
imul
mov
nop
inc
ret
mov
mov
outsb
jg
mov
rclb
mov
sub
or
arpl
stos
sub
mov
mov
adc
je
push
call
and
mov
inc
cmpsb
je
xor
cmp
adc
or
enter
xor
cmpsl
insb
movsl
hlt
add
and
sbb
sub
adc
stos
test
cmp
add
sbb
sbb
xor
adc
or
add
adcb
or
push
addl
sub
jb
ret
push
add
sub
add
sub
fwait
and
adc
jno
mulb
stos
xlat
fwait
push
cltd
imul
aaa
adc
clc
dec
pop
bound
mov
lea
call
adc
call
mov
xchg
test
sub
push
jnp
sysret
dec
mov
shl
adc
inc
call
ret
mov
jnp
lcall
adc
xlat
ret
push
sub
test
icebp
in
or
inc
nop
sbb
xchg
inc
nop
out
mov
sbb
dec
xchg
xchg
mov
or
inc
nop
inc
xchg
xchg
and
mov
cmp
or
cmpsb
dec
mov
jb
mov
add
jo
push
xchg
movsb
adc
cmpsl
xchg
cltd
adcl
inc
nop
outsb
sahf
mov
jmp
or
out
imul
int3
or
or
and
mov
fwait
sbbb
or
and
add
and
xor
out
or
sbb
ret
cmp
scas
sahf
mov
push
ds
repz
sub
or
sbb
sahf
out
call
add
repz
int3
loop
iret
repz
push
sub
push
nop
jns
cmpsl
jge
movsb
push
push
xchg
jl
push
sahf
negl
je,pt
push
jns
cmp
sbb
repz
repz
fmulp
mov
iret
xchg
mov
ret
into
sbb
incb
jl
negl
push
loop
sbb
out
aam
mov
iret
mov
sbb
lahf
out
sahf
pushf
scas
lret
or
cmp
repz
sub
pop
data16
repz
nop
sahf
lods
iret
repz
mov
fsubrp
decb
imul
inc
push
sar
mov
outsb
jle
sahf
mov
daa
negl
loop
clc
adc
sub
repz
aaa
je
fs
push
cmp
fimuls
daa
pop
mov
jbe
ljmp
cli
jbe
push
mov
in
int
cmpsl
insl
mov
iret
dec
test
jecxz
xor
lret
idivb
xchg
push
jbe
push
scas
test
mov
insb
adc
lods
or
push
out
adc
out
adc
aam
out
jne
dec
sub
pop
jle
sub
mov
push
icebp
mov
gs
dec
push
je
mov
or
push
outsl
push
push
or
loop
ja
cs
adc
sbb
push
fcoml
daa
add
xor
add
dec
pop
jae
outsl
and
push
ret
ss
imul
addr16
bound
outsl
xor
push
ret
out
xor
outsl
mov
iret
jl
push
dec
cmp
or
das
mov
imul
add
mov
or
sub
outsl
inc
imul
sub
dec
add
mov
push
mov
pcmpeqd
and
bound
shrl
and
add
add
pop
sub
or
mov
jbe
pop
data16
add
out
jo
xor
mov
or
addr16
add
lock
je
aas
test
xchg
arpl
push
dec
inc
push
push
inc
push
inc
pop
inc
outsl
outsl
xor
dec
rorb
cwtl
xchg
jb
inc
cmpsb
or
rcll
sbb
pop
dec
mov
fwait
and
pop
dec
imul
mov
sbb
pop
inc
jne
outsb
je
jg
test
pop
inc
js
jbe
les
jnp
inc
xor
outsl
filds
sub
sub
sub
inc
inc
xor
xor
xor
sub
aaa
jge
xor
xor
inc
xor
xor
ss
std
xor
fs
cmp
fdivl
cmp
xor
clc
inc
inc
xor
mov
aam
sub
mov
bswap
jo
add
sets
test
fnstcw
mov
cld
shll
push
fidivrs
cmp
pop
adc
ss
xor
or
push
and
cmp
aaa
adc
xor
inc
pop
dec
add
push
jl
rolb
arpl
push
jne
popa
xor
dec
and
cmp
ss
pushf
xor
add
lds
add
outsl
mov
dec
rcll
cmpsb
loopne
test
xchg
int3
in
scas
data16
push
push
dec
hlt
imul
ficoml
pop
push
call
push
inc
out
adc
cmp
repz
sub
out
cmp
aaa
mov
in
in
mov
lods
sahf
add
movd
hlt
sub
cmp
dec
xor
inc
push
and
jg,pn
lret
cs
insb
outsl
xor
les
test
fwait
mov
je
push
push
cwtl
mov
sub
push
inc
cmp
push
xchg
sbb
fmull
pop
mov
mov
jp
mov
rcll
fldt
inc
cs
subl
idiv
inc
arpl
insb
mov
push
ss
ficoms
ret
lret
rcll
xchg
fld
cmp
and
xor
test
arpl
add
insb
popf
pusha
mov
inc
cltd
cmpsl
addl
lods
adc
jp
xchg
inc
and
stos
inc
jne
mov
out
push
and
lock
lret
jnp
pop
sub
mov
push
imul
bound
sub
daa
scas
scas
je
dec
fs
lods
popf
push
imul
push
jo
mov
adc
insl
sbb
movsl
cmpsb
add
xchg
dec
popa
movsb
jmp
pmovmskb
fwait
outsl
push
pop
arpl
inc
cs
push
push
push
add
mov
ja
fs
cmpsb
shlb
dec
fsubl
push
popa
imul
add
or
fcomps
fdivl
sbb
decl
push
push
or
pop
and
dec
loopne
push
repnz
inc
sbb
rolb
and
rcrb
add
push
aas
adc
pusha
and
sbb
sbb
and
xchg
pushf
add
sbb
push
add
les
push
or
add
sub
sbb
sub
add
add
out
adc
orb
or
cmp
adc
iret
push
adc
xchg
adc
push
sbb
sbb
sbb
dec
repz
call
sahf
imul
das
push
pop
nop
cld
and
movsl
stc
mov
cli
js
jns
stc
sahf
out
scas
jp
push
cld
fdivr
mov
cmpsl
sbb
popa
bound
push
add
push
mov
mov
lcall
lds
push
bound
mov
inc
ja
jns
push
ds
cmp
popa
fcoms
or
inc
xor
mov
adc
push
cld
or
in
out
sahf
fmul
les
jno
pushf
push
xchg
call
out
nop
mov
mov
jl
insb
push
iret
pusha
pop
mov
push
sahf
out
dec
inc
inc
cmp
iret
repz
xor
sub
and
cmp
repz
sbb
or
ds
repz
cld
or
out
sahf
out
call
out
sahf
mov
nop
jo
xor
repz
lock
int3
mov
repz
rep
inc
sub
adc
jns
iret
or
push
fcom
les
cwtl
js
sub
cmp
sarl
mov
fwait
loope
sbb
add
call
xor
out
cwtl
jl
dec
xor
pop
pop
adc
xchg
dec
pop
pop
jo
add
xchg
les
push
out
xchg
cmp
inc
xor
out
mov
sub
inc
inc
add
adc
inc
dec
cmp
loop
and
pop
notb
xor
sbb
fwait
inc
test
scas
sarl
pusha
push
jecxz
shll
dec
gs
cmpb
loop
mov
cli
out
xor
bound
mov
mov
push
ja
push
rol
imul
and
jmp
jo
inc
cmp
lods
push
and
jae
decl
inc
pusha
adc
push
xor
imul
adc
inc
stos
xchg
icebp
or
mov
pushf
andb
rolb
ret
jns
push
inc
rorb
push
pop
loopne
mov
xor
xchg
cld
inc
inc
mov
jnp
out
cmp
cs
mov
out
inc
jg
pop
jne
pop
push
shlb
decl
ret
jne
imul
push
xchg
pop
dec
and
mov
fidivs
arpl
imul
cld
pop
jb
pop
push
or
xlat
mov
jo,pn
bound
inc
rorl
push
push
push
insb
das
inc
pop
mov
inc
scas
outsl
jl
add
cmpsl
ja
lahf
js
cs
jg
das
loopne
es
lds
xchg
loopne
ret
push
in
ds
push
inc
sub
mov
mov
xchg
xor
xor
xor
and
data16
insb
pop
xor
das
sarb
jg
fsubrs
cltd
nop
pop
push
cmp
mov
mov
mov
ret
sete
dec
mov
xor
data16
ljmp
add
leave
and
xlat
jns
pop
cmpsl
nop
pop
mov
sti
cltd
or
push
lcall
inc
cmp
dec
lret
les
mov
stos
lea
pop
push
popf
jl
jno
shll
pushf
push
cmpsb
jg
mov
xchg
mov
dec
shlb
adc
aas
vmptrst
mov
aas
mov
cmp
iret
adc
inc
jb
shlb
sbb
mov
push
aam
lea
loope
adc
fs
loopne
fidivrs
movsb
dec
adc
cmp
lea
loopne
daa
cmpsl
jno
cmp
push
dec
and
loope
cmpsb
in
push
xor
push
and
cmp
insl
insb
sub
inc
fidivl
popa
pusha
inc
je
dec
imul
adc
xor
testb
arpl
notl
insb
push
lcall
fs
dec
dec
loop
xor
push
push
add
push
outsl
ja
xor
push
push
jle
jb
cmp
push
sub
add
faddl
daa
movsb
and
rcr
xchg
and
add
add
orl
daa
dec
jmp
pop
outsb
inc
lods
and
outsl
mov
ljmp
mov
add
mov
push
dec
push
jb
clc
mov
adc
inc
add
insl
add
mov
pop
outsb
push
add
push
imul
int
push
mov
jae
mov
jae
push
test
adcb
push
or
mov
popa
adc
add
mov
out
pop
pusha
das
mov
push
sub
push
inc
into
sub
or
mov
add
imul
dec
mov
cwtl
loopne
add
fsubl
dec
mov
inc
push
mov
test
das
push
mov
sub
cmp
push
jo
jb
xchg
loope
mov
sub
push
fisubl
movsb
sbb
int3
sahf
jbe
roll
push
push
lods
cmpsl
xor
in
mov
dec
imulb
push
into
xchg
jno
aaa
adc
popf
adc
and
mov
pusha
inc
and
adc
cmpsl
and
inc
mov
fimull
and
xchg
xor
mov
mov
fcoms
cmp
inc
add
push
fbld
jne
lods
gs
or
pop
addr16
inc
rolb
outsb
jp
push
lea
pop
push
or
xchg
and
sbb
push
pushf
jne
nop
pop
ds
rcrl
inc
lahf
xor
arpl
jecxz
ret
sbb
ss
cmp
inc
cs
pop
bound
adc
jle
and
fcoml
lea
pop
adc
je
adc
lahf
outsb
xor
insl
add
and
sub
inc
sbb
jne
xchg
pop
sarl
pop
outsl
lods
js
aaa
mov
shrb
inc
add
push
add
push
lcall
orb
mov
pusha
xorl
push
dec
dec
dec
mov
add
inc
jns
mov
and
lds
mov
mov
lret
imul
outsl
inc
push
outsl
cmp
xchg
sti
gs
dec
and
add
add
push
inc
sbb
add
sbb
cmp
add
sbb
lock
mov
out
mov
rolb
push
xchg
lret
out
jb
jecxz
sbbl
outsl
subb
xchg
jp
mov
inc
jmp
pop
ja
add
das
push
in
scas
je
aaa
dec
inc
dec
pop
or
inc
dec
lret
dec
aas
inc
cmc
lods
or
out
jnp
fstl
push
push
stos
enter
add
and
xor
mov
cmpsb
add
jne
sbb
and
jo
add
add
push
push
add
outsl
inc
xchg
add
pop
mov
fs
sub
pushf
sub
adc
int3
or
push
dec
pusha
push
jo
jno
test
push
cmp
add
jae
and
into
pop
rcll
and
test
add
nop
leave
rcrl
imul
add
rol
add
iret
pop
add
lret
xchg
sub
in
jmp
cmpsl
add
push
mov
rol
mov
push
adc
mov
jns
insb
bound
loope
pop
cld
inc
jae
adc
add
insb
inc
add
add
pop
cmp
push
add
or
xor
push
stos
mov
mov
addl
insb
jae,pn
bound
push
add
lods
out
das
sub
sbb
xor
sbb
cmp
fbld
lret
fbld
int3
cmc
pop
ficomps
mov
push
popa
popa
shrb
xchg
addb
and
inc
cwtl
aam
dec
cld
cli
jg
jecxz
add
xor
in
hlt
addb
aam
lret
jae
ret
fisttps
sti
push
mov
push
sbbb
sbb
xchg
push
punpcklbw
out
scas
sbbb
pop
and
mov
xor
js
mov
nop
inc
loope
test
incl
daa
pop
add
or
push
aam
inc
cmp
pop
gs
cmp
mov
icebp
in
inc
xor
sti
fsubrl
pop
add
addr16
cmp
inc
pusha
jmp
pop
jo
and
pop
hlt
mov
add
or
sub
inc
push
inc
sub
daa
push
enter
add
dec
mov
rcrb
xchg
adc
out
pop
adc
adc
add
cmp
sarl
lock
iret
repz
mov
out
iret
lods
test
pop
mov
out
xchg
nop
mov
jo
pusha
push
pop
push
iret
repz
inc
cmp
and
sbb
cmpsl
stc
cmp
cld
in
lock
jnp
sub
call
sarb
repz
sarb
xrelease
cmp
repz
xor
and
adc
sahf
cmpsl
stc
cmp
cld
in
hlt
in
in
sahf
out
fmul
mov
jns
fwait
pop
xchg
push
mov
js
push
ds
repz
inc
sub
and
or
jmp
sub
ja
es
adc
adc
push
xchg
dec
xor
divl
jmp
testl
andl
incl
pmuludq
xchg
xchg
xor
lock
loopne
scas
push
nop
mov
cmp
data16
ja
movsb
andb
aaa
add
testl
lret
jbe
add
dec
inc
div
fildl
mov
jge
test
inc
dec
pop
addb
inc
mov
mov
mov
pop
imull
adc
add
xchg
pop
dec
vpcmpeqw
lret
inc
subl
adcb
mov
push
mov
dec
push
pop
jo
add
adc
rclb
inc
test
push
xchg
xchg
mov
mov
outsb
test
or
jae
aam
lret
sub
outsl
dec
xchg
cmp
insl
jbe,pn
and
mov
lahf
xor
xor
ds
or
and
or
add
mov
xor
jae
mov
add
and
or
push
jbe
mov
aad
sbb
cmp
and
and
and
or
es
or
add
push
imul
jae
popaw
insb
into
jns
das
sti
add
add
jmp
push
sbb
inc
or
mov
add
inc
pop
pop
adc
pushl
add
xor
xor
sbb
bound
loopne
sbb
das
xor
cmp
pushl
movsl
xor
xor
xor
xor
xor
xor
movsb
xor
xor
xor
xor
xor
pushl
xor
xor
xor
xor
xor
dec
xor
xchg
shll
pushl
inc
ss
ss
es
dec
aaa
push
aaa
mov
iret
aaa
call
aaa
adc
ljmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
decl
cmp
cmp
data16
cmp
cmp
cmp
cmp
cmp
cmp
cmp
aaa
cld
jmp
cmp
cmp
cmp
cmp
sub
ret
add
push
lock
idivl
incl
add
xchg
add
adc
and
dec
xor
pushl
pop
xor
outsb
xor
popf
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
out
cmp
jge
xorl
xor
jge
mov
xor
xor
fidivl
xor
ljmp
xor
fnsave
out
xor
ljmp
jno
cltd
ss
ss
ss
aaa
sbb
jno
mov
aaa
loopne
sub
pop
out
cmp
pop
cmp
cmp
loopne
jmp
cmp
cmp
cmp
cmp
push
cmp
jl
cmpl
cmp
cmp
cmp
push
adc
cmp
cmp
cmp
inc
sar
cmp
pop
cmp
imul
cmp
cmp
pushl
test
jo
test
mov
aas
adc
xor
inc
aas
popa
aas
cmpl
sbb
aas
les
into
aas
out
jmp
repz
cmp
pop
xor
xorb
xor
fdivs
fnsave
ljmp
xor
xor
xor
xor
xor
xor
xor
pop
xor
xor
xor
xor
xor
xor
lcall
xor
xor
xor
xor
xor
pop
xor
jo
xchg
xor
xor
pop
dec
pop
inc
xor
xor
xor
xor
xor
icebp
or
xor
push
sub
ss
clc
loop
cmp
cmp
cmp
mov
mov
cmp
cmp
cmp
cmp
mov
xchg
cmp
cmp
cmp
cmp
cmp
cmp
xchg
aas
inc
aas
pop
aas
ja
pusha
loop
inc
test
xor
paddd
xchg
pop
xor
push
xor
xor
xor
xor
xor
xor
incl
ret
xor
xor
lcall
out
xor
xor
xor
xor
test
mov
mov
nop
xor
pushl
pushf
xor
xor
xor
scas
clc
xor
cmp
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
mov
fnstcw
fnstsw
loope
in
in
cmp
cmp
std
cmp
cmp
mov
xchg
adc
sbb
push
ljmp
cmp
cmp
ds
fidivrl
jmp
fcomip
add
and
cmp
ss
ss
xchg
cmp
cmp
test
lods
cmp
cmp
mov
cmp
cmp
adc
lcall
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
dec
aas
push
mov
cmpb
aas
sarl
aas
in
out
aas
mov
push
movsb
xor
clc
fistl
add
jmp
mov
scas
xor
xor
inc
xor
loop
xor
xor
xor
mov
xor
jg
aad
popa
scas
std
xor
cmpsb
data16
ss
add
or
aaa
adc
pop
aaa
and
aaa
dec
aaa
dec
aaa
push
aaa
pop
aaa
imul
aaa
jl
xchg
mov
xchg
aaa
mov
aaa
xor
cmp
xchg
outsl
cmp
ljmp
cli
test
popf
cmp
xor
pusha
cmp
mov
cmp
cmp
sbb
push
cmp
jmp
outsl
sbb
cmp
popa
cmp
cmpb
cmp
loope
cmp
cmp
or
cmp
cmp
cmp
cmp
cmp
bnd
adc
sub
fcomip
cmp
cmp
adc
inc
cmp
push
cmp
pop
cmp
jb
js
cmpl
jmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
sbb
and
xor
cmp
pop
cmp
mov
cmp
cltd
cmp
jp
jg
cwtl
ds
ds
jecxz,pt
out
jo,pt
jmp
aas
das
aas
cmp
je
jge
mov
movsl
aas
stos
aas
mov
mov
scas
outsl
sahf
or
push
xor
insl
stos
lcall
sahf
xchg
les
fidivl
in
sar
test
xor
xor
xor
mov
xor
lcall
pushl
cmc
xor
xor
xor
xor
mov
jl
cmpsl
xor
cld
aaa
loopne
xor
scas
jno
xchg
xor
xor
xor
cmpsb
cmc
out
cli
pushl
xor
xor
mov
ret
aaa
xchg
aaa
fwait
sar
cmc
cmc
sahf
cmpsb
mov
bound
scas
cmp
ror
scas
jp
cmp
fdivrl
aaa
cmp
or
cmp
cmp
mov
aaa
je
fimull
nop
cmp
cmp
cmp
push
xor
xor
push
or
ljmp
push
xor
bound
data16
push
outsb
aaa
jb
jbe
xchg
decl
jge
cmp
cmp
cmp
cmp
cmp
cmp
loope
cmp
mov
mov
cmp
ja
lahf
xor
xchg
aas
push
mov
mov
xor
mov
xor
xor
mov
and
push
ss
fiadds
aaa
ret
jl
jmp
repnz
or
cmp
jmp
cmp
mov
cmp
cmp
jbe
xchg
cmp
cmp
jg
loopne
cmp
mov
and
cmp
cmp
fadds
idivl
push
aas
jne
mov
or
std
jg
mov
fwait
xor
xor
dec
or
ret
sub
adc
xor
divl
pop
xor
mov
loop
ss
dec
ss
outsb
notb
movsb
ss
enter
in
and
cmp
cmp
cmp
orl
mov
pop
mov
sbb
and
cmp
pop
push
imul
cmp
test
push
jge
mov
ret
cmp
dec
cmp
cmp
jg
data16
aam
fnstsw
jecxz
imul
mov
cmp
cmp
push
loopne
js
sarb
inc
cmp
orb
jg
cmp
ds
cmpb
cmpsl
ds
ds
ret
idivl
add
sbb
add
loope
rol
push
adc
mov
push
xor
aad
out
incl
cmp
or
xor
xor
xor
xor
xor
mov
ljmp
ss
lcall
ds
dec
aaa
pop
aaa
js
das
sar
mov
stos
cli
fidivl
out
in
aaa
cli
aaa
mov
cld
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
sub
aaa
sarb
cmp
cmp
adc
jbe
cmpl
decb
cmp
adc
and
pusha
aas
cmpb
aas
fdivrl
loop
jle
shl
out
out
pop
rclb
sub
jne
filds
loop
xor
xor
jg
xchg
xor
xor
rcll
shlb
sbb
xor
xor
ljmp
jbe
loopne
adc
pushl
adc
sbb
sbb
sub
sub
nop
cmp
mov
cmp
cmp
cmp
cmp
push
loope
cmp
ljmp
mov
aaa
into
push
xor
xor
xor
jl
mov
negb
mov
mov
mov
xor
xor
add
out
repnz
xor
cmp
sub
sub
xor
inc
pop
cld
jg
cmp
inc
cmp
dec
cmp
push
rcrb
scas
push
loope
cmp
fidivs
cmp
cmp
and
lahf
mov
arpl
mov
enter
pop
test
mov
cmp
cmp
mov
cmp
scas
scas
mov
dec
cld
push
add
or
add
inc
stos
adc
sbb
and
and
sub
sub
pop
loopne
xor
cmp
inc
cmp
cmp
cld
jg
lcall
push
cmp
ret
jl
cmpb
push
mov
nop
xchg
cwtl
fwait
lock
pop
mov
sub
xor
inc
mov
filds
push
aas
xchg
aas
cwtl
aas
lods
aas
mov
shrb
aas
fdivrs
loopne
mull
adcb
pop
jg
bound
clc
xor
xor
inc
xor
xor
pushl
nop
xor
xor
fsubl
inc
cmp
mov
imul
inc
xor
andb
jle
jge
add
or
or
ss
jg
lcall
ss
fdivs
fdivl
loopne
in
call
ss
clc
ss
add
add
or
or
adc
adc
aaa
sbb
and
and
aas
cli
call
xor
cmp
cmp
inc
aaa
inc
aaa
dec
jb
aaa
push
aaa
adc
mov
aaa
pusha
aaa
jo
je
jl
xorb
aaa
mov
or
aaa
xchg
aaa
cwtl
into
mov
dec
mov
ljmp
ret
xor
enter
shlb
aam
fdivs
fdivl
sbb
lock
hlt
scas
les
hlt
add
or
adc
adc
fcomip
pop
sbbb
cmp
fdivrl
call
mov
cmp
pop
jmp
cmp
cmp
cmp
sub
cmp
cmp
cmp
sbb
add
insb
cmp
jl
test
mov
cwtl
cmp
movsb
cmp
mov
mov
mov
inc
xchg
sarb
test
mov
lods
test
jmp
jg
or
repnz
movsb
fs
jle
lret
lods
pop
push
aaa
cmpsb
punpcklbw
icebp
push
fnstenv
out
lahf
das
popa
aaa
stos
mov
push
lret
aaa
ljmp
push
mov
mov
aas
push
aaa
mov
mov
and
out
cmpsb
rorb
xor
in
pushf
xchg
dec
loope
addb
xchg
xchg
and
cmp
sub
popa
sub
mov
or
daa
out
cmp
inc
out
sub
test
out
or
adc
add
pop
pushf
inc
int3
push
xor
and
repz
and
dec
mov
cwtl
rolb
out
rolb
imul
and
xchg
push
out
push
pop
pusha
sbb
pop
and
leave
xchg
jo
and
push
sub
mov
shrl
inc
inc
popa
sbb
clc
add
sbb
movsb
scas
aas
repnz
add
inc
es
ret
push
gs
sub
mov
add
movsb
push
mov
adcl
mov
push
sbb
call
cmp
cmp
xchg
sbb
pop
push
jne
idivb
push
sub
adc
xchg
mov
or
xor
mov
outsb
cld
push
mov
popl
jl
or
incl
jb
jg
add
hlt
cmpsb
xor
mov
orl
pop
ret
dec
and
push
xchg
lock
xchg
mov
test
std
incb
jbe
call
outsb
sbb
mov
aaa
cmp
pop
fs
mov
aad
lcall
jb
add
or
add
cmp
ret
adc
subl
jl
and
or
mov
shlb
test
dec
ss
inc
mov
sbb
adc
sub
nop
or
mov
xor
pop
shlb
dec
mov
addb
and
add
jb
adc
adc
or
movsl
sbb
and
add
lret
xchg
and
inc
mov
call
jno
inc
cmp
jne
divb
ficoml
std
adc
add
jmp
push
faddl
cmp
call
fidivs
adc
mov
call
xor
mov
or
adc
pop
mov
adc
fistps
test
push
add
dec
add
ret
xchg
xor
pop
add
mov
pop
and
or
test
adc
loop
sbb
mov
mov
dec
xchg
push
ret
cld
xchg
sbb
pop
fldl
xchg
lock
sbb
push
and
lea
sbb
pop
clc
fnsave
cmp
mov
and
or
leave
ficoml
ret
pop
adc
mov
push
push
mov
or
int3
cmpsb
lret
adc
pop
mov
out
adc
dec
cmp
sub
and
inc
imul
push
fisubs
arpl
jecxz
pop
add
and
mov
mov
cmp
add
fimuls
and
mov
jecxz
inc
or
add
orb
test
test
and
mov
aad
pop
mov
adc
or
cmp
subl
sub
push
mov
pop
and
out
mov
jmp
rcll
push
lods
fwait
sub
sbb
lods
mov
ss
mov
dec
mov
pop
int3
rolb
mov
or
leave
inc
and
cmp
xor
mov
xor
mov
cmp
mov
cmp
or
fildl
movsb
pop
test
push
xchg
mov
xchg
mov
repnz
enter
aad
addl
mov
rorb
aaa
cmpsb
sub
adcb
pop
aaa
je
inc
sbb
or
adc
str
test
out
cmp
jno
push
jge
inc
mov
mov
fs
lahf
jmp
repz
dec
inc
xchg
pop
xor
outsl
inc
sub
test
sub
jle
xchg
mov
sbb
cmp
pop
dec
mov
and
xor
xchg
loope
mov
fisttpll
push
mov
fnsave
add
shrb
inc
jmp
ret
call
cmp
scas
stos
stos
andb
aas
mov
xor
jnp
sbb
xchg
cmc
pop
jnp
jne
test
cmp
dec
mov
push
or
sbb
out
dec
jecxz
mov
adc
ljmp
adc
push
inc
or
mov
dec
sub
cmp
sbb
lea
sbb
xor
and
push
loope
fs
pop
xor
shll
mov
fldlg2
call
mov
add
dec
call
call
and
jbe
stc
cmpsb
push
mov
and
dec
pop
push
push
out
cmp
leave
push
cmp
popa
or
cwtl
mov
push
and
and
inc
push
test
dec
mov
sbb
call
es
or
push
mov
push
fimuls
adc
mulb
sbb
mov
push
inc
adc
add
sbb
and
gs
and
add
xor
gs
fwait
stc
inc
mov
or
inc
mov
and
subl
inc
mov
xchg
cs
sub
inc
adc
fistps
and
xlat
dec
adc
out
jbe
inc
fstpt
mov
or
lret
adc
sub
sbb
or
je
pop
pop
add
adc
mov
or
push
or
cmp
add
inc
fimull
add
mov
add
xor
mov
or
xor
add
inc
fistl
cmp
sub
insb
subb
ret
fwait
push
cmp
insb
push
jb
repz
add
inc
inc
iret
xlat
cmp
rorl
pop
ret
inc
inc
ja
ss
int
shr
pop
nop
shlb
xor
add
fstpt
fisubl
test
inc
jae
cmp
nop
and
mov
pop
test
movsb
and
cmp
stos
mov
push
and
es
add
sub
lret
sbb
xchg
xchg
jne
ss
in
jg
sahf
out
out
xchg
push
insb
fs
push
dec
pop
out
dec
inc
push
pop
adc
sbb
jmp
test
mov
inc
lret
mov
jg
and
fisttpll
xor
pop
nop
inc
push
fs
mov
call
dec
inc
dec
pop
addr16
and
cmp
cmp
push
lock
xchg
jns
out
push
or
and
inc
pop
out
outsl
cmp
inc
push
push
push
addr16
add
add
xlat
sbb
or
mov
and
sbb
and
shlb
pop
push
cltd
cmp
sbb
cltd
mov
add
in
popa
hlt
inc
mov
inc
daa
cwtl
and
cltd
lock
or
rorl
pop
cmpsb
jo
inc
jnp
mov
pop
or
cmp
jnp
repz
push
push
mov
cmpsl
and
test
pop
push
addr16
enter
sbb
sbb
daa
cs
lcall
dec
push
inc
daa
daa
shll
daa
daa
inc
xorb
cmpsb
imul
or
add
sub
xor
in
sub
sub
enter
sub
imul
lcall
dec
push
sbb
sub
sub
and
xorl
cmp
adc
cmp
ljmp
add
mov
sub
xor
stos
mov
add
push
xor
addl
addr16
or
sbb
inc
cmp
cmc
push
fwait
insl
and
or
clc
fs
dec
sbb
cmp
sbb
add
mov
adc
psubsb
cwtl
sub
lea
and
not
imul
fiadds
and
adc
mov
mov
push
rcrb
cwtl
addr16
xchg
inc
inc
dec
pop
sub
and
hlt
jle
mov
movhps
addr16
adc
mov
mov
cmp
adc
iret
addr16
sub
shll
fwait
or
and
frstor
test
push
add
xor
sub
push
data16
cmp
inc
loopne
or
adc
addr16
out
andb
add
sub
call
imul
cmp
xchg
cltd
mov
add
xchg
fucomp
repnz
test
add
enter
mov
add
cltd
sub
out
add
aaa
sbb
cltd
inc
mov
pop
or
adc
inc
cltd
cwtl
pop
push
call
and
cwtl
lret
cmpsl
aad
cwtl
rol
inc
mov
fs
push
adc
outsl
cltd
mov
mov
push
push
xor
cltd
nop
add
jno
nop
lock
cltd
pop
sub
jbe
cltd
pop
sbb
or
pusha
and
test
cmp
sub
sbb
test
and
push
scas
mov
cltd
fiadds
sbb
ljmp
mov
or
add
adc
fsubrs
xchg
cmpsl
mov
push
sbb
pop
adc
adc
inc
adc
mov
sub
mov
sub
jmp
outsb
adc
fs
mov
adc
xchg
lods
test
and
mov
out
sub
adc
cmp
aam
les
pop
aam
adc
lds
ss
enter
imul
sub
pop
es
add
adc
stos
test
sub
in
mov
pop
loopne
or
and
add
fdivs
imul
xchg
push
adc
in
fiadds
cmp
fstl
addr16
test
test
add
inc
aam
inc
scas
adc
leave
inc
pop
in
push
pop
adc
mov
lods
and
inc
call
dec
bound
enter
adc
pop
adc
cmp
cwtl
fs
enter
jmp
pop
or
sbbb
push
test
pop
ss
sub
sub
shlb
jne
push
xchg
adc
xchg
stos
daa
or
sub
lcall
imul
add
pop
rol
and
mov
pop
inc
movsb
push
inc
mov
pop
fsubs
jnp
push
rorb
icebp
addr16
pop
test
cs
sbb
in
push
inc
aas
xchg
push
dec
inc
mov
sub
flds
inc
or
sbbb
je
and
nop
outsb
mov
pop
push
pusha
mov
mov
sbb
push
add
jnp
popa
mov
lock
and
xor
push
pop
xchg
pop
push
add
aam
mov
sub
sarb
loope
sub
not
mov
jo
sbbb
inc
xor
movsl
hlt
pop
xchg
xchg
xchg
xchg
out
sbb
xor
xchg
xchg
xchg
js
push
xchg
xchg
xchg
xchg
pop
inc
dec
dec
cmp
cmp
pop
pop
inc
pop
mov
nop
mov
pop
bound
push
call
inc
mov
adc
pop
testl
jle
mov
je
inc
pop
lds
fldl
loop
adc
and
or
pop
call
enter
xorl
pushf
bt
gs
push
jo
nop
rorb
movsl
addb
dec
push
cmp
mov
cmp
in
xorl
jno
cmpsb
test
ja
mov
rolb
add
int3
lods
out
jl
xor
pop
dec
mov
fistpl
sbb
std
sub
push
adcb
outsl
cmp
push
dec
push
push
subl
inc
cmpsl
add
sub
xchg
inc
ds
or
jnp
cmpb
aas
test
dec
mov
pop
sub
inc
pop
fstpl
arpl
loop
pushf
sbb
xchg
mov
mov
daa
mov
call
insb
lret
pop
fs
gs
xchg
or
push
push
pushf
pop
int3
pop
dec
push
enter
fsubl
imul
insb
ljmp
test
mov
xor
push
push
and
loope
mov
mov
mov
les
repz
movsb
push
mov
dec
lock
out
mov
lret
inc
add
inc
mov
mov
dec
fmul
inc
lods
mov
sbb
pop
sbbl
frstor
add
pop
ds
sbb
push
inc
orl
pushf
fwait
popa
cmp
dec
test
sbb
ret
js
loopne
nop
loopne
inc
pop
and
adc
in
addr16
daa
in
adc
mov
push
daa
sub
or
test
jmp
dec
daa
xchg
dec
adc
jnp
add
fwait
mov
andl
aaa
sbb
cltd
loopne
adc
rcrb
and
cltd
xchg
mov
mov
push
cltd
sbb
or
imull
mov
or
inc
mov
fcoml
fisubrs
mov
pop
inc
cltd
pop
inc
and
loopne
stc
push
xor
cltd
xchg
mov
xchg
push
inc
jmp
xor
mov
sbb
cltd
adc
xor
and
test
enter
mov
dec
inc
xor
daa
cltd
inc
ljmp
repnz
sub
sbb
jns
mov
cmp
mov
lahf
mov
lods
cs
jle
add
out
arpl
push
lret
lret
sub
xchg
add
add
jns
sub
fsub
or
daa
inc
sub
test
cmpsl
rclb
push
sub
and
push
enter
mov
xchg
inc
test
or
add
adc
call
or
popa
adc
pop
xor
xor
dec
pop
sbb
clc
je
jnp
in
cmc
sarl
bnd
add
cs
test
mov
dec
in
ret
pop
hlt
je
push
lret
jge
xor
pop
push
cmp
js
jl
adc
test
jo
repnz
xorb
push
inc
and
in
xchg
xor
icebp
xchg
loope
lods
inc
mov
stos
inc
adc
and
xchg
or
pop
lret
xchg
jl
mov
or
jno
and
enter
jp
mov
jno
pop
pushf
inc
pop
add
add
and
add
or
fisubrs
jns,pn
repz
sbb
pop
sahf
insl
dec
pop
movsb
mov
ja
jne
xchg
pop
push
xor
dec
fisttps
pop
push
mov
rcrb
sti
pop
inc
mov
xchg
push
stos
subb
fistps
add
fcmovb
loop
jecxz
xchg
pop
ss
pushf
xchg
inc
xchg
push
fcoms
xlat
dec
stos
xchg
push
xor
dec
pop
add
xchg
lahf
rcrb
mov
pop
test
xchg
pushf
mov
jno
xchg
fdivl
daa
es
shll
imul
mov
dec
xchg
adc
addl
add
add
push
add
dec
push
push
xchg
lret
fnstenv
in
js
cmp
jns
fldcw
adc
sbb
sbb
jp
push
fwait
xchg
or
cmc
shlb
adc
or
andb
cmp
pushf
mov
and
and
pushf
mov
xor
inc
leave
mov
daa
dec
xchg
dec
setl
push
xchg
fs
je
es
aaa
rclb
jno
es
and
sub
arpl
xchg
lods
leave
shl
jo
xchg
lods
mov
add
ljmp
jmp
xchg
movsl
xchg
outsb
push
xchg
ret
dec
aaa
dec
xchg
mov
xchg
xchg
push
rorb
xchg
or
jmp
loop
cs
call
fs
sub
lods
add
and
and
jb
or
mov
add
xchg
test
movsb
icebp
jnp
in
and
xor
xchg
or
mull
test
inc
jb
pop
mov
push
fcoml
cmpsl
lret
int
nop
jae
pop
adc
mov
inc
cltd
ss
sub
inc
cltd
ds
ss
loope
aad
sub
clc
int
add
mov
int3
leave
call
adc
push
int
mov
jb
idivl
inc
pop
das
push
in
mov
sub
pop
insb
push
push
and
aad
jmp
out
pushf
inc
inc
cmpsl
lods
shll
inc
push
sahf
mov
cmp
fstpl
dec
in
in
inc
fldl
movsl
cmpsb
mov
push
dec
push
cmpl
lcall
mov
sahf
in
push
cmpb
inc
adc
test
or
cmp
adc
push
pop
inc
xor
mov
push
add
fildl
cld
adc
loopne
clc
outsb
xorl
mov
dec
xchg
mov
push
xchg
dec
push
test
gs
ret
push
sbb
pop
and
fisttpl
pop
xorb
mov
fistl
aam
add
lret
loopne
lret
xchg
fildl
cmpsl
inc
or
test
sbb
add
sbb
mov
mov
mov
test
inc
or
push
fdivs
mov
loopne
aaa
out
jns
adc
add
test
daa
pop
push
and
lea
aam
fldt
call
push
call
jecxz
cmc
sub
push
xorb
and
and
inc
movsl
dec
add
fnsave
add
fimuls
in
enter
shlb
xchg
imul
cmpl
mov
lds
fucomip
in
enter
iret
leave
rorl
aam
scas
cli
lock
iret
loope
pop
push
orl
jb
jns
mov
or
pop
mov
mov
and
or
add
in
mov
in
fdivrl
inc
pop
pop
pop
les
lret
lret
lret
lret
test
mov
lret
lret
mov
jno
lret
lret
lret
lret
imul
lret
lret
dec
mov
xor
and
jb
sbbl
idivl
inc
push
loope
mov
and
sarb
jb
sbbl
pop
jns
inc
jle
jo
gs
pop
mov
push
jb
mov
and
cmp
and
nop
sbbl
mov
leave
inc
push
jb
mov
in
pop
jns
mov
jb
sbbl
xchg
mov
inc
push
jnp
jo
gs
pop
mov
push
jb
cmpl
cs
leave
inc
sbb
sbb
and
mov
adc
mov
and
inc
mov
dec
xor
or
mov
xor
mov
or
xor
mov
rolb
push
or
inc
adc
adc
dec
xor
adc
push
xor
daa
int
sbb
sbb
rcrb
mov
enter
and
cmp
pushf
xor
daa
les
mov
jb
mov
mov
dec
inc
mov
dec
xchg
daa
int
jl
dec
dec
push
subb
add
lock
mov
inc
mov
and
cmp
in
add
xor
inc
sub
mov
pusha
push
addr16
inc
inc
push
xor
rolb
sub
inc
sub
jb
push
popl
dec
repnz
aam
push
pusha
jmp
mov
adc
mull
in
cmpsb
fadd
jo
mov
hlt
xchg
lods
and
imul
adc
cmpsl
in
mov
icebp
push
add
aam
add
add
xor
pop
xor
mov
add
aam
pop
inc
jmp
xor
sub
jge
and
xchg
in
pusha
xchg
punpckhbw
jb
mov
mov
add
stos
mov
cmp
dec
rdtsc
lret
arpl
cmp
gs
hlt
add
mov
adc
lret
sqrtps
mov
xchg
hlt
inc
lea
sub
mov
je
lret
pop
inc
mov
xchg
and
movsb
adc
push
mov
pop
sarl
movsl
sbb
sqrtps
xchg
outsb
push
xchg
out
stos
push
unpcklps
in
push
pop
xchg
movsl
jnp
psllq
and
xor
lea
int3
xchg
dec
add
imul
les
dec
cmovp
imul
sub
js
add
sub
pop
fs
frstor
movsl
sub
add
dec
push
int3
dec
scas
adcb
cmp
ljmp
fcoml
lret
mov
and
movsl
sub
sbb
or
dec
mov
and
in
movsl
cmp
mov
subl
sub
or
inc
fistl
in
mov
gs
or
sub
adc
push
push
or
int
cmp
sub
jo
scas
push
loop
dec
pop
or
adc
push
add
dec
or
mov
mov
xchg
mov
or
xchg
mov
shlb
notl
rolb
mov
fsubl
sub
sub
lds
and
dec
out
xchg
or
test
inc
sub
push
out
loope
xchg
or
jns
push
sub
out
adc
or
dec
pop
mov
sbb
rorb
pop
sbb
adc
fstl
or
das
push
pop
movsl
or
adc
adc
or
gs
out
push
adc
test
les
movsl
sub
pop
sub
orl
lret
movsl
or
xor
push
push
or
and
xchg
mov
sub
sbb
pop
mov
movsl
aad
andl
mov
pop
jp
pop
inc
mov
fwait
mov
jmp
gs
lds
mov
push
shlb
js
je
gs
or
test
mov
rcrb
fmuls
or
sub
dec
xchg
xor
and
movsl
or
or
mov
lock
repnz
lock
mov
std
push
sbb
inc
test
cmpsl
test
adc
jl
aad
adcb
xchg
add
xor
push
xor
or
sbb
mov
push
bound
inc
sub
and
mov
mov
push
or
mov
sub
cmpb
push
lret
imul
mov
pop
xor
inc
or
out
add
enter
stos
or
dec
or
inc
xor
sub
gs
push
loop
pushf
leave
or
mov
or
ret
xchg
mov
lock
stos
xchg
or
addb
sub
ja
or
movsl
xchg
mov
xchg
mov
sub
or
cmp
rcrb
gs
jl
push
test
push
aam
sbb
sub
push
loop
dec
dec
xor
andb
xchg
push
xchg
or
push
lret
stos
or
push
lods
push
mov
movsb
js
push
movsl
sub
or
sbb
or
shrb
xor
lret
push
dec
scas
ret
push
or
cmpsb
les
mov
or
test
fs
pop
add
movsl
imul
addr16
mov
loope
in
adc
subb
xchg
mov
cmp
inc
sub
mov
ret
movsl
add
mov
jg
xchg
test
or
push
or
loopne
push
pop
stc
pop
ja
sub
xlat
inc
adc
dec
pop
dec
test
aaa
loope
mov
cmp
pop
shlb
and
jmp
mov
adc
pop
xor
pop
das
cmpsb
mov
and
push
cltd
jmp
and
mov
cmp
nop
mov
test
sub
jmp
pop
pop
or
pop
ds
mov
movsb
or
movb
sub
lahf
push
push
aad
dec
ja
cmpsl
mov
push
cmpsb
inc
pop
push
and
popa
xchg
mov
xchg
add
mov
popf
dec
mov
dec
push
push
out
xchg
inc
xchg
cmpsb
cli
sahf
arpl
movsl
cmpsb
enter
js
mov
dec
jnp
push
pop
loopne
push
testb
out
lcall
xor
out
mov
faddl
sbb
cmp
repz
inc
push
pop
iret
repz
outsb
adcb
idivl
lock
or
push
ds
repz
dec
pop
jb
mov
int3
out
push
stos
jns
out
adc
cmp
jns
out
jbe
test
jns
jge
into
call
sbb
out
sahf
out
ds
pop
insb
xor
rcrb
add
jo
imul
cmp
xor
push
lea
roll
scas
mov
mov
push
push
mov
cmp
out
dec
sbb
mov
mov
jl
add
push
clc
mov
adc
dec
mov
mov
add
lcall
clc
mov
cmp
or
add
test
adc
adc
iret
repz
push
adc
xchg
sbb
sbb
sahf
out
lcall
sahf
imul
repz
out
sahf
pop
mov
and
and
jns
out
cmpb
sbb
repz
jp
cmp
inc
adc
out
call
inc
dec
inc
pop
inc
fs
xchg
mov
outsl
mov
fs
int3
and
movsb
test
mov
push
add
repz
repz
cmp
adc
out
lcall
fstpl
ror
enter
sahf
out
mov
out
sahf
out
pushf
cwtl
xchg
nop
sahf
out
sahf
mov
jns
out
je
insb
push
out
pop
pop
push
push
sahf
out
sahf
dec
dec
inc
inc
cmp
jns
out
xor
sub
adc
xor
out
add
nop
fmul
iret
repz
test
push
out
ds
pusha
jns
out
push
dec
inc
xor
repz
out
cld
mov
shlb
mov
or
ret
out
sahf
int3
test
push
xor
jg
out
mov
push
lock
mov
test
adc
sub
push
push
xchg
or
mov
decl
aaa
xor
push
push
add
and
xor
xor
test
aam
push
mov
sbb
inc
aaa
shlb
add
pop
jbe
mov
lahf
cmp
jnp
jo
mov
fistpl
push
and
aas
pop
mov
xchg
pop
add
and
iret
xlat
push
in
push
jmp
mov
inc
add
mov
iret
test
mov
mov
jg
pop
cmpb
fwait
int
jo
pop
shll
jbe
add
imul
mov
mov
mov
enter
push
aas
das
fs
dec
andb
xor
fadd
aaa
inc
pop
xchg
sbb
out
dec
xchg
xchg
adc
inc
jo
pop
scas
inc
fistps
inc
sarb
fldcw
jbe
lock
inc
jg
mov
dec
pop
xor
aas
pop
xor
daa
sti
push
int3
push
or
mov
loop
xor
clc
push
adc
ljmp
sbb
fisttps
mov
add
movnti
imul
inc
mov
shll
inc
mov
pushf
add
jbe
push
xor
ret
insb
pop
fisttpl
mov
push
cmp
pop
stos
outsb
cs
outsb
inc
mov
adc
inc
outsl
ds
outsl
gs
subps
data16
or
je
shlb
lock
test
fsubl
jnp
mov
cld
adcb
xorb
inc
dec
test
mov
notb
imul
outsl
and
insb
add
dec
add
sbb
push
and
add
lret
add
add
movsl
adc
dec
push
xlat
jae
lds
arpl
and
aas
adc
or
pop
arpl
pop
stos
int
sub
mov
sub
faddl
add
addb
gs
pop
sub
mov
push
mov
ja
test
xchg
or
andl
push
imul
sub
sbb
mov
xchg
xor
push
sub
pop
and
mov
sbb
arpl
add
jae
movb
mov
addr16
sbb
out
mov
push
subb
pop
mov
roll
arpl
cmp
or
sbb
add
ja
adc
outsl
push
test
mov
popa
sub
mov
ficompl
xor
xor
pop
inc
xchg
movsb
xchg
jns
daa
adc
pushf
cwtl
xchg
out
sahf
out
mov
sahf
push
inc
inc
repz
repz
xor
sub
repz
sub
sbb
adc
mov
cmp
cld
xchg
hlt
xchg
in
push
cmp
repz
enter
cmp
rep
test
mov
xchg
mov
push
insb
push
fs
fdivp
cmp
push
dec
mov
push
mov
adc
in
xchg
push
enter
repz
cmp
cwtl
nop
mov
sahf
out
push
imul
adc
lock
loopne
jns
out
mov
xchg
jno
insb
pop
outsl
pusha
dec
add
out
pop
xchg
mov
outsl
or
push
cwtl
inc
xor
mov
neg
mov
stos
or
inc
and
add
jb
stos
mov
sub
dec
push
pop
mov
loope
cs
clc
mov
in
mov
pop
enter
loopne
add
lcall
xchg
or
mov
mov
inc
aas
fnsave
pop
mov
aas
xchg
and
and
add
leave
mov
add
or
sbb
fcoml
xor
inc
xor
rcr
xor
xor
cmpsb
dec
pushl
cmp
ss
ss
nop
ss
mov
mov
ljmp
mov
xorl
aaa
adc
sbb
add
cmp
mov
push
cmp
cmp
ja
xchg
adc
mov
lret
cmp
cmp
outsb
ss
cmp
cmp
dec
inc
jnp
cmpl
adc
xor
cmp
cmp
mov
mov
ds
ds
fdiv
call
ds
ds
ds
aas
pop
aas
and
sub
xor
aaa
jg
or
into
push
data16
jbe
jnp
andl
movsb
aas
mov
sarl
div
dec
add
paddd
lahf
push
xor
jl
xchg
cmpsb
mov
xor
mov
xor
sub
xor
push
inc
xor
mov
mov
xor
xor
add
or
jecxz
sbb
xor
cmp
xor
inc
rorb
sbb
pushl
ret
clc
xor
xor
xor
xor
xor
inc
sbb
pushl
xor
xor
xor
xor
xor
dec
mov
and
call
test
lods
ss
pushl
sbb
xchg
mov
add
sub
das
cmp
jno
mov
cmp
pop
cmp
add
mov
cmp
xor
xor
cmp
cmp
cmp
movb
pop
cmp
pop
xor
cmp
shlb
roll
inc
fimuls
outsb
cmp
idivb
mov
cmp
cmp
cmp
dec
push
xor
add
cmp
cmp
cmp
das
push
mov
iret
cmp
cld
cmp
push
ds
ds
sbb
xchg
cs
call
add
loope
push
xor
xor
xor
xor
push
xor
dec
xor
outsl
xor
xor
xor
xor
xor
inc
pushl
xor
xor
outsb
xor
loopne
repnz
dec
ss
bound
xorl
cmp
ret
ss
ss
or
ss
jg
mov
clc
ss
ss
aaa
or
push
xor
push
sbb
aaa
cmp
inc
aaa
addr16
adc
dec
adc
push
add
push
cmp
aaa
mov
sbb
pop
cmpsb
mov
mov
cmp
or
cmp
cmp
cmp
cmp
pusha
cld
cmp
and
es
cmp
cmp
call
push
cmp
jle
xchg
mov
xchg
ret
clc
sub
dec
lahf
cmp
sbb
ret
push
add
cmp
cmp
cmp
cmp
cmp
cmp
push
sub
je
fs
cltd
xor
jecxz
and
sub
mov
stos
dec
aas
outsb
inc
cmpl
adc
clc
mov
dec
fmull
cmp
xor
into
xor
add
jbe
jp
xor
xor
icebp
inc
pushl
lock
xor
xor
jo
in
pop
xor
xor
ret
clc
out
xchg
or
cmp
insb
sbb
aaa
pop
and
xor
xor
adc
push
jecxz
bound
push
ss
arpl
stos
add
ss
ss
sbb
pusha
and
outsb
adc
jne
jle
clc
clc
and
or
sbb
sub
pop
in
cmp
cmp
cmp
mov
aas
cld
cmp
cmp
cmp
aaa
or
cmp
cmp
jno
stos
dec
cmp
arpl
outsb
aad
jecxz
ret
fnstsw
fildll
pusha
inc
out
ds
or
cmp
lret
mov
icebp
insl
adc
fbstp
divb
data16
clc
ljmp
xor
xor
xor
xor
xor
sbb
movsb
xor
xor
xor
xor
decl
jg
xchg
xor
xor
xlat
xor
ja
mov
pushf
ss
mov
sub
lds
sbb
into
mov
xor
inc
adc
cmp
pop
cmp
mov
lcall
divb
cmp
xor
mov
imul
mov
cltd
fs
ds
aas
lods
cmp
loopne
sbb
mov
mov
cld
xor
sub
outsb
sbb
sub
int3
cli
cmp
cmp
dec
cmp
pop
cmp
sti
and
xchg
outsl
cmp
xor
sub
xor
xor
xchg
idivb
js
and
or
pop
dec
es
xor
popa
xor
jp
add
or
pop
pusha
out
dec
pop
divb
adc
sbb
mov
ljmp
mov
inc
sbb
ret
jle
xor
rorl
jp
jb
cmp
ret
bound
lods
push
adc
mov
mov
mov
cld
cmp
push
int3
xor
pusha
adc
mov
jb
push
sub
push
or
sbb
add
xchg
loopne
inc
sbb
fsubrp
xor
jg
and
or
or
adc
adc
sbb
sbb
add
jbe
xor
mov
xor
das
mov
xor
push
pusha
xor
xor
push
sub
je
jl
sar
lret
mov
mov
nop
xor
js
mov
xchg
mov
int
enter
mov
inc
sarb
fdivs
fdivs
sub
jae
jo
je
js
nop
ret
dec
sbb
jle
cmpsl
xchg
jp
cmp
push
xor
fs
outsl
js
outsb
jo
bound
sarb
rol
add
lret
addl
rcr
jb
pop
daa
jecxz
mov
loopne
or
adc
sbb
sub
fs
pop
inc
push
insb
xor
xor
xor
xor
xor
jmp
add
sub
ficoml
pop
xor
xorb
xchg
sbb
lods
xchg
xor
xor
incl
pop
adc
fsubrl
in
call
xor
and
inc
add
loop
sti
jae
push
adc
sub
xor
pop
mov
pop
aam
xor
xor
xor
xor
push
xor
pop
xor
paddd
sbb
fs
jo
je
js
jl
andb
xor
push
scas
pushf
xor
xor
xor
xor
xor
xor
xor
add
xor
int3
fidivrl
inc
mov
xor
mov
adc
jp
sub
fnsave
push
aaa
jecxz
xor
sbb
subb
cmp
daa
mov
mov
add
incl
push
incl
addb
cmp
lock
out
das
rcrl
inc
mov
sbb
ret
xchg
inc
mov
sub
daa
mov
jne
nop
mov
mul
inc
and
fnstcw
call
ljmp
ss
mov
rep
fsubp
test
pop
loopne
xlat
dec
jns
or
inc
or
lcall
sbb
and
add
dec
adc
push
ljmp
fwait
add
jne
add
adc
push
adc
pop
in
mov
fnsave
jmp
push
jnp
adc
pop
cmpsl
xor
loopne
pushl
inc
inc
mov
pop
pusha
add
lods
in
jl
sbb
mov
pop
push
mov
jl
xor
mov
das
push
enter
xor
iret
push
pop
aas
pop
lock
sub
data16
dec
adc
mov
push
jmp
cwtl
cmp
jg
mov
aas
popa
jbe
bnd
imul
xor
repnz
push
mov
jmp
icebp
out
pop
loopne
fisubl
ret
jg
arpl
mov
xor
push
clc
call
pop
iret
addr16
xchg
push
xor
lret
sub
dec
xor
in
mov
fmul
jno
xor
dec
mov
push
decb
lret
mov
or
outsb
repz
sahf
and
popf
arpl
xchg
enter
loop
arpl
loopne
int3
add
fs
ljmp
jns
xchg
daa
xchg
sub
es
xor
inc
cmovp
adc
pushl
call
jl
inc
xchg
and
add
sub
adc
leave
xchg
ljmp
jle
jmp
idivl
notb
loope
inc
or
arpl
xchg
pushf
fcoml
xchg
xchg
inc
xchg
fcomip
js
in
cwtl
pop
cmp
and
sti
inc
inc
lock
push
push
pop
fldt
decl
jge
fdivrl
or
sub
dec
call
jae
call
testb
add
mov
jecxz
test
mov
aad
enter
mov
push
xchg
pop
mov
mov
mov
and
and
popf
aad
int
lds
sub
std
das
clc
mov
in
cwtl
and
scas
imul
cwtl
ljmp
jle
push
xchg
push
ja
mov
nop
jecxz
int
sbb
loop
pushl
fdivp
ja
inc
cmp
xor
aaa
mov
xor
fisubl
ret
insl
xchg
xor
out
incl
popa
push
sarl
dec
jl
scas
hlt
pop
sbb
popa
lcall
popf
dec
loop
cmp
test
bound
insb
cmc
lahf
loopne
jae
cwtl
and
and
push
pop
cmp
jge
ljmp
xor
jnp
scas
mov
xor
and
jl
dec
outsl
pop
jge
sbb
jmp
xchg
push
mov
and
adc
adc
int3
sbb
ljmp
lret
mov
sub
add
js
daa
pushf
add
insb
dec
sbb
decl
xor
shl
cmpb
das
pushf
insb
dec
jmp
aad
enter
dec
call
scas
mov
lods
jg
add
imul
sub
dec
jle
mov
in
xor
in
roll
push
cpuid
aad
aad
xor
inc
fcom
loope
fwait
jmp
sarl
fcomps
inc
out
dec
inc
mov
cli
stc
xor
pushl
ja
cmpsl
lods
lods
inc
jecxz
push
adcb
pop
cmc
jno
cltd
cmp
outsb
sti
data16
lods
or
lcall
fcom
into
sub
in
pop
or
loopne
out
int3
mov
dec
inc
sub
mov
fisubl
ss
cmc
mov
pushl
outsl
arpl
imul
push
sbb
sbb
xor
xchg
sbb
daa
cmp
push
adc
mov
cwtl
clc
test
and
fcmovbe
inc
fcmove
sbb
popa
stc
in
jp
sub
push
mov
pop
in
jne
sbb
pushl
or
sub
das
jl
sbb
lock
xchg
lret
ja
rcll
mov
dec
popa
repnz
sahf
shr
xor
mov
pop
shll
js
jnp
fmulp
aaa
sub
rcrb
cmp
dec
out
and
loop
add
add
dec
mov
sbb
cs
xchg
xor
sbb
outsl
int3
mov
and
sbb
ljmp
mov
fwait
push
cmp
test
mov
mov
fwait
imul
scas
adc
insb
push
mov
jmp
out
sub
and
and
cltd
jecxz
movsb
in
push
mov
fdivrl
lret
mov
in
mov
outsb
lods
cmp
or
pop
cmpb
in
xchg
push
xor
ljmp
sahf
sbb
xchg
sbb
sub
jb
aaa
pop
dec
adc
mov
decl
lock
aas
adc
sbb
jmp
rorb
or
xchg
incl
and
popl
sar
mov
jp
stc
cmpsb
pop
ds
sahf
in
scas
sub
mov
push
aas
sub
enter
and
ret
add
push
in
outsl
std
shrl
decl
fldl
in
adc
sti
andl
pop
sahf
cmp
decl
pop
mov
movsb
cmp
mov
sub
push
adc
ljmp
int3
out
jmp
mov
and
or
clc
lods
mov
incl
daa
dec
sbb
adc
xlat
jo
out
scas
lahf
test
cli
or
xchg
jae
cmpsl
dec
fidivrl
insl
mov
push
div
in
das
add
cli
jmp
es
adc
jecxz
xchg
adc
mov
ds
xor
ret
cmp
cmc
outsl
pop
loopne
scas
fisubrl
jns
xor
add
sub
ljmp
hlt
out
mov
lods
pop
sti
mov
addr16
jg
push
roll
out
lock
fsubl
fstl
lods
cli
pop
and
jbe
iret
enter
in
test
or
dec
leave
cli
add
push
sbb
dec
sbb
xchg
scas
test
jmp
cmp
pop
fdiv
and
ficoms
je
mov
inc
jg
lock
std
dec
subb
mov
bound
sbb
sbb
lcall
nop
sub
and
adc
mov
inc
inc
in
push
pop
sti
es
je
loope
stos
inc
fcmovne
xlat
les
mov
push
xchg
xchg
lcall
and
cmp
int
pushl
test
jbe
movsb
mov
xchg
mov
add
mov
mov
stos
mov
push
add
test
loopne
loop
push
test
xor
jp
jg
cmp
or
xchg
aaa
pop
je
fsubr
cli
mov
or
adc
movsb
in
in
das
clc
jmp
js
in
fcmovnbe
dec
xor
pop
shrl
cmp
xor
mov
cmp
out
mov
jge
in
lods
dec
gs
psubd
jmp
sub
sbbb
and
cld
cmp
add
sar
mov
add
call
test
cmpsl
lret
shll
dec
repz
sbbl
push
add
sahf
xor
sbb
cmp
movsb
pop
lcall
in
xchg
lret
sar
jmp
or
mov
lret
imul
mov
jbe
fwait
shll
or
clc
stc
int
lret
clc
stos
scas
push
ljmp
mov
hlt
jmp
not
ss
je
cmp
sbb
lret
cs
push
jg
jl
mov
inc
fsubp
push
jb
daa
pop
sub
cmp
or
push
xor
jecxz
ds
test
inc
jg
lcall
test
cmp
ret
sbb
es
ja
cmp
or
mov
aam
adc
lret
aaa
nop
push
mov
jp
sbb
loope
lcall
jg
rcrb
jns
lds
sbb
bound
loop
movsl
testl
add
pop
popa
xor
fdecstp
outsb
loopne
xor
enter
mov
js
fldenv
push
rcr
aaa
and
movsl
mov
cmp
shl
cmp
mov
in
les
sbb
pop
pop
in
call
push
stc
fcoml
call
jp
xchg
jb
les
xchg
mov
clc
aam
and
outsl
lock
jmp
xchg
repnz
sub
xchg
stc
sti
outsl
call
sub
into
shlb
in
je
aaa
inc
adc
push
mov
dec
mov
daa
mov
movsb
add
lds
jl
divl
out
scas
inc
add
daa
fdivrs
or
leave
loop
fsts
push
mov
pop
jecxz
and
add
fsubrp
cltd
scas
push
sbb
jmp
nop
xchg
in
push
pop
xchg
clc
pushl
push
inc
shr
out
pop
out
test
lcall
push
ds
popa
fcomip
push
test
xchg
and
inc
push
enter
and
cmp
jecxz
test
mov
push
incl
fwait
xchg
or
push
jbe
mov
inc
pushf
xchg
hlt
cmc
rclb
jmp
fbstp
pusha
lock
sbb
push
lret
lods
sbb
es
lock
fbld
shrb
call
mov
popa
gs
idivb
incl
jp
js
push
pop
jbe
into
xor
cmp
jg
rcrl
mov
sub
mov
andl
jmp
js
xchg
mov
add
ret
call
test
sbb
mov
jb
sub
dec
cmpsb
sbb
sbb
cmpsl
fdiv
cs
scas
jnp
dec
mov
cmpl
jb
sub
add
pop
cmpsb
ret
xlat
daa
xchg
clc
ja
das
lods
clc
inc
sbb
aam
adc
hlt
fs
and
enter
inc
and
cli
insb
xchg
pop
popf
jecxz
inc
sbb
dec
mov
lcall
xor
mov
inc
addr16
pop
mov
dec
jae
in
incb
rdpmc
aad
sub
inc
cmp
divb
rorl
decl
movsb
test
test
sub
mov
inc
push
cmpsl
mov
jbe
scas
insb
cld
decl
pushf
clc
cmpsb
jl
jp
imull
pop
lea
add
jg
pop
adc
lahf
inc
jp
std
xchg
je
pop
cmpsl
xchg
mov
les
inc
add
test
inc
mov
mov
decl
dec
adc
push
push
shl
popa
movsb
shlb
jmp
flds
push
jge
cmp
ljmp
sbb
jge
pushf
dec
xor
mov
insl
scas
xchg
dec
xor
test
cld
lcall
mov
movsl
jg
mov
pop
hlt
xchg
cltd
sub
and
lcall
jp
insb
or
insb
ss
push
xchg
leave
and
aas
movsl
pop
mov
lcall
addr16
shll
repz
mov
sub
xor
jl
cltd
pop
jl
adc
mov
out
push
ljmp
sti
in
clc
andl
pop
add
jle
int3
leave
pop
cwtl
int3
xor
xchg
push
je
mov
xchg
lret
xchg
dec
sarb
jle
icebp
pop
in
in
mov
outsl
push
leave
idiv
ljmp
mov
adc
movsl
fdivp
or
shll
es
inc
add
jl
jnp
mov
fwait
xor
mov
push
and
movl
call
cmc
jmp
mov
fcomps
cli
mov
shrb
sarl
lahf
decl
adc
jecxz
lret
scas
fnstcw
inc
mov
dec
jle
dec
iret
scas
aam
xlat
inc
jp
in
test
mov
call
inc
scas
sahf
out
jnp
jl
loop
in
int
pop
stos
jo
repnz
js
xorb
test
or
leave
mov
popf
call
sub
aam
decl
lcall
pushf
stos
jbe
inc
mov
or
mov
push
dec
xchg
pop
sar
lcall
adc
loopne
sbb
sub
mov
out
or
xchg
and
aas
outsb
adc
xchg
sbb
pusha
push
mov
xchg
lahf
std
lock
dec
clc
push
xchg
jne
dec
in
and
leave
fildll
lods
push
dec
ret
pushl
in
sbb
sub
sub
addr16
add
pushl
mov
inc
dec
out
cmc
push
ja
dec
aas
jmp
jle
push
xor
adc
cltd
add
dec
insb
push
add
push
outsl
push
and
mov
push
cld
jns
fisubrs
fnsave
cmp
pop
inc
pop
in
mov
inc
rcrb
inc
pushl
adc
and
mov
enter
sub
inc
add
rcrb
jp
mov
xchg
mov
ja
inc
add
loope
cmpsb
inc
xchg
and
jmp
fldcw
sbb
jp
sbb
push
lcall
sbb
stos
clc
xor
jo
mov
and
push
adcl
popa
pop
push
xchg
mov
lods
je
push
jns
test
lock
xchg
jl
adc
rcll
xchg
in
mov
mov
xorb
push
or
jb
lcall
jnp
movsl
push
movsb
xchg
push
aaa
pop
adc
xchg
arpl
push
sub
push
fldl
out
xor
popf
cs
rcrl
out
cmp
in
jo
dec
push
mov
pop
icebp
ljmp
inc
fwait
mov
sub
pop
mov
ljmp
gs
orl
ljmp
pop
mov
push
dec
test
dec
int
in
fwait
lods
mov
sub
jne
in
movsb
ret
mov
decl
faddl
imul
xor
mov
fs
and
in
and
ret
jno
out
cli
jmp
push
mov
cwtl
dec
sub
inc
imul
shlb
iret
mov
cs
lock
inc
lea
jbe
mov
xor
pushl
fdiv
add
ljmp
lods
sub
icebp
pop
jmp
pop
imul
mov
sbb
in
dec
fcoms
js
sub
pushf
call
and
adc
out
jge
sub
cmp
rclb
cmp
jbe
call
jge
sti
cmp
and
popa
mov
inc
add
arpl
add
jmp
popa
mov
pop
jl
outsl
daa
decb
fbstp
outsl
adc
jl
insl
cld
xchg
scas
idiv
ljmp
repz
adc
dec
pushf
xor
rcrb
fs
cmp
call
mov
fsubr
andps
add
mov
lcall
gs
jecxz
shrl
jns
in
sub
add
imul
lcall
or
cld
int3
mov
loope
sti
adc
add
cli
mov
inc
pusha
fld
shl
sti
movsb
lret
mov
sub
jge
in
mov
pop
sbb
iret
push
sahf
adc
sub
fcom
mov
jne
iret
movsb
mov
xchg
ret
in
popf
mov
cmp
xchg
aas
ljmp
cmp
jo
hlt
xor
fists
jo
pushf
mov
sub
jg
inc
inc
fwait
jl
xchg
or
mov
mov
cmc
lock
lcall
out
cmp
cmp
mov
insl
mov
pop
sbb
and
ljmp
insb
xor
inc
push
mov
cmp
jae
jb
jp
ja
xor
call
jmp
std
mov
stos
or
sbb
insb
jmp
mov
or
js
cmp
sbb
xlat
pushf
or
mov
mov
xlat
testl
call
cmp
scas
inc
sbb
push
pop
icebp
xlat
es
popa
pushl
sti
aad
jg
sub
fidivl
fwait
pop
jae
test
lods
addb
das
mov
enter
test
cmpsb
push
or
test
test
jg
lcall
pop
cmp
pusha
in
std
psubb
sbb
inc
js
jns
fstpt
pop
sub
les
or
xchg
imul
xor
xchg
add
ljmp
or
mov
xchg
mov
mov
rorl
lcall
mov
cmp
jbe
add
mov
loope
push
jge
imul
jle
in
xor
jg
xchg
xchg
cmp
call
mov
push
les
gs
bound
pop
push
imul
call
cmp
or
out
jae
lret
clc
adc
add
out
cmp
in
xchg
sbb
push
aas
adc
cmp
add
test
mov
out
fs
and
lret
das
sbb
into
push
subl
decl
lcall
add
xlat
shr
aas
mov
arpl
cmp
outsl
push
mov
pop
or
jmp
mov
sbb
and
fcomps
mov
cmp
ret
jmp
pop
jb
sbb
mov
jne
pusha
and
fstpt
mov
mov
stc
add
add
or
adc
decl
inc
fwait
jno
outsl
mov
enter
sbb
pop
push
daa
dec
and
or
xor
dec
sub
jbe
cmp
fbld
cs
in
sub
sar
and
mov
pop
es
adc
xchg
icebp
incl
addb
lahf
pusha
repz
mov
pop
mov
mov
call
and
add
cld
repz
mov
or
lods
and
clc
arpl
daa
ja
dec
clc
xor
ljmp
mov
jno
lret
out
mov
outsb
shll
pop
adc
inc
dec
clc
into
add
or
mov
xchg
movsl
test
mov
add
cmp
push
add
sahf
inc
jb
in
jae
dec
out
or
pushl
sbb
and
push
mov
pop
das
push
xchg
xor
rolb
loope
andb
jmp
pushf
scas
int3
mov
xor
push
adc
sub
repnz
incl
mov
outsb
lds
jo
arpl
inc
dec
add
sti
inc
mov
ret
jae
xchg
adc
jns
fcomip
test
mov
ret
jne
cltd
int3
out
mov
xchg
pop
sbb
repz
ret
incl
cld
jns
leave
int3
push
sarl
fsts
scas
int
je
mov
add
cmp
sub
push
pop
loopne
lret
mov
es
push
sahf
ja
sbb
mov
call
push
je
out
lock
mov
scas
or
sbb
mov
adc
aas
lret
cmc
pushl
xchg
push
sub
mov
xor
cmp
jnp
mov
repz
pop
mov
call
sbb
nop
jns
dec
dec
dec
cmp
sbb
cmp
ljmp
out
jns
fstps
je
sbb
sub
ds
fsubrl
clc
nop
xor
mov
ljmp
sbb
insb
aam
push
into
outsl
imul
bound
insb
test
pushl
or
fnstenv
xor
push
nop
or
xchg
fdivs
stc
mov
idiv
push
pusha
sbb
mov
push
jb
xchg
or
call
loop
cmc
insl
push
dec
dec
ret
das
ficomps
bound
call
pusha
xor
fs
call
jp
jne
inc
outsb
pop
dec
in
iret
jmp
inc
sbb
xchg
or
mov
inc
fcmovbe
rorl
int3
inc
decl
mov
adc
mov
cmp
test
xchg
inc
xlat
popf
fsubp
fs
cld
shll
push
mov
arpl
dec
sbb
leave
ljmp
pushw
pop
sub
jg
out
jo
loope
inc
ljmp
call
cltd
icebp
xor
lcall
shlb
pop
sub
sbb
adc
pop
add
out
xchg
cmp
or
incl
ficoms
cmp
addb
ljmp
decl
outsb
jnp
pop
mov
and
xlat
leave
sahf
jae
mov
das
or
cmc
js
decl
lahf
inc
mov
xor
scas
mov
sub
inc
mov
int
insl
ss
adc
das
cli
pushl
lcall
add
cs
xchg
imul
decl
rep
lock
push
add
cld
mov
mov
lcall
push
imul
jmp
ja
movswl
push
ds
jns
push
ficoml
mov
mov
sub
and
ret
pushl
push
insl
je
xchg
sti
or
idiv
inc
test
sti
jge
inc
pop
pop
xor
dec
shlb
jmp
or
pop
gs
fsubs
sahf
pushf
pushf
xchg
dec
outsl
nop
inc
push
push
pop
push
sub
lcall
cli
icebp
xchg
xor
mov
inc
pop
push
popf
xor
add
ficoml
mov
movsl
add
ljmp
jo
push
xchg
mov
inc
lret
cmc
out
loope
jae
test
decl
adc
rcrl
push
mov
outsl
adc
lea
mov
mov
ljmp
popa
repz
xor
mov
jg
push
repnz
cmp
iret
loope
or
xchg
mov
push
and
pop
insl
fildll
ss
fisttps
adc
cmp
jg
je
popa
iret
je
popa
imul
cmp
ljmp
negb
lcall
mov
in
mov
je
fdivl
pop
add
lcall
movsb
loop
mov
sub
push
lock
and
xchg
repz
out
and
fs
stos
or
es
add
hlt
scas
mov
in
dec
pop
scas
jl
sbb
lcall
ret
pop
cmc
add
test
or
xor
jle
push
pop
jno
mov
push
decl
adc
mov
aaa
bound
pop
sbb
add
sbb
rcr
xor
fmul
movsb
leave
jnp
push
ljmp
call
cmp
dec
movb
shlb
cmp
push
dec
or
jg
push
inc
test
in
ret
sub
out
clc
mov
idivb
sbb
lcall
jo
adc
xchg
lods
lock
mov
cmpsb
cmpsb
pusha
pop
lods
adc
ja
lods
iret
and
je
ljmp
lcall
clc
jmp
sbb
inc
mov
and
mov
loope
mov
lock
mov
stos
sub
divb
xor
cltd
xchg
ficoms
lret
incl
in
dec
popl
outsl
pop
push
test
loop
imull
jmp
dec
fsqrt
aas
ljmp
mov
push
jle
arpl
xchg
mov
in
cmp
add
inc
mov
cltd
repz
and
mov
ss
incl
scas
bound
outsb
add
fisubrl
lahf
cmp
rorb
aam
incl
pop
cltd
and
mov
fmull
cwtl
addr16
ljmp
sub
or
pop
fsts
jb
pop
lds
leave
movsl
dec
jbe
jmp
mov
pushl
shlb
push
add
in
adc
cwtl
and
or
stos
xchg
inc
push
das
clc
pop
std
and
test
mov
jle
adc
dec
imul
and
mov
decl
fnstcw
loop
cltd
sub
stos
loope
js
mov
pop
or
in
sub
dec
push
jae
iret
sbb
shrl
decb
mov
mov
cmpsb
or
fnsave
mov
inc
mov
mov
int3
mov
cmp
mov
inc
mov
pushl
hlt
push
fs
jle
adc
xchg
push
mov
push
outsl
cmpsb
push
imul
jp
mov
nop
stc
data16
pushl
std
or
lods
push
and
pop
je
fimuls
jne
push
xchg
decl
xchg
and
inc
fdivp
add
mov
call
push
mov
cmpl
push
add
popa
mov
fadds
decl
jno
or
and
xchg
or
sub
je
pop
or
shrl
mov
lods
imul
xor
mov
jmp
jb
adc
pop
xchg
int3
push
sbb
xor
shrl
dec
lea
lock
mov
sbb
push
jmp
push
dec
roll
test
testb
xor
js
mov
push
cmp
aam
dec
das
dec
ljmp
cli
out
mov
or
loope
cmpsb
pop
jmp
mov
add
add
testb
int3
popa
lcall
ficomps
or
fadds
sbb
cli
lds
es
cmp
jmp
mov
jmp
insb
out
xchg
mov
stos
mov
inc
call
pop
out
sub
outsb
mov
fists
sbb
adc
lcall
mov
pop
gs
fxch
mov
or
cli
inc
hlt
call
in
in
xor
xchg
testl
jg
push
jbe
lcall
fnsave
mov
into
dec
fnstcw
test
jge
jnp
insb
dec
fisttps
jg
outsb
inc
int3
push
fdivs
test
sti
pop
out
jb
inc
adc
xor
loope
hlt
out
loop
sub
lahf
xor
push
ds
loopne
adc
cli
testb
pushf
mov
pop
ljmp
ljmp
sub
dec
pop
or
repz
pop
jmp
dec
mov
int
lcall
dec
inc
cmc
dec
je
push
jae
out
xchg
mov
aas
xor
inc
lods
negb
aas
rorl
lcall
out
jo
icebp
orl
stos
clc
js
test
pop
sbb
or
in
cs
fldt
call
cld
dec
les
jo
lret
cld
fldt
sub
lahf
xchg
sahf
push
xor
into
stos
lods
and
ljmp
test
hlt
mov
mov
int3
ss
rcr
sbb
stc
fisubrl
bound
cld
call
mov
gs
mov
and
or
gs
call
gs
mov
call
sbb
mov
inc
push
mov
test
decl
push
into
push
cmp
pop
or
xor
in
push
jp
jle
pop
js
int
mov
or
fnsetpm(287
insb
mov
ss
add
ljmp
jmp
jecxz
mov
addr16
inc
or
ret
imul
lods
shl
add
mov
int
xchg
js
lods
push
in
sbb
or
xor
jcxz
rcl
xor
mov
or
and
dec
mov
and
test
scas
pop
ret
incl
mov
movsl
add
cmp
xorb
jo
cwtl
jg
test
jnp
jmp
jle
shrl
cmp
test
xor
push
xorb
add
test
lcall
lcall
jl
mov
cmpsb
xor
les
or
hlt
inc
shrl
call
push
push
sbbb
jbe
pop
mov
incl
or
ljmp
rcll
movsb
and
decl
ja
mov
sub
test
cmp
repz
rcll
fdivrs
mov
sbb
sub
clc
xchg
or
cs
and
aas
dec
addr16
adc
incl
iret
jecxz
or
fldl
loopne
or
jl
test
std
and
or
decl
pushf
lock
ret
lea
adc
mov
inc
jl
dec
scas
jge
jo
xor
xchg
repnz
mov
pop
test
push
and
xchg
cmp
decl
or
ja
stos
and
sub
inc
shlb
jne
inc
sub
sbbl
stos
jge
in
test
decl
adc
xchg
adc
mov
cli
push
test
ret
enter
pop
push
arpl
jmp
pushl
sub
jbe
popf
fld
push
mull
es
mov
hlt
cs
andl
sbb
ds
and
mov
out
in
arpl
jns
inc
mov
mov
adc
lcall
pop
cmc
leave
ljmp
leave
shl
in
aas
mov
pusha
cmp
popfw
xchg
sbb
popa
fimull
mov
sbb
cmp
iret
dec
adc
and
xor
bound
sub
loop
cmp
incl
fsubl
push
pusha
loop
andb
inc
mov
adc
fs
daa
push
xchg
jg
lcall
add
stos
sub
rcl
push
ljmp
gs
mov
push
insl
loopne
incl
pop
pop
push
adcl
lock
inc
mov
lcall
ret
lret
out
inc
arpl
mov
lcall
mov
rcrb
jnp
jg
mov
mov
inc
push
dec
dec
mov
sti
fisubrs
mov
mov
mov
adc
or
lcall
mov
loop
sbb
ljmp
gs
sub
imul
inc
mov
sub
jge
pop
sti
sbb
xchg
mov
sbb
sub
decb
mov
jnp
pop
mov
push
push
and
out
jno
mov
lret
jae
lcall
repz
or
inc
lods
movsl
lock
arpl
add
pop
mov
xchg
xchg
inc
jg
je
dec
ljmp
pushf
dec
jne
jnp
jne
mov
mov
mov
push
sbb
pushf
push
scas
sub
outsb
gs
dec
push
xchg
cmp
shll
lcall
dec
and
pop
lret
movsl
and
xchg
cmpsb
push
fsub
scas
rolb
pusha
jg
test
loop
mov
sbb
lea
arpl
adc
pusha
jmp
cmp
sub
aas
add
mov
mov
mov
addl
inc
fiaddl
arpl
xchg
out
jg
and
incl
jno
test
mov
loopne
jno
js
fsts
lds
jns
call
cmpsl
leave
or
adc
rclb
ret
sub
and
cmp
js
xor
pop
std
loope
jbe
add
outsl
dec
sub
in
sub
cmp
cmc
sub
or
clc
incl
gs
sub
or
jnp
in
mov
data16
sahf
push
mov
mov
pop
mov
jne
mov
sub
ja
clc
pushl
xor
jo
cmpb
mov
jns
sar
popa
lock
std
insl
subb
sub
fwait
mov
xchg
inc
pop
scas
pop
pop
xor
negb
jnp
mov
jg
sub
cmpsl
adc
scas
sub
mov
mov
jns
xchg
enter
incl
fwait
push
addl
dec
mov
rolb
cmpsl
divl
xchg
repz
pop
in
inc
int
pushl
dec
repnz
push
loop
jb
out
add
decl
mov
std
out
mov
in
mov
sub
lret
fsubrl
insl
imul
mov
fs
inc
mov
pusha
add
cltd
inc
shll
daa
cli
addb
scas
repz
mov
shl
jo
ss
pop
out
xorb
in
lods
adcl
arpl
in
mov
test
fnstenv
sbb
dec
push
mov
push
xchg
xchg
dec
lret
rorb
jno
pushl
ret
push
movsb
loope
cmp
outsb
push
mov
push
scas
dec
lock
pop
or
push
int3
enter
pushl
int3
pop
pop
fmul
pop
inc
rcr
mov
mov
jg
pushf
stc
jecxz
mov
jmp
mov
and
pushf
push
cltd
ja
xor
pop
jl
mov
inc
fs
xchg
cmp
cmc
decl
in
cld
mov
dec
cmp
cmp
ss
ror
incl
outsb
sti
add
fucomip
testb
fists
mov
fildll
mov
jmp
inc
sbb
mov
push
movsl
ret
inc
into
lea
jmp
inc
cltd
fcmovu
jne
mov
or
mov
jp
cld
sbb
mov
lahf
data16
idiv
mov
in
mov
sub
cmp
ret
aam
jno
popa
ficoms
pop
cmp
incl
mov
jne
pop
push
sub
sbb
test
jnp
pushf
mov
pop
inc
icebp
push
and
popa
jnp
add
pop
out
iret
fldcw
push
sub
add
fisttps
xor
push
out
or
mov
pushf
adc
std
adc
ljmp
clc
decl
add
out
dec
jo
mov
jl
loope
outsl
jge
cmp
sbb
dec
scas
insb
push
pop
inc
lods
mov
inc
insb
testb
das
sar
mov
fcmove
subl
mov
and
xchg
push
into
xchg
pushl
pop
scas
jbe
push
ds
sqrtps
jae
lret
test
dec
addr16
fdivl
mov
call
lods
pushf
movsl
shlb
mov
inc
jg
pop
push
push
or
lock
orb
jle
sbb
inc
lea
xchg
adc
jnp
push
mov
cmpsl
pop
push
ret
pop
jne
mov
push
ret
out
xchg
push
xor
lret
xchg
sub
add
jbe
jle
add
in
sbb
pop
rol
pop
cmp
icebp
jmp
jl
pop
jmp
hlt
bound
sub
stc
lock
xchg
push
out
mov
inc
pop
mov
rcl
xor
cmc
decl
cmpsl
aam
mov
lret
pop
pushf
or
xchg
pop
fcoms
ljmp
les
mov
cmp
push
lcall
out
mov
jg
cmpsb
mov
mov
push
xchg
movsl
sbb
out
jns
inc
dec
push
sub
pop
adc
icebp
iret
adc
shrb
out
je
cmp
and
sti
jmp
pop
cli
sub
lds
fisubs
shrb
xchg
push
cmp
sbb
imul
jmp
xchg
orl
repz
pushf
scas
jl
out
push
lods
mov
dec
fistpl
fnstenv
outsb
and
je
jl
and
imulb
push
clc
mov
cli
lret
mov
push
mov
adc
mov
ret
ljmp
or
pop
std
dec
push
mov
mov
not
leave
out
bound
dec
cld
int3
pop
push
dec
cmp
push
add
inc
stos
jne
mov
wrmsr
cmp
add
cs
loop
inc
push
mov
into
mov
rol
xchg
lret
dec
daa
adc
cwtl
push
pop
jb
mov
adc
mov
test
add
xlat
out
popf
outsl
aam
and
jle
ljmp
fbld
iret
ss
addr16
mov
mov
sbb
loop
sbb
sbb
call
mov
jb
fmuls
pop
cmp
sbb
mov
sbb
sbb
out
pop
cmp
fisttpl
stos
clc
insb
test
sahf
mov
sub
ret
mov
incl
sub
jnp
xor
jo
out
jbe
mov
lea
mov
sbb
jmp
dec
and
jg
mov
inc
mov
lcall
std
push
dec
sbb
insb
call
std
imul
in
or
inc
sbb
inc
mov
add
add
inc
sbb
cmp
fildl
imul
sarl
push
out
mov
ret
lea
pushl
int3
xor
jecxz
mov
adc
dec
bsf
or
leave
fimull
call
jle
lods
pand
out
lods
bound
mov
jp
inc
aad
xchg
pop
cmp
ljmp
xchg
xor
adc
iret
stos
mov
in
frstor
cmp
mov
jecxz
popa
cld
cmp
and
and
mov
divb
aam
mov
inc
xlat
mov
dec
data16
aam
jb
lret
inc
loope
mov
icebp
sarl
loop
outsb
pop
ds
add
or
jb
jge
scas
clc
incl
stos
xchg
adc
push
mov
sbb
test
ljmp
out
pushf
ss
stc
repnz
pop
adc
in
push
xchg
icebp
jo
cmp
leave
js
repnz
or
lcall
scas
sub
call
test
addl
mov
push
negb
repnz
adc
and
xor
leave
ja
fabs
faddl
hlt
and
adc
scas
cmc
imul
and
in
lret
cltd
push
fcmovb
jecxz
mov
icebp
sub
test
hlt
lods
mov
jno
pushl
std
sbb
repnz
adcl
les
add
hlt
call
lods
ljmp
dec
outsb
lods
outsl
or
enter
jl
jb
or
fstps
mov
nop
and
loopne
xor
incl
lock
call
dec
dec
mov
into
xor
jg
call
sub
iret
fmull
mov
aas
xchg
mov
mov
push
lahf
addr16
call
jnp
aas
xchg
or
icebp
sub
pop
out
out
mov
push
cli
aam
and
and
dec
pop
call
test
dec
dec
aam
int
cli
push
popa
inc
push
inc
test
or
mov
jae
pop
addb
fildll
sbb
mov
sub
cmpsb
xchg
mov
adc
inc
inc
lods
cmp
push
dec
hlt
es
push
jg
push
or
or
stos
pushf
enter
jmp
mov
push
or
test
add
jg
inc
shr
ljmp
or
incl
pop
pop
pop
pop
enter
adc
cwtl
pusha
sbbl
test
call
dec
outsl
daa
jae
xchg
xchg
mov
inc
jno
cmp
mov
push
stos
pushl
mov
nop
sub
pop
mov
pop
repnz
ljmp
gs
and
lret
cmpsb
and
int3
mov
push
fdiv
lock
pushl
add
cmp
iret
shl
rorb
xor
sbb
push
rcrb
data16
ljmp
cmpsl
sub
pop
inc
cmp
adc
cmp
dec
push
jecxz
and
incl
addr16
push
and
in
xchg
inc
add
ss
mov
dec
cmp
lea
jmp
mov
xrelease
mov
clc
fadd
ds
cwtl
repz
lods
inc
inc
dec
in
ljmp
dec
mov
push
jecxz
push
dec
in
xchg
mov
sbb
cmp
repnz
add
jmp
scas
mov
xor
cltd
xor
lret
test
fistl
ljmp
inc
mov
add
clc
push
fsubrs
cli
inc
mov
add
ss
push
pop
inc
mov
cmp
cld
in
lds
sarb
push
push
sub
shlb
jbe
xchg
les
outsb
pushl
shrb
and
icebp
lahf
lcall
insl
inc
pop
pushf
xchg
jo
push
push
sub
xchg
decl
loope
fdivs
mov
mov
pop
mov
cmp
jl
jp
add
sahf
and
popf
sbb
mov
lcall
jae
and
insb
push
aam
mov
jmp
out
iret
jl
insl
fs
inc
pop
ss
lcall
sahf
call
xchg
adc
mov
lcall
pop
push
aad
inc
std
lcall
xchg
ret
xor
add
leave
sbb
jecxz
xchg
or
fs
pop
cli
repz
insb
adc
outsl
xchg
rcrb
lahf
insl
xlat
xchg
cs
sub
mov
or
mov
into
mov
push
popa
push
dec
sar
aaa
cld
ljmp
test
mov
jno
hlt
lock
cmp
dec
xchg
fstps
mov
push
insl
push
jae
and
sub
js
mov
imul
add
lock
call
loopne
pushf
int3
jge
push
sub
ljmp
push
adc
mov
jge
mov
pop
rol
lret
jo
cltd
mov
push
pop
aas
mov
xor
adc
sti
push
aaa
or
sahf
lock
mov
call
notl
addr16
mov
mov
sub
dec
mov
mov
or
jl
test
fcomip
pop
lcall
arpl
cmp
xchg
aaa
into
jl
scas
test
push
ljmp
xchg
mov
dec
pop
add
leave
sbb
mov
xchg
sub
fwait
or
call
push
ljmp
xchg
xor
repz
xchg
fldt
clc
pop
mov
dec
test
xchg
std
shll
inc
sbb
pop
shll
decl
stc
nop
adc
repnz
inc
or
cmpsl
adc
std
sub
rclb
or
jl
sbb
jne
nop
xchg
imul
push
xchg
lcall
test
and
pushl
xchg
sahf
push
lahf
adc
cmpsl
in
test
out
sbb
aaa
xor
aad
insb
les
ja
ljmp
stc
add
int
daa
ror
cmpsb
sbb
nop
lods
pop
xchg
decl
push
jne
jg
aam
mov
icebp
inc
imul
inc
xchg
mov
cmc
in
mov
adc
lcall
adc
xorps
add
xor
inc
add
call
pop
xor
lea
clc
xor
movsl
mov
cmp
clc
mov
test
or
icebp
xlat
mov
xor
xchg
pop
push
setl
lock
ljmp
les
insl
sbb
inc
std
js
inc
decl
cltd
outsl
fisubrl
clc
cmpsl
sbb
popa
aas
or
bound
mov
ret
jle
xchg
cmc
outsl
jg
ljmp
data16
mov
cmpsl
outsb
pop
cmp
dec
sbb
add
movsl
pop
mov
sub
lods
iret
xchg
pop
jns
xchg
dec
mov
addr16
js
pop
test
pop
inc
sbb
sbb
and
stc
mov
decl
out
xor
je
enter
fsts
jbe
add
cmp
or
lcall
mov
mov
out
int3
xchg
repz
xchg
sub
out
ja
repz
sbb
mov
call
mov
ret
jne
xchg
or
or
dec
mov
push
pop
or
dec
xor
adc
and
call
negb
jae
mov
sub
dec
aas
inc
mov
xchg
arpl
jg
or
repnz
aas
cs
imul
das
cli
dec
xchg
cmc
mov
or
dec
fucomi
jg
inc
or
xchg
xchg
fwait
xchg
ret
incl
pusha
jp
dec
sub
js
stc
cmpsb
xchg
inc
data16
imul
mov
loop
fisubl
mov
adc
sti
push
daa
inc
pop
and
push
cmp
pop
jg
data16
jg
xchg
or
push
scas
add
pop
adc
test
insb
hlt
dec
inc
dec
pop
push
dec
xorl
pop
std
ljmp
jmp
add
pop
sub
push
cmp
cmc
and
das
jl
cmpsl
push
dec
int
dec
loopne
or
jle
xchg
jle
pop
stos
push
mov
cmpl
xor
lret
sar
clc
push
ds
mov
cmc
js
arpl
mov
divb
hlt
jmp
and
inc
daa
popl
adc
adc
cwtl
pop
jne
es
cmp
scas
pop
lcall
add
mov
enter
scas
ljmp
cmp
mov
fcmovnb
mov
bswap
outsb
stos
lret
adc
mov
out
scas
mov
outsl
and
fmulp
lahf
int
pop
sub
xor
adc
outsb
ss
inc
loope
pushl
flds
into
jno
in
dec
and
pop
sahf
and
pushf
pop
sub
arpl
in
jmp
out
mov
lock
pushw
sbb
mov
mov
sub
xor
out
cli
cld
test
imul
dec
and
jge
or
adc
fstps
sti
adc
incl
push
inc
jb
mov
mov
jb
in
outsl
xorb
scas
cli
cld
jg
mov
repz
incl
iret
mov
push
jbe
xor
mov
mov
fistpll
jns,pn
sub
decl
sub
test
test
orl
pusha
pushw
pop
push
in
icebp
cltd
xchg
pop
ljmp
push
dec
sahf
test
inc
push
push
hlt
push
mov
sub
pop
lcall
insl
sahf
inc
and
fstpl
xor
mov
and
jge
data16
fdivr
jge
pop
das
shl
inc
adc
stos
leave
dec
insl
stos
ret
sbb
xor
pop
xor
stos
imul
outsl
or
jge
mov
sbb
test
mov
incl
mov
rcrl
lcall
out
jb
divl
jb
out
cltd
ficoml
push
mov
jno
mov
lock
cmp
enter
pushl
mov
pop
out
push
inc
adc
call
in
xor
mov
jmp
int
mov
add
mov
xchg
ljmp
decl
insb
pop
orb
into
aaa
dec
xor
icebp
and
cmp
jns
or
lods
into
dec
push
mov
mov
aas
ja
mov
cld
fmul
aas
incb
and
pop
dec
xor
pop
xchg
aam
lahf
jp
and
and
test
pop
lods
mov
add
pop
adc
jmp
cmp
sub
mov
shrb
mov
mul
mov
popa
sar
in
fwait
cmp
sub
dec
sti
mov
jns
mov
or
popf
mov
int
insl
repz
push
xor
sub
fcmovnbe
push
fdivr
loope
movl
or
jmp
out
or
pop
push
push
in
push
cmpsl
inc
mov
push
xchg
inc
lock
sbb
mov
and
xor
or
sti
dec
jle
sbb
dec
mov
cmp
outsl
cli
lret
xchg
negl
jmp
jae
or
cmpl
ljmp
inc
push
push
xchg
loope
subb
rep
push
and
lods
adc
out
jmp
aam
cmp
idivl
adc
mov
and
fnstsw
je
jns
mov
test
int3
xlat
sbb
ljmp
movsb
subl
bound
imul
rolb
add
movsl
adc
enter
add
lcall
hlt
cmp
fdivl
pusha
lcall
add
insb
ljmp
lcall
adcb
jne
bound
rcll
or
mov
flds
and
mov
or
pop
mov
mov
adc
sbb
cmp
mov
pushl
inc
in
int3
lret
lahf
jmp
push
hlt
push
and
call
dec
or
jbe
mov
cmpsl
ret
scas
pop
jne
push
fistpl
and
inc
push
xor
cli
and
adc
int3
jne
xor
mov
call
lcall
push
mov
imul
and
mov
push
shl
sahf
loop
mov
push
call
testb
pop
or
aad
add
inc
ljmp
mov
incl
dec
xor
cli
sarb
mov
scas
inc
dec
cmp
mov
mov
ljmp
adc
push
jo
sbbl
push
idivl
pop
das
jmp
mov
jle
pushl
icebp
orl
add
addr16
in
roll
inc
dec
pop
rcrl
cld
pop
fistpl
add
sarb
jne
cmc
mov
push
std
decl
loope
lods
loop
xor
sub
mov
inc
loopne
sahf
jge
sar
call
pop
sbb
ret
mov
fisubl
add
int3
cmpsl
mov
sti
mov
daa
das
pop
adc
test
cmp
push
aas
pop
xchg
ret
mov
mov
lock
dec
push
pop
cltd
mov
mov
call
or
shlb
test
ret
enter
enter
push
pushf
lds
jmp
add
xor
outsl
jl
insb
mov
push
int
es
fmuls
push
das
test
incl
cmp
mov
mov
fs
jg
mov
sub
incl
sahf
push
mov
in
cmp
call
and
xor
cwtl
inc
add
incl
adc
movsl
std
arpl
pop
call
xchg
movl
lret
aas
push
imul
ljmp
mov
test
insb
dec
push
mov
mov
jge
pop
rolb
dec
push
inc
shlb
jne
xchg
movsl
scas
aas
scas
daa
fiaddl
mov
add
repz
pop
jl
inc
call
outsb
div
pop
jne
icebp
or
mov
insl
push
and
subb
ljmp
les
adc
out
mov
mov
hlt
sub
push
cmp
sub
ds
and
fwait
pop
out
pop
add
push
jecxz
pop
mov
push
sbb
popa
ljmp
fidivs
push
or
inc
popf
lds
push
popa
repz
mov
sbb
fcomi
sar
inc
cltd
inc
or
cmpsb
inc
push
xor
cmpsl
scas
addr16
insb
es
popl
loop
jge
mov
div
jle
inc
lods
inc
xlat
jl
xchg
out
cs
cltd
jno
sahf
xor
ljmp
add
movsb
aam
sbb
add
sub
in
lods
imul
inc
imul
cmp
jns
mov
and
outsl
mulb
aam
call
xchg
mov
ljmp
imul
je
movsb
pop
mov
adc
cltd
mov
lds
fidivl
scas
out
cld
sbb
adc
aas
and
xchg
cmp
nop
jp
cmp
loopne
imul
gs
ja
xor
bound
lods
ret
jnp
or
sti
jp
je
mov
hlt
lret
cmpsl
adcb
pop
or
lcall
mov
cmpsb
sub
jbe
testl
cmp
mov
push
pop
int
imul
mov
fsubrs
sub
xchg
jmp
mov
or
mov
jbe
adc
adc
push
decl
daa
aam
sti
enter
mov
cmp
cltd
aam
jp
outsb
cmc
cmc
jg
sbb
lcall
shll
jmp
jbe
test
or
push
push
clc
call
inc
adc
insl
test
mov
fldt
sbb
push
jno
inc
mov
jno
clc
push
outsl
lret
pop
adc
or
or
and
mov
inc
call
mov
into
pop
pop
test
cmp
inc
or
dec
addr16
inc
call
mov
fildl
test
pop
outsb
inc
dec
sub
movsb
mov
imul
jp
pop
push
sbb
add
pusha
out
sbb
or
xor
pop
add
or
call
xor
insl
mov
inc
mov
movsl
jle
fildl
mov
out
jno
cmp
mov
jmp
les
dec
imul
inc
xchg
or
aam
inc
and
push
jne
xor
outsb
fistl
call
sub
jnp
mov
mov
jmp
mov
sti
cli
pushl
scas
mov
mov
icebp
pop
push
sub
rorl
or
dec
ja
push
cmp
push
dec
rcr
xchg
out
fs
popa
movsl
outsb
mov
jmp
repnz
mov
xorb
fldl
inc
insb
cmpb
xchg
das
pushl
mov
dec
cld
xchg
jle
xor
iret
mov
cmp
lret
stos
mov
xor
lcall
pushl
fwait
lds
adc
and
xor
jl
gs
bound
xchg
pop
lock
mov
cli
cmp
push
add
mov
cmp
push
mov
inc
mov
into
lret
mov
pushf
mov
sbb
lcall
mov
adc
mov
bound
stc
lods
ret
and
pop
jg
jmp
mov
shlb
mov
push
xor
scas
loope
jo
dec
lods
out
mov
inc
push
mov
fwait
loopne
and
add
clc
or
add
mov
or
decl
decl
cmpsb
xchg
sahf
gs
jne
pop
movsl
sub
and
mov
int3
cltd
lcall
shll
adc
mov
shll
icebp
ret
mov
cmpsb
mov
iret
int3
es
jmp
in
ret
in
out
pop
pop
ljmp
xchg
pop
xchg
in
xchg
jne
outsl
mov
lods
decl
cmp
add
mov
cmp
sbb
mov
ss
dec
adc
addr16
popf
addr16
js
lsl
inc
push
arpl
iret
mull
sub
ljmp
dec
into
fsubrl
mov
subl
shrb
xor
data16
pushl
pop
repz
int3
pop
and
inc
sti
xor
mov
loop
xor
cld
lcall
xorb
rcrl
or
mov
push
adc
jg
les
cs
xchg
repnz
mov
insb
adc
mov
incl
loopne
mov
ljmp
pop
push
mov
outsl
shlb
decl
and
mov
jg
jge
inc
popa
fidivs
lds
add
jmp
les
mov
test
test
and
jb
sarb
loopne
fisubrs
fwait
popa
inc
jp
mov
sub
push
xor
push
ljmp
cmp
lods
gs
xor
mov
rcrl
sub
or
or
mov
lcall
sbb
mov
or
fwait
jnp
mov
push
in
out
incl
aas
pop
les
lods
ret
rclb
out
adc
decl
js
jmp
mov
xchg
mov
adc
fucom
mov
mov
sbb
sar
call
or
mov
cmp
sub
pop
std
cs
cmpl
or
dec
inc
cmpsb
pop
movsb
pop
dec
or
loope
xlat
movsl
adc
push
and
cmp
popf
add
in
or
test
test
xchg
loopne
jo
push
imul
stos
movsb
push
cmp
out
xor
enter
mov
and
repz
pop
pop
add
clc
cwtl
fildll
out
mov
xor
jne
mov
stc
in
stos
scas
insb
mov
into
call
xchg
cld
lods
mov
pop
jmp
or
inc
adc
mov
subl
incl
mov
or
sbb
add
stos
cli
jl
xchg
xchg
xchg
lret
adc
ljmp
mov
dec
pop
cmc
mov
mov
es
mov
mov
cld
jmp
int3
call
outsl
cs
mov
pop
cmpsl
or
or
mov
dec
ffreep
out
and
decl
jge
test
xchg
mov
fsubr
push
test
pop
pop
mov
std
ljmp
jno
sub
or
fdiv
js
icebp
push
lret
xorb
decl
push
sbb
sub
movsl
int
loop
xor
stos
push
inc
mov
inc
sbb
xchg
out
gs
jmp
pop
sarl
sub
xchg
mov
notl
ja
or
incl
fstps
dec
sbb
ja
mov
scas
sub
aad
xchg
fmulp
cs
outsl
jge
push
mov
dec
insl
pop
or
in
aam
adc
lods
pop
and
incl
pop
mov
hlt
push
xor
inc
adc
jno
xor
call
push
stos
xor
scas
pop
xchg
hlt
icebp
mov
ret
mov
xor
sub
stos
jnp
into
loop
mov
sbb
out
cld
int3
push
sub
sub
flds
cld
add
clc
insl
cs
dec
dec
jl
mov
call
adc
xchg
and
jbe
fdivrl
inc
test
dec
into
pop
aam
dec
jmp
outsl
cmp
in
mov
adc
sti
test
mov
dec
hlt
pop
negl
sub
fcmove
xor
mov
xchg
adc
jmp
in
cltd
add
movsb
mov
pushl
sbb
roll
sub
jb
adc
mov
js
out
out
mov
sbb
jecxz
inc
push
mov
xchg
dec
cmp
daa
add
cmp
incl
jb
nop
mov
fxch
outsb
push
fidivrl
loope
popf
pop
mov
mov
mov
mov
cmpsl
std
jae
fadds
jno
push
sub
decl
sbb
imul
or
dec
lcall
mov
ljmp
orb
sub
sub
fcompl
dec
movsb
sub
mov
cmp
inc
pop
inc
mov
mov
fstpl
push
daa
mov
fstpt
sbb
push
cli
fidivl
pop
xorl
pop
xor
loop
lcall
call
lods
hlt
xor
push
mov
sub
inc
xor
pop
push
mov
std
mov
push
incl
pop
inc
shl
lea
pop
mov
popa
lcall
in
inc
lahf
push
movsl
ret
or
lods
fidivrl
or
les
xchg
pop
lcall
xchg
inc
sbbb
rorl
gs
test
cmpsl
rclb
cli
jle
cwtl
scas
xor
push
in
sub
enter
pop
jb
mov
rorl
movsb
cmp
jno
mov
mov
sbb
scas
dec
js
mov
addr16
inc
aas
dec
xlat
scas
xor
adc
xchg
mov
sbb
in
orl
pop
aam
daa
mov
jne
cmp
sbb
decl
scas
scas
push
loope
dec
dec
addb
push
push
or
jg
popf
mov
jmp
je
enter
push
iret
push
xchg
or
icebp
push
xchg
inc
shlb
incl
mov
pushl
sub
std
and
std
jg
incl
xor
repz
dec
popf
pushf
push
sbb
mov
mov
sub
jmp
pop
imul
push
pushl
xor
aas
cmp
int3
dec
nop
dec
je
jo
mov
jle
mov
clc
adc
call
mov
mulb
pop
pop
outsl
icebp
add
jp
sub
imul
mov
and
loope
mov
aam
push
fistps
decl
mov
mov
outsl
jmp
in
fsubs
arpl
addr16
mov
ljmp
sahf
sub
lods
mov
mov
pop
cmp
sbb
dec
pop
inc
sub
decl
faddl
movsb
stc
aad
mov
loop
xchg
xchg
das
test
mov
mov
decl
mov
mov
adc
scas
cli
aas
in
or
dec
cmp
xor
in
mov
add
add
mov
sbb
addb
decl
inc
dec
aaa
mov
mov
iret
inc
sbb
and
inc
inc
fisubs
jb
jg
arpl
clc
dec
mov
mov
sub
pusha
imul
push
pusha
jmp
xchg
add
cmpsl
mov
sbb
das
je
stc
push
push
insl
or
add
lcall
sub
push
dec
cmp
jno
or
and
lods
faddl
or
loop
jns
jb
sub
bound
sbb
mov
jle
jns
mov
repnz
es
sbb
in
mov
adc
bound
mov
daa
pop
mov
adc
xchg
cmc
push
sub
pop
sub
push
push
sub
and
cwtl
jle
pop
les
popa
and
push
sub
in
mov
outsl
fisubrl
inc
or
ja
test
pop
sub
cmp
mov
mov
lcall
push
sub
pusha
xlat
and
jle
xor
push
test
add
push
cld
mov
lcall
arpl
cmpsb
sbb
aam
push
pusha
lret
mov
jmp
xchg
imul
xor
adc
mov
fbstp
inc
xor
mov
pop
sub
mov
cltd
test
push
addr16
scas
jmp
ds
push
mov
sub
lcall
fwait
mov
cmp
aaa
dec
mov
add
mov
lods
mov
addr16
out
add
jg
pusha
out
adc
jl
push
stc
mov
mov
pushf
mov
std
insb
outsl
scas
jg
jmp
fiadds
jne
lret
add
mov
bound
sbb
push
stos
fnstenv
rolb
pusha
mov
lret
xor
mov
mov
pop
xchg
out
cli
ljmp
rcrl
jmp
sub
add
icebp
jmp
dec
mov
sub
inc
or
scas
cmp
lds
mov
mov
test
incl
loope
cmp
mov
xchg
inc
cmpb
dec
mov
jb
mov
mov
adc
incl
cmp
fldcw
lds
cs
mov
pop
pushl
mov
or
push
mov
push
clc
orb
incl
pop
or
mov
into
push
pop
repnz
cmpsl
dec
clc
add
rolb
or
lcall
movsl
inc
sahf
dec
arpl
aas
es
fwait
adc
mov
test
jmp
inc
xchg
aad
fs
enter
fldl
mov
mov
mov
jns
in
into
out
mov
fcomps
repz
iret
sbb
sub
and
adc
into
jg
pusha
sahf
decl
fnsave
lds
call
imul
mov
xor
pop
cmp
das
ja
jl
popf
add
mov
data16
mov
aaa
shrb
cmpsb
std
jle
xor
fisttpl
es
lcall
mov
pop
loopne
adc
pop
and
sub
adc
cmp
cmpsb
jp
fcomip
fistl
xor
in
push
shr
repnz
mov
mov
cmpsb
imulb
jp
mov
pop
or
stos
inc
in
lods
dec
push
scas
mov
pop
movsl
cmp
ljmp
mov
push
iret
jbe
xor
cmp
add
outsl
dec
cltd
lods
mov
push
sbb
jg
mov
push
movl
xor
cmp
mov
fdivrl
xlat
fdivrp
daa
xchg
push
pcmpgtb
cmpsl
cmp
cmp
lds
aam
rcl
jl
loop
lock
mov
ljmp
loopne
adc
sbb
pop
and
sub
push
and
xor
test
sar
enter
fisttpl
dec
ret
mov
xchg
mov
jl
movsb
repz
cmp
call
shll
stc
pusha
test
xor
lahf
mov
ss
test
jl
sbb
cwtl
std
cmp
stc
sahf
lahf
enter
sbb
add
inc
ret
lock
dec
aaa
add
mov
js
arpl
jno
adc
cltd
xchg
dec
adc
test
mov
stc
clc
and
sbbl
call
loopne
outsb
dec
add
out
xor
pushf
push
aas
mov
iret
lret
test
jbe
int
std
sbb
push
scas
clc
ljmp
div
sarl
mov
xchg
jge
xor
jp
aaa
imul
adc
mov
mov
and
movb
jmp
dec
clc
sub
dec
mov
out
fdivrl
push
icebp
je
iret
fsubr
dec
pop
mov
mov
lds
inc
out
mov
dec
sub
and
lahf
lock
in
add
and
push
xchg
pop
out
frstor
out
sti
test
ljmp
dec
mov
loop
dec
fsts
xor
xchg
leave
cli
test
das
push
out
cmp
xchg
mov
xchg
outsb
out
leave
xchg
sub
daa
mov
or
mov
and
inc
adc
inc
loope
ljmp
dec
call
dec
push
xor
mov
push
subb
dec
or
push
insl
lock
int3
call
pushf
imul
xchg
lods
imul
test
jne
cld
frstor
call
pop
int3
ds
roll
mov
les
push
cmpsb
mov
out
int3
add
ret
mov
cmpsb
mov
sub
push
negl
cmp
xchg
add
fbld
mov
std
decl
xor
scas
push
mov
je
fwait
lods
fisttpll
mov
call
or
mov
imul
add
test
shr
or
dec
push
into
hlt
mov
push
repz
insb
imul
adc
cwtl
mov
data16
mov
lcall
sub
mov
mov
cmp
and
xchg
out
pop
xchg
jg
decl
sbb
fists
sbb
mov
jmp
mov
jnp
sbb
outsl
push
jecxz
inc
xchg
aas
imul
xor
sub
test
xorb
loop
mov
sarl
outsl
mov
adc
and
and
in
mov
jmp
xchg
leave
or
ficoml
push
jno
enter
sub
fcoms
andb
mov
push
inc
pushl
pop
push
pop
inc
mov
mov
in
cmp
fimull
iret
cmp
mov
sub
dec
test
negl
call
pop
mov
pop
xor
jp
pop
in
xorl
mov
and
cmp
sub
idiv
xor
jno
and
dec
std
int
repz
mov
xchg
imul
leave
mov
insb
sbb
pop
inc
pop
sub
push
daa
add
mov
icebp
fdivs
add
mov
inc
or
adc
cmp
mov
adcb
push
rorl
pushl
mov
pop
popa
jmp
mov
xor
dec
add
das
jge
incl
into
cltd
xchg
xor
cmpsl
jb
mov
mov
and
addr16
inc
push
mov
rcll
mov
mov
loope
xchg
xchg
mov
cmp
cld
cmp
xchg
lods
jb
pop
mov
pop
mov
mov
sub
push
cmp
sahf
shl
jg
dec
ljmp
fisttpl
cmp
ja
aas
push
hlt
shll
ss
movsl
cld
xor
sbbl
pop
hlt
or
fsubr
in
fisubs
adc
xlat
adc
jp
xor
and
xchg
insb
cmp
loop
jb
nop
shlb
adc
lds
mov
xchg
es
cs
pop
jp
aaa
cmp
cs
jb
jne
stc
int
sar
jmp
subb
insb
roll
push
mov
mov
jb
fisubs
mov
loope
popf
cltd
mov
insl
cltd
je
inc
cmp
enter
out
pusha
mov
mov
jecxz
popa
lock
jle
xorl
sub
mov
cli
sub
mov
nop
mov
jb
jmp
push
sbb
xor
incl
xchg
outsb
pop
sbb
outsb
sbb
pop
lret
jg
mov
popf
or
push
test
test
ljmp
loopne
test
pushf
xchg
mov
cmp
push
stos
add
dec
mov
jno
out
fsts
pop
loopne
test
sub
sbb
mov
mov
jns
cmpsb
mov
pop
pop
mov
cmp
fdivr
fiaddl
outsb
andb
std
jp
imull
jmp
outsl
in
xor
jge
cmpsb
ret
pop
loope
cmp
jle
adc
mov
mov
fistpl
aas
pushf
pop
lea
hlt
jmp
sub
mov
int3
cmp
sub
jmp
sbb
mov
cmpsl
jge
std
decl
push
dec
fisttpl
pop
pop
fisubrl
movb
clc
incl
lret
sahf
clc
arpl
mov
in
shll
push
lret
ss
aaa
movsl
mov
inc
cmpsl
adc
std
clc
or
jmp
mov
dec
xor
mov
outsl
jo
xor
pop
out
jge
add
sub
pushl
adc
jbe
jne
jmp
popa
cmp
xchg
mov
clc
add
jno
inc
jo
push
mov
dec
mov
pop
jno
push
in
lea
sti
cmpl
shll
lock
jg
ljmp
stos
sub
lcall
vmulpd
xchg
and
push
cs
xchg
push
sub
mov
ljmp
mov
cwtl
add
scas
mov
cmpsl
je
out
lret
out
push
insb
jp
jmp
jg
pop
fs
clc
mov
lea
pop
jle
jg
test
pushl
pop
mov
jecxz
push
pop
pushf
xor
popa
cwtl
cmp
adc
popa
jge
incl
cmp
adc
mov
adcl
lcall
jmp
hlt
out
imul
mov
mov
and
dec
sbb
pushl
jnp
xor
push
jp
push
cmc
and
insb
push
iret
movsb
push
mov
pushl
adc
xor
jg
test
int
or
xchg
mov
add
ja
idivb
sub
iret
sbb
mov
xor
sub
stos
pop
out
mov
fstl
pop
push
add
cwtl
hlt
mov
sub
xor
add
or
insl
cmpsb
xor
outsl
sub
cmp
sub
adc
jp
mov
icebp
dec
xchg
sub
jge
popf
or
dec
and
pop
inc
cmp
addr16
incl
bound
pop
lahf
out
cmp
push
outsb
sub
test
call
push
subb
in
cmp
jge
jge
fwait
sub
mov
jg
add
inc
fs
ljmp
adc
mov
mov
sahf
sub
aaa
xor
adc
lahf
js
pop
adc
sbb
incl
repz
stos
jb
test
nop
insb
push
mov
test
jle
adc
call
insb
or
or
dec
jmp
mov
jbe
outsb
ficoml
jbe
leave
call
loopne
pusha
movsl
mov
jo
lahf
je
mov
or
cli
dec
in
icebp
lret
movsl
clc
lcall
sub
lret
cltd
ror
outsl
lahf
mov
mov
lcall
fimuls
xor
pushf
dec
and
mov
pop
adc
jb
sti
push
or
mov
pushf
and
jmp
push
rorb
xchg
jo
movsl
rorl
jp
mov
push
fidivrl
in
mov
cmovge
iret
stos
mov
push
clc
cmp
add
xor
lods
push
sub
gs
and
cmpsb
int3
rclb
stos
sub
rolb
ljmp
movsb
sbb
data16
adc
movsb
out
or
les
jge
in
sub
jmp
cmp
or
push
mov
inc
lds
jnp
int3
dec
popf
call
xor
dec
arpl
xor
xor
daa
lcall
cltd
aas
push
in
jg
in
sub
out
loop
es
inc
in
push
fistps
inc
sbb
addr16
add
incl
push
mov
and
mov
imul
je
pop
push
sahf
add
sbb
jmp
fistps
lret
add
mov
cmpsb
shr
js
movsb
cmpsl
movsb
movsb
xor
jg
mov
aas
adc
and
sub
decl
sub
iret
insb
and
jne
movsb
and
test
dec
jae
sbb
div
pop
dec
out
clc
ljmp
push
in
mov
sahf
push
add
sub
lds
pop
pop
jne
mov
lcall
pop
shrb
mov
push
sbb
inc
movsl
dec
inc
xchg
in
data16
aaa
shlb
leave
repz
mov
es
popa
cmp
fs
dec
lds
fcomip
fcompl
mov
and
es
aas
xor
jb
or
clc
fildll
daa
enter
test
mov
push
jns
add
data16
aaa
adc
daa
and
jg
adc
inc
dec
ljmp
adc
das
sar
sub
mov
cmp
dec
inc
gs
mov
jg
mov
jae
pop
jns
sbb
adc
fwait
ret
decl
popa
jno
xchg
clc
repnz
sti
sbb
dec
shl
mov
pop
xchg
dec
test
push
mov
cmpsb
cld
out
stc
jns
add
std
cwtl
movsb
sub
pop
cmc
cmp
pop
stos
clc
pop
into
push
lods
stc
push
lods
or
sbb
lret
loop
fbld
sbbb
lods
stc
dec
call
lods
sahf
clc
push
lcall
pop
lock
xchg
rorb
adc
cmp
fisttpl
jp
lods
jp
mov
call
sbb
and
insl
outsl
add
fnstenv
scas
jne
pushl
out
out
sub
sbbl
mov
icebp
pop
daa
sbb
and
lds
mov
stos
cli
sbb
jo
add
jg
rcll
cltd
incl
out
fwait
outsl
push
out
in
decl
adc
xchg
loope
lock
in
xchg
pop
cmp
mov
mov
jp
and
dec
cmc
mov
insl
mov
sub
mov
xchg
dec
push
push
test
mov
int
and
pushl
mov
add
ret
sarl
dec
fistps
xchg
sahf
into
loopne
out
int3
xchg
jmp
lcall
xor
push
sub
dec
pop
cmp
loopne
jmp
sbb
sbb
jne
ja
cmp
in
in
sub
incl
loop
push
stos
inc
arpl
mov
in
rclb
mov
jmp
js,pt
mov
loopne
push
in
xor
sarb
test
mov
dec
aam
lret
mov
mov
jecxz
lcall
pop
ret
mov
xchg
mov
jns
fnstcw
adc
adc
test
mov
test
fcompl
adc
mov
inc
popf
jmp
push
mov
sarl
addr16
cmc
repnz
mov
mov
stos
mov
xor
push
pop
pop
mov
inc
and
data16
decl
xlat
inc
fcmove
into
cmpsl
push
xor
daa
jp
testl
xchg
cmp
pushl
sub
out
std
std
jbe
sub
cmp
add
sub
cmp
ljmp
ret
add
mov
mov
xor
jns
cli
fcoms
sub
sub
lock
dec
ret
mov
inc
xchg
mov
sub
jo
jg
jle
test
jle
mov
push
pop
mov
mov
jmp
incl
sub
xchg
lock
das
fldcw
and
add
jg
hlt
lcall
dec
es
enter
test
cmp
jge
add
dec
or
pop
and
and
pushf
jb
adc
cmp
lods
leave
pop
pop
loopne
ljmp
test
and
bound
adc
cli
roll
incb
fisttpl
nop
jmp
cmp
fstps
pop
popf
mov
xlat
jb
mov
lret
xchg
imul
push
mov
sbb
dec
xchg
and
repz
std
jle
sbb
sub
test
mov
incl
adc
jmp
sar
adc
sti
lgs
push
repnz
out
ds
jno
cli
ljmp
dec
xor
xor
sahf
insb
inc
and
inc
lret
lds
lcall
in
call
add
inc
imul
incl
cmp
xor
aam
mov
cmpsl
jbe
clc
push
jnp
lcall
xchg
cwtl
leave
jae
sar
sub
or
push
enter
call
mov
and
fnsave
test
mov
jb
subl
jo
gs
pop
ss
mov
subb
insb
call
ret
inc
mov
push
jmp
inc
int3
int3
test
andl
mov
pop
testb
jl
jg
les
sbb
mov
into
dec
insb
inc
pop
jmp
enter
jno
mov
jg
int3
cwtl
pop
sub
cmp
leave
pop
outsl
decl
mov
cmp
loopne
adc
adc
pushf
jbe
ljmp
dec
fwait
out
in
add
jbe
push
adc
fwait
adc
push
fsub
mov
pop
sar
call
xor
mov
dec
push
pop
pushf
mov
bound
jle
jg
testb
mov
xchg
dec
pushf
bound
mov
cmp
xchg
push
xor
push
mov
jmp
inc
lahf
inc
fdivl
xchg
dec
mov
dec
test
cwtl
mov
pop
decl
mov
popl
lods
js
add
jp
rcll
lea
cwtl
lcall
shl
cmp
rorb
mov
lea
lds
ljmp
outsl
mov
adc
mov
sbb
rorb
and
push
xlat
xchg
jp
jl
addr16
dec
push
pop
cld
call
insb
scas
sbb
xor
addb
xchg
out
rol
mov
inc
xchg
call
and
mov
xchg
arpl
pushf
push
sbb
lret
jns
or
mov
shlb
mov
test
lea
repnz
ljmp
sub
mov
and
add
inc
sarb
xlat
push
leave
stc
dec
lcall
mov
push
or
aaa
cld
or
cwtl
data16
mov
scas
fwait
call
cld
repz
shl
inc
mov
call
adc
das
and
push
std
push
push
pusha
sub
dec
mov
notl
pop
adc
addb
ficoml
jmp
nop
aaa
pop
repnz
mov
mov
xchg
sub
dec
rcrb
outsl
loopne
push
mov
ljmp
pop
adc
shll
or
insl
xor
mov
dec
push
lret
imul
loopne
mov
mov
popf
xor
aaa
rorl
incl
in
adc
pop
stos
push
das
stc
out
xor
dec
fistl
cmc
add
call
aaa
cmp
shr
popa
ds
inc
icebp
xor
jmp
push
and
xor
ljmp
jecxz
pop
xchg
jmp
dec
sub
cwtl
test
mov
pop
cmpsb
out
aad
loope
stos
cmpsb
pop
jp
dec
mov
mov
push
dec
shrl
and
mov
inc
xchg
ss
decl
xor
push
jb
sub
fdivs
insl
pop
push
adc
adc
inc
xor
cmpsl
sub
ljmp
pop
inc
lahf
mov
scas
jae
out
cmp
aas
push
sbb
ljmp
leave
or
daa
cmpsl
sbb
sbb
add
jno
xchg
adc
decl
add
mov
push
mov
cmp
cmp
adc
pushl
inc
repz
xlat
mov
rcrb
lret
test
out
dec
cmpb
repz
fistps
cmp
fcmovb
adc
mov
test
inc
repz
push
mov
xor
arpl
test
es
aam
sbb
jae
mov
inc
setb
cmc
add
xchg
andl
inc
xor
inc
ljmp
jg
int3
sbb
pop
jbe
imul
jns
lret
push
pop
dec
mov
ficompl
lods
xchg
dec
faddl
repnz
push
ljmp
es
arpl
sbb
lret
fninit
inc
inc
outsl
add
imul
stos
lcall
push
jno
xchg
add
push
lods
clc
mov
fwait
gs
call
mov
je
daa
mov
and
icebp
lcall
cmp
mov
popa
test
jns
scas
add
or
jge
stos
repz
in
ljmp
sbb
enter
or
pop
mov
push
sti
data16
fwait
cmp
icebp
stos
js
icebp
loop
test
push
push
sti
mov
popf
fwait
sbb
movsb
sub
lock
in
or
subl
leave
cmp
in
adc
mov
ficompl
push
int3
std
jg
and
pop
sub
sub
ljmp
ja
add
pop
ja
lcall
add
test
ljmp
or
mov
cli
jmp
and
mov
mov
cli
ret
mov
loopne
jmp
lcall
push
outsb
std
out
das
jecxz
jae
adc
xor
decl
xor
orl
inc
jp
jb
fwait
scas
mov
sub
outsl
clc
mov
cmp
dec
push
shll
fistps
aam
and
xor
daa
in
mov
in
pop
jg
or
sub
adc
cmp
rcrl
lcall
cmp
jg
xchg
loopne
loope
sbb
mov
inc
and
and
adc
cmp
cwtl
and
les
imul
incl
aam
ja
outsl
pop
lret
mov
insb
mov
cmp
and
shrl
frstor
add
or
mov
mov
xor
mov
xchg
push
lods
push
jns
sti
jg
fcomip
inc
or
leave
dec
sub
loop
xchg
jae
aaa
pop
pop
jge
xor
add
or
inc
adc
dec
call
loopne
sub
cmpsl
movsl
aas
adc
jno
push
xor
shl
ljmp
sti
pop
pop
add
popa
pop
testb
ret
sarl
adc
inc
lds
cmp
pop
xchg
fdiv
pop
sarl
popf
cltd
repz
insb
fwait
cltd
xor
inc
ror
pop
jne
mov
scas
decl
sbb
mov
sub
pushaw
mov
jae
mov
mov
mov
xor
inc
cmp
mov
xor
ljmp
sarb
dec
insl
test
clc
sub
sbb
test
jge
add
call
nop
pop
lods
dec
ret
xchg
movsb
pop
clc
mov
pop
mov
mov
push
sti
dec
ret
outsl
dec
out
cmp
stos
push
jb
nop
into
mov
insb
or
lcall
adc
jb
push
adc
and
mulb
push
arpl
inc
decl
rcll
leave
mov
cltd
ss
mov
test
decl
out
pop
ja
jbe
fsubrs
xor
sub
lcall
push
jmp
incl
sti
enter
xchg
mov
ret
xor
pop
adc
lods
pusha
cld
pushl
cmp
mov
jo
insl
imul
xlat
nop
jp
sub
xchg
mov
or
xor
decl
xchg
dec
cli
dec
and
pop
mov
outsl
push
lea
gs
add
stos
mov
add
lcall
adc
mov
add
mov
fmull
fcmovbe
adc
fisttps
data16
sbb
cmp
jbe
add
inc
mov
decl
test
dec
rclb
pop
scas
icebp
inc
add
fs
inc
jl
inc
push
ljmp
clc
cwtl
insl
dec
aam
inc
and
ret
mov
cltd
push
add
repnz
ret
loopne
decl
enter
iret
sbb
xlat
mov
dec
push
pop
add
lock
aam
jno
out
jno
cmpsl
pushl
cld
incl
cltd
loope
fisubs
sbb
jmp
fstps
adc
inc
inc
mov
jo
in
insl
iret
and
std
mov
cld
lods
mov
enter
lret
or
jae
mov
fisubl
stc
es
jg
ljmp
mov
cmp
push
aas
sahf
sub
xchg
add
mov
or
lods
dec
in
lods
mov
mov
mov
dec
fsubrl
mov
jg
call
fisubs
or
or
push
incl
cmpl
mov
stos
sti
cmp
mov
test
cmp
mov
xchg
sbb
rol
mov
in
xchg
xchg
xchg
addr16
jmp
sbb
push
xlat
ljmp
rorb
pop
daa
mov
les
test
in
aad
ljmp
pop
sub
fisttpl
mov
mov
int3
shrl
or
pop
xor
xchg
pop
xorb
int3
xchg
pop
and
add
mov
xor
call
jmp
push
enter
mov
sub
jl
les
add
loop
aad
lcall
inc
dec
inc
push
imull
dec
jne
enter
adc
shl
wrmsr
cmc
outsl
jmp
fldz
pop
jno
mov
sbb
jmp
cmpsl
fiadds
lods
mov
xchg
movsb
jg
dec
and
dec
imul
xchg
std
pop
fwait
xor
lods
xchg
out
sti
cmpsb
lcall
lods
sbb
fstpl
xchg
shrb
mov
sbb
jmp
adc
in
inc
jno
out
aas
jecxz
mov
std
and
inc
mov
or
xor
pop
jge
dec
cwtl
int
sbb
cmp
mov
outsb
cmp
add
jnp
mov
dec
adc
incl
xor
add
fwait
in
adc
and
int3
mov
or
jmp
shr
push
mov
decl
inc
in
pop
cmp
ficompl
or
mov
mov
mov
add
sbb
pop
iret
push
and
lret
fisubl
outsl
xchg
cld
or
fnstsw
inc
pop
imul
mov
je
sub
vsubpd
lods
mov
sbb
std
mov
and
leave
idivl
frstor
mov
lock
pushl
sub
push
add
add
xchg
dec
inc
je
aas
mov
stos
rcl
decl
in
in
or
minps
xor
in
push
rclb
dec
rolb
insb
addr16
outsl
outsl
mov
incl
clc
lods
fcoml
mov
add
cmpsl
dec
lret
inc
inc
mov
shl
pushl
sbb
hlt
push
push
pushf
fdivs
test
idivb
mov
ja
jo
les
xor
push
fcomps
iret
test
mov
pushl
insl
pop
and
jle
cmpsb
dec
and
pushl
testl
cltd
mov
pop
jg
call
dec
lods
jb
stc
dec
ss
pop
ret
push
sbb
pop
hlt
nop
mov
decl
in
enter
or
xlat
loope
jmp
adc
test
jbe
es
icebp
pushl
jl
and
and
cmp
jmp
sahf
insb
pop
mov
jno
sar
lcall
sub
push
mov
add
scas
mov
cmp
sub
jg
adc
sbb
in
add
das
aas
fwait
dec
or
nop
fxtract
out
sub
bound
lret
lcall
in
inc
sbb
jae
push
push
cs
cmpsb
cld
addl
sti
out
daa
pop
je
or
jp
icebp
mov
push
shlb
cmp
rcr
lea
jns
test
pop
pushl
or
stos
xor
lret
sahf
or
lret
xchg
fwait
inc
dec
mov
cwtl
imul
loope
cmp
mov
xchg
shl
imull
jecxz
xlat
inc
cmp
add
loopne
xchg
cmp
ja
lcall
inc
mov
dec
or
out
rorb
inc
adc
pop
pop
mov
aam
mov
add
dec
sti
call
mov
mov
and
out
add
pop
xchg
cld
sub
lret
gs
xchg
jg
and
xchg
hlt
and
fidivl
sub
cmpsl
xor
scas
test
mov
loop
decl
scas
bound
xchg
ja
mov
push
out
inc
dec
cmp
pop
xchg
fldt
rorb
adc
mov
sbb
js
sub
push
sahf
hlt
lcall
pop
fcmovbe
outsb
jbe
mov
push
int3
inc
lods
push
lret
fs
or
ljmp
movsb
pop
imul
jg
xlat
shl
mov
orl
push
sbb
lds
dec
mov
lcall
in
add
or
ljmp
lock
push
incl
fwait
mov
testb
arpl
inc
lea
pop
cmovg
fisubrl
loopne
xchg
dec
popf
jne
mov
fldt
xchg
sbb
pusha
mov
stos
mov
add
fistl
cmpsl
cmp
loop
out
pop
or
inc
xchg
call
sbbb
or
addr16
add
push
push
sti
decl
cmpsb
iret
push
stc
and
xor
adc
push
stos
mov
sub
mov
loope
mov
lcall
jnp
mov
sub
and
mov
pushl
out
ss
cmpsl
mov
cmpsb
jns
es
mov
push
push
popa
nop
mov
insb
sub
aaa
std
ljmp
rcl
dec
add
ret
fs
inc
mov
aam
pop
aas
subb
pop
mov
flds
cmp
mov
mov
adc
xor
dec
testb
ja
call
inc
mov
xchg
xlat
mov
dec
lret
mov
mov
call
add
pop
xchg
cmp
pop
shll
jae
mov
cmp
adc
ljmp
daa
scas
add
pop
cwtl
loope
pop
fbstp
mov
jle
hlt
jne
pop
mov
div
pop
push
outsb
stos
push
lcall
in
test
bound
je
fldl
mov
out
add
and
jnp
out
lahf
decl
or
pop
insl
push
jl
test
test
add
push
xor
pop
inc
scas
or
outsb
sbb
call
ret
fwait
ror
dec
pusha
es
jne
popa
pushf
aaa
inc
xchg
mov
sub
jmp
pop
incl
shrb
adc
es
in
jg
push
fldlg2
xchg
xor
and
incl
push
mov
mov
es
js
sti
cmpb
add
int3
aad
adc
out
scas
mov
in
push
ret
xor
loopne
fstps
movl
xchg
pop
insl
jnp
pop
jns
movsl
add
stos
xchg
sub
stc
add
push
decl
xchg
mov
icebp
pop
xchg
out
outsb
mov
fdivrs
ss
pop
sub
lods
jns
sbb
mov
push
enter
aaa
movsb
mov
cmc
fisttpl
pusha
lcall
pop
inc
cmc
cli
hlt
arpl
cmp
jnp
dec
inc
aam
pop
pop
test
cmpsl
imul
jg
repz
repnz
adc
push
std
fistpll
mov
fdivl
jno
loop
inc
jae
sahf
pop
dec
jge
rorb
inc
aaa
aas
mov
or
mov
jo
cmpsb
push
pusha
lret
call
push
xchg
mov
lcall
outsb
ds
sbb
lret
cmc
jp
int3
inc
mov
adc
ljmp
test
dec
into
mov
cmpb
cli
sbb
loope
sub
inc
or
cltd
pop
cmpsl
lcall
push
jg
scas
mov
add
xlat
inc
add
cli
xchg
xor
pop
dec
not
arpl
outsl
clc
ljmp
pop
jo
jo
out
fidivs
gs
and
xchg
lcall
mov
fmul
pop
inc
je
or
xchg
add
jne
fwait
adc
push
repnz
pushl
fcomip
xchg
mov
and
dec
jl
pop
mov
and
add
leave
jns
into
sahf
loop
lcall
aad
lds
mov
jge
fwait
outsb
iret
ss
pop
pop
loope
cs
popf
mov
fmuls
xchg
movsb
mov
lret
repnz
push
mov
push
or
dec
mov
xchg
cld
xchg
roll
cltd
and
mov
dec
cmp
jo
push
mov
dec
fwait
xchg
jl
ret
ss
xchg
clc
inc
stos
in
adc
movsb
js
sbb
mov
decl
mov
dec
insb
xchg
repz
andb
sbb
mov
call
loopne
lods
test
xor
lret
xchg
frstor
rcrb
fistpll
xor
jb
add
test
scas
or
or
insl
scas
aas
inc
xor
mov
subl
jg
pushl
or
jae
cmpsb
movsl
cld
imul
test
sbb
pushl
repnz
sbb
mov
adc
cli
xchg
mov
xor
mov
aad
adc
pop
lock
cld
sub
xchg
inc
enter
xchg
inc
adc
adcl
inc
gs
in
shr
cmpsb
rorl
cli
push
les
mov
adcb
incl
jl
lret
push
pop
in
test
xor
push
inc
dec
mov
push
hlt
mov
jb
mov
xor
push
xchg
loope
pushf
add
dec
cmp
outsb
xor
push
adc
jge
jmp
push
lret
leave
ljmp
xor
add
loopne
jnp
les
ljmp
ret
mov
pop
lcall
rorl
inc
adc
decl
test
lcall
in
pop
inc
in
mov
mov
leave
inc
std
decl
pusha
push
dec
lea
dec
stos
mov
js
cmp
test
xchg
rcrl
pop
je
lds
pop
roll
sub
aas
push
test
pop
out
jge
pop
xor
adc
adc
inc
mov
jnp
in
stos
shl
jns
push
std
dec
inc
out
jle
scas
ficoml
aas
sub
push
and
incl
sbb
cmpl
mov
iret
loop
jns
ss
fimuls
or
xchg
jg
call
sub
leave
ja
push
mov
lret
push
stos
cmp
pushl
pusha
push
dec
imul
push
mov
inc
out
xchg
jg
adc
inc
ror
push
in
dec
mov
cmp
xchg
call
adc
lcall
dec
dec
push
sbb
iret
inc
aam
fwait
mov
mov
jecxz
jo
or
clc
std
les
std
jmp
jle
aas
sbb
jae
inc
jp
sbb
sub
xchg
mov
push
mov
cmp
lahf
lods
lea
insb
test
popf
fistpl
dec
in
and
inc
incl
cmp
movsb
pop
fistpll
push
fisubrl
mov
mov
imul
call
pop
rclb
or
ror
inc
jmp
repz
mov
mov
lahf
fbld
and
jb
mov
inc
inc
pop
push
fldcw
imul
rclb
add
ljmp
aam
pop
mov
cld
out
cmpsb
decl
decb
popa
addr16
popf
sub
and
dec
push
mov
cmpsb
sbb
pop
lcall
jge
inc
subl
incl
cld
xlat
loope
shl
push
out
cmp
lods
cltd
addr16
out
aaa
sar
mov
test
out
ss
pushf
addr16
xchg
or
adc
in
jbe
inc
insb
sbb
push
push
cmc
repnz
sti
add
aam
cld
pushf
leave
div
test
pop
jmp
fisttpll
mov
loop
xlat
fisttpl
sbb
ds
fwait
sub
movsb
xchg
arpl
test
loop
xchg
decl
xchg
and
pop
shll
leave
sti
pusha
sub
sbb
mov
int
ss
out
ljmp
xchg
shlb
xor
or
data16
and
sbb
jge
xorl
lcall
nop
pop
call
orb
ljmp
adc
xchg
adc
adc
incl
push
popa
inc
jmp
gs
pop
aas
xor
rcr
cmp
mov
dec
pusha
aam
insl
lret
cmp
incl
in
ss
pop
ja
in
hlt
or
aam
popf
sbbb
cs
cltd
dec
int
dec
jmp
pop
lcall
mov
sub
lods
cmp
aaa
pop
mov
add
js
mov
push
clc
test
jmp
out
and
cmc
xor
fs
insl
xchg
mov
ja
push
je
test
push
shll
decl
sbb
sbb
jg
push
inc
and
adc
movsb
or
xor
rcl
stos
jae
jge
out
inc
pop
cmpsl
inc
push
call
fiadds
jg
ja
cmp
clc
mov
or
addb
xor
call
enter
jp
adc
repz
mov
or
sbb
jmp
cmc
nop
jl
ljmp
xor
int
adc
movsl
jb
pop
test
cltd
ljmp
fisttps
imulb
fnsetpm(287
stos
jbe
ja
incl
fs
loope
mov
inc
in
pusha
add
pushl
jg
mov
mov
mov
inc
mov
cwtl
clc
or
scas
pushf
lds
adc
imul
inc
mov
pop
jmp
mov
int3
xor
out
adc
mov
mov
sub
mov
fst
adc
out
iret
jl
mov
shl
repnz
cmpsb
decl
and
ret
add
mov
dec
xchg
lods
mov
pop
outsb
inc
shlb
std
xlat
adc
out
sbb
fsubrl
sub
mov
and
mov
iret
jbe
push
leave
cmpsb
call
or
inc
repnz
idiv
cmp
push
clc
and
and
cmp
mov
xor
push
jl
add
sbb
xor
cmp
pandn
shrb
and
jle
mov
addr16
in
pop
push
mov
sbb
aad
mov
push
adc
in
pop
dec
adc
ljmp
pop
ficomps
mov
xor
jns
subb
aas
cmpsl
inc
adc
rcll
or
call
in
js
mov
cmp
insb
push
push
sahf
repz
stc
scas
cmc
and
call
out
push
js
lock
mov
jp
mov
fcomps
adc
add
dec
jae
or
incl
xchg
imul
aad
and
sub
or
test
jmp
push
jg
sbb
loopne
lret
rolb
mov
and
nop
xor
decl
mov
adc
test
cs
adc
push
inc
loopne
fwait
cmpsb
incl
pop
in
xor
enter
jns
ja
fisubs
popf
mov
pop
orb
lahf
mov
es
push
fwait
inc
dec
push
or
and
cmp
adc
rcll
xchg
icebp
arpl
mov
mov
sbb
in
push
sub
sti
loopne
mov
sahf
pop
int
cmc
mov
and
test
hlt
cmpsl
ja
test
call
push
dec
mov
test
out
in
mov
cmp
movsb
or
pop
lret
mov
ljmp
push
imull
add
lcall
jecxz
popf
insl
std
in
dec
jl
repnz
jl
cmc
xor
gs
cld
rcl
mov
sti
imul
std
sub
adc
call
mov
xor
loop
xor
mov
ds
mov
test
fs
in
das
add
cmc
aad
cs
in
push
fcomip
mov
mov
push
sub
int3
dec
cltd
sub
lahf
mov
sbb
lret
lahf
push
sbb
or
pop
cmp
xchg
insl
inc
fsubr
idiv
enter
decl
in
je
lret
cmp
mov
pop
pop
mov
stos
cmp
inc
xor
ljmp
in
or
cmp
hlt
nop
push
loope
inc
adc
lods
aad
je
xchg
rorl
decb
ret
and
jle
mov
mov
ds
mov
pushf
lock
ljmp
adc
in
roll
pop
dec
loop
push
pop
loop
xorps
lock
lret
sbb
or
das
cmc
into
mov
jg
push
mov
xchg
push
lcall
lods
pop
add
sbb
test
jmp
xchg
xchg
pop
pop
pop
or
sti
cwtl
jl
rolb
add
xchg
xchg
fstpl
mov
pop
jo
xor
sub
and
loope
stc
push
inc
jno
incl
in
inc
xchg
and
lret
xor
in
pop
clc
jne
jno
add
push
adc
cmp
out
push
cmpsl
int3
fwait
mov
fisttpll
or
int3
xchg
pop
xchg
mov
test
dec
jmp
pop
mov
sbbl
fnstenv
enter
mov
mov
cwtl
imul
test
mov
jg
pop
pushf
in
dec
pop
adc
jo
repnz
push
push
scas
mov
jg
mov
mov
fiaddl
popa
orl
daa
je
push
push
stc
and
mov
pop
in
pop
rcl
int3
jmp
jo
mov
std
xchg
xchg
jl
ljmp
cmc
adc
mov
inc
xchg
les
mov
fdivrs
es
push
xor
xchg
in
icebp
cmpsb
xor
ds
ret
mov
fisubs
call
dec
clc
inc
les
mov
jns
ret
and
scas
cmpsb
movsb
xchg
xor
decl
js
int3
jecxz
das
inc
add
ret
insb
xchg
add
pop
mov
xor
cltd
inc
or
decl
aad
insl
mov
into
es
or
leave
jecxz
pop
cmc
ret
jb
and
sar
in
outsl
ret
mov
ljmp
sub
inc
vminpd
mov
adc
jbe
sbb
dec
dec
ret
rcl
test
gs
jmp
pop
movl
jnp
add
es
cmp
mov
int3
adc
std
arpl
testb
mov
inc
jo
out
or
dec
nop
lcall
jmp
jnp
aaa
push
cmc
adc
test
stos
mov
sub
push
xor
jne
pushl
stc
sub
lock
or
sbb
push
subl
test
pop
imul
jmp
and
xor
insl
jle
dec
mov
jb
xor
hlt
ss
lcall
inc
or
mov
jo
iret
sub
lods
in
mov
push
inc
rcr
mov
pop
popa
mov
in
out
adcl
inc
dec
jecxz
inc
jmp
pop
in
push
push
ja
mov
xchg
jp
sub
lods
add
adc
or
push
jmp
mov
test
sbb
mov
mov
shll
sahf
ja
es
arpl
loop
jb
lds
shll
pop
pop
loope
int
fcompl
push
aaa
inc
mov
dec
xor
pop
test
dec
jp
jb
sbb
jl
andl
decl
sar
pop
push
mov
stos
jnp
gs
pop
sti
fcomip
stos
in
xchg
leave
lcall
fdivrl
pusha
mov
call
sarb
dec
inc
mov
fildll
lea
inc
out
mov
js
in
jbe
sbb
adc
cmp
clc
insb
stos
mov
dec
out
sbb
jb
lock
call
pop
sbb
adc
addb
adc
das
sub
jae
fadds
call
aam
or
add
mov
cmp
push
dec
arpl
aad
jg
pop
inc
out
dec
call
mov
add
lret
mov
jb
mov
add
xlat
pusha
nop
sub
fisubrl
call
mov
dec
lock
or
pop
mov
sub
push
notb
clc
sbb
xor
dec
adc
divl
mov
loop
pop
push
xchg
jmp
cli
ljmp
mov
idivb
pop
and
pop
in
fdivs
clc
pushl
rolb
and
pop
je
mov
in
in
push
jno
xorb
js
ljmp
fadd
mov
pop
popf
sbb
popa
jg
in
sbb
pushl
xchg
cmp
sub
lds
sbb
lcall
xlat
test
dec
dec
mov
push
cld
divl
int3
in
or
jle
cmp
lock
sub
sbb
incl
push
into
mov
jge
cmp
adc
push
outsl
push
daa
sub
adc
pop
inc
xchg
sar
decl
fxch
sbb
fisubs
iret
out
adc
daa
push
adc
add
pop
add
jg
pop
push
rcrl
aaa
xor
mov
inc
mov
icebp
jg
mov
mov
pop
xor
test
ss
movsl
lret
pop
je
in
jno
mov
das
mov
mov
xchg
jmp
ljmp
mov
sub
sbb
xchg
add
mov
xchg
mov
mov
ss
daa
dec
test
or
clc
rorl
clc
dec
push
or
inc
js
faddl
lcall
sbb
addl
out
adc
xchg
es
fst
cmp
aaa
sbb
add
dec
sbb
dec
ljmp
in
cld
jmp
jno
fadds
scas
cld
sub
mov
mov
jp
das
mov
je
call
ror
ss
sbb
or
scas
push
or
test
jbe
enter
icebp
dec
xchg
int3
xor
adc
sub
sub
aas
and
jle
mov
inc
in
pop
mov
lcall
mov
sbbb
mov
ja
sub
fcmovb
sub
sub
cmp
inc
mov
jmp
or
dec
lcall
sbb
jmp
loopne
js
dec
pop
fiadds
jmp
or
mov
cmp
add
mov
adc
into
and
or
mov
push
inc
push
and
mov
dec
adc
nop
mov
lcall
cltd
pop
jmp
je
aaa
xlat
jl
sub
lods
gs
fld
inc
decl
adc
sub
insb
add
adcl
loope
pop
cmp
lods
dec
decl
in
out
loopne
jle
scas
inc
stc
popa
fisubrs
xor
out
mov
aas
imul
mov
ds
hlt
mov
pop
pop
lret
jle
xchg
leave
jae
pusha
pop
mov
std
cmp
jno
lret
mov
or
dec
stos
and
push
jmp
mov
jnp
scas
mov
xchg
cmp
sub
push
mov
enter
ljmp
cli
pop
mov
inc
repz
push
push
jecxz
divb
ret
cld
ljmp
xchg
sbb
sbb
push
xor
mov
pop
and
xchg
dec
push
mov
int3
call
mov
sti
xor
std
pop
daa
sbb
outsl
jbe
adcb
jmp
xchg
outsl
lcall
add
pop
hlt
xorb
inc
lods
xchg
shlb
int3
cmp
out
nop
and
jo
xor
decl
call
inc
sbb
int3
push
cwtl
push
mov
adc
sbb
inc
loop
ljmp
int
shrl
pop
push
adc
das
stos
ret
icebp
mov
or
ja
out
test
imull
rolb
lods
fisubrs
in
loope
ja
mov
dec
lcall
out
and
jl
jge
sbb
lds
faddl
jmp
jbe
dec
xchg
mov
dec
pusha
mov
and
ret
sti
int
outsl
inc
pop
push
xor
xchg
lret
jae
sub
mov
shlb
mov
pop
insb
jmp
cs
fistpl
xchg
nop
lods
gs
imul
sub
bound
int3
int
xchg
lea
fsts
out
decl
data16
push
cmovp
push
test
cmp
lret
int
mov
or
jmp
lods
sbb
mov
sbb
xchg
sub
subb
cs
subl
sbb
hlt
pushl
out
rol
fnstcw
or
mov
push
sub
xor
jmp
jl
cmp
out
jg
push
or
jae
push
cld
adc
ret
fstpl
arpl
incl
inc
xchg
fisubl
lcall
into
cmc
aaa
add
inc
lret
sbb
and
jle
loopne
xlat
popf
je
call
add
lea
repz
repz
stc
mov
aam
dec
sbb
push
jo
pushl
cli
jne
push
lods
sub
pop
jb
pop
cli
shll
scas
pushf
clc
pop
shrl
fldt
and
ret
sbb
add
dec
scas
cmp
icebp
jae
es
int
fcmovnu
or
fs
mov
js
int3
arpl
decl
push
dec
push
aam
and
movsb
jbe
lock
in
jo
push
jp
jno
ds
call
cmp
les
aas
movsl
out
imul
sti
imul
inc
data16
jmp
dec
gs
inc
cmc
popa
fdivl
and
or
out
add
mov
popa
bound
jmp
or
cmp
push
inc
and
xor
aad
jae
mov
mov
dec
mov
fcmovnb
mov
fwait
jnp
mov
sbb
push
mov
jg
orl
lock
pop
mov
pop
xor
rclb
scas
int
or
cmp
mov
adc
aas
ret
fstpt
xor
sub
jp
xchg
aaa
jb
test
jp
ja
movsl
int
lods
icebp
pop
jle
and
sbb
push
ja
xlat
jnp
mov
pop
mov
mov
ret
mov
mov
sarb
cld
adc
fs
ret
loopne
mov
ret
push
dec
xchg
and
rorl
decl
add
into
test
xchg
aaa
mov
int
dec
pop
out
push
call
pop
inc
arpl
in
push
lahf
mov
xchg
sbb
inc
in
push
cltd
dec
jecxz
decl
xor
scas
ds
lahf
jecxz
cmovo
xchg
and
or
lods
pop
pusha
dec
push
shll
cmp
ret
jle
mov
fnsave
jmp
pop
jno
sarl
xor
shrl
add
scas
mov
lcall
push
sub
lret
testl
subb
mov
mov
loop
jg
leave
push
pop
mov
jl
push
gs
test
enter
cmp
mov
movq
mov
and
rcl
roll
fdivrp
mov
cld
push
jae
xlat
push
add
and
fcomp
adc
ja
jo
call
incb
lea
jmp
rolb
jae
rclb
clc
fisttps
aad
outsb
lcall
xchg
sbb
xchg
pop
lret
cmc
cmp
ljmp
xchg
xor
fdivs
xor
sub
lret
std
mov
pushl
pusha
jl
popf
or
adc
inc
fdivs
add
or
push
xorb
out
inc
aaa
fisubl
std
sbb
ss
movsb
nop
sbb
pop
mov
out
add
xchg
cli
pushl
jp
cs
outsl
jb
repnz
jge
jne
aad
test
data16
mov
in
out
cs
iret
mov
mov
push
mov
mov
pusha
mov
push
sbb
push
loop
stc
cmc
icebp
adc
and
nop
cli
mov
cmp
repnz
in
jl
xor
in
mov
cld
in
push
rcrb
repz
cmp
pop
fwait
jl
cld
jmp
js
mov
jno
and
ret
dec
movsl
or
mov
loop
js
inc
ret
jno
test
ljmp
loop
repz
dec
jge
or
rcll
sbb
or
rcl
scas
lcall
lcall
dec
mov
adc
adc
loop
fisttpl
cmp
fildll
pop
mov
adcl
ljmp
or
ljmp
ret
mov
clc
mov
push
idivl
push
sbbb
xor
mov
decl
sub
imul
xor
lcall
xor
les
mov
jmp
sbb
loopne
fisttps
jl
aas
push
leave
fcoml
clc
cmp
mov
pop
inc
cmpb
jmp
mov
dec
out
sub
cli
adc
out
dec
add
push
lcall
push
lahf
xchg
iret
js
fwait
out
pop
out
pop
arpl
cmp
or
sub
xchg
data16
and
test
cmp
js
test
add
cmc
orb
ror
and
and
ja
sub
jg
mov
scas
stos
mov
daa
mov
sub
clc
jge
notb
mov
adc
scas
and
pop
ds
xor
icebp
call
adc
xor
repnz
les
aas
adc
fwait
lcall
hlt
out
pop
mov
popa
rolb
or
jl
xor
cltd
push
push
shrl
cld
ret
sub
stos
out
jge
cli
sub
or
call
cmpb
mov
jp
test
mov
std
ss
xor
cli
call
xchg
and
repnz
jb
push
jnp
xchg
sub
push
mov
push
fdiv
push
scas
pop
xchg
dec
pusha
ja
es
mov
mov
pushl
inc
mov
inc
hlt
mov
jne
mov
andl
imul
xchg
push
out
std
jmp
call
ret
jbe
inc
jmp
int
push
ret
and
scas
or
scas
cli
pushl
xchg
pop
addl
xlat
imul
inc
pop
call
dec
mov
test
dec
pop
lods
test
ljmp
outsb
dec
and
adc
fiaddl
rolb
loope
inc
jnp
int
and
pop
mov
push
xchg
je
adc
ret
fadd
out
sar
call
sbb
and
jp
sar
js
push
lret
hlt
fadd
add
clc
leave
mull
stos
mov
pushl
sbb
sbb
mov
cs
xor
in
sbb
iret
outsb
lods
cmp
outsl
cli
fimull
and
or
jle
sub
popf
cmp
into
fisttpll
inc
dec
cmp
pop
orb
call
mov
mov
ss
dec
sbb
in
int3
hlt
lods
shlb
pop
cmpsl
mov
mov
cmp
outsb
mov
loop,pn
push
sbb
in
mov
mov
sti
adc
xor
ljmp
fcomip
ljmp
clc
lods
push
fldl
push
pushf
rcll
push
aad
sub
jg
or
cmp
aaa
sub
jg
roll
xor
imul
dec
add
imul
push
mov
cld
movsb
mov
ljmp
and
sub
inc
inc
mov
add
call
xor
movsb
cli
mov
adc
jp
mov
xchg
lcall
dec
cli
fcomp
or
shll
pop
mov
dec
aad
insl
lret
add
jo
xchg
push
mov
test
lret
fstps
lret
adc
mov
pushl
loopne
mov
sbbb
cmp
mov
lahf
pop
ljmp
aas
lcall
mov
push
jno
cltd
iret
jg
int
icebp
cld
cwtl
gs
imul
adc
jl
scas
out
in
call
outsb
stos
mov
and
pop
dec
push
add
pop
dec
mov
and
pushl
sub
sbb
mov
xor
sbb
jg
lods
mov
sub
xchg
pop
loopne
ljmp
mov
repz
dec
xchg
cli
jo
icebp
inc
sahf
addr16
addr16
xchg
lea
testl
movsl
mov
dec
or
addr16
sub
mov
mov
sbb
dec
inc
shl
cmp
cmp
push
imul
sti
lret
dec
jbe
jo
add
mov
lods
cmp
or
enter
xchg
cmp
ljmp
lock
call
mov
test
shlb
xchg
notb
pop
or
ljmp
in
inc
iret
sahf
push
jne
mov
adc
andl
sarb
sub
mov
ljmp
int3
pop
push
xchg
jge
cmp
ja
mov
push
out
clc
lcall
push
and
cmc
adcb
pop
xchg
shlb
sub
cmp
mov
outsl
insl
aam
scas
cmp
mov
mov
fsubs
lcall
inc
inc
outsb
sub
mov
neg
popa
loope
push
scas
mov
stos
jl
jmp
sub
push
xor
mov
testb
fs
icebp
incl
push
mov
in
pop
loop
imul
in
cmpsl
mov
cmpsl
inc
mov
jg
fbstp
leave
arpl
shlb
stc
movsb
in
xchg
pop
out
push
sti
pop
std
adc
jo
or
jle
nop
xorl
inc
xlat
or
inc
mov
or
and
std
in
rcrb
shll
les
push
fdivs
imul
imul
and
jno
and
cli
fsts
or
ret
xorl
sti
aas
jmp
pop
subb
xchg
xchg
jae
push
in
call
jbe
and
mov
cmp
aam
dec
repz
rcrb
and
jg
mov
push
push
pop
sbb
cwtl
mov
sub
call
dec
inc
xor
cmpsl
mov
gs
add
test
mov
cli
pop
std
adc
lret
outsl
sti
fs
add
out
lea
cwtl
inc
mov
add
cmp
jb
mov
enter
cmp
xchg
enter
jmp
mov
dec
loope
shlb
repz
xlat
jge
clc
sub
jg
ljmp
cli
mov
mov
sbb
loop
mov
xor
iret
pop
add
movsb
lahf
pop
xor
lock
pushl
pusha
mov
cmp
icebp
mov
jecxz
arpl
adc
adc
gs
fisttps
push
mov
and
sub
sbb
pop
insl
adc
dec
scas
cmp
cmpsb
call
nop
jns
mov
leave
jmp
sub
push
lock
sub
push
push
xchg
decb
mov
repz
adc
pushl
vaddsd
push
dec
push
lods
xor
call
ljmp
jecxz
jne
adc
inc
daa
cmp
jge
ljmp
ljmp
jl
adc
popf
mov
or
aaa
test
mov
fdivr
jmp
fbld
loopne
push
fildl
cld
push
addr16
sub
mov
xchg
pop
enter
xchg
iret
cwtl
ds
or
out
cli
ljmp
jb
sbb
pop
aam
es
imul
outsl
call
xor
sub
cmpsl
cwtl
subb
mov
push
out
sbb
mov
ljmp
dec
mov
dec
add
mov
pop
inc
push
jmp
xchg
or
lret
bound
pop
adc
mov
lods
aam
in
scas
in
sub
sahf
pop
mov
push
push
fcoms
inc
xadd
call
loopne
or
jns
sbb
rclb
fwait
repz
push
and
mov
inc
in
jmp
inc
inc
stos
add
nop
fisubrl
cmpsl
in
out
fcomps
or
push
push
jmp
rorb
add
fcos
incl
movsl
and
imul
nop
mov
loopne
mov
imul
mov
outsb
enter
mov
inc
shl
out
xlat
push
cld
cld
dec
cltd
adc
int3
inc
adc
push
sub
incl
xchg
and
push
shlb
inc
adc
pop
mov
dec
insb
cmp
cmp
dec
xchg
fwait
inc
jg
pushl
js
rorb
cmpb
jnp
ror
mov
and
mov
dec
sar
mov
pop
repz
ja
outsl
dec
lahf
mov
adc
std
jnp
jbe
jo
dec
js
cmpsl
fwait
cmp
out
mov
xchg
in
ja
aas
in
mov
out
adc
stos
or
stc
loopne
out
clc
pop
divb
add
mov
fnstsw
shlb
mov
decl
loop
add
pop
pop
push
dec
in
or
jge
dec
test
ljmp
and
out
add
shlb
adc
cmp
aam
ja
jns
inc
push
lcall
fsubl
push
xchg
or
and
out
ja
inc
pop
xchg
leave
lcall
cmp
ljmp
bound
xor
int
add
dec
add
idivl
mov
cmp
lods
fcomip
dec
adcb
icebp
cs
push
repz
adc
ffree
sbb
filds
lcall
repz
shll
dec
or
popa
pop
push
mov
popa
pop
mov
jmp
pop
jl
adc
out
pushf
or
jl
mov
lcall
xchg
jmp
js
sbb
aam
sub
jmp
sahf
rclb
xlat
mov
movsb
mov
jbe
lcall
popa
cmp
ror
adc
scas
cmpsl
movsb
sub
mov
lock
sub
ljmp
cs
push
sbb
rcl
in
addr16
insb
aaa
adc
xchg
dec
sub
mov
pushl
jmp
pop
test
mov
jbe
cmpb
mov
nop
sub
js
das
mov
mov
lcall
icebp
not
or
or
jo
in
xchg
dec
ljmp
lret
pop
ljmp
arpl
cmp
cltd
inc
mov
cmc
fisttpl
jmp
inc
incl
movsb
mov
orb
xchg
xlat
int
cltd
mov
dec
pop
repnz
ret
jo
lods
push
mov
sar
incl
ljmp
push
pop
push
mov
dec
mov
das
cmpsb
mov
lea
cmc
pop
xchg
inc
xor
into
imul
mov
add
jge
xchg
sbb
inc
adc
dec
mov
shlb
sub
inc
xor
inc
sbb
cmp
test
sbb
xchg
sub
jecxz
push
mov
popf
ds
jb
pop
push
fsubrl
je
push
iret
jbe
in
inc
cmp
push
jg
xlat
inc
sarb
or
aas
add
push
scas
jbe
imul
cmp
jmp
dec
or
pop
ja
fsubl
loope
fnstcw
andb
cmp
inc
int
aam
scas
jns
push
mov
push
fsubrs
cmpsl
andb
inc
iret
lea
sbb
jnp
xor
rcll
cmc
mov
pop
loop
shlb
push
repnz
aaa
inc
rorl
popf
inc
call
sahf
xor
xor
sbb
fxch
cld
pop
inc
les
pop
lds
push
stos
push
decl
outsb
xor
dec
jg
fs
dec
stc
icebp
xchg
or
pop
aaa
clc
add
lcall
jg
in
inc
adc
roll
adc
cmp
scas
test
out
push
pop
mov
test
mov
std
ljmp
cli
lods
fidivs
cmc
clc
cmp
lahf
push
pop
adc
adc
mov
outsl
lea
fidivs
jb
and
jg
and
fcoms
pop
ror
lret
lcall
jmp
lret
call
std
ret
adc
out
push
test
lahf
data16
mov
cli
jg
mov
movsl
xchg
imul
icebp
fisttps
pop
sbb
ss
push
arpl
int3
repnz
stos
rcrb
sub
mov
push
push
mov
incl
xchg
add
dec
or
out
cmp
ljmp
icebp
push
lret
sbb
mov
shlb
mov
jl
pop
xlat
pop
push
mov
mov
pop
pop
adc
inc
je
fists
out
cli
mov
push
mov
xlat
xor
insb
mov
inc
negl
scas
mov
cmpsb
outsb
mov
enter
jle
fwait
icebp
cmc
jo
jge
push
mov
mov
sub
stc
push
pop
inc
mov
jl
sbb
bound
test
in
inc
pusha
mov
rolb
sub
rep
xchg
arpl
decl
call
leave
test
dec
pop
xor
lret
dec
fisubrs
mov
lds
mov
jb
jg
sbb
pop
lds
call
mov
pop
pop
inc
stos
jge
and
out
fs
imul
mov
stos
cmc
mov
lret
movsl
or
push
sbb
pop
cmp
inc
sbb
sti
sti
push
std
lcall
lahf
mov
fs
push
arpl
inc
mov
out
out
aam
jle
call
and
jp
cmp
psubd
aas
xlat
mov
hlt
xor
call
in
int3
xchg
rclb
mov
pop
sahf
cmp
sub
and
or
ret
push
ss
popf
mov
lret
push
cltd
decl
pop
jae
xor
adc
cmp
lcall
dec
ficomps
jnp
call
incl
repnz
inc
add
pop
fwait
push
stos
dec
pop
adc
sub
test
jecxz
incl
pop
add
or
jle
fistl
fdivl
lret
mov
or
mov
inc
mov
and
cmp
jnp
icebp
pop
out
outsl
cli
or
call
std
jle
inc
in
insl
movhps
fwait
xchg
xor
shlb
sbb
xchg
and
std
jmp
cwtl
mov
push
shufps
cmp
pop
ret
push
push
add
adc
sti
pushl
rol
dec
xchg
cmp
cwtl
xor
sbb
push
cmpsb
cmp
mov
push
mov
inc
dec
ljmp
repnz
shlb
test
in
pushl
mov
sti
ja
sub
hlt
add
push
ljmp
jp
ret
insb
mov
mov
mov
into
cmp
jno
lods
sbb
int
and
add
ljmp
jae
int3
push
add
popf
fwait
xchg
pop
adc
in
cld
fsubr
stc
cmp
dec
cs
jmp
ror
pushl
cmpb
jae
add
cmc
pop
movsl
lret
xchg
icebp
push
les
dec
dec
xor
jnp
movsl
xchg
stos
jbe
xchg
enter
adc
test
test
cld
pop
enter
xchg
pop
icebp
enter
outsb
jecxz
mov
mov
ljmp
insl
aaa
cmp
lods
gs
xchg
jns
xchg
inc
jle
movsb
aad
jbe
mov
jle
jg
cmpsl
decl
push
pop
in
aad
xor
lods
cltd
and
adc
cmp
rorl
mov
in
ljmp
iret
sahf
scas
adc
and
imul
sub
arpl
and
mov
incl
cmpsl
dec
int
sbb
fldt
adc
push
pusha
aam
dec
bnd
decl
iret
rclb
mov
mov
stos
lea
fwait
dec
add
call
fists
mov
inc
sti
fwait
cli
aas
test
sub
cmp
in
bound
cli
jmp
sub
popf
xchg
cmp
and
or
pop
loop
pop
jo
nop
add
imulb
outsb
adcl
in
insb
movsl
scas
jg
xchg
dec
mov
cs
lcall
push
mov
movsb
inc
adc
add
adc
xchg
dec
adc
clc
push
mov
decl
push
adc
test
in
push
leave
data16
adc
dec
jmp
ds
decl
mov
sub
xchg
mov
add
lods
jnp
stos
push
jge
mov
mov
call
in
lds
xchg
sub
or
mov
stc
je
decl
sbbb
stos
sub
xchg
rcrl
sbbb
jbe
jge
push
aad
push
cmp
sbb
jbe
fildl
mov
cwtl
in
nop
lods
push
std
and
stos
call
cli
or
jmp
jns
push
test
mov
test
add
xlat
outsb
add
leave
popf
imul
mov
inc
mov
and
cmpsb
xor
ds
pop
inc
xchg
call
ss
fs
pushl
mov
aaa
lea
sub
add
mov
mov
hlt
mov
add
mov
adc
push
cs
adc
cld
aad
and
cwtl
int3
lock
nop
mov
mov
mov
xchg
inc
stos
jmp
fldenv
repz
mov
mov
jl
movsb
in
test
out
jmp
xor
cld
or
stc
lret
mov
cmp
jb
adc
rclb
mov
ficomps
je
loope
cmpsb
cltd
stc
pushf
dec
sbb
enter
fcompl
push
cwtl
adc
adc
cmc
jmp
outsb
insl
js
push
gs
rorl
jmp
gs
push
ret
mov
push
test
repz
jno
adc
jo
cmp
mov
ja
in
cmp
push
mov
out
inc
in
push
push
mov
and
sar
pushf
add
lds
test
push
nop
adc
lock
lcall
sub
adc
ficoms
lahf
popf
xlat
repnz
sub
inc
mov
adc
ljmp
rolb
jge
pop
cmc
ds
leave
out
and
mov
fwait
test
cmp
sbb
inc
jmp
fcompl
clc
pop
xchg
lea
loope
pop
xchg
add
lds
std
decl
das
sbb
add
pop
sub
sahf
push
mov
xchg
lcall
call
xor
ret
sbb
sbb
ss
repz
xchg
std
call
or
fisttpl
xchg
fsubrl
pop
out
xor
and
push
xchg
adc
cmpb
notl
out
jne
icebp
lcall
aad
adc
outsl
pushl
incl
xchg
mull
out
mov
xchg
cmp
sbb
cmp
xlat
cmpsl
jg
inc
cmp
and
cs
lahf
sub
sahf
adc
ljmp
mov
repnz
push
test
lods
add
sub
jmp
jmp
cmpsb
insl
fwait
notl
cmpsl
lods
inc
cmp
add
movsl
movsl
and
dec
inc
popa
mov
push
clc
decl
or
fldl2e
lock
sbb
dec
mov
out
sbbb
or
pop
std
sbb
int3
pop
cld
notl
shl
mov
dec
mov
or
lea
inc
jns
pop
xlat
movsl
inc
mov
xor
inc
call
pop
xchg
fdivrp
cmp
call
out
fwait
mov
pop
dec
xor
pop
repz
sub
in
sti
lcall
ljmp
daa
jg
insl
dec
lcall
adc
jno
jg
push
cmpsb
jb
mov
pushf
cmpsl
xor
rclb
xchg
jae
out
incb
lcall
std
sbb
mov
fcompl
dec
mov
xchg
pop
mov
push
or
in
jg
loopne
pusha
test
adc
out
jns
mov
aam
mov
ljmp
pop
sbb
xorl
add
or
mov
loopne
dec
inc
push
jl
sbb
jns
inc
pop
mov
insb
and
std
gs
mov
mov
nop
shlb
add
mov
cmpsl
xchg
push
xlat
pop
mov
and
decl
push
lret
lret
sbb
in
test
in
sub
adcb
pop
mov
xchg
adc
fists
jl
pop
jecxz
sldt
dec
in
mov
add
adcl
xor
mov
mov
xchg
add
mov
lahf
fisttpl
dec
cmp
lcall
pop
push
shr
ret
xchg
pop
jge
or
push
insl
add
dec
addl
jle
push
or
fwait
addr16
jp
xor
and
pushf
fldl
pop
int3
sahf
sarb
lcall
xor
div
movsb
jg
and
pushl
xchg
add
mov
or
cmp
sarl
adc
mov
push
decl
xchg
mov
sub
imulb
in
xor
sahf
pop
frndint
xchg
orl
adc
or
les
inc
je
popl
ucomiss
lret
subl
aas
mov
push
sub
psubw
bound
scas
rorb
adc
call
jns
cmp
lea
or
and
xor
cli
dec
push
in
ror
push
xchg
lret
popa
cwtl
or
dec
and
xlat
lcall
ljmp
jg
cmp
outsb
mov
loopne
sbb
int3
mov
iret
inc
lcall
icebp
andb
shrb
push
mov
push
sti
addr16
arpl
push
lods
mov
les
mov
mov
pop
jns
aam
inc
push
andb
push
inc
pushl
xchg
mov
push
cmp
bound
hlt
bound
cmc
stc
shlb
jl
inc
scas
push
fdivr
inc
cmp
decl
jmp
enter
stos
jb
frstor
mov
dec
or
dec
mov
mov
stos
xlat
xor
xlat
int3
and
std
pop
gs
sub
or
jl
inc
std
ljmp
fdivrs
or
popa
je
sub
jg
add
mov
adc
add
fnsave
and
cld
call
lret
test
dec
repnz
pop
movl
xor
inc
jle
or
dec
andl
js
loopne
fdivr
ljmp
or
inc
sub
mov
fstpt
scas
addr16
dec
lcall
sub
mov
dec
jns
dec
repz
jb
outsb
nop
int3
incl
jecxz
rcll
cmp
inc
cmpsl
jo
shr
jo
push
out
xor
dec
pop
lock
decl
cltd
adc
push
mov
xchg
mov
je
sbb
pop
push
out
inc
xchg
lea
pop
xor
scas
mov
xor
ljmp
into
xor
pop
lret
rcrl
jbe
lret
add
ds
xor
es
clc
mov
jmp
jle
decl
rorl
aad
jb
inc
add
mov
insl
pushl
xor
sbb
ret
loope
dec
movsb
fs
pop
aaa
movsl
add
sub
push
cs
aas
mov
insl
add
sarl
sti
jb
add
jo
fdivr
mov
lcall
or
jmp
data16
dec
shll
push
je
sti
jmp
cwtl
mov
mov
jno
push
cmp
mov
fnstenv
jecxz
xor
das
rcr
fucomip
and
cmp
xor
adc
incl
mov
mov
push
loop
mov
mov
pushf
imul
lods
mov
incl
lret
jbe
adc
push
jo
arpl
push
jne
mov
test
enter
arpl
adc
jo
imul
imul
pop
test
jmp
inc
mov
outsl
mov
punpcklwd
in
push
cli
sbb
xchg
add
dec
add
mov
jmp
cmp
xchg
incl
push
rcr
sti
push
andb
push
int
cmc
pusha
ds
in
int3
add
test
ljmp
data16
ss
shlb
mov
stos
push
decl
sahf
jge
ret
inc
arpl
push
pop
outsl
loope
pop
dec
add
lds
fs
mov
mov
or
lock
fcomip
shlb
sub
xchg
mov
pop
inc
mov
popa
pop
push
pop
cli
jmp
sahf
sub
push
test
push
shl
cs
adc
jne
mov
sbbb
sbb
jmp
or
rcrb
sarl
and
ljmp
xchg
push
mov
lret
es
inc
loop
cltd
xchg
pushf
cltd
int3
lcall
aad
gs
jns
bound
cmp
call
mov
cmc
sbb
dec
push
cs
push
insb
sti
mov
cmp
ret
fnstcw
pop
cmp
cmp
and
adc
cwtl
lea
jge
add
in
mov
xchg
jmp
xchg
loopne
adc
sarl
mov
aad
je
jbe
pop
sbb
jg
pop
pushf
or
test
push
cmp
sub
gs
bound
std
xchg
out
and
decl
out
in
movsb
ljmp
dec
sarl
mov
or
push
pop
jno
add
pushf
inc
pusha
cs
cmc
scas
cli
mov
in
cli
cld
dec
int3
mov
idivb
dec
ljmp
dec
loop
jnp
leave
sbb
cs
es
push
xor
sub
shrl
mov
jmp
jmp
sub
mov
xlat
aaa
outsb
lock
sub
cltd
adc
xchg
xor
inc
cmp
int3
cs
call
inc
cmpsl
xor
cmp
pusha
call
sbb
cmp
sub
nop
sar
sti
push
lock
mov
jle
aas
into
dec
lock
jne
sub
lods
sub
decl
mov
in
xchg
cmp
inc
xchg
lods
notb
push
pop
push
rorb
ret
lock
decl
jmp
cmc
pop
xchg
repz
dec
sbb
js
stos
in
cmp
dec
mov
vhaddpd
ljmp
jo
aaa
das
gs
outsl
jmp
sub
hlt
int
mov
inc
incl
repnz
cld
cmpsl
xor
sub
or
loope
test
inc
jbe
fmull
and
add
inc
dec
or
ja
inc
rcll
mov
in
insl
adc
add
filds
adc
mov
mov
pop
andl
das
repnz
popa
adc
pop
shrl
ja
in
inc
cmp
repnz
fcos
out
adc
hlt
xor
sub
test
mov
dec
xor
mov
outsb
dec
call
and
mov
loop
int3
push
in
push
fsubs
mov
pop
push
jae
mov
lcall
sub
fisubs
insb
cmp
inc
mov
int
dec
mov
jg
sar
xchg
repz
leave
nop
add
daa
add
jmp
mov
lcall
mov
lret
jecxz
ljmp
pop
sti
test
movb
lcall
gs
fs
dec
xor
and
xlat
mov
popf
or
insb
pushf
mov
call
or
insl
mov
out
dec
inc
ficompl
inc
test
xchg
cltd
mov
mov
push
add
decl
sub
loop
lahf
adc
mov
mov
jle
xchg
pushl
push
and
pushf
aad
push
push
les
pop
mov
xor
cmp
std
pop
sahf
mov
jno
or
xlat
into
dec
cmp
aad
ret
into
mov
xchg
ljmp
xor
and
lret
jbe
push
or
cmp
jno
cmp
decl
scas
xchg
ja
hlt
outsb
iret
add
push
sahf
push
xchg
jb
mov
add
mov
xchg
xchg
dec
sub
jmp
cpuid
out
loope
xchg
mov
jge
mov
or
ljmp
inc
ss
jge,pn
and
xchg
call
sbb
dec
lods
cld
mov
add
mov
xchg
adc
into
jb
xlat
sub
sarb
pop
jae
jbe
ja
jmp
int3
popa
mov
xchg
mov
mov
xchg
out
and
sub
test
adc
xchg
lret
mov
negl
dec
sbb
adc
in
cmp
mov
test
cwtl
mov
arpl
jmp
xor
lods
mov
lcall
andb
fwait
sbb
adc
pop
sbb
jne
xor
cli
or
jnp
lock
jge
or
insb
mov
add
cmp
mov
jns
xor
push
cmpsl
in
clc
pushl
xor
lods
pop
push
loope
pusha
loopne
or
popf
loopne
dec
out
fs
xchg
fisttpll
and
out
ss
leave
in
mov
jl
lock
mov
aas
std
adc
jl
add
in
nop
rorl
aad
notl
mov
xchg
shrb
or
lods
push
dec
push
cmp
jge
lcall
cld
repz
mov
pop
or
push
or
jecxz
andb
scas
cmp
xchg
cli
xchg
adc
call
mov
jge
mov
push
mov
mov
inc
loop
cmp
sbb
xchg
js
push
mov
dec
test
cmp
enter
lcall
out
pop
mov
cld
lret
fcoms
lock
shl
pop
sub
adc
adc
clc
and
stos
xchg
sbb
cmpsb
in
cmp
shrl
decl
mov
sub
or
and
mov
jns
aaa
mov
stos
stos
scas
dec
fstpl
insb
dec
push
sbb
decl
movsl
incb
mov
sub
mov
sbb
cmp
js
shlb
mov
mov
sarl
les
cmc
mov
les
in
push
mov
test
fdivs
cmp
clc
sbb
mov
mov
inc
pop
or
int
int
decl
pop
mov
mov
aas
fists
jle
mov
dec
mov
test
incl
rcr
jae
lods
xchg
and
xchg
cmp
add
stos
jecxz
out
mov
flds
mov
in
cmpsl
dec
jecxz
je
inc
shrb
lcall
enter
in
into
pop
pop
in
xor
test
mov
imul
fnstenv
notl
sub
mov
rcrl
xchg
sbb
push
lcall
xchg
ror
jg
out
pop
pop
mov
stc
dec
and
dec
jge
dec
insb
call
lcall
push
pusha
jo
in
push
or
xchg
sub
mov
outsb
in
xor
mov
or
jmp
ret
push
cld
call
mov
pop
addr16
clc
pop
fmull
ds
call
out
pushf
and
jmp
pop
loopne
sub
insl
mov
or
pop
rcrl
and
aas
and
cmp
sub
shl
jno
scas
xchg
mov
inc
and
shll
out
dec
and
push
dec
stos
pushl
push
add
dec
mov
sub
jecxz
xor
test
or
cmp
ljmp
in
aam
xchg
lahf
sub
shr
cltd
adc
out
sub
ja
pop
jmp
hlt
jmp
je
gs
inc
jecxz
dec
mov
add
add
lcall
adc
jbe
mov
popf
mov
cli
lret
jge
jl
cmp
data16
pushl
and
xchg
and
mov
or
mov
add
jo
jne
movb
subl
ljmp
cmp
xchg
sub
test
mov
popa
push
cwtl
dec
push
sub
fildl
cmpsl
arpl
mov
jmp
in
jle
sub
jmp
and
sbb
mov
andb
testl
decl
xor
mov
xlat
in
int
and
push
and
out
mov
in
mul
outsl
push
stc
cmp
jl
xor
insl
es
arpl
incl
cmp
sub
mov
or
ror
pusha
decl
pop
je
ljmp
sub
sahf
sub
xor
xchg
shr
addr16
mov
ljmp
test
dec
cmpl
outsb
sti
dec
cwtl
loopne
sbbl
rclb
mov
jmp
out
shrb
sti
daa
dec
imul
jnp
movsl
adc
mov
xchg
cld
aaa
or
das
movsb
loop
jmp
loopew
pop
cld
jb
test
lods
mov
or
sub
insb
movd
pushl
es
push
pop
dec
xor
repnz
xor
push
add
and
pushl
call
shl
xor
andl
add
popa
xlat
and
pushl
mov
test
sbb
mov
bound
test
call
icebp
xchg
mov
adc
adc
out
aad
mov
cmp
ds
xlat
imul
aam
arpl
add
jns
gs
in
leave
mov
fwait
jo
shll
pushl
aas
push
leave
sub
and
out
xchg
cs
dec
xorl
ds
ljmp
inc
cmp
push
insl
fcmovu
xor
enter
xchg
in
xor
incl
sbb
ficoms
stos
dec
cmp
jp
andb
push
lods
int3
stc
decl
and
adcl
cmp
jne
push
pop
mov
test
cli
imul
xlat
fs
ret
inc
jmp
insb
mov
mov
cli
dec
aad
rolb
lret
add
xor
in
repnz
pop
out
sbb
mov
mov
incl
mov
scas
push
hlt
pop
sahf
sbb
in
sbb
mov
cli
jecxz
jbe
in
push
cmp
inc
adc
jmp
jae
movsl
cwtl
repnz
pop
std
imul
xchg
dec
lock
mov
cs
clc
repnz
sbb
scas
jmp
jg
xchg
les
cmp
pop
sahf
mov
jg
ret
in
jmp
aam
mov
mov
jl
mov
out
lock
scas
sub
sub
push
pushl
jns
dec
mov
inc
mov
adc
pop
out
or
mov
inc
or
decl
xchg
mov
js
ret
mov
pop
mov
std
lods
vsubps
mov
or
ljmp
pop
loop
xor
dec
mov
ljmp
mov
addr16
mov
or
xchg
sub
dec
cwtl
jbe
gs
jg
mov
test
sub
and
sbb
mov
addr16
mov
lcall
call
lock
adc
lods
add
rclb
mov
mov
jle
pop
fadd
and
sbb
push
lahf
fcoml
jo
ret
jp
xchg
push
jg
jg
xchg
jg
aam
andl
loop
es
stos
imul
repz
sbb
in
pop
mov
iret
xchg
icebp
xor
or
jae
pop
jnp
icebp
ljmp
fadd
mov
rcrb
orl
mov
mov
xchg
pop
jno
jecxz
cli
das
ficompl
shrb
mov
sub
cmpsb
dec
jge
mov
in
fucomip
fiadds
mov
inc
out
daa
clc
pop
pop
sub
lcall
mov
add
xor
add
dec
pushl
jge
cmp
hlt
repz
mov
movsl
imul
ljmp
xchg
xor
decb
and
in
call
pop
cmp
mov
gs
and
dec
in
incl
sahf
cmp
fcmovnb
imul
mov
jge
popa
mov
lods
nop
inc
cmp
jg
cmpsb
mov
lahf
pop
push
jb
insl
outsb
nop
fnstcw
pop
xchg
sub
or
dec
lock
fisubrl
lahf
aas
imul
mov
cmpsb
sbb
dec
lock
or
ds
iret
dec
mov
jg
sahf
push
in
aam
or
fs
mov
dec
cmc
das
sarb
mov
jnp
push
clc
add
xchg
imul
pop
sbb
stos
repnz
mov
push
fldcw
dec
adc
clc
call
mov
fisttps
xor
mov
xor
cltd
or
lcall
loopne
addr16
add
jnp
mov
xlat
test
testl
clc
cmc
mov
xchg
add
add
incb
inc
fwait
out
xchg
repnz
incb
adc
jg
decl
sub
mov
pop
hlt
xchg
mov
inc
mov
jg
call
mov
aad
test
sub
ja
fwait
mov
cmp
pop
std
cmp
mov
leave
mov
cmp
sbb
jmp
sahf
push
pop
lcall
decl
xchg
cli
dec
sti
ret
pusha
sub
jne
push
repnz
and
call
adc
jb
mov
or
clc
fptan
lret
orb
popa
inc
mov
stc
jmp
nop
out
inc
pop
xor
push
add
xchg
xchg
push
daa
dec
sub
mov
pop
sub
mov
in
cmpsb
inc
in
stc
adc
js
fdivr
frstor
xor
addr16
jmp
notb
cmp
adc
jg
imul
jg
sub
pop
sbb
cmp
add
mov
ficoms
div
jo
xchg
push
in
inc
xchg
mov
clc
mov
mov
or
cmp
cmp
mov
nop
cld
xor
iret
cwtl
cmpsl
adc
mov
into
add
dec
push
sbb
mov
scas
stos
aad
sub
ja
xchg
mov
dec
cmp
ljmp
shr
sbb
push
aas
cmp
mov
add
repz
inc
decl
mov
decl
sbb
rcll
cltd
inc
loopne
imul
stos
pushl
add
mov
cmp
shlb
mov
mov
push
outsb
xchg
sahf
inc
incl
ret
sbb
flds
add
out
lea
dec
jge
adc
jmp
dec
nop
cmp
add
ds
jnp
jbe
push
fildll
or
das
cli
cltd
xchg
js
lcall
push
jns
cmp
out
sbb
xor
orl
mov
rcrl
inc
jb
xor
adc
and
xlat
lea
jnp
mov
call
fs
jecxz
shll
enter
xor
jl
test
cmp
decl
mov
leave
mov
dec
cmpb
sbb
out
lahf
ret
rcr
cmp
dec
outsl
jbe
cwtl
mov
in
cmp
cmp
outsl
mov
cltd
inc
lcall
fxch
dec
cmpsb
push
lds
mov
push
lcall
cmpsb
adc
loopne
xchg
cli
jno
incl
hlt
mov
mov
out
dec
and
lock
lods
sar
mov
mov
jae
incl
inc
pop
sarb
dec
leave
mov
jecxz
xchg
add
cmp
scas
fdiv
pop
sub
inc
cmp
insb
and
sbb
outsb
sbbb
iret
add
std
and
xor
mov
cmpb
jmp
lret
xchg
sbb
mov
sbb
clc
sub
in
add
jle
decl
pushf
xorb
push
push
outsl
ret
lods
sbb
aad
inc
ja
dec
icebp
jns
fwait
stos
jp
jecxz
ficoml
aas
iret
dec
or
fstl
jle
add
dec
ss
jmp
mov
jmp
push
lods
pop
loopne
dec
movsl
xchg
lods
pop
pop
lahf
cli
sbb
dec
sub
push
call
jno
out
in
and
mov
fdivrl
enter
pop
xchg
jbe
jmp
mov
push
aas
lcall
pop
shll
addr16
in
fcomps
jns
std
jmp
mov
push
hlt
sbb
push
push
push
outsl
out
pop
push
incl
sahf
das
cmc
inc
pop
arpl
scas
jecxz
popf
sti
outsl
scas
in
pop
pop
popf
or
cltd
ret
or
inc
adc
pushl
sbb
mov
add
push
cld
mov
mov
adcl
shrl
movsb
sbb
lcall
clc
das
mov
sub
sti
int
lods
cmp
xchg
dec
jb
pop
xlat
cmpl
mov
mov
je
fdivs
call
cmp
bswap
and
sub
fdivrp
lcall
mov
test
mov
test
inc
cs
mov
mov
lcall
pushl
clc
outsl
hlt
cmpsl
test
sbb
mov
add
outsl
sbb
mov
jmp
jg
xchg
mov
icebp
dec
cmp
movsb
orl
pop
dec
cmp
mov
imul
fildl
outsb
or
in
lret
sbbl
popa
loop
rcll
fcomip
call
and
je
xchg
xchg
popa
jl
jge
lds
xor
ljmp
add
jnp
jmp
loop
loopne
rorb
call
ljmp
adc
les
cltd
xor
pop
cmpsl
fwait
add
mov
mov
lods
jmp
jl
cli
test
push
mov
mov
push
and
stos
mov
ljmp
sub
xchg
cmpsb
cmp
fidivrs
mov
push
in
adc
mov
jle,pt
mov
or
jmp
mov
pop
outsb
popa
adc
std
or
stos
or
repnz
push
in
jge
xor
pop
xor
push
mov
lret
pop
cmp
pop
in
jne
inc
lds
test
clc
push
push
xchg
std
jl
insb
into
xchg
lcall
dec
jns
ljmp
jg
or
push
xor
je
lods
xchg
dec
hlt
pop
test
add
cmpsb
pop
xor
xlat
imul
jmp
cmp
fwait
cmp
repnz
lcall
jb
pop
int3
push
popf
repnz
cld
movsb
ljmp
in
and
sar
incl
rcrb
xchg
sahf
and
push
pop
mov
pop
sub
stos
and
xchg
pop
jle
cld
fistl
and
shll
adc
jb
sbb
add
call
sub
jge
inc
and
sbb
lcall
bound
mov
lcall
inc
dec
push
icebp
test
sub
cld
mov
pop
outsb
mov
sbb
sbb
incl
mov
sub
xchg
pop
dec
addl
xchg
adc
mov
loope
mov
cmpsb
mov
idivb
mov
filds
pop
stos
xor
pusha
iret
stos
rclb
js
cmp
testb
dec
jl
sar
scas
mov
xchg
scas
arpl
call
inc
xor
js
dec
scas
fcmovnbe
pop
pushf
ds
pop
mov
mov
popf
orl
incl
cld
mov
xchg
dec
push
push
mov
sub
scas
decb
xor
incl
sbb
push
shl
rclb
lea
add
ljmp
mov
lods
or
and
out
rorl
add
push
add
push
nopl
outsb
pop
adc
sub
jmp
mov
lret
rcrb
sbb
jo
cmp
cmp
pushl
push
and
push
sti
ffreep
lret
stos
test
out
movsl
loope
pusha
into
mov
call
rcr
inc
clc
jbe
test
mov
pavgb
mov
incl
nop
and
test
mov
or
imul
bound
shll
add
jne
enter
in
inc
fs
lret
nop
mov
lcall
fstps
sub
insl
js
jg
and
xor
pop
push
xchg
into
mov
jne
mov
pushl
sti
repz
inc
dec
dec
push
pop
pop
adc
add
cltd
inc
xchg
aam
fcomip
ja
push
dec
push
xchg
rorl
xor
jecxz
mov
pushl
decl
jmp
call
je
pusha
cmp
xor
pop
mov
pop
lcall
decl
outsb
jb
fists
cmp
pop
hlt
pushf
inc
jge
inc
in
arpl
daa
inc
pushf
jle
out
xchg
xchg
aad
stc
lcall
js
adc
sti
sbb
inc
mov
movsl
shl
test
mov
inc
ljmp
call
sub
mov
fdiv
cltd
loope
icebp
cmp
repz
int3
and
ljmp
sbb
test
cmp
cli
fistpl
jnp
cmp
insb
xchg
xor
pop
cmp
mov
test
out
add
shlb
shll
inc
push
cmp
cmp
ljmp
sub
pop
fs
test
mov
lods
xchg
dec
mov
add
jecxz
jmp
dec
test
mov
fsin
test
or
mov
pop
fstpt
cmp
or
out
leave
out
ret
push
mov
in
xor
xor
clc
adc
iret
in
push
mov
sub
push
and
ljmp
sub
fldt
push
mov
mov
xchg
lods
out
das
mov
or
decl
pop
cmp
sbb
cmp
push
fmull
xchg
fisttps
out
pop
div
or
jns
ret
cmp
jbe
aam
sbb
xchg
add
mov
add
aas
xor
push
jge
pushf
pop
pushl
in
std
jnp
xlat
jo
lret
or
push
pop
push
pop
iret
js
es
mov
call
sbb
push
ret
rcrl
jae
adc
mov
lods
push
fildl
icebp
loope
mov
fwait
sub
mov
data16
sbb
mov
clc
sbb
int3
shlb
cmp
cwtl
jnp
test
mov
mov
push
ret
je
push
gs
lahf
outsb
push
idivb
add
call
mov
or
mov
ds
jecxz
pop
je
jg
xchg
arpl
xchg
push
jns
jge
sub
sti
adc
insb
mov
xchg
push
cs
je
stos
mov
ret
push
gs
addr16
jb
out
and
jle
mov
jns
pop
popf
lea
rclb
nop
jns
mov
cs
stos
or
pop
clc
or
sbb
mov
mov
aam
scas
movsl
jb
mov
push
call
decl
hlt
sti
mov
xchg
xchg
call
je
cmp
and
inc
dec
loopne
test
ficompl
cmp
lret
frstor
out
test
mov
outsb
test
in
pop
mov
mov
in
cwtl
pushl
scas
notl
stos
pop
push
std
add
sbb
lcall
ljmp
sar
push
js
dec
adc
sbb
mov
stc
paddq
jno
call
roll
mov
mov
push
pop
push
mov
mov
out
jo
popa
in
in
inc
adc
jge
outsb
or
jecxz
mov
sub
xor
sub
ja,pn
add
sub
movsb
les
xor
jno
out
repnz
push
inc
inc
inc
jns
cld
scas
push
mov
xor
sbb
push
cmpsl
ljmp
or
mov
xor
decl
push
xor
outsl
imulb
adc
fwait
xor
das
add
test
pop
adc
adc
notl
push
inc
or
mov
jg
ljmp
jb
into
jl
cmp
cmp
in
cmc
stos
icebp
call
je
loopne
add
inc
push
sub
sti
pusha
pop
sbb
test
sbb
into
mov
orb
decl
data16
ficoms
cmp
cmp
inc
fisttps
rclb
sahf
dec
xchg
cmp
xchg
xor
sub
cltd
jge
scas
out
adc
je
gs
mov
rclb
shlb
stos
fnstsw
inc
movsb
outsl
rcrb
and
jg
mov
jb
mov
repnz
cmp
popf
lret
cmc
arpl
outsb
xor
lcall
mov
push
adc
sub
add
cltd
les
ljmp
push
insl
popa
mov
xor
mov
jp
push
es
jmp
xlat
and
dec
stc
pop
fidivrs
sub
inc
jle
scas
lcall
test
stos
jge
mov
in
aam
out
push
call
aad
sbb
aad
mov
aad
push
divb
repz
in
outsl
lahf
icebp
push
cmpsb
push
cld
ljmp
popa
out
insb
lods
ds
in
cmpsb
repz
ret
pop
or
pop
cltd
pop
xor
sub
push
cld
inc
push
rorb
mov
jo
xchg
sbb
pop
ljmp
test
mov
lds
add
dec
and
mov
sbb
addl
sbb
int3
pop
add
dec
xor
cmp
sti
push
gs
mov
movsb
lret
int
jb
push
add
jne
sahf
cld
pop
ds
std
decl
aam
cli
sahf
jle
repnz
test
popf
jge
je
out
mov
sub
lcall
inc
fwait
jbe
cmpsl
ss
lahf
pop
les
lea
das
clc
ljmp
mov
sti
repnz
fcomi
inc
adc
hlt
cs
pushf
or
mov
jle
in
rcl
test
push
jns
pushl
repz
out
mov
leave
pop
lahf
mov
mov
cmpsb
jecxz
xor
rcl
int
push
xchg
add
sbb
lretw
sub
mov
gs
add
pushf
cmp
ljmp
inc
dec
hlt
pushf
cmp
or
mov
mov
cltd
aas
jmp
mov
xor
adc
ds
jb
cs
data16
add
int3
idivb
movsb
mov
jnp
mov
decl
xlat
loope
push
mov
clc
movsb
xor
jmp
pop
cltd
shlb
mov
dec
add
mov
stos
test
clc
push
pop
xor
xchg
or
mov
push
pop
inc
jb
add
or
movsl
push
addr16
cmp
add
xchg
cld
lods
rcll
or
push
dec
mov
push
cwtl
xor
cmp
outsb
cltd
cmpsb
inc
movsb
mov
repz
push
jge
std
mov
call
pop
mov
imul
and
sub
arpl
loope
push
stos
aam
push
lock
mov
das
sbb
imul
add
icebp
jmp
jmp
add
jge
lds
addl
cld
push
popf
vmaxss
mov
in
shll
in
clc
incl
and
mov
sahf
dec
in
cmc
dec
add
lret
incb
in
dec
adc
xchg
cs
sub
jns
testl
sbb
insl
xchg
fiadds
sbb
call
sub
ljmp
test
cmp
std
or
shll
mov
xchg
xchg
or
dec
jmp
adc
ljmp
or
pop
sub
lock
or
pop
mov
sub
jbe
mov
repz
push
mov
sbb
shrl
mov
jno
aas
xchg
pop
xor
incb
nop
xlat
aaa
dec
out
ja
sbb
or
test
in
wrmsr
xor
or
jo
push
jmp
inc
rol
imul
rcrb
mov
sub
lock
ljmp
stos
loope,pt
xchg
mov
dec
push
and
push
icebp
jmp
scas
jbe
sub
fsubrl
xor
cmpl
jmp
sub
mov
pop
dec
lret
add
adc
and
insb
dec
jns
push
shrb
rcrl
into
sub
mov
inc
lock
clc
incl
aaa
outsb
push
inc
ja
enter
xor
loop
mov
adc
dec
xlat
test
incl
xchg
mov
daa
cmp
xchg
mov
loope
out
lods
inc
add
add
or
xlat
fmull
imul
jbe
jb
mov
sbb
pushl
inc
bound
jns
stos
out
inc
jg
adc
adc
cmp
stos
decl
mov
clc
pop
fwait
inc
je
xor
in
shrl
jns
cltd
jle
call
pushf
hlt
ret
xlat
mov
addl
mov
xor
xchg
pop
or
repz
xor
mov
incl
cmp
add
repz
pop
pop
xchg
dec
fs
into
stc
in
push
lods
adc
pop
cmc
call
stos
mov
test
int
idiv
dec
and
jnp
gs
dec
sub
lcall
mov
jnp
inc
icebp
stos
and
mov
test
ljmp
daa
pop
fmull
cmp
push
and
push
lock
inc
stos
fwait
mov
shlb
lcall
repz
jbe
inc
jg
pushl
sahf
sahf
int3
xlat
lds
out
and
out
jle
inc
mov
inc
pusha
jmp
call
push
sbb
inc
jmp
xor
pop
or
das
ret
insl
mov
adc
sub
in
xlat
push
mov
ljmp
cltd
fwait
xchg
sbb
pop
fbstp
add
inc
paddd
mov
pop
pop
in
into
xchg
das
mov
inc
das
lock
decl
cmc
inc
ret
mov
pop
mov
mov
scas
sbb
test
cli
mov
mov
outsl
sbb
shrl
lcall
mov
ja
fistps
shl
adcb
bound
mov
ljmp
sub
sub
push
pop
sub
jle
shld
adc
push
sub
xor
push
and
cld
push
lods
divb
mov
hlt
mov
add
ret
fsubs
mov
pushw
push
lds
and
adc
mov
sbb
les
popf
f2xm1
lret
imul
stc
adc
jnp
pop
call
call
jb
and
mov
mov
add
mov
decl
add
cmp
mov
and
call
gs
xor
aam
data16
xor
push
test
mov
loopne
jmp
mov
pusha
rcrl
loope
insl
jae
negl
pop
xchg
or
movd
scas
mov
push
push
jmp
pop
mov
mov
lea
out
test
and
xor
pushl
bound
jns
pop
fcom
adc
cmp
or
xchg
adc
nop
es
call
leave
mov
push
jmp
clc
daa
stc
lret
jns
and
mov
xchg
jmp
incl
subl
push
jle
dec
jbe,pn
cld
shrb
loop
xchg
jo
into
pushl
adcb
stc
xor
add
sub
mov
xlat
loope
add
adc
pop
sar
call
push
ret
jae
or
pop
cmp
bound
mov
in
loop
out
ljmp
pushl
lods
xchg
or
lea
push
mov
or
imul
mov
push
mov
add
js
cmpb
mov
dec
pop
add
cld
les
push
ja
cltd
out
jg
stos
mov
inc
cld
sbb
aad
aas
mov
ficomps
out
cli
and
out
scas
pop
sbb
aam
add
movsb
imul
inc
ja
jmp
shll
sub
sbb
xchg
mov
mov
rcr
mov
iret
rcll
mov
cmp
in
rorb
jecxz
mov
and
js
jmp
adc
adc
dec
dec
addr16
lds
insb
cwtl
scas
iret
xchg
cvtps2pd
cli
mov
mov
test
mov
sub
daa
emms
pop
mov
lcall
mov
cmp
mov
mov
xchg
or
loop
adc
movsb
lods
incl
movsb
cmpsl
jnp
push
test
add
in
inc
test
into
push
pop
data16
lret
jge
inc
mov
addr16
incl
fidivrs
idivl
pop
ret
lods
cltd
lret
mov
jbe
add
pop
push
mov
mov
ljmp
les
andl
sub
stos
cmp
xor
mov
sub
xor
data16
movsb
insl
fs
ljmp
popa
cld
loope
xor
mov
pushf
pushf
stos
add
pop
or
dec
decl
lock
xchg
mov
les
xlat
cmp
xchg
cmpsb
in
mov
sub
pop
mov
dec
imul
adc
lods
jbe
shlb
jecxz
lret
dec
dec
or
decl
and
mov
cld
pop
xchg
out
pop
dec
jle
mov
xor
dec
mov
add
cs
cs
aaa
mov
lcall
dec
lahf
aas
in
clc
aaa
std
sti
shr
bound
fisttpl
fucomip
jne
mov
icebp
adc
jae
fwait
pop
sbb
push
js
xchg
inc
mov
pop
ds
xchg
xor
movsl
call
inc
loope
cmp
add
jb
movsb
clc
ljmp
stos
fs
pop
fstl
sbb
fld
jne
loop
push
daa
daa
call
lret
lods
mov
cld
dec
test
mov
cmp
mov
jmp
cli
mov
pop
dec
and
cmp
mov
movsb
xchg
cli
lahf
dec
jmp
ss
jp
add
dec
or
or
adc
mov
jno
test
cmp
insb
and
call
sbb
push
rorb
dec
ret
dec
mov
call
nop
mov
and
and
gs
push
jae
or
xor
mov
rcrb
ljmp
add
mov
cmp
xchg
add
outsl
add
cli
ss
call
cmpsb
pop
mov
xchg
lahf
or
in
lahf
pushf
addr16
sbb
push
in
cmp
in
adc
in
sahf
aad
incl
sahf
test
mov
add
adc
push
sbb
sbb
roll
sbb
enter
mov
in
jmp
xchg
loope
push
cli
repnz
test
cmp
ljmp
fcompl
adc
cmp
or
cli
cs
cmp
sub
mov
lahf
sub
xchg
out
jo
sbb
push
mov
insl
jb
sti
cltd
push
xor
call
cmpsl
mov
pop
adc
mov
dec
int3
outsl
sbb
dec
mov
les
decl
std
add
lea
inc
mov
cli
fisubs
mov
pop
call
sti
xor
in
shl
jg
pop
mov
push
add
jns
cli
test
jmp
mov
xchg
fcomps
outsb
neg
push
pusha
cmpsl
ret
mov
ds
jae
push
push
jle
lcall
cli
inc
shl
sub
mov
and
xor
out
push
rcr
mov
pop
mov
sbb
xchg
loope
aam
jae
lods
push
sahf
imul
incl
mov
scas
cmc
and
dec
ret
mov
nop
adcl
sar
sub
inc
jg
shll
shlb
lcall
psrld
sub
jmp
dec
xlat
subb
pop
pop
test
loopne
incl
inc
in
mov
add
add
movsl
pop
mov
outsl
clc
mov
dec
xor
das
pop
xchg
push
mov
cmp
jp
mov
incl
imulb
cmc
push
and
xor
pop
and
scas
jg
call
inc
jp
sbb
out
ja
inc
add
gs
jnp
push
mov
fbld
jb
outsl
cmp
call
out
cltd
mov
mov
xor
ficoml
xor
inc
loope
andb
in
es
decl
xchg
cmp
or
push
je
adc
pminsw
sbb
mov
scas
call
jmp
or
jg
push
adc
pusha
xrelease
incl
mov
push
js
xor
sbb
movsl
and
loop
push
ret
call
fistps
jno
aam
js
inc
mov
mov
hlt
mov
dec
arpl
in
dec
in
mulb
imul
and
or
cmp
xchg
fidivrl
mov
test
data16
test
jae
sub
fadds
dec
or
call
xor
mov
aam
xchg
aam
pop
and
mov
xor
clc
out
pushl
dec
or
rorb
cmp
or
mov
lret
adcb
sbb
ljmp
sbb
out
adc
sub
lods
rorl
ficompl
sbb
push
roll
jg
in
loope
sub
loope
add
call
ja
insl
or
mov
lret
and
cmp
mov
jecxz
ljmp
in
leave
mov
cmp
cmpsb
mov
rcl
sub
sbb
js,pt
ret
push
es
push
mov
jle
cmc
push
push
cmp
adc
dec
enter
add
pop
mov
jp
ljmp
xchg
cs
repnz
std
imulb
sub
cmp
scas
test
jnp
adc
adc
insb
idiv
ljmp
push
lds
cmp
fistl
fidivl
iret
or
cli
add
xchg
scas
push
xchg
mov
xor
out
cltd
andl
ja
call
adcb
or
shll
aam
hlt
adc
mov
mov
push
mov
jmp
cmp
dec
or
insb
lea
jmp
dec
jb
fs
jg
ljmp
stos
mov
dec
or
add
cli
push
dec
sbb
dec
stos
push
lcall
or
mov
fimuls
fldenv
jno
jmp
shr
sahf
popa
lods
imul
cmp
mov
ret
mov
decl
add
lds
add
mov
sub
aad
dec
lret
loopne
lods
lcall
jp
and
xchg
cmpl
movsl
leave
lods
xchg
lods
ljmp
pop
test
and
and
push
mov
sub
jmp
add
adc
insb
pop
lea
ret
mov
hlt
sahf
dec
test
rolb
loopne
dec
fldenv
jp
jg
lret
push
sub
cs
insb
dec
jmp
in
mov
stos
iret
sub
std
jmp
gs
loope
adcb
push
inc
jbe
dec
pop
lds
es
mov
jmp
out
cmp
ljmp
jbe
push
popf
fstps
out
push
ljmp
sbb
xor
loopne
mov
ret
mov
pop
sub
das
cli
incl
sub
jns
cli
mov
xor
data16
cmc
mov
scas
cli
lcall
push
sbb
fdivp
pop
imul
lahf
loope,pn
mov
pop
aaa
cld
lcall
inc
and
pop
mov
out
je
push
inc
sbb
decl
cs
adc
xor
hlt
and
ss
pop
sbb
in
mov
decl
lock
das
sub
pop
sbb
jne
out
dec
insl
lds
push
inc
ds
scas
pushl
std
mov
sahf
stc
out
adc
rcrl
xchg
mulb
xlat
mov
sbb
decl
mov
xlat
jl
dec
dec
mov
dec
sarl
mov
gs
testl
bound
popa
sahf
lcall
hlt
push
lcall
hlt
repnz
push
and
push
lret
cltd
divb
and
mov
jg
push
push
imul
cmp
mov
cmp
mov
cwtl
mov
cmp
dec
mov
add
ret
les
mov
mov
call
repz
out
loope
scas
push
rorb
repnz
cmpsb
cltd
stos
call
fisubs
movsl
inc
sbb
xor
jmp
pop
inc
mulb
xor
jmp
repz
cmp
cmp
inc
imul
jno
and
inc
hlt
in
imul
pop
mov
push
outsl
pop
shrl
mov
jo
mov
shll
les
stos
incl
sub
pusha
inc
mov
nop
insb
pop
mov
aas
sbbb
loopne
mov
neg
xchg
inc
mov
cld
scas
mov
es
pop
hlt
pop
lret
nop
aam
outsb
cmp
in
pop
hlt
pop
sahf
push
push
mov
sbb
adc
cld
incb
std
dec
cmpsl
pop
inc
mov
scas
jl
cmpsb
adc
xor
ljmp
and
push
inc
or
add
mov
xchg
inc
xchg
and
rclb
add
push
call
loopne
push
test
xor
pop
push
mov
adc
xor
sbb
dec
lahf
cmpl
cmp
adc
pusha
sub
fs
pop
ret
push
lcall
fsubs
rolb
hlt
jg
out
xchg
movsb
push
jg
lret
ljmp
inc
mov
lahf
inc
push
inc
or
xor
in
push
and
outsl
push
jmp
rorb
inc
mov
xor
sbb
jns
data16
lcall
repnz
cs
or
jecxz
jmp
lret
xchg
in
pop
mov
push
adc
ljmp
ljmp
mov
adc
sbb
pop
push
mov
decl
sub
adc
mull
dec
push
sahf
ja
mul
adc
lret
pushl
insl
aam
pop
rcll
push
pop
out
dec
arpl
mov
div
adc
and
pop
pushl
inc
cmp
dec
mov
lock
sub
repz
dec
cltd
mov
xchg
push
scas
adc
bound
mov
jnp
cli
jmp
cli
xchg
push
dec
inc
xor
addr16
sbb
movsl
xor
mov
xchg
adc
jnp
pop
int
ljmp
test
call
mov
ret
int
mov
xor
call
push
push
jb
sbb
xor
xor
and
mov
insb
adcl
push
mov
xchg
lock
inc
and
sub
ljmp
dec
push
shll
xchg
fwait
push
jg
xchg
add
mov
decl
mov
mov
aaa
xor
or
push
shrl
lret
inc
xlat
push
incl
das
jp
jb
mov
xchg
add
jle
dec
and
andb
out
xor
test
inc
xor
out
sarl
jmp
mov
push
test
push
mov
add
sbb
ljmp
cmpsb
shl
push
dec
add
scas
dec
jecxz
xchg
cwtl
push
test
dec
inc
in
cs
decl
lock
and
push
push
ret
outsl
aad
frstor
dec
jmp
incl
sbb
cmp
cmpsb
mov
push
nop
push
sub
movsl
pop
ljmp
cli
lods
hlt
repz
sti
loop
mov
mov
scas
xchg
cmp
xchg
pop
xor
mov
or
rep
pop
xchg
push
sub
daa
lret
adc
adc
add
incl
sub
cmp
add
imul
mov
lods
iret
jo
jp
leave
lcall
shl
push
mov
mov
stos
adc
jb,pt
mov
cmp
decl
call
je
jl
test
push
ret
or
inc
in
movsb
pop
fisubs
fcomip
mov
sub
mov
arpl
scas
adc
and
pusha
icebp
jns
call
dec
fldenv
out
iret
stos
or
push
imul
fisubrl
inc
iret
adc
inc
popf
sbb
adc
jmp
mov
xor
repz
into
out
sbb
and
push
sbb
or
jecxz
xor
jmp
les
idivb
or
daa
xor
lods
arpl
fdiv
mov
sub
mov
repnz
jo
jmp
mov
daa
in
cmp
and
adc
iret
push
push
pop
pusha
xchg
pushl
arpl
mov
aaa
fcompl
ja
fcomps
xchg
xchg
push
xor
addr16
mov
loop
fwait
mov
push
sub
jg
sub
gs
aas
scas
cwtl
in
pop
inc
loop
pop
inc
fdivs
add
mov
inc
sbb
lcall
and
lcall
jge
add
xchg
pop
xor
out
mov
sahf
test
mov
pop
pop
xlat
bound
fldl
mov
mov
gs
cmp
das
lock
xchg
out
mov
mov
es
push
push
aaa
push
sarb
test
cmc
scas
nop
pusha
call
decl
rcll
or
out
aas
sub
xlat
in
es
lcall
stos
stos
push
pop
cld
push
sbb
testb
sbb
xor
adc
idiv
sti
mov
pop
loopne
add
cld
fidivl
and
les
add
push
push
call
or
push
add
icebp
sbb
mov
sub
push
iret
mov
jbe
and
mov
je
push
addr16
pusha
cmp
inc
mov
and
jle
cmp
xchg
in
outsl
xchg
test
loope
inc
aam
and
and
lcall
adc
mov
call
push
dec
xchg
cmp
fdivrl
inc
inc
out
sub
test
jne
adc
pushl
xchg
sbb
test
dec
mov
push
push
aad
lsl
mov
mov
pushl
mov
pop
lret
stos
les
mov
adc
fidivrl
cwtl
test
jg
incl
scas
pop
fildll
mov
fstps
or
fstl
pop
jg
nop
incl
xchg
aad
inc
xor
mov
addr16
nop
sbb
arpl
call
ljmp
lods
pop
out
in
adcb
cmp
lcall
test
add
mov
jns
mulb
sub
dec
test
add
addr16
pushl
test
je
ficomps
fidivrs
lahf
inc
jns
mov
mov
pop
fldcw
cld
call
ljmp
sbb
std
call
push
and
push
cli
jp
pop
adc
and
enter
pop
test
in
lcall
sbb
cmp
orb
or
xchg
in
scas
pop
outsb
xchg
jmp
jnp
sub
push
mov
jmp
jmp
rorl
mov
pop
aam
pop
sbb
push
push
sarl
jmp
jb
jns
in
sahf
jae
iret
dec
int3
mov
jno
and
ljmp
mov
outsl
imul
lret
push
sbb
test
incl
add
dec
rorl
leave
mov
xor
mov
stos
sub
jbe
daa
jne
shlb
pushl
in
addr16
iret
in
or
dec
xchg
mov
shl
out
lcall
scas
inc
fwait
ljmp
mov
test
loopne
test
insl
es
xor
mov
lds
cld
pushl
pop
fnstcw
inc
lock
jnp
pop
add
mov
jg
rcll
xchg
jle
inc
jge
adc
scas
push
mov
fdivl
pushl
cld
pop
push
aas
paddb
jnp
mov
mov
ljmp
stos
push
jo
cmp
mov
push
stos
pop
sbb
mov
cmp
push
movsb
adc
lock
lcall
jmp
loopne
ds
cmpsb
inc
fsubl
in
adc
sbb
sub
xchg
call
cmp
ljmp
das
imul
lahf
mov
fwait
sub
out
ljmp
push
push
mov
das
lods
decl
add
cmp
jne
ljmp
sbb
mov
mov
and
movsb
add
call
in
sbb
imul
ljmp
fs
test
cli
lcall
rclb
mov
push
add
out
push
fisttps
jmp
and
adc
daa
imul
sub
lock
inc
in
pop
sbb
out
and
out
ds
mov
xor
mov
outsl
decl
jae
jns
jo
pop
dec
pop
fnstenv
sarl
negb
les
ljmp
push
cwtl
push
decl
push
popa
inc
inc
and
arpl
push
cmc
fs
call
xchg
xchg
cmpsl
adc
insl
cmpsl
xchg
ljmp
iret
xor
pop
rorb
mov
push
cld
pop
jp
sub
xchg
cltd
andb
in
call
and
xor
cwtl
pushf
incb
mov
mov
mov
scas
mov
xchg
push
add
inc
test
cltd
pushf
jecxz
and
lods
inc
lods
xor
cli
std
pop
das
int3
push
xchg
imul
ret
pop
xchg
call
cld
cmp
xor
sbb
outsl
pop
xchg
cmp
mov
sbb
lcall
add
shrb
enter
insb
mov
jmp
sbb
pop
and
mov
adc
inc
pop
pusha
mov
adc
inc
movsl
cs
mov
aad
push
push
jg
adc
sub
sub
dec
mov
dec
dec
ja
dec
mov
cmp
decl
push
jae
movsl
inc
lea
ret
test
mov
out
out
movb
insb
stos
and
aad
push
xchg
dec
repz
pop
scas
lea
jbe
dec
fiadds
into
cld
hlt
mov
sub
mov
or
es
xchg
add
inc
shl
test
push
adcb
jmp
xchg
out
call
mov
or
scas
insb
mov
xchg
bound
cmpsb
sarb
jle
jb
xchg
incl
js
or
inc
adc
rcr
std
inc
rcr
cmp
lcall
imul
adc
xlat
rorb
xchg
jmp
sarl
outsl
popf
into
into
jbe
loop
out
cli
ljmp
xorl
push
enter
bound
mov
pushf
inc
outsb
jecxz
out
mov
ja
inc
call
dec
or
cltd
fadds
lcall
paddq
lods
aaa
sbb
mov
push
xor
repz
pop
in
lods
dec
test
pushl
inc
sub
in
xchg
fs
into
xor
test
sub
notl
sbb
pushl
test
jnp
fisubrl
bound
xchg
add
cmovnp
ljmp
clc
push
sbb
call
xchg
fstps
pushw
push
xchg
cmpsl
adc
cmp
mov
jg
in
lret
aas
les
push
mov
pop
adc
push
dec
push
jg
scas
xchg
and
cmc
mov
and
mov
std
insb
aad
lret
jecxz
dec
pop
cmp
incl
push
fcoml
xor
ret
jbe
pushf
das
inc
lahf
mov
inc
jecxz
fcomip
inc
mov
jp
aaa
mov
dec
ds
bound
je
xor
jmp
cmp
and
sbb
pop
movsl
xor
sub
jae
fidivs
fucomi
sbb
jne
sub
mov
jecxz
cmpsb
mov
pop
lcall
jbe
lods
mov
pop
ljmp
sbb
pop
jbe
mov
test
pop
and
cmp
loope
insl
pop
adc
pop
ds
call
ljmp
pop
testb
hlt
sub
bound
fs
cmc
xorl
scas
push
call
cmp
and
inc
cltd
dec
arpl
push
jle
dec
popa
call
ret
in
aam
out
sti
xchg
inc
mov
mov
inc
fsubl
dec
iret
inc
cmp
or
incl
add
sub
cs
stos
dec
repz
mov
jmp
dec
sbb
mov
call
sbb
xchg
pop
add
jmp
push
jecxz
push
pop
fisttps
inc
cmp
pop
mov
lods
xor
inc
out
ret
incl
test
xor
sbb
test
jb
gs
xchg
xchg
or
ljmp
jg
in
lods
fs
int
hlt
pop
repz
enter
pusha
inc
add
ja
aam
xor
sub
lock
call
xor
fsubs
subl
pop
pop
out
jmp
adc
out
decb
cmc
or
xchg
xchg
cltd
pop
add
pop
loop
adc
inc
aad
add
ljmp
jns
lret
jae
sbb
mov
cmp
icebp
mov
cmp
pop
add
pop
mov
mov
and
out
or
ss
cwtl
jmp
cmpl
ficoml
fwait
inc
fcmovnu
xor
adc
inc
fldz
icebp
jmp
js
call
and
xor
lea
push
in
mov
sti
cmp
jg
fs
pop
inc
mov
xchg
xchg
sub
shrl
mov
and
inc
and
or
jmp
daa
push
push
lcall
incl
fnsave
add
cmp
cmp
xor
pop
pop
mulb
xchg
jp
jnp
stos
insl
or
cmp
mov
pop
push
fnstcw
inc
push
sub
push
imul
jmp
push
or
inc
decl
dec
xchg
nop
dec
sub
mov
cmp
ja
and
inc
hlt
jecxz
pushl
jmp
or
jmp
mov
gs
iret
repnz
dec
inc
push
ljmp
mov
js
push
jno
testb
notb
sbb
jmp
jb
fnstsw
subb
std
pop
adc
or
mov
loope
in
in
movsb
push
enter
scas
xchg
orl
stos
mov
dec
imul
mov
or
or
rcrb
int3
jnp
cld
in
add
push
add
out
inc
jbe
sub
sar
addr16
cmp
inc
add
in
push
push
lock
call
xchg
rcl
and
xchg
jg
shlb
je
cmp
xchg
aas
cmp
xor
fmull
mov
sub
jg
sub
cmpsb
adc
mov
je
ljmp
add
and
adc
lret
sub
jbe
pop
aas
cmp
xor
mov
cmc
xchg
mov
xorl
je
adc
or
fwait
test
xchg
in
add
sar
push
inc
xchg
push
jp
scas
insl
hlt
in
cmpb
adc
lock
in
mov
lcall
mov
hlt
daa
jnp
insb
test
xorb
adc
lock
ljmp
decl
inc
xchg
pop
mov
pop
jae
dec
dec
stos
push
int3
test
cld
xor
dec
stc
lea
aas
add
ja
and
pop
pop
int
int
push
cld
jge
push
fisubs
dec
sbb
mov
fadds
pop
gs
shrb
dec
xchg
incl
sub
xchg
jecxz
test
outsl
add
add
repnz
ja
sub
mov
lea
sahf
inc
xchg
loopne
mov
ds
cmp
jl
daa
xchg
ds
jmp
cltd
lcall
pusha
dec
mov
jg
sub
mov
dec
mov
xor
cli
icebp
jge
pop
stc
lret
inc
out
jns
and
push
flds
popa
adc
or
jg
or
repz
ja
mov
add
test
push
push
pop
adc
divl
adc
je
pushl
lahf
jns
cmpsl
mov
push
jne
jno
dec
cmpsl
jnp
mov
js
out
xchg
sbb
insb
out
cmp
mov
popf
push
fiaddl
sub
ficomps
dec
fcmovu
call
mov
add
sub
xchg
or
fisttps
scas
loop
xchg
mov
out
jmp
pushl
fucomip
lret
or
xor
xchg
sbb
and
fs
loope
jg
lcall
pop
addr16
cld
or
movsb
or
pop
push
loop
nop
test
or
jmp
cmc
aad
pusha
push
cs
and
jge
sar
jg
out
jnp
xchg
stos
data16
pop
add
loopne
stc
xor
test
xor
mov
in
cli
mov
nop
push
insl
enter
sbb
push
jl
dec
mov
sub
int3
popa
scas
adc
decl
int3
arpl
or
into
push
loopne
mov
fs
and
push
mov
inc
pushl
rcrl
stos
xor
loop
inc
push
dec
push
icebp
ds
dec
inc
lcall
mov
push
pushf
jo
mov
movsl
test
and
lcall
cltd
jmp
rcrb
mov
mov
mov
pop
mov
dec
xchg
jb
inc
mov
fs
jg
sbb
pop
loopne
or
dec
push
popf
mov
jae
out
xor
jecxz
add
push
incl
arpl
adc
adc
gs
inc
lock
cmp
jmp
mov
push
rol
pop
cmp
cmpsb
and
push
pop
test
xchg
xor
xchg
mov
in
dec
jp
cmp
insb
divl
and
out
inc
mul
in
xchg
lahf
dec
dec
or
clc
es
inc
das
filds
adc
pop
jns
xchg
jbe
adc
mov
sub
pop
xchg
js
clc
push
sahf
jno
ds
jb
ret
icebp
clc
xor
add
fldcw
imul
dec
scas
cmp
cmp
mov
movsl
cmp
sub
and
adc
mov
jnp
lock
sbb
je
loop
pushl
add
sbb
insb
sti
add
push
insb
inc
sbb
add
dec
jb
sub
cmc
cmp
and
sti
out
pusha
jp
sahf
push
lcall
notb
sar
rolb
push
push
andl
imul
loopne
mov
mov
mov
sbbb
xor
je
mov
mov
fcmovu
je
mov
add
pop
sti
xchg
mov
sub
fdivr
jg
or
bound
sub
ficompl
jbe
imul
mov
in
mov
dec
xchg
jo
loop
lds
cli
jmp
sti
int3
mov
lahf
mov
jmp
in
pop
dec
pusha
shrl
mov
aam
fs
mov
mov
mov
pushl
push
pop
movl
jbe
idivl
pop
jmp
xor
mov
push
popf
cmp
mov
inc
fcomps
push
pusha
mov
shr
jle
decl
sub
movsl
rcrb
lret
lea
mov
push
movb
pushw
outsb
sub
xor
jecxz
dec
outsb
bound
repnz
dec
jecxz
lcall
lret
cmp
repz
xchg
xchg
lods
test
fwait
cmpsb
daa
mov
jmp
sub
sbb
sub
dec
ljmp
lcall
imul
fstpt
je
pop
cwtl
sti
jno
and
push
aas
mov
jnp
jmp
sti
cmpsl
sbb
pop
add
mov
mov
mov
push
ljmp
jmp
mov
adc
lea
sub
jns
xor
dec
stos
das
clc
mov
push
cs
enter
adc
cmp
orb
sub
clc
inc
xor
sub
outsb
pop
gs
out
fidivrs
std
push
pop
cmp
repz
ficompl
mov
or
jl
mov
mov
cmovns
push
mov
mov
out
sbb
scas
push
mov
mov
sti
mov
sti
xor
sub
xchg
fs
push
lock
cmpsl
dec
mov
dec
jno
incl
sub
jno
inc
imul
loopne
adc
jno
sub
data16
pusha
or
ljmp
clc
cmp
or
xlat
aam
mov
rcr
rcl
int3
addr16
add
inc
jg
mov
nop
xchg
push
push
not
xchg
test
mov
loopne
ljmp
add
insb
sbb
mov
in
dec
mov
sub
repz
incl
hlt
mov
jo
ss
test
cmp
cmpsb
ret
jg
fnstcw
xchg
insb
leave
sbb
pop
ficoms
sub
lret
push
dec
pop
sbb
test
lds
or
or
insl
sbb
scas
arpl
dec
lcall
lret
ljmp
ret
cmp
std
adc
repz
iret
fwait
incl
in
lods
jecxz
pushf
hlt
fwait
notl
xchg
loope
mov
in
test
insl
jl
ja
mov
xor
dec
push
ficompl
imul
adc
in
mov
add
dec
addr16
scas
xchg
pop
fsts
inc
xchg
hlt
mov
sbb
xchg
ds
lea
test
and
leave
into
sbb
sti
xlat
in
ud0
lcall
or
pop
adc
out
test
or
fdivp
lret
xor
and
stos
ljmp
call
rolb
aas
or
xchg
sub
out
jb
pop
stc
decl
mov
hlt
pop
push
mov
cmc
aam
ret
in
xor
jb
test
shl
ret
insl
jmp
mov
gs
mov
sbb
xor
add
pop
cwtl
push
call
or
pop
aas
push
insb
jp
call
jns
mov
sti
lret
sahf
xchg
cwtl
mov
pushl
or
pop
leave
movsb
sbb
lahf
xchg
xchg
mov
jge
dec
add
jge
push
mov
repnz
mov
jmp
sub
mov
jg
es
ds
rcrb
push
lock
mov
mov
aas
iret
iret
js
mov
adc
pushl
arpl
sbb
xchg
test
mov
mov
add
cs
cld
ljmp
pushf
cmp
jmp
std
repnz
loop
push
out
lret
push
push
jecxz
pushl
xor
jmp
mov
cmp
cmc
leave
push
ror
int3
sbb
pop
or
cmp
cmpsl
pushf
movd
mov
clc
pop
mov
dec
fs
stos
inc
xor
pop
loopne
mov
rorb
mov
and
fbstp
sbbb
inc
inc
pop
addb
lock
int
mov
data16
lcall
push
shrb
cld
les
or
inc
cmp
addb
ljmp
dec
aaa
and
xchg
cld
push
movsb
jmp
xor
test
cmp
mov
pop
adc
lcall
mov
lret
pop
sbb
lods
push
aaa
fs
mov
push
push
stos
test
lcall
mov
jge
sbb
lret
lret
sbb
jnp
stc
clc
or
adc
or
decl
dec
mov
pop
push
in
xor
cmp
scas
inc
pop
mov
push
adc
mov
es
stos
iret
cmp
call
shl
jecxz
cmp
xlat
add
mov
daa
insb
mov
jg
inc
cmp
cmp
push
rolb
stc
or
and
out
sahf
cmp
jge,pn
outsb
sbb
xchg
cli
adc
jmp
aam
mov
subb
add
fistps
call
mov
imul
lea
push
inc
ja
fdivr
stos
call
js
inc
je
pop
dec
sub
or
stos
cmpsb
shrl
hlt
xor
lea
decl
ror
loop
mov
sub
push
inc
icebp
arpl
cld
sub
push
push
inc
decl
std
pop
popf
stos
js
xchg
cmpsl
lcall
add
arpl
push
jbe
sub
sbb
xor
movups
das
clc
pushl
jmp
inc
or
adc
imul
fisttps
jmp
es
mov
pop
shll
mov
jg
mov
outsb
rcrb
push
xchg
lods
imul
daa
mov
daa
incl
inc
push
in
clc
xchg
inc
cmp
dec
jg
jbe
insb
rorl
push
or
shll
rclb
cmp
inc
ljmp
inc
xor
mov
outsl
ljmp
pop
addr16
mov
popf
mov
dec
punpckldq
daa
fcmovnu
lea
mov
call
push
jl
and
pop
pop
mov
scas
test
xchg
in
loopne
lret
pop
inc
out
add
inc
add
pushf
cltd
test
enter
stos
dec
fs
sub
dec
sub
inc
push
js
push
lcall
aaa
pop
xor
mov
movl
fildll
pop
inc
xor
adc
clc
cld
aaa
je
insb
mov
dec
mov
insb
out
lock
pushl
adc
fbstp
add
call
int
dec
inc
mov
in
xor
dec
mov
decl
test
dec
mov
jb
movsl
rolb
stos
enter
dec
iret
mov
push
movl
jl
lret
inc
je
pop
loope
pop
inc
ja
mov
incl
outsl
fcoml
adc
fistpll
leave
loop
push
push
cmp
mov
dec
push
cltd
sbb
mov
dec
sub
cmc
adc
jg
popf
int
pushf
ljmp
ds
stos
inc
inc
push
mov
in
adc
shlb
push
pop
loopne
add
les
clc
call
sbbl
js
xchg
inc
sub
faddl
cmp
shlb
xchg
ljmp
loope
sbb
dec
mov
sbb
xchg
xor
push
in
sbb
mov
xchg
add
lcall
cmp
pusha
push
cwtl
gs
incl
imul
pop
jb
in
lret
adc
and
jo
call
aad
ret
xchg
and
jae
push
out
xchg
or
jmp
iret
pop
xchg
scas
cmp
ror
xchg
and
jns
sub
out
inc
jnp
in
fdivrs
test
imul
lcall
dec
push
andl
jb
ljmp
int
rcrb
sub
pop
push
andnps
stos
dec
movsb
gs
push
sub
jmp
sbb
sahf
mov
icebp
mov
loopne
lcall
cmpsb
movsl
jl
jp
adc
nop
sbb
nop
mov
mov
popw
lea
ficompl
adc
sbb
mov
lcall
cmp
adc
push
sbb
mov
loopne
faddp
dec
lds
mov
inc
pop
adc
fwait
add
xor
xchg
inc
inc
sahf
xor
sub
in
push
hlt
jle
mov
adc
ret
sbb
adc
sub
loope
xchg
pop
mov
sbb
jp
cmpsl
imul
lods
test
sbb
inc
ss
ret
repz
sbb
push
jno
sbb
dec
dec
push
add
sbb
into
xor
or
xor
andb
dec
sbb
fwait
jns
clc
cmp
mov
cmp
xchg
sub
push
sti
and
ss
add
insb
movsl
push
dec
dec
dec
add
push
or
scas
and
in
jb
pop
leave
clc
mov
push
repz
mov
sbb
movl
fstpt
sbb
jecxz
fldt
pop
repz
mov
sub
imul
inc
push
ja
out
mov
fstps
outsb
xor
fwait
sbb
or
ja
xor
or
xchg
fidivrs
popf
mov
icebp
mov
js
int
and
filds
jp
sbb
and
adc
mov
call
bound
pop
icebp
sbb
dec
dec
push
adcb
bound
and
mov
xchg
push
js
fcomip
test
push
jne
sub
roll
cltd
scas
out
loop
mov
jmp
loop
arpl
lcall
imul
and
push
jmp
cmc
pop
adc
loopne
mov
cmpsb
frndint
cwtl
scas
loop
jl
pop
stos
ja
jnp
cld
adc
mov
and
or
add
sub
inc
arpl
incl
in
sbb
mov
cwtl
nop
loope
sar
cmp
mov
test
inc
mov
nop
and
push
shl
mov
jmp
push
ret
out
jbe
insl
test
pop
jmp
test
gs
rcrl
jmp
call
pop
and
arpl
push
mov
jl
sarl
sbb
inc
movsl
pushl
sahf
fwait
xchg
xchg
xchg
jge
jnp
aas
adc
push
arpl
sub
pop
mov
xor
lcall
push
je
lds
pop
dec
push
add
call
imul
inc
or
icebp
dec
cmc
xchg
dec
cmc
mov
repz
stos
lahf
imul
in
cmpsb
inc
mov
outsl
clc
out
add
push
and
pushf
in
aam
cwtl
cmpsl
xlat
or
dec
enter
inc
pop
out
mov
aad
movlhps
inc
dec
inc
xor
movsl
xchg
sub
in
pop
add
les
loopne
mov
jecxz
les
mov
daa
jne
add
scas
int
push
cmp
jmp
push
xchg
pop
icebp
lock
lds
cmp
into
out
dec
stc
inc
mov
and
popf
mov
stc
mov
movsb
push
push
adc
scas
fistpl
sar
lcall
cmpb
sub
jnp
int3
lret
push
rorl
mov
fs
daa
jbe
outsl
fcos
ljmp
clc
dec
into
pushf
mov
test
jmpw
scas
adc
jnp
jg
data16
inc
lret
incl
leave
icebp
push
xchg
xor
outsl
mov
lret
mov
push
mov
stos
jp
lock
inc
lret
aas
popl
add
sbb
add
mov
push
lds
inc
cmc
enter
push
fwait
pop
daa
mov
cmp
das
jge
xchg
sub
stc
mov
adc
jle
incl
mov
bound
pop
movsl
js
pop
or
fsubl
pop
dec
ss
mov
stos
loop
imul
inc
add
clc
mov
mov
call
or
inc
jle
hlt
imul
xchg
inc
sub
adc
jmp
sahf
mov
jp
xor
ds
mov
addb
sbb
cwtl
xor
xchg
jmp
loopne
fs
icebp
in
dec
fmul
sub
stos
mov
out
cltd
cwtl
sub
call
xlat
adc
push
mov
sub
cmc
xchg
pop
movsl
xchg
push
icebp
cs
xor
insl
sbbl
cmp
push
sub
outsb
dec
test
imul
lret
enter
out
cmp
cmp
and
sub
dec
dec
and
outsl
daa
xor
imul
jmp
fidivrs
cmp
inc
or
sub
xor
js
mov
call
cltd
xor
lret
inc
mov
jmp
loopne
repz
sub
sub
jecxz
scas
jl
ficoml
ret
fwait
mov
cmp
jnp
in
notb
fists
sbb
or
inc
das
add
and
jmp
sub
rcl
daa
jecxz
fdivrp
decl
ja
sub
out
sti
popf
daa
push
flds
add
repz
sbb
mov
push
sahf
push
hlt
xlat
add
xchg
lods
shr
push
ljmp
das
sbb
dec
jnp
aad
outsl
xchg
stc
int3
mov
ljmp
jmp
lret
jns
jp
or
push
out
sarl
jle
loop
in
cmp
pushl
fs
movsb
xor
rcr
cmp
outsb
lds
jle
push
test
mov
and
jmp
stos
stc
xchg
pop
mov
pop
mov
shrl
decl
or
cmpsl
sarb
xchg
xchg
enter
lret
push
or
push
sub
xor
jp
call
cs
insl
mov
out
cmp
cmp
imull
js
add
es
inc
rcrl
int3
push
adc
pushl
pusha
mov
xlat
es
fldenv
popa
fdivl
pop
fmull
dec
xor
inc
lods
fistpll
test
pop
std
adc
jb
jb
rorb
push
pop
ja
fdivrp
out
popf
popa
orl
inc
mov
sub
cld
cmp
push
rcr
push
lea
jno
ljmp
adc
xchg
jae
sub
inc
clc
push
jmp
adc
pop
jl
popf
out
mov
push
jmp
or
rclb
adc
sbb
dec
mov
outsb
test
cmp
push
adc
jno
cmp
inc
cmpps
xchg
jle
cmc
pop
ret
mov
lds
jmp
jmp
adc
imul
pop
pop
and
cmp
and
repz
repz
jecxz
clc
aaa
sub
icebp
pushf
inc
movsb
insl
mov
unpcklps
ljmp
dec
push
cmp
mov
mov
and
or
cmp
repnz
lock
sub
decl
add
jp
aad
cmp
cmpb
sbbl
cli
out
xchg
inc
inc
scas
incl
inc
out
add
cmp
mov
cmp
clc
int3
lock
subl
cld
add
jae
stos
lcall
and
std
mov
fsts
out
adc
fldl
icebp
daa
sub
ja
xchg
fsubrs
mov
add
cmp
jmp
sub
cld
pop
mov
dec
mov
jns
mov
cmp
das
jns
xlat
outsl
adc
decl
xor
add
div
hlt
pushl
aad
mov
mov
dec
adc
shl
jae
cmp
xchg
mov
fstpl
mov
out
pop
lods
adc
mov
dec
push
je
and
call
paddd
add
push
push
mov
mov
push
or
mov
ficompl
xor
mov
adc
push
pop
inc
sub
or
xchg
dec
push
in
pushl
pop
inc
mov
push
inc
push
andl
mov
push
adcb
mov
pop
and
std
out
cmp
add
sbb
std
dec
out
into
jae
add
jp
decl
pop
mov
add
push
xorl
add
mov
cmp
fucom
ss
pusha
push
adc
into
push
cld
inc
adc
sub
xchg
das
xchg
fstps
sbbb
inc
sub
adc
cmc
lahf
out
mov
incl
mov
dec
lcall
in
inc
cmp
mov
pop
daa
jne
pushl
shl
mov
push
mov
cvttps2pi
outsl
int3
sub
dec
les
jae
into
adc
call
test
rcl
scas
sbb
stos
fstpt
ja
arpl
inc
aad
ljmp
jg
jl
mov
test
cs
xor
jno
das
fs
in
add
jmp
in
test
das
jmp
fadd
sbbl
adc
je
lahf
call
cli
mov
ds
aas
dec
inc
jae
les
out
cwtl
jg
ljmp
dec
push
cltd
mov
rolb
mov
nop
ffree
fbstp
mov
lcall
inc
ss
rcrl
stos
fsubp
jg
and
push
xchg
sbb
pop
cmpsl
cltd
icebp
or
call
mov
sub
addl
imulb
mov
and
add
jbe
lock
loopne
and
dec
mov
xchg
mov
pop
ret
jp
div
mov
out
mov
pop
mov
jne
rcrb
lahf
mov
lea
dec
aaa
adc
add
push
or
insl
outsb
fwait
insl
inc
cmp
lcall
jb
inc
pop
cwtl
andl
and
xor
mov
sarl
outsb
inc
test
push
mov
inc
xor
insb
mov
mov
cld
js
popa
xchg
push
and
cmp
test
out
jp
fwait
shll
xlat
repz
sub
add
popa
call
loopne
jae
jbe
subl
decl
imull
cmp
cmp
repnz
lcall
sub
daa
aad
xlat
sbbl
sti
cli
add
std
dec
ret
mov
das
js
rolb
pop
pop
aas
fsubrp
insl
pop
sar
pop
mov
mov
jo
xor
call
jae
push
ret
jl
and
rclb
incb
pop
loopne
jmp
scas
pop
cmc
ljmp
stc
sbb
jmp
fbstp
int
in
int3
jo
adc
rclb
jmp
xchg
cmp
and
in
mov
sbb
out
pop
fdivs
mov
mov
lret
sub
scas
mov
sti
adc
or
repz
mov
push
call
shlb
and
popa
push
xchg
jnp
xchg
ljmp
gs
or
or
fs
and
test
test
lods
mov
or
mov
lret
shlb
push
dec
add
rcl
into
pushl
add
fildll
mov
data16
pop
mov
add
in
push
dec
repz
jmp
shl
rorb
add
jne
test
pop
shll
mov
cmp
stos
mov
jo
rorl
ret
xchg
dec
aam
cmp
shrl
add
mov
test
adc
pop
add
xchg
mov
int3
stos
fiaddl
test
sbb
cmc
testb
push
inc
add
decl
or
sbb
add
in
les
dec
ljmp
inc
pop
or
insl
push
push
loop
out
add
mov
mov
hlt
sbb
or
cmp
push
cmpsb
cmc
cmpsb
inc
fs
push
mov
dec
clc
cmp
push
nop
push
push
outsl
mov
test
ret
nop
push
push
enter
fidivrs
mov
jns
in
incl
fdivp
scas
inc
lea
leave
mov
addr16
lcall
xor
jg
xchg
lds
es
mov
nop
jg
shrb
sti
dec
cmp
cmp
jne
sub
and
pop
jle
push
and
fcom
loope
aaa
adcb
add
mov
pop
fisubrs
or
xchg
out
in
rorb
dec
insb
in
cmp
xor
cmpsb
decl
dec
jl
mull
jb
outsb
fdivrs
push
jae
xor
sub
ret
call
movsb
repz
xchg
mov
xor
pop
fsubs
sbb
loop
call
inc
add
sbb
test
mov
push
jp
sbb
push
or
dec
lock
pushl
or
push
adcl
shlb
outsl
rolb
sbb
fwait
mov
decl
dec
aad
add
sub
leave
mov
mov
push
xchg
push
lods
nop
jmp
pushf
xchg
jp
mov
ja
ja
lcall
cmp
pop
fstps
lcall
or
outsl
popf
insl
lock
testl
pop
push
int3
dec
cmp
mov
or
sbb
decl
jle
lods
jg
xor
fisubl
imul
xlat
mov
jne
arpl
push
mov
xor
adc
mov
dec
mov
dec
dec
stos
ljmp
clc
ljmp
mov
ja
lret
jbe
pop
ja
test
or
dec
pusha
push
jmp
fs
xchg
inc
jne
sar
mov
push
mov
ret
repnz
or
inc
dec
mov
pop
pushf
push
pusha
xchg
pushl
add
or
pop
in
add
inc
jns
cmp
or
clc
je
decl
sub
xor
mov
push
leave
push
dec
push
lahf
jecxz
sub
pusha
call
and
mov
inc
sub
add
mov
add
stos
pop
mov
decl
hlt
sbb
clc
outsl
mov
stos
sub
inc
loopne
ja
sub
jno
cmp
or
xchg
ds
pop
and
je
nop
jno
cmp
jmp
pop
add
sbb
frstor
addb
mov
in
dec
loop
pushl
or
flds
fnstsw
push
das
push
out
lea
pop
lock
mov
ss
loope,pn
cli
in
cli
sub
cmp
xchg
lcall
add
mov
push
mov
and
stc
int3
adc
mov
or
test
leave
lock
sar
call
or
scas
dec
fldt
fisttpll
xchg
mov
jns
popa
rcll
lret
sbb
jecxz
sub
lahf
inc
mov
es
ljmp
jle
pop
aas
lcall
cmp
clc
cwtl
mov
dec
xor
inc
cmp
test
notl
jg
or
adc
push
add
adc
sbb
mov
jns
fiaddl
cltd
js
out
mov
sub
push
mov
pop
xor
jecxz
jmp
jb
scas
xlat
ret
mov
inc
mov
aam
jmp
or
lods
jae
test
jg
pop
adc
inc
push
fsubl
pop
jne
stc
lret
vmovshdup
mov
insl
rcr
out
fsubs
jp
incl
ret
lret
int3
movsl
mov
pop
inc
mov
xor
stos
shl
popa
shlb
add
sub
repnz
jmp
decl
in
jmp
dec
jmp
mov
repnz
sbb
and
mov
fs
mov
scas
or
add
repz
xor
mov
add
inc
xchg
das
xorb
std
dec
pushl
decl
cmp
jo
js
jp
call
jae
lcall
mov
lods
sub
shlb
xchg
into
test
add
ffree
jmp
or
icebp
repnz
mov
inc
nop
push
or
cmp
xor
ja
sbb
jmp
into
jle
jbe
aas
pop
fwait
mov
dec
push
mov
pop
mov
add
in
xchg
jmp
dec
push
sub
cltd
push
fdiv
and
xor
leave
add
or
sar
jg
test
lock
outsl
mov
fistl
testl
ds
inc
js
jg
inc
add
pop
dec
xor
nop
test
pop
in
pop
push
out
pop
push
clc
mov
jnp
bound
icebp
movsb
pop
dec
and
gs
mov
inc
sub
mov
lock
jns
cmp
pop
or
lds
xchg
pusha
sar
jmp
jae
mov
cmp
ret
adc
and
dec
sub
lock
push
in
and
out
clc
pushl
fcoml
add
adc
jmp
ret
push
mov
repz
push
std
pop
push
pop
sbb
leave
mov
js
mov
jbe
mov
mov
pushf
cmp
inc
pop
sub
jmp
cmpsl
lods
fs
fisttpll
je
lret
mov
push
call
rclb
mov
inc
mov
pop
push
mov
dec
sub
adc
lods
lret
mov
cld
lock
jmp
mov
lcall
push
arpl
mov
aaa
pushf
js
add
cmp
pushl
in
push
cmp
sahf
je
cmpsl
mov
andl
ret
imul
dec
inc
scas
stos
pop
or
cmp
repnz
jno
cli
int3
jecxz
xchg
jg
mov
xchg
xchg
fldt
popf
pop
ret
push
jne
test
rorb
call
and
call
notl
mov
out
xor
sbb
jmp
and
ljmp
hlt
sbb
dec
cmp
in
outsl
std
sbb
outsl
iret
pop
xor
cmp
jle
sub
jns
incl
imul
inc
cmp
cmp
insb
inc
cwtl
xchg
xorb
inc
jg
pop
jno
lcall
push
bswap
pop
mov
lahf
pushf
cmpsb
xor
arpl
repnz
ds
cmp
int3
cmp
add
lahf
out
mov
bound
mov
xchg
pop
ficoms
sub
inc
fwait
outsl
pop
inc
jl
xor
repz
mov
scas
lcall
mov
inc
adc
push
and
je
sbb
mov
adc
cmp
pop
or
mov
stos
leave
mov
xchg
sbb
cli
xor
mov
shlb
cmp
clc
ss
cwtl
icebp
jg
pushf
xchg
or
xor
inc
imul
sti
popa
jmp
stos
loop
push
cmp
and
mov
call
je
fistps
loope
ljmp
adc
cmpl
lahf
push
push
scas
mov
xchg
jne
in
fadds
cmp
adc
ljmp
mov
inc
cld
xchg
popf
aas
jl
mov
xor
mov
shlb
sbb
xchg
jne
mov
jp
dec
and
inc
sbb
daa
test
loopne
lahf
jno
sub
incl
cld
cmp
mov
push
mov
xor
pop
dec
pop
push
frstor
pop
add
sbb
test
decl
add
dec
adc
jl
ret
int3
outsb
pop
inc
dec
push
adcb
ljmp
out
xchg
loop
icebp
push
divl
aad
icebp
xchg
adcb
imul
out
adc
ret
decl
sti
lea
xlat
addr16
add
cmpsl
sub
imulb
pop
or
popa
adc
fists
out
fdivp
incl
xchg
gs
test
pop
mov
push
fs
sbb
cmpsb
lcall
xchg
pop
fnstcw
add
cs
leave
cmp
fsts
into
outsb
leave
jb
mov
test
jnp
lahf
push
cmp
out
cli
out
fsubrs
mov
jmp
push
mov
incl
dec
into
mov
sbb
mov
loopne
lods
mov
inc
mov
pop
inc
int3
aas
movsl
sub
call
mov
mov
stos
dec
mov
fildll
aas
pop
fcompl
dec
loopne
int
push
lahf
push
push
lea
jae
add
sub
mov
mov
adc
pop
and
lcall
test
sub
inc
jp
jl
repnz
sub
jns
call
and
sbb
mov
in
dec
and
or
lret
test
sahf
push
push
sbb
stc
daa
ds
jg
jecxz
int3
xchg
sbbb
repz
iret
inc
test
pop
test
gs
mov
jmp
and
stc
dec
push
rorb
in
dec
jbe
idiv
sbb
xor
dec
cmp
cmpsl
dec
inc
pushf
aad
stos
lcall
sub
imul
mov
jno
sbbl
push
jmp
sti
and
inc
shll
inc
shlb
lcall
cmpb
les
ss
pusha
stos
andb
int
cltd
mov
cmp
jbe
and
into
or
jge
push
out
and
mov
repz
decb
pop
mov
mov
dec
mov
sbb
inc
adc
sub
mov
add
mov
lcall
mov
call
in
out
jb
dec
stos
mov
fnstenv
aas
pop
outsb
mov
pushl
stc
mov
decl
cmp
js
in
push
xchg
daa
cpuid
fcmovne
repnz
incl
jge
adc
pop
pop
adc
arpl
scas
icebp
inc
jmp
iret
es
mov
in
fimull
push
por
fadds
mov
add
cli
sub
push
push
push
into
insl
ja
js
and
mov
xor
sbb
cli
dec
jmp
jae
int
xchg
mov
dec
push
sub
scas
mov
mov
test
fcompl
inc
fsubrs
popf
sbb
inc
cwtl
inc
into
mov
push
in
mov
mov
je
in
inc
out
mov
cs
ljmp
lods
je
pop
in
sti
inc
sahf
cld
push
ljmp
inc
mov
fisubrl
jae
push
mov
lret
jne
inc
jge
push
flds
ror
pop
int
data16
fwait
out
dec
cmp
inc
and
sahf
jl
js
xor
xchg
jne
movsb
les
out
clc
daa
aaa
adc
xchg
push
xlat
outsl
sbb
inc
leave
imul
cs
pushl
call
fldcw
push
and
lcall
push
subb
add
movb
and
inc
xchg
loop
dec
xchg
pop
jne
loopne
mov
mov
fisubs
mov
sbb
int3
inc
sub
or
inc
sbb
stos
testb
sbb
nop
out
cmp
adc
jbe
cvtpi2ps
movsb
out
ret
repz
sub
jmp
setae
fisttpll
or
jl
inc
in
insl
ljmp
subb
cmpl
push
jns
dec
xor
jp
mov
fildl
jp
mov
jmp
mov
mov
adc
xchg
jmp
dec
imul
adc
decl
cmp
outsb
out
pop
adc
pop
mov
lahf
pop
hlt
fimuls
xor
out
loopne
pushl
sub
lret
cmc
test
sub
push
aad
movsl
dec
bound
mov
or
mov
gs
aam
lret
movsb
scas
fmul
lods
ds
insb
jnp
ror
fs
call
mov
jg
pop
idivl
jno
dec
fildll
adc
fs
dec
mov
dec
or
scas
push
push
cltd
hlt
jg
je
or
sub
fstps
sarb
mov
fbstp
sub
cmc
or
mov
sub
je
aad
mov
gs
sbb
jmp
jmp
inc
jnp
pop
scas
fsubrl
jne
xchg
inc
movsb
stos
sbb
loopne
or
sub
subb
addb
imul
sarl
dec
cmp
outsb
mov
scas
pop
adc
sarb
idivl
cmpsl
das
or
cmpsb
cltd
push
cmp
dec
push
jmp
shll
sbb
jb
out
outsl
rorl
or
outsl
clc
decl
mov
cs
cmp
inc
sahf
lods
lds
gs
call
shl
scas
mov
addl
divb
and
xchg
or
and
test
push
xchg
dec
mov
ja
sahf
icebp
sub
adc
cmpsl
ret
insb
cltd
xchg
and
testl
outsl
es
sbb
mov
dec
test
jecxz
mov
xchg
or
insl
stc
adc
pop
or
pop
xchg
pop
jmp
add
inc
outsl
mov
jle
mov
adc
adc
mov
imul
pop
addl
push
add
rclb
push
lret
sub
mov
ljmp
leave
pop
iret
cli
sub
into
xchg
mov
dec
pop
push
es
mov
lcall
enter
arpl
es
hlt
ds
lret
sbb
decl
outsl
rcrl
push
jl
mov
mov
pop
inc
enter
ljmp
les
or
cmp
test
int
inc
and
jmp
je
push
test
cmc
divb
or
pop
push
mov
arpl
enter
sti
movsl
lods
fdivp
decl
mov
insl
mov
outsb
es
stc
xorl
pop
fldl
jne
mov
ljmp
adc
lret
bound
and
jl
cmc
lret
mov
popa
decl
inc
pop
cmp
out
fnsave
dec
mov
cs
lahf
mov
xchg
mov
push
fildll
pushl
inc
std
cmp
sub
das
pop
push
push
push
movsl
xor
mov
lods
test
jns
loopne
lcall
jb
pop
mov
jl
xor
sub
pop
add
cs
leave
pop
popa
add
decl
out
inc
cmp
shlb
or
les
lock
mov
sub
movsb
xor
in
jbe
jno
fdivl
movsl
loop
pop
xchg
out
inc
fdivrl
mov
xchg
repz
lret
div
or
stos
in
into
mov
out
cli
lcall
add
call
pop
fcoms
add
call
lds
and
pushl
inc
inc
xor
cs
decl
hlt
aaa
fdivrp
adc
sub
divl
and
mov
jp
push
sbb
mov
pusha
mov
cmpsb
ds
std
pop
dec
incl
sbb
mov
xchg
xchg
add
xchg
movsb
cmp
decl
xor
mov
jo
out
nop
cmp
stos
add
xorb
jmp
jns
arpl
aaa
or
cmpsl
dec
and
lds
mov
push
xchg
jmp
sbb
rol
ret
sbb
ljmp
sbb
xchg
add
pop
dec
cmc
xchg
cmp
addr16
mov
call
loop
dec
lret
inc
rclb
mov
push
wrmsr
and
mov
sarl
jo
or
jmp
add
sbb
pop
dec
cmp
sahf
sarl
or
fxch
sbbb
mov
jne
sub
jl
lods
mov
call
adc
mov
scas
insb
cmp
sbb
fimuls
lcall
rcrl
or
adc
cli
aad
jo
pop
jg
mov
jae
pop
xchg
das
jg,pt
hlt
call
test
jno,pt
aaa
pop
aam
mov
decl
xor
sbb
dec
or
dec
jno
sub
xorl
or
scas
cs
jg
decl
mov
lahf
xchg
pop
into
repz
fiadds
cmp
jnp
pop
lock
les
lcall
jge
push
xchg
mov
jb
shl
add
adc
pop
mov
xchg
jno
jmp
decl
and
mov
pop
cmp
mov
popf
pop
ret
lret
arpl
icebp
mov
rol
out
test
aad
lcall
lds
sbb
xlat
pop
xchg
lcall
xchg
int3
or
fs
sahf
cld
decb
jmp
repnz
test
lods
loopne
sub
lods
in
sbb
lcall
adc
ja
fldl
mov
bound
mov
mov
or
addr16
dec
pop
sahf
xor
pop
subb
in
adc
int3
je
decl
pushl
adc
pop
or
test
imul
inc
sbb
sbbb
and
gs
mov
sub
jl
pushf
inc
jmp
mov
aad
shrl
pusha
ret
mov
add
jp
enter
sub
ljmp
clc
mov
leave
jge
xchg
cmpb
int3
inc
xchg
cmp
aaa
ljmp
cld
inc
xor
popf
mov
cmp
xchg
mov
mov
test
jmp
cmp
insb
outsb
ljmp
push
scas
into
insb
sahf
clc
ljmp
mov
fidivrl
mov
fwait
ja
cld
pop
push
int
fisttps
add
cmpsl
push
fcomip
call
xchg
push
ffree
sahf
push
loop
xchg
shl
jle
xchg
xchg
insl
pushl
inc
jo
das
insb
lcall
test
in
and
jmp
cmp
or
sbb
ljmp
les
leave
and
lcall
inc
xor
mov
loopne
test
add
add
pop
push
lock
mov
test
mov
in
dec
das
call
pop
lahf
cld
pxor
in
cmp
lret
mov
xchg
push
mov
xchg
cmp
push
add
pushl
jne
ja
mov
push
jo
mov
xchg
push
adc
decl
dec
cmp
cli
sbb
mov
jo
loopne
adc
xchg
dec
jmp
jp
jecxz
repz
add
mov
jne
cs
pushl
test
jl
adc
sbb
xor
aad
ret
sbb
add
cmp
cmc
std
pushf
sub
lahf
fs
aaa
daa
mov
pusha
inc
mov
cltd
push
les
ja
clc
incl
jns
jle
pop
inc
in
test
imul
arpl
cmp
cli
or
xchg
add
or
pop
mov
sub
aad
imul
jmp
sub
pusha
jmp
adc
repz
push
mov
int3
add
mov
jmp
lcall
mov
pop
testb
jmp
jp
ljmp
push
sbb
sbb
movsl
call
xchg
outsb
xlat
and
aas
cmc
mov
jmp
and
mov
sbb
fistpll
andb
orb
insl
dec
push
and
xchg
jmp
add
pop
add
pop
and
cli
lods
push
and
xchg
or
add
decl
lods
mov
sbb
shrl
dec
mov
add
in
add
nop
movsl
sub
xchg
lcall
xor
add
adc
mov
push
insl
js
jge
jle
cmp
xchg
cmp
outsl
clc
decl
inc
sbb
pop
pop
push
mov
push
in
add
cwtl
shr
es
in
mov
aad
jmp
ds
pop
mov
xor
sbb
dec
lods
das
adc
mov
push
stc
ror
or
push
or
les
mov
pop
insl
ficompl
dec
cmp
jg
xchg
lcall
movl
jmp
adc
or
fisttpl
sub
cmp
mov
imul
mov
or
aad
insl
arpl
push
adc
xchg
mov
movsl
xchg
loopnew
std
mov
push
hlt
pushf
imul
lcall
and
jns
xchg
lcall
inc
jecxz
rcll
pop
addl
mov
pop
push
mov
jg
jle
mov
mov
push
lods
cli
pop
cltd
call
addr16
daa
pusha
scas
jno
sub
mov
fidivrs
mov
cmp
outsw
push
sub
lcall
dec
cs
or
leave
loop
xor
fisubrl
jne
cltd
repz
xchg
popa
pushf
jmp
int
test
movsl
xchg
add
cmpsb
mov
cmp
loop
ljmp
nop
sbb
ja
loop
pop
pop
adc
dec
dec
push
les
inc
jo
pop
call
add
xchg
outsl
movsb
lcall
xor
es
loopne
and
ljmp
inc
pop
dec
add
fildll
add
sub
leave
iretw
addr16
test
mov
lahf
cwtl
ss
icebp
icebp
aas
out
out
or
jo
shll
pop
movsb
mov
or
cmpsl
cmp
dec
push
roll
cmpsb
roll
dec
fs
in
jb
pushl
jmp
outsl
lcall
adc
add
push
push
pop
fbstp
xchg
lcall
aam
sbb
jl
repnz
lods
cmpsl
xlat
shll
addr16
add
jp
push
fsubs
test
cmp
ret
sti
loopne
cwtl
fcomps
loop
pop
sub
push
jns
dec
ret
mull
clc
and
pusha
stos
fsubr
outsl
rcll
movsb
loope
add
lea
sub
cmc
or
stos
jmp
in
pushf
lods
add
xlat
jns
ja
cmp
rcll
push
ret
and
cwtl
sahf
lret
cmpb
rcr
xchg
push
std
cmpsb
rorb
mov
leave
sub
call
movl
rcl
push
lock
cmp
cli
xor
movsb
rcrb
incl
adc
mov
scas
sub
aad
cmp
movsl
jg
lea
pop
inc
sub
mov
jmp
xchg
leave
push
ss
aam
ja
std
or
xchg
mov
lods
mov
ljmp
push
mov
cmpb
dec
lods
lea
lcall
shrl
ljmp
add
push
inc
lods
add
sbb
xor
sbb
into
inc
pop
sub
push
std
cmp
lsl
fs
pushl
imull
ret
popa
pop
cmpsb
in
enter
sbb
jbe
adc
mov
int
ljmp
aam
inc
add
dec
jecxz
pop
mov
das
mov
cs
pop
in
cmpxchg
lahf
outsl
mov
jp
mov
sti
jno
imul
jmp
sub
adc
sub
push
xor
jp
mov
dec
push
cld
inc
pop
inc
cmp
mov
lock
mov
xor
insb
aas
ljmp
adc
std
push
xchg
rcr
sub
testl
inc
iret
rcrl
push
sbb
xor
mov
sub
push
mov
jp
mov
and
inc
out
sbbb
jmp
data16
imulb
jle
leave
inc
out
stos
xchg
lea
push
push
push
adc
jmp
mov
push
fldenv
roll
xchg
or
clc
loope
enter
adc
dec
push
inc
xchg
sub
jmp
mov
sub
sbb
int3
mov
inc
arpl
test
pop
xor
add
lret
xchg
data16
xchg
mov
pushl
xor
xchg
into
dec
lcall
into
stc
dec
loope
jmp
out
cmpsl
lahf
rcrb
push
mov
dec
lds
xor
mov
mov
decl
flds
push
mov
test
mov
inc
leave
jb
ss
jp
std
movsl
xchg
xor
xchg
jge
bound
icebp
mov
ljmp
orl
cltd
dec
jge
jp
test
lock
xchg
adcb
mov
dec
push
cmp
ljmp
imul
xchg
clc
mov
push
jmp
dec
imul
test
call
mov
xchg
mov
iret
shrb
push
or
mov
popa
int3
mov
fistpl
cwtl
and
loop
pop
rcrb
inc
mov
mov
inc
xchg
sub
ss
imul
pushf
lcall
inc
push
dec
fwait
sub
ljmp
mov
cmpsl
addl
das
or
clc
lcall
or
ds
xchg
inc
push
pushl
mov
cwtl
adcl
cwtl
push
xchg
fcomip
das
mov
mov
cwtl
aaa
jb
incl
stc
cmc
xlat
nop
sub
mov
mov
cmp
mov
dec
fldcw
rcr
call
movsl
ret
cmp
or
shlb
mov
lds
add
xchg
scas
adc
aad
lods
pop
cmpsb
push
sbb
or
push
add
mov
ja
in
ss
xchg
mov
add
mov
faddl
sbbb
sub
sub
jb
adc
xchg
lock
xchg
add
push
xchg
incl
sarl
pop
xchg
daa
ja
push
aam
jge
mov
inc
sub
call
jmp
sbb
push
outsb
and
cmp
cltd
jle
mov
mov
sub
pusha
rcrl
xchg
mov
loopne
test
lret
xchg
adc
es
mov
jnp
and
push
shl
xchg
sub
fwait
or
decl
mov
je
cmpsb
js
xor
in
or
dec
mov
ljmp
mov
jmp
sub
xchg
xchg
jns
dec
mov
stc
das
xor
loop
inc
in
push
pop
dec
popf
mov
and
adc
scas
jne
lcall
push
jle
lret
xchg
ret
outsl
clc
sahf
cmp
lcall
xchg
stc
aas
out
mov
ret
xchg
jmp
push
lods
adc
and
mov
push
inc
and
mov
mov
ljmp
dec
mov
or
leave
and
scas
push
rclb
push
pop
icebp
outsl
cli
or
test
sbb
lret
mov
or
mov
ljmp
mov
pop
enter
adc
mov
mov
mov
dec
sub
outsl
mov
ljmp
fidivrl
inc
sub
cs
pop
push
outsl
or
aad
int3
in
mov
lods
fs
incl
sub
ljmp
and
or
push
add
pop
fcmovne
fildll
int3
lcall
push
cltd
sbb
repnz
adc
out
fwait
sbb
adc
in
pop
cmp
mov
fldcw
ljmp
int3
imul
ds
push
outsb
sbb
stos
sub
int
sbb
call
xor
inc
mov
in
mov
out
pop
and
stos
out
lds
mov
ljmp
cmpsw
insl
fistl
jne
sbb
xchg
mov
stc
test
mov
sub
dec
test
das
lods
add
inc
pop
cmc
ret
lds
fsubrl
mov
std
sub
inc
shll
add
and
jmp
xor
lods
cwtl
roll
les
in
aas
ds
mov
mov
inc
adc
jmp
fildl
jecxz
lar
jne
aas
jno
pusha
jo
sub
filds
cmpsl
adc
decl
pusha
popf
stc
push
adc
cmc
dec
and
outsl
xor
or
xchg
mov
pushl
pop
ds
enter
movb
inc
mov
xor
incl
gs
mov
mov
and
cmpsb
xchg
lods
cmp
or
iret
test
decl
test
cltd
dec
loop
xchg
mov
inc
or
mov
ret
jne
sub
or
hlt
iret
test
mov
repnz
jmp
lods
inc
add
cld
test
outsb
pop
cmp
pushl
andl
push
sub
mov
mov
std
or
lcall
cmpl
jle
fadds
rolb
fcom
aaa
cmp
sar
lcall
xor
pop
xor
inc
adc
int
js
fidivl
xchg
mov
jge
call
cli
or
sbbl
pop
das
push
js
mov
fimull
push
repz
decl
mov
jecxz
xlat
mov
add
jge
pop
xor
xchg
sub
push
sar
fcomip
in
lahf
cltd
pop
lcall
push
andl
xchg
fldl
ljmp
inc
ljmp
int3
inc
cmpsl
xchg
cmc
sbb
mov
inc
ds
or
call
lcall
mov
rclb
inc
inc
ja
inc
test
inc
adc
pop
sbb
ret
jg
ljmp
and
mov
iret
in
dec
lods
arpl
shll
pop
gs
push
pop
push
decl
ljmp
and
cmp
push
rolb
in
cli
call
cwtl
insl
das
jnp
inc
mov
movsl
or
fnop
outsl
add
leave
std
mov
ret
incl
push
inc
loopne
lahf
xchg
xchg
mov
mov
mov
sbb
dec
pop
mov
ja
ja
leave
xchg
or
sbb
push
sti
ja
ljmp
jp
sbb
jp
xchg
cmc
push
repz
mov
call
fimuls
pop
les
add
jnp
in
push
hlt
lret
lahf
cmp
cmp
xchg
xlat
cs
incl
pop
jns
pop
inc
mov
out
je
in
cld
nop
adc
je
decl
mov
dec
jns
stos
fnsave
imul
popf
enter
pushl
loop
insl
repz
not
sub
mov
repnz
jl
and
push
aam
jb
sub
pop
hlt
pushl
ljmp
out
cmp
and
xchg
xor
push
mov
mov
in
sbb
push
push
push
mov
xor
or
mov
or
test
jmp
cmpb
mov
insl
ja
pop
push
xlat
push
inc
scas
lods
push
sub
rorb
lock
push
adc
mov
sbb
pop
mov
incl
sub
xchg
and
push
mov
xchg
lock
inc
push
cmpsb
movsl
and
and
lcall
lea
test
jecxz
inc
aad
in
fwait
push
fstpt
ret
fnstenv
pop
adc
ljmp
jne
out
cltd
adc
mov
mov
and
lcall
inc
mov
xlat
stos
mov
rorb
cmp
mov
call
jg
xor
or
xchg
jp
dec
dec
and
xlat
test
pop
mov
mov
call
xchg
mov
scas
push
dec
dec
dec
ja
adc
pop
mov
enter
rolb
subl
test
pop
xchg
gs
leave
dec
adc
cmp
dec
inc
mov
cltd
cmp
out
scas
or
ljmp
ret
cmp
std
lcall
lods
das
inc
add
int
pusha
cld
call
xor
mov
cld
adc
mov
pop
inc
fnsave
orl
pop
test
or
nop
repz
jg
es
dec
mov
loop
jns
sbb
ret
ss
out
dec
fdivrl
in
dec
lcall
call
hlt
mov
add
mov
inc
pushl
sub
test
nop
rcr
push
jb
out
push
mov
in
shrl
push
inc
xchg
rol
add
subb
dec
arpl
push
lcall
jmp
dec
leave
mov
in
jb
pop
push
pop
orl
lods
mov
div
fcomip
incl
hlt
subb
int3
cmp
test
dec
shlb
add
clc
mov
adc
stc
test
mov
add
jl
repz
cmp
out
lahf
lret
dec
pop
cltd
enter
stos
flds
mov
push
ljmp
mov
inc
fbld
out
into
push
sahf
xchg
fdivrp
cmp
bound
inc
dec
cmp
negl
ret
jbe
jbe
cmp
adc
fxch
inc
xor
icebp
inc
jne
sahf
mov
mov
test
jmp
mov
sbb
or
dec
xor
adc
mov
jl
fnsave
sar
arpl
ljmp
fisttps
jmp
test
lods
cmp
rclb
jmp
mov
shl
lock
in
decl
jmp
dec
ds
jle
sbb
mov
push
add
stos
and
fucomip
clc
ljmp
enter
insl
xor
jge
inc
lods
cli
les
mov
ljmp
mov
dec
jl
sub
cmpsl
sub
jg
ljmp
or
sti
jp
mov
xchg
mov
inc
cli
aas
gs
ljmp
leave
sub
out
and
sbb
pop
add
ret
aad
lcall
push
dec
push
fldl
push
or
arpl
add
decb
push
or
sub
cmp
lcall
cmc
ljmp
shl
in
xor
ret
imul
add
ljmp
mov
repz
mov
cmp
insb
sahf
inc
add
jg
decb
paddsb
add
test
mov
addr16
push
insb
or
mov
cmp
imull
testb
or
lea
add
call
dec
testb
popa
repnz
xor
jmp
sub
jp
xorl
adc
pop
xor
icebp
popf
sbb
push
inc
test
jg
sbb
xchg
adc
add
lds
dec
daa
mov
sub
jb
adc
fists
mov
xchg
cmp
cmp
sbb
jbe
test
xor
cld
in
add
and
jnp
jle
and
mov
jb
jno
les
cmp
lret
pushf
je
inc
ret
cmp
push
loopne
add
push
mov
mov
push
imul
mov
ss
pushl
cmpsb
outsl
mov
jg
jge
jb
push
test
pop
xchg
mov
aam
loope
pushl
cmc
mov
jmp
rep
es
imull
and
jmp
lock
inc
mov
sub
loope
in
and
in
arpl
pop
sub
fisubrl
push
sbb
icebp
push
or
loopne
ret
adc
in
push
rorb
pushf
adc
clc
pushl
adcl
xor
lods
and
sbb
push
pop
mov
movl
popa
cmpsb
stos
rolb
incl
sub
mov
dec
mov
lcall
dec
addr16
inc
xchg
inc
insl
in
out
clc
out
or
movsl
aas
rep
or
clc
lcall
mov
mov
into
push
dec
int3
mov
repnz
in
jg
and
movsl
xor
sub
subb
out
in
call
fs
ds
pop
mov
push
sub
sbb
negb
mov
xchg
jns
or
ljmp
adcl
xchg
subb
push
repnz
call
test
mov
mov
cwtl
and
mov
repnz
mov
lcall
test
mov
std
pushl
push
jge
mov
ljmp
inc
js
xchg
or
jbe
xlat
fnstsw
ds
inc
inc
out
pop
adc
jo
push
lods
orb
xor
dec
pusha
mov
idivb
push
fistps
cs
in
frstor
into
mov
pop
xchg
loope
daa
ss
iret
mov
test
rcr
mov
cmp
xchg
xchg
xchg
pop
aas
leave
jns
mov
pop
inc
cmp
movsl
mov
jle
neg
and
cmp
jle
hlt
dec
adc
sub
rcrl
arpl
aam
movsl
sbb
neg
jne
jecxz
xchg
imul
lcall
mov
mov
cwtl
orl
adc
or
cmpsl
insb
jge
daa
sti
cltd
into
loope
dec
mov
jl
je
cld
or
jo
and
jb
sbb
jmp
inc
pop
andb
and
push
pop
xchg
rolb
aam
iret
push
dec
jmp
and
sarb
pop
jo
mov
xlat
mov
repz
mov
dec
jl
daa
out
sbbb
pop
int
cli
scas
cmp
rcll
aas
cmp
nop
leave
push
aas
mov
lock
call
ds
fs
imul
mov
ljmp
inc
add
xor
int
call
push
sar
in
cmp
mov
pop
lock
mov
aaa
jne
adc
push
pop
ret
add
xchg
pushf
mov
sub
out
lods
adc
and
ret
sub
pushl
lock
mov
outsb
sbb
insb
mov
adc
lahf
adc
xchg
fisubl
stos
fdivs
mov
ss
fwait
test
loope
mov
fmull
mov
xchg
cmpsb
loopne
mov
mov
push
rcll
and
jl
call
data16
push
das
repz
ljmp
std
popl
push
fdivl
rorl
and
pcmpgtd
loope
daa
xor
icebp
scas
inc
test
adc
jbe
or
sbb
insb
add
xchg
adc
jle
test
add
lret
lea
sub
mov
test
decl
lahf
xchg
sti
xor
movsb
aaa
xor
mov
aad
ljmp
ret
mov
mov
jno
test
mov
pop
pop
jno
inc
push
sbb
and
or
mov
add
jae
popa
jecxz
jmp
push
mov
inc
daa
imul
push
jne
push
push
dec
int3
decb
mov
ljmp
mov
inc
lods
popf
mov
repz
push
sub
decl
or
icebp
out
ljmp
add
inc
jnp,pt
ljmp
xchg
fcomip
call
repnz
popf
jb
inc
cwtl
fldcw
jnp
das
loop
jmp
lret
loopne
xlat
adc
popf
xchg
pop
aam
adc
out
cmp
ljmp
dec
in
notl
movsb
jg
loopne
test
cmpsb
inc
push
lock
decl
xlat
loope
xchg
cli
jecxz
mov
and
je
or
mov
ljmp
insb
cmp
ret
push
xorb
out
ljmp
sub
incl
bound
mov
mov
das
mov
or
sbb
dec
xchg
jg
incb
jle
pushf
sbb
subb
mov
cltd
in
xor
popf
inc
jbe
or
incl
pop
push
clc
imul
fs
mov
stos
xorl
lcall
adc
add
imul
pop
cmc
push
ret
stc
dec
enter
mov
ret
call
ljmp
and
sub
loop
push
pusha
pushf
out
push
sbb
xchg
ret
cmp
inc
cli
push
adc
stos
ljmp
bound
outsl
dec
sub
and
ds
out
cwtl
sub
incl
mov
and
xor
xchg
daa
and
icebp
inc
xchg
stos
xchg
add
inc
dec
cmpsb
frstor
sub
cmp
in
lods
mov
ljmp
mov
cmp
jmp
fnstenv
push
xchg
inc
movsb
cld
aaa
add
cmp
cs
mov
add
sbb
mov
in
gs
std
push
imul
fmuls
bound
out
xchg
or
sub
adc
mov
fidivrl
jecxz
cmp
fwait
cmpsl
adc
repz
lock
mov
xor
repz
fcompl
fidivrl
fsubl
insb
imul
sbb
ret
push
cmc
add
jmp
jge
test
loope
sub
jb
sbb
inc
mov
lahf
xchg
ljmp
jge
inc
jge
ss
cmp
adc
sbb
in
inc
daa
orl
jmp
jno
mov
aad
push
fbld
icebp
xor
mov
jmp
ljmp
inc
mov
push
das
shll
mov
mov
fldenv
lcall
cli
adc
dec
fs
mov
out
dec
lahf
mov
clc
and
sub
pushl
xor
or
mov
adc
inc
cmpsb
decl
mov
sti
mov
les
push
fcomps
sbbb
aad
adc
call
or
aaa
lahf
je
dec
cmpsb
sbb
jg
sub
mov
sub
cmc
push
push
mov
add
inc
icebp
hlt
mov
and
pop
adc
xchg
jp
inc
push
loopne
dec
cld
dec
fcoml
je
mov
sahf
adc
push
call
dec
jmp
push
aas
js
jbe
push
push
or
call
sbb
xchg
inc
push
xor
pop
mov
test
mov
xorb
mov
shrb
nop
xor
rclb
sarl
adc
lret
ja
pushl
std
inc
pop
xor
cld
sbb
add
add
in
into
addb
push
es
jb
add
aam
decl
sarl
test
and
subb
call
jo
jp
in
xchg
and
jmp
add
shr
popf
mov
icebp
inc
pop
mov
test
mov
mov
pop
lcall
ror
jmp
fidivl
test
sub
sbb
jle
out
inc
repz
test
shlb
addr16
inc
sub
jo
scas
adc
aaa
jb
jge
push
data16
hlt
int3
adc
int3
add
sbb
xchg
pop
adc
mov
in
jnp
rcrb
mov
dec
cmp
das
adc
cmp
decl
gs
push
orl
push
jbe
fs
std
push
cmpsl
add
aas
or
fsubrl
negl
cli
popf
jbe
cmp
cmp
das
push
notl
popf
lcall
ret
out
cwtl
cmp
incl
or
aaa
sub
jmp
jg
pop
jb
add
cmp
leave
int
jb
mov
fs
jbe
lcall
test
cmp
mov
xchg
sti
shll
pushf
lock
push
decb
mov
std
icebp
incl
jo
xchg
pusha
push
pop
jo
cmp
sub
jle
or
iret
int3
xchg
scas
mov
xor
mov
xchg
mov
in
lock
mov
adc
int
shrl
decl
fs
sbb
dec
pop
loopne
pop
scas
and
inc
jge
aad
orl
ljmp
insl
repnz
bound
inc
pop
nop
dec
push
add
leave
sub
jbe
jno
aaa
or
push
cld
pushl
dec
in
cmpsb
aam
cs
mov
mov
mov
clc
inc
inc
ret
insl
jl
and
fcmovnu
mov
jo
push
test
mov
cld
jecxz
sub
xchg
test
xchg
push
inc
ja
adc
sti
jb
mov
xchg
xchg
mov
push
and
push
popa
lcall
out
add
lsl
aaa
mov
shr
cld
pop
mov
outsb
ljmp
std
cmp
mov
not
dec
xor
filds
ja
push
xchg
xchg
lcall
movl
mov
or
cltd
push
cmp
call
aad
bound
pop
pushl
sbb
dec
mov
push
hlt
adcb
scas
stos
push
inc
out
call
jl
jp
jno
filds
bound
cmp
arpl
pop
inc
lcall
cmp
shrb
repnz
push
push
sub
jl
incl
jg
sbb
xor
add
movsl
xor
outsb
mov
imul
mov
lret
ss
push
or
decl
std
inc
adc
mov
inc
or
push
lea
pop
adc
or
neg
dec
push
xchg
repnz
jns
movsb
push
std
jae
push
or
push
aam
inc
ret
cmp
orl
sahf
push
push
lods
mov
lods
jb
daa
test
mov
inc
sbb
mov
mov
mov
inc
test
insl
dec
scas
sbbl
pop
mov
jmp
insb
movsl
jl
fdivrs
add
aaa
add
call
push
add
or
add
daa
xchg
pop
xor
decl
ret
mov
icebp
and
ja
xchg
add
xor
incl
jns
cmp
mov
xor
jecxz
lods
sti
in
or
js
call
add
into
insb
in
fstpt
es
mov
popa
icebp
jle
dec
cmpsl
test
lea
das
mov
jae
nop
mov
sub
call
adc
pop
sub
pop
lock
popa
leave
push
mov
adc
ret
fsubr
xchg
xchg
out
mov
dec
decl
jne
call
ret
leave
pop
iret
rorb
mov
and
les
decl
lock
in
add
dec
clc
js
test
inc
mov
shll
or
dec
mov
test
std
adcl
loop
in
pop
pop
mov
pop
ret
int
mov
add
out
inc
aad
mov
scas
mov
test
push
cltd
or
jg
decl
jbe
jg
sbb
adc
daa
movsl
mov
iret
jge
ljmp
std
out
push
lahf
jle
mov
xlat
mov
repz
fimull
jg
inc
push
add
sbb
loop
aam
js
loop
imulb
pop
repz
stc
pushf
inc
cmpsl
jb
pop
lahf
das
or
cmp
xor
mov
popl
ljmp
lret
sub
xchg
cmpsb
sbb
mov
int3
cs
and
icebp
incl
lods
or
jne
mov
fmuls
dec
inc
into
sub
lcall
jbe
adc
fs
in
mov
mov
fadd
jb
leave
jmp
outsl
dec
mov
addb
int3
push
xchg
mov
inc
pop
mov
jae
or
pushl
xor
mov
jo
sbb
and
into
inc
pop
sbb
scas
sbb
sub
mov
loope
popw
mov
gs
fdiv
mov
je
leave
xchg
inc
pushl
fmuls
or
lret
sub
in
lahf
rclb
ret
xchg
loope
adc
pop
mov
cmp
push
in
mov
sub
sbb
push
aaa
pop
gs
jb
fistpll
sub
cs
jmp
int
inc
or
jnp
xorl
pop
outsl
ljmp
cwtl
jbe
or
jae
jno
sbb
stos
roll
dec
inc
adc
jp
mov
icebp
adc
push
xchg
sub
jl
rol
dec
outsb
outsl
sub
js
push
decl
pushl
push
fstps
xor
sub
loope
clc
test
cmp
inc
jp
sbb
add
cmp
dec
and
nop
dec
adc
xchg
cmp
inc
mov
or
add
pop
adc
jge
fcomip
int3
out
xchg
fwait
pusha
push
rcrl
sbb
mov
xchg
lock
xor
pop
cmp
mov
inc
pop
daa
inc
mov
mov
pop
and
mov
jge
in
fcomip
xor
xchg
insw
pop
shlb
add
cli
stos
mov
incl
cld
enter
and
add
pop
jno
dec
jns
xor
inc
sub
lds
pop
je
loop
or
push
aad
add
add
sbb
lcall
xor
xorb
xchg
mov
jmp
xchg
js
jge
sbb
fidivl
and
loopne
sub
jbe
fcomps
inc
loopne
idivl
dec
mov
dec
sub
mov
call
aam
cld
jl
pop
in
aad
out
jg
out
mov
bound
pop
or
clc
incl
test
lock
pop
cmp
dec
stos
cmp
and
out
adc
mov
cmp
or
movsb
in
xor
sub
std
and
sti
inc
and
add
push
push
std
lcall
loop
and
lcall
stos
push
mov
ja
push
stos
aad
jle
jmp
xor
xchg
xchg
push
loop
and
divl
cmp
lcall
rcrb
and
pop
inc
jle
jnp
push
outsl
lock
rcrb
repnz
push
push
push
jmp
add
int3
push
movsl
pop
add
inc
mov
jl
iret
clc
call
rclb
in
cmp
sub
je
call
dec
mov
xchg
xchg
incb
scas
data16
push
repnz
pop
fidivs
fists
and
decl
mov
jmp
fcompl
push
push
mov
idivl
pop
xchg
inc
mov
cmp
jge
push
cmp
mov
je
mov
dec
fisubrl
jg
sbb
mov
incl
hlt
mov
xchg
hlt
lret
lea
sbb
sub
loope
call
clc
aam
jae
cmp
mov
jmp
iret
in
or
in
jae
or
sbb
mov
xchg
mov
mov
ds
lcall
sbb
gs
sub
dec
aam
xor
mov
in
pushl
into
mov
aas
out
inc
push
xlat
mov
sahf
mov
and
jle
incl
cld
das
adc
adc
pop
add
dec
lea
fs
cmpsl
in
xchg
fstl
call
sbb
mov
sbb
mov
insb
int
adc
xchg
sub
mov
mov
rolb
clc
mov
inc
movsl
and
mov
call
fcoml
subb
out
ss
jbe
cmp
call
scas
cmp
jg
mov
mov
mov
fwait
mov
inc
outsb
popa
shll
in
inc
fildl
daa
negb
call
pusha
cmp
push
xchg
xchg
cld
push
dec
adc
fildl
push
or
ljmp
cltd
fcoms
addl
jne
mov
jbe
add
incl
movsb
in
add
cmp
mov
std
inc
push
mov
xor
ret
cmp
sub
push
ret
push
pop
mov
std
shll
movsb
inc
lea
mov
lcall
fisubrl
adc
sub
ja
bound
outsb
fwait
lret
push
rorb
add
iret
call
jge
and
ret
popf
mov
or
add
mov
fcomip
cwtl
bound
adc
cld
cmp
dec
mov
cld
mov
add
cltd
sti
mov
dec
sti
add
lcall
fcomps
jge
in
fs
fadds
pushf
add
jae
sub
adc
pop
sbb
cmpsl
xchg
daa
decl
adc
xchg
cmp
mov
arpl
jmp
cmp
and
jg
cld
add
repz
pop
sub
mov
sbb
incl
sbb
lds
xchg
pop
xchg
pusha
pop
mov
or
arpl
sbb
lcall
push
mov
rcl
sub
dec
pop
aad
inc
jp
mov
dec
daa
pusha
mov
push
cmp
std
push
dec
mov
pop
mov
dec
pusha
inc
cmp
jg
dec
outsl
inc
in
out
es
andb
xchg
ds
out
andl
cmp
add
mov
pop
cmpsb
pop
aaa
or
loop
es
test
scas
lock
in
sbb
add
pop
cmp
aad
push
cmp
inc
or
in
out
fmull
in
push
pop
dec
xor
lock
sub
mov
repnz
test
cli
jae
push
jbe
scas
insb
adc
and
push
bound
rolb
imul
out
nop
dec
push
jl
jg
ljmp
push
loope
mov
or
jmp
cs
dec
mov
movsl
popf
add
xchg
notl
pushf
add
std
inc
or
mov
add
js
sub
cmc
jg
jmp
mov
jnp
jne
sbb
push
mov
xchg
pop
xor
mov
mov
jg
ljmp
mov
xlat
or
into
add
cmpsw
aas
stos
ljmp
add
inc
das
clc
call
dec
fistl
jmp
into
mov
xor
fcomps
cmp
clc
push
lret
ljmp
jge
movb
lcall
fsubs
jge
xchg
lcall
and
inc
sbb
push
outsb
fs
clc
bound
in
xchg
xchg
aam
jne
inc
mov
bound
lcall
push
mov
fmuls
and
outsl
icebp
jp
mov
mov
jg
dec
fists
hlt
mov
fstpt
icebp
stc
dec
les
mov
pushf
add
incl
nop
and
test
rol
stos
jns
mov
or
scas
pop
aam
cld
sar
mov
mov
xor
cmc
push
ljmp
stos
lahf
out
jne
in
mov
adc
rorl
xchg
call
leave
aad
std
lea
xchg
mov
leave
int3
mov
dec
hlt
push
mov
jne
orl
dec
out
clc
in
mov
outsl
int
mov
mov
jp
lret
dec
mov
call
stos
adc
lret
test
pop
sti
fbstp
jle
imul
jg
pop
cmp
xorl
stos
orb
aad
jp
push
repz
mov
jl
mov
ror
std
jp
fnstsw
xlat
or
lret
dec
stc
dec
fsubr
mov
mov
arpl
jae
insl
imul
andl
mov
fistpll
sub
cld
xchg
inc
sti
mov
jecxz
mov
jb
in
cmp
mov
sub
pop
fwait
dec
mov
jp
fidivrl
outsl
cmc
ja
inc
std
xchg
and
pushl
cmp
ss
add
push
pop
or
das
std
clc
shll
repnz
sub
cmpsb
cmp
jmp
pop
ficoms
or
in
and
arpl
insl
data16
repz
sar
pushl
cld
test
stos
ss
jae
ret
push
add
std
mov
jg
stos
sahf
test
fistpll
cmp
sbb
pop
lea
xchg
push
enter
inc
js
sti
incl
cmp
mov
xchg
pop
repnz
lret
lods
dec
xor
mov
lahf
push
aaa
adc
xor
arpl
mov
pushl
xor
pop
sub
push
jno
mov
xchg
ds
pop
decb
cmp
or
xor
jg
or
out
fcomi
subl
leave
sbb
sti
fsubrs
pop
mov
clc
test
and
es
imul
fdiv
leave
xchg
inc
adc
addr16
mov
mov
out
inc
out
and
and
and
mov
lret
push
pusha
push
jnp
sub
es
dec
sbb
jmp
inc
sbb
jne
mov
or
call
push
insl
lods
icebp
push
stc
js
xchg
mov
xchg
push
incl
push
xlat
and
popf
push
dec
mov
ds
push
popa
cs
sbb
xchg
roll
inc
int
jp
mov
sbb
notb
mov
jne
icebp
incl
mov
stos
cmp
mov
imul
jbe
mov
jae
cmp
lcall
dec
daa
in
jecxz
imul
push
mov
gs
imul
dec
inc
push
std
das
popf
cmp
call
fdivrs
mov
icebp
pop
adc
xor
jle
push
xlat
xchg
jg
cmp
mov
mov
xor
lret
mov
inc
or
outsb
or
push
pop
test
mov
and
outsb
mov
or
fistl
mov
mov
jns
xchg
jmp
inc
les
inc
mov
jmp
cli
xchg
pop
cmp
std
stos
lea
div
jb
cmc
mov
mov
imul
mov
aam
adc
aam
loop
pushl
push
lcall
pop
adc
scas
mov
loopne
dec
adc
daa
and
ja
xorl
je
mov
mov
push
push
repz
pop
push
dec
decl
ljmp
lds
fstpt
xor
mov
dec
stos
cs
incl
call
mov
jo
ret
mov
pop
fisttpll
cmc
int3
or
add
lcall
js
pushf
and
sub
sub
mov
je
inc
sbb
and
dec
add
ljmp
cmp
xchg
push
lods
stc
sarb
lea
nop
pop
das
clc
aas
fwait
mov
nop
mov
sbb
add
in
sbb
xor
jg
incl
pop
jb
lea
mov
sub
adc
push
jl
sub
imul
ds
and
shll
loope
lds
iret
stos
jbe
popf
cmp
out
aad
lods
jo
mov
repz
les
sub
sbb
testb
sub
inc
ret
and
test
data16
and
mov
sub
jmp
or
mov
inc
sbb
pop
inc
sbb
ljmp
test
sbb
rcrl
sub
jmp
fdivrl
ret
call
and
adc
and
add
sub
pop
mov
nop
and
xor
enter
cmp
cvttps2pi
ljmp
or
cli
mov
lcall
push
aad
sub
xchg
push
or
shrb
xchg
rclb
cltd
test
mov
inc
repz
sub
scas
pop
imul
les
dec
add
xor
xor
pushl
fildll
inc
ja
pop
std
xlat
cmp
fisttpl
arpl
mov
inc
dec
ret
in
mov
xor
call
inc
xchg
mov
fists
xchg
cmp
mov
stos
lods
mov
or
sub
insl
fnsave
lret
into
sub
pop
in
call
sub
dec
mov
jg
jmp
lods
lret
popf
push
push
ljmp
sti
jbe
ljmp
mov
scas
jmp
or
pop
dec
mov
pop
fidivrs
push
xchg
mov
cltd
cmpl
mov
inc
std
iret
sub
out
push
mov
lock
jg
in
jno
addr16
int3
or
xor
xchg
sub
incl
jae
out
enter
into
inc
sub
lret
stos
mov
movsl
dec
popf
mov
fcomps
lcall
jae
and
pop
popa
inc
cli
mov
sahf
mov
lret
fists
xor
mov
fisubs
cmp
xchg
or
or
jle
inc
mov
mov
dec
xchg
jg
outsl
cli
inc
gs
jnp
adc
mov
gs
dec
push
inc
xor
mov
aaa
pop
and
mov
mov
cmp
insl
movsl
je
inc
decl
jg
jnp
mov
out
xor
rcrb
xchg
sub
movq
call
cmp
dec
push
push
sarb
push
hlt
push
out
dec
clc
mov
inc
sbb
lods
lret
xchg
adc
jae
idiv
out
cmp
push
cmp
xor
pop
sbb
sbb
cmp
adc
ljmp
mov
sbb
shr
cld
mov
sbb
mov
js
movsb
stos
flds
cmp
aad
sbb
loop
dec
fcomip
into
fisttpl
xor
push
and
inc
mov
call
mov
push
sub
mov
push
out
out
aas
pop
cmp
incl
add
cltd
and
fildl
push
xorb
lods
xor
add
lcall
sub
jnp
cmpsl
jo
scas
jns
lahf
add
xchg
divl
jne
mov
adc
repnz
incl
ret
mov
xor
inc
mov
adc
or
or
stc
xor
inc
mov
cltd
hlt
sub
mov
pop
or
jecxz
rcrl
lcall
loope
dec
mov
cli
incl
jmp
push
cmpsb
pop
nop
dec
mov
and
inc
aas
jge
push
rorb
js
push
fs
fldt
sub
addr16
xchg
test
xchg
in
mov
in
mov
adc
jecxz
xchg
sahf
jmp
enter
aam
je
int
mov
call
xlat
mov
fcomps
mov
add
xchg
add
movsb
popf
testl
jo
push
lock
jge
dec
push
mov
add
das
mov
shrb
jnp
sub
rolb
cmp
jmp
pop
dec
scas
pop
sub
fcomi
pop
pop
jno
mov
scas
push
xchg
lods
push
push
aad
incl
mov
int3
int3
sub
ds
xchg
out
push
sahf
mov
cld
test
bound
jb
fisttps
mov
xchg
mov
push
jbe
inc
adc
xchg
push
jmp
pop
ja
shl
inc
lret
and
cmp
add
pop
and
pop
jg
adc
out
fldt
out
lock
addl
in
push
mov
rcrl
dec
cmpsb
inc
out
fdivl
jle
mov
xor
pop
js
cmp
dec
inc
add
mov
aaa
mov
xor
test
adc
mov
fcoms
sub
incl
enter
xchg
push
inc
push
insb
inc
xor
jnp
cltd
jmp
mov
lcall
dec
pop
loope
push
es
leave
xor
mov
mov
rclb
xor
out
adc
sbb
xor
xlat
test
or
push
insl
decl
mov
out
jg
xchg
insb
cmp
adc
push
lea
lahf
out
popa
jmp
nop
jmp
add
sbb
aad
inc
pop
shll
pop
out
lds
jmp
mov
cmp
add
loop
mov
ret
inc
mov
pushl
push
clc
aam
bswap
cli
dec
repnz
outsl
aas
dec
push
xchg
pop
sub
idiv
ljmp
push
mov
mov
out
push
mov
mov
lcall
roll
sub
pop
in
sbb
and
cmp
pop
fistps
push
xchg
in
add
and
jg
pushl
pop
cmpb
push
xchg
sbbl
sbb
jmp
pop
cmp
cmp
inc
notb
pop
adc
dec
xchg
mov
flds
fldt
movsl
cmp
dec
pop
gs
lret
mov
icebp
and
incl
mov
and
movsl
cmpsb
dec
ljmp
ljmp
popa
inc
int3
mov
popf
test
imul
inc
mov
xchg
sar
notb
cmpsb
cs
fdivs
and
adc
xor
cmp
jbe
add
std
lea
rorl
push
ljmp
scas
sbbb
mov
iret
fdivrp
leave
pop
xor
decl
lret
or
in
adc
imul
bound
xor
dec
mov
mov
call
jge
add
push
cmp
xchg
in
pop
sub
xor
das
clc
out
clc
cwtl
cltd
lret
sbb
pusha
ret
ja
int
xchg
stos
daa
jl
xchg
ljmp
jle
add
cmp
mov
sub
sahf
mov
mov
jp
mov
jg
xchg
sbb
mov
add
dec
shl
arpl
mov
adc
sub
test
pop
add
pushl
xchg
adc
lods
and
or
sbb
mov
cmp
pop
les
xchg
scas
ljmp
cmp
mov
movsl
ja
xor
dec
fcoms
or
mov
pop
ljmp
pop
jge,pn
popf
lea
fdivrl
aad
in
add
dec
sbb
subl
pop
ljmp
in
repnz
sub
jmp
aam
mov
xchg
pop
jge
add
dec
and
mov
mov
cmp
inc
mov
out
cmpsb
jns
xor
stos
dec
push
ret
push
push
mov
mov
dec
ljmp
into
add
dec
dec
mov
jno
in
adc
and
cmp
inc
pop
mov
pop
je
addr16
decl
dec
mov
pop
xchg
je
mov
push
sbb
xchg
sti
or
xchg
jb
add
push
sub
xchg
jge
incl
movsl
cmp
test
sub
test
xor
and
mov
xchg
jg
add
pop
insl
test
sub
fbld
jecxz
popa
dec
sbb
inc
ja
popf
jnp
fucom
test
xchg
cld
or
push
inc
cmovge
fcomip
xchg
out
mov
sub
add
gs
xor
xor
data16
xor
and
andl
dec
testb
pushl
cmpsb
out
adc
xor
dec
jns
test
mov
incl
sbb
jnp
dec
add
xchg
mov
cmpsl
xchg
mov
lret
decl
mov
push
pop
push
test
fsubr
fs
incl
jmp
push
dec
jl
cmp
or
lods
mov
clc
in
call
inc
pop
inc
ljmp
adc
jo
sub
test
xor
inc
adc
jmp
rcrl
xchg
mov
decl
std
inc
lcall
stos
and
sub
subb
ds
je
xor
das
sub
jmp
outsl
xor
es
scas
data16
dec
dec
aad
mov
cmp
lods
movsb
dec
popw
fs
fcomip
jmp
fstl
xor
xchg
stos
jl
add
cmp
test
mov
mov
imul
mov
cwtl
lret
hlt
jg
or
xor
pop
iret
cmpb
out
scas
lret
mov
lcall
and
add
push
cmpsb
mov
nop
icebp
fsubrs
sbb
enter
andl
bound
insb
mov
dec
jnp
data16
sbb
push
lcall
jno
fildl
pop
xchg
daa
adc
int
incl
incb
fstl
dec
lahf
inc
mov
mov
xchg
dec
xor
idivb
jg
fs
mov
sub
dec
push
cs
loopne
sbb
jmp
jnp
jnp
mov
incb
nop
repz
nop
jae
aas
outsl
imul
test
call
lcall
rorb
push
mov
lcall
addr16
iret
dec
incl
inc
das
jmp
ret
xchg
fsubl
ja
sub
decl
hlt
xchg
notb
stos
es
int
stos
fcom
lret
popl
loope
mov
jmp
dec
loope
ds
inc
lock
mov
fisttps
icebp
jne
sbb
clc
push
sarl
inc
daa
mov
js
sub
or
sub
popf
pop
dec
dec
xchg
lods
negb
cli
shll
pushl
fiaddl
push
dec
mov
push
jb
lds
push
sbb
sub
sbb
dec
and
push
rcrb
lret
dec
or
and
aad
repz
insl
add
stos
sbb
arpl
push
call
popa
sbbl
jo
sub
xor
clc
sbb
pop
enter
aam
aam
dec
cltd
add
shrl
xor
jmp
mov
test
add
xchg
cwtl
jmp
shr
inc
adc
and
out
ds
sarb
leave
and
dec
or
and
call
in
jle
shll
pop
dec
call
je
cmp
mov
push
or
lret
call
pop
into
adc
sub
out
stc
or
repnz
xchg
test
mov
cmp
incl
add
in
mov
cli
ret
ret
sbb
xchg
mov
cmp
in
in
dec
lds
push
mov
jp
push
aas
add
out
and
adcl
or
cwtl
and
and
test
xor
icebp
decl
out
adcb
xchg
lock
repz
mov
mov
jmp
repnz
test
sub
pop
pop
out
mov
das
xor
adc
movsl
out
cmp
add
xor
dec
xor
push
aam
cmc
ljmp
test
cwtl
lahf
movsb
sub
movl
sub
shl
call
into
adc
push
data16
or
sub
dec
in
mov
cmp
into
insl
mov
dec
cltd
jb
cmp
js
xchg
pop
mov
sti
xchg
and
pop
dec
lret
dec
sbb
arpl
aad
sub
jle
enter
push
mov
in
mull
mov
mov
or
cltd
movsb
jo
aam
outsb
iret
outsl
cli
push
or
clc
push
xor
inc
mov
push
pusha
jg
ret
mov
dec
mov
pusha
je
jae
dec
pop
xchg
push
fdivrl
and
mov
cmp
push
mov
xor
xchg
fadds
shlb
dec
test
std
lret
dec
je
adc
dec
adc
ljmp
pop
jg
dec
mov
lods
cli
clc
mov
rclb
ljmp
mov
or
inc
movsb
test
push
frstor
push
int
push
fcomip
sbb
xor
nop
sbb
nop
mov
adc
dec
stc
fiadds
mov
sub
outsl
mov
das
dec
inc
nop
xchg
leave
ljmp
scas
cmpsb
add
dec
adc
sbb
adc
cmp
popf
push
fucomi
sub
std
xchg
pop
xor
lahf
jp
cmp
bound
in
push
dec
mov
jg
std
outsl
mov
pop
aam
jge
repz
out
or
int3
inc
adc
pushl
std
call
or
in
pop
dec
cmp
cli
fistpl
dec
lret
fwait
adc
movsb
mov
sti
mov
push
dec
jmp
insb
sub
push
ds
shrl
pop
shrb
sar
mov
push
arpl
loop
test
cld
insb
popa
rcrl
sub
push
push
mov
xchg
mov
fnstcw
xchg
dec
call
insl
std
in
cld
xor
test
sub
lock
andl
test
bound
ljmp
pop
fcoml
out
sti
lret
insl
lods
dec
lods
jmp
call
nop
shll
sbb
ret
jg
jo
test
out
xor
mov
or
sbb
gs
sbb
lock
jg
mov
push
mov
ss
inc
mov
adc
js
test
mov
call
out
pusha
push
adc
push
mov
inc
adc
sbb
incl
iret
sub
sub
movsl
stc
push
push
xchg
or
dec
jae
jo
cmp
cmpsb
cmp
rcll
incl
or
push
inc
mov
cmp
mov
mov
insb
test
andl
ret
pushl
inc
and
push
jb
sub
stc
call
jmp
cmp
sahf
or
cmp
imulb
pop
dec
rolb
or
xor
sub
lcall
aaa
mov
and
js
sbb
cmp
cmp
aaa
adc
jne
mov
jecxz
lock
push
lcall
cmpsb
mov
jbe
jo
jns
mov
movsl
fs
clc
pop
or
mov
stos
fs
inc
jl
inc
in
lahf
stc
daa
jbe
je
push
push
cmp
push
insl
loopne
sub
mov
popa
inc
enter
jl
jae
mov
fnstsw
dec
aas
shrb
mov
shlb
xchg
flds
bound
lock
into
jno
cmpsb
mov
sbb
ja
fsubs
mov
scas
sti
jg
xchg
shl
pop
xor
jge
cmp
or
dec
pusha
xchg
cltd
sub
xchg
mov
and
pop
in
mov
push
xchg
lahf
sbb
dec
movsl
mov
lds
cmp
pusha
sbb
rcl
lcall
xchg
movsl
mov
hlt
jb
test
decl
pop
movsl
jno
je
push
fwait
pop
insb
loope
lret
cmp
dec
mov
outsl
call
lcall
and
orl
and
push
das
adc
pushf
inc
add
sbb
jmp
test
fs
cltd
xor
outsl
and
ja
mov
cltd
sbb
xor
ror
ds
xor
rcrb
adc
xchg
pusha
ljmp
rolb
stc
mov
or
lods
mov
push
mov
push
or
shlb
test
mov
push
or
sahf
push
cmp
cmpsb
pusha
sar
call
arpl
test
sar
fucompp
loop
ss
mov
mov
rcrl
loop
pop
cmc
decl
ret
jle
call
arpl
scas
ja
idiv
js
mov
rorb
cwtl
out
sahf
in
cmp
out
and
pop
out
lahf
mov
sarl
dec
enter
push
out
push
sahf
fwait
mov
cld
push
fnstcw
cmp
in
lcall
cmp
ljmp
flds
pop
leave
clc
fbstp
mov
incl
xor
clc
sub
scas
mov
pop
or
jl
jg
mov
sbb
push
push
or
cmc
xorb
pop
fiadds
in
inc
xor
fistps
inc
cs
scas
xor
xchg
cmp
pop
pushf
push
bound
sub
mov
incl
dec
icebp
pop
fisubl
aam
imul
bndldx
pop
inc
cltd
add
in
push
mov
int
dec
mov
in
outsb
inc
fcomps
mov
out
inc
ficoms
rol
push
push
or
sub
mov
mov
sub
or
incb
inc
or
decl
mov
dec
mov
mov
pop
lods
jl
pop
cmp
fucomp
sub
pop
cld
mov
mov
sbb
pop
or
stc
or
push
imul
in
sub
xchg
mov
repz
jnp
ds
mov
sar
cmp
repnz
push
out
dec
xor
add
pusha
jo
jo
sub
scas
add
mov
sub
or
xlat
add
aaa
sbbl
scas
test
or
fisttpll
repnz
bound
add
pop
pusha
arpl
test
pop
sahf
mov
cld
and
mov
std
fwait
into
das
push
cmp
mov
dec
jb
sbb
shll
aaa
mov
jmp
push
shlb
shl
mov
jp
cmp
lcall
pop
jbe
sbb
jecxz
loop
icebp
out
in
adc
mov
jmp
loopne
call
and
das
pusha
pop
call
sti
pop
mov
sbb
xchg
stos
push
mov
paddsw
jmp
ret
cmp
and
movsb
push
cli
push
pop
ficoms
mov
xor
bound
inc
movd
outsb
imul
xor
pop
jo
cli
decl
jnp
in
shll
jecxz
xor
add
or
jmp
mov
hlt
cmc
adc
ljmp
dec
fbld
divb
addr16
xor
pusha
jne
jo
jmp
mov
push
fidivs
jl
in
pushw
inc
mov
inc
cwtl
pop
jns
jp
ja
xor
ds
mov
jb
sbb
mov
cmp
pop
cmp
decl
or
lcall
sub
cmp
xor
pop
or
sahf
cld
idivb
mov
adc
jb
push
stc
cmpsl
pop
inc
ja
fmuls
lcall
cwtl
jo
add
push
pop
stos
packssdw
push
lods
stos
xor
popa
push
mov
lods
jne
dec
xchg
shl
xlat
mov
mov
shrb
pushl
leave
xor
sti
popa
or
push
sub
fs
xor
lcall
pop
cmp
ljmp
mov
out
xchg
jbe
decb
jmp
sbb
dec
xchg
addl
sbb
pop
push
pop
sbb
fiadds
gs
and
jg
jb
push
int3
scas
fs
mov
mov
mov
xchg
jbe
iret
mov
jnp
cltd
test
and
nop
jle
xchg
scas
inc
push
push
bound
popa
ja
out
ret
stos
loop
ds
dec
mov
jae
mov
lcall
sub
int3
adc
mov
dec
adc
stos
dec
rcrl
cli
xchg
inc
and
sub
cs
movsl
push
aaa
dec
jb
dec
mov
aad
fwait
adc
js
lods
iret
mov
jg
inc
xor
mov
clc
cmpsb
shl
aad
pushf
hlt
iret
cmp
lret
jl
ljmp
andps
and
sbb
inc
sbb
pop
push
stc
in
lea
xor
dec
push
lret
add
xchg
pop
cmpsb
xor
leave
inc
addr16
pop
std
incl
inc
sub
aam
imul
dec
clc
push
fwait
test
je
mov
sbb
enter
shr
sbbb
jbe
fsubl
incl
mov
inc
popf
sti
cmpb
test
mov
jae
adc
ljmp
pushf
pop
pusha
out
movsl
push
jle
add
das
adc
addb
into
adcl
jg
insl
cs
pushf
inc
and
je
xchg
shrl
cmp
or
test
outsl
frstpm(287
mov
adc
cmpsl
or
ret
cltd
push
orb
shrb
adc
call
jmp
stos
adc
xchg
mov
mov
es
pop
mov
test
insl
js
orl
pop
lds
xor
xchg
scas
dec
jmp
sbb
sub
xchg
js
aad
stc
lea
push
xor
adc
incl
ret
jge
add
inc
rol
cmp
adc
pop
xchg
inc
pop
sbb
or
sub
ljmp
mov
mov
out
jmp
test
fnstsw
loope
bound
aam
sbb
ljmp
pop
push
ja
add
mov
pop
mov
rorl
push
push
pushl
dec
popa
xor
into
mov
jns
sbb
test
sbb
decl
pusha
xor
or
in
loope
jg
pop
mov
mov
lds
push
imul
and
xlat
nop
dec
push
pop
lock
and
jae
mov
pushl
aas
out
stc
lcall
ret
inc
dec
hlt
or
push
add
scas
mov
loope
ljmp
clc
mov
ljmp
mov
add
push
mov
decl
jae
xchg
xchg
int
cmc
push
sbb
xor
push
adc
inc
xorl
pop
sti
xchg
jg
push
sub
dec
sbb
push
lret
insl
lcall
pop
dec
mov
cmp
push
pop
mov
push
mov
aaa
push
inc
clc
sti
insb
xchg
inc
mov
push
pushl
mov
pop
data16
imulb
jb
nop
lock
imul
inc
or
mov
adc
pop
jge
sbb
fstpt
loopne
lahf
sub
hlt
sbbl
scas
sbb
cmc
std
std
dec
int
sar
xlat
mov
movsb
out
aam
sub
mov
or
arpl
mov
jnp
iret
sub
adc
jnp
mov
pushl
cld
mov
lret
xor
lret
out
mov
mov
add
call
iret
stos
add
es
movsl
cmpb
ljmp
or
jmp
rorl
mov
mov
adc
pop
mov
pop
mov
jns
add
movsb
dec
and
xchg
push
xchg
xchg
cmpl
pop
add
mov
jmp
popf
test
jge
adc
mov
cmp
sbb
push
or
sub
mov
sbb
arpl
jge
push
mov
push
shrb
fistpl
sbb
dec
ss
shl
adc
jbe
pop
out
push
pop
mov
into
pop
ror
lea
icebp
cmc
cmp
adc
mov
and
out
jbe
jmp
push
out
jg
fistpl
cmp
out
xchg
sbb
fs
outsb
sub
mov
pop
fcompl
daa
fcoms
sub
mov
jp
push
das
rorl
les
sar
call
ljmp
sahf
sub
and
mov
and
call
scas
loop
mov
shlb
cmp
mov
add
sub
data16
test
fisttps
sub
gs
adc
cmp
aad
mov
scas
jle
jo
xchg
lret
lcall
or
jns
mov
sub
add
sbb
incl
add
xchg
enter
mov
ljmp
ret
outsl
mov
in
mov
hlt
jno
xor
dec
repnz
leave
cmpsb
neg
xlat
call
cwtl
and
jp
xchg
inc
iret
mov
add
movsb
or
cltd
sbb
mov
fsub
aaa
jge,pn
sub
jle
cmp
xchg
and
jmp
in
cmp
lods
cld
shr
dec
sub
ja
std
incl
and
jnp
jo
xchg
test
sti
sub
push
rorl
lock
xor
jl
pop
mov
jmp
movsl
mov
jne
sub
inc
jae
xor
lods
lods
fists
call
incl
push
mov
push
in
repz
out
add
add
pusha
ficoml
fadds
shll
add
sbb
into
test
cmp
lock
inc
stc
jecxz
xor
jmp
cmp
or
iret
sbb
gs
or
fcmovb
dec
mov
lcall
rcrl
push
pop
add
add
push
aaa
ja
dec
jle
fwait
decl
jmp
and
jne
stos
adc
pushf
mov
cmp
mov
or
decl
or
xor
sbb
aam
pushf
or
pop
push
das
adc
mov
sti
lcall
push
cld
or
addr16
ljmp
jg
add
xor
add
dec
xlat
mov
or
pop
arpl
pop
test
fwait
push
inc
out
addr16
sbb
xchg
fistl
lds
or
xchg
push
inc
jne
int
xchg
lret
xchg
maxps
or
call
adc
jmp
cmpsb
mov
jnp
sub
les
push
pushl
add
xor
xlat
jp
mov
inc
push
add
mov
add
out
repnz
std
call
dec
in
mov
jne
jno
cld
lret
and
jg
pop
xchg
test
xchg
dec
fistpll
nop
lret
adc
enter
or
mov
or
lcall
fwait
movsb
jo
mov
adcl
sarb
mov
jmp
outsb
out
and
decl
movsb
das
frstor
insb
mov
arpl
lret
jg
decl
cmpsb
sbb
stos
in
enter
hlt
xchg
jae
fsubrs
test
decl
sub
scas
dec
xchg
jnp
pop
sub
in
and
mulw
shll
or
out
lcall
mov
push
cmpb
mov
adc
dec
les
xchg
pushl
xchg
jecxz
cld
adcl
xchg
and
mov
test
jns
push
jb
push
adc
jnp
jl
mov
in
es
leave
mov
push
inc
xchg
mov
mov
fcomip
js
mov
mov
mov
push
aad
xchg
adc
xor
jg
or
movsl
lret
xor
dec
stos
xchg
in
movsb
sbb
ljmp
jmp
xor
pushf
sub
pop
out
add
mov
fdivrl
adc
jmp
stos
xchg
imul
int3
pop
popa
daa
and
and
jge
and
cli
fisubl
mov
in
shl
mov
in
in
inc
mov
call
aaa
movsb
jge
in
mov
ss
lret
gs
call
pop
in
orb
sub
jg
dec
mov
fimull
push
and
mov
push
jmp
xchg
xor
pop
jl
clc
pop
jnp
in
push
outsl
push
rcll
in
in
push
and
xchg
in
mov
mov
dec
popf
scas
xchg
inc
cmp
ffree
fcmovu
xchg
aam
int3
dec
sub
daa
cmp
mov
clc
mov
adc
inc
pop
aad
add
jmp
add
std
add
in
decl
add
jmp
mov
lcall
fisttpl
push
cmpsl
stos
push
test
adc
ljmp
nop
jbe
mov
jno
mov
xchg
stos
mov
xchg
mulb
pop
push
or
mov
fldenv
add
and
int3
sub
rolb
sbb
shlw
cmp
jp
dec
dec
cmpsl
pusha
mov
push
scas
cmp
int3
movsb
push
push
loope
mov
stos
adc
in
sbb
inc
mov
mov
mov
in
and
xchg
sbb
inc
lret
inc
into
int3
dec
push
vrcpss
pushf
pushl
push
lahf
lods
test
out
leave
mov
jno
sti
scas
out
test
decl
aaa
test
aaa
xchg
movsl
xlat
lods
addr16
arpl
fdivrs
add
dec
call
xchg
mov
popf
out
fdivrl
gs
jge
mov
xorl
scas
clc
mov
dec
dec
testl
pop
adc
fldt
jo
int3
cli
pusha
pop
movsb
pop
aam
jp
in
fadds
les
in
jno
jg
jmp
mov
repz
mov
rcrb
repz
popa
in
fwait
jle
dec
mov
jne
pushl
decl
cmp
fs
dec
push
mov
insl
cs
inc
inc
lahf
xchg
loope
lret
xor
decl
inc
clc
aaa
fldt
jbe
adc
fldcw
cld
jecxz
mov
icebp
in
jg
incl
cs
repz
cmp
in
out
push
icebp
inc
jmp
incl
in
data16
sahf
fnstenv
mov
xchg
add
lcall
sbb
xor
stos
js
out
mov
fwait
ret
subl
add
scas
and
inc
add
leave
pop
ret
repnz
cmp
jg
dec
sar
push
hlt
jae
stos
cmpl
pop
into
insb
inc
sar
incl
xlat
repnz
stos
xchg
push
jecxz
cld
xchg
mov
imul
xchg
xorb
pop
data16
sub
pop
pop
pop
fnsave
sbb
push
push
das
cwtl
das
arpl
in
jp
pop
cli
xor
cmpsl
shl
xor
popa
outsb
cld
jg
pop
inc
arpl
and
mov
mov
insl
xchg
iret
adc
cmc
xchg
insb
jns
jmp
dec
call
loope
push
dec
fisubrs
pop
xor
leave
mov
xor
adcl
ljmp
imul
cmp
into
test
dec
test
push
pushf
cli
push
pop
lcall
cs
mov
pop
ret
jge
inc
sahf
leave
stos
outsl
in
pusha
pushf
push
sub
mov
push
cmp
inc
pop
pop
hlt
pop
clc
push
jle
adc
push
out
add
out
std
and
push
call
lock
out
jl
pop
shll
pop
jnp
xchg
jmp
int3
mov
faddl
xor
add
js
dec
je
decl
mov
imul
xor
cld
es
bound
or
jge
arpl
mov
clc
call
lods
xchg
and
push
pushf
adc
aam
rcrl
adc
call
adc
lods
xchg
out
mov
push
xor
mov
repnz
xchg
dec
xor
decl
mov
enter
cmc
or
pop
test
pop
call
loopne
push
cmp
shl
inc
adc
movsb
out
out
add
ja
or
dec
xor
inc
pop
jle
das
pop
in
inc
inc
ret
decl
fbld
mov
scas
addr16
xor
pop
push
pop
push
loopne
xchg
test
cld
push
add
push
xchg
call
stos
ds
inc
jmp
sti
jno
in
and
sar
rorb
in
push
sbb
ljmp
push
sbb
add
roll
rcrb
ja
xlat
dec
xor
and
lcall
jge
jne
and
mov
dec
dec
xor
mov
inc
insl
add
decl
inc
mov
push
cmp
jl
dec
jmp
sar
cwtl
inc
pusha
scas
test
add
fs
jns
jle
and
das
jmp
mov
decl
jle
mov
sahf
out
cs
stos
cmp
xchg
mov
push
popa
mov
and
icebp
mov
out
stos
add
sahf
add
xchg
cmp
mov
and
stos
mov
xchg
xor
pushf
xor
or
fdivp
jge
call
mov
pop
movsl
fsubl
dec
cmp
sub
movsb
sbb
scas
push
imul
mov
cmpb
frstor
cmovl
sub
cmp
fidivs
sar
fildl
dec
hlt
push
test
sub
add
loope
in
add
sti
decl
fiaddl
push
xorb
adcb
cmpsl
xchg
cltd
xchg
sahf
xor
imul
xchg
cmp
das
les
pushl
pop
add
mov
pop
jae
pop
outsl
es
sub
rcrl
push
loopne
cmp
insb
popf
loopne
incl
sti
inc
out
inc
lock
or
dec
sahf
adc
pop
jle,pt
mov
sub
incl
cld
fwait
push
andl
ljmp
fdivr
outsl
mov
pushl
into
fldenv
mov
mov
ja
or
data16
jmp
mov
rcrl
ret
lcall
leave
test
nop
xlat
sar
orl
sbbb
call
dec
addr16
popa
mov
inc
push
outsb
nop
mov
cmpsl
insb
pop
pop
sub
xchg
pop
jecxz
and
push
inc
in
dec
inc
inc
push
or
sub
push
xor
mov
xchg
jns
add
test
pop
mov
in
bound
call
sti
std
mov
int
push
jb
call
or
mov
es
stc
mov
int
js
scas
mov
and
cmp
xor
jmp
movsb
test
out
imul
cwtl
sub
push
xchg
cmp
flds
fdivl
xlat
jno
rolb
xchg
mov
mov
push
xchg
call
sbb
ja
and
mov
in
mov
sub
inc
aaa
cwtl
clc
incl
add
push
nop
pop
mov
decb
incl
pushl
out
pop
adc
cmc
or
subb
pop
xchg
mov
roll
pop
pcmpgtd
rcrb
cs
lret
rep
repnz
adc
mov
add
mov
jecxz
and
or
stos
push
test
sti
mov
pop
lcall
incl
fstl
and
jmp
popa
fldl2t
jnp
jmp
jne
out
push
inc
and
mov
movsl
xorb
pop
xor
std
test
sub
fidivs
ljmp
push
addr16
xchg
ja
lahf
insb
out
lret
int
xchg
mov
or
sti
gs
pushl
cld
and
xor
fsubl
into
sahf
jg
jo
sub
scas
cwtl
xchg
outsl
mov
popa
adc
test
insb
shlb
inc
aas
addr16
repnz
cmp
lods
mov
outsl
aaa
mov
dec
mov
movsl
lahf
or
or
loopne
filds
pusha
pop
fcom
mov
daa
insb
inc
outsl
ljmp
daa
dec
enter
imul
cmp
shrb
xchg
pop
sub
lcall
pusha
dec
jno
inc
jg
ret
int3
pop
pop
hlt
jg
insl
add
in
aaa
add
sarb
arpl
dec
repnz
rorb
clc
addb
iret
incl
jb
adc
add
pop
xor
push
in
mov
jmp
pop
or
mov
call
jg
xchg
lret
jle
in
push
outsb
fsubrs
pop
mov
lock
pushl
adc
jmp
jge
adc
xor
pop
and
nop
mov
stc
loopne
aam
sub
inc
insb
add
push
ljmp
mov
pop
push
pop
shll
adc
sbb
mov
add
jmp
iret
fwait
jge
and
in
dec
push
dec
add
mov
cmp
mov
call
mov
add
dec
jne
arpl
insl
sub
push
push
mov
push
test
pop
mov
jecxz
xchg
fbld
xchg
pop
in
cwtl
or
dec
push
jmp
xor
dec
inc
negl
test
sbb
pop
test
jg
movsl
loopne
jl
adc
mov
pop
hlt
mov
push
js
pushl
jle
adc
mov
jmp
dec
imul
dec
mov
test
pop
inc
jnp
mov
ljmp
lock
sbb
jle
add
adcb
loop
daa
and
fdivrs
mov
mov
cmp
repz
loop
shl
repnz
sbb
mov
fisttps
or
cmp
mov
fcompl
lds
in
arpl
inc
fdivs
je
out
sahf
enter
xchg
xchg
lods
sahf
fstpt
jg
ljmp
leave
decl
jl
ss
inc
in
scas
jl
daa
lds
lcall
jmp
movsl
mov
lret
fistpll
xor
fisubrs
dec
xchg
sbbl
cmp
in
or
leave
test
fs
dec
add
sbb
in
shll
jmp
mov
cmpsl
sti
mov
mov
sti
push
jmp
mov
sbb
dec
add
lcall
mov
loope
or
and
pushf
or
jne
data16
sub
popf
or
lcall
cmpsl
fldcw
xchg
xchg
add
pop
test
aad
adc
fst
sar
jg
outsb
mov
ja
mov
lods
stos
and
sbb
xchg
loopne
pop
sti
jg
clc
out
ljmp
inc
inc
das
test
outsl
fldcw
das
je
push
pop
cwtl
mov
pushl
xchg
push
incl
dec
insl
lret
mov
je
adc
cmp
jle
push
jne
shld
pop
icebp
incl
cmc
or
movsb
xor
dec
add
inc
adc
xor
xchg
dec
mov
add
call
cld
mov
add
in
push
jmp
sbb
push
dec
mov
xchg
push
dec
ljmp
pop
ljmp
adc
rcr
not
and
add
sbb
pushl
inc
mov
shll
dec
xchg
push
movsl
push
mov
cs
incl
mov
arpl
repz
incl
jo
mov
stos
mov
cld
test
movsb
pop
fnstcw
test
jmp
sbb
hlt
xor
out
and
push
das
xchg
test
jb
fucom
mov
jb
xchg
fcomip
mov
push
pop
or
mov
mov
jb
xchg
add
jmp
xor
mov
nop
mov
add
jae
aaa
out
xchg
std
dec
mov
adc
pop
mov
ljmp
pop
mov
push
jae
lea
jmp
dec
cmpsl
xor
xlat
mov
pushl
adc
xchg
lods
mov
lret
mov
es
sub
out
je
aas
inc
inc
loopne
pop
dec
jg
nop
push
mov
enter
enter
inc
pop
add
mov
or
jmp
ljmp
mov
addr16
adc
mov
je
lods
test
cmp
pop
movsb
jg
jno
inc
int
jae
insb
fiadds
jo
dec
adc
outsb
xor
fsubrl
push
mov
and
cmp
jns
stos
pusha
mov
data16
sub
icebp
jg
cmpsl
fidivs
jmp
push
xabort
outsb
inc
push
movsl
outsl
lahf
in
fcoml
outsl
xor
jno
les
cld
mov
jns
ljmp
xor
mov
and
bound
imul
pop
stos
movsb
sub
stos
lods
inc
out
push
mov
or
jae
xor
mov
gs
hlt
mov
jge
and
cmp
xchg
aam
pop
xchg
mov
and
jmp
cmpsb
dec
jle
or
mov
stos
add
inc
xchg
orl
and
and
jmp
mov
pop
icebp
lds
std
xchg
push
cli
xchg
ljmp
push
lods
jecxz
add
push
sub
enter
jl
fstp
lcall
mov
xchg
ss
jno
push
fiaddl
sub
jg
push
in
inc
push
sub
jmp
repnz
jbe
aaa
pop
inc
fwait
out
or
out
je
add
mov
decl
push
ja
fs
subl
push
add
cltd
mov
cmpsl
fwait
inc
and
incl
cmpsl
scas
or
sbb
jmp
mov
ja
mov
ss
xorl
mov
sbb
push
pop
cmc
decl
dec
cwtl
pop
push
and
jl
inc
and
pop
xchg
aam
lret
adcb
add
push
cmp
das
addr16
test
roll
or
ljmp
dec
pop
lret
mov
pop
pop
mov
das
out
push
lahf
adc
push
inc
fmuls
dec
rorb
js
xchg
decb
test
test
pop
sbb
jb
push
sbb
cli
sub
out
cwtl
test
movsb
in
sub
imul
xchg
sbb
jmp
lds
adc
fidivrl
sbb
jecxz
push
stc
xchg
mov
mov
pushf
fmuls
xor
repnz
xchg
sbb
je
ss
bound
ljmp
xchg
fcmovnu
mov
jns
test
sarb
and
mov
addl
inc
lcall
jecxz
mov
in
push
mov
movsl
mov
js
aas
mov
pop
mov
ficoms
mov
push
cli
sbb
sbb
xchg
xchg
clc
sbb
scas
jb
test
ds
clc
jg
insb
sub
jbe
mov
sub
push
popa
hlt
leave
loope
les
lahf
or
dec
fcompl
popa
cmp
lret
sub
mov
incl
ret
dec
jl
subl
inc
dec
pop
jge
stos
cltd
add
arpl
ljmp
cmc
outsl
and
or
mov
mov
iret
jnp
add
push
scas
dec
pop
mov
lret
lret
nop
cs
popa
ljmp
popf
les
fnsave
mov
ljmp
pusha
pop
stos
outsl
ret
addr16
cmpsl
pop
imull
or
out
imul
add
pushl
fildll
test
fisttps
insb
negb
xor
add
repz
dec
pop
popf
jae
cli
add
fst
test
ficompl
leave
mov
je
mov
cmpsl
lods
lock
fcoms
xchg
sbb
outsl
add
pop
out
inc
push
cmc
ret
xor
decl
adc
repz
adc
and
ret
and
ret
sbb
test
mov
test
std
pushl
or
dec
leave
mov
jl
lcall
test
cmp
lcall
test
mov
ljmp
repnz
cmp
in
add
pushl
cmp
ret
and
movl
and
divl
cmp
inc
mov
dec
mov
add
mov
jl
subb
xchg
shrb
mov
fcmovbe
out
fs
daa
pop
out
add
fisubrl
adcl
push
inc
cmc
inc
inc
dec
in
std
pop
fisttps
ds
cld
pop
loop
push
stos
xor
push
loop
pop
std
ljmp
ljmp
clc
jmp
cwtl
ss
sahf
jmp
lcall
dec
lcall
xchg
das
sar
pop
into
xlat
ds
or
jmp
pop
push
dec
stos
int3
pop
sub
mov
cmp
jnp
lret
lea
cmp
inc
sub
rclb
sub
imul
inc
call
cmp
rcl
cltd
xchg
jg
movsl
push
or
xchg
ror
mov
fldl
sub
jg
dec
call
arpl
in
adcl
and
xchg
iret
lret
stos
and
dec
out
or
loop
repz
pop
test
mov
jmp
mov
outsb
dec
mov
inc
push
jns
scas
shrb
push
jo
movsb
decl
lds
loopne
xor
fbstp
push
jge
adc
adc
jne
out
dec
push
rcl
push
je
mov
add
jle
adc
xchg
and
mov
aas
cmpsb
testl
inc
out
clc
lcall
and
pop
idivl
or
jno
mov
orb
or
aam
outsl
clc
call
mov
stos
scas
cwtl
cmp
in
xchg
and
mov
jnp
xchg
mov
adc
or
outsl
mov
incb
test
test
and
icebp
imul
cli
testb
into
mov
sbb
repnz
out
movb
insl
fsubrs
repnz
aas
sub
aaa
jno
icebp
inc
adc
lcall
cld
jne
imul
pop
repz
jle
in
lock
cli
cmp
push
adc
incl
mov
inc
jo
jae
or
push
and
jo
imul
push
sahf
mov
cli
ds
pushf
xchg
adc
mov
insl
std
incl
pusha
jb
and
adc
in
vmread
pop
movsl
jecxz
and
call
adcb
xchg
inc
xchg
xchg
inc
dec
fsubs
sbb
inc
jmp
cwtl
cld
loope
mov
dec
ret
push
addr16
aam
xchg
pop
adc
lret
cmpb
mov
mov
pop
aam
cmp
jecxz
sub
mov
and
icebp
or
push
fs
subl
in
scas
push
xchg
mov
incl
mov
and
sarb
pop
lods
sbb
jg
push
mov
sbb
lcall
push
js
sub
mov
jmp
push
loopne
icebp
pop
loopne
ja
mov
fisttpl
push
cmpsl
nop
add
pushl
xor
outsb
ret
shrb
fs
pushl
cli
cs
pop
jp
xchg
aaa
sbb
jmp
pop
out
xchg
daa
and
fidivrl
mov
push
adc
pop
pusha
inc
mov
mov
jne
mov
inc
idiv
ljmp
push
fmull
fisubs
insb
pushf
in
cmp
pop
mov
repnz
or
ljmp
call
and
jmp
aam
mov
enter
int3
pop
inc
aaa
jmp
and
xchg
adc
das
inc
mov
pop
ret
pusha
addl
je
cmp
or
mov
aaa
xchg
loope
lea
into
sub
jo
mov
mov
xor
pop
test
mov
ljmp
ret
mov
xor
aad
incl
mov
scas
add
xor
imul
pop
sbbb
dec
lock
add
jmp
sub
stos
in
mov
insl
aad
or
push
pusha
mov
in
xor
pushf
es
incl
mov
sarb
insb
pop
xor
test
out
cmc
pop
inc
leave
mov
lcall
mov
or
add
and
decl
movsl
lock
loope
and
push
xlat
sub
pop
js
scas
mov
dec
test
mov
cltd
xchg
sub
bswap
popa
ds
mov
mov
and
dec
adc
jo
jae
push
add
aaa
sbb
mov
cmp
push
and
xchg
jp
push
jmp
cli
icebp
bound
mov
pop
adc
das
and
movsl
xor
push
sbb
sbb
in
shll
cs
cmp
fnsave
in
adc
test
sbb
push
popf
notl
mov
in
jmp
mov
decl
mov
scas
pop
je
add
or
test
ret
inc
ret
adc
pushl
jp
bound
dec
pushf
mov
frstpm(287
dec
dec
jne
movsb
pop
xchg
xchg
mov
std
ljmp
sbb
sarb
loope
data16
in
pop
or
rcll
gs
dec
clc
ljmp
xchg
xor
lahf
dec
or
pushl
mov
dec
repnz
add
call
cli
addr16
lods
sbb
cld
arpl
nop
jg
inc
aaa
jmp
dec
sbb
cwtl
mov
daa
sbb
subb
dec
stc
sbb
jmp
push
test
paddb
jmp
rcll
lret
mov
ret
inc
pushl
sub
xchg
enter
push
xor
cmpsb
test
xchg
enter
cli
test
imul
jmp
in
lods
jmp
std
pop
lret
je
and
and
mov
or
mov
pusha
push
outsb
xor
loop
insl
out
xchg
shlb
push
mov
fs
cmc
les
mov
or
or
sbb
inc
es
mov
xor
loopne
mov
popa
out
rcrl
in
push
jbe
aaa
lods
std
ljmp
sti
scas
push
loopne
jg
cmpsl
insl
lret
dec
adc
inc
sbb
iret
sub
cld
pushl
es
push
scas
cmp
es
jb
jp
repnz
pusha
aad
insb
pushl
enter
or
adc
add
lods
aaa
pop
adc
push
and
mov
notl
pop
lods
popa
andb
mov
inc
push
dec
mov
mov
lret
test
cmp
ljmp
mov
ljmp
in
mov
ret
stos
repnz
ljmp
add
pop
ljmp
cmp
add
xor
addr16
and
pop
icebp
xchg
decl
cmp
ret
push
sbb
js
sahf
cmp
inc
jmp
jnp
or
loopne
push
insl
ret
cs
ja
clc
sbb
push
lret
loope
rolb
lods
fmuls
xchg
ret
popa
jbe
push
cs
pop
lcall
dec
hlt
xor
and
pop
cmp
xlat
push
adcb
add
cmp
add
insl
jge
xor
shrl
push
jmp
sub
lea
adc
or
mov
enter
ret
add
loope
xchg
clc
sub
adc
sub
test
pop
cmp
dec
stc
lcall
adc
sbb
in
dec
jb
lock
mov
jg
jbe
lcall
and
sub
pop
rcr
fisttpl
rcl
dec
int3
test
sbb
or
out
mov
repz
mov
inc
jge
lods
adc
test
call
xchg
dec
push
sub
mov
and
mov
scas
in
sub
pop
popf
invd
fstpl
cltd
and
xor
mov
mov
ds
ljmp
jp
lcall
dec
xchg
dec
adc
je
movsl
nop
push
cmpb
mov
push
sub
add
pusha
push
cmp
sub
jmp
movsb
in
cmp
adc
in
call
rorb
fldl
cs
pop
add
jo
pushf
xchg
mov
testb
ds
xchg
jns
sub
lea
push
cmp
dec
fs
ljmp
test
or
lahf
int3
out
jo
cld
xor
mov
push
lds
pop
jb
pop
pop
lcall
pop
aaa
outsb
and
mov
sbb
int
lods
not
enter
pop
jmp
jo
gs
call
movsl
stos
push
shrl
insl
and
ss
xor
lahf
or
add
lahf
jge
lock
not
insl
jp
inc
insb
daa
fsts
incl
or
imull
mov
adc
cmc
push
xor
ss
cmp
fcos
decl
repnz
pop
lock
xchg
dec
jecxz
add
xor
leave
mov
loope
jmp
push
cmpsl
pusha
decl
xchg
xor
xor
out
xor
fwait
and
ds
lahf
push
push
and
dec
xor
lahf
repz
and
push
push
rep
outsl
movsb
test
adc
arpl
mov
fwait
sbb
xchg
push
sbb
ljmp
jp
jno
push
push
cmp
or
cmc
pop
mov
add
insb
jb
or
das
jno
or
call
dec
sbb
aaa
sub
xor
xor
sahf
imul
jmp
lea
mov
xor
pop
fs
mov
inc
in
aas
daa
repz
call
in
rcll
jge
pop
call
push
jne
adc
imul
inc
push
xchg
out
inc
xchg
jb
lods
movsb
fldcw
lahf
mov
mov
daa
test
or
sbb
sub
mov
outsb
int3
pop
dec
and
adc
cli
popf
inc
mov
in
out
xchg
jmp
std
decl
mov
sub
fisubl
mov
popf
imul
pop
or
inc
loope
sub
cmpb
call
pop
sub
cltd
add
pop
xor
sbb
cmp
mov
jno
jbe
xor
lods
xchg
incl
xchg
jne
mov
or
pop
shr
fisubrs
jo
js
das
imul
movsl
mov
jmp
dec
cmpsb
pop
stc
and
adc
lret
or
and
mov
mov
push
lahf
mov
mov
iret
fcmovu
or
push
jmp
cmpsl
addr16
scas
jmp
sub
hlt
ljmp
mov
icebp
lcall
out
and
sub
sub
test
cmp
pop
xor
lahf
rolb
fpatan
aad
ljmp
mov
mov
shl
mov
and
in
pop
cmp
jnp
popa
bound
push
and
sbb
adc
scas
call
clc
push
dec
inc
dec
in
inc
push
adc
sar
push
fnstenv
out
push
dec
sub
lahf
mov
dec
js
sbb
xchg
dec
push
ja
icebp
call
aaa
lret
sahf
xor
and
mov
mov
sbb
xor
jmp
cmp
cmc
xchg
in
loop
sbb
jne
fidivl
movsl
cmpsb
mov
sbb
hlt
call
rep
xchg
std
dec
push
int3
push
mov
test
add
lea
subl
mov
cwtl
shrl
insb
dec
xor
mov
mov
or
jge
and
dec
mov
pusha
sub
sahf
out
pop
lea
out
loop
xchg
adc
lods
lods
out
jb
aaa
adc
leavew
cwtl
sub
jbe
rol
idivb
xor
test
sti
xchg
scas
mov
enter
ljmp
out
cmp
ljmp
and
cld
sbb
or
cmp
adc
inc
cmp
imul
fstp
jnp
xlat
mov
ja
pop
cld
sbbl
rolb
jle
xor
sub
inc
sbb
jg
jmp
jno
jbe
bnd
inc
push
fucom
ja
cmp
out
lea
pushl
cld
out
or
inc
sti
and
jnp
fisttpll
jbe
loopne
xor
mov
pop
sarb
dec
xlat
test
inc
mov
shlb
adc
sub
iret
aad
stc
jg
cld
andb
and
decl
dec
mov
lcall
in
cmp
push
cltd
test
sub
jmp
loopne
mov
movsb
sub
fwait
jecxz
in
lea
add
add
cmp
mov
jge
scas
mov
cmp
push
and
sub
std
or
add
jg
cli
inc
fs
xor
inc
dec
xor
inc
data16
pop
mov
mov
jbe
mov
aas
dec
loope
js
xchg
xor
aam
roll
decl
push
mov
and
jge
leave
gs
mov
iretw
leave
or
pop
frstor
add
push
mov
fs
decl
or
pop
repnz
clc
mov
add
flds
dec
mov
repz
pushl
enter
mov
in
push
pop
out
les
xor
inc
xor
jmp
icebp
int
leave
ret
push
mov
push
sub
xchg
lea
dec
aad
lret
or
xchg
xor
and
pop
dec
push
mov
aas
outsb
fidivrs
cltd
rolb
les
jbe
inc
xchg
int
in
cltd
xchg
mov
les
lret
inc
or
xchg
sbb
jmp
mov
sub
mov
out
inc
fldt
fisubrl
roll
nop
and
mov
cs
stc
lret
ret
dec
fists
icebp
xchg
push
aad
add
inc
pop
ljmp
add
movsb
inc
sub
xlat
mov
out
test
push
xlat
test
jge
mov
mov
cmp
xor
add
pop
cwtl
jmp
xor
sub
aaa
movsl
data16
das
je
outsl
cli
call
mov
xor
loopne
fistl
jo
or
cmp
push
into
mov
call
push
fs
clc
dec
and
pop
add
pop
sub
repnz
or
out
pop
decl
nop
adc
in
testb
adc
jb
push
xchg
test
sub
pop
dec
std
push
push
fmull
xor
fidivl
push
lods
out
fisttpll
popa
and
test
push
mov
mov
pop
loope
decl
in
repz
push
and
and
add
sub
clc
lret
xor
jle
push
dec
aas
test
incb
add
mov
dec
jge
arpl
scas
or
ret
and
or
rcl
lock
mov
insb
push
shrl
scas
call
cmpsl
pop
insb
ret
adc
jmp
push
iret
pop
into
inc
stos
jae
lahf
mov
int
popa
adc
ljmp
cmc
xchg
jne
sbb
mov
pop
lds
xchg
add
test
push
mov
lcall
fimull
ljmp
mov
inc
lret
fistpl
xor
lcall
mov
addl
xchg
and
out
hlt
outsb
cmp
adc
call
cmpsb
bound
aam
test
sbb
xor
inc
sub
aaa
jle
jle
sbb
iret
cmpsl
jle
fcoml
inc
es
dec
shr
cmp
and
cmp
out
or
sbb
mov
movsl
fstpt
ljmp
mov
push
mov
push
arpl
xchg
mov
pushl
cmc
xchg
mov
lcall
mov
faddl
loopne
inc
gs
divl
into
sbb
inc
xor
inc
ficoms
xor
pop
xor
sar
inc
movsl
sub
xchg
in
push
ds
lret
cmpsb
ljmp
and
xchg
mov
bound
dec
and
lods
test
jp
imul
call
mov
hlt
scas
pop
cmp
mov
mov
xlat
and
insb
pop
inc
stc
call
loopne
jb
stos
insb
scas
jl
call
push
nop
jle
sub
lcall
in
cli
pop
outsb
repnz
data16
mov
fiaddl
xor
pop
mov
lock
add
cmp
mov
mov
dec
cmp
movd
in
sbbb
subb
or
mov
cwtl
imul
call
dec
cmp
call
addb
cmp
pop
sub
repz
divl
push
mov
inc
jae
push
sub
fnstcw
fiadds
pop
testb
sbb
movsb
adc
inc
sahf
mov
loop
add
dec
inc
sub
xchg
popa
bswap
out
ljmp
dec
mov
stos
xor
or
decl
ficomps
push
mov
push
cld
add
inc
out
cwtl
or
lret
mov
adc
ljmp
jp
mov
test
xlat
in
mov
scas
mov
push
fildl
jno
and
or
mov
add
clc
pop
adc
pusha
mov
fcomip
pushl
inc
and
and
xor
adc
ljmp
or
dec
in
xchg
mov
pop
arpl
pop
xchg
fwait
inc
decl
cmp
hlt
stc
loopne
or
mov
jmp
pop
decl
divb
hlt
jo
xchg
scas
and
ret
scas
sub
jg
xlat
adc
jecxz
out
jns
mov
inc
pop
sar
sar
arpl
sbb
call
mov
into
shrl
xchg
pop
mov
sahf
int3
mov
jle
cltd
cmp
in
decl
xchg
loop
cmp
jnp
call
dec
sahf
mov
xbegin
sub
sbb
repz
push
pushl
movsb
xchg
lods
inc
enter
mov
push
dec
xlat
xchg
sbb
sub
xor
sti
add
mov
test
inc
xor
lret
push
jl
out
mov
js
cmp
ljmp
pop
jbe
scas
sbb
sub
xor
sub
mov
inc
and
mov
mov
jmp
push
adc
addr16
mov
sub
fisubl
mov
cmpb
decl
incl
pusha
mov
push
add
fmul
pop
lods
int3
in
dec
es
call
add
adc
cmc
sub
add
imul
pushl
imul
push
sbb
fdiv
addr16
xchg
adc
push
adc
arpl
xor
sbb
push
pop
xchg
inc
sbb
sub
push
adc
int
leave
addb
or
push
sahf
ljmp
clc
jnp
je
mov
xlat
ror
gs
push
jo
pop
add
lock
pusha
mov
call
mov
sub
imul
jo
repz
into
out
and
ja
mov
out
imul
test
dec
lods
dec
mov
ror
xor
lcall
fs
dec
setbe
mov
xchg
shlb
mov
cli
cmc
aas
add
cmp
leave
mov
incl
adc
jg
loope
inc
mov
wbinvd
mov
mov
fdivr
jg
pop
jne
and
and
inc
loop
dec
and
outsb
jp
pop
sarb
push
pusha
imul
cld
cmpsb
enter
rclb
xchg
mov
lcall
mov
in
add
sub
jne
negl
pop
cmc
pushf
xchg
movsb
rcr
out
stc
out
xor
pop
movsl
pop
out
scas
cmp
xchg
or
out
cli
dec
cmp
xchg
and
push
or
iret
test
add
mov
in
and
mov
orl
mov
movsl
inc
pop
pop
sbb
dec
jmp
cmp
je
ljmp
pop
adc
insb
inc
push
into
xor
mov
ljmp
sub
data16
imul
pushl
adc
pop
sub
test
enter
inc
xlat
cmp
cmp
addr16
push
and
add
jecxz
out
out
std
push
stc
loopne
jg
insb
nop
and
out
outsb
in
xor
les
jmp
xchg
fbld
sbb
pusha
push
ret
add
add
std
mov
out
outsl
add
mov
jl
sbb
orb
sub
gs
lcall
cmpsl
sub
push
cmpsl
fisubs
pushf
cmp
push
push
bound
ljmp
push
jmp
loopne
mov
test
jg
loopne
cmp
std
sbb
fbld
mov
inc
and
xor
das
shl
xchg
in
mov
add
test
test
pop
outsl
scas
lcall
shlb
daa
fisubs
ss
fsub
rcrl
xchg
push
cmc
cld
decl
mov
aad
mov
imul
inc
mov
stc
nop
imul
dec
std
jns
xlat
lea
ljmp
stc
jmp
lds
lock
insl
jne
cmpsb
push
stc
cmpsb
jmp
push
outsl
stos
add
mov
insb
into
mov
push
orl
andb
cmpsl
pop
shrb
ljmp
jns
jmp
dec
xchg
shll
insl
in
mov
repnz
decl
add
andb
cmp
or
int
jp
dec
lcall
fstl
pop
aaa
jg
pop
adc
aaa
aam
mov
add
dec
push
push
call
dec
push
insb
je
mov
xchg
push
or
and
pop
gs
push
cmpsb
or
sub
loope
mov
dec
mov
mov
aas
mov
xlat
and
add
ljmp
lcall
ljmp
movsb
jp
dec
repz
sti
push
xchg
cmc
cwtl
xchg
jae
mov
mov
jb
jl
or
xor
and
mov
jg
xchg
dec
call
outsb
repz
inc
jl
inc
popf
aaa
jl
subb
cmp
cli
pop
enter
pop
xlat
jb
pop
jg
push
and
addl
jecxz
lcall
mov
mov
mov
loop
adc
lcall
inc
mov
dec
inc
insl
cltd
dec
xor
mov
mov
and
sarb
lcall
mov
jmp
int
push
fildll
dec
jne
sub
xor
dec
sub
push
pushl
ljmp
xchg
cmp
pop
idivl
inc
je
inc
pop
jg
push
cmp
sbb
jecxz
jp
icebp
lret
jno
int
int
mov
jge
and
pop
ds
lret
nop
imul
adc
xchg
pushf
stc
xchg
out
stc
repnz
test
mov
ja
push
dec
sub
fdivl
arpl
mov
int
and
cwtl
ljmp
jbe
mov
ret
pop
mov
ljmp
inc
enter
adc
das
sub
call
or
xchg
xor
push
adc
subl
dec
pop
repz
jl
stc
scas
push
mov
mov
adc
pop
ja
dec
xchg
jo
cltd
jmp
nop
jl
add
cmp
decl
xor
scas
pop
mov
imul
imul
int3
xchg
out
cmp
in
mov
arpl
stos
sbb
add
cs
insb
in
gs
add
repnz
xchg
add
incl
mov
jmp
pop
fisubrl
or
inc
mov
add
add
aam
jmp
sbb
dec
scas
lret
out
jmp
push
out
jecxz
jl
jp
or
xchg
bound
dec
call
xlat
stos
mov
dec
jo
movsl
mov
aam
sti
lods
sbb
incl
jo
add
stos
jns
add
cmp
inc
jns
mov
movsl
pop
iret
mov
pop
sub
jmp
mov
movsl
insl
jecxz
push
push
xchg
std
lods
push
js
out
test
add
imul
dec
dec
xor
lock
subl
jl
xchg
insb
sub
std
pop
fcomip
jl
and
outsl
cmp
sbb
sub
sbb
sub
pusha
add
scas
xchg
das
clc
incl
xchg
lock
push
hlt
divb
jno
xchg
in
mov
cld
jmp
sub
stos
or
adc
ret
scas
mov
pop
xor
mov
add
mov
cli
jns
call
mov
insb
loope
sbb
mov
cmpsl
mov
inc
push
pop
jnp
addr16
mov
sbb
xor
pushl
clc
into
xchg
mov
dec
daa
mull
int3
xchg
mov
add
mov
mov
aad
push
lret
dec
xor
shl
sbb
lcall
movsb
jne
in
shlb
sub
jle
dec
jmp
adc
lcall
fldenv
divb
lock
sar
adc
mov
loop
fwait
and
sarl
lcall
mov
mov
in
pop
sbb
sarb
outsl
sbb
mov
call
insb
test
in
dec
repz
inc
imul
out
pop
sahf
adc
dec
mov
aas
dec
xlat
xor
mov
jg
pop
inc
testb
shll
mov
add
lahf
outsl
dec
mov
call
dec
mov
pop
pop
mov
adc
xor
pop
jmp
bound
lds
jmp
sti
nop
mov
xchg
out
jnp
or
mov
cmpb
xchg
daa
jo
cli
xor
jecxz
fnsave
xor
xor
fsts
jg
bound
jno
dec
fcmovb
lahf
mov
lret
or
bound
in
cltd
sbb
loopne
loop
aas
js
jp
fcomps
jne
sahf
mov
push
xchg
ss
cmpsl
jg
mov
mov
lcall
sbb
xor
mov
pop
mov
incl
in
jmp
popa
pushf
dec
in
mov
fwait
mov
jle
aas
and
inc
jg
dec
ud0
jle
xor
xor
mov
loop
das
pusha
cld
pop
iret
jae
inc
xor
call
jns
pop
jbe
mov
mov
enter
cmp
dec
mov
jb
popa
mov
sbb
mov
dec
mov
mov
xorl
jp
mov
mov
sub
xchg
pop
mov
sbb
loopne
loopne
dec
cli
jmp
pushf
inc
fidivrl
icebp
mov
or
popf
or
sti
cmp
push
inc
xchg
xchg
jg
outsl
mov
cs
pusha
adc
sarb
cmp
loop
push
gs
fdivl
cmpsb
adc
xor
lcall
inc
push
movsl
dec
jno
xor
loop
push
cmpsb
ljmp
add
jge
pop
dec
dec
popf
cmp
pop
cmp
adc
je
xor
mov
fistps
nop
or
decl
pop
in
push
insb
mov
cmp
dec
addr16
rorb
jp
push
fldl
ljmp
notb
xor
es
scas
pop
xor
cmp
xor
mov
jp
loop
cmp
andb
mov
mov
std
test
and
mov
xchg
cmp
iret
out
mov
lds
mov
stos
pop
inc
jecxz
mov
call
dec
mov
popa
lods
push
ds
ljmp
jbe
cs
add
mov
stos
scas
add
sbb
pop
movsb
hlt
es
add
jno
pushl
pusha
cmpsb
int
inc
xlat
inc
pusha
xor
lcall
inc
imul
imul
ljmp
pop
sub
sub
jmp
inc
lds
push
pop
sub
filds
sub
jmp
lds
xchg
pop
mov
cwtl
stc
test
adc
imul
jmp
add
sbb
cmp
cmpl
jmp
movsb
lods
les
jb
mov
lcall
nop
mov
ds
ja
repz
stos
imul
jp
rdtsc
loopne
adc
comiss
loop
dec
jg
jle
mov
cmp
xor
add
pop
mov
stos
inc
mov
mov
rorl
push
fcom
push
std
and
add
pop
std
jmp
push
adc
pop
push
enter
mov
lcall
or
dec
pusha
jp
in
cmp
int
shll
repnz
sti
repnz
idiv
pushl
pushf
in
ja
push
xchg
orb
jge
mov
int3
cmp
dec
das
jmp
or
and
jmp
jno
inc
das
pop
xor
cmpsl
inc
addl
ret
cmpsl
lcall
adc
xchg
rorl
add
roll
cmp
pop
cmp
mov
mov
cmp
and
push
push
bound
stos
mov
leave
lcall
cmpsb
cmpsl
xor
jmp
pop
add
and
mov
mov
shll
in
cli
scas
bound
arpl
dec
pop
cwtl
sub
inc
inc
jmp
cmp
sbb
mov
idiv
cmp
cld
mov
mov
pop
mov
dec
flds
dec
mov
testb
incl
mov
cmp
pop
jmp
pop
pop
add
ja
into
ficoml
fstpl
incl
popf
mov
ss
or
mov
in
mov
pop
insl
or
jo
cmc
xchg
jmp
cltd
cli
sub
das
cli
cmp
out
cmp
fisttpl
jae
jae
rolb
loop
push
push
push
je
pop
popa
addr16
out
sbb
daa
lods
xor
incl
fiaddl
sbb
mov
and
test
aam
or
decl
test
in
mov
add
sbb
inc
subl
scas
and
call
or
imul
movsb
adc
dec
ffree
and
incl
jle
hlt
jo
sbb
imul
divl
mov
scas
inc
scas
hlt
cwtl
out
out
jecxz
mov
cld
or
pop
ret
add
sub
adc
inc
sarl
adc
out
sub
daa
fmuls
xor
jbe
mov
xchg
ds
ss
ja
dec
pop
adc
inc
or
scas
aaa
sub
fsin
js
adc
cmp
cmp
fcmovnb
adcl
lret
xor
mov
xor
lcall
sbb
dec
push
sub
xchg
cmp
call
hlt
push
jno
arpl
loop
sub
out
mulb
push
clc
xchg
or
fists
loopne
in
mov
xchg
and
popa
add
dec
incl
inc
jnp
fwait
jne
pop
inc
daa
ljmp
out
loop
inc
std
in
aam
cmp
jmp
mov
pop
in
lcall
or
fsubp
lds
xor
jge
movd
sub
stos
incl
push
pop
push
cmp
and
jnp
hlt
enter
fistl
mov
inc
jge
mov
call
loopne
xchg
ds
mov
cwtl
jne
stos
mov
icebp
mov
out
xchg
jmp
insl
mov
dec
cmp
cs
pushf
sub
ss
dec
shl
pop
pop
out
rcr
pop
call
mov
cmovne
daa
dec
push
es
movsl
mov
data16
cmp
jne
mov
sub
lods
popf
mov
stc
inc
cmpsl
fists
pop
inc
add
jne
xor
sub
dec
mov
dec
subl
sub
ljmp
sub
cmc
xchg
jno
xchg
shlb
cmp
fucomip
and
out
adc
aas
adc
xchg
add
push
jecxz
insl
fsubrs
das
and
and
ffree
adc
mov
ljmp
xchg
int
bts
ficoml
jo
mov
mov
jecxz
sub
scas
xor
ljmp
jo
adc
fwait
add
pop
in
inc
adc
xchg
test
cmp
jp
inc
lock
sbb
mov
mov
add
push
pop
sbb
jns
and
icebp
sbb
pushl
imul
jp
inc
arpl
xor
and
or
into
cmp
stos
dec
xor
repz
mov
rcl
std
inc
in
or
pop
push
mov
mov
adc
je
scas
fs
mov
sbb
jmp
mov
jae
add
sub
sbb
dec
mov
jnp
jo
test
das
sar
lock
pop
jns
sub
std
rorb
xchg
insb
or
sti
stos
lcall
jp
add
dec
sbb
sbb
xlat
lods
scas
or
add
mov
pusha
mov
es
jp
or
rcrl
mov
pushw
aaa
push
inc
cli
lds
cli
jae
addr16
fbld
lcall
xchg
add
popa
and
push
vsqrtsd
inc
fisttpll
lahf
push
pop
push
pusha
push
jg
or
jbe
jle
xor
in
push
fnstcw
mov
in
ror
adc
sbb
add
fisttpl
aaa
mov
push
mov
hlt
push
add
inc
pop
ja
pusha
test
adc
sbb
mov
and
icebp
mov
cmp
sarl
jne
and
push
mov
sbb
getsec
push
scas
cmp
jmp
cmp
repz
adc
subb
mov
test
je
shrb
fcomip
call
repnz
shll
popa
loopne
push
rcr
not
push
and
lcall
fdivr
and
andb
incb
int3
jg
xor
subb
mov
pop
mov
mov
lods
push
push
stos
mov
ret
inc
pop
jecxz
push
jb
jmp
sbb
mov
ret
pushf
in
insl
mov
inc
or
cmc
js
sub
lock
push
or
add
stc
xchg
sub
outsb
cli
jle
xchg
icebp
decl
push
xor
ret
xchg
ss
idivb
push
pushf
sahf
movsb
dec
ljmp
xchg
fmuls
jo
pop
pop
and
ja
sub
add
shll
pushl
out
decl
dec
inc
pop
les
sarl
push
xchg
idivb
fwait
mov
mov
mov
sub
sub
adc
inc
push
icebp
sti
mov
xchg
pusha
add
sub
add
inc
add
mov
add
pop
pop
push
or
or
or
or
or
popa
jg
push
adc
adc
push
adc
adc
push
adc
fnsave
mov
add
or
adc
pop
cld
push
lods
pop
adc
inc
add
or
xchg
xor
or
add
sahf
add
pop
xor
push
add
cltd
and
inc
add
dec
jb
fbstp
xor
jge
add
add
push
adc
call
pop
and
xor
inc
mov
adc
xor
cmpb
addl
add
nop
push
add
inc
xorb
movsb
iret
add
insb
add
sbb
add
int
push
add
add
popa
add
xchg
mov
pushf
into
add
into
add
adc
shlb
pop
scas
cmp
adc
add
int
push
adc
pop
popa
jno
and
adc
mov
push
pop
sar
or
xor
adc
loope
icebp
mov
add
pop
mov
xorb
scas
or
inc
lock
or
js
sbb
adc
std
or
mov
lds
cld
cli
and
mov
inc
jnp
test
jge
ficompl
cmpsl
xor
mov
jmp
mov
bound
pop
lahf
mov
movsl
jecxz
cli
pop
mov
add
or
xchg
jg
or
insb
sub
addr16
jmp
out
or
push
push
xchg
add
repnz
inc
lock
scas
jle
fcmovnu
sbb
cmp
fisubrl
in
mov
orb
int3
lcall
cmc
mov
fs
push
pop
mov
pop
pop
mov
popl
movb
sbb
inc
dec
adc
adc
mov
xor
lods
scas
xchg
test
aam
and
call
xchg
sarl
and
roll
fwait
movsb
jmp
push
lret
push
out
in
and
lahf
fdivs
aas
repz
cmpsb
pop
outsl
icebp
mov
pop
lock
std
out
xor
jle
daa
test
aaa
dec
dec
pop
push
out
outsl
loope
loope
roll
mov
pop
cwtl
int
arpl
push
out
or
nop
adc
push
sahf
pop
clc
sti
jg
jno
lock
mov
call
sarl
xor
hlt
and
xchg
jmp
sbb
xchg
outsl
xchg
add
lcall
jb
mov
or
push
mov
sub
pop
pop
xor
mov
dec
jp
push
gs
std
in
call
stos
hlt
push
add
stc
loope
mov
sar
andl
mov
icebp
testb
mov
incl
xor
jns
mov
in
repnz
jno
pop
sub
jg
scas
cld
or
push
inc
sbb
ud0
mov
mov
dec
adc
push
lock
lods
jp
mov
aad
aaa
sbb
into
fcomps
sbb
sbbl
into
cmp
mov
loopne
cli
adc
aaa
xchg
in
add
inc
adc
out
dec
jbe
dec
fisttpll
out
aas
std
cli
push
push
pushl
inc
cmp
sub
inc
scas
inc
mov
jg
je,pn
decl
pop
imul
mov
mov
inc
es
gs
jns
enter
or
push
pusha
lcall
jae
inc
cmp
sti
punpckhbw
cmpsb
orb
mov
mov
js,pn
jmp
xor
pop
clc
pop
hlt
lret
movsb
add
mov
pop
jg
gs
std
xorb
lcall
adc
ret
das
pop
pop
pop
shlb
push
std
incl
out
sarb
sbbl
jno
or
sarb
std
pop
lcall
sub
push
cli
mov
mov
pop
inc
arpl
stos
mov
lcall
insl
add
leave
push
scas
loop
jge
push
shrl
mov
push
mov
jg
call
and
sbb
xchg
jo
and
out
test
jae
push
iret
sti
cmp
std
ficoms
aam
sahf
imul
fcmovnu
rorl
insb
stos
arpl
jg
sub
cld
call
js
cmp
scas
lods
push
cmp
fistl
mov
adc
push
movsb
xchg
or
mov
stos
dec
lods
xor
lock
ds
cmpsl
scas
popa
in
pop
or
mov
xlat
pushf
cld
aas
clc
jge
jnp
sbb
outsb
mov
sbb
jecxz
inc
adc
mov
adc
sbb
stos
adc
push
push
jo
pusha
imul
add
decl
idivb
daa
xchg
mov
cwtl
pop
xchg
ftst
jbe
xchg
and
lods
addb
add
jae
shrb
shlb
out
aas
stc
add
out
in
jmp
jno
fidivrl
lock
adc
pop
cld
addl
adc
imulb
and
lahf
fmull
enter
jecxz
paddd
scas
sub
in
pop
mov
sub
mov
dec
fucomi
pop
decl
das
aas
mov
or
cld
inc
or
add
push
pop
jg
add
jg
mov
cmp
sub
adc
mov
mov
iret
inc
ljmp
push
jbe
push
sbb
stos
icebp
pop
incb
mov
sub
push
inc
jecxz
sbb
sarl
adc
neg
lods
loopne
and
clc
xorl
push
imul
dec
lock
std
push
in
aas
mov
fsubrl
add
lock
and
mov
xchg
pushf
mov
repnz
das
xchg
or
mov
adc
inc
aas
mov
rcrl
rolb
out
jge
fistpl
adc
call
jno
pop
dec
jg
mov
inc
sti
arpl
daa
std
or
sbb
mov
inc
cmpsb
popf
push
loop
inc
call
sbb
or
imul
xor
dec
xor
fsubr
fistps
lds
fidivrl
adc
stos
pop
add
dec
in
stc
clc
pushl
mov
lahf
les
sbb
sbb
cld
loop
pop
fiaddl
mov
in
stc
mov
lahf
outsl
int3
push
sbb
movsl
loopne
test
shr
adc
sti
jle
xchg
xchg
out
outsl
xchg
ljmp
sar
test
in
jge
popa
push
test
jbe
outsb
hlt
sti
fsubs
shl
dec
add
incl
xchg
aad
loop
lahf
mov
or
out
lcall
mov
pop
shl
cld
mov
adc
stos
pop
jg
das
in
loopne
shrb
rcl
jg
adc
xor
pop
rcr
dec
mov
push
pushf
lea
jp
jnp
jecxz
adc
inc
ds
pop
adc
imul
or
inc
pop
xor
rorb
and
mov
lods
test
xchg
cmpsl
push
sbb
mov
pop
inc
cmpsl
enter
mov
into
test
or
mov
movsb
insb
or
and
xchg
sub
insb
test
aas
repz
sbb
clc
lods
add
lock
in
jmp
out
sbb
aaa
clc
push
std
mov
jl
icebp
or
loopne
iret
or
cmc
mov
push
icebp
lcall
enter
fcmovb
inc
adc
inc
loopne
test
out
sarb
out
pop
or
or
dec
ss
sti
adc
inc
lods
movsb
or
repnz
clc
dec
cmc
mov
jl
call
scas
cli
in
add
pop
in
cmp
jmp
outsl
inc
jmp
mov
pop
lock
jmp
hlt
dec
mov
sub
aas
mov
jg
mov
cmp
or
addr16
sbb
cld
daa
jp
std
adc
adc
loopne
cltd
or
mov
ret
nop
cmp
das
push
mov
add
lock
pop
pop
div
cld
idivl
pop
aas
adc
fs
loope
jae
push
xor
jg
ljmp
cmpsb
jge
fbstp
out
xchg
add
out
insb
clc
pop
inc
icebp
mov
loope
mov
cmpsl
popf
bound
cmp
ja
push
daa
outsl
das
jge
fxtract
mov
call
pop
lock
decb
adc
mov
and
adc
call
add
dec
or
pop
in
mov
inc
add
cltd
mov
mov
aaa
std
fucomip
or
inc
sbb
xchg
rcrl
jle
icebp
ret
ror
sbb
cmp
jmp
jg
idiv
stos
cmp
aas
pop
clc
loope
loope
mov
sub
lahf
jp
dec
add
xlat
mov
inc
rcl
je
xchg
fldenv
iret
mov
mov
lcall
decb
jno
pop
gs
imull
jg
pop
out
jg
jno
ret
xchg
xchg
cmp
xchg
cwtl
arpl
out
inc
push
dec
jge
pop
clc
xchg
cmpsb
ljmp
ds
inc
mov
in
sbb
xchg
imul
jle
bswap
jmp
outsl
jmp
std
mov
daa
jmp
fsubl
mov
or
outsl
pop
movsb
ljmp
push
imul
pop
stc
push
dec
out
fstpt
mov
enter
les
push
inc
xchg
scas
or
or
add
push
sti
pop
inc
add
inc
cs
push
nop
mov
sbb
popf
test
and
and
mov
adc
lock
inc
addb
addb
or
add
inc
fidivrl
incl
fcom
push
jnp
stos
add
inc
sahf
jo
mov
jg
add
add
sub
inc
add
add
or
imul
orb
mov
lahf
pop
mov
add
push
or
and
jle
roll
inc
add
imul
xchg
push
or
call
mov
jno
mov
jnp
xchg
cld
int
das
movsl
push
daa
add
xchg
dec
and
cmpsl
push
and
xlat
mov
and
movsb
push
movsb
inc
scas
push
incl
lods
push
and
stos
push
and
push
test
and
push
icebp
in
std
imul
push
inc
pop
pop
add
fistps
sbb
mov
sbb
add
mov
xlat
mov
add
adc
lods
jg
adc
mov
insb
or
lret
imul
imul
jb
push
imul
sbbb
push
fnstcw
int
add
jae
mov
stos
pop
stos
mov
sub
jb
ss
add
jo
insl
fcomi
pop
add
outsl
push
shll
fidivrl
iret
insl
outsb
pop
shrl
push
ret
je
sti
in
xorb
fisttps
add
fwait
inc
ds
jg
mov
in
movsb
push
add
mov
sbbl
loopne
cmp
push
mov
push
push
int
xor
jne
push
aam
push
ret
fsubp
cmpsl
frstor
inc
push
mov
push
pop
popf
shrl
dec
add
ja
pop
ja
scas
data16
inc
xchg
cs
jge
push
push
shlb
lret
stos
out
mov
inc
ja
push
push
xlat
jne
fildl
jbe
fdivs
push
aad
push
xlat
ja
jge
fwait
or
push
jns
push
jp
sub
in
fnstcw
inc
push
fidivrl
sarl
ja
sub
push
fldl
ret
jmp
mov
adcb
xchg
sub
xchg
in
xchg
sub
push
pop
cs
xchg
xor
xchg
push
setbe
xor
ss
xlat
mov
push
lcall
push
cmp
pushf
cmp
ds
push
out
popf
xchg
popf
aas
push
sahf
inc
push
out
fimull
mov
mov
cmpsb
hlt
add
fadd
ds
repz
out
push
hlt
clc
stc
cmp
repz
sti
cld
std
mov
ret
jo
add
mov
jae
add
cltd
int3
data16
popa
push
add
pop
xor
add
pop
add
sbb
push
test
mov
mov
add
add
push
mov
add
add
inc
repnz
add
aam
pop
sti
stos
stos
cmpsl
or
push
sbb
mov
pop
pop
adc
adc
rcrb
pop
stos
shrd
outsb
push
lods
lods
pop
mov
stos
mov
scas
add
scas
insl
lods
pop
pop
adc
push
scas
lods
push
and
push
mov
push
pop
scas
sbb
scas
scas
scas
nop
aaa
xchg
sbb
mov
mov
nop
fwait
and
and
int
pop
push
mov
push
xor
nop
sbb
inc
lock
push
xor
and
mov
mov
bound
push
and
and
shrl
pop
pop
cld
test
sub
mov
pop
sub
xchg
and
mov
and
es
aas
pop
aas
cmp
imul
cmp
cmp
cmpsb
add
data16
mov
xor
xor
pop
or
or
out
add
insl
pop
pop
xor
mov
mov
dec
pop
pop
das
push
cs
xor
add
xor
das
pop
push
push
xor
adc
pushl
pop
push
cs
dec
inc
das
inc
inc
xor
adc
push
xor
push
push
popa
jbe
mov
jl
jge
jno
decl
add
pusha
pop
pushw
dec
dec
cmpb
jo
in
pushl
mov
mov
cwtl
sahf
mov
pushf
fwait
lcall
xchg
mov
test
xchg
xchg
sub
dec
ja
jns
mov
in
dec
push
bound
js
imul
cmp
je
sbb
mov
and
jo
int3
add
add
rcr
pop
scas
aas
mov
push
outsl
dec
aas
out
sti
jle
xchg
pop
push
dec
add
push
mov
mov
push
mov
xor
xor
ja
push
ja
or
jb
cs
xor
mov
cmpsb
pop
jbe
dec
sbb
popf
mov
mov
xchg
jo
test
mov
cmp
mov
inc
int
divb
add
xchg
jp
inc
push
popf
inc
mov
std
int3
ljmp
add
xchg
jno
lret
push
bound
mov
mov
inc
push
lahf
inc
inc
push
sahf
mov
mov
pushl
data16
xchg
outsb
add
xchg
xchg
pop
push
test
cmpsb
dec
pusha
sti
dec
jnp
dec
push
movsb
jae
add
jb
shll
pop
mov
mov
push
rorb
add
lcall
aaa
out
adc
outsb
mov
dec
push
add
ja
sahf
daa
mov
scas
jbe
fistpl
imul
pop
jmp
add
and
es
js
mov
fucomp
frstor
shrl
insb
pop
outsb
xchg
ja
out
outsl
ror
push
ds
jno
insl
sub
add
push
jg
fiadds
call
or
lock
add
cld
test
out
mov
add
test
push
iret
sahf
mov
cmp
add
xchg
in
push
jle
scas
cmpsb
add
jecxz
or
ss
fnstcw
aad
push
divb
fildl
xor
faddl
pop
cmpb
push
sbb
sbbl
test
test
sbb
pop
rolb
test
in
mov
push
xchg
nop
and
outsb
push
insb
push
out
xchg
in
xchg
lock
sub
sub
imul
outsb
out
xchg
das
push
xchg
mov
mov
cwtl
push
cmc
sahf
xor
lcall
fwait
cmpsb
pop
cmp
mov
es
aam
jle
push
cmpsb
scas
andb
clc
jo
test
sahf
loop
jbe
ja
fcmovnbe
stos
into
shll
lgs
int
mov
fwait
mov
shll
rcr
rcl
mov
push
aad
jle
data16
add
jo
mov
cs
dec
rorb
add
je
dec
add
add
daa
add
mov
pop
repnz
cld
femms
or
or
or
int3
or
adc
push
adc
push
add
sti
pop
adc
adc
ds
add
xor
pop
mov
xor
ds
loop
mov
mov
mov
mov
mov
push
add
and
mov
mov
loopne
ds
mov
xor
aad
aas
and
lock
mov
xor
or
push
enter
aas
cmp
lret
jae
cmp
cmp
add
mov
sbb
inc
jbe
cmpsl
insl
mov
cmp
inc
jle
adc
jbe
cmp
dec
mov
scas
ds
jle
aas
addr16
ds
xor
dec
inc
popf
test
scas
add
jge
addb
xor
pop
mov
xor
outsl
ds
lods
stos
test
cmpsl
cmpsl
cmpsb
cmpsl
add
jg
jg
test
mov
sahf
ds
xor
sub
sub
sub
sub
adc
ss
and
xor
inc
mov
push
push
push
push
push
imul
push
pop
push
push
push
imul
fs
das
pop
imul
jne,pt
fwait
cwtl
xchg
pusha
xchg
nop
cltd
mov
mov
nop
test
jmp
je
xchg
jns
jle
addl
jb
jae
jo
outsb
pushf
sti
lds
loopne
jge
test
add
jo
add
decl
or
push
push
add
cmc
repz
dec
xor
std
mov
push
aas
add
xchg
pop
cmp
test
add
mov
add
incl
fstpt
push
mov
fnstsw
repnz
data16
aaa
incl
xchg
addr16
add
add
mov
push
in
lcall
bound
push
arpl
mov
push
push
incl
jae
js
into
xchg
add
in
sti
out
cwtl
add
cmpsb
mov
test
scas
xchg
js
in
and
out
imul
or
sub
sub
xchg
push
insl
fistpl
nop
sub
xchg
xor
xchg
mov
outsb
lcall
leave
jbe
out
insl
mov
negl
fcmove
fst
es
push
lret
adc
ss
push
std
into
incb
negl
xchg
add
test
jg
jle
jge
add
xor
inc
xor
add
mov
jl
dec
dec
dec
dec
dec
sub
or
add
push
dec
or
adc
cmp
adc
pop
mov
dec
dec
dec
inc
add
push
adc
add
or
inc
fmuls
pop
cmovg
inc
push
dec
sbb
imul
adc
inc
inc
adc
sbb
jg
aas
mov
adc
inc
ds
cmp
cmp
cmp
icebp
jmp
and
sbb
sbb
and
add
dec
ss
xor
sub
sub
adc
push
add
mov
addb
mov
pop
mov
mov
cmp
mov
add
outsb
mov
inc
and
int3
push
outsl
add
and
cmp
bound
sbb
or
add
push
cmpsl
xor
or
dec
into
incl
inc
sub
push
inc
xlat
shll
fstpl
incl
or
jnp
outsb
sysret
mov
es
xchg
shlb
ds
fidivs
pop
stc
sysret
in
lock
stc
hlt
pusha
push
push
jg
add
pop
push
push
lock
aaa
outsl
shrb
pop
sahf
test
sub
jg
lahf
push
add
xchg
out
cli
add
mov
mov
cli
filds
adc
push
pop
pop
add
xor
jg
addr16
adc
cli
push
les
or
xchg
jg
sub
sti
jg
das
pop
pop
add
sti
mov
jle
adc
mov
insl
sar
pop
xchg
ret
jg
add
bound
xchg
call
les
dec
test
jg
in
push
push
cld
jg
and
bound
cmpsb
std
ja
add
or
out
roll
push
jg
dec
les
xchg
test
orl
data16
mov
inc
incb
or
pusha
mov
call
adc
xor
xor
push
incb
and
fidivrs
jg
inc
arpl
adc
sbb
add
loope
push
jbe
sbb
jno
sub
jmp
sbb
scas
incl
add
jmp
pop
xor
in
jle
lret
imul
adc
adc
add
sbb
lcall
popa
mov
add
mov
addr16
add
push
adc
lea
data16
mov
add
jg
mov
add
sub
xor
es
adc
adc
pop
mov
lods
cmpb
mov
fdivrp
cmpsb
ljmp
in
popf
notb
add
daa
rcl
mov
aas
aaa
pop
pop
in
push
pop
xor
pop
jle
xor
pop
inc
push
add
test
mov
jle
sbb
decl
push
or
push
dec
xchg
push
fnstsw
je
add
mov
insl
iret
lods
comiss
daa
push
arpl
das
les
aam
insl
xchg
arpl
out
push
xchg
push
and
hlt
dec
and
lcall
jae
lds
ljmp
or
jno
jle
jle
push
and
mov
push
dec
fidivrs
inc
idiv
fnstenv
add
push
jne
dec
out
jl
pop
push
jbe
or
es
push
jnp
push
jp
ja
dec
decb
js
dec
jbe
pop
add
jne
mov
mov
mov
jbe
call
and
or
ljmp
jle
aam
cmp
test
scas
jmp
call
and
mov
jns
fiadds
insl
and
push
mov
outsl
inc
call
inc
out
mov
xchg
cs
aas
popf
inc
push
pushf
cmp
test
cwtd
fstpt
cmpsb
mov
xchg
xor
xchg
xor
sub
sub
jns
insl
push
nop
daa
ss
cs
enter
mov
xor
lcall
cmpsl
sbbl
jg
int
adc
call
sahf
xor
movb
es
mov
xor
cs
add
xchg
ja
jnp
push
push
hlt
dec
mov
pop
ja
sbb
sbbl
add
add
in
or
adc
and
subb
add
outsl
add
mov
pop
or
add
cmpsb
push
adc
pop
push
orl
lea
aas
outsl
sub
popf
push
imul
stc
jmp
xchg
mov
sbb
test
push
lock
cmp
adc
pop
cmp
icebp
push
inc
out
jg
xor
in
add
mov
push
pop
aam
decl
sub
idiv
mov
dec
push
mov
sarb
push
sbb
push
push
mov
xor
inc
cmpsb
testl
out
cmp
jmp
syscall
mov
sub
mov
pop
fwait
mov
lcall
in
xor
or
mov
sub
les
push
add
ds
pop
daa
std
mov
inc
fsub
xchg
btc
lcall
mov
mov
or
call
lret
ds
decl
cwtl
push
ljmp
incl
insb
inc
call
sub
inc
arpl
sahf
sub
adc
insb
inc
call
mov
pop
decb
xchg
shrb
lcall
inc
mov
ljmp
scas
lcall
decb
mov
sbb
and
push
add
test
inc
outsb
inc
iret
jle
adc
sbb
incl
out
adc
adc
mov
or
orl
inc
pop
iret
sbb
jae
decl
sbb
jae
mov
fdivrp
add
sub
xchg
aaa
inc
sbbb
std
fildl
imul
xor
call
addb
dec
outsb
mov
stc
smsw
dec
push
xor
call
jg
dec
push
cwtl
and
testb
xchg
sub
dec
arpl
xchg
decl
adc
jmp
incl
pop
fwait
cld
pop
fcmovbe
pop
pop
inc
je
divb
mov
test
push
shll
mov
mov
roll
dec
push
dec
cmp
sahf
ret
incl
frstor
test
scas
popf
mov
push
inc
inc
pop
inc
outsb
arpl
pop
mov
sahf
int
sti
movsb
dec
push
stos
push
popf
inc
cmpsb
dec
dec
cmpsb
test
cs
dec
xor
mov
jmp
repz
outsb
xchg
outsb
shrb
es
push
das
xor
jb
imulb
push
iret
xor
xchg
insl
pop
daa
outsl
push
xchg
fs
stos
and
dec
notb
push
ljmp
inc
push
sbb
dec
pop
add
aam
movsl
pop
int
repnz
jmp
popf
cmp
aas
jmp
mov
decb
cwtl
xor
int
push
xchg
push
push
aaa
cltd
movsb
mov
push
lcall
jb
mov
xchg
es
xchg
xchg
sahf
notb
sub
jmp
ljmp
aam
jmp
ds
icebp
add
add
std
fwait
lea
std
faddl
pop
fstpt
push
jnp
jp
or
jl
xchg
jbe
cmp
jns
jl
push
jge
testb
ss
es
jbe
adc
fidivrl
push
div
outsl
dec
push
dec
repnz
repnz
jae
pop
fidivrl
push
ret
jg
insl
mov
jnp
jge
hlt
in
add
int3
outsb
push
inc
xchg
pop
nop
negl
adc
xorb
outsl
aad
and
mov
adc
jns
lods
or
imul
cmp
jnp
lahf
dec
es
addl
decl
push
orb
jg
and
xchg
out
push
sub
mov
out
mov
cli
ljmp
in
mov
idiv
or
jb
sub
jg
mov
icebp
dec
mov
dec
mov
or
jle
inc
sub
jg
mov
icebp
cld
inc
daa
jg
mov
nop
inc
push
nop
ja
loope
xchg
enter
cld
jp
es
xchg
pop
dec
shll
and
jmp
mov
enter
dec
in
sarb
mov
pop
ja
dec
test
jg
jge
idiv
movsb
sub
fsubrl
movsb
or
push
inc
adc
int3
decl
inc
jp
mov
fidivrl
arpl
clc
jbe
jmp
decl
pop
push
pop
push
imul
ljmp
mov
std
mov
jp
int
push
jns
mov
sub
mov
jmp
xchg
jmp
mov
push
mov
cltd
int
sbb
jmp
adcb
xchg
sar
cs
sbb
loope
and
lret
jg
out
mov
or
push
test
push
in
mov
add
ja
dec
jge
stc
inc
or
and
jns
cmovno
arpl
insl
xchg
insl
mov
ret
push
movb
loopne
adc
addb
movsl
or
add
fwait
ret
xchg
stos
loope
xchg
push
inc
lahf
hlt
push
lock
fwait
call
dec
adc
sbb
iret
mov
bound
cmp
scas
pop
into
pop
push
sbb
push
cmpsb
cmp
sbb
push
or
and
or
inc
or
push
sub
xchg
adc
push
decl
or
add
mov
push
push
pop
clc
ss
mov
xchg
xchg
dec
or
push
je
lmsw
add
lock
inc
push
gs
jo
push
es
mov
push
add
int3
adc
and
pop
xor
mov
sub
jno
push
push
xchg
fldt
xlat
pop
add
fldl
ficoml
mov
inc
jmp
lahf
jo
das
sbb
ret
jge
aam
add
imul
sub
adc
scas
add
fisubrs
jno
fsubs
sbb
sub
mov
aad
mov
sbb
mov
ss
adc
xchg
sbb
popa
push
adc
dec
mov
test
add
insl
and
ret
ljmp
xchg
js
rcll
add
xor
mov
xlat
and
call
adc
or
push
or
add
add
mov
dec
mov
subb
dec
icebp
add
pushf
xor
add
or
dec
xchg
das
les
idiv
mov
lahf
push
cmc
pop
add
add
shrb
mov
push
outsb
dec
push
outsl
loop
inc
nop
insl
in
xor
lcall
pop
xor
nop
mov
pop
sti
loop
dec
insb
out
inc
imul
sbbl
pop
add
icebp
inc
adc
add
pusha
in
insb
jne
adc
pusha
loop
push
cwtl
dec
sbb
or
or
or
shrb
rol
or
add
cmpsl
dec
insb
arpl
enter
pop
arpl
push
scas
cmp
call
add
lds
fiaddl
roll
pop
push
cmp
push
and
aad
subl
mov
jne
cwtl
cwtl
sub
add
cmp
jnp
sbb
cmp
jo
je
arpl
in
xchg
insl
adc
mov
pushl
lahf
mov
xor
mov
dec
sub
sbb
adc
imul
and
xchg
cmp
adc
pop
sbbl
fcoms
mov
test
sbb
sbb
jb
dec
sub
mov
jmp
adc
and
imul
shl
inc
je
mov
mov
bound
iret
invd
aad
mov
insb
pop
and
imul
icebp
popa
and
pop
test
pop
add
sbb
add
and
and
add
sub
pop
inc
xor
sub
sub
je
fists
push
jae
xor
je
push
addl
pop
nopl
dec
das
shl
fistl
mov
jne
ja
sbb
mov
inc
loope
add
es
or
ret
xor
je
jne
inc
cmc
mov
loop
sub
outsl
jae
and
loopne
loop
outsl
popa
clc
jp
mov
mov
cmpsl
adc
mov
fs
fldenv
pop
fisubs
cmp
inc
arpl
mov
xchg
or
mov
add
aas
sub
xchg
pop
sub
mov
pop
out
mov
dec
sbb
sbb
xchg
mov
data16
inc
aaa
push
pop
imul
push
sbb
arpl
push
sub
jae
add
jbe
dec
mov
dec
nop
pop
inc
es
lds
push
adc
xlat
and
inc
enter
and
sub
int
adcl
inc
xchg
mov
fs
or
pusha
aam
jbe
popa
rcpps
js
ret
mov
inc
xchg
push
sbb
fs
mov
imul
lds
fidivl
adc
insb
sahf
daa
push
and
insl
mov
das
push
cld
sub
fldt
add
mov
js
dec
lea
loop
call
inc
add
xchg
add
sbbb
js
hlt
add
adc
push
jo
push
stos
dec
and
push
les
popaw
dec
std
addr16
insb
dec
mov
int3
sub
pop
xor
mov
adc
sbb
outsb
inc
sbb
and
inc
jnp
and
leave
sbb
insl
dec
outsb
dec
std
lea
xor
add
sub
push
push
js
mov
int
add
pop
add
add
sbb
mov
imul
add
or
imul
imul
scas
imul
es
nop
ret
or
pop
add
lods
add
addb
add
and
gs
pop
sbb
fmuls
inc
jo
sbb
or
out
test
imul
popf
stos
es
inc
push
sub
imul
adc
inc
stos
mov
scas
test
test
push
int
outsb
inc
xor
xorl
sbb
out
xchg
fs
ret
mov
jo
inc
sbb
add
sarb
inc
adc
cmp
mov
je
jno
mov
dec
pop
push
xchg
lods
dec
jbe
inc
mull
pop
scas
int3
ficomps
fs
push
jge
out
int3
mov
imul
and
lcall
push
dec
mov
inc
insb
sub
mov
mov
mov
mov
sbb
jo
outsb
sub
mov
xchg
mov
pop
xlat
adc
or
test
jbe
mov
call
mov
lods
lea
inc
xor
sub
sbb
out
inc
aaa
outsl
in
loopne
js
adc
mov
jno
inc
ret
lods
outsb
jbe
lods
sbb
test
inc
jle
push
shll
rolb
scas
das
cmp
inc
push
mov
sbb
insl
dec
inc
push
push
xchg
and
sub
mov
orb
mov
adc
arpl
imul
test
pop
xor
arpl
pushf
mov
and
inc
sbb
or
lds
nop
fs
xchg
loope
mov
cmp
jns
dec
lea
sbb
and
inc
cmp
mulps
das
push
aad
xchg
cmp
push
shll
imul
push
jne
loope
xchg
xor
push
stos
xchg
lods
mov
xchg
jbe
enter
or
add
push
mov
js
push
inc
inc
gs
jnp
cmp
xor
xchg
jb
addr16
jmp
or
arpl
movsb
sbb
pop
dec
mov
pop
cmpsl
int3
pop
out
inc
test
push
clc
or
xor
imul
aaa
sub
shlb
or
inc
xor
push
jb
jp
push
cmp
test
dec
movsl
dec
sub
xchg
das
add
clc
rorl
cli
add
inc
push
daa
adc
cld
add
add
xlat
push
cmp
and
enter
fidivrl
pop
add
insb
pop
pop
shll
inc
dec
pop
add
or
clc
add
lock
pushf
add
dec
in
dec
negl
mov
or
mov
and
xlat
out
repnz
dec
cmp
addr16
jp
mov
jl
or
add
ret
jg
movsb
or
add
add
add
add
add
call
or
pop
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
add
inc
add
