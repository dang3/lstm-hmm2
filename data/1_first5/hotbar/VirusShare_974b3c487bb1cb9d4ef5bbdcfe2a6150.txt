fcomp
decl
call
dec
and
push
mov
or
push
add
int3
add
jg
push
mov
mov
push
push
call
test
jne
pop
pop
ret
push
push
fwait
jmp
rcrl
mov
test
je
cmp
std
mov
pcmpeqd
lea
jae
sub
movzwl
je
add
fnstsw
pop
pop
xor
andb
fcomps
shlb
pop
lcall
mov
mov
add
or
dec
and
sti
enter
push
hlt
test
pop
push
dec
lahf
xorb
sbb
les
insl
pop
push
push
push
xor
pop
fdivr
call
and
inc
add
shrl
inc
dec
sti
pop
cld
pop
nop
adc
incl
sbb
inc
push
mov
rcll
push
mov
je
push
push
push
mov
push
neg
mov
mov
inc
nop
jne
out
push
mov
pop
jg
mov
add
mov
inc
or
sti
jg
dec
push
xadd
dec
test
jg
add
mov
call
ret
pop
ret
testb
add
ljmp
jl
mov
mov
sahf
mov
les
int
mov
mov
xor
push
xlat
push
fsub
subl
outsb
push
xchg
fnstsw
pop
or
sbb
aaa
push
xor
fidivs
and
mov
sbb
push
and
out
jl
and
push
add
mov
lret
adc
cltd
adc
mov
push
xchg
dec
add
mov
fs
add
push
lcall
add
and
rorl
cld
sti
or
shlb
add
inc
hlt
push
and
sbb
push
sbb
mov
adc
mov
loopne
inc
mov
add
and
inc
lock
mov
sub
lds
ss
mov
pop
outsb
loopne
ret
inc
pop
jb
cmpsl
sbb
insl
fistpll
sub
push
fldt
and
mov
add
mov
cmp
adcb
push
jle
int3
call
outsl
mov
enter
mov
fisttpll
out
xor
sub
push
push
into
icebp
push
enter
dec
test
mov
mov
sarl
lcall
fdivrs
push
les
add
push
or
punpckhbw
ds
and
inc
pop
or
add
or
push
cmp
pop
cmpsl
mov
shll
add
mov
or
les
sub
and
and
out
sbb
inc
aam
xor
push
daa
inc
and
lea
or
mov
dec
sub
inc
jbe
sbb
iret
dec
add
sbb
mov
push
sbb
pusha
sbb
stc
mov
cmpsl
and
dec
test
pop
int
pop
jo
pop
sub
pop
repnz
push
mov
and
mov
test
and
rcll
pop
mov
clc
pop
jge
mov
stos
pop
pop
lods
mov
pop
ret
xor
push
iret
repz
push
inc
push
dec
dec
push
sub
push
insb
loope
push
sub
cmp
add
and
sbb
mov
mov
inc
les
icebp
or
movsl
cmp
ljmp
test
clc
mov
sub
mov
and
adc
jl
or
scas
insb
add
inc
lret
xor
add
and
inc
xor
push
jne
shl
xor
pusha
push
cmp
sub
add
jg
cmpsb
out
xor
scas
mov
pop
fucom
je
jmp
inc
sti
jo
dec
outsl
loope
mov
testl
push
cmp
push
add
call
inc
mov
test
cmp
fisttpll
sbb
lock
xchg
std
sbb
push
and
cmp
push
movsb
sbb
cli
shr
inc
hlt
nop
test
cmp
mov
enter
mov
mov
push
xchg
fstl
cmp
add
jl
push
sbb
enter
jge
xor
or
or
or
dec
ds
orl
dec
pop
dec
or
test
sub
push
push
nop
aas
jl
stos
add
push
lea
or
or
fbld
add
cltd
mov
inc
das
and
xor
ja
cmp
imul
scas
shl
fdivrl
push
adc
sbb
jo
and
andb
push
jo
sub
mov
pop
mov
sbb
and
rcll
pop
and
les
adc
jne
inc
mov
cmp
adc
push
es
or
push
add
jbe
sub
push
push
bound
clc
sbb
sbb
jbe
dec
scas
pop
push
pusha
sub
sete
test
jns
fsts
test
mov
sub
movsb
adc
nop
and
nop
mov
iret
loope
orb
adc
xor
jne
pop
insb
pop
xor
cmp
negl
rclb
adc
test
or
test
pop
ud2
jb
dec
push
push
clc
add
mov
jne,pt
out
test
jle
je
adc
leave
and
jecxz
aas
add
mov
enter
push
push
pop
test
adc
shrl
punpckhbw
cmp
pop
push
push
cmpsl
out
jle
jle
subb
or
xor
cmpsb
jo
push
test
dec
add
mov
dec
push
sti
rclb
fs
scas
dec
push
cmp
sbb
push
mov
lds
push
inc
or
in
or
sbb
std
test
adc
pshufw
cmp
fdivrs
push
adc
loopne
sbb
jg
test
xchg
xchg
sub
rcll
testl
rorl
xchg
icebp
sbb
sbbl
cmp
mov
adc
sbb
pop
push
jp
test
or
adc
adc
pop
movsb
mov
test
insb
mov
add
dec
fwait
dec
dec
and
push
mov
insb
xor
pop
sbb
mov
or
pop
mov
sub
push
sub
mov
shrb
adc
inc
mov
cmp
mov
jecxz
jo
push
push
das
mov
out
push
dec
imul
fs
or
rol
ret
nop
mov
lea
xlat
test
push
data16
lock
sbb
mov
js
int3
std
loopne
neg
sub
cmpl
je
adc
adc
adc
inc
std
mov
loop
adc
lcall
icebp
add
sub
sub
addr16
ljmp
mov
sarb
mov
add
mov
fcoml
adc
adc
pop
cs
test
daa
add
adc
or
cltd
das
lahf
cmp
insb
or
mov
mov
fcmovnb
add
adc
jl
lahf
mov
push
jmp
inc
mov
inc
sar
in
push
mov
adc
sub
leave
aaa
push
sbbl
adc
lea
pop
pop
idivl
jns
in
jl
aad
cmp
push
and
ja
ret
mov
and
push
cmp
dec
lea
jne
jo
dec
sub
adc
sub
in
jg
push
bound
cli
jmp
cmc
lea
jb
leave
aas
clc
mov
mov
int3
fsts
les
cmp
mov
add
dec
xchg
loopne
adc
sarl
dec
cmp
push
stos
and
outsb
in
test
pop
mov
mov
xchg
or
ss
aam
cmpb
sbb
in
in
cmp
nop
cmpsl
pop
push
or
sbb
clc
pop
lods
inc
adc
jle
jne
mov
add
ret
xor
clc
fisubl
rcrb
push
sbb
leave
fidivl
sub
cmp
je
aad
ljmp
pop
or
or
mov
and
mov
jo
rcr
test
mov
and
cmp
mov
add
jg
stos
jae
movl
cmp
sbb
sub
push
loop
push
push
mov
int
sar
add
jg
jne
push
call
inc
cmp
jl
test
sub
mov
jnp
or
js
jne
adc
jbe
cmp
jbe
pushf
or
sbb
push
xor
pop
loope
in
push
mov
mov
pop
adc
xchg
fs
dec
faddl
je
mov
aaa
rorb
adc
loope
mov
push
rorb
inc
jo
fbld
and
loopne
out
pushl
movzwl
and
rcrl
sub
into
sbb
jmp
ss
ljmp
ret
add
inc
test
jne
sub
push
push
inc
xchg
in
lock
adc
adc
adc
lahf
ret
fists
and
jecxz
js
lahf
lods
adc
or
adc
insb
jne
ja
orb
out
pop
dec
es
fiaddl
add
jb
iret
cmp
jg
test
add
push
mov
testb
push
xor
lock
xchg
mov
pop
insb
pop
pop
ret
mov
or
sub
adc
or
adc
pop
dec
pop
rcr
push
int3
arpl
push
loope
loopne
insl
lcall
jne
pop
mov
sbb
or
or
movsb
push
xor
adc
imul
ficoms
rcrb
inc
addb
inc
pushl
adc
test
mov
std
sbb
jge
push
cld
add
sub
in
push
test
pop
nop
clc
jle
mov
mov
cmp
pop
xor
or
mov
mov
lea
outsb
add
fistl
cmp
add
mov
or
add
call
push
push
add
push
insl
shl
hlt
jecxz
clc
cwtl
jl
inc
push
lods
xor
jo
jg
mov
fcmovb
add
pop
pop
pop
test
adc
pop
pop
ret
icebp
mov
mov
pop
cld
enter
jbe
je
cmpl
insb
jge
call
clc
add
in
inc
hlt
js
pop
or
cmp
adc
cmp
push
lock
push
fld
or
cld
pop
pop
push
ds
jne
cmp
js
and
jp
lret
pop
pusha
xor
push
cld
mov
or
lret
test
repz
cmp
ja
push
clc
lea
push
push
sbb
or
or
clc
push
add
rorb
mov
cmpsb
outsl
test
push
lahf
adc
imul
rolb
push
add
aad
nop
cmp
stos
test
push
push
push
int
popa
sbb
dec
cli
cmp
sarb
lds
outsb
mov
pop
xorl
add
mov
dec
or
or
js
push
imul
lcall
pop
adc
mov
mul
pop
cld
mov
jg
int3
or
shl
test
aas
pop
push
mov
mov
push
aaa
lods
mov
add
fisubrl
out
arpl
add
jne
or
rol
jge
call
jg
incl
je
cmpl
lea
jl
mov
push
jne
push
pop
hlt
lcall
add
popa
push
iret
test
push
sub
push
das
push
das
shl
push
hlt
push
push
insb
jnp
or
aaa
insb
popf
sbb
adc
mov
xor
or
aaa
js
shl
loope
push
cli
sub
jno
pop
xlat
dec
xchg
test
rorb
fsubrs
jb
lret
push
rcrl
and
incb
push
stos
fcoms
pop
dec
mov
jg
stc
rol
or
inc
inc
or
shlb
adc
push
xchg
nop
xchg
ret
aas
jg
sbb
aaa
or
movsb
or
sbb
fiadds
jg
je
adc
push
xchg
and
fldt
pop
push
push
insl
mov
add
lds
mov
mov
mov
jb
push
add
stos
and
adc
aaa
mov
iret
inc
dec
and
cmp
jge
pop
mov
inc
add
dec
adc
adc
lods
mov
lea
lds
push
pop
popa
mov
test
pop
sub
push
add
repnz
cmpb
mov
mov
jmp
ret
popa
add
pop
add
insl
cmpsl
push
mov
sbb
jl
mov
sbbl
pop
or
adc
push
out
outsl
jo
push
pop
xor
cltd
ret
mov
enter
and
mov
and
sti
inc
add
inc
add
inc
push
add
ret
push
xor
cmp
loopne
cmpsl
int3
mov
push
or
inc
jle
in
push
add
inc
or
xor
out
lock
hlt
cmp
cli
lret
aaa
add
xor
sar
sbb
cmpsb
rorl
add
out
cmp
rorl
and
or
push
mov
mov
sbb
push
inc
icebp
adc
add
popa
inc
mov
sub
adc
imul
adc
ficomps
in
push
mov
or
and
adcl
sahf
jge
aaa
sub
inc
pop
pop
push
xor
sub
jmp
stos
decb
mov
inc
cmp
xor
std
repz
mov
paddusw
cmp
pop
mov
and
push
pop
xor
in
jae
test
lcall
outsb
sub
addps
popf
imul
mov
adc
xor
incb
pop
out
mov
cltd
ret
cmp
pop
mov
gs
or
data16
push
test
cwtl
test
adc
cmp
icebp
or
adc
cmp
in
and
xchg
dec
dec
sub
ljmp
push
test
or
fmuls
jecxz
push
sbb
add
pop
inc
subb
xor
int3
mov
vmaxsd
xchg
and
adc
pop
sbb
mov
or
pop
and
sbb
mov
rorb
pop
jge
cmp
jne
xor
push
push
dec
pop
outsb
or
fucom
push
xlat
push
lea
add
ret
jl
insl
and
fisttps
mov
test
fsubrs
push
test
or
ud1
rcll
xchg
stos
shl
mov
inc
adc
mov
test
mov
add
jg
and
sbb
mov
and
and
mov
and
subb
aas
sbb
add
cld
ret
fisttps
push
jns
subb
into
push
sbb
pop
test
jecxz
loope
or
stos
shrb
mov
je
mov
xor
cmp
in
ja
fimuls
mov
je
or
mov
sbb
test
jbe
sti
mov
inc
push
push
movsb
rol
and
hlt
shrb
ret
xor
push
pop
dec
mov
push
adc
sub
sbb
out
lahf
out
cmp
in
cmpl
and
jle
dec
or
jmp
ret
pop
push
cld
lock
jne
and
cmp
fidivrs
pop
orl
jecxz
push
pop
cmp
pop
and
mov
or
adc
je
icebp
mov
orl
je
pop
mov
jne
cmp
mov
lods
imul
jmp
aas
pushf
xchg
divb
test
or
or
lock
cmp
sbb
or
mov
inc
xorl
or
jg
mov
cmp
dec
je
xor
lcall
and
dec
cmp
dec
mov
add
xchg
sbb
mov
xchg
add
mov
lds
in
insb
or
enter
leave
pushf
cmpb
mov
outsb
test
cmp
pusha
hlt
pmulhw
rorb
jp
lods
cwtl
push
lea
hlt
rorl
dec
xor
inc
sbb
adc
sbb
fistps
popf
jns
lds
fdivl
adc
cmp
jmp
in
push
mov
xchg
fstp
in
or
fstpl
lret
mov
stc
das
xchg
mov
scas
sub
fdiv
jnp
jnp
daa
je
xor
jne
scas
data16
mov
sbb
in
fnstenv
push
inc
cmp
out
sahf
dec
bound
sahf
out
cmp
inc
mov
iret
in
addl
sbb
sbb
pop
and
jo
jg
sbb
ret
add
loope
push
adc
imul
mov
dec
sarl
sbb
repnz
out
dec
ljmp
in
add
scas
dec
inc
push
add
aad
aas
jl
inc
outsb
dec
dec
mov
pop
push
lea
push
mov
cli
scas
ficoml
add
push
lea
jns
fdivrp
cmp
push
xchg
xchg
and
aam
les
xchg
inc
sbbb
sahf
mov
inc
push
popa
fmulp
jo
cmp
push
loope
sbb
push
mov
add
sbb
fadds
xor
je
js
push
jg
fidivrl
add
fiaddl
cld
xchg
push
nop
xchg
jb
mov
in
add
add
leave
add
add
daa
push
push
push
scas
mov
ficompl
add
pushf
subl
xor
mov
jecxz
into
jge
or
add
sub
and
or
sbb
inc
xor
or
call
mov
in
movsl
stos
addl
push
lahf
jbe
add
xchg
sbb
movsb
shrl
sub
mov
call
in
out
push
sarb
ficoms
mov
js
cmp
and
pop
out
dec
sub
mov
push
or
dec
lods
inc
xor
add
arpl
push
setne
push
psubusb
les
xchg
sub
xor
push
pop
mov
cmp
pop
inc
inc
rorl
nop
movq
add
cwtl
rcrl
je
or
andb
add
add
mov
xchg
pushf
push
mov
fbld
jle
sahf
pop
mov
lahf
inc
std
or
loope
in
sbb
clc
pop
lahf
push
cmpl
xor
adc
ret
sbb
in
pop
mov
je
xor
cmpsb
insb
sub
ret
push
push
lea
int
adc
cmp
dec
lods
je
inc
clc
push
push
mov
xchg
clc
out
out
mov
insb
push
dec
dec
mov
push
push
xor
sub
inc
dec
sbbb
decl
inc
inc
push
ret
add
insl
lods
jns
int3
mov
xor
dec
sub
pop
sti
jmp
mov
add
sahf
inc
add
mov
xabort
lcall
loop
jg
js
push
and
inc
jbe
icebp
gs
push
fadd
ret
sahf
repnz
cwtl
push
sbb
push
adc
xor
out
xor
cmp
inc
or
jle
inc
xor
push
lahf
stos
loop
mov
fistpll
popf
pushf
mov
add
adc
xorb
xchg
pop
ret
push
mov
fistps
inc
and
jae
flds
add
add
push
push
loope
subl
push
adc
dec
fisubrl
adcb
push
sub
sub
test
mov
jge
pop
bound
mov
repz
pop
jle
adc
cmpb
testl
sbb
lods
cmp
adc
push
pop
pusha
jo
call
les
mov
loopne
xchg
cmp
inc
movsl
jg
or
push
std
add
cwtl
add
jmp
lret
jnp
mov
xor
push
push
push
and
push
add
mov
aas
cs
jo
lret
push
mov
xor
xor
cmp
jne
and
das
int3
mov
sub
add
loop
pop
sbb
test
push
adc
clc
add
pusha
jne
and
aad
lahf
sbb
xchg
arpl
sbb
call
lea
cmpl
pop
or
andb
jb
sarb
aad
cmpsl
adc
rcrb
inc
add
dec
mov
movb
and
and
jb
sbb
or
dec
xchg
icebp
adc
push
push
daa
dec
mov
flds
xchg
aaa
jo
clc
ds
mov
cld
inc
pop
cld
xor
aas
mov
sbb
push
push
stos
or
xchg
mov
add
movsl
loopne
xchg
std
incl
jne
push
mov
bnd
add
andb
sbb
roll
lea
sbb
pop
push
sbbl
cwtl
shufps
movl
imul
loope
in
call
fs
cmp
enter
push
pushf
push
and
sub
adc
mov
push
xor
dec
sub
jg
frstor
nop
add
dec
push
mov
push
dec
sbb
fisubrs
dec
lret
push
push
sub
jge
test
jo
push
addb
inc
loope
sbb
inc
lahf
push
rclb
add
jbe
test
test
jge
push
push
nop
cmp
pop
sub
push
push
lea
mov
mov
xor
inc
sub
push
lret
push
jl
push
cmp
or
out
or
cmp
xorl
adc
or
push
test
cmp
and
inc
cmp
dec
loopne
andb
push
xor
enter
je
sub
add
push
sub
outsl
mov
add
lock
push
push
and
enter
mov
push
sbb
scas
call
push
je
push
jbe
ja
mov
or
adc
cwtl
stos
aaa
faddl
sub
inc
shrb
add
popa
cmpsb
inc
inc
fldl
fmull
test
mov
push
push
inc
movsl
adc
outsb
or
push
mov
out
adc
jns
movsb
lock
xor
sbb
scas
add
pop
add
pop
les
dec
shl
cmpl
push
push
mov
rcrl
ret
push
lds
pop
test
sbb
mov
ret
jne
out
fbld
or
dec
inc
push
add
push
mov
or
ljmp
add
push
and
jp
aas
jp
sbb
cmp
sub
sbb
leave
xor
or
leave
xchg
sbb
push
es
rcll
arpl
mov
add
mov
cmp
jno
adc
and
add
adc
adc
rorl
inc
xorl
sub
sbb
sub
add
push
push
push
js
lds
pop
cmp
cld
cld
add
jge
add
je
mov
pop
aas
jb
jge
xchg
lock
push
stos
sbb
pop
in
cs
sub
push
pop
or
into
sub
adc
cmp
jbe
int
dec
push
mov
leave
lea
mov
stos
xchg
add
movzwl
xchg
iret
add
fdivl
outsb
sub
cwtl
mov
bound
mov
fmull
sbb
outsb
test
push
push
push
lods
mov
push
cmp
shr
push
sbb
js
cmpsl
shl
les
data16
fistps
sub
sbb
adcl
pop
clc
ret
inc
add
jno
enter
dec
popa
cmp
push
enter
inc
lods
pop
mov
add
enter
sub
or
xor
and
adc
sub
sub
sbb
cs
and
sbb
mov
sub
jl
cltd
and
pop
adc
clc
or
fldenv
mov
cmp
and
or
std
cmp
add
mov
mov
decl
rorl
adc
out
sar
mov
shr
add
mov
imul
push
shrl
lahf
push
gs
and
nop
imul
fistps
add
jmp
mov
cmc
sub
mov
stc
add
js
add
push
push
enter
lret
sub
sub
jo
test
pop
cld
cmp
je
cmpl
arpl
cmp
jne
push
adc
repnz
popa
adc
cmpsb
mov
ficomps
pop
fsubrl
sti
lea
push
into
sbb
jp
adc
and
lds
jl
test
cmpsl
mov
sub
testl
dec
push
dec
or
lea
mov
add
and
jns
cmpsl
sbb
sub
jnp
mov
fldz
data16
push
ljmp
pushf
sub
sub
dec
adc
push
adc
je
test
jl
lcall
add
jbe
add
aaa
ds
sub
testb
sub
sbb
xlat
stos
rcrl
add
mov
test
arpl
mov
inc
outsb
out
aaa
fidivrs
cmp
add
stc
repnz
xor
sbb
pusha
push
mov
inc
jg
mov
popf
imul
cld
testb
or
out
or
jmp
mov
imul
aaa
loopne
sahf
mov
sbb
push
faddl
clc
adc
xor
mov
sub
xor
mov
fdivrp
roll
mov
mov
test
sbb
jno
out
mov
mov
jns
inc
push
fadds
cmp
add
sbb
pop
mov
or
mov
adc
je
add
lods
add
testl
out
cwtl
sub
movb
push
jecxz
leave
jge
cltd
push
or
mov
call
jbe
mov
push
aad
sbb
and
or
roll
insl
jb
mov
call
add
or
xchg
mov
lock
mov
je
mov
dec
pop
jbe
xchg
xchg
and
jns
and
cmp
sbbb
pusha
rolb
push
dec
cwtl
subb
xchg
adc
jno
sub
dec
cmp
xchg
lods
add
inc
jl
inc
decl
and
add
dec
and
lret
add
xchg
mov
add
or
inc
in
pusha
mov
pop
les
inc
aam
push
inc
outsl
loopne
lods
inc
jns
jmp
xor
push
sbb
pop
sbb
jae
or
jne
and
inc
mov
out
add
sbb
or
add
inc
cmc
pop
mov
add
dec
and
push
mov
push
inc
and
outsb
mov
add
mov
pop
xor
pop
dec
mov
rcll
fs
or
notb
sbb
fisttps
fisttps
add
lock
jae
push
leave
inc
mov
jg
or
fwait
imul
push
andb
int
xchg
xchg
push
sahf
adc
push
adc
ja
mov
add
or
test
jle
orl
push
enter
mov
inc
sbb
adc
cld
lock
jmp
mov
xchg
sub
lea
pop
in
leave
adc
push
ficomps
jo
or
lcall
sbb
mov
imul
push
cltd
inc
pop
sub
push
mov
push
jb
lahf
pop
je
test
and
cmp
movsl
mov
pop
ret
lahf
or
inc
and
add
sbb
and
inc
dec
imul
scas
cwtl
or
add
push
clc
push
sub
clc
pextrw
les
iret
sub
cmp
setae
lcall
and
add
mov
mov
js
lret
mov
mov
cmp
or
xchg
lock
hlt
inc
inc
pop
push
push
movsl
jb
add
inc
push
nop
sub
aam
lea
push
adc
cmpsb
call
movsl
push
adc
pop
pop
fcmovnb
jecxz
ja
rorl
xchg
andb
stos
mov
xor
push
pop
inc
sbb
aam
rorb
out
jnp
inc
push
adc
sbb
and
fdivs
rcr
mov
and
add
adc
sti
sbb
inc
ss
push
inc
pushf
cmpsb
jb
push
push
dec
push
push
add
add
aas
inc
pop
add
mov
in
inc
add
inc
or
call
bnd
adc
adc
out
jns
mov
pop
cmp
ja
movzbl
movsl
fsts
push
dec
faddl
int3
jno
mov
xlat
and
lds
push
mov
pop
cmp
in
add
add
adc
sub
push
sub
add
xlat
dec
nop
push
adc
or
lahf
in
lods
mov
inc
and
enter
js
or
leave
or
xor
mov
xor
inc
xor
push
or
movl
xchg
ja
jo
dec
pusha
sbb
add
das
sbb
movsb
sbbl
xor
mov
seto
xor
mov
jo
cld
cltd
and
call
cmp
push
popa
int
adc
push
and
mov
pop
or
add
and
fmuls
jp
and
test
mov
jge
je
movsl
pop
jo
add
xor
jl
add
push
ds
enter
and
mov
ret
jne
mov
sbb
jmp
dec
jno
lea
add
imul
lods
ss
outsl
out
mov
and
or
stos
and
sbb
ret
jl
push
xor
ds
sub
sub
jmp
into
pusha
roll
rcll
fstpl
jns
subps
xchg
xor
cmp
or
dec
push
int
daa
mov
lea
call
add
mov
mov
movsl
int
rcrl
push
outsl
pop
aaa
adc
pop
sbb
movsb
iret
sbb
shlb
nop
ret
clc
and
leave
es
rcrl
ja
stos
inc
mov
je
icebp
xor
mov
sub
xor
dec
movsl
push
stos
nop
or
lock
movsb
inc
adc
sub
mov
push
pop
andb
adc
imul
mov
adc
hlt
mov
xchg
push
or
andl
scas
xchg
hlt
add
dec
lds
rcrl
cmpsb
mov
aad
xchg
pushf
add
jp
dec
inc
jg
xchg
sub
aaa
jne
inc
arpl
add
test
add
pop
sbb
cmpb
xchg
dec
add
cmp
and
lea
add
push
push
outsb
cltd
nop
add
pop
subl
loopne
add
cld
sub
push
and
sub
ret
xor
inc
enter
mov
add
cmp
and
je
push
add
je
std
mov
jmp
xor
fsubs
inc
enter
push
push
lods
jl
jb
adc
cltd
mov
test
push
fisttpl
add
mov
pop
xor
leave
mov
or
xchg
xchg
leave
lret
push
fwait
in
xor
cmp
and
mov
push
add
jne
adc
mov
sub
loope
or
pushf
and
cwtl
pop
mov
add
inc
xchg
and
mov
inc
and
ficompl
lods
pmaxub
clc
adc
mov
add
add
push
cmp
je
popf
cmp
pop
jo
js
cmpsb
ret
mov
shll
xlat
push
loop
sbb
cmp
push
add
inc
ss
es
out
data16
pop
movl
jne
cmp
inc
shr
sbb
add
add
clc
mov
add
push
mov
pop
sub
xchg
or
insl
adcb
rcrb
daa
insb
cmc
or
fcmovb
and
in
sub
movsb
negb
pop
push
mov
daa
and
dec
ror
mov
out
int
stos
ret
cli
sbbb
sbb
pop
addr16
and
lea
sub
push
or
ja
mov
jae
imul
ljmp
jecxz
push
cmp
mov
rolb
mov
inc
inc
mov
sbb
insl
push
cld
ljmp
adc
loope
adc
ss
sub
push
adc
imul
test
in
scas
inc
mov
xor
xor
add
cmpl
lret
lods
mov
clc
and
test
jmp
mov
das
mov
dec
jl
out
mov
add
sbb
test
aad
jle
xor
les
and
add
push
int3
add
push
adc
imull
into
nop
cmp
push
int3
push
std
stc
cmp
mov
jl
nop
add
inc
push
push
and
adc
mov
push
test
cmc
push
into
movl
add
jo
jge
jne
fldcw
ret
push
push
and
pop
push
sbb
cmpb
jb
bound
add
mov
inc
pusha
adc
cmp
push
hlt
mov
or
sub
js
mov
insb
movsl
dec
je,pn
out
mov
push
add
cld
aaa
push
push
leave
sbb
pop
add
push
fwait
mov
sub
dec
push
out
mov
fisubrl
mov
jg
push
cmp
mov
leave
mov
adc
mov
or
sahf
jo
cmpsb
sbb
push
out
add
sbb
mov
inc
cmpsb
roll
push
cltd
scas
pop
fnstsw
fmull
push
gs
xchg
shlb
scas
xor
in
sbb
sbb
loopne
aas
adc
sub
mov
mov
xchg
push
jle
fcomi
dec
sub
adc
shlb
push
add
xchg
mov
movsb
xchg
add
enter
or
mov
xor
jmp
pop
inc
and
xor
jb
cmp
jne,pt
pop
sbb
push
mov
and
adc
mov
outsb
cmc
jbe
cmp
inc
adc
clc
xor
mov
stos
cmp
clc
sub
and
pop
jne
or
call
cmp
jmp
sbb
jne
or
xchg
lods
pop
cmpsb
sbb
mov
cmc
push
add
and
jmp
adc
stc
bound
mov
lret
add
in
dec
sub
and
sbb
cltd
jmp
and
pop
lods
inc
bound
push
mov
jb
and
mov
setle
mov
jmp
lock
or
add
test
outsb
pop
lret
and
xchg
adc
push
xor
lods
stos
jp
ljmp
push
push
inc
loope
mov
and
fildll
cmpb
push
addb
repnz
sub
sub
sbb
lcall
xor
jmp
outsl
sbb
repnz
push
xchg
test
push
loope
push
sub
int
cmc
add
or
push
mov
sti
and
arpl
cmp
sub
add
ficoms
scas
and
insl
pop
dec
fnstenv
push
sub
test
rolb
sbb
test
ret
dec
mov
test
in
push
push
pop
aas
inc
or
in
ss
xchg
xor
fwait
cltd
jne
and
sbbb
jnp
or
rolb
les
xorb
cmp
push
and
popa
mov
mov
sub
add
lods
fnsave
std
add
lret
pop
xor
push
enter
push
and
add
add
adc
test
iret
adc
jo
test
pop
dec
out
xor
pop
add
mov
jl
hlt
add
and
push
outsb
jns
push
adc
push
jb
mov
repz
cmp
jns
add
lods
aaa
push
les
add
mov
mov
pusha
cmp
and
cmpsl
push
sub
test
pop
dec
cmpsb
ret
xor
cld
inc
rclb
mov
jnp
cmp
xor
mov
es
xor
sbb
pop
xor
cmp
sub
cmp
sbb
iret
inc
stos
dec
push
test
out
push
cmp
xor
inc
loopne
mov
add
shlb
push
testl
test
adcl
lea
loope
xor
sub
push
lods
clc
insl
pushf
jmp
push
sbb
insl
dec
jge
push
cli
add
or
jne
movl
push
int
and
inc
sub
dec
dec
cmp
push
add
leave
sub
cmpsb
inc
arpl
cmpl
dec
pop
pop
mov
inc
lods
mov
or
nop
or
add
mov
mov
mov
jo
sub
sub
sbb
pop
or
mov
js
inc
movb
add
xchg
jno
cli
mov
fildll
cmp
loopne
adc
call
xchg
mov
fmulp
mov
mov
jno
adc
mov
jecxz
jecxz
and
fsubr
push
movsb
fildl
or
rorb
add
mov
stos
in
push
or
into
inc
sub
mov
jne
cld
ss
mov
outsl
add
ss
iret
mov
out
mov
add
test
lea
daa
mov
add
jmp
hlt
push
out
or
popf
adc
pushf
push
and
inc
pop
fdiv
sub
add
out
shlb
je
subl
push
pop
pcmpgtb
sbb
mov
xor
mov
rcrl
in
and
addr16
into
mov
push
jp
dec
push
invlpg
sahf
inc
dec
inc
cmp
mov
stos
pop
fwait
outsl
sub
inc
lock
lds
out
mov
in
clc
testl
push
mov
subb
pop
inc
xchg
aam
subb
js
adc
xorb
pushf
nop
cmc
dec
mov
sbb
rorb
std
cmp
cmp
popf
jno
mov
jle
mov
test
pop
adc
in
arpl
les
loopne
jno
addr16
sbbl
and
inc
pop
xchg
in
pop
xchg
in
and
leave
push
test
je
add
or
or
cld
in
test
xor
je
or
push
mov
insb
push
rolb
xchg
sub
jo
in
mov
inc
fistpl
mov
cmpsb
jbe
mov
sub
or
sub
and
popa
int
lods
adc
gs
sbb
ds
or
les
mov
dec
or
add
filds
add
rcll
bsf
cmp
mov
xchg
sbb
add
cmp
je
pushf
mov
sti
sub
sub
jg
in
pop
inc
push
cmpsb
or
xchg
jl
sbb
movsb
push
push
push
mov
dec
push
gs
cmp
and
sbb
jo
movsl
lret
pop
imull
xor
insb
adc
adc
xor
adc
sbb
shl
xor
dec
out
add
mov
push
adc
pusha
mov
gs
pop
jns
add
js
sbb
nop
cwtl
in
cwtl
enter
jae
adc
popa
and
cmpsb
stos
and
pop
add
cmp
lret
orl
es
andl
inc
sahf
inc
add
or
lock
adc
fstpt
movsl
les
rdmsr
mov
imul
jo
sbb
sub
push
adc
pop
inc
sub
test
imul
mov
push
test
add
ret
mov
std
and
cmp
xchg
movsl
or
and
xor
sbb
movsb
inc
lcall
pushf
cmp
add
daa
sti
adc
jno
xor
push
push
hlt
dec
es
pushf
out
sbb
add
dec
lahf
xchg
xchg
test
and
push
push
rorb
mov
mov
in
clc
sub
enter
or
adc
out
in
nop
pop
les
adc
daa
pop
cmp
arpl
jns
pusha
inc
sbb
or
movsb
push
push
in
or
cwtl
push
mov
sub
dec
adc
filds
lret
jno
mov
inc
mov
cmp
pop
sub
into
mov
sub
sbb
push
push
adc
pop
and
adc
sub
sbb
out
add
sub
cmp
jl
mov
pop
push
jb
jecxz
aas
mov
cmp
loopne
pop
push
sub
orl
out
xor
sub
mov
adc
and
mov
mov
fstl
add
mov
mov
adc
mov
dec
jae
or
cld
nop
loopne
outsl
mov
pop
or
xor
push
and
or
mov
push
sbb
std
gs
xchg
sbb
icebp
push
ds
dec
fs
add
push
sub
out
inc
sbb
fbstp
mov
mov
ret
test
xor
push
add
fs
inc
rcll
inc
and
or
push
fldenv
sub
adc
out
test
jb
dec
cmpsl
push
mov
sbb
jae
mov
pusha
cltd
nop
pop
push
lods
cs
cmp
mov
mov
sub
insb
adc
mov
frstor
xor
push
cli
sbb
pushf
sbb
shr
adc
mov
addl
push
xorb
jle
dec
clc
xor
dec
cld
sub
or
jge
push
lock
cwtl
clc
and
inc
call
bound
mov
ret
aas
cld
jle
jg
push
scas
and
aaa
pop
je
add
adc
outsb
jl
fucomi
cli
mov
std
arpl
xor
aas
add
fs
lea
aaa
call
jmp
mov
lea
inc
test
jmp
int3
add
jb
fsubrs
xor
mov
cmp
or
or
pusha
mov
push
mov
js
xchg
fcompl
pop
xor
dec
mov
add
loop
stos
mov
jle
jb
inc
add
dec
jl
mov
cmp
lea
nop
add
test
cmp
add
push
test
test
jle
sbb
mov
sbb
mov
and
test
cmp
xor
test
mov
and
aas
movsl
xchg
not
mov
push
jno
sbb
push
or
xor
cmpsl
aas
ret
adc
jecxz
mov
xchg
dec
add
push
repnz
add
inc
ret
and
push
shlb
cltd
aad
cmp
les
jg
mov
imul
cmp
xor
aaa
ss
cmp
adc
mov
add
pop
outsl
pusha
add
xor
clc
dec
and
jnp
add
mov
bound
sbb
and
out
stos
jecxz
fcomps
xor
cmp
or
or
in
rcrb
loope
fdivr
sahf
jle
mov
mov
js
sbb
movl
push
push
test
mov
insb
sub
mov
test
aam
push
xchg
xlat
jecxz,pn
inc
sub
add
xorl
decb
cmp
jle
mov
and
xor
push
xor
arpl
in
adc
hlt
add
xor
adc
push
xor
pop
fstl
fs
jae
add
mov
jl
push
mov
or
add
cmc
sub
xchg
cmp
pop
andl
fadd
inc
push
inc
pusha
pop
xchg
andl
ja
pop
push
add
stos
sbb
lds
dec
mov
jle
aas
js
sarb
rorb
pop
lcall
sub
fs
dec
jo
fs
mov
fimuls
subb
add
xor
xchg
pop
mov
and
loopne
aad
or
push
dec
sub
or
xor
inc
test
cmpb
add
imul
adc
xor
or
addl
test
or
xor
mov
jmp
stos
add
jne
lds
rcll
test
femms
aad
add
test
push
adc
push
sbb
push
movsl
add
push
shlb
push
push
fiaddl
ds
inc
leave
movl
leave
or
push
add
xor
icebp
mov
xor
sub
sbb
and
inc
repz
dec
and
sarl
xchg
jmp
push
ss
cs
out
mov
and
pop
insl
sahf
fmull
mov
adc
adc
cmp
stos
ret
add
ret
je
sub
sarb
dec
xchg
push
aas
push
push
lea
xchg
fs
je
mov
push
cmp
test
push
pop
xlat
sub
insl
sbb
jo
rcll
je
inc
inc
add
push
out
push
push
mov
adc
mov
lods
jae
sub
pop
inc
mov
and
jns
mov
and
sbb
mov
adc
lea
outsl
arpl
fadds
ret
je
mov
xchg
fisttps
mov
sete
mov
movsb
lea
lds
jg
add
loop
cmpsl
dec
add
inc
and
inc
pop
adc
pushf
xlat
sub
int3
mov
cmp
ret
add
sub
sbb
and
cmp
stos
jnp
mov
test
ret
jmp
sub
and
fists
mov
cmpl
push
outsl
xor
jg
pop
popa
push
add
stos
inc
movsl
andb
or
inc
inc
and
dec
jnp
lret
mov
xor
xchg
cs
sub
test
xor
mov
lea
iret
inc
sbb
ret
jg
mov
lea
xor
fdivs
dec
out
and
out
jno
push
dec
mov
push
xchg
rorl
dec
inc
add
mov
push
cmp
cltd
and
or
ja
sub
repz
or
movups
or
mov
roll
mov
add
push
cli
add
popf
shrb
push
imul
cmp
sbb
cmp
add
lock
jle
jl
or
test
cmc
fcoms
pop
pop
adc
sub
ret
icebp
inc
xor
and
and
data16
pop
cmp
xchg
or
lret
xorb
cmp
push
scas
test
ret
add
scas
es
jo
xor
lock
inc
or
jno
lock
and
and
mov
inc
pop
mov
add
je
mov
push
jle,pt
or
dec
dec
sbb
rorb
xor
scas
xchg
sbb
sahf
js
push
jno
or
add
xchg
mov
and
inc
pop
add
push
cmp
pop
repnz
or
adc
pop
or
or
cltd
or
jp
lret
fstpl
repnz
pusha
sbb
jle
sub
sbb
mov
adc
push
mov
loopne
adc
stc
inc
push
push
jns
mov
icebp
mov
sbb
out
fucompp
adc
push
leave
xchg
adc
push
push
mov
mov
push
pop
adc
sahf
ret
and
adc
pop
push
push
jno
sub
fidivrl
movb
mov
inc
sbb
or
sbb
sub
testl
dec
or
in
pop
jnp
fistpll
mov
lock
lcall
add
loop
rorl
fnstsw
call
aam
xor
mov
sbb
push
push
add
mov
add
ret
xor
dec
push
dec
pop
push
and
mov
adc
pushf
loopne
mov
push
rcll
sbb
push
xchg
mov
push
je
pop
clc
xchg
jo
cmpsb
mov
xor
lcall
adc
jle
and
dec
adc
or
ror
cmp
dec
push
ja
add
sub
sub
movsl
inc
inc
hlt
cmp
jne
sbb
pushf
call
inc
jp
ja
cmp
mov
sub
push
movsl
xor
dec
ret
inc
ror
adc
aaa
mov
in
sbb
testl
cmp
lock
test
adc
xchg
mov
push
leave
cwtl
sbb
pop
leave
loop
jae
mov
jmp
outsb
add
or
lea
jge
push
loope
movsb
sbb
mov
or
push
pop
lods
push
sar
push
add
fsubrl
push
inc
sub
dec
lahf
pop
fidivrs
sub
add
pushl
mov
ficoms
mov
xor
sbb
inc
jl
mov
xor
stc
mov
je
rcrl
mov
jmp
jns
xchg
lods
test
push
das
xchg
out
adc
mov
xchg
inc
mov
dec
and
or
gs
inc
push
and
add
inc
leave
xchg
int
jb
fisubrl
orl
pop
or
aam
sar
js
mov
ja
xor
mov
fisubs
jp
mov
dec
cwtl
lea
add
cmp
push
in
push
je
add
cmc
xchg
add
sub
fbstp
cmpb
repnz
mov
xor
lret
lret
add
cmp
lock
popa
mov
xchg
lods
or
xor
pop
mov
dec
hlt
jge
cmpb
adc
xchg
popa
xor
daa
sbb
cs
fwait
lds
cltd
push
es
into
sbb
jno
enter
shll
xchg
mov
rorb
mov
mov
push
jg
push
add
push
out
pop
inc
jl
sub
ret
enter
inc
sub
push
bound
cld
sub
clc
clc
inc
inc
loope
lea
mov
mov
adc
or
xor
mov
mov
mov
sub
push
test
loope
andb
mov
and
add
pop
push
stc
or
push
rolb
jo
add
push
or
bound
mov
mov
repnz
movsb
rcl
hlt
and
hlt
push
adc
add
stos
movnti
pusha
nop
sbbl
sub
rcrl
adc
orl
mov
int3
pop
mov
push
mov
stos
jae
incl
cmpsl
test
scas
outsb
push
ret
adcl
cmc
imul
jle
jg
push
fs
pop
mov
ret
aas
cmp
sbb
adc
js
add
xchg
subl
or
xor
aas
repnz
sub
adc
daa
add
ret
jg
arpl
lods
xor
popf
es
int3
cmp
dec
and
scas
adc
adc
test
insl
aad
sbbl
sbb
xorl
adc
sbb
fldcw
sub
decl
testb
jl
mov
and
test
jle
adc
cmp
jle
lock
out
mov
sub
lock
loop
or
cltd
flds
add
dec
ljmp
popf
adc
andl
lret
add
into
xchg
push
int3
lea
pop
sahf
cmpsl
push
lea
mov
orl
and
push
push
push
inc
push
and
push
push
cmpsb
xor
lock
outsb
aaa
push
test
and
aam
mov
lods
jmp
sub
add
jae
mov
mov
or
mov
cmp
sub
pop
pop
ret
popf
adc
repnz
pop
pop
mov
jmp
jl
add
ret
pop
outsb
ljmp
jnp
nop
aas
jle
mov
aas
mov
movl
or
push
xor
jne
or
push
lock
adc
inc
jae
lods
mov
xlat
jg
ss
push
fimuls
xchg
push
lcall
shll
add
ret
xor
fs
stos
popa
je
add
pop
pusha
cmc
push
lock
mov
sbb
cmpsb
push
mov
lret
pop
jb
add
ret
std
sub
movnti
test
mov
js
int3
jmp
aas
iret
adcb
pop
xchg
sbb
fs
mov
shl
jns
arpl
dec
movsl
pusha
push
jp
pop
mov
aas
inc
mov
push
cmp
mov
test
lods
inc
xor
or
xor
and
or
add
shl
jmp
mov
daa
arpl
insl
xchg
je
cmpsw
lret
pop
lcall
int
push
iret
xor
dec
movsl
adc
push
subl
xchg
lds
xor
push
sbb
push
pusha
mov
inc
je
xchg
test
mov
stos
adc
mov
jle
jne
in
mov
xor
sub
adc
out
fsubrl
add
f2xm1
push
push
mov
lock
lea
repnz
sub
clc
ds
dec
cmp
cwtl
or
push
mov
adc
jae
add
jne
mov
pop
push
push
xchg
adc
sub
aas
add
inc
jbe
fildll
sub
out
xchg
sbb
sbb
fimull
push
dec
add
push
inc
leave
mov
or
push
xchg
es
inc
inc
andb
mov
fimull
lods
add
test
xchg
cmp
adc
mov
push
cmp
adc
inc
mov
jmp
or
push
shll
mov
push
jne
gs
xor
cmp
sbb
loopne,pt
mov
xor
xchg
loopne
push
mov
and
cmp
inc
ficomps
add
pusha
gs
xorl
je
adc
xchg
xor
es
jne
add
add
sbb
or
pop
add
sbb
push
and
sub
or
sti
pop
int3
and
mov
xchg
lret
jnp
sub
and
insb
and
xor
out
daa
xor
add
or
xor
sub
cmpsb
jmp
aaa
inc
cmp
mov
fs
pop
push
out
sub
scas
pushf
pavgb
pop
cmp
nop
mov
mov
lds
cmc
xor
mov
popa
mov
sub
sub
push
push
sbb
inc
adc
and
mov
cmp
pop
dec
and
add
sarl
or
pop
sub
lret
jecxz
mov
add
sub
add
jne
sti
sub
cli
and
push
les
int3
push
lods
sbb
sbb
mov
dec
insl
or
ret
mov
dec
ret
and
cs
movl
mov
ret
nop
adc
adc
mov
or
jb
mov
ds
add
lds
or
push
xor
lret
lret
mov
or
fwait
test
leave
nop
pop
sahf
enter
dec
and
cs
pop
aaa
and
jo
dec
fisttps
mov
sbb
add
and
push
mov
add
and
adc
xlat
ret
cmp
pushf
sub
jge
lret
mov
push
adcl
inc
ret
jmp
nop
and
pushf
in
jge
pop
fstpt
push
test
stos
jg
fwait
xor
bound
lock
nop
in
push
sbb
outsl
add
arpl
in
fs
push
dec
movsl
shrl
repnz
push
in
add
push
sub
mov
mov
imul
aaa
cmp
sbb
inc
popf
and
or
push
add
inc
addr16
adc
jecxz
xor
push
dec
cwtl
arpl
sbb
add
cmp
push
insl
pop
dec
or
pinsrw
pop
das
adc
or
jno
xchg
adc
push
fs
cmpb
jo
add
pusha
mov
lret
mov
pop
jmp
sub
jl
or
xchg
add
fdivrs
nop
cltd
stos
dec
sub
dec
rolb
push
or
test
stos
cld
sub
mov
aas
ficoms
in
sub
jns
sub
jl
je
movsb
sub
ljmp
sbb
add
push
lret
addl
push
pop
add
mov
ret
cmpsl
out
ds
fldt
adc
cmp
bound
mov
stc
add
mov
lret
aaa
push
cwtl
xchg
stc
lock
and
mov
test
sarl
ljmp
movsl
sub
repnz
fcmovb
add
test
lock
lahf
cmpsl
sub
ss
or
shrb
xor
xchg
pop
add
loope
popl
xchg
loopne
mov
repnz
ss
mov
ret
pop
shrb
and
or
ret
cmpsb
mov
rolb
push
jo
push
rclb
mov
push
push
in
push
mov
or
inc
repz
movsl
pusha
leave
lret
or
sub
shlb
add
lock
leave
dec
add
xor
push
repnz
add
add
mov
aad
push
xchg
pushf
ret
add
jo
leave
sub
dec
add
xor
push
decl
or
sub
push
push
sbb
es
mov
dec
or
mov
jbe
xor
push
subb
sbb
lea
xchg
test
add
rcr
or
dec
dec
pop
mov
sbb
cmp
jb
je
jmp
pop
pop
fdivrs
aam
push
call
je
add
sub
xchg
jno
push
inc
sub
test
mov
and
add
mov
mov
jb
mov
dec
in
add
jle
loop
or
sbb
decl
scas
incb
clc
in
mov
jle
cmpb
clc
sub
or
jge
lret
jo
scas
jo
or
push
lcall
das
cmp
sahf
aas
pop
add
rcll
push
dec
sub
ds
sub
sub
lea
add
pop
push
push
push
push
loopne
inc
sub
push
push
push
push
in
ss
in
push
scas
sub
add
add
push
movb
mov
xor
xor
add
fsubr
lds
js
ret
jb
inc
out
or
mov
js
jg
pop
ret
data16
add
pop
add
or
push
push
imul
inc
add
or
ret
mov
dec
insb
enter
cmpsb
and
fwait
push
rorl
ret
add
je
test
rol
sbb
inc
mov
ret
add
int3
inc
jo
js
mov
or
pop
rol
shlb
pop
xor
ljmp
std
insb
add
jb
adc
and
xchg
int
ja
fs
sub
push
popa
test
or
xchg
pop
jo
jmp
adc
adc
sahf
xchg
ss
and
mov
pop
xor
sub
mov
add
aas
out
and
push
xor
add
cmp
push
sbb
sub
add
jle
dec
add
mov
or
add
in
xor
lock
clc
ficompl
aad
push
push
pop
mov
clc
push
push
ds
and
lock
adc
pop
adc
jl
rolb
push
xchg
inc
lds
test
xor
int3
push
push
pop
dec
mov
mov
jge
or
mov
mov
pop
das
dec
or
or
mov
add
sbb
nop
adc
mov
push
clc
cld
mov
dec
add
shll
mov
sbbl
dec
pop
or
out
cltd
sbb
inc
push
xor
mov
cmp
popa
stos
inc
loope
push
xchg
xlat
popf
push
adc
or
push
fdivrs
sub
mov
sbb
daa
rorb
inc
pop
mov
mov
add
sbb
inc
repz
cmpl
shl
jle
cld
add
enter
sbb
sbb
jmp
fsubrs
and
es
jmp
mov
xor
push
cmp
pop
xor
push
push
mov
sub
outsl
or
cmpsb
and
mov
cmc
xchg
xor
rclb
or
add
mov
pop
pop
cli
call
addr16
call
add
mov
mov
call
push
ret
inc
ret
xor
push
dec
cmp
adc
rol
push
addr16
out
fcompl
pop
ret
sbb
ficompl
lahf
rorl
pop
sub
mov
add
or
adc
incb
ret
jg
push
xor
daa
movsb
inc
scas
or
inc
clc
xor
push
aam
xchg
call
add
nop
ljmp
mov
in
pop
add
sarb
fmuls
pop
inc
dec
push
js
push
push
mov
xchg
push
dec
lock
xchg
and
and
imul
jg
xchg
aad
repnz
fld
div
scas
insb
popa
push
stos
or
hlt
ljmp
ss
inc
rolb
jnp
jae
mov
and
sbbl
ss
sbb
movl
inc
dec
jne
push
push
mov
cwtl
mov
mov
loopne
fistpll
adc
pop
and
inc
and
call
ds
fdivrl
sub
pop
in
shlb
cmp
sbb
and
loopne
inc
add
sbb
cld
ret
out
mov
movb
imul
rorl
adc
cld
sub
scas
inc
mov
jg
mov
jns
lea
jne
and
shlb
push
mov
loope
push
cmpsb
mov
mov
and
xchg
sub
lock
or
fwait
dec
xchg
sqrtps
xchg
push
push
lea
jo
mov
movsb
cli
pop
sbb
xchg
push
cmp
call
mov
xchg
mov
pop
loope
out
movl
test
adc
or
pushf
cmp
aas
mov
inc
iret
mov
clc
sbb
out
adc
cmp
cltd
std
movsl
in
push
dec
int3
cmp
rol
cmp
push
inc
pop
jg
xchg
push
enter
ss
add
insl
pop
push
lock
outsb
lock
xor
cmp
sahf
mov
pop
outsl
pop
xchg
loop
or
adc
ljmp
xchg
xor
lret
sbb
pop
mov
cmp
inc
outsb
xor
js
sbb
out
xchg
xor
xor
and
sarb
inc
pushf
imulb
shr
in
ret
fildll
arpl
clc
movl
nopl
inc
inc
ljmp
sbb
fimull
mov
push
dec
and
add
pop
pop
xor
jns
hlt
fistpll
sbb
int3
lea
push
cmpsl
lods
jg
adc
jnp
push
sub
aaa
es
sbb
push
push
in
mulb
hlt
inc
sbb
popa
sbb
js
arpl
in
dec
jo
ret
sbb
std
arpl
lahf
dec
push
je
int
rcrb
jmp
add
fwait
cmp
les
mov
cmp
dec
lea
adc
sbb
add
push
push
pop
jl
xchg
push
mov
jl
add
andl
push
gs
push
push
fisttpl
rcll
addl
subb
aas
loop
push
pop
pop
arpl
pop
inc
mov
rcrb
cs
pop
pop
divps
and
xor
int
push
push
jl
push
jle
add
rol
idivl
lahf
decl
fdivp
sti
dec
sahf
pop
sub
mov
stos
and
jecxz
iret
pusha
cmp
ss
xchg
mov
lcall
sub
inc
mov
or
test
sub
out
and
loop
test
mov
in
add
mov
jo
rcrl
inc
ret
lea
mov
push
mov
jl
shlb
mov
mov
jp
std
inc
cmp
fidivl
mov
or
outsb
adc
cmp
mov
pop
mov
and
pop
push
push
sbb
shlb
jg
mov
mov
sbb
push
mov
orl
dec
adc
push
out
pop
lret
imul
stos
or
or
mov
xor
das
pop
call
imul
inc
add
mov
adc
nop
ja
add
sub
jmp
adc
and
inc
inc
cwtl
inc
push
movsl
cld
mov
push
pop
or
xor
cmc
push
add
push
push
mov
data16
pop
mov
push
insb
fs
out
in
adc
mov
or
cmp
jp
pop
sub
es
jle
and
or
pop
pop
and
mov
push
inc
and
fmull
push
push
cmp
push
clc
xor
jnp
lock
xchg
push
cltd
pop
or
rclb
mov
movsb
insl
jae
adc
orl
sub
cmp
lret
sbb
push
cmpsl
rclb
fsubrs
jne
push
loopne
inc
insl
jne
mov
stos
pop
and
or
sub
or
push
inc
inc
icebp
inc
jns
and
add
xchg
xchg
cmp
push
pop
push
or
scas
ja
dec
jmp
adc
and
in
sub
sbb
andl
pop
inc
push
or
jo
addb
in
out
shlb
clc
add
jg
mov
and
push
mov
ss
jp
jmp
js
pop
inc
in
repnz
adc
adc
mov
mov
push
fisubrs
mov
inc
add
jne
push
push
adc
cmc
sbb
hlt
pop
lret
adc
adc
clc
push
cmp
fnstenv
adc
insb
add
inc
push
dec
loop
sbb
pop
sub
sub
popa
xchg
inc
adc
jl
push
and
pop
xchg
and
push
iret
test
push
inc
sub
test
push
jns
sbb
jmp
cmp
fldl
jno
inc
and
dec
push
and
mov
sti
and
cmp
add
lret
xor
xor
js
aam
cmp
or
or
sub
les
mov
dec
pop
xor
xchg
adc
addr16
icebp
cmpb
push
cmpsl
cmp
sub
push
sbb
nop
cmp
popf
nop
mov
fstpt
push
mov
mov
or
jp,pn
mov
or
jg
sbb
enter
pop
sub
mov
xor
fcoms
iret
dec
xor
sbbb
inc
insb
xor
clc
sbb
into
xor
add
sub
iret
xor
loope
sarb
adc
popf
mov
cld
sbb
add
and
push
mov
push
subb
push
es
jne
cmpsl
aaa
push
sbb
adc
inc
sbb
xchg
test
mov
push
push
push
xor
dec
fisubrs
xchg
fisubl
lcall
daa
adc
jle
notl
int
xor
xchg
push
ret
add
add
ret
push
enter
push
or
movntps
sar
push
mov
dec
mov
mov
pop
ja
jmp
inc
cli
cmp
xor
push
add
mov
pop
sub
mov
or
or
push
pop
lret
andb
pop
jb
nop
pop
pop
xor
cmp
scas
loope
pop
push
cmpl
xchg
in
stos
movsb
lret
adc
mov
and
push
leave
adc
shrl
push
syscall
mov
fdivl
mov
mov
ret
mov
mov
sbb
insb
sub
cmp
insl
stc
imul
sbb
inc
scas
sbb
mov
sqrtps
dec
cmp
ret
clc
testb
pushf
sub
in
inc
xor
clc
or
cmpl
sbbl
dec
mov
sbb
mov
imul
dec
xor
aas
push
push
pop
and
or
inc
or
adcb
mov
add
fadds
push
adc
inc
pop
lahf
cmp
and
fldenv
in
sbb
add
ljmp
mov
or
jecxz
cmp
dec
or
or
sbb
jle
mov
xchg
jne
ja
pop
and
adc
aaa
push
andb
adc
lods
adc
mov
push
int
push
jecxz
sub
int
inc
inc
mov
repnz
nop
push
xor
pop
sbb
xor
movsb
leave
and
shll
imul
push
das
pusha
add
mov
jmp
cmp
jg
inc
je
xor
imul
les
mov
push
out
pusha
or
xor
inc
add
push
int
dec
shlb
adc
scas
mov
mov
iret
aam
and
pop
jbe
pusha
xchg
cmp
sub
pop
pop
faddp
add
cmpsl
add
dec
inc
insl
je
imul
xor
cmp
clc
cmp
mov
cld
xor
fadds
xchg
pop
jbe
xor
add
mov
push
cmp
rorb
push
fists
fcom
sub
and
fsubrl
sbb
rolb
rclb
xchg
mov
fs
push
mov
mov
or
lahf
or
das
and
shlb
mov
mov
pop
jb
inc
cli
push
or
loope
adc
negl
js
jle
loope
fiadds
popa
sub
push
xchg
orl
mov
sbb
adc
xchg
ret
pop
hlt
or
adc
nop
rcrb
mov
push
push
inc
sub
movsb
in
xor
popa
cld
in
or
or
add
sub
xchg
add
jge
xor
add
jnp
jmp
js,pn
pop
ljmp
insb
pop
cmp
xor
mov
lds
mov
adc
loope
inc
js
push
jb
imul
push
push
fisttpll
cmp
and
mov
adc
scas
push
xchg
pusha
mov
or
or
or
hlt
push
ret
sbb
insb
and
sbb
inc
loopne
fdivs
loopne
push
xor
repnz
andl
xchg
sbbb
scas
sarl
fldl
fs
in
sarl
movzwl
inc
push
imul
jb
test
rcr
sarl
cltd
mov
xchg
lock
push
push
sub
stc
mov
pop
and
adc
and
dec
add
or
and
out
das
mov
dec
ficoms
cmp
repnz
adc
pop
adc
push
rorb
pop
and
cmp
fs
sahf
and
jp
pop
ret
cs
lock
mov
ror
add
icebp
and
adc
mov
cmpsl
sahf
loopne
std
jne
inc
cmp
aam
imul
loopne
and
xor
mov
push
jmp
and
xor
xchg
jns
adc
add
and
dec
mov
mov
push
lea
sarb
rcrb
sbbb
sub
pop
ret
lds
adc
xor
repz
cmpsb
push
rorb
xor
fidivrl
jmp
lea
insl
mov
popa
jb
jb
call
push
mov
rol
add
loope
jge
xorl
loopne
push
into
xchg
inc
sub
or
insb
test
repnz
xchg
aad
jge
sub
or
lcall
sti
pusha
pusha
or
icebp
mov
xor
dec
call
das
ds
ja
push
sub
add
push
jl
adc
add
mov
sub
sbb
js
mov
je
inc
add
clc
test
and
mov
adc
push
push
sti
inc
add
test
push
arpl
dec
mov
jo
mov
and
xor
shll
add
dec
sbb
les
mov
in
mov
out
xchg
adc
dec
xchg
push
xor
mov
movsl
and
adc
jns
and
or
inc
stos
and
sbb
sub
aam
xlat
mov
inc
cmpsl
pop
imul
sbb
cmp
adc
je
mov
ljmp
jno
inc
adc
and
cwtl
adc
mov
jb
mov
sbb
jmp
xchg
shlb
pop
mov
and
cltd
and
seta
mov
xor
xor
aas
cmp
inc
into
pop
cmp
inc
pop
inc
or
insb
pop
out
xchg
add
testl
mov
or
fdivr
inc
or
or
fdiv
idivb
movzbl
push
mov
shr
adc
xor
fcmovne
push
push
rcll
push
les
xchg
daa
imul
mov
sbb
inc
cmp
leave
jne
lds
leave
xchg
pop
jl
outsl
and
cmp
adc
sbb
cltd
mov
mov
inc
xchg
mov
out
push
pop
push
test
nop
clc
sub
sbb
jo
mov
aas
fwait
mov
in
dec
into
test
inc
sbb
sub
mov
dec
cmpsb
dec
xchg
xchg
inc
popa
in
mov
inc
xchg
pop
bound
push
push
or
pop
fisttps
movb
pop
cli
xchg
pop
dec
out
mov
movsb
iret
mov
nop
scas
sahf
sub
push
push
push
sbbl
xor
pop
dec
and
push
enter
add
fidivs
sbb
popa
push
adc
in
lock
icebp
lds
push
cmp
lds
dec
push
sbbl
ja
ja
cs
rcr
adc
or
lret
ds
arpl
stc
dec
mov
mov
loop
cmp
or
test
dec
mov
push
jno
fistpl
adc
push
call
insb
jge
cmp
jne
push
in
pop
adc
push
inc
push
popf
cmc
ret
addr16
inc
jmp
daa
jmp
bound
inc
or
pop
cmp
popa
int
incl
and
inc
cld
lea
je
out
sbb
aas
pop
mov
movl
push
outsb
pop
inc
out
mov
mov
faddl
pushf
addb
jo
push
add
push
test
and
sbb
arpl
dec
pop
rorb
mov
inc
cmp
scas
xor
inc
cmp
and
push
sub
fisttpl
adc
call
popf
jg
or
enter
pop
xchg
xchg
mov
adc
xor
sarl
jg
mov
mov
popf
incb
sub
data16
push
aad
mov
mov
jl
jno
sbb
push
mov
ljmp
pop
xchg
fiaddl
cwtl
aaa
push
add
shll
daa
and
fsub
push
sbb
scas
mov
push
cs
push
call
adc
je
lret
jne
mov
and
fdivrp
xchg
push
ficoms
mov
repz
push
lea
bound
add
pop
mov
add
add
mov
add
negb
fs
push
cltd
inc
ds
dec
lahf
adc
and
mov
bnd
and
inc
dec
cmp
cmp
jl
cmpsl
aaa
jae
dec
and
inc
cmp
clc
mov
mov
test
add
or
jge
adc
movsb
add
sub
and
pop
mov
aas
out
push
ljmp
and
das
add
jne
popf
and
mov
cmpb
shr
andl
sub
cmpsb
jo
sbb
add
cmp
es
xor
push
or
jns
push
addr16
hlt
ret
sbb
mov
lret
imul
mov
hlt
stos
xor
jb
ret
jg
outsb
cmpb
jne
inc
inc
xor
mov
inc
or
jp
sub
cmpsb
and
adc
or
sbb
cwtl
and
and
outsl
or
sbb
popf
xor
dec
jge
push
test
in
ss
test
push
xorl
push
pmullw
jmp
sbb
jb
dec
xor
fbld
xor
xor
push
pushf
dec
lea
jbe
scas
push
cltd
mov
cmp
sbb
and
dec
ja
outsb
push
dec
imull
mov
shll
ljmp
push
add
xlat
inc
or
pop
bound
add
xchg
cmpsl
or
popa
nop
pop
add
outsb
and
add
fwait
js
pop
xor
aas
fidivrs
pop
and
sub
dec
pushf
test
xchg
cld
mov
out
push
lea
out
andb
or
fdivs
pop
mov
xor
mov
lods
or
and
jmp
shrb
xor
xchg
mov
scas
movsb
out
xor
add
xor
imul
mov
shlb
incb
xor
mov
xchg
sub
or
mov
sub
cwtl
push
dec
sbb
mov
inc
mov
push
scas
push
push
arpl
and
insb
in
das
inc
push
pop
add
lret
adc
and
inc
mov
push
xor
lods
mov
pushf
mov
cltd
pusha
test
pop
push
movsl
or
mov
or
test
xor
push
bound
lea
push
inc
dec
cmpsb
sub
sub
adc
or
scas
clc
add
push
push
lea
sbb
mov
sub
jmp
hlt
adc
xor
push
daa
mov
mov
les
push
cmp
mov
movsl
xor
pop
mov
in
gs
push
shrb
xchg
clc
xchg
sub
dec
dec
adc
leave
or
push
lock
loop
pop
or
inc
iret
cmp
jne
adc
add
repz
mov
jmp
nop
bound
sar
test
repz
mov
push
mov
nop
lods
bnd
repz
into
addsubps
mov
adc
js
aas
pop
mov
fstpt
or
cmp
push
shll
loopne
sbb
mov
inc
adc
cmpl
adc
and
roll
cltd
out
pop
push
adc
adc
push
push
movsb
and
sbb
dec
and
and
arpl
and
loopne
rorb
xchg
or
loop
and
mov
aaa
mov
xor
xchg
cmp
pop
mov
dec
imul
or
inc
cmp
mov
popl
out
xchg
fstl
jmp
rorb
es
sub
adc
sub
data16
inc
mov
pop
dec
jnp
pop
movsl
data16
cmova
dec
mov
push
push
dec
movsb
adc
xor
mov
dec
hlt
test
insb
add
xchg
scas
mov
mov
inc
add
and
or
lea
push
iret
push
and
lds
mov
sbb
push
fmulp
add
cmp
push
adc
cmp
in
or
push
add
int
inc
sbb
push
sbb
and
mov
adc
adc
adc
lea
inc
sbb
fwait
sbb
pop
hlt
push
sub
xor
sub
and
sub
pop
cmpsl
sub
hlt
or
add
sbb
fs
lahf
and
and
sbb
cltd
add
sbb
add
mov
jno
and
cmc
and
pop
xchg
mov
pushf
inc
cmp
push
jbe
dec
leave
pushf
test
test
inc
dec
xchg
or
xchg
cmpsb
test
aad
and
and
pop
cld
push
inc
push
dec
inc
push
aaa
and
aaa
dec
loope
jo
cmp
pop
decl
mov
sbb
xchg
mov
movups
dec
push
pop
cmp
inc
push
add
mov
ret
push
push
in
push
xor
mov
repnz
jns
movsb
imul
subl
and
loope
inc
mov
ficoml
pop
js
jne
ss
xchg
pop
add
cmp
pop
pop
ret
push
lret
outsl
ret
and
xor
push
jbe
lcall
and
or
add
adc
inc
cmp
fistl
fisttpll
cltd
mov
ljmp
push
push
add
das
lods
les
or
adc
mov
rcrb
fwait
in
daa
xor
add
and
mov
cltd
mov
lret
add
pushf
rcrb
pop
in
sbb
push
mov
pop
or
call
sbb
xchg
popl
add
or
std
gs
adc
jnp
mov
add
mov
sub
sbb
inc
jmp
fmuls
ret
rol
mov
add
and
cmp
xchg
lock
push
enter
mov
lods
xchg
sbb
inc
pop
cmc
push
call
test
push
mov
xchg
push
lods
adc
push
add
or
or
jl
aad
cmp
mov
inc
scas
stos
aam
insl
cmp
dec
mov
push
fcoms
xchg
and
jnp
in
dec
lods
dec
xlat
jge
pop
or
leave
jge
inc
jo
sahf
inc
loopne
xor
xchg
sbb
bound
adc
loope
fsubs
xchg
in
push
aam
and
cmp
adc
add
outsl
push
daa
pop
jmp
inc
sbb
ret
push
inc
int3
cmp
or
or
enter
imul
nop
popa
adc
sbb
mov
mov
push
xor
fnstcw
test
push
inc
orb
mov
dec
pusha
mov
lods
in
and
and
rclb
inc
inc
mov
adc
in
scas
adc
sub
fst
sbb
ret
xor
adc
cmp
add
orl
or
testb
xor
cmp
test
adc
fisubs
or
outsb
jno
pop
aad
sub
leave
adc
and
push
test
sbb
mov
cmp
je
cwtl
adc
sbb
xchg
lret
add
mov
into
mov
dec
push
push
test
jno
addl
pop
sbb
pop
mov
xchg
add
lea
fnstenv
cmp
jne
cmp
aaa
and
sbb
pop
cli
add
or
shlb
sub
mov
inc
add
imul
push
or
sub
cmp
mov
and
xchg
mov
sub
push
aaa
lock
mov
add
test
mov
push
mov
in
mov
mov
shlb
xchg
inc
add
sbb
adc
or
cmp
jl
jmp
rorb
jge
push
loopne
iret
fptan
cmp
mov
lcall
and
arpl
sbb
inc
add
lahf
stos
js
and
cmp
sbb
add
clc
pop
pop
lods
and
or
add
add
incb
rep
jae
add
cmpsl
sbb
add
fstpt
xchg
shll
inc
imul
cmc
test
push
data16
sbb
das
mov
mov
cmp
or
test
or
dec
pop
lds
cmc
out
mov
loope
jne
mov
add
inc
jne
or
fcoms
outsb
cmp
mov
mov
and
sbb
cmp
inc
and
subb
in
in
popf
xor
add
sbb
lods
mov
pop
shlb
mov
jge
or
push
or
add
and
lcall
xor
mov
ret
call
and
pop
jb
in
divl
loopne
fildl
fnstsw
mov
jmp
inc
adc
or
scas
mov
clc
add
ret
jle
cmpsb
lock
push
and
mov
inc
cmp
push
push
inc
adc
or
mov
lods
xor
add
mov
xor
add
mov
lret
sbb
inc
add
pusha
shll
inc
fs
mov
push
add
shll
sub
cmp
push
pop
mov
mov
cmp
xor
xchg
ret
aam
adc
adc
mov
test
push
shl
mov
cs
dec
sbb
mov
sub
cltd
dec
sub
xor
and
adc
scas
jl
mov
push
adc
mov
jl
adc
cmp
mov
pop
xor
imul
shrb
or
vmovaps
push
jl
cs
inc
data16
loope
fwait
add
mov
cmp
push
and
mov
stos
adc
xchg
and
mov
mov
push
jnp
add
add
xor
ret
pop
and
add
sbb
pop
sbb
adcb
jno
pushf
push
mov
mov
ficomps
mov
push
mov
sbb
popl
and
xor
add
adc
inc
or
shlb
cli
stc
jae
add
cmp
jae
sbb
cmp
rdmsr
mov
sub
cmp
sub
push
cmpsl
test
hlt
adc
inc
inc
ljmp
test
out
sti
dec
call
pop
ret
add
push
xor
cmp
fbstp
fstpt
outsb
add
das
dec
pop
incl
fstl
or
or
pop
add
aad
cs
sbbb
mov
pop
mov
mov
mov
sub
jmp
jae
and
adc
push
movb
xor
mov
push
testb
in
mov
inc
xor
mov
sbb
or
or
or
outsl
cld
mov
mov
fldenv
adc
stos
xchg
mov
mov
add
and
xor
and
sbb
mov
inc
sub
add
lret
insl
dec
dec
or
shll
dec
pop
xor
cs
mov
xchg
add
mov
xorl
adc
loop
int
loop
sbb
add
adc
aad
add
push
sub
cmp
mov
sub
mov
add
and
adc
mov
icebp
mov
jbe
pop
sahf
mov
sub
inc
pop
or
dec
or
or
inc
push
mov
aas
push
icebp
jns
popa
push
push
dec
or
mov
ss
clc
push
cmp
shlb
mov
or
dec
or
test
lods
cli
mov
js
je
inc
mov
adc
inc
loopne
push
jecxz
mov
ror
add
mov
adc
cmp
and
imul
xchg
pop
or
add
test
daa
outsb
in
lcall
sub
icebp
add
push
pop
pop
push
movsb
xchg
pushf
xlat
jo
sub
rcrl
gs
mov
sbb
and
cmp
sub
loop
lock
je
xchg
ss
inc
fdivrs
sub
mov
inc
hlt
adc
jmp
lds
pop
sub
adc
adc
jg
arpl
ss
and
arpl
sub
mov
inc
test
movsb
es
cwtl
push
sub
jae
mov
adc
mov
jle
push
xchg
nop
ret
inc
push
pop
out
fcoml
adc
dec
add
adc
mov
pusha
or
mov
mov
or
dec
inc
sub
push
mov
add
push
push
push
push
mov
mov
rcr
mov
sbb
int
lea
sahf
iret
inc
or
and
mov
push
inc
shlb
push
nop
inc
sub
mov
push
adc
push
adc
or
cmp
rcl
mov
mov
pusha
leave
imul
xor
es
xor
enter
push
dec
inc
sbb
fdivrl
or
lods
arpl
dec
ficoms
sbb
push
sub
add
stos
in
add
add
in
dec
add
outsb
add
inc
cmp
orb
xor
or
push
aaa
mov
mov
sbb
lahf
and
mov
mov
adc
push
push
add
lcall
xor
test
add
add
dec
add
sbb
inc
sub
lret
pop
sub
xor
or
xchg
add
cmp
add
inc
sub
inc
or
push
push
dec
mov
push
push
adc
insb
push
ss
cmp
lea
pop
mov
rorb
pushf
sti
xchg
xor
enter
int3
shlb
and
loopne
mov
add
dec
mov
or
fsubl
fimuls
and
fsubrs
push
movl
mov
pop
mov
nop
pop
xor
mov
adc
test
pop
cmp
pop
add
dec
adc
nop
in
add
pop
ret
mov
popa
pusha
lea
jl
sbb
add
jge
mov
lcall
xor
pop
rclb
xchg
xor
dec
int3
adc
jae
les
inc
hlt
rorl
sbb
aas
inc
nop
pop
pop
lods
lea
setne
push
adc
add
cmovbe
sbb
dec
movsb
sbb
or
dec
lcall
mov
lcall
sub
movsb
sbb
and
sbb
add
dec
lcall
mov
add
dec
dec
pop
dec
mov
sub
mov
cs
and
pop
in
cld
add
add
add
dec
ror
push
in
insb
pusha
roll
daa
std
sub
pushl
mov
push
mov
jmp
rcrl
jmp
and
mov
mulb
adc
pop
jne
sbb
xor
fucomi
sbbb
dec
std
inc
or
orl
loope
or
adc
movsb
cmc
sub
push
adc
stc
xchg
int
mov
push
adc
mov
mov
adc
sbb
mov
mov
push
cmp
mov
fsubrl
fs
adc
mov
mov
xor
stc
push
push
cmpsl
je
dec
loope
shll
add
xchg
in
or
int3
inc
inc
add
push
or
and
xor
loope
adc
jno
std
sub
or
pop
or
sbb
sbb
pusha
sub
and
popl
mov
jo
jmp
push
xchg
sub
adc
xor
pop
sub
ja
pop
mov
push
roll
sbb
adc
sbb
jns
inc
push
cmp
dec
pop
mov
or
push
add
adc
aam
cmp
jmp
bound
push
aam
popf
pop
jb
push
or
es
mov
lods
or
and
xchg
inc
sub
jmp
mov
test
cmp
push
mov
mov
xchg
dec
imulb
or
in
cld
sbb
out
stos
and
cmp
cmp
and
lock
mov
xor
sbb
xchg
push
loopne
cmp
push
adc
sbb
add
leave
adc
mov
loopne
in
adc
test
sub
test
adc
pop
xchg
push
sub
add
add
mov
push
push
lahf
push
test
mov
pop
dec
cld
cmc
sahf
push
mov
push
leave
adc
adc
inc
leave
add
shrb
je
sub
lcall
aam
add
sbb
mov
clc
add
or
or
aaa
orl
addl
add
imul
lret
hlt
xor
adc
push
push
and
cld
cmp
aam
inc
xchg
scas
xchg
sub
stc
clc
test
xchg
add
ret
les
movsl
xchg
lock
test
or
imul
daa
or
nop
push
ja
test
add
push
movl
pop
mov
in
fs
rcrb
incb
push
or
insb
enter
imulb
test
outsb
inc
mov
mov
jo
mov
mov
movsb
jg
and
and
jl
cld
add
mov
loop
lock
jno
or
fneni(8087
push
push
inc
fadds
mov
dec
in
xchg
fcoml
inc
loop
js
adc
jns
cwtl
push
xor
cmp
fsub
mov
cmp
cmp
adc
push
loopne
push
cwtl
or
mov
loopne
mov
xchg
dec
dec
out
dec
in
push
jmp
sub
js
pop
inc
pop
out
shr
lods
and
cmpsl
shr
mov
cmp
icebp
push
call
lea
add
test
mov
cmp
jnp
sub
sub
inc
sarb
adc
andl
test
pop
call
out
fmul
adc
stos
rorl
add
popa
je
jle
push
movsl
outsb
inc
cmp
or
push
mov
inc
and
int3
inc
iret
out
pop
mov
push
lea
popa
addr16
out
push
sbbb
pop
push
cmpb
lock
jne
push
ficompl
mov
dec
insb
iret
pusha
mov
or
or
aaa
lea
dec
jo
call
cmp
jl
adc
jmp
lea
and
dec
push
inc
pop
in
push
enter
push
orb
dec
mov
js
mov
push
shl
pop
jmp
inc
insb
mov
xchg
sbb
loopne
dec
xchg
sbb
jge
jae
push
and
adcb
mov
push
dec
adc
jg
subb
test
dec
pop
inc
adc
push
push
cltd
fmuls
div
fisttpll
mov
lock
popf
popa
stos
test
rclb
adc
ljmp
push
cmp
es
addl
sub
or
add
and
add
jo
push
sbb
sbb
mov
inc
sbb
and
in
jp
cmp
adc
jo
sbbb
popf
mul
add
mov
rorl
sub
mov
jmp
mov
xchg
cmp
dec
or
or
inc
mov
mov
in
and
sub
sub
mov
inc
cmp
add
jno
mov
dec
sub
sub
and
insb
sub
adc
ret
jno
orl
mov
or
xchg
dec
adc
pop
pop
inc
adc
pop
adc
les
test
shlb
icebp
xchg
sahf
mov
mov
cmp
test
mov
frstor
xchg
sub
cli
inc
test
ja
pop
mov
incb
fwait
pop
sbb
pop
mov
mov
xor
cmp
add
jo
imul
xor
leave
push
adc
insb
and
cld
jo
adc
push
jb
shlb
ss
insl
push
sbb
iret
add
dec
push
mov
movsb
or
or
js
adc
push
cmp
loope
push
popa
ss
lahf
fistpll
mov
cmpl
sbb
inc
sub
jnp
push
mov
in
add
mov
movsw
les
add
xor
dec
sbb
subb
int
pop
es
xchg
or
pusha
sbb
dec
sbb
push
lahf
and
daa
popf
and
pop
dec
xor
sbb
and
pop
sbb
push
add
cmp
pop
add
xor
clc
push
fcmovnb
push
loope
add
xchg
cmp
or
mov
mov
sbb
mov
adc
push
sbb
fwait
mov
xor
fistpll
fs
xlat
push
dec
es
lret
out
sub
sbb
pusha
nop
addr16
es
nop
add
pop
jb
pusha
sti
add
push
jns
and
jge
pop
andl
push
cltd
fs
mov
add
lds
dec
pop
cmpsb
cmp
sbb
shlb
cmp
push
lods
notb
lea
or
dec
mov
add
jecxz
pop
dec
lahf
xor
dec
mov
or
dec
jmp
and
cmp
and
ret
lods
inc
add
xlat
push
imul
adc
sub
xor
push
aad
dec
cs
test
push
repz
dec
lret
cmp
mov
cs
ret
push
stos
dec
add
rsqrtps
lock
cmp
or
sub
xor
adc
mov
aas
mov
adc
adc
xor
in
adc
clc
jl
mov
lock
aam
xchg
xchg
xor
popf
movsl
movsl
nop
fisubl
dec
jne
cld
inc
nop
xor
and
mov
or
icebp
inc
sahf
push
fwait
adc
test
push
call
mov
push
mov
sbb
pop
test
add
push
push
mov
addb
sub
pop
pop
addl
adc
add
pop
lods
and
or
lret
ljmp
xor
shrl
push
addb
or
adc
push
orl
xor
jl
push
nop
das
in
adc
js
je
or
adc
loopne
jns
ljmp
es
pop
push
ret
adc
xor
xor
sub
cmp
nop
aaa
xchg
xor
push
mov
push
cmp
sub
mov
test
mul
push
and
mov
mov
cmp
xor
xchg
shlb
fcomps
dec
je
cwtl
js
cmp
adc
adc
mov
inc
pushf
sub
mov
push
and
inc
adc
sbb
cmpb
add
adc
es
cs
jo
cmp
imul
sub
add
lea
xlat
dec
nop
add
add
clc
mov
push
mov
push
add
incl
inc
push
fs
push
addb
imul
mov
popf
je
ret
out
nop
adc
pop
push
sub
lahf
ss
nop
ficomps
pusha
push
push
popa
and
add
dec
scas
rorb
push
popa
inc
xchg
popf
push
lea
mov
add
sbb
cmp
sub
mov
aas
cmp
sbb
fwait
jp
mulb
sub
incl
test
jne
inc
and
cmp
pop
adc
mov
ljmp
pop
sub
shll
andl
dec
and
push
and
adc
fcompl
add
fadd
push
adc
mov
dec
xchg
aad
add
cmc
add
pusha
adc
cld
imul
xchg
pop
add
inc
popf
mov
cwtl
lea
mov
andb
jo
and
dec
or
aam
inc
loop
inc
leave
inc
lock
mov
xor
insb
loop
mov
dec
es
movb
sub
push
jp
incb
xchg
movsl
movsl
mov
sbb
or
mov
imul
sbbl
sub
inc
cmp
sbb
pusha
cli
cs
je
or
mov
mov
inc
dec
les
rclb
je
popa
sbbl
pusha
daa
and
dec
sub
fwait
mov
and
add
hlt
jl
stos
orb
fdivrl
subl
orl
mov
in
jb
lods
sub
jae
aam
int3
xorb
aam
jo,pn
pop
push
sub
adc
cs
cmp
xor
mov
and
pop
sbb
mov
xchg
push
out
pop
and
movsb
add
inc
subl
xor
pop
je
lret
incb
jle
cmp
jg
dec
repz
pop
fisttps
jl
inc
dec
repnz
addl
inc
cs
lret
push
adc
and
jb
add
scas
and
add
nop
sbb
xchg
out
nop
sbb
xchg
dec
xchg
add
lock
pop
sbb
jb
adc
insb
fs
jb
add
inc
repnz
sbb
insb
sbb
mov
inc
addl
sbb
das
mov
inc
lcall
adc
pop
sbb
lods
mov
cwtl
hlt
cmp
cmp
test
or
adc
insb
xor
jno
jecxz
and
mov
enter
mov
or
stos
pop
push
dec
push
mov
xchg
and
and
sysenter
enter
jl
dec
mov
xlat
cmp
shll
jns
adc
fildll
sub
adc
cmp
mov
clc
sbb
adc
bound
xor
adc
add
inc
cmpsl
pop
mov
jl
xchg
xlat
add
xchg
adc
sub
mov
mov
xchg
js
xchg
mov
je
loop
cmc
loop
mov
push
and
dec
add
repnz
mov
shrb
push
cs
mov
push
pushf
push
cmp
pop
movsb
lret
push
push
sub
pop
push
or
jp
inc
mov
pop
push
push
mov
pop
xor
mov
cs
mov
out
dec
or
sub
jmp
sbb
pop
mov
pop
add
sbb
adc
sub
xor
cltd
nop
dec
jbe
cmp
dec
pop
movsb
inc
and
xchg
stos
and
fistpl
cmp
push
test
add
pop
or
loope
shll
jmp
pusha
test
xor
mov
arpl
movsb
or
test
inc
add
mov
xchg
mov
mov
pop
and
cld
in
ret
das
add
pop
add
add
hlt
add
ljmp
dec
sub
nop
add
hlt
aad
mov
insb
mov
mov
dec
cld
adc
inc
and
push
test
xor
sub
and
jne
cs
jl
cmp
cs
or
sbb
or
jb
push
mov
add
gs
adc
cmpl
adc
testl
std
fbld
test
and
or
pop
gs
or
mov
gs
xor
inc
lock
test
mov
enter
inc
add
repz
imul
test
mov
or
mov
mov
cmp
test
cmp
pop
jge
repnz
inc
add
mov
mov
add
mov
push
ret
pushf
mov
xor
jp
jb
jae
jne
inc
mov
cli
xor
insl
and
cmp
add
and
decb
mov
mov
push
push
test
std
pop
mov
dec
orl
or
sbb
push
cwtl
cmp
nop
sub
xchg
adc
sub
fimull
push
test
push
push
jne
aam
pop
pop
cmpsb
xchg
sub
jecxz
test
in
add
inc
and
and
pop
mov
inc
mov
inc
push
xor
cmp
pusha
cmp
or
cmp
aam
movzbl
adc
or
or
inc
dec
arpl
cmp
js
pop
or
pop
push
and
fs
nop
lret
repz
pusha
cmp
xor
dec
dec
and
or
push
pop
mov
or
push
lods
scas
add
shll
fcoms
loope
in
ss
inc
leave
into
inc
loope
add
into
xchg
xor
shrb
mov
sub
mov
add
andb
arpl
roll
nop
imul
sbb
push
in
and
call
or
neg
insl
loop
mov
int3
les
jge
xor
inc
sbb
sub
pop
aad
push
mov
jmp
out
dec
stos
add
add
test
pusha
cmp
daa
sub
ds
icebp
cmp
je
cs
mov
stc
push
push
leave
pop
icebp
xor
jmp
inc
lods
and
lret
movntq
or
dec
fisttps
mov
adc
out
aad
xchg
scas
jb
xor
adc
dec
add
test
jg
jg
cli
lods
mov
bound
sub
cmp
jecxz
mov
pop
out
xlat
sbb
and
lock
popa
jl
sbbb
push
xchg
adc
cmp
inc
pop
dec
xchg
es
sbb
dec
push
and
mov
les
and
lock
push
cmp
pop
js
adc
pop
pop
icebp
jbe
and
mov
xor
push
stos
inc
add
xor
cs
repnz
push
call
je
push
jnp
push
sbb
lret
jg
insb
movsl
ja
push
jnp
push
pop
imul
sub
daa
sbb
adc
in
sbb
jne
lock
sub
lcall
adc
add
sbb
inc
ret
jmp
inc
dec
mov
cmp
adc
sbb
inc
push
push
sbb
and
xchg
push
ret
addl
push
leave
outsl
adc
and
adc
and
dec
mov
jbe
mov
gs
mov
add
push
ljmp
sbb
xchg
and
inc
or
jp
push
in
xorb
cs
adc
jns
test
jmp
cmp
jnp
adc
adc
test
xor
fwait
xchg
push
leave
push
inc
push
jns
mov
adc
sub
and
cmp
inc
dec
inc
sbb
cltd
inc
insl
adc
add
enter
movb
fucomi
xor
outsl
push
dec
and
mov
jne
fcmovb
mov
mov
add
or
push
daa
mov
push
dec
adcl
jge
ret
loopne
adc
sarl
insl
push
fcoml
sbb
xchg
xor
mov
push
cmp
xor
add
cmp
cmc
scas
fisttpl
sbb
mov
jle
mov
test
mov
adc
cmpb
mov
call
lret
mov
mov
mov
ficompl
mov
mov
pop
call
push
xor
ss
adc
inc
lods
mov
mov
or
xor
push
je
popa
push
pop
xchg
adc
popl
pop
in
dec
cmpsb
mov
pop
push
cmp
les
add
aaa
and
mov
push
aaa
sub
dec
cmp
jae
xchg
cmp
mov
ja
icebp
scas
or
push
clc
mov
jns
mov
test
test
into
or
jne
jo
flds
pop
push
or
in
add
jmp
fiaddl
cmpb
push
call
and
ret
test
or
add
and
clc
inc
push
pop
cmp
add
iret
adcb
inc
mov
push
popf
mov
jbe
xchg
pop
jnp
sub
jns
cs
test
adc
pop
cs
adc
test
fisubrl
stos
fbstp
add
pop
or
mov
ret
in
xchg
fiadds
mov
loopne
lea
ljmp
cmp
es
jle
test
jae
sub
adc
ss
push
cli
sub
outsb
test
cmp
clc
xor
int3
out
jge
movzbl
sub
clc
subl
shlb
mov
mov
popa
sbb
adc
nop
mov
push
sub
pop
aaa
jmp
pop
push
shr
test
ret
cmp
je
sub
ds
add
dec
int
loopne
pop
mov
push
mov
mov
mov
push
pop
adcb
cmpsb
inc
xchg
sub
xchg
ds
jbe
sub
repz
lcall
arpl
or
add
xchg
loope
cmp
call
aam
push
or
push
add
lcall
imul
mov
dec
adc
add
pop
push
cmp
mov
mov
out
inc
inc
sub
mov
sbb
cmp
aas
inc
andb
cmp
sbb
inc
shrb
xor
mov
fs
inc
and
pop
hlt
jle
push
adc
add
sbb
pop
repnz
adc
test
pop
aas
lret
inc
add
imul
cmovl
cmp
ret
aas
ja
andl
js
lcall
jae
cmp
sbb
js
std
outsb
add
push
sub
movl
push
push
mov
and
add
rcrb
add
rorl
pop
test
mov
xor
adc
and
dec
or
flds
sub
add
or
sarl
inc
inc
lea
pop
daa
movsb
pop
jno
add
fwait
cmpsb
imul
mov
inc
jns
dec
sub
or
xor
mov
lea
out
pop
sbb
popa
fwait
sbb
mov
js
inc
ljmp
or
cmp
xchg
test
inc
lods
push
cmp
dec
xor
adc
push
insb
stos
adc
and
sbb
mov
add
inc
outsb
sahf
lock
cmp
nop
pop
inc
inc
add
subl
push
arpl
movsb
fcoms
inc
dec
ljmp
or
sub
push
lahf
aam
pop
dec
out
or
adc
pop
mov
or
jl
sbb
js
rorb
or
and
push
pop
insb
cmp
push
dec
fs
ret
push
inc
and
dec
pop
add
in
dec
push
or
xchg
sub
add
pusha
adc
mov
mov
and
mov
pushf
jmp
add
mov
int
adc
cmp
imul
cltd
nop
fwait
sub
inc
sub
insl
or
mov
add
adc
add
or
dec
cmp
add
scas
les
das
std
wrmsr
cmp
jne
cmp
cmp
cmp
or
inc
and
dec
mov
outsb
mov
and
and
add
jmp
daa
mov
inc
xchg
mov
divb
xor
dec
and
mov
fwait
push
divps
sahf
fstps
and
in
mov
mov
cmp
jnp
push
mov
add
mov
rcrb
enter
int
es
mov
lea
and
leave
xchg
aad
sbbb
std
jb
jle
or
pop
adc
jns
adc
mov
lods
cmp
sbb
es
stc
dec
or
adc
push
add
lea
mov
push
cmp
cli
sub
nop
repnz
sarl
test
push
add
xor
dec
xchg
lret
xchg
adcb
push
cmp
jle
push
xor
pop
mov
add
xchg
or
or
pusha
cmp
sbbb
push
lahf
push
jno
and
dec
pop
jne
hlt
aad
pusha
cmp
push
and
cmp
push
lods
lret
nop
sub
adc
in
notl
mov
test
cmp
ljmp
xorl
sub
popa
stos
adc
movsb
jb
fstpt
mov
dec
add
dec
outsl
jo
sub
dec
add
ret
adc
test
mov
adc
inc
add
mov
leave
inc
cmp
imul
jg
enter
js
xchg
jp
jne
xchg
mov
pop
push
jns,pt
xchg
pop
inc
cmp
mov
test
pop
sub
adc
mov
mov
aam
cmp
std
xor
adc
push
mov
orb
push
or
sbb
adc
pop
jge
dec
loopne
add
repnz
je
pop
ret
pusha
mov
add
push
add
push
pushf
push
cmp
popf
rcr
insb
xor
sub
je
push
jne
lea
xor
xchg
insb
add
push
add
add
inc
fs
rorb
push
sbb
rolb
mov
pop
sbb
shrb
mov
outsb
sbb
mov
insb
cmpl
push
push
js
mov
xchg
test
sbb
mov
stos
add
push
or
mov
pop
dec
mov
movsl
test
mov
jo
ds
pop
pop
pop
lds
jle
add
jns
clc
ficoms
pop
and
int
jne
sbb
pop
add
sbb
adc
lcall
mov
in
pushf
jne
pop
inc
and
jno
cmp
loopne
daa
push
mov
sub
data16
and
mov
call
add
addl
cmp
pop
popa
dec
fs
fneni(8087
mov
xor
mov
sbb
pop
dec
cwtl
mov
push
cmpsl
lret
stc
decl
jno
sub
sub
ds
lcall
test
mov
rcrl
inc
outsl
mov
cmp
push
aaa
mov
add
adc
imul
popa
push
es
mov
pop
int3
inc
mov
roll
mov
sub
jno
rclb
sbb
push
pop
xorl
mov
jne
pop
adc
pusha
ficoms
int3
rcll
dec
shll
punpckhwd
test
ljmp
sub
inc
lcall
mov
xchg
adc
test
pop
hlt
jo
inc
repnz
jo
mov
add
pusha
sbb
push
es
or
loope
mov
enter
fcom
or
popf
push
cs
clc
adc
scas
test
mov
or
lock
movsl
das
test
loopne
inc
out
out
popf
mov
add
jl
lock
sub
push
mov
inc
or
xor
and
mov
or
jo
loopne
sbb
xor
pop
test
sbbl
mov
lret
fs
push
sub
ffree
rolb
punpckhbw
out
outsb
jl
sbb
test
inc
hlt
dec
push
push
push
test
xlat
sbb
adc
or
leave
xor
lret
or
pop
inc
orl
pusha
mov
fs
push
sub
sbb
ficoms
mov
push
and
push
or
ret
dec
adc
or
jae
movl
and
sbb
lea
sbb
pop
jb
or
inc
inc
add
push
sbb
in
ss
mov
or
jns
sub
cmp
mov
jb
inc
pusha
sbb
stos
dec
pop
and
jnp
mov
and
daa
inc
daa
es
pop
inc
insl
iret
xchg
cmp
and
cmpl
mov
or
rcll
push
outsl
xchg
cmp
lret
aas
and
push
test
mov
xchg
pop
push
dec
shl
lods
mov
or
jmp
sub
sti
sub
push
inc
pop
add
pop
cli
dec
push
repz
push
movsl
or
jo
jno
mov
popa
cmpsl
dec
xor
and
sub
xor
adc
push
sbb
repnz
add
inc
fwait
push
push
mov
xor
push
push
in
xchg
add
and
movsb
sbb
push
and
inc
mov
xchg
adc
lods
cmpl
dec
adc
rol
insb
scas
leave
shll
ljmp
je
aad
or
jne
xor
lea
mov
fisubs
call
add
dec
nop
jl
mov
sub
jge
sbb
jecxz
jbe
in
aaa
loope
movsl
lods
sbb
cmp
mov
and
or
roll
add
adc
mov
push
inc
push
adc
inc
jno
movsb
adc
mov
movsb
adc
out
sbb
xchg
int
test
mov
cs
dec
loop
sbb
mov
xor
popa
mov
push
xor
and
je
push
sarb
xchg
cli
insl
add
xchg
loopne
mov
xchg
mov
dec
mov
jbe
hlt
mov
les
clc
imul
xor
adc
push
lea
pop
push
loopne
lea
sub
xchg
jnp
lret
fprem
dec
sbb
ret
pushf
hlt
sub
testb
jmp
sub
ja
pop
mov
push
movsl
jp
jbe
ss
mov
stos
adc
and
xlat
lods
inc
movsl
and
shrl
or
cmpb
mov
jae
push
push
inc
sbb
dec
inc
or
ljmp
or
cmc
out
mov
popa
or
or
dec
movsl
or
cltd
add
xchg
insl
or
inc
push
xor
or
xchg
repnz
adc
pop
inc
test
add
sub
inc
les
add
mov
cmp
mov
mov
push
popf
movsb
mov
in
adc
setge
inc
pusha
inc
pop
sub
add
jns
pop
les
outsb
mov
bound
in
mov
mov
pop
jl
push
sbb
sub
sub
add
ret
gs
bound
adc
dec
orl
adc
test
sbb
roll
dec
add
mov
push
dec
inc
bound
mov
inc
adcl
add
sbb
xchg
popf
cs
adcb
push
cmp
cmp
or
add
inc
es
mov
or
stc
adcb
sub
mov
mov
sbb
sbb
call
shr
stos
movsl
test
cmpsl
lods
movsl
mov
xchg
sbb
dec
dec
dec
jbe
out
inc
cmp
insb
loop
jmp
or
sbb
dec
adc
ss
movsb
sbb
stc
pop
and
pop
xor
cmp
pop
lret
push
push
pop
sbb
push
pop
jmp
inc
xor
dec
xchg
adc
push
pop
lcall
nop
mov
dec
cmp
cmp
lea
cmp
adc
pop
push
jb
repnz
adc
pop
add
lock
inc
and
test
inc
pusha
adc
add
add
mov
data16
mulb
cld
xchg
test
mov
jg
repnz
cs
sbb
mov
rolb
xor
ret
je
daa
test
jns
leave
jae
insb
and
call
leave
jae
es
popa
add
and
stos
sbb
jae
sbb
pop
add
dec
inc
test
inc
pop
sbb
mov
out
int
add
jmp
push
pop
adc
adc
mov
and
xchg
dec
sbb
fistps
insl
call
dec
adc
insb
mov
mov
push
mov
mov
mov
jne
out
lea
cmp
adc
pop
shr
sbb
xor
dec
test
rclb
cmp
fcomip
push
das
add
test
push
pop
add
push
sub
sbb
add
or
adcb
push
add
jno
clc
pop
popf
xchg
mov
or
dec
lret
sbb
adc
or
push
dec
jl
fwait
les
and
sbb
mov
insb
aam
push
movsl
mov
mov
insl
lret
shlb
leave
je
js
dec
scas
sbb
pushf
not
je
inc
jmp
xchg
repnz
aam
cmpsl
push
fbld
mov
into
or
mov
lea
or
push
push
insl
aad
les
push
xchg
fstpt
dec
sbb
gs
das
adc
xor
xor
sub
insl
jge
xchg
cmp
je
mov
push
push
cmp
mov
adc
jo
jo
pop
add
xor
cs
incl
cmp
jb
push
or
data16
xchg
cmpsl
cmpsl
test
adc
adcl
xor
stc
dec
pop
cmp
iret
fs
or
es
push
int
mov
jns
test
outsb
mov
test
push
mov
mov
mov
lcall
adc
push
cmpsl
dec
dec
xchg
subb
or
xor
push
xchg
sbbb
out
jns
dec
or
or
jns
xchg
cmp
sub
inc
test
or
insl
cltd
loopne
ret
or
ror
cmp
cmp
inc
or
jl
adc
inc
push
adc
popf
lret
sub
adc
pop
outsb
dec
or
push
gs
out
adc
mov
and
ss
mov
adc
mov
in
dec
sbbl
xchg
push
movsb
lret
sbb
int3
aam
inc
scas
call
lret
lock
fcom
sbb
push
fs
xchg
sbb
test
jl
enter
pop
cli
mov
mov
jb
add
popw
add
xchg
and
mov
and
dec
cmpb
pushf
add
xor
and
cmp
and
and
repnz
andb
iret
add
xor
enter
cmp
and
in
pop
and
or
mov
subl
sub
leave
push
nop
push
mov
dec
es
mov
mov
inc
ds
push
inc
mov
cwtl
jae
je
fs
fsubrs
aam
dec
or
call
test
insb
mov
es
sbb
dec
mov
inc
pop
repnz
bound
mov
add
mov
mov
ret
lock
mov
or
jl
push
or
xchg
into
jne
fstl
mov
sti
or
rclb
mov
loopne
mov
enter
push
sbb
add
stos
mov
pop
mov
cmp
and
ret
notb
adc
or
sbb
es
dec
repz
cmp
adc
sbb
sbb
cli
in
inc
pusha
and
repnz
cmp
push
mov
pop
jmp
add
dec
push
inc
sbb
push
or
mov
sub
add
sub
cwtl
sub
push
or
jnp
jae
push
and
ds
jb
in
push
aas
add
inc
mov
jmp
in
inc
clc
enter
cmp
hlt
inc
fcmovne
jae
cld
inc
fcomps
inc
jb
add
push
hlt
fcoml
test
mov
sbb
icebp
sahf
cmpsl
ss
arpl
and
jg
or
decl
push
cli
mov
push
adc
and
and
add
xchg
add
sub
and
pop
xchg
bound
js
xlat
add
add
es
fiadds
rolb
cltd
add
sahf
or
lods
mulb
inc
inc
adc
sub
dec
lcall
add
add
stc
sbb
sub
scas
cli
jne
lea
roll
and
rclb
test
add
mov
cmp
mov
jge
or
inc
dec
imul
mov
jo
dec
push
pop
and
rcll
ljmp
clc
adc
pop
or
arpl
add
push
xchg
xchg
jnp
xchg
movb
sbb
and
sub
pop
push
insb
pop
sar
test
jl
jns
gs
adc
pop
loop
adc
xorb
pop
subb
cmpb
testl
icebp
cmp
pop
sbb
mov
inc
xor
mov
pop
or
ret
addr16
popf
nop
rcl
subl
pop
inc
push
pop
jo
sbb
fimull
adc
fs
insb
pop
aam
mov
and
inc
add
jg
mov
mov
add
push
push
mov
lcall
add
cwtl
and
pop
inc
inc
cmc
mov
lods
nop
mov
imulb
push
inc
sbbl
dec
cmp
sub
xchg
and
cltd
add
sbb
pop
and
add
inc
sub
xor
push
sbb
nop
and
cltd
ffree
inc
roll
sub
dec
sbb
push
dec
mov
pop
addb
or
push
push
mov
sub
ss
mov
jle
cld
push
sbb
sbb
dec
xor
and
insb
pop
sub
add
and
fmuls
and
push
jb
and
add
inc
pop
dec
dec
pushf
xchg
dec
dec
push
call
dec
dec
dec
inc
pop
push
jnp
popf
ret
mov
xor
push
xchg
or
push
dec
jb
push
jns
inc
xchg
xor
mov
ret
sub
push
adc
mov
mov
push
mov
sbb
out
and
fldl
and
or
mov
push
repz
mov
dec
dec
sub
bound
sbb
addb
sbb
sbb
and
and
add
sub
push
adc
push
test
pop
push
nop
sub
enter
push
and
inc
cmpb
inc
loope
inc
mov
inc
add
orl
das
cmp
push
les
push
mov
cmp
loopne
insl
rorl
fsub
sub
bound
aaa
sbb
sbb
cmp
mov
sbb
rcll
add
aam
lea
inc
scas
add
adc
pop
mov
ret
pop
sub
clc
push
and
mov
jae
xor
inc
mov
and
lods
jl
arpl
add
mov
mov
sbb
pop
mov
test
sysret
jmp
leave
xor
std
mov
jno
mov
rcrl
faddl
cmp
fistpll
fstpl
ljmp
mov
cld
out
and
dec
jbe
jo
lret
imul
adcb
mov
ja
add
mov
shll
and
sbb
push
sbb
enter
push
mov
jp
test
pop
push
popf
imul
imul
loop
push
sti
js
and
sub
pop
push
icebp
pop
push
push
add
cmp
int3
xor
push
lahf
and
adc
sub
xor
dec
add
loopne
push
adc
movsb
cltd
dec
adc
enter
or
jae
push
rolb
movsb
dec
push
xchg
cmp
leave
xor
inc
cmp
leave
jae
push
add
arpl
aam
aam
dec
es
cmp
mov
pop
pop
les
out
clc
sbb
adc
bound
xor
stos
leave
sub
xor
movsl
mov
adcl
js
lods
sbb
shll
imul
jae
in
xor
arpl
js
lcall
movsb
sbb
mov
jg
hlt
push
pop
cmp
stos
mov
mov
jne
mov
sbb
leave
push
aas
frstor
dec
loop
lcall
pusha
out
popf
and
or
aam
push
pop
jge
sti
pushf
test
inc
mov
fsubrs
adc
or
mov
add
sub
nop
push
repz
rorb
sbb
fnstcw
push
adc
jmp
push
adc
jg
cmp
mov
jo
push
int3
xchg
cwtl
sub
cli
pop
xor
dec
pop
adc
jae
pop
or
or
lods
dec
aam
daa
cmp
arpl
jle
or
jmp
sub
dec
jne
je
jg
and
push
rcrl
jecxz
dec
sub
roll
and
test
mov
mov
shrb
push
push
sbb
inc
mov
addl
xchg
pop
stos
inc
lock
lds
jne
pop
and
pop
fisttpll
sbb
cmpb
mov
and
push
push
add
std
repnz
dec
insb
jecxz
xchg
iret
inc
add
and
inc
bound
adc
mov
and
adc
mov
dec
dec
cld
push
pop
mov
call
inc
std
adc
test
adc
jg
mov
test
rcl
push
add
nop
mov
test
fbld
pop
pushf
inc
add
or
or
mov
sub
xchg
adc
adcl
cwtl
test
xorl
inc
inc
xchg
cmp
mov
push
pop
loope
pusha
dec
dec
outsb
nop
sarb
push
and
lcall
mov
aam
stos
leave
mov
xchg
xchg
mov
dec
sub
push
mov
imul
int
ds
adc
or
lods
xchg
scas
cltd
imul
push
and
cmp
pop
rolb
sti
mov
adc
movsl
test
repnz
and
in
dec
pop
movsl
jl
cmp
in
rolb
xchg
inc
and
sub
dec
dec
and
mov
dec
xchg
loope
stos
add
adc
adc
inc
test
popa
mov
sbb
or
sbb
and
leave
leave
inc
repnz
or
mov
pop
adc
insb
push
add
pop
sbb
add
out
mov
cmp
jae
mov
add
inc
xchg
pushf
xchg
push
sbb
sbb
sbb
std
jl
and
add
pop
jmp
xor
mov
cmp
pop
pusha
scas
les
ja
add
test
push
mov
mov
ret
add
adc
mov
mov
fimull
mov
push
cmp
xor
test
mov
inc
pop
daa
mov
dec
stos
mov
dec
sti
imul
ja
mov
sub
cmp
jb
mov
adc
or
or
rclb
outsb
shrb
lods
pop
out
pop
dec
mov
mov
push
or
mov
fdivs
movsb
pushf
pop
sbb
dec
sub
pop
icebp
xchg
mov
mov
jo
sub
push
test
pushf
lods
lea
jnp
add
cmpsl
jae
cmp
mov
outsb
sbb
jo
xor
inc
es
add
add
mov
pop
pop
rcll
pop
pop
push
pusha
flds
dec
jnp
lcall
pop
or
adc
enter
sbb
pop
add
adc
mov
jbe
or
and
adc
imul
xor
and
or
sub
clc
xchg
sub
push
adc
add
xchg
push
lahf
andl
cwtl
adc
lods
push
test
mov
mov
mov
pop
and
inc
cmp
add
sub
inc
insb
cmp
fwait
xchg
ds
and
filds
cmpsl
lods
wbinvd
cmp
inc
add
cs
mov
or
lods
cmp
xlat
sarb
sub
push
insb
xor
pop
push
or
add
lret
ret
out
jmp
orb
mov
cwtl
mov
dec
or
inc
cmp
pop
or
shrb
cmc
cmp
cmp
inc
push
lea
test
lods
jp
stos
inc
cmp
and
lds
push
data16
test
icebp
mov
sbb
dec
sub
push
mov
mov
jbe
loope
icebp
jbe
sub
mov
or
ret
clc
sub
dec
shr
push
lea
adc
cltd
dec
dec
push
and
fsubrp
mov
insl
add
mov
jnp
popa
mov
test
add
test
sbb
sbb
fisttpl
push
mov
sbb
in
or
cld
in
inc
enter
insl
mov
ljmpw
les
mov
inc
cmp
mov
lcall
pop
sbb
stc
subl
jno
nop
xor
dec
test
das
xor
add
cmp
mov
xchg
ficoms
fdivrl
add
out
mov
orl
jns
push
push
fnstsw
call
int
push
add
add
xchg
in
or
inc
out
js
jp
add
out
add
shll
loopne
sub
inc
push
insb
lods
js
xlat
push
push
out
push
push
fwait
ret
xorl
aas
add
bound
insb
daa
jl
call
push
stos
dec
das
jne
lret
ss
push
cmpl
hlt
mov
sarl
call
je
cmp
je
cmp
je
cmp
je
push
je
mov
jnp
jle
mov
loopne,pn
mov
adc
sbb
pop
rclb
mov
add
pop
add
push
ret
sti
fistpl
pop
mov
fdivrs
inc
hlt
cli
or
loope
in
push
mov
jo
fs
mov
push
scas
sub
rclb
inc
ret
or
je
shl
xor
adc
ret
add
stc
pop
aad
lds
test
mov
aam
and
push
xor
adc
add
ljmp
icebp
clc
add
rorb
into
xchg
test
jb
adc
cmp
push
pop
nop
arpl
jmp
outsl
adc
push
mov
mov
mov
nop
push
push
push
add
and
popa
xor
pop
xchg
outsl
mov
mov
xor
mov
sbb
aas
loopne
inc
add
stos
pushf
add
sub
mov
jge
jmp
mov
test
js
sub
ret
inc
faddl
mov
lods
iret
sub
and
out
int3
sbb
insb
mov
sub
dec
icebp
mov
mov
inc
lret
add
lock
sub
sbb
xchg
dec
push
push
dec
icebp
or
mov
mov
xor
aaa
xchg
std
jmp
push
sbb
push
movsb
xor
in
call
repz
adcl
add
push
push
pop
addr16
lods
push
in
or
push
pop
subl
es
repnz
jne
jl
aam
pop
ljmp
les
mov
sbb
inc
add
leave
aad
test
push
jno
and
mov
pop
or
and
dec
push
int3
das
cmp
sub
xchg
adc
cmpsl
mov
and
int3
mov
sub
pop
clc
hlt
sub
sbb
sti
and
or
shlb
int
mov
inc
pop
fsubl
popa
outsl
sbb
mov
add
sbb
add
jo
adc
add
mov
sbb
pop
psrad
adcb
jge
inc
sub
aaa
inc
arpl
fmull
lcall
aaa
cmp
outsl
lahf
push
test
imul
and
xor
and
flds
test
lds
inc
adc
mov
xchg
xchg
cmp
in
mov
add
aam
pop
or
pop
sbb
or
cmpsb
sbb
or
popa
test
bnd
and
push
je
mov
xchg
dec
sub
push
ljmp
movsb
cltd
dec
sub
int
xor
xchg
andb
les
adc
mov
mov
movsl
test
xchg
jl
add
jae
rcrb
xor
cmp
dec
call
adc
mov
out
or
cwtl
imul
push
addl
and
mov
push
stc
in
inc
lcall
sti
inc
data16
jge
or
xchg
inc
insl
mov
push
push
sub
adcb
mov
inc
and
push
sarb
les
out
mov
cs
stc
inc
xchg
cmc
dec
mov
paddw
jge
adc
cmp
nop
jo
adc
add
rcl
mov
xchg
add
fisubl
imul
or
push
faddl
mov
mov
mov
add
sahf
sbb
popf
push
mov
outsb
pusha
jp
push
or
push
fisttps
cmp
je
test
std
hlt
daa
test
ret
jne
xor
lock
lock
jnp
jmp
mov
test
or
inc
or
adc
or
mov
push
sbb
rcr
js
inc
xor
sub
or
jge
stos
ret
aas
pop
jecxz
mov
add
xchg
dec
add
roll
sbb
push
mov
iret
sbb
lock
rorl
cmpsl
mov
pop
push
push
insb
testb
adc
pop
add
test
sbb
sub
inc
dec
or
sbb
pop
lea
or
mov
cmpsb
inc
push
jmp
das
sbb
arpl
inc
popf
add
cmp
xor
adc
fs
adc
adc
pop
sbb
ret
lret
push
sub
ljmp
dec
dec
sbb
sbb
adc
jl
loop
insl
push
sub
cmp
sbb
xor
sbb
je
fadds
push
xchg
test
add
push
xchg
orl
xchg
adc
push
and
add
lea
push
jl
cltd
add
adc
sub
lock
mov
or
stc
jbe
iret
adc
fcoms
stc
push
outsb
insb
or
sub
pushf
in
leave
pop
ret
pop
pop
mov
push
mov
sub
dec
test
mov
std
aas
lds
jne
cmp
jne
int3
jnp
push
sbb
pop
mov
fs
sub
pop
mov
hlt
sub
mov
cmpb
mov
lods
mov
ja
add
pop
push
add
cmp
lcall
imul
adc
or
xor
mov
pop
dec
incb
les
mov
xor
sbb
cmp
arpl
in
jle
push
and
pop
cs
dec
addr16
sbb
or
inc
idiv
adc
stos
sub
and
sub
daa
mov
sar
sub
mov
lea
ret
xchg
push
push
lods
cmp
mov
xor
pop
lods
or
sub
fwait
addb
pop
adc
push
sbb
or
loopne
adc
ss
mov
sbb
into
push
adc
stc
bound
xchg
jle
adc
and
sub
inc
loop
or
push
lahf
fisubrs
lea
test
cmpl
mov
sbb
mov
icebp
push
push
push
mov
std
add
mov
push
push
inc
add
shrb
adc
dec
sbb
and
add
sub
cmp
adc
test
push
jmp
xchg
divb
outsb
int
lods
iret
sub
xchg
pop
fsubr
inc
cmp
push
stos
sub
inc
shrb
out
push
jl
add
jmp
xor
inc
dec
add
jmp
adc
push
repz
jb
mov
sbb
inc
dec
cmp
aaa
and
or
fldt
fists
pop
add
mov
daa
inc
sub
cmp
add
mov
push
pop
les
ret
xchg
adc
adc
stos
jb
cmp
inc
loopne
push
jns
add
adc
cmp
div
imul
inc
jne
jo
and
movsb
ds
jnp
sbb
popa
add
and
rol
dec
lods
mov
mov
pop
iret
icebp
adc
outsb
cmp
ret
xor
fstl
mov
jge
hlt
aas
arpl
cmp
mov
je
mov
cmp
adc
hlt
xchg
cmpsb
add
push
add
insb
mov
testl
aad
pop
add
stc
mov
push
idivb
inc
pushf
and
pop
or
sub
pop
sub
das
shlb
shrb
rcl
cmpsl
lret
bound
or
adc
clc
inc
inc
dec
outsl
push
movsb
push
outsl
ret
add
enter
mov
or
mov
jl
dec
stos
sahf
inc
pop
sti
addl
test
xorb
das
call
lods
inc
jecxz
push
xchg
cmp
xorb
pusha
push
iret
cmp
ret
stos
dec
call
push
or
test
xor
jecxz
jo
xchg
fcom
inc
shl
jno
and
mov
or
lcall
cmp
inc
outsb
add
xchg
movl
mov
out
inc
add
mov
jp
add
fldenv
cmp
arpl
xor
push
add
pop
cmp
and
mov
cmpsl
pusha
xor
pusha
cmp
mov
mov
sbb
je
sub
jmp
xor
or
or
scas
lret
aas
inc
inc
xor
movsb
push
cmp
xchg
sbb
mov
push
shrb
sbb
nop
cwtl
dec
flds
jp
xor
in
or
mov
pop
mov
jl
xor
pop
sub
shl
pop
adc
jl
or
xchg
cli
into
jle
pop
mov
cmp
and
add
or
and
jmp
sbb
mov
or
cmp
cmp
push
xor
test
dec
scas
stos
inc
pop
xor
ltr
pop
pop
sub
push
lret
icebp
jnp
ret
outsl
insl
sbb
es
in
cmp
cmc
dec
mov
clc
push
push
mov
adc
pop
je
inc
xor
push
pop
xor
pop
dec
xor
sbb
xorl
xor
push
xor
movsb
pusha
or
sub
nop
add
and
add
xor
lds
push
or
pop
or
addl
cmp
jae
add
pop
or
stos
cmp
mov
pop
clc
cmc
lods
push
jo
mov
dec
mov
test
inc
mov
and
sub
jl
mov
ja
call
mov
lods
and
in
lds
add
sbb
add
arpl
and
mov
sub
out
mov
add
mov
jne
cmp
jb
sub
jmp
push
dec
movzwl
dec
pop
cmpl
decl
pushf
ret
lret
lods
sbb
push
push
push
stos
or
and
les
add
and
shll
push
xor
add
test
jl
cmp
jne
add
jb
in
add
xchg
out
cltd
dec
push
push
push
cmovbe
mov
inc
cmp
lahf
mov
adc
jmp
push
jne
shlb
inc
jg
jle
push
mov
mov
xor
adc
test
mov
loope
int3
inc
dec
inc
pop
or
inc
dec
sub
inc
mov
adc
mov
push
xchg
fdivrs
push
inc
adc
cs
pushl
jmp
imul
and
lret
pop
mov
pop
aas
loope
push
push
push
lret
jecxz
je
addl
jne
or
push
add
inc
pop
jns
or
add
cmp
cmp
sub
lock
cmc
cmp
mov
or
cmp
clc
push
pop
inc
mov
jno
test
leave
push
daa
lods
adc
test
or
inc
pop
mov
pushf
xchg
cmp
and
push
push
or
xor
xchg
cmpsb
cmp
cmp
pushf
and
xor
xor
push
xchg
bound
test
pop
pop
cs
push
ss
pusha
push
adc
adc
leave
inc
inc
adc
inc
mov
xor
ret
cmp
fwait
dec
sub
enter
mov
xor
add
and
bound
je
mov
mov
mov
movsb
xchg
cmp
mov
push
js
push
xchg
sbb
sahf
sbb
push
sbb
leave
or
dec
xor
mov
add
push
pusha
add
mov
ret
ret
inc
test
mov
cmp
fadds
jno
push
rorb
push
xor
inc
sbb
and
sbb
or
data16
or
pop
insl
push
xchg
decb
sbb
adc
rolb
push
xor
or
je
mov
mov
movsb
inc
pop
add
sub
inc
mov
outsl
nop
stos
jle
add
xor
mov
ret
mov
mov
incl
bound
jo
mov
loope
addb
es
jmp
mov
inc
jo
ret
pop
loopne
out
cwtl
inc
jecxz
dec
pop
push
push
inc
inc
out
das
xchg
adc
mov
push
xor
test
cmp
xchg
cmp
push
dec
mov
pop
sub
push
loopne
insl
sbb
or
mov
inc
pushl
les
or
cmpb
jne
adc
flds
cs
sbb
adc
add
stc
adc
fistps
in
xor
je
sbb
or
imul
mov
mov
inc
decb
push
sbb
pushf
and
push
pop
xchg
test
dec
or
or
jnp
pop
xchg
or
push
sub
lahf
fnsave
dec
adc
xchg
add
enter
adc
dec
sub
sbb
aaa
test
enter
xor
sub
xchg
adc
xchg
dec
sub
call
mov
leave
sub
movsb
push
xor
leave
dec
inc
and
insl
movsb
mov
dec
orl
jo
clc
xor
dec
add
cmpsb
das
push
je
jbe
sbb
test
mov
js
jecxz
inc
mov
fnsave
pop
test
push
cmc
dec
add
cmpsl
test
cwtl
xchg
add
sub
sahf
cmp
sbb
or
mov
test
jg
push
pop
push
push
sbb
add
ret
push
lret
ret
pop
mov
out
add
push
sbb
xor
sbb
adcb
sbb
xchg
ds
imul
push
cmpsb
icebp
push
dec
loope
push
decl
pop
jne
push
xchg
movb
pminsw
lock
adc
dec
sbb
repz
jg
sahf
xchg
fstpl
mov
pop
enter
fmuls
xchg
aas
push
imul
jg
outsb
xchg
shrl
pusha
jo
xchg
shrb
inc
sbb
pop
cwtl
push
repnz
mov
xchg
mov
sub
xchg
or
add
pusha
add
xchg
mov
mov
test
mov
nop
or
ljmp
mull
test
xor
ss
jl
js
dec
shrb
js
pop
and
pop
fldt
lea
adc
pop
mov
adc
or
and
adc
cmp
scas
popa
leave
in
fs
insb
pop
in
push
sbb
xor
sbb
js
pop
sub
addl
call
xor
js
movsl
inc
lds
push
xchg
data16
and
lods
or
mov
sbb
cs
xlat
aaa
or
xor
and
or
pop
jae
xchg
mov
jb
xchg
add
cmp
ret
inc
cmp
mov
push
pop
inc
cwtl
pop
imul
mov
dec
dec
stos
or
je
inc
dec
dec
or
sub
mov
add
sahf
inc
in
and
inc
enter
cmp
cmp
jns
jno
dec
mov
inc
es
pcmpgtd
push
dec
xor
mov
mov
push
jns
or
loopne
ss
inc
push
or
jmp
fwait
add
inc
cs
adc
xor
xor
push
xor
or
push
add
push
adc
jno
pop
mov
and
push
divl
pop
filds
cmp
sub
push
aad
mov
fiadds
mov
or
push
enter
push
cltd
nop
out
push
dec
dec
mov
inc
xor
push
sub
fwait
xor
sub
addr16
or
dec
cmp
push
nop
mov
push
aas
inc
xchg
add
lcall
add
mov
and
xor
jle
loopne
scas
enter
int3
adc
inc
dec
pop
inc
cwtl
inc
push
push
in
in
pop
push
push
add
xor
mov
adc
or
mov
jne
push
popa
push
mov
mov
sub
aam
add
and
enter
push
push
xchg
adc
outsl
add
jmp
jno
add
inc
decl
shl
inc
sahf
sub
pop
xor
mov
clc
adc
insb
jo
dec
cs
mov
push
xchg
aas
inc
mov
jg
cmpsl
push
xor
les
xchg
pop
sub
repnz
pop
or
inc
out
sbb
and
in
add
enter
ss
imul
repnz
ds
jp
mov
daa
loop
and
pop
dec
mov
test
sub
fnstenv
sub
push
inc
and
pusha
push
mov
frstor
adc
add
lds
pop
sbb
adcl
rclb
add
sbb
pusha
or
jg
dec
cmpb
je
fisubrl
xchg
sar
adc
add
xor
int
aam
dec
lea
push
mov
and
pop
mull
inc
mov
cmpsl
sbb
xchg
pop
add
inc
test
inc
jg
xchg
movsl
and
xchg
rclb
out
sbb
pop
pop
sbb
jle
mov
add
jne
mov
add
dec
filds
sahf
out
or
popa
add
sbb
sbb
xchg
xor
movb
push
pop
sub
sbb
notl
lea
in
pop
dec
dec
inc
insl
push
repnz
sub
sbb
lret
cltd
inc
inc
sbb
fcmovnbe
sub
dec
cmpb
dec
push
adc
push
mov
mov
push
js
cmp
push
push
jmp
add
or
sub
repz
pop
xor
adc
xor
sub
pop
pop
xor
imul
test
cmpsl
pop
add
arpl
inc
and
sbb
and
bswap
call
add
rcrb
imul
jl
mov
jl
sbb
lods
sbb
push
push
out
sbb
imul
or
sub
jo
test
sbb
dec
xchg
mov
je
cmp
sbb
dec
xor
lock
test
rclb
fimull
dec
xorl
cs
nop
jbe
test
jbe
paddusw
sub
cmp
insl
jg
dec
xor
or
adc
clc
testl
jl
lock
in
add
sub
pop
or
mov
loop
sbb
push
and
xchg
push
jl
xor
pop
and
pushf
push
test
imul
push
test
lcall
sahf
into
ljmpw
pop
cmpsb
add
lock
sub
stos
out
xchg
movsl
lahf
and
cmp
fcomip
dec
jge
jbe
mov
fistps
sbb
adc
mov
mov
nop
shll
mov
icebp
neg
or
sbb
out
lock
dec
jmp
mov
sahf
cwtl
push
push
lds
jp
or
insl
add
or
and
sub
sub
dec
loope
fs
in
icebp
and
hlt
mov
adc
sub
fists
fnstcw
ds
push
dec
fiaddl
jb
sub
movsl
mov
adcl
loope
adc
sub
mov
cmp
dec
push
push
cwtl
mov
inc
xor
sbb
ficoml
or
out
and
mov
mov
and
scas
sbb
out
pop
inc
bound
jb
outsb
and
popa
push
add
mov
add
gs
adc
mov
push
rcrb
enter
les
push
fdivs
fldcw
movzwl
data16
fldcw
dec
pop
aam
stos
pop
add
andl
inc
pop
push
pop
jle
cmp
or
adcl
test
rcr
mov
jle
jne
inc
and
adc
mov
pop
adc
cli
add
push
xlat
inc
inc
outsb
pop
pop
loopne
out
add
and
rol
loop
xchg
add
mov
cs
sub
push
ss
nop
jns
push
mov
mov
pusha
js
adc
std
pop
adc
or
imul
js
mov
dec
or
push
fcompl
std
pusha
push
mov
into
cmp
jbe
or
mov
pop
cwtl
out
jmp
sub
or
jmp
push
cmpb
adc
add
aad
movsb
sub
or
push
sub
sbb
sub
sbb
pop
push
lods
jmp
mov
push
mov
fildl
mov
inc
adc
add
mov
les
fmulp
inc
mov
icebp
lret
leave
iret
in
fucomip
fdivr
sbb
sub
fmuls
push
sbb
sbb
sar
or
adc
sub
divb
add
stc
je
repz
pop
into
cmp
movl
or
cmpl
jp
or
sbb
rcll
pop
cmp
mov
or
cmc
sub
dec
lret
cmp
movsl
adc
jg
adc
pop
cmp
add
pop
cmp
cmp
movb
movsb
cld
add
xchg
andb
inc
rdtsc
insb
bound
icebp
jge
jmp
sbb
mov
jmp
xchg
jl
je
and
jmp
mov
out
mov
sarb
rorl
ja
stos
add
xchg
adc
push
lea
iret
jo
enter
mov
dec
outsb
and
cmp
clc
add
or
push
adc
data16
push
mov
push
pop
sub
ret
ficomps
aam
jo
push
push
es
mov
xor
add
cmp
mov
push
call
fsubs
jb
cld
and
mov
pusha
sub
test
inc
pop
scas
orb
push
lds
pop
xchg
xchg
xchg
jnp
aaa
cmpsl
xchg
mov
dec
adc
xor
pop
sbb
cmp
lock
rorl
push
punpckhdq
pop
js
mov
mov
lock
adc
xchg
cmp
cmp
xor
je
push
dec
pop
icebp
jle
mov
repnz
repnz
inc
mov
rorb
pop
xor
je
push
push
cld
inc
mov
adc
inc
add
jae
push
cltd
inc
sbb
popf
jae
out
fdivrl
jg
mov
loopne
adc
mov
pop
jmp
sub
xor
sub
cmpb
jl
jg
push
inc
mov
in
dec
add
cwtl
popf
mov
outsb
ja
add
out
dec
push
push
rorl
mov
dec
std
sub
push
sbb
inc
cwtl
jne
and
add
fs
sub
jg
and
fsubs
mov
push
push
dec
dec
test
sbb
or
jl
cmpl
cmp
push
and
inc
sbb
ds
rcr
inc
add
imul
or
mov
or
adc
mov
cmp
jne
push
call
jmp
cmpl
das
adc
xchg
cmp
cmpl
sbb
or
sbb
imul
push
lock
cs
fsts
lods
sarb
loope
xchg
cmp
faddl
clc
pusha
mov
cmc
and
or
dec
int3
test
pop
add
clc
add
xor
pop
loopne
lea
push
push
adc
push
ret
data16
ds
push
in
or
imul
adc
adc
adc
adc
sub
movsl
call
sbb
push
xlat
jo
push
jmp
inc
and
push
xchg
mov
sbb
push
out
xchg
mov
push
je
mov
sub
jb
or
and
icebp
out
daa
add
outsb
jo
mov
add
and
inc
scas
push
mov
and
push
sbb
mov
in
pusha
out
jge
test
pop
incl
je
jmp
push
scas
rcrl
xlat
sub
popa
outsb
das
inc
mov
push
push
add
jle
mov
mov
sub
inc
xor
adc
jp
mov
sbb
inc
xlat
pop
inc
jmp
fwait
add
adc
in
adcb
push
aas
icebp
add
or
cmp
mov
add
prefetch
or
or
rorl
or
jmp
xchg
add
xor
or
sbb
mov
push
xchg
test
aam
cld
enter
xchg
and
mov
aam
mov
push
stos
test
pushf
mov
hlt
xor
testb
push
repnz
push
testb
movsb
faddl
in
loop
call
lar
add
outsl
jne
inc
lock
jle
gs
or
mov
notl
dec
mov
push
mov
lock
stos
mov
or
in
inc
scas
push
fidivrs
repz
mov
add
push
push
xchg
hlt
loopne
icebp
cli
int3
stos
test
mov
fmuls
sarb
mov
ja
cmp
mov
add
cmpsl
inc
mov
jl
subl
push
inc
add
insl
movsb
sub
arpl
lock
jb
sub
inc
inc
adc
jo
pop
nop
sbb
push
mov
sub
jne
mov
pop
call
or
jo
std
add
shrb
in
rolb
loope
dec
and
shll
inc
xor
adc
ret
inc
or
add
cmp
sbb
xchg
fsubrs
inc
das
mov
mov
or
or
lods
iret
cmp
mov
dec
movb
mov
cwtl
nop
cmpsb
pushf
inc
lods
cmp
sub
or
add
or
mov
push
into
inc
add
and
mov
fsubrs
ss
pop
push
jnp
xchg
adc
sbb
lods
push
mov
mov
mov
xchg
push
and
push
mov
push
mov
pop
add
sti
mov
pop
ret
rcrl
mov
nop
fxch
fst
or
bound
and
dec
pop
xchg
stos
jmp
jo,pn
fdivrs
cmp
jbe
aad
push
dec
into
jae
clc
push
imulb
xor
add
bound
add
push
sub
mull
call
imul
dec
add
mov
dec
or
add
pop
push
mov
sti
jge
dec
sub
idivb
orb
or
push
push
jle
jge
sub
dec
test
mov
cmp
dec
jmp
dec
in
mov
pop
cs
lcall
test
xchg
loop
adc
mov
mov
xchg
sub
jg
sbb
loop
pop
mul
xor
push
je
pop
push
setb
jb
rcll
push
sbb
jne
test
adc
ds
sti
test
je
pop
in
adc
pusha
loopne
push
cmpsl
jns
push
jmp
adc
xor
data16
in
adc
add
sub
dec
and
sbb
sbb
adc
call
inc
xchg
xchg
sbb
scas
pop
or
push
push
pop
addl
push
add
je
add
lea
loopne
push
xor
lods
pop
js
mov
inc
adc
mov
loope
xlat
pushl
outsl
sahf
ret
sbb
pop
push
dec
add
aad
sbb
push
sbb
or
pusha
mov
cmp
loopne
lock
mov
dec
jns
xorl
inc
or
sbb
in
data16
in
xchg
lea
aaa
dec
cmpsb
mov
sbb
mov
inc
add
adc
add
cs
sub
add
daa
les
push
fimull
dec
sub
xchg
sbb
les
add
or
inc
jmp
add
int3
cmp
dec
xchg
push
loopne
xchg
jnp
xchg
fs
pop
and
mov
leave
fucomp
cmpb
or
mov
loopne
loopne
sub
iret
push
dec
shrl
adc
loop
or
das
adc
lock
dec
movsb
repnz
add
fwait
mov
inc
lahf
jb
ret
or
roll
jl
pop
lock
je
inc
jl
pop
pushf
js
push
inc
sbb
adc
test
out
or
mov
inc
dec
jo
cmp
push
jmp
dec
inc
call
dec
xchg
sarb
mov
push
roll
cmp
frstor
mov
push
lock
sub
jl
pop
xor
jl
and
shll
pop
or
arpl
pop
shr
add
pop
in
enter
rcll
cmp
push
ret
xor
stos
lea
mov
insb
test
pop
stos
int3
xchg
rolb
xchg
repnz
pushf
movsl
arpl
fs
inc
fiaddl
in
and
or
jmp
lret
jle
in
out
adc
shrb
imul
mov
ss
lock
and
mov
js
fcoms
mov
jne
sub
std
xor
clc
jo
test
push
jno
lahf
loopne
jmp
push
enter
dec
xor
insl
jne
stc
repnz
cs
add
push
jae
arpl
cmp
xchg
dec
push
je
inc
xchg
out
jnp
jg
push
or
cmc
mov
jne
or
cmp
push
push
and
mov
add
aam
test
cmp
mov
jo
mov
push
psubsw
pop
cmp
je
mov
ret
pop
mov
sbb
or
fidivs
pop
jp
mov
or
fcoml
mov
xchg
je
push
cmova
cmc
sahf
and
inc
push
push
stos
and
push
movb
mov
popf
sbb
add
or
jnp
push
iret
jo
not
pop
jb
push
push
pop
sahf
xchg
inc
mov
mov
lcall
push
push
outsl
and
mov
push
sbb
push
jge
loopne
sub
xor
mov
mov
cmp
and
fdivl
xchg
push
ret
inc
and
cli
pop
ret
js
cmp
jne
fidivrs
std
scas
add
mov
or
inc
loopne
pop
negl
mov
push
and
iret
add
cmp
lret
mov
out
dec
push
pop
inc
jbe
push
mov
push
out
nop
push
out
shr
hlt
and
xchg
add
into
xor
push
push
mov
sub
cmp
scas
sbb
push
sub
xlat
jp
sub
movsl
mov
push
inc
dec
lods
dec
adc
shll
sbb
push
pusha
dec
shll
je
lcall
fsubr
cld
cld
pop
call
cmpsb
cwtl
rcr
pop
popa
nop
sti
or
push
mov
inc
int3
mov
xor
ror
mov
lea
scas
sub
push
and
push
imul
aam
xor
je
xchg
int
adc
and
xor
sar
mov
xor
or
mov
sub
push
fadds
sbb
and
xor
jo
xor
add
and
xor
pusha
push
shlb
xor
stos
mov
add
subb
stos
or
out
mov
dec
sbb
test
fisubrs
clc
adc
and
test
dec
nop
mov
js
pop
push
xor
jg
push
xchg
push
add
out
dec
pcmpeqw
cs
lock
cmpsl
pop
mov
add
add
or
mov
add
sub
popa
std
xchg
pop
sti
add
filds
lret
jbe
cmp
sbb
mov
push
adcb
xchg
lret
or
xchg
add
cli
push
ja
cmpb
push
sub
jle
mov
pop
out
shll
mov
sbb
cwtl
mov
mov
test
xchg
mov
xchg
scas
push
pop
xchg
add
sbb
adc
sbb
adc
rorl
mov
adc
cmp
sbbl
pop
fsubl
shll
jo
shlb
in
push
inc
ljmp
add
inc
xchg
lock
cld
pop
jne
lea
add
pop
mov
dec
or
adc
or
fiadds
outsl
lret
notb
lock
or
ret
inc
sbb
jne
mov
cmp
mov
add
adc
pop
mov
das
or
cmp
in
pop
incb
repnz
out
sti
cltd
in
add
iret
cmp
sahf
movsb
lcall
jmp
clc
add
mov
inc
xchg
out
xor
insl
sub
rolb
ret
roll
mov
xchg
mov
mov
sub
mov
clc
dec
jne
stc
lock
xchg
push
stc
je
icebp
ds
mov
jne
xor
in
inc
xchg
ja
fwait
pusha
stc
arpl
lahf
sub
inc
test
dec
sub
loop
into
lods
push
mov
cmp
add
add
daa
movsb
divb
or
adc
stc
int3
outsb
push
mov
mov
inc
push
mov
adc
lret
clc
rorl
movsl
cmp
or
jmp
ror
loop
xor
sbb
mov
cwtl
dec
xchg
sbb
scas
dec
inc
test
mov
sub
or
push
push
cmp
push
inc
pushf
adc
ds
pusha
mov
or
std
dec
add
jmp
pop
xor
in
negl
push
or
repnz
jg
icebp
sub
pop
and
test
enter
inc
mov
or
add
push
push
mov
mov
xor
xchg
je
unpckhps
add
pop
jle
mov
int
jo
pushl
je
push
and
mov
out
or
sbb
xor
int3
lock
mov
cmovl
push
loopne
out
push
sbb
and
inc
sbb
sub
and
pusha
xor
enter
push
and
movsb
int3
int
mov
je
xor
mov
xchg
ret
ja
sub
idivl
cld
loope
es
je
cmp
je
mulb
mov
adc
or
push
cmp
nop
add
iret
je
xor
push
daa
lods
push
rclb
sti
lahf
loop
fcoms
xchg
inc
pop
xchg
jmp
lea
pop
fmul
push
sbb
repnz
dec
leave
add
imul
add
dec
js,pn
lock
adc
dec
inc
cs
lock
lock
test
jmp
dec
jmp
mov
push
push
adc
movntq
out
adc
add
cmpsl
shlb
ss
mov
int
mov
mov
sbb
add
add
jmp
subl
lods
daa
mov
lea
mov
inc
adcl
xchg
mov
dec
in
inc
push
je
sar
shrb
sbb
and
xor
pop
or
add
subl
xchg
sti
or
test
js
dec
xor
sbb
adc
add
shlb
dec
je
xlat
call
inc
xchg
xchg
out
sbbl
adc
in
add
push
jge
jne
inc
sbb
cli
xchg
mov
inc
mov
adc
mov
in
call
sti
lods
xchg
adc
outsb
and
or
fsubrs
jl
add
add
push
xor
cwtl
test
inc
fidivrs
fildll
inc
movsb
and
sarb
xor
je
sbb
add
js
sub
xchg
push
and
or
sar
push
lea
mov
jo
aam
add
push
lea
dec
rcrb
imul
pushf
xchg
xchg
or
sbb
ucomiss
les
out
xchg
loopne
add
pop
xor
pop
xor
test
push
xchg
inc
add
cmpsb
mov
fs
adc
lods
js
push
call
pop
arpl
push
and
sbb
add
mov
add
ja
add
push
cmp
loopne
push
xchg
sahf
sbb
pop
cmp
adc
sbb
xchg
fs
and
xor
idiv
and
cmp
je
ss
ja
push
scas
and
add
clc
fimuls
jge
and
lret
xor
arpl
sbb
mov
and
dec
adc
ret
pop
xchg
orb
sbb
pop
pushf
sarl
inc
ljmp
push
xchg
adc
ds
pop
inc
push
movsb
inc
pop
or
xchg
pop
fldt
push
push
pop
into
jecxz
adc
clc
mov
js
adc
loopne
cmp
push
leave
int3
lret
add
cmp
cmp
or
add
sysret
lock
pop
add
pop
pop
movsb
cmpsb
cmp
cmp
adc
lret
loope
sti
rorb
sub
add
fsubr
mov
cltd
cmpl
mov
hlt
xchg
test
push
jmp
nop
inc
adc
popa
mov
cmp
rolb
aaa
sarb
adc
sbb
push
lea
loopne
in
mov
in
xor
test
mov
movsl
add
idivb
je
repz
cld
mov
repz
pop
add
adc
out
pop
lahf
shl
push
push
cli
sahf
out
push
xor
mov
add
aaa
inc
sbb
push
xlat
xor
cmp
lock
and
jae
insl
pop
testb
mov
cmp
popa
sub
rcrb
mov
ss
aaa
in
aad
movsl
fadds
and
pop
aas
mov
mov
mov
jmp
jle
inc
cmp
dec
divl
dec
xchg
movsb
mov
je
orl
stos
mov
xchg
jnp
std
pmaddwd
lea
push
push
ret
sub
data16
out
push
and
sub
add
enter
mov
out
imul
add
add
subl
imul
dec
insl
xchg
adc
pusha
sbb
pushf
xor
andl
sbbb
stos
cmp
jl
or
pop
inc
int
aaa
inc
addr16
pop
pop
add
and
push
fists
cmp
or
mov
lods
add
add
cmc
mov
jo
pop
cmpsl
xor
push
sbb
xor
shr
call
movsb
sub
xor
add
data16
dec
jo
cltd
push
ret
rorb
lods
sub
xor
dec
and
xchg
mov
mov
out
inc
icebp
std
decl
pop
in
xchg
cs
pop
add
xor
mov
stc
dec
mov
pop
cmp
shlb
mov
dec
xor
call
mov
mov
shrb
xlat
ljmp
idivl
mov
pop
cmp
sub
add
in
dec
push
xor
push
or
pop
pop
add
or
push
and
adc
fmull
cmp
mov
ficoml
add
cld
push
or
xchg
pop
xchg
fbld
in
test
sub
fisttpl
bswap
xor
ficompl
rclb
xor
leave
ret
cmp
ja
xor
xchg
adc
loope
add
cmpl
mov
insb
js
es
call
les
mov
and
add
adc
es
push
test
xor
inc
xchg
int3
sbbl
andl
pop
mov
or
push
jno
xlat
lret
inc
outsb
jl
aas
mov
clc
sbb
inc
jmp
pushl
popf
or
iret
call
inc
lea
and
cmp
jo
ss
or
fldl
rcll
mov
mov
or
xor
xchg
or
shr
inc
push
inc
idivb
push
adc
sbb
or
add
mov
jl
andl
aam
sbb
adc
pop
and
cmpsb
adc
and
sub
outsb
inc
or
pop
loopne
jecxz
sub
or
fistpll
mov
dec
xor
pop
sahf
push
xchg
dec
outsb
aam
or
mov
cltd
adc
xor
loope
and
lahf
add
push
sub
aad
pop
and
push
test
or
xor
stos
push
cmpsb
add
test
mov
sub
inc
dec
mov
sbb
xor
mov
push
or
call
sub
adc
sbb
add
xlat
shr
pop
add
inc
dec
insb
dec
sbb
pop
dec
adc
pop
inc
xchg
xchg
mov
adc
inc
add
daa
sbb
fdivs
lods
sbb
add
sbb
out
jmp
pop
cwtl
hlt
push
fnsave
mul
push
nop
or
xchg
push
xor
lock
movb
je
fwait
call
call
dec
cmp
cmp
mov
or
cmp
xchg
xor
add
add
imul
sbb
or
jle
jle
add
xchg
adc
and
add
mov
jl
loope
xor
xchg
push
sbb
addr16
mov
scas
mov
dec
mov
jns
mov
add
mov
mov
mov
push
adc
inc
lret
in
scas
push
mov
leave
cmpsl
repnz
inc
add
mov
test
add
mov
mov
mov
and
cmp
add
enter
xor
aaa
inc
mov
add
outsb
cmp
rorb
xor
pusha
mov
cmp
push
push
test
adc
cltd
add
scas
xchg
jbe
aad
push
cmp
fists
hlt
add
cs
fdivs
cmp
jle
imul
push
mov
call
movhps
scas
xor
jne
mov
jmp
aaa
movl
dec
push
fs
into
mov
addr16
mov
xchg
mov
cmp
mov
shl
lcall
dec
jnp
ret
pushf
pushfw
inc
xlat
adc
aad
pop
repz
test
rcl
mov
fdiv
fmuls
mov
pusha
pop
and
pop
loopne
push
pop
dec
arpl
aaa
dec
push
jo
jmp
lods
add
xor
insb
movsb
mov
outsb
pop
push
push
pop
push
rorb
mov
imul
mov
sub
xchg
or
mov
dec
loope
jo
mov
inc
or
add
adc
xchg
add
jne
gs
popaw
jp
out
and
or
or
pushf
mov
je
pop
xor
orb
mov
xchg
xchg
dec
mov
cwtl
cmp
add
adc
and
push
addl
test
cmc
cmp
add
add
in
je
icebp
pop
mov
add
adc
dec
out
andl
cmp
xchg
adc
decl
dec
mov
adc
es
mov
push
jl
cmp
xchg
movsb
mov
add
test
loopne
rclb
lock
sub
mov
jo
in
cmp
rclb
add
push
mov
shlb
jge
cli
inc
adc
cmp
xor
fdivl
flds
mov
sub
mov
lods
fmull
adc
or
jae
xchg
lret
out
add
add
mov
sub
sbb
repz
mov
pusha
lds
lods
add
xor
dec
push
imul
pop
mov
pop
lea
dec
insb
add
movsl
push
xor
mov
sub
mov
sbb
cmp
mov
add
jge
adc
sbb
push
xchg
mov
cmp
loopne
xor
mov
loope
xchg
pop
push
repnz
testb
enter
dec
mov
push
mov
insl
add
push
mov
test
cmp
add
and
aas
cmp
xlat
fdivl
jo
je
xlat
push
psraw
es
jne
popf
inc
cli
push
cld
aas
mov
clc
rclb
mov
jge
movl
jg
inc
insb
shr
inc
add
jns
loop
lea
dec
or
adc
adc
rcrb
adc
cmp
sbb
or
pusha
insb
std
push
sbb
mov
in
adc
inc
cwtl
cmp
add
add
sub
popf
push
jge
sahf
mov
jo
add
lock
mov
pop
and
stc
dec
pop
imul
pop
loop
daa
dec
adc
sub
lret
mov
jne
add
jns
jno
xor
in
shl
cwtl
mov
icebp
pop
int
fwait
dec
insb
or
mov
adc
pop
xchg
mov
push
pop
xchg
pop
sbb
or
mov
mov
imul
jmp
inc
add
icebp
or
pop
lea
cmp
nop
lock
push
in
out
sub
jbe
movsl
addl
insb
sbb
adc
pop
sub
test
cmpb
ud0
mov
into
inc
add
movb
lds
or
or
push
cld
mov
xor
je
adc
push
movsb
mov
sub
dec
sbb
pop
inc
or
lret
das
xor
lds
or
push
jne
loope
push
sub
push
pop
mov
lea
fadds
and
fbstp
dec
je
aaa
or
shl
or
mov
dec
lahf
ficomps
lcall
jmp
add
mov
add
cmp
jg
mov
and
push
in
rcrl
xchg
insb
aas
scas
or
or
jo
call
inc
dec
pop
loope
popf
aaa
dec
cmp
sub
and
mov
lret
in
push
or
mov
jno
sbb
cmp
aad
loope
cmp
rcll
mov
add
popf
xor
pop
movsl
adcl
push
outsl
xchg
inc
push
pusha
shrl
mov
in
lea
movsb
push
cmp
xchg
push
fsts
lret
pop
lcall
mov
inc
adc
cmc
add
loop
jae
pop
fs
or
pop
movsl
loopne
inc
fs
fs
mov
cmp
sub
or
and
lea
push
inc
pop
sub
jo
inc
loop
jb
div
lock
aam
aad
fs
aam
out
pop
lods
pop
repnz
aad
or
mov
or
lock
in
loopne
pop
testl
add
js
xor
push
push
or
adc
or
inc
mov
imul
hlt
daa
icebp
mov
jge
xor
loope
xchg
popf
and
jo
sbb
pusha
xor
xor
rcrb
push
jmp
or
xchg
lock
sub
adc
mov
cmp
push
into
or
sbb
push
mov
mov
addr16
aad
sub
out
cltd
shl
inc
mov
testl
rolb
pop
xor
mov
push
xor
and
xor
xor
or
shrb
mov
cmpsb
add
adc
insl
jne
repnz
xor
mov
xor
pop
or
push
mov
inc
popa
push
push
jae
push
push
push
or
hlt
jl
push
cltd
in
fadd
sbbl
sub
pop
push
push
rcrl
aas
add
pusha
imul
dec
in
pusha
adcl
add
pop
cmp
pop
add
movsb
in
dec
mov
adc
sbb
add
dec
push
gs
inc
ss
loop
ret
testl
mov
shll
or
pop
cmpl
mov
push
rolb
andl
jo
xor
mov
imul
daa
mov
add
cmp
mov
movsl
mov
shrb
sbb
bound
and
mov
dec
lds
int3
sti
sub
xor
clc
add
mov
aam
sarl
in
cmpsb
sbb
arpl
or
addr16
push
or
in
inc
testl
aad
cmp
or
imul
das
push
xor
xchg
mov
mov
inc
push
push
sub
pop
es
shl
fistps
ja
cld
sub
adc
cld
push
or
mov
mov
mov
loopne
add
pusha
dec
push
les
pop
and
mov
pop
adc
push
and
inc
aam
imul
outsl
ja
andl
negb
and
sahf
sti
dec
ja
je
or
hlt
int
sub
sub
sub
xchg
inc
movsl
mov
das
adc
testb
sarl
gs
or
daa
loope
les
add
mov
lcall
mov
push
jmp
cmp
or
pusha
push
adc
adc
push
xor
inc
sbb
mov
adc
popa
or
sbbl
mov
inc
or
jbe
jbe
stos
add
push
cmp
push
push
adc
mov
mov
jg
outsb
lods
es
dec
inc
mov
clc
test
cli
gs
mov
sub
add
je
sahf
inc
ret
or
pop
adc
in
or
adc
in
cmp
push
xchg
adc
rolb
push
cli
and
adc
fs
or
pop
xor
sub
push
and
or
lret
or
je
sub
sub
mov
add
imul
pop
add
push
adc
lods
mov
outsb
mov
xor
daa
or
push
jnp
clc
enter
sub
test
mov
add
fs
and
mov
lea
mov
dec
or
sbb
mov
inc
nop
jns
stc
pop
and
cs
xor
cmp
cld
out
push
sahf
sub
rorb
shll
adc
mov
inc
das
mov
xchg
sub
sub
add
push
sbb
stc
sti
je
and
shlb
int3
sub
and
inc
mov
clc
mov
pusha
xor
into
add
push
push
scas
fdivs
mov
fdivrs
ret
in
mov
and
out
in
in
and
inc
xchg
add
sub
outsl
enter
xor
xchg
addb
xchg
daa
jecxz
push
inc
movsb
imul
jbe
xor
xchg
mov
and
and
outsl
lea
jge
mov
aam
and
mov
push
cltd
mov
imul
add
inc
sub
ror
inc
jb
sub
call
imul
lock
repz
push
sahf
and
cmp
call
inc
faddl
outsl
clc
ror
inc
xlat
ss
jge
and
cs
dec
sbb
xchg
mov
sub
ficoml
fcoml
in
xchg
out
inc
pop
and
in
sarl
sub
nop
or
andl
xor
cltd
shlb
bound
imul
addb
aaa
add
adc
dec
jge
idivl
sbb
dec
pop
sub
cmp
ja
or
scas
bnd
js
dec
fisubl
mov
sbb
add
test
mov
pushf
popa
push
icebp
jns
mov
rorb
rclb
je
sbb
or
adc
or
dec
ficompl
or
dec
roll
cmp
je
test
hlt
jnp
pop
mov
xchg
ficompl
outsl
push
pop
ret
and
pop
mov
mov
cs
fistpl
add
imul
cwtl
fidivrl
inc
enter
or
inc
push
jne
xor
adcl
fwait
jmp
mov
push
cmpsb
shll
lock
nop
jno
pop
inc
clc
data16
cwtl
mov
fmuls
inc
inc
mov
sub
and
xchg
xchg
pop
subb
cmpsl
dec
push
mov
je
and
fucomip
add
pop
nop
adc
mov
clc
or
xchg
xor
adc
push
pop
sub
mov
fwait
div
repnz
mov
add
adc
pop
adc
lea
mov
and
add
call
clc
sub
cmpsl
xor
or
push
cli
gs
xchg
mov
add
in
inc
dec
xchg
lock
push
sbb
xor
je
test
dec
cmp
notb
test
add
jg
les
test
call
jo
add
add
push
and
clc
mov
loopne
fadd
dec
pop
incl
orl
punpckldq
decl
pop
loope
inc
inc
subl
loopne
cwtl
or
dec
pop
add
or
gs
cmp
pop
jp
decl
pop
cli
xorl
addb
dec
mov
pop
lret
lea
rorb
test
call
mov
hlt
mov
insl
sbb
push
mov
dec
pop
push
push
popf
dec
adc
ja
mov
testl
jo
xchg
loopne
or
sub
ljmp
cwtl
adc
push
xchg
pop
fs
addr16
xchg
jg
push
sahf
or
mov
jo
call
push
inc
pop
sbb
das
cmpb
xchg
enter
mov
and
fcompl
hlt
or
jg
cmp
sub
addb
mov
enter
test
sbbb
test
add
les
or
push
sbb
das
rorb
cli
stc
mov
call
push
movsb
clc
shl
jns
or
lcall
xchg
lock
lcall
clc
ret
sbb
outsb
sarb
sbb
xchg
ss
dec
push
and
inc
adc
jnp
or
pop
pop
shll
push
arpl
pop
dec
adc
and
or
sbb
push
cmp
and
adc
cli
adc
adcb
outsb
xor
xchg
mov
test
mov
adc
add
bound
push
xor
push
add
pop
movb
sbb
xchg
test
adc
xchg
sub
pop
pop
call
sahf
adc
jne
add
out
mov
mov
mov
adc
stos
adc
enterw
sbb
push
loope
push
dec
fs
mov
ss
push
inc
xor
cmpsl
push
sub
loopne
cmp
xlat
push
dec
add
pusha
xchg
mov
cmp
xlat
rclb
cmp
sbb
inc
sub
hlt
jno
add
sbb
pop
fiadds
jecxz
push
test
or
jl
sub
in
aaa
stos
or
adc
adc
push
xchg
xchg
mov
es
mov
pop
adc
je
and
xchg
cs
mov
or
cli
call
lahf
inc
add
push
adcb
sub
je
call
mov
add
jno
or
jge
xchg
rorb
mov
cli
fmuls
fstps
sti
and
add
push
subl
dec
dec
cli
add
pop
je
or
push
cmp
push
cmp
mov
push
add
les
xor
push
inc
or
adc
test
add
inc
frstor
leave
mov
adc
adc
test
push
pop
jae
xor
lcall
aam
mov
mov
aad
dec
adc
fiadds
sub
pop
ss
push
insb
sub
int3
push
mov
addb
pop
dec
ret
dec
jecxz
and
pushf
push
adc
and
daa
cmp
subb
fstl
inc
adc
push
xor
adc
repz
pop
cmp
enter
push
jmp
and
and
cwtl
icebp
pop
dec
test
arpl
add
and
or
jno
sub
shlb
in
sbb
bound
out
dec
or
dec
cmp
and
push
int
pop
fs
sbb
sub
and
pusha
inc
inc
mov
fsts
sbb
cltd
add
iret
push
add
and
and
xchg
or
inc
mov
pop
add
je
lahf
xchg
inc
push
and
push
push
xor
xor
sub
sbb
ja
mov
mov
fsts
adc
xor
push
sub
xchg
iret
out
adc
adc
jns
sub
pop
push
dec
mov
pusha
cmp
jns
push
adc
data16
cmp
or
jecxz
sahf
xor
inc
ret
lahf
xchg
cmpsl
sbb
or
jecxz
es
add
and
inc
xchg
mov
pop
jns
push
dec
loopne
cwtl
inc
add
movsb
loope
sub
hlt
mov
je
mov
fs
dec
xchg
cmp
xchg
xlat
ja
push
ret
push
in
jmp
push
sbb
loopne
aas
push
dec
ret
je
push
push
inc
sbb
and
lds
push
dec
push
push
mov
movsl
dec
jmp
jge
loopne
lahf
leave
adc
stos
shlb
jl
or
ret
dec
call
fstl
call
mov
imul
xchg
add
inc
push
enter
sub
xor
fcoml
dec
and
std
inc
pusha
adc
or
rclb
mov
sbb
mov
push
pop
inc
or
insb
pop
lret
dec
loopne
test
cmp
mov
mov
push
inc
or
sbb
add
js
or
ficoms
cs
sahf
cmp
stc
fdivr
pop
jge
adc
push
loop
xlat
testb
mov
fmuls
jge
jecxz
or
sub
cltd
scas
adc
pop
orl
pop
xchg
repnz
push
js
sbb
loopne
aam
cld
stc
mov
icebp
loopne
filds
in
push
in
pop
mov
cmpsb
push
cs
jbe
xchg
call
cld
imul
testb
lock
out
pop
mov
sbb
fcmovu
arpl
jmp
imul
xor
xchg
fdivp
or
xor
push
adc
and
mov
std
pushf
pop
dec
xor
repnz
call
and
lock
push
jle
xor
add
push
fcoms
push
cmpl
daa
or
adc
daa
and
xchg
xchg
add
xor
mov
xor
pushf
loopne
mov
pusha
pop
ljmp
lods
mov
or
xchg
mov
dec
dec
ficoms
dec
or
and
add
inc
mov
aam
cs
ret
cli
mov
and
xor
xor
push
sti
inc
std
push
jo
add
cmpsl
jbe
inc
mov
ret
dec
sub
mov
xchg
lcall
rcr
xchg
sub
jns
call
inc
dec
cmp
imul
imul
or
dec
push
jle
popf
lret
jl
int3
mov
mov
stc
frstor
in
inc
adc
stos
and
mov
daa
add
sarb
adc
jbe
push
mov
pushl
mov
push
repnz
push
jl
cmp
add
jno
inc
mov
and
ret
inc
out
pop
cmp
jne
pop
adc
pop
stos
jbe
pop
cmp
jge
cmp
rclb
or
mov
pop
cwtl
mov
fwait
dec
jp
sub
loopne
sbb
cmp
sub
shl
call
push
fidivl
add
jl
repnz
rcll
mov
sbb
sub
enter
xchg
mov
mov
sbb
sbb
sbb
sahf
or
jmp
mov
mov
js
adcb
xor
aad
je
jnp
and
xchg
into
push
jp
mov
dec
or
add
xor
pop
movsl
pop
jb
jle
subl
js
pop
gs
mov
in
loopne
cmpsl
mov
add
pop
inc
fs
or
mov
inc
mov
pop
or
jp
fcompl
mov
mov
leave
test
adc
decl
sub
inc
movsb
push
inc
inc
or
xchg
ja
fstpt
dec
divb
imul
push
mov
mov
call
imul
mov
pop
add
jo
aad
push
xchg
add
sbb
xor
inc
jecxz
mov
arpl
and
lods
jmp
shlb
add
mov
lcall
push
lds
cmpl
xchg
es
cmp
popa
pop
pop
hlt
xorb
movsl
imul
mov
jno
aaa
test
inc
or
jns
mov
mov
test
adc
clc
push
mov
cmp
or
stc
fists
pop
outsb
inc
dec
dec
stc
add
test
pop
sbb
cmp
jo
cmp
adc
add
mov
cmp
push
sbb
outsl
loopne
mov
pop
adc
sub
aaa
stc
sub
leave
inc
out
fdivr
sbb
cmp
jbe
xchg
lea
lea
in
pop
push
jae
iret
ret
sbbb
and
mov
pop
add
in
cmp
shlb
int
sbb
mov
xor
sti
push
adc
xor
adc
add
or
enter
inc
push
cmp
jb
cmp
cmp
and
push
mov
xor
inc
jmp
xor
enter
js
cmp
push
push
push
pop
xchg
xchg
cmpsl
pop
pop
mov
inc
lods
push
jg
aam
mov
ret
cltd
cltd
ljmp
jno
sbb
cmp
inc
or
jo
add
out
aas
dec
mov
out
fdivs
andl
mov
push
cmp
lods
cs
jnp
add
or
add
jmp
negb
inc
lahf
add
nop
dec
rcrb
jmp
inc
orl
jo
fs
cmp
dec
leave
mov
sub
xchg
inc
inc
aas
mov
adc
push
add
popa
add
movl
shrl
lds
or
jecxz
adc
add
sbb
sub
ret
jne
inc
and
or
sub
adc
loopne
sbb
aas
pop
into
mov
pop
pop
ret
cmp
in
imul
inc
arpl
push
inc
sbb
in
mov
rorb
andl
jnp
inc
addb
mov
mov
std
sbb
inc
shl
insl
scas
push
xchg
or
mov
or
out
push
jbe
dec
fsubrl
pop
int3
js
insl
xor
cmp
fcoml
lock
andl
inc
fsubs
push
or
and
xchg
pushf
xor
test
inc
pop
cli
push
mov
nop
out
lea
push
push
lock
mov
stos
mov
adc
ffreep
rol
add
or
cmp
xor
ljmp
test
nop
sub
sbb
int
sbbb
cmpsb
rcr
loopne
push
jge
mov
mov
jecxz
add
push
pushl
clc
cmp
das
sbb
adc
xchg
push
insl
xor
cltd
jne
add
xchg
fwait
clc
cmp
xchg
ficompl
popl
pusha
lcall
and
test
shlb
imul
shll
fbstp
ret
andps
sbb
jecxz
adcb
push
loop
pop
or
ret
add
int3
fs
in
push
enter
test
stos
imul
clc
je
add
cmp
mov
imul
clc
rcrl
daa
in
lfs
std
ljmp
cld
adc
sti
sarb
cld
sub
loopne
stc
mov
push
test
inc
xchg
repz
outsb
sbb
inc
and
jbe
sub
lea
mov
push
cmp
mov
sbb
nop
mov
cld
and
aaa
dec
cmp
dec
scas
fcompp
jae
or
mov
pop
sbb
enter
icebp
sub
call
sbbb
adc
test
mov
adc
push
dec
pop
mov
cld
push
xor
sbb
sbb
inc
je
jge
pop
or
jp
inc
sbb
or
enter
out
fcoms
push
js
or
sbb
add
sbb
int
xchg
xor
lea
push
sub
mov
ret
mov
sti
jl
test
mov
cmp
nop
inc
inc
std
and
mov
sub
mov
inc
push
adc
or
push
dec
aam
mov
sub
dec
add
jmp
or
and
push
into
mov
sbb
out
divb
popf
and
shll
push
leave
outsl
call
pop
push
lcall
push
ja
rcrb
sub
test
pushf
mov
jns
stc
repnz
sub
or
mov
lods
jl
jns
rolb
inc
add
dec
and
dec
jmp
dec
je
and
test
aaa
ret
nop
and
cmp
mov
addl
inc
add
cmp
shrb
or
dec
hlt
push
xor
push
mov
and
add
add
sbb
dec
inc
mov
lods
fiadds
mov
pop
ljmp
add
adc
and
rclb
push
and
fsub
sub
icebp
pop
or
outsb
movsl
jno
es
xor
push
push
sahf
rcll
dec
adc
adc
in
cmpb
or
xchg
adc
inc
sbb
mov
lock
push
cmp
fldl
into
fcoms
dec
and
jns
shrl
pop
call
sub
mov
or
lret
jge
loope
int3
je
cmp
jae
movsl
add
cmp
dec
add
and
add
dec
popf
cmp
mov
dec
sub
push
push
cwtl
or
adc
sub
lret
xor
xchg
loop
xchg
lods
mov
mov
pop
or
pop
enter
xchg
mov
sub
addb
pop
adc
rep
bound
dec
pop
or
adc
jmp
sub
jae
add
dec
cmp
shlb
add
loop
mov
sbb
andl
mov
adc
pop
push
push
cmpsl
movsb
jae
push
inc
sti
dec
add
jae
mov
int3
cmpsb
xlat
lcall
in
inc
adc
loopne
adc
data16
and
andl
push
mov
jge
xor
push
outsb
test
xor
inc
xor
mov
xor
add
push
shlb
inc
xchg
mov
mov
push
into
repz
cli
adc
xor
and
adc
andl
sbb
pop
mov
sarb
add
add
lret
sbb
or
push
mov
dec
rolb
mov
mov
cmp
sete
add
add
in
mov
jmp
cwtl
adc
mov
jl
inc
sahf
pop
inc
mov
and
cld
sub
add
add
inc
ds
jbe
inc
xchg
cmc
enter
lods
pop
adc
xor
mov
push
cld
clc
pusha
outsb
push
sysret
rdtsc
xor
cmp
add
lret
loop
push
test
pusha
jnp
pop
adc
push
movsl
inc
sub
sbb
ret
sub
dec
push
adc
dec
in
mov
push
adc
call
mov
push
or
sahf
push
mov
pop
push
js
push
in
xchg
and
or
or
adc
adc
jno
incl
sub
mov
sbb
rclb
inc
loopne
cmp
xor
sbb
lods
push
pop
cs
mov
mov
add
adc
inc
test
mov
push
sbb
and
popa
aas
imul
sbb
decb
inc
lods
je
add
add
push
movsb
dec
sbbl
lock
dec
jo
push
jno
insl
jmp
scas
subl
sbb
hlt
pop
adc
mov
xchg
push
testl
mov
cmp
cmp
jl
orb
or
adc
stos
jno
outsl
es
icebp
subb
mov
push
inc
xchg
push
sbb
adc
and
js
sahf
popa
pop
popa
stos
sbb
scas
xchg
cmp
mov
push
mov
into
call
call
leave
lret
mov
xchg
adc
adc
sbb
push
rclb
inc
test
clc
adc
rol
sbb
adc
or
sti
test
shrb
es
push
jns
inc
and
push
sub
add
push
mov
fisubl
inc
adc
stos
push
sbb
add
pop
xchg
inc
push
shl
pushf
loope
push
cmp
in
cmc
insl
insl
push
adc
rcrl
cmp
pop
cmp
dec
push
call
push
cmp
sbb
mov
or
add
dec
outsb
cmp
je
add
test
inc
adc
out
adc
push
aas
inc
sar
cmp
jbe
or
add
inc
or
jmp
ret
and
lock
adc
rcr
dec
sub
jecxz
addl
push
aam
jp
repz
mov
je
cmpsl
xchg
jecxz
cmp
pusha
xchg
jmp
or
dec
inc
decb
add
lock
lea
mov
fdivp
mov
mov
adc
imul
mov
pop
dec
outsb
xor
sarl
xchg
pop
std
sbb
jl
pop
in
mov
pusha
lea
lock
jne
mov
ds
addl
xor
je
pop
sbb
leave
inc
ficoms
or
or
adc
push
loopne
mov
pop
pop
jne
call
mov
and
leave
enter
pusha
add
dec
call
mov
orl
pop
shlb
and
or
inc
testb
stos
and
sbb
enter
cmc
push
in
push
arpl
dec
add
jne
sub
outsb
sar
lea
jp
cmp
cmp
lods
push
push
adc
push
aad
jae
jb
pushl
mov
jle
fmul
pop
or
pop
jmp
xor
jae
adc
add
adc
cltd
pusha
mov
sbb
arpl
or
jb
dec
push
mov
sub
mov
cmp
pop
cltd
imul
lock
pop
add
fcmovne
mov
repnz
loopne
je
mov
jle
pop
mov
loopne
add
pop
jmp
leave
mov
je
aas
sub
hlt
mov
xor
jmp
cmpsb
inc
mov
lea
daa
xchg
dec
sub
xor
jns
popa
or
inc
and
push
mov
movsl
arpl
std
xchg
sbb
mov
aaa
lahf
adc
mov
inc
add
xchg
sbb
dec
mov
push
insb
sbb
or
add
pop
dec
push
jmp
adc
daa
or
jbe
cmp
sbb
popf
dec
push
test
mov
in
mov
add
mov
mov
mov
dec
adc
insb
or
adc
mov
sub
sub
mov
sub
mov
or
cmp
mov
ja
dec
add
add
mov
add
add
or
cmp
or
pushw
push
adc
outsb
inc
outsl
push
pop
loopne
add
sbb
push
pusha
mov
add
and
xchg
bound
add
enter
sub
dec
das
sahf
mov
mov
ss
cmp
xchg
mov
add
jl
push
pop
sub
pusha
push
inc
inc
aas
and
nop
add
js
add
nop
and
mov
aam
in
add
in
add
nop
sub
jb
sub
jb
add
cwtl
cs
jb
cs
das
pop
cmp
jmp
push
push
xorb
push
mov
and
xor
lret
add
pop
mov
mov
test
xor
sbb
fstpt
jnp
ffree
cmp
or
cmp
or
pusha
push
xor
push
jecxz
cli
fisttpll
adc
xor
mov
adc
adc
dec
sbb
mov
dec
mov
xor
inc
add
or
pop
dec
js
movl
lods
dec
add
rcrl
test
or
fdivrl
adc
rclb
lret
add
xchg
shlb
adc
xchg
jbe
push
movsl
imul
inc
pusha
add
adc
mov
dec
sub
xor
aad
in
addb
mov
popa
das
cmp
out
cmc
stc
pop
mov
imul
and
pop
dec
fimull
push
and
test
xchg
fbstp
inc
push
push
call
inc
adc
cmpsb
add
outsb
dec
xchg
add
xchg
pop
push
cwtl
enter
fidivrs
ds
pop
adc
pop
fadds
ja
je
mov
movaps
rol
xchg
ss
push
movb
scas
mov
jnp
pop
addr16
add
sub
test
clc
addb
sub
int
xor
fbstp
in
mov
addl
bnd
pop
fcoml
cmp
dec
mulb
out
je
push
xchg
in
push
mov
repnz
stos
lock
or
pushf
lock
cmp
das
or
rcll
mov
push
rcrb
jae
jne
sbb
sbb
imul
jo
sbb
inc
call
arpl
ljmp
lock
dec
pop
shl
cmpl
out
ret
imul
mov
inc
repz
cmpb
jae,pn
or
push
outsb
mov
mov
or
subb
jmp
movsl
mov
xor
lds
jmp
cmp
in
jmp
cmc
jno
adc
lock
aaa
sbb
shll
std
xor
add
jecxz
sbb
clc
pop
mov
adc
pushw
push
lods
dec
sbb
and
cmp
jg
addr16
cmp
push
outsb
mov
add
nop
push
icebp
adc
stos
sbb
aad
push
inc
add
rcr
add
nop
cmp
loopne
les
adc
mov
lock
adc
jmp
adc
and
cmp
xchg
shlb
inc
push
ljmp
mov
add
cltd
cmp
xorb
cwtl
push
mov
add
fistpll
repz
add
pop
or
ss
test
lret
or
push
xor
and
or
push
ljmp
fdivr
or
aaa
mov
or
adc
or
rolb
js
les
movsl
jns
add
paddb
cwtl
or
add
loop
inc
inc
repnz
stc
mov
cmovbe
or
ret
in
and
imull
sub
adc
adc
sbb
subb
sub
sub
ret
push
es
and
cmp
clc
xor
xchg
inc
adcb
out
inc
int3
or
jnp
adc
jge
out
or
gs
jbe
pop
repnz
sub
add
clc
dec
cmc
xchg
leave
lock
repnz
jmp
daa
push
aaa
and
jmp
aas
or
into
mov
shll
iret
dec
rcrb
jb
adc
inc
insb
cld
repz
lahf
xor
ljmp
add
jl
cmp
jle
cmp
push
jp
lcall
inc
cmp
aas
lods
mov
sbb
cmp
cmp
jge
mov
pop
and
cmp
jl
test
ljmp
je
cmp
je
jne
popa
pop
xor
repnz
jo
daa
mov
iret
jae
mov
adc
and
pop
clc
lar
fwait
add
or
jle
clc
shll
add
push
es
xchg
dec
lds
dec
scas
pop
mov
pusha
or
dec
enter
pop
sbb
imul
cmpsl
xor
jmp
push
sbb
loopne
jge
and
aaa
sub
pop
jb
jne
movl
loopne
pop
sbb
cmp
insl
jmp
pop
dec
aam
jecxz
sub
out
add
sbb
test
xor
lea
popf
add
xchg
mov
sub
xchg
xchg
lods
repz
push
jne
dec
jmp
or
push
and
xchg
loopne
adc
sub
mov
xor
sahf
jle
xor
sbb
mov
mov
xor
es
js
cmp
or
faddl
inc
push
sub
mov
scas
call
sub
mov
cmp
filds
jl
jo
cmp
mov
pop
loopne
mov
sbb
imul
or
lea
mov
fiaddl
inc
test
cmp
pop
add
inc
call
add
insl
add
adc
xchg
mov
mov
mov
xor
mov
mov
mov
mov
dec
inc
xor
ret
xchg
sbb
jecxz
adc
inc
lret
scas
mov
pop
pop
pusha
aaa
mov
ret
push
rcll
cmp
cmpb
mov
add
inc
aam
lea
sub
inc
in
xor
inc
ficomps
or
xchg
mov
popl
and
mov
xor
imul
loopne
add
jne
push
inc
mov
sbb
aas
lea
cwtl
xor
sub
push
stos
mov
xor
or
add
xchg
mov
mov
and
jbe
cltd
jmp
xchg
push
or
push
pop
or
sti
imul
xchg
ret
addb
xchg
icebp
cmp
inc
inc
jle
and
add
add
rclb
cmp
inc
sbb
roll
xchg
push
and
shrb
inc
subb
push
ja
aas
dec
loopne
mov
sbb
adc
jne
cld
dec
shl
jbe
jmp
push
lsl
lock
jmp
sub
push
mov
rcl
rcrb
add
lret
outsb
loope
mov
sub
cmp
dec
pop
fucomi
jae
or
cmp
push
push
test
inc
sarl
adc
inc
out
aam
aad
jnp
xchg
fcoml
xchg
push
int3
les
push
adc
add
into
jno
add
or
jmp
and
adc
sub
pusha
ljmp
sbb
jo
into
pop
xchg
fldt
jnp
or
mov
icebp
fwait
sub
out
movb
fsubrl
jno
cmp
cld
in
xor
inc
stos
xorl
mov
adc
xlat
inc
cmp
in
fildl
or
je
cmp
ficompl
adcb
and
pop
push
push
mov
pop
jle
jg
sbb
inc
rol
xchg
faddl
dec
loopne
mov
xor
push
ja
xor
and
int3
fs
stos
lock
jp
dec
add
and
jne
cwtl
sbb
leave
in
dec
mov
popa
adc
sbb
or
push
insl
inc
inc
iret
inc
repnz
mov
shlb
mov
mov
pop
je
fwait
adc
dec
fs
clc
or
shl
pusha
fs
inc
outsl
addb
lock
lahf
push
lods
add
adc
jne
mov
push
stos
lea
repz
in
jno
jg
repz
sbbb
pusha
mov
icebp
mov
shll
mov
and
daa
push
insb
jmp
xchg
cmp
push
loopne
adc
stos
inc
cwtl
jbe
fdivrs
adc
add
pusha
stos
inc
and
mov
in
and
cmp
loopne
add
or
jle
enter
loopne
mov
sub
repz
rclb
push
or
push
push
jae
sub
adc
sti
sti
cld
pop
xchg
sbb
ljmp
inc
hlt
pop
adc
sahf
and
adc
lret
jl
push
push
hlt
jg
mov
sub
cmp
rorl
and
in
xor
ret
and
push
mov
orl
repnz
fcmovne
inc
lock
or
decb
inc
jle
pusha
fcmovb
add
pop
ret
mov
add
inc
jne
js
xchg
mov
dec
movsb
pop
cmp
push
jg
mov
sub
scas
push
push
add
outsb
or
cmp
pop
test
aaa
xchg
sub
lea
mov
imul
push
mov
inc
add
aam
mov
add
dec
jns
jb
rolb
mov
dec
das
inc
push
sti
adc
pop
add
add
or
or
pop
data16
mov
jmp
gs
adc
sahf
push
pusha
cs
sub
cmp
or
mov
cmp
cmp
lods
shll
movb
xchg
xchg
pop
and
cmpsl
mov
dec
clc
ret
jmp
adc
fcoml
inc
adc
enter
pop
jmp
stos
pop
mov
rclb
push
jmp
mov
ss
lea
add
or
adc
gs
pop
or
movq
cmc
xchg
push
push
adc
imul
jmp
in
mov
dec
mov
mov
adc
push
lea
test
in
pusha
mov
call
test
aam
jp
mov
sub
xchg
sub
test
xor
jo
inc
sbb
shrb
pop
cltd
push
or
inc
in
dec
mov
popl
pop
jle
push
sbb
inc
test
mov
js
or
pusha
sub
faddl
jl
stos
in
cmp
push
fldl
pop
daa
stos
cmpb
fstpl
add
fistl
mov
data16
aaa
adc
adc
iret
iret
repz
push
divb
or
jne
shl
cmp
cli
jne
or
stos
dec
pusha
mov
leave
loopne
fldz
add
pop
andl
jne
filds
in
or
mov
pop
lea
setae
loopne
jg
push
xor
fistl
aam
arpl
mov
adc
jecxz
loop
mov
cltd
xchg
shlb
xchg
or
add
ret
out
lret
les
aas
sbb
fmuls
adc
jae
repnz
push
lea
or
fidivrs
dec
pop
sbb
loopne
ret
fcom
or
pusha
inc
ffree
jge
or
ret
jne
cmp
inc
in
test
push
or
fimuls
ja
outsb
sti
movsl
pminub
push
push
mov
mov
test
scas
daa
push
and
lret
or
int
mov
fcomp
or
add
push
aam
jl
jmp
movsb
popf
xor
enter
push
jbe
roll
push
pop
enter
fcmovbe
sbb
iret
add
lock
aad
dec
mov
add
test
or
clc
js
or
push
xchg
push
enter
jbe
fidivl
ret
lret
sub
sbb
push
and
in
push
push
adc
xor
jo
pop
xor
or
inc
jne
ds
nop
push
or
adc
add
xor
mov
inc
aaa
addl
mov
add
or
outsl
or
pop
or
push
dec
mov
bound
pop
test
pop
inc
push
or
push
and
adc
lret
lods
push
fistpl
push
jle
pusha
mov
add
outsl
das
xor
xor
mov
add
dec
enter
add
xor
imul
fs
push
jns
pop
enter
or
jo
cmp
sbb
jmp
mov
or
int3
cmp
xchg
rorb
jb
mov
or
imul
xchg
xchg
or
or
adc
in
faddl
in
pop
inc
jo
loopne
lds
inc
dec
add
pmulhuw
mov
dec
xchg
adc
mov
add
push
popf
mov
push
ror
enter
xchg
sarb
mov
test
mov
xor
lea
mov
inc
arpl
das
xchg
fisubrl
jge
sub
or
clc
or
mov
imul
add
rcl
loope
outsb
enter
or
scas
pop
ret
cs
jle
cwtl
mov
sub
push
pop
cmp
jle
sub
fisubrl
pop
or
daa
imul
or
add
scas
or
push
adc
add
sti
jle
leave
push
je
sarb
nop
subl
push
add
add
nop
data16
mov
jbe
leave
jl
lock
pop
sbb
hlt
cld
cmp
jl
mov
cmpsl
adc
aad
fistpl
je
add
xor
pushf
lods
mov
mov
imul
inc
adcb
aam
mov
jnp
ud2
sarl
arpl
mov
addl
xlat
bound
push
mov
inc
orl
pop
lret
xchg
push
sti
and
enter
in
push
les
cmpsb
lods
xchg
imul
cmp
dec
jb
cmp
call
out
push
dec
test
insb
add
cmpsb
cwtl
mov
push
stos
push
bound
rcr
fsts
xor
and
sub
subb
mov
push
pop
aas
xchg
inc
inc
xor
mov
push
aas
xor
jmp
pop
call
mov
pop
vmwrite
cmc
roll
sub
shl
adc
jne
xor
sub
jo
lret
cmp
add
int3
mov
and
test
enter
sahf
mov
mov
cmpsl
cmpsb
mov
clc
xchg
mov
mov
or
add
adc
sub
rolb
outsl
sub
jl,pt
sbb
xchg
pop
inc
mov
jle
popa
mov
or
mov
lret
pop
inc
scas
imul
pop
je
inc
xchg
xchg
dec
lret
add
movsb
jmp
inc
pop
xor
and
add
ret
loope
adc
clc
cmp
add
ds
rolb
and
lods
cmp
xor
scas
out
pusha
in
jno
sti
daa
jnp
push
add
jae
imul
push
iret
pop
jp
mov
adc
sbb
and
sbb
push
sbb
orb
xchg
push
push
push
sbb
push
mov
mov
mov
pusha
ret
enter
dec
cmp
jl
pop
sarb
das
push
rorl
or
loop
push
aaa
movsb
int3
cld
outsb
cmp
popf
orb
rorl
push
push
jo
ret
clc
ja
outsb
and
push
mov
pop
fs
inc
or
andl
push
jbe
fcoml
pushf
in
nop
mov
js
rorl
mov
imulb
adc
enter
subb
xor
sbb
cmp
mov
ret
and
pop
js
cmc
pop
push
cmpsl
xchg
jle
jno
add
jecxz
mov
pop
mov
int3
push
or
pop
add
adc
and
pop
loop
sti
test
lock
sbb
pop
xor
mov
xor
aaa
mov
bound
mov
mov
sbbl
sbb
dec
lahf
adc
lahf
les
nop
mov
fiaddl
lahf
enter
xor
test
jne
out
pusha
test
xchg
add
lahf
scas
push
add
fists
test
fstpt
cmp
lock
jo
je
ds
pushf
test
mov
je
out
dec
push
xchg
out
xor
xchg
cmc
push
jae
push
push
sub
adc
mov
push
and
in
icebp
ret
test
sarb
pop
fimull
fnstenv
inc
xor
xchg
adc
shl
or
xchg
dec
add
sub
arpl
lods
mov
pop
sbb
orl
outsl
stos
loopne
and
sub
mov
sbb
mov
mov
aad
add
or
mov
xchg
movsl
lea
xor
loop
mov
xlat
mov
call
jg
pop
ret
mov
adc
sbb
mov
add
mov
in
jmp
aaa
pop
movsl
jbe
dec
add
popa
adc
pusha
movb
insl
mov
lods
les
jecxz
ror
insl
add
mov
adc
incb
ljmp
xchg
arpl
outsb
add
mov
push
or
lfs
mov
fisttps
mov
or
pushf
sbbl
and
mov
dec
xor
ret
dec
adc
dec
int3
and
dec
sarl
sub
jno
pop
adc
sbb
rorl
push
add
insb
pusha
or
cmp
or
int3
mov
cs
adc
ret
sbb
fsubrp
js
cmp
xor
xor
ffree
and
xor
mov
addr16
sbb
lock
adc
out
dec
aam
xchg
ret
push
loopne
adc
shll
adc
lahf
lods
push
inc
mov
das
popf
mov
test
or
push
pop
add
push
add
outsl
inc
pop
cmp
pop
mov
shrl
dec
push
pop
addl
jge
cwtl
popa
mov
add
dec
das
mov
neg
pusha
push
push
add
stos
lods
fldt
sbb
xchg
inc
xor
xchg
push
sbb
mov
mov
loopne
shrb
dec
jno
loopne
add
clc
jno
fimull
jnp
ret
aam
push
cmp
and
xchg
inc
push
sbb
jne
inc
fnstenv
dec
cld
leave
stos
push
shll
or
adc
out
mov
shrb
cmp
pop
push
mov
aaa
mov
jnp
aad
add
dec
dec
ja
dec
add
add
fsubrl
sub
mov
add
loopew
jns
xlat
inc
inc
inc
mov
pop
inc
push
inc
and
push
fs
xor
mov
ljmp
ljmp
dec
loope
sub
adcl
js
jg
clc
or
pushl
sbb
fs
xor
fucom
insb
jo
js
mov
js
inc
adc
sbb
add
dec
mov
imul
aam
popf
add
push
imul
push
outsb
addl
cmp
lods
movsl
push
jle
lret
jmp
cmpsb
int
je
adc
mov
mov
xor
fiadds
add
xchg
push
fcmovnb
or
pushf
push
mov
add
push
pushf
test
pop
xor
imul
sbb
jns
mov
lock
or
outsl
or
xor
inc
movsb
imul
cmp
or
and
pop
sub
or
jae
cli
cmp
or
dec
outsl
dec
sahf
xchg
mov
hlt
mov
and
add
mov
add
dec
inc
cld
pushf
xor
cmp
adc
scas
sbb
dec
repnz
or
add
push
cmp
mov
ja
xchg
push
jae
mov
and
daa
pop
jp
and
out
clc
xor
fstl
and
push
sti
adc
add
jne
rorb
addr16
cmp
leave
ja
sbbl
shrb
adc
or
sub
jnp
mov
and
cwtl
and
addr16
sti
push
sub
xchg
mov
sub
loopne
and
and
or
or
or
xor
shrb
sub
sub
cmc
lret
cmp
jae
cmp
and
pop
nop
or
js
cltd
lods
xor
mov
pop
sub
repz
sbb
and
subb
popa
cmp
adc
out
hlt
push
xor
add
fisubs
push
add
pop
cmp
aaa
sbb
sbb
insb
xor
cmp
je
aas
dec
sub
jl
pop
cwtl
cmp
pop
adc
loope
sub
stc
add
imulb
add
inc
add
sbb
adc
ljmp
inc
mov
arpl
xchg
cld
pusha
les
jl
add
mov
mov
inc
add
and
add
or
or
add
popl
ss
pushf
in
or
vpmulhuw
sarl
push
rclb
xor
rorl
imul
pop
push
ficoms
rolb
out
loopne
add
test
jge
out
lock
fs
aad
push
rcrb
adcb
subl
lret
xor
xchg
jnp
test
ret
adc
pop
pop
sbb
mov
adc
test
faddl
loopne
or
add
push
insb
sbbl
fisttps
fstps
sbb
into
dec
ret
adc
cmp
jb
enter
sbb
inc
xchg
sub
mov
xchg
xor
push
test
adc
push
xchg
sub
rol
inc
das
popf
shl
add
push
mov
in
out
or
mov
inc
mov
sbb
push
stos
dec
dec
push
negb
mov
jno
lock
ds
sbb
mov
aad
scas
arpl
loope
sub
xor
sub
and
pop
pop
mov
push
add
jle
jbe
push
pop
sbb
sbb
sti
mov
stos
push
jmp
stos
xor
sub
pop
shlb
jle
ss
ret
data16
push
insb
clc
lock
aas
into
push
push
dec
mov
jle
test
outsl
jns
cmp
das
ja
fmuls
xor
clc
jbe
mov
mov
inc
jl
shll
test
or
sbb
pop
addr16
inc
inc
in
jne
aam
or
push
out
xchg
repz
cmp
jae
inc
ret
mov
bound
inc
pusha
jmp
orb
mov
inc
jbe
xchg
popa
ret
outsb
ljmp
cwtl
or
jge
mov
adcl
inc
clc
sbb
lcall
shlb
or
insl
loop
imul
movsbl
add
inc
mov
mov
jle
loopne
xor
add
jno
and
cmp
je
aas
cld
mov
mov
outsb
xor
xor
and
cmp
jne
inc
sub
loope
pop
aam
pop
std
xchg
sbb
jne
jmp
fstpl
popa
and
sbb
add
xor
fdivrl
loopne
les
adc
rcrb
push
dec
add
cmpsb
loope
jecxz
adc
sbb
sbbl
fldl
std
pop
mov
imul
clc
lcall
and
clc
push
je
pusha
nop
jge
je
fldz
out
cmp
sbb
xchg
jmp
fsub
pop
fsubrp
enter
sub
mov
scas
mov
cmp
pop
add
and
jno
add
xchg
int
add
and
xor
push
or
fsts
imul
rep
out
movb
cmp
je
add
ret
push
dec
adc
test
nop
adc
imul
sub
inc
sbb
ss
in
sub
push
push
push
sub
or
sub
lahf
dec
jb
cmp
sbb
add
dec
lahf
add
mov
iret
jae
push
iret
dec
adc
cmpsb
shrl
out
int3
adc
int3
xor
outsb
and
movsl
adc
mov
xor
and
pop
call
es
mov
xchg
popf
and
jp
and
daa
lahf
nopl
adc
lea
sub
or
scas
fs
and
stos
and
sub
notb
push
enter
push
lods
cmp
lret
add
adc
cmpsl
pop
notl
cld
inc
adc
lret
aaa
leave
sbb
sub
mov
mov
in
and
push
in
and
popf
sbb
and
or
push
pop
imul
adc
pushf
lret
out
pop
push
jecxz
dec
mov
mov
int3
and
xchg
insb
xor
xor
enter
and
push
lret
cmp
push
push
leave
pop
and
xchg
dec
pop
sbb
lret
insb
xchg
or
bound
xchg
test
xchg
loope
sub
inc
aas
or
aaa
add
cmovnp
adc
jmp
and
lock
add
and
xor
adc
jns
xor
and
fs
add
cmp
cmp
iret
or
dec
push
push
sbb
dec
mov
ror
ss
jl
sub
xchg
iret
jmp
daa
movsb
adc
nop
outsb
shlb
cwtl
in
add
and
inc
or
mov
sti
stos
jns
cmpsl
in
or
lods
push
sbb
jns
out
jb
xchg
movsl
dec
repz
mov
fcoms
lods
and
cmp
repz
push
gs
repz
repz
test
imul
scas
and
sahf
out
sahf
inc
push
fs
xchg
dec
sahf
out
test
lret
pop
and
fcomi
test
push
je
xor
or
sub
repnz
adc
or
mov
fdivrp
pop
mov
adc
lahf
rclb
int3
mov
lods
cmp
xlat
pop
int
in
inc
mov
and
add
cwtl
icebp
inc
jl
push
mov
sub
scas
add
cmp
add
cmp
mov
jge
xchg
iret
aam
add
and
dec
jo
pop
push
xchg
ret
ror
pop
jl
popa
add
cmc
shll
mov
cmp
mov
mov
push
mov
or
or
and
jns
lret
aad
adc
mov
push
pop
js
inc
xlat
ds
inc
sbb
xchg
push
jecxz
and
add
andb
sbb
lock
add
popa
mov
pop
daa
push
mov
enter
xchg
iret
push
jb
shlb
push
out
or
iret
add
xchg
xor
ds
mov
dec
pushl
xchg
dec
add
push
lds
or
push
adc
and
filds
jp
push
push
fistpl
pop
enter
pop
or
add
loopne
mov
add
cmpsb
dec
hlt
mov
addr16
movsb
sbb
add
push
orb
iret
xor
push
push
cmp
push
sub
mov
pop
jo
add
es
sub
enter
out
in
push
popa
add
and
or
xor
call
std
or
push
xchg
or
jnp
rolb
nop
sub
in
sbb
dec
pop
sti
dec
popf
mov
or
push
or
or
pop
test
mov
mov
mov
add
mov
sbb
add
out
inc
xor
ret
mov
out
xor
rorb
outsl
add
mov
jg
adc
seto
sbb
out
or
pop
enter
inc
fnstenv
or
or
jae
push
das
cmp
lahf
ret
xchg
das
cmp
xor
mov
adc
cmp
push
or
mov
pop
lods
inc
ret
push
push
add
scas
or
cmc
push
push
cmp
push
movsl
ret
sbb
pop
cmp
sub
and
pusha
xor
repnz
cmp
ret
leave
adc
popa
ja
push
or
hlt
mov
inc
jb
or
jb
sub
enter
popa
mov
or
adc
sub
ficompl
movl
jg
and
adc
jge
mov
imul
push
cltd
in
add
cmp
push
jns
sbb
dec
dec
push
in
pop
mov
or
push
je
adc
addr16
repnz
pop
dec
cmp
lgdtl
and
push
push
dec
adc
jl
add
push
nop
iret
push
xchg
add
add
jne
xchg
or
js
and
mov
popa
dec
sbb
add
or
sbb
dec
mov
xchg
xor
push
ret
push
sub
cwtl
iret
cld
adc
test
jg
stos
pusha
jo
jg
inc
add
mov
sbb
jb
frstor
add
cli
mov
nop
sub
xchg
stc
popf
adc
imul
mov
push
push
sbb
cmp
mov
test
or
stos
jae
pop
push
inc
mov
sbb
sbb
cmpsb
lea
or
add
xchg
sbb
iret
scas
mov
nop
nop
popf
add
or
push
push
nop
jmp
mov
lahf
sbb
and
dec
adc
xchg
xor
ret
movsb
pop
ret
jb
sbbb
inc
add
push
push
or
or
fwait
rorl
xor
xor
mov
push
and
insb
mov
adc
stos
xchg
sbb
fstpl
xchg
inc
sahf
and
xor
into
add
or
or
mov
and
sub
inc
or
loope
subb
sub
sbb
cli
lcall
pop
sbb
push
cmp
les
add
mov
push
adc
and
jno
mov
push
lods
sub
aas
mov
xor
and
fwait
sbb
add
adc
in
leave
add
fwait
cwtl
punpcklwd
mov
rcrb
pop
jae
push
push
or
cld
pop
rolb
xor
mov
popf
std
sahf
push
cmp
mov
xorb
dec
add
and
in
push
jae
ficoml
add
dec
mov
xchg
mov
lods
cbtw
or
in
dec
xor
mov
imul
stos
cltd
push
cmpb
adcb
je
jnp
mov
sarl
sbb
adc
xchg
pop
pop
or
or
dec
adc
add
addr16
pusha
adc
dec
ret
movsl
fisttps
or
inc
mov
loope
loopne
pop
adc
aam
lds
xlat
mov
ds
test
mov
push
adc
or
add
pusha
sbb
adc
fisubs
add
scas
push
ret
add
fs
stos
movsl
shrl
aas
mov
mov
imul
sbb
mov
movsl
popa
push
xor
sub
sbbl
mov
pop
jae
or
add
mov
xor
mov
or
dec
dec
and
add
push
sbb
cmp
adc
mov
add
out
xchg
add
les
rsm
out
push
jl
push
sub
fsubl
push
into
push
push
test
daa
push
push
nop
loopne
push
or
mov
xorb
adc
es
rorb
push
dec
push
sub
aaa
shl
pop
mov
dec
outsl
cmpb
and
rol
add
js
cmp
xor
in
mov
dec
adc
or
cmp
push
adc
add
push
popf
int3
sub
mov
or
hlt
ds
mov
xor
xor
ret
jne
pop
mov
loopne
cmp
jns
fsubs
pusha
add
adc
dec
or
cwtl
mov
or
decl
push
pop
xlat
clc
push
jecxz
pushf
fcompl
daa
add
loope
lock
roll
dec
pop
ret
push
cmpb
ds
lds
pop
call
leave
pushl
mov
cmp
cmp
sbb
adc
push
jl
pop
inc
in
movsb
ja
or
mov
incl
push
cmp
aam
dec
outsb
mov
xor
sub
cmp
shrb
testb
jmp
cmp
jl
or
sbb
popa
idivl
mov
cmp
cmp
je
mov
mov
push
decl
ret
inc
inc
jmp
movb
mov
push
cltd
pop
idiv
jbe
dec
inc
cmp
cmpsl
in
pop
cmp
out
xor
adc
add
sub
rcrl
sbb
add
test
les
mov
movsb
stos
nop
xor
mov
mov
cltd
or
lods
loop
fcmovnb
test
xor
jmp
orl
dec
or
sbb
push
lock
in
hlt
incb
push
in
sbb
mov
xchg
iret
cmp
sub
dec
faddl
adc
out
lods
cmp
lret
fnstsw
push
push
ret
xor
sub
mov
int
pop
inc
dec
enter
pop
jns
push
imul
fisttpll
push
rolb
dec
lea
fistpl
adc
popa
or
inc
sbb
add
pop
enter
loopne
neg
lods
andl
and
mov
jne
or
cmc
sub
push
fisttpll
or
push
xlat
add
push
and
inc
pop
and
mov
mov
call
pushf
hlt
add
enter
cmp
push
push
lods
mov
fwait
adc
pop
cmp
mov
push
or
orb
and
pop
dec
gs
inc
notl
adcl
jg
in
mov
int3
jne
js
daa
push
jl
lret
scas
sbb
iret
cli
pop
pop
jns
ret
into
ret
sbb
cmp
enter
daa
xchg
enter
xchg
push
xchg
mov
xor
mov
call
pushf
pop
push
push
xchg
ss
push
js
cmp
outsl
nop
sbb
sbb
jns
iret
and
push
pop
jbe
and
rcrb
dec
imul
xchg
pop
jae
and
dec
ja
pop
and
and
shr
mov
and
inc
ja
sub
sbb
inc
loopne
jb
mov
test
and
idivb
loope
and
cs
idiv
iret
in
mov
fwait
and
xor
fs
dec
lds
fs
push
outsl
repnz
push
sub
push
fldenv
push
inc
inc
adc
fs
fwait
or
cmp
cwtl
xchg
xchg
dec
dec
dec
nop
pop
xor
andb
in
leave
adc
aam
dec
xchg
lods
setae
xchg
mov
stos
jl
int3
test
adc
push
subl
sub
sub
mov
in
sub
push
fsubs
xor
xchg
inc
insb
stos
mov
xor
add
divl
xor
js
cmpsl
iret
xor
sahf
sbbb
push
inc
sti
fcomps
pop
push
rcrb
lret
and
lahf
inc
mov
jb
jnp
fldz
test
xor
out
mov
pop
mov
inc
mov
fwait
pop
insl
or
add
clc
adc
loopne
mov
jl
adc
mov
pop
inc
mov
inc
dec
loopne
movsb
movl
outsb
minps
push
es
or
pusha
test
jo
cmp
cmp
ret
mov
movsl
nop
jge
inc
loope
mov
jmp
xor
pop
in
adc
enter
push
ds
aas
or
sysenter
pop
sarb
or
rclb
imul
ja
pop
push
inc
dec
and
aam
jmp
test
or
push
neg
in
das
lret
mov
cmp
push
push
or
xchg
dec
fmull
lock
mov
fstps
imul
pop
mov
outsb
sbb
inc
sahf
and
dec
pushf
in
fldcw
lahf
hlt
or
jb
adc
adc
sub
in
mov
or
popf
stc
sub
add
in
fwait
inc
aas
cmc
push
add
or
push
jp
push
push
and
inc
add
inc
outsl
xor
dec
and
jg
pusha
fs
cli
inc
mov
inc
ret
out
les
test
add
mov
adc
rolb
mov
mov
test
mov
cmp
inc
mov
insl
neg
sub
ds
rcrb
ss
enter
push
lods
add
rolb
andb
js
sub
add
sub
lahf
pop
sbb
popa
inc
and
mov
rcll
push
adc
lret
inc
insb
or
mov
inc
cmp
movsl
push
test
xor
jmp
scas
jbe
xchg
cmc
xor
in
jecxz
push
or
shl
and
jmp
inc
pop
fisubrs
hlt
xchg
insb
adc
movsb
xchg
or
out
lods
pop
or
dec
sbb
mov
stos
sub
call
dec
mov
mov
lods
in
inc
loope
or
pop
hlt
push
xchg
cmpl
mov
sub
xchg
out
rolb
xor
xchg
sbb
inc
push
orl
sbb
sub
or
mov
add
loop
iret
movsb
fistpll
or
sub
cmp
ja
fcomps
clc
inc
pusha
xchg
test
or
jo
cmp
in
cwtl
xlat
outsl
nop
push
repnz
push
sub
mov
cs
lds
cwtl
test
and
or
sub
movb
loopne
ds
stos
mov
es
push
lahf
jle
add
test
shrb
imul
inc
inc
pop
decl
call
arpl
push
pop
add
rclb
adc
mov
adc
popa
adc
into
or
push
fs
or
xchg
mov
clc
xchg
pop
sbb
push
pop
and
or
pop
aaa
mov
rolb
sub
fsubrl
insl
dec
out
loopne
lods
pop
push
cli
pminub
cmp
cmpsl
test
push
sbb
sbb
jl
cli
or
adc
out
hlt
push
mov
add
push
sbb
xchg
mov
je
and
mov
jne
fstps
out
push
dec
sahf
data16
cmp
inc
xor
xchg
aam
push
mov
lock
lcall
js
int3
sbb
adc
fcoms
cmpsb
add
cmp
cmpsl
adc
pop
clts
jnp
arpl
adc
and
andl
inc
sbb
and
add
sub
lds
and
adc
dec
cwtl
dec
movsb
lahf
mov
pushl
loop
jo
jo
dec
loope
or
lea
xchg
call
aad
sbb
mov
ljmp
fcmovne
fdivp
add
leave
sub
sbb
add
mov
xchg
and
pop
sub
shll
pop
mov
dec
mov
push
insl
jbe
in
xchg
cmp
fstpl
les
dec
and
inc
cmp
add
dec
aad
add
jmp
ds
adc
je
and
lahf
or
push
add
xchg
jnp
aam
out
xchg
add
add
arpl
inc
mov
addr16
push
lock
leave
mov
out
sub
daa
jns
push
mov
jne
ja
sub
fsubr
pop
pop
or
jmp
into
adc
xchg
iret
adc
or
lret
insb
cmp
pop
cmp
pop
push
cmp
dec
cmp
in
xchg
in
cmp
sub
pop
mov
cmp
adc
lahf
adc
cmp
mov
push
in
push
das
push
aam
je
lods
cmpsl
inc
call
push
or
sbb
pop
leave
adc
mov
fs
cmp
nop
xchg
mov
leave
add
mov
call
enter
mov
sbb
std
cmp
and
inc
or
cmovbe
data16
mov
js
mov
test
aas
je
jl
cmp
into
enter
ret
faddl
imul
xchg
push
and
push
jl
xchg
mov
int3
cmpsl
sbbl
sar
pop
add
dec
sub
and
lret
int3
lods
add
sahf
sub
mov
and
insb
sti
sub
add
cld
push
add
xchg
cwtl
cmp
shl
xchg
pop
mov
pop
or
dec
shrb
sbb
test
add
lods
add
int3
cmpsb
adc
push
sbb
fbld
mov
sbb
scas
jne
lret
sub
mov
out
or
push
cmp
sub
rclb
in
and
test
add
enter
add
mov
or
jne
loopne
push
sbb
call
or
push
nop
out
cwtl
or
aad
xchg
aaa
push
test
jb
lods
jg
ret
mov
mov
adc
or
dec
xchg
push
adcl
or
jnp
or
arpl
jge
fnstcw
lret
psubq
aad
mov
sarb
jp
icebp
scas
push
cltd
jae
pop
mov
jl
xor
test
rclb
adc
shr
stos
lahf
icebp
pusha
xor
fs
in
mov
dec
in
push
stc
sub
ret
push
push
out
imul
popa
dec
push
and
and
add
pop
jb
lcall
xchg
in
add
lods
add
aas
das
loop
inc
push
clc
push
push
push
mov
adc
sub
and
enter
ret
push
lock
fimull
inc
aam
push
or
sbb
jo
daa
rclb
dec
sbb
mul
inc
mov
mov
jmp
push
xor
mov
sbb
push
jne
in
jo
push
inc
popa
es
jo
mov
xchg
leave
dec
gs
push
add
rorb
sbb
or
sbb
push
xor
mov
dec
rol
push
jmp
push
or
cld
xor
inc
lret
mov
push
mov
mov
ljmp
push
lods
mov
cmc
pop
lret
xor
and
loope
fadd
jne
mov
push
add
jae
mov
xlat
or
popa
dec
push
shll
pop
pop
outsl
or
mov
cmp
push
cmp
sti
ljmp
movsb
or
addl
ret
dec
jg
push
mov
orb
mov
and
jne
sub
sldt
jae
mov
pop
cmp
lods
rcrl
adc
mov
fbld
mov
jmp
xchg
ret
pop
movsl
loope
xor
mov
arpl
fimuls
clc
pop
icebp
jecxz
push
daa
fadds
ret
xchg
inc
push
test
mov
adc
pop
pop
fimuls
cmp
or
pop
jns
cmpsl
inc
jae
and
inc
cmp
fisttps
inc
leave
loope
sub
les
out
sbbb
test
pop
out
xor
add
mov
aam
enter
testb
cs
pusha
pop
push
or
out
pushf
divl
sahf
ror
lcall
mov
push
or
testl
mov
xchg
lds
jnp
or
push
stos
push
lret
push
mov
or
dec
mov
ja
xchg
loop
dec
loopne
pusha
or
cmp
or
in
and
xor
sbb
cmp
push
xchg
xor
sbb
into
lods
dec
mov
pusha
xchg
cmpsb
fsub
lcall
fists
nop
or
mov
push
cltd
or
arpl
mov
sahf
add
test
out
js
jge
push
mov
or
data16
xchg
jb
pop
mov
mov
jae
insl
fxch
ficompl
not
cli
mov
sbb
rcrb
xor
cmpsl
xor
xor
pop
sbb
mov
cmpsb
dec
sbb
and
movsl
or
jb
aaa
inc
push
es
out
enter
or
shll
push
add
push
fldt
bound
and
push
jge
cld
mov
cmp
push
lahf
sbb
rorl
sub
add
sbb
push
sahf
sbb
dec
dec
pop
std
fwait
and
push
mov
mov
and
dec
jb
push
jmp
dec
mov
pop
aam
xchg
mov
into
fimull
adc
loop
pop
out
lret
or
mov
mov
add
inc
inc
xor
loopne
outsb
pusha
lds
jmp
pop
jecxz
mov
test
cmc
mov
or
orl
add
adc
addr16
mov
cmpsl
addl
jmp
cwtl
xor
out
cli
push
inc
or
cmpsl
or
fidivrs
ljmp
push
mov
sar
and
pop
add
out
push
cmp
add
fs
jno
lock
push
popf
mov
movsbl
adc
push
pop
pop
xor
mov
out
ja
in
pop
cmpl
fucomp
das
inc
and
dec
pop
cmpl
and
xchg
cmp
stos
sbb
adc
adc
or
mov
xchg
or
mov
mov
popl
fisubrl
xchg
xchg
and
or
xchg
push
sub
pop
cmpsb
or
add
sub
out
push
repnz
dec
into
and
or
xor
icebp
and
dec
cltd
inc
adc
mov
add
repnz
in
and
test
inc
sub
push
or
mov
jmp
xor
jmp
test
inc
lods
or
jb
adc
nop
xchg
xchg
dec
sub
inc
lcall
rolb
jmp
or
orl
cmc
psrlw
movl
inc
mov
xchg
add
sub
lods
cmc
je
jo
shll
loopne
adc
or
enter
adc
add
sbb
pop
mov
push
shl
pop
add
or
adcl
or
cmp
sbb
dec
dec
or
imul
imulb
mov
xor
push
inc
popa
ret
dec
add
adc
jb
fstps
arpl
je
insb
loope
push
loope
ss
cmpsb
rcl
lods
pop
test
mov
shll
jbe
add
sbb
loope
and
push
js
mov
and
xor
insb
aad
shrl
mov
addr16
and
lods
arpl
pop
dec
jne
or
push
rol
rcrl
cmp
sub
xor
sbb
sub
sbb
or
xchg
sub
pusha
adc
push
rol
and
inc
or
and
mov
mov
xchg
rcrb
xlat
loopne
push
xor
push
inc
cs
iret
cmpsl
and
cmpsb
or
subb
test
sub
ret
bound
adcb
addr16
ffree
and
insl
or
jmp
sahf
pop
pop
js
xchg
imul
xchg
sbb
jge
adc
push
push
fisubrs
into
mov
lds
lds
push
sub
jbe
cmp
daa
leave
stos
cs
or
rcll
sbb
push
rclb
sub
adc
hlt
arpl
adc
push
fwait
and
xlat
jl
pop
inc
loope
in
lods
ds
dec
mov
loopne
pop
and
repz
mov
cs
lods
adc
add
sbb
sub
sbb
cmc
sub
mov
ret
aam
mov
push
lods
test
mov
loopne
inc
shlb
popa
mov
lods
push
fldt
mov
dec
pop
xor
xor
ret
sub
push
xor
jmp
mov
in
add
adc
adc
cmpb
addr16
add
push
in
xchg
xorb
add
mov
pop
stos
gs
rclb
movsl
sti
clc
mov
sub
adc
adc
loope
pop
sub
test
loopne
in
dec
dec
add
pop
sbb
adc
push
push
or
push
add
jo
or
lds
add
cli
push
push
addl
mov
dec
push
insb
and
push
sbbl
fsts
clc
dec
add
loopne
push
inc
sub
scas
fmuls
cmp
push
lds
pmaddwd
sarb
cmp
xchg
xchg
cltd
xor
and
push
xadd
add
ljmp
imul
cld
pop
mov
adc
sbb
sbb
mov
add
imul
and
and
pop
shrl
add
mov
mov
push
mov
std
mov
ret
jo
push
ja
mov
sbb
jne
and
subl
or
fbstp
gs
cmp
pop
push
fsts
cmpsb
or
divl
push
movsb
rol
push
or
add
mov
xor
and
test
scas
and
dec
jg
add
or
ds
cmp
xor
push
in
popa
addr16
sbb
pop
push
mov
clc
iret
pop
add
enter
jmp
addb
or
je
pop
cmpsl
adc
mov
inc
jmp
mov
sub
push
adc
dec
leave
cmp
mov
cmc
push
mov
roll
ja
push
sbb
dec
pop
psubw
pop
andl
add
inc
and
cld
jmp
adc
sbb
and
sti
stos
fwait
and
out
or
shl
pop
adc
cmp
rorb
mov
or
lea
dec
pop
sub
mov
dec
inc
or
inc
cmp
jb
call
fdiv
cmpsl
xchg
cmp
adc
out
fildl
xor
mov
cmp
sub
adc
loope
mov
je
push
mov
out
out
call
xchg
jb
rclb
or
jns
xor
inc
cmp
inc
dec
dec
loopne
add
push
or
cwtl
adc
and
loope
jle
cmp
or
shr
pop
mov
add
jo
adc
lea
inc
jmp
pop
pop
push
das
dec
test
mov
repnz
xchg
insb
jae
push
jbe
cmp
or
in
and
add
sbb
fildl
mov
fmuls
sub
or
mov
flds
insb
icebp
inc
adc
dec
std
test
jae
pop
inc
cmc
and
inc
and
or
xor
add
or
mov
into
gs
inc
dec
pop
call
ret
or
mov
xchg
pop
jnp
and
inc
xchg
or
es
in
xor
and
sub
xchg
je
push
or
add
mov
iret
sub
add
push
push
hlt
dec
pop
cmp
xchg
sbb
movsb
xchg
jnp
jbe
ret
dec
and
orl
sub
or
out
rcl
call
aad
cli
push
ficoms
popf
cmpsb
xchg
xchg
mov
mov
mov
adc
mov
jp
mov
test
sbb
fsubl
sbb
add
rorb
mov
js
inc
pop
jle
movsb
cmp
jb
add
into
popa
fiaddl
cmp
fstpt
imul
mov
sub
jno
arpl
in
jmp
imul
cmp
add
adc
les
xor
add
jmp
pop
clts
xor
or
or
cwtl
push
inc
pusha
xor
lods
sub
icebp
out
mov
and
dec
repnz
inc
lret
and
test
in
add
sbb
pusha
pop
sbb
adc
or
mov
out
stos
je
sbb
jae
inc
jmp
icebp
and
in
add
dec
in
add
xor
fists
lret
add
or
das
lea
pop
cld
nop
cmp
mov
fs
dec
outsb
xchg
adc
or
xor
xchg
mul
and
add
mov
pop
loop
cmp
add
test
mov
xchg
xor
push
or
lods
xchg
ret
inc
rorl
inc
jns
sbb
test
push
subb
xchg
adc
es
je
sbb
loopne
in
or
push
arpl
out
cmp
and
or
loopne
or
rcrl
add
loopne
or
sub
lret
mov
push
or
adc
in
lods
movsb
loop
js
ljmp
js
xor
inc
mov
insb
xchg
adc
cmp
nop
ret
adc
add
enter
pop
sbb
test
fsts
xchg
mov
xor
add
mov
mov
clc
popa
std
shlb
pushf
sbb
xor
inc
fs
int3
out
mov
rclb
aam
sub
inc
adc
stos
dec
push
and
imul
test
pop
jae
stc
xor
and
pop
jl
pusha
stos
jb
out
sub
add
enter
cmpl
jle
inc
sub
and
inc
inc
add
rcll
push
outsl
out
add
and
in
test
loopne
out
pop
setge
lahf
je
insl
xchg
xchg
loopne
add
xor
add
pop
mov
dec
imul
in
push
sarl
mov
jne
ljmp
inc
push
pusha
mov
je
cmc
addr16
in
loopne
int
push
xchg
arpl
pushl
or
sub
dec
push
mov
xchg
insb
insl
call
jge
add
movsl
inc
dec
push
mov
jne
movzbl
movsl
push
test
in
in
jmp
aaa
xchg
dec
ljmp
shrl
insl
test
lods
fsubrl
sub
nop
add
daa
xchg
sbb
loop
js
adc
sti
cmp
jno
push
and
jle
dec
test
xor
mov
rclb
xor
mov
push
sbb
mov
sti
lods
clc
inc
jb
push
lods
mov
adc
xchg
pop
insb
sub
popf
push
aam
inc
sub
decl
mov
test
in
or
mov
imul
test
mov
or
mov
sub
icebp
andb
xorl
inc
sbb
or
pop
xchg
add
enter
iret
jbe
mov
jg
lret
lea
mov
add
into
adc
lcall
ds
mov
cmp
rclb
mov
ja
mov
addr16
enter
je
push
int
lods
fldt
cwtl
fdivr
cmp
push
pop
sbb
jne
push
aad
popf
push
dec
fbstp
into
mov
mov
mov
sub
jl
push
jle
scas
jmp
daa
dec
fbld
scas
ret
cmp
jb
lds
ss
movsb
sbb
insl
or
push
cmp
or
enter
and
or
in
inc
add
inc
pushf
imul
dec
outsb
cmpsl
jge
and
adc
nop
ljmp
mov
imul
push
fsts
push
add
cmpsl
add
xchg
jo
add
or
push
xor
ss
adc
mov
inc
mov
inc
push
sub
sbb
and
xchg
fidivrs
push
sbb
sub
push
mov
xchg
test
jl
dec
adc
lods
inc
cmp
dec
xor
mov
mov
push
mov
in
inc
aam
xorb
xor
sbb
sbb
jo
pop
test
or
lret
jbe
add
js
pop
sub
jmp
sbb
xchg
add
dec
scas
mov
push
clc
ret
inc
and
mov
int
in
adc
mov
dec
mov
adc
test
pushf
and
dec
hlt
jne
adc
push
shl
roll
mov
add
inc
mov
sub
and
ret
imul
cs
xor
or
enter
daa
or
inc
test
test
dec
xchg
rcrl
test
add
dec
lcall
jmp
jae
loope
test
xchg
mov
push
mov
negl
pop
in
add
stc
mov
mov
sub
lock
ret
and
pop
xorb
jge
mov
push
push
int3
andl
inc
xor
add
repnz
push
sbb
mov
or
test
mov
ss
adc
xor
nop
mov
adc
fadds
lock
aas
jg
and
cmpsl
or
or
push
xor
and
pop
jmp
loope
mov
jae
leave
imul
mov
in
pop
sbb
lret
aad
inc
pop
xorb
sbb
jnp
mov
adc
mov
cltd
add
sub
mov
sar
inc
rcll
mov
sub
add
add
orl
jbe
nop
lock
dec
rcrb
pop
inc
test
dec
jno
mov
jmp
inc
add
and
outsl
push
dec
mov
dec
sti
jnp
dec
mov
jmp
ss
test
enter
movsl
xchg
pop
add
and
push
mov
jo
sbb
addb
push
lds
inc
xchg
lea
inc
adc
xor
and
and
pop
mov
push
mov
add
cmp
jl,pn
xor
xchg
mov
and
loope,pn
add
pop
sbb
pop
inc
fsubl
pcmpeqw
aam
sbb
jno
cmc
push
outsl
push
and
lock
mov
or
sahf
std
fdivr
jae
pop
mov
push
xchg
xchg
gs
push
hlt
dec
jnp
push
or
punpckldq
adc
les
push
sub
mov
jae
sub
rol
loop
insl
in
push
push
sbb
cld
lret
rol
fistl
inc
fiadds
ljmp
lods
cwtl
add
lcall
sub
sbb
pop
xor
es
jmp
jno
dec
mov
call
mov
nop
clc
pop
jo
push
or
sub
nop
clc
es
sub
sbb
dec
add
push
mov
fcoms
adc
mov
test
jnp
out
push
pop
jns
dec
adc
pop
clc
jne
loopne
test
cmovno
jge
adc
stos
jns
xor
mov
es
push
lods
mov
daa
and
fsubl
shrb
fadd
dec
sub
cs
mov
lods
ret
sub
pop
out
fptan
or
push
mov
and
out
sub
dec
int3
sbb
push
push
push
mov
push
inc
enter
addr16
push
dec
andb
or
lret
adc
cmp
das
push
push
lea
mov
xlat
push
cld
add
imul
sub
or
pop
enter
xchg
fcmovb
mov
dec
add
mov
push
or
dec
out
pusha
pop
cmp
jae
js
sbb
hlt
mov
icebp
pop
mov
or
loopne
js
add
sbbl
pop
rclb
push
test
sbbl
pop
out
fisttpl
pop
sbb
les
jmp
loopne
push
in
orb
pop
out
mov
in
push
and
jp
ja
mov
popa
mov
push
push
mov
cs
jnp
sarb
add
lods
arpl
jae
or
int3
xlat
mov
pop
ljmp
shll
mov
aam
push
sbb
pushf
push
jge
aam
jl
push
test
xchg
int3
mov
cs
ljmp
and
add
mov
in
sub
sub
pop
xchg
enter
or
push
or
popa
lea
fisubrs
loope
shl
iret
xlat
out
mov
pop
dec
add
fwait
or
cld
aam
push
or
pop
or
mov
inc
mov
inc
stos
cmp
and
push
jl
cmp
mov
adc
stos
and
mov
mov
adc
mov
out
dec
push
or
std
mov
pushf
dec
ja
lret
sub
or
sub
adc
sub
imul
imul
fcoml
daa
in
rcrb
add
out
dec
sbb
je
push
scas
inc
cmp
mov
mov
loop
sti
xor
popf
hlt
or
cmp
inc
in
sub
adc
insl
mov
jl
xor
sbb
sti
add
sub
xchg
nop
cld
mov
enter
xor
aaa
enter
pop
mov
jle
mov
movsw
push
cld
push
call
push
and
hlt
inc
xor
mov
shr
mov
inc
mov
adc
cmp
jle
movb
xchg
inc
inc
loop
cmp
call
rcr
in
push
mov
inc
fstps
fldenv
sub
sbb
mov
imul
in
leave
ja
aaa
add
jb
and
push
cld
and
cmp
push
movsb
loope
pop
sbb
lods
ret
cmp
sub
and
rcl
mov
pop
je
movsl
cmpsl
push
pop
sbb
dec
jae
jge
loopne
pop
es
add
adc
dec
lea
sub
insl
into
xchg
nop
and
xor
cmp
jl
or
push
push
cmp
xlat
mov
push
sbb
sbb
mov
push
mov
rorl
xchg
sbb
push
adc
push
shlb
xchg
orl
dec
or
cmp
stos
loopne
sub
mov
cmp
pop
or
mov
lock
clc
dec
dec
add
and
sub
inc
xchg
sar
add
lock
fildl
sub
add
leave
leave
leave
add
leave
pop
or
or
jnp
out
out
or
jbe
jmp
or
addr16
out
por
jmp
adc
pop
adc
push
out
out
adc
dec
adc
dec
adc
aas
out
out
pop
jmp
sbb
xor
jmp
out
out
sbb
es
and
pop
out
out
pop
jmp
and
or
jmp
sub
out
test
xchg
clc
mov
mov
lds
inc
test
ret
hlt
sbb
mov
das
push
gs
push
insl
jne
sahf
out
jge
lea
out
lods
mov
mov
rol
rcl
fidivrl
out
jmp
lahf
out
std
add
pop
or
repz
adc
sbb
and
cmp
sub
add
and
in
decl
or
adc
adc
push
pop
sbb
sbb
sbb
push
pop
and
and
aas
lret
inc
sbbb
xchg
sbbl
mov
xor
or
mov
cmpb
xor
xor
cmp
jle
mov
sarb
push
lret
nop
jmp
mov
inc
lret
out
pop
mov
js
xor
mov
jae
sub
scas
push
pop
mov
es
lea
in
add
xchg
shll
or
test
mov
lock
add
mov
fmuls
jbe
sub
and
popa
or
push
push
pop
enter
rorb
addb
push
jge
mov
jg
xor
inc
mov
pushw
add
pop
cli
bound
mov
xor
or
cwtl
cmp
lock
lock
and
sub
jns
mov
add
sti
call
sbb
xchg
dec
roll
jmp
cltd
mov
push
adc
inc
jp
xchg
add
nop
xchg
clc
movaps
push
lahf
and
adc
add
stc
cmp
adc
frstor
pop
xor
test
jno
nop
xor
in
dec
int
jne
add
nop
fnsave
inc
mov
cmp
push
xchg
pop
mov
int3
mov
mov
mov
mov
add
mov
test
xchg
jmp
stos
push
imul
cmc
mov
inc
add
stos
mov
mov
fdivl
fcom
push
xor
pop
cltd
test
mov
fwait
push
cmpsb
dec
pop
adc
mov
lds
cs
mov
mov
mov
adc
inc
cmp
or
xchg
mov
call
xchg
or
cmp
cmc
inc
enter
arpl
inc
xlat
mov
repnz
jle
inc
ret
pop
xlat
sbbl
push
jns
adc
jne
jo
test
mov
or
and
jne
lock
insl
adc
xchg
pop
ja
xchg
mov
add
sbb
push
outsl
das
inc
inc
jne
imul
aas
inc
popf
les
in
dec
xchg
inc
mov
dec
mov
mov
iret
fdivl
adc
or
mov
cmp
and
or
or
mov
sub
mov
sbb
push
mov
je
je
cmpsl
xor
xor
inc
add
cs
adcb
pop
pop
or
adc
mov
test
push
sub
jbe
out
sub
push
xchg
mov
pop
mov
pop
dec
adcl
push
ljmp
js
mov
xchg
nop
xchg
inc
pop
idivb
lods
imul
fstpt
fists
xor
popl
jb,pt
dec
push
mov
add
push
pop
jmp
sbb
push
add
out
sbb
xor
or
push
cmp
inc
mov
shlb
movsb
clc
push
mov
cmp
mov
shrb
mov
rcl
ds
pop
les
jge
mov
mov
pop
repz
insl
loopne
les
lret
jmp
jnp
cmp
ret
call
rcll
and
inc
add
mov
xchg
cmpsl
shr
dec
cmpsb
dec
enter
xorl
shl
ror
stos
xchg
enter
mov
test
or
ror
or
mov
insl
mov
andl
mov
aas
jecxz
mov
fmull
xchg
in
add
loopne
int3
sbb
das
popa
popa
imul
or
icebp
pop
icebp
jne
outsb
ret
aam
push
add
add
adc
xor
int3
mov
inc
daa
fistps
cmp
test
testb
dec
movl
and
call
loop
je
nop
push
add
jmp
loopne
cmp
cmpb
mov
mov
int
sbb
enter
sbb
loopne
xor
xor
add
add
cmp
and
enter
sahf
int3
or
mov
testl
dec
shl
shrb
insl
dec
fstps
add
lret
xor
push
les
rolb
cmpb
pop
push
sbb
ljmp
pop
push
push
add
mov
rol
sub
push
mov
sub
adc
es
dec
adc
xor
imul
arpl
push
or
pop
or
pop
xchg
or
add
xchg
xchg
mov
mov
adc
push
sbb
lock
fstl
xor
sbb
fwait
out
jnp
xor
or
cmp
or
movsl
mov
mov
sub
xor
je
imul
daa
xor
add
shl
xchg
xchg
or
pop
popa
fidivs
movsl
jno
stos
push
das
xchg
or
xor
mov
inc
adc
cmp
xchg
xor
jbe
mov
ds
or
jge
fisttpll
add
fcmovnu
add
push
cmp
daa
in
add
cmp
loopne
imul
jl
fldcw
pop
add
inc
cmp
dec
fimuls
and
and
sbb
insb
inc
sub
jno
and
pop
test
cmpb
xchg
ja
jb
dec
mov
fs
bound
push
je
leave
js
sbb
add
cmp
and
cmpl
pop
xchg
and
xchg
xchg
pop
fadds
icebp
inc
lea
aam
dec
lods
fcomps
or
xchg
lods
pop
mov
pop
aas
cmpsb
adc
add
cs
jle
cmpsb
call
or
jne
or
inc
mov
sub
inc
sub
mov
fisubl
or
adc
add
insl
fs
rcl
loopne
mov
fimuls
xor
in
or
add
sbb
lock
push
aam
in
iret
sbb
dec
or
sbb
repnz
and
mov
push
inc
sub
add
cmp
add
jne
or
cmp
andb
dec
icebp
arpl
adc
int
push
ror
dec
dec
or
cmovne
movhps
cmp
ss
or
loope
and
pop
cwtl
pop
add
add
and
jmp
xor
aam
fists
jecxz
dec
js
push
loopne
and
enter
mov
push
add
jbe
loopne
or
rolb
andl
add
cmpsb
and
xchg
mov
cmp
std
pusha
or
inc
rcll
dec
test
cmp
sbb
gs
dec
or
sbb
js
or
and
push
pushf
sbb
dec
mov
inc
movsb
xor
pop
insb
sub
adc
pop
pop
ljmp
inc
les
push
movzbl
pop
lret
xor
pop
push
aaa
cmp
addb
xor
shl
inc
add
idivb
cmp
bound
mov
jmp
and
pop
mov
loopne
xchg
aas
cwtl
mov
pop
mov
js
lret
lock
and
jns
ret
std
mov
and
mov
and
and
rcrb
les
xchg
lret
int3
pop
rcl
fsubrs
dec
gs
in
or
inc
adcb
test
lock
cmp
setge
incl
and
mov
fisttpl
test
cltd
cmp
insl
and
xchg
mov
das
or
jbe
or
sbb
or
jl
sub
mov
cmp
mov
cmp
je
dec
idivb
lea
or
sub
repnz
sbbl
fildl
daa
jns
je
cmpsb
repnz
lods
sub
dec
pop
sbb
and
hlt
sbb
xchg
hlt
push
pop
jl
imul
out
xor
xchg
sbb
outsb
mov
mov
sti
cmp
je
or
dec
or
into
jge
and
enter
call
rcrl
inc
mov
or
sbb
sbb
rcll
iret
inc
cmpsl
xor
sub
or
js
loopne
popa
mov
sbb
xchg
popf
jmp
fwait
lock
push
imul
sub
mov
fs
dec
pop
popa
test
cmpsb
or
sub
adc
hlt
push
pop
cmp
jp
sbbb
in
int3
cmp
jle
or
mov
repnz
or
mov
sahf
js
push
fistpl
sbb
mov
adc
mov
sbb
lods
jle
mov
sbb
pop
dec
adc
pop
pop
sub
rclb
xchg
adc
push
xorb
mov
js
add
pop
jne
push
inc
pop
inc
addb
adc
push
xchg
push
mov
imul
push
mov
mov
adcb
cmp
call
pop
push
clc
mov
in
pop
and
loopne
pop
or
xchg
ret
shlb
fbld
dec
xorb
dec
pop
pop
std
and
xchg
test
nop
ja
adc
lock
jo
sub
jge
mov
call
arpl
cmp
frstor
rolb
push
jns
cmpsb
push
pop
adc
clc
jmp
mov
add
jb
cmp
xor
jp
ffreep
into
sub
push
jnp
pop
add
jno
xorl
scas
in
jge
outsb
sbb
test
loope
cmp
stc
call
call
sbb
and
inc
inc
push
mov
xor
es
dec
aas
jne
push
nop
repz
clc
adc
cmp
and
bound
and
sub
sti
jae
sbb
sub
inc
cmp
pop
dec
loopne
add
pop
mov
in
test
inc
mov
sbb
out
ss
push
push
outsb
rcrl
fstpt
jo
add
adc
sbb
add
gs
jmp
dec
sbb
or
xor
add
push
adc
ret
int
testb
jne
inc
popa
lds
icebp
xchg
rorl
xchg
imul
xor
sbb
push
lcall
push
inc
aaa
or
dec
jmp
in
daa
mov
insl
pusha
mov
sub
adc
rorb
mov
mov
stos
pop
ffree
adc
mov
mov
push
aas
into
mov
pop
xor
sbb
pushf
bound
push
mov
pop
leave
das
inc
scas
fucomp
repnz
push
pop
mov
add
sbb
das
or
dec
or
push
sub
imul
inc
bnd
pop
jo
sub
sbb
mov
test
mov
push
addl
add
mov
pop
imul
inc
mov
sub
icebp
and
sbb
adcb
pusha
sbb
cmp
in
out
pop
lds
les
xchg
dec
es
pop
cmp
push
adc
mov
adc
mov
nop
add
sub
and
and
push
mov
icebp
jmp
js
dec
adc
sub
adc
leave
lock
dec
mov
aam
jae
movsb
pop
lahf
insl
je
add
cmp
adc
in
jle
mov
push
and
cmp
jmp
xchg
mov
push
rclb
xchg
inc
pusha
push
rcrl
jnp
or
adc
push
mov
sbbl
xchg
jg
out
sbb
loope
jecxz
push
xchg
ss
shll
loopne
in
pop
cmp
test
xchg
rcrl
cmp
jg
sub
push
scas
stc
aas
pop
pop
dec
adc
xchg
icebp
or
scas
mov
dec
inc
mov
jo
ret
mov
sub
rorb
pop
test
je
adc
inc
jmp
inc
insb
in
pop
and
or
inc
push
loopnew
and
into
push
pop
fs
xor
fwait
lahf
adc
orb
mov
mov
sbb
jae
push
call
lods
push
mov
cmp
pop
aad
jb
jl
test
and
leave
scas
sub
aaa
lea
and
sub
pusha
jno
push
xor
sbb
push
push
dec
sbb
push
cmp
jl
and
or
test
adc
sub
sbb
push
in
push
rorl
mov
lret
clc
pop
aas
push
inc
and
addr16
jp
fs
push
loopne
pop
sbb
popa
mov
mov
inc
cwtl
popf
aas
push
fnsave
mov
add
fstl
fldz
fcomp
filds
pop
add
insb
fstl
pop
fsubr
pop
faddp
ficoms
inc
pop
sub
shl
adc
pop
sub
hlt
rclb
mov
xor
mov
add
lock
xchg
or
shl
lock
dec
lds
cmp
push
in
mov
and
jle
test
add
loop
je
jp
xor
rclb
mov
ret
jge
cmp
pop
push
mov
mov
in
out
cmp
fistpl
sbb
enter
and
pop
or
fistl
pop
cmp
push
inc
mov
xor
clc
adc
xor
lcall
mov
int3
push
add
outsb
and
rcll
enter
rcr
mov
push
cld
jmp
lea
sub
sub
lcall
mov
cmpsl
shl
fimuls
enter
loopne
sub
loopne
loopne
mov
pusha
add
lcallw
mov
mov
addr16
mov
or
mov
pop
lcall
push
loopne
adc
dec
push
decl
xchg
mov
stos
cmp
mov
jmp
adc
sbb
jmp
pushw
jge
jo
outsb
jecxz
hlt
adc
sahf
xchg
pusha
test
mov
inc
into
gs
lahf
sub
pop
cli
aad
push
and
jb
or
pusha
or
aas
or
jne
mov
pop
xchg
movsb
cmp
pop
outsb
sbb
rolb
cwtl
cmpsl
je
rcrb
add
push
or
jno
push
mov
sub
xchg
adc
add
add
pop
add
lods
dec
imul
leave
sti
jbe
js
push
push
mov
sub
add
or
sub
mov
outsb
outsb
jg
insb
clc
add
or
aaa
add
pop
push
out
jmp
aam
dec
scas
cmp
test
je
add
push
push
in
fs
dec
pop
jb
sahf
push
imul
dec
js
mov
out
mov
xchg
cwtl
or
xor
mov
push
mov
dec
ss
or
cld
andb
push
push
xchg
and
jmp
testb
les
jbe
pop
sahf
das
dec
push
stos
mov
mov
icebp
mov
cmp
push
lock
movb
idivl
push
rolb
add
inc
aad
mov
xor
mov
adc
mov
jo
scas
sbbl
push
sub
adc
jbe
add
cld
lret
dec
addl
out
inc
sbb
push
popa
leave
and
xchg
test
lock
push
and
inc
pop
push
es
hlt
dec
xchg
mov
pop
pop
jge
cmp
jne
test
movsl
inc
js
mov
xor
inc
and
xor
jae
andb
xchg
cmp
in
xor
dec
aam
mov
or
jne
sbb
dec
push
sbb
loope
add
lahf
aam
test
and
imul
sbb
push
jmp
cmp
call
js
jp
test
dec
and
gs
xchg
pop
add
xchg
leave
test
int3
push
or
mov
aam
push
imul
adc
fcomp
add
and
fidivl
inc
push
mov
lret
inc
jbe
push
cmp
in
cltd
repz
or
je
cmp
jb
ret
inc
jno
jae
push
aam
mov
outsb
popa
pop
jbe
jmp
in
push
dec
dec
jnp
lahf
dec
push
push
sarl
dec
inc
add
cmp
movsb
out
xchg
test
xor
mov
cmp
sub
push
push
push
dec
loop
dec
cmp
dec
inc
inc
sub
nop
inc
pop
and
lea
or
sbb
and
dec
test
mov
mov
and
cltd
hlt
div
mov
sbb
repz
push
test
push
pop
inc
ret
loop
add
dec
xor
add
jns
mov
or
shlb
dec
test
dec
inc
scas
scas
jmp
popa
and
mov
pop
push
add
es
push
sbb
dec
repz
adc
cmpsl
xor
movsl
gs
push
decb
mov
push
and
sbb
jecxz
dec
dec
pop
add
movsb
adc
faddl
gs
mov
ret
cmpsb
push
inc
lods
and
ss
jp
rorb
pop
add
in
sahf
stos
jne
movl
inc
fimuls
xchg
daa
rclb
or
push
cmp
pushf
push
add
js
lcall
xchg
imul
jb
daa
add
nop
dec
sbb
subl
add
mov
fisttpl
pop
enter
or
in
inc
mov
push
adc
or
movb
sbb
pop
jp
xchg
jo
sbb
xor
es
xor
scas
add
mov
mov
es
icebp
or
add
adc
dec
add
les
mov
mov
es
and
pop
and
adc
sub
movsb
push
pop
in
push
stos
inc
test
and
cltd
sub
or
inc
or
or
xor
les
and
cmp
push
sbb
popa
iret
add
dec
arpl
inc
adc
daa
adc
outsl
sub
mov
add
test
aam
ds
cld
dec
push
rclb
cwtl
mov
jbe
xlat
push
stc
push
and
dec
sbbl
xor
push
inc
movsl
movsb
sbbb
push
daa
add
sub
xor
lock
jge
dec
pop
and
or
jnp
xor
fs
insl
jmp
push
in
mov
adc
lock
sti
sub
and
in
adcl
cmp
push
push
sub
movhps
test
dec
roll
aam
mov
or
ret
add
movsb
mov
inc
sbb
sahf
jbe
mov
mov
orb
push
and
jo
sub
dec
popf
into
rolb
mov
pop
or
push
or
lcall
xor
pop
mov
insb
mul
inc
add
push
push
andl
bound
lahf
push
push
addr16
pop
jo
pop
push
adc
or
jae
inc
bound
mov
push
shlb
push
jno
inc
add
pushf
jae
js
or
dec
cmpsb
xor
fadds
push
adc
stos
and
push
mov
mov
push
and
mov
lods
adc
xchg
add
xchg
das
test
sub
mov
push
pop
xchg
and
jb
enter
jae
test
outsb
hlt
or
push
pop
stc
dec
jo
and
mov
in
xchg
add
push
movsl
add
adc
adc
in
insl
cmp
mov
subl
inc
and
adc
mov
and
or
clc
je
icebp
incb
or
les
ss
nop
xor
loopne
fstps
lock
loopne
jae
push
push
push
cmpsl
dec
js
fcoms
adc
out
movsb
data16
divb
push
xchg
in
test
or
add
jne
loop
and
incl
int3
in
mov
inc
push
mov
out
ss
sub
cmp
inc
scas
xchg
into
addr16
mov
mov
sbbb
add
xchg
or
add
loopne
idiv
pop
mov
shr
or
lret
push
add
aam
pop
pop
pushf
fnstsw
shl
or
or
leave
insl
test
and
mov
push
cmp
mov
or
sub
mov
cmpsl
ret
sbb
or
fsubrs
loope
xor
lock
xor
add
sti
pop
jecxz
pop
cmp
inc
push
sub
les
jnp
mov
outsl
adc
xor
push
into
mov
pop
ficompl
pop
mov
mov
imul
inc
or
sub
push
clc
out
xchg
and
je
test
fs
push
fs
pop
jo
jo
xor
mov
mov
sbb
pop
jns
addb
subb
mov
aas
jmp
push
inc
mov
cmp
shll
pop
hlt
jo
movb
add
sub
flds
clc
xor
adc
add
test
adc
rol
or
push
scas
inc
adc
addr16
inc
inc
cmp
dec
sti
es
or
dec
or
cwtl
fildl
out
ror
push
sbb
add
push
add
mov
jo
lods
sub
out
and
xchg
push
add
std
loope
adc
jmp
mov
outsb
jle
adc
lret
lcall
shl
cwtl
notl
mov
or
je
pop
jmp
pop
outsb
and
and
sbbb
stc
test
xchg
repnz
jge
js
pop
lahf
pop
sub
fmuls
or
dec
sub
xchg
cli
sbb
repnz
lcall
lods
pop
xchg
lcall
orb
mov
fs
adc
iret
or
and
sub
test
lods
imul
push
fs
inc
fs
add
fmuls
lea
dec
adc
dec
shlb
addl
jmp
sbb
add
subl
mov
push
add
push
rclb
adc
adc
clc
dec
mov
mov
mov
xor
or
sahf
popf
lcall
jno
je
fs
in
mov
and
inc
lahf
inc
inc
inc
jl
or
and
sub
inc
mov
add
sbb
xorl
pop
jno
dec
test
scas
lods
mov
xchg
and
mov
je
sbb
inc
in
movzbl
scas
nop
sahf
insl
add
adc
dec
cld
cmp
xchg
inc
and
stos
test
ret
sub
subb
sub
xor
test
push
push
cmp
das
lods
dec
pop
mov
add
mov
movsl
mov
lock
or
push
scas
shl
add
insb
adc
cmpb
lahf
dec
shl
xor
inc
mov
mov
and
std
jge
les
or
mov
fs
cmc
adc
sub
or
and
cmpsb
cmp
push
or
and
or
call
cmp
mov
cmpsb
xor
and
fwait
scas
orb
repnz
jmp
pop
rorb
push
aaa
enter
inc
lret
jne
cmp
mov
cmc
push
je
or
je
pop
mov
inc
loop
cmpl
xchg
and
ds
pop
or
in
add
ss
jne
mov
clc
and
add
or
and
mov
inc
pop
lcall
call
dec
pushf
sub
mov
jge
in
mov
pop
test
push
loop
lods
mov
xlat
dec
gs
fwait
arpl
pop
test
mov
fsubl
mov
cmc
add
or
sti
rclb
icebp
push
xor
pop
mov
sbb
lret
add
mov
sbb
std
pop
les
movsb
cmp
loope
sarl
arpl
pop
sbb
iret
jnp
leave
sbb
mov
jo
adc
test
sbb
mov
dec
xor
push
or
movsb
mov
insb
push
add
xchg
outsl
xchg
mov
cmp
rorl
and
pushl
test
xor
jp
mov
add
xor
ja
pop
stos
popf
mov
test
add
dec
xchg
jb
jge
data16
and
xor
lcall
in
je
push
ja
addr16
mov
stos
adc
jae
mov
sahf
sub
add
scas
xor
push
sbb
lods
out
or
sub
mov
pushl
lock
movsl
mov
cmp
sbb
or
xor
adc
fildll
jns
dec
or
fisubs
aad
add
fildll
cli
std
fmul
sahf
xchg
js
jg
adc
xor
ss
xor
aam
xchg
sbb
lret
aam
ret
into
lods
inc
dec
mov
ja
xor
mov
popa
cwtl
adc
pop
mov
sbb
mov
int3
sub
jl
out
sbb
add
shlb
and
or
testb
pushf
arpl
inc
lods
mov
rcrb
cmp
insb
loope
and
enter
xlat
sbb
add
test
adc
cli
adcb
pop
or
sbb
push
fsubs
ljmp
ret
jl
push
push
cmpsb
adc
enter
push
xor
jg
mov
mov
es
jecxz
xchg
shl
fs
icebp
loopne
mov
addr16
loopne
cmc
loop
leave
inc
sbb
enter
sbb
lret
sbb
sbb
int
dec
inc
test
mov
and
push
cmpsb
pop
loope
notb
lock
cltd
imul
in
dec
outsl
js
rolb
sbb
call
sti
add
fdivl
add
in
insl
sbb
pop
push
into
push
push
mov
pop
mov
je
in
inc
cwtl
pop
sbb
in
pop
inc
je
pop
or
sub
xor
adc
push
adc
or
pop
adc
das
push
jg,pt
cwtl
or
test
pop
push
mov
sub
xchg
cli
mov
xchg
mov
in
xchg
push
adc
and
int
dec
jbe
cmc
xor
cmp
iret
and
leave
mov
call
test
and
cwtl
jg
loopne
pop
dec
add
adc
cwtl
test
mov
lret
dec
cmpb
addr16
mov
push
xor
and
test
imul
arpl
push
push
prefetcht1
bound
mov
fdivrl
fmull
ficompl
dec
int3
cmp
popf
sub
icebp
rorl
and
sub
sub
push
int
mov
dec
leave
scas
add
dec
pop
arpl
movsb
pop
xor
sub
pop
imul
pop
sub
adc
leave
dec
cmp
test
adc
lods
mov
sarl
test
cmp
inc
dec
sub
jne
pop
pop
and
addr16
dec
sete
mov
int3
mov
mov
popa
jl
dec
xor
sbb
xor
pop
mov
and
mov
loop
nop
and
sbb
int3
and
xor
xor
dec
xorb
or
pop
fisubrl
xchg
test
sub
inc
pop
hlt
orb
sbb
sub
mov
push
push
outsb
and
mov
cld
adc
cmp
je
iret
inc
je
rsqrtps
push
pushf
sub
pop
or
rorl
pop
fistl
or
sub
outsb
test
in
adc
pop
popf
out
cmpsl
mov
and
jo
pop
adc
xor
ljmp
movsb
mov
push
jg
pop
test
sarb
rcrb
mov
xor
std
push
mov
shll
inc
inc
jmp
inc
fs
sub
pop
aas
cmp
push
push
cli
icebp
add
test
xor
dec
jmp
test
dec
sbbb
out
repnz
sahf
shl
outsb
or
sub
aam
hlt
mov
arpl
push
in
push
loop
and
jb
fisttps
xor
jo
aam
in
jecxz
les
add
and
pop
sahf
add
or
loope
and
push
jne
pop
pop
aam
pop
int
xchg
lock
mov
xchg
xchg
mov
xor
cs
inc
adc
insl
xor
dec
in
mov
mov
cmpsb
xchg
ret
adcb
mov
dec
sub
movsb
or
pop
pop
jne
push
lods
inc
jmp
fmull
add
pop
adcb
or
cwtl
test
fsubl
mov
int
pop
xchg
mov
mov
jbe
inc
mov
and
adc
push
adc
aam
or
push
cmp
or
lds
inc
xchg
es
mov
orb
incb
add
or
outsl
mov
jne
enter
sub
dec
cs
mov
mov
push
mov
idivl
xor
push
mov
movsb
push
jns
jle
imull
xor
pop
pop
push
sbb
push
call
or
adc
xchg
int3
mov
jnp
outsl
test
rorb
cmp
hlt
mov
pusha
ljmp
or
movsb
mov
mov
loopne
add
cmp
js
sbb
inc
into
in
pop
ret
call
sub
add
popa
xor
or
dec
adc
xchg
xchg
jne
jnp
xor
in
jbe
cmpsl
xchg
push
push
scas
in
mov
sbb
adc
or
loop
bound
stos
orb
mov
aas
adc
roll
mov
fidivs
mov
call
mov
imul
or
dec
jecxz
xchg
aas
je
xchg
and
insl
mov
jne
insb
rorb
ss
mov
imul
sub
test
std
dec
pop
cmp
jns
rcrl
cli
and
xorl
and
fnstenv
fld1
outsb
sub
inc
add
push
stos
or
loop
hlt
or
cmp
in
out
movsl
pushf
mov
or
push
hlt
xchg
cmp
mov
cmpsb
adc
cmp
pop
hlt
xchg
mov
jp
mov
cmp
lret
cmpl
pop
sbb
out
cmp
jecxz
movsl
cmp
jl,pn
xchg
rolb
push
or
out
stos
inc
in
sbb
rorb
or
je
out
fst
xor
shr
xor
pop
cli
inc
enter
push
jp
fs
ds
mov
cmp
mov
xor
popf
mov
shr
cmp
jbe
add
jmp
add
mov
mov
pop
xchg
fadd
pop
and
or
bound
and
jl
pop
jb
sbb
movsb
sub
mov
in
inc
and
push
stc
cmc
inc
add
xor
inc
roll
add
inc
sbb
test
std
or
cli
push
push
cwtl
jb
aaa
mov
aad
jl
xor
hlt
fcompl
cmp
inc
fidivrl
pop
ret
add
mov
jne
lock
jno
clc
jb
xchg
jnp
and
add
add
or
push
or
pop
push
jnp
push
cmc
scas
lods
cmp
jmp
inc
lcall
lods
adc
push
inc
push
inc
jbe
je
xchg
ljmp
mov
inc
out
aaa
movsl
lcall
push
dec
hlt
push
notl
pusha
pop
xchg
or
mul
cmp
mov
dec
repnz
inc
push
xor
or
xchg
xlat
sbb
pop
daa
repnz
sbb
pop
clc
push
scas
pop
bound
movsb
rol
inc
clc
sub
inc
sbb
aas
in
xlat
pop
pop
push
inc
pop
rclb
outsl
mov
and
cmp
jge
sub
sbb
add
add
push
add
and
mov
outsb
sub
adc
and
outsl
add
push
outsb
insb
add
cmpb
lret
rorl
cmc
push
lret
sbb
jecxz
or
pusha
loope
out
call
or
jmp
mov
mov
mov
mov
sbb
push
and
ss
and
fwait
sbb
inc
jns
xchg
lock
pop
nop
jno
sub
xchg
cwtl
pop
add
cmp
sub
inc
xor
xor
rcll
adc
cs
jle
jp
dec
or
add
lock
xor
cltd
nop
out
sub
popa
cld
sarb
and
mov
nop
or
lods
ljmp
push
inc
cmp
or
sbb
mov
mov
adc
jns
pop
jp
push
xor
adc
xchg
nop
lock
inc
jne
fwait
rcr
xor
jl
mov
repz
xor
int
adc
push
xchg
dec
je
xor
in
inc
fs
xchg
or
enter
dec
add
pop
adc
cmp
ror
adc
dec
cmpsb
xor
jmp
push
mov
jmp
dec
sbb
sbb
roll
mov
sub
push
es
mov
pop
jne
mov
inc
add
fs
and
sbb
scas
mov
loope
push
add
add
cmp
xchg
adc
add
push
mov
add
nop
jo
inc
inc
or
push
leave
pusha
or
inc
pop
add
dec
xchg
das
or
orl
lock
mov
push
push
dec
sub
adc
je
fcoml
adc
or
push
and
enter
lea
popf
aad
fs
add
push
into
push
add
xor
or
xchg
mov
and
add
add
movsb
lea
or
sub
lcall
and
sbb
sub
jnp
jp
cmp
jmp
test
push
pop
inc
fsubrl
es
adc
mov
je
fmull
mov
xor
jl
jl
and
push
out
and
popa
pop
fs
andb
mov
xor
adc
mov
push
popa
xchg
cs
daa
les
or
push
cwtl
sub
xchg
fstpl
cs
dec
add
push
mov
adc
xchg
mov
lock
test
stc
fisubrs
mov
lods
dec
or
sahf
push
add
mov
mov
shrb
and
push
in
push
sbb
add
mov
shrl
adc
push
enter
inc
sti
in
ss
cmp
mov
add
cmpsb
in
inc
hlt
les
sbbb
pop
pop
jne
dec
xor
push
inc
add
push
into
les
pop
imul
jo
cld
push
push
or
movsb
and
es
mov
mov
inc
nop
dec
jge
push
inc
sub
inc
shlb
dec
sub
mov
das
add
cld
push
stos
push
pop
in
imul
xchg
sub
lods
cld
add
mov
out
test
add
loopne
mov
add
add
mov
movsl
mov
and
pop
mov
mov
push
cmp
cmpsb
or
call
pop
fnstsw
mov
adc
sbb
inc
hlt
push
lret
push
cld
xchg
jg
sub
outsl
adc
xor
and
ret
fmuls
scas
push
cmp
jp
jp
in
dec
dec
lret
jmp
push
notb
mov
movsl
fisubs
jne
jo
lcall
rorb
xor
inc
movsl
arpl
push
push
jbe
cmp
pop
movsb
xchg
add
shl
cmp
lock
data16
clc
or
push
sub
sbb
dec
gs
enter
xchg
stos
andl
inc
dec
lds
mov
aam
push
mov
imul
dec
mov
orb
jbe
sub
xor
xchg
outsl
add
in
out
mov
add
cmp
xchg
inc
repnz
mov
and
inc
xlat
xchg
inc
add
add
push
insb
fs
stos
incb
xchg
inc
sub
js
mov
stc
repnz
pop
loopne
dec
je
or
and
mov
dec
jmp
jmp
inc
test
nop
push
dec
jecxz
rorb
mov
jae
ret
call
stc
jle
addl
addr16
sbb
inc
cli
xchg
fldz
dec
stos
or
pop
push
push
mov
fstpl
call
adc
psubsb
sbb
sub
lock
or
adc
or
std
cmp
and
frstor
and
and
add
lea
cmc
dec
shl
sbb
sub
movsl
mov
push
test
lods
push
enter
dec
jns
adc
jnp
inc
ror
popf
aas
pop
xor
xor
push
popa
xor
fs
sbb
push
or
hlt
in
icebp
sbb
and
out
in
cli
adc
adc
and
inc
pop
ret
push
inc
jp
add
pop
push
test
mov
push
xor
sbb
inc
inc
pslld
std
jbe
es
push
add
push
aad
dec
outsl
incl
lret
cmp
push
sub
push
add
popa
xchg
cmc
dec
arpl
push
test
ss
movsb
push
xchg
dec
xor
sbb
jne
adc
inc
stc
dec
movsb
add
xor
shrl
lcall
in
inc
dec
cmovnp
stos
xlat
xchg
cld
pop
mov
mov
popl
insb
mov
cmp
outsl
sbb
ficoms
adc
in
mov
add
mov
imul
jl
loop
or
nop
adc
popf
jb
enter
ret
push
push
or
inc
jl
dec
clc
jbe
push
inc
xor
bound
mov
push
dec
int
imul
test
mov
xchg
test
or
and
test
adc
mov
xchg
xchg
dec
sbb
inc
mov
mov
push
cmpsb
mov
or
sbb
jle
pop
add
insl
add
sahf
popf
sbb
cwtl
push
xchg
dec
loope
jp
push
mov
pop
sbb
jo
unpcklps
js
cmp
mov
adcl
jg
pop
std
jl
dec
jle
adc
stos
push
mov
jmp
lods
cmp
add
or
rorl
add
addr16
push
sbb
sbb
add
out
data16
mov
repnz
pop
imul
add
add
push
add
push
movb
xor
add
call
add
pop
inc
daa
pop
push
cmp
sub
js
addl
push
lock
inc
lahf
push
cld
push
inc
xlat
pop
cmp
es
cs
addr16
mov
js
jle
ja
in
and
inc
lock
movl
mov
inc
push
mov
or
xor
or
pop
sub
out
sbb
fwait
pop
test
mov
push
and
pop
pop
mov
dec
jae
lret
jno
push
inc
add
sbb
divl
cmp
pop
push
outsl
push
push
inc
lea
jo
jb
imul
popa
and
sbb
fcmove
shr
rclb
jbe
adc
add
aam
mov
fdivr
aaa
stos
clc
add
dec
test
loop
fwait
rcl
lea
pop
push
jl
out
adc
orl
shll
adc
and
push
mov
mov
inc
push
and
sub
sbb
mov
scas
scas
add
sbb
jo
ret
adc
xchg
jmp
adc
pop
js
je
inc
loope
pop
in
adc
daa
bound
push
pop
push
mov
push
jb
cs
xchg
insb
imul
fs
movsl
push
es
push
pop
cmp
or
mov
adc
pop
add
add
cs
scas
in
xchg
mov
push
stc
xchg
es
pusha
or
or
and
sub
icebp
nop
pop
lock
or
push
dec
sbb
jle
je
bound
pop
add
xor
push
inc
push
xorb
std
inc
and
bnd
inc
lods
jg
push
sbb
jns
add
pusha
dec
add
sbb
pop
mov
xor
push
xchg
cld
pop
cltd
xor
mov
inc
jbe
idivb
call
std
jmp
or
mov
test
sbb
test
test
adc
lock
dec
jbe
or
push
divb
sbb
nop
and
pusha
insb
into
push
or
adc
inc
movsl
rolb
jp
in
mov
push
lea
loop
lds
mov
adc
test
test
gs
jmp
lret
push
xchg
test
in
in
mov
add
pop
jnp
icebp
pop
enter
jne
push
test
movsb
push
cli
push
rolb
lock
mov
push
push
jecxz
cmp
ljmp
cmp
mov
cmc
ret
test
test
fsubrs
cli
xchg
repnz
xor
pop
movsb
sub
pop
mov
sar
data16
int3
mov
adc
or
mov
test
xor
je
add
icebp
mov
inc
cmpsb
loopne
cmp
or
xchg
and
adc
sbb
push
jo
je
in
dec
jl
mov
fwait
pushf
inc
mov
dec
or
sbb
aam
or
lea
push
in
xor
jg
mov
dec
pusha
mov
rol
mov
ror
xor
shr
xor
test
rol
mov
rol
xor
shr
xor
add
add
add
and
enter
into
repz
or
jae
or
and
imul
call
add
aam
sub
jge
add
notb
iret
xlat
lods
loop
ror
cli
fisubrs
jge
xor
aam
cli
and
and
xchg
push
aam
cmpsb
in
test
cmp
mov
repnz
rorb
aaa
push
test
or
push
or
and
not
ret
rcl
add
add
jo
add
add
inc
lcall
or
call
sub
xchg
xorl
ljmp
int
xchg
shr
add
push
xor
fsub
in
dec
rcrl
xor
in
movsb
jb
xor
in
shrb
cmpsl
sbb
lahf
push
cmp
inc
push
push
punpckldq
push
dec
pusha
inc
push
bound
pop
mov
pop
or
mov
xor
jo
cs
cltd
call
cmpsb
mov
in
xor
call
adc
pushf
cmp
pop
cmp
pop
dec
rcl
aam
sti
mov
push
or
int3
mov
sub
cmp
fmull
in
xlat
inc
insl
pop
push
xor
and
and
jl
iret
or
xor
cmp
imul
xor
push
test
inc
mov
insb
fwait
loopne
cmp
jo
ret
push
jo
je
or
ficoms
call
lcall
dec
adc
push
loop
jle
inc
pop
mov
add
add
pop
sub
jbe
call
fcomi
mov
or
clc
jp
push
and
nop
cmpsb
bnd
add
gs
fdivrs
inc
movsb
imul
and
pop
lret
inc
mov
aam
mov
xchg
jmp
jo
cli
stos
pusha
nop
or
adcb
dec
shll
cmp
sub
shlb
call
xor
out
rolb
add
push
pusha
inc
aaa
cli
xor
xor
xor
shlb
shlb
inc
sub
in
imul
pusha
lahf
jo
add
add
mov
dec
fs
add
and
push
imul
dec
and
push
adc
push
xor
and
push
pop
cmp
and
pop
pop
pop
adc
test
push
xadd
or
movsb
or
out
fs
je
pop
dec
lcall
cs
enter
push
pop
and
movsl
mov
repnz
mov
or
rolb
dec
sahf
fs
and
shr
addl
xor
cmpsl
jl
dec
dec
movsb
shlb
test
addr16
mov
adc
lock
dec
negb
push
dec
and
push
fmuls
adc
cmpsb
imul
out
pop
loopne
or
and
add
and
mov
pop
sbb
dec
movb
pushf
out
pop
add
sub
mov
mov
add
inc
add
lret
jb
testb
incb
popf
add
sub
lea
push
dec
ljmp
enter
mov
dec
clc
sub
sarb
clc
mov
or
mov
xchg
fcmovu
mov
jne
loop
adc
mov
sub
push
xor
loopne
lea
jmp
lea
push
sbb
jns
out
mov
add
outsb
fbstp
pop
dec
jne
pop
dec
loope
add
mov
lock
ficomps
or
cmp
jbe
or
inc
push
xor
push
fs
fisttpl
mov
inc
add
jae
shl
or
xchg
sub
sub
stos
or
stos
fisttps
pop
mov
or
insl
mov
rcrl
mov
outsl
pop
loopne
shll
push
hlt
dec
mov
notl
jl
mov
mov
fdivrs
fcoms
pop
into
xor
inc
pop
cmp
jb
cmp
ja
int
shrl
sbb
inc
aaa
popa
pop
sub
cmp
push
aas
jbe
inc
cwtl
push
sahf
dec
je
add
and
lcall
jle
test
or
or
loop
push
inc
adc
sbb
add
xor
cmpb
xchg
dec
lret
jmp
fstpt
mov
mov
imul
das
je
or
mov
adc
imul
jne,pn
pop
sbb
idivb
add
push
dec
inc
lea
inc
mov
jmp
dec
mov
dec
xor
push
movsb
jne
jmp
sub
jnp
push
xorb
cld
and
sahf
add
sbb
cli
or
popf
push
or
sub
stc
inc
cmp
fs
ret
dec
dec
inc
push
inc
and
mov
push
cwtl
insl
cltd
push
xchg
mov
fsubrs
pop
cwtl
jbe
inc
push
mov
jge
lock
mov
lea
pop
int
xor
add
insb
hlt
and
or
or
jle
lret
sahf
jb
sahf
rcrb
cmp
divb
orb
movsl
inc
push
jg
clc
je
fdivr
outsb
mov
jb
or
ja
lods
or
pushf
pushf
push
inc
jecxz
ret
pop
push
add
add
shrb
dec
push
mov
sbb
mov
popa
loop
jne
xor
mov
cmpsb
push
inc
and
inc
in
cld
pcmpgtd
push
adc
imul
rol
sar
cmpsl
pop
shl
add
jmp
cwtl
aas
les
iret
jne
and
dec
hlt
xor
je
pop
add
fs
jne
repnz
jo
cmp
push
test
sub
push
mov
or
add
pop
jae
nop
inc
adc
cmp
xorb
mov
dec
sub
insl
pop
orb
inc
ljmp
lahf
popa
dec
sbbl
imul
stc
inc
jg
or
jge
and
jle
cld
outsl
outsb
outsb
es
sub
sub
and
pop
cmp
jl
movsb
aad
fistpl
adc
inc
test
mov
mov
jbe
jp
jb
jbe
mov
outsb
lock
jne
or
je,pn
test
jne
je
outsb
and
sub
pop
add
je
xor
lock
adc
xchg
adc
jp
inc
ds
mov
sub
testb
xor
lahf
enter
push
mov
inc
and
mov
mov
inc
icebp
mov
jp
jmp
mov
mov
mov
jbe
movsb
add
add
stos
clc
lahf
lea
repnz
add
fisttpll
ret
mov
fildll
cwtl
mov
or
xor
push
insb
cmc
xor
mov
daa
ret
dec
dec
add
out
fadd
lds
mov
push
out
clc
sbb
test
bound
cmpsb
fnsave
test
sub
xlat
popa
sbb
sbb
sbb
imul
sub
xor
sbb
je
inc
and
lea
cmp
shrb
sbb
inc
xchg
loop
jb
andl
pop
cmp
mov
xchg
daa
xor
xor
mov
or
rcrb
sbb
pop
cwtl
xor
int3
inc
aam
mov
cld
mov
mov
add
frstor
cmp
push
push
fldt
inc
movb
jae
aaa
cmp
mov
insl
and
fisttps
or
xchg
adc
add
cmp
dec
sbb
jbe
fsts
mov
sahf
je
or
lods
jbe
pop
mov
xor
add
stc
and
and
inc
dec
je
push
ss
or
sti
inc
in
in
movb
arpl
fildl
push
xchg
and
movsb
push
inc
inc
call
mov
es
jl
add
cmp
add
push
sbb
fwait
dec
pushf
cmp
mov
cmp
push
or
mov
cmp
lock
pop
xlat
cld
xchg
popa
hlt
sti
push
inc
xchg
xchg
fs
adcb
mov
xchg
add
jge
or
mov
movsl
mov
sbb
jb
cs
cmp
mov
or
ds
adc
mov
push
lea
and
mov
stos
pushl
ret
je
insl
mov
fiaddl
mov
push
outsb
mov
add
sub
call
jbe
fildll
mov
push
xor
and
jne
addl
xchg
xchg
jae
popa
push
ret
pop
push
ja
or
sub
push
push
leave
add
and
mov
pop
leave
or
xchg
dec
push
test
and
fs
and
lret
add
push
xchg
xchg
and
cmpsb
andb
faddp
inc
xlat
ret
std
jne
rcl
xchg
imul
shrl
xor
imul
dec
shlb
shl
testl
jne
dec
rolb
stos
mov
and
in
lcall
lret
push
xchg
push
push
fdivl
shl
psubusb
xchg
add
xchg
pop
cwtl
sub
das
sbb
mov
das
bound
cmp
mov
adc
ljmp
cmpl
add
test
out
in
fcomp
sbb
cmp
cmp
je
mov
cmp
inc
aaa
mov
cld
mov
inc
inc
inc
xchg
add
cmpl
insb
mov
pop
and
aaa
sbb
adc
lock
mov
add
cmp
loopne
xor
test
andl
inc
fsubr
cmp
imul
push
push
mov
int3
inc
and
jecxz
inc
fs
rolb
fucomi
outsb
insb
jne
jl
sub
sbb
fdivrs
sbb
mov
je
stos
inc
pushl
pop
int
push
ss
inc
and
mov
inc
out
xchg
pop
jne
les
aam
test
scas
mov
push
loopne
pop
cmp
cmpsb
or
loope
jo
push
inc
cwtl
or
loop
sub
dec
mov
into
ss
insb
test
movsb
push
mov
lret
lds
xchg
sub
mov
cmp
cmpl
jo
and
imul
add
mov
dec
and
nop
add
enter
sahf
ret
sahf
js
mov
das
lds
jmp
inc
push
sbb
lahf
popa
in
adc
pop
je
pop
jne
push
leave
or
je
rcrl
jno
xor
or
jmp
add
jne
xor
adc
mov
mov
inc
test
xchg
mov
orl
adc
xchg
lret
in
xor
cmp
pop
mov
or
or
and
mov
pushf
sbb
cmp
fisubrl
popa
inc
push
ds
jmp
das
mov
popa
adc
imul
cmp
movsb
sub
mov
sbb
cmp
jbe
in
fiaddl
and
and
mov
dec
fadds
stos
push
sub
jb
pop
xor
xor
sub
cmp
call
cmp
adc
xchg
jae
fwait
mov
lods
add
int
loope
inc
into
adc
data16
xor
and
mov
or
xchg
add
nop
pop
roll
and
or
sbb
movsb
sub
cmp
mov
aam
int3
or
neg
lock
mov
aam
push
push
stc
imul
xchg
sahf
push
int3
sbb
ret
adc
aas
pusha
or
adc
popf
mov
mov
inc
adc
pushf
xchg
movsl
dec
inc
and
and
push
sahf
orl
outsl
lock
les
pop
xlat
sahf
cs
inc
sahf
arpl
or
add
sti
loopne
add
js
rcll
loop
fmuls
aaa
pushl
push
push
cmp
pop
push
cli
xor
and
divb
sbb
dec
hlt
pop
cmp
cmp
subb
and
addr16
les
mov
je
icebp
mov
ljmp
pop
mov
in
clc
jne
adc
mov
sti
punpckldq
push
hlt
lds
icebp
add
mov
or
rolb
pusha
sbb
and
adc
sarl
jmp
push
push
sub
jnp
sbbb
inc
insl
cmp
mov
dec
mov
in
or
jmp
dec
es
data16
adc
rcrb
mov
xor
inc
pop
mov
pop
lods
jne
adc
sbb
shll
loope
push
orb
inc
ret
test
and
and
cmp
dec
cmp
insl
or
sbb
sub
cmp
sub
clc
mulb
xchg
jp
fstl
sahf
cmp
and
clc
les
add
xor
jl
loop
shlb
ja
jbe
and
pop
sbb
fwait
sahf
xor
fxam
xchg
ret
or
and
add
lahf
xchg
lcall
cmp
pop
sub
dec
enter
and
inc
pop
xchg
aam
shlb
and
fimull
add
pop
adc
shl
pop
lret
sbbl
mov
lock
cmp
cld
or
negb
mov
adc
adc
lock
sahf
or
dec
scas
dec
cld
testb
notb
aaa
jbe
mov
and
out
or
jnp
pop
sbb
int
adc
loop
movsb
dec
or
jg
jp
jno
mov
loop
es
pop
mov
mov
push
xor
and
loope
idiv
dec
xor
push
adc
pop
imul
sbb
push
xor
cmp
xchg
adc
mov
pop
mov
cmc
outsl
push
sbb
inc
xchg
aaa
dec
sbb
ja
rorb
adc
inc
add
dec
lea
adc
pop
lahf
in
push
sarb
daa
mov
xchg
xchg
jle
test
push
ror
addb
adc
xchg
and
pop
pop
push
dec
rorl
pop
rcl
cli
and
push
mov
cmp
inc
mov
jb
loopne
pop
jp
lods
pop
push
scas
or
push
pslld
adc
xchg
test
lock
aaa
cmpsb
pusha
leave
subl
and
lods
dec
stos
jnp
and
imull
push
jl
andl
adc
inc
add
mov
lret
dec
sti
movsb
mov
addr16
add
dec
add
add
mov
insb
movsl
andl
cmp
ja
mov
sti
in
mov
adc
mov
xor
sbb
dec
xchg
pushf
jmp
inc
or
pusha
ljmp
add
shlb
pop
dec
mov
or
daa
mov
push
pop
lcall
dec
or
add
repz
and
sub
adc
cmp
call
inc
inc
push
mov
push
adc
test
and
pop
push
data16
sti
loopne
and
mov
mov
and
dec
sbb
and
addb
sti
or
faddl
or
sbb
dec
sub
cmp
jbe
sbb
sbb
sbb
test
sub
shl
lret
and
adc
xchg
fisttpl
iret
sbb
outsb
and
jle
es
push
mov
push
xchg
cmpsb
pop
push
mov
cmp
and
in
sbb
ja
rorl
cmc
js
add
and
and
test
movl
jl
das
push
sbbb
mov
sub
xchg
mov
push
mov
test
es
mov
or
adc
and
xor
pop
ror
test
mov
cmp
and
arpl
out
mov
pop
xor
push
pop
ss
push
pop
and
mov
mov
mov
add
into
or
cmpsl
and
lretw
add
xchg
sub
jnp
and
push
sbb
and
lret
test
lods
push
lcall
fldt
inc
jge
or
pop
inc
push
insl
dec
push
push
test
xor
xor
lcall
std
testb
and
jne
orl
sbb
dec
inc
mov
out
lods
inc
test
aas
add
dec
pop
push
imul
sbb
mov
mov
push
inc
jmp
jge
or
mov
pop
addl
push
add
pusha
push
pushl
mov
mov
xchg
cltd
loopne
jnp
pop
add
sub
mov
out
fisttps
mov
mov
cmp
daa
pop
stc
push
push
push
push
add
mov
mov
nop
push
inc
xor
add
xchg
and
in
mov
lods
jbe
sahf
or
sub
adc
sub
sub
sub
push
das
mov
arpl
inc
and
hlt
je
pusha
movsbl
cmp
jbe
lds
jbe
fisttps
rcll
xor
enter
push
push
jp
in
pop
or
cmp
insl
xor
and
inc
leave
notb
push
test
mov
jnp
test
repz
xchg
pop
add
xor
mov
stc
sbb
orl
clc
test
insb
push
push
insb
add
shrb
dec
push
and
dec
fisubrs
sbbl
add
add
or
dec
add
push
add
sub
xor
out
xor
or
adc
cmp
fs
cmp
lcall
jbe
lods
cmpb
push
jne
pop
fsubs
ret
out
lahf
movsb
mov
pop
pop
mov
je
popa
push
push
mov
sbb
sbb
popa
loop
mov
jbe
repz
mov
cmp
pushf
je
jae
push
rclb
lret
adc
jmp
inc
adc
or
mov
inc
xor
scas
or
pop
loop
and
or
aam
push
std
inc
cmp
dec
nop
mov
je
pop
rorl
sbb
daa
push
add
push
and
fisttps
push
push
pop
and
loope
fidivl
imulb
popf
add
xor
pop
clc
fdivrl
and
bound
call
cmp
jne
mov
add
orb
or
inc
add
imul
dec
mov
or
add
not
pop
mov
xchg
js
adc
or
or
sub
pop
cmpltps
adc
mov
mov
sar
sub
inc
jmp
sarb
lret
jbe
sub
add
mov
adc
sahf
push
pop
mov
fsubrl
add
push
dec
mov
testb
cmp
jbe
shlb
lods
cmp
jb
add
sub
std
xchg
push
cmp
inc
push
ret
pop
or
lret
and
mov
pop
mov
stos
pop
inc
push
ret
int
jecxz,pn
shlb
sbb
rorb
sub
popa
movsb
pop
jmp
dec
push
dec
mov
jecxz
cmp
xchg
mov
je
sub
clc
in
pop
inc
push
out
out
add
push
test
add
test
push
or
in
or
dec
lock
es
pop
cmpsb
cmp
push
add
xor
or
sbb
push
push
jbe
mov
mov
dec
xor
cli
add
lock
adc
pop
je
andb
cld
rcrb
or
ret
jl
mov
dec
inc
pop
push
xchg
pop
lock
and
xchg
ret
ret
mov
pushl
sbb
adc
adc
addr16
pop
icebp
or
cmp
je
push
inc
adc
adc
inc
les
sub
adc
inc
add
xchg
inc
scas
ret
cmp
push
cmp
and
std
dec
inc
faddl
pop
cmp
icebp
xchg
push
fnsave
mov
sub
mov
enter
jb
mov
sbb
push
dec
into
sbb
dec
fiadds
pop
stos
cmp
dec
mov
scas
sub
and
push
mov
adc
pop
cmp
xorb
add
mov
loopne
jae
ss
jb
jecxz
lahf
push
xor
jne
mov
mov
inc
add
mov
ja
mov
cmpsb
mov
mov
sbb
js
adc
push
stos
dec
and
incb
in
test
inc
or
add
inc
pop
push
lock
cmp
faddl
pushf
lea
jbe
fsub
push
add
cmpsb
adc
dec
sbb
mov
and
inc
push
mov
and
out
jg
adc
xchg
repnz
sarb
loope
das
dec
or
mov
push
sub
add
jl
inc
lahf
jmp
mov
aam
and
cmp
xor
cmp
sub
mov
in
xchg
std
js
sbb
mov
cmp
xor
dec
test
daa
inc
sbb
and
add
cmp
adc
lds
dec
mov
sarb
add
jo
push
cmp
xchg
add
xchg
pop
xor
call
push
jbe
lret
mov
pusha
and
jl
mov
rcrl
mov
inc
xlat
mov
mov
adc
inc
jb
jl
dec
pop
adc
cmp
xor
and
roll
fdivs
push
out
push
fs
and
mov
xlat
loopne
addl
inc
jo
sbb
xlat
dec
add
inc
int3
xor
outsl
xor
or
cmp
xor
bound
dec
jmp
cmp
das
push
mov
jne
pushf
rolb
add
push
add
mov
mov
rclb
mov
mov
cmp
and
adc
inc
adc
jmp
mov
or
mov
dec
push
or
imul
xchg
mov
bound
clc
sbb
xor
test
sar
adc
or
cmp
mov
jl
cmp
add
or
add
fmull
fistl
and
sub
pop
add
rclb
shlb
mov
sbb
push
add
int
cs
push
and
loopne
ljmp
jns
test
stos
pop
mov
cmp
imul
ss
xchg
lods
push
outsl
inc
add
pop
jge
mov
add
dec
inc
mov
and
inc
shl
scas
test
add
adc
mov
sbb
pop
ret
add
mov
inc
adc
add
aad
nop
cmp
mov
pop
hlt
cltd
jnp
sub
inc
lods
mov
jmp
lahf
push
loop
aam
sub
xor
mov
mov
push
cmp
pusha
out
jp
inc
push
and
movl
lea
mov
loope
add
lcall
shlb
add
ficoml
pop
pop
jb
xorl
dec
xor
add
stos
jne
pop
add
xchg
push
adc
sbb
inc
fdivrs
adc
mov
inc
mov
mov
pop
test
nop
scas
jns
mov
xchg
addl
add
dec
dec
mov
and
jns
mov
xorl
lahf
mov
fsubrp
cmc
pop
lea
jae
and
ljmp
mov
test
inc
or
rcrl
je
or
insl
fcompl
pop
ja
loope
xchg
sbb
mov
mov
ret
mov
jno
sub
add
push
test
int
add
mov
add
sar
jbe
and
jmp
test
inc
mov
jmp
aaa
es
leave
stos
xlat
push
addb
test
bound
loope
sbb
movsb
and
push
dec
jmp
mov
scas
andl
scas
aam
aam
out
mov
inc
lret
stos
xor
adc
push
add
inc
push
adc
mov
and
pop
pop
in
ret
jle
bndldx
dec
leave
ret
pop
mov
cmp
mov
xor
dec
shl
sub
adc
push
xchg
mov
shlb
cli
or
mov
inc
push
jg
or
pop
repnz
mov
lea
ret
push
add
sbb
jne
mulb
adc
cmpsb
clc
xchg
mov
fs
adc
loopne
or
inc
aam
imul
inc
call
lea
fs
and
xor
cmp
mov
aaa
int3
in
adc
add
xor
push
leave
mov
add
ret
cmp
dec
sub
sbb
mov
sub
mov
inc
pop
xlat
loopne
scas
stos
pop
pop
mov
and
fidivl
jmp
xchg
jmp
adc
test
ret
dec
xchg
push
dec
inc
adc
mov
mov
pop
lock
popf
iret
push
adc
adc
inc
push
or
add
cwtl
imul
push
add
inc
mov
or
adc
shlb
xor
push
cmp
sub
add
dec
out
sub
icebp
lahf
mov
sbb
mov
jle
xchg
mov
or
adc
dec
xor
or
jo
push
or
inc
cmp
add
cmp
push
je
add
shrb
pop
cmp
mov
mov
and
adc
sub
mov
data16
pop
daa
pop
jnp
pop
lahf
inc
pop
add
sub
pop
cmp
je
mov
icebp
daa
and
mov
ljmp
xor
add
in
lds
sbbb
fisttps
jl
jmp
push
sub
add
aad
aas
mov
mov
cmp
inc
arpl
mov
cld
je
dec
je
dec
ret
or
add
mov
lcall
mov
jl
or
sub
out
xor
push
mov
sub
pop
icebp
inc
dec
lea
or
mov
cmp
inc
adc
out
in
and
test
fs
dec
pop
ljmp
mov
xlat
xchg
int3
pusha
add
fwait
adc
subl
in
movsl
mov
cli
test
add
fs
lock
lods
or
js
push
mov
out
cld
mov
push
bound
ljmp
sbb
jns
pop
jle
lods
xor
push
and
mov
sahf
or
clc
push
or
rorl
add
inc
lcall
lret
sub
jg
lret
mov
jl
sti
pop
add
call
mov
push
sbb
aam
sub
and
scas
adcl
mov
mov
inc
cs
cmpsl
pop
add
or
sbb
inc
mov
lods
mov
fcompl
xor
jbe
sahf
rolb
mov
addl
fisttpll
xor
mov
ljmp
mov
in
mov
repz
mov
jns
xor
or
call
mov
add
or
subps
push
je
sbb
jmp
rorb
in
add
imul
adc
in
jl
push
adc
jne
xchg
or
push
cltd
bound
mov
das
lods
add
call
or
icebp
loopne
or
xchg
or
adc
lret
movsl
ja
jne
pop
in
sbb
enter
in
and
in
dec
adc
pop
mov
xchg
cld
out
and
or
xchg
movsb
pop
or
dec
adc
and
enter
sbb
shrb
movsb
xchg
push
and
pop
lods
or
in
popa
add
fcmovb
movsl
mov
mov
rolb
aad
dec
loopne
or
and
aad
push
daa
or
mov
rorb
lcall
pop
jo
push
and
and
adc
js
push
dec
sbb
hlt
punpckhbw
xor
testb
mov
push
lret
or
mov
pop
or
jnp
cmp
mov
sti
sbb
data16
pop
insb
xchg
push
add
movsb
cmp
sub
lret
jns
dec
dec
clc
jne
rcrb
test
cmp
popa
cmpsl
sbb
push
sbb
cmp
stos
es
mov
fistps
jo
xchg
sbb
xchg
cmp
hlt
cmc
sbb
scas
jns
or
adc
and
dec
pop
cmpl
add
lret
sbb
flds
or
js
fildl
cld
loopne
fnstenv
mov
and
in
addl
stc
repz
int
sub
add
or
add
in
mov
xlat
cld
clc
pushl
and
lret
lea
cmp
mov
adc
sub
cmp
mov
cs
test
cmp
stc
mov
pop
add
cmp
or
cmp
push
mov
ds
mov
sub
roll
fmull
mov
xor
enter
mov
or
or
adc
mov
data16
cmp
sbb
cmp
jne
dec
lret
sub
sub
pop
add
dec
cmp
sub
gs
jae
movl
jle
mov
jne
call
jge
mov
push
xchg
movsb
loopne
push
push
into
dec
bound
in
je
test
shrb
mov
roll
inc
pop
mov
push
in
mov
daa
bound
test
fldt
pop
push
push
or
nop
jb
sub
scas
inc
mov
orb
mov
adc
xchg
mov
fisubrl
and
or
mov
adc
xchg
xchg
or
orl
leave
sub
inc
add
inc
adc
leave
iret
add
xor
pop
xchg
jne
push
push
mov
xchg
jns
lahf
mov
stos
or
jle
lods
cmp
mov
mov
mov
jns
sub
nop
inc
pop
dec
or
add
movsb
fwait
mov
jl
lea
addr16
xchg
pusha
ds
pusha
in
mov
movaps
cmp
je
jg
dec
mov
pop
pop
adcb
out
jecxz
aam
inc
mov
or
xor
popa
aaa
fdivl
or
rclb
fildl
inc
adc
dec
iret
inc
popf
out
adc
jbe
cmp
fsubrl
sbb
inc
sbb
aas
mov
push
aas
cli
jbe
orl
add
pop
in
pop
hlt
jmp
rorb
es
add
inc
clc
mov
das
sbb
shll
imul
push
sbb
adc
adc
dec
pop
inc
cs
ret
sbb
test
iret
jo
adc
mov
push
aaa
or
andb
mov
inc
xor
scas
mov
push
insb
add
divb
andl
fcoms
and
ja
call
cmpb
mov
sti
sbb
cmp
adc
fidivrs
add
push
es
jmp
mov
mov
mov
clc
xchg
lea
stos
add
sbb
clc
mov
push
mov
inc
sbb
nop
push
test
popf
pop
in
imul
jb
cmp
mov
fsubrs
mov
popa
lock
fnstenv
imul
push
sbb
jle
adc
cmp
cmpsl
jno
xchg
cmp
and
andb
jb
addr16
je
mov
leave
xor
and
cmp
xor
mov
test
pop
hlt
adc
and
jg,pn
sti
or
cmp
into
jb
push
xchg
or
add
jae
jns
shrb
add
mov
loope
xor
mov
call
jo
mov
inc
lcall
bound
dec
cmp
add
mov
inc
mov
sub
daa
add
aaa
push
repnz
xor
fisubl
pushf
push
add
aaa
cwtl
or
adc
mov
push
cmp
add
mov
add
lret
adc
jl
adc
mov
loopne
mov
pop
push
xor
dec
pop
inc
sbb
cwtl
push
inc
jge
mov
rol
jmp
xor
adc
addr16
pop
jmp
push
push
xor
cltd
xchg
loopne
adc
clc
hlt
push
fs
mov
nop
dec
mov
add
iret
mov
sbb
lea
add
or
in
inc
dec
dec
cmpsl
adc
sub
adc
into
sbb
mov
lcall
sarl
bound
nop
test
mov
mov
add
jl
dec
je
mov
inc
push
sbb
popa
push
sub
sub
jmp
add
addb
add
out
jle
add
clc
jno
pop
mov
sub
pop
mov
add
sbb
xor
icebp
or
xchg
inc
fimuls
repz
sbb
out
pop
pushf
or
sbbl
sti
and
std
inc
mov
cmp
mov
mov
and
mov
stc
fnstcw
or
loope
xchg
jmp
outsl
outsl
and
sub
xchg
push
dec
faddl
jl
test
add
xor
setbe
out
push
xchg
call
jae
in
sbb
xchg
xchg
sub
mov
push
and
rorl
dec
jge
sub
mov
loopne
jmp
mov
cmp
and
loope
pop
test
adc
xor
test
stos
xor
push
insl
popf
xor
in
push
or
orl
fildl
add
or
adc
sub
clc
gs
xchg
push
mulb
pop
outsb
sbb
out
mov
inc
fcompl
lret
push
dec
aam
push
negl
sub
das
inc
js
push
xlat
push
icebp
in
fadds
mov
roll
add
andl
ficompl
and
push
lock
dec
or
pop
dec
dec
out
rcrl
mov
shld
mov
insb
adc
pop
mov
push
inc
cmp
mov
cmc
scas
adc
xchg
mov
xor
xchg
cltd
aas
cmp
cmp
jnp
sbb
repz
loope
dec
inc
insl
mov
xchg
mov
stos
sarl
dec
int
mov
lea
lret
xor
call
lods
cmp
sbb
cwtl
xchg
mov
int
pop
mov
or
enter
ljmp
xor
mov
push
popa
mov
lret
add
inc
ds
daa
sbb
mov
incb
mov
xor
or
je
popa
or
decl
mov
push
sub
xor
push
mov
push
rcrl
mov
sub
shl
adc
push
test
insl
jl
fadds
shl
mov
and
cld
push
cwtl
cmp
xchg
movl
add
cmp
lea
add
add
add
xor
cmp
xor
push
pusha
mov
frstor
or
in
xchg
jecxz
xchg
gs
push
push
hlt
mov
fucomip
push
mov
dec
inc
cmpl
jbe
repz
adc
adc
or
jge
add
data16
xchg
or
shrb
sbb
jmp
push
mov
add
mov
add
jbe
mov
ret
add
add
rcrb
add
fstpt
jle
out
sbb
mov
iret
bnd
inc
lods
xor
sbb
sti
jbe
cmc
ret
push
jae
lea
push
sub
sub
cwtl
sub
stos
fiadds
ja
push
hlt
dec
pop
ret
test
or
adc
inc
cmp
and
sbb
adc
add
fisubrs
dec
xor
lock
ja
notl
push
cmp
jae
inc
jmp
push
jp
sub
je
lea
scas
and
xchg
adcb
out
imul
inc
mov
mov
loop
fsub
jns
pop
push
sub
clc
subl
fiadds
mov
xchg
sub
into
movsb
in
mov
xchg
ja
and
add
loopne
push
push
repz
push
push
jne
call
mov
add
add
repnz
cmp
sbb
data16
ja
in
inc
jmp
xchg
lcall
push
push
inc
addb
les
aad
mov
adc
outsb
sub
inc
push
pop
mov
or
or
pop
test
cmp
jae
leave
add
push
lahf
rcl
or
js
cmp
inc
cmp
shl
jle
pop
popf
insb
sbb
sbb
clc
ret
insb
inc
bnd
dec
inc
mov
ja
cmpb
push
int
fwait
push
pop
mov
xor
sbb
adc
fidivl
pop
lret
inc
dec
inc
test
push
adc
push
add
sbb
sahf
pop
stos
sub
push
sub
push
cmp
jmp
or
add
adc
dec
ret
pop
xor
mov
push
sbb
stos
mov
jmp
mov
fs
outsb
adc
shlb
lea
cli
ja
cmpb
mov
aas
ret
push
enter
or
jmp
mov
adc
enter
int3
or
add
sbb
xor
roll
push
addr16
inc
imul
imul
imul
test
in
dec
xchg
ret
push
xor
lcall
xchg
pop
sbb
fists
xor
in
mov
cmp
push
cmpsb
mov
sbb
lods
movsl
movsb
mov
or
push
adc
pop
or
push
add
push
cmp
adc
xchg
jmp
dec
add
inc
push
cmp
mull
clc
enter
push
mov
dec
negl
rorb
cmp
repz
or
push
cmp
fld
and
ja
imul
sbb
mov
rorb
gs
adcb
xlat
inc
sub
ss
pop
icebp
mov
push
into
sub
inc
add
push
add
or
insb
jecxz
or
inc
insl
cmp
and
or
clc
cwtl
jae
mov
add
pop
mov
cmp
push
push
popa
sbb
mov
inc
sub
and
cmpsl
nop
loope
test
dec
sub
add
adc
adc
mov
and
outsl
int3
pop
scas
cld
imul
fbstp
hlt
cmp
inc
add
and
add
xor
push
pop
addb
mov
add
or
cmp
test
adc
mov
xor
adc
and
mov
sbb
jns
cmp
jp
into
clc
pop
or
xchg
js
pop
inc
or
nop
adc
andl
cmpl
jle
xor
mov
mov
dec
or
xlat
cltd
scas
mov
pop
inc
jecxz
sub
xor
push
or
cmp
or
and
add
repnz
adc
sar
lea
inc
test
lret
and
adc
sbb
in
aaa
mov
ds
call
xor
in
dec
cld
or
in
push
mov
in
push
lret
and
jmp
aam
push
pop
repnz
mov
sbb
cmp
cmc
mov
pushl
mov
cmpsl
mov
cmc
mov
ret
xor
fstps
cmpsb
xor
stos
sub
sbb
dec
mov
mov
adc
sbb
mov
sub
and
sub
insb
jnp
fistpl
jg
outsb
lret
into
adc
cmpsl
jo
lea
jns
imul
psrad
loopne
andl
mov
cmp
and
lret
pop
pop
mov
adc
pop
addr16
and
out
mov
jo
mov
cld
mov
cmp
xchg
add
ret
pop
or
mov
or
lcall
lret
enter
jne
mull
mov
stos
cmp
stos
dec
xchg
pop
ret
xor
add
cwtl
mov
jne
push
sub
and
das
xorl
call
or
xor
cmpsl
insl
add
repnz
int3
mov
sbb
adc
fdivl
shrb
pusha
test
mov
xor
or
int3
add
add
mov
add
jns
or
in
sbb
movsl
imul
in
hlt
inc
add
or
mov
call
sbb
mov
xor
mov
add
inc
ret
add
loopne
and
jp
cld
xorb
sub
movsl
mov
cmp
mov
mov
mov
movb
sbb
cmp
mov
das
jmp
mov
inc
cli
push
xchg
adc
pop
nop
popa
lahf
in
fisubrs
mov
mov
adc
mov
pop
mov
cli
mov
mov
jne
pop
xchg
pop
and
rorb
cmp
incb
jnp
or
xchg
mov
out
push
sbb
pop
xor
pop
add
dec
add
add
mov
sub
inc
fnstcw
jge
and
lock
hlt
cmp
jle
jg
into
pop
push
cmp
and
movsl
xor
inc
cmp
jl
or
mov
mulb
pop
emms
or
shlb
push
xor
or
or
sbb
lock
adc
mov
jbe
imul
in
out
or
jle
dec
pop
lock
mov
cmc
xor
pop
ret
push
das
insb
mov
les
or
push
jl
jecxz
or
cmp
mov
sbb
adc
jg
aam
and
rcll
add
hlt
mov
push
test
mov
dec
int3
rcrb
std
jo
sub
adc
adc
into
sbb
fdivs
cmp
push
lea
sub
stos
das
pop
pop
out
fnsave
or
lcall
aam
inc
fiadds
mov
fadds
pop
or
mov
andb
and
or
pop
sti
or
mov
loope
and
add
mov
pop
mov
jmp
add
xadd
movsb
lret
mov
dec
icebp
jb
movsw
movsb
mov
add
jecxz
ret
adc
inc
xor
rclb
je
jge
sbb
mov
jge
jl
inc
add
dec
add
loope
or
dec
pop
mov
mov
add
rcrb
mov
jmp
test
movsb
fsubrs
daa
mov
pop
lock
pop
and
add
inc
mov
or
addl
cli
and
xor
jnp
adc
xor
pop
pavgw
lods
inc
sarb
lock
lods
nop
sti
mov
addb
or
push
mov
mov
add
cmpsl
xchg
jo
cs
jle
clc
sbb
sbb
jo
popa
stos
cltd
in
out
jo
lret
xor
push
pop
mov
and
mov
aam
cmp
jb
or
inc
mov
xor
mov
push
sub
xchg
notb
cmp
lods
or
mov
testl
push
pop
into
std
xchg
addl
jae
dec
and
cmpsb
xor
mov
pop
enter
or
push
push
push
dec
and
xor
xchg
psubb
jo
and
popa
out
loope
mov
sbb
andb
test
or
cmp
push
cmp
out
or
pop
adc
sub
or
out
mov
into
add
xor
and
and
jbe
lret
dec
sub
shrl
mov
push
lea
dec
pop
or
jg
sub
lods
outsb
pop
push
fdivl
ss
jmp
insb
ficoms
push
js
jbe
mov
jmp
das
and
sub
int
jns
std
push
push
inc
sti
cmp
sbb
or
test
adc
jp
mov
pop
inc
shll
imul
cmp
in
mov
xor
and
pushf
xchg
sub
add
sub
xor
sbb
pop
sbb
pop
jne
and
jmp
sbb
jmp
xor
in
add
jae
lcall
sbb
push
shll
dec
fimuls
dec
jmp
xor
jl
psrld
inc
popa
pushw
sbb
add
inc
or
mull
jo
pop
lcall
sbb
sbb
jl
add
rorb
lods
mov
mov
or
sarl
sub
push
jo
jo
icebp
cs
pusha
rcll
mov
push
xlat
lcall
lods
nop
rorl
and
push
scas
add
aaa
add
dec
mov
xchg
add
scas
pop
or
sbb
or
or
ja
popl
aad
sub
mov
sbb
imul
push
aam
mov
inc
push
mov
js
in
xor
std
mov
adc
cmp
or
dec
leave
inc
or
and
sahf
sbb
jmp
and
outsl
jp
xchg
dec
xchg
mov
pushf
cli
aam
adc
ficomps
ret
adc
push
adc
mov
popf
inc
ja
mov
dec
and
mov
xchg
jge
test
sbb
xor
pop
mov
pop
push
sbb
push
and
lods
pop
push
mov
mov
sbb
pop
cli
dec
mov
cmp
sbb
ret
jnp
mov
xchg
xor
leave
imul
pop
dec
mov
call
das
xchg
cld
xor
cltd
pop
jmp
je
icebp
cmpl
test
mov
sti
pop
push
decl
dec
xchg
pop
mov
pop
push
mov
push
push
push
adc
pop
adc
cmp
or
pop
jg
shr
mov
outsb
mov
push
dec
out
cwtl
and
lods
test
mov
xlat
mov
add
je
adc
sbb
jb
loopne
cmpsl
mov
inc
lcall
and
lcall
testl
jns
xor
out
cmp
jle
bound
push
cmp
popf
fcomps
mov
add
and
inc
cmp
in
adc
fwait
dec
test
shlb
add
shr
jne
push
add
pop
xor
fwait
sbb
or
xlat
mov
or
pop
push
inc
mov
add
pop
jmp
in
xchg
jne
repz
add
mov
mov
scas
inc
testb
dec
insb
mov
or
pop
lret
insb
sbb
stc
inc
or
push
push
out
dec
jo
dec
inc
push
mov
lcall
idivl
push
bound
cmpsl
shlb
in
sub
inc
jo
jne
addl
pop
xlat
mov
pop
sbb
rclb
sbb
add
fisubrl
cs
add
sub
fdivrp
ljmp
add
dec
jb
inc
sahf
cmp
inc
mov
std
sub
mov
je
cmp
je
push
js
mov
testb
je
cmp
mov
push
or
add
push
cmp
pop
sbbb
ret
sub
dec
jnp
push
add
push
adc
add
es
out
ds
mov
sub
loopne
add
cltd
push
fldcw
or
repz
adc
adc
push
inc
loopne
sbbl
push
pop
mov
push
add
cmp
ss
loopne
jae
pop
movsb
mov
dec
and
icebp
jmp
jp
out
jb
add
or
mov
dec
jg
push
jo
dec
adc
jne
jg
add
pusha
bound
jl
movsb
or
in
xchg
or
inc
dec
and
fisubrs
add
push
dec
sbb
lea
adc
and
push
pop
push
xchg
push
mov
jg
xchg
rorb
hlt
push
push
mov
dec
or
or
inc
mov
rorb
or
sbb
movsb
or
faddp
lods
or
dec
push
push
push
mov
and
lcall
sub
pop
pop
push
call
cmp
mov
sbb
add
mov
int3
lock
rorl
sbb
mov
cmp
sbb
push
icebp
jb
or
sbb
roll
add
inc
outsb
lock
cmpb
leave
jmp
lea
push
and
pop
adc
sbb
adc
fldt
lret
loopne
es
data16
cmp
inc
mov
adc
stc
jl
test
and
add
sbb
arpl
push
dec
pop
pop
pop
xchg
in
xor
sub
adc
dec
lahf
sub
daa
xchg
loopne
cwtl
cmovs
js
cwtl
push
pop
add
aaa
int3
sub
scas
cmpsb
icebp
cmpl
push
sub
addr16
cmp
lcall
sbb
lret
jmp
or
fdivr
aaa
les
jle
add
lea
in
orb
push
push
mov
subl
cmpsl
lret
cmp
sbb
dec
and
in
and
lret
shll
imul
movsl
imul
sti
dec
loop
add
loopne
xchg
sbb
inc
in
jl
push
pusha
and
sub
jo
push
or
sbbb
outsb
pop
push
mov
pop
bound
and
mov
push
mov
xor
jge
or
adc
movb
jo
lea
and
xlat
pop
lock
adc
lcall
sahf
stos
or
jae
pop
mov
jne
fidivrs
or
bnd
add
or
sub
repnz
fsubs
icebp
add
sahf
jne
xchg
xor
push
xchg
orb
or
push
xchg
pop
or
or
sub
lcall
ffreep
pusha
xor
sbb
test
orb
adc
pusha
fnstenv
sub
ss
push
adc
mov
add
or
adc
jo
dec
sub
jb
add
mov
cmpl
push
ljmp
fadd
jns
outsl
adc
or
sbb
sbb
mov
repnz
int3
mov
push
clc
fisttpl
sub
lea
xchg
xchg
dec
adc
xor
mov
fcmovne
dec
bound
loopne
repnz
rcrb
scas
mov
sbbb
push
jmp
cmp
pop
sbbb
adc
cmpsl
or
loopne
repz
dec
leave
push
je
je
nop
ss
sbbl
cmp
rcl
inc
sub
je
hlt
inc
fcomps
js
je
ficoml
inc
mov
push
jecxz
imul
dec
test
bound
in
jle
adc
fsubrl
dec
dec
pop
lahf
orl
sbb
stos
rorl
push
xlat
mov
mov
xchg
sbb
in
jmp
jmp
xorl
orl
xor
cmp
add
fidivrs
pop
push
cmpsl
or
int
xchg
aaa
in
mov
loope
inc
cmp
loopne
outsl
je
je
je
inc
adc
rcll
cld
pop
ds
sbb
loope
sub
lea
pop
mov
add
ja
lds
dec
push
ds
jae
loope
mov
adc
adc
pop
add
bound
dec
lock
jge
inc
es
scas
pusha
adc
inc
je
sar
cld
mov
pop
mov
sbb
inc
out
aad
jo
adc
adc
and
and
push
xor
pop
and
mov
sub
cmp
and
lds
loop
fstl
dec
push
xor
add
inc
dec
cmp
mov
jnp
inc
pop
cs
aam
adc
mov
adc
push
out
imul
shl
fiaddl
push
mov
lods
scas
pop
pop
mov
dec
cmpsb
icebp
xor
cld
repnz
xor
add
add
nop
jbe
push
inc
rcrl
push
dec
sti
mov
lods
push
jge
js
les
mov
in
inc
push
xor
and
cmp
inc
adc
add
mov
pop
inc
inc
inc
mov
pop
jb
sbb
clc
adcl
daa
shll
out
outsb
push
push
pop
lea
or
sbb
sbb
adc
loope
jae
push
mov
je
sub
jo
mov
fimull
loopne
mov
je
pop
cld
cmp
push
in
push
bound
push
mov
xor
inc
cmp
je
inc
xchg
jne
repnz
push
mov
in
push
mov
cwtl
xchg
push
add
ret
iret
leave
jmp
dec
push
dec
rorl
rcll
pop
mov
add
dec
scas
dec
xlat
sbb
inc
cmp
add
sub
push
push
dec
out
mov
jns
outsb
dec
pusha
xchg
mov
sbb
add
push
int3
add
cmp
push
ficoms
sbb
hlt
xchg
scas
repz
xor
icebp
out
mov
add
cmp
mov
push
shlb
and
mov
push
aaa
and
pushf
es
push
mov
aaa
sbb
pop
pop
and
pop
fstpl
lods
push
mov
xor
xchg
push
and
push
mov
inc
cltd
and
mov
std
dec
add
or
gs
adc
adc
adc
lods
xor
inc
orb
inc
mov
dec
jo
jl
add
dec
push
loopne
add
push
bound
nop
jmp
sub
inc
cld
ss
fadd
das
mov
pop
lahf
pushf
push
pop
aam
adc
in
inc
inc
adc
push
out
or
mov
push
jmp
add
pushf
add
cltd
adc
call
pop
jb
xor
test
dec
sbb
cmp
adc
xchg
adc
sub
inc
pop
fdivl
sarb
mov
pop
pop
jno
jmp
push
addb
sub
push
inc
xor
dec
adcb
sbb
adc
shll
cmp
add
ror
add
add
jle
xor
mov
call
or
inc
in
ret
add
inc
js,pt
and
push
sbb
dec
add
sbb
sbb
orb
int3
movb
adc
jp
push
pop
dec
ret
or
fcomps
mov
xchg
test
in
mov
and
clc
jg
std
loope
cs
test
cltd
bound
movq
movaps
or
clc
jae
xor
jle
dec
mov
add
lret
je
ss
stos
dec
mov
jl
and
lret
or
adc
or
mov
xchg
ret
or
fists
jnp
mov
mov
aam
ret
or
add
outsl
aad
mov
xchg
fcmove
mov
roll
add
dec
add
pop
jo
addps
int
jnp
sti
fldl
sbb
sbb
inc
pop
xlat
push
dec
xor
jmp
and
mov
ja
xor
mov
pop
mov
adc
sub
js
test
push
mov
jg
adc
dec
xchg
adc
pop
inc
sub
in
jle
aas
sub
xchg
mov
add
push
jns
jns
mov
jmp
push
xchg
sahf
js
iret
or
jo
icebp
loope
arpl
cmp
ja
jno
adc
dec
jecxz
mov
xor
mov
mov
jbe
adc
inc
jl
jo
cld
dec
add
rolb
mov
aam
in
rorb
in
cmp
pop
test
mov
mov
aaa
inc
dec
aam
mov
testb
shlb
movsl
push
and
pop
mov
cs
mov
inc
inc
rclb
push
mov
call
push
sbbb
rorl
sahf
add
daa
push
add
stos
es
mov
or
pop
cmp
pop
adc
icebp
push
sbb
pushf
bound
adc
inc
pop
sbb
and
cmpsl
loopne
xorl
mov
pop
push
sbb
call
xchg
or
popf
popf
inc
sbb
push
dec
push
hlt
jp
jne
push
inc
lock
out
jo
lods
inc
xor
mov
imul
push
mov
cmpsl
ss
sti
push
xchg
jmp
push
cmp
ret
adcb
data16
push
xchg
pop
sbb
adc
pop
xchg
aam
sbb
mov
or
adc
jne
inc
cmp
pop
adcl
xor
in
mov
add
adc
xor
push
clc
push
push
adc
and
dec
push
adc
in
mov
or
hlt
mov
enter
cmp
cmp
test
sbb
add
shr
in
mov
jns
inc
arpl
dec
adc
repnz
cmp
lret
pop
adcb
aam
adc
or
cmp
cmpsl
xor
or
adc
cs
xorl
addr16
and
sbb
imul
hlt
cmp
fmuls
jle
icebp
and
jle
leave
enter
fnstsw
mov
cmp
jg
shl
ror
mov
dec
leave
sbb
adc
rclb
cld
mov
pop
cmp
mov
mov
lcall
rol
inc
inc
cmp
inc
mov
lret
jne
sbb
je
icebp
jg
jmp
add
push
js
sub
or
add
movl
sub
adc
lahf
das
add
and
adc
xchg
rclb
inc
or
adc
mov
dec
loopne
jne
addl
fs
dec
push
insb
rep
hlt
daa
les
je
cltd
in
inc
lahf
cmp
lahf
jl
sbb
mov
add
repnz
rorb
stc
and
add
jbe
inc
push
and
call
into
lea
stos
mov
lds
push
mov
mov
push
sbb
rorb
rclb
jmp
mov
or
jns
push
xor
cmp
rcrb
mov
loopne
jne
idivb
movsb
das
xchg
add
xchg
fcoms
and
adc
or
lahf
ret
mov
add
add
add
fisttps
imul
sub
add
bound
inc
fadds
in
push
aaa
inc
testb
outsl
pop
fcmovnb
sahf
mov
mov
std
jg
lret
jbe
push
xor
pop
div
into
jae
mov
inc
imul
cmp
or
and
fsubrs
cmpb
les
fidivs
sub
pop
testb
stos
ds
addr16
xor
sbb
cmpsl
and
cmp
ja
shlb
or
add
jne
xor
jmp
shl
push
and
push
subb
xor
push
cmp
pop
decl
int3
xor
add
mov
mov
lea
cmpsb
push
sbb
jbe
pusha
jb
int
lea
dec
xor
paddd
inc
rorl
in
adc
cmp
sbb
movsb
sarl
repz
out
pop
push
jbe
cmpsl
lret
inc
fidivs
test
inc
fsubrs
and
inc
pop
push
adc
cmp
inc
sub
adc
push
push
sbb
add
lds
sbb
mov
mov
jmp
pop
push
xchg
jbe
or
les
jo
jnp
call
sub
push
cmp
sti
adc
xor
dec
pushl
push
or
push
xlat
shlb
test
rcr
jg
add
push
cmpsb
fcompl
fisttpl
or
sub
pop
push
inc
rcl
push
negl
pop
sub
lds
hlt
mov
or
out
dec
popa
jmp
add
enter
pop
push
sbb
rcrb
in
add
jo
or
mov
fldenv
subb
pop
add
dec
pop
out
and
and
inc
fistpl
sub
loopne
mov
and
mov
cmp
push
data16
add
lods
mov
testb
les
rcrb
inc
mov
adc
sub
fwait
rolb
and
jle
or
sbb
lds
je
inc
scas
cli
cmp
mov
aas
push
jp
stos
add
jp
pop
enter
and
xchg
mov
xor
jno
xchg
push
cld
mov
cmp
inc
push
dec
push
clc
ret
adc
ud0
inc
loope
and
sbb
push
or
add
adc
test
or
shlb
add
add
mov
and
movsl
clc
lcall
mov
or
mov
js
adc
je
cmp
faddp
jl
pushaw
dec
jl
push
andb
bound
hlt
pop
adcb
lcall
loope
add
cmp
andl
ljmp
mov
or
mov
dec
mov
in
dec
sbb
mov
adc
pushf
sahf
imul
or
mov
mov
dec
and
sarl
mov
inc
jge
push
mov
dec
cmc
mov
mov
push
xchg
lret
pop
mov
or
in
adc
pop
push
inc
and
test
pusha
dec
enter
push
push
and
jo
ljmp
jne
pop
imull
or
imul
or
popw
movsb
cmp
loopne
inc
call
xor
gs
push
int
mov
sbb
adc
and
mov
popa
xchg
xchg
ret
sub
adc
or
mov
add
push
scas
in
enter
outsl
int
cwtl
dec
dec
inc
or
mov
pop
pop
sarl
mov
cmp
je
dec
xor
sub
adc
repz
ret
dec
test
sbb
adc
imul
mov
push
pop
add
add
pop
enter
add
jb
jmp
add
jns
cmp
js
lcall
nop
ja
inc
add
add
xchg
pop
lcall
add
or
add
pop
or
dec
mov
iret
or
sub
iret
enter
pop
or
rclb
loop
or
pop
push
and
or
or
add
inc
or
sbb
inc
ja
push
int
or
adc
iret
enter
adc
sbb
pusha
inc
or
adc
add
adc
sub
adc
repnz
push
nop
adc
adc
enter
push
push
test
pop
push
pop
pop
jns
out
xor
sbb
lcall
sbb
add
pop
push
call
enter
sbb
sbb
add
je
pop
sbb
repnz
cmp
add
push
pop
enter
push
pop
pop
jne
lcall
lret
cmp
mov
outsl
out
add
cmp
xchg
cmp
add
inc
cmp
add
mov
cmp
pop
jns
fidivl
repnz
sub
rol
lea
mov
in
in
and
xor
sbb
repz
push
aaa
add
call
or
call
enter
cwtl
jmp
sbb
iret
ljmp
sbb
jmp
in
lret
add
dec
in
in
cltd
mov
mov
out
pop
and
enter
sbb
movsb
mov
lock
sbb
xor
jns
push
nop
icebp
pslld
nop
out
add
std
repz
sub
rorl
addr16
cmp
cmc
repnz
cmc
inc
jg
test
enter
cmp
xorl
clc
enter
cltd
adc
inc
stc
cmpb
lock
cli
cli
adc
jb
sti
sbb
fmulp
dec
in
cld
cld
cld
je
cld
push
pxor
adc
mov
jns
sub
std
sbb
fiaddl
in
mov
cmp
push
inc
or
add
into
xchg
jp
or
movsb
or
adc
or
xor
jecxz
jecxz
add
pop
push
std
sti
in
in
mov
xchg
fdiv
inc
mov
stc
daa
xchg
sti
add
movsb
mov
cltd
in
xlat
enter
dec
sti
mov
mov
sbb
pop
jmp
jmp
mov
in
add
and
cli
sbb
js
out
out
out
loop
cmp
push
lock
xchg
cmp
cli
push
cli
rclb
sbb
aad
orb
or
pop
enter
sub
stc
testl
negl
fwait
leave
and
adc
adc
xchg
pop
out
clc
cmp
lret
sti
sti
cltd
add
inc
push
mov
fisubrl
pusha
ja
lock
pushf
test
xlat
dec
and
scas
push
popa
jo
cld
sub
and
icebp
mull
mov
testl
jg
fsubs
add
out
cltd
mov
pop
inc
testl
sbb
sti
imul
ljmp
negb
mov
xchg
not
pop
xchg
sbb
sbb
ret
div
and
pop
and
add
test
repnz
test
inc
repnz
xchg
cmc
cmp
mov
jae
pop
dec
cmc
xor
idivb
in
mov
add
pop
push
and
clc
clc
jecxz
stc
push
push
xor
cmp
loop
sar
jno
hlt
and
mov
jne
sbb
pop
repnz
hlt
sbb
loopne
push
data16
hlt
mull
repz
jge
jo
sti
lret
movsl
push
mov
sahf
dec
shl
or
test
loope
loope
pop
es
repz
xchg
mov
mov
imul
repz
pop
push
jno
repz
repz
cmp
andl
push
push
push
adc
loop
shr
cmc
mov
mov
repnz
xchg
xchg
sbb
shr
cmc
and
mov
repnz
sub
icebp
icebp
and
pop
cmp
divb
popf
dec
push
xchg
icebp
jb
test
dec
pop
push
icebp
cmp
xchg
icebp
cmc
cmc
cmc
dec
dec
and
add
jecxz
pusha
leave
test
xchg
cmpsb
repnz
in
aaa
cmc
jne
mov
inc
xlat
push
lock
pop
jmp
inc
sbb
fisttpll
iret
js
test
ss
es
imul
aaa
add
sub
out
ret
inc
jge
in
cmovno
push
add
in
cmp
add
out
adc
add
push
add
adc
inc
adc
or
ds
dec
add
jmp
popl
cmp
and
ljmp
pusha
pop
add
and
cmpsl
and
add
push
and
and
mov
test
xchg
sbb
ds
imul
jb
data16
insb
xchg
push
notl
xlat
adc
jns
add
dec
push
jne
push
fsts
repz
out
mov
push
sub
sarb
iret
ss
jg
cwtl
les
rorl
add
dec
and
add
enter
add
xchg
test
push
xor
pop
add
neg
imul
jb
test
mov
cmp
insb
lods
ret
int
lret
ds
adc
pusha
jb
and
cld
inc
and
dec
stc
push
sbb
add
cltd
mov
push
aas
sub
shl
clc
fmuls
popf
imul
and
cmpsl
cs
mov
push
stc
das
test
cmp
je
push
push
rclb
adc
xchg
xchg
or
fwait
shll
inc
decl
enter
arpl
cmp
fcomps
push
fcmovnu
fmuls
and
add
inc
push
add
cmp
cmp
adc
fimull
xchg
sbb
sub
mov
addb
xchg
or
decl
cmp
dec
push
or
and
push
push
ret
fnstenv
cmpl
mov
push
scas
dec
push
and
mov
add
hlt
mov
mov
call
bound
adc
insb
imul
fldl
rorl
call
push
rep
mov
dec
ljmp
xchg
mov
and
sbb
adc
jl
ljmp
xchg
test
xchg
or
sub
in
inc
rcrl
mov
loopne
ss
mov
pushf
inc
mov
repnz
cld
add
or
js
insl
or
xchg
adc
cmp
outsl
incb
inc
jb
pop
ja
add
loope
rolb
inc
inc
add
inc
outsb
inc
push
cmp
sbb
xchg
adc
jmp
jb
adc
cmp
inc
and
gs
hlt
data16
cmpsb
and
divb
xor
repnz
xor
jne
cmpsb
or
and
mov
or
pop
or
add
sbb
pop
cmp
test
xchg
into
enter
add
aaa
xor
lcall
repz
lret
sbb
xor
or
xchg
fdivrs
sub
inc
inc
jg
sub
insb
add
cmp
dec
or
loopne
inc
or
jl
or
lods
push
mov
movl
adc
popf
pop
ret
arpl
jo
inc
or
fiaddl
out
xchg
add
xor
inc
lea
cmp
jne
orl
loop
pop
cmpsb
add
sub
pop
cltd
inc
or
dec
xchg
loopne
adc
xchg
adc
cmp
gs
xor
cmpsb
int3
jl
out
jmp
mov
jns
out
cs
or
and
adc
out
push
or
adc
dec
add
add
dec
mov
call
decl
jo
jo
adc
lret
or
div
rorb
loop
lret
cld
xor
sbb
jmp
fidivs
lret
sub
cmp
cs
and
ror
dec
adc
sbb
insb
jb
or
and
pop
test
sbb
and
dec
xor
and
add
or
push
pop
cld
imul
fbld
andl
jne
test
adc
push
mov
fs
jo
or
sub
es
testb
outsl
mov
push
sub
mov
pop
mov
push
insb
add
les
addr16
in
shlb
sbb
mov
lds
mov
cmp
pop
adcl
loope
add
xchg
pop
push
cltd
push
or
mov
std
cmp
cmp
push
sub
adc
mov
cld
pop
loopne
pop
fisttpl
sbb
cmp
jne
jnp
inc
xor
xorl
int3
push
cmp
jne
mov
push
cmp
aaa
dec
jae
jne
es
jne
decl
inc
xor
adc
or
add
mov
push
or
fwait
out
mov
jmp
std
dec
std
and
iret
jmp
cld
push
sub
jmp
jmp
adc
adc
cmp
mov
push
cmp
mov
add
repnz
sbb
int
jns
fs
cmc
xorb
xlat
add
pop
ret
rcrl
jne
xor
push
inc
pusha
mulb
mov
lods
std
inc
push
xchg
test
dec
push
or
push
adc
push
push
pop
xor
and
add
adc
or
push
sahf
orb
xchg
cwtl
ja
xor
and
ret
call
add
sbb
fimull
inc
inc
data16
add
repz
sub
daa
xor
fwait
roll
sbb
in
xchg
xchg
adcl
mov
ja
stc
aad
hlt
push
jmp
mov
rcr
rcrl
lock
jne
or
fadds
push
jmp
sbb
pop
adc
outsb
out
jns
mov
dec
mov
sub
bound
fisttpll
lcall
sbb
subb
add
and
sbb
add
or
xlat
dec
xor
rcll
popa
xchg
je
lea
movsl
out
mov
sbb
jmp
ret
jmp
lret
clc
push
aam
and
call
and
imul
fucomip
push
stos
add
testb
cmp
and
inc
push
clc
lock
sbb
xor
mov
fimuls
cmpsl
scas
pop
push
dec
jne
mov
mov
jecxz
jns
inc
adc
add
adc
jmp
in
iret
aam
lret
mov
rorb
jp
pushf
cmpsl
xor
adc
push
adc
sbb
cmp
pop
or
andb
and
push
pop
and
cmovs
sbb
pop
int
push
pop
test
push
test
or
mov
rep
jmp
fldt
mov
cmp
setbe
in
xchg
add
xor
cltd
cs
in
push
out
es
dec
push
and
sbb
add
fiaddl
mov
dec
add
movl
pushf
inc
add
add
lret
or
push
mov
mov
jae
push
mov
inc
in
out
sahf
out
in
in
lock
out
sahf
hlt
hlt
clc
clc
cld
fldt
aam
scas
lea
lock
fincstp
jns
adc
jmp
xor
imul
xchg
nop
nop
inc
pop
xor
add
jno
fsubs
push
lea
jl
cld
mov
and
std
cld
out
jo
push
push
neg
adc
and
enter
xor
test
test
rcr
add
dec
gs
out
add
sub
ret
out
push
add
nop
dec
dec
adc
cmpsl
imul
ficomps
or
push
xor
pop
jl
out
dec
push
xor
sbb
sahf
out
sbb
sbb
out
sahf
out
adc
or
jns
or
inc
movsb
loop
fiadds
lods
xor
lds
push
push
add
pop
mov
adc
ja
xor
bnd
push
jmp
push
mov
mov
incl
inc
decl
jne,pn
pop
pop
stos
inc
fsubrl
addr16
xchg
pushl
xor
jbe
push
cltd
pop
idiv
add
sbb
in
xor
adc
add
add
ja
inc
push
mov
cmp
dec
mov
mov
xor
adc
clc
ja
bnd
cmp
jae
dec
mov
mov
jae
pop
jbe
mov
loop
rcrb
dec
and
pusha
add
sub
or
ficoml
mov
test
clc
pop
xchg
pop
pop
xor
in
xchg
lods
cmp
lret
add
fucomi
add
test
je
push
fldcw
or
dec
dec
je
push
push
es
push
imul
or
mov
negl
je
pop
insb
adc
mov
shrb
lcall
out
dec
push
mov
inc
es
and
das
sbb
add
inc
add
mov
xchg
cmp
add
jp
push
adc
loopne
sar
xor
cltd
add
dec
dec
adc
or
jp
push
adc
imul
pop
lock
dec
pop
sbb
test
in
jmp
push
mov
sub
aaa
mov
sub
insl
or
aas
shrb
jge
push
push
cltd
pop
idiv
pushw
jle
ret
push
xchg
cli
ds
xchg
inc
out
cmp
and
inc
push
mov
jmp
or
rorb
mov
jae,pt
pop
inc
and
add
adc
fs
jmp
mov
insl
mov
sbb
xchg
orb
or
sbb
push
mov
pop
insb
sub
sbb
sbb
and
cmp
inc
das
aam
mov
mov
pop
incb
inc
jns
adc
shll
add
mov
sti
cmp
loope
sub
sub
mov
shufps
add
imul
jae
push
pusha
loopne
cmp
add
and
pusha
data16
push
pop
xchg
push
cmp
sbb
inc
push
jmp
jge
pop
jecxz
int3
icebp
je
sbb
jl
aas
sub
hlt
fs
sti
jmp
aas
mov
adc
outsl
mov
je
int3
dec
jo
mov
je
fisttps
push
rorl
or
inc
mov
or
lcall
pop
popl
xchg
mov
lods
cmpsb
sbb
ja
and
push
hlt
push
or
inc
mov
push
aaa
andl
popf
mov
cmp
pop
cmp
lcall
lcall
xchg
inc
jmp
push
pushf
test
adc
inc
outsb
aam
inc
pop
and
adc
mov
and
fldt
ret
push
je
mov
gs
xchg
jo
lea
cmpl
pop
imul
or
pop
jb
push
push
hlt
mov
cld
add
push
data16
repz
inc
adc
or
out
cld
xor
iret
call
push
fcomps
jp
jnp
jge
mov
rolb
fsubrp
int3
dec
ljmp
cmp
ret
xchg
rorb
inc
sbb
jg
cmp
icebp
push
pop
js
sub
inc
sbb
cld
mov
rcl
push
js
mov
gs
adc
jnp
jne
aam
add
push
inc
cmc
or
in
jg
jbe
sbb
cmp
or
rclb
pop
pop
flds
fcmovb
cmp
clc
mov
inc
inc
cmp
je
xchg
mov
mov
dec
push
sbb
adc
add
push
shrl
fidivrl
dec
je
and
mov
test
mov
or
sbb
pop
sbbb
mov
incl
mov
pusha
push
mov
push
ret
and
pop
inc
sbb
or
daa
ja
fisubs
aam
sbb
lods
mov
sub
bound
and
or
push
cli
xor
cmpsb
add
dec
push
xchg
fdivp
pop
lds
je
cmpsl
movl
or
push
call
cmp
jo
add
test
adc
ret
and
mov
cmp
je
mov
adc
mov
add
mov
sub
inc
or
sbb
push
pop
lds
adc
inc
int
fs
or
shl
pop
add
sbb
dec
mov
lods
sbb
dec
movsb
jb
push
hlt
repnz
push
pop
insb
lret
mov
mov
xlat
aas
fildl
cmpl
add
rcll
je
push
bound
jne
jmp
cmovge
sub
in
repnz
jmp
das
dec
jmp
daa
push
scas
rorl
mov
aam
push
popf
and
and
jo
mov
sub
dec
sbb
clc
inc
pop
insb
pushf
ret
add
mov
sbb
mov
lcall
repz
xchg
cltd
in
or
mov
sahf
adc
hlt
push
fwait
and
mov
sbb
outsb
jns
and
or
xlat
inc
rcrl
addb
cmp
inc
sbb
sbb
sub
mov
adc
inc
xchg
push
fdiv
xor
jb
sbb
inc
push
jmp
cmp
xchg
inc
in
ja
or
cmc
addb
aam
pusha
out
pop
mov
mov
or
out
sub
mov
cltd
pop
stos
call
dec
sub
xor
mov
and
jmp
or
pop
shll
inc
jmp
aas
xchg
push
push
push
xor
inc
add
movsl
xor
xchg
pop
das
lea
in
mov
leave
enter
jne
add
inc
and
in
add
xchg
frstor
aad
mov
leave
pop
fldz
mov
mov
pop
xor
adc
inc
adc
in
leave
pop
gs
lahf
and
cmpsl
rep
mov
test
pop
test
mov
sbb
adc
cltd
add
adc
adc
fchs
sbb
js
xor
jle
add
mov
addr16
out
call
ds
jmp
push
data16
xchg
push
jno
xchg
lret
push
pop
das
fsubrp
clc
inc
ds
mov
mov
add
std
add
inc
add
data16
dec
mov
fs
pop
int
test
fwait
or
mov
lods
push
push
pushf
pusha
das
adc
shrb
fsubrs
in
inc
inc
pushf
jo
or
inc
add
outsb
jbe
andl
xor
cmp
and
ds
adc
jle
jo
rcrb
xor
das
mov
fsubrl
mov
xor
imul
and
cmpsb
sbb
and
movsl
nop
test
inc
jno
inc
fcoms
insl
clc
pop
js
cmp
sahf
enter
cwtl
jge
int3
or
shl
jmp
add
cmp
cmpsl
mov
rcll
cmp
xor
enter
fucomi
in
push
mov
jmp
mov
xor
cltd
mov
or
pop
sahf
std
into
inc
adc
data16
push
inc
and
or
push
enter
xchg
scas
mov
add
or
pusha
js
gs
dec
stos
js
or
inc
pop
popa
jbe
adc
aad
mov
iret
pop
sbb
cld
push
or
jl
sbb
imul
cmp
cltd
push
ja
mov
sub
lea
into
inc
sbb
adc
sahf
inc
sbbb
jge
cmp
or
add
add
call
lret
mov
nop
inc
mov
sbb
ja
test
mov
sarl
push
fisttpl
loopne
sub
ret
mov
cmpsb
dec
add
dec
xchg
jle
add
or
repnz
inc
xchg
loope
aaa
xchg
pop
dec
cmpsb
jg
adc
in
pop
pop
adcl
imul
push
xchg
cmp
mov
rcl
cmp
fstp
out
push
pop
xor
rcrb
lea
xor
shlb
add
fcoms
mov
adc
call
inc
filds
sbb
sbb
cmp
cmpl
or
pushl
xchg
sub
sbb
adcl
mov
adc
test
test
test
imul
or
movsl
jecxz
cmc
xchg
or
jns
inc
test
push
xor
icebp
jl
pusha
sbb
add
pop
rolb
ret
inc
push
or
test
adc
pusha
cltd
rcrb
and
rorb
incb
or
inc
adc
dec
jo
push
sub
insl
or
stc
mov
cli
or
pop
add
jmp
cmp
shl
stos
lock
push
cld
jb
sub
jb
or
outsl
lcall
pop
mov
dec
dec
mov
inc
adc
adc
repnz
or
fists
fists
jne
test
or
add
dec
mov
sbbl
cmp
add
and
imul
jmp
push
add
cmp
add
cmp
mov
pusha
adc
mov
cmp
jg
mov
shlb
ss
in
in
adc
push
cmpsl
xor
or
push
insl
js
cmp
test
lret
add
or
jae
mov
fdiv
pop
rcl
bound
pop
jle
xchg
add
sbb
les
push
xchg
cmp
cmc
xchg
push
add
sahf
sbb
orl
push
lods
pop
push
clc
pop
aaa
dec
rolb
push
lret
adc
adc
adc
aam
sub
inc
mov
adc
push
xchg
arpl
pusha
mov
sbb
xor
adc
enter
inc
out
fidivrl
inc
inc
mov
mov
mov
cmp
mov
sub
in
push
adc
push
pop
dec
push
and
adc
into
add
or
js
aas
push
mov
es
enter
or
sub
adc
add
cs
inc
scas
enter
jne
or
xor
insb
mov
cwtl
and
movsl
icebp
lods
adc
add
subl
or
cmp
icebp
jae
cs
mov
sbb
stc
sub
and
push
xchg
dec
sbb
or
mov
shlb
shlb
sbb
aaa
mov
daa
xchg
sbb
inc
xor
mov
dec
xor
pop
adc
push
add
shl
mov
jo
inc
decb
insl
leave
sub
std
add
fcomip
adc
push
push
fldl
push
dec
sbb
adc
mov
add
mov
out
or
mov
fstl
add
sbb
dec
loopne
push
sub
cmp
cmpb
add
inc
dec
inc
lahf
lea
loopne
cld
sbbb
push
add
pushf
mov
mov
pop
inc
mov
add
jae
mov
push
test
xor
and
xor
loope
stos
jnp
je
add
iret
xor
les
push
dec
or
pop
mov
testb
push
mov
push
call
mov
cmp
mov
sti
sbbb
sub
or
xchg
or
sub
int
adc
add
and
adc
pop
jl
jg
pop
fsubs
into
pop
and
lret
add
and
adc
jo
cmc
xchg
cmp
jne
lock
and
push
push
and
sub
shr
das
iret
pusha
inc
cwtl
and
sbb
shl
dec
testl
insb
and
adc
mov
adcl
inc
cmp
mov
push
lods
lret
test
lds
aam
sub
push
jbe
mov
xor
adc
jg
push
xor
mov
pop
pop
pop
pop
sbb
sbb
jg
popl
mov
inc
mov
loopne
or
add
cmp
sbb
xor
sarb
mov
ret
mov
fcompl
out
push
pop
dec
sarl
sbb
popf
es
pop
and
push
push
testb
xor
aaa
pop
dec
jbe
jecxz
sub
adc
or
mov
or
and
adc
popf
lret
or
test
dec
jp
mov
xchg
call
icebp
and
jb
bound
push
std
faddl
loope
and
mov
adc
xor
lock
pop
sub
mov
cmp
cld
inc
dec
jne
lea
adc
iret
or
inc
add
popa
mov
test
jp
cmpsb
and
sbb
xor
and
je
mov
and
and
mov
pop
call
testb
and
sub
dec
aam
inc
push
xchg
or
orl
pop
rolb
fisubrs
test
ficoml
mov
aas
mov
xchg
cmp
push
and
dec
inc
inc
cld
cmpsb
scas
sbb
or
dec
in
int
jb
cmp
push
orb
mov
je
or
nop
mov
fld
test
add
mov
fmulp
aam
mov
lods
leave
sub
mov
cmp
inc
mov
in
pushl
ret
jae
pop
or
and
jmp
add
pusha
je
sbb
lods
pop
and
add
xor
lock
inc
jo
push
push
or
ja
test
push
add
movsl
sbb
cmc
push
sbb
fwait
push
cmp
adc
clc
leave
shlb
push
mov
sbb
and
mov
insb
push
cld
mov
cmp
or
xchg
ret
push
mov
ret
add
cld
cmp
push
cmpsb
push
sbb
mov
cmpsb
inc
add
cmp
std
jne
fsubr
fistpl
cld
stos
enter
add
shlb
add
incb
jmp
mov
sbb
xor
cld
mov
inc
aas
fidivl
push
mov
out
adc
xor
or
std
fidivl
push
jmp
or
movl
push
and
push
jg
dec
xor
inc
sbb
inc
add
rcl
clc
add
cmp
jbe
dec
sub
lea
mov
lods
jo
adc
ret
jl
push
dec
pop
leave
inc
test
pop
dec
std
imul
push
lea
cmp
into
sub
div
xchg
test
fs
adcb
cmp
les
inc
dec
ljmp
adc
jne
outsb
jg
add
xorb
movl
sbb
add
out
adc
jno
lcall
mov
inc
mov
inc
inc
inc
dec
jne
mov
inc
push
mov
mov
or
ss
sbb
push
fcomip
mov
jmp
inc
push
mov
inc
dec
jne
cwtl
icebp
jnp
push
or
or
push
or
loop
jnp
test
xor
test
mov
lahf
in
adc
loopne
add
mov
mov
pop
lea
stos
push
cwtl
inc
aam
or
and
or
ljmp
add
xchg
mov
ret
test
add
jns
add
fld
adc
loopne
lcall
push
cmpsb
into
cmp
adc
ss
outsb
rol
dec
jo
add
ljmp
push
or
push
repnz
and
fs
mov
mov
inc
pop
or
pop
push
adc
push
orl
lret
pop
sub
out
lcall
fucomip
call
or
mov
jmp
add
ret
or
mul
jmp
mov
xchg
jno
es
cmc
test
inc
dec
jmp
xchg
jbe
aam
scas
aam
cmp
fs
flds
cmp
leave
xor
daa
loop
js
mov
std
and
jmp
cmpl
adc
jmp
fisubrs
or
cld
mov
pop
and
sbb
cmp
pop
pushl
data16
nop
inc
mov
sbb
fstpl
lahf
das
adc
mov
les
xor
and
and
dec
pop
sbb
sbb
insl
int3
mov
mov
sbbl
sub
lret
fidivs
out
jle
cmp
push
push
cmpl
add
js
into
or
cmp
mov
sub
sahf
inc
add
push
dec
mov
jne
sbb
arpl
or
add
sbb
movsb
mov
adc
mov
aaa
xchg
push
or
jmp
repz
jo
mov
dec
andl
xor
or
lods
xor
xor
je
push
fists
ljmp
xor
rcrb
mov
in
clc
mov
test
or
jle
xor
lods
sbb
jo
loope
xchg
inc
xchg
lods
push
shrb
cltd
inc
adc
dec
adc
rcll
mov
jbe
pop
mov
mov
add
add
xlat
mov
push
cmp
rclb
and
roll
lret
cli
pop
sbbl
sub
push
cmp
push
ss
add
push
cld
pop
and
dec
test
cmp
lret
call
fstpl
and
repz
movsb
cmp
push
mov
jb
xor
mov
shlb
fldcw
sub
or
dec
mov
push
mov
shlb
inc
inc
cmp
loopne
cwtl
and
sbb
pop
xchg
lret
mov
aaa
add
push
cld
push
jo
push
xchg
and
pop
pop
push
push
mov
and
movsb
xchg
inc
add
add
jecxz
jb
sbb
dec
aam
insb
jg
or
and
or
push
outsl
xchg
outsl
test
pop
ret
inc
sub
mov
inc
ret
dec
push
imul
push
push
popa
mov
and
leave
dec
aas
inc
sub
dec
add
mov
or
xor
push
add
rol
out
frstor
adc
xorl
or
lahf
and
in
inc
and
nop
xchg
sub
sub
add
nop
add
lds
cmp
xchg
je
ret
daa
jle
xor
mov
jmp
push
sub
jmp
jge
add
aad
insb
and
fsts
mov
adc
test
test
mov
jo
fdivs
insl
jg
mov
push
addl
or
aas
pop
cs
xor
mov
test
lret
pop
in
bt
jae
xchg
xchg
pushf
cmpl
xchg
push
mov
adc
pushf
cmpsb
and
daa
cmp
mov
jno
push
aad
push
add
dec
ja
popf
and
xor
out
mov
mov
imul
sub
inc
mov
pop
pushf
cwtl
mov
inc
loopne
xchg
mov
mov
push
xchg
mov
sub
or
adcb
sbb
adc
movsb
ja
ja
movsb
jp
inc
sub
mov
movsl
dec
xor
lods
enter
dec
xor
das
mov
movsl
popf
cmpsb
or
sub
loopne
gs
fcoml
shl
in
addr16
clc
or
repz
in
les
popl
test
lea
sarl
enter
dec
cld
adc
cmp
pop
aam
xchg
mov
mov
push
nopl
jno
xchg
adc
jecxz
sub
add
or
pop
jmp
test
js
jmp
jge
sar
rorb
filds
hlt
sbb
push
mov
aas
or
addl
add
jmp
mov
lcall
mov
je
js
adc
mov
mov
xchg
aas
push
sbb
test
push
clc
pop
pop
test
adc
xchg
cmp
jnp
push
dec
add
mov
inc
cmp
repz
push
jmp
sub
jecxz
pop
pop
and
xchg
pop
push
sbb
fistpl
xor
pop
push
sbbb
das
inc
dec
and
pop
out
fcoml
mov
push
faddl
in
out
jns
in
hlt
cld
add
pop
pop
aaa
ret
add
pop
inc
xor
add
mov
pop
pop
xchg
dec
or
xor
test
pop
loop
je
push
push
cs
push
xchg
arpl
es
js
inc
cmp
sti
mov
jmp
add
outsb
or
jle
cld
xor
inc
xchg
cli
dec
mov
or
scas
insb
lret
jne
clc
scas
jns
inc
cmp
dec
cmp
jge
inc
mov
add
and
sbb
mov
mov
adc
push
call
and
and
adc
addr16
dec
and
add
add
and
and
ret
mull
push
mov
aas
lds
mov
sqrtps
les
data16
and
add
and
loop
or
push
enter
cmc
push
lret
or
inc
or
je
mov
xchg
and
cmpsl
add
mov
xchg
sub
inc
push
lcall
or
aas
add
gs
push
jge
jmp
cmpl
inc
mov
or
push
movl
add
jmp
adc
xchg
lock
mov
pop
mov
sbb
jbe
loope
mov
add
and
xor
lock
movsl
push
test
push
or
or
cmpb
out
jno
nop
dec
cwtl
outsl
push
inc
leave
inc
push
jecxz
mov
lock
mov
aas
iret
cwtl
or
mov
push
loope
xor
push
mov
test
ja
enter
js
call
sub
lock
add
icebp
popa
imul
adc
hlt
jecxz
jmp
adc
pop
push
mov
push
inc
and
xor
push
jo
xchg
movsb
and
inc
push
mov
xor
sub
iret
or
adc
jecxz
inc
sbb
xor
push
pop
push
pop
leave
ja
dec
jno
les
or
or
xchg
fimull
lods
addl
or
inc
cmp
inc
inc
aad
adc
push
pop
dec
or
pop
bsf
sub
push
imul
and
or
daa
jmp
mov
hlt
or
ret
inc
lock
and
lea
dec
pop
loop
sub
or
aaa
aaa
add
push
xor
fimull
xor
orb
orl
push
dec
mov
es
xor
add
movsb
test
xchg
mov
push
mov
adc
jbe
push
inc
inc
adc
test
test
xchg
push
fsubl
or
jno
rcrl
jle
cmp
pop
divl
in
addr16
mov
fisubl
mov
ds
mov
dec
xchg
sbb
xchg
sbb
pushf
shrb
push
inc
dec
ljmp
jns
inc
rcl
xchg
xor
push
mov
loopne
sub
add
xor
inc
inc
jp
mov
outsb
pop
inc
arpl
je
push
fidivs
push
and
addb
ljmp
xchg
push
push
inc
pop
int3
or
fstl
mov
rol
add
push
xchg
aam
push
rcrl
adc
or
decl
movsl
pop
add
push
pop
push
je
adc
nop
xchg
dec
push
int
lcall
push
jg
add
mov
es
mov
out
repnz
lea
ja
rorb
popf
in
mov
xchg
aam
fadd
fsub
not
ret
cmp
xchg
inc
mov
popa
je
jne
mov
jo
into
push
popa
mov
movzwl
test
lods
jl
loopne
or
mov
les
cli
cmp
dec
fisttps
adc
lea
mov
mov
ficompl
jl
dec
shr
jbe
ss
test
push
sub
pop
sar
pop
mov
mov
dec
lahf
jno
cmpsl
sbb
cmp
lea
cs
dec
aam
clc
fcomps
xlat
loopne
xor
sub
dec
or
je
dec
sub
adc
sbb
scas
pushf
pop
or
jb
in
push
pop
add
xor
sbb
adc
pop
nop
cli
sub
aam
cmp
sub
aam
out
mov
mov
sub
clc
outsb
or
push
imul
lret
or
cmpsb
xor
movsl
mov
mov
popf
repnz
hlt
out
sbb
hlt
hlt
stc
xor
mov
cwtl
je
or
inc
insb
je
adc
into
pusha
lock
test
outsb
loope
insb
cmp
sub
adc
sbb
pop
fcmovnu
pop
mov
mov
pop
or
xor
mov
inc
outsb
jg
dec
xor
cwtl
nop
push
inc
movsl
jg
jmp
iret
in
jb
or
imul
xor
cmc
jne
js
movsl
loope
and
je
ret
or
push
mov
mov
push
jbe
mov
call
adc
jecxz
push
or
sbb
mov
pop
push
or
mov
mov
ds
mov
xor
inc
mov
fdivr
jmp
loop
popf
pop
test
and
je
push
dec
inc
stc
sbb
pop
out
testl
push
fucomip
mov
aaa
jne
das
mov
adcl
mov
sbb
dec
and
or
xchg
push
mov
or
addr16
xor
in
sub
in
inc
or
push
sahf
sub
in
xor
loopne
into
push
insl
cmp
movsb
mov
loopne
xor
negl
std
fdiv
sbbb
adcl
push
add
stos
cmp
mov
xor
mov
movsl
sti
mov
push
mov
movsl
mov
mov
mov
xor
dec
arpl
fstps
fidivrl
lcall
jmp
mov
adc
int3
push
sub
xor
add
lea
lahf
xor
jns
push
sbb
imul
dec
outsb
jo
add
add
inc
mov
pushf
into
add
addr16
fmul
pop
je
push
outsb
je
test
xor
call
popa
aas
add
xor
lds
and
xchg
test
add
sbb
andl
adc
cmp
popa
push
sbb
or
jo
jecxz
push
stos
add
push
add
ret
pop
push
adc
addr16
mov
jmp
cmp
jle
insl
js
dec
ja
mov
incl
mov
dec
dec
cwtl
add
or
xor
int
or
cmpb
sub
xor
adc
dec
enter
adc
dec
adc
jne
sub
xor
jb
sti
inc
mov
outsb
and
jecxz
lea
stc
lcall
pop
test
or
sbb
dec
sbbb
sub
inc
dec
lds
pop
mov
hlt
lcall
jae,pn
adc
mov
addr16
decb
mov
test
into
rolb
adc
push
xchg
xchg
js
pop
data16
push
cmpl
lret
test
adc
inc
fistps
xchg
je
adc
dec
add
jmp
or
jmp
aaa
int3
je
cltd
add
fsts
sub
or
jae
pop
and
inc
ljmp
outsb
in
pop
fimull
mov
xor
jge
inc
sbb
dec
test
pop
mov
or
jne
and
ficomps
testl
push
inc
adc
inc
aas
nop
clc
rcrl
cltd
push
jno
mov
adc
cmp
push
nop
xchg
clc
sahf
add
mov
dec
jmp
pop
xchg
sub
inc
cmp
ljmp
or
add
xlat
pop
dec
shlb
xor
ss
sbb
or
or
inc
inc
mov
outsl
adc
clc
roll
je
gs
mov
or
add
sub
icebp
int
push
sub
push
test
cmpsb
and
mov
cltd
push
hlt
push
cld
sub
sub
pop
rcrb
push
jp
push
cld
mov
cmp
in
fdivrl
lea
enter
jns
mov
orb
jbe
dec
subl
xchg
cmpsb
push
fdivs
add
mov
nop
aaa
cmp
call
in
fistps
rcll
sbb
ret
cs
pushf
test
inc
jmp
lock
lods
add
cmpsb
cmp
cmp
xchg
movsb
ds
push
loopne
push
icebp
jl
mov
add
push
xchg
xchg
loopne
fs
adc
cld
out
movsl
daa
pop
mov
xor
sahf
mov
sub
movsb
cmp
ds
out
filds
add
sub
sub
mov
imul
lcall
push
push
out
xchg
pop
push
ret
ss
rolb
loope
or
mov
ret
inc
loopne
ret
aam
sub
xchg
jp
idivb
pop
mov
cld
jne
lea
xchg
xor
inc
add
ja
test
repnz
leave
or
and
sarb
xor
test
pop
xor
mov
daa
push
mov
xchg
sub
inc
clc
jb
push
aaa
or
inc
fcomip
cmp
fcoml
ret
ja
push
jne
push
aas
out
mov
cltd
and
pop
ret
pop
pop
cmpsb
loopne
cld
push
movsb
jge
outsb
or
addl
sub
xor
mov
push
fisubrs
sbb
push
jmp
pop
jne
mov
push
push
cmp
xchg
push
dec
arpl
sbb
inc
scas
and
lds
jb
adc
arpl
or
lea
test
cmp
adc
fsubs
mov
mov
adc
enter
mov
pop
mov
sbb
inc
rclb
xchg
rcl
in
sbb
jl
sub
clc
push
add
cld
shr
mov
imul
fisttpl
mov
or
jbe
pusha
cld
daa
and
push
lea
mov
int3
mov
test
clc
dec
nop
sub
jne
sar
dec
cmp
jbe
push
pop
mov
dec
or
adcb
ljmp
and
mov
shr
lea
not
and
decb
jne
jbe
dec
mov
sbb
lea
xor
pusha
cmp
pop
add
mov
jl
push
dec
pop
add
add
pop
and
push
or
movsb
add
clc
and
mov
push
shlb
js
add
and
sti
add
cmpsb
dec
pop
cmp
mov
fimuls
shrl
push
hlt
and
mov
loopne
jno
jno
mov
add
dec
shr
not
and
add
in
cmpsb
aad
xor
dec
loopne
mov
addr16
xor
gs
out
dec
add
mov
mov
popa
cmp
jle
jne
aaa
in
mov
int3
inc
sub
out
or
or
dec
je
pushl
dec
paddd
mov
mov
push
mov
push
lods
push
or
pop
mov
inc
dec
or
jmp
dec
adc
push
mov
or
ficoms
xor
mov
inc
fidivrs
jl
pop
scas
adc
push
and
sahf
and
xor
out
insb
inc
shl
add
scas
sti
divb
call
aas
gs
push
or
cmpb
movsb
mov
cmpb
add
decb
adc
inc
das
aam
pop
inc
pusha
add
and
pushl
push
sbbb
and
add
int
ss
add
mov
inc
xor
ret
sbb
push
rcll
push
insl
or
mov
add
mov
mov
inc
inc
mov
xorb
imul
add
xor
outsl
push
sbb
xor
invd
inc
js
add
lea
les
xchg
lock
test
or
push
jae
adc
or
fisubs
push
xor
or
adc
cmp
test
mov
xchg
sbb
or
pop
out
mov
pop
xchg
mov
shl
arpl
xor
rolb
aad
ljmp
test
decb
mov
inc
clc
pop
ss
lds
jne
or
mov
mov
inc
jns
sbb
popa
push
push
dec
sbb
sbb
ja
mov
shr
inc
mov
dec
clc
incl
nop
cld
divl
adc
cmp
lock
push
add
sub
sbb
je
pop
or
sar
add
lcallw
xchg
jb
adc
fs
inc
shl
fcoms
mov
inc
mov
lock
imul
lds
scas
and
not
and
les
ret
jne
or
adc
add
add
sbb
sub
pop
shr
add
lret
cld
les
mov
icebp
add
pushf
jle
lock
xchg
jl
mov
cli
xchg
flds
shlb
add
mov
add
push
ror
push
pop
xor
popf
lcall
sbb
clc
xchg
lret
rolb
es
or
loopne
nop
mov
or
push
jns
mov
or
in
lret
jle
shl
mov
adc
add
add
mov
cs
fstpl
lret
xchg
lea
jle
dec
rcl
int3
adc
jle
mov
pop
sub
xor
push
pop
adc
and
adc
cmc
subl
and
jne
pop
sarb
test
xor
adc
inc
insb
xor
add
out
fidivl
movsb
jne
cwtl
inc
and
clc
sub
cltd
jle
imul
in
push
loopne
xchg
das
mov
dec
out
das
outsb
insb
pop
xor
push
sar
dec
jp
rcll
cs
in
cwtl
les
cmp
or
test
cmp
dec
mov
repz
je
fisttps
mov
dec
push
inc
jmp
push
fbstp
ja
dec
push
mov
jo
adc
fimull
loope
dec
lea
mov
sahf
and
shll
mov
cmp
push
cmp
lods
cs
lret
lret
mov
push
rdmsr
cmp
inc
dec
mov
bound
imul
insb
mov
and
pop
and
inc
cmp
fwait
clc
rcll
push
push
push
jge
in
out
cmpl
adc
pop
in
or
pusha
and
inc
stos
dec
or
out
fldcw
push
nop
cmp
mov
and
or
lock
adc
or
mov
call
sbb
mov
jne
in
jbe
and
add
xor
popf
outsb
in
or
arpl
sbb
jmp
adc
mov
and
pop
pop
xor
gs
nop
pop
lcall
cmp
je
mov
mov
sbb
mov
and
into
inc
mov
or
pop
iret
jne
mov
jno
mov
movsb
push
inc
mov
mov
jmp
dec
lock
gs
and
jne
mov
push
pop
fdiv
int3
sbb
inc
test
inc
push
pushf
mov
sub
aad
inc
out
icebp
sbb
pop
sbb
je
cmp
dec
pop
xchg
sbb
dec
jo
ror
push
sahf
cmp
test
out
and
mov
sub
jne
in
adc
push
lock
jmp
jp
mov
pop
pusha
dec
bound
dec
push
xlat
int
and
test
xor
jp
dec
jp
movsl
call
mov
mov
or
pop
xor
inc
fsubrs
sub
jge
std
hlt
popa
das
add
cmc
push
or
jnp
lock
push
push
rorl
mov
mov
out
or
nop
out
push
std
xor
mov
call
or
scas
and
and
outsb
pop
lods
test
lea
ds
pushf
jo
cmp
imull
and
pop
jo
inc
add
xchg
push
rcrb
xor
or
imul
cmp
into
les
pop
jb
or
xorl
clc
jecxz
add
inc
pop
jge
sbb
adc
and
loopne
clc
dec
test
in
cmp
icebp
push
sbb
sarb
mov
or
jnp
test
and
ds
std
mov
fimuls
clc
movb
testl
mov
add
and
jnp
clc
flds
minps
cmp
cmp
sub
add
fnstenv
pop
das
push
mov
jmp
fcompl
inc
test
bnd
test
inc
push
adc
push
into
sbb
or
push
mov
inc
loopne
sbb
push
dec
cmpsb
push
imul
cmp
insb
sti
fisubrl
sbb
std
lahf
sub
std
pushl
adcl
icebp
and
out
sbbl
pop
jne
push
rcrb
pop
mov
std
mov
sbb
xor
adc
xlat
push
fadd
inc
mov
js
ret
inc
push
or
pop
mov
jge
jecxz
jg
cmpsl
pop
jl
movsb
addr16
fidivrl
dec
or
xchg
and
and
push
adc
push
insb
int3
push
mov
imul
adc
jg
xor
adcb
or
shlb
adc
mov
sub
add
mov
xor
lods
or
cwtl
add
xorl
inc
inc
add
fsubl
popf
call
rcl
hlt
mov
inc
cwtl
add
xor
jecxz
mov
enter
jl
adc
es
jge
jmp
out
add
jl
or
xchg
in
int3
test
in
fldcw
scas
into
je
cmp
mov
mov
mov
test
or
push
mov
xor
inc
mov
sub
lods
mov
cmp
or
add
xor
in
movsb
mov
sarb
dec
dec
dec
cmp
cmp
xchg
add
xchg
or
std
lods
or
pop
xor
ret
in
or
sub
xchg
push
repnz
rol
lea
jl
mov
pop
fs
jl
scas
and
hlt
fidivrs
mov
cmp
sarb
outsb
and
aas
insb
jne
jp
xlat
xor
or
pop
sarb
add
sbb
jg
dec
jb
mov
add
cmp
lea
pop
inc
xor
cmp
nop
inc
push
cmp
cmc
jmp
lcall
xor
sub
pop
std
pushf
xor
sub
jne
cmp
movsb
in
leave
or
lea
leave
nop
mov
sbb
add
add
jp
lock
xchg
aaa
sbb
lock
fwait
dec
push
push
mov
pop
push
mov
in
xor
push
jb
jp
jp
jb
test
fmulp
nop
lret
call
add
rorl
pushf
mov
pusha
push
jb
or
mov
cld
daa
nop
inc
in
fimuls
cld
je
in
jns
stc
pop
mov
lcall
dec
dec
sub
cs
mov
sub
inc
xor
scas
adc
cmp
roll
call
xchg
push
lods
and
lods
add
ja
or
mov
in
push
enter
ret
enter
les
loop
pop
or
xchg
in
in
mov
xchg
add
test
mov
nop
test
popa
mov
nop
pop
cmp
cmpsl
mov
data16
cmp
insb
js
mov
sysret
push
xor
insb
push
mov
mov
out
lcall
xorl
xlat
ss
insl
cmpsb
xor
or
cmp
push
lock
js
data16
shrl
add
cltd
lret
scas
lret
mov
clc
sub
ret
test
dec
loope
jno
sub
or
out
je
shll
adc
adc
xchg
or
mov
lret
or
and
cmp
or
adc
scas
inc
insl
push
lods
lock
inc
xchg
inc
push
das
mov
jnp
mov
xchg
rcrb
and
add
push
test
and
adc
mov
jle
pop
shr
lds
or
push
aaa
cmp
add
add
add
in
pushw
cmp
and
out
movsl
test
xor
in
dec
sbb
add
xor
mov
mov
mov
add
xchg
xor
sbb
mov
xchg
neg
out
add
add
lret
into
mov
dec
add
mov
cmp
add
testb
ret
in
mov
jbe
lock
adc
add
mov
or
sub
add
dec
hlt
or
push
shr
cld
push
ds
or
adc
inc
mov
mov
dec
adc
rclb
imul
inc
das
fcomp
pusha
xor
mov
lret
int3
and
not
and
movsl
scas
dec
repnz
dec
mov
xor
sub
lock
pop
inc
shll
stc
cli
sti
cld
loop
xor
enter
fmuls
xor
stos
mov
sbb
cmp
cmpsb
imul
pop
push
fsts
push
sbb
add
mov
test
in
roll
rcrl
int
insl
mov
ljmp
xchg
je
push
or
andb
fmul
sbb
fstl
divb
pop
fcomp
pop
loopne
fldl
or
fldl
or
mov
cmp
sub
aad
test
inc
lcall
push
leave
pop
jmp
fldcw
in
cmp
rorl
mov
xor
cmp
das
cmp
xchg
dec
je
add
int3
sbb
and
sbb
sti
fnstenv
std
mov
stos
lcall
jmp
in
into
inc
mov
lahf
fidivrl
pop
fnstenv
ds
sub
mov
add
add
adc
jle
cmp
test
mov
mov
pop
in
test
hlt
inc
in
cs
adc
pop
push
xor
inc
in
rcr
cmp
push
push
enter
shl
push
leave
pusha
xchg
mov
and
inc
lock
mov
stos
push
mov
repz
mov
inc
ds
repz
out
stc
andl
sahf
jecxz
mov
loopne
fnstcw
cmp
inc
in
push
or
mov
xchg
mov
lock
push
cmp
xorb
jmp
dec
sub
jle,pt
push
jle
popf
mov
pop
push
inc
or
sar
sub
inc
jmp
push
push
xchg
jmp
add
add
ljmp
popa
push
jmp
push
ljmp
clc
push
fmull
push
inc
jp
cmp
je
jnp
or
push
push
adcl
push
push
cmp
inc
add
cmp
add
xchg
mov
lock
mov
sbb
inc
cmpsl
add
cmp
inc
fs
adc
sbb
cmp
push
adc
pop
xchg
or
int3
cltd
js
or
jl
lods
cld
and
xchg
xchg
pop
mov
mov
int3
shlb
call
cwtl
jne
cltd
mov
lea
nop
adc
pop
sbb
int3
les
dec
cmpsl
lret
push
clc
ds
rol
add
ss
movsl
jnp
cli
pop
and
jne
dec
sbb
cli
fldt
jecxz
sar
lea
testb
or
xchg
push
addr16
cmp
xchg
mov
pop
stc
mov
mov
cmp
ds
mov
pop
push
inc
xchg
add
push
add
xlat
stos
jle
or
fisubrl
adc
shll
lret
push
das
xchg
inc
xchg
fsts
xchg
inc
mov
nop
leave
mov
cs
or
shl
pop
repnz
cwtl
aam
xlat
movsbl
jmp
xchg
dec
push
pop
or
inc
lret
in
add
addl
add
cmpsl
ror
mov
cmp
hlt
pop
imul
stc
or
pop
lahf
popa
mov
cs
xor
sbb
pop
pop
enter
mov
push
xor
outsb
or
inc
or
jmp
lahf
or
jne
inc
add
ss
aad
imul
mov
jne
mov
jl
cmpb
xor
or
adc
movsl
sub
imul
push
imul
lods
shlb
pop
lods
cmp
mov
mov
jp
mov
test
pop
cmp
inc
xor
lea
mov
xchg
in
mov
adc
sub
lret
pushf
cmp
xor
xacquire
ja
mov
or
adc
adc
adc
push
inc
cmp
imul
mov
xchg
dec
inc
jne
mov
inc
mov
cwtl
add
mov
add
cmpsl
cmp
xchg
rcll
mov
into
jno
adc
mov
fnstcw
dec
shr
mov
mov
mov
push
pop
sbb
push
fcmovbe
jns
xlat
loopne
mov
mov
sahf
add
inc
loopne
cmp
dec
add
or
dec
fisubl
cmp
mov
enter
enter
mov
sub
jno
dec
sbb
or
and
sbb
je
neg
pop
sahf
and
subb
dec
add
dec
or
jg
std
mov
sahf
pushf
push
jecxz
xor
inc
subb
mov
in
jg
std
aaa
addr16
cltd
out
lock
fdivr
mov
adc
ret
out
pop
mov
mov
jge
test
fadds
es
shlb
sbb
andb
std
nop
popf
mov
call
jl
std
aas
mov
call
push
mov
repz
mov
loop
shr
fdivrs
mulb
mov
imul
mov
push
fidivs
lds
pop
mov
out
sub
mov
lock
out
imul
mov
imul
push
call
xor
jmp
cltd
push
mov
push
push
mov
cmp
inc
movb
xor
mov
std
repz
stos
cwtl
out
imul
add
movb
loop
ljmp
icebp
ret
je
dec
xor
roll
jns
lret
xor
into
inc
inc
mov
mov
dec
and
sub
push
cmp
cmp
mov
enter
call
std
pop
lods
arpl
cmp
lea
push
loopne
addr16
std
inc
repz
out
shlb
daa
push
mov
popa
out
lret
mov
push
fdivrp
or
pop
mov
dec
cs
stos
mov
sub
test
enter
sub
jmp
dec
inc
mov
push
cmc
lods
push
ss
ret
pop
lock
pop
dec
jno
xor
push
sub
jmp
int3
sbb
jmp
adc
and
ror
cmp
jmp
sub
mov
test
test
mov
mov
adc
std
dec
inc
cwtl
dec
dec
cmpl
xor
les
pusha
cmp
sbb
adc
out
js
cmpsb
divl
loopne
push
inc
lret
jne
cmp
xchg
cmp
add
dec
hlt
or
jp
jne
fdivr
dec
jl
add
push
dec
pop
jno
push
xchg
push
je
inc
dec
mov
adc
cmp
mov
jo
aaa
fsubrl
out
frstor
nop
mov
sti
xchg
xor
seta
out
sbb
or
xchg
mov
sub
mov
adc
shll
add
gs
xor
xor
pop
pop
leave
cltd
movsb
jb
mov
movsb
in
and
in
pushf
xor
mov
repnz
and
loopne
inc
lea
aad
pop
out
adc
adc
sub
cmp
ja
fisubrl
sarl
or
add
leave
or
js
mov
lods
shl
loopne
add
xchg
or
xor
push
push
ret
fwait
shr
add
push
inc
push
lock
repz
lea
pop
add
test
xor
imul
repz
roll
das
test
cmp
cmc
jb
sbb
xchg
xor
cmc
fwait
rorl
jns
push
bound
inc
xlat
adc
and
xchg
inc
aad
fwait
rcrl
cmp
int3
les
imulb
or
cmpsb
push
xchg
add
cltd
inc
mov
xchg
shr
ja
adcl
test
jns
xchg
pushf
inc
xchg
lods
fs
jb
mov
test
fs
lret
adc
es
mov
dec
dec
jb
dec
fdivrs
sti
lcall
pop
std
lcall
loope
xor
pop
cmp
fwait
mov
cmc
sbb
fwait
mov
add
mov
leave
gs
mov
cltd
adc
add
mov
push
stc
pushf
pop
in
push
jecxz
divl
add
xabort
xchg
and
dec
stc
xchg
jb
mov
ds
mov
mov
lret
xchg
and
xchg
dec
nop
pop
push
icebp
cltd
lea
fs
or
bound
dec
push
inc
xor
enter
incl
push
test
sbbl
xor
stos
jno
sbb
or
jno
enter
les
mov
push
dec
pop
je
stc
and
add
dec
movsb
inc
add
mov
push
popa
mov
xor
ss
adc
test
hlt
cs
pop
shlb
xor
jne
xor
test
pop
and
or
inc
les
into
jne
add
xor
es
ja
jno
mov
dec
mov
and
sbb
inc
aaa
xchg
sub
stos
mov
pop
mov
mov
test
jne
push
xor
addl
mov
sub
leave
or
xor
js
or
inc
subb
dec
sahf
into
mov
stos
jl
pop
mov
mov
decl
mov
adc
push
outsl
mov
test
je
mov
xor
add
ret
cmpsl
mov
sbb
cwtl
and
push
cld
int3
or
jle
popa
add
ja
adc
sub
mov
js
push
icebp
sbb
je
jmp
bound
adc
inc
jb
inc
shll
loope
add
cmp
cs
sahf
xchg
dec
cld
lods
or
fwait
les
mov
xchg
lret
pop
sub
mov
movl
test
add
cmp
dec
cmp
ss
pop
rorb
insb
loope
out
add
dec
and
add
inc
mov
cwtl
rolb
ds
or
test
repnz
sub
push
es
or
mov
je
hlt
daa
clc
inc
push
dec
mov
addl
jae
testl
cmpsb
jmp
cmp
xor
repz
inc
mov
les
pop
inc
jp
xor
ret
pusha
lds
inc
xorb
test
add
xchg
dec
fcmovnbe
inc
lds
sbb
add
fwait
pop
jmp
loope
and
add
sbbl
or
or
clc
movb
iret
cwtl
call
daa
push
inc
orl
mov
rcr
adc
push
and
jmp
push
push
jmp
mov
stc
aam
fsubrs
add
ficoms
jo
xor
xlat
or
cmp
pop
ss
iret
add
add
add
test
sbb
sahf
sbb
jns
or
stos
add
add
cmp
imul
mov
imul
sbb
push
in
sarl
imul
sub
cs
cmp
sbb
dec
addl
enter
adc
xchg
inc
dec
push
xchg
es
int
inc
pop
out
inc
cmp
push
pop
push
imull
cltd
or
fs
es
sbb
popa
subb
shrl
loopne
addr16
push
repnz
cmp
lea
and
pop
pusha
mov
mov
jne
pop
pop
push
mov
push
ret
hlt
loopne
jae
pop
mov
out
icebp
out
mov
sub
mov
sti
xchg
ss
cmp
cmpsb
mov
sub
imul
and
xchg
and
outsl
inc
mov
xchg
clc
cmp
roll
imul
sbb
or
pop
jnp
or
mov
test
jno
push
cli
sbb
mov
sbb
or
sarb
pop
or
sti
mov
or
sub
adc
int3
lahf
inc
leave
test
adcb
add
and
xor
in
push
cs
sub
dec
dec
dec
xchg
ds
adc
sbbb
sbb
add
adc
arpl
xor
add
mov
inc
jmp
pop
mov
adc
adc
mov
fcomi
or
ficoml
shr
push
ret
rclb
and
or
pop
inc
pop
fcom
int3
pop
shlb
jo
xchg
movsl
xchg
cmp
jl
cmpsb
ss
lods
jo
add
rorb
or
adc
adc
movsb
adc
xor
test
sub
roll
xchg
jge
imul
in
pop
and
andl
cmp
xor
jg
cmp
jl
mov
mov
jle
cmp
lds
pop
cmp
jb
orl
xchg
xor
xchg
inc
test
cmp
push
mov
push
cmp
pop
js
or
es
leave
push
sbb
lods
and
adc
and
dec
mov
dec
or
mull
sbb
push
cmp
sbb
pop
xor
imul
pusha
ret
stos
and
pop
inc
fstpl
add
cmp
adc
cmp
push
cmp
addl
inc
sti
or
scas
ret
fdivrs
add
shll
fs
pop
pop
cltd
mov
sbb
add
cmpsl
movsl
mov
pusha
pushl
mov
mov
add
pop
xchg
xchg
mov
and
je
pop
xor
incl
dec
je
jmp
je
mov
mov
mov
push
or
jo
fcompl
rcrl
cmp
insl
mov
test
popf
push
in
sub
adc
add
or
je
aas
ss
xor
dec
mov
mov
mov
jne,pn
sbb
inc
mov
cs
sub
adc
in
jbe
lret
jge
mov
mov
pop
mov
mov
out
jno
mov
outsl
mov
sbb
rolb
lds
dec
jmp
push
jge
adc
inc
test
and
add
xor
sub
adc
mov
mov
pop
scas
push
fidivrs
add
push
inc
outsl
test
in
das
dec
cwtl
cmp
aas
inc
enter
pop
addl
and
je
add
inc
inc
adc
aam
or
mov
orb
orb
scas
es
mov
es
fsts
mov
jp
or
and
shl
push
adc
adc
outsb
xor
lret
icebp
pop
mov
loop
xor
test
xor
std
add
and
pop
add
or
out
xchg
sbb
jecxz
movb
inc
mov
xchg
sub
pop
cmpsb
out
cmp
je
out
out
fidivl
adc
xchg
pop
gs
or
outsb
or
cld
cmp
in
lcall
repnz
ret
xchg
aad
out
call
sarl
loope
hlt
mov
cld
pop
pop
adc
std
and
sub
mov
and
and
and
clc
or
jmp
mov
sbb
and
adc
sub
testl
insb
insb
adc
cld
and
xchg
xor
jo
imul
cmp
lret
push
aaa
mov
jmp
push
pop
inc
in
cmc
fldt
add
test
dec
add
mov
fidivrl
stos
pushf
cmp
jbe
push
pop
or
jge
push
adc
pop
inc
ljmp
mov
jmp
popa
jbe
jecxz
or
xor
pop
into
xor
xor
xor
repz
fisubs
mov
add
daa
dec
insb
or
inc
add
pop
push
cs
pop
or
adc
sti
in
xchg
push
imul
dec
push
out
mov
push
lds
or
insb
jne
mov
add
adc
fdivs
lock
cld
mov
inc
and
cmp
imul
push
rorb
or
inc
mov
fs
or
fs
mov
loop
xchg
mov
push
or
mov
daa
push
or
xchg
add
lret
outsl
or
loop
ja
cmp
arpl
jl
ss
jmp
xor
into
rol
and
inc
inc
adc
add
lods
enter
pop
je
pop
fcomps
inc
ficomps
int
or
xor
popf
and
nop
test
fs
bound
sti
xchg
ret
add
loopne
bound
icebp
xchg
xchg
cmp
add
je
repnz
loop
and
pusha
or
push
test
push
ror
inc
add
xor
jae
fimuls
pop
add
ret
scas
adc
dec
stos
pop
sub
cwtl
rorl
cmp
pop
stc
push
ja
mov
daa
lods
lds
mov
xorl
mov
movb
test
ret
inc
stos
jo
jae
call
dec
inc
xchg
ljmp
jbe
ss
push
sti
les
subb
add
push
push
orl
lods
scas
clc
or
and
jo
jle
xchg
inc
add
icebp
lea
sbb
adc
adc
mov
dec
cmp
and
adc
jnp
jne
scas
in
jmp
cmp
dec
inc
inc
or
jne
xchg
mov
mov
add
push
sar
loopne
add
hlt
lea
into
or
je
mov
and
and
lock
cmp
cld
jmp
mov
cmpl
sbb
ret
jmp
push
dec
insb
pop
push
inc
addb
jae
sbb
sbb
insb
sti
or
out
int
pusha
push
and
imul
insb
fwait
inc
adc
xor
jno
push
pusha
jmp
inc
push
pop
push
outsl
add
dec
push
les
add
andb
dec
adc
add
shll
add
and
push
and
mov
mov
or
xor
xchg
in
js
into
mov
in
pop
mov
mov
pop
mov
adc
jl
add
pop
pop
sbb
push
loopne
push
fsub
pop
sbb
and
cld
adc
andb
and
push
cmp
daa
adc
add
pop
lock
sarb
jg
popf
adc
push
sahf
mov
rcrb
mov
aas
lahf
add
push
push
mov
subb
or
scas
cmp
cmp
jbe
sar
and
shl
add
xchg
push
push
sahf
inc
add
pusha
in
xor
and
xor
leave
lcall
mov
loopne
xchg
fs
xorl
push
in
or
subb
rolb
jb
xchg
adc
xchg
mov
pop
lret
xchg
dec
cli
shl
insl
inc
pop
rorl
cmp
aas
push
aaa
xor
ds
xchg
int
push
mov
jne
sub
test
call
js
insb
jo
aaa
and
mov
mov
cmpsl
shrl
adcb
adc
sbb
push
fbld
and
inc
mov
and
mov
std
inc
jmp
push
xlat
cs
test
xor
push
sahf
mov
push
rcrb
cltd
xor
and
jg
stos
mov
test
adc
loopne
or
sub
fisttpl
push
rol
mov
lds
add
enter
or
mov
and
jb
shrb
xchg
pop
xchg
dec
add
ret
sub
lea
push
pop
lea
inc
or
push
ret
out
shr
sub
jg
adc
test
xor
pusha
cmpsb
cmp
pop
jo
movsl
dec
out
call
lods
adc
add
cltd
sub
sub
push
ret
sub
add
das
or
and
mov
sbb
sar
je
sub
shll
mov
jo
addb
mov
shlb
fisttpll
jmp
neg
and
lock
push
fildl
xor
cmpsb
xchg
scas
or
mov
mov
push
and
les
xchg
mov
inc
jl
ret
ret
and
or
and
xorb
jnp
jp
lock
adc
loop
mov
adc
int3
add
adc
xchg
push
add
jae
sub
push
push
jae
out
adc
test
ds
mov
fs
outsb
movl
jns
push
sub
in
loopne
pop
je
xor
sbb
push
stc
adc
adc
hlt
adc
sub
xchg
or
hlt
mov
in
cmp
or
fnclex
mov
pusha
jg
or
pop
imul
imull
dec
adc
push
and
jne
lahf
dec
in
push
pop
outsl
inc
or
push
stc
clc
jl
pusha
jle
pushf
outsl
jo
dec
movsl
ja
mov
cmpsl
loopne
out
mov
or
mov
adc
mov
and
lret
mov
test
out
stos
mov
into
and
mov
or
sub
std
pop
and
jg
sub
ja
xchg
movsb
decb
add
sub
cmp
mov
sub
lock
in
lock
rep
add
arpl
inc
adc
ret
rclb
add
sub
jnp
push
or
jbe
mov
jmp
pop
div
xchg
add
movsl
ja
add
loop
pop
push
add
sti
push
outsb
sub
add
or
andl
clc
imul
or
ret
jb
cmp
lahf
mov
and
and
mov
or
in
jmp
imul
out
ret
fcoms
insl
cmpsb
rol
ret
cmp
orb
push
jnp
fdivl
fsubrs
mov
repz
inc
es
sub
cmpsl
or
mov
push
inc
sarb
and
rorl
jb
xor
xor
mov
adc
push
push
fidivrl
dec
stos
add
jg
and
and
mov
and
push
mov
cmp
xor
popa
fwait
and
jmp
or
push
xor
dec
mov
fisubrs
andl
sarb
orb
test
fisubrs
sarb
ret
and
mov
int
adc
and
push
cmp
shrl
ds
popl
nop
int3
push
mov
cmpsl
nopl
ss
sahf
xchg
mov
adc
outsl
mov
add
jae
mov
stc
adc
inc
add
or
sbb
sub
std
mov
push
fsubrl
sbb
mov
pop
xchg
jno
dec
nop
inc
xor
aad
test
aaa
lds
mov
iret
enter
lock
popa
inc
fists
sar
pop
imul
js
cmp
or
ja
xor
cmp
inc
jmp
hlt
mov
push
inc
pop
sub
jne
imul
jl
push
rolb
jge
aas
sbb
shlb
xchg
in
inc
push
or
rcr
fsubs
popa
sub
pop
les
pop
ret
ret
ss
adc
mov
mov
and
mov
xchg
sbb
mov
xor
push
mov
scas
push
ja
imul
imul
add
sbb
imul
loopne
sahf
or
enter
sbb
or
add
mov
sub
test
rolb
push
mov
or
lock
in
push
aas
movsb
xor
int
movl
sbb
movl
xchg
pop
sbb
nop
xchg
aaa
loopne
xchg
rolb
aas
movsb
push
xchg
hlt
inc
cmp
jecxz
movsb
inc
push
mov
shll
add
pop
or
in
insl
cmpsl
xchg
or
test
or
sub
xor
ret
cmp
inc
ret
sahf
adc
nop
xchg
cltd
xor
jle
ss
or
add
sbb
push
inc
lahf
push
pop
inc
popa
clc
fidivrl
sub
add
adc
xchg
mov
mov
insl
mov
gs
ror
adc
jle
cmp
cltd
and
mov
xor
adc
mov
push
pushl
aas
adc
cmp
sub
inc
sbb
and
addl
cmp
rcll
push
in
xchg
popa
adc
dec
cmp
jne
cs
cmp
dec
movsl
push
and
and
inc
sbb
pop
insb
cmpsb
movsb
mov
add
xchg
dec
movsb
test
sub
and
xor
mov
cld
sub
cltd
jg
cmpb
imul
outsl
mov
inc
or
lret
xor
cmpsb
in
inc
xchg
les
pushf
add
push
jl
pop
lock
mov
push
add
add
dec
mov
sti
jg
aas
xchg
jns
orb
sbb
pushf
sbb
push
cmp
les
add
and
inc
je
and
cmpsb
jno
adc
stos
mov
nop
xor
xchg
or
cmpsb
aas
repz
fs
pop
jl
es
sahf
sub
mov
leave
xchg
or
call
fistl
pusha
ret
pop
xchg
xchg
loopne
fldcw
jb
int3
add
mov
or
inc
sbb
test
test
mov
xchg
imul
mov
push
jnp
xor
mov
mov
add
mov
cmp
inc
mov
pop
mov
pop
cmp
cmp
pop
adc
pop
aas
adcl
or
sbb
sbb
inc
push
dec
inc
dec
add
js
cmp
rcr
mov
jo
mov
push
xchg
jbe
addl
or
adc
mov
xor
and
pop
lock
sbb
xor
inc
scas
rcl
cmpl
cmc
inc
cmpl
inc
push
pop
jb
les
loope
or
movsb
push
aad
ret
ljmp
daa
outsl
add
add
or
movb
mov
movsb
pop
dec
cmc
cmp
fwait
xchg
add
fisubl
or
movl
cmp
mov
add
or
and
and
inc
inc
cmp
cwtl
mov
pop
repnz
imul
and
xchg
sbb
hlt
adc
mov
nop
inc
rcr
inc
xchg
imul
push
pop
je
fstps
cltd
aam
push
cs
loopne
push
cmpl
pop
or
push
push
jmp
jnp
cmc
pushf
cmp
or
je
xchg
je
arpl
fs
mov
sbb
or
fs
cmp
sbb
xchg
les
testb
test
inc
rorb
in
and
push
leave
adc
push
dec
adc
enter
mov
sbb
sbb
sbb
ficoms
push
jae
adc
leave
pop
and
push
leave
mov
sbb
pop
and
fwait
ja
fcoms
adcb
or
sbb
cmp
inc
xor
adcl
and
inc
add
jo
add
and
adc
aaa
leave
push
icebp
enter
mov
fildl
fsubl
or
mov
mov
flds
push
or
test
ja
mov
mov
cli
filds
aas
sbb
popa
pop
je
pop
cmc
and
mov
ret
jbe
inc
rorb
popa
popa
adc
lcall
ss
out
sbb
xchg
jb
xor
jge
ret
cmp
jae
push
cmp
jl
adc
inc
mov
inc
lret
insb
rorb
add
jecxz
inc
sub
jbe
or
out
je
dec
testb
jne
clc
push
mov
or
into
rorl
ljmp
mov
push
movsl
movsb
aam
adc
into
xor
sarl
sub
fwait
push
add
shl
leave
xor
mov
mov
icebp
cmp
scas
mov
mov
mov
mov
push
into
adc
or
lahf
adc
or
out
cwtl
js
test
fs
jne
stos
push
fildl
jns
jne
ja
mov
in
shll
pop
ss
arpl
mov
dec
lret
add
sbb
add
fsubrl
mov
push
adc
or
loope
sub
inc
das
sub
fldl
subl
clc
cmovbe
jbe
inc
in
mov
mov
push
mov
jle
add
xchg
outsl
push
jno
mov
inc
std
and
cmp
mov
mov
jo
jl
hlt
outsb
sub
or
jle
aam
and
mov
push
adc
in
inc
push
pop
shll
and
dec
jge
lock
loopne
sbb
dec
in
icebp
fistl
cmp
fstl
orl
fcompl
mov
hlt
or
dec
inc
loopne
js
out
cmp
sub
orl
fdivs
push
jne
inc
sbb
jnp
and
negb
std
jb
adc
ja
pop
lock
adc
mov
out
cmp
mull
ljmp
mov
call
or
jne
dec
and
lcall
inc
lret
jp
add
mov
push
mov
jne
jmp
ljmp
dec
aaa
xor
xor
inc
mov
cwtl
mov
mov
jg
adc
xlat
je
cmp
and
cmp
or
inc
fcoms
testb
les
and
jge
mov
jmp
inc
movb
and
push
cld
ja
ret
jns
jb
cmp
jbe
mov
push
or
cmpsb
dec
loop
push
in
push
pop
push
pop
mulb
out
call
and
jge
ret
adc
add
mov
leave
push
push
push
test
add
push
bound
pop
jmp
push
insl
out
cld
or
outsb
sbb
fstpl
pop
jmp
cmp
push
xor
push
sbb
call
imul
mov
adc
push
lock
scas
dec
xor
out
int3
xchg
lsl
jmp
push
pop
push
push
iret
push
std
out
inc
shr
rcr
shr
rcr
or
div
pop
dec
adc
out
mov
inc
inc
mul
pop
jb
cmp
or
cmp
add
sub
sbb
adc
test
xor
neg
lret
lret
adc
inc
out
loopne
mov
add
ret
adc
or
xor
or
dec
in
pop
subb
leave
jne
mov
xchg
jecxz
pop
into
ficompl
add
adc
stos
inc
xchg
lods
push
popa
pusha
mov
imul
pop
dec
xchg
push
adc
sbb
jo
add
push
cmp
jne
lea
inc
pop
xor
push
add
inc
js
xchg
xchg
jecxz
sbb
cmp
sub
test
cwtl
cmp
ret
fstps
and
cmp
out
inc
sahf
adc
adc
xor
sbb
sub
push
sbb
mov
push
int
push
inc
fwait
fs
test
sub
andl
mov
fiaddl
sbb
subb
loop
rol
add
push
pop
stos
aam
mov
ficoms
push
push
call
push
push
arpl
fs
inc
sub
push
xor
pop
sub
sbb
inc
test
cmp
add
mov
pop
lea
lea
or
adc
mov
fcomps
push
pop
push
sbb
jmp
popl
ret
nop
push
mov
and
push
sbb
push
mov
xor
sarl
mov
jmp
sub
xor
sub
or
sub
loop
mov
clc
xchg
adc
pop
sbb
adc
push
inc
inc
or
cld
cmp
xor
out
imul
fildl
push
lret
pusha
inc
test
inc
inc
pusha
pusha
cld
inc
sbb
sbb
movsb
sub
push
or
in
in
adc
xchg
xchg
fldt
sbb
xchg
xchg
xchg
xchg
sub
xor
ss
push
inc
and
daa
mov
inc
inc
cmovs
add
add
leave
pusha
fs
leave
jo
js
movsb
cmp
adc
xchg
dec
es
mov
xchg
cwtl
pushf
aaa
cltd
fs
mov
cmpsb
fsubs
test
test
or
dec
add
add
loopne
jl
and
push
mov
imul
data16
call
movsb
and
adc
movsb
pusha
inc
lcall
or
and
and
std
fnstcw
and
pop
repnz
out
mov
ss
xchg
scas
jg
cmp
sbb
or
inc
dec
jne
je
js
out
nop
or
nop
inc
lcall
or
aad
add
add
sarb
in
add
or
or
dec
dec
mov
pusha
mov
or
aad
call
inc
cwtl
int3
imul
sbb
pop
xorb
loopne
push
shlb
pop
dec
rcrb
jne
add
iret
pop
xchg
or
and
inc
push
sub
loopne
fwait
cmp
adc
pop
fdivs
scas
nop
ficomps
insl
push
lea
xchg
xchg
ss
je
sub
test
dec
fmul
push
dec
cmp
xor
ret
sarb
sub
sbb
mov
add
fmuls
in
mov
popf
mov
pop
int3
ficompl
rcrl
inc
cwtl
or
lock
cmp
push
cltd
rcrb
sbb
or
rcr
dec
pop
je
push
pushf
pop
inc
inc
sub
jns
inc
push
icebp
dec
enter
mul
push
test
jge
inc
cltd
and
scas
addb
call
lret
shrb
add
fs
in
xchg
and
int3
rorl
rcrl
adc
outsl
pop
and
pushf
and
loopne
rorb
inc
adc
add
lahf
out
and
adc
adcl
dec
cmpsb
dec
ja
fiadds
push
adc
sti
mov
sbb
sbb
sbb
dec
mov
lcall
cs
push
sbb
mov
loopne
rcrl
cld
add
pop
cwtl
js
in
adc
pop
cmp
or
jle
or
jb
push
mov
push
or
subb
pop
fsubrs
test
pusha
sub
mov
cmp
mov
loope
andl
add
dec
loope
pop
mov
adc
jno
notb
mov
xchg
push
xor
pusha
dec
shrl
xchg
clc
jmp
fwait
mov
or
lods
rcrl
pop
mov
out
jb
mov
mov
xor
or
xor
sahf
xchg
ja
cmp
xor
fildl
and
adc
mov
insl
pop
xor
mov
push
lea
or
and
out
ficompl
or
pop
and
fcmovnbe
sti
mov
test
cld
or
mov
jl
not
sbb
aad
popa
push
mov
lods
mov
or
push
adc
outsl
in
dec
popf
add
pop
inc
adc
or
sbb
sbb
test
dec
ljmp
lods
sahf
push
inc
pushl
mov
cmpl
jns
dec
sub
xor
pusha
ret
js
mov
pop
addl
pop
mov
lcall
mov
sub
in
loopne
mov
pop
cmp
in
lods
mov
xchg
mov
mov
mov
mov
or
les
lods
test
ljmp
add
xor
cmp
add
cmp
fsubs
mov
pusha
xchg
rolb
cmpsb
iret
inc
call
jmp
fs
pop
ss
dec
inc
lea
rorl
add
inc
mov
inc
lods
pop
add
pop
xchg
mov
fcoms
daa
cmpsl
test
imul
mov
aas
add
cmp
out
inc
adc
cmpl
insb
cmpsb
int
push
test
push
or
push
add
jo
inc
mov
sarl
mov
inc
sahf
cmp
clc
xor
ret
sub
cmp
shll
add
inc
cmp
push
jmp
inc
fst
addl
xor
clc
pushf
cltd
pushf
iret
test
push
add
mov
push
cmp
sbb
out
dec
adc
jb
inc
xchg
fidivl
mov
adc
sysenter
sbb
dec
inc
sarb
repnz
jmp
neg
popa
scas
mov
mov
mov
xchg
mov
andl
cmpsb
ds
sub
js
scas
jnp
cmp
mov
inc
cmp
cmpsb
icebp
jbe
aas
aas
movb
inc
mov
adc
cmpl
fmuls
sub
sub
and
ja
adc
add
pop
cmp
jmp
sub
cmpsb
leave
dec
pushl
in
cmp
jmp
dec
add
add
gs
cmp
cmp
rclb
inc
lods
out
scas
in
orl
pop
mov
loopne
or
cmp
and
mov
jns
mov
add
add
loopne
add
jl
xchg
xchg
push
int
dec
dec
stc
pop
xchg
cmp
pop
mov
adc
into
xchg
push
xchg
and
add
sub
addb
jp
loopne
test
mov
addr16
add
pop
lock
scas
adc
js
fs
std
jno
sub
dec
or
fisttpll
xor
sub
push
jo
lret
jmp
dec
je
or
repz
lods
pop
mov
lret
aas
lea
mov
bnd
pushl
lods
adc
push
bound
mov
insb
ljmp
and
inc
jne
divl
mov
fidivrs
xor
filds
inc
xchg
pop
inc
call
and
sbb
cltd
or
and
pop
pop
and
repnz
pop
dec
mov
jae
sbb
fldt
jne
call
push
xor
mov
push
pushf
cs
pop
sub
and
outsb
jl
loope
ljmp
loop
mov
sbb
push
push
or
sbb
push
jp
add
xor
add
xor
push
andl
pop
rorl
or
les
repz
sbb
or
jns
and
adc
adc
adc
sub
and
mov
not
pop
rclb
cmc
add
bound
push
pusha
mov
mov
or
dec
push
and
mov
mov
xor
or
mov
ja
sub
and
iret
sti
idiv
mov
push
pop
inc
xor
ret
inc
in
out
pushf
cli
sbb
mov
addb
cmp
xor
nop
std
into
mov
pop
int3
and
aam
lret
cmpb
out
mov
shrl
mov
cmp
into
sub
adcl
orl
sbb
cwtl
jp
notl
xchg
js
mov
pop
imul
gs
cmp
push
sbb
cmp
lods
jg
mov
xchg
bound
loopne
xchg
dec
cmp
stos
jge
mov
cmp
addr16
pop
sub
test
add
lods
adc
sub
pop
loopne
jne
adc
mov
inc
idivb
lea
lods
pop
int3
pop
pop
pop
and
inc
mov
cmp
call
inc
sbb
test
je
xor
xchg
add
out
js
lods
xchg
imul
jmp
jle
mov
rcr
js
scas
dec
cmp
popa
ss
cld
inc
mov
jmp
add
push
push
and
mov
enter
jl
inc
test
gs
inc
add
js
pop
sbb
push
add
push
popa
add
les
pop
mov
clc
add
jo
and
and
lds
or
mov
and
push
lret
mov
or
xchg
test
push
pop
dec
test
test
fisttpll
dec
or
mov
or
xor
jecxz
mov
mov
loop
jle
loopne
adc
jl
pop
mov
push
cmpsb
pushf
movsl
sbb
push
lret
pop
pop
push
imul
cmp
and
pop
add
push
pushf
stos
inc
sbbb
push
sbb
jb
add
sbb
push
cmp
sub
rclb
mov
fistpl
or
sub
fidivs
stc
in
or
cmp
cmp
movsl
sbb
sub
stc
add
repnz
lcall
xlat
xor
mov
or
dec
pusha
sbb
and
dec
loop
imul
das
push
nop
xchg
out
mov
cmp
icebp
inc
mov
sbb
and
pop
clc
sub
stos
cmp
add
jl
aaa
dec
push
adcb
notb
or
cmp
inc
mov
lahf
mov
pushf
cld
and
jge
nop
mov
mov
repnz
movsb
aaa
xchg
adc
inc
jl
imul
push
imul
mov
notl
jmp
or
jno
sbbb
pop
mov
popf
inc
push
jns
mov
adc
ja
and
jne
or
jbe
dec
inc
data16
rcr
es
inc
xor
imul
and
xor
sbb
cmp
adc
and
sbb
rorb
and
leave
xchg
rclb
and
mov
cmp
std
jmp
fwait
xor
xor
or
sub
inc
push
push
ljmp
mov
xor
dec
push
popf
pushf
pop
sub
je
push
popf
ds
cmp
add
push
shr
sbb
pop
idiv
dec
xchg
out
add
push
test
sbb
adc
xor
dec
sarw
and
or
adc
test
push
or
les
adc
jns
loope
insb
push
mov
xchg
mov
pop
testb
sahf
inc
cs
or
mov
shl
not
xor
sbb
jbe
adc
or
shll
nop
xchg
jmp
and
dec
add
xor
arpl
adc
ret
adc
test
add
and
xlat
push
add
push
push
mov
fs
pop
sbb
or
pop
pusha
sarb
sub
mov
incb
jmp
sbb
lock
and
fisttps
je
add
jl
and
jecxz
fwait
cltd
adc
xchg
jmp
inc
ret
xor
sub
test
and
stos
mov
pop
sub
mov
pusha
or
and
push
neg
neg
pop
adc
pusha
mov
pusha
loope
pop
sub
or
into
dec
and
adc
fnstsw
pusha
push
pop
rcrl
insl
inc
sbb
pop
adc
pop
and
adc
es
adc
sti
add
add
ja
add
test
fisttps
loope
mov
push
xor
cmp
inc
das
and
dec
jne
orl
scas
jmp
push
mov
stos
je
xchg
aam
pop
testl
out
and
cmpb
insl
je
jb
sbb
jmp
push
and
inc
add
sub
jnp
adc
mov
inc
flds
flds
fisttpll
or
pusha
aad
push
jmp
fidivrl
out
cmpsb
jle
mov
ret
inc
push
cmp
ss
es
jge
adc
cmp
sub
fsubrp
cltd
adcb
xchg
inc
mov
add
ret
xor
lret
pop
out
test
or
loope
rcl
pop
xchg
push
mov
sbb
out
rcr
sbb
fisubs
pusha
add
les
into
mov
sub
jmp
sub
in
jp
push
or
psubusw
lcall
testb
ds
add
pop
cmp
mov
adc
pusha
pusha
inc
or
push
jp
fstpl
mov
adc
jge
fstp
xchg
lods
pop
shl
or
fdivrl
ja
roll
push
jo
dec
div
push
loopne
in
call
cmp
cmp
jne
test
enter
sti
not
insl
in
sbb
jp
dec
in
mov
sbb
shl
out
mov
push
pushf
or
jmp
pop
js
mov
movsb
fsubr
and
inc
or
mov
adc
and
mov
jecxz
add
out
rolb
mov
push
add
xchg
outsl
mov
pop
or
add
add
add
inc
fcmovu
lcall
movzbl
sbb
pop
out
mov
ljmp
sbb
les
out
xor
dec
rolb
sahf
pop
adc
scas
add
add
adc
push
push
and
dec
mov
sub
hlt
roll
xchg
push
jle
mov
out
call
popa
xor
add
lods
fsubrp
mov
jmp
jno
mov
or
jo
cmp
add
fs
or
or
jl
adc
ficoms
pusha
jmp
inc
mov
into
insb
imul
sub
sub
movsb
incb
mov
insl
insl
sbb
imul
add
add
aas
and
insb
cmp
and
or
out
and
sub
xor
inc
mov
dec
jns
fcompl
mov
call
repz
aam
and
cmp
inc
adc
cmpl
jae
pop
or
mov
jecxz
adcb
int3
pop
cld
adc
mov
addr16
data16
cs
mov
cmpps
sahf
sbb
inc
push
rcrb
shl
jne
jb
jmp
and
cmp
fists
dec
xchg
jecxz
mov
xchg
sbb
adc
jp
cmp
fsubs
into
pop
mov
in
mov
cwtl
dec
xchg
push
dec
cmp
imull
jnp
imul
pop
push
dec
in
or
mov
mov
test
or
or
stos
inc
add
or
cli
add
fwait
push
out
mov
push
cmpl
or
jnp
push
xlat
push
add
sbb
or
sub
ljmp
push
mov
mov
push
fisttpll
mov
adc
inc
pop
nop
xor
and
sbb
or
xor
jnp
fldcw
push
push
mov
add
adc
fldt
fldl
clc
sahf
adc
sbb
adc
inc
adc
and
pop
test
mov
icebp
jb
mov
xchg
imul
push
mov
fsin
mov
rolb
inc
xchg
scas
push
mov
xchg
and
mov
or
and
jmp
and
and
repz
jnp
clc
inc
out
add
pop
addb
xor
lods
sbb
test
imul
inc
arpl
std
cli
inc
add
fidivrs
ret
shlb
mov
sub
add
les
imul
mov
mov
and
jns
ja
mov
iret
sbb
pop
jnp
add
mov
rcrl
data16
adc
and
and
rorb
dec
out
test
mov
dec
test
out
push
movsl
shll
inc
inc
psubq
xchg
jl
cmp
sub
sbb
inc
cmp
xchg
inc
fucomip
sbb
or
or
adc
and
testb
add
add
pop
xor
inc
pop
add
jle
dec
decl
cmpw
inc
inc
and
int
mov
js
ret
add
mov
and
mov
add
shlb
loopne
xchg
xor
aas
daa
adc
test
fiadds
mov
add
mov
cwtl
pop
test
jne
push
add
sub
mov
stos
stos
pusha
and
sub
imul
movsl
add
loope
ret
mov
bound
jo
pop
add
cltd
pop
push
dec
jns
dec
int
sbb
push
jecxz
test
lock
inc
shl
add
xchg
pop
ret
xor
jo
ja
loop
rolb
adcl
outsb
inc
aas
or
jmp
dec
cltd
insb
pop
and
mov
out
pop
hlt
int
mov
inc
push
into
pusha
mov
lea
xor
repnz
scas
nop
dec
or
jb
cmp
sbb
lahf
stos
xor
lea
adc
incb
jae
or
dec
mov
adc
adc
movsb
push
xorb
test
and
jge
push
add
loopne
mov
inc
mov
lock
cmp
dec
dec
stos
inc
repz
lar
lock
rorl
cmp
push
movsl
xor
inc
aas
add
je
sbb
push
push
out
and
push
cld
not
call
pop
popf
je
mov
and
fadd
rcll
out
push
or
and
fisubs
xor
popa
adc
mov
jl
inc
shl
aas
fcoml
mov
sub
sarb
je
adc
int3
push
mov
mov
jge
popa
pop
xor
sub
in
mov
hlt
sub
mov
dec
adc
mov
icebp
push
or
mov
gs
cmp
paddw
jp
jmp
sbbb
or
xor
pop
sub
sub
fiadds
lock
add
push
ret
sbb
jecxz
dec
pop
sbbl
loopne
cmp
loopne
cmp
add
test
imul
or
mov
ja
pop
xor
jl
pop
andl
stos
stos
mov
into
out
jp
fdiv
loop
lea
and
mov
sub
xor
mov
adcl
mov
jecxz
pusha
push
lock
lock
jle
sub
and
in
or
sub
fdivr
and
and
jl
rcrb
pop
pop
xchg
in
mov
add
cmp
and
adc
and
inc
add
add
mov
mov
push
stc
stos
cmp
and
pop
clc
or
jl
adc
mov
push
xchg
pop
sbbl
xor
divb
test
stos
xor
push
adc
inc
loopne
nop
into
mov
mov
shll
movsb
mov
dec
xor
sbb
sbb
popf
pop
or
add
add
or
scas
push
outsb
or
loop
jne
inc
jmp
mov
sub
inc
clc
addb
ja
cs
outsl
mov
jmp
ja
push
sbb
mov
fs
mov
push
cmp
into
add
enter
call
add
add
adc
mov
lahf
std
add
sbb
mov
jmp
or
sub
mov
or
push
adc
push
adc
cmp
jle
mov
cmp
push
xor
insl
jl
inc
dec
push
jmp
dec
push
cmp
nop
cli
lods
push
jbe
xor
iret
loopne
popf
xor
pushf
push
cmp
fs
xchg
rolb
dec
mov
mov
jae
mov
ret
mov
jb
push
insb
inc
mov
jae
in
push
pop
jge
pop
cmp
sahf
mov
add
jns
jne
js
jae
imul
sbb
jb
cmp
jmp
and
or
mov
fiadds
mov
jns
js
pop
push
sub
clc
inc
ja
gs
orl
imulb
and
push
sub
cmp
mov
sbb
push
jbe
sub
mov
ljmp
mov
in
jge
mov
mov
jg
mov
adc
push
add
add
inc
testl
xchg
xchg
push
mov
repnz
into
dec
sbb
jle
jmp
mov
je
cli
and
sub
insb
popa
mov
stc
push
adc
notl
je
or
jecxz
add
pushf
jmp
fsts
ret
bound
icebp
xor
dec
mov
dec
in
or
xlat
stos
hlt
or
lock
adc
rclb
xor
cwtl
jge
neg
add
mov
aaa
dec
sbb
test
stos
out
mov
cmp
adc
nop
sbb
jmp
ret
mov
or
sub
xor
jne
mov
adc
inc
aas
add
in
dec
test
inc
daa
mov
add
and
rolb
adc
dec
mov
pop
add
or
fs
shlb
mov
mov
mov
ret
and
xorl
adc
nop
shlb
andl
adc
sbb
std
mov
or
or
mov
pop
es
daa
adc
mov
add
jne
enter
fisubs
jne
jne
test
into
jne
aaa
or
mov
or
cmp
cmp
jne
pop
lcall
jne
cvtps2pi
add
inc
cwtl
or
mov
add
or
mov
movsb
push
scas
hlt
pusha
or
sbb
cld
mov
or
dec
ja
mov
inc
push
data16
subl
shr
mov
pushf
sub
lock
stc
jg
add
add
add
aaa
cld
inc
sbb
sub
aam
ja
add
add
or
shr
lock
lods
adc
rcll
mov
bound
or
adc
and
clc
jge
mov
les
add
negb
je
lcall
rclb
loopne
shrl
shl
shr
or
inc
dec
lods
jge
shl
call
and
jo
jne
insb
mov
push
das
int3
mov
mov
rolb
and
or
sub
insb
jge
lcall
add
ficompl
pop
and
cmp
sti
pop
lods
es
subl
jmp
call
mov
mov
jnp
jb
pusha
push
fdivl
adc
sahf
nop
dec
or
out
orb
push
sbb
jmp
test
or
sub
add
lret
into
xor
scas
jg
jmp
fidivl
and
fcomp
xchg
mov
adc
rolb
add
es
sub
jnp
into
xchg
add
negb
mov
adc
les
bound
mov
add
rclb
stc
and
lea
inc
add
push
aaa
or
jns
cmpsl
push
out
push
or
repz
inc
shlb
lods
mov
adc
push
rcrl
jo
or
lcall
cmpsb
test
pop
jne
cmp
jmp
add
scas
adc
cli
adc
or
or
fdivs
push
or
dec
lea
in
or
stos
or
dec
pop
sbb
xchg
adc
sahf
mov
insb
inc
cs
or
decl
imul
stc
gs
or
out
mov
dec
cmpb
je
mov
add
sbb
sbb
add
or
mov
clc
push
add
fldz
call
rolb
gs
lods
mov
sbb
sbb
clc
pop
sbb
fnstenv
rclb
push
insl
mov
xor
loope
mov
popf
xor
pop
xchg
xchg
add
add
push
sub
xchg
rclb
push
add
cmpsl
adc
sti
add
gs
and
add
add
gs
add
mov
pop
sub
pop
push
add
adc
mov
rolb
mov
or
add
lods
lods
adc
mov
or
push
pop
je
setg
loopew
cmp
mov
and
push
aam
orl
repz
movb
jge
xor
xchg
addl
push
fcmovb
das
sahf
add
mov
fcomps
pop
add
add
les
pop
lret
jmp
sub
add
dec
adc
int
or
pop
or
lea
mov
mov
out
rcrb
cmp
add
subb
fs
negb
jns
stos
idiv
xor
push
or
mov
jo
sub
add
adc
fimuls
ljmp
inc
imul
dec
push
jb
push
scas
xor
rcrb
cmpsb
adcl
rcr
and
and
adc
push
xchg
out
andl
ret
jbe
xchg
clc
dec
shlb
adc
jge
mov
rcll
mov
lods
movsb
in
pop
pop
ja
cmp
xor
enter
movsb
xchg
push
loopne
sbb
pop
call
mov
gs
cmp
cs
addr16
jno
das
add
mov
jl
dec
fs
xor
sbb
mov
call
jno
pop
pushf
imul
pop
xchg
in
arpl
nop
or
iret
or
jge
xchg
je
jl
rorb
add
adc
jne
roll
add
shlb
adc
enter
sub
and
mov
push
je
or
add
or
add
dec
sar
lea
push
lock
add
lock
sub
ret
repz
adc
pop
push
test
and
inc
enter
lea
js
push
sub
push
dec
scas
incl
leave
and
add
cmpsb
std
add
ret
movb
push
and
ss
jmp
fwait
sbb
inc
neg
sbb
jecxz
mov
lock
ret
daa
xor
or
jne
pop
adc
sahf
mov
jmp
out
test
xor
scas
test
xor
js
inc
aam
or
adc
xor
xlat
or
jg
ja
add
jbe
sub
cmpsb
lret
push
sub
adc
ss
or
mov
sbb
les
pushf
data16
loopne
loopne
mov
ret
mov
add
add
shrd
push
jle
push
daa
xor
cmp
ss
scas
scas
xor
mov
or
lea
nop
stc
inc
add
pop
hlt
xor
out
xchg
clc
sub
mov
inc
xor
or
incb
push
shrb
sbb
flds
add
pushf
popa
fsub
jl
adc
icebp
mov
dec
and
pop
and
push
pop
sbb
js
jg
mov
in
push
sub
or
inc
adc
neg
cmp
mov
lock
or
iret
inc
inc
inc
shll
sbb
pop
sub
xor
jbe
adc
add
mov
popa
jge
add
push
jg
lods
jb
xor
dec
pop
rorb
or
or
loope
lcall
lods
lret
rcrb
orl
mov
pop
es
mov
adc
inc
add
je
lods
inc
jecxz
int
sbb
mov
adc
loopne
test
or
testl
inc
mov
mov
add
orl
and
movsl
dec
hlt
dec
add
jge
mov
jne
inc
add
int3
jl
data16
mov
pop
xor
xor
ficompl
out
into
mov
pusha
bound
pushf
out
add
mov
xor
enter
je
push
shlb
and
cmp
add
push
pushf
push
xor
stos
ficoms
dec
test
sub
mov
add
mov
adc
or
push
jmp
pusha
mov
inc
xchg
jl
lods
sub
and
out
mov
mov
inc
out
pop
rol
push
cmovae
ljmp
mov
inc
mov
jge,pt
outsb
outsb
mov
pop
or
pop
data16
xchg
cmpsl
sbb
loope
add
inc
popa
je
inc
je
dec
or
in
in
sbb
clc
jmp
add
add
or
repnz
pop
bound
or
cmp
push
aaa
mov
inc
and
add
movsb
aam
sbb
fldl
fdivl
fmull
pusha
jbe
add
push
pop
clc
fstps
or
cmc
jno
std
push
jl
jp
shrl
mov
loop
dec
rol
ret
in
das
inc
bound
and
insb
pop
lock
arpl
inc
cmp
test
push
push
mov
xor
add
or
push
jb
sbb
cmp
icebp
jp
sbb
and
adc
movsl
xor
sub
add
hlt
sub
movsl
fs
or
pusha
dec
jmp
sahf
sbb
pop
lods
fcom
shrl
lahf
xor
xchg
pop
add
lahf
test
push
push
ficoms
cmp
popf
ret
or
push
pusha
int
push
mov
sarb
mov
into
sub
push
fcmovu
sahf
es
or
cmp
imul
pop
sub
xchg
ds
sub
mov
pop
cmp
pop
jp
mov
adc
mov
sub
sbb
or
pop
cmp
bound
cmpl
lods
int3
cmpsb
push
or
push
jne
sbbl
js
popa
jae
push
adcb
add
adc
and
imul
fidivrl
and
sarb
mov
test
or
sbb
pop
inc
cmp
lret
add
mov
sub
fs
pusha
mov
cmp
pop
adc
push
dec
or
or
jnp
sbb
sub
mov
add
or
jl
cmp
xorb
inc
mov
mov
xor
je
aaa
mov
push
loopne
gs
sub
adc
dec
jne
push
push
jmp
jle
test
add
mov
je
push
incl
ss
cs
addb
fs
sbb
and
fst
dec
sarl
jne
test
les
or
sbb
hlt
add
test
fimuls
adc
sbb
ss
sbb
sbb
add
jne
data16
incl
or
mull
fnstcw
jl
add
adcl
test
adc
sub
js
sbb
add
or
add
lods
xor
sub
mov
movb
movsl
cmpb
push
xchg
test
cmc
iret
mov
shrb
jp
sbbb
or
mov
add
adc
xor
out
je
dec
repz
shl
and
or
inc
sbb
cmp
jge
notl
shll
pop
cltd
sbb
sbb
dec
sbb
aaa
lret
arpl
loopne
ret
add
call
sub
push
mov
xchg
and
xor
sbbb
push
cmp
sbb
inc
nop
xchg
jmp
mov
adc
test
ffree
mov
and
cmp
shlb
push
push
mov
mov
push
push
mov
aam
push
lahf
xchg
add
outsb
dec
mov
mov
jmp
or
lret
cld
jo
inc
add
or
pop
add
push
sbb
pop
jmp
adc
enter
rcrl
addb
in
adc
and
pop
insb
pop
jg
dec
ret
push
xor
push
jmp
mov
jge
jne
xor
js
ljmp
cwtl
pop
mov
push
lea
test
sub
mov
dec
ret
pop
rorl
das
sub
jmp
adc
leave
mov
sysexit
data16
xchg
test
ljmp
inc
jmp
push
loopne
mov
stos
push
mov
jno
add
ret
faddl
adc
adc
adc
aad
lods
rclb
sbb
fs
repnz
mov
lea
inc
xor
push
fs
fwait
fs
lcall
jno
lret
fisubrl
shll
dec
jo
cmp
xchg
mov
loope
push
dec
dec
xor
jecxz
dec
jo
aam
pop
xor
jmp
pushf
ret
hlt
dec
inc
sbb
ret
les
or
sbb
push
cs
cmp
cmp
jge
adc
or
sbb
dec
rolb
push
xor
jbe
ret
push
cmc
push
shlb
pop
add
mov
lret
sarb
adc
jp
shr
add
add
test
cmpb
pop
fcmovb
jmp
shr
or
mov
jbe
test
push
rorb
xlat
bound
scas
push
lock
int3
aad
in
mov
mov
dec
sbb
sbbb
fildl
in
and
or
cmp
mov
clc
flds
push
idivl
inc
subb
inc
jl
ds
add
pusha
lock
lea
mov
shr
cmp
mov
sub
or
mov
add
push
jp
inc
sub
mov
adc
orb
add
and
cmp
adc
rorb
out
decb
dec
or
inc
jbe
rcr
imul
loope
push
pop
jg
es
fidivrs
cli
push
notb
or
shl
dec
jl
xchg
mov
rol
cmpsl
cs
test
add
incl
stos
imulb
loope
jo
or
test
test
ficoml
int
sbb
lret
je
dec
call
rolb
subl
sbb
xlat
cmp
xor
or
ficoml
fdiv
stc
out
add
lret
sub
negb
add
xor
movsb
cmp
cmp
test
push
cld
sub
jne
add
out
add
call
ss
jb
or
hlt
stos
xchg
xchg
dec
adc
inc
lret
mov
push
cli
adc
sbb
and
dec
pushf
fstl
aam
jle
cld
inc
sbb
addl
cmp
ds
push
push
mov
lret
mov
mov
je
cmp
mov
xchg
jl
cmpb
jl
xor
sbbb
outsb
cmp
fdivl
mov
xchg
adc
es
push
aad
rcll
popf
cli
mov
push
push
mov
push
push
fsubs
sbb
xor
fstps
sbb
jne
aam
pop
or
cmp
sub
mov
mov
and
adc
mov
cmp
jbe
dec
add
scas
ss
and
enter
test
dec
out
or
test
jne
hlt
lret
cmc
sbb
flds
and
shrl
repnz
add
je
shlb
sub
or
xor
loopne
mov
mov
or
jp
aad
arpl
aam
xchg
mov
adc
jne
outsl
or
and
xor
ljmp
jp
push
popa
hlt
aam
xchg
fs
push
pop
and
add
or
sub
pop
int3
add
fldcw
fsubr
imul
inc
out
or
test
neg
neg
sbb
sub
repz
inc
sbb
fnstenv
pop
aad
adcl
insb
insl
into
jl
push
inc
and
fsts
fcomi
sbb
nop
int3
gs
sbb
jmp
xchg
daa
pop
pop
pop
mov
stc
inc
jae
or
jae
lods
rorb
jge
push
ret
loope
shr
mov
adc
mov
pop
idiv
and
cld
je
jp
loop
push
mov
or
rol
push
cld
add
adc
mov
xor
jmp
pop
add
insb
add
adc
adc
inc
dec
dec
nop
ss
inc
lahf
push
aaa
xchg
cli
sbb
mov
push
sbb
and
cmp
jbe
jns
aas
bound
adc
sbb
movsl
push
xor
ss
sub
push
jp
fidivrs
inc
cmp
jo
fwait
dec
lret
cmpxchg
cmp
les
mov
adc
xor
ret
dec
test
jo
mov
mov
adc
adc
cs
fisubs
fsubl
out
and
dec
pushl
dec
sahf
lret
and
xor
sub
adcl
mov
adc
jne
cmp
testb
fildll
insl
std
bound
or
je
inc
mov
jg
clc
inc
mov
mov
scas
es
mov
je
lcall
mov
push
cmp
ja
add
cmp
adc
cmp
jne
jge
xor
adc
mov
enter
cmp
pop
jbe
inc
mov
pop
mov
pop
mov
or
rolb
lea
xorl
fbld
inc
or
sbb
or
sbb
adc
mov
ret
jmp
imul
je
mov
push
push
ss
loopnew
les
or
push
adc
and
pop
inc
pop
ja
sbb
add
imul
push
leave
notl
outsb
fsubl
cmpsl
xor
or
push
mov
hlt
fs
mov
cmpl
rolb
pop
add
add
outsb
sub
imul
int
sarb
sub
orl
test
cmp
xchg
push
xor
xor
mov
xchg
rcrb
sub
push
imul
cmp
test
adc
sub
push
inc
mov
mov
pop
xlat
sbb
xor
pop
sahf
testb
jg
mov
push
rcl
jns
out
rcl
aad
xlat
and
lahf
out
sti
fstpt
rorb
ror
nop
data16
js
inc
xor
inc
add
cmp
push
sbb
data16
adc
pusha
icebp
add
xchg
adc
and
adc
push
test
add
sub
push
pop
sub
push
jp
add
push
je
test
push
pop
jo
jmp
icebp
adc
loope
or
stos
das
or
mov
pusha
push
test
pop
popa
sbb
add
add
imul
xor
imul
or
lcall
sub
sbb
dec
lea
sar
or
push
roll
fadds
inc
sbb
sbb
inc
push
mov
mov
sub
test
adc
adc
mov
shlb
call
or
fcoml
mov
adc
sti
add
aad
ret
stos
pushf
rorb
mov
push
jp
mov
outsb
add
push
out
or
dec
or
leave
adc
push
or
test
hlt
pop
add
test
fcmovu
popa
roll
mov
lea
pop
incb
xor
sbb
mov
jae
xchg
ja
add
add
dec
movsb
and
test
jb
and
add
dec
lods
sarl
or
lea
add
popf
sub
pop
rol
inc
sbb
add
mov
sbb
loopne
or
mov
dec
xchg
mov
sub
or
dec
scas
sub
andl
or
ret
push
les
inc
add
push
addl
mov
jge
jl
dec
rcll
add
and
rorb
or
jle
jle
inc
fadds
call
shl
rolb
rolb
xor
or
and
add
jno
movsl
les
ret
push
lret
lcall
test
push
xchg
sbb
jo
dec
inc
lods
ss
shrl
shlb
shl
jmp
lret
dec
repnz
push
pop
adc
lock
imul
mul
test
inc
cli
testb
inc
xchg
repnz
pop
adc
addr16
sbb
and
loopne
notb
stos
xchg
lret
mov
add
xchg
test
test
adc
dec
data16
pop
xor
js
js
xor
mov
rolb
imul
idivb
dec
jae
inc
mov
nop
ret
sbb
pop
jnp
add
daa
pop
repnz
mov
sub
loop
out
int3
shll
mov
test
inc
cmp
or
andb
or
sbb
mov
push
dec
or
daa
pop
inc
shlb
fdivrs
aam
mov
jo
inc
inc
test
dec
ss
ret
push
cmp
les
lcall
pusha
add
dec
xor
pop
mov
mov
xchg
cmpsl
call
fcmovu
mov
xor
xor
dec
push
adc
inc
add
lods
rolb
inc
jl
and
xchg
push
inc
out
sbb
call
notb
negb
test
dec
gs
lock
out
or
add
enter
adc
or
lock
movsb
adc
cmp
jne
inc
pushf
xchg
movsb
jne
sub
push
in
subb
dec
add
mov
adc
push
enter
sub
pop
jbe
pop
sub
fildl
pop
movb
inc
mov
push
add
rol
or
nop
sbb
dec
adc
inc
fisttps
out
adc
cmp
or
xlat
test
pop
shr
push
hlt
cmp
mov
test
rorl
test
jne
sbb
adc
xor
fiadds
inc
imul
rcrl
loopne
mov
mov
loopne
fadds
pop
add
and
and
add
adc
rol
cltd
into
xchg
out
adc
pushf
lret
sbb
and
xchg
mov
add
or
mov
add
lahf
stos
xchg
or
dec
cs
add
or
ljmp
push
mov
clc
js
xchg
add
fiaddl
inc
dec
enter
test
push
shlb
add
pop
add
add
add
mov
add
in
into
or
mov
inc
lock
pop
in
rol
adc
dec
nop
dec
mov
dec
cmp
jge
pop
cmc
cmpsl
push
sub
cmpb
or
add
dec
cmp
jae
mov
add
dec
add
add
fadds
add
adc
shll
mov
lock
jmp
add
or
dec
xor
mov
adc
and
add
push
add
cwtl
jbe
add
or
or
test
and
ret
dec
out
push
xor
adc
add
push
mov
loop
lea
or
sub
and
adc
xchg
fiadds
iret
data16
cmp
and
add
or
fadds
aam
iret
dec
adc
fisubrs
out
dec
jg
mov
mov
push
ret
pop
xchg
adc
fs
jae
mov
ret
mov
mov
pop
and
cmp
xor
into
pusha
pop
pop
adc
inc
into
mov
mov
pop
xchg
add
jne
or
pop
mov
adc
sahf
in
imul
adc
lret
or
push
add
add
add
cmpl
push
or
add
mov
scas
movsl
and
pop
mov
cmc
xor
xor
add
out
pop
aaa
pop
and
and
and
pop
fabs
mov
mov
push
arpl
lret
and
insb
pop
pop
mov
push
sub
fsts
int
insl
cld
mov
cld
iret
enter
je
ja
or
push
mov
jg
rclb
dec
addr16
cmp
dec
popf
or
jge
adc
adc
pop
ret
out
orl
into
or
add
xor
mov
add
add
loopne
add
inc
xchg
pusha
mov
xor
in
lock
inc
jg
into
into
push
mov
out
xor
pop
sub
push
pop
nop
dec
xor
pop
cwtl
pop
mov
nop
int3
or
shlb
or
inc
mov
sub
push
cmp
pop
aad
or
lcall
xor
cs
shl
adc
add
and
enter
add
bound
sbb
je
test
mov
inc
cmp
lcall
sub
jmp
mov
lret
in
lret
push
xor
mov
push
and
or
scas
sub
dec
insl
add
or
arpl
jo
jae
cs
jl
fmul
cmp
adc
cmc
pusha
mov
cmp
sub
rol
or
loop
mov
sub
pop
sarb
ret
fisubrs
aaa
adc
sbb
xlat
jle
and
daa
pop
inc
sbbb
jge
gs
mov
ljmp
or
mov
pushf
stc
sbb
mov
cwtl
scas
dec
jecxz
sbbb
stos
sti
dec
rorb
aam
xlat
add
mov
adc
mov
jnp
orb
andb
jmp
loopne
mov
mov
pop
xchg
loopne
add
out
je
push
push
inc
jp
test
mov
cmp
lret
in
daa
loop
inc
inc
fsubrp
jmp
pop
sbb
xchg
lds
out
adc
or
fstps
ss
popa
loope
jmp
test
shll
add
icebp
shll
aam
fbstp
loopne
xor
call
repz
jo
sub
dec
rolb
pop
xchg
mov
imul
pusha
test
jo
scas
ret
shll
sbb
lcall
pushl
and
in
xchg
rcr
fldt
push
xor
mov
aam
pop
pop
and
jb
dec
xchg
fcoms
insl
sbb
pop
stos
pop
mov
jl
jge
mov
jp
adc
add
popa
mov
sub
je
mov
adc
loopne
fcoml
dec
mov
mov
dec
xchg
inc
sbb
test
sti
xor
jmp
jge
lea
jae
fildl
push
pop
push
imul
mov
lcall
sbb
int3
adc
add
inc
dec
leave
shll
jne
jne
push
enter
add
sbb
bound
push
add
jo
cs
fdivrl
rolb
jae
cmpb
cmp
and
xlat
xchg
or
mov
test
push
call
mov
mov
sub
popa
sar
sub
pop
imul
ret
mov
ss
push
or
mov
bound
push
inc
jo
push
mov
lods
movsb
out
jne
adc
jmp
ror
push
xchg
aaa
or
jbe
pop
fisubrl
push
sub
adc
js
push
or
test
xor
jo
sbb
cs
push
enter
dec
cmp
lret
cmp
mov
add
or
mov
or
push
cmp
aam
lret
enter
mov
and
sbb
jo
dec
shll
cmp
cwtl
outsl
add
jns
test
sbb
mov
jg
xor
fs
push
lock
adc
cmp
dec
cld
add
rol
inc
pop
pop
jl
je
lea
ss
int3
cli
mov
xchg
mov
jnp
mov
pop
nop
pop
divb
fsubs
mov
fildll
dec
dec
nop
adc
pop
jae
jmp
ss
cmp
or
js
pop
push
xor
mov
mov
addb
leave
inc
pusha
jo
scas
mov
shll
ds
clc
fcompl
or
in
add
and
sub
add
or
hlt
push
es
xor
push
xchg
sahf
ljmp
loopne
push
adc
lock
loop
inc
hlt
xor
ret
shrb
loopne
fwait
push
adc
add
adc
test
outsl
xor
testb
push
push
mov
mov
pop
cs
add
jl
dec
cmp
pop
sbb
scas
add
or
insl
loopne
mov
out
sahf
add
or
test
add
mov
outsl
adc
scas
adc
inc
push
ss
sub
sbbl
andl
arpl
push
cwtl
cmp
xchg
xorb
pop
inc
add
inc
mov
pop
rol
mov
mov
and
ret
sbb
inc
xchg
shlb
xor
loopne
clc
testb
jge
cvttps2pi
mov
test
popa
sbb
shll
add
and
rcr
fbstp
insb
rclb
pop
negb
jmp
fstps
push
xor
arpl
rorb
xchg
jmp
cmp
fdivs
scas
sbb
adc
test
and
add
cmpsb
pop
in
xchg
push
or
pop
pop
int
sti
sub
lds
add
cmpsb
xor
cmp
adc
cld
dec
in
loope
addr16
mov
cs
dec
or
push
ljmp
sbb
ret
fmull
nop
inc
int3
mov
fs
in
push
leave
test
gs
loopne
mov
adc
fsubrs
aad
jo
jnp
or
mov
push
in
pusha
pop
imul
lahf
xor
filds
testl
stc
insl
imul
push
push
or
rclb
int3
rolb
pop
fs
pushf
sub
add
inc
lock
and
or
xor
cmpsl
fcoms
jb
pop
loopne
cmp
xor
dec
rcll
enter
pop
in
mov
add
pop
cmc
inc
inc
xchg
sbb
fcomps
pop
add
dec
lahf
fsubrs
pop
test
xchg
sbb
in
pop
jne
push
aam
jb
mov
xor
lret
sbbb
xchg
jl
sbb
jne
cmp
es
inc
inc
adc
cmc
nop
lret
out
mov
cld
testl
jmp
loopne
rcrl
sub
lock
pop
xor
mov
push
cmp
insl
ljmp
lds
jae
add
es
and
fwait
enter
push
pusha
fwait
in
leave
dec
pop
or
mov
or
test
push
test
fcomps
ss
call
and
xor
les
test
aam
xchg
leave
loope
nop
in
pop
push
popa
fsubl
in
movups
aam
pushf
in
lods
movsl
add
sbb
fadds
lret
cmpsl
mov
fdivl
or
xor
in
or
jbe
push
scas
push
pop
hlt
add
pop
sbb
xchg
jne
ja
xlat
aaa
test
sti
mov
push
xor
lahf
inc
fidivl
movsl
test
jo
xchg
arpl
gs
jge
andb
ss
dec
or
aaa
or
xchg
fs
pushf
andb
dec
jno
xchg
mov
fcompl
insl
stos
cmp
and
fidivl
aam
mov
les
rclb
gs
sub
jbe
xor
dec
mov
xchg
gs
xor
cltd
fs
or
adc
cltd
fs
dec
and
fs
dec
xor
xchg
dec
es
cmp
inc
inc
es
fs
fs
insb
insb
add
lods
mov
sbb
add
pusha
add
add
sbb
adc
in
add
clc
hlt
jae
or
nop
inc
cld
leave
and
inc
clc
mov
xor
add
mov
mov
jg
mov
stc
addr16
add
mov
pop
mov
aam
movsl
jecxz
scas
cmpsb
push
pop
test
aam
aam
pop
test
xchg
fsubl
int3
aad
and
xchg
or
shlb
dec
push
nop
add
sbb
jmp
inc
movsb
call
in
fcomps
aam
in
mov
loop
sbb
adc
rcrb
adc
or
imul
int3
xchg
mov
push
xlat
mov
pop
push
leave
inc
mov
or
add
jmp
addb
icebp
add
ja
and
pop
push
mov
shll
jg
insl
adc
imul
push
sbb
lock
xchg
neg
lods
push
adc
xor
dec
pop
insb
imul
bound
fcom
mov
jmp
enter
pop
in
call
add
xchg
or
or
aam
mov
pop
sbb
dec
call
loopne
add
sahf
call
or
push
loop
adc
rcrl
or
inc
insl
adc
cwtl
and
lock
lret
push
xor
mov
bswap
popa
movl
dec
push
dec
pop
test
jns
pop
sbb
es
data16
xchg
push
imul
adc
xchg
sbb
add
xchg
cli
jno
pop
fmul
jnp
and
xorb
pop
fnstcw
push
or
jp
out
popf
pop
mov
scas
jmp
adc
cld
neg
sbb
push
sar
out
cwtl
jo
jno
xor
inc
jmp
or
cmp
sbb
in
dec
fcomp
aam
push
pushf
cwtl
pop
jno
xchg
and
or
xchg
jl
loope
jno
fmull
cmp
pushf
pushf
mov
mov
pushf
rol
int3
push
popf
pushf
rcl
xor
adc
repnz
or
xor
jae
mov
ja
in
ret
dec
ret
sbb
add
pop
adc
lret
pop
jae
xor
and
mov
push
popa
or
mov
jbe
xor
int
shrb
lock
mov
je
shll
pop
aas
pop
lahf
mov
xchg
jno
mov
and
and
dec
or
call
repnz
xor
gs
jne
mov
insl
int3
xor
push
pop
cmp
nopl
cmp
and
gs
jbe
push
sub
in
mov
in
fsubl
movnti
std
mov
add
fisttpll
sti
or
mov
fldl
fstps
out
inc
movsb
adc
dec
outsb
jmp
in
lods
mov
scas
dec
jo
fdiv
js
jecxz
push
jg
in
and
loopne
dec
xor
mov
pusha
or
push
fwait
sbb
inc
stc
gs
jbe
hlt
inc
fucomip
adc
pop
xchg
icebp
sub
div
adc
dec
cs
cltd
pusha
inc
add
cltd
jo
xor
mov
adc
inc
push
in
xchg
lahf
loope
sbb
mov
leave
adc
add
push
add
lcall
push
xor
mov
sbbb
mov
mov
pop
fsubs
cmp
add
lahf
push
pop
lock
stos
adc
push
dec
movsl
lds
jns
or
sbb
xchg
jg
inc
add
pop
xlat
sub
dec
mov
cmpsl
lock
ret
dec
push
enter
add
ret
pop
xchg
adc
in
jp
or
call
lock
dec
cs
in
mov
inc
js
jg
push
cmp
pop
movsb
pop
mov
and
add
repz
add
fmul
add
andb
adc
sbb
fisubl
nopl
adc
je
sbb
and
sbb
adc
sbb
dec
cmp
jnp
jnp
aam
mov
orl
subb
mov
jl
push
sbb
or
push
cmp
nop
or
or
cmp
nop
inc
or
or
xor
daa
mov
popa
lods
jge
jb
add
popf
cmpb
sub
mov
arpl
aam
loopne
inc
or
ja
mov
jle
xchg
cltd
shlb
xorl
jne
mov
or
fwait
mov
sub
pop
xor
mov
jle
sub
nop
mov
fcoml
and
dec
sbb
jg
add
leave
in
inc
cmpsb
loopne
add
mov
mov
insb
jno
cwtl
mov
movsb
xchg
lods
nop
decb
add
cmp
or
nop
mov
gs
and
pop
lock
sbb
sbbb
and
leave
add
cwtl
xchg
mov
subl
jg
push
or
jmp
in
dec
mov
sbb
rclb
mov
cmpl
icebp
and
nop
sub
movsl
mov
jns
nop
fcmovnb
movsl
imul
xchg
xchg
xchg
xchg
int3
enter
xchg
xchg
xchg
mov
xchg
xchg
xchg
xchg
cwtl
mov
sub
dec
outsl
movsb
push
roll
inc
mov
shl
nop
addb
or
test
shlb
xchg
es
adc
or
jo
fiaddl
and
xchg
scas
jae
push
mov
stos
xchg
dec
jae
insl
test
movsb
xchg
nop
xlat
lea
xor
lcall
movsb
aaa
test
push
pop
popf
pop
mov
mov
jo
daa
daa
shlb
xchg
mov
pop
dec
mov
shlb
shll
add
mov
jno
push
xchg
or
push
add
fadd
or
clc
adc
popa
adc
mov
in
pop
adcl
xchg
arpl
sbb
jg
xchg
outsl
mov
mov
cmp
insb
out
sbb
sbb
in
in
or
nop
call
sbb
and
std
jo
movsb
dec
inc
jl
in
add
jg
mov
xor
xor
bound
adc
js
push
push
dec
add
fsub
aam
dec
les
mov
insl
pextrw
mov
pop
imul
mov
or
sub
mov
xor
std
fsubr
les
mov
add
int
mov
xor
mov
inc
sahf
or
jne
sbb
in
sbb
and
add
ret
and
inc
adc
xor
std
xchg
enter
ret
jae
inc
sti
nop
in
outsl
movsl
or
sub
inc
daa
xlat
mov
dec
loope
call
pop
push
add
psllq
inc
shlb
iret
int3
inc
inc
inc
out
mov
pop
insb
mov
sbb
mov
pop
ret
int
mov
imul
and
lea
and
call
fdivs
sub
lds
fmuls
pop
test
test
mov
or
pop
sbb
push
leave
lock
mov
sub
aam
cmp
and
stos
jne
and
ss
mov
jne
adc
xor
push
fsubrs
adc
sbb
fdivrl
add
aaa
dec
je
adc
or
test
dec
dec
inc
nop
aas
rolb
pop
cwtl
nop
pop
loopne
test
pop
xchg
xor
lods
fcmovnu
fdivr
add
aam
call
in
adc
mov
in
push
pop
dec
sbb
adc
xor
mov
dec
into
enter
popl
or
ss
lgs
movsb
adc
test
fcoml
fsubl
in
fadd
leave
pop
push
add
in
int3
and
inc
call
jns
mov
pop
add
shll
cmp
push
pop
arpl
push
mov
mov
out
loopne
push
ret
es
add
gs
adc
push
movsb
nop
inc
pushf
adc
xor
mov
xchg
sub
push
adc
stos
pop
push
xchg
mov
pop
fwait
and
mov
add
cs
das
inc
insb
adc
outsl
adc
stos
add
jg
test
jae
push
add
mov
mov
aam
jae
sbb
inc
adc
and
aam
mov
and
fcoms
pop
xor
or
cmp
scas
mov
enter
adc
dec
inc
lock
mov
dec
push
ljmp
add
fcoml
in
test
inc
jb
repz
sbbb
lock
inc
cwtl
sbb
ljmp
add
test
xchg
mov
dec
adc
pop
xchg
fildl
xchg
mov
repz
leave
cmp
xor
add
nop
popa
inc
in
mov
movsl
and
cwtl
dec
pop
mov
and
pop
int3
arpl
psrlq
lcall
cmp
jb
cmp
mov
stos
xchg
pop
xor
xchg
addb
orl
stos
test
sbb
or
out
xlat
mov
push
imul
add
jb
cwtl
loopne
inc
stos
pop
xchg
cmpsl
mov
mov
leave
rcrb
pop
pop
ds
pushf
mov
add
push
or
add
rolb
into
in
enter
xchg
mov
leave
sbb
sub
nop
xchg
or
push
subb
mov
push
popf
in
out
les
jg
movsb
lods
insb
sbb
jl
pusha
jo
push
sbb
das
fs
adc
inc
add
pop
out
inc
xor
dec
inc
mov
in
fmuls
add
adc
jae,pn
mov
push
mov
pop
rorb
ret
shr
sahf
pop
push
push
xchg
xchg
icebp
lahf
or
das
xchg
jo
nopl
add
cwtl
enter
and
sub
or
sub
inc
sub
jle
fdivs
xchg
arpl
jg
sbb
inc
mov
imul
popa
lock
mov
and
jg
and
cs
enter
out
int3
int3
jno
mov
dec
fadds
mov
das
enter
loop
les
mov
or
pop
jne
aad
les
add
mov
fsub
inc
xor
popa
sbb
pusha
mov
pop
adc
mov
add
das
fmull
inc
mov
sbb
push
sub
movsl
int3
enter
sub
movsb
inc
stos
push
dec
pop
inc
orl
outsb
or
jo
cltd
pop
mov
sbb
popl
aam
lock
mov
sub
movsl
jbe
xchg
mov
xor
mov
fsubrs
fwait
xchg
les
cltd
dec
imul
les
adcl
mov
je
sbb
in
repnz
sub
adc
mov
insb
js
mov
or
mov
adc
inc
lcall
sbb
imul
movsb
movsb
sbb
aaa
arpl
and
outsl
ret
add
add
lods
mov
xchg
xor
cmpl
or
add
mov
add
enter
xor
xchg
sbb
and
loopne
iret
inc
sub
jb
negl
adc
andb
jl
and
cwtl
mov
cmp
or
mov
pop
cmpb
push
jecxz
sub
cmpsl
aas
cmpsb
sbb
movsl
adc
sbb
mov
sub
mov
andl
or
xor
or
arpl
test
mov
xchg
sbb
push
popa
in
pushf
aad
dec
aam
bound
ss
xor
adc
push
sbb
adc
sub
and
xor
divl
push
inc
adc
jno
add
pushf
movsb
lods
fwait
in
imul
push
andb
mov
and
jmp
xchg
dec
leave
inc
push
xchg
dec
fdivrs
adc
enter
incb
stos
call
adc
les
cmp
push
inc
add
push
sub
sbb
mov
mov
stos
lock
push
lea
outsl
add
and
add
enter
or
dec
enter
out
and
and
js
inc
mov
popf
pusha
fimuls
xor
push
lods
inc
imul
pop
mov
test
mov
xor
add
or
pop
test
leave
shrb
add
ja
mov
add
add
sub
test
or
out
inc
in
movsb
xor
pop
andl
jns
faddl
dec
push
in
lret
cmpb
leave
aaa
xchg
add
xchg
xlat
push
fdivrl
std
xchg
cmovnp
das
fisttpl
sti
or
or
sbb
sbb
popf
nop
add
out
ss
cmp
gs
sbb
adc
loope
inc
add
or
mov
lret
add
mov
xor
aas
mov
aaa
cld
adc
dec
lock
dec
add
call
push
adc
bound
mov
mov
rolb
sbb
jbe
xor
in
sub
fidivs
mov
dec
cmp
std
cwtl
mov
push
jmp
mov
nop
arpl
sbb
dec
lock
xor
pusha
jne
aam
fcmovne
leave
lds
pop
inc
pop
add
imul
loope
and
enter
lods
mov
lea
mov
xorb
stc
pop
pop
rorb
sbb
and
test
insb
test
addb
dec
add
add
xor
aam
movsl
mov
jne
adc
rclb
sub
rcrl
inc
mov
dec
fst
adcb
jne
mov
test
sbb
mov
adcb
nop
lds
push
adc
jo
pop
sub
mov
dec
insl
sub
pop
test
add
mov
inc
enter
in
roll
mov
sub
in
mov
test
lods
es
insb
mov
sbb
jg
mov
mov
or
mov
jmp
mov
inc
mov
adc
pushf
mov
dec
fwait
fs
jl
pop
cmpl
and
hlt
pop
push
leave
and
dec
pusha
push
dec
pop
fadds
xor
cltd
mov
imul
fcoms
or
shlb
push
daa
push
add
push
sub
add
adc
push
cmp
mov
push
nop
lret
mov
jo
sbb
test
fs
dec
mov
dec
es
sub
icebp
sbbb
xor
orb
inc
fdivrl
pusha
xlat
cltd
je
mov
jb
insb
jecxz
adc
adc
pop
or
xor
fmull
or
adc
mov
vpmacsww
add
scas
mov
sbb
mov
and
push
les
lret
mov
imul
cmp
dec
jb
mov
push
cmp
and
or
mov
dec
jg
dec
je
pop
pop
inc
jg
cld
addb
sub
xchg
cmpb
push
and
imul
xorl
push
jmp
mov
orb
shl
sbb
push
cwtl
cmc
enter
adc
fistl
loopne
fdivrs
cltd
int3
inc
lock
fcmovnb
aas
dec
lcall
mov
sbb
sub
mov
test
adcl
add
pop
dec
les
push
lds
std
mov
in
mov
je
adcl
adc
mov
js
sub
imul
and
adc
leave
dec
ret
fsubl
xlat
int3
pop
call
aas
mov
xor
cs
les
imul
mov
aaa
xchg
ret
aas
add
xchg
aas
cld
push
jmp
mov
xlat
push
mov
jae
adc
sbbl
xchg
pop
inc
pop
and
push
imul
das
jmp
adc
loopne
fcmovbe
dec
sahf
hlt
push
push
inc
xchg
sub
insl
pop
fstp
jno
hlt
jo
mov
out
or
nop
lret
les
fcom
cmp
mov
adc
lahf
enter
outsl
paddq
fisubl
insb
inc
lea
imul
inc
mov
fisubl
push
sti
insb
adc
cltd
or
sbb
jb
jo
cli
mov
sti
cld
cli
xor
and
scas
fs
cmp
and
add
and
hlt
add
adc
and
lods
inc
mov
jns
daa
pusha
sti
mov
xor
mov
inc
cmp
ficoml
xor
and
sub
or
mov
or
sub
push
dec
xor
inc
and
cli
call
or
dec
movsb
les
add
test
adc
mov
mov
bound
movsb
inc
ror
roll
stc
les
adcb
mov
and
das
decl
dec
faddl
dec
push
popa
mov
call
xorl
leave
push
inc
jae
mov
push
inc
inc
mov
push
adc
pop
jo
cmpsb
inc
sub
adc
enter
shlb
imul
lock
and
arpl
popw
mov
or
cmpsl
insl
jne
sub
cmpb
les
sti
aaa
imul
inc
ficompl
shrb
rcrb
dec
adc
cld
push
fwait
push
add
and
add
ffreep
in
jle
adc
add
jbe
out
shlb
and
std
push
in
xchg
jl
push
push
push
nop
filds
call
push
aaa
and
sti
adc
inc
andl
pushf
and
mov
and
push
sbb
test
hlt
lret
jp
add
add
inc
lcall
mov
mov
jno
repz
aaa
jmp
aam
jns
into
push
sbb
clc
ret
push
scas
xor
cmp
mov
adc
add
pushf
mov
add
shrl
mov
mov
shl
mov
cmp
and
jns
inc
push
push
push
inc
add
push
inc
add
push
das
in
shl
push
mov
in
ficoml
push
loopne
add
cmp
dec
mov
mov
add
fistpl
or
jnp
mov
add
scas
jns
cmp
add
sarb
nop
cmp
repz
mov
ljmp
inc
inc
inc
dec
dec
dec
dec
dec
dec
test
or
dec
dec
mov
push
dec
ficompl
pop
popa
bound
gs
imul
jo
jb
je
jbe
mov
jns
xor
xor
xor
ss
cmp
sub
sub
lcall
rcll
xchg
adc
push
or
cmp
rclb
cmpl
pop
mov
in
jb
iret
sarl
push
sti
fs
sti
push
jne
outsb
je
jb
outsl
arpl
fs
out
sbb
pusha
pop
in
in
push
dec
imul
push
jb
gs
xor
cs
insb
push
bound
and
pop
popa
sub
imul
clc
pop
jbe
cltd
mov
xor
movsbl
in
aad
incl
sub
add
outsl
sub
scas
push
inc
outsl
jb
js
je
jb
gs
cmp
push
sub
insl
add
arpl
cmpsb
add
cs
push
mov
gs
push
push
pop
jo
je
mov
popa
jb
mov
mov
imul
arpl
mov
insl
insl
cmp
dec
pop
rcrl
and
jns
add
das
das
adc
dec
push
inc
inc
gs
insl
loopne
in
into
and
dec
outsl
jbe
dec
arpl
out
push
pop
testb
je
inc
jne
jne
dec
jne
xchg
ffreep
pusha
push
mov
insb
dec
popa
jb
fchs
lret
bound
inc
insb
out
jae
adc
xchg
pushf
jae
cmp
ja
sahf
mov
jne
xor
lods
sbb
and
daa
push
scas
clc
sbb
dec
xor
jne
dec
js
push
jne
jae
cmp
ja
pop
dec
inc
mov
popa
das
jo
or
jb
inc
adc
xor
test
or
dec
imul
mov
or
or
sbb
mov
iret
dec
adc
daa
aad
dec
ljmp
sub
sub
cmp
push
and
adc
pop
xor
fldenv
jl
jle
add
arpl
mov
cmp
dec
and
push
jecxz
sbb
movl
in
pop
push
inc
insb
jae
cs
fs
mov
inc
out
adc
jo
mov
imul
and
dec
push
push
sbb
outsb
je
or
dec
dec
inc
sbb
insl
xchg
lcall
add
inc
outsb
dec
jg
push
push
jo
imul
insl
pop
inc
inc
mov
je
jo
xchg
sub
jnp
idivb
and
orl
mov
je
or
xorb
inc
popa
int3
mov
iret
and
daa
mov
jne
pop
out
fcmovb
in
xor
and
insl
push
xchg
inc
cs
xor
js
or
dec
rolb
andb
les
out
mov
add
xchg
and
push
rcr
push
or
imul
xor
pop
es
add
mov
je
add
dec
in
ds
leave
sbb
push
loopne
outsl
mov
push
push
or
andl
dec
sbbb
inc
and
das
arpl
cmp
arpl
dec
popa
sub
mov
sti
into
pop
xor
add
inc
xchg
insb
sbb
addl
or
or
push
lcall
mov
or
pop
xor
jo
cmpsl
cmp
push
push
fistps
dec
rcl
push
popf
and
xor
in
fs
xor
hlt
pop
cltd
and
or
add
ror
dec
aaa
ja
adc
insl
push
outsl
outsl
ss
bnd
fs
sub
inc
inc
xchg
in
or
sahf
push
mov
shl
add
das
mov
mov
cwtl
mov
imul
push
or
arpl
cmpsl
mov
cmp
fildll
aaa
xchg
in
jno
in
ljmp
imul
push
pop
scas
loopne
outsb
popa
pop
or
inc
sbb
rclb
add
push
leave
nop
inc
insl
imul
call
push
cmp
in
adc
pusha
xchg
cmp
jmp
push
and
pop
push
cmp
sub
jne
jae
scas
into
push
cmp
pushw
pusha
jo
aaa
addb
sub
call
rolb
data16
lret
inc
sub
pop
sti
mov
dec
or
jo
fstp
lods
pop
and
cmp
cwtl
ja
ds
pop
mov
out
inc
inc
and
dec
cmp
xor
ud0
loopne
iret
sub
jg
xchg
sub
rol
das
lret
jno
icebp
pusha
test
or
ret
movsl
add
xorl
jae
jae
push
loop
imul
or
into
in
aad
popa
dec
add
xor
mov
inc
jae
je
adc
mov
add
add
in
cmp
imul
out
imul
add
adc
add
mov
sti
push
add
add
add
and
push
pop
pop
scas
cmp
loop
add
ds
push
pop
hlt
and
or
pusha
xor
imul
js
or
sub
add
add
addb
add
sahf
mov
adc
ret
add
orb
daa
push
cmpb
push
and
into
in
lret
jb
int3
push
or
ja
mov
aas
sarl
sti
mov
pop
dec
rorb
jae
leave
jae
add
lea
leave
or
and
dec
mov
es
inc
pop
push
sub
xor
dec
pop
ret
cmp
add
or
pushf
jo
cs
pushf
jo
dec
pop
data16
jnp
or
xor
int3
pop
fisubrs
into
adc
dec
push
fsubs
add
stc
sub
in
and
adc
in
test
mov
add
or
add
mov
and
sub
sub
rorl
mov
add
add
sub
push
and
cmpsl
or
incl
adc
in
pusha
imul
add
inc
mov
mov
shr
cmp
inc
pop
and
loope
cmp
incl
mov
mov
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
mov
jmp
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
ret
inc
enter
int3
int
iret
rcl
rcl
aam
xlat
fcomp
fcmovu
loopne
loop
jmp
in
out
call
in
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
push
inc
push
sarb
movsb
add
incl
inc
adc
mov
jmp
fists
pop
int3
ficompl
movsb
inc
cs
jae
sbb
bound
dec
stos
inc
inc
popf
ss
popa
mov
repnz
outsl
mov
jne
daa
pop
lea
dec
mov
outsl
jmp
outsl
js
push
push
inc
push
mov
dec
sbb
sahf
insb
gs
aam
outsl
popf
mov
dec
mov
daa
add
insb
fcmovne
mov
in
dec
imul
mov
into
push
push
imul
inc
jb
rclb
fildl
daa
daa
pop
enter
inc
and
mov
pop
push
cmp
test
arpl
push
or
cmp
outsb
mov
push
mov
test
push
jbe
pop
pop
pusha
inc
jbe
push
jo
push
jnp
lahf
fs
push
mov
or
mov
clc
popl
and
jle
cmp
push
sub
and
andl
dec
lahf
and
stos
mov
outsb
xchg
jae
pop
in
push
jp
aas
cmp
lods
and
insb
call
push
push
mov
outsb
gs
mov
mov
pusha
movsl
xchg
mov
push
push
push
push
dec
testl
xor
mov
divb
cmp
bound
pop
or
jg
movsb
loope
mov
imul
bound
mov
fs
push
sbb
xor
jg
popa
jl
pusha
lds
lds
jns
pusha
push
or
jne
inc
pop
das
je
outsl
data16
cmc
fadds
daa
jg
negb
pop
pop
cmp
cmp
add
ds
sub
rorb
roll
es
shll
sub
sub
addr16
sub
cs
sub
push
cmp
push
stc
mov
cmp
ja
mov
pop
or
jb
sbb
push
jb
imul
jo
ss
lret
lock
push
lods
sbb
int3
or
add
es
jo
sub
cmp
daa
or
inc
add
clc
loopne
iret
repz
loopne
enter
iret
repz
lcall
cmpsl
stc
cmp
in
test
loopne
mov
xchg
push
nop
push
mov
cmp
xrelease
cmp
pusha
jmp
insb
push
adc
ret
and
fs
jnp
out
lret
jl,pn
in
pusha
lock
jnp
push
ficomps
push
push
sarb
enter
repz
push
inc
inc
cmp
repz
repz
sub
and
repz
and
add
fistps
sarb
out
cmp
clc
fiadds
mov
cwtl
jo
inc
inc
cmp
cld
loopne
cmp
repz
lcall
jo
or
inc
sub
cmpsl
pop
aam
aam
push
or
shlb
cli
repz
jns
push
xor
add
ljmp
cmpsl
pop
push
outsl
pop
cmpsb
bound
fs
scas
xchg
fstpt
sbb
je
mov
push
jg
lods
pcmpgtw
xor
pop
movsl
ret
sarb
inc
incl
dec
jae
xchg
fxch
push
insb
inc
mov
sbb
push
inc
dec
xor
inc
dec
dec
dec
push
enter
int3
xor
push
dec
inc
dec
add
dec
dec
inc
add
mov
adc
sub
adc
adc
inc
call
rclb
mov
movsb
std
outsl
adc
adc
outsb
mov
ds
in
stc
pop
jnp
adc
clc
lret
sbb
jb
pop
enter
jge
arpl
cmp
adc
dec
scas
jp
adc
in
sbb
xchg
fisubrs
and
cmp
dec
jmp
iret
imul
lret
add
inc
mov
mov
notb
lret
sub
fwait
ss
sbb
pop
mov
ds
xor
incb
int3
dec
dec
xor
dec
popf
pxor
xor
decl
lret
aaa
push
div
inc
sub
dec
xchg
cmp
cmpsb
das
xchg
pop
das
cli
mov
adc
xchg
icebp
mov
cld
or
cmp
jle
ud2
incl
mov
out
fcoml
or
scas
int
mov
pop
leave
push
pop
jge
loop
mov
xchg
dec
xchg
scas
lods
testb
bound
xor
cmpb
or
icebp
pop
or
and
pop
repnz
loopnew
std
and
es
lahf
or
xchg
sub
ds
xchg
insb
mov
jns
mov
dec
test
push
mov
jo
push
inc
inc
or
outsb
jbe
and
add
push
lock
pop
push
gs
fwait
ret
icebp
or
test
cmp
adcb
dec
push
dec
push
insl
dec
sub
mov
xor
dec
pop
or
sub
ja
ljmp
sbb
adc
inc
ds
dec
add
pop
sbb
sbb
imul
xor
or
dec
xor
or
jno
jb
lret
sbb
jbe
idivb
and
pop
push
xchg
add
add
ds
idiv
out
pop
adc
or
xor
adc
mov
fnsave
add
pop
pop
push
add
and
lods
push
pop
sbb
adc
adc
ljmp
push
and
and
xor
sbb
sbb
add
adc
jge
movsb
and
jnp
adc
or
dec
adc
dec
add
pop
and
jg
dec
pop
pop
xor
adc
adc
das
adc
adc
or
inc
rolb
mov
mov
dec
or
or
mov
pop
cld
dec
mov
add
sbb
pop
pop
adc
xor
or
lea
dec
cmp
and
pop
or
cmp
ja
sub
push
inc
xor
xor
iret
mov
sbb
xor
fisubrl
adc
sbb
mov
add
sbb
addl
or
lods
mov
mov
ds
outsb
loopne
movsl
xor
dec
xor
mov
add
mov
xor
push
mov
xor
pop
add
cmp
es
pop
push
gs
mov
mov
push
and
push
and
sbb
mov
sub
ss
or
cmp
inc
jnp
sub
push
push
push
and
push
divb
and
inc
mov
aas
mov
push
add
movsl
push
inc
jnp
cld
fistpl
inc
pop
adc
dec
nop
dec
cwtl
in
push
cmp
imul
nop
push
mov
dec
repz
push
rclb
jns
adc
push
push
xor
outsl
cmpsl
cmp
je
push
pusha
pop
mov
sahf
mov
scas
push
push
xor
and
mov
divl
hlt
or
pop
xor
and
or
xor
cmp
outsl
insl
mov
jo
lahf
popa
xchg
or
jmp
popa
adc
add
imul
bound
xor
and
jmp
into
push
jbe
push
and
cmp
repz
nop
mov
into
repz
push
push
xorb
pushw
xor
andb
lahf
idivl
mov
add
cmp
push
mov
outsb
cmp
inc
dec
push
pop
sub
pushf
sub
sbb
fwait
pusha
inc
pop
cmp
fistps
jp
adc
cmp
sbb
in
aad
or
pop
cmp
push
inc
jbe
fistpll
or
pop
push
aaa
aas
sbb
stos
mov
aaa
inc
push
dec
adc
nop
xor
adc
jmp
pop
fisttpll
cmp
adc
cmpsb
or
push
jmp
jb
dec
arpl
sbb
add
push
pop
add
adc
push
ss
and
or
inc
add
fildll
sub
pusha
sub
or
mov
or
sub
adc
sbb
in
out
js
sub
pop
xor
cmp
imul
es
ja
xor
ss
cld
or
push
inc
sbb
pop
pop
push
or
push
xchg
xchg
scas
jge
push
rcr
fs
cmp
outsb
scas
push
dec
pop
sub
mov
sbb
xor
or
push
xchg
pop
rolb
out
fistpl
sub
cmp
pop
xor
mov
mov
xor
or
sbb
das
in
and
in
push
cmp
daa
lock
cs
and
mov
cmp
mov
cltd
sub
xor
sub
or
push
dec
ss
and
pop
in
and
divl
xchg
ret
and
adc
and
push
jle
ds
push
mov
sbb
inc
sbb
adc
sbb
xor
mov
lcall
test
and
mov
dec
and
or
cmp
andl
xor
ja
sub
int3
imul
xor
daa
push
imul
xor
add
test
mov
cltd
into
scas
daa
xchg
popa
icebp
jp
or
dec
ret
sbb
pop
pop
sub
pop
xor
lock
jmp
xor
mov
dec
iret
pop
or
lret
movsb
lcall
inc
xchg
inc
xchg
push
push
inc
mov
sbb
cmpsl
pop
cli
sbbb
push
hlt
push
or
add
or
fistl
cmp
outsl
or
stos
add
aas
push
jg
insb
jne
xor
xchg
dec
jle
mov
sbb
or
cmpsl
addl
shrb
sarl
mov
cmp
cs
outsb
inc
push
int
inc
sbb
ljmp
loopne
xor
rcrb
push
inc
jnp
inc
js
cmp
sbb
bound
shlb
stos
sub
sub
mov
cmp
incb
or
jb
test
mov
and
add
dec
sub
sub
mov
dec
popa
push
je
adc
lods
xor
cmp
int
roll
imul
in
loopne
outsl
adc
js
inc
push
push
add
inc
sbb
fwait
adc
cli
nop
jl
push
aaa
icebp
push
sbb
push
push
push
xor
jp
out
std
xor
out
dec
cmp
lock
out
xor
inc
push
mov
aam
jns
popa
jne
push
sub
and
sub
adc
shl
fucomip
inc
inc
push
dec
das
and
pop
inc
cmp
add
loopne
pop
add
push
sbb
or
negb
inc
cmp
or
mov
pop
dec
xor
inc
aas
rcrb
push
lea
xorb
xor
pop
mov
mov
pop
push
push
sbb
inc
ret
xor
cmp
add
pop
daa
popl
insb
push
dec
les
loopne
lcall
cmp
shll
je
pop
les
das
mov
or
adc
and
xchg
and
xchg
mov
add
adc
jp
es
xchg
cmc
jg
rcrl
insb
outsl
jb
bound
fdivr
sbbl
je
or
fidivl
and
jae
popa
sbb
fcoms
das
mov
mov
das
and
jae
and
inc
jp
pop
test
dec
pop
jae
push
dec
je
lods
mov
jge
push
mov
mov
dec
loopne
inc
call
push
add
ret
loopne
mov
xor
popa
stos
and
call
cld
inc
jae
or
cmp
or
or
push
xor
push
sbb
or
dec
imul
sub
or
loopne,pt
and
inc
or
rcrl
push
adc
nop
ret
mov
lret
cwtl
mov
es
cmp
mov
jle
and
push
xor
dec
sbb
xor
stos
dec
fwait
push
mov
xchg
xor
adc
rorb
push
mov
add
daa
and
xorl
pop
fwait
add
cwtl
add
pusha
imul
pop
js
mov
mov
fists
std
fimull
sub
mov
pop
jge
or
mov
mov
test
dec
call
loope
fsubrl
dec
dec
sbb
mov
out
adc
add
add
jo
pop
andb
or
outsb
mov
sti
sbb
es
xor
aas
xor
add
cmp
clc
push
rcrl
and
pop
loope
mov
inc
dec
inc
sub
jecxz
ficoms
lock
outsl
mov
shl
cs
repz
stos
mov
xor
stc
push
mov
daa
loopne
push
pop
mov
sub
lahf
push
cltd
or
ljmp
cwtl
push
les
sar
jo
out
jle
pop
pop
cmp
inc
pop
pop
pop
xor
cmp
addr16
lret
mov
or
pop
sub
into
mov
mov
or
inc
addb
add
lahf
leave
add
scas
inc
mov
rcll
ss
js
or
jl
cmp
inc
cli
pop
pop
xchg
lcall
inc
jg
adc
xchg
and
adc
enter
push
loopne
inc
sub
adc
sbb
jbe
cmp
push
sbb
pop
es
push
movsl
test
add
inc
je
cmp
and
test
insb
push
pop
pop
cmpsl
push
mov
push
cmp
dec
mov
pop
fimull
sbb
inc
daa
das
jo
push
xchg
push
xor
je
bound
push
push
dec
rcll
push
push
pop
inc
xor
sbb
mov
sub
adc
xchg
push
and
lahf
xor
adc
int
sahf
inc
pop
bound
outsl
pop
popa
iret
jno
outsb
and
sbb
add
or
fstps
and
sbb
inc
lods
inc
sub
cwtl
push
xor
scas
pushf
pop
mov
dec
dec
negb
std
jecxz
and
inc
jbe,pn
jne
push
dec
xor
dec
nop
bound
sub
add
bound
insb
or
insl
ljmp
mov
inc
hlt
add
mov
xor
dec
dec
cmc
das
push
and
sub
dec
sbb
adc
das
adc
and
fcompl
push
imul
xor
sbb
xor
subb
sub
repnz
fmuls
and
adc
cmp
xchg
stos
mov
mov
outsb
cmpsb
inc
lcall
sbb
fdivrs
pop
inc
cmp
lods
pop
jge
sbb
cltd
insl
pop
divb
adc
xor
rclb
inc
or
adcl
cmp
mov
sbb
push
xchg
xor
pop
add
sbb
call
and
clc
dec
add
mov
dec
scas
pmaxub
mov
adc
mov
es
sbb
test
pop
xor
movsl
jo
add
movsl
or
adc
hlt
orl
loop
and
mov
fisubrl
insl
mov
inc
jo
push
jmp
test
mov
aad
orl
dec
or
in
in
stos
sub
lea
mov
inc
adc
repz
pop
lea
shrl
xorl
cwtl
xor
dec
push
mov
jno
adc
das
dec
xchg
inc
jb
fisubl
dec
daa
inc
and
pop
std
aas
roll
and
inc
pop
test
push
cld
push
push
cmp
pop
mov
inc
ja
or
aas
sub
sub
and
cmp
add
push
ret
mov
push
cwtl
ficompl
aaa
ret
insl
add
daa
dec
cmc
fnsave
pop
pop
dec
xchg
into
adc
xor
aas
sub
jno
gs
ds
sbb
xor
sbb
or
adc
pop
mov
in
sbb
pop
xor
pop
bound
push
push
and
int3
mov
mov
mov
cmp
or
jecxz
mov
and
or
imul
adc
insb
xor
icebp
mov
mov
xchg
add
aaa
mov
xor
es
sub
insb
gs
push
fiadds
ja
fs
push
push
pcmpgtw
outsl
jb
jp
push
push
outsl
inc
add
or
xchg
xor
jno
pusha
lea
xchg
sti
cmp
pop
test
cmp
pop
ss
hlt
inc
sub
jae
jecxz
out
xor
and
sbb
out
xor
sahf
movsw
out
rcll
push
dec
cltd
int
sarl
xchg
fldcw
add
pop
or
mov
adc
adc
sbb
and
sub
ss
int
xor
inc
mov
mov
mov
fisubs
mov
popa
xchg
sbb
fldcw
test
sub
add
or
pop
adc
pop
add
fwait
int
mov
pop
adc
push
push
dec
data16
insb
str
add
jecxz
int
inc
stc
das
incl
jg
out
insl
mov
pop
leave
push
inc
loopne
lret
ss
enter
push
jo
or
aad
fcomp
mov
insb
rcr
fdiv
fstp
es
popf
popf
ja
loopne
xchg
push
adc
push
sbb
mov
shl
push
test
fadds
inc
or
inc
pop
and
adc
add
push
dec
dec
push
pop
xor
pop
push
aaa
shrb
and
ds
adc
and
mov
add
adc
outsl
mov
shlb
movsl
enter
push
push
mov
inc
push
insl
ss
adc
xor
pusha
or
mov
sub
sub
nop
mov
xchg
mov
mov
ds
pop
sbb
lods
sub
jle
jo
push
idivb
dec
fsubs
sbb
stc
mov
dec
xchg
pop
shl
dec
push
pop
in
pusha
sbb
jg
movsl
mov
and
xor
aaa
inc
jb
pop
test
push
dec
cmp
daa
insb
and
inc
pop
mov
jp
dec
add
push
fadds
jb
out
daa
outsl
fsubrs
push
dec
imul
pop
jo
xchg
dec
dec
sahf
pusha
sub
inc
out
mov
and
sahf
xchg
xor
cmp
inc
out
adc
lock
loopne
rolb
or
mov
insb
out
fld
inc
js
cmp
push
pop
add
jo
orl
adc
dec
inc
dec
sbb
pushl
push
dec
fnstcw
cmp
xor
pushl
inc
sub
sub
xor
inc
xor
inc
push
xor
test
enter
add
loopne
mov
outsb
add
call
add
inc
cmp
das
js
pop
inc
fistpl
loopne
jne
insb
inc
arpl
dec
lods
cmpsb
inc
js
jbe
push
jb
jnp
xlat
push
jo
pop
bound
je
bound
imul
clc
add
sub
insb
adc
and
cmp
and
fbld
sbb
push
mov
ja
push
push
das
ss
das
mov
pop
pop
ds
out
dec
add
cmp
out
xchg
enter
sbb
or
xorl
daa
cmp
push
or
cld
mov
cli
push
mov
and
ds
pop
cmp
mov
or
jo
or
mov
push
mov
inc
inc
add
cmp
cmp
xor
xor
rorb
or
aam
addl
inc
orb
mov
mov
sbb
shrl
pop
scas
pop
in
das
pop
cli
sbb
or
push
rorl
add
xor
dec
dec
mov
leave
add
pop
outsb
inc
add
pop
fnstsw
jl
stc
insb
push
insl
pop
popf
cmp
pop
sub
test
push
in
ss
daa
jno
sub
sub
or
push
xor
scas
iret
fwait
fs
shll
lock
xchg
addr16
aaa
jns
insb
pop
cmp
fistps
mov
shll
lods
inc
cmp
fsubrl
jbe
pop
cs
pop
xorb
out
pop
in
push
cmc
inc
or
jbe
jae
fwait
in
roll
scas
test
or
fisttpl
in
mov
dec
pop
xor
out
adc
and
addr16
mov
data16
mov
cmpsb
mov
xchg
negl
movsb
cs
push
sub
cmp
cmpsl
stc
jl
mov
clc
mov
repz
sub
pop
nop
sub
in
lods
inc
fldt
sub
push
sahf
mov
sub
jl
pop
pop
push
test
out
aaa
adc
sbb
push
iret
leave
repz
xchg
lahf
push
lods
lret
int
inc
mov
pop
lds
pop
cs
out
repz
popa
xor
out
mov
clc
nop
push
push
sbb
shrl
clc
das
push
jnp
in
push
xor
push
push
stos
jnp
or
lcall
mov
push
dec
add
cltd
sub
out
mov
push
les
sbb
insl
pop
pushf
jge
mov
cmp
lahf
out
sahf
testl
xchg
push
or
lahf
out
sahf
dec
mov
adc
push
sahf
divl
push
push
adc
adc
int
push
hlt
inc
and
mov
sahf
xchg
xor
mov
rcrb
jnp
dec
ljmp
push
dec
ja
iret
repz
call
sahf
out
dec
jo
shr
sahf
data16
or
xor
push
sbbl
popf
sub
dec
jbe
call
or
dec
sbb
scas
sub
out
jbe
adc
stc
add
adc
loop
fisttps
adc
push
mov
xor
adc
mov
pop
pop
mov
pop
enter
add
idivb
rolb
mov
and
lahf
negb
pop
sbb
enter
adc
jg
cmp
iret
pusha
or
cmp
add
push
test
dec
ljmp
pop
fisubrs
adc
popa
cmpb
push
dec
ja
sarb
lds
inc
sbb
mov
push
jbe
je
addr16
push
cltd
push
cmp
jae
mov
push
dec
fisubl
push
add
jae
dec
cmp
mov
jae
dec
je,pn
push
mov
insl
pop
cmpsb
dec
add
loope
imul
aad
jg
pop
push
dec
pop
je
pop
imul
aaa
push
fbstp
rcr
or
das
push
rclb
outsb
push
inc
imul
mov
retw
frstor
inc
dec
or
dec
mov
nop
dec
js
ja
test
lret
and
mov
xchg
outsb
and
enter
dec
popa
jle
loope
into
push
ds
sahf
ds
adc
in
push
shlb
popa
insl
jo
incb
insb
je
fisttps
adc
addr16
jo
jae
es
outsl
mov
idivb
cmp
adc
and
sahf
mov
push
cmpsb
mov
mov
lcall
xor
xor
xor
xor
cmp
cmp
movsb
stc
int
push
xor
xor
cmp
push
add
push
sysexit
dec
jbe
pop
and
xlat
or
aas
xor
pop
add
out
or
sbb
add
xchg
inc
add
int3
mov
jl
jg
sub
lods
into
inc
je
xor
into
cli
cmp
or
pop
push
jmp
ret
xor
sbb
rcrb
pop
dec
add
jg
lods
pop
or
sbb
or
ja
inc
dec
dec
inc
inc
aas
dec
testb
sbbb
xor
fldenv
push
add
stos
test
fmuls
daa
add
out
mov
out
loop
mov
inc
sbb
xchg
add
loope
js
xor
mov
jecxz
xor
imul
dec
pop
pop
jl
cmp
loopne
iret
inc
dec
mov
jl
lahf
rcr
sub
cmp
popa
iret
dec
pop
push
and
out
inc
and
jecxz
lea
cs
mov
jecxz
push
lods
add
jp
shrl
cmp
sub
sbb
mov
mov
or
push
xor
or
or
pusha
mov
or
daa
mov
sub
adc
jnp
jecxz
lcall
mov
clc
adc
fldl
cmp
mov
movsl
aaa
movsl
xor
and
mov
gs
orl
or
daa
and
loopne
mov
mov
stos
movsl
cmpb
jg
adc
daa
lods
daa
jge
bound
dec
outsl
das
stos
lea
das
divl
adc
cmp
movsl
pop
ret
pop
inc
cmp
daa
unpcklps
test
daa
imul
sbb
pop
xchg
das
dec
pop
insl
adc
push
sub
imul
pop
sbb
cmp
or
xor
ja
in
add
imul
mov
insl
add
fimuls
fidivs
sbb
lods
mov
pop
int
push
and
adc
pop
add
lock
push
sub
sahf
lea
inc
add
sbb
std
sti
xor
pop
and
adc
mov
shll
aaa
pushf
mov
jnp
add
and
aaa
push
inc
dec
pop
inc
adc
inc
and
je
inc
jmp
adc
or
and
int3
inc
or
imul
js
push
mov
xor
mov
out
and
add
cmpsl
adc
fsubrl
dec
insb
xchg
leave
mov
outsb
mov
pop
xor
aad
dec
ss
add
js
dec
mov
aam
orb
shrb
xor
and
sub
sbb
es
or
loop
push
das
das
lods
jo
loopne
xchg
pop
daa
pop
pusha
dec
in
sbb
push
or
xorb
sarl
adc
or
es
rcr
and
das
xor
mov
jp
xor
adc
test
pop
xor
ja
fs
data16
arpl
jl
mov
sub
sbb
and
movsl
pop
or
test
inc
insb
ds
pop
in
sbb
and
call
push
testb
inc
cmp
xchg
add
xchg
sub
ret
sbb
sbbl
ret
and
or
icebp
adc
ret
ss
push
pop
add
or
cmp
iret
and
clc
imul
scas
sbb
aaa
out
adc
jo
cmc
repz
add
cmp
int3
aas
and
sarl
dec
adc
xor
lea
rolb
out
jmp
xchg
dec
or
daa
xor
mov
jo
and
fnstcw
pop
daa
sub
jns
xor
mov
add
inc
ja
cwtl
lret
mov
les
rorb
push
sub
push
adc
push
jnp
mov
out
xor
pop
or
xor
mov
adc
xchg
dec
fs
pushf
lock
aas
mov
lcall
sbb
loope
adc
call
data16
sbb
mov
sahf
shlb
or
inc
lret
fadds
jo
inc
gs
sbb
or
or
adc
or
imul
das
es
das
push
pop
xor
push
add
jmp
cmp
pop
pop
dec
aas
shll
sbb
arpl
add
push
adc
add
inc
out
test
adc
cmp
lods
jno
jbe
xor
imull
pusha
bound
rcll
push
jnp
cli
sbb
xchg
xor
pusha
or
and
adc
lods
arpl
add
out
pop
mov
push
arpl
daa
lock
or
shrb
and
or
sbb
je
int
push
bound
shrb
sbb
inc
and
sub
das
xchg
jb
jo
and
push
or
fs
xor
pop
sub
push
das
pop
dec
add
fsub
sbb
or
pop
cmp
adc
fistpll
push
mov
push
rorb
pop
or
pushl
cld
and
jo
add
push
cmp
pop
add
dec
sub
call
or
adc
sub
sbb
push
adc
sub
pop
and
or
inc
adc
sbb
cmp
aam
dec
sbb
and
jg
adc
enter
pop
xor
pushl
sub
push
mov
add
sbb
pop
adc
fcomip
out
mov
dec
push
push
inc
and
push
add
dec
pop
dec
ss
pop
cmp
sbb
and
pushl
sbb
adc
es
and
pop
inc
sbb
sbb
dec
pop
mov
cmp
and
and
shll
xchg
lock
rorb
dec
push
in
aam
and
cli
pop
push
pusha
cmpb
xor
inc
add
cmp
cmp
add
push
dec
subb
push
loop
arpl
outsl
push
push
ret
and
push
or
les
or
push
loopne
xor
cs
add
push
xor
faddp
dec
pop
dec
rclb
imul
adc
lea
push
push
dec
xor
outsl
inc
addb
movsl
fnstcw
or
mov
cwtl
pop
bound
add
shlb
inc
pop
cwtl
cmp
out
cs
imul
adc
push
fistpll
push
push
inc
push
dec
inc
dec
push
dec
sbb
xor
lidtl
add
inc
sub
dec
and
inc
aaa
jno
sti
shlb
ret
icebp
adc
pop
jmp
sbb
cwtl
stos
pop
fadds
pop
adcl
test
and
jge
pop
mov
pushl
fcompl
shrl
xchg
out
popf
rorl
dec
cmp
sub
sub
fsubrl
stc
jbe
push
ds
insl
xor
enter
jg
mov
inc
xchg
cmpsl
aad
arpl
push
sub
adc
or
cs
mov
ds
or
or
cs
ret
sub
xchg
mov
jmp
jo
dec
ret
insb
sbb
xchg
shll
cltd
test
push
push
shll
insb
aaa
push
dec
ja
daa
mov
mov
mov
sbb
dec
stos
fmuls
lret
rep
cs
lcall
arpl
test
add
mov
mov
movsb
mull
pushl
addr16
push
scas
addr16
cmp
dec
movsl
jg
push
push
mov
fwait
stos
flds
sbb
push
je
dec
ja
jbe
js
push
cld
pushl
pop
xor
popa
dec
xor
dec
jb
and
cmp
sub
popa
std
lcall
inc
arpl
inc
jge
bound
fs
daa
int3
jg
addr16
push
and
sub
and
xor
or
and
xor
insl
ss
or
pop
xor
inc
into
jg
and
loope
sub
or
mov
add
adc
je
dec
into
aaa
pushf
or
sub
int
push
cmp
sbb
xchg
push
orb
jbe
movsb
inc
das
das
aaa
jnp
pop
aaa
pop
ds
pop
daa
xor
push
jg
push
ja
add
sub
scas
icebp
out
sub
wrmsr
cmp
and
sub
push
aaa
push
xor
inc
add
lret
in
xor
xor
xor
push
inc
add
inc
push
insb
push
pop
inc
inc
xor
and
mov
popf
mov
inc
push
inc
cs
inc
jge
stc
imul
cmovb
pop
ss
cmpsl
ss
push
bound
sahf
and
or
test
loopne
mov
mov
xor
xlat
xchg
cmp
adc
imul
pusha
xor
imul
es
push
cmp
mov
ret
std
mov
dec
dec
push
jl
sbb
jle
lds
fsubrl
sbb
mov
pop
add
sbb
and
mov
outsb
sbb
push
out
pop
test
clc
xor
mov
sbb
push
popf
or
loopne
js
dec
popa
les
mov
inc
roll
sub
adc
in
loopne
int
loopne
or
xor
mov
cmpsl
add
je
jg
int3
xorb
inc
adc
rcll
pop
mov
xchg
sbb
mov
pushf
xor
and
int3
insl
or
sub
pop
lock
pop
mov
pusha
lock
adcl
sbb
pop
cmp
scas
out
xor
pop
pop
lret
xor
idivl
shll
jge
push
sbbb
pop
inc
and
mov
pop
jns
xchg
push
jne
add
das
ret
adc
xlat
movsb
lds
jbe
fmull
push
sbb
adc
iret
cmp
or
inc
xchg
pop
pop
in
pop
mov
jecxz
mov
fs
or
push
aam
pop
xor
icebp
adc
adc
out
push
outsl
rolb
nop
pop
sahf
and
xchg
inc
or
add
test
es
ss
push
popf
sub
adc
test
les
xor
or
in
in
dec
outsb
outsb
je
xor
js
addr16
mov
jae
popa
insl
gs
cmp
ret
adc
pusha
xor
out
add
aad
xchg
or
fistl
loop
es
pop
out
push
and
decb
loop
mov
push
push
popa
je
push
pushl
faddl
xchg
insl
notl
and
mov
xor
or
negb
push
adc
pop
or
pop
push
gs
xchg
add
pop
pop
adc
rclb
test
or
pusha
fadds
push
ds
inc
adc
push
insl
lea
add
aam
test
inc
int
fadds
test
pop
ds
mov
std
rcll
or
add
push
jae
and
fists
insb
insl
in
jne
and
imul
push
testb
dec
ds
ds
mov
fcomps
inc
cmp
shll
push
inc
adc
js
insb
pop
sub
lahf
lahf
and
shl
add
and
push
xor
inc
and
mov
popa
das
rorb
stos
dec
or
ja
jb
adc
pop
sti
pop
mov
shrb
mov
push
movsl
push
outsl
sbb
and
xchg
icebp
inc
mov
ss
sbb
or
test
push
add
add
pop
or
rclb
adc
push
adc
jbe
out
call
push
pop
or
bound
daa
cli
push
aas
mov
hlt
xchg
jo
pop
sbb
or
xchg
loope
adc
cs
fsubs
xor
push
sub
incb
pop
inc
bsr
icebp
fidivl
pop
cmp
cmp
cmp
aas
sbb
das
scas
dec
sbb
ds
cmc
or
sbb
pop
dec
popa
mov
scas
inc
pop
adc
ja
or
ljmp
and
test
xor
jnp,pt
and
sub
dec
push
xlat
sub
push
inc
sahf
push
push
adc
mov
cmp
inc
pop
xchg
cmp
inc
xor
test
xor
adc
scas
pop
movsb
add
mov
sahf
movhps
push
imul
or
push
out
jmp
add
pop
ja
imul
gs
add
pop
pop
dec
jb
mov
lea
pop
aas
add
es
pop
pop
lods
xorb
pop
adc
inc
lcall
sbb
insb
jnp
pop
dec
pop
movsl
lcall
rep
sub
cs
imul
push
cmpsl
rcll
jecxz
inc
test
sub
inc
cs
std
xor
cmpsb
pop
mov
pop
inc
mov
inc
add
push
pop
inc
dec
and
les
pop
aas
inc
add
sub
inc
dec
fistpl
lock
or
inc
and
inc
add
popa
ficomps
or
add
cmp
loopne
and
sub
push
aaa
adcl
gs
outsl
add
fs
fstpl
inc
enter
jae
push
popa
mov
adc
dec
outsl
dec
xchg
cmp
jbe
xor
inc
inc
cmpsb
punpckhwd
mov
outsb
push
je
scas
mov
sub
pop
add
pop
shrb
sahf
addr16
call
pop
push
dec
inc
dec
inc
push
pop
sub
jb
xchg
gs
xor
inc
movsl
loopne
pop
adc
fwait
pop
dec
jo
loopne
dec
push
dec
jb
push
and
mov
inc
aas
dec
pop
icebp
and
nop
add
pop
scas
lcall
loop
lahf
sub
jle
call
dec
add
mov
mov
int
movsb
mov
xchg
pop
xorl
jns
jb
jnp
inc
xlat
push
adc
and
data16
addl
shlb
inc
loopne
xchg
push
in
sbb
gs
pop
addr16
neg
data16
push
iret
fsubs
test
fsubrp
cs
ds
repz
mov
push
xor
nop
dec
icebp
insl
ja
mov
add
cmp
dec
outsb
clc
sbb
push
sbb
dec
or
fiaddl
ljmp
rolb
mov
pop
cmp
xchg
pop
push
dec
push
out
dec
pop
pop
rclb
add
or
out
dec
cmc
dec
push
dec
xchg
pop
or
jne
add
add
ret
dec
lahf
andb
inc
adc
add
lret
inc
loope
sub
fsubs
daa
dec
cwtl
mov
nop
add
inc
adc
aam
and
out
push
dec
mov
cmpsl
clc
adc
in
lcall
adc
fisubrl
lods
addb
lods
or
and
add
outsl
insl
xor
or
push
imul
jg
xorl
lds
daa
outsl
lea
push
and
dec
mov
push
in
jne
or
jo
ret
pop
lods
mov
push
push
push
das
xor
xor
je
sub
dec
and
or
sub
pop
sbb
loop
fisubrs
inc
mov
add
sbb
fsts
std
outsl
insl
pop
xor
and
mov
das
push
mov
dec
dec
dec
inc
mov
jo
mov
outsb
or
std
cli
rcrb
andb
rclb
cmp
or
insl
xlat
inc
dec
jnp
push
sub
push
ja
xchg
mov
sti
ds
sbb
loop
mov
leave
sbb
dec
dec
mov
orb
dec
inc
xadd
cmc
inc
mov
cmp
push
sbb
cmp
lock
adc
cmpb
aas
in
mov
adc
jo
maxps
dec
add
shll
adc
rolb
leave
xor
xchg
xor
aaa
imul
lods
ds
sbb
fbld
jae
stc
addr16
movsb
fsubl
add
sbb
fsubrp
push
clc
xchg
adc
movsb
add
or
lods
outsl
ror
xor
adc
lahf
add
ss
lods
push
daa
test
jo
sub
outsl
sbbb
xchg
nop
outsl
xor
outsl
pop
mov
inc
add
aam
jg
jl
mov
dec
outsl
mov
dec
scas
fs
inc
inc
scas
in
scas
cmp
dec
scas
in
sub
jecxz
scas
in
add
popa
test
jns
data16
xorb
mov
xchg
js
out
outsb
repz
ss
dec
movsb
ds
repz
mov
cmp
imul
pop
push
inc
fidivrs
stos
cmp
push
mov
fucom
jns
inc
in
cmp
push
mov
repz
cwtl
mov
dec
pop
dec
jae
cmp
or
enter
push
es
rcrl
or
out
dec
xchg
dec
jnp
pop
inc
clc
dec
push
adc
add
movsb
fmuls
add
mov
sbb
scas
movsb
stc
sub
add
mov
mov
push
jl
add
inc
sub
idivb
inc
mov
insl
add
sub
ja
mov
push
pop
mov
inc
mov
add
in
xchg
mov
dec
inc
lock
loopne
mov
das
or
shll
push
and
dec
outsl
add
mov
filds
or
in
inc
inc
js
pop
in
sub
js
jbe
xchg
cmp
cmp
cmp
dec
add
jb
dec
adc
adc
pop
cmp
cmp
add
push
outsl
out
mov
xor
daa
int
cmp
cmp
xor
pop
jb
int3
fcoml
xchg
popa
sub
in
pop
scas
add
mov
outsl
out
sub
add
xor
scas
enter
es
cmp
enter
sbb
sub
adc
or
push
call
mov
sarb
repz
subb
cmp
jns
fwait
mov
push
movsb
and
inc
lahf
mov
imul
jg
mov
and
out
inc
mov
shlb
add
dec
xchg
sub
fwait
nop
pop
xor
xor
inc
push
push
xor
add
jbe
ret
fbld
outsl
and
adc
nop
or
and
adc
aas
push
roll
fsubs
or
out
sbb
sbb
daa
nop
loopne
leave
add
inc
xlat
or
cmpsl
adc
push
aaa
inc
jns
add
int3
inc
xchg
in
or
fsubrl
in
add
push
repnz
dec
xor
pop
daa
push
push
inc
outsl
xchg
push
pusha
inc
loopne
inc
jg
push
test
xchg
cmpsb
gs
mov
dec
mov
pop
fimuls
popa
pop
sbb
sbb
int3
test
jbe
arpl
test
or
cmpl
dec
inc
outsl
push
push
outsl
push
mov
cmp
xchg
pop
cwtl
aaa
mov
testl
push
jl
push
faddl
inc
sarb
out
cmpsl
mov
mov
ficoml
je
push
jmp
dec
mov
adc
push
inc
fs
lahf
scas
xchg
dec
xlat
or
inc
fisubrl
shrb
mov
or
xchg
xchg
sub
or
inc
mov
adc
and
and
push
pop
xor
mov
testl
dec
fdivs
add
sbb
and
inc
scas
roll
pop
inc
aaa
pusha
pop
leave
mov
add
xchg
and
sub
add
shlb
xchg
and
call
inc
dec
test
mov
pop
and
add
out
jne
cld
jg
in
xchg
mov
mov
sahf
test
jb
insl
fdivrs
addr16
enter
pushf
lods
mov
adcb
sub
test
incl
push
js
push
and
das
outsl
dec
ficoms
or
fwait
inc
aad
pop
adc
pop
clc
inc
ds
addb
mov
xchg
inc
sub
add
fidivs
or
xchg
sbb
call
cmpsl
add
push
xor
xlat
add
jo
sahf
iret
mov
aad
daa
dec
out
movsb
or
pusha
and
idivl
rorb
mov
sub
push
int
jns
fmull
dec
xor
dec
movsb
jp
repz
xor
and
addl
mov
mov
cltd
jmp
pop
or
adc
or
dec
enter
jl
mov
and
mov
aaa
pop
or
fistpll
in
clc
mov
mov
xchg
aaa
and
add
dec
lahf
js
dec
xchg
popa
orl
add
mov
out
add
sbb
popl
movsl
sbb
dec
lahf
test
andb
or
dec
enter
inc
and
daa
in
scas
in
add
es
sub
dec
bsf
jns
lock
cld
outsb
enter
fidivl
in
add
addr16
mov
xchg
add
mov
daa
orl
pop
sub
inc
dec
iret
mov
fnstcw
push
fs
mov
or
das
nop
jbe
xor
mov
mov
int3
outsl
movsb
adc
aaa
dec
outsb
hlt
dec
data16
mov
xchg
dec
xlat
data16
stos
add
pop
add
cltd
fsubs
push
repnz
push
addr16
sbb
xor
pop
mov
pop
mov
push
xor
repz
adc
add
pushl
dec
lahf
out
sahf
push
lods
enter
cmp
repz
mov
cmpsl
stc
add
inc
pop
jg
fdivrp
cmp
lods
iret
repnz
cmp
repz
adc
jp
jl
cmpsl
stc
push
dec
popa
mov
daa
dec
repz
rcll
mov
sahf
out
push
cmp
cmpsl
stc
cmp
or
xor
push
in
repz
sbb
jl
out
lahf
out
lcall
push
ds
repz
pop
xchg
cmp
jbe
mov
out
lcall
pop
ds
repz
lcall
cmp
jle
test
idivl
sub
push
jne
cmp
out
push
pop
test
jl
cmpsl
xor
aaa
repz
pop
lahf
sbb
jns
dec
mov
mov
iret
mov
cs
enter
cmp
out
nop
rcll
gs
repnz
mov
mov
addr16
push
repz
out
ds
repz
imul
xor
out
fcoms
imul
xor
iret
jmp
test
repz
out
outsb
mov
sarl
adc
int3
cmp
pop
jle
jb
call
or
lds
je
cmpsl
stc
cmp
insb
jne
sti
push
jbe
jl
jns
xchg
mov
push
jle
iret
xchg
shrl
bnd
jns
iret
cmp
mov
jnp
loopne
cmp
repz
repnz
xor
cmpsl
ret
jle
fsubp
jns
out
jg
js
cld
cmp
inc
xorb
adcl
test
orl
xor
fcoml
xchg
jl
cmpsl
jb
shlb
xchg
jns
out
mov
int3
out
mov
mov
push
xchg
cmp
out
mov
dec
js
lahf
out
movl
xchg
lcall
xchg
lea
jns
dec
xchg
pushf
jmp
repz
fwait
mov
repz
adc
outsl
mov
stc
sbb
sahf
jns
iret
shll
dec
lahf
nop
cmp
repz
mov
mov
pop
push
movsl
dec
cmpsb
mov
push
mov
jl
jo
push
and
jl
int
std
stos
in
add
or
sbb
mov
call
ja
das
push
call
mov
outsb
daa
frstor
mov
leave
in
and
mov
testl
daa
sub
inc
repnz
ja
and
pop
mov
sahf
add
jnp
rcrb
pop
paddq
fsubr
inc
aas
inc
es
pop
out
rcr
and
int3
repz
in
inc
fwait
push
repz
ret
push
clc
imul
ret
test
mov
scas
or
aaa
aas
or
fwait
cmp
scas
inc
pop
enter
or
pop
inc
mov
int
fisubrl
or
das
push
pop
icebp
or
outsl
push
and
out
orb
insb
bound
int3
jg
push
or
mov
loopne
fsubs
dec
ret
and
into
push
fbld
push
insb
jnp
popf
xorb
cmpb
push
sbbb
aas
pop
jae
popf
pop
lods
mov
enter
iret
shrb
xchg
mov
out
ss
mov
add
sarb
enter
mov
ljmp
or
cmp
sti
lret
push
stos
testl
cs
inc
lcall
mov
getsec
ja
cmc
insb
pop
test
xchg
push
daa
or
mov
aas
jo
mov
into
dec
fldt
in
call
rolb
cmp
and
pusha
push
push
cld
aaa
pop
cmp
pushf
arpl
mov
nop
add
pop
repz
std
mov
mov
and
aas
lods
and
pop
enter
and
int3
and
mov
inc
pop
xchg
iret
gs
jb
popf
dec
inc
xor
rolb
push
inc
mov
pop
pop
loopne
nop
or
or
in
clc
inc
inc
jb
or
das
adc
inc
cmp
push
mov
mov
dec
leave
xchg
xchg
sub
dec
pop
scas
dec
cmpsb
in
jae
xchg
imul
subb
outsb
loop
leave
and
out
and
inc
or
orb
xor
sbb
jg
and
pop
push
pop
or
ja
cmp
pop
xor
mov
out
push
add
dec
xchg
jb
cmp
insb
je
pop
jb
jl
in
xchg
push
jo
sub
dec
push
push
lahf
xor
fs
adc
fisttpll
push
mov
sub
mov
repnz
int3
push
adc
cmp
pop
add
and
or
addr16
pop
jb
push
rcrl
mov
pop
mov
or
test
in
inc
cmpl
pop
nop
dec
pop
xor
pop
imul
outsb
daa
lcall
and
cmp
inc
pop
inc
add
test
dec
and
xchg
pop
mov
xchg
add
in
in
mov
dec
nop
mov
pop
and
push
or
pop
mov
cmp
out
and
dec
pop
push
add
out
sahf
add
add
lahf
out
pop
xchg
or
and
or
mov
and
daa
inc
cmp
test
dec
jl,pn
std
lds
dec
out
push
in
xchg
pusha
sbb
lds
dec
fs
mov
mov
xor
xchg
xchg
xchg
xchg
popf
movsl
lods
cmpsb
add
iret
repz
rolb
jb
jb
out
notb
push
dec
push
dec
int3
and
and
dec
cmp
leave
leave
enter
dec
push
pop
jne
and
popa
jl
test
in
jbe
cmpsl
mov
xchg
setl
cmp
lods
mov
je
push
or
xchg
out
sar
mov
cmp
flds
dec
cmovg
xlat
mov
cltd
xchg
add
and
bound
pushf
out
cmp
push
sub
iret
fwait
push
mov
mov
pop
push
bound
cwtl
dec
cmp
cmp
outsb
cmpsl
call
and
add
mov
inc
adc
pop
movsb
arpl
mov
and
nop
arpl
push
in
and
imul
push
sbb
adc
jp
out
rcrb
enter
fs
fs
iret
inc
mov
push
scas
push
dec
jb
inc
dec
mov
mov
jb
dec
in
xchg
hlt
cld
nop
jl
js
push
aas
add
fs
jb
dec
xchg
inc
gs
pusha
cmp
push
daa
push
out
push
or
xchg
xchg
mov
push
jns
jns
js
push
test
jns
push
mov
push
out
sahf
ja
push
or
or
cmp
sarl
or
or
repz
and
sub
iret
cmp
inc
adc
cmp
repz
adc
adc
repz
test
xchg
sbb
push
iret
mov
sbb
loopne
xlat
xchg
dec
jb
push
add
cltd
dec
pop
jb
or
je
xlat
xchg
add
popa
lret
popl
daa
pusha
out
into
in
pop
jbe
add
jo
cmp
xor
cmp
ja
and
int3
ljmp
add
cmp
jl
xchg
add
push
mov
inc
sbb
adc
add
dec
and
push
leave
dec
jo
aas
push
pop
ja
xchg
pushf
bound
push
cmp
xchg
lea
add
add
daa
xchg
xchg
pop
sarl
imul
imul
inc
insb
test
scas
and
xor
xchg
push
jb
add
dec
push
or
adc
ja
test
leave
dec
dec
push
push
and
xchg
lahf
jl
loopne
push
and
clc
das
pop
int3
mov
push
mov
lahf
fildl
test
push
add
and
dec
and
xor
in
pop
pop
mov
leave
out
je
pop
push
iret
mov
das
mov
xchg
int3
imul
xlat
ficoms
xchg
testb
iret
add
leave
xchg
iret
enter
adc
inc
insb
ss
adc
push
cmpsl
push
push
es
xchg
adc
in
cs
push
ljmp
push
mov
jl
or
jmp
stc
push
mov
insl
insb
dec
push
jo
es
adcl
insl
ret
das
xchg
dec
cs
es
stos
pop
leave
and
addr16
ja
dec
dec
jb
pop
add
xchg
mov
cmp
xchg
push
jb
pop
dec
je
push
rcrl
outsb
mov
leave
and
xchg
cmp
daa
cs
ja
call
push
pop
xchg
and
je
ss
xchg
pop
jl
push
mov
sbbb
mov
xchg
xchg
lret
outsl
outsl
and
inc
cld
outsl
enter
in
outsl
or
and
repnz
jo
pop
pop
pop
iret
in
repnz
jno
jl
add
and
scas
rclb
fcoms
test
pop
pushl
xchg
dec
leave
add
cmpsl
jno
dec
push
and
jno
pop
in
mov
cwtl
pop
daa
mov
mov
add
ret
mov
outsl
lret
pop
rcrl
pop
mov
pop
jmp
repz
sti
pop
mov
pop
or
sbb
mov
pop
xor
xchg
outsb
mov
pop
pi2fd
or
xchg
xchg
xchg
xchg
or
or
xchg
xchg
xchg
xchg
push
add
xchg
xchg
add
add
jbe
dec
sahf
and
outsb
addr16
in
mov
in
xchg
pushl
sub
les
leave
and
xor
jb
pop
inc
and
add
pop
leave
fcoms
addr16
fs
ficoms
mov
pop
daa
movsb
pop
lods
aas
mov
daa
iret
mov
int3
pop
repnz
cmp
aam
or
or
or
inc
call
push
xor
adcb
pop
xlat
daa
pop
das
das
outsb
pop
insl
xchg
pop
lock
push
add
jne
add
and
add
imul
fstpl
seta
xchg
mov
scas
or
mov
cmp
das
mov
cmovle
add
cmp
jmp
insb
adc
aas
lea
shlb
aas
mov
xor
or
push
jbe
adc
pop
or
popf
out
daa
and
cli
fmulp
xchg
aaa
das
add
pop
adc
add
sub
cmp
inc
or
pop
in
inc
repnz
or
pop
out
leave
leave
leave
jg
xchg
xchg
cmp
rcr
jo
cmp
jmp
pmaxub
leave
stc
add
or
pop
outsb
adc
dec
and
xor
pusha
xchg
and
dec
pusha
push
pusha
pop
pusha
daa
iret
repz
add
xchg
cmp
mov
jb
jb
ret
into
ftst
ljmp
cli
add
pushf
pop
adc
push
or
or
sahf
out
xor
or
xchg
cmp
psubb
sahf
add
pop
jb
ror
js
mov
sub
bound
fldl
pop
inc
cmovns
push
repnz
iret
push
pop
popa
or
lock
jno
jns
bound
fcoml
adc
push
add
inc
repnz
outsl
clc
xchg
and
jp
arpl
jb
pop
insl
mov
jp
jb
inc
andb
nop
into
icebp
jbe
cwtl
mov
mov
mov
inc
inc
mov
xlat
and
pushf
push
ljmp
fs
cmp
xchg
cmp
iret
add
jb
mov
ja
jb
inc
repnz
jnp
or
inc
test
jl
xchg
mov
ret
gs
cmp
gs
lods
in
xchg
push
mov
push
outsl
loopne
mov
lock
mov
jns
out
xchg
jae
cmp
cmp
enter
shll
gs
ds
sbb
sub
pushf
popf
or
and
data16
xchg
and
inc
dec
lea
jb
data16
jle
xor
loopne
or
xchg
test
daa
daa
push
test
daa
daa
daa
aad
jmp
xchg
add
or
xor
repz
xchg
jge
data16
add
mov
fadds
xor
cmpsb
scas
movzbl
pop
and
add
loope
mov
pop
fwait
add
insb
xchg
enter
push
push
add
cmp
push
cs
add
arpl
pushl
stc
fsubrl
fidivl
sbb
repnz
xlat
push
jns
dec
jg
imul
jmp
add
jg
fsubp
jno
test
ror
mov
xchg
in
aad
or
movsb
fwait
cmp
out
add
ltr
imulb
imul
fwait
das
push
push
or
push
ud2
pop
sahf
cmp
push
or
cs
iret
cmp
dec
sbbb
push
leave
jae
cmp
jb
in
daa
daa
pop
xchg
popf
movsl
mov
mov
and
in
xchg
cmp
repz
repnz
nop
ja
imul
cmp
aas
out
xchg
insl
jne
outsb
push
adc
ljmp
fisttpll
xadd
add
out
jl
push
call
imul
pop
mov
or
insb
in
in
jg
insb
adc
sbb
in
in
and
sub
xor
cmp
in
in
inc
insb
dec
insb
push
insb
pop
insb
jne
in
fs
insb
insb
je
ud2
cmp
cmp
pop
cmp
cmp
push
add
cmp
add
jl
test
out
sbb
sahf
out
push
movsb
pop
lods
pushf
pushf
cmp
mov
mov
repz
and
sbb
push
fsubrl
adc
jb
ljmp
sbb
loopnew
je
cmp
inc
pop
rcrb
pop
insl
add
lar
xlat
or
mov
insl
insl
xchg
iret
in
in
movswl
pushf
pop
and
clc
add
loope
inc
or
adc
push
outsb
xorb
out
sub
cld
js
xor
or
or
push
out
jmp
punpcklbw
add
sahf
adc
outsb
xchg
mov
mov
pop
leave
jae
mov
aam
jb
daa
daa
call
outsb
cmp
outsl
adc
add
inc
pop
jle
outsl
or
xchg
jo
aaa
push
pop
das
imul
push
add
jns
stc
sub
cmp
fwait
lret
dec
push
pop
or
push
and
xchg
mov
shrb
jno
xchg
xchg
outsl
outsl
jo
xchg
pop
leave
or
cmp
jns
xchg
jo
add
jo
xchg
xchg
jo
and
mov
pop
or
xchg
xchg
pop
mov
idiv
xchg
pop
aam
pop
jno
pop
mov
pop
mov
mov
push
xor
or
push
leave
leave
jae
mov
shrb
and
mov
dec
and
pusha
mov
xchg
movsb
jno
lfs
jns
out
mov
out
cmp
aam
in
cmp
jns
in
or
cld
add
jae
fisubs
scas
or
push
push
adc
jp
cmp
adc
and
jb
push
aad
call
jns
and
push
add
add
mov
incb
nop
xchg
int
mov
pop
mov
mov
pop
sar
jmp
push
aaa
loopne
dec
je
daa
loopne
addr16
dec
mov
cmp
push
add
ret
enter
jae
dec
das
in
and
add
jo
mov
xor
les
jb
loopne
add
lock
clc
outsb
cmp
pop
adc
into
repz
or
iret
dec
or
inc
mov
mov
sub
mov
es
popf
mov
lahf
pop
je
pusha
dec
mov
push
repz
push
jo,pn
push
or
cmp
nop
sets
or
push
mov
mov
fdivl
in
jge
cld
je
add
or
xchg
out
push
add
adc
push
or
add
and
jne
xor
jne
jbe
jne
aas
dec
jne
push
jne
adc
dec
aas
pop
jne
jne
adc
outsb
and
xchg
lea
xchg
pop
iret
repz
add
xchg
cmp
xchg
ror
pop
in
sarl
pop
push
jg
adc
out
dec
mov
jbe
cmp
insl
test
add
enter
jbe
jns
repnz
popl
fmuls
mov
out
call
leave
insb
je
inc
jg
mov
and
inc
mov
cmp
lock
or
stos
addr16
push
mov
xchg
xchg
nop
xchg
xchg
and
ja
js
mov
dec
ja
sub
pop
ja
jb
pop
push
cld
and
nop
push
aad
dec
nop
mov
add
ja
ja
sbb
sbb
ja
sbb
sbb
ja
js
and
cmpsl
sbb
xor
inc
enter
push
push
push
nopl
xor
jb
push
das
inc
repnz
jl
mov
test
xor
sbb
jb
enter
jns
jns
jns
inc
add
jns
fs
std
sbb
sub
iret
fdivs
daa
cmp
sbb
out
pushf
pushf
pushf
pop
das
xchg
pushf
mov
pop
push
pop
ss
enter
jns
jns
psubusw
ljmp
and
jp
cmove
cltd
loop
jp
add
cmp
dec
xchg
cmpb
dec
add
mov
sets
loop
repz
test
aas
movsb
push
pop
and
adc
leave
or
xchg
sarb
outsb
scas
fisttpl
pop
push
pop
out
xchg
and
icebp
jp
jp
jnp
repz
adc
sbb
push
mov
mov
push
add
xchg
mov
je
enter
mov
pop
imul
jns
push
mov
jb
jl
push
aas
mov
aas
fmull
pop
sbb
mov
cmp
inc
dec
leave
jae
cmp
xchg
es
daa
pop
jle
lahf
iret
in
in
lsl
outsb
pop
pop
and
mov
psrad
hlt
or
das
add
jno
xchg
jge
jge
daa
pop
leave
mov
xchg
fcmovne
sarl
pop
xchg
pop
cwtl
je
add
jb
xchg
jge
jge
mov
pop
mov
jge
pop
or
xchg
in
cmc
jge
daa
sbb
jle
and
xchg
jle
push
aaa
shll
aaa
dec
cmpsl
fdivrl
daa
arpl
popf
jae
add
xchg
xchg
sahf
cmpsb
scas
movzbl
mov
xchg
ja
dec
lar
not
cmp
dec
sahf
or
stc
add
xchg
or
cwtl
mov
mov
mov
mov
dec
jg
push
pshufw
ja
pop
pushf
pop
xchg
fwait
inc
movsl
xchg
add
cltd
fldenv
scas
jne
jecxz
jecxz
dec
ja
and
js
and
orb
pusha
push
cs
setnp
add
cltd
outsl
shl
mov
jg
daa
loopne
sub
into
insl
call
repnz
lsl
mov
aas
loop
adc
subl
xor
aas
wrmsr
lcall
push
add
sub
adc
xchg
mov
daa
fstl
pop
sgdtl
in
in
push
test
mov
mov
in
or
pop
hlt
in
jmp
call
add
lock
dec
sahf
aaa
pop
or
sbb
andb
xlat
lcall
sub
fwait
inc
in
aam
repnz
sub
pushf
xlat
push
mov
rolb
and
sub
lock
jg
clc
sbbb
orl
adc
out
prefetcht2
or
or
and
aaa
dec
and
sub
cmovae
xorl
cwtl
adcb
add
outsb
mov
inc
addr16
loopne
aas
addl
addl
test
leave
mov
jg
jb
into
iret
mov
sahf
ja
dec
push
pop
ret
outsb
fucom
lret
pop
add
or
or
jns
rorb
ficoml
loop
cmp
ljmp
fmulp
add
adc
mov
dec
icebp
and
lea
jb
test
pop
push
pusha
cltd
push
jo
xchg
pop
mov
test
add
iret
mov
mov
mov
or
or
or
mov
jg
xchg
mov
and
in
enter
xchg
es
xor
xchg
repnz
dec
xchg
pmuludq
mov
pop
or
bound
iret
sarl
iret
or
fildl
mov
nop
mov
or
push
pushf
mov
es
mov
push
pop
es
iret
add
rorb
ja
enter
cltd
dec
fidivrs
sub
sbb
xchg
je
inc
push
cmovs
ljmp
mov
leave
sub
mov
in
in
jg
xchg
xchg
xchg
or
or
in
jmp
add
in
add
lock
mov
mov
fildl
pop
paddd
cmp
cmpb
daa
iret
jae
add
jbe
les
sub
pop
leave
and
outsb
bound
orb
xchg
mov
pop
aaa
jns
pop
push
add
cmp
enter
mov
orl
aas
xchg
pop
fwait
mov
mov
daa
push
mov
adc
out
fsubs
inc
movsb
add
leave
xchg
mov
mov
xchg
fcmovne
xor
cmovo
pop
jb
cmp
lods
incl
mov
mov
pushf
dec
mov
jmp
aaa
out
daa
or
sbb
aas
push
mov
loop
inc
mov
dec
clc
mov
fisubrs
push
push
or
pop
bswap
cmc
repnz
mov
das
adc
sub
pop
movsl
nop
mov
mov
dec
inc
mov
fmull
leave
jmp
repz
mov
sti
pop
push
mov
push
in
in
push
xor
in
xchg
mov
fdivs
repnz
and
sahf
ja
sbb
cmpb
fsubrp
mov
lods
push
push
rcr
push
in
daa
iret
and
jmp
and
ljmp
mov
repnz
push
daa
add
dec
ds
cmpsl
jo
in
mov
fwait
mov
mov
mov
jb
xchg
out
idiv
sub
sub
push
add
ss
lret
lret
sub
test
jb
enter
push
jb
jbe
jb
orb
xchg
out
fs
int
dec
dec
dec
aad
in
in
fsubp
pop
mov
push
nop
push
push
or
out
or
or
out
jns
out
ds
or
xchg
nop
push
nop
dec
pop
nop
xchg
dec
and
shrb
add
nop
push
add
jns
xchg
cltd
cltd
add
add
test
repnz
loopne
call
repnz
nop
add
repnz
xchg
es
cs
ss
xchg
hlt
repnz
inc
xchg
dec
dec
xchg
pop
xchg
fs
jg
xchg
jp
xchg
xchg
xchg
xchg
adcb
jns
out
push
pop
test
mov
out
sahf
out
and
and
sahf
out
sahf
and
and
sahf
out
daa
hlt
sub
or
sub
or
les
sbb
cs
xchg
cs
insb
xor
pop
outsl
xchg
ret
pop
xchg
push
pop
fistps
push
aas
js
dec
mov
sbb
xchg
and
sbb
stos
ja
les
cmp
mov
pop
sgdtl
pop
fimuls
or
mov
add
or
repz
add
xchg
xchg
pop
in
xchg
punpckhwd
fwait
mov
out
leave
enter
xchg
and
iret
xor
jae
jns
dec
dec
adc
pcmpgtw
addl
mov
xchg
repz
cmpxchg
das
in
sbb
sahf
cmp
cmc
sbb
adc
repz
pushf
sbb
and
and
mov
punpcklwd
dec
outsb
mov
out
daa
push
imul
in
dec
xchg
sub
shl
jns
sahf
cs
xor
xchg
mov
cmpsl
cmp
xchg
xor
das
getsec
sahf
out
jns
xor
xchg
out
dec
push
maxps
cmp
in
outsl
xchg
pop
cmp
in
test
mov
mov
dec
repnz
push
in
call
adc
xlat
inc
xchg
xchg
add
xchg
jo
sete
inc
repnz
loopne
and
leave
fabs
sbb
dec
sahf
aaa
jb
cwtl
sbb
add
xor
add
add
dec
pop
pop
push
mov
mov
daa
mov
xchg
lahf
pop
stos
mov
bnd
into
adc
in
jae
cmp
out
cli
push
add
cltd
adc
sbb
sbb
out
jns
sbb
sbb
cmp
jns
sahf
sbb
adc
out
and
cltd
jns
add
mov
lahf
cltd
fs
js
cltd
jg
pop
scas
and
xor
mov
repnz
xchg
add
lcall
repz
add
clts
pusha
rep
push
les
jo
or
push
iret
js
cs
nop
femms
cwtl
mov
ret
adc
jns
leave
repz
adc
repz
aaa
lar
pop
fdivs
sbb
loopne
aam
mov
sbb
mov
push
add
cmpb
mov
add
fwait
iret
push
mov
pop
mov
aas
xor
pop
cmp
xchg
out
xlat
xchg
add
mov
inc
repnz
xchg
fcmovne
test
xchg
leave
jb
cmp
add
in
hlt
paddb
inc
ss
pushf
ss
xchg
inc
mov
cmp
in
aaa
push
add
cmovle
movb
or
in
jns
mov
aas
lcall
mov
add
cltd
dec
xor
cmp
popf
xchg
jb
xor
inc
fistl
mov
outsw
out
jns
outsb
pcmpeqd
add
jns
dec
sahf
add
xchg
push
push
sahf
mov
cmp
cmpsb
or
daa
daa
daa
mov
xlat
rcr
loope
xchg
jl
daa
icebp
cmpsl
push
fs
mov
adc
sbb
and
sub
xchg
mov
or
repnz
mov
xchg
pop
add
pop
leave
jae
cld
xchg
lcall
stos
mov
sbb
out
add
leave
and
call
sahf
mov
addr16
outsb
add
fists
pop
sbb
ret
out
pushf
cmp
cmp
mov
mov
xchg
fucomi
jbe
jo
pop
xor
xchg
popf
dec
and
add
in
jb
btc
leave
inc
repz
mov
notb
lahf
incl
mov
mov
mov
fistl
mov
out
repnz
fs
insb
add
add
mov
or
dec
es
mov
pop
mov
loopnew
shl
sbb
addr16
mov
push
loopne
xor
cmp
loopne
leave
inc
orb
push
lcall
add
add
mov
int
fsubs
fxch
lret
lret
stc
mov
sbb
shlb
cmp
pop
pop
push
mov
jb
pop
pop
pop
pop
jge
mov
pop
pop
pop
pop
test
mov
mov
aad
nopl
leave
leave
leave
sbb
sbb
leave
leave
leave
leave
pop
push
adc
iret
sub
sub
sub
cmp
jmp
or
fucomp
pop
sysexit
aas
call
repz
cmp
repz
cmp
dec
cmp
pop
ds
outsl
inc
cmp
repz
inc
test
out
iret
repz
fwait
inc
fisubs
sahf
mov
mov
stc
mov
movsb
adc
dec
iret
repz
sub
out
outsb
daa
inc
cmovnp
sahf
out
sahf
push
popa
push
insb
push
ja
pushf
fmull
pop
lea
pushf
scas
pop
mov
cmp
iret
jl
jp
lock
movsb
mov
inc
and
xchg
movsl
movsl
aas
movsl
fwait
aaa
jne
movsl
push
ja
pop
repnz
push
movsl
leave
mov
and
cwtl
repz
mov
sbb
add
popf
cmp
and
sub
jns
test
mov
mov
rorb
movsl
sbb
repz
sbb
sbb
rcll
sbb
xor
cmp
cmpsb
inc
cmpsb
pop
and
mov
pop
push
cmpsb
sahf
pop
fs
cmpsb
pop
mov
add
out
fisttps
mov
fdivrs
adc
and
fs
into
xchg
xchg
and
clc
add
cmpsl
push
add
dec
dec
sahf
outsb
clts
and
pusha
leave
repz
dec
push
repnz
iret
inc
or
cmpsl
leave
out
lock
cmpsl
lahf
adc
push
cmpsl
fistps
pushf
pop
pop
test
mov
jbe
ror
or
mov
xlat
mov
daa
sti
enter
movl
test
and
in
sbb
test
fmulp
or
test
push
add
jbe
cmp
push
jo
dec
mov
lods
pushf
pushf
fsubrl
mov
ret
lret
repz
pushf
jecxz
adc
cmp
enter
test
mov
and
iret
repz
sbb
push
sbb
jmp
addr16
sahf
out
and
push
and
sahf
pop
mov
mov
push
daa
lret
loopne
loopne
repnz
jg
adc
sub
fbld
stos
stos
stos
dec
sahf
ja
mulps
add
aad
inc
inc
iret
cmpsb
jae
jb
nop
fwait
vmovntdq
iret
add
jecxz
push
out
jbe
dec
sahf
pop
testb
or
or
decb
push
stos
push
stos
jmp
stos
and
movups
jns
out
adc
adc
sahf
out
sahf
adc
adc
pushf
fmull
pop
fs
sbb
jl
push
jmp
push
pop
mov
and
dec
sahf
out
and
fmulp
lods
mov
es
repnz
stos
nopl
jns
out
push
aam
fildll
clc
inc
ss
inc
dec
stos
add
sub
inc
dec
ja
pop
xchg
clc
daa
cmpb
add
pop
lods
jg
lods
dec
sahf
ja
inc
pop
push
push
add
mov
dec
jne
dec
lods
das
jns
stos
ja
cmovle
out
or
les
push
or
cmp
iret
pminub
inc
sub
hlt
call
mov
fucomp
lods
sub
cmp
repz
add
add
pushf
addr16
jb
jge
mov
sysret
cmp
repz
push
cmpsb
mov
js
scas
mov
inc
lods
int3
jb
enter
lods
loop
in
lods
and
lods
outsl
sbb
mov
scas
cmp
dec
sub
add
add
jae
scas
jg
jnp
int3
out
or
mov
lock
mov
jbe
mov
std
pop
push
in
addr16
lahf
or
push
scas
jns
aaa
jb
scas
xor
or
in
in
push
pop
invd
adc
imul
fmulp
repz
pop
push
pop
xchg
mov
cmp
mov
daa
iret
repz
fcompl
out
dec
or
pop
mov
repz
push
push
pop
and
cs
cmp
inc
adc
jns
out
pop
sub
mov
lds
mov
push
leave
fadd
mov
mov
cmp
shlb
call
jae
push
clc
pop
cmp
jb
mov
or
adc
movntq
out
in
and
sub
cmp
inc
adc
push
cmp
rorl
out
pop
mov
mov
in
jbe
push
vmread
sbb
sbbb
sbb
dec
aaa
jns
nopl
jns
and
sahf
out
ror
rcr
cmp
in
es
cs
lds
repz
shrb
cmp
or
sbb
sub
jb
wrmsr
pop
adc
xor
adc
daa
dec
mov
ss
pop
es
movl
sub
add
cltd
mov
fwait
movb
and
popl
pop
adc
push
add
aas
inc
push
sub
mov
sbb
test
pop
inc
test
dec
gs
dec
aaa
or
test
add
push
dec
leave
iret
repz
movb
cmp
xor
cmp
repz
and
or
jns
cmpsl
stc
clc
enter
loopne
jns
out
fcom
ror
cmp
jnp
enter
mov
leave
repz
and
sahf
out
insb
pusha
push
push
shl
sahf
dec
inc
sub
or
nop
inc
les
lock
mov
mov
mov
add
sbb
jns
or
or
pop
jb
cmp
or
or
or
daa
adc
adc
and
mov
inc
push
addr16
das
push
xorps
loopne
mov
das
insl
push
and
jns
jo
jb
pop
xorb
pop
orl
leave
leave
repz
pop
xchg
sub
aas
mov
jns
xlat
pop
sbb
addr16
or
sub
add
inc
enter
orl
jno
cmp
std
dec
sbb
push
dec
adc
pop
adc
hlt
mul
or
add
add
movsb
add
cmpsb
fisttps
cs
jb,pt
movsl
sbbl
test
pop
shll
cmovo
pop
inc
mov
or
mov
sbb
in
call
adc
add
mov
xor
fmuls
xchg
in
fsubp
stc
jb
jle
inc
enter
inc
das
orb
mov
fdivr
inc
xor
fadds
dec
fiaddl
mov
jle
pmovmskb
pop
sub
fadds
xchg
mov
and
push
das
aas
xor
inc
in
pop
aas
outsb
arpl
and
cs
repz
push
or
stc
cmp
aam
adc
adcb
sbb
cmp
out
hlt
int
mov
iret
test
push
cmp
pop
pop
jbe
out
fmul
mov
jns
imull
or
js
lret
in
lods
jnp
jp
push
cld
jg
push
inc
jae
sbb
push
sub
sahf
pop
and
jle
aas
aam
inc
ss
sbb
pop
iret
jns
imul
or
mov
push
jbe
push
jae
xorb
insl
mov
push
push
pop
inc
jg
fst
inc
add
inc
push
xchg
fdivrl
pop
aas
pop
pop
sbb
push
xor
inc
in
cmpsl
push
fisubrs
scas
cmp
inc
pop
jg
jl
insl
add
push
and
out
fdivs
inc
sub
add
shll
push
jb
add
ja
es
into
inc
rorl
sbb
sbb
jl
add
add
and
clc
loop
sahf
out
iret
xor
adc
lock
rcrb
idivl
iret
in
push
and
rcrb
pop
or
cld
adc
cmp
jns
hlt
sbb
adc
rcrb
repz
repz
mov
and
iret
repz
movsb
es
es
jl
pop
clc
mov
out
jg
movups
lods
cmpsb
outsb
daa
xor
xchg
xorb
imul
lods
or
out
idivb
cmp
pop
js
repz
xchg
mov
repz
repz
jge
xor
add
push
pop
shl
iret
ja
mov
bnd
into
repz
dec
das
push
dec
insb
cmp
add
mov
and
pop
enter
inc
pushf
or
ds
push
ret
mov
adc
xchg
pslld
mov
leave
sbb
scas
mov
ret
inc
and
sahf
mov
sub
inc
rcrb
and
decl
jmp
inc
jno
xlat
xchg
inc
push
add
inc
stc
mov
adc
mov
mov
dec
pop
js
inc
outsl
loopne
jmp
xchg
test
mov
cmp
jmp
jl
mov
popf
sti
jmp
stos
push
inc
mov
repnz
test
pop
stos
clc
ljmp
cli
inc
jmp
aam
imul
loope
jp
iret
inc
gs
xchg
push
cmpsb
scas
mov
or
gs
or
addl
cmpsl
xchg
cmp
xor
dec
cmpsl
in
cmp
lcall
cmpsb
lock
mov
popa
sar
mov
fsubs
stos
xchg
clc
repz
fneni(8087
mov
subb
fwait
xchg
and
and
add
out
xor
sti
aas
jno
or
mov
pop
fs
dec
lea
push
aas
ret
shrl
mov
icebp
aas
rorb
and
cmpsl
out
aas
inc
cmpsb
mov
insb
scas
incl
aas
xor
aad
mov
std
std
into
popa
test
ja
stos
in
das
dec
lcall
dec
les
aas
xchg
les
jne
int
mov
addr16
push
mov
pushl
push
rclb
cmp
popa
mov
popa
push
jg
lcall
jle
push
jl
mov
das
lea
mov
inc
inc
aas
movsl
jmp
jg
sub
jge
mov
inc
rcr
push
arpl
int3
and
call
cmp
jp
and
cmp
mov
cmp
std
xlat
cmp
mov
sbb
add
inc
test
pop
mov
jne
fldt
cmp
jno
shlb
out
dec
nop
pop
cmp
fisubl
jmp
push
lahf
inc
pop
mov
sub
dec
in
ss
push
scas
into
imul
inc
faddp
jge
call
mov
xchg
cmp
push
andl
dec
dec
gs
std
orl
sbb
lahf
into
ror
add
cmpsb
fmuls
pop
adc
inc
and
adc
inc
push
dec
sub
jnp
cmpsl
add
xor
popa
push
out
mov
les
hlt
push
xor
jmp
mov
mov
push
movsb
mov
aad
mov
rclb
mov
sub
mov
nop
adc
push
jno
repz
test
ficompl
jmp
mov
call
hlt
movl
imul
std
in
leave
mov
add
insb
push
arpl
decl
cli
cmc
or
outsb
cmp
imul
addr16
add
aam
dec
std
test
int
decl
movsl
cli
test
xor
leave
mov
insb
fdivs
jne
lcall
fcompl
shrl
jg
dec
ficoms
push
xlat
enter
mov
and
mov
cltd
xchg
mov
jmp
add
or
or
and
or
adc
stos
sbb
ljmp
fdivl
jno
add
aad
mov
mov
movsl
in
lahf
xor
cmpsb
mov
aam
call
xor
test
lcall
push
sub
insb
fs
add
hlt
push
imul
insb
sbb
xor
dec
incl
insb
jnp
add
shl
adcb
cmc
fnstenv
adc
mov
decl
frstor
sub
rorl
popa
mov
into
pop
cmp
cmp
mov
dec
adc
mov
sti
hlt
shrl
imul
mov
sarb
add
in
add
pushl
pop
dec
or
cmp
add
daa
adc
or
and
test
jmp
or
mov
popa
into
push
stc
ficomps
leave
fldcw
and
xlat
pop
cmp
mov
ljmp
cmp
lods
insb
mov
in
mov
mov
add
inc
aad
scas
ja
lcall
adcl
jae
or
test
fs
ds
or
or
push
in
decl
call
mov
pop
jge
xchg
shlb
add
inc
push
imul
gs
incl
out
imul
aam
loopne
rorl
int3
dec
frstor
fistpll
mov
inc
mov
mov
call
xchg
shll
push
repnz
addr16
mov
cmpsb
fldl
mov
dec
ss
fisubrl
or
scas
testb
pusha
jp
inc
ret
out
jmp
fists
addr16
mov
jns
imul
andl
shrb
ss
mov
or
add
mov
das
es
lds
or
pop
mov
cmpsl
call
ret
shlb
leave
ljmp
fs
es
pushf
mov
insl
call
fmull
pushf
aas
ss
jmp
addr16
jb
push
add
adc
mov
jnp
lcall
mov
fwait
mov
xchg
or
out
fdivrl
fisttpl
aam
roll
clc
mov
push
incl
mov
mul
ja
outsl
ja
mov
out
cli
jo
ud0
dec
cmp
pop
or
adc
sahf
gs
clc
sar
imul
push
js
or
out
rorb
dec
ret
es
notl
pusha
rorb
imul
scas
fcompl
aaa
inc
cld
fldenv
filds
aaa
pusha
add
test
jg
mov
jmp
push
mov
lret
mov
cmpsb
mov
sarb
sub
push
mov
jp
mov
dec
popa
les
sbb
xchg
sub
aaa
mov
or
sbb
add
sub
sahf
push
pop
ret
scas
mov
js
jo
pop
push
pusha
pop
push
mov
xchg
repz
or
xlat
fcomp
iret
repz
fcmovu
fsubp
repz
repnz
in
call
jmp
repz
repz
cmc
div
clc
outsb
cmp
repz
cli
sti
cld
daa
call
xchg
cli
add
or
push
popf
sbbb
push
iret
dec
es
jnp
inc
push
in
lods
or
dec
bound
inc
rorb
inc
insl
fisttps
pop
inc
push
popa
je
push
mov
inc
in
cltd
out
cltd
sbb
aas
and
inc
dec
sub
sub
mov
cli
inc
fistpll
pop
bound
xor
aaa
cmp
popa
arpl
cmp
arpl
or
sub
xor
xor
xor
ficoml
popa
push
inc
jbe
pop
insb
imul
push
insb
gs
xor
inc
out
dec
mov
push
inc
dec
sahf
dec
lods
add
dec
loope
xorb
stos
das
fs
gs
sub
mov
ss
jbe
xchg
mov
rolb
and
push
ret
gs
adc
add
arpl
or
push
sub
andl
pop
inc
xchg
pop
popa
xchg
addb
insb
aaa
pusha
ljmp
popl
in
and
or
lods
mov
pop
cltd
and
jae
inc
hlt
push
add
das
sub
scas
popa
pop
inc
aas
in
orb
pop
inc
inc
mulb
xchg
sbb
inc
pop
std
icebp
adc
push
je
jo
inc
inc
inc
lret
into
out
add
ds
mov
scas
add
mov
iret
int
push
dec
cmp
mov
lds
inc
mov
mov
adc
fs
mov
adc
inc
outsb
jne
mov
xchg
push
popa
mov
sub
addr16
ss
add
add
or
add
jbe
aad
ss
clc
xchg
into
sub
pop
fwait
pop
jo
insl
adc
inc
cmp
push
mov
aas
aaa
xchg
das
pop
mov
pop
inc
ret
add
gs
and
and
mov
lahf
pop
mov
mov
mov
aad
xlat
mov
inc
add
lahf
xchg
cmp
adc
fisttpll
sub
xor
jo
or
add
lahf
inc
gs
push
outsl
outsl
test
sub
int3
push
bound
bound
push
lds
mov
mov
sub
in
test
sarl
adc
add
popl
call
xchg
push
orl
jns
sub
subl
jb
push
sahf
mov
xchg
addr16
outsl
arpl
test
dec
popa
mov
std
add
xlat
inc
push
bound
ja
fbstp
xor
addr16
sbb
dec
bound
es
inc
daa
cltd
xor
call
fs
add
adc
add
jg
sub
jmp
je
shll
dec
inc
dec
pop
outsb
pop
test
sarb
inc
push
aas
adc
jo
sbb
jmp
inc
push
inc
dec
mov
sub
jns
arpl
xor
cmp
pop
pusha
add
insb
insl
aaa
shll
insl
mov
inc
xchg
fildl
xlat
adc
push
daa
sub
sub
and
mov
or
sbbl
add
jmp
incb
inc
es
add
fdivr
loopne
sub
fnsave
fstpt
in
add
add
or
mov
or
pop
pop
push
or
ret
or
push
adc
push
adc
adc
push
adc
push
mov
or
pop
sbb
adc
adc
adc
add
data16
or
adc
pop
adc
inc
add
out
adcb
add
add
add
adc
add
fwait
sahf
add
les
add
outsb
add
mov
adc
and
jb
lcall
iret
imul
ds
xor
adc
pop
and
in
call
adcl
shl
and
bound
js
sub
mov
push
dec
shrb
inc
add
adc
pusha
xorl
push
and
and
inc
cmp
or
addl
adc
cwtl
into
add
or
cmp
adc
int
addl
pop
popa
jno
and
adc
xchg
mov
or
xor
adc
loope
icebp
mov
add
or
mov
pusha
and
add
js
mov
lret
rcr
push
ret
xchg
and
sub
pushl
pop
aas
imul
fdivrl
add
mov
mov
loopne
mov
inc
pop
push
fsts
dec
dec
popa
add
mov
cmp
mov
out
cmp
xor
and
fistpl
jg
inc
cmc
iret
xchg
inc
jl
roll
or
adc
pop
inc
inc
xchg
add
add
std
or
call
add
lds
cld
cli
and
mov
fiaddl
jg
fnstsw
ficompl
cmpsl
xor
mov
jmp
mov
bound
pop
lahf
mov
movsl
jecxz
pop
mov
mov
jmp
clc
cmpl
jg
or
ljmp
addr16
out
or
push
push
xchg
add
repnz
inc
lock
scas
fcos
decl
jle
fcmovnu
clc
cmp
fisubrl
in
mov
orb
int3
lcall
mov
add
mov
popl
movb
xchg
sbb
inc
dec
adc
adc
mov
xor
lods
scas
xchg
test
aam
and
sbb
call
gs
roll
fwait
movsb
jmp
push
lret
push
out
in
and
jg
divb
aas
repz
cmpsb
pop
outsl
icebp
mov
pop
lock
std
or
pop
mov
daa
test
decl
dec
dec
pop
push
out
outsl
loope
loope
rorl
mov
int
arpl
push
pushl
or
push
sahf
pop
clc
sti
jg
jno
lock
push
jg
inc
icebp
xchg
std
sarl
xor
hlt
and
xchg
jmp
sbb
shrl
mov
mov
out
pop
jb
mov
mov
mov
sub
pop
mov
jl
mov
dec
jp
push
gs
jg
sti
stos
hlt
push
add
stc
loope
mov
sar
andl
aas
icebp
testb
mov
inc
imul
scas
fadds
in
ljmp
mov
in
repnz
jno
pop
sub
jg
scas
cld
or
push
inc
sbb
paddb
jg
subl
jb
adc
push
lock
lods
jp
testb
sbb
jp
into
fcomps
sbb
sbbl
into
andl
aas
loopne
cli
adc
imul
ljmp
aaa
xchg
in
add
inc
adc
loope
fisttpll
ror
rcrl
cli
push
push
push
idivl
ljmp
dec
sub
inc
scas
inc
mov
jg
je,pn
sub
jg
imul
ret
scas
call
les
jne
gs
jns
enter
or
push
pushf
push
scas
xlat
sub
inc
sar
cmp
sti
punpckhbw
cmpsb
orb
mov
push
sarl
inc
push
sub
xchg
pop
clc
pop
hlt
jg
push
sub
movsb
add
lea
jg
jmp
std
xorb
jg
aad
adc
ret
das
pop
pop
mov
mov
insl
pusha
fucom
out
sarb
sbbl
jno
or
sarb
call
std
pop
les
cli
mov
mov
inc
arpl
stos
mov
jmp
insl
add
leave
push
scas
loop
jge
push
shrl
mov
push
mov
adc
jns
and
sbb
xchg
jo
and
out
test
jae
push
iret
sti
cmp
ficoms
jl
sbb
cmpsl
sahf
imul
fcmovnu
rorl
insb
stos
arpl
add
cld
call
inc
in
mov
outsl
inc
shrb
lods
hlt
cmp
fistl
mov
adc
push
movsb
xchg
or
sbbb
mov
stos
dec
lods
xor
jg,pn
cmpsl
scas
in
popa
in
pop
or
mov
xlat
pushf
cld
aas
clc
jge
jnp
sbb
outsb
mov
sbb
jecxz
cmp
test
dec
jb
adc
xchg
and
push
push
jo
pusha
imul
add
decl
idivb
daa
xchg
mov
cwtl
pop
xchg
ftst
jbe
xchg
and
lods
subb
jg
jle
jg
pushl
out
aas
stc
add
out
gs
jno
fidivrl
lock
adc
pop
rol
cld
addl
adc
and
iret
imulb
fmull
enter
jecxz
scas
sub
pop
decl
in
pop
mov
sub
mov
dec
incb
fisubrl
aas
mov
fucomi
xchg
adc
inc
or
pop
jg
add
mov
mov
jg
mov
aad
test
mov
fsubr
lock
mov
iret
push
jbe
push
sbb
addl
stos
icebp
pop
incb
jno
adc
push
inc
jecxz
sbb
idivl
sbb
mov
lods
loopne
sar
addl
lahf
xor
imul
scas
fidivrl
or
add
mov
faddl
cmp
push
and
fwait
imul
add
push
sbb
in
jne
push
and
mov
adc
div
or
inc
aas
push
rcrl
rolb
mov
lock
jb
fistpl
adc
call
jno
pop
mov
mov
inc
sti
arpl
daa
std
or
sbb
mov
inc
cmpsb
jg
lcall
lahf
or
imul
xor
dec
xor
fsubr
fistps
lds
sbb
jno
fidivrl
jg
stos
pop
add
cmp
out
fidivrl
xor
lahf
les
sbb
sbb
incl
push
cld
addl
sbb
mov
lahf
outsl
int3
push
sbb
adc
cmp
inc
sti
jmp
sti
jle
xchg
popa
out
out
outsl
xchg
inc
test
in
jge
popa
push
test
mov
sahf
outsb
hlt
sti
fsubs
shl
dec
jp,pn
adc
xchg
call
lahf
mov
or
out
lcall
ljmp
shl
cld
mov
adc
stos
pop
jg
pop
shrb
rcl
jg
jg
adc
xor
pop
rcr
dec
mov
gs
pushf
lea
jg
sti
sti
jp
jnp
jecxz
adc
inc
lds
push
pop
adc
imul
aam
dec
int
sbb
inc
pop
xor
rorb
and
add
cmpsl
push
in
xor
lock
inc
cmpsl
enter
mov
into
test
xchg
movsb
insb
or
clc
jmp
and
xchg
fidivrs
clc
fistps
insb
test
aas
repz
outsl
lock
in
jmp
stc
out
cmp
aaa
mov
clc
push
std
mov
subb
or
mov
xchg
call
ret
push
dec
push
mov
fsubrp
dec
sahf
enter
adc
lcall
ret
faddl
xchg
lcall
mov
mov
or
dec
ss
lods
lock
mov
or
repnz
mov
pop
adc
call
cmpsl
lret
stos
fisttps
pop
in
cmp
jmp
mov
and
outsl
insl
pop
lock
jmp
hlt
dec
mov
ja
pop
in
xlat
inc
aas
mov
jg
mov
sub
addr16
mov
out
daa
jp
std
adc
cltd
or
and
leave
mov
ret
nop
cmp
das
incb
lock
pop
pop
addl
cld
idivl
fs
sbb
stc
lahf
loope
jae
jmp
add
mov
fbstp
out
xchg
add
out
icebp
mov
loope
mov
pop
leave
xchg
cmpsl
popf
sti
mov
fbld
mov
outsl
das
push
in
jge
out
ret
cmpsb
cmp
call
xor
decb
jbe
add
decb
dec
adc
sbb
jo
call
popf
iret
jb
jo
or
mov
cmp
int
add
push
pop
aaa
std
ja
test
dec
inc
das
js
xchg
xchg
fimull
ret
and
pusha
dec
ror
sbb
aaa
inc
push
pushf
jecxz
adc
shrb
adc
aas
pop
clc
loope
loope
mov
lahf
jp
pop
inc
push
jg
jmp
lods
mov
fldenv
iret
fdivrl
xchg
lcall
push
cmp
repz
add
movsb
loop
dec
sarl
pop
out
jg
jno
ret
shll
cmp
jmp
iret
push
dec
jge
pop
clc
xchg
cmpsb
ljmp
ds
inc
inc
mov
in
sbb
xchg
imul
jmp
outsl
jmp
add
mov
daa
jmp
faddl
mov
inc
push
jae
lcall
push
imul
pop
stc
push
dec
adc
jmp
cmp
mov
mov
enter
inc
add
decl
out
daa
icebp
push
lahf
sti
inc
pop
imul
push
xchg
cmpsb
scas
les
pop
xor
mov
incl
mov
mov
fildll
fsubrl
dec
add
or
inc
or
add
jle
sti
push
sti
pop
inc
dec
push
mov
fs
push
cmp
call
dec
int3
pop
iret
and
add
test
repz
add
push
lock
stc
xor
inc
jle
xchg
sub
ss
pop
out
inc
nop
push
fs
clc
jno
jmp
push
and
jge
adc
jmp
mov
inc
jl
xchg
jne
push
push
ja
add
call
mov
add
push
cmpsb
sub
out
decb
movsb
add
fadd
dec
out
mov
jmp
addr16
adc
jne
sbb
aad
ficoms
sar
mov
int3
or
lcall
jle
cwtl
jmp
data16
push
mov
pushf
or
push
popf
das
je
xchg
out
adc
cmpsl
addr16
scas
popa
ljmp
mov
js
in
mov
mov
mov
or
dec
sub
dec
into
ljmp
push
sti
cmp
push
dec
mov
xchg
mov
enter
cld
xchg
and
stos
in
jle
adc
in
movsl
fsubl
pop
scas
repnz
mov
sbb
es
ljmp
inc
cli
insl
lret
iret
inc
inc
and
cltd
frndint
cmc
cmp
sbb
aam
stos
sub
lea
cmpsb
cmp
je
xor
cwtl
mov
sbb
pushl
push
xor
dec
out
dec
lds
in
cmpsl
or
add
pop
add
sbb
lcall
adc
and
loop
loope
data16
mov
sub
shrl
sbb
ss
jp
inc
xor
add
push
sub
jne
sub
das
mov
out
rorl
in
xor
cmc
ljmp
sub
sub
xchg
sub
fldenv
ljmp
int
cmpsl
push
cmc
ljmp
sub
push
test
fmul
or
ljmp
jecxz
xchg
lock
jno
pop
clc
mov
iret
fists
jb
call
add
es
sbb
push
fsubl
sub
cmpb
dec
mov
xor
ljmp
aam
movsb
test
arpl
ljmp
push
lock
cmpsl
rorb
cwtl
fbstp
push
xchg
pop
outsl
lds
sar
sbb
dec
lcall
shll
cmp
jne
nop
fs
add
mov
add
std
dec
inc
decb
jmp
push
dec
imul
sbb
test
incl
outsl
imul
into
ret
lods
daa
repz
jnp
xor
decl
and
imul
mov
ret
push
bound
inc
std
pop
fists
call
lret
rcr
pop
cmp
sub
or
loope
mov
imul
incl
sar
lea
lahf
sbb
or
pusha
jae
xor
xor
mov
push
pop
or
fisubs
cs
cmp
lods
pop
dec
lret
mov
ljmp
jae
sbb
imul
push
jae
std
jnp
xor
ja
xchg
mov
cli
dec
scas
pushl
cld
mov
out
and
shlb
andnps
jle
pop
shll
imul
sub
nop
jecxz
sub
cli
jg
inc
lcall
lods
lret
xchg
or
dec
movsl
dec
inc
xor
ret
nop
xchg
xchg
ss
decl
jp
cld
jp
sahf
jo
pop
dec
ss
mov
testb
xor
jmp
enter
xchg
mov
leave
imul
test
mov
pop
ljmp
fwait
sbb
dec
stos
pop
int3
ljmp
ror
xor
pop
cmp
decb
pop
adc
call
fucomp
scas
pop
xorb
xor
push
in
xor
icebp
mov
pushl
mov
sub
leave
inc
iret
mov
fidivrl
xor
jnp
xchg
pop
shrb
cld
insl
incl
test
push
dec
inc
xlat
rorb
or
inc
inc
cli
adc
push
incl
mov
push
mov
add
loope
loop
pop
ss
mov
jmp
scas
clc
lcall
adc
mov
pushf
mov
mov
test
dec
and
fistps
cmpsb
jecxz
andb
jnp
cbtw
xchg
ljmp
aaa
fcomi
jne
add
adc
adc
mov
mov
dec
add
call
ret
sbb
mov
test
jo
mov
or
and
add
lret
jne
call
jp
cld
fs
mov
pop
xor
pushf
rolb
xchg
xchg
mov
cmp
sbb
jmp
ret
xor
imul
lock
sbbb
jle
test
aaa
int
sbb
mov
jo
sbb
xchg
cmp
pop
pop
enter
xor
scas
mov
lcall
jmp
fistpll
lret
jg
mov
call
jno
out
xor
ljmp
cmp
enter
push
adc
sbbl
or
push
dec
nop
xlat
decl
data16
lods
jo
push
rcrl
sub
push
mov
inc
sbb
xor
mov
jg
inc
popf
hlt
mov
mov
xor
cmp
push
fcos
mov
and
clc
lods
push
adc
inc
stos
lods
in
add
iret
in
xchg
push
mov
stc
ficomps
or
mov
mov
stos
sbb
pop
loope
pushl
std
and
inc
sub
loopne
push
cmp
stos
repz
cltd
jno
adcl
jbe
sbb
ret
sahf
decl
movsl
enter
ja
sub
inc
cmp
cld
addr16
sub
mov
sub
jmp
mov
xor
and
jo
mov
sub
pop
test
push
stc
mov
fbld
js
test
imul
loop
loopne
mov
push
imul
in
gs
inc
rolb
inc
pop
xchg
mov
add
fsubl
push
in
mov
cs
pushl
pop
xchg
icebp
jmp
or
sub
xchg
ljmp
in
jp
xor
call
fidivrs
pushf
je
cld
daa
icebp
mov
add
sbb
cmp
lods
es
imul
stos
pushl
pop
shll
adc
cmpsb
clc
mov
jg
cmpsb
lods
cs
dec
call
rclb
test
jae
jno
mov
pushf
cmc
arpl
add
adcb
cli
sbb
cmpsl
cwtl
cli
pminub
push
push
mov
mov
out
cmp
and
mov
adc
ret
je
push
jne
jmp
xchg
aaa
cmpsb
cmpsb
or
mov
inc
imul
ret
xchg
mov
fmull
loopne
pop
out
fucom
dec
pop
jge
or
cmp
addr16
mov
push
lock
pushl
sbb
xor
xorb
cmp
scas
sarb
mov
and
xchg
sar
push
jmp
mov
ljmp
shlb
outsb
sbb
aaa
repz
sbb
fsts
repnz
jmp
aam
outsb
insb
sub
mov
xor
cmp
dec
imul
push
out
imul
out
call
or
or
sbb
popa
cmp
add
jmp
test
stc
stos
push
decl
scas
out
repnz
or
into
in
mov
push
cmp
sarb
inc
xchg
divb
call
mov
mov
insb
ljmp
xchg
out
aas
arpl
pop
pushf
xchg
xchg
js
push
sbb
mov
push
cmp
stos
or
arpl
test
ffreep
sbb
or
cmp
sub
lcall
lcall
mov
adcl
out
mov
je
lock
push
mov
ss
sbb
jno
call
and
ficomps
add
decl
or
inc
mov
lds
into
jns
jbe
inc
mov
mov
inc
ljmp
lcall
sub
cmpl
jne
ucomiss
push
rclb
int3
pushl
jne
mov
pop
into
jp
or
cld
lock
fildll
loopne
sti
insb
adc
jl
mov
ds
jb
mov
and
mov
mov
push
ljmp
jl
subl
sub
out
mov
sbb
xchg
decb
aad
push
jge
or
mov
xchg
push
pop
mov
push
mov
xchg
and
pushl
loopne
jmp
mov
shlb
push
sbb
pop
or
std
mov
mov
fdivrp
test
fidivrs
adc
sarl
cmp
mov
jmp
test
sub
mov
xor
call
sbb
ss
jmp
jns
rcrb
xor
repz
cmp
outsb
jg
sti
in
scas
das
popf
addr16
iret
mov
jecxz
adc
lret
jmp
fcomi
pop
ss
call
rorb
jae
jle
jmp
pop
or
out
mov
fdivl
imul
xchg
jns
fcom
sbb
xlat
xchg
jg
adc
shlb
mov
pop
mov
cwtl
jg
sub
cld
test
mov
scas
jmp
outsb
stos
mov
pop
sub
push
mov
fdivrl
sbb
shll
ds
pushl
test
adc
inc
ljmp
and
insl
enter
test
shll
push
dec
mov
shrb
lods
inc
movsb
not
jnp
in
ja
jbe
xor
dec
or
call
xor
arpl
fsubrl
mov
mov
insl
sub
dec
jb
lock
ljmp
repnz
mov
out
rclb
pusha
xor
es
fildl
xor
mov
inc
rcrl
and
es
shlb
shl
test
dec
dec
ljmp
call
aaa
inc
clc
leave
xchg
movsl
and
pop
movsl
mov
or
pop
add
aam
psubq
scas
jmp
lret
mov
dec
jnp
mov
mov
rclb
call
pushf
lods
ss
xor
pop
jecxz
mov
inc
mov
xor
or
insl
in
pop
in
push
scas
addl
imul
xchg
ss
test
sub
sahf
das
das
mov
loopne
fsubrp
sbb
fs
lret
repz
test
or
xor
push
adc
or
pop
pop
scas
pop
push
ret
push
mov
lea
xlat
sbb
sbb
push
incl
inc
sub
adc
enter
mov
incl
jne
jp
dec
adc
mov
mov
mov
out
out
stc
popa
clc
inc
push
pusha
xchg
test
mov
jl
sti
ret
mov
xor
jp
mov
xor
mov
xchg
popf
jp
and
jle
hlt
out
or
adc
lcall
jp
cmpsb
in
dec
or
decb
lock
nop
push
lds
pop
scas
rclb
fdivl
pop
cld
or
test
xlat
imul
adc
inc
or
movsb
push
mov
aas
sub
js
dec
fcomps
xor
lret
in
or
and
fiaddl
pop
xchg
ds
push
pushl
cld
ljmp
sbb
lock
les
mov
cltd
pop
inc
scas
cmp
dec
test
rclb
pop
sub
or
add
mov
iret
sbb
sbbl
jmp
xchg
popa
fiaddl
in
rcrl
lds
stc
inc
cmp
imul
adc
adc
pop
xor
cmp
mov
jnp
xchg
mov
test
mov
daa
scas
cli
jns
out
inc
mov
mov
inc
mov
insl
mov
cli
inc
jmp
repz
jb
int
or
arpl
shll
mov
call
cwtl
cld
adc
add
sub
jmp
leave
dec
cltd
mov
and
inc
xchg
clc
cmpsl
mov
cmp
or
jecxz
arpl
je
ljmp
call
sbb
dec
dec
arpl
mov
insl
jb
fists
into
cmc
in
jne
cwtl
call
roll
jle
hlt
sbb
inc
add
pop
sti
fiadds
lods
mov
fbld
mov
addr16
adc
sub
add
sbb
jmp
insb
dec
nop
sahf
inc
scas
push
xchg
dec
in
xchg
ficompl
in
sbb
push
add
jmp
dec
scas
jae
movsl
fistpll
or
mov
cmpsl
mov
ret
iret
in
mov
lea
decl
push
jmp
xlat
movsb
jmp
inc
mov
sbb
jb
or
push
cmp
mov
mov
sub
or
sbb
mov
jl
insl
cltd
xchg
sbb
lods
xchg
mov
call
pop
repnz
pop
ljmp
push
ret
mov
enter
sbb
shlb
push
jge
push
adc
inc
fstl
lcall
out
insl
dec
arpl
sarb
out
cli
cmc
xor
repnz
fbstp
push
das
std
push
jns
and
sub
fimull
lcall
iret
dec
mov
iret
dec
cmp
adc
stos
jnp
mov
movsb
pop
les
out
mov
jg
decl
shlb
xchg
jge
xchg
fdivrp
stos
push
mov
adc
mov
sub
notb
or
adc
or
mov
pop
push
pusha
fmul
test
lret
jmp
dec
pop
lcall
icebp
mov
mov
push
pop
mov
addr16
pushl
cld
cmp
mov
cli
push
pop
xchg
sti
xchg
pushf
cmpsb
xchg
mov
pop
sbb
call
xor
pop
mov
lea
xor
loop
add
sahf
jo
mov
xor
xchg
call
icebp
xor
loopne
xchg
dec
and
push
test
aad
loope
mov
cmp
popf
js
push
sti
rcr
add
sub
fs
and
lock
les
fs
incl
push
insb
jecxz
in
pop
push
jle
pushf
dec
mov
scas
mov
fstpl
sbb
lcall
dec
and
add
add
mov
jg
out
inc
in
xchg
mov
adc
aaa
or
mov
jmp
inc
out
aaa
scas
xor
aas
cmp
jo
xchg
adc
jg
inc
adc
faddl
lods
push
jp
ds
ljmp
movsb
xchg
push
add
jle
cwtl
push
in
clc
shlb
loop
cmc
outsl
inc
mov
xor
inc
into
aas
cmp
insb
and
mov
ret
in
fcoms
dec
pop
push
leave
ja
mov
jg
or
cmp
push
cli
mov
dec
sbb
inc
dec
fsubl
jp
int
sub
mov
cli
adc
add
and
pop
xlat
inc
xchg
cld
shll
mov
out
dec
pshufw
insl
in
jns
add
lcall
jns
js
leave
hlt
and
into
in
adc
mov
lods
faddl
ljmp
insl
push
mov
sbb
push
js
xor
xlat
mov
es
ljmp
int3
xor
push
mov
into
pop
lds
jbe
test
test
push
jg
std
in
cld
jge
xor
pop
subl
scas
sbb
call
ljmp
dec
mov
insb
mov
hlt
imul
repz
cwtl
lods
daa
jg
sub
out
mov
nop
scas
loop
lahf
xor
insl
mov
iret
lret
imul
jae
shlb
sti
sbb
xor
inc
xchg
aaa
and
add
mov
les
stos
and
sub
lods
xlat
mov
mov
repnz
pushl
dec
xor
mov
stc
jbe
mov
jo
out
daa
mov
ljmp
cmp
das
scas
int3
sbb
jne
loop
xchg
inc
inc
punpcklwd
fists
js
xor
fwait
push
cli
test
addr16
xor
sti
sbb
fistpll
cltd
sbb
inc
fisubrl
xchg
out
sub
pusha
mov
scas
mov
sti
push
mov
xchg
jmp
sub
jle
xor
sbb
adc
adc
out
insl
rolb
clc
insl
repz
pop
loop
sbb
jp
bnd
or
stos
push
aaa
push
aam
fnstsw
cli
mov
jp
dec
pop
in
fmull
mov
and
aas
fdivp
fnsave
ljmp
jge
insb
mov
jecxz
and
enter
push
andb
stc
and
xchg
or
jmp
popf
daa
aas
sbb
xchg
aam
or
mov
loopne
mov
xor
clc
pop
fucomp
cmp
mov
sahf
sbb
add
xchg
iret
sub
notb
inc
test
shlb
repz
mov
inc
or
jl
gs
and
cmp
loope
mov
cmp
cs
inc
cmc
cmc
mov
mov
xchg
test
mov
fbstp
mov
incl
inc
pop
pop
mov
and
sti
xor
mov
mov
sub
mov
call
loopne
outsl
leave
cmp
in
push
mov
push
jb
pop
popf
push
fdivrp
decl
lahf
jmp
pusha
inc
lret
orl
xor
mov
mov
in
dec
jae
dec
clc
or
jle
in
mov
adc
xor
es
pop
push
mov
jl
iret
xlat
popa
push
inc
aad
lock
test
sbb
decl
dec
arpl
pop
mov
cmpl
add
shrl
and
jbe
inc
addr16
sbb
mov
ljmp
sti
ret
loopne
sub
in
push
bnd
and
decl
inc
scas
jnp
aad
sub
out
movsl
sub
call
inc
add
es
xor
cwtl
inc
inc
xchg
addr16
add
jge
out
fxch
loope
pop
std
pushl
inc
mov
sub
mov
mov
sbb
nop
ja
lea
fstps
jmp
loop
loope
daa
imul
add
frndint
push
ss
mov
pushl
push
pop
scas
and
xchg
mov
jge
repnz
xor
loop
dec
mull
decl
lcall
mov
adcl
adc
xor
lret
iret
pushf
mov
inc
btr
pop
mov
loop
adc
dec
jmp
push
imul
bnd
imul
mov
enter
mov
incl
and
cmp
sub
sbb
out
testb
icebp
sub
push
ss
incl
mov
jne
test
pusha
cmp
push
bound
mov
imul
jbe
bound
lcall
jae
xchg
shrl
cltd
cmp
lock
pop
xchg
incb
jl
loopne
scas
adc
adc
dec
imul
cmp
push
test
loopne
jbe
aaa
rcrb
fistpll
test
loope
sub
push
jl
pushf
cli
cmc
xor
lahf
sub
push
incl
adc
mov
pop
movsl
ret
or
jbe
cmp
std
scas
ret
popf
mov
insl
push
ljmp
xor
xchg
orl
pop
arpl
int3
in
jns
xlat
inc
and
call
mov
push
pop
mov
sbb
repnz
sub
sub
push
loopne
stc
decl
jecxz
shll
dec
rcl
jge
push
stos
xchg
jae
cmc
mov
ret
lds
test
inc
das
lret
push
sbb
out
xor
cld
jne
xor
test
test
jle
fsubs
pushl
dec
xorb
pop
nop
inc
outsl
jns
lret
nop
rcll
mov
adcl
clc
push
mov
test
pusha
pop
mov
inc
aad
ljmp
hlt
aad
sbb
push
mov
mov
push
jns
add
xchg
ljmp
ficoms
les
inc
push
fdivr
loopne
popa
dec
stc
dec
adc
pop
adc
mov
ds
call
das
or
les
jae
stos
loope
push
std
test
leave
xor
sahf
cmp
pushf
lods
js
test
decl
fldlg2
push
ljmp
add
cmp
adc
call
cwtl
cmp
es
and
push
jns
mov
out
sub
nop
pusha
inc
cli
ljmp
ret
sahf
decb
pop
jle
int
add
inc
cmp
jmp
pop
jge
pop
sahf
mov
clc
in
out
push
js
pop
loop
fists
je
test
push
push
sub
add
scas
sub
ljmp
xor
inc
or
aas
movsl
sti
inc
call
add
mov
mov
and
adc
pop
aas
addr16
test
int3
push
call
orb
push
mov
decb
popa
ss
dec
push
adc
sahf
rcrb
call
and
add
je
push
mov
arpl
jae
scas
adc
sbb
fistpl
xchg
sbb
jg
ljmp
seto
loope
sbb
and
mov
lahf
in
pushl
cmp
adc
xchg
movsl
movsb
or
lcallw
add
mov
push
sub
fistpl
inc
and
loope
dec
mov
repz
pop
lret
fisubrl
pushl
mov
mov
cmc
push
push
int
cmp
and
adc
and
incl
cld
xchg
pop
stos
loop
push
fildll
mov
leave
inc
push
cmc
xchg
sti
ljmp
sub
sub
push
imul
std
ret
push
jns
push
int3
fsts
bound
incl
pop
movsb
and
sti
push
stos
xor
cmp
xchg
retw
sbb
js
std
pop
int
lods
sbb
loope
decl
ret
cmp
jecxz
flds
cwtl
mov
xlat
jne
ljmp
mov
aaa
xchg
push
insb
fisubrl
sti
xchg
push
lahf
daa
repz
mov
movsl
ffree
inc
aam
inc
dec
mov
xor
push
jp,pn
popa
push
decl
incl
clc
add
outsb
inc
ret
mov
clc
das
hlt
ret
xor
rcrl
add
adc
ljmp
arpl
and
fildl
jb
push
and
dec
and
test
daa
scas
insl
or
ja
jge
ds
negl
xorl
cwtl
ljmp
lret
mov
stc
and
sbb
jb
into
aam
das
xchg
out
cmpsb
insl
lock
ljmp
fs
stos
jecxz
stc
sti
push
lcall
jl
jg
in
scas
testb
sub
bound
incl
mov
dec
xchg
cmc
insb
in
rorl
and
arpl
fiaddl
xorl
mov
push
out
adc
or
sahf
fisttps
xchg
aam
push
xchg
push
mov
pop
xlat
test
push
xchg
test
dec
cmp
call
in
xlat
mov
aad
mov
sub
xchg
fmuls
push
leave
push
mov
call
adc
cmc
das
add
push
fbld
xchg
dec
es
xchg
lea
insb
cli
dec
call
sbb
test
mov
ds
inc
mov
pop
xchg
pop
int
lret
dec
dec
inc
mov
negb
pop
out
inc
jp
and
sub
dec
aad
inc
jmp
shrl
sar
fadds
divb
lea
aas
fwait
jg
jecxz
xorb
ljmp
out
popl
hlt
in
dec
push
test
stos
lods
mov
ret
imul
outsl
mov
mov
mov
xorb
rorl
insl
out
mov
dec
in
das
aaa
and
adc
in
jge
aam
jmp
mov
scas
inc
lds
adc
rol
outsb
ljmp
push
pop
mov
incl
int3
scas
lahf
mov
mov
mov
sub
fsts
loopne
mov
add
push
loopne
pushf
fstpl
mov
insl
lods
hlt
pusha
jl
mov
sbb
cmp
insl
addr16
dec
sub
xchg
ljmp
repz
adc
in
shll
std
cmp
cltd
call
push
in
aad
sub
bound
push
pop
dec
sub
xor
mov
inc
icebp
inc
inc
outsb
test
adc
xor
lret
cltd
jo
sbb
ljmp
addr16
in
filds
pop
xchg
stos
mov
cmp
and
sub
jg
outsb
bnd
inc
push
pop
daa
jo
lods
lcall
cmp
insl
push
lret
and
jg
ljmp
pop
pushl
ja
push
push
loopne
fstpt
xchg
int
mov
std
decl
xor
test
pop
mov
and
test
stc
into
push
or
sub
mov
mov
call
and
das
mov
rorl
push
or
jle
idivb
push
pusha
push
fmull
clc
fimuls
pushl
mov
loope
xchg
and
int
xor
xchg
xor
jne
std
cmpsb
jge
addb
mov
mov
mov
or
fstl
int3
xchg
enter
and
loop
loopne
jns
add
aam
push
fwait
xor
adc
bound
cmp
clc
pop
mov
push
mov
mov
mov
out
xor
dec
cs
xchg
stos
lcall
scas
add
inc
inc
jle
mov
popf
add
ret
dec
sub
std
mov
and
inc
mov
in
add
xchg
enter
stos
popa
lcall
jge
clc
mov
jg
mov
mov
mov
popf
aas
fnstcw
test
out
inc
out
cs
clc
push
clc
in
pop
fldt
sbb
leave
aam
mov
sbb
mov
movsl
mov
movsl
pop
jle
jnp
shr
les
fstl
lock
lahf
sub
add
and
stos
ret
call
xchg
jnp
mov
push
push
adc
dec
and
pop
out
clc
mov
bound
data16
daa
push
or
icebp
lock
call
ljmp
pushf
iret
push
inc
push
inc
ljmp
cmpsl
adc
jbe
mov
inc
jne
inc
outsl
lock
add
xor
sbb
mov
mov
jmp
fdivrl
enter
mov
cmc
pop
mov
dec
mov
ljmp
leave
sbb
stos
jnp
push
jns
jo
int3
mov
add
mov
fnstenv
enter
loopne
fs
pop
mov
movsb
out
js
mov
fdivp
inc
subb
ret
sbb
cmp
pop
pusha
adc
mov
mov
lods
mov
gs
xchg
shlb
push
enter
pop
addb
add
mov
cld
pop
sti
aaa
mov
mov
das
int3
push
push
in
aad
cltd
lcall
cmpsb
rolb
pushl
rcl
push
xchg
xchg
or
pop
dec
mov
pusha
int3
xor
sbb
inc
jg
jmp
push
mov
push
shlb
out
push
jl
loopne
frstor
push
shl
aad
cmp
push
ret
pushf
inc
orb
jg
dec
xchg
popa
push
inc
xchg
and
pop
xor
rolb
test
dec
xor
push
pop
pop
inc
or
add
adc
out
clc
call
pop
mov
cltd
inc
push
sbb
mov
in
dec
inc
push
mov
fidivl
ret
iret
popf
cmp
lret
jne
dec
stos
roll
cmp
inc
xchg
nop
clc
aam
jg
dec
sub
dec
sbb
mov
iret
mov
mov
mov
jae
and
cmp
push
lahf
ret
es
lret
nop
jle
outsb
cmpsb
repnz
sbb
xor
cwtl
inc
sub
mov
mov
fsubrs
sbb
lods
add
or
pop
in
sbb
fistps
ljmp
push
pop
jmp
sub
mov
sahf
push
xchg
jae
push
in
jne
popf
mov
xchg
aam
aam
ljmp
clc
or
ja
dec
mov
pop
shrd
sub
stc
xlat
ljmp
rcl
mov
inc
arpl
gs
mov
jmp
push
fstl
pop
add
nop
es
loop
test
pop
cmc
dec
pop
aam
adcb
lcall
mov
or
popf
insl
das
dec
ffree
sahf
mov
fiadds
sbb
xchg
imul
cmp
ljmp
sub
imul
ss
and
lea
dec
pop
jns
popa
lds
dec
add
movsb
pop
icebp
sti
mov
add
pushl
stc
outsb
jns
mov
mov
dec
push
ret
xchg
push
xchg
sub
cmpsb
rcl
dec
mov
into
mov
sub
fs
repz
cwtl
outsb
pushl
cld
xor
jae
pop
imul
test
cmpsb
aas
push
cmp
xchg
jmp
and
pop
jne
mov
xor
and
arpl
neg
lret
dec
add
or
mov
mov
pop
mov
adc
xor
add
sbb
fsub
rol
sub
mov
add
movsb
xchg
mov
push
push
fwait
push
cld
ljmp
lods
in
mov
lea
loop
stos
jge
cli
add
jnp
imul
or
dec
adc
stos
mov
mov
aas
and
jle
movsl
cmp
incl
daa
dec
or
xor
stos
mov
lock
add
rorl
lock
jmp
jae
and
dec
fsubrs
xchg
mov
std
shll
addr16
mov
daa
mov
cmp
incl
loope
ds
testl
sbb
xor
lahf
cld
cmp
mov
add
sub
stos
inc
add
or
out
and
cltd
es
jnp
mov
icebp
or
shl
cmp
cmp
cmp
sub
xchg
outsb
dec
mov
cli
subl
lret
adc
or
mov
hlt
pushl
stos
xchg
jns
shl
inc
inc
jmp
dec
test
cmpsb
call
push
pushl
scas
and
gs
and
push
xor
add
call
jge
push
lods
mov
frstor
pop
dec
loope
and
pop
adc
cmpsb
call
stos
sub
cmpsl
mov
out
int3
sahf
mov
nop
xchg
mov
leave
xor
lcall
push
icebp
repz
sbb
movsb
push
push
call
test
fistpl
in
in
adc
mov
sub
push
mov
dec
inc
aas
call
in
sub
dec
jne
or
mov
adc
rcll
loop
scas
cmp
jno
je
jne
sahf
movsl
pop
cld
test
adcb
or
aam
xchg
lods
fidivrs
icebp
cs
cltd
shl
jns
mov
mov
ds
stos
or
les
push
cli
rclb
and
rolb
inc
leave
mov
mov
sti
stos
dec
sub
mov
add
xchg
or
push
mov
xor
xchg
sbb
jbe
test
push
sub
addr16
ret
xchg
inc
fidivrl
cmp
out
xor
or
push
push
push
dec
hlt
dec
xchg
pop
les
incl
push
mov
movsb
xchg
jno
mov
mov
cs
jns
int
dec
mov
lods
fdivrl
cmp
mov
js
ss
sub
push
sub
push
mov
clc
iret
jno
xchg
fnstcw
xchg
sub
aas
cmp
jle
sar
adc
jecxz
jno
dec
inc
and
stos
adc
xchg
mov
jl
movups
adc
scas
inc
scas
inc
xchg
ljmp
aas
cltd
inc
add
test
pop
mov
pop
cmp
fistpll
fsubrs
cli
lds
mov
and
xor
out
adc
or
lcall
imull
ja
inc
inc
std
in
std
in
ss
in
inc
loop
and
add
in
stc
aas
in
or
dec
mov
cmpsl
inc
xor
cmp
pushl
inc
or
scas
or
cmp
repz
rcrl
dec
mov
shrb
popa
jg
dec
imul
xchg
loopne
pop
mov
scas
roll
lock
push
data16
xchg
dec
cmp
in
add
out
mov
and
push
cmp
fnstcw
xor
sbb
mov
std
incl
xchg
mov
sub
popf
or
subl
stos
adc
push
adc
out
aas
out
andb
mov
push
sub
push
sub
inc
lea
bound
pop
pusha
xchg
out
clc
cmp
xchg
add
fnstcw
clc
bound
xor
cli
or
ljmp
mov
xchg
popf
loopne
or
sahf
cmpl
lds
divb
mov
ficompl
inc
ret
out
mov
cltd
and
incl
movsl
lret
dec
divl
imul
xlat
sub
sahf
dec
xchg
mov
xchg
in
ljmp
sbb
in
fnstenv
int
movb
xchg
outsb
adc
pop
enter
shl
xchg
cli
cmp
add
in
popa
imul
xor
inc
mov
ret
lret
stos
push
iret
sbb
and
repz
cmp
std
cld
es
enter
dec
mov
dec
push
push
mov
pusha
xchg
mov
mov
shll
cmpsl
mov
push
data16
call
jl
push
fsubrp
xchg
shrl
mov
mov
fwait
push
icebp
lret
inc
adc
jae
jnp
inc
jmp
lods
push
cmpb
xchg
sub
arpl
mov
aam
pop
pop
inc
cltd
imul
movsb
xor
mov
push
fcoml
pop
shr
push
out
bound
fisubrs
jp
sbb
add
jg
cmp
dec
enter
mov
push
in
inc
orb
push
jmp
ljmp
sub
pusha
cmp
inc
cld
pop
test
dec
out
mov
arpl
cmp
addl
movsb
fisttpll
pop
adc
push
inc
xchg
and
pop
int
pop
cmp
test
mov
mov
dec
sub
outsl
incl
arpl
mov
ljmp
movsl
jae
sbb
fmuls
cmp
xchg
es
jno
ss
ljmp
pop
mov
js
decl
jge
or
sub
bound
lcall
mul
test
mov
push
icebp
loope
in
jb
xchg
out
xchg
imul
jg
add
xor
push
and
push
cmc
movsl
mov
lret
insl
std
iret
push
repz
outsl
jne
out
test
outsb
mov
mov
jg
ljmp
test
std
cmp
adc
mov
decl
and
jmp
cmp
ljmp
dec
inc
movsb
ret
imul
mov
mov
ret
sbb
or
pushf
in
add
jb
cmc
bound
xlat
mov
fwait
pop
pop
or
jg
jo
add
sbb
inc
rcrl
mov
aaa
sbb
fwait
mov
inc
aaa
mov
adc
mov
add
stos
pushf
push
mov
lods
dec
inc
mov
pop
fnstenv
sub
jmp
xchg
jnp
cld
lea
adc
push
pop
ja
pop
adc
test
fwait
and
pop
or
sarl
push
xchg
xor
inc
inc
sbb
jl
ljmp
ja
leave
adc
jge
sarb
xlat
addb
loopne
adc
cmp
jnp
outsl
push
lds
push
out
xchg
pusha
adc
nop
mov
adc
sbb
lcall
enter
xchg
fwait
xorl
rolb
jl
cmp
xor
enter
in
loop
decl
mov
cmpsb
push
adcl
mov
icebp
jb
dec
js
mov
je
pop
lock
pop
jne
int
mov
shl
icebp
jg
sub
mov
or
pop
jns
negl
repz
xlat
movsl
lods
fcos
lcall
jge
adcb
add
lea
pop
mov
das
mov
ljmp
dec
push
sbb
jno
aam
cmp
sub
sbb
lret
inc
pop
fst
sub
jle
xchg
jle
jmp
mov
cmp
jp
sbb
mov
adc
jecxz
shll
pop
fstpt
mov
call
imul
insl
xor
or
xchg
sbb
andl
mov
jmp
xor
jge
mov
add
inc
decl
loope
push
sbb
les
into
hlt
cmpsl
imul
cmp
mov
cmp
adc
mov
test
jne
loopne
sub
stc
jle
lods
pop
mov
sub
stos
and
cmc
ljmp
mov
xchg
int
sahf
and
int
ljmp
sahf
decl
testl
jo
lret
mov
leave
in
sub
mov
addr16
test
test
addb
mov
jmp
mov
aad
mov
jns
cmp
inc
js
mov
rolb
jb
jae
pop
push
adcl
jl
outsb
push
mov
mov
in
cmp
and
mov
ret
pop
sub
call
mov
mov
movsl
in
or
sahf
arpl
cmp
leave
mov
sbb
fistpll
mov
into
ret
and
add
clc
jge
adc
mov
inc
hlt
out
sbb
adc
imul
add
push
shlb
int3
adc
cmp
lock
or
movsl
cmp
dec
push
mov
mov
je
aad
xchg
out
push
push
sbb
movsl
jp
pushl
iret
adc
decl
push
movzwl
dec
insb
push
cmp
and
popa
cmp
xchg
pop
cld
incl
shl
jmp
lret
push
jle
cli
fmulp
pop
xchg
push
inc
cmc
das
cmpsb
lock
test
cs
je
xchg
icebp
jmp
jl
push
pop
loope
pop
inc
jno
jbe
sbb
jnp
mov
mov
mov
scas
dec
xor
repnz
aam
mov
sub
call
loopne
jg
cmp
push
push
int3
pop
idivl
sub
mull
pop
cwtl
lret
xor
ja
test
push
xor
push
popa
lock
outsb
sbb
je
scas
or
in
push
arpl
int3
rolb
pop
add
sbb
sahf
pusha
sub
xchg
decl
sti
mov
pop
cltd
mov
add
leave
enter
pushf
jl
cwtl
sub
push
sub
xchg
xor
lods
jae
cltd
ret
test
int3
mov
pop
fdivr
jmp
mov
fucom
fneni(8087
push
xor
ss
jns
and
or
lcall
sub
sbb
adc
aaa
imul
cmp
int
adc
loop
mov
sbb
inc
cli
add
sub
inc
hlt
cmp
int
push
pop
mov
popa
or
xchg
enter
mov
fstpt
adc
mov
in
faddl
js
arpl
ljmp
inc
mov
sub
les
stc
inc
mov
mov
rcrl
iret
jmp
fbld
mov
or
out
shlb
incl
movsl
pushl
cmp
jge
mov
jmp
add
iret
xchg
mov
addr16
aaa
out
ljmp
xchg
rorb
dec
mov
loop
mov
dec
add
xor
sub
fimuls
pushf
mov
ja
add
adc
mov
decl
cmpsl
test
sbb
or
pop
mov
adc
and
sub
in
lods
incl
int3
test
fdivr
lock
hlt
movsb
in
test
in
inc
jmp
cli
fnsave
or
mov
dec
clc
pop
dec
sbb
cmp
insb
inc
das
adc
call
adc
fnstsw
jmp
fptan
mov
mov
faddl
in
xchg
jnp
out
pushl
dec
pop
and
adc
sbb
inc
push
dec
mov
mov
pushl
cld
pushl
mov
add
inc
in
data16
addr16
hlt
add
add
imul
lds
add
pop
in
jb
dec
push
lds
pushl
lea
jmp
sbb
imull
add
aam
mov
sub
call
rclb
dec
xlat
cmc
les
mov
adcb
lds
pop
pop
pop
push
scas
mov
pushf
fnstcw
adc
fcoml
add
popa
mov
fcomp
inc
lahf
pop
scas
sbb
js
aad
xlat
add
cwtl
and
decl
insb
pop
movsl
add
xchg
mov
push
into
inc
adcb
out
jp
or
inc
inc
sbb
incl
or
cmp
dec
imul
mov
mov
inc
inc
or
sbbl
fwait
decb
pop
mov
xor
adcb
add
inc
test
xor
fsubl
mov
loope
cmpsl
pop
add
push
inc
orb
addr16
fisttps
test
roll
push
mov
cmp
mov
pop
adc
aas
xor
aam
cmp
inc
push
loop
ljmp
jne
bound
scas
out
mov
xlat
aas
mov
stos
shll
cmp
sbb
rcll
ljmp
xor
stos
push
mov
sbb
pusha
test
push
push
pop
mov
sub
data16
bound
mov
decl
push
sbb
outsl
pop
pop
cwtl
adc
movsl
stos
dec
mov
mov
je
fnstcw
cmc
cmp
imul
xor
js
fwait
mov
les
cld
mov
aaa
ja
inc
int3
sbb
addl
sub
daa
pop
mov
inc
push
adcl
jno
icebp
inc
into
dec
test
pop
cld
in
test
xorb
jns
inc
push
fdiv
incl
inc
mov
push
mov
out
mov
decl
xchg
add
xor
adc
sub
cwtl
scas
cmpsl
push
jno
clc
lcall
jp
mov
scas
in
mov
xchg
dec
adc
decl
add
mov
fdivs
mov
arpl
js
push
movl
cld
pushl
inc
mov
push
mov
sbb
mov
imul
scas
and
mov
ljmp
push
call
aas
repz
add
mov
fdiv
decl
cltd
movsl
pop
lret
xor
sub
jle
fisubrs
aaa
cld
call
loopne
or
lock
push
insb
dec
push
ror
js
cmp
movsb
test
lods
xchg
inc
sbb
shll
xlat
repnz
mov
sbb
and
pushl
test
in
aam
mov
jmp
dec
inc
mov
mov
sub
lcall
jae
iret
mov
pop
rorb
cld
or
mov
das
cmp
cld
pushl
enter
fsubrp
mov
dec
in
sbb
icebp
sbbb
shl
dec
push
mov
mov
mov
push
adc
lret
insl
in
dec
jg
jle
mov
sbb
mov
dec
out
out
xchg
jg
xchg
ret
mov
fcmovnbe
or
mov
testl
inc
adc
inc
cltd
data16
lcall
or
call
loopne
arpl
adc
jle
call
inc
incl
dec
cmp
xchg
mov
mov
mov
test
pushl
sbb
into
jle
mov
dec
mov
outsb
xlat
push
push
fiadds
adc
push
sti
or
sahf
or
push
lret
inc
pop
xchg
rolb
ljmp
scas
xorb
cwtl
add
push
aam
cmpsb
mov
ljmp
sub
mov
ret
inc
out
loop
shr
arpl
and
pop
add
icebp
jmp
push
push
daa
xor
mov
mov
aaa
outsb
ljmp
pop
imul
roll
data16
fcmove
out
sbb
es
pushl
pop
inc
out
pop
out
xchg
dec
and
sar
shlb
and
inc
decb
ficoms
insl
call
call
outsb
cmp
xchg
shl
add
sub
mov
mov
std
inc
leave
stos
stos
dec
insl
test
dec
stos
jecxz
and
sub
mov
mov
lock
xorb
icebp
add
fldcw
les
push
jmp
out
mov
dec
into
fdiv
incb
lea
or
push
xchg
pop
cli
lock
inc
xchg
cli
in
ljmp
ss
jne
inc
mov
out
pop
les
jle
cmp
dec
ljmp
dec
pop
inc
das
inc
mov
rorb
enter
xor
jb
and
push
lcall
or
fidivrs
cmpsb
dec
inc
and
repnz
xchg
mov
mov
mov
sbb
out
inc
and
addr16
imul
pop
cmp
call
fcmovnu
loope
popf
mov
adc
hlt
pop
jge
or
ja
push
out
xlat
jmp
cwtl
punpckhwd
push
ja
push
fidivrl
pusha
call
call
mov
repnz
pop
ret
inc
xchg
cmp
pop
dec
call
movsl
scas
push
jmp
mov
dec
mov
out
lock
std
lea
movsb
mov
aas
enter
xor
mov
incl
nop
cmp
out
push
fadds
test
sbb
popa
inc
and
popa
in
rolb
jmp
decl
out
roll
fucom
daa
daa
sti
int3
mov
icebp
incl
inc
jecxz
psrlq
in
ds
repz
pop
fucomp
lock
lcall
ds
arpl
test
out
mov
or
mov
jmp
jge
imul
sub
pop
push
enter
jp
sub
insb
pop
stc
out
fsubrl
jp
jmp
jne
cli
iret
mov
out
jmp
xor
jne
out
mov
aam
add
jg
jmp
lcall
jg
push
popf
std
xchg
add
add
add
or
push
and
push
out
pop
mov
xor
cmp
or
xor
fs
jb
ret
jmp
lcall
xchg
cmp
orl
aad
fstl
adc
clc
mov
fildll
pushl
jmp
mov
cmp
lret
std
push
ljmp
pop
clc
cmp
std
jge
sbb
in
mov
lds
out
adc
or
incl
pop
lret
jbe
scas
mov
stos
cmpb
insb
rcrl
incl
mov
sub
inc
into
xchg
ret
inc
test
cmp
test
cmp
lods
inc
mov
adc
ficoml
xor
adc
adc
icebp
sub
mov
stc
dec
jb
pusha
fstl
adc
sbb
aaa
jmp
push
dec
mov
mov
jle
int3
push
jge
mov
cltd
lcall
xor
jecxz
jns
sarl
js
aas
jecxz
xor
incl
or
inc
cmpsb
xor
testl
cmc
cmpsl
out
icebp
push
stc
jle
divb
std
insb
lahf
push
cmp
imul
or
enter
mov
cmp
pushf
jg
incl
mov
pop
les
dec
or
sbb
scas
xor
sbb
fdivs
das
bound
mov
mov
rclb
xchg
and
call
testl
push
xor
clc
push
or
out
mov
faddl
jmp
jp
nop
fimull
lods
rcll
fmull
mov
mov
pop
js
shrb
jle
into
dec
dec
das
jp
adc
jnp
jmp
ljmp
iret
imul
rcrb
push
imul
xor
lds
adc
incb
pop
aad
cltd
or
das
ja
aaa
std
jmp
cli
mov
and
mov
add
and
popa
ljmp
into
sarb
or
push
inc
jg
or
fdivs
incl
cmp
mov
icebp
and
and
pop
xchg
lock
jno
outsl
lods
outsl
outsb
mov
lea
ljmp
outsb
stos
decb
loope
cmp
mov
test
es
enter
push
pushf
out
clc
incl
mov
fstps
jmp
es
jge
shll
or
decl
add
jg
xchg
xor
cmpsl
pusha
lds
lea
in
dec
stos
push
mov
jmp
xor
ja
icebp
das
cmp
sbb
fistl
jo
or
mov
xor
push
hlt
out
push
dec
out
dec
test
js
repz
or
mov
mov
insb
scas
aam
mov
nop
dec
cmp
xchg
movsl
xchg
insb
mov
stos
inc
leave
mov
call
cld
pop
out
mov
pop
lods
dec
call
aas
js
push
mov
jnp
addr16
je
int
jg
into
rclb
call
cli
push
xchg
aad
jb
push
pusha
add
adc
pop
xchg
aas
insl
push
jle
ja
jb
mov
gs
jo
out
jg
hlt
jle
pop
add
ss
xchg
xor
cmp
adc
jg
cmp
inc
ljmp
adc
push
xchg
or
jno
inc
add
mov
mov
bound
add
sub
test
add
lods
or
jmp
cmp
imul
addr16
fs
pop
push
je
mov
jns
loope
ljmp
imul
sub
popf
aaa
xor
in
cmpsb
into
test
lcall
jg
fwait
adc
mov
repnz
repz
adc
add
mov
lret
xchg
pushl
mov
lcall
ljmp
mov
jo
pop
insl
dec
pop
clc
lods
enter
js
in
inc
aas
repz
add
mov
add
cmc
notb
test
adc
decl
out
push
ds
test
aaa
mov
test
icebp
mov
vdivpd
cmp
lock
lcall
int3
pop
xlat
sarl
mulb
sub
jb
jns
popa
mov
arpl
addl
jae
or
ljmp
mov
cmp
out
cmp
mov
xchg
in
les
and
push
popa
decl
jg
push
shlb
or
add
cltd
call
add
hlt
push
fnstenv
push
pop
fs
adc
xor
fcoms
jne
mov
sub
repz
inc
push
jns
sarl
adc
adc
pop
mov
adc
decl
inc
dec
pop
mov
jge
mov
in
or
ss
fwait
loopne
mov
notb
push
push
data16
dec
fisubrl
sub
call
insb
dec
lret
and
inc
addl
inc
inc
int3
mov
and
fidivl
push
fisubrl
ljmp
or
cld
sub
xchg
add
les
fcompl
xchg
lods
cmp
out
ljmp
fisubrl
xor
jnp
xchg
and
loopne
pop
mov
mov
xor
in
leave
mov
pop
sbb
lret
add
cmp
in
leave
sub
xor
incl
ret
shll
mov
xchg
inc
mov
cmc
sbb
scas
xlat
sbb
pushl
cmp
addr16
cbtw
sub
mov
inc
nop
scas
call
sbb
mov
clc
xchg
or
pop
mov
outsb
in
push
jb
jbe
pop
pop
pop
scas
inc
mov
fistpll
flds
dec
xchg
iret
popf
movsb
sub
outsl
jg
sahf
ret
jmp
inc
incl
pop
mov
xor
ret
xchg
jb
dec
push
ret
pop
ja
mov
call
mov
inc
adc
lods
push
iret
mov
sub
aas
xlat
jne
in
pop
lods
push
fidivrl
js
sub
push
fwait
movsl
popa
pop
jle
orb
lret
stos
pop
inc
jge
cmp
cmpsl
mov
incl
push
dec
adc
out
loopne
mov
mov
popf
add
rcr
fsubrs
loop
shl
jb
pop
lock
push
lods
jo
rorl
pop
sub
add
inc
push
outsb
adc
push
subl
stos
jmp
pop
cmp
cmp
loop
jmp
jno
or
setnp
ljmp
insb
inc
out
shlb
stos
push
sbb
jmp
outsb
xchg
or
mov
dec
xchg
insl
cwtl
imul
ja
cwtl
enter
xchg
mov
decl
xorb
arpl
lock
mov
push
ret
imul
dec
pusha
ffree
shl
call
mov
ljmp
sbb
xor
fbld
shl
push
cld
fistpll
jecxz
inc
and
cmp
jle
xor
fbstp
and
mov
pop
jno
sub
jo
push
push
sahf
nop
mov
dec
jmp
je
in
add
push
jb
mov
mov
sar
pushl
imul
bound
mov
daa
xchg
push
outsl
loope
out
aas
xchg
push
or
data16
inc
cld
mov
fs
imul
arpl
pop
inc
dec
mov
call
std
push
sarl
das
faddp
jle
out
addr16
je
lret
sbb
faddl
sahf
push
lcall
ljmp
adc
adc
xor
push
rorb
icebp
lahf
jp
dec
ljmp
lret
rcl
jge
push
jp
xchg
xchg
gs
push
es
je
mov
aad
push
sub
leave
pop
xchg
je
lcall
mov
jge
adc
cld
ljmp
imul
add
xchg
jp
scas
pop
into
lcall
out
jg
mov
loopne
hlt
imul
lcall
movsb
pop
rcrb
dec
call
cmp
cmp
clc
dec
mov
inc
enter
inc
or
mov
into
mov
jg
je
mov
imul
mov
or
cli
les
dec
repz
fildll
jp
mov
jns
pop
sbb
mov
call
movsb
int
ja
jle
mov
mov
mov
add
fldcw
lea
xchg
lcall
mov
insl
adc
xchg
push
sub
cli
push
lock
pusha
outsb
push
inc
xchg
mov
cli
xor
jmp
fsincos
jl
call
dec
lret
stos
pop
sub
jp
dec
xchg
leave
movsl
sub
jmp
pushf
in
push
fstl
sbb
test
call
aas
or
inc
xor
sbb
jg
ljmp
sbb
jb
stos
xor
cld
imul
sti
sub
sti
inc
lds
xchg
cmp
push
in
push
iret
fcompl
idivl
decl
cli
xor
stos
mov
xchg
rcl
daa
xchg
pop
ljmp
jne
jns
push
je
stos
js
and
cmpsb
xchg
hlt
sbb
inc
pop
flds
add
enter
sbb
jmp
dec
inc
xchg
jmp
test
mov
add
fwait
bound
jne
movsl
aaa
outsb
insb
and
ljmp
xor
dec
call
dec
pusha
cmp
mov
cmp
ss
stc
sub
data16
out
cli
and
push
mov
sub
or
lock
dec
mov
cmpsb
pop
stos
ljmp
enter
adc
lcall
mov
pop
adc
ljmp
mov
ljmp
or
lods
scas
jp
cmp
cmpsl
adc
clc
mov
shrb
jg
xor
mov
subl
fcmovbe
incl
fucomip
sub
out
xor
push
jno
and
mov
inc
mov
push
mov
xchg
xor
insb
mov
xchg
mov
mov
fmuls
int
out
ljmp
sar
cmp
in
sar
lock
cmp
into
lahf
pop
negb
mov
ljmp
fdivrs
mov
stos
cs
fxch
cli
xor
jmp
imul
and
sub
in
push
xchg
movsb
movsl
mov
add
mov
fcomps
push
in
jle
jge
mov
inc
into
mov
mov
jo
lcall
and
jb
inc
or
insl
ret
mov
xchg
push
mov
jmp
decl
sub
stos
xchg
imul
mov
push
data16
or
setl
pusha
fsubl
subb
add
jge
mov
in
adc
mov
jmp
inc
inc
lcallw
jmp
out
mov
aam
rcrb
or
fs
pop
cld
add
jge
loopne
inc
or
lahf
push
or
test
mov
adc
mov
ljmp
or
scas
cmp
xor
jmp
fdivr
lods
clc
sbb
test
adc
call
loopne
in
addb
lret
cmp
fdivrp
adc
adcb
call
loopne
xor
inc
jmp
ret
imul
push
mov
sbb
imul
in
xor
jb
ja
xchg
dec
fnstsw
jg
push
mov
mov
or
bnd
inc
test
test
fcomip
stos
fisttps
xchg
xor
dec
jo
mov
jecxz
sub
imul
jecxz
add
xchg
mov
adc
lcall
xor
decl
inc
js
adc
daa
jns
sbb
bnd
loope
mov
sub
out
push
xor
mov
xor
nop
lods
test
in
push
sbb
es
in
push
push
jg
pop
mov
sub
imul
lretw
inc
fwait
sub
cmpsl
aaa
lahf
or
nop
das
in
mov
mov
jg
icebp
les
fstl
lods
mov
jne
push
jge,pt
adc
decl
sbb
xchg
stos
add
mov
fisubs
inc
stos
aad
xchg
call
fisubs
movb
mov
bound
es
decl
aam
addr16
mov
into
jae
cmp
psubsb
sub
decl
sbb
pop
cmp
mov
xchg
mov
sbb
push
dec
cld
cli
and
cmp
pushl
mov
outsb
std
aam
lret
inc
mov
jmp
cli
sahf
mulb
xlat
or
mov
jae
cmp
decl
ds
sbb
or
jne
loope
clc
jmp
cli
cmp
std
cmpb
or
add
insl
cs
decl
push
test
mov
iret
xchg
mov
jmp
lcall
int
xor
incl
and
lock
loope
dec
test
rcrb
push
mov
out
insl
mov
aaa
int3
lods
arpl
fstps
scas
es
mov
adc
cs
cmp
negb
and
call
xor
and
sbb
jmp
movsl
rcrl
ja
jbe
sub
push
call
jbe
lods
inc
outsb
or
pushf
add
aaa
test
sub
jge
cltd
std
mull
mov
push
call
std
sub
out
push
mov
adc
sahf
lret
les
push
jnp
xchg
loopne
push
dec
std
pop
lcall
mov
add
imul
add
jecxz
and
mov
sbb
outsl
pop
jg
or
xor
mov
adc
cld
sub
shrl
jp
call
movsb
pop
xchg
mov
xchg
sbb
scas
pushf
sub
test
fdivrs
ljmp
sahf
stos
ljmp
xorb
inc
in
xor
aaa
jnp
cmpsl
out
xchg
iret
mov
call
nop
in
imul
mov
out
cltd
pushf
ds
xor
pop
mov
fwait
gs
das
mov
je
sbb
clc
fs
jl
mov
push
push
fisubs
mov
lret
mov
fadds
out
xor
inc
add
cltd
fs
xchg
push
call
test
jg
jg
mulb
pushf
push
pop
add
adc
ss
sbb
sbb
pop
icebp
inc
mov
arpl
test
movsb
stos
aaa
add
std
nop
mov
inc
flds
jp
jo
mov
aam
xchg
test
test
es
inc
cmpsb
pop
push
xor
push
dec
and
cmp
aam
add
pushl
rcrl
into
mov
int
sub
lcall
test
lcall
and
loopne
repnz
mov
sahf
mov
and
push
out
fsubp
mov
repnz
fists
addr16
mov
insl
mov
stos
mov
stos
xchg
mov
stos
shrl
xchg
push
fwait
insl
call
adc
dec
fdivp
inc
iret
into
push
inc
cs
loop
popa
loop
addr16
cltd
sahf
adc
xchg
ljmp
add
hlt
jae
push
shlb
inc
sub
xor
mov
jg
mov
fdivl
les
mov
out
adc
inc
repnz
cmp
jecxz
ret
sahf
push
addr16
mov
cmc
cld
jbe
xchg
lods
xchg
stc
xchg
add
call
arpl
add
sbb
inc
or
mov
sub
cld
iret
xorb
adc
addr16
xchg
ret
shlb
lods
push
inc
stc
cmp
pushl
int3
stos
add
test
lahf
pop
mov
data16
loopne
sub
shr
xor
out
fcomps
xchg
int3
stos
xchg
xchg
dec
xlat
dec
sbb
cmpsl
daa
cmp
das
pop
orb
call
pop
sbb
lods
rorl
sbb
iret
ret
and
gs
pushf
into
pop
daa
or
add
loopne
inc
and
mov
pop
mov
cmpsb
movsl
cmp
daa
cld
inc
fisttpl
sbb
das
cli
incl
roll
jne
in
dec
jnp
mov
dec
inc
jg
cmp
fwait
notl
adc
and
push
aaa
inc
mov
mov
sub
arpl
xor
xchg
es
dec
insb
hlt
fdivrs
lcall
mov
add
inc
popa
andb
sbb
inc
or
stc
mov
jmp
push
jne
cmp
push
scas
lcall
jmp
jle
mov
mov
pop
cmp
call
lcall
std
cmc
das
jle
mov
test
push
jmp
or
call
pusha
inc
adc
jae
cmpsb
fidivrl
out
into
fwait
and
dec
mov
mov
stos
lret
in
jg
pop
adcb
fstp
test
sbbl
xlat
lcall
jo
mov
sub
imul
scas
jae
stos
js
jg
dec
pop
mov
out
and
mov
lcall
mov
inc
sbbb
mov
dec
shll
dec
inc
ret
xchg
xchg
lods
sbb
sbb
aaa
cs
mov
outsl
dec
mov
adc
jns
push
ds
add
and
mov
push
inc
or
cmc
dec
jno
aaa
cmp
test
arpl
fdivr
call
out
jne
int
je
lret
jmp
jbe
mov
popf
addr16
iret
pop
and
ss
out
clc
fsubrs
or
outsl
mov
pop
jle
or
or
mov
mov
cmp
mov
out
push
out
cwtl
jecxz,pn
pop
or
and
jmp
ret
mov
or
dec
js
inc
int3
inc
out
rcrb
fnstsw
stc
sbb
shll
ss
lock
decl
jmp
out
sbb
sahf
mov
nop
cs
xorl
or
dec
sub
rclb
mov
repz
out
jecxz
push
fwait
lock
test
add
xchg
pop
nop
mov
pop
rorl
push
sbb
aad
pop
insb
jg
adc
fcmovnb
in
xchg
push
loop
das
fbstp
fcmovnbe
push
xchg
js
xchg
xchg
adc
cmpb
and
and
pushl
mov
fisubrl
shl
pop
pop
stos
mov
mov
int
outsl
adc
jb,pt
mov
push
outsb
xchg
imul
xor
notl
fdivr
fdivr
hlt
notb
test
xchg
inc
lret
stos
aam
out
lcall
push
jp
je
push
enter
mov
push
fiadds
repnz
stos
lcall
out
incb
les
cmp
mov
mov
fs
arpl
xchg
jbe
jp
fisttps
sbb
ret
inc
xor
fsubrs
gs
iret
cwtl
repnz
cmp
inc
lods
cs
and
popa
push
test
mov
ljmp
mov
mov
sub
lds
clc
lahf
scas
mov
aaa
xchg
mov
es
jg
mov
mov
pop
ret
xchg
mov
fisubs
rorl
inc
mov
mov
sub
push
popf
fdivr
add
popf
adc
dec
in
rorb
xchg
pop
mov
xchg
jbe
incl
mov
mov
imul
dec
movsb
sarb
pop
inc
jb
pop
repnz
test
ds
repz
cli
test
nop
cmp
mov
icebp
rorb
outsb
xlat
cmp
mov
data16
movsb
ja
int
sub
or
add
dec
fnstsw
and
in
stos
in
adc
xchg
leave
mov
xchg
sbb
outsl
adc
insb
loope
pop
inc
push
into
fstpl
sbb
insl
jbe
dec
imul
ss
lcall
je
leave
divb
jb
inc
jl
cld
arpl
sbb
inc
inc
jne
mov
jg
mov
scas
dec
aaa
cmp
cwtl
pop
imul
sub
jp
push
inc
icebp
xor
loope
pop
ljmp
arpl
or
push
dec
inc
and
ja
and
push
test
fwait
xor
jae
ljmp
cli
rcrl
mov
add
dec
mov
add
sbb
push
das
cli
fldl
pop
sbb
xchg
jae
jnp
add
scas
shll
sub
jmp
je
lret
adc
std
repz
cmp
fcoms
inc
mov
pop
call
bound
pop
xchg
sbb
in
bswap
and
adc
adc
sbb
add
incl
mov
xchg
xor
mov
sbb
mov
jmp
cmp
add
mov
jl
dec
int
mov
adc
stc
mov
push
arpl
decl
incl
pop
daa
idivb
test
inc
orb
add
pop
pop
xor
jmp
mov
in
push
pop
les
lea
int
call
iret
xor
cltd
dec
lods
inc
decl
cmp
add
xlat
sbbl
fucomip
popa
aad
aas
jmp
jmp
cli
lds
es
roll
mov
xchg
bound
inc
push
inc
movl
or
dec
adc
jne
push
push
in
movsl
xchg
cmp
movsb
mov
orl
sub
inc
leave
jmp
adc
pop
push
das
out
or
call
dec
test
es
add
in
push
call
stos
imul
andl
decl
or
push
jnp
xchg
adc
gs
jo
fwait
bound
and
js
jns
ret
lds
int3
lcall
jb
lcall
jl
mov
jne
jg
lcall
cmc
leave
push
jle
jnp
data16
mov
mov
lcall
call
push
rcl
enter
mov
clc
dec
sbb
ret
sbb
repz
out
fistpll
xchg
ds
pop
pop
pusha
jl
or
xor
scas
or
cli
stc
xor
mov
xor
cmp
push
pop
lcall
xchg
xor
xor
test
mov
sub
es
call
push
addr16
dec
mov
mov
jne
mov
mov
and
cmp
cmp
stos
js
cmc
in
jno
dec
push
inc
repnz
in
push
push
js
dec
mov
stc
mov
ret
add
stos
xor
xor
test
lock
mov
daa
inc
repnz
mov
push
in
mov
mov
out
int3
shll
jno
sti
sub
daa
fildll
dec
fistpll
ljmp
xor
xchg
inc
xchg
fldenv
cmc
pusha
xchg
dec
and
aad
jo
stos
decl
lds
cli
rorl
xchg
jg
xchg
test
xchg
lock
bound
int
repnz
jmp
ljmp
pop
ds
mov
fists
jle
cmp
xchg
dec
pop
pop
fucomi
int
lods
fnsave
mov
push
dec
xchg
pop
out
cmp
js
cld
cmp
jae
sbb
enter
pop
sub
jecxz
add
and
insl
call
dec
mov
pushf
inc
add
cmp
xchg
andb
xor
movsl
in
les
or
push
mov
and
and
and
test
pop
es
scas
cmpsl
push
into
addl
mov
mov
iret
xorl
int3
lahf
push
in
push
cmp
addr16
dec
cld
decl
cltd
adc
fwait
sub
jl
in
stos
shr
mov
int3
inc
push
lds
lods
icebp
call
and
lret
mov
inc
enter
xchg
push
mov
inc
fmuls
cmpsb
lods
dec
cmp
sbb
jg
pop
sahf
dec
dec
insb
add
inc
pop
cwtl
mov
addr16
add
jb
ljmp
fdivrp
push
pop
xlat
jg
je
xchg
push
and
jae
mov
dec
out
loopne
xchg
mov
jnp
push
scas
stc
mov
aaa
add
rclb
leave
push
xchg
and
xchg
adc
xor
aad
dec
and
movsl
and
jg
imul
jb
mov
inc
sub
and
xchg
dec
inc
sub
inc
pushf
mov
call
jae
adc
icebp
cmp
fistl
mov
xchg
sub
xor
hlt
jecxz
cld
pop
jl
and
mov
cmpsl
into
mov
mov
aaa
cmp
add
test
push
out
and
call
jecxz
cltd
gs
fsubl
mov
xchg
test
stos
pop
fdivrs
cmp
outsl
in
call
roll
inc
rolb
adc
add
sbb
out
pop
fidivrs
mov
incl
pop
mov
sti
mov
rolb
andb
loopne
xor
in
sbb
pop
adc
push
xchg
push
repz
incl
mov
push
in
jmp
sub
jne
movsb
push
cmpsb
decl
dec
and
shlb
xchg
pop
mov
cmp
aam
shll
cmp
push
cmp
bound
mov
push
out
sbb
mov
mov
push
jbe
ljmp
xchg
pop
pushf
cmpsb
add
lods
mov
adc
and
sar
lcall
lea
or
mov
jecxz
inc
fsubrl
adc
sub
decl
jno
inc
sbb
inc
scas
adc
loopne
xor
idivl
mov
out
add
int3
cwtl
outsl
or
mov
lods
decl
jg
pop
aaa
add
test
push
push
lds
and
dec
push
xchg
cmpb
adc
mov
jmp
fidivrl
add
mov
push
inc
jbe
adc
cltd
fcom
test
jns
cmc
cmp
call
dec
adc
cltd
jb
mov
ss
in
nop
sbb
incl
jg
lret
mov
rorb
cltd
pushf
adc
xchg
pop
cwtl
sub
sbb
jle
or
mov
lahf
sub
mov
in
mov
add
call
jb
cltd
or
push
pop
sbb
cmpsb
mov
sub
movsb
mov
out
cmp
pop
mov
loope
sub
pop
shlb
imul
inc
jge
lret
mov
dec
jns
add
jg
push
pop
data16
adc
movsl
sub
ljmp
mov
repnz
and
int
mov
mov
push
cltd
and
sahf
ja
fldl
inc
pop
pop
das
inc
jo
push
add
out
inc
sbb
push
or
jmp
add
fwait
adc
push
mov
ret
mov
fisttpll
ds
mov
xchg
popa
xchg
movsb
push
mov
insl
fsubs
or
pop
xchg
lcall
mov
pop
ret
inc
sub
ret
sbb
sbb
add
sub
pushl
dec
xchg
cmp
gs
cmp
cld
and
lock
cmp
jmp
add
repz
ja
push
outsl
test
pop
aam
out
out
or
add
movsl
cmpsb
cmp
dec
sub
imul
stos
push
test
test
insb
pushl
push
dec
mov
inc
mov
sub
out
fnsave
shl
arpl
scas
and
fmuls
pushl
push
fsubrs
xor
insl
jnp
push
in
push
psubusb
xchg
jecxz
paddb
scas
cli
orb
mov
add
fmull
cmc
sub
test
iret
in
lcall
fisubrs
or
rcrl
lret
decl
ljmp
popa
aad
push
xchg
adc
aaa
fists
inc
cmc
insl
nop
daa
aaa
cli
mov
in
xchg
mov
xchg
pop
out
ds
rorb
jns
inc
dec
push
idivl
movsl
testl
mov
and
pushl
xchg
add
out
inc
push
icebp
mov
out
push
inc
shl
decl
xorl
sub
sub
push
pop
push
inc
subb
pop
add
into
incl
dec
lret
mov
sti
test
and
pop
mov
out
push
dec
enter
xor
sbb
cli
pushl
es
jmp
jb
test
xchg
push
ret
das
sar
dec
ljmp
xchg
add
cwtl
push
cmp
mov
xchg
jb
ljmp
push
mov
push
cmp
sub
ds
sub
jecxz
jp
addr16
shlb
push
sti
incl
mov
sub
lods
enter
mov
dec
subl
loopne
add
cmp
dec
xor
rcr
lods
ja
dec
xor
rcrl
lsl
dec
cmp
sbb
dec
dec
mov
loop
mov
mov
xor
out
insb
add
push
cmp
and
jg
pop
mov
addr16
pop
xor
stc
sarb
adc
fs
jg
push
imul
mov
test
lret
mov
mov
test
call
pop
into
out
incl
cmp
push
lods
add
leave
test
incl
xor
add
xchg
mov
je,pt
stc
je
sbb
dec
mov
add
into
filds
aam
xor
in
sbb
hlt
decl
add
or
sti
or
sub
sbbb
inc
lods
dec
pop
mov
ljmp
imul
add
subl
jns
les
lcall
lock
or
mov
or
fstl
shrl
add
and
push
pushf
jp
jle
rorl
clc
adc
sarl
xchg
testl
jle
xchg
dec
mov
and
in
in
loope
jg
into
push
xor
fistl
jo
and
sbb
dec
cmp
fcomip
call
daa
inc
push
rcrl
out
mov
cmp
and
icebp
pushl
pop
sarb
and
insl
or
push
lock
leave
mov
call
add
sbb
cmp
fucompp
push
mov
call
jmp
push
jno
stos
push
adc
inc
int3
mov
inc
out
jno
xchg
das
and
ljmp
sti
dec
nop
jo
jae
cltd
mov
test
push
add
test
jne
sarb
mov
call
sub
shlb
xchg
sub
cmp
stos
mov
push
test
jmp
out
lods
popf
pop
fidivl
fs
and
mov
pushf
loop
int
add
mov
dec
jmp
jle
or
dec
cmc
mov
mov
fildll
xchg
stos
shll
addr16
dec
in
or
pushl
mov
mov
cltd
lods
xor
sub
dec
rol
test
mov
mov
std
pushl
dec
ret
mov
push
sarb
jbe
scas
dec
mov
pushf
sbbb
jmp
int3
sbb
jae
mov
sbb
jp
inc
movsb
hlt
or
ljmp
cld
inc
and
mov
jg
mov
lds
push
lods
pop
mov
lcall
xchg
fcomp
bound
pop
push
jbe
cs
ljmp
lods
lahf
sub
outsb
rolb
clc
dec
push
mov
rcrl
insb
mov
push
xchg
or
call
loopne
ljmp
push
pop
jg,pt
test
sub
mov
dec
loopne
mov
cmc
test
data16
sub
addb
enter
ret
test
inc
or
decl
adc
push
lcall
ljmp
lcall
jle
xorb
outsl
rcr
add
lea
call
dec
mov
fidivl
push
mov
ljmp
jl
mov
iret
addr16
shr
clc
add
inc
aas
movsl
cmp
push
and
mov
in
decl
inc
fcoms
fidivrl
test
jle
mov
shl
mov
xchg
xchg
jl
xchg
lods
inc
jle
dec
test
mov
in
movb
pushf
xchg
mov
jg
incl
sbb
lock
xchg
mov
cmp
inc
inc
cld
add
jo
mov
clc
fildl
sub
fsubs
add
sbb
push
cwtl
mov
jo
xchg
lods
xor
inc
and
dec
jge
ret
mov
int3
inc
jb
xor
call
stos
mov
xor
add
data16
in
push
fisttps
and
jge
mov
adc
insl
adc
nop
push
push
repnz
cmp
imul
incl
jb
push
push
int3
lock
sbbl
push
shrl
adc
cmp
adc
stc
ret
lods
addr16
mov
lcall
aad
xchg
cmc
dec
call
fsubp
enter
cmp
or
les
js
arpl
push
dec
mov
push
or
daa
fxch
mov
in
push
xchg
mov
cmp
jle
out
mov
mov
fs
ret
mov
leave
ret
fcmovb
cltd
out
loop
push
xchg
sub
fisttpl
jg
std
dec
xchg
cld
lock
lea
in
sub
cmp
lods
loope
ljmp
mov
sti
sar
push
cmpsl
rclb
je
add
out
jg
or
lds
push
int3
dec
pop
es
mov
sub
mov
mov
sbb
add
pop
add
mov
arpl
mov
sahf
pop
adc
decl
fwait
mov
push
incb
push
daa
insl
and
xchg
mov
mov
push
movsb
jg
lcall
sbb
dec
cmp
dec
aam
pop
sub
mov
sub
mov
notb
push
shll
jb
es
decl
mov
sbb
xchg
sub
mov
inc
mov
test
stc
loop
jns
pop
cmp
ljmp
dec
or
adc
pop
jnp
gs
stos
dec
faddp
mov
jecxz
lods
movsl
ss
sub
stos
inc
dec
imul
jecxz
insl
je
xchg
pushl
pop
hlt
xchg
ret
add
in
push
cmpsb
rolb
cmp
sti
leave
mov
icebp
push
jle
loop
lret
popf
stos
or
sub
enter
mov
xchg
push
fsubrl
aaa
xchg
adcl
das
sbb
cmp
inc
faddl
dec
call
mov
and
loop
negl
push
dec
ret
push
pop
pop
mov
dec
decl
sbb
test
stc
adc
fwait
jge
orb
jnp,pt
push
sub
inc
mov
inc
in
xchg
shr
or
mov
lahf
mov
cmpsb
pushl
arpl
xlat
mov
push
inc
xchg
scas
jb
push
test
sti
les
aam
xor
mov
mov
adc
cmp
sub
push
movsl
adc
insb
mov
andb
ljmpw
lcall
sub
gs
adc
lods
xchg
cmp
lgs
add
incl
incl
out
dec
and
shl
fwait
add
lea
mov
cs
pop
cmc
ljmp
fcom
mov
xchg
rorb
decl
icebp
es
lret
scas
mov
in
sbb
or
mov
int
cmp
jmp
mov
je
push
aaa
daa
aaa
scas
clc
dec
mov
sub
or
ljmp
jbe
add
cmp
inc
fwait
jb
inc
sbb
mov
push
pop
cmp
inc
cmp
inc
stos
movsb
fisubl
cli
dec
ds
jnp
mov
aad
xchg
fisubs
pushl
test
js
or
jnp
or
xor
loopne
negl
incl
lea
stc
out
test
xchg
mov
movsb
dec
push
mov
lock
movsl
mov
adc
data16
lock
push
incl
or
mov
fwait
mov
xchg
jl
out
sar
jg
loope
leave
repnz
cli
pop
movsl
jle
cs
push
xchg
loop
addr16
fsub
jmp
dec
iret
rcll
enter
inc
push
pop
pushf
cs
data16
add
and
lcall
fwait
cltd
adc
gs
inc
mov
test
filds
pop
cli
xor
jbe
into
divb
cmp
jae
jp
jno
incl
in
mov
inc
add
stc
out
popa
inc
cmp
sub
aam
jg
xchg
pop
lock
pushl
sbbl
or
push
push
inc
add
movb
aaa
repz
data16
xchg
dec
cld
pop
or
insb
xor
pusha
sub
jg
outsb
enter
mov
js
and
sbbb
or
push
xchg
pop
mov
cli
sar
incl
js
and
mov
xlat
and
jle
out
cwtl
fs
mov
loope
xchg
call
sbb
dec
add
cld
xchg
push
xchg
cwtl
mov
add
fcos
ljmp
rcr
rcl
mov
mov
push
cs
xor
adc
call
fistl
sub
inc
je
loopne
into
jle
xor
mov
mov
les
decl
xor
and
mov
decb
jl
pop
cltd
lahf
jmp
or
and
mov
movb
or
out
jle
jnp
adc
call
divb
iret
dec
in
sbb
lret
push
stos
adc
cltd
in
icebp
jno
mov
pop
xor
lcall
jmp
xchg
inc
adc
push
movaps
ret
ja
popa
sub
lea
xbegin
cli
movsb
fcomps
sbb
into
mov
cmp
lods
call
test
jno
cmp
test
push
pop
push
loopnew
lods
js
std
into
cmp
inc
fsubp
aad
cmp
mov
lods
xor
hlt
dec
aad
jg
push
mov
gs
push
push
mov
bound
adc
call
adc
and
std
jmp
and
out
icebp
cmp
gs
fs
ret
mov
jg
and
cmp
xchg
sbb
xor
test
sbb
incl
inc
aaa
mov
in
ja
push
fldcw
xor
dec
jbe
rcrb
or
stos
mov
call
sbb
addr16
stos
ss
into
sahf
popf
and
mov
mov
lds
sbb
mov
rorb
cmc
cld
fnsave
hlt
call
ja
loopne
call
pop
sar
pop
jns
and
arpl
out
or
cli
jle
std
adc
dec
stc
jns
mov
or
xchg
jns
sbb
out
cs
stos
push
pusha
or
mull
jge,pn
and
mov
fmuls
mov
jmp
xchg
cmpsb
mov
fldt
sahf
and
mov
scas
mov
mov
adc
insl
shll
jmp
pop
lret
inc
lcall
adc
fimull
call
jne
sarl
xor
mov
fildl
pushf
sar
roll
xchg
es
fs
out
inc
push
iret
fisubs
and
mov
sti
xor
mov
or
jnp
mov
mov
daa
in
push
cmpsb
popf
sbb
jmp
jno
rcrl
and
int3
jle
cltd
pop
or
dec
mov
adc
jg
mov
leave
pop
popl
jge
xor
movsl
popa
sarb
push
out
das
jne
pusha
inc
call
pusha
cmp
push
leave
jecxz
ja
xor
sub
lcall
mov
xchg
or
mov
mov
aaa
mov
int
xchg
adc
mov
inc
mov
sbb
push
xlat
clc
dec
test
mov
sbb
mov
icebp
cmp
or
xchg
jl
add
leave
fldl
push
xchg
dec
xor
cmp
incl
sbb
push
sub
pop
dec
lret
pop
pop
fbstp
cmp
sub
mov
or
aas
dec
enter
cltd
cli
xchg
pop
or
inc
negb
ja
sub
call
insb
lock
push
cwtl
xchg
xlat
or
daa
es
mov
jo
xchg
movl
mov
push
in
daa
pextrw
push
inc
or
push
or
dec
cmp
xchg
in
xor
mov
mov
jo
pusha
mov
lahf
xor
sbb
test
and
mov
test
imul
xor
scas
adc
pop
or
jle
dec
mov
ss
adc
cmp
pop
fisubs
inc
or
leave
jp
xchg
cmp
or
lcall
arpl
lods
lea
addr16
push
fwait
cld
mulb
pop
shlb
inc
adc
cmpsb
fadds
or
sarl
aas
movsb
xchg
push
das
mov
jns
out
inc
cmpsl
aas
jnp
aaa
cli
bound
cmp
ficomps
add
lret
stc
loopne
stc
sub
dec
or
and
inc
fwait
lret
mov
sbb
scas
in
lahf
mov
adc
mov
fadds
decl
fisubrs
xchg
nop
mov
lcall
and
mov
stos
sbb
shl
je
dec
push
data16
clc
fildll
pusha
cmp
test
lds
pop
stc
and
aaa
push
mov
dec
mov
pushf
lcall
gs
pushf
andb
mov
stos
hlt
xor
pop
lret
adc
decl
jmp
sbb
das
jae
xchg
aam
mov
push
pusha
in
sbbb
and
pop
jne
ljmp
out
fstl
mov
and
xor
nop
adc
xchg
push
ds
int3
pusha
in
sahf
shl
inc
call
cmp
xchg
cli
jl
mov
pop
das
or
cltd
ljmp
push
clc
out
sub
lock
jmp
xchg
adc
jp
jnp
push
mov
dec
xor
dec
jnp
mov
lcall
sbb
xchg
scas
inc
xorb
jge
pop
in
pop
add
sbb
mov
clc
jmp
push
fcomip
call
sbb
or
clc
je
pusha
jns
or
fdivs
outsl
push
test
pop
pop
jg
inc
pop
out
lret
je
addb
cmpsl
xorl
jg
sbb
xor
mov
out
sti
test
mov
js
push
ss
arpl
and
call
dec
int3
cmc
mov
aad
ljmp
imul
or
fwait
incb
test
mov
jo
dec
xor
out
push
insl
cmp
xor
push
nop
and
jecxz
leave
adc
out
sub
adcl
in
and
pop
xchg
inc
pop
cmpsb
mov
pop
pushl
add
mov
test
xchg
jle
mov
add
push
jle
mov
cmp
inc
jmp
mov
ficoms
inc
push
sti
ficoml
movsl
dec
sub
addr16
jmp
lcall
lods
cmpsb
or
and
outsb
inc
cmp
mov
mov
cmpsl
movb
sbb
out
frstor
cmp
pop
out
pushl
pushl
in
sub
inc
in
mov
cmp
jmp
pushl
jmp
cltd
leave
sub
mov
fstpl
xor
les
std
push
mov
sahf
xchg
pop
sar
es
xor
cli
mov
xchg
mov
sbb
decl
cmp
push
pop
insl
inc
lea
cs
shll
aas
lcall
xchg
aas
mov
add
pop
push
rol
pop
pop
stc
sub
cwtl
dec
iret
cltd
nop
jmp
and
std
sahf
fsubs
fnstsw
jle
push
mov
mov
sbb
mov
aad
inc
mov
sub
cmp
push
ja
pop
fsubr
jbe
ljmp
dec
inc
inc
push
popf
or
sahf
xor
pop
fsts
and
xor
loop
lcall
call
pop
inc
js
imul
dec
push
xor
push
in
iret
or
inc
sbb
dec
sahf
or
repz
xchg
js
dec
cli
test
sbb
lock
mov
rolb
cmpsb
ljmp
repnz
insb
mov
jmp
jg
jecxz
dec
add
sub
in
push
imul
and
push
out
call
jecxz
jnp
shl
cld
mov
mov
sub
pop
lea
int
or
pop
call
rcrl
sti
imul
rcr
test
mov
adc
cltd
std
loopne
call
sbb
fimuls
push
dec
cli
jno
rcll
add
push
push
ds
lret
mov
mov
bound
lcall
imul
pop
imul
cmp
mov
std
xchg
out
cmp
lcall
mov
add
xchg
f2xm1
lock
sub
pushl
aas
xor
test
sbb
or
repnz
pop
repz
mov
incl
out
sub
jecxz
jb
or
fstl
outsb
test
nop
fcoms
jae
into
xchg
decl
int3
cltd
loopne
xor
xor
imul
vphsubbw
pusha
scas
call
popa
inc
cmc
aad
movsl
aam
fwait
sub
mov
pusha
aas
sub
outsb
out
push
lcall
aas
mov
xor
mov
or
adc
bound
mov
mov
mov
jl
mov
pushf
jnp
mov
sbb
xor
pop
in
or
pop
push
ss
aad
jbe
idivb
xchg
shlb
pop
in
pop
call
movsb
or
cmpsb
pushl
jne
mov
xchg
cmp
pop
out
xor
sub
cmp
mov
and
jne
pop
leave
cmp
dec
push
jno
movsb
cwtl
nop
push
outsb
adc
jno
ljmp
call
fnsave
dec
push
test
sahf
mov
push
lcall
sbb
roll
add
xchg
add
cltd
ljmp
ret
lcall
mov
insb
lret
ss
mov
shlb
xchg
inc
sub
jns
rcrb
pushl
pop
or
cwtl
sub
xor
in
aad
imul
decl
mov
or
enter
jecxz
aas
bound
inc
cli
outsl
cli
fbld
lcall
adc
mov
cltd
test
sub
dec
mov
mov
scas
es
push
push
ss
cmc
sbb
jae
movsl
outsl
cli
mov
imul
cmc
jge
xchg
mov
cli
mov
jg
pop
loop
inc
add
ds
ds
cmpsl
stos
clc
xor
ret
adc
sti
sti
or
enter
push
pop
imul
call
es
cli
in
and
xchg
or
fdivs
loop
and
incl
loop
inc
lods
ljmp
es
fsubrs
stos
mov
xor
push
adc
mov
data16
xchg
add
lock
test
cltd
dec
scas
das
pop
and
mov
test
lock
pop
and
xchg
push
fsubl
call
loop
insb
pop
mov
push
cmp
out
sahf
push
mov
cltd
push
fistl
call
ficoms
or
pusha
cli
dec
dec
popa
outsl
ljmp
or
in
cwtl
push
jnp
inc
adc
int
adc
push
push
add
cmpsl
mov
mov
fwait
xchg
push
push
add
mov
mov
mov
jo
xchg
lret
inc
mov
call
enter
lods
dec
cmp
aam
push
mov
sub
mov
dec
mov
pop
xchg
mov
pushl
sub
dec
sbb
sbb
and
xchg
pushl
lds
xorl
inc
lock
mov
dec
lcall
dec
jle
push
cltd
or
dec
vmovsd
movsb
dec
out
pushl
fcmovnu
and
je
jne
mov
pop
mov
outsl
or
lahf
sahf
lret
pop
sar
push
inc
jmp
sbb
scas
mov
dec
mov
inc
das
or
inc
movsl
add
test
mov
push
inc
fsts
in
cmpsb
fsubs
loopne
inc
insb
mov
sub
jb
pop
cmp
push
pop
addr16
rclb
mov
arpl
data16
ljmp
sub
add
fdivr
xor
jle
xor
add
mov
cmpsb
jo
fildll
insb
jb
mov
call
inc
jne
out
clc
fnsave
lods
mov
push
cmpsb
rcrl
cmp
pop
jmp
mov
adc
jmp
cmp
jecxz
pusha
mov
fldt
mov
jns
shlb
stos
ficoms
and
incl
pop
jbe
andl
int3
repz
ljmp
jmp
adc
push
out
xor
push
or
pop
adc
mov
cld
incb
repnz
jbe
push
jg
mov
or
jmp
cmp
fwait
mov
ret
cld
subl
dec
jbe
mov
xor
sub
js
pop
jns
lods
push
cmp
mov
lods
push
movsl
ss
jl
js
popf
sub
mov
pushl
cli
out
xor
xlat
cmp
mov
cmp
pushl
aam
jnp
lock
add
repnz
sub
pushl
add
in
and
push
lods
sbb
lods
cli
pop
out
add
mov
cmpsb
sarb
push
incl
lret
call
mov
imul
and
fcmovbe
fld
jmp
sbb
mov
cwtl
clc
out
outsl
lds
mov
stos
les
and
push
xor
pop
std
call
int
ds
push
outsb
mov
hlt
movsl
lcall
outsb
and
mov
mov
mov
jge
jne
dec
inc
jle
adc
push
jmp
popa
jb
aas
lret
jbe
call
std
xorl
int
test
sbb
dec
std
dec
in
jp
xchg
dec
inc
ljmp
enter
hlt
mov
shrb
cmp
jnp
push
pop
xchg
lea
lcall
adc
push
xor
in
lock
cli
arpl
fs
sub
xor
push
pop
push
xor
cmp
leave
mov
out
fwait
int
jae
and
fwait
and
inc
movsl
push
in
jle
sub
incl
jge
adc
arpl
ss
pushf
and
and
lahf
mov
lods
push
cmp
call
mov
mul
mov
ljmp
mov
pop
xor
and
jmp
cltd
in
sub
jns
daa
mov
outsl
pop
pushf
add
cmp
xlat
inc
dec
icebp
mov
sahf
mov
cmp
jmp
aas
arpl
dec
outsl
cmpb
int
inc
std
inc
mov
cmp
call
aam
leave
cmp
fwait
inc
sbb
ss
xchg
mov
cmp
pop
xchg
loopne
out
push
sub
fildll
xor
xor
sbb
inc
dec
xchg
ja
fwait
lcall
outsl
sbb
rcrl
ss
pop
cmpl
sahf
stc
mov
shl
mov
mov
mov
insl
jns
jbe
test
stos
sbb
aad
es
sub
call
imul
or
jbe
jns
leave
fsubr
adc
dec
xor
xchg
test
mov
jne
into
mov
testb
or
std
addl
push
adc
repz
outsb
fbld
movsl
or
loope
sbb
js
pop
xchg
mov
mov
mov
imul
mov
movsl
decl
cmp
outsl
lret
dec
je
cld
outsb
mov
adc
sub
stos
xchg
les
incl
bound
mov
lret
ljmp
sub
jmp
mov
movsl
int
fwait
adc
fisubrs
lcall
mov
sbb
imul
popa
inc
push
push
ds
jnp
xchg
jle
or
jmp
clc
ja
pop
faddl
sti
push
es
inc
cld
xor
adc
fcompl
bound
push
sbbl
notb
rcrl
sub
out
sbb
leave
sahf
ljmp
sbb
nop
psubb
std
add
xorb
sti
ja
lret
incl
ficomps
jle
adcb
lock
out
subl
pop
bound
in
hlt
out
int3
outsl
adc
cmpxchg
jge
jg
decl
jecxz
imul
pop
xchg
loop
add
ja
dec
jg
shl
fbstp
jp
repnz
push
mov
sub
or
mov
test
push
mov
jb
in
sahf
jnp
jmp
lods
daa
xchg
outsl
in
xchg
idiv
jmp
sbb
mov
jl
mull
cmpsb
int
lcall
iret
roll
adc
inc
fnstcw
sbb
out
push
inc
push
in
int
sti
cs
pushl
aaa
inc
lahf
jns
adc
dec
and
pop
stos
or
add
js
jecxz
clc
scas
dec
inc
push
andl
dec
jecxz
cmp
adc
push
fdivs
xchg
add
dec
jmp
ss
mov
jno
dec
add
or
mov
jecxz
lods
fsts
pop
rcll
mov
or
or
sub
inc
daa
ja
jmp
out
dec
aas
call
push
jae
dec
push
or
cmp
lods
lahf
aaa
stos
fdivrs
or
lds
cmp
pop
imul
les
call
ljmp
inc
loope
scas
jnp
and
adc
jno
adc
fbstp
mov
xchg
fs
pop
popa
out
stc
mov
xor
aam
fisubs
mov
dec
push
push
push
in
jne
aas
mov
es
push
cmp
jno
push
and
cmp
xor
lcall
fldl
pop
pushf
dec
xchg
repz
mov
setg
cltd
sbb
mov
leave
cmp
ret
adc
push
test
mov
call
in
xchg
cmp
mov
push
dec
jo
aam
fsubr
push
push
fiaddl
pcmpgtd
jmp
in
popa
dec
les
lds
aam
jnp
lock
mov
jo
incl
mov
xchg
jge
movsl
pop
push
movsl
jmp
inc
jp
sub
jb
add
lcall
and
jmp
mov
cwtl
int
ret
mov
push
ljmp
notb
ljmp
cmovs
es
out
sub
inc
xchg
jnp
xor
aad
dec
mov
sahf
fld
mov
subl
repz
inc
lcall
mov
mov
icebp
xchg
adc
imul
mov
aam
mov
call
addl
or
fistpll
push
adc
sbb
xor
aas
adc
fcomip
movsl
push
xor
jmp
enter
ret
jae
jbe
shlb
dec
enter
loopne
clc
fisubrl
xchg
lret
xchg
or
dec
jle,pn
decl
pop
in
xchg
ljmp
mov
sarb
lret
add
ds
incl
insb
imul
icebp
cmpsl
andl
movsb
xchg
and
dec
js
outsb
mov
lret
xlat
incl
jmp
cmpsl
inc
fwait
jmp
push
jbe
add
mov
insl
call
mov
stos
cwtl
lahf
test
cld
ja
lock
inc
jb
aad
aaa
pop
pop
dec
loop
and
push
outsb
push
push
mov
push
mov
je
popf
inc
sbb
shrl
ljmp
sbb
rol
sbb
std
imul
scas
jg
pop
xor
clc
pop
inc
push
sub
cld
pushl
jge
or
jns
or
jl
xchg
incl
arpl
xor
add
lds
jg
or
call
jns
cli
jmp
insl
mov
call
ret
call
pop
sbb
out
or
loopne
stc
jns
push
iret
arpl
add
jb
or
and
jg
fs
loopne
int
xchg
mov
or
fstps
incl
dec
ficompl
adc
repz
push
xchg
sbb
insb
icebp
dec
inc
cmp
call
xor
std
testl
xor
shlb
fucom
dec
and
frstor
jne
jp
enter
xorb
or
enter
cs
mov
test
stc
xlat
movsl
xor
ss
xchg
mov
inc
mov
incl
jnp
sub
andl
add
push
enter
add
inc
iret
pushl
shll
mov
test
cmp
mov
jbe
pop
cld
pop
jnp
in
decl
sbb
daa
insl
sub
cmp
mov
shr
sub
int3
adc
sub
cld
jmp
incl
lods
cmp
ret
pop
ss
lea
adc
fmul
cltd
pop
inc
leave
mov
movsb
cmp
shll
decb
int3
es
shll
mov
imul
sub
pop
jp
fstps
sub
push
lods
repz
inc
push
je
xchg
jl
in
cmp
mov
mov
inc
in
in
inc
inc
mov
mov
jg
jno
or
mov
mov
je
cmp
outsb
scas
cwtl
fs
mov
xlat
incl
sub
je
loopne
test
xor
or
mov
jmp
mov
fsubr
dec
and
sbb
mov
call
inc
std
add
jo
or
mov
cld
lcall
and
sub
adc
inc
and
and
mov
dec
jmp
hlt
push
xlat
cmpl
xchg
dec
mov
and
cmp
inc
sub
inc
outsb
xlat
and
push
pop
jmp
mov
xchg
daa
mov
faddl
rolb
scas
js
ret
sub
fnsave
pushl
pop
aam
xchg
je
jg
int
mov
pop
mov
rcll
decl
gs
jge
xchg
add
inc
lcall
mov
jg
push
cmp
mov
out
fists
stc
xor
mov
bound
fcmovbe
ljmp
das
fstpl
mov
pushf
call
dec
inc
inc
ss
movsl
cmp
or
pop
test
or
daa
shlb
push
inc
loop
xchg
cwtl
std
jmp
in
add
adc
dec
xor
jne
lods
jbe
add
js
lcall
add
loope
xchg
pop
daa
mov
inc
testl
in
xor
adc
iret
icebp
jl
fstps
sahf
sub
in
out
outsl
call
push
fdivrl
lret
and
pop
ljmp
xor
sbb
jle
adcb
jle
frstor
scas
decl
ficoml
xor
or
jmp
sub
lods
adc
mov
fsubrl
call
stos
push
cli
ficomps
adc
mov
mov
mov
push
push
mov
or
js
jg
frstor
stos
pop
popl
jbe
sub
lock
dec
cmpsb
call
pushf
scas
fstl
ja
xor
ljmp
sbb
fistl
mov
push
and
lock
push
cwtl
lret
pop
sti
js
aaa
mov
fsubrs
cmp
xor
decl
xchg
jg
pop
adc
out
and
jmp
stos
nop
push
add
mov
cmp
ljmp
jecxz
int3
gs
xor
push
xor
or
pop
mov
add
jg
ret
int3
inc
bound
adc
mov
pop
divl
dec
dec
push
es
mov
fnstenv
sub
mov
adc
xor
je
cmp
adc
test
cmp
mov
or
daa
push
aam
rclb
loop
pop
jns
inc
and
decl
mov
and
cs
adc
mov
xchg
sub
fstpl
cmpsl
adc
decl
mov
lahf
dec
addr16
nop
out
add
loopne
addr16
outsb
pop
and
imul
popf
ja
inc
or
cwtl
shl
xor
push
push
mov
dec
aaa
dec
xlat
das
out
xchg
jmp
xchg
push
js
push
std
lcall
sbb
xor
dec
nop
sbb
fstpt
lock
jg
mov
clc
pop
pop
aas
das
and
xchg
jb
jae
push
out
add
clc
icebp
decl
jb
cld
xor
mov
iret
cwtl
fstl
clc
sub
fisttpll
lock
lcall
jnp
xor
xchg
add
push
mov
in
mov
call
jge
xchg
push
jmp
dec
sbb
or
dec
mov
into
cmc
ljmp
and
aad
or
and
mov
movsb
in
out
pop
mov
mov
lods
ljmp
mov
cmp
loop
push
mov
sbb
cltd
scas
lcall
repnz
mov
jmp
and
mov
pop
es
pusha
and
dec
in
inc
outsl
test
fisubs
and
out
pop
cmp
scas
arpl
rorl
push
mov
adc
cwtl
cmp
cmpsb
js
leave
or
or
push
popf
xor
imul
stc
sahf
leave
xor
sarl
jge
lret
imul
bound
call
mov
ljmp
sbb
pop
icebp
lcall
imul
orl
mov
rdtsc
jg
lods
dec
mov
insb
lock
aad
xchg
scas
inc
ja
sbb
jecxz
ljmp
push
call
fwait
adc
lds
add
ljmp
push
fwait
jle
dec
sbb
pop
loopne
push
xor
push
mov
stos
and
adc
int
cmp
call
mov
adc
pop
jno
push
outsl
mov
sub
pop
push
push
jge
pop
sub
sar
or
scas
adc
push
movsl
adc
arpl
cmp
add
sub
shll
sub
inc
mov
xor
mov
inc
rcrb
sbb
movl
mov
aaa
pushf
lret
sbb
pushl
mov
loopne
push
add
aam
xchg
jne
inc
insl
sub
rcrb
add
jmp
loopne
xor
scas
mov
in
addb
aas
cwtl
loop
jne
jnp
pusha
insl
xor
xchg
xchg
adc
decl
in
cmp
stos
sub
sahf
stos
xchg
cmpsl
mov
cmpsb
xlat
testl
push
int3
xorb
mov
mov
in
movsl
pushl
aaa
jno
mov
lcall
into
int
stos
repz
mov
mov
push
xchg
shlb
test
cmp
pop
xor
adc
cwtl
push
daa
pop
jp
push
sub
sbb
pop
and
clc
arpl
push
ret
shrb
cmp
mov
mov
aam
jle
test
adc
int3
sbb
jg
and
cmp
in
lahf
aas
fcmovu
jnp
push
jbe
cmp
and
dec
pop
clc
fstpt
xor
pop
cmp
incl
std
add
decl
clc
fstl
push
rclb
cmp
mov
idivb
jnp
cmc
ljmp
dec
in
fwait
cmp
cld
sub
bound
decl
lea
insb
mov
adc
jo
cmp
sub
cmp
push
mov
jmp
mov
leave
nop
pop
xchg
sbb
daa
add
in
cmp
aaa
mov
jmp
cmp
scas
xchg
out
dec
mov
jmp
xor
or
lock
cmpsb
inc
or
rcr
jo
jg
mov
mov
daa
sbb
scas
out
xor
lcall
inc
movsl
leave
dec
push
xchg
lock
nop
repnz
adc
lock
shll
jnp
imull
stos
stc
pop
and
fs
pusha
roll
add
sbb
lahf
mov
push
jbe
ljmp
mov
in
inc
out
mov
and
push
stos
test
dec
jns
ljmp
or
outsl
bnd
or
clc
fistps
xchg
add
inc
ret
push
inc
xchg
dec
out
dec
inc
jmp
clc
lcall
push
push
sub
jb
mov
iret
sahf
in
cmp
incl
mov
inc
sysret
inc
push
cmp
sub
jne
stos
lret
jns
push
sqrtps
mov
inc
pop
aam
jle
mov
ljmp
jne
sbb
ret
push
das
inc
je
cmc
mov
icebp
clc
lcall
adc
mov
daa
jle
and
ficomps
dec
loopne
dec
inc
popa
jmp
ljmp
cs
out
hlt
fsubrs
push
inc
ja
cmp
pushl
loopne
fcompl
mov
mov
mov
out
and
push
xchg
test
out
jmp
dec
imul
mov
orl
mov
add
and
push
cmpsb
xchg
loop
call
imull
push
in
add
scas
cmpsl
sbb
dec
add
xchg
pop
subb
push
mov
add
incb
adc
sbb
lcall
fwait
adc
incl
dec
lret
and
lcall
pop
dec
pop
jge
mov
ljmp
ds
sbb
xchg
icebp
mov
lcall
fistpll
sahf
repz
mov
fcmovnu
daa
sub
sub
pop
or
popf
loop
dec
xchg
and
xor
mov
call
bound
mov
daa
fadds
aad
sahf
or
stc
ljmp
jl
je
test
lcall
adc
dec
mov
jnp
xor
ret
and
xchg
mov
mov
push
inc
out
cli
decl
fildll
adc
jae
push
and
stos
and
enter
pusha
adc
pusha
push
lcall
mov
and
push
cmpsl
in
sub
mov
lcall
sub
mov
ficompl
mov
push
outsl
sbb
roll
jmp
out
sub
push
sbb
push
pop
push
add
xchg
adc
into
aas
push
lcall
cs
ret
fnsave
adc
xor
int3
repz
xchg
xchg
fbld
add
inc
lods
and
mov
mov
incl
orl
xor
adc
lock
pop
sub
nop
push
jns
gs
mov
ss
shll
adc
dec
clc
int3
jmp
mov
pop
and
cmpsl
adc
mov
filds
sub
dec
pop
inc
std
inc
inc
xor
lods
rorb
jmp
pushl
std
push
insl
stc
test
nop
xor
push
call
add
dec
out
pusha
and
xor
ljmp
dec
dec
cmp
jg
scas
or
or
shrb
xchg
mov
scas
adc
rol
fistl
dec
push
xor
ficompl
mov
xor
call
xor
repnz
mov
std
sti
dec
jecxz
xor
fldenv
and
lcall
and
cmp
or
push
into
mov
cld
addb
std
insb
adc
sti
std
mov
xchg
xlat
repz
jmp
add
mov
adc
fwait
decb
jle
iret
xchg
mov
enter
hlt
dec
hlt
and
lcall
cmp
rol
aam
ljmp
repz
mov
mov
pop
ljmp
add
leave
pop
push
aaa
jb
outsb
sub
fldl
addr16
out
fdivrp
jmp
and
jge
add
xchg
xchg
out
fdivs
jno
addr16
cmc
icebp
jp
jge
inc
mov
pop
sbb
stc
mov
cmp
cwtl
or
les
out
andb
jmp
ljmp
out
mov
xchg
push
pop
dec
xchg
fcomip
and
sbb
mov
aad
mov
fwait
movsb
arpl
lcall
jns
or
mov
adc
aad
lahf
cmp
iret
mov
push
sbb
pop
and
pop
icebp
push
cmp
or
jae
lea
adc
mov
adc
or
add
pop
and
or
jg
xchg
insl
ret
jl
jo
mov
and
jmp
mov
rorl
cmp
jb
push
xor
popf
jae
outsl
push
pop
cmp
dec
mov
shlb
cmp
icebp
or
push
push
mov
and
fwait
adc
incl
inc
movsb
aas
stos
mov
lods
adc
ja
push
sbb
jnp
lahf
sahf
pop
jae
fisttps
inc
lret
lret
cld
gs
lods
pop
bound
mov
cs
ljmp
mov
cmp
aad
push
or
lret
pop
add
cli
out
mov
or
in
popa
aad
cs
js
xchg
mov
and
push
daa
insb
push
inc
or
jp
xchg
mov
push
xor
fucomp
jne
jno
lret
addb
inc
adc
sbb
bound
popf
out
shrb
push
mov
jo
imul
or
rcrb
ss
add
mov
add
out
stos
xchg
adc
xchg
dec
pop
and
push
add
dec
inc
adc
rolb
adc
mov
cmpsl
cmp
sbb
test
icebp
in
fldl
sbb
push
outsl
outsl
insb
push
imul
xor
push
xchg
jo
push
and
gs
mov
adc
push
das
sbb
and
push
shlb
je
add
adc
imul
or
std
dec
jne
js
stos
pop
add
fists
notb
outsb
ja
roll
jns
push
imul
roll
icebp
loope
data16
or
mov
testl
insl
insl
sbb
fidivl
gs
dec
jb
int3
fcoms
sub
roll
bound
repz
push
outsb
dec
xor
or
insb
sbb
and
push
ficoms
adc
outsl
jp
sbbl
scas
inc
jo
rcrb
int3
andb
push
pop
loopne
loop
ds
insb
jne
mov
jne
pop
pop
fadds
push
xchg
imul
xchg
movsb
divb
fildl
adc
inc
mov
push
jo
or
pop
push
out
popa
mulb
ja
dec
xchg
pop
push
jle
addb
addr16
or
cmpb
jae
adc
dec
push
push
push
cmp
inc
jne
arpl
rolb
dec
xor
das
cmp
lcall
popa
loop
bound
pop
inc
ja
subl
call
push
pop
mov
in
xchg
test
jo
push
dec
inc
dec
sbb
push
stc
je
mov
jae
arpl
or
push
out
and
pop
pop
iret
pop
loopne
repnz
push
xor
xor
sbb
inc
in
push
and
in
roll
outsl
popw
imul
jb
mov
sbb
test
ja
inc
xchg
push
jne
rol
sti
movsb
push
adc
fcomi
jbe
sbb
inc
js
mov
dec
jae
enter
stos
insb
jnp
aas
xchg
dec
jmp
inc
push
pop
pop
sub
test
scas
andnps
lret
and
outsl
push
in
jecxz
xchg
lods
xor
jl
stos
je
ja
mov
inc
inc
jg
pop
push
inc
inc
inc
mov
ja
data16
loope
sbb
jo
jp
lds
insb
pop
adcl
xor
insb
or
push
sbb
insb
mov
lcall
mov
jns
int
xchg
dec
push
or
sbb
popa
or
push
imul
xlat
mov
jns
or
xchg
inc
je
push
inc
inc
sbb
sti
orl
inc
sbb
ret
enter
sub
jno
or
sbb
sub
in
ret
loope
push
es
mov
lret
scas
add
pop
and
pop
or
stos
loope
sbb
xor
rorl
cmp
js
push
out
push
jae
pop
adc
iret
lods
sub
pop
sbb
pop
pop
mov
add
jo
in
push
jne
sbb
mov
inc
out
and
inc
inc
or
stos
jno
leave
jo
jae
xor
in
mov
add
add
adc
push
xor
inc
mov
mov
popa
fbld
sub
xchg
cs
sbb
inc
lods
repz
add
jae
push
push
or
or
dec
xor
icebp
sbb
cmpsl
adc
dec
test
dec
push
add
popa
dec
or
jmp
je
and
cmp
gs
push
lock
scas
sbb
pop
mov
pop
aad
xchg
addl
ret
push
ds
loopne
xchg
shlb
or
cli
pop
lods
pusha
or
pusha
fs
mov
add
jg
ss
cmp
out
and
inc
lahf
addr16
inc
sbb
mov
inc
sbb
aaa
dec
sarl
and
movsl
out
push
fdivrl
and
ret
pop
fdivs
ret
sub
insb
cmp
sub
sbb
aam
jp
mov
cltd
adc
mov
ret
dec
rcll
fbld
mov
fs
loopne
inc
imul
outsl
repnz
jb
xchg
inc
fcoms
lods
inc
aam
inc
push
into
jo
inc
inc
sub
push
arpl
mov
std
inc
imul
lea
fs
sbb
pusha
pop
push
mov
fs
ja
add
lock
insb
jle
push
movb
inc
dec
push
mov
ds
test
cmp
nop
pop
mov
jne
cmp
es
jl
js
es
popa
enter
and
call
push
jle
jmp
push
loopne
ds
loopne
sar
negb
xor
xorb
dec
push
push
outsl
sub
shlb
sub
andb
fldenv
loopne
push
push
adc
ja
jbe
adc
pop
loopne
jg
jnp
or
dec
outsb
dec
in
adc
movsb
xchg
sub
ss
fwait
dec
jnp
mov
pop
add
add
mov
dec
imul
movsb
dec
cmpsb
imul
dec
rcrl
mov
imul
or
xor
mov
mov
loopne
shrb
mov
inc
xor
inc
jo
cli
fcomps
bound
inc
pusha
inc
jl
fs
push
lods
jmp
std
push
jb
inc
jae
jo
insl
mov
popa
adc
test
xor
rolb
push
jbe
mov
imul
mov
mov
push
rclb
rorl
icebp
and
or
test
mov
testb
push
aaa
data16
cmpb
outsl
dec
xor
push
inc
in
cmp
push
adc
mov
insl
mov
jp
jo
lret
sbb
sbb
jp
sbb
jge
aas
imul
lcall
icebp
mov
loope
ja
fldcw
adc
push
outsl
ljmp
dec
jno
js
jmp
jb
loop
shll
dec
pusha
cli
sub
fnstsw
insb
mov
mov
cmpsl
cld
popa
imul
push
pop
nop
xchg
xchg
fimuls
dec
movsb
dec
cmp
hlt
sub
xor
jmp
loop
or
cmpsb
insb
adc
in
mov
outsb
ja
mov
imul
call
xchg
adcb
mov
ret
dec
insl
pop
push
dec
mov
cwtl
adc
push
inc
pop
js
adcl
cmp
inc
mov
test
or
add
fcoms
push
push
lds
sbb
pop
aas
adc
cmp
sub
jbe
mov
leave
xchg
icebp
pop
cwtl
push
iret
pop
popf
mov
test
push
cmp
add
mov
xchg
and
insb
and
dec
popw
imul
vmovaps
ret
jbe
xchg
outsl
add
pop
pusha
aad
xor
or
add
scas
inc
call
data16
fs
sub
cmp
pop
imul
call
lock
or
or
mov
insb
lahf
add
and
sarl
jbe
cmpsl
int
inc
xor
lea
ja
sbb
xor
lock
fs
push
push
inc
out
adc
test
incl
sbb
fdivrl
sbb
adc
or
push
push
clc
push
jne
data16
out
mov
xchg
jo
add
pop
mov
fs
icebp
jae
ds
es
gs
xor
dec
fs
adc
jmp
inc
push
inc
test
add
adc
lea
mov
inc
mov
inc
or
leave
inc
pop
xor
addr16
in
fisubrs
or
test
pop
adcb
push
iret
push
sysexit
dec
leave
or
fcoml
pop
mov
fisubl
cmp
inc
pop
dec
andb
add
cmp
les
xlat
inc
fsubrl
pusha
jb,pn
popa
adc
jnp
mull
push
stos
mov
inc
cs
mov
ds
dec
sub
rolb
loopne
outsb
inc
rcrb
jo
jns
out
mov
add
and
fisttpl
lock
xchg
and
add
test
pusha
mov
lea
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
mov
inc
add
dec
inc
add
add
