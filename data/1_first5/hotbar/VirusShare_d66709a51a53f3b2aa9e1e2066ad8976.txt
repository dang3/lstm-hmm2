divb
in
mov
mov
mov
push
push
call
int3
das
int
in
jg
shlb
or
and
push
je
and
out
je
push
call
push
add
sub
push
ret
in
divl
jne
mov
or
call
xchg
push
push
add
stc
out
aas
mov
test
je
cmp
pcmpeqd
cmp
jae
dec
movzwl
lea
jne
sbb
xor
jmp
and
neg
fidivrs
and
pop
pop
mov
or
call
push
push
sarl
stc
rcll
jp
jge
add
pop
push
push
push
push
xor
mov
push
mov
scas
stos
mov
std
adc
inc
add
cmp
pushf
or
jnp
or
push
mov
push
xor
cwtl
pop
jnp
mov
xchg
push
sbb
add
divb
inc
sub
ret
mov
jmp
pushl
sar
insb
jbe
jecxz
lea
or
lock
dec
test
jg
sbb
xor
adc
push
add
outsb
mov
push
scas
adc
mov
add
inc
jne
sub
sar
mov
je
daa
ret
push
repz
outsl
or
fadd
adc
pushl
mov
or
xor
dec
mov
mov
mov
call
pushl
mov
or
insl
adcb
data16
pop
cld
add
movsb
or
andl
mov
dec
lock
adc
push
xchg
adc
push
jge
pusha
outsl
adc
test
mov
fcomps
sub
dec
xor
dec
and
or
mov
mov
or
or
pop
cmpsl
push
cmp
mov
mov
aaa
ret
data16
call
sbb
add
push
jle
call
inc
mov
lea
mov
adc
cmpl
push
dec
or
add
iret
jbe
ret
ja
pop
xchg
sbb
mov
and
or
ret
test
push
xchg
mov
call
lcall
dec
and
add
xchg
es
pop
xlat
push
sbb
test
or
sbb
push
sub
add
scas
outsb
push
mov
aas
fadd
jae
push
stos
scas
sti
push
pop
pop
push
jno
pop
scas
dec
imul
add
pop
or
push
push
sbb
push
or
sub
add
mov
pop
cmp
push
mov
pop
aad
jp
aaa
xchg
xor
bound
adc
inc
lock
push
mov
cmp
or
rolb
or
sbb
push
clc
jge
insl
cmp
dec
pop
ljmp
push
hlt
mov
xor
mov
pop
ret
push
inc
shrl
pop
jae
cmp
int
inc
sub
inc
clc
ds
subb
or
xchg
inc
pop
push
jo
ss
push
sbb
xchg
or
orl
pop
adc
inc
test
jne
add
stos
add
jmp
js
mov
cmp
jg
mov
adc
addr16
dec
ds
and
pop
movsl
pop
enter
push
dec
test
push
and
dec
hlt
sub
push
mov
idiv
loope
sar
imul
cld
ja
adc
dec
xchg
or
dec
clc
add
push
loop
int
adc
in
and
cmpsb
adc
leave
aam
enter
pop
push
orb
ret
fdiv
lcall
cld
clc
fistpll
iret
jle
mov
cmpl
or
clc
ret
jnp
push
out
jmp
push
cmp
jge
push
sti
add
inc
jle
add
pop
cltd
jge
enter
fisttps
iret
mov
aam
push
sahf
lock
push
xchg
push
mov
cmp
jl
cmp
jne
aaa
loopne
or
add
xor
std
shlb
adc
mov
inc
add
add
add
lea
push
add
push
push
lea
fwait
pop
push
jo
nop
xor
push
jp
fldt
xor
into
mov
aam
push
push
sub
cmpsl
jo
fdivrs
fbstp
pop
adc
cld
fsubrs
pop
stos
mov
repz
or
loop
jge
test
jle
cmp
mov
pusha
outsl
mov
inc
mov
sbbl
inc
icebp
mov
pop
xchg
pop
jmp
push
sbb
push
xor
dec
and
xor
jns
sub
and
add
adc
lods
ret
pop
sub
loopne
leave
mov
lcall
hlt
cmp
pusha
inc
adc
sub
push
and
hlt
jg
pusha
cmp
push
add
or
cmp
scas
cmp
push
shr
mov
rcrl
push
push
adc
cmp
jle
mov
push
pop
or
out
or
icebp
add
cmp
cmp
jae
push
cmp
call
xchg
pop
lret
or
push
add
jb,pt
pop
adc
pop
adc
pop
leave
stos
jle
mov
fcoms
jnp
ljmp
sbb
cmp
lock
adc
push
push
rcrb
sbb
or
adc
or
cmpsb
push
loope
add
jne
pop
enter
cwtl
loopne
cmp
jo
inc
sub
add
ret
aad
aaa
add
ret
or
or
pop
pop
or
cmp
sub
pop
das
xor
jno
cmp
jne
push
push
lock
push
in
and
jl
in
js
push
mov
mov
or
mov
pop
pop
pop
pop
addl
int
push
add
jg
xor
pop
divl
je
movl
jo
add
and
mov
jecxz
mov
popa
leave
iret
add
add
xchg
push
jg
mov
sub
cmc
push
mov
cmp
fdivl
in
jle
pushw
mov
test
xchg
xchg
lret
cwtl
mov
dec
test
cwtl
imul
loop
mov
and
je
push
and
add
dec
ss
js
movl
or
lret
sub
mov
add
rcr
jge
xchg
push
fisubs
fs
clc
imul
dec
add
mov
dec
inc
lods
enter
add
iret
cmp
push
add
in
dec
lock
mov
xor
jo
mov
scas
fnstsw
mov
push
mov
adc
loopne
scas
aas
roll
sub
add
push
cmp
je
bound
sti
icebp
sub
pop
out
or
jne
dec
fimull
sbb
mov
pop
mov
cmpb
flds
jb
cmp
cmc
cmp
mov
and
dec
mov
jae
push
cmp
dec
or
scas
imul
mov
mov
mov
sbb
call
arpl
cs
lods
imulb
jb
push
add
or
ja
repz
cmp
in
cmp
sub
andl
add
or
push
in
mov
push
adc
or
push
in
xchg
ss
dec
or
inc
gs
lock
add
std
push
mov
mov
or
into
lahf
insb
out
xchg
sbb
lods
sbb
pop
jae
ret
loopne
inc
dec
adc
xor
les
push
shlb
sub
call
adc
inc
add
push
lock
outsb
or
mov
sahf
icebp
insb
call
cs
out
popa
inc
and
ror
add
addr16
ret
push
aas
aaa
pop
and
push
push
mov
dec
mov
mov
into
inc
and
mov
xor
sbb
push
js
in
ds
jecxz
fs
sub
jo
adc
adc
lahf
push
pop
int3
or
jmp
mov
shrb
loop
lcall
xchg
lds
scas
aad
mov
mov
cmc
push
cld
jnp
jge
lea
stc
adc
lods
push
pop
or
and
push
js
and
adc
adc
popa
add
stc
int3
in
dec
cwtl
loopne
cmp
fldl
pushl
fadd
jg
shl
fcomps
sar
inc
adc
andb
mov
cmpb
stos
mov
sbb
push
xor
fiadds
pop
iret
push
pop
lods
movsl
lods
mov
cmp
xlat
test
out
das
push
and
pop
and
xchg
and
adc
adc
cmp
test
loopne
loope
incl
sbbb
mov
test
xchg
aaa
out
push
xor
icebp
jb
pop
cmp
sarb
adc
pop
adc
lock
test
fmuls
lret
in
aas
pop
mov
sub
mov
mov
dec
addr16
sahf
movsl
and
nopl
inc
add
pop
mov
into
push
inc
jo
gs
mov
je
cmp
or
icebp
into
scas
mov
xchg
adc
mov
push
int3
test
xor
inc
mov
std
pop
pushf
and
cmp
xchg
das
aas
push
inc
adc
jmp
jo
int3
mov
lds
adc
adc
leave
cmpl
imull
pop
adc
lahf
and
in
dec
xchg
jp
outsb
push
push
or
mov
xor
dec
sbb
mov
test
mov
lea
mov
push
push
push
jl
xchg
sub
xchg
sbb
sbb
roll
cmp
movsl
pop
pop
ljmp
push
rcrb
jne
mov
or
punpckhbw
mov
das
movsl
ss
test
or
sbb
pop
lea
outsl
addb
jbe
dec
add
push
stos
hlt
mov
adc
repz
adc
in
jnp
enter
mov
in
and
in
stos
into
fsubrl
or
push
adc
insl
mov
call
mov
les
jnp
mov
xchg
or
cmp
pop
loopne
in
sbb
scas
and
mov
in
xchg
sbb
push
xor
xor
xor
push
dec
aam
jge
jl
cld
rorb
cld
das
cmp
lock
add
js
adc
lock
pop
loopne
movl
dec
cmpl
xor
addb
je
shlb
cmp
roll
cmpl
xor
adc
adc
call
push
mov
daa
jecxz
incl
add
push
ljmp
xor
push
popa
mov
testb
pop
in
cmp
pop
push
movb
fidivrs
test
addr16
dec
and
mov
stos
xchg
test
lock
jle
mov
xor
sbb
jl
fwait
mov
fistpl
jae
ret
je
push
je
xchg
stos
and
pop
fcmovnb
shlb
nop
nop
leave
enter
mov
mov
cld
pushf
or
pushf
pusha
dec
imul
imul
lock
xor
addps
adc
push
jl
xchg
or
fs
add
cltd
xchg
lret
and
rcl
push
iret
adc
jge
jl
imul
jge
pop
xlat
cmp
jno
pshufw
mov
lahf
adc
lock
adc
cmpsl
xor
sub
les
inc
mov
hlt
fcoml
dec
inc
fidivrl
out
jge
pop
or
mov
inc
adc
cld
mov
and
mov
xchg
out
test
adc
test
xchg
cwtl
adc
and
jo
dec
cmpsb
in
push
int3
int3
leave
enter
les
les
cmp
mov
cmp
mov
in
mov
sbb
push
cmp
xchg
lods
sub
dec
inc
push
sbb
add
shlb
xchg
and
mov
mov
cmp
sbbb
pop
fs
ja
jo
jmp
push
sbb
adc
pop
mov
ljmp
fdivrs
hlt
sbb
inc
add
cmp
adc
mov
dec
jle
push
inc
imul
aas
hlt
push
addb
push
xor
sbb
lds
push
test
add
add
jnp
jb
inc
xorb
or
lea
aam
dec
lahf
roll
or
js
push
add
mov
pop
sbb
les
and
and
shr
xchg
rcrb
push
movsb
xchg
aaa
adc
dec
inc
sbb
jge
orl
mov
jnp
test
sub
lea
mov
rcl
jo
rolb
sbb
test
imul
mov
outsb
pop
jl
mov
add
or
pop
adc
ja
and
aam
add
fcoml
or
cmpl
adc
lret
push
jle
pop
jne
xor
in
inc
mov
fcmovne
push
pop
sbb
push
jmp
loopne
and
or
out
rclb
ja
mov
push
or
lcall
sbb
xor
xor
fisubs
mov
or
mov
sbb
sbb
mov
add
mov
push
scas
in
ret
out
sbb
jl
and
or
push
adc
btc
jp
sbb
mov
ss
adc
test
push
cwtl
lds
push
movsl
jno
or
rcrl
pop
lods
mov
xchg
pop
insl
shr
into
push
pushf
mov
cmc
shrb
adc
mov
inc
adc
sub
push
push
or
pcmpgtb
push
push
xchg
add
iret
sbb
iret
mov
or
pop
inc
shlb
jno
repnz
cmc
jno
test
jb
pop
push
sbb
jns
sub
sbb
cld
mov
add
cs
rolb
jo
push
sbb
xchg
pop
nopl
adc
xorl
cmpsb
sub
testl
mov
clc
add
add
rclb
cmp
or
test
pop
subb
lock
ret
loopne
sbb
pushl
xchg
dec
inc
and
and
pop
das
xchg
adc
mov
add
sub
ds
pop
ret
or
add
mov
andl
into
movsb
repnz
aaa
cmp
stos
xorb
or
clc
and
xor
cmp
jge
fidivrl
pop
hlt
je
push
push
pop
sbb
sbb
test
xchg
add
pusha
lock
jp
bound
adc
and
cld
lock
sbb
ja
mov
imulb
pop
mov
jmp
sub
push
xor
push
sahf
sub
mov
aas
andb
outsb
push
xchg
stos
jmp
and
push
and
dec
mov
pop
and
inc
jg
mov
and
jnp
add
jo
pushf
std
daa
ja
sahf
fstpt
and
xchg
add
cmpb
incb
imul
pop
or
push
clc
fwait
sub
cltd
test
les
jo
xchg
into
push
cmp
nop
aaa
jnp
scas
sub
pop
sub
cmpb
sub
adc
xchg
dec
sbb
or
sbb
xor
inc
lret
ret
inc
lret
ret
test
mov
nop
stos
lret
or
jne
mov
stos
add
adc
xchg
inc
pop
xor
clc
push
insb
push
xor
dec
rcrb
cwtl
ss
pusha
insb
adc
test
arpl
movsb
mov
loope
inc
and
push
loope
fsubs
jne
loope
fdivl
sbb
pop
inc
sub
mov
adc
push
xchg
adc
inc
roll
push
sti
lret
push
push
scas
xchg
add
stc
add
sub
add
rclb
adc
test
or
dec
push
push
mov
or
cmpsl
mov
fsubrs
cmc
or
rolb
cmpsl
mov
fsubl
sub
push
aam
push
pusha
popf
cmp
or
and
add
sbb
sub
xchg
xchg
stos
dec
and
cmp
push
enter
cltd
jge
push
cmc
lock
inc
sbb
xchg
in
lahf
xor
jno
xor
xor
mov
testb
jb
cmp
cltd
mov
std
shl
sbb
outsl
inc
xor
pop
out
jmp
cmpsl
xchg
loopne
cmp
push
fs
mov
mulb
add
pop
dec
xchg
stc
pop
xacquire
xor
push
andl
jecxz
or
ret
push
sbb
mov
insb
sub
iret
sub
sub
push
in
sub
push
mov
jns
and
sub
mov
pop
xor
fwait
xor
ret
sahf
jmp
pop
ret
clc
lret
jns
pop
shll
pop
or
int3
inc
cmp
add
cwtl
dec
mov
adc
sbb
jecxz
lods
adc
inc
fistpl
add
pop
jmp
push
add
adc
out
mov
je
add
or
cmpsb
and
movsb
xor
mov
jo
rorl
adcb
mov
pop
aas
mov
jge
jge
adc
je
push
push
fcomp
push
fwait
add
jno
cmp
adc
ret
mov
sub
sub
and
push
sub
mov
sub
mov
adc
mov
out
pop
aas
mov
sbb
xor
or
push
stc
pusha
daa
push
lock
dec
enter
mov
dec
push
pushl
repz
dec
dec
in
adc
push
shrb
adc
xor
add
cmp
lock
scas
sbb
iret
push
les
push
inc
cwtl
pop
popf
push
mov
cs
fiaddl
dec
mov
jnp
xchg
xchg
lock
jns
clc
sbb
jne
mov
and
jns
or
test
mov
jno
jo
test
test
jl
xor
cmpl
setne
pushf
pusha
pop
rorb
jne
shrb
jge
sub
sbb
jb
push
mov
pop
out
jne
or
je
sub
mov
dec
push
pop
subb
mov
xchg
es
push
sbbb
inc
faddl
dec
dec
sbbl
pop
test
or
jge
lods
push
jne
or
xchg
cmp
outsl
cmpsl
push
inc
sti
test
add
lock
std
mov
rcl
pop
not
add
repz
add
mov
roll
push
cld
sub
loop
xchg
push
out
inc
out
push
je
push
inc
aad
add
fabs
xor
mov
mov
imul
and
pusha
scas
mov
mov
sahf
iret
inc
cmp
in
imul
xor
mov
dec
aaa
insl
inc
push
clc
jg
mov
or
les
or
stos
sub
icebp
ds
inc
int3
add
mov
or
fsubl
mov
cmp
loopne
or
cmp
insl
adc
mov
push
sub
test
xor
or
cmovnp
cmp
negl
and
jge
imul
adc
xor
add
or
mov
daa
sub
int3
mov
lcall
or
push
mov
dec
mov
mov
add
aas
inc
ret
sub
test
or
mov
mov
xor
inc
mov
sarl
add
jae
out
push
pop
dec
dec
push
mov
jl
jae
ret
cmp
jle
inc
mov
cmp
fisubl
test
pusha
ret
add
jp
mov
inc
mov
add
ja
movsl
and
cmp
mov
mov
add
or
mov
mov
jae
add
or
mov
mov
add
adc
fcompl
dec
scas
leave
sti
add
push
mov
filds
jge
push
and
lea
push
into
in
mov
lcall
daa
iret
gs
push
jne
loopne
sbbl
and
push
popa
or
inc
icebp
test
sub
cmpsb
and
lods
in
setns
mov
fcoms
shlb
cmpsb
cltd
fisttpl
dec
outsb
loopne
mov
out
int3
mov
add
push
iret
dec
test
out
push
add
inc
cmp
enter
pop
es
cmp
inc
sub
es
or
out
das
jnp
call
sub
or
shll
icebp
jmp
fadds
test
incl
push
lods
aam
lods
pop
data16
subb
mov
clc
jg
fwait
push
test
pmulhuw
sbb
and
push
push
mov
adc
or
iret
fcoml
in
pop
mov
outsl
cmp
loopne
mov
ja
cltd
test
or
mov
lock
xor
push
lods
sbb
mov
scas
in
push
movsl
imul
arpl
scas
fidivrl
xchg
add
movsl
add
sbb
adc
clc
sbb
cmp
stc
loope
aaa
insl
mov
push
add
in
push
js
call
and
sbb
addl
iret
or
sbb
add
dec
lret
repnz
in
iret
push
adc
pop
call
push
inc
std
or
or
or
mov
test
subb
sub
setbe
insb
rorb
cmp
pop
mov
and
repnz
insb
adc
add
mov
in
adc
mov
add
jbe
aaa
adc
xor
mov
adc
mov
shlb
loopne
cmp
scas
dec
mov
mov
mov
int3
or
out
rcrb
sbb
movsb
fcoms
lock
dec
lret
fadd
jo
in
mov
xchg
push
jo
mov
sub
pushl
call
or
out
ret
shr
movzbl
push
fisttps
adc
push
ret
push
push
inc
push
loopne
inc
mov
xchg
xchg
push
pop
inc
mov
mov
sarl
pop
add
jl
cmp
xchg
add
cmp
jbe
es
gs
xchg
add
mov
lahf
xlat
cmp
mov
ljmp
add
mov
pop
outsl
xor
mov
jmp
sar
xor
sarl
mov
inc
push
push
mov
cmp
jg
mov
dec
aaa
adc
jge
leave
lea
negb
pop
pushf
in
cmp
cs
enter
mov
or
test
push
jecxz
xchg
aaa
in
sub
mov
fnstcw
sbb
jmp
lahf
test
dec
ret
test
push
arpl
std
jmp
mov
push
pop
pop
cmp
inc
jnp
xor
and
or
call
add
or
jg
mov
aam
dec
in
mov
lea
lea
sti
cmp
jae
mov
incl
xor
xlat
and
scas
pop
add
jne
and
jmp
mov
mov
lea
pop
jb
cmpl
mov
cld
push
ret
in
add
imul
add
out
jo
cs
loop
cmp
jg
out
cs
repnz
mov
dec
inc
push
and
sbb
cmpsl
js
mov
add
ret
lcall
je
nop
add
mov
sub
xor
fidivrl
fwait
dec
add
lea
and
push
push
sti
mov
dec
push
push
adc
dec
cmp
and
xchg
add
lock
mov
inc
xchg
or
mov
cmp
orl
push
loope
mov
ljmp
or
xor
mov
cld
je
test
js
push
hlt
jg
in
jno
outsl
pop
dec
xor
push
dec
jmp
sbb
push
mov
inc
or
add
inc
mov
push
push
push
pop
imul
mov
add
or
or
mov
mov
pop
repz
push
or
adcb
ds
push
cmp
inc
mov
or
ret
shll
pop
daa
pop
push
jbe
rorb
add
mov
mov
fldt
xchg
mov
ret
cmp
xlat
sub
xchg
mov
hlt
add
mov
mov
pop
cmpsb
lds
mov
test
jo
inc
scas
jl
cld
add
mov
roll
fstl
rep
push
mov
jb
imul
or
pop
sbb
adc
or
add
xlat
std
add
or
add
scas
add
or
mov
mov
sbb
repnz
jnp
movsl
repz
mov
or
aas
lcall
je
push
sub
and
adc
repnz
mov
mov
sub
add
shl
sti
or
mov
xchg
sub
jmp
icebp
je
sbb
clc
jne
cmp
je
pushl
xor
inc
cmp
or
and
xchg
add
sbb
mov
add
push
ja
sbb
leave
push
and
mov
stos
out
xor
rorb
push
or
setne
rcrb
stos
sahf
js
ret
inc
inc
jne
outsb
pop
sbb
call
adc
pop
js,pt
test
xchg
jo
jg
mov
jbe
and
inc
pop
mov
rcrb
std
push
lock
idiv
ret
scas
xchg
adc
jge
popa
stos
je,pn
sbb
cmp
jne
cmp
mov
add
ficomps
xchg
rolb
stos
imul
lock
cmp
clc
call
xor
add
push
add
pxor
je
push
lods
bound
pop
add
mov
xor
scas
and
enter
mov
inc
cmp
test
or
js
mov
hlt
jecxz
hlt
sub
cmpb
mov
je
pop
aas
clc
add
sbb
xchg
sub
mov
xchg
xchg
insb
cld
cmp
lea
jbe
mov
mov
add
test
push
adc
push
inc
dec
mov
mov
int3
lea
ss
aas
mov
nop
mov
mov
add
mov
lds
cmp
sbb
push
fwait
push
mov
in
fucomip
cmp
ss
es
ds
mov
sub
pushf
nop
sub
xlat
jecxz
and
add
test
mov
clc
and
lea
xor
adc
lock
push
aad
cmp
int3
sbb
mov
in
sub
lods
add
pop
or
outsb
loope
lret
lods
mov
inc
or
cmp
or
xor
in
incl
or
push
pop
shl
sub
fildl
mov
xor
jmp
pop
imul
nop
adc
cmp
cwtl
xlat
jmp
push
sbb
mov
mov
inc
xchg
jmp
call
cmpsb
arpl
test
add
xchg
cmpsl
repnz
sbb
loop
test
aad
nop
push
xor
fldcw
mov
add
jo
push
jns
xor
inc
cs
mov
imul
shr
pushf
mov
mov
pop
test
inc
mov
push
mov
cmp
bound
in
cmp
xlat
mov
sbb
sbb
jmp
nop
cmp
fs
dec
add
or
aas
ljmp
add
adcl
inc
fdivl
imul
inc
pop
lock
pop
jp
and
pop
das
cmpsb
and
sub
push
ljmp
pop
and
rcrb
mov
mov
inc
sbb
cmpsl
pop
fldl
push
out
mov
cltd
pusha
add
inc
into
lcall
stos
dec
jns
mov
sahf
out
adc
imul
jmp
loop
push
int3
inc
add
push
pop
xchg
jns
dec
mov
loope
mov
sahf
pop
lret
sub
pusha
lock
mov
pop
nop
lock
xlat
gs
mov
adc
pusha
leave
and
clc
sub
inc
adc
mov
dec
popw
jb
lret
adc
sbb
push
xor
mov
mov
add
or
and
lds
mov
std
mov
xor
adc
pop
or
sbb
outsb
xlat
jo
mov
loop
inc
and
imul
xor
ret
and
cmp
jns
notl
push
adc
or
testl
or
gs
push
enter
sbb
or
push
and
pop
movw
sbb
sbb
sbb
rclb
jge
shl
test
loop
push
lcall
xchg
mov
icebp
jle
mov
and
enter
notb
cmp
adc
sti
fistl
or
je
cmp
popf
or
scas
sti
cmpl
push
cmp
mov
ret
shrl
pop
negl
sbb
add
add
cmp
add
push
pop
dec
adc
push
into
pop
mov
jge
adc
dec
fadds
insl
push
push
push
sahf
jne
data16
mov
sahf
clc
je
pusha
jmp
fisubrs
mov
push
pop
dec
je
mov
je
sub
sbb
push
and
dec
inc
dec
sub
jmp
mov
mov
loop
fldl
sahf
leave
jmp
mov
inc
mov
jecxz
jne
xchg
aaa
in
popf
pusha
xor
add
push
mov
xor
aas
add
and
push
pop
inc
inc
pop
pusha
xchg
add
mov
fldt
fcomps
xchg
or
pop
push
aas
bswap
out
mov
mov
sbb
mov
push
add
add
ret
jg
cld
mov
insb
push
xor
push
push
daa
movsb
in
sbb
jo
js
insb
jae
and
mov
popa
jg
dec
int3
sub
mov
rorb
jmp
cmp
je
cmp
movsl
imul
inc
sbb
leave
adc
fmul
pop
imul
cmpsb
sbb
fstpl
in
fstpt
jmp
sbb
fldcw
sbb
jmp
and
mov
xchg
sbb
or
pop
bound
lea
lods
rorl
pop
sbb
mov
es
std
mov
mov
mov
add
pushw
and
icebp
inc
sbb
jle
repnz
push
insb
fstl
lea
or
adc
sub
mov
or
movb
es
mov
mov
push
or
xchg
xchg
pop
ds
jge
pop
aas
ja
sub
inc
push
mov
mov
popa
cld
push
cld
pop
push
lea
push
push
push
push
add
push
lea
imul
dec
cmp
scas
jecxz
cmpsb
add
dec
mov
inc
test
cltd
fldcw
adc
ljmp
xacquire
push
pop
or
fists
adc
inc
ffreep
xchg
lods
jle
sbb
and
scas
push
je
xchg
scas
sbb
push
imul
aam
push
push
dec
xor
movl
in
xchg
ret
xchg
and
sub
adc
shlb
jbe
dec
adc
dec
adc
test
pushf
jmp
mov
jo
cld
jne
movl
dec
je
jno
jle
ss
jno
pusha
push
clc
and
pop
sahf
pusha
and
mov
repz
xchg
insb
pop
inc
sub
insl
pop
inc
insl
add
aas
repz
add
add
inc
dec
or
pop
mov
dec
das
mov
subl
imul
sbb
xchg
jne
stos
xchg
call
and
in
inc
adc
or
ret
lcall
sub
ja
cmp
xchg
fsubl
aas
arpl
push
cmp
push
mov
pop
test
push
push
push
xor
push
cmp
mov
loop
jl
sbb
push
sahf
pop
rolb
flds
mov
inc
jl
sbb
mov
add
jecxz
jbe
ret
xchg
inc
fadds
mov
mov
les
push
xchg
lds
sub
pop
mov
aam
inc
sub
fsubrl
in
lahf
push
or
movsb
ss
int3
push
jae
xor
stc
add
or
push
or
add
jle
cli
fucomi
imul
inc
or
ret
outsb
dec
aam
xchg
mov
adc
incl
mov
push
adc
mov
sub
xor
pop
fadd
add
xor
add
iret
je
lea
push
loopne
add
mov
or
mov
mov
out
or
pusha
cmc
pop
pushl
call
push
or
push
adc
adc
adc
mov
sub
jl
rep
or
sub
les
in
mov
ficomps
dec
lock
div
push
add
je
dec
push
pop
js
mov
int3
je
movsb
sub
sub
push
push
pusha
cmp
in
jle
shlb
in
cmp
push
mov
imul
adc
dec
cmp
jl
mov
dec
stos
subb
or
rcr
mov
pop
adc
lea
rep
push
in
push
or
cmpb
mov
sbb
jbe
pop
neg
sbb
dec
sbb
fldenv
shlb
xchg
arpl
xor
lock
movsb
in
dec
shll
dec
cmp
mov
mov
adcb
push
idivb
push
sub
jbe
xor
ret
je
mov
into
neg
notl
loope
push
push
lds
sahf
sub
jle
jecxz
adc
pushf
in
sarb
push
aaa
test
push
dec
fstl
mov
pop
dec
mov
and
addl
ja
dec
repnz
rorl
push
xor
jne
jmp
incl
and
or
adc
xchg
pop
insl
jo
pop
pop
sbbb
jns
mov
add
shl
adc
xor
idivl
xchg
data16
loop
jle
cmpl
jne
incl
push
cmpsb
push
mov
adc
fadd
in
int3
xorl
adc
scas
mov
ss
rcr
dec
add
dec
mov
cwtl
inc
cmc
add
pop
stos
inc
cmp
add
lahf
push
in
cmp
je
cmp
mov
ja
rcrl
push
lcall
shl
or
and
sub
xchg
push
adc
ja
sub
mov
push
js,pn
cs
lods
imul
addr16
es
xor
mov
movb
jmp
cmp
jne
data16
mov
fldz
xor
ds
cwtl
sahf
jo
movb
pop
mov
xchg
fistpll
mov
int
xor
lea
lea
adc
cmp
sbb
or
xlat
jge
push
mov
loopne
fisttpll
fimull
popf
sub
mov
mov
pop
cmp
sbb
dec
sbb
es
push
mov
leave
push
pop
aam
sbb
push
mov
cmp
iret
push
mov
pop
sub
push
push
outsb
cltd
add
icebp
and
jl
ljmp
jl
shr
add
add
lret
cld
ja
je
dec
addl
into
gs
mov
sbb
push
rorb
push
lea
cli
ds
xor
mov
add
addb
xchg
mov
imul
lret
jl
xchg
andb
in
out
jbe
xor
inc
mov
and
inc
jge
rcrb
das
cmpb
pop
lcall
aaa
pop
inc
ficomps
bound
rorb
inc
sub
icebp
mov
fmull
dec
pushf
push
out
out
xor
sbb
es
push
and
push
aaa
movsl
mov
roll
sub
xchg
mov
cltd
cli
daa
dec
pop
push
inc
fiadds
mov
add
jae
imul
jno
insb
inc
negl
movsb
popa
in
and
mov
mov
mov
andl
jge
pushf
outsb
int
adc
mov
fmuls
or
call
add
repz
or
adc
ss
test
jmp
mov
pop
xor
and
shl
pop
test
adc
sub
cmpb
loop
jg
xor
aaa
push
pop
cmp
add
pop
push
es
push
ljmp
sub
sub
push
push
jnp
iret
decb
adc
xor
and
pusha
aad
mov
das
mov
inc
lock
add
sbb
push
cli
or
push
icebp
jo
pop
gs
lcall
pop
xor
sbb
jnp
push
call
jmp
fsts
popa
add
jb
movsl
mov
sub
push
jecxz
call
xor
mov
add
out
jo
cmp
add
mov
mov
jns
pop
or
bound
xor
shlb
xor
daa
xchg
or
add
xor
cltd
mov
das
inc
and
lea
ret
sar
out
orl
jo
movb
clc
out
cmpsl
cwtl
mov
jge
mov
out
ljmp
idiv
push
mov
push
push
mov
pop
jno
push
ret
xor
idiv
xor
mov
jno
sbb
test
jg
mov
push
movsl
je
test
or
cs
push
pop
mov
loope
pusha
scas
mov
inc
add
pushl
scas
and
or
aam
inc
rorb
add
mov
out
jmp
fstpl
push
pop
insb
xor
rcrb
pop
sti
sub
clc
je
out
movsb
mov
inc
lcall
test
test
into
jp
xor
pop
sarb
test
dec
daa
pusha
js
xlat
pop
loopne
out
sbb
dec
fs
or
xchg
daa
cld
xchg
scas
arpl
mov
test
mov
lahf
xor
mov
movb
sbb
dec
lea
addr16
pop
inc
or
mov
je
fists
mov
dec
nop
or
jmp
jge
jmp
mov
hlt
fildl
jg
std
fisttpll
jns
faddl
sbb
sub
xor
out
addl
fdivrp
mov
sub
mov
lea
test
mov
inc
lock
movsl
les
cmp
add
repz
push
insl
sbb
or
clc
fidivl
jmp
push
jo
sbb
xchg
cli
pop
ja
jge
push
pop
mov
xor
jle
pop
movb
push
mov
mov
orb
and
stos
shrl
add
mov
aam
push
das
jne
inc
aam
clc
lea
dec
xlat
and
cmpsl
je
pop
andl
gs
jbe
fnstenv
je
or
inc
pop
and
xchg
test
jmp
out
xchg
stos
cmpsl
cmp
mov
pop
push
pop
pop
into
pop
leave
movsl
daa
mov
adc
ja
xor
sub
je
mov
add
add
in
sbb
inc
add
sub
repnz
mov
adc
int
repnz
ret
or
iret
addr16
dec
jns
and
cmp
jle
arpl
sti
or
sbb
push
movsb
sti
fldpi
adc
push
fldt
outsb
pushf
pop
ljmp
rolb
dec
adcl
movsl
push
out
push
mov
lea
push
mov
push
add
popa
divl
mov
add
lea
data16
adc
sti
das
add
mov
lea
push
push
push
xor
inc
cmp
iret
js
cmpsl
adc
inc
sub
rcr
aad
mov
sub
roll
add
sbb
jae
add
xor
hlt
imul
call
lods
mov
scas
dec
outsb
mov
pop
scas
sbb
xchg
add
adc
and
lret
pop
cli
jo
cli
cltd
lods
pop
push
dec
repnz
imul
cmovle
xor
and
and
movnti
movsl
pop
test
mov
addr16
inc
cli
and
dec
adc
dec
fisubl
cmp
aaa
and
mov
pop
mov
and
pusha
bound
sbb
sbb
push
inc
clc
push
mov
fs
incb
push
cmp
inc
sub
inc
sub
pop
xor
mov
clc
setb
test
mov
mov
sub
cmp
add
xor
sub
andl
push
lea
push
mov
push
cld
outsb
loop
mov
je
push
loope
jne
cmp
lcall
insl
push
add
or
mov
cmp
popf
push
jl
inc
dec
mov
incb
adc
dec
fwait
movsl
mov
call
push
sub
jecxz
xlat
mov
add
fstpt
inc
cmp
adcb
das
push
mov
jp
pop
mov
dec
add
cmp
lods
notb
mov
or
leave
mov
jp
fdivrl
jecxz
jno
cmp
addb
lock
cmp
add
icebp
xchg
adc
cld
xchg
das
mov
cmp
ljmp
pop
shrl
test
jne
jo
addb
out
into
aam
pop
bnd
fs
push
or
mov
pop
jmp
jp
mov
cmp
in
pop
jmp
push
adc
call
mov
jnp
repnz
clc
jne
add
pop
pop
in
sub
aas
sbb
push
movl
jno
mov
cs
fisubs
fidivs
ja
nop
adc
mov
pop
sbb
add
xor
and
lock
into
xchg
insl
or
push
jb
or
inc
out
ss
int3
mov
dec
lods
aam
aam
inc
add
add
xchg
jne
xor
cwtl
enter
pop
adc
enter
xor
push
push
enter
addl
push
clc
pop
add
call
lcall
inc
sarl
sub
arpl
pop
sub
jo
insb
fmull
aas
or
rcr
or
outsb
sbb
push
imul
les
les
sbb
in
pusha
sarb
pop
push
int3
sbb
scas
test
add
call
outsb
icebp
jle
gs
mov
adcb
mov
xor
data16
and
push
cmp
cwtl
pop
bound
pusha
add
xor
rclb
pop
jecxz
push
inc
mov
xchg
or
pop
lock
insl
scas
sar
outsl
pop
cmp
hlt
imul
pop
or
jp
lcall
insl
sub
int
or
sbb
or
adc
cltd
xchg
pop
cmp
adc
xchg
push
pop
lret
xor
imul
jp
adc
mov
daa
jp
jmp
and
out
pop
or
test
leave
adc
jne
loope
inc
out
mov
sub
xchg
dec
sbb
xchg
push
pushl
roll
mov
lret
jmp
dec
add
arpl
dec
cmp
mov
sbb
adc
xor
ret
je
icebp
dec
jae
sbbb
cmp
stc
mov
push
dec
mov
jmp
dec
mov
sub
and
mov
lcall
dec
add
dec
inc
pusha
inc
xor
movsl
jmp
nop
shlb
mov
or
fmulp
js
imul
cmp
sbbb
mov
push
pusha
jle
in
and
inc
mov
mov
aad
cld
mov
std
push
or
push
adc
xchg
lcall
and
out
mov
mov
mov
sbb
xor
jne
fsubr
pop
sbb
sbb
dec
dec
mov
cmp
in
mov
loope
mov
sub
inc
sete
mov
and
inc
push
add
push
and
push
xchg
stos
push
or
fmuls
jnp
cltd
or
cs
testb
les
sbb
enter
add
rclb
subb
mov
mov
ret
push
repz
add
mov
loopne,pn
sub
clc
push
lea
cmp
mov
add
cwtl
adcb
and
xor
push
mov
xor
adc
dec
cmp
add
and
pop
pop
mov
jno
mov
and
clc
fcoms
or
inc
enter
popa
popf
xchg
add
xor
fsts
ss
lret
shrl
outsl
mov
into
mov
daa
push
mov
or
jo
ret
mov
jg
add
sub
ss
mov
and
or
mov
outsl
mov
jne
and
sbb
jno
pop
repnz
pop
adc
dec
xor
mov
xchg
in
adc
cwtl
movsb
fwait
sbb
fldcw
lock
in
repz
dec
mov
xorl
dec
sbbl
in
and
imul
pop
or
arpl
movsb
shlb
in
ret
cmp
jle
sti
cmpsb
cmp
je
dec
xchg
mov
idivl
adc
mov
scas
or
mov
jno
mov
or
inc
fs
outsb
add
loopne
mov
jl
xchg
lock
dec
fnstenv
sarb
or
jg
outsl
movsl
jbe
movzwl
jp
push
push
cmp
push
jecxz
daa
aam
jb
test
adc
cmp
push
push
je
inc
fiaddl
adcl
mov
addr16
pop
pop
test
push
sbb
loope
jne
sbb
mov
jno
iret
adc
movb
mov
std
bound
out
push
rorb
xor
inc
iret
sbb
adc
push
into
lods
xor
in
enter
insl
push
or
and
or
loop
jae
or
into
push
repz
mov
and
mov
aam
inc
jp
mull
mov
add
push
add
notl
add
rolb
mov
inc
arpl
cld
mov
push
loopne
push
hlt
and
dec
adc
fildl
mov
push
mov
push
adc
loopne
icebp
fcom
ljmp
cmpsb
add
mov
sti
add
repz
sub
loope
jnp
clc
addr16
movl
lret
out
loope
inc
stc
xchg
dec
sub
add
icebp
inc
push
sub
and
icebp
mov
xor
xor
add
add
push
hlt
sub
repnz
ljmp
dec
mov
stc
add
and
and
adcl
push
inc
idivl
mov
arpl
xchg
je
nop
sbb
xchg
mov
shll
mov
mov
mov
inc
lea
shrb
jae
pop
or
mov
outsl
cmp
loopne
add
lock
test
xlat
popa
test
jmp
jb
xor
icebp
and
movsb
pop
inc
sbb
sbb
femms
popf
push
insl
stos
call
mov
inc
pop
or
js
sahf
mov
lcall
dec
sbb
inc
fnstenv
dec
jecxz
shr
cmp
int
sub
inc
call
es
mov
shlb
xor
or
mov
mov
rorb
sub
je
cs
arpl
cmp
inc
pop
in
lock
add
adc
push
imul
jg
dec
add
push
jecxz
inc
dec
cmc
cmp
pop
pop
xchg
jnp
or
test
dec
push
ja
jo
sahf
inc
inc
add
fistpl
mov
mov
xor
das
adc
rcll
inc
adc
mov
aas
sbb
xchg
negb
cmp
fstps
push
mov
pushf
xor
adc
js
sbb
adc
inc
or
xor
test
and
dec
sbb
pop
sub
out
mov
add
stos
mov
lods
rclb
mov
mov
cli
push
mov
sti
std
push
mov
fwait
or
rcl
pop
loopne
pop
xor
push
jnp
js
std
addr16
pop
sub
popf
jl
inc
lock
loopne
xchg
mov
ja
daa
popf
xchg
repnz
mov
out
mov
lea
add
jo
pusha
xchg
aaa
repz
lea
dec
cmp
dec
mov
xor
roll
cmpb
or
repnz
add
dec
nop
add
js
enter
mov
lea
inc
xchg
sub
movsl
or
pop
fwait
mov
mov
add
add
loopne
push
in
je
push
cmpl
sarb
dec
test
mov
sahf
or
sub
mov
sub
mov
leave
and
pop
shlb
call
neg
mov
sbb
mov
xor
jg
adc
cmp
inc
jnp
shrb
mov
mov
ja
test
or
addb
push
imul
stos
aaa
stos
push
or
clts
jns
push
roll
sbb
aas
xor
inc
pop
mov
push
orl
pop
lret
xor
movsl
jne
inc
xor
lea
outsb
out
subl
fnsave
xchg
sbb
je
roll
push
in
and
cld
jmp
pop
xchg
inc
fists
jne
push
jns
adc
or
dec
or
dec
and
test
xchg
pop
jb
pop
push
xchg
ret
imul
popf
int
out
inc
sub
push
mov
pop
and
adc
adc
add
mov
push
jb
mov
mov
or
jle
xor
add
test
mov
add
scas
pop
pushf
movzwl
sbb
add
xchg
pop
pop
mov
nop
je
fbld
fnsave
adc
das
xor
lret
adc
ljmp
jl
xor
or
stos
leave
jbe
rorl
mov
int3
jge
push
mov
lahf
ss
testb
adc
incl
mov
test
lahf
out
test
fs
data16
sub
push
arpl
jae
or
mov
cmp
xor
xor
subb
fstl
cmp
mov
fucomip
add
push
imul
psraw
lea
sub
notb
jae
cmp
adc
and
loopne
mov
push
out
mov
lea
push
mov
or
in
jp
or
cmp
add
out
insb
out
pop
mov
mov
xor
cmc
mov
inc
jl
mov
sub
cli
xor
sub
xchg
mov
shll
ret
mov
mov
mov
mov
mov
test
or
mov
xor
xchg
clc
jecxz
add
mov
add
inc
out
clc
adc
dec
inc
aam
or
dec
inc
jmp
mov
jmp
ss
jo
push
push
repnz
dec
sub
les
add
add
pushl
aas
jnp
sub
push
or
enter
push
mov
mov
xchg
or
clc
dec
xchg
pop
add
add
mov
scas
in
jl
aaa
loop
andl
sahf
fstps
inc
or
mov
mov
rcrb
mov
arpl
fisttps
push
adc
push
gs
push
rcr
add
jns
ss
add
xchg
jno
ret
adc
fwait
adc
aaa
les
imul
pushf
lods
xor
arpl
adc
or
pop
sbb
or
dec
movsb
pop
vmread
mov
ja
adc
mov
test
jae
mov
push
pop
ljmp
mov
or
mov
xchg
pop
mov
push
cmp
fistpl
add
push
or
mov
xchg
or
pop
loop
sbb
dec
and
pop
ret
or
out
stos
add
rcl
mov
and
int3
mov
subb
mov
push
inc
ret
dec
in
pop
mov
je
into
popa
pop
inc
mov
pop
jmp
jne
pop
loope
add
pop
das
pop
jge
xchg
je
add
daa
add
mov
rol
push
mov
dec
icebp
jns
pop
popa
testl
je
aam
cmp
dec
loopne
stos
insl
je
push
lods
and
mov
shll
push
mov
mov
pop
push
hlt
sub
sbbl
addb
add
popa
pusha
and
rcll
test
sbb
jnp
inc
xchg
mov
sbb
sbb
stc
shlb
outsl
xchg
xchg
mov
or
rcrb
scas
das
xchg
jno
cmpl
inc
mov
jne
push
pop
cmp
les
or
andb
ss
and
imul
mov
movsb
jns
sahf
movsl
adc
mov
jns
push
adc
aam
insb
test
stc
and
sbb
lea
and
pop
roll
and
das
sbb
or
mov
push
sub
shrl
xchg
mov
es
in
add
pop
sub
sub
push
repz
cltd
fsubs
sub
push
popa
movsl
or
xchg
xor
mov
mov
cmc
or
lock
push
add
test
push
sub
cs
test
jle
daa
das
xor
xor
adc
jge
dec
loopne
out
sbb
sub
mov
dec
nop
pop
into
in
aad
sahf
jbe
into
int3
xor
int
sbb
dec
or
fsubrl
add
xor
and
sub
nop
pop
insl
fdivr
rolb
mov
int
int3
sub
insl
sub
aam
fcomps
call
movsb
out
ja
push
mov
loopne
and
mov
pop
push
imul
mov
add
or
dec
dec
jb
loope
pop
adc
jl
xchg
push
rolb
sub
push
clc
or
add
mov
add
into
leave
sub
xchg
enter
mov
andl
pop
mov
shrb
not
mov
push
addb
data16
loop
bound
pop
and
fadds
cmp
in
push
xchg
cmp
sub
daa
loopne
and
or
or
xor
shl
or
xor
dec
jae
pop
leave
mov
sub
rep
mov
movsb
xchg
pop
or
sub
mov
mov
fdiv
add
mov
cmp
push
roll
mov
andb
jnp
or
arpl
cli
and
adc
in
xchg
cmpl
push
mov
inc
push
push
adc
in
mov
push
adc
int3
test
sub
fildll
ror
divl
push
inc
fld1
mov
nop
mov
lods
inc
or
and
mov
jno
mov
or
mov
sub
add
or
push
stc
sub
push
xchg
and
add
imul
mov
or
pop
dec
sub
mov
popf
orl
mov
push
cmpsb
call
mov
pop
cmp
jg
cmp
aad
push
sub
mov
popf
repz
and
mov
orl
ficomps
addb
adc
pop
cmpsl
adc
hlt
sub
push
sbb
or
out
jno
or
mov
and
jo
mov
cmp
cmc
loopne
js
adc
or
lea
js
cmp
xor
add
push
push
enter
mov
jae
testb
pop
lret
dec
loope
rorb
sub
or
incl
adc
pushl
push
mov
sbb
push
ficomps
lods
rcr
es
pop
stos
js
sbb
mov
ret
mov
add
push
lds
mov
gs
add
sub
pop
mov
pop
negl
cmp
mov
add
dec
movzwl
pop
jp
or
push
aam
or
push
inc
inc
or
or
rorb
push
or
orb
jb
fnstsw
add
jmp
lods
dec
les
add
push
sti
mov
int3
mov
xorl
adc
test
mov
pop
xchg
jns
inc
cmp
push
pop
cmp
mov
or
pop
push
push
jmp
add
test
sbb
ret
sub
nop
sbb
pop
jb
jmp
test
and
add
push
dec
in
lock
mov
push
sahf
or
and
jmp
ret
fsubrs
out
je
cmpb
push
aad
xchg
ds
stos
push
cmpsl
xorps
into
mov
xchg
loope
test
pop
aam
je
je
pop
das
inc
pop
hlt
push
pop
mov
lock
push
outsb
sbb
mov
ja
js
and
push
bound
xchg
cvtps2pd
push
test
push
mov
lods
push
iret
push
dec
fcmovnu
push
mov
lret
cmp
jl
insb
mov
int3
xor
sarl
pop
pushl
sub
cmp
jle
mov
cmp
jne
je
cmpsl
sbb
sbb
push
add
outsl
pop
stos
ljmp
mov
sub
jle
cli
dec
cmp
je
sub
jo
mov
push
loope
fisubl
iret
jae
outsb
test
jo
fstps
sti
mov
jl
sbb
dec
jmp
xorw
stos
cmp
pop
adc
movsb
mov
cwtl
in
xor
out
fldcw
fisttps
js
bound
push
dec
or
in
out
adcl
adc
dec
out
mov
fstl
call
mov
insl
xor
clc
arpl
add
or
movsb
jle
adc
lret
lock
add
test
add
add
add
mov
or
mov
lahf
out
mov
jbe
sbb
pop
xchg
cmp
xor
aaa
mov
or
jne
xchg
xchg
lock
rol
pop
inc
lea
and
or
and
xor
rorb
ret
cmpsb
mov
or
ret
jb
cmp
add
cmp
dec
inc
jo
outsb
push
rol
cwtl
mov
adc
lea
addr16
outsl
arpl
ljmp
mov
sbb
fwait
jnp
push
imul
xchg
insl
and
shr
push
imul
adc
add
dec
or
or
in
inc
jb
mov
push
pop
adc
adc
push
cmp
pop
sbb
sahf
xor
or
lock
aas
or
jne
or
sub
push
js
mov
sub
imul
dec
pop
push
and
jae,pn
mov
pusha
pushf
aam
dec
movsl
add
pusha
loope
faddp
jmp
inc
fbld
loop
jmp
mov
ret
shll
negb
inc
cmp
jae
pop
mov
cmpl
cmp
sbb
jp
inc
ffree
cmpl
cmp
push
icebp
adc
ja
push
pop
aaa
cld
fcmovnb
cmp
mov
inc
shl
jmp
adc
mov
sub
ljmp
sub
add
pop
sub
fisttpl
rcl
ja
lret
xchg
into
shlb
lss
movb
xor
fucom
pop
hlt
arpl
arpl
mov
inc
add
mov
js
mov
orl
cmp
call
adc
lcall
pop
fsub
in
mov
dec
adc
adc
push
push
or
push
dec
hlt
or
sub
test
jmp
imul
push
mov
mov
jmp
or
loope
ret
movl
push
repnz
xchg
dec
jmp
push
ljmp
jne
ret
cmp
lea
dec
popl
push
mov
cmp
je
ret
leave
icebp
dec
mov
add
pop
push
shrb
je
cwtl
mov
dec
fistl
or
or
mov
outsb
push
fisubl
inc
push
jl
push
sub
test
shll
loopne
icebp
add
xchg
lcall
out
sarb
mov
and
es
sub
cmp
sub
mov
cmpsb
lock
pop
ret
adc
lcall
and
shlb
out
dec
inc
jp
popf
mul
out
mov
gs
shl
push
dec
mov
mov
sub
bound
push
add
mov
cmpb
pop
out
jne
test
push
push
push
je
fdivrl
add
mov
int
pop
icebp
cmc
gs
sub
adc
movsb
mov
fcoms
xor
fbstp
mov
and
loopne
mov
call
dec
push
mov
mov
out
mov
movsl
mov
sbb
test
cmp
sub
addl
sub
dec
jnp
sbb
pop
mov
adc
adc
dec
dec
xor
and
cmp
xchg
inc
popa
call
cmp
sbb
inc
pusha
jns
daa
lock
add
movl
cwtl
mov
jae
fstpt
xchg
push
or
test
pop
shrb
lds
xor
push
mov
mov
es
fwait
mov
mov
sub
pop
sbb
shlb
jmp
push
sbb
or
jae
lock
push
movsl
sbb
je
inc
popf
add
mov
cmpsl
push
aam
dec
js
jl
add
repz
xor
inc
int
cwtl
push
inc
add
outsl
les
xlat
rcrb
push
add
push
decl
pop
jg
pop
jnp
add
mov
push
or
in
inc
sbb
add
inc
push
je
in
arpl
jo
push
pop
popf
in
dec
lahf
pusha
cmp
sub
push
xchg
rcll
mov
or
int3
inc
push
dec
xchg
ffree
inc
or
bnd
xor
mov
or
bound
popl
mov
inc
mov
mov
test
sub
push
push
jg
add
je
orl
decb
xchg
push
inc
movsl
insl
cmp
pop
or
push
mov
mov
lea
mov
hlt
xchg
mov
jg
or
mov
dec
cmpb
fwait
test
sbbl
es
mov
add
repnz
loopne
or
push
push
inc
lahf
cmp
push
dec
loop
shll
add
pop
imul
int
mov
mov
fldl
push
and
jmp
aam
cld
lea
add
add
push
mov
popf
test
scas
and
sub
sbb
movsb
and
xchg
sub
test
add
js
into
and
adc
lds
push
push
mov
sbb
jb
push
pusha
jne
pop
ret
pop
repz
imul
cmovge
add
bnd
mov
add
xorl
pop
xchg
arpl
or
push
xor
adc
repz
adc
and
ret
push
push
out
inc
xchg
pop
popa
pop
insb
xor
and
ds
mov
cwtl
fcoml
shrl
leave
lea
lret
scas
mov
add
push
hlt
enter
sub
cltd
fisttpll
mov
cld
push
dec
xor
js
dec
rorl
sub
movsl
add
cmp
daa
in
outsl
sbb
jae
mov
xor
xchg
aam
movsb
rcr
or
jno
mov
mov
jmp
aam
xor
jge
inc
lcall
ds
mov
xchg
out
stos
mov
lods
add
test
push
cs
imul
or
push
nop
loopne
insl
ss
mov
mov
and
mov
cmpl
and
inc
cmpsb
ret
sbbb
and
dec
inc
sub
pop
add
sbb
and
mov
jo
pop
arpl
shl
xor
leave
mov
adc
dec
iret
cmovle
push
push
pop
xchg
sub
ds
mov
push
sub
pushf
mov
test
sbb
jb
mov
int
sbb
xchg
fs
inc
lcall
or
pop
jg
sti
faddp
shl
adc
push
cmpb
enter
add
or
pop
or
pop
lret
ficompl
hlt
adc
fidivs
cmpsb
arpl
and
movsb
sub
adc
pusha
jb
sbb
enter
push
mov
std
lods
add
test
and
iret
xor
dec
adc
push
and
lret
jbe
int
inc
jg
stos
xchg
jbe
jmp
mov
push
testl
pop
and
push
pushl
mov
ficoms
jle
repz
or
adc
add
sub
pop
loope
and
aas
adc
push
mov
add
fadd
movsl
lcall
clc
mov
in
es
jp
dec
sub
xchg
add
xor
test
push
ret
rorb
arpl
xor
ja
push
dec
cmp
xlat
inc
cltd
jp
pop
in
in
cmp
add
pop
into
sbbl
lea
sbb
push
sub
xchg
sbb
movsb
adc
dec
sar
js
loop
jmp
mov
insb
outsl
insb
cmpsl
adc
add
add
sbb
arpl
jnp
or
ss
testl
or
push
es
fldl
mov
or
test
and
fs
icebp
lea
sbb
addr16
adc
jle
loope
outsl
test
pusha
jo
inc
insb
hlt
clc
add
jge
mov
mov
or
xchg
add
rcl
cmp
inc
pop
pop
inc
jo
aam
popa
inc
inc
push
aas
idivb
loop
sub
or
and
mov
mov
mov
mov
sbb
outsl
push
push
mov
loope
in
or
push
or
and
adc
sbb
xlat
push
test
push
movsl
addl
lret
adc
insb
adc
in
jae
mov
faddl
or
aad
int3
ret
jle
adc
push
xchg
xor
fimull
sub
lea
shlb
pop
jg
int3
lea
cmp
movsl
sbb
aam
lret
loope
jae
jnp
add
push
adc
jo
aaa
negb
mov
out
inc
scas
in
repnz
pcmpeqw
enter
mov
cmp
ss
push
bound
xchg
add
outsl
cwtl
mov
iret
fs
daa
int
adc
movsb
pop
fimull
aam
popa
mov
mov
adc
mulb
dec
rorl
repz
xlat
push
mov
sti
and
jnp
mov
sti
add
ljmp
jge
insl
adc
fldl
add
or
xor
lret
pop
mov
repz
dec
ror
and
and
fs
rorl
iret
and
jnp
stc
adc
adc
push
mov
in
inc
xchg
dec
dec
fdivrl
addr16
aas
and
and
dec
push
pop
mov
xlat
push
adc
test
outsl
stos
push
dec
push
aad
or
mov
mov
xor
clc
cs
mov
dec
arpl
es
and
push
test
mov
jecxz
mov
xor
sbb
mov
aas
inc
scas
in
cmpb
int3
das
jmp
lock
scas
pushf
push
or
outsl
fimull
xchg
jnp
orl
push
push
test
and
outsb
xchg
dec
js
adc
pushw
test
cmpsb
inc
pop
cmp
xchg
add
dec
mov
cmp
mov
or
out
mov
int3
fistps
adcb
test
test
ljmp
rorb
cmp
movsb
repz
loop
loop
mov
xor
rorl
xor
jle
sahf
cmpb
adc
inc
lds
daa
push
pop
push
or
push
jb
test
pop
mov
stos
mov
aas
fsubrs
add
and
cld
xchg
jle
cmp
jae
fistl
mov
fsubr
aam
out
orl
mov
loopne
or
mov
dec
push
push
jmp
shrb
push
cmpsb
ret
push
out
add
test
hlt
dec
cwtl
inc
insb
loope
out
movsb
jmp
loopne
jg
ds
rclb
dec
insb
push
push
push
mov
push
mov
sub
dec
jo
jmp
adc
xchg
cwtl
rorl
cmp
pop
push
xchg
add
xchg
data16
hlt
daa
cmp
ja
in
insl
lds
jge
aam
sub
test
adc
sub
pop
pop
xchg
sub
mov
jb
pop
inc
adc
test
adc
adc
sbb
clc
or
inc
ret
lods
inc
push
in
or
or
xor
mov
or
cmpsl
adc
and
xor
or
iret
adc
jge
or
sub
imul
mov
stc
adc
out
lcall
xor
imul
sbb
faddl
jecxz
and
dec
cmp
mov
loopne
lods
out
movsb
xchg
add
fmuls
subb
push
dec
mov
jmp
sbb
fistps
out
pop
and
aad
sbb
fdivl
and
mov
mov
cmp
mov
mov
jmp
jb
sub
jecxz
rolb
ja
js
movsl
ljmp
mov
jl
push
pop
aad
jecxz
jge
orl
lret
inc
add
push
ret
cmpsb
push
mov
push
in
push
sbb
rorb
sub
jge
or
call
xlat
clc
std
in
scas
pop
orl
jno
lea
call
push
mov
es
xchg
xchg
sbb
imul
dec
es
out
or
les
mov
xchg
and
inc
sbb
mov
daa
call
dec
dec
inc
mov
rolb
scas
test
adcl
movsl
mov
stos
mov
or
cmp
cmp
sti
xor
push
pop
sbb
mov
mov
mov
lods
addb
adc
add
inc
test
std
insl
push
add
or
hlt
mov
mov
icebp
xor
push
jle
jno
fs
dec
cmp
sti
or
call
xchg
dec
or
rorb
inc
test
cmp
mov
add
xorl
enter
mov
sub
push
sbb
cmp
adc
lods
push
out
stos
dec
jb
sub
xorb
jmp
roll
mov
cmpb
das
mov
cmpsl
jmp
movsb
out
orl
pop
add
dec
jo
jmp
add
rorb
dec
xlat
scas
sub
popf
jb
pop
shrl
cmp
adc
ret
movl
sbbl
xchg
cmp
dec
push
ret
push
push
inc
cmp
push
xor
dec
fwait
cmp
fstl
mov
jns
in
adc
adc
add
xor
icebp
xor
xor
addr16
push
imul
adc
js
sti
sbb
sub
inc
mov
and
shl
adc
aaa
adc
je
dec
jne
jo
int
loope
jo
clc
adc
add
push
sti
movsb
xchg
lcall
push
insb
and
add
loope
leave
fiaddl
xchg
outsl
cld
lcall
mov
cmp
je
xchg
lcall
das
xchg
divb
mov
xchg
mov
or
jge
jnp
arpl
pop
add
or
inc
movsb
mov
daa
xor
sub
cmp
jne
and
jp
cli
jb
lea
or
mov
add
jno
dec
outsb
or
jmp
lea
lcall
pop
lock
ja
xchg
ss
sub
andl
pop
je
mov
cld
ljmpw
and
mov
out
adc
test
xor
out
cmp
or
iret
mov
xorl
popf
dec
add
adc
outsl
orb
cmp
testb
adcb
adc
sbbb
sub
int3
adc
mov
dec
push
mov
aam
or
aam
or
cmpb
popf
loope
data16
pop
and
ret
or
or
xorb
or
dec
lea
push
jae
sbb
cmp
pop
xorb
adc
stos
jbe
aam
and
mov
dec
adc
in
and
lods
cmpb
mov
pushf
cmp
push
push
les
cmp
incb
icebp
or
jl
mov
mov
aaa
movsb
xchg
sub
nop
adc
push
shll
sbb
push
hlt
push
add
push
xlat
mov
adc
sbb
cmc
jg
out
and
jbe
add
adc
sti
or
pop
add
cwtl
das
add
push
adc
and
sub
and
pop
push
stos
inc
or
pop
or
jae
fs
add
push
mov
pop
lods
in
mov
jmp
inc
popa
popl
adc
adc
mov
inc
sbb
push
inc
movsl
or
loopne
cmp
jge
loope
xchg
push
adcb
or
imul
cmp
lds
test
inc
pop
out
movsb
mov
dec
add
popa
adc
sbb
andb
addr16
or
sbb
inc
js
es
jp
test
lods
icebp
sarl
adc
xor
movsb
mov
lea
rorb
mov
mov
and
xchg
sarl
pop
pop
ja
push
sub
ss
xchg
push
mov
or
push
pop
addr16
mov
jae
inc
sub
add
sbbl
mov
mov
sbb
into
jg
aaa
test
popf
mov
inc
cmp
cmpb
je
lret
loopne
inc
push
pop
pop
sbb
mov
cmp
fcoml
sub
push
and
push
sub
lods
popa
jb
xor
movsb
fdivrl
mov
sbb
ret
adc
sarb
or
or
push
adc
add
movsb
push
lods
gs
dec
mov
aam
sbb
pusha
psubsw
mov
or
jnp
loope
cmp
pushl
sub
daa
mov
sub
xor
sbb
inc
ficompl
nop
lock
push
add
add
mov
js
loope
xor
or
incl
rorl
adc
fsubl
xor
fadds
adc
loopne
inc
enter
xchg
cltd
popf
pushf
jmp
sti
or
cmpsb
mov
roll
subl
loopne
mov
test
sbb
inc
pop
adc
bound
je
mov
sbb
std
aaa
push
je
incl
jl
mov
mov
mov
jle
dec
lods
push
cmp
aam
dec
and
sub
xlat
dec
inc
or
addl
sbb
pop
push
mov
add
sbb
pusha
iret
lea
mov
jl
sub
cwtl
arpl
push
lea
jmp
dec
xchg
sbb
test
movsl
fbstp
sub
xor
adc
xor
mov
push
xchg
xchg
push
je
mov
aad
sub
cmp
mov
dec
cmp
cmp
mov
pop
lds
adc
mov
into
mov
adc
dec
pminsw
pusha
pop
std
mov
in
fidivl
or
movsb
and
push
adcl
lock
dec
cwtl
cmp
or
push
add
jle
or
inc
fadd
sub
cmc
jns
bound
les
das
push
aas
adc
sub
aas
dec
or
cli
insb
cmp
shlb
andb
inc
cwtl
add
pop
pop
loopne
mov
dec
jge
call
xchg
mov
jge
cmp
cmpsb
inc
sub
cmp
cmp
popa
sar
imul
pushf
je
mov
dec
fiaddl
lods
leave
aaa
leave
sbb
test
mov
leave
sbb
lds
xchg
sbb
xor
test
pusha
add
xchg
mov
or
push
mov
push
xorb
jecxz
inc
fidivrs
mov
push
pop
lods
xchg
bound
xor
sub
dec
xor
xchg
xchg
adc
loopne
add
fwait
movsb
repnz
addl
in
lods
add
orl
pop
mov
push
mov
dec
add
sub
sub
fwait
push
lock
in
movl
and
xor
xchg
dec
pop
add
sti
movsb
jb
and
xchg
std
aas
movl
sbb
push
pop
mov
xorb
xchg
inc
push
bound
sub
push
sarl
lods
xorl
les
dec
sbb
in
gs
push
imul
ss
push
sub
sbb
and
dec
mov
lods
stos
xor
dec
fcmove
mov
or
in
pusha
adc
shlb
icebp
push
int3
js
mov
pushf
es
sub
xor
lea
or
xor
mov
imull
jmp
ss
adcl
mov
mov
inc
mov
loopne
fidivl
subl
mov
out
ret
loopne
rcll
out
nop
out
sbb
clc
xor
sub
sbb
dec
lcall
ja
mov
jb
and
movsb
and
roll
mov
or
popf
pop
or
nop
lret
sub
mov
push
sub
leave
xor
pushf
inc
aaa
ss
mov
add
pop
dec
cmp
je
jae
jmp
leave
mov
adc
xor
jno
xchg
sub
jno
stos
adc
out
je
cwtl
pop
xlat
dec
inc
dec
enter
cltd
cmp
jge
imul
outsl
jl
mov
jne
lea
orb
int
inc
jg
mov
scas
shlb
nop
mov
push
loopne
push
adc
sar
mov
and
mov
push
sub
and
js
adc
movsl
sbb
push
movsb
push
pop
iret
push
push
adc
xchg
fisubl
push
dec
jb
scas
push
mov
orl
mov
les
icebp
test
adc
scas
mov
jecxz
int3
add
pop
sub
add
sbb
add
fs
pop
pop
mov
mov
push
jns
clc
int
mov
fs
cld
mov
cmp
jbe
decl
ljmp
pop
into
sub
lret
push
inc
setb
jne
mov
push
lahf
sbb
sahf
into
xor
jmp
dec
mov
mov
jmp
mov
sub
addr16
or
dec
sbb
cmovs
xchg
adc
test
pushf
test
test
dec
mov
mov
inc
push
pop
loopne
jnp
mov
mov
cmp
inc
xor
rorl
fincstp
lret
or
xchg
loopne
or
ss
push
dec
push
add
cmp
mov
jmp
mov
sub
mov
or
adc
sub
pop
dec
std
push
mov
push
adc
loope
inc
jmp
stc
xchg
lret
mov
testb
mov
xor
es
movsb
outsl
pop
adc
data16
mov
mov
xchg
subb
sub
jge
lea
adc
jbe
adc
adc
push
cmpsb
lock
xchg
mov
roll
xchg
in
xchg
add
mov
mov
push
add
push
test
push
and
push
xor
xor
call
sub
js
xor
daa
xor
test
adc
and
mov
lea
push
pop
movsb
enter
popa
das
push
inc
adc
aad
es
add
aad
in
push
test
out
lea
fcom
fdivl
and
subb
inc
xor
sbb
inc
cs
test
mov
in
sbb
add
xchg
mov
push
xchg
sbb
sbb
pop
sbb
mov
push
pop
cmp
jne
jb
dec
mov
jge
and
add
pop
push
xchg
sub
and
and
sbb
cmp
mov
cmpsb
popa
and
or
add
inc
enter
test
and
push
xor
mov
xor
out
inc
jb
and
sub
and
sub
inc
jb
jae
and
push
xchg
push
mov
dec
inc
pusha
lds
insl
addb
and
xor
pop
test
lea
ret
sbb
cmc
sbb
int
stos
roll
inc
add
je
inc
mov
and
or
add
cwtl
and
mov
sahf
sbbl
adcb
or
es
and
xor
jne
rcrl
adc
call
jb
adc
add
add
es
add
shlb
xchg
pop
rolb
and
push
popf
rorl
mov
push
les
sarb
lds
rcr
ja
and
ja
sub
clc
inc
pop
inc
je
repnz
shl
sbb
stc
call
sub
fstp
and
push
add
mov
sbb
leave
or
faddl
xor
inc
cmpsl
flds
mov
into
jae
jle
test
mov
outsb
out
js
jge
xchg
insl
or
jno
xor
xchg
and
in
or
cltd
nop
xchg
movsb
jl
fiaddl
add
ja
into
out
and
mov
mov
add
andb
bound
pop
dec
xchg
inc
outsl
leave
add
in
push
xchg
xchg
pop
mov
xor
sub
stc
mov
xor
mov
mov
jo
movsb
sub
jg
hlt
dec
fidivrs
enter
jae
inc
add
outsb
mov
jo
sbb
and
popl
sbb
loopne
ret
cmpsl
iret
dec
mov
insl
mov
add
sbb
addb
jno
cmp
sbb
sub
cmp
sbb
inc
fdivrl
xor
lock
cmpsl
and
mov
sbb
rclb
inc
xlat
dec
daa
stc
cmpsb
dec
adc
pop
pop
ja
inc
lea
or
mov
cmpsl
sbb
mov
lods
fwait
lock
mov
hlt
jp
jae
xor
insb
enter
mov
push
pop
jnp
mov
dec
mov
pop
mov
xor
add
mov
mov
add
loope
pushf
pusha
and
pop
ds
push
bound
rclb
inc
adc
pop
cmp
pop
cltd
xchg
sbb
xor
add
xchg
in
jle
mov
leave
insl
or
pop
or
and
lret
or
rcrl
cmp
or
stc
test
and
je
insb
mov
lock
xor
lret
pusha
sbb
mov
add
lcall
loop
dec
or
notl
daa
add
mov
jo
jmp
sbb
loopne
inc
jecxz
dec
push
lret
cmp
dec
iret
inc
nop
mov
ret
xor
int
mov
rcr
dec
adc
adc
lea
scas
rclb
popf
adc
jmp
jnp
add
orl
add
add
and
stos
mov
fidivrs
sbb
subb
fsubl
cmp
mov
pop
imul
cmp
mov
imul
loop
mov
fs
pop
aad
cmp
adc
leave
shr
adc
movsb
lds
fcomps
cs
addr16
inc
push
pop
mull
or
fstl
xchg
pusha
rcll
inc
lea
scas
lahf
sbb
inc
test
ret
sbb
mov
push
xchg
adc
adc
outsl
arpl
and
add
test
stos
lds
push
enterw
adcb
jb
insl
lea
inc
hlt
test
mov
int
add
xlat
inc
mov
or
or
push
sbb
mov
int
pop
sbb
push
xor
enter
call
fistpll
pop
pop
push
push
xor
sbb
fs
out
push
cmp
jno
push
push
loop,pt
test
sbb
stos
incl
dec
addl
mov
es
jo
adc
jl
arpl
mov
and
add
int
adc
cmc
add
xchg
out
adc
sbb
inc
dec
movb
popf
mov
or
mov
xor
pusha
popf
movsl
mov
dec
adc
sbb
xor
cmp
repz
inc
lcall
xor
xchg
sbb
cmp
in
inc
mov
je
adc
bound
adc
xor
mov
xlat
adc
mov
test
rol
sbb
jbe
pop
add
fldt
pusha
test
push
adc
push
js
gs
arpl
fmuls
mov
jge
sub
inc
sub
iret
clc
jg
hlt
popa
icebp
lcall
jmp
and
mov
shr
cmp
mov
cmp
jae
sbb
daa
jmp
insl
jge
pop
loope
jp
jle
jge
ljmp
ds
add
les
fstl
es
dec
dec
orl
shl
push
call
and
sub
cmp
cmp
inc
and
xor
shlb
inc
test
push
push
fisubrl
pcmpgtw
imul
data16
push
es
pop
xchg
xor
cmp
mov
cwtl
inc
mov
fiadds
dec
daa
inc
adc
xor
and
dec
and
xchg
lret
xchg
push
or
test
imul
lea
adc
cmp
or
push
jnp
pop
mov
push
push
pushf
es
ret
aaa
push
repz
insl
and
test
js
je
xor
xor
cli
popa
sub
pusha
lock
lea
xor
dec
out
xchg
in
mov
jbe
xchg
push
cmpsb
cmp
xchg
ss
stos
mov
adc
pop
fwait
xchg
rolb
sbb
mov
or
adc
dec
stos
dec
inc
int3
add
ja
mov
adc
cltd
jmp
mov
inc
pusha
test
jae
out
scas
lods
pop
inc
pop
dec
test
add
mov
cs
sbb
fildl
scas
icebp
push
les
mov
pop
data16
mov
fs
xorb
add
movsb
mov
jae
add
cmp
push
sub
mov
xlat
push
dec
add
movb
sub
pop
pop
add
sub
aaa
add
push
inc
add
insb
fstps
orl
mov
fstps
jnp
jo
xor
sbb
xor
fisttps
mov
or
test
movl
xchg
or
push
pop
pop
lock
xchg
subl
mov
xor
cmp
mov
push
or
lcall
movb
and
cmp
dec
sbb
insb
and
scas
ret
xor
test
js
xchg
arpl
push
daa
cwtl
and
scas
mov
insb
mov
cmp
push
push
push
lods
push
sub
mov
jnp
adc
jle
lock
adc
pop
cmp
push
push
or
movsb
jmp
mov
and
push
and
push
adc
lods
xchg
fisttpll
push
mov
add
and
add
int
add
cmp
out
nop
inc
jle
pop
mov
or
cmpb
dec
insl
movsb
sqrtps
cld
test
push
ret
daa
call
loop
sbb
push
push
std
icebp
mov
fcoml
sbb
addr16
or
push
out
ja
fisttpl
testl
clc
add
scas
jle
or
sub
ja
pop
addr16
rcrb
mov
rol
or
cli
aas
xchg
loopne
les
das
test
jne
add
pushf
jle
leave
push
lock
outsb
add
dec
sbb
inc
pop
shr
sbb
add
add
add
pop
add
bound
mov
cwtl
sbb
mov
sti
mov
mov
sahf
jno
repz
sarb
gs
imul
add
mov
sub
mov
sub
mov
adc
das
and
cmp
or
jns
sub
ret
mov
adc
xchg
inc
movsl
in
mov
movsb
ja
rorl
std
mov
leave
push
imul
js
test
xchg
imul
jno
loope
loopne
fs
test
add
in
lock
adc
test
sbb
mov
and
sbb
cmp
jp
mov
jo
test
adc
add
mov
lahf
fldl
rorl
cmp
jl
daa
cmp
push
dec
xlat
stos
adc
sti
incl
add
mov
rorb
arpl
std
scas
push
sub
js
movsbl
outsl
pusha
adc
cmp
jne
fucomi
bound
je
or
je
adc
jge
sub
insl
fisttpl
adc
hlt
fiaddl
cmp
mov
sbb
inc
mov
out
dec
ds
addl
shlb
push
lods
test
xor
fsts
ret
lea
imul
enter
ficoml
jne
pop
mov
xor
jg
loopne
lahf
sbb
adc
cmp
sub
dec
xchg
insb
mov
sti
sbb
je
test
imul
rorb
xchg
dec
jnp
mov
pop
jp
clc
pop
push
pop
cmp
mov
sbb
xchg
adc
lea
add
mov
test
pop
add
sbb
fwait
jp
adc
sbb
sub
ror
mov
pop
xor
inc
es
lds
jg
inc
cltd
lcall
fldl
sub
insl
mov
sub
aaa
lret
mov
sbb
and
inc
movsl
bound
cmpsl
push
fsubs
repnz
push
push
sbb
lea
pop
or
mov
mov
inc
pop
mov
cld
adc
lret
push
repnz
cmp
sbb
xorb
lret
push
inc
sbbb
lods
xlat
in
lods
pusha
xor
icebp
mov
ja
test
jne
andl
inc
test
push
sub
and
xchg
mov
push
push
and
daa
into
or
pusha
fdivp
aam
lock
dec
mov
sarl
jecxz
shrl
xor
jge
out
inc
mov
popa
xor
push
add
rcl
rcrb
scas
xor
mov
sub
mov
int
call
les
adc
cmp
test
fnstenv
adc
jge
mov
fidivrl
jnp
dec
call
xor
push
pop
movl
pushf
inc
or
movb
bound
out
int3
mov
and
movl
testb
xchg
xchg
xor
cmp
pop
loope
test
xchg
clc
sbb
lcall
xchg
or
or
sub
push
clc
add
std
inc
bound
mov
or
les
push
cs
or
push
shlb
adc
pop
lcall
in
cmpsl
sbb
adc
fs
inc
sub
inc
sub
pop
cmpl
adc
dec
inc
lea
jecxz
shlb
inc
or
push
jnp
les
gs
pop
jne
mov
add
pop
ret
dec
mov
clc
push
mov
out
mov
push
cmp
imulb
mov
and
sub
ret
cmp
add
bound
movsl
add
xlat
dec
adc
rorl
cmp
pusha
out
insl
orl
stc
dec
adc
push
and
add
mov
mov
and
or
sub
fisubrl
or
aam
sub
incl
loop
push
stc
push
add
pop
aam
notb
push
push
pusha
in
pop
push
mov
add
or
lcall
test
push
jne
sub
mov
nop
call
test
cld
and
es
push
cmp
jne
add
pop
sub
adc
jle
mov
pushf
xchg
or
cmp
mov
ds
pop
hlt
nop
xor
movsb
mov
scas
push
dec
mov
repnz
adc
insl
lods
xchg
nop
arpl
adc
pushl
pushf
imul
jmp
and
mov
mov
insb
shl
jmp
push
sub
ja
push
aam
xchg
jp
cmp
movsl
sti
xor
imul
jbe
inc
xor
inc
fwait
orl
xchg
test
pushf
ljmp
sub
lea
in
js
imul
mov
and
push
push
jnp
imul
cmp
jle
cmp
js
add
xor
add
jbe
adc
popf
enter
and
cmpb
inc
cld
add
jnp
hlt
push
cmpsb
push
pop
out
mov
inc
sbb
loop
std
ss
cmp
and
cltd
mov
xchg
out
pop
pushl
pusha
adc
xchg
mov
movsl
adc
lds
dec
sbb
or
xor
cli
add
sub
rclb
pop
loope
inc
pusha
movsb
cmp
add
and
pop
xor
xor
outsl
test
enter
add
mov
and
pop
xchg
mov
sarl
push
push
shr
cmp
inc
adc
dec
push
punpckldq
insb
addr16
hlt
outsl
push
test
pop
cmp
and
push
cmp
lcall
adc
adc
std
addl
jnp
add
test
mov
jg
rcrb
pop
rorb
push
push
adc
and
push
lea
mov
inc
push
xor
push
pop
fistpll
imul
mov
rorl
add
xchg
cmp
push
outsb
mov
mov
test
adc
mov
loopne
xchg
push
mov
sub
xor
cltd
call
dec
ret
cmp
sub
aaa
loope
pusha
das
add
mov
mov
in
xlat
inc
xlat
rcrb
inc
jp
clc
popa
sbb
imul
push
push
stos
mov
push
enter
outsb
sub
dec
inc
jmp
dec
inc
rcl
and
dec
mov
adc
in
push
int3
nop
arpl
mov
cmp
push
je
push
mov
jae
add
mov
dec
add
pop
mov
cmp
jg
or
sub
adc
or
pop
int3
cmp
sbb
je
int3
push
int3
pop
push
adc
jge
in
adc
out
sbb
push
jmp
bound
sbb
pop
xor
test
and
xchg
sbb
mov
test
xchg
inc
or
cltd
jb
push
sub
daa
dec
mov
push
jbe
cmp
je
and
sbb
sbb
jle
iret
and
mov
repnz
or
sbb
icebp
push
daa
cmpsb
add
incb
loop
pop
jnp
push
aam
fistpll
xor
dec
popa
cmpsl
add
decb
jge
inc
mov
cmpb
add
data16
sub
movsl
or
dec
jge
scas
jne
ljmp
fdivrs
xchg
jno
sbb
into
aas
inc
push
ret
adc
push
rorl
xor
jl
push
bound
mov
xchg
push
loopne
push
lock
xor
push
inc
loopne
nop
adc
scas
lret
mov
bound
jge
fstps
push
pusha
mov
insb
xor
lret
or
push
inc
ss
popl
sub
dec
and
push
fildll
jne
mov
mov
jle
add
mov
hlt
sti
cmpw
sbb
aad
adc
jp
sbb
add
ljmp
mov
pop
mov
add
sar
sbb
push
je
mov
into
pushl
pop
dec
jecxz
mov
xchg
sbb
jo
add
push
pop
or
sbb
mov
aas
fwait
xchg
mov
push
sahf
ret
dec
mov
dec
dec
dec
push
add
jp
sub
jmp
cmpsb
aaa
add
jae
or
mov
sub
mov
jnp
add
pop
or
inc
test
testl
sbb
cs
add
cmp
add
add
subb
mov
sahf
mov
ret
in
cmp
xorl
adcl
push
add
nop
pop
push
mov
je
cs
mov
sar
and
and
pop
mov
loope
mov
ret
sti
cmp
jne
jb
fs
push
xchg
add
pop
push
in
jmp
pop
push
pop
push
dec
xor
push
xor
push
push
fdivl
and
jle
leave
test
divps
insl
pop
adc
sbb
mov
push
and
je
lds
mov
roll
pushf
push
psllw
iret
adc
test
enter
add
imul
or
xlat
mov
fwait
inc
jge
enter
movsl
push
mov
scas
mov
sub
aad
or
or
stc
jmp
inc
mov
pushf
adc
add
push
xor
dec
adc
cmp
xor
mov
xor
ss
lock
push
test
adc
leave
pop
shr
mov
cmp
or
ds
inc
iret
mov
or
nopl
or
xor
add
inc
arpl
cmp
push
add
adc
adc
test
sbbb
dec
enter
mov
push
mov
imul
insb
cli
adc
xor
or
sbb
enter
push
sbb
add
mov
add
dec
cmp
cld
pop
loope
pop
xor
or
sbb
daa
scas
mov
or
cmpl
pop
jo
or
jp
leave
add
and
leave
dec
pop
adc
mov
fwait
imulb
mov
mov
pop
or
imul
mov
jp
std
push
imull
gs
pop
inc
hlt
sub
lea
mov
jbe
pop
xchg
into
push
mov
ret
inc
dec
pop
jne
inc
push
mov
test
loope
int3
dec
dec
xor
or
fcompl
pop
or
je
push
and
cmc
scas
push
movsb
mov
dec
mov
je
lods
adc
mov
in
push
dec
jo
sub
add
dec
testl
jb
loopne
mov
ret
push
icebp
fcoml
and
in
aad
dec
mov
sbb
pusha
inc
adc
adc
loop
mov
mov
or
mov
ret
inc
xor
es
jbe
psubw
mov
push
ljmp
cli
dec
adc
or
and
jmp
and
push
loopne
jo
add
ds
inc
mov
inc
add
clc
arpl
jbe
jno
push
sub
aaa
mov
les
mov
push
push
sub
cmpsb
icebp
and
mov
push
jecxz
mov
sub
shlb
rclb
aaa
add
loope
movsl
cmp
jmp
push
push
das
dec
pusha
lret
sbbl
jbe
inc
jmp
adc
sbb
xlat
dec
push
aaa
mov
mov
dec
sbb
fdiv
in
push
ljmp
pop
jmp
scas
xchg
add
adc
mov
in
inc
mov
orb
xlat
cmp
negb
nop
xchg
xor
fs
xor
sbb
or
and
sbb
jnp
push
loop
add
push
pushf
and
adc
add
sarb
sbb
push
push
push
mov
dec
clc
pop
aam
mov
cli
mov
call
add
js
test
jo
xor
iret
xor
dec
inc
inc
aaa
imul
mov
add
test
std
dec
push
inc
sahf
dec
inc
inc
dec
and
mov
test
scas
test
fdivs
repz
and
cmp
sbb
sar
aad
push
jne
sub
sbbl
test
inc
inc
add
loop
and
mov
pop
fwait
jp
ret
icebp
int3
clc
mov
test
mov
dec
push
repnz
sahf
test
jmp
daa
mov
loopne
ret
jae
mov
adc
xor
jl
outsl
incb
int3
orl
in
jmp
dec
mov
enter
inc
int3
mov
ror
roll
dec
dec
jns
add
insl
push
enter
inc
jle
pusha
call
test
mov
inc
loopne
ljmp
adc
repz
push
stos
lret
call
iretw
dec
push
xchg
add
lods
mov
and
sbb
cmp
or
stc
or
lock
dec
lret
mov
insl
push
push
ss
dec
pop
in
and
rolb
cmpb
stos
mov
add
lret
in
in
push
inc
or
in
mov
mov
test
aaa
mov
adc
mov
adc
iret
es
ljmp
sbb
cmpb
add
dec
cmpsl
adc
push
mov
pop
adc
sub
cmpsl
xchg
xor
lods
cltd
shlb
pop
out
push
jne,pt
cmp
mov
or
sarl
mov
mov
push
dec
inc
adc
xor
pop
cmpsb
std
sbb
shrl
cld
mov
mov
stos
add
shr
lahf
or
and
rclb
jae
les
pop
stos
jno
mov
sti
cmpsb
pop
lods
scas
push
push
push
push
add
aaa
xor
jnp
sub
lods
or
adc
ret
std
incl
aaa
ret
mov
and
pop
or
adc
cmp
jmp
stos
cmc
mov
push
jg
lods
push
repz
cmp
out
inc
cmp
dec
pop
mov
mov
push
inc
sbb
mov
pop
and
loopne
rorb
addb
pusha
xor
pop
xor
or
dec
and
push
or
or
js
or
push
mov
mov
sub
xor
and
jmp
cmp
jne
xor
shrl
nop
fsubrp
scas
shlb
jmp
ss
shlb
imul
push
dec
add
jne
push
jle
adc
jae
xor
jle
push
pushf
inc
cmp
or
out
or
pop
fmulp
mov
cs
seto
jne
pop
clc
neg
or
push
aam
add
into
jge
adc
int3
ret
rol
cmp
pusha
daa
jge
jbe
in
sub
mov
shl
jl
inc
pop
insb
or
xor
inc
rolb
sbb
les
push
gs
mov
lret
xor
insl
jne
jecxz
inc
mov
xor
repz
addb
imul
movsl
test
or
lret
cmp
out
add
pop
inc
add
lret
cwtl
dec
lcall
ja
rep
jb
subl
inc
inc
cmp
inc
mov
xchg
and
mov
aas
xchg
adc
inc
mov
push
add
adc
and
add
and
mov
dec
sub
inc
fs
push
sar
jno
jmp
xor
push
dec
cmp
mov
js
jo
pop
sub
outsl
adc
sbb
adc
imul
adc
ss
pop
cmp
das
and
dec
flds
popf
pusha
jno
mov
jo
or
loope
js
pop
cmc
mov
bound
clc
or
and
lds
and
pop
and
test
or
arpl
jnp
pop
sbb
aas
out
pop
sbbl
lea
mov
ffreep
sub
add
sub
adc
shl
and
add
movsl
pop
stc
sub
dec
ds
divb
stos
scas
sub
or
mov
cltd
mov
dec
loopne
loope
ljmp
mov
inc
iret
lea
xchg
and
clc
or
aad
and
pop
inc
add
or
repz
push
jb
sub
sub
leave
xor
xor
or
push
mov
xchg
cmp
adc
out
pusha
add
cmp
and
mov
add
add
mov
adc
mov
mov
mov
dec
enter
or
add
addl
mov
ret
dec
mov
xor
test
pusha
loope
stos
or
mov
push
fcmovbe
jp
mov
add
test
arpl
inc
lea
addl
pop
push
in
adc
pop
fistps
lret
pop
nop
adc
and
popa
sbb
sbb
add
addl
or
push
jle
or
shlb
bound
movl
adc
push
xchg
loopne
adcl
nop
and
dec
or
adc
mov
addr16
stos
and
iret
mov
rolb
push
jmp
push
dec
jmp
imul
push
sbb
mov
adc
cmp
inc
test
cmp
mov
fcmovbe
inc
push
dec
xor
xlat
sub
lods
xor
movsb
sub
sbb
sub
movsb
movsb
stc
or
sbb
pushf
adc
aaa
xchg
dec
es
xchg
movaps
bound
mov
popa
es
iret
insl
dec
sub
cmpsb
sbb
sub
cmp
add
fcomps
adc
aad
and
jbe
cltd
sub
xchg
mov
xchg
inc
push
lahf
mov
jmp
adc
add
sub
xchg
scas
lods
andl
sub
jg
lret
and
stos
or
mov
cli
call
dec
lock
sub
mov
lock
jnp
sub
or
and
lcall
jmp
arpl
and
xor
icebp
aad
sbb
jo
xchg
add
daa
push
dec
cli
push
popf
cld
icebp
mov
inc
adc
out
in
in
cmp
push
ss
inc
aas
movsl
fdivl
mov
lods
pop
sbb
rolb
add
hlt
or
mov
mov
sbb
sub
mov
sub
dec
xchg
je
test
lea
outsb
sub
shrd
or
jb
or
mov
pop
gs
xor
add
or
test
mov
and
jae
rorl
or
dec
data16
and
adc
es
push
xchg
ret
add
gs
xchg
fisubs
push
xchg
out
inc
xchg
fcom
jno
popa
das
aaa
lea
and
ss
and
adc
mov
dec
insl
mov
and
add
add
pop
sub
orl
adc
sub
outsl
adc
popa
or
and
mov
or
cs
icebp
subl
cmp
fcoml
inc
sbb
fs
mov
rcll
cmp
xor
pop
iret
dec
sbb
rcll
and
mov
dec
sub
or
mov
mov
aam
push
stos
sbb
push
pop
or
aam
movsl
imulb
sub
adc
push
pop
bound
adc
arpl
xchg
sub
mov
xor
adc
sub
in
push
pop
fists
loope
xor
cmp
mov
fs
mov
faddl
cmp
push
iret
inc
dec
push
and
mov
push
pop
jp
or
push
and
mov
aam
clc
mov
adc
xor
xorl
mov
adc
mov
test
loope
add
movzwl
popa
xor
pop
call
sbb
mov
xchg
inc
outsl
filds
inc
loope
inc
sub
inc
or
inc
jbe
push
pushl
sarb
push
mov
push
subb
xchg
insb
loop
outsb
daa
adc
push
ja
or
xchg
arpl
xchg
cltd
push
push
adc
jmp
fdivr
je
ss
loop
leave
add
and
xchg
push
mov
cmpsl
rolb
cmp
mov
or
or
pop
inc
jg
xor
aaa
mov
sub
push
pusha
sub
movsl
cld
or
rorl
sub
inc
ds
push
push
loopne
or
push
xor
jmp
mov
prefetcht2
sbb
dec
cli
xor
pslld
add
inc
adcb
imul
adcb
clc
and
push
sbb
pop
pop
dec
inc
or
xchg
mov
and
nop
sbb
sub
addb
cmpsb
les
push
test
mov
jno
push
mov
js
jbe
pop
pop
mov
pop
mov
mov
sbb
cmp
cmp
int3
and
pop
xor
pop
add
fiadds
outsb
xlat
or
arpl
scas
jno
adc
das
les
add
xor
inc
mov
sbb
cmp
paddq
add
push
dec
sub
outsl
test
shlb
lods
loop
adc
sbb
inc
dec
dec
fbld
fdivs
add
ss
sbb
dec
pop
loop
xor
cmpsl
scas
pop
arpl
push
adc
mov
dec
inc
ss
test
or
lds
add
xchg
sub
loop
jl
es
divl
jbe
or
xor
push
jmp
mov
jp
iret
push
sbb
and
mov
mov
jmp
mov
sub
jae
in
xchg
xor
jno
inc
adc
fistpll
sbb
jp
cli
add
ret
inc
es
pop
jb
pop
and
sbb
xchg
cmp
aaa
or
jp
es
xchg
sub
jb
push
inc
dec
adc
adc
sub
jmp
test
sbb
mov
dec
inc
jge
mov
cmp
mov
rolb
sbb
sbb
int
cmp
pop
dec
ss
push
ja
out
mov
push
test
adc
loope
sbb
hlt
iret
nop
sub
ds
imul
add
and
in
and
repz
mov
lret
cmp
or
out
mov
mov
test
mov
ja
outsl
pop
subl
lock
les
and
mov
push
sub
mov
adc
mov
xor
fcomip
xchg
fisubrs
mov
cwtl
cwtl
inc
fisttps
adc
jb
in
and
fisubrl
pop
aad
xchg
scas
jp
sub
and
shrb
popa
pusha
cmpsb
jmp
and
out
adcb
xchg
pushf
and
jae
lds
and
dec
je
or
in
or
push
insb
push
iret
inc
sub
adc
add
test
inc
test
mov
iret
testl
mov
std
andb
sbb
inc
cmp
xor
dec
adc
push
js
lea
sub
pusha
ja
movsb
sbb
mov
int
xchg
pop
or
or
sbb
inc
js
xor
sub
ret
add
push
mov
push
jne
popf
push
outsl
sbb
adc
movsl
cwtl
ficompl
mov
popf
ficoml
adc
filds
int
push
mov
xor
add
out
bound
jne
dec
dec
or
in
lea
jle
push
mov
fucomi
sbb
xchg
outsb
sub
sbb
pusha
sbb
and
push
mov
or
add
das
into
mov
add
cmp
int
and
mov
lahf
rolb
push
arpl
cltd
lods
addl
mov
daa
sbb
mov
sub
xor
xchg
mov
cwtl
shlb
mov
and
les
lret
or
push
add
insb
leave
sbb
push
mov
scas
xchg
shlb
lock
mov
or
dec
inc
sbb
fdivl
inc
mov
sub
test
mov
adc
xchg
adc
adc
xor
and
or
pop
add
push
jle
jne
push
push
adc
fdivs
rcr
xor
push
adc
push
mov
push
adc
loopne
jg
push
das
adc
pop
pop
stos
sbb
jle
dec
inc
out
rolb
push
adc
jne
mov
or
sbb
int
shrb
mov
test
ret
push
pop
loopne
xor
inc
fcoms
push
pop
inc
mov
dec
push
into
test
jmp
cmp
imul
add
fidivl
es
cmp
sub
or
test
mov
ffreep
add
lock
push
shll
fs
push
sub
sub
loop
pop
push
push
jmp
dec
sub
cmp
sbbb
xor
or
test
arpl
mov
dec
imul
jne
stc
sbb
icebp
or
stos
shl
idiv
push
lahf
in
xchg
sahf
and
daa
or
push
gs
faddl
pop
outsb
dec
dec
in
sub
and
fwait
pop
jnp
adc
adc
loope
into
ljmp
lock
and
addr16
rcrl
cmp
inc
or
cs
push
js
sub
pop
adc
dec
rcrl
mov
mov
cmp
enter
es
bound
xor
dec
loopne
sub
push
sub
lea
push
in
xor
sbb
adc
sub
inc
sbb
test
push
leave
cs
hlt
adc
mov
popa
add
divl
shll
inc
in
push
push
mov
roll
sarl
and
pop
sbb
mov
add
pop
lcall
fwait
pop
xor
ficoml
adc
je
movsl
cmpsl
pop
mov
addl
dec
mov
xchg
sub
lret
faddp
mov
mov
fdivl
inc
cmpsl
and
sbb
push
jmp
sub
adc
aad
or
add
push
cmp
xor
test
inc
sub
dec
push
pop
sbb
and
in
pop
mov
lock
sub
aad
leave
or
mov
in
add
cmp
adc
out
cmp
mov
stos
dec
xchg
fcmovb
rcrb
and
adc
xlat
loop
mov
cmp
pop
xchg
or
clc
mov
lret
adc
pop
imul
ret
pusha
push
or
cmpl
xchg
lock
pop
cmc
mov
pop
sub
xchg
xchg
movl
adc
and
inc
movl
or
push
stos
dec
pop
and
pop
imul
sbb
es
and
sub
fstpl
push
or
inc
pop
mov
push
cmp
pop
call
adc
sbb
testb
push
mov
or
movsl
lea
pop
adc
sub
ret
arpl
and
sub
sub
rcll
ret
sbb
pop
lock
scas
sub
lea
das
shrb
rcr
sub
and
mov
and
shlb
xor
fsubs
mov
negb
push
fcompl
add
call
test
jecxz
lods
inc
and
cmp
movlps
sbb
push
jge
mov
and
add
inc
bound
add
jle
hlt
pop
jo
pop
mov
clc
fwait
mov
mov
cmp
jl
push
cmp
push
cmp
jle
cmp
repz
cmp
jp
push
cmp
cmp
inc
add
pop
mov
push
add
inc
jmp
rclb
movl
add
mov
stos
and
repnz
mov
mov
bound
inc
or
fs
pop
notl
jne
mov
lock
sub
cmp
or
adc
adc
mov
test
pop
adc
dec
dec
subl
cmpb
xorl
add
xor
hlt
and
fldt
mov
and
mov
stos
xchg
je
xchg
mov
xor
cmp
cmpsl
dec
js
add
xchg
dec
mov
adc
out
and
adc
or
subl
xor
fwait
jnp
int
cmp
add
cmp
push
add
sahf
add
and
cmpsl
fs
add
add
fs
stos
push
insl
iret
pushf
leave
add
scas
or
popl
dec
pop
les
or
fcompl
pop
jecxz
add
and
xchg
dec
and
insl
or
in
mov
or
and
enter
cmp
inc
add
out
arpl
push
shrb
and
movsl
dec
insl
je
add
add
popf
je
add
loopne
mov
cmp
mov
les
daa
cltd
movsl
adc
add
dec
pop
mov
cld
sbb
push
test
into
xchg
pusha
push
add
test
cmp
xchg
mov
inc
dec
or
xchg
dec
cmpsl
and
and
push
lcall
rcl
adc
push
add
xchg
popa
xchg
push
and
pushf
mov
pop
popa
hlt
pop
ret
cmp
push
test
push
inc
sub
xchg
xor
add
ret
inc
lods
sub
pusha
or
sbb
in
sbb
mov
imul
jg
sub
push
or
push
in
add
test
add
sub
inc
fwait
mov
push
dec
test
sbb
stc
add
nop
mov
xchg
pusha
in
or
push
outsb
and
sbb
pop
sub
fstpl
mov
push
lea
sub
nop
cwtl
mov
jns
movb
rcrl
pop
sub
cmc
push
sub
push
stos
sbb
fldpi
or
rclb
xor
and
in
cltd
cmp
rolb
adc
add
jmp
or
lea
adc
adc
andb
mov
enter
pop
add
inc
add
adc
lea
sbb
ret
push
test
cmp
in
jo
imul
aam
ds
xor
test
add
mov
shrb
push
xchg
jecxz
push
and
mov
adc
and
and
ret
pusha
enter
and
or
mov
cli
ficoms
nop
out
imul
pop
int3
popa
fistpl
fs
cs
sub
loopne
loope
mov
mov
stc
cltd
push
test
add
in
rorb
scas
bound
rcrl
and
lock
add
cwtl
dec
add
mov
sbb
sbb
sysret
lcall
or
pusha
mov
inc
add
fadd
push
pop
aaa
or
jp
je
repz
sbb
and
pop
or
lds
pop
aad
leave
icebp
sbb
cmp
or
fimull
pushf
inc
sub
ljmp
add
mov
rclb
add
inc
leave
test
dec
cli
addr16
sbb
jg
ret
sbb
daa
add
inc
jo,pn
xor
and
inc
and
adc
leave
std
enter
add
in
insl
xchg
mov
mov
adc
stos
push
inc
inc
lock
subl
in
leave
sbb
les
dec
adc
popa
testb
popa
jbe
jl
stos
cmp
jne
in
push
and
push
mov
lock
add
pop
add
fnstenv
or
push
add
xlat
pop
sub
xchg
add
test
inc
xchg
pop
add
adc
push
idivb
mov
jl
shl
adc
cmp
add
sbb
mov
mov
lock
sti
add
pop
ficoml
pop
adc
lods
lods
popa
sbb
and
push
imul
roll
cmpsl
fimull
add
aaa
xchg
mov
notl
adc
cli
aaa
lea
mov
es
xchg
test
mov
cmp
push
je,pt
cmp
jle
push
es
push
add
ret
jecxz
add
inc
xchg
mov
and
loopne
pop
pushl
jecxz
dec
les
cmp
movl
andb
js
imul
push
and
out
inc
bound
jbe
mov
mov
aaa
je
mov
out
inc
adc
les
in
pop
daa
loop
pop
and
or
xor
inc
call
idivb
mov
les
nopl
dec
push
adc
add
inc
lock
out
jae
push
push
fldl
push
sbb
cmp
clc
sti
in
ds
and
std
lods
jg
mov
fstpl
into
loop
mov
fld
in
mov
mov
mov
jo
add
adc
pop
fsub
pop
fsubrp
cmp
inc
loope
lods
rcrb
jns
divl
pop
cmp
pusha
mov
dec
ljmp
divb
mov
inc
adc
shlb
scas
scas
sub
call
push
push
dec
cmp
add
xor
shrl
mov
and
adc
stc
jge
cmp
lahf
fidivs
xor
ror
cmp
rorl
int3
dec
add
call
adcb
or
adc
cmp
sbb
jnp
ja
setb
or
xchg
loop
mov
and
and
ret
or
movsb
daa
mov
daa
add
push
lock
jnp
arpl
daa
movsb
fwait
mov
pusha
imul
lods
jmp
movsb
lret
ret
xor
clc
cmp
xchg
or
lock
stos
xor
sbb
cli
shld
add
ja
jb
decb
ja
lea
push
push
and
or
icebp
push
push
je
packssdw
rol
or
add
push
adc
mov
push
adc
push
push
pop
xor
daa
ret
or
popf
cmp
or
cli
push
test
ret
push
push
push
push
lcall
ror
test
mov
shll
inc
dec
push
dec
ss
sbb
dec
push
pop
mov
or
hlt
dec
test
ja
push
jne
jbe
and
ja
push
adc
aaa
test
mov
mov
je
mov
jb
dec
inc
cmpw
jne
cmc
out
repnz
inc
inc
cld
cmp
mov
xchg
dec
push
push
jl
mov
das
mov
popl
sti
jg
stc
std
shll
mov
ja
sbb
add
or
push
push
mov
jmp
mov
and
xchg
sbb
mov
pusha
sbb
lods
sbb
mov
lods
and
mov
pop
add
in
jno
sub
shlb
rclb
sahf
arpl
dec
dec
rol
mov
in
push
xchg
pushf
xchg
cmp
shr
push
sahf
add
dec
cmp
scas
sbb
mov
push
mov
popa
adc
fists
lods
test
outsl
dec
test
insl
gs
dec
or
add
inc
pop
pop
pop
sahf
sarb
inc
lret
adc
std
sub
pop
outsl
loope
mov
test
shl
adc
sbbb
mov
ds
test
movsl
push
cmpsl
orl
imul
and
gs
insl
or
mov
out
or
pop
dec
inc
loop
or
sbb
sub
pop
sub
sbb
xchg
pusha
jg
dec
lods
adc
push
add
push
pop
cwtl
mov
push
cmp
sbbl
or
xor
cmp
pop
ret
pop
push
xchg
sub
add
pop
xchg
in
popa
ja
push
sub
xchg
mov
into
inc
ret
sbb
popa
jno
xor
dec
jne
cmp
rcrb
nop
jmp
push
cs
xchg
and
ss
test
mov
or
push
mov
push
pop
lret
test
or
enter
and
adc
push
adc
and
outsb
pop
cltd
ss
ret
adc
jge
cmp
test
popa
add
je
ljmp
fcomp
or
cmc
dec
gs
ljmp
adcl
cwtl
pop
sbb
push
test
cs
and
adc
add
fadds
push
and
stc
and
adc
push
mov
add
ficoms
xchg
sbb
pop
pop
shrb
pop
sub
or
jp
jo
lods
bound
test
push
ja
sub
or
je
gs
jg
lret
ret
mov
pop
sbb
lock
cwtl
adc
mov
incl
jo
icebp
and
xor
mov
xorb
jne
push
sub
je
sub
dec
test
lcall
dec
jne
subl
xchg
scas
jl
repnz
or
and
or
adc
push
push
test
in
js
xor
add
jmp
push
in
rcr
cmp
imul
out
adc
push
mov
mov
out
out
jl
mov
movsl
push
push
jo
scas
push
and
and
sahf
pop
cld
xchg
fwait
xor
pop
push
inc
cmpsb
inc
arpl
jbe
mov
push
or
adc
es
xchg
push
sbb
sbb
addl
xchg
inc
sbbb
cmp
es
mov
xor
pop
inc
inc
movsb
stc
sub
cmp
clc
push
sub
ss
gs
pusha
inc
in
push
sub
daa
adc
dec
or
pop
mov
push
mov
je
pushf
dec
jnp
or
and
push
cld
mov
das
cmp
mov
daa
cmp
mull
jae
sbbb
cwtl
dec
jp
aas
std
rcrb
push
fildll
dec
xchg
dec
sbb
jo
ret
jo
popa
jg
dec
out
dec
lahf
in
aad
outsl
cmp
push
push
mov
pushl
cmpb
cmp
repz
repz
mov
icebp
sahf
out
ds
inc
jns
out
dec
pop
outsl
jns
jns
out
cltd
mov
sahf
mov
lret
xlat
loope
cmp
repz
add
pop
and
aas
xor
stos
orl
mov
roll
or
and
push
aad
ljmp
out
add
inc
mov
test
xor
cmpsb
adc
test
push
sub
sarl
int
shr
jno
mov
popa
fbstp
cmpl
sti
popa
push
shll
jmp
jl
mov
shll
xor
push
xchg
sub
sahf
or
and
aaa
push
cmp
popf
cmp
cmp
xchg
inc
ja
fimull
nop
or
out
cmpsl
popa
mov
nop
mov
mov
add
pop
adc
xchg
inc
xchg
movsl
shll
add
enter
cmp
push
sub
mov
and
jge
lret
push
dec
test
and
adcb
movsb
xchg
push
cmp
dec
push
ss
mov
cmpl
push
cwtl
push
cmp
idivl
sbb
js
rcll
cmp
and
mov
sub
add
push
rorb
cmp
push
loopne
lea
shlb
arpl
lods
movsb
js
rorb
add
imul
mov
scas
mov
cmp
mov
add
gs
push
nop
dec
xchg
or
add
or
ret
sbb
jo
and
dec
dec
jmp
or
les
cltd
rcl
popa
bound
adc
pop
dec
inc
cs
and
rclb
or
mov
dec
pop
lds
mov
adc
mov
bound
add
or
test
add
fisubl
faddl
add
fbstp
cltd
imul
sahf
and
mov
clc
mov
jae
jo
fists
flds
xor
into
pop
lock
push
arpl
inc
ror
cmpsb
adc
dec
inc
das
and
mov
mov
mov
stos
sbb
int3
incb
push
dec
or
jl
jo
sub
mull
or
fwait
je
mov
test
push
in
je
in
cmp
xor
std
loop
leave
dec
pop
add
add
or
sub
sub
or
xor
mov
mov
pop
mov
dec
cmp
push
btc
push
bswap
out
fidivs
push
popf
inc
jmp
enter
stc
push
cs
jl
das
push
push
pop
push
imul
xor
xor
xor
mov
cs
sbb
and
rorb
and
xor
mov
pop
dec
xor
inc
les
jbe
lea
test
xchg
push
jne
nop
adc
lock
cmpsl
jo
cmp
xor
in
sbb
in
or
int3
lods
test
sbb
or
out
in
leave
dec
mov
cmp
push
into
inc
xor
jo
ds
jl
jb
nop
and
sahf
add
cld
mov
cmp
mov
or
and
xor
sbb
xor
xor
and
enter
dec
sbb
nop
or
and
dec
test
or
sub
jnp
sub
inc
rcrb
sbb
paddq
and
subb
popa
test
cmp
nop
jge
adc
jmp
pop
or
clc
fdivr
inc
jecxz
ljmp
out
add
and
shr
or
fs
ss
aaa
mov
cmpsl
data16
xor
sbb
rorl
aaa
push
inc
outsb
dec
iret
sbb
mov
xor
xor
mov
xchg
adc
bnd
mov
sub
cmp
pop
rcrb
dec
cmp
loop
cmp
rcrl
pop
xchg
sub
push
adc
push
xor
add
xchg
and
dec
enter
in
xor
jo
test
sbb
nop
and
jmp
dec
roll
mov
cmp
bnd
aaa
adc
ja
adc
sbb
das
adc
xor
test
subl
pusha
loopne
add
xchg
jle
loopne
pop
mov
inc
movsb
jmp
rclb
inc
push
in
or
inc
pop
mov
nop
add
adc
inc
ret
xor
dec
ret
cmpsb
cmc
mov
sbb
sub
cmp
ss
lea
inc
push
xchg
and
dec
repz
inc
fs
add
dec
dec
add
xchg
inc
inc
cmp
jno
xchg
push
sub
lret
mov
bound
dec
sti
mov
jle
push
in
xlat
mov
inc
mov
loop
inc
adc
lods
rorb
jl
inc
pusha
xor
dec
sub
test
popf
mov
xchg
gs
push
scas
adc
es
test
xchg
push
pushf
mov
or
xchg
sarb
imul
mov
xor
loopne
mov
sbbb
pop
out
push
jns
insb
push
pop
call
dec
call
ror
out
enter
jae
movsb
sbb
or
and
test
or
testb
xlat
fidivl
or
mov
imul
sbb
arpl
xchg
nop
movsb
jns
sub
nop
cmpsl
sbb
adc
int3
shufps
out
mov
pop
mov
test
js
aaa
outsl
lds
xor
push
pop
int
sbb
es
fimull
clc
daa
lock
enter
and
das
inc
adc
push
rorb
push
push
dec
enter
push
stos
loop
in
arpl
fiadds
sbb
push
in
dec
pop
stos
sbb
sub
movsb
push
or
lods
push
scas
push
jl
push
pop
push
sbb
fwait
pop
mov
clc
dec
outsb
dec
add
inc
mov
dec
enter
gs
dec
fldl
dec
jae
rcr
lods
inc
sbb
add
adc
movsb
and
addl
out
lcall
xor
test
jecxz
add
shlb
push
fs
adc
pusha
jecxz
mov
adc
adc
movsl
mov
adc
mov
add
cmp
mov
repz
adc
jb
jb
int
xor
and
jo
push
pop
pusha
push
add
adc
pop
add
sbb
and
andb
or
shlb
add
mov
xor
jl
inc
cmp
push
mov
xor
dec
xchg
loopne
jno
jecxz
jle
aas
lock
add
cli
dec
mov
add
add
mov
rclb
loopne
push
xchg
add
in
data16
fwait
jp
cs
push
xchg
cli
cmp
inc
dec
shr
mov
sbb
mov
push
xchg
call
cmp
xchg
outsb
adcl
xor
dec
or
jne
mov
push
cmp
nop
inc
mov
in
sub
or
sub
adc
lock
cmp
push
xchg
mov
jge
mov
stos
cmp
inc
out
adc
pop
adc
andl
in
rolb
xchg
imul
insb
adc
jno
dec
das
dec
add
jo
xchg
jne
mov
pushl
jns
xchg
dec
adc
pop
insb
jo
pop
xchg
jne
rolb
sbb
mov
sbb
mov
gs
in
sbb
jae
loopne
lods
push
sbb
das
sbb
mov
add
ret
rol
push
rcrb
and
int3
sbb
inc
nop
adc
dec
enter
enter
xor
popf
push
and
lock
mov
daa
dec
repnz
adc
xchg
mov
mov
mov
scas
mov
test
mov
push
mov
dec
pop
mov
ds
pop
inc
test
sub
push
pusha
cmp
mov
cmp
or
mov
or
adc
add
insb
push
jbe
push
icebp
adc
xchg
push
add
es
push
aam
and
sub
add
test
cmc
sub
rol
add
xchg
daa
xor
mov
or
cmp
and
and
push
or
dec
lods
add
jb
les
mov
sbb
test
and
fstps
sub
jo
sbb
xchg
imul
push
gs
adc
dec
cmp
dec
pop
xchg
mov
sbb
push
pop
adc
or
scas
add
sti
fcompl
or
push
or
push
clc
pop
sub
mov
lods
adc
add
bound
jl
or
dec
pop
sbb
mov
mov
push
sbb
xor
icebp
add
rcrb
jno
add
lock
in
xor
jmp
ret
or
addr16
test
mov
addb
mov
add
add
lahf
xchg
mov
jl
enter
jnp
sbb
dec
lret
or
xor
dec
loop
add
or
xchg
mov
pop
ret
int
mov
cmp
xchg
and
jbe
in
inc
fmuls
jmp
sub
xor
add
cmc
fnsave
into
push
rolb
xorb
mov
stc
add
faddl
dec
push
enter
pop
dec
aaa
sbb
cmp
adc
in
jg
sbb
cmp
cmp
mov
push
clc
pop
cmp
inc
insl
insb
push
push
xchg
adc
insl
jnp
fidivl
mov
jg
or
insb
lahf
push
lock
addl
pop
push
add
mov
aam
xor
pop
cmp
cld
outsl
dec
mov
xlat
jbe
xor
cmp
jne
inc
or
adc
jl,pt
sbb
in
pop
mov
hlt
subl
sarb
jne
pop
adc
inc
dec
adc
in
push
repz
jae
inc
pop
sti
push
popa
jecxz
cmp
sbb
and
je
mov
dec
psubsw
xchg
mov
jmp
jge
pop
sub
push
lahf
dec
mov
movsl
push
sti
jbe
mov
xchg
and
int
jo
fcoms
mov
repz
mov
xchg
andb
ds
add
jo
sub
into
xchg
mov
add
out
aad
aam
or
ds
popa
and
stos
cmp
push
push
loopne
test
push
adc
fcmovbe
cli
xor
dec
jne
bound
ret
sahf
ficoms
or
sbb
sub
pushl
andl
sbb
sub
shll
out
dec
add
xchg
rcrb
push
lds
je
stos
popa
mov
mov
and
pop
jg
imul
inc
push
iret
aaa
xor
and
fstpt
jg
je
cmp
or
and
mov
cmp
and
ljmp
push
add
fcmovnu
mov
nop
inc
mov
mov
fdivs
pop
cmp
in
repz
inc
or
pop
lahf
adc
or
aaa
cmp
and
cmp
mov
jle
xchg
mov
test
xor
jae
imul
movsl
mov
xlat
cmp
add
inc
ss
xor
stos
add
das
xor
sub
push
add
add
adc
imul
inc
lock
push
xchg
jg
cmp
je
dec
and
add
and
sbb
mov
cmc
cmp
into
push
sti
fwait
mov
test
jle
xor
jno
sbb
sub
mov
cmp
or
test
mov
push
mov
mov
pop
fwait
inc
rclb
sub
mov
es
sbb
cmp
jne
pusha
adcb
jo
add
push
mov
xchg
dec
repnz
inc
rolb
andb
or
insb
insb
imul
or
cmp
je
adc
cs
dec
adc
xchg
add
pop
xchg
push
std
sub
add
cltd
adcb
iret
shl
push
in
push
popa
mov
gs
mov
push
mov
adc
add
aaa
sbb
sub
aad
dec
sub
rcrb
mov
aam
inc
orb
push
pop
push
pop
addb
xchg
mov
sbb
mov
icebp
push
mov
add
inc
xor
flds
or
jl
in
or
or
ljmp
mov
or
pop
in
mov
mov
xor
sub
fcmovnb
repz
adc
lgs
cmp
and
xor
push
rolb
dec
cmp
sbb
lret
push
adcb
rcrl
jnp
lods
push
jmp
imul
dec
mov
or
and
mov
cmpb
mov
popa
ret
and
add
adc
jmp
mov
inc
sub
loopne
xlat
jle
fdivr
repz
fcmovb
arpl
sahf
ss
rorl
or
mov
rolb
fisubrl
xchg
add
fists
mov
pop
mov
jg
add
inc
jbe
and
push
inc
sbb
add
cmp
movsl
add
scas
adc
and
ljmp
lret
loope
inc
aas
cmp
shrb
or
xor
mov
jns
dec
cmp
push
xor
test
xchg
sbb
or
push
sbb
sub
dec
addb
push
mov
push
dec
and
push
lods
popa
out
push
cmp
add
xor
mov
jne
pusha
push
nop
push
add
jmp
pop
or
pushf
loopne
das
shlb
mov
sub
test
das
fistps
adc
or
jg
pop
andl
cli
xchg
mov
mov
sub
hlt
pop
cmp
clc
sub
or
xlat
jnp
mov
mov
jmp
xor
sbb
call
push
dec
ds
mov
xor
sub
mov
rorl
nop
in
mov
test
mov
adc
dec
cwtl
inc
inc
inc
add
xor
out
shr
or
aam
repnz
push
jb
and
sbb
das
or
sbb
je
mov
in
jne
add
lock
add
mov
lock
dec
jg
cmp
je
inc
push
cmp
jl
add
int
mov
imul
add
add
flds
in
push
faddl
iret
test
adc
mov
adc
popa
lcall
cmp
add
ret
sub
jb
pop
inc
push
enter
cmpsb
or
fneni(8087
call
jb
jbe
insl
mov
mov
jo
inc
ja
mov
dec
mov
repnz
imul
pop
in
and
add
cmp
dec
scas
loopne
dec
or
stc
mov
xor
or
mov
xchg
call
lahf
push
mov
hlt
xor
shl
orb
rcrl
mov
xor
les
or
lods
adc
jo
subl
das
je
jge
into
mov
addr16
mov
nop
popa
outsl
das
mov
or
cmpsl
mov
movsl
cs
in
cmp
test
jne
es
sbb
adc
jb
xchg
jno
test
lock
aas
mov
sbb
push
lea
inc
push
lcall
mov
inc
pop
sub
push
inc
lea
clc
or
mov
cmp
addr16
cmp
out
sbb
mov
mov
out
in
and
mov
sub
les
fs
and
push
mov
adc
cli
sti
test
orl
ret
ja
mov
jbe
cmp
add
sbb
push
imul
call
push
notb
inc
test
inc
sub
cs
sbb
inc
je
mov
jmp
add
pop
add
ret
push
xchg
push
adc
int
xchg
mov
push
enter
cmp
fisubl
adc
imul
sub
aaa
adc
adc
jne
daa
repnz
jns
fidivs
adc
hlt
jne
or
jne
adc
out
clc
push
mov
push
xchg
push
in
std
xor
pop
mov
push
and
pop
cmpb
push
mov
lea
movl
lret
dec
cmp
fimuls
add
filds
sbb
in
push
fstl
mov
pop
sarb
pop
mov
fstpl
lea
pushf
mov
inc
out
lea
pop
mov
inc
xchg
data16
call
ret
add
xorb
jb
in
nop
addb
cmp
repz
xor
inc
pop
repnz
cltd
jnp
mov
or
mov
int3
int3
pusha
lea
cmp
aas
fdivrl
fsubs
clc
adc
mov
popf
or
jne
fstl
jne
or
neg
loopne
shlb
xchg
inc
lea
dec
in
sub
loopne
adc
mov
scas
lods
adc
jo
pop
cmp
xchg
int
push
ss
dec
js
jns
xchg
les
loopne
push
inc
loopne
or
rcr
cmpl
shrl
push
xchg
insl
mov
mov
mov
jmp
orl
pushf
xor
pusha
pusha
movsb
sbb
pop
rorb
xchg
fs
jb
pushf
push
jne
or
and
sbb
mov
sbb
ficoml
mov
call
ret
jae
xor
icebp
mov
fisubrs
dec
push
lea
add
lcall
jmp
out
or
das
addb
dec
jae
mov
jbe
shlb
sub
fmuls
test
pop
add
or
or
into
sbb
cmc
daa
inc
subl
shrb
adc
test
push
nop
mov
mov
adc
mov
dec
and
xchg
and
adc
fldcw
ds
rcrb
test
sbb
mov
movsb
rcr
push
loope
and
jl
pop
mov
bound
and
popl
add
mov
sbb
add
lea
test
or
shl
cmp
adc
cmp
or
cmp
test
insl
jnp
push
ds
dec
lods
xor
les
mov
loopne
repz
pop
xorl
popa
and
mov
jecxz
cmpl
push
xchg
pusha
aaa
loopne
nop
hlt
dec
sti
xchg
xchg
clc
pop
scas
gs
popf
adc
xor
jecxz
add
push
mov
cmc
xlat
into
dec
sbb
xchg
sbb
jmp
push
mov
push
xor
pop
inc
arpl
aaa
or
xor
call
hlt
pop
in
or
adc
adc
sbb
push
in
inc
adc
sti
sti
sub
adc
inc
lds
mov
jb
sub
cmp
and
pop
xor
adc
repz
dec
xor
leave
sbb
adc
jno
adc
add
cmpl
inc
mov
cwtl
nop
data16
mov
and
inc
test
xchg
cwtl
cmp
rolb
and
and
jg
adc
std
sub
inc
inc
mov
xor
mov
adc
sub
fwait
add
jg
jae
inc
mov
jns
dec
xchg
in
shrl
jno
push
sti
pusha
popf
or
je
dec
dec
xor
add
or
mov
rolb
mov
adc
daa
mov
popf
shlb
xchg
pop
adc
pop
push
mov
pushl
mov
xchg
inc
or
in
es
pop
outsb
shll
and
js
ja
hlt
jg
je
push
in
or
in
or
push
aam
inc
sbb
fsubrl
dec
add
aaa
lods
sbb
loopne
lret
out
pop
push
shl
clc
pop
jne
movsb
aam
xchg
cmpsb
hlt
and
and
fsubr
rolb
add
leave
roll
add
mov
adc
push
shlb
add
push
test
inc
bound
dec
adcl
mov
fwait
test
adc
lret
enter
add
push
pop
lds
jne
or
inc
sub
pop
lods
inc
pop
and
nop
xchg
sub
loope
mov
aaa
add
repnz
push
mov
fwait
cltd
sub
js
jge
jecxz
mov
loopne
or
add
fmull
add
push
test
cmp
and
mov
pop
mov
add
add
mov
adc
mov
adc
pop
xchg
adc
cltd
pop
shrd
das
jbe
sbb
repz
jns
repnz
sbb
push
dec
cmp
rcrb
mov
movsl
adc
mov
push
and
mov
fs
nop/reserved
cmp
icebp
mov
fcomps
pop
push
jne
pop
test
or
ljmp
fwait
lods
std
cmp
and
jne
mov
inc
or
cmpsl
ljmp
and
and
jge
fst
xchg
in
mov
cpuid
cmp
xor
jnp
xor
dec
call
sbb
sbb
in
dec
nop
sub
rol
fcompl
xlat
sbb
inc
imul
mov
pop
dec
add
xchg
test
sbb
mov
mov
add
js
cld
out
sub
fwait
push
sub
adc
inc
mov
stos
cmp
mov
or
pop
ja
mov
pavgb
popa
adc
xor
xchg
movsl
outsb
add
mov
pop
push
adc
add
mov
cwtl
mov
andl
inc
sub
stos
loopne
loop
dec
xor
sbb
ljmp
cltd
pop
jmp
out
je
jmp
cmp
call
adc
fiaddl
cmpb
add
xor
add
adc
jne
xor
add
push
xor
stc
mov
repz
addb
mov
mov
sbb
dec
lea
adc
sbb
jne
aaa
xchg
xchg
push
rcll
data16
and
cmpsb
mov
sbb
add
sub
ss
test
add
sbb
or
adc
add
jae
imul
subl
fcomps
outsl
adc
ret
mov
sub
addl
movsl
jmp
adc
cmc
add
add
aas
test
push
ret
add
push
pop
in
or
pop
and
aas
idivb
clc
adc
call
fmull
dec
test
sub
jb
imul
xlat
and
jl
add
adcb
ja
or
or
icebp
rcrl
xor
cmp
je
or
sbb
add
sbb
shlb
adc
data16
ljmp
enter
ret
js
hlt
jae
movsbl
cld
add
cli
sbb
inc
mov
jle
imul
or
sbb
inc
nop
sub
pop
jmp
enter
and
filds
lea
and
dec
inc
pushf
add
or
jecxz
or
add
inc
cmp
jl
adc
sbb
pop
sbb
add
sar
add
imul
clc
xor
xor
ss
cmp
jecxz
adc
pop
sahf
sbb
inc
jne
enter
adc
or
jne
fs
pop
loopne
pop
sahf
mov
sbb
clc
fdivrl
inc
xor
xchg
ss
mov
stc
imul
jg
pop
jo
shld
lea
inc
adc
roll
mov
std
sbb
and
cmp
jl
sarb
jle
insb
aas
mov
shll
std
clc
pop
cli
ret
jge
mov
mov
add
fildl
jg
or
rolb
shlb
jns
repnz
add
ds
lahf
push
ret
or
lahf
and
pop
adcb
sbb
filds
gs
lds
or
and
dec
add
pop
vblendvpd
fnsave
cmpsl
push
add
movsb
and
xchg
or
pop
add
sbb
inc
aaa
mov
sbb
adc
jns
add
arpl
aad
mov
add
sbb
push
out
mov
test
outsb
dec
or
add
nop
add
inc
pop
je
add
leave
loopne
cld
push
jecxz
out
mov
in
push
push
loope
mov
add
push
xchg
dec
push
push
or
insl
jp
add
mov
mov
pop
nop
push
dec
pop
add
incb
lock
push
jl
dec
push
add
push
push
xor
jle
and
add
push
jmp
in
inc
or
test
xchg
mov
mov
insb
lods
bound
mov
or
into
rcrb
fmuls
lds
cs
jns
lret
ljmp
int3
ret
mov
filds
jmp
int
jle
push
bound
adc
repnz
mov
mov
das
sub
push
test
cmp
inc
je
popa
shrl
cmp
inc
iret
push
mov
pop
add
xchg
cmp
insb
sub
lds
and
sbb
pop
dec
push
xor
outsl
mov
fildl
pop
inc
popa
add
ret
cmp
push
push
cmp
push
test
or
dec
sbb
jge
xor
sub
mov
jae
mov
dec
arpl
mov
rorb
addr16
or
add
adc
mov
call
daa
hlt
add
int3
nop
sbb
add
jmp
mov
cltd
scas
outsl
pop
add
mov
mov
mov
and
add
in
sbb
and
dec
and
pop
shrl
jl
insl
xchg
pop
aam
cmp
and
jmp
mov
xorb
aam
inc
cmpsb
cmp
adc
and
lds
mov
orb
in
xlat
inc
add
sub
push
cmp
pop
mov
cmp
arpl
add
int3
int3
or
bound
mov
sbb
jno
cmp
mov
cld
jecxz
sti
push
pop
cmp
sarl
cltd
pusha
shl
je
test
jecxz
adc
test
dec
mov
rcrb
cltd
js
and
cmp
nop
dec
adc
or
xchg
or
inc
push
ret
add
cld
add
and
lahf
mov
jnp
jecxz
push
mov
fs
popa
pop
add
aam
pusha
rclb
popl
adc
and
and
sub
add
popf
sub
push
push
bound
insl
in
clc
jl
cwtl
loopne
fdivrl
pop
jge
sub
xor
popa
mov
in
add
jbe
je
sbb
cmp
push
arpl
daa
movsbl
shl
call
test
mov
add
mov
lods
fsubr
test
pop
cli
das
dec
jbe
dec
out
test
sbb
ds
movsl
push
lret
sub
and
or
shlb
addl
push
add
pop
shl
or
pop
ljmp
test
aam
xor
lcall
movsl
punpckhbw
push
sarl
dec
add
call
pop
add
mov
or
popf
push
divb
emms
and
inc
aas
fbld
pop
lret
jne
test
xchg
xor
lock
or
test
cltd
cmp
xor
nop
es
add
addl
aaa
sahf
inc
push
in
adc
data16
inc
pop
mov
inc
mov
push
pop
jbe
lahf
pop
and
cmp
dec
jae
in
pop
test
mov
stc
mov
mov
dec
xlat
std
daa
clc
pop
mov
sub
loopne
loopne
xchg
sub
mov
das
xchg
or
pop
jle
mov
inc
cmp
add
hlt
mov
daa
push
dec
mov
mov
imulb
fimull
adc
add
movzbl
mov
inc
mov
mov
or
aam
scas
dec
clc
cmpl
mov
imul
cmp
sarb
sub
push
icebp
or
imul
incb
mov
add
pusha
fisubrl
nop
and
push
nop
add
or
cld
push
leave
xchg
mov
or
mov
inc
call
jne
pop
or
and
aad
jb
pushl
jbe
mov
js
pop
or
mov
insb
into
push
rorl
adc
mov
xor
xlat
push
mov
test
add
nop
cmp
adc
sub
pop
test
or
jp
and
xor
jbe
mov
les
mov
adc
adc
inc
mov
loopne
popa
in
jecxz
inc
push
enter
lret
jle
fbstp
mov
sub
je
lret
adc
scas
fadd
pop
pop
mov
mov
imul
push
xchg
add
xor
mov
xor
pop
jl
inc
xor
and
adc
sub
inc
in
add
lods
cmp
mov
and
enter
mov
fdivrs
push
test
push
mov
mov
in
mov
loop
shlb
loopne
jns
add
inc
or
xchg
dec
xor
mov
adc
push
sub
or
lea
cmp
jbe
cmp
jbe
mov
stos
push
aam
sbb
insl
movsb
xor
roll
repz
adc
int3
push
and
insl
mov
xor
lods
mov
aas
push
repnz
icebp
or
add
fisttpl
add
or
fisttpl
mov
cmp
jmp
cmp
jne
push
fnstcw
push
cmc
pushf
insl
test
rcll
push
cmp
or
adc
jmp
push
add
mov
push
mov
sbb
test
pop
ret
and
enter
push
sub
inc
mov
popf
imul
pop
push
pop
insl
cmp
sub
sarl
mov
movl
sti
or
xchg
fldt
xchg
movsl
mov
sub
xchg
mov
jl
xchg
data16
adc
inc
fscale
cmpsb
mov
or
add
xchg
rcl
mov
into
cmpsl
or
add
jnp
in
shrl
test
lds
dec
aad
pop
fcomps
mov
pop
movsb
fimuls
jo
popf
aas
jb
movsl
sub
add
je
xor
add
push
adc
mov
in
inc
xchg
push
pop
adc
adc
and
loope
call
add
xor
shufps
dec
and
cmpsb
mov
and
stos
mov
int3
and
mov
mov
mov
test
subb
xor
iret
pop
add
out
inc
or
push
mov
jbe
pop
xor
xlat
aas
inc
or
adc
mov
push
xchg
icebp
xor
sub
adcl
cmp
sbb
xlat
mov
push
loopne
pusha
mov
repnz
sti
xchg
hlt
dec
lcall
add
jge
push
jo
roll
stos
jle
add
lds
add
scas
add
adc
aas
push
aam
dec
and
dec
and
sbb
dec
call
shlb
xchg
je
out
cmp
mov
sbb
push
je
aad
movsbl
or
mov
outsl
xor
mov
mov
xchg
imul
pop
fwait
sbb
mov
mov
pop
jo
in
out
mov
cld
adc
push
push
cmp
sbbl
fs
fidivrl
xchg
rolb
rolb
bnd
cmp
fmull
mov
add
ficompl
fdivl
adc
sbbb
xchg
leave
push
insb
or
sub
dec
subb
mov
sub
mov
sahf
cmp
pop
bound
xchg
je
popa
add
in
xchg
xor
pop
inc
aam
push
sub
popf
jmp
and
pop
and
insl
insb
push
sti
ret
stos
or
and
or
andb
movsb
adc
mov
dec
lea
sub
mov
out
pop
int3
addl
out
and
or
ja
push
inc
incl
or
mov
or
add
inc
inc
xchg
and
data16
jmp
ret
jo
push
xor
jns
and
push
callw
pop
loopne
test
or
mov
pop
jo
sub
addr16
push
push
push
dec
xlat
rorb
jbe
pop
leave
dec
or
or
jne
adc
jge
push
or
xchg
mov
xor
fwait
push
push
pushl
xor
jp
aad
shlb
cmp
jbe
filds
lods
or
hlt
sub
cmp
pop
push
sbb
or
mov
sti
and
cmp
imulb
loop
lret
ds
sti
int3
nop
cmpsl
or
push
rcrb
sub
bound
xor
repnz
ja
sbb
pop
clc
jne
mov
pop
aam
adc
gs
or
inc
pop
leave
add
outsl
jl
cld
out
pusha
pop
inc
add
cld
rcrb
mov
loop
fldt
xor
cmp
inc
and
inc
cmp
sbb
adc
push
mov
cmp
call
cmp
sbb
and
jmp
add
call
aaa
jecxz
ret
pop
stos
stos
xchg
test
xor
scas
insb
fst
push
or
cmp
jae
sbb
cmp
jmp
add
dec
sbb
mov
dec
jbe
daa
in
inc
dec
xchg
and
or
pop
xchg
roll
jns
out
hlt
mov
fistl
out
mov
push
imul
ret
xor
cmpsl
cmp
test
fs
pusha
adc
xor
jns
push
dec
or
push
dec
lcall
inc
add
cmovns
add
adc
xchg
iret
movswl
pop
add
adc
into
xor
lahf
xchg
testl
jae
mov
mov
cmp
das
insb
pop
jmp
xlat
mov
into
adc
enter
aad
sub
lret
xor
fidivl
or
fmuls
aam
inc
nop
mov
nop
xor
test
addb
adc
pop
adc
pop
les
jecxz
mov
sbb
das
std
faddl
out
adc
lea
or
push
mov
pop
sbb
or
mov
ret
xchg
adc
or
es
jle
cmpsb
dec
xor
sbb
xchg
push
adc
pop
sbb
sbb
stos
add
dec
ss
pop
and
dec
pusha
push
ret
inc
ret
ret
ret
cmp
mov
sbbb
mov
mov
add
aad
int
cmp
push
es
dec
kmovw
movsl
sbb
dec
push
popf
fcomps
adc
jne
jg
sbb
fcompl
xchg
testl
jbe
push
mov
dec
lea
loope
test
adc
cli
and
aam
add
mov
and
dec
or
pop
adc
test
test
pop
les
jne
sub
xchg
fisttpll
sub
inc
ret
and
xor
pop
sbb
je
mov
fidivrs
movsb
mov
daa
cmp
nop
xchg
js
jb
cmc
test
cmc
jp
test
call
xchg
mov
ret
inc
sarl
cmp
dec
pop
mov
in
loope
rcl
ret
sbb
pop
fdivs
add
ljmp
xchg
push
sarl
mov
xchg
out
mov
ja
sbb
cwtl
or
fbld
or
adc
nop
dec
push
cmp
jecxz
and
inc
mov
lods
or
sub
mov
push
sbb
ret
ja
shr
cmp
fdivs
int3
add
mov
ja
adc
pushl
xchg
test
mov
sbb
push
push
negb
add
fsubrl
and
xchg
test
fisttps
inc
loopne
mov
jmp
imul
or
mov
call
adcb
mov
xchg
repnz
mov
cwtl
stos
outsb
xlat
push
loop
cmp
subb
lea
stos
push
xor
iret
xchg
dec
in
or
nop
sbbb
pop
imul
imul
insl
jge
rclb
xor
or
sub
dec
shll
cmc
pop
sbb
inc
pusha
out
xor
imul
fld
inc
push
push
fsts
inc
cmp
jb
cmp
inc
mov
daa
dec
cmp
inc
aaa
popa
cwtl
leave
js
push
ret
and
ficompl
dec
je
add
push
sbb
insl
or
pop
push
mov
imul
pop
push
inc
xor
and
out
loopne
or
hlt
jg
adc
repnz
mov
xorl
mov
mov
imulb
push
xor
das
je
or
mov
cmp
out
mov
je
cmp
jne
mov
sbb
add
adc
fistps
dec
lea
idivb
pop
dec
std
ja
repz
push
cmpsb
mov
sub
inc
adc
je
idivl
lods
es
and
cld
cmp
jbe
push
lea
adc
cmp
je
sub
inc
jmp
inc
and
xchg
push
xor
mov
sub
pop
mov
in
jmp
or
cli
or
cs
out
clc
mov
clc
or
out
aam
mov
roll
dec
jb
adc
into
inc
add
mov
jmp
fcmovu
in
xor
sub
les
push
cld
inc
xchg
cmp
add
shll
sti
cmp
outsb
hlt
cmpb
mov
pop
cli
mov
aam
push
sub
loop
aam
mov
clc
jb
sbb
js
sub
adc
lds
push
out
pop
shrb
aad
jge
and
add
cld
rol
pop
mov
and
dec
pop
test
mov
andb
loopne
jne
mov
mov
push
cli
in
cmpsl
mov
in
data16
je
inc
add
jae
mov
fneni(8087
movl
mov
mov
add
fsubr
adc
aas
insb
sti
and
cmpsb
or
or
push
test
data16
fs
jne
xor
push
jo
dec
lock
mov
pop
sub
or
push
mov
jmp
dec
das
orb
shlb
sbb
test
jne
mov
mov
or
insb
mov
push
shrb
push
int3
push
inc
add
mov
add
jbe
jg
or
jge
push
xor
fmull
and
es
sub
sub
and
pop
adc
pop
jl
or
adc
cwtl
call
test
jbe
lea
cmp
jbe
loopne
outsb
jbe
pop
arpl
pop
adc
adc
je,pn
test
jne
pop
subb
sbb
std
sub
jb
andb
loop
add
add
adc
movb
inc
or
pop
fs
push
sub
nop
adc
and
rcrb
xchg
data16
add
xor
mov
inc
and
push
push
adc
add
sbb
loopne
add
daa
jp
adc
sbb
dec
inc
lcall
cmp
lock
lods
mov
adc
xor
push
shrb
adc
push
push
shll
je
adc
test
push
and
cmp
pop
ret
mov
lea
pusha
insl
test
ret
add
xor
pop
das
loopne
inc
sahf
test
imul
pause
ret
test
xchg
mov
add
ss
push
cld
fnstsw
addl
push
jbe
push
pop
and
adc
cmp
jae
popa
int
xor
or
int
jp
lods
lock
lea
cmp
mov
push
inc
sbb
call
cmpsb
or
movsb
and
popf
aas
test
popa
add
lods
imul
mov
sbb
sub
sub
inc
add
jne
cltd
ss
and
mov
jecxz
push
andl
jg
mov
cltd
pop
cltd
aaa
inc
sbb
cmpsb
dec
sbb
xchg
loope
je
popa
and
cmpl
xor
push
pop
push
movl
push
adc
dec
or
xor
push
sbb
add
outsb
dec
imul
sbb
insb
cli
incb
mov
mov
stos
repnz
add
add
test
movsb
adc
and
adc
lds
int3
pop
and
jo
pop
jae
or
jle
int
cmpl
sbb
outsb
je
pushl
je
push
mov
pop
mov
pop
lea
outsb
fsubr
jae
jle
push
pop
push
cmpl
push
je
nop
jmp
push
sahf
cmp
pop
psubd
sahf
inc
sbb
pop
data16
jb
daa
pusha
rol
pop
sub
daa
push
mov
inc
adc
rcr
bnd
xor
and
jbe
ja
inc
mov
andb
mov
icebp
add
inc
inc
fwait
cmp
nop
ss
cld
pop
pop
ret
pop
movsb
inc
nop
push
sub
or
divl
popf
mov
fcoms
movsl
adcl
push
xchg
stos
pop
adc
fnsave
adc
sbb
xchg
pop
je
test
dec
push
inc
inc
inc
or
xor
pushf
insb
and
shll
adc
imul
add
mov
shr
decl
cmp
xchg
or
fdivrs
add
sbb
inc
or
std
lret
jle
jl
add
pusha
popa
loopne
cmp
and
pusha
movsl
loopne
adc
mov
pop
std
or
in
je
inc
and
je
push
adc
aaa
les
xor
in
loop
leave
add
pop
imul
loopne
lods
xor
imul
xor
pop
mov
loope
push
ret
or
sti
pusha
jb
dec
mov
call
dec
xor
pop
pop
jbe
jbe
push
adcl
test
mov
hlt
hlt
les
xchg
sbb
das
xchg
test
jecxz
and
gs
enter
inc
push
adc
inc
js
clc
mov
repnz
int
mov
sti
in
fsub
sub
and
inc
inc
push
push
popf
mov
mov
addl
addb
xchg
push
dec
push
cwtl
xchg
pop
popa
push
inc
adc
pop
sti
lea
or
fdivs
pop
fstpl
pop
or
and
xchg
cmp
xchg
add
leave
add
cmp
lret
jae
test
and
cmp
les
jns
repnz
incb
aam
or
int3
rolb
fstpl
and
push
xchg
xor
test
push
xchg
lods
cmpsb
pop
jge
add
jp
testl
mov
jge
inc
rcrl
ret
cwtl
cmpl
dec
push
je
aaa
loope
cmp
add
int3
or
or
push
push
inc
dec
mov
aad
jge
call
insl
jnp
das
movl
and
js
out
into
cmpl
mov
outsl
clc
in
andl
in
ret
aas
sub
inc
sub
sbb
dec
test
enter
loopne
aas
lahf
jmp
bound
and
push
or
pop
jge
fadds
mov
rcrb
jne
push
inc
xlat
daa
adc
cmp
mov
pop
in
cmp
cmc
push
cmpb
mov
push
xor
test
test
out
push
mov
dec
cmp
adc
push
leave
lret
adc
mov
add
insl
es
cltd
roll
jnp
pop
mov
fcmovnb
mov
xchg
jne
mov
icebp
cmpsl
ret
push
movl
mov
xchg
sub
in
cmpsl
mov
jnp
inc
test
xlat
push
aas
je
cmp
cmpsb
shlb
push
pop
jne
aam
sbb
flds
cmpsl
jne
push
imul
jbe
inc
pop
jne
pop
call
pmulhw
test
xorb
insl
in
xor
stc
jbe
jle
addr16
jne
jmp
sbb
sub
mov
mov
sbb
mov
push
sub
lahf
sub
mov
xchg
push
mov
sbb
shlb
je
pop
in
jo
and
sub
mov
pop
pusha
pop
je
sti
scas
inc
ss
jno
and
imul
adc
int
lret
jae
scas
jg
add
lea
sbb
aad
mov
testb
mov
sub
incb
je
add
cmpl
lock
pop
xchg
mov
orl
sbb
or
pusha
push
scas
or
inc
decb
cmp
push
scas
or
or
lock
push
add
add
push
jo
jge
mov
push
cmp
aas
mov
std
push
mov
test
dec
adc
push
inc
fdivs
les
pusha
add
test
xchg
and
pop
pop
xchg
sub
mov
push
xchg
rcll
xlat
push
mov
push
push
pop
pop
xchg
lret
in
pop
pop
pusha
pusha
fs
ret
mov
repnz
push
pop
xor
xor
jae
sub
push
add
subps
adc
lret
pop
push
xchg
int3
mov
cmp
es
and
insl
jg
dec
mov
and
sbb
sbb
jmp
push
cs
add
push
adc
shrl
add
icebp
lods
ret
mov
xor
push
or
inc
adc
push
lret
inc
int3
adc
test
push
pusha
sbb
jno
jecxz
rcr
stos
stos
inc
mov
jbe
or
sbb
or
inc
xor
mov
leave
es
loopne
pop
jo
daa
scas
sbb
ljmp
insl
ret
xor
or
incb
fwait
cli
jp
push
pop
jmp
call
call
aam
je
scas
xor
into
or
sti
and
add
add
or
xchg
and
sub
and
push
push
fwait
sbb
fstpt
adc
and
aas
cmc
mov
mov
or
lret
cmp
stc
sti
es
sti
not
and
pusha
addr16
mov
fiaddl
pop
push
mov
mov
gs
mov
lock
mov
pop
jbe
ss
jb
test
sbb
not
pop
push
fildll
je
or
add
dec
in
and
push
mov
je
mov
mov
dec
add
ss
in
mov
cmp
pushl
add
adc
and
lret
add
ret
jae
outsl
push
in
cmp
and
pop
sbb
lret
push
mov
fdivs
inc
pushf
add
pop
sbb
fcmovb
arpl
xor
mov
sbb
fmuls
adc
nop
neg
mov
sbb
xchg
sbb
aam
jae
fildl
fcoml
and
mov
clc
in
in
mov
adc
xor
shlb
or
or
push
jl
push
mov
ret
rcrb
cmp
mov
jae
mov
test
notl
add
es
push
adc
stc
xor
add
or
or
mov
rclb
add
incl
cmp
or
jp
or
push
adc
hlt
pop
and
ret
sub
mov
push
in
mov
popf
mov
mov
fdivr
mov
push
inc
hlt
cmpsl
push
cltd
mov
testb
add
cmp
arpl
lcall
lea
pop
push
inc
add
loopne
add
cmp
jmp
jmp
scas
add
xchg
and
leave
inc
cmp
or
test
jp
inc
hlt
mov
lock
shlb
mov
sbb
cs
sub
mov
push
mov
rcl
pop
lcall
mov
sub
xchg
les
mov
sbb
and
cmp
iret
mov
mov
in
sar
push
mov
jmp
mov
and
ror
rolb
xchg
stos
pop
xchg
jg
fdiv
push
popa
mov
mov
shr
xchg
jae
loop
movsl
orl
int
and
pop
das
cmp
push
pop
mov
cmpl
or
mov
adc
mov
je
in
rclb
hlt
test
mov
ljmp
push
pusha
push
cmp
sub
out
adc
mov
and
scas
xchg
push
addb
lds
gs
jns
add
mov
add
dec
lock
and
mov
in
push
fsubl
sbb
test
loopne
and
imul
sub
bound
mov
popf
es
jb
push
adc
pop
and
pop
lods
sbb
push
sub
mov
test
pusha
es
ja
je
adc
bound
hlt
or
and
mov
dec
ret
int3
cli
lahf
repz
cmp
loop
dec
mov
jl
pop
adc
push
xor
sbb
mov
xchg
loopne
dec
mov
sub
cmpsb
sbb
shl
dec
mov
sbb
je
push
jmp
mov
cmpsl
add
in
lds
pop
sbb
inc
pop
push
mov
cmp
dec
mov
addl
mov
jns
rcrb
cmp
xor
call
cmp
jg
push
lds
in
dec
test
shr
mov
add
cmp
lcall
adc
lahf
lret
jnp
mov
inc
shlb
dec
aam
lret
repnz
dec
cmp
jp
pop
or
push
js
xor
loopne
movsb
mov
imul
roll
cmp
push
fisubl
and
mov
js
push
sub
call
push
gs
push
fistl
ljmp
mov
test
fs
push
mov
adc
fistps
inc
mov
pop
xchg
inc
cmp
jl
jmp
pop
add
fisubrs
mov
sbb
test
clc
sbb
add
xchg
xchg
mov
or
mov
add
push
push
cmp
shrl
movl
sbb
in
stos
jmp
sahf
push
xchg
mov
shrb
imul
lea
mov
mov
cmpb
sbb
cmp
mov
sbb
pop
rep
clc
int3
pusha
imul
mov
add
cmp
and
sub
jmp
add
loop
clc
inc
push
mov
xchg
mov
and
inc
ds
rcr
add
push
push
xor
subl
adc
rol
mov
movsl
into
or
dec
and
dec
jmp
je
int3
or
aas
rclb
ret
xchg
pop
ds
je
sbb
mov
cmpsl
add
cwtl
mov
gs
sub
leave
mov
in
adc
sbb
stos
sbb
addl
mov
cmp
icebp
rol
or
inc
inc
inc
push
sub
mov
data16
inc
sub
dec
adc
inc
lds
add
pusha
mov
cmp
or
jae
sbb
pop
xchg
pop
leave
sub
ret
pop
mov
cmp
fstps
or
test
cmp
fs
mov
push
ja
idivb
and
pushf
jp
jnp
mov
pop
jmp
push
push
fmuls
dec
dec
cmp
jo
daa
loopne
fcoml
xor
add
orb
cmp
dec
nop
push
add
sbb
adc
es
xor
lods
mov
mov
mov
dec
test
fidivl
pushl
push
iret
hlt
pop
ja
sbb
inc
lods
cmpsl
jo
movb
cmc
mov
or
jo
ss
mov
cmp
cmp
or
dec
cmp
int3
daa
push
lcall
xchg
add
cmp
rcrl
cmp
pop
iret
mov
mov
or
inc
jge
out
adc
insl
xor
mov
xlat
ds
jp
dec
loopne
adc
push
das
xchg
pop
bound
sarb
ret
pushf
pop
adc
sub
push
shlb
pop
sbb
jle
enter
cmovb
cmp
mov
xchg
out
or
sub
sub
or
int3
mov
sbb
adc
imul
or
inc
xor
fcomps
ret
inc
sahf
cmpsb
add
daa
add
jmp
loope
inc
popa
jo
add
xchg
mov
push
sahf
loopne
cmp
jo
mov
add
cwtl
add
mov
pop
das
sub
hlt
push
leave
fcompl
test
xor
or
adcb
iret
inc
pusha
cmp
or
adc
pop
inc
aaa
pop
dec
stos
xor
mov
add
popa
adc
pop
jo
loope
mov
jne
cmp
inc
fists
aaa
jbe
xlat
mov
push
xor
stc
fcomps
push
or
dec
subl
les
push
addb
arpl
nop
jle
xchg
cmc
sbb
stos
mov
add
and
pop
add
sub
mov
inc
adc
and
stos
fisttpl
adc
pop
test
xor
push
stos
test
dec
sbb
xor
xchg
shll
in
es
mov
add
xor
pop
add
inc
sbb
xor
and
out
subl
mov
add
mov
push
fisubs
jb
flds
mov
sbb
push
pop
test
push
and
jge
ja
pop
sahf
xchg
xchg
or
ret
lods
ret
stc
insb
mov
jl
xchg
mov
stos
sub
cmp
sbb
arpl
or
mov
add
add
shlb
mov
enter
cmp
movb
lret
or
jne
fs
fdiv
add
fdivl
lods
nop
inc
mov
lea
imul
loope
icebp
xchg
inc
xchg
ret
mov
jg
mov
addb
xchg
sub
out
movl
ja
inc
mov
movsb
mov
fldenv
add
pop
movl
test
test
dec
mov
inc
dec
filds
movsl
and
mov
repz
jmp
xchg
mov
push
xor
push
fs
xchg
xchg
pop
mov
popa
sub
xor
shll
and
sub
fsubrl
xor
push
push
inc
mov
add
dec
icebp
insl
push
dec
mov
or
je
xchg
adc
and
add
out
sub
nop
dec
movsb
addb
ss
pop
xor
decb
mov
shll
decl
xchg
imul
adc
jnp
sbb
jnp
push
mov
hlt
and
and
test
mov
mov
call
cs
ja
enter
push
sub
push
fsub
add
aam
pop
and
push
mov
adc
aaa
les
sbb
inc
movsb
fistpll
adc
subl
and
fwait
mov
popf
call
in
cmp
cmpsl
xor
jl
push
enter
int
mov
sbb
mov
mov
inc
nop
sbbl
mov
jmp
jge
adc
call
pusha
movsl
enter
call
mov
sub
jnp
repz
and
outsb
sub
movsb
loopne
fdivl
add
and
ljmp
clc
cs
xor
mov
outsb
push
adc
or
xorl
jno
test
sbb
mov
pushf
lret
push
incb
cmpl
jne
xor
fstpt
dec
test
mov
and
inc
gs
ds
movsb
inc
pushf
mov
mov
inc
lods
add
xor
ljmp
inc
pop
mov
pop
shlb
pop
dec
inc
movsl
mov
adc
cmp
sbb
mov
inc
xor
cmp
iret
cltd
test
jmp
sbb
rcrb
jo
test
push
and
pop
push
xchg
and
mov
mov
cmp
pop
jmp
adc
xor
stc
and
pusha
jne
daa
add
inc
dec
call
in
je
dec
push
rcrl
rclb
add
outsb
and
cmp
call
fcoms
mov
and
movsb
iret
cmp
pop
cmp
jbe
adc
bnd
jl
fwait
test
pop
add
cmovne
dec
cmp
sub
js
mov
lret
mov
push
adc
paddsb
call
pusha
fcomip
push
stos
sahf
pop
jbe,pn
fdivl
ret
jl
adc
mov
inc
ss
shrb
popa
mov
jp
xchg
mov
shll
mov
js
ficoml
mov
insl
test
xchg
cmpsl
out
mov
lods
jae
cmp
orl
mov
push
jg
cmp
jne
cmp
push
fsubr
adc
cld
mov
adc
xchg
or
xchg
adc
push
or
int3
movsb
mov
mov
inc
das
sub
sbb
inc
lods
in
sub
or
pop
daa
sbb
rclb
inc
push
es
rorb
movsb
ja
push
cmpsb
out
lret
sbb
incl
cmp
popa
rorb
aaa
sti
mov
mov
cmp
jle
iret
jmp
mov
inc
adc
xor
lock
and
les
cmc
add
cltd
cmp
push
pop
mov
fwait
mov
pop
je
mov
sub
sbbb
push
or
add
insl
test
dec
repz
mov
jns
negb
pop
sbb
mov
std
push
and
int3
pushf
mov
mov
fs
push
sub
js
mov
inc
or
add
push
pusha
fcompl
mov
add
sarl
fisubl
les
jne
pop
mov
xchg
jne
add
jmp
cmp
dec
pop
push
aas
add
dec
or
xor
mov
test
push
mov
test
or
sub
cmp
rcrb
pop
add
sub
add
jno
movsl
cmp
pop
or
add
fstl
ljmp
xchg
inc
push
rclb
sub
jb
mov
push
sar
sbb
adc
inc
push
adc
icebp
add
ret
mov
xchg
xchg
jb
aad
mov
pushf
push
test
subl
add
inc
andb
scas
xchg
mov
jp
and
xchg
hlt
jne
je
hlt
push
or
out
xor
lock
pop
dec
add
inc
int
push
mov
push
pop
dec
mov
rcrb
add
das
int3
or
pop
xchg
or
add
xchg
out
dec
mov
mov
dec
jne
ret
pusha
mov
mov
enter
ret
pop
dec
mov
adc
sub
subb
pop
adc
sub
jno
sahf
cli
sub
jb
adc
arpl
push
test
and
xor
rorl
sub
xor
pop
cli
mov
cmp
ror
mov
pop
sub
or
scas
mov
mov
push
and
ds
lea
neg
sbb
inc
push
lahf
mov
cmp
pop
sbb
xchg
loope
sahf
mov
daa
mov
mov
rcll
dec
or
test
pop
fs
add
add
lret
fadd
mov
fwait
lea
xor
xlat
in
into
and
arpl
inc
cmp
imul
stos
xchg
push
jae
xchg
jmp
mov
nop
adc
repz
sub
jb
adc
adc
adc
and
pop
adc
adc
enter
and
or
sub
out
adc
add
pop
or
xlat
lods
mov
push
insb
xchg
hlt
cmpxchg
cmpl
je
cmp
jne
call
lods
and
scas
or
enter
or
or
xor
neg
leave
mov
add
cmp
adc
push
jb
das
lea
jo
sub
mov
pop
inc
inc
les
out
fcom
std
je
test
call
in
mov
inc
in
jl
inc
or
mov
jmp
cmp
std
jo,pt
sub
outsb
sarb
ja
bound
add
dec
inc
mov
lea
push
movsb
pusha
es
mov
pop
sbb
adc
mov
imul
xor
gs
popf
dec
std
shl
sti
mov
addr16
cmp
xchg
ss
adcb
stos
rolb
rcrb
inc
jnp
sbb
sbb
outsb
nop
loope
dec
cmp
jne
inc
popf
notl
sbb
test
push
mov
mov
sbb
and
lods
and
pop
sub
dec
jp
adc
pushf
aad
je
hlt
add
add
cmp
in
add
sbb
fdivs
mov
call
dec
call
loope
mov
cmpl
sbb
push
out
mov
mov
xorb
imul
mov
rol
push
cmc
ja
dec
iret
loopne
add
mov
test
mov
jne
pop
adc
lods
cmp
adc
aaa
lret
in
push
push
mov
pop
mov
fnsave
testb
test
mov
inc
inc
cmp
test
mov
push
shlb
call
adc
pop
push
rol
mov
sub
xchg
push
notl
mul
vcmppd
or
std
nop
test
add
icebp
push
sub
push
aad
das
out
add
jmp
cmp
push
call
cmp
ds
xor
cmp
into
or
sbb
sar
cmp
ja
out
xchg
mov
jmp
add
sub
pop
add
into
push
je
or
loope
stos
int3
push
xor
mov
pop
sub
or
inc
repnz
xor
cmp
push
and
dec
xchg
jmp
sub
into
push
ds
into
in
xchg
call
rcrl
in
leave
push
inc
mov
xor
inc
cmp
sbb
pop
add
rcl
push
jle
loope
cmp
stos
cmp
mov
add
int3
jno
arpl
data16
sub
sbb
cmp
pushf
fwait
push
xchg
je
push
xchg
adc
insb
aaa
cmp
push
inc
scas
add
xchg
fstps
xchg
sbb
ds
je
add
ficoms
test
ljmp
jle
push
push
mov
and
mov
test
ljmp
cmp
push
and
outsl
imul
inc
sbb
imul
inc
dec
xchg
inc
loopne
pop
inc
sub
pop
jl
dec
rorb
loopne
mov
and
repz
shrb
clc
std
jno
mov
frstor
jmp
jle
mov
lcall
adc
or
test
cmpsb
jp
icebp
inc
jns
or
inc
lock
inc
or
ret
ljmp
cltd
repnz
cmp
mov
lea
loope
decl
enter
mov
inc
stos
mov
mov
psllq
add
cmp
inc
dec
adc
roll
stos
cli
aas
mov
jmp
cmpl
push
mov
inc
mov
add
rcll
js
and
rorl
dec
adc
out
mov
adc
and
rorl
push
cmp
or
int
push
jmp
les
movsl
jmp
sub
ds
lret
jp
xor
inc
jb
inc
fsubs
stos
push
lods
hlt
std
xor
jnp
clc
mov
sarl
jl
sub
ud0
inc
or
scas
rorl
pop
dec
fildl
inc
jmp
fcoml
sbb
arpl
push
enter
inc
push
and
push
mov
imul
daa
aad
ljmp
rclb
cmp
enter
fiadds
mov
or
push
lods
mov
xor
mov
lds
rorb
xchg
daa
cmp
cmp
cmp
shl
push
shrb
in
inc
shlb
testb
addb
fsubl
andl
lea
insl
or
ret
mov
cmp
ss
adc
or
dec
jge
xor
leave
mov
call
mov
scas
inc
mov
rorl
jl
fsubrl
jge
pop
cwtl
mov
and
pushf
push
jns
sub
or
inc
stos
test
mov
jecxz
shrb
inc
mov
inc
push
sub
add
dec
adc
dec
xchg
push
movsl
scas
or
dec
pop
lcall
xchg
lea
or
inc
cmpsb
ljmp
orb
adc
sub
cltd
fisttps
mov
mov
pop
pop
jne
pop
jle
pop
out
inc
sbb
add
pop
add
loop
xor
push
jecxz
lods
xchg
arpl
jle
or
mov
and
xchg
roll
sbbb
jg
lock
pop
out
leave
or
push
ret
addl
add
add
add
dec
pop
add
pop
dec
in
lea
pop
addr16
xor
test
cld
pop
and
dec
and
fisttpll
add
cwtl
in
push
aam
fs
jmp
addr16
dec
push
xchg
testb
mov
xlat
add
ss
push
mov
stos
insb
pop
sub
aad
sub
sbb
cli
dec
je
dec
imul
inc
mov
and
loopne
inc
orl
and
lret
cltd
mov
sbb
das
scas
mov
add
pushf
jae
lea
jmp
cmpl
mov
add
cmp
jbe
mov
sbb
mov
out
loopne
ja
fstl
xchg
in
test
sub
mov
inc
clc
sbb
cmp
in
mov
mov
xchg
out
sub
mov
insb
sbb
push
ficoml
xchg
lahf
jbe
loopne
add
push
fcomip
stos
push
mov
dec
movb
sub
mov
jg
dec
push
jns
test
xchg
inc
pop
add
xor
test
popa
repz
add
xchg
dec
xchg
sub
fildl
pop
inc
jae
movsb
xchg
jb
sub
pop
or
pop
cmp
sbb
sbb
xor
bound
and
mov
loopne
fisubrs
sub
add
push
xor
int
push
push
addr16
fstl
pop
test
mov
test
mov
mov
mov
test
test
movsb
xor
shll
iret
pop
mov
mov
dec
lret
mov
inc
or
or
arpl
push
or
cmp
xorb
lahf
push
je
mov
push
lods
jg
dec
xchg
cmp
loopne
cmp
mov
mov
or
jbe
stc
mov
jns
outsb
or
loopne
xchg
sub
in
mov
adc
test
inc
sbb
mov
or
std
mov
in
sub
stos
sub
cmp
sub
js
add
push
fcoms
xor
nop
inc
push
mov
add
push
mov
lea
xor
and
imul
and
lds
jge
nop
add
adc
and
nop
add
push
add
and
or
xchg
jecxz
mov
popf
xchg
add
jb
lret
push
pushf
pop
ljmp
test
jbe
push
pop
mov
sub
iret
adc
or
sub
in
test
jmp
idivl
clc
mov
push
and
and
mov
xchg
push
inc
push
pop
xor
testb
dec
in
nop
rclb
lahf
shll
ss
cmp
add
adc
jnp
gs
cmp
jne
pop
inc
dec
push
cmp
data16
pop
and
int3
cwtl
or
cmp
and
or
je
test
dec
in
cltd
jbe
adc
jne
mov
push
test
cmp
dec
or
sub
in
sub
stos
sub
cld
cmp
stos
or
or
out
push
enter
je
lcall
mov
and
mov
and
lds
subb
pop
lods
rolb
cmp
call
addl
lret
fxtract
jne
push
jo
adc
pop
fistl
cld
roll
loopne
fnstenv
mov
sbb
push
mov
push
data16
repz
jo
push
cwtl
stos
dec
inc
add
scas
out
or
add
inc
push
cmp
dec
xchg
sbb
add
outsl
jl
xorl
mov
pop
insb
cs
jnp
pop
inc
lods
in
mov
pusha
push
fs
mov
or
mov
hlt
neg
sbb
and
pop
gs
bnd
movzwl
push
jo
pop
mov
mov
add
inc
sbb
je
test
insb
jge
dec
sbb
lods
jo
cltd
mov
mov
dec
add
xor
sbb
jo
or
loop
jne
scas
fnstenv
adc
sbb
add
ret
rolb
jne
add
fdivs
or
jne
push
fisubrs
fildll
cmp
adc
and
nop
ljmp
shll
out
or
jmp
cmp
pop
mov
addr16
jbe
xchg
push
jbe
sbb
testl
and
xchg
add
push
addr16
loopne
push
popa
fwait
mov
pop
jp
jl
imul
or
sub
push
mov
sbb
or
xchg
test
hlt
xchg
js
add
stos
into
adc
hlt
leave
js
or
pop
push
addl
and
das
dec
ret
dec
lcall
push
fstpt
mov
stc
mov
sub
inc
xchg
test
lods
adc
mov
outsb
inc
das
das
scas
cld
pop
cmp
adc
xorl
mov
lcall
in
cmp
inc
aam
aaa
mov
test
and
xor
or
cmp
jle
add
data16
fadds
inc
jo
call
iret
or
sbb
out
jo
outsb
adc
andl
leave
ret
rolb
rclb
mov
xchg
add
das
add
add
imul
ret
add
or
cmp
popfw
adc
sbb
dec
jle
out
js
xor
inc
jg
xor
or
sub
mov
mov
jmp
jbe
rorb
loopne
adc
out
mov
test
pop
xor
scas
out
inc
imul
movsb
bound
xor
cli
das
sub
lods
adc
cmp
xorb
jno
and
xchg
mov
stos
pop
jmp
xor
insb
xchg
xchg
in
jge
out
adc
xchg
xor
mov
dec
push
jbe
jb
addr16
icebp
dec
mov
push
andl
test
out
or
add
cwtl
or
gs
and
cmpsb
mov
jmp
cmpb
rol
negb
push
adc
push
jae
prefetch
add
mov
mov
or
add
or
or
mov
pop
je
cmp
movsl
mov
mov
sbb
cs
push
ljmp
push
mov
push
mov
add
outsb
jb
mov
aad
push
jo
lock
js
or
fmuls
dec
dec
or
add
sbb
repz
popf
call
in
in
orb
pusha
cmp
mov
mov
sub
stc
mov
jmp
mov
js
inc
add
pop
repnz
sbb
add
jmp
mov
imul
sbb
xlat
jo
pop
pop
sub
lock
xchg
jo
mov
pop
addl
fsubl
xchg
jmp
jge
sbb
shll
call
loop
mov
arpl
test
pop
add
orl
inc
scas
xor
and
dec
dec
xchg
ret
add
pop
xlat
push
fcmovbe
daa
xchg
addr16
and
push
je
enter
push
fs
cmp
lods
push
and
and
mov
or
and
pop
mov
add
rorb
jle
xchg
ds
cmp
xchg
inc
mov
push
jo
sbb
pop
out
pop
push
and
push
lea
popa
sbb
pop
mov
mov
or
jl
xchg
insl
je
in
out
sub
test
jmp
shll
jbe
xor
in
addl
out
add
add
cmpsl
push
aam
mov
fcomps
add
and
adc
fsubrl
lock
jo
push
jle
fisttpll
mov
dec
push
adc
popf
inc
aas
faddp
pop
pop
mov
mov
orb
or
adc
cltd
clc
rcr
mov
fdivrs
cmp
inc
jle
push
push
add
ret
push
shl
test
in
popf
test
out
jbe
std
mov
addr16
rcl
add
or
scas
sarb
ret
mov
xchg
or
xchg
out
scas
xor
cmp
jb
mov
push
mov
sub
sbb
and
ds
negb
lea
fistps
jbe
adc
test
sbb
sbbl
addb
pushf
xor
je
inc
jnp
push
xor
sub
cmp
xchg
testl
sbb
je
mov
adc
push
jae
ss
rorb
aas
or
or
test
stc
and
lock
sub
push
cmp
pushl
stc
inc
inc
push
mov
push
sub
pop
pop
mov
lea
fnstsw
add
std
xor
sbb
pop
divl
jge
sub
pop
test
popa
mov
je
iret
lea
dec
xchg
dec
mov
call
jae
leave
jmp
push
inc
addl
test
push
dec
and
dec
shl
push
xchg
and
test
add
xchg
mov
dec
pop
imul
cltd
xor
adc
pop
test
xchg
notb
rclb
cld
cmpsb
or
and
mov
je
push
xor
scas
pushl
adc
or
xchg
stos
jmp
imulb
clc
insl
mov
mov
jbe
dec
dec
push
hlt
sub
in
sub
inc
push
lods
fwait
pop
xchg
fsubs
push
push
arpl
xor
mov
push
lea
cmp
jle
inc
jns
sbb
xchg
hlt
aad
or
fnsave
jb
pop
adc
fisttps
mov
nop
and
loopne
cmpsb
adc
add
jecxz
mov
mov
add
xor
bound
push
push
add
adc
dec
lahf
scas
push
inc
and
or
pop
mov
clc
mov
mov
mov
lea
roll
dec
or
stc
mov
cmpl
adc
mov
out
pop
or
loopne
pop
imul
inc
and
data16
orb
aam
push
bound
add
subl
or
lods
mov
push
pop
lea
cmp
mov
push
orl
sub
add
roll
mov
lods
sbb
push
sbb
jmp
add
nop
clc
pop
push
or
xor
pop
and
xor
add
sub
pop
fs
mov
xchg
daa
bnd
mov
loop
aaa
sbb
push
cmpb
fidivs
ljmp
push
sub
mov
add
sbb
xor
call
and
lret
ja
and
aam
adc
ret
sub
xchg
lea
test
loope
jle
fdiv
loopne
jge
and
les
dec
fdivl
cmpb
xor
xlat
je
cmp
jae
inc
jmp
push
cmp
cmp
sub
test
orb
pop
add
sti
and
test
push
inc
cltd
mov
cmpsl
cli
or
lcall
ret
sub
sbb
xchg
addr16
push
sti
sub
mov
insb
mov
not
insb
fisttpll
and
mov
cmc
dec
in
rorl
fldcw
adc
and
inc
sti
jno
dec
push
push
sahf
push
add
ja
aam
or
push
popf
scas
lea
cltd
test
jb
or
jecxz
inc
pushf
out
test
test
loopne
cmp
cmpsb
test
push
shr
jns
stc
mov
les
push
cmp
icebp
stc
adcb
push
out
jmp
push
inc
or
fildl
fsubrl
lahf
inc
cmp
int
dec
fisubl
adc
mov
mov
fdivs
addr16
iret
pusha
cltd
cmp
loope
out
or
fwait
mov
add
fildll
pusha
sub
jg
lret
inc
rcl
pop
dec
cmpb
les
or
insl
test
pop
mov
cmp
inc
scas
jnp
sub
push
inc
or
add
mov
inc
inc
es
push
pop
data16
dec
sti
mov
inc
and
aaa
dec
add
xlat
rol
sbb
jno
aas
push
jl
cltd
and
push
nop
push
add
cmp
arpl
addr16
in
sub
imul
imul
sub
inc
cld
xor
sub
sbb
rcrl
inc
push
les
xor
rolb
add
xlat
cmpsl
jb
push
mov
add
in
inc
or
push
lret
cwtl
lock
xor
jns
rcrb
scas
add
adc
inc
push
cmp
inc
test
mov
fsub
mov
lock
sub
add
movsb
push
inc
jge
rclb
loopne
aaa
rep
fsubs
cld
orb
pop
imul
cmp
lret
push
cmp
aaa
loopne
add
lock
mov
adc
andl
sbb
ret
dec
push
clc
dec
cmpl
mov
pop
pushl
inc
js
inc
pop
pushf
mov
push
adc
inc
cmp
pop
ret
arpl
aas
pop
inc
pop
clc
gs
lret
pop
sbb
pop
enter
lea
pop
or
and
inc
push
sub
pop
rorb
or
je
add
icebp
mov
lret
mov
ds
cmc
dec
pop
imul
inc
xor
add
jge
in
std
mov
push
inc
inc
sub
sub
add
adc
adc
mov
sbb
sbb
movsb
jne
or
test
inc
hlt
mov
aad
adc
or
mov
dec
sub
pop
push
push
push
pop
out
jo
push
add
adc
daa
mov
or
jg
mov
or
push
pop
xchg
pop
mov
mov
sbb
mov
mov
cmpb
nop
mov
or
push
dec
int
pop
xchg
jmp
aaa
cmp
xor
fs
mov
push
les
test
sub
adc
jle
lea
loop
jne
xchg
mov
cmpsb
mov
mov
push
int
popa
inc
sbb
lret
or
mov
mov
ret
inc
popa
lret
outsb
xorb
fildl
pop
mov
jo
jne
sub
sub
testl
lea
and
mov
pop
loop
mov
je
and
sub
or
xor
lods
adc
cld
std
inc
dec
add
dec
sbb
sub
icebp
and
adc
cmpl
xchg
add
pop
stos
call
cmp
les
push
or
dec
jmp
adc
or
or
cmp
inc
shll
or
notb
sbb
iret
rcll
sub
adc
or
mov
bound
addr16
or
imul
push
cmp
adc
push
xor
xor
into
fs
cli
push
mov
test
adc
jae
push
cs
mov
outsb
sbb
xor
aaa
int3
sarl
movsb
pushf
and
pop
fwait
ret
adc
shrl
ret
push
push
out
outsl
movsl
dec
mov
aam
cmp
pop
push
and
push
sbb
sbb
mov
add
imul
ret
sbb
or
ljmp
add
fsts
pop
push
mov
push
mov
xchg
dec
in
cmc
push
adc
adc
or
inc
dec
xchg
mov
das
jmp
cmp
add
adc
icebp
dec
loopne
pushf
jb
adc
int
jo
sub
push
xor
mov
adc
movsl
ret
mov
imul
sbb
mov
pop
and
xchg
out
nop
or
jecxz
sbb
add
sbb
je
mov
clc
add
faddl
sarl
andl
inc
xchg
and
mov
inc
test
fstl
repz
pusha
pop
add
pop
cs
or
jnp
pusha
cmc
xchg
das
and
mov
mov
mov
cld
mov
xchg
clc
mov
in
push
aaa
mov
and
insb
sub
sbb
dec
jbe
sub
fimull
std
pop
lret
lcall
popf
mov
and
pop
sub
mov
xor
inc
add
cmpsb
les
push
mov
inc
stos
or
mov
sub
cmpb
add
pop
ret
outsl
jmp
sbb
add
pusha
enter
fs
cld
sub
dec
jbe
xchg
cmp
push
sahf
popa
sti
sahf
cld
ret
ds
adc
cld
js
fs
frstor
mov
add
sti
sbb
xor
or
push
test
mov
dec
stc
mulb
push
push
add
shl
dec
shl
loopne
jne
mov
in
or
push
push
add
and
clc
popa
or
pusha
and
gs
mov
dec
pusha
inc
in
mov
std
push
push
push
cs
and
rcrl
mov
sbb
lret
sarl
lods
add
hlt
fcmovb
adc
mov
mov
jl
dec
loop
inc
subl
into
rolb
push
je
cmp
push
stos
sti
jb
lea
cmp
pop
subb
inc
std
push
jne
cmc
bound
mov
adc
adc
sub
jmp
xlat
push
sub
push
xor
dec
add
inc
or
mov
into
lods
popa
ret
or
inc
stc
mov
sbbb
cmc
std
ror
dec
call
test
xor
ljmp
push
dec
push
cmp
in
arpl
lock
inc
mov
mov
mov
ret
cmp
fcmove
sub
pop
imulb
jbe
or
mov
out
pusha
jmp
into
out
push
loope
andl
mov
aaa
add
shlb
idiv
imulb
clc
test
push
add
sub
outsl
push
xor
or
dec
inc
jg
outsl
inc
pop
adc
jl
xchg
pushf
ret
inc
mov
imul
int
int3
pushf
fs
inc
mov
aaa
hlt
aas
lea
mov
mov
fiadds
out
sar
jmp
pop
adc
lret
ficoms
shrb
mov
mov
lods
adc
adc
shlb
inc
add
jmp
imul
pop
add
add
xor
movsb
shrb
rcr
adc
into
and
xor
or
je
roll
inc
call
jo
mov
xor
xchg
jle
rcll
or
adc
and
sbb
les
in
js
je
xor
imul
xor
ljmp
xchg
lret
xchg
push
scas
add
mov
sub
add
imul
mov
and
in
push
add
or
dec
enter
pop
and
inc
add
cs
cmp
test
jp
jo
pop
dec
sbb
mov
decl
pop
scas
sub
xchg
add
sbbb
sbb
mov
shll
pop
push
cmp
stos
bound
xchg
inc
in
mov
jnp
mov
jmp
push
mov
roll
xor
ret
mov
push
push
dec
enter
ja
dec
xchg
sbb
push
push
pop
inc
imul
dec
cmp
mov
xor
scas
femms
dec
movl
push
adc
push
mov
adc
mov
rcr
pop
mov
movb
out
sti
lods
addr16
jne
andb
jo
cmp
or
fildl
divb
push
add
es
jno
add
jne
pop
xchg
rorb
or
pop
mov
mov
or
jne
mov
shlb
cmpsl
pushl
xor
mov
ljmp
test
popf
fists
lahf
cmp
ja
lock
lea
mov
push
mov
fsubs
sbb
add
jo
pop
insl
repnz
cld
push
dec
jnp
notb
popa
inc
add
mov
dec
add
stos
pop
fiaddl
xchg
rorb
push
dec
push
mov
jae
lahf
or
movsb
inc
mov
jge
mov
xor
sarb
sub
addr16
decl
pushf
jl
adc
repz
or
jo
fldt
bound
jp
or
mov
adc
imul
sbb
lcall
inc
inc
fucomip
pusha
das
adc
aas
and
mov
jl
rcll
clc
cwtl
pop
lds
xchg
mov
push
jmp
jp
clc
adc
jl
and
cmp
or
xchg
ficompl
sub
sub
xor
and
xchg
pop
and
dec
aam
push
rol
cvttps2pi
dec
adcb
andl
xor
add
mov
cwtl
cli
rolb
push
jne
dec
cli
or
mov
insl
jne
sub
sbb
jne
add
int
movsl
dec
push
je
movsl
jns
sahf
xor
outsl
sbb
dec
loop
inc
js
jne
data16
jne
notl
nop
test
adc
inc
mov
pop
test
lds
mov
xchg
es
cmp
je
aaa
add
lret
push
or
pop
inc
jo
jne
subb
mov
jb
xor
fsubs
adc
shlb
sbb
push
sarb
mov
mov
cmp
push
mov
or
push
cmp
fdivrl
sarb
mov
mov
cmp
js
enter
fidivs
and
gs
xor
call
in
push
cmc
push
sbb
outsl
push
cmp
add
and
sbb
jns
test
fsub
and
add
push
dec
mov
clc
stc
lds
fbstp
lea
jne
pop
or
lea
jmp
std
mov
mov
add
in
push
push
orb
mov
xor
jne
xchg
add
int3
add
in
mov
or
adc
loopne
add
add
and
add
mov
insb
in
imul
inc
dec
shrl
dec
add
arpl
or
das
add
sbb
inc
sbb
sub
sub
fisubl
push
mov
push
add
and
cmpsb
imul
or
adc
push
pusha
cmpsb
imul
add
or
cmp
or
mov
andl
pop
addl
adc
lcall
sub
mov
imull
add
loopne
mov
ja
nop
in
jle
movb
sbb
adcl
jmp
sbb
xchg
jae
in
test
js
or
xorb
or
insb
push
or
push
cmp
adc
idivb
cmp
cmp
mov
inc
inc
imul
pop
pop
hlt
push
adc
cmp
inc
pop
add
addps
mov
insl
or
mov
loop
pusha
cmp
icebp
push
addps
sbb
push
jp
inc
add
inc
fcompl
mov
cltd
hlt
test
add
rcrb
add
pusha
and
lods
adcb
xor
add
shlb
jne
sbb
add
cmp
cmp
and
push
ret
sub
es
mov
daa
push
add
jo
loope
xor
pop
mov
test
loopne
repz
push
mov
and
mov
fiaddl
sub
out
loopne
sub
test
and
xchg
add
add
imul
xor
movsl
push
je
push
shll
xor
frstor
jne
das
xorl
cmp
cmpsb
mov
mov
and
daa
inc
loope
idivl
adc
imul
mov
lcall
mov
jmp
and
xchg
mov
jns
mov
cmc
dec
mov
enter
stc
fldl
sar
xor
dec
ja
das
add
testl
xor
aaa
push
clc
push
pusha
mov
inc
xchg
les
sub
testb
mov
stc
push
jne
mov
push
rolb
xchg
xor
data16
je
xor
pop
lea
xorl
insl
bnd
fwait
pop
lahf
and
cld
jb
dec
xlat
or
dec
mov
rcll
sub
push
ljmp
sbb
and
popf
pop
ret
or
mov
xchg
sbb
adc
sub
into
cmp
mov
inc
jns
push
inc
cmp
adc
push
popf
lock
fcmovb
dec
mov
dec
std
push
sbb
jo
cli
out
fidivrs
xchg
push
adc
or
jp
pop
mov
nop
in
ret
jae
movsb
adc
fdivs
cmc
arpl
or
faddl
pop
add
loope
xchg
push
inc
adc
fsubrl
sti
add
xor
xor
outsb
mov
mov
cmp
test
sub
enter
daa
call
sub
xchg
mov
push
js
nop
mov
rorb
je
adc
lea
call
jnp
jg
bound
pushl
and
pop
out
mov
mov
adc
push
int3
lock
and
inc
cmp
hlt
mov
notl
and
sbb
je
cmovle
sti
mov
je
xor
add
and
orl
enter
out
test
icebp
or
mov
jo
lea
xor
push
inc
mov
pushf
cmp
cli
je
popf
enter
add
fadd
cmpb
loopne
lds
repnz
adc
cmp
push
hlt
sti
push
sub
dec
icebp
push
fwait
inc
and
test
jne
or
mov
add
or
outsb
dec
adc
xchg
adc
pop
jnp
lock
mov
lock
in
mov
cs
jmp
push
mov
push
pop
in
repz
adc
sbb
cmp
pusha
adc
rcl
sbb
push
mov
mov
ret
add
mov
repz
loopne
nop
cmp
lret
sub
xor
cltd
cmp
cmp
xor
xor
inc
in
inc
std
and
pop
xor
mov
xchg
pusha
push
push
test
or
xor
test
cmpsb
xor
test
add
pop
pop
mov
sbb
call
and
add
ss
adcb
sahf
mov
sbb
and
fimull
sub
dec
fucom
mov
jne
jbe
add
mov
movsb
mov
add
xor
out
je
push
aas
jne
outsb
out
imul
mov
outsb
cmp
repz
fistl
popf
rolb
fidivrs
mov
sub
mov
cmp
pusha
or
je
sbb
repz
lock
xchg
push
and
adc
xchg
cwtl
push
sub
lods
out
adc
insb
jno
inc
sbb
dec
push
or
cwtl
cmpsl
or
sbb
mov
lret
lret
pushfw
fs
or
and
les
push
loopne
popa
add
adc
mov
push
add
pop
add
test
in
lods
js
pop
arpl
arpl
test
add
test
outsb
adc
sbb
into
or
inc
loopne
or
sbb
inc
adc
add
cmp
pusha
jbe,pn
and
sub
xlat
fsts
cmp
fdivs
cmp
push
sbb
pop
dec
sub
in
outsl
std
fildl
notb
jge
int3
mov
pop
xchg
xor
stos
push
rcrl
arpl
mov
jne
lret
jne
and
and
and
xchg
adc
or
cmp
mov
test
push
or
sub
mov
loope
jmp
or
or
mov
pop
cmp
pushf
and
or
push
dec
dec
xor
int3
and
and
mov
daa
and
push
lea
and
mov
jmp
test
push
mov
inc
xchg
vaddsubps
sub
bound
lcall
adc
fiadds
out
scas
bound
mov
cmpl
pop
enter
sbb
pop
push
fmuls
mov
sbb
addr16
divl
mov
je
push
orl
psubb
pop
inc
xchg
and
and
lret
rcrb
loopne
divb
iret
mov
dec
cmp
xor
xor
aaa
arpl
dec
pop
mov
add
sbb
les
mov
sbb
sbb
lea
push
adc
pop
testl
add
addb
add
jl
xor
xor
push
or
out
mov
orl
xor
dec
pusha
pop
insb
in
add
js
arpl
cmp
shl
jae
and
dec
sbb
fisubrs
fs
sub
aaa
push
ds
fisubrl
and
xchg
pop
lcall
xor
jns
je
or
push
push
and
jne
movsl
pop
adc
sbbl
shl
lea
cmp
or
mov
push
int3
and
test
push
aam
lods
fcoml
sbb
sub
or
sub
lds
and
sbb
jp
inc
push
or
xchg
jbe
mov
aas
adc
fsubl
out
test
sub
adc
imul
ret
or
pop
mov
popf
inc
jg
adc
inc
int
shll
std
mov
lret
push
int3
divb
je
in
cmp
mov
cld
push
ljmp
or
fucomp
inc
mov
sbb
mov
push
cs
inc
inc
das
pop
or
pop
mov
push
and
daa
addl
and
arpl
push
xchg
pop
pop
in
inc
push
adc
mov
cmp
push
loopne
mov
imul
and
inc
and
and
pop
dec
xor
call
add
sahf
push
mov
push
mov
daa
pusha
leave
push
xor
sub
cmpsl
ja
mov
xchg
test
sub
xor
push
or
or
push
push
jbe
mov
test
xchg
pusha
inc
test
adc
les
push
push
add
push
sbb
jne
or
inc
add
jbe
in
and
ja
xchg
leave
add
xchg
xor
nop
cmp
andl
or
xchg
or
dec
fcoml
movq
push
sahf
and
cmp
adc
adc
mov
dec
adc
sbb
dec
jecxz
xor
pop
les
pop
sub
push
fmuls
push
inc
xor
cld
jmp
fscale
inc
inc
outsb
add
jnp
pusha
push
sbb
cmp
dec
or
push
dec
pop
nop
bound
outsl
jo
in
jbe
test
push
inc
in
adc
popl
jmp
xchg
bound
les
jle
xor
lods
stc
inc
cmc
js
xor
xor
imul
das
cmpb
cmp
pop
add
push
cmpb
pushf
sub
mov
out
and
out
dec
push
inc
xor
mov
pop
pop
or
inc
lahf
or
shlb
fs
pop
mov
inc
negb
popa
push
add
mov
jl
inc
inc
lock
andl
adc
xchg
pop
mov
js
mov
and
and
stos
cltd
jmp
add
jae
cmpsb
lea
inc
mov
repnz
jo
push
dec
jo
sbb
adc
fmuls
xor
push
ret
push
fcoml
dec
sub
push
mov
dec
enter
inc
bound
arpl
test
add
dec
iret
test
jl
dec
cmp
cmp
push
push
rorl
scas
lds
dec
jl
and
pop
xlat
lret
xor
je
or
adc
sub
popf
mov
sbb
ret
loopne
pop
and
ret
jecxz
adc
adc
icebp
fdiv
jno
bound
xor
pop
inc
jb
inc
push
dec
add
mov
push
arpl
cld
or
mov
movsl
add
jne
sub
fs
push
or
push
sbbb
push
lock
push
insl
push
dec
push
sub
ret
aas
xor
cmp
jbe
subb
sub
dec
ja
and
xorb
imul
jl
inc
sbb
mov
xchg
idivb
ds
cmp
jl
loope
xor
jne
loopne
push
fistl
lret
jl
inc
push
xchg
push
clc
sbbb
push
sbb
inc
mov
leave
pop
adc
cltd
fcmovb
or
xorb
mov
leave
cmpsl
inc
add
mov
add
test
adc
bnd
cmp
dec
add
popa
addr16
sbb
movsl
sarl
xchg
sub
pop
mov
sbb
pop
hlt
and
push
push
pop
enter
mov
or
xor
mov
mov
movsb
and
mov
add
rclb
pop
ja
loopne
fs
or
or
cs
jo
pop
add
test
mov
leave
xlat
xor
in
jns
loopne
push
xchg
int
mov
cmp
and
aas
or
neg
adc
xchg
jbe
jl
push
inc
or
mov
pop
scas
subb
mov
in
add
decl
pop
cwtl
imul
cltd
notl
push
aad
pushf
push
addb
or
arpl
add
cmp
push
sub
adc
add
push
cmp
mov
or
mov
sbb
inc
inc
xor
out
stos
mov
cmpl
aas
dec
jle
adc
sbb
and
push
mov
mov
test
loop
rolb
je
adc
xchg
fdivs
inc
dec
mov
nop
cmp
js
pop
arpl
mov
adc
je
adc
cmp
sbb
jmp
cli
inc
testl
push
jo
loopne
stos
loope
les
je
sub
nop
cmp
adc
mov
shrb
or
add
sbb
mov
fsubl
xor
popa
push
add
dec
and
sub
add
push
push
inc
mov
cmpsl
testl
pop
jae
fsts
add
mov
orb
fcomp
mov
shl
orl
cwtl
call
into
add
inc
in
cmp
fisubl
mov
das
push
jmp
data16
xor
add
push
hlt
div
push
and
mov
sbb
adc
sbb
jb
pop
mov
xor
adc
sbb
jne
sbb
pop
addr16
insb
xchg
xor
add
push
add
lods
enter
and
add
mov
push
push
xchg
in
test
pop
sbb
test
aas
cmp
or
mov
mov
jbe
cli
bsr
inc
int3
and
cli
push
cld
outsb
or
dec
pop
movb
pop
pop
call
sbb
pop
adc
inc
insb
shll
iret
call
out
push
test
gs
loopne
adc
cmp
sbb
add
push
inc
sbb
or
sbb
push
cmc
pusha
insb
std
jg
push
push
adc
sarb
jno
mov
and
stc
pop
mov
aam
insl
out
in
sbb
movsl
dec
mov
xor
es
jnp
xorl
or
sbb
lret
mov
arpl
pop
adc
shl
pop
inc
lock
jbe
ret
dec
jns
in
pusha
xchg
mov
int
ja
sbb
push
int
dec
add
adc
push
fdivs
mov
push
push
or
mov
xor
orl
mov
xchg
sbb
arpl
and
or
mov
mov
shrb
inc
xchg
add
or
sbb
adc
or
cmp
mov
pop
adc
or
out
arpl
add
mov
add
insb
insb
mov
lods
push
loope
adc
cmpsb
aam
or
ficompl
and
jp
add
adc
push
lea
xor
in
xchg
adc
inc
scas
xor
shrb
add
pop
pop
arpl
dec
jg
ss
out
add
and
sub
jl
jmp
push
mov
push
ficompl
pop
mov
fsubrs
lea
xchg
ret
cmp
cmpb
jle
add
xor
dec
push
je
addr16
js
xor
add
jno
jbe
es
js
js
mov
movsl
add
in
mov
sbb
xor
sub
cmp
les
test
sti
dec
sbb
cmp
push
xchg
or
enter
cld
or
and
mov
sbb
push
call
and
jmp
shrb
mov
cmpb
pop
cld
fistpll
mov
nop
arpl
sub
paddusw
aad
sarb
mov
lea
mov
xchg
stos
aam
jp
jo
lret
outsl
ficoms
sbb
push
mov
jns
add
sbb
out
test
cmp
mov
rol
arpl
cmp
cmp
mov
inc
adc
adc
cmp
push
jbe
and
test
test
mov
fs
and
movsl
mov
jbe
mov
pop
mov
loopne
pop
testl
sbb
dec
repnz
sbb
adc
fsubrp
xchg
or
js
xchg
dec
or
dec
faddl
sets
pop
xchg
int3
push
ret
pop
sarl
sbb
mov
push
add
sub
cltd
adc
loope
add
into
push
out
inc
xchg
push
pushf
jne
rolb
sbb
in
mov
sub
mov
add
shl
ret
shl
inc
jnp
aas
jnp
mov
adc
or
ret
add
and
sub
xlat
loope
rcl
adc
mov
add
cmp
add
loope
and
divl
jno
xchg
or
rolb
push
test
pusha
stc
jae
push
push
out
dec
xor
insb
js
movl
pop
pop
push
push
jl
loopne
xor
out
insb
es
push
xor
xchg
data16
shrb
xchg
push
shr
aaa
mov
cmp
shll
add
cmp
push
imul
testl
xorl
lret
sub
xchg
inc
mov
and
sub
jmp
ret
pop
ja
lahf
mov
mov
dec
push
mov
sbb
push
add
add
fcmovu
push
lret
mov
shl
pop
pop
aad
adc
xorl
vpaddsw
stos
sti
push
test
sub
dec
jno
jle
mov
in
mov
add
das
in
daa
xor
sub
in
rorb
cmp
sub
subl
insb
int
inc
js
or
lea
and
fisubl
and
daa
and
pop
mov
sar
add
test
xchg
push
cmp
inc
shl
xchg
fnstcw
test
adc
adc
mov
je
testb
loop
pop
cmp
push
and
xor
push
mov
test
cmpsb
jne
ret
outsl
test
lea
je
inc
mov
je
or
sub
mov
das
adc
mov
cmp
push
or
add
cli
js
jne
sahf
push
add
andb
repz
push
adc
rclb
adc
ss
test
sub
mov
fs
out
ja
test
aam
out
push
mov
jbe
call
jmp
test
or
jae
or
mov
jl
js
mov
cmpsb
or
test
loopne
add
inc
push
adc
or
push
pop
mov
or
push
sbb
adc
mov
movsl
das
ret
loopne
rclb
repnz
add
jp
sbb
pop
repnz
cs
xor
sbbb
inc
clc
jecxz
dec
je
sub
jmp
sub
or
add
cld
inc
outsb
fcomi
adc
scas
in
stos
mov
add
pop
jl
aaa
or
push
adc
inc
aas
add
mov
inc
add
pop
dec
mov
dec
in
fisttpl
insl
inc
ss
divl
cwtl
sub
xchg
sbb
push
jns
rolb
and
push
pop
and
inc
test
pushf
adc
add
jne
cmp
or
and
in
push
xor
adc
lret
pop
fsub
mov
loopne
push
cmp
mov
dec
or
ret
rclb
jg
repz
push
loope
enter
xor
stos
sub
into
push
and
mov
jge
xor
or
call
add
xor
push
mov
push
imul
add
pusha
daa
mov
addr16
int
dec
lcall
push
movsb
imul
les
std
xchg
dec
or
xor
cmp
mov
enter
push
je
and
enter
cmp
xor
pop
add
mov
pop
cmp
inc
inc
fcoms
in
xchg
test
adc
fdivl
ds
in
add
imul
mov
mov
ficompl
cmp
aam
xchg
mov
leave
mov
scas
add
fcoml
mov
in
push
xor
pusha
das
jno
int
push
ret
push
imul
mov
fsubrs
or
call
jbe
inc
xchg
shrl
add
mov
cmpsl
fs
push
mov
mov
xor
aas
mov
lods
dec
aam
sbb
adc
cmp
sub
in
das
cmpl
add
js
xor
in
inc
sbb
mov
inc
out
or
jmp
mov
push
jne
mov
div
cmp
sbb
or
adc
push
dec
rclb
sbb
adc
loope
or
fidivl
xor
inc
lds
and
cmp
xor
push
mov
fisubrs
or
ss
mov
and
or
jl
out
mov
xchg
xor
data16
fsubrl
daa
fists
dec
inc
popa
or
mov
div
dec
inc
fsubr
xor
call
lahf
ds
imulb
push
clc
vrcpss
rolb
sbb
pop
inc
pop
mov
shrb
loope
sbb
push
pop
push
cs
test
outsl
dec
xchg
sbb
and
je
dec
mov
xlat
rolb
inc
pop
mov
or
ret
mov
or
push
repz
subb
outsl
cmp
int
mov
rcrl
lea
add
ja
dec
pop
sbb
imul
add
and
sub
mov
add
mov
add
nop
or
inc
jle
sbb
jns
or
inc
mov
or
adc
or
mov
adc
mov
push
or
sub
push
loop
sub
test
mov
popa
mov
add
or
in
cmpsl
cmp
pop
fdivrs
mov
push
gs
jl
enter
pop
sub
je
rcl
add
imul
pusha
sub
sahf
cwtl
ds
subb
xchg
push
mov
cmp
sbb
add
call
imul
xor
aaa
addl
divps
in
mov
inc
sub
cmp
inc
and
hlt
incb
loope
jne
jnp
dec
push
popa
push
or
lret
call
mov
pop
or
add
cmp
sbb
add
mov
mov
mov
ret
pop
ret
mov
out
sbb
pop
rolb
pushf
fildll
or
pop
adc
push
xor
push
or
push
and
add
pop
push
leave
add
or
and
adc
lock
cltd
inc
lods
mov
sbb
into
scas
dec
mov
mov
adc
inc
push
fadds
call
in
int3
xchg
mov
or
push
mov
icebp
or
add
leave
sub
ret
enter
jge
ret
out
cmp
pop
sbb
pop
inc
testb
adc
inc
inc
test
xor
divb
or
sub
pushf
add
pop
or
lahf
adc
xor
lea
mov
pop
jne
loopne
roll
mov
push
les
adc
fdivrs
lret
xchg
test
in
or
push
loope
cmp
cmp
push
js
je
add
ret
inc
jmp
xadd
mov
negl
fsubrl
sti
or
jl
sbb
xchg
pop
add
push
sbb
jmp
push
out
pushf
std
and
adc
inc
movsl
pop
iret
inc
shrb
outsb
sbb
mov
orl
add
in
out
sub
out
adc
pop
cmp
lods
jno
jg
shrb
add
stos
insl
arpl
mov
cmp
add
cmp
jnp
xor
pusha
leave
inc
adc
das
xchg
ret
push
popa
add
xor
ja
lock
push
into
jle
mov
add
pop
addl
fcoms
and
sbb
lcall
ss
adc
or
inc
adc
xchg
je
fsub
dec
add
sub
mov
cbtw
xchg
add
push
das
jnp
and
push
jl
daa
js
ljmp
or
adcl
ret
or
cmp
lods
clc
mov
xor
int3
sub
in
cmp
mov
sub
dec
pop
and
dec
jbe
sbb
cmp
lods
ret
dec
lods
repz
xor
loope
sbb
jecxz
mov
dec
cmp
pop
mov
fcomp
out
or
call
pop
in
out
lock
je
pushf
lock
add
sbb
adc
jae
iret
outsl
dec
and
lock
add
pop
or
add
repnz
pusha
je
rolb
pop
add
data16
je
cmp
je
loopne
push
mov
adc
mov
in
dec
mov
mov
add
scas
cltd
daa
push
or
sti
and
fisttpl
and
jle
dec
inc
dec
dec
xchg
sub
je
add
je
cmp
or
add
shrb
push
lock
sbb
fisubs
dec
sub
mov
es
arpl
adc
push
leave
decl
or
mov
pop
mov
inc
sub
mov
adcl
cmc
xor
aaa
inc
sub
push
jo
cs
sub
push
add
lea
mov
dec
jp
push
jo
mov
inc
dec
test
pop
imul
fists
cmp
or
inc
xchg
sti
mov
jmp
cltd
or
pop
or
xchg
sbb
sbb
add
inc
lcall
adc
shll
pop
mov
push
scas
mov
dec
or
je
adc
out
pop
cmp
sbb
imul
and
xchg
sbb
add
fsts
dec
xor
and
inc
lcall
add
int3
jmp
sub
xor
add
xor
lea
arpl
bound
andl
sbb
mov
adc
xor
and
int
xor
or
inc
imul
jb
cmp
and
inc
mov
xchg
fsts
cmp
inc
inc
out
fsts
enter
jne
ja
and
dec
and
clc
fwait
xchg
xchg
pop
gs
jo
pop
insl
popa
testb
jmp
push
jg
mov
test
jmp
push
nop
int
ljmp
xor
pop
and
cmpsl
insl
jp
pop
push
pop
xchg
sub
sahf
out
push
pop
pusha
push
inc
jg
out
fadd
add
ljmp
adc
sub
jne
push
mov
or
cwtl
dec
push
adc
and
adc
in
mov
push
cmp
push
ds
ret
sbb
pop
adc
and
jno
xor
out
push
jg
pop
movsl
push
loope
inc
sub
add
mov
lret
or
cmpsl
fsts
adc
pushf
popa
fsubl
lock
push
sbb
sbb
andl
xor
push
rclb
or
pop
mov
sub
dec
mov
jo
or
lock
jno
adc
inc
roll
jle
mov
in
jb
call
mov
test
hlt
cltd
fdivl
xor
into
iret
in
clc
inc
xor
add
pop
xor
inc
push
xchg
movsb
aam
mov
mov
dec
pop
mov
push
push
add
or
pmullw
fimuls
loopne
sub
lret
jge
sbb
pop
in
in
mov
loopne
loopne
add
rol
xor
push
loopne
loop
sbb
push
stos
mov
incl
jne
cmc
add
pop
pop
add
and
bound
fsubrs
push
repnz
movsl
sbb
popf
add
sub
cmp
movsb
loope
adc
xor
or
push
loope
int3
mov
adcb
jne
pushf
into
or
ds
xlat
xor
xchg
daa
add
int
loopne
adc
dec
mov
mov
and
sub
jb
dec
das
mov
pop
and
cmp
xchg
sarb
mov
loop
inc
repz
xlat
xor
mov
pop
addb
dec
pop
or
push
insl
cld
scas
call
mov
fcoml
mov
clc
loopne
mov
pushf
arpl
clc
out
push
adc
pop
addl
mov
mov
add
shlb
cmp
jb
sbb
xorb
cltd
xchg
out
sarb
xor
mov
or
or
in
stc
add
jne
sbb
xchg
dec
adc
jl
bndldx
stos
push
dec
xor
inc
popf
mov
and
test
in
mov
aam
xor
push
sbb
adc
ret
push
cld
sub
or
add
lock
mov
or
jge
int3
and
rcr
jl
dec
stc
and
sub
push
jbe
dec
and
push
and
nop
or
xor
fsub
pop
daa
sbb
in
or
cmpb
pop
mov
mov
push
xchg
dec
imul
leave
mov
sub
pcmpeqw
xchg
adc
enter
jno
pusha
pop
movsl
xchg
pop
push
loopne
loopne
shrb
jl
insl
fnstcw
inc
mov
sub
repnz
xor
push
in
and
mov
and
sbb
in
cmpsb
cmpsl
std
packuswb
adcl
shll
out
rorb
fwait
lds
addb
lret
lock
dec
mov
mov
sti
pop
inc
push
xchg
xor
imul
cmp
sti
pop
push
sub
cmpsb
lds
mov
sub
push
cmp
add
lock
rolb
das
in
lods
je
or
mov
push
vpmulhw
adc
mov
cmp
jbe
add
xor
push
leave
push
xor
jns
xor
movsl
xorb
fldenv
shll
push
adc
leave
les
add
les
mov
orb
xchg
pop
sub
sar
add
pop
repnz
movsb
mov
push
movsb
loopne
and
or
cmp
or
push
xchg
aaa
add
jne
test
push
mov
filds
pop
sbb
push
lea
add
shll
cmp
push
cmp
push
sbb
sub
xchg
or
gs
js
jmp
lock
xchg
or
sub
jo
popa
add
sbb
cmpb
scas
stos
xchg
adc
sbb
or
xchg
in
jmp
repz
aas
lock
addb
pop
repnz
inc
fsubl
in
aas
ja
push
pop
dec
rcrb
inc
lret
or
icebp
push
int
pop
test
ret
flds
popl
fcomps
test
jge
mov
mov
mov
mov
adc
ret
xchg
dec
stos
cmpsb
push
mov
jb
imul
ret
inc
jnp
push
icebp
cmp
jne
andl
call
test
movsl
in
imul
jmp
subb
push
mov
call
jnp
mov
jnp
cld
je
push
jbe
dec
aaa
fwait
adc
pop
push
cmp
iret
sarb
push
lret
jno
sbb
mov
or
sub
repnz
insb
xchg
lahf
jle
push
mov
push
ja
clc
mov
sub
push
inc
sub
ret
iret
popl
cmp
add
sbb
cmove
int3
mov
nop
inc
push
enter
cmpsb
push
test
push
or
in
xor
adc
jecxz
call
cmp
mov
lea
mov
xchg
xchg
sub
mov
movsl
lds
inc
imul
xchg
sub
pop
sbb
mov
or
or
xchg
jno
adc
repnz
jmp
xor
xchg
xchg
jno
cmpsb
or
mov
mov
arpl
cmp
stos
xchg
push
dec
stos
xchg
xchg
sub
sbb
ljmp
adc
mov
out
inc
and
cld
movsl
enter
je
or
dec
movsb
xor
mov
dec
loope
out
ficoms
cltd
movsb
ror
inc
or
das
xchg
push
mov
arpl
jp
rcl
movsb
mov
inc
nop
pusha
rcrb
add
xchg
or
add
sarb
faddl
in
xor
test
add
or
cmp
lods
mov
dec
cmp
adc
mov
and
andb
add
sti
mov
mov
loopne
mov
pop
ret
sub
das
sbb
aaa
xor
adc
fstpl
dec
les
pusha
add
xor
jns
adc
mov
xchg
test
sbb
andb
repz
add
dec
call
or
cmpsl
or
push
hlt
sbb
inc
pop
xor
imul
xor
rcrb
enter
je
and
adc
ret
and
xchg
js
hlt
sarl
rolb
push
push
xor
fldenv
push
push
fldl
push
fildl
or
inc
or
adcl
push
loope
or
mov
test
cli
ss
cmp
adc
pop
test
pop
push
into
ret
sbb
mov
roll
push
clc
rcll
mov
mov
std
ljmp
cld
fsubr
push
lcall
sub
pop
pushw
mov
xlat
adc
inc
pop
add
fwait
inc
and
mov
nop
jbe
sub
lea
pusha
sti
roll
inc
inc
cmp
jb
addl
enter
add
push
and
cmp
bound
dec
push
push
imul
add
sbb
add
cmp
adc
add
rolb
xchg
xchg
outsl
xchg
push
add
inc
jge
push
inc
insb
or
jl
test
iret
cmpl
jg
jp
pushl
orb
or
movsb
xchg
mov
inc
sbb
pop
out
push
movsl
cmp
mov
shr
not
mov
call
in
je
mov
lock
xchg
mov
ret
xor
push
lds
mov
addr16
or
dec
inc
push
cmp
push
pop
dec
jg
xor
jo
in
ja
or
xor
repnz
xor
jno
cmp
inc
push
dec
mov
ret
xlat
push
cmp
inc
icebp
jecxz
and
or
push
js
add
jg
or
inc
add
movsb
add
rorb
imulb
popf
mov
inc
mov
push
cmpsl
fs
decl
adc
xchg
xor
add
or
or
sbb
bound
sub
mov
adc
mov
xchg
mov
stos
or
jo
add
in
shlb
inc
sub
mov
and
cmp
loopne
mov
pop
data16
iret
inc
adc
fcoml
dec
mov
or
ss
and
pop
scas
pop
jb
push
inc
adc
or
pop
dec
mov
pop
hlt
jo
out
rclb
sbb
lcall
xchg
xchg
bound
fdivrs
push
inc
cmp
jmp
and
jl
cmp
scas
mov
lcall
or
dec
call
cltd
shr
sub
nop
jp
cmp
dec
sub
add
lods
dec
adc
or
and
lret
fstl
adc
xor
je
pop
xchg
clc
ds
cmp
and
xchg
xor
adc
adc
sti
rep
cmp
inc
jl
inc
xor
or
sbb
jmp
sub
jae
add
out
and
inc
sbb
xor
arpl
mov
adc
or
jne
push
push
inc
push
push
ss
testb
and
push
mov
loopne
jge
mov
dec
adc
loop
test
xchg
data16
xchg
sub
in
outsl
xor
std
adc
adc
push
and
sarl
mov
inc
lock
mov
mov
fsubl
adc
rclb
fdivl
addr16
aas
push
xor
int
push
test
dec
cmp
rolb
test
in
repnz
andb
mov
adc
fildl
das
cwtl
pop
mov
add
jnp
pop
adc
shlb
push
push
jmp
lea
popa
sbb
add
and
xchg
sub
or
push
pushw
push
cltd
imul
sete
mov
push
sbb
call
or
inc
dec
outsl
mov
jno
inc
push
mov
pop
jl
cmp
or
dec
lea
fidivrl
gs
mov
adc
fwait
mov
push
lods
cmp
ret
pop
inc
ret
pushf
jo
movb
add
dec
sbb
sbb
mov
dec
add
xor
cmp
outsb
loopne
adc
xchg
mov
es
bound
scas
pop
sbb
jmp
loope
sbb
loop
les
loope
add
and
sbb
cmp
push
ss
inc
pop
hlt
adc
in
shll
xchg
adcb
push
rol
sub
cmp
push
divl
les
xor
clc
adc
xorb
add
sub
add
cmp
orl
adc
pop
jne
adc
xchg
testb
xor
lcall
or
rorb
xchg
and
adcl
sub
push
or
rol
fcom
xor
andl
xor
dec
adc
add
sti
addb
es
ss
mov
add
je
sbb
inc
inc
and
adc
rol
sub
sar
loopne
push
cs
aam
jb
ret
cmp
jmp
bound
dec
mov
lds
ret
sub
jecxz
shlb
es
ss
loope
push
push
or
je
pop
loope
jnp
js
movsb
arpl
inc
or
ret
sahf
lods
sbb
outsb
ja
test
mov
jge
subb
pop
or
or
push
imul
xchg
sahf
shll
cmp
insl
cmp
insl
sub
int3
add
cs
or
ret
call
cwtl
ret
and
shr
jno
mov
out
aad
jmp
lahf
jl
mov
xchg
pop
push
xchg
notb
aaa
push
loop
push
push
imul
or
pusha
sbb
lcall
push
inc
inc
mov
or
or
dec
sbb
push
mov
push
jl
aam
mov
add
adc
es
pushf
xchg
arpl
inc
or
insl
xor
adc
pop
sub
jmp
dec
jnp
push
shll
mov
stc
jne
loopne
ret
fsubrs
incb
inc
mov
pop
cmp
and
sbb
jae
jb
jae
pop
inc
cmpl
inc
rcrb
jae
pop
mov
shlb
jne
ja
push
cmp
ret
adc
inc
dec
pop
icebp
mov
testb
push
mov
xchg
mov
adc
shrb
sub
scas
nop
add
shl
inc
add
and
xor
dec
jnp
pop
vunpckhps
sub
shll
xor
jo
or
add
pop
cmp
and
sbb
pop
clc
xchg
or
subl
mov
pop
adc
daa
or
mov
cmp
dec
jo
or
fsubs
xchg
mov
cmp
mov
arpl
or
dec
outsb
xchg
inc
add
jo
nop
and
jo
popf
mov
lahf
jae
arpl
or
sbb
cmp
mov
mov
fisubrl
mov
xor
cmp
push
xorb
jae
pop
repnz
pop
add
outsb
or
mov
or
frstor
push
test
mov
xorb
jne
mov
sbb
je
and
or
mov
arpl
push
and
or
pop
pop
sub
add
inc
and
sbb
mov
mov
mov
mov
dec
ljmp
addr16
push
and
add
inc
lock
in
add
add
and
pop
enter
jg
and
pusha
es
cld
sub
enter
mov
and
sub
in
insb
jae,pn
leave
sarb
sub
lods
adc
cmp
pop
and
mov
cmp
inc
push
sbb
and
cmp
add
or
xor
mov
mov
sub
cmc
cmp
dec
fmulp
stc
mov
or
fdivs
or
pusha
adc
pop
add
or
in
jge
mov
or
sbb
loope
jbe
sbb
add
jp
test
test
mov
pop
mov
nop
xor
sub
leave
insb
push
ds
insl
sbb
jne
add
stos
sub
xchg
jle
add
cs
test
jge
jmp
dec
push
mov
fstp
add
adcl
rorb
xor
divl
or
notb
mov
xor
mov
fmulp
and
mov
push
enter
push
xor
jp
sarl
shr
aam
and
cwtl
adc
add
jge
js
or
adc
inc
popf
xchg
xchg
movsb
mov
or
pop
hlt
mov
mov
ja
push
or
push
cmp
fs
addb
xor
xor
pop
lods
and
pusha
jno
cmpsl
push
push
adc
in
push
mov
pop
mov
inc
mov
push
movsl
fsubrl
adc
sub
push
dec
pop
lock
sbb
sbb
or
and
add
add
mov
jne
repnz
sub
jg
loope
sahf
mov
loopne
and
cmp
and
call
mov
popa
xchg
js
jno
ja
push
push
mov
sub
xor
nop
icebp
fcmovb
or
and
fcoml
repz
mov
sbb
cmp
lret
cmp
cmp
and
adc
push
adc
js
or
test
int
addr16
inc
or
jbe
mov
push
jmp
cmp
pop
movsb
sbb
mov
inc
add
push
or
cs
dec
xor
jb
jl
sahf
pop
adc
push
roll
sbb
lret
ror
push
pop
xchg
stos
and
or
rcrl
and
popf
xchg
lcall
add
or
roll
adc
clc
fsubs
imul
sahf
jae
sub
out
je
in
aaa
xchg
das
pop
sub
and
dec
arpl
clc
aad
mov
mov
arpl
or
clc
lock
dec
dec
sbb
fdivl
or
push
and
in
xlat
int
fildl
rorb
cltd
inc
pop
sub
xchg
mov
or
mov
sbb
jne
pop
inc
sbbl
rcrb
adc
add
stos
mov
js
in
addr16
movsl
call
mov
cmp
roll
mov
faddl
dec
mov
call
xchg
cmp
aam
and
shll
pop
cmp
jae
sbb
push
jmp
push
ret
dec
sar
adc
cmpsl
push
jmp
xchg
push
roll
jge
dec
push
sbb
cmp
or
ljmp
fsts
sub
fadds
xchg
movsb
push
cmpsl
adc
lods
pop
add
jnp
out
mov
mov
icebp
push
insb
sub
in
sub
xchg
sub
ret
cbtw
or
scas
inc
in
hlt
std
dec
and
or
pop
push
cmp
jl
mov
and
or
aas
pop
xchg
lret
push
js
stos
orb
push
dec
mov
mov
jae
jo
imul
or
and
add
sub
inc
jmp
or
outsb
inc
fnsave
pop
stos
ja
pop
pop
pop
pusha
push
mov
push
je
add
orb
in
addr16
inc
les
add
xor
imul
pop
or
or
out
andb
andl
add
or
add
jb
push
xchg
lea
enter
mov
out
xchg
pop
push
push
nop
mov
test
pushf
lea
push
in
icebp
faddp
rorl
pop
or
cmpsl
mov
mov
mov
push
gs
incb
jecxz
hlt
push
xor
push
push
mov
push
sbb
push
and
mov
rclb
adc
cmp
iret
xchg
mov
fcmovnbe
clc
inc
sub
sbb
aaa
mov
xor
fwait
add
mov
dec
xchg
jmp
loope
repz
xor
mov
shlb
aaa
sub
push
mov
lcall
dec
orl
pusha
incl
repnz
mov
or
lock
cmp
loopne
movsl
or
adcb
mov
lea
jp
pop
int
and
dec
and
rorl
xchg
shll
xchg
pop
dec
push
xchg
xchg
push
cmp
nop
faddl
popa
cmpsl
lea
xchg
out
add
xor
push
insb
mov
sub
lods
push
xchg
pop
adc
shlb
nop
push
ret
or
test
lods
mov
dec
xchg
ror
imul
adc
dec
fstp
inc
pop
test
pop
fwait
cwtl
and
and
jnp
xor
lahf
mov
mov
pop
xchg
out
or
insb
or
frstor
test
push
sti
loope
sbb
jo
sub
add
mov
sbb
inc
ficoms
shlb
emms
arpl
xor
nop
aam
add
xor
cwtl
mov
addr16
inc
or
lcall
icebp
push
loop
in
sbb
adc
push
pop
call
cmp
jbe
pop
jne
xchg
repnz
pop
push
cmpb
scas
pop
outsl
adc
cmp
push
faddl
fwait
add
pop
and
mov
repnz
cld
das
and
xchg
adc
icebp
es
dec
adcb
in
xchg
jmp
push
sub
push
jae
roll
sub
sbb
lock
xor
mov
pop
adcl
rcl
or
push
lds
xchg
cwtl
fcom
xor
sbb
and
stos
push
add
inc
rclb
lcall
inc
mov
mov
test
ret
or
pushf
xchg
jnp
push
xorb
mov
sbb
loopne
and
mov
mov
adc
les
scas
dec
sub
pop
jp
inc
mov
mov
insb
ja
adc
fdivs
push
adc
adc
mov
rorl
push
mov
pop
mov
lldt
xchg
push
rcll
lcall
cs
xor
or
fadd
cmp
xchg
sub
shl
or
rclb
push
push
inc
ret
mov
mov
ja
fwait
mov
inc
ss
fidivrs
ret
jecxz
in
pop
dec
mov
add
and
push
sub
rolb
mov
rorl
jecxz
xchg
pop
enter
cmp
call
push
pusha
push
mov
add
mov
fs
jg
pop
ss
adc
ja
inc
pop
ja
cmpsl
mov
cmp
enter
xchg
sub
das
sub
in
xchg
pop
insb
cmp
adc
cmp
addl
push
mov
pop
xor
xchg
mov
mov
dec
iret
push
add
or
fsubrl
mov
sbbb
jbe
dec
mov
mov
testb
sub
lea
dec
insb
jl
cmp
or
movsl
les
or
sbb
or
call
pop
jecxz
mov
lahf
les
lock
jecxz
ret
xchg
cmp
xchg
lds
jae
test
pop
lret
jl
pop
dec
movsl
mov
inc
push
or
in
fldl
iret
enter
hlt
rorb
mov
jb
ret
xor
mov
or
imul
sbb
shr
or
rolb
pop
faddl
jo
cmp
inc
call
lcall
mov
sub
das
xor
lock
pop
push
rclb
adc
and
jne
push
pop
and
sub
loopne
test
jnp
xlat
adc
test
mov
nop
push
and
xchg
xchg
cwtl
pushf
push
movsl
push
xor
jns
test
lods
lods
ja
sbb
call
mov
shll
or
stos
mov
pushf
lcall
xchg
cmp
mov
into
out
loope
imul
sbb
mov
movsb
rorb
andl
cmovnp
or
sub
mov
or
dec
or
fbstp
popf
mov
aad
fwait
or
mov
and
add
jo
xor
cmp
add
orb
cld
jge
lea
pop
or
adc
shll
lcall
push
sub
dec
mov
mov
mov
cmp
xchg
pusha
out
lods
out
test
push
inc
hlt
outsl
push
or
or
dec
mov
xchg
pop
stos
ficoml
movsb
lods
jno
inc
jecxz
inc
xlat
add
xorb
movsb
gs
mov
mov
xlat
enter
or
clc
sbb
jne
ss
push
les
repnz
mov
fsubl
rol
pop
mov
das
adc
test
lods
and
icebp
add
add
mov
lods
filds
fistpll
or
ja
outsl
pushf
out
sarl
or
inc
xchg
test
or
push
push
ret
or
divb
pop
cmp
pop
add
cmpsb
mov
adc
je
add
nop
push
data16
mov
xchg
adc
sbb
js
ds
je
lock
sbb
rcll
add
push
int
movsl
push
cmp
sub
or
push
dec
roll
sub
cmp
cwtl
sub
lock
jle
stc
push
sbb
pop
sahf
mov
sbb
cmpsl
or
mov
mov
xlat
dec
adc
push
stos
es
pushf
loop
aam
inc
aad
push
cmp
xlat
scas
sub
mov
pop
lea
sbb
mov
mov
cmpsl
cmc
add
movzbl
dec
shlb
cmp
adc
and
cmpb
mov
mov
adc
rclb
sbb
push
jl
pop
sbb
push
xlat
mov
scas
pop
pushf
and
pop
or
mov
sub
nop
lods
jge
sbb
lock
add
movsl
and
or
rclb
add
adcb
rcrl
xor
test
dec
sub
ret
and
push
mov
mov
inc
mov
push
push
dec
mov
push
cmp
or
repz
or
sbb
add
and
les
insl
add
addb
sarl
aad
std
dec
imul
cmp
mov
je
add
lods
aad
lock
adc
xor
jge
lock
pop
cmp
sbbb
push
lods
cmp
jo
add
jecxz
imul
cld
xchg
add
std
gs
sub
or
roll
or
enter
push
push
les
push
inc
jmp
outsb
lock
inc
bnd
es
loopne
mov
sbb
cmpsb
cmp
loopne
jecxz
test
addb
mov
cmp
es
cmp
fs
dec
inc
hlt
cmpsb
enter
clc
js
mov
sub
arpl
mov
sbbl
into
jns
loop
and
push
stc
sub
mov
push
ljmp
ds
add
jle
mov
cmp
jg
lods
insl
add
cli
jbe
or
fisubrs
outsb
add
push
jge
push
mov
aaa
jle
xchg
push
or
in
push
pop
cmp
xor
ja
andb
call
int3
xor
pusha
sbb
icebp
ss
push
lock
bnd
lcall
push
cmpsb
dec
cmp
mov
shlb
adc
sbb
xor
sub
jg
fs
inc
jmp
inc
jo
add
je
jmp
addr16
and
jne
fadds
and
iret
mov
and
and
or
push
xchg
push
add
sahf
mov
sub
outsb
sbb
repz
jmp
pop
cmpsb
mov
sub
mov
mov
push
inc
adc
insl
push
pop
jge
nop
or
test
jo
arpl
push
add
outsl
pop
in
popa
push
dec
movsb
pushf
notl
cmp
sub
es
push
add
roll
adc
pusha
jb
fcoml
add
mov
int3
adcl
inc
fadds
push
push
aas
fldz
or
lock
xchg
test
add
lods
sub
js
pop
shrb
popf
sub
scas
sbb
decl
pop
push
add
sub
enter
in
ret
xchg
fcoml
insl
jns
fbstp
in
pop
push
lock
mov
clc
inc
roll
jl
mov
pop
sbb
mov
push
aam
adcl
rolb
or
sub
addb
imul
sub
pop
xchg
cmp
or
dec
adc
bound
adc
or
movsl
and
pop
add
push
dec
sahf
shl
add
into
adc
pop
add
jge
je
das
jl
shrl
dec
fidivs
add
pop
xchg
xor
dec
test
insl
icebp
xchg
das
iret
cmp
jno
cwtl
sub
pop
dec
sbb
jle
movl
xor
lcall
and
pop
and
adc
ljmp
test
adc
insl
dec
and
flds
mov
xor
jo
cmp
mov
loope
jns
ljmp
inc
adc
prefetch
lods
inc
enter
inc
add
sub
and
sbb
movsb
addl
cmp
fwait
sbb
mov
loope
rorb
mov
ror
add
loope
add
push
cmpsl
fcmovnbe
or
xchg
push
aas
mov
test
movsb
rcll
mov
push
adc
xchg
or
cmp
imull
test
pop
hlt
push
into
sub
mov
inc
test
sahf
and
jno
pushf
push
push
fs
xchg
or
shrb
mov
inc
cmp
incl
jae
xchg
and
je
cltd
test
gs
pop
cmp
dec
sti
xchg
jo
push
add
push
jge
int3
arpl
popf
sub
mov
push
das
mov
cmp
push
adc
inc
sbb
inc
hlt
jno
jno
iret
cmp
and
xchg
sub
imul
pop
cwtl
jno
and
imul
icebp
sub
mov
fcom
mov
jle
cmp
imul
cmp
pop
lods
andl
mov
testl
rolb
mov
or
sti
lcall
rolb
shr
nop
loopne
shr
xchg
test
push
or
jb
mov
imul
sub
push
sbb
lock
ret
shr
cmp
jbe
in
or
add
stos
rorb
adc
add
cs
and
dec
loopne
inc
inc
rclb
jl
sbb
ret
add
outsl
add
movsb
pop
or
and
sbb
xchg
jo
cmp
push
in
les
addr16
mov
mov
add
test
cmp
mov
add
mov
and
loopne
and
imul
fidivl
rclb
add
mov
mov
mov
add
xorl
jl
inc
push
and
mov
push
out
sbb
fadds
or
and
enter
movsl
sbb
cmc
dec
inc
xchg
add
je
and
inc
mov
mov
sub
loopne
cs
xor
push
jb
push
jne
and
stos
pop
pop
les
pushf
add
mov
jg
inc
add
outsb
mov
out
dec
or
jg
and
stos
nop
loope
inc
cwtl
lea
aaa
mov
mov
rclb
lock
xchg
in
fidivl
jno
mov
mov
xchg
fcomi
xor
andl
xor
push
dec
test
inc
pop
dec
push
pop
hlt
mov
adc
and
push
sarl
sbb
push
add
sbb
arpl
add
pushf
inc
les
and
in
or
jecxz
fucomip
push
cwtl
ret
add
dec
loope
lahf
or
pop
add
xor
or
test
fwait
or
sub
cmp
mov
test
fisttps
in
push
add
repnz
add
ret
inc
or
jmp
adc
xchg
je
cmpb
xor
and
mov
push
add
and
movsb
xchg
rorl
push
je
scas
jns
popa
pop
popa
in
xor
and
inc
sub
aam
orb
int3
xor
and
enter
push
enter
femms
or
fimuls
popa
or
add
add
adc
test
aam
adc
lahf
pop
outsl
jbe
add
shl
push
xchg
jecxz
push
fistl
mov
test
cmp
mov
adc
or
lods
pop
clc
fxch
xor
repz
pop
mov
imul
mov
push
sarb
adc
xchg
add
inc
and
push
les
and
lret
sbb
jle
push
decl
les
ljmp
cmp
sub
rclb
fnstsw
fistps
cltd
xchg
push
ffreep
lret
popa
and
pop
bound
fmuls
test
insl
pop
ljmp
mov
rorb
xor
jnp
cmp
pop
adc
outsb
stos
add
cltd
cmp
or
das
loopne
rorb
imul
in
adc
sbbb
js
sub
pop
dec
push
push
xor
test
dec
jae
sub
push
add
add
push
pop
lcall
jg
cmp
insb
out
and
xor
fisttpll
out
dec
lds
mov
lods
xor
push
dec
shl
js
mov
mov
adc
iret
les
or
push
inc
or
inc
mov
push
mov
jae
popa
dec
test
test
test
mov
in
out
xchg
test
push
mov
pop
repz
push
pushf
test
mov
enter
test
mov
rol
ds
cmp
nop
mov
lret
lret
lret
lods
adc
mov
lret
lret
lret
lret
mov
mov
mov
sarb
into
sub
aaa
cmp
or
loopne
push
lea
lods
and
mov
loopne
push
sbb
es
add
lea
xchg
mov
add
pop
cmp
stos
mov
jge
mov
fs
push
adc
movsb
inc
pop
xchg
or
std
mov
mov
inc
je
js
push
xchg
dec
test
add
add
dec
rolb
or
popf
inc
cs
js
mov
adc
mov
dec
add
or
pop
add
add
fs
data16
mov
sti
sub
cmp
inc
fwait
xor
loopne
js
imul
enter
push
push
fwait
inc
cmp
ret
dec
decl
imul
cmp
je
sbb
inc
cli
gs
shlb
and
mov
push
mov
hlt
or
into
push
cmc
lods
mov
jmp
push
dec
mov
lcall
sbb
bound
movsb
inc
faddl
ss
movsb
pop
push
sbbb
addb
add
mov
pop
push
dec
jg
mov
inc
cmpsl
adc
aaa
cmp
inc
pop
inc
xorl
inc
mov
nop
mov
sub
inc
sub
sbb
mov
mov
addl
out
test
adc
push
push
cli
adc
jle
mov
xorl
out
jbe
and
mov
inc
or
jecxz
add
and
hlt
pop
pop
jo
subl
insb
or
js
dec
push
push
insl
ja
dec
in
adc
test
imul
mov
add
pop
push
mov
jo
cs
dec
pop
mov
outsl
push
sub
sbb
lret
pop
sahf
inc
imul
test
jns
ds
mov
rcrb
inc
adc
movsl
lret
in
add
bound
mov
mov
inc
repnz
and
mov
xchg
sub
sbb
push
push
add
or
adc
leave
jne
insb
or
sub
aas
inc
pusha
ljmp
mov
inc
mov
rcr
test
push
incl
sbbb
out
gs
inc
xor
pusha
pusha
testl
cmp
movb
pop
xchg
jge
xchg
push
push
pop
sub
stc
inc
add
jae
dec
dec
popa
lods
or
je
push
mov
cmp
loopne,pn
or
add
movsb
sahf
mov
inc
add
push
sbb
or
test
mov
and
rcr
lret
popa
test
add
mov
fstl
or
mov
jp
fldl
pop
fsubs
xorb
andl
sbb
adc
inc
mov
ja
sub
pusha
adc
xchg
in
or
add
pop
xchg
movsw
dec
addb
or
lahf
mov
mov
hlt
and
cmp
hlt
dec
subl
sbb
dec
cmp
sarb
shl
out
or
outsl
test
iret
sub
iret
lea
push
and
cmp
or
lea
sbb
les
adc
pop
into
pushf
sbb
ljmp
nop
dec
inc
lret
pcmpgtb
js
fcmovnb
push
push
adc
cli
mov
aaa
push
sbb
add
dec
add
push
lock
push
sahf
dec
sbb
pop
sti
adc
jp
jne
pop
in
mov
pusha
mov
insb
in
mov
add
add
jmp
mov
cmp
fists
xor
movsl
or
fcomps
sub
push
xchg
fldt
ud0
popl
add
jne
push
fimull
imul
out
cwtl
xlat
xchg
mov
mov
adc
pop
add
cmp
adc
or
push
xchg
mov
mov
imul
inc
add
jb
add
push
sti
addr16
bound
jns
mov
mov
adc
daa
call
pop
add
add
or
mov
mov
sub
test
mov
insl
in
es
adc
scas
inc
mov
cmc
stos
or
mov
outsb
ja
sbb
inc
adc
adc
adc
dec
or
ret
dec
or
jmp
jp
dec
dec
decl
inc
adc
push
jecxz
in
test
repz
addr16
jecxz
xchg
xchg
sbb
or
cld
mov
rclb
mov
or
fwait
mov
cmp
jno
push
dec
gs
cmc
and
adc
mov
test
cmp
pop
fmul
andl
push
daa
loope
aam
sub
pop
movsb
out
pop
pop
cwtl
xor
fwait
rolb
pop
fcmovb
add
loop
mov
inc
sub
cmpsb
pop
ret
jne
cmp
test
ret
insb
es
inc
imul
loopne
or
arpl
popf
sub
inc
aam
mov
adc
xchg
and
inc
bound
inc
pop
stos
fsubl
dec
cmpsb
jle
cmp
jbe
outsb
add
or
call
loopne
sub
mov
add
gs
fdivrl
and
adc
dec
sub
push
add
dec
outsl
shl
sbb
add
mov
scas
dec
sbb
jne
add
xchg
icebp
imul
roll
loope
in
push
push
hlt
ret
xor
cwtl
adc
in
push
mov
das
xchg
scas
mov
fdivs
hlt
leave
hlt
sbb
idivl
popa
adc
ss
lock
xchg
pop
imul
and
or
ffreep
mov
pop
push
mov
fstpl
outsb
int3
mov
ja
mov
sub
ljmp
bound
hlt
cmp
xchg
dec
dec
pop
popf
ss
push
js
jnp
push
adc
xor
or
fidivrs
pusha
jecxz
or
jecxz
mov
popf
adc
sub
add
mov
xchg
dec
dec
scas
sbb
push
xorl
imul
jb
in
in
das
cmp
das
mov
jnp
sub
int
mov
mov
or
mov
popa
mov
outsl
mov
jns
dec
imul
jecxz
pop
add
xlat
imul
loopne
lods
imul
dec
ss
lret
lret
xor
xchg
or
mov
adc
jmp
push
or
faddl
add
inc
adc
call
and
aas
jle
insl
pop
inc
or
jecxz
hlt
inc
pop
in
xor
mov
sbb
adc
and
rorb
sbb
jl
add
scas
mov
sbb
mov
and
mulb
pmaddwd
jp
xlat
jne,pn
inc
jo
push
sub
adc
js
mov
mov
addr16
pop
fcmovb
mov
push
insl
loopne
ret
sbb
xchg
mov
or
call
mov
or
ja
add
and
mov
and
and
dec
or
mov
mov
inc
fstpl
into
ret
fbstp
xor
push
hlt
subb
pushf
jl
addb
sub
lock
sar
enter
and
mov
cmp
mov
sahf
sbb
sub
push
inc
inc
push
mov
pop
mov
sub
jl
sub
or
adc
out
push
xchg
push
mov
je
sub
mov
sbb
popf
or
xor
cmp
pop
jne
mov
cmp
sbb
sbb
dec
repnz
test
add
push
push
and
ds
jb
mov
mov
sub
insl
gs
imul
into
pop
mov
cmp
push
in
sbb
shlb
cmp
imul
shll
xor
js
into
test
sbb
jo
jno
and
inc
add
dec
orl
sub
push
cmpxchg
mov
jnp,pt
push
xorb
mov
leave
sub
xchg
and
add
sub
js
fcomip
repz
pop
mov
xorl
mov
call
outsl
mov
stos
lahf
loop
add
jns
roll
jl
aam
in
and
push
gs
pop
fsubs
aam
mov
pushf
mov
xchg
inc
push
lcall
or
lret
jo
lods
push
add
ret
push
icebp
clc
or
in
adc
ret
and
xchg
sbb
mov
xchg
ljmp
push
faddl
insb
push
or
decl
pop
icebp
jne
lcall
xorl
fimuls
pusha
mov
js
enter
add
pop
or
repnz
int
inc
or
add
std
or
mov
in
sub
sub
cmp
shlb
sub
add
ret
and
cmp
ret
cwtl
leave
loopne
clc
jl
jno
push
add
sbb
addr16
cmpsb
rcrb
loopne
nop
pop
lcall
xchg
cmpsb
dec
aam
loopne
inc
es
inc
dec
fwait
sbb
inc
sahf
les
add
push
jb
mov
add
or
testl
sti
sbb
cmp
adc
gs
inc
std
lcall
xor
pop
push
aam
aaa
shlb
loope
pop
jmp
movsb
mov
sbb
sub
and
shrl
in
data16
stc
pop
push
daa
cmpsl
dec
sbb
push
sub
stc
cmc
bound
sub
pop
fnclex
jecxz
mov
dec
ficoms
xorl
rorb
sub
cmp
push
mov
data16
or
adc
push
cmp
sarl
pusha
or
popf
and
mov
ret
mov
sbb
cmp
jge
adcb
or
jge
adc
xchg
rorb
and
and
pop
add
jo
sub
cmp
inc
in
xchg
add
test
arpl
xchg
add
ret
roll
out
lods
push
fmull
sbb
ss
test
mov
xchg
daa
fcomip
sbb
ret
cmp
mov
mov
enter
mov
xor
pusha
rol
test
xor
cmpsb
lret
sbb
cmp
ret
imul
fcmovbe
fsubl
fldenv
into
sub
xchg
sbb
cmp
add
ror
lea
std
inc
inc
adc
inc
and
mov
xor
xchg
xchg
ss
jge
push
das
imul
or
ljmp
rcrl
pop
loopne
or
inc
sub
mov
pushf
shll
add
or
or
pop
in
mov
mov
cs
lahf
sahf
add
push
and
push
inc
dec
inc
cwtl
dec
and
in
outsl
inc
test
shrb
pop
sti
push
pop
arpl
add
push
mov
pop
push
dec
jb
lods
fstps
cmpsb
pop
es
sbb
push
jp
xchg
inc
mov
mov
aaa
pusha
test
push
sbb
daa
or
or
add
cmpsb
sbb
ret
outsl
rorb
pop
inc
jmp
adc
inc
aam
bound
sbb
jl
loopne
mov
ficoms
mov
mov
adc
adc
inc
sbb
inc
ja
mov
jge
loop
data16
mov
mov
and
pop
repz
dec
xor
scas
mov
lea
ds
cmp
jl
mov
lret
inc
pop
add
daa
or
cmp
add
fiadds
cmp
enter
inc
inc
dec
push
jne
lcall
mov
add
and
andl
pop
clc
insb
xchg
repz
inc
andl
dec
adcl
push
mov
lea
jle
pusha
outsb
adc
xorl
leave
inc
push
and
pop
or
xor
inc
mov
inc
xor
into
xchg
mov
dec
add
mov
sub
add
adc
aas
orb
add
sub
adc
pop
and
add
mov
movsl
cmp
pop
xchg
adc
push
xchg
push
ret
jecxz
loop
or
xlat
xor
in
cli
std
pop
cmpl
pop
dec
sub
cmp
jl
xor
push
sbb
jmp
sahf
adc
enter
or
enter
sub
adc
mov
or
cltd
and
cmp
and
mov
and
xor
sti
mov
inc
add
mov
push
movsl
movb
mov
pusha
pop
xchg
sub
rcrl
add
and
ret
push
inc
ss
jns
push
insl
add
or
pop
and
mov
orl
and
cmp
ja
inc
pop
adc
jecxz
xchg
or
fs
pop
adcb
mov
sbb
notb
addr16
xchg
push
push
inc
mov
rolb
incl
imul
xchg
sub
jbe
push
lea
nop
cld
sub
imul
xchg
ret
ss
dec
sub
sub
push
loopne
jb,pt
xor
pop
rolb
arpl
dec
daa
int3
cltd
lods
xchg
mov
lea
sub
adc
ds
fnstenv
lcall
stc
inc
or
and
or
pop
jl
xor
lret
into
mov
inc
dec
fcoms
cmp
pop
add
out
mov
push
cmpb
paddsw
xchg
sbb
insb
push
pop
enterw
adc
cmpsb
cld
xchg
xchg
add
cld
mov
pop
je
push
mov
cmp
shll
addl
or
xor
int
test
fstp
xchg
in
cltd
inc
and
pop
jne
in
and
pop
sbb
sarb
jmp
push
sbb
mov
sub
dec
int
lcall
sub
push
push
adc
shll
mov
mov
add
dec
push
jge
pop
adc
sub
xor
outsb
mov
inc
sub
or
add
sub
jno
sahf
ficomps
sbb
lods
pop
stos
xor
dec
fsubrs
push
mov
xchg
cmp
inc
dec
jle
inc
clc
add
and
pop
push
pop
inc
mov
nop
xor
mov
js
add
ss
js
call
inc
adcb
mov
dec
cld
inc
lock
push
lods
mov
ret
je
or
push
clc
mov
mov
xlat
mov
aaa
push
mov
stos
jne
sbb
jp
pop
inc
cmpsb
mov
data16
and
and
mov
addr16
repnz
pop
mov
stos
aad
mov
jb
add
jle,pn
adc
mov
or
movsl
mov
fisttpl
cltd
movsb
adc
aad
cmpl
pop
jbe
movsb
jecxz
imul
sbb
loope
push
xlat
dec
outsb
fcoms
stos
adc
das
cmpl
ss
ja
mov
push
std
cwtl
mov
insl
popa
mov
xchg
sbb
jge
cmp
pop
aam
gs
xor
mov
mov
data16
sub
outsb
sub
mov
or
inc
xor
push
cmp
fidivl
mov
sbb
push
mov
jne
sbb
fiadds
outsb
mov
jmp
mov
pop
mov
adc
stos
movsl
ror
sbb
scas
popa
mov
mov
aas
or
pop
push
and
add
ret
sub
call
mov
push
jns
test
or
test
push
fwait
loopne
cmpsb
jb
push
pop
fdiv
je
js
xchg
jns
add
movl
add
sbb
mov
jmp
inc
mov
adc
leave
imul
test
push
in
xchg
movsl
xor
xor
test
inc
add
bound
add
inc
data16
pop
rolb
inc
je
cmp
rcll
and
inc
push
lret
and
dec
xor
adc
and
nop
out
xchg
pop
adc
mov
jge
das
push
add
xorb
scas
push
lods
test
imul
stc
jl
outsl
cld
bound
fistl
pop
and
inc
lock
mov
mov
sbb
xlat
mov
nop
pushl
sub
dec
cmp
shrb
fiaddl
mov
mov
nop
mov
mov
add
mov
lret
push
mov
jne
push
push
push
dec
jb
xor
push
inc
and
adc
jp
scas
push
push
mov
pop
mov
mov
iret
lret
movsl
inc
dec
and
addb
and
rcl
orb
adc
or
pop
jp
sub
xchg
mov
pop
icebp
lods
or
test
xlat
test
xor
addl
aad
add
dec
add
ds
push
inc
dec
xor
add
pop
cmpl
xor
add
mov
mov
insb
lea
int3
mov
aad
mov
das
inc
lahf
jecxz
stos
test
or
mov
adc
int3
sub
sub
add
push
gs
add
sub
jp
sbb
xor
mov
add
test
inc
into
and
mov
push
fistps
mov
dec
jmp
or
fistpll
push
and
pop
inc
pop
and
or
xchg
jmp
lods
pop
movnti
ja
rcl
dec
movsl
daa
and
add
daa
add
ror
mov
mov
gs
add
and
inc
sub
adc
sub
add
rcr
cmc
mov
push
xchg
fldl2t
test
daa
and
pop
jge
xchg
inc
jle
incl
or
clc
inc
ret
fsubs
push
testl
jge
sti
movl
nop
or
add
loopne
and
adc
loopne
push
or
or
shrb
xor
lock
jnp
adcl
ja
pop
add
enter
jl
movl
mov
popa
ret
cmpl
lahf
push
pop
xchg
xor
inc
dec
sub
pusha
shll
ljmp
or
adc
mov
lret
push
lods
jmp
inc
push
mov
icebp
lahf
mov
jno
jmp
mov
adc
dec
hlt
jl
push
push
push
insb
jecxz
mov
add
inc
ret
and
pop
mov
sub
xchg
hlt
add
cli
lea
cltd
adcb
outsl
adcb
xor
loop
add
ffree
outsb
cmp
and
loop
xor
fucomip
loope
inc
bound
imul
in
or
jl
pushf
icebp
mov
inc
add
pop
dec
push
or
dec
xchg
aam
arpl
jae
sub
cmp
push
jns
adc
xchg
jo
mov
xchg
hlt
in
jnp
dec
add
in
push
push
pop
int3
dec
push
cltd
movsb
aam
loopne
xorl
lea
add
je
sbb
mov
pop
add
clc
add
adc
bound
mov
xor
lods
in
push
aam
fdivl
daa
dec
push
add
push
popa
dec
daa
mov
js
xor
push
imul
sbb
adc
or
fs
cmp
add
mov
loop
sub
lock
inc
lods
adc
and
test
sbb
rcrl
mov
jmp
nop
add
outsl
fbld
stc
add
push
push
add
push
scas
xchg
movsb
inc
incl
popa
and
jp
sahf
hlt
adc
xchg
cmp
out
xor
add
mov
cmp
test
or
lea
xor
xchg
inc
add
test
and
cmpsb
fstpt
out
push
mov
movsl
data16
lcall
jo
sbb
pushf
rolb
cmp
lods
or
mov
insb
mov
sbb
loop
hlt
cwtl
sub
int
xchg
or
jp
pushf
add
xchg
or
mov
jmp
jno
mov
inc
or
push
and
adc
sub
jne
aas
add
add
clc
mov
fsubl
jbe
push
add
divl
pop
imul
icebp
pop
mov
mov
jge
inc
out
mov
aad
mov
inc
mov
inc
dec
jecxz
mov
add
adc
pop
add
mov
push
jl
outsb
mov
inc
add
pop
leave
and
add
add
push
push
arpl
leave
push
and
jns
push
adc
push
lahf
arpl
and
mov
in
nop
dec
mov
mov
pop
mov
es
push
rcrb
push
mov
lret
aas
pusha
push
push
xor
or
rcll
bound
cs
push
push
call
nop
sub
jb
out
sbb
mov
dec
aam
dec
or
add
outsb
js
push
jo
in
push
push
dec
push
cli
ss
inc
cs
adc
dec
sahf
pop
cmp
aad
cs
std
daa
sbb
dec
mov
fwait
pop
sub
push
sub
push
in
push
in
fmull
js
dec
cs
pop
fdivs
daa
push
add
add
dec
std
adc
call
adc
mov
or
mov
or
push
or
sbb
loopne
shll
mov
call
push
inc
inc
scas
xchg
adc
jb
push
jb
adcl
loopne
icebp
push
jmp
push
lock
inc
lock
sbb
add
add
shlb
dec
xchg
and
and
push
mov
and
shl
test
or
out
nop
add
adc
mov
orb
and
pop
jg
or
adc
add
push
stos
iret
add
test
imul
lret
aaa
sarl
call
subb
imul
cmp
dec
lock
jo
sub
add
mov
loope
push
jbe
push
jmp
mov
loope
in
push
lea
and
in
addl
cmp
or
and
add
lret
in
test
xor
das
push
sbb
and
adc
lock
lcall
cld
fdivrl
push
nop
test
inc
jecxz
push
loopne
ret
push
jno
fcompl
je
inc
movsb
xacquire
ret
popa
jmp
and
mov
insb
sub
fdivrs
std
push
pop
mov
xor
sti
bound
push
jle
imul
add
rclb
mov
jns
mov
ljmp
out
xchg
out
lea
inc
inc
adc
iretw
mov
in
push
lock
pushf
les
inc
imul
cs
shl
sarl
adc
aaa
or
movsb
cs
pop
lcall
or
cmp
jecxz
movsb
icebp
test
sbb
mov
out
int3
test
add
out
add
sbb
ja
fsubs
sarl
pop
mov
sbb
pop
sub
ja
xchg
mov
or
test
push
imul
test
mov
pop
push
sarl
adc
and
ficompl
or
push
lods
lods
pop
mov
pop
orb
fst
stc
or
imull
push
jmp
lea
out
aaa
push
xor
add
les
insb
test
movsl
jnp
and
pop
rol
movsb
mov
xchg
add
add
push
jb
dec
loopne
push
push
es
push
or
rep
ds
push
sbb
push
into
adc
aam
inc
pop
cmc
add
or
test
mov
xchg
sbb
lahf
imul
push
pop
mov
mov
in
pusha
push
movsb
test
daa
es
mov
sarl
jb
mov
push
mov
push
enter
mov
push
dec
push
jbe
addr16
push
and
shl
push
mov
ss
cs
movl
jbe
in
movzwl
cwtl
mov
pop
sbb
mov
sbb
add
sti
dec
lret
jl
cmp
nop
jecxz
pop
jno
sarb
mov
push
dec
in
mov
sarl
jmp
enter
frstor
and
sbb
subb
inc
mov
in
repnz
fcoml
daa
cmp
jne
js
js
add
test
mov
loope
xchg
jp
js
rolb
outsb
lds
push
popf
hlt
or
loope
inc
loope
out
push
add
inc
inc
xchg
rcl
or
int3
inc
cmp
adc
sti
xor
mov
aas
lods
push
out
and
add
loopne
je
sbb
nop
iret
mov
and
repnz
adc
clc
sbb
sbb
adc
cld
movsb
decl
cmp
pop
cmp
inc
fcoml
sti
outsb
std
shr
mov
mov
inc
sub
or
mov
adc
adc
jmp
adc
push
aad
push
mov
sbb
jne
pcmpgtw
fidivrl
in
sub
out
mov
adc
jbe
push
paddb
ja
push
mov
cs
dec
call
sahf
xor
outsb
testb
lcall
pop
ljmp
add
fs
mov
sbb
and
lahf
in
cld
adc
inc
add
inc
and
pop
cld
sub
or
in
and
add
mov
mov
push
or
cmovnp
mov
pop
or
lahf
mov
das
xchg
loope
jne
xor
xchg
mov
adc
popa
push
mov
cli
mov
pop
cli
adc
cmp
xchg
test
add
imul
mov
inc
outsl
adc
fs
ja
dec
roll
push
ss
aas
rorb
fcompl
mov
xchg
loop
push
add
add
pushf
pushf
pushf
add
outsb
lahf
pushf
or
jmp
or
jmp
or
jno
outsb
outsb
outsb
or
por
jmp
outsb
outsb
outsb
outsb
adc
pop
adc
push
adc
dec
adc
dec
outsb
outsb
outsb
outsb
adc
aas
pop
jmp
sbb
xor
sbb
xor
jmp
sbb
es
and
outsb
outsb
sbb
pop
pop
jmp
and
or
and
jo
inc
pop
inc
push
jg
and
pop
hlt
inc
nop
or
sbb
sbb
ss
jp
jnp
pop
lret
jl
out
repnz
and
sahf
out
push
sub
cmp
dec
out
sahf
out
pop
fs
jno
out
sahf
jbe
addb
jns
cltd
repnz
mov
rep
mov
mov
iret
lret
rcl
fcmovu
sub
pop
fdivr
pushl
add
and
or
or
push
movups
adc
adc
push
pop
sbb
sbb
sbb
and
aas
push
mov
inc
xchg
add
push
add
sub
ljmp
sub
test
nop
inc
in
inc
cmp
pushf
adc
fisubrl
loope
pushf
les
enter
outsb
andl
add
outsl
rorl
and
dec
mov
rorb
push
sbb
mov
fwait
xorb
sub
jb
inc
lea
out
cmp
out
call
adc
nop
push
lea
popa
dec
mov
loopne
repz
enter
aam
xchg
cmp
fdivrl
fdiv
jbe
cmp
jns
jb
xchg
or
flds
call
push
roll
mov
sbb
mov
xor
mov
push
sbbb
icebp
pop
add
pop
mov
push
test
cmp
sub
mov
or
adc
sbb
ljmp
or
nop
inc
jge
mov
inc
mov
fidivrl
sbb
pop
xor
movnti
js
or
clc
cmp
wbinvd
mov
xorb
sbb
sub
rcll
sub
pop
sbb
xchg
xchg
sbb
call
and
ss
and
mov
dec
shll
popa
pop
fcomp
adc
xlat
imul
mov
loopne
ss
adc
sub
in
adc
sub
push
or
xlat
lea
cmp
movb
add
js
ret
movl
xchg
inc
int3
pop
adc
adc
cmp
fsubrl
test
loopne
sub
cmc
lods
xchg
cvtpi2ps
or
or
es
scas
sbb
and
fsubl
mov
mov
daa
lea
imul
cmp
ja
adc
mov
ret
xchg
or
lea
sbb
lock
sbb
inc
or
lret
adc
or
sub
mov
mov
or
incb
cmp
pop
add
and
cmpsl
add
scas
jo
rorb
add
push
fadds
pop
mov
push
and
test
pop
inc
and
pop
in
mov
or
nop
adc
outsb
jo
stos
xchg
mov
mov
add
je
dec
out
decb
add
push
and
pop
and
adc
int
lcall
fcoms
add
add
mov
xor
rcr
and
add
loopne
add
sbb
test
mov
mov
mov
out
push
test
mov
xor
fcoms
or
iret
cmp
jbe
dec
jecxz
adc
and
pop
cltd
das
jo
sbb
add
mov
pop
loopne
int
aam
sbb
xor
movl
pop
xor
push
sub
add
adcw
cmovo
enter
ljmp
jl
push
loope
add
sbb
lds
cmp
aad
inc
cmp
jl
xchg
test
test
std
adc
insl
jle
lea
cmp
add
cli
es
lea
cmp
xor
or
jne
or
js
mov
adc
insb
mov
or
sbb
pop
hlt
in
fsubrs
aad
or
xor
cmpb
std
push
dec
mov
dec
cmp
jl
dec
adc
cmp
push
js
je
jae
ds
andb
cs
cmpsb
jb
dec
daa
pushf
cwtl
inc
loopne
push
cmp
jae
movzbl
push
push
sbb
push
add
outsl
adc
xor
lcall
and
aam
sbb
pushf
xchg
pop
push
inc
in
add
sbb
ss
xlat
and
ret
mov
dec
sbbb
mov
sbb
sub
cmp
lods
inc
pop
test
jp
push
lahf
cltd
ja
jmp
rorb
sub
mov
fwait
and
rolb
aaa
adc
inc
dec
lea
inc
or
add
sbb
adc
push
mov
es
pop
push
fiadds
push
in
js
jne
mov
mov
jae
jmp
xchg
push
push
sbb
loope
adc
cld
pop
clc
add
test
je
mov
dec
in
sub
add
mov
pop
dec
dec
mov
or
cmp
pop
shlb
sarl
add
loop
lods
divb
mov
inc
cmp
add
xchg
cltd
add
and
out
jg
adc
add
rcrb
cld
mov
popa
fwait
rolb
test
sub
gs
andl
pop
mov
cmp
pop
mov
insb
fmuls
mov
sbb
shrl
dec
sub
enter
adc
out
insb
pop
lds
pop
popa
cmp
jno
inc
mov
mov
addl
ja
push
sbb
cmp
andb
mov
xchg
lock
adc
pushf
or
pusha
xor
lcall
clc
push
mov
insl
push
sbb
xor
pusha
std
lahf
cwtl
clc
je
jmp
push
bound
iret
dec
pop
push
clc
and
cmp
mov
or
or
push
mov
sbb
into
enter
pop
outsb
sub
sbb
mov
push
insb
notl
push
mov
sbb
pop
mov
lcall
hlt
mov
cld
pop
dec
cmp
inc
push
push
xchg
mov
push
lock
sbb
cmp
mov
fistl
or
or
ds
repz
lret
cmp
jo
sbb
lock
ss
pop
inc
adc
pop
sbb
xor
mov
ret
jo
push
rcl
ds
push
sbb
and
adc
js
push
adc
subl
arpl
sbb
mov
jmp
test
ror
out
dec
adc
andl
ret
inc
and
add
in
pop
dec
push
nop
pop
adc
in
int
outsl
dec
and
adc
mov
or
xchg
xor
mov
es
mov
cmp
or
lock
push
adc
mov
test
test
inc
sub
mov
mov
push
cld
xchg
ret
sbbl
insl
xor
cmp
mov
adc
shll
add
fucom
sub
mov
xor
pusha
adc
lea
mov
shr
jge
aad
cmp
cmpsb
xor
cmp
inc
pop
inc
mov
aad
iret
in
inc
repnz
stc
push
or
dec
or
pop
pop
cmovg
pop
and
sti
or
xor
dec
sub
jno
adc
popa
or
arpl
sbb
mov
pop
cmpsl
mov
xor
inc
or
jb
mov
xchg
fwait
cld
cmpl
jo
inc
mov
adc
test
aaa
jo
adc
mov
pop
mov
mov
lods
jmp
sbb
push
xchg
mov
sbb
filds
je
inc
mov
sub
mov
pop
test
push
clc
xchg
jl
in
je
lea
pusha
sbb
mov
rcr
pop
push
fcomp
fisttpl
dec
ss
push
jg
and
adc
inc
ljmp
sbb
pop
adc
ljmp
and
mov
sub
subb
jle
inc
fisubl
mov
cmp
sbb
sbb
shll
call
xor
je
clc
pop
pop
pop
pop
and
xorl
ds
inc
jnp
sub
lock
mov
mov
mov
mov
cmp
mov
pop
jp
das
cmpb
add
inc
loop
lret
test
ret
icebp
jmp
mov
vminss
stc
xchg
inc
pusha
dec
sbb
and
ds
je
rorl
mov
xchg
ljmp
or
mov
pop
sub
cld
lock
mov
push
xor
ljmp
insb
push
mov
test
imul
bound
push
mov
in
es
xchg
and
mov
add
xchg
in
xchg
ss
xchg
jbe
mov
mov
xor
out
push
cmp
sub
orb
sub
sbb
cmp
sub
and
jg
mov
je
psubusw
xor
and
xchg
pushf
sbb
imul
mov
jb
push
arpl
popa
sub
xor
cmp
push
das
imulb
pusha
xchg
mov
add
jl
cmp
shrb
iret
inc
and
sub
add
mov
mov
push
and
add
dec
and
andl
push
test
loopne
outsl
lcall
cmp
fistpl
cmp
aaa
int
fcmovne
leave
sbb
lea
xor
push
xchg
pop
in
or
pop
addr16
push
cltd
pop
out
inc
js
je
mov
leave
add
inc
inc
or
pop
js
jp
adc
rclb
add
cmp
mov
sbb
pop
lea
push
scas
inc
insb
mov
or
rcll
push
insl
push
push
or
or
sar
imul
cmpl
push
loop
jne
imul
mov
pop
test
outsb
and
cmp
out
ret
sbb
push
cmp
jne
and
or
mov
les
add
dec
push
cmp
add
inc
sbb
xor
or
fisttpll
or
push
push
fld
dec
inc
inc
mov
fadd
andb
jle
jbe
fildll
mov
xchg
and
inc
ds
mov
dec
jle
popf
cmpb
push
mov
dec
add
sub
ret
push
xor
pop
divb
adc
sub
inc
fstpl
lods
push
push
test
jo
insl
pop
stos
xor
je
and
push
fidivs
adc
xchg
into
push
stc
sbb
lods
rclb
cmp
mov
adc
adc
or
or
clc
pop
arpl
xchg
xchg
push
push
lods
fdiv
xchg
xchg
add
imul
add
enter
jae
dec
imulb
movzbl
cmp
je
or
inc
or
jbe
repnz
push
lods
pop
push
cmp
pusha
cmp
jo
pop
jle
dec
push
push
shll
cli
sbb
mov
fcmovnu
mov
push
aad
lds
mov
lea
daa
cli
sub
std
fs
cmp
pop
shrl
push
cmp
jge
push
fldt
sbb
inc
inc
pushf
lods
fisubs
mov
add
cmp
xchg
inc
xor
jb
adc
in
loopne
xor
lahf
mov
add
out
sbb
lock
clc
clc
cld
add
outsl
pop
inc
jae
movl
sub
push
add
add
add
cmpsb
test
and
jle
sbb
add
dec
je
add
add
jg
dec
jne
mov
and
dec
or
mov
shr
sbb
or
lret
ljmp
xor
dec
inc
mov
push
and
jg
or
mov
cli
std
mov
in
pop
push
jle
mov
sub
lret
adc
mov
inc
sti
je
dec
je
push
add
out
loop
sbb
orl
adc
repnz
add
movsl
shl
add
jmp
sub
scas
add
push
add
je
cmp
jne
sbb
adc
mov
pushf
cmp
out
fisubs
or
inc
inc
test
push
push
fdivrp
xor
inc
cmpb
mov
xchg
or
cltd
idiv
inc
inc
mulps
pusha
clc
jb
icebp
cld
mov
ljmp
popf
add
je
mov
pop
sbb
or
out
mov
stc
push
or
lods
jns
lods
add
adc
push
ljmp
jbe
dec
add
fidivrs
push
mov
sbb
jne
jmp
daa
pop
sbb
inc
sub
jmp
ret
adc
push
xor
repnz
iret
or
cld
insl
addr16
jae
shl
call
jmp
jp
ljmp
jne
decb
sbb
in
cmp
je
cmp
dec
cld
decl
add
cmp
inc
jne
mov
sub
test
inc
xchg
push
or
inc
out
fbld
xor
add
jge
and
test
add
add
mov
fwait
cmp
jne
mov
hlt
inc
arpl
sarb
sbb
or
pop
adc
push
push
cltd
or
add
xor
sub
jmp
push
jl
or
jg
jl
imul
jmp
and
push
jmp
scas
mov
mov
jg
aaa
push
add
rorl
and
mov
sub
mov
mov
enter
and
xchg
fucomp
add
les
outsl
adc
test
popa
call
and
es
in
into
test
bswap
or
sbb
push
pop
inc
jl
clc
je
mov
jns
add
xor
sbb
jecxz
scas
and
pushl
push
pusha
mov
push
push
inc
cmp
movsb
inc
jl
pusha
mov
jg
xor
fs
imul
mov
mov
shll
push
jo
popf
iret
dec
jl
daa
lcall
jo
mov
mov
sub
cli
inc
and
xor
add
mov
jge
xchg
mov
pop
das
xchg
xor
sub
inc
cmpb
mov
ljmp
add
cmp
in
inc
inc
push
icebp
les
inc
out
jmp
xor
sub
inc
in
adc
cmpsb
ds
bound
pop
pop
or
lods
xabort
lret
test
cmp
cmp
xor
int3
dec
dec
addb
cmp
add
sbbb
cmp
je
cmp
je
add
jnp
adc
push
cmpl
mov
push
clc
inc
loopne
stos
xchg
aad
mov
add
jne
mov
mov
push
ss
enter
pop
push
sub
test
shr
pop
adc
or
je
and
sub
ret
or
pop
mov
lock
jp
ret
adc
dec
adc
xor
lock
data16
push
xchg
or
push
iret
je
push
lcall
mov
mov
or
dec
int3
js
add
pop
mov
pusha
adc
adcl
in
push
cli
jbe
sub
mov
sub
jge
jne
imul
repnz
push
sbb
pop
push
add
push
dec
mov
repz
cs
or
add
cmp
fmuls
insl
adc
int3
adc
pop
and
xchg
inc
into
jg
movsb
loop
sub
insb
xchg
loopne
or
pop
inc
popf
adcb
test
popa
push
hlt
test
in
jne
add
push
adc
inc
xor
icebp
sbb
fwait
jecxz
cmp
inc
push
mov
push
aaa
dec
xlat
jle
pop
add
dec
sbb
adc
add
inc
adc
orb
jp
sub
jle
jns
add
je
push
or
add
cmp
pop
sbb
int3
adc
adc
jne
mov
movb
push
sub
xor
orl
push
cmp
pop
ror
rcl
aam
dec
cld
push
push
inc
dec
sahf
push
subl
addr16
cltd
push
cmp
test
sbb
pop
stc
cmp
and
iret
inc
js
setne
xor
cmp
jecxz
sbb
mov
push
lds
or
sub
pusha
repnz
pop
mov
sub
loopne
xchg
push
xchg
xchg
cs
outsl
enter
xchg
mov
or
loope
inc
jl
jbe
nop
mov
nop
pop
dec
adcb
inc
test
jecxz
aas
push
cmpb
jne
imul
push
pushf
insb
xchg
sbb
mov
scas
jecxz
or
or
add
add
jo
add
inc
or
je
int
or
les
dec
aad
inc
or
mov
imul
or
xlat
mov
and
ret
xlat
cmp
icebp
lea
pop
mov
fistpll
call
cmp
sahf
mov
arpl
je
repnz
cmp
test
adc
mov
shrl
cltd
or
or
ret
push
sbb
pop
mov
push
adc
jnp
dec
or
jne
push
mov
scas
cwtl
push
inc
and
push
cmpsb
inc
outsb
ret
loope
test
or
cwtl
add
adc
and
adc
je,pt
inc
rolb
sub
push
xchg
xchg
loopne
xchg
push
scas
add
mov
mov
rol
dec
cmp
dec
imul
in
pusha
fildll
or
fs
add
cmpsb
add
or
pop
lock
scas
push
pop
mov
mov
adc
sbb
mov
xlat
add
cmp
js
lret
push
jo
fimuls
push
jl
or
ss
jnp
shl
jmp
pop
sbb
jno
pop
jp
loopne
sbb
cltd
dec
popa
jl
cli
xchg
mov
bnd
inc
out
cmp
mov
jo
inc
ficoml
mov
pop
js
andl
lods
push
mov
add
sub
rcrl
std
jmp
cltd
or
jge
insl
adc
imul
push
sahf
xchg
inc
imul
fistl
or
jb
scas
adc
dec
cli
ja
test
add
xor
cmp
jb
mov
jmp
push
dec
fidivs
add
ljmp
rorb
je
ret
mov
addb
addr16
jecxz
adc
ret
in
push
mov
xor
cmp
jae
sarb
xchg
xchg
pop
push
cmpsl
aad
inc
ljmp
mov
cmp
push
mov
cwtl
pop
dec
jne
jmp
and
inc
je
cmp
not
mov
mov
in
push
cmp
mov
dec
or
cmpb
adc
lea
dec
pop
sub
std
lcall
dec
push
andl
in
pop
sub
cmp
addb
les
push
cmp
ret
and
dec
adc
popa
xchg
add
dec
and
fists
lea
loopne
or
dec
sub
fnstenv
add
add
inc
cltd
lods
inc
ja
cmc
fstp
and
pop
js
mov
or
and
call
rol
xlat
add
cwtl
jo
into
das
sti
mov
lods
arpl
inc
stc
cmp
mov
mov
adc
daa
jne
xor
loopne
sub
jne
sbb
cli
mov
push
lea
pop
maxps
add
sub
insb
aaa
hlt
in
add
fcomi
shl
aam
shlb
adc
bound
inc
jne
push
pop
bound
rclb
iret
sbb
fdivrl
sahf
mov
dec
aaa
jo
jb
pop
ret
or
jbe
push
or
stos
push
js
push
xor
rolb
mov
cli
jne
adc
in
cmpsb
jmp
or
mov
inc
mov
jno
jno
sbb
mov
inc
push
test
xor
imul
into
mov
push
cltd
jno
and
movsb
cmp
es
mov
dec
jmp
xchg
js
movsb
rcl
test
or
lahf
loopne
xchg
sbb
add
pop
inc
xor
pop
push
adc
mov
and
gs
lock
pop
in
jl
loopne
movl
sub
add
loope
mov
jo
pop
clc
out
mov
jl
xor
nop
rolb
loopne
enter
xor
pop
loope
loopne
or
mov
add
mov
xchg
out
movsb
mov
and
mov
test
xchg
out
cmp
adcb
sub
push
mov
pusha
inc
push
or
fcomp
jmp
adc
pop
icebp
imul
add
out
adc
jmp
fsubr
pop
lcall
or
nop
mov
popa
adc
inc
daa
shld
adc
adc
pop
shll
adc
dec
xor
inc
or
in
mov
rcrb
scas
pop
repnz
cmp
xor
add
xor
iret
xor
xor
adc
push
loopne
adcl
add
adc
push
xchg
xchg
and
lea
push
push
aaa
add
addr16
sub
pop
mov
cmp
inc
cmp
inc
cmpsb
in
lea
sbb
in
ds
aas
or
jg
cmpsb
adc
xchg
fsubrs
movsl
sub
cmc
js
xchg
xor
dec
arpl
adc
jp
lret
aam
push
xor
mov
dec
inc
bound
and
js
add
cmpsl
pop
or
jle
mov
dec
xor
lds
ds
sub
js
sub
add
add
sbb
cmpsl
pop
xor
jmp
pop
insl
adc
test
mov
loopne
and
inc
mov
add
inc
leave
dec
adc
dec
shll
mov
pusha
mov
push
out
or
pop
imul
sbb
pop
push
ret
outsl
sti
nop
cmc
mov
jno
sub
and
call
or
aam
popa
dec
arpl
and
or
jo
mov
add
pop
int3
lcall
je
push
jne
dec
mov
pop
lock
jmp
rorb
adc
rclb
push
or
jns
add
je
ret
test
mov
and
mov
les
pop
push
mov
xor
arpl
ror
adc
dec
mov
mov
movl
scas
orb
sti
or
mov
repnz
fistps
sub
sub
pop
jmp
loopne
aad
mov
and
ja
pop
mov
lods
mov
adc
dec
adc
out
mov
test
lods
push
inc
mov
jne
cmp
xchg
dec
sub
push
daa
dec
addr16
dec
adc
out
cwtl
pop
imul
lahf
sub
pop
clc
inc
loop
inc
mov
sbb
jo
dec
mov
cmp
call
push
out
adc
inc
int
dec
sub
jns
jae
or
aad
test
les
push
mov
pop
mov
cmp
fs
in
or
pop
push
jae
mov
imul
push
or
pop
into
add
jno
mov
stc
xchg
xchg
lahf
ds
xor
xlat
rcll
popf
jecxz
int
dec
hlt
jmp
lea
icebp
mov
daa
and
mov
lcall
and
xchg
or
adc
push
or
sbb
ret
ret
adc
inc
add
mov
rcl
and
imull
or
in
popa
popa
inc
and
mov
and
xor
movzwl
imul
sub
mov
ret
and
vmovaps
fadds
or
add
jecxz
sbb
mov
jl
mov
repnz
adc
or
insb
lock
pop
jmp
daa
cmp
add
inc
push
push
adc
out
lcall
ds
movsb
hlt
out
push
pop
mov
jle
push
sub
out
jae
cmp
pop
mov
fisubrs
popa
jo
push
flds
mov
pop
push
sub
fmul
shlb
aaa
add
subb
out
add
or
rorb
or
shr
ret
rclb
rep
adc
data16
movsl
inc
add
sbb
sub
xor
das
sbb
in
adc
pusha
and
daa
cltd
jmp
mov
add
pop
mov
fwait
scas
stos
pop
jg
xchg
add
sub
mov
sbb
pop
shr
push
dec
lahf
sbb
jae
cmp
ja
adc
xchg
xor
jae
sbb
push
add
mov
imulb
ds
je
mov
pop
rcrb
or
add
sub
mov
sysret
pop
test
or
call
cmpsl
loopne
pop
std
mov
jmp
outsb
xor
and
push
pusha
lds
add
movsl
outsl
jl
or
or
leave
aam
je
or
aam
in
lret
adc
xor
out
loopne
cmp
mov
loopne
dec
fdiv
and
push
mov
popf
roll
enter
sub
mov
sbb
sub
aad
dec
mov
mov
mov
and
sbb
out
adc
daa
andb
inc
mov
xor
pop
adc
or
adc
xchg
je
or
add
cmp
dec
xchg
push
inc
scas
loopne
inc
outsb
adc
xchg
ffreep
adc
sub
xor
inc
arpl
adc
aam
sub
sbb
sarb
and
pop
adc
inc
ret
or
cmp
je
xchg
add
push
and
jo
mov
pop
test
pop
cmp
aad
fbld
pop
in
mov
sbb
call
shr
rcll
pop
int
sub
add
xor
fidivl
inc
jmp
movsl
push
and
jp
pop
andb
sbb
dec
aam
clc
testl
jmp
jmp
or
push
cmp
rol
fdivs
insb
add
je
cld
sbb
cmc
push
inc
xorb
sub
pusha
mov
adc
clc
jb
mov
cmp
in
sbb
dec
popa
shl
xor
add
ret
dec
cmpsl
es
jb
pop
jle
nop
cmpl
mov
je
sar
xor
mov
cld
mov
testb
xchg
push
push
cmp
sbb
xchg
filds
loop
popf
dec
mov
imul
pop
ret
ret
push
inc
mov
push
sbb
lock
dec
cmpsl
jg
dec
outsb
test
push
divl
add
adc
clc
pop
dec
pop
imul
popa
dec
xchg
mov
lahf
push
adc
and
xor
mov
mov
or
aaa
daa
and
sub
or
mov
jmp
add
push
xorb
inc
orb
loopne
mov
sub
lret
push
mov
in
add
ret
jmp
das
or
pop
push
lret
mov
adc
es
pop
ret
inc
movsb
nop
push
int
xchg
mov
mov
push
sbb
cltd
jg
sbb
cli
pop
inc
icebp
or
mov
mov
inc
pushf
fisubrs
mov
mov
or
test
xchg
jo
insb
pop
or
or
cmp
or
add
jne
mov
cmc
cmp
aas
clc
jae
xchg
testb
mov
pop
stos
ljmp
test
add
cmp
lock
subb
loop
adcb
pop
cmp
sub
loop
cmp
or
data16
push
sub
inc
test
mov
mov
negb
test
sbb
fdivs
and
dec
or
in
xchg
jmp
aaa
xchg
dec
rclb
stos
add
pop
pop
scas
enter
jne
xchg
outsb
mov
cmp
cmp
jae
jmp
pusha
jle
push
xor
mov
div
lcall
add
movsl
movsl
cmpb
jmp
add
push
dec
aam
cmp
mov
outsl
adc
add
mov
add
push
lds
xchg
add
in
pop
inc
pop
imul
les
lock
js
cmp
push
fsubs
mov
mov
jo
gs
outsl
add
andl
dec
add
inc
add
or
fs
shrb
popa
out
xorb
mov
shrl
ret
jo
lea
mov
adc
sub
sub
jne
bound
adc
out
adc
mov
hlt
jmp
test
fiaddl
dec
aaa
outsl
cmp
call
push
mov
mov
pop
pop
cmp
out
jns
jnp
push
dec
int3
add
pop
push
sbb
outsb
jno
addb
pop
and
add
cmpb
and
cmp
fnstcw
scas
add
sti
mov
jae
loopne
clc
jg
fs
test
movd
ficomps
movapd
push
clc
jae
xor
repz
or
xor
cli
rcl
lret
dec
jmp
cmp
and
lret
xlat
or
jg
dec
mov
xchg
ret
adc
jnp
aaa
test
and
in
add
aam
fdivs
ret
or
je
and
stos
fisubrs
add
outsb
ret
mov
add
and
addps
int
mov
fcmovb
sbb
sbb
inc
pop
or
and
sbb
jmp
mov
xor
mov
frstor
or
aaa
push
cmp
mov
xor
mov
mov
pop
xor
pop
mov
mov
add
es
ret
and
xor
enter
mov
sub
pop
loopne
add
jp
test
push
cmp
jns
popw
adcb
sbb
and
scas
jle
mov
inc
push
jne
inc
inc
cmp
mov
mov
adc
push
movb
pusha
mov
sbb
pushf
pop
addr16
push
push
cmp
sbb
ret
mov
dec
inc
sbb
push
les
fldenv
xchg
pop
push
mov
fcmovbe
and
pop
jb
add
xor
mov
adc
jnp
inc
mov
jp
leave
popf
mov
add
in
lods
inc
jmp
and
xor
pop
scas
add
mov
push
pop
mov
scas
add
out
testb
out
mov
jne
orl
imul
push
pop
fildl
outsl
hlt
push
or
or
leave
cwtl
push
fs
push
or
add
cmp
push
lret
inc
cmp
and
xor
test
push
push
cmp
int3
or
out
in
cli
jecxz
or
es
repz
sbbl
cmpsl
xchg
inc
sub
cs
jbe
cmp
inc
jb
or
xor
dec
fs
pop
sub
mov
sub
add
inc
data16
aas
sub
add
call
data16
adc
pop
mov
ret
add
je
jae
movsl
add
push
enter
inc
mov
jle
jge
pop
ljmp
jne
sub
push
push
ret
fists
adc
shr
arpl
cmp
jb
loop
icebp
mov
sub
rolb
shrl
adc
shlb
jo
jmp
mov
push
push
shrl
sub
add
and
pushf
sub
leave
xor
mull
jg
cwtl
mul
push
add
pusha
rcrl
sub
xchg
adc
jg
nop
jecxz
jmp
cmp
jle
or
push
sub
adc
lods
orb
inc
and
int3
call
cmp
test
incl
mov
inc
cmp
jne
inc
cmpb
out
adcb
add
xor
mov
inc
inc
and
adc
shll
or
or
mov
add
test
sbb
inc
inc
les
cmpsb
loope
hlt
mov
xor
loope
cmp
pop
cld
or
jo
hlt
daa
jno
gs
aas
cld
subb
jmp
mov
testb
sbb
adc
sar
fistl
rol
loope
or
cmp
mov
or
mov
je
sti
lret
xor
lret
jne
inc
aaa
push
push
bound
jmp
loope
in
mov
sub
test
adc
pop
and
cmp
inc
lret
push
inc
insb
add
clc
sub
sbb
push
movq
mov
jmp
imul
test
jo
inc
or
mov
test
push
push
mov
pop
ror
sarb
cmp
jae
sub
or
fists
sbb
lods
sbb
cmpsl
and
and
cmpsb
inc
sub
sbb
mov
decl
pop
pop
sahf
push
inc
adc
mov
jns
addb
daa
arpl
mov
xlat
add
pop
mov
and
jns
cmp
dec
add
pop
pop
shlb
xorb
andb
and
imul
xlat
jno
adc
adc
sub
pop
push
andb
or
data16
mov
xchg
test
mov
jbe
sub
jb
and
mov
dec
or
jno
cmpsl
or
lea
push
mov
lods
sbb
lcall
pop
scas
in
ss
mov
ret
les
mov
add
or
push
jbe
sub
std
xor
cmpsb
cli
aaa
pop
cmp
pushf
mov
cmp
fisttpll
into
lea
cmp
and
jmp
in
mov
cmp
jne
push
adc
or
mov
inc
mov
jne
pop
sub
pop
test
sbb
add
adc
pop
je
jne
sbb
mov
nop
pop
push
ficoms
adc
adc
sbb
aam
loope
gs
dec
loopne
sub
pusha
sti
fwait
add
and
jnp
faddp
orl
mov
out
cmpsb
mov
sbb
cmpl
and
mov
cmp
jo
push
stc
stc
jle
push
scas
push
sbb
sub
or
mov
cmp
push
jns
ja
pop
lahf
jmp
jl
mov
stc
and
in
mov
dec
or
mov
test
push
push
pop
push
lock
mov
testb
add
cli
in
mov
inc
shlb
fdivrl
sub
jne
pop
or
andl
repz
push
push
xchg
lock
xchg
fcmovnbe
pop
inc
imul
in
dec
and
sub
xchg
sbb
pop
xor
into
cli
stc
xor
jl
and
xlat
jbe
sub
aaa
push
ljmp
in
rcrb
lcall
lahf
push
icebp
sub
arpl
ds
inc
mov
or
pop
push
adc
xor
fs
pop
cltd
rcrb
gs
add
mov
imul
ja
add
push
inc
cmp
shl
add
and
xchg
mov
scas
sub
mov
loopne
sbb
pop
jbe
lea
adc
sbb
add
xor
lock
push
sbb
pop
inc
push
adc
jae
sub
clc
jbe
add
cmp
out
add
aaa
add
xchg
dec
popa
std
jmp
in
cmovle
jmp
rclb
jmp
push
add
sbb
stos
loopne
loopne
rolb
jnp
adc
jbe
divb
add
dec
out
mov
pushf
pop
fs
rol
add
das
lret
shrb
hlt
imull
and
icebp
and
mov
add
add
or
xor
adc
xor
add
mov
and
outsb
or
shr
js
hlt
js
pusha
lods
push
out
push
fneni(8087
insl
movsl
add
adc
add
inc
js
or
or
add
pusha
or
or
movsl
fnstenv
push
rolb
sarb
repz
test
shl
ret
or
sbb
aam
adc
sub
mov
js
dec
ret
out
and
add
xor
aad
adc
jnp
sub
fwait
cmp
bound
shlb
inc
rcl
imul
ret
or
add
dec
pushl
add
dec
jne
jmp
dec
test
cs
roll
out
mov
dec
es
jne
mov
pop
xor
add
or
xchg
dec
push
add
pop
xor
jge
imul
xchg
sub
cmpsl
add
dec
mov
jno
xor
push
shlb
or
lea
outsb
into
mov
enter
mov
fwait
neg
cmp
push
cld
jne
mov
push
cmp
jne
cltd
cmpsl
mov
and
adc
daa
mov
aam
xorl
jb
pop
push
pop
and
dec
or
adc
pop
lds
jmp
std
push
xor
cld
mov
enter
sub
scas
adc
in
inc
add
jne
inc
inc
inc
movsb
out
adc
push
inc
stos
inc
repnz
mov
sub
pushf
ret
mov
test
sub
pop
push
mov
cmp
mov
push
mov
add
or
lea
adc
add
adc
add
jb
push
xor
pop
std
xchg
enter
or
sub
leave
inc
or
inc
pop
pop
pop
leave
adc
sbb
test
push
cmp
and
mov
mov
pop
xor
inc
rclb
js
mov
addb
push
adc
mov
addl
shlb
add
xlat
xchg
ficompl
iret
je
mov
sbb
cmp
jg
add
mov
ds
test
mov
adc
add
jl
call
xor
push
rclb
mov
loopne
push
lea
loopne
enter
mov
js
inc
mov
rorb
jb
lea
frstor
and
in
sub
sub
add
movsb
mov
roll
xorb
clc
pop
mov
pop
pop
sbb
push
rcrb
cmp
in
subb
test
add
dec
jnp
shrl
push
adcl
gs
push
les
test
adc
mov
dec
and
lods
dec
aam
adc
or
lea
xor
inc
lea
shlb
adc
mov
push
shlb
repz
cmp
or
dec
add
cmp
fbld
sub
cmp
lea
add
not
and
sub
mov
add
push
sub
or
sbb
imul
lret
fsub
xorb
das
push
mov
push
add
inc
adc
mov
push
ja
jne
sbb
push
push
pop
cmp
jmp
add
popa
mov
stc
and
mov
inc
je
mov
std
mov
pop
mov
sbb
or
add
jmp
fbstp
or
or
mov
inc
inc
push
fs
pusha
repz
sbb
scas
mov
pop
push
sbb
data16
mov
inc
cmp
jb
lsl
xorl
mov
push
or
or
add
pop
ret
lea
cmpsb
outsb
int3
adc
xor
hlt
jg
pop
inc
mov
adc
mov
and
push
push
sub
or
ret
shl
push
int
scas
ficoml
mov
jle
testl
and
sti
pushl
iret
xor
jo
and
sbb
or
and
add
loope
les
and
sbb
sbb
fwait
into
out
cmp
je
test
je
cwtl
pusha
aas
iret
repz
faddl
aam
xchg
pop
sub
out
dec
addr16
outsb
or
cld
nop
ret
aaa
sbb
mov
out
inc
push
adc
or
xchg
lock
mov
lcall
aas
aaa
xor
shlb
lret
mov
mov
push
daa
sbbl
cmp
mov
popf
pop
cmp
xchg
xor
inc
jns
pop
inc
jmp
cmp
jecxz
outsl
mov
add
add
sub
fwait
pop
push
out
pop
ret
hlt
stos
pop
inc
adc
cmp
pusha
push
xor
adc
push
mov
cmp
je
cmp
and
ds
add
jne
pop
fmuls
xlat
js
data16
int3
push
ret
loopne
mov
dec
jg
adc
mov
and
je
lret
lret
icebp
sbb
pop
adc
les
sbb
addl
pop
leave
add
sbb
jp
aam
xor
les
jbe
push
add
pop
test
sub
mov
mov
stos
shlb
shlb
aad
xchg
out
push
rclb
shl
cld
dec
inc
lea
std
mov
nop
sbb
mov
or
pop
imul
test
inc
xor
jns
sub
test
cmp
push
mov
adc
add
cmp
pop
xor
mov
scas
mov
xchg
add
getsec
jne
mov
pop
lock
mov
inc
mov
dec
jne
fs
add
pop
ret
gs
outsl
mov
addb
je,pt
add
or
jae
xchg
mov
xlat
jnp
jp
lds
push
das
push
inc
push
movsb
add
add
pop
xor
adc
aaa
fsubp
dec
call
stc
scas
sub
xor
jmp
sbb
pop
insb
sbb
xor
loopne
loope
gs
jne
add
or
inc
sbb
or
int
jo
orl
jb
lea
in
mov
mov
adc
or
adc
insb
push
pop
cmp
adc
js
lcall
mov
mov
mov
or
or
dec
inc
and
dec
inc
lock
push
pushf
daa
mov
or
inc
and
mov
push
or
idivl
sub
dec
addr16
or
pop
in
dec
mov
sub
dec
pop
shll
add
andb
push
gs
inc
adc
in
stos
in
and
cmpsl
pop
inc
pop
movsl
adc
or
mov
cli
push
cmp
push
mov
push
or
sub
mov
rorb
shrb
mov
outsb
add
rorb
push
or
and
out
pop
jp
inc
dec
mov
clc
pusha
hlt
ror
cmp
aas
jne
jecxz
jo
rcll
mov
pop
mov
loope
add
inc
lock
add
mul
in
sub
mov
mov
inc
dec
enter
incl
mov
inc
fimuls
sbb
or
fcoms
sti
call
frstor
in
rorb
loopne
cmp
jne
adc
in
cmpsb
push
or
push
into
and
jmp
push
orb
xor
or
pop
mov
dec
fmuls
out
mov
mov
les
ja
cmovg
add
inc
dec
inc
mov
adc
lods
push
cli
and
cld
mov
xchg
gs
pop
dec
ret
inc
rclb
inc
imul
popf
adc
jne
pop
ret
and
in
or
cmpsb
push
mov
inc
cmp
jle
sub
pop
addl
decl
cmp
pop
cmp
movsl
es
mov
jbe
mov
pop
idiv
decl
jl
inc
les
add
pop
stos
scas
sbb
fimull
popa
push
mov
xor
rol
jmp
xor
push
cmpsb
add
jno
test
enter
frstor
mov
dec
push
sub
mov
inc
cmp
aam
sub
sbb
jo
mov
movsb
mov
movsb
int3
test
sub
fisubs
lock
sub
and
sbb
inc
adc
cmp
or
repnz
add
or
clc
adcb
loope
mov
cli
xchg
loopne
mov
adc
nop
rolb
iret
les
js
stos
setle
jp
push
push
push
sub
mov
sbb
andl
addl
mov
cmp
daa
scas
sar
call
inc
mov
pop
jmp
dec
mov
out
mov
mov
mov
faddl
idiv
adc
mov
jg
adc
jmp
daa
adc
mov
test
pop
adc
popa
xchg
call
adc
jbe
jo
jmp
dec
sti
shrl
je
add
or
pop
inc
mov
or
je
inc
push
inc
lret
mov
jmp
sub
dec
push
test
push
jne
mov
dec
in
adc
sbb
push
push
push
push
lea
push
test
mov
and
imul
clc
mov
push
div
add
inc
xchg
push
fimull
lock
push
ds
push
addr16
jne
mov
test
pusha
jnp
pop
add
dec
mov
inc
jne
inc
mov
jne
repnz
pop
lcall
and
test
xchg
out
sahf
movsb
dec
xchg
cmovp
adc
popf
adc
mov
mov
or
sub
add
cmpsl
xchg
push
iret
or
js
sub
leave
add
ja
repnz
pop
rorb
add
dec
inc
lds
push
push
jmp
sub
dec
mov
rclb
les
in
loopne
push
and
or
push
fdivs
or
add
jecxz
cmp
outsb
mov
clc
pop
daa
lods
orb
jae
sub
pop
add
mov
push
aaa
sbb
adc
xor
cmp
mov
sub
mov
pop
adc
loop
pop
lea
add
sub
mov
sbb
pop
sbb
pop
lcall
pop
call
fimull
sbb
fst
fsubrl
add
xor
je
xor
lcall
sbb
rolb
add
loop
or
loopne
cmp
mov
pop
jle
sub
mov
out
push
pusha
ss
cli
or
cld
fisubrs
lret
xor
jae
out
mov
mov
add
sub
add
or
jle
jo
cmp
xor
testl
push
pop
push
push
pop
incl
rorl
dec
ljmp
pop
sub
xchg
lods
addr16
iret
mov
pop
mov
push
cs
idiv
or
add
lea
mov
into
cmp
lret
push
cmpsb
mov
push
inc
lods
scas
push
jo
movsl
stos
sbb
adc
rol
insl
or
cmp
mov
ret
add
jl
popf
adc
inc
inc
shl
xchg
test
sbb
data16
push
pop
std
idivl
jns
adc
stc
xchg
clc
push
mov
inc
push
out
mov
dec
fs
data16
scas
int3
cmc
mov
fs
mov
cs
vhsubps
insl
inc
sub
pop
sti
sub
rclb
push
pop
adc
leave
dec
lds
je
ret
add
lock
xor
les
mov
jmp
dec
or
push
loopne
testb
sbb
das
inc
add
sbb
mov
jno
adc
stos
clc
sbb
inc
mov
nop
shrb
add
or
jb
add
push
js
int3
scas
cmp
sets
push
insl
sub
int
push
pop
xchg
and
jg
fldl
add
aam
inc
movapd
dec
subl
inc
fdivrs
mov
lret
inc
jo
imul
add
in
jne
pushf
ret
lock
inc
rclb
inc
xlat
mov
pop
lea
jge
orb
call
and
xor
daa
xchg
xchg
cmp
cs
movsl
orb
xchg
popa
sbb
add
and
jmp
popf
and
hlt
fs
mov
mov
mov
mov
rcrb
jl
jge
out
leave
lret
inc
cli
sub
or
pop
movsb
adc
aam
pop
lret
movsb
sbb
mov
push
mov
pop
fsubrs
fmul
inc
mov
push
mov
inc
cmp
fs
adc
test
inc
lods
xchg
cwtl
push
push
in
call
cwtl
sub
in
dec
sbb
mov
dec
mul
cmp
xlat
test
adcb
xchg
lcall
stos
sub
dec
ficoml
and
mov
adc
fisttpl
jmp
orb
and
das
add
push
out
fildl
fisttpll
jle
scas
jbe
pusha
fsubrl
dec
xchg
or
aam
out
mov
rorl
test
ret
dec
inc
cs
push
fadds
hlt
push
lock
push
ficompl
mov
adc
push
adc
movsb
jb
xorb
or
rcrl
jle
or
arpl
add
push
sbbb
mov
adc
test
add
mov
dec
mov
push
into
je
in
fdivrl
popa
aad
pop
jne
cmpl
mov
xor
inc
enter
jp
or
dec
add
in
popa
fsubs
dec
leave
or
cmpsb
dec
add
cmp
in
xchg
xchg
mov
mov
mov
scas
add
push
aad
mov
lret
mov
and
mov
and
and
sbb
pusha
int3
add
dec
mov
std
daa
and
cmp
enter
and
jb
cmp
cwtl
jb
jl
adc
in
adc
out
dec
cmp
js
pop
jne
push
les
test
pop
mov
mov
jb
rep
jmp
add
or
cmp
sub
incb
enter
pop
push
jns
data16
mov
push
xor
sub
adc
and
inc
pop
lcall
add
add
in
mov
inc
sub
dec
add
cmpsb
push
imul
inc
xchg
mov
jnp
xchg
or
push
jl
je
repz
out
pop
push
mov
mov
iret
repz
call
lock
repz
hlt
clc
clc
cld
cmp
dec
loope
add
push
ret
rolb
lcall
repz
ss
lods
sbb
inc
pop
sti
xchg
xor
and
sbb
vpunpcklwd
je
into
jl
cld
pop
and
stc
or
std
cld
out
cmp
neg
xchg
mov
in
popa
daa
stc
divl
xchg
sub
inc
pop
nop
push
push
je
mov
mov
jl
mov
outsb
dec
gs
add
outsl
sub
push
add
nop
dec
dec
addr16
mov
sbb
xorb
push
clc
push
add
push
adc
out
icebp
jns
xor
sbb
sahf
out
sahf
sbb
adc
adc
jns
out
or
or
add
xor
add
dec
or
xchg
mov
fs
aaa
push
add
outsl
dec
add
add
ljmp
adcb
xchg
orl
cmp
cmp
cmp
xchg
in
out
lret
inc
je
mov
negl
adc
inc
or
jne
pop
inc
inc
inc
push
pop
jbe
das
subb
add
ljmp
pusha
xchg
add
pop
add
testb
jne
push
sbb
out
mov
sar
push
loopne
sti
xor
ss
mov
and
mov
jne
out
mov
cmp
or
xchg
push
nop
flds
leave
sub
add
dec
mov
movsl
sbb
pushf
pop
mov
sub
std
or
jmp
idivb
je
movsl
pop
sbb
loopne
sub
adc
or
shlb
in
jbe
sbb
or
enter
push
or
cmp
add
lock
ret
add
out
adcb
inc
lock
icebp
add
add
scas
mov
xor
mov
aam
push
rorl
hlt
rolb
adc
inc
mov
add
xchg
rcrb
and
and
call
pop
orl
and
cld
sbb
jne
xchg
jo
push
ret
daa
mov
mov
xor
rcrl
nop
mov
add
rolb
xchg
pop
mov
mov
jno
test
xor
test
mov
mov
xchg
sub
push
or
js
stos
lods
lods
mov
pop
pop
mov
or
dec
stc
add
push
add
or
inc
es
popa
test
dec
js
adc
adc
jb
sub
jnp
nop
mov
inc
ljmp
inc
cwtl
xor
cmp
mov
ret
xor
pop
outsl
adc
add
je
sub
pop
shrl
add
fisubrl
add
or
ror
sbb
stos
mov
sbb
rcrb
sub
jo
sub
lods
in
imul
cld
lods
lods
xor
mov
mov
push
sub
pushf
popl
mov
cmp
loopne
inc
loop
lock
mov
inc
adc
jl
repz
sbb
mov
and
mov
je
loop
pop
aam
pop
movsb
cmp
int
push
xchg
loopne
push
mov
xor
sbb
rdtsc
mull
push
push
imul
pushf
sub
int3
xchg
andl
testb
pushf
lods
xchg
dec
sbb
insb
push
xor
xor
pop
stc
insb
or
std
fcoml
ret
pop
pop
mov
mov
or
in
popf
enter
shr
sbb
lods
mov
mov
loope
lods
push
fbld
shll
dec
cld
xor
jo
cmp
and
and
pop
in
sbb
clc
jno
sub
orl
inc
or
mov
pop
pop
pop
adc
xchg
mov
add
ret
pop
xor
imul
cli
lods
mov
add
dec
aam
xchg
push
mov
aam
out
sbb
pop
and
pop
into
jb
test
inc
std
subl
push
mov
ret
jecxz
add
push
sarb
push
test
cmpsl
jae
sbb
dec
mov
adc
pop
out
pop
out
jbe
push
inc
call
pop
stos
jne
test
push
push
dec
out
loopne
pop
inc
add
sbb
pusha
pop
divl
sbb
lock
pop
stos
ds
inc
outsl
es
into
sbb
clc
dec
push
adc
lods
inc
lock
mov
adc
and
pop
cmp
jns
sub
jae
mov
roll
rorb
and
insl
xchg
add
sbb
pop
lret
sbb
lds
pop
movsl
and
inc
fdiv
add
sahf
or
push
pop
in
hlt
and
into
fnstsw
lock
or
or
popa
jmp
shlb
mov
adc
jbe
dec
aad
or
jb
pop
clc
shl
fsubrs
pushf
lret
mov
jne
bound
popf
lock
or
mov
gs
jp
stc
cs
xchg
xor
xchg
call
lret
cli
pop
xchg
loopne
cmp
push
addb
repz
pop
sar
lahf
lea
pop
fbld
pop
ja
push
movsbl
jg
daa
add
test
xor
pop
sar
xor
add
lods
movsb
xacquire
mov
jbe
rolb
lahf
call
rorb
push
lret
in
clc
les
int
xor
dec
or
je
or
sub
popf
lea
into
dec
pushf
pop
or
arpl
subl
or
sub
ret
addb
pop
jl
pop
xchg
jo
add
adc
js
lods
pop
push
imul
mov
cmpsb
xor
movsl
mov
mov
mov
pop
sbb
hlt
hlt
stc
adc
mov
je
or
inc
insb
sbb
test
sbb
jbe
adc
popa
lds
adc
outsb
outsb
xlat
scas
sbb
pop
and
fwait
push
jb
js
add
cmpb
ss
addb
push
testb
fs
cmpsb
or
adc
outsl
int
mov
js
dec
inc
imul
dec
pop
inc
mov
lea
dec
mov
js
xorl
nop
mov
das
add
or
sbb
fsubrl
inc
je
pop
push
or
dec
ficoml
add
mov
or
inc
adcl
mov
xchg
shll
call
test
lea
shll
sub
pusha
fisubrl
test
xchg
aaa
loop
es
jbe
mov
xchg
addr16
mov
and
outsb
sbb
inc
loopne
js
push
or
mov
in
mov
or
ja
out
adc
push
mov
add
push
xchg
pop
jne
cmp
mov
bswap
pushf
sub
push
shl
dec
mov
repnz
cmpsl
add
aam
test
inc
clc
push
out
outsl
push
dec
dec
mov
push
xchg
lock
or
pop
ds
popa
popf
fistpll
sub
jmp
mov
inc
cli
inc
stc
jo
xlat
mov
mov
addr16
arpl
mov
inc
xor
xchg
dec
lea
cmp
pushf
mov
sbb
mov
sub
outsb
jo
jmp
mov
mov
add
addr16
insl
je
hlt
xchg
pusha
je
or
sub
cmpsb
push
push
ss
ss
add
xor
ss
fildll
cs
mov
dec
xchg
push
dec
push
pusha
adc
jne
adc
sbb
or
and
rorl
dec
imull
popf
jno
add
mov
xchg
cmc
sti
movsb
std
movsb
addr16
mov
jmp
cmp
jle
sbb
loop
popa
mov
cmp
aas
loope
jno
jge
mov
mov
rcll
adc
lret
inc
or
shr
push
adc
adc
push
jbe
sbbb
fisttps
test
nop
mov
fimuls
loope
xchg
sub
cmpl
xor
push
fcoms
mov
rolb
push
jne
sbb
push
push
inc
add
data16
call
dec
or
cmpb
jne
push
adcl
mov
fnstcw
sub
and
jae
pusha
cld
xlat
add
jo
inc
jnp
mov
add
push
push
sahf
and
movsb
mov
pop
lds
sub
pusha
mov
scas
pop
mov
in
adc
mov
adc
jl
inc
cld
jmp
dec
int
or
or
add
add
js
jl
fnsave
adc
jl
xchg
sbb
and
cmovs
sub
cwtl
scas
jecxz
or
sbb
mov
inc
mov
or
ja
pop
lret
lea
fiadds
clc
rorb
insb
stc
cltd
push
sub
dec
add
xor
jge
rorb
stc
cmp
sub
mov
dec
jmp
sub
sub
inc
cmp
ljmp
fcmovbe
gs
andb
shlb
xor
aaa
test
mov
adc
loopne
or
subb
mov
clts
repnz
sar
ret
icebp
pushf
xchg
std
inc
push
mov
sub
sub
movsb
inc
push
sub
xchg
shlb
mov
inc
sub
lahf
xchg
push
cmpsb
decl
inc
sti
inc
mov
insb
in
jle
cmp
data16
clc
or
cmp
push
mov
jg
insb
mov
sbb
push
mov
and
ss
add
adc
shll
xor
dec
aam
adc
jle
aam
adc
cmp
sub
rcll
adc
jle
sub
out
loope
xor
daa
rorb
jg
jmp
sub
gs
push
pop
cmpsb
loopne
js
scas
fldenv
daa
sub
or
sarb
add
subb
mov
les
mull
arpl
adc
mov
pop
pop
pop
insl
dec
in
cli
movsb
adc
inc
and
sbb
into
xorl
add
pop
iret
mov
add
push
test
repz
add
lods
and
add
ja
sbb
jbe
cs
lcall
push
ja
ja
shll
ja
sub
xor
ja
add
ja
or
fs
js
shlb
jns
js
push
enter
jns
imul
imul
jns
jns
jns
lea
subb
inc
adc
cmpsl
fidivrs
jae
add
inc
inc
lods
dec
push
loopne
push
lea
mov
icebp
pop
or
stos
pop
adc
add
or
adc
nop
sub
cmp
mov
jge
or
pop
pushf
adc
sub
mov
dec
mov
xor
mov
push
lcall
lods
xor
in
mov
mov
imul
loopne
lahf
sub
dec
push
or
and
fsub
mov
flds
mov
push
mov
movb
push
ss
nop
in
test
fistl
xchg
xchg
stos
mov
icebp
into
sub
outsb
mov
dec
cmp
fs
dec
cmp
sub
push
fsubs
xorb
add
aam
add
inc
or
fisubl
int3
push
mov
mov
push
fstl
call
lods
jmp
out
or
scas
sti
and
aam
imull
shlb
fadds
lock
dec
jbe
mov
shr
pushl
insl
and
lahf
out
outsl
ret
ficoms
add
push
mov
enter
jmp
cltd
rolb
mov
push
xorl
or
adc
jb
mov
adc
jmp
inc
loopne
loopne
loopne
adc
sbb
fmul
cltd
sub
jmp
xchg
jno
cmp
imul
jo
mov
inc
dec
xchg
addr16
push
jae
nop
outsl
sub
sbb
pop
movsb
mov
or
sbb
inc
int3
pop
insl
movsl
xor
or
pop
sbb
loope
out
inc
xchg
pop
push
jb
add
inc
and
xchg
es
push
xchg
jbe
test
jecxz
loopne
xor
add
jmp
inc
std
pop
and
nop
jo
out
std
mov
hlt
cmp
or
ret
push
sbb
adc
mov
sbb
mov
mov
scas
js
add
out
mov
sti
lcall
push
outsl
outsb
or
push
ss
xchg
xor
roll
jbe
sbb
enter
shrl
inc
sar
fildll
mov
jae
stos
mov
sbb
sub
jne
pop
int3
loopne
pushl
adc
push
or
or
cs
subl
xor
or
mov
jl
inc
fs
mov
jne
ljmp
ret
jb
mov
dec
shlb
sti
or
mov
push
lods
and
bound
add
pop
sub
cwtl
or
jecxz
add
popl
mov
add
adc
add
pop
ret
push
xchg
mov
mov
fwait
mov
inc
push
adc
insb
cltd
sahf
pop
push
ret
pop
mov
dec
lret
pop
xchg
out
inc
cmpsb
jl
cmp
fistl
sub
insb
int3
push
fistpll
js
adc
ficompl
mov
mov
dec
jl
loopne
xor
test
mov
movsb
ss
lock
xor
xor
es
or
leave
xchg
mov
fdivl
xor
and
mov
add
push
movsb
adc
incl
iret
xor
push
sbb
or
testb
jecxz
sbb
fdivr
data16
push
cld
mov
in
xor
pop
fs
and
dec
xchg
xchg
push
test
and
call
add
jg
les
in
cli
inc
into
addb
mov
and
push
cmp
cld
fisubl
xchg
jo
jmp
cmp
add
cmp
inc
xor
inc
sarl
sbb
and
loopne
mov
and
pop
test
hlt
and
or
shr
dec
xor
rcl
sub
mov
ret
add
or
or
lcall
cmp
dec
pop
aas
fsubrp
adc
test
mov
mov
lahf
movsb
rcr
or
add
orb
push
and
mov
fildl
movsl
aam
outsb
test
scas
xchg
cwtl
out
jmp
pop
add
sub
mov
inc
ds
cmp
push
push
cmp
sbb
das
nop
orb
movsb
jge
jno
pop
and
out
pop
outsl
test
pop
movsb
push
add
mov
rorb
cwtl
hlt
ret
fdivl
jno
sub
mov
mov
jae
pop
mov
adc
mov
adc
or
or
lret
adc
jbe
mov
movsl
ja
add
or
inc
dec
cmp
test
push
loopne
pop
ja
push
push
jo
popa
notl
imul
imul
sbbb
ds
sarl
add
push
pop
ja
jns,pn
and
or
out
test
out
dec
xor
ret
adc
adc
push
or
push
xor
adc
push
rclb
push
sbb
cs
insb
push
pop
stos
add
push
vprotq
cltd
jbe
scas
and
adcb
mov
jo
icebp
mov
or
in
rcr
cmp
mov
push
push
shr
adc
and
mov
adcb
mov
int
jno
cmp
xor
adc
xchg
xchg
sub
inc
cmp
popf
xchg
xchg
das
es
sbbl
adc
xor
xchg
xchg
rcrl
mov
nop
dec
inc
rorl
js
int
pop
sub
jbe
fwait
call
dec
xchg
jb
shlb
sub
mov
sub
inc
jnp
divl
mov
clc
xor
inc
xchg
jne
dec
gs
sub
int3
mov
enter
int
mov
and
and
add
call
insb
cmp
mov
jne
outsb
insb
add
std
add
jb
repnz
in
xchg
rclb
or
add
js
scas
or
push
repnz
xchg
in
jge
xchg
cmp
incl
cli
mov
mov
jp
stc
add
or
repnz
cs
insl
call
dec
call
enter
mov
mov
xchg
rolb
iret
sub
push
pop
scas
xchg
lret
lods
enter
push
lods
lret
js
in
cmp
call
fcompl
lods
pop
cltd
inc
xchg
dec
fcoms
cmp
loopne
push
lret
test
nop
cwtl
and
adc
test
ljmp
fdivrl
push
enter
xchg
sub
push
push
rorb
and
nop
lret
in
cmp
loopne
imul
out
adc
sub
test
add
aaa
in
daa
pop
lods
dec
pop
add
add
jb
xor
adc
fadds
cmc
movsb
or
in
dec
sti
nop
inc
test
inc
addl
into
sbb
insb
arpl
jl
or
lods
cmp
sbb
outsl
lret
add
and
imul
cmpsl
adc
je
adc
mov
cld
lret
push
dec
lea
ror
xchg
ret
mov
arpl
in
jbe
cmp
mov
xor
mov
nop
adc
jne
iret
adc
loope
sbb
mov
testl
adc
or
or
adc
xchg
dec
add
xor
dec
das
aam
jmp
jmp
pop
mov
jmp
mov
ret
sub
add
dec
iret
fucomi
ja
je
cmp
jne
or
or
je
or
jne
sub
add
lret
fiaddl
mov
jne
push
jo
sbb
roll
add
xchg
mov
push
sbb
add
add
scas
movsb
mov
mov
jnp
hlt
mov
movsb
je
adc
mov
or
and
sbb
inc
cwtl
push
jns
or
push
or
lock
or
xchg
aam
mov
cmovne
es
imul
adc
je
nop
add
add
jle
add
pop
sub
mov
mov
inc
add
sbb
filds
daa
or
imul
add
inc
cli
sarb
mov
outsl
jmp
mov
add
add
test
or
mov
jo
ss
out
and
mov
add
sbb
mov
sub
add
add
and
push
dec
pop
push
mov
push
popf
negb
or
cld
popf
add
out
ficoms
push
push
imul
or
sbb
dec
fnsave
push
jae
inc
cld
xchg
and
xchg
std
aas
shlb
sbb
orb
mov
lods
jmp
and
and
push
nop
mov
and
outsb
lock
mov
xchg
cmc
sahf
fmuls
mov
fstp
mov
cmp
and
mov
jno
lea
cli
sbb
sbb
cld
jmp
imul
add
cmp
iret
ja
mov
movsl
inc
jo
jg
mov
mov
mov
xchg
dec
mov
jmp
or
cltd
inc
clc
cmp
das
out
sbb
popa
mov
cmp
dec
movsl
xchg
jnp
inc
push
pusha
scas
add
jmp
mov
shll
push
dec
out
mov
pusha
cmp
jne
movl
push
inc
add
inc
std
jne
nop
subb
jmp
sub
mov
add
jmp
mov
call
arpl
loopne
push
inc
push
repnz
and
int
mov
add
and
test
mov
mov
imul
daa
hlt
mov
cmp
into
std
cltd
xchg
data16
je
jmp
add
in
add
xor
push
jmp
push
and
aaa
inc
loop
xchg
xchg
cwtl
push
aas
rolb
stos
dec
inc
jnp
jae
cmp
jbe
xor
bnd
addr16
or
andl
inc
test
mov
imul
jecxz
scas
lods
loopne
mov
aaa
jmp
outsb
mov
sub
push
jmp
cmc
std
std
fs
subb
inc
cmp
lock
add
cli
movb
add
incl
mov
xorb
pop
inc
sbb
pusha
push
inc
sbb
fsubs
xor
outsb
fs
or
cld
mov
dec
jne
mov
lea
mov
inc
jle
sbb
mov
xor
push
mov
push
leave
or
inc
dec
jne
andl
scas
stos
mov
jmp
lret
andb
lock
icebp
jmp
cmp
push
stc
rcrl
js
leave
xchg
scas
sbb
mov
mov
dec
mov
cmp
pop
pop
push
sub
and
and
mov
dec
idivb
shrl
dec
roll
ljmp
push
dec
inc
push
fs
push
pop
push
aam
xor
xlat
testb
insb
ljmp
add
addl
mov
pop
outsb
push
or
xor
clc
add
out
fildll
sub
sbb
inc
jmp
xor
jge
mov
mov
add
scas
add
ret
sub
jmp
ljmp
test
sbb
jge
inc
cmc
xchg
and
push
mov
inc
or
add
imul
cmpsl
cli
and
jecxz
xor
mov
xchg
mulb
xchg
push
sbb
mov
lea
mov
mov
jl
mov
faddl
aaa
cmpl
ret
or
je
pop
ret
adc
ja
lret
add
movsl
sub
add
mov
sbb
sub
or
leave
xorb
or
fsts
pop
call
cmp
lcall
and
lds
rcrb
mov
mov
dec
xor
mov
pushf
cltd
push
in
sbb
notl
sbb
xor
xchg
mov
shrb
adc
sarb
imul
cwtl
dec
fimull
or
sbb
dec
ljmp
jle
jg
pop
dec
psrlw
or
imul
cld
lock
push
inc
add
add
sub
adc
ds
cmp
xor
or
sub
cmp
fsub
sbb
addr16
dec
call
nop
js
sbb
lea
sub
cwtl
lock
or
add
jo
or
scas
or
insb
leave
mov
aas
sbb
jmp
pop
les
jb
sti
ss
ret
or
mov
dec
js
pushf
sbb
or
scas
or
inc
mov
jno
adcb
push
inc
fsubr
mov
js
push
push
sahf
cltd
and
jl
insb
fsub
cmp
mov
movl
or
or
jbe
jo
fcmovu
pop
fnstenv
inc
or
add
push
pop
add
adc
xchg
mov
inc
dec
ret
push
mov
mov
shlb
push
bound
add
xchg
loope
mov
push
imul
dec
enter
xchg
faddp
loop
pusha
daa
in
mov
loopne
dec
cld
insl
mov
jle
and
mov
daa
cmp
inc
loopne
movsb
ds
push
xchg
fld
xor
xchg
push
imul
push
and
xor
ja
xor
rcr
pop
mov
movsl
dec
pop
iret
push
or
jo
adc
mov
cld
or
inc
and
add
in
push
in
cmp
pmulhuw
inc
dec
pop
cmp
dec
and
shlb
push
call
push
dec
mov
jge
push
adc
lods
xchg
cmpl
sbb
out
or
lahf
xchg
mov
xchg
dec
nop
mov
pop
test
popf
jge
subl
jmp
push
mov
mov
or
xchg
hlt
gs
mov
sbb
jb
cmpl
cmp
push
add
dec
rcll
or
lahf
shll
mov
mov
push
push
mov
sbb
ja
mov
jae
or
fwait
mov
mov
mov
xor
aad
sbb
pop
fistpl
das
mov
jl
out
xchg
arpl
cmp
inc
fwait
scas
mov
mov
add
push
jp
add
pop
pop
sbb
movsl
sbb
or
adc
jl
add
sub
lods
imul
loopne
or
lds
sub
inc
js
into
cmp
sub
mov
sahf
jle
push
insl
pusha
jmp
xorl
mov
lahf
insb
rorb
sub
lsl
jb
adc
shll
sub
pop
push
lea
dec
icebp
push
or
jl
bound
test
add
pop
mov
push
or
leave
jmp
rcll
push
or
shll
enter
test
lret
and
dec
pop
ret
clc
jbe
clc
add
add
shrl
add
cmpsl
jbe
push
fists
cs
mov
add
out
loope
cmp
add
imul
sub
test
xchg
xchg
clc
jmp
nop
pushf
xorl
jne
sub
hlt
int
lock
dec
mov
push
dec
xor
imul
push
or
and
out
inc
lcall
or
into
or
add
arpl
jns
insl
in
jno
xchg
fnstsw
cmpl
mov
inc
leave
lods
repnz
add
das
add
mov
jg
sbb
dec
add
shrb
and
sbb
mov
add
clc
cmc
mov
lock
push
push
lahf
mov
pushaw
pop
cmp
call
loopne
or
or
xor
cmpsl
xor
add
lea
fwait
in
or
jmp
decl
inc
pop
orb
mov
mov
shl
jl
cmc
fmull
fstl
mov
loopne
adc
rcll
jl
jne
lea
xor
subb
dec
lods
push
mov
cmp
repz
iret
repz
aaa
cs
std
push
adcb
lcall
pop
ror
xchg
mov
aaa
xchg
mov
testl
imulb
mov
sti
push
or
inc
cmc
mov
sub
mov
pusha
push
inc
in
and
pop
mov
pop
hlt
je
push
cltd
mov
inc
faddl
mov
popa
push
jmp
mull
shrb
pop
mov
dec
push
jp
xchg
fst
fidivrs
test
jne
push
push
test
jmp
lock
push
sbb
xchg
testb
cmpsb
movsl
fnstsw
or
push
or
adc
daa
adc
mov
sbbl
add
add
insl
popa
nop
dec
sub
push
sti
push
ljmp
daa
loope
xchg
ret
xor
xchg
dec
in
js
je
and
adc
popf
or
popf
pop
cs
xchg
fadds
movsl
lock
sarb
in
mov
lods
std
lahf
cmpb
xchg
cwtl
jne
inc
pop
mov
push
pop
imul
lock
pop
mov
imul
push
fwait
in
xor
stc
out
dec
mov
xchg
rol
dec
stos
jno
movsl
aas
mov
idivb
rorl
pop
fiaddl
scas
or
mov
xchg
out
sbb
dec
jecxz
cmp
inc
mull
cmp
adc
adc
mov
mov
or
scas
rcll
lret
in
mov
dec
call
inc
sub
daa
dec
dec
jne
or
lret
and
andl
js
cmp
mov
insb
subl
fistpll
imull
popa
mov
and
mov
xor
out
lods
es
shrb
xchg
test
pop
mov
push
or
inc
cmpsb
push
xor
pushl
pop
lahf
ja
aas
insb
jne
inc
loopne
or
add
sub
scas
aad
pop
and
and
jne
cmpb
movl
enter
inc
xor
testl
icebp
pop
cmp
push
jmp
outsl
loope
fnstcw
loop
xchg
rcrl
mov
jo
or
andl
add
push
push
mov
sub
lea
pop
or
cmp
clc
fs
mov
ret
mov
pop
sahf
stc
jle
push
or
dec
mov
adc
push
scas
xchg
cli
inc
lea
lods
pushf
jmp
inc
testb
adc
push
negl
mov
test
cwtl
add
add
add
sbb
xor
sub
push
push
test
xchg
add
inc
and
xor
pusha
sub
xchg
popf
pop
rcl
jns
sbb
daa
add
mov
cwtl
add
sub
pop
je
movzwl
jne
and
mov
icebp
push
sub
enter
scas
jge
adc
frstor
inc
ss
or
mov
or
adcb
inc
int
push
adc
adc
pop
push
fsts
jp
pop
sub
repnz
fdivl
xchg
sarb
std
into
std
sub
push
mov
ret
sub
insl
jge
push
lahf
popa
icebp
popa
pop
sbb
adc
sub
inc
outsl
das
insb
loope
iret
mov
push
mov
shlb
popa
jne
sub
nop
mov
push
cmp
xor
jbe
mov
cmpl
mov
lret
mov
add
sbb
loop
or
mov
ret
lret
jl
inc
dec
push
mov
cmp
subl
int
sub
push
and
mov
pushf
push
cmpb
mov
mov
scas
test
mov
loope
or
mov
into
sub
test
xchg
cmp
daa
add
dec
push
mov
sbb
add
mov
nop
test
lcall
inc
push
ret
sbb
mov
inc
inc
pop
xchg
shlb
dec
sub
sub
ja
adc
and
rorl
daa
mov
mov
jne
xchg
xchg
fistpl
lods
std
jp
sub
sub
cli
adc
cli
addb
inc
sub
sub
data16
cmp
dec
cs
subb
shl
pop
pop
in
pushf
jmp
push
mov
dec
je
inc
push
cmc
sbb
nop
rol
imul
sub
xchg
mov
or
jmp
test
sbb
int3
mov
test
sbb
jg
fisttpll
pop
int3
cmp
lahf
shrb
test
jne
dec
and
add
test
int
push
call
mov
fs
loope
and
mov
and
add
pop
jmp
fwait
cli
xor
jl
or
fstpt
sbb
mov
je
and
push
push
push
push
mov
and
add
ror
nop
dec
ret
and
adc
mov
mov
aaa
mov
jmp
int
sub
movsl
jmp
inc
mov
inc
jo
inc
addb
loopne
inc
sub
xor
xchg
mov
mov
daa
popa
test
pop
mov
mov
mov
fmull
adc
lea
mov
mov
cs
ret
lret
pop
shrl
leave
or
andb
repz
cmpsb
pop
gs
fdivl
push
mov
test
xor
push
enter
stos
push
lea
cmp
pop
xor
pop
enter
pop
add
lods
mov
pop
pop
jecxz
rcrb
xchg
or
mov
or
int3
mov
sbb
add
add
je
sub
jno
push
xchg
xchg
imul
test
sbb
xchg
pop
and
mov
pusha
push
das
inc
or
mov
mov
aad
mov
scas
push
xor
push
dec
mov
push
arpl
mov
or
enter
mov
in
sbb
enter
lds
or
jp
add
xor
mov
ljmp
sbbl
test
push
lea
shrl
movsl
pop
aad
xor
enter
int3
es
in
enter
pop
lea
xchg
pop
cmp
jae
dec
inc
lea
mov
repnz
shr
in
fsubrs
sbb
and
jb
lea
or
xor
clc
mov
test
enter
lods
mov
inc
jb
mov
pop
ds
pushf
mov
les
mov
xchg
adc
test
xchg
pop
inc
dec
inc
lea
repnz
adcl
movsb
push
and
sbbb
lods
lods
lods
movsl
sbb
mov
mov
jb
hlt
and
imul
add
jbe
push
mov
movsb
or
ss
add
push
push
add
pushf
or
out
inc
add
clc
add
mov
xor
pop
je
adc
and
push
add
pop
add
xor
clc
sbb
add
mov
mov
pop
push
inc
and
push
or
push
sbb
mov
cmc
xor
fistps
push
jmp
in
test
jmp
mov
xchg
mov
mov
pop
jbe
xchg
add
push
jg
mov
adc
sbb
lods
xor
xchg
lock
ss
or
or
lret
shlb
nop
movsl
dec
sub
and
mov
add
shlb
xor
cld
dec
sbb
loop
cmc
add
jecxz
ds
pusha
shl
pop
and
add
in
ret
mov
out
add
loopne
subl
test
clc
ret
in
push
rcr
in
push
in
sbb
shll
add
or
je
jmp
and
into
popa
outsb
lret
sub
ret
adc
shll
std
cld
sbb
ret
ret
lret
cmp
sub
adc
mov
idiv
adc
push
fdiv
xor
dec
cmp
je
pusha
and
or
out
int3
or
and
movsb
and
jne
lea
popa
add
sub
in
scas
call
add
mov
shll
fucomip
stos
bound
and
cmp
ljmp
or
movsb
and
in
dec
hlt
mov
jp
call
test
jne
push
adc
push
pushf
or
inc
add
xchg
dec
imul
ljmp
xchg
pop
lods
add
inc
cs
clc
repnz
adc
dec
sti
mov
or
pop
add
mov
add
sub
dec
or
ror
mov
add
add
fs
or
jmp
outsb
sbb
fidivl
popa
cli
pop
xor
add
and
sub
jno
add
pop
dec
jne
cmpl
jne
lret
mov
xchg
sbb
and
cmp
add
fildl
add
mov
ss
test
popf
shlb
popa
rcl
adc
rclb
mov
adc
adc
jae
xor
and
mov
rorb
std
mov
cli
add
mov
scas
inc
mov
popa
mov
pusha
mov
push
xchg
clc
and
sti
loopne
call
cmp
ljmp
mov
sub
adc
inc
fs
mov
cmpl
pop
subl
sbb
cmp
lea
in
inc
scas
cs
mov
jp
push
in
test
cmp
fs
rcl
pusha
addl
rcll
inc
test
sahf
pop
or
xchg
push
pop
ret
cwtl
rolb
jo
or
and
lods
sbb
cmpsl
xor
push
sbb
and
adc
stos
rolb
sarl
ficompl
add
push
add
pop
imul
ret
mov
push
clc
cmp
enter
lcall
mov
inc
push
adc
or
sbb
mov
lods
pop
cmp
outsl
mov
ret
jbe
add
cs
sahf
inc
sbb
jne
adc
scas
mov
pop
hlt
imul
adc
and
loop
pop
pop
jne
out
test
dec
adc
add
sub
pop
sub
enter
or
adcl
stos
add
xor
jne
xchg
adc
push
push
stos
add
pop
pop
sub
inc
imul
loopne
add
gs
sti
in
lock
cld
enter
or
jne
dec
mov
dec
and
rcr
inc
neg
test
addr16
add
add
call
adc
data16
jp
add
inc
cs
je
ret
rolb
insl
mov
and
and
mov
in
cmp
push
out
ljmp
pop
int
mov
shll
into
shll
push
adcl
mov
idivb
test
les
push
aas
adc
gs
test
or
ds
and
test
adc
push
inc
std
push
or
xor
sub
xor
push
pop
mov
mov
lea
push
dec
lea
popa
push
dec
leave
int3
cmp
inc
sbb
jle
jae
lahf
add
jae
lods
xchg
push
decb
add
es
mov
andl
lea
push
xchg
test
pop
loopne
and
or
movsl
pop
sbb
pop
cmpsb
pusha
insl
dec
nop
lds
je
cltd
push
hlt
outsl
add
push
sub
lea
push
fld
jns
mov
sub
add
and
rcrb
out
dec
cli
cmp
push
pop
push
jg
loopne
int
sarl
cmp
movsl
nop
test
or
add
lock
movw
mov
addr16
mov
inc
and
xor
outsb
adc
or
and
cmp
jb
push
push
or
lods
shr
inc
dec
inc
call
push
add
xchg
mov
mov
hlt
nop
fidivrs
sbb
fs
shl
inc
aas
or
add
aaa
and
xor
nop
pusha
sti
pop
faddl
add
xor
aas
addl
jns
and
das
rorb
and
into
sub
shll
add
mov
or
nop
fstpt
in
mov
xor
sbbl
fstpt
or
or
jmp
cmp
pop
dec
iret
loopne
ret
add
xor
jmp
inc
jecxz
inc
les
add
or
movsl
andb
jo
movsl
es
push
sbb
dec
decb
je
test
mov
orb
jmp
mov
jmp
lea
movsl
xchg
cmc
push
mov
dec
inc
or
ds
aaa
xor
mov
mov
jne
jmp
or
add
or
je
push
add
movl
mov
add
adc
and
lods
inc
dec
adc
cmp
dec
hlt
mov
rorb
movsb
arpl
adc
xor
das
popa
loop
sub
dec
out
mov
jle
cmc
rolb
mov
push
adc
das
cmp
test
cwtl
mov
adc
lock
enter
add
lret
sbb
adc
notl
out
std
and
repz
inc
mov
bound
lock
rorb
inc
cmp
mov
mov
mov
cmp
cmp
cmp
test
jl
ret
mov
pop
cltd
std
xor
pusha
push
sbb
mul
negb
push
sub
push
lock
mov
mov
int
xor
and
dec
jbe
pop
mov
dec
movsl
out
add
fistl
cmp
dec
fidivrl
or
xor
mov
scas
or
xchg
fs
lret
push
jb
pop
sbb
addr16
nop
xchg
iret
out
add
jnp
incb
cmp
fldt
loopne
daa
jg
div
dec
movsl
xor
xor
add
aaa
or
popf
stos
or
mov
add
inc
and
xchg
out
fisubs
negb
stos
sub
idivl
adc
in
jl
js
cmp
inc
adc
adc
jns
inc
push
pop
xchg
cwtl
add
and
loop
sbb
inc
sbb
pop
adc
into
xchg
ja
rorb
sbb
or
jne
xor
andb
add
cli
andl
stc
pop
adc
add
or
push
add
sbb
jns
lock
push
lock
add
mov
dec
push
and
mov
mov
sub
sub
mov
adc
leave
push
data16
inc
jbe
adc
icebp
mov
adc
xor
mov
jne
gs
shlb
repnz
add
and
enter
and
sbb
rcl
jnp
dec
cmp
sbb
add
xchg
idivb
aam
hlt
jge
inc
push
es
cmp
jne
sarb
nop
mov
js
mov
xorl
xchg
add
adc
sbb
insb
mov
push
pop
in
cld
sti
std
mov
push
stc
idivl
subl
and
adc
out
ja
inc
lods
repnz
in
out
xor
loopne
xor
push
es
jnp
ret
cmp
fs
ret
pop
add
divl
mov
xor
and
fcoml
jns
addl
push
in
push
adc
movsb
je
movl
aad
jmp
sbb
cltd
xchg
push
aas
clc
and
jb
pusha
lods
jbe
shlb
add
jmp
out
push
or
rorl
xor
andb
add
lock
pop
lea
adc
push
mov
daa
bound
push
xor
mov
inc
or
sti
mov
enter
add
js
dec
jb
mov
pop
xchg
fadds
ret
sub
inc
add
jmp
rcrb
or
shlb
or
fcoms
or
jnp
lock
mull
lsl
jmp
push
pop
push
push
cld
out
int3
push
inc
shr
rcr
shr
rcr
or
mov
repz
cmp
out
out
fucomip
mul
pop
jb
cmp
or
cmp
or
xor
lahf
xor
adc
or
mov
sbb
lret
mov
pop
insb
insl
dec
xchg
push
sbb
or
sar
dec
sbb
je
inc
push
cmpl
lock
add
xchg
add
aas
negl
test
in
ss
fs
addb
sub
out
or
jp
mov
xchg
or
inc
mov
jb
sub
push
pushf
jp,pt
xchg
push
inc
adc
test
stos
movsl
add
xchg
popf
pop
xchg
dec
icebp
push
mov
fsub
test
inc
dec
adc
and
and
dec
cmp
scas
fsts
mov
scas
xchg
shlb
sarb
pop
push
bswap
jmp
insl
or
inc
push
inc
lock
push
push
sbb
out
insl
push
clc
insb
dec
and
sbb
jmp
dec
and
inc
or
loope
ret
mov
out
dec
or
add
adc
sarb
pusha
mov
xchg
mov
sbb
cmpsl
lods
ret
jbe
sbb
push
jmp
inc
adc
pop
add
xchg
faddl
push
jb
js
pop
add
push
adc
cmp
mov
pusha
test
push
daa
daa
xor
shrl
pcmpeqb
hlt
adc
repnz
inc
add
pop
dec
dec
and
test
pop
out
add
adc
or
test
pop
clc
lock
dec
jae
mov
addb
inc
lahf
jp
sub
adcb
jae
add
ss
dec
jmp
pop
jo
mov
mov
dec
add
imul
fcoml
lods
fsubrs
aas
and
add
out
sub
push
fisttps
mov
sub
push
inc
push
and
les
xor
ja
mov
bound
sub
cmpl
xor
mov
dec
addr16
jmp
mov
sbb
cmp
xor
sub
and
mov
test
sbb
inc
adc
inc
xor
add
add
or
xchg
test
imul
sbb
sbb
adc
add
sub
cli
sbb
or
mov
outsl
fsubr
push
fildl
push
jbe
adc
xchg
sti
shrl
ds
aaa
getsec
add
mov
inc
stos
mov
jmp
adc
outsl
push
push
stc
mov
int3
mov
or
or
sub
imul
orb
pusha
nop
aam
jmp
add
jbe
push
or
inc
fidivl
xor
mov
movb
sub
or
inc
out
xchg
push
imul
es
sub
xor
jg
jl
cmp
jg
inc
jmp
cli
fsubs
pop
hlt
lds
xor
gs
add
push
push
movsb
fisttpl
scas
push
cmp
enter
test
xor
pop
mov
sbb
dec
mov
mov
shl
inc
lock
adc
xor
les
sub
jbe
insb
jne
push
adc
and
ja
add
mov
stos
cmp
pop
sbb
jle
ljmp
jg
ljmp
mov
test
adc
push
and
ds
xor
iret
out
stc
jg
outsl
inc
or
jbe
jle
out
mov
jg
jg
jg
jo
mov
and
adc
mov
pop
dec
in
rclb
adc
sti
outsl
rorb
inc
out
js
sbb
mov
shll
jbe
inc
mov
xor
dec
rclb
or
inc
inc
push
negl
ret
psubq
test
lret
ret
mov
or
pusha
das
shr
dec
movsl
and
pop
pop
les
inc
adc
shl
mov
into
test
pop
in
test
fsubrs
xor
xor
push
and
mov
mov
xor
scas
ret
mov
mov
inc
in
and
stc
lds
shlb
jge
ljmp
ljmp
in
push
ret
add
cli
and
shl
addb
sbb
clc
or
shl
frstor
inc
js
jnp
mov
add
lret
cmp
loop
iret
mov
xchg
pop
inc
dec
lds
mov
jecxz
xor
sbb
ret
insb
pop
rcll
mov
aaa
pop
sub
or
in
add
sub
mov
shrb
dec
pop
sub
ljmp
call
cmp
or
or
rcl
pop
lcall
adc
movsl
stc
loopne
addr16
pop
jge
pop
add
add
xor
xchg
inc
test
or
rclb
adc
push
mov
push
push
inc
inc
add
or
and
and
pop
sub
sbb
sti
sub
xor
cli
adc
in
divb
lea
lea
or
adc
lods
movsl
int3
push
jl
cld
mov
and
cmpl
mov
mov
sbb
scas
jle
add
add
xor
sub
imul
enter
sbb
xor
cld
loopne
sbb
mov
out
adc
dec
and
pushl
add
ret
pop
jno
push
push
lret
xor
loop,pn
mov
mov
sub
xor
pop
sub
dec
or
in
xor
jge
inc
cmp
ds
icebp
xor
add
jbe
sub
ds
es
shlb
inc
or
adc
or
out
fnsave
add
add
add
jnp
adcb
pusha
rclb
leave
or
fs
ja
aad
dec
je
test
cmp
imul
jne
push
jnp
mov
add
xorb
or
pop
nop
ljmp
lods
add
mov
test
add
mov
mov
addl
mov
fstp
aam
je
iret
andl
out
data16
es
lret
add
pop
push
xorb
or
sbbb
test
push
loopne
mov
sub
add
inc
fnstsw
rcll
sub
es
xchg
sub
std
mov
jmp
aad
sbb
mov
sub
dec
or
or
imul
das
mov
jnp
pop
mov
ret
shll
adc
add
pop
pop
add
aaa
dec
fimull
dec
fadds
pop
or
into
lods
add
dec
call
lea
sbb
or
jp
inc
jo
adc
mov
push
push
int3
out
and
push
inc
mov
xchg
test
das
lret
insb
adc
leave
push
shlb
push
or
shlb
sbb
xor
and
ljmp
std
cltd
flds
mov
mov
inc
fcmovb
cmp
fistpll
and
outsl
push
jl
enter
jo
add
mov
gs
insb
mov
pop
stos
inc
mov
sub
push
push
nop
data16
imul
test
inc
mov
mov
cmp
inc
pop
daa
test
rorl
push
lods
mov
cmp
orb
add
xchg
inc
jmp
push
mov
cs
sbb
push
mov
hlt
ja
loope
sub
outsb
dec
iret
and
test
pop
xchg
orb
dec
cmpsb
mov
insl
add
xchg
push
cmp
push
mov
push
clc
add
test
loop
je
out
or
stos
pop
and
in
movaps
mov
movsb
andl
jmp
mov
jb
test
stos
popf
add
adc
pop
mov
lea
sbb
inc
jle
iret
inc
jle
sub
cmp
xor
add
divl
in
mov
or
cmp
mov
xchg
std
xchg
aad
mov
out
add
pop
lock
test
pop
push
jo
adc
sbb
mov
sub
fildl
insl
mov
jmp
adc
jae
add
mov
mov
movsb
jne
pop
fisubs
dec
dec
jae
imul
sbb
ret
push
jmp
and
or
xchg
rclb
loop
dec
bound
xchg
out
repnz
or
xchg
movsb
in
cwtl
int3
pop
add
imulb
addb
stos
push
cmp
mov
lods
sub
pusha
popa
jmp
repz
stos
pusha
and
cmpsl
loopne
je
mov
push
jge
push
popa
loop
inc
nop
mov
mov
add
jo
in
loope
sub
testl
and
lret
jmp
sub
dec
dec
or
iret
pop
cwtl
inc
idivl
repnz
mov
aaa
adc
rolb
jg
call
jecxz
push
push
int3
je
clc
inc
jmp
cmp
pop
xor
icebp
sub
dec
mov
dec
jbe
mov
hlt
aaa
jne
stos
loopne
adc
add
xor
pushf
lret
xchg
push
fsubrs
cwtl
jge
dec
aam
repnz
mov
jecxz
out
sub
cmp
cmp
mov
mov
xor
cmp
add
into
outsb
das
pop
jle
xor
adc
push
loopne
adc
adc
add
clc
aaa
call
add
mov
andl
rcrb
mov
jge
cmp
jb
dec
jge
movsl
add
mov
into
divb
adc
push
cmp
or
xor
fnstsw
shll
roll
or
push
popa
pop
rclb
xchg
aam
andl
pop
mov
std
mov
sbb
or
mov
and
inc
sbb
testl
push
ljmp
out
les
dec
into
clc
gs
sub
jne
inc
or
cmp
adc
push
dec
sbb
push
js
xor
xchg
pop
dec
xchg
mov
xchg
ljmp
add
test
push
pushf
fdecstp
push
mov
push
lea
lcall
mov
mov
adc
sbbb
pop
sub
push
jg
xor
cmp
jb
mov
add
inc
ja
shlb
inc
loope
incl
cmpl
insl
mov
pop
test
inc
mov
sbb
sti
jg
add
cmp
jle
or
xorb
aam
dec
std
call
gs
call
testb
shr
aas
or
rcll
push
clc
pop
mov
bound
or
adc
inc
mov
sahf
add
notb
je
idiv
pop
pusha
cmpsb
push
shrl
shl
shr
or
mov
lock
sahf
dec
mov
jne
outsb
mov
shl
push
mov
daa
jno
sub
push
cmp
aad
jne
into
adc
mov
add
push
adc
andb
orl
fiadds
push
out
push
mov
fisubrl
js
andl
ljmp
dec
and
xchg
jl
dec
int3
int3
jmp
push
fimuls
out
or
daa
mov
pop
lret
into
jmp
imul
mov
and
les
loop
loopne
int3
and
cmpsl
pusha
sbb
lret
bound
xchg
pop
sahf
sarb
jns
sub
test
imul
movsb
fidivs
pop
mov
inc
mov
inc
adcb
in
xchg
add
imul
fdivrl
imul
loop
iret
shrl
movsl
lcall
push
mov
sub
adc
pop
popa
push
mov
or
orb
mov
dec
adc
sbb
mov
xor
inc
subb
scas
clc
imul
addr16
sub
jg
xchg
dec
dec
jne
ficomps
xlat
push
mov
movb
or
inc
fst
pop
pop
push
lock
nop
cs
or
or
add
test
jo
pusha
mov
mov
jnp
imul
es
mov
cmp
pushf
mov
jb
dec
in
and
add
ret
push
addl
mov
fstpl
push
xchg
out
pop
imulb
sub
int
cs
mov
and
shll
inc
mov
fwait
icebp
add
pushl
popf
clc
xorb
mov
mov
mov
call
dec
rcrl
daa
inc
jne
data16
and
and
pusha
pop
je
adcl
mov
or
xor
repz
out
inc
inc
inc
jo
mov
shrb
aaa
mov
jnp
testb
adc
divb
punpckhdq
fistl
sub
push
ret
xchg
loopne
inc
mov
inc
inc
cli
pop
pop
ret
in
cs
pusha
inc
sub
dec
push
mov
bound
mov
inc
dec
cli
shr
add
test
fdivrp
insl
andl
lods
and
add
ret
lods
mov
cli
inc
rcrb
popl
pop
sub
xlat
jmp
xor
sub
cld
push
or
sub
add
adc
movl
daa
adc
push
andb
pop
bound
into
leave
sub
cli
cmp
push
mov
pop
add
dec
sub
mov
loope
stc
mov
rorb
arpl
pushf
mov
int
dec
xor
push
adcl
aam
and
xchg
push
loopne
sbb
adc
loopne
gs
adc
insb
pop
mov
ret
mov
aam
adc
or
filds
xchg
jle
enter
cmp
inc
loope
push
lea
fstpt
inc
add
leave
shlb
and
mov
call
or
dec
adc
xlat
sbb
mov
into
add
and
mov
or
addb
int
dec
pop
ret
sub
aam
pop
add
ljmp
or
js
je
mov
stos
dec
pusha
cmp
cmpb
push
push
pop
or
push
or
and
imul
and
sbb
rolb
mov
add
or
or
xor
xchg
idiv
push
xchg
mov
mov
andl
cld
and
cwtl
fs
and
push
adc
xchg
lods
dec
out
lret
add
cld
adc
push
insl
cmp
fsubs
xor
push
push
loopne
scas
lock
inc
inc
call
jmp
cltd
pop
es
bound
outsb
mov
les
adc
hlt
rcll
adc
add
dec
imul
sbb
popa
push
push
inc
bound
push
or
push
xor
dec
or
outsb
xadd
rcr
cmp
lahf
inc
divb
int
imul
dec
push
test
cmp
push
add
daa
inc
mov
loopne
add
and
clc
add
xor
rol
pusha
sub
add
jnp
repz
push
jmp
push
push
adc
in
dec
pusha
dec
iret
and
add
sub
jo
xchg
sub
pop
sbb
inc
add
pop
sbb
add
cmp
cmp
fstpt
lahf
fstl
mov
sbb
mov
imul
inc
bnd
mov
stc
clc
mov
and
mov
std
ds
adc
lret
out
adc
dec
xor
jae
mov
daa
clc
push
imul
mov
adc
addl
pop
imul
xchg
and
mov
fisttpll
xlat
outsb
and
mov
daa
ret
sub
or
xchg
nop
orb
add
rol
movsl
dec
andl
fildll
fs
pop
jns
es
dec
or
add
add
jg
sbb
mov
or
data16
mov
cmp
sub
or
and
push
mov
imul
popa
add
adcl
daa
movsl
jne
leave
adc
lods
stc
jo
or
cmp
jmp
dec
rolb
mov
test
cmp
push
sarb
pushf
repnz
push
or
dec
xchg
inc
xor
push
push
mov
adc
or
inc
inc
fisubs
test
lock
outsb
test
adc
faddl
mov
jo
lret
jmp
inc
mov
xchg
rcll
outsl
rcll
aas
push
rcr
adc
inc
lods
cmp
sub
sub
jne
adc
pop
in
cli
inc
je
negb
add
cmp
loopne
xchg
cwtl
inc
je
xor
cmp
aas
and
sbb
testb
sub
bound
jecxz
inc
enter
fisttpll
adc
mov
stos
push
test
aad
pop
test
fstpl
or
jl
cmp
or
add
aam
orl
xor
scas
mov
sbb
popa
push
ss
xor
adc
pop
and
mov
lds
mov
adc
adc
push
add
rorl
adc
inc
leave
dec
pop
int
xchg
daa
add
mov
daa
xor
mov
testb
pop
pushf
push
inc
ljmp
fimuls
ret
mov
and
cmp
scas
push
xchg
add
mov
imul
adc
scas
lea
jmp
xor
sarb
jbe
hlt
lea
cmp
dec
mov
outsl
loopne
inc
mov
jmp
test
push
scas
mov
push
jge
enter
jl
stos
jmp
popl
std
addl
js
pop
sbb
jmp
fmull
add
push
xchg
or
psrad
mov
std
loop
adc
mov
jb
inc
bound
lcall
ss
add
enter
adc
cli
adc
push
faddl
imul
fxam
roll
and
in
mov
dec
mov
inc
add
inc
jmp
xor
test
jge
mov
or
jl
adc
push
imul
movsb
push
movsl
pop
pop
icebp
fisttps
adc
and
pop
add
imul
sub
mov
push
or
sbb
sarl
sub
push
bound
add
sub
pop
add
mov
movsb
scas
pop
shl
lock
lock
dec
les
es
cmc
dec
adc
jbe
xchg
sbb
or
and
rcrl
jo
cmpsl
testl
push
jo
inc
roll
addb
fsubrl
arpl
test
and
mov
data16
push
pop
cwtl
mov
outsb
push
jne
push
aas
out
arpl
jge
int
xor
pop
aas
loopne
stos
xorb
push
add
xor
and
daa
pusha
pop
mov
andl
xlat
sub
adc
insl
push
std
adc
loope
xchg
sbb
sub
adc
push
ret
push
pcmpeqw
cmp
mov
mov
test
mov
jmp
loop
adcb
xchg
jecxz
lea
pop
add
pop
mov
adc
push
mov
js
pop
mov
push
das
ds
cmp
cmp
add
arpl
jle
mulb
in
in
imul
dec
or
lea
cmp
iret
xchg
sti
xor
subl
js
loope
cmp
jg
cmpb
pop
sub
ss
or
jne
rol
les
xor
mov
push
sbb
popa
pop
jl
rorl
mov
push
push
es
dec
les
jb
pcmpeqb
xor
dec
je
ljmp
mov
pushf
jb
jmp
jl
jl
mov
pushf
xor
push
jno
aaa
adc
jo
loopne
xchg
fcmovnu
fnstsw
sbb
pop
lods
push
add
test
outsl
xchg
test
inc
jo
cld
cwtl
andb
sbb
lahf
insl
loopne
dec
pusha
and
pusha
jne,pn
sbb
rol
inc
mov
xor
jo
adc
add
cmp
mov
mov
pop
dec
jle
cli
fsubr
fldl
sub
xchg
push
icebp
in
xchg
add
popa
xchg
push
cmp
jmp
cwtl
andb
cmp
and
pop
stc
xchg
add
sub
push
daa
push
adc
shl
and
jbe
or
incl
sbb
fstpl
mov
inc
cmp
roll
lret
out
xor
sub
daa
iret
dec
sbb
in
cmp
orl
push
adc
xor
mov
jno
add
data16
cmp
or
xchg
stc
jb
or
test
push
flds
or
sub
call
add
rcll
mov
or
pop
xor
mov
cmpb
shll
adc
jo
mov
test
daa
push
xor
or
inc
and
adc
outsb
insl
lods
add
push
repz
inc
xor
and
subl
add
repz
adc
ss
decl
push
into
lock
add
inc
mov
pop
decl
jge
pushf
clc
inc
enter
in
dec
imul
xor
popa
loopne
push
insl
cli
or
sbb
sbb
xorb
jne
mov
xchg
jo
mov
mov
mov
push
das
imul
or
xchg
xchg
movsl
cwtl
inc
cmp
sbb
es
mov
mov
xor
imul
mov
cmpsb
imulb
fsts
add
orl
mov
mov
pushf
imul
fstpt
in
ja
cwtl
xor
push
in
sbb
lahf
daa
mov
loope
jbe
test
add
cmp
fldt
xlat
or
mov
mov
stos
or
push
mov
jne
add
xor
out
shl
or
or
ret
ret
pop
cli
xor
jle
test
je
cmpsl
xor
jae
or
aad
push
add
arpl
in
in
and
jg
add
cld
dec
jg
cmp
int
cmp
dec
test
lods
push
jns
enter
test
icebp
push
in
mov
sbb
jl
sbb
flds
clc
test
push
leave
je
mov
and
test
sub
sub
dec
inc
int
jb
shlb
rorl
or
in
ss
adc
ss
leave
leave
and
sub
ror
leave
xor
cmp
dec
fwait
push
sbb
inc
inc
setae
push
push
in
in
pop
add
in
in
insb
jo
add
jl
xchg
dec
rcrb
mov
and
xchg
cwtl
xor
and
pushf
mov
dec
test
shlb
enter
xor
sarb
xchg
dec
fsub
in
xchg
dec
es
es
lock
clc
and
pushf
fs
add
add
mov
loopne
add
xor
adc
adc
sbb
cltd
fs
and
sub
fs
dec
xor
cltd
orb
inc
gs
xor
inc
es
dec
mov
and
dec
push
pop
pop
and
dec
xor
pop
call
push
xor
ficoml
sbb
and
inc
or
jl
or
xor
xor
mov
fiaddl
jl
and
adc
sbb
imul
nop
inc
lcall
movsb
cltd
cmp
nop
inc
inc
mov
or
movsb
mov
mov
dec
mov
test
inc
insb
pop
notl
mov
sub
rorl
push
ret
fisttps
dec
xchg
add
call
js
mov
mov
bnd
mov
pop
rcrb
or
cld
dec
xchg
pop
mov
add
and
rorb
xchg
test
and
test
and
xor
rorb
add
or
or
into
or
addr16
int3
not
xor
loope
xor
and
cmp
enter
add
jmp
add
and
cmc
cmpl
ret
js
lock
add
or
jae
adc
sub
add
cmpsl
insl
or
shll
and
adc
sub
daa
aad
clc
incb
mov
adc
lock
and
mov
cmp
add
jl
and
jecxz
sbb
out
jae
add
or
daa
or
adc
and
push
adc
or
aaa
jge
je
or
xchg
flds
mov
pop
adc
pusha
mov
pusha
loope
pop
sub
xor
or
movsb
sub
fnstsw
pusha
inc
insl
hlt
push
pusha
fldl
cmp
xchg
cmp
roll
testb
push
sahf
lret
adc
sti
add
inc
clc
mov
pop
xor
mov
call
ret
mov
mov
test
or
orl
scas
jmp
push
and
pop
xchg
loopne
call
in
push
add
out
and
sbbb
push
jb
sbb
sub
and
or
aaa
and
add
inc
flds
fstps
jmp
fisttpll
push
inc
arpl
pop
lods
adc
faddp
pop
mov
movsl
pop
sbb
hlt
adc
orb
push
fildl
xor
test
or
cmp
dec
adc
xor
shll
icebp
scas
sarl
or
push
inc
hlt
pop
dec
movsl
lahf
xchg
xchg
push
aaa
sbb
out
lea
dec
cmp
and
xchg
fcomps
testb
pop
sub
jmp
sub
sbbl
sub
fldcw
and
test
into
adc
xor
scas
or
sub
in
or
and
lea
xor
ja
and
or
mov
cli
hlt
xchg
test
jge
fnstsw
les
repz
lret
xchg
inc
mov
inc
rorl
add
repnz
ss
cld
shrb
xchg
test
pusha
loop
adc
cli
shrl
mov
pop
orl
fchs
lcall
push
cld
xchg
pop
lds
pop
jmp
pop
push
push
nop
pop
add
icebp
sbb
cmp
loopne
cmpsb
dec
inc
sub
daa
add
push
lcall
push
and
push
add
xor
int
or
fisubs
sbb
cmpsb
lret
lock
pop
adc
mov
xchg
repnz
or
add
sarl
add
add
ret
call
inc
cmp
je
mov
adc
or
pop
cltd
cmpsb
imul
and
hlt
push
rclb
movsl
and
out
and
mov
iret
and
xchg
es
xchg
jge
sti
lds
repz
pop
fstpl
add
in
imulb
jno
aad
or
and
loopne
push
xor
push
add
push
cwtl
and
cli
into
sub
popa
or
orl
pop
mov
jno
ret
insl
scas
adc
mov
adc
lock
in
push
mov
inc
add
push
clc
or
aas
pushl
cld
sub
icebp
js
fcoml
sar
das
adc
add
jecxz
and
xor
xrelease
cwtl
imull
test
or
mov
lock
mov
faddl
jo
lea
and
sbb
inc
cmp
hlt
sbb
mov
incb
inc
xor
push
sub
call
pop
lret
sahf
mov
lock
or
mov
and
decb
out
cmp
sarb
and
pop
rcrb
jmp
add
into
pop
lods
sbb
test
in
or
enter
add
rcr
pop
fstps
jnp
lock
neg
lods
push
xor
test
mov
imul
mov
icebp
das
cmc
dec
in
outsl
test
jp
gs
or
imul
push
or
add
out
mov
push
iret
jle
stos
push
xor
push
in
push
cmp
nop
fsubl
sbb
rcrl
jbe
sub
push
push
mov
sbb
adc
xor
gs
dec
ljmp
setnp
jge
movswl
sbb
xor
fnclex
and
lcall
not
dec
xor
in
lods
dec
sbb
or
insl
or
lock
leave
push
push
mov
or
sub
push
aam
test
fwait
xchg
jbe
cltd
fsubs
outsb
fwait
sbb
pop
mov
repnz
jo
icebp
jle
movsb
fldpi
xor
jo
js
xor
shll
xlat
dec
jecxz
add
inc
je
sbb
mov
scas
xsaveopt
push
inc
xchg
pop
mov
xchg
ja
or
andl
sbb
or
inc
call
mov
jl
icebp
pop
shrb
or
push
sbb
aam
jecxz
fnstsw
fistl
mov
test
pop
jne
fldt
imul
gs
add
imul
out
inc
lret
push
ja
movsb
or
outsl
inc
test
clc
inc
mov
fwait
pushf
scas
cltd
mov
inc
and
mov
cmp
adc
or
jo
mov
push
nop
lret
je
inc
or
fdivr
mov
shll
push
add
mov
jbe
shlb
test
shrl
negl
cmp
xchg
or
or
fs
mul
cmpsb
push
or
inc
add
loope
rcrl
les
cmp
mov
or
mov
dec
imul
dec
push
or
inc
cltd
lock
add
jle
sub
push
and
add
cmp
and
inc
mul
pop
test
pop
mov
jl
xchg
rcr
jne
movsl
lock
stos
jp
pop
pop
int
jmp
sub
cli
clc
inc
sbb
dec
push
mov
adc
cmp
add
lcall
scas
scas
fwait
mov
incl
add
inc
lea
pop
xor
lret
dec
movb
rolb
ljmp
not
test
bswap
and
add
pop
repz
outsb
mov
mov
out
sbb
mov
inc
adc
iret
cmpsb
mov
mov
mov
sub
or
or
cmp
inc
lahf
jmp
xor
dec
cmp
or
jp
or
jae
add
adc
dec
decb
sub
jns
fsubrl
sarb
push
and
fdivrs
enter
mov
jge
je
inc
mov
mov
cmp
cmpb
inc
stos
inc
std
push
dec
cmp
or
or
dec
xor
cmp
movb
das
lahf
push
jnp
sub
loopne
mov
shl
sub
sub
mul
lea
mov
and
loopne
or
ds
push
or
or
cs
aam
out
sub
mov
jecxz
and
inc
shl
push
xchg
inc
faddl
sbb
or
lock
or
dec
jns
mov
push
adc
dec
lds
faddl
cli
push
sbb
test
push
pop
mov
jle
mov
into
loopne
shl
test
lcall
cmp
aas
or
mov
lods
fsubr
pop
pop
push
push
jb
inc
jae
and
repnz
incb
jno
clc
aam
mov
dec
jns
cmp
and
pop
movsl
mov
cmc
hlt
push
pop
lock
aas
mov
mov
pop
daa
xchg
bound
cmc
cmp
sbb
adc
xorl
add
popa
sbb
and
add
push
cmp
andl
out
into
lea
jo
out
call
mov
mov
and
and
in
sbb
sub
mov
inc
xchg
jge
testb
shl
test
cmp
add
shl
or
fidivl
or
add
cmp
sub
lret
scas
test
and
or
mov
add
add
sub
push
xchg
inc
add
cmpsl
inc
cs
inc
inc
add
les
or
ss
je
dec
mov
inc
dec
pop
xchg
lea
adc
jne
mov
leave
jae
pop
or
faddl
std
loop
rcrb
cmp
mov
inc
push
jb
mov
push
cwtl
push
inc
mov
mov
shll
subb
jle
pop
or
insl
lds
add
pop
stos
adc
xchg
xchg
adc
inc
lods
std
pop
jnp
cmc
or
ss
cmp
je
or
call
cld
aas
out
mov
dec
cmpb
je
mov
cmp
pop
jne
dec
lock
inc
mov
mov
int
inc
add
call
subl
pushf
lret
sub
add
and
mov
test
in
dec
sbb
jmp
xor
js
sbb
xor
mov
xchg
pop
or
inc
push
add
adc
jno
add
adcb
jecxz
xor
andl
jne
xlat
fists
inc
loope
dec
fdivs
or
add
jns
cmp
adc
push
pop
sbb
jge
mov
dec
mov
cmp
test
sbb
popf
sbb
push
cmpsb
adc
aas
sub
sub
lea
out
jle
pop
sub
jbe
cld
mov
icebp
add
sbb
add
add
lods
pop
or
cmp
fiadds
nop
push
pop
push
or
movsl
push
aad
je
rorb
ret
inc
inc
sbb
mov
dec
jns
neg
movb
rorb
jl
cltd
push
enter
int
cmp
or
add
call
add
fisubs
ror
jne
push
rorb
fisubl
push
push
push
add
sub
popa
fadds
inc
mov
aam
out
sbb
adcl
ret
and
sbb
pusha
mov
pop
jg
ret
jmp
add
mov
cwtl
xchg
jge
sbb
mov
xchg
sub
adc
adc
cmp
rclb
or
sti
cmp
xor
and
sbb
xlat
jo
and
rcrl
jecxz
and
outsl
addr16
cmp
add
mov
jno
xor
lds
stc
cmp
nop
cwtl
and
push
enter
fadd
xor
mov
flds
xor
mov
popa
into
jge
adc
mov
mov
pop
and
mov
push
and
inc
dec
shlb
mov
enter
cmp
xchg
sahf
clc
push
mov
cld
push
and
into
sub
xor
dec
cmp
xchg
inc
push
mov
sbb
imul
pop
out
dec
adc
or
ret
and
mov
dec
stos
fstps
sub
fdiv
aas
mov
dec
and
add
mov
push
pop
bound
mov
or
dec
sub
leave
and
add
insb
incl
xchg
scas
and
push
inc
inc
js
pop
inc
add
out
ret
popf
neg
sbb
mov
pop
outsb
and
adc
jg
ret
loopne
mov
jne
bound
xor
push
addr16
ljmp
mov
add
jmp
in
call
xor
les
add
add
aam
fisubs
or
mov
inc
or
adc
add
mov
add
push
clc
sbb
lcall
push
ret
js
fcomps
mov
push
fs
in
fs
cld
shlb
lea
enter
inc
xchg
cmp
jge
sbb
call
cwtl
xor
cwtl
xchg
add
data16
xchg
lret
cli
scas
inc
and
xor
out
xchg
cld
shll
sub
push
or
rorl
lods
pop
push
adc
pop
cmp
fisubl
arpl
lock
xchg
jo
mov
frstor
imul
test
mov
sarl
jg
jb
popf
testl
adc
pop
adc
neg
mov
cmp
sarl
test
jb
test
sbb
add
mov
push
lock
cli
sbb
mov
push
jg
mov
adc
inc
xchg
cmp
scas
dec
pop
or
or
sbb
xchg
add
xor
sub
test
ja
jecxz
and
les
cmp
es
cmp
xchg
and
mov
pop
xor
pop
mov
scas
jp
fwait
or
add
stos
sbb
push
mov
in
push
sbb
mov
jmp
lock
adc
sahf
xor
mov
adc
mov
call
inc
or
or
ret
subb
aaa
push
lods
lds
loopne
rcr
inc
mov
push
mov
push
or
addb
outsl
das
push
repnz
je
addb
pmullw
or
cmpsl
jl
into
roll
test
and
sub
sbb
ljmp
test
addl
sbbb
inc
es
jne
push
cmp
nop
push
data16
ds
and
xchg
bound
cmp
sub
push
leave
xor
enter
sbb
mov
push
push
lods
fidivs
lret
push
out
dec
roll
push
les
jno
jge
inc
or
loopne
add
push
add
pop
add
dec
popf
shl
fsubr
sbb
mov
ds
fstps
clc
gs
or
pop
data16
add
clc
cmpsl
lods
or
mov
int
imul
inc
je
dec
inc
jle
jle
xchg
xor
or
pop
or
mov
pop
sub
jae
sub
jmp
rorb
adc
popa
cmp
or
dec
orl
pusha
and
shll
push
movb
mov
add
sub
arpl
cmp
lea
xor
aad
cmp
mov
pop
scas
pop
mov
push
mov
mov
ja
xchg
cmp
sahf
sub
jp
testl
addb
sarl
push
inc
jmp
int3
and
test
push
xchg
inc
popa
sub
stos
jle
fstpl
sbb
cmp
notl
ja
xchg
cmp
je
cmp
add
sbb
pop
test
invd
bound
subl
jl
ret
das
lea
inc
jmp
adc
bound
add
fcmovnbe
adc
push
ret
mov
mov
cwtl
js
shll
es
pop
jbe
mov
xor
and
fldt
push
push
and
shll
iret
test
ret
dec
ljmp
pop
push
pushl
mov
pop
sub
fdivl
sbb
or
cmp
dec
push
sub
mov
push
push
das
sub
mov
pop
push
jbe
mov
mov
es
fwait
xor
pop
mov
sub
cmpl
roll
push
or
pop
sbb
adcl
rorb
or
mov
dec
lock
jg
insb
mov
push
mov
pop
inc
sbb
es
rorb
jno
lods
gs
sub
cmp
aam
scas
dec
xchg
dec
mov
ds
add
pop
jb
addl
test
mov
scas
lcall
je
dec
je
dec
push
push
jmp
or
and
jmp
push
and
sarl
mov
pop
adc
jmp
imul
lcall
jno
sbb
inc
add
add
int
or
and
aad
test
inc
sarb
and
sbb
or
jmp
or
adc
adc
cmp
pusha
mov
sub
and
rcr
inc
mov
or
xor
mov
or
jbe
shrb
add
fcoml
rcll
xchg
adc
adc
fiaddl
into
sbb
mov
xor
sbb
sub
xor
sbb
lods
mov
sbb
mov
and
mov
xor
or
sbb
in
insb
pusha
dec
sbb
add
xchg
mov
shr
dec
movsl
andb
or
mov
mov
lret
mov
cltd
pop
repz
shr
push
add
pop
add
or
add
shr
or
mov
mov
push
adc
test
and
add
mov
xchg
push
movsl
and
adc
lock
jns
insb
add
mov
hlt
jp
fimull
and
inc
lock
mov
inc
jl
in
sbb
cmp
xor
pop
and
dec
pop
ret
and
les
pop
rolb
sti
and
pop
xchg
rcrb
adc
fcoml
xor
fiadds
into
clc
add
mov
add
pop
lahf
inc
pushf
stc
rolb
dec
sub
sbb
inc
nop
mov
loop
adc
cmpsb
mov
mov
mov
mov
arpl
or
fiadds
xchg
adc
xchg
push
icebp
add
and
push
mov
sub
cli
jne
mov
fldcw
sbb
mov
test
add
lods
sub
mov
shll
and
aad
sub
popf
push
mov
nop
test
pop
sub
pop
mov
jecxz
push
and
add
jmp
loop
or
mov
leave
rcrl
dec
das
and
or
add
loop
repnz
lret
pop
shr
xor
xor
enter
pop
or
and
xor
and
enter
int3
test
sbb
xchg
sub
push
orl
sbb
mov
testb
mov
and
stos
fisttps
mov
rolb
adc
nop
cmp
sbb
fs
or
fildl
inc
imul
and
pop
cli
add
mov
sarb
or
ljmp
sbb
sbb
stos
shll
insb
outsl
gs
mov
cmp
fdivrp
or
dec
push
nop
mov
push
sbb
xor
sub
push
mov
test
decb
mov
fildll
sbb
test
nop
repnz
jne
sub
bound
add
lcall
xor
adc
add
ret
sub
adc
xor
fadds
xor
icebp
add
or
fdivs
call
mov
jmp
push
add
orb
outsb
stos
cmp
and
jnp
mov
jmp
ss
add
shrb
push
ljmp
jb
cmp
sub
adc
inc
es
pop
xor
or
cmp
insl
add
call
mov
cmp
jle
inc
and
or
sub
aam
dec
sub
pop
sbb
outsb
in
dec
leave
inc
in
mov
fidivl
pop
js
je
mov
adc
call
xor
cmpb
je
sbb
mov
incl
adc
add
push
test
call
push
in
jmp
loopne
push
push
push
imul
mov
dec
orb
and
aaa
jne
mov
dec
adc
cmp
popa
outsl
ljmp
imul
cli
jne
cmp
jne
jmp
out
or
jmp
dec
add
add
testb
or
es
or
or
cltd
or
adc
lods
xor
clc
out
roll
leave
add
in
js
je
mov
iret
adc
shrb
cmc
mov
jge
cmp
les
pop
sub
loop
mov
fs
sahf
jne
stos
leave
add
sti
int
mov
cmp
push
rolb
loopne
push
loopne
inc
add
dec
ret
call
or
lds
add
lea
push
push
js
mov
jge
inc
inc
push
neg
neg
jge
cmp
sub
inc
and
cltd
in
sbb
ret
and
int
sbb
enter
fcoms
add
scas
push
inc
and
fsts
xor
sbb
adc
xchg
mov
and
xchg
subb
dec
jns
fwait
mov
mov
dec
jne
pop
pop
pop
aam
push
sbb
cmp
or
jae
add
rcl
ljmp
shr
and
daa
in
sub
adc
cmp
arpl
idiv
and
maskmovq
cld
lock
lret
adc
notl
cmp
addr16
dec
or
fidivrl
pop
add
jae
adc
movsb
dec
ss
adc
inc
cli
xor
push
jne
cli
pop
sbb
push
or
aad
mov
into
jbe
rclb
aam
aas
xor
scas
je
hlt
dec
and
sbb
push
add
sarb
leave
rcrb
in
dec
inc
in
add
inc
inc
cmp
punpckldq
add
sbb
lock
adc
sbb
jmp
cmp
jo
lods
or
ljmp
add
xchg
rol
movsl
mulb
dec
lret
or
cld
inc
ss
or
repnz
aaa
dec
popf
and
or
cmpsb
stc
xor
mov
adcb
adc
cmpsb
je
cld
in
dec
rcrb
jne
arpl
or
inc
add
xor
pusha
inc
fldcw
enter
dec
mov
inc
es
test
sbb
ss
ret
jg
push
test
pop
xchg
mov
mov
mov
xor
or
mov
je
adc
aas
out
incl
cmp
jb
cmp
ja
add
cmp
adc
cmp
push
sti
xchg
jne
shll
leave
adc
loope
scas
mov
jl
pop
pop
dec
enter
cmp
add
mov
xor
mov
or
jb
lret
add
push
mov
subl
aam
pop
leave
insl
insl
sti
aas
scas
pop
push
jge
sti
inc
add
push
inc
mov
dec
pop
js
je
mov
clc
pop
dec
shrb
dec
dec
call
pusha
callw
sti
movl
add
jns
add
insl
rcrb
daa
jno
mov
divb
jne
push
adc
jp
shlb
or
mov
pop
adc
fdivr
inc
jb
mov
push
jne
push
andb
lcall
into
push
std
sub
add
sbb
jo
cmpb
mov
aas
cld
push
imul
add
shr
shr
clc
jmp
inc
imul
lea
sar
jne
mov
mov
mov
neg
xchg
push
ljmp
mov
cmp
call
xor
insb
mov
adc
imul
mov
addr16
cwtl
mov
adcl
push
add
jl
cmp
ret
or
dec
jle
rolb
repnz
add
loopne
adc
xlat
mov
mov
mov
sti
fldt
and
lea
inc
xor
nop
push
cmpsl
add
into
sahf
lock
pop
lcall
ja
adc
test
insb
jge
loopne
and
or
inc
testl
ljmp
fs
inc
or
cmp
or
mov
jne
lea
js
or
xor
inc
mov
push
lea
or
add
pop
dec
inc
test
push
jle
or
rclb
pop
mov
cmp
lods
shll
inc
in
pusha
lods
adc
in
xchg
mov
mov
mov
pop
aaa
dec
sub
lods
and
rorb
sbb
sbb
js
bound
shll
mov
add
shr
or
and
iret
push
loope
rorb
sbb
push
int
fdivrs
inc
imul
cmp
loope
inc
mov
in
push
int3
shrl
loope
shr
or
mov
cli
jmp
xor
nop
xchg
mov
push
sti
lock
arpl
jnp
ja
dec
and
lcall
mov
sub
cli
inc
cli
div
cmpsl
test
mov
cltd
lods
add
addr16
call
out
jge
sbb
in
dec
sub
adc
ret
add
pop
fisubrl
push
aam
scas
mov
mov
fidivl
fldenv
enter
jg
add
or
cmpsl
mov
dec
rolb
loope
xchg
mov
cmp
dec
sbb
jno
mov
jge
pushw
sbb
loop
rcl
xor
out
jge
je
mov
xchg
push
jb
inc
aad
jne
movsb
fwait
dec
in
aam
sub
in
push
mov
or
es
shlb
add
mov
sub
inc
mov
lcall
shrb
shlb
dec
ljmp
xor
inc
lds
mov
push
lret
fcmovu
mov
mov
insl
test
cmp
adc
mov
int3
jg
add
xchg
add
or
inc
add
adc
into
or
adc
dec
sub
nop
inc
push
in
or
jge
call
lock
cld
icebp
or
add
jns
loopne
jne
or
push
in
nop
sbb
sbb
pusha
mov
scas
push
outsl
pusha
add
sbb
sub
push
jl
mov
notb
fmuls
inc
mov
and
adc
cmc
add
pop
outsb
call
xchg
add
cltd
and
or
mov
mov
dec
add
adc
pop
inc
shll
push
sahf
mov
push
sbb
xor
fiadds
inc
imul
loopne
call
adc
call
mov
add
frstor
pop
add
and
mov
push
in
faddl
out
in
cmp
or
add
pop
push
sar
sub
out
pop
popf
inc
les
enter
addr16
mov
movsl
and
in
aam
clc
lock
inc
dec
enter
mov
mov
and
dec
int3
or
mov
sub
test
call
or
add
into
sbb
adc
or
mov
inc
ljmp
jmp
in
or
sub
cmp
jge
push
cld
stos
aas
sub
cmpb
or
add
dec
cmp
xlat
aam
inc
dec
add
add
fadds
test
mov
hlt
outsl
mov
ret
jp
jne
dec
orb
or
sub
jl
popf
in
filds
or
ret
and
inc
pop
dec
lds
inc
mov
jp
ret
adc
imul
popa
push
lcall
rclb
mov
mov
mov
sub
mull
or
push
push
mov
or
sub
imul
jle
xor
pop
jne
or
stos
int3
sbb
je,pt
xor
ret
sbb
adc
mov
push
cld
mov
ret
or
dec
lret
add
xchg
adc
or
orl
ret
addb
mov
iret
and
xchg
out
lret
into
pusha
inc
and
pop
or
fisubrl
and
pop
pop
mov
jbe
orb
push
sub
prefetchw
sahf
inc
ret
or
inc
dec
xor
add
push
mov
push
ficompl
jne
or
or
loopne
xchg
cmpsb
add
add
aad
lret
inc
je
pop
rolb
jnp
mov
out
sbb
or
push
pop
or
add
adc
jnp
sbb
and
mov
ret
ret
test
pop
fmuls
add
shlb
ret
mov
push
scas
popa
fdiv
shlb
push
xchg
sub
arpl
xchg
adc
or
nop
clc
mov
and
sub
test
sbb
xor
cmp
push
scas
andl
jo
or
mov
pop
rcrl
fadds
and
pushf
xchg
rcl
or
add
add
in
ldmxcsr
mov
into
or
dec
xor
adc
or
adc
xchg
into
mov
mov
sbb
and
sbb
repnz
push
inc
jg
into
into
outsb
fbld
and
sub
pop
sub
js
pop
or
sahf
mov
aam
adc
add
shlb
or
lock
pop
stos
sbb
stos
sub
pop
push
push
xor
mov
pop
lcall
add
leave
lahf
pop
xor
ds
xchg
out
adc
add
or
mov
mov
mov
cmp
mov
and
cltd
and
popf
ret
cwtl
sbb
imul
sbb
cmp
lods
mov
sub
pminsw
scas
push
out
mov
out
pop
test
or
mov
fldcw
ja
stos
xchg
mov
shrl
pop
enter
cmp
clc
xchg
sbb
sub
mov
fisubrs
xchg
sarl
popa
in
hlt
add
cli
xor
cmp
in
jns
je
rclb
ret
jo,pn
cmpsl
add
leave
div
jle
sbb
and
rclb
sbb
outsl
pop
out
or
sub
loope
ret
into
cmp
je
mov
ljmp
jb
hlt
mov
cmp
jb
cmp
jbe
ja
mov
dec
sub
jmp
push
xor
movsl
pushf
xchg
loopne
shrb
fisubrl
mov
lods
leave
lock
mov
cli
sub
or
aam
sbb
mov
jne
movsl
jle
push
inc
popf
lahf
fwait
repz
test
aam
movl
popf
test
mov
jb
fcompl
push
cmp
push
adc
loopne
pop
push
hlt
mov
xor
pop
test
ret
inc
insl
pop
and
push
push
mov
pop
xchg
sbb
and
cmp
xor
js
in
imul
mov
push
mov
inc
sub
pop
ljmp
xchg
out
aam
push
shrl
pushf
push
adc
and
test
adc
cmp
push
cmp
aam
cmpsl
cmp
inc
cs
cmp
aaa
sbb
dec
mov
dec
push
xlat
scas
pop
imul
cmp
add
and
enter
gs
stos
add
cmp
xchg
pop
jmp
ljmp
xchg
add
sahf
mov
mov
scas
add
mov
push
test
add
stos
bound
loope
jl
push
testl
divl
xchg
mov
loope
aaa
xchg
mov
push
adc
orl
mov
hlt
call
push
outsb
pop
or
ss
ret
push
push
push
pushf
int
inc
sub
add
sub
into
pop
sub
mov
inc
jge
mov
xor
mov
sahf
ret
and
sbb
ret
dec
in
push
in
lret
test
cli
jg
neg
xchg
jne
jg
sbb
enter
ret
sti
addb
dec
scas
push
mov
sbb
mov
fisubs
inc
enter
lea
adc
rclb
enter
push
mov
add
cmp
add
pop
add
xor
push
outsl
popa
dec
mov
aaa
push
jle
push
jmp
dec
fs
and
hlt
cmp
fimull
int
subl
push
js
aas
orb
mov
loopne
push
sbb
dec
sbb
xchg
aam
leave
inc
insl
push
add
lods
dec
sbb
arpl
xor
cmp
aas
mov
sub
add
inc
arpl
add
inc
xchg
and
mov
xchg
scas
mov
lods
xor
je
jg
or
scas
sbb
sbb
out
insb
xchg
push
and
mov
push
ret
adcl
aad
pop
cs
int3
or
and
or
sbb
add
in
repnz
inc
adc
add
inc
push
fisttpl
js
add
mov
or
sub
mov
loop
mov
adc
incb
jge
inc
cli
sarb
mov
test
and
xor
hlt
sub
dec
push
sub
daa
or
add
pop
dec
popa
add
push
push
push
mov
loop
sub
or
mull
mov
insb
or
xor
dec
dec
xchg
add
movsl
dec
in
or
daa
sub
pop
adc
or
adc
ret
push
xor
cltd
or
dec
adc
bound
pop
adc
dec
push
sar
bound
push
sbb
mov
jne
test
jl
repnz
pop
sub
fmull
pop
rol
rcll
stos
push
mov
adc
js
ret
cmpsl
aas
data16
xor
sub
in
or
push
seto
test
or
cltd
test
mov
sti
gs
add
add
push
pushf
ret
adcl
push
data16
ljmp
xor
xor
andb
roll
mov
pop
movsb
lds
shrb
daa
pop
pop
xchg
outsb
or
or
sbb
sbb
call
xchg
inc
xchg
mov
mov
ret
les
cmp
in
cmp
sub
cmp
sbbl
mov
cmp
xor
xchg
or
push
imul
pop
dec
or
into
inc
mov
adc
or
adc
adc
mov
daa
add
sub
loopne
adc
add
cmp
xchg
lock
cs
mov
fwait
mov
repnz
aam
mov
in
add
pop
xchg
sbb
pop
hlt
mov
mov
and
outsb
insl
clc
xchg
sbb
pop
mov
iret
sti
xchg
stos
hlt
aad
sar
addb
inc
movsl
add
addl
inc
inc
add
pop
sub
add
add
push
popa
sub
or
push
fisttps
ud2
imul
movl
pop
jo
jmp
push
mov
sbb
adc
adc
imul
xor
and
aaa
gs
dec
or
daa
loope
int3
cmp
jo
add
adc
pop
fidivrl
int
les
lret
loope
fsubrp
sub
mov
and
inc
imul
add
xchg
jge
cmp
mov
aas
or
movsl
jge
adc
mov
lcall
pop
or
mov
fildl
jo
roll
xlat
cwtl
pop
push
jle
pop
add
mov
popl
mov
out
jp
repnz
mov
dec
test
jg
adc
adc
lock
out
pop
lcall
mov
mov
add
icebp
cmp
push
pop
ds
mov
aas
sub
aam
into
popf
dec
pop
xchg
lock
fadds
in
repz
jp
dec
mov
pop
push
icebp
lea
add
adc
or
leave
outsb
and
or
inc
and
push
sbb
xlat
or
jb
lea
aad
aas
leave
jp
test
mov
dec
fstpl
sub
push
add
ficoml
testb
repnz
jnp
or
test
or
jg
sbb
inc
inc
loopne
loope
ret
cmp
cmp
cld
jns
mov
stc
mov
or
decl
and
pop
sarb
adc
jg
mov
inc
inc
jae
or
into
dec
lret
inc
cmp
bound
scas
and
sbb
push
xor
sahf
lret
push
cmpl
insb
mov
adc
mov
or
pushl
mov
and
lahf
dec
loopne
adc
out
cltd
gs
jno
idivl
in
adc
in
sub
ret
and
popa
roll
xor
jge
dec
imul
jne
and
mov
push
and
andb
sub
iret
dec
lret
and
mov
roll
pop
jae
dec
inc
and
cmp
movsb
bndstx
leave
or
inc
add
jno
mov
pop
xor
add
add
sbb
or
stc
dec
nop
cmp
jg
aas
jnp
push
roll
push
es
sbb
add
sbb
inc
pop
mov
jle
pushw
sbb
xor
rorb
sbb
fildl
xchg
mov
jg
aas
fildl
dec
add
fs
pop
jl
and
stos
mov
mov
repnz
sbb
aad
fwait
xchg
xchg
jo
sub
fstl
sbbb
outsl
jnp
iret
loopne
cwtl
shlb
adcb
clc
sbb
and
shlb
or
xor
popa
les
pushf
push
addb
movsb
fs
cltd
add
cmp
fsubrs
scas
lret
mov
repz
loope
mov
ss
fdivs
outsl
inc
jmp
xchg
ret
push
lods
inc
inc
lods
pop
outsl
xchg
outsl
xorb
sbb
pusha
popa
fmulp
cmpl
dec
cmpsb
pop
adc
outsl
mov
or
sbb
push
sbb
lock
dec
sbb
jg
push
dec
rclb
test
xor
lock
sbb
and
jns
mov
adc
addl
fcomps
cmpl
lds
stos
mov
xchg
mov
iret
push
pop
xor
ret
movsl
and
out
rcrb
sbb
lods
pop
push
inc
scas
aaa
fisttpl
or
cmp
xor
movsb
imul
dec
mov
daa
cmp
adc
adc
es
test
xor
cmp
inc
xor
cli
movsb
add
or
sbb
jbe
xchg
push
dec
inc
cmp
dec
push
data16
cmp
out
and
aas
or
push
es
jo
inc
dec
sbbb
mulb
mov
pop
je
bextr
sub
cmpl
push
call
jl
cwtl
jmp
ss
jmp
cmp
or
je
xchg
cs
push
mov
sbb
enter
jmp
outsl
sub
add
pop
add
sbb
add
push
dec
jno
fiadds
sbb
push
ss
xor
push
sti
inc
std
pusha
lret
repnz
test
and
cmp
and
adc
adc
jmp
ret
cmp
leave
aas
out
dec
je
dec
jne
push
and
sbb
jno
sti
add
fcoms
jmp
xor
rclb
inc
xor
sarb
je
adcl
inc
outsb
fdivl
insb
or
pushl
mov
push
icebp
enter
xor
inc
cs
adc
outsl
sbb
or
ds
add
cmp
mov
roll
sub
pop
jle
jmp
inc
mov
lea
lock
or
stos
inc
lods
mov
insl
inc
lahf
in
xchg
les
push
add
jbe
js
insl
pop
inc
hlt
push
cli
push
dec
or
jo
stos
cmp
les
cmpsl
call
js
cmp
jl
pop
pop
punpcklbw
push
push
shlb
push
clc
push
popf
push
in
cmpb
sub
add
and
int
xchg
and
inc
cmp
xchg
cwtl
add
les
imul
arpl
pop
sbb
pop
fmuls
cmp
adc
jle
test
enter
inc
mov
mov
mov
aad
loop
mov
xlat
push
test
jb
imul
adc
sbb
adc
push
shrb
leave
test
xchg
push
mov
pusha
add
fdivs
mov
mov
es
or
shl
push
mov
mov
outsl
imul
pop
test
pop
rcrb
jle
dec
in
js
sahf
dec
add
subl
jp
and
mov
sub
sbb
adc
jmp
pop
push
or
rorb
or
sti
inc
movl
add
test
je
addb
xor
mov
inc
inc
dec
pusha
shrb
test
fcomp
dec
add
push
cli
and
je
mov
or
mov
xchg
dec
hlt
adc
imul
inc
cmpsl
adc
fiaddl
and
mov
ret
push
lods
add
test
ret
ficomps
insb
fisttpl
fstl
orl
jg
jmp
adc
pop
roll
ss
and
xchg
call
sahf
jb
push
jge
jb
xchg
mov
mov
call
push
jl
scas
gs
xchg
and
pushf
and
adc
push
cmp
push
jae
scas
add
jno
and
sbb
test
jns
inc
bound
and
ss
mov
gs
push
or
adc
les
fdivs
inc
lret
push
sub
stc
pop
sti
inc
push
sub
add
and
mov
ret
fiaddl
pop
ss
cmp
dec
pop
mov
das
lock
enter
je
cmp
adc
cmp
jb
div
cmpsb
push
movb
xchg
testb
daa
sbb
or
jne
add
mov
cmp
push
sbbl
je
cmp
sbb
jns
jb
cmp
jbe
push
push
push
add
scas
in
push
inc
adc
inc
mov
cmpsb
call
call
and
dec
fnsave
out
pop
or
test
ljmp
je
and
js
mov
je
fstpl
pop
jmp
sub
dec
dec
ss
push
pop
pop
mov
mov
mov
mov
cli
addl
mov
mov
mov
mov
dec
ss
mov
insl
andb
inc
dec
add
ret
dec
jle
adc
lret
sbb
ja
jne
je
repnz
sub
repnz
add
dec
xor
add
aam
leave
in
add
cmp
cmc
jge
jne
pop
pusha
xchg
in
and
pop
enter
pop
test
add
push
mov
sbb
inc
or
inc
sub
xlat
into
xor
dec
insl
fdivs
aaa
push
and
and
js
mov
pop
and
fld
and
fildll
pop
pop
or
jl
jmp
jmp
cwtl
mov
xor
aaa
fcmovnbe
add
ss
or
mov
das
fcomp
cwtl
mull
jbe
test
cmpsb
pop
or
add
test
in
pop
movsl
xchg
jecxz
in
pusha
push
leave
mov
push
leave
inc
enter
fcomps
enter
lea
cmp
in
sarl
lahf
mov
mov
mov
arpl
test
xor
dec
or
inc
pop
insb
stc
mov
add
xchg
or
lock
lock
add
mov
imul
enter
in
ja
int
xor
aad
or
and
cs
adc
pop
sbb
xchg
push
cmpsb
dec
in
cmp
dec
xchg
xchg
call
xchg
xchg
in
lock
pop
mov
inc
pop
fdivrs
mov
xor
adc
fmul
pop
cld
aaa
and
add
jmp
cs
and
add
inc
test
shrl
xlat
xchg
mov
inc
sbb
pop
pop
xchg
mov
jo
and
sbb
je
roll
test
push
jae
sar
and
cmp
xor
cltd
add
inc
in
fsubs
in
ds
dec
in
iret
popa
loopne
pusha
test
fsubr
xor
jo
in
mov
lock
xchg
test
sub
testl
insb
and
cmpsb
enter
pop
mov
js
fnstenv
outsl
testl
imul
inc
fwait
in
lcall
add
add
call
inc
lock
popa
adc
pop
test
pop
jb
push
or
jnp
jl
filds
or
pop
nop
mov
mov
nop
fistpl
dec
arpl
sarl
dec
cmc
mov
xchg
or
in
loopne
xor
mov
cld
mov
orb
dec
mov
sub
fsubl
add
cs
and
cmp
dec
or
pusha
leave
mov
cmp
shr
outsl
aam
rcr
sbb
les
fs
test
push
xor
lcall
adc
add
inc
nop
pop
adc
shll
movsl
mov
adc
mov
push
jno
leave
and
adc
and
dec
insb
jo
add
add
inc
sbb
call
adc
ficoms
or
lea
fs
es
adc
rolb
ja
inc
mov
and
push
mov
mov
adcb
cmpb
inc
stc
xor
imul
mov
dec
repnz
sbb
shrl
sti
mov
jne
dec
and
push
inc
mov
pop
popa
ret
sbb
lahf
pop
or
stos
add
ret
popf
adc
rorb
loopne
out
xchg
iret
push
lods
add
and
lock
dec
push
jp
lock
push
rorl
movsb
loopne
stos
adc
sub
inc
mov
xor
push
jnp
cmp
and
adc
or
enter
aam
adc
in
jb
insb
loope
sub
cmp
or
inc
ss
cmc
cmp
ret
push
int3
popf
sub
insl
cltd
lock
push
and
popf
sub
loop
or
add
dec
sub
lock
jb
mov
mov
fs
loopne
int
and
in
loop
inc
jecxz
or
leave
push
xchg
imul
js
inc
insl
stos
xchg
push
sti
sub
and
push
sbb
in
shlb
pusha
mov
clc
fsubrl
mov
pop
test
inc
jl
imul
aam
inc
or
shl
sbb
outsl
add
mov
sub
mov
dec
pop
cld
ficoml
or
pop
sbbb
add
xchg
sbb
add
clc
aas
ficoml
jb
call
xor
loopne
or
jo
es
testl
dec
mov
aam
cmp
dec
lock
fstpl
inc
or
pusha
leave
orb
or
mov
xor
jo
loopne
cmp
add
ret
cmpsl
dec
or
inc
adc
cmpsl
push
call
jl
repz
push
enter
fsubr
stos
sub
pop
jecxz
addr16
push
ljmp
jmp
xor
adc
jle
es
in
mov
or
loope
mov
test
fstpt
mov
sub
jno
jae
lret
nop
pop
ficoml
aam
addr16
push
sbb
and
add
inc
testb
add
jnp
nop
push
add
mov
pop
adc
in
jg
add
sbb
lods
loope
add
in
test
or
mov
inc
lock
icebp
sbb
pop
loope
mov
call
adc
popa
pop
test
loopne
mov
in
aam
stos
loop
icebp
fldlg2
loope
or
sbb
fwait
sub
pusha
dec
mov
jg
movsl
sbb
test
add
jmp
mov
pop
cmpsb
dec
mov
xchg
xchg
call
ret
shll
in
jne
push
dec
sbb
xchg
scas
cmp
or
xlat
push
leave
pop
aaa
sbb
xlat
sub
test
pop
aaa
nop
sbb
sbb
mov
pushf
xchg
aad
in
sub
loopne
sbbl
or
or
inc
push
cmp
xchg
or
xchg
movsb
sti
jns
pop
fcompl
sti
push
sub
xchg
test
adc
jecxz
mov
js
sub
push
mov
add
xor
cmp
mov
mov
jecxz
adc
xor
fsubl
cmp
inc
dec
pop
push
mov
lock
in
sub
cwtl
cmp
adc
add
lock
cmpsb
test
nop
std
xchg
data16
leave
and
or
jb
and
and
or
icebp
enter
adc
aad
mov
in
xor
in
push
rcr
adc
test
rorl
je
jns
pop
mov
movsb
icebp
push
fs
or
or
push
test
icebp
adc
repz
bound
fwait
and
mov
inc
cmpsb
ss
dec
arpl
adc
adc
pushf
sbb
mov
and
adc
mov
and
imul
inc
mov
out
pop
gs
sbb
ret
sbb
dec
imul
out
pop
enter
repz
test
sub
fadds
aam
fwait
adc
js
and
hlt
sub
leave
mov
dec
test
push
or
or
popa
test
mov
popa
adc
dec
adc
push
inc
sub
push
roll
cld
loopne
xchg
pop
outsl
gs
add
xchg
add
call
and
shld
and
ret
push
cmpsb
sbb
in
neg
ret
adc
sbb
insl
shlb
ret
fmuls
das
or
pop
or
mov
sbb
pop
enter
call
cs
xor
fs
cmp
insb
adc
inc
popa
xchg
test
subb
mov
pop
mov
pusha
dec
testl
xlat
ja
and
ljmp
inc
xchg
loopne
pop
adc
pavgb
and
jl
or
lahf
mov
stos
scas
shlb
movsb
popl
arpl
enter
xor
mov
int
inc
mov
enter
sub
and
es
or
jne
mov
dec
test
jo
in
jl
xor
push
adcb
stc
daa
push
jecxz
sub
stc
cli
pop
or
mov
pop
adc
cmp
insl
cs
stos
mov
inc
inc
icebp
push
cli
xor
or
lock
in
cli
fsubs
sbb
push
push
or
adc
jno
aaa
mov
mov
pop
inc
jno
push
sbb
inc
call
shl
pusha
jne
outsl
adc
adc
fsubr
dec
or
in
or
or
jno
mov
mov
lods
xlat
or
xchg
cmpsb
xor
cmp
add
mov
jb
pop
repnz
das
dec
add
sbb
inc
sub
sbb
sub
mov
jb
jo
sub
stc
cwtl
stc
dec
inc
cmpsb
or
or
xchg
stc
xchg
mov
adc
or
fimull
push
or
dec
adc
pop
sbb
imul
dec
inc
leave
loope
call
test
enter
faddl
and
dec
or
addl
shlb
outsb
push
in
maxps
iret
enter
pop
pop
fistpll
xor
mov
mov
movsl
in
shrb
orl
inc
les
inc
xchg
mov
or
inc
cs
jb
popf
mov
pop
dec
xchg
std
cmp
push
cmpsl
es
iret
sbb
xchg
pusha
xlat
push
bound
inc
jge
andl
jl
orb
out
fcoml
push
nop
xorb
aam
nop
sub
cltd
fsub
aam
lods
dec
push
in
adc
cmp
or
ret
unpckhps
test
rorl
imul
and
sub
lock
xchg
leave
clc
mov
add
scas
gs
rorb
adc
push
daa
dec
lret
fdivrs
and
ja
add
leave
hlt
add
dec
add
loopne
pop
call
pusha
mov
in
mov
adc
les
mov
xor
movl
pop
inc
add
inc
adc
ret
cli
imul
xchg
sub
cltd
mov
enter
jmp
adc
shrb
fwait
mov
fdivrl
inc
mov
pop
push
jge
xchg
insl
mov
ja
sbb
mov
and
test
adc
fs
enter
adc
add
dec
aas
loope
inc
test
pop
fsubrs
lret
in
dec
push
cmp
dec
push
imul
mov
fnsave
mov
xchg
aaa
pusha
int3
jmp
push
and
adcb
mov
jmp
mov
mov
cmp
int
push
adcb
stos
adc
prefetcht2
pop
dec
imul
inc
or
xor
fcomi
mov
clc
adc
dec
sub
inc
jp
lods
mov
or
xorb
sbb
pop
dec
xor
pop
setbe
cwtl
pop
cmp
cwtl
pushf
xchg
add
or
sub
dec
push
loopne
xchg
sub
fs
sbb
cli
notb
repnz
mov
adc
and
es
das
adc
sbbl
or
inc
mov
and
fisttpl
xchg
dec
mov
ds
jne
sub
xchg
xlat
mov
dec
cmp
shll
les
or
call
or
jne
mov
in
jne
stc
lock
adc
test
or
cmpsb
mov
mov
addb
shlb
repz
cmpl
mov
shll
sti
sbb
push
cltd
or
aad
fcoms
mov
call
fs
pushf
sbb
test
faddl
mov
fdivr
sub
lock
popf
mov
dec
cmc
xor
xchg
pop
shll
psubsb
or
orb
cmpsl
mov
sbb
add
or
adc
xor
int3
push
and
clc
push
xchg
sets
push
pop
sbb
cmp
mov
jmp
in
jne
and
pusha
insl
and
loope
sbb
rorb
fmull
lds
push
add
or
pop
in
inc
xor
loopne
push
and
mov
sbb
inc
cmp
jecxz
or
xchg
sbb
cwtl
int
sbb
push
loopne
mov
test
or
xchg
inc
xor
les
sbb
push
insb
jne
inc
fcoms
movl
add
int3
in
in
gs
shrb
add
ret
cltd
adcl
sub
and
jecxz
cs
add
imul
in
jb
scas
mov
mov
aam
test
and
xchg
int
fs
push
in
or
lds
and
xor
testl
inc
jge
xor
push
xor
popf
fmull
jnp
adc
xchg
fisubl
cwtl
sbb
pop
and
bound
aad
popa
or
mov
mov
jb
sub
stos
and
rcll
les
push
psubsb
sub
subb
aas
es
xchg
inc
insl
push
out
or
jno
aas
pushf
push
xchg
mov
or
sbb
dec
jge
pop
sub
xor
sbbb
push
adc
mov
mov
add
in
mov
mov
mov
or
jno
das
mov
mov
lods
lods
test
push
jns
add
clc
cwtl
push
mov
fs
xor
push
sbbl
push
fsubrs
out
leave
pushf
cwtl
sbb
adc
adc
jns
sub
and
movsb
mov
xchg
pushf
mov
or
shll
lcall
test
or
xchg
sbb
mov
aam
inc
out
or
aam
call
xlat
sub
nop
cmpb
imul
jl
fwait
fs
dec
xchg
xchg
subb
cmp
push
je
mov
sbb
lea
jns
and
movsb
adc
sub
nop
mov
fwait
addb
or
decb
push
mov
xor
std
orl
adc
jns
enter
push
inc
sbb
lods
cltd
fiaddl
cmp
push
inc
les
es
or
mov
sarb
aam
and
cwtl
adc
xor
in
adc
jecxz
js
sub
inc
xchg
inc
bound
xchg
lods
movsb
add
fdivrl
jl
mov
or
jne
leave
dec
inc
jl
aam
ljmp
inc
dec
or
lock
fadds
mov
stos
or
dec
xchg
js
push
sbb
xchg
cmp
xorb
xchg
xchg
aam
inc
mov
or
pop
pop
loope
inc
pop
jmp
mov
mov
test
mov
xchg
xor
pop
clc
pop
clc
xchg
call
loopne
test
adc
fiaddl
test
enter
inc
push
mov
pop
push
jb
mov
insb
adc
dec
push
push
insl
pusha
pop
inc
mov
dec
xor
pusha
adc
xor
and
cmp
xor
and
sbb
inc
leave
and
dec
cmp
sbb
xor
pop
bound
sub
adcb
fmul
add
mov
lods
or
mov
in
add
fsub
inc
enter
pusha
leave
push
push
add
and
mov
or
stc
aam
push
fcoms
rcl
sub
add
mov
stos
or
orl
popa
add
enter
adc
cs
and
adc
call
lock
and
and
fs
lods
xchg
or
and
sub
jne
dec
in
orb
test
movsb
mov
jmp
xchg
in
push
gs
jno
inc
popa
xor
or
cmp
loop
or
int3
adc
xchg
or
dec
fcomps
les
inc
xor
jo
rcrl
daa
fwait
pop
push
and
jbe
adc
push
cltd
fs
add
inc
imul
push
rorb
scas
movsb
push
mov
inc
mov
adc
mov
in
add
and
sbb
add
loop
sti
imul
xor
mov
insb
xchg
test
pop
push
push
sub
rolb
data16
sub
movsl
jne
insb
or
ja
mov
inc
or
ja
or
push
subb
xchg
xchg
xorl
fstpl
ret
push
push
adc
inc
mov
test
es
or
movsb
fwait
lods
filds
in
add
push
sbb
rcll
test
adc
sbb
xor
std
aam
push
mov
stc
mov
fwait
push
fists
dec
push
arpl
push
sub
inc
cwtl
cwtl
rorb
stos
and
fs
push
lea
sub
sarl
ja
sub
rclb
push
lods
jns
imul
fimull
nop
ror
adc
shll
inc
dec
test
push
loope
dec
cs
push
fldt
push
filds
es
xchg
outsl
mov
jne
pop
adc
mov
ror
int
xchg
hlt
pushf
das
inc
insl
cwtl
mov
mov
push
lods
das
and
push
or
stc
movsl
aad
sub
jmp
aad
dec
and
or
xchg
xchg
stos
movsb
adc
dec
xor
ja
or
and
cmpsl
cmpsb
inc
movsb
sti
xor
xlat
sbb
lret
mov
xchg
imul
jg
mov
sbb
mov
xor
loopne
sub
add
popa
insb
lret
out
add
pop
fcomps
mov
xor
add
or
in
push
mov
aam
pop
bound
aaa
pop
aam
mov
pop
in
loopne
fsubr
fbstp
mov
mov
jne
aad
jmp
push
sbb
rcrb
out
cwtl
xor
dec
sub
push
cmpsl
sub
jno
ss
mov
or
icebp
lods
xchg
das
adc
xor
pop
mov
mov
aaa
fsubl
inc
sub
fucomp
mov
cmpsl
sarl
cmpsb
push
sbb
fbld
mov
sub
movsb
insl
iret
pop
das
mov
fs
outsb
and
xchg
sbb
mov
fsubs
daa
xchg
pushf
adc
mov
push
cmp
int3
nop
icebp
jb
mov
adc
cwtl
js
enter
push
mov
xorb
out
mov
mov
and
mov
mov
ss
leave
cwtl
pop
nop
bswap
in
in
les
in
pushf
xchg
mov
mov
mov
adc
and
negl
fsubl
cmp
mov
das
and
cmp
pushf
push
or
cltd
pushf
sbb
in
pop
ja
add
cmp
adc
xchg
jecxz
mov
mov
cwtl
adc
rorl
ret
sarb
xchg
jmp
cmpsb
dec
imul
insl
pop
shrl
push
icebp
and
push
jecxz
test
push
jno
lods
and
scas
mov
jb
push
shll
push
enter
mov
loope
mov
leave
dec
inc
lahf
mov
adc
push
cmp
sub
fwait
or
jge
stos
add
cltd
inc
mov
rorb
loope
jne
jecxz
add
loop
mov
xor
mov
in
dec
aam
adc
sub
lock
enter
addr16
test
enter
rclb
pushf
mov
lods
in
es
jo
pushf
mov
test
sbb
ret
mov
movsb
inc
pop
add
sbb
pusha
js
mov
fnsave
lods
cmpxchg
fwait
sbbb
popa
adc
dec
xor
and
pop
cmp
imul
imul
xor
adc
imul
movsb
popf
mov
xlat
insl
call
mov
cltd
sub
je
jne
and
adc
jns
cltd
adcb
sub
adc
and
dec
xchg
dec
lods
enter
push
sub
stc
ret
sub
sub
ja
int
adc
ss
call
and
ljmp
or
enter
dec
sar
mov
push
popa
push
and
ja
popa
xor
pop
leave
stos
inc
rclb
lods
xchg
iret
cmc
xchg
mov
decl
inc
mov
add
mov
add
insb
sub
mov
fadds
in
shrb
mov
push
fs
add
xor
lods
mov
mov
adc
shlb
inc
xlat
pop
xlat
bound
push
ss
inc
int3
stc
int3
insl
xchg
xchg
pusha
das
mov
xchg
adc
test
jecxz
cwtl
fisubl
xor
popf
cmc
bound
inc
sbb
and
cmp
mov
sbb
add
xchg
sub
aad
shrl
mov
pop
leave
or
test
out
add
adc
xchg
xchg
mov
pop
fwait
test
mov
fs
and
fs
push
roll
sbb
lods
mov
and
mov
shrl
sub
sbb
pop
dec
xchg
cs
mov
add
xchg
dec
cwtl
sbb
push
and
fcoms
xchg
inc
ficoml
mov
movsb
and
cs
pusha
mov
std
jo
rcr
dec
sbb
sarl
je
jo
lock
mov
andb
es
dec
or
jo
roll
mov
or
in
insl
mov
dec
mov
or
pop
sub
ss
mov
in
adc
push
mov
adc
scas
hlt
cltd
inc
cmp
jo
outsb
sub
insl
aaa
in
and
in
sti
leave
fisttps
jo
and
and
sub
inc
mov
les
sub
orb
pop
push
scas
cltd
add
mov
daa
cld
icebp
jns
adc
repz
cmpsb
cmp
movsb
inc
xchg
inc
mov
les
int3
adc
xchg
test
xchg
sub
enter
bound
cmp
and
dec
mov
jns
pop
and
fcmovb
ret
pop
test
sub
mov
arpl
pop
je
in
inc
int3
ds
call
aas
in
das
sbb
dec
popf
inc
mov
movsl
or
outsl
ret
jmp
movsl
or
test
loopne
idivl
ficompl
add
sbb
push
or
fsubr
mov
mov
add
xchg
mov
sti
movsb
adc
ret
jne
pop
hlt
jmp
mov
lods
and
inc
insl
jb
shlb
subl
cmp
sbb
inc
jb
sbbl
in
je
mov
xchg
push
div
mov
jbe
pusha
sub
enter
pop
test
call
and
orb
xchg
in
adc
adc
push
mov
ljmp
lea
add
jmp
shrl
add
or
sbbb
daa
sbb
rorb
stc
rolb
adc
inc
mov
aad
xchg
ret
and
push
popa
and
aam
aam
fisubrl
cltd
fldt
lods
push
cwtl
fimull
enter
inc
add
cmp
push
rcll
dec
mov
in
xor
cltd
fistpl
push
mov
sub
push
and
dec
inc
or
xor
push
jge
aad
popa
mov
aas
ret
xor
xchg
mov
std
xorl
and
mov
in
or
stc
sub
xchg
mov
push
and
add
call
inc
mov
xlat
inc
and
or
das
pop
dec
xchg
dec
xchg
fsubrp
nop
cli
inc
adc
rorb
dec
data16
xchg
movsb
sub
mov
mov
mov
cmp
nop
inc
mov
nop
cmp
adc
popa
shll
std
imul
mov
or
aad
sub
sbb
and
cmp
js
or
inc
nop
cmp
sbb
mov
mov
and
pushf
jno
and
mov
jno
mov
inc
and
movsl
loopne
fstl
sub
subb
incb
sbb
inc
ss
mov
fisubrl
or
loopne
sbb
and
sbb
pop
pop
imul
jl
mov
xor
in
mov
fstpt
mov
adc
ret
scas
jne
movsl
sbb
add
xor
std
push
ret
pop
xor
jbe
insl
fcomi
xor
sub
insl
xchg
inc
cmp
and
fnstenv
mov
adc
mov
adc
nop
imul
jge
in
cmp
or
cs
dec
es
xchg
push
jns
pop
mov
iret
or
in
or
adc
add
adc
pop
sti
inc
lcall
cmp
mov
inc
dec
jnp
inc
sub
enter
push
push
insl
mov
sti
add
push
in
inc
adc
sbb
cmp
dec
and
jle
enter
and
into
xchg
fsub
mov
arpl
xlat
or
adcl
push
notl
movl
cwtl
std
adc
add
clc
xchg
add
repnz
imul
sub
push
mov
inc
pop
stos
dec
pop
inc
sbb
cmp
nop
mov
ret
xor
mov
sbb
mov
mov
lods
dec
xchg
fs
push
push
jnp
xor
dec
mov
pop
imul
rolb
fs
enter
mov
mov
sub
or
scas
mov
xor
shlb
loopne
lahf
cmovnp
adc
xchg
outsb
pop
xor
mov
xchg
int
ret
lock
adc
adc
fdivrl
in
pop
mov
fmuls
add
jns
pop
adc
aad
add
lcall
aam
push
jns
mov
loope
iret
repz
cld
pop
outsb
xor
fstps
sub
xchg
push
jnp
neg
dec
mov
aad
js
inc
aas
dec
das
push
mov
adc
or
add
jmp
inc
orb
jnp
mov
add
adc
mov
rcll
jg
fistl
or
cmp
rclb
cmpl
test
lcall
xchg
add
nop
add
into
pop
adc
test
and
push
push
jno
cmp
repz
inc
and
test
lcall
es
popl
push
in
xchg
add
lmsw
pop
sub
sbb
mov
and
insb
outsl
arpl
imul
outsl
fwait
dec
test
sub
popa
arpl
jne
jb
outsb
je
mov
add
das
add
push
insl
adc
idiv
mov
inc
outsl
jb
js
je
jb
repz
outsl
mull
jae
or
outsl
add
add
add
jbe
outsb
filds
push
jne
les
inc
and
and
ss
mov
push
add
or
sbb
add
or
jg
dec
add
inc
xor
inc
push
add
loop
testb
add
pop
dec
push
and
push
insl
femms
fidivrs
xchg
je
je
and
jae
dec
mov
dec
adc
insl
clc
fidivrs
clc
push
push
or
negl
cmp
lret
sbb
cmp
or
jbe
aas
js
cmpsl
mov
jp
outsl
or
fbstp
mov
gs
ja
fcmove
bound
and
outsl
jmp
xchg
je
aaa
jo
mov
xlat
mov
insl
sub
push
imul
scas
cmp
jne
jno
out
sub
data16
pop
mov
outsb
dec
sub
xchg
ds
jp
sub
insb
inc
shl
loope
sub
arpl
cmp
sbb
mov
cmp
push
or
pop
xlat
jae
daa
dec
jbe
jecxz,pn
jb
fbstp
outsb
bound
pop
out
aaa
adc
sbb
jo
arpl
xor
mov
push
call
insl
mov
fs
gs
fidivs
das
jb
cmp
pop
xchg
fidivrl
cs
es
roll
or
outsl
add
push
ret
pminub
jg
xchg
or
fisttpl
lahf
aaa
rol
add
iret
test
inc
fbstp
mov
fbstp
jne
jbe
jb
stos
imul
or
xor
pop
fidivrl
push
das
rcrl
push
pop
mov
insl
push
push
mov
cmp
push
jo
ss
dec
fistps
imul
arpl
and
xchg
push
mov
push
pusha
xlat
or
sbb
insl
lret
jbe
fbld
fs
imul
rcll
clc
xor
jnp
xor
inc
xchg
or
clc
cmp
push
lods
ret
mov
pop
add
sbb
push
sbb
stos
pop
fs
pop
insl
lret
je
scas
cmp
push
out
sub
fisubs
sbb
subb
pop
pop
jecxz
push
mov
ret
sub
shlb
add
dec
add
pop
add
push
std
cmp
flds
push
and
enter
jnp
testl
das
in
stc
cmp
xchg
adc
adc
push
sbb
cmpsl
sbb
clc
jmp
pop
idivl
mov
push
das
ljmp
xor
lahf
jmp
fdiv
cmp
js
jns
jp
mov
cld
adc
push
lahf
push
dec
iret
pusha
dec
aaa
add
mov
test
mov
jp
mov
in
cs
push
push
mov
dec
jb
fcmovne
add
test
pop
mov
pandn
out
xchg
ja
fbstp
or
shll
cmpsl
push
mov
cmp
dec
add
sbb
or
add
and
add
das
pop
sub
scas
pop
in
jge
inc
mov
jbe
fdivl
and
pop
popa
pusha
daa
decb
jmp
scas
mov
dec
idivl
xchg
jl
dec
inc
mov
sbb
push
pop
xchg
rorl
and
das
push
mov
pop
neg
ss
out
iret
jns
out
out
jo
fcmovne
and
fcmovb
insl
arpl
pop
loopne
pop
idivl
jae
push
and
sarl
pop
dec
outsb
fisubl
ds
neg
mov
insl
insb
iret
mov
jecxz
mov
jg
cmp
cmp
dec
jnp
add
dec
and
jns
std
ss
add
push
das
das
jns
push
dec
push
inc
std
fsubrs
incb
gs
bound
dec
outsl
jbe
dec
arpl
xchg
je
inc
jne
jne
loop
xor
insb
xchg
outsb
xchg
inc
jo
imul
arpl
bound
inc
into
cmp
popa
outsb
adc
xchg
cmp
sahf
jae
xchg
xchg
aas
jae
int
inc
popa
je
jb
xor
fstps
daa
push
gs
sbb
cmp
out
dec
outsl
outsb
and
jbe
jae
pop
dec
inc
aas
add
not
sbb
jnp
mov
enter
jae
push
push
test
stc
pop
inc
push
popa
insb
jne
inc
inc
mov
inc
dec
mov
mov
sub
sub
sub
ljmp
das
xor
xor
xor
ss
cmp
cmp
cmp
ds
inc
inc
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
mov
dec
test
push
out
mov
pop
pop
pop
pop
adc
popa
bound
xor
jmp
addr16
insl
outsb
outsl
jo
add
jbe
js
and
jp
jl
jle
dec
adc
lcall
mov
and
add
mov
dec
rorb
ljmp
lret
jno
icebp
pusha
inc
pop
outsl
dec
mov
clc
ret
movsl
add
xorl
outsl
shrb
outsl
imul
roll
outsl
das
cmp
dec
lcall
jo
xor
popa
js
addl
sub
push
fstpl
outsl
ja
ret
push
testl
int3
aaa
mov
jnp
add
add
adc
add
add
icebp
scas
push
fiaddl
push
pop
and
push
pop
inc
pop
sub
aaa
xor
hlt
xlat
in
cld
fldenv
push
add
pusha
push
add
out
lods
mov
or
xor
sbb
jnp
idiv
addb
add
xchg
test
insl
lcall
push
orb
cmp
push
push
and
sub
jb
int3
pop
mov
fldcw
lods
pop
into
jo
add
shrb
mov
ja
and
das
xor
or
dec
lret
adc
or
adc
iret
in
mov
pop
sbb
daa
iret
lea
mov
nop
xchg
xchg
dec
es
xchg
mov
mov
shlb
orb
cmpsl
shr
in
mov
mov
pop
lods
aad
mov
mov
jp
pop
scas
add
sbb
shll
cmp
ret
fnstsw
cmp
rdtsc
ss
js
dec
dec
arpl
in
inc
dec
inc
adc
notl
pusha
xchg
mov
mov
mov
rclb
dec
bound
je
outsb
data16
jbe
sti
xor
ss
out
je
xor
jnp
or
push
xchg
daa
pop
lea
fidivrl
mov
outsl
js
push
xchg
xchg
jl
push
and
insl
jo
jo
and
fcmovnbe
xchg
cmp
dec
xchg
shlb
aaa
insb
les
mov
imul
mov
lods
add
ds
cmp
dec
inc
jb
jns
ss
and
ss
jns
mov
insb
and
not
or
jne
addr16
cmp
outsb
jle
jbe
divb
fnsave
mov
jo
or
jb
and
fisubs
je
xchg
pusha
inc
jbe
push
in
add
push
push
lahf
fs
insl
add
lods
jp
pusha
adc
push
popl
fadds
mov
cmp
push
adc
rcll
pop
daa
mov
dec
adc
mov
adc
outsb
mov
pop
pop
pop
push
push
jae
or
mov
aas
cmp
call
push
hlt
clc
addr16
sbbl
xor
outsb
gs
mov
data16
cmp
bound
push
push
push
dec
testl
xor
push
push
in
lods
fisttps
push
ds
inc
or
sub
nop
xchg
push
imul
push
pusha
wbinvd
pusha
jg
popa
test
outsl
jae
inc
mov
inc
push
in
xchg
andb
popa
sbb
push
insb
roll
push
pop
fadd
sub
or
push
mov
pop
das
je
outsl
xchg
pop
aaa
daa
xchg
mov
data16
imul
or
ds
jns
imul
push
das
push
sub
js
sahf
jl
push
addr16
jle
imul
add
cmp
sub
pop
or
nop
ret
sbb
das
push
jb
pop
aaa
aaa
and
push
mov
xor
addr16
xchg
xchg
xor
pop
pop
jne
stos
addr16
push
jbe
pop
addr16
sbb
jo
ss
gs
inc
subl
imul
adc
sahf
sbb
dec
sbb
sahf
out
mov
out
pop
sub
popa
sub
push
jl
out
mov
xlat
incb
push
sub
imul
std
lock
sahf
enter
jns
shrb
sahf
mov
lods
push
pushf
cwtl
out
iret
repz
nop
mov
jnp
in
cmpb
cmp
push
je,pn
aam
insb
push
sahf
out
sahf
push
push
jns
out
push
dec
dec
inc
inc
out
sahf
out
cmp
sub
out
sahf
and
add
cld
fdivrl
repz
test
push
repz
sti
les
pusha
push
dec
inc
dec
repz
xor
or
cli
in
sarb
repz
mov
or
sahf
cmpsl
stc
lock
int3
test
push
mov
stc
jg
push
add
lock
jle
add
and
mov
push
cltd
nop
sbb
add
and
cmp
xlat
es
test
add
fcmovb
push
and
add
add
add
xor
rol
inc
add
loopne
add
add
add
test
pop
mov
add
jnp
outsl
add
in
pop
mov
add
fildll
jle
daa
or
addl
xchg
lea
xchg
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
mov
cmpsb
jmp
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
ret
inc
enter
int3
int
iret
rcl
rcl
aam
xlat
fcomp
fcmovu
loopne
loop
in
out
std
jmp
call
in
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
or
mov
and
mov
stos
test
sub
and
dec
lea
popa
and
mov
outsb
gs
popa
data16
pop
mov
cmpsb
pop
jns
push
xor
movsl
xor
data16
add
in
les
jo
dec
arpl
jne
insl
aas
inc
insb
fs
sbb
mov
cmp
mov
or
lahf
push
outsl
lods
push
setl
gs
xor
push
inc
adc
push
fdivrp
xlat
add
push
xor
push
dec
inc
dec
cmovns
add
jg
inc
inc
das
push
adc
sub
adc
push
mov
inc
call
in
jg
lock
mov
out
xor
jnp
inc
loop
mov
ds
iret
aas
fsubs
pop
adc
clc
lret
sbb
jb
mov
and
adc
dec
scas
jp
and
mov
fstl
mov
and
inc
sahf
jg
cmp
dec
imul
lret
add
inc
mov
cmp
popf
mov
sub
fwait
ss
sbb
jg
inc
pop
jns
ds
xor
incb
int3
dec
dec
xor
cld
decl
out
dec
pushf
xor
lret
aaa
push
div
inc
sub
dec
xchg
cmp
cmpsb
das
xchg
jg
pop
and
xchg
lret
sahf
icebp
mov
cld
or
loopne
cmp
xchg
jle
inc
mov
xchg
push
pop
xchg
sub
pop
mov
push
mov
jns
mov
dec
test
shrl
andb
leave
hlt
mov
sahf
xchg
dec
add
les
lods
dec
lock
xor
pop
mov
pop
aas
and
in
repnz
and
rorl
flds
sbb
in
pop
dec
inc
mov
add
loopne
daa
cwtl
inc
clc
push
or
lock
xchg
adc
add
push
into
mov
orl
cmovg
inc
lock
xchg
pop
and
dec
dec
aaa
pop
fwait
imul
outsb
addr16
pop
shl
es
jae
lret
sub
mov
test
push
data16
scas
addl
adc
xchg
push
cmpps
cmp
adc
jg
push
call
aaa
pcmpeqw
mov
mov
sti
or
jo
pop
daa
fisttpl
daa
je
and
jae
insb
lods
pop
call
lahf
loopne
pop
or
jmp
xchg
loope
add
lret
xchg
ret
out
addb
testb
sbb
lock
pop
mov
jg
push
les
push
pop
lahf
test
mov
jae
jae
insl
loope
lock
jle
fs
mov
pusha
in
pop
cmpsl
mov
adc
jmp
movswl
mull
repz
out
fistpll
pop
out
mov
mov
mov
loope
and
xchg
cmpsl
lods
mov
mov
cwtl
ret
jecxz
adc
out
jo
loopne
sti
sbb
jns
rorl
jg,pn
mov
fisubs
mov
push
xlat
adc
jmp
or
xchg
andl
sbb
push
bound
sti
lock
pop
je
cmp
divl
mov
or
cmp
lock
push
jecxz
js
call
inc
xchg
insl
or
clc
scas
repz
dec
outsl
inc
clc
cmc
push
jmp
ret
gs
stos
mov
pop
dec
jp
add
pop
ret
outsl
ja
pop
adc
jp
subl
fwait
ja
push
and
pop
inc
addr16
out
xlat
in
iret
out
pop
addr16
je
out
pop
aas
jo
mov
arpl
daa
pop
arpl
das
addr16
fdivs
jae
pop
push
mov
movsl
jne
xor
and
ret
je
pop
jmp
js
push
mov
dec
sbb
jae
jbe
mov
pop
popl
push
pop
mov
sub
sub
bound
xorb
mov
mov
adc
mov
jle
pop
fdivl
push
push
push
xchg
je
jb
test
pop
rclb
pop
cmp
call
push
pop
mov
xor
push
adc
jae
fs
adc
inc
add
push
push
mov
fmull
lds
adc
mov
scas
in
mov
pop
dec
aaa
inc
loope
fdivrs
mov
arpl
shl
jae
sub
push
ret
xchg
push
mov
subb
mov
mov
sbb
mov
add
int
mov
push
iret
pop
imulb
cmp
lahf
push
js
mov
ret
jg
push
jne
cmp
movl
adc
fwait
xorl
push
sub
mov
out
shrl
xor
add
loop
mov
inc
outsl
and
or
sbb
cli
aaa
shll
rcrl
insb
dec
pop
out
int3
xor
push
inc
inc
jno
push
clc
enter
cmpsl
mov
adc
mov
push
inc
outsl
or
pop
in
or
mov
sbb
pop
pop
xchg
cli
mov
dec
inc
mov
push
es
fldt
xchg
scas
out
inc
mov
inc
mov
out
jo
or
inc
sub
cmpsl
push
mull
dec
add
outsl
imul
out
add
jo
jnp
ss
mov
and
sbb
test
es
je
pop
jl
jo
dec
ud2
insb
jmp
dec
popa
sub
pop
scas
fisubl
addr16
cmpsl
mov
dec
cmp
lods
pop
out
cmpsl
xchg
inc
arpl
loopne
push
aas
pop
outsl
push
aas
loopne
bound
testl
mov
mov
mov
loopne
mov
jl
cvtps2pd
loop
pop
jl
imul
je
outsb
out
and
addr16
bound
sub
push
das
fldl
xchg
mov
xor
cmp
jns
jno
ret
aad
mov
push
sbb
mov
push
imul
jo
pop
ja
sbb
push
iret
out
es
inc
cmp
lds
mov
ja
jnp
in
imul
outsb
sahf
icebp
int
jo
popa
pop
arpl
mov
insb
jl
subl
fimuls
jl,pn
outsl
lret
sarl
jl
jo
bound
subb
jns
jg
addb
xchg
push
sti
roll
inc
mov
adc
shlb
fs
mov
xor
roll
xchg
jl
or
xor
daa
jl
iret
sbb
pop
icebp
icebp
mov
daa
inc
push
xor
push
outsl
ret
int3
pop
and
cmp
mov
mov
push
mov
push
pop
xchg
cmp
pop
fistpll
pop
arpl
test
ret
daa
filds
xlat
pop
decb
daa
jae
sbb
push
fucomip
aas
sbb
loop
cmp
mov
mov
loop
pop
fwait
xchg
fisttps
stos
ret
pop
pop
cld
mov
jb
bound
data16
aaa
push
push
insb
arpl
dec
jbe
sbb
les
pop
aaa
popa
insl
push
lea
inc
loop
push
jle
das
imul
imul
jg
outsl
mov
xor
inc
add
dec
push
loope
xor
dec
sbb
dec
and
push
sbb
push
inc
add
sbb
fnstenv
inc
pop
enter
dec
data16
ds
sti
push
cmp
push
jmp
push
push
in
dec
mov
ds
push
mov
and
push
in
jnp
insb
and
xlat
push
push
push
push
ret
scas
cmp
push
xor
cs
cmpsl
stc
mov
push
pushf
sub
out
sahf
hlt
roll
aas
pop
int
out
test
into
lds
mov
negl
push
filds
jecxz
xor
iret
repz
lock
push
and
push
arpl
jnp
and
inc
outsl
jg
push
imul
out
sahf
out
cmpsl
lcall
dec
inc
mov
push
push
mov
aaa
dec
and
push
orl
test
push
jo
jns
icebp
dec
or
xchg
sbb
cmpl
dec
mov
arpl
insb
pop
les
stos
aas
mov
popa
lret
icebp
xchg
xchg
outsb
arpl
std
loopne
nop
push
gs
insl
pusha
push
popa
jne
or
dec
mov
push
dec
bound
xor
pop
sub
and
imul
jb
push
push
jb
je
lahf
out
ficoms
lock
iret
repz
js
ret
aam
ds
repz
cmp
jns
out
xchg
pusha
pusha
sahf
dec
mov
mov
pop
inc
pop
pop
dec
cld
or
cmp
gs
je
cmp
aaa
mov
push
jo
jb
add
jae
cmp
into
fidivl
ss
sbb
and
jnp
inc
and
jae
imul
and
outsl
adc
bound
adc
push
sahf
fs
mov
sub
push
adc
outsb
sbb
lods
imul
pop
cmp
sbb
ja
imul
cmp
nop
and
add
or
aas
xor
push
dec
rcrl
or
inc
or
push
inc
push
daa
inc
adc
ja
push
lahf
jp
adc
js
test
arpl
mov
arpl
pop
packuswb
inc
adc
adc
pop
repnz
sub
imul
cmp
mov
pop
dec
ja
ss
add
arpl
adc
mov
xor
addr16
mov
mov
data16
aas
sbb
ja
pop
cmp
push
add
or
cld
str
xlat
sub
out
adc
aaa
and
and
fs
adc
xor
dec
mov
mov
push
daa
jae
mov
aas
andb
push
es
dec
xchg
pop
popa
xchg
sbb
xor
sbb
fildl
movsl
adc
das
push
pop
jo
and
fwait
mov
and
adc
push
add
mov
outsl
andl
push
dec
mov
aas
loope
pop
dec
dec
sti
or
push
sub
inc
dec
pop
mov
fwait
sti
sub
sub
jmp
add
push
mov
xchg
pop
imul
add
jg
pop
jb
sub
and
push
mov
or
pop
xchg
inc
sub
or
out
jnp
je
xchg
imul
add
jae
imulb
pop
fwait
push
ljmp
pop
xchg
fildl
sbb
fmulp
movsl
dec
lahf
aaa
pop
bound
loopne
mov
test
adcl
ret
jb
fs
add
in
test
push
mov
sub
jp,pn
mov
movsb
push
cli
addr16
lods
adc
inc
aaa
scas
lods
sbb
outsl
add
or
das
data16
sbb
fisubl
mov
jae
push
xchg
sub
xchg
out
pop
stos
orl
arpl
frstor
and
fnstsw
addb
scas
mov
ficomps
cmp
inc
aas
inc
lea
test
mov
aas
mov
pop
lods
sbb
add
and
fisttpl
jo
pop
push
sub
loopne
or
jne
or
sbb
fsubl
jo
add
dec
sbb
cmp
idivl
fcmovnbe
mov
scas
popa
insl
or
dec
xchg
add
pop
and
test
iret
inc
and
inc
dec
imul
imull
test
xor
lret
lods
js
or
jnp
stos
inc
cmp
xchg
data16
mov
out
loope
and
cmpsl
push
cs
push
mov
pop
and
cmpsb
dec
and
dec
mov
fbld
js
or
or
out
and
xlat
mov
push
xlat
inc
push
imul
aas
imul
in
movsl
dec
inc
pop
mov
mov
xor
cmpsl
aaa
inc
rcrl
cmp
fwait
andb
dec
test
cmpl
push
das
daa
pop
sub
addr16
movaps
fstl
dec
jns
mov
imul
call
ret
ja
add
fists
xchg
fistl
sub
dec
imul
inc
xchg
adc
stos
add
mov
push
xchg
mov
movsb
add
xchg
subl
push
movsl
xor
sub
sbb
dec
xchg
insb
fwait
xchg
push
pop
or
push
shll
jne
inc
imul
add
mov
xsaves
cmp
xchg
ret
mov
mov
pop
or
dec
rcll
mov
aas
push
push
sbb
jno
gs
push
inc
ret
dec
cmp
mull
mov
loopne
inc
shll
fisubs
arpl
imul
dec
addr16
pop
out
jae
push
movsb
or
xor
out
das
lods
mov
push
insl
push
inc
mov
push
out
or
sub
arpl
fs
pop
add
imul
idivl
aaa
xor
jbe
mov
or
mov
das
xor
cmpsb
mov
fs
das
ljmp
add
inc
xchg
mov
das
imul
xor
inc
fwait
pop
push
es
imulb
cmp
and
cmp
ss
xchg
mov
inc
adc
mov
cmpl
inc
aam
push
add
adc
pop
cpuid
dec
sub
push
mov
inc
imul
xchg
iret
test
dec
xor
stos
push
imul
push
out
movsb
inc
js
sti
or
subl
inc
rcll
cmpl
push
mov
inc
in
push
jnp
xchg
push
lods
jge
xor
sub
dec
inc
dec
and
push
lock
jnp
pusha
in
pop
mov
inc
cs
nopl
addr16
push
loope
mov
shlb
push
push
subb
mov
pop
minps
shrl
fisttps
jmp
out
inc
mov
testb
push
add
push
mov
sub
fimull
repz
jmp
xchg
ret
call
test
push
sti
cs
mov
hlt
jno
iret
jp
addr16
das
sahf
fidivs
imul
fwait
arpl
mov
arpl
repz
dec
sbb
add
fistpll
out
sbb
inc
mov
jmp
sub
push
jmp
jp
xlat
iret
push
jns
xor
inc
out
xabort
and
orl
cld
jg
in
shr
lods
push
idiv
aam
push
and
lcall
ret
jp
dec
repz
or
movsl
push
or
mov
fnstsw
fisttpll
adc
and
sbb
pop
add
mov
lods
lahf
scas
bound
xor
imul
lods
loop
pop
xor
or
movsl
mov
inc
mov
mov
out
lahf
xor
and
or
xchg
mov
cwtl
popaw
divl
push
scas
out
lret
push
jae
jae
imul
lods
adc
cmp
lahf
pop
mov
mov
call
arpl
shlb
pop
mov
out
adc
pop
mov
push
mov
negl
arpl
cmp
int
lods
add
ljmp
shll
push
adc
rolb
mov
sub
fsubrl
mov
loopne
scas
aas
lahf
mov
clc
les
mov
xchg
jbe
lea
or
add
and
pop
mov
pop
xlat
aas
adc
xor
pop
lods
imul
xor
and
aaa
mov
fwait
push
mov
add
cmpsl
pop
arpl
inc
lods
add
stos
pop
jnp
jge
fisttps
sub
jae
xor
test
fldenv
cs
sub
sbb
jp
insl
inc
iret
pop
mov
cli
mov
lods
add
outsl
aaa
subb
adc
in
and
cmp
mov
sti
mov
insl
arpl
bound
mov
lods
movsb
push
pop
pop
dec
lods
xor
test
test
jb
std
inc
push
stos
insl
push
add
adc
stos
inc
scas
xchg
stos
lods
pop
or
xchg
mov
xchg
push
leave
push
sbb
test
js
push
leave
push
repnz
xorb
dec
pop
and
stos
in
cmp
cmpsb
xchg
pop
and
sub
movsl
mov
dec
cld
movsb
test
push
jb
pop
add
cmpsb
xchg
push
mov
fs
repnz
and
les
jo
and
mov
pop
and
lahf
scas
xchg
stos
xorb
sahf
jb
dec
and
in
call
dec
scas
inc
in
pushf
push
leave
push
xor
cmpsb
xchg
fwait
pushf
dec
leave
push
repnz
lcall
or
cltd
push
sbb
popa
pop
or
les
sbb
bound
jg
xor
pop
cmpsl
pop
inc
test
inc
cld
divl
loop
scas
and
mov
adc
mov
inc
dec
fistpl
mov
fiaddl
pop
mov
adc
add
andb
inc
inc
pop
mov
dec
out
das
bound
add
mov
pop
xor
push
and
push
lods
mov
sub
or
adc
mov
fwait
add
mov
mov
push
xor
inc
repz
dec
inc
mov
inc
arpl
mov
sbb
mov
test
add
mov
xchg
add
packuswb
adc
fisubl
inc
xlat
addb
push
cmpsl
mov
mulb
outsl
add
push
mov
pop
ret
pop
push
xor
addr16
adc
xchg
and
fildll
xor
jg
rcrl
scas
cmpsl
lahf
repz
cmp
aaa
inc
push
push
and
push
mov
inc
push
scas
push
mov
dec
inc
pop
xchg
xchg
sbb
jbe
aaa
arpl
subb
bound
mov
filds
jmp
sbb
aaa
outsl
adc
mov
orb
ss
outsl
jecxz
and
lahf
xor
push
aam
xchg
gs
arpl
cmc
add
jmp
sub
pusha
test
rcrl
inc
mov
bound
out
scas
pop
mov
imul
push
sbb
xor
ret
cmp
push
loop
adc
out
outsl
jbe
dec
lcall
test
xlat
bound
jns
fsubrs
xchg
jae
and
rclb
add
in
or
lock
mov
mov
les
mov
fsubrs
stos
xchg
pop
or
add
sub
sahf
rol
ficoms
sub
xor
adc
sbb
and
loope
cmp
sub
push
jecxz
dec
jne
addr16
and
bound
insb
sub
adc
insl
je
inc
je,pn
fs
sub
xchg
les
loop
jo
cmp
push
addr16
pop
xchg
pop
fistl
fnstenv
lret
jnp
mov
push
pop
les
jmp
faddp
add
popa
dec
sbb
popa
jae
imul
outsl
dec
js
xor
inc
sub
mov
mov
mov
pop
jecxz
and
inc
arpl
shll
push
andb
stos
sbbl
shl
mov
movzwl
jns
aaa
push
push
inc
push
sub
mov
loopne
push
stos
add
stc
lcall
push
test
lahf
shlb
subl
push
sub
and
xlat
scas
jl
and
sar
bound
add
lock
mov
imul
inc
imul
aas
push
inc
in
add
mov
mov
inc
lcall
andb
sub
shrb
xor
out
dec
xchg
lods
cwtl
mov
xchg
je
mov
xor
xor
fnsave
adc
leave
aaa
xor
cmovno
fcomi
and
or
lods
insl
iret
adc
xor
xchg
les
rolb
and
mov
ffree
hlt
push
inc
ss
pop
fwait
outsl
push
scas
addb
adc
or
mov
testl
imul
and
dec
xchg
pop
out
inc
dec
shrl
xchg
sarb
pop
sbb
mov
jecxz
sbb
stos
inc
add
push
cmpsb
scas
cmpsl
mov
mov
addb
faddp
xlat
xchg
ja
dec
mov
xchg
pop
aad
sarl
inc
push
push
test
fstl
push
cmp
cmpsb
neg
dec
xorl
js
sub
pop
mov
push
xchg
cmp
insl
xchg
mov
and
inc
xchg
cmp
inc
cmp
jnp
pop
ret
fs
dec
mov
divl
jnp
jecxz
pop
mov
dec
shlb
fwait
inc
mov
in
inc
decb
js
xor
in
or
inc
cmp
ficomps
pcmpeqd
dec
or
out
inc
idiv
inc
push
lcall
push
push
fidivl
bound
xor
repz
adc
out
loopne
inc
cs
lret
jb
pop
ret
cmp
push
ss
ja
jge
js
retw
pop
inc
or
data16
xor
mov
lcall
out
sub
inc
xchg
inc
mov
xchg
pop
push
cmp
in
fiadds
push
mov
out
pop
js
inc
add
out
sbb
inc
pop
pop
mov
push
es
clc
fidivrs
pop
push
push
xor
dec
mov
fs
inc
pop
dec
es
das
pop
out
mov
add
and
or
idivl
push
sysexit
mov
cmpsl
xor
outsl
push
scas
jge
xchg
push
push
insl
sub
neg
jnp
push
insl
mov
inc
ja,pn
xor
jnp
dec
mov
push
jp
lcall
loope
ds
arpl
pop
cmp
ficompl
dec
xchg
jp
lock
pop
outsl
pop
outsl
es
out
dec
xor
xor
pop
or
outsl
jb
pop
enter
test
sbb
lock
loopne
out
jnp
push
mov
pop
inc
mov
xchg
mov
outsl
iret
lret
jecxz
inc
adc
and
incl
push
subl
dec
ret
pop
sarl
add
xor
add
fstpt
pop
sbb
jecxz
xchg
and
jns
mov
aaa
pusha
mov
mov
sbb
inc
cmp
push
lret
adc
ret
pop
xor
lods
adc
pop
mov
popw
sbb
add
lret
xchg
xchg
es
bound
adc
addr16
inc
inc
add
mov
scas
test
lock
sub
lea
mov
stos
scas
pavgb
sub
mov
fs
lahf
mov
xor
mov
mov
sub
lahf
ds
mov
inc
ja
mov
sub
jmp
aam
and
iret
jae
arpl
fwait
dec
outsb
cmp
inc
imul
dec
movswl
fiaddl
add
push
sub
fwait
mov
das
and
outsl
popa
fs
outsl
or
pop
hlt
es
aas
jl
mov
or
mov
dec
inc
sub
xchg
addr16
dec
mov
lcall
mov
movsb
inc
sbb
mov
pop
aaa
sbb
mov
sahf
push
and
add
inc
shrb
push
jle
fs
mov
gs
sbb
xor
add
divb
push
sub
or
lods
pop
jae
pop
idivl
xor
or
movsb
pop
xor
mov
out
iret
adc
mov
jns
xchg
add
int
lcall
mov
pop
pop
cmp
jne
jo
arpl
je
aaa
ss
test
sbb
xor
punpckhbw
push
or
lcall
or
pop
dec
addl
das
mov
cmp
outsb
pop
outsl
mov
push
jnp
lahf
sub
arpl
scas
add
orb
push
fldl
popa
fwait
sub
or
pcmpgtb
push
sub
ffreep
xchg
jg
ret
pop
dec
arpl
mov
aaa
cmpsl
roll
mov
cs
fsub
push
addr16
test
inc
movsl
sbb
and
push
mov
and
push
inc
fwait
iret
dec
cmp
adc
lock
loopne
das
popa
fldt
and
xor
add
xchg
addb
pop
mov
mov
push
adc
incl
or
adc
clc
je
push
pop
inc
daa
jns
andb
mov
out
fbstp
mov
movlps
outsb
dec
arpl
sbb
sub
jbe
arpl
sbb
xor
sbb
iret
push
das
xchg
xor
push
pop
mov
outsl
pop
xor
aaa
sub
rcll
xor
push
fs
mov
dec
cld
aam
add
jb,pn
push
ds
jp
adc
jle
lock
imul
dec
add
das
or
ja
mov
inc
loop
dec
test
pop
pop
xchg
addr16
imul
push
xchg
jmp
fidivrl
add
push
lcall
pop
jmp
out
aad
inc
pop
push
sbb
mov
iret
add
dec
repz
addl
roll
add
int
imul
add
pop
add
fldcw
add
pop
or
mov
adc
adc
sbb
and
iret
data16
inc
iret
xor
inc
mov
mov
fnstsw
mov
mov
popa
xchg
add
shrb
ret
sub
shrb
lahf
data16
xchg
pop
adc
pop
add
sub
sbb
fwait
int
dec
str
add
inc
stc
das
incl
mov
push
popa
xor
adc
inc
pushf
mov
inc
daa
cmc
rep
les
les
inc
nopl
and
mov
mov
negl
push
and
mov
add
adc
xchg
mov
mov
lods
pop
dec
movsl
enter
push
mov
idiv
push
mov
inc
push
insl
ss
adc
cli
mov
sub
sub
jmp
cmp
mov
sbb
mov
ds
pop
repnz
pop
sbb
xor
mov
mov
fsubs
sbb
mov
gs
dec
xchg
jecxz
dec
push
pop
loopne
sub
xchg
add
and
mov
push
hlt
xchg
and
push
clc
jp
scas
dec
sbb
lahf
dec
add
in
addr16
push
xchg
test
dec
xor
push
inc
xlat
test
out
shrb
ss
rcrb
mov
in
jbe
fs
pop
inc
sub
xchg
xchg
out
sub
adc
jns
mov
iretw
leave
jae
xor
cmp
inc
xchg
pushf
cmp
les
shl
cmp
xchg
inc
outsl
cmp
inc
pusha
add
imul
lahf
adc
pop
inc
mov
clc
mov
dec
xorl
lock
push
dec
push
in
push
jno
pop
ret
pop
pop
mov
pop
dec
add
push
insl
repz
cmp
shr
loop
ss
cmp
sub
jo
mov
push
jp
inc
adc
inc
addr16
mov
inc
cmpsb
jp
mov
dec
mov
or
jo
dec
imul
stos
data16
aaa
dec
dec
inc
int3
insb
mov
imul
bound
je
bound
imul
sbb
stos
push
add
lahf
push
and
pop
lahf
mov
push
test
test
aam
add
xchg
dec
imul
xchg
pop
dec
dec
mov
sbb
scas
testl
cmp
pop
dec
dec
xor
lea
xchg
outsb
mov
gs
mov
dec
scas
mov
loop
mov
rol
or
jne
sarb
testl
mov
push
test
add
pop
inc
or
adc
imul
das
cmp
pop
jb
pop
mov
push
gs
in
pop
repz
and
push
xor
xor
ljmp
add
outsl
mov
add
jbe
outsl
cli
dec
and
dec
addr16
pop
outsl
inc
rol
xchg
aaa
dec
imul
cmpsb
test
mov
les
js
jbe
inc
mov
popf
pop
arpl
dec
incb
push
ds
stos
xchg
andl
inc
mov
addb
xchg
sbb
sahf
xchg
in
in
fwait
inc
xchg
push
or
cmpsl
jge
and
rolb
jbe
mov
cs
pop
inc
rcr
pop
mov
push
loop
push
xchg
mov
xchg
inc
cmp
subb
jb
push
jecxz
add
fucomi
inc
fildl
loopne
call
mov
fcmovu
aas
pop
insb
mov
in
mov
cmpsl
and
out
sahf
jbe
mov
mov
repz
into
ljmp
mov
sbb
mov
popa
push
mov
jl
dec
push
popa
pop
das
inc
imul
mov
sti
pop
or
imul
mov
xor
inc
fs
xor
xchg
test
mov
push
fistps
out
movsb
push
cmp
fsubrp
jnp
jno
dec
jp
pop
mov
out
lret
inc
sub
inc
lds
adc
xor
push
bound
push
scas
addb
out
push
fisttps
inc
xlat
cmp
mov
inc
loopne
cs
fsubr
repz
imull
ss
push
sbb
aas
push
adc
jno
adc
movsb
pop
jl
insb
push
lahf
out
fidivl
lcall
addr16
mov
in
ss
shrl
adc
ret
shlb
xor
push
sti
cmp
repz
and
in
pushf
aaa
push
jns
jge
cmp
pop
cmp
fcomps
out
nop
push
push
jno
mov
icebp
inc
cmp
jl
fdivr
jns
cmpsl
stc
sbb
lods
stc
cmp
out
add
pop
mov
repz
cmpsl
faddl
ds
cmp
jae
stos
lock
out
lcall
cwtl
xor
aad
pop
daa
push
std
dec
sbb
scas
sub
adc
jg
xor
rcrb
push
push
mov
xor
adc
fisubrs
pop
pop
mov
and
push
mov
loopne
sub
test
mov
sti
das
int3
push
and
pop
sbb
enter
adc
inc
repnz
iret
pusha
or
mov
orl
add
jg
sub
xchg
push
adc
mov
insb
mov
rcr
push
inc
lds
jns
or
xor
sahf
js
cld
ja
outsb
outsb
jp
xor
ljmp
xor
leave
fstps
gs
cmp
sbb
push
lods
push
pop
xlat
jp
addl
lret
iret
xchg
sbb
imul
sbb
lods
fmul
outsl
pusha
addl
fbld
jb
popa
je
mov
sub
adc
iret
dec
add
lds
pop
inc
mov
cs
sti
out
pop
push
ficoml
out
xchg
jbe
pop
pushl
sbb
xchg
daa
jb
push
inc
ljmp
inc
arpl
js
movsl
sub
cli
daa
adc
mov
scas
lahf
push
and
pop
sub
xor
movsl
ret
lahf
imul
xchg
jae
push
or
fcompl
inc
cs
mov
add
jo
push
movl
jno
add
daa
mov
cmovbe
mov
or
push
outsb
insl
xchg
mov
in
pop
dec
test
push
sbb
inc
fs
jb
imul
xor
out
dec
sbb
push
sub
mov
sub
or
push
push
arpl
jo
xchg
push
add
adc
inc
outsb
mov
pop
daa
add
push
mov
xor
xchg
ret
unpckhps
jne
pop
outsl
sbb
sub
push
jmp
fs
jo
xor
mov
or
outsl
imul
dec
fildll
jnp
mov
push
jle
pop
dec
movl
mov
adc
jb
cmpl
pop
add
pop
mov
or
push
sahf
or
add
push
dec
push
push
aas
push
push
adc
mov
lock
jg
adc
inc
cmpsl
adc
loopne
aas
incl
xlat
rcr
sub
inc
iret
das
js
adcl
pop
pop
inc
aaa
mov
sahf
push
push
push
aam
ja
pop
addr16
push
stos
push
jne
inc
xchg
inc
or
mov
xchg
xchg
es
lods
das
das
pop
inc
cmp
adc
sti
cmpsl
je
dec
xchg
sar
shlb
add
jmp
xchg
sbb
sub
xor
data16
add
aaa
or
jbe
scas
outsl
push
mov
das
ss
adc
xchg
cs
das
testl
fucomip
popa
subl
mov
add
jmp
rcr
fisttpl
pusha
push
xor
inc
ret
pop
addb
mov
adc
arpl
xchg
jmp
add
scas
out
fadds
js
push
stos
push
add
or
add
mov
fiadds
add
dec
repnz
jg
mov
xor
sbb
lods
or
xlat
sub
push
in
cmp
mov
push
inc
stos
lret
in
push
pop
sbb
jae
ja
fisttps
push
daa
inc
cmp
jmp
sbb
push
inc
insb
lods
addr16
dec
add
insb
sbb
sahf
mov
sbbl
aaa
mov
xchg
sbb
mov
sti
inc
push
jno,pn
sbbl
cs
or
lahf
inc
dec
mov
divl
sbb
push
cmpsl
call
add
cmpsl
push
lods
mov
lods
out
ret
pop
fildll
add
inc
xchg
inc
sbb
aaa
jns
jne
loop
jg
addb
inc
push
xlat
cmpsb
in
sub
lret
adc
inc
push
push
and
stos
or
cmp
fucomi
je
add
addr16
ret
out
jo
jae
daa
pop
jno
outsl
xor
push
bound
push
aaa
jae
pusha
or
pop
pop
sub
xchg
je
jne
or
jo
push
pop
scas
inc
dec
or
mov
adc
dec
out
inc
sbb
jl
mov
or
mov
insl
mov
insb
das
inc
fwait
mov
add
inc
test
outsb
les
punpckhwd
arpl
dec
outsb
push
addb
call
add
xlat
inc
sub
imul
inc
fisubl
mov
dec
testl
pop
or
pop
or
test
push
push
movsb
push
outsb
loope
iret
dec
pusha
sub
sub
push
test
adc
test
jmp
into
dec
inc
and
sbb
and
mov
sub
jo
jmp
pop
pop
jp
stos
addr16
mov
insl
pop
pop
stos
sub
paddq
or
aam
jns
jb
lock
sbb
jmp
lea
ret
push
ret
mov
add
dec
xlat
fstpt
inc
outsl
outsb
or
aaa
aad
or
inc
insb
test
pop
mov
cmpsb
outsb
cs
sub
jecxz
decl
adc
out
js
xor
push
add
decl
push
scas
pop
aas
inc
push
dec
inc
dec
push
mov
xchg
addr16
add
add
js,pt
jg
inc
sub
add
ret
jle
add
add
add
mov
addr16
cmp
into
mov
andl
and
lods
js
pop
ja
out
or
xor
das
ds
das
sbb
or
jle
inc
add
pop
xor
xor
push
and
jg
idivb
inc
push
inc
pop
and
or
aas
js
insb
jbe
es
iret
sbb
aam
jbe
push
and
cs
ss
inc
pop
mov
adc
jg
insb
pop
xlat
sbb
ds
outsb
add
pop
push
out
rcrb
add
mov
push
adc
lahf
pop
push
push
adc
and
xlat
jp
xor
fadd
data16
xchg
add
jae
pusha
and
lahf
lahf
mov
add
cmp
mov
adc
sbb
mov
das
lahf
lcall
addl
test
lock
clc
sahf
mov
fbstp
add
add
xchg
fcompl
stc
pop
add
and
es
cld
mov
iret
outsl
mov
jl
mov
mov
daa
call
enter
arpl
test
cmp
in
jl
mov
pop
or
or
sbb
sahf
data16
shrb
fldt
or
push
imul
inc
outsl
arpl
popa
push
test
je
and
and
arpl
mov
dec
dec
push
es
mov
cmp
je
and
je
mov
popa
stos
orl
out
inc
fdivrl
mov
and
nop
js
mov
lahf
sbb
cs
xor
and
push
push
pop
jbe
add
outsl
fs
gs
jo
or
mov
mov
push
addl
jne
daa
adc
add
or
addr16
and
push
mov
pop
gs
inc
or
cmpsl
test
negb
popa
jle
inc
popa
imul
xor
mov
jo
popa
imul
std
push
sahf
dec
sub
jno
xlat
sub
mov
adc
xchg
dec
inc
xadd
lods
sub
sti
sbb
inc
cmovo
in
jge
mov
cmp
nop
jo
adc
in
mov
pop
pop
pavgb
ja
inc
jg
add
or
ffree
setg
pop
mov
dec
mov
adc
push
add
out
das
sbb
or
inc
pop
cmp
sbb
and
ds
jnp
ffree
mov
fidivrs
ficoml
fs
jo
mov
add
pop
add
test
mov
lods
add
das
repnz
clc
add
mov
outsl
inc
push
fwait
insb
ficoms
daa
imul
loope
push
pop
push
xchg
xchg
push
nop
push
mov
push
or
push
je
int3
scas
sahf
mov
mov
add
mov
idivb
mov
push
xchg
in
mov
jbe
cmp
movaps
jb
or
add
and
js
or
ss
outsl
lahf
ror
int
loop
cmpsb
pop
adc
clc
imulb
add
or
inc
inc
jae
push
cmp
xchg
clc
cmp
jns
in
xchg
push
pusha
cmp
mov
inc
outsl
xchg
push
and
enter
fsubl
xchg
cmp
in
clc
xchg
xchg
test
sub
cmp
xorb
enter
sbbb
push
aam
hlt
lcall
xchg
aas
add
mov
or
and
bound
jl
xchg
insl
iret
jnp
pusha
push
jo
sar
out
scas
dec
add
mov
xchg
lods
pop
add
add
fsubrl
adc
xchg
inc
adc
and
bound
iret
test
pop
mov
mov
insb
je
loopne
addr16
xor
movsb
daa
divl
adc
notl
jnp
ss
in
hlt
add
and
fsub
inc
pop
inc
xchg
push
push
pop
pop
mov
pop
daa
pop
addr16
in
nop
out
mov
in
addr16
mov
and
push
in
xchg
pop
roll
les
inc
ds
sub
xor
les
lods
sub
adc
jns
inc
ss
je
mov
sbbb
cmp
pushf
ljmp
scas
add
fs
jae
out
in
hlt
cld
mov
mul
inc
cmc
sub
pop
cmp
dec
push
jl
sbb
insl
cmpsl
mov
aas
ja
nop
out
lahf
sarb
cs
sarb
or
int3
fsub
add
outsl
inc
ss
and
sbb
sub
cmp
aad
mov
lahf
dec
lahf
ja
test
lahf
push
insb
jl
enter
push
insb
cmp
repnz
jl
int3
fsubl
pop
enter
sti
es
test
fwait
sbb
sub
lahf
pop
pop
and
test
dec
sahf
shll
xchg
adcb
stc
cmpsb
mov
enter
mov
inc
es
aam
movsl
cld
nop
int
mov
pushf
mov
push
sub
aam
push
jns
imul
test
push
and
enter
in
pop
enter
sbb
or
mov
add
shrb
jg
pop
enter
push
fs
inc
es
test
push
jae
int
adc
iret
int3
or
pop
xor
adc
or
out
push
lods
cmpsl
cmp
cs
cld
push
iret
test
push
stos
jl
or
dec
nop
and
daa
addr16
les
dec
add
or
add
adc
cs
cltd
mov
test
push
fs
ja
adc
and
test
movsb
mov
jb
outsb
dec
lahf
xchg
inc
nop
iret
test
hlt
add
cs
cltd
inc
in
aad
push
jl
mov
mov
push
push
jg
test
cmpsl
cwtl
mov
cmpsb
mov
fldl
in
pop
mov
shlb
inc
ss
add
push
pop
int
cmpsb
mov
pop
enter
xor
test
xor
leave
jae
pop
fsubs
outsb
dec
mov
dec
add
lahf
or
add
lds
cmp
dec
mov
stc
push
jg
sarb
jl
mov
jns
pop
jl
shrb
push
jl
loopne
mov
jb
cmpsl
rorb
mov
xor
dec
mov
insl
shll
in
daa
mov
dec
iret
test
lahf
js
enter
and
call
xorl
in
movsb
sub
cmp
ja
pop
adc
out
sub
adc
mov
lcall
cmp
rorl
and
adc
and
ds
ja
nop
pusha
movsl
in
js
jo
test
aam
nop
sahf
pop
imul
inc
mov
inc
les
pop
pop
ja
loopne
cmpsb
push
mov
and
sub
mov
fstpl
addr16
fisttpll
lahf
pop
xor
out
js
inc
mov
and
push
inc
test
or
pusha
cld
or
lahf
or
cld
mov
dec
cmpsl
pop
push
jo
shlb
jg
shrb
mov
rcl
mov
iret
addl
sbb
sub
iret
pop
pop
adc
iret
aad
push
mov
outsb
adc
lahf
jl
or
xchg
test
movsb
mov
push
das
push
inc
and
add
jg
sub
or
inc
test
ja
lods
cmp
dec
push
pop
push
lods
inc
lods
in
stc
push
jg
fmull
addr16
lahf
faddl
stc
pusha
insl
ja
add
fcompl
inc
call
outsl
push
pop
insb
inc
mov
cmpsl
xor
and
xor
int3
push
addl
pop
repnz
push
cmpb
enter
jl
test
test
dec
in
fwait
nop
stos
xor
inc
stos
lahf
test
outsl
insl
xorl
out
adcb
ja
or
movsb
sahf
rcl
adc
push
jae
lahf
ja
in
dec
dec
repz
lods
push
xor
xor
dec
push
jmp
sahf
fs
daa
addr16
mov
stos
in
outsl
aas
mov
decl
sahf
or
pop
and
lods
loopne
mov
lcall
mov
mov
das
enter
and
mov
call
daa
iret
nop
clc
call
pop
aas
mov
shrl
lods
addr16
hlt
test
jns
enter
cltd
scas
fildl
jl
push
inc
scas
popl
fadds
ljmp
mov
je
push
mov
push
sbb
jae
int
daa
sub
mov
in
or
xchg
fadds
hlt
or
fcmovb
incl
scas
mov
or
pop
inc
lcall
cmp
push
push
mov
call
pop
enter
jmp
push
jl
int3
ja
js
outsb
mov
outsl
pop
lcall
pop
mov
adc
sbbl
sbb
xlat
data16
scas
push
es
lds
orb
addr16
aas
pop
out
cs
pop
xor
in
dec
daa
call
pop
leave
xchg
pop
inc
inc
cmp
xor
xchg
pop
leave
sub
and
xchg
testl
mov
repz
mov
jl
pusha
sbb
mov
jl
shlb
jo
lcall
or
mov
stos
cmp
jns
cwtl
push
inc
sub
mov
mov
cwtl
inc
ds
mov
movb
andb
insb
push
xor
adc
and
cmp
add
xchg
dec
hlt
mov
inc
bound
les
dec
dec
lcall
add
dec
repz
mov
add
jo
iret
mov
mov
out
mov
fs
call
leave
mov
out
les
add
jg
sbbl
dec
xchg
mov
ja
add
xchg
or
xchg
dec
adc
outsl
and
jns
pushf
inc
push
lock
sub
mov
mov
or
xor
outsl
add
inc
jns
daa
push
insb
inc
pusha
mov
dec
sahf
or
outsl
sub
mov
add
cmp
cmp
inc
mov
pushf
cmp
xchg
fs
scas
add
sub
add
sub
fildll
test
xor
popf
cmpsb
aaa
inc
xchg
or
mov
call
push
push
xor
scas
add
outsl
out
xchg
or
dec
xor
enter
fbstp
pusha
mov
sub
addr16
mov
add
ret
push
fildll
mov
xor
into
dec
in
dec
in
xchg
test
push
scas
push
cmp
dec
pop
xor
enter
xchg
popa
sub
and
fadd
mov
js
mov
add
xchg
and
mov
and
mov
nop
pop
jb
sbb
sub
push
xor
add
jbe
ret
fbld
outsl
and
js,pn
in
jmp
shrb
push
enter
pop
scas
xchg
hlt
mov
shl
sbb
pop
dec
out
add
rclb
inc
getsec
mov
es
outsl
mov
inc
push
xor
int3
daa
addr16
and
jns
es
adc
push
mov
jl
xor
push
mov
push
enter
nop
js
xor
push
nop
push
call
andb
push
xchg
mov
pop
sbb
mov
ss
shlb
xchg
xchg
divl
lahf
mov
inc
dec
and
stos
fstl
outsl
jg
xor
xchg
daa
movsb
outsl
mov
push
fs
scas
push
aam
push
mov
ja
jbe
mov
enter
stos
dec
xchg
mov
test
mov
in
mov
pop
insl
or
or
imul
test
add
ss
fst
or
dec
lock
je
movsb
mov
pushf
hlt
mov
or
mov
push
inc
outsl
and
mov
add
pop
push
push
mov
scas
rcr
loopne
negl
pop
pop
in
aaa
mov
xor
ja
stos
sbb
add
mov
cmpsl
mov
push
xor
dec
mov
enter
mov
sarb
in
pusha
mov
adc
iret
aam
movsb
jg
shlb
ss
jb
push
jg
addr16
or
mov
cs
xchg
pushf
add
sub
jnp
adc
call
push
mov
arpl
rol
das
outsl
add
stos
push
imul
aaa
pop
mov
pop
roll
shll
enter
cwtl
push
jl
aaa
add
and
idivb
add
ret
iret
cld
out
xlat
jo
push
xor
sahf
iret
aad
sub
daa
mov
xchg
pop
leave
in
mov
daa
or
xor
leave
add
or
sahf
testb
push
les
xor
cmp
sarl
test
cmp
adc
lcall
je
scas
lahf
or
ret
mov
cs
xchg
addr16
ret
xor
and
inc
push
ret
imul
pop
or
fbstp
loopne
cmpsb
nop
fwait
xchg
add
in
leave
adc
dec
add
adc
scas
push
lcall
test
mov
movsl
les
scas
add
and
pushf
outsl
out
adcb
adc
sub
lahf
jo
add
mov
roll
jb
or
out
xchg
fsubr
out
daa
or
js
pop
add
cmpsl
mov
mov
push
lods
daa
aas
sbb
sbb
outsl
xor
push
fists
sahf
add
clc
es
addr16
and
mov
dec
divl
or
xor
push
inc
add
jo
inc
call
jb
mov
je
mov
cmp
dec
in
fadds
fs
ss
add
adc
nop
repnz
inc
enter
push
pusha
lods
mov
push
ja
enter
or
push
lods
push
hlt
das
mov
mov
inc
call
in
fsubrs
loopnew
pop
mov
xchg
rcl
push
nop
and
inc
push
std
dec
out
cmp
sbbb
adc
lahf
out
sahf
inc
jnp
int3
repnz
xor
jae
ret
out
sahf
cmpsl
stc
or
pop
ja
repz
out
or
cmpsl
stc
cmp
popf
ret
out
popa
jbe
idivl
pushf
lret
bound
push
jo
xor
out
xlat
and
rcrb
push
push
std
and
dec
repz
inc
pushaw
addl
jns
out
and
jl
into
repz
repz
inc
push
iret
mov
mov
repz
in
or
dec
arpl
out
repz
call
jno
repz
movsl
rcrb
sbb
jl
cmpsl
stc
adc
adc
rorl
xchg
mov
out
sahf
out
outsl
sub
repz
add
daa
dec
xchg
fisubs
int
jns
jno
lods
sbb
sahf
out
cmp
faddl
jae
leave
ds
sarl
insl
mov
lahf
out
cmpl
jbe
fists
ja
repz
out
fidivs
pop
xchg
repz
iret
loopne
jns
jp
mov
jns
out
jnp
xchg
mov
stc
clc
cmp
sub
push
outsl
stos
jl
jge
out
fiadds
push
iret
cli
ss
stc
cmp
out
xchg
adc
lret
pop
xor
sahf
cmpsl
dec
mov
out
dec
hlt
push
adcl
dec
repz
daa
test
test
lahf
out
sub
add
jecxz
mov
ljmp
push
xchg
mov
iret
roll
sbb
push
shl
mov
imul
lea
out
cmp
and
dec
repz
fs
add
jl
xchg
popf
das
xchg
pop
scas
loope
repz
xchg
inc
sahf
cmpsl
stc
cmp
adc
ds
sarl
dec
shrb
imul
stc
cmp
repz
jb
clc
dec
cltd
repz
cmpsl
mov
inc
lcall
sub
repz
dec
shll
cmp
ds
ja
add
cltd
jns
out
xlat
xor
imul
mov
repz
out
aam
movsl
push
test
cmpsb
ds
mov
cmpsl
dec
cmpsb
ds
repz
xor
out
mov
test
sarl
mov
stos
mov
jg,pt
scas
ljmp
cmp
cld
inc
scas
jl
fnstcw
repz
cmpsb
push
and
xor
cmpsl
ret
testb
dec
mov
ds
mov
mov
sahf
mov
mov
mov
insb
ss
out
push
int
insb
aas
enter
dec
mov
adc
int3
incb
iret
jp
shrl
aam
mov
dec
int3
nopl
sub
shr
add
push
aas
aam
pop
xor
adc
xor
inc
mov
inc
and
cmp
pop
pop
inc
and
or
pop
in
in
inc
pop
aaa
pushf
mov
pop
jb
fnstsw
icebp
ds
dec
pop
enter
test
mov
notb
fdivr
jle
adc
jg
dec
ss
jg
mov
aas
mov
jg
xchg
mov
or
aas
push
fwait
inc
pop
daa
cmp
into
inc
dec
negb
and
fistps
mov
jecxz
pop
mov
adc
scas
out
es
sbb
in
pop
in
das
and
xchg
adc
hlt
cmp
insb
dec
fcomi
out
cmc
mov
jo
push
aas
data16
jnp
daa
and
and
pop
jnp
leave
in
mov
ss
cli
mov
daa
pminsw
rcll
inc
cmpb
pop
push
daa
in
push
popf
pop
adcb
inc
pushf
dec
cmp
pop
adc
adc
jns
lock
mov
cmp
jo
jb
jl
lahf
pop
dec
test
popa
dec
aas
dec
sbbl
sarb
fbstp
inc
scas
sbb
pop
pop
push
bound
jnp
xchg
pop
idivl
sti
adc
vmwrite
shrl
jne
fldenv
out
push
pop
loopne
add
xor
lcall
dec
in
xor
or
or
mov
push
push
dec
mov
inc
mov
movsb
jnp
scas
cld
add
push
inc
je
leave
mov
push
daa
dec
fldl
pop
xchg
push
out
and
dec
or
inc
insl
in
lods
iret
ja
pop
aaa
addr16
sarl
gs
fbstp
pop
xor
xchg
fwait
dec
pop
jb
sub
les
xor
pusha
daa
push
out
pop
and
mov
scas
mov
push
pop
and
jae
push
xchg
mov
push
imul
test
mov
sub
fisttps
call
mov
inc
jb
ficoms
add
in
cltd
hlt
and
xlat
jae
dec
adc
inc
push
scas
addr16
xor
pusha
aaa
addr16
mov
sub
out
nop
xchg
scas
andb
mov
aas
xchg
pop
lcall
pop
mov
fcom
out
or
xchg
push
loop
mov
mov
jmp
fadds
sbb
daa
dec
and
add
cmp
pop
pop
pushf
mov
and
repnz
sbb
lock
hlt
add
mov
flds
cmc
jne
pushf
in
dec
fnstcw
pop
fwait
in
mov
pop
pusha
xchg
inc
jb
rclb
rolb
inc
mov
leave
ficomps
ficompl
out
or
pop
pop
push
fninit
cmp
lahf
push
add
cmpsl
daa
pop
leave
xor
inc
pusha
imul
cwtl
addr16
push
dec
cs
pop
mov
clc
addr16
nop
dec
add
fistl
cmpsb
add
cmp
inc
mov
cmpsl
movsb
fisttpl
mov
iret
mov
mov
and
lar
dec
and
pusha
mov
fdivl
mov
iret
xchg
mov
repnz
into
icebp
in
add
or
arpl
insb
xchg
and
arpl
xchg
daa
cmp
jb
leave
leave
push
pop
gs
jmp
inc
mov
nop
cmpsl
cwtl
pop
outsb
mov
in
mov
pop
mov
and
push
cmp
addr16
xchg
xchg
xchg
fninit
out
stc
out
fmulp
add
femms
add
xlat
popf
and
cmp
out
sahf
out
or
pop
fs
mov
imul
cmp
pop
pushf
cmp
mov
xchg
add
jle,pt
fdivp
push
punpckhbw
daa
fiadds
adc
push
addl
push
insb
xchg
mov
adc
sbb
cmp
inc
fs
and
push
fbstp
inc
mov
andl
enter
gs
mov
cmp
gs
gs
dec
dec
and
or
adc
outsl
and
data16
pop
cmp
fnstsw
and
in
adc
aaa
leave
test
push
xchg
xchg
pop
int
mov
pusha
stos
imul
cmp
cmp
mov
push
add
add
sub
fwait
loope
jmp
testb
fbld
filds
pop
jns
mov
clc
pop
loope
stos
dec
jb
addr16
inc
push
or
sbb
decl
cs
imul
cs
lock
daa
and
mov
mov
mov
mov
add
add
frstor
push
iret
fadds
daa
mov
jl
jecxz
push
daa
xchg
add
xor
pop
push
push
cmp
leave
xchg
test
subb
jb
pop
xor
inc
jo
dec
hlt
xlat
sbb
daa
pop
xchg
jge
cld
add
inc
ja
scas
mov
cmp
xor
xchg
pushf
push
in
imul
add
mov
add
enter
in
in
leave
add
mov
mov
bswap
xlat
loop
leave
or
push
adc
enter
in
in
sbbb
in
stos
aam
inc
testw
dec
repnz
out
out
or
in
insl
push
mov
and
jno
or
hlt
cltd
cmovge
jmp
out
sub
outsb
fstl
shll
in
enter
ja
imul
fbld
mov
pushf
addr16
dec
xor
xor
or
data16
xchg
lods
mov
setl
jp
adc
cmpsl
pusha
nop
and
call
leave
mov
adc
in
test
dec
adc
jmp
pop
and
push
sub
add
cmp
mov
push
add
iret
repz
imul
addl
mov
mov
mov
shlb
sub
aaa
xchg
cld
clc
mov
jns
mov
inc
sub
insl
xchg
mov
and
in
outsb
insl
iret
pusha
ljmp
pop
lgs
dec
sahf
fldt
mov
cmp
jbe
pop
xor
xor
adc
push
or
xchg
mov
in
xchg
add
xchg
lods
cwtl
iret
mov
xlat
outsb
mov
cs
sbb
pop
jo
outsl
and
mov
lcall
xchg
pop
mov
test
pop
and
fmul
dec
sahf
pop
add
jo
in
cs
imul
push
xor
pusha
pop
pop
ja
addr16
mov
add
push
jno
femms
daa
push
nopl
rorl
inc
jno
dec
and
add
mov
pop
xchg
scas
or
inc
daa
fisttpll
pop
xor
iret
pop
adcb
out
ja
out
addr16
sbbb
jns
out
in
out
jno
daa
cmp
test
out
xlat
inc
out
loop
dec
and
push
push
or
mov
mov
addr16
mov
mov
outsl
xchg
push
add
repz
cmp
test
mov
repnz
sahf
cmp
jb
into
jb
dec
xor
out
scas
divl
sbb
daa
mov
inc
xor
in
rolb
lock
es
pop
es
cmp
mov
push
push
insb
lock
jae
lret
lret
xlat
cmpsl
xor
jae
scas
mov
lahf
jo
push
jge
sbb
lock
push
mov
jae
cmp
mov
sub
xor
cld
scas
cmpsb
jnp
scas
pop
je
outsl
aad
dec
jb
mov
icebp
pop
enter
push
out
nop
fistpll
je
mov
fildl
push
push
lahf
pop
je
enter
xor
push
pop
mov
scas
fbld
jns
mov
pandn
cmp
inc
fwait
testb
iret
je
ss
fucomp
pop
dec
push
add
jns
in
pop
das
gs
add
pop
leave
jae
mov
dec
dec
jb
jne
repz
xchg
pop
jb
cmp
jbe
nop
imul
insb
mov
mov
scas
push
xlat
push
inc
jb
inc
pop
int3
aam
jmp
xchg
add
mov
xor
dec
repnz
hlt
jne
jns
ja,pn
push
pop
inc
pop
sub
iret
insb
mov
dec
outsb
ja
or
pop
mov
ja
cmc
cmp
js
stc
add
add
adc
or
adc
add
xchg
cmc
dec
push
fbld
fnstsw
jle
mov
or
jbe
in
xorb
enter
or
sarb
cmpsl
push
aaa
repnz
hlt
add
out
jne
es
add
repz
aad
jns
inc
jns
pop
cmp
imul
cmpsl
jg
mov
pop
pop
stos
push
mov
jns
fcmovnb
das
int3
or
dec
sahf
ja
out
das
in
push
or
add
sbb
xor
push
jp
adc
pop
sahf
xchg
and
adc
jp
mov
outsb
push
inc
jb
cmp
stos
loope
negl
dec
loopne
int
out
jg
enter
ja
pop
incb
push
jnp
loop
loop
jnp
push
daa
push
jnp
xchg
jl
lahf
or
testl
dec
xchg
add
call
cmp
dec
scas
dec
lods
push
lods
sarb
mov
jnp
jnp
jnp
pop
and
push
prefetchnta
jl
fwait
std
pop
shlb
pop
and
fwait
add
pop
sahf
fistl
call
mov
adc
dec
lods
stc
dec
ret
pop
pop
xor
pop
add
sbb
nop
cli
mov
xchg
jl
xchg
xchg
sbb
lcall
mov
lds
fucomi
in
push
add
out
xlat
testl
add
or
pop
imul
inc
popf
xorl
xchg
out
xlat
add
add
cmpsl
cs
add
insl
cmpsb
jge
fisttps
inc
xlat
adc
leave
inc
ljmp
xlat
addr16
mov
jle
into
sub
mov
xchg
jg
daa
xchg
ss
jl
inc
cld
scas
mov
das
rorb
add
sbb
push
add
adc
insb
cmp
mov
rcll
jg
jg
add
js
bound
mov
cmp
test
jg
jg
jg
mov
mov
add
ja
in
or
lcall
ja
fs
fidivrs
push
add
inc
addb
subb
jge
adc
jmp
ja
mov
out
pop
lods
push
outsl
jl
stc
pop
dec
loop
iret
add
dec
adc
pop
mov
jg
pop
dec
pop
ja
aam
push
xchg
pop
push
add
fs
insb
je
xchg
out
jns
test
mov
nopl
jns
lods
mov
mov
les
int3
adc
jns
xlat
dec
unpckhps
fcoml
in
cmp
cmp
cmpl
mov
xorb
andb
loop
pop
das
xor
mov
in
call
cmp
cld
mov
dec
icebp
pop
andl
pop
xchg
orl
mov
jnp
aam
stos
cmc
and
cmp
inc
mov
test
pop
test
ficoml
xor
dec
addr16
pop
int3
push
cwtl
mov
add
jg
xchg
jmp
inc
jb
stos
add
jae
out
ret
cmp
jmp
dec
or
loop
ljmp
test
cli
push
unpcklps
push
xchg
add
out
leave
pop
fs
inc
jg
sbb
addr16
pop
dec
cmpsl
cmc
loopne
push
or
pop
or
push
mov
daa
iret
jmp
adc
dec
adc
outsl
adc
push
es
add
ja
cmp
sbb
daa
cmp
test
fistps
dec
test
or
push
add
and
fsubr
and
pushf
pushf
mov
jb
pop
add
jbe
pop
mov
ret
clc
xchg
mov
adc
push
jmp
add
and
pop
call
and
fildll
xchg
push
push
lcall
push
out
mov
mov
sbb
push
xchg
rep
push
out
nop
push
add
mov
lods
push
iret
mov
repz
or
or
repz
pop
push
testb
cmp
pop
sub
jns
jns
xchg
xchg
out
sahf
pop
push
push
xchg
pop
mov
or
jns
insb
je
xchg
mov
or
xchg
mov
sbb
add
and
inc
fucompp
into
repz
in
dec
push
inc
dec
push
pop
xor
insb
push
fnstsw
dec
jg
xchg
pop
ja
xchg
xchg
lahf
xchg
xlat
xor
jp
add
adc
in
xchg
pop
fdivr
and
dec
dec
outsb
mov
mov
ret
jne
mov
pop
push
sbb
mov
orb
inc
mov
insb
imul
test
cltd
dec
ds
incl
shrl
cmp
mov
dec
dec
cmp
dec
js
cmpsb
loope
mov
cmpsl
sub
pushl
mov
cmp
mov
jns
fwait
je
lods
orl
outsl
jns
pop
popf
push
pop
xchg
mov
jecxz
stos
or
and
inc
movsb
lsl
int3
aaa
mov
add
mov
mov
push
daa
int3
add
adc
and
mov
or
or
dec
and
and
adc
sbb
sahf
rcrb
push
aas
mov
add
movsb
mov
xchg
mov
popf
cmp
sub
mov
jns
mov
enter
loopne
lahf
sub
outsl
push
adc
add
push
add
and
aas
sub
jg
mov
ss
cmpsl
addr16
cmpsl
pop
daa
pop
lods
lods
ja
mov
stos
call
daa
aad
leave
dec
into
aad
mov
in
mov
sub
xchg
adc
lea
pushl
fimuls
xchg
or
cmp
inc
dec
repnz
lea
push
daa
pop
int
pop
iret
cmpsb
scas
outsb
or
das
call
push
add
cmpsl
mov
inc
repnz
mov
or
cmp
dec
call
popf
mov
xchg
mov
dec
sahf
out
add
repnz
xchg
fcmovne
xchg
add
push
leave
test
lahf
inc
mov
push
iret
subps
jmp
xchg
xchg
xchg
cmc
shlb
push
cmpsl
push
outsb
pop
dec
adc
repz
add
cmp
nop
vmwrite
cmp
inc
add
scas
fsub
push
xcrypt-ofb
cmpsl
cs
leave
repz
pop
or
jae
cmp
jle
or
in
sahf
push
lahf
rsm
mov
cmp
adc
xor
outsb
aaa
psubb
cltd
xor
invd
mov
pop
sbb
das
orb
aas
or
inc
pop
cmp
xchg
cmpl
add
xchg
xchg
add
cs
mov
xchg
aas
divl
rcrl
decl
pop
xchg
adc
repnz
sbb
or
xchg
dec
fmuls
mov
adc
lcall
test
mov
outsl
mov
sahf
add
push
jg
xchg
pop
mov
push
or
mov
sub
add
cmp
dec
pop
push
pop
imul
jnp
mov
lock
pop
mov
loope
jmp
pop
icebp
psubw
add
aaa
jns
adc
dec
sbb
or
rcrl
fists
push
outsl
out
fstl
stc
ja
pop
push
aas
push
and
aas
iret
xchg
in
in
mov
mov
pop
jb
lret
xchg
js
jb
add
std
add
out
or
xchg
cmp
cmpsb
adc
adc
push
xchg
iret
repz
pop
imul
cmp
leave
jae
add
xor
pop
xchg
xchg
xlat
xchg
xchg
xchg
mov
mov
into
xchg
iret
les
stc
add
xchg
adc
adc
pop
or
xchg
incl
outsl
emms
jg
sahf
xchg
out
add
cmp
ret
mov
in
xchg
into
icebp
in
std
xchg
jg
xchg
pop
inc
call
sbb
xor
mov
insl
mov
ja
addr16
pop
jae
jae
jl
mov
in
mov
mov
leave
leave
insl
and
ja
stc
or
iret
add
cwtl
out
mov
ss
and
test
push
enter
fists
js
push
imul
daa
lcall
cs
ret
rclb
sysret
push
xchg
aaa
jns
fcomps
add
push
dec
into
jae
mov
or
sbb
rcl
xor
out
pop
mov
push
mov
mov
xchg
jo
addb
xchg
movsl
out
lods
lgs
shll
mov
cld
dec
outsb
mov
negl
sbb
daa
lcall
fisubs
lahf
jl
sahf
out
pop
xchg
adcl
or
lock
jmp
mov
out
sbb
cmp
mov
ja
cvtps2pi
movntq
out
out
mov
inc
dec
dec
dec
dec
sahf
push
pop
outsl
jp
sahf
out
or
in
in
stos
mov
repz
sahf
out
adc
out
adc
std
into
adc
xor
loope
pop
dec
push
pushf
sbb
mov
mulps
pop
daa
xchg
iret
add
pushf
cs
out
pop
add
or
psraw
mov
popf
addr16
out
adc
dec
xor
mov
add
popf
out
jg
jne
inc
cmp
popf
das
push
decl
sahf
pop
mov
lar
pop
push
or
jns
out
or
outsl
cmp
in
ja
jg
or
bnd
adc
enter
fcompl
mov
push
or
sub
pop
testb
jmp
pop
pop
sbb
push
pushf
out
push
daa
push
outsl
sahf
lahf
fisttps
ja
cs
push
xlat
xchg
fcomps
push
fistps
decl
and
or
orb
hlt
in
or
mov
lahf
das
or
pop
cltd
jne
into
adc
lahf
mov
pop
adc
out
jg
lahf
jb
pop
inc
lahf
dec
pop
push
maxps
mov
mov
out
in
in
lcall
mov
lcall
dec
lds
pop
fsubrl
inc
aad
fucom
sub
in
pop
clts
add
jns
cmc
lahf
std
lahf
pop
mov
ss
pop
mov
loop
and
mov
mov
xchg
pushf
or
test
in
seto
popa
mov
push
inc
jmp
inc
pop
adc
inc
decl
dec
inc
push
roll
inc
popf
stos
push
mov
aaa
mov
sahf
out
sahf
add
add
iret
repz
pop
push
or
pushf
cmp
repz
test
or
jns
movsl
fidivs
out
sahf
out
rclb
fstl
out
sahf
call
pop
jns
sarl
sbb
push
pop
pushf
je
out
sub
sbb
pushf
pushf
pushf
pushf
push
adc
pushf
pushf
adc
adc
sbb
jecxz
enter
loopne
pop
mov
daa
mov
popf
negl
add
jne
and
sarb
cmp
sbb
push
daa
mov
jno
push
xchg
cwtl
mov
inc
push
divl
mov
shlb
daa
jp
mov
inc
mov
or
and
and
sahf
add
mov
and
fisttps
fs
mov
mov
push
add
mov
or
jne
fwait
addr16
adc
and
jmp
icebp
psubw
out
sahf
testl
sbb
cmp
add
add
pop
sahf
out
sub
or
nopl
dec
inc
divps
adc
sbb
pusha
ljmp
mov
xchg
pop
xchg
iret
cltd
cs
sub
fwait
xor
ja
mov
out
mull
pop
pop
movsl
lcall
cmp
mov
movsl
cmp
jns
daa
iret
add
xchg
add
and
pop
jge
sbb
es
mov
pop
test
mov
xchg
bswap
push
add
in
in
fcomps
push
or
jmp
xchg
out
lock
or
cmpsb
push
fucom
cmp
push
adc
or
ds
es
repz
xor
add
push
pushf
cmp
add
sub
mov
xchg
push
add
lcall
add
and
lock
mov
jne
jne
pop
jo
daa
daa
or
fsub
fcmovne
leave
add
pcmpeqw
invd
push
add
adc
or
mov
and
clc
pop
cmpsl
pop
cmp
and
scas
fstpl
sub
pushf
fiadds
cmp
frstor
jle
xchg
mov
mov
mov
daa
or
sub
int3
enter
xlat
ja
into
sub
imul
mov
lahf
test
jmp
xchg
push
dec
test
add
jg
push
clc
iret
int
fisubrs
cmp
push
out
out
test
pop
ret
sub
test
leave
adc
sub
movsb
sub
mov
aas
xchg
add
test
push
mov
stc
incb
cmp
incl
sub
xor
out
pop
or
xor
data16
inc
iret
loope
in
fs
les
in
test
mov
stos
mov
stos
jmp
mov
add
cwtl
sarb
push
mov
das
fdivs
loopne
push
aas
int
xlat
fisttpll
xchg
push
pop
pop
xor
xor
or
jb
adc
and
daa
daa
daa
iret
or
ds
push
das
xchg
subb
jae
and
pop
dec
jnp
subl
inc
jmp
sub
flds
ficomps
jecxz
mov
fucom
push
lods
push
pop
push
scas
sbb
jmp
xchg
lods
daa
pop
syscall
push
xor
xchg
cmpsl
fwait
cmp
invd
dec
sahf
outsb
repnz
imul
aaa
inc
jb
pop
cmpsl
lods
pop
insb
jbe,pn
jb
lret
xchg
into
cwtl
cs
testl
or
jo
xchg
sbb
dec
das
in
pop
dec
adc
sub
das
pop
daa
inc
jae
pushf
jo
or
sbb
loopne
inc
dec
inc
iret
push
ja
dec
lods
push
lods
sbb
and
shrb
ret
jo
add
lods
iret
in
in
lea
xchg
lahf
cmpsl
push
cld
or
pop
fldt
dec
pop
shl
push
xor
scas
dec
jnp
and
ja
shl
jbe
arpl
cmp
lahf
xchg
cmp
fisttpl
lods
cmp
add
outsl
jmp
add
js
sub
xor
push
scas
aas
push
scas
out
and
push
scas
es
add
jns
out
xchg
ss
add
xchg
pop
aaa
pop
add
out
sahf
xchg
add
or
sahf
push
pop
adc
adc
enter
xchg
out
scas
pushl
mov
les
in
push
xchg
or
mov
bnd
push
std
add
sahf
xchg
or
mov
mov
xor
cmovs
divb
pop
out
hlt
int3
fisubrs
test
mov
mov
out
pop
enter
push
pshufw
push
sahf
out
pop
jo
nop
adc
jns
adc
xchg
pushf
push
fsub
call
lock
sbb
mov
sbb
jmp
mov
mov
push
and
cmp
push
iret
jmp
iret
es
movaps
sub
repz
sub
push
sub
sub
cmp
subb
nop
sets
jg
mov
or
xchg
outsb
inc
pop
fcmovb
and
add
in
inc
hlt
xor
jns
mov
add
xor
xor
mov
mov
pop
mov
or
addr16
mov
rclb
mov
mov
incl
cmp
outsl
ja
xchg
dec
xor
aas
adc
or
movsb
scas
mov
popf
xchg
loopne
push
cmpsl
enter
cmp
sysret
rorb
faddl
outsl
mov
out
out
dec
testb
mov
jns
fwait
das
or
push
push
cs
sahf
out
sahf
adc
adc
dec
jns
out
adc
push
out
push
adcb
sahf
out
sahf
sbb
jns
out
sbb
jns
out
push
rcrl
fistpl
in
out
and
cmp
repz
push
mov
adc
sbb
iret
repz
sub
sub
push
in
jbe
cmp
pop
addr16
outsl
pop
fisubrs
jg
xchg
jns
out
jmp
mov
and
pop
enter
jns
rcrb
jns
out
call
outsl
push
and
pop
cltd
cmp
repz
adc
adc
enter
mov
mov
inc
mov
and
popl
lea
xchg
xchg
mov
mov
mov
mov
sahf
out
push
pop
ret
or
or
or
mul
jns
xchg
mov
or
push
adc
out
sahf
nopl
sub
xor
out
adc
inc
adc
jns
out
adc
out
sahf
pop
jno
jnp
mov
out
sbb
jns
out
sbb
in
sahf
pop
int
xlat
loope
outsl
mov
jmp
popl
scas
movzwl
das
jg
movhps
iret
repz
pop
xor
sahf
aaa
jns
dec
mov
adc
loope
or
pusha
daa
push
adc
mov
mov
push
or
mov
or
xchg
push
or
cmp
pop
roll
jns
in
mov
cmp
daa
dec
aas
jmp
sbb
sbb
cmpsb
mov
aas
out
add
popl
out
jns
add
shr
in
or
decl
vmwrite
nop
mov
sbb
mov
mov
jns
add
add
in
and
or
hlt
pop
cld
mov
daa
adc
das
and
out
dec
dec
xor
cmova
push
pop
pcmpgtw
cmp
mov
lea
cmp
cmp
jns
out
mov
xor
loop
scas
mov
or
test
iret
leave
in
push
unpcklps
sbb
add
sub
pop
outsb
repnz
push
or
repnz
pushw
push
outsb
popf
cmp
jbe
dec
jle
adc
mov
adc
mov
add
adcl
mov
or
lahf
pop
mov
push
iret
repz
rep
mov
inc
mov
push
mov
leave
outsl
jp
test
nop
adc
iret
repz
adc
mov
daa
iret
jae
mov
iret
jae
cmp
call
jl
daa
or
iret
leave
repz
xor
mov
popa
insb
cmp
cmp
ja
lea
mov
mov
add
mov
in
mov
mov
push
push
ficoms
mov
mov
mov
push
or
leave
leave
leave
push
pop
fs
mov
adc
mov
xchg
out
xchg
pushf
pop
movsb
in
pop
aaa
nopl
lods
sbb
sbb
sbb
push
repnz
add
out
cmp
sbb
invlpg
cmp
cmp
sub
mov
enter
mov
outsb
inc
leave
mov
scas
xchg
fmuls
addr16
push
add
lahf
pop
jo
jb
mov
out
pushf
fucomp
push
or
or
mov
add
prefetch
adc
addr16
daa
mov
cmp
sahf
out
rcpps
adc
adc
out
jbe
jle
mov
dec
inc
push
sbb
jg
cmp
cmp
push
js
scas
and
test
in
jbe
mov
mov
iret
jae
mov
aas
push
sub
sub
cmp
repz
cmp
cs
xor
dec
adc
xor
xor
iret
cmp
xor
aas
repz
ja
push
cmp
cmp
sarl
cmp
dec
push
shll
mov
sub
aaa
aas
inc
inc
in
sahf
out
inc
pop
inc
addr16
jg
mov
adc
sbbb
rorl
mulb
bound
dec
fimuls
push
test
clc
inc
dec
ds
repnz
testl
mov
jmp
xchg
xchg
and
rol
push
pop
repz
in
and
jns
fcmovne
inc
push
pop
pop
or
out
ja
test
xchg
out
sahf
xchg
adc
mov
adc
jns
loop
sbb
clc
out
fs
ret
adc
push
sbb
popf
xor
dec
push
push
dec
dec
outsb
punpcklwd
fbstp
addr16
fisttps
lea
ret
ret
daa
ja
and
jno
mov
iret
cmp
add
les
xchg
jo
fisttps
add
cmp
pop
xor
aas
dec
sahf
out
jns
or
or
jns
out
or
jns
in
in
cltd
shld
scas
out
xchg
out
mov
sahf
out
sahf
push
rclb
fistpl
out
iret
repz
icebp
cs
sbb
repz
adc
sbb
jns
xchg
mov
ss
jns
dec
and
pop
iret
repz
push
daa
jne
subb
mov
shrd
mov
adc
das
xor
xchg
insb
rolb
cmc
cmp
inc
sahf
out
pop
push
add
add
cmp
dec
aas
push
aad
add
pushl
cmpsl
outsl
xchg
add
iret
aam
fistpll
rorl
pop
ljmp
add
push
or
leave
repz
push
or
or
in
cmp
pop
push
inc
adc
out
jns
dec
adc
adc
out
sahf
jb
jg
mov
jns
out
xchg
sbb
cmp
mov
jns
out
fstpl
call
sbb
or
iret
push
enter
sub
and
and
sub
test
comiss
inc
and
imul
mov
push
out
outsb
add
lahf
jb
pop
jns
out
lar
jge
mov
sub
push
add
xchg
enter
fiadds
push
or
out
sahf
out
fisttpl
call
sahf
repz
mov
adc
adc
pop
leave
push
iret
repz
adc
adc
dec
in
in
daa
pop
push
push
gs
iret
repz
sbb
outsl
daa
test
mov
and
pop
push
ret
xchg
daa
iret
add
add
or
cmp
lret
lret
pop
popf
cmp
in
wbinvd
cmp
mov
dec
push
push
or
iret
push
pusha
imul
movd
mov
xchg
outsb
daa
iret
adc
sbb
jns
out
sbb
sbb
out
in
sahf
sbb
sbb
out
push
cmp
repz
pop
mull
dec
gs
and
cmpsb
push
cmpsb
xchg
dec
lret
ja
sahf
fldt
divps
mov
push
jg
ja
cmp
mov
out
jns
stos
mov
sarl
dec
femms
int3
pushf
cmp
repz
adc
clc
outsl
jbe
repz
int3
push
int3
das
sbb
adc
daa
daa
femms
sbb
and
jns
out
das
sbb
iret
cmp
inc
sbb
push
jae
jg
int3
dec
repz
dec
and
repz
es
mov
push
ror
aas
sub
dec
in
dec
inc
add
and
push
jl
mov
sbbl
int
xchg
and
int
int
das
jl
in
cmp
daa
daa
daa
add
shrl
rcrb
add
fcmovnbe
pop
loope
in
or
popf
je
testl
into
mov
into
das
and
inc
pop
repnz
jae
adc
data16
jae
adc
repnz
pop
fistps
ljmp
add
or
sbb
out
dec
ficomps
dec
leave
repz
sahf
and
push
and
test
mov
es
repz
leave
daa
aam
fcomip
fmull
pop
das
sub
sbb
sub
sub
mov
xor
push
movhps
iret
repz
aas
cs
aaa
iret
in
in
push
ss
dec
movq
jbe
cmp
sahf
xchg
xchg
popf
pmaddwd
mov
aas
push
repnz
scas
leave
into
inc
adc
mov
shrd
mov
out
rorb
fldt
fimuls
ja
push
push
icebp
das
or
iret
leave
repz
unpcklps
pop
sub
mov
das
dec
addps
out
in
sahf
adc
outsb
jns
adc
popf
cmp
xchg
das
pushf
xcrypt-ctr
cmpsl
push
in
in
sahf
pop
mov
mov
xchg
fcmovnbe
pop
loopne
clc
push
out
lea
push
nopl
jae
jns
and
jae
pop
das
jns
daa
iret
and
sub
jns
out
sub
into
icebp
sbb
pop
and
pop
das
cs
cmp
cmp
inc
push
push
xor
repnz
xor
sahf
jb
popf
mov
mov
in
jbe
clc
add
sarl
jb
sete
das
inc
mov
dec
pop
add
mov
add
push
aam
sbb
inc
rol
in
xchg
pminub
inc
push
add
xchg
in
sarl
jbe
lods
das
lgdtl
aam
mov
aaa
rcrl
es
or
push
or
aaa
in
push
aad
inc
xor
les
je
ret
push
xchg
cmc
fcmovne
or
inc
mov
daa
cmp
push
stos
rclb
inc
or
add
loopne
add
add
ss
xor
aaa
nop
jp
xorb
aas
inc
push
dec
pop
dec
and
mov
xchg
add
pop
mov
sbb
outsb
dec
aaa
pop
cmp
and
aaa
push
lcall
xchg
scas
and
push
xlat
sbb
out
pop
push
push
or
or
in
in
or
or
or
outsb
mov
scas
or
daa
dec
outsb
ja
daa
adc
and
pop
inc
inc
push
addr16
das
mov
in
jbe
xorps
insl
out
pop
cmp
mov
jb
pop
andb
iret
add
addl
cmp
mov
fsubrl
cmp
sbb
dec
adc
data16
cmpsl
add
sbb
dec
adc
add
mov
inc
popa
add
mov
add
pusha
decl
adc
pop
adc
jb
add
dec
mov
lods
pusha
cmpb
cmpsb
fisttps
mov
and
jle
test
shll
mov
decb
inc
add
mov
iret
mov
in
sbb
in
call
adc
dec
leave
pop
cld
push
ficompl
push
pop
fisubrl
xor
fcomp
shlb
fneni(8087
stc
jb
jle
sbb
ret
out
sahf
push
movsb
js
je
insb
push
fs
push
dec
inc
xor
sahf
out
sub
sbb
adc
jns
out
or
add
iret
repz
cld
repz
hlt
lock
cmp
int3
repz
les
mov
iret
repz
xchg
mov
je
push
or
repz
inc
outsl
mov
cmp
jl
repz
and
push
cld
repnz
shr
fadd
mov
iret
repz
cwtl
nop
mov
out
push
dec
in
sahf
out
xor
add
out
idiv
icebp
mov
fmul
mov
jns
push
or
and
jl
push
push
inc
icebp
and
inc
mov
add
sbbl
add
jg
shrb
pop
add
jbe
mov
pop
mov
add
add
out
inc
or
aas
sbb
imulb
or
pop
orb
call
cwtl
push
sbb
jo
mulb
push
push
push
mov
ss
add
push
scas
outsb
add
pop
dec
rolb
shll
add
loopne
inc
movl
add
sbb
arpl
mov
add
in
mov
mov
push
sbb
das
mov
int3
insb
outsl
iret
insl
inc
sbb
xchg
pop
mov
add
frstor
mov
rolb
negb
mov
sbb
add
out
mov
sbb
xchg
es
or
sbb
cmpsl
icebp
adc
pop
push
sbb
add
dec
or
push
addr16
fisttps
cmc
sahf
out
ss
lock
paddq
iret
jnp
repz
mov
jns
mov
mov
int3
movsl
repz
out
les
repz
push
sbb
sbb
repz
push
sbb
push
aas
repz
push
filds
push
and
iret
repz
and
and
and
cmp
fcomp
dec
cmp
pop
xchg
xchg
imul
daa
xor
loopne
jnp
cld
subb
inc
sbbb
fmul
incl
xorl
fistl
cmp
pop
js
iret
repz
mov
repz
ds
enter
insl
add
push
pop
loopne
sahf
out
xchg
mov
repnz
loopne
iret
jae
das
push
dec
insb
dec
push
xor
daa
jns
add
add
pop
repnz
pushf
or
ret
mov
adc
xchg
cwtl
push
and
jg
sbb
into
sbb
rorl
and
sahf
mov
sub
inc
rcrb
std
and
sbb
addl
xlat
xchg
inc
push
add
inc
stc
mov
adc
in
mov
cmpsb
iret
decl
js
inc
outsl
loopne
jmp
xchg
test
mov
jmp
cmp
inc
mov
popf
sti
jmp
stos
push
inc
mov
repnz
test
ljmp
adc
stos
clc
scas
adc
inc
jmp
aam
imul
loope
jp
iret
inc
gs
xchg
push
cmpsb
scas
mov
sbb
mov
or
addl
cmpsl
xchg
cmp
xor
dec
cmpsl
in
sbb
jecxz
cmp
sahf
xchg
pop
lcall
mov
push
movsl
mov
popa
sar
mov
and
addr16
std
ljmp
mov
subb
fwait
xchg
and
xor
int3
add
aas
jno
or
mov
out
or
aas
pop
fs
dec
lea
aas
ret
shrl
mov
icebp
aas
rorb
jmp
test
inc
lods
lds
mov
insb
scas
add
aas
xor
aad
mov
jmp
aas
ret
into
popa
test
ja
stos
in
das
dec
pop
loope
les
aas
xchg
les
jne
dec
adc
lcall
cmp
push
mov
xchg
aas
and
loop
mov
jp
popa
push
jg
lcall
jle
push
jl
mov
das
lea
mov
inc
inc
aas
movsl
jmp
jg
sub
jge
mov
inc
rcr
push
arpl
int3
and
call
cmp
std
jp
and
cmp
mov
cmp
std
xlat
cmp
mov
sbb
jg
sub
pop
mov
jne
fldt
cmp
jno
sar
jmp
out
dec
nop
pop
cmp
fisubl
xor
push
lahf
inc
pop
mov
sub
jmp
xor
push
scas
into
imul
faddp
jge
call
mov
xchg
cmp
cld
outsl
call
and
dec
dec
gs
std
orl
pop
ficomps
frstor
sbb
sahf
or
or
and
inc
inc
mov
mov
add
in
inc
inc
je
inc
inc
push
dec
mov
mull
inc
push
pop
and
dec
dec
inc
push
dec
inc
aaa
xor
insl
adc
ljmp
mov
call
mov
outsb
call
dec
inc
jo
inc
popa
push
outsb
jbe
imul
lods
pusha
sub
outsl
sahf
pop
insb
mov
aas
dec
insb
imul
push
add
cmp
iret
xor
inc
jbe
pop
pop
imul
push
inc
dec
push
sahf
orb
jb
addb
push
inc
inc
inc
test
out
dec
inc
gs
add
adc
je
pop
inc
mov
push
inc
arpl
mov
add
jae
outsl
push
or
mov
pop
mov
jbe
xchg
xchg
and
aaa
jbe
dec
cmp
das
mov
add
add
or
das
andb
xor
and
dec
inc
dec
fisttps
bound
daa
dec
jae
imul
mov
inc
inc
inc
jg
inc
jns
xor
sahf
loopne
lahf
push
push
mov
push
push
cmp
pop
mov
push
data16
jns
lret
xor
inc
push
and
fimull
insl
inc
sbb
clc
adc
jb
dec
push
dec
dec
mov
imulb
in
bound
jbe
dec
mov
xchg
push
andl
int
cmpsb
dec
dec
les
jo
arpl
add
jmp
outsl
sbb
loope
dec
pop
xlat
push
push
xor
add
mov
mov
add
shlb
push
in
pop
mov
or
imul
push
sub
push
push
lahf
add
push
add
dec
negl
sbb
loopne
jp
imul
sub
pop
outsl
push
jb
add
lds
das
push
and
inc
inc
xlat
push
clc
stos
push
in
jp
lock
push
bound
jp
jg
dec
mov
pusha
push
repnz
inc
arpl
stos
movsl
pop
mov
push
cmpsl
sbb
inc
pusha
out
bound
sub
popl
push
insb
and
popl
xchg
xchg
in
mov
data16
inc
js
sbb
adc
cltd
insb
and
leave
adcb
cltd
insb
and
das
ja
andb
adc
jne
push
pop
pop
jo
push
add
push
stc
lock
orl
fldcw
cmpsl
push
dec
roll
inc
push
dec
sub
push
push
inc
dec
lahf
or
lods
or
inc
and
inc
jo
inc
jg
stos
mov
or
sub
cmp
mov
movsb
and
cmp
push
push
pushf
cmpsl
out
sub
xor
sub
rolb
pop
dec
dec
jbe
aam
fsubl
xchg
jae
mov
or
test
aaa
test
sbb
ja
jbe
imul
jne
shrd
pop
les
outsl
loopne
add
add
rol
pop
in
out
dec
outsl
addr16
sub
inc
xchg
mov
push
pop
les
sbb
inc
sbb
das
xlat
out
icebp
push
dec
jg
mov
jns
out
push
mov
andb
jns
inc
xor
add
int3
cmp
repz
jl
or
imul
jae
cmp
rclb
cmp
jo,pt
cmp
in
and
daa
decl
lahf
xchg
xor
ja
popa
push
out
mov
les
hlt
push
pushl
movsl
arpl
mov
mov
push
movsb
mov
aad
mov
rclb
mov
jle
sub
mov
sbb
dec
jno
repz
test
ficompl
jmp
ljmp
mov
hlt
movl
imul
std
in
leave
mov
add
insb
push
decl
arpl
psubd
or
cmp
imul
addr16
incl
cmp
aam
dec
std
test
movsl
cli
test
xor
leave
mov
lods
jecxz
fdivs
jne
filds
or
shrl
cmp
ficoms
push
xlat
enter
mov
pushl
cltd
xchg
mov
mov
or
or
ljmp
xchg
adc
stos
sbb
data16
inc
fdivl
jno
add
aad
mov
mov
movsl
in
lahf
xor
mov
aad
cmc
pop
js
stc
lret
xchg
sbb
ljmp
sub
insb
fs
add
hlt
push
imul
insb
sbb
xor
dec
add
in
xchg
incl
insb
jnp
add
shl
adcb
cmc
fnstenv
adc
mov
mov
loope
frstor
sub
rorl
popa
mov
into
pop
cmp
mov
pushl
mov
dec
xlat
xchg
fadd
shll
jmp
outsb
xor
mov
ljmp
jae
add
in
add
pop
dec
or
cmp
add
daa
adc
or
mov
and
test
or
mov
popa
into
push
stc
ficomps
leave
fldcw
and
pushl
pop
cmp
mov
cmp
lods
insb
mov
in
mov
mov
incl
lcall
ljmp
fildl
push
fdivl
or
test
fs
ds
mov
test
push
or
push
in
mov
scas
add
mov
incl
jge
xchg
shlb
add
inc
push
imul
xorb
sbb
push
jmp
loopne
rorl
int3
dec
frstor
fistpll
mov
mov
mov
call
xchg
shll
push
repnz
addr16
cmpsb
incl
mov
dec
ss
fisubrl
or
scas
testb
pusha
jp
inc
ret
out
pusha
fists
addr16
decl
imul
andl
shrb
ss
push
xchg
ja
int3
add
mov
call
add
das
es
lds
or
sub
mov
cmpsl
call
ret
shlb
lcall
ficomps
ret
es
pushf
mov
insl
add
ss
jmp
ljmp
addr16
jb
push
mov
dec
mov
loop
sub
or
mov
xchg
decl
out
fdivrl
fisttpl
aam
roll
clc
mov
push
int
mov
lcall
mov
outsl
ja
mov
out
cli
jo
ud0
cmp
pop
or
ljmp
cli
call
lcall
clc
sar
imul
push
js
or
push
cmp
incl
ret
cmp
cmpsl
notl
pusha
rorb
imul
push
scas
fcompl
fldenv
filds
cmp
aaa
push
scas
mov
fidivrs
mov
jmp
repnz
lret
pushl
and
sarb
sub
push
mov
jp
mov
dec
popa
les
sbb
dec
ljmp
xchg
sub
aaa
mov
or
sbb
xlat
inc
or
sub
adc
mov
mov
add
in
sbb
shlb
dec
je
push
insb
imul
xchg
xlat
decl
xor
lahf
pop
inc
jbe
push
jns
arpl
arpl
mov
mov
pop
ja
adc
push
inc
insl
jns
pop
stos
pusha
jnp
jne
outsl
insl
addr16
mov
mov
cmpsb
adc
xlat
aam
adcb
out
fnstcw
push
jp
frstor
js
inc
insl
bound
and
or
xor
dec
mov
inc
inc
js
add
sbb
push
dec
orl
jno
push
xchg
and
aas
pop
inc
cmp
pop
bound
xor
aaa
cmp
popa
arpl
cmp
divb
xor
or
xor
bound
shlb
movsb
popa
push
inc
inc
shlb
insl
pop
sbb
or
pop
xor
inc
xor
loope
cmp
int3
sbb
or
mov
mov
sub
fbld
lcall
ss
jbe
arpl
or
inc
aas
push
cmc
or
popf
mov
inc
mov
jle
inc
inc
adc
cs
getsec
ja
cwtl
inc
lcall
adc
dec
insb
ss
mov
aaa
pop
add
aaa
aas
cmp
lret
in
and
add
stos
insl
or
popf
xor
fistps
ljmp
push
mov
xor
inc
es
add
pop
mov
es
inc
inc
inc
add
push
mov
mov
rolb
cmp
mov
push
dec
dec
lea
jo
xchg
rcr
fs
hlt
andl
outsb
jne
aad
fs
popa
mov
dec
jge
addr16
mov
xor
xor
or
mov
test
add
addr16
clc
xchg
push
fdivrs
pop
add
cmp
jle
stos
pusha
aaa
cltd
dec
or
lds
or
ss
inc
mov
pop
push
xchg
inc
mov
lahf
inc
dec
mov
or
mov
push
pop
adc
rclb
lds
jb
dec
add
frstor
push
js
icebp
dec
popa
jo
sahf
add
lahf
aas
push
outsl
outsl
mov
outsl
add
cmp
push
push
jno
inc
stos
and
in
sub
pop
shl
shr
test
pop
cmp
pop
arpl
push
cmp
inc
and
mov
call
lea
lock
jns
jne
jo
das
inc
and
test
subw
and
dec
dec
mov
je
insb
bswap
sub
clc
or
bound
pop
dec
popl
test
push
divl
or
ret
xchg
jno
pop
popf
xor
adc
xor
aam
sbb
add
push
sub
add
pusha
negl
mov
cld
mov
xlat
dec
orb
xchg
scas
imul
testb
push
xchg
mov
and
mov
and
pusha
popa
add
and
mov
aaa
inc
or
pop
insb
mov
cs
push
outsb
cwtl
adc
dec
pushf
jb
inc
lds
jns
daa
aas
pop
inc
orb
and
and
es
mov
lds
shrb
incb
inc
inc
out
add
pop
fcmove
mov
cmp
push
sar
decl
push
inc
lret
icebp
sub
ds
in
lods
imul
pushl
fdivp
mov
inc
jge
mov
adc
mov
lea
sub
adc
les
incl
ja
xor
stc
lds
mov
lds
or
ret
pop
xchg
stos
hlt
inc
xchg
pop
clc
cmc
bound
jo
jns
push
add
sahf
nop
sub
xor
ljmp
imulb
ljmp
add
mov
stos
loope
or
inc
lahf
test
push
addb
sti
fistpll
jg
aaa
push
adc
jecxz
mov
xor
mov
cltd
inc
inc
repnz
jbe
cmp
dec
and
or
loopne
in
inc
mov
arpl
std
call
jge
fbstp
dec
outsb
aam
cmp
js
dec
rcrl
pop
incl
hlt
gs
ljmp
test
je
xorb
mov
sti
ret
jmp
jl
jmp
lret
jo
popa
je
mov
fs
xchg
in
daa
into
fcmove
rclb
incl
out
pop
mov
jb
mov
mov
xchg
clc
dec
adc
mov
mov
clc
pop
int
mov
ljmp
cltd
ret
push
in
shll
pop
xchg
xor
mov
mov
and
push
cmp
adc
or
mov
out
lods
pop
stos
repnz
in
in
push
push
xchg
outsl
mov
mov
xchg
jp
scas
ds
lahf
xor
xchg
in
or
incl
inc
jp
in
mov
fs
pop
or
xchg
jno
mov
inc
in
and
test
sub
dec
jge
sbb
movsb
mov
jnp
fmuls
pushf
call
sub
loopne
popa
fbld
clc
pushl
dec
fcomp
jg
adc
nop
outsl
add
les
inc
dec
lahf
in
clc
ljmp
lea
adc
mov
fxch
inc
dec
sub
cli
pop
adc
pop
add
cmp
sbb
sbb
add
and
ljmp
incb
cmp
rcr
lahf
loop
or
sub
dec
fmul
push
dec
lods
mov
pushl
add
pop
dec
in
xor
lahf
faddp
push
pop
xor
sub
mov
mov
add
jno
call
or
adc
test
and
es
jg
int3
dec
xchg
sbb
adc
inc
sbb
imul
push
sti
and
mov
adc
sub
mov
ljmp
ds
or
cmc
cmc
es
out
iret
dec
decb
fildll
adc
jo
outsl
test
pushl
sbb
out
push
aam
push
mov
jns
jp
xor
push
out
aam
gs
lock
pop
jmp
hlt
jbe
inc
cmp
pop
push
daa
sbb
popf
mov
fldcw
fists
les
imul
cld
daa
scas
sti
add
pop
js
das
mov
in
loop
mov
fistpl
sub
cmp
xor
sbb
sub
and
pushl
incl
mov
pop
pop
cld
cmp
mov
adc
popf
fstps
pushl
call
push
inc
and
push
lea
out
jp
sbb
repnz
out
clc
int
insl
leave
popa
divb
mov
ss
inc
dec
lock
or
adc
lcall
add
mov
push
pushf
dec
jb
aas
sahf
movsl
mov
pop
jb
mov
jno
add
bound
or
adc
daa
lahf
jmp
lock
jmp
pop
mov
add
hlt
mov
sbb
jnp
pop
dec
mov
fsubs
mov
jbe
dec
xchg
in
nop
repz
or
clc
ljmp
xorb
sub
dec
xlat
inc
movsl
imul
jge
cmpsl
pop
cld
lcall
sbb
add
inc
ljmp
add
enter
aaa
bound
cs
xlat
pushl
push
xor
sub
mov
lods
pop
cmpsb
push
push
ret
push
mov
jg
loope
xchg
sbb
lret
jae
dec
xchg
adc
fwait
out
jo
inc
mov
lcall
sub
out
push
mov
jno
cmp
sbb
or
repz
decl
outsb
not
sbb
push
fisttpl
sbb
into
push
scas
dec
jmp
mov
or
cli
mov
daa
pop
repz
ror
push
test
pop
jmp
gs
sub
xchg
syscall
jl
sub
mov
push
stos
fsubrs
xchg
sub
cmp
push
test
dec
fdivr
jl
pop
mov
call
and
jl
xor
ss
or
test
out
in
xchg
jmp
pushf
pusha
out
je
xor
mov
pop
pop
rcrl
cwtl
cmpsl
jae
adc
call
incl
icebp
pop
mov
in
mov
xor
mov
cld
imul
cmp
jmp
mov
jbe
fimuls
adc
push
xor
into
jle
inc
idiv
mov
loope
xchg
xchg
outsb
mov
mov
mov
xchg
gs
add
ljmp
sbb
idivb
inc
sub
fwait
jmp
call
push
cmp
cmp
push
data16
insb
test
out
shrl
andl
cmpsl
xor
fidivl
aas
mov
xor
cmp
and
add
xchg
bound
insl
shlb
cmp
aad
adc
cmp
cs
jmp
jns
fmull
dec
add
xchg
mov
inc
mov
pop
rcl
pushf
sub
movsb
lock
add
fidivs
mov
sbb
loop
incl
jp
into
es
and
jno
mov
lcall
add
cltd
lods
jle
push
jns
rcl
pop
xchg
sti
inc
jno
sub
xchg
incl
mov
pop
xchg
pop
adc
xchg
push
jae
cmp
sbb
mov
xchg
aas
xor
mov
lds
cmp
jl
mov
push
lock
inc
lcall
arpl
lock
dec
pushf
cld
mov
and
add
push
enter
or
lret
or
mov
push
pop
add
or
mov
adc
lcall
gs
xor
fsubrl
add
mov
repnz
lcall
les
push
mov
out
insl
dec
or
fidivs
jmp
and
lock
xchg
mov
push
cld
call
fcomip
or
sbb
ficomps
push
loope
sub
jl
push
xchg
mov
out
mov
lds
movsl
outsb
or
jp
rorl
testb
scas
xor
hlt
ljmp
nopl
pop
rcrb
pop
mov
add
fildll
fdivs
jae
cmp
pop
lahf
cltd
add
mov
or
scas
clc
fisubs
sbb
leave
orl
cmpsl
lea
push
push
dec
loopne
xlat
xchg
arpl
pop
and
mov
repz
iret
jmp
inc
ds
cmpsb
fcompl
pop
movsl
pop
mov
clc
outsb
ljmp
stos
outsl
pop
insl
mov
lcall
push
xchg
mov
push
jmp
cmp
or
mov
push
mov
pusha
sub
mov
dec
sbb
jo
pop
push
inc
adc
lcall
dec
lahf
sbb
mov
jnp
cmp
jb
sub
push
or
mov
xchg
arpl
fcomip
add
fcoms
or
dec
invlpg
jnp
in
or
xor
jmp
decl
ret
repnz
cmpsb
and
mov
addr16
add
outsl
jae
add
mov
es
mov
jp
outsb
pop
outsb
fstpl
push
jb
sbb
inc
cmpsl
push
inc
mov
das
cmp
adc
cmp
mov
imul
stc
or
mov
ret
lds
lcall
dec
int3
xchg
es
inc
or
cmpsb
stos
xchg
enter
js
xchg
and
inc
out
mov
stos
lcall
stc
outsb
dec
lock
testb
imul
push
or
add
xor
pushl
out
stos
and
pop
lcall
sub
dec
incl
push
push
shlb
cmp
sahf
push
fucomp
cmp
dec
pop
sbb
insl
dec
decl
ja
ret
lahf
xchg
ror
popf
das
std
or
adc
and
add
mov
in
or
sbb
inc
or
mov
popa
dec
in
stos
jg
push
mov
mov
leave
shll
adc
lods
adc
insb
sub
incl
movsb
lcall
nop
imul
cld
pop
ret
outsb
inc
lods
aaa
jle
cltd
mov
incl
hlt
xor
mov
and
call
popf
fnstsw
jle
or
in
mov
adc
lods
and
int
sbbb
push
add
ljmp
lret
decl
iret
sbb
push
insb
es
push
out
ret
mov
test
pop
xchg
out
incl
xchg
push
popf
mov
test
pop
sbb
push
pop
cmp
cltd
sti
pop
lret
inc
cld
push
pop
insl
jae
popa
jle
jmp
add
outsl
rcr
ljmp
xchg
nop
les
fstl
jne
add
xlat
mov
sbb
inc
sub
shrl
ret
int3
cmp
xorb
push
faddl
dec
fsubl
in
sbbl
xor
xor
arpl
mov
and
pushl
inc
add
sbb
aam
pop
andl
or
xchg
adc
mov
inc
push
aad
gs
dec
aam
mov
out
rolb
jp
mov
fists
movsb
dec
fimull
dec
repz
cmp
ja
ret
ret
int3
jmp
ljmp
int3
lods
imul
stos
and
das
xchg
jp
xchg
mov
mov
aaa
in
pop
or
cmp
push
push
ret
cmp
fdivrs
push
sbb
andb
rcll
xchg
in
xlat
mov
dec
cmpsl
cmpsb
jne
fsubrl
imul
mov
adc
adc
out
sbb
lret
sbb
dec
or
call
call
hlt
ror
xchg
jmp
dec
mov
pop
cli
imul
cld
cld
dec
in
xlat
xor
push
xor
fisttpll
out
mov
sahf
orb
mov
shrl
sbb
mov
into
dec
icebp
test
and
subb
dec
int3
pop
sbb
or
pushl
inc
fisubl
repz
sbb
imulb
stos
popf
jl
movb
decl
pushf
call
pop
aad
dec
shrl
sbb
sub
lret
jns
movsl
fcompl
mov
cli
aas
mov
cmpsl
test
ss
cmp
sbbb
mull
sbb
jmp
sbb
push
rcl
jl
cltd
inc
mov
mov
lahf
push
popf
into
fs
lcall
mov
xchg
and
xor
mov
mov
ljmp
call
ret
xor
in
mov
lods
stos
jg
cmp
jo
stos
pop
and
dec
fwait
imul
call
push
ss
dec
dec
ja
mov
mov
es
das
and
call
arpl
sbb
rcr
xchg
pop
mov
xor
mov
leave
arpl
mov
outsl
cli
sbb
inc
inc
adcl
daa
test
and
add
sbb
fidivl
pushf
decl
loop
pop
pop
adc
sub
sbb
push
iret
push
clc
inc
mov
push
mov
call
sub
pop
js
repnz
pop
xor
aam
jl
push
lock
cs
mov
jg
cmc
incl
jae
xor
loope
xchg
arpl
xchg
cmp
cmp
ljmp
cmp
test
outsl
lahf
fldl
sbb
mov
shll
ljmp
or
dec
push
mov
pop
shrl
scas
in
push
and
icebp
daa
xchg
jle
sub
cmp
in
lock
inc
mov
fildl
sub
dec
and
push
cmpsb
add
shrb
push
sub
loopnew
sbb
inc
xor
mov
arpl
les
leave
mov
pop
cmpsl
out
clc
pushl
add
int3
mov
ja
outsl
mov
lcall
in
iret
cmpsl
xorl
iret
dec
movsl
nop
mov
add
add
push
add
lcall
sbb
add
mov
jmp
dec
repnz
cmp
ja
scas
out
decl
lock
mov
xlat
nop
inc
cmp
jbe
add
scas
xchg
decl
sub
xor
lea
xor
pop
imul
push
jno
mov
jg
rcr
ljmp
std
mov
mov
out
stos
adc
lock
sbb
shlb
sahf
imul
jecxz
adc
add
clc
loopne
stos
andnps
mov
sbb
mov
decl
mov
je
int3
fucomip
push
xor
testl
mov
lock
fcoml
sbb
xchg
mov
add
push
add
imul
mov
loop
loopne
pushl
div
rclb
mov
and
decb
and
es
sahf
xchg
cmp
jge
in
icebp
fistl
xchg
sub
dec
adc
notb
decl
pushf
vpmuludq
push
in
clc
hlt
fmull
cmp
out
inc
push
stos
jbe
inc
in
push
pushf
fidivrs
nop
ja
xor
add
sar
mov
adc
add
mov
insl
popf
je,pt
fnstcw
xor
decl
loope
shlb
push
xorl
loopne
or
lcall
jmp
mov
idiv
inc
sub
pop
jle
jmp
aas
jno
cltd
popa
cmp
inc
std
arpl
movsl
xchg
paddq
jmp
sub
cld
call
push
inc
iret
int
adc
sbb
and
fimuls
mov
incl
push
push
mov
movsl
rorl
in
pop
add
jno
scas
dec
sbb
outsb
inc
clc
push
decl
xchg
ret
int
push
push
jmp
call
inc
lods
clc
outsb
imul
jmp
push
dec
cs
call
mov
ret
sub
xor
mov
xchg
mov
xor
and
cli
jmp
dec
jmp
ljmp
loop
fwait
cmp
cmp
pop
and
mov
cmp
hlt
sarl
ljmp
nop
mov
and
das
leave
adc
push
repz
sbb
mov
xchg
adc
decl
jno
xor
mov
push
push
sub
insl
mov
fbld
sbb
push
push
inc
lods
lret
bound
lcall
sbb
popa
test
clc
sbb
sub
rcrb
ljmp
adc
into
mov
push
cmp
lods
inc
faddl
inc
sahf
xor
push
js
outsb
in
mov
sub
int3
arpl
cmp
ljmp
dec
sti
scas
inc
std
in
or
and
subl
imul
insb
or
decl
ljmp
dec
cmpsl
and
or
jbe
test
repz
fbld
xor
arpl
divl
pop
xchg
push
ud0
incb
xchg
daa
xor
mov
jle
sbb
movsb
dec
mov
cmp
nop
enter
push
iret
sbb
je
icebp
ljmp
lcall
loopne
leave
into
add
shl
mov
out
xlat
repnz
in
decl
and
sbb
icebp
push
test
lea
xchg
jne
adc
pop
mov
lcall
sub
inc
add
sub
push
imul
mov
add
cmp
int3
incl
jle
push
xor
sub
jnp
fisttpll
inc
lds
out
sub
ljmp
mov
loope
imul
mov
scas
outsb
in
stos
in
or
sub
dec
cld
call
pop
mov
mov
insb
dec
shll
or
jg
sbb
addr16
call
dec
pusha
lret
sti
dec
aam
divb
call
dec
xor
ficomps
cmpsl
cwtl
enter
jo
xchg
inc
notb
decl
shll
xchg
fld
xchg
pop
cmp
lret
add
mov
insb
daa
inc
aad
pushl
call
loop
into
movsl
mov
and
mov
xlat
mov
push
out
dec
inc
inc
pop
pusha
gs
call
jmp
jl
imull
divb
or
xchg
mov
in
mov
mov
push
pusha
loopne
call
xor
fnclex
das
in
mulb
adc
sub
lods
add
pop
int
push
orb
xlat
xchg
lds
push
je
xchg
mov
lea
xchg
dec
dec
and
js
pop
icebp
clc
xchg
sub
adc
pop
xchg
mov
inc
popf
jp
push
lcall
sub
mov
jge
pusha
add
arpl
enter
adc
xor
mov
ljmp
inc
in
mov
jl
ret
push
cmp
cmp
jne
jmp
flds
mov
in
test
xorb
fwait
pop
mov
insb
sbb
ja
out
je
fdivrp
ljmp
rcrb
fbstp
cli
jg
inc
jp
aaa
and
adc
dec
jmp
cwtl
cs
subps
stc
mov
cli
lahf
imul
mov
lahf
fdivrp
or
sti
clc
pop
xchg
push
xor
mov
ret
jecxz
adc
add
pushf
rorb
test
into
xor
dec
xorb
outsb
repz
incl
pushf
mov
stos
call
inc
ss
xchg
cmp
outsb
cli
xchg
jge
aam
je
fisubrs
fsubs
mov
outsb
adc
in
xchg
jnp
es
jne
into
lods
dec
and
sbb
xchg
popf
or
cmc
insl
test
loopne
decl
stos
cmp
and
ss
xor
ja
sub
pop
movsb
push
or
mov
loopne
ret
dec
inc
popa
xor
adc
xchg
xor
test
xchg
arpl
imulb
test
call
cld
fidivrs
push
cmp
jbe
push
pop
jecxz
call
sbb
jp
pop
mov
fisttps
sbb
mov
cwtl
fbld
jmp
stc
fimuls
jge
cmp
leave
cld
aam
fcomps
jp
xchg
addr16
dec
sub
call
mov
mov
adc
ds
jg
jl
sbb
add
or
imul
mov
lret
imul
fisubl
negl
jg
jne
add
cmp
ljmp
in
adc
mov
push
stos
lods
outsb
data16
push
jl
pop
in
sub
mov
call
mov
cmpsb
or
adc
cmc
cmp
adc
nop
jmp
ret
fstpt
inc
out
sbb
inc
out
and
into
imul
pop
shl
jp
and
lahf
decl
and
pop
mov
inc
out
stos
inc
push
scas
movsb
dec
mov
xlat
fsub
ficompl
mov
pushl
jb
xchg
sub
in
repz
sbb
adc
lea
pop
adc
das
push
pop
icebp
jmp
sub
hlt
popa
adc
ret
xchg
add
mul
adc
adc
push
and
sarl
mov
lahf
cmp
cmpsl
adc
out
mov
rcl
jg
mov
ret
dec
xchg
xchg
int
sbb
pushl
loop
lock
xor
movsb
push
sub
arpl
xchg
lds
cli
insl
jmp
push
scas
sub
incb
out
mov
adc
lcall
xchg
repnz
sbb
jp
call
call
jmp
mov
or
imul
mov
add
sbb
jp
mov
sbb
xchg
outsl
movsl
cmp
incl
and
pop
cmpl
add
jo
in
in
pop
push
ror
pop
cmp
mov
jl
and
movsl
inc
lret
jns
mov
fs
popa
aaa
push
sti
add
jg
add
xchg
and
scas
std
xchg
push
icebp
dec
ljmp
ret
dec
pusha
lcall
es
in
or
das
and
mov
icebp
and
aad
jle
mov
add
adc
lods
pop
fidivl
cwtl
jno
pop
rolb
xchg
out
lods
mov
dec
outsb
or
jmp
shrb
sarb
and
arpl
repz
cli
sub
scas
roll
out
or
cmp
or
lock
ljmp
pusha
pop
jl
mov
clc
dec
cld
xchg
fmull
or
aam
repz
push
popa
adc
sub
inc
dec
adc
add
lcall
jmp
inc
dec
out
xor
xor
cmc
fistpl
jl
jmp
push
mov
mov
lds
iret
cli
fdivl
gs
adc
or
or
popa
cs
into
and
mov
pop
jmp
cwtl
loop
aas
push
fdivrs
or
ret
dec
push
loopne
out
icebp
popa
sbb
xchg
movsl
int
mov
add
cmp
mov
divl
or
xchg
call
in
and
mov
lods
pushf
testb
jnp
in
xorl
pushl
mov
mov
addr16
cltd
adc
mov
mov
ljmp
loopne
sub
rcl
mov
pop
xchg
dec
call
adc
test
mov
fcomip
roll
xchg
push
int
mov
cli
mov
imul
pushf
das
test
cld
fmull
pop
inc
push
sub
inc
xchg
mov
jmp
jno
add
lock
sti
out
dec
lcall
lds
lahf
bound
jno
decl
test
scas
sbb
jp
mov
dec
or
dec
push
xor
aad
scas
out
jmp
test
and
int
jno
outsb
in
das
mov
out
jl
push
xchg
fcomps
stos
xor
imul
mov
xchg
mov
pushl
mov
fcom
mov
sbb
mov
pop
arpl
addr16
dec
aad
incl
add
js
push
and
enter
jle
jae
push
push
pop
movsl
push
mov
insb
push
mov
call
std
dec
adc
push
repz
pop
pop
pushl
sbb
fisubl
cmp
cli
ljmp
mov
or
cmpsb
add
add
les
mov
js
mov
fwait
xlat
aas
out
popf
mov
ret
arpl
loope
and
push
insb
or
jbe
pusha
out
decl
cli
adc
push
push
out
ret
lods
test
data16
out
push
xchg
dec
add
lods
adc
xor
inc
xchg
sbb
insb
aaa
mov
ljmp
je
xchg
xchg
and
dec
popa
pop
js
scas
cmpsb
sahf
jne
repz
test
pop
lret
sarl
inc
std
stos
dec
sub
cwtl
inc
mov
ljmp
sbb
push
xchg
hlt
clc
icebp
adc
lret
pop
insl
or
les
jo
push
faddl
test
add
push
mov
xor
stos
lods
lea
xchg
pop
mov
pop
out
mov
fildll
es
sub
ljmp
sub
pop
imul
into
inc
jbe
xchg
push
inc
fs
sbbl
adc
sbbl
adc
aas
aas
lds
int3
jg
les
xor
pop
lods
sbb
lahf
mov
mov
adc
or
mov
imul
pop
lock
aaa
pop
push
mov
clc
ljmp
pushl
std
dec
jmp
xor
addr16
jp
mov
xor
xor
incl
xchg
xchg
sbb
mov
iret
in
pop
add
jle
jmp
pop
xor
push
loopne
inc
ficoml
jmp
jg
dec
push
jno
lahf
cltd
jo
dec
call
xchg
xchg
into
cltd
mov
mov
add
mov
pushf
sbb
mov
cs
and
scas
aas
mov
pushl
cld
mov
and
add
pop
mov
insl
or
insb
add
jg
shll
sub
popa
inc
rolb
shr
jnp
pop
mov
sub
push
jns
call
mov
jo
jg
cwtl
jae
fildll
and
xchg
ficomps
decl
lcall
daa
sub
pushf
gs
jns
mov
dec
mov
mov
jecxz
cmp
push
out
mov
dec
pop
inc
xchg
cld
cmpsb
std
mov
pandn
or
sahf
cmp
add
rcrl
mov
jge
adc
in
inc
mov
fld
imul
dec
pop
pop
adc
insb
mov
cmp
inc
cmp
dec
xchg
mov
ss
mov
in
aam
mov
lds
lea
push
cld
xor
mov
jl
lcall
inc
sbb
pop
cmp
jmp
aam
shlb
push
cvtpi2ps
jmp
mov
or
filds
mov
out
out
es
dec
loop
into
push
fsubrl
les
push
push
test
xchg
hlt
aam
xchg
and
sbbl
jge
decl
add
inc
addr16
push
lcall
push
dec
jge
jnp
or
ljmp
xor
xchg
loopne
cmp
xor
cmc
jns
dec
fisttps
imul
loopne
pushl
jne
test
fldl
jae
mov
ret
les
call
jo
in
out
inc
xchg
adc
jp
imul
xchg
push
jmp
pushf
xor
xchg
inc
icebp
mov
or
int3
std
inc
sbb
insb
dec
hlt
mov
pop
mov
add
jg
lods
dec
push
lock
enter
movsb
call
movsl
lods
cmp
cmp
decl
pop
or
mov
dec
xor
lods
jmp
stos
xor
shlb
repnz
push
std
fcomip
pushl
ror
xlat
adc
push
jnp
push
inc
jecxz
cwtl
jl
jg
pop
subb
inc
xor
cld
mov
sbb
lods
mov
clc
ljmp
sbb
push
into
or
lcall
lcall
jmp
decl
jge
add
clc
or
sbb
sub
in
sub
call
cmpl
cmp
cwtl
cmp
add
sbb
lcall
mov
xchg
loopne
insb
js
roll
lret
push
jnp
repz
xchg
xchg
pop
cmp
jmp
mov
sbb
in
mov
push
pop
sbb
and
imul
pushl
stos
ret
mov
popf
cmc
loopne
fisubl
out
pop
push
mov
test
clc
lcall
daa
or
dec
cmp
jge
adc
cs
cld
pusha
or
jmp
jge
mov
rorl
xchg
dec
sbb
insl
call
fsubl
or
sub
call
jo
mov
xor
nop
sahf
repz
int3
das
push
bnd
or
or
cltd
mov
pop
outsl
mov
pushl
out
push
pop
lods
sbb
fsubrp
cmp
fcmovne
nop
mov
popf
dec
pop
add
lcall
pop
jnp
popf
mov
add
out
inc
mov
add
sbb
insb
sbb
jmp
leave
outsl
ja
fidivs
nop
frstor
push
push
jp
lret
dec
cmpsl
or
push
icebp
and
mov
jmp
negl
imul
incl
pop
pop
mov
popf
movsl
imul
dec
in
adc
ss
mov
mov
in
lock
in
xchg
stc
jnp
mov
test
and
or
inc
inc
sub
jle
in
xor
xor
xor
inc
push
xchg
adc
sbb
test
call
fidivrs
mov
les
aaa
pop
mov
cmp
push
rorb
xor
jmp
gs
sub
orb
and
sti
decl
xorl
cmp
das
push
push
and
cmc
push
and
mov
adc
mov
mov
inc
lods
xchg
xchg
or
addb
clc
or
jg
push
dec
jb
dec
ja
mov
pavgb
add
dec
cmpsl
arpl
je
push
xchg
decl
ret
jl
mov
cwtl
dec
jbe
data16
psubsw
cmpb
xchg
add
sbb
sahf
push
push
jnp
outsb
mov
xchg
decl
imul
lock
test
popf
dec
adc
xlat
add
push
pop
lock
xchg
out
add
test
inc
movl
mov
dec
inc
decl
mov
add
arpl
push
imul
popf
jecxz
lock
fwait
push
inc
pop
aas
leave
xchg
cmp
and
gs
cmpsb
add
pop
dec
fdivs
fwait
rcl
pop
mov
lock
and
stc
negl
popf
insb
mov
ljmp
dec
adc
jp
repz
in
mov
lahf
je
mov
pop
cmp
jmp
inc
icebp
pushf
js
ret
dec
and
pop
lcall
cwtl
outsl
add
pop
dec
and
push
jle
in
jnp
push
sbb
dec
inc
out
or
pop
jno
mov
sbb
cmp
mov
cmp
dec
addl
out
andl
mov
incl
jecxz
push
test
hlt
or
inc
xorb
sbb
xlat
jmp
mov
mov
das
stc
inc
stc
aad
add
ds
jg
adc
lods
repz
adc
clc
mov
pushl
mov
sub
fiadds
dec
add
sbb
push
push
insl
jne
jns
movsl
xlat
mov
cmc
adc
push
insl
sarl
fucomp
and
outsl
mov
stos
mov
mov
xchg
jle
inc
sbb
xor
cmp
incl
pop
in
loop
ljmp
test
lcall
jo
and
sti
sub
jmp
sub
jl
or
push
lcall
xchg
pop
outsb
mov
sub
inc
xor
cmp
inc
pop
jbe
xchg
xchg
call
ficoml
and
nop
inc
mov
cmp
add
sti
pop
icebp
mov
mov
push
jmp
incl
cld
jle
jmp
cltd
outsb
inc
daa
push
mov
jnp
popa
sbb
push
pop
cld
enter
pushl
cwtl
xor
lods
xchg
enter
mov
pusha
mov
xor
dec
mov
testl
push
sbbb
push
pop
cmp
lcall
rcr
dec
daa
and
test
cmp
mov
or
lea
aaa
push
call
jmp
out
xchg
sbb
xchg
push
adc
mov
cmpsl
adc
pop
dec
cmpsl
movsl
das
xor
stos
aad
jne
cld
ljmp
adc
adc
lds
scas
mov
fists
mov
insl
pop
sub
mov
xor
push
xchg
std
idivl
or
mov
mov
clc
rcrl
cmc
mov
arpl
loope
or
sar
add
call
pop
repz
sbb
shrl
push
adc
lcall
das
rclb
out
jg
hlt
mov
xchg
jmp
aaa
fldcw
push
aad
test
push
sahf
cmp
jp
push
adc
xor
jnp
xchg
jg
lcall
pop
cltd
mov
add
loopne
fcoml
mov
pushf
mov
jmp
sbb
xchg
and
shld
mov
mov
pop
std
nop
or
ljmp
out
testb
fdivrp
mov
jmp
xor
pop
insb
mov
cmc
jl
xchg
stc
outsb
subl
js
jg
pushl
inc
sbb
aaa
and
push
push
out
shrl
mov
sub
icebp
ret
adc
mov
xchg
in
jae
and
jnp
push
adc
mov
adc
jmp
xchg
adc
sub
test
aad
jo
inc
arpl
das
in
out
and
cmp
jl
jmp
imul
pop
test
movsl
or
mov
scas
inc
into
cmp
addr16
dec
inc
push
imull
imull
sbb
pusha
out
es
mov
pop
mov
add
ljmp
movsl
sub
rcrb
mov
fcoms
dec
mov
call
incl
stos
leave
push
out
stos
xor
cmp
mov
fs
gs
fwait
sbb
cmc
ljmp
stos
mov
sti
push
pushf
movb
insb
ss
dec
jg
ljmp
xchg
test
pop
scas
push
jbe
cmc
int
ljmp
mov
cmpsb
cwtl
xor
jp
cmp
mov
leave
sub
and
fldl
xorl
and
xchg
push
sbb
jl
popa
test
fwait
in
push
push
or
mov
fldt
jmp
dec
push
movb
sub
dec
jle
loope
ljmp
cmp
aad
xchg
lcall
xacquire
xchg
test
jecxz
mov
fldl
ret
lret
das
sub
das
pushl
mov
scas
mov
stos
test
and
pop
jmp
jmp
push
xor
std
repz
mov
vorps
mov
aaa
popa
push
mov
aad
and
ljmp
cmp
iret
cwtl
pop
pop
and
mov
ret
add
mov
cmp
fldenv
lds
fsub
jae
push
loopne
cmpsb
push
pop
es
xor
and
pop
in
lret
lcall
lods
xor
ret
jle
clc
icebp
sub
loope
shll
or
mov
call
leave
ljmp
out
rcll
sub
mov
insb
outsl
jp
jbe
gs
icebp
jno
jb
jmp
shlb
ret
xchg
push
icebp
xchg
lds
out
test
mov
lock
jb
or
loope
aaa
and
decl
and
ljmp
jb
lock
das
inc
xchg
sti
aad
js
cmc
aam
lds
cmp
loopne
xchg
fsubrs
push
adc
call
cmp
out
sub
pop
fmull
mov
mov
push
adc
movsl
mov
cld
lock
jmp
push
in
jbe
sti
and
and
test
and
jne
push
inc
sbb
push
ljmp
ds
mov
rorb
cld
lret
sbb
or
cmp
into
es
mov
mov
mov
jno
jmp
add
sub
js
pop
loopne
call
gs
imul
ror
ljmp
popa
mov
add
inc
out
fimuls
test
loop
mov
or
pusha
cwtl
inc
mov
push
jecxz
push
push
incb
inc
push
mov
dec
adc
aad
ljmp
stc
in
call
push
shlb
das
mov
movsl
adc
cs
decl
jecxz
push
dec
xchg
les
repnz
jmp
or
xor
js
aaa
sub
xchg
popa
cld
decl
ret
push
jg
add
xor
nop
outsb
call
fildll
je
lods
mov
push
dec
push
or
xor
pop
jg
jo
lods
loopne
xor
imull
test
xchg
mov
and
xor
push
decl
cmc
lods
push
xchg
cs
and
sub
rclb
mov
jmp
ret
cmp
and
xchg
add
pop
jmp
jnp
push
jl
xor
push
or
inc
sub
aam
call
enter
inc
push
je
sub
ret
cmp
sbb
fdiv
aad
mov
cmp
loopne
cmp
test
xor
lret
xor
xlat
push
mov
ljmp
add
out
jg
dec
cli
lds
push
xchg
and
clc
sahf
lcall
and
nop
jl
cmpsb
lahf
enter
push
inc
dec
repnz
mov
dec
into
mov
pop
xchg
xor
pop
mov
out
ja
xlat
mov
sub
call
jo
and
jae
scas
imull
lcall
xor
push
repnz
sub
in
jl
cli
outsb
lret
test
je
scas
mov
in
xchg
pop
cmp
lods
dec
jo
jae
lret
add
add
shlb
lds
je
jnp
add
loop
adcl
push
xor
xor
adc
test
pop
shrl
frstor
call
data16
or
adc
clc
inc
xchg
sub
xchg
cli
push
jecxz
jg
xor
in
mov
dec
ljmp
iret
add
mov
sti
add
cmp
stos
out
and
repz
cmp
rcrb
mov
xor
mov
sub
lods
faddl
adc
lret
jecxz
mov
lcall
in
scas
pop
addr16
lods
icebp
sub
loop
pop
adc
sbb
sahf
push
mov
inc
pop
data16
test
inc
jbe
sub
push
pop
jge
mov
test
xchg
incl
pop
lret
icebp
jbe
jge
fldcw
gs
aam
lcall
scas
sarl
ljmp
mov
fdivrs
mov
sbb
jle
leave
leave
push
sub
test
pop
jecxz
or
lods
test
pop
ja
fldenv
mov
mov
jmp
stc
nop
xor
fsubrl
cld
fsubrs
push
cmp
orb
mov
mov
mov
or
loope
and
out
test
out
rcr
and
enter
fidivl
sbb
mov
incl
mov
mov
xor
xchg
dec
loope
stc
xor
imul
add
and
test
push
sub
xlat
fwait
inc
rorb
sub
popf
stos
dec
loope
cmp
jmp
jg
push
leave
and
fs
jecxz
inc
sub
sbb
daa
mov
xor
sarl
lods
arpl
call
cmpb
bound
in
push
stos
subl
xor
jg
dec
or
out
mov
push
incb
pop
outsb
ljmp
mov
decl
mov
mov
lcall
ret
outsb
add
mov
fildl
fmul
cmp
mov
faddl
cmp
inc
pop
mov
add
jae
cmpsb
ss
push
mov
lcall
mov
adc
mov
pop
decl
loop
xor
fistpl
repz
jle
ret
lcall
decl
stos
inc
push
sub
addl
add
idiv
cs
cmp
cmp
lcall
cmp
fdivrl
jnp
lret
mov
int3
push
subl
hlt
adc
mov
and
test
addl
sub
mov
jmp
jbe
adc
stc
pop
push
xchg
pop
pop
xor
inc
adc
add
subb
imul
pushl
add
sahf
test
pop
popa
decl
jnp
pop
or
jle
dec
pop
xor
sbb
cmc
cmp
divl
pushl
xchg
sub
push
or
rcrb
mov
and
sub
lods
mov
add
ds
lcall
or
xor
dec
adc
movsl
inc
scas
add
pushl
lock
push
xor
les
jnp
mov
mov
adc
std
dec
fisubrs
xor
test
call
mov
inc
cltd
lahf
sbb
sbb
out
push
push
pop
pop
rcll
mov
arpl
mov
lock
mov
dec
mov
shll
pop
and
xor
pop
or
call
fmull
fildl
sbb
push
pop
lret
les
ljmp
xlat
push
fwait
mov
push
test
jns
adc
mov
and
xchg
cmc
sub
ss
add
mov
add
lods
aam
aas
push
xor
lods
ficoms
cmpsb
adcb
and
ljmp
cli
cmp
fsts
pop
mov
insl
pop
enter
loopne
jg
mov
aam
lret
or
or
movl
test
aas
repnz
lret
call
jmp
or
adc
mov
sbb
adc
aam
jb
and
mov
adc
inc
addl
loop
add
test
or
adc
pushf
lea
fldcw
cmp
or
in
push
adcl
sbb
add
insl
sub
and
ljmp
lcall
xorl
decl
or
ss
mov
add
incl
scas
xchg
add
pop
in
jecxz
fldpi
loopne
enter
or
and
pop
inc
int3
nop
lcall
fidivs
cltd
std
sbb
inc
clc
mov
add
pop
aad
mov
pop
jl
sbb
in
orl
mov
ret
pop
nop
fwait
pushf
jae
dec
pop
xchg
stos
scas
add
sbb
ds
pop
and
inc
inc
add
jle
cwtl
movsl
cltd
inc
mov
pop
cld
jecxz
pop
int3
inc
dec
jb
bound
out
clc
stos
add
inc
scas
cmpsb
push
scas
insb
sbb
pop
out
adc
cmpsb
das
jb
out
mov
call
push
out
cmp
or
pop
inc
mov
sti
sub
mov
rcll
jmp
mov
sahf
repnz
scas
divb
pop
mov
inc
mov
shr
loope
ljmp
enter
rcrb
and
je
mov
xor
and
mov
add
add
daa
je
pop
jb
imul
mov
insl
push
mov
lcall
sbb
lret
jae
insb
pop
jg
aam
and
or
dec
jno
or
mov
dec
fnstenv
shrl
jle
cmp
fbld
cmp
movsb
dec
push
sbb
xchg
jnp
jmp
je
mov
insl
sub
cmp
push
and
or
xor
mov
loopne
call
rorl
pusha
xchg
xrelease
test
fcoml
decl
mov
jge
pop
dec
mov
push
dec
push
bound
and
test
push
push
incl
out
adc
dec
call
add
mov
jns
push
out
decl
lock
mov
cli
cmp
rcl
repnz
sahf
pop
or
xchg
push
pop
fistl
mov
add
mov
je
jle
jl
cwtl
mov
push
enter
inc
push
sar
dec
inc
jecxz
sbb
icebp
adc
call
adc
push
push
and
adc
xor
je
inc
xchg
pushl
hlt
pop
push
push
notb
xchg
sub
lods
inc
sti
inc
dec
sar
mov
sub
sarl
int
mov
decl
inc
jg
stos
arpl
stos
out
add
adc
lahf
sub
mov
pushl
jbe
jp
fidivrs
lret
test
and
dec
cmp
push
cli
push
daa
sub
xchg
pushl
es
jb
sbb
sub
mov
pop
popf
dec
int
xor
lcall
loop
enter
mov
mov
pop
xchg
int3
out
loope
aam
loop
cmp
push
rcr
xor
ret
insb
jae
pop
mov
fstps
dec
test
test
sbb
mov
clc
lcall
jle
xchg
ror
mov
arpl
fstl
mov
pop
iret
mov
into
lock
ljmp
inc
enter
sub
pop
loop
inc
addr16
sbb
push
sbb
lcall
repnz
call
jmp
jo
cmp
dec
nop
jl
dec
mov
cli
xchg
jb
mov
mov
mov
fstl
mov
jb
sub
xchg
hlt
lea
nop
scas
and
popf
lcall
sub
pop
xor
xchg
sbb
mov
push
clc
jmp
pop
hlt
jge
jno
daa
js
ja
mov
jle
xor
push
or
fucomp
mov
clc
lcall
cld
sub
es
sbb
jmp
adc
movsl
fnstcw
scas
sub
stc
daa
add
aam
mov
mov
push
lock
incl
inc
sbb
test
shlb
testl
stos
stc
rorb
std
decl
fdivl
loop
pop
jne
pop
aam
jp
inc
cwtl
dec
xchg
loope
jmp
pop
mov
jle
mov
xor
mov
cmp
hlt
xchg
inc
in
push
inc
jns
push
out
cli
fisubrs
xchg
aaa
shlb
jle
sub
sbb
in
mov
pushl
pushl
xor
shlb
adc
xor
shr
std
and
pop
and
mov
lret
jg
call
icebp
lcall
add
mov
xor
xor
xchg
int
mov
pushl
push
and
imul
jne
sbb
inc
out
push
jo
call
ss
jmp
cmpsl
ss
inc
mov
mov
cmpb
stos
testl
lcall
or
mov
inc
jp
mov
loop
xchg
pop
cmc
cmpsb
and
push
xchg
or
cmp
sti
jb
int
add
test
mov
outsl
sar
pop
insb
notb
push
pop
mov
aad
sub
xor
mov
mov
or
jge
lcall
mov
jmp
inc
push
dec
popa
add
jo
popf
fdivrs
stos
mov
out
fstpl
jecxz
inc
xor
out
outsl
jns
jle
xchg
cmp
xor
sbb
mov
sti
inc
xor
andb
dec
dec
add
std
fnstcw
jg
mov
das
cli
scas
dec
and
movsb
sub
test
xchg
call
insb
mov
dec
xchg
or
cmp
or
pop
mov
jl
push
mov
jnp
jg
adc
in
push
aaa
out
rcl
inc
jnp
decl
ljmp
jb
sbb
out
push
dec
sbb
jbe
dec
ljmp
clc
cltd
lret
in
pop
sub
xchg
cmp
mov
fisubl
cmp
pop
jg
outsb
test
add
mov
and
test
xchg
sub
orb
push
js
das
dec
pop
decl
stc
sub
in
or
jecxz
shr
push
mov
sbb
addr16
lcall
fs
and
divl
cmp
leave
test
sub
cmp
sub
pushl
scas
cmpsb
and
ret
jae
std
imul
xor
divb
adc
out
fcmove
sbb
decl
inc
repz
rorb
mov
or
movsb
push
adc
clc
add
call
test
nop
jno
sub
mov
or
and
sarl
scas
add
pop
sub
add
adc
mov
jne
push
push
clc
lahf
lock
mov
mov
sub
cmc
jle
scas
xchg
mov
mov
sbbb
mov
cltd
popa
dec
sub
imul
movsl
rorb
and
mov
aaa
push
repz
xchg
and
stc
lods
xor
push
and
sbb
jg
xor
scas
jno
add
rorb
movsl
int3
fldt
in
dec
scas
xchg
mov
mov
adc
xchg
pop
das
and
int3
les
popf
add
pop
jnp
clc
in
sbb
fs
lds
dec
push
xchg
aaa
cmp
out
and
push
mov
inc
out
mov
addr16
mov
jge
push
or
sub
scas
jp
push
mov
pushl
inc
sub
xchg
in
jg
hlt
mov
add
xor
fsubs
jmp
shl
loope
xlat
cmpsl
stos
adc
mov
add
lds
lret
pop
cli
ljmp
mov
push
mov
cmp
std
lods
inc
clc
push
mov
mov
cmc
push
cmp
xchg
lock
fcomip
mov
xchg
scas
fbstp
daa
inc
loop
jmp
ljmp
imul
sbb
mov
xchg
dec
inc
jg
jmp
mov
pop
movsb
inc
mov
call
or
int
adc
out
sub
ret
cs
loopne
ljmp
mov
inc
stos
and
test
pop
fstl
sub
mov
les
leave
cld
lcall
cmp
xor
jmp
test
fimuls
adc
lds
stc
or
push
call
mov
lock
imul
lret
or
pop
incb
jp
jmp
jge
int3
mov
dec
sub
and
pushf
or
cwtl
jmp
jle
sahf
fdivl
xchg
sub
push
or
mov
out
mov
out
int
incl
xchg
stos
sub
dec
ds
mov
or
out
out
es
cmp
jmp
sub
jae
cmpsb
das
inc
mov
std
movsb
enter
inc
or
mov
ja
call
out
sub
ljmp
dec
inc
xor
notb
aad
loope
push
ret
push
pop
jmp
in
dec
pop
pop
or
clc
mov
xchg
or
scas
dec
fucom
mov
int
fists
sbb
loopne
adc
mov
and
cli
dec
jb
shrb
push
xor
cli
subb
ficompl
pop
pushf
xchg
and
mov
decl
mov
mov
dec
jg
ffree
sub
lds
or
adc
and
pop
gs
push
pop
in
incl
push
inc
outsb
lods
nop
mov
xor
sbb
pop
aaa
adc
xor
addr16
mov
inc
pop
loope
call
or
jnp
jl
mov
cmp
mov
scas
inc
ljmp
outsl
inc
jg
push
popf
inc
mov
mov
aad
jle
or
stos
sbb
sbb
mov
adc
mov
test
ss
add
pusha
paddusw
ret
call
fisubrl
pop
pop
cmpsl
xchg
inc
idivb
mov
add
xchg
xor
add
jo
mov
decl
jecxz
mov
xchg
xor
or
push
cmp
xor
call
int
pop
sbb
enter
icebp
mov
push
pop
sub
incl
cmp
jmp
cmp
xchg
sub
jl
ret
xchg
sbb
aas
xor
incb
add
std
inc
dec
inc
daa
mov
dec
xchg
jg
xor
xor
jmp
cli
and
fstps
jne
jmp
pop
pop
adc
enter
scas
pop
mov
push
adc
mov
ljmp
lcall
cmp
loop
andb
outsl
jp
xchg
xor
add
push
push
xor
lcall
loop
or
popa
fwait
lret
push
push
xchg
mov
lea
cwtl
nop
add
jge
lcall
jecxz
in
cld
jbe
cld
sbb
adc
add
fistpll
inc
push
xor
aad
scas
pop
scas
and
sbb
and
fmuls
jg
mov
jbe
lcall
cwtl
mov
cltd
adc
pop
xchg
lcall
push
pop
icebp
test
fildl
test
shll
lea
pop
adc
dec
lods
xor
mov
mov
cmp
cltd
fsave
or
out
jb
outsl
in
push
sub
push
int3
cltd
fildl
mov
mov
cmp
mov
lahf
pop
sahf
xchg
cltd
scas
or
sar
stc
jg
cmp
iret
and
push
cmp
jmp
xor
jge
mov
add
and
cmp
add
sbb
push
mov
int
push
fdivr
incl
out
mov
loopne
enter
dec
xchg
push
xchg
repnz
repnz
aam
ret
add
ret
mov
sar
fldcw
or
jno
xchg
decl
outsl
int3
fs
mov
jg
sbb
push
pop
loopne
mov
cltd
jecxz
shr
je
sub
mov
or
mov
or
cmp
mov
fiaddl
sub
push
mov
mov
andl
outsl
ljmp
pop
jnp
xchg
dec
push
push
xor
add
pop
aam
ret
insb
mov
testl
lcall
ljmp
lahf
mov
dec
in
cmp
pusha
mov
inc
outsb
sub
mov
test
loope
loopne
or
and
imul
jno
decl
pusha
xchg
sbb
fiadds
and
pusha
ret
cmp
or
sbb
imul
pop
sarb
cmp
fstl
jbe
pop
divb
aaa
push
cmc
cmc
cmpsl
inc
mov
shrb
jmp
mov
pop
ss
int3
push
jle
or
shll
addr16
jecxz
decl
out
ret
pop
push
cld
or
pusha
or
lret
jne
cld
push
jne
mov
fdivs
ljmp
pushf
stc
jo
fwait
xor
sbb
dec
and
cltd
sub
dec
mov
xchg
insb
adc
or
xor
and
imul
xchg
jnp
dec
xor
into
lock
sub
add
clc
out
sub
mov
or
lea
lcall
out
jb
xchg
fistpll
cld
add
pop
xor
adc
adc
idiv
aad
in
call
nop
sbb
mov
imul
sub
and
ret
fdivr
pop
lret
cmpsl
adc
lcall
int3
stc
mov
push
loope
arpl
mov
or
shl
incb
mov
pop
sahf
mov
icebp
cmp
mov
sbbl
shrl
add
pop
xchg
bound
addl
jbe
adc
pusha
fsubr
xchg
lcall
cmp
jae
jg
ljmp
rorl
mov
mov
lret
roll
ret
sub
incl
xchg
and
xorb
das
mov
pop
daa
ficoml
sub
jmp
add
fiadds
pop
adc
mov
xchg
arpl
in
cmp
lcall
in
xor
pop
cli
das
imul
shr
pop
xor
push
pushf
dec
inc
nop
lcall
sub
pushf
jmp
cmpsb
sub
inc
addl
ljmp
ficoml
dec
pop
lahf
mov
movsl
imul
push
test
inc
jmp
xor
ljmp
jo
dec
repz
ds
sbb
and
cmp
lcall
pushl
stos
jmp
loopne
mov
jge
scas
enter
xor
imul
inc
mov
hlt
adc
lds
mov
in
movsb
fidivl
add
dec
push
xchg
sbbl
repnz
mov
push
dec
cmc
repnz
pop
push
fnstsw
xchg
popf
and
das
cli
fcoms
into
insl
ja
mov
mov
shrb
call
mov
pop
loope
popa
loopne
repnz
nop
add
shlb
dec
popa
popf
je
dec
pop
enter
lcall
sub
pop
in
inc
pop
xchg
arpl
stos
out
jno
mov
data16
rcll
pusha
popf
jg
ficoml
stc
xchg
sub
stc
jb
out
loope
add
pop
sbb
push
movsb
cwtl
call
test
ret
aad
sbb
outsl
sarb
into
mov
ficomps
pop
loopne
ljmp
fsts
jle
jecxz
movsl
adc
jae
add
dec
mov
dec
push
jmp
addr16
cli
mov
popf
inc
or
rol
es
jae
es
test
loopne
push
jg
mov
mov
mov
stc
ret
pop
mov
push
incl
xchg
mov
lds
pop
dec
mov
lret
loope
mov
hlt
xor
popa
in
mov
adc
incl
sub
and
inc
xchg
out
xchg
xor
adc
enter
push
xor
enter
sbb
lcall
xor
sub
adc
ljmp
imul
test
pop
cmc
incl
adc
popf
loop
es
inc
lahf
mov
inc
xor
cmp
mov
inc
ret
sub
sub
push
fbld
inc
hlt
test
sahf
adc
xlat
push
sbb
mov
pop
ss
or
lcall
pop
daa
rcll
jb
ljmp
cmp
jecxz
jno
push
cld
inc
or
idivl
jns
stos
out
ficompl
xchg
rolb
imul
ljmp
rcl
je
das
inc
and
adc
dec
mov
inc
popf
sar
decl
addr16
nop
imul
mov
outsb
addr16
bound
pop
add
std
out
ret
add
add
cmpsb
sbbb
sub
jp
cld
repnz
lock
jmp
jmp
lods
mov
mov
mov
pop
jno
icebp
orb
test
jle
test
cmp
repnz
sarl
addr16
cmp
fucomi
push
fwait
mov
ja
mov
pop
mov
mov
cmp
push
jmp
add
jo
imul
cmp
test
xor
mov
jl
cmp
inc
test
add
cmc
sbb
scas
jp
jg
or
sub
repnz
fsubrs
mov
shlb
dec
ret
adc
das
cli
call
aas
jle
dec
rcr
lds
sbb
xor
and
fistps
subl
iret
mov
int3
mov
pop
jmp
push
pop
lods
or
lret
adc
push
jmp
cli
dec
mov
mov
jno
popa
inc
scas
mov
hlt
jl
gs
stos
or
xchg
mov
decl
cmp
and
adc
ja
call
insb
std
incl
add
fdivrl
add
hlt
mov
adc
mov
push
push
and
mov
fbstp
scas
imul
cli
or
dec
icebp
sbb
cld
popa
and
dec
cmp
pop
mov
lods
sub
mov
pushl
ljmp
loopne
inc
push
xor
mov
mov
subb
mov
inc
jge
sahf
xchg
and
daa
jnp
mov
adc
push
es
iret
mov
lock
outsl
inc
das
cmpsb
repz
pop
subb
std
dec
call
ljmp
cli
fstps
mul
cwtl
aam
sbb
or
mov
pushl
rorb
int
adc
and
out
test
push
add
call
loope
jp
aaa
mov
sti
shr
outsb
fnsave
cmp
mov
push
mov
dec
insl
and
test
mov
inc
lods
in
xor
fistps
push
jg
sahf
aad
loopne
testb
mov
and
ljmp
push
mov
cltd
sbb
popa
scas
add
xchg
fidivl
mov
arpl
lcall
decb
int
add
test
mov
fidivrs
movsl
push
scas
inc
movups
fistpl
adc
push
mov
cwtl
pushl
or
fists
and
inc
push
out
inc
in
cmp
loop
jno
cmc
decl
test
cmp
cmpsb
sbb
mov
mov
cmp
jmp
bound
inc
sub
mov
mov
pop
filds
add
or
aam
dec
call
push
ret
ss
gs
dec
in
sbb
rcr
es
dec
xchg
adc
rclb
lcall
aam
sahf
repz
lock
dec
fs
aam
scas
sub
lret
jl
adc
mov
popf
jmp
fcoml
adc
adcl
sti
sub
mov
scas
daa
dec
inc
enter
jmp
mov
fsubp
dec
es
js
mov
aam
push
icebp
sbb
lods
pushl
mov
aas
sub
cmp
jg
popa
test
inc
sbb
dec
loope
and
addl
cmp
imul
incl
sahf
fcomp
inc
pushf
and
mov
pop
mov
pushf
js
out
sar
call
je
dec
adc
adc
xchg
mov
xor
adc
jne
incl
sub
int
dec
and
push
push
imul
test
inc
xchg
lods
ds
ljmp
pop
mov
cmp
dec
cmc
les
jecxz
jno
dec
dec
mov
cmc
std
movl
push
out
cs
fldenv
sbb
cmc
jne
out
cld
cltd
cmp
sub
or
jmp
stc
inc
std
lcall
test
adc
xor
out
outsl
mov
mov
sub
sub
aad
icebp
jae
and
jmp
xchg
rcrb
jbe
jmp
aaa
mov
lret
sbb
lcall
insl
cld
mov
sbb
popf
inc
sub
mov
loopne
mov
inc
xchg
mov
cld
outsl
out
xor
repnz
dec
inc
sub
cmp
push
jmp
pushl
mov
pop
popf
arpl
mov
mov
jno
lret
movsl
sbb
sbb
ss
xor
icebp
jmp
mov
mov
pop
outsb
insb
in
loopne
clc
push
out
cli
mov
rcr
add
mov
or
inc
pop
fidivrl
popa
mov
shrb
pop
inc
mov
add
sahf
sbb
aas
cmc
gs
mov
inc
mov
adc
jl
cld
jmp
pop
sbb
mov
push
shll
push
push
ret
adc
dec
es
jl
mov
fsubrl
incl
adc
or
aad
jae
cmpsl
js
addb
lods
sar
dec
repnz
inc
xchg
scas
lcall
cwtl
fdivrp
addr16
cmp
repnz
mov
aam
fdivp
popa
addr16
lods
mov
mov
fmulp
fadds
xor
imul
loopne
xor
mov
addr16
cmp
fbld
inc
or
popf
and
aad
xor
mov
pop
inc
mov
jmp
mov
bound
jno
mov
cmp
mov
and
loop
xor
scas
adc
dec
decl
lock
push
xchg
rcl
cltd
lret
icebp
into
mov
cmpsb
dec
xchg
mov
test
jmp
fstpl
pop
lret
hlt
inc
lods
sub
and
nop
adc
inc
stc
sbb
incl
inc
jns
fwait
mov
in
sub
scas
int
add
xchg
jb
xor
fisubs
jecxz
cli
cmp
out
jmp
pushf
gs
sub
decl
mov
inc
icebp
lock
int3
cmc
push
mov
fcomip
test
mov
loope
push
cmp
iret
test
adc
test
lock
xchg
sahf
add
in
dec
sub
fsubrs
int
pop
scas
leave
push
rorl
jecxz
jb
xchg
mov
decl
push
xchg
outsb
loopne
pop
inc
lods
daa
orl
mov
insb
mov
decl
mov
pop
out
sahf
out
shrb
pop
jecxz
addl
loopne
out
sub
scas
mov
jmp
arpl
and
dec
dec
insb
pushl
sbb
mov
or
ret
inc
inc
loopne
aaa
add
in
sbb
sub
or
inc
xchg
mov
pop
hlt
xchg
xchg
cmovg
iret
jne
ret
mov
mov
loopne
push
test
out
cli
pop
jecxz
shrl
push
inc
dec
adc
gs
push
inc
enter
ficomps
pop
dec
inc
dec
mov
icebp
cs
push
test
icebp
or
dec
jmp
pop
push
popa
cmc
push
std
packuswb
pop
mov
sbb
ljmp
add
sbbb
repnz
ret
aas
dec
int
es
jl
jo
inc
negb
stos
xchg
cmpsl
mov
test
mov
rcr
aas
lahf
cmp
out
test
stos
jp
negl
xchg
or
or
inc
dec
ds
test
mov
and
incl
push
inc
dec
xchg
lret
dec
not
dec
jae
or
dec
pop
sarb
ret
stos
add
into
jnp
add
sbb
les
popf
mov
fistpll
mov
les
orl
inc
call
mov
repnz
add
idivb
pop
or
call
mov
sub
mov
push
inc
jl
stos
push
incl
cld
lcall
add
das
adc
and
mov
add
lcall
ljmp
mov
in
jl
je
inc
aaa
ljmp
sub
mov
cmp
call
std
mov
cmp
loope
outsb
push
mov
pop
scas
xchg
dec
push
jle
sti
int3
lock
mov
incl
cmpl
les
xchg
cmp
test
out
dec
gs
ljmp
cmp
lea
stos
cmp
fdivrl
push
mov
mov
jmp
push
pop
clc
mov
cmp
lahf
fmuls
mov
cltd
into
xchg
adc
les
sar
ds
scas
and
xchg
out
sti
jecxz
loopne
call
xchg
xlat
loope
mov
xor
mov
xor
addr16
jb
add
mov
push
les
fs
push
push
jbe
xor
xor
aam
fwait
add
int3
push
xchg
push
sbb
enter
or
dec
enter
imul
setle
xlat
dec
loopne
es
jo
mov
call
roll
in
sbbl
sub
lcall
jg
and
jecxz
push
or
stos
mov
stos
test
lods
cmp
aaa
call
cmpsb
push
ljmp
popa
sbb
or
lea
cmp
cli
add
jmp
imul
sti
inc
cmp
xchg
push
jbe
cmpsl
and
cmp
shl
shlb
fcomip
mov
insl
andl
pop
fwait
xor
xchg
out
lcall
clc
call
and
mov
push
adc
int3
adc
icebp
and
pushl
xor
enter
cs
cltd
cltd
ljmp
lea
fsubl
sbb
or
cwtl
dec
xorb
cld
mov
mov
jmp
repz
mov
icebp
add
into
popf
mov
fdivr
xor
fildll
ljmp
mov
addb
enter
pop
icebp
daa
inc
push
in
adc
sub
jle
mov
fildl
mov
clc
add
dec
icebp
stos
jno
or
ljmp
sbb
jae
mov
cmp
mov
jl
mov
out
movsb
adc
pop
mov
mov
fucom
cmpsl
mov
mov
in
movsl
sarl
mov
push
gs
scas
arpl
movsb
decl
fldl
gs
andb
pop
jmp
into
test
dec
or
imul
in
int3
jl
clc
sub
and
jmp
in
lret
sbb
imul
jecxz
clc
rcrl
xchg
lret
popa
rol
xchg
scas
jg
mov
pop
mov
call
daa
pop
mov
lahf
adc
dec
out
add
iret
push
adc
sub
gs
fisubrs
xchg
ret
dec
loope
mov
jg
out
xchg
pop
sar
cmp
jge
sub
shlb
pop
xchg
incl
dec
les
test
dec
jmp
xor
xchg
rcll
adc
cmp
xchg
mov
ret
aam
inc
cmp
lcall
jbe
mov
or
test
adc
xchg
add
jmp
ljmp
test
cmp
mov
adc
in
in
adc
cmp
dec
add
pop
hlt
dec
add
inc
mov
ret
shr
pop
mov
jecxz
fsubp
inc
mov
or
push
repz
add
sbb
pop
cmp
mov
ljmp
pop
push
les
jmp
jp
pop
pop
or
mov
scas
pop
push
dec
decl
enter
negb
ja
jb
out
pop
out
cmc
pop
and
sub
jge
lcall
xchg
cwtl
add
cmpsb
or
add
gs
bound
cmpsl
xchg
fcos
jg
sbb
push
lret
int3
ret
jns
pop
pop
mov
mov
add
push
movsl
dec
pusha
push
mov
xor
popw
sub
fldcw
xor
decl
mov
es
inc
enter
sbb
inc
shl
adc
and
sti
orl
loopne
fldl
jecxz
sahf
scas
lods
fbld
dec
adc
decb
js
pop
rolb
adc
jp
mov
maxps
mov
jno
in
xchg
cs
jg
pop
inc
inc
lcall
and
jle
decl
inc
subb
add
data16
cmp
push
pop
mov
inc
pop
pushl
es
sti
stos
pop
aad
or
or
icebp
dec
xor
pop
adc
loopne
mov
rorl
fs
sub
testl
cmp
fwait
sbb
xchg
add
xlat
mov
lods
xor
stos
mov
or
jns
xlat
fwait
pop
pushf
mov
fdiv
inc
into
loope
pop
imul
pop
mov
add
imul
fnsave
sub
sahf
xlat
xor
mov
ljmp
push
loop
mov
inc
xor
sti
sbb
sbb
xchg
mov
shlb
mov
push
mov
mov
pop
jo
jle
jmp
aad
jo
popa
push
mov
push
fdivr
cli
in
ljmp
lea
nop
pop
adc
aaa
outsl
aas
xor
out
mov
arpl
es
mov
adc
frstor
movsl
ret
mov
jo
xchg
push
test
fisttpll
xchg
scas
sbb
aas
movsb
js
sar
jg
mov
mov
mov
mov
into
cmc
push
fsts
scas
xor
popf
jbe
pusha
frstor
pushl
rcrl
adc
push
mov
and
test
jns
pop
pusha
mov
push
lods
clc
mov
dec
sub
add
fldenv
fiadds
and
mov
scas
adc
ljmp
je
pop
dec
lahf
push
rcll
or
leave
sahf
sub
pushl
fstl
sbb
cmp
mov
push
popl
rolb
inc
jecxz
mov
dec
ret
pop
or
repz
xor
push
hlt
sbb
popa
cltd
mov
sub
and
cltd
pop
inc
xor
loope
push
mov
pop
fdivs
faddl
call
incl
pop
ss
in
xchg
jbe
sub
in
jae
sbb
pop
add
in
xchg
xchg
pop
mov
mov
xchg
mov
cmp
sub
dec
pop
rorb
lcall
jno
movb
or
jg
sub
sub
nop
shl
pop
dec
lods
xchg
xor
dec
cmpsl
call
push
sti
adc
and
lods
sti
ret
pop
leave
push
or
or
xchg
cmp
ljmp
jbe
outsl
jecxz
pop
dec
and
mov
roll
mov
mov
mov
sub
or
jg
xchg
or
mov
push
sub
jp
mov
add
clc
mov
hlt
cmp
js
les
sti
clc
bound
lcall
mov
cwtl
inc
sbb
test
pop
xlat
and
lcall
inc
pusha
sub
incl
dec
xor
and
ret
xor
cmc
cmpsb
fcoms
cs
lods
pop
mov
jmp
push
jo
loope
mov
sub
pushl
xor
adc
in
decl
test
fwait
xchg
inc
or
lods
ljmp
push
js
inc
clc
incl
push
mov
negb
ffreep
jno
inc
incl
add
scas
mov
sbb
incl
cmp
test
pop
or
adc
cmp
lcall
or
adcb
jl
mov
data16
out
incl
xor
stos
mov
jecxz
lret
repz
movb
adc
xor
cmp
push
enter
mov
push
popa
mov
scas
je
fstpt
mov
adc
aas
push
xchg
adc
popf
mov
mov
cmc
dec
mov
es
mov
mov
scas
add
and
mov
xor
cmp
divb
and
sub
xchg
loop
jl
jbe
aaa
inc
ret
mov
mov
je
push
mov
int3
dec
filds
sbb
mov
or
std
jmp
xor
mov
outsw
repnz
and
jg
push
push
push
jecxz
push
cwtl
inc
sti
inc
mov
mov
dec
sbb
mov
movsl
inc
dec
jns
shlb
sbb
jmp
xor
inc
lcall
fidivs
int3
pop
jp
cmpsb
mov
in
incl
cmp
and
adc
xchg
out
xor
inc
in
out
push
lea
jb
outsl
insl
or
jnp
inc
nop
jmp
xchg
and
incb
mov
std
or
push
addr16
sar
dec
mov
cmpsb
aas
or
aad
rorl
and
repnz
mov
mov
icebp
loope
addr16
jecxz
jecxz
mov
jecxz
fldcw
cli
ret
add
and
jns
cmp
xlat
test
decl
sub
xor
inc
pop
arpl
lret
mov
ljmp
in
mov
dec
jp
loop
mov
pop
aas
and
or
outsb
cmp
mov
sub
lret
push
inc
pop
loop
and
stos
test
lock
xor
flds
jno
cld
sti
jmp
icebp
dec
fisubrl
dec
insb
and
scas
fsubr
xlat
pushf
popa
ljmp
fwait
scas
sarl
incl
int3
lods
mov
cmp
cmp
jb
xchg
jbe
inc
cld
jmp
out
xchg
addr16
decb
mov
fdivr
shll
mov
jb
xlat
movsb
cmpsb
out
sbbb
xor
fdivr
cld
int
data16
mov
out
pop
outsb
push
outsl
jp
cwtl
ret
icebp
mov
stc
xchg
adc
decl
notb
adc
sarl
scas
aad
imul
test
mov
xor
pushl
and
xor
cwtl
mov
xchg
mov
lods
xchg
jae
adc
lcall
jns
repz
in
pextrw
cmp
arpl
outsb
push
xorl
mov
sub
sti
mov
lods
adc
inc
imul
jp
in
enter
fmuls
pop
sbb
lahf
xchg
jns
push
and
cwtl
mov
inc
cld
inc
push
mov
xor
sub
out
xchg
arpl
xchg
xlat
in
inc
pop
hlt
lcall
mov
and
enter
popa
arpl
int
jp
pop
pushl
mov
les
insb
push
fwait
sub
pop
es
mov
push
stos
mov
stos
pop
pushf
std
lcall
ljmp
inc
xchg
inc
cwtl
mov
sub
loope
xchg
pop
inc
mov
js
adc
decl
iret
and
push
mov
mov
ljmp
lahf
mov
push
adc
sub
sahf
xchg
pop
popf
xchg
fadds
fwait
das
mov
out
fcoml
stos
lds
jmp
inc
sbb
push
jno
fistl
shll
lcall
sbb
fwait
pop
ds
and
cmp
sbb
jg
jge
lock
decl
iret
mov
out
pop
in
int
push
int
mov
dec
cli
sarb
mov
dec
lods
enter
incl
pop
out
cmpsl
push
mov
adc
xchg
mov
and
mov
xor
dec
fdivrl
or
aaa
loopne
out
stos
fidivs
gs
outsb
cmp
mov
cmp
in
rorl
cmp
movb
in
push
mov
mov
gs
lret
incl
xchg
pusha
pop
mov
jp
mov
jl
loope
sub
cmpb
mov
adc
iret
jmp
cs
enter
mov
jmp
shll
mov
ret
incl
clc
out
and
push
cs
mov
adc
and
lahf
inc
scas
mov
decl
fcompl
or
test
ret
adc
xlat
repz
xchg
dec
sub
mov
out
jmp
or
ficoml
scas
mov
jb
insl
outsb
bound
lret
out
sahf
aaa
cmc
inc
and
loopne
push
sub
call
imull
mov
cld
data16
inc
cs
pushf
test
mov
incl
jl
aam
mov
scas
mov
loopne
sbb
and
mov
sbb
sbb
stos
rep
out
pop
mov
mov
incb
movsb
and
fists
loopne
nop
mov
jb
xchg
ss
in
gs
adc
jg
jg
mov
out
xchg
fists
mov
movsb
pop
mov
mov
cwtl
mov
andb
std
and
push
xchg
sti
loope
dec
mov
call
std
scas
test
shl
fxch
aaa
jo
cmpsb
je
call
and
jge
jecxz
mov
mov
lret
pop
repnz
jge
gs
sbb
xor
shl
sbb
dec
rol
push
sbb
and
jp
stos
dec
xchg
mov
jl
std
fistpll
cli
jle
loope
mov
jnp
mov
cmpsl
push
or
incl
jae
jno
sub
mov
xor
add
adc
fisubl
add
jae
fdivr
ljmp
jle
test
mov
mov
vmwrite
ret
rcrl
push
xchg
mov
adc
fwait
sti
call
cmp
sub
das
lret
mov
xor
in
adc
and
lcall
dec
lret
nop
sbb
mov
sbb
pop
dec
ja
nop
ja
lds
push
std
lcall
insb
das
sbb
fdivrs
cmpsl
and
movsb
push
loopne
mov
cmp
testl
mov
jl
mov
outsl
sti
lret
mov
cwtl
jp
mov
jmp
mov
outsl
add
iret
cs
adc
sub
rclb
xorb
push
ficomps
call
adc
inc
sbb
lcall
or
push
decb
cmp
dec
daa
push
xor
sar
jnp
and
and
mov
insb
adc
adc
adc
add
jg,pt
repnz
mov
movsb
mov
jae
lods
cs
adc
data16
mull
jl
scas
xchg
scas
mov
jle
ret
inc
test
jmp
lods
clc
mov
std
notl
hlt
jnp
addr16
adc
mov
and
add
ljmp
fs
and
nop
mov
stos
mov
pop
fsubl
pop
xor
out
dec
popw
popf
mov
push
aad
ss
cmp
adc
stos
cmp
or
lcall
sub
ja
arpl
call
mov
mov
sbb
push
and
inc
das
scas
dec
mov
lods
aaa
jnp
add
xchg
test
mov
mov
cmp
xchg
sti
int
or
shrb
out
imul
movsb
addb
ja
mov
inc
in
adc
or
add
popl
adc
jno
add
push
push
pop
scas
jnp
sub
cld
pavgb
pop
mov
addr16
sbb
ljmp
xchg
mov
push
call
pop
filds
xlat
scas
imul
ljmp
sub
add
push
xchg
sbb
cmpsl
arpl
int
paddb
test
movsl
sub
add
call
pop
cmp
gs
xchg
testl
dec
pop
pop
xor
gs
ljmp
sahf
hlt
rclb
cwtl
popf
jecxz
mov
xor
ret
inc
imul
test
lret
pusha
decl
das
inc
shlb
and
lcall
fcomp
and
push
test
call
pop
sub
outsl
sub
jbe
and
ljmp
loopne
lods
adc
bound
sub
mov
pop
cmpsb
add
ficoml
in
shlb
fdivrl
dec
insl
lods
leave
sbb
decb
push
mov
adc
cmp
andb
mov
dec
adc
das
mov
jge
rorl
ret
jns
lcall
cs
add
dec
jp
and
adc
xchg
into
push
jp
fwait
or
hlt
lcall
cmpsb
xchg
and
inc
xor
aaa
inc
sbb
and
xchg
add
jbe
out
rcr
in
lea
ljmp
push
inc
jg
xchg
sti
mov
pop
shl
sub
jl
dec
mov
push
aas
incl
fldenv
clc
jnp
fildl
stos
sar
imul
mov
jno
notl
xor
loope
into
adc
orb
out
cwtl
mov
daa
xchg
daa
dec
das
popa
out
call
aas
inc
rcll
sub
sbb
movsl
dec
pop
jecxz
sbb
call
fdivrs
cmp
cmpsl
fcmovnb
les
loope
cmp
xchg
jnp
and
leave
sbb
push
push
cmp
call
call
lods
lea
dec
lahf
xchg
scas
pop
ret
imul
inc
les
decl
fucomip
rolb
jg
xchg
push
adcl
mov
mov
popa
xor
jg
rorb
mov
xchg
repnz
incl
or
sti
sub
std
imul
push
out
jmp
sub
enter
incl
jmp
jb
jl
cs
ja
out
xor
jmp
inc
sub
jbe
bound
mov
sbb
lcall
fadd
mov
sub
sbb
je
shll
add
stos
imul
insl
mov
lcall
loope
mov
or
xor
sbb
jae
in
scas
inc
js
push
cmc
lcall
cmp
jecxz
dec
imul
xor
icebp
jecxz
imul
std
ficomps
jno
lret
jge
nop
loop
fadds
and
push
adc
jmp
call
add
cmc
pop
ljmp
test
push
psubq
incl
es
sub
adc
lea
add
pop
mov
and
mov
lcall
adc
daa
pop
aas
sbb
and
ret
mov
daa
in
popa
or
or
decl
xor
push
inc
mov
imul
jb
xchg
fsubr
or
mov
xor
dec
das
aad
and
and
test
push
push
pop
hlt
imulb
stos
out
movsb
int
shl
pop
aaa
add
sar
shlb
decl
xor
sti
fnstcw
xchg
lods
lds
in
in
pop
mov
nop
mov
es
call
je
jnp
dec
adc
pop
loopne
mov
rclb
sbb
andl
sub
jno
sbb
outsb
rol
xor
test
leave
ljmp
enter
pop
addr16
sti
lret
clc
sbb
sbb
cmp
jmp
dec
push
sbb
and
mov
shll
fildl
arpl
jmp
mov
and
mov
pushf
xchg
sbb
cli
mov
add
mov
roll
dec
xchg
decl
inc
pop
outsb
sbb
and
mov
insb
push
sti
mov
xor
mov
in
lcall
loop
push
nop
mov
cmpsl
lock
sub
leave
jecxz
xchg
roll
jg
in
es
mov
movsb
jl
ljmp
mov
pushl
gs
stos
dec
inc
test
loope
lea
and
out
mov
pop
push
pushl
lahf
sbb
push
data16
out
jecxz
fcomi
cld
cltd
mov
das
jae
pusha
mov
addb
mov
lcall
aaa
mov
out
jnp
loop
jno
jb
cmp
jmp
pushf
rcll
cmp
cwtl
stos
sbb
movsl
js
out
in
add
incl
das
hlt
dec
lds
dec
mov
cmpsl
jns
mov
out
clc
jno
gs
xlat
dec
jnp
cmc
stos
insl
dec
notl
xchg
or
inc
mov
loope
sub
mov
pop
and
lret
and
fs
arpl
out
dec
pop
mov
add
out
and
jg
je
mov
loopne
dec
pop
cmp
push
roll
mov
xchg
jb
sbb
adc
call
loope
imul
mov
addr16
addl
mov
aaa
out
mov
sbbl
movsb
test
adc
mov
shrb
mov
ljmp
mov
push
xlat
addr16
xchg
mov
rolb
out
imul
lcall
test
popf
test
fsts
ljmp
mov
dec
xor
add
pop
mov
incl
xchg
hlt
cmp
xchg
enter
and
icebp
or
jge
idivl
bnd
lret
jmp
test
inc
ja
xor
mov
jp
mov
jne
bound
in
loopne
aaa
cmc
xchg
ljmp
mov
daa
imul
xchg
push
in
popa
movsb
inc
add
adc
inc
fwait
cmp
sub
in
ja
jg
and
aam
pop
and
cmpsl
adcb
jno
ljmp
ljmp
or
aam
mov
inc
popf
sar
es
js
jns
repnz
mov
jmp
sbb
adc
mov
fwait
lret
int3
xchg
adc
hlt
inc
rcrl
xchg
mov
sub
insb
sub
pushl
into
popa
adc
push
cmp
jae
jge
scas
fistl
loope
repnz
sahf
and
cld
and
inc
mov
pop
push
or
cld
outsb
dec
mov
pop
sbb
and
and
jg
cld
mov
pop
daa
dec
push
push
fxch
in
ss
or
jbe
jge
pop
daa
jmp
mov
pop
jbe
mov
xchg
pop
xor
movsl
or
push
call
notb
cwtl
in
jge
in
cltd
jmp
and
test
scas
jbe
xchg
rolb
sub
incl
outsl
pop
ja
ljmp
fcoml
lcall
dec
mov
inc
and
jae
dec
lret
mov
push
fisubrl
fsub
mov
dec
pop
pop
imul
lcall
inc
xor
push
lahf
inc
xchg
sbb
lock
fdivrs
mov
sub
adc
mov
or
jb
jae
incl
fsubs
dec
dec
sub
add
mov
inc
in
movsb
insl
jecxz
sub
decl
clc
repnz
inc
mov
mov
fadds
cmp
cmp
repz
insb
in
lcall
insl
fs
cmpsb
mov
fsubs
clc
push
sub
out
mov
and
shlb
leave
mov
insb
and
mov
xchg
xor
repz
hlt
negb
jne
mov
push
rcrl
jg
repz
or
fwait
adc
loopne
xor
stos
pop
xchg
sahf
add
cli
call
cmpsb
cwtl
or
popf
mov
shlb
mov
mov
cmp
cltd
and
push
push
lock
cmp
inc
enter
and
sub
cli
cld
or
mov
sub
ljmp
push
adc
or
iret
icebp
shrb
loopne
xor
push
bndldx
call
fstps
jmp
dec
rcrb
mov
mov
ljmp
incl
or
add
mov
add
jmp
hlt
das
pop
pop
ret
popf
addr16
fcmovnu
in
lock
and
xor
pop
lock
mov
ss
cmp
in
push
cmp
push
jl,pt
hlt
mov
stos
decl
inc
add
jecxz
mov
adc
je
pop
call
pop
arpl
in
dec
mov
rcrb
add
aas
mov
fcmovnbe
ds
sahf
rolb
mov
les
andb
mov
jae
jbe
push
stos
push
dec
fcmovnu
jae
ljmp
js
shll
in
ret
sub
pop
leave
sub
call
jb
testl
cmp
test
mov
sub
lahf
aad
test
call
push
and
pushf
push
lcall
mov
rclb
cmpsb
cmp
lcall
insl
data16
cmpb
inc
sarb
mov
sti
into
sub
mov
icebp
inc
hlt
in
xchg
dec
add
iret
ljmp
add
add
mov
xor
xor
iret
lret
inc
sti
addr16
subl
call
call
ljmp
movl
xor
and
adcb
call
add
sub
loop
aas
scas
les
gs
lcall
sub
pop
lahf
xchg
push
cmp
mov
incl
hlt
aad
je
sub
xchg
pop
lea
jo
jle
fistl
pop
icebp
cmp
movsb
movsb
cmp
adc
inc
jecxz
andb
mov
lret
mov
xchg
dec
and
outsb
shll
int3
mov
popf
fdivr
sub
push
push
and
inc
fwait
mov
ljmp
rcl
ds
xchg
sub
imul
cwtl
jb
incl
jg
or
push
cltd
mov
and
je
and
test
in
test
in
cmp
ds
mov
pause
push
sbb
out
icebp
push
sbb
add
sub
test
enter
addb
incl
pop
xchg
and
mov
or
enter
pop
inc
or
cltd
mov
inc
enter
in
lds
sarb
sbb
push
pop
and
pop
inc
jg
ds
jge
addr16
dec
and
jb
hlt
pop
call
ss
fistps
push
mov
hlt
jp
in
out
clc
inc
cld
mov
outsb
mov
sub
cmp
enter
incl
xchg
incl
ja
dec
mov
dec
jl
push
dec
cs
xor
jg
lods
scas
mov
sarl
outsl
rcrl
lret
es
add
adc
xchg
test
jecxz
or
mov
pop
dec
xchg
mov
cwtl
xor
mov
pop
in
push
dec
pop
pop
or
ljmp
inc
in
inc
jo
mov
mov
jle
sbb
xchg
inc
jne
sub
mov
incl
dec
sbb
dec
arpl
repz
adc
xchg
bound
clc
add
repz
pop
bound
in
push
fs
xchg
push
gs
fucomi
sub
and
mov
call
repz
mov
ret
outsb
clc
subl
icebp
daa
mov
dec
add
pop
hlt
decl
xor
jg
je
inc
rorb
pop
aam
push
inc
insb
cmp
jno
lcall
pushf
push
push
mov
jo
cmp
sbbb
cltd
sub
xchg
push
xchg
test
repnz
and
inc
scas
pop
push
mov
gs
push
pop
lock
xchg
jmp
sub
or
fucomp
iret
data16
loop
ss
dec
out
xor
sub
xchg
mov
aas
pusha
daa
xchg
pop
inc
xor
sbb
hlt
pushl
push
or
or
pop
test
outsl
cltd
inc
dec
xor
outsb
sub
insb
fmull
jno
leave
pushf
imul
lret
rcrb
jge
loope
xor
cld
mov
and
inc
jg
mov
mov
mov
movl
test
pop
jg
inc
inc
loopne
mov
jg
loope
dec
pop
adc
popf
enter
out
inc
pop
push
mov
cwtl
incl
das
les
and
es
stos
shlb
adcl
xor
in
xchg
ljmp
jo
adc
xchg
push
xlat
sub
or
xchg
xor
in
sbb
adc
jmp
cmp
sub
mov
xchg
xor
jp
pushf
sub
stos
aas
mov
dec
cmp
lock
jb
push
or
jg
cmp
into
xor
xchg
scas
aaa
inc
pop
or
mov
xchg
jns
fwait
insb
add
jmp
bound
cmp
xchg
ret
add
clc
call
jmp
push
inc
lea
call
shrb
popf
loopne
lcall
sbb
jo
inc
inc
inc
adc
mov
incl
scas
jne
mov
pop
aam
sahf
aas
dec
popa
adc
ljmp
sbb
out
aad
xchg
cmp
sbb
pop
iret
ret
lcall
faddl
cli
mov
jbe
rclb
sub
xchg
in
add
inc
pop
enter
jmp
mov
push
xchg
inc
cld
jl
shlb
scas
mov
push
xchg
sub
lods
sub
lcall
xchg
pop
in
xchg
std
pop
sar
sarb
sbb
cli
lcall
test
adc
pop
pop
sbb
push
enter
jmp
jl
inc
push
imul
call
and
pushf
adc
aam
in
xor
sahf
addr16
test
mov
mov
andb
int3
movb
ja
sbb
js
movsb
push
lret
lahf
push
mov
jno
dec
xor
fbstp
cbtw
cmp
cli
cmp
pop
xchg
cs
test
xor
aas
pop
mov
pushl
hlt
lods
mov
inc
jnp
xchg
add
pop
sbb
divl
adc
cmp
out
sbb
mov
fwait
adc
roll
xchg
mov
xor
lret
cmp
ljmp
bound
xor
or
or
out
mov
shr
jp
loope
and
jmp
popf
pop
mov
cmp
andb
xchg
mov
scas
inc
sbb
jno
cmp
incl
shlb
jg,pt
xor
mov
cli
xor
decl
push
cli
inc
fstl
into
mov
pop
and
lcall
xchg
add
and
cwtl
push
int3
add
ljmp
sub
mov
jmp
mul
and
push
xor
mov
xor
lods
inc
cmc
mov
sub
push
pop
xor
clc
call
int
jns
push
jle
pushf
jo
cmpsl
or
andb
sbb
cmp
push
xchg
xor
cli
mov
xchg
std
repz
mov
inc
mov
out
std
sbb
cmp
insb
push
pop
leave
pushl
fisttpll
mov
lea
int
stos
cmpsb
jbe
or
les
lret
xor
sub
call
xor
xor
push
es
adc
int
xchg
out
jmp
aam
imull
hlt
push
cmp
lcall
and
xchg
or
mov
xor
incl
xor
push
mov
pop
bound
adc
fcmove
cmp
fistl
pop
clc
iret
lds
lret
cmpsl
sub
push
dec
lods
mov
nop
ljmp
add
mov
int
lcall
shll
jmp
adc
lods
xchg
in
arpl
mov
call
pop
addr16
xor
sub
cmpsb
pop
cltd
cmpsb
xchg
nop
cmp
mov
shlb
decl
into
xchg
push
fmulp
clc
lods
test
in
ret
jne
fisubrs
mov
pop
sub
jg
dec
js
iret
jg
stos
fidivl
lock
ljmp
insb
cmpsb
sub
push
dec
sar
push
std
mov
inc
hlt
sub
hlt
inc
jo
lock
in
js
cwtl
sub
out
jge
or
jg
pusha
add
adc
mov
mov
aaa
mov
fcmovne
xor
cld
sti
sbb
aas
pushl
call
sbb
int
inc
xchg
inc
cmp
mov
pushl
mov
out
or
mov
push
and
mov
lcall
jg
out
sub
shll
push
mov
mov
mov
cli
rol
xchg
cmp
jmp
lea
gs
mov
sub
lcall
push
ljmp
ret
xor
xchg
int3
adc
or
ss
mov
lcall
js
xchg
pop
fs
arpl
xchg
cs
push
in
cltd
subb
inc
addr16
cmc
daa
lcall
dec
cld
jnp
pop
pop
jb
into
push
jecxz
push
jmp
hlt
adcl
outsb
and
adc
add
mov
mov
stos
jle
incl
jb
cmp
push
pop
popf
lock
aaa
subb
mov
das
jnp
mov
aad
mov
nop
decb
jns
mov
sub
mov
mov
fsubs
imul
dec
mov
and
push
in
or
insl
adc
into
jb
ljmp
divb
mov
lcall
aaa
lods
xchg
in
mov
imul
pushl
call
mov
std
push
cmp
pop
sar
xor
xchg
sti
pop
aaa
mov
decl
add
loopne
add
cmp
xchg
cmp
imul
sub
and
aam
inc
dec
mov
sub
mov
pusha
pop
add
sbb
in
loop
mov
jecxz
subb
xor
jg
jbe
enter
push
ud2
push
subb
fdivl
fwait
push
in
jge
ljmp
arpl
inc
mov
jns
jp
in
sub
push
fwait
imul
in
jno
adc
pop
mov
lcall
pop
jmp
subl
inc
inc
in
mov
je
cmpsl
bound
testb
mov
push
xor
test
adc
test
addr16
ja
pushl
fnstsw
pop
fsubl
cs
and
jle
xchg
dec
fwait
aaa
jne
or
push
incl
push
lcall
mov
dec
scas
push
and
inc
cmpsb
sarb
jae
mov
pop
xor
aad
test
imul
pushl
cmpsl
mov
or
adc
iret
inc
loop
shl
int3
inc
cs
ljmp
inc
std
sbb
cwtl
sbb
ds
or
xchg
pop
xchg
or
fdivr
call
test
mov
rcrb
pop
cmp
cmpsl
xorb
sbb
repnz
js
mov
lods
dec
out
lock
nop
dec
out
inc
adc
roll
xchg
popf
xchg
lea
or
cmc
push
add
mov
popf
add
pop
hlt
incl
inc
rolb
mov
into
xchg
xor
add
loopne
cltd
add
add
inc
in
aad
dec
in
aaa
test
dec
fistpll
mov
cmp
sbb
sub
or
sub
rclb
pop
jb
test
lcall
mov
inc
adc
stos
aad
testb
dec
xchg
mov
jo
icebp
mov
mov
std
call
aaa
add
jmp
cs
dec
adc
imul
loop
cs
jp
push
mov
mov
test
add
loopne
sub
mov
cltd
xor
add
and
or
ljmp
mov
mov
or
cmp
xchg
aad
and
dec
mov
add
jmp
pushl
pusha
jp
mov
lds
arpl
sbb
stos
shlb
lahf
add
adc
cmp
out
call
cmp
addb
ds
mov
scas
popa
shrl
cli
lods
jne
dec
notb
ljmp
inc
scas
mov
dec
lock
jbe
addr16
out
out
dec
cmp
aam
fdivr
ljmp
cmovg
lods
dec
iret
push
adc
pop
mov
arpl
mov
cs
dec
call
add
mov
insl
xchg
lret
test
in
int
cvttps2pi
je
cmc
movsl
les
popf
incl
into
cvtps2pi
pop
mov
mov
push
rcrl
je
fisubl
jmp
push
mov
les
jo
push
push
or
pop
xchg
shlb
adc
decl
pop
outsb
dec
mov
ret
lock
jb
xchg
push
ja
xchg
xor
js
add
ljmp
rcr
dec
pop
inc
inc
mov
and
pop
jl
sti
mov
jmp
push
push
sbb
and
popa
aam
mov
push
movb
sub
jb
daa
jo
and
gs
out
lods
lcall
pop
xchg
and
mov
aas
fucom
add
gs
adc
ljmp
mov
push
daa
ret
add
loopne
rcrb
cmp
ljmp
xor
mov
pushf
pop
imul
out
mov
pop
mov
xor
or
data16
imul
and
sub
jle
and
fs
jae
xchg
lahf
pop
das
sar
mov
push
xchg
pop
mov
lods
aad
shll
inc
int
decl
xor
dec
rol
sub
shll
xor
int3
rcr
xchg
sub
call
rolb
mov
mov
xor
cltd
ds
pop
cld
ficoms
shll
jmp
push
sbbl
adc
into
sbb
insb
test
cld
mov
mov
int3
sbb
xor
cmp
adcl
rorb
pop
pop
out
cli
jno
push
xor
leave
push
out
and
jbe
sub
cmp
mov
xlat
mov
and
add
fbld
repz
jle
add
loop
loop
mov
fistpl
test
add
jae
xchg
inc
dec
clc
std
outsb
fadds
notb
add
sub
cwtl
mov
xor
es
scas
xchg
fucomp
popf
xor
stc
xchg
int
jg
out
popf
cli
in
pop
push
in
pop
mov
xchg
mov
cmp
mov
pop
ljmp
jp
mov
out
sub
movsl
lahf
test
dec
fdivp
daa
xchg
lock
mov
sarl
adc
cmc
vunpckhps
dec
pop
aad
stos
sub
ret
mov
ljmp
push
sub
xor
jnp
jmp
movsb
jl
loope
mov
dec
loop
pop
mov
jle
jae
sub
inc
xchg
cmp
add
pop
fdivrl
pop
xchg
insl
pushl
lods
pop
xchg
pop
scas
xchg
and
test
je
adc
sahf
xchg
scas
mov
push
jmp
sub
mov
fcmovbe
xor
mov
or
adc
test
pop
jno
outsl
pushf
xor
fisubs
fnstsw
scas
sub
call
fidivs
jg
mov
int
mov
stc
jno
push
push
repnz
in
repz
lcall
out
push
xor
cmpsb
fisttps
fsts
cmp
ret
outsl
cld
mov
stos
add
ljmp
pushf
movsl
mov
divb
aaa
sub
lahf
xchg
loope
dec
cmp
push
add
inc
mov
insl
add
mov
leave
pop
or
xor
mov
decl
dec
sbb
inc
mov
test
xlat
or
dec
lea
cmp
xlat
mov
incl
cmp
or
jp
sbb
inc
comiss
jbe
jl
enter
sbb
idivl
push
decl
stos
xchg
mov
ret
in
sub
test
cmp
inc
movsb
and
dec
pop
pusha
hlt
xor
sbb
enter
ljmp
push
bound
sub
or
jg
push
int
jmp
out
js
loop
pandn
call
cld
lcall
jbe
xor
cmp
pop
mov
mov
mov
and
call
adc
shlb
mov
jl
mov
fwait
clc
mov
icebp
jnp
mov
and
dec
sbb
pop
cmp
daa
dec
in
cmpsl
fsubp
xchg
aam
lret
out
mov
jecxz
pop
hlt
add
call
pop
cmp
xor
dec
cs
adc
cli
cmpsb
or
ret
in
push
lret
sti
jb
push
dec
add
hlt
out
outsb
lret
xchg
inc
dec
pushf
test
dec
mov
add
call
and
mulb
push
mov
es
cmpsb
ljmp
mov
mov
cli
test
sbb
pop
mov
ret
test
mov
aaa
push
and
or
lret
sub
ljmp
and
mov
mov
sub
cltd
cmc
mov
lcall
cld
pop
std
pop
movsl
mov
adc
mov
mov
sub
mov
out
cli
incl
add
mov
in
and
and
data16
in
jg
dec
or
xor
lock
dec
xchg
mov
lods
popa
stos
rcrl
incl
jmp
add
fimull
lds
repz
inc
shlb
ds
lock
mov
mov
jp
mov
hlt
sub
movsl
xchg
repz
inc
dec
dec
lret
xor
lea
cwtl
inc
fwait
mov
movsl
sbb
add
xchg
mov
ss
out
pop
sub
lcall
pop
stos
jbe
jecxz
cmp
adc
movsl
repnz
add
push
stos
scas
sbb
jle
fdivs
ret
mov
adc
hlt
dec
jge
jp
test
push
inc
shll
subl
dec
repz
call
mov
sub
sub
cmp
dec
scas
adc
nop
add
fwait
push
hlt
call
insb
mov
repnz
jge
stos
fs
outsl
xor
fmul
cwtl
mov
push
hlt
inc
lahf
adcb
aaa
fbld
dec
cmp
push
dec
mov
xor
push
shll
pushf
pop
nop
icebp
jns
mov
sbb
std
dec
sbb
ljmp
cmp
dec
mov
int
xchg
xorps
push
inc
xchg
xorb
and
lret
lock
inc
mov
ficoml
pop
out
jg
mov
cmc
lahf
imul
jbe
push
cs
add
mov
jae
call
xor
mov
dec
cwtl
daa
pop
push
loopne
mov
push
mov
dec
sbb
fiaddl
call
test
sub
sub
push
scas
add
test
out
fidivs
div
lcall
in
add
bound
cltd
jmp
movsb
and
jg
lret
push
call
adc
in
add
fs
popf
rolb
stc
adc
cmp
test
adc
sub
push
add
mov
jb
dec
jno
jno
jmp
pop
imul
call
push
fstpl
pop
mov
stc
push
add
ljmp
mov
add
clts
rcl
mov
mov
sbb
cmp
scas
cli
push
xor
sbb
shl
clc
arpl
mov
movsl
cwtl
scas
and
push
sbb
je
jg
pushl
pop
out
mov
aad
add
mov
mov
pushl
mov
repz
fists
inc
xchg
pop
adc
push
repz
mov
decl
push
mov
ljmp
ss
mov
test
or
mov
ljmp
sarl
pop
and
fwait
pop
aas
cmp
adc
ss
sbb
sarl
push
popa
pushl
rcrb
adc
loop
jae
std
stos
push
addr16
jge
std
sbb
loopne
mov
xchg
cmpsb
arpl
nop
push
dec
stos
in
clc
cmpsl
idiv
call
jecxz
jmp
fwait
aam
or
cmpsb
add
dec
fucom
pop
sbb
adc
lcall
push
pop
sbb
pop
loope
ds
cmc
adc
inc
push
jle
lock
imul
add
inc
and
ljmp
data16
sbb
les
insb
ds
pusha
or
jmp
lods
test
lock
add
adc
movsl
icebp
push
dec
inc
call
hlt
pop
or
dec
loop
fmuls
mov
mov
test
fs
mov
dec
ficomps
jo
and
lahf
push
or
out
int
inc
mov
out
ljmp
stos
aas
imul
fnstsw
pushf
adc
or
orb
pop
arpl
rorl
xchg
jbe
cmp
roll
inc
scas
adcb
mov
fwait
in
xchg
mov
decl
gs
sub
das
adc
xchg
mov
lcall
mov
addb
lea
outsb
jae
fcompl
cs
gs
pushw
outsb
push
pushf
sub
mov
sbb
scas
scas
pop
decb
shlb
add
in
addr16
sbb
ljmp
and
mov
push
mov
mov
xor
jmp
je
roll
je
das
out
sahf
inc
adcb
mov
jnp
inc
xor
rolb
sub
inc
sbb
std
test
add
jnp
sbb
out
decl
nop
fcomp
popf
pop
sub
mov
jae
sbb
sbb
test
ret
push
sbb
out
pop
jmp
xchg
dec
aas
insl
xor
cli
ljmp
or
adc
and
outsb
mov
xchg
xor
mov
dec
and
pop
sub
sbb
lahf
sbb
in
inc
stos
test
pushl
dec
mov
bound
int
sarl
push
adc
pop
jge
mov
and
out
mov
jne
xor
movsb
call
adc
and
inc
jmp
add
add
sbb
inc
cltd
popa
sbbl
mov
ljmp
jbe
aad
ja
jns
pop
lcall
test
cmp
lods
xchg
adc
inc
xchg
cmp
clc
movsl
lcall
jmp
pop
xor
test
outsl
jge
imul
ss
or
and
lods
cmp
mov
mov
and
adc
mov
sbb
fsubrs
dec
das
cwtl
outsl
movsb
lea
lds
or
xchg
dec
movsb
sahf
test
xchg
daa
adc
shrl
dec
cld
insb
decl
in
test
ss
and
fs
and
and
mov
fcoms
leave
xor
mov
or
ds
xorb
subb
call
popa
nopl
mov
adc
sub
test
pushl
jmp
pop
cmc
mov
mov
sbb
pushaw
test
or
adc
test
js
daa
test
jb
xchg
ja
sbb
rcll
or
cwtl
out
push
and
testl
incl
jecxz
push
imul
inc
or
leave
pushw
arpl
mov
stos
push
xchg
sbb
nop
gs
pop
xchg
sub
or
jecxz
and
das
pop
fmuls
cld
mov
xchg
icebp
repnz
adc
xorl
clc
lock
les
adc
dec
or
test
in
xor
das
cli
daa
std
pop
push
and
cmp
popf
imul
jecxz
fcomp
shll
add
decl
lock
icebp
ret
lea
jle
mov
mov
lock
inc
mov
fists
out
ds
xchg
lds
sbb
sahf
jno
lcall
arpl
scas
cli
shlb
push
mov
out
dec
push
pop
js
push
xorl
insl
adc
insl
xchg
mov
repz
fmuls
push
sbb
flds
aas
dec
pop
arpl
aaa
xor
sbbl
sbb
add
adc
sbb
sbb
add
mov
aas
sbbb
in
mov
inc
gs
test
cmpsb
pushl
hlt
ljmp
scas
or
outsb
bound
les
cld
adc
fcoml
or
push
cmc
adc
pop
loopne
inc
or
jecxz
add
xchg
sbb
add
jg
dec
lcall
incl
pop
repz
mov
test
sub
hlt
pop
sarb
decl
dec
sbb
fldl
mov
add
mov
or
stc
nop
sbbl
pop
ljmp
js
inc
js
pushf
shll
jns
xorl
hlt
dec
add
dec
mov
lock
test
imull
imul
mov
lret
jmp
scas
jnp
add
push
dec
lods
sahf
jae
test
add
jo
fisubrs
mov
out
lcall
mov
inc
dec
dec
sbbl
mov
cwtl
sbb
push
push
add
incl
inc
inc
jge
mov
js
sub
or
and
push
mov
fwait
cmp
sbb
aam
jg
imull
mov
cmp
mov
and
repnz
cld
clc
xor
or
addl
mov
scas
sbb
xor
adc
and
jno
sarl
ljmp
xchg
in
andl
jae
test
cmp
rclb
pop
int
les
arpl
pushl
dec
int3
icebp
mov
loop
sbb
psrlw
dec
nop
dec
cmp
sub
incl
xor
xor
and
mov
icebp
xchg
mov
pop
xchg
mov
xchg
pop
sbb
push
lcall
or
testl
push
repz
pop
je
ret
push
adcb
add
lcall
roll
lock
xchg
out
xchg
add
sub
loop
mov
xor
sbb
xchg
pop
mov
xchg
jg
dec
test
mov
aad
insb
sub
and
subl
dec
dec
adc
stos
out
inc
aad
inc
insb
and
add
enter
mov
imul
jmp
ljmp
jbe
cli
mov
xor
cmp
inc
loop
lret
testb
pop
and
jmp
inc
push
stos
fs
mov
addr16
mov
out
xchg
call
notl
push
mov
out
and
outsb
aas
cli
mov
retw
dec
out
ret
adc
inc
xor
stos
xor
pushl
sub
adc
cmpsl
push
rorl
cli
mov
int
adc
popf
mov
stc
in
xchg
out
jg
dec
sahf
xor
iret
xor
and
cltd
gs
or
pushl
cld
int
rclb
mov
xor
push
mov
pop
sbb
dec
pushf
ljmp
movnti
rcl
fsubrl
and
pop
ja
adc
call
fisttpll
dec
icebp
fcmovnb
int
shll
aas
lret
adc
out
fsubs
cmc
call
xor
xchg
mov
pop
leave
jns
pop
je
outsl
push
inc
loopne
jge
mov
decl
cmp
pushf
notl
dec
test
xchg
xchg
ljmpw
leave
addb
pusha
call
cmc
inc
daa
adc
imul
push
ja
fcoml
mov
mov
mov
xor
pushl
xchg
scas
in
and
outsb
mov
fmuls
in
mov
jmp
pusha
popf
pop
add
and
out
fcomip
push
fxtract
jmp
fwait
mov
xchg
xlat
mov
mov
lds
mov
outsb
mov
adc
mov
jo
mov
mov
sbb
sbb
shlb
roll
add
imul
push
cmp
or
out
ja
repz
sbb
jns
jl
mov
jle
add
pushl
mov
int3
add
inc
jo
pop
xchg
insl
loopne
mov
mov
lret
mov
add
dec
add
les
xor
jo
inc
xor
push
cltd
jg
adc
inc
sbb
in
enter
iret
dec
ficompl
pop
cmpb
mov
dec
push
pushl
fsubrs
or
and
xchg
sti
dec
mov
mov
rcr
mov
adc
ja
test
pop
out
out
sbb
mov
xchg
push
hlt
xchg
jge
enter
ljmp
adc
out
stos
ret
xchg
stc
lret
arpl
insl
inc
sbb
outsl
inc
cmc
cld
or
jmp
test
add
cwtl
shlb
push
das
aaa
xor
mov
push
jo
incl
in
fs
fcmovu
inc
aam
in
js
sub
mov
stos
call
in
aam
call
mov
jp
cltd
mov
dec
mov
shll
mov
pop
imul
mov
rcl
xchg
sub
jp
sar
ss
push
mov
movsl
push
pop
pop
lcall
inc
popa
dec
hlt
inc
cmp
je
lock
mov
ja
lock
test
inc
mov
call
dec
xor
or
incl
pop
sbb
sub
pop
imul
jb
cltd
fwait
ljmp
sub
cmp
pop
in
sti
xlat
shll
jae
cmp
and
not
jne
pushf
ja
cld
pop
stos
in
sbb
call
lods
fstpt
adc
or
inc
xor
dec
nop
pop
rolb
fdivrl
mov
cmp
in
dec
decl
fldt
ja
sti
pop
ds
pop
popa
fs
ror
jg
xchg
cmp
fdivp
pushl
xchg
mov
pop
fwait
push
in
aas
repnz
push
cmpsl
inc
movsb
and
insb
icebp
xchg
jg
push
fstpl
push
push
push
mov
jg
out
xor
nop
shrl
push
mov
loope
fisubs
adc
adc
mov
adc
jmp
or
mov
out
push
pop
sbb
cltd
jns
repnz
jnp
addr16
call
loopne
mov
inc
scas
mul
or
mov
push
imul
lcall
lret
ret
adc
cmp
pop
push
jbe
stc
jo
push
cmp
ss
jb
or
pushl
mov
adc
mov
ljmp
aaa
arpl
ficomps
sub
dec
pop
push
repz
dec
pop
ljmp
lcall
shll
pushf
pop
mov
dec
sbb
xor
and
xor
rcrb
jg
call
dec
ret
cltd
mov
dec
cmp
mov
inc
pop
out
dec
adc
lcall
shl
lds
mov
dec
sub
mov
cmp
cmp
and
adc
sbb
push
sbbb
adc
addr16
pop
cmp
idiv
pop
loopne
stc
cwtl
inc
xor
cmp
pop
fdiv
imulb
cmc
popa
mov
push
ds
pop
sahf
lods
xlat
lds
sub
xchg
hlt
pop
xchg
out
fiaddl
pop
sbb
xor
outsl
mov
and
or
sub
shr
lcall
popa
cmpsb
xchg
cmp
xor
sub
jge
add
scas
add
sar
xor
lods
inc
push
mov
lcall
mov
in
cmp
test
stos
xchg
jp
adc
dec
add
pop
decl
xchg
sub
mov
rclb
int
xor
jmp
das
icebp
pop
incl
scas
sahf
hlt
out
sub
jbe
mov
je
in
imul
inc
pushl
stos
push
fmulp
test
jl
mov
inc
jp
push
add
cs
mov
ja
cmpsb
pop
rclb
ret
cmp
out
out
ror
test
shl
mov
sub
loopne
adc
loope
decl
inc
pop
mov
xchg
cmp
or
push
xorl
mov
aad
jns
mov
hlt
es
out
pushf
rcl
push
adc
insl
cmp
call
adc
mov
pop
and
ljmp
ret
pusha
jl
sbb
adc
mov
cmp
into
loope
cltd
or
dec
jge
ret
ljmp
jae
sbb
push
mov
mov
add
cmp
lea
push
icebp
lock
jp
mov
mov
repnz
out
mov
pop
sub
enter
bound
js
xor
jmp
imul
iret
mov
push
cmpsb
or
outsb
and
sbb
xchg
xchg
mov
fisubl
faddl
mov
sbb
xchg
mov
daa
rclb
xlat
pusha
ljmp
push
mov
and
mov
and
ljmp
out
jmp
mov
dec
cmp
decl
adcl
mov
adc
xor
jl
aad
add
inc
es
mov
mov
fs
lods
mov
test
xchg
mov
pusha
sub
cld
jg
lahf
mov
push
mov
cmp
repnz
jno
xchg
mov
pop
pop
imul
decl
dec
push
scas
mov
stos
mov
pop
sub
cmp
daa
push
mov
inc
dec
and
in
stos
inc
jbe
out
mov
sahf
js
pop
dec
jbe
cmp
jbe
add
incl
push
inc
lea
scas
push
leave
push
aam
insb
aas
inc
or
dec
popa
xchg
sub
pop
dec
xchg
push
add
xlat
lret
ljmp
xchg
enter
shl
mov
push
out
fstps
insb
inc
mov
mov
jmp
lcall
in
add
sbbb
inc
adc
cmp
lret
sbb
mov
loop
mov
test
out
and
xchg
and
add
or
inc
or
or
sub
push
fisubs
popa
int
insb
daa
inc
lret
and
adc
cmpsb
inc
decl
mov
push
test
xor
cld
outsl
rcll
shlb
xor
dec
sbb
and
cwtl
stos
or
sbb
test
and
lcall
sahf
inc
xchg
imul
sti
leave
out
daa
mov
pop
icebp
cli
js
sbb
call
inc
xor
xchg
cmpsb
inc
mov
testb
xchg
maxps
adc
gs
aad
inc
add
sbb
push
scas
jl
decl
jmpw
test
out
push
xchg
jl
xchg
mov
insb
push
xchg
jne
lods
cwtl
in
loop
lcall
jmp
inc
inc
jb
xor
xchg
cld
call
jp
sub
int
pop
call
xchg
inc
fcompl
add
scas
push
mov
jns
push
adc
jmp
pop
mov
xchg
je
push
cmp
in
or
test
mov
int
pushl
jae
scas
mov
nop
and
mov
andb
mov
and
ret
jp
es
mov
cmp
movsl
jns
mov
push
rorl
sbb
sysenter
sub
or
lea
jo
pushl
sbb
cli
lea
inc
test
imul
xchg
xlat
cmp
sbb
int
mov
iret
in
notl
xor
sub
shlb
xchg
cmp
js
cmpsb
test
scas
imul
push
jnp
inc
in
adc
pop
sbb
cmp
outsb
push
nop
outsb
mov
lds
fwait
cmp
jmp
jns
bound
add
or
mov
add
fs
aas
std
dec
sbb
inc
in
arpl
aas
repnz
and
into
out
arpl
int
test
lcall
xor
js
mov
in
icebp
cltd
cli
into
jns
data16
hlt
mov
shl
xor
loope
mov
inc
incl
andl
dec
cmpsl
dec
inc
jle
test
cli
lods
or
repz
lahf
push
into
lcall
push
add
xchg
cmpsb
mov
mov
fisubl
aaa
xchg
mov
inc
xor
aam
sbb
xor
cmp
incl
inc
stos
xor
stos
xchg
icebp
mov
ret
pop
jmp
jmp
es
call
adc
pop
aam
addr16
inc
jnp
pop
imul
loopne
mov
pop
pop
in
test
sbb
lods
aaa
mov
sbb
lcall
je
dec
icebp
mov
sub
mov
cld
inc
push
lcall
ljmp
cmp
ljmp
es
mov
add
xor
lds
or
sbb
or
sub
push
ss
dec
fisubrl
or
and
das
mov
std
addr16
call
scas
in
inc
push
cmp
push
cmp
cmp
mov
add
insb
cmc
ret
leave
pop
jp
stos
call
cmp
mov
stos
inc
mov
inc
mov
lahf
adc
ljmp
loop
jno
mov
je
fsubrp
enter
dec
cs
push
inc
clc
imul
jmp
nop
jmp
data16
xchg
mov
add
xlat
aad
fiaddl
insl
std
pushl
or
fs
and
cmp
jecxz
imul
clc
test
fnstcw
or
jmp
xchg
pop
add
lret
mov
jg
testb
test
in
mov
mov
sub
decl
and
or
adcl
push
jecxz
nop
lods
scas
or
mov
pushl
call
lds
popa
and
leave
mov
and
ud0
mov
mov
xor
stos
lods
cmc
out
insb
cmp
mov
out
aad
popf
decl
cmc
out
jecxz
push
or
dec
arpl
sub
fidivrs
fists
fstpl
push
dec
xor
mov
pop
lahf
call
std
mov
stos
dec
mov
fwait
lods
adc
dec
pop
das
add
call
lcall
mov
movsl
or
lcall
jge
jl
cwtl
xor
and
and
add
sbb
inc
ss
push
das
mov
call
je
adc
hlt
dec
pop
pop
xor
pusha
sub
into
jb
mov
jmp
jl
add
cmp
cli
push
pusha
shll
frstor
cli
out
dec
lahf
pop
mov
push
adc
movsl
cmc
xchg
gs
popa
andb
fsubrl
test
adc
add
inc
stos
sti
call
pop
inc
pop
inc
inc
loope
fisubl
stc
sub
push
jecxz
lock
sbbb
xchg
jno
hlt
dec
sbb
call
fisubl
jns
mov
pop
mov
bound
inc
mov
mov
sub
testb
inc
sarl
mov
inc
mov
test
inc
shr
mov
dec
mov
decl
mov
in
jmp
cmpb
push
leave
cmp
add
in
stos
cmp
jb
xchg
test
cld
cs
inc
fiadds
push
dec
lods
adc
jae
cmp
mov
add
xor
call
int3
int
push
mov
sub
pop
iret
cmpsl
add
ds
push
or
in
push
pop
xor
pop
dec
call
andb
xor
push
sub
lcall
scas
fcmovnbe
or
sub
in
sbb
jns
inc
out
into
popa
faddl
out
popa
mov
or
lcall
std
inc
lahf
dec
mov
mov
sbb
sub
inc
or
lret
clc
push
and
aad
cwtl
ud1
psubd
adc
lret
pop
lods
lahf
mov
cld
incl
dec
ljmp
jg
and
jg
add
xor
xor
or
pop
movsl
jnp
scas
mov
mov
sub
pop
pop
jecxz
xchg
push
rcr
pusha
add
out
movsb
push
cmc
or
jg
stos
enter
pushl
jg
fs
cmpsb
or
mov
push
xor
or
sbb
lcall
outsb
sbb
test
popf
sbb
pusha
jns
xrelease
adc
sbb
mov
imul
in
sub
mov
jp
add
sbb
mov
movsb
add
ljmp
sub
xor
fcoml
sbb
adcb
jg
call
push
fisttpll
ja
xor
sti
mov
push
sub
adc
pushf
incl
fs
sub
push
jb
sti
mov
push
push
decl
fdivrl
mov
in
jno
mov
nop
xchg
and
pop
and
call
push
lock
mov
dec
lods
or
daa
enter
shl
mov
outsl
push
adc
pushl
lea
sub
jge
loop
jmp
aam
cmpsl
jmp
ljmp
or
ljmp
cwtl
inc
xchg
movsb
enter
decl
sbb
xchg
je
xchg
mov
roll
sub
rorb
mov
cmpsl
xchg
jns
cltd
dec
inc
lret
bound
loope
or
adc
lcall
lcall
or
add
mov
ljmp
scas
iret
add
add
xchg
rcll
mov
pushl
je
push
pop
fisttpll
mov
popl
out
xchg
int
pop
insl
test
mov
pusha
inc
outsb
sub
shrl
inc
in
jle
pop
fists
sub
scas
dec
ficoml
push
out
xor
cmp
test
jmp
inc
and
push
push
pop
and
sub
testb
outsb
mov
jmp
sbbl
dec
dec
test
and
pop
add
lahf
xchg
xchg
negl
sarl
push
ja
ljmp
inc
sahf
push
inc
mov
dec
push
dec
out
imul
mov
std
push
aam
xchg
out
xchg
sub
xchg
stos
dec
sbb
push
sti
jp
ss
xchg
mov
mov
int
dec
bound
mov
mov
cmpsb
xor
iret
test
iret
fldl2e
pop
into
pop
or
or
push
lods
xchg
adc
inc
call
daa
sbbl
inc
outsb
sti
icebp
inc
lods
or
in
lods
add
in
les
fwait
push
inc
cmpsb
jnp
ljmp
ljmp
xchg
push
test
scas
addr16
xchg
cmpsb
push
incb
ret
ja
cli
or
call
mov
jnp
ss
lock
push
xchg
add
decl
dec
out
shlb
outsb
in
xor
lea
xchg
test
ljmp
cmp
dec
adc
mov
sbb
in
or
sub
scas
mov
subb
sbb
icebp
mov
push
jne
nop
mov
lds
inc
add
enter
cmp
mov
sarb
jns
and
mov
mov
cmp
into
cmp
fidivrl
fwait
dec
cmpsb
xchg
les
std
decl
sti
add
fwait
pop
push
push
jmp
out
rorb
outsl
rol
cld
sub
cli
pushl
pop
sub
mov
inc
lret
incl
cltd
xchg
jnp
call
add
ljmp
test
adc
jnp
mov
jmp
jnp
in
ret
mov
movsl
push
sbb
ret
push
dec
mov
lcall
imul
rcrl
add
lcall
jns
in
faddp
sbb
mov
mov
inc
clc
or
popa
pusha
sbb
dec
mov
incl
mov
adc
sbb
aaa
mov
aam
push
ret
daa
inc
dec
in
subl
jb
roll
xor
and
rol
mov
mov
loopne
test
std
leave
xchg
std
add
mov
or
divb
cs
add
sti
sub
ja
push
ja
cs
inc
out
scas
cs
jae
pushl
lret
data16
cmpl
mov
cmp
jecxz
mov
mov
loope
lcall
pop
pop
test
xorb
ret
stc
in
aaa
jmp
adc
push
fsubl
or
std
cmpl
cmc
ss
decl
mov
in
fisubrl
fs
inc
mov
pusha
jmp
jle
ljmp
ds
push
dec
aas
in
mov
aaa
es
jbe
mov
mov
stos
xor
sbb
sbb
sub
pop
push
fnstenv
pop
and
jo
das
sahf
lcall
xor
dec
bound
stos
in
lds
jbe
jmp
add
gs
jae
decl
cmpsb
and
cmpsb
mov
cmp
xchg
and
ja
ret
prefetcht2
pushf
int3
push
push
enter
call
xchg
lahf
jo
outsl
mov
adc
cmp
aas
nop
cmc
into
int
out
out
cmp
bnd
insb
inc
shll
sbb
cmp
iret
xor
mov
in
and
shrb
outsb
inc
or
mov
and
lea
sub
subb
cmpsb
push
dec
inc
push
jmp
ret
stos
mov
call
lcall
push
in
jge
dec
into
or
das
dec
sti
jnp
lds
in
sbb
and
fisttps
pusha
push
mov
out
std
inc
mov
mov
cwtl
arpl
leave
inc
ja
add
mov
or
lods
subb
push
mov
das
es
push
xchg
mov
in
enter
xchg
add
or
inc
jo
iret
mov
mov
adc
sbb
pop
mov
xor
fstpl
add
xchg
push
lods
add
cli
cmp
or
repz
cld
push
jnp
mov
adc
and
orl
pop
icebp
or
iret
dec
outsl
test
fstpt
mov
or
jmp
insl
pusha
fldt
and
adc
movsb
or
push
loopne
mov
lcall
fcom
loop
xchg
inc
pushw
dec
fmul
and
cmpsl
xchg
ljmp
xor
push
std
mov
outsl
or
jns
mov
add
xor
and
jb
repnz
cmp
jmp
dec
sti
ret
stos
mov
jp
lods
push
mov
adc
pop
mov
imul
test
or
pushl
fists
call
adcb
repnz
mov
ljmp
iret
push
jno
gs
in
xor
inc
sbb
ljmp
jb
or
jb
cmp
fidivs
mov
or
pop
fstpt
fcomip
mov
inc
inc
scas
push
lods
movnti
pusha
pop
cmp
inc
fsubl
je
and
sbb
call
or
repnz
int3
or
imul
jo,pn
test
lcall
cwtl
and
mov
sub
aam
mov
xchg
dec
fldcw
mov
call
and
pushl
adc
mov
add
gs
test
mov
incl
nop
stc
movl
rcll
loopne
jecxz
icebp
cmp
inc
jo
fwait
stos
aaa
popf
mov
loop
jmp
sub
mov
ss
gs
sarb
adc
mov
int3
mov
mov
add
sbb
mov
cmp
rorl
dec
mov
lock
call
loopne
repnz
cld
inc
insb
pop
mov
mov
test
ljmp
out
jno
out
inc
fmuls
clc
mov
fidivrl
cs
inc
adc
ja
xchg
insl
mov
stos
cmp
decl
lock
stc
pop
stos
add
rcrb
out
push
aas
ror
push
xor
out
jmp
enter
ret
call
jle
pop
jns
sbb
outsb
mov
lods
cmc
sub
push
or
incl
rorl
push
fiaddl
aad
imul
mov
nop
popl
xorb
mov
pop
mov
fbstp
pop
push
sub
pop
movsl
mov
dec
test
fdivs
ret
mov
std
ljmp
aam
clc
push
dec
mov
pushf
add
add
das
testb
jg
add
cmp
aaa
push
mov
pop
nop
out
pusha
insl
mov
or
inc
push
add
pushl
movsb
mov
jnp
int3
pushl
push
cmp
shll
xchg
insl
ss
loop
gs
jmp
pop
std
cs
outsb
push
adc
pop
int
dec
in
dec
ret
ljmp
push
shl
inc
sub
jl
lds
ror
push
insb
or
les
adc
in
mov
pop
fs
call
pushf
js
or
js
and
lret
sbb
xchg
ljmp
andb
aas
mov
xrelease
fldl
mov
rolb
loop
lahf
pop
lods
loope
aad
incl
sbb
dec
ja
mov
and
cmp
adc
mov
xchg
test
call
xlat
stos
sbb
mov
aas
sbb
ret
pop
cs
jmp
sbb
jmp
sub
dec
mov
rorb
dec
lods
xor
pop
ljmp
enter
test
call
adc
xor
into
add
mov
fiaddl
in
pop
rcrb
cmp
push
mov
gs
sbb
fsubrl
clc
push
mov
aaa
rclb
cmpsb
cmpsl
inc
sbb
incl
sbb
imul
shl
or
jb
jmp
mov
ljmp
orb
pop
loopne
insb
cmpsl
and
inc
push
adc
inc
popa
test
and
sar
pushl
cld
xor
jbe
int3
int
xlat
or
int3
add
enter
xor
mov
adc
mov
call
and
enter
fidivl
mov
js
jle
pop
shrb
cli
lock
jmp
xor
jle
je
jns,pt
iret
hlt
loope
in
pop
scas
roll
decl
mov
cli
andl
dec
jae
xor
sbb
xchg
lcall
sarb
and
mov
inc
repz
jl
mov
call
add
jnp
in
xor
or
inc
xchg
or
bound
sahf
push
out
sar
pushl
push
inc
lods
fwait
mov
push
push
pop
jmp
mov
test
or
xchg
jmp
rcrb
sbb
scas
cmp
aaa
mov
jg
hlt
hlt
jno
sub
jnp
pop
jb
addr16
fcomps
pushf
out
lcall
push
cmp
inc
clc
xor
cltd
jle
cmp
adc
cmc
insb
pop
iret
popa
push
stc
cmp
adc
pushl
push
pushf
xor
sar
movsb
adc
xor
out
mov
mov
dec
ljmp
cmc
daa
pop
inc
xchg
sbb
popa
adc
fmull
fistl
std
mov
xchg
jmp
into
inc
fcmovnu
or
repnz
adc
shrl
sbb
fbstp
push
mov
lahf
push
cwtl
inc
jg
and
aad
mov
jg
cs
fcomip
inc
xchg
pop
push
mov
adc
or
pop
inc
xchg
mov
adc
xchg
jmp
cmp
mov
xchg
and
adc
mov
mov
mov
icebp
mov
adc
imul
mov
arpl
ja
push
push
inc
sti
pop
fcoms
fs
cmp
adc
ljmp
ficoml
aaa
mov
pushf
leave
notl
inc
pusha
test
xchg
adc
test
divl
call
sbb
ds
jg
mov
lea
jnp
cld
adc
sbb
in
enter
sarb
fstpt
or
jne
cmp
cmovs
jmp
out
sub
jbe
fwait
aaa
lret
xor
pop
mov
inc
jle
ss
mov
jbe
and
push
lcall
push
mov
mov
aaa
loopne
sub
xorl
lcall
cltd
or
dec
lods
xor
cmc
ljmp
loope
fwait
inc
or
mov
bound
lds
xor
movsb
inc
mov
inc
adc
pushl
jns
cmpsb
xchg
cwtl
shlb
orb
sub
cwtl
mov
sub
mov
mov
call
xchg
sub
idivb
xchg
xchg
sub
cld
enter
in
fwait
jmp
jg
jns
movsb
out
sbb
rclb
arpl
lcall
adc
pushl
push
pop
cwtl
xor
cmpl
popfw
pop
xorb
imulb
loope
xchg
adc
lcall
and
dec
ret
test
xor
and
adc
jg
sti
pop
mov
mov
push
jmp
setno
call
mov
jmp
push
out
add
call
pop
mov
push
push
not
arpl
out
lcall
sarl
and
rcrl
cltd
nop
test
jno
adc
ret
cmp
cli
jns
enter
cmpb
into
cs
sbb
test
pop
xor
outsl
data16
push
aas
push
sbb
or
cltd
lock
aad
inc
push
jmp
scas
decl
in
repz
aad
xchg
inc
mov
adc
mov
add
pushl
and
pusha
mov
movsl
and
andb
xor
jmp
imul
xchg
int
movsb
and
mov
insb
adc
addl
cmp
test
push
push
xor
dec
cld
push
aaa
or
mov
adc
cld
jmp
xlat
cli
aad
imul
sub
inc
pop
cmp
and
mov
adc
stos
pop
cld
pushl
sbb
mov
dec
in
in
icebp
cmp
add
cmpsl
cmp
lcall
sub
nop
push
rol
jle
adc
xor
adc
jge
outsl
clc
popa
lods
pop
lock
add
push
xchg
inc
mov
sub
push
inc
pushl
adc
jmp
adc
testl
dec
scas
jne
mov
lea
jns
mov
mov
and
addr16
cmp
inc
xchg
add
jmp
adc
mov
cmpsl
adc
popf
mov
loopne
lock
imul
add
fistpll
cmp
cmp
push
mov
ja
ds
sbb
and
xor
aas
aas
mov
rcl
dec
xor
decl
scas
aaa
out
sbb
sbb
dec
sub
hlt
or
in
sbb
fcomip
gs
jo
pop
cmp
xlat
sub
pop
add
jnp
jb
repz
decb
dec
mov
and
cmpsl
int3
loop
std
call
add
pop
xor
inc
int3
jle
mov
pop
in
ret
mov
mov
sub
sbb
mov
hlt
movsb
push
cmpsl
in
ss
add
pop
stc
push
jmp
inc
gs
add
out
ret
int
movsb
daa
incl
js,pn
mov
mov
sbb
mov
mov
pushl
pop
push
push
sti
push
insb
fsts
mov
push
leave
mov
jns
cmpl
decl
scas
bound
ja
mov
jnp
aad
mov
aad
inc
cmp
sbb
mov
mov
fs
imul
adc
fwait
test
mov
inc
incl
cld
cmp
jae
cmc
scas
imul
cli
add
cmp
jecxz
incl
test
daa
jns
out
mov
cwtl
add
imul
out
pusha
or
dec
xor
pop
jmp
loopne
aaa
insb
mov
add
pusha
insb
jg
das
mov
inc
js
fisubrl
loop
sub
jne
sbb
cmp
or
nop
adc
push
repz
scas
jo
btr
imul
sub
mov
add
imul
call
roll
adc
mov
sub
pop
push
fcompl
incb
pusha
ljmp
or
inc
xchg
lods
std
addl
arpl
ret
xor
or
xchg
mov
ljmp
nop
dec
jmp
les
jge
js
mov
mov
sub
stos
jmp
or
mov
jns
sbbl
cld
xchg
std
mov
sbb
aad
test
negb
mov
xor
inc
inc
aam
sahf
ds
fistpl
ljmp
nop
or
decl
or
xchg
xlat
or
gs
add
lods
jmp
adc
leave
test
outsb
lods
test
int
stc
or
nop
pop
lea
mov
mov
jl
outsl
cmpsl
idivb
mov
test
mov
in
push
in
ds
ds
push
jbe
test
out
cli
jmp
jbe
and
in
sti
or
ljmp
lcall
decl
jecxz
pop
push
dec
push
jbe
popf
adc
push
inc
pop
ret
cmp
incl
mov
adc
movsl
mov
decl
mov
add
cltd
fsubrl
mov
dec
lcall
adc
jmp
fidivrl
lds
rclb
cmpb
mov
fistpll
push
scas
and
sub
test
stos
pop
cmp
xchg
lds
ljmp
or
lds
xor
rcll
and
out
or
inc
jp
xchg
fdiv
in
lcall
loop
or
jmp
jno
fstpt
cmp
cmpsl
pop
test
xchg
icebp
leave
cmp
pandn
ljmp
movsl
incl
pop
scas
insl
movsl
cmp
in
pop
inc
mov
pop
idiv
call
push
mov
add
idivb
fbld
rolb
ficomps
pushl
mov
xchg
scas
in
leave
out
xlat
xor
js
sahf
hlt
aaa
shr
in
xchg
stos
incl
mov
gs
adc
out
sti
clc
pop
ss
cltd
sti
or
out
inc
xchg
dec
dec
mov
ljmp
cmp
ds
jne
or
sub
movsb
push
iret
push
push
sub
xor
lret
imul
xchg
jne
jns
jecxz,pt
adc
pop
pop
push
in
out
sbb
fisttps
mov
into
pop
fisubs
sbb
xor
adc
xchg
hlt
movsl
ja
sub
mov
pop
les
mov
fcmovnb
lret
incl
and
in
mov
jns
or
divl
pusha
orb
loope
pop
and
or
dec
xchg
ljmp
cli
add
cltd
cld
nop
in
or
cmp
mov
mov
adc
call
loopne
sti
lock
mov
iret
inc
sub
pop
scas
int
nop
loope
lcall
popa
sub
daa
das
aaa
sbb
iret
pop
cs
mov
clc
movsl
sbb
imul
cli
decl
bound
and
scas
mov
or
sub
xchg
xchg
ljmp
nop
mov
aas
xlat
pop
fdivr
sub
or
lods
cmp
push
enter
lods
clc
in
addr16
scas
clc
ja
int3
jg
jmp
int
imul
call
xchg
sub
ja
pop
cmpsb
rolb
pop
and
imul
jg
and
sub
hlt
push
scas
cmc
lods
mov
test
push
mov
jmp
fisubrs
mov
jecxz
xor
jbe
call
jns
call
loopne
cmpsb
mov
dec
lret
fwait
not
add
aaa
push
gs
or
lcall
xor
dec
sub
shlb
adc
jg
cmp
test
inc
push
dec
mov
jg
jmp
add
sbb
xchg
jo
mov
add
incl
jg
divb
add
lret
or
xlat
pop
push
fs
stos
decl
mov
or
iret
lret
xchg
movsl
inc
dec
mov
in
mov
lcall
inc
pop
inc
subl
test
test
out
ljmp
data16
push
cmpsb
cmpsl
lcall
sub
push
dec
movsb
sahf
adc
inc
mov
ret
mov
scas
xchg
pop
add
icebp
mov
adc
cmp
adc
mov
call
scas
mov
cmp
inc
cmp
sbb
dec
xor
cmp
jge
mov
adc
in
arpl
adc
pop
add
adc
push
sbb
mov
sti
fcompl
adc
call
mov
mov
fidivs
push
mov
push
outsl
cmp
lcall
adc
shrl
adc
out
sbbl
push
fistpl
dec
push
bound
jne
xchg
cmpb
fcomip
mov
xlat
test
rorb
xor
insb
dec
movsl
mov
loope
pushl
bound
xorb
in
sub
mov
rolb
jmp
fwait
out
sbbb
and
incl
sub
push
movsl
or
inc
std
push
xor
popa
xlat
inc
sti
jge
dec
sbbl
xrelease
decl
lods
jne
aas
icebp
pop
sub
mov
addr16
mov
aad
jecxz
jbe
mov
pop
sub
cmp
ss
jge
nop
mov
mov
pop
stc
inc
ret
push
stc
xor
jae
push
xchg
mov
push
fmul
test
jno
xchg
enter
loop
jg
decb
pop
call
pop
ljmp
push
sti
lcall
jmp
cmp
stos
mov
mov
clc
clc
call
dec
xchg
rcl
sbb
pop
xor
mov
xchg
or
jae
jmp
jmp
pop
popfw
xchg
mov
cld
jno
pop
xchg
ja
mov
pop
xchg
push
pushw
pop
xor
mov
mov
mov
dec
add
pop
cwtl
cmp
ljmp
pop
mov
pop
xchg
mov
fwait
sar
mov
lret
jmp
sub
iret
cmpsl
ja
addr16
xchg
daa
or
push
outsb
push
mov
fwait
movsl
push
cmp
mov
push
lods
int
in
cwtl
inc
mov
mov
add
lods
outsb
sub
adc
mov
in
jbe
inc
mov
mov
inc
das
mov
imul
cli
loop
add
pop
icebp
mov
test
dec
idiv
sbb
mov
and
inc
into
sub
call
push
cli
ficoms
loope
cli
pop
sub
addr16
sbb
and
sub
jnp
push
push
sub
test
out
jne
mov
sub
rcrb
sbb
fbld
mov
ret
mov
pop
lock
jno
and
fsubrs
pushl
jg
ss
push
sub
cmp
xor
daa
loopne
pusha
xchg
aaa
adc
dec
mov
mov
sbb
push
int
push
popa
lock
xchg
sub
jg
inc
std
pop
adc
lret
lods
push
pushf
jp
push
cmp
stos
leave
cmp
mov
xchg
or
push
dec
sub
add
popa
mov
ljmp
xchg
xchg
outsl
lods
mov
fisttpl
mov
test
mov
inc
xor
call
and
movsl
std
add
cmpsb
jge
cmpsl
loopne
outsb
cmpsb
mov
jnp
enter
lcall
fdivrs
call
jge
repz
sbbl
pushl
mov
jae
inc
outsl
out
mov
cmp
movsb
lcall
mov
push
or
test
cmpsl
insl
call
xor
mov
loope
std
mov
mov
rcrb
ds
scas
sbb
and
cmpsl
sahf
cmp
mov
mov
mov
xchg
lahf
inc
and
mov
jae
jl
cmp
out
in
push
mov
ret
pushl
cmpsl
mov
testl
mov
pop
repnz
inc
daa
pop
jp
inc
xor
cmp
fsubs
or
in
add
packsswb
lcall
les
iret
lock
mov
jg
lcall
xorl
pop
push
fildl
andb
mov
xchg
push
adc
gs
fcomip
pushf
mov
push
ljmp
xlat
in
xchg
push
gs
adc
jle
mov
int3
hlt
insl
pop
imul
call
cs
lahf
mov
outsb
and
incl
popf
lea
and
aam
sbb
and
pop
cmovge
leave
jge
cmp
imul
cmp
imul
or
xor
dec
or
cmp
popf
cs
gs
xchg
mov
push
dec
lahf
add
cwtl
nop
push
jle
adc
call
lahf
ret
incl
cmpsl
das
sahf
data16
aaa
pop
test
xor
nop
shll
cmp
xchg
aad
js
xor
cmp
inc
fdivl
pop
fldl2t
mov
fiaddl
mov
movsb
mov
shll
jmp
test
out
fistl
xchg
push
mov
sub
fucomp
pop
cmp
ljmp
xlat
dec
pop
jmp
mov
js
ficoml
int
pop
dec
cs
pop
scas
ret
call
xlat
sbb
cwtl
mov
mov
mov
dec
jne
pop
test
ja
aad
mov
pushl
and
pop
aas
scas
stos
add
and
add
sub
jle
aad
adc
clc
ficomps
sar
call
pop
inc
pop
sbb
add
lahf
cmc
pop
stc
sbbb
ror
ljmp
dec
mov
and
cmp
pop
mov
jle
jg
mov
icebp
mov
cltd
jmp
cmp
mov
jo
into
fisubrs
xchg
jmp
shlb
sub
es
mov
push
adc
jmp
fwait
mov
test
fwait
stos
test
mov
jmp
js
incl
out
stos
pusha
lahf
cmpsb
clc
out
jg
push
push
leave
pop
rcrl
jmp
pushf
in
clc
repz
icebp
xor
xlat
adc
clc
movsb
dec
dec
repz
shr
pop
and
sarl
js
ljmp
out
lock
pop
jnp
lods
in
push
ret
cli
pop
movsb
mov
movsb
lea
fadds
dec
insb
fs
push
fs
mov
mov
shll
je
decl
nop
js
xchg
inc
cmpsl
sub
dec
scas
int
sar
incl
ja
xchg
sub
inc
sahf
ret
nop
mov
jl
push
in
ljmp
push
sub
xchg
push
ja
dec
out
pop
addr16
insb
cmp
sub
rolb
rcrl
xadd
push
out
adc
pop
insl
lahf
nop
std
pop
incl
or
cmp
lods
out
or
icebp
or
popa
mov
jle
iret
sbb
cld
xchg
call
std
add
pop
sub
and
sbb
dec
cmp
mov
clc
sub
jg
cmp
cmc
or
fildll
sub
xor
xor
fnstenv
rcr
ljmp
add
out
cli
scas
imul
jmp
xchg
out
in
push
xchg
xchg
loop
xbegin
cmpsl
jecxz
ficompl
aam
lret
add
and
and
fstl
pop
icebp
push
cmpsb
dec
xchg
je
xor
scas
mov
out
mov
cmp
xchg
jmp
shll
sub
mov
mov
insb
aas
test
stos
jnp
adc
aas
inc
jl
out
sbb
jmp
sahf
mov
jbe
pop
lds
fcmove
push
arpl
pushl
jmp
pop
mov
cmpb
clc
hlt
jg
int3
bound
cltd
outsl
or
adc
jmp
mov
fiaddl
shlb
ds
and
dec
xchg
xor
call
incl
lahf
mov
cmp
xchg
jl
cmp
or
or
movsl
notb
jmp
inc
int
dec
dec
int
xchg
inc
fstpt
mov
push
add
fnstsw
sub
clc
dec
incb
aaa
xor
mov
add
clc
or
fimull
shrl
adc
pusha
cmc
js
testl
lods
test
leave
dec
sahf
int3
xchg
pop
lret
decl
dec
test
sub
fistpll
outsb
lds
lahf
daa
fnstcw
pushl
scas
movsl
jnp
push
xchg
xlat
xor
mov
insl
lcall
call
mov
loopne
in
mov
je
push
or
sbb
ret
sub
pushl
sub
pusha
rolb
push
aaa
jo
lret
insb
js
dec
jg
pop
sub
scas
fists
call
cwtl
stc
loopne
in
sbb
sarb
pop
cmpsl
aas
add
adc
movsb
fcomip
fsts
push
or
sbb
leave
notb
test
add
ljmp
dec
mull
xchg
xchg
lret
mov
lds
and
ret
mov
lcall
sbb
fwait
test
arpl
stos
mov
ficoml
gs
push
jge
in
pop
xor
cmc
push
push
mov
inc
pop
xchg
mov
or
test
pop
push
test
lcall
in
xor
xor
out
push
dec
or
xchg
test
decb
scas
pop
leave
jg
mov
lret
dec
out
into
jl
movsl
sbb
shrb
adc
sub
arpl
inc
rorl
xchg
mov
push
xlat
push
or
popa
mov
and
xor
scas
pop
cmpsb
jmp
ljmp
dec
mov
push
clc
mov
add
pop
mov
or
pop
xchg
dec
and
faddl
cltd
cmp
pushl
xchg
gs
ret
hlt
rcrb
pop
xor
jb
arpl
cmp
iret
mov
xorl
and
lods
sbb
leave
je
leave
in
push
push
je
cltd
aam
and
call
push
in
sbb
ret
enter
and
lcall
aas
mov
addl
neg
add
mov
pop
pop
push
data16
xchg
nop
idivl
fmul
popa
xchg
lret
cmc
pop
inc
cmp
inc
stos
in
xlat
rorl
test
outsl
test
cmpsb
lcall
jo
ja
ljmp
div
cmp
lcall
mov
lea
jmp
mov
fstl
orb
hlt
incl
pop
dec
jbe
mov
shlb
mov
push
orl
add
js
inc
push
int3
ljmp
aas
pop
test
add
and
sarl
addr16
aad
push
cld
std
dec
stos
decl
cmpsb
pop
popa
add
int3
mov
leave
cld
aaa
hlt
mov
test
clc
insb
lock
decl
pop
cli
lahf
dec
test
rol
std
push
fldl
sbbl
jecxz
or
jmp
and
jecxz
jo
repz
inc
jge
pop
nop
in
pusha
pop
sbb
fcmove
xor
in
pop
dec
fldenv
aas
sbb
imul
push
mov
js
out
add
fnstcw
or
mov
jo
sbb
lods
pushf
push
jmp
in
out
sti
jmp
mov
outsl
cmp
scas
out
xchg
cmc
in
loopne
lcall
stos
call
out
push
out
popa
dec
push
loop
cmp
jp
jbe
loopne
data16
inc
cmp
jb
mov
lds
pop
mov
inc
sbb
mov
dec
in
es
fcoml
or
subb
xlat
pop
in
nop
mov
repnz
mov
leave
movsb
xor
imul
adc
repnz
inc
pop
jbe
cmp
push
dec
xchg
dec
mov
cmp
add
roll
cmpl
adc
ljmp
cli
test
mov
cld
adc
jle
fs
ljmp
cmpsb
lea
test
dec
ljmp
cmp
xor
pop
mov
dec
sbb
stos
sbb
mov
pop
pop
ds
fisttps
jge
jle
push
lcall
jbe
xchg
pop
ret
sahf
adc
imul
lds
mov
xor
push
adc
pop
xchg
sbb
nop
add
cltd
pop
icebp
pop
cld
divb
mov
das
in
in
add
or
lret
iret
jg
movsl
adc
sub
jne
ljmp
ljmp
ja
lret
inc
and
bound
add
fs
pushl
sub
stos
inc
ja
imulb
ret
xor
fistpl
insl
mov
fdivl
test
xlat
pop
daa
cmp
in
mov
sahf
xchg
pop
adc
push
and
adc
cmp
ljmp
mov
add
pop
enter
out
rcrl
pushf
loop
fucomip
and
xor
pop
out
jns
sbb
mov
dec
ljmp
int
pushf
cltd
xlat
icebp
sbb
lds
imul
sub
repnz
or
jmp
add
jmp
push
mov
test
add
jmp
loope
subl
stc
push
arpl
testb
push
push
push
std
mov
xchg
fs
push
pop
add
pop
and
inc
adc
ficoml
ljmp
dec
hlt
xchg
loop
js
pop
jmp
jmp
test
push
decl
xchg
pop
cmc
and
inc
hlt
and
ss
lods
out
pop
mov
mov
decl
adc
pop
lret
jl
movsl
cmpsl
add
jb
jle
sub
shlb
clc
ljmp
push
or
into
clc
jmp
xor
sbb
xor
out
jb
out
jno
dec
mov
icebp
inc
call
sub
mov
ljmp
mov
sbb
shr
mov
xchg
sub
xor
jl
out
inc
sbb
sbb
jnp
jge
xor
fisttpl
pop
cmp
ss
stos
adc
in
lgs
xor
lcall
push
mov
lds
xchg
xchg
jg
pop
dec
js
ja
outsl
or
cmp
xor
xchg
shr
and
adc
imul
pusha
nop
lcall
xchg
in
fmul
repnz
lret
frstor
lcall
xlat
addr16
decl
rorb
cmp
sub
push
out
or
jmp
inc
repz
adcb
adcb
cld
lcall
clc
sti
shrl
movsl
push
pop
jnp
add
jg
es
inc
in
std
jmp
sbb
push
jg
dec
or
jmp
push
arpl
mov
sub
int
mov
out
pop
and
push
ret
jl
mov
sub
xchg
and
ret
xorl
insb
dec
cmp
push
mov
or
jnp
stc
push
in
les
stos
inc
jo
xchg
outsl
sbb
call
xchg
sub
hlt
dec
jmp
insl
aas
scas
pop
dec
jg
or
pop
inc
daa
nop
cmp
push
sbb
call
cmp
adc
mov
sbb
mov
push
gs
mov
cli
addr16
lods
out
jp
movsb
inc
inc
cmp
shl
cmp
push
or
je
add
xor
cmp
iret
dec
jb
pop
cmpl
cli
dec
insl
incl
bound
push
cs
in
loop
pop
xor
cld
dec
mov
insb
call
out
pop
in
push
loopne
repz
pop
pop
sar
mov
jl
adc
cmp
dec
cmpsb
rcrl
jmp
sbb
jmp
loopne
xor
push
sub
cmpsl
mov
ja
stos
push
inc
daa
mov
call
es
xlat
xor
jmp
lods
mov
cmc
scas
push
push
sub
arpl
pushl
fsubl
pop
pop
repnz
stos
add
and
js
and
data16
xor
loope
ds
fwait
push
jle
int
mov
repnz
pop
and
lock
cmp
lcall
outsb
or
dec
ljmp
shll
inc
cmp
lret
push
mov
mov
ljmp
dec
stos
fwait
cmp
adc
outsb
mov
cmpsl
sbbb
lcall
sub
sti
into
icebp
outsb
add
jns
adc
xor
clc
mov
jb
adc
imul
sub
lods
movsl
cmc
push
dec
xor
xorb
mov
rorl
push
mov
add
mov
pop
scas
in
cmp
fadds
lret
ljmp
pop
int
test
push
mov
adcb
pop
mov
sbbb
ror
mov
ret
and
sub
xchg
push
inc
ja
xchg
pop
cmp
ljmp
cli
cmp
lods
mov
fistpl
outsb
sbb
out
jmp
xchg
incl
cld
fildl
adcb
dec
jo
mov
cmpsb
ficoml
inc
filds
add
shrb
jns
ficomps
call
addr16
notl
divl
pop
pusha
push
and
incl
cmpsb
mov
ja
mov
in
je
cwtl
call
int
xor
mov
out
lods
shrb
and
dec
xor
push
xchg
inc
mov
adc
push
test
push
adc
inc
push
iret
mov
ljmp
jo
sub
decl
in
leave
xlat
add
mov
mov
std
mov
rorl
pop
hlt
xlat
mov
cs
loope
jp
rorb
shlb
fdivrp
decl
lock
jns
xchg
insb
and
scas
fwait
or
jne
push
jns
push
push
pop
lcall
ds
jge
push
lods
pusha
outsl
mov
mov
cmp
imul
jg
inc
mov
inc
cs
mov
and
mov
pop
mov
js
out
dec
aaa
xor
mov
mov
xchg
xchg
add
int3
insl
cli
decl
sub
dec
sbb
out
inc
push
jbe
mov
mov
and
adc
lds
and
push
imul
add
push
jg
push
std
mov
xchg
xor
sub
test
das
push
sti
enter
inc
cmp
and
aaa
lds
and
rol
scas
push
cmp
jmp
jb
cmpsl
hlt
cli
mov
mov
repz
lcall
enter
sub
lret
pusha
sbb
xchg
scas
sub
js
popa
or
test
fs
jg
lcall
sti
dec
insl
popa
ja
popa
dec
add
int
pop
pop
arpl
or
mov
je
mov
cmc
aad
adc
daa
outsl
add
dec
ljmp
adc
ja
mov
hlt
and
mov
sub
mov
sbb
mov
js
mov
mov
lcall
movsl
lret
push
aam
pop
jmp
ljmp
std
or
cltd
and
inc
fmull
idivl
incl
mov
mov
add
mov
loope
xchg
mov
pop
and
ds
jnp
dec
lahf
add
mov
xchg
fisubrs
xchg
jg
push
lods
jo
push
pop
push
nop
mov
dec
adc
and
add
fcomps
inc
decl
sub
cltd
lret
bound
mov
and
cmp
call
mov
push
in
rol
rclb
testb
lcall
test
pushl
sbb
lahf
push
adc
addr16
lahf
aaa
cmp
and
mov
decl
and
lods
divb
sti
les
pop
pushf
decl
or
popf
dec
cwtl
cwtl
cmp
xor
shr
fstpl
mov
mov
inc
ja
xor
dec
lods
inc
repz
xchg
inc
leave
pop
clc
out
mov
mov
ss
cmp
ljmp
into
mov
pop
sar
mov
test
inc
or
pop
or
xlat
mov
sub
sbb
push
jne
mov
cmp
xchg
sti
adc
pop
call
std
pop
cmpsl
adc
jmp
das
jp
dec
inc
mov
sub
push
imul
enter
stos
jmp
push
aad
call
lret
mov
or
ljmp
jecxz
push
inc
push
into
cld
mov
lea
sub
sbb
dec
jg
push
pusha
push
sti
pushf
fs
ret
sub
lret
testl
out
cli
incl
push
and
das
stos
rorl
cmp
lahf
sbbl
decl
lods
sahf
add
sahf
xor
es
adc
pusha
xor
mov
xlat
and
xchg
or
scas
incl
jb
add
cld
xchg
jecxz
inc
and
mov
cs
push
push
cmpb
dec
pushl
mov
and
xchg
adc
in
bound
sub
aam
xor
push
pushl
imul
jbe
mov
out
cmpsl
std
ficompl
push
xor
and
mov
pusha
rcrb
nop
leave
mov
hlt
jp
sti
loope
lahf
pop
jns
pushl
sbb
dec
jo
mulb
inc
ret
push
outsl
mov
jmp
cmp
mov
into
sub
mov
loop
aaa
lods
sbb
jmp
in
loop
lock
movsb
decl
add
loop
lds
das
sub
pop
fiadds
mov
and
mov
lcall
inc
subl
sub
popa
mov
cmpl
jae
push
bound
mov
adc
sub
ds
jmp
pop
pusha
loop
movsb
pop
jnp
imul
xchg
mov
xor
lret
outsb
js
or
push
fisttps
sbb
pop
imul
ljmp
mov
mov
decl
push
adc
in
mov
movsl
lock
sub
cli
fisubrl
add
dec
in
imul
flds
out
mov
and
in
mov
notb
mov
mov
sub
jg
add
pop
xor
test
add
inc
fldcw
cmp
call
mov
loop
clc
cmpsl
bound
bound
das
pop
cmp
xor
fnstsw
ds
lcall
jecxz
mov
shlb
xlat
movsl
call
lcall
mov
fdivrp
jmp
insb
jno
rcll
test
push
push
fistpl
jmp
scas
inc
mov
pop
inc
aaa
jmp
call
cmp
aad
inc
cmp
jge
cmp
jo
pop
aad
push
in
jecxz
pop
jmp
outsl
add
outsb
inc
jge
pop
push
and
pop
xor
call
aad
aas
add
mov
iret
in
jns
sub
shr
push
lds
jmp
sub
mov
repnz
loope
aam
inc
mov
pop
xchg
pop
pop
xchg
xchg
sub
and
shrb
mov
stos
aas
or
pushl
je
xchg
sub
sub
push
std
xchg
xchg
enter
decl
inc
popf
xchg
jmp
mov
mov
jle
sbb
sbb
cmp
adc
mov
lcall
imul
add
mov
and
push
push
ud0
incl
mov
mov
cmp
test
mov
mov
cld
sarb
pusha
lcall
enter
jns
cwtl
push
pop
mov
and
sub
jbe
pop
pusha
cmp
lcall
psraw
das
pop
mov
mov
mov
dec
sub
inc
jl
sbb
cmp
cmp
lcall
fs
jmp
clc
mov
nop
sbb
ss
das
jns,pn
std
dec
xlat
xorl
stc
sub
dec
fs
orb
je
mov
call
incl
cld
xchg
push
push
fidivrs
inc
or
test
mov
jge
fs
shrl
mov
cli
inc
mov
cmp
fildl
xchg
rcpps
sub
jp
shll
scas
pop
lods
xchg
mov
sbb
xchg
jmp
lcall
or
sbb
ljmp
pop
in
mov
outsl
test
lock
mov
cltd
jge
icebp
mov
ds
inc
pop
icebp
addr16
or
ljmp
xlat
mov
ljmp
incl
nop
in
arpl
daa
fildll
lock
xor
adc
icebp
lcall
sub
cltd
ds
pop
clc
sbb
sbb
jg
inc
leave
adc
dec
hlt
ret
lds
ret
cmp
fnstcw
daa
cs
jg
in
leave
sbb
shrb
push
je
pushf
outsb
mov
cmpsl
mov
pushl
mov
in
clc
aas
movsb
aad
sahf
xor
adcl
mov
dec
jmp
cmpsl
sub
mov
adc
into
insb
pop
popf
mov
mov
fdivl
pop
cwtl
lret
jecxz
fistpl
dec
mov
jle
push
xchg
xor
cmp
das
cli
jge
jne
popa
ret
imul
scas
jns
loope
popf
out
jp
and
jmp
hlt
jne
int
lods
adcb
dec
repnz
pop
popf
jp
jae
lock
jmp
mov
pushf
jg
xor
mov
cltd
mov
xor
fists
adc
inc
xchg
imul
cmp
sti
push
iret
jae
xchg
enter
repz
lcall
dec
sbb
das
and
pop
add
inc
jmp
popa
jno,pt
push
push
arpl
mov
sbb
jg
ljmp
out
hlt
jmp
adc
fisubl
inc
or
push
mov
adc
xchg
inc
jg
cmc
das
cmp
mov
lret
shlb
and
adc
pushl
jg
add
icebp
jne
scas
cmp
jge
push
dec
add
cmc
nop
inc
mov
cmp
fistl
scas
jno
aad
and
pop
shll
out
pop
ljmp
cmp
out
iret
popa
push
jp
jle
cmpl
mov
les
cmpsb
pop
arpl
jo
push
xchg
mov
test
sub
lahf
dec
popa
cmpsb
insb
call
sti
shrb
cltd
test
mov
sti
incl
push
flds
pop
sub
es
lcall
shlb
xorb
dec
push
ljmp
push
ficoms
push
loop
and
or
repnz
mov
jno
inc
pusha
loop
fildll
cmp
xchg
in
sub
push
test
lahf
cwtl
popa
lds
sbb
imulb
out
lahf
xchg
or
push
ds
fcomip
lods
pop
sti
fmul
mov
or
test
or
xchg
lcall
sbb
decl
clc
sahf
shll
mov
mov
lcall
ficoms
movsb
mov
lcall
ret
leave
mov
push
adc
stos
mov
mov
inc
addb
pop
sti
and
pushl
fcmovu
inc
enter
or
xchg
out
cld
scas
mov
jg
dec
jmp
rcrl
dec
scas
pop
inc
inc
sti
mov
cmp
add
push
fdivr
sbb
call
xchg
cltd
mov
gs
scas
dec
call
incl
xchg
stos
inc
push
mov
cmpsl
pop
ds
adc
std
and
dec
sbbl
jmp
iret
jne
jle
pop
xor
adc
jp
pusha
sarl
shrb
push
stos
fidivrl
div
xor
stc
push
push
testb
mov
call
xor
cwtl
mov
in
xchg
cmp
pop
loopne
fldenv
xchg
cs
stos
or
lcall
jl
xlat
dec
outsl
call
lods
lea
pop
adc
sbb
inc
adc
sub
mov
add
aas
jb
popa
fadd
scas
inc
aaa
jle
repz
call
arpl
rcrl
lcall
adc
lods
std
dec
sub
rcrb
pop
push
fwait
in
adc
or
jb
sbb
xchg
xchg
call
add
fwait
in
and
data16
test
push
or
mov
push
dec
add
incl
notl
cmp
rolb
hlt
sub
leave
mov
ljmp
or
sub
mov
stos
jbe
fcomps
lahf
xlat
sbb
popf
xchg
sbb
pop
inc
cmp
decl
inc
ljmp
es
and
mov
lcall
xchg
loop
jo
sbb
dec
das
adc
aaa
mov
dec
pushf
scas
pop
sub
call
xchg
push
int
fistps
sub
hlt
sti
loop
or
cmpsl
cli
int3
pop
cli
jp
sbb
ljmp
pop
mov
fbld
test
inc
lcall
cs
mov
lcall
sub
fidivrs
mov
sbb
and
mov
std
push
adc
mov
incl
mov
mov
jns
test
push
sbb
and
daa
mov
fistpll
inc
fdivr
lcall
dec
pop
clc
push
inc
mov
gs
enter
xchg
cmp
adc
call
adc
mov
sbb
movsb
pop
sub
mov
dec
push
mov
inc
jl
test
ljmp
push
xor
bound
outsb
cwtl
dec
in
pop
arpl
push
sbb
jmp
cmp
lcall
or
pop
add
dec
pop
rcrl
incl
and
add
mov
out
dec
jmp
inc
pushl
push
xlat
or
jp
ret
mov
int
les
sbb
outsb
out
fwait
imul
add
das
adc
jb
enter
jg
mov
out
cmp
adc
mov
inc
outsb
dec
inc
pop
ljmp
dec
js
scas
mov
push
fdivs
xchg
jmp
pop
sub
cmpsb
aas
cmp
stos
clc
and
jge
push
ror
jne
inc
sbb
mov
out
jbe
pop
xor
aaa
test
ss
dec
pop
data16
or
pop
outsb
jmp
icebp
push
push
jmp
lcall
or
or
ds
or
popf
mov
repz
push
pushf
mov
ret
data16
lea
sahf
mov
pop
or
imul
test
pop
sub
inc
lods
aaa
xchg
lcall
fs
mov
rolb
add
lcall
mov
pop
sub
jnp
add
adc
ss
mov
mov
fs
and
sub
dec
jmp
adc
add
jge
xchg
leave
xchg
push
adc
and
ljmp
call
lods
test
or
mov
gs
jle
xlat
fistpll
lock
decl
pop
pushfw
clc
fidivs
add
mov
jmp
inc
jmp
rol
imul
xchg
insl
loop
fbstp
adc
or
fs
outsb
xchg
sbb
scas
lcall
repnz
lods
clc
cmpsb
jg
out
mov
xchg
xchg
inc
mov
xchg
insb
jmp
lock
dec
stc
loopne
inc
adc
mov
dec
fdivs
test
xor
jo
cmp
jmp
add
in
lds
es
push
fs
fsubl
or
or
mov
jge
outsb
and
sbb
dec
in
jo
popf
mov
sub
fldl
sub
lock
in
sbbl
aaa
lds
fbld
aaa
enter
mov
jmp
push
push
movsb
push
popa
sti
mov
jno
jae
loopne
out
movsb
in
push
mov
inc
test
popa
add
and
pop
addr16
adc
cltd
mov
sbb
js
mov
loop
push
addb
jl
aad
mov
mov
inc
aaa
pusha
stc
sbb
mov
aas
jecxz
insb
test
add
sub
xor
adc
inc
pop
jecxz
mov
pop
push
and
test
jmp
mov
test
cli
push
sti
pop
sbb
jnp
imul
jmp
call
jl
dec
popa
mov
cmp
cmpsl
and
icebp
stos
inc
mov
sar
call
fcmovbe
sahf
js
pop
xchg
orl
jae
dec
lock
fildll
dec
jle
sbb
lret
stos
lret
shlb
inc
pop
std
inc
pushl
push
test
add
repz
push
ja
xlat
movsl
sub
cmp
enter
jmp
add
dec
call
bound
jp
inc
into
ja
pop
xlat
jns
cmp
jmp
lret
lea
add
shll
inc
dec
push
test
or
sbb
pop
aad
push
out
mov
call
fdivr
shr
lock
les
sbb
fdivr
loopne
adc
dec
pushf
xor
pop
mov
add
push
faddl
add
jg
add
or
pop
pop
push
or
or
or
or
or
adc
dec
insb
adc
adc
adc
lods
add
mov
push
adc
adc
adc
add
data16
mov
or
rolb
ss
or
add
and
add
sahf
add
les
fistps
add
movsl
fldenv
pushf
inc
cli
jb
lcall
iret
imul
lods
adc
push
adc
pop
and
in
call
adcl
shl
and
bound
js
dec
ret
sbb
or
pusha
insl
ud0
pop
push
mov
and
mov
test
outsl
push
or
and
inc
add
pushf
pop
add
add
add
cmp
cmp
cli
add
lods
push
adc
pop
popa
cmp
out
or
lods
or
mov
or
xor
adc
shrl
icebp
mov
add
and
pusha
add
scas
fiaddl
or
xor
or
js
mov
pop
les
or
add
lds
cld
cli
and
mov
decl
test
jge
ficompl
cmpsl
xor
mov
test
pop
adc
lahf
std
movsl
jecxz
cli
pop
mov
lcall
push
stc
or
xchg
jg
or
insb
sub
addr16
out
or
call
push
push
xchg
add
repnz
inc
lock
scas
jle
fcmovnu
clc
cmp
fidivrl
ljmp
in
mov
orb
int3
lcall
mov
push
pop
mov
in
js
pop
mov
popl
movb
xchg
sbb
scas
adc
mov
pushl
sub
movsb
cltd
jns
jecxz
aam
and
sbb
sarl
and
roll
lcall
fwait
movsb
jmp
push
lret
push
out
in
and
ss
repz
cmpsb
pop
outsl
icebp
pop
lock
std
or
pop
mov
daa
test
aaa
dec
dec
pop
push
out
outsl
loope
mov
and
lea
int
arpl
mov
jp
push
out
or
cld
push
inc
mov
sahf
pop
clc
sti
jg
jno
lock
jg
inc
icebp
xchg
std
sarl
xor
clc
pop
pop
mov
jmp
sbb
add
loope
lods
mov
out
pop
jb
mov
or
push
mov
mov
int
inc
fwait
sbbb
mov
dec
jp
push
gs
jg
hlt
push
add
stc
loope
mov
sar
subl
cmp
icebp
testb
mov
aas
pop
xor
jns
mov
in
repnz
jno
pop
sub
jg
scas
cld
or
push
inc
call
jne
sbb
paddb
inc
mov
dec
adc
push
lock
jmp
mov
aad
aaa
sbb
into
fcomps
sbb
sbbl
into
pushl
aas
loopne
cli
adc
aaa
xchg
in
add
inc
adc
mov
dec
fisttpll
out
aas
std
cli
push
push
fists
fstl
jg
cmp
sub
inc
scas
inc
mov
jg
mov
and
mov
mov
scas
call
inc
inc
es
gs
jns
enter
or
push
pushf
push
scas
xlat
sub
cmp
sti
punpckhbw
pushl
cmpsb
orb
mov
insl
fistpll
das
jmp
xchg
pop
clc
pop
hlt
lret
mov
add
lea
jg
gs
std
xorb
cmc
sub
imul
outsl
adc
ret
das
pop
pop
pop
shlb
lcall
in
sarb
sbbl
jno
or
sarb
std
pop
les
cli
mov
mov
inc
arpl
stos
mov
and
insl
add
ljmp
loop
jge
push
shrl
mov
push
mov
adc
and
in
sbb
xchg
jo
and
out
test
jae
push
iret
sti
cmp
ficoms
aam
sahf
imul
sbb
fadd
or
mov
nop
enter
add
cld
call
js
cmp
outsl
inc
shrb
lods
hlt
cmp
fistl
mov
adc
push
movsb
xchg
or
mov
stos
dec
jbe
das
clc
lods
xor
jg,pn
cmpsl
scas
popa
in
pop
or
decl
mov
xlat
pushf
cld
aas
clc
jge
jnp
sbb
outsb
mov
sbb
jecxz
inc
adc
pushl
and
push
push
jo
pusha
imul
add
mov
cmp
in
jmp
xchg
mov
cwtl
pop
xchg
ftst
jbe
xchg
and
mov
out
jae
shrb
shlb
out
aas
stc
add
out
gs
jno
fidivrl
lock
adc
pop
cld
addl
loopne
idiv
adc
and
lahf
fmull
jmp
xor
enter
jecxz
scas
sub
in
pop
mov
sub
testb
incb
fisubrl
aas
mov
or
jle
in
push
inc
or
pop
jg
add
sti
mov
jg
mov
aad
test
mov
mov
in
in
aas
iret
push
jbe
push
sbb
stos
icebp
nopl
cmpb
dec
jno
adc
fdivr
mov
push
inc
jecxz
sbb
sarl
adc
loopne
sbb
sar
xorl
imull
push
cmp
dec
push
insl
ret
in
aas
mov
fsubrl
lock
decb
mov
and
clc
xchg
cmp
mov
jne
push
and
mov
adc
lahf
or
push
rcrl
rolb
pop
inc
jb
fistpl
pop
in
xor
adc
call
jno
pop
nop
ljmp
jmp
inc
sti
arpl
daa
std
or
sbb
mov
inc
cmpsb
popf
push
loop
sbb
lcall
decb
imul
xor
dec
xor
fsubr
fistps
lds
fidivrl
jg
vmovshdup
stos
pop
add
dec
mov
sub
fidivrl
xor
lahf
les
sbb
sbb
cld
addl
call
and
mov
in
stc
mov
lahf
outsl
int3
push
sbb
pusha
sub
arpl
sar
xchg
popa
out
out
outsl
xchg
inc
test
in
jge
popa
push
test
xchg
das
cmp
jbe
outsb
hlt
sti
fsubs
shl
dec
jp,pn
adc
lahf
pop
mov
pushl
add
mov
pop
shl
in
in
push
cld
mov
adc
stos
pop
jg
pop
shrb
rcl
jg
adc
ljmp
push
xor
pop
rcr
dec
mov
gs
pushf
lea
jp
jnp
out
push
add
ds
pop
adc
imul
jmp
outsb
inc
pop
xor
rorb
and
add
cmpsl
push
sbb
std
mov
inc
cmpsl
enter
mov
into
test
xchg
movsb
insb
or
and
fimull
lcall
cwtl
inc
mov
insb
test
fldt
jo
aas
repz
sbb
lock
in
jmp
pop
clc
lods
out
sbb
aaa
clc
push
std
mov
loopne
sahf
or
mov
mov
mov
push
mov
fsubrp
dec
sahf
enter
fcmovb
inc
adc
inc
loopne
test
out
mov
inc
out
pop
or
or
dec
in
in
inc
in
ss
lods
movsb
or
repnz
clc
dec
cmc
mov
jl
call
mov
add
cmpsl
lret
pop
in
cmp
fwait
mov
mov
jmp
mov
pop
lock
jmp
hlt
dec
mov
or
aas
das
rcrb
mov
sub
addr16
sbb
cld
or
adc
cltd
or
mov
ret
and
cmp
das
incb
lock
pop
pop
div
cld
idivl
inc
and
fs
loope
rcl
sbb
jmp
stos
cwtl
cmpb
fbstp
out
xchg
add
mov
jg
out
icebp
mov
loope
mov
cmpsl
popf
inc
outsb
clc
inc
sti
mov
fbstp
or
cltd
mov
outsl
das
rorw
cmpsb
cmp
jg
fwait
lock
xor
decb
adc
mov
sbbb
dec
adc
call
mov
dec
pop
nop
inc
xchg
mov
sub
clc
inc
add
push
pop
aaa
std
fbstp
mov
inc
sbb
jnp
shll
jle
icebp
ret
ror
sbb
sbb
push
jmp
jg
scas
loop
adc
aas
pop
clc
loope
stos
mov
mov
lahf
jp
dec
add
xlat
jbe
add
xor
shll
iret
fdivrl
xchg
lcall
decb
js
pop
fbld
sarl
pop
out
jg
dec
sbb
jno
ret
cmp
mov
inc
sbb
inc
lcall
push
dec
jge
pop
clc
xchg
cmpsb
ljmp
ds
inc
mov
in
sbb
xchg
imul
lods
xor
in
bswap
push
outsl
push
cmp
jmp
std
mov
daa
jmp
faddl
fadds
push
jae
mov
add
adc
push
dec
out
fstpt
mov
enter
iret
dec
pop
add
fsts
dec
sub
sub
add
pop
inc
leave
sti
push
sti
pop
inc
or
push
push
push
push
nop
xor
test
bsf
popf
test
and
andb
movsl
xor
mov
and
and
addb
addb
or
add
add
mov
sub
mov
add
mov
cmp
js
push
jg
add
rcll
test
js
add
pop
dec
orb
mov
push
inc
test
xchg
cmpsl
adc
roll
scas
jle
dec
lds
jno
jg
mov
lock
mov
dec
and
sub
pusha
or
jno
mov
jnp
xchg
movsl
push
daa
add
xchg
dec
scas
imul
push
and
cs
push
movsb
push
movsb
jle
sub
scas
push
stos
push
and
mov
and
imul
cld
scas
loop
push
inc
pop
pop
add
mov
pop
sbb
mov
mov
sbb
inc
mov
pusha
sbb
mov
sarl
pop
les
push
adc
fs
mov
mov
and
add
imul
push
punpckhwd
into
mov
int
repz
jbe
fnstenv
fdivs
pop
stos
pop
stos
and
insl
sti
xor
jbe
add
jo
mov
push
shl
mov
clc
jno
add
outsl
push
shll
fidivrl
iret
outsb
or
ss
push
push
ret
je
fidivrs
out
test
fisttps
add
fwait
inc
ds
outsb
or
jl
stc
mov
insb
pop
jae
shlb
mov
push
sti
lcall
jne
push
aam
push
lock
retw
add
mov
adc
outsl
ss
pop
dec
add
cmp
data16
inc
xchg
ds
scas
add
push
push
shlb
lret
fnstcw
add
ja
push
rcr
notl
xlat
jne
add
ja
push
ds
insl
aad
push
xlat
ja
js
push
jns
push
jl
roll
jp
jp
inc
push
fidivrl
sarl
sub
int3
ja
fldl
ret
rorl
ljmp
xchg
fiaddl
sub
xchg
xor
xchg
insl
push
xchg
pop
xor
imul
ds
aaa
push
lcall
push
cmp
jl
insb
push
pushf
cmp
popf
xchg
popf
aas
in
xchg
push
sahf
inc
push
lahf
inc
lahf
mov
mov
push
push
jecxz
push
imulb
movl
sahf
out
sbb
clc
stc
cli
jle
out
sti
cld
std
incb
jecxz
mov
inc
jae
data16
add
jo
imul
mov
add
pop
add
pop
add
add
or
sub
mov
add
add
add
mov
add
add
pop
or
xchg
aas
test
test
jbe
fisubl
sbb
stos
mov
pop
adc
adc
add
int3
adc
pop
add
lods
lods
pop
mov
pop
mov
add
scas
insl
lods
pop
pop
adc
fsubrl
adc
sbb
push
pop
scas
sbb
scas
scas
scas
cmpl
sbb
mov
pop
jb
movsb
imul
loope
add
shlb
lock
movsb
mov
and
and
stos
push
and
mov
push
add
pop
pop
sub
das
add
sub
daa
xchg
mov
daa
mov
sub
lea
jo
out
and
dec
pop
fldt
mov
cmp
cmpsb
add
mov
xor
xor
pop
or
jbe
push
or
add
pop
jg
out
pop
xor
mov
pop
das
push
cs
xor
add
xor
das
pop
push
jg
ficoms
add
pop
push
cs
dec
inc
das
inc
inc
xor
adc
mov
xor
push
push
popa
jbe
cmp
jl
jge
jno
outsl
add
pusha
pop
jmp
jae
dec
dec
cmpb
jo
mov
inc
xorl
mov
xchg
xchg
incl
xchg
popf
pushf
fwait
lcall
mov
mov
inc
xchg
push
jle
int
mov
je
push
bound
js
jg
fwait
adc
xor
jne
je
add
mov
jg
in
and
add
int3
or
pop
bound
outsl
mov
jle
xchg
pop
push
repz
mov
push
mov
cmpsb
push
mov
jle
fisttpl
dec
dec
xor
ja
push
ja
jb
cs
xor
mov
fisubrs
inc
push
push
add
mov
mov
outsb
and
mov
xchg
inc
mov
cmp
mov
inc
add
mov
std
xchg
jae
xchg
jp
inc
push
popf
inc
mov
aaa
add
xchg
jno
imul
add
xchg
jb
bound
mov
mov
lahf
ja
inc
inc
push
sahf
mov
insb
add
ds
outsb
add
xchg
xchg
pop
push
rcr
mov
test
push
dec
push
movsb
jae
add
jb
pop
sub
test
push
mov
push
lcall
loop
add
fwait
imul
lcall
stos
std
int
outsb
mov
dec
push
add
ja
sahf
jbe
or
mov
add
popf
imul
stos
push
add
inc
cli
data16
jp
add
js
mov
xchg
scas
data16
shrl
insb
frstor
push
outsl
ror
push
fisttpl
jle
ds
jno
add
jge
push
jg
fiadds
insl
fisttpll
lock
mov
in
adc
mov
add
test
push
iret
sahf
mov
cmp
add
xchg
in
push
jle
xchg
or
jecxz
or
push
xor
outsl
in
aad
push
divb
fildl
adc
push
sbb
addb
sbb
pop
sarb
bndstx
test
in
mov
push
insb
addr16
xchg
nop
and
out
xchg
in
xchg
cwtl
add
outsb
lock
sub
sub
imulb
outsb
out
xchg
das
push
xchg
repnz
xor
cwtl
push
cmc
sahf
mov
push
lcall
cmpsb
pop
cmp
mov
aam
adc
add
cmpsb
scas
jo
test
sahf
neg
addb
jbe
stos
into
shll
inc
pop
or
mov
ds
mov
shll
rcr
rcl
mov
push
aad
jle
data16
add
jo
mov
cs
dec
rorb
add
je
dec
add
add
daa
add
mov
pop
repnz
cld
femms
or
or
or
incl
pop
push
adc
push
add
add
std
inc
insl
ds
add
mov
adc
adc
mov
and
sbb
shrb
mov
push
add
and
mov
jnp
loopne
ds
mov
aas
add
lcall
mov
stos
or
aas
aas
nop
out
jns
cmp
aaa
add
inc
sti
mov
sbb
inc
jbe
adc
mov
incl
jle
cmp
scas
xor
dec
mov
in
mov
adc
fnstenv
decb
test
repz
ds
add
xor
pop
mov
ds
lods
stos
test
cmpsl
ljmp
out
cmpsl
cmpsb
cmpsl
add
test
mov
sahf
ret
mov
outsl
ds
xor
sub
sub
sub
sub
outsl
addr16
sub
dec
and
inc
mov
push
push
add
push
push
imul
push
pop
push
push
push
imul
das
pop
imul
jne,pt
fwait
cwtl
xchg
pusha
xchg
nop
cltd
mov
mov
nop
test
jmp
je
xchg
jns
jle
addl
jb
jae
jo
outsb
pushf
sti
lds
loopne
test
jo
mov
add
add
decl
or
ja
push
push
add
cmc
repz
stc
xor
mov
subb
aas
inc
outsl
mov
mov
xchg
sub
decl
fadds
mov
add
fcomi
aas
mov
mov
push
mov
fnstsw
repnz
loopne
add
mov
push
gs
jecxz
pushf
add
mov
push
in
iret
sti
dec
sti
lcall
or
mov
push
pop
mov
jo
dec
lret
js
into
xchg
add
jp
add
mov
mov
test
scas
xchg
js
in
and
out
fnstcw
jmp
push
xchg
push
sub
nop
sub
pop
xchg
das
push
xchg
xor
xchg
xor
xchg
outsb
lcall
es
jbe
negl
data16
int3
fst
es
push
lret
loopne
sub
jle
std
into
fdivrp
mov
pop
inc
imul
xchg
add
test
fldcw
add
jge
sub
xchg
inc
push
dec
dec
dec
dec
xchg
jmp
decl
or
pop
or
add
push
dec
or
adc
cmp
fsubr
in
outsl
adc
dec
or
add
push
adc
add
repnz
inc
or
pop
pop
cmovg
inc
dec
sti
mov
push
dec
sbb
inc
adc
inc
inc
fscale
adc
sbb
dec
add
dec
adc
inc
ds
cmp
xchg
nop
icebp
cmp
cmp
daa
and
sbb
and
jmp
adc
sub
xor
xor
sub
sub
push
add
aam
stos
lods
mov
addb
mov
pop
mov
flds
mov
mov
add
add
mov
outsl
add
push
mov
sbb
add
mov
cmpsl
mov
and
jbe
add
pop
nop
or
adc
jmp
ret
sbb
incl
add
push
outsb
sysret
mov
es
xor
andl
ja
cmpsb
pop
stc
sysret
in
jo
leave
leave
lock
hlt
sbbl
jg
sbbl
mov
xor
add
or
jg
lahf
test
add
into
jg
cli
shlb
add
inc
test
mov
jg
sub
repnz
push
xor
add
xchg
jg
mov
mov
roll
das
sti
mov
jle
push
leave
scas
inc
dec
sbb
pop
jo
jg
xchg
orl
push
add
loope
idivb
mov
cld
jg
mov
and
jle
cmpsb
std
bound
adc
jg
bound
into
jg
mov
nop
pop
jg
xor
and
and
add
add
data16
arpl
movb
sar
inc
or
lods
call
js
push
dec
xor
or
dec
adc
mov
orb
jg
rcrl
inc
add
adc
jg,pt
adc
jbe
inc
bound
adc
and
sbb
scas
incl
add
enter
jmp
lods
jle
lret
imul
dec
add
add
add
adc
push
test
add
xchg
push
cmp
pop
add
adc
pusha
adc
jmp
mov
jg
add
imul
and
lea
incl
xchg
add
jg
cwtl
add
pop
sub
xor
dec
jg
pop
je
lods
jle
ljmp
pop
fdivrp
cmpsb
ljmp
mov
pop
pop
pop
add
fcmovu
mov
daa
aas
aaa
pop
pop
push
add
jle
lock
cmpsb
aaa
add
add
mov
jle
sbb
or
or
dec
xchg
cmp
sldt
mov
in
mov
daa
push
arpl
test
mov
das
pop
push
mov
arpl
out
lcall
decl
dec
test
pop
dec
test
stos
ljmp
dec
je
jle,pt
test
mov
dec
test
push
dec
push
popf
iret
mov
push
jne
push
push
jne
pop
fildl
out
push
jnp
push
mov
mov
js
dec
sbb
pop
add
mov
fnstsw
pop
es
mov
push
outsb
notrack
jle
fs
cmp
inc
outsb
ss
ljmp
decl
fisttpll
xchg
dec
ja
xchg
dec
push
movsl
test
lods
insl
inc
fiadds
mov
mov
mov
xor
int
push
sahf
inc
out
mov
ss
adc
aas
popf
inc
and
mov
push
pushf
cmp
fistl
push
xchg
xor
mov
jnp
xchg
xor
sub
sub
nop
daa
ss
sahf
adc
out
cs
mov
xor
or
insl
cwtl
aaa
outsb
incl
push
xor
mov
adc
jg
pop
fnsave
xor
inc
sahf
nop
mov
jbe
fisubl
ror
pop
cs
add
ja
cltd
mov
shll
aad
xchg
movb
ja
pop
bound
divb
mov
add
push
push
imul
or
sbb
mov
xor
stos
lea
add
outsl
shrb
add
dec
iret
adc
add
or
and
out
fwait
cs
adc
pop
push
xor
inc
sahf
mov
mov
push
imul
mov
sbb
test
push
lock
cmp
cmp
pop
cmp
icebp
add
push
in
add
mov
pop
push
fdivrp
decl
addb
inc
out
pop
adc
shrl
push
mov
mov
pop
push
enter
push
sbb
xor
dec
cli
push
idiv
andb
inc
xchg
std
dec
add
out
into
jmp
syscall
mov
sub
sub
incb
outsl
add
xchg
pop
lcall
or
mov
add
mov
sub
adc
adc
pop
cld
sbb
mov
data16
sti
push
rclb
lcall
std
out
add
popa
xchg
pmaxsw
lcall
or
or
mov
xor
incl
cmp
ds
incl
xor
or
mov
or
push
nop
mov
incl
rorb
inc
mov
sbb
dec
or
ljmp
scas
jns
dec
push
mov
lods
xchg
clts
add
movsl
add
mov
pand
adc
pushl
sti
out
push
mov
push
rcl
push
incb
dec
add
pusha
add
add
iret
outsb
push
push
and
push
call
imul
push
je
add
sub
dec
ficoms
add
push
std
insl
or
call
and
call
or
adcb
cld
pop
and
add
call
jg
aaa
push
popa
mov
idiv
add
imul
je
es
call
or
inc
pop
mov
insl
repnz
pop
pop
inc
rcr
fcmovu
xorps
aaa
mov
adc
shll
mov
mov
roll
dec
pop
and
add
push
adc
int
xchg
hlt
jmp
ljmp
lahf
mov
inc
push
inc
inc
pop
inc
pop
mov
aaa
push
pop
sahf
es
fwait
in
movsb
dec
push
stos
push
popf
inc
cmpsb
dec
dec
lcallw
cs
dec
mov
out
add
and
int
insl
dec
out
push
shrb
rcl
outsb
rcrb
shll
push
push
jb
mov
das
push
iret
insl
into
dec
and
dec
dec
xchg
jmp
stos
xchg
dec
xor
push
push
jmp
fisubl
cmp
add
pop
int
repnz
call
popfw
cmp
aas
call
push
cwtl
xor
leave
xor
xchg
push
push
aaa
push
xchg
fisubs
xor
push
es
cmc
ficoml
xchg
xchg
testb
jnp
sub
call
ljmp
test
data16
ds
or
fimuls
neg
je
bound
js
std
faddl
jge
push
jnp
xor
imulb
or
jl
or
dec
movsl
fstp
jl
push
jge
jg
es
fwait
cltd
std
add
adc
fidivrl
push
dec
push
dec
repnz
std
jns
repnz
jae
pop
fidivrl
push
mov
jnp
push
pop
fsub
jge
jl
cli
int3
inc
push
and
pop
jo
and
inc
roll
push
outsl
lahf
push
and
adc
ja
pop
or
imul
cmp
jnp
lahf
dec
es
addl
xchg
push
in
push
orb
outsb
call
xchg
out
push
sub
iret
out
outsb
test
jo
mov
cli
pushl
clc
push
idivl
or
push
jb
sub
xchg
outsb
sbb
fnstenv
cld
mov
jno
sub
jg
mov
lods
and
cltd
icebp
jg
and
mov
je
daa
jg
mov
ja
sub
xchg
dec
loope
xchg
cld
jo
repnz
dec
es
xchg
aaa
enter
incb
out
xchg
mov
mov
dec
lods
sub
pop
sahf
loope
sub
dec
and
jge
test
decl
incl
sbb
push
push
fsub
pop
and
jmp
fidivrs
push
mov
jle
mov
fidivrl
arpl
clc
lods
inc
ljmp
popf
inc
jp
pop
push
pop
push
push
test
ljmp
mov
lcall
int
push
jns
shl
sub
mov
jmp
xchg
jmp
mov
in
ja
mov
xchg
mov
loop
adc
xchg
lock
out
sbb
loope
and
lret
jg
out
mov
or
push
mov
outsl
adc
mov
add
jle
lahf
ljmp
xlat
fwait
jo
iret
push
cmovno
mov
out
out
arpl
push
fwait
inc
dec
push
js
inc
ret
movsb
lret
and
ret
xchg
repz
dec
aad
push
inc
lahf
dec
jnp
clc
lret
adc
shrl
push
mov
xor
jle
mov
pop
push
sbb
push
sbb
es
jae
push
or
and
out
sbb
push
sbb
outsb
or
ljmp
push
inc
add
and
inc
inc
push
or
or
push
jp
cwtl
rol
andb
inc
rcll
mov
or
dec
cmp
ret
adc
jb
gs
jae
js
movb
mov
push
dec
mov
jnp
xor
or
push
mov
nop
add
popf
sub
mov
dec
or
sbb
pushf
sub
jo
das
cmpl
inc
jns
outsl
push
mov
push
imul
data16
inc
sbb
imul
lea
sbb
push
inc
jg
or
jb
fisttpll
inc
and
fdivs
outsl
sarl
and
sbb
rolb
push
pop
data16
fsubl
shlb
fists
fcmovnbe
rcll
pusha
inc
or
aas
outsl
add
addl
push
repz
add
movsb
test
dec
dec
movsb
push
sbb
cltd
sub
in
out
xor
jb
inc
cmpsl
aaa
or
ret
jmp
cmp
addr16
or
mov
std
outsb
jbe
jp
xor
pop
sub
pop
mov
stos
inc
xor
jo
jle
enter
insb
jne
push
jecxz
jae
pusha
andw
popa
negl
insb
rcrb
push
push
ja
outsl
imul
bound
pop
stos
clc
pop
pop
mov
subl
jns
popf
inc
jae
adc
call
push
outsb
nop
out
call
inc
leave
gs
loopne
add
cmp
mov
lods
mov
xor
sbb
inc
xor
push
pop
pusha
mov
mov
or
sub
xor
push
outsb
fs
cld
imul
dec
mov
push
dec
pop
jo
jae
inc
pop
outsb
aaa
lcall
comiss
push
cmp
jbe
das
mov
mov
dec
pushf
cmp
pop
rcr
movsb
nop
or
mov
sbb
shrb
pop
call
inc
fisttpl
and
ret
jecxz
movb
ret
inc
dec
popaw
or
adc
pusha
inc
jge
outsb
jo
push
lea
jb
pop
add
hlt
into
push
cmpsb
fs
ret
aas
or
push
fiaddl
push
xor
mov
push
pusha
sbb
mov
aas
cmp
sti
or
es
push
xor
jbe
inc
inc
push
sti
test
lock
mov
add
es
je
push
xchg
in
insb
sub
fldcw
int
shlb
sbb
dec
lret
jne
fsubrs
mov
sub
pop
mov
xor
shl
sub
sbb
adc
lcall
test
outsl
mov
add
jecxz
adc
pop
pusha
sub
pop
adcl
xchg
lret
xor
xor
sbb
sbbb
mov
inc
mov
or
imul
add
insb
jecxz
add
repz
mov
or
ja
sbb
pop
push
popf
repz
push
push
fldenv
imul
lea
add
push
mov
jne
mov
scas
mov
xchg
mov
jbe
inc
push
sub
arpl
push
and
dec
ret
in
jne
jo
cmp
cs
mov
mov
and
xor
mov
outsb
xchg
arpl
icebp
jno
pop
shll
imul
push
inc
imul
adc
popa
test
sbb
test
pop
inc
sbbl
inc
xchg
inc
push
xchg
dec
adc
mov
jns
cmp
js
mov
jne
inc
xchg
add
scas
gs
ucomiss
enter
add
rorl
jne
and
inc
dec
dec
mov
mov
data16
gs
inc
mov
jno
lods
test
xchg
ret
or
adc
xchg
loopne
xchg
pop
sub
or
pop
xorb
les
into
popa
fnstcw
mov
xorl
sarl
inc
cmc
cwtl
insl
adc
or
add
ret
loop
cmp
test
xlat
jbe
js
inc
sbb
and
out
mov
jnp
jnp
sbb
test
push
or
inc
cmpsl
das
in
dec
sub
inc
inc
add
icebp
mov
inc
insb
sub
rcpps
js
push
jb
or
and
inc
inc
xlat
lret
push
icebp
and
out
inc
imul
outsl
lret
push
leave
xor
ja
test
add
cmpsb
shrl
bnd
sbb
outsl
sub
push
popa
cmp
stos
dec
hlt
and
outsl
scas
mov
je
mov
dec
mov
push
jns
push
sti
js
inc
inc
addr16
fcomi
push
and
inc
add
pop
push
mov
mov
adc
gs
mov
dec
push
push
pop
xor
cmp
lods
and
sub
mov
outsb
outsb
inc
sbb
fisubl
pop
and
xor
or
push
mov
outsb
dec
and
cmp
add
das
push
fldcw
out
sub
fwait
dec
ret
adc
js
int3
sar
pop
imul
lcall
or
movsb
cmp
adc
or
movhps
mov
lcall
jo
adc
es
cmp
fsubl
cmp
inc
add
mov
rorb
sbb
and
mov
or
mov
push
mov
rclb
fcom
mov
jo
sbb
imul
xchg
sbb
data16
pop
push
insb
mov
sbb
daa
push
push
scas
mov
ret
nop
push
xor
inc
test
out
xorb
cmp
fisttps
mov
out
popa
push
or
inc
sbb
loope
or
add
and
loopne
stos
and
mov
xchg
ss
scas
lcall
jne
movsb
add
jne
dec
fildl
jp
arpl
adc
push
mov
nop
push
aas
ss
imul
cmp
pushf
xor
mov
xchg
imul
ret
push
jmp
mov
jle
sub
shlb
in
outsb
push
pop
lret
inc
lock
shrl
mov
push
mov
insb
mov
mov
popw
xlat
adc
rorl
pop
or
outsb
push
inc
gs
arpl
xor
mov
adc
and
sbb
call
adc
mov
push
cmpsl
inc
ret
lods
sbb
flds
outsb
jbe
cmpsl
sbb
jle
adc
sbb
test
arpl
push
mov
xchg
das
cmovns
inc
push
and
enter
popf
adc
daa
dec
cld
push
inc
xchg
push
xor
push
arpl
test
pop
mov
ret
cmp
pop
push
jg
insl
sbb
adc
addr16
sbb
insl
jnp
nop
fs
mov
ret
fdivrs
sbb
aad
adc
scas
mov
mov
inc
push
stos
inc
cmp
out
xchg
cmp
daa
outsb
pop
push
jo
mov
ret
dec
fildl
sub
push
jne
xor
pop
or
mov
aam
sbb
and
add
mov
pop
mov
jns
cmpb
jnp
movsl
xchg
incl
sub
mov
jmp
push
or
arpl
sbb
lcall
mov
out
inc
test
dec
dec
ja
imul
mov
add
jo
aaa
sub
ret
out
push
shlb
sarb
jnp
xor
cmp
insb
ljmp
mov
mov
dec
mov
sub
add
adc
add
nop
add
sbb
push
adc
adc
cmp
inc
xchg
jle
sbb
mov
cmp
adcl
prefetch
push
push
pop
fcomps
dec
scas
test
fsubs
ret
insl
mov
lock
add
dec
push
mov
or
bound
push
and
add
and
fmull
push
add
mov
xchg
fmuls
cmp
out
inc
cs
mov
or
add
pop
push
dec
or
out
rcrb
out
dec
leave
cmpsl
sahf
push
xchg
push
lods
sub
ss
push
mov
mov
in
dec
inc
inc
ss
dec
ret
jg
mov
add
orb
pusha
mov
lea
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
lock
add
enter
add
