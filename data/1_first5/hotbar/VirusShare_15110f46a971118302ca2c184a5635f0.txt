divl
in
mov
mov
add
xor
lea
push
call
int3
cs
mov
or
lock
call
test
je
push
push
pop
movsb
mov
test
inc
out
pushl
cmp
pcmpeqd
cmp
jae
dec
movzwl
std
fistpll
jl
add
sbb
xor
jmp
and
neg
sbb
and
pop
pop
pop
ret
fwait
popa
outsl
jmp
or
call
push
push
sarl
addr16
ds
pop
pop
push
push
push
push
xor
in
mov
pop
or
push
mov
xor
xchg
movl
cmp
insb
rcrb
pushf
or
push
mov
fidivl
xor
mov
xchg
push
sbb
faddl
jne
inc
mov
leave
ret
mov
jmp
pushl
ja
fs
lea
or
lock
dec
in
or
push
add
cs
add
pushl
inc
inc
rcr
push
mov
add
and
testl
gs
add
add
test
into
jbe
mov
mov
or
mov
sub
adc
adc
inc
lock
cmp
je
cmpl
push
jl
mov
push
jne
outsb
push
or
sbb
out
call
mov
jmp
mov
push
mov
and
imul
cmp
out
or
pop
je
sub
pushf
pop
push
adc
jge
jo
repnz
push
pop
pop
out
cmpl
ljmp
jne
push
call
xor
add
or
std
mov
jg
mov
mov
jns,pt
xor
mov
cmp
jl
inc
lock
add
pop
jmp
ret
dec
add
enter
mov
push
sbb
insl
ret
ja
sti
mov
mov
les
sub
mov
push
add
push
enter
xor
or
cmp
add
mov
enter
iret
jl
add
push
icebp
mov
cmp
ja
add
jb
out
fsubr
add
mov
or
les
dec
js
into
cmp
jg
mov
adc
add
loopne
or
repnz
lock
mov
add
or
sbb
push
clc
pop
jg
inc
or
cld
mov
mov
pop
ret
pop
rcrl
mov
jbe
dec
incl
and
cmp
in
mov
xor
inc
sub
mov
ja
inc
clc
sub
enter
andl
cli
add
shr
inc
adc
and
jmp
cld
mov
lret
lods
dec
jne
insl
mov
push
mov
or
cmp
lea
repnz
pushl
add
sti
inc
jmp
xor
aad
aaa
pop
fistpl
js
pop
mov
pop
add
clc
xorb
ljmp
ss
test
into
je
stos
imul
cmp
test
fcmovu
shl
sbb
loopne
jo
fcmovnu
cmpsb
jne
es
jo
pop
push
add
aaa
push
lock
idiv
pop
iret
jb
mov
je
add
jmp
rorb
mov
lahf
lcall
pop
jg
lcall
lcall
popf
pop
cmp
je
push
push
push
sbb
mov
push
sti
je
cmpsb
push
add
inc
add
pop
sbb
push
push
xorb
push
sub
xchg
xchg
lods
add
jbe
lock
push
inc
addl
addl
or
movsl
inc
adc
pop
mov
paddusw
addr16
int3
aaa
in
push
mov
or
cs
and
xchg
mov
pop
hlt
push
mov
cmp
int3
xor
call
loopne
mov
mov
ret
inc
push
aas
mov
pop
adc
sub
mov
lret
lock
inc
adc
xor
addr16
stc
cmpl
jle
loopne
xchg
jle
pop
jmp
cmp
jge
in
sbb
inc
jle
add
pop
cltd
sub
sar
push
lods
sti
flds
enter
mov
pushl
ret
das
aad
pop
orl
inc
lea
cmp
lock
arpl
push
inc
xchg
mov
inc
and
jmp
xchg
xorl
jbe
inc
add
cmp
mov
adc
adc
or
push
pop
mov
push
int
stc
pop
clc
fwait
add
push
mul
or
test
jle
push
inc
inc
sub
push
lods
out
nop
add
push
jmp
sub
addl
and
mov
inc
pop
daa
orb
mov
pusha
push
sbb
mov
lock
pop
sub
movsl
push
jns
das
jmp
push
outsl
jp
push
scas
and
lea
push
xchg
push
xor
add
sahf
xor
mov
mov
int3
jge
imul
and
sub
pop
add
xor
shll
mov
je
pop
add
push
mov
inc
enter
ss
pop
pop
jo
push
pop
xchg
clc
fs
divb
add
adc
js
ret
ss
mov
movsb
mov
lret
sub
or
imul
cwtl
jbe
xor
adc
nop
sarl
adc
mov
roll
mov
je
adc
adc
jae
pusha
xchg
push
sub
lahf
aad
addl
popa
jo
cmpsl
mov
push
pop
cltd
or
jo
xchg
mov
jmp
sub
seta
clc
test
or
jne
jae
je
and
je
jge
test
pop
pusha
mov
das
push
pop
rcr
mov
mov
mov
rclb
inc
and
adc
pushf
cli
rcl
testb
fcmovne
aaa
or
lods
clc
adc
movl
insb
mov
loop
dec
xor
sbb
jge
push
mov
jnp
stc
mov
xor
jo
cmp
incb
push
pusha
shll
sbb
mov
pop
hlt
lea
add
cmp
jae
push
call
lock
and
adc
mov
add
cmpsl
push
jge
add
mov
push
cltd
or
jnp
jg
cld
jmp
xor
dec
hlt
jge
in
aas
xchg
jmp
ljmp
jl
and
mov
push
push
aad
adc
out
orl
pop
push
add
inc
js
leave
js
mov
insb
jg
and
shl
xchg
cmp
xlat
scas
adc
add
pop
mov
icebp
dec
pop
xchg
movlps
into
adc
push
loopne
push
xchg
loop
pop
pushf
hlt
push
xchg
dec
hlt
aam
adc
lret
dec
mov
ja
movsl
mov
sbb
mov
ret
sub
push
nop/reserved
push
push
pushf
push
xchg
in
mov
ret
lahf
cwtl
jge
imul
pop
ror
jmp
les
shrb
sub
push
or
or
push
cmp
or
mov
push
movb
icebp
mov
xchg
repz
adc
add
sbb
ja
mov
into
jl
mov
mov
adc
cmp
jle
dec
sub
cmp
jle
and
cmp
jne
std
add
or
jmp
push
movntq
out
xor
fbld
das
leave
pop
adc
mov
push
lea
lea
pop
mov
xor
repz
test
pop
jae
xor
stos
mov
inc
push
inc
fdivrl
out
mov
or
cmp
cwtl
xor
pop
cmpsl
cmpl
imul
xadd
data16
aaa
sbb
push
jbe
mov
adc
jle
lahf
lock
jb
lea
aam
and
popf
cmp
jl
lea
push
or
inc
add
fstps
icebp
adc
je
mov
ret
push
push
inc
xor
mov
jo
subl
pop
dec
jp
fimull
aas
cmp
je
cld
shlb
jmp
inc
add
xchg
pusha
xchg
push
daa
shlb
out
cmpl
mov
int3
loopne
add
dec
sbb
adc
jmp
scas
shlb
cmpl
out
adcl
sar
xor
dec
jne
in
sbb
sub
rcl
movsb
cmp
je
clc
dec
sti
aam
fimuls
adc
cmp
mov
gs
adc
cld
pop
or
add
adc
adc
divl
or
pop
pop
shrb
dec
xor
out
enter
xchg
jne
mov
or
je
add
inc
lock
mov
cld
sub
mov
arpl
mov
ret
cmp
jg
mov
popf
add
add
xor
and
jg
pop
mov
out
mov
out
js
mov
sub
sub
add
into
push
push
add
push
sbb
test
push
xor
cmp
hlt
adc
dec
adc
mov
hlt
cli
jge
xor
inc
inc
in
jb
mov
ficomps
cmp
iret
push
add
cmovo
sahf
out
adc
pop
test
or
aaa
cmpsb
pop
push
aad
pop
or
cli
push
loope
andb
in
imul
addb
inc
hlt
call
mov
push
or
insb
inc
fiaddl
mov
cmp
addl
xchg
pop
pushf
adc
or
pop
rcl
jg
cmp
ret
push
cmp
jle
xor
push
fildl
loope
jae
or
xchg
push
out
cmpsb
vmread
popa
cmpsb
pop
outsl
cmp
add
fisubl
adc
jle
and
push
mov
push
xor
push
rcrl
gs
add
out
jg
stos
push
je
or
or
pop
or
and
pop
jne
dec
push
adc
call
pop
adcb
add
jb
pop
lea
pop
jne
ds
fsub
dec
push
add
mov
shrl
aaa
je
cmp
aaa
cmp
loop
push
push
push
mov
pop
stos
ja
jmp
sar
push
sbb
push
add
cld
adc
fisubl
cmp
jo
inc
sub
pop
ret
adc
mov
push
inc
or
and
data16
jne
mov
and
jno
cmp
jne
push
push
push
sbb
xorb
cld
js
push
je
xchg
push
push
pushf
rorb
iret
sub
mov
push
rolb
sub
lods
hlt
ret
xchg
ret
rorb
pop
stc
sub
pop
jle
pop
sub
fmull
xor
aam
pop
jp
add
inc
or
sbb
sarl
out
mov
and
fdivs
enter
mov
idivl
aam
rorb
mov
aam
jns
movb
movl
aam
pop
into
cld
jge
or
hlt
gs
inc
cld
mov
adc
add
add
add
mov
push
jmp
insb
xchg
lret
mov
je
subl
adc
jb
inc
icebp
or
pop
cmpsl
dec
hlt
dec
add
adc
sbb
adc
loop
loop
sar
inc
pushf
int3
icebp
mov
sub
push
xchg
push
cmp
jne
cmp
je
push
mov
jg
xor
inc
cmp
or
sub
xor
add
loop
lds
mov
or
push
rcll
cmpsb
ds
jmp
push
rolb
arpl
clc
and
ja
mov
jo
sub
mov
inc
cmp
loopne
lods
sub
lea
push
lea
push
inc
push
inc
daa
push
lock
adc
sbb
jg
jg
aas
add
fisubs
inc
push
push
mov
loop
push
add
push
test
mov
xchg
loopne
dec
mov
mov
stos
or
rep
int
rorb
cmp
mov
jne
mov
cmp
jb
clc
imul
add
cmpsb
jae
adc
mov
les
lea
notb
ljmp
add
ja
push
push
push
mov
sarb
or
jle
test
xchg
mov
pop
psrad
push
inc
add
jl
or
or
add
rolb
sub
clc
rorl
test
push
je
cmp
jle
mov
scas
adc
inc
sbb
push
or
mov
or
movsl
pop
cmpsl
or
xor
pop
popa
and
ja
and
cmp
add
mov
pop
loop
add
mov
adc
arpl
mov
loopne
push
ret
es
arpl
lock
pop
ret
jb
adc
incb
jno
sbb
cmpb
sub
mov
je
push
cmp
inc
push
pop
or
mov
in
mov
ljmp
dec
or
sbb
lods
mov
test
andb
ds
pop
mov
add
insb
int3
mov
sahf
adc
orl
push
cmp
in
nop
fcmovbe
testl
test
pushf
cmp
out
adc
cmp
sub
shr
and
mov
jge
mov
xchg
adc
sbb
push
cmpsb
cmpsl
inc
cmp
and
xor
jge
cli
pop
je
lea
jmp
dec
loopne
pusha
mov
sti
fsubs
gs
loope
js
aaa
repnz
sub
sub
mov
adcl
mov
cmc
in
jno
leave
mov
jl
rclb
fdivp
jg
test
adc
sbb
jmp
or
fnstsw
pop
pop
dec
add
add
push
cwtl
mov
jmp
call
mov
or
stos
add
xchg
test
mov
jmp
cmp
xchg
dec
push
lods
in
sbb
incl
push
jge
clc
in
mov
movb
adc
or
add
out
jne
lock
sbb
push
xor
movsl
xchg
add
clc
aaa
incl
add
adc
in
decb
cmp
jl
pop
je
test
in
aam
adc
push
xchg
pop
loopne
mov
in
dec
push
inc
aas
cmp
cmpsb
and
jnp
add
adc
adc
stos
clc
push
lea
incb
jnp
mov
sub
add
and
je
or
push
bound
sarb
add
or
jo
push
in
rcrl
cmp
add
dec
mov
jns
mov
pop
xchg
hlt
sub
mulb
jo
or
inc
or
shl
mov
or
cmp
rep
enter
arpl
add
icebp
dec
push
outsl
sbb
popf
mov
jle
add
sbb
rcll
mov
and
pop
or
sbb
jbe
push
or
stos
dec
aam
mov
fbstp
pop
or
pusha
fnstsw
dec
repnz
jl
add
pop
inc
or
pop
int
add
stos
mov
mov
je
clc
push
sti
pusha
subl
inc
sub
insl
cmpsl
push
sub
test
adc
sub
dec
and
ja
dec
jmp
divl
ljmp
ficompl
add
xor
and
jmp
cmp
shll
es
out
mov
ds
clc
mov
xor
fucomi
aas
js
cli
adc
push
cmp
je
xchg
mov
pop
dec
mul
seto
out
neg
or
push
fmull
cld
inc
sbb
mov
adc
sbb
ret
mov
imull
jbe
dec
jecxz
imul
add
dec
lods
nop
sub
roll
rorl
or
xchg
jmp
sti
jne
cmp
xor
es
lds
movl
push
push
jmp
pop
lock
jmp
imul
movsl
loop
or
lret
in
lcall
jbe
in
jae
or
pop
shlb
addl
lret
je
add
inc
lret
push
pop
pop
and
push
test
lret
loop
or
jecxz
or
int3
ret
adc
add
pop
pop
sbb
scas
pop
ljmp
pop
fdivs
addb
pop
repz
sbb
inc
cmp
testb
jmp
stc
loopne
mov
leave
lret
jg
add
cmp
ja
lea
lea
push
shrl
loope
dec
and
lock
roll
rorb
inc
push
sub
push
push
xlat
pop
cs
jns
out
adc
out
sbb
sbb
mov
bound
pop
sub
roll
jo
loopne
or
xchg
clc
div
sbb
dec
or
mov
mov
inc
sbb
in
adc
sbb
add
mov
sub
js
cmp
inc
sbb
or
pusha
popa
push
loope
pusha
and
ficompl
mov
dec
adc
and
adc
andl
test
fcmovbe
or
sub
lock
in
fbld
mov
jb
cmp
ja
pushf
cmp
or
inc
inc
aaa
repz
popa
push
inc
push
xchg
jle
je
dec
je
add
push
sbb
add
lahf
lods
loopne
mov
mov
push
inc
sub
mov
pop
aas
loop
add
loopne
je
mov
or
shlb
je
mov
mov
mov
mov
cmp
je
or
mov
cmp
addr16
je
cmp
jne
incb
cmp
mov
sbb
add
pop
dec
lea
add
pop
popa
add
jb
mov
dec
xor
mov
push
lock
testb
je
testl
shrb
sbb
cld
cmp
jbe
aas
xchg
jo
or
cmp
je
or
sub
inc
jmp
inc
and
loop
xor
cmp
mov
test
push
lcall
mov
jg
cmp
cmp
je
mov
lea
ss
movsl
sahf
clc
add
lock
and
in
test
jle
add
cmpl
push
cmp
jne
neg
dec
test
insb
jne
jne
shlb
cmpsb
movb
xchg
jb
mov
outsb
outsl
or
ja
mov
and
andl
inc
cld
push
add
push
lea
push
sbb
dec
and
inc
sub
arpl
and
mov
stos
out
lea
sbb
inc
movzwl
data16
mov
mov
out
clc
jmp
add
shrb
ljmp
push
shl
add
jmp
pushf
aas
je
and
cmpsb
and
hlt
push
popa
mov
jns
test
jne
xor
pop
jl
dec
lock
std
pop
mov
dec
or
jo
pop
jae
mov
jmp
test
inc
test
xchg
mov
popa
sub
lock
shl
cmpsb
sbb
call
mov
adc
xchg
or
dec
pop
inc
push
lret
or
or
jge
int
lods
rolb
or
jle
es
sub
dec
int
push
sub
jmp
or
jl
or
adc
inc
xlat
outsl
pusha
je
lea
mov
loopne
xor
inc
lock
jbe
mov
popa
test
xchg
and
daa
jo
add
je,pn
test
jne
je
add
jl
insb
and
inc
outsb
pop
inc
test
push
dec
xor
mov
je
inc
mov
xchg
into
out
jmp
adc
mov
inc
xchg
add
loope
mov
push
mov
inc
and
sub
fsub
jb
je
scas
nop
and
jecxz
jbe
jmp
mov
subl
inc
and
and
jge
inc
mov
adc
sub
inc
sti
push
dec
mov
pop
push
movl
mov
sub
mov
and
adc
adc
dec
mov
xor
jp
pusha
std
pop
je
mov
push
clc
in
push
mov
adc
outsb
lock
outsb
sub
testl
mov
insl
movsb
inc
cld
jmp
sbb
lahf
push
or
dec
fwait
cmpb
lea
movb
push
aaa
popf
sub
pushl
xchg
loop
cmp
pop
and
mov
push
xor
pusha
movb
inc
cmpl
xchg
add
mov
scas
pop
loop
or
xchg
sbb
pop
pushf
xor
mov
movsb
mov
mov
mov
mov
rcrl
sub
push
in
into
inc
inc
and
jnp
push
xchg
repz
jo
js
jae
cmp
je
mov
and
mov
push
push
andl
and
sbb
sti
mov
add
mov
popa
sub
and
daa
dec
adc
cs
push
and
xchg
and
push
mov
or
hlt
add
inc
mov
xor
pop
dec
jo
xor
push
stos
test
jo
inc
sub
and
out
pop
cmp
sbb
jl
add
cmp
add
push
sbb
sub
adc
push
cmp
pop
push
or
push
pop
push
imul
sbb
xorl
pop
pop
add
lock
mov
rorb
leave
adc
scas
add
fcos
pushl
decl
pmuludq
sub
pop
sti
pusha
jb
orb
cmp
xchg
and
cld
push
orl
rcrl
ret
pushf
jl
jnp
jp
out
mov
dec
dec
ja
pushf
mov
fs
loope
dec
push
scas
inc
loope
je
call
inc
in
adcb
outsb
xor
in
lock
jbe
and
inc
xchg
push
mov
clc
lods
cltd
test
outsl
mov
test
and
inc
add
xor
out
popa
pop
or
popf
nop
sub
lods
inc
fstl
mov
cmp
or
push
mov
xchg
cmp
cmp
xchg
jmp
push
pop
adcb
mov
cli
test
sub
data16
idivb
fdivrp
cmp
inc
adc
cmpb
xlat
and
mov
repz
dec
or
test
sahf
test
mov
leave
cmp
ret
sbb
cmp
std
add
rorb
testl
dec
les
xor
rolb
jmp
sub
and
cmp
test
add
jnp
cmp
test
push
sbb
lret
pop
jne
mov
test
dec
pop
pop
mov
movl
inc
add
cmpl
push
nop
adc
movsl
fisttps
std
rclb
inc
cmpl
insb
pusha
mov
and
loop
shll
adc
test
lea
cmp
je
js
cmp
cmpb
mov
inc
inc
inc
ljmp
loope
mov
inc
push
cmp
pop
sub
jmp
es
cli
push
out
stos
mov
test
mov
pusha
sbb
faddl
pop
stc
roll
sbb
jb
xor
hlt
push
ret
pushf
lret
scas
es
aas
lcall
inc
mov
fmuls
je
xchg
aam
pop
pusha
pop
mov
shlb
je
inc
jge
and
push
cmp
je
adc
or
jne
mov
test
mov
pop
sti
jae
xchg
pop
jmp
cmp
jne
js
test
es
std
aam
cmp
faddl
lcall
jae
sub
xchg
jg
sbb
xor
leave
sbb
and
ss
ficomps
mov
jae
pop
lea
cmpl
clc
cs
out
repnz
inc
mov
loopne
aas
pop
add
int3
push
lods
divb
adc
movsb
jmp
inc
sub
jns
insl
in
adc
pop
je
imul
push
or
mov
ja
adc
xlat
sbb
add
dec
je
add
mov
add
mov
xchg
scas
pop
and
or
mov
push
mov
sub
xor
scas
in
cmp
jno
or
push
pop
fiaddl
inc
or
jmp
fcmovnb
push
cmp
lock
adcb
inc
add
cmp
sbb
inc
movsl
push
mov
pop
jg
dec
cmp
push
mov
aaa
mov
pop
mov
pushf
popl
jbe
or
mov
xor
or
sub
xchg
lret
in
sub
xor
cmp
cmp
subb
or
test
das
push
push
int3
rclb
arpl
push
ds
inc
sub
addr16
ss
and
inc
and
push
push
lock
notb
dec
push
sub
or
dec
xlat
aas
adc
mov
adc
insl
xchg
stos
fmuls
push
add
fiadds
mov
or
inc
adc
push
add
insl
add
cltd
sarl
test
sub
incb
inc
mov
jnp
add
pop
es
decl
add
daa
mov
jmp
pushl
jecxz
in
addb
sub
mov
add
pop
sbb
cmpsb
pop
fisubrs
jmp
in
or
push
jp
int
call
jmp
sarl
mov
div
pop
shll
or
or
sti
and
add
or
inc
sub
inc
lea
mov
out
add
sbb
fnstsw
and
lea
mov
clc
sub
cmp
cmc
test
hlt
idiv
mov
lea
cmp
outsl
adc
adc
mov
enter
arpl
lods
clc
cmp
test
push
push
mov
xchg
cs
push
mov
lods
pop
scas
add
inc
xor
sti
in
adc
mov
test
lods
lds
xor
fdivrs
sub
add
cmp
mov
cmp
adc
jo
jne
mov
cwtl
sbb
cmpsb
mov
int
lods
sbb
ret
pop
clc
xchg
mov
test
arpl
sbb
mov
push
adc
rcl
or
aam
xchg
and
push
fiadds
shll
in
inc
and
lea
cmp
cs
cmp
xorb
into
xor
inc
rcll
mov
adc
sbb
xor
mov
je
or
daa
push
les
dec
add
into
jp
xor
les
cmc
nop
aas
js
or
cmp
vmwrite
incl
cmp
or
testl
or
movsl
xchg
push
add
out
shrl
hlt
int3
cmpb
clc
jne
push
pop
inc
sub
or
mov
aaa
add
jge
cmpsl
and
mov
je
divb
push
les
imul
mov
fstpt
or
sbb
div
shrb
and
test
add
and
cltd
sti
push
or
rorl
fimuls
inc
enter
sahf
push
loopne
inc
arpl
push
test
stos
sbb
mov
pop
and
fidivl
and
shrl
pop
enter
pop
add
cmp
jb
or
inc
xlat
jmp
cld
push
rclb
mov
push
pop
call
icebp
das
add
push
sbb
push
inc
addb
jg
sub
push
popa
add
and
out
aaa
mov
or
xchg
out
jmp
or
pop
mov
xchg
addr16
mov
push
rclb
hlt
test
push
mov
fsubrl
je
jo
add
test
push
out
aam
je
xchg
mov
inc
pusha
mov
aad
scas
xchg
xor
in
scas
jmp
mov
popf
and
aad
dec
cld
and
mov
push
loopne
movsl
movsw
fimull
mov
loopne
and
adc
add
or
andb
jle
sub
cmp
fsub
lods
popf
es
push
adc
dec
sbb
inc
aaa
aaa
lock
int3
pop
push
test
icebp
adc
mov
inc
je
or
popf
ficoml
jae
add
and
mov
movsl
push
inc
pop
adc
add
clc
jmp
sub
xlat
and
add
adcl
xchg
sbb
add
mov
shrl
lods
clc
test
clc
insl
movsb
adc
add
jo
scas
cltd
gs
cmpsb
sbb
cmc
adc
push
insb
sbb
testb
mov
jb
mov
dec
mov
xor
pop
adc
lods
xor
or
dec
jne
pusha
andb
subb
call
jle
and
adc
int3
push
lock
or
in
shr
stos
jmp
inc
loope
cmp
push
and
xchg
mov
scas
test
rolb
dec
xor
xor
or
call
dec
and
add
aas
pop
addr16
sub
xchg
enter
xchg
jo
mov
push
pop
test
in
test
imul
mov
xchg
rcl
add
lret
shll
sbb
popa
sub
xor
scas
pop
ret
mov
insl
and
js
inc
mov
daa
inc
mov
das
pushf
inc
cmp
jl
jmp
shr
xor
pop
mov
scas
fistps
rorb
sbb
add
lock
inc
mov
test
xor
aas
movsl
test
ss
push
cmp
jnp
sub
mov
sbb
stos
nop
add
jnp
or
mov
mov
push
and
inc
push
push
scas
lret
xchg
ffreep
jbe
je
addr16
mov
push
call
loopne
out
dec
mov
loopne
in
aaa
cmp
jo
push
outsl
mov
mov
sbb
pop
rorb
adc
or
inc
inc
fiaddl
inc
inc
add
add
pop
sbb
inc
sbb
mov
fstp
sbb
xlat
pop
push
or
jae
xor
frstor
or
popa
pop
mov
pop
ljmp
cmp
stos
inc
pop
cmpsl
jg
add
pop
push
push
in
ret
push
out
addl
sbb
add
or
and
inc
jmp
push
push
test
stc
js
push
add
lock
add
cmp
fdivs
bound
xor
das
clc
lcall
ss
lods
push
mov
add
add
dec
gs
mov
mov
mov
cmp
test
pop
ret
jmp
adc
fidivl
push
iret
sahf
pop
lods
xor
popa
or
cld
cmpsl
jo
movb
pushf
mov
cltd
pop
pusha
in
cltd
imul
cmp
movl
jbe
xchg
lds
popf
add
mov
movsb
xor
lcall
jbe
addr16
mov
cwtl
push
sbb
fimull
cmp
pop
iret
mov
mov
sub
xor
push
stos
pop
or
xlat
call
loopne
jmp
lods
pop
bound
or
rcrb
clc
xor
imul
mov
int3
cmpsl
loopne
mov
sbb
or
push
sub
loopne
jo
mov
repz
or
adc
xchg
jbe
sub
ja
int3
shlb
movntq
xor
inc
out
cmp
cwtl
pop
mov
xorb
inc
bound
clc
add
andb
mul
ret
movsl
clc
mov
push
js
pusha
gs
imul
push
cs
aam
or
lock
push
or
shrb
fnsave
adc
pop
test
fsubrl
push
push
jge
cld
lcall
cmp
and
ds
cmpsl
jnp
popa
adc
pop
int
aaa
js
sbb
inc
notb
fnstcw
inc
fbstp
sub
es
fdivrs
pop
sbb
push
movsb
or
push
sbb
sbb
jl
sbb
daa
mov
inc
fs
adc
pop
shll
dec
arpl
add
aam
and
es
push
sub
cld
sub
add
push
xorl
or
inc
add
mov
add
push
adc
ss
cmpsb
imul
out
or
adc
xchg
iret
nop
inc
add
xchg
jo
and
xlat
cmp
sub
add
insl
fcomps
lods
xchg
add
loopne
push
or
fbstp
movsl
push
pop
xchg
jmp
pop
and
add
dec
pop
or
add
mov
fldcw
add
add
pusha
out
add
or
sbb
xchg
and
add
jns
and
push
enter
gs
add
mov
xor
fistps
sbb
mov
xchg
pop
mov
icebp
jno
sbb
int3
movhps
push
lock
push
out
or
mov
popa
inc
mov
pop
sahf
mov
fsubl
xchg
movb
mov
jnp
je
mov
pushl
pusha
fs
lea
cmp
jbe
cmp
jbe
test
out
mov
sbb
mov
enter
add
icebp
push
jb
outsl
aas
mov
mov
sub
sbb
fxch
push
sbb
adc
outsb
jnp
dec
xor
or
mov
adc
pop
lea
cpuid
mov
lds
mov
xor
jmp
in
or
and
test
int
cmp
push
ss
inc
test
out
pop
xchg
pop
add
sub
jge
inc
or
mov
inc
add
inc
dec
test
mov
xchg
mov
arpl
push
js
xchg
loope
add
sti
jno
scas
xor
es
inc
push
push
cmp
jbe
mov
mov
lea
or
inc
and
mov
push
pop
xor
dec
inc
push
pop
inc
xor
daa
and
std
cmp
insb
ja
sub
mov
daa
push
mov
test
xchg
push
mov
jno
das
sahf
subl
jmp
fcmovnb
sbb
stc
ja
dec
das
push
or
jmp
push
pop
mov
or
push
push
adc
jle
sub
jbe
sbbb
ret
mov
xlat
jge
ret
push
jmp
cmp
jb
jb
nop
leave
add
fs
inc
or
push
cmp
lods
jns
lods
movl
mov
aas
add
xor
inc
lea
cmp
fsubl
jge
rcl
and
or
push
lea
icebp
jge
popf
cmp
sub
xor
mov
ror
lret
es
or
xor
aam
stc
fdivrl
aam
fidivl
test
cmp
rorb
testl
inc
xchg
jg
and
add
xorb
test
stos
std
sbb
inc
cmp
bound
sbb
or
jl
popa
cmpsl
xchg
adc
adc
test
aad
mulb
inc
rorb
sbb
sbb
and
push
dec
xor
data16
mov
adc
adc
mov
sbb
mov
push
iret
nop
add
inc
cmp
xor
dec
iret
out
enter
faddl
mov
jb
sub
sbb
femms
orb
push
hlt
loopne
sti
mov
inc
sbb
cmp
and
inc
mov
push
jns,pn
std
or
test
jge
mov
xor
cmp
mov
test
xchg
jo
cltd
cltd
fadd
popf
jmp
lret
hlt
add
push
push
dec
lods
lock
sub
rcr
mov
cmp
push
mov
sbb
orl
aas
adc
divl
cmp
jge
add
sbb
sub
mov
inc
or
pop
inc
sub
inc
and
jmp
loope
hlt
inc
adc
ds
and
cmp
dec
add
jns
xor
rcrl
jb
sbb
adc
adc
xchg
mov
lea
cmpb
jne
xchg
jmp
or
inc
mov
test
inc
call
sbb
or
out
jp
stc
push
mov
pop
push
scas
inc
into
jmp
xchg
mov
mov
push
inc
cmp
clc
mov
xor
out
lahf
add
cmp
cmp
cmp
cli
jle
add
sbb
or
pushf
dec
jb
pop
xor
sub
push
sub
xor
push
mov
aam
xor
push
movsl
push
mov
or
cli
mov
pop
out
mov
je
cmp
js
popf
enter
xchg
into
sti
insb
pushf
add
ret
pop
and
xorb
jne
xchg
cmp
jp
mov
sbb
mov
jno,pn
aam
mov
jge
sub
add
mov
push
adc
mov
sub
loope
push
sbb
mov
or
push
mov
xchg
jp
push
mov
xor
scas
cli
jle
pushf
and
aas
dec
shlb
or
cmp
mov
cmp
and
loopne
push
mov
ficoml
testl
fisubrl
jnp
jb
movzwl
push
sub
pop
push
test
push
inc
pop
push
dec
pop
xchg
loopne
add
dec
lcall
orb
loope
add
sub
push
push
push
stos
nop
push
sub
push
icebp
rcrb
movb
xchg
pop
pop
cld
push
lahf
das
mov
adc
lea
popf
mov
add
cld
repz
or
mov
cs
jle
dec
push
aaa
push
or
pusha
jle
fwait
push
test
pop
fidivrl
sti
sub
aad
pop
push
sti
test
push
cmp
js
push
mov
mov
and
and
sbbl
xor
xor
ds
dec
dec
hlt
mov
sbb
inc
sub
mov
sub
and
repz
arpl
int3
pop
lret
mov
mov
mov
mov
sub
and
add
add
dec
sbb
jne
loope
out
les
push
pop
fdivrs
push
sbb
mov
inc
mov
in
loopne
adc
shl
jg
push
cli
jmp
cmpl
cmp
in
sub
rorb
mulb
push
fcoms
lock
dec
mov
cmp
pop
pop
stos
dec
mov
cmp
jo
mov
movsb
shrl
iret
cmp
or
test
jl
fstpl
jne
and
dec
sub
je
jecxz
stos
kmovb
lods
cmovnp
jbe
cmp
add
mov
pusha
inc
adc
push
sbb
pop
cmovo
faddl
cmpsl
xor
mov
lea
repnz
test
pop
sub
mov
das
in
and
enter
dec
jne
lea
xchg
in
and
std
loope
sbb
ljmp
pop
xor
je
js
mov
jmp
jae
sub
fadds
js
push
cmp
push
push
inc
pop
dec
aad
bound
cmp
cmpsl
mov
adc
dec
push
cmc
xor
rcr
cmova
cmc
lea
push
in
sbb
js
call
sub
ret
dec
aad
fsts
lcall
push
xchg
dec
xchg
add
add
in
and
gs
enter
rorl
or
outsl
fistpll
imul
nop
push
jbe
add
dec
out
mov
mov
lahf
lea
push
mov
add
mov
test
or
fwait
imul
xor
inc
iret
enter
cmpl
adc
neg
sbb
inc
lea
cmp
xchg
je
pushl
pop
mov
and
push
inc
adc
sbb
leave
adcl
psubsw
idivb
test
mov
dec
pop
aas
jne
sub
insl
push
pushf
lods
adc
std
lahf
pop
inc
adc
imul
dec
lea
cwtl
test
add
test
shlb
or
imul
push
add
inc
or
call
sbb
repnz
mov
add
push
leave
mov
loopne
fs
mov
in
add
lods
test
fimuls
xor
outsb
bound
mov
sbb
add
hlt
or
cmp
mov
add
push
mov
push
xorb
adc
inc
pop
push
dec
or
sbb
addr16
loop
mov
or
inc
xor
sub
inc
test
pop
dec
je
dec
add
or
dec
pop
or
js
dec
daa
jmp
lcall
xchg
jle
sub
orl
daa
mov
dec
xor
shlb
jae
lea
sbb
mov
cmp
inc
cmp
jbe
mov
pop
enter
lods
pop
lret
mov
push
mov
je
in
call
mov
shrb
inc
hlt
sbb
fsubrl
in
sub
inc
fsubs
xchg
pop
push
xor
push
insb
sbb
adc
dec
sub
inc
addr16
xor
into
repz
stos
test
pop
leave
wrmsr
xchg
cld
add
ficoml
push
jo
push
sbb
fisubrs
repnz
jecxz
fiadds
and
pop
imulb
cmp
loopne
inc
mov
clc
or
xchg
fiaddl
mov
mov
xchg
inc
out
fisttpll
movsb
push
jae
inc
pop
push
add
jo
clc
pop
aas
xlat
and
nop
or
lahf
lock
and
or
xchg
jle
int3
rolb
nop
add
add
mov
jp
mov
aam
sbb
push
mov
add
jecxz
les
lock
test
sbb
dec
daa
clc
mov
clc
test
dec
mov
sub
xchg
sarl
jbe
movsl
flds
test
xorl
and
add
sbb
rorb
xchg
cmp
mov
shlb
inc
in
or
pushl
pop
lock
jmp
sbb
cwtl
xlat
js
add
mov
xor
mov
fcomi
mov
pushl
add
xchg
push
mov
out
je
pop
shrl
out
adc
or
add
dec
fiaddl
int3
out
pop
fisubl
push
add
lods
adc
and
xchg
mov
or
xor
add
lods
popa
jb
shrl
inc
mov
xchg
push
add
jo
xchg
xor
stos
pusha
shlb
add
mov
cltd
loope
adc
jbe
mov
push
insl
inc
test
mov
adc
shlb
cli
xorl
dec
cmp
jno
cmpsl
pusha
stos
testb
lahf
test
sub
mov
insl
ret
jecxz
lretw
mov
mov
jnp
cmp
push
rcrb
rorl
cmp
add
xor
cmp
fnstenv
cld
je
test
dec
dec
dec
clc
jne
int
imul
add
aaa
add
lea
push
cld
cmp
cld
loopne
stos
es
xchg
sbb
add
dec
sub
xchg
sbb
xchg
mov
hlt
hlt
out
jb
jns
or
sbbl
pop
lea
add
jno
call
jmp
mov
lock
push
js
loopne
xchg
sub
adc
loopne
fnstenv
rcrl
push
mov
rclb
stc
repz
xor
xlat
fisubs
add
daa
jmp
xlat
mov
push
inc
push
cmp
push
pop
adc
xchg
mov
mov
icebp
orl
shlb
xor
pop
cs
aad
xchg
popf
out
adc
add
cmp
sub
push
hlt
neg
sbb
and
pop
mov
fdivs
mov
sub
push
jmp
adc
adc
aaa
lods
push
mov
popf
dec
jp
fs
and
outsb
jb
pop
adc
mov
inc
mov
pop
dec
dec
cmp
ficomps
jb
das
sub
aaa
mov
or
test
ja
nop
add
leave
lea
add
add
and
mov
mov
in
mov
lods
cmpl
jne
stos
fdivs
or
notl
ret
push
mov
ja
inc
pop
jo
sbb
dec
mov
mov
insl
push
int
stc
mov
jmp
fst
lea
fistpll
adc
test
jae
psubd
int3
out
jecxz
idivl
shrb
ret
das
dec
jg
jg
sbb
les
sub
sti
pcmpeqd
in
or
lea
push
lea
mov
sti
jl
aam
test
jg
sub
add
xchg
sub
or
push
sbb
gs
cmp
bound
negl
adc
sbb
adc
setne
pavgb
sbb
je
scas
ret
or
mov
pop
xchg
fiaddl
in
xorb
loope
and
ret
push
sbbl
dec
push
adcl
andl
les
cmp
ss
sbb
cmp
popa
rolb
int3
test
adc
push
push
test
and
and
out
push
call
dec
cmpb
in
adc
sub
iret
push
dec
add
xor
mov
xchg
out
mov
aad
enter
jo
out
xor
add
and
mov
nop
cmp
cmp
or
xchg
inc
pop
loop
rolb
or
or
pop
jmp
fwait
push
subb
pop
xchg
test
or
xchg
stc
insb
ja
bound
cmp
inc
cmp
lock
or
jae
cmp
mov
inc
cmp
push
sahf
lock
iret
xor
mov
jle
mov
or
push
mov
int3
jb
push
jae
sub
imul
inc
push
pop
and
cs
cmp
out
mov
sbb
mov
clc
ja
add
push
mov
test
pusha
je
enter
cmp
pop
push
fs
cmp
testb
sub
dec
js
xchg
fnstenv
icebp
mov
ja
sahf
mov
mov
and
cmp
pop
pop
repnz
inc
cli
push
and
call
icebp
push
sbb
or
nop
jne
jecxz
les
and
push
ficoms
loopne
je
call
cmp
in
das
int3
daa
imul
jmp
ficompl
mov
mov
jb
jmp
push
movsl
add
cmpsb
mov
xor
jne
add
ljmp
add
add
test
mov
jge
ss
mov
mov
in
jmp
test
lds
cmp
packsswb
test
dec
xlat
cs
jnp
and
fsubrl
loopne
jl
sub
rol
and
ret
add
jnp
loop
ds
or
js
rorl
je
inc
jle
mov
fcmovnb
gs
and
loop
xchg
and
or
xchg
mov
pop
adc
clc
add
adc
cmp
mov
xchg
adcb
sbb
movsb
xchg
jae
and
dec
pop
int3
incb
bound
sub
or
je
mov
push
lds
inc
adc
cld
dec
push
idivb
int3
or
out
movl
into
cmp
unpckhps
pop
inc
gs
loopne
fmull
push
add
inc
loope
in
fiadds
cltd
mov
add
and
fwait
sub
xchg
xchg
mov
pop
hlt
jmp
mov
sub
fsubs
in
push
pop
jle
cmp
lret
idivl
mov
call
test
push
sbb
addb
aas
push
push
mov
xchg
add
mov
jno
aaa
or
je
sub
out
jb
decb
xchg
sub
add
push
inc
xchg
lea
adc
pop
sub
mov
xor
out
into
mov
or
inc
push
fistpl
inc
dec
sub
push
or
add
in
lret
add
jne
jnp
adc
mov
jae
inc
inc
lock
adc
push
jne
add
scas
sbb
lea
xchg
dec
add
jo
int3
lods
ja
shlb
daa
clc
lock
xchg
cmpl
addr16
cmp
xor
insb
fildll
hlt
shll
stos
cwtl
xor
adc
dec
jnp
or
mov
test
gs
jmp
jno
pop
xchg
sbb
jg
sti
in
push
stos
adc
pop
rorl
jmp
push
and
fdivs
sub
xor
adc
lods
pusha
mov
dec
push
notl
add
push
xorb
cmp
push
or
shll
add
fnstcw
and
jne
pop
test
mov
lea
dec
push
aam
cmpsl
data16
adc
lret
decl
loopne
push
icebp
and
push
add
mov
add
pop
and
cltd
rcrb
cmp
push
shll
mov
je
jle
rolb
inc
jae
and
jb
adc
jmp
imulb
movsb
leave
shll
aam
xchg
mov
push
adcb
xchg
ss
push
xchg
cmpsl
jge
jle
push
in
cmp
in
scas
mov
ret
cmpsb
inc
rolb
add
addb
xchg
mov
aad
sti
and
mov
in
scas
mov
outsb
les
xchg
mov
mov
mov
add
xor
mov
sbb
add
xor
mov
jnp
xchg
dec
or
dec
adc
mov
jo
sub
mov
mov
inc
loop
or
movsl
sahf
mov
jno
push
cli
cs
jge
or
imul
add
adc
lret
cmpsb
pop
pop
mov
int
xor
or
adc
inc
or
and
mov
fadds
js
mov
mov
xor
arpl
or
mov
icebp
bound
sbb
add
push
in
push
and
test
or
sbb
dec
mov
or
jmp
clc
mov
push
mov
mov
test
je
cmp
fstl
out
loop
cmpb
ret
push
jae
lea
pop
sbb
sbb
xlat
push
push
jns
idiv
inc
daa
lcall
dec
pop
gs
sbb
mov
jl
mov
dec
add
testb
gs
push
pop
jmp
cmpb
cmp
jae
inc
jmp
push
subb
nop
dec
mov
mull
pop
xchg
pop
adc
pop
xchg
pop
fs
sbb
cmp
add
jmp
rcrb
add
fdivs
out
mov
mov
push
sti
xor
xchg
cmp
mov
xchg
icebp
push
das
cmp
xchg
xchg
sub
testb
mov
cmp
or
mov
push
push
sub
out
shlb
cmp
sbb
push
in
fcoms
mov
mov
lret
call
out
shl
fiaddl
jmp
cmpsl
mov
pop
push
push
addr16
or
test
jecxz
and
or
pushf
jge
sub
pop
jg
mov
jns
push
or
add
lret
jo
push
cmpsb
cmp
sub
xor
xor
mov
bound
sbb
jnp
xor
inc
adc
mov
fidivl
paddd
add
stos
pop
ja
pop
sub
push
inc
or
add
and
lock
xor
inc
inc
xchg
xchg
sub
mov
aaa
jmp
pop
add
add
push
pop
cwtl
cmp
inc
loop
arpl
daa
dec
inc
out
and
out
out
cs
sub
lods
xchg
data16
push
xor
and
ja
imul
movsl
sbb
xchg
push
incl
fprem
jp
test
lea
jmp
in
imul
xor
cmp
xor
jo
dec
sbb
cmp
iret
pop
push
or
xchg
cwtl
inc
add
mov
out
iret
mov
das
shlb
shll
mov
xor
lods
push
mov
cmp
mov
add
jmp
mov
cmp
jne
mov
inc
ljmp
dec
push
sub
xlat
popf
rorl
sbb
xchg
imul
jae
mov
adc
lods
aad
xchg
repnz
test
es
in
ficoml
mov
mov
fmull
add
shll
int
sub
add
movsl
cmp
lret
inc
call
mov
xchg
xor
into
pop
imul
jne
cmp
push
imul
imul
ret
dec
fcoms
sbb
popa
call
dec
inc
lcall
mov
pop
adc
or
mov
dec
add
xchg
sub
cmp
rcl
mov
or
mov
or
clc
cmpsb
mov
daa
push
jo
std
fstps
and
sbb
sbb
jge
xlat
xchg
push
sbb
sbb
inc
or
pop
sbb
shrb
and
and
sub
xchg
mov
jg
mov
mov
pop
mov
lahf
mov
mov
mov
ss
imul
maskmovq
negl
pop
pop
xchg
nop
and
add
nop
xor
mov
or
xor
insb
dec
inc
inc
aad
push
jnp
pop
sbb
pop
cmp
adc
ret
adc
cmp
insb
xor
jle
jne
xchg
leave
jne
pop
test
dec
and
jo
and
loopne
xor
jecxz
lods
das
loopne
jp
inc
repnz
pop
fwait
int
aad
dec
adc
insl
pop
leave
and
xchg
push
sbb
jg
xchg
add
fstps
flds
fcomp
movsb
rcrl
dec
call
shr
aaa
fidivl
andl
int
adc
fcmove
jg
ja
mov
adc
cmp
fldl
pusha
andl
insb
adc
adc
mov
push
and
or
mov
dec
or
dec
or
mov
cmp
cmc
add
jb
in
ja
jo
add
clc
and
xor
sbbb
inc
jecxz
mov
jns
jnp
fsubrl
push
add
jns
inc
loopne
cmp
jge
mov
sub
sar
aas
dec
mov
jmp
push
pop
sub
loopne
mov
mov
push
xor
pop
sub
jo
sbb
lea
popa
insb
mov
addl
push
ret
rolb
lea
in
adc
lods
and
sub
push
mov
xchg
hlt
loop
jb
mov
jno
push
xor
dec
ret
push
jnp
dec
ret
push
setge
das
xchg
nop
jbe
out
jge
nop
push
push
cmp
aaa
adc
or
pop
xor
or
push
iret
mov
push
xchg
mov
push
or
jb
and
lods
scas
loop
in
push
hlt
mov
lock
je
sub
call
dec
sbbl
cmp
cmp
xorl
mov
sahf
lea
add
out
movsl
dec
jnp
pop
lahf
shl
pusha
mov
aam
fsincos
je
adcl
add
outsl
pop
cs
fisubrs
push
mov
mov
shlb
fsubs
cltd
inc
aam
dec
xchg
lock
push
out
ljmp
cmp
int3
pop
and
mov
cmpw
sar
movzwl
test
je
test
xchg
or
adcb
mov
add
shll
jmp
rcrb
scas
imul
js
bound
or
xor
aad
or
ror
jmp
loopne
xchg
clc
add
clc
push
loopne
or
mov
js
aam
pop
int
sub
push
fsubrl
adc
adc
jecxz
sbb
dec
xchg
pop
ja
sbb
rol
jmp
nop
and
push
ret
jl
or
lock
add
int
jl
mov
mov
jb
addl
andl
jo
push
push
mov
add
loopne
xchg
add
xor
js
fs
ror
out
sbb
pusha
pop
insl
mov
push
add
dec
lret
push
and
subb
mov
loope
les
pop
jle
sarb
ds
in
add
sbbl
push
xchg
adc
pop
sbb
shrl
cmpsb
inc
mov
pop
push
lock
ret
dec
sbb
ljmp
and
cmp
movl
std
pop
fmuls
inc
stos
enter
nopl
or
xor
pop
or
daa
dec
daa
push
scas
push
pop
or
xor
mov
sahf
mov
mov
pop
loop
sbb
repz
pushf
in
cmpsl
add
and
add
add
cmp
pop
cmp
jl
nop
pop
mov
sti
dec
clc
hlt
cmp
xor
and
lock
sti
mov
mov
repnz
adc
xchg
cs
xchg
arpl
je
add
int3
pop
xor
popa
inc
test
or
mov
add
push
xor
inc
xor
push
push
daa
sarb
jo
add
mov
pop
ret
sbb
cmp
mov
mov
addl
mov
add
mov
pop
jl
subl
call
outsb
into
sbb
gs
xchg
xchg
outsl
push
aam
cmp
aad
ljmp
adc
push
jne
xor
mov
jg
repnz
clc
mov
jno
add
push
shrb
lock
js
decl
movl
dec
add
inc
cmpsb
mov
daa
jmp
loopne
call
mov
ljmp
xchg
mov
pop
push
xchg
mov
nop
push
push
out
push
push
jl
pushf
popf
xor
cmp
fsubrl
inc
xchg
add
mov
mov
push
aad
fistpll
inc
add
loope
in
mov
mov
out
push
loope
stos
push
mov
dec
xor
leave
enter
add
pop
fmulp
decb
and
lock
test
mov
jle
in
rclb
lds
mov
and
and
movb
in
std
imul
rorl
mov
out
and
or
lahf
and
xor
adc
dec
rorl
or
aaa
popa
pop
dec
or
jb
jl
and
out
adc
sub
sub
jne
push
push
and
rorl
inc
in
mov
mov
fs
cwtl
test
mov
enter
aaa
shll
fnstcw
test
movsl
pop
mov
push
sahf
pop
dec
es
adc
imul
mov
aaa
orb
icebp
fsubl
fiadds
aas
dec
icebp
sbb
cmp
repnz
jge
and
imul
movsl
js
pop
dec
mov
or
insl
nop
mov
pop
scas
sbb
xor
pop
dec
mov
jo
xor
or
jp
nop/reserved
xchg
jmp
pop
lcall
or
flds
cwtl
fmuls
sti
shrb
adc
xor
imul
mov
js,pt
xor
test
mov
inc
pop
daa
push
push
mov
ret
dec
out
mov
lds
xchg
push
int
xchg
xor
lea
ds
movzwl
lret
and
sub
rolb
or
jb
movsb
push
xchg
rcrb
rcrb
add
addl
or
adc
cmp
sete
insl
and
pop
rorl
xor
js
mov
inc
pop
xor
jecxz
daa
sbb
loope
cmpsl
adc
push
sub
lahf
mov
adc
in
xchg
loopne
or
jle
rcl
dec
mov
xchg
mov
mov
or
or
push
out
movsl
adc
xor
sub
jp
push
out
je
add
jmp
aam
adc
test
int3
push
enter
fcomps
push
stos
test
aad
enter
push
enter
nop
test
je
jle
push
or
enter
xchg
jge
jb
sub
aam
cmp
jl
fdivs
inc
enter
aam
fs
dec
jl
aam
push
test
movsb
inc
cmpsl
push
mov
or
jns
cmpl
negl
in
into
je
sahf
add
pushl
andl
dec
test
xor
mov
mov
push
mov
cmp
aad
dec
or
add
out
push
dec
es
sub
push
sub
dec
jns
or
adc
push
lahf
mov
add
pop
jne
imul
cli
testb
push
out
adc
jmp
push
in
jb
sbb
lea
push
push
push
pop
std
xchg
xor
cmp
jl
push
aas
cmpb
mov
and
jg
lock
pop
mul
movsb
mov
call
shrl
or
mov
jp
lcall
repz
or
inc
movsl
out
notb
js
je
mov
inc
inc
pop
fiaddl
mov
cmp
jmp
xor
js
aad
scas
ret
sbb
push
adc
fsubrl
dec
int
shll
jl
or
rcrb
or
jle
sbb
sbb
mov
sub
add
xor
mov
movl
loopne
cmpl
xor
push
push
insb
movsb
lcall
rolb
or
into
dec
or
mov
add
dec
clc
fistl
orl
inc
call
add
push
bound
xchg
inc
sub
rol
mov
push
mov
aaa
push
out
rclb
loope
pop
ret
push
stos
roll
dec
enter
es
mov
pop
inc
adc
jmp
cmp
stc
xor
mov
jne
push
mov
mov
or
lea
aas
andb
scas
mov
push
and
mov
adc
jbe
call
aaa
nop
addb
les
and
mov
cmpb
push
or
or
movb
movl
and
or
push
add
scas
orb
inc
adc
loop
pop
jo
loop
leave
es
imul
mov
inc
shll
jle
add
adc
and
sbb
xor
roll
cmp
pusha
fs
shll
js
jnp
mov
call
loope
dec
outsl
cwtl
or
cmpsl
mov
enter
inc
int3
arpl
sbb
and
xor
fidivl
imul
and
pop
sbb
pop
pusha
test
aam
imul
xchg
je
add
loopne
clc
or
aas
add
inc
pop
add
mov
rcrl
mov
dec
dec
dec
push
fadds
sbb
orb
je
or
orb
orb
pusha
push
dec
rcrl
cmpsl
jbe
push
mov
ret
lahf
xor
pusha
add
loopne
scas
mov
sbb
sbb
add
outsb
jb
and
sbb
fildll
cmp
jne
mov
mov
lret
push
jo
cmp
sub
xchg
mov
pop
adc
and
lods
jl
adc
mov
aam
adc
mov
jne
mov
es
and
movsb
mov
mov
ja
or
pop
add
sbb
inc
sbb
jb
mov
push
jnp
loop
jmp
push
cmp
es
xchg
dec
shlb
xchg
sbb
xor
movsb
xor
xor
add
enter
mov
add
push
or
scas
ss
inc
sub
jo
push
rol
ljmp
and
xchg
add
add
xchg
sub
cmp
or
je
mov
xor
ficomps
andl
jne
das
xorl
outsl
mov
ja
pop
jne
orl
and
daa
inc
dec
adc
imul
mov
cmp
mov
leave
adc
inc
daa
incl
dec
sub
mov
mov
stc
fstp
cwtl
push
add
pop
lds
dec
jb
das
add
xor
stc
or
syscall
sub
aaa
push
stc
movsl
mov
xor
insl
jmp
scas
push
mov
roll
xchg
stc
push
jne
xchg
ss
mov
sub
mov
pop
dec
jne
cmp
sub
data16
cmp
mov
adc
xor
imul
in
rcrl
and
in
push
dec
mov
add
push
mov
jp
push
idivb
xor
mov
pop
sbb
adc
and
push
or
or
stos
inc
and
inc
adc
insb
add
dec
push
popf
lock
mov
cmc
push
fistpl
jo,pt
cli
out
fidivrs
cmp
adc
mov
mov
sbb
xchg
sbb
xchg
das
aad
in
inc
pusha
shlb
push
js
add
out
adc
adc
cld
and
mov
fcompl
sti
insl
adc
sub
pop
push
push
or
mov
or
std
test
inc
or
enter
adc
and
mov
push
push
lcall
or
je
mov
aaa
adc
lea
lock
andl
aam
and
fldenv
mov
adc
lods
adc
dec
xor
mulb
inc
lock
mov
and
or
cmp
sbb
pop
fs
pusha
pusha
insb
cmp
xor
insb
push
inc
test
jecxz
xor
inc
ret
sbb
jg
sbb
dec
push
xchg
mov
pop
cmp
je
popf
add
mov
lds
arpl
faddl
cmp
je
cmp
loope
jne
lea
adc
lds
fwait
inc
and
jmp
push
jne
nop
mov
roll
rolb
adc
movsl
mov
jnp
enter
lock
adc
mov
lock
xchg
shll
rorb
xchg
in
push
pop
data16
rcrl
sbb
pushf
mov
mov
cmp
movsl
movswl
in
push
mov
xchg
and
add
add
push
and
mov
add
mov
ret
ret
cmp
pop
xor
pop
outsb
mov
inc
and
push
sahf
aam
pop
and
mov
and
sbb
or
sahf
and
add
aaa
add
xchg
cmp
orl
test
je
fcompl
mov
add
sbb
dec
stos
clc
in
jbe
cmp
push
adcb
pusha
add
inc
subl
jns
push
sbb
push
add
jns
in
insb
xchg
adc
push
test
popa
shlb
mov
mov
nop
cs
and
nop
mov
aas
imul
jne
dec
push
xor
ss
outsb
cmp
mov
les
dec
pop
pushf
cwtl
fisubrs
sub
sti
pusha
jbe
add
sub
jo
je
sbb
js
je
jle
cmp
push
or
cwtl
dec
push
mov
push
pop
cwtl
and
mov
add
inc
lea
dec
dec
ror
push
or
outsb
xchg
pop
lcall
pushf
xchg
cmp
fldenv
les
jns
out
popa
cmpb
addl
test
outsb
push
push
or
ret
inc
pop
arpl
das
add
fsubs
cmpsl
sbb
ret
test
outsb
add
filds
ds
cmc
outsl
test
sarl
fisttpl
fwait
aam
cmp
inc
push
pop
out
or
cwtl
daa
and
lods
sarl
dec
mov
data16
xor
or
and
fadd
ljmp
in
pop
jge
int3
mov
stos
lock
ss
cmp
push
push
mov
rolb
pop
cltd
nop
cmc
jbe
inc
ret
xor
xchg
ss
lock
inc
and
pop
add
enter
push
xchg
push
mov
mov
cmp
xlat
out
data16
adc
xor
cmp
mov
int3
push
les
mov
lock
xor
faddp
rcrl
notl
sbb
fistpl
mov
pop
and
sub
or
xchg
aaa
push
aas
in
jmp
push
adc
ficoml
push
pushf
cmp
inc
push
js
cwtl
test
push
dec
push
sub
ja
loop
stos
pop
pop
adc
ja
add
jne
pushl
call
push
and
clc
or
or
pop
inc
inc
aam
dec
fst
push
add
add
jmp
dec
push
sarl
aad
pop
mov
mov
xor
mov
adc
pmaxsw
mov
dec
pop
mov
movsl
add
faddp
add
xor
jl
js
jl
pop
sahf
sbb
sbb
push
icebp
shll
lea
push
jp
cmpsl
sarl
add
orb
adc
aaa
das
xor
sub
push
pushl
and
or
jmp
push
dec
sub
les
mov
push
cmp
and
mov
cmp
fstp
incl
push
cmp
je
or
test
fimull
add
push
jae
add
xchg
cmpsb
rorb
sbb
and
mov
cmpsb
je
or
rcll
dec
insb
in
arpl
adc
push
sbbl
cli
lea
xor
notb
je
andl
mov
push
xor
es
mov
icebp
cld
adc
sbb
or
jne
inc
jne
jp
push
inc
aad
adc
adc
cmp
outsl
fcompl
stos
sub
xor
sbb
xor
sbb
inc
test
flds
cmp
add
mov
mov
shlb
mov
lret
or
or
cmp
adc
mov
call
xor
mov
cwtl
xchg
add
inc
lcall
outsb
aas
push
xor
pop
movsl
test
pusha
lods
mov
jmp
mov
or
sbb
jp
divb
push
add
push
push
aaa
shl
xor
xlat
dec
roll
cltd
sbb
shr
or
cmc
dec
ret
dec
je
sub
and
cmp
jge
shlb
pop
mov
xchg
xchg
push
mov
int3
add
xchg
push
and
mov
aam
dec
xor
call
data16
mov
and
xor
xor
pushf
adcl
jae
xchg
push
movsb
or
or
jo
sbb
push
jo
push
cmp
pop
jmp
xchg
enter
pushf
dec
or
call
or
mov
fs
into
add
xorl
push
and
ja
xchg
jbe
xchg
out
sub
add
dec
leave
add
jns
xchg
test
inc
xor
xor
jo
pusha
dec
pop
cmp
sahf
and
add
inc
mov
push
cmp
inc
test
and
xor
test
mov
add
jo
push
push
test
shll
lock
mov
dec
test
in
imul
ja
fidivrl
push
scas
inc
xor
mov
mov
mov
inc
pop
fs
loop
dec
or
subl
xchg
inc
in
pop
sbb
movsl
lock
adc
addl
and
insl
push
orb
aas
cli
push
bound
out
pushl
sub
jo
pop
mov
shl
mov
jmp
add
cmp
mov
dec
push
inc
mov
shl
xorb
cs
push
xor
ret
and
pusha
fnstenv
inc
negb
pop
adc
xor
push
mov
mull
mov
jl
andl
adc
ret
cmp
sub
add
sbb
add
rcll
je
pop
lcall
cmp
repnz
int3
adc
mov
lea
ret
sub
jo
sbb
xor
loopne
push
fcoml
and
cmpsl
fists
nop
jo
xorl
xchg
cmp
test
add
and
shrb
dec
adc
inc
js
mov
sub
jl
add
push
pop
call
push
mov
xor
lea
pop
fisubrs
mov
xor
js
push
add
inc
push
jbe
test
jno
adc
das
pop
bound
xor
xor
inc
push
cmp
je
push
xchg
xchg
movsb
test
or
add
push
mov
jp
mov
and
adc
lock
sbb
xor
loopne
out
je
and
push
daa
inc
repnz
cmp
add
cs
cmp
aas
ret
add
sbb
testb
scas
adc
xchg
xchg
adc
outsl
and
dec
or
dec
jl
loope
xor
mov
fistl
jmp
addb
neg
sbb
push
inc
pop
mov
fisttps
mov
inc
mov
leave
pop
adc
sub
fadds
je
mov
ja
sub
inc
insb
xor
add
mov
aas
push
add
sbb
rcll
inc
push
pop
adc
add
popa
jmp
movsl
sarl
aaa
push
jb
jb
add
rcrb
aaa
push
add
inc
push
ret
mov
pop
jb
je
push
and
adc
and
sti
je
sahf
mov
iret
sub
mov
push
stos
jg
cld
mov
cmp
test
adc
sub
push
or
or
cltd
imul
push
cmp
cmc
es
test
mov
nop
push
pop
mov
adc
jne
jmp
or
or
dec
push
lods
mov
push
pushf
repz
insl
dec
inc
xlat
push
sahf
aam
mov
dec
movsb
test
lret
sar
in
neg
adc
xchg
mov
inc
sbb
sub
sti
pusha
mov
andl
cwtl
mov
jmp
int
mov
xchg
in
add
mov
addr16
pop
les
cld
or
cltd
idivl
jne
inc
movsl
pop
mov
xor
loop
mov
mov
push
dec
pop
add
lea
jb
dec
jp
cld
sti
add
adc
or
sbb
xchg
movsb
jl
dec
push
ja
adc
xchg
sub
mov
pop
bound
add
pop
aas
jmp
mov
and
ja
cmpsb
xchg
outsl
push
mov
jle
ss
pushf
test
lea
sbb
push
inc
stos
adc
add
lret
insb
bound
daa
add
pop
js
sub
stos
dec
aaa
notl
mov
test
push
jae
les
inc
xorb
imul
add
sbb
fs
inc
cmp
cmp
and
add
test
movsl
push
or
loope,pn
sub
inc
ret
inc
adc
mov
or
repz
push
lea
sub
inc
sbb
sub
fsubl
cli
daa
inc
in
sbb
ret
cmpsb
sbb
mov
arpl
jne
or
jae
aas
mov
arpl
pop
fadds
dec
test
orl
add
push
jge
mov
dec
test
cmp
xor
mov
dec
jnp
fs
sub
test
xchg
int3
int3
add
cmpsb
test
andb
adc
sbb
test
mov
sarb
shlb
adc
sbb
dec
rorb
push
pop
cmp
cmp
xor
mov
pop
loop
inc
cld
push
add
jne
pusha
lea
push
add
sbb
rcrl
mov
adc
sub
popa
and
and
mov
and
xchg
sbb
cmp
aad
fdivr
xlat
mov
imul
cld
inc
cmpb
psubd
cmpl
adc
inc
cltd
movsl
fdivp
insb
shr
inc
xchg
or
loope
mov
push
adc
fcomps
clc
add
pop
sbb
mov
mov
std
fistps
decb
or
fimull
adc
div
cwtl
cmp
adc
push
inc
dec
in
cwtl
insl
fidivrl
sub
mov
pop
jae
movsl
ss
mov
into
xchg
hlt
sbb
gs
scas
sti
jp
sbb
arpl
pop
shl
jecxz
subb
lock
pop
adcl
xchg
adc
pop
mulb
jo
sbb
addr16
fdivl
add
xor
cmp
out
sahf
jle
push
push
inc
adc
insb
xor
jno
ret
adc
xchg
push
sbb
mov
or
andb
push
jge
jbe
mov
add
mov
aas
js
push
dec
adc
or
insl
mov
out
mov
and
dec
pop
addr16
adc
pop
pop
inc
sub
adc
roll
push
add
test
out
movb
mov
mov
mov
add
arpl
dec
jne
adc
cmp
aad
sub
xor
addb
jl
push
push
jne
ja
test
pop
mov
pop
mov
les
lea
sub
adc
lds
clc
or
add
inc
xor
inc
sbbb
jg,pt
add
mov
push
push
add
repnz
xchg
push
mov
push
repz
xor
jo
and
lods
or
xchg
or
adc
hlt
cmpsl
xor
add
mov
and
add
pop
xor
xchg
mov
stos
mov
and
loopne
mov
inc
mov
call
jbe
push
and
pusha
jp
clc
roll
xor
inc
cld
adc
sti
xor
cmp
mov
stc
imul
clc
movsb
in
mov
sbb
inc
mov
int3
stos
push
or
add
ret
addr16
mov
test
pop
push
sbb
aad
mov
push
mov
or
adc
fstpl
and
jns
mov
jbe
rol
adc
test
ds
lea
cmp
cmp
inc
incb
les
in
or
pop
jne
fs
fs
pop
add
fs
xchg
jo
rorl
add
testl
ss
outsl
dec
and
ret
adc
push
call
dec
mov
cmp
fisttpll
icebp
xor
pop
sahf
add
xchg
adc
add
aaa
or
add
sti
add
scas
jmp
or
push
dec
out
push
ret
ret
insb
lock
in
push
pushf
sub
mov
mov
je
add
cmp
jge
loopne
add
add
pop
push
mov
lahf
cmp
mov
push
neg
ret
jo
push
out
lcall
and
andb
insl
jne
jnp
inc
cmp
xor
scas
inc
ret
or
push
mov
pop
clc
dec
outsb
jo
jo
je
pop
adc
pop
daa
test
jbe
cmpl
sbbl
sub
pop
and
xchg
or
adc
push
out
adc
add
in
fildl
lea
js
mov
cmp
test
mov
push
add
imul
shr
mull
mov
xchg
mov
sub
loopne
or
aaa
sub
mov
or
mov
pushf
push
pop
ret
and
sub
adc
ret
movsb
daa
inc
mov
imull
outsl
adc
cmp
mov
cwtl
add
lret
mov
xchg
mov
and
aad
sub
jns
adc
pop
push
test
mov
mov
or
loopne
stos
sti
mov
jno
cmpsb
or
pop
mov
mov
add
daa
and
dec
in
mov
inc
mov
inc
aad
sub
out
add
sub
xchg
xchg
pop
cmpsb
pop
adc
sub
jecxz
mov
test
pushl
cld
in
fimuls
pop
enter
cmp
add
shl
lds
xor
or
loopew
leave
adc
xor
aam
pop
push
into
nop
cmp
lods
cmpsl
add
mov
andl
jae
std
pop
stc
fadds
je
or
je
or
sub
sub
mov
scas
cmp
or
stos
mov
adc
aad
or
add
cmp
jne
sahf
xchg
mov
cld
push
jmp
rcrl
jecxz
cmp
adc
movsl
test
xor
test
adc
adc
test
and
xorl
jmp
adc
clc
loope
icebp
ja
xor
xor
jecxz
or
lahf
call
rorl
sub
stos
addb
inc
push
adc
or
add
sar
jl
push
pop
or
adc
adc
sub
test
and
loopne
fcmovnbe
jmp
cwtl
aad
sbb
push
decl
and
mov
fsubs
mov
sbb
adc
test
adc
and
pop
adc
scas
mov
xor
and
scas
xchg
divb
mov
and
in
sub
mulb
aam
lcall
sub
mov
aaa
aad
and
inc
sbb
mov
add
or
or
stc
mov
cmp
clc
fmull
imul
jmp
ficoml
adc
or
or
pop
push
or
xor
or
cwtl
test
fdivr
adc
and
in
mov
or
pop
adc
mov
int3
lret
sbb
out
pop
je
push
daa
outsb
jg
add
dec
xor
or
aam
xchg
mov
jge
add
xchg
cmp
push
cmp
fcompl
mov
ds
hlt
or
adc
cld
fimuls
stos
xlat
pop
cld
mov
js
or
sbb
push
and
movsb
fistl
sub
push
test
outsl
xor
push
xchg
je
daa
loopne
cs
add
push
jb
shll
jns
pop
mov
arpl
mov
dec
xchg
js
out
pushf
or
xor
adc
mov
lret
push
int3
mov
adc
sub
aaa
lret
ja
inc
add
lds
jne
aaa
sbb
lea
das
mov
dec
scas
inc
sbb
xchg
pop
popa
test
push
push
cwtl
xor
movsb
rclb
push
cmp
dec
fmuls
and
inc
mov
and
sbb
int3
fdivrs
cmp
add
jnp
mov
and
stc
out
push
push
adc
lock
enter
movsb
push
or
cld
je
xorb
cld
outsb
cmp
pop
aaa
aam
mov
mov
and
xor
repnz
aam
add
movsl
jle
call
push
adcb
ds
push
mov
cld
xchg
add
add
mov
loope
outsl
add
inc
mov
nop
dec
test
mov
mov
xchg
call
loop
clc
enter
pop
pop
popf
jo
pop
push
lea
cltd
test
leave
mov
rclb
cmp
push
loopne
jmp
inc
pop
sbb
mov
lea
ret
or
pop
inc
enter
or
push
lret
jle
rcrb
xor
pop
jo
popf
in
pop
jns
and
sub
aam
pop
ret
and
mov
loope
sub
sub
inc
arpl
jge
cmc
add
test
mov
imul
adc
push
addr16
inc
sbbb
inc
ret
cli
and
in
add
sub
mov
and
test
push
adc
xorb
or
dec
loop
xor
fiaddl
enter
loopne
fs
aam
les
hlt
push
lea
push
adc
push
clc
lcall
sbb
add
aam
or
mov
and
in
fldl
sub
sub
sbb
sbb
sbb
sbb
or
inc
cmp
into
mov
enter
sbb
mov
lds
mov
add
add
and
nop
loope
xchg
xchg
mov
xor
hlt
rorb
and
xor
inc
outsb
add
lahf
and
nop
sbb
in
loope
mov
je
movsb
add
insb
and
jp
mov
rorl
inc
in
dec
and
dec
lock
andps
adc
pop
test
push
ret
push
rcrl
dec
sub
and
mov
push
mov
clc
jne
mov
xchg
push
in
pop
mov
fldln2
mov
sub
clc
rcll
add
inc
sbb
xchg
cld
sbb
or
sub
rcr
pop
mov
mov
xor
add
push
jae
inc
jbe
sub
lea
ret
sub
mov
loopne
push
cmp
loope
add
dec
das
add
inc
es
add
sub
or
mov
fbld
and
mov
mov
inc
jo
push
incb
xchg
mov
mov
sub
fwait
aam
rorb
ficomps
testb
pop
mov
clc
jp
inc
push
add
daa
addb
push
fcomps
xchg
adc
and
add
xor
popa
add
mov
add
mov
dec
cld
or
sub
pushf
addr16
push
sub
jl
test
jg
sub
mov
jg
movb
mov
mov
sub
mov
lcall
adc
mov
inc
add
fbstp
mov
shr
not
jb
push
push
stc
push
push
and
cwtl
fnstsw
out
sub
rcll
loope
divb
add
dec
lds
jbe
andl
addb
lods
sbb
pusha
mov
insb
loop
or
sub
xor
sub
xor
sbb
cmp
jnp
cmp
inc
jl
or
cmp
nop
dec
mov
cwtl
sub
rolb
sbb
pop
pop
push
ret
add
jae
gs
ja
or
movl
pop
xorb
add
outsl
ja
mov
inc
sub
popf
add
subb
dec
add
jno
or
cwtl
mov
push
inc
push
xor
daa
or
mov
pop
gs
xor
or
dec
or
repnz
clc
in
inc
add
sub
daa
mov
and
fldt
mov
cmpxchg
push
cwtl
fsubl
dec
into
inc
adc
sub
les
sub
cmp
jae
add
jnp
inc
dec
jg
jle
ljmp
pusha
mov
cwtl
push
pop
mov
xlat
fwait
cwtl
mov
push
or
cld
mov
add
sub
push
loopne
mov
and
call
inc
stos
adc
leave
insb
test
test
divb
xchg
inc
adc
lods
insb
cmp
inc
shrl
xor
mov
lahf
mov
xor
outsl
mov
and
aam
mov
or
or
xor
sahf
test
cmp
sub
stos
les
push
fwait
pop
adc
lea
sti
rep
mov
inc
insl
je
sub
jmp
aas
mov
jae
js
shlb
add
mov
movsl
les
sbb
andl
push
and
jnp
and
jne
push
cmp
filds
fdivrl
jae
push
push
mov
jae
adc
push
mov
lea
clc
and
jge
data16
sbb
pusha
inc
data16
cmc
adc
hlt
pop
adc
push
push
and
aas
jb
movsl
int
or
mov
in
sbb
or
jle
data16
mov
rcrb
lahf
xor
ret
dec
inc
pop
jecxz
fsubrl
fwait
add
xor
adc
pop
inc
push
sbb
popw
mov
ret
add
test
push
loopne,pt
mov
push
sub
cmp
mov
pop
adc
push
push
loope
test
inc
call
pusha
cltd
mov
push
mov
sarb
nop
adc
loopne
push
mov
add
clc
jb
lock
or
mov
and
jnp
fcoml
push
push
push
cmp
test
cmpl
icebp
std
loope
sahf
call
jp
cmp
insb
adc
and
imul
xchg
push
aam
aam
test
lahf
cmpsb
xlat
inc
pop
arpl
mov
push
jbe
add
push
and
in
push
mov
jne
inc
ret
enter
add
rolb
xor
cmp
movsb
loopne
loopne
jp
pop
add
loopne
add
sub
popf
inc
sbb
nop
pop
add
xchg
push
aas
jo
jo
pop
cmc
outsb
push
repnz
mov
rol
repnz
ja
mov
into
insb
std
sub
lea
aad
add
lock
inc
clc
adc
sub
inc
xor
adc
add
pusha
push
dec
and
shll
push
add
and
sub
or
push
or
inc
adc
xchg
mov
out
stos
dec
dec
fimull
mov
repnz
push
and
cmp
cmpsl
push
mov
xor
dec
adc
test
add
cmp
xorb
pop
and
and
lods
push
cld
pop
cmpsb
cmp
in
dec
adc
cmp
sub
sar
cmp
jbe
pop
or
add
rolb
add
call
inc
xchg
mov
dec
add
insl
mov
lcall
sub
jecxz
stos
fnstenv
bswap
add
jb
loope
insl
jl
add
or
je
pop
fwait
jmp
xor
es
ret
in
outsl
mov
lea
mov
mov
setne
push
pusha
jb
mov
xchg
xchg
roll
sub
sbb
daa
sarl
mov
popl
shr
popa
push
sahf
or
add
fisttps
aad
dec
jl
lea
out
imul
notb
dec
mov
push
cmpsl
jne
outsb
popf
mov
loope
test
jl
jno
or
push
mov
mov
jle
pop
iret
ja
inc
cwtl
je
js
ds
add
mov
cmp
insb
sbb
pop
and
popa
sub
das
xchg
inc
movsb
rol
mov
adcl
adc
outsl
push
sarb
cmp
mov
stc
incb
in
xchg
outsb
sar
or
sub
jge
push
lea
mov
jb
out
mov
jae
ror
push
pusha
jnp
aas
and
es
hlt
jae
jge
adcb
into
rcrl
cmp
push
fcmovb
or
and
jg
add
icebp
and
aas
inc
mov
cld
je
je
and
add
in
push
inc
ret
xchg
mov
roll
add
adc
push
jp
mov
inc
or
cltd
xor
cltd
cmpsb
inc
addl
jge
pushf
add
jbe
push
adc
repnz
inc
cmp
adc
in
xor
sub
inc
sbb
push
gs
fmull
cmp
ud0
push
gs
jne
fdivs
shlb
push
and
mov
pop
cld
jmp
sbb
scas
pop
out
call
lret
outsb
or
or
jbe
xor
mov
inc
sbb
mov
sbb
dec
mov
arpl
stos
fcoms
mov
adc
xor
pop
inc
jo
push
add
dec
mov
sub
sbb
daa
or
add
arpl
cmp
or
sub
mov
daa
add
mov
fnsave
fisubl
xchg
dec
or
adc
outsb
sub
or
fldt
or
pop
inc
dec
or
cwtl
je
mov
cmp
jl
pop
inc
adc
pop
and
fbstp
daa
dec
ret
arpl
xchg
pusha
sbb
enter
lods
push
test
cmp
mov
cli
push
sub
or
jge
gs
inc
aam
sub
pop
dec
adc
and
aad
sub
mov
cmc
mov
jmp
or
dec
ret
test
lret
mov
cmp
push
mov
aas
iret
mov
add
adc
mov
fiaddl
sub
add
push
push
inc
mov
and
cmpsb
xchg
cwtl
mov
outsb
cld
push
adc
rolb
jl
cmp
xor
xchg
loope
jle
mov
xor
xchg
rorb
adc
movsb
dec
xchg
shl
mov
inc
push
nop
dec
adc
faddl
mov
jb
inc
les
jae
roll
les
dec
enter
scas
in
lcall
pushf
or
or
or
mov
add
adc
int3
mov
adc
lods
andb
dec
add
and
ret
cld
mov
and
mov
cmp
je
inc
fs
and
cmc
jmp
inc
push
cld
mov
sub
rol
adc
or
jge
mov
dec
add
in
xor
inc
bound
shrl
dec
xor
andb
push
aaa
movsb
mov
mov
clc
lcall
pop
aam
pop
pop
insl
addl
jns
push
cld
jne
jmp
mov
dec
rcrl
not
fxam
adc
fadd
mov
and
sub
cmp
lock
fs
dec
dec
add
fs
xor
cld
lock
cmp
insb
fldl
lahf
sarb
sub
orb
sbb
push
sbb
insl
filds
pcmpgtd
pop
jne
adc
adc
and
jne
ja
int
inc
push
pop
xor
adc
or
jne
pop
jns
cmp
ss
or
jne
pop
push
and
cmp
mov
nop
sbb
sbb
testb
add
xchg
fnstsw
dec
lock
and
loopne
les
pop
sub
sbb
pusha
cmpb
loope
jmp
jl
push
add
sbb
faddp
fstpl
xor
in
loopne
cmp
test
clc
adc
hlt
neg
pop
add
movsb
mov
push
fstpl
add
mov
insl
hlt
std
fstl
pop
inc
jb
jnp
inc
je
fcompl
sbb
and
sbb
pop
cmpb
sbb
pop
or
dec
xchg
and
mov
mov
bound
sub
ret
mov
add
push
decl
fsubr
and
test
sub
cmp
jb
lea
sti
dec
sbb
and
sarb
push
lock
xor
add
mov
xor
push
lret
adc
shll
or
adc
or
nop
repz
pop
out
inc
jecxz
frstor
fldz
mov
mov
loop
mov
nop
out
add
mov
cs
xor
imul
pushf
out
mov
pop
in
ret
stos
jge
adc
pop
inc
cmp
or
iret
jmp
xor
movl
cmp
mov
add
in
int
inc
dec
xchg
mov
dec
inc
sub
int
jo
sbb
test
xor
mov
inc
xchg
push
and
inc
mov
mov
push
push
add
scas
push
clc
scas
add
mov
pushf
mov
mov
out
pushf
mov
sbb
add
inc
sub
pop
jo
sub
dec
loope
mov
mov
nop
subb
out
out
sbbl
lea
push
push
cmpl
inc
xor
add
pop
xor
pop
inc
sub
mov
dec
push
cmp
xor
push
addl
mov
add
jo
mov
push
and
mov
lret
add
pop
dec
cld
sub
or
jge
jo
andps
inc
push
xchg
lods
jl
out
or
fwait
push
push
push
cltd
xchg
cmp
jg
jno
pop
outsb
jae
movb
dec
lock
adc
or
call
dec
inc
or
adc
push
dec
pop
inc
mov
jo
sub
inc
fdivl
adc
push
adc
xor
cs
stos
fs
pop
sbb
cmp
mov
mov
add
cmpsb
pop
cmp
cmpsb
and
inc
mov
rclb
fldl
add
jns
leave
lods
fldl
push
or
paddusw
or
sub
jge
rcl
pop
add
adcb
inc
shll
in
or
xchg
sbb
insl
ljmp
xor
inc
push
aaa
push
faddl
xor
fistps
add
adc
filds
mov
les
out
mov
adc
push
sub
imull
iret
bound
xchg
into
or
pop
addr16
dec
cmp
aaa
mov
insb
pop
push
dec
popf
mov
je
jge
or
js
add
adc
inc
inc
jns
rcll
mov
sub
mov
pop
cmp
stos
loopne
mov
mov
xchg
adc
ja
xchg
neg
push
idivb
popf
mov
ret
addl
sahf
out
cld
inc
xor
or
fsubp
lcall
dec
dec
push
push
sbb
and
jge
inc
clc
push
shl
andb
aaa
add
les
rol
int3
add
cmp
ret
inc
sarl
jle
lret
adc
lret
xchg
dec
lock
mov
shll
add
ret
sbb
sbb
subb
mov
inc
arpl
int
mov
sub
sub
inc
lea
push
push
add
push
xchg
push
push
flds
mov
negl
sarb
add
shrb
mov
cld
outsl
aaa
les
insb
ja
xor
nop
cmpsl
movb
bound
or
test
test
and
xlat
sub
iret
jnp
rcr
push
into
je
pop
push
push
enter
std
sub
push
bound
cmp
jo
adc
push
jae
lea
loopne
cmp
test
inc
gs
lea
dec
xor
daa
and
jecxz
loope
es
mov
lcall
sub
xchg
bound
iret
int
in
nop
xchg
or
shlb
push
stos
inc
xor
fnstsw
andb
pushw
adc
xchg
mov
xor
ja
pop
xchg
push
mov
adc
test
push
sub
stos
push
adc
dec
push
add
add
lds
orl
sbb
out
shll
push
das
ja
push
shrb
cld
sub
lock
lea
inc
cmp
cld
loopne
adc
mov
add
lcall
scas
fldl
cs
movsb
roll
rolb
rolb
out
js
ret
push
add
shrb
lock
icebp
push
inc
adc
cmp
jb
mov
icebp
rorl
mov
lcall
dec
push
nop
mov
fucompp
clc
js
ds
sbb
or
jns
test
movsb
adc
test
cmc
notb
xchg
decl
inc
adc
imul
dec
sbb
sub
push
sbb
repnz
sbb
test
xchg
fadds
pop
sub
lods
push
inc
or
cmpb
adc
or
add
das
adc
movsl
xchg
inc
sbb
outsb
sbb
shl
and
jnp
mov
rclb
dec
add
mov
inc
adc
adc
add
pop
add
sbb
push
movsb
test
or
test
inc
xor
inc
sbb
and
and
fmull
add
push
push
arpl
lea
out
movsb
sbb
jmp
xor
repnz
fiadds
push
les
fadds
or
jnp
imul
lret
jae
outsl
jg
or
xlat
loop
inc
and
aaa
subl
ds
ret
sbb
push
shlb
pushf
stc
xlat
xchg
xor
shrl
daa
sbb
cs
lcall
or
pop
xchg
lea
cmp
and
add
and
nop
and
or
lsl
add
add
rorl
push
pop
pop
in
or
fmuls
les
or
push
fucomip
mov
lea
or
mov
adc
ret
xlat
push
jecxz
adcb
ret
sub
rorb
dec
cmpsl
inc
test
shlb
add
daa
mov
orb
leave
mov
add
insb
push
push
jo
jne
daa
mov
dec
in
and
add
dec
inc
xchg
and
sbb
sbb
cmpsb
dec
push
lcall
sbb
lea
xchg
sbbb
fdivs
in
neg
sbb
jnp
scas
xchg
inc
jne
jle
aas
cld
mov
or
test
es
dec
and
enter
jmp
add
add
add
inc
or
or
lods
cmc
dec
sbb
push
push
scas
cmp
sbb
jl
mov
jnp
or
lds
cld
insl
loopne
dec
sysenter
stc
and
sub
cmp
jg
adc
in
sbb
inc
add
data16
in
push
dec
cmp
es
xor
notb
pop
push
sub
lock
xchg
lea
mov
mov
dec
ficoml
in
sbb
xorl
loopne
test
inc
jmp
xchg
lea
xchg
es
push
inc
push
inc
cmovle
sub
les
bnd
fidivl
add
add
mov
out
mov
push
and
daa
jl
dec
dec
inc
adc
pop
add
cmp
or
sbb
xchg
popa
js
push
inc
push
inc
repnz
out
adc
or
cmp
add
loop
loopne
inc
ds
xor
bound
xchg
xchg
or
or
rcr
jmp
mov
sub
xchg
mov
sub
xchg
or
lret
push
jmp
cmp
sbb
xor
cmp
jl
popf
inc
sbb
out
sub
sti
popa
push
pop
dec
inc
push
mov
ds
in
pop
adc
xor
jecxz
pop
lock
imul
cld
push
outsb
jnp
outsl
push
xlat
jmp
repnz
fdivl
test
pop
jl
std
inc
mov
adc
pop
mov
push
ret
les
or
xor
aad
pusha
dec
push
lock
push
dec
mov
mov
inc
adc
int3
jmp
dec
outsb
pop
aaa
or
jo
or
cmp
add
add
inc
push
add
push
inc
nop
pop
ds
lret
cmp
jg
adc
mov
mov
cmp
jl
cmp
jle
cmp
frstor
decl
jp
or
pop
pop
cmp
push
imul
daa
mov
jno
cmp
jge
mov
pop
and
cmp
jl
stos
pop
enter
adc
in
mov
into
popf
mov
mov
xchg
jo
push
iret
xor
xor
mov
push
pop
xor
mov
mov
leave
jne
adc
ret
add
in
arpl
fildl
mov
addb
jns
cmp
or
jg
fadds
loope
aam
fistps
or
sbb
hlt
sbb
or
add
cmp
jge
and
rcrb
cltd
cmp
xor
hlt
jg
jne
test
adcb
add
cmp
cld
pop
inc
cmpsb
mov
jg
cmp
or
inc
js
adc
add
int
mov
mov
jne
cmp
fwait
ret
insb
imul
mov
rorb
lret
ljmp
lds
mov
imul
jmp
add
and
mov
jp
mov
insl
ret
sbb
fildll
das
insl
adcb
lret
push
inc
popl
push
cmpsb
sbb
roll
fdivs
sbb
add
sub
stc
inc
mov
sbb
testb
adc
or
incb
aas
inc
addl
add
sub
dec
mov
dec
js
sbb
cmp
jg
xor
addb
fs
push
das
and
stos
je
push
ret
loop
pop
sub
pop
add
inc
test
testl
push
pop
add
xor
jl
push
push
inc
pop
sbb
enter
jo
ficomps
mov
cwtl
sbb
in
inc
push
fnsave
das
lods
sub
arpl
add
xchg
movsb
into
sbb
jns
movsl
ficompl
fs
insb
movl
loope
mov
out
sbb
sbb
dec
sbb
xchg
rol
jecxz
fadds
cmp
enter
cmp
push
fiadds
and
push
xchg
mov
stc
shll
xor
push
pop
and
cld
gs
mov
sub
test
cld
arpl
jmp
outsb
cmp
out
jo
sbb
jbe
sub
cmp
adc
xchg
pop
sbb
jp
js
push
js
fldenv
jnp
outsb
mov
lret
cmpsb
sub
ret
adc
cmpsl
sahf
or
inc
mov
sub
pop
jmp
sarb
lock
mov
and
dec
sbb
dec
and
mov
pop
pop
push
mov
and
push
mov
dec
and
add
mov
xchg
dec
and
sbb
pop
fsub
les
push
add
cmpb
xchg
sbb
pusha
cwtl
sub
inc
pop
xor
ret
jg
sub
or
sub
sub
out
loope
addl
mov
push
jo
fdivrs
pop
loop
arpl
shrl
sbb
add
fs
mov
insb
lock
jns
cli
imul
std
mov
lea
clc
mov
ficomps
ljmp
add
loop
cmp
aad
push
push
mov
orb
movsb
jmp
jnp
cmp
out
and
mov
mov
jp
stos
add
aaa
int3
xchg
mov
lods
adc
outsb
filds
jmp
sub
add
sbb
shlb
inc
sub
js
cs
aaa
push
push
mov
cmp
pushf
xor
dec
sub
dec
lret
push
stc
xchg
jnp
fidivrl
repz
sub
mov
loope
jmp
sbb
jle
lds
dec
in
mov
mov
jmp
push
xchg
mov
or
cmp
adc
fdivr
aas
or
mov
cmp
je
or
je
cmp
or
adc
and
pop
xchg
add
mov
add
push
push
add
mov
pusha
push
in
jnp
jne
xor
nop
out
lcall
and
xor
outsl
in
sbb
jle
dec
add
and
add
in
sub
xchg
jb
shll
mov
clc
push
repnz
or
and
mov
scas
nop
movsl
add
in
in
adcl
call
push
jmp
outsb
je
xchg
or
sub
pop
dec
jne
sub
sub
hlt
in
inc
adc
cmp
add
sbbb
lds
sub
test
out
filds
xchg
loope
cmpsb
sarl
sub
lret
sbb
in
sbb
lods
xchg
dec
mov
shrl
mov
pop
push
loop
and
mov
int
outsb
mov
xchg
dec
xchg
lock
dec
cmovns
dec
fcmovnu
inc
popf
sub
cld
mov
xlat
idivl
repz
lea
cmp
jle
dec
sub
inc
jle
jb
decb
lock
sub
xor
cmpl
jle
pop
les
gs
push
test
sbb
add
adc
lret
sub
and
mov
push
cwtl
in
pop
cmp
dec
rcrb
inc
push
push
pop
push
mov
adc
ficompl
push
pop
notb
shlb
cwtl
movb
add
mov
imul
ss
mov
adcl
or
out
dec
les
mov
add
add
or
outsb
adc
mov
mov
pop
adc
bound
xorb
aaa
xchg
cwtl
xchg
cmp
sub
adc
fsubl
add
js
fnstsw
inc
inc
mov
test
pop
pop
adc
ds
sub
pop
rcll
je
es
sub
inc
hlt
adc
pusha
cs
pop
push
ficompl
lods
sub
outsl
add
test
mov
scas
jne
jmp
lea
data16
inc
nop
out
jmp
loopne
lods
inc
nop
or
mov
frstor
inc
sbb
jmp
rcll
add
jae
stc
sub
lds
decl
sub
imul
mov
pop
jge
enter
pop
add
repz
push
and
dec
mov
f2xm1
aad
inc
or
or
test
adc
in
dec
pop
mov
and
dec
xor
shrb
or
call
clc
push
add
pop
push
lock
dec
leave
ret
daa
pop
into
sub
fwait
jns
fnstenv
rclb
mov
icebp
shr
jg
out
sub
xor
pop
fwait
ja
push
or
and
xor
adc
lock
sub
xchg
add
dec
or
adc
mov
mov
insb
adc
push
and
es
rclb
addb
cmp
jb
xor
mov
mov
push
icebp
sbb
jecxz
add
ret
filds
mov
cmp
jae
add
scas
xor
or
jmp
pop
mov
jno
js
or
pop
inc
and
jne
test
pushf
in
sbb
inc
adc
mov
fcom
dec
dec
sti
jbe
rolb
aaa
data16
ret
pop
test
jne
mov
and
sbb
cmp
je
push
sub
filds
or
je
inc
or
clc
push
rorl
shrb
mov
fisubrs
jae
ret
jmp
stc
mov
mov
and
nop
pushf
mov
xor
sti
push
cs
mov
pusha
push
mov
mov
pop
pop
adc
adc
leave
lods
popa
and
mov
push
outsb
addr16
xor
sbb
pop
mov
rorl
aas
mov
add
fnsave
sbbl
call
pop
push
add
xor
cli
test
insl
test
mov
mov
jne
scas
push
jle
lock
xor
repnz
and
sbb
xor
out
js
hlt
adc
aad
test
cmpsb
stos
movsb
decl
cld
hlt
cmp
das
aas
xchg
rcr
or
out
or
loopne
add
out
push
sbb
rorl
lret
aam
mov
inc
out
rol
and
jns
addr16
push
cltd
jno
inc
mov
jbe
push
and
pusha
adc
out
scas
pop
out
xchg
test
cmp
icebp
jb
pop
pop
xchg
imul
sub
rol
push
or
movsl
decl
push
or
pop
xchg
dec
mov
aaa
push
mov
sbb
or
ds
pop
mov
jo
subb
pop
mov
negl
and
loopne
popf
jns
or
sarb
mov
outsb
add
mov
xor
hlt
ret
popf
dec
repz
out
xor
lret
xor
pop
fcomi
ret
cmp
mov
lea
sub
movsb
lock
je
aam
popf
insb
mov
addr16
repnz
xor
xorb
leave
dec
ret
icebp
scas
jae
add
cmp
add
inc
push
sbb
xchg
xor
jno
mov
sbb
outsb
sbb
fnstenv
jne
insl
rclb
mov
push
jb
fldenv
insl
arpl
cmp
stc
jmp
fdivs
and
adc
fwait
cmp
outsb
test
add
testb
fstpt
inc
or
mov
adc
js
in
mov
mov
mov
add
fdivl
cmpsl
pop
outsb
push
mov
mov
mov
jp
xchg
cmp
adc
inc
and
icebp
cmp
push
mov
xor
fwait
or
and
add
fsubrs
xchg
xchg
inc
jae
cmp
daa
sub
and
cmpsl
xchg
pop
les
sub
popa
adc
push
fsubr
xchg
cmp
sbb
cmp
mov
inc
ss
popf
xor
add
push
std
fisubl
sub
push
push
decb
out
ficompl
cli
sbb
daa
sbb
pop
insl
fdivr
cmp
adc
hlt
imul
xor
cmpsl
mov
ret
dec
inc
inc
pop
dec
sub
ficomps
xor
jle
jne
add
cmp
cmp
jg
push
sub
test
add
ljmp
inc
mov
mov
xorb
xor
hlt
push
mov
movl
and
cli
xchg
mov
add
adc
and
inc
pop
imul
inc
dec
add
sbb
push
ret
and
aas
test
enter
lahf
mov
fwait
or
and
cmp
sbb
loope
nop
mov
jmp
nop
cmp
cmp
mov
pushf
hlt
sub
int
insl
test
test
and
add
das
loopne
cmp
inc
mov
add
pusha
add
add
push
or
rcl
mov
aam
add
or
fistps
and
push
aam
and
inc
pop
test
aad
sub
pop
jo
adc
dec
adc
mov
movl
stos
jo
in
repnz
out
adc
aaa
sub
adc
push
orl
or
adc
imull
jbe
popa
js
pop
add
sub
mov
inc
mov
movsl
or
mov
xchg
or
pcmpeqw
push
fmuls
arpl
or
ret
adc
mov
adc
inc
mov
sbb
pop
sub
xor
cmp
add
ja
xor
cmp
sub
push
icebp
sub
push
les
jl
push
bound
mov
sbb
mov
cmp
aaa
cmp
xor
lcall
or
jae
cmp
jmp
pop
leave
sbb
adc
pop
push
shrb
sbb
push
push
push
or
xorb
mov
xchg
pushf
jp
inc
lods
jle
dec
xchg
jo
adc
sbb
mov
flds
dec
daa
add
inc
inc
jb
push
mov
sbb
push
adc
cmpl
sub
test
push
and
fadds
jns
cmp
pop
add
and
test
sbb
inc
push
in
mov
and
insb
cmp
xor
and
jge
hlt
movzwl
pusha
testl
and
lea
xor
int3
das
aad
jo
stc
add
mov
mov
pop
loope
pusha
sub
cmp
lock
mov
arpl
movsl
pop
les
push
dec
insb
decb
fnsave
insl
jmp
cmp
sub
pop
data16
xorb
mov
aas
notb
sub
jg
insb
sub
inc
jo
lods
and
mov
lcall
and
inc
or
dec
lock
int3
xor
pop
dec
or
pop
cld
pop
pop
jge
pop
mov
sbb
and
in
add
xor
fnstsw
xchg
jge
cmp
les
nop
imul
dec
push
sub
pop
add
cli
testb
je
cmp
mov
mov
cmp
or
sbb
jmp
sub
fidivrl
jb
sbb
push
adc
add
es
testl
dec
xor
xchg
pop
lods
push
push
lret
cwtl
dec
cli
push
cmp
ret
js
and
adc
push
pop
mov
imul
adc
jae
cmp
aam
cmp
pop
loop
jmp
orb
pusha
cmp
movsl
push
pop
ds
pop
in
and
sub
xchg
push
outsb
ljmp
sarl
cmp
clc
push
popa
mov
rcrb
mov
push
add
into
adcl
add
jmp
add
insb
or
or
inc
sub
push
mov
pop
adcb
dec
sub
sbb
jle
sbb
rolb
push
push
cmp
or
loopne
rcl
je
cld
jmp
call
leave
insb
sti
aaa
jno
cld
mov
rcrl
std
out
cmp
fisttpll
lock
jmp
rorl
mov
testb
je
cmp
push
mov
repnz
add
inc
jp
push
cmpb
and
jb
jmp
lea
push
add
add
inc
ljmp
enter
mov
push
loop
or
sub
jbe
xchg
mov
sub
aaa
sar
or
push
pop
jmp
push
add
pop
cmpl
push
call
sbb
xor
jmp
or
es
sub
pusha
push
fs
push
aaa
inc
ljmp
jg
in
push
push
test
outsl
push
push
out
iret
fiaddl
loopne
add
jnp
push
or
sbb
popf
jecxz
push
mov
ret
jmp
inc
push
rorl
cmp
push
pop
scas
shll
xchg
rclb
ret
pop
test
addl
adc
stos
jmp
inc
jno
sbb
mov
shr
and
into
push
or
dec
and
clc
jg
iret
rorb
mov
add
sbb
test
fidivl
ret
cmp
xorl
inc
cld
jb
test
mov
outsb
lcall
push
je
jmp
lea
lret
sub
ret
adc
xor
in
cld
lret
jne
or
dec
ret
xor
sbb
and
mov
xor
js
jnp
xor
stos
test
push
in
mov
jbe
icebp
add
enter
arpl
loopne
inc
cmp
mov
fsubl
shrl
xchg
cmp
lret
sbbl
in
fdivs
xchg
inc
addb
adc
or
aad
or
in
mov
test
test
dec
test
add
pop
pop
and
je
lea
cmp
nop
out
stos
cmp
dec
or
fiadds
mov
sub
adc
dec
or
inc
dec
movsb
push
es
loopne
or
popa
aas
sub
add
xor
es
xchg
pop
push
sbb
call
adc
push
sub
mov
push
cs
or
cmp
jmp
shrb
or
test
rcrb
aas
pop
cmp
daa
pop
jmp
call
jle
setge
add
and
dec
adc
or
mov
jns
iret
sbb
and
cs
inc
jnp
dec
push
clc
cmp
and
add
jecxz
ret
push
leave
push
or
cli
and
inc
inc
cmp
hlt
cmp
popl
call
or
ss
pmaxub
sub
adcb
add
addb
pop
ljmp
jb
push
shll
inc
push
pop
cmp
jae
inc
cmp
das
adc
adc
push
call
jns
test
repz
lea
sub
jecxz
hlt
jg
das
sar
push
lea
icebp
add
stc
dec
es
lock
pushf
jge
push
push
das
jo
xor
sahf
int
add
insl
mov
and
jg
test
adc
mov
mov
aam
cs
or
or
call
mov
sub
mov
ss
rolb
sbb
pop
dec
pop
insl
dec
mov
xor
adc
popa
push
xchg
or
xchg
dec
push
aaa
xchg
push
shlb
push
jne
inc
outsl
aaa
push
loopne
dec
imul
sub
test
push
stos
int
jg
mov
xor
bound
add
je
loopne
jbe
adc
lahf
divl
movsb
pop
sub
inc
cmp
ret
inc
pushf
orb
lock
sub
out
or
adc
mov
xchg
or
inc
outsb
pop
movsl
push
mov
jb
mov
pop
wbinvd
push
dec
xor
inc
dec
ljmp
andb
dec
dec
jecxz
or
push
mov
or
xchg
clc
dec
loop
inc
fisubs
inc
jg
inc
es
mov
pusha
cltd
add
aaa
add
xchg
pop
cmp
into
jmp
insl
mov
xor
sbb
add
cli
sbb
or
test
lds
popf
mov
sbb
mov
sub
shlb
jmp
or
bt
ja
ret
and
cmp
dec
sbb
cmp
ret
das
jbe
sbb
fcompl
adc
jle
sbb
and
add
stos
jnp
ret
pop
inc
cmp
mov
or
xchg
push
mov
and
jb
mov
jne
dec
inc
xor
pusha
cmovns
dec
ds
add
and
into
add
jge
or
sub
and
add
or
push
inc
test
sub
ftst
push
mov
test
testl
je
cmp
jbe
push
aad
and
adc
push
subb
lret
or
mov
lock
jg
stc
add
lods
or
rorb
sbb
push
stos
lods
hlt
pop
inc
mov
mov
add
mov
call
push
scas
mov
xchg
cmp
inc
ss
fld
cmpsl
add
sub
scas
pop
and
outsb
aas
push
cmp
sbbb
test
jg
fnstcw
mov
and
clc
jg
fs
out
rolb
movd
movaps
outsb
fdivrp
ficoms
clc
jae
xor
jle
xor
aaa
fwait
addr16
add
lret
fcmovnbe
icebp
sbb
or
jge
repz
or
jg
pop
and
xchg
ret
adc
jnp
mov
in
add
movb
dec
aam
add
adc
push
add
adc
adc
jns
loopne
mov
xchg
repnz
leave
ds
jbe
and
incb
addps
int
sub
xlat
fcmovb
sbb
adc
inc
pop
xchg
or
nopl
pop
dec
xor
jmp
mov
add
ja
mov
test
mov
mov
xor
xchg
js
mov
pop
enter
or
test
and
inc
loop
lret
pop
mov
and
imul
add
dec
hlt
call
cmp
pop
movsb
nop
jg
add
neg
and
je
sub
mov
jmp
add
mov
shl
outsl
aas
popf
fmull
or
add
stos
mov
adc
cmpsl
int3
dec
ljmp
dec
or
push
rcrb
push
cmp
out
push
pop
pop
imul
loope
lock
adc
test
push
test
mov
mov
jp
leave
mov
mov
mov
push
pop
and
mov
loopne
je
movsb
cmp
sarb
pushf
and
mov
bound
inc
adc
out
ss
pop
outsb
dec
pop
pop
jne
fincstp
jge
hlt
mov
adc
rep
push
xlat
cmc
and
or
les
or
enter
fbld
lea
nop
ud2
mov
or
cld
repz
jo
and
mov
fs
mov
aaa
stos
mov
or
lods
adc
xchg
jle
test
add
add
nop
inc
xor
xchg
neg
or
or
push
add
cld
push
mov
jns
hlt
in
in
aam
repz
mov
push
call
cmp
in
lock
hlt
clc
popa
call
cld
lea
repnz
sbb
or
repz
push
cmp
je
js
dec
nop
inc
xor
push
lods
pop
sti
and
popa
xchg
and
lea
jl
dec
jb
cmp
pop
and
std
cld
aas
mov
cli
out
or
insb
and
inc
jno
daa
stc
sub
out
mov
nop
push
rolb
hlt
sbb
add
insl
data16
mov
add
sahf
inc
push
out
push
outsb
in
xchg
lret
nop
dec
dec
sbb
out
mov
out
les
mov
jo
js
out
sahf
orb
out
cs
sbb
adc
sahf
out
adc
adc
and
out
or
cmp
jnp
inc
or
push
aam
clc
dec
lcall
adc
js
pop
pop
lods
inc
ja
aam
push
leave
rcr
adc
jbe
fld
call
jmp
insb
xor
xchg
fs
xchg
sbb
add
or
jmp
push
fisttpll
xchg
repz
mov
mov
movzbl
mov
test
je
pop
cltd
push
inc
push
or
adc
xchg
jp
mov
inc
mov
inc
inc
mov
dec
jge
push
mov
jmp
jp
je
mov
push
and
andb
je
add
push
mov
jge
sbb
mov
iret
jmp
or
or
mov
or
ret
mov
movsl
fdivl
pop
lock
inc
and
nop
xchg
and
pusha
lock
repz
sbb
orb
fisubs
jbe
and
imul
cld
ret
dec
cmpb
adc
mov
push
mov
mov
and
dec
call
push
sub
lea
lods
ds
inc
or
push
inc
mov
incl
inc
lret
adc
push
jne
inc
cmpb
pop
inc
push
out
sub
mov
mov
inc
inc
adcb
mov
or
sub
cmp
je
mov
int3
ljmp
push
clts
xor
andl
jne
jg
sbb
xchg
out
adc
push
add
push
std
add
dec
aam
pushf
cmpsb
cltd
push
cs
or
xorb
movsb
or
hlt
and
push
sbb
daa
adc
addb
xlat
jns
push
jecxz
adc
and
jmp
inc
xlat
call
aam
jo
lock
arpl
insl
orb
inc
rcl
push
out
jle
sub
push
xchg
or
or
shrb
je
dec
push
rolb
out
sahf
loop
lock
shl
or
test
xor
data16
push
mov
mov
pop
mov
rorl
out
in
xor
sub
jle
loopne
js
xchg
dec
mov
test
iret
add
add
push
inc
pop
pop
inc
cltd
and
pop
lret
subb
aaa
movups
inc
and
mov
jne
addb
sub
or
sbb
jae
in
push
andb
or
xor
push
push
cmp
pop
jge
inc
sbb
sbb
dec
or
int3
add
mov
arpl
dec
jp
inc
das
push
icebp
add
cmp
push
add
pushl
jbe
jge
stos
mov
shr
mov
push
push
mov
inc
dec
or
pop
pop
add
sub
push
nop
jo
or
clc
or
rolb
jl
fs
fisubrs
stos
jp
iret
push
outsb
testb
jmp
rcrl
das
loopne
lods
idivb
insb
in
push
jne
push
push
sbb
stos
andl
or
stos
add
rolb
adc
lods
pop
adc
rol
inc
dec
pop
push
push
shld
dec
inc
rolb
inc
int3
test
jno
cmp
xchg
xor
cld
cld
idivb
jg
shrl
adcb
dec
push
stos
cld
cmp
jl
insl
decl
jg
cmp
jbe
bound
sub
mov
add
cli
jg
or
jbe
jbe
push
xor
pop
div
inc
movsb
pop
push
jae
xchg
jmp
imul
hlt
xchg
je
pop
lock
daa
add
jmp
iret
insb
cltd
jb
adc
adc
fisubs
cs
jae
sub
push
es
push
inc
cmp
pusha
dec
jg
test
je
imull
sbb
mov
movsb
mov
push
mov
pop
pop
adc
lcall
lods
ficomps
adc
xchg
hlt
pop
fbstp
pop
pop
push
xchg
push
lods
and
mov
dec
ja
dec
adc
push
ror
mov
call
add
es
sarl
loop
imul
je
push
and
jne
and
shll
sub
or
add
push
dec
call
dec
jno
inc
xchg
mov
or
dec
inc
or
add
sub
icebp
xchg
and
fisttpll
shll
adc
push
mov
add
xchg
adcb
cmp
inc
sbb
out
jne
cmp
loop
jl
call
push
hlt
add
cmp
imul
add
and
pop
jmp
cwtl
aam
fmull
fadds
push
stos
sub
dec
mov
xor
sbb
pushl
insl
and
lahf
divl
cmp
add
push
mov
jnp,pt
mov
mov
stos
dec
or
mov
jge
cmp
daa
int3
shrl
adc
jmp
inc
loopne
pusha
cltd
movsb
jmp
inc
inc
loopne
mov
lock
stc
sbb
sub
adc
and
call
sub
dec
test
pop
add
and
repnz
dec
shrl
add
push
pop
sbb
lock
push
loopne
inc
pop
lea
mov
test
inc
ret
pop
pop
jo
hlt
add
pop
cli
fidivrl
inc
and
loope
loope
cmp
xor
inc
mov
dec
clc
adc
shll
cs
sbb
or
cmp
dec
jmp
and
and
loope
pop
je
inc
data16
je
mov
inc
aaa
push
push
pop
pop
test
and
rorl
cmp
lret
xchg
and
orb
xchg
rol
jl
sbb
in
adc
or
push
ret
lods
inc
imul
in
ret
xor
call
dec
dec
scas
push
add
test
movsl
adc
sub
cmp
je
and
addb
aaa
cmp
inc
and
jp
test
incl
test
jg
mov
cmp
jne
or
cmp
mov
or
dec
pop
cmp
or
sub
add
insl
push
ret
or
jne
pushf
jmp
rcl
add
xchg
lock
xor
add
mov
mov
push
mov
mov
repnz
dec
add
mov
mov
add
or
sub
shll
and
nop
inc
add
lock
xor
les
dec
mov
adc
and
out
or
lock
mov
push
jne
jmp
mov
popa
loopne
push
inc
fsubrp
mov
shr
inc
mov
faddl
pop
addl
push
and
mov
std
cmp
dec
sbb
sbb
and
add
adc
cmpsb
sub
pop
scas
jnp
pop
aad
testb
adc
in
pop
mov
or
mov
bound
or
xchg
adc
mov
push
inc
mov
testb
push
test
cmp
int3
dec
enter
or
add
nop
inc
clc
out
inc
or
mov
jne
pop
mov
mov
mov
dec
fcoml
mov
into
and
xchg
pop
push
in
adc
mov
sbb
sarl
pop
pop
sbb
push
insl
xchg
shrl
jl
or
movsl
fisttpl
adc
pop
pop
dec
popf
shlb
add
mov
pusha
stos
mov
add
inc
and
lahf
inc
cmp
jmp
into
sar
stc
and
mov
cmpsl
and
add
or
jo
lea
bound
ds
or
add
dec
dec
loopne
outsl
or
mov
inc
inc
or
loope
add
in
stos
aam
mov
mov
cmp
mov
inc
cmp
jb
sahf
fldl
movsb
fdivrl
inc
jne
cli
andb
or
or
or
adc
sbb
popa
ja
push
cmp
push
imul
add
sbb
push
mov
lea
add
jne
idiv
jne
jl
sbb
cmp
jne
mov
push
mov
std
jne
es
jne
mov
cltd
cmpsl
call
into
or
or
cld
jb
enter
push
dec
out
jns
insb
inc
adc
jmp
std
and
jns
out
adc
cld
jmp
fldt
pop
adc
or
psubsb
lock
out
xor
jl
pusha
dec
lods
or
shr
mov
dec
xchg
scas
sbb
mov
ret
adc
shr
rep
adc
pushw
push
pushf
add
xlat
push
cs
test
xor
call
in
dec
dec
push
lds
mov
or
and
dec
pop
ja
push
popf
xor
push
jnp
pushf
andl
daa
jo
jmp
call
addb
add
pop
mov
or
or
push
sub
movsb
add
addl
add
adc
or
addr16
jecxz
push
inc
daa
fists
mov
and
pop
push
xlat
add
inc
sub
dec
das
aam
cmpsb
mov
je
or
sbb
add
sub
jne
stos
mov
dec
addl
insl
lods
pop
outsb
int
push
push
push
push
lahf
mov
jp
add
inc
mov
pop
outsb
and
sub
jp
outsb
pop
cmp
popf
and
cmp
jle
pop
push
jb
jo
push
dec
es
push
das
jle
or
ss
int3
int3
inc
push
fwait
mov
insl
shlb
push
adc
fiadds
dec
xchg
xchg
shr
sub
subl
adc
push
push
adc
movsb
xor
insl
xchg
lods
mov
mov
fldcw
cmp
insl
xchg
and
cmp
out
and
push
pushf
in
ret
ja
ja
out
imul
inc
lcall
cmp
jbe
add
inc
or
out
lahf
scas
lock
adc
cmp
cmp
jmp
fdivrs
shl
push
adc
add
add
lret
mov
test
xor
jbe
loope
jbe
or
je
add
mov
jne
loope
inc
inc
ret
cld
cmp
je
mov
out
cmp
je
shl
std
cmp
sbb
and
faddl
aam
xchg
mov
outsb
or
cld
pop
adc
mov
dec
jae
xor
movsb
jl
adc
add
add
jmp
jl
iret
ror
scas
cmp
or
add
jg
or
mov
add
andb
cmpl
out
stos
or
xchg
and
push
loope
decl
cmp
jne
orl
jmp
adc
jne
sub
dec
cli
jle
cmp
test
and
inc
pushf
pop
mov
and
push
xor
dec
or
mov
cmp
lret
push
push
pop
and
cltd
iret
jo
or
adc
popf
lock
jl
decl
clc
mov
push
clc
inc
dec
mov
dec
mov
and
idivl
decl
mov
jmp
mov
call
lahf
cmp
sub
push
and
adc
sbb
push
jp
scas
jbe
sub
push
clc
jbe
add
lea
dec
je
enter
mov
or
scas
push
adc
roll
std
mov
test
jne
test
cmp
pop
mov
or
push
test
jbe
mulb
or
es
je
pop
push
mov
pop
bound
dec
cmp
stos
sbb
mull
pop
cld
xchg
xor
popf
push
push
sbb
mov
out
ss
add
and
jg
popa
add
push
scas
cmc
inc
test
data16
add
cmc
inc
ret
cs
sar
dec
xor
push
cmp
lcall
sbb
inc
loop
repnz
mov
fildll
add
repz
add
dec
sbb
jae
enter
push
adc
add
mov
add
sub
in
push
adc
push
pop
dec
cld
xchg
divb
xchg
adc
cmp
dec
sbb
test
mov
in
fcmovnbe
pop
push
hlt
push
mov
es
cld
insl
pop
das
inc
mov
jb
push
add
inc
inc
inc
add
adc
jne
push
out
cmp
pushf
jp
mov
or
cli
stos
fwait
jne
and
inc
dec
das
xchg
sbb
pop
or
jae
cwtl
call
aad
call
stos
or
pop
rclb
and
sub
sub
hlt
mov
mov
inc
mov
pop
aad
mov
sarl
test
and
push
dec
xchg
add
pop
mov
mov
movb
pop
jmp
push
leave
mov
cld
std
add
arpl
subb
add
push
cmp
lea
mov
imul
mov
clc
push
ds
cltd
mov
xchg
dec
push
popa
dec
mov
lock
jno
xor
ja
inc
lock
ss
daa
je
pusha
test
dec
leave
lcall
jl
stos
jecxz
sbb
icebp
pop
add
fdiv
sahf
aam
aaa
sbb
sub
mov
add
cwtl
inc
es
incl
mov
cltd
adc
sbb
adc
movb
loop
push
or
sti
or
gs
rolb
jl
mov
cmpsb
add
mov
push
jmp
and
jmp
imul
adc
scas
xor
mov
les
in
repz
shll
call
mov
pop
sub
mov
cmp
jne
mov
or
sbb
or
insb
and
cmc
std
push
push
pop
sahf
cs
ljmp
mov
xor
sub
and
in
fimull
sub
jo
pop
add
or
add
add
add
out
js
aaa
outsb
inc
lret
cmp
je
push
repnz
mov
jns
add
sbb
pop
mov
or
or
or
or
sub
scas
cld
add
or
nop
adcl
add
or
xchg
or
cmp
mov
in
sahf
xchg
je
push
push
pop
cs
rdmsr
adc
mov
adc
pop
adc
xor
adc
inc
scas
in
int
push
adc
add
pusha
in
ficoms
adc
adc
push
adc
sahf
xchg
sub
pop
mov
sbb
sbb
xchg
sti
add
cmp
mov
sbb
mov
sbb
sbb
cmpsb
sbb
je
push
sbb
dec
sahf
push
test
xor
sbb
pop
push
push
inc
negb
loopne
cmpb
and
ret
sub
jg
fmuls
add
movl
fildl
jmp
add
mov
popa
cmp
in
push
in
imul
rol
cmpsb
in
xchg
adc
in
in
jns
in
out
mov
in
aas
sub
sbb
sbb
adcb
out
cmp
cmp
pop
leave
xor
ljmp
jmp
jmp
nop
cmpsb
inc
lods
push
or
in
in
pop
insl
in
xchg
aad
in
cmp
sub
scas
mov
out
cs
adcl
stos
or
lock
enter
dec
icebp
cmp
das
sbb
or
or
repz
std
hlt
hlt
repnz
pushf
imul
std
xor
out
cmc
cmp
pop
leave
testb
jns
gs
clc
clc
iret
enter
or
xor
and
cli
add
sti
sti
fmul
dec
in
cld
cld
cld
je
cld
push
xchg
mov
shlb
mov
xor
xchg
sub
xor
pop
ret
in
shll
dec
fs
or
lock
cmpsb
adc
in
xor
jecxz
xor
fsubp
cmp
push
addl
cmp
adc
inc
or
lea
out
xchg
scas
call
cltd
sti
dec
adc
push
sbb
daa
xchg
pop
push
and
cltd
or
or
or
cli
out
out
out
xchg
jns
xor
cmp
cli
or
aas
repz
sbbb
xchg
push
pop
repnz
cli
stc
movsl
test
stc
div
sbb
xchg
xchg
clc
jns
mov
push
stc
push
dec
xor
stos
or
or
cmp
jmp
mov
cmp
out
orb
je
cmp
mov
and
arpl
loope
clc
dec
adc
and
nop
cmpsb
loopne
out
out
pop
push
pop
pop
fdiv
out
mov
dec
sahf
testl
ljmp
jmp
pusha
leave
and
notl
notl
hlt
imul
out
mov
add
xchg
into
idivb
scas
mul
nop
negb
insl
repnz
xchg
inc
repz
loope
testb
test
out
idivb
testb
mov
stos
loope
cmp
enter
jmp
add
push
lret
or
xchg
cmp
loope
setb
sbb
cli
hlt
push
mov
inc
pushw
data16
push
or
lock
push
jo
add
mov
lret
push
aad
dec
rorl
jmp
add
cvtdq2ps
andb
cmp
mov
xchg
cmpsb
jb
hlt
in
pop
or
xadd
mov
or
xchg
repz
push
insb
repz
pusha
leave
subl
int
orb
or
in
pusha
leave
subl
cmp
or
icebp
inc
scas
out
icebp
das
xchg
pop
cmp
push
jno
ds
repnz
sbb
dec
push
arpl
mov
sbb
cmp
in
cwtl
icebp
or
jne
stc
mov
dec
icebp
xor
cmovno
or
out
lock
mov
icebp
or
js
add
mov
pop
add
push
sub
fists
sahf
out
rclb
insl
mov
xor
push
add
push
repnz
popa
dec
add
pop
rcrl
add
addr16
pop
jnp
fs
xor
je
es
movsb
xchg
dec
add
or
mov
rorb
ror
insl
cmp
mov
or
mov
ss
add
mov
cmp
outsb
xor
aaa
std
cmp
repz
data16
divb
movsb
jbe
outsl
out
insl
fistpl
fsubrs
call
js
repz
jno
loope
or
cltd
inc
jge
out
adc
mov
mov
push
test
loopne
and
mov
mov
lods
jmp
mov
cmp
mov
pop
mov
xlat
outsb
and
push
fimuls
sarb
cmp
popf
nop
adc
jne
sub
mov
je
dec
es
push
fmuls
ja
add
not
and
sub
inc
sub
sub
adc
out
xchg
cmp
sub
inc
pushf
sub
xchg
xorb
dec
loopne
adc
jge
jo
pop
add
into
scas
cmp
add
cs
jmp
inc
roll
adc
adc
roll
or
xchg
jecxz
stc
inc
jl
xor
pop
ficoms
ja
or
mov
sub
push
add
add
jb
sub
insb
or
mov
add
aaa
jo
mov
lret
scas
and
mov
push
in
enter
add
mov
out
push
pop
mov
or
add
dec
sahf
add
mov
mov
push
nop
or
imul
sti
lea
or
fsub
sub
js
xchg
xor
test
rolb
add
loopne
add
rcl
js
xor
int
ret
movsl
stos
ss
out
jl
stc
ss
test
call
mov
mov
push
loope
ret
dec
xchg
call
aaa
add
jle
jb
inc
add
test
adc
and
sub
iret
addr16
or
add
xchg
push
pop
push
stos
inc
adc
push
mov
ret
mov
icebp
inc
daa
dec
mov
or
push
cmp
push
dec
jne
popf
sbb
sbb
mov
and
lahf
push
enter
mov
inc
sub
add
aam
insb
in
mov
aam
add
das
rclb
repnz
xchg
lods
jo
xlat
imull
cmp
decl
jne,pn
lock
dec
clc
mov
xor
mov
enter
add
or
push
mov
xor
pusha
or
cli
std
bound
pop
lods
out
aaa
dec
mov
mov
call
push
mov
es
jmp
cmp
jae
dec
lea
mov
pop
jae
pop
jbe
xchg
sub
pop
cwtl
adc
dec
xorl
mov
aaa
push
add
sub
and
loopne
jg
cmp
pop
jg
sub
test
sbb
rolb
push
nop
mov
jbe
in
mov
dec
or
je
or
inc
dec
je
push
push
rorl
shll
add
dec
adc
clc
inc
cmp
jg
cmp
decb
aaa
dec
push
mov
int
sarb
cmpsb
sbb
push
pop
adc
lret
jge
incl
decl
pop
scas
or
add
jmp
add
stc
mov
mov
icebp
xor
pop
sbb
dec
sbb
pop
add
dec
pop
sub
or
stos
mov
inc
ja
imul
jne
mov
ja
jmp
aaa
xchg
enter
movsl
sub
cmp
aas
jge
lock
adc
idiv
std
jge
sub
mov
inc
les
mov
mov
inc
mov
cmp
cs
add
dec
pop
jmp
adc
xchg
or
jge
mov
mov
mov
add
sub
add
imul
add
jmp
jb
xchg
mov
imul
or
je
dec
ret
pop
sub
sbb
sbb
movsb
or
mov
adcb
sbb
sub
push
or
lret
popf
inc
xchg
pop
cld
xor
test
jbe
adc
mov
pop
dec
das
xor
mov
je
xor
xchg
and
and
sbb
cmp
cld
clc
mov
sbb
cmp
add
fnsave
pop
adc
pop
mov
inc
ja
sub
cwtl
pshufw
je
adc
and
jne
push
lock
mov
ja
mov
and
sbb
or
jle
ret
pusha
sub
js
ljmp
inc
inc
ds
pop
push
xchg
jo
jecxz
push
jg
call
dec
adc
fldl
test
jns
sub
js
or
pushf
jbe
push
push
pushf
or
shll
cmp
add
leave
dec
jmp
xchg
test
mov
sbb
sbb
or
mov
flds
mov
push
movsb
mov
xchg
sub
les
mov
fdivs
and
aam
mov
cld
add
data16
dec
adc
sahf
idivl
repnz
or
ret
push
push
out
mov
imulb
and
mov
nop
pushl
sbb
and
pop
loope
fiaddl
in
test
call
aam
shrb
loopne
loope
mov
out
js
xor
in
or
out
adc
jg,pn
scas
mov
call
xchg
or
push
xchg
je
je
dec
call
ret
je
lods
movsbl
into
movsl
test
dec
sbb
adc
pop
lcall
inc
jae
mov
dec
je
popa
test
pushf
ret
mov
sbb
jbe
subb
mov
scas
sub
and
mov
adc
xchg
or
test
sub
dec
or
mov
dec
out
bound
sbb
dec
mov
push
add
addr16
das
fidivs
out
xor
js
lret
add
dec
out
rolb
mov
movsb
push
pop
jmp
cli
test
jo
fiaddl
xchg
cmpsl
shrb
push
jg
daa
je
mov
pusha
and
sti
mov
mov
xchg
inc
or
xor
shrl
pop
push
adc
xchg
or
popa
dec
stos
mov
push
cmpsl
push
shrl
nop
add
hlt
push
mov
and
sub
dec
shll
push
jns
js
jns
cmp
mov
sarb
mov
push
mov
jnp
and
or
lret
add
dec
add
mov
or
pop
inc
call
bound
or
dec
pop
mov
mov
jmp
das
int
dec
imul
int
das
in
dec
xchg
rcrl
mov
or
mov
fsubs
mov
inc
decl
inc
js
dec
add
lret
xor
push
or
xchg
cld
xchg
jns
and
and
dec
lcall
push
cltd
lret
pop
aam
xor
call
sbb
ret
xor
cld
dec
mov
lahf
pop
push
lods
inc
ljmp
inc
xor
mov
jbe
and
mov
lods
rcrl
sub
cmpsl
test
sbb
and
mov
cmpsb
xchg
inc
pop
lods
movsl
xchg
incb
inc
inc
jb
adc
pusha
lods
sbb
push
pop
lea
inc
sub
pop
cld
ja
or
or
or
out
popa
rcrl
xor
push
pusha
jne
dec
clc
jne
pop
sbb
jmp
adc
mov
jmp
fldl
test
push
xchg
dec
adc
fimuls
cli
sub
sbb
adc
adc
pop
addr16
mov
xor
and
repz
inc
add
faddl
fimuls
hlt
pushf
mov
push
add
sub
gs
cvttps2pi
es
mov
notl
daa
adc
add
rclb
or
pusha
incl
pop
jmp
add
add
call
pop
lret
cli
sbb
aam
and
dec
rolb
out
push
xor
insb
dec
sub
into
repnz
or
mov
inc
or
adc
or
xor
inc
lcall
sbb
mov
and
bound
imul
rorl
add
push
or
lea
stos
add
and
pop
sub
mov
les
loop
adc
lea
xor
dec
mov
xor
push
push
loope
mov
mov
outsl
hlt
rolb
test
xor
mov
and
xor
jle
xchg
lea
inc
js
or
shrl
out
lods
xchg
or
fwait
mov
inc
dec
movsl
add
ret
rorb
cld
fsubrp
pop
shlb
xchg
push
dec
stos
mov
push
ja
lea
jle
enter
push
push
and
jb
lds
jo
dec
and
mov
dec
into
icebp
jg
push
orb
mov
adc
roll
and
outsb
mov
lds
mov
xlat
mov
out
push
xor
mov
pop
mov
out
lea
pop
and
mov
and
cli
sbb
and
in
xchg
cld
jmp
dec
inc
xor
inc
inc
test
pushf
cmp
jae
pop
mov
mov
mov
inc
jg
add
pop
pop
or
ja
repnz
jle
mov
test
and
loope
pusha
cmp
cli
rcrb
faddl
xchg
lret
decb
int
mov
mov
mov
push
fdivrs
mov
dec
cmp
mov
roll
std
xor
ja
pop
mov
xor
jne
mov
mov
inc
cmp
testb
jmp
sub
roll
cmp
dec
or
test
and
cmp
lahf
pop
xor
out
push
or
negb
xchg
dec
dec
icebp
push
fisttps
mov
cmp
cmp
lock
out
into
std
shrb
out
je
jmp
push
adc
in
mov
push
and
ljmp
aas
rolb
clc
stos
cs
jnp
jae
cmp
jbe
mov
lea
mov
test
andl
push
leave
inc
icebp
xchg
mov
mov
add
lea
mov
and
or
ds
std
push
sub
jmp
loopne
cmpb
or
lar
lcall
mov
movb
jne
jo
stos
push
xor
sbb
mov
xorb
sbb
movl
add
push
out
dec
mov
cmp
mov
mov
sbb
scas
mov
clc
repz
push
push
inc
cmp
jle
sbb
mov
mov
inc
std
push
div
push
mov
inc
dec
jne
daa
test
mov
push
cwtl
add
addb
or
mov
lret
cmpsl
cmp
jno
jp
enter
mov
lock
loopne
sbb
adc
jno
pop
push
sub
add
adc
sbb
or
dec
inc
cmp
mov
add
loopne
pop
push
push
xchg
ret
mov
xchg
inc
lcall
insb
sbb
dec
cmp
dec
xchg
pop
push
ret
push
cli
testb
insb
ljmp
cmp
fisttpll
test
inc
push
or
push
lcall
aam
inc
add
scas
leave
xchg
out
inc
sub
inc
jmp
xor
mov
cmp
dec
sbb
mov
xor
movsl
and
xor
ljmp
loopne
subb
ljmp
popf
jmp
inc
popw
pop
mulb
cmp
sbb
pop
add
adc
call
stos
and
and
pusha
and
cmp
sbb
fnsave
push
and
xor
mov
push
fimull
lea
or
sarb
add
jb
aaa
sbb
jnp
or
pop
ret
adc
adc
jne
or
je
pop
pop
jo
ljmp
adc
cld
test
pop
adc
cmp
push
outsl
je
mov
push
push
cmp
jne
sbb
pop
adc
inc
lcall
inc
je
int
sbb
std
mov
mov
sub
xchg
xchg
je
imul
and
loopne
dec
add
call
add
je
cmp
and
push
into
ljmp
sbb
pop
inc
or
push
add
shrl
pop
cld
rolb
mov
loop
sub
jns
xchg
sbb
jl
cwtl
cs
loopne
xor
shrl
mov
frstor
and
pusha
push
xor
and
call
sub
mov
add
adc
push
test
in
jle
sbb
inc
push
test
jo
or
pop
cli
push
aaa
jmp
mov
pop
cmc
jle
add
pop
shr
mov
pusha
push
dec
ret
repz
add
mov
loopne
test
inc
lcall
stos
mull
sbb
sahf
mov
ds
pop
push
mov
xor
aas
orb
dec
fbld
scas
jo
cmpb
push
add
mov
and
mov
mov
inc
movl
movlps
add
jbe
mov
add
dec
add
add
test
je
xchg
pop
add
inc
inc
pop
and
mov
mov
pusha
mov
insb
pop
xor
mov
push
into
or
or
dec
sub
pop
call
sub
push
adc
outsl
test
je
push
push
aas
pop
pop
sub
pop
bound
xor
dec
loopne
or
ror
pop
iret
fcmovne
sub
loope
sbb
pop
test
dec
pusha
dec
repnz
rorb
and
nop
add
fsubrs
xor
cmp
dec
ret
add
and
jle
sbb
xor
jecxz
out
inc
sbb
pop
lret
or
shl
jbe
and
pop
cmp
call
xchg
mov
test
lds
jge
add
mov
popa
mov
or
loopne
pop
nop
test
pusha
fs
fsts
jbe
push
push
nop
push
sbb
pop
pop
and
and
out
je
sub
pop
push
daa
push
sbb
inc
ficoml
pop
add
and
mov
adc
mov
xchg
jo
in
mov
ja
les
jge
nop
ljmp
test
push
in
mov
movl
mov
xor
add
cmp
fs
lds
push
xchg
cld
mov
dec
push
xor
aas
push
mov
push
dec
enter
sbb
ret
xchg
or
mov
pop
add
sub
pop
xor
adc
test
add
pop
mul
adc
jb
adc
sub
rclb
pop
stc
push
jns
fdivr
or
std
pop
pop
mov
mov
clc
or
jns
popf
enter
shrb
pushf
popl
add
hlt
in
fimull
ffreep
aam
aaa
dec
cld
frstor
movsb
scas
xor
adc
cld
adc
and
and
in
test
je
xchg
lea
or
cwtl
or
push
sub
jmp
mov
xchg
xor
push
jnp
dec
sbb
dec
add
les
outsb
add
lea
mov
mov
mov
fistl
push
inc
add
pop
add
or
aaa
dec
pop
bts
jmp
xchg
decl
jo
mov
mov
add
or
andl
xchg
pop
enter
les
nop
syscall
xor
inc
nop
es
add
and
adc
pop
inc
add
push
dec
pop
cmp
jnp
xchg
push
xchg
mov
je
fs
sub
sbb
jmp
push
enter
in
push
pop
arpl
jnp
cmp
pusha
push
mov
add
test
pop
pop
mov
add
sahf
cmpsl
mov
sbb
adc
sahf
out
xor
jns
popa
add
pop
push
fs
and
mov
shlb
or
or
lret
and
into
cld
lret
jne
or
mov
bound
inc
push
sbb
pop
int
push
les
and
lock
or
sub
sbb
or
fiaddl
cmp
cmp
add
hlt
gs
inc
fcomi
and
fistps
aaa
lea
je
push
xor
sbb
rolb
je
push
ss
loope
cmp
and
loopne
es
xor
adc
cmp
testl
test
inc
and
adc
pop
push
lods
lahf
jg
mov
push
shrb
aam
jns
es
sub
shll
mov
je
movl
sbb
jge
or
push
aas
clc
sub
lods
cmp
fsubrs
adc
and
or
push
cld
ret
or
mov
testl
adc
dec
adc
xchg
fisubrl
sbb
push
push
sub
sub
ds
push
fadd
xor
dec
mov
push
lods
lret
or
inc
mov
and
ficompl
pop
pop
push
and
jmp
les
add
push
or
pop
pop
add
push
or
jmp
sub
pop
add
movsl
mov
xchg
cmp
mov
clc
je
or
xchg
mov
aam
and
sub
dec
call
ret
inc
fdivl
test
xchg
or
inc
pusha
outsl
lea
stc
push
and
xor
adc
and
cmpsb
cli
push
dec
and
xchg
divl
mov
add
mov
adc
shrb
loopne
jbe
push
inc
test
sbb
sub
ror
mov
les
inc
inc
outsl
loopne
push
jbe
xchg
cmp
sub
push
mov
out
mov
inc
add
pop
dec
cld
sbb
sub
pop
sbb
pop
shrb
lret
ljmp
jns
add
push
pushl
or
add
sar
shl
add
push
xlat
adc
push
mov
xor
ja
ret
pop
repnz
test
and
push
hlt
fcoms
loope
sbb
fnstsw
xchg
hlt
push
xchg
mov
dec
jmp
aaa
xchg
dec
imul
movsl
pop
xor
mov
scas
push
and
daa
cmc
adc
mov
xor
aaa
mov
roll
repz
jbe
clc
mov
je
andl
jle
lret
add
adc
pop
lods
mov
dec
jp
push
cmpl
lcall
pop
sbb
das
pop
pop
jg
xor
xor
add
adc
or
mov
loope
lea
xchg
lret
lret
fmull
mov
shrb
pop
cs
fdivrs
push
pop
pop
jle
mov
mov
jne
aaa
popf
mov
jecxz
fmull
test
add
sbb
enter
xor
adc
jo
addr16
in
cs
jge
orl
mov
inc
inc
orb
cmpsl
and
pop
ja
mov
movsbl
pop
stos
mov
decb
mov
fdivrl
add
sar
pop
inc
mov
and
subl
je
dec
orl
fstpl
fsubr
adcl
jae
lret
xor
mov
mov
add
je
or
dec
inc
xchg
sbb
jnp
popf
xchg
pushf
pop
or
add
push
xlat
sbb
or
adc
rcrb
jg
adc
xchg
mov
add
sub
mov
rorb
pusha
xchg
loopne
or
ja
movsl
mov
mov
xchg
or
pop
jb
sbb
mov
push
or
inc
insb
je
add
pusha
xor
iret
test
add
loope
insb
pusha
sub
adc
sbb
pop
popl
mov
insl
and
mov
add
addb
sub
and
movsl
jg
inc
insl
loopne
push
fs
sbb
imul
outsl
and
imul
nop
ds
sbb
sbb
pop
cs
test
sub
shr
xchg
push
loop
xchg
test
or
iret
sbb
jle
inc
je
pop
adc
jns
or
mov
cwtl
jle
adc
repz
adcl
lea
je
cld
lock
ja
out
jge
push
loopne
jae
outsl
test
sub
pusha
call
sub
or
aaa
das
mov
sbb
mov
and
or
sbb
test
inc
cwtl
sub
pushf
add
es
mov
movlps
pushf
scas
nop
inc
scas
imul
jge
ljmp
push
insl
cmp
or
xor
sub
int3
cmc
pushf
mov
push
xchg
add
idivb
dec
pop
pop
dec
mov
lea
push
inc
cmp
cmp
inc
mov
sti
jo
mov
mov
push
fidivl
mov
lea
push
or
push
mov
dec
dec
aad
jns
lcall
pop
mov
inc
lods
xlat
mov
mov
add
pop
dec
nop
cmp
scas
xor
mov
je
cltd
jle
inc
xchg
push
cmp
push
sbb
pop
and
je
pop
sub
push
test
mov
mov
adc
jmp
sub
outsb
je
arpl
inc
cwtl
sbb
xchg
ds
xor
mov
fildll
test
mov
mov
dec
pusha
pop
mov
xchg
data16
adc
push
jb
jae
sbb
or
mov
shl
cmpsl
mov
pop
rcrl
push
jg
push
pop
jo
jne
add
jae
imul
iret
icebp
sbb
adc
andb
sti
add
pop
push
push
arpl
int
test
adc
pop
or
push
nop
cmp
pop
pxor
loopne
mov
jb
mov
test
lea
push
ljmpw
popf
adc
mov
sub
and
faddl
jl
movsl
push
push
hlt
pushf
xchg
mov
inc
lock
lods
clc
cmpb
jne
and
lahf
push
jl
jg
dec
outsb
dec
data16
mov
push
std
es
push
cmp
imul
in
mov
loope
mov
insb
lcall
data16
push
sub
mov
xor
in
shlb
mov
dec
or
mov
je
and
fwait
mov
jle
inc
or
xchg
xchg
sub
cltd
and
adc
dec
sbb
pop
jl
xor
stos
pop
jae
jno
or
cmp
fidivrl
xchg
jno
cli
and
popa
mov
or
sbb
lahf
cmp
lock
daa
mov
or
out
test
and
das
in
or
or
push
inc
sbb
xor
stc
cltd
push
push
push
xor
or
and
lret
mov
mov
adc
cmp
push
dec
jmp
sub
mov
movb
movsb
in
fiadds
lock
pop
pcmpeqd
xchg
movb
xchg
lods
add
or
ror
adc
cmp
inc
push
stos
mov
add
dec
lcall
sar
int
fwait
mov
dec
jp
test
fnstcw
mov
nop
sub
add
sub
inc
xor
push
sub
push
test
add
stos
mov
mov
mov
lock
test
jne
jmp
dec
cmp
sbb
sbb
sub
jb
pop
scas
je
addr16
loope
mov
sarl
push
lods
or
loop
fs
adc
lret
pusha
mov
add
mov
mov
cs
inc
aam
mov
or
mov
jo
adc
or
add
rcl
xchg
jle
or
add
lods
pop
stos
jg
jmp
adc
jae
jmp
lods
mov
push
lock
pushf
adc
jl
push
or
pop
mov
add
gs
aam
cld
out
xor
insb
in
adc
std
les
ret
mov
or
loopne
add
je
lahf
cmp
fsubrs
scas
bound
mov
pop
jmp
adc
mov
icebp
addr16
push
cs
imul
jnp
jbe
iret
cs
insb
push
data16
xor
or
adcb
add
cs
pusha
fisttpl
push
jb
pop
shlb
out
and
or
mov
imul
nop
fs
mov
pop
pushf
fbstp
sub
xor
test
or
and
dec
or
cs
xorb
ret
xor
cld
dec
ss
adc
pop
and
movsl
sub
adc
mov
out
push
pop
pop
call
mov
daa
loopne
push
data16
mov
pushf
ss
push
xor
je
sbb
add
or
inc
push
ret
sub
sub
lea
and
xor
sub
xor
sub
push
mov
pop
ss
push
and
or
in
les
scas
xor
mov
je
pop
mov
add
repz
push
xchg
repz
cli
sti
int
je
mov
add
sbb
shrb
popf
out
cmp
xchg
pushf
shrb
rol
fcoms
out
or
and
push
inc
mov
cmc
je
in
pop
jne
pop
xor
xchg
scas
adc
jne
cmpsb
sbb
adc
pusha
ror
inc
xchg
nop
add
pusha
sub
xor
inc
or
or
inc
js
push
stos
rorb
pop
push
faddl
xchg
dec
xchg
pop
jl
popw
mov
cmp
jmp
mov
in
lahf
insb
int3
push
sub
shrl
out
outsb
push
and
pushf
add
insb
push
lea
loopne
adc
mov
xchg
xchg
ss
pushf
mov
test
or
sti
jo
outsl
loop
lock
bound
mov
test
mov
jle
cmpsl
push
mov
sbb
and
and
add
dec
add
iret
xor
push
xor
pop
divb
callw
dec
scas
xor
dec
mov
sbb
dec
sti
sbbb
insl
push
xchg
hlt
xabort
or
popf
into
adc
fidivrl
adc
jg
push
inc
sahf
movsb
mov
or
adc
addl
fisttpl
loope
shr
add
sbb
clc
jle
sub
push
push
addr16
and
and
cwtl
mov
cs
or
stos
shll
out
xor
pop
or
cmpsb
cmovae
rcl
sub
subl
pusha
cwtl
arpl
add
lock
add
aad
aaa
cmp
mov
adc
xchg
orb
ret
mov
scas
fdivrl
loopne
test
ret
push
pop
jmp
clc
hlt
pop
stos
mov
mov
dec
test
sub
rolb
outsl
test
clc
sbb
pop
cli
call
jae
les
push
mov
add
mov
cmpb
js
inc
outsb
fs
movzbl
fwait
lods
xchg
or
sub
and
cmp
mov
je
ja
xor
paddusb
sbb
into
movsl
dec
test
out
pushf
dec
add
cmc
xor
and
xchg
sbb
sub
mov
push
xchg
imul
pusha
in
pop
mov
arpl
push
sub
cmp
fcoms
xchg
fidivs
aas
icebp
inc
test
movsl
lret
aam
sbb
roll
hlt
icebp
xchg
pop
xchg
push
inc
int3
dec
icebp
outsb
and
aas
insb
jne
jp
mov
adc
and
pop
mov
insb
jg
adc
fwait
sbb
cmpb
mov
push
xor
leave
leave
dec
mov
xchg
lret
sub
sbb
aam
xchg
pushf
xor
rcrb
cmp
mov
in
add
or
ret
jp
stos
mov
lea
jno
sbb
mov
xchg
pop
mov
cmpsb
jb
pop
jle
mov
xchg
mov
cld
adc
stc
fisttpl
or
pop
mov
in
push
mov
add
xchg
adc
inc
xchg
inc
jbe
and
add
in
in
mov
mov
cwtl
add
dec
daa
xorl
ja
lds
xchg
dec
push
fists
loope
mov
in
mov
int
outsb
and
adc
push
or
bound
or
mov
xor
cmp
sbb
jno
add
mov
ret
js
sbb
insl
cltd
hlt
pop
insb
loop
fidivs
mov
pop
subl
push
push
dec
add
ljmp
test
sbb
mov
and
out
test
and
jb
add
inc
push
jne
and
or
pop
xchg
xchg
popf
jecxz
push
pop
insb
and
fildl
or
inc
pop
push
cmp
rorl
jg
mov
jg
xchg
jnp
push
mov
loopne
dec
enter
push
aaa
ret
jecxz
push
mov
sbb
mov
sbb
inc
cmpsb
jb
or
push
sbb
jno
xor
test
sub
leave
push
loopne
pop
enter
push
cmp
push
mov
or
mov
xchg
dec
push
add
add
and
fadd
or
fcoms
ja
sbbl
es
aam
and
rolb
adc
jns
pop
aam
xor
xchg
stos
in
loopne
enter
test
mov
daa
pop
in
dec
sub
xchg
xchg
sbb
test
pop
loope
pop
mov
lods
fidivrl
adc
adc
fistl
adc
jl
push
repz
dec
jp
jnp
fwait
mov
add
loope
fadd
hlt
dec
push
jbe
xchg
into
ja
xor
pop
mov
lods
lea
fnstcw
sub
es
jp
js
lret
mov
shrb
cltd
sbbb
ret
scas
lret
xchg
divl
cs
inc
inc
or
shll
loopne
adc
add
mov
imul
popa
loopne
and
jo
or
mov
and
pop
inc
insb
add
pop
jbe
das
mov
movsb
mov
add
sub
data16
mov
mov
and
jmp
mov
lret
push
mov
lds
inc
lods
or
adc
sti
rolb
add
mov
inc
jle
push
in
xor
adc
mov
mov
or
shll
enter
adcl
lods
cmp
sarb
sub
clc
adc
sub
decl
in
push
ret
lds
fistpl
push
mov
push
shrb
sub
sbb
mov
dec
out
cmp
ds
push
dec
jmp
mov
or
xchg
add
xor
pushf
xorl
aaa
jp
test
inc
fcomps
mov
fmul
dec
add
in
mov
loopne
jo
xlat
sbb
fimuls
call
lock
fldenv
mov
jnp
out
nop
movsb
enter
int3
mov
jmp
sbbl
cmpl
stc
mov
inc
and
mov
pop
cwtl
jmp
das
cwtl
pop
roll
sbb
dec
add
cltd
or
and
sbb
ss
xchg
nop
jmp
mov
test
pop
xchg
je
push
push
lahf
cmpsb
mov
icebp
add
mov
fstps
sbb
loopne
sbb
rcrl
out
adc
ja
or
mov
imul
mov
insb
jmp
fs
mov
pop
pop
push
push
jmp
sbb
adc
jmp
dec
fdivrl
fstl
mov
and
mov
add
jno
xor
jns
out
jae
addb
xchg
popf
cmpsb
out
sahf
out
xor
push
jle
lret
push
xchg
xchg
mov
add
push
fwait
mov
movsb
std
inc
add
fsub
pop
int3
push
popa
mov
popa
inc
push
mov
mov
or
push
adc
loop
jle
cmpb
mov
sbb
and
inc
ss
aad
pop
je
push
push
pop
pop
mov
inc
faddl
adc
pop
and
and
or
inc
test
add
fucompp
jae
inc
outsb
inc
jp
xchg
and
ret
and
call
test
jmp
pop
in
sub
push
hlt
testb
or
js
or
xor
or
xchg
ret
out
add
push
test
xor
ss
ds
inc
ficoml
xor
ds
test
subb
sub
nop
into
ret
mov
sub
aad
enter
addb
sarl
mov
or
xchg
lret
in
int3
mov
in
scas
xchg
std
mov
mov
xchg
stos
testb
pop
cmp
das
pop
pop
mov
cmpsl
xorb
mov
sar
test
jno
add
or
mov
testl
sbb
loopne
sar
lea
mov
push
cmc
testb
pushf
jno
cmp
movsl
and
jp
adc
jae
pop
inc
or
mov
inc
dec
test
mov
jp
sar
push
push
or
ret
adc
shll
sub
rcll
xchg
mov
loope
pop
lock
pop
insl
sbb
xor
fisttpll
lret
mov
pop
add
scas
sbb
xor
pop
cmp
enter
push
movhps
insb
mov
pop
in
pop
mull
out
adc
jb
call
mov
call
or
inc
sub
cmp
sub
dec
cmp
inc
add
cwtl
pop
aad
pusha
mov
mov
ss
enter
mov
ret
add
cmp
sbb
stc
inc
xor
mov
push
cmp
push
cmpsb
rclb
ss
js
loop
xchg
es
push
mov
add
push
xchg
and
test
mov
cmc
nop
mov
out
pop
mov
rolb
add
pop
inc
in
push
dec
inc
cmp
imul
mov
add
mov
mov
je
push
or
stos
roll
inc
cmpsl
mov
adc
out
ds
aad
xchg
xchg
dec
test
cmpsl
mov
cmp
sub
add
jb
stc
jmp
mov
mov
es
ret
sar
imul
add
sub
lock
push
and
xlat
shlb
adc
ret
mov
dec
imul
sub
push
push
pop
aam
jnp
xchg
mov
mov
fadds
aaa
pop
mov
mov
cltd
xor
sub
xor
xor
or
xchg
sbb
jmp
dec
mov
mov
cmp
jns
jne
mov
cs
xchg
push
out
adc
jns
insb
xor
jg
pusha
addl
jo
push
add
push
lahf
in
adc
jecxz
sub
outsl
mov
fistpl
cmp
loopne
push
sub
popf
lods
shl
jne
xchg
ret
mov
mov
sub
lds
dec
pop
arpl
fstl
pop
xchg
jno
pop
gs
sub
mov
out
pop
jno
mov
xor
lret
cmp
subl
lea
or
xchg
lea
mov
test
aam
lret
or
pushf
sbb
dec
int
mov
roll
iret
sbbb
outsl
dec
sub
sbb
lods
push
jo
inc
jmp
outsl
outsb
xor
or
jno
pop
mov
jnp
adc
xor
inc
add
movb
pushf
sbb
movsl
xchg
sub
xchg
fmul
adc
lret
lcall
push
sahf
push
lock
adc
fcoms
neg
ret
cmpsl
pop
sbb
push
leave
cmp
jmp
or
inc
cmpsb
test
movsl
lea
or
mov
loope
inc
shll
popa
in
shll
mov
roll
cmpsl
arpl
frstor
add
push
dec
shr
xchg
or
add
dec
cs
ljmp
xor
ss
sti
pushf
jmp
negl
pop
dec
hlt
add
mov
roll
add
pop
fldl
cmpsb
cmp
sub
in
aam
sub
or
adc
mov
int3
mov
or
pop
mov
shlb
dec
popa
inc
jne
fwait
mov
jmp
mov
xchg
or
inc
xor
sub
mov
mov
fisubrl
adc
jmp
mov
push
sub
xor
lea
aas
je
jno
sub
inc
mov
sahf
or
hlt
in
sbb
or
and
cmp
and
imulb
hlt
push
nop
inc
rcr
dec
ficoml
scas
jne
jmp
sbbl
add
stos
shr
dec
push
sbb
das
js
jl
test
xor
imul
imul
ret
mov
test
lea
dec
int
lods
mov
jno
push
push
push
movsl
pop
push
out
cmp
lea
out
xor
xorl
shrd
dec
xchg
fs
mov
sbb
fnstsw
or
dec
orb
or
lea
sbb
pop
mov
lea
jg
sub
jle
dec
pop
pop
aas
sbb
sbb
cltd
jp
mov
xchg
lock
loope
push
repnz
leave
lock
lret
mov
or
pop
add
lods
sbb
xor
fdivrl
push
sbb
cmp
scas
movsl
push
movl
adc
lcall
inc
xor
pop
aad
inc
jb
or
xlat
adc
and
ss
mov
pushf
xchg
xchg
xchg
cmp
xchg
mov
scas
add
call
xchg
dec
xchg
push
and
test
and
in
sahf
outsl
pushf
lret
scas
dec
sti
mov
sub
call
movsb
mov
sbb
xor
out
cmc
push
inc
dec
sub
and
add
js
jecxz
xchg
add
aas
inc
mov
ret
mov
xor
repnz
mov
mov
push
jb
mov
cwtl
inc
inc
es
push
lods
mov
lods
lods
aaa
dec
lock
mov
xchg
pushf
mov
pop
mov
and
jb
dec
pop
and
sub
sbb
scas
xchg
xchg
mov
add
test
pop
lea
and
lods
adc
inc
repnz
test
sbb
pushf
pushf
or
or
nop
nop
mov
xchg
mov
test
sub
nop
xchg
mov
jno
punpcklwd
divb
cltd
adc
xchg
xor
or
hlt
ret
push
arpl
cmp
inc
cmpsl
fwait
jnp
cltd
js
lcall
pop
movsb
ss
pxor
push
push
cld
movlhps
mov
and
rorl
dec
movsl
sti
mov
jg
push
inc
adc
and
xchg
push
sub
lea
dec
jne
ret
lods
mov
jmp
jg
adc
notb
mov
outsb
mov
je
xor
mov
sub
jne
outsl
sub
inc
inc
cli
pop
pop
ret
sti
sub
sub
xor
push
mov
out
outsb
cmp
add
cli
shr
add
shlb
movsb
push
in
pop
packssdw
xchg
fs
mov
adc
xchg
sbb
nop
ljmp
fwait
xchg
outsl
push
push
dec
adc
push
and
push
ds
xor
lahf
out
cmpsl
pop
outsl
inc
or
jbe
jle
push
test
outsl
ja
add
pop
push
mov
test
mov
pop
mov
rorb
test
and
and
pusha
sar
sbb
or
xor
dec
xchg
scas
inc
sbb
enter
fwait
mov
push
negl
cmpb
sub
sub
push
inc
push
mov
inc
jae
ret
mov
xor
and
nop
jecxz
jg
mov
add
or
icebp
jg
lods
inc
mov
loopne
adc
or
mov
adc
xor
xchg
movsl
inc
and
insl
dec
sub
subl
pusha
dec
popa
jbe
or
mov
or
sub
divb
xor
loopne
lock
or
clc
sbb
lcall
and
jle
popa
add
mov
and
mov
sti
sub
push
mov
shll
fucomip
stos
bound
add
outsb
inc
cmp
xchg
pop
pop
inc
ljmp
mov
add
rorl
enter
push
push
mov
push
cmp
fs
daa
aad
inc
and
add
and
out
je
push
icebp
push
pop
and
mov
xor
icebp
clc
or
or
add
xor
cmp
or
inc
test
mov
pusha
jne
or
jmp
push
lcall
jne
xchg
mov
or
orb
push
dec
leave
stos
mov
add
push
add
mov
jg
mov
test
sbb
or
add
ja
nop
or
dec
movsb
lea
rep
adc
loope
pop
pop
jo
jo
jg
or
add
rolb
cmpsl
rclb
add
dec
fs
xchg
sbbb
push
mov
mov
xor
pop
ja
pop
xchg
lock
mov
jmp
push
rorb
popf
clc
mov
dec
push
jmp
xor
push
clc
stc
cwtl
add
xor
loop
enter
or
inc
cmc
push
loopne
inc
push
inc
push
lock
add
lahf
shlb
cmp
push
sub
hlt
mov
sbb
sub
and
adc
xor
or
and
jg
cmp
push
rcl
sub
push
xor
and
aas
and
pushf
cmp
pushf
push
in
lock
xorb
sbb
add
sbbl
arpl
push
ljmp
pop
push
cmp
bndldx
lods
pop
adc
loope
js
or
push
loop
scas
enter
fcoms
or
rcrl
enter
push
daa
shll
rcr
shr
rcr
or
jne
div
fisubl
mov
adc
out
shll
cmp
or
cmp
fs
or
pushf
or
decl
push
call
mov
jne
sub
mov
cmp
sldt
sbb
outsb
and
jl
fldenv
andl
icebp
xchg
roll
push
out
nop
fcoms
daa
push
xor
and
cmp
push
call
push
mov
jle
sbb
sarb
pop
cwtl
data16
sbb
push
jne
push
aas
out
fadd
and
lds
adc
leave
inc
and
ffreep
cltd
in
js
sbb
sbb
jno
or
add
jle
movl
and
or
or
ret
jbe
jno
cld
pop
jne
pop
push
jb
xchg
jne
mov
mov
jmp
inc
inc
dec
loop
mov
sbb
into
stos
add
andl
lods
sbb
outsb
inc
dec
mov
add
push
or
popf
push
test
or
push
pop
daa
add
icebp
shlb
or
jg
nop
or
imul
dec
or
shll
add
or
les
jo
lods
and
add
add
or
jg
push
add
add
and
fistpll
or
jne
daa
clc
aas
add
push
jl
scas
adc
pop
cmpl
pushl
pusha
xor
das
data16
lock
xor
pcmpeqb
or
popl
and
adc
jmp
mov
push
pop
or
rorb
push
or
pop
adc
loopne
lret
stc
adc
inc
mov
jge
add
adc
dec
cmpl
jne
fldenv
in
xchg
pop
and
adc
sub
add
mov
dec
sti
pusha
mov
mov
jne,pn
sbb
inc
mov
sub
pop
sub
adc
sarb
cmp
mov
mov
inc
adc
cmpl
inc
ja
icebp
scas
fiaddl
inc
sub
jge
loopne
jmp
xor
cwtl
dec
mov
add
adc
mov
sub
mov
push
adc
loopne
jo
mov
aad
sbb
push
mov
mov
or
or
push
adc
mov
rcrb
mov
adc
pop
inc
cmp
jb
inc
pop
fcoml
push
and
outsl
or
movsb
mov
rol
fcmovnb
cmpl
icebp
iret
insl
sub
sete
mov
in
pusha
inc
adc
dec
bound
xchg
test
inc
or
jno
push
jge
xor
enter
mov
add
or
lock
mov
mov
cmp
jb
call
int3
lahf
push
enter
jnp
push
mov
mov
or
and
mov
adc
mov
cmc
adc
pushf
mov
test
push
xchg
outsb
and
shr
mov
leave
cmpsl
add
push
jmp
dec
rolb
lcall
sub
mov
popa
pop
add
scas
add
fnstcw
and
sub
std
sbb
or
or
inc
push
adc
sub
cmpl
ljmp
cmp
push
cmp
mov
push
cmp
xchg
aas
sbb
out
inc
adc
add
mov
push
push
dec
pop
je
push
cmp
dec
imul
pusha
out
sub
add
scas
mov
xchg
add
xor
imulb
rcrl
push
mov
xlat
and
shlb
cmp
mov
push
pop
mov
andl
xchg
ja
cmp
jle
cmp
sub
inc
fs
push
mov
nop
pop
subl
and
cmp
lea
sbbl
cmp
cmp
nop
xchg
mov
cmp
sahf
scas
inc
test
lea
fs
rcrb
jo
jbe
jmp
rcll
pop
loopne
xor
out
sbb
cmp
loopne
popa
loope
mov
push
add
dec
fs
ja
in
es
cs
cmp
aam
sbb
ljmp
and
orl
pop
call
pop
inc
pusha
jne
mov
rorb
adc
push
mov
add
mov
lea
cmp
jbe
dec
push
jecxz
mov
jge
push
inc
push
call
test
lcall
popa
cmpb
addr16
and
push
test
pop
dec
aas
push
push
out
or
push
ss
and
repz
adc
sub
mov
adc
jo
aas
adc
pop
push
mov
mov
adc
xlat
mov
lods
addl
push
push
push
ljmp
lock
sbb
pop
out
push
or
xor
popf
mov
mov
adc
dec
pop
pop
sbb
incl
mov
pop
xor
inc
mov
pop
ret
push
inc
dec
add
popf
adc
or
inc
ljmp
jne
mov
imul
movsb
mov
jne
xchg
add
inc
lcall
je
out
adc
cmp
push
xor
dec
jmp
xor
pop
pop
popf
shrb
adc
inc
adc
test
inc
push
sbb
inc
inc
pop
je
pop
es
sub
shll
or
xor
sti
shr
mov
outsl
xchg
inc
adc
add
and
ret
nop
inc
icebp
xchg
mov
arpl
inc
or
je
jp
mov
or
leave
rclb
mov
out
cwtl
movsl
ror
inc
add
xor
inc
out
mov
pop
add
and
pop
adc
xchg
pop
or
add
dec
cwtl
jmp
imul
lods
xlat
icebp
cs
push
and
xor
push
popa
xor
or
xor
xabort
cld
inc
sbb
cld
nop
push
push
popa
or
lods
mov
icebp
adc
jae
stos
mov
adc
addb
and
pinsrw
int3
adc
out
les
sub
push
push
orl
push
jl
aam
add
rcrb
pop
mov
push
incb
or
xchg
ja
cmp
je
jmp
cmp
mov
jle
sub
push
add
ret
push
sar
inc
push
inc
mov
xchg
adc
xlat
or
imul
pop
sbb
sub
aaa
and
xchg
fdivs
dec
dec
cld
adc
mov
stc
push
mov
pop
sub
adc
subl
xor
push
push
pop
lds
cmpsb
push
jmp
jl
mov
scas
imul
ret
xor
mov
ss
add
movw
dec
add
ljmp
and
xor
dec
jo
gs
jb
shlb
lret
insb
push
outsb
inc
push
imul
enter
mov
mov
fidivrs
fdivrl
mov
out
popl
add
arpl
rolb
andl
pusha
iret
addl
orb
add
cmp
or
scas
pop
cmp
rorb
and
into
sub
shll
mov
lahf
dec
lds
lods
adc
loopw
jge
jb
repz
mov
dec
pop
push
pop
mov
mov
push
xchg
dec
or
jne
divb
clc
and
testl
xor
out
add
fldt
add
shrl
push
ja
mov
xchg
inc
pop
clc
add
call
scas
pop
shl
xor
push
inc
in
pop
push
orb
jmp
mov
rcrb
or
cmc
push
js
mov
adc
sarb
orb
or
fildl
mov
jne
or
push
lock
add
or
je
clc
pop
fcomp
push
mov
movl
add
mov
add
lods
push
insb
cmp
mov
jp
sub
pop
gs
aam
dec
out
mov
pop
pushf
mov
outsb
adc
not
mov
push
add
cmp
je
mov
ror
xchg
aam
cwtl
dec
lock
pop
xchg
pop
mov
sub
sti
adc
fistpll
test
sahf
or
push
lock
cmp
sbb
mov
data16
or
mov
and
pop
adc
enter
out
aam
inc
pushf
push
push
inc
push
test
adc
push
jbe
dec
sub
sbb
lahf
out
mov
ficoml
add
sub
lret
dec
fnstsw
pop
fsub
ljmp
pop
lsl
sbb
or
jb
xchg
pop
sarb
or
shll
movsl
jns
jo
inc
int3
lock
push
fs
inc
insb
into
mov
pusha
jl
cmp
imul
add
push
jmp
int3
jp
jne
push
test
bound
or
mov
adc
xor
mov
shrb
dec
dec
inc
mov
push
mov
lss
push
imul
sbb
jbe
sub
push
xchg
push
jg,pn
movl
sub
jne
lea
mov
js
sbb
les
add
inc
xor
test
sub
test
insb
scas
imulb
jne
sti
add
lea
ja
or
add
js
dec
ret
inc
push
and
loopne
adcl
ljmp
mov
xorl
add
fs
push
test
sti
push
pop
mov
mov
rcr
sub
aas
ret
pop
xchg
mov
aas
mov
lock
enter
es
mov
add
ret
sub
cmp
pop
cmp
and
pop
and
lds
add
adc
add
xor
push
or
data16
adc
in
or
jmp
sub
jge
push
mov
clc
add
and
cli
ficomps
mov
push
outsb
push
adc
push
inc
out
xchg
cli
push
je
jg
subb
xchg
lods
dec
sub
xchg
nop
add
mov
outsl
imul
fdivr
add
fdivr
mov
fnsave
out
loopne
pop
in
insb
mov
xorl
jae
lock
aad
add
mov
mov
sbb
sub
loop
test
sub
push
adc
add
pop
in
push
inc
pop
enter
pop
push
std
jb
fdivrl
loopne
push
xchg
xor
enter
imul
push
sbb
cmpsl
or
mov
inc
rcrb
sub
and
mov
and
in
fdiv
enter
repz
jae
mov
iret
ljmp
out
adcl
mov
ret
test
gs
pop
adc
outsb
sti
test
je
push
je
mov
push
push
and
add
dec
test
icebp
in
test
jg
cmp
jecxz
sbbl
jnp
cmp
into
test
push
add
stos
sar
pusha
xor
xor
rcl
mov
ret
mov
cmovno
sarb
dec
or
in
mov
test
cmp
ret
je
out
insl
aam
mov
add
nop
loope
jmp
fcmovne
sub
push
xlat
out
ret
sbb
int3
pop
mov
pop
shlb
mov
pop
sub
scas
int
sbb
add
pushl
mov
movsl
repnz
inc
add
or
inc
aam
jge
push
imul
movsl
dec
movsl
fcoms
shl
pushl
aad
aam
push
push
push
inc
mov
aaa
and
jne
mov
mov
clc
das
sub
test
rclb
test
pop
sub
xor
cmp
pop
clc
jg
inc
jmp
call
outsb
dec
or
cmp
imul
add
cmc
aas
sbb
inc
cmp
orl
sbb
sbb
int3
sbb
cmp
or
mov
push
icebp
xor
cmp
pop
icebp
xor
and
pop
pop
pop
in
sub
mov
scas
and
add
adcl
mov
stos
jmp
icebp
test
xor
add
sbbb
cmp
pushf
pushf
mov
dec
push
or
mov
sbb
sbb
jb
and
sub
jo
jb
xor
cmp
shlb
inc
inc
pmulhuw
in
dec
dec
push
push
cmp
mov
pusha
cmp
cmp
push
or
cmp
and
mov
cmp
adc
mov
nop
xchg
cwtl
dec
xor
and
mov
xchg
test
rclb
ss
adc
cli
sarb
cltd
fcomp
loopne
es
fs
in
es
fs
aam
hlt
clc
jbe
xchg
dec
cld
je
inc
pop
xor
push
or
es
ss
or
adc
xchg
dec
sbb
and
xchg
dec
sub
push
dec
es
xor
mov
gs
inc
dec
dec
xor
inc
dec
mov
xor
and
pop
pop
pusha
cmp
dec
sbb
in
je
sbb
adc
enter
outsl
sbb
addl
in
adc
cmp
rcr
mov
xor
lods
test
movsl
mov
adc
mov
adc
sbb
mov
and
dec
cs
pop
sub
in
and
sti
inc
mov
dec
inc
dec
cs
pop
cs
push
dec
push
or
ret
push
cmp
or
or
inc
xchg
or
xchg
jae
ud1
add
mov
and
mov
and
cmp
jno
insl
mov
and
lods
push
cltd
or
jl
adc
sbb
pop
pop
fisttpl
adcb
mov
push
jle
jmp
and
nop
jb
adc
and
std
scas
jmp
iret
mov
dec
mov
xchg
pop
repnz
push
add
and
add
sbb
dec
imul
or
mov
or
sbb
inc
and
stos
clc
and
insb
rcr
aam
rcll
leave
imulb
jnp
dec
jb
dec
dec
ja
aas
stos
rorl
lea
dec
rol
lock
mov
add
sbbl
add
xlat
enter
lahf
pop
pop
idivb
es
fs
sbb
in
lea
push
loopne
sbb
jmp
inc
sbb
mov
jg
sub
xor
adc
push
pop
add
repz
cmp
xor
imul
enter
cmp
mov
popl
push
lea
jecxz
and
push
mov
add
sar
mov
add
mov
add
loopne
jne
or
xlat
je
mov
cmp
xchg
punpckhdq
add
xor
jne
mov
adc
sbb
pop
ret
push
orl
pop
adc
lret
ljmp
sbb
icebp
mov
dec
cmpsl
pop
pusha
push
or
xor
push
push
aas
inc
mov
push
sub
xchg
jo
cmpsb
add
sbb
mov
dec
dec
fimull
or
mov
pop
mov
mov
add
mov
add
adc
push
hlt
mov
aas
add
cwtl
jle
dec
add
sbb
pop
xchg
sbb
jp
out
lret
add
mov
xchg
add
das
sbb
xchg
gs
pcmpeqd
inc
call
jmp
les
add
mov
repnz
mov
hlt
push
xchg
lea
inc
shlb
push
lods
jnp
or
pusha
cmp
fsubs
test
insl
xchg
add
xadd
fdivrl
pop
add
xchg
xchg
ja
mov
jl
xchg
sarl
imul
push
test
mov
adc
mov
add
mov
cmp
jne
jp
icebp
and
mov
test
sbb
mov
mov
push
cmp
sarl
jmp
pop
mov
cmp
or
pusha
dec
iret
test
lods
es
jle
mov
nop
pusha
gs
sbb
clc
pop
leave
insb
fisttps
cmp
jne
cli
dec
iret
leave
bound
inc
mov
imul
dec
xor
push
mov
sbb
inc
shll
cmp
pop
ret
xchg
dec
xor
jae
add
ret
inc
inc
mov
cli
or
mov
fs
add
mov
push
into
adc
aaa
jp
jo
aad
gs
inc
icebp
and
ss
ds
inc
fisttpll
jne
clc
push
mov
daa
ret
sub
es
sub
enter
jne
das
arpl
push
add
xchg
loopne
sbb
jns
push
adc
fiadds
into
mov
stc
cltd
jg
sbb
mov
pop
pushfw
std
adc
es
or
sub
and
pushf
xchg
inc
and
popa
add
mov
cmp
shll
or
mov
stc
rcl
inc
pop
fnstenv
mov
inc
add
dec
repz
rolb
into
into
sub
or
mov
rcll
cmpb
xor
cmp
shrl
sub
scas
pop
rol
scas
xor
add
add
jmp
subl
adc
and
jecxz
push
xchg
outsl
sbb
stos
xchg
aas
push
jae
adc
rcr
mov
lods
cmp
cmp
xchg
add
in
cli
fstps
insb
adc
sub
mov
pop
add
xor
test
adc
xchg
cld
rorb
cmpb
leave
dec
push
sbb
mov
and
dec
jmp
loopne
fnstcw
mov
push
adc
jne
imul
loope
mov
sbb
ror
clc
mov
test
pop
movsbl
sub
and
push
ds
mov
dec
in
loope
enter
and
movsl
push
mov
dec
sbb
clc
or
xchg
inc
jb
orl
inc
outsl
push
rcrb
jmp
sbb
hlt
add
add
andl
sub
pushf
add
and
jno
sbb
adc
adc
fiadds
mov
out
mov
cld
mov
add
in
push
cmp
loopne
push
pop
sub
stos
jp
push
or
mov
mov
add
andb
push
and
mov
inc
push
out
xor
add
les
or
mov
int3
sahf
dec
sub
sub
call
pop
inc
movsl
adc
icebp
js
mov
stc
adc
mov
pop
int3
mov
add
inc
jns
fdivrs
cmp
lock
mov
loopne
pop
hlt
test
or
jmp
mov
je
enter
ja
mov
into
sub
mov
dec
or
xchg
sbb
movb
movsl
inc
inc
mov
dec
adc
orl
inc
sbb
arpl
test
loope
andl
jg
rclb
jbe
ja
aaa
insb
rcl
movsl
stc
loopne
addr16
pop
push
adc
dec
ja
xor
cmp
adc
je
or
inc
les
push
jbe
adc
sbb
pop
push
cmc
icebp
pop
xchg
pop
jle
pop
rcl
jmp
mov
and
cmp
int
insl
lods
mov
lahf
fldl
push
and
inc
shlb
hlt
cwtl
mov
mov
ljmp
xor
xor
lret
sub
in
and
pop
lock
add
test
push
jmp
cmp
push
nop
mov
cmp
shlb
and
js
pop
sbb
addl
jmp
enter
or
addl
add
and
iret
cmp
cmp
rolb
push
adc
push
das
sbb
gs
xorb
pusha
lcall
pop
adc
dec
jo
mov
add
clc
or
lret
outsl
push
dec
fists
jo
mov
ret
lcall
jb
mov
add
push
lods
rol
addb
imul
pop
pop
xor
gs
cmp
inc
pushf
stos
and
sbbb
push
add
mov
popa
bound
add
adc
sbb
cmp
lock
or
fistpl
sahf
mov
imul
cltd
and
push
shlb
mov
or
ror
in
pop
clc
fisubrs
loopne
cli
jne
jle
sbb
pop
or
jne
cmpb
xor
cli
push
test
or
int
lret
cltd
mov
push
mov
in
mov
rcrb
add
fsubl
or
daa
add
or
cmp
mov
or
push
je
or
les
adc
shrb
sbb
sbb
cltd
jo
push
popl
sbb
lock
orl
fldl
je
nop
ds
shlb
in
xor
cmpl
insb
in
cmp
sahf
leave
cmp
js
xchg
and
dec
out
adc
arpl
imul
and
cltd
push
adc
lods
jbe
fwait
js
push
ss
cmpw
icebp
rcrl
ret
jne
stos
out
rol
add
out
ss
movsl
les
pop
pushf
ret
mov
fisubl
pusha
cltd
lock
rorb
push
sbb
frstor
add
sub
aam
mov
repnz
sbb
daa
jmp
imulb
repnz
xor
bound
inc
jle
dec
adc
jmp
add
or
xchg
adc
pop
loope
mov
dec
decb
jb
or
mov
sbb
jg
test
test
cmpsb
loope
pop
adc
push
mov
mov
jo
dec
add
and
mov
or
enter
lahf
push
scas
push
sbb
add
cmpsb
fisubl
cmp
and
and
pop
sub
sbb
loopne
mov
sbb
xchg
cli
adc
lea
inc
in
divb
pop
mov
or
lgs
test
mov
xchg
add
btc
mov
popl
xor
cmpsl
fistpl
scas
jle
add
mov
loopne
adc
bound
sbb
adc
lock
es
fxch
inc
pop
and
add
insb
mov
dec
and
pushl
add
jno
push
inc
xchg
inc
in
loop
ljmp
imulb
call
pop
xchg
ljmp
in
cmp
cmp
sbb
in
sub
dec
js
sub
push
push
sub
enter
pop
out
push
xchg
leave
push
shll
sbb
sbb
pop
stc
or
in
jmp
jecxz
pop
sbb
fwait
mov
ja
and
and
push
push
fisubl
sarl
icebp
inc
insb
int3
cmp
mov
subl
loopne
rcl
mov
lcall
push
push
or
sub
or
inc
subl
cli
mov
in
and
add
test
and
xchg
add
or
or
mov
rol
add
and
sti
fldln2
shll
dec
xor
adc
or
in
inc
dec
push
shr
add
jmp
xor
add
jecxz
mov
out
mov
insl
add
adc
push
inc
or
adc
add
push
pushf
xlat
adc
and
sbb
mov
sbb
or
adcb
sub
jmp
or
lret
sbb
lock
in
shr
inc
and
mov
and
fsubrl
jg
jecxz
sbb
add
or
rorl
popf
adc
pusha
xchg
hlt
or
or
push
jge
test
and
idiv
add
fstps
aas
pusha
mov
push
shl
mull
flds
sub
xor
and
insl
dec
in
adc
fnstsw
pusha
mov
fldl
cmp
divb
sahf
rol
push
mov
sub
jle
testb
mov
cmp
cmpsl
repnz
sti
add
add
pop
xor
add
movlps
fidivrs
add
dec
jne
mov
push
scas
jmp
push
and
shrb
pop
imull
cmp
and
sub
lods
imul
es
sbb
push
and
or
jnp
jg
sbb
inc
flds
fstps
jmp
fisttpll
sahf
loope
sub
adc
inc
inc
mov
adc
js
mov
lods
bndstx
pop
sub
or
sbb
loopne
cmp
rcll
add
loopne
xchg
sti
test
jo
inc
cmp
nop
mov
inc
pop
pop
jle
inc
xchg
aaa
sbb
out
pop
pop
jp
cli
fcompl
fnstsw
mov
push
lock
jmp
sub
sub
jb
addr16
push
push
shrb
pop
or
jmp
fldcw
inc
test
into
adc
adc
or
push
scas
add
adc
mov
and
sahf
add
jnp
xor
lock
fldenv
sub
pop
in
mov
add
int
ljmp
faddl
gs
pop
clc
or
jmp
test
inc
js
call
pusha
movsb
mov
sub
repnz
out
adc
add
leave
cmp
orl
orl
sbbb
loopne
push
jno
mov
pop
jmp
jo
roll
sub
lock
loopne
cmpsb
mov
xor
daa
out
rcrb
dec
nop
add
xchg
add
fldl
push
add
jnp
test
and
pop
shl
in
mov
jmp
adc
and
jne
jb
push
test
mov
sbb
xchg
add
jl
mov
mov
ljmp
add
rcrb
rcl
pop
or
mov
or
test
fstpl
mov
push
adc
or
inc
xchg
add
rclb
sub
cmc
adc
popa
xchg
loopne
pop
fstpl
mov
fbstp
fwait
jno
int
icebp
gs
dec
inc
and
mov
sub
xor
lock
fisttpll
add
adc
sbb
int3
or
push
jo
sbb
xchg
hlt
sub
das
cmpl
fsubr
insb
test
mov
addl
in
cmp
and
lds
inc
fidivrs
and
push
das
out
imul
inc
push
push
imul
inc
or
jne
pop
and
out
ret
jge
dec
or
sbb
jnp
pop
aas
cmp
andl
jo
lods
sbb
orb
jecxz
into
mov
cld
and
mov
sub
and
jnp
xor
call
or
mov
dec
and
jge
lock
or
jne
imul
decb
mov
sbb
and
pop
les
add
in
sbb
addr16
add
push
and
push
call
clc
cli
push
dec
out
fld
fucomp
pop
fsts
xchg
jge
pop
out
mov
xor
stos
test
jne
orl
in
and
mov
or
sbb
or
gs
or
push
or
pop
fidivs
push
out
mov
push
pop
jmp
mov
or
cli
push
scas
sbb
nop
xchg
es
sub
or
sub
push
push
loopne
loop
mov
ljmp
jecxz
fstsw
movswl
or
loop
inc
fld
or
lods
and
sbb
xor
fadd
push
in
sbb
or
push
mov
mov
fldt
aam
pop
sbbb
fsubs
outsb
fwait
mov
inc
adc
repnz
call
movsb
fldpi
inc
int3
sub
xor
and
mov
je
lret
dec
inc
icebp
call
je
scas
xsaveopt
inc
sti
inc
push
add
cmp
fstpt
push
popf
shl
and
mov
or
and
mov
mov
push
adc
adc
dec
js
mov
jnp
jo
adc
jg
sub
cld
lods
and
mov
lock
dec
cmp
ss
mov
mull
mov
sbb
inc
dec
insb
sahf
push
ja
jg
sub
test
xchg
pop
cs
pushf
add
xor
gs
repnz
out
jae
mov
push
insb
push
add
or
je
jbe
or
push
inc
adc
push
gs
mov
lods
push
sub
mov
sbb
adc
gs
std
push
sbb
or
loope
xor
xor
in
shlb
loope
rcll
xlat
pusha
and
push
or
test
xchg
mov
pop
arpl
insb
pop
call
cmp
mov
push
mov
test
push
push
pop
mov
or
add
add
jmp
add
push
mov
rolb
cmp
orb
int
test
xorb
hlt
pop
jmp
sbb
lock
stos
stos
pop
pop
fcomp
fldt
inc
push
jne
sub
movsl
add
push
or
cmp
cltd
xchg
test
lock
add
xchg
js
adcl
add
arpl
lret
lea
pop
test
lret
loopne
or
mov
sbb
shl
not
test
add
pop
mov
outsb
mov
cltd
insb
push
out
pop
and
mov
out
mov
inc
adc
fcmovnb
sub
xorb
mov
add
jo
outsb
push
or
or
cmp
sbb
dec
cmp
out
lea
ds
jb
jae
jp
add
popf
dec
adc
sub
jns
mov
idivb
push
pop
and
fdivrs
or
subb
rep
cmpl
add
lock
xor
idivl
mov
aaa
inc
stos
inc
ljmp
addr16
aam
in
xor
cmp
addl
rorl
push
mov
fcomps
sbb
out
js
lea
sub
mull
lea
in
mov
iret
loop
pop
iret
sarb
out
push
or
mov
xchg
pop
mov
aaa
test
out
movsl
mov
sub
cmp
jl
pop
add
xchg
lahf
fs
and
jns
int3
pop
dec
lea
xchg
mov
push
push
rcr
icebp
cmp
sbb
test
push
adc
dec
push
add
sbb
mov
dec
or
inc
and
addl
es
xor
mov
jecxz
cmp
outsb
add
push
dec
pop
push
add
sub
icebp
dec
fsubr
pop
pop
push
push
jb
xor
repnz
incb
mov
xor
cmp
and
mov
hlt
push
aas
mov
and
push
and
push
and
adc
cmp
dec
ds
xor
bound
or
popa
jo
jns
mov
add
sbb
lock
dec
loop
inc
push
into
out
es
jl
stos
iret
and
mov
push
or
sub
movsb
sbb
shll
mov
add
dec
mov
lods
shl
test
push
clc
xchg
add
xchg
or
fildl
pop
lock
int3
add
aad
jbe
pop
add
ret
sbb
sbb
mov
icebp
xor
mov
push
dec
sub
nop
mov
cltd
push
push
push
test
push
dec
pop
sub
add
sbb
push
enter
pop
cwtl
mov
adc
out
mov
test
adc
dec
imul
add
movsb
mov
dec
mov
cmp
jne
cli
mov
cmp
sbb
push
lods
mov
or
cmpsb
inc
cmpsb
or
cmp
cmp
clc
mov
or
jmp
mov
cs
cmp
ja
call
and
iret
cmp
ja
pop
dec
adc
xor
mov
mov
cmp
xchg
add
subb
sub
je
sbb
jl
and
je
sti
xor
jmp
andl
jmp
sub
test
stos
popf
mov
imul
pop
nop
test
push
scas
mov
das
cwtl
cmp
movsb
or
inc
jle
sub
cmp
xor
std
sbb
or
jmp
dec
push
jmp
cmp
xchg
xchg
cmp
popa
sub
sub
lods
cld
repz
lock
adc
and
sbb
adc
add
clc
pop
jge
cmp
mov
test
mov
jbe
nop
add
jne
xchg
negl
rorb
je
jmp
mov
or
push
pusha
cmp
je
and
outsb
mov
rclb
bound
pop
push
sub
add
orl
or
mov
and
push
and
mov
sub
cmp
mov
testb
mov
inc
stos
loopne
es
je
mov
or
dec
inc
add
mov
push
jo
adc
push
incb
testl
adc
inc
jmp
je
dec
xchg
sarb
out
sbb
and
sub
add
mov
rolb
jg
cmc
jecxz
add
in
rcrl
inc
jmp
push
jg
mov
icebp
sub
dec
mov
dec
cmp
add
je
test
xchg
mov
dec
inc
or
pushf
xor
cmp
jge
testl
adc
clc
mov
sbb
xlat
test
cmp
out
ljmp
dec
sub
fs
lods
cmp
mov
jge
jle
repnz
xor
jne
add
adc
inc
lds
add
pop
lods
sarl
xchg
test
dec
dec
and
and
add
cmp
jb
loopne
mov
testb
into
adc
sbb
hlt
push
sbb
js
mov
xor
mov
jl
shll
roll
fstpl
and
jne
leave
cmp
jae
lahf
cmpsb
adc
pop
mov
push
or
call
mov
mov
out
push
jne
inc
testl
cld
jne
cmp
test
les
test
jne
mov
inc
or
cmp
orb
cmp
push
hlt
int3
adc
dec
xchg
nop
mov
test
scas
cwtl
mov
mov
test
push
pushf
pusha
push
lea
outsb
mov
inc
add
test
mov
or
aam
clc
sub
ret
xor
cmp
xor
jl
dec
lock
ja
out
or
push
js
subl
data16
imul
pushf
sub
sbb
insb
jl
test
jg
add
or
and
jge
sub
inc
xorb
push
push
push
adc
gs
mov
add
or
shr
loopne
fisttpl
or
push
mov
mov
dec
sub
mov
lret
aad
pop
or
into
not
je
lcall
test
fcom
insl
fadd
loopne
shr
popa
inc
imul
clc
mov
sahf
dec
jo
shrb
jne
outsb
mov
stos
insl
mov
sub
push
xor
cmp
xchg
push
sbb
ja
mov
xor
add
ficompl
add
mov
movsb
lcall
jmp
fimull
clc
pop
imull
jb
cmpsl
mov
and
mov
mov
lock
push
jp
push
lret
jmp
cmp
or
movb
fnstenv
mov
jmp
lods
xor
rclb
fsubrp
enter
jae
jno
les
int3
and
sbb
dec
xorb
lret
in
mov
jmp
sub
xor
mov
and
imul
inc
lods
mov
or
call
push
inc
mov
mov
mov
jnp
adc
repz
jecxz
sub
int
outsb
jnp
hlt
xor
push
dec
imul
push
jo
cltd
movl
gs
inc
mov
pop
sbb
icebp
cmp
add
cmp
mov
push
mov
cld
mov
adc
or
leave
lods
adcl
push
inc
out
or
sbb
imul
pop
nop
xchg
xchg
adc
sahf
mov
insb
inc
cs
or
test
imul
stc
gs
or
out
mov
dec
decl
adc
cli
mov
cmp
pop
jne
dec
mov
rcll
inc
imulb
push
adc
sbb
mov
push
cmc
jp
aaa
addr16
rclb
lods
adc
je
repnz
or
and
js
in
add
jmp
xor
push
inc
and
xor
inc
stc
outsl
mov
sbb
into
dec
push
add
push
dec
imul
stos
adc
popf
inc
pop
clc
pop
and
ror
sbb
sbb
mov
sbbl
adcl
push
out
jbe
or
add
inc
cmpsl
inc
nop
leave
ljmp
adc
js
dec
pminsw
loop
lahf
inc
cmpl
nop
clc
add
clc
lcall
jge
cmpl
mov
jne
movb
lea
fwait
les
sbb
adc
mov
adcb
inc
cmp
cmp
sbb
faddl
lock
push
mov
jmp
sub
add
sub
arpl
lods
xchg
stos
or
lea
jo
test
mov
rcrb
push
dec
jns
mov
inc
add
fwait
mov
or
out
pusha
mov
pop
mov
add
add
push
cld
into
sbbb
push
call
xchg
sbb
pop
cli
dec
pop
push
sub
aaa
xor
adc
mov
pop
push
and
aam
push
clc
popa
inc
lods
add
dec
jl
mov
mov
add
add
ret
jmp
std
add
add
xchg
lock
rcll
fldl
adc
iret
adc
shlb
enter
popf
into
xchg
test
mov
aam
push
push
outsb
inc
sub
mov
sti
jno
das
negl
fadd
cltd
js
outsb
add
stos
loop
pop
mov
cmp
jge
mov
xchg
adc
and
call
mov
mov
cmp
test
lcall
enter
mov
test
rcr
sahf
or
adc
adc
sbb
and
and
xor
push
pop
jno
push
add
fidivl
sbb
imul
add
pop
lea
cld
cmp
faddl
enter
das
jge
fisubl
leave
push
add
sub
les
inc
xor
push
rolb
jecxz
js
pop
bound
sbb
sbbb
addr16
sub
jb
loopne
shll
sbbl
or
je
and
popf
inc
xchg
out
ds
sbb
mov
pop
cld
shl
jp
jg
ret
daa
xor
or
jne
adc
shrl
xor
decb
in
xor
add
ja
fists
in
jl
inc
xor
leave
or
adc
pop
addr16
outsb
and
or
cmpsl
or
mov
and
xchg
fbld
hlt
sbb
lcall
dec
mov
and
loop
sbb
movsl
pop
jbe
rcrb
mov
int3
clc
fbstp
sbb
xor
clc
cmp
add
adc
adc
cld
add
hlt
shrd
daa
xor
sbb
push
dec
cmp
jge
sbb
add
fldt
jo
or
add
scas
inc
and
xor
out
mov
sub
or
or
rorl
inc
call
push
push
addb
and
lods
lock
push
ret
mov
xor
jo
out
shl
push
mov
push
and
nop
clc
lds
js
jg
das
mov
xor
scas
jmp
adc
xchg
shl
fimull
std
outsl
or
jl
mov
sbb
push
push
add
addr16
add
mov
push
lock
cli
mov
test
jl
jg
mov
add
xor
or
or
sbb
cmp
shl
popa
jo
movsl
sub
mov
mov
orl
inc
mov
inc
es
int3
cmp
xor
xor
xor
out
mov
mov
push
mov
sbb
fisubrl
and
jne
rcrb
add
push
lock
sahf
fwait
cs
addr16
adc
inc
out
es
call
adc
jo
push
ret
aaa
push
lods
outsb
sub
xchg
roll
push
xchg
cld
mov
push
popf
mov
adc
js
fwait
adcb
fdivs
cmp
jbe
sub
into
shll
inc
bound
push
sbb
inc
sar
into
cmp
or
and
cmpl
sbbb
jne
push
sbb
mov
jno
push
jo
sbb
xchg
fsubrs
dec
sub
sub
idivl
roll
or
pusha
push
push
push
xor
pop
in
sbb
xchg
call
dec
cld
jl
loopne
sbb
jge
inc
or
or
inc
push
add
and
fstps
jmp
ds
fnstenv
add
je
or
pop
pop
out
nop
push
data16
int
sub
roll
xchg
int
push
inc
je
dec
add
aas
shlb
cld
pop
jmp
inc
js
adc
mov
jg
or
je
push
dec
or
test
jmp
sbb
testl
in
jp
mov
into
xchg
lahf
out
xchg
sarb
and
je
adc
inc
push
mov
dec
inc
mov
push
test
cmpsl
add
daa
push
adc
push
decl
cmp
adc
div
lods
add
add
xchg
roll
push
jle
das
adc
mov
cmpsl
pop
adc
imul
or
movsl
mov
popa
outsb
ss
pop
mov
mov
cmpl
pop
popa
shll
adc
mov
mov
or
cmc
jmp
js
inc
ret
outsl
xor
orl
lods
mov
mov
ds
rcrl
aam
add
pop
ret
mov
ss
add
in
sbb
sbb
loopne
or
mov
or
test
push
xor
mov
adc
mov
mov
gs
or
outsl
inc
pop
xor
repz
sbb
add
inc
jns
data16
sahf
and
fabs
sub
outsl
or
fadd
xchg
int3
insl
int3
or
adc
add
jge
jno
inc
jbe
les
std
repz
mov
or
mov
sbb
sbb
fsts
push
add
orl
mov
cmp
aam
push
cmp
les
nop
add
push
sbbl
fwait
call
sbb
dec
clc
jnp
jno
imul
sbbb
inc
jmp
leave
and
and
add
or
cs
test
and
sub
test
mov
and
or
fsubs
mov
and
adc
jne
sbb
outsb
cli
jns
loopne
mov
adc
lret
shlb
jmp
or
push
aad
and
dec
in
in
mov
das
adc
insb
in
nop
mov
testl
jge
lock
cmp
pushf
mov
pop
xorl
push
loope
push
fcompl
or
out
jno
lea
pop
cmp
ljmp
lods
push
in
test
cld
xchg
mov
xchg
mov
jmp
mov
push
xchg
sbb
es
cli
adc
sysexit
cmpl
inc
mov
movsb
cli
adc
mov
leave
rcll
add
in
test
and
or
dec
fcoml
sub
adc
ja
mov
lods
or
cmp
loope
pop
fisttpll
inc
jbe
xor
inc
in
imul
pop
or
andl
add
loop
adc
insb
mov
lret
roll
dec
cmp
mov
mov
ljmp
insb
data16
sbb
dec
or
aam
es
xchg
or
gs
adc
call
pop
sbb
and
mov
frstor
clc
sub
pop
addr16
push
sarl
mov
cld
imulb
dec
jg
mov
push
push
and
jo
loope
pop
pop
lcall
mov
push
leave
mov
push
daa
add
mov
xor
or
cmp
fsubrl
dec
lret
push
cmp
sub
bound
inc
dec
or
mov
pop
xchg
das
inc
mov
adc
xorl
pop
adc
jns
pop
loop
lea
or
push
inc
add
dec
push
cmpsb
jbe
pop
jb
shr
or
mov
dec
or
or
into
pop
pop
pop
pop
pop
sbb
mov
ror
inc
xor
and
out
inc
ret
ja
add
sbb
xor
hlt
clc
shl
inc
xor
xchg
andb
mov
add
pop
testl
mov
stos
dec
inc
bound
rorb
adc
addb
cmp
or
mov
ljmp
sub
mov
lcall
dec
sbb
mov
adc
aam
call
shrl
loopne
scas
or
or
sub
mov
mov
cmpsb
clc
shr
add
or
push
call
leave
shr
or
mov
inc
push
icebp
lods
add
clc
push
call
lret
add
mov
add
sub
insb
add
add
into
inc
mov
jp
in
and
movsl
mov
mov
inc
jbe
inc
jl
pop
pop
lock
in
sbb
cmp
test
dec
mov
cmp
addl
repnz
inc
fisttpl
cmp
pop
adc
mov
in
adc
lret
clc
orb
lea
add
inc
adc
shll
cli
pushf
adc
cwtl
das
fidivl
and
call
jbe
mov
push
or
adc
popf
inc
inc
les
and
xchg
dec
push
pop
or
pop
mov
xchg
pusha
mov
or
mov
fldl
adc
loope
dec
jecxz
xchg
pusha
push
fdivl
cmpsb
cli
add
movsb
jne
push
push
sbb
and
and
push
or
xchg
aam
fiaddl
pop
inc
mov
shll
adc
or
adc
mov
lods
xchg
push
sbb
or
or
mov
push
mov
out
cmp
negb
add
ret
and
pop
call
xor
mov
test
pusha
push
ljmp
xorb
or
add
in
xor
lods
insl
movsl
arpl
fcoml
adc
add
cwtl
icebp
in
mov
jmp
add
sarb
inc
and
mov
pop
lea
data16
ss
mov
test
aam
leave
inc
xor
sub
insl
cmp
jmp
add
adc
cmpb
jl
ss
xor
cmp
in
xor
inc
aam
push
daa
push
popf
clc
or
hlt
mov
push
pop
sbb
add
push
mov
sub
mov
ficoml
orb
mov
ds
and
addb
sub
cli
je
cmp
in
or
jmp
xor
je
xchg
ret
dec
jne
loop
sbb
inc
dec
add
xor
adc
rorb
and
mov
push
stc
or
lods
rolb
sbb
sahf
mov
je
mov
imul
rolb
and
pop
pop
and
and
add
jl
call
out
pop
push
inc
clc
adc
pop
subb
inc
movsw
xor
sub
pop
negb
loop
mov
rorl
sbb
mov
adc
call
dec
xlat
add
push
rclb
in
add
or
imul
inc
dec
neg
neg
sbb
xchg
idivl
sub
inc
sbb
adc
sbb
aad
sbb
fcoms
adc
shlb
and
fcomi
xor
dec
movsl
sbb
adc
add
negb
sbb
xor
clc
es
daa
add
cmp
daa
pop
pop
pop
repnz
pop
xchg
and
lods
sbb
shr
sbb
dec
and
shr
sub
sub
add
cmp
push
idiv
and
maskmovq
stos
inc
cmp
loopne
je
pusha
adc
push
lcall
fimull
inc
into
fdivrs
pop
js
sbb
and
test
enter
call
push
or
aad
add
cmp
jbe
ljmp
adc
cmp
outsl
es
pushf
push
push
daa
push
or
adc
and
or
adc
sub
adc
push
ficoml
mov
add
adcb
shlb
enter
rcll
pop
push
or
inc
jb
inc
scas
lock
dec
inc
ss
add
dec
or
mov
jns
cmp
je
add
jne
pop
das
ljmp
sti
add
xchg
pop
add
rcrb
jp
mov
sub
sahf
ret
call
test
pop
adc
xchg
mov
xor
or
jmp
not
push
mov
test
cmp
orl
cmp
add
inc
lcall
and
addr16
or
dec
and
dec
sbb
lods
adc
cs
lock
jecxz
mov
pop
in
shlb
test
push
mov
cmp
sbb
push
call
mov
pop
sub
in
sbbb
nop
mov
dec
mov
push
into
sub
xor
xor
pop
pop
shrl
fadds
sub
lea
sub
pop
sbb
sub
in
adc
cmp
aaa
aas
fisttpll
push
out
leave
je
jg
orl
mov
pop
hlt
xchg
outsb
mov
mov
je
pop
adc
add
out
adc
mov
ja
add
cmp
adc
cmp
sub
gs
inc
shll
leave
adc
mov
fdivl
neg
roll
mov
mov
sbb
cs
rcl
push
inc
call
rolb
mov
fiaddl
add
aam
sbb
sub
cmpsl
push
movb
sahf
loope
add
push
xchg
adc
mov
cmp
sbb
cmpsb
mov
and
insb
or
mov
add
xor
add
add
or
push
add
or
pop
aad
push
mov
push
cmp
in
fsubr
push
popa
push
or
mov
add
inc
lret
fstpl
sub
andb
sbb
clc
lea
push
push
mov
jnp
add
fwait
xor
aas
inc
cmc
pop
ss
fldcw
adc
shr
shr
outsl
and
inc
imul
lea
lods
dec
jecxz
cmp
pop
pop
mov
fsubs
stos
dec
es
ljmp
cwtl
test
mov
sub
rolb
mov
mov
loopne
push
adc
int
pusha
sti
add
and
sub
adc
cwtl
mov
add
mov
jb
xor
int
in
add
or
dec
jle
repnz
imul
push
lea
adc
mov
sbb
outsl
or
and
jg
js
lea
inc
xor
dec
mov
je
into
sahf
mov
repnz
xchg
or
dec
scas
loopne
sbb
mov
inc
call
enter
lods
fs
inc
nop
test
push
test
push
and
and
dec
xchg
pop
mov
in
xor
add
jmp
dec
or
jo
cld
xchg
in
dec
push
dec
sbb
xchg
dec
push
mov
ss
loop
xchg
cmpsl
sbb
or
ret
movsb
cwtl
ret
pop
fsubrs
mov
pusha
pushw
pop
push
sub
xchg
mov
mov
or
jb
lods
popl
rorb
xchg
jle
cmp
bound
pusha
shll
imul
jle
shr
or
and
out
mov
or
jnp
push
lret
int
pop
lcall
sub
or
or
les
insl
jg
fsubrl
loope
shr
or
mov
dec
mov
popa
popa
xor
lcall
lock
dec
and
fwait
stc
repnz
xchg
div
add
imul
popa
push
rcrb
pusha
test
mov
adc
fldl
sub
sbb
adc
addb
xor
dec
add
cmpsl
gs
and
mov
and
dec
rcl
sub
dec
scas
sbb
rolb
lock
sbb
fmuls
bound
ret
add
sbb
push
testl
sbb
loop
out
or
dec
mov
test
scas
aad
jae
dec
cmp
je
ficoms
xchg
sbb
es
fisttpl
and
adc
sahf
sbb
cmp
sub
into
add
xor
dec
mov
movsb
sub
sbb
inc
pushf
adc
mov
dec
or
push
add
sbb
xor
fmull
hlt
xor
adc
sbb
xchg
lret
fcmovu
mov
xchg
into
inc
scas
insl
test
inc
hlt
or
cli
mov
sbb
add
sbbl
mov
idivb
or
adc
push
sbb
adc
lock
orl
out
or
jge
pop
enter
lock
xor
lods
movsb
or
sub
jecxz
cmp
jne
jne
jne
xchg
shrd
in
adcb
outsb
dec
sub
pushf
pusha
mov
push
push
aam
ljmp
add
mov
idiv
aas
in
inc
sbb
movb
push
movb
adc
push
outsb
call
inc
or
mov
and
in
in
xlat
dec
sub
push
sub
push
rcrb
loop
adc
neg
and
js
sub
call
clc
pop
mov
adc
loopne
fadds
lea
push
and
mov
push
in
jne
sbb
or
movsl
out
mov
in
jl
sti
sbb
mov
sub
sar
sub
les
test
push
test
or
push
add
and
imul
clc
inc
je
not
inc
js
add
enter
inc
fnsave
cmpsl
inc
push
shlb
add
loope
push
add
call
hlt
mov
add
into
or
mov
inc
loope
loope
and
in
add
push
std
jmp
add
inc
cmpb
or
add
daa
mov
xor
mov
repnz
inc
test
clc
sbb
sub
orb
pop
scas
stos
mov
sbb
mov
dec
test
xor
dec
mov
jb
subb
or
fmull
loope
in
and
pusha
sub
inc
js
lret
or
rcll
jp
ret
adc
inc
or
add
add
rclb
add
add
test
or
adc
mov
rclb
mov
or
addb
sub
dec
sbb
or
dec
cmp
jmp
mov
xchg
gs
cmp
jne
or
add
jnp
push
pop
scas
je,pt
jle
push
pop
push
cwtl
call
xor
mov
shlb
xchg
adc
daa
sbb
or
jae
loopne
in
pusha
test
lret
dec
in
mov
xor
into
pusha
bswap
enter
sub
and
push
inc
loop
pop
pop
xor
pop
jbe
pop
shll
or
out
incb
or
push
mov
pop
cld
fcoms
push
pop
jne
or
or
movsl
test
add
push
or
rcll
push
je
cs
movsl
mov
or
adc
xlat
jnp
mov
add
jnp
adcb
and
inc
out
stc
mov
rorl
dec
les
out
and
push
imul
cmp
scas
popa
xchg
and
lods
pop
and
loopne
loop
clc
mov
es
nop
and
shlb
or
lret
jo
push
orl
mov
shll
xchg
add
mov
mov
jge
loopne
push
in
stmxcsr
mov
out
andl
test
adc
xor
mov
add
jno
loop
add
mov
sbb
and
sbb
inc
pushf
pushf
cmp
jg
into
into
into
mov
or
lock
fstpl
sarb
push
pop
nop
pop
or
push
sahf
pop
mov
adc
shlb
or
sbb
dec
test
add
shrl
pop
lcall
add
leave
lahf
pop
xchg
out
pushf
xchg
negl
jl
dec
js
inc
stos
adc
into
mov
pop
hlt
fsubrs
popf
ret
dec
xchg
sub
sbb
roll
sbb
mov
jmp
pop
or
push
xchg
jo
xor
pop
mov
and
inc
clc
add
add
mov
rcl
ret
ret
aas
mov
xor
das
xchg
fadds
add
jbe
cmp
inc
sbb
pushf
xchg
sbb
loopne,pt
fsubrp
xchg
sub
shll
xchg
test
jge
add
sbb
cmc
inc
add
cltd
lret
test
xor
sarb
xchg
pop
adc
aas
or
jle
sbb
xor
js
add
sbb
mov
pop
das
je
dec
sub
loope
push
mov
repnz
je
sarb
or
xchg
rcrl
adc
cmp
jb
cmp
jbe
dec
aam
enter
jmp
push
add
int
loopne
das
mov
mov
and
pusha
lods
arpl
inc
sbb
shl
and
fsubrl
or
hlt
sub
ret
mov
cmp
and
and
adc
dec
and
test
sbb
dec
mov
or
cmp
jmp
lock
sbb
aad
pop
mov
js
pushl
clc
xchg
mov
mov
and
push
push
mov
ret
xor
and
ret
and
in
data16
enter
add
imul
and
xchg
or
pop
mov
push
shrl
or
es
push
xchg
aas
mov
cltd
dec
and
adc
pop
dec
add
out
fwait
or
mov
cs
ficoml
sbb
sub
jmp
push
push
xlat
mov
and
mov
cwtl
push
stos
or
int
jo
fsts
add
aam
mov
lock
lret
mov
xchg
inc
or
movsb
mov
push
jne
push
bound
xchg
pop
imul
mov
pop
adc
sub
lahf
sub
pop
in
push
push
and
inc
jno
hlt
call
push
outsb
or
xchg
scas
pop
push
ret
push
push
add
into
add
sbb
mov
cmp
into
push
ss
add
clc
mov
mov
or
push
mov
sarl
sbb
mov
adc
mov
clc
cli
pop
add
fistps
fimuls
cmpl
cmp
or
pop
push
mov
add
stos
mov
lcall
push
mov
dec
lea
aas
sarl
sub
enter
xchg
sbb
sub
cltd
mov
pop
sbb
inc
dec
mov
mov
lahf
jae
fmuls
je
cmpsb
loopne
jmp
dec
test
fisubs
filds
xor
mov
mov
jae
ja
shlb
andl
mov
push
add
ret
rcrl
inc
insl
sub
sysret
movsb
mov
pushf
iret
mov
je
ficoml
xor
push
ljmp
adc
xorb
inc
cwtl
add
and
inc
sbb
xor
shl
decl
pcmpeqb
pop
sub
rolb
sub
push
mov
jo
sbb
push
daa
push
pop
loop
or
mov
ret
testb
and
inc
inc
fisubrs
push
adc
or
adc
add
cmp
mov
and
mov
mov
mov
xchg
shll
add
pop
cld
or
fyl2xp1
imul
add
addb
adcb
imul
rorb
loop
jo
adc
dec
dec
adc
add
lret
test
jge
addl
dec
sub
inc
loopne
xchg
pusha
out
insb
ljmp
and
aaa
pop
test
lea
xchg
push
cmp
lock
or
rol
xorl
sbb
dec
ret
das
fs
adc
ljmp
pop
adc
out
push
cltd
sbb
adc
ljmp
cmpb
repz
adc
push
daa
sahf
and
lea
add
insb
test
or
adc
lahf
cmp
js
loope
loop
lea
sbb
imul
fcoml
add
addl
sub
dec
add
movsbl
xor
mov
loope
push
push
addr16
adc
in
fbld
paddb
adc
notl
scas
dec
jecxz
nop
clts
xchg
cmp
sbb
xor
hlt
jbe
or
int3
stc
sbb
and
pop
and
sbb
aam
aam
imul
push
sbbl
sbb
insb
loopne
and
or
pop
fldt
pop
mov
and
fidivrl
icebp
outsb
xchg
cmc
push
push
test
push
in
sub
mov
xor
inc
sub
mov
js
and
popf
int
icebp
rcrl
sub
nop
call
mov
or
lods
aaa
add
mov
inc
mov
push
push
push
cwtl
and
push
or
push
shl
push
call
push
push
pop
dec
add
dec
or
push
sub
push
pop
and
shl
pop
add
sub
mov
movsb
data16
and
mov
xchg
push
ja
cmpsb
adc
mov
test
mov
xchg
addr16
pop
inc
aaa
xor
shrb
xor
movsb
aad
enter
xor
jae
inc
adcb
popf
xor
or
in
sbb
fbld
pop
push
push
push
pusha
negb
cmp
jg
ja
push
xchg
clc
popa
pop
fucomi
sbb
faddp
sub
push
push
jbe
or
push
ret
insl
pop
addr16
push
mov
inc
push
aas
aam
cli
adc
or
mov
and
adc
clc
mov
test
mov
in
add
sub
mov
adc
mov
sbb
rol
fsubrl
repz
mov
popa
insb
mov
mov
mov
loopne
mov
js
jl
sub
sub
sbb
push
push
scas
inc
idivl
mov
dec
or
dec
push
fimuls
imul
inc
add
lret
mov
cmp
adc
jl
push
std
mov
dec
push
mov
repnz
out
ljmp
sbb
and
mov
mov
add
cmp
out
jo
xor
test
jo
mov
or
cmp
adc
jg
or
lahf
xor
cmp
sbb
sarb
movsl
and
and
dec
ljmp
mov
pop
adc
mov
rorb
xchg
ss
pop
mov
add
fdiv
and
inc
lret
scas
into
mov
inc
xor
xchg
xchg
xchg
xchg
add
add
xchg
xchg
xchg
xchg
push
pop
or
int
int
or
jnp
or
jbe
jmp
or
int
int
por
jmp
adc
pop
adc
int
int
push
adc
dec
adc
dec
adc
int
int
aas
pop
jmp
sbb
xor
int
int
jmp
sbb
es
and
or
jmp
pop
jmp
xchg
aaa
inc
sbb
and
rorb
mov
mov
cmp
cmp
insb
cmovbe
push
mov
sbb
xor
cmp
repz
popa
imul
orl
test
mov
mov
rol
rcl
iret
repz
fcmovu
in
out
repz
testb
pop
or
incl
iret
adc
pop
add
add
and
decl
or
adc
adc
push
pop
sbb
sbb
sbb
push
pop
and
and
aas
add
add
or
or
or
mov
push
in
imul
popa
sub
dec
push
dec
or
and
push
aaa
or
sbb
lcall
cli
inc
xchg
fmuls
scas
dec
pop
stc
dec
lahf
ror
jle
sbb
or
push
push
jmp
adc
rclb
sbb
and
loopne
push
xor
dec
dec
add
adc
push
adc
sub
and
mov
lahf
test
lods
jae
cmp
push
out
or
add
ret
sub
lret
mov
sahf
shr
sbb
popa
jl
xchg
adc
push
xor
faddp
sbb
sub
add
iret
cmp
loopne
inc
into
mov
add
add
inc
inc
add
push
loope
push
fidivrl
shll
test
xchg
hlt
call
add
cwtl
loopne
fcomps
incl
inc
jae
and
sbb
mov
ljmp
mov
fwait
mov
add
rolb
adc
jmp
cli
push
sbb
decb
mov
shrb
fucom
sub
sub
mov
icebp
sub
sub
adc
dec
mov
inc
cwtl
push
cli
adcb
sub
or
in
sub
mov
add
rcrl
mov
sbbl
pop
mov
sbb
leave
sbb
mov
inc
dec
mov
insb
add
or
sbb
ret
rcrb
mov
mov
rorb
mov
or
dec
dec
pop
mov
mov
icebp
sub
cmp
jne
mov
jp
or
push
mov
mov
aaa
add
test
dec
jo
ret
into
subb
lcall
or
xchg
fdivrs
inc
js
push
imul
scas
xorl
xor
add
xor
icebp
ja
mov
inc
hlt
jle
in
and
daa
or
or
add
and
movsb
lea
pop
fcoms
push
lea
mov
cld
rep
push
mov
pop
and
add
gs
adcl
movsl
dec
lock
inc
or
dec
dec
test
mov
push
pusha
scas
sbb
pop
movl
pop
cs
or
add
sub
dec
mov
sbb
sbb
lret
mov
and
add
add
add
inc
cmpb
and
or
pop
shlb
push
xor
js
popf
pop
lock
cmp
push
push
xchg
push
push
add
movl
test
out
clc
int3
adc
mov
call
xchg
add
in
dec
sub
or
push
subl
pop
add
sbb
or
mov
inc
and
mov
sub
sbb
xor
lahf
pushw
sub
sti
mov
movb
pop
and
pop
or
lea
pusha
xchg
pop
add
lahf
push
flds
pop
pop
sub
lds
mov
lods
cs
call
repnz
imull
jge
push
push
mov
and
aam
sbb
cmp
xor
mov
cmp
jae
es
stos
gs
xchg
push
mov
push
jns
lods
add
push
adc
xor
sbb
cltd
add
js
jmp
push
movsb
or
sbb
or
leave
cmp
pushf
ljmp
mov
inc
push
shlb
add
ret
cmpsl
dec
cmp
push
rcll
inc
jbe
fldcw
cmovnp
fcmovne
jne
push
enter
inc
sub
jbe
jmp
lcall
js
xor
test
outsb
bound
test
ljmp
mov
loopne
dec
outsb
fcompl
add
add
add
cmp
mov
pop
inc
aas
xor
pop
fiaddl
sbb
clc
fldt
push
inc
add
cmp
int3
jl
std
pop
pusha
stos
sete
pop
add
aam
ror
test
lahf
cwtl
stos
push
cld
cmpb
jne
xchg
in
test
clc
mov
xor
xchg
pushl
mov
loope
imul
lea
test
push
call
jmp
dec
outsb
ret
cmp
jne
loopne
and
cmp
shrb
add
add
mov
fadds
or
stos
adc
sbb
mov
add
js
std
aas
lock
xor
clc
cmp
cmc
cmp
add
add
ret
adc
inc
add
mov
iret
insb
xor
add
sbb
jmp
cmp
sbb
jae
std
cwtl
das
push
jne
mov
andb
ja
inc
lahf
inc
aaa
jo
les
ljmpw
push
push
inc
or
pop
lock
xor
jmp
mov
je
mov
ja
push
mov
mov
dec
lock
add
hlt
mov
pop
mov
lds
add
xor
shl
cmp
mov
push
mov
xor
jne
dec
sub
lea
mulb
call
inc
mov
sarl
push
hlt
xorl
or
or
mov
cmp
daa
sbbb
push
test
adc
dec
mov
pop
sub
rcrl
out
ret
cmp
jmp
push
sub
sub
scas
int3
pop
pusha
lods
add
movsb
leave
xchg
jle
clc
adc
rorb
mov
push
cmc
inc
xor
arpl
and
fwait
sarb
and
lods
add
push
and
xor
mov
mov
test
sub
lea
call
and
push
mov
jg
push
sbb
iret
xchg
outsl
adc
pop
imul
movb
or
sub
xchg
push
mov
test
mov
push
repnz
rcll
leave
ja
or
push
rcrb
adc
mov
or
adc
test
icebp
sub
mov
call
popf
or
pop
idiv
in
mov
mov
decl
add
shr
and
cli
inc
jl
or
sub
pop
jle
adc
jle
xor
xorl
mov
mov
fisttps
inc
jmp
add
dec
or
jge
push
cltd
add
mov
andl
test
stos
adc
xor
or
or
xlat
sub
push
pop
repnz
clc
movb
pop
jmp
std
jg
and
sbb
sbb
sub
xor
fistpll
mov
nop
jo
scas
fistpl
xchg
xor
icebp
and
pushf
std
add
jnp
rclb
inc
lods
add
adc
jge
inc
ret
sub
je
add
imul
add
push
push
lods
orb
and
in
enter
inc
das
lods
jmp
lret
cs
enter
sub
push
pop
sahf
mov
and
push
sub
pop
clc
je
sbb
aam
cmc
mov
xchg
push
add
fisubrs
push
add
aam
sub
sarl
pop
dec
jb
lret
ds
fisubrs
outsb
or
or
or
sub
mov
push
pop
das
mov
sbb
jl
or
lahf
lea
adc
inc
sbb
add
pusha
subl
add
push
push
ret
xor
inc
add
sahf
ss
xchg
sub
jge
fstps
cld
lods
divb
and
push
push
sub
xchg
xchg
int3
and
adc
push
std
add
ds
adc
push
sbb
xchg
das
sub
fmul
inc
inc
pop
inc
lret
notl
pusha
pop
mov
in
jl
jbe
xor
incb
lods
sbb
xchg
add
xor
mov
sub
push
loopne
pop
xchg
pop
cmpl
sbb
dec
push
cltd
loopne
idiv
ret
mov
or
idiv
adc
xor
sub
mov
and
and
xor
push
jbe
fldl2t
or
test
cltd
sbb
sub
xor
mov
das
les
inc
sub
clc
aaa
call
xchg
bound
clc
dec
mov
cmp
sub
fistpl
xor
or
gs
add
pop
jmp
jnp
push
neg
inc
dec
xor
jmp
sub
and
sbb
inc
jl
xchg
xchg
sbb
xor
add
mov
and
and
jbe
outsb
test
and
add
js
push
adc
test
movsb
cmp
out
pop
in
push
std
inc
push
pop
xor
cmp
repz
push
arpl
repz
xchg
cmpsl
mov
out
sahf
adc
xor
push
addr16
out
js
lcall
int
out
push
push
adc
jns
out
xor
arpl
test
and
pop
xor
sub
inc
icebp
add
and
push
js
add
adc
dec
cmp
ds
sub
sbb
shll
push
dec
stos
inc
push
mov
je
sbb
xlat
adc
lods
lea
push
dec
add
mov
repnz
push
repz
jb
add
scas
mov
xchg
xor
cmpb
pop
pushf
aad
mov
jge
sub
add
lods
mov
mov
sub
mov
cmp
iret
cld
pop
pop
ja
inc
mov
cmp
je
or
and
or
test
ret
es
and
sub
or
pop
jns
sub
lods
mov
and
mov
movsb
add
mov
or
mov
mov
aas
or
sub
pop
xor
push
push
shrl
mov
fistpll
push
lret
jle
pushf
xchg
mov
stc
jmp
movzwl
aas
je
in
cmp
jne
jp
outsl
push
push
mov
lods
mov
and
mov
movsl
pop
int3
mov
jle
jmp
push
cmp
add
les
xchg
mov
lcall
in
mov
inc
addl
repnz
mov
test
movsb
bound
imul
decb
mov
nop
push
and
sub
inc
add
in
add
push
sbb
mov
aaa
pusha
push
and
jb
mov
mov
add
imul
add
jns
sbb
shr
out
out
mov
pop
or
push
push
inc
xchg
mov
jns
leave
repz
pusha
add
sbb
jo
lcall
or
fadd
jb
nop
add
insb
add
sbb
or
pop
cmp
pop
loop
and
cmp
test
daa
push
ret
push
cmp
stc
iret
dec
xor
add
dec
push
jbe
mov
arpl
cmp
icebp
inc
xor
pop
mov
push
or
ret
add
je
loopne
pusha
dec
movsb
lea
pusha
pop
fidivrl
pop
push
dec
push
not
mov
mull
or
or
sbb
inc
sub
subl
add
jns
mov
ja
and
or
add
xorb
or
lods
mov
and
notb
sbbb
sbb
adc
xor
xchg
dec
ja
aas
add
add
adcb
push
cmp
pusha
nop
fs
xor
lock
sub
sbb
xchg
out
push
out
cmp
jl
daa
jo
xchg
mov
jge
jo
sub
fs
jno
xchg
js
add
test
jno
inc
pop
jo
and
bound
xchg
roll
pusha
jmp
rcr
imul
push
jb
shrl
lcall
xchg
jnp
mov
out
cmp
inc
lock
scas
popf
subb
and
pop
xchg
lea
cmp
test
sub
test
mov
lret
mov
push
mov
dec
lods
arpl
imul
adc
pop
pop
jno
push
ret
inc
subb
jge
adc
sub
gs
xchg
cmpsl
cmp
into
lea
dec
add
in
add
xchg
loope
sahf
mov
test
mov
add
push
jmp
imul
loope
push
sbb
rolb
and
movsb
or
adc
mov
sahf
inc
rcll
dec
xor
inc
fsubs
sahf
sub
fcoml
movsb
in
pop
test
ror
fdivr
pop
pop
dec
add
sub
jge
fistps
insl
cltd
sarl
or
mov
pop
cmp
stos
pop
push
sbb
adc
rclb
cwtl
jb
push
test
sub
repz
push
cmp
push
dec
jb
es
or
imul
or
sub
addb
cmpl
mov
movsb
sbb
or
push
sbbl
pop
sbb
push
icebp
cmp
sahf
or
loopne
mov
adc
push
xchg
adc
adc
and
and
aam
jge
test
test
test
cltd
cwtl
pop
ds
sbb
inc
push
daa
pusha
mov
lea
fwait
cwtl
mov
test
add
mov
inc
aas
subb
xchg
mov
or
gs
cmp
xchg
into
xchg
add
arpl
dec
sbb
jl
push
fsubrl
add
outsb
dec
dec
popa
add
or
enter
push
jl
je
ja
ss
popf
push
and
and
dec
pop
call
jno
or
xchg
jo
imul
sbbl
das
in
loopne
mov
mov
adc
sbb
pushf
dec
push
pop
adc
push
into
cmp
push
mov
jmp
sbb
shlb
adc
dec
sbb
mov
or
cmpl
les
loopne
xor
add
jne
arpl
fiaddl
xlat
sahf
test
inc
pop
inc
aad
js
cmpl
dec
inc
loopne
ss
push
rcrb
test
sarb
and
mov
push
add
test
add
ja
fs
add
insl
lods
sbb
add
lods
les
test
into
int
stos
std
adc
inc
inc
or
ja
add
pop
cmp
mov
xchg
clc
push
mov
push
add
inc
or
inc
inc
adc
out
add
fcomps
mov
jmp
insl
mov
push
les
mov
cmp
dec
pop
push
rcll
jl
ds
pop
push
call
xchg
int3
out
fldcw
push
or
loopne
adcb
cmpsb
jb
fcoml
mov
push
cmp
xor
scas
xchg
dec
imul
andl
mov
nop
push
stos
dec
in
ds
push
xchg
cmp
jns
dec
sahf
sbb
jg
adc
mov
adc
adc
mov
push
test
call
fwait
push
adc
jl
cmpsb
lock
add
in
inc
inc
push
mov
adc
adc
es
and
loopne
push
js
pop
test
ret
imul
mov
mov
fdivrs
shlb
lea
push
nop
inc
or
lcall
dec
mov
mov
repnz
mov
and
shlb
mov
out
loopne
test
and
outsl
je
jne
jne
push
push
and
cld
push
push
push
sub
cmpsl
adc
mov
push
inc
lds
mov
fldt
mov
pop
push
pusha
add
pop
xor
cmp
push
mov
or
push
bt
inc
or
rolb
xchg
adc
push
repnz
sahf
mov
xorb
jns
mov
into
cs
or
push
sub
test
sub
sub
shrb
and
push
or
and
sbb
sub
hlt
mov
lods
lea
insl
lods
push
adc
cmp
das
int3
pushf
ret
aaa
pop
int3
je
test
pop
push
adc
popf
adc
lock
fdivr
adc
ljmp
in
lea
adc
push
iret
dec
mov
adc
xchg
arpl
and
outsb
aas
enter
push
pop
push
push
in
jns
sbb
pusha
xor
inc
mov
xchg
addr16
nop
add
sbb
jne
sbb
push
test
xor
lock
xor
xor
mov
sbb
dec
mov
rcrb
and
xchg
dec
pop
repnz
popa
fsubs
push
icebp
shr
sbb
jns
pop
hlt
pop
pusha
outsl
mov
push
imul
js
xchg
xchg
cmp
adc
sbb
jb
push
sti
and
ss
xchg
dec
sahf
jo
fdivrs
jp
and
and
add
mov
jge
stc
hlt
dec
jns,pn
pusha
daa
clc
shlb
dec
popa
je
sub
xor
aaa
sub
inc
sub
xchg
lock
loopne
push
cmpsl
sub
cmp
and
jb
hlt
outsl
inc
or
and
jb
in
push
in
sub
add
sbb
mov
and
and
sbbl
jns
stos
cmc
sbb
add
nop
dec
inc
cmp
nop
add
xor
insb
subl
jnp
nop
push
add
mov
clc
mov
jo
pop
movaps
mov
sbb
and
add
aaa
pushf
aaa
mov
rorl
mov
scas
xor
add
jmp
int3
ret
mulb
adc
jb
pop
mov
add
popa
fcoms
xor
fwait
mov
js,pn
fwait
xor
rcr
andb
sbb
and
jb
or
pushf
push
jb
repz
pop
jb
popf
cli
or
or
dec
lea
fisubrs
mov
bound
sahf
push
add
push
out
out
popa
sbb
clc
mov
fcom
add
je
ss
add
in
arpl
adc
aaa
fisubl
cmc
adc
push
add
fisttpll
pop
rorb
mov
cwtl
pop
adc
inc
sub
leave
dec
or
sbbb
xchg
mov
pop
dec
sbb
and
insb
push
push
out
fidivs
mov
xchg
adc
xchg
ret
and
adc
outsb
push
sub
cmpb
pop
call
sbb
adc
inc
adc
adcl
lret
adc
jbe
movsb
or
inc
repz
pop
pop
pop
add
push
mov
lods
sbb
sbb
inc
and
mov
pop
mov
pop
pop
sub
pmaddwd
adc
ret
and
push
ror
lds
cmp
lock
mov
xchg
sbb
mov
add
dec
push
mov
adc
inc
pop
mov
sub
inc
add
inc
pop
bound
and
filds
jbe
shlb
dec
imul
pop
pushf
and
dec
adc
fwait
in
jmp
enter
add
ret
daa
push
jmp
or
popl
jg
add
popf
inc
pop
mov
dec
and
or
adc
shl
xor
rclb
aam
cmp
leave
into
std
add
repnz
and
xor
adc
sbb
cmp
dec
shl
mov
mov
fstpt
cli
mov
adc
mov
or
sbb
add
movsl
shrl
dec
and
sub
lret
push
add
rolb
mov
xchg
pop
xor
arpl
mov
lret
mov
dec
add
add
es
adc
mov
or
lret
or
rcrb
pop
mov
cmp
or
inc
in
inc
in
mov
xchg
jbe
orl
and
cmp
xor
cmp
orl
add
rolb
push
push
xor
sub
add
add
push
mov
cmp
jbe
add
loope
addb
jg
mov
mov
jo
cmp
shlb
add
adc
insb
gs
dec
lcall
cmp
ss
push
push
or
inc
dec
in
sub
add
movsb
jle
add
std
stos
hlt
icebp
dec
sahf
cmp
dec
dec
xchg
xor
push
jo
push
sbb
sub
adc
subb
in
pop
dec
mov
jp
mul
jno
js
inc
pushf
test
daa
or
and
add
int3
sbb
scas
sub
sbb
jne
xchg
lods
sti
add
xchg
jb
mov
sub
mov
dec
sahf
scas
or
or
ficoml
or
jae
je
mov
std
movsl
pop
mov
rolb
je
mov
xor
sti
push
int3
sub
push
loopne
cmpsl
test
sbb
jl
cli
addr16
add
add
xor
jecxz
cmp
cmp
and
popf
add
sub
sub
outsb
add
iret
or
adc
dec
mov
std
cli
mov
and
fucomip
mov
imul
das
pop
fcoml
push
jge
fwait
int3
data16
jl
in
faddl
stc
mov
aam
push
fists
sub
sub
test
enter
leave
jne
add
push
flds
or
sbb
jmp
adc
sub
cmp
data16
jb
stc
cmp
add
inc
scas
add
test
or
dec
inc
push
inc
je
adc
xchg
or
shl
xlat
mov
pushf
push
mov
lret
or
adc
repz
mov
dec
add
xor
loopne
dec
inc
in
sbb
xchg
and
loope
js
js
fbld
and
lahf
push
lock
mov
popa
dec
mov
adc
push
adc
lahf
subl
xchg
push
lods
imul
mov
xor
lock
sub
xor
cmp
jae
adc
bound
orb
add
cs
adc
xorb
lcall
andb
fcomps
fwait
test
lahf
iret
pop
decb
popa
ret
andl
dec
dec
add
mov
add
push
pop
sub
pop
xchg
add
cwtl
xor
repnz
pusha
pop
icebp
add
jl
pop
incb
mov
jns
shl
fistps
js
int
inc
je
xorb
xor
adc
lods
cmp
and
inc
insb
adc
dec
popa
add
mov
lea
jns
inc
cmp
dec
sahf
inc
enter
push
fcomip
fsubrs
xor
adc
or
xor
mov
cmp
mov
sbb
cmp
sub
cmpsl
adc
add
and
sub
aad
add
shlb
push
push
sbb
add
dec
hlt
and
pop
mov
pop
and
mov
push
add
push
sub
add
or
js
in
cmp
sub
in
push
shll
movsl
int
adc
or
gs
push
xor
lret
and
and
js
enter
xor
rcrb
inc
mov
pop
sbb
inc
and
jbe
sbb
cmp
test
add
add
mov
pop
push
add
rorb
loopne
pop
les
das
sahf
jno
in
push
and
push
pop
jge
push
call
sub
mov
push
mov
je
imul
cmpsl
add
stos
or
lea
sti
dec
jl
pop
or
xor
cmp
fsubrs
push
add
push
xlat
xor
sub
mov
dec
push
xor
mov
sbbb
pop
xchg
or
pop
je
add
dec
mov
pop
and
push
add
rol
popa
mov
fdivr
sbb
inc
mov
mov
mov
movsl
cltd
cltd
lea
mov
mov
adc
test
cwtl
inc
dec
pop
push
push
pop
orl
push
pop
lret
jo
aam
test
fwait
loop
xor
in
imul
add
fiaddl
adc
cld
push
push
cmpsl
push
cmp
stos
cmp
push
orb
lret
add
call
sbb
sbb
sub
mov
lock
or
xor
add
push
adc
add
daa
cmp
orl
pop
inc
mov
pop
jnp
sub
adc
ret
cmp
repz
pop
aaa
lret
or
or
jae
pusha
sbb
leave
aam
mov
push
push
xchg
enter
js
sub
mov
inc
roll
adc
push
pop
push
sbbb
dec
inc
xorb
movsl
add
sub
jae
adc
push
jne
or
in
xchg
add
mov
rolb
and
pop
sbb
inc
mov
dec
data16
adc
aam
sub
add
pop
sbb
push
inc
leave
paddb
loopne
ret
adc
cmp
or
and
movsb
dec
in
or
cmp
scas
dec
push
adc
push
mov
add
push
test
add
mov
addl
sbb
mov
mov
push
subl
push
and
add
pop
xchg
adc
and
mov
sarb
sub
jne
push
dec
dec
mov
adc
outsl
les
inc
sbb
xchg
xchg
mov
cli
sbb
bound
sub
or
stc
push
cmp
sbb
jmp
push
sub
sarb
pop
adc
and
les
daa
push
addr16
mov
cwtl
in
add
mov
bound
sbb
mov
push
add
aad
rorl
add
rorl
aam
rclb
add
icebp
adc
push
movsb
in
push
xchg
pop
push
mov
or
ljmp
nop
sub
das
dec
add
push
fs
in
loopne
sub
in
enter
adc
aam
pushf
push
or
add
popa
mov
add
mov
imul
mov
or
subb
inc
sub
add
ss
pop
inc
xor
pop
adc
add
cltd
rolb
push
mov
adc
add
nop
sub
add
mov
xchg
add
out
ja
enter
and
sbb
mov
and
add
dec
out
adc
or
daa
pop
or
pop
jne
lds
pop
dec
sbb
sub
call
dec
adc
mov
pop
add
dec
cmp
push
adc
mov
and
pop
sbb
cmp
mov
popa
cmpb
dec
cmp
inc
aaa
test
jb
and
call
leave
push
jno
jmp
enter
sub
leave
or
sbb
cmp
pop
inc
out
or
pop
sbb
cs
pop
sub
sub
push
jge
aaa
int
lods
jb
jp
lods
xor
add
dec
push
sbb
out
lock
enter
lahf
insb
pop
dec
push
adc
adc
or
inc
enter
mov
dec
jle
and
int
ljmp
ljmp
xchg
cmp
in
dec
xor
and
xchg
mov
or
das
adc
dec
add
adc
or
fsts
fldt
inc
add
dec
mov
pop
jne
dec
sub
std
sub
adc
jle
hlt
adc
or
add
xor
jl
insl
or
stos
sub
cmp
or
and
adc
lods
in
add
inc
cmp
mov
stos
lret
sbb
pop
call
dec
out
rolb
xor
adc
xchg
mov
add
ds
inc
jb
add
pusha
cmp
add
and
push
add
out
jnp
push
or
dec
mov
ficoml
push
nop
pop
sub
mov
xchg
inc
xchg
mov
dec
sbb
push
mov
aad
aam
andb
out
sahf
adc
jnp
mov
in
addl
dec
and
push
mov
sub
orl
rcrl
adc
and
or
mov
imul
jmp
mov
push
test
andb
pusha
out
dec
push
xchg
fbstp
cmp
sub
mov
popa
pop
int
mov
cmp
dec
or
stos
adc
jge
and
pusha
stos
or
fiadds
and
les
mov
sahf
les
mov
dec
mov
in
dec
add
or
cmp
cmp
jbe
mov
test
lea
mov
add
push
or
push
push
inc
sub
dec
cmp
or
icebp
sbb
add
jnp
dec
push
repnz
repnz
daa
jg
add
jp
pop
sub
shll
lret
push
imul
or
lcall
insl
adc
test
aam
imul
push
pusha
push
nop
pushf
sbb
mov
sbb
jp
and
adc
lcall
testl
mov
test
jmp
or
pop
push
popf
into
mov
clc
jle
push
inc
push
ja
fwait
sti
enter
inc
js
insb
sbb
push
test
add
mov
add
inc
or
add
mov
inc
cltd
popa
xchg
mov
daa
push
hlt
or
repnz
mov
dec
jge
je
xor
xchg
js
mov
inc
push
mov
pop
mov
nop
je
testl
xor
pop
or
add
pushf
pop
push
mov
xlat
lock
sbb
lods
push
add
int3
jle
test
and
orb
bound
add
rorb
xchg
jnp
and
mov
push
inc
aas
fistps
and
shll
btc
add
inc
adc
je
sbb
sbb
push
jo
pop
lret
or
popf
pusha
pusha
push
inc
cmp
xor
btr
mov
addb
xchg
mov
sbb
test
sub
cmp
out
xor
ja
enter
lcall
inc
xchg
jno
imul
pop
mov
pop
orps
pop
rcll
enter
xor
xchg
mov
or
dec
stos
test
push
or
leave
sbb
leave
sbb
js,pn
pop
mov
mov
or
xchg
push
cmp
je
repz
push
add
aam
nop
xchg
mov
add
inc
pop
push
xor
roll
jns
dec
push
push
sub
mov
mov
je
sbb
cmp
fcoml
cmpsb
out
sbb
lahf
sbb
pop
adc
pop
out
ret
pop
push
mov
pop
mov
add
jmp
pushf
xchg
clc
pop
jne
cmp
mov
in
jl
rol
es
mov
push
sbb
ret
dec
or
and
push
mov
sbb
sub
mov
outsb
pop
rcrl
push
subb
pop
sbb
sti
scas
or
and
mov
fcoml
push
lret
psubsb
leave
jl
jg
mov
insb
push
push
xlat
push
sub
shll
mov
and
aad
mov
sub
xchg
cwtl
add
xor
jb
aad
std
and
and
ret
jns
adc
jecxz
mov
xor
lods
rcrb
int
js
lcall
mov
sub
imul
out
enter
adc
daa
mov
push
xor
dec
inc
xchg
sub
cmp
xchg
test
test
lcall
push
sub
mov
mov
inc
mov
add
pop
fsts
sti
sub
xchg
mov
dec
or
xor
je
dec
jl
pop
mov
mov
and
and
push
fdivr
out
cmp
add
mov
mov
jnp
insb
negl
outsl
stos
lods
mov
xor
sub
pop
mov
xchg
pop
push
js
add
xor
jae
mov
xor
imul
sub
lock
push
adc
rep
rclb
xchg
xlat
fidivs
mov
mov
rol
mov
ror
xor
shr
xor
es
sbb
outsl
in
inc
xadd
or
or
add
add
add
pop
call
push
cld
cli
push
testl
clc
negb
xlat
and
mov
testl
lcall
add
add
xor
aam
imul
jmp
or
xchg
or
mov
aaa
fidivs
fisubl
pop
fsubl
repnz
mov
add
or
xor
or
push
aaa
jl
mov
cmp
rcll
out
ljmp
lret
lods
add
or
into
sub
jo
call
jl
push
nop
cmpsb
test
mov
in
in
push
inc
push
dec
mov
add
push
or
rol
popa
add
imul
dec
in
in
arpl
xor
call
jb
aam
call
sub
punpckldq
int3
outsl
push
bound
nop
or
je
js
lret
xor
push
mov
loopne
xor
nop
cmpsb
test
xchg
lock
cmp
int
add
pop
cmp
push
jmp
pop
mov
repnz
pushf
xchg
cmp
mov
loopne
mov
push
mov
inc
adc
and
decb
pop
add
orb
pushf
add
pop
es
sti
push
stos
or
sub
jbe
sbb
shrl
push
jo
sbb
shrl
dec
aam
and
push
inc
fmuls
cmp
dec
imul
and
testl
or
fdivp
and
push
repz
and
enter
inc
or
into
mov
or
push
outsb
mov
not
push
out
push
imul
fs
add
cmpsb
call
movsb
fsub
mov
add
fsubrs
inc
lcall
nop
cmpsb
call
test
xchg
xchg
inc
in
aam
push
or
push
stos
add
inc
aam
dec
push
xor
rolb
dec
fcmovbe
or
subb
inc
inc
push
push
inc
or
xor
and
push
dec
adcl
push
push
pop
xor
adc
cmp
and
push
pop
cmp
add
or
or
lret
push
dec
xor
push
scas
or
add
nop
add
lcall
pusha
push
pop
movsb
dec
mov
or
rorb
cs
fadds
mov
add
push
xorl
add
popa
andb
insb
in
mov
fcom
add
mov
jb
or
add
or
adc
sbb
add
sbb
dec
adc
push
add
mov
and
js
mov
js
inc
dec
push
sbb
sbb
sub
js
shrb
out
lea
or
inc
push
lea
push
jo
ret
sub
mov
pop
push
add
shlb
notb
dec
mov
js
stos
cmc
adc
mov
fistpll
iret
jl
je
nop
and
or
adc
and
insl
or
dec
subl
pop
mov
jp
add
mov
sbb
xchg
movl
rolb
leave
mov
adc
adc
andb
int
test
dec
jle
inc
or
pop
leave
shr
push
mov
mov
or
mov
jb
das
push
xchg
add
outsl
sbb
pop
jo
in
cli
inc
fidivrl
testl
inc
es
mov
jb
push
push
cld
push
jnp
ror
cmp
push
imul
lea
pop
ret
fbld
ret
lea
mov
call
dec
mov
ffreep
sbb
js
lods
in
push
cld
push
mov
sub
jge
mov
mov
sbb
pop
pusha
pop
popa
repnz
pop
mov
or
mov
or
inc
pop
stc
and
and
lahf
insl
iret
je
fadd
out
or
add
xor
adc
or
in
add
push
or
int
adc
cmp
mov
outsl
or
sti
xorb
sub
or
add
jnp
add
inc
add
mov
pop
jo
and
scas
and
push
or
out
bound
jecxz
adc
scas
hlt
cmp
or
je
push
sbb
push
loopne
ret
push
push
test
add
or
scas
or
push
sbb
add
inc
dec
or
cmp
cld
das
and
adcb
insb
cmc
sub
addr16
or
jl
add
adc
xchg
daa
fcmovu
or
push
or
jae
jmp
loop
adc
rolb
int
fisttpl
xor
les
fdivs
sti
add
or
movsb
adc
rol
les
ret
mov
push
or
sbb
shr
cmp
pop
lds
sbb
add
adc
or
imul
ret
sub
sub
cli
sbb
add
ja
or
mov
in
sahf
xor
orb
in
movsl
pop
ljmp
mov
js
lea
stos
dec
mov
xchg
pop
outsl
cmp
xor
inc
add
js
rorb
add
pop
jns
notl
jl
arpl
add
mov
mov
dec
orb
je
movsb
shlb
jp
cmp
mov
xor
and
mov
sarb
mov
push
fbstp
test
cmp
cmp
pop
lcall
popa
mov
adc
inc
sbb
pusha
pop
push
adc
or
popf
ss
outsl
jg
adc
mov
subb
lea
loopne
push
adc
or
pop
pop
rclb
sbb
xchg
jecxz
xor
cmp
outsb
and
sbbl
xor
loopne
mov
pop
loope
clc
sbb
mov
insb
sbb
push
adc
push
les
add
push
imul
pop
fadd
ljmp
mov
movsb
lock
ss
leave
out
leave
cld
push
clc
nop
cmp
fdivl
push
and
stc
out
stos
add
jo
int
adc
add
js
ret
dec
push
mov
xor
xor
cmp
into
sbb
mov
jmp
mov
push
rcrb
mov
cmp
lret
jp
repz
pop
pop
pusha
cs
pop
push
stos
jl
iret
fs
mov
sub
push
add
xlat
mov
push
cli
xlat
inc
ds
neg
xchg
cs
push
xchg
je
jle
mov
ficoms
pop
add
sbb
mov
inc
mov
popf
xchg
mov
add
rcl
adc
iret
movsl
xlat
movsb
cmpl
js
push
dec
push
pusha
add
jb
sub
sbb
add
cmpsb
sub
adc
scas
lods
jge
nop
test
sbb
mov
or
push
and
sbb
inc
sbb
adc
inc
test
test
sbb
pop
pusha
shlb
cs
inc
xchg
inc
cmp
and
ret
jl
and
add
test
cmp
jl
lods
push
icebp
enter
mov
test
and
add
sub
movsb
sarb
inc
pop
imul
ret
and
sbb
xor
jmp
push
testb
adc
dec
bound
add
push
es
mov
cmp
sub
or
push
sbb
push
push
and
xor
mov
pop
push
imul
in
out
jbe
and
insb
push
push
inc
mov
xchg
addl
sbb
sti
ficompl
les
push
inc
mov
rcr
addl
loope
push
xchg
and
xchg
add
inc
cmp
xchg
sub
shrb
test
lock
or
shll
subb
xchg
jns
sbb
call
xor
jle
roll
test
aas
mulb
les
cmp
cmpsl
fs
mov
push
divb
arpl
mov
xchg
test
or
dec
hlt
and
bound
jg
bound
int3
and
adc
adc
and
adc
xchg
adc
orl
push
hlt
into
adc
xor
nop
sbb
fbstp
mov
mov
shrb
push
shr
add
notb
mov
push
pop
rcrb
adc
test
aam
mov
movl
cmp
sub
push
push
clc
push
adc
inc
or
push
lods
pop
xor
push
xor
xor
add
rcpps
xor
xchg
mov
test
sti
dec
mov
xor
data16
hlt
inc
test
xchg
addl
aad
jns
enter
cwtl
outsb
mov
aam
mov
adc
mov
and
mov
in
mov
les
cwtl
xchg
psadbw
mov
pop
mov
mov
dec
cmp
cwtl
cli
add
xor
insl
mov
mov
ret
push
sub
and
add
fcmovnbe
dec
bound
mov
jo
mov
inc
or
push
lcall
rcl
dec
adc
ljmp
mov
or
jecxz
sbb
orb
enter
movsb
nop
xchg
or
dec
add
cmp
inc
in
inc
loope
je
cwtl
push
loopne
inc
pop
iret
mov
push
das
inc
cltd
shrl
mov
or
ja
fldl
enter
xor
fstl
push
sbb
lods
or
insl
mov
add
mov
sbb
and
icebp
jle
push
adc
or
xchg
int3
xchg
rcl
mov
and
sbb
xchg
rolb
or
in
imul
jl
incl
xor
pop
cld
push
jns
ret
mov
pop
into
or
inc
jge
mov
push
adc
daa
shll
push
pop
in
jo
rcrb
fistps
jp
aas
inc
push
push
enter
xchg
xor
sub
rcl
pop
mov
push
xor
mov
adc
mov
jb
push
or
nop
xor
popa
es
mov
or
or
mov
mov
or
sbb
mov
xchg
and
js
xor
das
mov
jg
test
cmpsb
cmp
call
xchg
lock
or
inc
adc
clc
mov
xor
push
push
pop
mov
push
push
push
inc
rolb
xor
add
loopne
mov
mov
adc
int
addl
lods
cmp
inc
pop
test
xor
mov
add
pop
mov
jo
lods
mov
das
sub
pop
and
mov
adcb
popa
mov
insl
add
adc
mov
jne
rorl
or
shl
loopne
adc
dec
add
fnstenv
cmp
push
ss
lock
imul
pop
xor
jl
sub
mov
xor
in
fs
arpl
jb
add
or
or
sbb
push
incb
pop
dec
push
sbb
mov
loope
inc
lock
ret
es
or
add
and
sbb
inc
pop
lods
sbb
mov
or
test
les
out
sub
jp
xchg
je
sub
hlt
adc
jns
inc
lcall
pusha
mov
adc
mov
js
pop
and
inc
cmp
cmp
inc
or
pop
rclb
or
or
cmp
aam
cmp
sbb
into
subb
cld
add
sub
inc
shrl
faddl
and
loope
pop
and
pop
xchg
pop
cmp
outsb
jg
dec
or
push
iret
push
or
mov
mov
out
inc
push
iret
leave
sub
ret
insb
add
xchg
xorl
xor
xchg
jecxz
jno
jl
clc
repz
adc
lahf
push
mov
dec
test
repz
add
enter
xchg
adc
fisubl
jns
popa
leave
jae
push
aad
stos
mov
and
add
push
dec
in
inc
dec
inc
outsl
inc
jo
rorl
out
xor
inc
push
push
push
clc
xor
movlps
xchg
sbb
clc
ret
push
xchg
daa
adc
cmp
lret
popa
enter
xor
cmp
and
call
les
ret
pop
ret
dec
mov
add
adc
lds
dec
hlt
mov
loop
insb
xchg
stos
pop
aas
ss
testb
cmc
in
mov
push
adc
aam
mov
inc
test
out
aas
pop
sub
daa
lods
or
cmp
cmp
or
stc
add
shlb
xchg
jae
sub
les
and
xchg
inc
aam
sbb
cld
rorl
mov
or
cmp
or
or
or
jl
dec
ret
idivl
inc
adc
jge
mov
jle
notb
cmp
xorb
test
or
popf
arpl
push
cmp
jge
pop
outsl
or
div
cmp
std
push
sbb
mov
jb
imul
lods
inc
or
je
cmp
jne
inc
inc
jmp
xor
jmp
inc
dec
jge
imul
gs
mov
adc
lods
xchg
xchg
dec
fisubl
adc
jecxz
jne
cmpb
jbe
repnz
add
add
xor
mov
pushf
mov
ljmp
sbb
xchg
mov
test
sbb
jp
push
adc
mov
and
mov
push
lds
add
and
or
push
mov
push
adcl
mov
addb
pop
mov
xor
xchg
clc
insl
add
pushf
push
sbbl
fs
inc
or
xlat
ds
cwtl
xor
sbb
jle
sbb
mov
sub
imul
test
and
dec
loop
and
push
inc
xor
inc
lea
sbb
or
mov
imul
movsb
aas
fs
mov
mov
in
adc
cmp
push
add
test
jmp
aam
pop
sbb
dec
add
dec
push
fdivrs
call
xchg
pop
add
pusha
inc
adc
sbb
mov
xor
scas
adc
push
push
adc
add
push
push
dec
push
test
lea
packssdw
inc
sbb
daa
lock
addr16
fists
add
shr
mov
and
inc
cmpl
test
test
fdivrl
pushf
add
sbb
pusha
xchg
jb
push
test
andl
mov
fisttps
fwait
sbb
or
andb
les
or
push
inc
lods
popa
and
mov
test
dec
out
push
cmpl
icebp
sbb
pop
or
mov
mov
inc
sbb
or
mov
std
movsb
rcrl
pushf
lock
sbb
adc
ficompl
xor
sbb
push
arpl
lcall
dec
add
push
cld
inc
lret
push
daa
cmp
push
xchg
je
clc
fadd
lcall
ss
sub
jae
adc
inc
hlt
push
outsl
pop
or
push
adc
mov
sub
push
inc
or
movsb
push
out
pop
cmp
cmp
mov
xchg
movb
daa
and
xchg
mov
addl
scas
jecxz
adc
add
in
std
loopne
inc
inc
shrb
add
jnp
js
push
outsl
rclb
lret
jge
push
add
sub
xchg
dec
push
mov
out
inc
popf
stos
leave
sbb
push
or
add
std
ja
pushf
and
push
jb
and
adcb
aas
inc
push
in
push
adc
inc
repnz
sub
and
sbb
xlat
adc
and
mov
xor
insl
popf
leave
dec
test
or
add
shll
std
xor
xchg
pop
adc
jmp
sbb
xor
add
mov
popa
call
push
inc
mov
dec
mov
add
aas
out
cld
sbb
add
dec
fiadds
js
sub
icebp
sahf
add
adc
xor
push
mov
incb
sbb
fcoms
mov
add
aas
inc
sub
fcompl
fwait
in
add
xor
pop
fnstsw
fcomps
mov
fsub
push
dec
lds
dec
jne
lock
xor
fsub
lea
es
imul
sub
cmp
mov
jnp
ret
push
xor
dec
or
xchg
sahf
in
push
enter
push
test
push
sbb
push
push
rorb
lods
push
push
xrelease
sbb
and
int3
orl
push
cmp
orl
inc
dec
dec
call
add
mov
add
addl
jbe
add
xchg
out
int
inc
push
pop
das
sub
dec
sub
sbb
xor
pop
dec
add
or
lods
int
fcomps
sbb
stos
or
shll
pop
or
mov
add
inc
cmpb
inc
adc
test
inc
adc
ss
out
pop
leave
popa
adc
adc
mov
ret
jno
sub
aaa
sbb
enter
lock
mov
lds
in
xor
mov
adc
fcoms
cmp
in
jg
roll
jno
or
stc
jmp
lea
fmull
push
pop
jo
mov
iret
push
lea
cmpl
or
sahf
sub
pop
testl
ret
jg
push
ja
or
fildl
mov
or
push
pop
into
or
mov
and
push
dec
js
xchg
sbb
adc
sub
add
pop
and
jecxz
bound
mov
push
sbb
xchg
mov
rcll
add
and
xor
js
ds
add
xlat
std
and
ja
jo
or
sbb
pop
incl
rorb
sub
out
out
pop
inc
xchg
pop
sbb
jb
inc
mov
jmp
xchg
sub
jmp
pop
imul
pop
xor
insl
nop
or
or
sbb
clc
mov
xchg
loopne
mov
ror
pop
out
loop
dec
mov
fcmovne
lods
or
push
lods
das
mov
inc
pusha
addb
movsb
je
or
jbe
stos
loop
adc
leave
push
movsb
cld
xchg
pusha
imulb
add
jo
or
adc
dec
inc
jae
or
ret
dec
lea
mov
in
mov
lods
hlt
test
and
xchg
xchg
or
lret
dec
jmp
test
or
icebp
lea
inc
cmpsb
add
cmp
mov
insb
inc
or
mov
add
and
lret
fidivrl
lods
je
and
xor
xchg
inc
xor
pop
clc
push
pop
lock
mov
add
xchg
call
scas
adc
aam
and
cmp
adc
sub
lret
mov
incb
add
bound
into
rcrb
or
fst
inc
daa
bound
mov
call
or
fs
and
cld
push
cmpb
mov
mov
out
or
je
pop
sbb
call
insl
and
sub
and
in
ljmp
stos
push
in
hlt
jecxz
and
sub
loope
jmp
jne
adc
xor
add
and
add
push
and
mov
test
or
jne
pop
mov
fadds
push
fiaddl
movl
push
test
stc
pop
push
and
jo
and
in
mov
out
lea
icebp
enter
inc
into
nop
popf
pop
xor
and
xor
es
push
movsb
cmp
cli
into
or
imul
cmp
adc
push
push
mov
cmp
jg
test
adc
dec
push
add
push
ss
fdivr
mov
mov
sbb
add
jmp
rclb
push
mov
cmp
shll
cmc
push
leave
and
aaa
dec
dec
imul
dec
inc
mov
xchg
push
dec
je
scas
fiadds
adc
add
cmp
mov
pusha
jns
mov
aas
ret
sbb
testb
cmp
push
rcll
jbe
adc
mov
shlb
mov
out
xlat
mov
cmp
nop
arpl
xchg
out
nop
std
cli
das
mov
sbb
outsb
out
ds
js
sub
cmp
xor
xchg
stc
mov
mov
mov
sub
xor
or
push
xor
inc
or
ja
xchg
ljmp
mov
cld
sub
adc
dec
mov
out
mov
movsl
ret
and
negb
sbb
add
inc
js
fildl
pusha
mov
stos
push
mov
mov
les
fcompl
jo
inc
xor
cmp
ret
jg
and
jno
and
rorl
mov
les
leave
mov
mov
mov
test
shr
test
push
mov
pop
adc
add
inc
test
cmpsl
and
xor
jmp
daa
and
cmp
mov
mov
mov
xchg
in
sahf
cmp
inc
mov
xchg
sub
lahf
ds
push
imul
jg
leave
andl
mov
cmp
adc
dec
push
jl
push
test
cs
sub
cmpb
fcmovne
push
push
in
push
lock
punpcklwd
inc
aad
xchg
push
imul
ret
call
and
in
inc
push
es
dec
add
xchg
push
cltd
inc
and
push
mov
ret
push
ret
loopne
loopne
push
mov
or
push
rcrb
add
faddl
fnsave
addb
xchg
popa
fcoml
pusha
or
push
pop
inc
cmp
fwait
sub
lods
das
cltd
rcll
pop
fadd
bound
xchg
sbb
aaa
push
and
fs
movsb
mov
fs
push
movsl
mov
mov
rorl
pushf
push
sti
in
ss
divl
jle
pop
dec
cwtl
push
push
subl
or
push
orl
xchg
push
xchg
sub
nop
mov
aas
sahf
faddl
mov
inc
js
xchg
clc
mov
or
adc
loope
mov
fcmovnu
pusha
cmp
jne
ds
lret
xchg
movsb
cmp
ljmp
and
psllw
fimuls
pop
mov
add
cmp
fcompl
and
mov
add
add
sub
push
add
mov
cmp
adc
add
xchg
cwtl
imull
xlat
mov
mov
icebp
clc
iret
xchg
and
adc
inc
lea
rorb
sti
adc
or
jne
and
faddl
inc
inc
xor
imul
enter
adc
les
lea
add
and
and
sbb
lcall
sbb
sbb
push
shrb
sahf
sbb
leave
sbb
mov
dec
loopne
mov
adc
inc
lods
push
jno
shlb
repnz
pop
cmp
mov
inc
mov
mov
push
add
sub
push
stc
gs
lods
pop
inc
aaa
mov
aas
sub
aad
push
dec
or
je
or
shl
imul
pop
sub
jbe
data16
or
pop
jmp
add
cmp
and
mov
cmp
push
int3
sbb
xor
dec
sub
shrb
movsl
std
pushf
cwtl
xor
in
lret
xchg
shlb
test
in
or
sub
loopne
xchg
push
mov
lcall
mov
gs
push
inc
xor
and
add
xor
pop
rol
xor
mov
sbb
push
xchg
mov
pop
jns
inc
fbld
jno
add
sbb
and
mov
add
xor
sbb
les
icebp
ljmp
inc
loopne
xchg
jbe
dec
ret
test
sbb
jne
cmp
adc
aad
xor
sub
mov
push
jle
inc
enter
adc
xchg
inc
push
dec
xor
call
mov
iret
cmc
or
push
add
cmpb
mov
or
inc
add
icebp
enter
inc
sbb
hlt
jae
fsubs
sbb
jle
out
dec
add
mov
movsl
in
lds
sub
mov
nop
add
mov
sbb
mov
pushf
or
fcoml
xor
out
push
mov
pop
or
addr16
test
je
fadds
test
sub
cmp
push
add
cmp
pop
push
ja
addl
pop
pop
inc
subl
push
mov
out
enter
adc
icebp
cwtl
in
imul
sbb
int3
test
push
pusha
js
sarb
jbe
sarb
sbb
sub
push
inc
pop
cmp
cmp
rcrl
sarb
mov
and
xor
jmp
xor
or
icebp
mov
pusha
cmp
fsubr
inc
jne
scas
icebp
imul
sub
adc
push
cmpsb
fmull
aam
adc
mov
rcrb
jno
ror
les
je
mov
lds
jmp
mov
adc
xchg
or
mov
inc
adc
adc
xor
and
gs
test
gs
dec
ljmp
lcall
inc
push
les
add
add
add
xchg
sar
pop
popa
xchg
pusha
mov
je
gs
sub
xchg
add
inc
add
mov
dec
xchg
mov
add
push
xor
mov
sbb
mov
mov
or
insl
cmpsl
test
ds
add
jne
mov
xchg
mov
pop
push
lahf
pushf
aad
inc
push
ds
pop
add
call
sub
into
add
dec
adc
test
cmp
xchg
xchg
inc
mov
mov
push
loop
dec
inc
sbb
aam
pop
mov
lahf
mov
loop
js
shrb
adc
rorl
jmp
adc
pusha
mov
mov
pop
and
shlb
test
mov
dec
call
adcb
inc
stos
add
adc
add
jle
iret
push
daa
fwait
subb
icebp
nop
pop
movsb
inc
hlt
nop
movsb
adc
loopne
mov
imul
or
sbb
or
shrl
dec
xchg
ja
push
xchg
mov
loop
scas
adc
sbb
adc
dec
enter
sahf
imul
cmpl
sbb
inc
xabort
insb
out
scas
and
push
arpl
scas
lock
xor
push
sub
and
and
rcl
ss
add
and
sub
and
pop
sub
popa
pop
cmp
mov
test
or
mov
mov
jp
cmp
js
aad
jbe
aam
scas
adc
sub
xor
cmpsb
mov
inc
cmpl
jb
sbb
dec
mov
or
xchg
adc
inc
mov
xchg
xchg
xor
or
jns
rolb
add
adc
xor
and
or
sahf
dec
and
mov
insb
push
popa
lock
push
rcr
ret
shlb
js
sidtl
pop
sub
cmp
adc
andb
push
and
add
add
xchg
pop
xchg
push
leave
push
lock
sbb
pop
arpl
mov
insl
das
in
push
xchg
or
or
or
push
lds
jg
adc
stos
lock
adc
adc
mov
jbe
out
jp
lret
push
pop
xchg
cmp
adcl
loop
or
push
jnp
add
loop
cmp
enter
jne
lock
test
cmpl
xor
push
sub
rcrb
outsb
out
and
repnz
pop
add
pop
ss
push
push
mov
pusha
add
pop
jb
js
adc
sbb
mov
inc
mov
shrl
int
add
sub
movsb
inc
leave
fstps
sbb
inc
sbb
jns
test
ja
mov
ljmp
lret
int
xchg
stos
imul
jmp
jecxz
xchg
bound
mov
or
fwait
xchg
pop
loope
mov
imul
lcall
mov
mov
leave
xor
je
adc
mov
lods
push
push
cmp
cmp
jae
call
into
imul
pop
mov
pusha
pop
xor
orl
and
bound
mov
add
ret
pop
mov
mov
xchg
inc
xchg
xor
xchg
cmp
inc
jge
addl
add
pushf
sub
orb
inc
xchg
aas
push
mov
loop
cmp
mov
fwait
pusha
xchg
rolb
or
cs
pop
enter
das
xchg
or
ds
sarl
mov
and
and
adc
push
push
inc
out
cmp
push
push
pop
iret
push
push
add
ret
add
ret
test
adc
adcl
inc
pop
add
dec
sbb
or
sub
sbb
pop
sub
xchg
cmp
add
mov
push
inc
mov
push
jns
hlt
or
inc
ret
sub
xchg
in
loope
insb
jge
gs
add
mov
insl
es
sub
test
pop
add
sbb
inc
and
movsb
cwtl
lea
jne
idivb
testb
rcrl
or
je
out
std
adc
and
inc
add
jmp
dec
sub
cmp
add
dec
jo
into
sub
fwait
test
xor
les
jl
bound
jmp
xchg
pop
add
sub
sub
data16
push
clc
lock
jbe
push
push
push
mov
arpl
push
jecxz
sbb
and
inc
clc
dec
sbb
movsb
cmp
lods
andl
mov
mov
push
push
push
cmc
inc
dec
dec
or
mov
jmp
and
and
fwait
lods
sub
xor
outsb
ds
mov
cmp
mov
push
push
sbb
pop
testl
aad
inc
mov
pusha
and
or
or
mov
mov
jns
or
repnz
xchg
push
insb
add
insb
xor
jb
or
mov
ret
sbb
lahf
aam
je
call
or
cmpsl
fbld
push
push
insb
jl
cltd
call
shr
push
push
pop
std
jmp
mov
cmp
loope
push
fs
in
pop
jmp
or
pop
jae
not
out
jmp
sbb
loopne
cmp
sbb
push
xor
ja
mov
out
or
dec
add
or
mov
add
outsb
inc
or
add
and
inc
dec
xor
out
adc
push
stos
gs
or
pop
insl
cmpxchg
pop
mov
outsb
call
test
sub
imul
sub
inc
sub
mov
addr16
cltd
cmp
or
enter
add
mov
or
push
xchg
sub
bound
adc
or
mov
and
out
adc
xor
xor
repnz
stc
jo
cld
pushf
mov
adc
rorl
rcll
lods
ljmp
lock
or
hlt
add
push
jo
push
xchg
sbb
sub
mov
push
push
nop
and
adc
std
xor
js
addb
push
movsl
outsl
loop
xor
jl
xchg
out
nop
mov
add
push
in
arpl
pop
nop
jmp
jo
mov
ficoms
sub
or
mov
pop
pop
roll
bound
add
repz
outsl
pop
fs
pop
test
and
insb
sub
sub
sbb
and
adc
add
or
cltd
jbe
push
push
pop
hlt
adc
fcompl
fcoml
xor
pop
inc
dec
push
ljmp
loope
loop
stos
adc
inc
and
jb
les
cmp
push
adc
adc
sub
in
sub
lods
xor
adc
mov
jmp
inc
adc
dec
mov
jl
and
push
pop
push
jbe
inc
in
inc
jl
xchg
sbb
cs
xchg
mov
movsb
jns
jg
pop
fisttps
ret
inc
pop
or
push
inc
dec
pop
mov
pop
arpl
mov
int3
jecxz
inc
sub
pop
inc
movsb
push
lods
scas
push
sbb
push
jne
js
dec
aas
das
mov
inc
test
pushf
adc
loop
hlt
mov
repnz
inc
cmpsl
repz
movsb
add
add
out
push
or
xor
sbb
ljmp
adc
in
sub
xchg
popf
in
adc
xor
pusha
mov
mov
xchg
imul
sahf
mov
and
cmp
imul
fstps
jecxz
or
shl
int3
sbb
sbb
xlat
or
and
inc
inc
jge
decl
push
add
xchg
fadds
jno
xchg
in
add
push
testl
push
les
testb
or
xchg
and
out
mov
push
bnd
xlat
jmp
inc
in
cmc
dec
clc
push
and
xor
out
inc
decb
nop
push
xlat
xchg
dec
in
mov
sbb
push
add
sub
cmp
aaa
adc
sbb
and
ret
inc
push
dec
and
jl
fs
ds
inc
push
xor
mov
inc
shl
sbb
std
mov
sbb
sub
pop
adc
scas
inc
fwait
pop
xor
pop
xchg
rolb
add
icebp
inc
mov
lds
and
mov
sbb
adc
sub
or
lock
cld
outsl
sbb
xor
pop
or
add
lret
adc
loop
dec
xchg
pushf
mov
or
pop
cmc
ret
mov
or
sbb
cltd
ss
fimuls
ret
push
cmpb
mov
fisubrs
das
mov
popf
loopne
jmp
sub
lods
pop
aas
inc
pop
mov
push
adc
outsl
in
xor
pop
fcompl
xor
jo
adc
add
push
push
inc
lcall
pop
push
pusha
shrl
mov
adc
lods
stos
add
pop
fisttps
sub
outsl
and
icebp
inc
mov
leave
and
push
cmp
in
or
push
out
push
js
mov
cltd
mov
xchg
sbb
add
clc
sbbb
or
add
and
loope
dec
xchg
lea
je
adcl
enter
dec
mov
das
jne
push
adc
pop
pop
dec
js
popa
mov
push
dec
sub
and
xor
adcl
mov
mov
mov
stos
les
inc
lods
push
sub
mov
dec
fsubrs
mov
adc
xchg
pop
rorb
add
cmp
hlt
scas
pop
cli
mov
or
add
mov
rolb
or
adc
push
jecxz
jmp
push
and
mov
push
mov
cmpsl
pop
adc
jo
movb
addr16
sbb
inc
in
sbb
ror
flds
test
add
jo
push
xacquire
add
in
mov
sbb
push
add
je
rclb
js
cmpsl
inc
call
rcrb
call
into
ffree
cmpsl
xor
test
js
in
xchg
pop
adc
xchg
call
nop
xchg
xchg
mov
add
or
cmp
insb
in
xlat
push
aam
and
push
inc
das
mov
mov
stos
pop
add
sbb
lods
or
push
iret
cmp
add
loope
lea
and
lret
and
pop
inc
and
int
add
xor
imul
and
xor
sbb
arpl
push
jb
in
push
push
rcrb
add
and
repz
sti
cmp
fcompl
add
add
add
inc
repnz
mov
sub
inc
add
inc
jo
shrb
mov
mov
and
pop
stc
push
xchg
cmc
pop
mov
jae
cli
inc
leave
pop
js,pn
inc
data16
jno
fsts
and
or
xchg
sub
sbb
mov
popa
insl
sbb
ror
cmpb
repz
adc
adc
cmp
cli
add
in
rolb
xchg
ficomps
and
sub
or
push
icebp
cmp
mov
push
dec
dec
push
outsl
adc
imul
pop
mov
cmpsb
pop
and
cmp
pop
xor
cmpsb
add
or
movsl
xor
push
cmp
push
mov
nop
mov
mov
or
pusha
sub
pop
cmpl
dec
push
data16
call
xchg
sbb
pusha
mov
pop
popa
shlb
das
sub
lock
das
lea
jae
or
in
mov
or
inc
hlt
fxch
xchg
add
cmp
ljmp
aad
ja
cmpb
jne
mov
aaa
flds
sbb
push
push
popf
adc
and
rorl
ret
xchg
push
mov
jno
imul
or
adcb
in
xchg
add
shrb
out
data16
pop
fwait
fs
jge
ja
xchg
mov
pop
movsl
icebp
or
ja
and
sbb
es
jg
xor
cmp
lahf
cwtl
push
incl
mov
push
clc
popf
cmc
and
mov
je
push
mov
lea
js
flds
lret
cs
fnstenv
xor
insb
aaa
daa
pop
in
push
mov
int3
xchg
sbbb
ret
lcall
xor
add
lcall
stos
mov
xor
data16
fsubr
ss
sub
arpl
sub
xor
popw
imul
sub
imul
jge
xor
int
enter
ss
push
sub
daa
loopne
xchg
stos
mov
daa
aam
mov
xor
sub
imul
and
addr16
push
js
lods
je
add
sbb
rcr
mov
popa
xor
push
pavgw
sub
es
mov
pusha
sub
movsl
mov
movsb
fisubl
sub
mov
test
in
jmp
mov
inc
push
mov
inc
adc
mov
insl
xor
jg
or
cmpsb
dec
or
mov
jle
mov
cs
popa
mov
adc
jne
rcr
aam
out
dec
mov
mov
sub
gs
test
add
jecxz
lods
mov
mov
and
pop
mov
pop
mov
pop
cltd
popa
pop
inc
out
add
xchg
xor
mov
push
fadds
add
rclb
xorb
movb
inc
jecxz
cmpb
leave
adc
inc
std
je
mov
fisubs
cmp
nop
adc
cmc
lock
inc
inc
xchg
xchg
cmpb
fcmovne
movl
jo
xchg
adc
mov
dec
jl
and
adc
popf
sub
and
rcll
xor
stc
pop
cmovne
stc
xchg
leave
mov
inc
repnz
sub
xor
cmpsl
movsb
mov
enter
or
push
mov
add
xor
lret
and
stos
sbb
pop
pop
movsb
jb
inc
add
nop
test
dec
je
add
incb
add
fstl
test
dec
xchg
jle
sti
loop
test
aad
ljmp
mov
cmp
push
dec
push
sbb
mov
mov
add
addb
out
test
dec
decb
sub
push
push
int
pushf
jnp
ret
xor
dec
arpl
lock
adc
sub
mov
add
pop
dec
inc
or
push
out
insb
jge
push
push
push
insl
movsb
jecxz
inc
push
mov
and
int3
sar
enter
add
xor
add
in
faddl
popf
dec
xchg
xchg
cmp
xchg
or
jbe
cmp
test
cltd
mov
mov
push
xchg
adc
and
in
push
lret
lret
pop
xchg
sbbl
cmp
les
adc
xchg
add
popa
loopne
mov
lea
jne
push
popf
jl
test
mov
mov
scas
pop
inc
shlb
sub
push
lea
mov
adc
push
or
push
xchg
movsl
mov
push
imul
or
outsb
gs
jp
ficomps
in
cmp
in
inc
lds
xor
cmp
jno
adc
aad
shlb
push
pop
adc
rorl
pop
icebp
inc
dec
lahf
mov
jno
push
add
push
mov
xchg
ret
jb
pop
testb
arpl
into
imul
daa
lock
mov
push
sub
adc
sub
or
or
add
or
rorl
or
or
and
or
xlat
push
inc
dec
jmp
fnstenv
imul
xchg
inc
jle
cmp
lea
cmp
and
or
fwait
ret
mov
stos
mov
mov
cs
inc
push
or
add
cmp
jle
adc
mov
pop
js
cmpsb
sub
repnz
adc
or
enter
push
mov
add
jnp
and
out
cmpsl
mov
cmpsb
adc
jp
dec
adc
orb
or
pop
ud2
xchg
testb
push
xor
movsb
mov
mov
push
insb
lock
int3
dec
out
cmpsl
pop
xor
aad
cmp
ss
inc
fs
or
stos
test
cmpsl
push
rep
cmpsb
test
in
movsb
out
pushf
test
inc
int3
adc
jne
test
xchg
shrl
xchg
dec
or
sub
mov
inc
push
jl
or
mov
lea
and
test
lds
push
push
call
mov
pop
mov
fwait
outsb
mov
outsb
pop
xchg
adc
pop
push
negl
jae
andb
ds
mov
pop
dec
popf
jo
push
add
out
mov
shrl
jle
inc
divl
push
cmp
or
std
inc
jb
push
push
dec
jp
pop
out
cmpb
push
jmp
push
aam
sub
cmp
pushf
jbe
or
dec
sbb
dec
jecxz
adc
pusha
ret
cmpsl
mov
cmc
arpl
and
aas
xor
jb
es
mov
inc
xor
push
mov
push
inc
add
add
cmp
xchg
xor
pop
fs
xor
pushf
xchg
mov
loope
dec
test
mov
lret
setge
jbe
xchg
fiadds
adc
and
inc
dec
dec
jp
push
mov
lcall
mov
jmp
cmp
cmp
cmpsl
lods
movsb
xchg
andb
add
aad
insl
mov
mov
jl
mov
adcb
xchg
mov
cmp
xchg
cli
fcmovb
jecxz
movsl
aad
popf
and
andl
adc
enter
cmp
add
dec
mov
fwait
and
jecxz
lock
js
jle
inc
mov
cmp
push
enter
jle
pop
mov
lea
test
dec
xchg
adc
popa
rol
dec
jl
loope
out
mov
lahf
test
popf
xchg
cmp
and
hlt
and
dec
popf
hlt
mov
adc
bound
jle
push
xchg
cmp
stc
dec
or
pop
jge
push
and
jo
add
and
jmp
add
in
mov
mov
in
xchg
lret
test
faddp
xchg
int
xor
push
cmp
ficoms
shll
clc
inc
dec
sbb
add
add
ret
fcomps
mulb
pop
loopne
sub
jne
lds
shll
loope
pop
clc
fnsave
add
fnstsw
loopne
and
popf
ja
add
mov
sub
je
sub
scas
imul
push
jbe
adc
or
pop
pop
out
adc
mov
push
cmp
mov
jmp
jns
in
xchg
or
aam
test
inc
cmp
insb
pushf
mov
subl
push
add
jg
popf
adcb
adc
and
hlt
cmp
adc
add
test
sbb
test
xlat
mov
test
mov
mov
lahf
adc
es
loopne
stos
jge
push
push
sbb
xor
adcl
aaa
cli
or
enter
or
test
inc
mov
in
out
popa
sub
xor
xor
or
or
cmp
enter
jge
add
addb
mov
pop
lock
test
jg
lock
add
adc
or
das
or
lret
jne
loopne
or
lea
mov
adc
xor
pushf
js
dec
add
dec
mov
mov
daa
add
inc
loope
cmova
xor
adc
mov
push
xchg
push
push
adc
inc
popf
inc
mov
rol
fstl
pop
dec
jp
or
inc
repnz
or
test
add
inc
movsl
mov
xchg
xor
pushl
aam
imul
adc
add
imul
pushf
pop
inc
mov
out
test
adcl
sbb
pusha
roll
roll
orl
adc
sti
and
sub
push
inc
pop
inc
xor
sub
push
push
cmpsb
outsb
inc
push
sub
mov
sbb
jecxz
push
xor
cmp
adc
or
sbb
ss
pop
dec
out
xchg
lock
or
clc
push
add
xor
or
push
out
xchg
mov
sbb
or
pop
mov
popa
cmpsl
fdivl
inc
sub
mov
jl
nop
push
xor
mov
lods
pushf
aad
or
fs
aam
movsb
in
iret
push
push
fildl
sub
hlt
add
test
js,pt
xor
sub
xor
scas
cmp
lcall
js
lcall
add
xlat
test
test
push
orb
mov
das
je
ret
popa
and
cwtl
and
or
or
xorb
popf
or
xor
mov
fimull
mov
adc
nop
add
cmp
insb
stc
mov
sbb
ja
sahf
xor
mov
test
dec
mov
mov
pop
and
mov
mov
test
add
mov
pop
dec
sub
out
push
or
pushf
lea
add
aaa
mov
inc
mov
jl
dec
mov
cmp
movb
or
mov
push
add
inc
stos
movsl
addb
dec
stos
lods
add
fstpl
xor
enter
scas
push
mov
sub
fadd
xchg
leave
data16
movsl
mov
inc
or
les
sub
or
jle
incb
pop
or
add
mov
xchg
xor
and
dec
out
add
dec
xchg
mov
dec
rorb
jl
ret
pop
and
pop
aas
or
add
add
mov
sbb
pop
in
stos
mov
or
loopne
mov
push
enter
rcrl
fs
movsl
lret
mov
cwtl
fcoms
pop
jmp
push
mov
shrb
cmp
out
adcb
xor
loope
add
outsl
je,pn
or
and
outsl
incb
mov
mov
lcall
cmp
std
pop
mov
mov
rolb
leave
add
ljmp
mov
shr
sti
insl
jae
inc
shl
loope
xor
mov
adc
add
push
shll
pop
in
pop
in
data16
push
push
inc
movl
test
jo
shll
cmpsb
jnp
pop
dec
loope
scas
rorb
jge
insb
jl
sbb
lock
pop
vrcpss
call
subl
lret
add
sbb
and
fcomp
sbb
rorb
cmp
fimull
cs
add
loope
dec
jmp
cmovbe
bound
fcmovbe
dec
dec
in
cmp
out
idivb
loop
adc
cmc
push
daa
add
ss
or
inc
sub
movsl
cmp
decb
pop
fidivs
gs
sbb
xor
test
dec
push
dec
push
add
and
inc
dec
in
inc
jmp
push
xor
popa
popf
mov
sbb
mov
shl
push
icebp
mov
cmp
xor
imul
mov
push
xchg
cwtl
pop
or
cmpsb
repnz
xor
dec
fisubrl
push
xchg
cmp
adc
xor
mov
repnz
popa
pop
dec
push
sub
or
xor
or
adc
xchg
push
and
out
int
adc
test
add
mov
test
push
lds
lock
dec
pop
and
pop
add
add
scas
mov
pop
cmp
sbb
pusha
add
lds
pusha
ror
testl
fcmovb
js
push
imulb
cmp
jg
repz
lcall
jns
mov
add
sub
add
aad
adc
push
xor
pop
add
loopne
fxch
jno
jmp
sbb
push
hlt
push
pop
iret
incl
mov
and
icebp
icebp
icebp
add
add
and
pushf
loopne
rorl
imul
add
sub
pop
inc
cmc
lods
addl
sub
iret
inc
push
sbb
jp
xor
and
mov
add
lret
sub
in
dec
in
jl
enter
or
mov
ret
bnd
cmp
or
xor
push
iret
xor
inc
push
test
sub
push
inc
push
cli
jo
sub
add
aam
pop
lret
cld
adc
lahf
dec
or
movl
pop
mov
xchg
push
inc
pop
adc
or
dec
inc
jmp
rol
scas
mov
repz
cmp
rol
cmp
notb
adcb
sub
ret
loop
sbb
jecxz
clc
cmp
add
sbbl
mov
les
push
cmp
fs
mov
test
inc
jnp
or
cli
inc
dec
add
push
push
hlt
movl
mov
es
pop
adc
inc
loopne
and
mov
and
into
cmc
ds
movsl
push
and
push
and
js
add
sbb
jno
add
xor
leave
push
or
pop
inc
out
add
rorb
movsl
es
sbb
dec
push
xor
add
cs
xchg
jmp
data16
sbb
adc
dec
das
mov
in
jmp
xor
add
add
pop
push
test
bt
inc
mov
mov
sarb
nop
daa
jb
pushl
stos
fdivrl
pushf
jecxz
cwtl
dec
sti
aaa
add
in
cmp
mov
push
mov
and
insl
sub
in
rclb
sbb
lret
ret
mov
movl
sbb
pop
xor
adc
inc
jb
sub
lcall
mov
stos
stc
add
cmpb
jne
ret
cli
dec
push
cmp
push
pop
mov
adc
movb
sbb
push
pop
cld
lcall
daa
mov
insb
jl
push
mov
or
sbbl
das
xor
mov
in
dec
mov
cmp
fisubl
mov
jb
and
je
andl
pop
cld
faddp
jbe
dec
adc
pop
ret
in
pusha
int3
pusha
pop
aas
or
adc
cmp
test
add
cs
loope
mov
push
lock
cmp
jl
cmp
jle
xor
jmp
andl
lret
arpl
add
push
fadds
and
outsl
cmp
or
std
mov
ret
add
out
cwtl
lods
lahf
push
and
mov
xchg
mov
outsb
shll
push
lcall
ja
ret
cmpsl
push
sbb
inc
jl
push
push
push
cmp
xor
call
lock
mov
je
mov
sbb
iret
inc
hlt
push
and
inc
popa
nop
dec
jmp
mov
add
lods
adc
or
xor
sahf
rorl
rorb
push
jno
and
inc
dec
jge
je
dec
and
adc
mov
cmp
push
add
jo
add
fs
in
es
lea
mov
add
mov
pop
or
loope
arpl
lock
sbb
mov
sub
out
add
mov
mov
inc
mov
rorb
inc
int3
enter
jmp
cmp
and
sbb
adc
push
push
or
cli
decb
or
lods
sub
or
xchg
sub
mov
popf
dec
mov
jl
adc
jae
adc
sbb
fs
jge
sbb
cmpb
push
fdivs
movsb
add
push
mov
jnp
orb
lods
jnp
add
or
sbb
pop
pop
mov
xchg
push
shlb
pop
dec
cmc
adc
pushf
out
mov
pusha
push
sbb
fimuls
add
mov
push
pop
cmp
sub
enter
into
or
add
push
xchg
movsl
mov
dec
imul
and
push
lds
or
ret
ret
cmc
inc
xchg
push
lea
aad
cmpsl
push
adc
mov
cmp
lea
mov
std
add
fs
xchg
and
cli
and
scas
sub
in
out
lods
sbb
or
jno
push
cmp
xchg
dec
xor
push
and
sub
jmp
or
punpckhbw
xchg
add
pop
add
dec
push
ds
cmp
jae
pusha
rolb
mov
enter
lock
sbb
repnz
bound
dec
movsb
ds
push
popl
adc
fdivl
inc
les
inc
je
jne
push
orl
adc
jle
add
lea
jns
lods
enter
outsl
or
je
pusha
dec
push
insb
mov
xor
inc
hlt
xor
sbb
dec
inc
pop
push
pop
xchg
or
cli
sbb
add
je
lds
cmc
inc
xchg
mov
loope
ds
cmp
jl
popa
adc
jno
aas
nop
scas
lds
decb
cmp
jge
sbb
cmp
cmpsb
pop
stc
test
mov
test
jge
stc
pop
shl
outsl
sub
stc
push
popa
xor
mov
lcall
js
in
push
push
data16
mov
jle
adc
dec
das
xor
adc
pop
or
or
lods
fwait
in
or
leave
in
or
adc
repnz
movsb
xor
sbb
dec
repnz
dec
and
and
sub
push
sub
xor
xor
sub
dec
cmp
cmp
inc
jmp
sub
mov
dec
push
call
push
es
insb
xchg
dec
sub
adc
test
aas
lods
add
lahf
jg
push
xchg
pop
add
or
adc
pop
add
bound
adc
inc
popa
jp
call
mov
dec
xor
addl
jbe
mov
xor
rclb
xchg
fdivs
pop
xor
inc
add
pop
idivl
jle
mov
ss
lcall
push
mov
xchg
or
xor
xor
sbb
ss
push
hlt
add
mov
nop
inc
and
pop
adc
add
push
bound
push
stc
xchg
pop
adc
pop
sarl
and
xchg
lret
sub
inc
add
out
mov
xchg
outsb
lods
pop
int
or
sbb
sbb
push
dec
dec
jo
push
sbb
in
cmp
stos
nop
test
or
inc
adc
jnp
add
xor
or
pop
daa
es
aaa
add
adc
fnstcw
xchg
lods
inc
xchg
dec
je
inc
pusha
daa
mov
fwait
movsb
inc
dec
adc
push
push
xor
ds
add
push
adc
test
rolb
sub
cmpsb
cs
mov
jae
test
cmp
rclb
dec
sbb
test
cltd
pavgb
je
leave
in
lcall
ljmp
icebp
mov
movb
xor
icebp
jnp
jnp
add
aaa
cmp
pop
hlt
sbb
aas
jne
push
adc
and
and
aam
push
test
inc
mov
cs
cltd
loopne
lahf
arpl
push
xchg
stos
and
arpl
mov
inc
or
cmp
push
daa
sahf
jne
add
sub
je
pop
ljmp
loope
or
shl
inc
pop
mov
push
test
mov
inc
jno
in
jae
les
add
aad
pusha
and
dec
test
in
add
push
dec
das
add
mov
cmpb
es
cmp
cli
mov
or
dec
dec
cmc
in
sbb
jno
mov
pop
mov
jo
adc
sub
push
cmp
ja
push
add
outsb
and
fwait
les
jno
rcrl
mov
ret
xchg
fcoms
lret
pushf
stc
mov
push
xchg
jp
fcoml
js
push
jle
mov
mov
add
in
call
dec
sbb
mov
xchg
loopne
dec
jae
subb
shrl
inc
xor
add
jg
or
nop
adc
test
dec
loopne
into
es
push
xchg
inc
cmp
insb
je
nop
test
cmp
fildl
cmp
and
adc
push
movsb
idivl
shll
jne
or
xor
imul
xchg
lock
jno
ljmp
outsb
dec
or
test
fidivrl
inc
push
int3
dec
inc
clc
or
sub
shr
lea
sbb
shrb
mov
insl
or
or
jl
loopne
adc
or
loope
cld
adc
push
push
fmuls
sub
arpl
orl
mov
or
ss
lock
pop
sub
inc
xor
fwait
dec
loope
ds
pop
enter
add
stos
lock
orb
push
test
lods
in
hlt
jne
xchg
les
push
add
pop
pop
mov
lods
mov
xchg
lea
jo
jle
inc
test
sbb
mov
jecxz
xor
pop
aam
cmpb
add
cli
pop
and
adc
add
and
pusha
jp
push
adc
loop
or
pop
lods
sub
xchg
cmp
clc
sbb
dec
xor
mov
shll
mov
mov
or
sub
lahf
rcrb
add
jmp
test
fsubrs
movsl
ss
das
aas
mov
mov
push
push
inc
add
or
js
push
dec
inc
cmp
push
movsb
cwtl
pop
jo
mov
mov
jl
mov
or
test
xorl
jo
or
cltd
mov
fistl
dec
adc
or
sub
mov
sbb
push
xor
sbb
jnp
js
scas
aam
xor
inc
hlt
aad
or
lret
xchg
mov
add
sub
mov
adc
mov
xor
enter
or
dec
lds
xchg
mov
pop
or
fimuls
fdivrs
sub
pop
and
mov
test
fwait
cmp
fiaddl
pop
or
inc
call
orb
in
dec
cmp
ficoml
mov
inc
push
movsl
cmp
nop
inc
inc
popa
rorb
adc
or
imul
iret
add
mov
and
std
xchg
test
add
sub
js
pusha
push
mov
mov
lcall
call
pushf
insb
xor
jb
xchg
aam
push
mov
adc
pop
jl
scas
lock
cltd
shlb
pushf
and
and
incb
test
in
fbld
pop
icebp
test
aaa
subb
rorl
push
mov
orl
rorl
add
js
sub
bound
add
aaa
and
pop
push
inc
imul
stos
cmp
pop
dec
add
sbb
adc
jle
mov
les
adc
add
insb
cmp
xchg
push
into
cmp
mov
enter
out
or
inc
ss
nop
pushw
sbb
inc
or
cmp
pop
xchg
dec
jae
sbb
push
addl
add
loope
mov
pop
jl
sbb
xchg
adc
mov
cmpl
sar
jmp
mov
pop
mov
lcall
push
mov
push
inc
aas
into
cmp
adc
and
test
cmp
or
mov
jl
jno
sbb
adc
push
fidivrl
mov
sbb
test
and
and
sahf
sub
push
mov
xchg
sub
lcall
mov
imul
shl
test
loope
test
push
jne
xor
adc
loop
stc
jmp
int
push
clc
cmc
stc
or
aaa
loope
mov
test
and
jo
add
pop
or
sub
lcall
test
jp
dec
jo
ret
sbb
add
out
and
mov
dec
mov
and
adc
adc
xchg
cltd
push
jns
or
and
add
lds
add
xor
lahf
out
pop
lds
sub
aaa
inc
add
xor
adc
inc
mov
and
add
daa
add
add
sbb
sbb
adc
or
jns
imul
xor
add
add
in
test
jnp
mov
popf
adc
roll
sti
dec
and
add
imul
inc
sub
iret
dec
pusha
and
in
sarl
push
inc
out
int3
das
xor
pop
mov
push
loopne
nop
sbb
xor
cltd
test
ficoml
adc
xor
mov
mov
inc
jb
insl
xchg
xor
add
lds
dec
mov
add
push
add
mov
mov
cld
sbb
xor
movsb
mov
or
inc
add
sub
pop
xor
jns
jmp
test
mov
cmp
ret
mov
arpl
test
dec
cltd
popf
xchg
inc
jge
or
jge
in
in
xchg
lock
xchg
dec
clc
add
mov
cmpsb
pop
or
inc
clc
addl
add
jo
or
adc
xchg
push
cmp
xor
cwtl
stos
adc
pop
push
jo
sbb
mov
lods
ljmp
loop
adc
mov
popa
ss
push
movsl
mov
push
pop
or
xor
addb
pusha
jmp
shrb
or
jmp
sbb
push
jo
sbb
dec
cmpsl
ret
mov
adc
inc
loop
aas
out
daa
jne
adc
mov
cmp
sbb
sub
adcl
sbb
ret
mov
push
mov
mov
mov
xor
mov
xor
lock
push
clc
push
push
adc
enter
xchg
or
adc
adc
inc
mov
push
cmp
jns
and
jle
cld
xor
or
cli
or
and
movb
adc
or
cmp
cmpb
pop
movsl
arpl
and
add
test
sub
sbbl
jno
sbb
or
rcrl
push
in
add
dec
sub
or
adcl
or
push
push
pop
or
lea
add
mov
arpl
and
xchg
sub
popa
data16
push
sub
push
aaa
push
xor
subl
divb
add
push
in
sbb
jl
insb
xchg
sbb
xchg
xchg
jns
sahf
sbb
das
scas
fwait
enter
inc
push
or
adcl
push
ss
lret
insb
cmpsl
aaa
mov
stos
and
popf
shlb
inc
xchg
add
mov
stos
jb
sbb
mov
push
add
inc
push
or
and
in
sahf
and
adc
in
ret
dec
int3
lock
pop
decl
rcrb
cmp
jg
nop
adc
repnz
adc
adc
push
movsb
mov
adc
push
lcall
sbbl
pusha
xchg
inc
dec
and
rolb
add
ret
nop
and
jg,pn
nop
nop
xchg
push
mov
aam
adc
push
icebp
or
je
mov
inc
and
xor
pop
sbb
out
push
mov
or
or
add
add
xchg
push
and
sub
icebp
add
test
xor
stos
and
add
sub
sbb
xchg
add
mov
jg
push
imul
rorb
push
fildll
dec
pop
adc
bound
add
daa
pop
xchg
jl
inc
sbb
cwtl
pop
mov
fidivs
add
adc
adc
push
push
das
pop
push
scas
cmp
xor
xor
cld
mov
stos
push
and
insl
adc
push
adc
lods
jg
ret
mov
push
pop
sub
popf
and
xchg
aaa
in
pop
or
xor
adc
or
inc
in
xor
mov
sbb
xor
cmpsb
jge
mov
pushf
mov
les
mov
push
jmp
push
push
rol
push
push
leave
cmp
cmp
push
test
aad
rclb
enter
and
lcall
rolb
int3
fcoms
imul
or
inc
xchg
cmc
mov
test
sbb
dec
xor
jge
cmp
inc
or
aaa
xchg
xor
add
jmp
xchg
cld
ret
fists
sbb
adc
xchg
test
xor
dec
or
lods
jmp
jns
inc
mov
lcall
mov
xchg
xchg
scas
xchg
fdiv
xor
outsl
iret
dec
in
add
push
test
adc
mov
cmc
adc
push
push
popf
inc
add
xor
dec
arpl
and
dec
or
push
mov
and
adc
inc
std
cmp
inc
add
mov
je
pop
pop
add
pop
or
daa
dec
pop
sbb
inc
or
add
pop
lea
leave
rcl
mov
mov
sub
mov
xor
push
pop
sbb
movsl
nop
sbb
inc
mov
jmp
mov
adcb
aam
xchg
sbbb
pop
add
lret
and
inc
rolb
mov
or
inc
clc
adc
in
lcall
adc
push
add
xchg
or
or
jb
int3
fmuls
add
loopne
loopne
mov
or
fs
add
fmul
leave
push
push
or
sbb
or
imul
sbb
lods
or
or
or
sti
or
adc
pop
dec
scas
test
push
adc
or
push
adc
nop
lock
cmpsb
int3
push
sti
cmp
mov
fildl
xor
call
xor
addl
mov
push
mov
sbb
add
cmp
push
push
xchg
xor
cmp
xchg
arpl
rolb
pop
mov
sti
adc
shrd
pushf
pop
and
mov
movb
leave
adc
leave
add
bound
movsl
in
or
insb
mov
test
mov
lahf
test
sub
cltd
push
pop
jo
cmp
add
push
mov
clc
dec
sub
inc
cmp
xorb
pop
xor
mov
rol
mov
sbb
fwait
pop
add
and
outsb
popf
pop
cmp
icebp
pusha
push
add
push
cmpsb
mov
pop
mov
jl
push
and
xchg
ret
inc
ss
mov
pushf
inc
fsubr
test
or
jne
inc
adc
push
push
push
inc
mov
insl
test
hlt
mov
xor
sbb
mov
shrl
mov
and
and
cmp
lods
test
mov
dec
imul
das
sbb
mov
push
pusha
orl
pop
test
cs
add
cmpsb
cmp
and
outsb
pusha
jge
xor
and
rcl
mov
xlat
stos
inc
je
add
test
rorb
scas
push
push
push
push
pop
loopne
push
sbb
das
jnp
mov
dec
add
cld
ja
xor
rcll
add
jmp
rclb
enter
push
andb
jmp
inc
cmp
arpl
dec
xorb
test
xchg
xchg
shlb
test
push
xor
jle
les
xchg
push
insb
sbb
lret
push
jmp
add
pop
jp
mov
push
ret
or
movsl
lret
stos
or
xchg
mov
test
inc
mov
test
cmc
inc
stos
add
cmp
lods
mov
sti
lea
sahf
pop
movsb
jo
lcall
loopne
dec
push
dec
or
pop
xchg
xchg
fildll
sbb
push
inc
pop
or
mov
sbb
scas
popf
jae
mov
lcall
xchg
movl
cmp
jecxz
mov
mov
lahf
cmpps
or
mov
js
mov
test
push
add
pusha
add
jg
insl
mov
cmp
sub
sub
or
scas
call
fcoml
cltd
sub
fs
sub
in
mov
add
xor
xor
repz
add
jecxz
mov
and
add
xorb
and
movsb
pop
clc
fildll
adc
xor
fisttps
add
adc
pop
out
sub
test
xchg
adcb
shl
sbb
aad
cmp
push
cltd
pop
ret
pop
es
aaa
mov
cmp
sbb
addr16
push
mov
push
and
push
test
or
in
or
clc
jns
xchg
sbb
lock
int3
sub
test
aad
dec
shrb
xor
mov
imul
les
in
dec
dec
outsl
fdivl
mov
inc
push
cmp
cmp
push
daa
adc
sbb
out
and
adcl
sbb
inc
das
js
ret
dec
in
or
jg
clc
inc
or
sub
in
or
mov
pop
dec
enter
jl
push
or
lock
dec
int3
jmp
mov
jg
add
pop
jecxz
push
xor
je
insb
aaa
fidivs
jg
inc
mov
mov
hlt
je
add
cld
push
sbb
pop
add
adc
and
sbb
jle
ret
xchg
movb
gs
and
das
and
add
shll
loopne
div
pop
dec
xor
push
cmp
cmpsb
inc
iret
cmp
mov
dec
js
and
dec
div
cmp
add
insl
rorb
rorb
cwtl
cmp
lcall
loop
outsl
sbb
mov
add
and
dec
push
mov
and
dec
cwtl
push
xor
sub
xor
and
jmp
stc
adc
push
cmp
mov
sbbl
sbb
mov
test
inc
clc
loope
stos
inc
dec
sbb
mov
push
sbb
shrb
ss
mov
mul
sub
jmp
add
gs
mov
inc
jb
push
mov
add
aaa
dec
mov
push
test
or
mov
daa
pop
js
stos
or
xchg
stc
js
out
inc
loop
sbb
push
add
or
leave
sub
sub
inc
sub
or
xor
inc
sbb
xchg
shrb
xor
mov
ja
or
push
xor
lahf
xor
mov
lea
js
outsb
cmp
clc
subl
and
and
shrb
and
insb
jae
xchg
test
or
cmp
inc
jb
cmpb
or
push
xchg
mov
or
or
sbb
dec
push
int
andb
aaa
sub
cld
push
xlat
test
adc
js
sub
aad
scas
add
adc
dec
cmp
xchg
inc
mov
jecxz
inc
sarb
lcall
sub
inc
test
cmp
xor
test
mov
dec
cmp
add
jo
shlb
or
ljmp
push
das
imul
jns
jp
push
fstl
add
fldl
inc
mov
xor
lds
jg
push
out
add
pop
add
cmp
adc
loopne
pop
sarb
sub
xor
nop
adc
or
pop
adc
adc
jo
sarb
out
inc
pop
nop
push
pop
adc
in
rclb
pop
test
loopne
test
push
hlt
mov
mov
je
pop
loopne
or
dec
cmpb
gs
mov
movb
in
test
mov
sbb
or
push
and
repz
int
push
or
je
mov
mov
xchg
xor
xor
in
addl
fs
ja
bound
movsl
lea
or
inc
mov
fimull
and
push
movnti
and
jge
inc
pop
rcrl
xor
dec
mov
adc
mov
inc
or
mov
adc
popa
pop
push
mov
fmuls
or
dec
or
sbb
sub
and
add
add
cmpsb
mov
cmp
jecxz
or
lret
jecxz
ret
in
pushl
push
push
sbb
sahf
lcall
pop
nop
movl
ds
aam
sbb
and
xchg
and
or
xor
push
xor
inc
push
xor
push
and
xor
je
xor
push
xor
push
sub
sub
in
out
cs
or
jnp
jmp
cmp
sub
inc
nop
xchg
dec
gs
xor
aad
in
ja
xor
or
xor
mov
mov
test
fisttpl
mov
ret
fld
pop
addb
adc
or
or
or
sub
xor
movsb
or
pop
add
mov
add
fdivl
cmp
xor
push
popa
inc
pop
cmp
cs
scas
add
sbb
mov
inc
inc
rclb
mov
repnz
cmpl
es
jne
aas
add
imul
adc
dec
mov
cmp
push
push
sbb
push
add
dec
adc
xor
sbb
and
nop
popa
xor
adc
xor
cmp
add
push
sub
test
sbb
mov
sub
pop
stos
add
icebp
aad
add
adc
mov
jb
ja
icebp
ret
dec
es
add
out
sub
call
xchg
xchg
je
mov
lock
ror
sub
add
lret
sbb
or
mov
sbb
and
xor
subb
lahf
mov
sbb
pop
pop
cmp
stc
rorb
out
add
adc
cmp
sbb
lret
js
fstpt
sbb
xor
push
xor
dec
cmpsl
mov
push
js
cvtpi2ps
sbb
inc
lock
and
sbb
imul
es
mov
ljmp
sbb
xchg
repnz
mov
sbb
push
sbb
xchg
inc
inc
pusha
jb
imul
inc
fists
mov
or
ret
loopne
mov
popa
sahf
cmpsb
or
or
dec
loope
jne
paddq
dec
cmp
sbb
sbb
shrb
imul
xor
or
pop
enter
mov
dec
rol
jge
jne
addr16
les
addb
shrl
fisubs
push
movsl
push
movsl
lcall
dec
jle
push
xchg
xchg
lock
cmp
inc
insl
push
je
dec
or
xor
loopne
cmp
xor
inc
jecxz
pusha
popf
xchg
bound
fmull
push
mov
add
cmp
sar
icebp
jo
or
test
xchg
out
je
test
sub
cs
std
adc
jge
mov
mov
inc
les
inc
fildll
les
inc
jecxz
sub
push
testb
in
mov
push
insl
ljmp
icebp
or
jnp
cmc
or
push
sbbl
lods
loope
add
inc
shl
les
sbb
mov
mov
adc
lods
pop
cmpsb
cs
sbbl
adc
adc
push
testl
sub
jle
push
rcl
pushf
sbb
inc
mov
inc
in
decl
mov
sbb
adc
dec
push
out
repz
pop
sbb
dec
or
in
call
push
jle
test
push
and
scas
loopne
add
lods
adc
or
cmp
add
xchg
dec
lock
jo
or
inc
inc
les
cmp
pusha
mov
nop
add
mov
mov
ret
xor
js
inc
les
pop
push
lock
sub
call
aaa
fs
outsb
sahf
sub
or
imul
sbb
pop
pop
sbb
stc
sub
sbb
add
outsl
xor
in
or
jne
pushl
adc
mov
les
add
insb
adc
cmpsb
xchg
add
push
lea
xchg
adc
xor
inc
daa
aaa
nop
jbe
pop
mov
decb
or
or
out
push
or
data16
cmp
cmp
inc
pshufw
push
dec
loop
and
aam
cmp
push
jl
cmpsl
movb
jb
xor
mov
lods
jge
fiadds
add
lea
jnp,pt
push
pop
xchg
jl
push
fdivrs
jl
andb
fs
adc
mov
mov
jb
dec
xchg
jbe
sub
jl
push
and
xchg
movsb
mov
push
enter
fs
arpl
cs
push
jne
rcll
push
jo
leave
or
inc
imul
add
lods
xchg
jb
inc
in
jmp
data16
mov
mov
or
ljmp
mov
sbb
and
subl
sbb
test
add
mov
dec
into
stos
aas
dec
add
nop
pusha
add
add
lahf
cmp
push
xor
push
push
or
push
add
es
insb
aas
xor
push
push
imul
or
cmp
in
mov
pop
mov
pop
fldl
inc
or
xor
mov
mov
or
sbb
jp
adc
mov
lock
add
adc
cmp
dec
xor
lcall
dec
call
aaa
andb
or
push
adc
test
push
lret
mov
pop
jne
mov
adc
xchg
nop
xor
popf
sbb
xchg
cwtl
dec
mov
iret
push
sub
pushf
add
jne
cmpsl
fwait
or
inc
jbe
imul
jno
mov
rcl
orb
or
push
scas
cmp
mov
or
cmp
sbb
add
pop
xchg
push
push
jne
pop
xchg
mov
sub
dec
call
mov
and
loopne
jl,pn
dec
inc
xor
adc
nop
push
push
push
xor
mov
in
aam
ds
xor
and
sarl
gs
test
jbe
dec
xchg
fistl
push
push
cmp
rcrb
ds
adc
push
jmp
es
in
adc
nop
mov
repz
es
push
pop
xchg
or
ficoml
iret
cmp
adc
sbb
fcomps
xchg
bound
mov
mov
dec
fsts
shll
push
std
test
and
fs
and
or
imul
sbb
fstl
sub
fsub
in
shrl
and
call
add
loopne
and
cmp
fadds
in
mov
cmp
mov
and
call
inc
xor
js
mov
mov
movsl
fsubl
fwait
jmp
add
fdivr
lret
adc
sbb
inc
negl
xorb
mov
dec
sbb
adc
xor
test
jb
cmp
imul
into
imul
imul
dec
fimull
and
push
add
andb
pop
xchg
adc
es
push
fs
in
sub
sub
ret
pushf
jb
xor
cltd
push
mov
mov
sbb
dec
lret
adc
lock
push
xor
inc
push
mov
leave
pop
xchg
sub
out
testb
dec
add
rolb
sti
lods
jb
push
xlat
mov
sub
lea
insb
fisubs
mov
cmp
push
call
dec
js
mov
push
cmp
popa
call
inc
adc
test
push
shll
adc
lret
sub
mov
inc
lret
dec
repz
in
ret
or
adc
int3
das
sbb
enter
push
jne
mov
push
push
mov
daa
inc
push
sub
or
pusha
mov
in
add
mov
or
enter
xor
in
lds
cmpsl
stc
add
jecxz
or
push
cltd
les
adc
sbb
add
shll
xchg
add
mov
rorb
cli
sub
aad
or
rorb
dec
cmp
xchg
fbstp
shrb
push
sbb
sbb
xchg
inc
adc
stos
int3
call
movsb
xor
outsl
or
scas
and
sbb
enter
add
rolb
add
cmp
jne
out
pop
add
push
push
or
pop
popa
and
shlb
inc
sahf
popa
ret
adc
adc
ja
insl
cmp
jae
sbb
sbb
add
movsb
push
xlat
orb
adcl
push
pushl
adc
ret
lcall
mov
xor
in
xchg
cmc
inc
jmp
data16
xor
dec
pop
je
imul
addr16
outsl
mov
subl
call
add
idiv
push
and
or
mov
push
xor
sub
and
add
xchg
push
nop
cmova
data16
or
aam
popa
cmp
adc
mov
sbb
lea
int3
cmp
jle
cmp
imul
lods
mov
add
fdivl
pop
mov
inc
and
adc
sbb
enter
and
and
lods
inc
enter
fildl
push
jmp
shlb
xchg
pushf
fs
and
js
ljmp
pop
mov
imul
jo
add
push
add
fldl
sub
or
fdivl
outsl
std
filds
mov
repnz
xor
pop
shrb
out
dec
adc
inc
or
mov
inc
dec
lods
in
stos
pop
sub
call
js
pop
mov
addr16
xchg
test
loopne
rolb
mov
push
insl
and
sbb
sbb
inc
pop
inc
movsl
xor
push
mov
cmp
adc
call
call
xlat
adc
test
pusha
mov
cmpsl
add
adc
pop
xor
out
flds
out
add
dec
jb
xor
icebp
push
popa
and
adc
in
xchg
aam
sbb
sarb
insl
cwtl
jmp
adc
inc
nop
pop
xchg
add
cmp
shlb
add
cwtl
mov
bound
lds
push
xchg
adc
mov
popa
mov
cmp
test
call
dec
pop
jo
loopne
dec
push
add
mull
xlat
push
mov
aad
lea
loopne
insb
ficoml
and
sbb
push
in
dec
loopne
test
in
cmp
mov
mov
dec
lds
sbb
ret
icebp
movsl
mov
les
ja
xlat
ss
sub
je
or
push
cmp
hlt
pop
int3
fs
ret
shr
cmc
ficomps
push
lods
aas
sub
sbb
xor
cld
sub
imul
je
cmpsl
test
xchg
or
mov
imul
dec
xlat
test
mov
fistpl
insb
push
cmp
and
inc
mov
sarl
sub
movb
inc
jmp
mov
inc
ret
pop
movsb
dec
jp
scas
add
inc
cld
push
adc
and
das
adc
insl
jge
inc
adc
sbb
inc
call
nop
add
movsl
add
mov
adc
stos
cltd
push
nop
pop
andl
sbb
xchg
fistpl
add
ss
sub
movsb
xchg
pop
jl
sbbb
or
adc
movsl
stc
lcall
or
insb
aaa
mov
pop
iret
add
nop
iret
loopne
cmc
and
dec
imul
rcrb
xchg
pop
add
push
push
inc
gs
sub
enter
xchg
or
sbb
sub
dec
and
pop
push
mov
mov
lea
sub
clc
sbb
int
fidivl
xlat
jb
jl
sar
cmp
pop
rcll
xor
ds
cwtl
cmc
cmp
andl
es
xchg
add
and
inc
xor
adc
sbb
add
inc
cmp
stos
adc
xchg
mov
popa
pop
mov
pop
push
lcall
mov
arpl
xchg
mov
xchg
jno
pushf
mov
and
push
lods
push
mov
enter
repz
adc
ret
add
or
in
stc
xchg
dec
dec
dec
xlat
test
cltd
inc
add
stc
or
dec
xchg
stc
in
add
adc
sub
inc
push
sbb
cmc
add
jmp
jb
pop
push
test
enter
cmp
push
mov
int3
lcall
push
leave
movsl
adc
nop
idivl
out
cmpsl
cmpsb
sbb
sti
cs
pop
push
loop
push
adc
daa
cli
mov
lret
pop
loop
push
sbbl
enter
clc
sbb
mov
test
rolb
mov
movsl
nop
mov
lods
jne
in
scas
orb
and
sub
mov
or
into
fisubl
or
aad
push
ret
test
push
push
lock
inc
repz
pop
push
in
and
enter
loopne
cmpsb
mov
xchg
mov
xor
mov
ficoms
movsl
sub
add
ds
and
js
movsl
dec
int3
lock
cmp
xor
xchg
and
sar
test
inc
mov
or
xchg
jo
inc
jp
xchg
inc
or
lock
adc
sub
jne
stos
adc
push
lds
cmpl
mov
or
aad
inc
jns
movsb
xchg
ret
dec
movsl
popa
cmp
pop
or
std
xor
sub
icebp
addb
push
hlt
gs
pop
inc
pusha
inc
or
or
push
fcmovb
pop
xchg
jnp
pop
hlt
mov
cltd
or
loopne
test
push
aas
shlb
push
rorb
inc
push
add
dec
push
addr16
add
cmp
inc
pause
imulb
hlt
pop
sub
xorl
arpl
sbb
sbb
adc
sub
or
insb
adc
rcrb
or
xchg
push
xchg
leave
xor
hlt
addl
xor
mov
adc
and
movb
cltd
adc
or
sub
fmuls
shrl
popa
xor
cmp
or
pop
or
jne
aaa
addb
or
insb
hlt
fsubrp
out
cld
les
mov
ljmp
loop,pt
pop
and
jno
cltd
imul
push
and
and
adc
out
fstps
pop
jp
inc
and
pushf
jl
jb
mov
jge
jns
inc
insl
push
add
jmp
test
push
add
nop
data16
test
and
bound
inc
cltd
pop
mov
scas
adc
dec
in
icebp
pop
push
insb
insb
adc
push
mov
pop
jmp
ret
cmp
or
imul
jge
ret
mov
sub
dec
pop
xchg
or
jl
or
xchg
jne
adc
and
jbe
jle
pop
mov
and
adc
and
add
movsl
loopne
cmpsb
fwait
dec
push
addl
add
ret
mov
leave
sub
add
jo
mov
push
add
roll
mov
cmpb
push
pop
out
adc
dec
xchg
out
mov
fsubrp
adc
mov
mov
loop
stos
adc
inc
push
sar
xor
pop
mov
jb
mov
stos
repnz
dec
adc
xor
jne
pop
outsl
add
fimull
in
cwtl
je
dec
stos
mov
push
xchg
jp
jle
ljmp
cmp
rorb
scas
sub
and
sbb
mov
fldenv
aam
mov
cmpsb
inc
inc
or
add
test
xor
and
insb
ficoml
jmp
and
add
lcall
mov
fiaddl
lahf
mov
dec
fimuls
and
push
and
push
imul
push
sbb
sahf
mov
sbb
adc
imul
mov
pusha
test
in
shlb
cmp
mov
mov
pop
xor
and
dec
jo
bnd
xor
sbb
xchg
or
jmp
addr16
lea
mov
pusha
nop
or
mov
push
sbb
mov
or
adc
add
or
imul
add
xor
test
inc
popa
mov
xlat
or
mov
mov
dec
add
mov
jge
sbb
xchg
sbb
sbb
data16
push
cmp
inc
mov
repnz
and
dec
add
iret
loopne
rclb
ds
mov
inc
and
mov
adc
scas
mov
push
mov
cmp
sbb
pop
cmpsb
add
test
adc
push
jp
push
addb
push
gs
xor
movsb
xor
loope
ds
and
xor
mov
add
push
in
or
sbb
sub
repz
outsl
push
je
pop
xor
call
mov
notb
or
movsb
add
and
push
mov
adc
mov
insb
movsb
mov
clc
add
mov
xlat
outsb
xor
xor
mov
dec
mov
and
into
nop
add
enter
xlat
cmp
or
jo
inc
mov
and
into
orl
and
rorl
dec
into
sbb
inc
pop
xchg
mov
mov
jae
sbb
jo
cli
and
cmpb
subl
sub
adc
fadds
mov
lea
cli
es
pop
mov
mov
loopne
mov
ror
and
enter
jg
je
push
push
out
sahf
and
jmp
push
push
repz
in
add
and
xor
pop
mov
subb
fmulp
fsubrs
adc
mov
dec
sbbl
pop
ljmp
hlt
je
outsb
jbe
mov
shlb
xor
pusha
or
and
pop
cmpl
in
push
add
jo
inc
xchg
pop
cmovae
add
fs
dec
fldl
pop
jbe
or
in
adc
stos
out
xchg
or
xor
test
push
fs
mov
jbe
inc
sub
mov
push
add
clc
jae
je
mov
fnstsw
jmp
cmpl
mov
in
add
sbb
cmp
jne
cltd
pusha
and
and
lock
and
mov
or
es
cmp
or
xor
and
sbb
pop
mov
cmp
xor
jns
fiadds
sbb
mov
or
andb
sbb
sbb
aam
pop
adc
and
mov
mov
mov
and
jae
push
fcmove
cmpl
add
jmp
and
push
repz
jge
rcl
cmp
or
inc
push
aam
sbb
inc
pop
mov
push
adc
adcb
push
push
jne
adc
jb
inc
pop
pop
mov
loopne
loop
and
dec
mov
pop
xor
hlt
or
sub
cmp
push
clc
gs
aaa
sbb
sar
sub
in
scas
icebp
push
jbe
and
mov
insb
in
or
hlt
dec
inc
lods
clc
rolb
xor
es
and
fldl
xchg
xchg
sysenter
and
sti
aam
xor
adc
mov
push
and
inc
sub
roll
jo
xor
xchg
pusha
mov
pushl
gs
sub
dec
jae
push
adc
cmp
sarl
aad
sbb
or
and
shlb
clc
inc
insb
les
insb
jo
flds
jo
cld
push
and
pop
inc
je
sbb
fs
pop
in
adc
dec
mov
adc
push
cmp
lea
ss
mov
sbb
adc
addr16
add
pop
sub
mov
push
xchg
nop
lret
mov
sbb
es
sub
jbe
lods
testl
xor
xchg
adc
cmp
cwtl
add
pop
sub
aam
stc
mov
jne
out
gs
jne
divb
imul
dec
leave
insb
cld
es
sbb
jo
stc
add
inc
dec
adc
jmp
iret
loopne
mov
lret
rcrl
inc
add
lea
jne
cmp
push
and
pushl
sbb
or
ficoms
pop
arpl
add
mov
push
add
out
lcall
jne
and
mov
iret
xor
shl
addl
add
orl
add
mov
enter
call
add
jae
mov
add
je
add
or
mov
scas
lret
mov
ret
in
mov
sbbb
adc
or
fldt
stos
xchg
sti
mov
mov
stc
push
sub
nop
or
jmp
inc
or
or
cmp
and
pop
add
or
inc
jne
pop
popa
mov
or
test
into
aam
adc
mov
sarb
push
add
hlt
pop
sub
aaa
xchg
sub
mov
inc
aaa
pusha
rclb
stos
call
fwait
movb
mov
xor
pop
pop
xchg
int3
mov
subb
popf
add
jo
adcb
sub
pop
push
rorl
sbbb
lods
lret
add
or
js
sbb
pusha
sbb
push
rcr
gs
cmp
pop
add
inc
ss
mov
stc
lods
jp
ror
add
bound
sarb
fisubl
ffree
add
sub
mov
pushf
jmp
mov
push
inc
lods
lret
into
pop
xor
xchg
rclb
mov
mov
subb
mov
add
add
mov
enter
mov
sbb
pushf
pop
add
imull
cmc
roll
fs
jnp
movb
jno
cmpsb
mov
add
sbb
imul
je
push
insl
mov
insb
sub
jle
or
mov
out
jbe
mov
push
lahf
push
dec
xor
mov
add
add
add
mov
pop
ficompl
pop
sbb
cmp
xor
push
imul
push
jo
aad
xchg
push
mov
iret
sub
push
clc
add
mov
inc
push
inc
add
movsl
orb
aaa
nop
or
or
push
xchg
dec
aam
adc
add
add
or
cmp
pop
inc
inc
cmp
aaa
sbb
mull
xorb
sbb
mov
and
je
leave
push
sbb
xor
push
mov
sub
insb
insb
pop
dec
je
mov
cmp
cld
bound
add
pop
aas
lock
add
pop
gs
rolb
inc
dec
xchg
sub
out
xor
outsb
sbb
sbb
cmp
pop
dec
mov
dec
jmp
mov
fbld
push
mov
je
cld
push
dec
sub
enter
aad
loope
or
or
je
loope
daa
adc
icebp
jne
push
cld
dec
sbb
mov
les
shll
cmp
xchg
sbb
repz
sub
xchg
add
cmp
nop
lcall
sbb
test
add
mov
movsl
fldl
cmpsl
inc
data16
xchg
les
les
pusha
fcompl
sbb
add
push
jnp
add
cld
cmp
and
int
lock
icebp
es
adc
sub
invd
fs
or
inc
adc
aam
xchg
pusha
cmp
or
push
in
stc
push
push
lcall
stos
mov
xchg
lea
push
mov
inc
lock
mov
lcall
sub
rolb
shlb
aas
fstp
js
xor
retw
jb
shrl
pop
leave
pop
das
loopne
mov
add
xor
inc
inc
and
jne
inc
add
and
mov
pop
and
js
lea
adc
ret
push
add
sub
pusha
pop
popa
lods
add
lcall
xchg
jge
cmpsl
int
hlt
ret
cmovnp
or
pop
lahf
jl
shr
mov
add
push
jne
pop
xor
imul
dec
je
mov
js
mov
add
movsl
and
popa
mov
and
testb
inc
pop
adc
cmc
and
push
mov
pop
ljmp
roll
mov
clc
mov
or
cmc
mov
push
add
add
aam
adc
outsb
xor
repnz
ljmp
adc
jbe
je
xor
or
jno
sbb
lock
out
pushf
fdivrp
insb
or
push
or
or
lods
push
add
rcrb
sub
in
insl
add
leave
bound
add
test
arpl
leavew
lret
cmpsb
sbb
sub
les
call
inc
push
jle
dec
pop
mov
in
jbe
pop
rorb
mov
add
sti
mov
lods
add
insl
aad
mov
xlat
ret
push
movsb
ret
data16
mov
test
xchg
aaa
push
or
push
js
sahf
out
add
call
das
or
or
lcall
int
and
sbb
sarb
loop
popf
cs
test
mov
outsl
jg
cld
cmp
pushl
mov
or
adc
push
nop
dec
cmpsb
lods
mov
pusha
inc
icebp
push
gs
add
xor
inc
stc
fldcw
inc
clc
movsb
push
and
jmp
xchg
mov
or
add
lock
cltd
sbb
lahf
xchg
popf
jle
in
mov
mov
pop
jmp
loopne
inc
pop
dec
aam
stos
subb
aaa
jle
por
add
and
enter
lds
and
aam
adc
or
pop
lret
aam
mov
cmp
les
nop
add
push
xor
mull
les
roll
xchg
adc
xchg
or
cmp
arpl
xchg
adc
mov
sbb
subl
ret
push
xchg
incb
rcrl
pop
add
in
test
push
or
or
pushf
shlb
sbb
out
nop
inc
cmp
test
dec
fs
xor
test
xchg
fs
add
iret
rcr
insl
jecxz
fsts
add
dec
xchg
in
add
or
inc
loope
push
js,pt
js
pushf
jae
xor
push
bound
and
xor
rorl
xlat
and
clc
xorb
icebp
cmp
and
adc
add
sub
out
add
sub
add
les
mov
xchg
pop
mov
movsb
add
lods
loope
lock
xor
dec
les
dec
pop
push
or
adc
mov
jmp
xor
test
shll
mov
sub
mov
or
icebp
fidivs
not
xchg
rorb
or
xchg
inc
sti
popf
lods
sbb
inc
cmp
jne
in
sbb
jo
jne
pop
push
loopne
and
daa
imul
cmp
insb
out
stc
push
xor
adc
mov
add
insb
aam
dec
sbb
xor
mov
mov
imul
mov
jge
je
loope
inc
mov
push
test
jmp
and
ljmp
add
push
jmp
push
insl
pop
ret
mov
push
sbbb
push
pop
jae
nop
mov
push
inc
cwtl
imul
and
pushf
mov
xchg
jne
lea
dec
sbb
lea
dec
lock
sub
inc
cmp
add
rolb
stc
or
cmp
rolb
cmp
jl
cwtl
add
loope
adc
cmpb
add
adc
fiaddl
jno
pop
jmp
lods
xchg
push
jmp
cmp
stos
rolb
inc
mov
add
orb
add
or
lea
addl
xor
adc
and
xor
jg
inc
lea
jmp
mov
out
mov
jae
inc
ja
mov
add
movl
push
xchg
adc
cmp
lcall
loopne
lcall
mov
pop
add
adc
inc
cmp
mov
xor
and
or
pop
mov
xchg
inc
dec
flds
loopne
in
or
xor
mov
xchg
or
mov
mov
aam
pop
cmp
dec
lods
mov
xchg
in
mov
pop
inc
mov
iret
sub
xor
inc
xchg
fsubl
add
mov
repnz
jmp
xchg
in
jb
mov
pop
in
pop
imul
inc
sbb
call
push
sbb
add
lahf
jmp
jg
jbe
test
xchg
jp
push
push
cmp
xchg
lret
adc
fdivrs
int3
add
je
xchg
sbb
mov
add
xchg
jne
xchg
mov
dec
in
roll
clc
cs
sub
pop
sbb
xchg
push
mov
add
movsl
mov
dec
push
adc
mov
pop
lcall
mov
inc
add
lea
fsubl
inc
mov
popa
cmp
mov
xchg
aam
dec
and
xlat
adc
xor
sbb
test
movsl
icebp
mov
mov
and
mov
in
loop
ja
mov
pop
jmp
mov
pop
cmpsb
dec
xor
lahf
xchg
sbb
push
add
repnz
call
push
pop
add
dec
sbb
loopne
xchg
imul
or
clc
add
dec
or
rolb
lahf
push
lea
rolb
movsl
mov
mov
rolb
jle
push
or
mov
pushf
mov
int3
push
lock
or
lea
push
out
cmpsl
icebp
lock
lea
cmp
sbb
sbb
loopne
fisttpl
nop
push
jp
cmpl
push
or
or
add
imul
dec
or
mov
xchg
cmp
mov
mov
dec
push
fiaddl
mov
push
push
shrb
inc
icebp
jmp
in
mov
mov
loope
cmp
add
loope
or
iret
or
jne
and
fists
mov
cmp
je
rorb
push
cmp
xchg
jge
adc
inc
or
in
jne
push
aas
mov
pop
mov
mov
adc
arpl
xchg
jp
ss
sbb
aam
xor
add
sbb
and
inc
cld
sub
dec
mov
sub
es
jp
or
das
and
sub
outsl
shll
loope
and
lahf
fs
mov
push
inc
mov
int
icebp
xchg
pop
movsb
mov
das
shll
mov
fisubs
lea
mov
out
or
add
push
pushf
add
cmp
ror
divl
rol
jecxz
xchg
adc
cmpb
pop
adc
cmpb
idiv
dec
xchg
cmp
adc
faddl
das
fdivr
pop
int
mov
ja
jnp
test
xor
and
push
fildl
pusha
rorl
push
mov
neg
add
divl
insb
pop
pusha
pop
xchg
call
pusha
push
dec
scas
jno
dec
add
push
or
adc
pop
sbb
daa
and
loopne
je
into
shr
ret
cwtl
nop
scas
leave
sbb
and
sub
xor
sub
and
rclb
lret
pop
dec
jo
mov
mov
inc
fs
add
pop
scas
adc
and
inc
add
clc
add
or
ss
xchg
shlb
pop
sub
cmp
xchg
arpl
xor
mov
pop
add
push
push
es
push
mov
cmpsb
xor
dec
or
sub
daa
jns
or
sub
jmp
or
pop
push
inc
je
in
fdivs
jns
dec
addl
sub
mov
inc
and
popa
addb
shrb
add
stos
cmp
dec
inc
cs
pop
stc
movsl
inc
jno
addr16
cltd
xlat
adc
push
lds
nop
inc
push
in
loopne
add
or
push
clc
stc
adc
lahf
je
test
add
adc
loopne
mov
jne
rol
mov
fcmove
jmp
cmp
mov
push
mov
add
inc
pop
jp
shlb
pusha
mov
mov
rcr
rcrb
xchg
fimull
sbb
gs
pop
jmp
push
sbb
and
addb
movl
scas
sbb
ljmp
xchg
and
xor
sbb
les
inc
sbb
mov
punpckhwd
popa
xchg
out
xchg
jle
pop
sahf
jge
jl
jmp
lret
push
sub
pusha
or
pop
and
push
rcll
add
js
xchg
xchg
sarb
popf
lods
xchg
int
sbb
loopne
adc
add
jmp
and
mov
cmp
jae
mov
popa
add
pop
push
or
repnz
out
and
movsb
push
cmp
pop
inc
add
cwtl
lea
push
jmp
repnz
test
aad
je
and
push
js
push
add
adc
and
mov
jne
outsb
mov
jae
mov
icebp
fdivrl
outsl
mov
and
jmp
push
and
out
shrl
xor
xor
ja
or
lock
cmp
aam
in
or
pop
inc
sub
add
and
cmp
sbb
lds
lret
cmp
push
dec
pop
jo
inc
in
xor
jb
call
add
jb
adc
push
insl
add
xchg
pop
aaa
pushl
cltd
imul
pop
add
fs
dec
mov
and
fistps
in
js
scas
sub
in
mov
push
add
dec
dec
jns
pop
dec
loope
cmc
into
addl
aam
jno
or
divb
jne
cmp
lahf
mov
jns
mov
push
cmp
add
xchg
scas
jp
or
pop
sub
in
xor
sbb
adc
xchg
js
jo
nop
not
mov
jg
pop
pop
adc
mov
lods
in
cmp
pusha
sbb
sub
and
nop
inc
push
adc
adc
push
sub
mov
lea
or
xchg
loope
inc
adc
imul
lcall
cmp
imul
push
push
inc
mov
pop
inc
pusha
sub
pop
int3
xor
mov
enter
mov
dec
mov
loope
xchg
mov
test
fsubl
add
add
or
movsb
fisttpll
and
sbb
movb
mov
or
nop
lock
inc
add
adc
xlat
sbb
or
je
aaa
icebp
adc
rcrl
stc
movsb
in
dec
mov
rorb
insl
pushf
add
cmp
lcall
and
es
push
pop
and
movsb
iret
xchg
pusha
add
lcall
rcl
push
jns
or
out
nop
stc
in
rclb
sub
inc
pop
nop
pusha
inc
inc
lret
dec
sbb
or
xchg
data16
sub
rcll
push
and
add
shlb
mov
xchg
adc
push
ret
add
out
or
orb
arpl
cmp
jmp
dec
dec
push
js
outsl
or
das
adc
mov
or
or
inc
pop
inc
pop
lods
cmp
push
cmpb
jne
movsb
sbb
add
and
test
mov
les
repnz
mov
xchg
call
ljmp
add
mov
or
adc
mov
pop
pop
mov
addb
repnz
sbb
inc
test
mov
add
sub
fstpl
add
add
jle
cmp
sbb
xor
mov
sub
push
in
sbb
sahf
subb
pop
cmc
dec
push
add
mov
add
adc
cwtl
pushf
stos
and
aam
inc
jo
jmp
or
in
adc
jmp
rcll
adc
dec
add
add
push
mov
xor
sub
loope
sahf
dec
sbb
orb
jnp
or
inc
insb
cwtl
rclb
push
jo
jge
scas
std
adcl
cmp
test
iret
push
pop
mov
sub
pop
mov
cmp
mov
jmp
fbstp
and
mov
or
jle
addr16
add
push
xorl
mov
push
das
or
int
out
dec
xor
or
lods
in
sbb
inc
lret
push
test
jp
out
outsl
or
or
jmp
sbb
pop
pushf
inc
dec
rcrl
dec
scas
test
test
outsb
add
push
dec
add
pop
dec
mov
mov
add
sahf
roll
scas
iret
mov
sbbl
push
push
inc
sub
or
rolb
imul
cmpsl
ret
sbb
adc
daa
dec
cmpb
xchg
cmp
jo
mov
xchg
ret
or
push
cmpl
adc
xor
pusha
daa
dec
mov
addb
sub
mov
jecxz
sbb
in
inc
mov
cwtl
adc
sub
or
pop
ljmp
in
xor
or
or
pop
inc
inc
out
adc
mov
movsb
fcoms
add
fistpll
rcrl
pop
test
push
jno
iret
pop
jae
das
pop
stos
loope
imul
sbb
shrb
xchg
loope
push
sub
sub
ficoms
push
inc
sub
popf
lods
call
lock
xchg
in
outsb
fcomp
lea
and
push
fsts
or
and
pop
sahf
or
mov
hlt
test
pop
arpl
cmp
clts
and
fstpl
inc
or
dec
adc
fldcw
xchg
sbb
xchg
pop
repnz
cmp
icebp
xor
and
jns
and
into
sbb
rorb
xchg
xlat
adc
dec
addb
out
adcl
repnz
push
cwtl
sbb
sub
inc
sbb
nop
jo
push
mov
xchg
sub
ds
mov
jnp
xchg
inc
popf
sbb
push
push
fsubrs
pop
mov
sbb
xor
sbb
sbbb
push
pop
roll
xchg
pop
inc
rorb
fwait
test
int3
js
jge
ds
sub
mov
push
jl
pop
push
inc
push
push
xor
js
iret
pusha
stos
movsb
aad
inc
dec
sbb
nop
and
lods
test
enter
and
xchg
and
orl
push
lds
adc
in
and
pusha
dec
jge
shlb
pop
rcl
mov
push
outsl
push
inc
jp
mov
scas
gs
lods
or
sub
mov
shrb
sbb
ret
cmp
cmp
xchg
sbb
in
mov
add
aaa
outsl
sbb
inc
cs
or
and
push
cwtl
jecxz
inc
subb
lahf
inc
rol
es
mov
mov
lods
mov
aad
or
add
jne
cmp
mov
pusha
cld
mov
incl
les
inc
jnp
es
or
mov
rcrl
faddl
loopne
xlat
adc
mov
les
int
inc
pop
mov
insb
cmp
pop
pop
adc
das
cmp
test
cmpsl
push
stc
mov
mov
pop
imul
or
sub
jno
cmp
inc
shrl
mov
enter
adc
xor
cmp
pop
dec
loope
add
adc
pop
adc
test
xor
xor
out
movsb
adc
xor
mov
iret
push
adc
mov
fbld
push
stos
mov
and
or
mov
int
mov
dec
aaa
jno
pop
or
mov
jp
rolb
pop
jecxz
xor
add
test
or
pop
dec
adc
add
add
inc
stos
add
popf
push
xor
std
or
adc
bound
inc
clc
mov
fsubs
movsb
roll
data16
and
cmp
push
outsl
push
add
lea
xchg
call
add
lret
sub
jg
jg
out
mov
mov
lahf
popa
in
jle
add
cmp
and
pop
sahf
jns
xor
shr
aam
mov
or
mov
mov
fcoml
adc
inc
or
shrl
jnp
sub
gs
imul
xor
xorb
leave
aaa
shrb
sbb
xchg
add
lock
dec
mov
cltd
pop
aaa
jecxz
xchg
cs
or
adc
dec
push
pop
or
add
add
bndldx
add
push
push
test
push
les
sub
imul
rcrb
insl
jmp
mov
jg
and
inc
push
cmp
filds
iret
xchg
sbb
jb
inc
xor
add
mov
je
or
mov
dec
and
push
xor
inc
enter
jnp
xor
push
xchg
imul
xor
inc
cmpsb
sbb
sub
xor
mov
ss
dec
pop
mov
cmp
roll
fisubs
sarb
testl
les
jb
jge
mov
or
or
call
inc
fisubs
pop
sub
cmp
xchg
inc
push
fadd
jno
ds
ret
lea
inc
xor
or
jmp
xor
sub
adc
lret
out
shlb
and
stos
out
sub
loopne
nop
sbbl
mov
sub
ret
add
std
cmp
add
mov
sbb
push
pop
jmp
jl
push
sbb
rcrb
sarb
cmp
mov
inc
jl
ja
fsubs
js
nop
push
push
roll
inc
xchg
adc
roll
inc
cmp
mov
dec
pop
shll
icebp
sub
repnz
push
iret
pop
sub
jg
orb
pop
pusha
stc
fwait
jb
fs
xchg
cmp
jl
les
inc
inc
insl
movsl
test
adc
outsl
popa
shlb
add
fidivl
rorl
push
push
inc
adc
push
arpl
add
sub
sbb
add
mov
lret
into
enter
sub
ljmp
xor
and
push
sar
scas
loope
mov
mov
xorl
xchg
dec
dec
lret
push
xor
movsl
sbb
adc
aaa
cmc
xchg
aam
adc
imul
das
gs
pop
add
rolb
lea
xchg
dec
or
and
pop
push
inc
sub
repz
out
sub
test
gs
call
jno
cmpsl
sub
xor
adcl
sbb
sbb
scas
push
loopne
adc
add
scas
xchg
pop
sbb
mov
push
sbb
je,pt
lods
dec
dec
cmp
les
add
dec
or
xchg
cltd
nop
dec
outsb
stc
xor
push
imul
mov
jae
xchg
or
aaa
test
jp
cmp
pop
and
int3
mov
aaa
daa
jne
subl
outsb
loopne
mov
push
dec
movsb
sub
jne
int3
sbb
or
xor
cmp
cltd
iret
pushf
in
push
decb
or
mov
sub
xchg
add
aad
adc
subb
add
in
loopne
push
cmp
push
jp
adcb
sub
ret
daa
dec
cmpb
cmp
sub
cmp
add
mov
pop
and
out
pop
pushl
mov
cmp
inc
mov
ljmp
mov
fmul
rorl
lahf
sub
inc
dec
sar
loop
es
mov
inc
and
adc
or
adc
sbb
push
and
add
adc
inc
and
dec
push
ss
xchg
in
int3
xchg
addb
xor
leave
outsl
xor
pusha
mov
or
push
andb
cmp
adc
mov
xchg
mov
rcll
outsb
mov
clc
adc
or
mov
leave
jmp
test
pop
dec
shlb
xlat
sti
mov
sar
mov
lcall
out
sbb
mov
add
subb
mov
mov
mov
andl
adcl
les
jo
add
movsl
je
fimuls
movb
sbb
or
jo
pop
sub
push
mov
push
das
filds
mov
inc
scas
dec
test
sar
shlb
inc
pop
or
xchg
push
pop
and
add
cmp
mov
jae
cmp
daa
and
adc
mov
sub
daa
stc
xor
loope
je
aas
add
pop
xchg
cmc
lcall
add
test
mov
pop
test
jmp
push
xchg
or
cmp
movsl
nop
mov
clc
fs
inc
movsl
lock
cwtl
dec
mov
jae
pushf
push
cmpl
add
or
push
push
jle
push
fcmove
or
loopne
and
mov
mov
aas
pop
inc
lea
add
insb
jae
test
jp
inc
testb
pop
inc
inc
loope
xlat
sub
imul
dec
mov
jae
andb
pushf
mov
xchg
add
push
pushf
xor
cwtl
aaa
rcll
adc
or
fs
push
pop
and
rolb
rcl
push
push
enter
cmp
mov
enter
or
sti
cmc
mov
je
sarb
mov
cmpsb
mov
sbb
nop
push
mov
sub
cwtl
adc
mov
sbb
mov
sbb
sbb
mov
lods
add
cmpb
stos
push
cmp
cmp
pusha
and
pop
pop
movsl
mov
push
inc
fwait
lahf
pushl
inc
dec
jae
lea
mov
call
push
and
or
fimull
push
or
adcb
push
mov
cmpl
mov
dec
and
adc
ret
dec
mov
push
bound
mov
jne
push
jge
push
and
lea
mov
mov
ja
stos
arpl
pusha
cmp
arpl
daa
js
cs
add
scas
jmp
clc
cli
push
or
cli
mov
xchg
shlb
xor
adc
les
cltd
inc
repz
push
pusha
xlat
scas
daa
outsl
jno
adc
jmp
movl
outsl
movsl
iret
mov
mov
in
and
push
push
adc
cwtl
add
loope
mov
pop
xchg
fldenv
shll
cmp
testb
scas
dec
cmp
outsl
cmpb
or
fcomi
jle
ljmp
orb
sub
xchg
sbb
sub
or
sub
cmp
add
adc
xchg
lock
call
cmp
aad
icebp
or
aad
add
xchg
int
push
jmp
movsb
dec
add
push
cwtl
je
incl
inc
fbstp
inc
es
push
or
adc
push
dec
inc
xchg
and
sti
daa
insl
dec
jns
xchg
xor
testb
loope
loope
mov
add
adc
or
in
dec
jg
push
pop
xor
sub
loopne
nop
nop
add
jbe
ror
out
xchg
add
enter
imul
push
icebp
xor
adc
mov
loopne
jae
roll
xchg
push
cmp
nop
fs
inc
inc
cmp
nop
inc
cmp
xor
nop
inc
push
xor
nop
inc
push
cmp
sbb
push
cmp
adc
dec
imul
insl
adc
add
sahf
inc
leave
movsb
inc
add
xor
push
mov
pop
shll
mov
out
or
fidivs
and
std
inc
push
jns
pop
int
mov
orb
add
clc
icebp
inc
dec
orb
adc
psrld
es
dec
lods
mov
les
pop
rol
cmp
ficoml
push
ret
jg
sarb
mov
daa
jmp
inc
mov
xor
pop
xchg
clc
xor
inc
mov
lea
mov
dec
mov
jmp
addr16
xchg
je
lea
and
sbb
shlb
and
enter
jne
and
fadds
mov
clc
pmulhuw
push
push
mov
and
lcall
mov
mov
scas
pop
sub
andb
fidivl
xchg
cmp
jno
and
sub
das
xchg
inc
call
imul
pushl
clc
xor
push
enter
insl
int3
or
mov
fs
cld
sbb
cwtl
push
push
sub
adcl
pop
pop
rcl
imul
shrb
xor
push
stos
adc
inc
enter
xchg
xchg
stos
and
sbb
fldcw
push
scas
sub
pusha
and
xchg
or
lahf
pusha
or
movzbl
jmp
and
repz
enter
jmp
mov
add
push
and
enter
out
inc
sbb
mov
sub
xor
inc
movsl
or
stc
jae
and
sbb
pop
jnp
pushf
add
or
inc
inc
ss
lock
popa
jo
or
or
mov
and
adc
push
sbb
cld
insl
cmp
or
pop
pop
sub
fsubr
xchg
mov
stos
lret
rolb
daa
and
sbb
xor
jge
inc
pop
ret
or
sar
sahf
xor
mov
jbe
pop
push
sbb
push
sub
lea
add
jne
fistl
sub
or
lret
call
cmpsl
mov
or
std
xchg
cli
lret
add
mov
mov
sahf
push
add
ds
adc
bound
mov
rcl
xchg
sub
add
add
mov
mov
xor
dec
push
je
dec
sbb
daa
push
push
dec
push
pop
cld
push
cs
inc
fadds
adc
clc
xchg
jmp
xor
nop
jle
pushf
rcrb
ret
or
xor
stc
mov
push
shlb
mov
inc
scas
dec
dec
add
xorl
outsl
sub
add
and
dec
xor
je
adc
and
inc
cmovne
mov
jecxz
or
fdivrs
inc
push
mov
inc
jecxz
inc
out
les
stos
mov
adcl
jecxz
in
push
jno
dec
push
sbb
fdivs
dec
outsl
jne
xchg
mov
add
inc
arpl
aad
adc
add
lods
adc
sbb
or
or
xchg
dec
or
les
fcmovb
in
cmp
push
push
push
shlb
or
lea
vprotw
add
loop
sub
xlat
cmp
add
and
mov
fisttpll
movsl
sbb
rcrl
lds
or
xchg
cmp
push
shlb
sub
mov
and
xchg
arpl
andl
xchg
add
sbb
pushf
pop
dec
and
jb
sub
xor
xchg
lret
leave
in
or
or
daa
xchg
cmp
inc
or
push
dec
push
pop
push
sub
mov
add
mov
sti
or
jae
cltd
pop
adc
xor
mov
cs
ljmp
enter
push
fs
aam
jp
inc
add
mov
mov
popl
insb
xchg
icebp
push
rcrl
xchg
out
sub
movl
or
cmpsb
iret
dec
rolb
fidivrl
push
sbb
xor
test
add
insl
imul
add
sub
mov
add
cmp
add
xor
leave
mov
inc
or
push
dec
add
iret
dec
inc
int3
sub
incl
and
jb
push
dec
das
icebp
inc
dec
cmpsb
out
sti
in
or
pop
adc
jbe
push
sub
push
ds
dec
mov
iret
mov
mov
cmp
jmp
pusha
test
inc
mov
stos
psubusb
shlb
adc
and
sbb
mov
fcomps
mov
cs
and
xchg
mov
push
arpl
or
stc
jge
or
mov
es
in
pop
push
xor
aaa
sbb
lods
and
arpl
fidivrl
pop
lock
fsubl
std
sbb
add
mov
dec
mov
adc
aad
ret
pop
test
sbb
test
adc
enter
xlat
xchg
and
iret
mov
jle
add
movsl
jae
pop
rolb
add
and
js
push
mov
mov
add
mov
aaa
lock
test
dec
mov
sub
rclb
add
push
sub
insb
jecxz
add
and
dec
pusha
leave
test
add
cmp
inc
add
fcomps
lea
das
adc
or
xor
or
add
dec
add
pop
loope
movsl
shll
or
push
sub
test
sub
inc
adc
or
adc
stc
lea
cmc
sub
mov
imul
sbb
filds
sbb
fs
scas
xor
ret
adc
mov
clc
cs
xchg
adc
mov
push
mov
cmp
push
mov
adc
shlb
xor
xor
mov
inc
ret
adc
pop
inc
das
or
loopne
in
int
add
push
or
aaa
insb
je
cmp
or
sbb
push
add
push
add
inc
push
mov
mov
daa
or
or
push
inc
mov
push
inc
clc
minps
adc
add
jmp
clc
adc
out
ret
mov
loope
mov
loopne
and
roll
lock
enter
inc
or
out
inc
adcl
push
mov
out
xor
inc
lcall
cmpsl
pop
dec
cwtl
lahf
xchg
jl
xchg
sbb
add
or
mov
add
lds
mov
pop
xor
jns
outsb
inc
cmpb
push
sbb
add
enter
pop
pusha
sub
psubb
loopne
xchg
add
ss
sarb
push
or
dec
mov
adc
dec
add
or
adc
inc
test
sbb
or
scas
add
pop
or
sbb
cmp
dec
pop
in
nop
sbb
fstp
inc
cmp
push
cmp
push
daa
xor
js
imul
push
pop
jno
fs
movsl
cmpb
sbb
xor
sbb
push
push
sbb
dec
jp
out
lret
ror
mov
sbbl
add
add
loopne
adc
adc
jo
add
xchg
adc
adc
inc
xor
add
sarb
addb
adc
sbb
inc
add
fldl
push
test
sbb
jno
push
push
xchg
add
outsl
sahf
mov
pusha
jle
cmp
push
pop
por
mov
dec
aam
xchg
icebp
or
out
ss
pop
adc
iret
aam
inc
inc
xchg
sbb
lcall
or
mov
rcl
mov
arpl
out
jnp
fisttpl
sbb
icebp
jb
push
mov
cmp
cmpsl
shl
inc
stos
push
add
jecxz
rcll
repnz
in
push
add
xchg
lret
cmp
inc
dec
mov
add
iret
pop
add
jne
dec
cmp
test
pop
fsubrs
leave
aad
daa
in
mov
xchg
cmp
pusha
jo
push
pop
test
push
adc
orl
rcrl
or
lods
cwtl
push
popf
cmc
sarb
push
mov
into
add
in
or
mov
xchg
shlb
jbe
test
in
mov
outsb
ljmp
movb
mov
dec
mov
ret
sbb
lds
cmp
dec
inc
clc
inc
dec
adc
clc
push
lret
or
decb
pop
add
daa
lods
and
mov
out
lea
repnz
xchg
pop
push
cmpsb
aam
or
shrl
mov
jbe
pop
push
xor
jb
or
pop
xlat
pop
push
adc
inc
fnsaves
stos
or
and
add
hlt
jg
inc
add
sub
rcrb
push
lret
addb
es
jo
add
pop
pop
mov
mov
cmp
adc
sub
add
or
pop
mov
jae
test
sbb
sbb
mov
cmp
pushl
lea
mov
enter
adc
mov
jl
mov
imul
cld
jae
in
mov
lea
mov
cmp
jne
pop
lock
aaa
sub
add
popf
lret
mov
adc
jbe
mov
inc
or
jmp
jno
jg
shll
push
fiadds
add
jle
int3
mov
lea
mov
mov
sbb
cmp
cltd
and
cmp
mov
push
negb
sub
mov
cwtl
lea
cld
rcrl
dec
push
or
xchg
dec
sub
or
cld
sub
lods
sbb
dec
pop
add
push
mov
push
iret
mov
clc
pop
mov
mov
jns
js
ret
pop
or
add
and
je
fwait
cmpb
call
push
pop
pop
insb
gs
dec
inc
push
and
and
mov
jne
fmuls
jmp
sbbb
adc
push
lods
cld
inc
test
and
leave
mov
insb
nopl
loop
mov
inc
data16
aaa
sar
sbb
push
ss
sbb
sub
push
popaw
rcl
pusha
pop
ljmp
shrl
and
sahf
in
jo
push
mov
int
or
and
add
sbb
pop
ror
hlt
aad
sub
add
fsts
leave
adc
stos
test
add
xchg
je
pop
push
push
push
out
push
mov
cmp
mov
add
or
pushf
imul
pop
test
fs
inc
mov
int3
bound
xchg
js
mov
in
enter
and
repnz
lds
push
inc
jo
sbb
dec
je
cmp
sub
dec
inc
pop
mov
push
bound
cmp
or
mov
and
and
outsl
cs
sub
jmp
mov
and
fdivl
shrb
outsb
lods
add
lods
stos
mov
add
jbe
pop
jl
inc
or
in
sbb
pop
movw
sti
testl
lret
mov
es
in
dec
cld
mov
cltd
mov
pop
pop
bound
iret
push
inc
mov
jne
dec
enter
and
hlt
adc
add
mov
and
xchg
dec
xchg
xchg
fmuls
addr16
gs
pop
add
rcll
scas
inc
adcb
in
jno
mov
mov
fdivrp
ret
push
pop
mov
xor
jmp
bound
fcoml
iret
adc
imul
xchg
pop
cs
jne
es
dec
pop
lods
xchg
or
push
ss
mov
loope
inc
cmpsb
sysexit
pop
scas
xor
xchg
mov
inc
mov
and
iret
and
or
aam
cs
jp
xchg
jno
leave
mov
ret
xor
movsb
mov
add
sbb
lds
add
pop
mov
jle
fisubrs
jo
push
sarb
add
out
test
and
and
cmp
add
test
adc
dec
xor
xorl
sbbl
retw
sbb
cltd
xchg
loopne
adc
ss
data16
loope
aas
push
dec
clc
test
xchg
loop
rorb
pop
shr
sub
lods
pop
dec
cmp
test
or
mov
adc
les
and
lret
jno
lds
xor
xchg
mov
sub
arpl
dec
dec
or
inc
shl
and
xchg
je
add
xor
add
and
loopne
add
aaa
push
fistl
xor
push
sbb
cmpsl
addr16
push
pushf
lods
int3
adc
inc
fdivs
out
dec
add
mov
sbb
cs
xchg
sub
push
sbb
mov
movsl
mov
add
xorb
push
rorb
inc
push
add
fsubp
add
int3
sub
pusha
test
sub
into
adc
xor
push
dec
or
js
sub
into
sbb
add
add
or
je
mov
push
inc
fsts
cmp
sbb
test
push
mov
and
shl
nop
xchg
test
jmp
jns
jp
hlt
lods
mov
ret
push
aaa
cmpsl
or
sbb
clc
rclb
xchg
cmpsl
cwtl
lea
add
leave
xchg
call
sbb
sbb
ds
dec
test
add
pop
and
fsubrs
and
test
dec
sarl
add
mov
and
lret
sbb
ret
mov
or
rcrl
xchg
push
sbb
push
sbb
or
sub
aad
cmp
fisttpll
mov
scas
repz
jl
shrb
scas
push
sbb
push
sbb
pop
cli
mov
xlat
sti
and
rcrb
sbb
daa
add
add
inc
and
jno
arpl
add
push
push
or
or
in
jp
jns
mov
mov
fs
and
mov
cltd
cmc
inc
int
mov
movsl
cmpsl
fildll
int
je
cmp
mov
xor
insl
ret
sbb
xchg
jbe
subb
push
mov
sbb
or
dec
int
inc
jg
lods
orb
sbb
scas
xchg
sbb
fs
sbb
icebp
mov
sbb
or
sbb
mov
jg
je
jle
fidivrs
or
lea
jg
mov
lods
adcb
je
jle
xor
or
rcrb
aad
je
pop
lds
nop
sbb
mov
pop
sub
insb
xor
inc
nop
js
mov
out
nop
adc
popa
movsb
sub
mov
and
mov
add
scas
lock
mov
jne
dec
pop
mov
inc
lea
adc
js
jae
sub
add
pop
mov
add
rcll
mov
or
mov
pop
aad
insl
add
in
push
mov
sbb
in
and
data16
adcb
sbbb
adc
subb
push
xor
out
incb
jo
cmp
lret
push
xorb
cltd
adc
xor
addr16
or
iret
mov
fs
mov
cmpsb
sbb
push
sbb
sbb
fcomp
mov
fcomps
push
or
adc
push
add
test
add
xchg
or
mov
dec
push
mov
push
mov
jge
sahf
popf
adc
and
addr16
push
sbbb
mov
sub
jnp
stos
jecxz
sub
pop
ffree
sub
rolb
jne
add
enter
or
inc
out
aam
sub
in
jle
sbb
xor
xor
or
popf
filds
adc
icebp
or
pop
dec
aaa
enter
adc
cli
and
dec
jg
or
mov
and
or
je
push
mov
orl
add
js
hlt
rolb
sbb
leave
fdecstp
dec
lds
mov
sbb
loopne
mov
test
outsl
jmp
testl
lahf
daa
mov
and
sub
mov
dec
imul
cwtl
dec
test
jns
add
or
std
fisttpl
sub
jbe
sbb
add
nop
push
sti
addr16
out
icebp
mov
inc
rol
pop
punpcklwd
pop
es
movsb
xor
xchg
sahf
mov
rclb
pop
mov
pop
stos
out
push
add
mov
xchg
and
addr16
or
and
and
pop
ja
sub
pop
pusha
add
nop
rorb
sbb
mov
aam
add
dec
or
faddl
push
ret
sbb
or
sbb
je
jge
in
inc
and
lret
adc
add
inc
aaa
cmpsb
add
or
xlat
xor
punpcklbw
xchg
sarb
xor
imul
insb
cltd
push
sbb
pop
xchg
push
call
pop
add
sbb
aad
sahf
sub
cmp
les
loope
inc
jnp
mov
cmp
jecxz
movsb
and
xor
cmp
sub
scas
add
fisubl
add
mov
inc
push
xchg
push
rcll
mov
mov
movsb
cmp
xor
adc
mov
lock
nop
rorb
js
sub
xchg
mov
xor
lods
push
and
mov
mov
or
fisubs
stos
or
arpl
sub
mov
cmp
xor
push
test
mov
push
adc
xor
jp
iret
xchg
or
jmp
and
jb
and
dec
push
sub
push
pop
and
sub
inc
pop
pop
xor
or
mov
jb
in
mov
fisubs
icebp
jp
cs
push
mov
sbb
rcr
mov
and
lret
ret
mov
add
xchg
jmp
insb
mov
sub
add
pop
adc
xchg
jb
or
jmp
jl
outsb
xor
inc
sti
call
dec
dec
push
inc
jl
jmp
pop
sub
mov
sti
jge
cmp
mov
or
imul
sub
adc
push
in
mov
inc
push
shlb
cmp
pusha
cmp
pop
out
add
ss
inc
cwtl
jmp
int3
ja
pop
test
and
in
adcl
or
add
shr
repnz
xchg
cmp
mov
dec
jb
jae
inc
xor
dec
test
and
ss
in
mov
and
sub
jb
mov
fnstenv
or
pop
dec
fstpl
aas
or
and
jae
mov
mov
sahf
lods
pop
mov
cmpsl
mov
mov
or
mov
int3
adc
sbb
xchg
int
adc
hlt
fmull
loopne
adc
jb
call
mov
cmpb
bound
fsubrs
xchg
test
push
add
adc
push
test
xor
test
add
fucomi
add
mov
scas
adcb
xchg
insb
es
xchg
cmp
mov
add
mov
mov
mov
xchg
pusha
ss
jmp
mov
pop
sub
and
inc
out
push
loop
aaa
je
xor
jne
jns
in
dec
mov
test
pop
fwait
xchg
es
cmp
enter
xor
pop
loope
fwait
inc
push
aam
insb
or
stc
or
shlb
push
push
xor
push
lcall
adc
aam
pop
push
push
and
xor
fcmovb
movsb
and
fimuls
fmull
mov
push
aaa
scas
sbb
or
fdivrs
and
sbb
jge
and
adc
das
call
repnz
cwtl
loopne
jne
mov
xlat
sub
add
adc
cmc
lods
push
mov
pop
fmuls
int3
push
fnop
add
mov
inc
xorb
add
adc
mov
or
rolb
outsl
mov
cltd
jb
mov
enter
dec
repnz
push
mov
push
sbb
movsl
or
shlb
or
mov
add
scas
adc
or
adc
adc
mov
jmp
cltd
fs
cmpb
xchg
aam
testl
add
or
je
push
gs
add
push
cmpsl
adc
and
mov
cli
mov
cwtl
fcmove
push
testb
aam
shld
pop
pop
mov
xor
and
sbb
sbb
add
cmp
je
incl
jo
jns
sub
sbb
mov
xor
lds
sbb
or
adc
xchg
inc
or
aaa
xor
mov
mov
add
rclb
adc
data16
jne
lea
fdivl
aas
jecxz,pt
sbb
jns
lock
or
pop
jo
rolb
mov
sub
shlb
jno
push
loope
in
jle
flds
in
jge
lods
enter
imul
test
fcmovnbe
outsb
sbb
mov
add
xor
into
adc
add
cmp
cmpb
add
add
cwtl
push
mov
aas
cmp
jae
dec
add
push
push
sub
mov
insl
sar
mov
fcoml
xor
sbb
pop
add
mov
cmp
xor
and
dec
add
cmp
adc
jns
ljmp
mov
sbb
dec
and
jae
mov
nop
nop
pop
inc
divl
pushl
ljmp
pop
aas
mov
cld
movb
and
pop
or
xlat
jno
shlb
ficoms
jno
or
jecxz
pop
mov
mov
out
cmp
popa
in
mov
sbb
pop
je
mov
nop
or
push
jno
rol
adc
in
in
roll
mov
jmp
push
xchg
pop
fmulp
mov
adc
sbb
xor
sub
sysexit
in
fnstsw
aad
mov
push
sahf
push
sub
push
adc
imul
ds
cmp
rol
int
pop
or
xchg
and
or
mov
jecxz
add
pop
cltd
sbb
pop
orb
cmpsl
pushl
cld
add
pusha
repnz
shlb
mov
filds
or
push
cmpsl
pop
insw
fdivl
and
bound
or
lods
lods
xor
aaa
adc
dec
adc
push
ret
push
dec
idivl
sbb
or
inc
ret
pushf
mov
andb
loopne
xor
and
cmp
or
in
add
sub
dec
imul
cmp
add
and
xchg
es
and
cmc
gs
cs
sub
xor
adc
inc
xor
push
or
popa
add
push
jns
jne
test
or
mov
nop
xchg
sub
and
adc
push
rcrl
pop
rcll
xor
std
push
lret
sbb
popa
pop
fld
xchg
sub
or
mov
push
loop
fwait
jecxz
fiaddl
jmp
rolb
xorl
pop
adc
enter
cmp
ret
sbb
inc
ja
xor
mov
jnp
ja
mov
shrb
add
jp
mov
call
test
es
call
movsb
and
sbb
mov
push
lods
adc
mov
in
jl
pushf
out
insl
push
push
jo
add
sbb
dec
xor
movsb
mov
shrb
inc
sub
stos
jmp
or
mov
adc
js
ss
or
loopne
push
add
jnp
cmp
hlt
roll
xor
call
lea
or
or
js
mov
pop
sbb
sub
add
xchg
mov
ret
out
mov
lcall
xchg
cmp
loope,pn
inc
push
inc
les
rorb
sldt
mov
add
adc
xor
ret
dec
jmp
xchg
aad
xor
rol
push
sbb
mov
xlat
and
lds
leave
push
adcl
jl
call
or
sbb
push
xor
mov
sbb
sbb
sub
add
add
sub
mov
notl
mov
and
or
mull
and
and
or
or
add
jae
mov
jb
sti
or
mov
pusha
and
pusha
jno
sub
xchg
mov
daa
ret
add
sbb
orb
dec
sub
rclb
loope
xor
inc
stos
int
stos
fmull
insb
cld
mov
add
adc
add
imul
push
sbb
pop
and
mov
in
aaa
or
xor
jecxz
cmc
mov
and
jle
push
pop
pop
or
je
inc
and
das
ss
ja
jge
push
pushl
or
lock
dec
nop
and
pop
and
dec
rcrb
sbb
fwait
out
or
cmp
push
and
mov
add
push
cmp
cmp
cld
addl
adcl
sbb
mov
jne
int3
subl
addr16
fs
imul
pop
sub
pop
xchg
fldl
push
inc
sub
into
shlb
sbb
test
faddl
sbb
jb
fistps
add
mov
loope
mov
cmc
xorb
or
add
cmpsl
pop
popl
xchg
sub
nop
fdiv
or
sub
popa
js
mov
mov
and
xchg
gs
push
into
out
mov
cmp
data16
or
sahf
sub
ret
js
je
test
imul
sub
fsubrs
icebp
nop
jle
cltd
sbb
stc
cmc
jl
pop
xchg
and
and
mov
adc
jmp
jge
mov
mov
insb
loop
aaa
mov
andl
je
sbb
sbb
sbb
cwtl
jo
dec
in
sub
adc
fimuls
outsl
mov
lds
aam
sub
jl
mov
mov
xor
push
stc
clc
dec
movl
pop
cmp
cs
cmp
jb
and
pusha
hlt
imul
cwtl
lock
stos
mov
ror
cmp
fistpll
xor
or
sbb
repz
mov
xor
add
fnstsw
xorb
or
push
lcall
movsb
jmp
add
add
sbb
inc
cltd
pop
xor
mov
sbbw
clc
cwtl
fistl
xchg
icebp
pop
enter
into
jp
arpl
adc
mov
push
vpmacsdql
xchg
pusha
and
mov
lods
sbb
add
push
pop
and
cmp
mov
dec
push
dec
fdivrs
jo
xor
inc
and
inc
push
aaa
pop
jecxz
ljmp
das
enter
dec
dec
out
aas
daa
and
dec
sub
mov
dec
xor
cs
and
inc
les
dec
sub
and
mov
in
inc
or
cltd
ret
lods
bound
out
fmul
loopne
cmp
cmp
movsl
in
in
add
int
add
and
ficoml
cwtl
mov
push
add
mov
pop
xchg
add
and
out
pop
mov
ds
movb
jge
adc
push
and
pop
shlb
lret
add
or
or
sbb
inc
push
sbb
stos
aam
add
or
push
jo
pop
push
mov
adcb
popa
cmp
out
push
push
pop
pop
or
shll
lret
or
inc
clc
fildl
mov
mov
dec
adcl
sub
hlt
loop
test
sub
aas
push
or
mov
ret
pop
mov
push
add
push
mov
add
imul
movsb
adc
push
push
in
or
adc
pop
adc
mov
mov
je
cmpsb
xchg
cltd
out
ds
movsb
jle
js
les
lods
dec
mov
test
mov
comiss
mov
js
jo
out
xchg
pusha
push
popa
sub
add
int
xor
push
fisttpll
add
js
rol
and
ficoml
xor
gs
sbb
popl
inc
and
lock
xchg
shl
dec
inc
jp
sbb
push
or
lods
xchg
pop
shlb
mov
dec
int
ret
sahf
das
xchg
int3
ljmp
inc
sbb
sub
out
inc
jle
das
add
adc
push
stos
cld
js
dec
pop
inc
xor
sbb
je
xorl
movsl
or
inc
sbb
adc
enter
or
push
add
xor
xor
aaa
push
mov
shrb
adc
xchg
inc
cmpb
cmp
mov
fistl
and
inc
jmp
cs
jns
xor
lret
les
adc
xor
adc
adc
push
leave
and
enter
adc
or
loop
or
xor
in
mov
in
dec
mov
outsb
sub
rcrl
mov
cmp
xchg
andb
fmull
je
sub
fistl
mov
fsubs
mov
frstor
movsl
ret
pusha
push
test
add
outsb
test
adc
clc
je
nop
sbb
mov
add
adc
in
add
push
orb
dec
sbb
inc
daa
lock
pop
hlt
sti
push
jg
scas
sbb
dec
fs
or
xchg
arpl
push
sbb
mov
into
outsl
fwait
insl
mov
xor
xchg
sahf
das
pushf
sbb
aas
dec
lea
mov
imul
les
ds
xchg
sub
cmp
jne
sti
or
jmp
dec
jge
jmp
mov
outsb
push
cmpsl
mov
jbe
push
or
push
and
push
fsubl
fdivl
mov
fdivrp
mov
icebp
out
orl
mov
cltd
movsb
pusha
and
xor
pop
sahf
ret
push
add
out
dec
push
add
pushw
fildl
into
clc
fidivl
jmp
push
cmp
addl
cli
xor
sub
and
mull
push
pop
movb
icebp
mov
pop
add
mov
test
and
mov
jge
inc
cmp
fstpl
xchg
xorb
mov
push
or
pop
cmpsb
dec
xor
lret
or
xchg
les
lea
sub
rcll
push
push
push
push
lea
jno
loope
cmp
inc
or
and
imul
jle
inc
inc
repnz
adc
into
outsb
sbb
scas
dec
or
mov
push
adc
sub
and
scas
dec
shll
clc
dec
lock
add
int
cmp
pop
xor
sti
je
inc
cmp
add
inc
cmp
leave
rolb
cmp
adc
inc
popa
or
mov
test
adc
mov
pop
adc
pop
pop
push
or
jg
dec
addl
xchg
push
daa
lods
mov
adc
les
xor
filds
dec
sub
call
dec
dec
adc
or
inc
or
add
push
fnsave
dec
rcrb
je
sub
pop
out
inc
mov
xchg
push
das
or
sub
int
pop
cmp
xchg
mov
or
inc
and
mov
notb
lea
enter
push
add
nop
lret
orb
add
cltd
push
cmp
push
jl
nop
lret
push
or
pop
call
mov
and
inc
lgdtl
inc
cmp
inc
jmp
dec
repnz
pop
push
pop
pop
pop
mov
dec
mov
dec
andl
fiaddl
inc
add
sbbl
outsl
adc
add
shrb
sbb
add
push
pop
or
jp
or
pop
shrb
sbb
pop
or
push
add
sbb
mov
nop
mov
daa
in
ds
jmp
xchg
jo
int3
xor
mov
bound
fisttps
adcl
cmp
test
mov
in
mov
orl
jge
imul
xchg
sbb
jle
lods
and
push
add
add
mov
je
xor
cltd
inc
test
mov
cld
enter
out
lret
add
stos
and
cmpsl
jge
fmuls
lods
out
push
jg
mov
adc
pop
adc
fs
push
lock
lret
test
or
xchg
push
fs
les
jl
movsb
mov
push
shll
push
and
fldcw
sar
xchg
dec
adc
sbb
test
imul
lock
dec
mov
add
adc
mov
rcrb
xor
push
jmp
call
cmp
fldenv
mov
test
inc
mov
add
test
mov
and
in
jg
call
std
orb
and
cmp
aaa
adc
lock
inc
ret
rcl
arpl
add
das
sbb
les
ret
sub
xor
leave
mov
xor
movsl
mov
sbb
aam
pop
jbe
mov
jo
js
or
pop
cli
aaa
test
popa
daa
mov
lahf
in
xor
lea
mov
mov
inc
dec
aam
xchg
dec
fmul
dec
sub
adc
xor
sub
cmp
nop
and
js
and
adc
or
pop
mov
cmpsl
sbb
enter
test
test
sbb
jb
push
pop
sub
testb
addb
lock
std
push
adc
xchg
cmpsb
out
les
clc
clc
fstps
rorl
fdivl
dec
push
mov
cmpsl
fnstsw
js
jle
push
xchg
out
push
jb
xor
add
or
pop
mov
scas
mov
les
inc
jmp
add
mov
mov
aaa
fmul
sub
testl
cmp
inc
adc
xchg
pusha
leave
mov
repz
out
adc
and
es
push
mov
xchg
sahf
sbb
mov
and
mov
out
and
out
and
rcll
dec
ds
mov
jo
add
jg
and
orb
loopne,pn
add
add
hlt
nop
sahf
cmp
int3
pop
lock
es
sbb
push
add
int
incb
xor
push
mov
fldenv
mov
adc
dec
ret
rorb
jg
dec
dec
or
jns
nop
in
mov
jmp
mov
andb
loope
mov
ret
cmp
pop
loop
enter
and
addb
dec
ret
imul
xor
pusha
popf
push
sbb
adcb
push
adc
cltd
adc
add
inc
ljmp
sbb
aaa
inc
pop
test
repnz
jb
push
inc
jo
or
out
aaa
cs
sub
push
push
cmp
cmp
inc
data16
pop
cmp
shlb
decl
and
js
shlb
sbb
and
cmpb
push
aam
clc
or
leave
nop
nop
mov
dec
cmp
in
sbb
xchg
dec
add
dec
adc
push
xlat
cmp
nop
stos
push
negl
sbb
add
rcrl
ret
lock
add
xor
in
add
dec
mov
sub
dec
outsb
in
xchg
jp
mov
mov
test
jp
add
pushw
and
sub
outsl
xchg
mov
push
pusha
lea
mov
add
in
movsb
fwait
sub
lahf
imul
movb
push
push
xlat
sbb
movsb
testl
lahf
cmp
clc
push
dec
mov
mov
cmpb
mov
pop
push
jnp,pn
out
xchg
dec
cmp
je
mov
xchg
and
aam
les
scas
test
stc
lahf
jne
and
add
or
push
cwtl
push
adc
inc
sbb
push
sbb
jnp
add
mov
xchg
mov
loope
lret
xchg
in
iret
mov
add
pop
adc
and
jg
mov
push
push
jae
jae
sahf
cwtl
push
jne
mov
mov
inc
loopne
inc
andl
adc
jae
dec
cli
adc
or
cld
ret
push
ds
clc
ret
shlb
cmp
push
mov
into
add
mov
pusha
nop
in
int3
inc
xchg
cmp
jne
add
loop
movb
or
lods
adc
pop
vmovsd
sbb
adc
ret
dec
test
xchg
pop
ds
and
adcb
sub
mov
movsb
in
ret
fwait
shlb
sbb
sbb
push
aam
pop
insl
xchg
mov
into
or
arpl
mull
push
dec
mov
pop
mov
mov
sbb
and
stos
mov
add
push
mov
pop
stos
sub
adc
cmc
jle
push
push
adcb
fs
xor
push
les
aad
sbb
nop
mov
mov
pop
mov
mov
add
scas
xchg
add
sti
int
or
mov
daa
cmp
pop
loopne
sub
mov
leave
xchg
push
and
test
jae
push
loopne
jg
mov
cld
inc
repnz
add
les
stos
rorb
shr
xchg
jns
mov
imul
fnstenv
sub
add
push
loop
cmp
push
mov
or
add
aam
add
add
lret
daa
fidivrl
sbb
push
mov
call
sub
mov
sarb
idiv
fucomi
jp
cmp
je
cmp
arpl
shlb
leave
adc
adc
cmp
jmp
mov
sbbb
sbb
or
jnp
fldpi
sbb
je
gs
data16
adc
pop
ds
popa
mov
jnp
jns
iret
in
data16
sub
jo
mov
cli
jge
push
mov
aaa
sub
outsl
add
out
add
aad
adc
arpl
les
push
daa
je
cwtl
fldl
jo
pop
je
or
leave
mov
xchg
inc
pop
and
leave
les
sbb
xchg
stos
push
movsb
lods
add
dec
icebp
adc
addl
orl
xchg
test
cmp
sub
push
jg
je
cmpl
adc
push
je
nop
fdivrs
adc
sbb
jg
push
and
jle
mov
es
mov
pop
cltd
inc
fildl
fsts
and
mov
mov
push
int3
adc
imul
insl
xor
mov
inc
pop
push
push
cmp
nop
jns
jmp
aaa
xchg
mov
lret
cmpb
fs
mov
pusha
outsb
and
dec
outsl
mov
and
mov
or
push
mov
icebp
mov
inc
dec
mov
inc
mov
movsl
push
cmp
sbbb
imul
xchg
push
mov
adc
sbb
push
cmp
lret
rorl
mov
push
cld
inc
adc
inc
adc
dec
sbb
jl
into
je
lahf
push
lods
push
jbe
repnz
mov
iret
xor
rorb
jmp
adc
adc
clc
pop
add
dec
icebp
mov
xchg
jge
xlat
adc
pop
push
jmp
cmp
jmp
cs
arpl
mov
mov
sub
adc
in
jge
adc
dec
int
xor
inc
jecxz
jmp
filds
sbb
mov
scas
jne
jecxz
push
jle
data16
adc
adc
cmpps
popa
pop
adc
popa
pop
add
cltd
fld
fisubrl
adc
sbb
and
xchg
ret
ret
sub
sbb
insb
or
lods
int
inc
inc
push
jns
or
add
mov
mov
xchg
mov
push
aas
cmc
sub
movsl
shrb
lret
outsl
sub
scas
cmp
dec
pop
jns
pop
pop
insb
and
shlb
add
cmpsl
ds
cmp
movsb
data16
cld
cs
adc
mov
inc
stos
mov
in
adc
inc
arpl
test
pop
and
ret
scas
adc
pop
push
sahf
es
add
jb
xor
outsl
push
icebp
pushf
lock
cmp
leave
pop
mov
push
xor
sub
ret
insb
lret
adc
loopne
cmpsb
in
xor
mov
ljmp
mov
jne
cli
cmpsl
insb
fstp
pop
into
sbb
inc
dec
xor
rorb
mov
cmpsb
testb
fcmovnbe
fisttpl
nop
sub
or
in
ret
rcrb
or
jo
pop
pop
cli
sahf
xor
push
or
add
mov
lea
pop
mov
test
popa
or
ret
leave
je
mov
jp
nop
aaa
and
test
push
pop
inc
popa
mov
adc
int
fisubrs
jns
jle
test
cmp
ror
push
cmp
and
ret
or
mov
jmp
mov
adc
loopne
ret
jns
sbb
push
ds
push
mov
dec
js
push
outsb
imul
aas
mov
inc
loopne
add
cmpsl
lds
xor
cwtl
mov
add
xor
pop
add
push
adc
push
inc
data16
xor
pusha
push
call
push
mov
dec
jbe
ret
aas
or
add
and
inc
cmc
ret
negl
data16
push
jmp
dec
out
or
lea
mov
mov
orb
push
xor
out
jecxz
fs
jg
add
subl
add
repnz
xor
cmp
xor
mov
xor
sbbb
cli
sub
inc
cmp
ret
js
jne
or
sub
fnsave
arpl
sbb
icebp
daa
add
and
insb
loop
mov
nop
add
fwait
add
out
ja
add
push
add
stc
je
push
into
cmp
test
xchg
cmpsl
aam
sub
and
xchg
das
stos
push
ret
mov
or
sub
push
mov
sub
jecxz
testl
xchg
xchg
pop
aas
add
xchg
addb
fwait
cmp
jp
stos
pop
mov
adc
adc
je
mov
pusha
add
adc
sahf
out
pop
outsl
dec
stos
mov
pop
add
inc
xor
arpl
and
mov
fadd
notb
popf
or
mov
mov
mov
out
jge
xor
inc
fsubl
sbb
mov
pop
push
dec
ss
or
push
sub
xor
xor
imul
add
repz
add
rcll
addr16
mov
orl
fsts
sti
int3
pop
xor
pop
and
xorl
gs
xor
jmp
cmpsl
cmp
xor
sbbl
jge
mov
nop
mov
insb
cmpsl
push
aaa
add
aaa
and
push
xchg
insb
add
or
adc
mov
pop
leave
sbb
xchg
daa
adc
xor
aad
mov
imul
jb
addl
aaa
and
pop
dec
mov
mov
or
leave
fcomps
ret
pop
xchg
mov
int3
add
sbb
push
adc
jle
fs
inc
inc
stos
movsb
or
inc
outsb
jge
jae
and
pop
mov
add
cmp
mov
pop
stc
pop
addb
push
or
xchg
mov
xchg
add
les
aam
pusha
mov
or
jbe
data16
clc
mov
or
or
mov
mov
mov
pop
int
add
mov
adc
sub
push
ss
ja
lret
aas
or
roll
adc
push
pushf
adc
notl
jne
push
outsl
je
aad
je
mov
mov
ja
push
xchg
mov
mov
cmc
sbb
mov
adc
sbbl
or
jle
ja
jmp
ficomps
mov
mov
sbb
jg
xchg
sbb
push
jne
mov
mov
sbb
adc
inc
adc
mov
push
pop
adc
stos
add
dec
xor
imul
xor
inc
imul
push
cwtl
pop
aas
mov
jnp
je
adc
outsl
aaa
pop
and
pop
xchg
fcom
popa
faddp
xchg
insb
ss
sbb
xor
sbb
imul
sub
sub
fnstcw
inc
push
call
pop
xchg
sub
mull
pop
xor
mov
push
cmp
pop
pop
sbb
adc
mov
add
imul
push
cmp
pop
and
dec
pop
push
outsb
arpl
aaa
jne
add
and
call
jg
repnz
pop
sbb
sub
sub
lds
jmp
sbbl
rclb
mov
push
lods
dec
pop
addr16
adc
addl
mov
mov
pop
sbb
xor
insl
push
add
xchg
cmpsb
inc
sbb
dec
ret
pop
pop
lret
or
daa
sub
or
lock
add
push
push
adc
xor
cmp
jmp
lcall
inc
xchg
jmp
pop
ss
lods
xchg
mov
add
pop
adc
mov
mov
adc
movsl
test
and
jns
mov
mov
into
xchg
dec
dec
mov
flds
and
mov
and
sbb
and
mov
push
scas
lods
mov
adc
pop
fidivl
lock
add
imul
addr16
sarl
xchg
pop
fs
cmp
cltd
mov
decl
xor
cmpb
dec
mov
and
cmp
inc
xchg
test
mov
mov
mov
jno
out
sti
adc
xchg
xchg
jne
mov
aas
dec
loope
shll
dec
pop
out
mov
mov
shlb
push
sarb
lock
jp
mov
mov
stc
inc
stc
mov
data16
xor
pop
inc
xor
dec
imul
test
xchg
add
flds
jle
lods
mov
arpl
out
fs
leave
loopne
and
imul
mov
add
test
xchg
fs
addl
and
sbb
adc
or
inc
mov
mov
sub
out
xor
or
dec
dec
push
inc
push
nop
fsubrp
add
movzwl
rcrb
or
jl
mov
adc
pop
sarb
dec
xor
xlat
adc
pop
jns
push
hlt
movsb
xlat
lock
shlb
shll
add
lds
push
bound
rcr
popa
inc
push
inc
aas
loopne
rol
or
mov
mov
push
mov
mov
xor
xor
pop
iret
lods
incl
pop
repz
push
inc
adc
popa
mov
lret
das
iret
mov
sub
sbb
bndldx
gs
add
mov
pop
icebp
jmp
insl
or
inc
or
cmc
jecxz
pusha
xor
inc
pusha
jmp
or
imul
push
or
push
push
int3
lods
push
test
lock
pushf
mov
je
push
sub
mov
jmp
pop
shl
xor
ret
stos
inc
xlat
and
jge
imul
inc
xor
xor
and
cs
sub
sub
add
cmp
adc
push
stos
clc
rorl
dec
shrb
inc
lods
push
inc
dec
pop
je
dec
rorl
call
orb
or
or
mov
or
jge
push
sbb
loop
enter
push
adcl
addr16
cltd
inc
pop
pop
or
cmp
lock
pop
cmp
add
adc
lods
nop
fiadds
push
ja
pop
inc
ja
jg
test
xlat
rclb
fwait
and
rclb
xchg
fiadds
push
or
cmp
add
adc
jmp
lea
dec
lcall
pop
pop
inc
and
or
xchg
popf
nop
dec
xor
push
pop
xor
inc
lods
into
or
popa
rclb
add
adc
adc
cmpsb
mov
or
add
and
sarb
pop
dec
clc
or
or
filds
push
push
js
xorb
pop
sub
outsl
into
mov
push
xchg
inc
loopne
mov
mov
inc
and
ret
push
mov
shrb
or
xor
add
rcr
push
xchg
shr
jmp
fnsave
orb
xchg
popa
push
mov
movsl
fnstsw
lret
inc
dec
cmc
cmp
dec
vpmacswd
xchg
xchg
inc
subb
lret
js
mov
inc
push
push
pop
repz
mov
rol
or
or
jge
sbb
sbb
jno
xchg
push
mov
pop
xor
xor
lea
jo
lret
or
xchg
inc
mov
rcrb
insb
nop
or
and
aad
cmp
adc
aaa
and
push
das
rol
test
or
jecxz
add
inc
mov
and
adc
mov
imul
nop
cmpsl
jb
add
sti
or
enter
mov
or
push
xchg
iret
jae
jns
or
out
jl
cmp
and
sbb
xchg
jo
adc
loop
out
jmp
cmpsl
lods
rcll
mov
repnz
push
filds
push
sub
je
int3
push
jo
push
dec
lods
dec
adc
cs
xor
mov
dec
xor
mov
inc
push
push
imul
int
push
pop
inc
pop
sarb
fstps
xor
shrl
cmp
adc
pop
cmp
xchg
int3
fxch
pushf
pushf
mov
adc
flds
jecxz
fdivp
inc
push
fistps
mov
mov
xchg
imul
inc
cmpsb
xchg
inc
add
adc
or
cmp
adc
adc
movsb
dec
and
mov
and
enter
or
inc
push
push
sbb
adcl
or
pop
lock
xchg
ret
imul
test
ret
dec
push
or
insl
data16
fmulp
arpl
shll
push
and
pop
xchg
adc
inc
cwtl
xor
mov
je
pop
movl
insl
sub
gs
or
rclb
or
lds
jae
movsb
xor
push
or
add
js
add
sbb
or
adc
cmp
jg
add
or
mov
adc
push
sbb
test
test
dec
sub
jge
jp
push
xchg
or
mov
scas
mov
sub
mov
faddl
gs
in
fmuls
inc
or
xchg
dec
add
sub
jg
jno
cmp
push
je
repz
mov
inc
push
or
test
mov
cs
sbb
sbb
nop
sub
xor
sbb
rep
mov
inc
sbb
push
pop
stc
das
sbb
or
movnti
push
sub
sbb
push
jmp
pusha
test
pop
mov
lock
push
sbb
or
add
dec
xchg
jae
pop
addl
out
add
lcall
pushf
add
adc
xchg
mov
mov
mov
dec
insl
pusha
arpl
pop
adc
sub
add
push
scas
rorb
mov
repnz
dec
aas
adc
add
test
add
aaa
inc
jmp
fcmovnbe
xor
stos
sarl
add
ret
mov
xchg
mov
rcl
cwtd
xlat
rcl
mulps
sbb
xchg
ja
inc
push
dec
out
ja
popa
call
jae
arpl
add
fwait
xchg
xchg
and
icebp
jle
dec
arpl
lds
push
dec
dec
imul
mov
test
and
mov
adc
inc
cmp
or
in
xor
lret
je
mov
call
mov
xchg
hlt
cltd
push
ljmp
sbb
movsb
mov
subl
adc
mov
xchg
adc
idiv
sbb
xchg
lods
inc
adc
inc
mov
pusha
mov
pmulhuw
in
les
out
nop
daa
test
mov
add
adc
lock
cltd
sub
sti
push
add
pop
movsl
out
sahf
popf
or
push
mov
or
sub
or
xor
pushf
imul
mov
mov
dec
add
and
and
les
enter
pusha
cmp
push
pop
clc
add
lea
incl
adcl
xchg
nop
inc
and
inc
add
pushf
nop
dec
inc
xor
repz
add
adc
mov
add
push
icebp
stos
push
nop
test
enter
fsubrs
pop
xor
xchg
or
leave
les
or
push
sub
and
sbb
or
stos
pusha
testb
sbb
loopne
stos
or
push
lea
mov
fdivr
xchg
test
sti
or
xchg
cld
and
push
and
shll
mov
or
loop
sbb
ret
pop
scas
sub
dec
hlt
xchg
dec
cli
pop
fisubs
or
add
inc
repnz
push
push
jae
push
jb
repnz
jle
add
push
push
add
inc
push
sub
sbb
sbb
add
je
or
jnp
inc
dec
adc
push
xchg
mov
rclb
inc
js
push
icebp
and
das
sub
sub
mov
sarb
dec
mov
xchg
inc
or
and
call
es
loop
add
jl
or
rclb
push
add
mov
sbb
and
fucom
lea
in
int
lcall
mov
pmulhuw
push
sub
adc
sbb
loope
inc
jle
mov
les
cs
in
mov
shll
mov
and
inc
ret
adc
adc
push
xchg
dec
mov
push
cld
mov
mov
sub
xchg
pop
or
daa
add
xor
dec
jo
xor
mov
test
clc
push
xchg
add
inc
aam
ss
aas
inc
leave
cltd
add
xchg
int3
outsl
insb
cmp
xchg
xor
xchg
js
stc
call
push
mov
and
inc
mov
add
or
or
subl
stos
mov
lea
mov
mov
sub
jnp
xor
orl
xchg
pop
into
dec
popf
fisttpl
ja
mov
push
test
add
out
daa
popw
nop
sub
mov
insb
popa
add
cmp
xor
xchg
out
fcompl
fmuls
out
push
mov
pop
sub
sbb
adc
push
or
jge
sbb
sbb
or
scas
inc
sbb
rcrl
fmul
arpl
cmovo
aaa
inc
repnz
je
pusha
loope
fwait
and
sbb
inc
hlt
dec
mov
sbb
stos
inc
stc
push
mov
sbb
adc
daa
pop
sub
cmp
rorl
inc
sub
test
and
movsb
insb
mov
dec
mov
leave
mov
enter
mov
loope
dec
cmpsb
addb
and
mov
lcall
in
mov
dec
or
loopne
fidivl
aam
ret
or
pop
sbb
xchg
dec
pop
add
and
add
xor
or
fwait
jmp
push
mov
xchg
or
fistl
or
dec
jge
leave
fs
imul
popa
rolb
stc
int3
xchg
or
loop
lahf
dec
movsb
mov
push
sarb
mov
xchg
shrl
leave
add
add
daa
sbb
adc
pushf
xor
pop
add
mov
fs
xor
fs
cmp
and
testl
mov
pop
into
ret
and
adc
repnz
mov
in
jecxz
aam
sub
sub
lahf
fmull
test
xchg
insb
sub
orb
ljmp
mov
and
imul
mov
push
cmp
fsubrs
mov
or
adcb
pop
mov
ror
adc
sbb
pop
xor
mov
adc
xor
push
mov
aaa
dec
push
decb
ja
jl
dec
ret
fimuls
in
ret
pusha
adcb
push
or
addb
outsb
sub
jecxz
xchg
dec
and
andb
rcrl
cmp
aam
push
xchg
cld
addr16
sarl
xor
sbb
out
addr16
adc
or
repz
adc
mov
aas
sub
cmpl
mov
inc
sbb
popf
in
mov
ja
push
adc
push
dec
inc
es
or
in
in
or
xchg
cmpsb
aam
sub
sbb
add
add
jmp
sbb
lea
outsl
jae
push
sbb
pusha
addl
rcrl
jns
popl
lea
daa
in
push
and
sbb
scas
or
enter
test
dec
daa
ss
add
mov
inc
cmp
and
mov
into
mov
xchg
or
pop
or
dec
push
in
xchg
lock
movsl
repz
push
or
and
xchg
pop
mov
push
sahf
add
dec
clc
mov
test
pop
pop
js
lahf
fcmovnb
and
push
aam
adc
xchg
flds
xor
mov
jg
mov
xchg
imul
push
or
ds
xchg
mov
push
and
movsl
test
add
xlat
xchg
lds
inc
ror
data16
insl
mov
cmp
mov
jmp
xor
enter
jne
cmc
jae
clc
mov
in
adc
lods
shl
xor
ret
clc
or
and
repz
call
or
js
cwtl
mov
inc
shlb
test
sti
mov
imul
cmp
mov
mov
lds
push
push
mov
xchg
inc
pop
cmp
int3
jne
cld
fwait
sub
xor
fmulp
inc
or
push
arpl
add
sub
add
sbb
and
sub
push
pop
inc
xchg
scas
and
lods
enter
leave
add
dec
sti
cmp
fidivrl
adc
mov
enter
and
inc
inc
rclb
xchg
cmpsl
and
push
sbb
fnstenv
leave
pop
jmp
and
push
sub
cld
rclb
push
push
push
adc
inc
xchg
cmp
push
mov
inc
mov
cmp
mov
and
popa
cli
add
inc
xor
imul
push
mov
pop
or
pop
shll
sub
or
fs
xchg
sub
popa
and
mov
or
rcll
sub
popw
adcb
pop
push
pop
sbb
add
cs
pop
sub
add
cmp
add
or
inc
mov
sub
inc
push
inc
sbbb
and
mov
leave
mov
insl
mov
in
add
popa
or
mov
sbb
or
enter
inc
fs
out
movsl
add
cli
insb
or
or
mov
push
add
in
loopne
fmuls
add
and
dec
jge
insb
fsub
jbe
cmp
int
pmullw
mov
sbb
call
in
adc
in
xor
sub
and
push
mov
adc
dec
dec
xor
mov
lods
test
and
lret
stc
cmpsb
sub
in
push
inc
and
lahf
adc
sub
push
out
gs
sub
mov
xchg
arpl
pop
fstpl
mov
mov
push
mov
inc
add
xor
loopne
pop
cmp
pop
cmpl
sbb
push
and
push
mov
push
inc
popa
mov
and
or
inc
sbb
loope
rcrl
xor
inc
aam
int3
or
sbb
pusha
push
aam
sti
lock
sub
push
movsl
sbb
push
adc
xchg
cmp
add
dec
or
jae
sub
push
or
ljmp
loop
jne
ret
into
ret
sub
aaa
cmp
adc
mov
data16
jb
dec
or
jmp
stos
add
addr16
sbb
mov
dec
jmp
push
aam
dec
lret
cmc
add
pop
mov
jns
lret
cs
mov
mov
xor
movb
cmpsb
test
pop
or
push
ficomps
lea
mov
popf
push
rolb
push
fwait
adc
cmp
sub
inc
xchg
jnp
popf
push
cwtl
inc
xchg
lock
mov
movsl
and
lock
les
cwtl
pop
mov
outsb
sub
adc
cmpb
mov
pop
fnstsw
insl
addr16
inc
mov
sub
lock
pop
push
sbb
test
push
addl
cmpsl
popa
sub
xor
lods
push
sub
push
pop
mov
mov
mov
fildl
out
mov
movsb
orl
inc
push
xor
js
das
loope
dec
inc
push
or
add
mov
push
ja
push
adc
inc
mov
mov
or
and
pop
pop
ret
lret
dec
sbb
cmp
lret
push
jo
and
pop
pushf
or
ss
cmp
mov
xor
inc
insl
jne
mov
jl
xor
cmp
push
add
dec
sub
bound
popa
pusha
xor
xchg
xor
add
out
xchg
je
ljmp
nop
pop
jno
add
or
adc
sbb
sub
or
inc
fistl
push
mov
jb
sbb
push
sbb
bound
pop
or
cmp
add
mov
in
rol
adc
push
loopne
push
pop
cmp
ret
in
xchg
int
stc
stos
imul
adc
cwtl
cmp
ret
pusha
nop
mulb
mov
gs
test
jo
je
inc
jmp
imul
and
or
and
adc
sbb
or
in
in
xor
pop
and
cwtl
push
mov
repnz
push
sub
das
dec
dec
xor
sti
in
sahf
xchg
inc
in
test
jb
xchg
xlat
pop
enter
inc
test
or
pop
loope
dec
sarb
push
js
sub
rcll
pop
pop
pop
push
or
sbb
stos
push
sbb
imul
or
xor
sub
adcb
daa
push
fsub
mov
jmp
lock
add
xor
mov
pop
aas
push
je
lea
sub
test
int
jnp
jo
ror
push
jmp
jg
pushf
xchg
mov
lea
jne
add
mov
xor
fdivl
dec
mov
imulb
imul
xor
jno
xchg
lea
sub
iret
in
xor
dec
sub
and
fwait
loopne
leave
sbb
add
xchg
es
arpl
divl
out
out
push
nop
jo
jae
sub
push
mov
mov
add
mov
and
xchg
dec
mov
pop
add
push
push
movsb
subl
push
test
jae
rcrb
push
mov
repz
add
inc
push
les
inc
sub
lret
insb
in
jbe
and
cli
sidtl
add
bound
int
inc
in
push
pop
and
mov
addl
push
mov
sbb
push
int3
imul
sub
insb
and
in
push
and
cltd
inc
push
sub
mov
inc
aam
push
ja
rcl
pop
mov
or
cmp
sub
inc
mov
push
popa
sub
icebp
mov
sub
test
push
jo
scas
pop
test
and
cmp
sti
lcall
mov
ja
ret
data16
add
xchg
inc
pop
push
push
fcomip
das
loope
ss
outsl
and
sbb
dec
fsts
mov
add
sub
dec
jmp
cli
xchg
add
vmovlps
lods
int3
xor
andl
test
and
and
jbe
ret
test
mov
daa
aam
sbb
inc
push
adc
cs
outsb
fcomps
mov
fsubl
shlb
ret
xchg
mov
fstpl
adc
jae
js
nop
imul
add
xchg
push
daa
adc
inc
daa
fwait
popa
add
or
dec
cmp
test
and
adc
add
repnz
fstps
and
mov
jo
xor
adc
mov
xor
adc
lahf
cli
test
jle
lea
push
dec
fwait
rcl
or
into
mov
fwait
adc
xchg
pop
lods
dec
push
inc
push
gs
push
lods
pop
push
invd
push
scas
cs
add
lds
mov
xchg
es
aas
rclb
jp
dec
or
adc
or
aaa
push
notl
push
movsl
mov
addb
fistps
leave
sub
cld
and
fsubrl
mov
jmp
mov
xchg
lock
dec
mov
jnp
push
inc
pop
dec
xor
cmp
push
mov
dec
scas
imul
movsb
test
loopne
and
fwait
out
xchg
jo
fwait
je
xchg
je
jnp
nop
xchg
and
jge
mov
xor
fstp
fsub
mov
pop
add
push
lea
js
or
pop
or
inc
test
push
call
and
mov
mov
push
mov
pushl
xor
test
sub
dec
lcall
or
dec
or
aad
xchg
xor
mov
mov
lret
mov
je
xchg
cmp
xchg
add
test
test
push
cmp
aaa
jo
fists
das
sarb
or
push
sahf
test
test
adc
lea
and
mov
mov
add
xor
das
rorb
xor
pop
xor
mov
pop
adc
or
inc
adc
enter
imul
adc
les
xor
pop
lock
cs
push
and
clc
cmc
shrb
in
loopne
or
and
ret
dec
inc
jns
gs
sbb
add
inc
out
cltd
mov
cltd
ret
and
xor
mov
stos
inc
push
adcb
inc
pop
scas
out
xor
xor
push
rcrb
add
andl
add
or
scas
rolb
mov
xchg
dec
into
xchg
and
ret
mov
and
add
mov
push
aam
cmpsl
dec
adc
jbe
sbb
push
xchg
mov
in
fs
cmpsl
jge
lods
or
mov
and
test
inc
add
mov
cmp
sub
mov
and
cltd
dec
leave
adc
mov
add
iret
dec
jmp
xchg
add
roll
fwait
lds
add
lret
addb
mov
test
add
add
or
mov
bound
sbb
aaa
sbb
adcl
sub
adc
add
mov
gs
dec
repnz
xchg
mov
inc
push
pushf
xchg
mov
add
dec
pop
std
cmp
push
cmpsl
imul
subl
push
mov
adc
add
add
dec
cmp
daa
mov
pop
cmpsl
nop
xchg
push
inc
xor
add
subb
dec
insb
and
mov
adcb
mov
andl
cmpb
fwait
out
testl
jmp
sti
sbb
or
add
test
das
jl
cmp
mov
movsb
and
sub
push
cmp
cmp
xor
add
or
rorl
inc
flds
mov
mov
jne
enter
or
fmull
pop
sbb
or
add
jmp
mov
pop
push
push
outsb
clc
or
sub
or
sub
push
fisttpl
mov
or
loop
mov
push
movsl
dec
adc
dec
cmpsb
hlt
addr16
pop
xchg
cmpsl
cmp
insb
inc
pop
insl
lret
clc
push
and
push
movsb
pop
mov
sub
ja
cmp
push
pop
ret
outsb
add
mov
pop
sar
lods
sbb
jecxz
pop
lret
pushf
sub
dec
sti
or
adc
adc
inc
adc
inc
out
inc
or
stos
and
cmpsb
push
daa
loopne
andb
aaa
inc
add
inc
adcb
clc
mov
fisttpl
push
adc
loop
lret
mov
xchg
mov
jns
adcb
sbb
fisttpl
push
clc
jmp
je
loope
cmp
cli
and
jge
clc
sub
xchg
or
je
rcll
cmp
add
add
notb
push
mov
push
cltd
push
or
add
mov
push
ret
dec
ss
add
or
js
hlt
popf
shll
adc
inc
sbb
add
push
mov
dec
mov
jg
add
rorb
push
pop
inc
and
add
or
faddl
arpl
jl
pusha
or
sbb
add
loope
sbb
jae
mov
orl
lock
and
jno
sbbb
int
setge
jl
sub
cmpsl
mov
and
inc
add
jmp
rcl
int3
add
adc
jns
or
out
xor
mov
es
sbb
inc
lods
add
incb
add
popl
pop
popf
xchg
lret
shrd
ret
ficoms
push
mov
mov
mov
xchg
fmul
push
ret
mov
inc
pop
lea
push
xor
xorb
inc
push
add
jle
sub
add
adc
inc
push
dec
dec
cmpsl
and
add
xchg
cld
pop
inc
inc
add
push
push
xchg
imul
sub
pop
icebp
dec
movsb
inc
xor
not
sbb
xchg
lods
mov
inc
ret
fists
jbe
and
or
jo
xchg
inc
addl
add
sbb
loopne
mov
aas
das
loopne
aam
mov
sub
jb
jb
and
add
add
test
mov
stos
inc
loop
or
push
pop
mov
inc
pop
nop
hlt
hlt
or
push
inc
or
je
push
cmpb
add
ja
adc
cmp
enter
shrl
xor
gs
cmp
add
loopne
pop
cmpb
or
inc
loopne
push
into
sub
jmp
add
mov
push
xchg
inc
ret
sbb
mov
add
ret
xchg
mov
dec
or
pop
add
mov
mov
push
push
arpl
hlt
push
or
repnz
shr
inc
gs
push
mov
shr
push
xor
pop
arpl
inc
push
pop
inc
pusha
pop
mov
rol
mov
ss
cmp
mov
lods
ja
mov
and
or
pop
lahf
xchg
rolb
insl
movsl
mov
js
jg
jle
clc
push
lds
cmp
jne
mov
icebp
sub
notl
jne
mov
sub
sbb
in
add
add
xchg
in
push
xor
mov
mov
and
sub
iret
lea
popa
in
lahf
aaa
add
jo
or
fwait
xchg
inc
cld
aaa
push
push
cs
push
sbb
loopne
push
ret
and
popf
cmpsb
push
scas
aad
pop
sub
fdivl
push
xchg
mov
inc
adc
sub
add
and
mov
aam
loop
ja
ja
lea
or
sbb
aas
mov
inc
dec
leave
xchg
sbb
pop
pop
jle
cmpsb
or
and
push
fldl
push
pop
cmpsl
gs
in
cmpl
jmp
in
dec
insl
mov
and
pusha
ret
cld
mov
sbb
out
mov
mov
dec
sbb
add
push
inc
adc
jl
jle
aaa
shrl
dec
lahf
sbb
jl
or
outsb
inc
lahf
dec
mov
adc
nop
pop
mov
out
xor
sub
mov
int3
lock
dec
adc
test
ljmp
xchg
jecxz
mov
cmp
push
mov
aaa
je
cld
iret
mov
adc
add
test
xchg
in
adc
js
dec
pop
adc
and
cmp
and
shll
lds
push
imul
push
test
jp
jge
test
mov
mov
fsubl
mov
movsb
add
pop
das
add
mov
jp
es
pop
jns
rcll
ret
cltd
dec
ficoms
push
mov
mov
scas
test
and
and
adc
push
aam
xchg
ret
dec
inc
xchg
pop
push
push
and
pop
sbb
sbbb
mov
std
mov
push
and
sub
or
add
dec
push
int
jnp
adc
outsb
push
js
cmp
cmp
jbe
in
sbb
inc
sbbl
add
or
imul
add
fs
pusha
and
mov
hlt
and
imul
jle
mov
adcl
outsb
loope
int
adc
stos
mov
or
arpl
cwtl
mov
leave
icebp
add
lock
addb
mov
dec
test
dec
lea
mov
jne
sub
icebp
rorb
adcb
jo
aas
insb
stc
mov
mov
std
inc
xlat
jecxz
inc
sub
ljmp
push
mov
and
sub
add
fldl
or
lds
mov
frstor
xor
cmp
mov
lahf
std
repz
les
pop
sub
add
popf
addb
dec
pop
fsubrl
push
aas
xor
test
jae
sbb
jmp
dec
hlt
rorl
fadd
jl
sub
mov
ds
sub
pop
lea
mov
sub
lret
sbb
xadd
push
clc
add
pop
orl
sub
adc
adc
test
or
leave
push
mov
adc
jbe
sub
cmp
or
adc
arpl
inc
mov
cmpxchg
jmp
in
repz
repz
test
adc
sbb
pop
hlt
nop
lret
or
sub
and
ret
xor
sub
punpckhbw
inc
int3
sub
inc
and
push
lods
lahf
xchg
aad
add
mov
call
xchg
fldcw
mov
xor
mov
popl
or
adc
sbb
hlt
inc
add
scas
jmp
adc
call
rcl
test
pop
push
pop
cmp
ds
das
sbb
adc
mov
cmp
daa
jo
or
push
mov
test
inc
pop
sub
fildl
mov
lahf
mov
outsl
inc
je
aam
pop
mov
sbb
popa
call
pop
pop
call
and
mov
adc
push
test
call
push
push
lret
xchg
loopne
fcoml
and
sub
shlb
in
push
call
lock
js
mov
xchg
rolb
fiaddl
and
sbb
sub
enter
add
rcr
push
int
scas
jne
add
and
mov
pop
js
xchg
sbbb
add
insb
push
fsubr
pop
ret
mov
mov
test
push
mov
or
fcoml
hlt
and
cmpsl
dec
jns
pop
jmp
mov
fistpll
inc
add
inc
movsl
inc
fs
repnz
fsubrs
xor
push
push
movzbl
xchg
addr16
or
in
in
mov
ljmp
call
cmc
xor
mov
ret
cmovo
fs
dec
mov
add
repnz
cltd
sbb
fildl
jns
adc
mov
mov
pop
mov
scas
xor
mov
shlb
mov
dec
jno
jl
fnstsw
jecxz
faddl
xchg
xchg
iret
xchg
aam
fmull
inc
inc
sub
mov
rcrl
jbe
xchg
dec
or
imul
add
lds
xor
and
mov
in
jp
insl
dec
inc
popa
dec
jnp
push
fadds
arpl
and
inc
cmovle
push
rorb
sub
les
je
mov
in
pusha
push
int
fidivs
adc
setge
std
xor
pop
je
jae
sbbl
aam
or
les
lods
orl
xchg
popa
roll
mov
popf
rcrl
and
orl
xchg
ja
or
and
sbb
addr16
add
test
dec
sbb
sub
inc
in
cmp
pusha
mov
lock
cld
and
lock
xchg
jo
outsb
mov
adc
shlb
push
pusha
add
call
mov
add
orb
cli
add
rorb
push
imul
push
pop
push
rolb
out
jecxz
mov
pop
jle
es
mov
loope
pusha
loopne
push
xchg
xor
mov
push
aad
or
or
aas
adc
cmp
and
ja
adc
cmp
dec
mov
fdivl
fwait
test
nop
add
cmp
stos
clc
cmp
mov
dec
xlat
sbbb
lods
ret
out
mov
push
repz
push
movsb
mov
jge
jb
lahf
dec
mov
scas
cmpl
mov
add
cmp
sub
frstor
mov
sbb
lea
and
lods
loopne
andb
adc
add
leave
out
jmp
xchg
sbb
pusha
imul
mov
pop
test
loopne
js
movsb
sub
inc
lea
push
pop
cmp
cmc
push
or
or
jp
lahf
jge
test
jb
fs
cmp
and
je
stos
sti
aas
and
aam
cs
add
pusha
add
daa
xchg
adc
push
shlb
adc
or
aas
aam
inc
sbb
fcom
pop
dec
and
push
mov
fadds
mov
and
daa
inc
aad
rorl
adc
and
stos
sub
out
hlt
adc
movsl
pop
add
divl
and
lret
inc
inc
leave
icebp
movsb
lock
adc
arpl
add
mov
insl
popa
inc
ret
pusha
dec
cmp
loopne
mov
int3
call
or
neg
inc
or
dec
stos
ret
lods
loope
sub
cmp
int
int3
pop
ss
sub
lcall
decl
sbb
rcrb
in
push
push
and
out
mov
jmp
aas
push
add
cmp
daa
push
inc
leave
push
pusha
cs
and
add
sub
and
out
rolb
orl
sbb
repnz
lock
push
mov
enter
lods
sbb
rclb
gs
mov
push
mov
cmpsl
add
push
js
dec
mov
dec
sbb
in
dec
mov
aas
hlt
and
pop
sbb
rclb
and
cmp
lahf
in
test
gs
and
and
and
and
xchg
daa
pop
xor
sub
jmp
les
adc
lods
dec
pop
add
loopne
add
add
fwait
ret
push
cs
sub
loope
scas
test
int3
int
pop
add
fdivr
mov
mov
in
add
pushf
jo
cwtl
mov
dec
jl
dec
fwait
xchg
insl
mov
inc
iret
adc
dec
dec
add
add
or
popa
clc
or
inc
cmp
mov
ret
push
fisubl
adc
repz
push
divl
mov
add
scas
fcmovnb
sbbb
xchg
or
mov
aad
enter
add
sbb
incb
mov
or
jae
and
and
cs
xchg
inc
mov
xchg
rcr
adc
les
shlb
fcoms
sbb
pushf
jno
or
xchg
dec
adc
add
or
push
syscall
orb
mov
add
fnstenv
pushl
pop
inc
aas
and
push
push
adcb
dec
mov
xchg
test
jns
push
mov
xchg
pop
and
push
lods
insl
mov
mov
or
scas
mov
pop
enter
push
jmp
jl
jb
jns
dec
inc
sbb
leave
jp
nopl
rsqrtps
clc
imul
loop
fistl
jb
pusha
into
movups
add
movsl
rorb
pop
pushf
mov
jne
jp
mov
adc
mov
xor
or
pusha
loop
mov
rolb
push
daa
and
aam
and
pop
xchg
push
xchg
loopne
clc
push
popl
jmp
mov
jb
push
mov
and
nop
lret
push
cmpsb
mov
sbb
sub
mov
rcrl
and
hlt
cmp
lods
push
pop
sbb
xchg
adc
test
mov
jge
jb
push
and
or
and
dec
clc
xchg
subb
enter
sub
and
ret
aaa
jne
push
sbb
xor
pop
out
aaa
and
rcrl
xchg
push
rcr
fistps
pop
mov
push
mov
rorb
arpl
fsubrp
sar
stos
xor
hlt
mov
xor
pop
sti
es
fwait
insl
jecxz
adc
jmp
cmp
scas
sbb
adc
ret
push
loopne
test
sbb
inc
push
add
fistps
cmpb
sub
push
or
xor
filds
enter
add
add
adc
nop
or
fisttpl
or
fldz
xlat
xor
add
sbb
dec
push
push
cmpxchg
clc
js
out
push
xor
and
imul
mov
adc
insl
cld
mov
jmp
cltd
loop
and
pop
pop
xchg
push
sub
cld
fs
sub
add
movsl
fwait
xor
xor
clc
sbb
xor
sbb
sbb
sbb
pushf
les
cmp
push
cmp
adcl
cld
adc
pop
xchg
test
int3
rolb
and
add
sbb
xchg
mov
popa
push
cld
push
sub
add
and
jbe
jbe
adc
adc
push
fistpl
mov
fsubl
dec
adc
xor
push
shl
loop
outsl
add
dec
pop
jp
pop
ss
test
test
ret
sbb
in
call
lods
andl
push
jecxz
mov
xchg
mov
mov
add
sti
fcomps
jecxz
or
mov
fs
xchg
addb
loopne
adc
cltd
mov
pop
mov
push
mov
adc
push
out
adc
dec
shll
dec
adc
ret
cmp
std
data16
iret
xchg
xor
inc
inc
add
insb
jmp
push
lret
mov
lods
add
adc
imul
adc
shlb
dec
add
or
ret
in
xchg
divb
sbb
movsl
arpl
jo
arpl
imul
int
mov
fidivrl
movsb
out
ja
mov
jmp
ret
add
adc
idivb
lret
imul
add
pusha
mov
data16
jge
cmp
jmp
adc
mov
adc
mov
sbb
cmp
sub
pop
or
outsb
jbe
jge
sbb
arpl
jle
aaa
fcompl
xlat
cwtl
inc
add
mov
incl
pop
xchg
mov
cmp
loopne
add
or
mov
call
add
test
jg
adc
dec
add
sbb
pop
in
xchg
or
subb
icebp
add
sarb
daa
icebp
cmp
push
pop
pop
inc
loop
xor
shlb
or
cmp
push
cs
hlt
fadds
mov
add
bound
mov
mov
call
aam
push
insl
addr16
das
pop
or
sub
in
push
popa
pop
testb
inc
sub
mov
ss
mov
xor
fists
push
inc
inc
gs
xor
jbe
inc
dec
shrb
in
fisttpll
cmpsl
pop
inc
lods
jne
into
sub
aas
mov
inc
sbb
in
in
xchg
rcrl
je
pop
or
or
cs
orl
or
inc
ret
push
mov
xor
add
cmp
fwait
dec
pop
in
adc
push
push
js
gs
faddl
mov
testb
repnz
insl
outsb
add
test
sbb
in
sub
xchg
xchg
out
mov
inc
inc
loopne
pop
cmp
jg
cmpsb
lea
nop
inc
inc
push
sub
and
out
gs
mov
aad
movb
jg
adc
movsl
sub
sub
inc
mov
mov
sub
test
mov
push
add
xor
out
jl
shrb
or
rorl
xchg
sbb
jge
inc
fnsetpm(287
adc
push
pushl
fcoml
movsb
pop
push
adc
in
jl
xor
test
jmp
jae
movsl
dec
dec
add
std
in
mov
es
pop
push
cmpsb
lea
and
ret
add
xchg
mov
imul
movsb
cmp
add
rcll
jne
inc
sbb
add
mov
test
fiaddl
sub
add
sub
mov
mov
call
cmp
inc
jno
cmc
outsl
sarl
rcrb
cmp
rcl
add
rclb
add
pop
push
push
insl
cmp
shl
test
push
add
add
fildl
add
fsubs
sbb
ret
inc
add
jle
push
inc
mov
call
add
sbb
jmp
push
adc
push
push
add
inc
add
mov
std
add
or
add
fdivl
pushl
addl
pop
jl
loop
sbb
push
push
jle
inc
mov
xchg
add
adc
cmp
or
lds
jb
movsl
cmp
or
imul
mov
fsts
cs
verw
test
jge
jo
hlt
add
sbb
push
sbb
pop
outsb
lret
mov
mov
pop
mov
fstpl
adc
mov
jle
cld
push
add
push
pop
ljmp
out
aas
rcl
fildll
std
pop
add
dec
rcrl
addl
cmp
adc
pushf
pop
adc
pop
jne
jle
inc
or
sbb
jle
cmp
mov
sbb
jg
ljmp
push
add
cld
cmp
mov
aam
or
fdivl
jno
int
mov
sub
cmpsl
and
sub
jb
outsb
fsubrs
xor
insb
pop
outsl
pop
mov
rcll
pop
mov
popa
inc
and
mov
in
lea
cmp
adc
xchg
stos
cmp
pop
sbb
lods
dec
pop
push
popa
enter
std
pop
in
ret
mov
hlt
jp
add
in
dec
inc
add
sbb
imul
or
addl
testl
xchg
js
sbb
mov
or
cld
rclb
mov
pushl
mov
mov
pop
add
sbb
and
iret
push
pop
ret
inc
sbb
push
repz
mov
jmp
adc
mov
bound
in
or
aam
leave
adc
inc
in
cmpl
add
ret
cwtl
roll
push
jae
push
dec
push
jmp
cmp
add
popa
add
je
mov
sbb
cltd
neg
push
mov
xor
sbbb
psadbw
add
add
stc
add
dec
push
mov
and
notl
ljmp
sbb
mov
adcl
in
ds
mov
cmp
rcrb
jg
add
pop
aam
xor
push
ja
jmp
add
fcoms
jmp
xor
inc
adcb
inc
pop
adc
and
push
adc
aaa
adc
sbb
xor
sbb
add
cmp
and
pushl
das
push
cmp
or
cs
arpl
ss
dec
inc
cltd
fists
add
pop
xchg
jns
add
mov
lret
pop
setbe
addb
loop
inc
pop
push
xor
and
mov
lcall
push
or
add
pop
sbb
adc
dec
lods
out
sbb
fs
jb
div
dec
test
dec
hlt
jae
and
cmp
js
cmp
jl
cmpsb
daa
sarb
inc
mov
leave
les
pushl
sub
add
and
sub
xchg
xchg
jnp
addl
adc
ja
or
adc
jb
adc
push
dec
fnstenv
xchg
adc
sbb
inc
dec
cmp
adc
or
loop
fildl
mov
inc
mov
ds
sarl
sub
xor
enter
das
or
xchg
sub
dec
adc
sbb
xchg
xlat
xchg
pop
ror
inc
jmp
xchg
mov
stc
or
mov
add
and
in
mov
push
aad
loope
adc
lods
and
pop
adc
mov
std
ficompl
jle
psubb
lcall
jbe
test
or
fwait
ret
jne
in
push
add
scas
ja
int3
or
lahf
sub
shlb
scas
ds
push
or
jne
jg
add
cmp
mov
xchg
int
sub
icebp
cmp
test
xchg
add
mov
push
in
pop
cmc
inc
mov
or
hlt
adc
sar
mov
jle
out
orb
fiaddl
and
mov
and
test
faddl
sbb
dec
fs
add
dec
jg
adc
orl
call
adc
pop
inc
gs
hlt
or
sub
xchg
pop
and
mov
adc
mov
add
insl
pop
xor
loope
call
xchg
push
mov
cmpsb
scas
cmp
pop
pushf
and
push
pushf
bound
scas
xchg
jae
das
adc
pop
scas
or
add
add
pop
jp
sbb
bound
sub
sbb
test
adc
jo
xchg
jbe
inc
mov
push
stc
sub
stos
push
pop
sti
insb
add
ja
cmp
mov
shrl
cmp
inc
or
jg
push
cmpl
cmp
je
cmp
jle
adc
dec
pop
or
inc
or
inc
add
and
add
mov
add
push
lock
xor
orb
call
and
jb
je
cmp
cli
mov
add
sub
pop
adc
daa
es
clc
push
push
or
test
or
sahf
in
push
out
sbb
flds
call
cmp
xor
and
cmp
insl
rcrl
mov
add
push
call
push
test
mov
adc
push
adc
pop
es
jmp
cmp
push
xor
pop
pop
faddl
ret
sbb
mov
push
xadd
dec
push
rclb
xor
mov
in
idivl
in
xor
call
in
in
push
in
lock
jl
sub
adc
add
enter
test
arpl
leave
outsb
jmp
int3
jne
out
in
enter
aaa
pop
ja
inc
mov
call
pushf
pushf
in
xor
cmp
xchg
les
mov
test
in
pop
xor
insl
xchg
in
jo
cmp
imul
mov
push
fs
pushf
es
xchg
imul
repnz
sub
cmp
jbe
xchg
iret
in
dec
adc
std
dec
cmp
stc
sub
insl
push
aas
or
mov
jb
sbb
aam
inc
rolb
jns
pop
ret
jae
nop
int3
orl
fmuls
fsubrl
xchg
fsubrl
xor
sbb
xor
dec
rorb
dec
loopne
xor
dec
dec
jne
dec
push
pushf
in
in
add
int3
or
adc
mov
mov
call
and
xchg
mov
xchg
dec
es
es
sbb
and
cltd
fs
sub
xor
cltd
fs
dec
cmp
inc
fs
dec
es
fs
jge
insb
pop
or
into
sbb
mov
push
pusha
or
jb
pop
rcrb
enter
imul
stos
inc
sbb
xor
xchg
dec
in
call
pop
and
in
push
dec
push
and
and
xchg
sbb
add
push
call
daa
lock
test
add
mov
pop
in
dec
and
jmp
in
mov
jb
in
or
cmp
loop
xchg
pop
in
call
orb
push
mov
adc
sbb
stos
lret
xor
call
cmp
lock
and
out
loopne
lods
add
out
in
sbb
out
inc
out
xor
inc
push
repnz
and
pusha
xlat
xlat
mov
test
test
mov
push
add
cmp
push
nop
xchg
call
ja
ja
mov
and
clc
cmp
push
decl
lcall
roll
mov
cmp
mov
or
imul
call
sub
xor
in
and
sbb
sub
lock
nop
or
sbb
pop
sbb
leave
in
in
fwait
jb
sub
loope
add
call
add
pop
and
iret
mov
mov
hlt
mov
push
cmp
push
cmpsb
dec
mov
dec
in
cmp
stos
mov
aad
adc
js
dec
adc
cmp
sub
fs
nop
pop
dec
pop
scas
xlat
sbb
push
xchg
das
unpcklps
cmp
dec
inc
pop
or
add
xchg
or
es
imulb
fmull
scas
lahf
es
data16
mov
test
sbb
push
cmp
sbb
mov
or
fnstenv
loop
xorl
push
call
and
sbb
enter
or
enter
or
es
mov
sbb
inc
mov
inc
mov
es
dec
xlat
loopne
mov
pavgb
mov
jno
mov
jmp
enter
pop
in
test
adc
add
ret
push
loop
enter
jno
aam
movsl
roll
mov
xchg
outsl
jmp
push
pop
cmp
scas
pusha
jmp
fisubl
adc
jb
das
adcb
lea
dec
adc
xor
nop
incb
inc
push
push
dec
cmp
xor
inc
das
pusha
and
inc
jmp
adc
push
lods
test
adc
or
insl
mov
and
push
into
inc
dec
out
jbe
cmp
icebp
inc
mov
faddl
rcll
pop
loopne
je
jb
in
call
mov
fsub
fsub
push
rorl
je
inc
mov
inc
lock
fimull
jo
in
and
adc
sahf
xor
add
daa
popa
sbb
and
push
jmp
inc
push
mov
inc
fdivp
mov
loop
or
xchg
cli
popa
cmp
inc
loopne
inc
or
lods
add
shll
push
rcrb
out
mov
jne
int
fists
test
and
cmp
fmuls
xchg
cmc
mov
iret
push
mov
cmp
lock
sub
fcomp
xchg
cltd
icebp
sub
loopne
fadds
xchg
data16
adcl
rolb
inc
cmp
popa
test
inc
fwait
push
test
daa
daa
daa
lods
mov
mov
mov
es
daa
int3
ror
adc
cmp
inc
daa
movsb
cmpsl
dec
test
stos
add
fwait
jl
pusha
jge
sbb
inc
sbb
add
mov
or
lahf
ret
add
je
or
or
ret
jge
push
cmc
dec
fcmovnu
mov
call
jne
mov
andb
aam
inc
test
fiaddl
js
sbb
mov
inc
adc
inc
push
xchg
orb
rolb
cmp
mov
pop
push
loopne
leave
aas
lea
cmp
pop
push
sub
cmp
push
loopne
xor
and
jmp
jb
jae
push
and
outsb
loopne
sbb
adc
xor
cs
movsl
sbb
icebp
lods
std
adc
test
mov
sti
aam
nop
rcrl
mov
pusha
dec
and
or
dec
and
dec
push
jge
inc
mov
pop
lea
or
adc
jbe
or
sub
xchg
pop
pop
adc
stos
sbb
stos
das
or
das
mov
aad
inc
test
leave
daa
pop
inc
pop
mov
test
gs
loopne
dec
mov
and
dec
ficoml
sub
inc
sub
inc
js
mov
mov
leave
imul
push
xor
or
mov
adc
clc
inc
push
or
xchg
push
jmp
subl
pop
inc
cwtl
call
sub
sti
lods
push
add
sub
xor
inc
jne
rorb
addb
and
xor
pop
and
jne
inc
out
rclb
push
inc
in
or
add
push
shll
xchg
mov
int3
arpl
sbb
mov
mov
popa
test
movsb
mov
inc
push
push
rclb
mov
or
das
adc
push
pop
lar
ljmp
or
aas
cmp
js
mov
inc
loopne
shll
push
sbb
call
pop
push
dec
pop
push
cmpsl
mov
lcall
cmpsl
mov
cmpsl
mov
leave
outsl
popa
test
xor
nop
in
jne
je
call
lock
aad
or
push
fwait
ror
stc
mov
scas
add
push
fcomp
adc
push
and
mov
and
push
xor
push
or
lods
push
xor
movsl
dec
movsb
dec
dec
mov
inc
les
mov
and
xchg
cwtl
mov
pushf
nop
dec
outsl
pusha
shrb
or
and
das
inc
jns
push
and
push
dec
ret
pop
mov
jne
call
add
ret
es
pop
out
push
scas
out
nop
andnps
leave
outsl
insb
insl
pop
cmpsl
jb
mull
sbb
push
jno
mov
inc
int3
jno
lret
pop
mov
xor
enter
rorb
stos
test
push
xchg
xchg
mov
movsl
out
aam
dec
push
daa
or
mov
mov
in
or
fmull
inc
cmp
inc
inc
push
je
lds
mov
je
mov
mov
push
jb
jno
inc
pop
jo
adc
and
add
loopne
cmp
imul
ret
mov
jo
pusha
mov
dec
pop
les
imul
daa
mov
ret
inc
loopne
std
dec
rcrb
or
mov
lods
insb
enter
add
out
push
cmp
xchg
xchg
in
pop
loopne
orb
pop
or
fdivl
in
sti
pop
cmp
add
es
ret
mov
add
add
mov
adc
adc
out
cmp
pop
push
divps
pop
jne
test
aam
pop
inc
shlb
sti
jmp
xchg
xchg
adc
inc
ret
popa
shrb
dec
cwtl
cli
addw
inc
mov
sbb
lahf
out
mov
mov
add
pushf
iret
jne
sbb
mov
movsb
es
insl
and
cwtl
jno
dec
aam
dec
aaa
push
xor
mov
test
sub
inc
add
pop
sub
sub
mov
aaa
cltd
inc
lods
add
inc
push
bound
fiaddl
loopne
jae
dec
adc
orl
xchg
mov
xor
and
js
in
nop
xlat
insb
push
enter
xchg
fsubl
and
xor
dec
lock
jbe
inc
aas
arpl
push
inc
or
inc
dec
out
add
add
dec
aad
push
push
adc
inc
or
imul
push
mov
sbb
push
aas
dec
je
nop
fs
nop
inc
lods
es
inc
movsb
xchg
cmp
clc
cmpl
adc
stos
sbb
fistpl
mov
das
xor
int3
gs
and
pop
in
push
jb
mov
inc
loope
mov
inc
push
and
rclb
or
cmp
or
sub
addr16
sbb
xor
jmp
xchg
nop
mov
mov
mov
xlat
push
sub
out
push
test
pusha
jb
cmp
insb
add
and
jmp
rorb
push
bound
pop
pop
jecxz
cmp
dec
push
dec
cld
mov
and
inc
lods
and
push
sub
pop
movl
cmp
dec
cmp
push
fisubl
jl
xchg
sbbb
test
sbb
les
lds
xchg
in
sub
fmuls
jmp
sub
xchg
add
jg
push
cs
mov
mov
push
xchg
and
jge
xchg
push
or
mov
in
and
xchg
xchg
adc
adc
cmc
imul
pushf
lcall
push
mov
push
movsl
lds
insb
cmp
push
jno
insb
nop
rorl
sbb
mov
das
mov
and
push
testb
or
ret
adc
fdivs
insb
out
aam
lods
or
inc
add
mov
ja
out
js
insl
xchg
or
scas
mov
aas
shlb
fsubrs
xchg
push
adc
mov
jae
cmp
inc
popa
or
imul
xor
jo
push
scas
outsl
dec
push
outsl
js
mov
add
test
mov
push
and
cmp
jns
subb
pushf
jo
jmp
jo
and
inc
sub
adc
call
dec
int3
shl
add
dec
xor
lds
jo
loope
xor
addr16
in
and
inc
leave
jno
inc
lds
pop
or
imul
movl
in
dec
loopne
cltd
mov
imul
xchg
xor
mov
in
cmp
inc
fisubs
mov
push
test
test
aam
lods
mov
sbb
xchg
sbb
fnstenv
in
jae
ret
push
je
je
xchg
fwait
pop
mov
je
je
lock
or
jne
mov
jl
arpl
mov
inc
loopne
push
ret
mov
fildll
sub
jbe
pcmpeqd
enter
aam
popa
mov
das
ret
sbb
push
iret
inc
xchg
xchg
jbe
inc
xor
popa
mov
movsb
push
mov
jns
add
pop
push
daa
out
inc
shlb
mov
sbb
and
imul
pxor
in
mov
mov
inc
inc
xchg
jb
cmpl
xlat
lret
movsb
cmp
push
push
in
pushf
add
mov
enter
inc
adc
ficoml
push
sbb
mov
cmpl
pushf
mov
sub
jns
js
daa
jbe
jo
jnp
or
test
pop
cmp
xchg
test
mov
dec
clc
jns
pop
dec
enter
mov
loopne
loopne
dec
dec
jns
rol
cmp
jns
fwait
jp
or
test
jp
jmp
add
jp
addr16
push
shll
inc
xchg
dec
and
adc
xor
aaa
orl
adc
addps
push
xchg
xor
mov
mov
xor
mov
pop
jl
mov
jl
les
jl
dec
scas
ror
loope
fsubs
shrb
xchg
shlb
nop
mov
test
sbb
mov
outsb
scas
lcall
jno
or
sbb
xor
jge
dec
mov
or
xor
mov
loopne
dec
jo
mov
inc
push
test
pop
or
push
add
jge
mov
xor
dec
pop
in
and
xchg
adc
add
dec
orb
xchg
xor
inc
loopne
sbb
and
scas
inc
adc
cld
xchg
dec
xor
and
sub
xor
mov
adc
ss
fs
or
hlt
push
inc
mov
cwtl
dec
xor
test
adc
bound
add
cltd
xchg
nop
test
aam
pusha
mov
sti
or
scas
lods
pinsrw
scas
push
int
test
loopne
sbb
pop
leave
loopne
sub
in
popa
mov
addb
dec
adc
in
sub
push
or
shrl
in
xorl
pop
sub
xchg
test
dec
push
push
mov
dec
or
inc
xor
bound
enter
xor
xor
aam
and
pop
xor
fists
pop
mov
pusha
pop
inc
cmpsl
mov
enter
mov
lcall
in
fisubl
mov
mov
lock
dec
xchg
into
or
add
in
jmp
sub
les
sub
mov
pop
subps
ret
add
sub
adcl
cs
sub
fsubs
les
or
mov
loop
popa
test
loope
nop
and
xor
cmp
orb
xor
push
cmp
cmp
add
rolb
mov
sub
inc
adc
mov
subb
sub
xchg
mov
or
test
xchg
mov
call
and
call
out
xchg
sbb
xor
arpl
pop
pop
add
inc
in
inc
es
addl
mov
pushf
fmull
mov
aas
js
movsl
popa
cmp
adc
rorl
xchg
in
jge
mov
sbb
add
push
test
cmp
adcb
add
and
hlt
sbb
cmp
pusha
add
jl
bound
jb
rorb
sub
cwtl
fisttps
inc
js
movsb
inc
mov
jno
add
subb
or
xchg
mov
push
adcl
dec
dec
ret
add
pop
mov
xorb
mov
pop
rclb
les
and
add
adc
and
pop
or
pop
lea
rolb
inc
jae
movsb
jo
xchg
lock
dec
ss
call
or
add
xor
mov
inc
shl
popa
cmpsb
fisubl
inc
inc
insb
and
int3
ret
pusha
push
nop
fisttps
pop
inc
add
or
nop
mov
or
fs
mov
movsl
inc
popf
fs
pushf
jno
or
sub
jl
sbb
push
cmpsb
pop
int3
xor
mov
inc
test
mov
sbb
enter
pop
in
pop
cmpb
xor
pop
adc
push
lret
pop
push
lea
xchg
enter
or
mov
sub
pop
mov
insb
subb
mov
xor
xor
cmp
jmp
lcall
sbb
pusha
fsub
and
faddp
daa
cmp
cmp
jl
push
cmp
push
sbb
fistpl
add
cmp
dec
pop
and
and
out
ss
lds
in
xchg
les
call
mov
xchg
jmp
xchg
xchg
xor
xchg
aad
or
test
or
mov
push
movsb
cmc
shrb
nop
dec
fmull
adc
dec
dec
adc
sbb
sub
push
fs
enter
push
or
dec
xor
enter
test
add
adc
sbb
inc
leave
int3
inc
lock
loope
mov
and
mov
mov
les
rclb
lods
add
or
inc
call
cmpsb
cmpsb
add
inc
adc
pusha
mov
jge
add
cmp
imul
push
ret
shll
clc
dec
sub
mov
cmpsb
push
lds
dec
insb
rcll
loopne
hlt
lea
inc
mov
cld
enter
xor
in
xor
pop
rolb
inc
fs
lcall
add
cld
test
inc
or
and
pop
and
sbb
lcall
test
push
popa
lock
loopne
mov
cltd
fadds
cmp
fwait
pusha
sub
fstpt
jp
sub
ss
loope
fwait
test
adc
test
dec
sti
mov
leave
and
push
jl
inc
add
mov
adc
and
pop
roll
insb
xchg
imul
adc
aad
or
pusha
xor
lods
sti
cld
scas
mov
pushf
pop
das
jl
nop
jecxz
xor
and
sbb
pusha
and
test
insb
insl
or
les
xchg
cwtl
lea
lcall
cmpsl
bound
fsubrs
lods
jmp
test
sbb
xor
mov
add
jnp
pusha
insl
mov
movsb
sub
and
rcll
push
push
lds
lock
lahf
xor
in
enter
out
xor
inc
mov
adc
ss
sub
mov
fcomps
adc
push
mov
jne
inc
repnz
rorb
pushf
repz
sbb
cmp
sbb
mov
rdtsc
mov
jne
mov
in
arpl
mov
inc
lahf
adc
cmp
mov
adc
mov
push
fwait
loope
dec
sub
stos
rorl
xor
cmp
mov
lcall
and
or
fsubs
pop
shrb
js
arpl
mov
pop
and
ja
add
mov
ret
test
xchg
mov
loopne
xchg
outsb
and
cwtl
cmp
shlb
jecxz
xchg
xchg
mov
mov
enter
in
and
adc
movsb
push
les
je
xor
call
and
inc
imul
mov
jp
pusha
add
jecxz
pop
sbb
fmull
call
sbb
scas
cmpsl
sbb
call
dec
jl
cmpsl
aam
xor
sub
cs
pop
icebp
inc
mov
mov
adc
push
enter
call
and
inc
mov
cmp
lods
sbb
inc
stos
incl
fcoml
or
and
dec
add
aam
jg
jmp
xor
lods
mov
inc
rclb
call
idivl
stos
sbb
pop
inc
adc
sbb
imul
mov
subb
imul
sbb
add
lods
fsubs
subb
pop
in
mov
sbb
lods
imul
in
inc
push
adc
xchg
in
or
or
mov
mov
add
mov
fs
xor
js
mov
adc
lock
pop
push
jmp
enter
push
rcl
mov
test
fmul
nop
out
push
dec
imul
dec
push
sbb
xor
sbb
lahf
push
push
add
push
mov
in
xchg
mov
push
fcomip
adc
rorb
xlat
xchg
divb
aad
mov
inc
mov
or
mov
inc
cmp
test
gs
add
mov
int
jmp
mov
in
xor
ja
jns
lods
add
ss
and
cmp
out
mov
nop
push
add
fnsave
adc
jg
ret
shrb
stc
in
jnp
stos
mov
sub
mov
fcmovnbe
and
pop
or
es
cmp
aam
jae
and
out
sub
cmp
add
push
stc
mov
mov
xor
xchg
sahf
sub
and
imul
jae
or
pusha
add
xchg
fs
out
imull
lahf
cmc
imul
scas
nop
or
add
sbb
ja
dec
pushf
add
pop
or
adc
mov
shlb
push
aas
aad
daa
and
lods
and
mov
mov
and
mov
pop
out
mov
mov
xchg
and
loopne
jo
cmc
das
or
aam
iret
sub
sub
push
ret
sub
mov
inc
jge
mov
mov
adc
add
out
pop
adc
mov
rep
sahf
mov
mov
test
fdiv
cmp
jg
push
adc
fwait
int
sti
add
jle
push
mov
or
ss
aas
add
cld
rolb
mov
jo
or
cmp
dec
mov
fistpl
or
test
clc
jnp
mov
add
and
in
dec
rolb
das
mov
rcll
xchg
adc
or
cmp
mov
cmpl
test
add
nop
add
into
pop
adc
test
jns
mov
cmc
dec
push
cmpb
pop
sbb
leave
add
add
jbe,pn
shl
scas
divb
adc
add
pop
inc
sarb
sub
mov
push
cmpsl
arpl
and
insb
outsl
arpl
imul
inc
js
je
mov
and
jae
insl
add
arpl
outsl
add
add
add
add
gs
push
je
arpl
jne
jb
imulb
in
outsb
je
inc
imul
gs
xor
xor
imul
add
jo
insl
or
imul
enter
jmp
cmp
loopne
fs
arpl
and
jns
add
insl
mov
and
push
out
loopne
inc
inc
adc
mov
ja
add
jbe
dec
dec
imul
fnsave
push
push
jo
dec
in
jne
jle
jne
addr16
jae
add
insb
out
mov
ljmp
cmp
xor
push
xorl
push
outsb
and
pop
xor
mov
add
jns
ss
imul
out
popa
ss
jnp
jne
arpl
pop
out
pop
aaa
mov
daa
push
mov
imul
pop
out
in
cmpsb
addr16
ds
negl
fcmovnb
mov
iret
mov
pop
and
insb
jg
cmp
cld
mov
add
dec
and
pop
pop
rcrl
add
push
das
das
adc
dec
mov
inc
inc
gs
bound
dec
outsl
jbe
inc
mull
dec
arpl
jle
je
inc
jnp
cld
inc
jne
jne
xor
insb
xchg
outsb
xchg
pop
adc
cld
inc
jo
imul
mov
adc
into
mov
xchg
jae
mov
addr16
into
data16
out
jne
xor
lcall
gs
sbb
dec
pushf
mov
cmpsl
xor
push
jne
xchg
fistpll
out
dec
inc
aas
add
inc
add
std
in
outsb
push
dec
incl
fildll
mov
push
jl
in
jne
mov
inc
adc
shr
test
add
jbe
std
mov
or
dec
repnz
fidivl
es
adc
inc
mov
into
inc
inc
pop
pop
mov
add
mov
push
stos
fidivrl
sub
aaa
scas
rcl
and
and
jecxz
mov
arpl
scas
insl
push
push
pop
out
loopne
lcall
sbbl
mov
loop
addr16
sti
jp
sbb
imul
out
imul
pop
lret
sti
ficoms
fwait
mov
xorb
gs
bound
dec
ja
jnp
outsl
jmp
jo
mov
ja
xor
stos
insl
sub
addl
scas
fidivrs
pop
cmp
sub
imul
loopne
pop
ret
push
dec
sub
sbb
xchg
sub
jp
mov
or
pop
or
ret
lahf
popa
push
outsb
pop
inc
jnp
pop
or
loopne
fidivl
daa
inc
imul
out
xor
fadd
cmp
je
adc
movsl
cmp
in
sbb
mov
out
mov
xor
xchg
xor
fbld
inc
sbb
scas
js
push
das
jb
ret
add
js
fidivrl
cs
sub
daa
or
add
outsl
andl
imul
jg
popa
cmp
sub
pop
sub
stos
sbb
sahf
aaa
jg
cmpsb
mov
ja
iret
push
enter
ss
or
dec
fbstp
jne
jbe
jb
inc
mov
xchg
jne
pop
stos
nop
mov
jbe
xor
cmc
mov
js
das
rcrl
stos
popa
mov
push
adc
push
jo
insb
push
cmc
fistps
pop
mov
iret
arpl
inc
sbb
add
aaa
cmpsl
or
insl
lret
imul
jb
fs
imul
shrl
jnp
xor
push
dec
cmpsl
outsl
pop
sub
lock
das
xchg
fisubrl
add
cmp
cmp
stos
pop
enter
insl
lret
je
scas
cmp
jecxz
push
mov
mov
jae
subb
pop
pop
jecxz
ret
ja
push
sub
lock
xor
ja
mov
fs
jge
add
lret
xchg
or
or
inc
mov
adc
inc
sbb
enter
rcrb
sbbb
sbb
mov
pop
sahf
dec
and
xchg
das
pop
popf
loopne
fwait
lock
jns
cmp
mov
xchg
cld
mov
insb
dec
push
jl
cmp
add
mov
mov
sub
sub
jecxz
inc
mov
push
mov
fdivrl
das
or
loope,pn
push
in
add
cmp
mov
dec
insl
out
ret
divl
idivl
imul
inc
jnp
ret
inc
jecxz
mov
xchg
cmp
push
fwait
cmp
or
adc
es
sub
sub
sub
cs
xor
xor
xor
ss
cmp
cmp
mov
cmp
ds
inc
inc
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
das
cmpsb
mov
loop
pop
pop
pop
ljmp
pusha
popa
bound
gs
imul
outsb
outsl
jo
jb
je
jbe
js
jp
jl
jle
mov
adc
lcall
loopne
in
jnp
inc
add
orb
sar
std
aas
ds
jno
icebp
pusha
inc
mov
clc
ret
movsl
add
les
jno
push
imul
outsl
imul
push
arpl
iret
sbb
js
xor
into
mov
js
addl
je
pop
dec
pop
push
outsl
push
jnp
push
sub
outsb
jne
insb
call
add
jle
xchg
imulb
add
add
add
je
push
cld
and
push
pop
push
add
xor
push
push
pop
hlt
and
imul
or
pusha
add
js
or
pushl
cmp
add
sbb
addb
cmp
push
xchg
test
add
fisubs
pop
daa
push
cmpb
in
popf
fnstenv
xor
int3
push
lods
pop
into
jo
add
push
or
loopne
mov
jbe
outsb
imul
push
and
jo
add
sbb
push
sub
and
or
daa
iret
lea
mov
nop
xchg
xchg
dec
es
xchg
mov
mov
cmp
scas
or
mov
enter
movsb
mov
and
nop
inc
push
cmp
out
xchg
inc
or
movsb
mov
movsb
nop
int3
idivb
adc
stos
stos
mov
cs
lahf
push
cltd
nop
cmp
add
and
inc
add
es
test
add
fcmovb
push
and
add
add
add
pop
sbb
push
add
cmp
add
add
mov
or
sbb
sbb
in
pop
insl
sbb
fildll
pop
roll
inc
add
addl
xchg
lea
xchg
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
mov
jmp
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
ret
inc
enter
int3
int
iret
rcl
rcl
aam
xlat
fcomp
fcmovu
loopne
loop
jmp
in
out
call
in
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
std
incl
test
bound
test
mov
mov
sub
les
rolb
push
imul
sbb
fs
cs
jae
jb
bound
arpl
data16
cmpsl
out
outsl
jb
xor
ss
popa
lret
divb
xor
gs
in
jo
pop
lea
loopne
filds
dec
mov
outsl
js
push
add
fistpl
xchg
push
and
insl
jo
jo
and
and
pop
add
shlb
aaa
insb
les
dec
imul
ret
inc
mov
fcmovnu
pop
fstpt
dec
inc
jb
jns
daa
push
push
movsb
and
in
jns
mov
insb
and
cmp
and
insl
push
rcrb
fsubrl
push
jbe
push
lock
xor
outsb
pop
jb
divl
sbb
and
xor
incb
pusha
aaa
push
jns
xorl
push
fisubs
mov
mov
popl
cs
mov
cmp
pop
and
push
sbb
xchg
pop
daa
bound
insl
adc
adc
or
bound
pop
pop
push
push
jae
mov
popf
or
cmp
out
outsb
rolb
xor
imul
subl
gs
mov
adc
jbe
mov
mov
dec
insb
inc
push
push
push
push
dec
testl
fnstenv
repnz
and
outsb
enter
mov
fbld
dec
jge
or
imul
push
imul
push
jo
or
xchg
or
sbb
xor
das
gs
jne
je
jnp
mov
inc
jg
sub
jno
pusha
push
or
push
outsl
xchg
lods
jo
aaa
daa
xchg
mov
popw
insl
lahf
cmpsl
cmp
es
or
ds
and
sub
inc
jl
push
xchg
jo
jle
mov
imul
sub
dec
loope
imull
pop
push
cmp
xchg
and
push
dec
fst
mov
inc
dec
pop
shlb
pop
jne
jb
sbb
push
loopne,pt
popf
ror
das
jo
ss
gs
or
xorb
inc
cmpb
dec
sbb
mov
cwtl
or
sub
popa
sub
cmp
push
scas
fs
jns
dec
shll
sahf
out
sahf
xorb
dec
jns
int
inc
inc
xor
shrl
out
pop
movsl
and
sbb
adc
adc
mov
push
sarb
hlt
push
icebp
jmp
jmp
push
lock
push
jnp
repz
cmp
push
inc
call
iret
in
fsubl
push
fadds
iret
repz
aam
int3
enter
cmp
cmp
mov
into
repz
mov
jns
iret
jmp
dec
push
sub
mov
enter
out
test
and
repz
mov
loopne
int3
les
mov
iret
repz
loopne
mov
out
cmp
mov
mov
mov
loop
ficomps
fidivs
xor
test
js
data16
out
push
dec
bound
outsb
push
xor
dec
adc
shrl
push
mov
insb
fs
sbb
xchg
dec
aas
xor
lahf
push
out
test
gs
push
and
sub
add
inc
dec
push
push
out
stos
add
and
xor
push
dec
inc
dec
cmovns
add
mov
push
adc
sub
adc
sub
pop
or
popa
into
mov
mov
jnp
inc
loop
mov
cld
cmpl
inc
pop
clc
lret
sbb
jge
aas
bnd
jge
arpl
cmp
repnz
mov
adc
fisubrs
and
in
pop
xchg
cmp
dec
imul
lret
add
int
incl
mov
mov
sub
fwait
ss
out
paddsb
int
jns
ds
xor
incb
int3
dec
decl
jns
dec
popf
pxor
xor
lret
aaa
push
div
inc
sub
dec
xchg
cmp
cmpsb
call
shrl
pop
and
xchg
lret
sahf
icebp
mov
cld
or
decl
loopne
cmp
inc
mov
xchg
push
pop
xchg
sub
pop
mov
pushl
ljmp
orb
popa
push
or
scas
int
das
js
fimuls
adc
jg
xchg
dec
inc
scas
lods
dec
lock
xor
pop
mov
nop
adc
pop
pop
repnz
mov
fistpl
lret
es
iret
in
ds
inc
push
dec
push
push
adc
out
ret
or
outsb
jbe
and
imul
mov
push
into
mov
fdivrs
inc
dec
pop
cmp
adc
dec
cmp
cmp
inc
and
call
dec
pop
adc
and
pop
dec
xor
and
dec
adc
imul
fisubrl
dec
xor
dec
dec
inc
adc
xor
jbe
in
sti
testb
ss
xchg
add
adc
neg
in
sbb
sbb
dec
sub
sbb
push
inc
in
insl
out
and
adc
add
dec
and
lods
pop
in
fucomi
fisttps
xor
dec
cmp
aas
adc
ljmp
pop
jnp
mov
es
push
sub
inc
pop
push
xor
sbb
inc
pop
inc
dec
inc
out
in
out
sti
inc
inc
push
push
and
and
daa
adc
daa
inc
sub
inc
dec
sbb
inc
or
and
inc
inc
sbb
adc
inc
sub
sub
mov
push
inc
sbb
pop
lret
mov
and
sbb
pop
aad
daa
stc
fisubl
xor
cmp
pop
sub
cmp
es
test
je
lock
ficompl
push
cmp
push
cmp
dec
fsubrp
mov
mov
inc
and
adc
push
sbb
sbb
cmp
and
fisubrl
push
jo
in
add
mov
adc
fimull
dec
push
add
int3
xor
xor
cmp
mov
jg
clc
xchg
push
sbb
dec
xor
adc
js
sub
mov
push
cmp
imul
clc
out
dec
and
lock
jg
sbb
xchg
and
or
das
sbb
push
or
sub
add
pop
dec
decb
pop
add
inc
and
sub
inc
sbb
push
jo
fbld
ja
sbb
mov
sbb
push
jnp
add
mov
push
adc
dec
cwtl
in
push
cmp
out
fdivrp
mov
add
jecxz
into
iret
out
sahf
sarl
repz
es
push
fwait
lcall
test
push
add
repz
dec
imul
clc
lods
xor
sbb
and
push
incl
sbb
push
sub
xor
push
sub
sbb
cmp
outsl
insl
popa
clc
add
and
arpl
fsubrp
push
repnz
gs
mov
jne
cltd
cs
fcmovne
add
push
xor
add
icebp
jnp
cvttps2pi
movsb
pop
or
lock
aad
push
rcrl
inc
repz
idivl
pop
int
dec
iret
idivb
das
mov
test
js
cmp
cmc
push
ror
dec
push
sub
push
sub
and
cmpsb
lds
or
adc
aam
adc
pop
int
and
cmp
cs
notl
mov
add
push
add
inc
sbb
or
js
pop
jbe
movsb
out
ja
push
and
jo
push
sbb
adc
or
cmc
push
mov
nop
sub
bound
div
push
cmp
push
inc
cmpsb
insl
push
jnp
stos
sbb
push
fsubrs
icebp
jecxz
lcall
inc
sbb
fstpt
sub
cmp
sub
push
add
xor
or
and
mov
push
pusha
sub
xor
nopl
mov
sbb
sbb
mov
sbb
hlt
shl
cmp
sub
cmp
adc
fiaddl
out
cmp
repnz
adc
push
push
dec
dec
jbe
xchg
gs
inc
mov
stc
cmpsl
mov
pop
dec
push
adc
and
sbb
movsb
cmp
dec
xor
xchg
xchg
sbb
lods
daa
sub
and
xchg
cld
cmp
adc
scas
inc
jg
aaa
xor
mov
xor
mov
xorl
mov
rclb
fwait
ret
popa
and
mov
sub
xchg
push
fs
and
pop
mov
push
inc
ds
push
mov
xchg
pop
push
pop
orb
pop
push
out
icebp
cmp
pop
cltd
adc
jnp
sarl
or
lret
into
ss
and
push
xchg
xchg
stos
pop
sbb
and
inc
xor
xor
mov
pop
pop
mov
pop
cld
add
add
nop
mov
sub
add
xchg
loope
mov
push
pop
cwtl
sbb
data16
mov
sbb
clc
fmul
ficomps
pop
xor
pop
movb
sbb
pop
divb
mov
adc
xchg
ja
adc
pop
mov
and
dec
pusha
insl
int3
call
cltd
in
xor
or
xor
push
popa
cmp
loope
scas
daa
int
cmp
xor
pop
mov
loop
mov
xor
dec
inc
popa
push
jge
adcl
jmp
xor
leave
or
sub
jl
push
fnstenv
mov
dec
fwait
and
pop
push
xlat
pop
adc
pop
xor
xlat
pop
cli
push
push
sub
jne
sbb
push
adc
cmp
int
cwtl
lahf
and
push
scas
and
xor
xor
xorl
pop
sbb
sbb
pop
add
gs
or
rcll
xchg
cs
push
mov
xor
subl
push
cmp
push
pop
xchg
push
call
mov
add
loopne
into
call
fisubrs
dec
flds
cmp
daa
insb
fimull
mov
push
push
fsubrs
pop
push
ds
sbb
add
cmp
and
jp
loopne
add
lea
or
loope
dec
adc
leave
sub
sbb
loope
mov
mov
add
cmp
sub
xor
inc
sbb
cmp
add
inc
sub
sub
add
dec
sti
fmuls
cmovle
aaa
and
jno
imull
pop
inc
and
sub
dec
inc
jae
push
push
and
rorb
xor
pop
or
xor
mov
add
test
mov
jo
outsl
js
sub
imul
aam
ja
and
das
add
pop
push
dec
decl
sub
pop
or
push
mov
push
sub
aaa
pop
pop
cmp
mov
stos
push
sub
pusha
gs
add
adc
sub
insl
and
pop
dec
pop
cmc
jp
dec
sbb
in
scas
sbb
sbb
inc
and
xor
pop
xchg
mov
test
jb
mov
dec
aaa
adc
mov
push
cmpsl
push
lret
es
push
repz
xchg
js
leave
xor
jae
ret
arpl
adc
ss
push
adc
add
push
inc
rsm
mull
mov
repnz
push
mov
sti
push
bswap
lods
ljmp
pop
bound
jle
push
rcr
insb
push
je
and
jae
movl
je
add
cwtl
mov
mov
sub
xchg
mov
and
dec
test
mov
insl
jle
adc
adc
push
adc
fs
int
adc
loop
inc
int3
arpl
lret
push
xor
pop
lock
call
daa
dec
xchg
add
repz
pop
jg
lahf
sub
inc
and
das
inc
inc
sbb
sbb
sub
pop
sub
mov
mov
or
sbb
sbb
and
xor
push
push
sbb
test
loopne
mov
add
adc
clc
or
incb
xor
pop
push
cmp
fwait
sub
sbb
in
push
push
sbb
mov
out
xchg
pop
dec
aaa
xor
pop
test
push
inc
mov
xor
xor
pop
mov
mov
sbb
adc
ret
daa
and
or
mov
sbbb
cmp
xchg
inc
jb
sub
adc
cmp
dec
adc
scas
xor
xor
sub
jno
mov
dec
pop
adc
pop
popa
sbb
fwait
or
sub
scas
or
xchg
adc
lock
dec
dec
push
aam
or
dec
mov
pop
push
je
cmp
sbb
xor
popf
adc
dec
xor
xor
sub
xor
sub
push
push
mov
sbb
fisubl
or
or
and
sarl
jbe
fldlg2
out
movaps
insb
mov
mov
sub
sub
mov
sub
push
ljmp
cmp
add
pop
cs
sbbb
dec
xor
sbb
mov
push
in
push
jo
lret
pop
test
popl
rolb
dec
pop
mov
jl
push
cmp
mov
add
aaa
pop
sbb
jae
sbb
lock
cmpsb
aam
xor
sbb
rolb
cltd
cli
sub
sbb
push
jb
loopne
sub
sbb
ret
mov
jnp
mov
sbb
sub
or
lock
xchg
pop
fisubrs
pop
data16
out
and
xlat
adc
bound
xor
cltd
dec
sbb
push
lock
pop
in
push
bound
and
add
ret
sub
cmp
pop
or
pop
nop
pop
ret
fdivs
adc
out
sahf
adc
sbb
cmp
mov
pop
pop
jae
mov
mov
cltd
push
and
mov
pop
mov
inc
sub
fsubp
les
out
leave
mov
mov
sub
push
mov
cmp
popa
inc
lds
aaa
dec
test
pop
outsl
mulps
pop
pop
mov
cmp
das
ficoml
jg
pushf
add
lcall
xchg
cmp
stos
lcall
scas
adc
pop
jnp
mov
dec
push
add
push
or
sub
outsl
addb
aaa
and
imul
mov
adc
imul
cs
xor
sbb
sbb
add
dec
inc
adc
sbb
daa
sub
adc
inc
and
daa
pop
sti
cs
and
aam
mov
dec
and
hlt
pop
sub
sub
dec
inc
pop
adc
push
jo
or
sbb
jbe
pop
push
cmp
outsl
adc
xlat
clc
push
daa
aaa
inc
out
sub
ror
dec
out
and
sbbb
fistps
dec
jno
mov
cmp
into
pop
inc
cmp
and
sahf
inc
mov
xor
and
mov
adc
mov
push
sbb
cmp
adc
dec
dec
cmp
pop
push
mov
js
imul
push
mov
mov
inc
xor
sbbl
sbb
pop
test
mov
popa
call
divb
call
sub
out
nopl
xlat
fcmovnu
and
or
mov
xor
movsl
mov
xor
stos
sub
mov
pop
xchg
pop
xor
fmull
adc
fstpl
jmp
or
and
sbb
inc
mov
cmp
sbb
adc
movsl
out
and
shl
aad
stos
fsts
add
daa
inc
cmp
lret
addr16
mov
and
pop
pop
push
insl
cmp
sbb
mov
xorl
adcl
jmp
loope
es
xchg
mov
or
xor
pop
daa
sub
test
xchg
dec
lods
cmp
lahf
or
pop
fiaddl
gs
gs
xor
cs
mov
inc
jb
jbe
push
test
push
ret
arpl
cmc
jg
fs
xchg
or
daa
inc
pop
inc
or
dec
dec
push
cmp
xor
les
or
cmp
aad
bound
add
dec
pop
or
int3
cmp
andnps
push
pop
push
pop
cmp
lea
movsl
pop
fists
dec
push
pop
dec
pushf
push
imul
mov
mulb
pop
push
sub
sub
mov
das
sbb
fnstcw
cmc
jbe
daa
sbb
mov
add
dec
sbb
jmp
arpl
push
mov
pop
mov
psubd
dec
sbb
and
imul
jnp
push
sub
adc
sub
and
cs
xor
adc
push
lcall
icebp
aaa
jo
insl
or
sub
cli
add
pop
add
sub
push
ficompl
gs
ja
fs
push
xchg
xor
push
inc
addb
outsl
jb
jp
add
and
mov
rolb
shll
jo
cmp
das
sbb
pop
inc
jb
outsl
insb
cmp
adc
xor
jecxz
test
add
mov
push
mov
fwait
in
push
mov
jg
into
lret
insb
ss
in
movsl
ds
pop
jns
mul
push
gs
sarl
out
fldcw
icebp
ret
nop
negb
push
mov
fmul
push
outsb
xchg
fs
and
insb
push
jle
pop
repz
sbb
arpl
int
add
insl
sbb
jg
xchg
sub
jle
je
jae
cmpsl
xlat
mov
scas
data16
fcmovbe
push
or
cmp
add
jae
rcrb
das
push
add
lret
out
push
dec
add
and
fnsave
pop
cmp
xor
cmp
jne
jo
arpl
xor
push
sbb
push
jne
dec
xor
pop
and
imul
add
daa
or
arpl
inc
fistpl
push
add
dec
or
inc
cs
divb
or
loope
shlb
adc
jb
cmp
adc
xor
inc
inc
jbe
lods
xor
xor
stos
mov
xor
pop
add
aaa
cmp
mov
adc
es
popa
mov
dec
dec
loopne
sahf
add
imul
inc
adc
and
je
jp
test
out
cmp
jmp
popa
lea
adc
inc
adc
or
push
cmp
xchg
loopne
cmp
inc
std
sbb
or
sub
lods
add
into
lea
sbb
movb
mov
sbb
sbb
pop
sbb
subb
push
lods
or
inc
and
insb
cmp
insl
and
outsl
das
pop
mov
sub
orb
scas
js
dec
addr16
sbb
addb
sub
push
and
cmp
jo
cli
jbe
dec
add
mov
shll
push
push
push
das
shll
add
and
cmp
and
insb
lods
and
sbb
mov
mov
inc
das
jle
push
shr
cwtl
sub
dec
in
and
inc
mov
in
stos
leave
add
xor
push
inc
push
pop
daa
pop
xchg
ficoml
push
inc
push
inc
mov
data16
inc
outsb
arpl
push
subb
ss
mov
cmp
subb
adc
lods
push
popf
in
aad
adc
inc
pop
push
movsb
mov
leave
negb
cmp
shrb
mov
add
xchg
and
inc
pop
out
daa
mov
adc
dec
dec
jge
mov
rolb
mov
mov
cmp
mov
add
adc
mov
ja
mov
lods
pop
dec
movsl
enter
push
push
mov
inc
push
insl
ss
adc
lcall
or
mov
sub
sub
inc
pop
mov
sbb
mov
ds
pop
sbb
ljmp
lods
sub
and
jle
jo
fsubs
movsb
call
sbb
pop
test
xor
dec
xchg
add
add
mov
pop
add
mov
pusha
pop
adc
adc
nop
push
and
xor
aaa
xor
dec
add
cmc
subb
xchg
mov
add
dec
push
push
inc
in
cli
mov
add
push
dec
stos
inc
jb
pop
xchg
cs
outsl
xchg
dec
jbe
push
dec
imul
cwtl
push
adc
push
pop
fcomi
sub
rorl
shrb
das
jb
rcrl
xor
mov
mov
dec
nop
inc
orb
dec
pop
pusha
dec
push
inc
daa
mov
insb
inc
js
xor
inc
add
push
loope
hlt
xchg
add
dec
pop
cmp
int
int3
dec
dec
pusha
pop
shrb
dec
adc
push
fstpl
inc
cmp
xor
sub
dec
xor
sbb
sub
inc
inc
push
xchg
jge
sti
jne
scas
sub
inc
mov
imul
scas
popa
jo
and
das
js
ljmp
jne
add
gs
outsb
and
push
push
mov
and
ds
bound
int3
bound
xchg
call
adc
mov
sbb
jae
mov
and
pop
les
ja
test
negb
dec
cmp
inc
sbb
test
xor
push
imul
mov
xchg
xor
inc
dec
and
add
sub
je
jns
js
pop
inc
sbb
les
out
push
daa
push
daa
lret
xorb
cmovle
jbe
dec
test
inc
fiadds
push
sub
push
push
sbb
loopne
int3
in
xchg
mov
sahf
push
jbe
sub
and
sahf
adc
cmp
dec
xor
sbb
and
test
out
sahf
adcl
fidivl
ret
pop
scas
cmp
add
rcrl
lahf
xchg
je
jb
dec
mov
je
push
push
and
aad
fstps
mov
addr16
les
push
mov
sbb
add
ss
fmuls
out
cmpl
mov
lods
jg
adc
popf
out
fisubs
mov
repz
xlat
pop
iret
inc
test
adc
jns
jnp
jo,pn
pop
imul
cmpsb
or
push
pop
mov
push
sbb
movsb
jp
push
mov
rclb
popa
scas
jl
push
push
mov
lahf
idivb
jg
mov
or
mov
pop
sbb
scas
sbb
cmpsb
mov
add
push
xorb
fisubs
sub
push
sti
push
mov
sti
mov
testb
inc
mov
adc
mov
push
cmpsb
pop
cs
push
inc
push
sbb
mov
lea
idivl
andb
int
fnstcw
movsb
sbbb
fdivrs
inc
adc
jnp
iret
testb
ss
xor
sti
push
insl
fistpll
lahf
das
data16
lcall
mov
pop
mov
cmp
fldenv
outsl
mov
mov
pop
testb
jge
jecxz
push
ret
mov
add
fidivs
push
pop
sbb
iret
jmp
in
stos
cmp
xchg
ss
movsl
imul
les
fiaddl
js
popf
testl
ret
shlb
testb
push
jnp
jnp
enter
adc
xor
in
clc
mov
mov
mov
mov
addr16
outsb
dec
push
mov
sarb
rep
xchg
push
daa
inc
popa
cmpb
int
mov
sbb
xor
ret
xchg
xchg
xchg
movsl
outsl
call
mov
push
loop
mov
icebp
mov
rep
sahf
addr16
jo
sti
cwtl
and
iret
jns
mov
out
sahf
sub
subb
iret
out
pushf
sub
push
jae
out
cmp
xchg
stos
int3
negb
mov
repz
mov
movsb
movsl
jmp
aad
pop
dec
sbb
scas
cwtl
sub
adc
incl
out
imul
adc
or
ljmp
popa
stc
push
mov
xor
adc
mov
pop
mov
push
mov
lds
mov
loopne
mov
jbe
cmpsb
mov
and
pop
sbb
ljmp
in
enter
adc
or
adc
aas
pusha
or
jne
mov
out
pop
push
and
inc
pop
dec
sbb
inc
mulb
cli
mov
mov
aas
inc
inc
cs
cmp
mov
inc
sbb
mov
mov
fbstp
push
imul
push
dec
sub
jecxz
push
orl
cmp
mov
push
lcall
cmpsl
aam
dec
and
push
push
imul
movsb
pushf
movsl
or
loope
pop
adc
push
push
and
push
rorb
cmpsb
inc
jne
pusha
pop
imul
pop
pop
ret
inc
inc
dec
xchg
xor
jecxz
aaa
jnp
lahf
xor
es
sub
mov
das
xchg
push
add
inc
incl
cwtl
das
mov
inc
aaa
jno
sti
shlb
ret
icebp
adc
pop
movsb
cmpb
aad
lcall
cwtl
stos
pop
fadds
pop
adcl
test
and
jge
push
je
mov
andb
lcall
in
inc
mov
bswap
mov
jmp
dec
fsubrl
stc
jbe
push
ds
insl
xor
jg
mov
inc
xchg
cmpsl
aad
arpl
push
addr16
ljmp
adc
or
cs
insl
sub
adc
or
or
cs
ret
sub
pushl
mov
data16
mov
call
cltd
test
ljmp
push
shll
ja
daa
mov
mov
mov
sbb
dec
stos
fmuls
lret
rep
ljmp
push
outsl
arpl
test
add
mov
mov
movsb
mull
pushl
addr16
push
scas
addr16
cmp
dec
movsl
jg
push
push
mov
fwait
stos
flds
inc
mov
loopne
std
push
mov
bound
sub
dec
and
dec
and
push
in
jmp
inc
push
pop
inc
sub
pop
cmp
jge
and
addr16
and
dec
outsb
imul
pop
fwait
incl
and
cmp
and
jae
sub
ja
sub
push
call
push
sub
pop
js
pop
gs
outsl
jbe
jp
cmp
dec
sub
push
insl
jb
xor
pop
dec
add
push
add
push
sub
push
and
or
das
das
pop
daa
sbb
aaa
inc
inc
inc
adc
das
sub
stc
faddp
pop
sbb
aas
sbb
addb
iret
outsb
in
sbb
aaa
pop
out
imul
mov
inc
xor
sub
sub
cmpsl
lock
daa
push
or
pop
cmp
inc
add
inc
inc
cmp
adc
aaa
push
xor
wrmsr
jne
xchg
cmpsb
push
xor
xor
push
cmc
fcmovu
pop
xor
jle
push
mov
add
getsec
inc
push
push
aaa
jl,pt
fisubrl
ds
ucomiss
ss
pop
add
dec
cltd
movsl
movsl
pop
dec
gs
ljmp
pop
sbb
cmpsb
adc
sbb
mov
dec
and
mov
pushf
rol
inc
adc
pop
add
xor
pop
cmp
fsubr
adc
push
sbb
lahf
std
mov
inc
xor
pop
pop
xor
xlat
push
xor
or
pop
sbb
clc
mov
mov
jns
es
test
test
sub
je
mov
xor
mov
xor
sbb
push
cwtl
in
sub
cmpl
sahf
sbb
rolb
cmp
push
and
jnp
dec
dec
loopne
int
push
or
xor
pop
inc
loope
imul
adc
jbe
mov
lods
pusha
adc
inc
sbb
es
and
sub
in
push
sbb
mov
fadds
pop
jecxz
mov
mov
aaa
mov
gs
pop
sbb
dec
and
add
sbb
xchg
push
int3
out
call
mov
jo
lret
push
aam
mov
jge
dec
add
fwait
jo
fsubl
and
adc
mov
sbb
scas
add
push
xorl
fcoml
rcrb
mov
fistpl
xor
data16
xchg
cmp
jno
jl
add
sub
lea
adc
dec
adc
mov
add
sbb
cmp
dec
push
lcall
ret
inc
sub
mov
cmp
sbb
iret
add
adc
jp
xor
mov
push
add
add
or
jae
add
outsb
outsb
je
xor
mov
jo
push
imul
pop
insl
gs
cmp
pop
mov
inc
add
test
movsl
es
inc
push
mov
aad
insl
cmp
xor
sub
xchg
out
sub
push
dec
dec
inc
add
mov
push
popa
je
inc
jg
pop
loope
xchg
insl
xor
out
ret
sti
inc
inc
sbb
adc
pop
sbb
inc
mov
gs
push
cmp
sahf
pop
imul
fmuls
pop
pop
or
stos
push
fstl
aaa
and
mov
mov
mov
movsl
lock
test
push
mov
xor
pop
aam
inc
dec
ja
aaa
adc
mov
add
or
aas
shll
fmuls
dec
pop
mov
mov
xor
daa
push
stos
xor
cmp
push
sti
ss
xchg
lcall
ret
test
pop
sbb
cwtl
pop
mov
pop
push
les
lar
mov
pop
pop
push
mov
sbb
add
inc
addl
fsubl
popa
dec
add
or
pop
pop
push
ja,pn
jb
pop
lock
dec
pop
in
jae
inc
jne
add
mov
sub
xor
cmp
inc
mov
fs
push
jl
add
fstps
mov
test
sbb
stos
jg
sub
test
sbb
fcomps
xor
pop
adc
and
push
or
je
stos
addr16
roll
push
enter
lock
mov
sub
inc
sub
adc
imul
and
imul
push
punpcklwd
jns
push
and
inc
mov
or
shlb
frstor
cmp
xchg
aam
dec
adc
bt
das
cmpsb
sbb
into
scas
dec
sbb
ds
cmp
or
inc
adc
push
push
dec
stos
mov
xchg
ja
mov
ja
dec
dec
cmc
je
cwtl
data16
and
xchg
mov
push
and
pop
sub
inc
xor
mov
pop
sahf
arpl
push
lcall
das
dec
sbb
xchg
add
jne
lahf
push
mov
ja
ja
push
inc
pop
arpl
jp
outsb
jns
fs
dec
popa
and
inc
push
rorl
outsb
sub
into
or
sbb
pop
cmpsb
sbb
cmp
lea
mov
lahf
and
add
dec
push
or
imul
lods
pop
jnp
fwait
mov
cmp
sbb
out
int
fimuls
pop
pop
sbb
lcall
xor
insb
jnp
pop
dec
pop
movsl
dec
fcmovu
orw
inc
sub
cs
dec
inc
stos
push
push
cmpsl
rcrl
imul
lods
fsubrs
lahf
push
add
jmp
cmp
rolb
push
cltd
add
rclb
push
dec
add
mov
mov
add
and
ret
daa
mov
into
inc
and
inc
sub
testb
pop
add
cmp
inc
or
push
add
pop
inc
jo
fcomps
or
push
jne
loopne
mov
or
dec
mov
inc
push
js
fstpl
add
dec
jae
push
popa
mov
adc
pop
outsl
dec
addb
inc
jbe
xor
push
inc
inc
xchg
imul
dec
outsb
push
je
scas
or
add
insb
cmp
add
push
push
inc
dec
push
inc
pop
push
dec
inc
dec
lods
dec
push
or
cmp
xchg
in
xor
inc
fwait
or
daa
dec
push
add
rclb
insl
inc
cli
inc
aas
mov
inc
dec
add
loop
jp
mov
inc
adc
ret
adc
dec
orb
jl
pop
pushf
cwtl
or
lods
jne
fcoml
loopne
addr16
test
aaa
jo
or
es
ret
jb
in
cmp
sub
insl
scas
es
push
mov
movsb
daa
jno
inc
and
or
mov
es
cs
je
push
lret
leave
addr16
jo
and
jno
outsl
fwait
movsl
push
fnstsw
ds
push
fs
je
or
xchg
or
divl
xor
xor
pushf
fildll
roll
xor
cmp
xor
and
xor
push
xor
xor
cmp
jbe
ds
add
repnz
sub
adc
push
sbb
or
fildl
jae
or
push
push
pop
jmp
dec
sub
mov
adc
lret
dec
test
mov
loop
sub
daa
sbb
push
test
push
mov
or
mov
hlt
es
adc
dec
mov
mov
or
adc
and
sub
orb
mov
and
or
ljmp
arpl
pop
icebp
sbb
sbb
pop
adc
icebp
add
in
ficompl
icebp
stos
push
or
push
and
outsl
adcl
outsb
int3
aas
adc
outsl
iret
mov
dec
push
fs
test
cmp
lock
aaa
dec
mov
test
sub
sub
or
cmpl
test
xor
rorb
xchg
sub
pop
loop
xor
cs
mov
mov
adc
stos
jbe
sbb
out
das
xor
popf
das
push
rclb
lret
shlb
int3
das
add
jo
mov
je
and
mov
dec
xor
clc
mov
imul
xchg
adc
aad
push
cmpsl
ret
aaa
das
ds
hlt
push
dec
pop
call
mov
cmp
daa
das
cmp
xorl
sahf
xor
psrld
push
lahf
mov
das
lods
daa
lea
mov
adc
stos
mov
movsl
mov
or
call
pusha
mov
das
notl
adc
aaa
iret
lret
or
jmp
stos
test
pop
ret
daa
sbb
imul
popa
daa
pop
loop
pop
insb
xchg
in
aam
mov
xlat
sub
jae
insl
and
pop
inc
dec
and
pop
sbb
mov
addb
pop
or
xchg
rolb
cmp
mov
insl
rcr
scas
pop
cltd
adc
adc
xchg
push
xor
outsb
outsb
popl
cmp
pop
jnp
pop
int
addr16
inc
adc
pop
jg
in
loopne
lret
xchg
sub
add
pusha
lods
jmp
pop
inc
mov
mov
push
imul
fildl
lret
int3
js
push
outsl
leave
sbb
mov
adcb
ds
add
data16
nop
outsb
mov
das
ss
iret
xor
xor
sbb
out
xchg
pop
andb
fwait
jne
dec
dec
js
xchg
xor
jbe
ja
mov
pop
xor
aad
inc
ss
add
adc
jnp
lock
stc
and
xchg
cmpsb
and
pop
dec
add
push
xor
call
loopne
adc
movb
js
dec
push
inc
test
loope
dec
mov
sbb
and
jmp
daa
pop
ffreep
adc
inc
adc
or
in
pop
icebp
inc
shr
dec
adc
pop
mov
movsl
pop
pop
dec
dec
push
nop
fmull
cmpl
cmp
lret
dec
rolb
xchg
or
jb
xchg
adc
and
mov
or
fistpl
stc
sbb
push
adc
subl
add
xor
repz
lret
clc
cmp
sbb
xor
pusha
sbb
xchg
dec
loope
sbb
rcll
add
push
pop
inc
or
push
xor
scas
sbb
daa
cmp
dec
pop
cmp
loope
fld
sbb
and
xchg
loope
pop
enter
mov
addb
push
imul
xor
pop
fistps
adc
adc
dec
push
cmp
adc
sub
movsl
inc
cld
mov
repnz
mov
jle
adc
xor
adc
jmp
adc
ja
cmp
jmp
xor
pop
dec
adc
jns
and
jnp
nop
pushf
add
test
or
xchg
adc
cmp
int
lods
rcr
dec
adc
xor
frstor
shll
xor
mov
xor
sub
cwtl
adc
data16
sbb
lahf
inc
lret
orb
and
adc
push
push
out
sub
adc
aas
sbb
das
jmp
iret
mov
es
mov
sbb
push
sub
push
or
sbb
fisttpll
pop
xchg
and
inc
aas
das
fimull
jno
aaa
cmovp
rolb
xchg
adc
call
sbb
cmpsl
rorl
mov
iret
mov
adc
pop
sbb
and
stc
cmp
repz
stc
xor
cmpsl
dec
cltd
or
xchg
mov
add
add
pop
sbb
aaa
mov
mov
mov
sbb
and
sub
xor
sahf
int
sbb
push
mov
mov
mov
popa
xchg
add
shrb
mov
int3
insb
ret
sub
shrb
xchg
pop
insb
ds
adc
pop
add
fcompl
sbb
lret
bswap
pusha
ss
add
shlb
loopne
fwait
inc
stc
das
incl
push
mov
int
aam
add
jbe
adc
jb
dec
ja
popa
push
pushf
inc
addb
sbb
pop
jne
lds
mov
dec
xorl
and
inc
inc
mov
pop
adc
push
outsl
iret
movb
add
push
inc
dec
sbb
mov
and
sub
inc
inc
cmp
ljmp
popa
cmpb
pop
inc
sub
cmp
add
or
and
adc
xor
sbb
pop
pop
push
push
pop
pop
sbb
xor
pop
push
das
inc
sub
add
and
das
cmp
js
sbb
ds
ds
inc
inc
add
xor
orb
aas
shlb
jb
dec
out
inc
push
push
dec
pop
mov
mov
inc
sub
sub
pop
adc
xor
pop
sbb
add
inc
cmp
pop
xchg
decl
lock
and
ss
push
sbb
les
xor
sbb
pushl
adc
dec
sub
sbb
inc
push
cmp
xor
cmp
pop
xor
push
inc
sbbl
test
inc
popf
sbb
adc
adc
add
add
lret
add
out
pop
add
mov
push
dec
cmp
cmp
add
pop
or
sbb
and
inc
pop
push
xchg
ficoml
cmc
dec
add
push
notl
in
adc
notb
pop
mov
xchg
pop
scas
mov
inc
xor
cs
adcl
and
aas
mov
pop
xchg
mov
adc
pop
push
sbb
ret
es
fdivs
lret
add
test
mov
push
test
icebp
inc
data16
cmp
add
push
push
and
aaa
aam
repnz
filds
push
push
inc
push
dec
inc
dec
push
dec
add
xor
lea
outsl
add
dec
push
aad
mov
shl
inc
jnp
mov
mov
or
inc
divps
insb
pusha
cmpsl
inc
popl
inc
in
jge
fmull
mov
cmp
jg
lock
nop
jo
maxps
fld
or
xor
or
insb
mov
push
add
pusha
outsb
daa
push
sti
push
add
je
mov
xchg
xchg
cld
mov
nop
lret
mov
mov
push
loopne
push
or
pop
insb
arpl
or
add
iret
lds
jne
pop
popl
mov
push
mov
rcr
sbb
faddl
xchg
movsb
into
pop
jbe
mov
or
lcall
stc
push
jmp
inc
lock
cmp
or
push
das
mov
xchg
and
daa
outsl
out
add
in
andb
cs
fdivs
cwtl
mov
jns
cwtl
mov
pop
lock
pop
enter
or
in
xchg
ss
cmp
dec
lock
rclb
xlat
mov
cmp
cli
sbb
insb
orb
or
hlt
loopne
inc
lock
in
jns
int
or
or
mov
in
add
and
pop
adc
or
xor
je
fs
mov
add
je
js
mov
push
mov
fisubrl
xor
outsl
cmp
xor
callw
jo
adc
mov
add
cs
hlt
mov
mov
dec
push
push
mov
ja
js
sti
xor
out
push
push
rclb
xchg
xchg
mov
jo
out
data16
fildl
cwtl
jo
adc
fcmovu
cmp
adc
push
xor
pop
repz
addr16
cld
and
cmp
jge
adc
cmpsb
sar
dec
jo
clc
ja
mov
adc
jno
insl
xor
shufps
dec
pop
adc
push
pop
jnp
adc
sub
xlat
fs
data16
das
pusha
cmp
js
nop
ret
pop
orb
inc
pusha
or
pop
out
sbb
out
push
das
dec
and
pop
add
adc
dec
jb
push
jb
inc
cmp
and
and
and
sbb
jb
fisubs
aaa
mov
adc
test
ss
repz
mov
and
and
jns
int
js
sbb
out
sbb
sbb
cld
loopne
jnp
out
test
cmp
idivl
push
ds
push
push
out
fsubp
push
adc
nop
shl
iret
adc
cwtl
jl
inc
ja
cmp
js
and
adc
lret
pop
test
in
ds
push
lods
mov
enter
ss
jo
inc
iret
dec
jle
cld
jl
aaa
adc
es
add
add
push
inc
js
rcr
adc
pop
je
mov
loop
clc
cmp
into
or
add
or
addr16
push
cmp
ja
push
mov
mov
addr16
sub
add
adcl
sub
and
inc
imul
dec
shr
adc
sbb
outsl
add
add
inc
lods
mov
jo
in
mov
xchg
outsb
add
cmp
outsl
cmp
add
cmp
add
cld
push
jo
mov
or
push
ljmp
add
outsb
dec
out
fldl
fs
cld
xor
sub
xor
xor
mov
dec
add
roll
les
cltd
and
add
pop
inc
outsb
adc
enter
add
adc
xor
cltd
sub
outsl
add
jb
add
sub
cmp
outsl
sub
dec
cmpsb
mov
aaa
es
iret
add
mov
scas
jbe
inc
aaa
xor
lock
out
sbb
pop
pushf
out
push
add
push
lahf
mov
enter
ja
push
vmovdqa
sub
push
jle
cltd
inc
scas
ja
lock
popf
nop
inc
sbb
cmp
dec
fistpll
add
and
dec
testl
hlt
das
addb
xor
lcall
enter
inc
jbe
sbb
scas
add
push
adc
outsb
add
scas
notb
out
mov
cmp
cmpsl
sbb
add
and
add
iret
push
xchg
cld
ss
add
idivb
mov
incl
pop
aam
pop
testb
es
adc
xchg
sbb
mov
dec
xlat
push
sahf
testl
jg
mov
mov
outsl
sub
xchg
je
roll
push
test
pop
sbb
aaa
mov
ja
hlt
xchg
sbb
test
enter
ja
xor
outsl
push
push
out
pop
jecxz
les
sbb
or
mov
je,pn
aam
and
enter
cmp
cwtl
push
jl
xchg
or
ja
dec
adc
mov
test
pop
push
add
in
dec
push
pop
push
or
enter
or
dec
add
leave
xchg
rcl
or
pop
add
test
adc
pop
sbb
pop
sub
add
mov
adc
outsl
and
js
jl
nop
add
pushf
add
push
sbb
pop
shrb
push
and
mov
sub
or
jbe
mov
push
addr16
aaa
aad
mov
and
iret
enter
shlb
fisttps
scas
add
dec
and
add
add
push
inc
daa
pop
pop
insl
ss
and
add
xor
sub
ja
jg
sub
add
jns
fs
movsb
lods
and
loopne
iret
xchg
dec
sub
and
and
push
sbb
outsl
push
cmpsb
and
or
pop
jno
js
cld
pop
push
lock
and
test
mov
loopne
sub
add
les
aam
adc
cmpsl
add
adc
data16
mov
les
iret
daa
push
sarb
pushf
daa
or
push
jb
add
negb
lods
and
fadds
addr16
and
and
and
sahf
pushf
dec
sub
les
dec
jle
bound
hlt
ja
ja
nop
inc
pop
shll
push
xor
or
fs
and
push
pop
outsl
in
lods
in
pop
or
xor
in
and
xchg
sub
inc
popl
pop
int
mov
xlat
aaa
pop
jp
mov
push
mov
or
nop
mov
lods
mov
out
add
add
addr16
xchg
call
add
push
sbb
daa
add
pop
mov
inc
pop
hlt
data16
mov
adc
das
bound
lahf
sub
cs
or
inc
add
js
in
outsb
cmp
dec
xor
lock
pusha
mov
fidivl
jb
push
or
pop
push
stos
sbb
jns
dec
out
sbb
fucom
repz
add
pushf
mov
repz
dec
rclb
sbb
sbb
xchg
xlat
add
and
stc
cmp
add
imul
cmp
inc
push
fwait
ror
cmp
push
and
mov
sub
push
jbe
mov
jl
and
out
lahf
out
in
and
daa
and
dec
fidivrs
add
cmpsl
jge
jns
xor
sub
xor
jns
jb
hlt
pop
sub
mov
rorb
sub
mov
jns
iret
fiadds
sub
and
stc
cmp
adc
push
jne
cs
sarl
loopne
das
inc
xorl
fsubl
xor
lahf
divl
mov
push
repz
out
xor
negl
xor
repz
cmp
hlt
sahf
out
ds
xor
cmp
repz
add
and
iret
repz
out
aaa
imul
popa
xchg
sarl
or
mov
out
lcall
fstpl
push
sti
aaa
cmp
sarl
decl
out
jl
inc
push
inc
pop
xorl
cli
dec
inc
scas
push
cmpsl
stc
cmp
dec
inc
jne
add
sarl
jmp
inc
xor
repz
inc
test
add
pop
iret
sarl
ret
dec
insb
sahf
out
cmp
fstl
dec
arpl
or
push
dec
popf
call
cmp
mov
lahf
out
mov
aaa
cmp
out
mov
push
push
push
inc
imul
xor
stc
cmp
out
adc
andl
push
jp
clc
sbb
repz
ds
test
add
out
sahf
inc
push
pop
int
jns
pop
stos
into
icebp
adc
aaa
ds
repz
jge
in
pop
pop
jns
out
cmp
mov
out
or
das
push
jne
imul
pop
bound
leave
dec
pop
mov
pop
jl
repz
dec
fdivrl
bound
jns
out
mov
imul
imul
ds
cltd
fdivl
imul
repz
loopne
insb
dec
mov
pop
int
jns
insl
push
rclb
outsb
ss
cmpsl
stc
cmp
or
inc
mov
cmp
sarl
cmp
les
out
out
jno
pop
cmp
int
fimuls
jb
mov
jne
ds
mov
jbe
rorb
test
ss
sti
ret
jns
inc
jp
jnp
jl
ss
mov
xor
mov
dec
repz
cmpsl
stc
cmp
mov
icebp
pop
sbbl
jl
lods
jecxz
test
sahf
out
lcall
cmp
out
aam
and
aas
gs
cmp
repz
out
sahf
cmpsl
sub
xchg
sar
iret
repz
adc
adc
inc
addr16
iret
sarl
inc
js
jl
cmpsl
stc
cmp
mov
iret
rorl
jnp
cmp
out
sbb
insl
push
or
mov
ret
mov
aam
cmp
cwtd
pop
aas
add
movlps
push
cs
cmp
push
divl
or
lret
xchg
or
and
out
orl
nop
push
movsb
in
or
lahf
rolb
mov
sbbl
dec
and
xlat
aas
fcomps
add
adc
in
jge
scas
pop
rorb
ja
push
adc
mov
pop
arpl
lret
mov
and
lods
fstps
lock
mov
scas
fdivr
mov
push
into
dec
push
leave
rcrb
out
dec
push
pushf
rol
leave
push
fistpll
aas
in
push
xlat
ds
add
addr16
mov
pop
icebp
movhps
adc
jmp
in
daa
sub
mov
lods
sbb
xor
xor
das
add
pop
shlb
or
mov
xchg
and
fcomps
stos
hlt
dec
add
test
or
insb
out
mov
out
and
into
add
jge
inc
xchg
add
mov
leave
cmp
add
jl
and
cs
fisttps
das
or
or
pop
in
xchg
aas
test
bound
mov
daa
jb
add
and
pushf
pushf
pushf
pushf
mov
xchg
das
enter
clc
xor
jb
or
or
dec
or
jle
mov
xchg
push
js
inc
mov
mov
or
sbb
mov
shll
pop
pop
pop
add
dec
add
ss
xor
mov
pop
xchg
dec
jb
decl
fidivl
xchg
pop
jnp
push
push
rolb
jmp
in
mov
rorl
add
mov
add
jb
jb
mov
ret
push
je
xchg
jb
divl
leave
dec
sbb
add
sbb
repnz
xor
add
push
add
jle
inc
sub
push
jne
in
xchg
and
or
or
enter
int
fcoms
jecxz
sbb
jb
out
adc
adc
xchg
and
and
xor
sbb
fcmovnb
enter
scas
push
addl
fisubl
cmp
mov
mov
scas
add
iret
addr16
or
in
mov
repnz
aaa
dec
and
fisttpll
jl
in
pop
lds
dec
add
fmull
pusha
add
xchg
mov
pshufw
test
rorl
xchg
cmp
mov
jb
pop
xor
pop
jmp
push
and
add
and
mov
mov
xchg
pop
call
shll
sbb
adc
adc
dec
test
ja
add
pop
shll
jl
cmp
pop
addr16
push
fadds
add
mov
loopne
pop
in
cmp
leave
dec
dec
cs
jmp
mov
adc
adc
js
xchg
mov
jbe
jle
xchg
rcrb
and
inc
xor
int3
cmp
sbb
out
adc
or
adc
mov
sbb
xchg
add
test
add
pop
and
mov
xchg
dec
cs
push
xchg
in
pop
leave
dec
cs
sbb
cmp
sub
fildll
adc
cmp
iret
inc
mov
adcb
jb
sub
inc
jb
jae
add
mov
in
mov
rorb
adc
into
xor
aas
mov
in
fisttps
adc
add
addr16
daa
mov
add
pop
nopl
das
enter
dec
or
dec
or
ss
aaa
or
maxps
or
cmovg
inc
or
add
add
push
test
mov
es
or
mov
or
or
js
incl
jb
in
mov
setb
lcall
mov
mov
cmp
addr16
ds
aaa
dec
adc
adc
ret
push
mov
pop
idivl
cmp
and
aas
xor
leave
in
or
and
push
jo
jnp
xchg
sbb
jb
xchg
add
add
outsb
and
mov
scas
stc
jl
enter
add
push
sbb
xchg
and
and
push
cmp
enter
or
or
mov
or
pop
adc
lds
inc
call
xchg
xchg
xchg
xchg
or
stos
mov
xchg
xchg
xchg
ror
loop
xchg
mov
in
clc
lahf
pop
and
cmp
sahf
mov
add
add
pop
add
bound
pop
jb
or
and
inc
sub
dec
cs
xchg
add
lcall
pop
pop
and
iret
jecxz
pmaxsw
lret
xchg
add
add
add
syscall
sbb
sbb
sbb
and
push
daa
daa
inc
mov
pusha
sbb
adcl
or
jb
enter
or
or
or
inc
mov
or
adc
dec
and
push
xor
push
xlat
addr16
pop
mov
jo
iret
inc
sub
pushf
xchg
addr16
cmp
xchg
mov
sbb
mov
inc
mov
mov
sbb
aam
xor
sbb
inc
sbb
push
push
in
lcall
push
pop
jb
aam
pop
leave
mov
scas
push
insb
enter
and
out
enter
sbb
xchg
mov
xchg
les
cmpsl
push
xor
xchg
mov
add
leave
dec
ja
outsl
jp
add
daa
pop
mov
sub
jg
push
mov
mov
in
pop
test
sbb
inc
mov
fimull
jae
mov
dec
and
push
add
sbb
xchg
jne
pop
in
in
test
mov
ror
add
imul
add
sbb
jb
insl
pop
xchg
xchg
pop
jo
outsl
sbb
xchg
xchg
xchg
xchg
test
mov
mov
xchg
xchg
xchg
enter
fcomps
xchg
xchg
call
fs
xchg
and
invd
movups
sbb
leave
leave
leave
leave
and
femms
or
or
or
leave
leave
leave
leave
or
push
add
add
add
jb
or
out
and
mov
inc
dec
xchg
das
fucomp
jbe
jbe
jle
push
dec
int3
in
push
pop
and
xchg
decl
add
jb
xchg
sti
nopl
add
leave
dec
ja
xchg
pop
push
xorb
daa
daa
insl
jns
popa
push
imul
out
clc
pushf
aaa
inc
test
jbe
cmp
rolb
or
mov
fcmovnu
dec
push
scas
or
shlb
enter
daa
add
xchg
aaa
aas
add
inc
add
in
pop
pop
popl
out
arpl
out
data16
pushf
pushf
dec
inc
inc
and
xchg
js
aaa
dec
xor
out
add
nop
add
les
mov
cltd
push
movsb
add
je
or
and
push
test
cmpsl
enter
and
jb
jb
sub
xor
add
sbb
jnp
aas
dec
or
push
or
cmp
cmp
addl
mov
adc
psubsb
xor
push
or
dec
aaa
repnz
xor
add
push
punpckldq
test
rcrb
xor
xchg
pop
jbe
mov
ficomps
dec
sbb
adc
jb
xor
jb
pushf
jnp
jbe
pop
enter
and
leave
dec
add
leave
leave
and
push
in
push
mov
xchg
adc
in
xor
fdivrs
add
jb
inc
fwait
xor
mov
fs
cli
nop
push
mov
xchg
adc
sbb
add
jbe
daa
pop
leave
dec
add
jae
cmp
arpl
push
and
add
push
jo
leave
in
daa
daa
rcr
push
movsb
in
mov
or
adc
loopne
inc
cmpsl
loopne
testb
pop
popa
out
push
sbb
test
push
push
push
cs
inc
mov
push
out
and
sub
enter
push
xor
xor
push
cmp
cmp
in
add
add
push
pop
xchg
mov
or
mov
push
mov
pop
cs
leave
aad
add
pop
jb
add
sub
dec
jbe
lea
sub
push
mov
leave
enter
pop
punpcklbw
push
push
jo
or
mov
nop
cwtl
iret
mov
je
aam
faddl
add
in
iret
jbe
hlt
sub
xchg
mov
cmpsl
into
dec
ret
rcl
aaa
push
mov
push
or
daa
or
sub
push
inc
sbb
aas
xchg
mov
loopne
inc
ja
dec
xchg
pushf
pop
and
insb
jne
inc
xor
popf
mov
add
scas
mov
mov
mov
add
add
lea
in
jg
xor
movsb
push
cs
add
inc
dec
je
pop
sub
push
sub
push
dec
xlat
mov
flds
xlat
mov
add
mov
jg
adc
clc
sub
mov
mov
add
add
enter
add
add
add
dec
push
push
pop
pop
or
enter
imul
or
jb
jb
orl
jb
jb
or
push
jb
jb
add
sbb
jb
xchg
sbb
xchg
and
sbb
in
in
ret
push
and
rorl
jecxz
jmp
repz
mov
and
sub
xchg
xchg
out
enter
add
in
popf
fsubrl
push
cvtps2pd
push
jnp
xchg
push
and
xchg
or
test
leave
inc
cmp
addr16
imulb
je
cmp
add
or
mov
movsl
push
mov
aas
cmpsl
sbb
fsts
leave
pop
mov
jns
cmp
dec
push
add
add
addr16
outsl
ja
dec
dec
dec
dec
xchg
xchg
xchg
and
in
enter
iret
adc
adc
jnp
jb
pop
pop
out
jecxz
dec
jo
lahf
das
popf
push
sbb
push
inc
add
push
add
outsl
mov
das
push
add
add
dec
or
mov
push
pop
pop
and
or
daa
xor
adcb
das
mov
leave
and
xchg
sahf
bound
push
out
lcall
pop
add
nopl
add
pop
push
xchg
adc
inc
daa
or
inc
mov
xchg
push
leave
dec
in
ja
bound
and
daa
daa
pop
test
leave
add
dec
xlat
lret
xchg
fsubrl
or
in
hlt
or
fxch
xor
or
rcr
subps
push
jb
inc
cmp
push
jns
and
movsb
add
pop
and
and
in
xchg
les
sbb
add
inc
mov
in
xchg
xor
and
push
xor
daa
ret
inc
xchg
push
and
nop
lods
pop
and
push
enter
jns
mov
daa
cwtl
push
and
orl
xchg
add
push
inc
mov
lret
pop
or
or
or
enter
or
add
jb
push
and
adc
adc
cmp
pop
shrb
fimull
xor
mov
arpl
sbbl
xchg
inc
xor
jg
enter
fcomp
enter
push
call
mov
psubb
or
jno
arpl
pop
clc
aas
in
xor
and
adc
inc
dec
add
pop
add
js
jb
in
addb
inc
mov
cwtl
or
movsl
xchg
and
or
andl
popa
dec
push
inc
jb
mov
jb
sub
pop
push
push
add
pop
fs
pusha
ror
insb
je
xor
jp
push
mull
addr16
shlb
and
xchg
add
bnd
mov
lods
add
ret
bswap
push
flds
mov
push
out
or
or
add
adc
pop
push
pop
push
insl
add
xchg
arpl
xchg
mov
xchg
daa
push
aas
mov
cmpsl
mov
mov
jnp
jb
jmp
jmp
add
xor
pop
test
dec
pop
push
aaa
push
aaa
sub
xor
lea
cltd
dec
aas
add
jno
mov
aas
in
and
sbb
xor
or
mull
daa
inc
das
sahf
daa
pop
fmull
pop
cmpsb
das
scas
mov
xchg
daa
mov
pop
mov
jb
enter
or
or
add
jbe
setg
pop
fs
clc
dec
cmp
dec
adc
ret
inc
jg
jb
mov
push
cmp
inc
dec
dec
mov
push
add
add
dec
inc
push
or
jp
or
mov
or
mov
mov
adc
in
idiv
add
cmp
add
into
xor
cmpsl
cmp
cmp
rolb
sbb
inc
xchg
mov
movsl
add
fs
mov
pusha
xchg
push
mov
cs
xchg
lret
mov
dec
hlt
clc
lahf
xor
dec
pop
cmp
or
out
mov
add
jecxz
sub
addr16
addr16
pop
rclb
push
xor
filds
dec
das
push
cvtdq2ps
addr16
fcmovnu
in
movsb
data16
setg
mov
xchg
add
mov
in
dec
dec
outsb
pop
fimull
loop
cmc
les
inc
cmp
dec
pop
adc
xchg
fcmovne
jae
xor
cmp
push
inc
dec
das
fisttpl
mov
cvtdq2ps
push
arpl
in
sbb
mov
movb
fsubrl
add
stc
jb
in
or
or
or
inc
mov
or
or
or
xchg
push
aas
dec
into
adc
xchg
push
push
daa
repnz
xchg
movsb
popf
mov
ror
cmp
rolb
add
fucomp
loopne
loopne
or
fistps
push
or
adc
xchg
xchg
daa
sbb
and
add
xor
cvttps2pi
add
pop
lcallw
pop
mov
adc
das
imul
jb
mov
cmp
ds
inc
addr16
int3
in
pop
cs
ds
leave
insl
fs
push
pop
add
imul
add
add
pop
cmp
jb
jns
orl
lea
or
or
repnz
packssdw
adc
and
insb
pop
daa
jl
push
daa
sbb
xlat
inc
mov
ds
mov
mov
daa
aas
das
mov
and
fidivrs
add
jnp
cmp
xchg
ja
cwtl
mov
stos
dec
or
insl
bnd
sub
ljmp
add
add
add
push
daa
and
pop
and
sub
xor
in
xchg
xchg
push
add
or
or
sbb
cmp
inc
adc
dec
inc
sahf
push
adc
adc
mov
xchg
daa
jb
jp
jp
fucomip
lods
mov
bsr
sahf
pushf
pushf
mov
fsubp
out
push
adc
cmp
adc
pop
push
or
push
or
jns
lods
outsb
mov
sub
and
cmp
outsl
pop
in
cmp
jo
jg
in
in
xchg
mov
loopne
ret
fcomps
in
divb
in
add
inc
cmp
fucomp
sub
sub
int3
push
adc
test
sbb
inc
lahf
mov
sub
push
je
jb
jbe
jl
dec
test
pop
mov
inc
mov
xchg
or
mov
lods
dec
xlat
movsl
add
add
xchg
andl
push
insb
cmp
xchg
sub
cmp
inc
inc
cwtl
jns
pop
and
fcompl
lods
mov
pop
mov
mov
and
aam
paddusb
jb
leave
enter
hlt
or
or
xor
stc
inc
add
push
pop
or
adc
rcrl
out
adc
daa
mov
inc
aas
cmova
add
jo
mov
mov
jmp
jae
add
je
bswap
lahf
xchg
fbstp
popf
inc
movsl
inc
lods
lgs
mov
mov
fistpll
mov
cmp
dec
add
imul
dec
or
sbb
lock
pushf
jbe
jg
adc
sbb
cs
jb
dec
das
and
and
mov
je
scas
add
or
xchg
pop
xchg
inc
sub
mov
jl
jl
int3
bnd
dec
lahf
ja
pop
scas
add
je
mov
incl
push
and
fisttpll
iret
or
es
inc
pop
inc
inc
jne
adc
mov
outsb
in
leave
and
xchg
jmp
mov
in
sbb
xorl
pop
jo
cmpsb
daa
scas
addr16
leave
inc
xor
add
cmp
enter
inc
add
add
adc
or
aam
popf
pushf
and
addr16
pop
sbb
dec
inc
mov
out
dec
add
add
daa
and
add
andb
daa
daa
fwait
mov
daa
daa
dec
adc
daa
mov
sub
das
dec
push
xchg
daa
daa
daa
cmpsb
iret
adc
ficoml
in
cmovns
mulb
sbb
sbb
inc
sbb
rcr
dec
push
decl
dec
jp
mov
mov
addb
shll
js
push
movb
mov
cwtl
and
pushf
dec
dec
or
pop
and
pop
das
lock
dec
cs
xchg
jns
jne
pop
sub
cwtl
inc
sub
jecxz
cmpsl
faddp
add
inc
sub
mov
test
pop
punpckldq
in
mov
and
mov
js
and
in
mov
dec
jb
mov
sub
mov
dec
cs
mov
fdivs
jl
inc
ss
dec
push
fiadds
inc
inc
mov
iret
push
out
add
dec
paddsb
enter
push
pop
daa
or
shlb
leave
das
das
or
pop
or
in
bnd
dec
pop
mov
inc
jb
inc
jge
stos
xchg
subl
jb
dec
jb
mov
mov
add
lsl
inc
pop
push
cmp
inc
jb
sbb
or
cmp
cmp
dec
insb
je
nop
movsb
cmp
sahf
lods
mov
mov
xchg
xchg
mov
iret
xlat
enter
das
dec
or
cmp
sbb
and
sub
xor
outsl
and
cmp
inc
or
push
push
in
and
pop
punpcklbw
adc
dec
jle
inc
cmpsl
mul
sbb
orl
fs
xchg
add
add
cmp
jnp
add
dec
push
pop
or
cmp
push
sbb
adc
enter
adc
push
adc
sbb
jb
adc
sbbb
xchg
and
sbb
cmp
lods
sbb
sbb
xchg
and
fsubs
jecxz
out
and
in
stc
and
and
and
mov
and
or
enter
dec
dec
sub
sub
popa
imul
dec
cmp
pushf
jmp
les
push
int3
cmp
cmpb
adc
push
mull
in
push
adc
prefetchnta
pop
and
sub
sub
aas
std
sysret
xor
dec
into
push
push
pop
arpl
pushf
fmull
jl
pushf
pushf
xlat
lock
or
dec
dec
dec
dec
sub
jnp
repnz
push
in
xor
js
in
loop
push
or
in
jbe
adc
sbb
and
in
jbe
repnz
cmp
pop
bswap
enter
pop
test
in
daa
rcr
sub
fnstenv
push
adc
nopl
and
sub
daa
and
pop
xor
xor
dec
outsw
andps
pop
pop
fs
push
cmp
xorl
inc
movsl
add
xchg
mov
and
xlat
inc
push
adc
inc
mov
cmp
mov
leave
dec
ja
sbbb
daa
pop
mov
movsb
or
test
inc
and
cmpsl
out
xchg
and
push
or
push
add
fs
xchg
sub
add
repnz
pop
arpl
jns
popf
mov
or
or
cmp
pop
movsl
mov
mov
dec
inc
rcr
adc
xchg
xchg
pop
lcall
sbb
adc
enter
sbb
ss
cmp
jns
inc
dec
and
and
popf
mov
addps
push
push
add
loop
into
aam
jbe
inc
jmp
add
cmp
repnz
das
adc
sbb
inc
mov
and
or
or
addr16
dec
inc
or
dec
dec
push
aas
push
psubusw
arpl
movzwl
adc
addl
xchg
pop
xchg
sbb
fwait
lcall
test
sbb
inc
xchg
aas
xchg
push
xchg
pusha
sbb
xchg
jnp
int
push
scas
pop
dec
add
loope
jb
fsubp
aas
out
dec
sub
mov
xchg
cmc
push
add
add
inc
add
cmpsl
push
jbe
xchg
mov
in
in
mov
cs
loopne
mov
popf
pushf
int3
aam
mov
push
outsl
pop
cmp
and
push
pop
pop
sub
lea
push
das
or
dec
sbb
push
pop
ud1
mov
test
jns
lea
leave
leave
inc
repnz
ror
xchg
push
into
rcr
pop
jns
mov
push
or
aad
cmp
xchg
movsb
jb
shlb
ds
add
mov
pop
jns
repnz
jns
orl
mov
adc
mov
xlat
fldl
arpl
push
aam
ja
inc
add
mov
dec
and
lds
sub
int3
sahf
xor
pop
cmp
dec
in
sbb
cmpsl
push
hlt
insl
cmpsl
loop
in
jge
dec
mov
cmp
xchg
mov
rolb
add
inc
jmp
sti
pop
pop
jb
pop
add
aas
mov
nop
adc
mov
mov
adc
pop
pop
pop
popa
out
imul
pop
jns
orl
push
or
xor
mov
dec
dec
mov
add
aam
daa
and
add
jge
xchg
hlt
cld
mov
sbb
fistps
das
push
aaa
popf
cwtl
bound
pop
fbstp
rolb
xchg
jb
movsb
xor
add
mov
mov
mov
and
clc
pusha
add
or
aas
mov
test
add
test
and
xlat
jb
xchg
je
xchg
orl
xchg
mov
mov
dec
jb
cmp
add
mov
nop
xchg
divl
add
jnp
push
adc
cmp
jb
scas
sahf
cmpsb
daa
push
scas
and
sahf
mov
mov
enter
das
stc
bound
jbe
mov
addr16
lret
sub
xor
xchg
cmp
xchg
mov
push
xchg
add
pop
inc
xchg
xchg
mov
pusha
mov
in
adc
roll
faddl
cmp
enter
repnz
std
or
inc
mov
or
or
or
leave
in
enter
or
jnp
in
push
adc
pusha
adc
fs
adcl
and
mov
sbb
jb
enter
sbb
sbb
sbb
out
push
cli
pop
fs
daa
daa
sbb
sbb
daa
daa
daa
daa
sbb
push
adc
adc
adc
xchg
xchg
xchg
sbb
xor
push
inc
push
xor
pop
xor
jb
enter
xor
and
sbb
cmp
jb
enter
cmp
cmp
jnp
loope
inc
pop
mull
inc
sbb
jnp
prefetch
or
and
dec
inc
dec
dec
dec
daa
daa
and
dec
gs
xchg
daa
daa
daa
xchg
enter
push
mov
mov
rcr
fucomip
lahf
xchg
xchg
out
bound
push
and
sub
daa
in
push
das
push
cmp
cmovl
dec
scas
xchg
and
out
or
xor
push
jg
popl
pop
xor
leave
xchg
xchg
add
add
jo
pop
fsubs
in
sub
daa
in
andb
in
cmc
jb
xchg
iret
addr16
cmp
cmp
adc
mov
cmp
cwtl
dec
pop
cmp
pop
popa
mov
jb
shrl
orb
pop
cwtl
push
mov
ret
bswap
cmpsl
jle
fildl
daa
daa
daa
jecxz
repz
push
xchg
xchg
pop
xchg
dec
sub
push
sarb
mov
outsl
push
aaa
aaa
jmp
dec
inc
mov
inc
add
fs
xchg
or
jns
test
in
in
lcall
mov
enter
fsub
adc
sbb
jb
imul
push
sbb
sbb
dec
mov
sbb
aas
mov
and
and
and
imul
outsb
daa
jbe
orl
lods
das
mov
xchg
imul
add
add
dec
inc
and
add
nop
lret
or
sahf
adc
cltd
clc
out
push
xchg
xchg
xchg
and
gs
in
leave
enter
lods
push
pop
mov
jb
or
or
fnstcw
jb
add
aas
in
sahf
add
cli
scas
imul
movups
adc
adc
xchg
push
xor
cmp
inc
sbb
jb
push
pop
push
inc
dec
mov
sbb
cmp
or
pop
ror
outsl
inc
ror
enter
in
scas
mov
sub
sub
add
test
or
push
femms
aaa
lcall
insb
cltd
cmp
xor
popf
mov
push
insb
ja
mov
lea
dec
dec
outsb
mov
fildl
xchg
xchg
daa
and
icebp
add
cmp
fldcw
pop
insl
adc
sbb
jbe
sbb
xor
xor
or
jb
push
push
maxps
push
sbb
and
adc
xchg
lods
lcall
xchg
pop
insl
mov
insl
ret
das
lret
ret
leave
enter
add
jecxz
inc
into
dec
fimull
jmp
outsb
push
outsb
and
dec
push
aaa
add
add
outsb
xchg
xchg
in
add
arpl
add
xchg
xchg
xchg
or
test
push
out
pop
std
adc
sbb
outsl
or
adc
sub
cmp
jbe
lahf
movsl
pop
mov
das
mov
sbb
rcrl
fsubrl
sub
jnp
popf
and
outsl
addr16
outsl
outsl
push
addb
in
mov
pop
leave
leave
in
fs
bswap
aam
cmp
leave
fucomip
mov
outsb
fimull
and
or
and
and
outsb
dec
cmovno
dec
sbb
xchg
daa
pop
sbb
sbb
enter
pop
lea
xor
and
das
int3
xlat
loop
sub
into
sahf
xor
pop
sub
sub
push
pop
pcmpgtd
outsb
xor
jle
xchg
push
cltd
pop
and
aaa
psubb
cmp
pop
adc
setns
pop
movsb
lods
cmp
lahf
jb
push
pusha
mov
jmp
cmp
popa
mov
testl
ljmp
dec
add
cmp
scas
mov
es
hlt
daa
adc
adc
cmp
arpl
jle
cmp
mov
mov
jl
mov
xchg
jno
sarb
nop
cmp
add
mov
ltr
in
jbe
inc
daa
pusha
scas
icebp
movsl
adcb
mov
popa
leave
or
push
enter
jae
push
cmp
push
add
mov
cmp
add
test
add
push
pusha
xchg
out
in
rcr
addr16
into
cs
mov
pcmpeqb
daa
push
daa
and
push
pop
push
das
push
add
mov
pop
out
pop
mov
jo
push
cmpsl
mov
imul
dec
movsl
sub
daa
daa
daa
pop
loope
imull
xchg
and
jb
xor
in
je
sahf
aaa
movsb
inc
movsb
xor
cmp
mov
hlt
and
in
pushf
mov
xor
in
test
ljmp
dec
push
sbb
mov
fsubrs
test
mov
in
dec
cmpsb
add
daa
mov
add
adc
sbb
in
add
cmpsb
cmp
mov
sub
cwtl
cmpsb
mov
push
jbe
mov
rorb
loopne
andb
outsl
out
cmpsb
mov
mov
xlat
nop
ja
ret
cmpsl
pop
aaa
cmpsl
xcrypt-ofb
cmpsl
push
movsb
fldt
cmpsl
mov
and
cmpsl
mov
shrl
scas
iret
clc
aas
sbb
jbe
push
test
test
daa
dec
dec
dec
jb
aas
ja
test
mov
inc
pop
mov
sub
sub
ja
lahf
dec
jne
shll
test
sbb
scas
test
mov
pop
js
adc
daa
cwtl
pop
mov
pop
jb
lahf
test
cmpb
js
dec
les
je
push
in
mov
mov
aad
stos
mov
mov
inc
mov
stos
daa
add
xlat
add
dec
xchg
fsts
mov
das
mov
shrl
inc
das
add
stos
xor
stos
clc
daa
inc
call
daa
cmp
js
jns
push
leave
mov
pop
test
andl
addb
test
or
jns
out
cmpsb
aaa
push
daa
push
roll
lods
sub
lods
or
cmp
in
or
xchg
pushf
lods
subb
outsb
pop
lds
int
enter
outsb
push
lock
push
adc
add
cmp
test
lods
pop
lods
dec
daa
cmpsl
or
ljmp
jp
and
insl
push
test
lods
rolb
sahf
pop
mov
rorl
mov
out
add
inc
scas
das
scas
push
in
ret
test
scas
push
sbb
pusha
in
jns
push
xor
mov
imul
test
dec
dec
jnp
call
jnp
push
movsb
sarb
add
leave
out
leave
in
jnp
jg
lock
jl
xchg
orl
pop
fimull
and
pop
jle
mov
cs
jl
push
pop
pusha
push
pop
lea
xor
or
add
inc
sub
test
mov
loop
jmp
daa
mov
push
rcrb
add
enter
jmp
fcomps
test
mov
sbb
mov
sbb
daa
add
lea
popl
or
pop
bound
push
lsl
sahf
rcrb
lcall
sbb
in
xchg
mov
out
add
cli
add
add
in
xlat
adc
dec
adc
push
push
mov
daa
cmp
gs
mov
xchg
loop
dec
repz
testl
daa
outsl
fildl
adc
add
sti
sysret
cmp
iret
add
jmp
and
test
imul
mov
daa
fs
fsubrp
andl
sub
pushf
adc
add
pop
adc
add
das
pop
push
cmp
pop
iret
mov
mov
adc
push
es
dec
dec
unpckhps
adc
movsb
stos
add
push
adc
lods
or
bnd
push
loopne
add
pop
fs
cs
inc
push
mov
xchg
mov
inc
inc
aas
stos
adc
sbb
pop
inc
rcrb
aaa
stos
test
insb
insb
pop
sbb
push
das
jae
ret
pop
mov
fisttpll
iret
repz
or
or
daa
daa
or
aaa
or
jbe
jne
or
daa
adc
adc
jmp
pop
inc
fucomi
jbe
inc
push
addr16
das
push
nop
outsb
mov
mov
insl
push
and
iret
repz
jb
pop
orb
or
jb
jns
or
xchg
sub
cmp
xchg
xor
mov
data16
cld
nop
mov
mov
mov
cmp
adc
out
and
loope
adc
addr16
or
sar
adc
or
jecxz
test
jg
inc
push
loop
add
add
movsb
add
addr16
mov
andb
fisttps
mov
jb
lahf
loopne
inc
jle
test
shll
mov
mov
add
mov
in
call
nop
pop
jle
adc
push
ficompl
fisttpl
pop
push
pop
fisubrl
xor
fcomp
loopne
jb
jle
ret
mov
push
cmp
jnp
daa
and
sbb
adc
cmp
repz
ds
cmp
fcom
shl
iret
repz
pop
sahf
out
sahf
test
mov
sahf
out
mov
cmp
repz
pusha
pop
dec
inc
cmp
repz
sub
and
add
mov
or
push
lock
call
loopne
ror
ror
cmp
mov
nop
jl
pop
cmp
repz
cmp
sub
out
cmp
repz
or
cwtl
cld
push
hlt
cmp
repz
in
shlb
cwtl
pushf
push
nop
subb
out
dec
xor
and
or
fwait
adc
pop
adc
and
out
pop
push
roll
push
push
add
mov
mov
mov
imul
pop
insb
jnp
incl
ja
stos
mov
push
aas
sbb
mov
insb
or
add
outsl
mov
push
enter
pop
add
jb
jno
mov
cs
f2xm1
dec
icebp
push
dec
adc
xorb
icebp
in
inc
in
sub
push
inc
jg
fimuls
push
mov
push
pop
cs
pushw
repz
in
pop
call
pop
cmp
imull
inc
xchg
smsw
aam
add
in
inc
aaa
fstp
mov
sete
inc
adc
inc
cmpsb
movsb
sbb
push
sbb
movsb
in
in
enter
and
jbe
jbe
mov
insb
adc
mov
sbb
jb
push
adc
dec
and
or
into
mov
jl
xchg
and
aas
mov
sbb
jb
enter
and
dec
and
inc
mov
and
push
sbb
psubb
out
jg
jne
inc
or
daa
mov
lods
stos
xor
cmpsb
cld
jb
mov
inc
jo
add
xchg
and
or
rcll
cmp
xchg
mov
testl
push
dec
insl
add
lret
cmp
inc
rcrb
mov
mov
push
dec
insb
mov
imul
add
add
nop
cmovo
hlt
adc
pushw
push
dec
xchg
and
sbb
dec
sbb
rorl
and
sahf
mov
sub
inc
rcrb
and
sbb
addl
call
xchg
inc
push
add
inc
stc
mov
adc
mov
decl
js
fistpll
outsl
loopne
jmp
xchg
test
mov
cmp
inc
mov
stc
popf
sti
jmp
stos
push
inc
mov
repnz
test
pop
stos
clc
scas
adc
inc
call
xor
cmpsl
aam
fmull
xchg
iret
inc
gs
xchg
decl
cmpsb
scas
mov
or
addl
cmpsl
xchg
cmp
xor
call
cmpsl
in
cmp
sahf
xchg
pop
lcall
lock
mov
popa
sar
mov
ljmp
inc
ds
stos
xchg
clc
repz
mov
subb
aam
dec
leave
fwait
xchg
and
mov
out
aas
xor
sti
aas
jno
or
mov
pop
fs
dec
call
aas
ret
shrl
mov
icebp
aas
rorb
and
cmpsl
out
aas
inc
cmpsb
pushl
mov
xor
aad
mov
std
std
into
popa
test
ja
stos
jmp
aas
das
dec
pop
loope
les
aas
xchg
les
jne
int
mov
addr16
add
mov
xchg
aas
add
mov
mov
aas
popa
push
pop
sarl
jl
mov
das
lea
mov
inc
inc
aas
movsl
jmp
cmp
sub
jge
mov
inc
rcr
push
arpl
int3
and
call
call
arpl
cmp
mov
cmp
std
xlat
cmp
mov
sbb
fwait
rolb
inc
pop
mov
jne
fldt
cmp
pushl
jno
shlb
out
dec
nop
pop
cmp
fisubl
xor
push
lahf
inc
lcall
adc
xor
push
scas
into
imul
faddp
jge
call
mov
idiv
call
cmp
push
andl
dec
dec
gs
std
orl
pop
ficomps
frstor
fmuls
outsl
push
je
pop
inc
scas
cmp
sub
iret
imul
cwtl
nop
jbe
push
ficoml
lahf
mov
jnp
addb
pop
ja
popa
push
out
mov
inc
insl
pop
hlt
push
xor
xchg
fs
xor
fdivrl
jmp
rclb
decl
mov
sub
mov
sbb
dec
jno
repz
test
call
ficompl
jmp
mov
hlt
movl
imul
in
leave
mov
add
insb
push
arpl
psubd
or
outsb
cmp
imul
pushl
addr16
add
aam
dec
std
test
movsl
cli
test
xor
leave
mov
dec
mov
fdivs
jne
filds
or
shrl
ljmp
adcb
push
popa
sarb
and
mov
cltd
xchg
mov
mov
or
or
and
or
adc
stos
sbb
popa
sarl
fdivl
jno
add
aad
mov
mov
movsl
in
add
mov
call
xor
mov
decl
xchg
sbb
push
sub
insb
fs
add
hlt
push
imul
insb
sbb
xor
jmp
dec
add
in
xchg
push
insb
jnp
add
shl
adcb
cmc
fnstenv
adc
mov
mov
cld
fistps
ficoml
gs
aam
pop
popa
mov
into
fistpll
je
mov
aam
movsl
fisttps
fadd
shll
call
shrl
imul
mov
sarb
add
in
add
pop
dec
or
decl
push
stos
inc
add
adc
or
and
test
or
mov
jmp
push
stc
ficomps
leave
fldcw
and
xlat
pop
cmp
mov
cmp
lods
insb
mov
in
mov
mov
add
inc
aad
scas
ja
popf
adc
push
fdivl
or
test
fs
ds
or
or
push
in
decl
xchg
daa
scas
add
mov
incl
jge
xchg
shlb
add
inc
push
imul
xorb
sbb
push
ljmp
jbe
aam
loopne
rorl
int3
dec
frstor
fistpll
mov
mov
aad
lcall
pushl
jle
shll
push
repnz
icebp
addr16
cmpsb
incl
mov
dec
ss
fisubrl
or
scas
testb
pusha
jp
inc
ret
out
pusha
fists
addr16
pop
cmc
decl
imul
andl
shrb
xor
ja
int3
or
incl
inc
or
das
es
lds
or
incl
mov
cmpsl
call
ret
shlb
sbb
ret
es
pushf
mov
decl
xchg
insl
add
ss
jmp
addr16
jb
push
mov
jp
jmp
scas
sub
or
mov
xchg
or
out
fdivrl
fisttpl
aam
roll
push
clc
mov
push
int
mov
mul
ja
outsl
ja
mov
out
sar
mov
dec
cmp
pop
or
adc
sahf
gs
clc
sar
imul
jg
push
js
or
push
addl
mov
cmp
cmpsl
notl
pusha
rorb
imul
ja
ds
push
scas
fcompl
fldenv
filds
cmp
aaa
sarb
jmp
iret
mov
jmp
decl
sarb
cmpsb
mov
sarb
ljmp
push
ficoms
fldenv
jp,pn
mov
dec
popa
les
sbb
xchg
sub
aaa
mov
or
lcall
pop
out
add
mov
insb
jns
sub
add
verw
add
cmp
push
xlat
cmp
repz
fcmovnu
repnz
repz
loop
in
iret
repz
in
jmp
iret
repz
in
repz
cmc
iret
repz
div
clc
stc
cli
sti
pop
cwtl
add
sbb
xchg
mov
sbb
loopne
inc
dec
lea
adc
lock
cld
dec
outsl
push
dec
aaa
dec
fldenv
xchg
pop
sub
popa
outsb
imul
je
outsb
gs
push
inc
inc
dec
inc
push
lret
sbb
dec
dec
push
pushf
xchg
xchg
push
mov
incl
xor
pop
dec
dec
inc
mov
dec
inc
aaa
xor
inc
push
cmp
cmp
aas
and
push
inc
pop
add
adc
test
gs
fisubl
aaa
or
dec
aam
aas
scas
dec
bound
push
subl
adc
sbb
andb
ja
inc
ret
test
call
pop
mov
inc
dec
imul
sbb
pop
inc
jbe
push
jns
arpl
xor
and
gs
xchg
js
jbe
xor
loopne
aam
cmpxchg
in
test
inc
inc
xchg
pop
pop
dec
lret
xlat
sub
imul
xor
add
pop
ljmp
insl
bound
roll
je
push
shlb
pop
push
dec
dec
mov
popa
orl
jno
loopne
pop
and
aas
pop
inc
cmp
pop
bound
xor
jo
pop
popa
ljmp
cmp
arpl
or
xor
bound
pop
xor
pop
jae
push
inc
jbe
pop
fs
leave
xor
mov
and
or
ror
push
or
sbb
rolb
sub
mov
outsb
imul
stos
sbb
gs
mov
jbe
scas
ds
movsl
and
mov
je
cmp
inc
push
adc
dec
jae
sub
xchg
jbe
xor
insb
popa
loopne
push
xchg
jbe,pn
ljmp
test
aaa
aaa
je
ret
pop
add
pop
add
xchg
dec
aas
add
dec
mov
jg
insb
scas
and
int
jbe
test
stos
jp
push
inc
aaa
int
or
inc
es
add
dec
je
push
pushf
jo
inc
inc
add
ds
popa
lret
push
add
out
mov
subb
dec
dec
lea
pop
sbb
fs
ja
outsb
jne
insl
dec
or
sar
mov
dec
jge
fwait
cmp
add
add
or
mov
ss
push
xchg
into
pop
jo
dec
lods
cmp
inc
cmp
aas
aaa
mov
sub
dec
orb
imul
gs
outsl
test
push
and
mov
xchg
add
push
test
dec
lcall
jo
xor
push
mov
mov
sbb
xlat
inc
add
push
mov
adc
xchg
daa
push
sub
sahf
fdivs
popa
jo
cmp
mov
outsl
adc
mov
mov
push
jno
adc
or
sbb
in
pop
adc
pusha
adc
nop
sbb
pop
cmp
test
mov
pop
arpl
adc
or
sarl
jo
push
test
push
outsl
insb
jns
xor
cmove
inc
jb
jo
popa
jb
lock
in
addr16
outsl
arpl
adc
cmp
in
daa
sub
inc
push
bound
ja
dec
stos
mov
inc
jbe
jae
addr16
push
sbbb
xor
outsl
and
scas
push
or
rolb
xor
dec
mov
and
xorb
ret
lock
jb
mov
add
push
insb
push
imul
gs
mov
jne
insb
and
ss
daa
sbb
jo
outsb
rclb
jne
lock
icebp
add
push
daa
add
and
mov
pop
pop
bound
adcl
inc
push
add
out
dec
add
repnz
add
mov
adc
adc
inc
add
ljmp
cmc
ffreep
mov
pop
jnp
push
les
cltd
fimuls
mov
mov
cs
decl
or
mov
jl
lods
imul
bound
dec
call
fiadds
inc
adc
loopne
push
stc
xchg
out
fisubrs
pushl
out
mov
fadd
icebp
sub
push
sbb
std
das
pop
lods
lcall
add
scas
sub
cmpb
adc
call
xor
mov
lock
jne
je
mov
ljmp
cmpsb
cmpl
sti
pop
mov
std
or
adc
cmp
ljmp
push
addb
fwait
push
push
xorl
lods
and
cmc
cli
jge
lock
push
andb
ljmp
push
mov
cwtl
sub
insb
out
push
mov
sarl
aam
int
xor
pushl
xchg
adc
testl
enter
lret
fdivl
sti
push
pop
xchg
scas
add
and
pop
aaa
orb
mov
cmp
and
inc
shrb
fcmovnu
stos
nop
cli
sbb
stc
mov
outsb
mov
decl
popf
mov
pop
fiadds
je
mov
mov
cmp
adc
cld
dec
call
xor
mov
add
push
adc
push
mov
shll
fidivrs
push
push
sbbl
mov
push
repz
bound
xor
mov
fsubrs
cli
cmp
cmp
ljmp
jge
sbb
lock
xor
frstpm(287
push
sub
fcomip
decl
pop
mov
and
aad
scas
pop
xor
aad
xor
mov
lea
inc
add
jno
loop
jmp
or
dec
mov
inc
lds
xchg
jmp
andb
fwait
repnz
rcrl
push
xor
in
push
push
adc
cld
jo
or
jmp
push
dec
mov
and
jl
jno
sti
clc
push
sbb
hlt
mov
fwait
imul
cld
jecxz
rolb
and
iret
pop
or
adc
lock
inc
call
jo
lahf
mov
in
pop
sbb
nop
sub
mov
ljmp
in
push
adc
in
pop
pop
cmpsb
loope
data16
jb
pop
cmc
xor
stc
dec
call
test
call
cld
mov
outsl
pop
push
enter
sbb
cs
ljmp
add
imulb
leave
mov
filds
or
lods
sbb
incl
cmc
push
in
mov
movsb
sbb
pop
int3
pop
cmp
movsl
aad
out
insb
in
mov
xor
pushl
lock
shl
cmp
mov
lcall
add
in
fnstcw
push
das
mov
fstpt
lahf
das
pushf
int3
mov
lret
ret
int3
sbb
xor
incl
mov
sub
mov
inc
pop
movsl
mov
cmp
sbb
ss
pushl
adcb
movsbl
pop
jmp
inc
mulb
repnz
push
jno
mov
xchg
push
call
nop
xchg
bound
push
int3
mov
adc
insb
out
faddp
push
fucomip
das
ja
clc
push
jmp
jg
nop
lcall
add
out
mov
fwait
and
mov
or
ljmp
mov
test
insb
mov
sbb
std
int
int
imulb
leave
mov
call
dec
jae
push
adc
movsl
sahf
xor
ficoms
and
inc
arpl
sub
lcall
decl
pop
mov
pop
nop
out
cltd
popf
pushf
movl
xchg
add
mov
cmp
mov
cmc
enter
incb
pop
mov
push
or
ud2
cmp
push
js
call
mov
cmp
xchg
imul
dec
rclb
fwait
cmpsl
add
scas
test
hlt
ljmp
leave
in
mov
testb
mov
push
data16
cmp
pop
mov
scas
and
fdivrl
xchg
cmp
jp
loop
mov
call
mov
pop
jg
test
inc
sbb
shlb
data16
jp
ret
jg
xchg
jnp
push
cmpsb
pop
jecxz
pop
xor
fcmovu
push
stc
decl
nop
dec
out
imul
dec
lcall
subb
pushl
mov
shlb
push
dec
int
mov
pop
out
pop
mov
pop
mov
jmp
fs
js
cmp
push
repnz
adc
inc
es
mov
cltd
sbb
sbb
pushl
mov
mov
cwtl
add
jle
fs
inc
imull
inc
pusha
movsl
pop
jmp
jmp
add
xor
xor
dec
in
cld
pop
lcall
mov
mov
cwtl
xor
mov
pop
pop
leave
sbb
ja
jmp
lea
jns
outsl
xor
repnz
adc
mov
loop
jb
jmp
fistps
inc
outsb
and
push
mov
fdivrl
mov
fucomi
jle
cmp
jecxz
sub
jae
push
sti
pop
xchg
adc
jp
mov
dec
std
cmp
lret
stos
ss
in
and
jmp
sbb
and
aas
call
or
push
fidivs
enter
xchg
out
repz
mov
gs
sarb
adcl
ljmp
jle
std
imulb
test
incl
fcoml
add
lahf
test
sub
jns
or
ljmp
sbb
insb
lods
addb
xchg
movsl
cmp
lea
aam
das
in
jge
add
cmc
pop
adc
sub
mov
mov
lea
pop
ja
xchg
push
ffree
mov
sahf
push
cld
incl
pop
cmp
popf
xchg
and
adc
dec
dec
lret
push
inc
adc
incl
mov
jg
into
enter
dec
ss
push
inc
popf
jnp
add
push
mov
add
in
out
sbb
outsb
jge
inc
push
subb
les
cs
outsl
jmp
jmp
pusha
les
bound
dec
enter
sbb
es
out
repz
jae
xlat
xor
push
push
scas
loop
xlat
pop
je
cmp
or
hlt
test
out
and
aad
fldcw
fwait
add
push
fidivs
or
xor
cmp
clc
fildl
imul
jge
in
cli
inc
mov
shll
decl
inc
jl
cmp
mov
movsl
arpl
cmp
jmp
aaa
faddp
iret
bound
cmp
sti
hlt
pop
lds
cld
aam
xchg
sti
jge
ljmp
dec
inc
fmull
out
and
stos
mov
stc
cltd
aam
push
sub
arpl
repz
negb
inc
xchg
dec
das
fisubrs
add
mov
fcoms
bound
adc
and
push
jne
dec
push
ss
and
imul
add
fsubrl
xchg
push
pop
or
faddl
push
divl
addb
xchg
pop
mov
pop
incl
push
mov
or
adc
jl
dec
cli
push
mov
lods
xor
dec
push
lcall
xor
mov
cmp
test
jno
pushf
cmp
das
sbb
decl
ret
call
sbb
mov
lret
pop
das
mov
enter
ljmp
jmp
rclb
sub
in
movsl
mov
xchg
sbb
fldenv
jmp
jmp
std
jnp
arpl
outsl
jno
lds
stc
sti
jnp
popf
mov
xlat
pusha
test
jmp
lods
pop
push
and
fnstcw
fs
mov
mov
cmpl
insb
out
clc
fistpll
mov
iret
add
and
mov
mov
dec
inc
fs
and
mov
and
arpl
aaa
mov
in
mov
pop
shrb
stc
adc
add
rolb
sub
lcall
mov
enter
pop
sahf
and
movb
inc
xorl
jb
mov
call
add
lcall
loop
int
xchg
ret
mov
rcr
jno
call
mov
repz
jo
pop
iret
stos
pop
jl
mov
fisttps
cli
mov
ljmp
bound
inc
mov
push
cmpsb
or
pop
ret
ss
sbb
sub
call
mov
dec
xlat
movsl
imul
inc
jp
ljmp
push
add
decl
sbb
mov
xchg
ficoms
mov
clc
cmp
lcall
loope
insl
clc
push
rcl
push
gs
xor
aas
adc
stos
loop
mov
push
lret
movsb
repz
add
mov
cltd
cwtl
pop
mov
decl
shll
mov
and
iret
push
rclb
mov
nop
push
push
test
mov
cmpsl
cmp
mov
add
push
jo
mov
inc
dec
mov
pop
jecxz
push
jmp
shrd
adc
mov
sub
dec
jae
xchg
pop
cmp
in
popf
push
addr16
in
pop
lds
mov
call
inc
mov
or
fadd
ret
mov
cmp
iret
sub
divb
lcall
inc
push
mov
testb
dec
xchg
mov
mov
and
icebp
lock
cli
jmp
sbb
daa
push
pop
popf
mov
jmp
xchg
cmp
push
int
pop
cwtl
clc
cmp
mov
dec
xor
addr16
ret
js
scas
out
adc
pop
push
std
or
leave
test
mov
lea
fbstp
ret
jae
or
jmp
mov
clc
push
icebp
test
pop
inc
mov
sbb
pop
movl
jns
push
pushl
or
adc
xchg
ss
and
lcall
adc
dec
pop
aaa
jge
in
fldcw
sbb
idivl
ljmp
mov
stos
pop
xchg
pop
mov
xchg
mov
cmp
jae
popf
icebp
call
inc
lock
sub
sub
xchg
xor
sahf
mov
call
es
ja
lahf
mov
mov
inc
test
fildll
push
test
lcall
call
mov
push
ss
dec
mov
pop
popf
nop
xor
das
inc
cld
jg
mov
push
and
pushf
test
jbe
imul
sub
call
mov
or
and
xchg
cmpsl
xor
mov
mov
pop
decl
lock
clc
and
cmc
cli
imulb
pop
or
decl
mov
cmpsl
jp
add
adc
lea
sbb
push
add
dec
pop
cmpsl
ljmp
sbb
xor
jno
out
adc
cmp
addr16
repz
mov
loop
int3
dec
mov
inc
inc
inc
in
pusha
sbb
movsl
xchg
jg
daa
xlat
aam
push
gs
pushl
jno
insl
pop
pop
xchg
loopne
shrl
fisttpll
cmp
movsb
sbb
ljmp
lcall
and
adc
cmc
mov
fwait
jle
dec
fdivrl
stos
mov
xchg
jge
mov
or
ds
lock
xchg
stos
clc
adc
popf
or
aad
imul
xor
cs
call
enter
call
inc
and
imulb
push
popa
adc
adc
add
or
sub
push
aas
scas
lret
gs
pop
test
mov
decl
dec
push
imull
pop
jo
je
cmp
mov
hlt
xchg
xchg
decl
sarl
movsb
fsubr
lods
jg
fcmovbe
pop
repz
cli
cld
arpl
fiadds
ss
push
jnp
sbb
hlt
cmpsl
aaa
mov
pop
icebp
data16
pop
incl
mov
mov
cmp
jp
hlt
push
jp
jns
or
pushl
out
cltd
dec
shl
adc
sub
clc
push
lods
push
enter
clc
xchg
xlat
int3
loop
decl
dec
xchg
dec
add
not
aad
bound
repnz
aaa
xchg
sub
outsb
aad
sub
call
into
movb
pusha
mov
outsl
pop
jl
jl
out
shl
pop
iret
mov
sub
mov
lds
mov
decl
enter
stos
sbb
adc
and
xchg
pop
xor
mov
sbb
xor
xor
dec
incb
add
xchg
mov
mov
dec
dec
aam
in
adc
jbe
jg
jmp
ss
ss
bound
add
cmp
idiv
cmp
ficomps
pop
jne
loop
mov
mov
pop
push
hlt
cld
adc
pushl
push
bound
jnp
mull
or
sarl
das
test
pushf
scas
gs
adcl
cwtl
enter
test
xor
mov
xchg
pushf
movsl
out
cli
ljmp
mov
xor
xor
inc
call
mov
popa
lret
rcrb
decl
imul
add
xchg
xchg
pusha
sbbb
inc
and
test
clc
mov
stc
xchg
inc
aam
notl
arpl
test
lret
xlat
mov
scas
inc
dec
xchg
sbb
sarb
mov
mov
jle
inc
adc
cmp
mov
fsubr
xor
pop
xchg
lock
sbb
mov
mov
cld
mov
mov
xchg
inc
xchg
pop
setle
and
lcall
sbb
fbld
das
orl
dec
mov
xor
add
in
mov
xchg
incl
sub
lea
into
xor
out
sbb
sbb
dec
pop
lods
push
xor
test
sub
fwait
data16
pop
xor
mov
sbb
sub
cwtl
adcb
les
jb
dec
mov
loop
pop
and
test
or
cli
int
enter
ljmp
cmpsb
jg
mov
cs
lahf
aam
imul
sub
bound
mov
push
cwtl
cmp
mov
cmp
mov
cmpl
pop
dec
scas
push
adc
mov
xchg
cmp
ss
call
push
push
pusha
inc
xchg
xor
xchg
jmp
sbb
lods
aas
scas
sub
pushf
les
sar
jmp
xchg
adc
sub
xchg
out
xchg
pushf
loopne
mov
shlb
pop
add
push
cmp
pop
cmc
stos
xor
mov
sbb
mov
mov
imul
js
adc
cmp
sbb
sbb
rcrl
shl
xlat
add
cld
cmpsb
fiaddl
clc
and
sub
mov
mov
dec
pop
shll
fisttps
push
dec
dec
decl
jecxz
scas
jns
repz
lret
mov
daa
cmp
or
imul
lret
sub
jb
add
dec
xchg
mov
push
lock
incl
sbb
mov
mov
repnz
sti
mov
cmp
icebp
into
test
decl
xchg
out
mov
inc
pusha
add
sub
seta
mov
mov
mov
push
sub
arpl
push
jo
pop
push
sub
push
xor
pushl
std
test
out
xchg
sti
mov
pop
lahf
sbb
addb
add
or
and
fisubl
out
jbe
ja
cmp
aam
cmp
cwtl
adc
shlb
dec
adc
cmp
mov
xor
sub
enter
movsl
jge
sbb
lcall
jg
jmp
push
out
aad
jne
jle
adc
mov
fdivs
jno
pop
mov
leave
or
pop
call
pop
dec
sbb
bsf
xchg
mov
stos
sub
dec
jo
or
call
cmp
sbb
stc
xlat
daa
dec
and
dec
scas
out
add
popa
fdivs
decl
int3
outsl
jbe
push
cmp
test
mov
lock
ds
pushl
inc
xchg
clc
or
mov
insl
lods
add
sbb
lock
push
enter
jl
jo
add
jg
inc
xchg
jbe
lahf
and
mov
nop
mov
xor
fldenv
jg
mov
stos
pusha
stos
fidivrs
xchg
sub
push
test
add
jle
lcall
xor
xlat
in
or
adc
sub
or
cld
cmc
xchg
in
jne
pop
loop
mov
xlat
sahf
and
je
addr16
out
xchg
inc
adc
jno
push
movsb
aad
and
mov
cmp
pop
cltd
cmpsb
sbb
jno
jp
sub
jl
mov
jbe
ss
loope
cmp
jmp
adc
fnstcw
mov
xor
outsb
out
popf
aas
mov
jmp
out
cli
incl
pusha
fucomp
pop
inc
xchg
inc
add
ljmp
cld
fsubrl
in
out
adc
call
pop
mov
nop
lods
dec
jmp
mov
cmp
addr16
push
jno
inc
in
adc
test
mov
ljmp
leave
add
push
outsl
lds
mov
mov
gs
jns
rcrb
in
test
movsb
es
call
mov
jo
xlat
icebp
flds
in
iret
jnp
stos
fdivp
and
fucom
and
ljmp
dec
push
iret
fwait
gs
repnz
dec
xchg
push
fists
aaa
adc
mov
out
lea
mov
mov
fs
nop
or
mov
js
add
pop
pop
mov
fsubl
push
dec
outsb
mov
call
dec
xchg
inc
adc
mov
pusha
fildll
dec
jmp
mov
lock
sar
push
out
and
xchg
cwtl
pushf
xchg
mov
std
jnp
ror
xchg
pop
push
test
inc
xor
jb
jecxz
fwait
fisubl
lahf
mov
rorl
cmp
cmpsb
cs
outsb
es
adc
cs
lcall
ljmp
mov
bound
out
add
xor
add
fistpll
add
arpl
call
in
add
mov
cmp
and
out
mov
inc
xchg
add
mov
ljmp
mov
stc
dec
out
pop
and
fdivrs
bound
jno
sar
in
fcomip
lcall
and
mov
cmpsb
js
add
or
insb
push
fstl
xchg
ljmp
dec
or
sti
jge
push
pushf
stos
xchg
vcvtps2pd
sub
lcall
bound
out
rolb
sbbb
inc
push
mov
cwtl
cmp
lcall
jle
xor
popa
es
lock
out
push
ss
jbe
inc
mov
jg
idiv
cmp
push
lea
mov
aas
cmp
call
mov
aad
lods
xchg
ljmp
add
inc
hlt
outsb
inc
xor
cltd
int
push
vmptrld
jns
data16
adc
mov
leave
arpl
test
data16
cltd
cmp
xchg
mov
decl
mov
fcoml
cmpsl
std
dec
jnp
pushfw
jo
inc
ret
into
fwait
popf
cli
cltd
lea
decl
gs
push
xchg
test
sbb
mov
test
ss
decl
es
sti
shll
mov
ja
push
clc
mov
pop
dec
addr16
xchg
rorb
xchg
call
adc
cmp
lcall
dec
mov
xchg
cld
jno
int
jmp
ljmp
inc
insb
shrb
hlt
xchg
sbb
ss
cmp
pop
or
jo
lcall
mov
pushf
or
js
in
andb
pop
repnz
and
cmp
xchg
pop
lods
push
fwait
mov
xor
call
mov
mov
adc
shl
mov
ljmp
xchg
inc
add
cli
mov
lahf
mov
pushl
std
cmp
das
cmpsb
fistpll
sahf
mov
sbb
cmpsb
sub
sarl
loopne
std
lret
mov
cli
push
push
mov
bound
ljmp
pop
mov
fcmovnbe
adc
cmp
decl
mov
mov
clc
sbb
outsl
and
int
fs
loopne
call
jg
sub
iret
xchg
je
pop
and
inc
ror
xor
incl
sarb
outsl
mov
test
xor
jle
ja
mov
dec
push
pop
mov
jg
sbb
xchg
sub
movsb
xor
inc
movsb
insb
and
or
data16
add
call
cld
test
les
mov
shl
out
fbld
movsl
ret
pop
mov
inc
ffreep
pushl
and
stos
jp
ja
mov
sub
lods
loope
jne
and
add
add
in
adc
sbb
inc
mov
jae
and
jne
fnstenv
fcos
out
repz
imul
mov
packsswb
and
mov
xor
out
daa
inc
mov
call
jge
outsl
mov
imul
adc
lahf
push
cmp
ret
sub
addl
shrb
arpl
xor
ret
scas
mov
clc
lock
xchg
pop
pop
imul
incl
daa
dec
in
lods
add
wrmsr
inc
or
in
js
mov
push
sahf
sti
fadd
jae
fisubrl
mov
aad
dec
xchg
jmp
mov
decl
add
adc
int
ret
pop
test
or
jne
xlat
fwait
rorl
dec
mov
pop
ret
xchg
mov
in
aas
aaa
mov
hlt
std
sub
incl
lds
dec
mov
cmp
jmp
mov
and
sbb
pop
sbb
faddp
int3
and
jp
ret
adc
xchg
ljmp
jne
into
insb
mov
aas
cmp
xchg
xchg
lea
rcll
aad
jg
jo
ficompl
push
pop
cltd
or
sub
pop
in
sbb
and
call
jge
fsubrs
ret
movsl
mov
iret
inc
icebp
push
sub
sbb
pusha
ljmp
jmp
aam
lds
push
mov
push
repnz
mov
jne
mov
mov
dec
mov
out
or
popa
fstpl
adc
pop
sbb
add
jae
lods
fistpl
filds
mov
fadds
and
cmc
mov
jmp
bound
mov
fisubl
shll
jl
lcall
inc
inc
rcrb
test
loope
add
xchg
sbb
sbbl
jmp
in
stos
push
sahf
jb
mov
cmp
mov
lret
xor
inc
mov
shlb
incl
gs
mov
jne
ljmp
push
sub
pushl
jae
adc
xchg
aam
push
jo
push
mov
test
lods
mov
or
lcall
imul
stos
addr16
adc
cli
lahf
loop
scas
jns
orb
pop
fs
sub
push
repnz
loop
cmc
mov
lods
lcall
adc
push
outsl
pop
sbb
call
shll
mov
inc
rcrl
jbe
lret
fwait
cmpl
lock
jmp
mov
mov
mov
xchg
or
pop
movsb
loope
cld
cmc
xor
cld
pushl
mov
pop
mov
inc
addr16
fnstcw
inc
cmpsb
sti
daa
and
jmp
xchg
push
push
jmp
int
scas
movsb
movsl
sbb
icebp
or
jmp
and
lds
rolb
pop
rcll
xchg
ja
or
imul
jnp
out
fstps
cwtl
repnz
faddl
jo
xchg
rclb
jmp
sub
jecxz
test
add
and
in
in
xor
fmull
icebp
mov
imul
sub
cmpsl
xor
pushf
aas
int3
stos
or
push
push
fbld
cmp
mov
mov
cli
mov
mulb
hlt
aaa
ficoml
or
mov
mov
lods
call
sbb
ss
outsl
push
fwait
mov
xor
incb
sbb
popa
cs
movsl
add
adc
ret
jg
sub
das
inc
bnd
pop
cmpsb
and
decl
add
jno
mov
fisubrs
popa
sub
sub
data16
call
movsb
clc
xchg
inc
inc
fsubl
or
fisttpl
cmc
mov
jae
dec
sbb
cmpsl
pop
dec
loope
xchg
ljmp
pop
add
add
sub
jg
xor
inc
lahf
sub
dec
out
mov
icebp
xchg
cmp
lcall
decl
loope
jb
fsub
pop
mov
sub
xor
push
data16
jmp
jae
lcall
out
mov
or
mov
outsb
cli
into
ljmp
mov
mov
push
ret
inc
mov
inc
ss
clc
movsb
push
dec
sbb
jmp
mov
adc
outsl
clc
jmp
fucomip
and
mov
roll
adc
inc
adc
cmpsb
ljmp
lods
hlt
shl
inc
xor
xchg
sahf
out
inc
sub
mov
jbe
movsl
adc
jnp
scas
fwait
es
push
xchg
adc
sub
jmp
ljmp
xchg
mov
stos
fsts
je
cld
xchg
jo
add
incl
mov
sbb
into
repnz
movsl
es
dec
inc
mov
or
dec
mov
aad
mov
ds
xlat
cmpsb
outsb
clc
sar
push
adc
sub
cmp
inc
rclb
out
pop
jb
sub
xor
dec
mov
test
jg
lcall
pushf
xor
sub
lahf
rcrb
adc
iret
sbb
fcomip
decl
sub
out
xlat
shll
jb
call
faddl
xchg
imul
pop
les
xor
ss
and
mov
imul
jae
daa
add
pop
lret
std
sahf
jmp
push
flds
jnp
xchg
out
push
call
lds
push
and
mov
cmp
lods
pop
bound
clc
aas
xchg
out
ss
lcall
jns
pusha
les
adc
add
lret
inc
adcl
cmc
pusha
test
sbb
test
lods
lds
int3
mov
cld
ljmp
and
icebp
and
cmc
stc
mov
jno
push
xlat
sub
call
mov
fnstcw
ja
or
jb
arpl
fisttpll
pop
xlat
lcall
ret
jl
mov
testl
cwtl
pusha
in
push
fs
inc
cmp
pop
adcb
sub
sub
and
test
xchg
jae
xchg
jg
incl
mov
cld
mov
push
xor
insl
cmp
mov
incl
pop
repz
or
mov
lock
jg
scas
push
icebp
shll
xlat
inc
rcrl
jae
sub
jmp
jp
sarl
bound
mov
sub
in
mov
pop
lds
call
push
cmp
daa
out
cmp
lcall
add
decl
cmp
or
outsl
jle
sbb
push
scas
into
and
cltd
dec
mull
xchg
xor
pushl
mov
hlt
mov
dec
lret
cmpsb
pusha
jnp
popf
dec
in
jae
shrl
push
ret
rcr
incl
and
icebp
filds
adc
and
sub
scas
les
incl
lcall
lcall
aad
lea
mov
pop
jge
push
hlt
sbb
popf
jmp
cmp
repnz
xor
movsb
add
xchg
pop
jb
je
inc
aaa
xchg
fwait
cmp
and
mov
push
or
out
lea
leave
push
push
adc
test
scas
sub
insb
leave
cmp
jae
and
pop
inc
rol
ss
jmp
pushl
jb
dec
push
pop
mov
outsb
repz
and
sbb
lds
lcall
das
sbb
jl
jae
pop
cmpsl
cs
and
jmp
ss
int3
fdivs
ret
insl
inc
sub
out
lahf
jle
push
pop
das
mov
jo
ljmp
cld
aam
lea
test
push
sub
sub
sub
push
imul
mov
les
notb
cmpsl
outsb
aad
inc
loop
sub
jbe
cs
inc
pushl
push
mov
popa
add
mov
pop
test
sub
in
add
je,pn
jg
fdivl
das
sar
jae
push
cmc
movsb
cs
gs
pop
daa
mov
inc
mov
pop
jmp
icebp
lods
scas
xchg
insb
aam
dec
imul
cmpsl
push
out
decl
mov
push
mov
mov
sub
push
dec
inc
xchg
xchg
pusha
pop
cli
mov
dec
sbb
incl
mov
inc
lret
add
push
xchg
aam
and
dec
in
xchg
xor
mov
call
repnz
xchg
idiv
sahf
shrl
decl
sarl
lock
mov
outsb
ljmp
test
cwtl
mov
call
fcompl
sub
fsubrp
ret
jl
loope
fistpl
mov
xor
adc
lret
rcl
in
cmpsl
fidivrs
ror
incl
dec
adc
aad
fisubl
mov
fsubl
sbb
sub
cmp
ljmp
popa
jns
jl
test
cmpsb
push
out
mov
pop
sbb
call
mov
bound
and
decl
cmpsb
or
sub
or
out
pop
loopne
scas
orl
and
shrb
pop
incl
cwtl
cmp
mov
sbb
js
pusha
mov
scas
js
in
stos
push
loope
cmp
cs
inc
push
ret
pop
pusha
xor
inc
popa
xchg
mov
xchg
pop
addr16
les
add
je
add
and
incl
mov
aad
fimuls
ret
push
nop
lret
xchg
pushl
popa
push
fistl
mov
mov
sbb
cmp
jle
and
cmp
das
aam
or
mov
xchg
push
push
icebp
addr16
sbb
test
jae
sbb
movsb
jl
loop
pushl
sub
sahf
add
test
cmp
test
mov
insl
cld
mov
push
pop
aad
cmp
pop
es
mov
fwait
mov
lds
lret
ljmp
mov
or
sub
mov
jns
test
outsl
out
ret
dec
xor
pushl
imul
dec
mov
sbb
sbb
inc
mov
fistps
insb
fiaddl
push
pop
sub
push
cmp
int3
pop
push
adc
adc
data16
mov
jmp
outsb
gs
inc
je
cmp
in
ja
mov
mov
mov
pop
jg
pushl
fbstp
call
jae
jnp
cmp
cmp
cmpsb
leave
mov
lcall
adc
xor
fnsave
xchg
hlt
pop
icebp
adc
jnp
mov
sarl
mov
or
mov
loope
sbb
incl
repz
mov
movsb
mov
xor
adc
pop
inc
sbb
loopne
aam
pop
lahf
sar
decl
jp
and
cltd
into
je
repz
out
fucompp
xchg
mov
cmp
stc
dec
cmp
mov
pop
js
lret
cmp
xchg
hlt
push
pushf
xor
mov
xchg
sub
and
test
ret
or
dec
cmp
decl
out
pop
pop
rolb
xchg
mov
out
test
mov
inc
ljmp
mov
push
jg
and
dec
out
sbb
and
ljmp
push
mov
out
adc
add
cwtl
bound
sti
pop
shrb
ljmp
clc
pop
jno
test
push
enter
stc
js
ret
pop
xor
outsb
ljmp
mov
mov
sub
push
popf
adc
sub
call
inc
jmp
sarb
testb
ror
imul
xor
push
push
mov
decl
jb
pop
outsl
push
push
mov
pop
stos
or
pop
jb
push
ja
dec
mov
mov
inc
xchg
mov
add
inc
movsb
sbb
mov
push
mov
fldt
jmp
and
daa
sub
and
lea
sub
movsb
cmc
mov
cwtl
dec
pushf
shrb
pop
cld
incl
cld
xor
scas
stc
jnp
aas
enter
lods
xor
int
fs
sub
call
mov
int
cmpsb
out
fs
inc
ds
mov
pop
mov
aad
mov
push
xor
xlat
dec
cli
sbb
mov
or
push
int3
js
xchg
enter
jmp
mov
movsl
inc
ljmp
xchg
jnp
jmp
inc
popf
fdivrp
jmp
loop
pop
inc
adc
or
cmp
dec
test
testb
dec
and
pop
pushl
ja
je
dec
xlat
xchg
mov
gs
add
push
lock
push
sbb
and
or
xchg
cmpsb
cmp
sub
add
cmp
dec
push
mov
inc
sbb
test
sbb
ljmp
or
je
mov
jbe
push
add
js
mov
aam
mov
call
sbb
iret
or
xor
test
scas
jp
sbb
decl
xchg
in
fldcw
fsubs
xor
lahf
mov
pop
sahf
lods
pmullw
dec
int
and
aam
jmp
scas
imul
inc
lea
das
sarl
pop
add
pushl
jge
mov
adc
pop
cmp
decl
mov
fcomip
ljmp
loopne
call
cmp
xor
fnstsw
jl
adc
mov
rorl
add
push
inc
aam
dec
xor
stos
lret
ret
pop
mov
jg
dec
pusha
lds
repz
jbe
sub
pop
jle
dec
sbb
call
inc
dec
inc
mov
ret
xchg
faddl
push
add
mov
lret
insb
test
seto
sarb
add
std
mov
mov
je
sbb
jg
cmp
inc
lock
incl
mov
mov
mov
fnstenv
and
and
pop
cmp
mov
loope
xor
mov
es
push
pop
xor
lcall
jecxz
adc
callw
jmp
aam
mov
add
incl
repnz
sbb
in
sbb
jb
stc
std
and
movsb
adc
add
subb
push
ja
fldl
pop
rol
xchg
lahf
xchg
out
inc
dec
repnz
shll
pushl
push
aam
mov
dec
push
jno
push
or
scas
pop
stc
sub
stos
jg
pop
scas
ret
int3
push
cwtl
rol
mov
mov
push
outsl
push
push
xor
mov
mov
call
mov
addl
lcall
in
aad
cli
out
ljmp
inc
jnp
add
ds
mov
pop
fsubs
imul
and
cmp
jns
adc
aaa
ret
fwait
adcb
test
xorb
loope
addr16
push
or
icebp
aaa
lret
call
cmc
mov
enter
mov
insb
nop
aad
sbb
dec
push
lods
bound
fnsave
sbb
adc
sbb
and
ficomps
repz
stc
xchg
hlt
pop
lcall
inc
add
pop
cltd
loopne
daa
call
outsl
adc
pop
lock
xchg
sbb
incl
div
add
jg
dec
or
bound
jne
into
jb
das
inc
lods
push
popa
ljmp
mov
xor
lock
jnp
dec
cmp
mov
pop
cmp
pushl
sbb
pop
push
rclb
jmp
inc
lods
aaa
pop
and
in
cmp
lcall
test
and
cmpsb
dec
inc
push
jl
xor
out
xchg
stos
mov
jg
inc
jle
add
loop
pop
mov
dec
cmp
mov
adc
icebp
je
mov
mov
xchg
adc
pop
mov
push
pop
mov
popa
test
int3
mov
jno
fstpt
cmp
jge
add
imul
mov
fidivl
pop
pop
jbe
shl
or
test
jmp
mov
mov
lret
jne
inc
testb
leave
sahf
mov
sar
cmp
and
jmp
pop
add
cmpsb
popa
out
push
xor
out
clts
hlt
shr
ss
loop
movsb
fcoml
dec
adc
std
cld
pop
out
data16
and
pop
test
push
test
psubsw
push
rcrb
xchg
mov
jg
or
sbb
cli
xlat
mov
pop
cltd
fadds
jg
psrlq
xchg
into
lods
jle
in
or
inc
jle
lcall
mov
or
mov
ljmp
ljmp
xlat
enter
popa
cmp
sub
test
jmp
adc
mov
push
aas
cli
xchg
aam
add
repnz
aam
outsb
dec
ds
hlt
push
sbb
jmp
mov
cmp
sarl
and
add
jmp
xor
leave
loop
cmp
xchg
repnz
mov
jecxz
outsb
in
aad
in
xchg
jge
sbbl
inc
imul
push
add
out
pop
mov
jo
call
xchg
lods
cmp
stos
xchg
push
and
cmp
push
incl
repnz
mov
orb
xchg
mov
lea
ret
jno
push
shll
sbb
fidivs
xor
dec
fwait
cmp
sub
xchg
add
jle
loopne
fsts
out
cli
call
stos
pushl
cli
inc
mov
rcll
jecxz
ds
ds
test
call
jmp
stos
push
mov
fists
dec
add
cld
jl
repnz
test
adc
outsb
test
push
in
fiaddl
pusha
ud0
ljmp
daa
repz
inc
or
xchg
imul
fdivrp
in
pop
mov
incl
int
or
idiv
xor
pop
adc
pop
fsub
dec
mov
sub
cmc
jmp
and
jp
pop
push
mov
xchg
and
cmp
mov
aaa
adc
repnz
dec
sub
lcall
push
test
hlt
jge
cmp
je
ds
xchg
les
bound
ja
icebp
shrl
clc
pushl
and
fdivl
in
cmp
in
fs
xlat
add
ljmp
sbb
ficoms
clc
adc
jp
mov
jnp
xor
cmp
jns
adcb
arpl
inc
rcrb
pop
mov
stos
testb
decl
test
test
inc
add
fidivrs
das
push
mov
call
sbb
mov
out
jae
out
xor
daa
cmp
sbbb
pop
pop
adcb
inc
adc
call
dec
xlat
mov
and
test
xchg
add
jmp
aad
and
push
test
pushl
out
lret
daa
sbb
sbb
sub
in
adc
repz
imul
out
idivb
pop
movb
insb
add
inc
inc
xchg
fidivrs
in
aam
das
rolb
mov
in
scas
jne
shrd
jne
add
push
adc
cld
and
loopne
adc
decl
or
scas
in
outsl
lods
ret
mov
rol
mov
in
sub
or
push
add
sahf
xor
ljmp
jb
lds
pop
push
loop
mov
sahf
push
sbb
lcall
movsl
ljmp
fcomps
jo
rorb
mov
xor
push
std
incl
dec
fcomps
mov
push
mov
je
sar
imul
sarb
mov
mov
mov
fisttps
sarl
rep
mov
pop
xchg
lods
in
dec
push
mov
jp
inc
mov
iret
add
jl
notl
sub
xor
in
push
stos
xchg
jae
or
into
mov
sub
fs
lock
ljmp
push
std
and
xchg
orl
mov
stos
lock
loop
cmpsl
int3
xor
lcall
sub
movsb
iret
mov
stos
out
sub
mov
mov
aaa
sbbb
decl
push
mov
dec
xchg
or
fisubs
fsubrl
pushl
add
out
addl
push
iret
inc
into
mul
ljmp
mov
sbb
sbb
out
push
mov
xor
inc
cmpl
xor
lcall
aaa
mull
jecxz
inc
mov
inc
loopne
cld
dec
enter
fisubl
xchg
add
shl
xchg
lcall
out
inc
insl
lcall
jle
pop
inc
jnp
xlat
jge
add
mov
in
loop
cmc
push
jae
data16
push
ret
imul
add
and
divl
jo
lcall
adc
push
int3
and
int
mov
push
xchg
bound
mov
cmp
inc
fisubrl
adc
pusha
cld
or
adc
pop
cmp
lcall
pop
movsl
les
push
xchg
in
movsb
push
push
mov
pop
popa
jo
inc
pop
pop
mov
mov
mov
in
pushf
lods
scas
push
outsl
xlat
sbb
clc
jne
filds
mov
aaa
ret
jp
or
push
mov
pop
jge
inc
jmp
into
sti
push
mov
pavgw
decl
mov
fisttpll
arpl
jo
out
lds
push
fisttps
sub
xchg
je
lcall
mov
push
call
in
xchg
cmp
int
sti
sti
jno
adc
outsl
pop
cld
incl
movsb
jb
inc
call
pop
je
xchg
mov
pushl
imul
outsb
sbb
mov
pop
push
and
jae
sbb
ss
pop
sub
stos
pop
jne
adc
jmp
push
mov
jns
xlat
mov
jp
addl
xor
out
fldcw
mov
sbb
stos
ss
xchg
adc
iret
jecxz
repz
mov
outsl
ljmp
shr
push
call
mov
pop
mov
mov
adc
call
adc
or
xchg
cmp
adc
pop
mov
mov
sbb
inc
jecxz
mov
and
sbb
decl
mov
fstl
pop
getsec
into
ret
mov
sahf
js
push
incl
repz
mov
add
mov
add
dec
fcoms
xchg
fstps
popa
jp
inc
mov
push
ljmp
dec
jno
xchg
movsl
mov
popa
jg
push
jae
pop
rcl
jmp
out
addr16
loopne
shrb
cli
push
push
xchg
push
pop
js
mov
icebp
cmp
jg
and
into
pop
push
out
shr
xchg
loopne
mov
and
decl
rcrb
sbb
dec
cltd
int3
jo
jmp
cmp
ss
insl
in
stc
in
push
jg
xor
inc
sub
push
sti
pop
add
mov
jle
insl
insl
loopne
incl
inc
daa
lret
cld
mov
ret
or
sub
ud0
mov
inc
or
xlat
mov
or
and
adc
arpl
lock
inc
add
aad
fs
popa
fwait
jo
rcrb
fcomip
in
lcall
mov
mov
dec
push
pop
mov
sbb
insb
push
jmp
les
xlat
inc
fisubs
das
ja
mov
fsub
pushf
cmpsb
jne
xor
ljmp
iret
dec
clc
jnp
arpl
push
cmp
adc
and
call
sbb
pop
or
in
push
std
jp
jl
jne
pop
adc
cltd
lods
pop
or
ljmp
aam
loop
sub
push
sub
movsb
mov
sahf
jns
add
loop
test
ljmp
jl
cmpsb
pop
dec
add
rclb
mov
mov
insb
outsl
jns
fcomip
ds
ficoml
push
cltd
ret
cmp
adc
mov
call
lock
xchg
cltd
in
cmc
push
add
decl
cmc
adcb
andb
xchg
push
mov
xorb
lcall
dec
lcall
or
pop
ja
jo
fs
xor
aas
sbb
push
xor
inc
push
inc
dec
stos
push
xor
jbe
adc
sub
incl
mov
mov
push
movsl
pop
test
lock
sub
movsb
test
pop
call
push
cltd
or
filds
int
movsb
inc
jl
lret
lods
add
push
jbe
pop
in
pop
jo
addr16
addr16
mov
push
cmp
sbb
ret
xor
rol
inc
test
inc
mov
jnp
pop
push
hlt
inc
jge
xlat
in
mov
xchg
lock
jb
mov
push
movsb
or
test
das
bswap
jmp
dec
pop
fcoms
shrl
dec
call
mov
cmpsb
dec
test
andb
lds
hlt
scas
lret
movsl
lods
ret
fwait
pop
into
fcomip
push
xchg
cwtl
xor
or
sahf
adc
push
pop
outsb
dec
sub
outsb
add
fistps
std
or
dec
jp
cwtl
inc
xchg
aas
je
fldl
aaa
add
repz
mov
ljmp
mov
mov
aaa
lds
stc
xchg
cmp
scas
cli
jns
rep
mov
js
ret
sub
inc
int3
lods
mov
dec
xor
out
jg
aad
xchg
mov
sub
pop
sub
ljmp
sub
imul
into
xor
sbb
cmp
out
add
arpl
decl
or
adc
out
rcrl
imul
cmpsb
or
nop
mov
sbb
jmp
ljmp
mov
adc
scas
add
sbb
push
popf
jmp
mov
in
mov
cld
shll
cmp
mov
testb
andl
in
jns
loopne
xor
sub
inc
mov
jnp
mov
cmp
jp
call
jmp
mov
jg
sbb
mov
stos
sbb
inc
inc
es
lcall
leave
sbb
sbb
mov
xor
or
addb
mov
cmp
inc
dec
or
aam
enter
leave
sahf
xchg
scas
movsl
iret
popa
int
gs
das
lods
lds
dec
lods
loopne
push
movsb
cmc
xchg
es
and
test
cs
jmp
jl
roll
inc
lods
test
div
jle
test
clc
mov
push
push
jmp
dec
sbb
scas
movlps
cmp
nop
scas
and
sbb
test
imul
pushl
stos
xorb
sub
or
sub
push
loop
jae
in
icebp
jmp
fwait
iret
outsb
std
test
shlb
add
imul
test
jg
sub
notb
pop
lret
sbb
mov
xchg
pop
das
incl
stos
inc
test
push
out
push
sub
js
dec
mov
testl
fdivs
mov
clc
subl
mov
jl
fsubs
adc
ds
nop
xchg
jb
nop
dec
les
call
loopne
fdivrl
sub
adc
arpl
mov
out
incl
andb
scas
or
je
sbb
std
xor
test
jmp
ljmp
inc
sbbl
add
sbb
lcall
pop
cltd
cmp
add
fsubp
dec
sub
mov
pop
or
dec
add
mov
inc
adc
jmp
aam
arpl
cmp
pop
adc
push
mov
push
sub
jns
call
inc
and
push
jns
aad
lahf
push
icebp
fcmovb
jne
sahf
push
cli
sub
mov
rcrb
hlt
jmp
pushf
pop
sub
int
mov
ja
add
or
es
cmp
lods
dec
xor
mov
mov
out
jmp
pop
jp
pop
xor
mov
jno
dec
lcall
leave
xchg
jmp
jo
lret
xlat
or
push
or
fists
out
fldenv
lret
mov
inc
lcall
pop
pop
sub
clc
test
inc
or
loope
lock
inc
aaa
stc
in
xor
addr16
cmp
mov
cmc
and
mov
push
cmpsl
cmc
mov
mov
insb
das
popa
xchg
pop
lock
pushl
inc
iret
daa
dec
addr16
pop
ret
pusha
lahf
daa
pop
xchg
cmp
xchg
cld
lods
adc
call
xchg
dec
or
mov
out
fadds
push
ja
cmp
rcrb
mov
jg
call
out
in
mov
dec
push
inc
adc
dec
negl
fwait
pop
inc
cmp
pop
loop
add
lcall
das
push
sbb
movl
test
mov
fwait
mov
xor
in
ret
jns
sbb
cmp
aad
pushl
sub
fimuls
std
jl
in
adc
nop
rcrl
inc
mov
cs
jmp
pop
mov
fnstcw
push
out
scas
test
xor
arpl
jmp
fcoml
mov
cld
pop
lea
imul
fidivl
jb
mov
mov
into
xor
pop
lock
sbb
bound
clc
push
sub
xor
std
mov
mov
cmp
jne
jae
xchg
jns
push
pushf
inc
inc
incl
jae
xchg
mov
pop
jg
sarb
insb
je
xchg
adc
jecxz
pop
dec
dec
in
testb
mov
jg
pushf
lea
mov
jnp
popf
cmp
out
jne
fidivl
or
faddl
mov
fnstcw
jg
push
xchg
leave
stos
dec
adc
out
loopne
movsl
jbe
iret
lock
fcmovnbe
adc
mov
and
hlt
pop
add
out
mov
jne
xchg
sti
decl
out
jae
and
xchg
imul
dec
outsl
jae
and
jg
and
xchg
rcrl
and
inc
mov
sbb
stc
cld
lcall
xor
pop
sub
xchg
add
notl
lret
test
clc
aad
sbb
decl
lock
test
sti
dec
lods
push
pop
xchg
xchg
aam
add
adc
decl
jne
shlb
pop
jnp
data16
and
or
hlt
lcall
enter
jb
or
ljmp
lock
cwtl
jmp
push
mov
es
xchg
mov
shl
test
sbb
call
decl
mov
mov
fs
js
aad
mov
call
ljmp
ret
fs
xchg
in
sub
repz
imul
inc
push
pushl
push
lret
cld
inc
mov
push
ficoml
ror
test
jl
es
cwtl
decb
call
fucom
cmp
aad
and
jno
push
pop
sub
or
in
mov
add
jmp
scas
xchg
sbb
prefetch
push
mov
or
push
and
imul
pop
std
mov
mov
xor
xor
mov
lret
pop
sub
clc
pop
cs
or
add
push
test
push
jg
call
loopne
ljmp
mov
mov
mov
and
mov
in
orb
fdivrs
mov
jp
fdivrs
int3
aam
xor
jmp
mov
test
pusha
mov
addl
fucomip
mov
mov
imul
inc
lds
sbb
incl
daa
dec
push
shr
cmp
ss
imul
testl
adc
mov
fsubl
fsubs
stos
mov
iret
inc
jnp
sub
sbb
cmp
cmp
xor
jmp
nop
xor
decl
dec
ja
hlt
es
xchg
adc
ficoms
lcall
cltd
cmpl
stos
pop
sub
ret
cmpsb
push
cmp
pop
std
push
sbb
jle
scas
mov
les
xor
mov
loop
mov
push
inc
sub
sbb
xchg
mov
jp
jp
jecxz
fildll
stos
jl
imul
xor
fistl
sahf
ficoml
ds
sbb
cld
ret
sbb
lret
fistpl
ficoms
inc
aas
out
mov
sbb
pushl
xor
adc
xchg
jmp
mov
out
xchg
pop
test
pushl
or
mov
pop
test
sahf
mov
lods
aam
idivb
ljmp
lock
adc
jg
mov
adcl
adc
pushf
in
and
decl
inc
ja
adc
arpl
xchg
popf
arpl
mov
mov
mov
pop
fldl2t
add
incl
add
daa
adc
adc
in
sti
aaa
mov
pop
sub
pop
sti
lret
dec
loopne
mov
je
pushl
dec
or
jns
ljmp
mov
or
xor
mov
iret
mov
movsb
pop
push
and
fs
loopne
mov
decl
lcall
mov
fcoml
pop
mov
pop
mov
aaa
dec
in
call
lret
clc
jmp
notl
arpl
push
cwtl
decl
sbb
ljmp
icebp
push
faddp
shll
rcl
insb
mov
push
popf
or
out
jb
pop
push
shlb
mov
pop
test
lock
lcall
push
fistpl
adc
pop
insb
ret
rcll
ret
push
les
sub
cli
iret
loope
pop
je
inc
inc
lods
ret
ret
mov
xor
ss
lods
pushl
arpl
mov
test
push
cmc
in
out
fwait
inc
ljmp
std
cmpsb
dec
jb
call
jne
xor
inc
rorl
loop
xchg
mov
jg
dec
gs
and
mov
decl
imul
les
add
lods
adc
pop
lahf
sub
cmp
sbb
nop
cmpsb
mov
int3
mov
and
inc
cmp
lds
mov
xor
mov
outsl
test
pop
mov
pop
cmp
xchg
jno
mov
jns
iret
out
in
movsb
push
push
insl
mov
div
cmp
aaa
xor
clc
ljmp
push
stc
nop
cld
loope
mov
lods
or
mov
xchg
sbb
sbb
or
lcall
test
aaa
out
mov
fbstp
and
cld
push
data16
xor
push
or
mov
fwait
je
and
mov
dec
lahf
daa
inc
jl
xor
mov
sbb
cmp
std
push
outsb
mov
cmp
xchg
push
lcall
stos
pop
add
mov
add
shlb
std
leave
push
xchg
push
mov
jmp
pop
sub
orl
rol
cmp
iret
loopne
mov
and
mov
ljmp
scas
test
leave
outsb
into
in
imul
sbb
js
jo
in
leave
imull
jl
jl
in
lcall
mov
mov
inc
mov
out
nop
xchg
loop
repnz
insl
mov
lcall
and
ror
arpl
insl
vpsubd
test
jb
or
dec
nop
or
and
sub
leave
or
mov
push
call
sbb
mov
stos
icebp
imulb
out
mov
les
mov
shlb
jmp
pop
rolb
jl
inc
jbe
imul
les
xor
das
sub
call
inc
les
fcomi
sub
mov
mov
outsb
pop
dec
push
in
push
cmpsb
xor
mov
sbb
ljmp
in
lds
mov
je
xor
clc
xor
clc
push
jecxz
jne
jle
arpl
int
popf
addr16
lcall
xlat
cmpb
dec
sbb
adc
dec
bound
pop
icebp
shl
cmc
gs
cmpsb
cmc
fstpt
insb
jns,pn
repz
test
ja,pn
shlb
and
xor
dec
inc
jg
sbb
test
jmp
sub
xor
into
dec
into
sti
jl
call
sahf
or
pop
scas
negb
sub
ffree
pusha
lock
jbe
fcmovnbe
sbb
pop
decl
stos
jmp
stc
mov
push
popa
cltd
sub
adc
or
iret
shrb
pop
nop
xor
dec
shlb
aam
fcomip
roll
mov
adc
adc
jge
push
incl
add
das
add
mov
repnz
imul
xchg
push
push
movsb
inc
jno
test
cmp
push
sub
mov
mov
pop
lods
mulb
push
jae
gs
inc
push
sbb
call
mov
xchg
popa
clc
push
dec
hlt
test
test
sbb
fsubs
sbb
jl
mov
call
out
sbb
ljmp
sbb
loope
repnz
lods
or
in
jg
call
jecxz
rorb
and
test
inc
adc
cmp
decl
and
add
dec
call
adc
scas
pop
xor
loop
or
test
xchg
mov
push
addr16
repnz
adc
stc
push
cmpsl
icebp
ljmp
les
insb
rcrl
adc
stc
lds
xor
cwtl
filds
mov
xor
push
cmpsl
out
cwtl
sub
dec
call
pop
test
mov
sub
ljmp
mov
xchg
xlat
add
and
sub
stos
lock
or
dec
fsts
dec
in
mov
xor
ljmp
ds
pushf
push
repz
push
pushl
or
mov
push
mov
cltd
add
jle
adc
incl
mov
dec
sub
into
mov
or
push
lods
test
xor
jmp
jg
das
xor
stc
roll
stc
stos
push
xor
rclb
mov
push
incl
cli
or
sub
push
cmp
jae
getsec
decl
xchg
dec
test
or
call
mov
jle
cld
and
stc
outsb
jno
clc
cmp
decl
lock
push
or
test
cli
dec
mov
cmp
mov
shll
mov
xor
push
pop
sbb
das
jl
into
repz
aaa
shlb
jg
in
push
das
dec
gs
in
dec
pop
pop
jo
cli
out
push
mov
or
call
xchg
sahf
test
stos
lcall
decl
ret
cmp
push
inc
rolb
repnz
into
mov
lock
xchg
ljmp
cmp
push
pop
sub
dec
xchg
aam
lcall
inc
mov
test
cmp
repnz
lret
das
sbb
add
ljmp
lods
shrb
mov
mov
and
ret
incb
iret
in
sti
loope
mov
std
xchg
orb
in
mov
les
nop
cmp
or
clc
call
stos
mov
cmp
push
jns
vorpd
sbb
clc
ljmp
or
rcrb
test
in
orl
ds
sahf
pusha
ljmp
add
pop
dec
adc
bswap
les
jecxz
adc
mov
stos
push
push
sarl
gs
es
iret
xor
lcall
sbb
call
sbb
aas
add
cwtl
sahf
in
jp
mov
inc
outsb
dec
xchg
mov
or
mov
mov
pop
les
cli
notl
das
sbbb
into
mov
jmp
jns
out
jno
subb
pop
jno
stos
das
std
test
jae
out
pop
mov
cmp
leave
das
lock
stc
mov
nop
mov
lahf
popf
pop
cmp
add
imul
icebp
decl
mov
xor
les
jp
repz
mov
cvttps2pi
ljmp
dec
sbb
mov
rcrb
sbb
lock
jmp
test
out
jle
sahf
cli
mov
fcoml
cmpsb
arpl
into
pop
mov
mov
fsubrl
negl
or
lret
jl
jae
rol
sti
fidivrl
es
enter
inc
mov
or
dec
jle
lds
dec
mov
jmp
sub
daa
inc
popa
pop
add
fwait
addl
cld
frstor
mov
sbb
iret
push
cmp
pop
mov
xchg
loope
ret
insl
fisttps
or
pusha
cmp
xchg
aaa
data16
scas
mov
xchg
mov
incl
jns
lcall
cmp
sub
lds
sub
adc
xchg
xor
adc
std
dec
sbb
mov
inc
add
add
lods
mov
cmpsl
fcmovnu
enter
jmp
and
mov
in
pop
push
mov
sub
xor
stc
popa
xlat
or
jle
inc
xor
lcall
hlt
leave
outsb
inc
sub
and
add
stos
bound
mov
jg
or
cwtl
cwtl
mov
ds
adc
cmp
or
enter
repz
call
dec
add
jg
lcall
loopne
jle
pop
push
jge
cs
inc
and
xchg
mov
fs
cmp
mov
fs
iret
cmp
push
stos
and
add
fisubrl
imul
pop
dec
lcall
mov
int3
icebp
pop
xchg
enter
push
pop
aad
je
mov
jecxz
mov
aaa
jnp
sbb
xchg
xlat
fmul
aam
cmpb
lcall
or
fisttps
fisubrs
or
jmp
dec
aaa
aad
push
lahf
dec
adc
pop
jg
ljmp
sbb
and
or
lcall
cmp
xor
add
mov
pop
daa
fisubs
insb
inc
les
xor
stc
ret
pop
call
pushf
icebp
clc
add
adc
jecxz
out
ficompl
push
cmp
decl
call
mov
es
daa
test
daa
popa
mov
jmp
lods
pop
call
pushf
inc
cmp
daa
jae
les
dec
out
sbb
xchg
addr16
cltd
sarl
ljmp
mov
mov
mov
inc
push
jns
out
sub
scas
cmp
pop
iret
lcall
iret
std
aaa
push
shr
add
and
or
mov
movsb
loopne
dec
int
and
lcall
fnstcw
mov
je
sub
push
push
push
js
inc
xor
xchg
or
ror
sub
jg
lcall
mov
jge
pop
rcrl
push
push
push
call
stos
decl
sbb
cmp
js
inc
pop
sub
adc
data16
lock
in
shrl
into
pop
std
decl
cmp
sbb
inc
xchg
in
mov
inc
out
outsb
pushl
xor
lret
gs
fiaddl
and
es
adc
xchg
ljmp
lcall
imul
popa
rcrl
in
mov
mov
nop
sub
ror
imul
lcall
fidivrl
mov
push
addb
push
fcmovne
test
out
decl
push
pop
mov
cmpsb
cmp
insl
mov
mov
mov
adc
loopne
push
inc
sar
cmp
add
mov
pop
stc
iret
dec
pop
mov
cmp
loope
in
rcrb
add
cwtl
bound
mov
ljmp
push
cmc
fcoms
mov
testl
je
femms
cld
ljmp
mov
repz
pop
aam
loopne
in
mov
dec
or
xor
loope
call
ss
cmp
repz
pop
out
push
adc
cmp
add
sub
xchg
dec
and
sub
inc
push
sbb
aas
xlat
out
rclb
cmp
cs
out
pop
xor
call
add
fsubl
jmp
inc
bound
mov
pop
adcl
fiaddl
leave
js
fisubrl
loopne
cmp
mov
call
cld
popa
pop
lcall
sbb
les
stos
inc
ret
mov
std
call
or
fsincos
jns
inc
movsb
xchg
mov
inc
push
inc
push
and
outsb
or
ljmp
or
shl
add
mov
push
in
mov
movsb
mov
mov
scas
pop
xchg
mov
push
in
mov
fs
test
pop
add
insb
jae
xchg
push
call
mov
decb
and
jno
popa
adc
sub
adc
cmp
or
ljmp
sub
jo
mov
cld
pop
dec
dec
subps
pop
mov
sbb
jle
jg
inc
xchg
jns
adc
dec
pop
cmp
xor
add
lcall
inc
inc
fsts
arpl
out
and
or
cwtl
imul
jmp
iret
pop
pushf
jmp
call
mov
push
nop
or
adc
bound
inc
movl
jge
popf
stos
repz
clc
pop
sub
je
or
push
adc
push
pushf
je
and
xchg
push
xchg
pushl
sbb
mov
sbb
jo
dec
lret
mov
stos
aaa
sub
icebp
fwait
mov
xchg
in
sarl
adc
dec
mov
mov
ss
jnp
repnz
sbbl
jnp
leave
and
push
fmull
mov
cmp
jae
sbb
sub
sub
pop
lcall
inc
nop
mov
push
push
jne
sub
lcall
push
and
add
xlat
jb
iret
sub
push
cmp
or
pop
scas
sbb
push
push
sub
mov
mov
incl
mov
cmp
xor
ds
lds
scas
push
sbb
cmp
xor
incl
mov
test
pop
mov
outsl
add
fisubrl
add
filds
mov
xlat
inc
sbb
push
lcall
adc
iret
mov
loop
inc
cli
clc
mov
lret
or
imul
add
lcall
push
jbe
loopne
test
push
mov
out
shrl
mov
mov
jg
mov
pushf
cmpsb
repz
xchg
repnz
out
push
pop
mov
mov
mov
jmp
gs
mov
orb
xchg
subl
lret
pop
xor
add
insl
call
mov
loop
jecxz
lahf
in
jmp
jbe
sbb
inc
fst
ret
push
stos
scas
stos
loop
push
insl
popf
sbb
cli
adc
mov
cmc
int
incl
popa
jmp
pop
xor
push
leave
lods
clc
lcall
mov
xchg
pusha
sbb
and
dec
ss
sahf
int3
push
xor
mov
aas
loopne
test
mov
inc
stos
cmp
and
mov
push
xchg
push
ss
aad
stos
sub
repnz
in
inc
jne
sbb
pop
jmp
xor
jno
push
dec
pop
in
push
lock
add
jb
lret
pushf
ljmp
negb
xchg
push
movsl
sub
cs
mov
or
outsl
jg
ljmp
jge
rclb
imul
mov
dec
pop
push
xor
pop
stos
decl
mov
sbb
rorb
fcmovu
imul
adc
lcall
cli
insb
mov
outsb
mov
aam
or
cli
jg
mov
aas
enter
jnp
cmpsb
xchg
push
fiadds
or
and
cmpsb
stos
sbb
clc
shll
sbb
jnp
dec
push
in
mov
jb
call
popa
dec
sahf
negl
cmp
pop
add
js
pop
push
push
orl
pop
pusha
daa
sbb
jg
cmpl
pop
addr16
imull
pop
and
lcall
sbb
in
cs
xchg
inc
sbb
pop
pop
dec
sahf
jg
and
or
stos
and
cwtl
push
repnz
and
push
mov
and
jae
mov
cld
incl
mov
mov
sub
int3
jb
cmc
das
or
sti
call
jno
ss
nop
fcoml
roll
xchg
lea
lret
and
mov
lahf
xchg
sub
mov
add
test
xlat
push
jno
mov
xchg
popf
mov
rorb
fidivl
jp
push
mov
jnp
dec
or
adc
rclb
cld
cwtl
push
jae
and
call
push
stos
jp
insl
xor
addl
cld
mov
jmp
sub
and
movsb
aad
mov
loope
dec
push
hlt
es
jl
call
cmp
mov
fld1
fdivrs
mov
sub
test
scas
movsb
dec
mov
mov
jmp
and
xchg
gs
fstpt
out
orl
mov
pop
iret
mov
mov
jmp
imul
inc
mov
inc
cli
add
out
ljmp
xchg
jb
jbe
sbb
xor
add
sub
imul
sub
mov
stos
adc
pop
sbb
cmpsl
shll
sarb
lods
mov
je
std
jmp
push
push
mov
push
jmp
scas
cmpb
jecxz
roll
rclb
movsb
push
xchg
outsl
decl
dec
jbe
jp
data16
lods
mov
ds
sti
out
mov
pushf
mov
cmp
inc
ljmp
add
shrb
and
pop
xlat
cltd
jnp
mov
into
pop
jl
leave
mov
test
data16
cmp
icebp
mov
repnz
lock
call
insl
or
loop
ljmp
jae
fildll
stc
jecxz
decl
mov
lods
adcl
mov
loope
push
pushf
sarl
mov
ud0
call
or
xchg
popf
cld
mov
xor
arpl
les
cli
dec
sbb
icebp
in
or
decl
or
inc
hlt
movsl
loopne
test
jg
cld
je
aaa
fildll
movb
outsb
inc
fcomps
xchg
stc
loope
imul
pop
dec
into
mov
xchg
lahf
lahf
movhps
inc
jo
inc
test
bound
lret
aad
sub
inc
mov
pop
hlt
add
incl
sbb
mov
inc
in
fstpl
jecxz
and
fdivrp
mov
adc
std
stos
scas
sbb
movsb
xchg
call
xor
mov
sbb
jg
fxtract
lret
cmp
push
mov
sub
stos
push
jge
icebp
mov
cvttps2pi
aaa
std
call
notb
sub
cwtl
mov
scas
jl
push
mov
dec
ljmp
test
adc
pushf
push
insb
scas
mov
pop
add
lret
xchg
rep
jge
jmp
sbb
jg
incl
xor
aaa
scas
js
mov
inc
xchg
inc
test
fldenv
stos
addr16
sti
ss
jmp
gs
mov
adc
add
enter
ljmp
adc
mov
mov
cmp
sbbl
jl
popa
ror
or
shl
mov
fsubl
les
mov
leave
pusha
inc
jbe
xchg
cs
mov
dec
out
lcall
bound
imul
inc
mov
enter
rcll
mov
and
inc
lret
mov
sub
mov
mov
nop
imul
and
sub
jg
adc
out
push
cmpsl
jle
jg
pop
test
add
das
jecxz
jmp
negb
fnsave
lods
add
mov
lods
mov
cmp
lods
mov
mov
push
xor
cmp
ljmp
and
adc
shr
pop
inc
sbb
in
ss
stos
repnz
push
mov
xlat
cmp
in
sbbb
pop
pop
in
aas
add
push
decb
mov
jp
adc
and
and
call
sbb
lods
adcb
inc
aas
xchg
movsb
sahf
jnp
and
ljmp
mov
test
scas
dec
cmpsl
or
cmc
inc
mov
out
call
cltd
ja
cltd
imul
xchg
xchg
enter
fwait
clc
movsb
mov
jb
push
ret
call
fsubrs
cmp
pop
test
iret
adc
popa
mov
adc
out
xor
lock
pushl
jl
sub
aaa
or
mov
lret
int3
xchg
icebp
fbstp
add
sub
cmp
jmp
sar
or
inc
in
idivb
popf
cmp
push
je
nop
inc
mov
fdivl
push
rol
cmc
pushf
fsts
in
imul
jg
dec
cmp
sub
xor
cmp
in
ja
adc
call
loopne
dec
push
pop
int3
adc
sbb
call
movsl
pop
pop
test
mov
imul
jmp
mov
cmp
rclb
jmp
mov
lock
mov
shr
inc
push
cmpl
decl
add
xor
add
lea
jae
inc
mov
pop
pop
dec
rcr
dec
dec
incl
negb
dec
sbb
out
jo
and
or
ljmp
mov
inc
push
test
testl
sub
rorb
dec
and
les
ljmp
shlb
jae
fdivrs
lcall
mov
dec
mov
mov
cld
decl
arpl
push
ret
add
cmpsl
data16
xor
or
push
adc
shlb
mov
loopne
lahf
push
es
cvtps2pd
xlat
insl
outsl
fcomip
cmp
mov
test
mov
in
jne
addr16
inc
pop
cmp
or
jle
xor
mov
in
loopne
fs
push
repnz
out
cld
in
inc
xor
pop
ret
clc
loop
rclb
push
mov
repnz
pop
pop
mov
fisttps
sub
pusha
xchg
ljmp
xchg
movsl
rcl
ret
pop
cmc
jne
outsl
incl
xor
sbb
dec
in
mov
lea
cmpsl
ja
lea
inc
aad
sarl
insb
decl
pop
jne
and
int
fisttps
mov
adc
int
pushf
lret
testl
aaa
adc
insb
inc
xchg
xor
ret
add
cmp
sbb
push
adc
dec
lahf
int
inc
inc
push
inc
repnz
jl
adc
lcall
jg
stos
fsubr
pop
sub
cmpsl
xor
and
sub
iret
repnz
jmp
jmp
mov
loopne
fimuls
and
mov
rclb
push
add
test
sub
ja
dec
out
movsb
sub
add
add
ja
lret
hlt
and
sbb
and
pushl
int
dec
loope
jmp
test
inc
test
int3
dec
dec
rclb
stc
pop
mov
out
loopne
add
sbb
cmp
ret
push
cli
mov
shrl
add
cld
decl
mov
pop
push
jae
jecxz
test
shl
inc
mov
mov
and
decl
icebp
ret
lcall
push
inc
mov
dec
fwait
mov
sub
adc
call
or
add
loop
or
push
incl
jns
int
sbb
push
xor
aam
movsl
cmp
dec
incl
inc
les
pop
adc
arpl
sub
cli
in
push
dec
pop
insb
lret
mov
inc
inc
scas
cli
lcall
cld
mov
bound
in
lods
out
dec
inc
push
sbb
cmpsl
scas
xchg
push
mov
incl
ds
mov
ret
in
or
insl
jb
mov
addb
lret
fnstenv
lods
xor
push
mov
aaa
fs
jmp
iret
push
cmp
and
mov
or
fs
mov
loope
lods
divl
call
jecxz
inc
jnp
jg
sbb
mov
xchg
imul
adc
clc
mov
jmp
mov
fwait
mov
sbb
add
jne
push
or
mov
pop
xchg
mov
call
adc
std
xchg
push
outsb
xor
shll
and
stos
js
mov
fcomip
dec
sbb
test
pop
sbb
popa
popf
push
mov
incl
mov
aam
in
loope
pop
jne
das
mov
xor
push
adc
mov
cmpsl
scas
mov
mov
pop
sub
call
insl
mov
sbb
sbb
dec
movsb
sbb
leave
sbb
mov
xchg
rol
and
popf
mov
pushl
sarl
inc
nop
out
pop
cmpsl
sahf
mov
xor
out
mov
clc
ret
jnp
add
daa
hlt
xor
add
inc
inc
sbb
imull
sub
fwait
mov
jge
imull
call
cmpsl
imul
inc
iret
aaa
adc
jae
jns
idivl
shlb
daa
adc
call
pop
rorb
jp
mov
mov
mov
sbb
popf
inc
push
lcall
dec
lea
push
xchg
pop
repnz
fistpll
call
xchg
test
scas
bnd
mov
int
cli
push
mov
push
fwait
cmp
jae
lock
aad
push
cwtl
xor
cli
leave
imul
scas
xor
push
sbb
mov
das
cmpl
xchg
lcall
call
std
push
mov
adc
loope
imul
loop
and
sbb
jg
lods
sub
cmpsl
push
arpl
pop
xor
hlt
xchg
push
pop
adc
lea
push
jne
repz
and
sbb
sub
mov
xchg
sbb
shl
roll
and
cmpb
out
lock
les
jmp
jle
rcll
test
ss
push
aam
and
xchg
add
into
addr16
lcall
cmp
roll
adc
data16
jle
adc
mov
orb
push
loope
cmp
add
ja
push
pop
and
movsw
lea
jnp
shll
cmp
dec
mov
xchg
add
sbb
sbb
jno
mov
loopne
mov
adc
mov
sahf
push
sub
dec
nop
fistpll
sbb
call
sub
roll
test
push
sbbl
fcmovne
adc
cmc
sub
lods
xchg
jp
add
pop
gs
addr16
lahf
xchg
div
dec
inc
pusha
sbb
mov
sub
pushl
pushf
dec
fnstcw
inc
add
test
call
dec
mov
or
ljmp
mov
enter
shlb
out
mov
xor
fwait
and
mov
in
stos
mov
cmp
xor
xor
lock
and
and
in
push
xor
sti
xchg
add
pushl
lea
adc
call
inc
ds
inc
inc
sub
rcr
jns
jmp
adc
jb
sbb
cmp
pop
adc
ljmp
xor
or
pop
inc
insl
sub
incl
xor
orl
mov
inc
stos
mov
xor
ss
sub
inc
gs
mov
push
xchg
orl
divb
out
jno
dec
jg
ret
adc
scas
dec
add
cmp
push
sti
xor
ljmp
sbb
aas
mov
lahf
js
and
popa
xor
jmp
mov
ja
jl
ss
or
ret
ret
add
dec
xlat
mov
sub
jl
fldl
sbb
jle
leave
push
mov
test
cmpsb
add
and
aas
mov
stc
adc
aad
jmp
and
mov
fcomp
inc
cmp
lods
mov
mov
pop
dec
xchg
sbb
mov
call
fdivrs
out
mov
mov
jae
mov
cmp
push
push
stc
pop
test
popf
lea
mov
fs
ljmp
add
jno
imul
mov
roll
mov
lahf
inc
jmp
jmp
push
in
and
clc
fstl
and
xchg
dec
pop
test
movsb
inc
pop
in
leave
fidivrl
cmp
fldenv
sub
xchg
cmpsl
push
orl
pop
add
sub
nop
xchg
mov
lcall
pusha
pop
loop
pop
add
ljmp
adc
xchg
inc
dec
sar
sub
cmpsl
rcrl
pop
dec
or
loope
daa
lcall
pop
jg
sbb
aaa
xor
inc
xchg
imul
sti
loope
js
vrsqrtss
sub
stc
mov
call
inc
sub
jne
lcall
incl
aas
or
mov
mov
pop
xor
jmp
pop
bound
jecxz
in
out
push
cmp
jmp
fistpl
mov
inc
cltd
add
sti
cmc
in
aam
or
repnz
jg
insl
lcall
pop
clc
std
pop
mov
ret
inc
jl
nop
push
push
pop
stos
movsl
scas
or
idivb
jg
sti
mov
mov
mov
stc
shlb
inc
adc
mov
aad
mov
sarl
push
jl
rolb
xchg
xchg
pop
popf
adc
decl
inc
cmc
xchg
dec
mov
add
jae
cltd
idiv
aas
add
mov
call
pop
or
mov
jl
sub
repnz
push
std
loopne
addps
dec
dec
cmpsb
pop
icebp
incl
data16
push
mov
ja
data16
int3
out
xchg
jle
fxam
mov
loopne
decl
mov
test
push
icebp
xchg
add
icebp
xchg
push
mov
mov
lods
xor
loop
xlat
mov
push
adc
pop
insb
or
mov
xor
mov
dec
cmpsl
xchg
mov
insl
mov
pop
inc
xchg
fucomp
movsl
dec
dec
fdivrs
lcall
mov
pop
sbb
call
shrb
sub
ror
flds
cmp
pushl
in
mov
sbb
ficoml
push
outsb
in
int3
xchg
inc
push
jae
sub
xor
mov
js
inc
adc
fistl
out
loop
xor
movsb
pop
xor
aaa
push
scas
clc
js
pushl
dec
add
outsl
adc
mov
dec
pop
ffreep
fwait
adc
inc
cld
jae
stc
push
adc
aad
flds
mov
pop
add
inc
enter
call
push
bound
shll
roll
or
xchg
or
xor
xchg
mov
jmp
loop
mov
lcall
rorb
xor
dec
out
or
sub
cli
pop
mov
adc
mov
adc
sub
push
sbb
fldcw
xsave
mov
call
cld
clc
adcb
orl
inc
and
push
into
call
mov
push
or
mov
mov
bound
jge
and
xlat
lcall
dec
dec
push
add
dec
mov
lods
stos
inc
repz
fs
pushf
dec
fmulp
decl
rcl
mov
enter
jnp
fimuls
sub
mov
jnp
inc
mov
xchg
mov
dec
jb
mov
pop
push
popa
dec
jmp
dec
dec
push
adc
fbld
movsb
xchg
insl
add
sub
lcall
sti
fwait
push
mov
add
inc
sarl
and
xchg
pop
xchg
dec
push
sti
fcoml
decl
pop
sahf
cmpsb
pusha
jp
xor
stos
and
in
mov
jne
iret
ja
mov
jge
ljmp
call
shrl
xor
sub
pop
out
xchg
and
inc
pushl
mov
sahf
in
fsubrs
test
add
push
dec
xchg
xor
or
mov
out
add
adc
jns
xchg
cmpsl
enter
xor
lcall
js
cli
pop
mov
pop
pop
fdiv
in
es
shrl
jbe
jg
fidivrs
fwait
dec
dec
xchg
jbe
jg
dec
rcl
adc
add
inc
das
out
cmp
call
xor
addr16
into
mov
cmp
orl
add
imul
push
xchg
sti
std
add
cli
test
fimull
xor
pop
je
call
fcoms
ret
shlb
in
push
inc
lahf
sbb
cmp
jnp
pop
inc
pop
cmc
ljmp
lret
lahf
jmp
icebp
out
add
sbbb
pop
dec
mov
popf
lahf
clc
xchg
jle
incl
lea
lock
dec
aaa
sub
dec
xor
jae
jmp
nop
mov
dec
push
std
incl
lret
stos
mov
and
jb
shrl
mov
xchg
jns
jmp
std
inc
and
xchg
mov
leave
pop
mov
or
mov
aaa
ss
out
lock
call
pop
inc
data16
cwtl
test
lock
sub
or
popl
sub
and
lcall
ficoml
add
lret
out
jmp
cmp
inc
aaa
icebp
jp
jmp
in
sbb
adc
push
or
xorb
aad
test
aam
cmpb
inc
call
add
cmpsb
fldcw
jmp
bound
and
adc
pop
imul
mov
out
xor
xchg
inc
stc
imull
add
ljmp
pop
sbb
lcall
les
cmp
mov
lret
int
dec
mov
int
in
lcall
xor
adc
imul
pop
pop
sbbb
fildll
mov
aad
sub
rolb
cmp
call
std
sar
or
mov
test
enter
std
dec
adcb
push
pop
into
inc
decl
jmp
stos
aad
ds
xor
sbb
insb
sbb
jge
lods
adc
mov
les
mov
sub
out
popf
mov
xchg
sarb
icebp
lcall
push
faddl
mov
push
and
jg
rcll
and
jl
insl
outsl
in
jo
stos
sub
dec
pop
xchg
dec
nop
sub
call
out
xchg
fistl
cmp
cmc
or
insl
sbb
test
cmp
in
repnz
mov
add
call
repz
pushf
sub
push
ret
adc
jo
inc
xchg
pop
cli
lcall
sar
decl
cmpsl
dec
pop
xchg
repz
fdivrp
pop
cmp
ljmp
inc
sahf
push
stos
add
jno
imul
lods
mov
mov
push
decl
sbb
sbb
mov
or
cmp
cmpb
repz
push
mov
mov
call
out
mov
insl
push
mov
jle
hlt
mov
push
daa
cmp
jg
scas
mov
dec
jl
mov
test
stos
scas
inc
in
cs
cmp
insb
scas
insl
mov
fwait
ja
data16
jl
sbb
push
cmp
inc
cmpsb
push
out
out
pop
dec
and
lret
xchg
or
push
and
in
xor
pop
shlb
lods
gs
and
je
push
dec
and
das
clc
call
push
add
xor
lds
movsl
movsb
xor
mov
pushl
gs
add
fbld
js
pop
adc
mov
call
out
mov
movsb
sbb
sbb
adc
in
fists
jae
fstl
mov
lcall
cli
movsl
or
lds
inc
and
or
xchg
pusha
lcall
mov
jmp
cmp
xor
outsl
call
in
iret
xor
adc
mov
xchg
bound
dec
jns
ja
inc
and
mov
dec
leave
pop
fwait
lahf
in
push
movb
cmp
xchg
mov
int3
les
lds
jl
test
add
das
sar
fstps
sub
inc
into
insb
lret
adc
cmp
mov
pop
lcall
sub
or
cs
sbb
stc
xchg
aad
dec
pop
lret
xlat
pop
xor
insb
cwtl
dec
repnz
call
andl
popa
je
aam
xor
adc
pop
orl
test
ljmp
scas
or
mov
mov
sub
xchg
xor
cmp
inc
hlt
adc
mov
shll
inc
sbb
outsb
call
cmc
sbbl
jmp
les
lcall
lock
sbb
rcl
nop
outsl
mov
stos
dec
decl
loopne
sbb
and
mov
lret
loope
rcrb
fmuls
inc
out
inc
outsl
clc
call
mov
stc
pop
mov
add
js
ror
inc
and
addl
lock
jmp
daa
push
mov
jno
jge
xchg
sub
fisubrs
jbe
nop
dec
fsqrt
fildll
out
fldenv
sar
lcall
aam
and
inc
or
jg
mov
xor
and
int3
stc
sti
insb
adc
mov
xor
test
mov
ret
xchg
push
cmc
mov
cmp
mov
fistpll
push
call
arpl
add
aaa
pop
jbe
jg
sub
stos
sahf
outsb
push
mov
mov
scas
pop
ss
push
incl
xchg
hlt
sti
loopne
jp
sbb
popf
fbstp
cmc
aas
push
sti
sbb
out
incl
test
out
mov
pop
nop
fidivs
sbb
test
js
xchg
sbb
icebp
lock
mov
sarl
jns
adc
shll
ljmp
inc
call
stos
pop
dec
add
hlt
mov
xchg
mov
jl
fdivp
out
dec
or
add
xchg
call
mov
jg
subb
inc
cmpl
sbb
jnp
cmp
incl
cmpsb
fidivs
sbb
fdivrl
mov
outsb
fdivrp
push
test
call
xor
pop
push
push
inc
jl
testb
fdiv
jmp
out
pop
cld
fwait
nop
pop
pop
cli
sbb
lock
aas
inc
sbb
lcall
jg
cmp
in
jmp
mov
push
jmp
xchg
push
push
and
call
hlt
scas
popf
xor
jb
pushf
and
sahf
dec
mov
aam
outsl
push
lods
and
popa
lods
or
mov
or
into
roll
negb
push
dec
mov
pop
xlat
insb
movsb
pop
fbstp
inc
loop
xor
shrb
add
call
pushl
js
ljmp
into
inc
lret
testl
call
dec
cmp
lcall
pop
dec
inc
fisubl
and
mov
add
jg
decl
lods
shl
jno
jecxz
out
movsb
fnstcw
ret
sbb
pop
sbbl
divb
call
sbbl
loop
loopne
cmpl
jb
push
adc
cmc
test
pushl
push
pop
loop
inc
xor
and
fsubs
sbb
fsts
cmp
test
sbb
jmp
lods
xor
mov
icebp
lret
outsb
mov
xchg
cli
pop
pop
call
xchg
lods
hlt
or
mov
adc
xchg
fidivrs
aaa
mov
push
pop
dec
incl
stc
fs
cld
hlt
hlt
mov
push
cmp
and
cmp
call
repnz
out
add
sub
xor
ret
test
int
sbb
jns
jge
push
mov
popf
fsubrs
pop
cmp
into
jle
clc
cmc
jmp
call
ljmp
lds
jns
and
daa
mov
mov
adc
inc
mov
call
outsb
testl
add
insb
in
shrl
loope
push
mov
loop
call
icebp
jmp
cmp
and
xchg
push
std
pop
imul
lahf
cmp
ficoml
mov
pushf
sub
lcall
call
imul
sbb
mov
imul
and
lods
incl
push
jl
and
jle
out
mov
fimull
pusha
inc
movsl
sbb
mov
add
loop
sub
xor
dec
fsub
mov
xor
cwtl
call
sub
push
pop
roll
or
push
mov
test
inc
cli
rcrl
push
lcall
adc
inc
mov
pop
sub
sub
sub
ljmp
sub
dec
cld
decl
test
add
jb
xor
push
fwait
mov
inc
add
aas
outsl
xchg
data16
sbb
std
lret
pop
lock
add
and
sub
adc
daa
xchg
adc
sahf
mov
lcall
ret
sub
aaa
adcl
in
sbb
push
and
sbbb
cmp
lea
icebp
mov
stos
mov
sti
aad
mov
jp
lds
mov
and
fucomip
pop
lret
xor
sbb
mov
mov
pop
aad
mov
xor
movsl
call
movsl
add
pop
sub
std
frstor
sarb
xchg
cld
add
pushl
outsl
mov
pusha
adcl
pop
enter
push
ljmp
jp
arpl
lods
xchg
and
or
pop
dec
inc
aad
imul
jae
or
lcall
inc
nop
jae
dec
sbb
inc
mov
lret
ja
ror
andb
adc
sbb
int
jmp
mov
inc
jp
je
repnz
jecxz
orl
sbb
sub
mov
call
mov
dec
pop
in
cmp
sub
mov
popf
jns
push
inc
cmp
dec
mov
enter
aas
and
loope
arpl
pop
adc
xchg
je
push
outsl
clc
je
xchg
clc
xchg
pop
pop
pop
push
stc
mov
outsl
hlt
pop
xchg
sbb
inc
lods
pop
imul
dec
icebp
mov
sub
pop
lcall
jo
push
js
mov
push
mov
mov
xchg
xor
rol
cmp
aaa
in
jns
jae
inc
mov
inc
ss
dec
or
arpl
jns
jae
push
mov
mov
jo
xchg
jne
pop
ljmpw
in
mov
jb
nop
sub
mov
jnp
jmp
cwtl
stos
sti
mov
hlt
cmp
nop
imul
dec
iret
adc
test
jmp
jmp
call
mov
push
push
fmull
insl
mov
cltd
sbb
mov
mov
mov
pushl
imul
dec
adc
pop
sar
call
xchg
and
test
fldenv
pusha
stc
dec
int3
rcrb
xchg
jl
pop
jmp
push
stos
and
fwait
leave
test
stc
in
add
and
jb
stos
adc
jmp
or
sub
jge
enter
pop
lock
call
pop
mov
xchg
and
xchg
xor
outsl
add
loop
adc
call
pop
xchg
and
or
dec
cmpsl
fdivr
cmp
jl
add
add
jmp
sbb
mov
sbbl
dec
inc
sbb
mov
mov
sub
shlb
outsl
cli
jmp
mov
xor
lds
iret
test
sbb
inc
mov
or
jo
decl
push
sbb
push
pop
js
jbe
sub
push
dec
mov
repnz
ljmp
jmp
push
jne
xlat
stos
mov
cs
test
jecxz
pop
sub
xor
mov
jnp
adc
fcoms
jle
pusha
sbb
push
loope
jne
ss
jmp
pop
cli
insl
or
test
xchg
jbe
fisttpl
xchg
arpl
out
outsb
or
sub
stos
dec
cld
jmp
pop
jp
mov
jl
sub
cmpb
lcall
push
repz
cmp
xor
xchg
rol
rcrb
lea
divl
pushl
xchg
inc
movsl
loope
test
sbb
insl
pop
sbb
cli
fstl
lds
dec
incl
lds
orl
sub
sub
pop
and
jle
mov
pushl
nop
xor
cmpps
sahf
adc
add
xchg
jl
pop
mov
decl
mov
out
mov
imul
or
cmp
dec
shl
jmp
cmpsb
call
repz
jmp
std
xchg
sub
cmp
sub
hlt
lods
inc
mov
adc
jb
ret
push
stc
cltd
xchg
xchg
adc
xchg
xchg
xor
mov
xchg
decl
mov
popf
and
pop
jbe
add
jae
inc
xchg
addr16
incl
cld
or
jge
push
cmp
loopne
cmpsl
cmpsl
cmp
pop
dec
pushf
es
aad
mov
stc
ret
push
out
cmpsl
or
stos
lret
pop
sti
lea
dec
xchg
inc
pop
loop
push
mov
mov
std
jmp
dec
push
mov
mov
inc
jmp
xor
loop
out
in
mov
and
ljmp
xor
out
jo
push
hlt
or
mov
or
dec
mov
cmp
jg
hlt
lret
test
xchg
jp
dec
in
sbb
jbe
leave
push
fcomip
arpl
push
repz
xlat
mov
ds
jp
mov
nop
xor
inc
int3
rcll
decl
mov
loope
arpl
movsl
std
or
push
xchg
xor
cmp
sub
clc
pushl
out
inc
add
cmp
sbb
lret
ret
push
add
adc
jmp
dec
lods
imul
xchg
cmp
push
insb
aad
not
outsb
test
popa
cmp
js
mov
lahf
add
pusha
shrl
and
addr16
mov
aaa
mov
cmp
jecxz
or
ja
ret
fbstp
fstpt
add
icebp
popf
mov
sub
push
bound
negb
lcall
cwtl
dec
mov
enter
ret
or
mov
outsl
clc
cwtl
mov
cmc
loopne
ds
xor
dec
mov
mov
in
cs
sub
or
lods
pop
and
cs
mov
mov
mov
dec
decl
nop
pop
sbb
mov
add
xor
xchg
push
lahf
into
push
xchg
fisubrs
stos
movsl
rolb
daa
test
or
jnp
lcall
imul
sub
ljmp
sbb
push
cmp
std
fiaddl
jecxz
fmul
hlt
jle
insl
xor
ret
hlt
inc
popf
and
pusha
sbb
call
shll
push
push
pop
dec
or
insb
jno
inc
rorl
fdivr
outsl
sar
jne
jmp
ret
rcl
dec
sbb
sub
sub
incl
or
xor
add
dec
cmc
repz
jecxz
mov
outsb
jge
sahf
test
mulb
stos
xchg
test
into
xchg
push
xchg
sub
mov
js
or
mov
mov
inc
sbb
lds
ret
cli
hlt
cmp
ficoml
mov
das
xchg
repnz
adc
iret
mov
test
test
sbb
insl
jge
scas
mov
mov
jmp
in
push
insb
jb
push
sahf
pop
lret
mov
dec
jmp
pusha
test
xchg
test
incl
push
sbb
pop
pop
xor
add
pop
cmpsl
loop
cld
mov
sub
sbb
xchg
jmp
rclb
int3
inc
ficoms
or
pop
in
ja
orl
jmp
daa
xor
add
cmp
repz
pusha
cmp
xchg
push
inc
shrb
outsb
sub
scas
out
jecxz
outsl
lcall
es
movsb
xchg
cmpsb
psubusw
out
and
pushf
fwait
mov
sbb
pushf
xchg
pop
cld
jmp
pop
dec
dec
xchg
sbb
sti
add
lret
xor
nop
pushl
int3
mov
addb
and
mov
js
mov
jmp
inc
cmc
lds
hlt
mov
xchg
outsl
mov
or
fiaddl
in
push
xchg
mov
and
adc
call
cld
lret
cs
dec
sub
jge
shrb
or
cmp
lcall
push
mov
add
xchg
mov
ret
sti
fistpll
pop
pop
cmp
ljmp
dec
inc
jnp
ret
mov
push
lahf
imul
ffree
mov
jne
jecxz
incl
mov
inc
shll
cmpb
xchg
lahf
sbb
lret
push
mov
xor
pop
repz
jecxz
cmp
out
push
lds
inc
mov
call
cwtl
mov
add
dec
sbb
sub
loope
loop
mov
out
jbe
mov
call
sbb
xchg
pop
call
cld
mov
and
inc
xchg
paddsb
inc
jge
fcomip
inc
sti
orl
pop
jecxz
fcompl
mov
cmp
jg
stos
jge
cmp
add
mov
xor
ja
and
cmpsb
xchg
loope
jg
mov
add
shlb
or
push
inc
mov
pop
icebp
adc
in
inc
mov
fs
push
out
sub
dec
les
clc
in
ret
cmp
pop
aad
pushl
in
cltd
push
xor
ja
push
outsb
jecxz
jb
sbb
aas
cmp
daa
movswl
lods
les
adc
adc
mov
adc
or
test
test
lcall
inc
mov
sub
ljmp
ror
es
int3
lods
pop
les
mov
xor
insb
push
loope
les
jg
pop
push
dec
movsb
mov
push
mov
pusha
jg
inc
clc
push
inc
fisubl
dec
adc
add
das
clc
sarl
out
mov
scas
pop
lods
ss
jbe
pop
lcall
orl
sub
pop
adc
mov
jmp
mov
sti
ja
inc
sbb
xor
xor
fsubrs
jb
rolb
insl
scas
cmpsl
mov
cltd
aad
sbb
in
hlt
jmp
inc
in
cmpsb
mov
cmp
cmpsb
add
fdivs
rolb
es
jae
adc
sub
mov
pop
idivl
scas
jmp
icebp
fisttpl
sub
push
jmp
adc
loopne
push
dec
xchg
scas
aad
and
icebp
sbb
lcall
mov
ja
dec
int
xchg
mov
mov
sbb
push
push
dec
loopne
insl
cld
aas
mov
mov
stos
or
les
xor
xor
jg
incl
inc
ds
sarb
int3
loopne
push
mov
or
sbb
pop
incl
ss
inc
adc
dec
xor
cmp
add
pusha
aas
fcoms
inc
cld
inc
dec
outsb
cmp
xchg
adc
in
scas
outsb
sbb
push
data16
call
std
adc
in
mov
loopne
fwait
or
mov
mov
jp
xchg
aad
cld
incl
imul
push
inc
jne
dec
loop
les
cli
ljmp
sarb
add
jge
xchg
add
mulb
fists
lock
out
and
dec
or
ljmp
pop
jge
sub
xchg
ss
xor
aam
pop
outsl
enter
cmp
in
out
jg
incl
and
xchg
dec
lods
xchg
leave
loop
or
roll
pusha
lods
aad
pop
and
decl
mov
and
pop
cld
jmp
pop
sbb
jmp
push
loope
fisubl
push
imull
fdivl
ljmp
dec
push
cmp
or
subl
jecxz
out
data16
and
mov
call
loopne
mov
dec
movsb
or
movsl
popa
das
cmpb
push
lcall
dec
pop
push
cmc
jmp
inc
sub
mov
jae
pushf
jp
add
out
lcall
out
aas
push
es
in
pop
sti
scas
setge
in
jb
andl
mov
outsb
jmp
mov
mov
pop
cmpsb
xorb
sbb
xor
decl
ret
inc
mov
movsb
adc
gs
scas
cmc
in
xchg
cmp
fnstenv
add
and
adc
or
jmp
jle
mov
movsl
out
pop
jle
push
cmpsb
xchg
dec
cmpsb
sti
sub
repz
jmp
sub
fs
sbb
xchg
subl
test
adc
mov
in
pop
fldenv
ljmp
jmp
jbe
aam
addr16
fnstsw
inc
xor
fsubrs
pop
mov
hlt
out
clc
or
xor
cmc
daa
and
jb
loop
lcall
int
in
mov
sti
dec
and
lahf
mov
push
call
lcall
rcrb
cmp
jmp
inc
jns
mov
fisttpll
jecxz
in
scas
popa
fcomip
push
mov
shrb
lcall
fistpl
leave
xchg
inc
cmp
mov
pop
out
cs
sub
pop
loopne
inc
fs
dec
lods
sub
xchg
cld
in
cmpsb
incl
das
xor
cmc
jbe
dec
pop
fwait
push
inc
adc
orl
lcall
add
in
out
xor
outsl
addr16
out
push
notb
push
lret
jns
test
rcrl
jp
jmp
sub
je
fwait
push
dec
movl
xor
aas
push
push
lds
testb
add
cmpb
pop
ret
test
sbb
incl
mov
inc
lock
gs
mov
das
insb
lock
lret
or
jecxz
xchg
test
lea
decl
inc
sbb
mov
mov
test
pop
sar
mov
inc
xchg
daa
rcrl
jmp
sbb
adc
xchg
shll
inc
adc
push
mov
xor
insl
adc
decl
lods
mov
popa
xor
out
cmp
cld
ret
pop
mov
movsb
ja
jmp
pop
push
pop
and
xor
mov
addb
xor
jns
mov
negb
decl
rep
push
add
xor
ljmp
lcall
lahf
popf
jno
pop
mov
inc
divl
loop
xor
int3
stos
fdivp
and
repnz
out
clc
jmp
das
jecxz
subb
cmp
jo
bound
mov
push
and
lds
add
cltd
jge
clc
cwtl
mov
inc
stos
jp
pop
mov
popf
packssdw
jne
add
inc
lret
incl
and
pop
xchg
push
adc
jmp
leave
add
and
xchg
jae
cmp
movsb
inc
sbb
stos
jl
mov
out
pop
mov
decl
mov
adcb
lret
test
ret
jno
out
and
int
lock
icebp
jg
pushf
jo
push
loop
sub
clc
call
ficompl
mov
int
insb
lcall
aaa
movsl
nop
fs
xchg
or
fucom
sub
mov
xor
xor
scas
cli
incl
lcall
out
inc
push
imul
mov
imul
cwtl
ljmp
aas
hlt
inc
pop
outsb
cmp
aam
mov
jl
push
mov
mov
call
ds
xchg
xchg
cmc
aas
sahf
fcomp
pop
or
mov
sti
shlb
pop
decb
mov
adc
sbb
aad
inc
jno
rorb
cmpsl
xchg
sbb
lods
xchg
es
lea
xchg
jl
repnz
inc
push
sub
test
out
in
jae
stos
add
cmp
stos
jmp
jle
fldl
add
jp
cwtl
cli
das
dec
and
into
xchg
xchg
clc
pop
inc
repnz
sbb
not
lret
int3
pop
xor
lods
inc
xchg
xchg
mov
add
xchg
lods
mov
out
mov
insb
pusha
stos
scas
adcb
mov
les
xor
xchg
mov
int
cmc
decl
jne
pop
imull
pop
mov
std
or
cld
test
xchg
pop
out
div
out
testl
stos
jb
jg
add
and
rcll
lahf
lcall
adc
mov
mov
mov
dec
fimuls
scas
cli
aas
cmp
mov
or
stos
int3
sbb
fcmovnu
pushf
xorl
pop
dec
sti
pop
movsl
ljmp
daa
fadds
movsl
xchg
jmp
aaa
gs
fs
out
or
or
lret
fmull
jg
or
inc
push
and
loop
insb
push
lea
jb
sahf
add
mov
flds
mov
push
loopne
fcos
movb
in
cmovo
add
pushl
cmp
cmp
xchg
jmp
call
es
adc
ljmp
clc
pop
dec
xchg
adc
lods
out
fistpll
shlb
fwait
lcall
sbb
mov
int3
jp
sbb
xor
cmpsb
cmpsb
jp
clc
lcall
cmpsl
cmpsl
out
mov
mov
loope
outsb
ss
push
imulb
decl
lock
dec
bound
scas
sbb
iret
into
dec
xchg
adc
jmp
dec
mov
shr
pop
int3
sahf
sarb
in
pop
out
repz
mov
ja
pushl
push
jecxz
xchg
inc
in
in
popa
das
jle
les
cwtl
xchg
sbb
or
ljmp
pushl
je
inc
sbb
push
cmp
cmp
add
cmp
push
dec
jmp
scas
cli
ljmp
and
int
in
adc
push
mov
fs
cmp
ret
mov
pop
inc
and
jmp
rolb
xor
sahf
pop
jne
jo
lock
movsl
sahf
sbb
popf
scas
fisubl
mov
dec
sub
test
es
aaa
pop
lods
or
dec
sbb
jb
cli
lea
mov
decl
sub
test
mov
sarl
fisttpl
repz
cmc
lcall
cmp
dec
fcoml
xor
imul
ret
ret
add
call
mov
mov
arpl
std
fldt
les
mov
bound
aad
xchg
mov
sub
inc
lcall
cmp
adc
sub
mov
std
xchg
std
mov
dec
sub
cmpsb
movsb
xchg
out
mov
repnz
bound
push
xchg
push
xchg
pop
sbb
cltd
clc
adc
pop
lds
test
ljmp
movsl
and
xchg
mov
sbb
mov
xchg
lock
sbb
loope
adc
aas
sbb
int3
cmp
call
adc
inc
xchg
sahf
pusha
data16
or
add
pusha
mov
mov
cmp
pushl
pushf
aaa
xor
es
fs
arpl
add
mov
push
into
fwait
pushl
xchg
and
and
orb
inc
cld
dec
int
out
cmp
dec
jns
cwtl
inc
jge
xchg
push
and
or
adc
cmpsl
stc
cmp
mov
dec
scas
sub
jns
repz
and
fiadds
insb
fbld
mov
rolb
out
and
and
addl
push
clc
mov
scas
ss
mov
call
push
jmp
add
ficoms
or
pop
call
in
xor
lahf
ljmp
dec
mov
pop
mov
push
ds
or
pop
sbb
data16
mov
ljmp
mov
pop
jl
fldt
dec
gs
fcmovnu
mov
movb
nop
dec
clc
lcall
call
rorb
push
popf
or
imul
or
cmp
pushl
out
arpl
xlat
sub
enter
adc
pop
ret
dec
rcll
sbb
pop
sbb
mov
mov
pop
ljmp
or
mov
out
or
incl
dec
xor
cld
sub
or
dec
add
xchg
outsb
xor
cmp
inc
leave
sub
mov
jns
iret
popa
mov
xchg
mov
pop
stos
pusha
jnp
jp
xlat
hlt
mov
mov
icebp
loope
movsl
leave
pop
cmp
push
imul
repnz
je
dec
sti
insl
add
pop
adc
hlt
inc
add
fsubrl
ljmp
jp
adc
icebp
jg
and
push
jle
insl
fildll
fwait
dec
add
fiadds
and
pusha
sbb
incl
jbe
or
fimull
add
or
sahf
ficomps
push
jl,pt
lcall
incl
lcall
loop
sbb
lret
xor
pop
sub
decl
in
pop
pusha
lcall
movsl
push
and
leave
mov
aas
nop
cwtl
cmpb
mov
inc
inc
repz
or
cmpsb
push
or
cmp
or
ja
jno
jo
lea
or
mov
jmp
test
cmpsb
loop
out
jge
jns
jne
inc
jne
pop
jecxz
sbb
jg
or
pusha
out
ret
fcomip
ljmp
ficomps
xchg
xchg
xor
push
adc
mov
xchg
cmp
jmp
jmp
or
dec
scas
dec
in
xor
or
cmp
ret
sahf
cmp
jle
fwait
xor
cmp
fimuls
and
dec
rcrb
in
pop
push
test
incl
push
adc
jno
jmp
or
add
mov
mov
push
jo
ljmp
pop
pop
bound
xor
sub
or
insb
gs
sub
ljmp
fnsave
and
adc
pop
insl
out
dec
and
andw
pop
sub
stos
mov
dec
xchg
call
out
push
cmp
pushf
stos
mov
popf
mov
in
jb
ds
adc
xchg
adc
test
or
pop
lret
pop
icebp
pusha
mov
fxch
sub
fsubrl
xor
inc
rclb
mov
pop
sub
fcomip
lcall
sar
inc
fdivrl
test
dec
call
lcall
dec
leave
cmp
push
ficoml
sbb
adcl
loopne
and
lahf
jp
lsl
push
sub
push
add
xor
push
push
pop
testl
inc
push
lds
stc
dec
in
test
out
cmp
pushl
jp
cwtl
bound
call
dec
xor
nop
mov
jbe
fwait
scas
je
mov
and
and
jae
mov
dec
mov
xchg
add
ret
sarl
xchg
ja
mov
mov
push
adc
lock
fidivl
out
fldcw
cld
dec
lret
imul
sub
lahf
lahf
ret
dec
leave
xor
outsl
and
notb
sub
call
mov
cmp
lret
adc
mov
insb
pop
ss
lahf
mov
pushl
sbb
jmp
mov
std
inc
imul
orb
fadd
outsb
test
stc
push
cmp
dec
xchg
push
mov
int
pusha
out
shll
jl
lock
popf
cld
decl
xor
mov
icebp
pop
rol
lods
sub
inc
sahf
cmp
push
loop
imull
cs
pop
jno
pop
stos
les
add
xchg
ds
sbb
add
ljmp
and
inc
jecxz
mul
mov
push
scas
pop
add
add
into
cmp
push
pushl
jmp
shll
xlat
xchg
lock
sbb
dec
leave
ret
fists
jge
pushl
std
je
shlb
int3
cmp
sub
fildll
jmp
jle
inc
movsl
insb
xchg
or
mov
adc
in
adc
xchg
flds
xchg
js
mov
pop
das
pop
add
outsb
test
xor
scas
add
leave
mov
hlt
jg
pushf
mov
loop
jnp
stos
repnz
lods
mov
xchg
rclb
decl
cwtl
xor
scas
daa
sbb
in
orl
jle
repnz
pop
adc
idiv
add
insl
push
lret
adc
lock
divb
ljmp
pop
cmp
cmp
inc
cmpl
pop
std
incl
mov
lret
cmp
xor
shlb
push
dec
push
lcall
prefetcht1
bnd
scas
popa
jmp
inc
jp
add
lcall
fsub
dec
frstor
dec
and
and
add
shll
fsubp
push
movsl
pop
popa
push
mov
adc
jno
mov
or
loopne
sahf
adc
les
rolb
dec
sub
or
stc
fisubs
sbb
push
out
adc
in
js
rep
mov
cmpsb
iret
pushl
es
cmpsb
xchg
ds
add
stos
sub
mov
loope
roll
lcall
sub
or
mov
cli
inc
lods
mov
loopne
or
test
jmp
arpl
cmc
adc
push
sub
int
xchg
movsl
push
inc
fadds
ja
sar
mov
inc
cmpb
addr16
add
neg
xchg
adc
add
add
or
jg
pop
pop
push
or
or
or
or
or
adc
adc
push
adc
xor
dec
sbb
add
stos
push
mov
mov
adc
push
adc
add
data16
clc
push
lods
fisttpll
adc
pop
adc
inc
add
ss
push
nop
add
add
add
and
inc
or
add
or
inc
mov
jb
fbstp
xor
jge
add
add
push
adc
call
pop
and
xor
inc
mov
adc
xor
cmpb
push
mov
xor
fidivl
popa
xchg
mov
or
inc
push
test
adc
inc
xor
daa
sbb
adc
sbb
ret
and
add
pushf
push
or
add
add
jo
add
pop
scas
cmp
outsb
decb
lods
adc
push
adc
pop
popa
jno
and
adc
and
or
push
lock
xor
and
loope
icebp
mov
mov
add
xorb
scas
fiaddl
or
js
and
cli
sub
rcr
push
inc
cli
or
xchg
jae
sub
std
cmpsb
xor
aas
imul
fdivrl
and
cli
incl
inc
or
pop
les
lock
mov
jecxz
pushf
ret
ja
jmp
or
xchg
sti
push
in
and
fistpl
jg
inc
cmc
iret
xchg
inc
jl
repnz
dec
or
xor
or
adc
pop
inc
inc
xchg
das
adcb
or
mov
sub
pop
add
lds
cld
cli
and
mov
fiaddl
jnp
test
jge
ficompl
cmpsl
xor
mov
test
pop
lahf
mov
movsl
jecxz
aaa
or
aas
or
push
stc
or
loope
mov
xchg
jg
or
cmc
addr16
out
adc
sub
push
push
xchg
fs
mov
call
inc
lock
scas
jle
fcmovnu
clc
cmp
fisubrl
in
mov
orb
int3
jg
sar
lcall
fs
scas
mov
pop
pop
mov
popl
movb
rorb
sti
ret
scas
adc
mov
xor
call
inc
inc
jg
movsb
cltd
jns
jecxz
aam
and
sbb
sarl
and
roll
outsl
lcall
cmp
push
out
in
and
ss
repz
cmpsb
pop
outsl
icebp
mov
inc
or
push
pop
lock
std
or
pop
mov
daa
test
aaa
dec
dec
pop
push
out
outsl
loope
loope
jmp
rorl
mov
int
arpl
push
out
or
fs
push
sahf
pop
clc
sti
jg
jno
push
cltd
cli
mov
push
std
sarl
pop
in
pushl
clc
pop
pop
mov
jmp
sbb
decl
mov
jb
mov
mov
mov
sub
subb
pop
mov
jl
rorl
adc
mov
std
lahf
stos
hlt
push
add
stc
loope
mov
sar
andl
aas
icebp
enter
testb
mov
push
inc
pop
xor
jns
mov
in
repnz
jno
pop
mov
jg
jg
scas
cld
or
push
inc
sbb
paddb
incl
outsl
sbb
jb
adc
push
lock
lods
jp
testb
sbb
into
fcomps
push
lcall
sbbl
into
andl
aas
loopne
cli
adc
aaa
xchg
in
aaa
fldln2
fildl
stos
es
or
dec
fisttpll
out
aas
std
push
push
idivl
cmp
sub
inc
scas
inc
mov
jg
je,pn
sub
jg
imul
mov
mov
inc
jmp
jne
gs
jns
enter
or
push
pushf
push
scas
xlat
sub
cmp
sti
punpckhbw
popl
or
mov
cmp
das
jmp
xchg
pop
clc
pop
hlt
lret
push
aad
add
lea
jg
gs
std
xorb
decl
imul
outsl
adc
ret
das
pop
pop
pop
shlb
stos
jg
out
sarb
sbbl
jno
or
sarb
std
pop
inc
push
cli
mov
mov
inc
arpl
stos
mov
and
insl
add
dec
push
scas
loop
jge
push
shrl
mov
push
mov
adc
and
sbb
pushl
js
test
jae
push
iret
sti
cmp
ficoms
aam
sahf
imul
and
fadd
or
mov
nop
enter
add
cld
call
js
cmp
call
outsl
scas
lods
hlt
cmp
fistl
mov
adc
push
movsb
xchg
or
mov
stos
dec
lods
xor
add
fcmovu
ds
cmpsl
scas
popa
in
pop
or
pushl
aas
clc
jge
jnp
sbb
outsb
mov
sbb
jecxz
inc
adc
mov
call
xchg
and
push
push
jo
pusha
imul
add
mov
cmp
xchg
mov
cwtl
pop
xchg
ftst
jbe
xchg
and
scas
cmpsb
lcall
mov
and
mov
lahf
cld
sub
aas
stc
add
pushl
out
gs
jno
fidivrl
lock
adc
pop
cld
addl
adc
cld
xor
cmp
fmull
enter
iret
in
lret
mov
pop
mov
sub
fldt
pop
mov
dec
incb
fisubrl
aas
mov
or
cld
pop
sti
add
pop
ret
cmpsb
push
pop
jg
add
out
pop
jg
mov
aad
test
mov
mov
fistpll
aas
iret
push
jbe
push
sbb
stos
icebp
pop
incb
pop
out
dec
jno
adc
push
inc
jecxz
sbb
sarl
or
jg
adc
loopne
and
clc
xorl
mov
imul
dec
cmp
sti
push
push
in
aas
mov
fsubrl
sbb
in
cmp
stc
push
and
ljmp
push
clc
xchg
pushf
mov
repnz
fadd
das
clc
and
mov
adc
inc
aas
push
rcrl
ds
mov
jb
fistpl
adc
call
jno
out
mov
addr16
scas
inc
sti
arpl
daa
std
or
sbb
loope
inc
mov
inc
cmpsb
popf
push
loop
sbb
or
imul
xor
dec
xor
fsubr
fildll
lcall
lds
fidivrl
jg
stos
pop
jl
lcall
jbe
dec
mov
sub
jge
xor
lahf
les
sbb
decl
in
negb
cld
addl
sbb
mov
lahf
outsl
int3
push
jo
push
sbb
pop
paddsw
pop
arpl
out
out
outsl
xchg
inc
test
clc
incl
cld
in
jge
popa
push
test
jbe
outsb
hlt
sti
fsubs
shl
dec
cs
cli
ljmp
dec
adc
lahf
mov
or
out
lcall
std
rolb
icebp
push
cld
mov
adc
stos
pop
jg
pop
sar
inc
mov
in
pop
cld
or
xor
pop
rcr
dec
mov
gs
pushf
lcall
idivl
aad
sti
jp
jnp
jecxz
adc
inc
lds
push
pop
adc
mov
mov
imul
or
inc
pop
xor
rorb
mov
scas
ss
push
sbb
mov
pop
pushl
enter
mov
into
test
xchg
movsb
insb
or
and
xchg
jnp
movsb
fidivrs
clc
insb
test
loopne
jnp
aas
repz
sbb
lock
in
jmp
out
rcll
aaa
clc
push
std
mov
ja
jl
or
mov
xchg
pmullw
clc
decl
repnz
dec
sahf
enter
fcmovb
inc
adc
inc
loopne
test
out
rcr
hlt
mov
inc
out
pop
or
or
dec
ss
mov
or
repnz
clc
dec
cmc
mov
jl
call
std
testb
pop
in
cmp
jg
aaa
inc
jmp
mov
pop
lock
jmp
hlt
dec
mov
adc
xlat
inc
aas
mov
jg
mov
cmp
or
addr16
sbb
cld
daa
jp
std
adc
loope
fldt
cltd
or
mov
ret
nop
cmp
das
add
mov
lock
pop
pop
div
cld
mull
sbb
cmc
add
stc
lahf
loope
jae
jmp
shrl
je
jge
std
scas
bound
jg
stc
add
out
leave
xchg
inc
icebp
mov
loope
mov
cmpsl
popf
sti
sub
mov
ja
push
outsl
das
jge
fwait
dec
das
add
cmpsb
cmp
call
std
add
decb
adc
mov
and
jo
adc
call
mov
add
jg
push
mov
inc
add
nop
test
aaa
std
fisttps
fdivp
push
dec
inc
sbb
xchg
fimull
cmp
aas
icebp
ret
ror
sbb
jae
arpl
adc
jbe
mov
mov
pop
clc
loope
loope
mov
or
scas
sbbb
jg
roll
jno
sbb
and
fmull
cld
pop
cmp
cmp
repz
sbb
pop
gs
lds
dec
sarl
pop
out
jg
jno
ret
jmp
cmp
push
sbb
inc
push
dec
jge
pop
clc
call
sbb
mov
ds
inc
mov
in
sbb
xchg
imul
add
push
icebp
jmp
outsl
jmp
std
mov
daa
jmp
faddl
add
lock
mov
test
bound
add
push
imul
pop
stc
push
dec
out
fstpt
mov
enter
das
inc
pop
add
dec
inc
inc
xchg
cmc
out
daa
icebp
push
lahf
sti
inc
pop
ljmp
sbb
cmpsb
scas
les
pop
xor
mov
xchg
mov
fildll
fsubrl
dec
or
push
add
or
jns
add
sti
push
sti
pop
inc
fs
test
mov
push
rorl
stos
fdivrs
int3
pop
iret
and
add
mov
js
call
cmpb
inc
mov
or
pop
or
mull
add
sti
mov
and
push
sbb
sub
add
in
outsb
testl
push
stos
addb
inc
pop
popa
sub
imul
cs
sti
adc
lock
xlat
adc
add
add
inc
lods
insl
xor
or
cmp
xchg
fs
inc
add
sub
adc
push
or
pop
lock
add
sbb
push
inc
add
and
fidivrs
or
fists
push
gs
imul
and
jg
sbb
gs
mov
fidivrs
pop
push
outsl
outsl
insb
push
divb
xor
jo
push
and
gs
mov
sbb
lcall
dec
jo
fcmovu
data16
shlb
shrl
and
fisubrl
push
fistpl
fwait
std
dec
jne
js
stos
or
inc
fists
or
cmp
pop
sbb
cmpsl
mov
fidivl
dec
loope
mov
imul
jo
cwtl
or
outsl
ret
pusha
in
insl
insl
popa
sub
insb
outsl
bound
fidivrs
push
pop
push
outsb
or
imul
mov
imul
push
sbb
mov
sarl
adc
fsubrs
testb
push
imul
popa
mov
jge
mov
arpl
inc
daa
xlat
or
cli
addr16
xchg
imul
insl
xchg
fadd
sub
mov
jo
lds
and
insb
jne
add
cmp
inc
jne
data16
pop
test
sbb
mov
sbb
push
mov
fdivs
das
dec
adc
cmpl
add
dec
jae
cltd
push
dec
gs
xchg
dec
cltd
cs
sarl
xlat
push
push
and
add
outsl
lock
sub
or
push
nop
mov
fistpll
jae
xor
gs
jge
add
test
popa
fcoms
xor
mov
rsqrtps
or
mov
sbb
fildl
sub
in
fldt
out
imull
mov
jns
ss
jmp
add
mov
and
ret
pop
outsl
jl
call
xor
push
xchg
sbb
xor
adc
push
add
imul
outsl
popw
sbb
into
fs
and
ret
and
push
mov
pop
jae
push
mov
shl
push
loopne
dec
inc
dec
aad
sub
fildl
or
pop
jle
rclb
jne
dec
jb
xchg
mov
call
xor
shll
test
aaa
cmp
pop
push
mov
test
jns
pop
insl
or
mov
popa
es
sbb
sbb
sub
mov
mov
pop
or
cmpsl
mov
cmp
ja
add
out
pusha
sbb
pusha
mov
cmp
push
sbb
dec
pop
sbb
mov
cmp
jne
insb
xchg
fadds
popf
lahf
pushf
mov
xor
pusha
jno
push
adc
push
popl
cmp
jns
sub
clc
add
mov
push
fsubl
push
xor
cltd
sbb
jge
sti
jae
xchg
bound
shll
rorl
mov
inc
mov
int3
mov
aad
jo
cmp
pop
loopne
xor
adc
outsl
xor
inc
je
add
mov
sbb
inc
sbb
movb
dec
jnp
sbb
or
sub
bound
enter
sti
outsl
mov
add
and
sbb
test
repz
push
push
xchg
mov
jne
push
lds
into
or
sahf
inc
xor
pusha
mov
fsubrp
pop
jnp
inc
xlat
push
cltd
adc
sub
mov
mov
add
insl
pop
push
mov
mov
sub
push
inc
ljmp
inc
pop
int
and
fldl
push
and
mov
push
inc
call
pusha
mov
xchg
insl
push
sub
mov
outsb
push
jne
inc
mov
add
mov
pop
ret
mov
roll
cmp
dec
dec
add
inc
mov
fistps
mov
or
adc
gs
push
inc
add
popa
and
jns
dec
xchg
sbb
dec
test
inc
loop
jne
xchg
jo
faddl
adc
inc
arpl
roll
or
and
lock
js
adc
fsts
push
jg
fwait
mov
pop
insl
dec
and
inc
cmp
inc
sbb
fisttpl
sub
ss
dec
call
and
jae
pmaxsw
jns
and
popa
pop
es
sub
mov
dec
sub
fimull
fsubr
mov
pop
add
sub
dec
rcr
ffreep
adc
jmp
add
and
mov
xlat
inc
jecxz
pop
mov
insb
ret
dec
inc
jb
and
mov
aad
jne
jo
inc
inc
mov
arpl
lcall
ret
inc
xor
stos
imul
loop
stos
icebp
aam
fs
outsl
mov
mov
insb
or
lock
ss
insb
jle
punpckldq
inc
push
mov
inc
fs
dec
jae
int3
dec
movsl
fidivs
nop
loope
into
negl
add
lods
push
into
cmp
stos
push
sarl
imul
jbe
add
push
scas
push
mov
into
push
mov
mov
jge
adc
push
pop
js
pop
lret
xor
mov
adc
enter
mov
pop
fidivl
bndstx
pop
pop
data16
lods
and
popa
add
mov
out
mov
lcall
or
and
pop
jecxz
outsb
dec
lahf
pop
xchg
xchg
sbb
mov
jns
test
xchg
fidivrl
lcall
or
mov
mov
imul
xor
rorl
movhps
pop
shll
pop
push
into
rcrl
lods
mov
sbb
mov
xchg
inc
push
outsb
fidivrs
jo
dec
and
ficoml
sbb
rcrl
shl
addb
and
fmuls
mov
adc
insl
lcall
aad
sbb
sbb
cmp
addr16
bound
scas
inc
stos
or
fildl
push
mov
fiadds
sub
insb
inc
lret
sbbb
push
in
add
jb
jns
and
push
adc
pop
jnp
add
fisubs
jno
add
call
bound
pop
sbb
lret
aaa
sbb
pop
push
dec
in
subw
es
outsl
outsb
xor
in
inc
push
aad
or
pop
fidivl
cmp
jle
xor
jle
xchg
cwtl
mov
mov
adc
cwtl
push
pop
pop
stos
out
jo
or
lods
imul
push
les
aas
push
pop
out
fildl
xchg
xchg
fcompl
xchg
adc
and
push
adc
dec
xchg
ds
cmp
pop
sub
js
fcmovnb
mov
ret
mov
jg
jle
into
push
fstl
insb
and
loopne
dec
inc
loope
cld
popa
imul
ror
xchg
sbb
movsb
dec
les
addb
sub
jmp
cs
mov
in
insb
adc
out
cmp
push
or
sub
mov
mov
or
jo
int3
ret
adcb
sub
dec
insl
pop
xor
inc
std
imul
test
mov
fs
sub
insl
xor
dec
mov
xchg
add
mov
outsb
aas
add
adc
or
xchg
jbe
mov
cmpsb
ret
icebp
pop
adc
sbb
outsb
ret
cmpl
adc
cld
mov
and
insb
and
dec
popw
imul
vcmpss
loopne
roll
inc
inc
xlat
outsb
or
jo
pop
jmp
jbe
sub
mov
push
cs
scas
inc
sbb
sub
sub
add
in
or
test
icebp
inc
push
sahf
pop
pusha
push
mov
sar
rclb
call
mov
aaa
lcall
arpl
in
jg
xor
inc
cmc
inc
shll
jmp
imul
inc
or
ja
outsl
int
push
dec
and
call
imul
inc
jae
and
test
pop
push
inc
popa
ret
xor
dec
adcb
cs
sbb
adc
mov
or
dec
lock
adc
lcall
mov
sbb
xchg
mov
and
pop
pusha
xor
or
mov
outsl
mov
push
add
push
adc
prefetcht0
sbb
adc
adc
incl
cmp
lock
push
rorl
and
jne
mov
pop
inc
lock
push
add
dec
or
incb
add
or
sbbb
sbb
xor
fstpt
push
or
sbb
adc
pop
or
and
push
sbb
adc
std
call
and
sbb
pusha
push
sub
or
and
inc
or
sbb
inc
or
lods
push
sbb
push
daa
adc
xor
and
or
jge
jmp
sbb
pop
lock
push
add
cs
daa
jo
inc
or
dec
or
lods
lock
add
inc
and
lock
mov
pop
lock
sahf
adc
sbb
call
outsb
add
add
cmp
adc
sti
jmp
cmp
cs
sbb
es
es
daa
sbb
pop
cwtl
dec
push
adc
es
insl
fistpll
pop
add
sub
add
add
xor
jl
inc
imul
jo
sbb
or
ud0
lock
push
pop
int3
adc
cmp
sbb
pop
aad
sar
dec
sub
jne
sub
or
ret
adc
pop
int3
pop
sub
sbb
inc
push
push
aaa
or
pop
lock
incl
rdpmc
push
sub
sbb
push
loopne
movq
jae
inc
sbb
aaa
insb
std
in
sub
pop
nop
cmp
das
sbb
decl
jle
jnp
or
dec
and
pop
push
xchg
movsl
adc
pop
sub
lock
sbb
pop
or
adc
xor
cmp
fdivr
xor
subl
sbb
push
jg
decl
sbb
lock
adc
subb
lock
add
call
pushf
sub
daa
push
rcr
cmovae
dec
adc
inc
adc
outsb
sub
pushl
sub
sbb
nopl
or
and
fisubl
sbb
xor
inc
inc
cmp
incl
dec
test
adc
cmp
mov
xor
pop
popa
pop
sbb
cmp
pusha
int3
sti
add
add
pop
adc
mov
push
push
loopne
or
push
or
mov
or
push
pop
int
pop
push
sbb
mov
or
and
push
sub
or
adc
sbb
mov
pop
mov
lock
adc
adc
push
sbb
leave
or
pop
sub
cmp
mov
adc
aam
or
push
push
sub
dec
dec
add
mov
pop
cld
repnz
sub
cmp
pop
and
mov
bound
cld
cmpsl
mov
add
xor
sbb
subb
jo
test
adc
sbbb
adc
sub
psignb
fistpl
movhps
dec
movsl
dec
or
imul
sub
mov
loopw
pop
push
scas
addr16
inc
xor
pop
lock
add
cmp
ljmp
addr16
les
addr16
ss
xor
pop
cmp
xor
hlt
fildl
fsubs
gs
outsl
adc
pop
sbb
push
lock
incb
add
lock
add
cmp
lock
mov
mov
pop
or
sbb
or
faddp
adc
adc
xor
sub
or
into
fcomi
push
jge
or
inc
or
or
and
sbb
adc
push
testb
mov
adc
mov
push
or
fimuls
jp
sbb
icebp
mov
pop
sbb
cmp
jp
push
fsubl
xchg
movhps
push
mov
xchg
pop
pop
adc
or
push
mov
cmc
sbb
sbb
rorb
lock
push
das
xchg
dec
sbb
sub
lock
add
add
ljmp
sbb
aaa
push
sbb
or
and
jo
inc
xor
nop
inc
sub
pop
add
dec
push
or
or
fdiv
pop
jae
sub
das
cs
pop
je
adc
mov
adc
mov
ret
add
sbb
xor
adc
or
push
loop
fiadds
and
or
inc
lock
decl
mov
lock
add
or
or
lock
add
sbb
cltd
sbb
adc
push
mov
lock
adc
xchg
fdivs
sbb
or
push
adc
cmp
push
mov
push
fndisi(8087
scas
or
add
add
inc
lods
prefetch
or
push
outsl
stos
mov
cli
jo
adc
ljmp
incl
mov
aaa
xor
outsl
pop
jne
adc
sbb
sbb
mov
sub
adc
dec
dec
push
ret
js,pn
cmp
data16
into
sbb
push
add
or
adc
icebp
out
push
out
inc
push
sub
or
dec
adc
or
or
hlt
add
push
ss
xor
mov
into
movsb
add
sbb
std
and
loopne
or
pop
std
push
dec
cltd
shl
outsl
cld
lock
jmp
inc
mov
dec
add
and
aad
jne
xor
loopne
nop
inc
sbb
xchg
push
adc
dec
cs
push
dec
sahf
xchg
cs
push
fimull
sbb
push
sbb
addb
push
xor
jmp
add
lock
lcall
sub
nop/reserved
mov
sub
sub
or
sbb
inc
xor
sbb
add
pusha
inc
adc
dec
sub
pop
adc
jae
fiaddl
notl
dec
insb
ret
ds
sbb
je
adc
and
fldl
or
pop
lds
pop
sbb
jo
push
and
add
int3
or
mov
loop
popa
inc
mov
and
scas
jg
fcomps
dec
flds
lock
add
inc
inc
inc
push
adc
cld
or
repnz
mov
call
adc
push
and
adc
and
lds
rcrl
and
or
pushf
add
add
inc
sub
or
xchg
int3
into
sbb
sbb
adc
stos
test
rolb
or
call
mov
adc
es
sub
imul
xchg
pop
mov
lock
add
rclb
inc
mov
in
lcall
popf
xor
jle
and
push
sbb
repnz
or
or
das
xor
stos
or
xor
out
fdivs
sbb
xchg
xor
sbb
lock
fdivrl
cmp
pop
in
or
dec
sbb
cmp
add
shrl
mov
sub
and
adc
pop
mov
cs
xor
add
mov
cwtl
push
fwait
push
in
mov
sbb
add
lock
push
inc
lock
add
push
cmp
adc
sbb
push
sub
and
or
fstpt
out
stos
cli
push
js
lcall
aas
mov
add
mov
adc
sub
or
decl
sbb
movsl
add
lock
adc
lcall
and
sbb
sbb
or
sbb
sbb
adc
adc
inc
pop
and
insb
xchg
or
pop
cmp
fs
or
inc
jae
and
adc
sbb
outsl
or
ljmp
add
clc
pop
scas
adc
adc
pop
pop
push
and
xor
jp
cltd
insl
add
cmp
add
andb
cmp
mov
dec
pop
orb
pusha
and
pop
and
decl
or
cmp
jnp
cmp
and
sub
adc
sbb
dec
insl
leave
or
pop
adc
add
js
and
mov
cmp
push
insb
mov
xchg
pop
cld
xor
adc
jmp
mov
and
sbb
data16
and
scas
lcall
addr16
xor
es
adc
add
pusha
fcomip
ljmp
cmp
cmp
ds
aas
inc
cmp
or
adc
or
jbe
jne
pop
xor
cmp
pop
movb
or
bound
pop
icebp
incl
cmp
test
movsl
add
aas
and
fbld
clc
lcall
pop
push
pop
pop
xor
inc
xchg
adc
es
dec
orb
push
pop
ss
pop
cli
and
sbb
out
std
sbb
mov
orb
testb
js
sub
or
xor
arpl
test
jge
ja
adc
adc
or
add
adc
dec
je
cmp
and
push
pop
sbb
pop
sbb
lods
movsl
mov
and
and
rclb
call
push
sub
adc
dec
dec
rcrl
inc
js
mov
push
inc
outsl
daa
push
mov
aaa
xchg
push
das
jns
cltd
cltd
fwait
fwait
mov
loop
stos
lock
mov
loop
pop
adc
sbb
jo
mov
and
jb
sbb
popa
xchg
pop
into
push
pop
loopne
inc
or
sub
adc
xor
adc
xlat
push
adc
sub
jbe
inc
mov
in
push
sbb
or
or
cmp
test
loop
pop
or
dec
adc
push
out
inc
adc
adc
fs
sbb
jle
sar
decl
inc
and
and
xor
sbb
sbb
cmp
adc
mov
push
cmp
or
xchg
fs
add
ret
lret
add
mov
cld
mov
lock
das
adc
or
or
sub
and
sub
fs
sbb
cmp
sbb
int3
sub
adc
and
xor
out
fisubrl
push
cmp
push
jnp
and
or
fisubs
sub
ja
imul
or
mov
adc
jae
push
inc
sub
pop
jbe
push
insb
push
sub
sbbb
bound
ja
adc
adc
call
loopne
sub
and
sbb
cmp
ds
test
cli
adc
jg
push
dec
lods
add
adc
add
or
or
adc
call
push
std
pop
jns
push
or
xor
cmp
xorl
adc
sbb
push
sbb
jbe
or
xchg
or
or
jne
push
pop
sbb
adc
pop
mov
cld
and
fs
je
movsl
or
adc
in
mov
and
or
xor
or
sub
lea
sbb
inc
jnp
fs
xor
adc
push
adc
in
adc
pop
adc
push
pop
push
pop
and
sbb
sbb
push
pop
dec
loop
fwait
or
jbe
adc
dec
cld
popf
jb
jge
adc
pop
dec
and
lcall
lods
fistpll
add
xor
jg
repnz
arpl
or
pusha
jg
lock
and
adc
daa
xchg
shl
mov
push
lock
add
imul
sub
imul
das
les
adc
adc
adc
push
pop
outsb
lock
lock
adc
add
inc
inc
pop
test
or
adc
cmp
aaa
cld
jg
mov
pop
or
or
inc
push
das
lock
or
in
popf
loope
mov
dec
push
js
lock
add
rcll
jg
push
or
ljmp
cld
inc
push
and
and
cmp
or
push
jp
mov
pop
adc
jl
push
adc
shlb
popf
adc
lock
and
cli
cs
push
mov
adc
call
out
inc
adc
or
rorl
shrl
lock
scas
das
clc
arpl
adc
adc
jp
add
outsb
dec
inc
and
add
and
adc
push
mov
cld
xchg
test
call
mov
data16
or
xor
adc
loopne
rorl
stos
daa
dec
fcoms
mov
jb
add
pop
inc
inc
add
fucomp
inc
dec
adc
cmp
push
dec
push
imulb
cmp
lcall
or
xchg
stos
adc
fs
popa
das
inc
push
adc
pop
in
push
mov
test
shlb
iret
adc
adc
mov
ss
popa
dec
push
add
and
sbb
sbb
or
push
cmp
sbb
push
das
push
or
fdivp
mov
sbb
push
push
daa
cmp
cmp
lcall
rcrb
lock
or
cmpsb
mov
jg
push
adc
xor
sub
or
mov
sti
decl
push
or
or
or
dec
aaa
daa
lods
sub
sti
incl
pop
pop
pop
aaa
dec
lock
inc
gs
insb
pop
inc
add
sub
cli
mov
push
xor
adc
inc
push
or
inc
jg
ljmp
mov
add
jl
in
arpl
add
cs
jmp
sub
push
inc
nop
add
jg
inc
push
or
adc
sub
sbb
push
xorb
daa
sti
pop
std
pop
nop
iret
push
cmp
add
xchg
jb
push
jg
data16
ja
hlt
sbb
adc
pop
sbb
sub
cmp
stos
jle
daa
push
and
pop
xor
sbb
pop
fs
jb
enter
sbb
push
and
push
push
pop
cmp
jo
scas
jb
xor
aam
push
adc
test
xor
adc
mov
negb
pop
es
lock
add
push
push
or
ljmp
sbb
adc
cmp
inc
aas
sbb
xchg
push
mov
sbb
sbb
lcall
cmp
xor
rclb
sbb
adc
sub
xor
dec
pop
pop
add
sub
stos
add
es
daa
sbb
mov
sbb
jg
sbb
mov
sbb
or
aaa
cld
dec
pop
je
add
adc
arpl
inc
push
data16
ljmp
pop
push
inc
push
outsb
cmp
subb
sbb
lock
je
fstpl
pop
and
cmpsb
pop
mov
push
sub
dec
sub
sub
and
add
and
bound
push
sub
jp
adc
insb
push
insl
add
or
fistpll
pop
lock
add
lock
push
adc
scas
add
cmp
inc
or
adc
push
imul
adc
sbbb
cmc
pop
sbb
dec
subb
ret
pop
jmp
and
ficoms
xor
and
or
popa
and
adc
imul
or
xchg
dec
cmp
inc
daa
mov
sub
push
sub
adc
and
adc
ja
mov
push
push
lcall
std
push
or
add
pop
adc
jp
mov
add
fs
pop
or
clc
mov
sbb
dec
xor
aaa
movsb
es
aaa
sbb
dec
das
xor
pop
adc
mov
cvtps2pd
push
and
stos
int
xchg
lock
or
les
rcrb
push
jl
push
sub
adc
add
outsl
in
and
sub
and
cmp
sub
mov
subb
xor
sbb
cmc
dec
push
add
push
push
ss
and
lret
and
fisttps
jle
sbb
push
enter
inc
or
push
mov
push
orb
push
out
jp
outsl
or
or
mov
and
mov
mov
imulb
das
sbb
jle
lahf
push
sub
mov
int3
lods
mov
or
rcrb
jl
adc
call
and
mov
out
push
push
cmp
and
and
inc
adc
cmp
or
xor
cli
or
cmp
gs
adc
sbb
ret
pop
hlt
adc
sub
sbb
mov
or
pop
xor
iret
addr16
or
testb
lock
push
adc
andb
fadd
mov
pop
and
xor
incl
mov
push
mov
and
add
push
cmp
inc
add
or
and
iret
nopl
sub
sub
add
aas
push
push
mov
cmpsb
push
hlt
cmp
push
jbe
pop
add
ss
out
xchg
cmp
push
pop
and
push
sbb
pop
psadbw
outsl
pop
push
pop
sbb
cs
sbb
adc
das
dec
jb
mov
pop
pop
jbe
mov
and
imul
inc
push
jle
in
inc
fidivl
jo
and
adc
add
mov
push
inc
xchg
adc
dec
push
push
push
push
push
dec
xchg
fs
push
test
jg
bound
push
cmp
push
imul
call
and
pop
and
js
add
shl
pop
movsb
xor
add
add
mov
or
xor
add
push
sbb
fdivrp
xchg
sbb
and
xor
xor
in
sub
adc
xchg
or
or
call
or
mov
sub
aas
inc
aas
inc
aas
fldl
ljmp
and
pop
movd
push
and
shrb
fstl
cmp
pop
dec
ss
sub
sbb
cltd
pop
popa
jl
pop
neg
adc
inc
pop
adc
sbb
pop
sub
adc
inc
fdivs
xor
xchg
add
xor
cmp
mov
adc
sub
push
lock
adc
dec
add
lret
sbb
adc
or
add
call
push
push
dec
adc
adc
pop
push
ss
push
decl
and
dec
push
and
and
push
add
gs
fs
imul
imul
imulb
mov
sarb
mov
hlt
ja
pusha
enter
push
push
aas
adc
pop
and
inc
or
push
sbb
and
popf
push
sbb
rcll
or
ret
pusha
pop
add
xchg
adc
mov
adc
mov
sbb
gs
jge
outsb
cli
xor
pushf
rcrb
or
test
add
dec
xor
ss
inc
arpl
into
lock
clc
jg
xlat
hlt
dec
dec
sbb
add
or
lock
add
cmp
cmp
xor
mov
sub
sub
push
sbb
and
xor
lcall
add
push
or
pop
inc
and
into
ds
push
and
cmp
sbb
sub
pop
push
and
mov
and
je,pt
cs
dec
dec
and
sub
iret
decb
sub
sub
sub
cmp
sub
pusha
sti
pop
div
and
pop
cmpb
pop
push
sbb
cmp
xchg
adc
shrb
push
cmp
bound
sbb
mov
insb
cli
sti
stos
mov
stos
fs
xor
sbb
mov
in
pop
mov
cmp
pop
imul
and
xor
cmpl
in
mov
outsb
push
sbb
inc
inc
pusha
jl
sub
sub
dec
adc
lock
loope
imul
xor
adc
lock
add
push
and
inc
pop
xor
add
lret
nop
arpl
or
sub
xor
clc
or
call
insb
add
sbb
push
lock
insb
out
call
int
insl
fadds
sub
es
scas
or
es
pop
xor
add
sbb
fidivrl
shll
sub
xor
and
xchg
sbb
pop
sbb
jl
aaa
cmp
push
jae
mov
dec
pop
sub
cmp
out
cwtl
adc
adc
pop
int
cmp
pop
or
add
adc
enter
or
mov
loopne
add
adc
inc
jbe
or
mov
push
push
ljmp
and
lock
mov
lahf
sub
add
lock
ja
roll
jl
rorl
iret
nop
pop
sbb
inc
sub
mov
add
mov
or
or
add
or
or
fsubrs
sbb
int
jo
lock
add
adc
mov
inc
pop
lea
jb
or
adc
or
push
pop
jnp
adc
sbb
and
add
or
pop
push
inc
jg
imul
bound
add
jbe
cwtl
sbb
mov
shll
insb
xchg
popa
or
adc
sbbl
xor
or
rcl
xchg
dec
push
sbb
sbb
push
push
sub
pop
loop
inc
jo
stc
lds
add
mov
loope
or
lcall
and
mov
sbb
out
mov
sbb
outsb
pop
or
sub
push
cmp
shlb
or
or
adc
lret
pusha
cmp
adc
outsl
and
add
jbe
dec
push
xchg
test
jge
inc
or
adc
and
mov
mov
sub
mov
out
or
mov
mov
mov
arpl
dec
mov
fwait
mov
nop
xchg
cmp
dec
pop
add
mov
sbb
xchg
and
xchg
fstpl
or
ret
sub
adc
inc
adc
notl
subl
pop
or
aaa
jmp
inc
mov
lods
sbb
das
adc
stos
ljmp
stos
mov
sub
and
fstpt
mov
mov
bound
pop
adc
adc
fnsave
nop
sub
mov
xor
adc
cmc
push
stos
bound
mov
inc
or
inc
iret
lea
icebp
pop
ja
add
mov
cmpsl
sbb
push
sbb
add
test
ja
inc
andb
push
jne
popf
aaa
pop
or
xor
pop
or
push
pop
sub
rorl
or
sbb
jns
push
sub
pop
or
pop
mov
add
mov
lods
sub
aaa
adc
dec
inc
xor
insl
mov
add
adc
xor
mov
gs
add
into
sbb
sbb
fiaddl
es
dec
ret
pop
add
stos
pop
scas
xor
and
push
sub
xor
in
jae
mov
mov
pop
xor
mov
scas
xlat
insl
cmp
and
sbb
and
sbb
adc
scas
fldcw
inc
or
insb
in
add
mov
lret
stos
xor
pop
xor
sub
test
ja
push
adc
adc
sbb
mov
pop
lock
and
aam
lock
or
and
out
out
sbb
and
add
or
in
and
lock
add
jp
hlt
lock
add
inc
movsb
add
repnz
sub
fstpt
mov
xor
sbb
sbb
cmp
inc
std
jge
xlat
sbb
xor
or
sub
push
sbb
call
sub
pop
push
inc
sub
sbb
pusha
dec
sub
insb
inc
push
add
mov
mov
inc
inc
sbb
push
or
or
adcb
cld
outsb
add
push
adc
add
xor
divb
orb
add
xchg
mov
jnp
or
push
add
or
sub
add
pop
add
xchg
xorl
rcrl
mov
dec
adc
sbb
cs
add
rcl
inc
and
jb,pn
mov
add
inc
add
inc
push
xchg
sahf
jge
mov
inc
cs
add
push
or
push
or
enter
iret
addl
push
xlat
out
mov
mov
lahf
jb
mov
and
mov
push
dec
push
mov
inc
add
ror
jle
test
dec
scas
or
and
add
inc
incl
pusha
mov
lea
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
dec
repnz
add
inc
add
