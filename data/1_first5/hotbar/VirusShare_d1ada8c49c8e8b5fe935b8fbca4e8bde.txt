divb
in
mov
mov
mov
push
push
call
int3
das
int
in
jg
shlb
or
and
push
je
and
out
je
push
call
push
add
sub
push
ret
in
divl
jne
mov
or
call
xchg
push
push
add
stc
out
aas
mov
test
je
cmp
pcmpeqd
cmp
jae
dec
movzwl
lea
jne
sbb
xor
jmp
and
neg
fidivrs
and
pop
pop
mov
or
call
push
push
sarl
stc
rcll
jp
jge
add
pop
push
push
push
push
xor
mov
push
mov
scas
stos
mov
std
adc
inc
add
cmp
pushf
or
jnp
or
push
mov
push
xor
cwtl
pop
jnp
mov
xchg
push
sbb
add
divb
inc
sub
ret
mov
jmp
pushl
sar
insb
jbe
jecxz
lea
or
lock
dec
test
jg
sbb
xor
adc
push
add
outsb
mov
push
scas
adc
mov
add
inc
jne
sub
sar
mov
je
daa
ret
push
repz
outsl
or
fadd
adc
pushl
mov
or
xor
dec
mov
mov
mov
call
pushl
mov
or
insl
adcb
data16
pop
cld
add
movsb
or
andl
mov
dec
lock
adc
push
xchg
adc
push
jge
pusha
outsl
adc
test
mov
fcomps
sub
dec
xor
dec
and
or
mov
mov
or
or
pop
cmpsl
push
cmp
mov
mov
aaa
ret
data16
call
sbb
add
push
jle
call
inc
mov
lea
mov
adc
cmpl
push
dec
or
add
iret
jbe
ret
ja
pop
xchg
sbb
mov
and
or
ret
test
push
xchg
mov
call
lcall
dec
and
add
xchg
es
pop
xlat
push
sbb
test
or
sbb
push
sub
add
scas
outsb
push
mov
aas
fadd
jae
push
stos
scas
sti
push
pop
pop
push
jno
pop
scas
dec
imul
add
pop
or
push
push
sbb
push
or
sub
add
mov
pop
cmp
push
mov
pop
aad
jp
aaa
xchg
xor
bound
adc
inc
lock
push
mov
cmp
or
rolb
or
sbb
push
clc
jge
insl
cmp
dec
pop
ljmp
push
hlt
mov
xor
mov
pop
ret
push
inc
shrl
pop
jae
cmp
int
inc
sub
inc
clc
ds
subb
or
xchg
inc
pop
push
jo
ss
push
sbb
xchg
or
orl
pop
adc
inc
test
jne
add
stos
add
jmp
js
mov
cmp
jg
mov
adc
addr16
dec
ds
and
pop
movsl
pop
enter
push
dec
test
push
and
dec
hlt
sub
push
mov
idiv
loope
sar
imul
cld
ja
adc
dec
xchg
or
dec
clc
add
push
loop
int
adc
in
and
cmpsb
adc
leave
aam
enter
pop
push
orb
ret
fdiv
lcall
cld
clc
fistpll
iret
jle
mov
cmpl
or
clc
ret
jnp
push
out
jmp
push
cmp
jge
push
sti
add
inc
jle
add
pop
cltd
jge
enter
fisttps
iret
mov
aam
push
sahf
lock
push
xchg
push
mov
cmp
jl
cmp
jne
aaa
loopne
or
add
xor
std
shlb
adc
mov
inc
add
add
add
lea
push
add
push
push
lea
fwait
pop
push
jo
nop
xor
push
jp
fldt
xor
into
mov
aam
push
push
sub
cmpsl
jo
fdivrs
fbstp
pop
adc
cld
fsubrs
pop
stos
mov
repz
or
loop
jge
test
jle
cmp
mov
pusha
outsl
mov
inc
mov
sbbl
inc
icebp
mov
pop
xchg
pop
jmp
push
sbb
push
xor
dec
and
xor
jns
sub
and
add
adc
lods
ret
pop
sub
loopne
leave
mov
lcall
hlt
cmp
pusha
inc
adc
sub
push
and
hlt
jg
pusha
cmp
push
add
or
cmp
scas
cmp
push
shr
mov
rcrl
push
push
adc
cmp
jle
mov
push
pop
or
out
or
icebp
add
cmp
cmp
jae
push
cmp
call
xchg
pop
lret
or
push
add
jb,pt
pop
adc
pop
adc
pop
leave
stos
jle
mov
fcoms
jnp
ljmp
sbb
cmp
lock
adc
push
push
rcrb
sbb
or
adc
or
cmpsb
push
loope
add
jne
pop
enter
cwtl
loopne
cmp
jo
inc
sub
add
ret
aad
aaa
add
ret
or
or
pop
pop
or
cmp
sub
pop
das
xor
jno
cmp
jne
push
push
lock
push
in
and
jl
in
js
push
mov
mov
or
mov
pop
pop
pop
pop
addl
int
push
add
jg
xor
pop
divl
je
movl
jo
add
and
mov
jecxz
mov
popa
leave
iret
add
add
xchg
push
jg
mov
sub
cmc
push
mov
cmp
fdivl
in
jle
pushw
mov
test
xchg
xchg
lret
cwtl
mov
dec
test
cwtl
imul
loop
mov
and
je
push
and
add
dec
ss
js
movl
or
lret
sub
mov
add
rcr
jge
xchg
push
fisubs
fs
clc
imul
dec
add
mov
dec
inc
lods
enter
add
iret
cmp
push
add
in
dec
lock
mov
xor
jo
mov
scas
fnstsw
mov
push
mov
adc
loopne
scas
aas
roll
sub
add
push
cmp
je
bound
sti
icebp
sub
pop
out
or
jne
dec
fimull
sbb
mov
pop
mov
cmpb
flds
jb
cmp
cmc
cmp
mov
and
dec
mov
jae
push
cmp
dec
or
scas
imul
mov
mov
mov
sbb
call
arpl
cs
lods
imulb
jb
push
add
or
ja
repz
cmp
in
cmp
sub
andl
add
or
push
in
mov
push
adc
or
push
in
xchg
ss
dec
or
inc
gs
lock
add
std
push
mov
mov
or
into
lahf
insb
out
xchg
sbb
lods
sbb
pop
jae
ret
loopne
inc
dec
adc
xor
les
push
shlb
sub
call
adc
inc
add
push
lock
outsb
or
mov
sahf
icebp
insb
call
cs
out
popa
inc
and
ror
add
addr16
ret
push
aas
aaa
pop
and
push
push
mov
dec
mov
mov
into
inc
and
mov
xor
sbb
push
js
in
ds
jecxz
fs
sub
jo
adc
adc
lahf
push
pop
int3
or
jmp
mov
shrb
loop
lcall
xchg
lds
scas
aad
mov
mov
cmc
push
cld
jnp
jge
lea
stc
adc
lods
push
pop
or
and
push
js
and
adc
adc
popa
add
stc
int3
in
dec
cwtl
loopne
cmp
fldl
pushl
fadd
jg
shl
fcomps
sar
inc
adc
andb
mov
cmpb
stos
mov
sbb
push
xor
fiadds
pop
iret
push
pop
lods
movsl
lods
mov
cmp
xlat
test
out
das
push
and
pop
and
xchg
and
adc
adc
cmp
test
loopne
loope
incl
sbbb
mov
test
xchg
aaa
out
push
xor
icebp
jb
pop
cmp
sarb
adc
pop
adc
lock
test
fmuls
lret
in
aas
pop
mov
sub
mov
mov
dec
addr16
sahf
movsl
and
nopl
inc
add
pop
mov
into
push
inc
jo
gs
mov
je
cmp
or
icebp
into
scas
mov
xchg
adc
mov
push
int3
test
xor
inc
mov
std
pop
pushf
and
cmp
xchg
das
aas
push
inc
adc
jmp
jo
int3
mov
lds
adc
adc
leave
cmpl
imull
pop
adc
lahf
and
in
dec
xchg
jp
outsb
push
push
or
mov
xor
dec
sbb
mov
test
mov
lea
mov
push
push
push
jl
xchg
sub
xchg
sbb
sbb
roll
cmp
movsl
pop
pop
ljmp
push
rcrb
jne
mov
or
punpckhbw
mov
das
movsl
ss
test
or
sbb
pop
lea
outsl
addb
jbe
dec
add
push
stos
hlt
mov
adc
repz
adc
in
jnp
enter
mov
in
and
in
stos
into
fsubrl
or
push
adc
insl
mov
call
mov
les
jnp
mov
xchg
or
cmp
pop
loopne
in
sbb
scas
and
mov
in
xchg
sbb
push
xor
xor
xor
push
dec
aam
jge
jl
cld
rorb
cld
das
cmp
lock
add
js
adc
lock
pop
loopne
movl
dec
cmpl
xor
addb
je
shlb
cmp
roll
cmpl
xor
adc
adc
call
push
mov
daa
jecxz
incl
add
push
ljmp
xor
push
popa
mov
testb
pop
in
cmp
pop
push
movb
fidivrs
test
addr16
dec
and
mov
stos
xchg
test
lock
jle
mov
xor
sbb
jl
fwait
mov
fistpl
jae
ret
je
push
je
xchg
stos
and
pop
fcmovnb
shlb
nop
nop
leave
enter
mov
mov
cld
pushf
or
pushf
pusha
dec
imul
imul
lock
xor
addps
adc
push
jl
xchg
or
fs
add
cltd
xchg
lret
and
rcl
push
iret
adc
jge
jl
imul
jge
pop
xlat
cmp
jno
pshufw
mov
lahf
adc
lock
adc
cmpsl
xor
sub
les
inc
mov
hlt
fcoml
dec
inc
fidivrl
out
jge
pop
or
mov
inc
adc
cld
mov
and
mov
xchg
out
test
adc
test
xchg
cwtl
adc
and
jo
dec
cmpsb
in
push
int3
int3
leave
enter
les
les
cmp
mov
cmp
mov
in
mov
sbb
push
cmp
xchg
lods
sub
dec
inc
push
sbb
add
shlb
xchg
and
mov
mov
cmp
sbbb
pop
fs
ja
jo
jmp
push
sbb
adc
pop
mov
ljmp
fdivrs
hlt
sbb
inc
add
cmp
adc
mov
dec
jle
push
inc
imul
aas
hlt
push
addb
push
xor
sbb
lds
push
test
add
add
jnp
jb
inc
xorb
or
lea
aam
dec
lahf
roll
or
js
push
add
mov
pop
sbb
les
and
and
shr
xchg
rcrb
push
movsb
xchg
aaa
adc
dec
inc
sbb
jge
orl
mov
jnp
test
sub
lea
mov
rcl
jo
rolb
sbb
test
imul
mov
outsb
pop
jl
mov
add
or
pop
adc
ja
and
aam
add
fcoml
or
cmpl
adc
lret
push
jle
pop
jne
xor
in
inc
mov
fcmovne
push
pop
sbb
push
jmp
loopne
and
or
out
rclb
ja
mov
push
or
lcall
sbb
xor
xor
fisubs
mov
or
mov
sbb
sbb
mov
add
mov
push
scas
in
ret
out
sbb
jl
and
or
push
adc
btc
jp
sbb
mov
ss
adc
test
push
cwtl
lds
push
movsl
jno
or
rcrl
pop
lods
mov
xchg
pop
insl
shr
into
push
pushf
mov
cmc
shrb
adc
mov
inc
adc
sub
push
push
or
pcmpgtb
push
push
xchg
add
iret
sbb
iret
mov
or
pop
inc
shlb
jno
repnz
cmc
jno
test
jb
pop
push
sbb
jns
sub
sbb
cld
mov
add
cs
rolb
jo
push
sbb
xchg
pop
nopl
adc
xorl
cmpsb
sub
testl
mov
clc
add
add
rclb
cmp
or
test
pop
subb
lock
ret
loopne
sbb
pushl
xchg
dec
inc
and
and
pop
das
xchg
adc
mov
add
sub
ds
pop
ret
or
add
mov
andl
into
movsb
repnz
aaa
cmp
stos
xorb
or
clc
and
xor
cmp
jge
fidivrl
pop
hlt
je
push
push
pop
sbb
sbb
test
xchg
add
pusha
lock
jp
bound
adc
and
cld
lock
sbb
ja
mov
imulb
pop
mov
jmp
sub
push
xor
push
sahf
sub
mov
aas
andb
outsb
push
xchg
stos
jmp
and
push
and
dec
mov
pop
and
inc
jg
mov
and
jnp
add
jo
pushf
std
daa
ja
sahf
fstpt
and
xchg
add
cmpb
incb
imul
pop
or
push
clc
fwait
sub
cltd
test
les
jo
xchg
into
push
cmp
nop
aaa
jnp
scas
sub
pop
sub
cmpb
sub
adc
xchg
dec
sbb
or
sbb
xor
inc
lret
ret
inc
lret
ret
test
mov
nop
stos
lret
or
jne
mov
stos
add
adc
xchg
inc
pop
xor
clc
push
insb
push
xor
dec
rcrb
cwtl
ss
pusha
insb
adc
test
arpl
movsb
mov
loope
inc
and
push
loope
fsubs
jne
loope
fdivl
sbb
pop
inc
sub
mov
adc
push
xchg
adc
inc
roll
push
sti
lret
push
push
scas
xchg
add
stc
add
sub
add
rclb
adc
test
or
dec
push
push
mov
or
cmpsl
mov
fsubrs
cmc
or
rolb
cmpsl
mov
fsubl
sub
push
aam
push
pusha
popf
cmp
or
and
add
sbb
sub
xchg
xchg
stos
dec
and
cmp
push
enter
cltd
jge
push
cmc
lock
inc
sbb
xchg
in
lahf
xor
jno
xor
xor
mov
testb
jb
cmp
cltd
mov
std
shl
sbb
outsl
inc
xor
pop
out
jmp
cmpsl
xchg
loopne
cmp
push
fs
mov
mulb
add
pop
dec
xchg
stc
pop
xacquire
xor
push
andl
jecxz
or
ret
push
sbb
mov
insb
sub
iret
sub
sub
push
in
sub
push
mov
jns
and
sub
mov
pop
xor
fwait
xor
ret
sahf
jmp
pop
ret
clc
lret
jns
pop
shll
pop
or
int3
inc
cmp
add
cwtl
dec
mov
adc
sbb
jecxz
lods
adc
inc
fistpl
add
pop
jmp
push
add
adc
out
mov
je
add
or
cmpsb
and
movsb
xor
mov
jo
rorl
adcb
mov
pop
aas
mov
jge
jge
adc
je
push
push
fcomp
push
fwait
add
jno
cmp
adc
ret
mov
sub
sub
and
push
sub
mov
sub
mov
adc
mov
out
pop
aas
mov
sbb
xor
or
push
stc
pusha
daa
push
lock
dec
enter
mov
dec
push
pushl
repz
dec
dec
in
adc
push
shrb
adc
xor
add
cmp
lock
scas
sbb
iret
push
les
push
inc
cwtl
pop
popf
push
mov
cs
fiaddl
dec
mov
jnp
xchg
xchg
lock
jns
clc
sbb
jne
mov
and
jns
or
test
mov
jno
jo
test
test
jl
xor
cmpl
setne
pushf
pusha
pop
rorb
jne
shrb
jge
sub
sbb
jb
push
mov
pop
out
jne
or
je
sub
mov
dec
push
pop
subb
mov
xchg
es
push
sbbb
inc
faddl
dec
dec
sbbl
pop
test
or
jge
lods
push
jne
or
xchg
cmp
outsl
cmpsl
push
inc
sti
test
add
lock
std
mov
rcl
pop
not
add
repz
add
mov
roll
push
cld
sub
loop
xchg
push
out
inc
out
push
je
push
inc
aad
add
fabs
xor
mov
mov
imul
and
pusha
scas
mov
mov
sahf
iret
inc
cmp
in
imul
xor
mov
dec
aaa
insl
inc
push
clc
jg
mov
or
les
or
stos
sub
icebp
ds
inc
int3
add
mov
or
fsubl
mov
cmp
loopne
or
cmp
insl
adc
mov
push
sub
test
xor
or
cmovnp
cmp
negl
and
jge
imul
adc
xor
add
or
mov
daa
sub
int3
mov
lcall
or
push
mov
dec
mov
mov
add
aas
inc
ret
sub
test
or
mov
mov
xor
inc
mov
sarl
add
jae
out
push
pop
dec
dec
push
mov
jl
jae
ret
cmp
jle
inc
mov
cmp
fisubl
test
pusha
ret
add
jp
mov
inc
mov
add
ja
movsl
and
cmp
mov
mov
add
or
mov
mov
jae
add
or
mov
mov
add
adc
fcompl
dec
scas
leave
sti
add
push
mov
filds
jge
push
and
lea
push
into
in
mov
lcall
daa
iret
gs
push
jne
loopne
sbbl
and
push
popa
or
inc
icebp
test
sub
cmpsb
and
lods
in
setns
mov
fcoms
shlb
cmpsb
cltd
fisttpl
dec
outsb
loopne
mov
out
int3
mov
add
push
iret
dec
test
out
push
add
inc
cmp
enter
pop
es
cmp
inc
sub
es
or
out
das
jnp
call
sub
or
shll
icebp
jmp
fadds
test
incl
push
lods
aam
lods
pop
data16
subb
mov
clc
jg
fwait
push
test
pmulhuw
sbb
and
push
push
mov
adc
or
iret
fcoml
in
pop
mov
outsl
cmp
loopne
mov
ja
cltd
test
or
mov
lock
xor
push
lods
sbb
mov
scas
in
push
movsl
imul
arpl
scas
fidivrl
xchg
add
movsl
add
sbb
adc
clc
sbb
cmp
stc
loope
aaa
insl
mov
push
add
in
push
js
call
and
sbb
addl
iret
or
sbb
add
dec
lret
repnz
in
iret
push
adc
pop
call
push
inc
std
or
or
or
mov
test
subb
sub
setbe
insb
rorb
cmp
pop
mov
and
repnz
insb
adc
add
mov
in
adc
mov
add
jbe
aaa
adc
xor
mov
adc
mov
shlb
loopne
cmp
scas
dec
mov
mov
mov
int3
or
out
rcrb
sbb
movsb
fcoms
lock
dec
lret
fadd
jo
in
mov
xchg
push
jo
mov
sub
pushl
call
or
out
ret
shr
movzbl
push
fisttps
adc
push
ret
push
push
inc
push
loopne
inc
mov
xchg
xchg
push
pop
inc
mov
mov
sarl
pop
add
jl
cmp
xchg
add
cmp
jbe
es
gs
xchg
add
mov
lahf
xlat
cmp
mov
ljmp
add
mov
pop
outsl
xor
mov
jmp
sar
xor
sarl
mov
inc
push
push
mov
cmp
jg
mov
dec
aaa
adc
jge
leave
lea
negb
pop
pushf
in
cmp
cs
enter
mov
or
test
push
jecxz
xchg
aaa
in
sub
mov
fnstcw
sbb
jmp
lahf
test
dec
ret
test
push
arpl
std
jmp
mov
push
pop
pop
cmp
inc
jnp
xor
and
or
call
add
or
jg
mov
aam
dec
in
mov
lea
lea
sti
cmp
jae
mov
incl
xor
xlat
and
scas
pop
add
jne
and
jmp
mov
mov
lea
pop
jb
cmpl
mov
cld
push
ret
in
add
imul
add
out
jo
cs
loop
cmp
jg
out
cs
repnz
mov
dec
inc
push
and
sbb
cmpsl
js
mov
add
ret
lcall
je
nop
add
mov
sub
xor
fidivrl
fwait
dec
add
lea
and
push
push
sti
mov
dec
push
push
adc
dec
cmp
and
xchg
add
lock
mov
inc
xchg
or
mov
cmp
orl
push
loope
mov
ljmp
or
xor
mov
cld
je
test
js
push
hlt
jg
in
jno
outsl
pop
dec
xor
push
dec
jmp
sbb
push
mov
inc
or
add
inc
mov
push
push
push
pop
imul
mov
add
or
or
mov
mov
pop
repz
push
or
adcb
ds
push
cmp
inc
mov
or
ret
shll
pop
daa
pop
push
jbe
rorb
add
mov
mov
fldt
xchg
mov
ret
cmp
xlat
sub
xchg
mov
hlt
add
mov
mov
pop
cmpsb
lds
mov
test
jo
inc
scas
jl
cld
add
mov
roll
fstl
rep
push
mov
jb
imul
or
pop
sbb
adc
or
add
xlat
std
add
or
add
scas
add
or
mov
mov
sbb
repnz
jnp
movsl
repz
mov
or
aas
lcall
je
push
sub
and
adc
repnz
mov
mov
sub
add
shl
sti
or
mov
xchg
sub
jmp
icebp
je
sbb
clc
jne
cmp
je
pushl
xor
inc
cmp
or
and
xchg
add
sbb
mov
add
push
ja
sbb
leave
push
and
mov
stos
out
xor
rorb
push
or
setne
rcrb
stos
sahf
js
ret
inc
inc
jne
outsb
pop
sbb
call
adc
pop
js,pt
test
xchg
jo
jg
mov
jbe
and
inc
pop
mov
rcrb
std
push
lock
idiv
ret
scas
xchg
adc
jge
popa
stos
je,pn
sbb
cmp
jne
cmp
mov
add
ficomps
xchg
rolb
stos
imul
lock
cmp
clc
call
xor
add
push
add
pxor
je
push
lods
bound
pop
add
mov
xor
scas
and
enter
mov
inc
cmp
test
or
js
mov
hlt
jecxz
hlt
sub
cmpb
mov
je
pop
aas
clc
add
sbb
xchg
sub
mov
xchg
xchg
insb
cld
cmp
lea
jbe
mov
mov
add
test
push
adc
push
inc
dec
mov
mov
int3
lea
ss
aas
mov
nop
mov
mov
add
mov
lds
cmp
sbb
push
fwait
push
mov
in
fucomip
cmp
ss
es
ds
mov
sub
pushf
nop
sub
xlat
jecxz
and
add
test
mov
clc
and
lea
xor
adc
lock
push
aad
cmp
int3
sbb
mov
in
sub
lods
add
pop
or
outsb
loope
lret
lods
mov
inc
or
cmp
or
xor
in
incl
or
push
pop
shl
sub
fildl
mov
xor
jmp
pop
imul
nop
adc
cmp
cwtl
xlat
jmp
push
sbb
mov
mov
inc
xchg
jmp
call
cmpsb
arpl
test
add
xchg
cmpsl
repnz
sbb
loop
test
aad
nop
push
xor
fldcw
mov
add
jo
push
jns
xor
inc
cs
mov
imul
shr
pushf
mov
mov
pop
test
inc
mov
push
mov
cmp
bound
in
cmp
xlat
mov
sbb
sbb
jmp
nop
cmp
fs
dec
add
or
aas
ljmp
add
adcl
inc
fdivl
imul
inc
pop
lock
pop
jp
and
pop
das
cmpsb
and
sub
push
ljmp
pop
and
rcrb
mov
mov
inc
sbb
cmpsl
pop
fldl
push
out
mov
cltd
pusha
add
inc
into
lcall
stos
dec
jns
mov
sahf
out
adc
imul
jmp
loop
push
int3
inc
add
push
pop
xchg
jns
dec
mov
loope
mov
sahf
pop
lret
sub
pusha
lock
mov
pop
nop
lock
xlat
gs
mov
adc
pusha
leave
and
clc
sub
inc
adc
mov
dec
popw
jb
lret
adc
sbb
push
xor
mov
mov
add
or
and
lds
mov
std
mov
xor
adc
pop
or
sbb
outsb
xlat
jo
mov
loop
inc
and
imul
xor
ret
and
cmp
jns
notl
push
adc
or
testl
or
gs
push
enter
sbb
or
push
and
pop
movw
sbb
sbb
sbb
rclb
jge
shl
test
loop
push
lcall
xchg
mov
icebp
jle
mov
and
enter
notb
cmp
adc
sti
fistl
or
je
cmp
popf
or
scas
sti
cmpl
push
cmp
mov
ret
shrl
pop
negl
sbb
add
add
cmp
add
push
pop
dec
adc
push
into
pop
mov
jge
adc
dec
fadds
insl
push
push
push
sahf
jne
data16
mov
sahf
clc
je
pusha
jmp
fisubrs
mov
push
pop
dec
je
mov
je
sub
sbb
push
and
dec
inc
dec
sub
jmp
mov
mov
loop
fldl
sahf
leave
jmp
mov
inc
mov
jecxz
jne
xchg
aaa
in
popf
pusha
xor
add
push
mov
xor
aas
add
and
push
pop
inc
inc
pop
pusha
xchg
add
mov
fldt
fcomps
xchg
or
pop
push
aas
bswap
out
mov
mov
sbb
mov
push
add
add
ret
jg
cld
mov
insb
push
xor
push
push
daa
movsb
in
sbb
jo
js
insb
jae
and
mov
popa
jg
dec
int3
sub
mov
rorb
jmp
cmp
je
cmp
movsl
imul
inc
sbb
leave
adc
fmul
pop
imul
cmpsb
sbb
fstpl
in
fstpt
jmp
sbb
fldcw
sbb
jmp
and
mov
xchg
sbb
or
pop
bound
lea
lods
rorl
pop
sbb
mov
es
std
mov
mov
mov
add
pushw
and
icebp
inc
sbb
jle
repnz
push
insb
fstl
lea
or
adc
sub
mov
or
movb
es
mov
mov
push
or
xchg
xchg
pop
ds
jge
pop
aas
ja
sub
inc
push
mov
mov
popa
cld
push
cld
pop
push
lea
push
push
push
push
add
push
lea
imul
dec
cmp
scas
jecxz
cmpsb
add
dec
mov
inc
test
cltd
fldcw
adc
ljmp
xacquire
push
pop
or
fists
adc
inc
ffreep
xchg
lods
jle
sbb
and
scas
push
je
xchg
scas
sbb
push
imul
aam
push
push
dec
xor
movl
in
xchg
ret
xchg
and
sub
adc
shlb
jbe
dec
adc
dec
adc
test
pushf
jmp
mov
jo
cld
jne
movl
dec
je
jno
jle
ss
jno
pusha
push
clc
and
pop
sahf
pusha
and
mov
repz
xchg
insb
pop
inc
sub
insl
pop
inc
insl
add
aas
repz
add
add
inc
dec
or
pop
mov
dec
das
mov
subl
imul
sbb
xchg
jne
stos
xchg
call
and
in
inc
adc
or
ret
lcall
sub
ja
cmp
xchg
fsubl
aas
arpl
push
cmp
push
mov
pop
test
push
push
push
xor
push
cmp
mov
loop
jl
sbb
push
sahf
pop
rolb
flds
mov
inc
jl
sbb
mov
add
jecxz
jbe
ret
xchg
inc
fadds
mov
mov
les
push
xchg
lds
sub
pop
mov
aam
inc
sub
fsubrl
in
lahf
push
or
movsb
ss
int3
push
jae
xor
stc
add
or
push
or
add
jle
cli
fucomi
imul
inc
or
ret
outsb
dec
aam
xchg
mov
adc
incl
mov
push
adc
mov
sub
xor
pop
fadd
add
xor
add
iret
je
lea
push
loopne
add
mov
or
mov
mov
out
or
pusha
cmc
pop
pushl
call
push
or
push
adc
adc
adc
mov
sub
jl
rep
or
sub
les
in
mov
ficomps
dec
lock
div
push
add
je
dec
push
pop
js
mov
int3
je
movsb
sub
sub
push
push
pusha
cmp
in
jle
shlb
in
cmp
push
mov
imul
adc
dec
cmp
jl
mov
dec
stos
subb
or
rcr
mov
pop
adc
lea
rep
push
in
push
or
cmpb
mov
sbb
jbe
pop
neg
sbb
dec
sbb
fldenv
shlb
xchg
arpl
xor
lock
movsb
in
dec
shll
dec
cmp
mov
mov
adcb
push
idivb
push
sub
jbe
xor
ret
je
mov
into
neg
notl
loope
push
push
lds
sahf
sub
jle
jecxz
adc
pushf
in
sarb
push
aaa
test
push
dec
fstl
mov
pop
dec
mov
and
addl
ja
dec
repnz
rorl
push
xor
jne
jmp
incl
and
or
adc
xchg
pop
insl
jo
pop
pop
sbbb
jns
mov
add
shl
adc
xor
idivl
xchg
data16
loop
jle
cmpl
jne
incl
push
cmpsb
push
mov
adc
fadd
in
int3
xorl
adc
scas
mov
ss
rcr
dec
add
dec
mov
cwtl
inc
cmc
add
pop
stos
inc
cmp
add
lahf
push
in
cmp
je
cmp
mov
ja
rcrl
push
lcall
shl
or
and
sub
xchg
push
adc
ja
sub
mov
push
js,pn
cs
lods
imul
addr16
es
xor
mov
movb
jmp
cmp
jne
data16
mov
fldz
xor
ds
cwtl
sahf
jo
movb
pop
mov
xchg
fistpll
mov
int
xor
lea
lea
adc
cmp
sbb
or
xlat
jge
push
mov
loopne
fisttpll
fimull
popf
sub
mov
mov
pop
cmp
sbb
dec
sbb
es
push
mov
leave
push
pop
aam
sbb
push
mov
cmp
iret
push
mov
pop
sub
push
push
outsb
cltd
add
icebp
and
jl
ljmp
jl
shr
add
add
lret
cld
ja
je
dec
addl
into
gs
mov
sbb
push
rorb
push
lea
cli
ds
xor
mov
add
addb
xchg
mov
imul
lret
jl
xchg
andb
in
out
jbe
xor
inc
mov
and
inc
jge
rcrb
das
cmpb
pop
lcall
aaa
pop
inc
ficomps
bound
rorb
inc
sub
icebp
mov
fmull
dec
pushf
push
out
out
xor
sbb
es
push
and
push
aaa
movsl
mov
roll
sub
xchg
mov
cltd
cli
daa
dec
pop
push
inc
fiadds
mov
add
jae
imul
jno
insb
inc
negl
movsb
popa
in
and
mov
mov
mov
andl
jge
pushf
outsb
int
adc
mov
fmuls
or
call
add
repz
or
adc
ss
test
jmp
mov
pop
xor
and
shl
pop
test
adc
sub
cmpb
loop
jg
xor
aaa
push
pop
cmp
add
pop
push
es
push
ljmp
sub
sub
push
push
jnp
iret
decb
adc
xor
and
pusha
aad
mov
das
mov
inc
lock
add
sbb
push
cli
or
push
icebp
jo
pop
gs
lcall
pop
xor
sbb
jnp
push
call
jmp
fsts
popa
add
jb
movsl
mov
sub
push
jecxz
call
xor
mov
add
out
jo
cmp
add
mov
mov
jns
pop
or
bound
xor
shlb
xor
daa
xchg
or
add
xor
cltd
mov
das
inc
and
lea
ret
sar
out
orl
jo
movb
clc
out
cmpsl
cwtl
mov
jge
mov
out
ljmp
idiv
push
mov
push
push
mov
pop
jno
push
ret
xor
idiv
xor
mov
jno
sbb
test
jg
mov
push
movsl
je
test
or
cs
push
pop
mov
loope
pusha
scas
mov
inc
add
pushl
scas
and
or
aam
inc
rorb
add
mov
out
jmp
fstpl
push
pop
insb
xor
rcrb
pop
sti
sub
clc
je
out
movsb
mov
inc
lcall
test
test
into
jp
xor
pop
sarb
test
dec
daa
pusha
js
xlat
pop
loopne
out
sbb
dec
fs
or
xchg
daa
cld
xchg
scas
arpl
mov
test
mov
lahf
xor
mov
movb
sbb
dec
lea
addr16
pop
inc
or
mov
je
fists
mov
dec
nop
or
jmp
jge
jmp
mov
hlt
fildl
jg
std
fisttpll
jns
faddl
adc
sub
xor
out
addl
fdivrp
mov
sub
mov
lea
test
mov
inc
lock
movsl
les
cmp
add
repz
push
insl
sbb
or
clc
fidivl
jmp
push
jo
sbb
xchg
cli
pop
ja
jge
push
pop
mov
xor
jle
pop
movb
push
mov
mov
orb
and
stos
shrl
add
mov
aam
push
das
jne
inc
aam
clc
lea
dec
xlat
and
cmpsl
je
pop
andl
gs
jbe
fnstenv
je
or
inc
pop
and
xchg
test
jmp
out
xchg
stos
cmpsl
cmp
mov
pop
push
pop
pop
into
pop
leave
movsl
daa
mov
adc
ja
xor
sub
je
mov
add
add
in
sbb
inc
add
sub
repnz
mov
adc
int
repnz
ret
or
iret
addr16
dec
jns
and
cmp
jle
arpl
sti
or
sbb
push
movsb
sti
fldpi
adc
push
fldt
outsb
pushf
pop
ljmp
rolb
dec
adcl
movsl
push
out
push
mov
lea
push
mov
push
add
popa
divl
mov
add
lea
data16
adc
sti
das
add
mov
lea
push
push
push
xor
inc
cmp
iret
js
cmpsl
adc
inc
sub
rcr
aad
mov
sub
roll
add
sbb
jae
add
xor
hlt
imul
call
lods
mov
scas
dec
outsb
mov
pop
scas
sbb
xchg
add
adc
and
lret
pop
cli
jo
cli
cltd
lods
pop
push
dec
repnz
imul
cmovle
xor
and
and
movnti
movsl
pop
test
mov
addr16
inc
cli
and
dec
adc
dec
fisubl
cmp
aaa
and
mov
pop
mov
and
pusha
bound
sbb
sbb
push
inc
clc
push
mov
fs
incb
push
cmp
inc
sub
inc
sub
pop
xor
mov
clc
setb
test
mov
mov
sub
cmp
add
xor
sub
andl
push
lea
push
mov
push
cld
outsb
loop
mov
je
push
loope
jne
cmp
lcall
insl
push
add
or
mov
cmp
popf
push
jl
inc
dec
mov
incb
adc
dec
fwait
movsl
mov
call
push
sub
jecxz
xlat
mov
add
fstpt
inc
cmp
adcb
das
push
mov
jp
pop
mov
dec
add
cmp
lods
notb
mov
or
leave
mov
jp
fdivrl
jecxz
jno
cmp
addb
lock
cmp
add
icebp
xchg
adc
cld
xchg
das
mov
cmp
ljmp
pop
shrl
test
jne
jo
addb
out
into
aam
pop
bnd
fs
push
or
mov
pop
jmp
jp
mov
cmp
in
pop
jmp
push
adc
call
mov
jnp
repnz
clc
jne
add
pop
pop
in
sub
aas
sbb
push
movl
jno
mov
cs
fisubs
fidivs
ja
nop
adc
mov
pop
sbb
add
xor
and
lock
into
xchg
insl
or
push
jb
or
inc
out
ss
int3
mov
dec
lods
aam
aam
inc
add
add
xchg
jne
xor
cwtl
enter
pop
adc
enter
xor
push
push
enter
addl
push
clc
pop
add
call
lcall
inc
sarl
sub
arpl
pop
sub
jo
insb
fmull
aas
or
rcr
or
outsb
sbb
push
imul
les
les
sbb
in
pusha
sarb
pop
push
int3
sbb
scas
test
add
call
outsb
icebp
jle
gs
mov
adcb
mov
xor
data16
and
push
cmp
cwtl
pop
bound
pusha
add
xor
rclb
pop
jecxz
push
inc
mov
xchg
or
pop
lock
insl
scas
sar
outsl
pop
cmp
hlt
imul
pop
or
jp
lcall
insl
sub
int
or
sbb
or
adc
cltd
xchg
pop
cmp
adc
xchg
push
pop
lret
xor
imul
jp
adc
mov
daa
jp
jmp
and
out
pop
or
test
leave
adc
jne
loope
inc
out
mov
sub
xchg
dec
sbb
xchg
push
pushl
roll
mov
lret
jmp
dec
add
arpl
dec
cmp
mov
sbb
adc
xor
ret
je
icebp
dec
jae
sbbb
cmp
stc
mov
push
dec
mov
jmp
dec
mov
sub
and
mov
lcall
dec
add
dec
inc
pusha
inc
xor
movsl
jmp
nop
shlb
mov
or
fmulp
js
imul
cmp
sbbb
mov
push
pusha
jle
in
and
inc
mov
mov
aad
cld
mov
std
push
or
push
adc
xchg
lcall
and
out
mov
mov
mov
sbb
xor
jne
fsubr
pop
sbb
sbb
dec
dec
mov
cmp
in
mov
loope
mov
sub
inc
sete
mov
and
inc
push
add
push
and
push
xchg
stos
push
or
fmuls
jnp
cltd
or
cs
testb
les
sbb
enter
add
rclb
subb
mov
mov
ret
push
repz
add
mov
loopne,pn
sub
clc
push
lea
cmp
mov
add
cwtl
adcb
and
xor
push
mov
xor
adc
dec
cmp
add
and
pop
pop
mov
jno
mov
and
clc
fcoms
or
inc
enter
popa
popf
xchg
add
xor
fsts
ss
lret
shrl
outsl
mov
into
mov
daa
push
mov
or
jo
ret
mov
jg
add
sub
ss
mov
and
or
mov
outsl
mov
jne
and
sbb
jno
pop
repnz
pop
adc
dec
xor
mov
xchg
in
adc
cwtl
movsb
fwait
sbb
fldcw
lock
in
repz
dec
mov
xorl
dec
sbbl
in
and
imul
pop
or
arpl
movsb
shlb
in
ret
cmp
jle
sti
cmpsb
cmp
je
dec
xchg
mov
idivl
adc
mov
scas
or
mov
jno
mov
or
inc
fs
outsb
add
loopne
mov
jl
xchg
lock
dec
fnstenv
sarb
or
jg
outsl
movsl
jbe
movzwl
jp
push
push
cmp
push
jecxz
daa
aam
jb
test
adc
cmp
push
push
je
inc
fiaddl
adcl
mov
addr16
pop
pop
test
push
sbb
loope
jne
sbb
mov
jno
iret
adc
movb
mov
std
bound
out
push
rorb
xor
inc
iret
sbb
adc
push
into
lods
xor
in
enter
insl
push
or
and
or
loop
jae
or
into
push
repz
mov
and
mov
aam
inc
jp
mull
mov
add
push
add
notl
add
rolb
mov
inc
arpl
cld
mov
push
loopne
push
hlt
and
dec
adc
fildl
mov
push
mov
push
adc
loopne
icebp
fcom
ljmp
cmpsb
add
mov
sti
add
repz
sub
loope
jnp
clc
addr16
movl
lret
out
loope
inc
stc
xchg
dec
sub
add
icebp
inc
push
sub
and
icebp
mov
xor
xor
add
add
push
hlt
sub
repnz
ljmp
dec
mov
stc
add
and
and
adcl
push
inc
idivl
mov
arpl
xchg
je
nop
sbb
xchg
mov
shll
mov
mov
mov
inc
lea
shrb
jae
pop
or
mov
outsl
cmp
loopne
add
lock
test
xlat
popa
test
jmp
jb
xor
icebp
and
movsb
pop
inc
sbb
sbb
femms
popf
push
insl
stos
call
mov
inc
pop
or
js
sahf
mov
lcall
dec
sbb
inc
fnstenv
dec
jecxz
shr
cmp
int
sub
inc
call
es
mov
shlb
xor
or
mov
mov
rorb
sub
je
cs
arpl
cmp
inc
pop
in
lock
add
adc
push
imul
jg
dec
add
push
jecxz
inc
dec
cmc
cmp
pop
pop
xchg
jnp
or
test
dec
push
ja
jo
sahf
inc
inc
add
fistpl
mov
mov
xor
das
adc
rcll
inc
adc
mov
aas
sbb
xchg
negb
xor
fstps
push
mov
pushf
sub
adc
js
sbb
adc
inc
or
xor
test
and
dec
sbb
pop
sub
out
mov
add
stos
mov
lods
rclb
mov
mov
cli
push
mov
sti
std
push
mov
fwait
or
rcl
pop
loopne
pop
xor
push
jnp
js
std
addr16
pop
sub
popf
jl
inc
lock
loopne
xchg
mov
ja
daa
popf
xchg
repnz
mov
out
mov
lea
add
jo
pusha
xchg
aaa
repz
lea
dec
cmp
dec
mov
xor
roll
cmpb
or
repnz
add
dec
nop
add
js
enter
mov
lea
inc
xchg
sub
movsl
or
pop
fwait
mov
mov
add
add
loopne
push
in
je
push
cmpl
sarb
dec
test
mov
sahf
or
sub
mov
sub
mov
leave
and
pop
shlb
call
neg
mov
sbb
mov
xor
jg
adc
cmp
inc
jnp
shrb
mov
mov
ja
test
or
addb
push
imul
stos
aaa
stos
push
or
clts
jns
push
sarl
push
lahf
fcomps
sbb
xor
inc
pop
mov
push
orl
pop
lret
xor
movsl
jne
inc
xor
lea
outsb
out
subl
fnsave
xchg
sbb
je
roll
push
in
and
cld
jmp
pop
xchg
inc
fists
jne
push
jns
adc
or
dec
or
dec
and
test
xchg
pop
jb
pop
push
xchg
ret
imul
popf
int
out
inc
sub
push
mov
pop
and
adc
adc
add
mov
push
jb
mov
mov
or
jle
xor
add
test
mov
add
scas
pop
pushf
movzwl
sbb
add
xchg
pop
pop
mov
nop
je
fbld
fnsave
adc
das
xor
lret
adc
ljmp
jl
xor
or
stos
leave
jbe
rorl
mov
int3
jge
push
mov
lahf
ss
testb
adc
incl
mov
test
lahf
out
test
fs
data16
sub
push
arpl
jae
or
mov
cmp
xor
xor
subb
fstl
cmp
mov
fucomip
add
push
imul
psraw
lea
sub
notb
jae
cmp
adc
and
loopne
mov
push
out
mov
lea
push
mov
or
in
jp
or
cmp
add
out
insb
out
pop
mov
mov
xor
cmc
mov
inc
jl
mov
sub
cli
xor
sub
xchg
mov
shll
ret
mov
mov
mov
mov
mov
test
or
mov
xor
xchg
clc
jecxz
add
mov
add
inc
out
clc
adc
dec
inc
aam
or
dec
inc
jmp
mov
jmp
ss
jo
push
push
repnz
dec
sub
les
add
add
pushl
aas
jnp
sub
push
or
enter
push
mov
mov
xchg
or
clc
dec
xchg
pop
add
add
mov
scas
in
jl
aaa
loop
andl
sahf
fstps
inc
or
mov
mov
rcrb
mov
arpl
fisttps
push
adc
push
gs
push
rcr
add
jns
ss
add
xchg
jno
ret
adc
fwait
adc
aaa
les
imul
pushf
lods
xor
arpl
adc
or
pop
sbb
or
dec
movsb
pop
vmread
mov
ja
adc
mov
test
jae
mov
push
pop
ljmp
mov
or
mov
xchg
pop
mov
push
cmp
fistpl
add
push
or
mov
xchg
or
pop
loop
sbb
dec
and
pop
ret
or
out
stos
add
rcl
mov
and
int3
mov
subb
mov
push
inc
ret
dec
in
pop
mov
je
into
popa
pop
inc
mov
pop
jmp
jne
pop
loope
add
pop
das
pop
jge
xchg
je
add
daa
add
mov
rol
push
mov
dec
icebp
jns
pop
popa
testl
je
aam
cmp
dec
loopne
stos
insl
je
push
lods
and
mov
shll
push
mov
mov
pop
push
hlt
sub
sbbl
addb
add
popa
pusha
and
rcll
test
sbb
jnp
inc
xchg
mov
sbb
sbb
stc
shlb
outsl
xchg
xchg
mov
or
rcrb
scas
das
xchg
jno
cmpl
inc
mov
jne
push
pop
cmp
les
or
andb
ss
and
imul
mov
movsb
jns
sahf
movsl
adc
mov
jns
push
adc
aam
insb
test
stc
and
sbb
lea
and
pop
roll
and
das
sbb
or
mov
push
sub
shrl
xchg
mov
es
in
add
pop
sub
sub
push
repz
cltd
fsubs
sub
push
popa
movsl
or
xchg
xor
mov
mov
cmc
or
lock
push
add
test
push
sub
cs
test
jle
daa
das
xor
xor
adc
jge
dec
loopne
out
sbb
sub
mov
dec
nop
pop
into
in
aad
sahf
jbe
into
int3
xor
int
sbb
dec
or
fsubrl
add
xor
and
sub
nop
pop
insl
fdivr
rolb
mov
int
int3
sub
insl
sub
aam
fcomps
call
movsb
out
ja
push
mov
loopne
and
mov
pop
push
imul
mov
add
or
dec
dec
jb
loope
pop
adc
jl
xchg
push
rolb
sub
push
clc
or
add
mov
add
into
leave
sub
xchg
enter
mov
andl
pop
mov
shrb
not
mov
push
addb
data16
loop
bound
pop
and
fadds
cmp
in
push
xchg
cmp
sub
daa
loopne
and
or
or
xor
shl
or
xor
dec
jae
pop
leave
mov
sub
rep
mov
movsb
xchg
pop
or
sub
mov
mov
fdiv
add
mov
cmp
push
roll
mov
andb
jnp
or
arpl
cli
and
adc
in
xchg
cmpl
push
mov
inc
push
push
adc
in
mov
push
adc
int3
test
sub
fildll
ror
divl
push
inc
fld1
mov
nop
mov
lods
inc
or
and
mov
jno
mov
or
mov
sub
add
or
push
stc
sub
push
xchg
and
add
imul
mov
or
pop
dec
sub
mov
popf
orl
mov
push
cmpsb
call
mov
pop
cmp
jg
cmp
aad
push
sub
mov
popf
repz
and
mov
orl
ficomps
addb
adc
pop
cmpsl
adc
hlt
sub
push
sbb
or
out
jno
or
mov
and
jo
mov
cmp
cmc
loopne
js
adc
or
lea
js
cmp
xor
add
push
push
enter
mov
jae
testb
pop
lret
dec
loope
rorb
sub
or
incl
adc
pushl
push
mov
sbb
push
ficomps
lods
rcr
es
pop
stos
js
sbb
mov
ret
mov
add
push
lds
mov
gs
add
sub
pop
mov
pop
negl
cmp
mov
add
dec
movzwl
pop
jp
or
push
aam
or
push
inc
inc
or
or
rorb
push
or
orb
jb
fnstsw
add
jmp
lods
dec
les
add
push
sti
mov
int3
mov
xorl
adc
test
mov
pop
xchg
jns
inc
cmp
push
pop
cmp
mov
or
pop
push
push
jmp
add
test
sbb
ret
sub
nop
sbb
pop
jb
jmp
test
and
add
push
dec
in
lock
mov
push
sahf
or
and
jmp
ret
fsubrs
out
je
cmpb
push
aad
xchg
ds
stos
push
cmpsl
xorps
into
mov
xchg
loope
test
pop
aam
je
je
pop
das
inc
pop
hlt
push
pop
mov
lock
push
outsb
sbb
mov
ja
js
and
push
bound
xchg
cvtps2pd
push
test
push
mov
lods
push
iret
push
dec
fcmovnu
push
mov
lret
cmp
jl
insb
mov
int3
xor
sarl
pop
pushl
sub
cmp
jle
mov
cmp
jne
je
cmpsl
sbb
sbb
push
add
outsl
pop
stos
ljmp
mov
sub
jle
cli
dec
cmp
je
sub
jo
mov
push
loope
fisubl
iret
jae
outsb
test
jo
fstps
sti
mov
jl
sbb
dec
jmp
xorw
stos
cmp
pop
adc
movsb
mov
cwtl
in
xor
out
fldcw
fisttps
js
bound
push
dec
or
in
out
adcl
adc
dec
out
mov
fstl
call
mov
insl
xor
clc
arpl
add
or
movsb
jle
adc
lret
lock
add
test
add
add
add
mov
or
mov
lahf
out
mov
jbe
sbb
pop
xchg
cmp
xor
aaa
mov
or
jne
xchg
xchg
lock
rol
pop
inc
lea
and
or
and
xor
rorb
ret
cmpsb
mov
or
ret
jb
cmp
add
cmp
dec
inc
jo
outsb
push
rol
cwtl
mov
adc
lea
addr16
outsl
arpl
ljmp
mov
sbb
fwait
jnp
push
imul
xchg
insl
and
shr
push
imul
adc
add
dec
or
or
in
inc
jb
mov
push
pop
adc
adc
push
cmp
pop
sbb
sahf
xor
or
lock
aas
or
jne
or
sub
push
js
mov
sub
imul
dec
pop
push
and
jae,pn
mov
pusha
pushf
aam
dec
movsl
add
pusha
loope
faddp
jmp
inc
fbld
loop
jmp
mov
ret
shll
negb
inc
cmp
jae
pop
mov
cmpl
cmp
sbb
jp
inc
ffree
cmpl
cmp
push
icebp
adc
ja
push
pop
aaa
cld
fcmovnb
cmp
mov
inc
shl
jmp
adc
mov
sub
ljmp
sub
add
pop
sub
fisttpl
rcl
ja
lret
xchg
into
shlb
lss
movb
xor
fucom
pop
hlt
arpl
arpl
mov
inc
add
mov
js
mov
orl
cmp
call
adc
lcall
pop
fsub
in
mov
dec
adc
adc
push
push
or
push
dec
hlt
or
sub
test
jmp
imul
push
mov
mov
jmp
or
loope
ret
movl
push
repnz
xchg
dec
jmp
push
ljmp
jne
ret
cmp
lea
dec
popl
push
mov
cmp
je
ret
leave
icebp
dec
mov
add
pop
push
shrb
je
cwtl
mov
dec
fistl
or
or
mov
outsb
push
fisubl
inc
push
jl
push
sub
test
shll
loopne
icebp
add
xchg
lcall
out
sarb
mov
and
es
sub
cmp
sub
mov
cmpsb
lock
pop
ret
adc
lcall
and
shlb
out
dec
inc
jp
popf
mul
out
mov
gs
shl
push
dec
mov
mov
sub
bound
push
add
mov
cmpb
pop
out
jne
test
push
push
push
je
fdivrl
add
mov
int
pop
icebp
cmc
gs
sub
adc
movsb
mov
fcoms
xor
fbstp
mov
and
loopne
mov
call
dec
push
mov
mov
out
mov
movsl
mov
sbb
test
cmp
sub
addl
sub
dec
jnp
sbb
pop
mov
adc
adc
dec
dec
xor
and
cmp
xchg
inc
popa
call
cmp
sbb
inc
pusha
jns
daa
lock
add
movl
cwtl
mov
jae
fstpt
xchg
push
or
test
pop
shrb
lds
xor
push
mov
mov
es
fwait
mov
mov
sub
pop
sbb
shlb
jmp
push
sbb
or
jae
lock
push
movsl
sbb
je
inc
popf
add
mov
cmpsl
push
aam
dec
js
jl
add
repz
xor
inc
int
cwtl
push
inc
add
outsl
les
xlat
rcrb
push
add
push
decl
pop
jg
pop
jnp
add
mov
push
or
in
inc
sbb
add
inc
push
je
in
arpl
jo
push
pop
popf
in
dec
lahf
pusha
cmp
sub
push
xchg
rcll
mov
or
int3
inc
push
dec
xchg
ffree
inc
or
bnd
xor
mov
or
bound
popl
mov
inc
mov
mov
test
sub
push
push
jg
add
je
orl
decb
xchg
push
inc
movsl
insl
cmp
pop
or
push
mov
mov
lea
mov
hlt
xchg
mov
jg
or
mov
dec
cmpb
fwait
test
sbbl
es
mov
add
repnz
loopne
or
push
push
inc
lahf
cmp
push
dec
loop
shll
add
pop
imul
int
mov
mov
fldl
push
and
jmp
aam
cld
lea
add
add
push
mov
popf
test
scas
and
sub
sbb
movsb
and
xchg
sub
test
add
js
into
and
adc
lds
push
push
mov
sbb
jb
push
pusha
jne
pop
ret
pop
repz
imul
cmovge
add
bnd
mov
add
xorl
pop
xchg
arpl
or
push
xor
adc
repz
adc
and
ret
push
push
out
inc
xchg
pop
popa
pop
insb
xor
and
ds
mov
cwtl
fcoml
shrl
leave
lea
lret
scas
mov
add
push
hlt
enter
sub
cltd
fisttpll
mov
cld
push
dec
xor
js
dec
rorl
sub
movsl
add
cmp
daa
in
outsl
sbb
jae
mov
xor
xchg
aam
movsb
rcr
or
jno
mov
mov
jmp
aam
xor
jge
inc
lcall
ds
mov
xchg
out
stos
mov
lods
add
test
push
cs
imul
or
push
nop
loopne
insl
ss
mov
mov
and
mov
cmpl
and
inc
cmpsb
ret
sbbb
and
dec
inc
sub
pop
add
sbb
and
mov
jo
pop
arpl
shl
xor
leave
mov
adc
dec
iret
cmovle
push
push
pop
xchg
sub
ds
mov
push
sub
pushf
mov
test
sbb
jb
mov
int
sbb
xchg
fs
inc
lcall
or
pop
jg
sti
faddp
shl
adc
push
cmpb
enter
add
or
pop
or
pop
lret
ficompl
hlt
adc
fidivs
cmpsb
arpl
and
movsb
sub
adc
pusha
jb
sbb
enter
push
mov
std
lods
add
test
and
iret
xor
dec
adc
push
and
lret
jbe
int
inc
jg
stos
xchg
jbe
jmp
mov
push
testl
pop
and
push
pushl
mov
ficoms
jle
repz
or
adc
add
sub
pop
loope
and
aas
adc
push
mov
add
fadd
movsl
lcall
clc
mov
in
es
jp
dec
sub
xchg
add
xor
test
push
ret
rorb
arpl
xor
ja
push
dec
cmp
xlat
inc
cltd
jp
pop
in
in
cmp
add
pop
into
sbbl
lea
sbb
push
sub
xchg
sbb
movsb
adc
dec
sar
js
loop
jmp
mov
insb
outsl
insb
cmpsl
adc
add
add
sbb
arpl
jnp
or
ss
testl
or
push
es
fldl
mov
or
test
and
fs
icebp
lea
sbb
addr16
adc
jle
loope
outsl
test
pusha
jo
inc
insb
hlt
clc
add
jge
mov
mov
or
xchg
add
rcl
cmp
inc
pop
pop
inc
jo
aam
popa
inc
inc
push
aas
idivb
loop
sub
or
and
mov
mov
mov
mov
sbb
outsl
push
push
mov
loope
in
or
push
or
and
adc
sbb
xlat
push
test
push
movsl
addl
lret
adc
insb
adc
in
jae
mov
faddl
or
aad
int3
ret
jle
adc
push
xchg
xor
fimull
sub
lea
shlb
pop
jg
int3
lea
cmp
movsl
sbb
aam
lret
loope
jae
jnp
add
push
adc
jo
aaa
negb
mov
out
inc
scas
in
repnz
pcmpeqw
enter
mov
cmp
ss
push
bound
xchg
add
outsl
cwtl
mov
iret
fs
daa
int
adc
movsb
pop
fimull
aam
popa
mov
mov
adc
mulb
dec
rorl
repz
xlat
push
mov
sti
and
jnp
mov
sti
add
ljmp
jge
insl
adc
fldl
add
or
xor
lret
pop
mov
repz
dec
ror
and
and
fs
rorl
iret
and
jnp
stc
adc
adc
push
mov
in
inc
xchg
dec
dec
fdivrl
addr16
aas
and
and
dec
push
pop
mov
xlat
push
adc
test
outsl
stos
push
dec
push
aad
or
mov
mov
xor
clc
cs
mov
dec
arpl
es
and
push
test
mov
jecxz
mov
xor
sbb
mov
aas
inc
scas
in
cmpb
int3
das
jmp
lock
scas
pushf
push
or
outsl
fimull
xchg
jnp
orl
push
push
test
and
outsb
xchg
dec
js
adc
pushw
test
cmpsb
inc
pop
cmp
xchg
add
dec
mov
cmp
mov
or
out
mov
int3
fistps
adcb
test
test
ljmp
rorb
cmp
movsb
repz
loop
loop
mov
xor
rorl
xor
jle
sahf
cmpb
adc
inc
lds
daa
push
pop
push
or
push
jb
test
pop
mov
stos
mov
aas
fsubrs
add
and
cld
xchg
jle
cmp
jae
fistl
mov
fsubr
aam
out
orl
mov
loopne
or
mov
dec
push
push
jmp
shrb
push
cmpsb
ret
push
out
add
test
hlt
dec
cwtl
inc
insb
loope
out
movsb
jmp
loopne
jg
ds
rclb
dec
insb
push
push
push
mov
push
mov
sub
dec
jo
jmp
adc
xchg
cwtl
rorl
cmp
pop
push
xchg
add
xchg
data16
hlt
daa
cmp
ja
in
insl
lds
jge
aam
sub
test
adc
sub
pop
pop
xchg
sub
mov
jb
pop
inc
adc
test
adc
adc
sbb
clc
or
inc
ret
lods
inc
push
in
or
or
xor
mov
or
cmpsl
adc
and
xor
or
iret
adc
jge
or
sub
imul
mov
stc
adc
out
lcall
xor
imul
sbb
faddl
jecxz
and
dec
cmp
mov
loopne
lods
out
movsb
xchg
add
fmuls
subb
push
dec
mov
jmp
sbb
fistps
out
pop
and
aad
sbb
fdivl
and
mov
mov
cmp
mov
mov
jmp
jb
sub
jecxz
rolb
ja
js
movsl
ljmp
mov
jl
push
pop
aad
jecxz
jge
orl
lret
inc
add
push
ret
cmpsb
push
mov
push
in
push
sbb
rorb
sub
jge
or
call
xlat
clc
std
in
scas
pop
orl
jno
lea
call
push
mov
es
xchg
xchg
sbb
imul
dec
es
out
or
les
mov
xchg
and
inc
sbb
mov
daa
call
dec
dec
inc
mov
rolb
scas
test
adcl
movsl
mov
stos
mov
or
cmp
cmp
sti
xor
push
pop
sbb
mov
mov
mov
lods
addb
adc
add
inc
test
std
insl
push
add
or
hlt
mov
mov
icebp
xor
push
jle
jno
fs
dec
cmp
sti
or
call
xchg
dec
or
rorb
inc
test
cmp
mov
add
xorl
enter
mov
sub
push
sbb
cmp
adc
lods
push
out
stos
dec
jb
sub
xorb
jmp
roll
mov
cmpb
das
mov
cmpsl
jmp
movsb
out
orl
pop
add
dec
jo
jmp
add
rorb
dec
xlat
scas
sub
popf
jb
pop
shrl
cmp
adc
ret
movl
sbbl
xchg
cmp
dec
push
ret
push
push
inc
cmp
push
xor
dec
fwait
cmp
fstl
mov
jns
in
adc
adc
add
xor
icebp
xor
xor
addr16
push
imul
adc
js
sti
sbb
sub
inc
mov
and
shl
adc
aaa
adc
je
dec
jne
jo
int
loope
jo
clc
adc
add
push
sti
movsb
xchg
lcall
push
insb
and
add
loope
leave
fiaddl
xchg
outsl
cld
lcall
mov
cmp
je
xchg
lcall
das
xchg
divb
mov
xchg
mov
or
jge
jnp
arpl
pop
add
or
inc
movsb
mov
daa
xor
sub
cmp
jne
and
jp
cli
jb
lea
or
mov
add
jno
dec
outsb
or
jmp
lea
lcall
pop
lock
ja
xchg
ss
sub
andl
pop
je
mov
cld
ljmpw
and
mov
out
adc
test
xor
out
cmp
or
iret
mov
xorl
popf
dec
add
adc
outsl
orb
cmp
testb
adcb
adc
sbbb
sub
int3
adc
mov
dec
push
mov
aam
or
aam
or
cmpb
popf
loope
data16
pop
and
ret
or
or
xorb
or
dec
lea
push
jae
sbb
cmp
pop
xorb
adc
stos
jbe
aam
and
mov
dec
adc
in
and
lods
cmpb
mov
pushf
cmp
push
push
les
cmp
incb
icebp
or
jl
mov
mov
aaa
movsb
xchg
sub
nop
adc
push
shll
sbb
push
hlt
push
add
push
xlat
mov
adc
sbb
cmc
jg
out
and
jbe
add
adc
sti
or
pop
add
cwtl
das
add
push
adc
and
sub
and
pop
push
stos
inc
or
pop
or
jae
fs
add
push
mov
pop
lods
in
mov
jmp
inc
popa
popl
adc
adc
mov
inc
sbb
push
inc
movsl
or
loopne
cmp
jge
loope
xchg
push
adcb
or
imul
cmp
lds
test
inc
pop
out
movsb
mov
dec
add
popa
adc
sbb
andb
addr16
or
sbb
inc
js
es
jp
test
lods
icebp
sarl
adc
xor
movsb
mov
lea
rorb
mov
mov
and
xchg
sarl
pop
pop
ja
push
sub
ss
xchg
push
mov
or
push
pop
addr16
mov
jae
inc
sub
add
sbbl
mov
mov
sbb
into
jg
aaa
test
popf
mov
inc
cmp
cmpb
je
lret
loopne
inc
push
pop
pop
sbb
mov
cmp
fcoml
sub
push
and
push
sub
lods
popa
jb
xor
movsb
fdivrl
mov
sbb
ret
adc
sarb
or
or
push
adc
add
movsb
push
lods
gs
dec
mov
aam
sbb
pusha
psubsw
mov
or
jnp
loope
cmp
pushl
sub
daa
mov
sub
xor
sbb
inc
ficompl
nop
lock
push
add
add
mov
js
loope
xor
or
incl
rorl
adc
fsubl
xor
fadds
adc
loopne
inc
enter
xchg
cltd
popf
pushf
jmp
sti
or
cmpsb
mov
roll
subl
loopne
mov
test
sbb
inc
pop
adc
bound
je
mov
sbb
std
aaa
push
je
incl
jl
mov
mov
mov
jle
dec
lods
push
cmp
aam
dec
and
sub
xlat
dec
inc
or
addl
sbb
pop
push
mov
add
sbb
pusha
iret
lea
mov
jl
sub
cwtl
arpl
push
lea
jmp
dec
xchg
sbb
test
movsl
fbstp
sub
xor
adc
xor
mov
push
xchg
xchg
push
je
mov
aad
sub
cmp
mov
dec
cmp
cmp
mov
pop
lds
adc
mov
into
mov
adc
dec
pminsw
pusha
pop
std
mov
in
fidivl
or
movsb
and
push
adcl
lock
dec
cwtl
cmp
or
push
add
jle
or
inc
fadd
sub
cmc
jns
bound
les
das
push
aas
adc
sub
aas
dec
or
cli
insb
cmp
shlb
andb
inc
cwtl
add
pop
pop
loopne
mov
dec
jge
call
xchg
mov
jge
cmp
cmpsb
inc
sub
cmp
cmp
popa
sar
imul
pushf
je
mov
dec
fiaddl
lods
leave
aaa
leave
sbb
test
mov
leave
sbb
lds
xchg
sbb
xor
test
pusha
add
xchg
mov
or
push
mov
push
xorb
jecxz
inc
fidivrs
mov
push
pop
lods
xchg
bound
xor
sub
dec
xor
xchg
xchg
adc
loopne
add
fwait
movsb
repnz
addl
in
lods
add
orl
pop
mov
push
mov
dec
add
sub
sub
fwait
push
lock
in
movl
and
xor
xchg
dec
pop
add
sti
movsb
jb
and
xchg
std
aas
movl
sbb
push
pop
mov
xorb
xchg
inc
push
bound
sub
push
sarl
lods
xorl
les
dec
sbb
in
gs
push
imul
ss
push
sub
sbb
and
dec
mov
lods
stos
xor
dec
fcmove
mov
or
in
pusha
adc
shlb
icebp
push
int3
js
mov
pushf
es
sub
xor
lea
or
xor
mov
imull
jmp
ss
adcl
mov
mov
inc
mov
loopne
fidivl
subl
mov
out
ret
loopne
rcll
out
nop
out
sbb
clc
xor
sub
sbb
dec
lcall
ja
mov
jb
and
movsb
and
roll
mov
or
popf
pop
or
nop
lret
sub
mov
push
sub
leave
xor
pushf
inc
aaa
ss
mov
add
pop
dec
cmp
je
jae
jmp
leave
mov
adc
xor
jno
xchg
sub
jno
stos
adc
out
je
cwtl
pop
xlat
dec
inc
dec
enter
cltd
cmp
jge
imul
outsl
jl
mov
jne
lea
orb
int
inc
jg
mov
scas
shlb
nop
mov
push
loopne
push
adc
sar
mov
and
mov
push
sub
and
js
adc
movsl
sbb
push
movsb
push
pop
iret
push
push
adc
xchg
fisubl
push
dec
jb
scas
push
mov
orl
mov
les
icebp
test
adc
scas
mov
jecxz
int3
add
pop
sub
add
sbb
add
fs
pop
pop
mov
mov
push
jns
clc
int
mov
fs
cld
mov
cmp
jbe
decl
ljmp
pop
into
sub
lret
push
inc
setb
jne
mov
push
lahf
sbb
sahf
into
xor
jmp
dec
mov
mov
jmp
mov
sub
addr16
or
dec
sbb
cmovs
xchg
adc
test
pushf
test
test
dec
mov
mov
inc
push
pop
loopne
jnp
mov
mov
cmp
inc
xor
rorl
fincstp
lret
or
xchg
loopne
or
ss
push
dec
push
add
cmp
mov
jmp
mov
sub
mov
or
adc
sub
pop
dec
std
push
mov
push
adc
loope
inc
jmp
stc
xchg
lret
mov
testb
mov
xor
es
movsb
outsl
pop
adc
data16
mov
mov
xchg
subb
sub
jge
lea
adc
jbe
adc
adc
push
cmpsb
lock
xchg
mov
roll
xchg
in
xchg
add
mov
mov
push
add
push
test
push
and
push
xor
xor
call
sub
js
xor
daa
xor
test
adc
and
mov
lea
push
pop
movsb
enter
popa
das
push
inc
adc
aad
es
add
aad
in
push
test
out
lea
fcom
fdivl
and
subb
inc
xor
sbb
inc
cs
test
mov
in
sbb
add
xchg
mov
push
xchg
sbb
sbb
pop
sbb
mov
push
pop
cmp
jne
jb
dec
mov
jge
and
add
pop
push
xchg
sub
and
and
sbb
cmp
mov
cmpsb
popa
and
or
add
inc
enter
test
and
push
xor
mov
xor
out
inc
jb
and
sub
and
sub
inc
jb
jae
and
push
xchg
push
mov
dec
inc
pusha
lds
insl
addb
and
xor
pop
test
lea
ret
sbb
cmc
sbb
int
stos
roll
inc
add
je
inc
mov
and
or
add
cwtl
and
mov
sahf
sbbl
adcb
or
es
and
xor
jne
rcrl
adc
call
jb
adc
add
add
es
add
shlb
xchg
pop
rolb
and
push
popf
rorl
mov
push
les
sarb
lds
rcr
ja
and
ja
sub
clc
inc
pop
inc
je
repnz
shl
sbb
stc
call
sub
fstp
and
push
add
mov
sbb
leave
or
faddl
xor
inc
cmpsl
flds
mov
into
jae
jle
test
mov
outsb
out
js
jge
xchg
insl
or
jno
xor
xchg
and
in
or
cltd
nop
xchg
movsb
jl
fiaddl
add
ja
into
out
and
mov
mov
add
andb
bound
pop
dec
xchg
inc
outsl
leave
add
in
push
xchg
xchg
pop
mov
xor
sub
stc
mov
xor
mov
mov
jo
movsb
sub
jg
hlt
dec
fidivrs
enter
jae
inc
add
outsb
mov
jo
sbb
and
popl
sbb
loopne
ret
cmpsl
iret
dec
mov
insl
mov
add
sbb
addb
jno
cmp
sbb
sub
cmp
sbb
inc
fdivrl
xor
lock
cmpsl
and
mov
sbb
rclb
inc
xlat
dec
daa
stc
cmpsb
dec
adc
pop
pop
ja
inc
lea
or
mov
cmpsl
sbb
mov
lods
fwait
lock
mov
hlt
jp
jae
xor
insb
enter
mov
push
pop
jnp
mov
dec
mov
pop
mov
xor
add
mov
mov
add
loope
pushf
pusha
and
pop
ds
push
bound
rclb
inc
adc
pop
cmp
pop
cltd
xchg
sbb
xor
add
xchg
in
jle
mov
leave
insl
or
pop
or
and
lret
or
rcrl
cmp
or
stc
test
and
je
insb
mov
lock
xor
lret
pusha
sbb
mov
add
lcall
loop
dec
or
notl
daa
add
mov
jo
jmp
sbb
loopne
inc
jecxz
dec
push
lret
cmp
dec
iret
inc
nop
mov
ret
xor
int
mov
rcr
dec
adc
adc
lea
scas
rclb
popf
adc
jmp
jnp
add
orl
add
add
and
stos
mov
fidivrs
sbb
subb
fsubl
cmp
mov
pop
imul
cmp
mov
imul
loop
mov
fs
pop
aad
cmp
adc
leave
shr
adc
movsb
lds
fcomps
cs
addr16
inc
push
pop
mull
or
fstl
xchg
pusha
rcll
inc
lea
scas
lahf
sbb
inc
test
ret
sbb
mov
push
xchg
adc
adc
outsl
arpl
and
add
test
stos
lds
push
enterw
adcb
jb
insl
lea
inc
hlt
test
mov
int
add
xlat
inc
mov
or
or
push
sbb
mov
int
pop
sbb
push
xor
enter
call
fistpll
pop
pop
push
push
xor
sbb
fs
out
push
cmp
jno
push
push
loop,pt
test
sbb
stos
incl
dec
addl
mov
es
jo
adc
jl
arpl
mov
and
add
int
adc
cmc
add
xchg
out
adc
sbb
inc
dec
movb
popf
mov
or
mov
xor
pusha
popf
movsl
mov
dec
adc
sbb
xor
cmp
repz
inc
lcall
xor
xchg
sbb
cmp
in
inc
mov
je
adc
bound
adc
xor
mov
xlat
adc
mov
test
rol
sbb
jbe
pop
add
fldt
pusha
test
push
adc
push
js
gs
arpl
fmuls
mov
jge
sub
inc
sub
iret
clc
jg
hlt
popa
icebp
lcall
jmp
and
mov
shr
cmp
mov
cmp
jae
sbb
daa
jmp
insl
jge
pop
loope
jp
jle
jge
ljmp
ds
add
les
fstl
es
dec
dec
orl
shl
push
call
and
sub
cmp
cmp
inc
and
xor
shlb
inc
test
push
push
fisubrl
pcmpgtw
imul
data16
push
es
pop
xchg
xor
cmp
mov
cwtl
inc
mov
fiadds
dec
daa
inc
adc
xor
and
dec
and
xchg
lret
xchg
push
or
test
imul
lea
adc
cmp
or
push
jnp
pop
mov
push
push
pushf
es
ret
aaa
push
repz
insl
and
test
js
je
xor
xor
cli
popa
sub
pusha
lock
lea
xor
dec
out
xchg
in
mov
jbe
xchg
push
cmpsb
cmp
xchg
ss
stos
mov
adc
pop
fwait
xchg
rolb
sbb
mov
or
adc
dec
stos
dec
inc
int3
add
ja
mov
adc
cltd
jmp
mov
inc
pusha
test
jae
out
scas
lods
pop
inc
pop
dec
test
add
mov
cs
sbb
fildl
scas
icebp
push
les
mov
add
movsb
ss
dec
and
xor
rcrb
adc
add
xchg
mov
jae
add
cmp
or
or
add
inc
xlat
cmc
xchg
push
push
dec
add
movb
aad
add
sub
add
aaa
add
or
push
outsl
mov
aas
xchg
orl
cmp
imul
je
mov
test
in
mov
or
std
ficoms
inc
js
adc
adcl
push
iret
xchg
subl
mov
or
xor
jl
cmp
lods
mov
cld
push
popf
out
sbb
insb
and
ret
addl
arpl
push
scas
loop
adc
movsl
insb
aad
push
cmpsl
das
movl
loop
sub
mov
add
adc
adc
cmp
xlat
mov
ret
push
push
sbb
roll
adc
cmp
sahf
sbb
xchg
jae
inc
adc
movsb
xchg
fisttpll
jo
ret
xchg
add
sbb
inc
xchg
sbb
xchg
cmp
inc
jle
pop
sti
inc
push
lret
pop
cmpb
cmp
adc
cld
daa
mov
in
insb
hlt
jg
jl
mov
mov
int
inc
stos
out
loopne
fcoml
sbb
pusha
loope
sub
adc
push
out
call
mov
pop
dec
pop
clc
add
scas
jle
dec
rcrl
mov
mov
push
lock
ficomps
push
fisubrl
cmp
cli
aas
xchg
orl
mov
mov
jle
sub
or
outsb
add
dec
sbb
sbb
shr
sbb
dec
rolb
jae
dec
loopne
ret
pop
pop
add
mov
inc
mov
mov
sti
lds
mov
in
shll
cmpb
das
push
cmp
stos
imul
out
cmp
shlb
test
scas
pop
mov
jae
out
das
jl
pop
add
sub
xlat
js
nop
clc
or
jns
xchg
adc
movsl
in
mov
xor
rorl
std
mov
sub
shlb
js
test
add
setbe
or
fs
test
add
xchg
or
push
test
sbb
fbld
pop
mov
adc
add
mov
and
mov
rorl
cmp
jl
loope
push
mov
jmp
inc
add
ljmp
addl
popa
add
movsbw
sub
or
jns
jne
jae
pop
inc
and
or
or
fwait
mov
inc
push
insl
fisttpl
dec
jl
cmp
scas
push
fcmovne
pop
insl
hlt
push
inc
dec
sbb
inc
mov
out
dec
ds
jbe
mov
je
push
stos
or
ss
cmp
push
push
sarl
adc
lea
daa
shlb
imul
into
pop
mov
xor
cmpsl
push
loopne
lahf
sbb
inc
cmp
adc
sub
sub
jne
xchg
dec
ss
sti
sbb
lea
and
sbb
imul
mov
pop
cmpsb
dec
dec
pop
push
pop
cmp
ja
xchg
or
dec
xchg
and
add
shlb
jo
pop
add
sbb
fwait
pop
iret
inc
mov
pop
rorb
lret
scas
pop
test
mov
es
das
ds
lcall
fcomps
sub
insl
mov
mov
mov
mov
sbb
sbb
leave
or
mov
cmpsl
push
fsubs
inc
pop
and
push
sbb
lea
push
or
or
pop
xchg
cs
inc
pop
xchg
push
xchg
stos
jbe
adc
lret
push
repnz
outsb
cmpsl
add
and
sbb
iret
adc
push
lret
imul
or
xlat
in
lods
or
jle
inc
sbb
test
jne
cmp
xor
add
inc
jb
cli
push
test
clc
mov
and
xchg
das
push
and
adc
jg
les
pusha
fdivp
aam
push
adc
add
sar
jo
test
insl
cmp
imul
test
inc
mov
xor
add
sarb
add
mov
adc
dec
hlt
mov
dec
call
ss
cmp
cmp
test
mov
adc
jge
add
push
jnp
fidivrl
jnp
dec
xor
nop
sub
push
enter
rorb
inc
in
stc
ret
mov
dec
imul
int3
mov
push
test
jnp
pop
movl
testb
xchg
rclb
xchg
xor
cmp
loopne
mov
mov
pushf
test
lcall
in
loope
mov
cld
push
push
mov
mov
jl
or
mov
mov
fbld
or
jae
lea
jl
or
jno
or
scas
in
adc
pop
sbb
inc
xor
jne
or
inc
sub
inc
sub
xchg
call
jge
sub
lock
inc
lea
outsl
cmp
fcoms
inc
or
cs
push
add
gs
adc
mov
add
jg
dec
cmp
aaa
push
mov
inc
add
popl
call
xor
push
mov
imulb
and
jge
add
sub
decb
dec
pusha
add
bound
movsl
add
call
lea
or
addl
ret
mov
aas
dec
adc
shl
and
and
test
xlat
mov
hlt
add
sub
push
mov
loop
pop
inc
pop
push
stc
push
add
push
push
push
push
pop
mov
pop
push
mov
das
loopne
push
in
je
inc
lcall
test
push
jne
movsb
lds
mov
dec
jne
add
push
push
cmp
jne
cwtl
shr
dec
mov
jle
add
loop
jl
pushf
xchg
or
inc
mov
ret
hlt
nop
xor
push
fisubrs
dec
dec
adc
repnz
xchg
nop
push
bound
push
lock
jbe
pushf
nop
sub
mov
jmp
and
je,pt
lock
mov
jmp
sbb
pop
test
xchg
in
push
sub
inc
jo
movsl
cs
imul
mov
inc
cwtl
lcall
orl
xchg
adc
ljmp
loop
inc
add
lea
in
js
mov
lods
fnstsw
mov
inc
xchg
test
stc
or
scas
imul
cmp
js
add
xor
ja
jp
xchg
xchg
jbe
mov
popf
enter
adc
cmpsb
inc
cld
sbb
jnp
sbb
jbe
hlt
push
imul
stos
jmp
dec
push
inc
sbb
jg
pop
jl
and
cmp
and
out
pop
pushl
add
adc
and
inc
imul
add
movsl
outsb
xor
xor
xor
adc
pop
add
add
mov
mov
or
add
stos
jo
mov
movsl
mov
test
enter
push
inc
mov
les
pop
xchg
push
dec
pop
out
in
jg
push
push
shll
jge
jle
adc
dec
push
stc
bound
insb
addr16
test
or
test
pop
cmp
and
push
cmp
lcall
push
xchg
adc
mov
inc
clc
jo
or
jnp
add
mov
mov
inc
cmp
push
jecxz
pop
sub
xchg
mov
movaps
pop
test
push
lea
or
and
push
pop
ffreep
daa
dec
or
jne
mov
sub
jg
sub
daa
scas
or
icebp
and
sets
pop
add
xchg
add
pop
push
mov
sbb
es
call
lcall
pop
gs
loope
add
and
das
adc
xchg
xlat
inc
xlat
rolb
clc
aaa
mov
outsb
es
lds
push
in
into
rclb
fs
ret
lods
loop
jb
inc
jmp
and
fimull
jp
mov
mov
push
mov
push
int3
nop
xor
insb
subps
push
xor
mov
xchg
push
roll
mov
add
mov
add
add
cmp
clc
dec
pop
inc
sub
adc
or
pop
int3
je
adc
pop
or
int3
pop
push
and
mov
and
shr
sbb
nop
inc
insl
popa
bound
xor
or
and
xchg
add
and
or
cltd
push
dec
aad
push
daa
dec
mov
push
jbe
cmp
je
adc
cmpsb
and
iret
mov
test
insl
xchg
stc
sbb
sub
jecxz
add
jnp
inc
cld
test
push
xor
imul
leave
dec
das
in
xor
sub
mov
cmpsb
inc
mov
cmpb
pop
add
or
xchg
movsl
movsl
or
or
adc
insl
dec
mov
ljmp
fdivrs
xchg
into
aas
xor
ret
inc
push
inc
fcomps
ds
shlb
shrl
sbb
xor
orb
dec
sub
test
shll
xchg
or
inc
loopne
or
ret
mov
xchg
inc
sub
cmp
cltd
std
pop
push
fs
pusha
mov
insb
lea
dec
xchg
lret
or
mov
in
xor
loopne
enter
cs
and
push
or
mov
adc
leave
cmpw
out
xchg
cmpb
jne
aad
adc
andb
sbb
mov
ss
push
pop
mov
add
sar
es
push
je
mov
pop
shlb
mov
jns
sbb
or
xchg
cmc
push
loopne
and
and
loop
les
clc
sub
dec
dec
push
sub
aaa
shrb
push
sub
jmp
jae
hlt
sarb
mov
sub
add
add
or
inc
pusha
mov
shlb
mov
nopl
cmp
add
xchg
and
ficompl
mov
fdivrs
cld
cmp
xorl
adcl
inc
adc
daa
adc
aad
ss
xchg
je
cs
mov
pop
aaa
add
clc
pop
and
incl
jecxz
and
loope
mov
cmp
jne
pop
js
insb
jb
fs
push
std
lock
repnz
add
pop
dec
pop
enter
push
pop
push
dec
xor
int
int
jo
fcoml
jmp
and
jle
xor
nop
mov
in
pop
adc
sbb
mov
push
or
je
lds
lea
push
psllw
jge
add
cltd
adcl
or
in
pop
jne
adc
push
xlat
or
push
push
cmp
cmp
xor
test
jne
cmp
andb
stc
gs
fstpl
adc
mov
adc
inc
push
add
pop
or
sub
fwait
insb
xor
and
pushf
xorb
adc
lock
shlb
daa
sbb
cmp
push
mov
or
mov
mov
imul
inc
repnz
pushl
in
add
lcall
jo
dec
push
sbb
inc
js
mov
inc
xchg
add
or
and
or
imul
insb
cli
adc
sbbl
je
sbb
add
sub
sbb
push
mov
inc
cmp
jbe
mov
cmp
cld
pop
and
jmp
push
pop
dec
daa
loop
orps
cmpl
pop
jo
or
add
and
rolb
and
test
loope
xor
in
fdivr
sub
and
mov
mov
lods
stos
imul
testl
fadds
dec
pushl
imul
mov
dec
js
inc
dec
pop
jne
add
daa
xchg
sub
sub
or
xchg
add
je
push
and
adc
jge
cmc
scas
push
mov
mov
xchg
lock
jbe
aas
hlt
movsl
aad
bound
push
or
or
in
sbb
pop
pushl
loopne
fwait
pop
testb
adc
inc
inc
icebp
fcoml
sbb
push
movsb
and
mov
ret
pusha
inc
adc
inc
or
xchg
inc
or
push
push
bound
xor
mov
push
add
stc
popf
icebp
sub
stos
test
incl
pop
js
jle
cli
dec
les
or
and
push
jo
movsl
out
lock
pop
or
adc
pop
cmp
inc
mov
cltd
push
xor
shrb
xchg
imul
ss
add
xor
add
movd
les
shlb
sub
sub
cmp
scas
push
shlb
rclb
aaa
or
and
nop
imul
push
push
das
stos
or
pop
jbe
js
add
xor
popa
leave
loope
cwtl
fwait
push
adc
ljmp
in
inc
push
dec
jge
es
push
pop
sub
ss
imulb
pop
adc
es
xor
in
inc
or
orb
xor
sbb
negb
testl
loopne
jne
fidivl
sub
push
sbb
mov
dec
lahf
stos
pop
aaa
adc
adc
inc
mov
je
mov
push
cwtl
out
cmp
pop
ret
push
test
dec
inc
push
mov
dec
clc
inc
lock
push
sub
cli
xor
inc
add
js
test
jo
sbb
in
dec
inc
inc
jmp
push
push
dec
pop
sub
xor
ficomps
mov
popa
dec
xor
or
inc
inc
dec
cwtl
inc
in
pop
jne
ss
sti
scas
repz
and
xlat
and
movsb
inc
sbb
scas
fcmovbe
jne
sub
sbbl
test
inc
sub
add
repz
pop
icebp
mov
push
pop
fwait
int3
clc
dec
cmp
mov
test
dec
push
repnz
iret
xchg
shr
push
sub
loop
loope
xor
add
dec
js
jae
mov
pop
inc
xor
orl
sub
jge
ret
xor
adc
test
inc
int3
into
rorb
roll
and
pusha
movsl
push
enter
or
pusha
push
test
sbb
push
add
or
scas
push
lock
repz
mov
call
cs
xchg
add
mov
nop
dec
cmp
pop
decb
loopw
lods
and
stc
or
insl
movd
mov
mov
cmpsb
sub
stos
pop
int
push
in
cmp
nop
cs
rolb
das
sbb
pop
mov
push
push
sub
cmpb
out
in
pop
push
sub
mov
sbb
andl
es
ljmp
lea
add
dec
loop
inc
fidivrl
pop
push
and
cmpsl
cltd
xchg
adc
clc
pop
jne
leave
sarb
mov
or
cmpsl
frstor
cwtl
movzwl
mov
push
xor
ret
cmp
shlb
icebp
cmpsb
cld
hlt
les
js
enter
shr
jmp
andl
jne
clc
arpl
nop
scas
push
jno
adc
push
push
push
add
in
inc
sub
mov
lods
fstpt
adc
ret
std
incl
mulb
ja
push
je
cmp
jbe
adc
cmp
jmp
push
fidivl
fidivrs
lods
push
repz
cmp
out
pop
std
and
mov
mov
pop
push
mov
inc
sbb
sbb
push
out
inc
jo
mov
inc
xor
cmp
dec
and
or
jle
idivl
xchg
mov
sbb
mov
jg
xor
and
jmp
cmp
jne
xor
rorl
es
fsubrp
scas
sbb
mov
jmp
ss
shlb
outsl
lods
aad
std
or
cmp
jne
cs
pop
jo
outsb
xor
jle
push
pushf
jne
push
push
or
or
jmp
inc
insb
into
mov
cs
seto
neg
or
push
mov
dec
or
es
fcmovu
stc
mov
ror
cmp
popa
mov
std
mov
or
jge
jbe
in
lcall
jbe
cmp
or
xor
rol
mov
cmp
je
mov
push
xchg
cwtl
xor
cld
mov
mov
push
lret
addb
inc
mov
les
dec
mov
and
or
inc
imul
mov
sub
cmp
and
add
pop
push
gs
inc
add
subl
addr16
ja
rep
mov
aam
inc
mov
mov
inc
mov
cwtl
loopne
mov
dec
adcb
adc
add
andl
lods
leave
sar
dec
sub
xchg
cmp
xchg
inc
orb
cld
jno
pushl
cld
mov
xchg
and
dec
or
dec
inc
loop
cwtl
sbb
adc
cmpsb
sub
adc
or
es
data16
cmp
add
add
sub
popf
pusha
jno
scas
movsb
add
or
adc
sbb
ja
sbb
push
mov
and
lds
ss
test
jno
aaa
dec
dec
and
or
push
add
ret
out
pop
sbbl
gs
add
pop
je
repnz
add
or
pop
add
sbb
mov
aaa
stos
and
out
scas
sub
hlt
dec
outsl
dec
mov
xor
add
xor
jne
push
pop
adc
push
mov
or
xchg
add
lock
lea
jae
or
or
push
xor
or
sbb
insb
and
adc
mov
sbb
pusha
xlat
repnz
and
mov
mov
dec
out
pusha
imulb
int
xor
jbe
push
or
mov
adc
or
mov
xorl
mov
mov
mov
repnz
xor
sub
stos
or
pop
xchg
inc
gs
movb
mov
fildll
aaa
les
jb
or
lea
popa
lock
loopne
in
adc
pop
filds
lret
pop
or
push
pop
ss
xor
sbb
dec
ret
adc
loop
xor
in
negb
push
push
popf
dec
push
inc
lods
jns
or
cwtl
repz
mov
sbbl
nop
and
in
mov
fistl
cmp
xchg
sbb
std
adc
push
jmp
pop
ljmp
packuswb
addr16
sbb
adcl
ds
jp
cmp
mov
push
aam
es
jo
sbb
xor
lret
sbbb
clc
testl
lahf
add
adcb
add
xchg
movaps
pop
mov
pop
xor
add
iret
insl
sbb
int
lea
in
movsl
pop
cmpsl
or
in
or
and
push
rorb
sub
xchg
pop
xchg
inc
push
lahf
mov
andl
adc
push
adc
sti
sub
pop
leave
js
andl
andl
pusha
mov
push
fwait
mov
push
jo
aad
call
lock
pop
and
movsb
enter
pop
xor
or
and
pop
adc
sub
arpl
and
push
xchg
out
jns
add
and
adc
loop
dec
icebp
mov
repnz
out
in
push
cltd
inc
pushf
jo
enter
scas
call
fs
mov
sbb
pop
clc
and
jae
hlt
ss
add
and
ret
mov
sub
pop
add
pop
leave
jecxz
push
cwtl
test
lea
std
mov
add
sbb
dec
add
jb
or
add
cltd
inc
jp
or
test
add
xchg
xchg
and
fdivrs
lock
int
and
aad
sbb
lds
inc
mov
ja
or
mov
ficoms
adc
jecxz
add
enter
fsubrs
in
mov
aaa
lea
mov
out
adc
push
push
and
adc
mov
dec
scas
or
and
sub
rcrl
add
push
pop
and
adc
push
int3
ret
mov
outsl
adc
and
loope
lret
xchg
or
pop
or
cs
xchg
jle
cmp
data16
push
mov
jns
mov
rcll
stos
and
iret
stos
jne
inc
dec
sbb
xor
fistl
sub
rcrl
adc
xchg
sar
and
call
mov
aad
sbb
push
aam
or
or
and
movsl
das
push
pop
bound
es
jg
xchg
sub
xchg
stos
ss
test
mov
inc
in
push
or
push
jmp
and
cmp
dec
mov
cltd
push
fs
sbb
roll
faddl
xchg
jne
inc
dec
push
and
inc
push
inc
add
dec
out
cmpsl
or
push
es
dec
ficoms
add
sbb
xor
adc
push
ja
roll
shll
mov
add
or
adc
cmp
mov
in
push
fwait
outsl
filds
inc
sub
sub
sbb
inc
or
enter
xor
mov
loopne
cmp
test
outsb
sub
subb
test
lock
outsb
daa
adc
cmp
ja
or
fistl
or
cltd
push
inc
adc
je
ss
icebp
dec
leave
add
or
test
adc
xor
cmp
fmuls
dec
pusha
mov
jge
or
or
xor
jmp
call
or
mov
pusha
sub
movsl
xchg
rorl
out
movsl
xor
dec
push
push
push
xor
fcoml
roll
push
sbb
in
add
and
adc
arpl
adc
lock
cmpsb
add
dec
out
dec
into
icebp
jle
dec
lock
ds
jo
icebp
inc
mov
pop
push
and
push
sbb
pop
pop
dec
inc
or
inc
fidivs
insl
adc
push
xor
inc
sub
push
add
les
inc
sub
clc
mov
jno
push
mov
aaa
push
jbe
pop
pop
mov
ret
mov
mov
or
cmpsl
cmp
stos
and
pop
xor
cmc
cmp
sub
sbb
xor
outsb
xlat
or
adc
adc
das
enter
dec
pop
jae
test
leave
mov
xorb
mov
mov
jae
stos
add
mov
adc
dec
and
lods
xor
mov
adc
add
mov
fdivs
add
movb
fisttpl
mov
scas
push
xor
push
adc
dec
stos
jno
stc
icebp
dec
ss
test
mov
mov
adc
lods
je
inc
ficoms
mov
es
divl
xor
fsubrl
icebp
push
and
pop
sbb
das
in
sbb
and
mov
les
inc
pop
jmp
jl
mov
lock
xchg
xor
mov
or
inc
scas
fistpll
sbb
inc
outsl
push
pop
dec
gs
inc
es
jne
inc
scas
and
sbb
add
jb
aaa
mov
aaa
or
dec
outsl
int3
dec
xchg
sub
pop
push
aam
dec
adc
adc
lods
test
cs
pop
cs
jns
xchg
dec
dec
inc
jge
pop
cwtl
testb
ret
dec
pop
rcrb
add
int
cmp
or
ja
clc
rcrb
xadd
shll
jmp
and
popf
ret
adc
mov
xchg
sbb
jne
push
imul
jo
or
adcb
cmp
repz
pop
add
xchg
jbe
pop
push
inc
sbb
adcl
mov
test
or
xchg
add
in
push
js
push
lea
bound
sbb
shr
push
sub
and
and
jns
push
push
and
xor
fistpll
enter
add
call
mov
mov
jmp
push
mov
mov
xchg
pop
aad
int
push
enter
pop
mov
pop
jne
pop
cmc
mov
jmp
int3
xor
push
and
mov
add
cs
pushf
lds
add
outsb
mov
cmp
push
xchg
or
loope
das
and
mov
and
ret
and
iret
push
mov
adc
ret
add
test
mov
ret
sub
mov
out
cltd
ljmp
test
sbb
les
mov
pop
add
dec
adc
push
adc
test
xor
inc
outsl
or
pusha
ja
xchg
mov
cmp
xchg
mov
mov
pop
hlt
test
cltd
dec
andl
jne
imul
dec
pop
dec
add
and
outsb
sbb
mov
insl
loopne
shll
mov
or
ficoml
adc
nop
mov
mov
pop
test
fstps
mov
in
add
or
lea
dec
lods
lods
mov
and
lea
pop
enter
rol
pop
dec
or
sbb
aam
rcr
aaa
sbb
pusha
sbb
inc
adc
sub
adc
inc
and
into
mov
pop
sarl
mov
sbb
fcoms
or
arpl
mov
adc
mov
loop
push
mov
sub
mov
mov
into
sbb
pop
and
sub
adc
add
sbb
xchg
mov
push
mov
ret
jne
mov
inc
test
pop
push
lret
dec
loope
inc
sbb
into
test
mov
and
ss
jl
jo
mov
loopne
push
int
adc
cltd
bound
mov
test
movsb
lea
inc
push
cs
jo
stc
jne
das
leave
shrb
aaa
outsb
sbb
cmpsb
leave
push
adc
ss
mov
push
jg
sbbb
loopne
bound
pop
stos
mov
ret
inc
out
sbbl
sub
jne
mov
int
add
cmp
setno
xchg
inc
adc
mov
jle
or
or
cmp
std
xchg
stos
or
dec
push
mov
push
imul
das
faddl
mov
lods
jmp
scas
cmp
sub
or
xorb
and
ret
add
push
in
iret
adc
xor
fs
movl
push
cmp
add
dec
mov
movsb
addr16
sbbb
and
test
xchg
outsb
or
mov
insl
and
mov
shlb
cwtl
idiv
push
lahf
in
popf
shlb
pop
sbbb
loopne
add
leave
test
mov
inc
adc
ret
in
sub
test
jnp
mov
dec
inc
add
dec
cmp
into
ljmp
add
jne
and
cmp
sbb
xchg
mov
cs
inc
aas
or
add
adc
xor
cmp
inc
je
popf
cmp
enter
ret
pop
xor
iret
push
addl
or
jmp
push
in
aas
mov
imul
mov
daa
push
test
push
leave
in
movsb
mov
cs
hlt
adc
or
icebp
and
xchg
cmp
push
and
mov
jo
pop
mov
ret
sub
rclb
adc
adc
adc
fcom
lds
nop
outsb
movsl
cmpsl
pop
lock
adc
add
xchg
mov
fsubrs
mov
and
rcrl
lods
push
add
sbb
movsl
aam
xor
sbbl
call
or
push
xchg
and
pop
fnsave
push
push
or
adc
fcompl
test
testl
ss
inc
fs
loope
mov
pop
xor
dec
sub
arpl
mov
stos
add
out
mov
xor
inc
mov
call
sbb
pop
lock
xor
xlat
cmp
fistl
or
clc
mov
push
pop
dec
adc
pop
imul
dec
push
test
movsl
adc
or
or
cld
jb
lock
mov
pushl
xchg
movl
add
cli
mov
inc
movl
or
aas
push
pop
and
add
pop
imul
es
and
sub
lock
or
inc
pop
mov
add
push
xchg
mov
push
sbb
mov
or
mov
movsl
aam
loope
testb
or
inc
cmp
jle
sbb
arpl
or
inc
pop
xchg
push
add
shlb
add
test
sub
lea
hlt
add
or
lcall
loopne
xchg
and
xor
fstl
mov
mov
rcr
ret
fcompl
add
call
sbb
jecxz
loopne
movsb
jne
cmp
sar
loop
push
jge
mov
or
faddl
jg
or
data16
mov
fstps
push
jg
add
cmp
jl
push
cmp
push
cmp
jle
cmp
jge
jle
jp
push
cmp
cmp
inc
add
pop
adc
push
add
inc
jmp
rclb
movl
jo
daa
mov
or
jne
xchg
mov
lahf
adc
mov
cltd
pop
idiv
cpuid
cs
lock
sbb
cmp
insl
mov
or
mov
leave
mov
and
sbb
das
cmpb
jl
add
xor
into
add
push
add
sbb
push
hlt
aad
test
cmp
outsl
push
push
push
mov
pushw
imul
jb
xor
int
xor
mov
sbb
jb
or
leave
repz
adc
or
addl
sub
leave
lods
andl
cmp
push
fidivrl
loopne
lock
push
ds
push
add
enter
dec
orb
into
js
dec
jb
insl
iret
pushf
sbb
clc
or
shl
nop
inc
je
fisttpl
pop
pop
pop
in
adc
add
test
insl
fs
sub
or
in
or
lods
or
add
cmp
dec
dec
adcb
adc
in
imul
inc
xchg
je
pop
and
add
loopne
fdivrl
mov
aaa
mov
movsl
adc
movsb
fwait
es
popa
add
cld
add
sub
sub
into
xchg
adc
mov
sub
sbbb
or
repz
stos
mov
lcall
and
nop
or
mov
jmp
xchg
adc
inc
xor
push
adc
popa
sub
fldt
add
ret
inc
sub
or
adc
sub
push
lods
dec
fwait
pusha
cmp
sbb
popa
mov
aaa
sbb
sbb
sbb
sbb
gs
sub
cmp
test
imul
mov
stc
add
adc
pop
mov
sbb
pop
jnp
jecxz
or
push
js
push
pop
adcl
ljmp
add
jns
into
sbb
adc
sbb
arpl
lods
cmpsl
std
sub
shlb
stos
test
and
rclb
dec
cmpsb
shlb
add
sbb
test
xchg
or
popf
adc
xor
inc
sbb
popl
inc
dec
xor
lea
xchg
mov
adc
adc
rolb
mov
add
pushf
jb
ret
pusha
hlt
inc
add
shrl
xchg
sbb
ret
push
js
mov
cld
cmp
in
jo
out
sub
and
and
pcmpeqd
lret
mov
or
mov
push
loope
adc
pop
sbb
ds
add
fs
ret
adc
or
shll
push
push
mov
cli
ficoms
nop
out
imul
pop
int
cmp
stc
sbb
xchg
or
inc
sub
loopne
cmp
ja
enter
mov
nop
mov
mov
out
rolb
mov
arpl
hlt
cmp
mov
adc
mov
popa
pop
or
stc
ret
lcall
or
or
jb
aaa
nop
pop
fadds
or
push
je
repz
sbb
in
testb
or
mov
icebp
mov
lea
cmp
pminsw
cmp
outsb
lods
pop
cmp
mov
sti
mov
or
mov
loopne
mov
jg
ret
mov
and
inc
enter
xor
mov
cmp
pop
leave
and
std
cmp
cmp
push
in
insl
xchg
mov
add
rcrl
inc
inc
lock
adc
leave
xchg
sbbb
pop
les
jbe
push
dec
adc
popa
aad
mov
pop
imul
mov
test
sbb
vmovsd
scas
lock
add
push
stos
pusha
mov
sbb
push
push
into
add
pop
pop
jb
pop
or
xchg
add
fisttpl
mov
pusha
or
push
jne
or
jl
rcll
cmp
add
and
add
mov
mov
andl
xchg
jg
jo
add
adc
cmpsb
lods
popa
push
add
imul
rcrb
and
cmpsl
push
pop
mov
aaa
xchg
add
notl
adc
jmp
push
lea
mov
int3
rol
xchg
mov
adc
mov
xor
jle
jle
push
es
jecxz
add
add
cmp
inc
data16
sbb
loopne
pop
pushl
jecxz
rclb
clc
cmp
movl
add
inc
imul
and
popf
dec
xchg
push
mov
xor
add
mov
out
or
lods
mov
xchg
pop
daa
loop
dec
mull
movsb
push
add
or
ds
fdivr
xchg
xchg
fldl
mov
les
nop
mov
loope
movl
ds
push
fldl
push
sbb
cmp
xchg
pop
and
and
sbb
iret
cli
mov
fstpl
into
loop
in
imul
mov
pop
or
adc
jg
xchg
add
or
pop
fsub
pop
fsubrp
sub
xchg
dec
adc
rcrb
xchg
inc
divl
pop
mov
push
movl
lret
sbb
insb
fwait
and
mov
inc
adc
mov
sub
inc
test
push
add
mov
inc
add
or
rol
or
in
je
mov
rcrb
addb
stc
jge
fdivl
jo
lahf
fidivs
lock
arpl
cltd
cmp
roll
call
add
ja
or
pop
inc
popf
pop
insb
cmp
mov
push
xchg
jle
jnp
ja
lock
aaa
stos
rcrb
push
jo
loop
shrb
and
jnp
ret
pop
push
std
ret
add
ds
jp
daa
add
push
or
fstl
jnp
aaa
es
fwait
mov
pusha
or
lods
jmp
dec
stos
sbb
ret
xor
clc
mov
push
lea
cmp
jb
stos
xor
shld
movsb
jno
mov
jb
in
mov
cmp
push
push
and
push
rclb
or
mov
adc
add
push
leave
adc
sar
push
mov
push
adc
push
push
pop
xor
jle
or
sbb
ret
push
push
or
push
push
push
lcall
ror
inc
enter
cmp
push
fwait
xor
dec
pusha
add
fidivl
std
shlb
dec
incl
lock
xchg
ja
push
adc
mov
jns
mov
fstpt
mov
cmp
cmpw
jne
pop
outsl
jle
repnz
inc
inc
cld
cmp
jge
xchg
dec
push
push
jl
mov
and
inc
lea
cmp
or
jl
jo
insb
leave
out
sub
sub
push
loope
bound
adc
hlt
xor
pop
push
mov
pusha
sbb
lods
sbb
push
sbb
push
add
pop
mov
pop
add
imul
sub
or
pop
or
and
mov
adc
mov
scas
pop
leave
imul
jle
shr
push
sbb
or
loope
xor
sub
lods
add
popf
push
sbb
outsl
rolb
cltd
dec
aad
mov
or
pop
sahf
insb
or
movsb
std
fwait
xchg
jmp
push
test
push
push
mov
pop
inc
dec
daa
sub
and
scas
push
xchg
sti
push
mov
sub
js
test
rolb
pushf
mov
jl
shll
or
rclb
or
xorb
js
xlat
sbbl
std
xchg
pusha
jg
rol
fistl
xor
pop
mov
pop
cwtl
mov
pusha
insl
nop
add
ja
mov
or
pop
add
and
pushf
popa
insb
sub
xchg
push
sbb
dec
add
adc
inc
ret
hlt
jge
mov
xor
xorb
add
mov
or
cs
jp
sbb
test
xor
mov
imul
mov
or
add
mov
push
shlb
cmc
sbb
mov
pop
cltd
popa
and
push
cmp
sbb
dec
in
test
push
nop
out
movl
test
pushl
pop
push
ljmp
adcl
push
cmpb
xchg
or
cs
mov
jo
sub
adc
dec
fadds
push
and
sbb
aaa
sahf
adc
push
mov
sbb
rclb
loopne
add
pop
int
add
outsb
ficoml
and
popa
jp
add
sbb
push
ja
sub
fiadds
aaa
pop
out
jg
mov
outsl
lock
cwtl
jne
push
jne
or
add
and
xor
mov
fildll
js
jne
push
sub
je
sub
dec
sbb
sub
dec
jne
sbb
int3
dec
push
repnz
stc
lret
or
and
or
adc
adc
int
in
adc
pop
push
cmp
inc
xor
add
cmpsb
jmp
loope
sub
pusha
in
lcall
out
pop
jno
xor
jmp
push
push
por
mov
push
push
adc
xchg
add
push
mov
aam
pop
add
fwait
test
inc
cmpsb
inc
arpl
jbe
sub
jle
push
or
adc
or
add
xchg
push
xchg
mov
addl
xchg
daa
mov
sbb
cmp
sub
xor
pop
inc
inc
inc
inc
lcall
clc
push
sub
pusha
inc
in
push
sub
daa
or
leave
aam
mov
xchg
cmpsl
pop
mov
push
jnp
je
pushf
dec
jnp
or
cmp
loopne
cld
mov
dec
daa
clc
add
cmp
mull
jae
orb
ret
mov
or
fsubrs
fst
sub
hlt
push
fildll
dec
imul
ja
dec
sbb
jo
jg
or
sbb
dec
lahf
in
test
jge
out
push
iret
imul
pushl
cmpb
cmp
repz
mov
cmp
repz
icebp
out
sahf
out
push
daa
xor
inc
sahf
out
sahf
dec
pop
outsl
jns
jns
out
cltd
mov
sahf
out
lret
xlat
loope
iret
repz
testl
sub
xchg
cmp
xor
mov
orl
das
sub
add
mov
insl
add
push
jp
jle
pop
push
xor
out
sbb
pop
inc
mov
push
pop
push
imul
adc
adc
push
sub
xor
ljmp
ja
adc
or
pop
ss
jl
mov
adc
or
lock
and
push
xor
mov
jg
cmp
popf
cmp
cmp
xchg
push
nop
es
mov
fmull
mov
nop
mov
adcl
imul
inc
xchg
push
sbb
pop
add
enter
push
xchg
push
cmp
ret
add
fdiv
lods
sub
dec
test
cmp
sub
icebp
and
adc
push
cmp
roll
int3
dec
sti
sbb
rorb
cmp
test
aam
sbb
fstpl
mov
sub
clc
sub
add
push
add
frstor
jecxz
sub
push
test
adc
js
rorb
inc
nop
xchg
shlb
call
mov
xchg
mov
add
mov
pushf
clc
daa
data16
mov
mov
xor
or
add
roll
shrb
dec
push
es
pop
mov
adc
jp
cmpsb
js
sub
mov
pop
mov
add
test
cmpsb
sbb
cmp
add
test
test
pop
adc
inc
mov
mov
xor
sbb
mov
test
or
fcmovnu
adc
pop
add
ret
jno
cmc
sub
mov
adc
sbb
hlt
and
mov
out
sbb
out
sbb
int3
call
cmp
lds
or
sub
notl
fwait
je
mov
mov
je
in
cwtl
push
dec
insl
sub
xor
nop
cmp
std
loop
xchg
mov
add
mov
xor
mov
je
icebp
push
jo
lods
mov
dec
cmp
push
hlt
mov
cmc
mov
aam
add
fsubrs
sub
pop
jle
stc
push
cs
enter
les
jb
xchg
cmpsb
cmp
imul
adc
das
mov
cs
sbb
rcrb
sub
sub
xor
mov
cmpsl
movsl
push
shll
xor
xor
inc
mov
lret
push
push
dec
sbb
orl
xchg
mov
insb
xlat
int3
rcl
into
add
out
enter
in
leave
dec
mov
test
xor
add
ljmp
or
xor
jb
sub
rolb
jae
adc
repnz
sbb
xor
and
pop
repnz
sbb
and
enter
pushf
add
movsb
and
les
addb
cmp
and
and
repnz
inc
jge
sub
sbb
sub
adc
test
cmp
das
add
addr16
jmp
pop
fcoms
inc
jecxz
stos
scas
mov
out
or
dec
pop
rorb
add
fimuls
sbb
inc
ss
aaa
mov
jae
ss
sbb
rol
test
xchg
pop
je
push
inc
in
iret
sbb
mov
and
xor
rorl
adc
bnd
sub
enter
xchg
cmpb
enter
adc
add
cmp
or
cmp
pop
loope
lea
mov
push
xor
inc
xor
cmp
dec
cmp
pop
dec
mov
das
ret
nop
and
jmp
xorl
stos
aaa
cmp
repnz
aaa
jne
push
aas
ja
test
popa
lds
adc
add
dec
cmp
adc
push
push
aaa
jecxz
jle
push
mov
pop
mov
pusha
test
push
sbb
and
mov
inc
pop
mov
add
add
inc
lock
sub
pop
ret
je
or
cmc
cmp
push
or
mov
sub
cmp
sahf
cmpsl
lea
inc
and
sbb
lea
xor
inc
fs
add
lcall
mov
fwait
xchg
inc
inc
lods
mov
mov
pop
pop
xchg
xor
cmp
mov
jle
push
in
xlat
fldenv
jno
jo
pop
es
push
add
lods
rorb
ret
add
and
insb
dec
dec
fmuls
inc
fimuls
mov
gs
push
es
ljmp
jmp
pop
cwtl
xchg
rol
jns
xchg
in
or
fwait
mov
and
mov
jmp
arpl
loope
xchg
movsb
cmp
pop
out
jecxz
insb
push
pop
call
mov
test
mov
fmull
enter
cmp
movsb
sbb
or
push
rorb
or
insl
lahf
and
gs
pop
sti
or
mov
xchg
imulb
test
pop
mov
mov
xor
xchg
nop
inc
lcall
cwtl
push
jns
add
ror
fsubl
sub
rcll
sbb
fldt
addr16
dec
adc
push
iret
aad
xchg
or
adc
fisubl
ret
xor
push
jne
adc
inc
adc
cmp
push
push
pop
or
sbb
mov
popf
mov
mov
es
push
sbb
push
rcr
pop
stos
sbb
push
inc
xchg
les
lcall
add
cltd
nop
data16
mov
test
dec
inc
mov
sub
dec
and
xchg
fsubs
test
enter
xlat
push
inc
lods
inc
sbb
inc
xor
xorl
sbb
out
movsb
mov
je
push
adcl
push
push
inc
mov
inc
cmc
adc
or
adc
dec
push
inc
and
adc
pop
lcall
cmp
insl
jae
roll
cmpsl
mov
int
mov
rorb
or
push
pop
pusha
push
pop
inc
loopne
and
fdivl
adc
push
add
int
mov
mov
xor
pop
inc
cmp
push
mov
add
sbb
inc
xchg
movl
pop
aas
lock
lock
push
add
xor
ret
mov
int3
test
mov
pop
add
in
in
data16
test
push
cmp
inc
popa
enter
shr
xor
mov
call
xchg
adc
pop
or
inc
push
dec
dec
or
fsubrs
shl
or
inc
or
mov
in
rolb
xorb
cmpsl
sbb
lock
lahf
push
rol
dec
pop
xchg
adc
dec
jge
jge
mov
stos
cmp
inc
out
adc
rclb
cvtdq2ps
xor
mov
and
push
in
add
pop
adc
xor
and
daa
dec
das
dec
xchg
jo
push
mov
push
mov
ret
rcl
pushl
jns
mov
mov
jo
jne
int3
adc
daa
inc
mov
jecxz
mov
add
gs
sbb
sbb
xorb
lods
push
sbb
repz
mov
cmpl
les
fsubl
sub
sbb
inc
nop
push
test
xor
cwtl
push
dec
and
mov
daa
andl
pop
mov
scas
shr
daa
adc
push
mov
sub
and
repnz
pusha
lret
jnp
or
lea
mov
xor
loope
jo
in
add
insb
push
jbe
scas
sbb
xchg
push
push
sbb
sub
shr
dec
stos
shrb
add
mov
cmc
sub
or
cmp
xchg
daa
dec
add
push
es
and
and
and
xor
mov
rol
les
mov
int3
cwtl
jo
pop
les
mov
sbb
inc
cmp
and
fstps
ret
pop
sbb
and
aad
pop
rolb
test
cmpsl
je
test
adc
pop
xchg
faddl
mov
push
mov
push
popa
sub
jge
inc
pop
loopne
inc
jbe
fdiv
jmp
mov
jl
fldcw
clc
pop
lea
into
jle
lods
cs
jno
inc
bound
leave
or
mov
inc
or
pop
arpl
and
arpl
rcrb
jno
add
jae
mov
cmp
andl
cmp
push
push
and
xor
cmp
in
xorb
dec
test
pop
hlt
imul
jl
sbb
mov
xchg
add
movsb
jl
lock
es
xchg
and
addr16
mov
mov
test
cmp
cmp
jbe
jns
loop
in
inc
fmuls
cmp
push
jmp
sub
xchg
cmp
jl
push
inc
dec
inc
pop
fildll
cmp
xchg
invd
lret
mov
jmp
or
movsl
xchg
xor
faddl
jl
movsb
xchg
test
add
test
hlt
push
filds
in
jg
sbb
je
idivb
inc
je
sub
fsubrs
ljmp
cmp
in
inc
or
and
jb
mov
lods
mov
jg
addr16
lret
lahf
push
lock
addl
jb
adc
mov
and
leave
mov
test
hlt
xor
pop
cmp
test
sar
hlt
cmp
jbe
xor
cmp
jne
inc
xchg
loopne
add
ret
jl
mov
inc
lods
ret
jle
push
push
hlt
subl
or
add
jmp
iret
jne
pop
adc
inc
push
repz
and
fmulp
inc
cmp
jae
inc
pop
nop
cmp
mov
or
iret
je
mov
dec
sar
decb
pop
xchg
mov
jmp
jge
lahf
xchg
movsl
int3
mov
loopne
or
mov
xchg
adc
int
inc
add
test
jnp
adc
mov
mov
jo
cmp
in
xchg
cmp
jo
sub
jecxz
mov
aad
and
aam
or
dec
cmp
adc
xchg
dec
mov
lods
pop
push
add
pop
push
adc
movsb
or
jne
and
out
xor
jmp
mov
sbb
sub
pushl
andl
lods
test
mov
dec
int
ds
dec
add
pusha
adc
rcll
adc
je
mov
cmpb
push
add
or
cld
imul
mov
rolb
push
iret
aaa
xor
and
mov
je
cmp
add
and
mov
movb
std
sbb
shr
mov
add
lods
and
std
pop
dec
add
jne
rcrb
mov
add
fdivp
fsubr
pop
test
inc
rolb
js
add
add
cmp
adc
les
subl
xor
push
sbb
push
push
js
xor
cmp
pusha
fs
stos
add
push
orl
roll
mov
jg
or
insl
inc
lock
test
inc
mov
cmp
cmpb
je
dec
and
add
or
cmpsb
sahf
dec
push
imul
jbe
cmc
cmp
pop
shr
push
sti
fwait
mov
xchg
pop
xor
add
fistpl
adc
incb
cmp
dec
sub
lret
cmpsb
jo
cmp
shrb
and
cmpb
mov
and
enter
sbb
addr16
push
leave
gs
jne
add
dec
xchg
pop
jo
or
bnd
sub
push
sub
or
mov
or
cmp
je
adc
sbbb
in
sbb
dec
adc
xchg
push
xor
sub
add
cltd
iret
shl
or
mov
mov
gs
dec
push
or
ja
cltd
sub
push
adc
add
jns
and
adc
cwtl
dec
sub
dec
test
lods
add
inc
and
or
pop
push
cltd
add
movsl
mov
dec
mov
sbb
sub
push
sbb
adcb
add
test
in
fcmovnbe
cmpsl
dec
orl
lods
mov
pop
mov
dec
iret
jno
rorb
xchg
xchg
pop
cmc
pusha
lods
pop
int
dec
xchg
push
and
xorb
xchg
mov
test
xor
add
push
mov
mov
pop
sbb
push
push
jne
lret
outsb
add
roll
movsl
leave
sbb
ljmp
jle
add
mov
xor
mov
and
cmpsb
test
dec
mov
ret
add
cmp
adc
sbb
sub
or
fdivr
repz
cmp
adc
ss
push
lea
call
nop
mov
addb
test
add
fists
or
pop
mov
jg
or
dec
in
xor
push
hlt
push
inc
sbb
add
movsb
add
push
push
adc
push
adc
pop
ret
or
dec
nop
adc
mov
mov
add
pop
enter
push
ret
mov
cmp
sub
mov
movsb
subl
shll
inc
xchg
sbb
enter
sub
sub
mov
push
dec
and
push
ficompl
negb
and
outsb
xor
clc
cmp
jne
and
sbbl
or
pusha
push
jmp
or
adc
rorl
das
shlb
mov
das
popf
ret
fistps
jg
sbb
mov
andl
insl
mov
lock
sub
shrl
outsl
cmp
clc
sub
xorb
push
test
jmp
xor
pop
clc
les
sub
call
les
je
mov
sbb
jmp
in
in
nop
or
mov
test
push
and
push
add
and
add
inc
and
shr
mov
aam
repnz
push
sub
dec
jo
sbb
clc
ret
adc
in
push
sub
jne
pusha
cmp
pop
dec
hlt
lock
mov
mov
xor
jne
outsl
mov
inc
push
cmp
jl
ds
dec
mov
insb
mov
hlt
add
add
lock
xchg
lods
int3
in
imul
adc
mov
add
lcall
cmp
rorb
add
cmp
add
inc
push
enter
or
fisttpl
mov
jo
std
faddl
dec
push
ret
lea
mov
dec
mov
sub
push
imul
pop
sarb
push
pusha
xchg
add
cmp
dec
icebp
or
or
stc
mov
xor
or
mov
xchg
call
lock
mov
or
pop
sbbb
jo
cmp
or
or
lods
andl
xor
fldt
je
jge
ljmp
or
mov
xchg
or
das
mov
test
jnp
or
cmp
test
sbbb
jne
es
mov
adc
and
test
ss
pop
testb
adc
pop
mov
add
and
sbb
and
inc
xchg
push
inc
cmp
sub
push
sub
jle
popf
nop
sarl
addr16
jmp
mov
or
mov
dec
mov
sub
inc
popa
jbe
mov
loop
inc
int3
or
cli
mov
enter
push
cmp
dec
or
and
cmp
jle
test
add
sbb
jg
fwait
inc
add
inc
or
xchg
mov
push
notb
aas
test
sub
jmp
shll
inc
je
mov
jl
nop
add
clc
push
adc
pop
ret
ret
pusha
and
xchg
add
jl
mov
mov
push
pop
ret
pop
mov
lods
fst
add
shrl
sbb
inc
data16
cmp
popf
fbstp
inc
add
out
jne
daa
bnd
sahf
lahf
out
adc
hlt
jne
or
jne
or
inc
jo
clc
push
mov
push
ds
jb
loopne
xor
pop
mov
insb
in
adc
pop
add
push
imul
or
pop
sbb
test
jecxz
push
fistps
in
fstl
mov
hlt
dec
dec
mov
pop
hlt
lea
les
jne
pop
scas
sbb
add
inc
mov
inc
or
cmp
ret
outsl
jb
das
push
out
add
dec
cmp
repz
xor
jp
jns
sbb
les
dec
or
pushf
mov
mov
je
pusha
lea
and
xchg
jne
aas
lods
jmp
pop
fsubs
clc
adc
sti
pop
fwait
cld
popf
or
jne
fstl
pop
pop
insb
push
or
neg
loopne
shrb
sub
lea
dec
in
adc
mov
popf
add
dec
loope
adc
pop
aaa
icebp
cmp
xchg
int
push
ss
faddl
cld
add
inc
loopne
or
or
dec
cmpl
sbb
mov
push
sub
and
sti
push
and
orl
lret
dec
xor
pusha
pusha
dec
lcall
pop
daa
int
inc
mov
fs
and
pushf
push
jne
mov
xlat
add
and
fwait
inc
jnp
enter
sbb
ficoml
mov
or
pop
add
icebp
mov
sbb
push
test
cmp
pushl
jmp
out
or
mov
or
dec
jae
mov
lods
insl
shlb
sub
fmuls
orb
rorb
int3
or
into
inc
shll
subl
andb
and
pop
out
add
pop
inc
cmp
mov
dec
and
xchg
add
push
enter
pop
jnp
pop
stos
fldcw
or
add
ret
jge
pop
xor
dec
sbb
inc
xchg
push
mov
shr
adc
movl
loop
sarl
fwait
and
push
and
cld
dec
fs
jp
push
pusha
ret
roll
lea
inc
cmp
cmp
icebp
nop
xchg
xor
and
mov
rol
cmp
lea
sarb
push
in
addl
subb
test
loopne
cmp
add
sbb
ret
loope
jb
push
jecxz
cmpl
push
xchg
pusha
aaa
dec
sti
push
ds
dec
xchg
xchg
clc
pop
out
pop
inc
data16
popf
adc
or
jo
xor
adc
push
mov
cmc
xlat
loope
test
xchg
movsl
add
push
outsb
adc
xor
movsl
and
xor
inc
push
lcall
dec
push
cltd
nop
adc
adc
cltd
nop
inc
push
push
inc
dec
push
adc
sti
sti
sub
dec
jno
lds
repnz
daa
sub
scas
xchg
arpl
sub
pop
xor
sbb
and
push
sbb
adc
lcall
and
pop
adc
xchg
pusha
sbb
xor
shll
push
adc
and
xor
and
mov
xchg
sbb
or
xor
xor
sbb
jg
adc
xorb
std
sub
popa
add
shlb
push
cmp
cmp
pop
adc
inc
mov
sub
adc
add
jg
jae
mov
inc
jb
add
sbb
test
pop
popa
leave
inc
dec
shrl
adc
addr16
pusha
popf
or
mov
in
and
test
add
add
pop
addl
mov
int
jle
out
mov
jl
dec
mov
or
pop
daa
mov
dec
sbb
or
adc
and
jo
mov
xchg
inc
or
in
adc
xor
and
js
dec
js
jg
je
push
fnstsw
pop
lea
rcr
rolb
movsl
inc
sbb
fdivr
cmpsb
add
loopne
sbb
fcompl
push
xor
and
pop
jne
movsb
dec
sbb
jmp
sbb
leave
mov
leave
movsl
and
in
sbb
dec
je
mov
adc
cmp
cmp
jl
test
les
jge
xor
mov
fadds
jae
les
loope
mov
je
xor
lds
mov
pop
mov
in
call
fadds
pop
or
pop
sub
jb
dec
and
popf
inc
sub
add
dec
shlb
add
add
shlb
insl
es
jecxz
mov
add
add
fmull
inc
lock
or
push
push
fadds
mov
mov
cmp
mov
sub
rorb
mov
aaa
daa
popa
mov
sub
dec
cmc
loop
or
cltd
pop
xadd
divl
sbb
repz
add
sahf
push
sbb
repnz
add
outsl
sbb
loopne
cmp
and
add
mov
gs
push
dec
pop
xor
cmp
pop
syscall
mov
sub
pop
adc
andb
mov
sbbl
pop
push
sbb
shr
mov
adc
mov
push
jne
mov
incl
les
jle
and
or
jge
fmuls
shlb
pop
pop
lock
xor
and
call
mov
dec
add
or
repz
mov
aad
sub
xor
pop
movsl
movsl
push
push
repz
cmp
sbb
or
and
clc
mov
add
js
cld
fwait
sti
mov
inc
push
sub
adc
stos
lock
adc
mov
shlb
lock
cmpsl
xorb
xchg
adcb
adc
stos
jl
arpl
movsl
outsb
dec
jo
mov
cmp
xor
mov
push
mov
cmp
cs
lds
push
mov
pop
call
cmpsl
das
cltd
pop
jmp
out
je
xchg
push
and
call
adc
fiaddl
add
arpl
xor
mov
lret
or
leave
jne
cmovs
add
jmp
inc
lahf
or
stos
push
repz
or
pusha
outsl
mov
xchg
aam
pmaxub
js
xchg
jne
jb
imul
push
sbb
sub
test
sbb
dec
cmp
pushf
scas
push
adcb
nop
push
add
push
mov
mov
rolb
sbb
addr16
adc
movsl
push
test
dec
xchg
xor
addl
in
add
mov
int3
sub
adc
inc
in
jmp
xchg
sub
add
lods
adc
shlb
inc
and
inc
xchg
in
or
jl
push
aas
idivb
add
call
fmull
lea
mov
jo
scas
js
push
popa
jo
and
mov
fisubl
push
je
movsl
ja
or
or
xor
aas
std
leave
cmp
je
or
icebp
xchg
and
xor
add
sbb
sub
fs
clc
xor
insl
es
push
push
cmpb
ret
ljmp
hlt
jae
movsbl
push
mov
add
sbb
mov
add
sbb
pop
add
ds
jmp
enter
ret
adc
lea
and
dec
inc
pushf
add
or
jecxz
or
fwait
fadds
stc
add
mov
icebp
incl
loop
add
sar
add
popf
push
bound
jle
clc
xor
mov
xor
ss
cmp
jecxz
sbb
aas
loope
add
or
adc
push
clc
loopne
or
jne
fs
xchg
outsb
sbbb
fdivrl
imul
or
inc
and
adc
push
mov
jbe
insl
cld
xlat
pop
jo
shld
lea
pop
xchg
rolb
roll
or
ss
subl
insb
cmp
jl
sub
jle
insb
aas
mov
enter
cmp
or
lock
cli
js
fisttpll
inc
add
fistl
jg
aam
jo
mov
cmp
pop
aam
cmp
fwait
push
repnz
add
dec
loop
push
ret
or
lahf
adc
stos
adc
icebp
filds
push
push
lds
cmpsb
push
mov
dec
dec
pusha
mov
pop
mov
mov
fcomps
cmpsl
push
cmc
pop
and
movsb
and
add
add
push
xor
mov
and
or
xchg
xchg
out
pop
sbb
sbb
mov
sub
aas
repnz
loop
sbb
xchg
lret
imulb
or
add
nop
je
rcrb
bound
leave
loopne
hlt
push
jecxz
lock
pop
push
jmp
add
push
xchg
mov
push
fsubl
mov
in
jmp
outsb
pop
mov
pop
add
jmp
push
rolb
push
push
add
push
sbb
add
push
movsb
add
in
mov
push
aam
xchg
mov
pop
and
lods
bound
imul
cmp
into
call
inc
cwtl
pop
push
lods
push
pop
ss
jns
lret
jne
sarb
cmc
int3
ret
pop
out
and
jmp
iretw
jle
xor
stos
leave
sub
dec
or
jns
mov
test
pop
xchg
mov
push
inc
sbbl
and
lret
xor
imul
jo
iret
push
mov
sub
xchg
xchg
cmp
ss
je
xchg
add
adc
sbb
or
mov
pop
rcrb
mov
xchg
pop
ret
sbb
push
push
cmp
push
test
sbb
jge
sub
xchg
sbb
sub
jae
pop
test
rorb
imul
rolb
inc
dec
push
xchg
or
xor
rcl
shl
jge
int
inc
dec
add
int3
mov
fcomps
pop
or
daa
xchg
jmp
or
lock
xor
movb
mov
cmpsl
xchg
lret
add
insb
sbb
aad
imul
sbb
jl
mov
push
push
lcall
inc
mov
mov
xorb
aam
fs
cld
mov
push
jmp
mov
call
dec
add
pop
push
adc
push
or
movb
jae
jns
cmp
xchg
add
int3
int3
adc
xor
adc
push
add
sti
sarl
xchg
cmp
shrl
mov
repz
je
cmp
ds
adc
jp
adc
das
and
and
popa
lcall
and
or
or
or
nop
and
mov
das
adc
sbb
push
pop
test
ss
aam
add
pop
jle
rclb
dec
loopne
adc
and
xchg
leave
xor
hlt
leave
sub
push
bound
cmpl
jl
cwtl
loopne
fdivrl
pop
jge
add
in
add
inc
xchg
pushw
sbb
cmp
ss
push
daa
movsbl
shl
call
test
push
mov
decl
sub
mov
mov
jbe
dec
out
test
jae
push
sbb
lret
sub
outsl
sbb
xchg
rolb
fcoms
es
dec
loope
shlb
pop
cmp
xor
cmpsl
pop
push
push
adcb
pop
dec
push
addr16
xchg
je
add
mov
pop
add
test
nop
test
jo
and
inc
aas
insl
loop
or
les
shlb
jecxz
mov
xchg
pop
outsl
pushf
mov
flds
or
es
add
call
lock
aaa
sahf
inc
push
pusha
es
shr
inc
pop
mov
inc
mov
fiadds
pop
xchg
cmc
imul
sub
add
pushl
rorl
jnp
mov
je
clc
pop
mov
add
add
mov
jo
push
clc
das
xchg
mov
imul
or
cmp
cmp
jecxz
cmc
hlt
mov
bound
mov
jmp
xor
decl
mov
mov
inc
mov
sbb
mov
cmp
jl
dec
mov
addl
mov
push
xlat
sarb
sub
push
idivl
push
incb
mov
add
lods
mov
push
mov
nop
mov
dec
or
cld
test
leave
push
xor
mov
inc
call
jne
pop
jo
xor
and
mov
pop
scas
dec
pushl
out
mov
js
mov
insb
std
and
icebp
into
push
mov
jg
loopne
xor
or
push
add
in
xchg
lret
xor
or
and
mov
push
mov
les
mov
and
cmovno
fcmovb
cmp
push
enter
xchg
std
cmp
ja
mov
push
lock
call
es
les
imul
imul
push
xchg
add
xor
mov
inc
xor
ds
in
lods
inc
xor
and
adc
push
inc
mov
add
pop
jno
mov
push
and
nop
add
mov
mov
sbb
push
or
push
xchg
xchg
push
mov
jl
imul
mov
lds
xchg
cmp
pop
jns
add
mov
iret
xchg
lcall
mov
adc
stos
sub
clc
call
lret
lea
cmp
jbe
cmp
jbe
mov
mov
sbb
fisubl
ret
adc
cwtl
cmp
pcmpgtw
inc
adc
sbb
icebp
or
add
mov
xor
xor
mov
sahf
pop
inc
sbb
push
adc
jnp
call
push
fnstcw
push
ljmp
push
cmp
adc
jmp
push
add
mov
push
mov
sbb
test
pop
ret
and
ret
jge
scas
pop
addb
shll
mov
xor
jno
push
dec
xchg
les
outsl
xchg
lods
jnp
mov
inc
js
shr
cmp
lea
mov
mov
loop
push
push
xchg
cmpsl
test
push
or
dec
xchg
orb
sub
aaa
std
cmpsb
mov
or
add
js
mov
in
mov
sbb
imul
or
scas
test
test
mov
pop
fcomps
mov
push
testl
cmpsb
adc
add
mov
adc
imul
imul
adc
adc
pop
adc
xchg
cmpsb
sbb
and
mov
aad
add
add
jp
and
add
aam
or
icebp
jmp
mov
and
xor
mov
imul
test
push
sbb
repz
inc
enter
jo
pop
add
out
ret
icebp
orb
or
jle
movsb
ljmp
adc
aas
adc
push
mov
icebp
xor
fstl
adc
cmp
xchg
jo
aam
enter
ss
ficoml
and
jbe
dec
lcall
dec
cmpl
jl
sarb
stos
jle
add
pop
inc
add
scas
add
push
aam
dec
pusha
enter
xchg
data16
sub
dec
sbb
or
js
xchg
or
cmpsb
adc
out
fdivl
mov
je
call
test
pop
pop
mov
mov
aaa
loope
lea
lret
maxps
xor
andb
inc
push
or
adc
mov
jmp
push
dec
fwait
movl
and
in
aas
push
pop
fisubs
cmp
fdivrl
xor
pop
fwait
jecxz
outsl
pop
fdivl
mov
cmp
adc
inc
add
sbb
mov
leave
dec
adc
jmp
sub
adc
jae
out
mov
sub
fisttpll
push
pop
je
xchg
xchg
ljmp
fwait
pop
mov
mov
or
mov
insb
pop
cwtl
and
stos
or
xor
pop
pop
sbb
or
adc
addr16
adc
insb
popf
pop
ja
pop
out
int3
sub
ret
sbb
ja
add
add
inc
incl
sub
mov
or
add
xor
mov
jmp
jnp
mov
ret
add
and
xor
dec
mov
adc
mov
xchg
inc
adc
jmp
push
push
push
mov
mov
dec
add
pop
jne
adc
pusha
ret
lahf
imul
push
push
pushl
xor
and
aad
shlb
push
pusha
std
pop
cmp
jbe
add
sub
cmp
outsl
sbb
fcompl
sbb
add
cmp
mov
mov
xchg
nop
cmpsl
or
push
add
push
xor
daa
sbb
pop
clc
jne
mov
mov
push
dec
call
mov
leave
dec
xchg
push
sbb
outsl
jl
sarl
add
cld
out
iret
cld
rcrb
popf
lret
xchg
loop
sub
pushl
jmp
push
movsb
jbe
mov
ss
adc
in
lds
push
push
call
cmp
sbb
push
jp
jb
sahf
jmp
add
shr
mov
jg
and
js
pop
stos
stos
dec
cmpsl
pop
adc
and
inc
jmp
jae
nop
fisubs
inc
jmp
add
sbbb
enter
xchg
rorb
outsl
xor
cmp
push
xchg
pop
pushf
or
mov
mov
sbb
or
push
arpl
pushf
cwtl
and
xchg
sbb
xor
cmpsl
cmp
push
dec
popa
dec
test
arpl
dec
pusha
lock
jns
inc
push
in
jl
sti
push
fs
xor
add
sub
add
adc
jl
push
mov
mov
mov
xor
xor
xchg
xchg
and
insb
mov
xchg
push
jae
lret
inc
shlb
jns
fildll
push
jbe
cmp
push
sub
xor
outsb
or
dec
aad
sub
sahf
add
mov
push
inc
orb
or
aam
inc
nop
mov
nop
xor
test
addb
mov
je
and
mov
and
out
out
or
das
or
adc
dec
clc
in
sub
push
cs
or
adc
js
pop
sbb
mov
ss
and
sub
xor
sbb
into
loopne
js
xor
jl
movsl
jae
cmp
lcall
inc
fiadds
stos
and
cwtl
les
sub
adc
movsb
repnz
or
push
add
sbb
gs
scas
push
push
mov
mov
daa
or
shlb
mov
stos
ljmp
test
pop
mov
jne
ljmp
aam
imul
aad
mov
mov
mov
push
pushf
test
mov
dec
pop
insb
add
loopne
adc
wbinvd
aaa
aam
shlb
add
dec
enter
xchg
and
push
and
and
jne
sub
aam
test
or
sub
adc
nop
push
and
xor
pop
cmp
enter
in
inc
daa
cmp
pushf
les
cmc
add
sbb
dec
cmc
push
dec
jnp
push
fcomps
les
loope
inc
jb
pop
mov
xchg
xchg
test
ret
sbb
pop
fdivs
sbb
add
inc
add
jp
pushf
je
xchg
jge
in
add
and
ljmp
or
popa
insl
add
cs
test
cs
inc
push
lds
pop
inc
lods
or
loope
add
arpl
add
inc
daa
cmpl
test
add
int3
add
mov
ja
adc
decl
aam
or
enter
push
push
iret
sub
mov
jecxz
push
mov
jbe
fcoml
shrb
inc
loopne
mov
jmp
imul
call
pop
xchg
or
std
bound
aam
mov
cwtl
mov
add
push
subb
popf
xchg
inc
ja
gs
iret
xchg
dec
in
pop
xchg
sbb
add
dec
mov
fwait
add
push
adc
mov
push
pusha
shrl
xor
pop
push
or
arpl
mov
xor
movb
jmp
push
int
cmp
jb
cmp
cmp
jmp
inc
aaa
dec
xchg
cmpsl
popa
push
ret
and
mov
roll
and
pop
push
sbb
rcl
add
push
mov
push
mov
push
inc
popa
and
add
out
inc
add
enter
jb
repnz
mov
xchg
sub
jmp
aaa
in
xor
xor
das
je
or
cmp
in
mov
cmp
addr16
je
cmp
jne
mov
sbb
add
dec
clc
push
sbb
dec
lea
idivb
sahf
testl
push
cmpsb
mov
sub
inc
adc
xchg
test
in
je
testl
mov
cmp
jbe
push
lea
mov
jg
loope
cmp
je
sub
inc
jmp
inc
and
xchg
push
xor
or
ficomps
sbb
pop
inc
push
inc
fwait
jmp
or
xor
out
clc
mov
cwtl
pop
cmpsb
repnz
je
aam
mov
push
loopne
xchg
jb
adc
into
inc
pusha
inc
jl
jmp
fiadds
in
xor
pop
and
cld
inc
xchg
cmp
add
mov
cmp
outsb
hlt
cmpb
cmc
xor
cli
mov
scas
push
push
sub
loop
outsb
stos
lea
jb
sbb
js
sub
and
push
mov
inc
push
stos
cmpsb
es
and
add
sar
sarb
mov
or
movsl
ds
push
jno
mov
and
mov
testb
in
cmpsl
pop
pop
imul
aam
add
mov
add
jae
faddl
psrad
add
shrb
inc
sti
lahf
pop
shl
add
jmp
pushf
aas
insb
sti
and
pop
xchg
sahf
sub
in
aaa
push
cmp
js
fs
jne
xor
fwait
push
cmp
adc
incl
or
outsb
pop
jae
mov
jmp
je
mov
dec
shlb
sbb
cmp
jge
test
jne
mov
dec
pop
dec
stc
insb
mov
inc
mov
push
add
add
subl
lret
or
mov
int3
inc
jg
or
jge
out
out
push
xor
and
es
sub
mov
jbe
sub
and
pop
or
jl
or
adc
incl
stos
cwtl
inc
test
jbe
lea
cmp
jbe
pop
je
jbe
pop
arpl
popf
loopne
jne
add
je,pn
test
jne
pop
rcr
sbbb
sub
jb
cmp
xchg
add
sub
xor
adc
movb
inc
mov
and
pop
push
sub
adc
cmp
pop
inc
push
or
add
mov
inc
and
push
push
adc
add
fnsave
loopne
add
ret
cwtl
or
sbb
dec
inc
mov
roll
lcall
shl
clc
push
mov
adc
xchg
mov
and
xchg
mov
push
push
shl
mov
test
or
or
mov
add
pop
ret
jmp
ret
pusha
jl
add
xor
jp
pop
das
movb
sahf
test
imul
xchg
aam
test
clc
add
mov
nop
fimull
ss
out
ficoms
in
or
jecxz
jmp
jbe
push
pop
popa
mov
cwtl
push
or
jp
push
xor
or
loopne
or
jp
test
insb
add
adc
push
mov
loop
cmp
call
inc
push
push
movsb
and
dec
jge
xor
mov
and
mov
int
aas
lock
repz
add
mov
inc
and
fnstenv
push
andl
jg
mov
cltd
pop
cltd
fidivl
movsb
cmp
jp
inc
push
lret
xchg
loope
or
xor
jecxz
or
add
sbb
push
pop
push
movl
push
adc
dec
or
xor
clc
jb
and
jbe
jo
lret
push
and
inc
add
gs
filds
push
mov
stos
repnz
mov
int3
add
imul
movsb
adc
cmpsl
add
les
addl
popf
int
cmpl
loopne
pop
popa
mov
push
pushl
cmp
inc
aam
mov
inc
outsb
faddl
idivb
jae
pop
push
pop
aaa
clc
les
sbb
inc
mov
dec
cmp
pop
psubd
loopne
push
dec
lea
add
pop
sub
pop
in
enter
inc
adc
xchg
out
cmp
pop
xor
and
jbe
aaa
ficompl
push
jo
cmp
inc
sti
inc
inc
fwait
xorb
out
and
sub
jo
pop
xorl
sbb
mov
push
movsl
mov
stos
pop
adc
xchg
mov
sbb
xchg
sbb
cmp
pop
je
test
dec
push
inc
push
shlb
xor
push
fs
add
dec
adc
dec
add
sub
xor
and
dec
push
test
scas
or
sub
mov
loope
mov
pop
je
or
mov
pop
ficoml
jl
mov
in
pop
push
jle
jl
add
pusha
add
add
push
sbb
inc
add
adc
mov
jo
outsl
or
inc
and
pusha
repz
aaa
les
xor
aas
cwtl
push
add
add
pop
imul
sub
push
loopne
xchg
jns
xor
shrb
adcl
inc
or
cmp
ret
or
add
jb
push
mov
dec
cmpsl
add
cli
mov
sbb
daa
push
adcl
fisttpll
aam
dec
cmpsl
daa
out
dec
mov
das
inc
jne
cmpsl
push
and
gs
cmpsb
inc
enter
shlb
lea
inc
test
mov
add
aas
push
push
sub
and
inc
inc
push
push
mov
jle
popf
test
xchg
cs
in
add
xor
pushf
rcll
mov
movsl
push
push
push
in
jge
push
xchg
inc
loope
fnsave
push
fcomps
pusha
pop
push
mov
or
xchg
pop
imul
xor
push
lret
jae
insb
and
icebp
leave
jae
cmp
repnz
in
outsb
and
int3
call
and
push
jno
or
xchg
push
insb
xor
add
mov
mov
xchg
in
or
lcall
cwtl
mov
mov
dec
push
mov
cmp
add
cmp
push
push
lret
mov
sub
jne
mov
aad
jge
neg
pop
xor
insl
jnp
das
movl
and
js
out
into
cmpl
mov
lret
clc
in
andl
out
add
inc
sub
mov
shrb
add
xchg
lahf
jmp
bound
and
jnp
fstps
cmp
mov
push
sbb
dec
bound
or
out
int3
fcmovb
jne
dec
popf
jne
push
mov
jne
lock
setle
testl
pop
mov
push
sysret
xor
xchg
adcb
adc
push
scas
popf
ss
adc
mov
push
imul
pushf
repz
jnp
pop
mov
xchg
push
cmc
xchg
jne
mov
icebp
jbe
fsubs
mov
imul
cmpsl
mov
orl
test
xlat
push
aas
je
xchg
stc
cmp
push
pop
jne
aam
adc
xor
inc
mov
xlat
imul
jne
pop
call
sbb
dec
mov
insl
in
lret
mov
mov
jne
jmp
popf
andl
test
jbe
mov
inc
popa
sbb
push
sub
add
addr16
aaa
adc
pop
lea
mov
add
je
pop
in
push
cmp
subl
mov
andb
push
sti
scas
inc
mov
adc
ss
jmp
pusha
mov
outsb
cmp
jae
scas
jg
add
cs
leave
pop
test
xchg
daa
mov
jg
dec
push
xlat
xchg
mov
sub
cmp
mov
decb
adc
cmpl
das
and
pop
loopne
rolb
movsl
mov
mov
push
pop
cs
lret
pop
pop
fs
push
scas
or
inc
faddl
ja
or
or
or
pop
popa
add
push
sub
and
ret
lahf
les
in
add
cmp
addl
adc
inc
push
dec
adc
ret
loopne
movsl
aas
add
inc
or
and
inc
mov
pop
xchg
add
push
sub
scas
loopne
push
jno
xchg
mov
push
push
push
pop
pop
cs
lret
pop
pop
pop
pusha
pusha
mov
or
movsb
cmp
pop
xor
xor
jae
sub
js
mov
push
add
sub
adc
outsl
xor
js
cmp
in
xor
push
outsb
sti
cmp
adc
and
fildll
sbb
jmp
push
adc
push
lret
mov
cltd
sbb
push
add
sbb
xor
push
or
inc
adc
xchg
mov
inc
int3
adc
push
mov
pusha
sbb
lahf
ljmp
add
push
insb
or
lret
clc
pop
cs
add
daa
mov
inc
xor
adc
leave
es
pop
in
orb
scas
sbb
ljmp
add
xor
or
xchg
js
mov
fwait
cli
jp
push
jecxz
testb
jmp
shr
mov
je
ja
popa
inc
into
or
sti
and
or
imul
add
xchg
and
adc
or
push
fwait
sbb
fstpt
loope
and
aas
cmc
std
inc
insl
imul
hlt
push
mov
or
push
xor
sti
cmpsl
adc
pusha
lods
rcrb
mov
in
inc
sub
sub
jae
pop
pop
xor
mov
jmp
dec
xchg
push
test
imul
imul
je
shlb
in
and
push
mov
or
adc
add
ss
aad
loope
in
sbb
fnstsw
add
adc
add
nop
jg
mov
adc
js
sbb
je
sbb
push
nop
mov
cmp
je
xchg
push
pop
mov
mov
push
jne
inc
pushf
add
pop
sbb
push
imul
push
xchg
icebp
jno
sub
std
or
add
fdivs
mov
outsb
mov
call
push
adc
ds
mov
push
cmp
mov
lock
fcoml
and
add
in
in
mov
cmp
jne
or
jbe
jecxz
jne
adc
popf
dec
ret
sbb
rcrb
cmp
mov
adc
sbb
xor
mov
je
or
daa
mov
add
cmp
pop
lods
xchg
aas
js
bound
sbbl
or
incl
cmp
loopne
inc
inc
or
push
add
adcl
adc
sub
mov
push
in
mov
adc
mov
xor
mov
or
mov
and
cmpsl
push
cltd
mov
cmp
je
divb
push
movsb
ds
jl
inc
or
push
inc
add
add
in
data16
mov
jmp
mov
jb
and
leave
inc
cmp
mov
lea
adc
inc
hlt
mov
mov
hlt
pop
dec
add
lock
mov
mov
dec
loope
shrb
add
mov
hlt
cmp
ljmp
lock
pop
enter
bound
les
mov
sbb
icebp
jp
cmp
or
add
sbbb
outsl
mov
and
dec
xchg
push
or
push
shrb
jg
fdiv
push
and
lea
test
push
out
add
int
and
shr
sahf
rclb
mov
cmpl
mov
inc
jne
addr16
mov
push
mov
adc
test
lea
add
das
je
xor
xchg
push
cmp
lock
mov
out
adc
sbb
dec
add
pusha
scas
xchg
add
push
lcall
lcall
aas
shrb
lock
and
mov
pop
push
fsubl
mov
xchg
and
shll
sub
sbb
sub
xchg
dec
sub
push
xchg
inc
fsub
push
adc
pop
rcl
in
sbb
push
sub
insl
and
push
test
pusha
add
inc
mov
inc
je
adc
mov
and
adc
int3
cli
insb
pushf
testl
out
std
loop
inc
pop
adc
push
xor
sbb
add
push
loopne
mov
in
xor
sbb
adc
xchg
inc
bound
add
jo
pop
jo
add
add
jb
sbb
inc
pop
push
lret
orb
mov
inc
xor
xor
or
rcll
dec
jne
jns
test
pop
sbb
xor
call
push
sbb
inc
and
adc
lds
in
mov
jle
shr
mov
add
jb
pop
cmpl
jmp
mov
ficomps
rcll
int3
mov
inc
shlb
inc
aam
xchg
push
stc
test
fmuls
fdivrl
inc
add
mov
leave
cmc
loopne
movsb
mov
imul
pop
loop
aam
ds
push
and
inc
mov
jnp
push
sub
mov
push
gs
scas
pop
popl
rcr
ljmp
mov
test
fs
jo
out
push
mov
daa
inc
mov
xchg
xchg
inc
cmp
jl
jmp
pop
shl
xor
mov
lock
add
clc
sbb
add
or
mov
mov
scas
in
jnp
push
push
cmp
or
adc
push
fsubl
sbb
in
stos
pop
notl
xchg
mov
sarb
cmp
imul
xor
lea
mov
pop
in
push
push
mov
jge
and
dec
cmp
sbb
push
xchg
pop
rep
clc
int3
pop
xor
xor
lock
xchg
add
jmp
clc
xchg
rclb
aaa
je
dec
clc
inc
push
cmc
ds
adc
xchg
mov
and
inc
out
cs
test
push
push
xor
inc
lods
or
mov
or
inc
add
rorl
sub
mov
push
dec
jmp
je
int3
or
sub
aas
ret
or
mov
lock
aas
sbb
mov
or
sbb
xor
hlt
sub
adc
in
rcl
xor
cwtl
pop
xor
xor
ss
sbb
inc
inc
inc
test
push
data16
add
push
inc
cmp
or
sbb
mov
in
sub
jae
sbb
fs
or
popa
pop
leave
sub
mov
mov
cmp
fstps
or
adc
icebp
adc
inc
lock
cmp
cmp
jp,pt
jnp
and
pop
pop
jmp
push
push
fadd
fldl
or
fstpt
add
cmpsb
mov
xor
push
cwtl
adc
jge
je
mov
jle
jne
lods
push
dec
nop
push
add
add
loope
loopne
loopne
mov
mov
fnsave
test
scas
jge
mov
ret
pushl
push
iret
hlt
pop
ja
adc
push
lods
cmpsl
jo
adc
iret
add
jo
sbb
lods
pop
in
jge
cmp
xor
inc
loop
stos
or
int3
daa
push
lcall
add
imul
movb
pop
push
pop
sub
iret
mov
mov
dec
popl
push
stos
repz
xlat
jp
dec
loopne
mov
js
xchg
pop
bound
out
mov
push
loopne
pop
adc
sub
add
js
push
jle
enter
and
xchg
dec
es
in
xor
jno
imul
ja
insb
cmp
or
mov
xchg
jo
or
inc
jno
dec
mov
jb
push
cmpsl
mov
adc
dec
add
cmpsb
add
sub
stos
cmpsb
or
loop
or
cmp
jbe
lods
aad
push
sahf
loopne
sbb
adc
add
js
in
xchg
xlat
data16
cmp
popa
shll
leave
fsubrl
pop
lret
dec
xor
and
adcb
add
and
or
adc
mov
stos
xor
cmp
test
add
popa
adc
cmp
dec
or
cli
rcr
roll
jbe
push
popf
cmpsl
lods
push
in
mov
int
out
and
pop
sbb
push
push
mov
out
cmc
loopne
addb
arpl
hlt
inc
mov
loop
cmpsb
push
test
mov
jmp
pop
lock
arpl
movl
and
adc
pop
test
xor
and
adc
es
sbb
mov
cmp
and
push
sbb
cli
dec
and
add
ret
lock
inc
sbb
xchg
imul
cmovl
fcoml
and
mov
jbe
arpl
dec
flds
mov
mov
dec
movsl
sbb
lcall
ret
cmp
ja
xchg
movsb
fsubl
adc
and
jcxz
sbb
mov
movsl
pusha
enter
push
shll
loope
pop
xor
lret
and
in
fs
and
aam
sbb
test
mov
shl
add
test
imull
repz
inc
jge
or
adc
fs
fsubrs
sbb
sub
les
adc
fdivrl
mov
or
xor
lods
sub
xchg
xor
pop
ret
mov
jg
pop
xor
sahf
jg
add
mov
movl
dec
add
mov
movsb
mov
fldenv
add
pop
movl
dec
insl
movsl
jne
mov
inc
dec
sbb
sub
cwtl
movsb
jge
repz
daa
test
push
pop
dec
push
push
xor
outsb
push
mov
pop
mov
and
outsl
or
lcall
add
sub
inc
mov
push
mov
mov
push
mov
pushf
sbb
adc
add
ds
and
sub
adc
dec
arpl
dec
xchg
add
daa
dec
xchg
mov
loope
fnstenv
cmp
imul
adc
jnp
sbb
inc
popf
dec
jnp
andb
push
lods
cmpsb
or
and
popf
mov
xchg
sbb
divb
mov
add
push
sub
and
aam
pop
and
cmc
inc
lcall
jmp
pop
jae
std
fidivrs
adc
subl
jno
mov
mov
pop
sbb
inc
push
dec
in
fnstcw
movsl
adc
jl
xchg
fstl
ret
xor
mov
push
xorb
adc
sbb
nop
movsb
jmp
jge
adc
loopne
add
inc
movb
fsubs
call
jnp
repz
and
sbb
je
addl
push
mov
and
roll
mov
xor
mov
adc
adc
xchg
test
fs
dec
ficompl
out
jnp
pushf
lods
xor
pop
lret
jnp
add
sub
gs
adc
dec
test
mov
fisttpl
neg
and
cmp
pop
movsb
inc
pushf
add
cs
mov
jno
cmc
testb
ljmp
mov
shlb
pop
dec
push
faddl
xor
shll
mov
inc
sub
xchg
xchg
loope
cmp
iret
fs
xchg
lcall
pop
and
push
mov
push
add
mov
outsb
ds
das
and
mov
mov
cmp
pop
jmp
adc
stc
enter
lods
pusha
jne
jo
lahf
adc
fistpll
incb
jge
bound
test
xchg
lcall
jo
lock
rclb
and
cmp
call
fcoms
int
adc
and
jge
cld
addr16
pop
cmp
jbe
adc
bnd
sti
data16
pop
add
sub
enter
push
sahf
and
jnp
mov
lret
mov
bound
popf
fbstp
xor
sti
mov
stos
sahf
pop
jbe,pn
fdivl
ret
adc
mov
test
insb
sbb
popa
add
jp
xchg
mov
shll
les
mov
les
insl
popf
jecxz
mov
enter
mov
cmpl
sbb
fsubr
push
dec
dec
imul
mov
and
adcl
xlat
je
xor
mov
adc
inc
arpl
les
les
decl
pop
xchg
addl
pusha
ret
inc
verr
lret
sbb
incl
cmp
push
pushf
inc
mov
scas
mov
pop
sub
add
pop
jmp
jmp
mov
inc
adc
sub
dec
dec
int3
and
or
cmc
add
push
add
cs
inc
fcomps
fwait
add
dec
popf
dec
loop
popa
mov
lret
or
push
nop
rclb
sub
add
adc
or
xchg
icebp
add
mov
out
push
bound
pushf
mov
and
fisubl
arpl
js
mov
push
pop
mov
sbb
adc
sarl
or
mov
jne
pop
mov
xchg
jne
mov
ret
jmp
cmp
dec
pop
push
adc
xchg
jle
fiaddl
dec
or
sbb
pop
inc
mov
test
push
pusha
cwtl
add
mov
leave
sub
cmp
sarb
rclb
add
roll
pop
mov
push
fiaddl
cs
movsb
push
pop
or
add
lds
xchg
push
mov
xchg
mov
inc
push
mov
sub
jb
mov
push
rcl
cmp
push
adc
das
loopne
lods
mov
xchg
sub
cmp
push
jge
jp
lcall
cmp
pop
adc
fwait
inc
js
jmp
cltd
or
jp
or
xor
insb
jmp
je
test
sub
add
out
xor
call
movsl
dec
add
insb
loope
shlb
aam
dec
mov
add
pop
add
mov
or
adc
leave
jo
jmp
dec
mov
push
cmpsl
dec
jne
ret
dec
pop
add
sub
shlb
add
jbe
xchg
pop
adc
push
adc
xchg
xor
adc
arpl
push
test
orb
sub
cmpsl
nop
adc
mov
adc
ficoms
xor
pop
bswap
pop
add
enter
jle
jp
rcrb
or
mov
mov
lods
push
and
ds
cmp
cmpb
jl
pop
shll
ficomps
testb
clc
dec
push
pop
jp
cmp
mov
sbb
sbb
out
clc
mov
and
jp
add
inc
push
adc
test
inc
sub
add
xor
cmp
lds
fstps
xor
xlat
out
dec
xor
push
inc
add
ljmp
popf
rcll
fs
enter
adc
repz
and
enter
dec
es
xor
gs
adc
adc
and
inc
sbb
or
sub
inc
jae
lock
add
jl
lods
mov
dec
jmp
clc
push
mov
cmpw
je
mov
push
ret
fldcw
push
lods
data16
cmpsl
sbb
or
or
xor
neg
leave
add
inc
mov
cmp
loope
push
jl
and
sub
jo
mov
lret
xor
push
inc
mov
test
call
jmp
xchg
inc
in
jl
fcmovnu
cmova
xor
jmp
cmp
out
add
mov
sub
cmp
adc
je
xchg
jo
push
or
ss
push
push
es
xlat
xorb
lea
in
mov
add
stc
test
cmc
mov
sub
add
cmp
mov
popf
mov
jecxz
rolb
lret
mov
adcb
add
dec
or
into
xor
sbb
in
mov
xor
test
in
xor
inc
popf
fcoml
addr16
sbb
test
cmp
or
pop
pminub
and
aas
mov
pop
sub
dec
call
aad
je
hlt
add
mov
out
push
mov
add
jno
fdivs
mov
addr16
popf
mov
sahf
xchg
mov
jge
cmpl
sbb
push
out
mov
mov
inc
loop
ret
imul
mov
inc
pop
cmp
ja
dec
iret
loopne
ret
or
mov
mov
test
popf
pop
adc
lods
cmp
inc
dec
fsubrl
push
push
push
mov
pop
mov
fnsave
testb
adc
pop
mov
add
jmp
pop
cwtl
push
sbb
mov
out
mov
add
mov
jo
insb
mov
sbb
notl
testl
test
sbb
inc
stos
js
inc
add
icebp
push
movsb
adc
insl
sub
inc
push
sub
push
in
and
mov
cmp
sti
inc
xor
cmp
into
or
pop
pop
arpl
loop
sar
cmp
ja
out
xchg
fnstsw
jmp
add
sub
je
lods
into
push
je
or
test
test
sar
and
pop
sub
and
aad
inc
repnz
push
repz
push
xchg
imul
mov
pop
cmp
pop
lock
imul
or
in
leave
cmp
cmp
add
push
xorl
add
inc
push
sbb
mov
cmp
stos
cmp
and
add
clc
data16
jo
push
mov
fbstp
push
dec
je
push
xchg
inc
inc
mov
cmp
push
xchg
mov
fstps
push
push
fistpll
inc
je
push
dec
and
push
loopne
pop
add
add
fistpll
ds
cmp
clc
mov
push
jp
inc
lret
out
adc
out
cmpsl
pop
xor
ljmp
cmp
lret
push
outsl
movsb
jne
or
addl
into
mov
inc
loopne
push
or
pop
inc
sub
sbb
mov
or
sbb
dec
orb
adc
lret
jno
mov
frstor
jmp
gs
mov
lcall
adc
pop
inc
and
mov
movsb
in
test
cwtl
ljmp
sbb
inc
leave
inc
ret
adc
or
ljmp
cltd
repnz
cmp
mov
lea
loope
sar
cmpsb
int
mov
lea
mov
inc
test
cmp
into
mov
aas
repz
add
cmp
inc
dec
adc
roll
lods
ljmp
jmp
cmpl
push
mov
jbe
mov
pop
adc
inc
adc
jl
or
jo
add
popf
dec
adc
mov
and
rorl
stos
jne
push
into
or
int
push
jmp
adc
movsl
jmp
mov
lret
jp
xor
add
in
test
mov
std
xor
comiss
sbb
popa
jns
lea
sub
xchg
leave
ud0
or
mov
dec
fildl
inc
jmp
jo
pusha
push
roll
and
push
sbb
mov
and
push
loopne
jne
xchg
imul
push
sahf
push
imul
pop
inc
inc
cmp
jne
pop
stos
js
push
mov
aam
sub
push
mov
mov
xor
stos
dec
fadd
lea
mov
cmp
jmp
orl
cmp
dec
jnp
scas
repnz
add
ljmp
add
andl
lea
mov
fdivs
mov
fucomip
cmpsl
adc
cmp
mov
loope
inc
and
dec
jge
loope
je
xor
jecxz
add
mov
leave
mov
bnd
nop
push
mov
push
xorl
inc
dec
or
and
or
mov
ja
push
adc
add
sub
sub
cs
lcall
pop
xorb
in
adc
or
adc
stos
mov
adc
mov
ss
xchg
adc
sub
cltd
fisttps
and
insl
mov
sarb
sbb
pop
clc
cmp
sbb
add
pop
add
mov
in
dec
mov
jle
xor
xchg
std
bound
xchg
bound
ret
add
jb
stc
jg
lock
pop
lcall
inc
or
pop
push
das
mov
adc
in
mov
dec
pop
sbb
in
ss
dec
mov
test
cld
and
adc
fs
daa
inc
adc
mov
adc
add
cwtl
in
xor
aas
jl
jmp
addr16
pop
sbb
adc
dec
dec
mov
pop
add
ss
push
mov
stos
mov
sub
aad
sub
dec
je
dec
imull
loopne
jmp
repnz
lea
popl
jle
lret
cltd
push
add
pop
mov
pushf
jae
lea
jmp
cmpl
filds
je
inc
cmp
jbe
incb
iret
bound
mov
out
loopne
adc
xor
xchg
in
fnstenv
pop
scas
mov
inc
clc
sbb
loopne
leave
in
mov
pop
mov
add
xchg
out
jo
inc
or
insb
sbb
imul
loop
fidivl
fcomip
stos
pop
fnstsw
movb
sub
rorb
cld
and
addr16
mov
sbb
pop
int
pop
jbe
repz
add
xchg
dec
xchg
sub
insb
pop
insb
add
jb
sub
sbb
add
popa
and
xor
adc
ja
and
sti
add
js
mov
or
sub
mov
add
test
push
leave
and
repnz
dec
outsl
pop
addr16
lea
pop
test
mov
test
mov
mov
fidivrl
dec
bound
pop
shll
mov
pop
mov
mov
cmp
mov
gs
daa
pop
xor
push
push
sub
and
add
and
push
je
mov
push
movsb
jg
and
idivb
rolb
test
lds
js
add
stc
out
xchg
movsl
rclb
fsubrs
xchg
mov
inc
fsubs
and
push
addb
push
pusha
ja
push
sub
test
movsl
das
push
sbb
add
jae
enter
push
push
pop
adc
out
lea
mov
and
sub
cmp
jge
inc
xchg
add
xchg
nop
add
pusha
test
jbe
dec
add
xchg
andl
popf
xchg
inc
dec
jp
add
pushf
sbb
lds
pushl
push
pop
nop
movsl
mov
and
and
fucomip
or
cmp
mov
sbb
enter
mov
stos
sub
push
push
pop
xor
adc
pop
xchg
inc
adc
lahf
rorl
addb
test
cmp
subb
pop
pusha
or
jb
je
add
push
cmp
data16
cwtl
or
outsb
mov
push
or
je
test
out
xchg
data16
adc
jne
mov
pop
negb
cmp
dec
or
sub
pop
xchg
movsl
and
out
cmp
addb
stos
es
pop
sub
sub
dec
je
sbb
xchg
mov
hlt
hlt
iret
popa
in
jns
or
adc
scas
test
pop
xor
push
add
cmp
jae
nop
sub
insb
add
sbb
fsts
mov
push
js
fistl
dec
rorl
cld
loopne
fnstenv
mov
sbb
rcr
scas
stc
repz
or
fsubrs
in
or
xlat
or
inc
mov
ja
push
cmp
xchg
sub
lahf
lea
xorl
mov
add
mov
addb
pop
pop
pusha
cmp
mov
mov
movsb
cmp
jnp
hlt
neg
sbb
and
bnd
movzwl
push
sub
push
adc
jg
dec
test
sbb
and
and
jne
repnz
je
adc
xchg
xor
repnz
sbb
in
fucomi
adc
mov
mov
scas
fnstenv
push
inc
inc
pop
adc
shlb
jge
add
cmp
jbe
or
jne
push
jnp
mov
in
dec
cmp
test
sarb
adc
cmp
cmp
gs
mov
push
jmp
cmp
jl
add
push
push
ja
test
setb
jbe
sbb
ja
lea
jmp
ds
cmp
adc
test
in
loopne
ss
pop
jp
mov
jl
cmp
or
cmpsb
insl
pop
or
adc
sbb
jp
iret
sbb
sbb
jbe
shlb
xchg
js
adc
hlt
popa
adc
shlb
mov
clc
out
inc
jecxz
sbb
add
mov
imul
jp
insb
stc
add
sub
notl
mov
call
scas
cld
pop
and
dec
cmp
out
aaa
mov
or
test
enter
aam
adc
inc
or
dec
cmp
mov
or
or
or
add
fadds
rorl
call
mov
adc
sbb
sbb
outsb
adc
inc
pushl
andl
leave
ret
mov
jp
movsl
clc
dec
inc
sbb
ret
imul
addl
mov
aad
xchg
cmp
inc
sbb
sbb
dec
pushf
adc
lods
jle
xor
lock
fiadds
pop
xor
or
cmpl
xor
xchg
or
add
push
add
mov
mov
out
addr16
push
call
sub
cld
jge
lods
and
push
leave
sbb
or
mov
jne
push
mov
addr16
filds
jecxz
or
inc
adc
add
jmp
xor
add
xchg
xchg
out
xchg
cmpb
jbe
sbb
mov
jb
addr16
je
mov
shlb
xor
cmp
pop
pusha
and
pusha
test
add
cwtl
or
and
aam
sbb
jmp
cmpb
push
fcmovnu
rol
testb
add
rcrb
or
pusha
mov
pop
or
add
int3
add
xor
dec
loopne
pop
or
je
cmp
jbe
out
cli
sbb
cs
je
cmpsl
adc
sbb
pop
xor
sbb
mov
xlat
sbb
mov
jg
outsb
xor
mov
std
lock
mov
faddl
jae
imul
fcomps
cmp
arpl
aad
xchg
and
adc
rolb
and
and
mov
jmp
outsl
cmc
push
arpl
cltd
sahf
rcrl
je
jmp
push
xchg
in
lret
daa
jp
dec
mov
fnstcw
mov
adc
cmp
add
pop
sub
sbb
icebp
push
jle
test
bound
pop
pop
imul
js
cmp
cmp
xchg
xchg
arpl
packsswb
test
pop
mov
add
sbb
xor
leave
xor
and
in
ret
add
jnp
movsb
mov
xchg
addr16
lock
and
dec
lock
pop
jl
push
and
pop
xchg
mov
mov
xchg
inc
shrb
and
fisubl
jle
xchg
sub
loopne
xor
or
xchg
inc
sub
bound
jno
add
pop
loopne
lret
lea
and
das
mov
pop
lds
mov
sub
inc
clc
outsb
mov
in
push
sbb
inc
subl
mov
out
push
aam
call
fcomps
add
jo
mov
and
or
popf
sub
jle
out
pop
sbb
fisttpll
xchg
lods
test
loopne
push
popf
inc
clc
loopne
cmpb
or
pop
xrelease
subb
jge
lea
lcall
pop
fsub
in
push
pop
jle
cmp
push
clc
and
push
mov
sti
inc
shl
outsb
in
rcr
push
cmp
mov
mov
add
arpl
sarb
ret
xchg
fwait
lods
adc
in
xchg
repnz
pop
out
int3
rcrl
mov
pop
test
dec
fcomps
and
pop
lea
mov
add
xor
fistpl
cmp
popf
pushf
xor
outsl
jno
or
imulb
cmp
pop
enter
and
mov
js
adc
cld
pop
js
push
jae
lea
ja
cmpb
jne
cmc
xchg
push
fidivl
push
out
add
pop
cmp
mov
daa
les
adcb
xor
daa
xchg
pop
xchg
fprem1
pop
pop
mov
lea
out
mov
push
dec
or
pop
test
leave
xor
mov
mov
jbe
adc
scas
xor
jae
xchg
xor
jmp
push
inc
sub
dec
and
dec
shl
push
xchg
add
sbb
push
adc
add
mov
mov
or
mov
add
and
popw
cmpsb
pop
push
sbb
adc
or
out
xchg
fisttps
xor
scas
pushl
adc
add
adc
imulb
inc
testb
mov
add
and
sub
inc
push
sub
sbb
loope
adc
jne
pop
xchg
sysret
push
lea
cmp
ret
push
in
jle
movsl
sub
popf
mov
ja
xchg
sub
pop
adc
pushf
cmp
mov
nop
and
je
sub
or
fsub
add
dec
or
or
xor
push
adc
pop
dec
add
xchg
jbe
lahf
or
inc
scas
popf
adc
addl
insb
pop
mov
sub
mov
pop
add
mov
push
xor
push
and
iret
and
inc
cmpl
adc
lret
pop
pop
or
xor
inc
and
dec
add
or
orb
bound
addb
subb
adc
scas
insb
or
jmp
push
pop
mov
mov
lea
cmp
adc
mov
jge
test
adc
push
push
mov
fisubl
out
sbb
jmp
lret
adcb
xor
add
adc
add
aad
add
sbbb
pop
or
mov
daa
bnd
mov
mov
cmp
jbe
mov
add
jb
push
jae
lea
push
add
les
and
push
add
push
jge
pop
sbb
cli
dec
les
adc
ret
sub
adc
outsb
test
enter
fdiv
loopne
inc
andl
jge
insb
les
jg
fcompl
cmpb
xor
fnstenv
inc
jmp
push
cmp
push
xor
clc
jg
mov
mov
lea
pop
add
xchg
filds
movb
add
sbb
jb
sub
movsb
repnz
push
sub
jmp
push
sti
sbb
add
add
test
insb
mulb
call
sub
testb
lcall
cmc
lock
sbb
push
shrb
in
xor
push
xchg
mov
mov
xor
outsl
mov
enter
pushf
out
test
fiaddl
push
lea
cmpsb
test
popf
xchg
addr16
stc
cmp
lret
xor
repnz
cmp
stc
ljmp
push
out
jmp
push
inc
cmp
lahf
cmp
imul
dec
add
push
and
fdivs
sub
loopne
cmp
movsl
loope
loope
cmp
cmp
int3
js
fildll
or
lods
lret
and
lret
fiaddl
cmpb
les
adc
js
vmread
pop
jne
scas
lods
pop
mov
cmp
sub
push
inc
or
pop
call
inc
inc
es
inc
cmp
lahf
push
pop
sti
and
enter
and
pop
fdivs
aaa
and
or
and
test
jno
aas
push
mov
in
mov
fimuls
das
add
cmp
arpl
fmull
movsl
xor
cmpsb
imul
mov
mov
fsubrl
shrb
out
roll
in
movb
cmp
and
xchg
push
jbe
roll
xlat
xlat
cmpsl
pop
rclb
xlat
push
inc
rcrl
sub
mov
pusha
add
adc
push
mov
mov
cmp
adc
pop
add
push
jle
mov
xchg
pop
pusha
sub
inc
js
and
jge
mov
cmp
shlb
pop
lock
push
xchg
test
dec
pop
shlb
cmp
rolb
ds
push
lock
arpl
add
shlb
cmp
jb
in
ret
xchg
clc
dec
cmpl
inc
mov
pop
pushl
sbb
scas
inc
mov
popa
sbb
adc
inc
sbbb
repnz
or
inc
pop
lock
mulb
sub
popa
incb
pop
fsts
mov
inc
inc
add
adc
aaa
lock
dec
cmp
shrl
dec
inc
pusha
and
or
icebp
dec
jo
cwtl
mov
popa
mov
or
dec
adc
mov
pop
dec
inc
gs
mov
xchg
std
mov
movsl
dec
in
mov
sub
inc
mov
hlt
mov
cmpb
jp
inc
adc
or
das
popf
and
mov
adc
dec
inc
hlt
pop
fistpl
adc
or
mov
inc
push
pop
dec
dec
sub
cmp
dec
sbb
add
imul
jg
mov
sbbl
pop
dec
push
lret
pop
mov
mov
sbb
mov
mov
pop
rcl
push
gs
adc
adc
push
dec
jmp
and
mov
icebp
push
push
test
lock
add
mov
fcompl
sub
or
mov
cld
jge
add
scas
jle
jne
xchg
xchg
sub
mov
cmpsb
sbb
xchg
sbb
push
sub
or
mov
mov
pop
pop
add
inc
or
push
call
fildl
dec
fdivs
test
lock
xchg
pop
xor
xorb
cmp
cmp
ja
mov
loop
loopne
or
and
push
xor
in
sub
dec
and
cld
std
xchg
ret
or
xorl
sub
pop
push
jl
adc
cmpl
ret
mov
adc
jp
inc
adc
or
adc
and
or
dec
test
and
lret
inc
in
inc
inc
push
xlat
add
or
test
push
in
orb
rcll
leave
push
jmp
cmpsl
or
imul
enter
or
out
daa
push
adc
add
xchg
gs
xor
cli
push
mov
mov
xchg
pushf
xchg
adc
movsb
adc
cs
gs
mov
mov
int3
and
jo
loopne
nop
mov
pushf
and
pop
fwait
pop
mov
popf
dec
daa
ret
dec
cmp
push
push
out
mov
mov
push
call
pusha
push
push
lcall
cld
add
sbb
or
inc
or
add
fs
mov
xchg
push
pop
push
mov
push
mov
xchg
inc
add
dec
popf
push
orl
or
inc
dec
andl
xor
dec
and
popa
cmp
xor
clc
push
push
jnp
les
mov
sub
push
xor
jbe
xor
mov
loopne
popa
adc
mov
imul
sbb
sbb
inc
sbb
push
jecxz
pop
push
jle
and
mov
mov
test
loope,pt
and
push
and
add
or
aam
mov
xor
sbb
push
lahf
popf
adc
fstl
add
and
fs
aad
mov
and
pop
xchg
leave
xchg
push
cld
lret
rolb
mov
in
inc
push
loop
push
mov
dec
and
in
test
fiaddl
neg
imul
xor
sub
mov
or
push
jne
sub
inc
add
cmpsb
rdpmc
push
pop
les
push
mov
stos
or
add
inc
pop
push
mov
jmp
xchg
pop
or
add
mov
das
movsl
out
sbb
add
std
fs
sub
hlt
js
icebp
mov
sbb
repz
addr16
sbb
sahf
cld
push
adc
cld
shll
js
and
int
lock
dec
clc
test
xor
xor
into
dec
mov
mulb
das
dec
addr16
loopne
jne
nop
ret
inc
xchg
xchg
xchg
or
push
and
clc
popa
in
xchg
push
or
mov
mov
std
mov
fsubl
cmp
mov
mov
add
mov
mov
xor
jp
xchg
test
jmp
mull
inc
adc
rorb
pop
jecxz
mov
jl
subl
rcrb
cmp
lods
out
dec
sbb
lea
test
cmc
jmp
stos
dec
and
hlt
rolb
cmc
inc
jg
adc
mov
mov
std
pop
mov
sub
push
sub
push
cld
pop
lods
and
dec
add
inc
or
mov
scas
rcll
inc
and
sbb
icebp
dec
pop
call
repnz
es
and
rcr
movsb
idivb
pop
fsubrs
push
dec
or
ja
jecxz
sahf
and
mov
int3
mov
subb
mov
andb
pop
imulb
in
daa
sub
or
mov
jmp
into
out
adc
mov
sub
add
mov
xor
xor
fists
cld
idivb
xor
add
mov
test
fisubrs
outsl
push
xor
add
mov
pop
adc
out
decb
jl
mov
leave
xor
jb
fs
aaa
sbb
aas
lea
mov
sbb
cmpsb
loop
pop
out
sub
fimuls
jmp
pop
adc
rolb
mov
sub
mov
pop
mov
add
rclb
or
es
add
mov
add
movsb
mov
rorl
dec
adc
lock
je
inc
dec
cmp
xchg
pusha
cmp
mov
and
push
add
loope
sahf
adc
push
js
je
rorb
adc
shr
test
or
push
pop
ret
push
lret
dec
scas
add
push
pop
xorb
sub
movsl
movsl
imul
xchg
mov
xchg
mov
imul
fnstcw
mov
or
pop
pop
add
js
and
xchg
mov
test
xor
sub
jo
mov
pushl
sub
mov
mov
and
xchg
pop
push
dec
adc
rcrl
cmp
push
addl
mov
in
mov
inc
gs
cmc
popa
aaa
add
inc
adc
iret
pop
pop
push
mov
fadd
rorb
enter
sbb
push
pop
push
pop
inc
adc
dec
cmp
call
lret
pop
in
xchg
scas
femms
lods
pop
loop
adc
add
adc
lea
or
das
mov
ffreep
test
add
mov
jns
jno
xchg
jne
mov
mov
hlt
or
pop
sbbb
or
cli
jne
push
add
testb
adc
or
or
outsl
jg
data16
jne
or
jne
mov
push
stc
and
andl
inc
call
divl
mov
ret
lahf
cmp
and
xchg
fmull
pop
fcoms
or
bnd
sbb
rcrl
xchg
or
in
test
lods
repnz
cld
notb
popa
icebp
mov
cmp
scas
in
outsb
imul
rorb
pop
jle
lods
push
dec
push
xchg
push
add
xchg
push
jnp
hlt
jne
xor
sarb
sub
mov
adc
mov
push
push
cmp
mov
jge
fiaddl
push
bound
adc
imul
and
sbb
cmp
pop
mov
dec
scas
lcall
inc
inc
sbb
mov
enter
clc
xchg
loopne
jg
pushf
pop
and
mov
pop
jnp
mov
js
push
cmp
push
out
add
ret
mov
iret
mov
lret
adc
sbb
inc
out
pop
sub
repnz
lret
xor
pop
and
dec
aam
push
sar
andl
push
inc
addr16
clc
mov
cli
cli
rolb
push
jne
dec
cli
iret
xchg
mov
or
pop
sub
sbb
jne
add
jns
xor
push
xor
fdivs
jne
or
sbb
dec
pop
or
scas
insb
jne
data16
jne
jle
mov
scas
aaa
mov
movsb
add
pop
call
jmp
mov
add
dec
jo
out
adc
or
cmp
je
push
pusha
pop
cltd
icebp
in
push
or
or
fs
subb
je
aam
mov
imul
popf
add
movl
data16
pop
or
xchg
cmp
push
je
jne
jnp
push
cmp
xchg
jno
loope
cli
push
cmp
fdivs
mov
jl
mov
mov
addr16
prefetchw
or
fidivs
movsb
mov
pop
sbb
sbb
or
cmc
push
jecxz
out
or
loopne
mov
cmp
rcrl
push
test
xor
outsl
fsubl
and
push
dec
aaa
jecxz
es
stc
lds
jnp
icebp
pop
mov
adc
or
mov
mov
loopne
pop
loopne
fisttpll
orb
mov
inc
mov
add
int3
add
call
or
inc
or
add
cmp
add
nop
sbb
add
ss
insb
in
imul
inc
dec
shrl
or
arpl
or
add
cmpb
push
rorb
inc
sbb
test
mov
inc
mov
push
add
shlb
dec
or
add
pusha
xor
shll
push
pusha
pusha
sarl
mov
dec
adc
rorb
fsubr
repz
cmpsb
cwtl
sub
jo
or
mov
dec
int3
inc
xorb
mov
xor
addr16
scas
sub
lock
test
ror
adc
xchg
std
out
gs
pop
movb
sbb
dec
xor
mov
subl
jae
popf
nop
xchg
push
fadds
sbb
je
sbb
add
nop
add
movsl
mov
jle
jp
addr16
mov
inc
test
imul
dec
or
push
adc
push
dec
inc
dec
and
add
sbb
adc
mov
sbb
pusha
cmp
lods
mov
addps
cmpb
iret
sbb
adcl
mov
jne
mov
cltd
hlt
test
loopne
cli
and
lea
and
imul
js
xchg
jne
sbb
loopne
jne
dec
cmp
mov
leave
cmp
adcb
cmp
sbb
mov
add
jb
sbbb
cs
std
mov
mov
xor
aam
push
call
mov
mov
adc
dec
and
jbe
fwait
inc
sub
jl
test
add
shl
ret
or
inc
fimull
adc
and
shlb
je
sbb
xor
ret
and
das
xorl
cmp
inc
mov
mov
and
daa
sbb
fsubrp
inc
dec
adc
imul
push
pop
xor
dec
test
jmp
and
xchg
mov
outsl
pop
xlat
or
mov
jns
push
sub
fldl
sar
es
push
lds
add
jle
stc
or
repnz
jmp
push
clc
push
pusha
mov
inc
xchg
lret
movsl
les
mov
pop
jmp
roll
xchg
stc
push
jne
lock
fcmovbe
mov
sub
mov
jl
jne
cmp
mov
cmp
rcll
jne
xor
add
fwait
pop
movsb
xchg
pop
imul
sbb
jo
dec
mov
pop
ret
and
dec
jo
movsb
into
js
in
and
dec
js
testb
ss
xchg
sbb
adc
mov
into
cmp
push
lahf
dec
jns
push
inc
cmp
bound
push
popf
dec
cmp
lock
pop
insl
cmpsl
or
cli
out
fidivrs
xchg
push
adc
adc
lods
pop
mov
pop
pop
cwtl
rcrl
jae
xchg
ret
jle
pop
mov
dec
or
aam
add
mov
es
lret
fs
fsubrl
sarb
pop
xor
lea
push
call
adc
jecxz
xchg
xor
nop
loopne
inc
call
in
push
mov
scas
mov
outsb
dec
rorb
sbb
lea
call
pmaxsw
andb
pushl
xlat
jmp
jbe
adc
orb
jp
xor
lock
inc
jo
dec
inc
inc
pop
sbb
inc
lock
adc
sub
jne
or
sub
sti
mov
inc
mov
fs
xchg
pusha
pusha
insb
insb
ret
sbb
scas
les
mov
or
cmp
mov
push
jmp
lcall
mov
pop
cmp
je
popf
sbb
and
jne
fadd
nop
push
mov
cmpsb
mov
sbb
sbb
adc
pop
mov
hlt
sti
push
shrb
mov
inc
and
jo
push
jne
or
dec
roll
push
movsb
subl
adc
jnp
lock
xchg
or
lock
lock
push
mov
mov
cs
or
leave
aam
and
push
jo
cmp
push
sbb
xrelease
push
mov
shll
jg
cmp
push
mov
mov
ret
mov
and
jecxz
rclb
mov
cmp
lret
sub
xor
push
cmpsl
push
cmp
xor
inc
push
cs
ja
inc
sbb
test
and
pop
xor
mov
adc
push
push
test
or
inc
scas
xor
adcl
lahf
push
ds
es
roll
or
inc
jle
jge
mov
and
shrb
jne
adcb
jae
mov
les
leave
adc
in
insb
test
push
test
popa
cs
jns
data16
aam
mov
xchg
lock
mov
loopne
je
push
aas
jne
sbb
in
imul
mov
outsb
cmp
repz
inc
mov
fistl
pop
enter
mov
stos
fsubrs
xor
loopne
sbb
jnp
fwait
sbb
or
push
and
xorb
dec
push
lea
test
mov
mov
sbb
dec
push
add
xchg
orl
cltd
lret
pushfw
mov
fcoms
add
pinsrw
pop
sub
add
ss
push
add
and
mov
mov
pop
arpl
mov
mov
sbb
enter
sbb
into
or
inc
cmp
or
sbb
inc
adc
add
cmp
pusha
addb
sub
sub
fcoms
cmp
fdivs
cmp
or
sbb
sub
std
lods
aas
fildl
notb
jge
int3
mov
jg
xor
stos
push
pop
xorl
add
lods
xor
lret
mov
push
jbe
and
movsb
sub
insl
push
subb
nop
subl
out
insb
cmp
and
pusha
or
cwtl
jno
adc
push
push
dec
dec
inc
leave
push
scas
pushf
sarb
and
out
push
adc
xor
push
xor
adc
mov
daa
and
push
lea
sbb
and
pusha
cmp
mov
jecxz
push
xchg
dec
inc
mov
sbb
push
push
push
in
inc
rcll
or
ja
adc
fsubp
fstl
inc
pop
mov
mov
cmpl
pop
enter
jecxz
pop
push
fmuls
xchg
lds
std
push
es
jp
mov
in
push
and
je
push
clc
add
test
in
je
out
mov
arpl
dec
mov
rcrb
pop
aam
jae
iret
mov
or
xor
xor
xchg
ret
cmovge
or
pop
mov
movsl
add
mov
lcall
mov
jecxz
xorl
and
push
pusha
jmp
adcl
add
addb
add
orl
shll
out
xlat
mov
push
or
jmp
insb
or
insb
xor
pusha
add
sbb
aaa
das
cmp
push
add
fs
sbb
cmp
repnz
sub
out
dec
ds
fidivl
and
push
dec
repz
lea
inc
and
imull
dec
or
in
dec
mov
pop
adc
add
mov
repnz
adc
rcll
shr
aad
int3
and
test
push
aam
test
inc
push
sbb
gs
loope
sub
clc
mov
andl
inc
jnp
jp
inc
push
or
fsubrl
jno
push
and
faddl
sub
lds
adc
fadds
subl
sbb
add
test
xor
call
lods
pop
hlt
lods
lret
adc
push
cmp
jo
je
in
cmp
push
icebp
jns
push
ljmp
add
fs
sti
cmp
jp
push
add
call
or
pop
mov
jb
push
and
fs
adc
iret
arpl
push
xchg
pop
pop
pop
push
jge
cmp
mov
push
pop
cwtl
push
add
and
and
pop
dec
add
call
or
push
mov
and
lods
leave
push
xor
sub
out
aam
icebp
cmpsl
mov
and
mov
or
mov
or
shrl
pop
push
xchg
int3
call
mov
dec
or
push
sbb
push
cmp
das
inc
ret
outsb
mov
sbb
xchg
cmp
push
jnp
xor
xor
ss
xor
sbb
push
inc
xor
dec
leave
push
jb
cmp
nop
add
ret
ret
xor
add
fwait
xchg
add
out
ret
mov
add
add
cld
fistpll
pop
fadd
sub
inc
or
imul
cmp
fscale
js
lea
int3
and
lds
or
mov
push
dec
pop
push
or
or
mov
push
inc
and
push
shr
daa
xchg
bound
mov
outsl
or
lods
stc
inc
cmc
js
inc
adc
pusha
lea
jmp
pushl
cmp
push
pop
mov
pop
add
push
dec
pop
mov
sub
mov
cmp
dec
push
inc
xor
enter
pop
sub
outsb
cmp
push
sbb
dec
into
fs
pop
test
push
mov
fbld
xor
mov
repnz
jle
inc
andl
adc
jb
mov
js
push
in
in
fs
addr16
add
add
jae
mov
xor
jecxz
call
dec
xor
pop
jo
push
or
sti
push
or
fcomi
nop
push
scas
inc
xor
sub
push
fcoml
fildll
fstl
nop
jo
insb
pop
or
or
gs
inc
adc
test
add
jmp
xlat
push
mov
inc
popa
jl
push
push
pop
rol
lds
dec
jl
and
pop
sbb
inc
loope
loop
je
push
pop
loop
mov
xor
pop
mov
pop
and
js
in
pop
adc
adc
cmp
outsb
das
pop
bound
xor
dec
or
add
call
mov
hlt
or
inc
jno
movsl
add
sub
enter
jae
adc
add
mov
sub
clc
daa
inc
xor
popa
sarl
push
subb
sub
dec
ja
sbb
imul
pop
testb
je
fdivl
sub
or
dec
jl
loope
xor
push
cmp
or
adc
lret
jl
inc
push
xchg
popw
mov
pusha
push
fisttps
data16
add
inc
mov
leave
pop
adc
sti
pop
mov
or
mov
sub
stc
je
inc
add
mov
mov
add
sbb
mov
lock
bnd
cmp
dec
add
in
mov
arpl
movsl
sarl
add
add
dec
xchg
push
push
pop
or
and
push
push
pop
stc
shlb
arpl
push
or
mov
mov
mov
push
test
mov
xchg
add
or
or
cmovle
loopne
pop
ds
mov
pop
xlat
xor
cmp
push
xchg
lcall
movl
xchg
mov
xchg
cmc
adc
add
fucomi
test
inc
or
mov
jo
jmp
es
xlat
dec
movsb
frstor
pop
push
pushl
inc
pop
cwtl
imul
subb
pushf
push
addb
mov
arpl
mov
mov
pusha
cmp
push
ret
lods
fwait
rcrb
enter
mov
or
mov
inc
mov
pop
pop
test
xor
push
push
adcl
cmp
aad
leave
scas
add
movsl
add
dec
push
and
push
mov
push
xor
cmp
rolb
push
xchg
fcoms
adc
sbb
mov
xchg
aas
or
inc
cmpsl
inc
sub
daa
js
imul
and
ds
push
cmp
inc
jmp
sub
add
adc
add
push
stos
loope
ret
xor
sar
mov
inc
adc
mov
inc
movb
adc
adc
bound
sbb
sub
push
jo
rorb
cli
sub
scas
push
sbb
inc
dec
adc
xor
sahf
fisubrs
pop
push
or
jae
mov
testb
lods
mov
xchg
fcomp
mov
xchg
lock
cwtl
cmp
cmp
inc
in
cmp
lcall
and
je
push
inc
lods
pop
xor
add
xor
cmp
test
adc
sbb
adc
pop
lret
inc
cmp
adc
fnstcw
pop
sbb
push
sbb
mov
insb
xchg
xor
add
rclb
xchg
mov
nop
je
push
int3
scas
sub
push
gs
mov
in
sbb
sahf
cmpsb
enter
loope
pop
jmp
mov
mov
dec
jo
jae
mov
int3
and
cli
push
cld
pop
or
dec
pop
jg,pt
lahf
movsl
jge
movl
shr
inc
add
cmpl
out
push
loopne
es
xchg
adc
cmp
sbb
fiadds
jo
sbb
or
pusha
insb
std
jg
insb
mov
mov
sub
repz
div
jno
or
es
stc
pop
insl
out
in
fiadds
fsubs
into
xchg
ss
sbb
ja
add
inc
mov
arpl
sub
push
pop
adc
inc
mov
add
cmp
sub
in
dec
sbb
pop
int
push
jnp
jno
int
dec
add
xor
insb
dec
lods
push
insl
mov
mov
jne
das
push
or
shrd
sbb
test
jb
arpl
pop
mov
push
sub
add
mov
adc
mov
adc
cld
loopne
adc
or
lds
mov
test
insb
insb
inc
xchg
or
dec
mov
adc
popl
push
pop
xor
cmpb
add
pushl
dec
xchg
pop
inc
test
mov
inc
xor
sbbb
xor
je
dec
cmp
cmpsl
pop
arpl
add
mov
jnp
inc
or
mov
push
mov
lret
lcall
push
jne
or
pop
lcall
mov
lea
push
inc
xor
cmp
icebp
add
adc
movb
or
jns
jbe
leave
add
cmpsl
loopne
sub
fs
mov
loope
sub
xchg
push
add
xor
push
xor
adc
cmp
jmp
dec
sbb
and
loopne
or
cld
or
and
mov
cmpsl
mov
pusha
pusha
cmp
adc
xchg
lock
add
mov
pop
cld
push
add
popa
fistpll
sub
cmpl
sub
or
mulb
je
push
inc
aad
or
out
mov
lea
aam
jp
xor
push
cmp
outsl
fisubs
ret
adc
push
push
pop
and
and
je
cmp
xchg
push
lcall
add
jg
adc
icebp
mov
leave
incl
hlt
add
cmp
mov
adc
cmp
push
jbe
aad
xchg
in
mov
les
fs
inc
jae
pop
and
xchg
xchg
fidivl
mov
repnz
popa
loope
loopne
pop
testl
cmp
dec
es
xor
adc
fsubrp
test
sbb
dec
mov
or
pop
ljmp
pop
cmpl
push
imul
pop
or
aaa
sbb
loopne
pusha
jle
insb
loope
sub
add
and
dec
sub
sbb
add
into
cwtl
add
sbb
pushf
sti
mov
jl
je
or
stos
inc
fcoml
testl
or
mov
adc
in
loope
dec
or
ret
xchg
rcl
sub
pop
rclb
and
adc
insl
jne
and
xchg
scas
rorl
adc
or
push
jae
push
push
sbbl
mov
sti
and
pop
lods
jmp
pop
pop
enter
push
push
je
fiadds
out
push
mov
dec
in
mov
xchg
mov
les
push
mov
sbb
scas
push
sub
dec
ret
or
inc
push
loope
add
dec
imul
xor
andl
dec
add
adcb
or
loopne
testl
mov
jbe
and
cmpps
sub
test
pop
ja
fdivrl
das
adc
cmp
imul
add
add
lret
mov
xchg
mov
and
aad
mov
rcll
pop
mov
into
xor
mov
mov
mov
stos
sti
push
inc
dec
jno
or
popa
jecxz
lds
mov
cmpsb
jno
das
in
daa
rol
cmpsl
sahf
in
push
test
sub
or
js
or
mov
ja
lea
cmpl
push
cmp
sub
or
and
add
sahf
cmpb
push
dec
es
add
cmp
adc
testb
loopne
xchg
adc
adc
mov
adc
loop
fadds
and
pop
sub
nop
out
push
xchg
or
push
aam
nop
push
push
jno
out
movsl
push
cmpsb
jne
ret
outsl
nop
dec
jbe
cmpsl
xchg
bound
sub
sub
je
sub
mov
icebp
sti
das
adc
in
adc
push
cmpl
and
stos
add
mov
sahf
push
jnp
pop
inc
push
andb
jmp
cmp
mov
pusha
push
adc
adc
imul
jo
mov
mov
mov
add
xchg
sbb
mov
out
push
mov
clc
sub
jge
cmp
adc
push
jae
mov
mov
mov
adcb
mov
cmpsb
or
add
jns
lcall
sbb
mov
push
lods
sar
sbb
adc
sub
xchg
xchg
and
loopne
rclb
and
ror
aad
pop
jmp
push
nop
xor
mov
inc
ret
fmuls
push
imul
add
jp
cmp
in
ret
adc
adc
or
loopne
cld
inc
outsb
fucomi
aad
inc
scas
in
stos
mov
cmpsb
enter
or
ret
push
inc
js
xchg
adc
inc
aas
add
push
nop
sub
ds
in
test
insl
inc
pop
std
dec
jmp
or
inc
and
xor
pusha
mov
push
and
push
inc
out
dec
pop
and
nop
sbb
loopne
push
or
add
jne
push
or
push
testb
pusha
pop
and
shll
sub
dec
pop
sub
adc
fsubl
lods
push
cmp
mov
loop
add
xor
out
je
push
push
add
loope
xor
sub
push
mov
push
into
push
jge
mov
mov
dec
rorb
push
pop
add
mov
push
mov
subl
push
and
inc
add
pusha
daa
push
or
xor
addr16
lcall
xchg
cmp
inc
xchg
cmpsb
fcompl
or
shrl
sbb
mov
dec
push
dec
push
das
add
xchg
cmpl
gs
mov
rcrb
add
add
dec
and
inc
mov
sbb
cs
jns
fsubr
inc
inc
scas
dec
in
cli
dec
mov
in
rol
ds
add
imul
pop
xchg
mov
punpckhdq
inc
js
lods
jp
pop
mov
scas
add
mov
cmp
fcoml
fsubrp
push
xor
jno
cmpb
movsb
cmp
fsubs
push
test
add
adc
inc
xchg
push
add
jle
ds
fs
jl
mov
xor
and
mov
sub
lods
dec
aam
lock
jp
adc
in
inc
mov
push
xchg
dec
adc
loope
shr
inc
sbb
mov
popa
add
lods
or
sbb
orl
mov
bound
adc
fcmove
repz
adc
push
cmp
pop
sbb
or
sub
hlt
sub
xor
inc
lds
ret
dec
jl
je
mov
ss
xor
mov
inc
mov
xchg
lock
mov
adc
jb
data16
and
push
xor
loopne,pt
mov
hlt
dec
inc
fcoml
adc
call
cmpsb
test
div
hlt
inc
mov
lds
dec
pop
andb
inc
ja
bound
or
sbb
cmp
cmpsl
test
sub
outsb
or
mov
and
inc
jb
dec
je
daa
or
in
dec
pop
sub
mov
pop
add
ret
mov
pop
mov
imul
or
outsl
and
test
mov
std
add
sbb
and
sbb
mov
sub
mov
mov
add
pop
sbb
add
inc
adc
inc
jle
cmp
enter
inc
or
xchg
or
jne
fmull
lahf
inc
shll
test
test
mov
mov
mov
arpl
jae
in
cmpsl
push
sbb
subb
inc
cmpsl
push
jp
push
gs
jle
pop
fwait
adc
leave
je
rcl
add
xchg
das
fsubrs
fmull
out
adc
add
jge
push
xchg
push
sub
sub
imulb
push
imul
xor
xor
and
xor
sbb
sub
and
sub
cmp
hlt
inc
lock
xor
add
dec
or
enter
call
outsb
inc
daa
or
nop
cmp
ja
outsl
mov
scas
add
mov
sti
orl
and
mov
popa
je
pop
mov
and
pushf
mov
sbb
adcl
push
or
adc
andl
movsb
rorb
mov
push
int3
out
add
jp
lods
out
dec
and
xor
les
dec
push
mov
add
and
cmpsl
insb
or
mov
mov
jp
sbb
lods
cmpl
sbb
sub
sbb
and
pop
movsl
and
ficoml
or
iret
xchg
jo
popl
stos
hlt
popa
mov
xor
sti
and
test
xchg
or
les
fisubrs
mov
inc
and
lahf
push
jmp
or
push
pop
pop
enter
fldt
pop
jne
loopne
push
push
les
sub
or
sbb
jne
inc
mov
movsb
in
or
adcl
jp
or
in
adc
push
js
je
fwait
xchg
cmp
jge
lock
int3
dec
mov
sti
inc
loope
out
or
jl
sbb
out
ret
lret
xchg
pop
das
push
sbb
push
loopne
xchg
jmp
std
push
fisubl
and
adc
jmp
cmpsb
sub
jo
lods
dec
adc
and
mov
out
sub
adc
inc
daa
pushf
pop
cmp
mov
sbb
lea
jl
xor
cmpb
add
push
ss
les
stos
aad
adc
inc
and
push
cmp
pusha
popa
and
test
push
js
pop
jno
sub
or
push
push
into
jle
out
sti
push
add
pop
adc
add
mov
sub
pusha
lcall
ds
adc
test
sub
in
mov
dec
dec
add
nop
push
sub
add
xor
sbb
push
das
inc
push
sbb
push
dec
popa
push
test
sub
sbb
mov
sub
adcl
adc
sqrtps
jae
lods
clc
mov
sub
jo
add
arpl
rorl
cmp
and
icebp
in
addr16
xchg
lods
movb
xchg
push
repz
lock
test
jecxz
ljmp
mov
icebp
jo
mov
fsub
pop
rcrb
jg
cmp
loope
mov
xchg
out
xchg
into
ret
lock
add
sub
in
roll
push
outsl
dec
or
or
sub
js
in
pop
or
cmp
popa
add
mov
int
call
adc
push
sbb
stos
das
push
loopne
push
mov
popf
les
cmpsl
mov
in
dec
and
mov
add
cmp
fimuls
dec
pop
sti
and
dec
mov
inc
lahf
mov
loop
cwtl
push
inc
dec
dec
xchg
mov
and
je
stos
je
cmp
inc
or
add
push
pushf
add
fnop
push
or
arpl
fisubs
cld
imul
mov
gs
rorl
adcb
addb
cmp
leave
mov
add
add
outsb
jmp
cmp
pop
adc
adc
outsl
xor
cmpb
sbb
loope
push
data16
negb
stos
or
dec
jp
inc
adc
xor
jo
pop
imul
lea
dec
out
movsl
idivb
add
orb
jmp
adc
stos
cltd
push
jb
sbbl
fdivs
fsubl
xor
sbb
adc
lahf
push
pop
dec
or
mov
inc
dec
rolb
and
sti
imul
jne
xchg
mov
sbb
push
and
cmp
imul
adc
sub
and
nop
int
pop
imul
imul
frndint
andb
dec
add
int
push
push
lcall
jae
mov
xor
cmp
sbb
imul
insb
es
cmp
imul
ss
push
rcrl
inc
mov
mov
xchg
imul
dec
mov
insb
add
clc
dec
pop
insl
or
jmp
push
test
clc
or
push
or
insb
ljmp
xor
pop
jp
stc
cmp
push
pop
push
pop
xchg
sub
int3
repz
sti
push
pop
pusha
push
inc
jg
out
rclb
mov
pop
inc
orb
call
bound
dec
xchg
dec
push
adc
add
sahf
add
mov
push
cmp
push
ds
sbb
jbe
pop
adc
and
mov
movsl
test
pop
sub
sub
and
pushw
pop
push
dec
test
sahf
mov
popa
fsubl
stos
test
sbb
sbb
push
or
andb
sbb
test
or
dec
pop
inc
sahf
iret
or
test
ret
pop
fisttpl
lock
mov
test
inc
ucomiss
fsubrl
pushf
lea
ss
mov
xor
adc
je
cltd
fdivl
in
into
iret
in
pop
lcall
sbb
xchg
and
in
fwait
inc
sub
adc
and
in
shrl
mov
sbb
mov
js
fimuls
cmc
push
ja
imul
push
pop
sub
lcall
cmp
xor
jns
loopne
loop
sbb
push
stos
mov
incl
jne
enter
add
pop
pop
mov
icebp
xchg
adc
push
inc
xchg
addr16
sbb
popf
add
sub
rcrl
shlb
orl
rolb
lock
push
loope
int3
xchg
setl
add
xlat
xchg
xchg
daa
add
pusha
insl
loopne
adc
mov
in
ret
pop
insb
and
aaa
inc
xor
add
push
mov
add
icebp
lcall
repz
add
repz
adc
lea
push
mov
insl
cld
scas
loopne
sbb
adc
mov
clc
loopne
mov
loopne
loope
jl
test
and
pop
addl
mov
insl
sbb
push
repnz
or
cmp
xchg
push
ret
fadds
xchg
cmp
push
mov
sbbb
add
or
or
or
cmp
jne
sbb
cmp
adc
jl
jp
mov
mov
sbb
popf
mov
and
inc
add
fisubl
push
aaa
adc
jmp
adc
push
cmp
loope
mov
add
call
scas
or
jge
pusha
mov
fidivrl
lret
jecxz
xchg
pop
leave
sti
test
dec
and
push
and
jmp
fdivs
cmp
push
fsubr
or
adc
addr16
in
xor
sbb
imul
leave
insl
test
push
inc
pcmpeqw
xchg
adc
enter
jns
sub
add
sub
adc
aaa
add
push
iret
jecxz
outsb
lret
jns
inc
mov
sub
jge
iret
xchg
xor
cmpsl
jo
sub
jmp
mov
sub
das
xchg
lock
push
and
mov
jnp
push
loop
add
xchg
pop
dec
fwait
lds
pop
inc
scas
ficoms
lock
dec
mov
push
and
adc
or
por
mov
pop
or
or
push
sub
cmpsb
sub
xchg
addl
add
sbbl
das
mov
es
scas
pusha
movsl
push
pop
repz
push
aaa
sub
add
rcll
scas
cltd
xor
leave
push
xor
enter
ljmp
mov
fnstcw
insl
pop
add
mov
insl
jno
dec
es
mov
inc
lock
add
add
xchg
mov
cld
pop
and
push
add
push
adc
sbb
popl
in
push
cmp
sub
stc
add
test
push
mov
lcall
fcomp
cmp
push
lea
add
mov
mov
inc
cmp
push
cmp
push
pop
rolb
push
inc
pusha
dec
mov
pop
sbb
lret
into
js
test
test
push
mov
push
add
dec
sub
cmp
add
aad
imul
in
sti
mov
mov
mov
ljmp
xor
and
inc
xor
and
lock
nop
mov
or
mov
fsubl
and
ja
push
pop
inc
pop
add
or
mov
inc
lea
int
pop
test
ret
lock
ret
out
mov
int3
xchg
add
jge
mov
xor
into
mov
adc
ret
xchg
jne
xor
jb
pop
inc
xor
mov
cmpsb
inc
lcall
mov
and
movsl
scas
add
je
inc
and
cmp
loope
or
scas
mov
inc
push
imul
inc
mov
jnp
cld
je
flds
push
jbe
pop
dec
mov
push
mov
notb
pusha
xor
divl
sbb
and
push
nop
repnz
insb
test
mov
and
aaa
lock
push
ja
clc
hlt
push
icebp
push
inc
sbb
push
shrl
mov
andl
add
pop
mov
cmp
jnp
loope
add
inc
push
mov
addl
adc
inc
jecxz
call
repz
scas
mov
leave
mov
mov
sub
mov
sbb
adc
add
inc
imul
adc
pop
sbb
push
mov
inc
or
mov
mov
add
jno
repnz
iret
jmp
mov
xchg
xchg
jno
or
aaa
mov
or
in
in
xchg
push
push
dec
stos
sbb
sbb
ljmp
pop
mov
out
inc
and
or
enter
andl
mov
mov
aas
mov
jo
jmp
xor
loope
adc
or
mov
inc
pop
jp
test
rcrl
inc
nop
pusha
pop
cmp
sub
and
dec
dec
dec
and
xchg
push
aaa
add
add
and
and
dec
sub
jmp
push
push
adc
sbb
jle
bound
jle
rep
mov
mov
mov
push
stos
dec
hlt
pop
ret
aaa
xor
add
ret
xchg
sbb
frstor
pop
enter
or
xor
sbb
jns
mov
arpl
imul
repz
inc
popa
mov
cmpsl
or
rclb
sub
push
hlt
pop
xor
mov
pop
add
mov
push
popa
shlb
xchg
je
and
std
mov
add
rorl
daa
xchg
push
mov
xor
push
es
or
push
push
fisttpll
push
adc
pop
adc
inc
add
ret
push
mov
cwtl
jmp
test
popa
imul
or
jecxz
xchg
inc
pop
roll
mov
test
xchg
in
nop
push
clc
sbb
adc
jge
out
data16
in
lcall
call
test
pushw
mov
push
pop
testl
nop
jbe
lock
mov
or
ret
sub
pop
fdivrs
pop
inc
inc
cmp
jb
xor
adc
add
andb
pop
arpl
test
mov
xchg
push
inc
sbb
cmp
or
dec
mov
or
adc
and
popa
loopne
inc
xor
push
inc
adc
cltd
inc
adc
push
add
add
push
sti
jl
test
xor
xchg
jg
cmp
jg
jp
faddp
decl
mov
loopne
pop
adc
test
out
decl
inc
jle
dec
add
jmp
add
shll
push
imul
movsl
xor
popf
out
lock
es
cmc
andl
inc
mov
shr
es
add
push
int
inc
push
xor
in
mov
mov
or
mov
call
xor
pop
pop
inc
dec
inc
pusha
dec
test
pop
mov
xor
add
fiaddl
jecxz
mulps
push
cli
cli
movq
movl
loopne
lds
popf
xchg
int3
fidivs
add
xchg
dec
xor
add
or
or
push
bound
and
inc
add
mov
push
mov
mov
inc
rcl
cli
scas
push
in
sbb
add
mov
sub
mov
mov
pop
sub
mov
pop
addr16
addl
iret
inc
adc
popf
cmpb
sub
adc
leave
inc
sbb
clc
or
scas
pop
jb
sub
push
xor
add
call
hlt
rclb
enter
sbb
add
mov
xchg
bound
xchg
rcll
es
lret
rcll
push
jl
cmp
push
mov
dec
jb
mov
inc
vmovaps
leave
add
dec
and
aam
idivb
dec
sub
or
xchg
push
sbb
cwtl
and
adc
xor
in
sahf
mov
xor
cmp
sub
xchg
cmp
mov
loop
mov
push
inc
xor
out
das
cs
sbb
jmp
sub
out
or
pushl
add
scas
push
outsl
inc
pushf
addb
scas
andl
cmpl
push
pop
sub
push
push
mov
cmpsb
sub
and
push
mov
mov
mov
outsl
jmp
data16
xor
aas
sub
popa
jg
adc
adc
pop
ja
sbb
mov
mov
insb
xor
sbb
adc
fdivrl
push
lods
mov
cmp
fcmovne
push
mov
sub
push
ret
xchg
into
add
dec
pop
in
repnz
sti
add
mov
xchg
icebp
scas
push
iret
test
mov
insb
xor
rol
cwtl
sahf
jae
cmp
mov
push
push
push
or
cs
jmp
shrb
sbb
and
and
and
lods
push
or
orl
int3
dec
roll
lock
out
sbb
mov
push
sbb
sbb
inc
ds
mov
or
inc
std
lock
mov
mov
ljmp
or
rcll
mov
dec
xchg
push
sub
jl
cmp
adc
xlat
mov
adc
adc
inc
lods
cmp
pop
push
add
lock
cmp
out
inc
cmp
orl
sub
and
sarb
xchg
std
movsl
add
loopne
mov
shlb
push
adc
push
loope
sbb
inc
sbb
loope
inc
and
sub
rcll
outsb
push
xchg
rcll
ss
sbb
jno
adc
xchg
mov
mov
lock
testl
es
clc
adc
rcll
pop
test
add
cmp
into
mov
cmp
and
fs
jge
lods
xchg
clc
add
repnz
jne
push
adc
js
inc
adc
xor
jnp
adc
mov
or
or
xchg
adc
adcl
inc
dec
add
movsb
bound
fcom
or
cmp
or
mov
adc
inc
cmp
xorb
add
xor
add
outsl
xchg
inc
pop
sub
sub
loopne
icebp
rol
add
aam
mov
add
rcrb
mov
andb
mov
mov
and
es
shrb
inc
add
jecxz
in
and
push
jmp
mov
xchg
jb
imul
push
push
or
and
jnp
jo
rcrl
add
sahf
ja
test
fnsave
push
mov
mov
call
cmp
out
or
push
imul
sahf
shrl
cltd
leave
loopne
dec
jl
pop
push
imul
out
je
cmp
call
mov
pop
js
cmp
sub
push
inc
sub
sbbb
fbstp
mov
push
push
push
sub
or
test
sbb
lcall
push
mov
mov
jle
inc
push
loopne
dec
sbb
sub
jo
cmc
cmp
jecxz
mov
sbb
xor
or
mov
push
pop
loopne
ret
cmp
and
push
enter
adc
dec
hlt
adc
push
cmc
icebp
jo
inc
jmp
dec
ss
mov
sbb
dec
add
jne
sub
dec
sub
aaa
outsb
sar
push
jp
sub
fstpl
mov
push
mov
cli
cmp
jb
jae
ror
mov
jp
es
xchg
ss
hlt
jae
pop
jae
jne
popa
and
pop
in
mov
adc
xorb
icebp
mov
mov
add
or
inc
inc
push
push
mov
sub
sub
stos
cmp
shl
inc
cmp
mov
sbb
pop
dec
xchg
push
lods
dec
jnp
vphaddubd
cmp
and
stos
movsb
cmp
xor
or
ret
mov
jb
inc
push
enter
xor
sbb
sbb
xlat
ret
insb
and
shrb
adc
sbb
or
cmp
cmp
or
mov
rorl
mov
arpl
sbb
enter
add
insl
jb
lahf
jo
adc
mov
test
jo
arpl
sti
arpl
fstl
mov
flds
int
adc
and
ret
mov
nop
adc
pop
jae
mov
clc
jae
lret
scas
jge
inc
xorb
or
xchg
adc
xor
and
ret
adc
mov
mov
addr16
divb
adc
call
test
xchg
into
add
lock
pop
inc
stos
and
xchg
push
add
cs
add
inc
xchg
cmpsb
or
inc
xor
enter
add
sbb
movsb
jae
aas
and
push
xchg
and
push
nop
xchg
sbb
push
nop
inc
cmp
sbb
es
sbb
xchg
push
xchg
sbb
sub
xor
aas
or
adc
cmp
subb
jb
pop
mov
xor
test
xor
or
xor
mov
mov
fsubrs
test
stc
fidivrl
cld
or
std
push
adc
pusha
adc
movsl
sub
or
sbb
loope
arpl
cmp
jp
test
mov
fdivl
pop
mov
sub
fs
insl
sbb
fwait
subl
lods
add
cmp
call
test
mov
fldt
pushl
pop
push
fisttpl
xchg
or
cmpsl
inc
test
push
in
jnp
int
rorb
adcb
lds
fistpl
or
jg
mov
sarb
jns
fimuls
enter
imul
or
mov
and
mov
jge
bt
jo
pop
popf
xchg
xchg
add
mov
mov
dec
push
push
cmpsb
jle
xor
hlt
ja
push
or
or
out
movb
mov
push
adc
dec
sub
sub
pusha
jno
mov
in
push
mov
pop
fcoms
pop
push
enter
add
lods
int
in
push
dec
pop
lock
adc
lods
add
mov
or
push
or
adc
stos
loope
sbb
iret
ret
fs
arpl
call
adc
out
jecxz
popa
xchg
andl
lea
push
mov
scas
dec
pushf
addb
pop
adc
dec
add
mov
push
inc
mov
std
shl
fsubl
xor
aas
mov
mov
pop
nop
jo
push
adc
fdivrl
addl
mov
jbe
mov
jmp
cmp
add
mov
aas
push
jns
addl
movsb
inc
add
push
sub
dec
xor
lods
rcrb
pop
or
add
sub
mov
gs
addb
int
inc
pop
movl
stos
adc
outsb
sbb
lea
dec
lea
sub
jne
aas
cmp
jbe
dec
adc
jl
imul
lods
jae
cmpsb
in
adc
adc
pop
pop
lcall
daa
lods
adc
arpl
and
adc
insb
mov
and
and
push
movsb
imul
lock
dec
sbb
aam
jb
dec
and
xor
fistpl
inc
pop
out
mov
push
cmpsl
push
mov
pop
fmull
push
pop
jne
aam
sub
gs
push
enter
js
or
mov
in
mov
das
dec
addr16
xor
roll
dec
push
mov
test
aam
call
les
cmp
loop
adc
xlat
and
movsl
cmp
jae
sbb
inc
fistpll
push
jmp
dec
jmp
cli
push
jmp
mov
pop
jge
or
sub
push
xchg
dec
or
inc
jne
pushf
xor
sbb
ret
enter
dec
jmp
adc
fsubs
adc
pop
stos
sbb
jnp
out
js
mov
push
insb
sub
dec
jge
jnp
loop
and
push
cbtw
or
and
push
adc
or
test
daa
pop
push
cmp
jl
mov
adc
lods
ret
nop
sbb
adc
jbe
jmp
stos
orb
push
add
dec
ja
add
sub
add
sub
or
and
pop
sub
push
mov
scas
rcll
mov
pop
stos
sub
jo
mov
add
dec
push
jbe
cmp
add
mov
and
test
loopne
xor
pusha
pop
mov
popf
daa
out
lret
rolb
popa
add
or
pusha
testl
xchg
adc
enter
incb
jne
xchg
pop
push
push
aaa
data16
jle
mov
lea
jecxz
cltd
inc
push
in
dec
out
sarl
sbb
addb
jg
gs
pop
cli
sub
insl
fdivl
push
push
jno
and
aas
push
je
pop
push
add
inc
pushf
popa
sar
rclb
int3
insl
arpl
inc
pop
lret
out
mov
and
fwait
arpl
movsb
je
xchg
jmp
mov
xchg
loope
xor
jns
jg
mov
stos
fcoms
aaa
cltd
xchg
adc
cs
into
ret
call
pusha
pop
adc
pop
pushl
pop
or
lock
push
sbb
pop
fsts
ss
cld
push
pop
movsb
rol
int
loopne
imul
and
nop
pop
pushf
xchg
inc
xor
xchg
push
sub
jg
movb
inc
pusha
dec
movsl
fadds
dec
sub
push
add
adc
push
lods
push
lahf
adc
lods
or
sbb
or
es
scas
shll
into
inc
incb
ret
push
mov
and
and
dec
int3
movsb
out
test
int3
test
xor
pop
push
cs
mov
mov
fmuls
ss
cltd
movsb
out
or
frstor
mov
jg
cmp
xchg
or
negl
and
dec
subl
and
arpl
popa
dec
cmp
xor
or
add
sbb
add
addr16
icebp
push
and
or
xor
sub
xor
inc
shlb
jg
cmp
jbe
repnz
and
cmpl
push
scas
sbb
outsl
sub
test
pushf
sbb
outsl
push
stc
push
adcl
add
mov
gs
in
cmp
das
and
and
ds
or
adc
cmp
test
arpl
lret
add
sub
inc
insb
xor
push
xchg
xchg
push
pusha
xor
lahf
callw
mov
ja
or
push
pop
call
xchg
aam
adcb
enter
rcl
jns
test
push
lahf
push
pop
push
dec
int
mov
fstl
cltd
test
test
mov
adc
ss
inc
mov
adc
add
sbb
mov
add
mov
or
adc
scas
dec
add
imul
aam
jp
cli
xchg
mov
sub
mov
repz
fisttpll
push
sub
xchg
jnp
add
nop
cmc
std
adc
push
pusha
test
push
or
mov
test
lcall
sbb
add
sbb
mov
or
out
repnz
xchg
or
rclb
es
inc
ss
push
mov
subb
mov
outsl
shlb
cmp
inc
stos
lahf
in
mov
pop
dec
mov
add
test
test
ds
add
shl
jecxz
pop
inc
mov
cli
cmp
pop
in
cs
mov
or
mov
mov
push
mov
jg
pop
ss
ret
jp
push
dec
in
scas
mov
add
scas
xchg
xor
mov
and
call
shrl
dec
das
adc
sub
push
addl
add
pop
xor
movsb
add
sub
iret
push
add
push
mov
push
pop
add
push
cmpsl
fnstenv
rclb
lea
cmp
adc
test
movsl
repnz
or
call
pop
mov
outsb
push
lahf
les
jecxz
clc
adc
cmp
mov
das
lds
aad
test
pop
lret
sub
pop
sub
cmp
push
and
fsubrl
test
xchg
lods
call
nop
mov
insb
cmp
dec
xor
and
or
out
mov
xchg
shr
or
rolb
jo
and
out
popf
pop
mov
inc
call
pop
sub
pop
or
adc
push
das
stc
dec
inc
clc
dec
lock
xchg
mov
sub
jmp
jns
adc
inc
pushf
adc
mov
jo
rolb
fsub
inc
push
dec
test
jnp
lret
in
or
mov
nop
xchg
dec
sub
xchg
cwtl
pushf
push
mov
sbb
pop
ret
push
cmp
loopne
test
movsb
shll
sub
stos
mov
ss
int
sbb
inc
dec
popf
mov
or
mov
out
mov
movsb
shlb
pop
cmpb
lea
movb
frstor
lods
jmp
cmp
cmp
movsb
mov
pop
mov
popf
mov
aad
mov
ret
adc
add
cmp
dec
call
inc
cmc
jnp
jge
lea
pop
addb
mov
adc
shll
or
dec
mov
xor
cmpb
push
mov
xchg
sbb
dec
lods
out
test
xchg
and
mov
fidivs
mov
push
mov
movsb
lods
jno
mov
jno
xlat
add
test
jo
popf
movsb
shrb
pop
mov
mov
mov
cmpsl
mov
jl
jg
jne
les
outsb
sbb
out
mov
movsl
xchg
inc
jae
or
mov
sub
loop
fisubrl
push
adc
add
mov
mov
pop
enter
addl
outsl
ret
pop
fistpll
js
lock
sub
mov
negl
daa
sub
jo
cmpsl
push
push
adc
scas
inc
sub
dec
push
popa
por
pop
cmp
add
mov
lea
or
inc
daa
out
xlat
nop
push
std
call
adc
sbb
addl
push
je
rcll
aaa
xchg
int
adc
loopne
push
or
fldcw
cmp
loop
pop
sbb
adc
sub
pop
andl
orb
pusha
sbb
push
jo
cli
in
inc
sbb
in
jo
stos
int3
gs
mov
daa
mov
jmp
std
xor
push
stos
es
add
ret
sub
aad
push
and
in
xlat
scas
jnp
jb
pop
lea
scas
or
mov
ljmp
test
sub
push
lods
mov
aad
and
lahf
dec
loopne
cmpb
mov
ret
incl
sub
sub
push
jl
test
nop
loope
mov
jp
jno
scas
pop
pop
leave
sub
push
or
mov
mov
push
lods
jge
mov
xchg
lock
add
push
or
or
dec
or
add
add
add
sub
test
in
test
xchg
aam
out
out
and
and
int
push
mov
mov
inc
mov
shlb
test
mov
test
mov
in
inc
xor
repz
or
sbb
add
and
les
insl
add
addb
sarl
aad
std
dec
imul
cmp
mov
je
add
jno
stos
std
mov
jl
add
add
add
pop
mov
push
add
add
fsubl
in
jecxz
push
push
or
xchg
cld
xchg
jne
out
lea
add
fs
std
pop
sub
gs
inc
test
mov
test
decb
imul
mov
fcmove
movsl
lods
das
or
inc
stc
push
pop
jnp
outsb
lock
es
loopne
js
test
mov
xchg
rcl
xor
jne
test
add
in
je
cmp
fsubrs
cmp
inc
hlt
add
or
cmpsb
enter
add
push
sub
aas
and
jns
cmp
into
jns
ret
push
push
les
cmp
je
push
ljmp
loopne
data16
jmp
adc
pusha
sahf
jle
push
cmp
jg
outsb
adc
cli
jbe
or
inc
sub
jge
push
inc
adc
jle
xchg
sbb
or
jp
adc
fsubrs
xor
cltd
arpl
out
pop
jne
jge
repnz
loop
inc
fstps
inc
cmc
push
lock
sti
mov
or
jge
cmpsb
ret
popf
cmpsl
xor
cmp
jbe
shlb
jp
sbb
fdivrp
and
xor
fs
inc
jmp
inc
jo
xlat
inc
sahf
push
add
addr16
and
add
dec
jmp
xor
mov
insb
jl
loope
push
iret
add
and
stc
push
or
adc
push
lds
adc
out
cmp
lret
jmp
pop
cmpsb
outsb
push
xor
push
mov
cli
adc
aad
sub
fisubrl
jo
arpl
push
shr
outsl
pop
rol
add
sbb
jb
push
lock
sahf
pop
jecxz
dec
push
add
shl
xchg
out
inc
rcrb
fcoml
add
mov
imul
fadds
push
adc
aas
add
mov
call
aam
sub
push
jns
cmpb
fmuls
sbb
cmp
cmp
pop
push
mov
add
sub
mov
test
insl
jns
subl
in
inc
mov
fcomp
sbb
sbb
and
jl
sarb
les
sbb
pop
xchg
andl
cmp
adc
or
cmp
pop
packssdw
jne
mov
arpl
dec
add
adc
xor
movsl
mov
sbb
add
dec
sahf
mov
add
into
cwtl
xchg
es
je
pop
testl
enter
fidivs
or
icebp
mov
pushf
xchg
loop
add
into
std
and
test
jmp
test
xchg
fstpl
inc
inc
lcall
jl
mov
outsl
push
mov
inc
pusha
xlat
test
xchg
inc
out
adc
and
fldcw
add
mov
ds
fmul
cmp
pusha
popa
mov
jns
loope
jns
and
aad
mov
sub
shlb
insb
mov
push
sbb
faddl
inc
mov
sub
test
in
or
aad
cmp
repnz
pop
call
adc
cmp
mov
or
and
nop
and
add
imul
adc
test
push
nop
rolb
or
jo
sub
pop
sub
insl
mov
push
into
sub
orl
popa
mov
sahf
jecxz
push
push
pushf
push
aaa
sub
push
or
enter
add
jne,pn
into
lods
jae
jno
inc
and
je
das
sbb
cmp
sbb
pop
cmp
daa
sti
xchg
jo
sub
push
imul
xor
sub
jle
mov
add
cmp
and
inc
sbb
mov
jno
inc
add
movb
push
es
data16
sbb
inc
movsl
xor
pop
sub
nop
sbb
push
mov
insl
popa
loop
fdivrs
mov
cwtl
mov
les
imul
cmp
out
mov
dec
mov
addb
mov
sub
mov
or
add
fmuls
fwait
aaa
sub
xchg
xor
shr
xchg
test
push
xlat
push
fbld
or
jb
mov
ss
subb
cmp
sti
lcall
pop
cmp
call
add
aaa
jmp
add
stos
rcrb
pop
dec
fistl
and
dec
mov
lock
inc
jbe
jl
sbb
mov
xchg
add
outsl
or
push
push
pop
cmp
icebp
push
xor
mov
mov
or
test
add
add
inc
xchg
jo
push
jne
add
iret
and
ret
imul
push
gs
mov
sar
add
ja
add
jno
mov
daa
add
dec
xchg
mov
jno
test
mov
scas
push
and
push
pop
sbb
imul
sahf
movsl
sbb
lods
mov
sub
jo
push
mov
cmp
jo
rcrl
or
mov
aaa
adc
push
jb
push
push
add
pop
int3
jo
dec
pop
les
pushf
ret
cwtl
jg
xor
or
test
test
sbb
test
pop
test
cwtl
lea
je
in
jmp
mov
outsb
rolb
lock
in
and
popa
fidivl
test
mov
stc
mov
insb
stos
lock
mov
repnz
sub
movsl
mov
add
mov
push
lea
mov
pop
xor
jno
call
add
test
push
push
and
int
popf
dec
cmp
dec
mov
push
bound
add
dec
adc
in
xor
std
push
cmp
cmp
lahf
inc
loope
aaa
or
sub
leave
pop
mov
jae
nop
fwait
sub
dec
mov
or
jge
testb
loopne
in
add
fists
add
fisttpll
push
xchg
inc
jmp
insl
add
imul
mov
sub
xchg
or
jmp
popf
testl
inc
pushf
je
or
inc
push
je
jne
and
popa
fsubrl
push
scas
test
je
sbb
dec
test
loope
rorl
inc
xchg
fs
femms
or
fimuls
popa
enter
clc
mov
dec
cmp
outsl
pusha
pop
push
sarb
aam
dec
cmp
fistl
mov
test
lret
adc
xor
rorl
sbb
push
lahf
mov
repz
jl
dec
jae
out
aam
adc
movsl
xchg
inc
inc
adc
inc
add
inc
pop
adc
xchg
push
mov
and
pushf
mov
and
jle
push
aam
repnz
inc
les
xchg
dec
cld
dec
pop
fsubrs
jnp
and
jge
fistps
mov
lret
mov
aam
xor
mov
dec
adc
aam
mov
movsl
movsb
xchg
cmp
outsb
push
or
jecxz
icebp
jb
test
fstpl
add
les
pusha
add
das
nop
dec
pop
enter
mov
mov
in
lock
pop
lcall
inc
sub
pop
dec
push
push
xor
xor
xor
push
iret
es
push
pop
sub
insl
and
rep
jg
inc
inc
cmp
out
rorl
cwtl
es
xor
fisttpll
scas
gs
lds
mov
lods
xor
push
pop
jecxz
mov
dec
jnp
movsl
xor
lock
cmp
push
adc
or
jmp
cmp
or
inc
mov
push
fwait
push
or
dec
test
test
mov
lods
and
and
test
push
mov
inc
imul
add
or
test
cmpb
mov
test
adc
dec
xlat
mov
push
dec
nop
mov
mov
lods
or
mov
in
daa
pop
pop
or
push
out
in
cwtl
shlb
add
cmpsl
aaa
cmp
xor
addr16
push
lea
or
xchg
adc
es
movb
dec
cmpb
lahf
inc
loope
mov
add
mov
gs
jmp
pop
pushl
or
xor
add
or
sbb
adc
add
cli
test
lods
std
mov
mov
jne
je
jo
nop
sub
in
or
xchg
add
add
rcrl
decb
push
test
add
inc
pop
dec
adc
mov
mov
int3
les
add
push
sti
or
fs
inc
fwait
call
pop
cmp
inc
fwait
xor
add
or
imul
nop
inc
in
push
inc
xchg
mov
xchg
test
dec
int
call
loopne
cmp
je
sbb
aas
xor
pop
std
shlb
and
mov
rcl
dec
outsl
hlt
or
xor
aam
ret
out
sub
pop
adc
inc
dec
xor
enter
repnz
jo
orb
jmp
xor
lods
insl
bound
sbb
dec
mov
and
xchg
lcall
test
cmp
shll
sbb
aaa
cmp
xor
cs
mov
and
and
or
mov
lcall
add
lahf
mov
nop
rclb
push
test
movsl
daa
mov
es
push
push
push
and
hlt
and
and
test
adc
add
and
push
fucomip
xchg
cmp
add
add
mov
in
movl
cwtl
pop
outsl
adc
loopne
mov
cltd
fnstenv
js
fcoms
lock
out
xor
imul
mov
loopne
or
push
cs
dec
pop
mov
outsl
shrl
pop
sahf
inc
jl
mov
xor
popf
lods
repz
push
movsb
fnstenv
jno
inc
adc
mov
adc
pop
or
adc
push
std
adc
dec
push
mov
sbb
xchg
mov
call
orl
add
xor
adc
std
leave
jne
insb
and
sbb
inc
outsl
add
aam
test
cmp
inc
add
push
and
testl
testl
push
andb
jmp
inc
lcall
rclb
loopne
jno
ljmp
inc
out
repz
or
scas
dec
xchg
push
je
sbb
dec
aam
add
mov
cmpsl
test
clc
or
add
pusha
call
aam
sahf
enter
jne
test
or
jno
mov
fnstsw
jb
or
cmc
scas
xor
hlt
fstl
xor
loopne
ljmp
pop
jp
fldl
pop
fsubr
pop
faddp
andl
sbb
pop
xchg
dec
ret
faddl
ja
pop
inc
adc
lods
xor
xchg
rcrb
add
pushf
push
mov
inc
movsw
test
cmp
ret
clc
push
enter
mov
stos
add
ficoms
mov
mov
scas
inc
add
sub
sub
mov
cmp
push
or
lea
or
in
xor
sbb
xor
xchg
xchg
cmpb
cmp
cmovb
sub
sbb
sbb
add
dec
loope
lea
into
lock
push
add
fiaddl
dec
sbb
jp
jg
mov
in
sub
pop
insb
in
cmpb
mov
add
mov
into
gs
outsl
or
xor
dec
hlt
jge
adc
fst
aaa
xor
dec
push
sbb
imul
mulb
sub
ud0
shrb
loope
ss
add
inc
movsl
je
xchg
rcrl
shl
push
arpl
rcrb
and
add
cmp
imul
adc
lcall
sti
fbstp
popf
lcall
imul
inc
add
pop
nop
test
add
xor
dec
jns
mov
mov
adc
cmp
jle
dec
push
pop
add
add
or
outsb
push
lea
mov
stos
mov
jmp
push
test
loop
nop
cmc
stos
repz
test
outsb
ja
sbb
add
dec
or
ret
jp
incb
xchg
rolb
decl
sti
sbb
inc
adc
test
repz
gs
sbb
jle
inc
ret
cld
insl
in
sub
rclb
lea
dec
inc
cli
and
push
fldenv
pop
jno
inc
and
jo
fstl
daa
push
test
sub
jnp
cmpsb
andl
dec
pop
and
sub
add
out
and
iret
rcrl
cwtl
xor
add
inc
movsl
fcoms
cmp
xchg
ss
sbb
push
lret
cmp
pop
scas
pop
adc
inc
insb
add
subl
loopne
or
mov
mov
and
jne
and
leave
mov
rol
mov
bound
dec
cs
fmull
push
jb
pop
stos
fdivl
adc
push
jbe
rcrb
daa
js
movsl
adc
push
or
js
sbb
inc
out
jb
cmp
std
adc
lock
mov
push
add
inc
cmp
sarl
std
xor
sbb
sub
push
imul
cmpl
in
push
cmpsb
inc
adc
hlt
ret
inc
and
or
sbb
push
mov
mov
in
jo
hlt
leave
hlt
or
cmp
jge
popa
cmpsl
lret
les
ss
lock
mov
inc
xchg
or
rol
mov
inc
push
pop
outsb
int3
andl
les
rorb
mov
lods
cmp
or
or
adc
insb
mov
mov
jecxz
nop
xchg
cmpsl
lea
mov
cmp
inc
jnp
or
inc
push
push
xchg
les
dec
push
dec
inc
pusha
jecxz
daa
xchg
jl
add
jecxz
push
pushf
or
insl
sub
mov
or
leave
adcb
pushf
push
xchg
lret
pop
push
inc
in
sub
das
xor
push
push
mov
cmp
jb
notl
mov
add
repz
mov
mov
retw
mov
or
mov
mov
pop
rcll
filds
pop
shrl
or
adc
xor
pusha
stos
xchg
arpl
adc
jmp
sbb
mov
mov
adc
ret
addb
call
jno
scas
pop
mov
cmpl
es
pop
inc
call
mov
jns
add
movsl
sbb
push
sbb
inc
into
add
mov
jb
cmp
addr16
jp
rcrl
ljmp
lock
mov
loopne
adc
pusha
test
adc
mov
test
cmp
push
push
insl
loopne
xor
pop
test
scas
xchg
mov
or
movsl
add
pop
shrb
sbb
ja
add
cwtl
dec
ret
sbb
dec
shr
pop
cmpl
xchg
lahf
mov
sbb
sub
mov
sub
subb
add
pushf
call
stos
xor
sub
clc
sahf
mov
cltd
pusha
dec
mov
dec
cmp
fsubl
or
pop
mov
sbb
adc
fdivl
inc
shll
xor
ret
and
sub
xchg
sub
sub
pop
adc
sbb
out
dec
fildl
push
xchg
cmp
inc
xor
lods
jo
dec
loopne
or
add
xor
and
pop
jne
xchg
leave
cmp
cmp
iret
nop
in
mov
mov
test
ror
cmp
push
addl
xchg
xor
mov
ljmp
push
popa
jb
mov
sbb
push
xchg
inc
mov
jae
push
in
lock
shll
cmp
pop
push
xor
imul
xchg
addb
into
lock
nop
or
jo
cmp
movsl
loop
ds
add
adc
add
or
pusha
cmp
mov
or
test
stc
idivb
jnp
add
inc
mov
push
xor
xchg
or
lock
stc
mov
inc
add
adc
bound
loopne
mov
stos
lahf
loop
mov
jns
aam
mov
in
lods
into
fiaddl
pop
fmuls
aam
imul
les
or
sub
loopne
push
cld
or
inc
loopne
xchg
or
sahf
cmpsb
add
icebp
clc
in
test
sbb
sbb
and
imul
fmuls
xchg
xor
fdivr
sbb
push
test
jne
inc
dec
sbb
ds
test
xor
in
in
sbbb
and
xor
das
mov
test
cmp
add
adc
pusha
repnz
dec
lcall
and
enter
fstpt
test
push
mov
jmp
sbb
cmp
jb
das
loopne
clc
jl
or
xchg
add
dec
dec
rorl
sbb
sbb
xor
enter
shrb
dec
inc
and
dec
aam
loopne
repnz
inc
push
inc
dec
fwait
cmp
orb
add
mov
les
dec
gs
add
enter
add
daa
pushf
xor
sbb
or
clc
int3
inc
std
lcall
aam
loope
imul
inc
ret
imul
or
mov
ret
ss
sti
repz
inc
push
int
xor
stc
popf
ss
push
sbb
pop
push
sub
dec
push
sub
lods
cmc
bound
cvtdq2ps
dec
ficoms
stc
adc
sub
popa
enter
inc
movsb
adc
imull
lods
int3
and
or
lds
mov
push
add
inc
pusha
mov
or
ret
mov
inc
and
fwait
inc
push
add
push
hlt
jge
inc
xorl
cmp
inc
sub
xchg
adc
loopne
adcl
or
call
push
jo
inc
in
cmpb
mov
inc
or
push
mov
add
mov
shrl
fdivrl
sbb
jecxz
or
add
in
lret
pop
inc
les
xchg
mov
or
loope
cmp
and
mov
lods
and
rolb
ret
ret
sub
or
and
xor
push
cmp
loope
cmpsb
repz
jo
xchg
test
in
fstps
push
sbb
fcmovbe
mov
fcom
icebp
into
sub
xchg
popa
mov
sarb
xorl
int
cli
xorl
inc
adc
mov
lods
pop
xchg
xor
rcrb
das
jge
xchg
test
xor
xorb
pop
or
push
dec
je
sub
or
push
mov
push
sbb
mov
cmp
in
mov
es
adc
adc
lret
push
xor
push
inc
and
xchg
xchg
add
or
mov
pop
sti
or
lods
push
pop
push
ja
add
pop
stos
push
push
fsts
iret
sub
popl
adc
mov
mov
push
xchg
sbbl
adc
sbb
pop
ret
ret
scas
fistpll
add
outsl
shrb
xchg
mov
inc
jmp
adc
fcmovnb
xchg
push
data16
inc
cmp
sbb
subl
xchg
mulb
mov
mov
and
mov
ja
mov
xchg
jge
loop
mov
nop
in
fidivs
out
add
and
clc
repz
dec
xor
pop
mov
push
add
jp
ds
cmp
lods
lret
sub
clc
fmulp
push
xor
add
or
add
mov
inc
inc
dec
push
xor
xchg
dec
push
pop
sub
jmp
cmp
push
arpl
sub
cmp
sub
cld
jbe
inc
add
lock
dec
xchg
pop
rolb
pop
xor
sub
jo
or
jle
pusha
lahf
in
cmp
and
xor
push
inc
lock
scas
pop
or
loopne
pusha
mov
push
mov
ds
and
outsl
add
aas
push
in
aaa
lea
inc
add
push
xor
or
push
shrb
and
and
les
cs
push
push
xchg
int
xor
ja
cmp
in
cli
std
sub
push
push
mov
cmp
repnz
or
mov
jb
push
sbb
in
sbb
cs
or
sub
nop
add
or
push
sub
mov
and
cs
add
imul
mov
inc
les
inc
sub
xchg
je
movsl
pusha
pop
xchg
add
mov
jne
mov
jae
jo
test
and
push
rolb
inc
ss
and
sub
jle
and
aas
inc
mov
incl
call
or
inc
pop
adc
ljmp
adcb
xchg
enter
sbb
pop
cmp
add
in
push
push
inc
decl
mov
and
add
loope
sbb
mov
cld
add
push
pop
cmp
test
push
in
adc
and
xchg
push
mov
sbb
add
jb
sbb
dec
mov
int3
cltd
mov
adc
dec
sub
pshufw
cmpsl
add
je
sub
jl
je
orl
mov
jo
or
incl
cmp
jl
xor
lret
into
pusha
repnz
adc
inc
dec
xchg
mov
push
cmp
pop
ja
sub
add
xor
loopne
push
fiadds
insb
into
jl
push
and
out
shrl
pop
enterw
mov
xchg
add
dec
dec
mov
push
pop
je
push
vmread
cmp
adcl
fldenv
and
sti
or
cltd
jo
mov
je
or
jns
pop
sbb
push
sti
push
jmp
push
sbb
jno
mov
dec
sub
popa
jmp
int
stos
xor
cmp
push
jne
jl
cmp
mov
pop
insb
push
dec
push
jge
lret
xor
push
mov
outsb
lea
shrl
jne
loope
sub
sbb
pop
sub
mov
pop
stos
xchg
mov
cmp
sub
push
jns
mov
movb
jle
inc
or
stc
sti
and
pop
out
pop
push
pop
xchg
nop
mov
mov
xor
leave
js
add
inc
fldt
ss
push
push
daa
adc
mov
mov
dec
cld
inc
push
rcrb
lock
push
mov
stos
or
test
push
clc
mov
and
push
add
test
aaa
push
mov
mov
dec
xchg
and
push
mov
dec
push
sbb
in
adc
push
adc
addr16
mov
mov
push
push
mov
inc
mov
cwtl
dec
and
mov
xor
adc
mov
popf
aad
imul
dec
xorl
pushf
hlt
pop
movsb
jecxz
mov
mov
outsb
sti
adc
sub
mov
cmpl
out
and
push
std
ja
insb
pusha
fnsave
insl
push
dec
lods
xor
fldl2e
cmp
and
lret
push
jae
cmp
ja
add
test
push
mov
sbbl
xchg
dec
add
xor
adc
jne
inc
xor
push
cmp
outsl
or
jle
data16
aas
jne
or
mov
jmp
sub
mov
cmp
inc
ja
mov
movsl
cmp
aas
and
cmc
call
mov
push
sub
cltd
aaa
adc
or
rorb
cmp
fwait
jb
push
xorl
divb
jns
jmp
lret
add
jmp
sub
cmp
adc
leave
jne
push
jmp
aad
shrb
in
xchg
push
imul
push
addb
popa
data16
fs
inc
je
pop
mov
inc
adcb
inc
xor
ja
gs
adc
adc
add
sub
pop
pop
sub
cmp
adcl
mov
sub
scas
imul
test
mov
enter
jmp
jl
outsl
jle
xchg
mov
mov
adc
mov
push
imul
enter
call
xchg
rolb
mov
xor
sbbl
aaa
pop
repnz
lcall
in
xor
mov
mov
into
jae
mov
add
mov
in
jne
add
jne
pop
push
mov
icebp
dec
add
or
xor
adc
jp
push
dec
orl
adc
sub
adc
sub
xor
nop
or
push
stos
int3
xor
mov
mov
dec
loopne
cmpsl
or
add
sbb
popa
jp
pop
sbb
dec
jecxz
icebp
lods
xor
xlat
out
or
aam
push
jne
rolb
ljmp
lods
inc
pop
dec
jp
add
inc
pop
sbbb
rcrb
jmp
mov
pop
int3
mov
pop
mov
ja
and
dec
aam
mov
mov
adc
add
adc
faddl
cmp
lock
bound
mov
jle
sarl
dec
or
aam
nop
mov
imul
and
mov
xorps
hlt
adc
in
and
filds
inc
add
pop
and
push
adc
xchg
push
test
jne
movsl
rcl
ja
daa
xor
ret
daa
add
pop
add
loopne
mov
add
dec
and
sbbb
jp
cmpsb
bound
adc
jbe
cwtl
pusha
fmuls
xorb
lret
std
sbb
jp
iret
push
xchg
fldl2t
test
pop
jge
xchg
adc
in
add
inc
jle
call
mul
lret
clc
fsubs
push
and
adc
testl
xor
or
enter
or
push
or
jg
jmp
mov
dec
or
sbb
jnp
or
shrb
inc
or
shl
xor
cmp
pop
add
jl
or
clc
imul
imull
sbb
mov
ret
dec
cltd
rcrb
ds
or
jbe
xlat
and
repnz
and
mov
ds
icebp
adc
push
xchg
sbb
cmpsb
clc
clc
jnp
push
lods
jmp
inc
lahf
mov
xchg
inc
test
je
ret
cmp
jl
push
push
push
adc
add
or
mov
inc
inc
pop
adc
jge
push
daa
es
hlt
stos
cli
shrb
insb
cwtl
orb
stos
movsl
add
insl
pop
bound
cmp
jne
inc
arpl
mov
sbb
jge
and
in
add
mov
into
js
adc
ds
or
cld
and
mov
imul
xchg
aam
jae
adc
pop
jb
add
push
leave
lods
or
jecxz
xchg
hlt
scas
sti
jmp
push
push
pop
les
xchg
push
int3
rcr
shrb
add
mov
sbb
mov
add
stos
add
adc
cmp
xor
lret
bound
cld
push
pop
push
pop
cli
lods
fcompl
popf
and
adc
pop
flds
shl
test
ret
push
loopne
and
adc
popf
lea
je
add
jle
incl
mov
clc
lock
nop
js
fstl
popf
sbbb
inc
pop
push
fs
cmp
rcrl
mov
jmp
nop
mov
sbb
sub
add
push
push
add
pop
xchg
push
mov
xchg
test
jp
or
push
scas
sahf
hlt
adc
sarb
add
mov
cmp
test
push
push
add
sbb
ret
movb
mov
xorb
js
and
xchg
adc
xchg
lcall
rorb
popa
out
repz
loopne
adc
sbb
test
add
sub
xchg
or
stc
pop
movsl
dec
sub
int
insb
mov
jp
and
xchg
xchg
or
inc
sub
data16
dec
jl
fsubl
call
and
sub
jne
aas
add
add
clc
mov
fsubl
jbe
push
add
divl
pop
imul
icebp
pop
mov
mov
jge
cmp
dec
clc
aad
mov
ds
add
dec
push
ss
lea
jmp
push
in
add
leave
repz
outsb
mov
inc
jb
xchg
pop
add
add
add
push
push
push
ret
dec
scas
push
sbb
jae
push
adc
dec
fsubs
mov
push
in
je
test
mov
mov
aaa
addl
push
or
push
mov
xchg
aas
pusha
push
push
xor
inc
push
scas
cmp
push
and
jb
or
inc
adc
andb
je
adc
pop
adc
mov
sbbl
aam
dec
je
adc
or
outsb
js
subb
dec
push
cli
pop
jb
cmp
xor
adc
repnz
cmp
mov
or
std
push
pop
sbb
fld
lret
push
roll
jno
push
push
xor
push
push
aam
mov
pop
jl
ret
mov
push
add
add
push
add
and
mov
adc
mov
pushfw
into
inc
popa
pushf
idivb
inc
or
push
js
and
loopne
xchg
sub
mov
push
add
mov
adc
cltd
xchg
add
adc
jmp
push
lock
inc
lock
mov
adc
addb
or
xor
popa
mov
mov
sti
and
xorb
add
dec
in
fs
imul
jns
or
and
adc
mov
adc
adc
push
stos
pusha
sbb
mov
lods
loope
out
inc
xchg
push
push
imul
add
push
add
lods
adc
shlb
mov
test
dec
inc
in
in
lock
jo
sub
add
jne
push
mov
hlt
push
dec
add
xchg
push
in
push
lea
mov
orl
adc
and
in
std
mov
js
inc
clc
cmpb
adc
and
adc
lcall
cld
fdivrl
test
add
daa
mov
loopne
out
dec
mov
jno
fcompl
insb
ja
xchg
aaa
adc
fadd
dec
fcomps
xor
lret
fsubrl
imul
or
jmp
xor
inc
int
data16
pop
mov
loopne
lds
fstpt
ret
rorb
push
out
xchg
out
adc
stos
enter
mov
inc
int
inc
in
inc
loop
add
hlt
add
shll
jbe
fsts
movsb
and
adc
add
movsb
out
rol
mov
or
xor
cmp
lea
or
jecxz
sbb
mov
out
les
add
movsb
adc
lods
and
out
inc
cmp
lock
add
pusha
pop
mov
mov
mov
ja
or
dec
cmp
test
push
push
xor
or
sbb
jge
out
or
adc
pop
push
orl
popa
or
mov
pop
jo
insl
std
xchg
aad
pop
orb
into
addr16
inc
mov
push
aam
adc
jnp
mov
xor
mov
xor
fistpll
cli
add
sbb
xchg
movsl
adc
sub
out
and
mov
add
cmp
push
jo
aas
jno
push
in
es
push
lock
rep
ds
clc
xorl
aam
inc
pop
pop
lock
fcomp
nop
jns
inc
test
stc
addl
mov
push
shr
push
pop
mov
pop
repnz
add
pusha
push
sub
stos
mov
notb
push
push
mov
push
push
fwait
mov
dec
push
sti
cmp
rorl
or
push
lods
shl
push
mov
mov
mov
cs
movl
jbe
in
movzwl
cwtl
mov
pop
sbb
mov
sbb
add
sti
dec
lret
jl
cmp
nop
jecxz
pop
jno
sarb
mov
push
dec
in
mov
sarl
jmp
enter
frstor
and
sbb
subb
inc
mov
in
repnz
fcoml
daa
cmp
jne
js
js
add
test
mov
loope
xchg
jp
js
rolb
outsb
lds
push
popf
hlt
or
loope
inc
loope
out
push
add
inc
inc
xchg
rcl
or
int3
inc
cmp
adc
sti
xor
mov
aas
lods
push
out
and
add
loopne
je
sbb
mov
mov
and
repnz
adc
clc
sbb
sbb
adc
cld
movsb
decl
cmp
pop
cmp
inc
fcoml
sti
outsb
std
shr
mov
mov
inc
sub
or
mov
adc
adc
jmp
adc
push
aad
push
mov
sbb
jne
pcmpgtw
fidivrl
in
sub
out
mov
adc
jbe
push
paddb
ja
push
mov
cs
dec
call
sahf
xor
outsb
testb
lcall
pop
ljmp
add
fs
mov
sbb
and
lahf
in
cld
adc
inc
add
inc
and
pop
cld
sub
or
in
and
add
mov
mov
push
or
cmovnp
mov
pop
in
adc
xchg
loope
or
pop
rorb
das
xor
adc
stos
cmp
add
push
adc
cmp
xchg
test
inc
subl
add
jl
inc
pop
xor
dec
inc
rolb
fs
ja
inc
roll
aas
sarb
fcompl
pop
ss
loop
push
add
pushf
pushf
pushf
pushf
add
push
pop
outsb
lahf
pushf
pushf
or
or
jnp
or
jbe
outsb
outsb
outsb
or
jno
jmp
push
jmp
por
outsb
outsb
outsb
adc
pop
adc
pop
adc
push
adc
dec
outsb
outsb
outsb
outsb
adc
dec
adc
aas
pop
jmp
outsb
outsb
outsb
outsb
sbb
xor
jmp
sbb
outsb
outsb
outsb
outsb
sbb
and
pop
pop
jmp
push
and
outsb
and
or
inc
push
jg
inc
and
pop
hlt
inc
bndstx
sbb
ret
ss
jp
dec
jnp
lret
add
repnz
out
add
xor
inc
jns
out
dec
push
pop
fs
out
sahf
out
jbe
addb
xchg
cltd
repnz
mov
test
mov
mov
rol
rcl
xor
iret
fcmovu
in
pop
pushl
add
and
or
or
push
movups
adc
mov
call
adc
push
pop
sbb
sbb
sbb
push
pop
and
and
aas
push
movsb
sub
and
inc
add
push
ret
xor
and
inc
sub
inc
ljmp
add
movsl
jge
lret
fnstcw
inc
and
ficompl
andl
outsb
jo
jo
out
mov
pop
add
or
and
mov
roll
daa
mov
inc
ljmp
test
xor
mov
inc
lea
push
push
sub
out
call
fsubl
mov
sub
add
aam
enter
fldcw
sub
stc
fdivrl
fdiv
jbe
cmp
jns
jb
flds
mov
cmp
aam
inc
mov
or
data16
sbb
mov
jle
mov
push
loope
sub
pop
gs
fcompl
repnz
mov
mov
dec
sarb
call
adc
sbb
fs
mov
or
and
mov
and
inc
fidivrl
sbb
dec
cmpsb
mov
ret
js
or
js
clc
cmp
bsf
js
add
jne
sbb
rcll
sub
jo
and
sbb
mov
inc
shr
add
sub
or
or
ss
shll
imul
add
inc
je
gs
adc
add
test
dec
in
add
dec
sub
xor
adc
lods
rclb
push
mov
add
inc
sbb
pop
js,pn
ret
movl
xchg
inc
int3
pop
rcl
or
cmp
test
loopne
fdivrl
sub
xchg
out
rsm
popf
and
sub
call
testb
es
scas
xor
and
fsubl
test
call
stc
ja
lea
imul
cmp
ja
adc
fucom
mov
cmp
rolb
sbb
or
dec
xchg
lock
inc
or
lret
adc
sub
mov
xor
loopne
dec
adc
mov
add
cmpsl
add
push
xor
mov
inc
rol
add
pop
mov
push
and
and
pop
test
pop
pop
in
and
push
mov
dec
mov
pop
stos
xchg
pusha
pop
and
mov
dec
out
incb
or
call
add
mov
jo
xchg
and
and
jno
dec
int
lcall
adc
push
jnp
add
add
or
mov
xchg
movl
and
add
loopne
add
sbb
test
mov
mov
mov
out
push
test
mov
xor
fcoms
or
iret
cmp
jbe
dec
jecxz
adc
and
and
pushf
movl
sbb
rcr
sbbl
cs
fisubrs
int3
ljmp
bound
add
and
lods
cwtl
and
add
jo
jg
inc
cmovo
ljmp
je
or
ret
insb
cmp
fistl
aas
cmp
jl,pn
xchg
adc
mov
jne
fmuls
adc
push
insl
lods
cmpsb
cmc
jle
add
add
ja
cmp
jne
lea
cmp
cs
fdivrs
jne
or
js
rcl
xor
jmp
movsl
xor
push
aad
or
cmp
popa
jge
or
or
mov
idivl
icebp
jl
dec
adc
js
push
cs
imul
jae
test
shlb
nop
mov
jg
mov
and
movzbl
push
sbb
push
and
sti
outsl
popa
xor
pop
sub
adc
aam
js
cmp
xchg
pop
push
inc
push
xor
xor
ss
inc
add
ret
mov
leave
sbbb
lcall
lods
add
and
je
push
pop
pop
hlt
push
mov
lahf
cltd
ja
jmp
sbb
jbe
orb
fwait
and
outsb
sub
mov
or
mov
inc
xor
xchg
call
sarb
ret
push
mov
es
sbb
in
js
jne
add
sub
cmc
jne
sub
ss
push
push
sbb
push
and
add
popa
jmp
dec
mov
js
adc
sub
insb
sbb
or
cmp
movsb
out
js
sarl
add
and
mov
mov
inc
cmp
xor
and
dec
adc
add
jg
test
mulb
rcrb
xchg
mov
popa
fwait
or
mov
sub
scas
in
sbb
mov
add
divl
mov
sbb
xchg
pop
push
fcom
enter
push
fucomi
insb
pop
inc
mov
pop
lds
in
jno
inc
xlat
xchg
xchg
mov
mov
or
push
xchg
sbb
ja
mov
sbb
shr
iret
and
jae
call
jmp
lret
nop
sub
xchg
pop
lock
cmp
lcall
push
mov
std
mov
dec
insl
push
aas
insl
xor
cwtl
clc
je
sbb
push
sti
jmp
push
pop
bound
inc
adc
mov
les
cmp
mov
sub
and
pop
into
enter
mov
lods
sbb
mov
xchg
push
push
inc
push
mov
jmp
cmp
lcall
sub
or
add
mov
pop
inc
push
push
cld
adc
push
lock
mov
inc
xor
fisttpl
dec
inc
jecxz
adc
push
dec
js
arpl
repz
aaa
or
jo
je
jo
lea
ss
pop
inc
adc
pop
sbb
in
jo
push
push
jmp
sbb
xor
jb
cmp
adc
cmp
mov
or
shll
adc
clc
repnz
je
or
ret
loopne
adc
adc
loope
rcl
loop
rdpmc
mov
and
inc
in
mov
dec
push
nop
pop
int
mov
repnz
outsl
fistps
cmpsb
xchg
nop
rcll
inc
mov
and
ljmp
nop
pop
and
adc
arpl
inc
sub
imul
rorb
cmpl
arpl
mov
xorb
fimull
cmp
rcr
jl
xor
adc
aam
or
xor
or
mov
xor
lea
dec
fildl
jge
aad
cmp
or
rcrl
pop
inc
inc
aad
pop
ret
movsb
bswap
in
adc
stc
push
or
add
subl
mov
dec
cmpsl
xchg
adc
sti
mov
arpl
sbb
mov
mov
mov
or
push
sub
and
cld
cmpl
or
int
push
adc
mov
aas
lods
sbb
pusha
pop
mov
sbb
sub
sbb
or
xor
sbb
js
sbb
jmp
lods
je
inc
mov
push
hlt
push
adc
and
inc
bound
paddb
je
lea
pusha
adc
nop
xchg
fisubs
push
fdivs
inc
mov
jg
sbb
adc
sub
dec
sub
mov
sub
jmp
fs
and
inc
fmuls
fadds
mov
add
cmp
sbb
pop
fwait
xor
das
adc
lods
pusha
nop
pop
push
out
sub
inc
cmp
pop
mov
enter
pop
adc
out
sub
or
sbb
and
inc
popf
int3
jno
mov
jno
sub
cmpb
xchg
pop
addl
cs
xor
ds
pop
rcrl
nop
bound
stc
xchg
inc
pusha
inc
and
aas
rolb
push
xor
cmpsb
pusha
lds
ret
rorb
jne
jge
cmpsb
xchg
or
lcall
arpl
cvtpi2ps
xor
ljmp
xchg
mov
je
mov
push
bound
push
sub
sbb
xchg
and
dec
scas
bound
push
nop
xor
sub
dec
scas
mov
ss
mov
mov
or
cmp
inc
mov
sub
clc
and
xor
psubusw
cmp
and
imul
cmp
push
pop
enter
ljmp
pushl
das
imulb
xchg
or
adc
adc
or
insb
iret
inc
add
shlb
sub
add
outsb
hlt
lcall
mov
push
and
and
pop
xchg
andl
sub
aad
xlat
loopne
push
dec
adc
fidivs
sbb
sbb
pop
add
pop
data16
leave
leave
sbb
ret
lods
dec
sbb
push
int
or
mov
lock
jl
xor
movsl
xchg
jo
inc
xchg
xchg
or
or
and
lea
mov
lods
dec
sbb
cmp
adc
lea
push
scas
test
pop
adc
nop
adc
push
insl
push
push
and
dec
adc
call
xchg
cmpl
jne
inc
inc
push
lods
imul
mov
dec
ret
or
incb
cmp
sbb
fstpl
int
cmp
jne
and
in
les
sbb
jmp
div
das
or
mov
cmp
je
cmp
sbb
add
push
or
inc
mov
mov
jmp
sbb
jno
in
mov
outsb
xchg
cld
xchg
fimull
dec
xchg
inc
scas
fdivrs
jle
popf
cmpb
mov
mov
add
mov
xchg
es
add
jmp
fstpl
loope
pop
lea
and
push
imul
mov
inc
mov
push
fidivs
lock
sub
stc
out
pop
cmp
xor
ret
sub
push
repnz
pop
aad
adc
sbb
sahf
push
clc
pop
fdivs
repnz
or
cmp
enter
and
jo
loope
jae
jp
xchg
in
movzbl
test
cs
je
or
mov
repnz
push
cmp
inc
pusha
cmp
cmp
loope
dec
cli
mov
push
mov
dec
les
push
aad
lds
cli
xor
daa
fs
cmp
mov
push
push
pop
shrl
push
cmp
jge
mov
ja
mov
mov
adc
stos
testb
cmpsl
pop
shr
loopne
std
add
xor
xor
lock
jns
hlt
clc
clc
cld
mov
add
inc
jae
movl
or
push
add
add
pop
xchg
and
fbstp
dec
je
add
adc
cmp
dec
or
lock
mov
shr
sbb
loopne
lret
call
push
popf
push
mov
and
dec
jg
or
test
lock
cmpsb
adc
sarb
xchg
lret
adc
je
dec
je
push
add
loop
xchg
xchg
adc
repnz
std
dec
adc
inc
add
jmp
sub
mov
pop
test
push
add
jne
sbb
jle
mov
pushf
cmp
cmp
mov
or
inc
xorl
clc
xor
inc
adc
das
xchg
mov
sbb
pop
sub
ret
cltd
idiv
inc
inc
imul
pusha
cld
pop
and
jb
sub
jp
jno
dec
stos
popf
pop
je
mov
dec
rcll
cmp
fisubrs
dec
add
add
xor
nopl
lock
sahf
cli
dec
jbe
dec
add
mov
sbb
lret
mov
test
jmp
daa
pop
les
test
jmp
push
jae
std
xor
int3
xor
repnz
cld
jp
clc
lret
insl
addr16
jae
cli
ret
push
jmp
jp
push
mov
pop
jne
decb
xor
xchg
cmp
je
cmp
pop
cmp
je
cmp
jne
and
incl
inc
jne
mov
sub
push
or
loope
mov
out
je
push
add
mov
xor
cmp
cltd
rcrb
cmp
jne
popa
dec
add
loop
inc
call
jne
mov
sarb
sbb
adc
push
lods
add
mov
cmp
mov
xorl
mov
push
jl
ja
mov
or
jg
mov
and
aaa
lahf
push
push
jmp
inc
jl
inc
jg
mov
sub
aaa
push
add
shl
mov
sub
dec
shrb
mov
mov
and
push
les
outsl
adc
test
or
mov
inc
into
ret
mov
jl
or
sbb
jle
icebp
cld
push
pop
je
mov
stos
arpl
pop
jns
push
cmp
push
shlb
scas
and
dec
push
lret
push
push
pushl
iret
mov
push
inc
cmp
pusha
mov
std
mov
call
out
imul
mov
jo
mov
roll
aad
inc
popf
daa
lcall
adc
orb
sub
or
pushf
sahf
cli
inc
and
push
mov
jge
push
movsl
pop
jbe
dec
in
xchg
xor
xor
fsubs
mov
cmpb
mov
mov
push
inc
idivb
icebp
or
inc
inc
inc
out
jmp
xor
push
mov
xchg
pop
rcrl
xchg
xchg
test
test
call
and
mov
testb
add
push
cmp
dec
addb
int3
or
add
add
cmp
je
cmp
je
les
dec
insb
adc
push
adcl
push
mov
push
clc
inc
gs
adc
pop
mov
ljmp
repnz
jne
mov
mov
cld
cmp
sub
inc
test
xchg
insl
xor
data16
mov
shll
es
or
jbe
or
rclb
outsl
jne
adcb
adc
lock
and
movsl
mov
popa
icebp
or
lds
sub
xor
movsb
sarl
push
push
add
or
push
push
add
dec
int3
pop
or
mov
xchg
inc
fldl
inc
in
sub
mov
mov
cmp
jne
inc
sub
push
pop
repnz
sbb
scas
cmpsl
cmc
sti
pop
push
add
repz
sbb
xor
sub
or
inc
movsl
push
sbb
add
jg
dec
or
or
add
ret
js
insb
xchg
pop
push
and
rolb
or
and
pop
fildll
push
adc
js
stos
addb
jmp
inc
rol
or
mov
inc
add
push
dec
sbb
dec
insb
inc
add
and
mov
and
orb
sbb
push
pop
jns
add
mov
mov
sbb
jg
inc
or
sub
aas
mov
movb
add
sub
in
icebp
orl
push
cmp
xor
dec
cld
cmpsl
inc
xor
push
push
sbbl
xchg
lods
loope
mov
ror
daa
push
rcrl
cmpsb
test
lods
push
ret
cmp
movsl
cltd
in
inc
js
xor
faddl
cmp
push
mov
js
sbb
inc
or
xor
inc
repnz
dec
sub
sub
mov
shlb
movsb
or
lds
cli
movb
jbe
xchg
or
jmp
add
in
push
jmp
cmc
movups
add
cmpb
jne
adc
mov
adc
mov
imull
ja
xchg
sbb
jmp
subb
sub
push
jo
mov
rcrl
add
add
lods
call
xlat
je
mov
push
jae
mov
or
ja
dec
push
mov
jne
hlt
popa
into
push
jb
inc
stos
add
mov
cld
mov
cmp
sbb
push
mov
fs
adc
cmpsl
call
lods
jecxz
mov
sub
pop
repnz
adc
push
push
mov
outsl
mov
mov
cmpsb
inc
cmpsl
jns
rcl
or
mov
lock
push
movsb
pushf
mov
mov
sub
or
dec
dec
or
xor
sub
in
xchg
jmp
inc
inc
cmp
xchg
test
sarl
sbbb
data16
adc
or
adc
frstor
enter
xor
pop
and
push
cmp
clc
scas
add
jo
fstpt
orl
adc
adcb
in
dec
adc
or
imul
add
insl
arpl
mov
and
adc
add
xlat
xchg
sti
fcmovnbe
lret
pop
orl
push
jo
push
jnp
mov
push
fistpll
int
cli
shl
jmp
xchg
pop
inc
xlat
push
jp
push
cmp
xchg
sub
es
cli
xchg
sub
out
xchg
bnd
inc
out
loop
shlb
mov
push
fsubp
cmp
addr16
pop
andl
push
jmp
sub
add
imul
mov
sub
or
std
jmp
sub
cwtl
jge
insl
test
leave
mov
lret
sbb
fsubrs
fistl
inc
test
jae
out
mov
jbe
stos
pop
ret
dec
lcall
inc
xor
cmp
jb
sbb
aas
push
dec
pushl
fsubs
adc
cmp
je
ret
js
insl
mov
sbb
test
sub
or
add
xor
inc
add
pop
imul
xchg
in
xchg
aad
ljmp
or
or
mov
cwtl
pop
adc
adc
dec
jne
or
push
popa
cli
mov
cmp
loope
loope
xor
adc
cwtl
push
cmp
cmovge
lcall
or
lea
inc
xor
push
and
mov
pop
push
jge
ret
adc
in
mov
loopne
add
shlb
pop
xchg
push
hlt
cmp
ret
adc
mov
inc
push
add
orb
dec
and
push
push
je
cs
dec
push
and
mov
sub
sti
fnstenv
push
add
sbb
cltd
cmc
pop
push
sub
fstp
and
add
lock
adc
add
add
das
fcomps
add
shll
jmp
popf
inc
inc
mov
or
daa
jne
xor
jne
cmc
add
push
aad
jle
lea
xchg
add
jmp
xor
inc
daa
or
in
jge
and
rcl
adc
mov
je
mov
jne
cmc
inc
test
push
xor
dec
lods
xchg
sbb
sbb
cs
ds
mov
ret
or
xchg
sub
sub
sbb
dec
jb
in
stos
push
dec
rolb
adc
cli
jne
gs
mov
adc
add
mov
mov
add
jno
xchg
mov
ja
inc
push
mov
nop
or
sbb
xchg
push
int3
push
mov
or
or
mov
push
or
andb
movsb
or
mov
inc
mov
insl
je
xchg
js
mov
push
das
and
and
mov
xor
adc
inc
mov
inc
push
sub
and
cmpsb
pop
jnp
gs
in
xor
push
sbb
in
movl
add
xor
push
mov
pop
andl
enter
loope
cmp
mov
add
mov
mul
mov
loope
mov
neg
jnp
sarl
mov
movsb
and
leave
lock
jmp
andb
addb
mov
in
add
adc
push
fucomi
sbb
push
cmp
pop
cmp
push
daa
pop
jl
popf
add
out
test
push
jmp
or
xchg
out
push
or
fadd
cmpsl
adcl
jno,pn
sub
daa
shld
test
adc
rolb
add
pop
or
mov
or
rcrb
push
xor
xchg
jl
mov
pop
rorb
jbe
add
jmp
adc
push
fcom
add
or
loopne
in
test
movsb
and
add
and
add
sti
cli
aam
add
movsl
fs
mov
pop
xchg
mov
in
and
in
cwtl
lods
dec
rorl
xchg
pop
test
fs
insl
sub
lds
mov
pop
and
push
mov
sahf
testb
xor
dec
sbb
mov
imulb
pop
or
adc
push
lea
orb
push
xchg
inc
mov
sub
sahf
add
sub
push
clc
and
pop
xor
jmp
insl
mov
js,pt
add
inc
mov
inc
inc
call
sbb
inc
nop
outsl
outsl
push
xor
out
and
add
or
or
pusha
cmp
dec
test
test
std
insl
loope
ret
outsl
icebp
jno
inc
enter
jecxz
xchg
shr
cmpsl
pusha
cmp
stos
or
arpl
and
or
add
sbb
mov
xor
add
popf
and
lds
push
jne
push
and
inc
xlat
cld
popa
adc
inc
push
pop
jmp
push
pop
add
lea
inc
rclb
sbb
or
jns
adc
push
jecxz
push
mov
adc
lea
icebp
and
js
and
lret
incl
pop
sub
mov
movl
scas
jo
or
or
or
fwait
sbb
sub
cmp
sbb
int
adc
jp
dec
mov
ja
lods
push
adc
insb
in
dec
lahf
dec
adc
mov
mov
lods
push
inc
or
loope
add
push
dec
sub
flds
iret
jns
push
cli
xchg
cmc
or
imul
ret
adc
loope
adc
js
or
mov
sbb
jo
xor
mov
cmp
rcll
add
sbb
mov
sub
mov
jnp
add
dec
test
jl
les
jne
pop
pop
mov
xchg
outsb
cmpl
sbb
xchg
jne
pop
push
jae
gs
jmp
bound
pop
dec
sbb
out
or
add
push
cs
lahf
ds
xor
dec
mov
sbb
fmuls
cmp
out
jmp
lea
test
insb
and
rolb
sub
dec
push
xchg
or
ret
fistl
cmpl
push
stos
mov
test
cmp
in
les
adc
xchg
push
add
sub
mov
idivl
dec
sub
fcoms
push
xor
in
and
or
arpl
cmp
adc
cld
mov
ja
movzwl
cltd
push
mov
sbb
lret
cmp
in
shlb
call
xor
inc
iret
jo
sub
mov
adc
in
adc
cmp
sbb
loopne
jmp
jne
repz
inc
dec
jbe
push
push
adc
xor
fbstp
ds
push
pop
lods
push
in
dec
mov
cmpsb
sahf
std
cli
dec
je
in
jae
cmp
pop
mov
js
insb
cs
sub
cmpsl
jo
push
flds
push
and
add
mov
sahf
aaa
cs
add
cmpl
mov
neg
add
shl
or
shr
rep
adc
data16
xchg
adc
xchg
out
sub
sbb
andb
in
adc
daa
or
inc
cltd
jmp
pop
loopne
cmpsl
or
pop
pop
mov
fwait
scas
stos
pop
jg
sahf
into
push
in
mov
jp
xchg
sbb
pop
mov
movsb
mov
shll
adc
outsl
xor
cld
std
sub
data16
push
or
mov
lea
imul
in
pop
push
mov
in
stos
subb
pop
cmp
adc
xchg
pop
xchg
xchg
loopne
push
add
or
in
jmp
inc
daa
std
fisttpll
dec
mov
push
rolb
je
ds
inc
push
lods
lds
add
ss
movsl
outsl
jl
movsl
adc
cmp
xchg
test
jmp
mov
xor
sarb
cmp
insl
loopne
loopne
or
fdiv
fadd
add
pop
rolb
popf
rcll
enter
xchg
push
push
cmp
or
shll
add
aad
test
mov
mov
mov
sbb
out
inc
xor
add
pop
faddl
cmp
jmp
push
sbb
adc
push
je
push
test
repz
xchg
js
rolb
xchg
faddl
adc
add
lea
aas
xor
pop
mov
adc
rcrl
test
add
sub
out
inc
add
push
cs
or
cmp
es
mov
mov
inc
add
or
adc
pop
in
mov
mov
sub
out
push
or
mov
adc
push
add
or
call
pop
adc
dec
jp
sbb
mov
dec
aam
clc
imull
pop
loope
lods
adc
jmp
pop
icebp
adc
fdivs
mov
xchg
push
insb
sub
cld
sbb
ljmp
sub
mov
outsb
inc
fdivrp
jb
in
sbb
jo
lret
push
cmpsb
out
adc
bound
ret
mov
dec
popf
dec
dec
pop
jle
nop
icebp
add
inc
adc
je,pt
sar
imul
mov
out
cld
mov
pop
in
cltd
test
xchg
push
push
mov
test
xchg
imul
loop
push
jg
cmp
pop
ret
sbb
or
call
mov
rorl
sbb
lock
dec
dec
call
ret
push
idivl
sbb
aaa
pop
dec
pop
rclb
imul
popa
dec
push
adc
and
add
in
ds
btc
jne
in
sub
dec
inc
stc
or
js
sbb
push
jmp
add
add
add
xchg
cmp
jbe
push
push
sbb
push
addr16
cs
add
loop
push
and
mov
cmpsl
sbb
es
pop
ret
int
xchg
mov
or
popa
xlat
push
insb
lock
fwait
cmp
arpl
icebp
or
add
js
mov
inc
adc
inc
pushf
outsb
mov
cmp
sub
jmp
push
mov
mov
jo
add
dec
insb
pop
or
cld
jno
cld
push
cmp
or
jo
fimuls
or
cwtl
cmc
cmp
das
jmp
sub
scas
push
icebp
out
adcb
sub
inc
jo
ljmp
add
int3
adc
push
cmp
push
push
xchg
mov
add
push
adcb
pop
jmp
pop
cmp
jb
xchg
push
sbb
data16
ja
aad
pop
mov
sub
adc
sbb
or
mov
shll
add
jne
push
xchg
jmp
push
mov
stos
add
bound
cmpxchg
lret
jne
push
sub
cmp
jmp
in
push
mov
jle
push
xor
pop
div
dec
inc
mov
lea
movsl
xchg
and
mov
lods
push
push
or
dec
aam
inc
fidivs
or
mov
inc
jmp
add
push
fsubs
or
hlt
gs
push
or
add
lock
dec
loopne
js
cmp
ret
and
mov
fsubl
andl
gs
shr
pop
std
orl
cs
or
fiaddl
out
or
or
ret
leave
and
aas
xchg
movsl
push
xorb
mov
sub
imul
jno
adc
adc
ss
cmpsb
sub
sub
jne
bound
inc
or
ret
add
lret
fisubl
aad
inc
jle
dec
inc
adc
jo
movsl
out
shrb
repz
leave
pop
pop
push
pusha
fucomip
push
dec
int3
add
add
jno
or
scas
pop
and
incb
add
and
sbbb
push
lock
cli
psubusw
scas
add
and
cli
imull
clc
jg
fs
test
movd
movaps
mov
push
enter
shlb
jle
xor
out
push
add
lret
je
cmp
decl
xchg
jge
repz
or
jg
jmp
scas
insl
dec
mov
xchg
ret
adc
jnp
mov
outsb
or
aam
ret
or
jmp
popf
stos
and
mov
xchg
repnz
roll
loopne
lahf
mov
add
pop
mov
addsd
int
add
sbb
and
dec
sbb
push
cmp
out
sbb
jmp
mov
pop
mov
ja
mov
aaa
push
cs
or
cmp
idivl
ljmp
add
pop
mov
mov
andb
mov
and
mov
mov
jb
leave
and
fcoml
jne
mov
push
sub
adc
pop
jne
outsb
push
push
mov
test
jmp
popw
dec
mov
sub
sub
dec
adc
in
pop
les
jg
push
mov
push
push
adc
sbb
inc
mov
sbb
xchg
xor
sbb
sbb
loop
xchg
xchg
sbb
incb
xor
xor
sbb
and
jno
xchg
pop
rcll
rorb
int
push
and
push
pop
add
or
jb
sub
cmp
push
push
je
jp
leave
mov
or
dec
mov
dec
in
call
in
shlb
pop
cmp
test
subb
orb
out
mov
add
pop
or
or
and
mov
hlt
or
lcall
add
jbe
hlt
push
sahf
dec
sbb
or
fiaddl
add
mov
cmp
push
mov
lret
inc
cmp
pop
sbb
js
and
push
cmp
orl
sbb
imul
repz
cwtl
mov
xchg
inc
sub
cmp
inc
jb
or
adc
cmp
push
jp
dec
mov
add
rorb
je
data16
aas
pushw
add
ret
ret
fldcw
lret
dec
pusha
je
lret
sbb
insl
jle
addr16
out
je
jae
enter
sbb
sub
jle
jge
cli
mov
mov
jne
xchg
lock
adc
fists
shr
arpl
loop
icebp
mov
iret
rcl
add
sbb
rcl
mov
add
jmp
mov
jo
cwtl
insb
and
mov
xor
pushf
jo
ljmp
test
mull
cmpsb
cmp
add
pusha
daa
bound
adc
mov
mov
sub
in
aam
mov
fildll
adc
or
sub
adc
mov
ds
sbb
cmp
incl
jp
mov
inc
cmp
jne
inc
cmpb
sbb
push
popa
out
xorb
sarl
lret
adc
add
mov
mov
fmuls
push
or
mov
arpl
stos
xor
ljmp
rorl
flds
xchg
movb
hlt
mov
and
prefetch
pop
cld
or
jo
push
js
hlt
enter
loopne
fimuls
jmp
mov
testb
or
adc
rorl
sbb
rol
loope
or
cmp
sarl
loopne
push
lret
jne
fsubrs
mov
lds
jg
push
loope
adc
xchg
jo
sub
and
and
adc
dec
gs
lret
fildl
das
mov
push
add
jne
or
mov
and
xor
jae
add
inc
imul
pop
or
sub
or
mov
push
mov
xor
iret
sub
adc
fidivs
sub
or
inc
sub
push
sbb
or
iret
fiadds
sub
sbb
inc
xor
iret
add
add
inc
or
pop
loop
pushf
fdivrl
push
icebp
add
daa
arpl
sub
movl
mov
xor
jns
adcb
movsw
lea
dec
dec
outsl
push
pop
mov
pusha
sbbb
in
jo
shlb
sbb
pusha
imul
inc
enter
loopne
repz
and
or
andb
mov
fdivrs
inc
and
pop
ljmp
and
and
sub
xorl
stos
jne
push
sbb
lcall
pop
scas
in
ss
jno
cmc
repnz
pop
push
sbb
mov
or
push
jbe
sub
dec
xchg
add
cli
aaa
pop
cmp
adc
outsl
pushf
mov
cmp
into
lea
cmp
outsl
push
popa
aaa
and
jmp
sub
cmp
jne
out
ds
jnp
adc
or
add
or
pop
sub
sbb
cltd
push
scas
pop
je
sbb
push
in
add
test
mov
into
xorb
inc
pop
ficompl
pop
adc
mov
xorb
gs
mov
loopne
mov
add
pusha
and
mov
push
mov
ljmp
fadds
lods
add
push
jbe
cmp
xchg
or
stc
pop
mov
sbb
sub
mov
adc
and
mov
xor
ja
cmp
adc
enter
and
adc
daa
mov
mov
or
loope
push
pop
arpl
int3
testb
mov
mov
cmp
pop
adc
sub
orb
in
or
push
pop
cs
pop
jmp
mov
or
jl
and
push
push
xchg
sub
jbe
pop
inc
imul
dec
xchg
adc
cmc
jecxz
fnsetpm(287
sub
dec
cmp
shr
pop
pushf
std
pop
jle
lea
or
jl
and
xlat
or
pop
js
loopne
ror
push
ljmp
dec
shrb
push
sbb
ja
push
sub
icebp
sub
fdivs
mov
outsb
or
outsl
js
or
pop
mov
out
adcl
inc
arpl
pop
gs
xor
jge
imul
ja
add
adc
add
and
scas
sub
js
mov
ja
pop
jbe
sbb
in
lea
adc
sbb
jp
mov
ror
push
adc
jl
sbb
cld
jb
fcompl
push
clc
jbe
add
sub
cwtl
out
arpl
add
jbe
aaa
movsl
push
cwtl
inc
add
jmp
adc
jp
in
mov
rolb
mov
sub
sbb
add
xorl
ja
lods
cld
jbe
mov
mov
xchg
je
sarl
xchg
mov
pushf
pop
mov
add
das
mov
dec
popa
lret
hlt
test
cld
pop
icebp
and
loop
add
or
or
xor
push
lods
push
and
xor
add
adc
xchg
xor
and
cmp
test
jmp
and
pop
stos
xchg
sbb
push
fcmovnb
push
addb
insl
adc
add
inc
popf
inc
inc
sub
sbb
inc
push
or
push
shlb
mov
inc
dec
push
rolb
repz
sbb
test
shl
pop
ret
ret
ljmpw
or
lods
cmp
pop
pop
or
push
jne
js
dec
ret
inc
add
inc
out
jnp
mov
or
aad
adc
cmpsl
jns
push
jnp
push
push
pusha
xchg
in
rcrl
add
frstor
inc
shlb
push
out
rcrl
aam
ret
icebp
pop
mov
and
and
aas
pushf
push
sub
add
dec
jne
jmp
push
inc
adc
sarl
dec
es
jne
mov
pop
xor
ret
adc
test
push
or
pop
xor
jge
jo
jmp
daa
xchg
sub
push
pop
xchg
adc
xor
push
stos
ret
rolb
jae
outsb
into
add
sahf
fcoms
out
aaa
jecxz
cmp
push
cld
jne
mov
push
cmp
outsb
sahf
out
jne
es
jne
dec
sub
out
aam
xorl
push
or
and
mov
dec
jno
lahf
xlat
or
adc
jmp
std
cmp
adc
cld
jmp
fldt
adc
in
adc
adc
inc
inc
inc
es
stos
push
test
fdiv
mov
add
push
sbb
mov
push
hlt
mov
mov
in
adc
repnz
and
adcl
out
outsb
push
mov
andb
or
adcl
adc
and
orl
nop
or
pop
xchg
or
adc
or
xor
dec
pop
pop
add
pop
or
popa
jb
loope
icebp
mov
add
add
in
sbb
rclb
add
inc
and
or
add
lret
out
aaa
mov
jmp
pop
add
xlat
xchg
xor
iret
je
mov
call
or
jg
add
mov
cmp
test
test
add
jl
adc
push
push
push
push
mov
and
mov
ja
jae
out
inc
js
inc
adc
add
lea
sub
or
dec
dec
mov
sub
add
movsb
jo
add
mov
add
ljmp
or
pop
adc
sub
cmp
loopne
cmp
call
test
add
dec
and
rcll
imul
popa
loopne
push
clc
ret
icebp
ret
mov
popa
aam
lods
add
ret
aam
mov
adc
mov
inc
insb
inc
lea
and
inc
lea
inc
dec
push
jl
ljmp
or
jbe
or
mov
jp
clc
push
sbb
decl
andb
fmuls
lock
and
sub
cwtl
add
push
sub
sub
cmp
into
fimull
lret
fsub
or
push
loopne
or
fisttps
push
adc
sarb
push
ja
and
cmpsb
jne
pop
mov
lock
push
or
jmp
add
incb
mov
inc
je
mov
insl
mov
mov
sbb
or
jbe
add
jmp
or
mov
inc
inc
push
fdivrs
sbb
scas
mov
cltd
mov
pop
add
mov
inc
cmp
jb
pop
loopne
adc
jae
adc
cmp
jl
push
rolb
fcompl
lea
xchg
movsb
and
outsb
sub
and
int3
pop
xor
push
test
hlt
mov
cmpsb
lock
mov
ret
iret
mov
lods
fsubrs
sub
or
shl
push
adc
jle
dec
jl
repnz
lret
add
dec
push
and
xor
xor
xor
jo
and
or
fstpl
pushf
test
mov
stos
jne
mov
and
movsb
jmp
sbb
into
out
cmp
je
test
je
iret
repz
cwtl
and
faddl
aam
mov
pop
addr16
outsb
or
xor
inc
lret
sbb
mov
and
jl
xchg
xor
lock
iret
dec
lea
ljmp
mov
push
sarb
das
mov
loopne
out
push
pop
push
ret
mov
cli
out
into
add
inc
call
xor
inc
jns
pop
inc
jmp
fistpl
movl
jne
sub
out
xor
pop
inc
adc
cmp
pusha
push
xor
adc
mov
cmp
je
cmp
and
inc
jns
adc
adc
pop
fidivrs
add
mov
js
xor
xor
xor
rcr
or
roll
push
cmp
je
sbb
add
test
les
mov
push
jle
sub
jmp
xor
sbb
sub
les
add
and
add
and
dec
shlb
shlb
push
rclb
jnp
adc
shl
cld
std
mov
sbb
adc
sbb
test
inc
xor
jns
js
push
orb
adc
mov
adc
add
pop
pop
push
mov
mov
je
push
sub
bound
xchg
aaa
jne
mov
mov
pop
lock
mov
inc
mov
dec
jne
xor
or
adc
add
movb
adcb
add
sub
jae,pt
sbbb
fisubrl
test
cltd
in
lds
push
or
rcr
push
inc
xor
rorb
adc
adc
rcll
fimuls
adc
js
cmp
dec
cmp
imul
sub
pop
insb
sbb
test
je
insb
ljmp
jne
test
cmp
adc
and
inc
or
fwait
lea
xchg
lock
xorb
inc
in
push
insb
filds
icebp
lea
push
adc
or
arpl
or
adc
lock
pop
cmp
lcall
mov
in
daa
mov
and
lea
and
cmp
int3
push
pushf
inc
xchg
mov
daa
mov
xor
ret
or
testl
aaa
add
push
or
in
lret
in
dec
std
dec
or
inc
lods
pop
test
cmp
popa
xor
push
rol
jp
gs
stos
in
dec
inc
xchg
ret
and
rclb
cmpsl
adc
or
adc
icebp
pop
mov
push
mov
mov
add
push
mov
inc
pop
out
mov
sub
loope
jmp
mov
or
movsl
addb
mov
jp
xchg
arpl
hlt
mov
aas
adc
aas
jne
enter
jecxz
inc
sub
and
push
inc
in
inc
add
inc
fdiv
out
sub
jb
or
mov
mov
inc
sar
add
inc
push
bound
fsubs
pop
movsb
inc
je
push
or
sti
daa
frstor
js
rcrb
cmp
adc
push
add
data16
mov
push
sbb
into
and
push
femms
jmp
xor
sub
dec
fmuls
push
mov
les
ja
jno
mov
dec
inc
mov
cmc
pop
subb
js
dec
mov
cld
mov
jb
out
pop
fcmovnu
push
sbb
sub
in
orl
popf
les
jbe
push
pushw
and
ja
je
push
insb
push
inc
arpl
mov
addl
dec
test
cmp
pop
aad
adc
push
mov
jbe
mov
pop
idiv
and
decl
mov
call
mov
pop
fimull
popa
test
mov
pusha
adc
cmp
jo
rcll
dec
mov
or
ficoml
test
dec
dec
loopne
dec
dec
pop
push
aaa
push
push
pop
dec
rclb
lcall
push
cmp
out
sbb
mov
xchg
mov
dec
dec
aas
imul
or
and
sbb
cmp
jnp
inc
adc
or
repnz
shlb
mov
add
or
out
adcb
sub
and
popl
mov
push
add
test
les
and
stos
sbb
sahf
rorb
push
push
push
mov
mov
push
in
jle
loopne
pusha
sub
push
jbe
and
lods
scas
movsl
add
push
jge
cmp
imul
call
leave
hlt
mov
jmp
outsb
add
adc
sub
sub
mov
faddl
testl
adc
fs
adc
jmp
daa
adc
inc
je
ret
add
mov
xchg
aad
test
call
pmuludq
jmp
dec
je
add
or
aaa
adc
mov
or
push
out
xchg
insl
inc
add
sub
dec
adc
stos
icebp
push
xor
sti
jbe
mov
sbb
push
push
sub
push
lea
push
test
or
mov
test
movb
push
testl
fimull
push
push
addr16
jne
adc
push
jl
inc
shlb
add
dec
cltd
loopne
push
xchg
inc
jne
inc
sbb
push
repnz
rcll
add
cmp
mov
pop
and
test
movsb
dec
xchg
cmovp
in
jns
mov
outsl
or
mov
push
lret
out
push
sub
call
xchg
push
iret
or
pop
pop
dec
jmp
xchg
jbe
leave
add
lret
ja
out
pop
rorb
add
fidivrl
inc
pop
push
jmp
sub
dec
add
mov
push
pop
push
mov
hlt
in
loopne
fcoml
mov
test
js
pushf
mov
and
rolb
xlat
or
test
orb
jmp
cmp
jae
cli
push
push
sbb
mov
add
mov
or
add
call
test
ss
loop
pop
lea
add
sub
insb
push
ss
pop
sbb
cmpsb
call
push
adc
lcall
dec
fst
dec
gs
adc
out
das
sbb
sbb
dec
and
or
aas
rcrl
or
mov
pop
jle
sarb
push
pusha
ss
ja
jb
cli
or
lea
xchg
xchg
and
dec
dec
jae
jo
cmpsb
xchg
addr16
mov
and
push
decl
ds
cmpsb
jne
jle
xor
je
sbb
push
add
nop
push
lock
mov
jmp
sarb
ljmp
pop
sub
iret
push
push
cmp
mov
xchg
lods
push
idiv
or
mov
imul
push
into
cmp
lret
scas
scas
push
push
add
sbb
push
adc
xchg
imul
imul
lcall
mov
pop
xor
ret
test
jl
inc
inc
cmovbe
shl
xchg
data16
jge
sub
cmp
inc
jns
adc
stc
xchg
clc
push
xchg
mov
mov
mov
fs
cmc
mov
fs
dec
push
mov
mov
jge
insl
inc
dec
mov
pop
adc
push
mov
adc
shlb
clc
xorb
add
cmp
xchg
ret
mov
js
out
add
and
testb
pop
inc
mov
or
and
sbb
rcr
add
clc
sbb
shrb
fstl
and
inc
cmc
insl
add
mov
dec
inc
js
pop
sets
lret
push
rol
loope
pop
int
push
mov
jecxz
pushf
jecxz
push
add
flds
dec
loopne
jle
dec
subl
inc
fdivrs
mov
sbb
movsb
lret
inc
dec
xchg
mov
pushf
stos
in
enter
jne
pushf
ret
lock
xchg
icebp
or
inc
xlat
push
arpl
xor
and
dec
pusha
xor
in
push
add
ds
call
mov
ss
push
popa
mov
push
xchg
movsl
aam
pop
and
lds
mov
cltd
hlt
fs
mov
inc
adc
xor
loop
or
jge
cli
andl
adc
sarl
adc
and
push
mov
mov
sub
leave
inc
mov
push
adc
and
push
or
hlt
adc
xchg
adcb
inc
es
add
in
call
cwtl
sub
adc
lods
sbb
imull
pop
mulb
jmp
push
jmp
test
jne
adcb
xchg
lcall
fidivrl
or
sub
and
and
dec
cld
jmp
or
imul
add
in
push
ss
rorb
jecxz
jle
nop/reserved
adc
xorl
cmpb
mov
ret
test
ret
cmp
push
hlt
push
or
cmp
dec
sbb
jmp
pop
push
inc
stos
mov
or
push
dec
test
dec
xor
test
bnd
les
adcl
or
lock
loope
xchg
sar
add
mov
pushf
add
adc
cwtl
clc
push
into
je
aad
push
jecxz
cmp
fisttpl
and
popa
sbb
iret
jp
dec
add
jne
add
leave
and
jns
leave
dec
cmpsb
dec
cmovs
movsb
jns
fs
dec
lret
xchg
adc
sbb
push
inc
mov
push
xor
mov
int3
and
dec
mov
push
rcll
xchg
leave
dec
pusha
int3
add
decl
popf
jmp
cmp
pushf
lock
inc
and
jb
cmp
jl
mov
cmp
adc
out
sarb
inc
dec
pop
pop
jne
push
les
test
popf
adc
mov
jb
shlb
rep
jmp
mov
inc
cmp
or
fidivs
test
push
xor
jl
push
les
lock
adc
and
xlat
cmpsb
mov
pushf
mov
or
lods
psubw
mov
pop
jge
push
dec
add
lcall
xor
xchg
neg
adcb
test
jl
lahf
out
sahf
je
fs
push
mov
repz
mov
mov
call
cmp
repz
hlt
clc
push
push
cmp
clc
cld
push
xor
add
lcall
jmp
imul
ret
nop
inc
pop
xor
add
jno
fsubs
push
lea
jl
cld
mov
and
std
cld
out
cmp
sub
fimuls
pop
gs
sub
inc
pop
nop
pushw
push
push
je
pushf
fiaddl
jl
pop
push
fldcw
out
add
lret
mov
push
out
push
add
outsb
in
xchg
mov
sbb
insl
out
mov
mov
lock
clc
push
add
pop
jl
out
adc
and
bound
sbb
sahf
out
sbb
sbb
out
sahf
out
adc
or
jns
or
inc
movsb
loop
fimuls
push
fs
aaa
lds
push
push
add
pop
mov
adc
ja
in
inc
cmp
fs
mov
lock
inc
pusha
pop
dec
cld
cmp
adc
and
mov
mov
hlt
or
je
mov
sarl
sub
rcll
testb
jne
pop
movl
and
cli
add
pop
loope
cmp
or
pusha
out
push
add
mov
jg
sub
dec
insl
xchg
sbb
sar
mov
loopne
push
mov
or
fldl
ret
and
enter
add
insb
adc
jbe
movsl
rclb
sub
adc
movsl
loope
cmc
or
pushf
pop
mov
dec
and
or
jmp
inc
loope
inc
divb
pop
cmp
sbb
sarb
inc
inc
adc
cmp
nop
mov
push
or
inc
push
jb
lock
push
out
scas
cmpsb
lods
cmp
ret
adc
movb
pop
aam
adcb
loopne
inc
push
mov
aam
push
rcll
jo
dec
inc
call
fbstp
aam
and
or
add
push
sbb
enter
pop
in
or
loopne
add
xor
cmp
sub
xchg
cmpb
rcll
jne
ret
daa
mov
and
scas
mov
xlat
pop
or
je
and
push
outsb
jp
pop
push
popa
inc
xchg
lods
pop
jmp
test
xor
aad
add
jo
and
pop
or
add
stos
jmp
adc
call
mov
aad
adc
or
adc
roll
sub
test
adc
jnp
nop
ss
test
mov
es
lock
mov
shrb
rcrl
cmp
fwait
add
xor
add
je
sub
or
inc
pop
cld
jmp
sub
roll
lock
adc
data16
sub
stos
mov
dec
ljmp
push
pop
sub
cmp
subb
aas
sub
sub
insb
data16
cwtl
or
add
pushf
aas
das
sub
nop
add
mov
pop
xchg
mov
lock
cmp
es
movsl
jne
fadd
cmp
adc
sbb
enter
adc
mov
pop
aam
pop
adc
sub
push
sbb
js
loopne
insb
mov
in
rolb
xor
mull
sbb
push
addl
push
addr16
andl
movsl
adc
sbb
pop
push
xor
xor
pop
add
loopne
fcoml
push
popf
aam
sarb
fstpt
clc
or
test
faddl
lods
mov
js
sub
mov
add
hlt
fucomip
mov
jae
aam
aaa
dec
cld
xor
into
or
jae
adc
and
pushw
in
xchg
clc
jno
insl
push
jne
ror
jbe
mov
adc
pop
adc
xchg
mov
shll
xor
imul
cli
dec
jp
mov
call
movsb
adc
int3
xor
add
mov
or
add
into
jb
test
loopne
or
inc
or
dec
or
inc
addr16
jg
pop
push
je
and
mov
mov
inc
push
add
push
xor
cmpl
add
inc
stos
out
add
jne
test
push
push
mov
pop
inc
jecxz
in
push
add
push
jnp
leave
frstor
divl
sbb
inc
fists
or
sub
dec
mov
adc
adc
add
fmull
adc
and
jns
sbb
push
push
mov
or
insl
xchg
xchg
addb
outsb
mov
mov
pop
movsl
and
inc
add
ja
fsubl
jl
or
push
push
into
fucom
sub
pop
cmp
or
jmp
popa
jmp
shlb
dec
cmp
adc
call
or
in
mov
out
mov
stos
mov
aaa
cmp
popf
push
inc
sub
or
fcoms
movsb
jp,pn
xor
xchg
call
in
or
xchg
loopne
cmp
loope
pop
int
or
pop
add
cmpl
pop
sar
lahf
lea
aaa
sbb
add
movsbl
adc
and
imul
ffreep
xor
pop
sar
pop
lods
movsb
bound
outsb
pop
xacquire
push
add
pop
push
push
adc
orl
mov
rcr
clc
les
faddl
je
or
or
push
addr16
or
pushf
pop
cs
int3
pop
or
add
sub
sbb
inc
dec
sbb
cs
pusha
iret
loopne
sti
mov
adc
lds
mov
jo
add
adc
pop
fbld
push
imul
or
lea
ja
movsl
mov
cmp
hlt
pop
jo
outsb
sbb
mov
push
or
inc
insb
popa
ret
roll
lock
popf
mov
mov
cmpsb
push
mov
pusha
sub
imul
adc
and
push
ss
js
add
movsb
or
addb
inc
xor
imul
imul
sub
push
lcall
rcl
xchg
inc
mov
xchg
push
call
arpl
leave
fmuls
sub
das
add
dec
cmp
or
sbb
cmp
sub
adc
or
add
mov
mov
inc
adcl
push
mov
lock
and
cmp
inc
push
arpl
imull
xor
cs
arpl
xchg
add
jbe
mov
lock
mov
push
sbbl
and
in
adc
inc
push
or
mov
in
mov
fstpl
scas
or
adc
mov
popf
cmp
insl
cmp
roll
pushf
sub
shl
adcb
dec
shlb
pop
push
mov
pushf
test
ret
adc
push
dec
mov
movb
pop
xchg
popf
or
xchg
mov
mov
fdivrl
inc
lods
xlat
mov
rcrb
dec
rol
xor
mov
xor
lock
lea
call
jns
push
sbb
pop
mov
shlb
outsb
jo
jmp
inc
gs
add
fstl
mov
xchg
pusha
je
or
sub
test
insl
mov
movsb
addl
push
pusha
add
aaa
gs
mov
imul
pop
jbe
push
or
fldenv
lds
aad
shrl
and
shl
add
insb
daa
push
jno
add
mov
imul
movsb
addr16
mov
jmp
cmp
jle
popa
mov
dec
mov
jno
jge
test
rol
mov
sub
rcll
call
or
mov
pop
shr
push
push
insb
push
mov
fisttps
and
adc
and
sbb
scas
cmpb
sub
inc
sbb
cmp
add
mov
in
push
sbb
subb
adcl
adc
xor
call
jmp
aas
sub
inc
cwtl
push
mov
stos
push
das
fnstcw
push
xor
mov
sbb
cld
pusha
cld
cmc
shrb
orl
jo
inc
daa
add
daa
mov
push
push
arpl
test
out
cs
push
push
into
xor
xlat
outsb
icebp
loop
mov
mov
pop
mov
adc
push
jae
scas
jl
inc
cld
jmp
or
mov
sub
cltd
mov
dec
sbb
lods
bound
jl
jae
aaa
movsl
mov
fidivrl
adc
xor
pop
cmpsb
jmp
ret
sub
or
sbb
jecxz
pop
mov
popf
rolb
call
and
lea
sti
test
sbb
xor
inc
insb
call
add
stc
cltd
push
xchg
mov
outsb
pop
push
or
dec
repnz
ja
call
sahf
add
mov
inc
push
mov
in
movsb
divb
imul
frstor
and
fcomip
movb
inc
jmp
nop
mov
fmuls
js
jmp
dec
sbb
sub
repnz
sar
ret
cmpsl
and
mov
stos
pop
nop
andl
xor
add
sub
outsl
inc
and
shlb
mov
daa
mov
sub
or
decl
in
or
cmpsl
inc
sti
in
jle
cmp
adc
dec
sub
test
sub
pop
rolb
xchg
mov
leave
and
subb
xor
add
xor
inc
aam
adc
add
addr16
sub
je
adc
ret
adc
jle
cmpsl
sub
or
subb
push
jg
jmp
sub
or
jmp
pop
int
into
mov
mov
mov
cmp
arpl
add
add
les
negl
std
out
movsl
daa
pop
mov
mov
inc
pop
push
pop
in
cli
movsb
adc
cmp
xlat
std
mov
sbb
sarl
add
pop
xor
add
loope
mov
add
cmp
repz
pop
movsl
adc
add
lods
incl
adc
ja
ja
or
ja
xchg
add
dec
rcrl
ja
ja
and
ja
ja
imul
sbb
jae
js
js
js
add
xchg
jns
lcall
jns
lcall
jns
push
xchg
jns
jns
add
dec
jns
push
add
sub
fidivrs
jae
add
daa
mov
mov
adc
mov
inc
mov
push
popa
or
pop
adc
mov
ret
adc
and
shl
fidivs
mov
shlb
inc
jge
or
pop
pop
pushf
in
loop
shrb
test
cmp
mov
imul
rcll
test
push
in
mov
out
sub
in
pop
mov
pop
and
fdivs
xlat
lods
in
mov
test
dec
push
push
repnz
mov
ss
sub
push
test
movsb
movsb
push
mov
andb
into
js
ror
dec
dec
mov
adc
into
loope
and
add
adc
push
fsubs
pop
xor
add
cmp
rclb
arpl
ss
int3
push
nop
les
fdivrs
add
sti
and
aam
fcomp
sub
cmp
adc
push
jbe
mov
shr
pushl
insl
pop
call
lahf
xchg
test
jp
add
cmp
je
mov
inc
insl
adc
stos
mov
push
add
or
adc
insb
mov
adc
jmp
inc
loopne
loopne
add
xchg
pushf
loopne
push
mov
fsubrp
insb
sbb
adc
add
push
adc
and
in
mov
add
push
pop
sbb
jmp
test
inc
int3
popa
xchg
cmp
out
push
mov
push
jb
lds
popa
add
xlat
adc
push
xchg
jbe
push
add
dec
popa
call
add
jmp
ljmp
sbb
jge
out
cmp
add
push
adc
cmc
pop
push
xlat
push
xor
and
aas
and
mov
daa
pop
cmpl
fdiv
sbb
inc
xchg
es
ss
iret
ds
roll
jbe
sbb
jo
xchg
out
enter
sar
sub
arpl
sub
jae
push
iret
outsl
adc
mov
push
and
out
jne
pushl
mov
xchg
push
or
pop
push
add
subl
xor
mov
je
shll
out
fs
mov
movsb
lock
fcomps
inc
cmp
fcoml
cmpsl
mov
in
inc
inc
xor
push
dec
pop
cmp
fstpl
imul
in
pop
push
sbbl
dec
cmc
sub
dec
popl
mov
add
add
lds
icebp
pop
movsb
scas
sub
ret
inc
flds
fstps
mov
inc
push
cltd
sahf
pop
call
ret
mov
jmp
jne
outsb
fistl
sbb
hlt
or
insb
int3
push
mov
mov
pop
add
adcb
mov
sub
xchg
push
pusha
mov
xor
and
push
mov
xchg
jne
mov
test
inc
lock
fsts
xchg
xchg
movsb
and
dec
or
xor
loope
testb
movsb
fadd
aas
addl
push
sbb
mov
add
or
test
mov
sbb
cltd
pop
mov
pop
or
push
sti
sbbb
add
xchg
xchg
loope
or
or
ret
bound
sbb
lock
mov
adc
icebp
inc
into
mov
and
cltd
and
sbb
jo
jmp
or
add
fisttpl
xor
je
mov
dec
mov
daa
sub
das
and
and
cmp
jmp
push
sub
shrb
je
ret
add
sub
pop
pushf
mov
mov
ja
data16
lret
test
lds
sbb
andl
loopne
or
daa
call
push
push
sub
or
cld
mov
cwtl
out
jmp
lock
sbb
dec
mov
inc
daa
dec
jecxz
push
rorl
cmp
jne
push
cmp
mov
cmp
aam
das
nop
add
xchg
push
enter
xchg
sbb
add
pop
mov
es
ret
test
inc
inc
jp
mov
in
inc
add
jge
lock
add
ret
pop
cs
or
in
les
jbe
enter
sub
push
ljmp
jbe
loopne
xor
ja
pop
ja
enter
adc
jo
mov
or
nop
xorb
jge
ds
rol
or
jp
push
pop
ja
push
xchg
stos
lea
nop
dec
clc
mov
and
mov
sub
testb
aaa
lcall
frstor
xchg
clc
push
xchg
pop
pop
adc
sbb
push
in
or
inc
and
xchg
stos
orb
pusha
outsb
leave
push
add
pop
add
loopne
hlt
adc
enter
inc
push
jns
mov
shlb
cmp
fimuls
or
pop
and
adc
adcb
jb
adc
cmpb
inc
add
in
or
cmp
inc
out
in
cmp
es
pop
fwait
pusha
aam
add
add
in
cltd
in
push
push
rcrl
in
xchg
cmpsb
mov
lea
js
push
dec
push
enter
or
jl
jmp
pop
adc
call
clc
adc
add
je
xor
cwtl
divl
test
dec
notb
jne
nop
lret
call
push
mov
int
or
adc
add
pop
in
inc
cmp
mov
add
outsb
sub
pushf
cmp
jne
add
mov
mov
mov
jecxz
call
js
sbb
fs
in
mov
sub
out
xchg
add
mov
mov
jp
stc
andl
inc
lret
call
adc
nop
mov
leave
xchg
dec
rcll
add
loopne
ja
adc
lcall
movsb
xor
rep
pop
mov
iret
and
mov
push
nop
xchg
fdivrl
call
call
scas
cwtl
lods
nop
and
in
dec
ss
pop
dec
fmuls
loopne
adc
and
repz
add
add
in
aam
in
add
imul
mov
in
sbb
pop
mov
mov
andl
in
or
sti
imul
fs
dec
in
push
outsb
push
jbe
lock
daa
pop
push
shrb
lods
inc
call
xchg
add
shlb
or
inc
xor
add
and
test
inc
addl
out
jns
iret
into
sbb
sbb
mov
sbb
repnz
sbb
lea
adc
les
lock
lret
arpl
xor
in
xchg
ret
jne
outsl
and
call
cmp
and
out
bound
movsb
fwait
mov
sbb
adc
dec
pop
movsb
xor
insb
das
mov
or
out
cmp
rclb
subb
push
cmp
enter
lods
test
shr
lds
jle
add
dec
sti
fldl
cmp
jne
or
cmp
and
or
jne
jb
and
adc
fiaddl
or
andl
jo
sbb
rcll
mov
mov
add
push
add
fsubrl
add
pop
or
xchg
mov
jmp
sub
clc
je
out
or
push
test
push
fisubrs
inc
or
push
or
add
cmpsb
lock
call
sbb
adc
mulb
loope
mov
daa
add
fs
rclb
or
push
stos
lahf
add
add
pop
sub
and
mov
mov
inc
add
xor
imull
dec
or
cmp
rcrl
sarb
sbb
mov
outsl
jmp
loopne
roll
test
pop
push
hlt
mov
filds
sbb
stos
ss
out
and
mov
inc
add
push
sub
push
xchg
or
rclb
add
inc
add
fs
loopne
ficoms
push
push
addr16
pop
daa
imul
cli
sub
sub
push
jae
inc
cld
mov
push
fisttps
fsubl
imul
push
sbb
lods
jmp
and
sti
xchg
into
mov
mov
xchg
mov
pushf
adc
mov
mov
lahf
jg
idivl
leave
sub
mov
cmp
and
in
sbb
mov
sub
outsb
xor
push
cld
jmp
xchg
les
xor
add
cmp
iret
ja
mov
movsl
inc
jo
sarb
in
mov
mov
xchg
dec
mov
sub
push
cltd
inc
sub
cmp
and
sbb
cmp
cmp
fidivrs
inc
push
pusha
jmp
xorb
pop
mov
shlb
push
mov
jne
movl
outsb
pop
pop
pop
push
inc
pop
cmp
std
jne
pusha
fisubl
lods
jmp
sub
add
cmp
les
dec
mov
mov
inc
cmp
xchg
adc
push
or
add
cmpb
and
push
mov
and
jnp
fwait
test
mov
dec
sbb
mov
cld
or
out
jb
andl
jmp
lock
add
dec
in
push
popf
xchg
ss
aaa
push
and
push
aas
mov
inc
inc
jnp
jae
cmp
mov
inc
rcl
pop
ret
jne
mov
test
inc
push
leave
jge
sub
int
leave
cmp
sub
lea
and
xchg
shrb
sub
jge
jg
push
jmp
loopne
subb
inc
cmp
mov
inc
add
cli
movb
cs
and
inc
sub
jge
add
jb
mov
push
push
sbb
pop
push
ficoml
call
xor
add
push
push
jg
cltd
sahf
push
dec
jne
mov
lea
jo
addl
sbb
lahf
xchg
idivb
mov
push
mov
inc
dec
jne
sbb
add
scas
stos
mov
jmp
push
loopne
fisubl
lds
xor
cmpsl
cmp
mov
cmp
repz
js
cmp
lcall
pop
xchg
cs
adc
push
xchg
or
cmp
adc
and
pop
inc
lock
out
fistl
mov
and
lcall
xorl
pop
imul
pop
push
ss
push
cmp
pop
push
xlat
testb
insb
lret
ljmp
pop
dec
xor
pusha
mov
mov
shl
btr
lock
add
neg
insb
ret
out
inc
sbb
inc
jmp
xor
mov
or
mov
int
add
add
ret
sub
subb
insl
adc
out
and
ljmp
xchg
and
adc
cmp
loopne
xchg
xchg
loopne
pop
lea
inc
inc
ror
test
std
and
or
cmc
inc
jecxz
xor
push
idivb
mov
dec
push
sbb
mov
test
adc
lea
or
cmpl
xor
adc
aaa
cmpl
ret
popf
and
ret
adc
addb
movsl
sub
add
pop
xorl
xor
adc
mov
in
sarl
ret
je
cmp
sbb
and
mov
pop
adc
dec
lods
pushl
out
rolb
in
sbb
das
adc
mov
fiaddl
les
lahf
dec
mov
ljmp
and
jl
sbb
addr16
pop
pop
sbb
cwtl
daa
sbb
dec
ljmp
jle
jg
je
lcall
js
add
inc
add
add
inc
and
mov
aas
add
mov
cs
jp
push
mov
fstp
loop
adc
popa
in
xchg
pop
or
jbe
in
js
mov
pop
sbbl
and
jb
add
add
imul
and
push
add
leave
mov
decl
fsubrp
mov
or
ret
or
add
mov
push
test
dec
pushf
sbb
or
inc
cwtl
sti
fsubrl
mov
push
push
mov
adc
cmpsb
or
pop
sbbl
xor
push
or
inc
movl
addb
push
mov
lds
xor
dec
add
add
add
sahf
xchg
mov
lock
sub
inc
mov
shlb
gs
mov
push
inc
sbb
imul
xchg
fisubs
fmuls
xor
in
mov
loopne
and
into
insb
sbb
jle
daa
cmp
sub
enter
push
xor
xchg
pop
push
cmp
push
cmp
sbb
xor
rcr
pop
sbb
and
cmp
movsb
jecxz
push
adc
mov
add
insl
add
inc
and
nop
add
fsubrs
xor
cmp
dec
ret
add
and
jle
sbb
push
sub
xor
jecxz
dec
mov
in
cmc
lods
jbe
loopne
lahf
insb
and
pop
cmp
sbb
xchg
mov
cmp
mov
popa
je
insl
jg
jge
cmp
fldcw
rorb
loop
push
mov
gs
jo
movsb
cmp
mov
cmpl
bound
shlb
es
adc
add
and
mov
mov
mov
add
sbb
ja
push
push
and
jne
or
push
mov
sub
and
or
inc
pop
fucomi
sub
pop
jl
fcmovu
call
mov
inc
fwait
push
shlb
nop
stos
lahf
xor
xchg
sbb
and
xchg
mov
xchg
inc
xor
add
lods
xchg
add
sbb
lahf
shrb
shl
mov
jae
por
mov
test
aam
jmp
lds
jle
push
cli
dec
and
shll
push
in
shlb
sbb
mov
or
jnp
cld
frstor
lsl
sbb
or
and
cld
sub
sbb
dec
icebp
pandn
xchg
push
bound
test
add
adc
je
enter
add
sub
dec
jo
ret
push
inc
mov
push
or
shll
enter
or
xor
dec
fnstcw
clc
testb
xchg
pop
andb
jbe
mov
dec
pop
inc
mov
aam
mov
inc
out
data16
ficompl
js
add
sub
test
jne
jle
jmp
sbb
les
dec
lret
jo
jne
cmp
jo
cs
push
add
pusha
adc
rcr
push
inc
push
call
lock
rcl
ja
add
sti
pop
xchg
cmp
enter
jmp
addb
fiadds
mov
mov
push
fadds
nop
inc
jo
into
das
cs
pop
jg
sbb
pop
rorl
dec
add
and
sbb
out
or
adc
mov
lock
pusha
test
add
push
lahf
jg
shll
fld1
cmp
inc
js
sbb
mov
das
or
stc
cmpsl
subl
mov
pop
or
xchg
jmp
decl
or
orb
shl
xchg
dec
mov
and
lret
mov
fmull
fstl
xor
bound
mov
adc
jne
lea
xor
inc
lock
nop
mov
scas
dec
lods
push
mov
rcll
iret
repz
aaa
cs
mov
push
lcall
pop
in
add
shlb
dec
dec
mov
testl
push
out
push
mov
mov
push
andb
loop
mov
cmp
cs
push
or
push
js
mov
pop
or
je
push
cltd
jmp
inc
faddl
adc
jl
and
adc
or
inc
test
adc
cmp
cmp
mov
lahf
arpl
and
push
push
test
inc
aaa
adc
mov
stos
imul
fnstsw
sbb
adc
dec
test
inc
or
push
mov
sub
or
lock
pop
sbb
add
fidivrl
ljmp
or
movsb
push
js
in
rorb
adc
sub
gs
loop
popf
fadds
cs
int3
call
sbb
push
sub
mov
lods
std
inc
mov
cwtl
jne
push
sbb
inc
pop
mov
movsl
pop
push
mov
sar
pop
dec
push
pop
pop
mov
mov
push
fwait
or
dec
dec
dec
stc
stos
movsl
je
out
dec
ret
cvttps2pi
lods
jno
idivb
rorl
pop
xor
scas
or
mov
sarb
aas
mov
into
cmp
mov
lahf
rorb
cmp
jb
stc
adc
das
ret
push
jb
cs
xchg
sbb
mov
ja
inc
lret
adc
dec
dec
jne
leave
in
jne
or
add
jb
mov
add
movnti
mov
pusha
ljmp
pop
inc
lea
mov
mov
and
inc
mov
push
sub
call
test
call
or
adc
sub
ret
jbe
lahf
ja
inc
fstpt
push
inc
sub
lret
mov
mov
and
std
data16
jne
cmpb
pop
jb
cli
movl
inc
xor
and
inc
push
or
cmp
xor
cmpsb
rorb
jmp
cmp
test
test
andl
scas
mov
stos
movl
test
pop
lret
xchg
xchg
dec
loopne
or
or
push
fs
push
adc
mov
clc
fs
and
fiadds
jle
push
or
push
add
mov
sbb
loope
jle
push
inc
lea
in
pushf
adc
push
cmp
dec
push
mul
dec
loope
lcall
es
fimull
sbb
cwtl
xchg
sbb
push
cmpsl
mov
pop
push
test
push
or
xchg
add
adc
or
and
lret
xchg
popf
pop
roll
testl
daa
mov
or
push
mov
xor
mov
cld
or
and
lret
dec
add
jb
push
shrb
mov
enter
mov
dec
nop
lea
bound
lcall
sub
xchg
xor
add
push
loopne
or
mov
outsb
xlat
xchg
adc
loope
pop
sub
iret
hlt
add
mov
and
std
into
out
adc
enter
xor
je
or
cmp
popa
icebp
xlat
push
jnp
popa
adc
rcr
jno
add
pop
mov
mov
pop
push
add
ja
popa
jne
cmpb
test
int3
arpl
fisttpll
jp
mov
cmpl
mov
addb
push
lret
mov
out
and
mov
xchg
pop
inc
lret
jl
adc
frstor
cmp
rcll
mov
outsl
or
addl
lea
scas
inc
outsb
push
inc
mov
mov
pushf
mov
mov
dec
mov
sub
mov
or
mov
xchg
sub
inc
mov
cld
scas
test
adc
inc
daa
add
inc
pop
repz
mov
push
in
push
aam
xor
xchg
out
loope
inc
push
ret
push
scas
test
sbb
mov
test
push
or
or
lret
mov
enter
mov
mov
adc
dec
mov
sysret
jle
mov
lea
xchg
xchg
xor
scas
fistpl
cmp
aas
test
inc
repz
sbb
sub
bound
dec
loope
push
pop
or
mov
dec
data16
rolb
mov
jmp
push
orl
dec
je
enter
inc
push
cmc
shll
inc
pop
nop
mov
mov
je
mov
or
call
sbb
or
dec
xor
jg
int3
cmp
daa
jo
popf
loopne
sub
test
jne
rcl
sahf
dec
and
adc
repz
sbb
fisttps
jae
dec
sar
or
and
jle
mov
pop
jmp
fwait
cli
xor
jge
dec
lahf
fstpt
sbb
mov
je
push
push
mov
out
sbb
test
xchg
add
nop
dec
dec
or
ret
sub
outsb
cwtl
sub
and
dec
gs
jmp
inc
xor
and
mov
inc
pop
adc
sbb
dec
mov
adc
adc
push
js
icebp
adc
push
clc
lods
icebp
daa
pop
mov
mov
mov
arpl
adc
in
mov
sub
xchg
cs
pop
outsl
xor
rorl
iret
sarl
movsl
push
mov
cmpsb
pop
gs
mov
push
mov
and
push
test
movsb
add
xchg
mov
and
pop
jecxz
pop
lods
pop
adc
stc
ret
enter
pop
sub
or
cmp
and
out
jo
pop
xchg
cmp
or
or
mov
pop
lock
add
xchg
dec
xchg
cmp
pushf
pop
add
fisubrl
pop
add
push
xchg
or
add
ret
push
pusha
xchg
movsl
cmp
mov
xor
mov
outsl
push
mov
nop
jge
mov
or
and
aad
inc
mov
push
lea
mov
in
xor
xor
aad
lds
push
push
inc
aaa
add
and
mov
push
mov
xchg
push
dec
sub
sbbl
test
cltd
lea
add
or
mov
xor
inc
test
jb
xor
cmp
adc
xor
outsb
push
ret
fcoml
sub
test
fsubrs
xor
xchg
sbb
jecxz
and
andb
sahf
add
mov
mov
push
jb
enter
xchg
sbb
xor
jb
movsl
mov
push
jecxz
mov
xchg
cmp
daa
mov
inc
push
mov
and
leave
and
and
jecxz
mov
leave
jne
push
arpl
leave
inc
lea
andl
push
lods
lods
lods
pop
push
and
jne
fisubrs
mov
js
or
aam
int
adc
add
add
jbe
push
ret
out
jns
mov
jo
ss
add
sbb
adc
dec
ror
or
pop
cmpb
inc
add
sub
addr16
mov
rcrb
or
sbb
adc
icebp
add
out
pop
inc
mov
xor
pop
inc
and
inc
or
pop
pop
imul
add
movb
add
push
pop
lahf
loop
mov
mov
adcb
or
stc
mov
in
test
movsb
gs
jmp
sbb
cwtl
add
push
jg
inc
adc
mov
and
xor
orl
dec
leave
and
adc
pop
outsl
enter
testb
shlb
adc
inc
cltd
sbb
jno
xor
jl
ja
mov
push
test
cmp
sbb
jne
add
or
add
push
add
clc
ret
ss
push
test
fstpt
sti
jb
test
mov
add
or
je
mov
int
lret
sub
ret
adc
std
cld
pop
fidivl
sbb
lret
or
and
outsl
mov
testb
fdiv
xor
or
ret
or
add
or
pop
addl
movsb
and
jle
popa
add
sub
std
mov
les
mov
push
mov
shll
das
ds
je
jmp
bound
inc
cmp
cmp
xchg
or
leave
push
dec
in
sahf
sar
push
dec
hlt
mov
test
jne
push
lea
cmpsl
test
or
inc
lock
movsb
adc
loopne
fildl
or
ljmp
push
pop
add
nop
mov
cs
or
jle
clc
sbb
push
jg
jmp
mov
pop
movsb
rorl
or
cli
ja
pop
mov
push
dec
or
ror
jns
dec
jecxz
add
test
jmp
sub
dec
movb
call
add
jmp
scas
int
pop
pushf
or
cli
pop
xor
test
mov
scas
jno
incl
or
sub
and
out
mov
add
cmp
and
shll
jmp
jg
mov
ss
nop
movsl
cmc
xchg
xor
dec
pop
pop
lock
daa
cli
rcll
lock
divl
jno
imul
add
xor
and
movnti
outsb
or
mov
cmp
jne
outsb
pop
inc
leave
lock
jecxz
cwtl
cmp
dec
pusha
and
or
push
test
gs
cmp
ljmp
in
mov
fs
out
call
cmp
push
push
mov
pop
cmp
lret
cmp
gs
sub
mov
cmp
mov
test
xchg
sahf
pop
mov
fs
and
pop
ror
xor
pop
adc
sbb
lock
cmp
rol
andl
xor
rolb
push
sbb
and
pop
xchg
rcl
jmp
inc
push
inc
inc
mov
adc
mov
cmc
and
and
sbb
mov
adcb
push
clc
cmp
xlat
cmp
test
mov
out
xchg
inc
push
add
push
sbb
cmp
add
jmp
outsl
xchg
jbe
add
mov
push
mov
jecxz
dec
test
mov
out
jne
lea
pop
hlt
push
test
imul
js
loop
pop
pop
mov
xor
test
dec
adc
add
in
int3
inc
lret
nop
adc
inc
shlb
cmpsl
adc
pop
xorl
jb
shrb
add
xor
jo
push
push
pop
pop
pop
js
sub
repnz
push
ret
cmp
icebp
cmp
enter
sbb
or
dec
mov
outsb
or
fdivrl
addr16
add
dec
or
out
sub
fidivrl
movsl
adc
incl
fidivrs
add
xor
loopne
inc
cs
je
cmp
pop
das
mov
lret
or
js
sbb
lods
imul
xchg
or
cld
push
out
ljmp
pop
pop
sub
inc
jle
in
jae
push
cld
add
sbb
add
cs
insl
push
mov
and
es
gs
add
or
test
ds
mov
push
sub
xor
pop
dec
jbe
push
pop
mov
mov
enter
sbb
or
aad
mov
dec
lea
int3
cmp
rcrb
jle
rorb
dec
data16
jae
lea
add
add
es
mov
xor
lahf
subl
scas
daa
orl
mov
jnp
pop
loopne
xor
imul
sub
insl
jno
jecxz
enter
je
std
pop
add
clc
push
sub
lea
psubsb
or
stos
jo
pop
push
xor
xchg
and
dec
dec
and
sahf
add
cmp
mov
push
push
pop
push
int
sarl
mov
lea
daa
inc
test
dec
or
dec
lock
outsb
fidivrs
movl
add
pop
movb
xor
int
xchg
pop
dec
inc
push
or
cmpl
push
or
adc
lret
in
inc
stos
sbb
add
ret
mov
mov
cmp
fnstsw
mov
push
jl
pop
or
add
arpl
lret
xlat
xorb
faddl
add
xor
inc
jnp
and
cmp
or
rorb
and
or
loopne
into
sub
shll
add
xlat
xor
jl
or
nop
fstpt
cmp
sbbl
scas
sub
or
test
push
fmuls
fs
mov
clc
mov
and
ret
add
xor
jmp
shl
jno
sub
verr
push
adc
movsl
pop
incl
xchg
adc
decl
dec
test
test
scas
je
or
orb
jmp
mov
dec
push
pop
jmp
lea
dec
jge
or
orb
inc
sub
push
aaa
xor
mov
mov
jne
jmp
inc
sarl
add
or
je
bound
sub
mov
movl
inc
and
loope
mov
ret
out
inc
mov
pop
idivb
test
pushf
hlt
mov
add
fcmovnbe
dec
movsb
cmp
movsb
jno
dec
rcrb
js
or
dec
out
mov
push
jge
rolb
mov
sbb
cmp
add
adc
movsl
cmp
lock
enter
mov
lock
xchg
adc
sbb
cmp
push
dec
jg
fdivs
out
repz
adc
bound
lock
add
push
lret
mov
mov
mov
pop
adc
jae
pminsw
xchg
jl
ret
mov
lea
push
sbb
lea
pop
pop
push
sub
push
outsb
jg
mov
cmp
jecxz
or
sub
leave
testl
pop
mov
add
push
cmp
jbe
jle
or
xor
arpl
jb
xchg
xchg
das
push
push
jb
pop
addr16
aaa
sbb
es
add
push
add
jnp
incb
ss
fs
daa
jg
push
test
adc
jmp
mov
cmp
pusha
adc
int
mov
jle
mov
or
pop
adc
jge
iret
in
sub
xor
sub
in
xor
inc
js
cmp
jne
lret
adc
adc
push
lods
test
addl
sbb
mov
and
loop
xchg
push
add
pop
mov
mov
lar
inc
add
or
and
lock
addr16
add
pop
adc
xor
push
clc
add
inc
mov
rolb
mov
lea
inc
ret
daa
pop
pmulhuw
sub
push
lock
xor
mov
or
push
lods
js
xchg
add
dec
or
bound
cli
ret
out
push
jbe
adc
popa
mov
pusha
cld
out
cmpl
loopne
iret
jne
gs
dec
add
push
and
sub
or
and
and
cmpl
add
sbb
inc
not
aam
scas
test
scas
hlt
jge
inc
push
sbb
pop
and
push
in
mov
sub
repz
les
sub
loopne
xchg
sbb
xchg
lds
push
push
push
and
cld
sti
xchg
stos
inc
pushf
std
mov
outsb
mov
add
pop
adc
pusha
out
repnz
in
lea
mov
shl
js
xorl
xor
add
das
int
cmp
and
into
mov
insb
sbb
outsl
cwtl
or
add
jns
ret
ss
ja
add
je
movl
andb
jnp
mov
sbb
fidivrl
clc
lock
jb
add
and
or
push
inc
js
popf
out
dec
mov
or
addl
lock
pop
lea
mov
mov
pop
inc
leave
lock
inc
push
hlt
mov
xchg
int3
mov
mov
daa
fmul
ja
mov
and
sarb
or
add
ret
sub
inc
add
jmp
pop
test
js
movsb
push
or
mov
adc
push
lock
mull
lsl
cmp
fsubrp
inc
push
pop
push
push
inc
shr
rcr
shr
rcr
or
or
repz
dec
cmp
ja
popa
lock
pop
jb
cmp
or
cmp
or
sti
jbe
dec
sub
sbb
mov
out
or
fisubrl
hlt
mov
or
xchg
movsl
inc
jb
sbb
pop
sbb
clc
dec
sbb
je
inc
push
or
cmp
inc
add
negl
inc
fldenv
fnstenv
addb
sub
out
imulb
jge
xor
add
inc
sub
jb
add
cmp
mov
and
shlb
and
movsl
dec
popf
in
jl
push
mov
push
loopne
int
wbinvd
daa
push
inc
lcall
xchg
xlat
mov
and
and
stos
and
testb
roll
sarb
into
jmp
insl
or
adc
and
jmp
push
push
sbb
nop
out
insl
adc
sub
jmp
es
push
dec
and
lods
pop
mov
andb
sub
sbb
jmp
or
sbb
imul
xchg
xchg
mov
lock
sbb
add
sbb
int
dec
adc
add
xchg
faddl
pop
movsl
cmc
jne
pop
add
pop
lds
imul
pop
inc
cmp
mov
andl
rcrl
es
adc
or
dec
inc
decb
dec
or
sub
adc
test
lock
out
add
hlt
pop
and
mov
xor
clc
rcr
and
lock
shl
in
cmpb
aam
ret
cmpb
mov
push
sub
lea
mov
pushf
out
mov
xor
pushf
or
jb
pop
fisubl
fdivrl
lods
fmuls
shl
fwait
loope
sub
rcrb
decl
jo
mov
mov
clc
mov
or
fdivs
dec
fcomp
push
dec
je
mov
lret
pop
addl
xor
inc
adc
addr16
jmp
mov
cmp
outsb
add
xor
fidivrl
mov
pop
sti
stos
or
jbe
push
add
pop
adc
and
or
sarb
les
cmp
mov
xor
add
sub
mov
mov
sub
push
fildl
push
push
loopne
adc
fs
add
aaa
femms
jne
push
testb
pop
adc
outsl
mov
int3
mov
push
loope
or
or
sbb
push
adc
lds
and
fmul
inc
mov
pusha
nop
aam
sbbb
fidivl
lahf
push
mov
cmp
subb
or
inc
out
push
lea
shlb
loopne
or
pop
inc
pusha
xor
cmp
inc
jmp
cli
in
add
fadd
mov
inc
fdivs
imul
jmp
push
or
enter
and
in
xchg
jno
and
sbb
scas
push
mov
mov
loope
inc
cs
insb
lock
xor
icebp
xor
cmpsb
out
xor
push
call
jne
push
adc
in
jne
and
add
loopne
les
mov
stos
add
jle
and
aaa
jmp
cmpsb
loope
shr
je
in
adc
in
das
subb
cwtl
iret
testl
and
lods
push
stc
jle
fisttps
jg
jg
outsl
inc
or
stc
jl
repz
jle
xor
jg
jg
jnp
dec
jg
jo
mov
std
adc
xor
mov
aam
pop
cmp
pop
ffreep
lea
lea
inc
out
push
mov
shll
pop
xor
mov
inc
enter
jo
or
inc
inc
push
negl
pop
popa
and
mov
lret
ret
lret
ret
inc
push
mov
shr
dec
mov
dec
xchg
lods
je
imul
popa
gs
lds
inc
adc
pop
cmp
xor
call
xor
in
cwtl
and
dec
push
and
inc
out
push
mov
inc
cmpsb
xor
mov
sub
fidivrs
and
ljmp
mov
jo
add
xchg
imul
out
shl
sbb
clc
or
mov
and
and
test
js
jnp
pop
add
lret
or
call
iret
or
in
mov
sbb
inc
mov
push
and
cmp
push
xor
rcll
mov
lea
sub
mov
pop
nop
or
popf
adc
add
ds
mov
inc
ljmp
gs
pop
pop
orl
cmp
or
sub
shlb
xor
insl
xchg
push
pop
ja
pusha
imul
adc
and
lods
mov
pop
xchg
inc
and
inc
and
test
or
les
cmp
mov
push
push
inc
test
cmp
push
popf
sti
or
and
or
xor
mov
jle
test
push
je
xchg
cli
adc
std
popf
xor
lea
lea
or
test
int3
push
aas
in
mov
cmpl
add
add
dec
scas
jle
add
pop
jne
je
cmp
ficomps
enter
add
les
stos
adc
pop
adc
dec
pop
inc
jnp
or
mov
dec
and
ss
sub
jno
add
jno
push
or
or
ljmp
jp
sub
roll
ljmp
inc
cmp
cmp
inc
push
push
push
mov
push
jne
enter
adc
adc
jmp
out
mov
and
leave
jnp
shlb
jo
push
sbb
jne
iret
dec
je
test
sbb
shlb
sub
call
or
rcll
push
pop
cmp
and
xchg
aas
sub
cmp
loop
add
add
addl
mov
daa
fcmovbe
scas
je
mov
bswap
andl
shrb
and
pop
pop
mov
pop
mov
mov
test
mov
ds
add
mov
cmp
rorl
mov
mov
outsb
test
and
mov
jmp
pop
loope
fs
lcall
sub
mov
add
ficompl
adcl
cmp
cld
das
xor
lock
adc
mov
loop
pop
pop
dec
adc
sbb
cmp
add
inc
lods
into
lods
sub
repz
adc
add
lea
adcb
cmp
jp
push
add
xchg
mov
pop
sbb
push
cmp
sub
push
insl
cmpsl
and
inc
mov
test
das
or
and
insb
adc
dec
mov
push
or
sbb
adc
clts
notl
mov
and
ljmp
inc
jmp
xchg
popf
pushl
adc
ret
cmp
pop
aam
lret
jl
and
add
push
mov
sub
sbb
or
xlat
and
push
push
nop
pop
sub
dec
dec
mov
cwtl
or
imul
push
call
mov
sbb
adc
push
lods
mov
cmp
sbb
push
xchg
inc
jmp
push
mov
cs
insb
or
sbb
ja
loope
sbb
iret
and
pusha
add
dec
test
pop
dec
cmpsb
mov
add
outsb
mov
pusha
cmp
clc
add
mov
sbb
push
outsl
sub
xchg
add
jmp
andl
scas
loopne
push
jmp
mov
stos
popf
test
scas
dec
and
push
fdivr
sub
inc
jle
sub
cmp
lock
in
mov
or
popf
shl
jbe
or
mov
aas
dec
jae
out
int
lock
loop
sbb
adc
sbb
mov
pop
insb
loope
sub
pop
jmp
adc
mov
jge
push
testl
mov
pop
xchg
outsb
add
jne
dec
dec
jae
imul
sbb
aad
cmp
ret
fldpi
mov
outsb
mov
rclb
bound
aaa
mov
adc
movsl
or
cwtl
mov
pop
outsb
push
and
addl
es
pop
fmul
movsl
jbe
sub
mov
pop
inc
stos
loopne
je
mov
cwtl
mov
test
nop
mov
inc
mov
cmp
aaa
mov
in
testl
add
mov
jecxz
fldl
pop
add
dec
dec
or
iret
sarl
mov
dec
les
repnz
test
lea
cmp
adc
or
jecxz
sbb
push
inc
jmp
cmp
pop
imul
xor
mov
add
add
mov
popf
aaa
jne
adc
mov
movsl
sub
pushf
push
fsubrs
cwtl
jge
xor
dec
adc
aaa
dec
sbb
test
add
sar
cmp
adc
or
pusha
add
mov
mov
cmp
add
mov
lcall
jne
loopne
adc
movsb
push
mov
add
int
sbb
call
add
loope
insb
pop
mov
sbbl
sbb
mov
jb
dec
push
or
jge
movsl
add
enter
push
inc
divb
ret
adc
or
mov
roll
inc
pop
pop
lea
nop
inc
mov
jne
rcl
jae
inc
not
pop
mov
push
or
mov
xchg
aas
into
ja
mov
push
push
pop
and
testl
adc
jne
mov
dec
out
sub
pop
dec
into
sub
jne
inc
or
aam
jle
cmp
sbb
push
iret
int3
push
test
pop
dec
shlb
or
nop
ljmp
add
test
jge
sub
push
pushf
fcoml
inc
add
mov
movsb
lea
push
adc
sub
add
lea
cmp
jb
jle
insl
stos
mov
pop
inc
ja
push
js
add
incw
cmpl
insl
mov
push
pushf
mov
mov
or
sbb
sti
jg
add
add
xor
pusha
lods
test
push
jmp
aam
call
testb
shr
adc
push
dec
aas
or
push
clc
lret
mov
bound
or
adc
mov
mov
adcb
sahf
add
test
lods
call
sbb
push
shrl
shl
shr
or
mov
shl
call
pop
jne
xor
inc
xor
mov
mov
push
mov
aam
loop
inc
xor
sub
jne
andl
into
add
rol
pop
test
adc
cmp
adc
jbe
fiadds
push
bound
jmp
or
lods
mov
fldenv
vmaskmovps
add
dec
and
mov
int3
jmp
out
or
daa
jmp
mov
pop
lret
add
push
lods
adc
scas
sti
dec
sbb
jno
sub
mov
push
int
fadds
jne
pop
imul
das
sub
test
sbb
xchg
daa
sbb
movups
mov
sbb
les
mov
inc
mov
jne
inc
in
xchg
add
stos
and
test
out
lcall
fcoml
ror
repz
in
movsl
lcall
push
mov
sub
inc
fmuls
rcll
incb
jne
testb
adc
sbb
mov
ret
subb
lcall
pop
sub
movsb
adc
fidivrl
pop
shlb
lea
adc
push
aaa
and
pop
and
push
inc
das
cld
cs
or
in
xchg
jbe
roll
jo
and
sahf
xor
ret
cwtl
stc
out
dec
rcrb
aas
rcrl
or
daa
lods
mov
jns
sbb
mov
add
or
dec
rcl
repz
adc
mov
push
lea
and
ror
or
or
mov
or
shrb
pop
lea
xor
add
cmpsb
dec
fwait
mov
mov
jbe
add
jno
push
ss
sub
rorb
inc
jne
cmp
jg
pop
je
adcl
push
add
inc
adc
and
cld
jns
movsb
out
inc
inc
inc
jo
mov
and
dec
jne
shlb
mov
jo
testb
push
fwait
mov
mov
push
xor
xchg
add
mov
je
sbb
add
xchg
loopne
outsl
push
shl
mov
inc
inc
cli
pop
pop
ret
or
pop
daa
in
sub
dec
push
mov
bound
add
cli
shr
add
mov
pop
ljmp
and
dec
pusha
mov
cmp
lods
mov
push
rcrb
pop
ret
jne
push
xlat
jmp
andl
outsl
cld
push
or
sbb
out
int3
sub
push
adc
outsl
inc
jmp
lea
test
and
xchg
arpl
into
leave
sub
pmaddwd
shlb
dec
ds
cmpl
mov
sahf
data16
lock
loope
les
std
jmp
loopne
and
xchg
push
loopne
sbb
mov
jmp
cmp
aad
insb
pop
mov
ret
mov
lds
cld
add
mull
xor
or
ffreep
mov
enter
xor
loope
negb
jmp
add
leave
shlb
add
cmpsb
mov
add
pop
sbb
neg
fsubs
xlat
sbb
subl
nopl
xor
pusha
loope
xor
and
dec
pop
ret
sub
inc
loopne
insb
subl
and
ret
push
js
inc
pushl
mov
js
mov
pop
pusha
cmp
cmpb
push
cmp
xor
js
push
or
or
xchg
add
jge
ficomps
mov
jo
addr16
or
loop
sub
mov
cmpsl
adc
push
aas
or
cmc
andl
fs
sbb
push
add
addr16
ret
pop
sub
dec
out
lret
add
dec
push
cld
cmp
fsubs
add
loopne
scas
lock
call
jmp
bound
roll
push
add
hlt
pop
lea
data16
inc
lods
jnp
jle
iret
dec
dec
cmp
lcall
inc
add
loopne
insl
xchg
xchg
dec
or
xchg
rcr
cmp
mov
mov
xchg
lods
add
jmp
rcr
push
or
add
mov
mov
or
hlt
fsub
cmp
clc
add
js
shll
xor
push
add
imul
cli
push
push
adc
lahf
stos
pusha
dec
iret
test
int
dec
or
dec
pop
nop
rcrb
cmp
xor
cmp
addr16
std
mov
xchg
push
mov
inc
mov
sbb
fimuls
cmp
dec
xor
sahf
insl
push
ds
retw
and
mov
mov
xor
std
xchg
lret
out
fstpt
xor
jae
mov
inc
inc
mov
cli
or
xsaveopt
in
mov
push
addl
adc
aad
gs
xchg
outsb
and
and
sbb
and
cmp
add
and
les
jne
push
and
shll
xor
fs
pop
jns
mov
add
add
jg
sbb
loopne
data16
jle
movsb
sub
or
adc
cmpl
add
pusha
aad
in
mov
movl
mov
xor
cmp
adc
sbb
shlb
or
xchg
cmc
pop
cmp
or
adc
lods
imull
pop
call
adc
test
xchg
inc
fisubrs
mov
arpl
dec
lock
mov
mov
jg
jmp
loope
dec
hlt
inc
mov
pop
mov
in
dec
xchg
adc
stos
ja
outsb
lock
aas
push
jae
adc
xor
cmp
sub
xchg
add
lcall
jne
adc
sub
push
mulb
ret
mov
and
jno
xchg
push
inc
je
xor
jge
leave
dec
or
or
sbb
dec
jmp
or
les
mov
loope
cmpsl
fldt
jo
push
test
pop
inc
or
and
add
or
inc
aam
orl
mov
cmpb
add
lea
daa
cli
xor
jmp
dec
cwtl
adc
mov
and
push
mov
inc
in
int
loop
aam
mov
xor
dec
sbb
adc
adc
rolb
add
inc
xor
aam
ret
mov
and
xor
pop
fcompl
dec
fsts
mov
and
jbe
loop
cmp
or
sub
lcall
or
xorb
loop
out
gs
add
pop
xor
lock
jbe
and
xor
cmp
in
lock
add
push
jmp
test
push
sti
push
push
jge
enter
jl
adc
sub
add
js
pop
sbb
jecxz
jmp
js
add
push
add
cmpl
pushl
add
mov
clc
ljmp
jb
or
add
and
repnz
enter
adc
loope
sub
aaa
pusha
dec
loop
cmp
aad
fcmovb
orl
jecxz
inc
dec
and
mov
dec
mov
push
dec
add
lret
fwait
inc
mov
jge
add
xor
mov
lods
or
sbb
ret
push
movsl
testl
mov
sbb
jb
cmp
push
sbbb
movsb
push
dec
adc
and
jmp
sbbl
fsubs
sbb
les
xchg
inc
jmp
dec
add
add
idivb
dec
mov
lds
les
adc
mov
insb
pusha
mov
rol
jmp
andl
out
xor
push
sbb
dec
fcoml
daa
loope
aaa
sub
jle
cwtl
imul
or
fcoml
lcall
jne
push
aas
jo
xchg
out
int
xor
pop
in
loopne
aas
xor
rcr
orb
inc
xor
pusha
jecxz
call
xor
cmc
or
sub
adc
insl
push
add
shlb
mov
push
sbb
ret
lock
jne
pop
push
pcmpeqw
sub
imul
jno
or
loop
adc
cmp
shlb
out
rcr
mov
jnp
push
arpl
jl
mov
xchg
addb
add
cwtl
aam
push
mov
imul
add
in
in
imul
and
sbb
pop
lock
in
nop
xor
or
push
lock
fdivrs
or
sub
add
add
ror
or
jne
jno
lea
clc
push
mov
xor
fwait
mov
push
jbe
add
or
push
push
adc
push
mov
je
testl
jmp
mov
mov
jl
jl
mov
cmpsl
or
lea
jge
mov
loopne
fnstsw
sbb
pop
mov
in
push
in
xchg
or
sbb
sahf
cld
cwtl
test
adc
sbb
mov
and
mov
jne,pn
sbb
inc
mov
sub
rorb
cmp
sbb
push
adc
fsubr
fstpl
push
icebp
in
fsubs
add
and
sbb
pusha
mov
loopne
mov
add
or
or
fs
or
mov
decl
or
out
sub
int
cmp
rorl
or
cmpl
les
cmp
ret
dec
bound
mov
xor
mov
xchg
or
cmp
inc
inc
imul
cmp
or
mov
stc
jb
push
fsts
or
sub
test
add
stos
push
adc
divb
xor
mov
clc
jnp
pushf
pop
test
adc
jo
mov
pop
cs
or
rcrb
inc
and
xorb
pop
or
pop
dec
or
adc
nop
adcl
repz
je
clc
shlb
push
into
lock
inc
adc
mov
xlat
mov
cmp
jge
pushf
adc
pop
clc
inc
in
cmp
xor
mov
mov
add
cmp
inc
push
push
cmp
insb
inc
xchg
cwtl
fistpll
fsubl
cmp
jo
das
or
frstor
lcall
mov
aas
inc
lcall
mov
xchg
sbb
clc
cmpsb
xchg
push
mov
cld
cmpsb
notb
orl
mov
mov
pushf
imul
fbld
mov
ja
cwtl
xor
jnp
fimull
fs
or
testl
add
fcmovnu
xor
add
mov
jecxz
sar
sub
out
shll
add
testl
enter
dec
add
xor
add
int3
icebp
pushf
jle
adc
je
stos
or
aam
outsl
add
arpl
mov
adc
rcrb
sbb
jno
icebp
fisttps
jle
cmp
inc
imul
pop
das
adc
jns
test
icebp
push
in
adc
movsb
cmpsl
mov
sbb
adc
and
flds
ffree
nop
mov
push
and
mov
test
sub
mov
xor
mov
mov
rclb
rorl
or
adc
ss
jb
sbb
sub
jb
jb
xor
cmp
data16
cmp
inc
and
in
in
inc
cmovs
mov
add
cmp
fs
cmp
je
jl
mov
inc
outsl
sbb
mov
and
nop
xchg
xor
and
cwtl
pushf
mov
movsb
test
fs
dec
es
xchg
dec
xor
cltd
fs
imul
call
cltd
aam
hlt
and
cltd
fs
cld
add
insl
and
leave
add
add
xor
cltd
adc
fs
sbb
and
cltd
fs
dec
sub
xor
xchg
dec
cmp
cmp
dec
dec
mov
and
dec
push
push
pop
test
sbb
gs
xor
test
push
add
pop
movsb
cltd
nop
ss
je
js
add
xor
and
xor
and
xchg
test
nop
adc
adcb
or
sbb
inc
and
movsb
xchg
cmp
cmp
lods
inc
mov
or
inc
mov
mov
dec
mov
push
enter
pop
movsb
or
mov
aam
rorl
xchg
and
movsb
shll
incl
and
mov
bnd
pop
push
or
or
cmp
sbb
push
or
or
rcrb
mov
sub
test
or
je
and
add
or
sbb
repnz
adc
push
and
shlb
int3
not
xor
loope
xor
dec
push
jb
and
shr
add
leave
in
inc
shr
and
maskmovq
mull
lret
and
out
ret
js
cmpb
lock
or
add
mov
ret
add
shll
and
or
sub
or
call
add
lods
fldenv
adc
lock
fisubl
mov
and
mov
jecxz
sbb
add
or
cmpsb
or
aas
pop
movsl
cli
or
or
or
mov
je
mov
out
mov
add
fstps
aas
pusha
mov
pusha
loope
add
movsb
mov
xor
inc
dec
sub
xchg
jecxz
pop
fstp
sbb
pusha
fldl
cmp
dec
push
insl
rol
xorl
push
cmpsl
repnz
or
scas
cmp
add
add
test
fisttps
adc
scas
ret
mov
mov
or
pop
je
dec
jne
orl
and
push
cwtl
or
push
mov
out
and
subb
push
dec
mov
sbb
jmp
push
and
or
aad
adc
fsts
push
fstps
jmp
fisttpll
add
adc
fucomi
test
cld
hlt
adc
aam
adc
psubusw
pop
sub
and
pop
cmp
repz
push
jo
ret
out
dec
adc
xor
test
imul
or
xor
inc
hlt
pop
fs
aaa
sbb
adc
fldz
sbb
push
gs
clc
addb
dec
jmp
sub
sub
and
pop
jbe
xor
jp
push
shrb
jae
rorb
fldcw
inc
test
into
adc
imulb
or
mov
addr16
jnp
or
or
ret
mulb
mov
cli
gs
arpl
jmp
add
call
repz
dec
mov
in
roll
xlat
inc
shr
cli
addl
pop
inc
aaa
adc
xchg
clc
lea
test
adc
shrl
pop
loope
cwtl
or
orl
mov
les
mov
push
jno
jle
push
pop
jmp
pop
xchg
orb
pop
add
movsb
fs
loopne
adc
or
daa
mov
push
pop
movsb
inc
aam
add
sbb
push
push
add
or
shll
sbb
cmpsb
cmp
dec
loop
add
pop
adc
repnz
lods
pop
ds
add
inc
jl
incb
sarb
or
dec
pop
push
sub
add
ss
imul
or
pop
or
sbb
sbb
hlt
mov
loopne
cmp
mov
or
mov
mov
xchg
sarb
sub
pop
pop
fstpl
test
xor
jmp
jno
and
lcall
aad
jnp
outsl
loopne
add
es
cmc
adc
into
sub
imul
jo
lret
jo
mov
cmp
fcompl
lock
lods
fcoml
rolb
imul
add
pushl
dec
ror
shlb
add
cltd
icebp
js
and
push
das
or
adc
xlat
js
rolb
mov
cltd
pushf
arpl
mov
cmp
jge
js
dec
mov
jnp
xor
sub
ja
pop
bound
dec
and
test
xlat
into
sbb
push
inc
cld
loope
movb
adc
in
or
and
xor
cmp
mov
or
mov
push
push
lret
lock
or
sbb
ljmp
xor
jnp
decb
mov
sarb
xorb
jmp
lods
sbb
notl
in
adc
daa
mov
push
enter
fbld
dec
out
fld
fucomp
pop
flds
mov
sbb
out
mov
in
pop
lods
push
xor
test
cmovge
xchg
shrl
icebp
das
sti
sbb
and
sbb
gs
push
fiaddl
or
inc
mov
dec
lcall
les
fsubs
jne
push
push
xlat
mov
xor
push
and
nop
push
movsb
pop
sti
fsubl
sbb
sub
push
push
push
sub
sahf
sbb
jl
xor
stc
loopne
ret
inc
mov
fnstsw
movswl
pop
sti
ret
fnclex
and
pop
lock
sbb
sub
shrb
push
xchg
xor
fmull
or
insl
or
push
mov
addb
js
fldt
fldl
clc
test
fsubs
outsb
fwait
sbb
add
repnz
fdivp
jle
movsb
xor
fstp
jmp
leave
xor
shl
sarl
sbb
cmp
mov
je
sbb
xorb
scas
ss
shlb
or
pop
cmp
mov
nop
ret
pop
andl
or
mov
pop
jbe
or
leave
jns
dec
and
stos
add
adc
lcall
pop
jnp
jo
sar
adc
jg
lods
add
xor
roll
testb
lock
mov
je
or
imul
push
add
and
adc
inc
test
inc
mov
out
mov
sarl
mov
or
adc
inc
js
mov
jne
adc
ljmp
or
je
clc
mov
inc
xor
jo
add
sti
jbe
js
shrl
idivl
cmp
xchg
or
pop
xor
jne
push
add
loope
push
or
aaa
hlt
or
fcmovnb
adc
pop
xor
cmp
sub
mov
inc
es
or
push
push
push
cmpsb
insl
test
push
or
dec
add
adc
jmp
aas
sub
jg
inc
and
cld
push
push
daa
mul
pop
test
push
or
jbe
jl
xchg
jbe
fcoms
movsl
lock
stos
jp
pop
pop
mov
push
jle
inc
jae
sub
jl
sub
int3
test
dec
push
mov
pop
add
or
imul
adcl
es
jns
dec
or
inc
lea
pop
jno
icebp
xor
lret
scas
rolb
xchg
dec
lret
mov
jnp
loop
rolb
cmpl
adc
add
repz
mov
out
pop
and
mov
out
mov
inc
adc
pop
sub
mov
mov
loop
sahf
sub
loopne
cmp
jb
cmp
cmp
sub
ss
rclb
jno
pop
lret
insb
clc
jae
or
dec
decb
adc
adc
faddl
loope
push
and
lea
sub
inc
cmpl
add
push
andl
getsec
je
or
push
movaps
fimuls
xchg
push
push
dec
xor
cmp
addl
rorl
mov
das
sub
loopne
cmp
daa
pop
mov
shl
sub
sub
mul
lea
sub
rorb
out
ret
cmp
cs
aam
out
inc
rorl
mov
ret
push
inc
shl
adc
lret
sbbb
ret
ret
jl
xor
or
push
incl
lcall
dec
lea
push
xor
inc
push
lods
sbb
test
push
adc
nop
mov
stos
rol
out
or
inc
and
addl
es
xor
cmpsb
sar
cmp
cmp
mov
mov
mov
lods
fsubr
pop
pop
push
pop
adc
scas
push
jb
push
repnz
sub
xor
add
xor
cmp
push
push
imul
js
push
push
aas
mov
sbb
mov
inc
ret
frstor
jge
lock
movsb
addr16
cmp
test
jecxz
adc
andl
shll
sub
or
push
sub
dec
add
mov
lock
add
into
out
es
lea
out
inc
cmp
sub
mov
in
xchg
jge
pusha
and
add
std
lods
shl
test
cmp
xor
popa
iret
or
fidivl
or
dec
add
inc
jle
cmp
and
push
inc
into
fildll
lret
jmp
jne
and
or
mov
add
add
push
mov
fs
add
cmpsl
mov
mov
or
mov
jmp
mov
cmp
add
inc
xor
leave
dec
adc
or
je
inc
add
inc
adc
fsubrl
pop
jne
cmp
aaa
xchg
js
add
jb
push
out
addb
cwtl
test
mov
mov
rorl
jle
dec
pop
mov
pop
sub
add
sub
xchg
xchg
adc
sahf
mov
insb
inc
cs
or
ss
cmp
je
add
packssdw
inc
xor
mov
dec
cmpb
je
mov
call
sbb
sbb
add
or
mov
xor
jl
add
call
fcompl
fistpll
or
add
inc
adc
sub
insb
dec
push
xchg
xchg
test
jmp
gs
pop
imul
xor
and
xchg
mov
add
dec
adc
fsubrp
mov
adc
jno
bound
gs
jle
fmuls
lods
sbb
fcoms
in
fnstenv
xlat
movsb
lds
insl
mov
fdivs
or
add
jns
jmp
inc
ffreep
push
pop
jne
and
je
mov
dec
bound
cmp
test
sbb
popf
pop
clc
aad
cmpsb
adc
aas
sub
clc
inc
call
add
jle
or
cld
mov
lds
add
loopne
xor
add
add
lods
cli
dec
ret
popa
pop
sub
add
xchg
jbe
in
or
adc
hlt
mov
xor
push
inc
inc
sbb
fildll
jns
neg
movb
mov
insl
jbe
jl
cltd
push
enter
xor
jp
xchg
or
or
add
sbb
pop
into
fs
push
sbb
mov
rclb
push
mov
fadds
inc
push
xor
insl
loopne
push
mov
addb
dec
jae
add
lahf
pusha
mov
mov
iret
ret
jmp
add
jmp
insb
xchg
xchg
jge
xchg
sub
adc
sbb
inc
xor
xchg
rclb
mov
cmp
xor
faddl
out
sbb
xlat
sbb
sbb
aam
pop
adc
cmp
int3
inc
roll
sub
lds
pop
cwtl
pusha
adc
ds
push
fadd
xor
add
mov
popa
into
jge
clc
dec
push
fcoml
enter
xchg
or
mov
xchg
je
insb
push
mov
enter
push
scas
xchg
aam
or
sbb
or
mov
push
lret
movsl
jae
call
rcll
add
lods
inc
lea
out
ret
or
sub
imulb
dec
xor
cmpb
jbe
sub
repnz
test
enter
js
stos
aad
jbe
push
bound
mov
mov
dec
sub
leave
and
andb
insb
movb
scas
and
cmp
enter
sti
mov
pop
inc
popf
neg
sbb
mov
inc
outsb
and
adc
jg
scas
mov
nop
ret
jo
shll
add
pop
es
pusha
mov
add
cmpb
xor
mov
jb
add
sbb
aam
ficomps
imul
adc
shlb
mov
or
xchg
hlt
nop
or
dec
xchg
sub
adc
add
mov
call
mov
push
pushf
pop
ret
sbb
aad
xor
jbe
dec
cmp
fs
cld
shlb
popl
add
add
pop
pushf
int3
dec
xchg
inc
mov
scas
sbb
clc
cwtl
xor
cmpsb
in
add
data16
jmp
clc
inc
and
xor
out
cltd
into
in
cld
sub
imul
rorl
inc
call
dec
cmovo
xor
adc
out
adc
xor
jo
imul
js
mov
push
and
sub
ja
mov
sarl
jg
xchg
icebp
pop
fdivl
xor
jmp
mov
sub
fimull
jl
loope
adc
cmp
fs
sbb
add
mov
mov
dec
sarl
push
jg
insl
inc
inc
mov
dec
iret
xchg
imul
dec
pop
or
or
imul
shrl
or
cmp
and
jnp
inc
and
in
ja
fnstcw
lret
mov
and
popl
adc
mov
add
cmp
mov
movsl
mov
sbb
data16
scas
jp
cmpsl
inc
add
inc
shll
stos
sbb
jle
in
push
push
ss
jmp
mov
call
inc
ret
bound
sahf
fwait
adc
mov
call
icebp
in
adc
cli
pop
push
hlt
rol
push
lods
js
xor
cld
addb
mov
sbb
and
pop
add
push
add
add
repnz
je
aad
push
lret
fnstenv
jl
into
sub
add
sahf
mov
push
sbb
ljmp
jno
adcl
sbbb
or
push
cmp
nop
push
and
xchg
aam
push
dec
dec
dec
sub
add
leave
cld
mov
sub
sub
sbb
lea
mov
adc
push
cld
jl
loopne
jge
inc
or
add
pop
scas
stc
mov
push
inc
ret
add
adc
popf
jmp
xor
jo
fdivrl
sahf
clc
gs
or
pop
data16
pop
pop
mov
fs
add
popa
je
inc
je
mov
insb
sbb
or
or
mov
or
pop
pop
pushf
and
inc
push
je
dec
nop
rcrb
shrb
mov
cmp
clc
adc
sti
push
inc
cmp
pop
or
mov
adc
mov
or
pop
dec
mov
je
add
or
push
xchg
mov
jne
inc
mov
nop
push
mov
xchg
and
test
cmp
cmp
js
arpl
push
xchg
shrl
inc
mulb
mov
cld
inc
jmp
int3
test
push
sbb
push
aaa
xchg
sbb
push
mov
xchg
cmp
je
inc
sub
push
popa
push
popf
ljmp
sbb
cmpsl
mov
sbb
pop
das
jo
aaa
fisttps
adc
lock
bound
xor
pop
aam
sbb
sahf
shll
and
test
jg
or
jg
fnsave
push
and
shll
nop
xor
jge
mov
push
push
adc
xchg
pop
das
add
into
xchg
aam
mov
push
mov
fdivrl
mov
push
cmp
or
dec
dec
add
pop
push
das
xchg
push
pop
inc
mov
sahf
or
mov
fwait
push
lods
movsb
adc
mov
cmpl
pop
add
push
inc
cwtl
push
or
push
sbb
dec
push
mov
adc
mov
or
mov
pop
pop
pop
pop
pop
dec
shlb
cltd
rorl
dec
xchg
sub
cmp
adc
and
je
add
stos
cmovno
and
jmp
adc
adc
or
enter
push
push
jmp
or
jmp
hlt
sahf
mov
push
and
inc
inc
add
sbb
or
sbb
jmp
ret
fists
inc
data16
sbb
xchg
mov
sbb
sbb
test
mov
mov
adc
sbb
inc
cltd
mov
jmp
outsl
test
xor
dec
xchg
pcmpeqw
adc
mov
cmp
je
mov
hlt
ss
inc
mov
or
lea
aaa
incl
or
fiaddl
add
orb
mov
xchg
es
and
xchg
and
fiaddl
into
push
fisubrl
sub
xor
xchg
pop
test
mov
sbb
add
sub
pop
and
test
cmp
mov
or
pop
dec
in
xchg
push
dec
dec
insb
add
add
fsubs
inc
shr
loopne
add
mov
shll
cmc
outsl
test
sbb
lret
jne
add
repz
fwait
cmp
shr
add
or
add
lcall
or
mov
push
push
adc
test
push
sub
mov
notb
push
sub
fs
popf
add
mov
jp
pop
or
movsl
pop
cmp
shr
mov
leave
inc
jbe
add
jl
in
es
or
sbb
cmp
or
dec
pop
or
push
hlt
xor
sti
and
pop
or
cmp
adc
bound
xor
or
mov
into
clc
xorb
xchg
shll
rolb
fildll
dec
pop
or
decl
pop
test
dec
xchg
test
and
xchg
mov
xchg
sbb
test
ficomps
adc
andb
add
test
jl
fsubrl
add
pop
jbe
scas
cli
jne
mov
sbb
in
test
add
or
xchg
or
mov
inc
pcmpeqb
data16
sub
dec
fs
popf
push
jbe
test
inc
out
das
sbb
sub
or
pop
add
sarb
jmp
mov
call
rcl
enter
push
ret
jecxz
enter
sbb
loop
lret
xchg
cmp
lea
repnz
pop
inc
or
lret
enter
addl
lret
andl
int3
test
dec
jo
mov
push
or
sbb
dec
sub
sbb
mov
out
or
sahf
add
or
fs
scas
inc
and
loope
add
orb
or
fstpt
ds
add
mov
sahf
rorb
sarb
xchg
mov
cmp
pop
std
je
xor
jb
jp
pop
add
push
inc
add
sub
andl
xchg
jle
nop
mov
and
xor
mov
xor
clc
sbb
and
pop
and
fstpt
repnz
pop
lret
push
adc
out
add
aam
sbb
add
pop
je
add
or
inc
mov
sub
mov
arpl
fcoms
orb
ja
xor
adc
sbb
jne
negb
add
stos
cmp
and
call
test
sub
call
imul
ss
xor
dec
or
inc
mov
cmp
fstpl
subb
pop
orl
push
cmp
jle
dec
scas
pop
rolb
dec
xchg
push
rcl
jp
aaa
push
or
sbb
xchg
in
dec
leave
inc
fisubrl
mov
js
sbb
and
js
cmpb
jl
mov
mov
cmp
je
rolb
push
incl
adc
popa
add
fstl
add
and
sub
add
mov
imul
cs
orb
and
mov
cld
mov
jp
adc
cmp
sub
push
fcomps
or
sbb
jne
cmp
jne
sarb
in
cmp
adc
inc
dec
add
popl
pushf
testb
or
or
imul
or
fprem
cmp
add
roll
leave
add
clc
js
je
mov
iret
adc
es
add
icebp
sub
pop
cmp
adc
mov
loop
mov
push
push
sahf
jne
stos
movsw
pop
jb
call
and
and
adc
js
add
dec
and
xor
bound
add
add
adc
lea
add
js
lock
icebp
dec
sub
inc
inc
push
neg
neg
sbb
lahf
ja
sahf
sub
inc
sbb
or
sbb
xchg
sbb
xor
jo
xchg
adc
xor
sbb
fcoms
adc
dec
daa
add
fcomi
and
adc
add
gs
sbb
and
shlb
fwait
test
aam
cmp
dec
jne
pop
pop
pop
aam
mov
adc
lods
sarb
jl
sbb
dec
and
shr
sub
sbb
fimull
adc
mov
push
idiv
and
maskmovq
cld
lock
je
lds
imul
add
bound
sub
xor
loop
add
or
mov
outsb
into
add
orl
or
ss
ds
cmp
pusha
and
push
mov
xchg
inc
cmp
jbe
aas
mov
hlt
adc
test
sbb
shlb
hlt
xchg
jns
jnp
adc
dec
inc
adc
or
mov
cmp
jne
sbb
sbb
or
mov
ret
add
test
dec
call
cmp
dec
fst
xor
cld
inc
ss
mov
aaa
dec
sub
daa
leave
test
cmpsb
stc
xor
jp
or
adc
cmpsb
je
cld
xchg
xchg
je
aam
jne
pop
cmc
pop
inc
add
add
adc
pop
enter
icebp
mov
test
nop
or
xchg
ret
jg
xchg
scas
inc
mov
pop
sbb
adc
es
adc
mov
je
adc
jl
iret
sti
jg
out
push
cmp
ja
add
cmp
adc
cmp
jne
mov
shll
leave
adc
mov
sbb
add
jl
pop
pop
mov
cmp
mov
adc
sbb
ss
lret
and
pop
add
add
loopne
cmp
aas
push
jb
scas
pop
push
movb
jmp
dec
lahf
adc
or
push
fstl
test
cmp
dec
cmp
push
push
or
test
push
mov
push
adc
or
inc
add
xor
cmp
sub
rolb
rcrb
es
sbb
pop
mov
sbb
sbb
mov
sub
push
pop
clc
popa
mov
fdivr
ffree
inc
xlat
inc
jb
mov
push
ret
andb
inc
push
andl
push
pusha
mov
push
add
cmp
pushf
rcrb
mov
xor
push
imul
inc
test
call
sbb
imul
lea
sar
insb
pop
and
lret
mov
fiadds
neg
xchg
push
ljmp
mov
cmp
mov
mov
inc
andl
push
push
je
rol
sti
add
mov
jbe
push
lock
adc
fisttpll
sbb
decl
jle
repnz
xor
ds
cmp
mov
mov
mov
mov
mov
and
lea
inc
xor
push
push
cmpsl
add
into
sahf
add
cmp
xchg
mov
ja
adc
xor
loopne
xor
and
icebp
or
inc
call
in
ljmp
xor
cmp
jle
rcr
mov
jne
lea
or
cwtl
rolb
adc
jle
mov
push
lea
dec
lock
mov
inc
inc
dec
jle
jo
push
or
bound
sbb
or
ret
movsb
sub
inc
in
pusha
bound
mov
mov
mov
repnz
dec
shll
rol
add
sbb
cmp
cmp
shll
jbe
push
mov
add
shr
or
and
out
mov
clc
rorb
sbb
push
lret
jae
mov
inc
fiaddl
roll
mov
outsl
mov
loope
shr
or
mov
cli
jmp
xor
cli
push
movsb
mov
push
sti
lock
jb
fdivr
dec
and
lret
xchg
cmpsb
repnz
add
sahf
lret
cli
div
jmp
popa
add
push
push
imul
adc
add
call
out
jge
sbb
adc
and
mov
call
fimull
dec
mov
scas
mov
shrl
fldenv
enter
jg
inc
add
push
or
mov
imul
inc
mov
lock
push
add
es
dec
pop
fdivl
repnz
pushw
sbb
loop
mov
sahf
jge
adc
sbb
jb
test
jne
pop
movsb
fwait
dec
in
aam
xchg
push
dec
inc
daa
adc
jne
jns
das
jp
or
es
shlb
fsubs
add
cmp
sub
fcoms
dec
sub
sbb
jo
xor
shlb
dec
ljmp
xor
test
or
push
lret
cmpsl
call
mov
mov
insl
test
cwtl
mov
adc
mov
add
sbb
adc
pop
rcll
adc
adc
jg
and
jne
dec
and
stc
xchg
lret
jge
or
add
jge
cs
add
or
cmp
jne
push
pop
add
jne
or
int3
and
lret
push
lods
lret
mov
add
sub
xor
sbb
mov
sbb
push
pop
testb
inc
mov
and
adc
pop
rcl
inc
push
outsb
call
jbe
rorb
mov
sub
pop
adc
mov
xchg
rcrb
cmp
cli
pop
inc
rcrl
lcall
js
inc
movb
imul
sarl
loopne
call
pop
dec
loopnew
fsubs
pop
add
mov
mov
mov
dec
cmp
push
push
in
add
ja
fisubs
iret
jb
add
outsb
push
sar
sub
imul
enter
leave
cltd
jo
mov
dec
imul
in
inc
dec
enter
sahf
mov
mov
jae
add
sub
addl
lret
call
cli
pop
xor
add
add
into
or
mov
inc
and
add
inc
call
jmp
dec
dec
jg
add
sub
jge
sub
add
cmp
movb
dec
cmp
out
fmuls
add
dec
add
add
fadds
aaa
les
ret
and
mov
jp
jne
dec
mov
and
jb
int
orb
add
dec
jbe
ret
and
add
roll
inc
mov
jp
ret
adc
rclb
add
add
add
mov
and
ret
lcall
xor
outsb
or
lret
mull
stos
sub
or
add
push
or
push
adc
or
repz
add
test
pop
jne
or
data16
je,pt
push
inc
or
ret
mov
cmpl
pop
movsl
shlb
xchg
adc
or
jae
pusha
inc
adc
cmp
mov
iret
xor
ror
in
pusha
inc
and
ret
pop
and
pop
pop
inc
in
cltd
sbb
ret
xchg
or
prefetchw
inc
lea
es
imul
push
mov
cmp
mov
test
or
or
add
mov
movsl
push
or
loopne
je
shl
mov
mov
pop
sarb
adc
xlat
push
pop
xchg
add
adc
stc
sahf
jnp
jne
and
mov
les
xadd
add
add
out
and
push
or
call
popa
fcoms
mov
arpl
loop
and
pop
nop
clc
mov
iret
enter
je
jnp
or
and
push
push
scas
xor
adc
or
mov
or
push
xchg
xchg
add
pushf
rcrb
jge
loopne
mov
rolb
xchg
lock
out
cmpl
into
or
add
xor
mov
add
jno
loop
add
mov
sbb
and
sbb
inc
pushf
pushf
cmp
jg
into
into
into
mov
or
inc
pop
sub
fsubp
or
pop
sahf
pop
and
or
aam
ljmp
or
sbb
and
xchg
stos
sub
pop
push
push
and
sbb
push
mov
test
lahf
pop
xchg
out
mov
jecxz
ret
movsb
and
stos
pop
test
mov
mov
ret
cltd
and
popf
ret
cwtl
sbb
push
jmp
lods
mov
sub
mov
lret
push
lret
push
xor
xchg
pop
pop
and
shll
adc
fldcw
xchg
mov
rorl
dec
jmp
xchg
pop
enter
push
les
clc
xchg
sbb
gs
cwtl
lret
mov
mov
push
shrl
popa
popa
dec
arpl
in
hlt
add
jnp
ds
mov
jns
cmp
mov
cmp
xor
push
nop
jo,pn
loopne
orb
jle
sbb
dec
imul
sbb
xchg
fcmovnb
je
dec
sub
loope
xchg
lock
cmp
je
mov
jb
or
mov
cmp
jb
cmp
jbe
dec
repnz
jmp
push
rorb
fcoms
pop
fisubrl
cs
subb
add
out
push
or
cmpl
sbb
sub
fwait
jne
push
out
les
and
add
cwtl
and
popa
test
pop
push
daa
push
scas
mov
cwtl
pop
adc
loopne
and
adc
cmp
pushl
pop
pop
add
aad
xor
jo
fistl
mov
pop
and
pop
sbb
loope
inc
mov
inc
lcall
sbb
push
push
sub
cmp
cmpsl
in
cmp
je
inc
and
add
adc
adc
xor
dec
cmp
aam
sub
pop
mov
dec
add
test
add
sub
sbb
push
mov
cmp
add
daa
fsts
mov
popa
sar
ror
push
xchg
pop
jmp
mov
push
outsb
sahf
mov
mov
inc
aas
fs
scas
add
mov
push
bound
push
mov
sub
pop
xchg
push
jl
mov
adc
xchg
mov
inc
pop
dec
add
xchg
and
pop
shl
push
pop
mov
hlt
call
push
outsb
mov
inc
xlat
ss
ret
push
push
addb
mov
sub
aad
inc
insb
cmp
or
into
pop
sub
mov
jle
mov
xor
mov
jbe
cmpsl
jo
cmp
in
lods
nop
mov
push
clc
gs
xor
jg
xchg
std
testb
je
mov
jg
xor
mov
sbbl
flds
lahf
pop
test
push
mov
sub
lods
xor
enter
addl
add
xor
int3
fimull
add
pop
nop
cwtl
rcrb
jae
fbld
jecxz
cmpsb
loopne
jmp
in
lea
loopne
adc
imull
cmp
or
mov
mov
js
loop
and
xor
or
mov
cmp
sbb
orb
inc
insl
push
rcrl
iret
jae
push
xchg
xor
lcall
sbb
add
inc
sbb
pop
mov
ss
andb
push
out
mov
xchg
jmp
pcmpeqb
jg
orl
aam
xor
scas
adc
movsl
and
jecxz
cmp
jbe
test
lock
adc
imul
mov
lret
pusha
pop
int3
or
xchg
xor
adc
jb
sbb
enter
in
repnz
push
push
addl
clc
xor
js
xlat
add
add
push
scas
pop
rcr
sbb
add
aad
and
dec
loope
adc
dec
mov
test
add
or
mov
test
pop
xor
pop
adc
push
sub
sbb
lret
pop
pop
mov
rcll
roll
push
push
mov
cwtl
cmp
movsb
jmp
sarl
push
push
xlat
push
outsb
shlb
xchg
movsl
enter
sbb
ret
mov
xchg
dec
or
sbbb
sbb
jmp
subb
xchg
mov
add
rorb
test
shll
fadds
dec
push
sar
xor
test
and
sbb
lods
cwtl
push
and
mov
adc
fists
lods
movsl
mov
aaa
pop
rol
rcrl
and
sbb
stos
push
mov
ret
mov
aas
mov
test
xor
dec
mov
and
cmp
ret
cmp
add
or
or
es
add
add
sti
gs
and
push
pushf
ret
xor
sbb
push
adc
inc
xor
mov
int3
jmp
or
hlt
and
xchg
add
sahf
insl
cld
mov
loopne
je
pop
daa
pop
pop
xchg
test
fs
addb
sbb
push
xchg
and
loope
inc
xchg
insl
pop
mov
mov
add
jp
es
cmp
cmpsl
xchg
or
iret
scas
pop
dec
shlb
imul
mov
push
imul
ror
and
enter
dec
or
into
inc
mov
into
inc
xchg
or
adc
adc
bound
cmp
leave
inc
xchg
rorl
or
cmp
add
test
xchg
lock
cs
sub
xor
movsl
add
add
rcrb
and
xor
outsb
insl
clc
pop
nop
loope
xchg
or
int3
hlt
movsb
sub
incl
push
inc
push
sub
jl
push
aam
add
lds
sbb
sub
add
add
pusha
push
cwtl
and
or
outsb
insb
sub
xor
ret
inc
sbb
std
xchg
or
add
movl
aas
jo
jmp
push
ja
or
ret
repnz
testb
js
aad
or
mov
mov
gs
insl
xchg
dec
xchg
dec
int3
cmp
jo
dec
sarl
arpl
imul
fidivrl
int
les
mov
cltd
jb
fsubrp
sub
outsl
or
mov
imul
add
jb
xchg
jge
cmp
lods
or
sub
call
adc
mov
sbb
cmp
ja
jbe
inc
pusha
or
jge
das
push
aaa
pop
roll
xlat
cwtl
pop
pop
xchg
xchg
pop
add
mov
insl
inc
cwtl
cmp
or
repnz
or
push
dec
test
jg
adc
sti
cmpsb
add
lock
lcall
sub
insl
or
mov
icebp
cmp
add
inc
jmp
mov
popa
sub
aam
into
lock
addr16
hlt
fadds
in
repz
ret
mov
call
jecxz
push
push
pop
adc
mov
sub
enter
or
inc
mov
or
aad
add
lea
rclb
jp
or
xchg
mov
mov
aaa
push
sub
push
add
pop
out
ss
repnz
xor
fsubp
test
or
aaa
std
pop
dec
inc
sub
loopne
pop
cmp
cmpsb
lock
cmp
nop
xor
sbb
adcl
or
das
jle
sbb
mov
das
pop
sarb
cli
dec
cmpl
push
lret
push
nop
sub
lret
shrb
inc
inc
mov
cmp
ja
imul
cmpsl
xor
push
cmpl
add
or
mov
push
in
pushl
mov
or
adc
and
jmp
jno
jnp
idivl
in
sahf
inc
add
and
push
in
ret
push
sbb
or
cmp
pop
pop
xor
lahf
cmpsb
rorb
and
and
inc
sbb
arpl
and
fimull
aam
std
data16
inc
shrl
popa
xchg
sub
xchg
shlb
and
test
jl
dec
mov
push
sbb
xchg
rorb
cmp
leave
sub
sbb
dec
inc
inc
add
dec
sbb
jl
add
shll
lret
fnstcw
das
sbb
sar
jo
movsb
push
push
aas
push
int
rclb
es
sbb
pushf
sbb
push
xor
mov
jle
xchg
sbb
rcrb
fnsave
daa
cmp
fildl
movsb
iret
and
or
notb
dec
add
fs
pop
jl
mov
mov
or
xchg
xchg
or
pushf
rcr
sbb
sarl
iret
loopne
nop
adc
xor
xchg
jmp
test
ljmp
cmp
or
add
mov
pushf
jae
and
movsb
fs
or
cmpsb
rcr
mov
mov
mov
shl
aaa
loope
fdivs
mov
mov
outsl
inc
dec
mov
push
push
sbb
hlt
adc
movl
push
sbb
inc
sbb
cmpl
xchg
cmpsb
pop
adc
cmp
sbb
jae
inc
mov
lret
cmp
jg
mov
and
rcl
mov
xor
lock
mov
dec
xchg
test
daa
mov
add
jns
xchg
xchg
cmpsb
jmp
and
loopne
ret
lock
outsb
fcomps
pop
sub
aam
shlb
mov
stos
mov
cmp
call
push
pop
cmp
movsl
and
movsb
push
stos
cmp
aaa
int3
xchg
cmp
xor
add
mov
daa
cmp
adc
or
inc
add
enter
mov
mov
dec
xchg
adc
inc
mov
ja
dec
push
scas
sbb
stc
repnz
and
je
or
aas
add
pushf
int
pop
adc
or
fldcw
js
dec
sbbb
scas
mov
dec
adc
mov
sbb
or
dec
add
jl
push
scas
cmp
cmp
or
je
xchg
je
mov
xor
dec
xchg
sbb
add
xor
jmp
outsl
sub
inc
jmp
pop
add
cltd
jp
inc
push
dec
insb
pop
mov
add
ret
adc
inc
std
sub
sar
add
and
push
into
icebp
pop
adc
adc
cmp
mov
je
dec
jne
push
lds
sbb
ja
fsubs
sarb
push
or
sbb
mov
jo
cmp
jmp
adcl
mov
jne
push
sub
sbb
xor
pushl
or
jne
lds
enter
mov
mov
arpl
test
fisttpl
mov
push
add
rorb
into
mov
cli
push
je
or
xchg
pop
dec
loopew
inc
sbb
jg
mov
in
sub
and
and
in
xchg
lods
sbb
test
push
inc
inc
hlt
push
cli
push
jb
adc
cmp
pusha
lea
cmpsl
sbb
fstl
in
js
cmp
jl
sbb
add
sti
xchg
add
push
clc
push
cmpb
je
sarl
pop
lock
jne
add
xchg
and
pop
xor
out
inc
addr16
or
xchg
cwtl
fcmovb
push
inc
fildll
adc
jb
arpl
fcomp
ret
pop
sbb
rolb
cmp
xchg
dec
or
mov
enter
cmp
in
pop
cmp
ret
mov
sbb
push
xor
mov
mov
fcmove
mov
adc
sbb
adc
scas
add
fcmovbe
leave
test
xchg
or
xor
test
stc
push
mov
std
hlt
jne
adc
fisttpl
or
adc
cmp
mov
adc
ficoml
pop
ljmp
sbb
sahf
dec
add
xor
inc
push
cmp
pop
enter
adc
or
jno
dec
push
or
rolb
add
in
push
sub
push
and
mov
divl
adc
test
jo
lret
lock
push
mov
or
or
inc
cmp
dec
hlt
adc
jnp
mov
lea
shrl
fiaddl
and
mov
and
stos
lock
and
fdivrl
imul
sbb
rol
fimuls
fnsave
call
mov
mov
mov
add
mov
movb
and
add
sahf
jb
jo
jb
or
insb
ret
call
scas
cmp
inc
pop
aaa
pop
pushf
and
push
jg
or
and
pop
scas
or
mov
add
push
jns
inc
bound
and
xchg
mov
adc
adc
stos
add
sub
js
addb
push
xchg
or
and
lock
mov
jns
nop
hlt
test
dec
sbb
mov
icebp
decl
cld
xlat
je
cmp
adc
cmp
jb
testb
mov
testb
cmp
or
inc
js
dec
dec
inc
dec
ret
jge
push
jmp
xor
sbb
inc
sbbl
je
cmp
clc
jns
inc
aad
xor
cmp
jbe
push
push
push
or
pop
scas
in
push
imul
ljmp
call
and
arpl
inc
jne
out
cli
add
jg
add
push
lds
push
je
lods
and
mov
hlt
shlb
pop
es
jmp
scas
or
ss
push
inc
adc
inc
pop
pop
mov
iret
pusha
scas
and
mov
push
xchg
mov
mov
mov
push
lret
ret
sbb
inc
adcb
in
fnsave
adc
adc
les
dec
and
add
cmpsb
xor
test
pop
movsb
mov
and
stc
add
inc
dec
pop
test
jne
sbbb
add
cmp
jge
cltd
push
cmovns
pop
pusha
ljmp
fldz
pop
inc
mov
xor
adc
shrl
push
out
sbb
add
pop
and
cmp
into
xor
jne
fdivs
aaa
adc
pop
xor
jl
pop
je
pop
and
fld
fsts
ss
enter
insb
inc
jp
push
or
adc
outsb
cli
cmp
jmp
cwtl
mov
xor
aaa
fcmovnbe
add
dec
cmp
ss
cmp
fcomp
cwtl
adc
rcr
mov
lods
mov
mov
sbb
add
pop
movsl
in
mov
jb
jb
aaa
mov
jb
or
std
push
push
or
in
daa
xchg
sarl
cltd
fidivl
mov
and
aas
push
ret
jg
fcoms
jb
aam
xor
shlb
ljmp
sbb
lcall
add
mov
imul
repnz
in
ja
int
xor
pusha
jb
or
int
sub
mov
mov
push
jecxz
movsb
mov
call
dec
in
in
or
pop
xchg
pop
insb
leave
fdivrs
in
push
fadds
pop
cld
pop
leave
dec
mov
lcall
mov
inc
cld
shrb
dec
leave
or
add
in
adc
sub
int
das
pop
not
pop
enter
pop
xchg
mov
xor
fistps
sbb
fs
sub
sar
and
aad
clc
push
mov
cltd
add
inc
inc
push
jb
in
fsubs
pop
cmp
iret
popa
loopne
fadd
add
and
xor
jo
in
inc
sbb
insl
test
xchg
jb
cli
add
fldcw
add
push
sbb
mov
dec
lock
hlt
fsts
or
and
in
jge
push
dec
mov
adc
xchg
in
inc
in
les
stc
xchg
inc
adc
inc
push
shr
je
adc
pop
adc
cmp
aam
aad
and
xor
fistpl
xor
or
dec
ljmp
push
je
insb
enter
or
in
add
mov
pop
out
adc
xor
mov
cmpb
pop
rclb
sub
fsubl
and
add
cs
pop
enter
enter
rolb
leave
mov
call
outsl
aam
rcr
in
inc
fisubl
xchg
fs
test
sbb
or
cmpsb
or
adc
adc
js
leave
adc
in
jl
in
push
mov
aas
jle
cmp
pusha
fsts
xchg
dec
xor
pusha
fs
and
je
xchg
shlb
jl
pop
push
in
inc
sbb
call
adc
ficoms
or
lea
movsb
pop
dec
adc
nop
dec
fidivrl
shr
rcrb
mov
in
push
mov
mov
in
sti
adcb
push
adc
xor
push
xor
imul
mov
inc
mov
das
inc
jne
icebp
ds
dec
and
push
inc
ret
adc
ret
sbb
pop
push
jb
ret
ljmp
cmp
add
out
les
js
lods
add
and
adc
mov
push
jp
roll
cmp
cmp
movsb
loopne
mov
sbb
push
jnp
cmpb
adc
or
sbb
add
dec
or
subl
or
inc
cmpsb
dec
mov
cmc
cmp
ret
push
int3
popf
lock
mov
lock
dec
in
daa
dec
push
and
popf
sub
dec
mov
pop
or
pop
and
push
pusha
loop
or
loop
sbb
or
loopne
int
loop
cmp
nop
in
jecxz
ljmp
dec
xchg
inc
mov
pushf
jle
add
inc
insl
stos
sub
enter
and
cwtl
xchg
ret
xchg
dec
xor
lea
jo
push
mov
clc
fcompl
sbb
in
test
xchg
movsl
ss
jl
imul
in
ret
shl
sbb
out
in
pop
and
mov
and
gs
xchg
pop
mov
pop
je
xchg
inc
sbb
cmpsb
in
jno
clc
aas
call
sbb
out
xor
adc
or
testl
mov
mov
jecxz
cmp
dec
lock
sbb
sbb
cmpsb
addb
or
or
pop
xor
or
das
sbb
repnz
out
loopne
push
mov
pop
cmp
add
ret
cmpsl
or
add
adc
cmpsl
push
call
dec
call
add
call
pop
jecxz
addr16
add
mov
fdivl
xor
gs
lock
adc
jle
mov
inc
dec
pusha
nop
inc
sbbb
sub
sti
add
shrl
or
fsts
loop
or
xchg
and
jbe
ja
mov
fiaddl
and
add
shrl
iret
mov
pop
cmp
or
jae
ljmp
repnz
inc
mov
xor
je
add
in
sbb
loopne
addr16
jecxz
lock
icebp
sbb
in
mov
dec
jmp
scas
add
fadds
xchg
arpl
in
stos
mov
mov
add
sub
in
and
push
ret
dec
or
jg
movsl
sbb
ret
inc
les
push
sbb
mov
addr16
add
call
add
dec
loopne
ret
jo
lahf
fmull
in
jno
and
in
scas
or
xlat
or
xlat
xchg
inc
repnz
or
in
clc
test
inc
repnz
rorl
push
nop
pushf
xchg
in
in
rcl
in
in
inc
or
pusha
loopne
jo
or
cmp
fcoms
or
xchg
movsb
sti
sbb
xor
or
insb
xchg
test
dec
adc
test
mov
and
mov
out
adc
add
xor
xchg
dec
jno
mov
jecxz
clc
mov
push
cmovnp
mov
movnti
loopne
std
inc
outsb
test
and
or
lock
mov
test
mov
xchg
data16
or
xchg
sbb
enter
or
enter
inc
sbbl
icebp
enter
mov
aad
xor
aaa
arpl
test
xor
test
sbb
movsb
icebp
pop
nop
add
sbb
or
xchg
sub
icebp
movsb
scas
inc
and
xrelease
mov
inc
lea
dec
les
test
rcr
notb
adc
push
add
shlb
aaa
adc
sub
lret
mov
jns
rep
sbb
sti
inc
sbb
sbb
push
lds
sahf
mov
out
push
ret
add
mov
repz
mov
sub
fadds
aam
lds
xchg
lret
pop
adc
push
inc
mov
sub
test
add
push
dec
sti
or
inc
pop
sub
jnp
in
jge
xor
sub
xchg
popa
push
jo
loopne
stos
and
push
pop
outsl
xor
jmp
sbb
inc
add
in
and
or
call
adc
movl
cmc
xchg
jge
subb
fld
xor
movsb
adc
and
insl
rcr
ss
mov
ret
fmuls
das
rcrb
push
ret
adc
dec
mov
call
psubsb
and
jno
dec
xor
fs
push
fsubrs
sub
subb
sub
loope
adcb
inc
inc
pop
push
push
dec
negl
xor
push
orb
ja
or
mov
outsl
mov
je
and
or
mov
stos
scas
cmpsb
mov
std
movsb
vprotb
pop
xchg
int
dec
xor
mov
mov
jb
aas
fs
mov
xchg
mov
nop
in
jo
xchg
adc
cmp
pusha
fisttpl
stc
daa
sar
aam
inc
cli
pop
and
xchg
out
fdivs
pop
jge
sub
jge
push
add
xchg
mov
or
shlb
fidivrl
xchg
out
in
cli
fsubs
sbb
push
or
movsl
roll
popf
aam
mov
lock
pop
jo
sbb
sbb
inc
call
sbb
jecxz
add
adc
jmp
dec
or
sbb
or
enter
inc
cs
mov
xlat
push
add
sar
cld
xor
imul
mov
jb
enter
dec
add
sbb
inc
push
dec
pusha
sbb
pop
jle
add
sub
mov
sub
std
stc
cwtl
stc
mov
nop
imul
xchg
mov
or
mov
and
scas
dec
pop
push
inc
ficoml
add
cmc
subb
dec
call
fldl
les
enter
and
xchg
sbb
enter
pop
jnp
loopne
inc
int3
ja
maxps
mov
push
aam
enter
add
mov
inc
movsl
mov
nop
lret
mov
or
adc
add
dec
fisubl
pop
inc
les
mov
add
lret
sbb
dec
push
nop
push
xchg
std
cmp
mov
sbb
mov
pslld
xchg
lea
inc
jge
pop
xlat
jno
enter
sbb
mov
movsb
pusha
pushf
xor
fcomp
add
loopne
jb
imul
inc
mov
fcom
adc
inc
sbb
add
andnps
js
imul
iret
lock
mov
mov
mov
mov
shlb
cmpsb
mov
adc
fdiv
aam
sarl
jb
and
add
lds
scas
loopne
insb
sbb
cwtl
pop
call
cmc
aaa
loop
cwtl
mov
mov
mov
xor
cwtl
adc
in
and
aaa
enter
inc
adc
ret
cli
mov
jl
sub
cltd
mov
rorl
insl
int3
jp
dec
test
pop
cmp
imul
and
mov
jge
andl
mov
mov
pop
lock
xchg
hlt
and
test
sti
pop
cmp
add
test
aas
loope
int3
adc
enter
cmp
and
nop
xchg
inc
mov
call
cs
lods
pop
imul
in
jmp
movsl
push
adc
and
mov
jmp
cmp
ret
xchg
int
mov
and
push
ficompl
pop
pop
inc
or
push
lcall
in
je
jl
mov
clc
adc
adcb
enter
enter
mov
jno
cld
jp
movsl
and
or
cwtl
pop
in
and
mov
add
add
cmpsl
js
int
or
push
loopne
xchg
mov
or
cmp
inc
dec
fs
jg
inc
movsl
rol
stos
fdivr
cmp
in
and
notb
andb
and
dec
das
jb
or
leave
or
leave
and
adc
xor
inc
add
in
xor
xor
movsl
push
inc
pushf
pop
sub
lea
movsl
xchg
cmp
cwtl
push
pop
in
dec
xor
cmp
mov
and
loop
jne
stc
lock
dec
test
or
mov
test
inc
call
shlb
repz
push
insb
shlb
mov
fnstenv
sti
or
mov
not
ret
pop
sbb
icebp
inc
or
or
in
in
adc
inc
push
jno
sub
fmull
sub
or
cmpsl
and
and
jo
psubsb
test
shll
and
cmpsl
mov
and
xor
xor
insb
lock
add
push
and
sub
getsec
rorb
daa
int3
stos
sub
jmp
rolb
int3
or
pop
scas
test
fistl
pop
pop
dec
aam
push
cmp
rorb
call
stc
shlb
inc
jecxz
lock
je
pop
in
in
in
dec
loopne
push
push
and
sub
jecxz
or
mov
lahf
call
mov
add
adc
dec
ffree
in
stos
xchg
data16
adc
cmp
int
cmp
repz
adc
ss
ret
push
pop
shlb
mov
int3
gs
not
and
push
adcl
mov
pop
lret
add
aam
mov
push
mov
pop
xchg
rolb
or
sbb
pop
adc
test
nop
mov
cltd
or
les
jo
xchg
sbb
add
mov
in
sbb
adc
rclb
jge
and
popf
fdivl
push
xor
pusha
adc
xchg
cmpsl
cmpsb
mov
cmpsb
adc
inc
xor
inc
push
dec
in
test
pop
xchg
popa
sub
jne
sti
mov
pop
test
gs
xchg
pushf
sub
mov
or
popa
mov
jnp
mov
mov
test
test
xchg
push
add
sbb
xchg
pusha
mov
pop
aas
mov
push
and
addb
pushf
push
xchg
push
in
addb
jne
xchg
jge
pop
push
dec
cmpsb
fisubl
or
push
pop
xor
ret
inc
mov
adc
pop
sarb
sub
stos
mov
int3
leave
in
add
mov
xchg
sbb
mov
lods
adc
mov
ret
ss
mov
mov
scas
xchg
jns
pushf
cwtl
sbb
test
add
movsb
loope
xor
insb
icebp
inc
dec
or
pop
popa
and
test
and
push
nop
out
jl
call
dec
mov
sbb
add
or
sub
insb
sbb
xorb
sbb
js
test
dec
pop
nop
jl
jl
shll
cltd
fs
xchg
subb
jnp
into
and
flds
add
sbb
sahf
xchg
adc
imul
adc
sub
cmp
add
sbb
or
decb
push
ret
inc
push
std
cmpl
jns
push
inc
sbb
repnz
lods
or
dec
cmpsb
mov
push
inc
sbb
shrl
imul
test
cltd
je
aaa
es
add
dec
jnp
test
and
add
push
cmp
or
nop
mov
ficoml
test
out
sub
fcoml
scas
in
adc
bound
divl
popa
jb
jl
aam
or
mov
lock
rolb
mov
hlt
sbb
xor
stos
push
insl
xchg
popa
inc
fsubs
in
adc
mov
shld
movsl
push
or
xchg
and
js
nop
jmp
and
xchg
push
lea
adc
nop
pop
arpl
loopne
clc
pop
clc
xchg
add
nop
dec
ret
mov
and
inc
mov
jbe
gs
idivl
mov
insl
popa
lea
mov
out
insb
adc
fisubl
insl
cmp
test
jmp
push
pusha
adc
dec
push
xor
sbb
dec
xor
sbb
inc
cmp
and
sub
pop
enter
pop
xchg
sbb
mov
and
fmul
shll
jne
xor
cltd
test
fcompl
inc
enter
movsb
pop
pop
xor
and
dec
test
inc
lea
fwait
and
mov
stc
adc
addl
adc
xlat
sub
aam
movsl
and
and
cmp
pusha
adc
or
in
mov
push
test
roll
jge
ret
or
cmp
inc
adc
sbb
dec
or
push
fs
lods
mov
dec
test
jg
jb
xchg
jne
call
test
and
adc
jmp
gs
test
dec
or
jno
clc
cli
push
cwtl
or
mov
dec
pop
test
pop
int3
pop
lds
les
pop
jb
mov
push
lea
js
daa
fwait
pop
pop
cmpsb
add
adc
sbb
inc
push
dec
rcl
rolb
mov
adc
aam
inc
test
in
mov
imul
ljmp
js
arpl
movsl
sbb
jl
mov
mov
xchg
je
xchg
push
jno
les
and
fstps
and
aam
inc
sbb
nop
push
sub
inc
adcb
mov
inc
sub
subb
inc
and
mov
lcall
dec
stos
sbb
inc
push
bound
cmp
ret
fwait
lods
fildll
sbb
rcll
xor
xor
add
xchg
xor
std
aam
rcll
sti
xchg
stc
mov
push
push
fists
cltd
adc
cwtl
fcoms
push
and
and
sbb
push
push
adc
sub
or
loop
push
dec
and
and
andb
jns
in
ficoml
mov
xchg
add
adc
shll
push
dec
test
addl
gs
mov
filds
mov
mov
add
pop
jge
inc
lods
ror
pushf
das
inc
dec
mov
and
jmp
mov
xchg
and
jae
pusha
xchg
add
sub
inc
jle
jne
test
pusha
ljmp
and
xor
movsb
adc
and
fmuls
inc
mov
xor
aam
imul
xor
xchg
and
pop
pop
mov
sti
lret
mov
pusha
or
in
mov
mov
adc
push
xor
sbb
pop
loopne
mov
or
sbb
lret
out
lock
roll
fcomps
and
or
xlat
push
mov
aam
fmul
or
loopne
mov
fiaddl
sub
addr16
sysexit
and
sub
dec
adc
popf
pop
jmp
jg
add
pop
rcrb
out
cwtl
xor
cmpsl
push
adc
in
xor
or
fwait
adcb
xchg
lock
pop
mov
mov
aaa
fsubl
fstl
or
les
roll
or
xchg
imul
push
outsb
jge
cmp
das
mov
fs
movsb
pop
or
dec
je
leave
and
push
cmp
xchg
pushf
adc
mov
les
nop
icebp
sbbb
adc
cwtl
js
add
shrb
adc
in
xorb
out
mov
and
leave
leave
in
mov
cmp
bswap
les
cmp
cmp
cmp
pushf
xchg
mov
int
leave
int
adc
in
leave
pop
aam
rorl
inc
das
and
cmp
pop
pushf
pushf
xor
dec
sbb
mov
test
loope
dec
cmp
sub
push
mov
xor
mov
adc
sarl
sarb
push
mov
push
mov
sar
insl
sahf
push
mov
push
icebp
jecxz
dec
mov
and
adc
lods
neg
fidivl
xchg
sub
fs
imul
pushf
shl
adc
lahf
cs
jb
mov
sbbb
std
cmp
sub
mov
adc
inc
ret
dec
mov
mov
shl
sub
mov
sbb
dec
and
sbb
xor
in
dec
aam
mov
or
push
xor
push
addr16
test
xor
xor
rclb
xor
movsb
mov
jo
or
out
mov
mov
push
pusha
add
inc
movsb
inc
sub
jo
sbb
in
js
mov
in
mov
cmp
mov
jge
addr16
pop
mov
cmpsb
xchg
mov
push
sbb
fs
cmp
inc
fwait
and
pop
into
xorb
dec
sbb
pop
fildll
or
pop
adc
cmp
pop
xlat
and
call
subb
sbb
sub
sbb
and
inc
cltd
mov
push
in
push
sub
adc
adc
xchg
xchg
popa
xor
enter
or
ds
mov
pop
adc
xchg
sbb
int3
ja
xor
sub
or
shll
dec
aas
outsl
mov
sti
dec
enter
adc
clc
aas
adc
or
pop
push
and
sub
xchg
ja
insl
pop
dec
pop
leave
lcall
int3
push
mov
addb
insl
inc
sarb
adcl
lret
sbb
push
jbe
in
shrb
mov
nop
add
fadd
xor
lods
shrl
sbb
xor
and
mov
pop
sbb
fwait
inc
fcomi
mov
mov
xchg
orl
fwait
movsb
and
test
mov
pusha
gs
adc
lods
mov
xchg
cmc
cwtl
mov
mov
outsb
or
shlb
out
dec
cmp
lods
mov
add
dec
mov
sub
aad
jo
leave
out
ret
inc
mov
pop
test
xchg
fwait
test
and
and
sbb
sub
fs
nop
je
inc
lods
mov
adcb
repnz
repz
enter
sub
fwait
inc
mov
mov
dec
inc
shrl
cwtl
enter
sbb
xchg
orl
in
fs
inc
xchg
xchg
lods
aas
or
sub
push
cmp
jo
jbe
not
sbb
sarl
nop
add
lock
loop
and
andb
sbb
mov
xor
mov
mov
in
insl
hlt
or
insl
inc
xchg
repz
sub
movsl
dec
jb
in
adc
mov
sub
mov
cltd
inc
cmp
jg
sbb
sbb
jnp
sar
leave
fists
xchg
sbb
and
and
push
enter
push
pusha
shrl
dec
movsb
les
cmp
lea
scas
cltd
add
sbb
icebp
jns
xor
mov
pop
gs
outsb
cmpsb
cmp
or
push
lea
jae
sti
or
pop
shll
enter
mov
fsubs
xchg
mov
add
or
enter
push
adc
sbb
fsubr
cwtl
jbe
mov
pop
test
sub
inc
add
je
push
sbb
out
push
sub
arpl
in
das
aas
outsl
cs
dec
popf
inc
mov
faddl
outsl
ret
jmp
push
imul
mov
test
push
add
sbb
sub
int3
sub
jae
in
lods
dec
out
xchg
sub
sti
fst
movsb
and
pop
hlt
jmp
adc
sbb
cmpsb
adc
pusha
inc
stc
adc
mov
sbb
subl
adcl
sbb
adc
mov
push
mov
pusha
imull
shll
jge
xor
sbb
loope
fimull
push
fcos
adc
and
orb
mov
addr16
subl
test
xchg
mov
mov
test
mov
pop
pusha
mov
inc
xor
pop
dec
xor
dec
xchg
rorb
sub
cmp
pusha
test
leave
je
jne
ret
and
and
inc
aam
sbb
mov
adc
adc
mov
sub
jno
adcl
fdivrl
dec
lock
xor
and
mov
lcall
and
icebp
lods
add
loope
mov
dec
inc
push
ret
push
nop
xor
push
jge
aad
outsl
fsubs
aas
ret
xor
shll
mov
std
xorl
mov
or
sbb
add
in
or
stc
sub
mov
push
nop
pop
enter
call
in
mov
xlat
outsb
adc
js
das
sbb
decb
movsl
ja
inc
adc
mov
data16
push
stos
scas
and
scas
test
sbbb
cwtl
cwtl
mov
cmp
jl
je
add
and
cmp
std
fdivs
ret
inc
add
and
sti
mov
pusha
movsl
ret
aad
add
arpl
roll
pusha
cmp
iret
xor
jo
movl
enter
sbb
mov
jno
or
adc
shlb
cwtl
mov
movsb
nop
dec
rorb
push
push
sub
pop
sub
adc
pusha
inc
mov
inc
mov
scas
int
mov
xchg
neg
rolb
push
mov
sbb
nop
imul
xor
mov
out
in
mov
adc
cwtl
inc
mov
sbb
add
ficoml
pop
xlat
mov
test
or
dec
insl
xchg
dec
movsb
nop
dec
imul
xor
andb
xchg
dec
xor
fisubl
rol
or
sub
xchg
inc
push
xchg
cwtl
test
sbb
mov
jns
stos
xchg
in
or
adc
jns
ret
push
sbb
add
movsb
mov
xchg
pop
xchg
jle
inc
or
call
mov
bnd
push
push
insl
mov
pop
fisubrs
inc
xlat
cltd
mov
push
inc
adc
fs
movsb
int3
jno
dec
and
and
enter
rorl
jns
jecxz
imul
xchg
lods
loopne
xlat
mov
or
sub
std
mov
and
add
fdivr
adc
add
in
cwtl
or
adc
push
xchg
imul
or
pop
inc
sbb
nop
inc
pop
and
mov
js
xor
sbb
push
and
push
pushf
mov
fcoms
fs
push
and
push
jnp
mov
mov
neg
mov
sbb
fs
push
fs
adc
aam
sbb
sbb
dec
or
scas
push
loopne
mov
jmp
adc
push
outsb
xor
inc
and
push
push
adc
adc
pop
mov
aaa
fists
in
fsubs
out
ficomps
aad
add
out
lcall
push
sahf
mov
loope
pop
mov
xor
add
sub
xchg
push
jnp
inc
aad
neg
dec
pop
js
inc
aas
dec
das
push
or
inc
adc
and
push
rolb
incl
mov
add
adc
mov
rcll
xchg
adc
jg
decl
cmp
rclb
cmpl
test
add
nop
add
jns
xlat
dec
pop
adc
test
and
push
push
jno
ret
dec
repz
and
test
add
sbb
clc
popl
push
lock
pop
in
xchg
xor
incl
insl
mov
shrb
xor
dec
push
jmp
and
insb
outsl
arpl
imul
ljmp
test
sub
popa
arpl
jne
jb
outsb
je
add
das
add
loopne
jbe
push
insl
adc
div
mov
outsl
jb
js
je
jb
gs
add
fcomip
out
outsl
or
outsl
add
add
add
add
jne
mov
je
imul
dec
and
or
das
inc
push
add
add
jg
sbb
or
dec
add
jle
mov
xor
inc
push
add
aas
cmp
ss
dec
add
cmp
scas
sub
push
insl
xchg
je
jge
push
fidivs
cmp
dec
fisttpl
scas
rcll
fs
cmpsw
insl
push
push
xorb
or
bound
sbb
push
jne
imul
in
cmp
jbe
aas
imul
ds
jp
outsl
or
mov
dec
fs
lret
mov
and
outsl
jmp
jo
cmp
je
arpl
xor
stos
add
mov
pop
push
imul
scas
cmp
jne
inc
pop
jo
notl
or
mov
ret
outsb
dec
sub
mov
jnp
fs
insb
lcall
repz
lahf
cmp
pusha
sbb
outsb
inc
xlat
fimuls
or
push
xor
pop
daa
dec
jbe
cs
jecxz
jb
outsb
bound
push
mov
sbb
jo
arpl
mov
xor
ret
insl
mov
adc
xchg
push
das
jb
ret
cmpb
pop
fidivrl
cs
or
inc
rorl
inc
outsl
andl
sbb
fidivrl
jg
popa
push
mov
push
adc
xchg
lahf
aaa
jg
rol
add
test
fbstp
or
mov
xor
jne
jbe
jb
jne
push
stos
imul
or
pop
stos
mov
js
das
rcrl
mov
push
pop
jae
pop
dec
insl
push
push
ljmp
shlb
lahf
outsl
aas
or
add
pop
scas
ret
sbb
xchg
push
mov
sbb
push
pusha
xlat
aaa
cmpsl
or
insl
lret
imul
jb
fs
imul
shll
sub
rdtsc
cmp
inc
xchg
ret
or
clc
das
xchg
sbb
push
lods
sbb
add
pop
pop
sbb
push
stos
pop
insl
sub
lret
je
scas
cmp
push
out
popa
mov
jg
cmp
sbb
fisttpll
movsb
pop
jecxz
push
push
sub
xor
cmp
xor
addr16
flds
xchg
std
cmp
inc
or
and
enter
orb
cmpsb
jnp
adc
adc
in
adc
adc
push
sbb
jl
push
mov
pop
idivl
push
das
ljmp
out
and
out
repz
cmp
jns
jp
push
cld
iret
mov
push
pusha
dec
pop
lahf
push
dec
aaa
add
mov
mov
test
sub
sub
push
mov
lock
loope
lret
lret
test
cmp
imul
pandn
ds
mov
fbstp
or
push
fwait
mov
dec
add
sbb
fisttpl
mov
xor
add
add
das
das
inc
pop
sub
mov
shlb
dec
ljmp
das
inc
and
decb
popa
pusha
dec
inc
jmp
jl
scas
mov
jns
aas
or
pop
ds
inc
mov
xchg
sbb
ds
push
fcomps
daa
outsl
dec
and
or
pop
inc
das
fcmovnb
push
mov
pop
imul
iret
fcmovnu
ss
imul
out
insl
pop
jo
and
arpl
fcmovb
inc
pop
pop
jp
int
jmp
and
sub
aad
mov
fbld
fcmovnbe
outsb
push
ds
neg
iret
mov
insl
mov
jg
jecxz
mov
cmp
cmp
add
jne
dec
fs
dec
and
jns
add
das
cmpsl
std
ss
jns
push
dec
push
inc
inc
arpl
bound
std
fsubrs
mov
dec
arpl
sti
loopne
sub
inc
jne
jne
xor
insb
xchg
loop
fimull
outsb
xchg
inc
jo
imul
bound
inc
popa
outsb
adc
into
mov
xchg
cmp
sahf
outsb
jns
jg
addr16
popa
imul
divl
xor
and
daa
out
fstps
clc
sbb
dec
outsl
outsb
and
cmp
push
jne
xchg
pop
dec
scas
jmp
add
out
dec
or
rcrl
jnp
mov
jae
mov
push
inc
push
popa
insb
jne
test
stc
pop
inc
inc
mov
inc
dec
cmp
call
sub
sub
sub
cs
xor
xor
xor
pushl
aaa
cmp
cmp
cmp
ds
inc
inc
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
add
push
push
rcrb
out
mov
pop
adc
popa
bound
gs
imul
xor
insb
insl
outsb
outsl
jo
add
jbe
js
jp
jl
jle
xchg
and
lock
loopne
mov
add
orb
mov
ljmp
lret
jno
icebp
pusha
inc
mov
outsl
lcall
clc
ret
movsl
add
xorl
pop
test
outsl
imul
call
std
push
mov
gs
xor
popa
js
fnsave
faddl
dec
pop
add
adc
outsl
ja
ret
jnp
test
int3
adc
dec
push
add
adc
add
add
add
add
xor
cmp
push
add
xor
inc
pop
sub
hlt
and
mov
or
pusha
adc
js
or
in
out
lods
cmp
add
sbb
addb
jnp
test
push
xchg
test
add
mov
mov
daa
push
cmpb
push
fnstcw
mov
and
sub
jb
int3
push
lods
lods
pop
into
jo
add
rorb
clc
mov
jne
push
outsb
imul
les
xor
adc
loope
add
in
or
add
and
xchg
lea
jb
and
leave
and
xchg
mov
add
mov
mov
or
inc
scas
dec
cmpsl
shr
mov
pop
lods
mov
mov
enter
add
jp
pop
push
sbb
cmp
pop
sbb
push
inc
sub
fstpl
rdtsc
ss
js
dec
dec
inc
dec
inc
adc
arpl
or
push
nop
fs
xchg
xchg
je
cs
jae
mov
cs
dec
bound
je
outsb
data16
push
jbe
shlb
ss
out
je
xor
push
scas
sub
fwait
xchg
daa
pop
lea
jl
fidivrl
popa
addr16
outsl
js
push
xchg
cs
cmp
xchg
and
insl
jo
jo
and
and
xlat
xchg
xchg
shlb
aaa
insb
les
dec
imul
or
inc
mov
mov
lods
mov
inc
cmp
dec
inc
jb
jns
daa
ficomps
sub
ss
jns
gs
pusha
je
and
arpl
not
and
addr16
mov
jle
jbe
mov
jo
or
jb
and
xor
in
fisubs
pusha
inc
jbe
push
push
in
add
push
lahf
fs
insl
and
add
and
int
xchg
frstor
popl
inc
imul
imul
and
push
lds
daa
mov
dec
adc
popa
in
popa
mov
push
outsb
mov
popf
bound
or
lret
add
imul
insb
call
push
hlt
clc
addr16
subl
loope
das
outsb
gs
mov
mov
arpl
inc
int3
mov
pop
push
push
push
push
dec
testl
dec
in
loop
adc
outsb
enter
adc
push
fisttps
pop
push
insl
aas
inc
jle
jb
push
imul
call
jno
or
push
shll
outsl
jae
inc
in
mov
inc
xor
roll
inc
les
push
insb
jg
sub
pop
fsubl
or
in
push
mov
das
je
outsl
xchg
jne
pop
daa
xchg
mov
popw
pop
cmp
push
jl
cmp
or
ds
and
fisubrs
push
sub
adc
out
push
addr16
jle
jle
imul
je
add
out
cmp
sysret
or
sbb
das
fs
ret
jb
aaa
addr16
and
push
mov
xchg
jp
xor
xchg
pop
pop
jne
jo
pop
mov
push
jbe
sub
addr16
jo
ss
gs
imul
mov
out
loopne
dec
sbb
sahf
inc
pop
fs
mov
sub
popa
sub
inc
push
jl
out
sub
repz
add
sub
add
out
ds
std
lock
xorb
rcrb
inc
mov
dec
jns
push
pushf
cwtl
xchg
sahf
out
iret
nop
mov
or
out
jns
js
sahf
idivl
or
int3
jo
push
push
jns
pop
pop
push
push
out
sahf
out
dec
inc
inc
cmp
out
sahf
cmp
sub
adc
int
jns
add
cld
fmul
repz
repz
push
lcall
jl
out
sahf
pusha
push
dec
inc
xor
cmp
repz
cld
cli
in
shlb
mov
or
stc
lock
cmpsl
int3
test
push
xor
int3
mov
push
add
lock
jle
mov
add
and
and
dec
push
cltd
nop
sub
xchg
andl
and
es
addl
push
jg
add
stos
arpl
add
add
and
push
add
in
loopne
add
add
add
roll
inc
and
sbb
shll
push
pop
fisttps
jle
jg
or
or
test
mov
decl
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
mov
cmpsb
cmpsl
test
stos
stos
lods
lods
scas
ljmp
mov
mov
mov
mov
ret
enter
int3
int
dec
rcl
rcl
aam
xlat
fcomp
fcmovu
loopne
loop
in
out
call
in
out
mov
std
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
cmp
sub
loope
add
test
sub
popa
stos
add
and
movsl
mov
gs
popa
data16
pop
sar
pop
add
xor
add
mov
add
add
push
les
dec
arpl
inc
insb
fs
jne
insl
aas
sbb
mov
mov
cmp
or
fstps
pushf
pcmpgtw
xor
add
dec
push
push
inc
fdivrp
xlat
dec
and
xor
push
dec
inc
dec
cmovns
add
jg
das
push
adc
sub
adc
orb
mov
mov
out
xor
jnp
inc
loop
mov
ds
pop
and
aas
fcoms
inc
pop
clc
lret
sbb
jb
mov
pop
arpl
cmp
jg
adc
jg
fstl
mov
and
cmp
dec
imul
inc
sahf
push
cmpsb
iret
lret
add
inc
mov
mov
shr
test
sub
fwait
ss
sbb
pop
jg
jns
ds
xor
incb
int3
dec
dec
xor
dec
popf
pxor
xor
mov
aaa
push
div
inc
sub
dec
xchg
cmp
cmpsb
das
xchg
pop
jg
insl
xor
sahf
icebp
mov
cld
or
loopne
cmp
inc
mov
dec
xchg
xchg
push
pop
xchg
sub
pop
mov
out
leave
ljmp
repz
adc
push
or
scas
int
mov
jg
or
mov
sahf
xchg
dec
add
scas
lods
dec
lock
xor
les
adc
push
pop
pop
repnz
and
xor
and
es
mov
add
adc
pop
dec
subl
sbb
adc
loope
inc
jmp
fcmovnb
sarb
sub
mov
xchg
and
lahf
pcmpgtd
add
out
ffree
aaa
in
xchg
pop
and
fsubrs
and
ret
addr16
es
adc
xchg
jae
lret
in
mov
push
data16
inc
call
out
push
test
inc
sbb
xlat
bound
and
jne
fiadds
pop
aaa
pcmpeqw
sti
sbb
push
or
bound
and
add
je
jmp
xchg
jo
jae
insb
add
je
fstpt
mull
push
xchg
lret
xchg
cmp
addr16
mov
jb
add
data16
jae
or
push
sub
outsl
and
imul
fiadds
jae
jae
insl
mov
ja
jle
fs
pop
cmpsl
inc
fadd
andb
imul
jo
cmp
jg
repz
out
fbstp
xor
mov
insl
mov
push
test
jecxz
mov
push
mov
daa
and
mov
jnp
cmpsl
popa
mov
jbe
add
add
pop
ret
jecxz
jg
inc
mov
sbb
dec
cmp
outsb
js
dec
aaa
xlat
jg,pn
jg
dec
sub
jmp
cmpsl
loope
lock
xlat
adc
jmp
add
xor
push
xchg
andl
fidivs
cmpsl
call
mov
push
add
ret
xchg
je
cmp
divl
cmp
ret
pop
and
inc
js
jb
mov
pop
inc
xchg
insl
repz
dec
pop
and
jmp
or
xlat
ret
cmpsl
or
dec
jp
add
add
dec
ja
pop
adc
daa
loop
shrl
jg
pusha
test
mov
rorl
inc
ds
mov
je
push
outsb
ficompl
arpl
neg
in
pop
arpl
das
into
jae
push
pop
jmp
jne
xor
sbb
xchg
mov
jmp
js
aas
inc
pop
jecxz
hlt
dec
sbb
jae
pop
mov
fcmovnb
popl
push
xor
bound
jnp
push
sub
cmp
push
and
add
ret
repnz
jo
add
inc
aas
ret
push
cmp
js
push
xchg
je
jb
push
mov
data16
shll
in
arpl
call
and
fimull
fs
push
cmp
repz
sub
jne
cmp
push
dec
dec
cmp
fimuls
in
mov
pop
dec
aaa
inc
loope
fdivrs
mov
arpl
shl
jae
sub
push
ret
xchg
push
mov
subb
mov
mov
sbb
mov
add
int
mov
push
iret
pop
imulb
cmp
lahf
push
js
mov
ret
jg
push
jne
cmp
movl
adc
fwait
xorl
push
sub
mov
out
shrl
xor
add
loop
mov
inc
outsl
and
or
sbb
cli
aaa
shll
rcrl
insb
dec
pop
out
int3
xor
push
inc
inc
jno
push
clc
enter
cmpsl
mov
adc
mov
push
inc
outsl
or
pop
in
or
mov
sbb
pop
pop
xchg
cli
mov
dec
inc
mov
push
es
fldt
xchg
scas
out
inc
mov
inc
mov
out
jo
or
inc
sub
cmpsl
push
mull
dec
add
outsl
imul
out
add
jo
jnp
ss
mov
and
sbb
test
es
je
pop
jl
jo
dec
ud2
insb
jmp
dec
popa
sub
pop
scas
fisubl
addr16
cmpsl
mov
dec
cmp
lods
pop
out
cmpsl
xchg
inc
arpl
loopne
push
aas
pop
outsl
push
aas
loopne
bound
testl
mov
mov
mov
loopne
mov
jl
cvtps2pd
loop
pop
jl
imul
je
outsb
out
and
addr16
bound
sub
push
das
fldl
xchg
mov
xor
cmp
jns
jno
ret
aad
mov
push
sbb
mov
push
imul
jo
pop
ja
sbb
push
iret
out
es
inc
cmp
lds
mov
ja
jnp
in
imul
outsb
sahf
icebp
int
jo
popa
pop
arpl
mov
insb
jl
subl
fimuls
jl,pn
outsl
lret
sarl
jl
jo
bound
subb
jns
jg
addb
xchg
push
sti
roll
inc
mov
adc
shlb
fs
mov
xor
roll
xchg
jl
or
xor
daa
jl
iret
sbb
pop
icebp
icebp
mov
daa
inc
push
xor
push
outsl
ret
int3
pop
and
cmp
mov
mov
push
mov
push
pop
xchg
cmp
pop
fistpll
pop
arpl
test
ret
daa
filds
xlat
pop
decb
daa
jae
sbb
push
fucomip
aas
sbb
loop
cmp
mov
mov
loop
pop
fwait
xchg
fisttps
stos
ret
pop
pop
cld
mov
jb
bound
data16
aaa
push
push
insb
arpl
dec
jbe
sbb
les
pop
aaa
popa
insl
push
lea
inc
loop
push
jle
das
imul
imul
jg
outsl
mov
xor
inc
add
dec
push
loope
xor
dec
sbb
dec
and
push
sbb
push
inc
add
sbb
fnstenv
inc
pop
enter
dec
data16
ds
sti
push
cmp
push
jmp
push
push
in
dec
mov
ds
push
mov
and
push
in
jnp
insb
and
xlat
push
push
push
push
ret
scas
cmp
push
xor
cs
cmpsl
stc
mov
push
pushf
sub
out
sahf
hlt
roll
aas
pop
int
out
test
into
lds
mov
negl
push
filds
jecxz
xor
iret
repz
lock
push
and
push
arpl
jnp
and
inc
outsl
jg
push
imul
out
sahf
out
cmpsl
lcall
dec
inc
mov
push
push
mov
aaa
dec
and
push
orl
test
push
jo
jns
icebp
dec
or
xchg
sbb
cmpl
dec
mov
arpl
insb
pop
les
stos
aas
mov
popa
lret
icebp
xchg
xchg
outsb
arpl
std
loopne
nop
push
gs
insl
pusha
push
popa
jne
or
dec
mov
push
dec
bound
xor
pop
sub
and
imul
jb
push
push
jb
je
lahf
out
ficoms
lock
iret
repz
js
ret
aam
ds
repz
cmp
jns
out
xchg
pusha
pusha
sahf
dec
mov
mov
pop
inc
pop
pop
dec
cld
or
cmp
gs
je
cmp
aaa
mov
push
jo
jb
add
jae
cmp
into
fidivl
ss
sbb
and
jnp
inc
and
jae
imul
and
outsl
adc
bound
adc
push
sahf
fs
mov
sub
push
adc
outsb
sbb
lods
imul
pop
cmp
sbb
ja
imul
cmp
nop
and
add
or
aas
xor
push
dec
rcrl
or
inc
or
push
inc
push
daa
inc
adc
ja
push
lahf
jp
adc
js
test
arpl
mov
arpl
pop
packuswb
inc
adc
adc
pop
repnz
sub
imul
cmp
mov
pop
dec
ja
ss
add
arpl
adc
mov
xor
addr16
mov
mov
data16
aas
sbb
ja
pop
cmp
push
add
or
cld
str
xlat
sub
out
adc
aaa
and
and
fs
adc
xor
dec
mov
mov
push
daa
jae
mov
aas
andb
push
es
dec
xchg
pop
popa
xchg
sbb
xor
sbb
fildl
movsl
adc
das
push
pop
jo
and
fwait
mov
and
adc
push
add
mov
outsl
andl
push
dec
mov
aas
loope
pop
dec
dec
sti
or
push
sub
inc
dec
pop
mov
fwait
sti
sub
sub
jmp
add
push
mov
xchg
pop
imul
add
jg
pop
jb
sub
and
push
mov
or
pop
xchg
inc
sub
or
out
jnp
je
xchg
imul
add
jae
imulb
pop
fwait
push
ljmp
pop
xchg
fildl
sbb
fmulp
movsl
dec
lahf
aaa
pop
bound
loopne
mov
test
adcl
ret
jb
fs
add
in
test
push
mov
sub
jp,pn
mov
movsb
push
cli
addr16
lods
adc
inc
aaa
scas
lods
sbb
outsl
add
or
das
data16
sbb
fisubl
mov
jae
push
xchg
sub
xchg
out
pop
stos
orl
arpl
frstor
and
fnstsw
addb
scas
mov
ficomps
cmp
inc
aas
inc
lea
test
mov
aas
mov
pop
lods
sbb
add
and
fisttpl
jo
pop
push
sub
loopne
or
jne
or
sbb
fsubl
jo
add
dec
sbb
cmp
idivl
fcmovnbe
mov
scas
popa
insl
or
dec
xchg
add
pop
and
test
iret
inc
and
inc
dec
imul
imull
test
xor
lret
lods
js
or
jnp
stos
inc
cmp
xchg
data16
mov
out
loope
and
cmpsl
push
cs
push
mov
pop
and
cmpsb
dec
and
dec
mov
fbld
js
or
or
out
and
xlat
mov
push
xlat
inc
push
imul
aas
imul
in
movsl
dec
inc
pop
mov
mov
xor
cmpsl
aaa
inc
rcrl
cmp
fwait
andb
dec
test
cmpl
push
das
daa
pop
sub
addr16
movaps
fstl
dec
jns
mov
imul
call
ret
ja
add
fists
xchg
fistl
sub
dec
imul
inc
xchg
adc
stos
add
mov
push
xchg
mov
movsb
add
xchg
subl
push
movsl
xor
sub
sbb
dec
xchg
insb
fwait
xchg
push
pop
or
push
shll
jne
inc
imul
add
mov
xsaves
cmp
xchg
ret
mov
mov
pop
or
dec
rcll
mov
aas
push
push
sbb
jno
gs
push
inc
ret
dec
cmp
mull
mov
loopne
inc
shll
fisubs
arpl
imul
dec
addr16
pop
out
jae
push
movsb
or
xor
out
das
lods
mov
push
insl
push
inc
mov
push
out
or
sub
arpl
fs
pop
add
imul
idivl
aaa
xor
jbe
mov
or
mov
das
xor
cmpsb
mov
fs
das
ljmp
add
inc
xchg
mov
das
imul
xor
inc
fwait
pop
push
es
imulb
cmp
and
cmp
ss
xchg
mov
inc
adc
mov
cmpl
inc
aam
push
add
adc
pop
cpuid
dec
sub
push
mov
inc
imul
fwait
iret
test
dec
xor
stos
push
imul
push
out
movsb
inc
js
sti
or
subl
inc
rcll
cmpl
push
mov
inc
in
push
jnp
xchg
push
lods
jge
xor
sub
dec
inc
dec
and
push
lock
jnp
pusha
in
pop
mov
inc
cs
nopl
addr16
push
loope
mov
shlb
push
push
subb
mov
pop
minps
shrl
fisttps
jmp
out
inc
mov
testb
push
add
push
mov
sub
fimull
repz
jmp
xchg
ret
call
test
push
sti
cs
mov
hlt
jno
iret
jp
addr16
das
sahf
fidivs
imul
fwait
arpl
mov
arpl
repz
dec
sbb
add
fistpll
out
sbb
inc
mov
jmp
sub
push
jmp
jp
xlat
iret
push
jns
xor
inc
out
xabort
and
orl
cld
jg
in
shr
lods
push
idiv
aam
push
and
lcall
ret
jp
dec
repz
or
movsl
push
or
mov
fnstsw
fisttpll
adc
and
sbb
pop
add
mov
lods
lahf
scas
bound
xor
imul
lods
loop
pop
xor
or
movsl
mov
inc
mov
mov
out
lahf
xor
and
or
xchg
mov
cwtl
popaw
divl
push
scas
out
lret
push
jae
jae
imul
lods
adc
cmp
lahf
pop
mov
mov
call
arpl
shlb
pop
mov
out
adc
pop
mov
push
mov
negl
arpl
cmp
int
lods
add
ljmp
shll
push
sub
push
push
pop
mov
lea
popa
adc
mov
out
xchg
out
clc
sbb
and
add
pop
stos
cmp
and
mov
aas
sub
addb
pop
roll
shlb
jnp
bound
add
mov
jecxz
mov
add
arpl
lea
mov
push
pandn
jnp
jge
mov
fisubrl
jae
xor
mov
addr16
jl
sub
outsb
and
iret
pop
inc
in
rorb
lock
aas
aaa
subb
adc
mov
mov
pop
insl
pop
outsb
push
mov
cmp
mov
and
dec
lods
das
test
test
push
push
jb
std
insl
mov
mov
push
jae
push
add
adc
stos
inc
xchg
pop
and
in
jb
mov
xchg
insb
sbb
test
js
dec
cmpsb
xchg
push
aam
adcb
xor
cmpsl
pop
and
call
dec
xchg
inc
and
movsl
mov
dec
cld
movsb
scas
xchg
stos
fs
add
xchg
mov
xchg
push
leave
push
adc
push
repnz
pop
and
stos
in
and
lahf
xchg
pop
and
sub
sahf
nop
dec
and
popf
xchg
in
jb
inc
in
pushf
dec
scas
xchg
test
xchg
mov
xchg
push
leave
dec
clc
lcall
or
cltd
push
sbb
popa
pop
mov
mov
jno
arpl
dec
and
fdivrs
lods
push
pop
inc
insl
xor
cmpsl
sti
xor
pop
mov
mov
sub
mov
inc
dec
xorb
stos
lods
xlat
adc
pop
xor
cmp
dec
inc
inc
pop
xchg
mov
insb
iret
dec
out
dec
andl
das
inc
mov
adc
cmpxchg
pop
mov
adc
and
mov
mov
fwait
add
mov
and
movsl
lea
lods
lea
filds
insl
adc
mov
push
pop
shrb
and
mov
mov
add
dec
setbe
aas
insl
aam
mov
or
mov
mov
inc
and
das
addr16
test
outsl
mov
pop
ret
pop
cltd
leave
in
push
scas
sbb
aas
xchg
rcrl
neg
scas
add
scas
jg
fimuls
ffreep
and
dec
aaa
inc
fildl
inc
imul
and
xchg
mov
jo
mov
jp
and
mov
js
aaa
arpl
insb
xor
adc
mov
outsl
shl
iret
aaa
outsl
pusha
vmovlhps
scas
or
add
push
push
inc
mov
outsl
jecxz
sub
lahf
cmpsl
adc
jge
cmp
cmp
fadds
inc
pop
loope
jbe
mov
pop
mov
movb
ja
adc
inc
out
scas
hlt
dec
sbb
pop
iret
inc
arpl
int
dec
push
sbb
mov
cmp
aas
mov
push
pop
out
outsl
jbe
rclb
inc
pop
call
xlat
leave
fwait
ret
push
sub
add
push
adc
sbb
pop
pop
add
orb
or
push
and
and
cmp
ffree
outsb
lods
sbb
dec
pop
movsl
hlt
mov
add
xchg
popl
push
movsl
ficoms
sbb
aam
enter
aas
imul
ja
xor
sub
sbb
cmovg
addr16
and
mov
sub
adc
insl
je
inc
cs
fnstenv
imul
ds
sub
push
adc
ret
pop
fistpl
mov
xchg
fnstenv
lret
push
push
pop
les
jmp
push
add
ss
dec
sbb
pusha
mulb
popa
jae
js
outsl
dec
js
mov
xor
xor
mov
mov
adc
jecxz
sub
adc
iret
and
imul
out
stos
pusha
or
sbbb
lea
pusha
lods
adc
iret
repz
inc
push
sub
mov
loopne
push
stos
jns
xlat
jl
push
adc
jnp
mov
test
ds
mov
xorl
dec
push
int3
push
sub
mov
movsb
xlat
scas
or
jg
jnp
pop
adcb
jb
arpl
mov
imul
aas
add
xor
mov
mov
dec
inc
adc
xchg
pop
push
and
mov
push
xlat
xlat
pop
sbb
insb
lds
cmp
rdmsr
out
mov
adc
xorl
fdivs
mov
idivl
iret
adc
xor
and
test
pop
mov
imul
out
push
cmpsb
xorps
ljmp
pop
fwait
jo
sub
outsl
call
je
xchg
dec
xor
pusha
push
fmuls
xchg
cmp
mov
decl
loop
jp
jnp
inc
xchg
mov
xchg
cmovb
or
cmp
mov
push
cmpsl
stos
xlat
ret
rcl
lods
sbb
dec
cmpsl
xor
scas
dec
mulb
addb
js
lea
ja
dec
adc
jmp
cmpsb
xchg
pop
ss
push
bound
pop
jge
push
push
push
cs
cmp
lods
xor
das
xchg
xor
jnp
and
out
es
push
mov
push
insl
xchg
testl
jb
inc
xchg
cmp
jns
xor
jae
fs
mov
stos
push
je
xor
icebp
cmp
jg
shlb
mov
fidivrs
inc
mov
or
push
xor
cmp
adc
dec
xchg
push
je
mov
js
inc
push
mov
pop
mov
jns
dec
mov
bound
out
loopne
xor
xor
push
fisubrs
xor
cs
lret
pop
cmp
outsb
jb
loop
out
xchg
ja
retw
mov
xor
and
xor
sbb
lcall
les
arpl
xchg
mov
mov
idivb
dec
daa
inc
xor
out
push
push
mov
cs
shl
add
packssdw
inc
pop
pop
mov
sbb
dec
ss
outsb
pop
push
pop
mov
daa
dec
jb
das
inc
pop
dec
push
pop
ret
jnp
dec
das
add
and
ja
data16
inc
pop
push
sysexit
mov
pop
jns
dec
cs
sahf
push
outsl
jnp
sub
cli
push
push
insl
sub
mov
mov
insl
mov
inc
mov
ja
xor
push
jp,pt
jp
sahf
notl
ds
subl
sahf
dec
das
xor
lds
jp
pop
outsl
lock
or
xor
mov
outsl
jb
sbb
outsl
imul
pop
and
push
sbb
mov
fists
add
imul
mov
jmp
add
xchg
addr16
mov
aam
jmp
and
lods
xor
xor
dec
jnp
and
jecxz,pn
add
push
adc
pop
jle
mov
orb
lcall
jg
imul
roll
mov
rcr
xchg
inc
pop
or
adc
sbb
mov
add
mov
push
mov
cmp
sub
mov
pop
shlb
inc
test
pusha
mov
xchg
cmpsl
nop
test
imul
pop
push
repz
inc
add
lods
push
add
mov
sbb
pop
les
outsb
stos
scas
jae
lcall
push
mov
arpl
lahf
shlb
dec
and
shlb
sub
pop
les
insl
lahf
inc
addr16
jo
sti
jmp
adcl
mov
fwait
jecxz
dec
outsb
mov
lds
inc
xor
mov
sbb
push
inc
insl
and
xchg
adc
pop
sub
mov
mov
subl
fs
outsl
mov
call
das
aas
shrb
xchg
imul
sbb
fs
sub
addb
cmpsl
lea
pop
iret
imul
and
push
mov
pop
scas
test
movsb
inc
sbb
jle
insb
pushf
in
lods
pop
js
xchg
rcrb
push
xor
in
jp
xlat
add
add
fs
shlb
dec
xlat
addr16
sbb
push
xor
jo
shll
negb
jo
mov
int
jae
jecxz
cs
jmp
xor
nop
and
mov
sahf
idivl
add
adc
cwtl
jl
out
add
mov
adcb
loopne
jne
fs
pop
pop
cmp
jne
mov
arpl
ss
lret
rcr
je
ja
xor
xor
push
add
xchg
push
rolb
das
pop
sti
or
ret
lock
bound
fidivrl
stos
inc
outsl
jle
sub
push
outsl
xchg
mov
fldl
lahf
push
fwait
mov
xchg
lahf
aaa
roll
out
das
push
outsb
xorb
sub
or
stos
sti
pop
pcmpgtb
and
outsl
loop
aas
incl
jg
ret
inc
sub
test
mulb
ret
push
xchg
das
sub
mov
addl
jbe
addr16
mov
lret
push
fwait
and
jmp
mov
popa
push
das
xchg
xchg
ljmp
mov
sbb
pop
adc
popa
fldt
push
xor
iret
bound
dec
push
mov
xchg
pop
xchg
mov
sub
inc
loop
out
inc
loop
pop
xchg
fistps
adc
adc
inc
pusha
pop
pop
ds
jns
mov
xlat
iret
cmp
ret
add
sub
xchg
push
xor
jbe
arpl
dec
test
dec
pop
outsl
xlat
pushf
mov
aam
mov
xor
pusha
pop
pop
fbstp
sub
adc
jne
push
mov
add
mov
mov
ds
push
nop
push
push
adc
or
add
idivb
push
dec
add
outsb
mov
ja
mov
xchg
push
push
inc
fucomip
add
addr16
pop
shrb
aas
sub
imul
fbstp
xchg
jmp
fidivrl
push
lcall
pop
outsl
sub
add
adc
push
sbb
iret
add
pop
jl
divl
push
mov
lcall
xchg
mov
pop
add
add
pop
or
or
adc
adc
sbb
insb
mov
adc
sub
xor
inc
mov
jge
fidivs
mov
mov
int
mov
shrb
ret
sub
insb
ss
add
das
or
adc
fwait
int
and
add
xchg
data16
insb
rclb
lret
str
int
cwtl
or
and
das
incl
or
mov
adc
inc
pushf
mov
dec
std
jl
outsl
les
add
pop
add
add
das
ss
and
mov
mov
push
jg
out
push
and
mov
add
adc
xchg
mov
mov
std
lcall
enter
push
push
mov
inc
push
insl
ss
adc
cli
mov
lahf
in
cld
test
cmp
mov
cld
std
mov
sbb
mov
ds
pop
sbb
xor
mov
fnstcw
jo
fsubs
sbb
pop
ljmp
test
xor
dec
xchg
test
mov
pop
xchg
add
cs
or
push
and
sahf
subl
dec
nop
daa
mov
sbb
and
push
mov
subl
inc
xlat
mov
xchg
xor
scas
pop
jb
push
dec
pop
dec
pop
cmp
in
jns
sub
sbb
dec
cs
xor
pushf
cmp
in
xor
cmp
iret
leave
jae
inc
mov
iret
and
rclb
xor
scas
orb
test
sgdtl
daa
arpl
inc
cmovs
aaa
pop
pop
cmp
sbb
sbbl
mov
and
lret
push
pop
imul
jnp
mov
cmp
cmp
sub
pop
xor
inc
adc
je
jp
inc
addr16
jecxz
scas
and
inc
cwtl
adc
jecxz
jge
bound
push
pop
rorb
imul
sbb
aas
aaa
dec
jnp
lock
bound
je
bound
imul
xor
repz
ds
mov
add
adc
lahf
mov
aam
jle
pop
mov
mov
and
mov
pop
pop
mov
shrb
lea
inc
dec
push
push
scas
or
pop
adc
into
je
rclb
mov
add
push
pop
xor
adc
outsl
push
dec
lahf
mov
rorw
inc
pop
aas
mov
or
jne
inc
ljmp
jp
push
fadds
adc
xchg
nop
cs
incl
mov
add
xlat
out
sti
push
lcall
pop
pop
pop
dec
sbb
bound
cmp
test
mov
out
jp
lods
andb
push
subb
add
jbe
adc
xchg
dec
sbb
ds
push
and
dec
sbb
inc
arpl
jl
js
data16
ja
insl
addl
pop
arpl
dec
incb
pop
jb
stos
xchg
andl
mov
inc
mov
addb
xchg
cmp
sahf
icebp
sbb
fwait
inc
xchg
push
or
push
push
or
dec
mov
xchg
imulb
fwait
cmp
cmpsb
pop
pop
xor
and
mov
test
pop
inc
shll
int
notl
mov
mov
popl
push
out
jnp
jecxz
inc
fildl
loopne
call
pop
and
fstpt
pop
insb
mov
scas
mov
cmpsl
and
mov
mov
mov
adc
ljmp
mov
popa
push
mov
neg
mov
je
dec
push
popa
pop
das
inc
jns
out
imul
mov
push
mov
and
aas
xor
inc
fs
out
dec
xor
xchg
test
imul
filds
out
movsb
push
cmp
sahf
xchg
out
imul
repz
aaa
mov
cmove
jns
dec
sub
inc
mov
mov
notb
es
aas
sbb
fisubrs
inc
push
fisttps
inc
cmp
cmp
xchg
inc
loopne
mov
xor
fsubrl
ss
push
sbb
sahf
data16
fwait
aas
push
adc
movsb
pop
jns
idivb
mov
es
lcall
inc
pop
mov
addr16
lcall
mov
int
xor
xor
sarl
loop
ss
in
dec
lahf
idivb
pushf
aaa
push
cmp
pop
cmp
lcall
hlt
nop
push
push
jno
repz
jns
icebp
inc
cmp
jl
out
ds
fdivr
sbb
repz
test
pop
dec
repz
ds
cmp
jae
stos
jns
out
lock
ss
jl
dec
xor
add
ljmp
and
jg
dec
sbb
scas
sub
adc
and
and
rcrb
push
push
mov
xor
jbe
aaa
jecxz
test
mov
pop
enter
pop
push
mov
sub
mov
loopne
mov
sar
mov
pop
int3
push
and
pop
sbb
enter
stc
cmp
adc
or
adc
cs
mov
push
pop
insb
loop
add
dec
stos
ret
pop
movsl
inc
test
imul
inc
or
insb
lds
push
xor
ffreep
xlat
push
add
mov
iret
xor
fimuls
aas
dec
ja
outsb
outsb
jp
xor
push
js
xor
mov
pop
insl
cmovs
xor
adc
and
xchg
pop
mov
push
lods
iret
imul
mov
sub
and
jne
cmpsl
push
dec
shlb
pop
ljmp
je
or
fistl
cwtl
or
icebp
sbb
mov
fxch
mov
ficoml
fst
test
jmp
rcrb
mov
push
imul
xchg
nop
arpl
push
adc
inc
inc
cli
inc
add
xor
scas
dec
pop
sti
mov
outsb
sub
mov
arpl
push
mov
adc
or
scas
mov
xlat
mov
lods
mov
jo
inc
loop
push
or
aaa
xchg
incl
push
adc
mov
jecxz
xor
testl
popa
daa
or
fs
add
dec
pop
out
jb
xchg
fiadds
sub
push
adc
iret
pop
push
or
lret
iret
fs
cmp
inc
xchg
or
adc
bound
loopne
pop
daa
add
lods
je
lahf
cmp
sysexit
cmp
ret
mov
ljmp
push
bound
dec
movsb
inc
cmp
das
fs
jo
xor
adc
jge
xchg
mov
imul
jnp
xchg
add
mov
mov
and
push
or
jl
adc
jb
add
pop
jcxz
add
push
add
dec
xor
or
sbb
xlat
push
dec
fimuls
push
add
add
and
aas
sbb
bound
mov
rolb
stos
xorl
or
inc
iret
das
xor
and
lock
cmovno
lea
aaa
push
push
push
or
dec
insb
push
pop
addr16
sub
inc
xchg
inc
add
test
jae
lods
xor
adc
arpl
das
pop
mov
add
sti
jmp
ja
movsl
insl
push
dec
ret
addl
pop
mov
sub
jne
mov
subb
or
clc
push
pop
jbe
scas
outsl
inc
fildl
aaa
imul
daa
pusha
cmpsl
out
insb
insl
insl
gs
das
testl
iret
pop
add
lock
popa
mov
xchg
das
or
add
gs
add
mov
mov
das
mov
xchg
dec
push
orb
add
mov
mov
add
arpl
fildl
and
scas
test
lock
jbe
stos
test
bound
test
mov
add
add
mov
inc
jg
ja
iret
fcomps
push
sbb
scas
add
push
jnp
mov
inc
inc
xchg
sbb
out
cmp
push
daa
inc
cmp
mov
push
pop
adc
iret
jp
xor
es
fcompp
cmp
orb
unpcklps
mov
daa
xor
loop
add
inc
ss
pop
adc
pop
inc
pop
lahf
inc
test
gs
dec
or
push
mov
js
cmpsl
dec
add
cmpsl
imul
ret
pop
pop
inc
sbb
testl
mov
pop
cmp
lea
jns
or
xor
lea
aaa
push
movb
aas
das
adc
fs
xor
fwait
xor
xlat
subb
std
es
insl
jo
je
add
addr16
ds
jo
jae
daa
pop
jno
outsl
xor
push
mov
jae
push
adc
pop
pop
decl
test
jns
je
jne
loope
movsb
pusha
or
scas
xchg
sbb
mov
lahf
pop
dec
out
push
clc
bound
aaa
mov
adc
insl
mov
dec
pop
inc
fwait
add
adc
mov
je
imul
push
or
mov
xor
inc
sub
inc
or
repz
mov
ret
push
dec
divl
pop
inc
dec
adc
and
push
push
sbbl
fmuls
jg
sub
jo
pop
adc
adc
pop
into
dec
rorl
arpl
add
pop
or
pop
xor
cmpsl
mov
pop
push
xchg
ljmp
dec
fwait
pop
pop
addr16
andl
sbb
jns
jb
and
xchg
jmp
arpl
ret
push
ret
mov
rclb
dec
xlat
mov
call
outsl
outsb
or
cmc
fs
inc
insb
cwtl
push
add
cmpsb
dec
and
pop
outsb
movsl
jecxz
decl
jb
out
fimuls
lock
push
cs
pop
aas
inc
push
dec
inc
mov
push
xchg
add
add
setle
push
jg
adc
fcmovb
jle
pushf
or
fiaddl
pop
add
cmp
xchg
add
lahf
mov
and
mov
and
pop
ja
mov
cmpl
and
ds
das
sbb
add
or
dec
repz
daa
daa
daa
push
and
mov
pop
inc
inc
inc
push
inc
pop
and
or
aas
js
lcall
sbb
sbb
pop
push
and
push
xorb
lods
add
gs
pusha
arpl
out
ds
shll
push
popw
push
cmp
sbbl
aaa
push
add
outsb
cmpsb
test
push
incb
push
adc
or
xlat
jp
push
fadd
data16
xchg
add
pop
adc
and
lahf
call
add
cmp
mov
test
repnz
sub
mov
lahf
lcall
push
inc
push
xchg
test
lock
mov
jo
iret
in
sbb
inc
lsl
lea
fcompl
stc
pop
adc
enter
es
cld
mov
iret
outsl
cmpsl
sbb
cmp
outsl
cmpsl
push
and
arpl
decl
stc
fisubl
xchg
test
mov
outsl
jl
mov
pop
or
or
cmpsl
fstps
fisttpll
shrb
ret
stos
ja
out
push
imul
inc
outsl
arpl
popa
cmpl
sub
bound
shrb
push
es
outsl
or
fs
and
outsl
je
mov
popa
stos
and
push
or
cs
adc
dec
test
sub
sub
push
subb
js
mov
inc
dec
inc
push
sti
int3
dec
push
and
push
push
xchg
push
add
outsl
fs
gs
ret
out
jo
jns
iret
inc
mov
push
loopne
jmp
in
or
push
shrb
add
or
lds
cmp
and
jecxz
je
bound
aaa
cmp
loope
insb
fbstp
xchg
outsb
pop
inc
popa
imul
inc
xchg
aaa
loop
outsb
xor
pop
fcomp
jnp
std
push
sahf
dec
sub
pop
ret
mov
jnp
dec
adc
xchg
dec
inc
xadd
cld
das
sbb
inc
cmovo
jnp
jae
adc
cmpb
aas
nop
jo
xchg
js
insl
maxps
loopne
ja
and
jg
add
frstor
pop
mov
test
push
test
enter
lcall
nop
inc
sbb
cltd
mov
push
and
ds
sahf
inc
push
test
daa
dec
push
daa
pop
mov
neg
fs
jo
mov
inc
add
outsl
pop
iret
test
in
pop
pop
mov
test
adc
pop
ja
add
add
inc
daa
fnstcw
lods
test
addr16
lods
ss
xchg
mov
xchg
xchg
push
nop
push
rclb
or
push
test
dec
int3
scas
fbstp
cmp
sub
lods
out
pop
push
mov
mov
and
in
mov
aad
and
dec
in
les
xchg
outsl
add
bound
scas
jo
js
scas
in
add
push
negl
sbbl
clc
lahf
or
adc
inc
xchg
inc
inc
add
inc
cmp
xchg
push
insl
sbbl
sahf
outsl
xchg
push
in
lods
push
mov
or
fisttpl
lahf
shrb
out
cmp
popa
out
addr16
ficomps
xchg
sbbb
push
aam
sub
outsl
fiaddl
xchg
fnstsw
add
adc
daa
adc
and
insb
inc
daa
outsb
xchg
mull
cmpsb
iret
jl
xchg
pusha
push
jo
pop
lods
fistpl
add
test
mov
in
xchg
lods
aas
fsub
and
xchg
loopne
lock
scas
and
or
mov
loopne
insb
je
loopne
outsl
insl
shl
dec
xor
movsb
insl
lock
daa
divl
pop
insb
sub
mov
fdivr
in
fisttpll
div
addr16
add
test
movsb
pop
inc
pusha
mov
mov
push
push
pop
daa
pop
and
mov
addr16
jl
push
enter
mov
addr16
mov
imul
in
xchg
mov
adc
les
pop
adc
fisubrs
xor
les
test
pop
daa
adc
fs
add
push
mov
sub
pop
mov
scas
add
iret
test
in
add
out
cld
testl
pop
fimull
mov
jl
mov
iret
mov
pusha
aas
ja
sarb
and
cmpl
fsubr
hlt
insb
pop
enter
mov
insl
imul
sub
cmp
lahf
dec
jns
imul
in
sahf
or
in
nop
or
nop
or
int3
fdivrl
inc
cs
testb
sub
lahf
test
iret
mov
ja
rcrb
repnz
andb
scas
jbe
cmpsl
pop
cld
enter
mov
aam
movsl
pop
jb
dec
cld
mov
mov
add
adc
sub
aam
push
jae
cmpsl
push
cmpsl
jg
pop
repnz
cmpsl
push
pop
push
stc
js
push
pop
mov
lods
mov
rcrb
js
ds
jb
movsb
add
adc
and
shlb
jg
fcoml
out
fs
test
lcall
test
lahf
out
mov
cmpb
les
jns
or
out
push
enter
lods
cmpsl
cmp
sahf
or
pop
push
push
enter
stos
push
jg
nop
movsb
daa
addr16
dec
mov
dec
add
movsb
mov
and
or
pop
enter
lahf
or
inc
sahf
push
fs
ja
adc
xchg
sbb
sahf
movsb
mov
lahf
or
in
inc
in
xor
lahf
hlt
add
inc
mov
push
movsl
stos
outsl
inc
push
pop
mov
imul
dec
dec
lahf
or
jns
in
cmpsl
mov
fcompl
pop
mov
pop
enter
mov
mov
inc
push
push
mov
mov
cmpsl
jg
xor
hlt
mov
mov
fdivs
cmpsl
test
fstl
clc
mov
dec
add
xchg
mov
sub
out
sub
jg
pop
enter
jl
mov
stos
aas
cmpsl
jl
pop
dec
repz
shl
hlt
mov
aas
push
cmpsl
rcr
test
and
xor
dec
mov
aas
dec
cmpsl
jg
lods
cmp
daa
mov
insl
leave
cwtl
mov
out
sahf
or
mov
dec
enter
loopne
movsb
sub
cmp
icebp
push
cmp
ja
out
sub
adc
inc
lahf
dec
loopne
fadds
mov
int3
loopne
pop
pop
jb
jo
inc
mov
adc
push
lods
sub
nop
lock
test
aam
push
enter
jg
test
inc
mov
mov
mov
inc
lcall
sub
push
push
pushl
or
daa
aad
aad
addr16
inc
lock
enter
inc
shll
call
repnz
enter
cld
inc
xor
pusha
inc
inc
ds
jb
mov
and
pop
push
jo
rolb
push
imul
mov
movsb
cmpsl
lahf
mov
or
lock
or
inc
xor
test
and
lcall
or
test
add
inc
lock
fdivs
push
xchg
test
mov
mov
pusha
insl
adc
rcl
in
clc
lahf
addb
enter
cmp
dec
push
pop
push
lods
inc
rep
sub
fsub
push
fimull
repz
inc
ja
add
mov
pop
dec
fsubr
pop
stos
outsl
fadds
cmpsl
fiaddl
xor
stos
inc
inc
lahf
lods
lods
add
cs
lahf
push
adcb
push
and
nop
out
shl
lock
fdivs
and
push
inc
stos
lahf
add
inc
sahf
or
jo
nop
adc
in
ja
mov
rcl
pop
pop
int
dec
lahf
ja
and
inc
pushl
lods
push
xor
xor
lods
ja
fs
daa
addr16
mov
bound
sti
outsl
aas
test
mov
fdivs
push
cwtl
lods
loopne
or
in
lock
lods
xor
mov
lods
incl
notl
push
inc
push
les
enter
push
outsl
xchg
call
test
imul
jg
adc
decl
xchg
xchg
lods
addr16
iret
hlt
test
lods
outsl
and
or
cltd
scas
push
inc
and
subb
adc
sub
jmp
test
mov
aas
daa
movsb
cmp
fisubl
sub
mov
int3
or
xchg
fadds
pop
mov
add
scas
mov
push
orl
loopne
scas
fbstp
ljmp
mov
call
dec
mov
dec
in
jmp
das
lods
pop
int3
ja
fsubrl
lcall
pop
mov
stos
lods
jge
adc
sbb
xlat
dec
push
push
data16
xor
push
fsub
cmpb
addr16
mov
addr16
pop
in
add
shr
fnstcw
call
xchg
sub
dec
inc
inc
sub
xchg
sub
mov
sub
repz
jns
jae
ss
push
jl
pusha
sbb
lcall
shlb
imul
add
mov
repz
mov
mov
push
inc
ja
ja
sub
ds
jns
jns
cwtl
inc
sub
mov
push
pushf
repz
out
movsb
mov
insb
push
inc
cmp
enter
out
scas
mov
push
es
mov
adc
xchg
insb
movsl
addr16
call
loopne
repz
inc
ss
in
pop
dec
add
add
mov
mov
jg
push
fs
call
push
sub
clc
les
add
inc
sub
jg
and
adc
jg
popa
pop
leave
add
mov
ret
add
scas
fs
push
pushf
inc
push
add
xchg
mov
or
fs
xchg
mov
add
in
xchg
inc
insb
inc
leave
xor
das
pusha
mov
jl
push
xor
fistpll
cwtl
jo
and
pop
js
inc
lods
pushf
cmp
sub
pop
mov
mov
or
jb
mov
add
inc
test
outsl
out
xchg
pop
add
nop
fdivl
fbstp
popf
adc
mov
incl
mov
aam
add
push
lds
outsl
and
mov
add
xor
popf
fbstp
and
mov
jl
fmuls
outsl
add
sub
inc
scas
sbb
outsl
sub
int
sbb
aaa
test
push
add
add
mov
xchg
and
xor
enter
out
dec
mov
mov
push
xor
js
sub
addb
adc
mov
push
xor
ja
repnz
dec
scas
mov
sbb
xchg
cmp
fmuls
and
add
and
lock
mov
mov
dec
or
enter
add
xchg
pop
leave
mov
add
sahf
cmpsl
ret
daa
cmp
sbb
movsb
inc
pslld
sbb
add
shrl
mov
outsl
mov
xchg
fdivr
les
int3
daa
add
and
dec
call
out
add
mov
es
pop
aaa
push
mov
outsl
outsl
xchg
push
enter
jg
push
nop
push
call
adc
xchg
push
xor
adcl
mov
ss
xor
mov
mov
push
ja
enter
lahf
and
outsl
push
push
outsl
cmpsb
aam
jecxz
xchg
mov
test
hlt
or
scas
push
aam
push
rorl
lahf
mov
mov
jmp
or
mov
test
cmp
or
mov
or
dec
sbb
test
add
xlat
or
lcall
sub
dec
lock
ret
sub
mov
lds
or
pop
sbb
mov
testl
and
add
cmp
add
clc
faddp
cmpl
or
sbb
mov
adc
cmpsb
aaa
adc
pop
jb
ja
cmpsl
dec
xchg
mov
outsl
add
cmp
icebp
dec
mov
mov
scas
mov
mov
jg
xchg
jg
scas
in
fcmovb
ja
add
xlat
xchg
pusha
addr16
add
pop
jb
test
add
and
in
jge
push
call
push
rol
das
outsl
push
push
jb
aaa
sub
inc
aad
mov
lea
shll
cwtl
push
jl
or
cwtl
aaa
add
sahf
aaa
adc
pusha
pop
leave
lds
lods
pusha
cld
out
xlat
add
iret
cltd
mov
out
mov
daa
or
mov
adc
mov
negl
adc
push
lcall
push
xor
cld
ret
test
popf
out
mov
sbb
test
sub
or
scas
lahf
and
ret
xor
addr16
movb
ret
fcoms
ret
outsl
in
lods
add
or
jb
sub
ffreep
aam
xchg
xchg
cmp
xchg
cltd
and
adc
popl
xchg
mov
push
les
push
test
pop
add
sbb
scas
add
pushf
outsl
out
pusha
and
subb
inc
push
cs
dec
mov
or
sbb
out
daa
nop
sub
adc
scas
or
loopne
aaa
movsb
push
lods
daa
aas
addr16
arpl
arpl
fists
icebp
sub
addr16
sbb
adc
and
push
dec
bound
push
xchg
outsl
and
xchg
jo
cs
jp
call
push
mov
or
test
nop
lock
jb
dec
enter
lock
ds
lods
inc
push
fiaddl
mov
and
dec
cmpsl
outsb
jnp
push
lods
push
hlt
das
inc
jl
mov
mov
in
mov
mov
xchg
rcl
push
nop
and
repz
push
std
dec
sbbb
jl
rcr
pop
inc
jnp
sahf
out
cmp
repnz
lahf
out
xchg
ret
out
pop
sub
cmp
repz
ja
ljmp
sub
popf
ret
iret
repz
out
popa
jbe
lret
cmp
and
push
jo
xlat
fidivrs
out
arpl
js
push
push
std
ds
sarl
inc
pop
out
inc
data16
out
pusha
addl
and
imul
into
add
out
sahf
out
push
repz
and
imul
dec
arpl
call
sbb
movsl
rcrb
xor
ja
sbb
adc
iret
repz
adc
jl
out
mov
add
cmpsl
stc
cmp
push
rolb
daa
dec
repz
dec
xchg
fisubs
jno
lods
sahf
cmpsl
stc
cmp
sbb
pop
fcompl
jae
leave
adc
int
jns
out
jne
mov
hlt
pop
jbe
jbe
repz
out
adc
fdivp
jns
out
js
xchg
loopne
jns
jl
inc
jp
mov
jnp
cmpsl
stc
cmp
xchg
mov
sub
push
iret
cmp
lahf
outsl
stos
jl
jge
push
iret
stc
mov
jle
push
xchg
adc
xor
cmpsl
cmp
mov
imul
xor
iret
sarl
adcl
daa
test
adc
out
int
xchg
xchg
and
imul
jns
iret
repz
mov
repz
out
clc
sbb
lcall
cmc
cmpsl
stc
cmp
and
inc
iret
sarl
les
fs
dec
repz
xchg
popf
das
int
jns
xchg
pop
scas
loope
xchg
mov
and
lcall
adc
jns
shrb
sahf
out
into
add
xor
out
clc
dec
cltd
mov
sarl
inc
lcall
imul
popf
shll
scas
shll
ja
jl
out
add
cltd
xlat
xor
sarl
sti
addr16
cmp
out
push
movsb
jbe
aam
jge
out
movsl
push
test
cmpsb
ds
mov
iret
sarl
dec
cmpsb
loop
test
fsubp
imul
push
iret
sarl
mull
stos
dec
mov
int
jns
stos
mov
sahf
cmpsl
stc
cmp
sub
ds
sarl
jl
repz
repz
out
cmpsb
push
and
imulb
lahf
out
mov
dec
mov
mov
out
fidivrs
push
int3
mov
pop
mov
push
int
ss
int
insb
aas
enter
lret
int3
out
hlt
imul
rcl
andl
mov
dec
int3
nopl
sub
xor
aas
pushaw
sub
aam
aas
xchg
enter
sysexit
inc
mov
movsb
scas
repnz
inc
and
cmp
addr16
mov
pop
inc
pop
dec
mov
stos
aaa
pushf
mov
cltd
nop
int
ds
rorb
adc
mov
mov
fs
rcrb
fdivr
jle
add
mov
ss
jg
arpl
jbe
xchg
jg
test
or
mov
fwait
inc
pop
inc
dec
bound
add
inc
repnz
sarl
aam
push
pushf
jb,pn
ficoml
scas
out
call
jecxz
mov
outsl
dec
dec
je
pop
in
das
fs
test
cmc
rorl
adc
pop
inc
push
aas
in
inc
repnz
data16
jg
daa
mov
sub
in
ljmp
mov
inc
inc
sarb
mov
daa
nopl
stos
packuswb
mov
sahf
pop
push
daa
in
or
push
jbe
iret
xor
dec
cmp
popl
dec
pop
adc
lock
mov
jb
jl
lahf
adc
sahf
popa
dec
aas
in
cmpsl
xchg
dec
pushf
shrb
mov
sahf
out
ja
inc
lock
pop
sbb
mov
bound
pop
idivl
aas
loopne
leave
sti
adc
shrl
in
mov
out
push
pop
loopne
imul
aaa
add
shll
mov
les
xor
or
repnz
inc
enter
xchg
out
loope
push
dec
mov
inc
scas
cld
mov
xchg
and
mov
cmp
push
mov
push
daa
dec
scas
negb
ja
xchg
push
dec
or
fbstp
iret
ja
inc
jmp
xchg
pop
aaa
fistpll
leave
in
leave
pop
gs
fbstp
jns
leave
inc
xchg
sahf
sub
sbb
insl
and
push
daa
xchg
pop
jb
push
out
mov
pop
pop
adc
int
enter
pop
xchg
mov
call
inc
repnz
imul
mov
in
xchg
je
je
mov
lahf
push
mov
mov
enter
pop
add
aaa
push
lock
and
xlat
out
inc
push
mov
addr16
xchg
subl
scas
inc
or
and
sub
cmpb
mov
aas
xchg
pop
and
mov
pop
movsl
pop
mov
cmp
ljmp
or
push
loop
push
mov
loopne
test
inc
or
daa
dec
pop
test
add
xchg
pushf
cmp
pushf
mov
and
insb
scas
mov
inc
hlt
test
in
fsts
cmc
jne
fsts
xor
fstps
add
xchg
pusha
xchg
inc
push
xchg
and
mov
in
ficomps
fidivrl
popa
xlat
or
pop
pop
repz
loopne
lahf
push
add
and
insb
cmpsl
push
inc
pop
mov
pop
pusha
imul
addr16
push
mov
mov
adc
in
popa
lcall
adc
xchg
ljmp
popf
lcall
nopl
fisttpll
inc
imul
push
bound
add
jg
fdivl
ss
mov
mov
insb
fisttpll
iret
xchg
mov
cli
add
dec
mov
or
arpl
arpl
pop
mov
cmpsl
add
daa
daa
and
pop
cmp
leave
and
mov
lods
nop
cmpsl
cwtl
pop
mov
test
pop
mov
fisttpll
xchg
addr16
out
jns
dec
dec
stc
add
femms
add
sbb
and
jns
out
cmp
inc
or
and
imul
int
cwtl
fstl
fmull
test
stc
jo
mov
or
daa
fiadds
mov
jg
push
repnz
fisubs
cmp
fistps
sbb
or
inc
mov
je
jb
jecxz
jbe
andl
gs
cmpsb
gs
in
xchg
gs
gs
jl
cmp
decl
mov
lea
cmp
out
data16
je
push
mov
and
and
xchg
in
adc
and
xor
pop
mov
jnp
loopne
out
in
sbbb
add
into
repz
add
xchg
lods
mov
jmp
out
loope
outsl
testb
pop
leave
xor
addb
dec
loope
clc
ss
or
pop
loope
addr16
inc
imul
push
imul
jae
xchg
dec
fisubrl
daa
and
mov
dec
push
loop
jmp
lock
inc
sbb
pop
xchg
mov
xchg
dec
ja
iret
fmul
cmp
jl
jecxz
pushf
out
adc
daa
xor
insl
mov
push
pop
push
and
or
xchg
test
add
jecxz
shll
xchg
pop
xor
sub
hlt
xlat
sbb
leave
add
es
cld
add
inc
ja
out
pop
push
mov
cmp
fcmovne
leave
in
dec
imul
add
mov
push
pushl
inc
in
pop
sbb
and
test
outsb
daa
mov
xlat
dec
ds
pushf
loop
pop
cmp
daa
cmp
in
in
pop
and
mov
aaa
add
in
leavew
mov
ja
xlat
xor
sub
inc
out
dec
leave
xor
iret
leave
mov
adc
daa
xchg
dec
in
hlt
pushf
cmpsb
aaa
pop
cltd
bt
sub
mov
push
add
ja
das
lcall
fidivl
cmp
jno
addr16
jp
sub
add
mov
es
mov
xchg
setl
mov
adc
jl
pop
xor
call
jo
xlat
adc
scas
add
cs
jmp
out
insb
push
sub
out
mov
push
pop
push
push
add
cmp
repz
add
jbe
repnz
add
xlat
dec
cs
out
pop
enter
mov
addr16
xchg
in
mov
xor
test
outsb
cmp
and
in
adc
pusha
ljmp
pop
movd
mov
in
in
jns
cld
hlt
addr16
pushf
lods
aaa
xor
fisubrl
addr16
push
fs
dec
cs
inc
add
insb
lods
cwtl
lods
bound
iret
outsb
jmp
mov
clc
rorb
sbb
and
fcoms
sbb
cs
scas
jb
pop
jb
mov
jns
sbbl
and
or
inc
push
xor
fnstsw
addr16
cmpb
add
push
jno
femms
cmp
jne
push
nopl
rcr
pushf
in
inc
jno
out
mov
add
popf
pushf
inc
pop
ja
pop
daa
dec
cmpsb
pop
cmpsb
mov
aaa
xor
iret
pop
mov
dec
aad
divb
out
sub
sbbb
out
int3
out
in
out
and
mulb
jno
scas
xor
cmp
xlat
inc
out
dec
jb
inc
mov
push
push
mov
mov
jp
daa
mov
mov
push
add
iret
add
jb
xor
push
dec
jb
scas
sbb
sbb
divl
inc
xchg
pop
bnd
mov
inc
rolb
mov
add
pop
es
out
ret
push
push
insb
lock
pop
jmp
sub
xor
and
das
dec
jae
jae
lahf
in
repz
pop
push
mov
lcall
dec
mov
and
icebp
icebp
aas
out
xchg
in
scas
pop
je
mov
mov
inc
ds
xchg
je
leave
xor
push
out
nop
out
outsb
and
mov
add
pop
je
enter
mov
xchg
push
repnz
mov
mov
insl
fimull
iret
je
jne
cmp
ss
pop
dec
jns
xchg
out
add
das
gs
add
outsl
ja
or
cmpsb
jne
pushf
jne
repz
insl
and
addr16
cmpsb
popf
loopne
pcmpeqd
fadds
inc
scas
push
and
push
pop
lods
cmp
leave
int3
xchg
add
dec
mov
jmp
inc
xor
cli
jbe
ja,pn
add
fnstsw
push
pop
inc
push
mov
mov
ja
xorb
cs
pcmpeqd
jns
ja
cmc
sbb
mov
add
or
adc
dec
adc
push
out
sbb
push
je
mov
je
jle
ja
mov
cs
and
rorb
cmpsl
push
push
hlt
out
add
es
loopne,pn
dec
sahf
add
jns,pt
inc
jns
xchg
int
pop
pop
dec
imulb
sahf
out
fdivrl
pop
jg
mov
aam
xchg
pop
pop
stos
jns
daa
iret
push
mov
das
int3
or
in
add
xlat
out
das
in
push
or
sarl
clc
add
push
jp
dec
sahf
sbb
and
adc
stc
mov
jp
test
push
cmc
and
push
pop
jp
xlat
outsb
adc
mull
xorl
sahf
pop
ja
jg
ja
pop
incb
mov
das
push
push
jnp
jnp
push
repnz
arpl
or
neg
insl
in
inc
jnp
xchg
mov
mov
out
ss
pushf
cmp
push
lods
xchg
xchg
or
sarb
fs
xchg
xchg
jnp
jnp
jnp
jo
testb
jl
push
jl
and
add
outsl
fwait
std
repz
stc
testl
pop
call
cmp
cmpsb
mulb
inc
dec
ret
stos
scas
hlt
add
orb
add
and
ret
mov
xchg
jl
lcall
jl
cli
lds
int
aad
push
add
xor
popf
out
xlat
testl
imul
andb
xchg
xchg
pop
xor
inc
adc
out
mov
add
repnz
cmpsl
cs
int
in
add
sbb
mov
ljmp
xlat
addr16
and
pop
adc
xchg
inc
test
push
jle
adc
mov
mov
push
xchg
movzwl
inc
cld
in
jecxz
cmpsb
scas
mov
jns
rorb
add
xchg
call
mov
jg
mov
sub
pop
xchg
jg
bound
mov
das
test
jg
xchg
and
jg
jg
xchg
xchg
mov
and
out
inc
xor
mov
ja
ja
fwait
popf
loope
sbbb
ja
push
add
xchg
lods
incb
xchg
or
xchg
lcall
insl
mov
ja
fildl
mov
out
push
mov
jl
stc
iret
add
dec
movups
leave
test
xor
cmpsl
cwtl
cmp
dec
cmp
jmp
xchg
xchg
pop
push
add
jae
insb
je
jl
lea
cmp
mov
push
or
leave
repz
mov
mov
repz
adc
unpckhps
fcoml
in
cmpl
mov
lea
sbbb
adcb
sbb
mov
aam
nop
push
out
ljmp
sahf
pushf
sbb
cld
pop
andl
ss
adc
pop
mov
loop
cmp
jnp
and
pushf
jo
lds
incl
inc
fwait
mov
pop
test
xor
or
push
in
sbbb
add
scas
jne
jg
xchg
movsb
ja
fnstsw
mov
or
push
bswap
rclb
dec
or
loop
out
cmp
cmp
or
punpckhdq
mov
cli
push
lar
movsl
inc
push
cmp
mov
xor
jl
xorl
pop
push
cmp
mov
or
jns
xchg
testl
adc
sahf
push
out
dec
adc
rcrl
lss
and
xor
sbb
daa
cmp
popa
mov
add
iret
mov
imul
and
inc
dec
sahf
push
jo
add
dec
dec
cs
mov
loop
mov
clc
push
leave
xor
testl
call
xor
in
into
fwait
in
xchg
push
push
mov
pop
dec
jae
push
out
mov
push
sarl
and
fnstsw
int
out
nop
push
add
lods
sahf
xlat
pop
ja
iret
mov
or
enter
or
or
testb
imul
pop
sub
das
aaa
xchg
push
xchg
and
das
xchg
push
push
iret
repz
xchg
pop
mov
into
repz
or
call
and
cmpsl
or
xchg
mov
inc
or
fildl
das
mov
daa
mov
filds
frstor
xor
inc
in
pop
enter
sahf
leave
enter
insb
push
movsb
jmp
cmp
jne
jg
xchg
xchg
pop
lods
pop
jb
lahf
xchg
jp
dec
repnz
out
pop
fsubr
cmpl
leave
leave
ror
ret
mov
xchg
iret
mov
mov
out
addr16
pushf
pushf
pop
add
xor
jb
mov
out
lods
jae
pop
incl
sbb
scas
mov
dec
fisubl
in
popa
pushf
mov
push
inc
pop
xor
imul
ficompl
ss
in
and
jne
divb
out
jns
orl
xchg
outsb
verw
pop
pushf
cmp
in
mov
and
inc
sbbb
pop
sarb
push
mov
mov
pushf
and
dec
ja
daa
int3
pop
sub
sbb
movsb
decb
daa
or
les
adc
jecxz
insl
push
ss
aas
ja
je
xchg
insb
scas
mov
jg
jns
xchg
mov
pop
mov
add
mov
mov
iret
or
fcompl
sub
outsl
lcall
pop
add
add
sbb
aas
sub
jg
cmpsl
jne
in
jbe
addr16
cmpsl
pop
ja
lods
in
in
ja
mov
mov
cmp
out
pop
mov
jb
cmp
in
mov
adc
sbb
fisttpl
cmp
imul
icebp
in
mov
lea
sub
push
add
ds
aam
mov
dec
pushf
dec
cmp
jb
push
pusha
xchg
repz
jnp
leave
xchg
fwait
mov
cmp
xchg
add
push
fnsave
cmp
sub
push
mov
mov
iret
subps
popf
mov
xchg
popf
das
lods
rorb
cmpsl
push
push
xchg
iret
in
xor
sti
add
paddusb
daa
push
nop
es
pop
cmp
cmp
repz
push
movntq
xchg
cmpsl
cs
pop
or
cmp
push
or
xchg
das
femms
lahf
add
jg
fsubl
xor
mov
add
mov
setno
or
pop
jecxz
ja
sbb
das
movaps
aas
or
inc
pop
jl
sahf
out
fs
add
inc
repnz
push
pusha
jns
roll
fistpl
xchg
aas
negl
es
xchg
adc
or
sbb
or
mov
das
dec
xchg
mov
lcall
icebp
mov
scas
leave
jae
cs
outsl
mov
insl
pop
push
jg
push
mov
inc
rorb
xchg
push
nopl
in
push
add
leave
repz
pop
push
pop
gs
push
xchg
mov
push
scas
xchg
call
mov
jmp
es
cltd
mov
or
sti
loopne
dec
sbb
insb
pop
cmp
fists
push
and
ja
in
mov
push
iret
xchg
push
inc
stos
mov
daa
iret
mov
ret
rorb
nop
dec
xchg
add
in
dec
dec
std
add
adc
inc
fwait
call
ja
daa
ficoml
push
xchg
iret
pop
daa
cmp
pop
arpl
imul
jnp
sahf
xchg
out
orl
xchg
xchg
xlat
mov
jb
jb
into
xchg
cmp
push
stc
add
xlat
or
jbe
jb
xchg
xor
cmove
incl
fldt
ja
xchg
add
add
dec
dec
outsb
ret
fcompl
cmc
std
xchg
mov
add
dec
or
mov
sub
dec
ja
addr16
mov
mov
jno
xchg
decl
pop
xchg
and
popf
movb
cmp
dec
es
mov
out
and
test
jbe
addr16
push
fildll
or
out
xor
setb
lea
in
lcall
fildl
bswap
jmp
rolb
push
xchg
push
add
sahf
mul
es
dec
call
fidivrl
or
xor
and
sub
rcrb
js
xchg
out
addb
mov
mov
mov
jae
shll
dec
cmp
lcall
sbb
repnz
aas
pop
nop
sbb
enter
jno
lahf
jl
xchg
into
add
add
jo
mov
xchg
xor
jmp
jbe
test
push
pop
fwait
ja
bsf
out
sub
repz
fmull
inc
dec
push
pop
cmp
leave
leave
outsl
jp
test
or
stos
repz
pushf
pushf
mov
iret
adc
jns
leave
mov
repnz
into
ds
pushf
adc
pop
dec
push
pushf
aaa
xchg
jl
sbb
mov
popa
ja
jl
fcoml
inc
popf
pushf
pop
addr16
leave
inc
repnz
pop
mov
psraw
jmp
popf
addr16
out
xor
inc
shlb
xor
mov
emms
aas
popf
das
jae
mov
push
decl
lar
pop
iret
repz
push
or
addr16
mov
movq
or
daa
mov
dec
mov
xchg
jl
sbb
popf
roll
jg
popf
or
xor
sahf
scas
jge
nop
repnz
testb
sbb
xor
loopnew
mov
pop
pcmpgtw
lahf
xchg
add
mov
xlat
xchg
push
fistps
andl
or
leave
leave
sahf
push
pop
in
loope
pop
pop
das
hlt
cld
lahf
push
les
pop
adc
and
cmp
lahf
mov
inc
jg
lret
enter
lahf
dec
pop
push
xlat
dec
dec
outsb
maxps
mov
mov
lcall
das
push
lcall
dec
in
sbb
lds
inc
aad
outsb
jmp
leave
fucom
xchg
in
pop
das
stos
test
cmc
lahf
std
lahf
ret
rcrb
jl
mov
xchg
push
inc
mov
in
xchg
or
pop
jg
pop
in
and
dec
call
and
cmpsl
mov
pop
sub
mov
cmp
rcll
adc
aas
ljmp
mov
and
repz
sub
jns
leave
repz
dec
pop
push
or
sahf
out
outsl
or
out
sahf
xchg
test
lods
adc
cmpsb
pmaxub
cmp
adc
adc
adc
cmp
repz
call
lcall
sbb
repnz
sbb
pop
sbb
setae
push
adc
adc
adc
xchg
xchg
xchg
xchg
adc
push
or
sahf
sub
and
mov
fiadds
insl
push
add
jne
sbb
cwtl
mov
iret
mov
jl
dec
push
daa
leave
inc
jb
mov
cwtl
xchg
out
ds
mov
xor
popf
mov
add
jp
iret
inc
scas
outsl
adc
mov
enter
adc
and
jmp
add
mov
dec
pop
and
mov
fisttps
mov
cmp
push
add
xor
into
pop
mov
cmp
movl
pop
mov
add
icebp
psubw
add
adc
cmp
and
add
add
pushf
cmp
or
xor
sahf
imul
pop
dec
movsb
pusha
call
xor
sub
and
ss
iret
cltd
movsb
jmp
into
leave
inc
mov
mov
ja
insb
out
adc
daa
idiv
pop
pop
movsl
inc
pop
mov
incl
in
in
and
push
add
xchg
pushf
pop
and
add
xor
ja
cmp
pop
test
rep
fnstsw
mov
push
add
rolb
fcomp
pop
loopne
jae
cmp
or
or
clc
mov
shll
adc
or
adc
mov
leave
js
xor
xchg
out
inc
add
jb
add
inc
sub
outsb
xchg
ja
ja
push
add
rolb
adc
movsl
cmpsb
sub
outsb
mov
testb
push
shrl
mov
pop
xchg
cmp
psubsb
bnd
clc
verr
add
outsb
fists
prefetcht0
lods
sbb
pop
out
and
sbb
cmpsl
jbe
and
inc
dec
repnz
dec
cmpsl
mov
mov
cmpsl
outsb
cmpsl
outsl
push
xchg
jbe
leave
lods
jle
xchg
psllw
sub
in
in
int3
xlat
ja
aam
mov
aaa
fisubrs
and
lahf
mov
pop
js
push
add
cmp
in
xchg
iret
fildl
push
out
cmp
ljmp
sbb
call
test
in
data16
sub
insl
mov
xchg
fs
lsl
cltd
test
pop
jg
incb
in
pop
aaa
mov
inc
and
jecxz
mov
or
xor
add
inc
mov
int3
les
in
fdivl
out
test
push
dec
inc
push
adc
pushf
pop
mov
cmp
es
sub
subl
das
into
popf
fistl
jg
lahf
push
call
push
xchg
push
push
inc
mov
pop
pop
clts
rorl
dec
data16
adc
and
in
dec
sub
xor
repnz
lock
push
stos
xlat
adc
arpl
inc
jae
jnp
push
or
inc
in
mov
push
leave
iret
dec
rcr
leave
rcr
pop
jecxz
mov
pushf
dec
push
lods
push
pop
fnsave
bnd
push
scas
sbb
daa
pop
syscall
je
out
push
xor
cmp
ja
dec
push
push
or
loopne
rorl
or
je
aaa
cmovle
mov
shlb
dec
cs
dec
lret
fimull
fmull
xchg
cwtl
cs
cmp
dec
sbb
jae
fimuls
and
add
add
jb
xor
pop
sahf
adc
mov
inc
mov
jne
push
push
loopne
test
ja
dec
jb
enter
lods
pop
lods
shrb
popa
add
inc
negl
lea
xchg
lahf
orb
ret
sub
pop
push
xor
test
pop
scas
pop
fsubrl
xchg
imul
int
lcall
daa
xchg
cld
shll
jns
fisttpl
add
outsl
jmp
xchg
lds
xor
scas
outsl
in
or
push
scas
push
scas
es
add
mov
ss
add
iret
push
inc
pop
add
jae
jb
add
or
push
push
pop
repnz
dec
adc
mov
call
js
or
push
sbb
leave
insl
mov
ja
roll
frstpm(287
pop
push
cmpsl
mov
cmc
clts
std
add
xor
or
leave
addr16
mov
js
inc
fcompl
dec
negl
pop
in
jmp
mov
ljmp
pop
enter
jg
dec
push
fisttpl
orb
push
adc
cmp
pause
adc
xchg
outsb
movups
fsub
in
in
call
mov
nopl
or
in
dec
adc
sbb
and
sub
and
fucom
jns
cmp
push
es
movaps
out
dec
push
sub
pusha
out
sahf
out
push
out
sahf
js
subb
pop
imul
dec
sbb
add
add
mov
pop
fisubl
inc
sub
das
fwait
xchg
cmp
xor
add
xchg
push
and
mov
mov
pop
add
jmp
jb
shlb
adc
cwtl
sbb
mov
xchg
daa
pop
pop
movq
dec
fimull
xchg
cmpsl
xor
test
scas
jae
fdivl
pop
cmpxchg8b
sahf
cmpsl
fstpt
pop
rorb
in
jbe
jns
out
out
dec
testb
jnp
loopne
mov
or
push
push
cs
iret
repz
adc
adc
cmp
repz
pop
adc
repz
push
pop
cmp
repz
sbb
iret
repz
repz
mov
pop
cmp
repz
and
and
imul
and
mov
out
sahf
out
and
out
sahf
daa
xor
sub
sahf
out
sub
pop
addr16
jbe
fnstsw
outsl
pop
ja
jg
xchg
xchg
fistps
and
and
cmp
repz
rcrb
iret
repz
call
cmp
sbb
pop
cltd
jns
out
adc
push
cmp
sahf
out
sub
out
mov
inc
mov
and
lock
dec
je
push
lea
pop
xchg
mov
mov
mov
cmp
repnz
mov
pop
ret
repz
iret
or
or
or
xor
mov
push
push
cmp
repz
nopl
sub
cmp
repz
adc
iret
repz
inc
adc
adc
repz
pop
jno
jnp
cmp
repz
repz
lahf
sbb
sbb
repz
pop
int
xlat
in
jbe
popf
loope
jmp
in
loopne
add
scas
movzwl
pop
mov
jns
in
mov
pop
xor
sahf
cmp
push
adc
loope
iret
pop
adc
or
cmp
adc
jo
js
out
sahf
xchg
dec
push
or
aaa
jo
or
sahf
out
stos
or
cmp
push
ss
cmp
es
jmp
pushf
jecxz
mov
add
les
mov
fnstcw
cs
cmp
push
popl
add
iret
repz
pop
or
setb
enter
addb
dec
repz
in
ret
push
add
add
jbe
leave
shr
aas
hlt
pop
cld
paddsw
fs
mov
iret
leave
leave
leave
and
xor
pand
repz
adc
daa
mov
gs
das
jne
test
daa
daa
daa
lea
cmp
lods
sbb
sbb
daa
into
pop
scas
mov
jl
cmp
mov
xchg
mov
sahf
xchg
out
and
sub
pop
sahf
ja
jns
inc
cmovle
or
jnp
dec
push
pcmpgtd
out
dec
sahf
push
outsb
jbe
jle
adc
mov
xchg
adc
mov
jae
repnz
jmp
fcmovne
hlt
decl
or
lahf
pop
mov
aaa
and
or
pop
lea
out
inc
mov
cmp
fs
movq
test
in
sahf
out
adc
sahf
out
push
mov
out
rcr
sbb
repz
repz
sbb
or
xchg
mov
daa
mov
out
inc
dec
orps
daa
daa
daa
insb
ja
lea
daa
daa
cwtl
mov
adcb
mov
xchg
xchg
mov
inc
fwait
mov
push
ficoms
sahf
and
mov
jns
adc
xor
cmp
cmp
fs
out
cmp
jl
repnz
test
mov
es
pop
movsb
nopl
lods
sbb
nopl
les
and
add
daa
daa
sbb
sub
sbb
jb
mov
mov
adc
push
mov
sbb
in
jl
xchg
addr16
push
dec
dec
dec
fiadds
push
lahf
stos
mov
or
rcr
ljmp
testl
push
in
in
in
leave
adc
pop
daa
mov
repz
mov
adc
jbe
cmp
adc
movntq
in
aaa
rorb
sbb
mov
jg
sbb
in
xchg
js
and
test
fistpl
sarb
mov
mov
aas
push
sub
jns
out
sub
sub
sahf
out
sahf
sub
jns
leave
jnp
scas
or
xor
mov
sub
lahf
push
xor
out
push
ss
aas
call
mov
sarl
cmp
shl
inc
and
mov
iret
repz
inc
inc
dec
inc
pop
inc
ja
popf
cmp
je
jg
mov
stos
cmpsl
je
adc
addr16
push
push
and
dec
and
fimuls
inc
dec
pop
addr16
jo
inc
testl
pop
rol
mov
cmp
jmp
rol
daa
out
lea
push
pop
push
and
sahf
out
or
pop
pop
repz
repz
iret
repz
test
xchg
adc
test
adc
int3
xlat
loop
sbb
daa
and
clc
lsl
adc
fsubrp
in
push
sbb
push
and
cmp
push
punpcklwd
cmpsb
jp
ret
fbld
addr16
fildll
xchg
xchg
aas
ret
ret
add
in
and
ja
std
ret
jge
xchg
popf
pop
or
pop
push
fistpll
xchg
out
add
or
ja
aas
dec
dec
or
jns
out
or
or
sahf
out
jle
jns
out
adc
out
pop
adc
pop
fstpt
in
sbb
icebp
cs
cmp
in
sbb
lds
push
sbb
popf
sub
mov
jns
and
push
iret
rep
rorl
pop
pop
push
daa
jne
fcmovne
repz
sub
repnz
cmpps
leave
out
das
xor
inc
lds
lds
sahf
out
push
inc
push
add
add
cmp
inc
dec
aas
push
cmp
ja
and
inc
cmpsl
mov
xchg
leave
iret
cmp
in
aam
fisttps
pop
ljmp
add
repz
push
push
or
or
cs
pop
push
xchg
out
iret
inc
adc
dec
adc
out
sahf
gs
adc
out
mov
xchg
sbb
sbb
sahf
out
rcrb
adcl
xorb
and
and
ljmp
lsl
pushf
or
testb
mov
inc
dec
sub
inc
daa
push
out
lahf
je
out
jb
pop
lar
jge
adc
dec
xchg
enter
mov
test
jns
out
or
or
or
or
or
lea
adc
adc
iret
repz
adc
adc
ja
cmp
dec
pop
push
push
gs
mov
jnp
xchg
sbb
sbb
ret
sub
mov
jns
mov
testl
sbb
lret
lret
lret
sahf
aaa
sub
pop
xor
or
jns
leave
cmp
or
push
jbe
cmp
or
aas
cmp
in
jbe
jle
adc
cmp
adc
adc
jns
out
sbb
sahf
sbb
sbb
sbb
cmp
repz
out
push
out
pop
notl
inc
iret
repz
and
fstps
dec
lret
fnsave
push
lret
pop
pop
push
enter
divps
imul
dec
push
jg
mov
push
or
fucom
jns
rorl
int3
repz
repz
adc
adc
iret
leave
in
clc
adc
int3
push
int3
jb
repnz
sbb
adc
push
out
sahf
ja
ds
das
sbb
sbb
sbb
mov
jae
jg
int3
iret
repz
or
dec
and
lahf
and
add
lret
int3
aas
sub
dec
add
xchg
aas
insb
dec
pop
dec
xchg
adc
mov
int
jb
enter
int
int
int
ret
js
arpl
jl
das
mov
xor
stos
fnsave
jb
mov
pop
syscall
out
popf
cmp
pop
loope
dec
aaa
jns
in
or
syscall
in
insl
in
or
add
or
repz
cmovne
push
adc
cmp
iret
adc
adc
iret
push
aam
fistps
ljmp
add
or
out
cmp
and
in
sahf
pop
dec
and
push
and
repz
cmp
test
mov
repz
mov
sub
movsb
fwait
cmp
pop
das
ret
iret
sub
sub
icebp
push
push
push
cmp
dec
mov
xor
sahf
ja
sub
push
ss
dec
iret
repz
outsl
push
sahf
xchg
xchg
leave
rep
daa
popf
push
push
cmp
iret
mov
inc
adc
fisttpll
mov
pop
iret
or
pmaxsw
in
mov
pand
out
push
icebp
cmp
in
in
das
or
unpcklps
pop
fcmovne
repz
sub
jns
dec
addps
adc
outsb
fcmovne
repz
jns
adc
mov
xcrypt-ctr
cmpsl
push
pop
mov
mov
enter
loopne
fcmovne
out
clc
push
add
push
setae
jns
sbb
and
jae
repnz
jle
das
and
jns
out
sub
dec
sahf
sub
rcrl
xchg
out
iret
das
cs
inc
iret
jae
mov
xor
leave
jnp
rcrb
outsb
daa
daa
mov
paddsw
add
call
jl
decl
xchg
shll
inc
inc
dec
fucomip
adc
add
push
aam
mov
aam
dec
outsb
cltd
adc
and
pusha
dec
xchg
pop
ficompl
in
shrl
invlpg
pushf
arpl
aam
push
aam
es
or
jl
mov
in
push
aad
test
inc
xor
push
sahf
pop
mov
iret
or
inc
push
mov
mov
daa
cmp
push
fldenv
rclb
fs
adc
add
dec
xchg
mov
add
nop
add
aas
inc
push
or
xchg
sahf
dec
pop
mov
movsb
adc
testl
pop
inc
outsb
push
add
in
dec
aaa
pop
outsl
fcoms
aaa
movl
insb
xchg
push
xlat
out
sub
or
cmp
pop
or
or
aaa
fldt
or
sbb
daa
adc
daa
daa
mov
and
jbe
push
das
push
xorps
into
in
insb
das
insl
xchg
in
in
push
sbb
push
pop
andb
in
jbe
jb
daa
daa
iret
jae
sub
dec
outsb
fbld
xlat
les
data16
add
xchg
lock
mov
pop
adc
add
adc
sbb
sub
mov
push
test
aaa
mov
pop
bound
xchg
das
clc
dec
push
add
movsb
add
pop
stc
enter
pop
movsl
sbbl
mov
fisubl
add
cltd
cmovo
pushl
mov
sbb
in
call
mov
push
add
push
pop
fisubrl
xor
fcomp
loopne
jb
jle
xorb
negb
js
je
insb
jns
out
push
out
sahf
out
xor
and
out
sahf
sbb
or
add
dec
repz
cld
repz
hlt
lock
iret
repz
pop
iret
repz
push
mov
xchg
mov
repz
xorb
push
nop
clc
or
mov
repnz
repz
sub
sbb
repz
push
cld
repnz
fadd
mov
iret
repz
cwtl
nop
mov
js
push
out
sahf
push
dec
inc
xor
jns
cmp
mov
fmul
xchg
out
movsb
nop
or
jnp
push
or
jl
push
push
inc
icebp
rorl
and
sub
add
jg
lea
pop
add
dec
out
imul
nop
js
mov
add
nop
ret
aam
aas
sbb
mov
mov
pop
or
or
cmpsl
and
xor
test
fwait
add
icebp
call
push
mov
push
inc
jg
jp
rol
mov
pop
push
lock
add
push
adc
xor
es
mov
push
adc
xchg
pop
in
mov
add
in
loope
mov
ss
mov
add
pop
and
adc
inc
insl
iret
xchg
xchg
xor
pop
cs
loopne
pop
inc
mov
jg
insb
pop
in
pop
pop
pop
ds
rorb
push
add
xchg
es
imul
xchg
xchg
sbb
add
dec
or
out
inc
fisttps
jns
fimuls
setle
mov
xor
jns
repz
mov
out
sahf
or
or
adc
inc
jmp
iret
repz
or
lods
xchg
jno
aas
push
filds
push
and
repz
and
and
loopne
iret
repz
dec
scas
sub
clc
shll
pop
imul
daa
xor
leave
push
xor
aaa
repnz
add
ja
cmpsl
push
leave
fistl
cmp
cmp
repz
pop
js
mov
mov
jnp
repz
xor
dec
insl
add
out
fidivrs
push
pop
ja
mov
js
xor
jae
das
push
dec
insb
inc
dec
add
dec
aas
dec
push
repnz
mov
enter
cli
or
or
ret
nop
cmpl
adcb
sbb
pop
stc
and
leave
sbb
into
sbb
rorl
and
sahf
mov
pushl
test
lds
std
and
sbb
addl
xlat
xchg
inc
push
add
inc
jg
stc
mov
adc
mov
decl
js
inc
outsl
loopne
jmp
dec
inc
mov
test
daa
cmp
inc
mov
popf
sti
jmp
stos
push
inc
mov
pushl
int3
repnz
test
pop
stos
clc
scas
adc
inc
jmp
aam
imul
loope
jp
dec
inc
gs
xchg
push
cmpsb
scas
mov
or
addl
cmpsl
xchg
cmp
clc
cmp
dec
cmpsl
in
cmp
sahf
xchg
pop
lcall
nop
test
inc
mov
aaa
popa
sar
mov
ljmp
lock
stos
xchg
clc
repz
mov
subb
fwait
xchg
and
int3
insb
add
add
int3
add
mov
cmp
or
aas
pop
fs
dec
lea
aas
ret
shrl
sbb
pop
pop
mov
icebp
aas
rorb
and
cmpsl
out
aas
inc
cmpsb
mov
insb
scas
add
aas
pushl
cmp
aad
mov
std
std
into
popa
test
ja
stos
in
das
dec
pop
loope
les
call
les
jne
int
mov
addr16
push
mov
xchg
aas
and
loop
mov
mov
popa
push
pop
sarl
jl
mov
das
lea
mov
inc
filds
movsl
jmp
jg
sub
jge
mov
inc
rcr
push
arpl
int3
and
pushl
call
cmp
jp
and
cmp
mov
cmp
std
xlat
cmp
mov
dec
lcall
sbb
incb
lcall
cmp
jno
shlb
out
dec
nop
pop
cmp
fisubl
xor
push
mov
cmpsl
push
lahf
inc
pop
mov
sub
dec
in
ss
push
scas
into
imul
faddp
jge
call
push
sahf
out
pop
push
xchg
cmp
push
andl
dec
dec
gs
std
orl
pop
ficomps
into
ror
add
cmpsb
fmuls
sahf
outsl
cmp
add
in
inc
inc
mov
stc
subl
insb
inc
inc
push
cmp
push
pop
and
dec
dec
inc
push
dec
add
aaa
xor
jg
pop
insb
pop
ljmp
mov
lcall
inc
dec
inc
jo
inc
popa
push
outsb
jbe
imul
sub
pop
sbb
outsl
mov
andl
cmp
rclb
pop
dec
fldenv
cmp
fimull
je
dec
pusha
and
clc
push
inc
dec
push
loop
and
mov
jo
jb
push
sbb
inc
test
lock
dec
inc
gs
gs
pop
les
addb
arpl
shlb
mov
sbb
sub
dec
outsl
push
dec
pop
mov
inc
push
xchg
xchg
add
aaa
pop
push
dec
dec
cmpsl
push
add
rorb
insb
ds
push
fs
sub
imul
pusha
dec
out
dec
inc
adc
daa
dec
sub
mov
imul
xor
inc
jg
mov
clc
inc
inc
jns
dec
lahf
push
imul
adc
les
push
cmp
lods
mov
push
je
dec
add
xor
inc
push
or
in
inc
ds
je
sbb
out
dec
push
dec
dec
lods
std
lret
add
dec
bound
jbe
movsl
cmpsb
sbb
xchg
sub
scas
push
mov
or
inc
cmpsb
dec
xor
sbb
iret
arpl
inc
cli
adc
outsb
arpl
outsl
push
bound
inc
dec
dec
pop
xlat
int3
inc
add
push
push
or
mov
pop
mov
push
mov
ja
inc
xchg
push
push
in
lcall
inc
mov
mov
mov
fisubl
push
mov
pop
inc
add
loope
jg
idivl
mov
push
push
push
imul
sbb
pop
outsl
push
jb
push
mov
jbe
lds
das
jo
adc
push
xlat
push
inc
mov
push
dec
stos
fcoms
gs
lods
mov
mov
pop
push
jl
push
test
arpl
push
push
push
pushf
nop
push
pusha
out
or
inc
pop
jg
push
mov
outsl
xchg
fisttpl
mov
movsl
add
xor
shll
mov
data16
inc
add
fisttpl
xchg
mov
pusha
pop
pop
ja
or
pusha
pop
es
inc
pop
stos
mov
push
pop
jno
add
pop
push
pusha
add
sbb
lahf
pusha
mov
scas
mov
inc
sar
cmpsl
push
and
aad
dec
je
dec
lahf
mov
push
xchg
inc
dec
sub
stos
and
leave
dec
cmp
mov
mov
mov
leave
adcl
stos
iret
aas
decl
lahf
sub
nop
lods
mov
inc
adc
or
cmpsl
dec
push
orl
rsqrtps
push
dec
daa
dec
dec
sub
or
js
xchg
sbb
cmpsl
xchg
push
inc
in
arpl
dec
outsl
sbb
insl
imul
xchg
clc
pop
push
jne
les
outsl
rolb
loopne
push
cmp
out
dec
outsl
or
aad
iret
insl
mov
popa
inc
iret
pop
les
addb
fdivrl
inc
das
xlat
mov
dec
jg
mov
push
lods
xchg
js
sahf
out
pop
cmp
adc
repz
shl
les
into
add
mov
cmp
repz
faddl
and
call
pushf
daa
lahf
xchg
xor
ja
popa
push
out
mov
push
or
hlt
push
xor
xchg
fs
xor
fdivrl
jmp
xchg
sub
mov
sub
mov
sbb
dec
jno
repz
incl
test
ficompl
jmp
mov
hlt
movl
imul
std
in
dec
mov
add
insb
push
arpl
psubd
or
outsb
cmp
imul
pushl
mov
inc
aam
dec
std
test
movsl
cli
test
xor
leave
mov
stc
mov
xor
filds
or
shrl
cmp
ficoms
push
xlat
enter
jmp
mov
and
mov
cltd
xchg
mov
mov
or
or
jg
sub
or
adc
stos
sbb
ljmp
fdivl
jno
add
aad
mov
mov
movsl
in
lahf
xor
mov
js
stc
lret
xchg
sbb
lcall
push
sub
insb
fs
add
hlt
push
imul
insb
sbb
xor
dec
incl
insb
jnp
add
shl
adcb
cmc
fnstenv
adc
mov
decl
frstor
sub
rorl
popa
mov
into
pop
cmp
pushl
mov
inc
movsl
fisttps
xchg
fadd
shll
jmp
ljmp
inc
mov
sarb
add
in
add
pop
dec
or
cmp
add
incl
daa
adc
or
and
test
or
mov
popa
into
push
stc
ficomps
leave
fldcw
and
xlat
pop
cmp
mov
cmp
lods
insb
mov
in
mov
mov
add
inc
aad
scas
ja
popf
adc
push
fdivl
or
test
adc
xchg
ds
or
or
push
in
mov
ljmp
pop
jge
xchg
shlb
add
inc
push
imul
xorb
pop
std
ss
sbb
push
imul
aam
loopne
rorl
int3
dec
frstor
fistpll
stc
out
mov
pop
aad
mov
call
xchg
shll
push
repnz
addr16
jmp
mov
aas
dec
ss
fisubrl
or
scas
testb
pusha
jp
inc
ret
out
pusha
call
addr16
mov
jns
imul
andl
shrb
ss
push
xchg
ja
int3
incl
inc
or
das
es
lds
or
sub
mov
cmpsl
call
ret
pushl
iret
shlb
sbb
ret
es
pushf
mov
insl
add
jg
aas
ss
jmp
addr16
jb
push
mov
dec
mov
loop
sub
decl
mov
xchg
or
out
fdivrl
fisttpl
aam
roll
clc
mov
push
jecxz
lcall
int
mov
mul
ja
outsl
ja
mov
out
cli
jo
ud0
cmp
incl
pop
or
adc
sahf
gs
clc
sar
imul
push
js
or
call
or
dec
ret
cmp
cmpsl
notl
pusha
rorb
imul
push
scas
fdivr
lcall
fldenv
filds
cmp
aaa
push
scas
mov
fidivrs
mov
jmp
repnz
inc
mov
push
cmpsb
mov
sarb
sub
push
mov
jp
mov
inc
cli
decl
les
sbb
xchg
sub
aaa
mov
or
sbb
sub
loopne
out
add
or
pusha
sub
sub
mov
les
cmpsl
push
inc
jne
ja
mov
hlt
push
imul
insb
imul
inc
or
pop
inc
jbe
push
jns
arpl
arpl
popf
mov
add
push
inc
pop
add
subb
inc
jne
xchg
sub
cli
outsl
insl
addr16
test
mov
xorb
inc
ss
inc
push
jmp
jns
cmp
push
jp
or
dec
inc
js
inc
insl
bound
xchg
or
inc
inc
xor
js
push
dec
and
dec
sbb
std
mov
pop
inc
cmp
pop
bound
xor
aaa
cmp
popa
arpl
cmp
arpl
mov
xor
xor
bound
notb
movsb
popa
push
inc
jbe
pop
pop
adc
inc
mov
iret
insl
inc
mov
dec
inc
xor
inc
and
insb
or
movsb
into
and
adc
and
and
push
mov
sub
jbe
arpl
mov
or
inc
aas
lods
inc
cmp
lods
xchg
cmp
rcpps
sbb
subb
aaa
aam
add
stos
xor
insb
popa
jns
inc
lds
repnz
dec
insb
orb
cmp
lock
inc
inc
je
aaa
aas
rorb
aas
adcb
sub
push
and
jae
popf
int
or
inc
aas
stos
jp
mov
aaa
int
or
inc
sbb
sub
inc
pop
pop
int3
out
std
push
es
inc
inc
inc
add
ds
push
add
xor
mov
dec
push
dec
dec
lea
xchg
sbb
mov
std
and
outsb
jne
outsb
mov
sbb
mov
push
jge
xor
mov
imulb
adc
xor
in
cs
ss
clc
xchg
into
pop
in
mov
or
pop
rorl
subl
ret
int3
imul
add
adc
outsl
pop
mov
xchg
popa
add
lahf
sub
and
inc
inc
bound
pop
insl
mov
xlat
insb
inc
xorb
add
pusha
daa
inc
jb
xchg
add
shll
adc
jo
lahf
andl
outsl
test
mov
add
push
push
jno
jno
stos
or
push
lds
dec
xor
pusha
in
nop
test
pop
cmp
xor
arpl
and
or
cmp
mov
jo
push
adc
push
pop
inc
mov
insb
jns
das
push
and
push
and
test
dec
or
mov
or
jle
push
bound
add
xor
xor
push
ja
push
add
dec
inc
sbb
popf
xor
or
add
sbb
les
add
negl
adc
fs
cmp
pusha
add
imul
testb
and
test
and
mov
and
sahf
aas
sub
sbb
jg
aam
jo
aaa
inc
push
add
add
loop
aaa
or
push
outsb
cwtl
jb
add
daa
adc
pop
inc
and
mov
inc
dec
push
test
add
add
cmp
mov
addl
push
dec
mov
shrb
and
add
test
xor
incl
mov
or
cmp
fnstcw
icebp
push
push
jle
mov
pusha
imul
push
push
jmp
movsb
pusha
xor
arpl
loope
adc
inc
sbb
xchg
lods
sub
lret
lret
cmp
jmp
jecxz
addr16
inc
xchg
cmp
stos
push
sbb
inc
jae
and
lret
aam
aaa
cli
adc
and
cli
xchg
jmp
fidivs
aas
mov
shll
pop
incl
sti
into
es
loopne
insb
xor
push
sbb
jno
xchg
xchg
addr16
add
call
icebp
xlat
es
addr16
jno
dec
sahf
rcrb
ror
rcrb
xlat
stc
mov
ljmp
or
xor
out
cmp
sti
mov
xorb
jmp
jnp
test
inc
imul
lea
fisubrs
loop
mov
ret
popa
sbb
sahf
decl
test
dec
ds
push
mov
sarb
ret
cmp
push
and
dec
cmpsl
pop
fistl
ljmp
xchg
fnstcw
mov
add
xchg
push
fwait
and
cmp
aas
jno
push
lcall
mov
mov
xor
sub
jb
add
mov
call
inc
mov
sbb
cli
out
push
jbe
hlt
push
cld
mov
fucomi
in
xlat
mov
ljmp
movsl
mov
xchg
mov
pushl
and
adc
testl
pop
popa
std
fisttpl
incl
push
sub
fwait
mov
push
inc
scas
mov
test
add
call
inc
pop
xchg
dec
movsl
push
mulb
sarb
mov
jne
mov
stc
cltd
sti
mov
lcall
mov
mov
sub
mov
inc
xor
lods
sub
and
mov
xor
scas
jb
dec
mov
imul
aam
popa
loope
adc
lcall
mov
sub
mov
fistpll
sub
cmp
mull
adc
incl
rcl
cmpsb
clc
std
push
mov
mov
push
sub
outsb
outsb
jb
stos
loopne
sbb
push
push
or
in
push
and
int
mov
sbb
aas
pushl
and
cmp
cmc
xor
lcall
scas
movsl
push
sub
jbe
or
es
int3
xchg
sti
adc
jo
test
fadds
lea
push
xor
andb
jno
aam
dec
adc
movsb
insb
into
mov
jmp
cltd
jo
pop
dec
imul
mov
push
jbe
cmpsl
mov
or
and
mov
jl
rcrl
jmp
sbbb
hlt
lret
lea
inc
call
mov
lods
scas
popa
call
fldcw
pop
mov
test
add
jle
out
adc
dec
aaa
arpl
xchg
xor
add
test
lret
lods
das
lcall
sti
add
pop
mov
insl
js
cli
inc
jae
es
dec
add
incl
xor
lcall
mov
ja
ss
xchg
inc
aam
decl
sar
repz
xorb
dec
add
decl
adc
test
pop
push
cmpsl
xchg
lock
sub
sarb
js
outsb
mov
stos
incl
gs
xor
enter
xchg
rcrb
xor
bound
decl
movsl
inc
dec
and
and
pop
test
fdivs
jnp
sarb
in
jmp
cmp
adcb
push
cmp
push
in
mov
jmp
ljmp
and
in
cmp
sbb
aaa
nop
sbbl
cmp
jg
sbb
adc
mov
fistl
jp
jne
fldt
stos
fimull
sub
decl
lds
mov
cmp
pop
lret
jae
rclb
jo
daa
scas
arpl
repnz
adc
fisubs
lods
js
scas
pop
fldenv
mov
jg
xchg
roll
or
xchg
call
cld
sub
in
ja
fsub
fisubs
mov
inc
enter
lock
xor
out
push
inc
lret
outsl
xchg
dec
aad
popa
sbb
cwtl
sbb
sar
cmp
pop
xchg
xchg
cmp
mov
push
mov
lods
daa
scas
insl
mov
sub
cs
ud0
in
push
dec
mov
stos
xor
jp
or
ljmp
jns
in
lods
idiv
lcall
mov
push
cmp
pusha
jae
xchg
jecxz
icebp
fcoms
push
out
loop
incl
mov
daa
adcb
mov
fldl
cmc
dec
int
adc
mov
ljmp
arpl
sbb
movsb
mov
movsl
and
decb
clc
cmp
in
test
xor
inc
mov
int3
adc
adc
lock
ljmp
xchg
push
int3
xor
popw
adc
pop
dec
jno
sbb
test
sbb
incl
jne
cmp
in
dec
adc
pop
xchg
cld
jbe
mov
ret
call
loop
cmp
jb
mov
sub
movsb
lock
sub
ffree
ja
add
mov
jge
push
push
adc
push
jecxz
cmpxchg
scas
arpl
and
jg
das
push
mov
push
pop
jno
pop
pop
adc
push
js
pushf
mov
dec
push
push
dec
icebp
call
xchg
or
mov
cmp
mov
and
push
jnp
lock
enter
jg
jmp
and
mov
cmp
lds
bound
add
in
std
ljmp
lret
inc
jbe
mov
negl
rcrb
movsl
mov
es
pushl
fcomps
mov
les
stos
cmp
imul
adc
aad
mov
decl
mov
ret
adc
and
mov
fcmove
outsb
xchg
add
push
repz
mov
push
xchg
and
and
push
mov
inc
or
testl
inc
push
ljmp
incb
jno
or
daa
sub
sbb
pop
and
sbb
mov
xor
cli
leave
add
or
mov
es
xor
push
shrl
xchg
cmc
mov
test
jmp
adc
rorb
jle
xchg
and
inc
mov
mov
test
clc
in
idiv
pop
jae
dec
test
and
mov
jg
push
inc
addr16
or
xor
punpcklbw
pop
test
ds
call
push
xor
mov
jge
cmpsb
test
inc
in
adc
lock
pop
inc
aad
ljmp
cli
fsubrs
jbe
inc
loopne
es
jg
jecxz
mov
ja
pop
aas
fs
add
pop
adc
cs
adc
cld
out
push
dec
lods
sub
pushf
lods
clc
popf
inc
icebp
in
loop
insb
mov
stos
leave
pop
testb
jmp
xor
pop
and
ljmp
push
sti
cs
inc
clc
out
jg
call
cmp
pop
push
pushf
int
push
xchg
ja
into
lcall
mov
pop
roll
jo
jg
call
jp
dec
dec
xor
iret
sub
rcl
testb
icebp
dec
stos
roll
mov
mov
mov
mov
cmp
pushf
aas
mov
inc
aaa
push
repnz
mov
push
mov
sbb
mov
std
jb
jnp
stos
les
int3
push
fisttps
and
ljmp
dec
int3
sbb
push
in
ss
lret
dec
loope
mov
sub
cld
and
pop
jg
dec
cwtl
cmp
rolb
fisubrl
in
cmp
mov
lea
fmull
jns
aad
movsb
pop
pop
rclb
inc
xlat
data16
mov
jmp
sarl
fs
pusha
sub
loopne
jmp
repz
xor
popa
push
cmp
fiaddl
mov
call
je
sar
xchg
xorl
lods
cmp
push
sbb
cmc
jbe
les
les
lcall
xchg
mov
or
test
out
or
decl
sbb
mov
and
push
push
push
sub
lcall
lret
sti
mov
ds
jno
sbb
lcall
push
sbb
push
hlt
mov
cmc
pop
stos
inc
into
and
pop
sub
pop
or
add
jmp
push
int3
repnz
test
jb
shl
xchg
push
lcall
decl
and
jle
lahf
pop
repnz
or
mov
adc
sbb
std
dec
add
mov
inc
imul
push
lods
inc
int
push
call
incl
shrb
add
sbb
mov
test
cmp
jmp
mov
pushf
sahf
fwait
stos
fs
add
pop
jl
arpl
pop
jae
mov
cmp
adc
jmp
mov
lods
das
ss
mov
iret
dec
daa
hlt
push
push
or
test
ds
jnp
wrmsr
dec
xchg
nopl
and
nop
jns
js
pushl
lds
pop
or
fmull
das
pop
adc
shll
add
inc
inc
push
stos
pushl
jbe
mov
test
aad
loopne
popa
icebp
hlt
out
sub
or
pop
sbb
incl
or
inc
lods
imul
add
incl
mov
push
stos
dec
xchg
shlb
jmp
push
ret
mov
and
pusha
pop
mov
cmp
fwait
repz
sub
stc
ja
jle
ror
sub
xchg
jge
aaa
call
cld
js
jecxz
mov
orb
or
aad
jae
lret
hlt
and
aaa
das
and
pushl
pushf
ljmp
pop
sbb
sti
outsl
push
or
lcall
push
and
and
scas
rcrl
sbbb
pop
xor
inc
sti
cmp
xchg
in
sbb
in
addr16
mov
insb
mov
or
or
insl
addr16
push
mov
sbb
decl
arpl
mov
aad
outsl
mov
mov
adc
sbb
call
lds
out
shrd
iret
fdivs
iret
es
inc
fnstenv
jns
xchg
or
pop
lods
incl
aam
lahf
jb
add
pop
adc
inc
xlat
and
adc
add
jne
xor
sub
dec
or
std
cltd
pop
ljmp
mov
or
mov
sbb
fdivrl
mov
sbb
or
and
xchg
pop
gs
ljmp
pop
mov
push
mov
js
dec
jno
xor
push
add
add
cmp
clc
in
adc
inc
inc
pushf
out
js
cmp
int
mov
das
and
jmp
fstpl
mov
std
mov
aas
fmuls
je
ja
call
xchg
or
adc
mov
cmpsb
imul
adc
xor
fcomip
mov
jmp
jge
rcrl
imul
mov
mov
icebp
ret
cltd
mov
cwtl
aam
out
pop
out
or
inc
addb
dec
mov
add
std
movsb
adc
fbstp
and
sahf
xchg
mov
inc
mov
xor
icebp
cs
inc
push
jno
call
dec
ljmp
clc
or
xchg
sub
lret
addl
mov
push
rorb
aaa
std
ljmp
test
div
jae
xor
loop
sub
and
fisttpll
push
hlt
faddl
lods
pop
test
mov
dec
xchg
mov
lcall
leave
aaa
jg
inc
negl
inc
mov
jmp
sbb
sbb
js
imul
ficomps
add
adc
mov
jne
cmpsl
cld
cltd
movsl
aas
test
mov
decl
in
fwait
add
in
imul
pop
pop
mov
sahf
fdivrl
insb
dec
pushf
mov
in
dec
mov
and
outsl
leave
inc
loopne
lahf
or
inc
add
sbb
addr16
ljmp
xor
mov
jbe
repnz
fstl
pop
repnz
sarl
push
mov
jne
cltd
xchg
jge
test
mov
xor
loopne
and
mov
mov
jmp
adc
pop
test
out
or
es
sbb
and
cmc
imul
ljmp
mov
movsl
sarb
repz
push
shr
xchg
lods
ret
iret
cmp
mov
mov
sbb
fsubrl
lret
outsb
cmpb
aad
inc
test
out
sahf
xchg
stos
loopne
xchg
pop
xchg
dec
stos
in
sub
push
pop
lcall
push
jmp
xor
orl
stos
xchg
int
adc
push
push
or
cmp
lcall
inc
loop
sti
cli
dec
aam
mov
orb
jmp
jl
pop
pushw
mov
jmp
push
popf
js
pop
aas
push
push
and
shl
inc
insl
out
inc
lods
mov
stc
push
loope
mov
sbb
jmp
cmp
test
pop
add
mul
xchg
jecxz
dec
inc
add
mov
outsl
add
call
mov
cld
and
cli
mov
arpl
push
xchg
mov
inc
adc
or
dec
nop
xchg
int3
aad
scas
cli
ljmp
dec
and
sbb
fucom
test
fwait
push
dec
dec
push
push
and
sbb
inc
or
test
mov
in
pop
jmp
sbb
imul
push
call
push
neg
mov
sub
mov
inc
xchg
push
push
jg
inc
mov
dec
mov
movsl
rcll
js
out
je
fsubrp
cmpsl
dec
mov
das
pop
pop
testl
adc
outsl
and
arpl
push
cmp
add
and
pop
pop
lods
ja
pop
ja
xor
pop
sbb
mov
stos
ljmp
sar
cli
cmp
cld
dec
jno
sub
dec
xchg
dec
decl
lods
pop
call
push
push
out
leave
pusha
or
push
add
test
in
or
sahf
pop
pushl
lock
mov
stos
mov
jmp
ucomiss
sbb
adc
std
adc
fildl
mov
add
sbb
pxor
daa
out
out
mov
outsl
jns
jg
cmp
or
jp
in
pop
mov
lea
popa
sub
mov
cmpsb
xchg
xchg
mov
outsl
mov
pop
and
jecxz
jp
cli
insl
sub
mov
jg
add
call
sub
or
pop
loope
mov
mov
push
cwtl
arpl
in
pop
sbb
mov
add
inc
stc
fwait
cmp
dec
push
test
cmpsl
movsl
lcall
pop
sbb
cmp
rep
int3
rcl
outsl
jb
push
loopne
mov
xchg
ljmp
aaa
xor
or
push
mov
push
ret
xchg
cld
mov
inc
pushl
fs
rcrb
inc
popf
pushl
ret
push
jge
popf
fs
jae
imul
call
fidivl
ja
lods
mov
push
xor
fistpll
lods
cld
fcomip
lcall
and
repnz
and
cmp
ret
popa
fsts
adc
aaa
pop
push
inc
movsl
lods
pop
sbb
pushf
nop
ja
xchg
fldpi
in
mov
mov
sub
icebp
mov
or
sbb
mov
jns
in
inc
cmp
adc
or
es
mov
ficoml
lcall
insl
cmp
mov
negb
test
aam
xor
push
icebp
pop
sti
jg
push
nop
add
loop
aad
sub
divl
sub
push
incl
adc
mov
mov
popf
add
jmp
and
mov
ljmp
mov
mov
sahf
mov
loope
push
xor
push
leave
jo
jmp
mov
add
loop
mov
cmpsb
ss
ds
sarl
lea
lret
pop
aam
idivb
pop
adcb
add
inc
push
inc
cmp
cmc
jl
lds
fnsave
mov
or
or
stc
adc
std
fsubl
xlat
imul
iret
enter
cmp
pop
loopne
leave
stos
adc
cmp
cwtl
cs
sbb
xchg
sub
cmp
hlt
aaa
icebp
pop
lahf
mov
push
xor
mov
jmp
and
aas
in
gs
lock
scas
xchg
and
decl
mov
dec
push
scas
sub
jno
cmp
scas
in
xchg
adc
mov
incl
fistl
pop
push
mov
xchg
adc
cmc
push
xchg
xchg
leave
mov
jg
sub
push
mov
mov
or
outsb
and
push
push
addr16
mov
mov
jne
lcall
clc
decl
or
aam
rcll
jmp
nop
jne
test
incl
lahf
fisttps
add
sbb
or
mov
or
and
ret
push
dec
push
shll
and
call
lcall
loop
pop
adc
jecxz
jns
in
int
pop
outsl
lret
xchg
and
stos
call
pop
daa
jp
sub
test
jo
xchg
sti
mov
lock
pop
mov
xchg
fadds
cmp
dec
in
ljmp
dec
inc
sub
pusha
lds
push
jecxz
push
in
movsl
dec
pop
int
inc
inc
pop
add
jle
push
jmp
mov
test
addb
andl
cmp
adc
sub
cltd
icebp
xchg
js
pop
add
mov
test
inc
cwtl
and
lock
and
int
xor
and
call
xor
xor
mov
in
loopne
jne
outsl
out
push
das
in
jp
ss
mov
mov
in
sarb
mov
test
jbe
lock
mov
dec
lcall
data16
jnp
fcmovnbe
xchg
xchg
mov
add
pop
pop
sub
sbb
or
call
pop
or
cmp
fwait
mov
inc
das
sar
dec
mov
insl
and
jp
adc
or
sub
cmp
cmc
sarl
cmpsb
mov
mov
push
adc
or
pop
jb
imul
or
sub
push
dec
mov
sbb
add
out
add
push
cs
push
and
adc
jnp
aas
call
and
pop
iret
lods
cmp
bound
xlat
shrb
dec
je
mov
std
lock
add
cmp
cmp
popf
das
hlt
cmp
and
jmp
mov
mov
inc
inc
inc
or
test
out
mov
push
pushl
xchg
cltd
imul
mov
cltd
jp
cmpb
fstp
cwtl
adc
lcall
loop
and
xchg
fcoml
test
ret
iret
jp
mov
cmpsb
imul
sbb
lock
iret
xchg
jno
xchg
adc
fwait
aaa
mov
adc
loopne
mov
bound
and
inc
push
iret
or
nop
push
fldl
ljmp
sbb
sub
add
xor
icebp
lea
mov
lods
in
nop
add
xor
add
jmp
mov
push
js
dec
sub
sbb
push
cs
or
lock
jg
jmp
fdivrs
pop
sub
dec
and
mov
sbbb
pop
movb
xchg
pop
scas
inc
and
sub
cmp
push
pop
cmpsl
test
add
decl
add
push
lcall
fbld
mov
pushf
dec
out
enter
adc
call
cld
lcall
lahf
test
mov
add
mov
nop
inc
add
incl
push
test
fmulp
int3
lods
or
pop
test
sub
and
stos
xchg
cwtl
loope
dec
rcrb
cmpsl
lcall
push
mov
mov
inc
xor
mov
cmp
inc
mov
ss
pop
out
sbb
sbb
movsb
jl
popf
pop
jnp
cld
add
cmp
dec
mov
ljmp
jno
push
call
pop
pusha
outsl
push
inc
pop
sub
or
push
mov
push
and
insl
shl
loopne
jmp
adc
fildl
testl
mov
ljmp
mov
fisubrs
hlt
notb
arpl
mov
xchg
ja
idivb
or
cld
call
push
je
imul
inc
sub
pop
in
xlat
mov
inc
inc
lcall
mov
pop
mov
xchg
push
push
incl
std
fldl
pop
je
cmc
inc
shlb
mov
mov
jmp
dec
fwait
mov
fwait
jle
sbb
cmp
aaa
cli
inc
pushf
int3
xor
mov
cmp
dec
adc
leave
rcrl
mov
fcomip
cmp
out
ds
push
jg
adc
ja
mov
pop
mov
aaa
push
push
push
aaa
fcomip
adc
mov
push
xor
pop
sbb
mov
and
jle
mov
pushl
adc
lds
add
and
mov
push
test
ljmp
and
add
push
sub
pop
das
dec
enter
mov
add
in
fimull
sub
das
cli
nop
mov
les
pop
dec
popf
and
xlat
sub
mov
add
gs
adc
xor
dec
call
insl
or
jnp
add
sbb
int3
ret
dec
clc
jecxz
jg
hlt
lock
addr16
xorb
ror
mov
xchg
lock
mov
adc
leave
loop
cmp
cmp
jmp
push
aam
mov
xchg
fisttps
jmp
fisttps
add
or
outsl
dec
rorl
push
cmp
jmp
mulb
mov
mov
jbe
scas
mov
mov
leave
sub
scas
pusha
jl
enter
dec
and
sbb
in
xor
vpaddq
jno
sti
repnz
add
outsl
clc
decl
fldl
les
pop
outsl
ja
cmp
mov
rclb
adc
pushf
xor
jae
jmp
ljmp
mov
adc
xchg
xor
mov
pop
mov
sar
push
jo
lcall
mov
outsl
loopne
add
aam
test
dec
movsb
jp
xor
pop
mov
mov
push
pop
sub
mov
push
mov
sub
and
lea
lcall
adc
jmp
sbb
fidivrs
add
sbb
icebp
pop
inc
incl
pop
sbb
xor
stc
cmp
push
sbb
or
push
fabs
xlat
push
cmp
lods
flds
jmp
ljmp
sub
stos
mov
ds
sbbl
in
stos
add
mov
rcr
ret
jg
jno
int3
stc
jmp
sub
mov
mov
dec
lods
loopne
jno
dec
scas
push
or
mov
stos
or
dec
clc
rcr
lock
mov
popa
lcall
test
mov
dec
dec
lods
jecxz
sar
pushl
loop
mov
sub
inc
xlat
and
mov
sub
jnp
leave
jmp
idivb
out
hlt
xchg
pop
push
mov
hlt
sub
and
js
negl
std
test
cltd
mov
in
jne
pop
sub
lahf
mov
xchg
sbb
cmp
push
or
std
insl
lods
push
iret
cwtl
imul
sub
ds
shr
sub
pop
pop
mov
pusha
fs
add
and
sub
mov
or
inc
mov
mov
dec
fdivrs
adc
gs
testl
xchg
stos
rcrb
das
xor
jg
incl
test
sbb
inc
xchg
dec
flds
aaa
mov
xchg
mov
imul
cmc
fbld
mov
int3
xchg
aam
xchg
jb
cld
fisubrl
mov
mov
and
in
xchg
popa
icebp
jge
call
xchg
pop
popa
pushf
ja
add
xchg
and
pop
push
pop
inc
stos
mov
adc
enter
fcomip
ljmp
push
ljmp
sbb
xor
xor
jg
sbb
imul
test
push
jo
mov
decl
sub
pop
stos
cmc
shrb
pop
cwtl
and
mov
clc
cli
call
push
or
jg
mov
dec
inc
lock
dec
mov
imul
xchg
add
cltd
jae
test
jmp
or
pop
sbb
xchg
mov
dec
data16
aam
sti
jmp
ljmp
pop
dec
imul
push
aas
pop
mov
mov
fcoms
lret
icebp
call
jno
inc
rolb
in
or
mov
cmpsb
sti
fsubrs
lcall
ljmp
mul
les
into
lods
orl
clc
fdivrl
cli
xchg
es
push
lock
addb
int3
jne
popa
push
andl
call
daa
fnsave
ret
test
inc
cmp
push
dec
rol
cmp
sub
fxch
and
lock
add
mov
addb
rclb
gs
ficoms
stos
test
sub
insb
loopne
jp
adc
inc
add
fwait
rol
cltd
call
add
mov
mov
mov
xchg
and
in
xor
sub
sbb
jbe
jne
and
jbe
lretw
jne
mov
inc
add
rcll
and
mov
pop
sbb
pusha
ja
fcoml
inc
mov
cld
decl
aas
arpl
xchg
rol
lahf
sub
xor
cld
sub
sbbl
dec
popf
pop
rcl
sub
xor
ret
mov
icebp
pop
dec
iret
mov
sub
cmp
mov
iret
movsl
out
popa
pop
repnz
fcomip
add
mov
push
and
sbb
and
xchg
pop
jmp
xchg
push
dec
jne
mov
inc
shlb
mov
sub
xchg
jg
pop
lds
inc
inc
push
xchg
in
ljmp
cli
in
cmpsl
ljmp
out
jge
and
addr16
pop
int3
push
cmpsb
in
xchg
bound
sbb
sbb
mov
cmpl
decl
add
aad
inc
push
sub
push
fcmovu
lret
stc
sbb
push
call
arpl
push
stos
and
sub
ja
xchg
popf
int3
mov
clc
inc
jno
mov
lret
pushf
pop
lods
ljmp
pusha
mov
repnz
cmp
xchg
push
or
adc
cmp
ss
hlt
or
mov
xor
jno
add
dec
sub
cmp
ret
adc
stos
sti
mov
das
xchg
sbb
aam
pop
aas
idivl
jo
adc
push
int3
push
loop
mov
jmp
xor
jmp
jno
test
sub
cmp
movsl
and
lods
fists
cltd
jo
sahf
addl
gs
cmp
cmp
mov
ret
sbbl
test
loopne
in
mov
dec
stos
cmp
pushl
bound
jno
sub
inc
cmpsl
mov
mov
mov
fistpl
jb
mov
jnp
mov
and
xlat
mov
push
dec
cmp
ret
nop
mov
ds
ljmp
xor
xor
cmp
cld
in
xor
cmp
push
cmc
xor
push
mov
fbstp
cmp
push
pop
and
cmp
test
inc
insb
jmp
incl
cmc
shll
or
sbb
lcall
hlt
out
inc
xchg
in
lcall
adc
mov
scas
mov
scas
rorl
icebp
mov
loop
decl
push
loop
dec
push
mov
loope
decl
fsubs
jnp
sub
dec
repz
cli
or
jb
dec
dec
xor
jmp
loop
mov
xor
nop
popw
cmp
mov
fisubrl
arpl
call
sbb
cmp
mov
outsb
and
jb
out
cltd
mov
in
pop
sarb
je
inc
cli
decl
xor
jb
addr16
jecxz
xchg
pop
je
inc
cmp
ret
push
divb
out
mov
push
adc
adc
or
dec
xchg
cmc
sub
cltd
or
iret
jle
in
or
pop
fbstp
or
mov
cmp
jo
cmpsl
add
sub
jbe
lcall
data16
es
sub
and
mov
call
xchg
icebp
xchg
xor
jne
xorl
es
dec
test
adc
cmpl
ljmp
inc
pop
int3
imull
jbe
pop
push
cmp
cmpsl
jo
mov
das
ja
repz
repz
jmp
mov
and
imul
push
hlt
jmp
test
cmp
mov
incl
mov
or
cmp
dec
xor
jnp
sbb
push
pusha
and
hlt
outsb
and
int3
and
idivl
in
sub
fwait
popa
and
adc
cmc
mov
jmp
nop
into
cmp
test
dec
mov
sub
and
pop
fdivrp
decl
xchg
leave
inc
popa
cld
out
push
lcall
and
imul
incl
lret
mov
es
cmp
xchg
out
xchg
cld
xor
test
outsl
push
test
jl
sti
adc
stos
fsubr
xor
popf
inc
adc
ficomps
outsl
mov
cmp
incl
inc
aaa
push
shlb
push
jnp
std
jg
or
dec
fs
incl
xor
and
pop
cmp
mov
push
xor
ja
clc
pop
shrl
xchg
xchg
dec
cmp
mov
or
call
insb
mov
ret
ljmp
fsubrs
mov
xorb
aad
xchg
push
jmp
mov
ret
cmc
sub
sub
incl
scas
shl
enter
sub
outsb
imul
lret
stos
aam
fs
std
gs
push
inc
decl
xchg
mov
jle
add
loope
sets
inc
inc
mov
jle
js
pop
icebp
pop
icebp
mov
rcl
xor
mov
sbb
orb
or
mov
and
lcall
push
je
fcompl
jp
mov
or
xor
xchg
fiadds
lods
dec
pop
jnp
dec
pushl
scas
push
icebp
inc
and
cmovp
dec
daa
jmp
pop
push
jle
movsb
jmp
inc
pop
stc
pop
xor
decl
insl
dec
mov
leave
inc
pushf
ds
ret
ds
mov
inc
jmp
popa
pop
cwtl
lcall
rcrl
nop
and
cs
les
push
ljmp
add
jg
mov
mov
adc
aaa
pop
pusha
sahf
les
decl
mov
das
xchg
mov
mov
xlat
call
fsubrl
lods
add
lock
inc
in
lock
es
imul
push
or
test
aas
sub
dec
pop
in
inc
loopne
and
pushl
pop
cwtl
stos
xchg
push
das
stos
jbe
mov
mov
rcll
stos
fildl
xor
push
sahf
mov
fstl
mov
mov
scas
and
out
leave
and
sbb
decl
mov
clc
jnp
cmc
sub
loop
out
mov
repz
gs
shrl
fsts
ljmp
add
xchg
clc
in
inc
jl
dec
sbb
cmp
mov
cld
jmp
sbbl
dec
cmp
imul
lods
insb
inc
subl
dec
lcall
xchg
mov
mov
pop
xchg
ret
mov
jmp
mov
adc
imul
popa
sub
jg
dec
arpl
inc
xor
iret
scas
test
jmp
ja
out
dec
pop
mov
jle
mov
or
xchg
aam
pop
xor
cmp
in
pop
or
daa
mov
push
mov
data16
stos
and
fldt
clc
call
lret
sub
xlat
out
xor
leave
push
fcomp
sub
popf
lods
dec
jp
into
call
pop
mov
sti
dec
loope
mov
pop
out
out
xchg
xor
fildl
lock
jg
pushl
pop
mov
add
mov
xchg
repz
mov
leave
cmpsb
out
or
call
lahf
add
out
sub
jbe
jecxz
test
sahf
sahf
adc
lcall
sbb
xor
mov
mov
sbb
mov
jno
sbb
jmp
pop
movb
lcall
dec
xor
loopne
sbbl
jmp
pop
outsl
pushf
add
loopne
cmp
sub
dec
xchg
or
pop
lock
mov
pop
xchg
test
jle
iret
cld
bound
jg
push
adc
cli
scas
imul
mov
addb
adc
jbe
fisttpll
es
mov
sbb
call
ljmp
pop
or
jl
adc
push
jno
add
stc
cmp
pop
ds
cmp
sbb
jo
insl
loopne
out
pop
in
rcr
add
cmpsl
jle
dec
sbb
hlt
mov
pushl
dec
sbb
xor
inc
lds
data16
mov
sbb
lods
mov
push
mov
rorl
xchg
ds
xchg
and
fs
xor
mov
test
add
push
cltd
or
call
call
mov
mov
add
mov
rcl
lret
sbb
adc
out
jmp
pop
inc
push
ljmp
push
out
jbe
add
jl
imul
inc
jmp
lcall
add
xchg
xor
adc
pusha
jg
repnz
xchg
ret
add
lcall
pop
or
jbe
insl
cmp
lods
inc
push
movsb
int
mov
incl
pop
push
xchg
je
sbb
cmp
add
lcall
je
pushl
popa
cld
testl
outsb
push
imul
lods
lcall
decl
bound
adc
push
iret
mov
push
ja
jmp
and
jg
call
push
mov
mov
test
add
rcr
jg
lret
ljmp
cmp
push
cld
dec
or
mov
jp
jg
pop
ss
jno
out
sub
add
xor
pop
call
mov
or
pushl
iret
out
mov
push
push
pop
mov
inc
loop
jno
sahf
cli
ret
lcall
mov
xchg
jl
mov
dec
pop
dec
jno
xlat
imul
lcall
in
loope
lea
test
stos
mov
sahf
pop
jno
decl
fidivrl
inc
add
pop
mov
xchg
cld
or
fmull
cmp
call
cmpsl
pop
iret
push
mul
mov
mov
fwait
jns
call
xchg
icebp
lret
sub
subb
sbb
inc
sub
and
clc
lods
mov
inc
jbe
incl
aaa
aad
in
dec
sub
int3
out
xchg
cmp
dec
movsb
xor
ret
mov
push
sub
xchg
jg
loopne
flds
push
mov
insl
sub
pushl
nop
xor
sub
mov
and
adc
aas
cmp
sbb
arpl
pushl
repnz
jo
xchg
ljmp
adc
test
add
xchg
mov
icebp
out
cmpsl
dec
inc
push
mov
add
adc
in
popa
jbe
insl
into
mov
lcall
xchg
lcall
xchg
mov
adc
hlt
push
pop
and
mov
xor
mov
mov
int3
sub
cmc
lcall
imull
mov
les
ret
xor
pop
cmp
mov
xor
fistps
add
cmp
mov
and
mov
push
dec
ljmp
add
sbb
and
adc
cmp
jbe
fidivrs
test
call
cmp
cmp
xor
add
stc
jle
subl
jmp
mov
cmpsb
popa
mov
mov
icebp
jle
mov
sahf
push
mov
cmpsl
dec
mov
cld
ret
fistps
jmp
mov
fadds
out
xor
pusha
imul
sbb
jg
add
lcall
out
sti
xor
decl
mov
dec
not
js
add
mov
pushf
pop
cmp
xor
decl
dec
shl
dec
push
lahf
sbb
and
lcall
jl
test
lcall
pusha
repnz
daa
jl
jg
clc
jmp
mov
xchg
add
outsl
clc
out
cli
hlt
mov
adc
push
mov
inc
jp
mov
ficompl
dec
stc
mov
push
or
jecxz
dec
rcl
push
dec
mov
incl
sbb
mov
in
sahf
mov
jb
inc
cmpsl
inc
pop
addb
push
add
ljmp
add
pushw
pop
aad
or
adc
push
mov
mov
movsb
or
test
aaa
mov
add
ljmp
cmp
xor
sub
sbb
aad
dec
clc
call
hlt
and
lret
push
decl
add
jne
xor
cmpsl
jnp
xor
js
sub
ja
sbb
mov
call
inc
add
or
sbb
mov
test
ficoms
or
les
imull
pop
lcall
incb
in
lret
pop
mov
jno
loopne
pop
adc
sbb
xor
insl
xorb
mov
pushf
dec
imul
repnz
mov
decl
movsl
rclb
fwait
or
xchg
sbb
insb
scas
push
add
ljmp
ljmp
sbb
mov
sub
ffree
insl
pushl
popa
xor
inc
mov
mov
push
cmp
sub
mov
xor
hlt
inc
mov
jo
in
sbb
popa
jnp
fldenv
cmpsb
push
or
pop
sub
and
push
cmc
inc
insl
xchg
ror
inc
pusha
lea
or
aam
cld
dec
add
inc
out
or
jns
pushl
fcmovb
push
mov
pop
rclb
cmp
mov
loopnew
scas
test
lods
aad
cs
sbb
lcall
fnstsw
clc
adc
sbb
jo
fndisi(8087
or
xchg
inc
mov
jns
jge
cmp
push
adc
lods
fs
rcr
cmp
mov
imul
sbb
in
call
pop
mov
jge
mov
data16
rcrb
f2xm1
inc
in
xchg
mov
cmp
xchg
roll
pop
and
addb
adc
pop
cmc
lcall
out
out
negl
out
repz
or
add
xor
sahf
ds
nop
push
ficomps
jnp
hlt
xchg
jo
je
inc
scas
push
or
pop
xchg
aas
mov
mov
and
sahf
xchg
pop
ljmp
and
lods
sub
sub
sub
data16
inc
push
push
jmp
and
rorl
imul
and
pushl
loope
jae
xchg
push
icebp
pop
lea
mov
loop
fwait
xor
iret
negl
xor
jmp
push
mov
sub
lea
add
adc
sub
add
or
cmp
dec
ret
dec
ljmp
mov
into
jg
pop
push
sub
test
xor
sbb
sbb
ljmp
sbb
cld
xor
scas
icebp
aas
push
lcall
xchg
mov
lahf
dec
ljmp
jl
stc
dec
out
popf
xor
jo
loop
dec
les
lcall
ds
call
add
leave
loopne
push
mov
pop
xchg
call
and
rclw
xchg
adc
gs
xor
push
add
es
fiadds
fbstp
xor
cmc
sar
lahf
jae
test
dec
es
jne
cmp
aaa
and
stc
cwtl
movb
mov
mov
out
in
iret
fldcw
cmpsl
mov
lods
lock
mov
cli
ret
xlat
xor
dec
mov
xor
out
push
add
push
sbbb
ret
mov
repnz
xchg
inc
movsb
iret
lds
pop
enter
mov
cwtl
mov
nop
jp
aam
mov
out
in
push
xchg
push
cmpsb
mov
mov
mov
inc
lock
lret
stos
lds
push
cmp
mov
out
aad
cmc
gs
call
xchg
xchg
xchg
or
xchg
mov
test
xchg
ss
jmp
stos
fwait
fidivrs
jne
cmpsl
dec
out
pop
push
xchg
cmpsb
imul
sbb
pop
mov
mov
incl
jg
ret
adc
push
inc
mov
lods
sbb
mov
call
lods
mov
sarb
pop
gs
das
ljmp
loopne
or
pusha
icebp
jl
jnp
or
sbbb
jb
and
cmp
pop
jb
mov
push
jo
clc
mov
aad
fwait
inc
and
push
pop
lock
adc
outsl
push
cmp
js
pop
mov
repnz
sarb
mov
inc
cmp
jmp
inc
mov
repnz
dec
stos
stos
jge
pusha
imul
repz
adcl
jmp
adc
dec
add
into
stos
mov
add
adc
cmp
out
sub
cltd
loop
incl
ds
or
cs
cmp
arpl
mov
fcomip
int3
cmp
movsl
rolb
cwtl
dec
sub
daa
inc
lcall
adc
push
cmp
sub
cli
inc
jmp
js
aad
imul
cmp
xchg
mov
jecxz
inc
cli
lcall
fisubl
out
rclb
call
and
dec
xchg
mov
in
testb
or
inc
pushl
jns
mov
xchg
gs
std
adc
js
dec
int3
js
sbb
mov
mov
test
add
ret
xchg
imul
jmp
fdivp
jo
mov
fnsave
jmp
dec
push
insl
enter
pop
push
jp
lock
sub
jmp
push
cmp
and
and
mul
in
xlat
pop
mov
mov
push
frstor
test
pusha
pop
cwtl
and
add
incl
push
andl
cmp
cmp
mov
pusha
int3
subb
ljmp
inc
jg
cmp
push
fildl
cmp
fwait
cmp
scas
pop
ss
xchg
es
jmp
xlat
gs
xchg
dec
popf
lods
mov
inc
out
pop
aaa
jnp
jmp
mov
sbb
decl
ror
nop
imul
jge
subb
idivl
jne
rcrl
xchg
test
icebp
cld
adc
or
stos
and
das
decl
loope
xchg
lock
decl
jae
add
jno
add
mov
shrl
sbb
stc
in
dec
inc
inc
mov
rolb
push
aaa
or
jmp
fbld
sbb
push
mov
insb
mov
jecxz
mov
test
xchg
inc
movsl
repz
cld
dec
loop
decl
pop
sub
aas
mov
mov
mov
xor
mov
subl
sub
jmp
icebp
cwtl
pop
sub
sbbb
call
sub
aaa
stos
cmp
sub
and
call
mov
and
add
or
mov
orl
inc
jg
and
xor
jnp
sbb
or
shrl
xor
incl
dec
push
mov
mov
mov
jbe
repnz
fdivrp
hlt
fisubs
ljmp
cli
mov
and
daa
fiadds
jp
pop
lret
rol
insb
xchg
jmp
pop
movsb
arpl
adc
shll
push
jle
in
mov
mov
adc
scas
push
fcmovb
cltd
push
jp
ss
jno
push
mov
push
data16
and
pop
or
lcall
enter
test
loopne
mov
add
data16
xor
clc
aam
aas
bound
frstpm(287
sbb
arpl
mov
ds
add
push
dec
push
sub
cmp
adc
loope
push
lods
movsl
rcrl
outsb
in
fwait
sub
rol
xchg
jmp
add
cli
das
rcl
pop
fildl
pop
push
popa
insb
sbb
ja
decl
inc
insb
faddl
mov
ret
es
push
pop
adc
aaa
std
xchg
dec
add
push
loop
cld
cmp
dec
push
call
xor
repz
cmp
rorb
stc
lcall
aaa
std
ljmp
mov
roll
or
icebp
vcvtss2sd
and
aaa
adc
mov
pushl
sub
sbb
cmpsl
xlat
mov
int3
es
xchg
mov
ljmp
mov
iret
insb
inc
xchg
js
fs
or
ret
test
xor
movsl
lea
or
scas
and
popa
or
rorb
xor
mov
lcall
sub
add
dec
sbb
mov
daa
or
lcall
or
xlat
xchg
and
and
push
pop
xchg
pop
jge
cmp
test
orb
push
push
cmp
in
outsl
nop
cltd
int
xorb
mov
jae
jg
dec
xor
push
mov
push
pushf
inc
or
sub
test
mov
lcall
cmp
pop
sbb
sbb
das
cmpsl
jo
mov
jnp
test
iret
xor
jmp
in
rcll
pop
jg
lret
lcall
andb
adc
daa
imul
adc
mov
call
ret
mov
ret
mov
int3
mov
data16
sbb
push
fdivs
gs
jns
xor
inc
fsubrs
lret
lret
ljmp
mov
adc
jbe
lods
jle
jae
push
jl
out
pushl
sub
popa
pushf
popa
push
and
and
dec
sbb
popf
dec
add
cmp
jmp
aad
hlt
inc
pushw
mov
fstps
sub
ss
pushf
scas
mov
daa
push
cmc
push
stc
add
outsl
addl
cld
decl
or
mov
popf
test
mov
imul
stos
sbb
pop
lahf
sub
pushl
mov
gs
push
fbld
push
and
inc
es
pop
mov
mov
jbe
xor
ja
in
into
sbb
movsb
jbe
sub
pop
hlt
pop
or
mov
jp
mulb
cld
out
jl
jno
enter
lcall
adc
lcall
adc
inc
cmp
xor
dec
test
cmp
mov
or
fnstenv
pop
ljmp
push
push
rolb
icebp
push
and
test
fcmovnu
js
imul
mov
or
outsb
or
mov
xchg
stc
xor
sbb
ret
ds
jg
pushl
add
cs
fnstenv
mov
lcall
gs
jmp
imul
sar
jnp
or
jmp
idivl
out
filds
or
pop
addb
and
lcall
mov
addr16
sbb
mov
mov
shrl
push
div
iret
cwtl
mov
call
int
add
in
xlat
in
adc
cmc
or
sub
dec
icebp
mov
pop
lahf
cmp
jmp
insb
inc
out
aaa
xor
daa
xor
std
gs
pop
std
lcall
or
dec
xchg
push
pop
fidivs
sub
stc
sub
inc
dec
mov
add
push
pushl
mov
cmpsb
lods
sub
mov
enter
xor
jge
sub
pushl
lea
sub
pop
push
push
clc
or
stos
into
nop
iret
add
inc
or
aas
cmpsl
dec
pop
lcall
cmp
pushf
outsl
jmp
pushf
pop
sti
popf
call
adc
negl
cld
jnp
inc
push
xchg
std
decl
cmp
add
popf
sti
or
fwait
push
add
jmp
xchg
int3
xchg
or
cmp
outsb
fldenv
cld
fildll
incl
mov
mov
ret
sbb
pop
sub
cmp
test
das
mov
sti
rclb
iret
jg
or
jp
sbb
jno
jp
ret
cli
nop
mov
shll
enter
lcall
ret
cltd
add
push
fwait
sahf
mov
lcall
cltd
lcall
dec
add
adc
fdivrl
aas
fidivl
mov
jmp
bound
inc
xor
mov
sub
xchg
cwtl
ss
lock
repz
jle
push
insb
xor
inc
push
decl
out
xchg
fucom
cwtl
xlat
jno
shl
insl
push
les
cmp
ds
add
xlat
mov
mov
push
pop
aas
nop
in
push
in
stos
or
andb
sub
push
fidivrs
and
jno
ret
mov
ljmp
adc
inc
fwait
shll
cld
add
cmp
mov
jl
arpl
lock
push
mov
fiaddl
xor
repnz
lret
nop
jle
mov
xchg
ss
fdiv
sahf
jae
stos
aas
sub
xchg
mov
stos
call
inc
xadd
shlb
jmp
adc
lock
xchg
call
push
popa
and
mov
inc
stos
lcall
xchg
sbb
dec
jb
adc
add
sbb
lods
std
clc
gs
pop
mov
sub
jns
mov
push
push
out
decl
jae
mov
inc
call
cmp
out
lcall
adc
leave
adc
pushl
ljmp
faddl
cmp
stos
inc
mov
std
sub
and
decb
pop
or
je
xor
xchg
mov
push
pop
pop
std
jg
push
cmpsl
hlt
sbb
fs
loope
insl
outsl
xchg
out
jb
lret
jg
fsubrs
pop
test
lahf
scas
pop
adc
mov
or
cmp
icebp
xor
nop
dec
inc
ret
cmpsl
pop
lret
cmc
lret
out
lea
clc
pop
cli
jg
decl
add
sbb
fnstsw
mov
xchg
ljmp
enter
or
aas
xor
sub
lahf
arpl
testl
in
xlat
mov
out
jmp
imul
or
cmp
cmpb
stos
shrl
push
sub
mov
ljmp
adc
mov
and
inc
out
jmp
lods
inc
mov
sbb
decb
rcrl
testl
jmp
das
mov
cmp
sub
scas
ret
ljmp
and
mov
xor
xor
daa
inc
clc
jae
jl
lea
inc
movsb
cmp
jg
or
fsin
mov
xor
mov
push
and
push
fwait
mov
cmc
mov
xchg
cli
in
dec
clc
xchg
movsl
sbb
adc
lcall
lahf
icebp
in
mov
jle
inc
in
cmp
rorb
cmp
mov
mov
sub
pop
bound
mov
add
dec
sub
dec
push
jns
jmp
iret
jnp
adc
jbe
lcall
fsubrl
out
ret
jg
ret
jecxz
rcrl
sbb
cmpsb
inc
enter
iret
sbb
mov
lret
mov
je
mov
cltd
sub
adc
fs
les
jne
mov
movsb
jae
dec
dec
cs
and
mov
scas
dec
cmp
jg
repz
out
mov
sub
or
pop
cmp
cmp
mov
lret
sti
dec
cmp
imul
dec
lods
test
push
push
pop
dec
dec
inc
orl
jo
cs
rorl
cmp
sbb
xchg
lret
and
and
outsb
in
add
xchg
dec
test
ljmp
and
mov
dec
sbb
out
test
sub
insl
sarb
pushl
mov
xchg
fisubrl
pop
addr16
jg
sbb
scas
lods
mov
pop
jne
push
pushf
push
add
test
stc
nop
jmp
faddp
mov
icebp
fcmovb
add
ljmp
sahf
pop
sub
fs
jmp
xchg
fcoml
pop
jl
lds
jmp
incl
jne
addr16
sbb
cmp
pop
adc
xchg
sbb
inc
jg
ljmp
test
sub
movsb
stc
mov
imul
popf
imull
push
jnp
cwtl
loopne
rorb
fldl
movsb
out
je
lods
not
inc
and
sahf
call
mov
pusha
add
mov
mov
fst
scas
mov
int3
mov
add
jne
inc
dec
xchg
pop
test
out
outsb
stos
pop
xchg
xchg
and
lahf
shll
and
addb
add
jo
es
jmp
dec
xchg
ja
jno
mov
or
fs
sarl
mov
leave
in
cltd
xchg
push
sti
call
sub
and
ja
cvtpi2ps
aaa
xchg
icebp
std
push
stos
xchg
addr16
mov
sbb
repnz
xchg
lcall
sub
shll
loop
les
xor
push
jmp
mov
out
jecxz
cli
outsl
sbb
arpl
decl
adc
into
aam
jecxz
in
pop
and
pop
hlt
popf
inc
lods
stc
pop
ds
testb
decl
mov
cmc
mov
mov
pop
daa
or
and
inc
mov
subb
call
add
add
sbb
lahf
and
mov
mov
cld
fdivs
repz
ljmp
sbb
imul
inc
inc
movsb
leave
into
outsl
aaa
jo
push
inc
popa
arpl
mov
sub
decl
js
rolb
mov
xchg
jo
and
loopne
lahf
adc
adc
cmp
fisubrs
and
or
xchg
pop
xchg
popa
and
hlt
push
jl
dec
in
fwait
mov
xchg
fbstp
outsb
into
cmp
test
jg
xor
sahf
insl
rorb
mov
or
sbb
and
addr16
stos
pushf
add
jo
dec
sub
lods
sahf
jl
lcall
aaa
rol
fstl
mov
and
test
add
dec
add
inc
repnz
insb
loop
ret
push
lock
xchg
mov
sarb
ds
xor
sub
adc
inc
jg
mov
push
and
jmp
jle
aad
xor
leave
sbb
inc
fldcw
mov
xor
jnp
pop
mov
dec
arpl
outsb
imul
mov
dec
add
dec
call
ret
paddd
decl
hlt
xchg
fs
xchg
mov
mov
adc
call
and
mov
mov
pushf
sub
std
push
mov
insb
movsl
or
lahf
gs
decl
jne
xor
ja
cs
adc
gs
das
and
fsincos
lods
fdivr
iret
lahf
out
lret
dec
int
inc
leave
rorb
jbe
or
push
pop
imul
dec
aaa
outsl
test
xor
and
mov
cltd
lds
dec
scas
adc
decl
cmp
push
xor
std
movsl
test
lret
sbb
inc
sbb
cli
imul
decl
sbb
pshufw
rcll
fcmove
adc
lahf
sbb
fisttps
push
pushf
stc
add
and
insl
push
out
addr16
cmp
in
xchg
cmp
ret
cwtl
pop
push
pop
push
mov
add
stos
xor
mov
dec
ud2
call
jbe
aaa
out
cld
into
outsl
clc
incl
push
dec
ret
fsubs
in
pop
mov
jl
cmc
xchg
call
lock
adc
clc
imul
lea
out
and
sarb
mov
lcall
scas
jo
sbb
mov
mov
or
ret
fldenv
sar
jmp
lods
cld
addr16
xor
add
mov
movsb
inc
xchg
testb
lock
cmp
cmp
jle
out
sub
pushf
mov
aad
dec
ja
jmp
dec
add
int3
test
popf
cmp
or
pushl
adc
and
cli
sbb
jmp
cmp
cmpsb
xorb
push
mov
and
jecxz
inc
outsb
testb
repnz
into
sub
cltd
sarb
call
mov
jl
push
xchg
lods
int
mov
mov
inc
add
xchg
jl
sub
daa
mov
aad
push
sbb
adc
mov
nop
sti
fwait
xlat
ss
cmp
pop
inc
test
pushl
jno
push
push
lods
push
cwtl
sub
hlt
in
je
testb
mov
dec
jbe
inc
cltd
lret
test
in
mov
divb
mov
or
and
incl
loopne
daa
shrl
xchg
jb
push
jns
orl
push
ss
adc
mov
fldcw
sbb
mov
adc
xchg
shll
push
sub
inc
inc
pop
push
pusha
and
mov
mov
das
test
push
gs
call
xlat
lock
pushf
and
es
add
cmp
cmc
js
fiaddl
cmc
sbb
insb
sarl
lret
mov
pop
adc
mov
in
dec
pop
mov
jle
xchg
and
or
jnp
clc
mov
sub
mov
pusha
jmp
nop
pushl
int3
cmp
es
mov
and
lea
mov
fisttps
scas
sbb
sar
xorb
ds
dec
xchg
shr
in
in
cli
push
add
xchg
mov
lcall
jecxz
adc
or
lret
jg
gs
scas
xchg
jmp
xchg
pushf
ret
in
adc
lcall
push
xor
mov
int
jns
mov
std
mov
add
repz
jmp
mov
sbb
inc
or
ds
mov
mov
cmp
outsl
ljmp
mov
pop
xchg
aam
jl
pushf
fbstp
ljmp
out
add
mov
lods
xorb
inc
jbe
shll
jmp
xor
outsb
add
mov
xchg
and
cmp
mov
dec
lock
jmp
fdivr
xor
cld
fstpt
sub
movsb
dec
bound
loopne
cmpsl
mov
jo
mov
popf
jae
decl
lret
in
pop
pop
ss
test
xchg
into
sbb
movsb
imul
lcall
divl
add
mov
xchg
mov
nop
cmc
outsl
scas
mov
adc
repnz
ljmp
loop
sub
movsb
notl
mov
jp
jns
dec
mov
mov
add
clc
cmp
mov
cmp
ja
mov
cmp
aam
xchg
pop
jp
jecxz
decl
inc
ret
aam
mov
cmc
dec
mov
stos
sub
rcl
in
pusha
and
outsb
daa
arpl
or
test
sar
jmp
fwait
mov
fisttpl
cli
loop
iret
rorb
pop
lcall
test
lock
adc
out
loopne
dec
nop
and
vprotw
daa
in
jle
sub
or
popf
fs
popf
sub
push
add
adc
mov
stc
dec
mov
jnp
sub
pop
add
push
push
fmull
sub
cmpsl
into
sbb
shl
sar
lcall
cmpb
mov
mov
dec
jno
mov
std
add
cmp
fs
or
push
nop
imul
xor
and
imul
jge
fstps
jle
ljmp
ja
jns
sub
dec
icebp
or
lods
mov
das
repz
jb
adc
xchg
dec
cmpsl
lods
and
in
xchg
inc
repnz
scas
dec
adc
fstpl
push
xchg
lods
mov
push
jmp
decl
xchg
int
jp
test
je
imul
push
ljmp
mov
push
cmp
fs
inc
adc
pop
sub
call
mov
and
test
enter
shl
orb
mov
or
pushl
cs
sbb
dec
sub
xchg
mov
stc
loope
push
cmp
sbb
jmp
not
sub
dec
loop
daa
mov
cmc
outsb
push
lea
push
je
das
xchg
mov
fdivl
decl
or
stos
stos
or
ja
adc
in
ret
adc
incl
jle
lods
les
jae
bound
sub
and
mov
pop
popf
or
push
cmp
sbb
sbb
jbe
and
jmp
movsb
inc
pop
xor
xor
cmc
mov
inc
das
shl
jp
add
les
scas
negl
push
and
inc
out
pop
rolb
decl
mov
icebp
xor
mov
fstps
mov
push
and
rol
imul
adc
push
jl
insb
jne
test
push
incl
jp
fwait
cmp
push
ds
in
lds
pop
aam
mov
lea
adc
dec
push
test
flds
gs
xchg
std
hlt
ret
mov
test
cmpsl
imul
and
cli
outsl
xchg
addr16
fmuls
mov
pop
jge
dec
std
mov
aam
or
cmp
das
sub
cwtl
stc
das
push
insl
addr16
shll
adc
rsm
test
push
push
mov
out
cli
jg
and
mov
gs
lock
loope
in
stc
aad
aam
gs
fcomip
lock
fidivl
arpl
popf
mov
push
lds
pop
arpl
call
imulb
cmp
in
lret
push
or
mov
andl
fdivr
sub
scas
incl
insb
add
mov
push
xchg
xor
icebp
incl
lahf
sbb
cmp
push
pop
jg
sub
fisttps
decl
push
add
sbb
mov
or
push
mov
ret
test
aaa
adc
rcr
mov
stc
les
lcall
xchg
xor
testb
and
sbb
push
jbe
hlt
call
or
mov
scas
or
imul
jle
push
jno
add
stc
push
incl
test
mov
cmp
shrl
lcall
mov
cmc
call
call
adc
cmpsl
mov
test
sbb
stos
in
std
push
adc
in
inc
cltd
outsl
add
ljmp
je
adc
into
cmc
push
and
or
daa
push
aas
push
mov
jmp
ljmp
push
pop
flds
hlt
jmp
lods
xchg
and
hlt
mov
lret
mov
mov
sar
ljmp
fnstcw
packsswb
test
inc
cmpsl
scas
aas
dec
gs
or
pop
loopne
call
test
pusha
jbe
int
enter
out
aad
scas
and
das
sub
mov
pop
faddl
std
jbe
int
aaa
cltd
inc
push
cmp
and
cmpsb
and
call
add
cmp
pop
mov
cwtl
scas
ljmp
and
orb
rcrl
sbb
push
sti
mov
and
push
cmp
lcall
ljmp
in
xchg
pop
mov
push
mov
adc
cmpsl
jmp
movsl
ud0
jmp
cwtl
push
les
jbe
hlt
mov
add
push
repnz
sbb
sar
mov
fimull
sub
xchg
add
out
push
ffree
std
or
fsubrl
inc
cmpsb
decl
testl
sbb
jecxz
sbb
ljmp
xchg
test
std
xlat
scas
jle
pop
xchg
jmp
xchg
mov
jne
inc
mov
push
cld
fidivl
fldlg2
lret
mov
xor
sbb
inc
fdivrs
lcall
pop
lahf
push
lods
pop
adc
pushf
adc
cmc
push
enter
imulb
enter
pop
fs
decl
mov
int
loope
and
das
pop
jo
lods
fisubrl
inc
adc
fsubs
call
cmp
pop
inc
sub
dec
jnp
fildl
rcrl
into
outsl
adc
xchg
je
jmp
loop
cld
int3
cmp
leave
cwtl
roll
roll
inc
push
je
decl
aad
notl
sub
scas
pop
out
mov
jl
or
pushl
int
mov
jle
jno
rol
inc
push
xor
cmp
pusha
push
mov
das
sbb
jg
pushl
faddl
lret
sahf
mov
sub
lret
aas
test
sar
lcall
pushf
iret
lret
dec
inc
pop
es
mov
sub
jge
mov
shll
ljmp
ss
sahf
cmpsb
mov
stc
xor
mov
jg
stos
in
test
out
mov
xchg
push
mov
push
decl
sbb
cli
call
jmp
jmp
rcr
daa
jle
shrb
mov
ljmp
cmp
fstpt
push
cmp
enter
lret
lahf
sti
test
jmp
pop
and
inc
and
dec
or
rorb
xchg
adc
push
mov
push
test
pushl
popa
hlt
pop
adc
mov
ss
mov
mov
mov
inc
push
repnz
pop
dec
clc
outsb
push
out
aaa
mov
mov
out
imul
decl
jmp
sbb
inc
sahf
movsb
lods
gs
int
jg
adc
push
sbb
jmp
and
or
das
daa
cmpb
rcl
cmp
add
out
rcrb
mov
push
jmp
sub
mov
cwtl
jns
aaa
push
ret
mov
xchg
mov
lds
inc
pop
nop
mov
lods
outsl
int
incl
xor
out
rcrb
icebp
cmp
jns
daa
out
sbb
jg
ljmp
xchg
dec
inc
ds
out
push
jle
push
loope
aam
int3
sbb
dec
fisubrs
sti
lahf
dec
fldt
mov
adc
cwtl
addr16
sti
dec
cmpsl
sbb
into
and
loopne
mov
fistps
cmp
call
dec
add
xor
jnp
outsl
dec
jo,pn
lret
inc
dec
jge
lcall
sbb
xor
out
sub
xor
lds
rorl
and
andl
pushl
fldenv
add
cmp
dec
imul
push
push
cmp
push
and
pop
aad
scas
inc
push
xlat
call
mov
mov
add
push
jnp
jns
jecxz
lods
push
clc
lret
lea
push
das
clc
mov
repnz
pushl
inc
mov
rcr
mov
sbb
and
sbb
gs
incl
jnp
sahf
sub
mov
push
pop
into
addr16
mov
scas
sub
repnz
lea
ljmp
xchg
ss
rorl
lcall
daa
scas
xor
les
leave
fmul
nop
lods
mov
sbb
ja
rcl
mov
je
mov
push
or
adc
pop
jmp
bound
mov
lret
mov
mov
dec
lret
or
mov
call
popa
add
mov
data16
add
push
jne
jns
xor
pushl
inc
xor
xor
mov
jno
sarb
outsb
add
inc
testb
stos
insl
ret
mov
jmp
decl
mov
je
sub
aas
adc
inc
insl
in
test
mov
inc
out
inc
and
sbb
push
lock
mov
inc
mov
lret
in
insb
inc
lret
ljmp
sbb
xor
add
fstl
sbbb
iret
mov
jmp
sub
ror
stos
cmp
sbb
jns
int3
ds
test
repz
sbb
call
push
sub
push
fldt
jge
push
ljmp
in
pop
sbb
push
adc
mov
les
shlb
outsb
adc
rcrl
jl
cmp
or
mov
pusha
sbbb
stos
out
fwait
jae
lock
nop
incl
cmpb
jne
psrad
and
daa
in
aad
cmp
idiv
xchg
aad
hlt
mov
xor
dec
test
inc
and
add
lcall
mov
fidivrs
inc
test
enter
push
pushf
es
das
and
lcall
scas
lds
jae
insb
sbb
repz
scas
xor
iret
inc
push
fcomip
inc
mov
adc
mov
fldl
sub
fwait
enter
dec
call
lahf
shrl
aas
sarl
adcl
mov
insl
stc
imul
ljmp
aaa
inc
mov
sarl
push
test
out
xchg
inc
fnstcw
or
xchg
pop
test
sub
add
imul
ljmp
inc
sbb
sti
sub
inc
push
add
mov
add
cli
call
sub
lcall
jp
xor
jae
push
pop
mov
adc
in
popf
xor
in
out
pushl
jno
jbe
mov
mov
popa
test
gs
sub
pop
incl
dec
cmc
rclb
fdiv
insl
pop
stos
sbbl
and
out
test
mov
std
notb
rclb
xor
testl
incl
jge
shll
iret
cmp
mov
out
jb
adc
add
dec
mov
pop
jl
mov
sub
dec
jb
jg
push
clc
xor
incl
dec
mov
movsl
scas
mov
clc
push
add
pop
mov
shlb
sbb
adc
aad
incl
inc
sbb
cmpsl
lock
add
jnp
mov
scas
mov
push
jg
lret
sbb
call
xchg
xchg
repz
sbb
int3
lret
scas
cmc
add
jecxz
scas
mov
rcrl
ljmp
sar
pop
test
mov
pop
pop
scas
pop
push
mov
fdivrl
lcall
pushf
test
push
mov
jnp
push
aam
cli
sub
jmp
mov
xlat
push
pop
test
lds
es
leave
orb
mov
mov
out
xchg
mov
popf
or
mov
xchg
sbb
push
ss
mov
pop
xchg
ret
neg
fdivr
in
clc
sub
icebp
std
and
fs
lcall
add
cwtl
sub
lcall
jge
in
loope
jbe
std
mov
cmc
xchg
jp
jo
or
scas
xor
decb
dec
push
and
and
in
inc
mov
sti
sub
mov
mov
jae
dec
xor
adc
pop
lock
in
pushl
adc
dec
push
push
int3
imul
pop
loopne
aam
adc
addr16
dec
mov
enter
sbb
inc
sbb
fwait
jns
xchg
repnz
jg
sub
lock
test
add
push
in
jno
cmp
stc
cmp
mov
in
imul
les
mov
call
out
outsl
cmp
sbb
sbb
iret
je
hlt
daa
outsb
cwtl
lcall
decl
jmp
xor
pop
lcall
xor
add
dec
sahf
mov
add
pushl
jmp
and
push
nop
ljmp
or
aaa
idivb
icebp
popa
lcall
xchg
mov
xchg
push
adc
inc
push
mov
cmp
jecxz
fcompl
rsqrtps
lret
stos
jns
cmpsl
out
or
xor
pop
int
in
push
lret
incl
mov
xchg
add
push
movsb
out
jno
fdiv
adc
fcomip
ljmp
jnp
loopne
push
mov
mov
mov
fmull
sbb
inc
xchg
icebp
insb
stc
adc
out
push
cs
imul
push
sbb
outsb
sahf
call
xchg
int
out
ret
jge
movsb
roll
test
lcall
frstor
ljmp
add
outsl
test
adc
repnz
nop
push
jbe
cmc
das
insl
push
loopne
hlt
pushl
cmp
inc
sbb
xchg
insl
inc
inc
ret
sbb
fldt
dec
shlb
loopne
ja
hlt
lock
mov
add
adc
xor
inc
imul
stos
push
mov
repz
add
fldt
and
lcall
cld
adc
ljmp
xor
cmp
mov
jo
std
pushl
mov
push
ja
popf
idivb
sub
or
lcall
jp
ret
cmp
pop
sbb
scas
push
icebp
xchg
xchg
push
movsl
xor
mov
mov
lcall
fildll
adc
xor
insb
adc
xlat
dec
pop
xor
ficompl
dec
ljmp
sbb
sub
repz
cld
pop
cli
sbbl
fildll
in
hlt
or
sbb
mov
mov
call
cs
mov
fwait
mov
push
addb
cmc
movsb
add
gs
jb
dec
loop
jg
inc
or
sub
lods
ds
repnz
cwtl
adc
sarb
mov
inc
add
int
ret
jmp
pop
mov
jle
jns
or
cmp
rcrl
pop
shrb
cmp
nop
jne
inc
and
imul
sbb
fidivs
popf
mov
push
and
fs
pop
adc
fisubs
add
mov
cmp
std
or
bound
cmp
loope
jecxz
jle
pop
mov
mov
adc
lea
ljmp
inc
dec
or
movsl
push
fsubl
sahf
lods
leave
jbe
mov
pop
filds
fcos
lcall
insl
xchg
movsl
mov
insl
pop
movsb
sub
call
arpl
xor
lcall
repz
push
xchg
mov
ja
call
or
sbbl
outsb
mov
aam
inc
mov
out
fs
dec
sahf
or
pop
adc
and
int3
decb
push
stos
lahf
shlb
add
ds
cmp
jnp
ljmp
mov
aaa
outsl
mov
in
jp
mov
push
pop
jne
lret
lods
mov
adc
das
sub
adc
out
xlat
dec
pushf
fimuls
cmp
xor
lea
popa
jmp
dec
fildll
sub
out
cmpb
lock
inc
cmc
mulw
push
xorb
loop
pop
mov
mov
add
inc
out
pop
mov
ret
test
fs
sahf
jae
lcall
pop
adc
or
mov
pushf
jb
pusha
addl
jp
and
mov
pushl
mov
mov
fnstsw
int3
sbb
aas
fadds
mov
out
mov
imul
scas
repnz
data16
jle
ljmp
out
test
inc
xor
popa
loopne
xchg
shlb
xlat
sbb
pop
gs
lret
push
imul
sbb
xchg
pop
jbe
pop
cmc
jmp
mov
jle
ljmp
mov
bound
cmp
call
inc
push
sbb
and
dec
mov
seta
shrb
add
adc
sbb
cmp
lret
popf
call
push
push
arpl
mov
inc
and
lods
test
add
aad
pop
cmpb
fcomip
decl
sahf
aad
mov
xlat
inc
call
stos
push
xorb
decl
push
nop
leave
scas
movb
sbb
jmp
clc
call
leave
lods
bound
push
fiaddl
add
xchg
add
dec
mov
mov
shlb
dec
cli
out
cmp
or
fwait
loope
call
outsl
inc
aas
push
jns
mov
adc
cmp
incb
dec
push
lods
cmp
bound
decl
stos
sbb
push
pop
inc
mov
in
in
movsl
add
push
mov
incl
ss
jecxz
pop
cmp
pushf
mov
pop
push
xchg
xchg
sub
ljmp
dec
mov
jl
lret
add
lahf
jl
cmc
es
dec
jmp
fdivr
incl
sbb
in
sbb
gs
mov
push
xor
shll
dec
loopne
in
jb
xor
decl
cs
int
ret
out
mov
pop
repnz
pop
adc
repnz
fdiv
incl
andb
dec
fisubl
out
scas
cmp
mov
sbb
fstps
arpl
mov
dec
out
sub
js
lock
mov
mov
mov
aas
mov
add
dec
jns
rcr
mov
subps
mov
out
and
pusha
lcall
movsb
push
xor
pop
mov
lods
or
add
mov
imul
gs
push
leave
push
xchg
jmp
pushw
scas
out
cmpsb
push
fcoml
daa
pop
lds
arpl
sbb
jns
ljmp
sarb
adc
adc
push
les
nop
decl
xor
jo
xchg
sbb
fistps
mov
lods
sbb
incl
mov
add
mov
sbb
das
push
push
std
adc
insb
jae
cld
and
call
pushl
adc
sbb
test
movsl
fcmovb
scas
ja
ret
fldl
and
dec
nop
mov
ret
dec
sbb
scas
mov
jmp
lds
cs
insb
lock
dec
adc
data16
arpl
jmp
shll
mov
cmp
mov
fstpt
loop
pushl
adcb
jle
cltd
js
int
cs
adc
sahf
out
ret
call
addr16
jg
testb
mov
scas
cli
loope
add
adc
jae
in
pop
call
incl
stos
outsl
outsb
push
jmp
xor
and
sar
ljmp
mov
dec
nop
mov
dec
aam
lea
loope
mov
loopne
pop
pop
sub
scas
jecxz
pusha
mov
cmp
push
and
outsb
mov
iret
cs
gs
xor
aaa
jns
dec
add
ljmp
popf
push
jns
or
aaa
push
push
dec
fists
icebp
das
stos
repnz
jmp
mov
or
loop
mov
insb
clc
fcom
ret
mov
jg
mov
mov
xlat
sahf
dec
cmc
pop
out
outsl
test
fcomps
decl
lcall
loope
inc
data16
add
ss
loop
addr16
mov
icebp
dec
mov
fsubr
xchg
xchg
mov
lahf
outsl
push
add
sub
fdivp
mov
cmp
filds
decl
mov
xchg
aas
test
xor
jp
pop
lock
dec
sbb
out
pop
dec
or
mov
sub
ud0
out
movsb
sub
fsubs
fisttpll
stos
call
pop
adcb
outsb
mov
inc
outsb
pop
stos
xlat
fdivrs
into
sub
pop
jl
lods
fsubs
mov
notb
push
pusha
xor
pop
add
mov
pusha
ljmp
mov
loope
pop
icebp
pushl
pop
dec
inc
xchg
sarb
xchg
jg
push
pop
xchg
sbb
insb
aam
popa
decl
jnp
jns
ljmp
movsl
cwtl
sub
inc
lahf
and
push
mov
cmpsb
jne
call
incl
sub
cli
movsl
dec
fmul
aam
jmp
xchg
mov
jae
inc
fcomip
jmp
or
rcll
push
mov
mov
orl
pop
mov
ljmp
ret
fsubrl
in
fptan
jecxz
push
dec
gs
sub
popa
cmc
scas
ret
mov
inc
dec
cld
aad
jae
scas
lret
jg
lret
decb
outsl
dec
pop
clc
ja
stos
pushf
aam
pop
outsl
cli
cwtl
or
or
xor
jns
xor
jg
test
outsl
out
lds
or
fldenv
jecxz
mov
fistpl
ljmp
mulb
adc
push
out
sbb
gs
lods
mov
adc
scas
sbb
sti
cld
or
cli
outsl
fimuls
dec
addr16
loopne
inc
xchg
sbb
roll
cmp
out
test
ljmp
rcr
pop
js
fildl
leave
add
mov
bound
xor
cmp
cmpsl
sub
ja
icebp
or
lret
xsha1
cmpsb
dec
into
sub
and
cmp
push
or
dec
addr16
or
aam
dec
cmpsb
push
ds
push
push
mov
repnz
dec
pushl
xchg
jbe
cwtl
xchg
pop
jle
mov
fucom
jp
sbb
loopne
add
lcall
pop
mov
push
aas
out
setp
mov
xchg
gs
bound
and
movb
decl
lret
lods
xorl
and
clc
and
dec
scas
push
fwait
call
mov
adc
inc
add
xchg
ja
and
mov
dec
mov
pushf
cmovle
adc
xlat
and
std
jg
into
pop
lcall
in
jge
outsb
sub
jo
ljmp
or
js
xchg
ds
test
test
inc
in
int3
leave
cmp
inc
add
mov
int
cmp
notb
add
xor
inc
sbb
push
sbb
push
rol
repnz
pop
in
inc
jp
mov
sub
fldt
xor
pop
dec
fmuls
mov
push
or
mov
pop
cli
sub
cs
jmp
sbb
xor
inc
jmp
es
fst
push
add
js
mov
mov
incl
test
mov
rcrb
out
jb
bound
mov
pop
stc
mov
sub
repnz
push
aaa
imul
fists
imul
mov
pop
push
mov
add
pop
cmc
mov
test
out
cmp
test
cmp
ljmp
jge
call
inc
sbb
push
shl
hlt
fidivs
sub
xorl
jecxz
xchg
outsl
rolb
mov
cmp
jmp
xor
pop
inc
xchg
mov
and
sbb
mov
data16
jle
aam
jnp
cmp
cmc
pop
das
rolb
jno
sub
xchg
xchg
repz
movsl
or
jmp
dec
lods
add
jae
dec
je
dec
ds
sbb
mov
pop
loopne
clc
cmc
outsl
negb
std
leave
mov
cmpsl
sbb
push
add
mov
mov
rorl
test
sub
std
xor
lcall
mov
lock
loope
cwtl
pop
mov
scas
cwtl
int
aaa
inc
xchg
fcoml
decl
lds
cmp
cs
loop
jns
outsw
pop
cmc
arpl
ljmp
xchg
push
fs
jp
fwait
and
jp
jg
mov
pusha
xorl
inc
test
fsubl
sbb
sub
inc
and
jns
fimull
pushl
std
xchg
and
or
scas
lahf
push
sbb
sub
dec
jns
dec
adc
pop
pushl
dec
and
sub
aad
sahf
fiadds
mov
leave
cs
out
clc
push
sbb
call
xchg
dec
out
scas
xor
lcall
add
lcall
mov
imulb
mov
addr16
push
pop
sub
inc
pop
xchg
pop
jbe
or
addl
punpckhdq
and
cmpsb
inc
imul
popf
cmp
into
mov
cli
sub
out
fs
sbb
jg
int
jmp
xor
adc
mov
call
into
mov
xchg
sub
pusha
sahf
lret
inc
ss
int3
pop
decb
movsb
popa
scas
fildll
push
and
enter
fwait
mov
inc
loop
xor
pop
movsb
cld
or
mov
push
lret
xor
call
shrl
mov
call
out
inc
cmc
mov
and
rcrb
in
andb
jmp
jbe
sub
in
jmp
ret
pop
daa
lea
test
adc
decl
lock
mov
js
dec
ss
dec
inc
push
adc
cmpsb
sbb
mov
jmp
sarl
sarb
and
ds
xchg
ficoml
sbb
adc
and
fcomip
jnp
nop
ss
not
cmp
and
or
call
ljmp
pop
mov
bound
mov
adc
in
or
enter
cli
out
repnz
xor
mov
cmp
mov
sub
mov
stc
push
inc
xorl
and
out
test
fmull
lcall
gs
in
pop
push
dec
lret
mov
rcll
push
in
xchg
nop
adc
jg
lcall
mov
call
aam
fistpll
sbb
inc
and
lcall
push
mov
in
addl
arpl
xlat
nop
leave
and
sbb
dec
mov
call
adc
jno
add
call
ror
and
loop
in
xor
add
mov
sub
call
lret
inc
inc
xchg
add
inc
sub
mov
fdivr
repz
out
and
popa
loope
popf
mov
in
push
add
in
fisttpll
cltd
in
cltd
repnz
sbb
aaa
mov
out
loopne
in
test
adc
jecxz
mov
into
pop
cmp
arpl
cmp
ja
out
inc
push
push
mov
inc
movsl
push
fcmovb
cmp
stos
js
xchg
aas
sahf
sbb
xchg
mov
repnz
inc
push
and
insb
sbbl
jle
adc
cmp
call
psubw
mov
sbb
push
shlw
sbb
popf
dec
jae
daa
imul
jae
cmp
fisubs
mov
in
xlat
insl
int
lds
xchg
pushf
lods
jb
jecxz
loop
clc
int3
repz
pushl
out
inc
dec
cwtl
jge
push
xor
scas
inc
xlat
cli
and
xor
fsubrs
popf
xchg
sbb
push
dec
arpl
xchg
fbstp
adc
sub
sub
push
bound
cmp
sub
jp
mov
dec
call
inc
ds
mov
scas
int3
inc
sbb
adc
ds
adc
mov
sub
lcall
adc
rclb
call
add
pop
loope
scas
stos
jge
int
mov
push
cld
decl
ror
inc
imul
iret
es
sbb
movb
mov
test
call
ja
dec
push
xchg
outsb
lcall
mov
mov
jns
ret
pushf
nop
xor
and
lret
xor
leave
sti
imul
loopne
addl
jge
xchg
mov
clc
outsl
lock
mov
or
mov
out
push
gs
out
lock
xlat
repz
and
out
mov
add
cmc
test
lahf
adc
mov
insl
jmp
xor
sub
and
or
nop
lahf
push
mov
ljmp
movsl
subb
cmpsb
stos
sub
pop
push
pusha
pop
push
jmp
inc
pop
iret
mov
jg
pop
nop
jecxz
inc
fdivr
fisubs
pop
jmp
xor
jecxz
movsb
jg
cmc
subl
ljmp
sub
and
imul
adc
gs
jg
pushl
fadds
lock
mov
fbld
lret
femms
push
cmc
incl
outsl
mov
push
or
xchg
loope
mov
pop
js
shlb
sar
and
negb
sbb
pop
cwtl
rorl
popa
inc
mov
jmp
cmp
ret
xor
jnp
push
loope
rolb
mov
decl
cmp
and
stc
lret
add
xchg
je
inc
sub
incl
cld
lcall
sbb
cmpsb
sub
and
jne
ja
incl
orl
and
sbb
push
and
insl
xlat
mov
aaa
stos
adc
pushl
cld
and
test
ret
jmp
je
in
push
add
xchg
iret
in
jg
jb
rol
mov
cs
call
push
addr16
fisubs
jp
mov
push
sub
loop
sbb
inc
adc
jmp
push
insb
or
xor
mov
sahf
push
push
mov
data16
xchg
incl
mov
fwait
rcl
jge
mov
add
pop
ret
lcall
or
std
ss
decl
push
scas
insb
fs
sbb
xchg
cmp
xor
cli
dec
mov
jo
jne
sbb
incl
inc
imul
fs
pop
jmp
dec
adc
lods
shll
mov
push
lock
xchg
nop
add
ljmp
repz
push
outsl
mov
ret
loope
jge
jle
cmp
mov
adc
pop
repnz
ja
call
sub
inc
scas
push
aaa
sub
sub
mov
push
mov
mov
and
out
outsb
lods
xchg
lret
shrl
incl
in
sbb
push
xchg
test
pop
sbb
jg
pop
fmuls
pushf
and
stc
loop
cs
jl
lahf
icebp
cmp
fs
gs
pop
ret
loope
jne
out
mov
lcall
mov
ljmp
cmp
adc
sub
mov
xor
into
push
int3
sahf
aas
rcll
dec
add
call
aad
lock
rorl
cmc
fdivrl
push
sbb
sub
push
jmp
dec
pop
mov
mov
loop
clc
lods
pop
mov
xor
push
popa
jge
push
call
out
xchg
cmpb
test
bound
test
sbb
inc
jl
xor
lcall
pushl
pop
jb
cmp
sub
lock
mov
pushl
dec
sar
pushl
xchg
test
into
add
pop
mov
jns
aas
cmp
push
cld
decl
and
mov
fists
out
sub
mov
adc
mov
adc
call
shl
not
xor
adc
test
stos
sub
sub
lcall
mov
sub
or
and
jns
mov
jo
xchg
fistpll
adc
cmc
jl
adc
mov
shll
inc
mov
pop
js
inc
xchg
xor
lock
and
mov
je
jecxz
xor
push
sub
repnz
ret
movsl
xor
jg
mov
xchg
jp
and
pop
dec
mov
mov
fstpt
cld
jno
sub
pop
outsb
xor
adc
mov
adc
mov
ret
push
adc
xor
decl
sbb
add
mov
pop
inc
decl
push
xlat
adc
nop
loope
call
mov
int
popf
pusha
mov
mov
sbb
sub
ljmp
stos
mov
fcomip
decl
inc
inc
xor
pop
faddl
lods
mov
shll
fildll
push
insb
fldcw
or
jo
lcall
mov
shrb
push
mov
aam
repnz
out
jl
ss
fbstp
push
js
test
es
aam
call
xchg
rcll
mov
fs
pushf
adc
test
sub
adc
add
cmp
clc
andb
movb
pop
push
push
lcall
xchg
jo
in
xchg
pop
mov
sub
push
ret
cmpsb
mov
imulb
call
sbbb
cmovns
push
and
sbb
data16
mov
jbe
nop
out
xor
adc
scas
add
into
sbb
scas
inc
sbbl
sti
push
pop
cmpsl
push
lret
mov
scas
jbe
mov
clc
or
mov
out
das
gs
fwait
repnz
fdivrp
push
sub
and
jg
mov
add
adc
leave
aam
inc
pop
clc
jbe
cmp
mov
jle
sti
ret
test
bound
frstor
dec
clc
jge
popf
clc
shll
adc
nop
xchg
add
pop
push
push
xlat
jecxz
shrl
fld
inc
pop
jl
sbb
mov
jno
push
inc
adc
lods
ret
adc
or
clc
jg
ljmp
add
or
popa
ds
mov
dec
jbe
xchg
mov
outsl
int3
xchg
call
or
sbb
jae
cwtl
movsb
xchg
mov
jno
ss
cs
lcall
jle
or
cvtps2pi
js
cmp
sahf
mov
xor
rolb
push
inc
insl
add
ljmp
mov
pop
in
jge
rclb
movq
fmuls
icebp
pop
int
lcall
test
aaa
setae
add
xchg
push
rorb
sub
pop
rcll
pushl
lret
cmpsl
int
das
lds
jp
call
pause
mov
call
lods
repnz
rorl
mov
push
rcl
mov
aas
jae
xor
xchg
cmc
push
cld
cmp
and
test
mov
es
push
popf
jo
fsts
fildll
adc
cmp
cld
or
lcall
lods
lcall
mov
lods
jmp
test
jmp
fisubs
andb
pop
popf
subb
cwtl
or
idivb
pushl
mov
mov
and
adc
bound
jne
sub
data16
lret
sbb
imul
stos
loopne
out
pop
adc
push
sbb
les
and
icebp
jmp
xchg
ja
jb
mov
xor
cmpsl
push
fs
xlat
pusha
adc
imul
call
loope
sbb
sbb
test
adc
xor
dec
insb
fbstp
adc
ret
inc
jecxz
sbb
and
add
out
sbb
inc
loope
shl
and
in
push
stos
inc
ficomps
jp
sub
pop
imulb
inc
jnp
ljmp
ret
loope
xor
inc
adc
in
xchg
or
ror
cmc
mov
adc
and
nop
inc
in
lods
rol
pop
push
in
and
jmp
lahf
jne
jo
sub
pop
push
or
imul
sarb
inc
js
cli
xchg
jg
test
rcl
add
sub
popf
jbe
push
insb
adc
sti
push
test
ljmp
mov
inc
push
adc
sbb
lods
scas
ljmp
pushf
xchg
xor
lcall
test
sub
data16
sbb
xor
mov
decl
sub
pop
mov
iret
cld
fdivr
ds
or
repz
or
add
scas
push
push
push
ljmp
js
scas
ret
cmp
and
adc
mov
test
or
ja
lcall
push
sub
xor
cmc
mov
cli
ss
lahf
out
out
bound
cmp
pop
cs
or
insl
in
sahf
push
ja
cs
rcl
sbb
call
int
pop
mov
mov
cmpsb
cwtl
mov
test
bound
leave
adc
ljmp
pushl
jmp
push
imul
xchg
push
and
pushf
movsb
pop
dec
into
inc
sbb
cli
push
mov
mov
loopne
fs
insb
lea
dec
adcb
cmp
mov
xorb
xor
and
adc
jecxz
fsubs
in
inc
or
decl
loope
jp
imul
std
inc
in
xchg
and
das
call
mov
or
shlb
jno
xchg
cmp
int
rcll
and
aaa
std
stos
sbb
into
adc
fldcw
aam
lret
jbe
cmpsl
or
in
lret
imul
loope
scas
sbb
call
lock
dec
or
out
jg
jne
cli
mov
out
in
add
pop
adc
sbb
pop
lock
push
call
rcll
call
or
push
mov
push
add
jmp
mov
shlb
orl
sarl
xor
jmp
mulb
jns
andl
pop
out
hlt
pop
ja
lods
ljmp
decl
pop
push
jnp
cmp
test
jno
pop
mov
test
jp
cli
jae
loope
mov
call
and
adc
stos
sbb
pusha
aas
pop
dec
test
or
stc
xchg
xor
lds
or
popl
xor
ja
jmp
xchg
mov
popf
jne
push
bound
adc
and
ljmp
outsb
pop
clc
sbb
negb
mov
mov
aas
inc
sub
pop
rcr
adc
cmp
sub
aam
sub
cs
adc
dec
ret
pop
test
sub
sbb
jle
or
cmp
mov
mov
outsl
mov
andl
mov
pop
out
clc
ljmp
xor
scas
in
ret
adc
sbb
pop
push
filds
adc
andl
out
mov
add
push
xchg
push
out
les
andb
pop
dec
and
dec
stos
or
lock
lcall
mov
lods
daa
sub
xor
imul
into
fstpt
pushl
out
rclb
cltd
insl
call
push
outsb
pop
cmp
xchg
adc
clc
mov
adc
or
fs
ljmp
or
pushf
cltd
mov
inc
pushl
std
lcall
push
adc
adc
adc
cltd
lret
and
and
arpl
incl
rorb
ja
cmp
dec
in
xchg
test
sbb
jp
mov
xor
dec
ret
les
dec
mov
and
andl
mov
incl
jmp
cmp
push
imul
fsubrs
add
out
xor
lcall
outsb
xlat
dec
cmp
mov
or
sub
inc
cmc
bound
shl
cmp
call
cmpsb
dec
popa
in
jbe
sbb
pop
lods
stos
out
sub
in
and
fistl
cltd
and
lea
push
shll
add
jnp,pt
dec
fcompl
iret
loope
movsb
push
addb
adc
sahf
xchg
adc
arpl
rolb
push
aam
sbb
adc
cmpsl
insl
push
adc
mov
idivl
fldz
es
adc
jo
jmp
out
cmp
mov
sbb
jne
cld
rcrl
lahf
iret
mov
imul
jp
jo
imul
cli
jp
out
out
aam
push
cs
ss
loope
sub
xchg
add
scas
loop
leave
or
add
lcall
jle
cmpsl
mov
in
push
sahf
mov
jo
pop
js
rolb
and
test
pop
sti
pushf
and
mov
ljmp
lea
sub
imul
scas
icebp
cmp
cmp
fdivl
mov
aad
xchg
xchg
fcom
push
sub
sysret
cmc
ss
adc
cli
ja
in
clc
mov
popa
notb
push
pop
insb
aad
inc
nop
fistps
cmp
adc
sbb
dec
or
clc
out
aaa
leave
loope
push
xchg
hlt
popf
repz
sbb
add
pop
push
cmp
int3
outsb
xchg
jmp
imul
jnp
ret
xchg
mov
rcr
dec
les
mov
mov
jne
mov
cltd
in
jmp
decl
mov
and
xchg
lea
push
enter
mov
adc
ud0
mov
jbe
adc
fdivrs
sbb
test
xor
das
aas
cld
pop
std
push
adc
push
neg
lcall
push
lret
pop
cld
incl
jno
push
sbb
xor
lret
mov
insb
add
push
jno
hlt
lahf
in
data16
fwait
adc
lcall
xchg
jmp
mov
adc
lods
jnp
xlat
into
scas
jnp
mov
pushl
inc
fs
nop
cmp
mov
decl
dec
iret
cld
out
push
or
out
out
push
push
mov
mov
mov
mov
sub
out
cli
lcall
fcoml
add
in
lret
ss
enter
or
cld
add
inc
xchg
mov
mov
shr
data16
lret
je
pushl
aam
faddl
xor
in
test
sbb
xlat
xor
je
push
movsl
or
dec
jb
pop
decl
inc
shrb
jo
fsubrs
jge
jno
test
xchg
shll
test
ret
jmp
js
popa
gs
push
xchg
shlb
sahf
cmp
sub
jg
into
cmp
push
xchg
lahf
cmpsl
xchg
jb
ret
lcall
test
btc
dec
ljmp
scas
inc
icebp
outsl
in
cwtl
test
push
test
xchg
dec
mov
pop
fbstp
and
mov
jmp
push
and
pop
or
int3
stos
push
clc
jb
add
cmp
fstpt
dec
adc
lret
cmp
cld
ljmp
out
movsl
xlat
jle
jge
ss
jle
daa
jg
leave
push
insb
sbb
cwtl
xchg
call
xlat
and
adc
adc
hlt
ss
sub
push
int3
cmp
test
lahf
or
mov
dec
or
jmp
cmc
inc
xchg
mov
lock
cmc
xchg
xor
xchg
or
outsl
mov
clc
shrd
xor
lods
and
push
sbb
push
mov
pusha
mov
test
cmp
fistps
mov
call
mov
push
adcl
xchg
lret
adc
movsb
or
popa
roll
jl
cmp
mov
jl
rcll
jb
xchg
mov
call
mov
mov
jns
and
lods
xchg
shlb
aaa
xchg
mov
aas
jae
adcl
out
sar
sbb
in
arpl
pop
jne
sbb
inc
add
decl
scas
jns
sbbb
imul
push
add
mov
or
jecxz,pt
pop
adc
lret
mov
cwtl
cmc
lret
out
cld
mov
add
decb
cmp
jg
dec
push
in
aaa
mov
cmp
mov
sbb
dec
rcrb
mov
int
pop
and
test
xor
xor
outsl
test
mov
sti
mov
mov
xchg
daa
mov
cmp
sbb
dec
mov
push
lahf
pop
xchg
pushl
mov
orl
sub
lods
mov
loope
insb
push
jg,pt
adcl
push
fisubrl
add
mov
test
adc
idivl
outsb
mov
ljmp
xor
jnp
jne
push
sub
mov
loope
insb
adc
ljmp
jecxz
ficomps
push
std
sarb
lahf
xchg
add
cmpsl
adc
jg
icebp
mov
mov
dec
mov
loope
add
rolb
imul
mov
mov
fs
out
bound
aas
ss
lock
pop
ret
lahf
xor
lret
mov
push
pushl
xor
mov
lds
jmp
mov
push
sub
js
pop
in
xchg
jmp
aam
adc
aaa
hlt
pusha
xchg
jb
fistps
call
daa
je
add
nop
xor
inc
jnp
dec
call
mov
sbb
in
jecxz
jnp
mov
jecxz
pop
push
sar
jmp
or
jmp
dec
jo
adc
push
dec
scas
in
dec
shl
push
movsb
jb
xor
clc
jg
xor
add
pop
pop
pop
or
ljmp
jmp
cmp
outsl
shr
push
pop
icebp
push
and
sbb
add
jl
inc
incl
dec
xor
inc
mov
mov
lods
daa
adc
dec
jl
ljmp
idivb
subl
sbb
js
mov
cmc
js
sbb
pop
cld
ljmp
and
loope
push
mov
jo
xchg
cmp
push
mov
jg
inc
inc
aad
adc
pop
cmp
fst
add
jmp
clc
test
sub
mull
fsubrl
mov
nop
xor
jg
loop
icebp
mov
pushf
pop
rclb
fistpl
fnstsw
fisubrl
xchg
lcall
mov
mov
xor
pushf
adc
popf
imul
cmp
sbb
jge
cltd
and
push
hlt
xlat
fists
mov
call
dec
pop
out
int
incl
dec
push
jmp
dec
lret
jl
loopne
adc
sarb
push
pusha
push
aad
imul
call
gs
cli
cld
push
stc
sbb
push
inc
pop
shll
xor
fsubs
push
dec
enter
xor
jp
inc
xchg
out
push
gs
nop
mov
movsl
lods
into
jge
sar
das
clc
call
sub
push
fisubrl
inc
test
je
addr16
cmc
imul
decl
insb
inc
stos
adc
fadds
cli
jmp
cmp
stc
mov
push
jmp
insb
jo
jge
test
popf
and
dec
fstl
dec
mov
pop
imul
push
ret
jb
stos
fcmovnbe
add
js
cmpsl
and
push
cmc
sub
mov
loop
out
pushf
fsubr
aas
movsl
pushf
jp
popf
sub
adc
outsb
or
pop
push
sbb
ljmp
scas
cmp
das
fwait
mov
and
jb
jo
sub
mov
fsubs
pushl
fbstp
incl
daa
xor
out
mov
notb
mov
sbb
jb
dec
xchg
mov
inc
outsb
or
sti
shrb
jnp
push
mov
inc
fildll
push
call
or
sub
and
dec
push
call
lcall
call
or
out
int
in
scas
mov
cli
ja,pn
add
fcomip
in
pop
loope
mov
je
mov
fs
fisttpl
push
jmp
push
mov
ss
andb
lcall
xor
loope
cld
enter
leave
int
roll
adc
lcall
in
pushf
pusha
dec
bound
pop
xorb
insb
pop
jo
ds
loop
adc
gs
fcomip
push
mov
out
xchg
add
pushf
js
xchg
push
ret
pushf
or
jge
movsb
cltd
loopne
decl
inc
mov
and
xchg
movsb
and
sbb
jns
adc
cmpsl
stos
cli
lahf
call
push
xchg
das
xor
aam
test
in
push
sarl
xchg
movb
jmp
test
clc
add
js
dec
mov
or
stc
jg
inc
xchg
mov
bound
mov
push
fsqrt
das
xor
fwait
cld
jg
sbb
mov
in
call
cld
test
cld
cmp
pop
xchg
lds
cmpsb
inc
aam
nop
loop
add
popf
pushl
push
ret
dec
mov
test
sbb
xlat
jae
xchg
and
sub
decl
aam
pusha
mov
adc
add
data16
insl
cmpsl
push
ss
cmpsl
jae
push
cwtl
and
push
mov
mov
movsl
ja
pop
and
dec
pop
mov
subb
push
notb
clc
pushl
iret
sti
lahf
pop
and
adc
xor
subb
movsb
mov
sub
mov
jmp
push
in
cmp
fcoms
cmp
stos
jecxz
mov
jmp
shll
push
mov
jne
xchg
or
jnp
dec
adcb
lret
xchg
pop
adc
ljmp
xchg
sub
test
fisubrl
imul
pop
repnz
mov
pushl
pop
xor
jo
les
cmp
lcall
push
xor
sub
pop
fcomip
decl
adc
mov
imul
xchg
sub
call
pop
push
dec
cmpsl
imul
pop
aas
push
fistpl
xchg
mov
dec
out
sub
or
call
sahf
or
sub
pop
lea
sbbb
adc
ljmp
mov
bound
cmp
pop
xchg
pop
aam
cmpsl
out
adc
sub
inc
xlat
jg
testl
rcl
dec
jecxz
ret
in
cli
jmp
into
rol
and
pop
xchg
add
fisttpll
push
popl
push
mov
push
add
outsl
xchg
inc
shl
mov
xchg
dec
sbb
or
mov
push
rsm
in
mov
push
inc
dec
outsl
imul
out
cmp
repz
inc
inc
ss
push
mov
testb
jmp
out
cmp
mov
mov
fisubrs
push
pop
push
add
xor
decl
cld
jo,pt
add
mov
ret
addb
jne
jae
sub
ljmp
ds
cli
ret
jl
je
mov
ret
pop
out
sbb
and
fs
mov
andl
sahf
or
mov
pushf
add
dec
jmp
rorl
test
lahf
lods
das
js
cmp
mov
xor
xor
pop
fsts
pop
call
xor
addb
xchg
jmp
inc
les
inc
xor
xchg
pop
rcrl
xor
sub
sub
mov
add
out
andb
jno
pop
jp
adc
daa
jmp
dec
push
sub
loope
mov
dec
jnp
fbstp
and
sub
popa
mov
mov
cmp
lahf
inc
jl
pusha
in
cld
jg
loopne
scas
nop
cmc
mull
mov
call
int3
aad
lods
cltd
nop
out
fnstcw
imul
dec
pminub
fwait
movsl
lea
push
pop
cmp
cmc
pop
fwait
mov
fisttpll
sbb
or
repnz
call
idivb
not
dec
add
test
inc
test
lret
xor
icebp
or
cmp
mov
sbb
push
sub
jle
ljmp
pop
xor
loopne
add
push
mov
pop
adc
jg
andb
dec
adc
les
fcmovu
rclb
push
dec
mov
call
mov
sub
push
mov
or
pop
dec
and
jo
or
and
push
mov
sar
fcomip
call
bnd
sarl
ljmp
popf
push
mov
pop
sub
roll
mov
orb
push
adc
jmp
mov
es
sbb
xchg
fcoml
add
rcrb
and
cwtl
stc
xchg
adc
mov
jo
mov
push
in
jle
insl
inc
sub
leave
mov
cmpsl
inc
leave
andl
dec
cmp
cmp
cwtl
mov
outsl
std
push
mov
fstps
out
sub
adc
cli
push
subb
lret
adc
test
pop
lods
iret
add
pop
ljmp
mov
fisubrs
xchg
jno
cli
adc
add
stos
adc
dec
dec
dec
cmp
incl
and
push
hlt
arpl
adc
sub
int
js
add
sarb
jmp
shlb
lret
xlat
mov
cmp
and
mov
fs
dec
and
je
mov
fcoml
lret
mov
and
in
dec
sbb
fcmovnb
push
push
cmp
test
lods
clc
pushl
jbe
and
mov
packuswb
data16
pushl
aaa
fistpl
and
xor
mull
mov
nop
dec
add
lods
adc
lock
adc
fstl
sbb
jg
lcall
inc
push
lahf
push
dec
arpl
adc
jmp
mov
into
sbb
in
fdivl
mov
mov
cmp
xchg
and
inc
in
outsl
andb
arpl
bound
loope
ljmp
sub
dec
ret
mov
out
xor
inc
mov
fadds
std
imul
es
sub
push
cli
sub
jmp
fdivrs
add
std
adc
sub
or
sbb
aam
mov
popf
insl
dec
out
stos
sahf
in
rorb
pop
push
std
mov
xchg
lods
ret
dec
jns
lock
adc
xchg
lcall
mul
xchg
mov
pushf
movsb
sub
mov
mov
dec
cmc
add
mov
daa
out
jg
call
fildl
jne
je
mov
in
insb
gs
fimull
jmp
sub
adc
dec
add
shlb
fdivrl
mov
adc
lods
push
jae
sub
mov
sub
mov
lcall
bound
dec
or
xchg
dec
xorb
mov
pop
and
fstps
call
fbld
fisubrs
in
adc
stos
adc
mov
add
push
lcall
inc
lahf
pop
jo
stc
stos
xor
push
pusha
imul
stos
mov
decb
ljmp
jl
test
xorl
arpl
dec
lret
cmp
incl
xor
add
dec
pop
add
arpl
push
mov
mov
pop
xlat
jmp
lock
mov
mov
test
adc
testb
push
mov
jmp
and
scas
adc
ja
mov
xorb
add
call
icebp
pop
stos
out
push
inc
pop
push
sbb
movsl
or
sarb
int
pop
mov
jns
jb
dec
and
sub
lret
xor
cmp
fldl
call
testl
mov
cmpl
adc
dec
cmp
push
loope
mov
sbb
pop
and
stos
stos
push
les
mov
cmpsb
das
movsb
jne
inc
and
mov
add
mov
or
sub
repz
imul
lcall
fsubp
sub
cmpb
loop
xchg
dec
xchg
xchg
or
roll
fistpll
popf
or
jmp
dec
int
mov
mov
mov
and
and
test
cmp
pop
mov
sbb
pushf
or
sub
xor
adc
insl
outsb
pop
lods
cmp
loopne
in
incl
lods
subl
xor
xorl
hlt
dec
decl
lock
or
adc
mov
int3
stos
lds
and
xchg
lahf
test
xlat
and
lcall
mov
dec
add
insb
pop
sbb
pop
das
cltd
adc
adc
mov
pushl
clc
or
icebp
sbbl
mov
push
mov
mov
sub
sbb
call
pop
dec
jmp
stos
mov
or
xchg
ret
ds
cmp
mov
dec
decl
push
sub
fdivrs
lcall
add
pop
sub
stc
gs
das
mov
pushl
add
mov
adc
out
and
outsb
shrl
xchg
and
jg
mov
adc
cmp
clc
sbb
inc
mov
xchg
pop
cmp
mov
cli
cwtl
adc
dec
xchg
inc
in
pushf
loop
adc
lcall
rorl
imul
pop
sbb
mov
in
sbb
pop
xor
xchg
jecxz
ds
push
or
shlb
leave
mov
xor
or
cmp
jmp
xchg
int3
adc
popa
cmpsb
ja
jmp
loop
lea
call
cmc
mov
aad
ja
ljmp
or
sbb
lea
cmc
ljmp
xor
mov
fcomps
push
loope
fldcw
std
inc
lods
ljmp
jge
adc
lcall
mov
and
lret
xor
ds
jg
sbb
ss
shll
daa
and
fcomps
ljmp
inc
lret
dec
out
daa
push
divl
push
add
out
mov
imul
addr16
xchg
xchg
sarl
aaa
adc
jle
mov
in
push
cmp
add
xchg
lahf
or
rolb
faddl
ja
cmp
sarb
mov
xlat
or
out
out
or
je
or
push
and
sub
pop
repnz
pushf
push
dec
sbb
mov
push
ja
mov
es
and
or
loop
adc
fwait
incl
jae
sbb
ja
mov
aaa
push
mov
add
push
pop
sbb
push
mov
decl
lods
test
les
stos
test
sub
jmp
test
jmp
mov
pop
aad
mov
clc
loop
call
das
idivb
jge
fstl
push
mov
iret
add
adc
or
lods
cmp
leave
sahf
je
push
sbb
scas
fsubr
jbe
inc
mov
outsl
test
scas
inc
clc
jg
xchg
push
subb
and
adc
xor
jns
adc
mov
cli
pop
outsl
ja
scas
sub
ret
fistpll
cltd
fs
inc
xchg
xor
jp
decl
data16
js
lds
mov
push
add
sbb
add
pop
lods
xchg
ret
mov
loopne
sbb
jmp
cmp
sub
sahf
in
cld
fs
lcall
call
push
cld
idiv
incl
repz
dec
dec
cld
mov
data16
add
push
cmp
call
pop
lcall
pop
push
imul
inc
mov
sub
lock
push
xchg
fimuls
mov
cs
add
ljmp
jg
mov
rep
insb
mov
xchg
es
mov
xor
lret
hlt
lcall
pusha
fisubs
jns
incl
out
punpckhdq
fidivs
pop
push
sub
mov
ja
call
add
adc
fs
aam
jne
mov
push
dec
loopne
cmp
jno
fprem1
dec
js
jnp
sbb
notl
xor
rol
mov
mov
mov
mov
fstpt
call
push
and
ret
loop
ret
and
xchg
dec
stos
cmp
xchg
jne
iret
xor
cld
ljmp
mov
push
jle
push
out
mov
xor
jne
popf
sahf
cmpb
mov
mov
decl
pop
jno
dec
sbb
xchg
pusha
push
lods
xorb
stc
insl
lock
mov
out
inc
sahf
mov
cmpsb
lcall
pop
outsb
popl
nop
out
mov
aam
xor
popf
push
pushf
or
lcall
mov
or
sbbl
mov
in
aaa
fistpl
cli
mov
pushl
out
or
pop
mov
inc
inc
xchg
adc
jmp
dec
ljmp
mov
adc
jmp
sbb
push
dec
into
xor
inc
or
cmp
add
add
cwtl
in
shll
mov
cli
mov
lock
mov
or
mov
pop
je
dec
lods
jo
dec
pop
and
mov
inc
mov
jge
stos
inc
xor
jmp
jmp
or
adc
xchg
fnsave
andl
leave
decl
jnp
fiaddl
jnp
sub
jp
add
call
aam
movups
aad
cmp
mov
jg
xor
call
adc
repnz
cmp
sub
adc
int
repnz
push
cld
incl
aaa
inc
sub
jnp
es
outsl
xor
cmp
push
add
or
cmp
aaa
fcoml
push
mov
push
rcr
jne
and
push
adc
lcall
xor
nop
jb
daa
push
sub
sahf
repz
gs
fdivl
jns
clc
jmp
add
fld
mov
xchg
scas
xor
loop
clc
shll
call
lods
or
pop
mov
jno
addb
xchg
mov
cmp
inc
stos
call
pop
lret
xlat
mov
jno
xchg
sub
sar
decl
add
inc
fldt
sub
lcall
adcb
dec
out
call
icebp
sub
loope
lret
xlat
adc
out
xor
fucomi
or
jle
call
inc
add
or
cmpl
std
push
arpl
cmp
shll
mov
ljmp
outsl
mov
push
dec
or
repz
fcomip
add
shlb
mov
cmp
pop
push
add
cltd
mov
push
dec
xchg
andl
pop
repnz
cmp
jecxz
xor
mov
adc
lods
int3
inc
sub
lret
call
adc
and
push
mov
test
das
inc
adc
and
test
pushl
mov
cmpsb
mov
or
div
cmp
pusha
jne
test
test
incl
cmc
or
ds
sub
or
sbb
test
pusha
push
sub
decl
xchg
sub
frstor
fidivl
fs
addr16
sbb
mov
decb
sub
lahf
les
pushf
nop
push
les
xor
stos
sbb
mov
fildll
stos
leave
mov
mov
xchg
add
arpl
incl
aam
xor
popa
mov
mov
pop
fstps
and
cmp
sbb
out
mov
stos
je
xor
pop
mov
cli
or
fadds
ja
stos
push
rorl
call
or
or
and
add
dec
xor
mov
xor
out
sarb
out
clc
xor
pop
sti
push
mov
xchg
dec
mov
xchg
inc
add
mov
arpl
push
mov
outsl
add
mov
ja
andl
incl
fsubr
pop
cwtl
pop
std
scas
mov
pop
test
in
rorb
mov
popa
ret
daa
stos
pop
ss
pusha
outsb
fs
mov
add
mov
sbb
mov
add
hlt
cltd
jecxz
pop
aam
push
xor
test
cmp
bnd
sbb
jnp
cmc
pop
jns
or
clc
pop
jb
mov
push
sub
cmp
fmuls
inc
cli
xlat
add
insl
and
add
into
lods
movsb
sub
jg
pop
arpl
sbb
fldcw
lock
pop
mov
jo
stc
lret
ljmp
xchg
hlt
popf
or
stos
in
popa
mov
sti
cmp
jmp
adc
lcall
mov
sar
lock
shlb
loop
or
out
add
cld
call
pop
out
inc
mov
sbb
add
sub
jmp
ljmp
mov
xchg
sahf
lock
or
pusha
xchg
stos
fistps
add
pop
inc
ja
xchg
ljmp
call
lcall
sahf
movsl
jbe
in
mov
jecxz
orl
dec
dec
jge
movsb
jmp
xor
iretw
pusha
pushf
cmp
xor
hlt
inc
je
push
push
mov
test
mov
in
dec
enter
stos
lds
fldt
leave
or
imul
clc
sub
incl
fimull
movsl
push
enter
lcall
addr16
popa
jle,pt
movsl
icebp
mull
cmp
xchg
sahf
xor
jg
jmp
lret
sub
xlat
xchg
fcom
jb
lahf
clc
xor
pop
inc
push
lret
cwtl
cmpsb
adc
dec
ss
cli
mov
jns
xor
bound
push
sub
pop
mov
aas
lock
hlt
pushl
and
mov
nop
pop
wbinvd
outsl
fsubp
cmp
out
push
pushf
lcall
test
xor
push
jecxz
or
test
push
cmp
sbb
inc
pop
jge
jmp
xchg
or
mov
xchg
cmc
orb
mov
xor
fistpll
idiv
fistpll
pushl
repnz
or
or
gs
jo
jmp
stos
adc
sub
jmp
out
das
jne
int3
or
adc
mov
mov
adc
inc
mov
or
lcall
cmc
rsqrtps
cmp
adc
inc
push
repnz
out
sub
xor
mov
mov
scas
sub
pop
or
and
lods
lcall
rcr
push
aas
sub
push
mov
or
outsb
mov
inc
jo
add
sub
pushf
jmp
mov
rcr
in
inc
roll
push
test
data16
ss
xor
pushl
mov
pop
xchg
push
enter
div
xor
xchg
jbe
pop
push
sub
adc
mov
jmp
sahf
aad
popa
xchg
popf
rclb
xchg
mov
inc
mov
mov
sbb
cmp
cmp
je
aaa
xchg
mov
push
sarl
lods
adc
call
lds
xor
push
pop
ds
ret
out
jle
or
in
movsb
aad
out
inc
push
leave
sub
pushl
or
dec
lret
pop
sub
mov
push
jp
dec
and
push
or
push
dec
into
repz
pop
fmulp
dec
lret
cmp
sbb
es
push
sub
ss
mov
push
popf
repnz
imul
and
rolb
rorb
xchg
in
ljmp
mov
sbb
mov
scas
gs
mov
nop
adc
jns
jb
pushl
ljmp
arpl
xor
push
in
mov
pop
jbe
outsb
icebp
in
sbb
push
push
pop
cmp
pop
mov
mov
fimuls
addr16
aad
inc
out
jmp
test
sti
lods
sarb
lahf
xor
arpl
fs
dec
sbb
rorl
call
loopne
mov
jns
out
addps
bound
fisttpl
js
cmp
jbe
jl
dec
or
push
idivl
mov
jp
pushf
push
in
icebp
fbld
imul
out
lods
jnp
data16
sarb
lock
cmp
cmpl
lods
and
xor
xlat
mov
dec
ret
xor
and
incl
xor
jae
mov
pop
cmp
or
in
and
xchg
decl
xchg
add
mov
add
add
hlt
int
in
mov
inc
shl
ljmp
add
arpl
dec
cwtl
outsl
iret
xor
iret
xchg
in
lcall
subb
iret
jb
inc
mov
push
xchg
imul
push
in
cmp
or
mov
out
leave
clc
pop
cmp
outsl
cmp
inc
add
decl
and
lods
aaa
cmp
std
in
test
loope
loop
xchg
mov
sbb
pop
popa
scas
cli
jmp
adc
and
pop
cmp
xor
mov
insl
mov
cmpb
mov
add
sbb
xor
dec
int3
dec
lcall
sub
lcall
inc
mov
imul
adc
cmp
push
jbe
xchg
test
aaa
rcrb
mov
aad
sbb
mov
xor
decl
dec
pop
add
adc
icebp
fisubrl
mov
fwait
je
add
fildl
or
mov
adc
pop
sub
cmp
xchg
push
iret
sbb
or
decl
jmp
push
or
pop
cmp
jg
dec
dec
stos
stc
test
in
jmp
and
xchg
loop
aas
daa
movl
aad
sbb
sub
sub
or
push
roll
inc
cmp
ljmp
out
ja
xor
or
addr16
je
jns
dec
cwtl
dec
ljmp
mov
jg
pop
xor
popa
out
jmp
in
outsb
mov
mov
incl
in
andb
jl
pushf
fstpl
pop
je
push
lret
jo
jg
je
sub
pop
js
xchg
out
jl
mov
add
hlt
pop
lret
jnp
mov
decl
jae
into
mov
xor
test
push
loop
mov
inc
mov
clc
leave
jae
repnz
cmc
test
test
and
inc
or
push
scas
and
fistpl
adc
mov
xor
mov
or
sbb
inc
mov
and
mov
sub
decl
inc
fbld
mov
jae
test
jmp
mov
shll
hlt
leave
iret
dec
jmp
push
xchg
mov
push
das
mov
outsb
xor
xor
jno
mov
jl
mov
sbb
incl
loop
rcll
push
cmp
mov
adc
add
cmpb
mov
lret
pop
cld
fwait
test
sub
jmp
jb
pop
pushf
sbbb
nop
xor
cli
pop
dec
cmc
cmp
mov
push
jns
pushf
lock
inc
xor
mov
pusha
push
out
mov
cwtl
ljmp
cli
mov
sarb
pop
jmp
pop
cs
dec
sub
xchg
out
pop
mov
test
adc
pusha
push
push
aad
or
or
pop
and
push
xor
pop
dec
mov
pushl
inc
inc
push
sub
push
pushf
cltd
aaa
push
dec
push
push
je
dec
inc
lods
cld
xchg
int3
or
mov
je
lock
push
fcomi
sbb
or
lcall
outsb
mov
sub
jp
testb
xchg
outsb
push
orl
lcall
ljmp
jae
add
adc
incb
mov
decl
into
lcall
xlat
mov
sahf
mov
iret
pusha
adcb
push
cld
lcall
pop
fcoml
inc
push
cmpsb
out
sbb
outsl
inc
fadds
ljmp
popf
pusha
andl
or
repnz
mov
mov
decl
dec
lret
test
aas
inc
inc
aas
sub
add
pusha
mov
je
xchg
loopne
pop
xchg
jmp
arpl
xchg
cltd
xor
dec
repnz
daa
cmc
in
cli
and
add
and
ljmp
dec
mov
cmpsb
sbb
sub
push
sbb
mov
lcall
out
test
push
inc
pop
div
or
jne
mov
mov
stc
insl
aad
jge
cmp
pop
popf
movsl
inc
dec
ds
daa
push
mov
lods
jg
incl
outsl
mov
and
add
js
jbe
push
sbb
test
bound
call
pushf
js
sub
lods
pop
inc
inc
xchg
mov
sbbl
icebp
lcall
sahf
lret
cmp
ljmp
ds
dec
pop
lcall
sub
xchg
icebp
dec
mov
repz
dec
adc
andb
push
dec
arpl
mov
mov
add
jmp
push
lcall
cs
cmp
cmp
inc
adc
insb
cmp
adcl
repnz
push
inc
notl
lds
add
gs
fadds
pop
add
movsl
test
push
push
and
jp
mov
imul
xchg
and
aad
inc
adc
div
adc
notb
add
lea
jl
jge
pop
pushf
hlt
xor
xorl
dec
ljmp
jmp
mov
daa
dec
and
dec
pop
outsl
shlb
xchg
mov
xor
push
or
mov
data16
pop
jp
mov
cld
adc
pop
pusha
inc
lcall
shlb
fisubrs
daa
jp
daa
fdivrp
fcomi
mov
cmp
cmp
leave
rcrb
sti
cmp
sub
lcall
cmp
mov
cmp
movq
mov
cmp
mov
in
jg
insb
jp
addr16
test
mov
outsb
add
int3
push
fsubl
jmp
push
push
popf
jbe
sbb
shrb
fldenv
cwtl
add
pop
xchg
shl
decl
sub
stc
mov
adc
imul
mov
ss
pop
push
mov
ficoms
jge
movsl
fistps
mov
popf
adc
loop
mov
inc
sbb
mov
imul
nop
adc
ret
xchg
add
call
call
and
mov
xchg
and
or
cli
lahf
icebp
pusha
dec
lock
pop
and
inc
ficomps
lcall
out
adc
and
data16
add
lcall
movsb
gs
dec
or
push
cmp
bound
and
xlat
cld
fcomip
inc
and
sahf
inc
dec
or
int3
call
inc
push
cmpsb
or
pushl
sub
insl
pop
mov
push
mov
lret
cmp
push
add
sub
scas
popf
xor
ficompl
out
adc
or
xor
sbb
clc
iret
inc
cmc
int
call
lods
dec
adc
mov
dec
pcmpeqb
jo
aam
jg
sahf
repz
mov
sbbl
fistpl
mov
mov
inc
imul
data16
mov
mov
shll
scas
ljmp
lcall
xor
inc
in
aam
push
mov
cmp
mov
je
or
outsb
shlb
pop
sbb
inc
sarl
and
fisubs
adc
jl
sbb
ja
fists
adc
bound
lcall
or
push
int
push
inc
and
mov
adc
ja
xor
clc
add
adc
push
or
mov
jmp
mov
movsb
shrb
or
sub
lahf
ret
add
call
fsubr
add
add
jecxz
jns
and
xchg
stos
or
rcl
jmp
xchg
aam
jo
sub
cmp
test
mov
add
call
xor
lock
mov
ret
xor
fcomps
icebp
outsb
jg
lret
jno
les
jbe
inc
arpl
mov
sbb
push
enter
sbb
mov
pushl
imul
arpl
popa
test
pusha
imul
mov
incl
add
lods
adc
sti
xchg
int
in
rolb
in
test
dec
xchg
stos
jae
and
test
jne
test
leave
xor
dec
inc
jge
mov
add
push
cld
jg
jo
jge
enter
out
stos
stos
push
leave
adc
scas
jbe
addr16
decl
push
insl
sbb
icebp
add
jo
cltd
mov
pop
push
sbb
xchg
in
adc
push
pop
icebp
ljmp
mov
push
push
out
shl
jge
sub
xchg
mov
pushl
or
imul
repnz
les
dec
stos
cmpsb
jecxz
mov
pop
xor
sbb
xlat
ret
lods
and
mov
mov
lock
mov
movl
incl
les
sarb
add
ret
xor
jg
inc
lcall
and
int
out
cmp
fneni(8087
pushf
lods
cmpsl
pop
inc
std
xlat
decl
call
cmp
or
insl
call
int
pop
mov
pop
call
mov
pushl
cs
push
icebp
sbb
and
repz
xchg
xchg
pusha
jne
mov
test
push
std
rol
mov
cmpsb
mov
push
xchg
cmp
incl
mov
aad
jmp
in
bound
enter
dec
xchg
fnstenv
inc
pop
push
fnstsw
loope
or
mov
dec
insb
and
jbe
xlat
jno
in
pop
insl
mov
call
shr
fnstenv
in
sti
add
add
mov
jne
ret
jp
lcall
inc
sbb
cmp
add
push
stc
rol
jl
aaa
jae
jns
jns
rcl
mov
lret
jnp
push
push
xchg
cmp
imul
es
negb
outsl
aam
imul
jge
decl
sbb
test
or
mov
xor
out
add
js
aas
ret
dec
adc
adc
aas
push
clc
imul
xor
xchg
in
movaps
push
and
aaa
sbb
cld
incb
mov
or
jg
ja
add
incl
sbb
add
pop
adc
icebp
mov
frstor
adc
lcall
jnp
push
add
outsl
inc
jl
dec
mov
xor
cmpsb
cs
call
dec
jecxz
mov
jae
ret
pop
sbb
aaa
imul
decl
xlat
loopne
clc
loope
frstor
test
sub
pusha
dec
fdivrs
ljmp
mov
pop
inc
mov
xchg
jg
test
fidivrs
fwait
cs
mov
sub
xchg
out
mov
out
shl
ret
loope
lea
and
xlat
mov
movsl
rcrl
mov
mov
ftst
push
imul
enter
sbb
repnz
mov
fldenv
and
ds
rcll
fisubrs
fmulp
imul
imul
call
mov
inc
mov
stos
fs
aam
cltd
push
aas
jl
sub
xchg
pop
movsl
xor
sar
push
lret
mov
mov
cmp
and
jmp
adc
jne
or
lods
fildll
inc
addb
and
cmp
lds
cmp
inc
dec
sbb
rcr
je
jmp
or
dec
out
inc
sub
dec
das
ja
jmp
dec
in
mov
dec
xchg
in
mov
mov
mov
xchg
inc
pop
sub
pop
sbb
push
stos
xlat
or
sbb
mov
into
cmp
clc
idiv
mov
stos
into
sarb
fsubrp
stos
dec
ja
push
mov
cld
daa
xchg
decl
loop
inc
mov
shlb
subl
sbb
pop
sbb
es
js
or
sbb
sbb
sbb
push
cmp
stos
mov
inc
rcll
cli
lods
data16
pop
out
xchg
cmp
fidivrs
cltd
xchg
mov
xor
out
jae
into
mov
call
mov
push
push
lods
dec
fs
fldl
xor
shll
pushl
nop
inc
adc
icebp
out
xchg
xchg
dec
hlt
jno
in
ret
inc
movsb
aad
jg
decl
lds
aad
sbb
iret
or
lret
fs
into
std
fldenv
cmp
push
jge
lds
lahf
lret
adc
mov
mov
adc
mov
dec
aam
pushf
adc
addl
jnp
jecxz
repz
outsl
adc
xchg
push
push
and
dec
inc
test
fwait
inc
inc
fistpl
pop
jo
enter
cmp
xchg
sub
test
ja
cltd
inc
sub
incl
xor
mov
xchg
add
decl
bound
popa
cld
mov
repz
mov
push
sarl
push
xchg
add
popf
sar
fcomip
pushl
xchg
movsl
adc
xchg
jno
ret
aaa
mov
ja
sti
mov
xlat
and
sar
hlt
mov
je
dec
and
add
cmp
outsl
dec
sti
sbb
ljmp
cli
pop
outsb
mov
mov
aad
mov
jg
sbb
jp
incl
pushf
sub
pop
mov
adc
xor
xchg
push
clc
jbe
add
filds
cmpsb
pop
pushf
mov
movsb
sub
sub
and
stc
dec
cmpsl
cmp
xchg
lods
call
lret
lcall
int3
cmpsb
rolb
add
pusha
outsb
fcmovnb
jge
das
lret
roll
test
mov
rcrb
dec
mov
movb
test
lret
adc
mov
jmp
push
and
sub
push
jg
mov
in
movsb
pop
icebp
decl
and
jmp
fmull
inc
xchg
and
xchg
lcall
mov
cmp
iret
sbb
outsb
push
cwtl
out
and
fdivs
outsb
sub
jl
push
outsb
fsubr
sti
jmp
bound
jae
lea
xor
pop
cmpsl
pop
dec
mov
ljmp
incl
cmp
pop
jno
push
bound
fs
stos
addr16
sbb
aas
pop
jae
lcall
incb
addr16
cmp
pop
mov
fwait
dec
mov
add
jg
inc
movsb
fs
and
mov
mov
mov
and
sbb
imul
and
or
inc
fdivl
out
out
push
inc
lds
mov
loop
mov
incl
push
pop
and
int3
push
cmp
jne
sub
mov
cs
rcr
inc
aad
push
pushf
mov
in
repz
sub
mov
cmp
decl
mov
stos
push
clc
in
aaa
bound
enter
outsl
es
mov
or
mov
jmp
xchg
xchg
test
jbe
pop
dec
das
xchg
dec
push
int3
je
pop
add
imul
mov
cmp
frstor
push
or
xorb
jg
xchg
lods
sbb
pop
aas
mov
ljmp
cmp
add
movsb
sub
dec
dec
hlt
push
ss
xchg
push
inc
and
incl
ja
rol
fwait
and
mov
rcrb
lods
andl
dec
jmp
outsb
xor
rol
and
pop
jo
jo
and
popf
call
in
lret
les
sub
pushf
shlb
rep
xchg
hlt
popa
fwait
lcall
ljmp
or
mov
clc
test
jmp
xchg
jnp
pop
or
cmp
imul
adc
stos
lods
adc
or
jns
outsl
jmp
roll
clc
pop
outsl
sub
or
push
roll
movsb
xchg
call
bnd
cltd
add
add
fcmovnbe
sbb
inc
and
mov
add
xor
enter
add
ror
xor
loope
pop
push
cli
cli
inc
lahf
xorb
and
xchg
pop
les
mov
cmp
jg
pop
int3
repz
sbbl
and
leave
sbb
ret
sbb
jecxz
sub
inc
js
pushl
in
into
cmpsb
mov
cmp
aaa
ret
pop
cld
add
cmp
jg
dec
sub
fbld
clc
pop
mov
scas
push
inc
into
mov
fldcw
push
ss
mov
sbb
mov
loope
outsl
mov
clc
mov
jge
push
push
jg
sub
add
dec
aas
pop
nop
mov
fdivl
lcall
jp
dec
lods
ds
cmp
int
ret
pop
fisubs
push
das
sar
inc
mov
add
or
scas
pop
mov
lock
ljmp
add
iret
or
dec
repz
pop
xor
mov
sub
scas
and
cmp
call
xor
mov
pop
and
pop
pop
aam
imul
mov
in
mov
ret
mov
jno
cmp
mov
and
add
cld
xchg
jne
sub
shrb
pop
push
mov
xchg
es
in
fsub
cmp
pop
dec
nop
adc
call
jno
movsl
jns
andl
fldt
daa
imul
mov
xor
push
hlt
mov
mov
and
cli
xchg
mov
adc
ljmp
and
lods
and
xor
push
cli
sbb
idivl
or
add
xor
hlt
cmp
notl
sub
add
pop
dec
xor
pop
adc
jp
mov
sti
imul
jle
xor
jge
test
sub
cwtl
call
mov
aaa
cwtl
rclb
ss
jae
xchg
ud0
push
sbb
cmp
sbb
inc
cmp
in
dec
add
xchg
add
ja
imul
xchg
jl
sbb
je
mov
lock
push
testl
xor
sar
jmp
and
adc
call
xchg
jmp
xchg
icebp
int
adc
sbb
jle
and
sub
test
and
adc
ljmp
sarb
movsb
jno
push
inc
dec
test
popa
cmp
scas
cli
sbb
inc
test
jmp
jmp
sub
fsubl
xor
dec
jp
inc
por
mov
sub
je
outsl
xchg
je
mov
or
cmp
mov
mov
adc
mov
xchg
cmp
into
iret
pop
and
and
sbb
iret
shlb
sub
xchg
cmp
or
ljmp
mov
repnz
imul
cli
out
cmpsl
lret
dec
call
in
inc
pushl
and
lods
pop
div
and
int3
lea
mov
mov
pcmpeqw
decl
adc
cmpsb
push
aaa
mov
xor
int
repnz
fbstp
hlt
fdivl
loopne
jmp
stos
push
idivb
in
jg
fstl
jbe
sub
fnstsw
cmp
mov
mov
xor
cmp
and
xchg
push
dec
sub
jne
mov
inc
cli
pusha
lret
idivl
mov
jge
pop
push
adc
pop
fdivl
jg
dec
jmp
push
popa
jbe
push
sar
jp
decl
lock
mov
or
adc
or
mov
test
incl
pop
inc
fs
push
sbb
in
insl
into
or
cmpsb
test
ret
xor
pop
dec
push
outsl
dec
xor
xchg
cltd
fdivl
ss
jmp
adc
and
ja
pop
jge
xchg
scas
les
mov
divl
cmpsl
and
or
out
pop
add
sub
test
stos
in
push
mov
or
jno
mov
sub
sub
mov
push
cld
ja
icebp
pop
decl
out
mov
adc
push
pop
dec
push
sub
les
pusha
stos
int3
mov
adc
roll
jmp
sub
mov
jne
ret
je
out
inc
or
mov
call
call
ss
negb
lods
or
int
sbb
lcall
fisttpl
mov
or
push
push
fisubrs
add
adc
jb
jb
cmp
sub
and
aaa
lcall
mov
pop
pop
xor
pop
mov
xor
decl
mov
mov
lds
dec
ret
dec
in
enter
call
inc
jl
addb
enter
sbb
jno
rolb
push
iret
stos
push
inc
movsl
mov
out
int
imul
in
adc
loop
in
push
sbb
add
dec
das
and
xchg
fs
pop
xchg
lods
xlat
cli
call
or
decl
push
jnp
in
inc
hlt
shll
xchg
or
or
lods
aad
lret
push
jmp
push
sahf
popf
not
test
fdivp
out
inc
jae
lods
pop
repnz
jle
call
ljmp
fcmovnbe
jb
imul
je
stc
lods
cmp
repz
cld
incl
and
popa
jge
aas
mov
cmp
and
jmp
outsb
push
insl
mov
leave
shll
mov
loop
mov
bound
es
fisttpl
ret
idiv
icebp
mov
inc
push
and
dec
cwtl
adc
enter
rolb
cli
enter
lods
incl
jp
and
mov
xor
inc
sub
add
pushf
fnstsw
iret
cmp
pushl
movsl
sbb
sbb
mov
aam
imul
xchg
inc
dec
in
cmp
outsb
add
call
lock
mov
dec
fwait
into
xchg
call
iret
push
jp
push
adc
adc
mov
pop
mov
pop
pop
push
cld
jg
and
sbb
cmp
mov
sahf
ja
loopne
push
incl
je
or
dec
repnz
and
dec
mov
mov
lcall
and
push
dec
in
stos
jmp
aas
dec
cmp
icebp
sbb
out
nop
test
pushl
cmp
in
lahf
jne
mov
aaa
jne
push
inc
mov
test
outsl
scas
test
cmpsb
jns
cli
call
test
jno
pop
scas
dec
pop
loope
fs
jl
push
sbb
ja
lock
cmp
mov
in
push
inc
int
sbb
lcall
jmp
mov
ss
popf
les
mov
mov
arpl
pop
sti
flds
dec
loop
push
mov
inc
and
imul
and
scas
jno
sti
push
jmp
mov
test
jge
and
push
push
xchg
mov
mov
adc
imul
xlat
mov
loop
mov
pop
mov
call
insb
in
push
fisubrl
or
sbb
inc
lods
jae
and
clc
xlat
loopne
test
decl
and
movsl
add
sbb
inc
or
fwait
test
push
or
and
jmp
add
or
fisubl
fadds
and
mov
or
sahf
rcrb
outsb
add
jmp
lock
mov
insl
mov
call
jmp
imul
mov
rcll
cmp
mov
addr16
lcall
in
mov
rcrl
scas
cmp
mov
add
pop
xchg
sbb
fnstcw
adc
dec
cmc
stc
shrb
cld
mov
jns
cmp
in
pop
xchg
jp
pop
mov
jbe
incl
add
sbbb
xchg
jnp
xchg
inc
push
pop
les
fldenv
incl
lods
loope
pop
aas
xor
xchg
aam
subl
mov
mov
pusha
mov
arpl
call
loopne
cmp
dec
icebp
push
fs
ss
gs
cld
ljmp
jmp
mov
adc
push
sbb
inc
outsl
insb
dec
test
dec
popa
xor
xchg
call
or
xor
mov
mov
inc
mov
add
test
adc
add
lcall
rol
aas
push
sahf
movsb
cmp
addr16
scas
xor
in
dec
inc
mov
pop
jle
ljmp
cltd
jb
movsb
movsl
test
xor
sub
mov
mov
std
mov
or
in
sti
out
adc
adc
jnp
pushf
fiadds
cltd
mov
sbb
and
daa
call
jecxz
push
mov
bound
sub
sti
or
fcoms
lea
lahf
inc
lock
fistpll
inc
lahf
mov
lcall
loopne
push
mov
negb
ds
mov
pop
stos
es
call
xor
fistpl
clc
inc
gs
cmp
shlb
in
jmp
mov
jns
jns
mov
sbb
call
movsb
mov
mov
repnz
mov
push
int3
pop
mov
adc
xor
arpl
jmp
mov
sbb
adc
iret
lret
adc
movsb
and
sub
lahf
push
sub
mov
mov
xor
adc
rcrb
push
mov
scas
clc
mov
cmp
push
mov
xor
xor
bswap
push
push
push
call
ss
test
pop
or
sahf
push
pop
and
cmp
dec
xor
int3
outsl
jne
ljmp
fcoms
mov
push
pop
test
out
dec
fs
pop
xor
gs
ljmp
mov
xchg
and
mov
or
mov
popf
xor
dec
lods
shlb
hlt
daa
sti
hlt
inc
gs
or
mov
push
outsb
hlt
cmpsl
adc
pop
jl
jp
loop
add
jne
shl
incl
lahf
mov
js
cmpsl
aaa
int
push
pop
push
sarb
fisubrs
orb
sbb
decl
or
mov
jmp
adc
xchg
push
shl
cmc
mov
into
mov
cmp
fs
sbb
cmp
dec
clc
inc
pop
aas
cmp
or
stos
hlt
lds
sti
xor
jmp
adcb
sbb
cmc
xor
push
cmpsb
or
test
call
jae
cmp
lret
stos
add
std
mov
and
int3
cli
test
in
decl
jns
and
ss
loopne
fildll
out
adc
jns
inc
sbb
dec
and
pop
add
sub
mov
and
cld
ret
pushf
in
mov
mov
movsb
mov
xlat
cmp
push
lods
jl
test
lret
and
gs
sahf
xor
or
mov
sub
daa
jnp
lret
cmc
cwtl
daa
cs
addl
aam
dec
sbb
xchg
ljmp
sub
xchg
std
mov
dec
inc
rolb
not
fstpt
aaa
add
insl
decl
pushl
jnp
push
int3
jae
jbe
push
negb
test
adc
mov
mov
dec
ret
movsl
mov
cmp
subl
in
xchg
push
dec
jmp
mov
or
test
mov
inc
mov
inc
pusha
outsl
test
jns
dec
xor
sbb
mov
in
outsl
jno
xchg
outsl
push
js
mov
jb
push
outsb
call
add
pushl
jns
hlt
out
cmp
mov
fbld
push
fstpt
in
movsl
imul
dec
pop
or
add
jno
mov
cmova
mov
mov
jmp
pop
sbb
or
adc
sub
xchg
decl
jle
xor
jg
sub
in
jp
test
xor
cmp
pushl
adc
mov
and
es
dec
cmp
lods
mov
fcomip
cmpl
andl
or
loope
ljmp
push
aas
inc
and
out
jg
mov
inc
in
or
fistps
push
push
push
shrl
sbb
cmp
clc
sub
dec
decl
jge
and
sahf
adc
stc
test
scas
cwtl
jmp
inc
call
and
push
xchg
sbb
lahf
push
cmp
shl
fildl
iret
in
shrl
sar
cmpsb
ljmp
aaa
enter
mov
rcr
pop
outsl
icebp
jmp
lret
lcall
outsb
fldl
push
int
lea
sbb
mov
aad
mov
jg
push
xor
fmull
stos
clc
xor
int
int
aaa
or
mov
jmp
out
shl
ficoml
mov
stc
js
xchg
xor
mov
pop
sar
mov
dec
add
sub
cmp
data16
sarl
data16
push
sub
cmpsl
mov
ljmp
jg
insb
sbb
test
mov
cmp
in
das
clc
dec
aaa
fcoms
arpl
sub
addl
test
sbb
ret
cmp
shll
loop
mov
and
cmp
jno
bound
clc
decl
xor
sbb
shrb
std
enter
xor
mov
sbb
jg
xorb
push
push
push
call
ds
jl
or
test
minps
mov
jge
or
or
push
sahf
aam
les
pushl
lret
and
xor
pop
jo
mov
in
add
and
mov
nop
adc
ljmp
popa
pop
arpl
fildll
lock
jmp
movsb
jmp
inc
dec
movsl
mov
insl
jo
mov
and
popf
aaa
cld
decl
xchg
mov
jmp
xor
loope
incl
cli
mov
cmpsb
es
jo
loop
mov
lcall
mov
dec
mov
sbb
mov
push
jb
adc
jmp
mov
dec
mov
inc
jge
jmp
mov
mov
pop
int3
leave
add
xor
mov
push
add
mov
ja
push
inc
dec
ja
pusha
cli
push
pop
hlt
jg
call
add
loope
fisubrl
iret
sbb
scas
push
test
mov
dec
sbb
ret
lock
cmp
stos
scas
sbb
pop
dec
sbb
mov
fidivl
mov
fistpll
rclb
adc
fimuls
rcll
daa
push
cmp
xchg
in
mov
cltd
pushl
incl
fists
mov
sarl
add
jnp
pop
adc
sbb
decl
or
bound
mov
ficompl
pusha
iret
or
ljmp
mov
pop
movsb
call
xor
sbb
pop
popf
mov
sub
jg
frstor
ljmp
mov
push
gs
inc
jmp
repnz
cmpsb
shrb
cmc
inc
mov
mov
add
mov
cwtl
mov
jne
adc
imul
pusha
lcall
cmp
adc
cld
ja
jb
loopne
insl
mov
cmpsl
das
shlb
ljmp
xchg
fistpll
and
stos
adc
cmp
loope
mov
mov
or
jge
push
mov
pop
andl
add
push
jns
sub
mov
mov
mov
sbb
add
inc
pop
sahf
adc
mov
aas
mov
adc
decl
jbe
lahf
imul
fs
dec
mov
and
clc
add
sbb
jo
cmp
ret
adcl
xchg
sbb
mov
sbb
les
int3
sarl
jbe
dec
js
push
jle
mov
jns
adc
push
dec
je
sti
aaa
jle
and
stos
pop
lahf
add
call
add
pop
shlb
nop
push
push
dec
ja
pop
dec
mov
call
dec
add
mov
cltd
addr16
sahf
es
test
in
pop
rep
pop
xor
in
fld
loopne,pt
fisubrs
inc
dec
in
cmpsl
insb
xchg
addr16
mov
xor
incl
cld
push
mov
xor
xchg
dec
cmp
popa
shlb
loop
and
pushl
add
into
dec
mov
out
out
lcall
pop
jecxz
rclb
sub
pop
cld
ret
mul
sbb
hlt
inc
inc
decl
lods
cli
pop
sub
ret
sub
scas
cld
sub
jbe
loop
je
mov
jecxz
xchg
mov
jb
push
pop
gs
xchg
mov
cli
adc
ds
leave
jle
lret
jmp
mov
repnz
adc
sahf
push
aaa
dec
sar
jp
jbe
pusha
fmul
fst
rol
lret
jmp
mov
stos
cmp
pop
xor
sbb
cmpsl
fisubrs
dec
xchg
cli
push
mov
ds
mov
lcall
and
push
insb
cmpsl
neg
adc
dec
scas
adc
push
lret
out
in
test
and
lcall
and
ds
adc
dec
adc
orb
fdivl
mov
xor
jae
mov
call
rcr
adc
dec
gs
ss
push
mov
ret
push
push
je
jb
or
ficomps
xchg
mov
hlt
popf
nop
pop
fidivrs
cwtl
adc
test
and
ds
inc
adc
inc
enter
sbb
scas
mov
inc
push
jmp
aas
fidivs
hlt
dec
repz
mov
xchg
xor
mov
bound
xor
jmp
fisttpll
fwait
std
push
loope
sub
in
or
lock
ljmp
ljmp
push
dec
mov
add
movsb
jle
incl
aad
dec
test
loope
cmpsl
rclb
mov
pop
mov
jg
sub
sahf
aaa
mov
inc
test
repz
int3
mov
fmull
or
popa
mov
dec
xor
jne
lock
or
mov
xchg
sub
call
sub
and
cmp
jo
sbb
lahf
pop
xor
test
lcall
lret
mov
mov
outsl
and
push
enter
movsb
addr16
adc
out
mov
mov
adc
or
jecxz
out
movsl
push
jae
pop
call
inc
std
xor
mov
mov
nop
mov
jle
stc
dec
out
aaa
pop
pop
jecxz
jmp
jbe
xchg
cli
daa
mov
imul
cmpsb
jnp
pop
pop
ficoml
iret
push
fs
cmp
jb
xor
push
lods
lock
dec
add
cmpsl
push
sub
mov
call
xchg
mov
fstpl
mov
inc
inc
fisttpl
iret
jb
xchg
mov
push
inc
in
inc
repnz
incl
imul
cmp
shl
scas
fwait
scas
je
fistps
iret
into
fidivrl
dec
jg
sub
mov
enter
cmp
incb
or
cmp
mov
fsubr
lahf
stc
push
xor
cmp
jl
aas
mov
ljmp
sbb
ss
das
dec
dec
sbb
xor
jmp
xchg
mov
int3
xor
pmulhw
outsl
jo
sbb
stos
std
sahf
daa
pop
imul
hlt
insl
jle
lahf
add
lods
imul
jg
jmp
jp
aaa
mov
inc
xchg
lods
pop
push
adc
pop
dec
inc
mov
inc
cmpsl
mov
cmp
xor
pop
push
mov
dec
mov
xchg
xor
add
call
lcall
adc
dec
mov
enter
loop
aam
inc
jo
pop
ficoms
leave
push
xchg
imul
sbb
in
imul
ljmp
sbb
dec
adc
push
inc
shl
subb
shlb
sbb
pop
sbb
cmp
pop
push
cmpsl
adc
and
inc
addr16
xor
stc
jno
mov
aad
mov
aam
xlat
aas
pop
cwtl
jae
or
inc
fnsave
add
outsl
clc
decl
cmp
jbe
lock
out
push
cmpsl
mov
fwait
fisubs
leave
add
call
mov
mov
mov
das
push
push
addr16
push
sahf
jge
outsl
mov
mov
sub
mov
fs
jmp
sub
je
leave
sub
push
ss
outsb
insl
negb
mov
call
inc
or
shl
mov
stos
sbb
push
sbb
mov
jne
jle
adc
lods
inc
adc
ljmp
push
xchg
out
fs
out
cs
mov
mov
decl
sub
fwait
gs
inc
mov
mov
iret
xchg
les
xor
in
inc
je
xchg
lret
fmuls
sub
movsb
sbb
adc
xchg
sbb
stos
stos
lds
xchg
ret
add
cltd
sub
fbstp
adcb
or
xorb
lcall
addr16
and
loop
out
aam
and
cmp
std
pop
ljmp
xor
inc
cmpsl
mov
pop
lret
pop
sub
mov
mov
mov
xor
enter
sub
jmp
clc
mov
xchg
jp
mov
cld
sahf
in
int
sub
pop
jno
jg
scas
pop
xor
in
ljmp
dec
push
mov
ljmp
mov
icebp
js
in
sbbl
add
pushf
fs
fdiv
cld
test
xchg
xor
push
jecxz
jnp
sbb
dec
xchg
test
js
xlat
mov
adc
sbb
ffree
es
iret
dec
xchg
shl
shlb
insb
cmp
fbstp
adc
pop
xor
sahf
loope
ret
int
lcall
sub
cltd
ljmp
rorl
push
test
mov
lret
adc
sahf
adc
mov
add
push
ja
mov
mov
or
sahf
inc
sahf
ja
clc
cld
into
lds
dec
jge
sbb
addl
add
out
push
push
jle
cld
mov
push
loop
aad
mov
mov
jae
addb
hlt
jmp
out
sub
and
out
dec
xchg
sub
in
sahf
icebp
xchg
int
and
gs
and
sar
fildll
out
xor
aam
nop
jae
adc
push
jg
and
int3
loop
sti
data16
incl
adc
add
bound
mov
cmp
mov
or
nop
or
cmp
mov
lcall
and
sub
mov
jnp
aam
xchg
sahf
xor
sub
pushl
std
insl
and
jno
popa
pop
stc
adc
jecxz
jl
mov
sbb
or
jg
jp
movsb
loopne
aas
cli
or
mov
iret
hlt
and
mov
xor
pop
imul
jnp
aam
xor
loopne
incl
adc
inc
add
xor
xchg
jp
aaa
lret
insb
or
paddb
ljmp
cmp
bound
lea
mov
jb
cmp
sub
call
jp
sbb
pop
loopne
mov
jb
out
hlt
inc
jg
pop
add
popa
ja
xchg
add
adc
pop
js
dec
jmp
and
repz
lcall
fbld
lods
xchg
rcll
push
adc
sahf
cwtl
int3
or
aad
ret
mov
sar
call
push
cmc
pop
adcl
shlb
scas
jo
xor
inc
cld
cmpsb
jmp
inc
xor
int3
call
repnz
idivb
mov
in
pushl
push
insl
or
dec
mov
lret
pop
xor
repnz
xor
fwait
addr16
sar
sti
sub
mov
bound
je
inc
fcomip
push
data16
mov
or
mov
jno
daa
cli
dec
out
jo
mov
lcall
aaa
loope
mov
jg
fildll
mov
ds
add
xor
repz
shl
mov
scas
and
test
incl
lock
insb
mov
repnz
push
in
in
mov
test
xorb
and
inc
stc
add
xor
xor
add
jb
lcall
push
pushl
repnz
push
lahf
shrl
dec
push
jns
inc
mov
addb
sbb
pop
mov
cli
push
pop
push
je
pop
jno
out
sbbb
std
bnd
jmp
jmp
mov
hlt
mull
adc
push
mov
test
data16
mov
lods
and
stc
mov
mov
jle
dec
jecxz
mov
push
scas
cmpsb
rorb
inc
aam
push
mov
cs
fisubl
cli
out
addl
sbb
inc
xor
test
xchg
out
mov
insl
jg
inc
hlt
sahf
dec
cmp
push
fwait
push
adcb
mov
mov
std
lcall
push
out
xor
or
ljmp
addps
or
std
loop
xor
mov
in
xor
dec
mov
mov
jle
insl
mov
cltd
lahf
mov
in
dec
enter
test
cli
insb
sub
fsubl
or
xchg
loopne
ret
fs
cmp
test
stos
add
push
lcall
mov
call
inc
ja
pusha
sahf
cmp
xchg
imul
pop
cmpb
lcall
enter
adc
push
dec
cmp
lea
jmp
shlb
jg
test
dec
lcall
es
jno
cld
push
daa
jecxz
xor
lcall
pushf
xchg
jmp
dec
je
clc
xchg
xor
pop
dec
jp
nop
sub
in
push
jmp
les
cmp
ret
push
insl
jne
cmp
inc
mov
cmpb
adc
lcall
sbb
xchg
cs
lock
mov
scas
mov
out
jns
ljmp
js
stos
dec
loop
jecxz
shrb
ficoms
pushl
lock
jb
mov
sti
xchg
jnp
adc
aas
sbb
push
andb
jmp
sahf
and
jne
cmp
fisubl
popf
in
shrl
push
lods
lea
data16
sbb
lret
and
inc
outsl
mov
jmp
ds
jmp
int
lcall
pop
movsb
add
aad
bound
adc
pushl
push
or
fsubrp
loop
addr16
movsl
call
ljmp
ss
mov
pop
pushf
mov
call
push
adc
pusha
rol
sahf
xchg
stos
out
push
pop
mov
idiv
incl
fbld
mov
test
ret
xchg
pop
cmp
sti
les
insl
addr16
sarb
mov
incl
or
imul
scas
xlat
and
dec
inc
das
shrl
in
clc
out
adc
mov
dec
add
das
push
fs
popa
enter
inc
jnp
dec
jl
add
hlt
jle
lahf
inc
sub
stos
pop
mov
push
inc
jl
mov
movsb
dec
inc
loopne
jne
inc
imul
mov
jbe
das
lods
call
test
sub
xor
xor
dec
mov
adc
sahf
inc
jae
sbb
mov
add
jmp
cmp
fldt
aad
add
mov
jmp
lods
out
std
ret
popa
loope
push
shr
inc
incl
rcrb
scas
fmull
stos
or
ret
testl
pushl
fldenv
cmp
pop
or
scas
mov
test
cmc
fldl
shr
call
mov
xlat
loope
push
adc
std
xor
cmp
int3
pop
xchg
xor
lret
adc
test
mov
xor
stc
mov
mov
cli
sahf
mov
in
repz
push
hlt
inc
enter
mov
pop
mov
push
and
cltd
imul
iret
clc
push
movsb
xor
repz
push
and
scas
iret
mov
inc
mov
pushf
out
rorb
idiv
decl
mov
cmp
mov
subb
mov
test
xchg
adcb
incl
mov
mov
adc
loop
xor
sbb
sarb
or
mov
push
sub
jge
inc
cmp
mov
out
dec
nop
mov
cmp
pop
std
push
andb
xor
ror
fiadds
into
daa
sbb
xor
sbb
mov
stos
sbb
mov
xchg
adc
loop
mov
clc
fldenv
mov
sbb
xchg
cmp
ljmp
test
fcmovu
mov
xlat
jmp
push
mov
pushl
das
push
jbe
push
scas
inc
add
std
jl
lahf
in
mov
jno
jo
pusha
outsb
or
decl
pop
jle
mov
notb
cmp
push
movsb
into
push
pop
mov
mull
in
jmp
dec
fisubrs
arpl
dec
insb
add
pushl
sub
sahf
pop
and
mov
hlt
jno
and
cli
jg
cmp
test
cmp
lods
fisubrs
or
incl
dec
jb
lea
bound
sti
int3
popa
xlat
sbb
or
hlt
cld
pop
leave
cmp
cmpsl
sbb
dec
mov
sub
lcall
mov
ljmp
cmc
aad
dec
aaa
and
push
jnp
cmc
aam
pop
cmc
jmp
adc
inc
mov
scas
xor
adc
jns
incl
dec
push
pushf
adc
mov
xchg
fs
mov
jns
js
mov
adc
lcall
lods
sbb
push
ficomps
xchg
negb
lods
adc
mov
ljmp
mov
clc
mov
sub
imul
pop
cmpsb
stc
xchg
cwtl
and
sbb
dec
nop
inc
sar
jg
enter
scas
mov
jne
clc
decl
push
outsb
fisubrs
sbb
js
jmp
pop
adc
sbb
sarb
ja
scas
repnz
jle
cmp
test
notb
idiv
inc
dec
mov
pushf
lret
sub
je
lahf
mov
cmpsb
mov
xchg
sbb
cmp
stos
lret
push
cs
and
pop
sub
and
leave
outsl
sub
pop
enter
sub
xchg
je
fldcw
xchg
or
add
pushl
adc
mov
mov
adcl
jg
lock
movsl
mov
adc
xchg
adc
jnp
pushw
es
mov
xchg
add
jmp
xor
repz
and
ret
push
aaa
jne
jmp
outsl
jne
xlat
addr16
mov
mov
inc
pop
repz
outsl
setge
in
push
push
sub
movsb
push
xor
lcall
and
outsb
jmp
stos
mov
and
subl
in
fnstenv
push
scas
jne
pop
sub
cmp
push
jp
mov
andb
ljmp
xor
and
cmpb
clc
push
je
add
loope
sub
call
push
mov
dec
stc
and
mov
or
sub
pushl
dec
in
pop
pushf
jns
fyl2xp1
sub
push
repz
into
adc
scas
int3
mov
mov
mov
sub
decl
nop
insb
push
setb
stos
inc
loopne
ljmp
popf
or
js
jge
adc
call
cld
jo
and
les
jge
movsl
push
mov
data16
decl
mov
mov
int
jmp
mov
pushf
iret
push
xchg
cld
sub
inc
leave
clc
sbb
mov
mov
lods
pushl
dec
xchg
es
inc
jno
es
xchg
scas
or
mov
mov
outsl
decl
mov
stos
into
clc
jne
ljmp
xchg
and
xlat
mov
sub
clc
out
decl
ljmp
inc
repnz
adc
jg
jo
mov
lret
cmpsb
and
cmpl
fs
xlat
jno
jle
fdivr
outsl
clc
fistpll
fiadds
mov
or
fstps
aad
mov
push
stc
jne
decl
sbb
xchg
pop
mov
call
aaa
fxch
xchg
xlat
arpl
jecxz
xchg
sar
out
clc
jmp
xchg
insb
idivl
enter
jae
into
mov
add
mov
push
pop
cmpsl
idivl
bound
inc
hlt
cli
sub
xchg
pop
jns
aas
mov
cs
lods
lods
popa
out
mov
nop
mov
test
pushf
sub
add
xchg
mov
sar
lcall
hlt
sub
repnz
popf
mov
fistl
pop
jp
pushl
cmpb
dec
sub
or
test
cmp
cmpsb
adc
lahf
xor
jmp
addr16
xor
fcoms
or
mov
lods
jb
cmp
sahf
push
ljmp
pushl
lods
and
pop
xlat
repz
bnd
dec
mov
lret
sbbb
iret
in
out
fcomip
incl
lods
sahf
jae
jo
fdivl
hlt
mov
sub
add
out
cmp
movsl
out
jl
or
jp
xor
push
sahf
jo
xor
call
and
fmuls
inc
adcl
lcall
test
inc
sub
adc
rol
push
fistps
movsb
pop
inc
mov
jno
incl
mov
es
fisubs
cmp
nop
scas
popf
loopne
imul
xor
cmp
jne
insl
sbb
sub
mov
sub
inc
insb
outsb
test
inc
and
call
subb
scas
divl
dec
sub
or
pop
and
fildll
pop
es
orb
arpl
push
jle
mov
mov
aaa
mov
loope
or
es
sti
or
mov
das
js
scas
sbb
mov
lret
addl
es
pop
idiv
mov
loopne
jg
sbb
adc
mov
mov
xchg
imulb
push
data16
pop
les
adc
cld
dec
pop
jo
mov
lock
pushl
or
ja
xor
cmp
popa
sti
rorl
jp
decl
push
inc
adc
pop
fs
ror
jno
scas
sti
sub
push
sbb
inc
fists
ss
cmp
scas
cmp
stos
xchg
push
into
iret
btc
fistps
loopne
shll
or
in
mov
into
pop
shl
insb
das
dec
jb
incl
arpl
jb
test
out
mov
mov
movsl
insb
mov
lds
incl
and
hlt
jbe
add
sub
xchg
or
ret
jp
outsl
lock
lcall
adc
mov
mov
push
add
inc
fistps
loopne
arpl
incl
bound
mov
mov
inc
and
ret
pop
push
dec
in
imul
mov
call
pop
jmp
pop
jmp
mov
mov
cmpsl
or
xlat
push
rcr
repnz
push
insb
sbb
jbe
push
negb
out
cmp
pop
mov
mov
sub
lods
out
push
push
call
insl
mov
gs
pop
push
dec
sahf
inc
pop
aam
mov
sub
jp
lret
jmp
out
dec
int3
cmc
lcall
lret
mov
lahf
jno
xchg
test
mov
jl
aas
call
xchg
mov
sbb
mov
push
add
cltd
cmp
and
mov
push
inc
push
inc
push
sahf
dec
jmp
decb
leave
jle
shll
hlt
lock
mov
adc
mov
shll
adc
mov
pop
cmpsl
add
cli
xchg
cmpsb
or
cmp
or
sub
cld
push
fidivs
push
cmpb
and
cli
jbe
pusha
pop
clc
int
lods
cmc
pop
xor
jp
in
aam
jnp
lock
imul
sbb
cmp
insl
subl
sub
push
addr16
cltd
lcall
push
leave
jmp
lods
mov
xchg
jmp
test
mov
shlb
idivb
popa
repz
repnz
stos
in
jo
test
mov
adc
imul
and
push
pusha
aas
sbb
in
pop
push
mov
push
xchg
xchg
cmp
mov
xlat
out
lds
ds
jg
jge
push
adc
xchg
test
out
jnp
jl
add
jp
xchg
add
and
fiadds
jg
rorl
enter
dec
inc
jg
sbb
daa
lret
xlat
push
aam
adc
jmp
jge
ss
repz
lahf
ss
call
push
dec
mov
cmp
dec
xor
push
sub
out
ss
sbb
bts
and
repz
jmp
mov
adc
roll
loope
ret
outsl
and
lds
and
incl
aad
or
fmuls
xchg
imull
add
lods
or
add
incl
mov
enter
dec
mov
mov
mov
icebp
pusha
xor
add
and
dec
or
jg
hlt
in
cmp
test
mov
xchg
dec
pop
dec
jle
push
push
in
cmp
jle
mov
clc
call
mov
fnstsw
push
mov
cmp
sbb
ljmp
mov
lret
daa
cmp
test
inc
imul
test
push
cmpsb
leave
dec
shlb
xchg
jge
bswap
cmp
scas
into
cmp
dec
xchg
movsl
rcr
imul
sub
out
insl
push
int
fnstenv
mov
adc
adc
leave
fistpl
lods
mov
loopne
cli
into
pop
jg
mulb
sbb
push
mov
xchg
outsb
jmp
mov
and
incl
xchg
jb
push
cmp
dec
imul
test
shl
xor
mov
mov
sub
cmpsl
idivb
or
popf
mov
jle
cld
adc
jg
out
jo
in
jno
movsl
ret
ja
mov
mulb
pop
add
xchg
lcall
pop
rcl
shlb
jnp
inc
jo
add
fdivr
loopne
adc
dec
daa
dec
fldl
mov
add
push
ja
sub
add
add
add
or
pop
pop
push
or
or
or
or
or
adc
adc
push
adc
lods
add
pop
sbb
adc
adc
adc
add
data16
cld
push
lods
fisttpll
adc
pop
adc
inc
add
or
add
and
add
sahf
add
les
stc
and
add
das
int
int
mov
cmpsb
loopne
cli
jb
imul
jnp
jge
add
add
push
adc
pop
and
xor
mov
rcll
bound
js
insl
adc
xor
or
rcrb
decl
pop
mov
lods
push
cltd
mov
push
or
and
and
mov
push
adc
or
sub
and
adc
add
shrl
ja
sub
das
mov
inc
lods
push
adc
pop
popa
mov
lods
or
mov
or
xor
adc
shrl
icebp
mov
add
and
pusha
add
scas
fiaddl
or
xor
or
js
mov
pop
les
or
add
lds
cld
cli
and
mov
decl
test
jge
ficompl
cmpsl
xor
mov
test
pop
lahf
mov
movsb
lcall
cli
pop
mov
jg
or
xchg
jg
or
insb
sub
addr16
out
or
push
push
xchg
cmp
mov
repnz
inc
lock
scas
jle
fcmovnu
clc
cmp
fisubrl
in
mov
add
sbb
int3
lcall
mov
push
pop
mov
pop
pop
ljmp
inc
pop
movb
cmpsl
mov
sbb
scas
adc
mov
jg
jo
cld
scas
xchg
test
aam
and
sbb
sarl
jmp
fcom
inc
push
fwait
movsb
jmp
push
lret
push
out
in
and
ss
repz
pushl
mov
pop
lock
std
or
pop
mov
std
jmp
daa
test
aaa
dec
dec
pop
push
out
outsl
loope
loope
rorl
jg
push
cwtl
int
arpl
push
out
or
fcmovnu
insb
push
sahf
pop
clc
sti
jg
jno
lock
jg
inc
icebp
xchg
pusha
jg
sarl
xor
hlt
and
xchg
jmp
sbb
mov
mov
out
pop
jb
mov
mov
push
mov
sub
pop
mov
jl
rorl
adc
xlat
gs
jg
hlt
push
add
stc
loope
aad
outsl
jg
mov
sar
andl
aas
icebp
testb
mov
jg
pop
xor
jns
mov
in
repnz
jno
pop
sub
jg
ljmp
cli
push
inc
sbb
paddb
inc
mov
clc
jb
adc
push
lock
lods
jp
testb
sbb
into
fcomps
sbb
sbbl
loopne
xlat
cmp
test
loopne
cli
adc
aaa
xchg
in
add
es
or
dec
fisttpll
out
aas
std
cli
mov
push
push
idivl
cmp
sub
inc
scas
incl
cmpb
jg
je,pn
sub
jg
imul
mov
mov
inc
es
gs
dec
jns
enter
or
push
pushf
push
scas
xlat
sub
cmp
sti
punpckhbw
cmpsb
orb
clc
sub
sub
cmp
dec
inc
push
sub
xchg
pop
clc
pop
hlt
lret
movsb
add
add
lea
jg
gs
std
xorb
jg
pushl
outsl
adc
ret
das
pop
pop
pop
shlb
mov
sarb
sbbl
jno
or
sarb
std
pop
les
cli
ss
jmp
mov
inc
arpl
stos
mov
and
insl
add
leave
push
scas
loop
lcall
jge
push
shrl
mov
push
mov
adc
and
sbb
xchg
jo
jg
and
out
test
jae
push
iret
sti
cmp
ficoms
aam
sahf
imul
fcmovnu
rorl
insb
stos
arpl
add
cld
call
js
cmp
scas
lods
cld
push
cmp
fistl
mov
adc
push
movsb
xchg
or
mov
stos
dec
lods
xor
sub
cmpsl
scas
popa
in
pop
mov
aam
pushf
cld
aas
clc
jge
jnp
sbb
outsb
mov
sbb
jecxz
inc
adc
decl
mov
adc
adc
push
jo
pusha
imul
add
mov
jg
push
cmp
xchg
mov
cwtl
pop
xchg
ftst
jbe
xchg
and
enter
shrb
shlb
out
aas
stc
add
out
gs
jno
fidivrl
lock
adc
pop
cld
addl
std
les
cli
adc
and
lahf
fdivr
stc
int3
mov
mov
mov
pop
mov
std
loop
shrl
mov
dec
incb
fisubrl
aas
mov
mov
jo
or
cld
inc
or
pop
jg
add
jle
pop
jg
mov
aad
test
mov
mov
adc
or
iret
push
jbe
push
sbb
stos
icebp
pop
std
jg
call
dec
jno
adc
push
inc
jecxz
sbb
sarl
sbb
mov
lods
loopne
and
clc
xorl
mov
imul
mov
push
in
aas
mov
fmull
cmp
push
and
fwait
imul
add
push
sbb
in
or
and
mov
adc
inc
aas
ret
in
push
rcrl
rolb
pop
inc
jb
fistpl
adc
call
lahf
adc
pop
pop
nop
mov
call
repz
inc
sti
arpl
daa
std
or
sbb
mov
inc
cmpsb
popf
push
loop
sbb
or
imul
push
aas
divb
iret
dec
xor
fsubr
fistps
lds
fidivrl
jg
das
ss
stos
pop
add
dec
mov
sub
jge
jbe
ds
xor
lahf
les
sbb
sbb
cld
addl
clc
incl
in
stc
mov
lahf
outsl
int3
push
sbb
pop
imul
pop
test
bound
xchg
cmpsl
out
outsl
xchg
inc
test
in
jge
popa
push
test
aaa
cld
jg
jbe
outsb
hlt
sti
fsubs
shl
dec
jp,pn
adc
lahf
mov
or
mov
clc
daa
out
lcall
shl
cld
mov
test
mov
pop
jg
pop
shrb
rcl
jg
adc
jg
xor
pop
rcr
dec
mov
gs
pushf
cmp
mov
sti
jp
jnp
jecxz
adc
inc
lds
push
pop
adc
dec
mov
imul
or
inc
pop
xor
rorb
and
add
ljmp
cmpsl
push
sbb
mov
pop
inc
cmpsl
enter
mov
into
test
xchg
movsb
insb
or
cwtl
xor
and
xchg
fidivrs
push
mov
aas
repz
sbb
lock
pop
jle
shr
out
sbb
aaa
clc
push
std
mov
and
or
out
sub
cmc
mov
push
mov
fsubrp
dec
sahf
enter
fcmovb
inc
outsl
sub
call
faddl
xchg
lcall
jne
pop
sti
adc
dec
ss
lods
movsb
or
incl
pslld
pushf
imul
jl
in
add
imul
out
scas
cli
pop
in
cmp
jmp
mov
sub
ljmp
lock
jmp
hlt
dec
mov
xlat
inc
jo
inc
aas
mov
jg
mov
sub
outsl
mov
or
daa
jp
std
adc
cltd
or
mov
ret
das
ret
nop
cmp
das
incb
lock
pop
pop
div
cld
adc
push
mov
js
fs
sbb
stc
lahf
loope
jae
jmp
push
das
je
jge
pop
jb
out
xchg
add
out
icebp
mov
loope
mov
jle
insb
sbb
fbstp
cmpsb
bound
das
hlt
mov
out
es
call
xor
decb
pusha
xlat
pop
push
adc
mov
and
call
or
dec
in
loope
or
mov
cmp
int
add
push
pop
aaa
std
out
nop
or
sbb
mov
mov
aas
icebp
ret
inc
xchg
sahf
ror
sbb
aaa
inc
stos
cmp
cmp
shrb
mov
push
clc
loope
loope
mov
lahf
jp
inc
rcl
dec
add
xlat
rcrl
sbb
iret
fdivrl
xchg
lcall
xchg
mov
repz
movsb
pusha
shlb
xchg
sarl
pop
out
jg
jno
ret
fs
cwtl
scas
xchg
cmp
inc
sbb
incl
dec
jge
pop
clc
xchg
cmpsb
ljmp
ds
inc
stos
fs
mov
in
sbb
xchg
imul
mov
js
add
sbb
mov
daa
jmp
faddl
mov
add
xor
push
imul
pop
stc
push
dec
out
fstpt
es
mov
mov
enter
jo
lahf
add
fsts
dec
xchg
push
nop
jl
add
aam
mov
pop
inc
add
push
cltd
mov
mov
dec
push
iret
and
add
fildll
inc
dec
imul
addb
add
incl
or
add
bound
mov
add
mov
scas
insl
add
jg
add
pop
xchg
andl
jg
jns
or
sub
scas
pop
dec
orb
adc
inc
pop
mov
add
and
jle
dec
sbb
add
cmpsl
inc
jno
nopl
scas
push
inc
xor
inc
in
repnz
or
jnp
xchg
repz
fstpt
mov
xchg
dec
and
cmpsl
push
and
pop
rcr
and
movsb
push
movsb
inc
scas
push
enter
stos
push
and
push
mov
mov
test
and
imul
push
inc
pop
pop
add
stc
pop
lds
mov
pop
sbb
add
jg
pop
inc
mov
pusha
sbb
mov
lcall
les
push
adc
fs
mov
insb
or
lret
imul
out
push
leave
imul
imul
out
mov
jbe
fnstenv
fdivs
pop
or
mov
pop
stos
mov
loopne
ss
add
jo
sbb
push
mov
push
shll
add
outsl
push
shll
fidivrl
insl
sub
push
push
ret
je
pop
shlb
out
jge
fisttps
add
fwait
inc
push
mov
push
mov
fdivs
add
mov
shlb
mov
cmp
arpl
push
push
push
add
jne
int
xor
push
ret
add
fsubp
cmpsl
push
mov
push
pop
dec
add
jbe
push
data16
ficomps
jo
xchg
cs
push
jge
mov
shlb
lret
stos
aas
add
out
mov
push
push
xlat
jne
add
cmpb
aad
push
xlat
ja
js
in
cmpsb
jge
push
jns
push
jp
jp
inc
lods
fsubrs
push
fidivrl
sarl
ja
fldl
les
je
fnsave
nop
sub
xchg
sub
xchg
in
xchg
sub
push
pop
cs
xchg
xor
xchg
push
setbe
xor
ss
xlat
mov
push
lcall
push
cmp
pushf
cmp
ds
push
out
popf
xchg
popf
aas
push
sahf
inc
push
out
fimull
mov
mov
pusha
add
fadd
add
cld
out
out
repz
repz
hlt
clc
stc
cli
sti
and
std
incb
jecxz
xor
inc
jae
add
cltd
int3
data16
popa
push
add
pop
xor
add
pop
add
add
scas
inc
push
push
mov
mov
std
fisttpll
nop
add
add
or
add
mov
add
add
pop
or
mov
and
test
test
or
imul
push
sbb
adc
int
push
pop
adc
lods
in
out
lods
add
pop
stos
femms
lods
lods
pop
fcmovnu
mov
push
scas
add
scas
mov
lods
pop
pop
adc
add
and
lods
adc
sbb
outsb
pop
scas
sbb
scas
scas
scas
cmp
jns
scas
sbb
mov
mov
sarl
mov
pop
push
add
adc
mov
popa
add
test
add
and
mov
mov
push
dec
inc
rcrl
mov
mov
pushf
sub
push
and
mov
mov
or
pop
sub
mov
push
leave
pop
or
mov
jg
and
mov
mov
es
inc
loopne
pop
pop
aas
cmp
int
and
cmp
pop
roll
pop
aaa
cmpsb
add
insb
sti
incl
mov
pop
xor
pop
or
or
std
int3
in
push
add
pop
pop
xor
mov
mov
das
push
cs
xor
add
xor
das
pop
push
push
xor
jmp
cs
dec
inc
das
inc
inc
xor
adc
push
xor
push
push
lcall
pop
cmp
jl
jge
jno
outsl
add
pusha
pop
pushw
dec
dec
cmpb
decl
mov
inc
xorl
mov
xchg
xchg
xchg
popf
pushf
fwait
lcall
xchg
mov
test
xchg
xchg
sub
dec
ja
test
je
push
bound
js
adc
push
xor
jne
je
add
adc
inc
add
andb
cmp
mov
push
add
scas
imul
std
jg
adc
jb
mulps
add
mov
std
out
mov
cmpsb
push
mov
xor
xor
and
push
ja
jb
cs
xor
mov
sti
mov
add
mov
and
dec
mov
ja
mov
xchg
jo
aam
mov
inc
mov
cmp
mov
inc
add
jae
mov
inc
push
popf
inc
mov
aaa
add
xchg
mov
lahf
stc
jno
lret
push
bound
mov
mov
cmp
lahf
inc
inc
push
sahf
mov
insb
addb
xchg
outsl
leave
xchg
xchg
pop
push
test
cmpsb
dec
push
dec
push
insb
ljmp
movsb
jae
add
jb
shll
outsl
das
push
movsb
or
pushf
push
pop
add
fwait
out
cmp
add
lcall
outsb
mov
decb
ja
sahf
jbe
fistpl
imul
std
add
ds
push
add
and
es
js
lret
mov
out
mov
shrl
insb
pop
outsb
push
outsl
mov
iret
push
ds
jno
add
jge
shll
fiadds
call
lods
push
lock
add
xchg
data16
mov
es
bound
out
arpl
mov
mov
jb
inc
mov
in
push
jle
or
jecxz
or
fiadds
fnstcw
aad
push
divb
fildl
pop
ficoms
push
subl
sbbl
sbb
sbbl
test
jmp
faddl
in
mov
push
pop
mov
int
pop
nop
and
out
xchg
in
xchg
pusha
add
mov
sub
imulb
outsb
out
xchg
das
push
xchg
repnz
xor
cwtl
push
cmc
sahf
xor
push
lcall
cmpsb
pop
cmp
xorb
cmp
aam
inc
call
push
cmpsb
scas
jo
test
sahf
sbb
pop
jbe
stos
into
shll
add
mov
mov
sar
insb
fiaddl
push
rcr
rcl
mov
push
aad
jle
data16
add
shr
and
push
dec
dec
and
out
je
dec
push
pop
add
xchg
test
enter
push
or
or
or
es
add
notl
pop
push
adc
push
add
add
testb
mov
sbb
add
mov
adc
or
cwtl
sbb
mov
sbb
add
push
add
and
fildll
mov
and
cs
mov
aas
and
pop
imul
aas
xor
or
aas
aas
inc
sahf
sub
cmp
cmp
and
cmp
paddsw
jbe
adcl
incl
jle
cmp
imul
ds
mov
mov
repz
aas
adc
ds
data16
out
mov
decb
test
ror
add
mov
pushl
lds
add
pop
lods
stos
test
cmpsl
cmpsl
cmpsb
adc
sbb
test
test
in
das
sub
lcall
sub
sub
add
add
in
insb
sbb
ss
and
fildl
ds
push
push
push
push
push
push
imul
push
pop
push
push
push
imul
das
pushl
jne,pt
fwait
cwtl
xchg
pusha
xchg
nop
cltd
mov
mov
aas
std
incl
nop
test
insl
popf
mov
jge
jns
jns
jle
jmp
test
jb
jae
jo
outsb
pushf
sti
popf
shlb
mov
loopne
push
andb
addb
add
add
push
cs
or
xor
jl
push
add
cmc
repz
dec
xor
sub
add
xchg
pop
cmp
test
add
mov
pushl
pusha
inc
add
mov
push
mov
fnstsw
repnz
rol
xchg
es
mov
insl
adc
jecxz
pushf
add
mov
push
in
lcall
bound
push
arpl
mov
push
mov
dec
lret
js
into
xchg
add
pop
add
mov
mov
test
scas
xchg
js
in
and
out
es
insl
repz
nop
sub
sub
nop
sub
pop
xchg
das
push
xchg
xor
xchg
xor
xchg
outsb
lcall
es
jbe
negl
int3
out
int
int3
fst
es
push
lret
loopne
push
test
cld
push
std
into
fdivrp
insb
lea
add
test
data16
add
jle
jge
pop
mov
dec
xchg
dec
dec
dec
dec
and
inc
decb
or
pop
or
add
push
dec
or
adc
cmp
mov
fcmovnu
adc
dec
or
add
push
adc
add
in
std
inc
inc
or
pop
pop
cmovg
inc
push
lahf
mulb
dec
sbb
inc
adc
inc
inc
adc
pushl
dec
dec
add
dec
adc
inc
ds
cmp
cmp
and
cmp
and
daa
and
sbb
and
mov
add
dec
ss
xor
sub
jle
xor
scas
or
mov
add
mov
dec
mov
mov
mov
mov
or
sbb
mov
sbb
adc
mov
xor
out
add
and
pop
outsl
mov
cmpsl
mov
rorl
into
incl
loopne
and
jmp
test
push
es
sbb
outsb
sysret
shrl
pop
mov
add
ds
jmp
xchg
pushf
cmp
in
lock
add
xorps
jg
rorl
adc
pop
aaa
outsl
adc
pop
push
pop
mov
add
xor
sbbl
mov
out
cli
mov
cli
call
pop
les
add
pop
jg
and
add
addr16
xor
mov
adc
jg
sti
jg
add
mov
das
sti
mov
xchg
sbb
cli
jle
mov
inc
loopne
dec
sti
jg
adcl
xchg
adc
push
adc
push
mov
push
adc
jg
cld
jg
mov
nop
cld
mov
mov
roll
std
jg
and
into
jg
jns
and
jg
push
adc
or
xor
and
jle
push
add
inc
xor
and
sub
incl
addr16
inc
lods
decl
rcll
incb
sbb
pusha
data16
popa
xchg
sbb
jg
dec
add
incl
add
lea
jg
inc
insb
or
push
jbe
fsts
pop
add
jmp
int3
push
test
lret
sub
xchg
shrb
je
push
jmp
lods
scas
inc
cmpb
imul
addr16
inc
pop
jle
mov
inc
pop
imul
stos
movl
jbe
push
andl
rorb
jg
jg
mov
sub
inc
rorb
inc
outsb
jg
decl
bound
mov
and
incl
mov
movb
pop
mov
dec
jg
jle
aam
jne
fdivrp
cmpsb
in
sub
pop
push
stos
pop
stos
pop
pop
insl
fcmovnu
cmp
pop
daa
aas
aaa
mov
mov
pop
pcmpgtb
lods
jle
add
push
inc
push
mov
mov
lods
adc
adc
jle
push
fucompp
sahf
rorb
bound
add
mov
push
mov
mov
push
arpl
pop
fisubl
ret
pop
push
mov
test
out
mov
sub
dec
decl
decl
out
scas
dec
je
adc
or
jle
mov
push
dec
mov
fnstenv
add
push
jne
cltd
fdivrp
ja
push
jbe
adc
jnp
push
jp
out
insb
fwait
decb
js
dec
jbe
pop
add
popf
jmp
adc
es
mov
push
push
outsb
inc
test
ljmp
test
jp
dec
incl
xor
scas
call
popf
push
push
cs
call
dec
call
sahf
jns
test
fiadds
fldt
mov
push
mov
je
mov
jbe
sahf
inc
out
sbb
cmp
mov
xchg
cs
aas
popf
inc
push
pushf
cmp
or
mov
mov
mov
xchg
xor
xchg
xor
sub
sub
nop
daa
ss
cs
nop
fucom
sub
outsb
or
push
decl
xor
push
jg
pop
pushf
push
xor
fnsave
xor
inc
lcall
push
jbe
int3
or
es
mov
add
adc
test
push
in
sahf
sbb
xchg
movb
xchg
adc
mov
add
add
nop
fsubs
push
testl
cmpb
je
outsl
add
and
dec
add
repnz
or
add
push
adc
or
jns
pop
push
orl
lea
dec
sbb
inc
and
cmp
lock
mov
pop
cmp
sti
pop
test
or
mov
shrb
pushl
add
out
pop
cmp
or
jmp
je
or
jnp
adc
push
sbb
xor
adc
push
divl
add
sti
xchg
std
sar
push
sub
jmp
syscall
mov
sub
xchg
insb
push
sbb
pop
xchg
dec
sar
es
lcall
or
mov
sub
daa
cld
pop
das
pop
push
inc
fildl
add
push
adc
out
sub
and
vpcomub
lcall
or
pop
adc
xor
adcl
ds
mov
ljmp
or
inc
incl
sahf
or
lret
sub
jmp
int
add
mov
cmpsb
call
sbb
sub
ljmp
jp
xchg
out
add
sub
inc
dec
mov
nop
pop
adc
iret
data16
incl
imul
out
mov
or
pop
add
xchg
jo
or
incl
in
push
and
xlat
ficoms
nop
decl
sub
or
sti
inc
pop
in
in
std
ljmp
or
mov
call
call
jmp
sbb
pop
cmpsl
pop
in
mov
pop
stc
lgdtl
call
jg
cmpsb
mov
out
cli
notb
loop
inc
pop
mov
cwtl
inc
call
dec
push
jmp
call
es
addl
rcll
lods
mov
xorps
adcl
mov
xchg
mov
push
mov
inc
and
push
dec
sahf
dec
out
adc
call
adc
out
fldcw
ljmp
lahf
inc
inc
push
inc
fidivl
pop
mov
fcoms
sahf
movsb
dec
push
stos
push
leave
mov
cmpsb
dec
dec
inc
scas
imul
out
add
cmpsb
add
push
and
out
push
sbb
jl
shrb
rcl
outsb
shrb
shlb
jb
push
in
dec
imulb
push
iret
insl
cltd
out
int3
push
pop
daa
outsl
pop
imul
notb
push
movsb
sub
push
ljmp
ljmp
lcall
inc
dec
dec
pop
add
repnz
aam
push
jmp
and
fildl
pushf
cmp
aas
decb
cwtl
xor
lahf
push
inc
push
xchg
insl
mov
xchg
push
push
aaa
push
lcall
jmp
es
xchg
xchg
xchg
notb
sub
xchg
aam
pushl
dec
scas
incl
shrb
data16
ds
ljmp
mov
push
add
fidivl
aad
or
faddl
xchg
fstpt
push
jnp
jp
or
dec
rep
push
jl
or
jl
push
jge
xor
push
movq
es
jbe
adc
fcmovu
mov
push
dec
push
dec
repnz
repnz
jae
pop
fiaddl
pop
push
mov
jnp
jge
or
add
int3
outsb
nop
mull
pop
adc
pop
mov
stc
sbbb
rclb
outsl
mov
push
adc
adc
int
out
in
push
addb
jnp
lahf
dec
es
addl
orb
gs
pop
inc
in
xchg
and
push
sub
iret
out
mov
cli
call
clc
push
idiv
call
jb
sub
jg
mov
icebp
ret
ss
pop
cld
and
sub
jg
mov
icebp
ja
ret
xorb
push
jns
repnz
mov
inc
cld
jp
es
xchg
xor
sbb
dec
and
andb
sbb
in
sarb
stos
push
pop
ja
jmp
and
jge
mulb
push
lcall
push
nop
cs
fsub
pop
push
dec
adc
int3
decl
push
jle
mov
fidivrl
arpl
clc
jbe
int3
cmp
push
pop
movsb
fnstsw
movsb
push
pop
or
dec
ljmp
sti
and
lcall
jns
shl
ss
subb
mov
jmp
xchg
jmp
mov
push
xchg
mov
pop
test
loop
adc
xchg
out
sbb
loope
and
stos
in
dec
jg
out
mov
or
cmp
inc
add
ja
cmc
in
daa
cmc
inc
or
pminsw
icebp
push
push
mov
or
add
mov
jp
add
add
mov
adc
loop
and
push
inc
lahf
orb
push
lret
adc
shlb
rclb
dec
sbb
sbb
xchg
push
push
cmp
into
pop
push
sbb
in
ja
add
push
sbb
push
or
imulb
xor
or
inc
or
and
outsb
or
push
stos
mov
addb
nop
adc
and
inc
inc
movsl
inc
add
mov
and
roll
sbb
sbb
orb
jl
mov
add
adc
jb
gs
inc
cmp
pop
inc
into
ficompl
push
dec
mov
or
addr16
adc
ljmp
ljmp
int
insb
push
ss
das
adc
cltd
adc
shrb
data16
mov
jb
push
imul
clc
cmpsb
test
push
popa
imul
pusha
sub
sub
scas
sub
inc
hlt
jb
cmp
loopne
adcl
xchg
out
or
and
mov
and
movsb
pusha
jbe
jno
push
shlb
fists
xchg
inc
mov
insl
lea
push
jo
adc
push
test
outsl
sbbb
cmc
inc
push
mov
aaa
push
repz
or
dec
sbb
push
dec
in
push
addl
sub
loopne
subb
and
lods
cmpsl
jmp
cmp
shl
jo
popa
addr16
push
push
std
outsb
jbe
jp
xor
pop
mov
stos
inc
xor
jo
mov
inc
mov
jnp
or
jne
push
pushw
sbb
cmp
ljmp
pop
inc
push
push
ja
outsl
loope
cwtl
adc
je
cmp
sub
pop
stos
jmp
pop
pop
cmpl
imul
jns
pop
insl
cmp
jge
mov
mov
lea
push
push
push
outsb
shr
push
add
fildll
jnp
fsubp
xor
sbb
jb
aas
fmul
push
lcall
sahf
incl
fs
push
adc
sbb
mov
outsl
ljmp
outsb
fs
inc
mov
dec
mov
rcrb
pop
jo
negb
lcall
mov
or
mov
imul
das
sbb
cmp
mov
sbb
pop
movsl
sbb
push
sbb
sarb
pop
sbb
dec
jae
movl
push
ret
mov
icebp
dec
inc
dec
fistl
inc
lods
roll
loopne
jl
push
lea
out
leave
lods
xorb
adc
into
push
jns
out
ret
loopne
fdivs
fiaddl
fdivrs
jle
push
mov
push
cmp
push
popa
daa
jge
scas
subl
xchg
and
fimuls
aas
push
addr16
and
xor
push
sti
fadd
dec
mov
push
or
je
push
fcoms
cmpsb
xchg
in
insl
sbb
sbb
lret
bound
in
inc
jne
sub
sub
popl
sub
sbb
xor
insb
adc
jns
inc
loope
sub
dec
outsl
add
add
mov
push
adc
rclb
pop
add
push
xor
xor
xchg
nop
sub
cmp
je
xor
sbb
adc
sbb
scas
imul
xlat
in
and
ja
mov
je
insb
repz
mov
pop
stc
ja
ds
mov
repz
mov
sarb
push
mov
lods
stos
fsts
lea
lods
pusha
adc
mov
scas
mov
jmp
push
xor
push
cmp
arpl
flds
jo
cmp
test
dec
test
mov
pop
in
jae
xor
in
or
subb
mov
add
pop
roll
ds
sub
imul
push
inc
fucom
ss
sbb
popa
mov
cmp
add
sbbl
rcrl
movsb
and
mov
lock
jns
clc
lock
cmp
pop
shl
scas
gs
pop
mov
sub
xor
cmpsl
adc
add
xor
add
ss
xchg
gs
inc
rol
mov
fwait
ja
and
jns
cmpsl
shrl
arpl
lods
test
iret
sub
sbb
sub
sub
sbb
xchg
pop
sub
mov
imul
dec
mov
mov
pusha
push
push
push
mov
test
and
xor
es
push
pop
imul
addr16
loop
cmp
aas
jae
cmp
fidivrs
and
into
sub
and
testb
cmp
mov
sbb
lret
ds
dec
sub
pop
imul
inc
movsb
inc
insb
sub
pop
pusha
aam
push
fstpt
push
jb
inc
mov
inc
inc
xlat
lret
jl
inc
fs
inc
imul
xchg
sbb
insb
push
sbb
xchg
mov
cmpsl
scas
dec
adc
xor
sbb
popa
das
push
outsl
sub
push
ss
cmp
stos
dec
hlt
and
imul
jp
xchg
mov
and
pop
dec
jne
jns
push
sti
into
mov
add
and
push
hlt
data16
into
push
mov
lea
inc
xor
jge
mov
push
push
pop
js
pop
lret
xor
mov
adc
add
mov
outsb
outsb
inc
sbb
sub
pop
and
sbb
jb
mov
dec
and
aad
add
das
mov
lcall
lahf
xchg
push
int3
shlb
add
add
sbb
mov
cmpsb
imul
sub
xor
jnp
or
push
adc
or
mov
fidivl
es
cmp
inc
jo
loopne
inc
add
or
cltd
lock
jmp
movsb
and
adc
repnz
pusha
sbb
cmp
cmpsl
inc
jae
out
mov
dec
rcr
sbb
imul
cmp
pop
data16
pop
push
test
mov
scas
mov
sbb
stc
xor
in
test
and
inc
sbb
dec
fwait
ret
mov
push
ret
stos
sbb
or
inc
pop
push
adc
add
and
push
inc
mov
test
das
ror
jno
scas
hlt
mov
lcall
jne
sub
andb
jo
divb
push
aas
xlat
pusha
inc
cmp
cmp
pushf
dec
js
cmp
js
push
xchg
les
imul
imul
in
popa
adc
inc
fcmovnu
shlb
xor
mov
jmp
addl
sub
mov
dec
jg
out
mov
mov
xlat
inc
xchg
xorb
xor
pop
shll
adc
test
arpl
and
push
enter
push
push
adc
icebp
pop
lret
aaa
outsl
and
jecxz
fadd
mov
xor
jbe
xchg
cmp
adc
insb
or
shll
xor
push
mov
js
outsb
cmovns
inc
push
fisubl
nop
inc
daa
movsl
sub
push
dec
mov
add
inc
fisubl
test
xor
pop
push
jg
xor
imul
inc
adc
sbb
mov
nop
fs
mov
inc
fdivrs
sbb
dec
and
inc
cmp
mov
fs
out
xchg
jne
pop
push
cmp
and
loope
jo
shll
aas
scas
inc
push
push
jne
xor
fidivrs
pop
dec
mov
add
inc
push
sbb
in
mov
and
push
push
adc
repz
dec
mov
xchg
incl
sub
ss
mov
mov
sbb
push
or
mov
jbe
add
cmp
out
inc
test
adc
dec
ja
imul
shll
add
aaa
test
shrb
sub
push
pushf
movsb
addb
rcl
inc
push
dec
movsl
dec
aam
lock
pop
fsts
insb
xlat
lret
dec
insl
pop
cmpl
or
enter
out
mov
nop
add
sbb
push
adc
mov
xor
out
xchg
ficompl
nop
mov
idiv
sbb
inc
or
adcl
dec
or
jmp
push
aam
scas
xor
push
mov
mov
pop
ret
mov
adc
pusha
lods
add
dec
push
jo
cs
insl
ret
xlat
add
and
jb
es
clc
lea
testl
cs
add
adc
push
dec
rcrb
jb
push
xlat
out
push
xchg
xor
xchg
push
lods
lock
push
mov
or
inc
inc
ss
jg
mov
and
xchg
test
add
add
add
add
pusha
mov
lea
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
lock
add
enter
add
